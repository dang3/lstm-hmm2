in
mov
in
mov
movl
mov
inc
add
and
ret
int3
add
in
add
add
movl
push
sahf
cmp
test
cwtl
push
push
lea
jg
push
call
add
cmp
std
mov
fscale
push
scas
mov
fsubs
lahf
inc
test
mov
lods
frstor
cmp
mov
out
int
xchg
and
push
sar
push
push
xchg
xchg
jo
xor
pusha
testl
xor
mov
xchg
mov
pop
push
rorb
js
push
shlb
insb
xor
lea
into
inc
sbb
loopne
iret
gs
push
xchg
out
test
push
enter
mov
or
je
add
cmp
push
xchg
mov
jmp
insl
out
test
movzwl
mov
divl
mov
imul
in
out
cmpsl
dec
je
int3
loope
nop
fsubl
addr16
push
cmp
mov
test
pushf
pop
sbb
push
test
inc
inc
sub
mov
jmp
mull
xor
dec
inc
dec
repnz
mov
pop
jb
mov
mov
in
adc
pusha
rol
cli
fsubl
mov
dec
add
cmp
lods
dec
or
inc
cmp
add
mov
adc
popf
repnz
stos
sbb
mov
adc
lock
pop
mov
add
mov
loopne
std
or
jl
nop
mov
mov
fnsave
aas
xchg
lea
pushf
inc
cmp
xchg
mov
dec
xchg
inc
sti
inc
cmp
add
adc
subb
insl
insb
xor
fiaddl
dec
push
push
pop
xchg
inc
subl
push
mov
push
lahf
inc
push
lret
cmp
inc
push
lcall
cmp
mov
mov
sub
addr16
mov
jne
jno
add
or
dec
mov
jle
in
xor
lock
or
enter
loopne
in
shl
enter
pusha
cmpsb
pushf
inc
or
mov
mov
push
int
aam
or
aam
rclb
dec
aam
inc
jae
lea
push
jo
insb
sbb
loopne
clc
xorl
inc
mov
fs
xor
mov
fnclex
xor
push
rolb
sbb
adc
call
sub
jno
pushf
in
push
cmp
pop
jmp
dec
fsubrs
pusha
aas
jo
sbb
mov
xchg
adc
clc
push
ret
or
dec
fcoms
mov
es
dec
in
les
sar
fs
inc
push
cmp
dec
mov
cmpsl
xor
and
adc
scas
insb
jb
and
je
js
adc
mov
sbbb
je
movsl
movsb
popa
jns
inc
fs
push
cmp
cmp
lahf
xchg
pop
push
mov
sbb
xor
mov
xor
setle
std
adc
pop
add
adc
push
sbb
test
orl
cmp
movsb
or
fcoms
mov
add
mov
sub
inc
rclb
cld
mov
mov
cmp
mov
sbb
sub
add
or
jnp
push
outsb
dec
adc
jle
leave
sbb
cld
cmp
jne
aaa
sbb
sub
cmpsl
insb
lret
inc
nop
lahf
jmp
xchg
adc
push
xchg
jae
movsb
subl
test
xor
movzbl
cs
cmp
add
ds
lret
inc
add
fwait
mov
pop
or
mov
push
push
mov
and
jmp
add
mov
movsb
movsl
inc
adc
adc
dec
push
cmpsb
shlb
std
sbb
popa
pop
les
add
insb
shrb
cmp
sub
inc
push
adc
faddl
adc
into
push
sbb
jae
cmpsl
rorb
sbb
aaa
sbb
cmp
or
or
int
into
popa
js
dec
pop
iret
out
mov
mov
les
and
pop
lea
in
xchg
sbb
mov
xchg
or
mov
and
lcall
insb
rolb
mov
aas
stc
jo
sbb
add
jb
push
fmuls
sbb
nop
dec
adc
rcl
mov
mov
mov
es
sbb
mov
ret
ret
ficoml
inc
das
cmpsl
movb
int3
js
push
inc
lock
push
or
mov
xchg
pop
ret
mov
add
or
outsb
jp
add
ret
adc
mov
cwtl
jl
adc
sti
daa
xchg
cli
insb
xchg
push
rolb
cmpl
mov
rcll
pop
popf
and
shrb
push
test
cmpsb
std
jp
and
mov
or
xor
std
xchg
xchg
or
test
gs
clc
dec
les
gs
inc
clc
fistl
insb
rclb
and
dec
sarb
int
popa
and
push
mov
jno
push
fsts
mov
loopne
stos
jge
xchg
xor
dec
jae
test
inc
xorl
jbe
clc
mov
stc
push
int
in
enter
sbb
sub
loopne
cmpsb
inc
fmul
mov
adc
fs
iret
inc
mov
dec
adc
pop
js
push
pop
fs
or
fisubs
xor
arpl
in
add
je
lods
lahf
or
ret
pop
cltd
psrlq
test
lahf
mov
push
in
mov
jae
testl
icebp
lock
add
add
mov
fsts
xor
xchg
mov
gs
or
popf
push
gs
sbbb
adc
sub
icebp
sub
push
inc
in
mov
loopne
int3
sbb
xchg
pop
jl
jnp
inc
sbb
mov
adc
sbb
inc
xlat
xchg
in
adc
add
jge
and
xor
and
sub
inc
aad
outsl
in
lcall
jl
fsts
ja
mov
adcl
adc
inc
roll
cmp
sbbl
subl
sbb
arpl
sbb
xchg
movsb
sbb
adc
jl
mov
xchg
test
pop
sbb
pop
shll
sbb
jge
add
mov
sbb
aam
adc
mov
add
fsubrp
out
iret
sub
sbb
jne
pop
sub
push
pop
mov
add
das
xor
pusha
xlat
lock
sbb
mov
test
gs
stos
mov
mov
sub
movsb
inc
add
mov
push
adc
xchg
or
mov
fidivl
mov
out
inc
jo
test
nop
cld
les
mov
dec
push
inc
and
sbb
xor
outsb
xorl
jmp
daa
sub
fmuls
mov
xorl
sub
sbb
push
mov
push
push
mov
mov
sbb
sbb
fsubl
inc
sahf
adc
inc
xchg
cmp
shll
lea
lds
je
shl
or
js
push
arpl
sbb
add
movsb
jecxz
scas
xchg
test
adc
xor
mov
push
mov
cmp
insb
mov
sub
and
fdivrp
lea
insl
bound
dec
fs
daa
push
cmc
movsl
jb
fsubrl
je
subl
ljmp
jns
cmp
mov
mov
mov
pop
mov
adc
dec
add
sbb
jecxz
mov
test
mov
mov
mov
movsb
es
shll
add
in
cs
push
jge
dec
imul
stc
shl
ds
or
iret
push
xor
inc
js
test
mov
cmp
je
dec
in
jb
and
jb
jnp
or
push
jecxz
cmp
repnz
dec
jo
mov
cmp
mov
fistpl
jg
out
ret
inc
cli
or
or
fwait
sbb
add
in
in
je
sahf
jge
add
inc
add
fwait
xchg
repz
add
data16
gs
mov
cs
loope
shl
mov
icebp
mov
in
push
push
repnz
push
mov
push
leave
push
in
sub
lret
push
rol
xor
inc
outsl
add
loopne
out
adc
adc
in
andb
test
dec
push
movsb
inc
call
push
push
jno
cs
test
add
push
jnp
in
cmp
mov
xchg
mov
mov
and
mov
sbb
imulb
and
fdivs
lea
neg
sbb
mov
and
push
mov
mov
push
push
mov
mov
in
sbb
addb
and
sbb
mov
bound
movsb
or
cmp
mov
into
dec
sub
cmpsl
push
pop
xor
lcall
fidivl
mov
xchg
js
and
or
add
cmp
add
lea
cmc
mov
mov
cltd
test
pop
cmc
pop
rolb
sub
mov
add
sbb
sarb
rolb
and
rol
vpacksswb
pop
js
add
fcmovnu
js
js
or
inc
mov
test
int3
jg
or
arpl
jno
cmc
adc
xchg
pushf
cwtl
and
movsb
sbb
mov
ljmp
adc
mov
aaa
mov
nop
sub
imul
mov
inc
inc
jbe
lock
daa
pop
pop
shrb
out
rcrb
push
fiaddl
dec
pop
mov
lods
popw
test
and
pop
sub
or
inc
and
lods
adc
mov
mov
int3
sbb
push
lahf
cmpsl
notb
in
sbb
and
es
xorl
jb
and
lock
jle
mov
fcoml
or
or
mov
inc
xchg
adc
add
sbb
and
sar
and
movb
sub
sbb
sub
lea
sbb
ficoml
push
or
add
add
or
xchg
xchg
or
stos
xor
lods
xchg
lret
lds
lret
ret
fld
or
and
lock
mov
test
mov
fistps
cmp
inc
std
shrl
into
and
test
sub
sbbl
cmpsl
loope
sub
lea
push
pusha
push
insb
adc
hlt
in
rcll
call
adcb
xchg
test
mov
mov
jl
cmp
fs
lock
shl
pop
sbb
mov
push
mov
inc
cld
push
inc
incl
inc
enter
js
add
scas
fidivrl
pop
push
outsl
push
cld
ret
dec
pop
out
mov
mov
aam
pusha
filds
jg
or
push
cmp
jp
cmpl
loope
cmp
adcb
lea
mov
pusha
dec
push
mov
push
push
inc
or
push
jle
inc
xlat
cmpsb
inc
add
or
pushf
stos
jmp
add
sti
std
iret
and
xchg
dec
push
cmp
jge
sub
sub
clc
mov
sbb
jno
sbb
and
cld
jbe
popf
fisubrs
or
in
int3
jmp
shl
aaa
leave
lcall
mov
jbe
filds
pop
add
add
test
call
or
xchg
lock
jnp
loop
push
enter
or
sti
xor
jge
jne
push
adc
loopne
dec
loopne
sub
jle
pushw
js
inc
adc
and
loope
fndisi(8087
sub
cwtl
jmp
jae
inc
imul
push
les
fsubrl
aam
ja
in
sbbb
xchg
jmp
or
loope
mov
push
add
push
xor
decl
inc
hlt
xchg
bound
mov
and
jne
je
push
es
lods
insb
clc
push
mov
lret
cmpl
and
mov
out
xor
aam
rcl
rorb
adc
or
jmp
popa
mov
fsubrl
call
add
adc
add
outsl
ss
int3
xor
shr
cmp
outsl
clc
add
add
xchg
inc
jmp
cmpsl
push
hlt
push
adc
je
cmp
or
mov
push
hlt
and
adc
ja
out
aaa
and
adc
push
push
mov
push
sbb
dec
ret
mov
cmp
aam
or
mov
mov
dec
icebp
movl
adc
mov
jbe
xor
jp
pop
add
or
push
pushf
cmpsb
loope
pop
or
add
sub
mov
inc
add
fdiv
daa
repz
xor
inc
enter
int3
dec
xchg
aad
mov
add
rclb
add
mov
js
out
push
fwait
mov
jge
push
jne
push
cld
je
jbe
cmp
sbb
push
and
call
sbb
and
in
cmp
lret
cmp
or
jae
insb
cld
jge
inc
int
aas
sub
hlt
in
add
jae
hlt
leave
out
in
mov
imul
and
cmp
mov
sbb
lock
inc
sbb
pusha
fdivs
push
lock
adc
call
outsl
in
cmpsb
or
and
mov
mov
hlt
cmp
jne
cmpb
shlb
test
sub
sub
dec
add
adc
fcmovbe
and
push
call
int3
rcr
je
or
fs
cmp
xchg
stos
fdivrs
adc
outsl
mov
pop
jmp
cli
dec
sub
sub
add
push
adcb
adc
push
push
dec
mov
xor
mov
arpl
inc
sub
adc
sub
mov
xor
loopne
adc
push
in
out
addb
pop
dec
xchg
dec
movsl
nop
mov
adc
pop
orl
insl
gs
lds
stc
and
dec
aaa
mov
rorb
dec
sbb
or
mov
xchg
push
sub
pop
in
or
mov
pop
adc
pop
push
cltd
mov
lds
in
or
mov
and
out
or
stos
outsl
inc
ss
gs
sub
adc
loope
ror
mov
sub
sahf
dec
inc
inc
jno
js
xor
cmp
fmul
or
cmpsb
cmp
add
pop
cmp
inc
inc
or
push
xchg
mov
push
cs
adc
and
mov
outsb
es
or
pop
ret
loope
push
inc
sub
or
std
mov
or
xchg
dec
xchg
push
mov
xchg
xchg
xchg
test
clc
xchg
mov
fsub
imulb
mov
nop
xor
int
mov
inc
les
inc
out
popw
mov
or
jge
mov
cmp
test
cmp
adc
int3
orb
push
xorl
andb
push
cmp
cmp
jo
jns
enter
jnp
mov
sbb
jp
jg
sub
sbb
inc
lock
or
mov
cmp
jae
pushf
pop
pushf
stc
add
test
mov
clc
push
jbe
out
or
add
pop
das
imul
adc
mov
das
stc
or
testl
adc
loope
xlat
jo
dec
or
xchg
mov
push
and
and
xlat
roll
or
das
mov
xchg
popa
push
sub
mov
mov
sbb
nop
fs
or
and
lds
repz
bound
das
push
pop
and
sbbl
js
and
call
sbbl
in
and
or
lock
inc
xor
xchg
mov
push
or
add
adc
out
pusha
test
mov
adc
mov
cltd
inc
sub
xor
fimull
aas
addr16
dec
jl
sub
ret
filds
mov
lea
out
in
cmp
test
and
push
movsb
mov
mov
inc
lahf
adc
mov
jge
add
xor
push
mov
into
or
jae
mov
cwtl
xlat
jl
sbb
mov
cmp
mov
test
aas
sbb
mov
add
push
dec
addl
clc
jns
adc
ljmp
aam
or
jbe
das
js
mov
mov
adc
loope
sar
adc
into
lock
dec
sbb
imul
sbb
pop
mov
dec
xchg
inc
out
in
or
data16
dec
dec
js
and
mov
insb
es
adc
dec
or
push
out
mov
or
pop
sub
int
mov
mov
add
enter
cmp
mov
cwtl
dec
mov
ret
pop
sub
vpackssdw
push
es
jne
in
fdivs
mov
shrl
or
adc
loop
adc
lcall
dec
cmp
jae
mov
mov
arpl
adc
mov
cmp
pushf
mov
cmp
rolb
adc
sbb
mov
in
out
xchg
mov
mov
mov
sub
sbb
mov
and
mov
mov
inc
lret
sahf
xor
imul
cmpsl
outsb
rol
sarl
das
into
mov
push
or
mov
lods
les
dec
lods
lods
mov
outsb
or
lcall
movsb
stc
jg
test
test
sub
movsb
lock
mov
push
jne
lods
jmp
jbe
add
fwait
cmp
jns
jecxz
in
mov
sbb
lcall
push
enter
fldcw
dec
in
test
test
mov
scas
mov
fistps
sub
pop
clc
inc
ret
cmpsb
push
cli
movsl
movsb
sub
xchg
rolb
adc
mov
push
jecxz
cmpsl
les
sub
cmp
enter
fdivrl
test
adc
int
mov
es
or
or
sbb
mov
mov
sbb
mov
mov
and
mov
scas
test
xor
and
lcall
shlb
xchg
dec
mov
mov
je
and
in
shll
sub
js
xor
je
sub
inc
jecxz
in
lret
adc
movsl
in
es
dec
cs
fsub
fdivrl
pop
mov
or
dec
dec
sti
inc
jo
icebp
mov
loopne
imul
push
lret
mov
or
repnz
jmp
sti
fcoms
xchg
fcomps
jmp
arpl
loopne
rorl
fdivrs
orb
sbbb
pop
add
xchg
push
out
dec
cld
add
jns
push
sbb
sub
sub
shll
lea
sub
push
loopne
jle
push
leave
sub
or
fidivrs
je
cwtl
or
jae
cs
shlb
in
loope
push
aam
orl
push
movsb
loopne
jmp
andb
bound
jne
call
push
stc
push
push
shlb
je
test
out
or
rcrb
shl
or
add
enter
cwtl
dec
adc
xor
jne
add
lret
or
ret
adc
push
enter
outsb
in
sub
adc
fs
xchg
enter
es
les
test
es
loope
add
rcrb
jns
cmpsb
mov
rcrb
in
in
iret
enter
pop
push
enter
sub
xchg
dec
mov
and
add
test
loopne
mov
and
mov
sub
popa
ret
push
andb
jmp
dec
cmc
or
push
sbb
out
push
push
cmp
call
mov
mov
mov
sub
dec
lahf
sbb
sbb
jmp
fcomp
pop
fmuls
xchg
js
or
mov
fdivl
into
sub
sub
shlb
test
inc
repz
sub
enter
fadds
add
jo
dec
pop
insl
imul
mov
test
adc
pop
and
fmuls
bound
add
aas
or
dec
daa
jmp
and
adc
cmp
ret
fdivl
aaa
sbb
roll
lcall
je
sub
hlt
mov
mov
add
test
add
in
mov
lret
inc
inc
shll
call
fs
sub
data16
jne
xor
lahf
mov
inc
aas
fistpl
movsb
pusha
sub
je
mov
cld
mov
cld
pop
gs
cmpsb
cmp
clc
jb
jle
cld
xorl
es
add
cmc
ja
dec
add
add
aas
adc
lods
test
test
and
mov
inc
mov
add
or
mov
mov
jne
clc
add
mov
jmp
insb
lea
call
dec
and
adc
insb
mov
movb
cmp
xor
xor
subb
sub
and
movl
mov
dec
add
add
mov
mov
test
je
fisubrs
lock
insl
aaa
lds
in
aad
lock
add
movsb
or
rcrb
add
clc
xlat
ss
or
sub
mov
fs
popf
in
pop
add
add
pop
int
stos
call
call
push
repnz
ret
pop
xor
sbb
mov
or
mov
and
and
scas
sbb
adc
sbb
adc
cmp
nop
and
movsl
into
push
pop
inc
xchg
cmp
decb
inc
cmp
jbe
fmull
test
adc
mov
jl
rclb
mov
in
loope
pop
sub
push
add
sbbl
mov
jbe
popf
aad
sub
ss
sub
jge
or
sbb
jmp
jmp
cmp
or
dec
scas
dec
shll
sbb
sub
inc
dec
cmp
shlb
or
sub
adc
lock
addb
dec
sub
cmp
fcomp
sub
lods
sub
mov
lea
cli
mov
add
jmp
jg
cmp
inc
mov
add
mov
push
and
add
and
push
add
adc
nop
std
decl
adc
addr16
cmp
mov
out
xchg
in
dec
dec
popa
push
xchg
dec
inc
jp
lods
push
mov
js
lods
bound
fidivs
add
test
push
mov
push
imul
cltd
or
push
xchg
rclb
std
mov
xchg
pop
test
xchg
lea
jge
mov
adc
shrb
adc
std
out
push
adc
inc
add
add
inc
pop
sub
jo
test
dec
cs
cmp
pop
mov
je
add
or
psraw
jl
mov
repnz
pushf
xchg
or
adc
mov
adc
mov
push
cmpsl
jl
jmp
push
cmp
mov
and
inc
mov
cmp
xchg
inc
rolb
test
cmpsl
or
movsl
aaa
int
xor
insb
push
adc
add
add
nop
push
dec
push
mov
push
notl
add
and
jbe
repnz
push
les
push
push
sub
outsl
xchg
inc
pop
pop
imul
xor
cmp
mov
pop
mov
xor
pop
sbb
test
push
or
push
jmp
or
sub
xchg
xor
aaa
cmp
pop
rol
jl
push
lea
aad
orb
addl
inc
mov
push
sbb
push
jnp
stos
add
mov
aas
xchg
push
add
add
jl
xorb
and
test
sbb
movsb
push
fstpl
and
stos
xor
mov
pop
mov
into
pusha
add
dec
adc
jbe
ljmp
or
mov
inc
inc
cld
arpl
std
fiaddl
xchg
dec
cmp
push
pop
mov
imul
rcll
pushf
pop
das
add
and
push
sbb
push
hlt
andnps
mov
push
repz
mov
or
inc
inc
popa
movl
cmp
bound
inc
or
jno
xlat
xor
insl
cmpl
imul
cs
pop
es
inc
xchg
loopne
add
mov
js
push
cs
js
push
add
imul
dec
xor
inc
mov
mov
add
and
and
out
ljmp
gs
lods
orb
adc
loopne
jns
nop
lret
test
dec
inc
pop
lea
out
sbb
dec
push
movsl
daa
pop
dec
gs
inc
adc
push
shll
test
out
adc
or
push
inc
dec
dec
sbb
add
or
xor
ret
in
rclb
lahf
lea
push
jnp
sbb
dec
aaa
jbe
pop
adc
xor
test
call
out
imul
adc
mov
xor
pushf
out
sub
movl
xor
ret
jecxz
adc
mov
dec
xor
cmpl
or
adc
adc
stos
mov
test
xchg
addl
test
sub
pushf
insb
xchg
cmp
mov
les
push
mov
mov
pusha
mov
mov
cld
mov
stos
jae
adcb
add
mov
dec
mov
or
jae
adc
push
nop
jo
cwtl
dec
adc
jnp
fcompl
adc
shlb
inc
add
js
and
adcb
mov
adc
scas
icebp
mov
mov
mov
test
arpl
insb
ret
push
sbbb
fs
xor
lds
loop
repz
or
dec
add
js
scas
xor
movsb
dec
pop
adc
pop
xor
add
adc
push
push
jecxz
mov
inc
add
inc
and
mov
push
mov
sbb
lea
sarb
testl
mov
adc
add
jecxz
dec
push
into
cmpsl
std
lods
in
or
dec
mov
out
lods
push
js
xlat
cmp
ljmp
cltd
mov
inc
push
jl
push
or
sub
popa
push
xchg
or
ss
mov
mov
lea
pop
adc
push
inc
jmp
pop
jmp
mov
lea
aas
aam
xor
in
xor
sub
cmp
xchg
mov
mov
cmp
shr
and
push
scas
push
xchg
jo
popa
cmpsb
sbb
aam
std
mov
xor
shrb
xchg
leave
and
add
or
pop
loope
inc
daa
push
mov
pop
sbb
adc
arpl
imul
movsb
cmpsb
dec
loop
cli
rorl
fs
movsb
dec
pop
imul
sub
adc
out
mov
dec
xchg
aam
mov
push
aad
mov
cld
and
lock
fildl
push
add
sbb
daa
lds
adc
lret
enter
mov
imul
and
sub
aam
pushf
ja
push
stos
bound
pop
insb
xor
in
movsl
movsb
dec
xchg
inc
mov
push
cmp
jmp
jmp
mov
mov
jmp
gs
test
dec
aad
lret
mov
fisttps
sbb
mov
mov
and
orb
and
sbb
pop
pushf
mov
push
mov
shl
jnp
or
pop
adc
push
dec
mov
mov
cs
sbb
mov
outsl
arpl
scas
and
lcall
add
dec
stos
add
xchg
aaa
popa
jb
mov
lret
xor
addb
add
add
add
test
stos
and
jecxz
push
stos
jmp
push
sbb
xchg
xchg
xchg
xchg
mov
mov
orb
jl
adcl
arpl
out
pop
inc
add
jl
dec
rcr
fwait
dec
xchg
ja
jnp
les
out
dec
fstl
mov
mov
movsb
xor
add
push
sbb
xor
xor
imul
or
movb
pop
jge
jecxz
cmp
movsb
addr16
js
xchg
pop
xchg
adc
dec
sub
mov
insl
sbb
aas
or
rorb
mov
xchg
dec
movsl
cwtl
cwtl
test
pop
xor
add
lods
pop
pop
jp
sub
xchg
or
lahf
lods
out
dec
mov
or
cltd
push
mov
ja
loopne
add
ds
movsb
enter
mov
pop
mov
inc
js
dec
sub
xchg
dec
sub
fsubl
inc
aam
xor
push
idivl
jno
inc
lods
fs
xor
lods
imul
fdivr
stos
or
or
lret
outsb
test
and
mov
push
shl
xor
jno
aad
pushf
push
punpckldq
sbb
and
sub
jb
je
mov
push
jmp
mov
pop
or
loop
sbb
or
hlt
andb
sbb
insb
mov
or
lret
jmp
lods
xor
lahf
add
addb
inc
enter
cmpsl
and
outsl
ret
mov
enter
add
movsl
loope
sbb
add
inc
pusha
leave
adcb
cltd
sub
or
addl
sbb
xchg
mov
xchg
ret
test
and
fs
sub
gs
xchg
stos
xorb
mov
clc
push
nop
pop
decb
lds
push
popa
bound
inc
mov
stos
or
sbb
cmp
mov
icebp
push
and
jns
lret
and
xchg
mov
and
xlat
add
bound
mov
or
ss
xor
and
or
sub
jne
and
rolb
rorb
nop
faddl
test
or
jp
jl
cmpsl
push
test
pop
push
push
mov
xchg
pop
sbb
fs
or
mov
cmpb
cmp
jge
mov
jl
dec
cmpsb
dec
cmp
mov
jne
mov
mov
add
mov
test
inc
sub
and
push
push
loopne
ror
test
add
in
xchg
add
jl
adc
arpl
sar
aaa
bound
iret
inc
mov
mov
add
or
push
pop
mov
hlt
stc
add
cld
dec
xor
jl
nop
dec
jl
add
pop
sbb
cld
mov
adc
pop
cwtl
sbbb
inc
xchg
aad
adc
sbb
movb
add
jmp
cmpsl
push
int3
loopne
int
outsl
pop
ss
insl
jb
mov
jb
rcll
ja
add
and
leave
cwtl
clc
push
push
jnp
insl
jmp
movb
add
and
adc
lods
andb
imul
and
xlat
cmpb
inc
jmp
in
sbb
lea
xchg
test
add
das
nop
add
pusha
popa
pop
incb
pusha
adc
mov
sub
pop
mov
adc
loope
movsb
pop
mov
notl
add
cmp
ret
sbb
repnz
ret
cwtl
pop
jbe
and
aas
inc
xchg
inc
cmpsb
mov
pop
sub
xchg
dec
call
sub
sub
sub
ret
lret
repz
popa
into
aas
cmp
sub
xchg
imull
sub
sub
add
add
sti
cmp
push
lea
xor
pop
cmpsl
xor
sub
dec
or
mov
mov
in
cli
movsb
testl
not
push
mov
cmp
push
nop
lret
cmp
fucom
mov
ret
addl
jne
dec
or
and
sbb
adc
movsl
mov
mov
xor
push
popa
cltd
dec
jbe
pop
inc
decl
inc
push
lcall
pushf
xor
or
xchg
inc
aam
ret
je
shll
inc
imul
iret
nop
xchg
and
add
in
mov
lcall
test
xchg
loop
cmp
pop
mov
gs
mov
in
cwtl
push
dec
mov
adc
aaa
mov
fnsave
lock
xor
incl
not
or
and
lahf
push
adc
push
mov
shll
inc
pop
pop
pop
jne
les
dec
adc
inc
mov
and
xchg
insl
nop
inc
loopne
mov
ja
pop
lcall
rclb
dec
mov
mov
and
push
mov
ja
and
mov
dec
test
push
insb
pop
in
out
sub
shrb
dec
add
mov
in
push
je
std
cwtl
xor
add
fwait
test
adc
fwait
mov
pop
pop
add
xchg
pop
add
sbb
loopne
jl
jge
and
pcmpeqb
mov
imul
stos
or
pop
dec
inc
test
sub
outsb
add
ret
xchg
sub
cmp
ret
cmp
test
add
dec
pop
icebp
mov
nop
pusha
sbbl
xchg
gs
ret
mov
icebp
add
sub
xchg
or
xor
pop
lea
xchg
sti
add
inc
sub
or
rcll
testl
lods
push
movsl
sbb
inc
mov
fmull
bswap
loope
mov
mov
shll
pop
out
mov
push
jae
jae
fs
pop
or
int
je
pusha
and
adc
cltd
je
lea
insb
dec
mov
pop
nop
orb
std
mov
lds
mov
inc
and
leave
js
pop
mov
and
nop
xchg
xchg
push
mov
testl
xor
lods
fiaddl
stos
repnz
sub
fimull
push
mov
inc
pop
xchg
xchg
pop
cmp
push
mov
rorb
cmp
xor
insl
or
mov
incl
dec
roll
movsb
aad
inc
pop
mov
test
sbb
mov
dec
adc
xchg
jle
or
movsb
test
mov
mov
cmp
mov
dec
scas
push
jno
mov
xchg
mov
test
jg
movsb
add
sbb
inc
and
xor
push
lcall
cmpsb
data16
nop
push
mov
dec
sbb
shl
xlat
lea
test
mov
dec
xchg
fisttps
outsl
dec
sbb
loop
xor
leave
out
sbb
sbb
fs
mov
adc
andb
or
sbb
cltd
pusha
testb
iret
cmp
inc
stos
inc
daa
cmc
nop
popa
adc
pop
dec
aas
test
mov
outsb
or
adc
insl
xchg
mov
iret
sub
mov
add
xor
mov
imul
or
or
push
ss
out
dec
add
sbb
adc
jne
mov
imul
fdivl
orb
lods
out
add
mov
insl
les
adc
rolb
adc
subl
fildll
and
mov
pop
mov
xlat
cs
or
popf
mov
jg
xchg
push
testb
mov
jns
flds
mov
jmp
imull
mov
xchg
push
inc
or
add
movsb
mov
pop
enter
sbb
jo
in
stos
shl
out
pop
add
pop
addb
out
sub
cmpl
je
or
je
je
cmp
add
push
or
mov
jo
or
mov
inc
ljmp
add
fcoml
mov
lock
sub
data16
cmc
pusha
cld
push
or
add
cli
push
add
push
out
je
les
cmpsb
imul
sub
mov
push
push
test
pop
jge
mov
lods
fistl
lods
cmp
nop
mov
pop
out
or
mov
mov
pop
dec
adc
es
outsl
push
and
push
add
push
adc
adc
add
add
js
mov
call
enter
ljmp
mov
stos
outsb
sub
cmpl
sbbl
sahf
xchg
add
cmp
int3
lret
daa
in
xchg
dec
sub
lods
int3
jg
test
jle
imul
mov
push
stos
and
push
push
mov
push
stos
add
add
xchg
xor
lahf
add
add
stos
and
rorb
cmc
shlb
or
xor
jne
or
adc
xor
bnd
add
add
add
dec
cmp
es
add
lcall
push
push
imul
cmpsl
add
add
push
loope
add
push
push
jns
adc
out
jl
iret
add
xor
push
mov
enter
dec
jne
jge
mov
movsb
xor
cmpl
jnp
xor
daa
lahf
jl
data16
mov
add
jns
jg
dec
fisttps
push
cmp
xlat
in
xchg
adc
jg
ss
data16
jmp
push
sub
push
jp
data16
fwait
in
addr16
xchg
xchg
mov
add
fstps
out
leave
mov
mov
sub
and
arpl
call
push
pop
movsb
pusha
inc
sub
outsb
cmc
xor
pusha
out
mov
je
fldl
sbb
popf
je
shlb
push
test
loopne
lcall
pop
inc
iret
push
mov
insb
sbbl
ficompl
cwtl
jp
sub
cmp
push
cmpb
dec
gs
xorl
popf
ret
adc
dec
inc
loopne
adc
shll
callw
inc
inc
dec
inc
add
fdivrs
int3
stc
mov
add
inc
cmp
and
mov
aam
or
sub
mov
cmp
jl
out
xchg
push
sbb
je
rcr
and
or
sub
adc
rorl
add
in
insb
xlat
jbe
jbe,pt
dec
pop
mov
xchg
mov
mov
mov
jbe
scas
xor
cmp
mov
loope
rcrl
cmp
jne
orl
pop
loopne
cmp
cld
add
push
sahf
sbb
add
push
aad
adc
cltd
lcall
or
mull
sbb
mov
adc
les
push
push
sbb
hlt
jno
adc
and
push
test
loopne
rcl
jmp
push
jl
movsb
popf
add
mov
adc
loope
cld
clc
dec
stos
subl
inc
add
movsb
sti
ljmp
out
sub
adc
test
or
cmp
mov
sub
add
mov
cmp
nop
int3
int3
jbe
aas
xchg
sti
in
cmp
pop
mov
adc
and
sarb
shrb
push
and
iret
gs
push
sub
dec
adc
fsubs
xor
inc
insb
ljmp
adc
mov
lock
aas
shrb
pusha
setge
test
outsb
mov
loopne
and
in
pop
shl
xchg
enter
pop
add
into
loopne
jne
jecxz
fs
push
fldl
xor
or
aaa
pop
fiadds
mov
adc
add
aas
sub
ja
mov
push
pushf
nop
mov
ds
jg
lea
xchg
mov
pop
xchg
out
push
imul
pop
sbb
lcall
push
mov
adc
adc
or
add
push
jns
or
or
add
adc
push
mov
lods
or
mov
ficomps
jne
xor
in
ja
shlb
cmp
test
pop
sub
add
lahf
shl
push
nop
mov
and
stc
jns
sbb
fnstenv
push
and
into
les
mov
jb
les
lock
xchg
pop
repnz
and
addl
popa
jmp
or
repnz
imul
inc
sub
roll
lahf
push
imul
cld
outsb
cld
frstor
or
dec
mov
dec
lret
xor
fwait
andb
push
dec
pop
xchg
xchg
clc
mov
push
jne
mov
sbb
xor
cmp
add
leave
aam
movsl
fimuls
add
cmp
jo
popa
rorb
cs
sbb
ud1
push
test
ret
pop
add
jmp
fwait
dec
cmp
jg
xchg
xor
xchg
lock
push
in
adc
pop
lahf
and
mov
xorl
sti
lea
jmp
jmp
jb
psubd
cmpsb
stos
or
imul
pop
lock
or
jl
std
xchg
and
ja
fsubs
or
pop
adc
ja
adc
add
mov
sti
scas
adc
push
repnz
lret
repz
xor
xchg
je
je
push
mov
add
pop
and
sbb
xor
inc
add
stos
mov
mov
es
mov
insb
adc
push
imul
and
mov
imul
mov
and
adc
setl
cmp
loop
jo
adc
inc
dec
dec
cmpsl
or
aam
xor
lock
mov
stos
addl
subb
lds
add
mov
pop
gs
dec
inc
das
or
push
and
jb
fcoms
mov
cmp
pop
mov
sbb
adc
in
test
je
jmp
cs
and
insb
mov
or
rorb
pop
xor
setl
push
das
das
scas
and
jmp
and
mov
movsl
sbb
in
push
adc
jne
cmp
inc
or
xor
shr
shll
cli
add
xchg
js
pop
cmp
jne
jmp
dec
pushf
sbb
pop
inc
or
sbb
subb
pushf
or
je
add
das
movswl
push
or
push
cwtl
jns
jmp
je
add
adcl
pop
clc
xchg
cmp
dec
mov
ljmp
ficoml
cmpsb
push
add
sbb
sub
popa
ret
push
or
push
loopne
cli
add
je
jae
cmp
lods
jb
xchg
cmpsl
inc
int3
into
lods
add
sbb
dec
arpl
pop
sahf
cmpsb
adcb
loopne
imul
ret
add
and
push
js
test
sub
jno
push
rorb
cli
adc
inc
das
or
mov
fmuls
or
pusha
addl
or
xchg
in
pop
pop
mulb
loope
neg
sbb
push
mov
mov
fisttpll
or
jb
mov
cwtl
lahf
add
ja
adc
xchg
add
jns
clc
vpshaq
sahf
les
or
or
add
add
adc
lret
in
test
shll
inc
adc
sbb
out
les
inc
add
fwait
push
fwait
lahf
out
jl
cltd
call
popf
lods
mov
adc
pop
pop
add
add
add
cmp
or
and
je
test
mov
sub
and
mov
inc
adc
or
call
clc
add
dec
cmp
std
inc
daa
nop
lods
into
sub
dec
clc
jmp
or
insl
orl
add
or
fists
pop
mov
daa
xor
push
add
clc
push
sub
xchg
inc
lahf
dec
insb
shlb
add
pop
jg
push
out
int3
insl
clc
push
push
cmpsl
sub
push
popf
mov
adcl
icebp
add
nop
fnsave
push
fsubrl
icebp
and
int3
lock
sbb
cmp
xchg
lds
and
lea
pop
mov
cli
inc
cmpb
adc
or
xchg
xchg
int
pop
push
mov
int3
addl
lds
rolb
sub
cltd
lock
lock
sbb
and
insl
jmp
hlt
inc
hlt
mov
clc
hlt
hlt
and
out
lret
clc
std
or
pop
test
jmp
mov
sti
cmp
and
loopne
int
push
dec
xor
or
call
cwtl
orl
repnz
lods
mov
push
mull
ds
xor
add
push
inc
lods
leave
filds
add
ljmp
or
lock
in
mov
shll
ret
bound
xor
push
mov
jle
adc
int3
jno
xchg
aaa
push
lock
inc
mov
push
push
popa
pop
das
loopne
bound
and
insl
jne
or
pop
dec
jmp
aaa
sbb
push
cmc
cmpl
dec
rol
add
fmuls
and
sbb
js
inc
add
or
dec
sub
push
push
andl
sub
clc
sbb
int
or
lock
je
mov
out
cmp
jno
mov
std
movsb
mov
jne,pt
jae
sarl
aaa
rcl
sub
and
mov
add
sbb
xlat
sbb
cmpsb
add
out
adc
out
jmp
test
or
jge
xchg
mov
add
mov
clc
imul
sub
lea
hlt
pop
add
into
call
lods
ret
xchg
xchg
sbb
jo
cs
mov
addl
fcom
je
dec
add
cmp
add
iret
insb
insb
incb
or
mov
push
pop
jns
adc
mov
inc
cmp
add
mov
jmp
shlb
mov
andl
and
cmp
mov
popl
cld
enter
dec
add
inc
stos
sbb
in
inc
push
sub
fistps
push
repnz
ljmp
aad
mov
pop
test
pop
enter
lock
fimuls
xchg
xchg
fcoms
mov
or
dec
call
mov
orb
or
mov
call
mov
xchg
inc
sub
mov
popa
mov
inc
or
test
xlat
notb
in
popa
mov
mov
cmp
jne
scas
je
mov
gs
add
inc
sbbb
xchg
adc
es
loopne
jg
sub
mov
inc
jo
push
adc
jp
pop
inc
arpl
push
scas
mov
or
stos
or
push
loopne
js
ljmp
xchg
leave
icebp
pop
push
push
sti
and
or
outsl
test
dec
inc
pushf
xor
inc
mov
mov
add
sbb
mov
lods
pop
dec
scas
aas
or
cmp
mov
sub
or
je
adc
test
fiadds
sub
out
push
dec
jo
inc
push
or
fwait
push
loopne
cmp
inc
sub
cmp
clc
repnz
mov
add
adc
add
into
loope
sbb
inc
add
jb
cs
inc
sbb
push
push
or
push
ljmp
leave
cmpsl
jne
sub
xor
jmp
and
adc
loope
ds
mov
arpl
cmpsl
push
mov
orb
cld
add
aam
xchg
add
dec
pmulhuw
cld
dec
push
lcall
xlat
outsl
xchg
or
shl
xor
add
mov
pop
mov
jnp
or
arpl
mov
pop
xchg
and
in
lock
mov
inc
and
or
leave
and
adc
in
jle
gs
pop
aam
xor
dec
addb
push
push
or
inc
add
cld
stos
cld
sub
cld
push
xchg
sub
repz
lea
loopne
add
add
mov
sub
push
pop
insl
push
xchg
test
dec
dec
adc
movsl
in
mov
pusha
xor
push
sub
inc
push
add
ret
jmp
add
or
sub
hlt
mov
aas
pop
stc
or
test
rorl
mov
mov
sbbb
les
xor
xor
fisubrl
pop
les
add
outsl
sbb
std
dec
dec
adc
adc
push
lea
repz
pop
push
out
hlt
out
mov
pushf
subl
push
push
inc
das
das
or
mov
jge
lds
push
xchg
xchg
arpl
fsubl
pusha
cmp
push
out
mov
pop
pop
add
scas
pushf
fdivrs
lock
mov
xchg
les
lock
dec
sub
and
cs
icebp
pop
add
es
adc
mov
add
popl
push
or
cmp
ret
orb
sub
or
push
mov
dec
sahf
cmp
mov
mov
lock
popf
lods
mov
mov
in
push
jbe
test
jb
add
mov
insl
int
push
cmp
add
fincstp
sub
inc
mov
dec
and
mulb
scas
into
cmp
loop
in
shl
fs
pop
cmp
in
out
fdivrs
pop
out
fiadds
clc
jne
pushf
lods
das
gs
push
xor
pop
test
cmpl
pop
fisubl
call
int
jecxz
cmp
shlb
mov
aad
sub
sbb
inc
xor
arpl
mov
icebp
adc
rorb
jnp
shlb
xlat
push
loopne
add
and
popf
or
adc
pop
test
jne
mov
ret
push
cmp
subl
loopne
shll
cmp
pop
jne
in
sbb
or
jmp
fwait
dec
scas
jp
mov
int3
lahf
sub
sbb
add
or
push
pop
mov
push
inc
push
loope
jb
push
ficoms
paddd
mov
adc
shrl
stos
inc
lret
mov
fld1
mov
shrb
mov
lds
xlat
ja
pop
out
sub
mov
push
pop
dec
shl
inc
or
push
mov
dec
inc
jnp
mov
inc
mov
add
aam
push
inc
xchg
mov
adc
cmp
mov
xchg
mov
inc
ret
mov
jecxz
sub
stc
jmp
lea
xor
test
sbb
jmp
push
xor
ret
loopne
loopne
mov
pop
adc
and
inc
adc
outsb
xor
dec
mov
mov
jno
adc
pushl
test
cmc
cmp
int3
cmp
shr
push
sub
int3
imul
call
loope
jmp
jbe
pop
enter
sbb
inc
mov
add
dec
mov
add
add
sbb
mov
loop
adc
dec
pushf
inc
ljmp
xchg
push
lret
mov
dec
jge
faddl
cs
insb
insb
push
and
lret
adc
outsl
jecxz
and
push
xlat
inc
test
push
adc
push
dec
neg
mov
cmp
lds
sub
cmpb
cmpsl
push
or
push
pop
dec
xor
xor
pusha
movsb
lock
test
dec
movl
enter
xchg
sarl
cmp
je
xlat
ljmp
insl
xor
add
pop
jmp
push
xor
fadds
je
roll
cmp
inc
xor
mov
inc
xchg
push
fcoms
dec
push
insb
hlt
mov
cmp
mov
add
xchg
ss
fsubrs
into
push
jmp
cmp
fwait
test
fsubrs
jns
xchg
loope
push
inc
mov
popa
mov
cmp
pop
popa
daa
push
lcall
and
pop
cmpsl
xchg
packssdw
inc
leave
rcrl
or
divl
imul
xor
xchg
dec
push
sahf
push
add
jae
cmp
xor
or
int3
xor
jmp
imul
inc
cmpsb
jnp
dec
jo
cmp
clc
jne,pn
daa
and
leave
inc
dec
jne
dec
jne
cwtl
movsb
lret
inc
jne
pop
pop
test
pop
add
sub
std
adc
jl
xor
mov
std
jb
hlt
mov
faddl
push
xor
push
add
mov
jne
stc
jae
nop
cmp
add
xor
inc
add
lahf
imul
push
and
mov
add
ja
ret
push
sbb
mov
mov
into
mov
lea
mov
in
mov
aad
and
sbb
push
add
fnstenv
and
icebp
arpl
shll
mov
data16
inc
push
sub
les
clc
and
fld
es
sub
lret
mov
jno
mov
mov
mov
xor
imul
ljmp
lea
lret
cltd
push
icebp
out
je,pn
or
scas
iret
je
cmp
cmp
mov
jmp
jmp
dec
mov
push
add
aas
test
push
std
jp
insl
aas
or
xor
mov
sbb
add
shl
in
lock
sbb
adc
add
and
xorb
fstps
mov
xor
adc
and
jbe
add
pop
bound
push
cmp
adc
fisttpll
add
inc
pop
adc
mov
hlt
add
movsl
push
xor
pop
lea
push
lea
mov
adc
cmp
addb
sub
sub
cmpsl
mov
mov
dec
cli
shl
lret
add
nop
dec
inc
js
insl
movsl
add
ja
inc
cwtl
sbb
add
bound
push
roll
rorb
std
mov
push
movsl
pop
sub
dec
xchg
lods
mov
enter
sub
push
push
pop
jbe
scas
inc
xor
push
push
mov
xor
mov
jl
lock
and
std
xchg
xor
jb
xchg
xchg
aaa
xor
cmp
dec
cs
cmp
or
pushf
sub
cmp
mov
nop
fsubs
hlt
in
data16
add
ljmp
mov
dec
cmp
mov
inc
imul
leave
push
das
fs
lods
sub
adcl
dec
lods
subl
in
imul
mov
in
pop
fiaddl
lcall
int3
add
inc
lock
or
sbb
sub
fucomi
mov
dec
inc
sub
cli
roll
insb
push
xchg
xchg
cmp
xor
mov
dec
aad
js
and
iret
and
and
dec
or
dec
adc
movsb
es
leave
cmpsb
loopne
xor
test
dec
mov
pushf
das
xor
js
imul
lods
sahf
fcoml
xor
or
mov
jb
fwait
xchg
aaa
mov
push
cmp
xor
lcall
je
mov
dec
aas
push
popa
pop
loop
rorb
mov
fs
aad
js
call
pop
das
mov
hlt
ljmp
test
sbb
cld
das
sub
mov
xchg
adc
stc
cmp
and
push
xor
mov
cs
mov
fdivrs
test
sub
out
mov
mov
mov
sub
in
shrb
xor
call
xor
data16
mov
hlt
pop
or
dec
pop
pusha
jmp
or
and
mov
or
jne
xchg
sbb
xor
inc
nop
xor
shl
jp
cmp
add
loope
fcoml
pop
jp
es
and
add
andb
sbb
cmp
or
pop
mov
cmpsb
cmp
lahf
nop
loope
hlt
adc
fcmovnb
jmp
sbb
ja
xor
nop
test
jne
or
adc
sbb
movhps
mov
or
adcl
test
rclb
gs
jg
cmp
popa
inc
lock
mov
aaa
fdiv
and
ds
lock
js
sub
shl
mov
push
insb
test
in
mov
jl
mulb
and
inc
or
mov
lcall
loop
mov
mov
in
adc
mov
adc
adc
xor
pusha
in
ds
pop
hlt
shr
jb
inc
stc
fs
cmp
cmp
or
ja
mov
adc
push
mov
fmull
sbb
cld
popa
cld
cmp
call
push
push
lds
aaa
sti
clc
mov
stos
xchg
push
mov
divl
and
jo
jmp
mov
adc
inc
decb
pop
mov
mov
in
or
loop
or
inc
arpl
aaa
call
or
gs
pop
xor
fdivs
daa
pop
adc
sub
ljmp
mov
lock
call
mov
call
or
push
icebp
cs
outsb
scas
jge
inc
or
cmpb
repz
dec
jmp
cmp
je
or
xor
jno
xor
pushf
mov
xchg
push
cltd
push
lock
and
cmp
push
jne
sbb
pop
jmp
mov
jmp
dec
xor
xchg
pusha
shr
ljmp
push
sbb
shl
outsl
jecxz
faddp
wrmsr
add
mov
push
stos
cld
push
jg
push
mov
je
adcl
ffree
push
cld
je
shrb
movsb
pop
xor
or
inc
lds
clc
roll
dec
jl
rorl
int3
or
xchg
cmp
push
mov
adc
clc
jg
push
pop
jge
jge
mov
push
mov
adc
add
xchg
mov
mov
and
mov
addb
ret
negl
call
jge
and
push
incl
je
pop
xor
mov
sbb
hlt
cmpsl
outsb
jne
lea
int
push
test
jo
cs
and
iret
adc
stc
addr16
or
repnz
xor
lret
pop
or
pop
dec
mov
cld
push
stos
cmp
xchg
je
adc
cmp
ficoms
int3
xor
adc
mov
mov
les
or
and
lahf
loope
or
pop
jg
iret
sub
lea
fcmovne
push
rolb
out
add
add
add
ja
lahf
les
cvttps2pi
addb
lods
insb
or
push
outsb
imul
popl
pop
sbb
loopne
jg
mov
mov
mov
add
lahf
outsb
test
push
jne
pusha
or
ret
mov
aas
loopne
ret
and
push
das
xor
lea
insl
sub
sbb
add
mov
sub
sarb
and
push
lods
aam
jl
adc
aas
mov
bound
adc
repz
pop
cmpsl
dec
movlps
ret
pushf
ljmp
aam
repnz
jmp
test
sbb
iret
nop
fbld
sbb
or
mov
sub
dec
add
push
mov
in
and
callw
jecxz
xor
insb
addr16
and
adcl
data16
jg
bound
psrld
hlt
push
push
ror
faddl
dec
jne
mov
and
roll
or
out
hlt
adc
add
int3
loope
pushf
daa
rcrl
cmp
add
mov
xchg
pusha
incb
fadd
push
and
adc
or
incl
push
aam
lret
and
or
jb
shrl
inc
in
test
sbb
dec
or
inc
or
add
stos
xchg
imul
das
and
cltd
shlb
mov
or
movb
dec
in
fildll
call
push
xchg
sbb
stc
incl
rorb
sbb
mov
pusha
xchg
inc
pop
pop
mov
add
add
nop
mov
pop
pop
adc
adc
sbb
push
adc
add
mov
and
inc
or
dec
mov
je
ret
xchg
into
sbb
outsl
adc
cld
pop
adc
mov
dec
cmp
popf
push
cmpsl
imul
and
inc
es
push
icebp
sahf
xor
dec
xor
pop
mov
loope
xor
mov
cmp
cltd
pop
mov
and
loopne
pop
adc
dec
jno
nop
sub
pop
adc
stc
mov
jl
mov
sub
push
push
dec
add
add
enter
pop
mov
js
loopne
push
xor
lret
movsl
sub
push
insb
jo
js
popf
push
js
xorl
ja
lret
sub
dec
mov
mov
addr16
sub
mov
sub
or
and
and
stc
adc
jo
pop
push
or
arpl
or
xor
rorb
dec
out
movsl
sub
lcall
dec
cmp
ja
dec
in
add
add
bound
sbb
movl
and
incl
nop
cwtl
inc
leave
js
and
cmp
adc
cmp
cmp
add
xor
addl
jecxz
xor
aas
pusha
or
andl
hlt
lret
inc
out
ret
ljmp
xor
jmp
cmp
inc
inc
data16
jae
jmp
jg
or
mov
ret
cmpsb
sbb
jo
fbld
mov
sbb
ds
outsl
xor
add
or
xchg
lock
aaa
ljmp
stos
xchg
rolb
xor
mov
pop
addb
jb
movsb
inc
or
mov
inc
fdivl
sbb
or
rcll
mov
rorl
scas
sbb
cmp
sbb
or
jne,pn
scas
push
test
sbb
stos
ljmp
clc
mov
pop
mov
push
stc
push
js
pop
or
dec
pusha
stos
cmp
mov
and
sbb
addr16
or
shl
movsb
push
mov
ja
or
ret
loopne
add
or
xor
test
sub
mov
or
fmull
mov
mov
dec
adc
push
pop
inc
push
test
pop
sbb
or
push
jbe
shlb
sub
pop
or
jnp
push
and
and
cld
lcall
cmp
adc
cmp
mov
es
inc
cmp
or
clc
jmp
sahf
imul
and
cld
mov
lea
fcompl
jne
mov
cmp
pop
repnz
jne
push
push
pop
xchg
push
enter
or
or
out
les
in
dec
test
adc
aad
test
call
stc
rol
sub
push
dec
fcompl
call
test
or
loopne
sbb
shlb
sbb
dec
and
xor
sbb
test
xor
dec
push
sbb
push
int
lods
bound
xchg
push
ds
dec
sbb
adc
cmp
sub
sbb
pop
call
movsl
add
loop
movb
push
daa
adc
test
mov
ds
hlt
push
arpl
jns
loopne
addr16
out
adc
add
cmp
inc
aaa
icebp
and
mov
xchg
cld
xlat
sbb
sbb
ret
repnz
iret
lcall
in
lahf
dec
das
roll
xchg
shlb
xchg
and
dec
xchg
call
jno
push
mov
leave
inc
inc
loopne
sub
orb
lea
mov
push
xchg
loop
mov
mov
std
sahf
dec
ljmp
sub
cmp
add
or
loope
mov
mov
in
enter
and
adc
rolb
sub
pushf
js
sbb
sbb
lods
sbb
sub
sbb
xor
mov
dec
push
in
dec
test
push
jle
into
jp
stos
ja
add
movsb
shrl
jl
push
cmp
pop
addr16
int
movl
in
add
cmp
inc
adc
les
adc
fs
jp
int3
scas
push
imul
arpl
add
jl
clc
mov
adc
xor
jg
xor
rclb
mov
jbe
jnp
rclb
ret
pushf
aam
inc
pushf
fidivrl
test
in
push
adc
or
sar
sbb
xchg
adc
es
adc
push
jb
xor
sub
mov
push
push
sbb
ds
imul
roll
mov
sub
mov
sar
stos
je
mov
adc
clc
sub
adc
lock
jecxz
jo
outsl
jae
push
pop
push
lds
jecxz
in
sub
ficoml
jo
pop
mov
add
xor
sbb
decl
jnp
das
fstpt
or
and
lods
repnz
lods
outsb
mov
movsb
outsl
cwtl
jo
sub
test
hlt
aam
fs
cmp
push
mov
mov
mov
loope
xchg
inc
std
sub
mov
push
enter
xorl
adc
cmpsb
or
or
push
add
or
sub
mov
jmp
lods
lea
push
xor
or
or
push
sub
xchg
mov
or
stos
stos
or
lock
lret
pusha
lock
adc
and
jo
decb
movsl
dec
jp
adc
mov
mov
jg
pop
add
jl
mov
add
stos
out
jmp
iret
ret
jmp
adc
mov
fistps
sbb
pop
pop
xor
pop
imul
pop
add
jl
add
enter
in
cld
lock
adc
cs
add
push
mov
mov
push
push
inc
into
ss
ja
xor
pop
push
addr16
stos
jno
insl
pop
shlb
mov
inc
jg
rep
mov
push
clc
cmpb
mov
inc
cmpsl
adc
mov
pop
hlt
xor
andl
mov
xor
add
mov
push
jbe
lahf
xchg
mov
adc
inc
mov
rorb
ds
insb
stos
add
lods
andb
push
clc
sub
push
jae
sub
or
frstor
xchg
dec
mov
or
jp
xorl
test
jnp
sub
lcall
repnz
cmp
and
mov
rcrb
and
add
xchg
out
or
shl
mov
inc
xor
push
jle
inc
xchg
cld
cmp
cmpxchg
jo
jb
loopne
bound
cmp
loopne
cs
and
adc
in
add
mov
mov
dec
test
rcll
rclb
adc
jb
sbb
lods
lods
pushf
cwtl
jae
mov
fsubl
cmp
pop
mov
lods
sbb
test
test
ja
out
jp
pop
add
idivl
jp
out
push
mov
pop
lret
cmpsb
jns
lahf
es
dec
jmp
jge
jge
and
cli
scas
cltd
js
and
mov
and
cmpsb
lock
adc
xor
mov
test
jae
or
lahf
mov
test
and
pusha
mull
in
jg
pop
lock
lret
jge
push
adc
push
ja
lods
inc
xchg
andl
jecxz
push
push
std
push
pop
data16
jmp
pop
push
push
movsb
inc
mov
mov
mov
dec
mov
dec
out
mov
pop
xor
or
sahf
orb
cld
pushf
movsb
add
dec
mov
les
xchg
movsb
push
test
sbb
or
popa
xchg
repnz
jle
pop
xchg
mov
outsb
or
mov
cmpsl
add
xchg
jecxz
adc
in
lcall
aam
cs
jbe
fcomp
loopne
ret
xchg
cmp
xchg
jo
sahf
inc
inc
imul
jne
adc
shlb
add
push
fnstcw
or
lods
xchg
fisubs
fwait
pop
shlb
aaa
add
loopne
mov
out
sarb
jno
cmp
xchg
lock
sbb
ja
xor
sarl
xchg
lret
rol
enter
mov
add
stc
cmpsl
rorb
or
xchg
ret
and
dec
jmp
ret
outsl
stc
mov
push
int
or
shrb
in
xchg
xor
xlat
call
adc
arpl
or
das
scas
mov
fwait
movsb
enter
mov
sbb
adc
xchg
fstpl
popf
or
xor
cmp
add
jle
pop
pop
mov
enter
js
push
je
insl
pushl
sti
mov
jnp
and
je
imul
add
fcmovb
adcl
sbb
bound
mov
pop
jg
and
call
and
mov
ds
push
sub
push
cmp
test
push
xchg
sbb
pop
push
loope
aam
clc
and
outsl
push
xchg
add
loop
or
adc
mov
pop
xlat
or
sbb
jbe
jl
and
mov
lret
jno
rcr
jmp
mov
xchg
pop
mov
pop
add
pop
mov
divl
inc
mov
push
lea
push
push
sbb
fstpl
mov
xor
es
ret
icebp
clc
imul
push
dec
push
mov
add
hlt
mov
sub
push
cs
jmp
lret
cmp
sub
adc
das
add
shlb
adc
rclb
dec
mov
sbb
dec
cmp
add
std
cmpsl
jmp
insl
mov
inc
dec
imul
mov
add
push
mov
popf
push
mov
push
dec
lea
add
mov
dec
std
aam
pusha
mov
jmp
outsl
fadds
sub
adc
jne
shr
cmp
push
sub
hlt
pop
xchg
cltd
xchg
pusha
push
pop
mov
xor
cmp
rorb
dec
int
and
or
push
adc
ja
inc
imul
cltd
fmuls
sbb
je
jne
lods
xchg
dec
enter
xchg
or
cli
sub
inc
lock
dec
dec
das
mov
insl
lock
repz
and
push
xchg
lea
dec
fdivrl
shll
data16
fidivs
cli
push
xchg
push
or
push
pusha
out
enter
or
inc
fcoms
xchg
dec
push
xor
and
in
add
mov
sbbb
aaa
imul
movsl
jmp
enter
fnstsw
ja
mov
or
pushf
sbb
mov
dec
in
add
inc
push
test
push
sub
dec
mov
add
jg
push
mov
and
jmp
lahf
adc
adc
or
add
imul
xchg
or
loopne
jmp
jo
fstps
mov
and
cmp
adc
mov
inc
orb
jne
shlb
data16
xchg
popf
loopne
xchg
ss
in
add
push
push
test
add
add
lods
inc
aas
ss
test
in
daa
test
push
sahf
or
or
mov
rolb
push
mov
fistl
xor
push
jne
aam
xor
push
dec
leave
lods
mov
jge
insb
sbb
sti
sbb
add
xor
jno
adc
rcrl
sub
push
fwait
dec
hlt
adc
mov
pop
sub
pop
or
sub
xor
cmp
push
adc
sar
in
rorl
cld
mov
sbb
ljmp
mov
sub
shrb
icebp
push
push
mov
shlb
push
or
pusha
or
ret
lea
bound
sbb
inc
sbb
push
dec
scas
sbb
or
fdivrs
sbb
addb
fiaddl
mov
lock
cmc
sub
jbe
imul
cli
jl
mov
mov
pop
hlt
hlt
cmp
roll
jne
push
movsb
or
jbe
adc
jmp
movsl
rcr
inc
ret
mov
jp
scas
jmp
cmp
jbe
wbinvd
and
and
mov
cmp
sbb
or
loopne
je
mov
sbbb
pop
inc
rclb
or
jbe
fmull
in
adc
push
fmull
es
gs
cld
pop
fstpt
mov
xchg
mov
jmp
dec
jmp
jno
or
lock
or
cmp
testb
push
add
cmpb
testl
mov
adc
incb
outsl
sub
sub
lea
bound
or
mov
inc
dec
jne
test
pop
jne
adc
out
dec
mov
mov
pop
jl
jp
sub
fcompl
push
mov
sub
xor
mov
push
out
pop
dec
add
or
pushf
clc
push
out
notb
int3
stos
imul
jo
lods
mov
int
push
dec
call
or
sub
pushl
mov
pop
xor
add
fnstenv
js
jge
sbb
sti
jg
lret
aam
dec
lea
cmp
sbb
inc
jmp
push
xor
push
xor
cld
popf
sar
xor
cmp
fs
jge
xor
pop
dec
stc
mov
ret
or
jg
daa
or
mov
push
push
mov
jne
cmp
sbb
jne
int
mov
xchg
je
sub
mov
mov
mov
mov
sub
and
jl
pop
and
adc
lods
pusha
idivl
inc
sbb
adc
adc
addl
pop
push
andl
popf
test
lcall
push
xchg
mov
lods
push
jb
inc
jno
sbb
mov
add
xor
fldenv
or
rorl
ljmp
cmp
loopne
sarl
lret
or
mov
sar
xchg
dec
ljmp
cld
push
loope
push
clc
sub
not
and
mov
and
clc
push
jb
mov
pop
xchg
mov
add
ret
sub
jmp
adc
cmc
mov
rcrb
mov
sbbl
pop
pop
lcall
jno
push
fs
mov
jg
inc
xor
cmpsb
cmp
clc
ds
cmc
push
push
add
pop
lcall
cmp
lock
cmp
mov
fisubs
test
xor
popf
pop
ds
jne
out
shlb
push
adc
inc
inc
mov
xor
sbb
push
push
sub
jns
adc
mov
aam
push
addl
clc
jo
mov
inc
xor
loope
fsubrs
jne
xchg
je
add
adc
xchg
xchg
pop
mov
pop
andl
cmpl
push
mov
adc
dec
jmp
add
jnp
sahf
enter
out
bndldx
push
shrb
or
mov
or
pushl
inc
aam
pop
sbb
pop
test
enter
outsb
or
fmuls
imul
adc
loope
add
dec
lcall
std
data16
movl
or
push
mov
sbb
adc
loope
pop
gs
push
inc
js
sub
push
cwtl
add
add
xchg
cs
cmp
sbb
imul
cmp
jae
inc
les
mov
dec
sti
fsubrp
sub
push
test
sub
scas
dec
and
adc
adc
dec
add
and
xchg
jle
inc
adc
sbbb
enter
clc
jge
pop
pop
movsl
lret
mov
sbb
ja
cmp
jbe
fsubr
fisttpl
js
aaa
xor
push
je,pt
fistpl
push
jle
mov
add
jmp
or
or
cmp
inc
inc
xchg
loope
sti
mov
jg
adc
dec
add
mov
xchg
push
xchg
cmp
add
mov
int3
mov
push
xor
pop
sbb
ljmp
call
int3
cmp
in
faddp
mov
mov
or
push
jb
ret
add
in
pop
hlt
out
sub
pop
inc
xor
push
inc
fbstp
push
add
ret
lahf
clc
imul
sub
inc
jae
pop
pop
jle
cmp
adc
or
jle
mov
je
in
mov
je
push
push
lea
xor
xor
xor
xor
xor
rcrb
mov
xor
lret
test
mov
push
loopne
push
sbb
inc
xor
mov
pushf
push
pmaddwd
stos
fldl
out
popl
or
jmp
mov
or
ss
push
adc
pop
sub
sub
sub
sub
rcr
mov
push
push
sbb
jecxz
daa
xor
and
or
js
loopne
movsl
xor
mov
add
pop
lret
add
xor
dec
stc
jne
add
loopne
push
adc
cli
clc
nop
xchg
push
movl
out
jle
adc
pop
arpl
test
test
adcb
std
or
pop
or
rorb
inc
dec
loop
outsl
pushf
neg
pop
sbb
pop
inc
jmp
xor
sahf
arpl
inc
mov
add
cmp
jbe
clc
jb
nop
rcrl
push
pop
and
xor
testb
out
dec
pop
pop
adc
sti
adc
mov
adc
inc
inc
lock
or
fdivs
imulb
mov
mov
jb
loopne
add
xor
cmpsl
insb
out
pop
std
lea
std
push
or
push
mov
mov
mov
or
nop
scas
imul
mov
testb
movl
cmpsb
inc
add
or
mov
or
push
and
repz
adc
add
repz
sbb
jp
in
and
call
call
hlt
cmp
repz
clc
clc
cld
adc
mov
clc
fnstcw
mov
pop
push
push
lcall
pop
sti
sbb
insl
and
push
fcompl
jbe
push
lea
jl
cld
or
std
cld
out
loopne
imull
push
or
fcmovu
daa
mov
sub
pop
nop
hlt
xor
push
fiaddl
jl
sub
out
add
dec
inc
fcomps
add
jbe
mov
jecxz
insl
pop
add
ljmp
mov
or
push
movsb
lods
mov
repz
mov
iret
repz
sbb
sbb
adc
cmp
repz
adc
or
and
repz
xor
ret
fiadds
lock
adc
push
add
outsl
dec
add
je
sub
ja
sub
push
mov
adc
push
cmp
pop
jne
add
gs
sbb
push
inc
popf
sti
push
pop
mov
push
add
inc
ds
out
cmp
adc
or
xor
sarl
je
ret
mov
push
popf
insb
ja
cmp
pop
or
jmp
scas
pop
pop
mov
cld
push
stc
je
icebp
push
leave
fldl
popf
loopne
inc
xlat
push
sbb
push
xor
cli
mov
jb
xor
xrelease
or
loopne
cs
pop
es
loope
and
inc
lock
pop
stos
inc
add
aaa
fdivr
cs
xor
sbb
mov
andl
inc
add
inc
imul
mov
lcall
adc
out
jle
add
sub
inc
fiadds
stc
in
ss
add
inc
hlt
daa
clc
inc
push
xor
push
push
inc
shlb
div
or
repz
pop
or
adc
jns
je
pushl
sbb
add
adc
add
sbb
scas
xor
hlt
push
sub
test
dec
jp
jo
or
daa
into
cmp
jb
lock
movsb
pop
sub
sbb
out
fistpll
mov
and
sbb
icebp
sbb
xchg
lcall
out
jp
inc
insb
outsl
sub
push
int3
leave
stos
pop
cltd
call
pop
decl
out
sub
adc
mov
les
cmp
jne
inc
inc
inc
inc
jmp
and
mov
add
sub
imul
or
or
stc
inc
and
xchg
js
sbb
xor
mov
out
in
pop
inc
inc
sbbb
sbb
adc
or
ret
rep
adc
sub
or
js
inc
or
arpl
mov
mov
or
dec
add
push
cmp
mov
mov
dec
sub
fisubrs
push
cmp
adc
aas
or
outsl
icebp
and
mov
testb
adc
sub
test
xchg
js
add
inc
add
sbb
add
outsl
mov
mov
fcomps
mov
pop
dec
lahf
add
mov
inc
mov
mov
jp
jp
ret
jo
ljmp
mov
add
jl
sbb
and
mov
inc
pop
dec
in
add
andb
pusha
jo
mov
dec
or
sarl
in
pop
sub
add
xchg
dec
push
push
inc
clc
add
pusha
cmpsb
push
movsb
arpl
imul
add
bnd
pop
mov
shll
repz
jmp
mov
rcrl
hlt
cld
cmp
jne
mov
push
add
lahf
shrb
testl
push
mov
sbb
sahf
cmp
inc
sub
fimuls
cmc
pushl
push
jl
cmp
jb
cmp
jl
jg
outsl
inc
jl
adc
xchg
jbe
and
scas
repnz
or
jl
pop
sub
mov
les
add
mov
jl
clc
incl
fdivrs
sub
pop
push
sbb
push
mov
hlt
pop
pop
pusha
jle
xor
bound
test
stc
push
or
xor
mov
into
fsts
jno
sbb
pop
sub
aas
xlat
fidivs
push
lock
imul
inc
and
sbb
dec
push
cmp
add
sbb
xor
push
cltd
test
es
xchg
adc
insb
nop
fimull
in
sbb
xchg
jmp
sub
fcmove
jl
inc
js
push
push
and
int3
mov
cmpsb
or
les
adc
aaa
sbb
inc
add
test
and
clc
sub
fisubl
data16
cltd
lcall
lcall
imul
sarb
scas
leave
jbe
test
mov
push
cltd
pop
idiv
add
mov
or
jae
nop
lods
lods
dec
jg
jl
out
rcrl
lea
dec
push
push
fisubrs
es
add
pop
decl
or
insb
push
mov
aas
cmp
lock
cwtl
stos
adc
xchg
not
pop
and
je
xchg
enter
aaa
cmpsl
adc
shrl
mov
xchg
cwtl
add
push
push
xchg
mov
jg
cmp
daa
add
hlt
outsb
add
add
cmp
cmp
in
adc
sbb
lods
sbb
cmp
test
jl
pop
push
mov
divb
fs
sar
imul
pop
cld
mov
or
mov
ja
mov
sbb
jne
add
daa
mov
sbb
mov
jl
push
jbe
xor
cmp
cli
in
mov
adc
in
inc
push
int
mov
test
or
push
pop
and
and
xor
ljmp
mov
rcrb
pop
movsb
pop
rcrb
cld
xlat
inc
dec
faddl
mov
in
enter
push
or
push
mov
out
arpl
add
movl
je
cmp
ss
mov
push
pop
lods
push
push
jp
int3
idivb
pop
jne
pop
cmp
xchg
inc
cmp
push
jp
add
popa
add
or
sub
mov
divb
xchg
bound
inc
dec
mov
fcompl
sub
and
push
add
je
js
clc
das
cmp
and
add
ret
adc
aas
ret
add
jle
or
jmp
shr
lea
sti
les
push
inc
adc
and
inc
push
pusha
test
test
jo
mov
mov
jl
or
push
std
cmp
cli
sub
pusha
or
pop
int3
roll
adc
lret
lea
mov
cwtl
into
cs
mov
sbb
mov
sub
jbe
cmpsb
inc
hlt
rep
ss
jmp
mov
sub
orl
pop
add
loope
sub
mov
or
sbb
clc
or
rcrb
sarl
jmp
add
cmp
sbb
mov
mov
insl
xchg
xor
popf
mov
xchg
or
lcall
adc
aam
pusha
and
je
push
popf
push
call
cmp
push
mov
and
data16
pop
testl
add
push
popa
lods
data16
add
and
addl
aas
bound
daa
movl
mov
sbb
fdivrp
mov
add
dec
imul
lea
cmpb
test
jb
add
adc
dec
iret
adc
push
imul
dec
and
push
add
or
and
add
or
test
sbb
jl
or
dec
dec
inc
loopne
sbb
jne
mov
ret
xlat
add
inc
je
jle
sbb
adc
stc
insb
adc
pop
adc
cmpl
jae
outsl
lods
lods
dec
push
std
inc
jge
jne
je
movsb
jle
cmp
jl
sbb
test
pop
dec
or
xor
push
mov
add
jnp
mov
pushl
loope
inc
aam
jmp
pop
lcall
add
jmp
pop
out
sbb
jmp
sahf
xchg
and
jbe
push
in
inc
push
std
mov
cmp
sar
popf
xor
xchg
sbb
and
push
cmpsb
or
jne
inc
sbb
rcrl
and
mov
pop
pusha
xacquire
push
subl
outsl
std
pusha
loope
cmpsb
jle
pushl
aam
faddp
orb
mov
mov
push
lret
call
inc
mov
add
push
jl
das
sub
xor
or
add
jo
adc
add
repz
or
sub
outsl
aas
pop
loopne
inc
lret
push
push
push
arpl
cs
sbb
xor
iret
cmp
or
push
clc
jno
sbb
adc
sbb
out
xchg
pop
jbe
mov
pop
jg
jmp
nop
add
inc
cmp
jl
pop
pop
mov
leave
sub
mov
xor
mov
fstpl
repnz
cld
add
loopne
outsl
cmp
rolb
sbbb
arpl
adc
or
inc
push
fdivr
jbe
loopne
sahf
dec
or
pop
inc
fsubrs
mov
push
leave
mov
mov
fxch
add
aaa
loope
fdiv
rcl
ss
inc
mov
lret
push
sbb
push
incl
rorb
in
outsl
cmp
inc
sbb
pop
pop
cmp
dec
cmp
mov
jo
mov
lock
adc
inc
or
sbb
push
and
push
mov
jle
fdivrs
push
popf
mov
push
in
frndint
arpl
loopne
in
aam
or
loopne
xchg
inc
push
rorl
fs
and
mov
outsb
fcomps
pop
mov
push
mov
adc
mov
jle
cld
adc
test
cmp
movsl
and
jne
stos
cmp
lods
and
pop
mov
push
std
mov
cmp
je
aaa
xor
mov
adc
je
or
cmp
adc
rclb
cmpsl
mov
or
ja
cmp
pushf
cli
xor
sub
pop
push
sub
test
inc
test
pop
out
pushl
mov
jo
mov
lahf
dec
and
loope
push
in
flds
cmpsb
dec
adc
lock
repz
fiadds
push
movb
lret
je
outsb
jbe
in
cltd
aam
push
xchg
ss
push
cmpl
push
jae
aas
call
add
push
jmp
cmp
or
cltd
mov
xchg
je
mov
cltd
neg
add
cmp
lahf
xor
add
mov
pop
xor
inc
or
add
adc
or
mov
push
movsl
mov
lea
add
pushl
sbb
mov
rclb
cmp
mov
lea
xchg
adc
lahf
aas
push
lea
mov
dec
je
adc
hlt
pop
dec
jne
hlt
add
jno
pop
mov
jmp
xor
add
cmp
push
scas
aam
dec
fldl
out
sub
cmp
add
lcall
xchg
mov
cmp
mov
cli
inc
cs
inc
push
or
add
lret
sub
daa
sbb
xchg
jns
popa
loope
roll
or
lret
pop
or
filds
sar
adc
xchg
cmp
je
pop
cmc
and
shlb
and
push
out
cmp
push
cmpsl
rorb
or
and
es
pop
inc
nop
or
add
pop
push
add
lock
inc
cmp
jae
push
cmp
jl
mov
inc
addb
add
jp
adc
mov
addb
mov
lock
jne
clc
push
mov
sbb
or
add
pushl
jmp
jb
pop
pop
pop
pop
cmpsl
cmp
sbb
sub
push
push
pushf
in
dec
push
and
or
push
fsubrs
mov
icebp
cmp
data16
sub
mov
sbb
cmp
mov
adc
adc
incl
sbb
scas
or
mov
int3
xchg
mov
fs
inc
xchg
or
sbb
jns
jne
jmp
fcomp
vpand
or
push
mov
jl
sbb
dec
dec
mov
cs
pop
aas
and
dec
cmpb
jle
xchg
mov
mov
mov
xor
inc
add
sub
inc
inc
loopne
movsb
cmp
pop
sahf
das
dec
aam
sti
imul
aam
and
pop
mov
push
jle
pop
and
push
jbe
push
dec
loopne
clc
dec
imul
xor
cmp
jae
mov
adcl
jo
jl
ljmp
subb
mov
imul
and
and
test
jne
push
test
sbb
jl
add
dec
jg
adc
orl
fcompl
mov
hlt
dec
adc
jne
aad
xlat
insb
shl
or
rolb
pop
nop
cmpb
mov
adc
fistl
in
pop
push
testl
and
sub
pop
ret
inc
test
ret
out
lcall
ljmp
sub
sbb
push
dec
or
test
insb
and
cmpl
push
lret
push
scas
xor
mov
push
mov
and
mov
mov
xchg
int
mov
sbb
push
aas
cmp
cld
and
nop
adc
xlat
je
mov
cli
es
mov
and
cmp
jb
testb
and
cmc
xlat
xchg
insb
testb
int3
loopne
pop
js
sbb
jge
gs
movsb
mov
movb
and
cmp
jne
cmpl
cld
ja
jb
cmp
jbe
mov
push
or
jl
jo
movzbl
push
out
sbb
push
xchg
mov
sar
call
and
mov
fidivrl
adc
xor
mov
inc
mov
xchg
fiadds
je
push
cmp
shlb
push
mov
pop
mov
nop
push
jo
mov
adc
push
mov
je
and
sbb
cmp
jbe
jbe
sbb
mov
and
cmc
cld
imul
lds
movsl
negb
jne
and
lahf
pop
and
loopne
js
mov
jbe
or
orl
jp
pop
jmp
addl
leave
jge
sub
loop
fisttps
std
rolb
test
xchg
incl
jle
cwtl
and
loope
and
xchg
fstpt
loope
add
cld
push
jo
fcmovnu
mov
add
cwtl
mov
test
pop
adc
je
in
outsl
mov
pusha
sub
or
fiadds
cld
mov
jbe
bound
sbb
fbld
fnstsw
mov
xchg
add
scas
push
jns
lock
sub
inc
lret
mov
push
xchg
and
nop
insl
xchg
sahf
or
push
push
movsb
dec
popf
pop
mov
xchg
sahf
jns
cld
aas
movsb
fs
jne
dec
add
mov
jmp
push
clc
ss
cmpsl
xor
push
fistpll
fmull
cmp
cmp
push
sahf
cmpl
cmp
xchg
jge
addr16
inc
and
push
cltd
sbb
xor
cmp
dec
lds
xchg
and
shlb
push
or
cmp
ficoms
and
mov
lods
pop
cmp
shlb
cmpsb
jne
sub
cmpsl
mov
add
adc
or
sbbl
inc
cwtl
rcrb
mov
or
lret
pop
in
cs
rorb
mov
jae
xchg
xchg
inc
mov
jbe
xchg
push
cmpsl
mov
push
arpl
lcall
lahf
aad
mov
movl
dec
ja
adc
mov
xor
mov
sbb
pop
mov
and
sub
inc
mov
andl
mov
sbb
inc
sub
scas
dec
mov
nop
and
xor
hlt
add
dec
out
inc
add
ja
std
inc
js
push
fnsave
push
lahf
mov
aas
dec
sbbl
jns
mov
push
xchg
nop
arpl
xchg
push
lahf
enter
cwtl
push
mov
push
jg
push
push
mov
outsl
mov
jo
nop
mov
bound
jl
xchg
inc
mov
es
jmp
and
cmp
nop
push
inc
pop
pop
pop
leave
push
imul
xchg
jo
push
cmovle
dec
or
add
pushf
ret
pop
aas
push
sar
push
sub
repz
push
testl
bound
stos
cld
xor
mov
jle
pop
push
sub
pop
adc
and
sub
mov
lock
inc
sti
add
push
push
push
js
sahf
xchg
cmp
les
mov
mov
add
dec
sub
jbe
add
mov
jl
sub
or
cmp
lea
mov
mov
push
dec
add
inc
insb
cmp
mov
pop
jle
push
sub
adc
adc
mov
or
or
in
inc
add
scas
xchg
mov
jmp
cmpl
mov
cmp
jnp
orl
add
mov
adc
cld
jg
mov
dec
or
or
push
push
pop
pop
fmuls
xchg
inc
mov
and
mov
mov
jg
add
add
or
lea
push
ja
pop
push
testl
jp
mov
pusha
push
or
shll
jb
lock
push
inc
xor
je
testl
and
mov
lret
iret
and
jg
icebp
subb
pop
loopne
andl
sbb
adc
mov
pop
dec
or
nop
sbb
and
leave
mov
lock
inc
adc
bound
xor
dec
jno
and
adc
inc
push
mov
add
test
je
stos
mov
sbb
sbb
push
add
cmp
jb
cmp
jb
mov
jge
call
mov
js
mov
int
fadds
clc
add
lock
inc
add
shll
add
test
loopne
add
inc
loopne
xchg
aad
es
mov
sub
cmp
test
jge
cmp
push
cmp
fs
dec
fs
add
sbb
fstpt
dec
cld
mul
push
sbb
adc
lods
pop
call
xlat
push
mov
mov
mov
popf
out
xchg
mov
mov
mov
subl
add
cmp
je
pop
sbb
popf
aaa
lea
jl
sub
mov
bnd
push
inc
jge
pop
xor
inc
mov
mov
cmpsl
das
jecxz
jg
fwait
cmp
lret
mov
mov
inc
call
cmp
jle
push
adc
and
add
repnz
dec
lods
add
jl
fwait
push
pusha
push
rclb
sahf
push
dec
loope
add
add
add
inc
mov
mov
je
testb
cmp
mov
push
imul
xor
ds
jmp
mov
mov
pop
scas
jnp
adcb
pop
cmp
mov
mov
inc
mov
test
jle
int3
inc
clc
mov
push
loopne
or
jmp
inc
add
cmp
sub
jg
mov
std
sbb
or
pop
lea
mov
mov
pop
and
sahf
sub
rorb
jmp
jne
push
out
or
scas
outsb
push
adc
pop
loopne
addr16
loop
or
shlb
fwait
xor
xor
push
inc
out
mov
xchg
das
mov
or
mov
cmp
or
add
push
dec
add
mov
rcrl
iret
add
push
jnp
mov
shr
pop
js
rcrb
jns
pop
cmp
or
sub
cmp
sti
cs
adc
inc
cmp
jne
sub
nop
add
adc
call
push
xor
imul
rcl
or
add
ret
xchg
adc
iret
mov
js
fsubrl
add
dec
ja
movsb
mov
mov
mov
jp
sub
aaa
add
jne
adc
mov
popf
adc
push
outsl
movdqa
push
pushw
fisttps
or
pop
xor
dec
lahf
out
out
push
pop
outsl
inc
or
jbe
out
push
jle,pt
or
scas
push
into
lahf
ja
jo
mov
mov
loopne
sbb
hlt
xchg
rcrb
ret
stos
xor
xor
sub
and
or
pop
mov
or
jne
test
push
jg,pt
dec
mov
sub
push
push
mov
rclb
adc
in
push
mov
push
add
mov
push
in
add
sub
lock
in
lock
rep
stos
mov
iret
jne
and
adc
adc
ss
cmp
mov
xchg
out
push
sub
push
push
ret
stos
jmp
insl
jo
and
and
movsl
mov
mov
inc
lea
shl
adc
push
pop
es
outsb
mov
push
jmp
push
cmp
sbb
aas
push
mov
push
int3
or
pop
xchg
push
imul
dec
push
or
cs
scas
push
push
insl
xor
pushf
outsl
push
inc
mov
sbb
or
sbb
push
sbb
mov
mov
add
inc
je
push
push
sti
sub
lea
or
cmc
xor
popf
jbe
sbb
or
fsubl
gs
fcomps
int3
in
in
data16
popf
enter
cmc
out
movsl
shrb
int
lea
movsl
popf
inc
mov
call
hlt
aaa
dec
cld
adc
cmp
pop
inc
test
rol
mov
test
fsubrs
int
imul
fidivs
dec
or
fildl
add
pop
push
xorl
fs
sbb
dec
pop
dec
popa
mov
jge
pop
jmp
jge
sbb
js
sub
call
xor
stc
sub
div
lea
push
adc
push
pop
out
hlt
ss
rcll
add
mov
outsb
jle
and
lods
xchg
jb
imul
ss
mov
ret
cmpb
pop
push
sub
idivl
inc
fs
push
call
aaa
jno
movsb
push
enter
dec
mov
xchg
loop
pop
xchg
cmp
out
push
xor
and
adc
adc
or
iret
imul
push
js
pop
lock
or
xchg
inc
mov
inc
dec
pushf
divl
nop
add
sub
push
jne
rcrb
pop
pop
inc
fadd
pop
push
pop
cmp
jnp
mov
or
push
mov
les
aam
mov
or
pop
inc
add
add
icebp
jns
sbb
pop
jle
sbb
add
push
cmp
mov
jge
ja
adc
adc
push
xor
out
cli
inc
mov
jmp
mov
inc
inc
cmp
inc
dec
jne
push
push
int3
jo
sub
rcr
jo
mov
adc
cmp
pop
push
in
cmp
pop
into
mov
xor
sbb
popa
adc
sbb
adc
lahf
cmp
ja
cs
push
mov
mov
or
xchg
or
test
jne
ds
add
pop
in
es
jmp
and
iret
sbb
pop
dec
mov
lret
sub
lock
mov
fcoms
lcall
cld
sbb
dec
and
sbb
cmp
je
pop
movb
pop
jbe
adc
dec
daa
xor
pop
out
rcl
icebp
inc
cmc
je
mov
rolb
js
out
add
adc
decl
jle
rolb
jb
add
add
push
incb
jb
test
mov
fs
add
add
jb
mov
dec
sub
ret
adc
std
test
lcall
inc
mov
unpcklps
test
cmc
mov
nop
pop
cmp
xor
push
dec
sub
lea
test
ja
pop
or
ds
jae
mov
push
cmp
push
and
jb
cld
jecxz
pop
iret
out
sbb
sti
lea
sub
sar
push
push
or
ljmp
into
in
loop,pn
mov
add
xor
adc
pop
pusha
fistpll
push
inc
dec
inc
jnp
dec
sbbl
push
pop
pop
ret
andl
and
inc
outsl
mov
xlat
push
push
adc
je
dec
pop
js
sbb
pop
cmpb
inc
sub
pop
cmp
jb
icebp
in
mov
xchg
packssdw
pop
add
fldl
ret
call
add
push
adcl
cmp
add
sub
push
mov
xor
fs
test
pushf
or
ret
adc
divl
xorb
lret
jg
push
movzwl
loope
add
testb
add
dec
jl
mov
or
fisttpl
mov
sub
in
lock
push
push
sub
xchg
jne
lahf
pop
scas
in
fldcw
sbb
adc
inc
cmp
sub
adc
js
or
or
pop
insb
mov
adc
jno
dec
popa
push
xchg
jne
mov
add
imul
fcomps
jne
push
pop
cmp
ja
fucomi
aaa
adc
inc
lahf
insb
sbb
adc
pop
sbb
incl
sub
add
cmp
jae
insb
or
jb
xchg
faddl
push
clc
jbe
add
sar
mov
test
jne
sbb
pop
test
pop
and
scas
bound
xorl
loop
jne
jg
add
sbb
jle
and
ja
subb
sub
mov
jbe
or
cmpsb
add
and
lods
arpl
cmpsb
popf
cmc
xchg
lock
mov
xor
cmp
jb
ljmp
addb
xor
call
inc
dec
xor
mov
cmpb
bound
mov
dec
adc
add
fimull
or
adc
dec
dec
mov
adc
adc
or
xor
xchg
sbb
data16
mov
adc
mov
add
or
loope
or
lea
xor
ficoml
stos
add
mov
mov
mov
inc
dec
jne
lea
daa
or
or
jns
call
sub
dec
push
adc
dec
push
cmp
pop
insb
adc
outsl
mov
mov
scas
inc
div
mov
aas
rolb
jbe
lea
das
loope
add
cmp
ja
and
dec
in
lea
push
or
inc
mov
inc
in
fdivrs
cmpb
cld
ficoml
push
xlat
hlt
roll
jo
and
ja
jns
std
push
cmp
mov
scas
fs
inc
inc
cld
jbe
testb
dec
and
mov
or
int
rorl
mov
lods
jmp
and
je
and
arpl
push
xchg
or
test
add
mov
jmp
mov
mov
leavew
sub
mov
imul
lea
sti
rorb
push
xchg
and
and
mov
and
jmp
push
inc
cmp
jb
shrb
rolb
test
lret
mov
adc
je
cmpl
or
and
pop
and
sbb
fwait
sarb
popf
ss
jb
inc
pusha
sbb
push
or
imul
mov
mov
push
orb
jmp
adc
fstl
push
cmp
cmc
movsl
add
lock
hlt
xor
divl
movl
fidivl
push
popa
insb
jmp
inc
jnp
push
in
jne
sarb
fldt
mov
cmp
les
clc
loope
mov
or
push
push
mov
or
mov
cmp
push
mov
and
or
sbbl
cmp
cli
and
jmp
adc
jle
jb
or
inc
mov
insb
movl
xchg
push
xor
and
xor
lea
push
inc
rolb
jnp
arpl
scas
inc
jae
cmp
jbe
cli
pop
js
iret
push
jne
mov
test
mul
test
pop
leave
inc
es
sub
xor
les
outsb
fimuls
sub
jle
mov
into
sub
add
jmp
inc
orb
inc
cmp
jbe
ljmp
cmpb
shrl
mov
pop
push
add
loopne
xorb
imul
jp
movl
call
out
adc
mov
cmp
mov
inc
inc
inc
dec
jne
mov
xchg
dec
pop
jl
sbb
divb
cmc
fdivs
jo
mov
sub
or
inc
dec
jne
fisubrl
dec
inc
sub
cwtl
loop
or
test
xor
nopl
les
xchg
jae
adc
jo
mov
loope
dec
loopne
adc
mov
lods
or
movsl
ret
jp
loop
push
pop
loop
inc
and
dec
push
pop
sub
or
mov
rep
push
mov
pop
jno
aaa
or
mov
cmp
fcompl
inc
adc
les
pop
push
inc
pop
loopne
cli
jo
insb
ljmp
xor
std
and
sbb
push
or
pop
or
or
clc
clc
add
loopne
or
hlt
jnp
aas
or
jmp
xor
dec
sbb
mov
je
jmp
pop
fnstcw
jmp
subb
sbb
es
xchg
notb
and
or
mov
push
shrl
gs
leave
movsb
cld
sti
fnstcw
int3
test
push
and
sbb
movl
pop
bound
xchg
cmp
mov
pop
cmp
jne
sbb
lock
mov
ds
lcall
sub
out
jno
mov
inc
gs
dec
jnp
sbb
sub
pop
cmpsl
and
lret
sub
and
lods
sbb
mov
lea
bound
push
cwtl
mov
jne
pushw
out
jle
cmp
push
push
cmpl
sub
andl
orb
adc
xchg
add
push
decl
jne
sbb
out
xor
push
rclb
inc
mov
mov
push
rorb
outsl
aaa
cmpl
pop
ret
inc
push
pop
ret
jo
out
add
sbb
movsb
or
jo
sub
inc
or
das
js
xor
cmp
je
push
mov
sub
sub
loop
push
add
es
repnz
nop
pop
hlt
enter
jbe
outsb
nop
push
inc
mov
lock
rolb
insb
loope
pop
pop
xor
lock
sub
jmp
dec
push
pusha
xchg
sbbl
int
jp
push
lock
sub
mov
adc
pushf
inc
cmp
mov
adcb
jmp
std
sbb
and
or
or
cmp
int
mov
add
cmpsb
imul
call
aaa
mov
inc
lret
jecxz
lds
push
sub
add
push
imul
cmp
mov
js
inc
mov
ret
les
repz
out
jl
push
je
mov
push
push
xchg
cmpsb
xor
test
dec
xor
aas
sbb
pop
mov
pusha
push
pop
push
cmp
cmpsl
pop
or
aas
add
fistpl
dec
jmp
sub
push
mov
push
mov
jnp
or
jns
mov
cmp
mov
push
adc
add
sub
mov
adc
dec
icebp
xor
cmp
jmp
and
push
push
loop
xor
xor
jbe
loope
data16
mov
jg
movsb
add
pop
shlb
mov
mov
jmp
adc
cmpsb
lock
outsl
jo
fidivl
jno
fbld
or
or
push
pop
push
fcoml
dec
dec
xchg
call
push
mov
jne
mov
aam
dec
imul
outsb
lods
cmpb
mov
lods
filds
push
pop
imul
aas
and
or
jl
cmp
jg
inc
jmp
xor
inc
cmp
les
xor
jne
out
pusha
cmp
imul
xorb
xor
aas
sbb
xor
dec
enter
mov
and
popa
pushl
pop
mov
jle
pushf
rcl
lret
jne
add
cltd
push
adc
push
push
or
fiadds
enter
insl
adc
xchg
movb
mov
mov
ljmp
push
cltd
pop
idiv
popa
insl
filds
inc
pop
lea
mov
dec
and
mov
mov
sub
insb
je
pop
sub
or
aas
lea
mov
xor
ret
cltd
imull
sub
mov
lea
cltd
es
sbb
xlat
imul
lea
leave
sub
js
out
xor
ret
pop
sbb
lea
jmp
add
pop
xchg
and
in
sbb
pop
sbb
jo
andb
or
lock
sub
jmp
icebp
xchg
sbb
subl
xor
jecxz
adc
cmpsb
jg
jne
imul
dec
and
and
leave
call
rcll
or
mov
scas
test
mov
imul
pop
lods
cs
xchg
fisttps
or
fucomp
sbb
xor
popf
add
mov
pop
es
sbb
or
arpl
add
mov
mov
push
lock
hlt
aam
out
xchg
add
hlt
invd
mov
xor
push
fldenv
addl
cmp
pop
xchg
popf
mov
xor
jbe
idivb
or
notl
aam
shlb
enter
mov
push
xor
push
push
enter
jmp
pop
push
push
push
push
mov
cltd
das
mov
cmpb
dec
cmp
mov
jp
pop
ja
xor
push
mov
cli
idivl
cli
imul
hlt
ret
popf
or
jge
push
pop
mov
pop
int3
movsl
xorb
movsb
ja
pop
push
push
jnp
outsl
jnp
jecxz
loop
push
das
stos
dec
outsl
fsubs
mov
sbb
push
cmp
jl
cmp
jg
push
jle
jge
adc
mov
or
and
repnz
jle
push
daa
cwtl
or
jb
inc
insb
sub
aad
jle
pop
jmp
jne
test
push
or
add
je
sbb
data16
loop
sub
xchg
xchg
and
sub
adc
int3
and
sbb
shll
insb
repnz
pop
xchg
lock
lea
sub
fdivl
cmpsl
je
orl
orb
jmp
cmp
shll
pushf
test
dec
push
dec
arpl
je
mov
xor
push
mov
andb
push
jl
inc
push
xchg
push
pop
mov
jae
xor
fistpll
or
xor
es
xchg
ja
push
push
push
push
push
stos
add
or
add
lea
or
lea
sub
pusha
and
push
add
movsb
sub
jmp
lea
push
lea
idivb
or
push
sbb
sbb
push
mov
or
mov
and
dec
mov
add
or
loopne
cmp
mov
jb
mov
ret
clc
cs
inc
mov
lret
scas
outsl
jecxz
add
jbe
daa
inc
add
outsl
jmp
ss
xchg
les
or
ja
lret
xor
push
jb
adc
roll
xor
int3
outsl
imul
mov
loopne
adc
inc
add
or
inc
mov
sarl
mov
sub
test
lods
ret
ds
xor
xor
inc
xor
cltd
cld
test
and
and
push
mov
or
jnp
aaa
enter
in
push
dec
inc
inc
popa
jp
and
sub
pop
and
imul
jne
lods
mov
fcoms
push
nop
jno
and
jb
outsb
mov
sub
cmpsb
mov
int3
push
push
push
add
push
les
or
jge
inc
loopne
fdiv
fiaddl
fidivrs
sbb
imul
sbb
jne,pn
sbb
jg
inc
inc
xorb
pop
popf
jmp
shr
inc
push
xor
inc
jg
jmp
ljmp
lock
sti
std
sti
in
xor
cmp
or
cmp
add
loopne
mov
out
dec
pop
fsub
sbb
push
ret
push
push
bound
and
add
fcompl
sbb
sbb
pop
mov
outsl
scas
push
or
ret
jns
jmp
popa
cmp
mov
popa
enter
loope
out
adc
adc
push
jbe
sub
mov
push
or
lcall
pop
outsb
and
add
ret
sbb
mov
mov
mov
nop
out
sub
inc
rcll
pop
inc
ret
in
mov
rcr
mov
leave
repz
dec
dec
push
adc
dec
lret
cmp
dec
andb
adc
repnz
and
dec
add
sbb
clc
dec
push
mov
push
mov
adc
mov
or
lock
mov
sub
ficomps
nop
adc
inc
sub
xor
mov
mov
ficoml
insb
push
cs
pop
jmp
std
ror
int3
push
imul
adc
ds
rcl
or
push
jl
pusha
jb
cmc
inc
add
or
das
out
push
movsl
clc
into
push
test
inc
rorl
mov
mov
rol
ficoms
mov
push
add
scas
loopne
add
dec
push
push
outsb
cs
cmp
inc
push
jae
sbb
xchg
ss
add
cld
mov
pop
adc
aam
or
inc
and
fnstenv
dec
sub
lock
cmp
xchg
jg
mov
mov
popf
mov
inc
xor
stos
rcr
in
sub
out
push
mov
in
sub
push
cmp
imull
call
push
je
sbb
ss
xor
sub
sub
stc
in
cmp
cmpsb
mov
movsb
cmp
adc
fisttpll
push
in
dec
mov
and
and
cmp
adc
mov
movsl
rcrl
sbb
notb
inc
xlat
dec
and
xchg
add
call
gs
mov
sbb
add
setno
xchg
or
pop
pop
sbb
pop
pop
pop
stc
or
ds
push
inc
push
jb
movsl
mov
test
mov
xor
cmp
jb
sbb
push
cli
sti
cmp
jb
or
xorl
mov
shr
or
add
fyl2x
cmpsb
or
sbb
add
sti
cld
adc
push
fwait
sbb
adc
push
mov
lods
rclb
aad
mov
cmp
or
add
insb
es
jo
push
xchg
push
aaa
cmp
sti
inc
cmp
cmp
jl
add
push
mov
pop
xchg
fsubrs
enter
mov
add
xchg
mov
or
jb
push
push
sub
pushl
fisubl
loop
inc
inc
loopne
imul
push
icebp
add
aam
fdivrs
fidivs
jb
adc
pop
loope
xor
lahf
mov
cmp
mov
add
pop
div
leave
xor
jne
push
in
adc
adcl
out
js
adcl
test
push
cmp
mov
imul
fisttpl
out
imul
ret
mov
call
add
xor
pop
sub
mov
sub
in
test
rolb
int
and
jecxz
add
dec
pusha
adc
scas
add
pusha
test
das
or
hlt
roll
stc
cmp
jge
imul
lret
or
jle
andl
cmp
sbb
or
or
push
or
rclb
sbbl
pop
orl
xchg
test
cmp
and
cmp
loopne
pop
sbb
mov
bound
sbb
fs
rcrl
lock
bound
pop
leave
push
sbb
pusha
mov
xchg
bound
add
sub
mov
and
and
mov
xchg
enter
fidivl
leave
adc
stc
iret
push
push
add
push
jo
add
inc
jmp
push
fmull
inc
enter
mov
loopne
xor
sbb
inc
adc
cmp
dec
cltd
sbb
push
inc
push
rorb
push
jmp
cmp
daa
sar
lret
adcl
popa
call
xchg
into
push
pop
push
pop
adc
cwtl
cmp
dec
cmpsb
iret
sarb
add
add
adc
mov
hlt
daa
ret
jo
dec
mov
pop
dec
add
int
ret
dec
decl
mov
in
sahf
sbb
push
repnz
adc
mov
outsl
cwtl
scas
mov
orl
mov
push
fcom
inc
sbb
adc
adc
inc
sub
mov
incl
insb
or
in
jb
push
add
aaa
sahf
ret
push
inc
mov
mov
inc
incl
mov
out
add
test
je
add
cmp
mov
or
xchg
add
inc
push
lcall
ja
cmp
clc
pop
sarl
ss
jmp
xor
addl
adc
add
insl
xchg
inc
clc
lods
dec
inc
inc
inc
pop
je
pop
add
mov
jp
mov
js
cmpb
nop
lock
push
or
push
mov
jle
add
dec
stc
add
sbb
loopne
shll
xchg
or
inc
arpl
dec
je
sarb
sahf
adc
leave
or
rclb
jp
into
inc
mov
xor
inc
pop
stc
pop
adc
rolb
arpl
sub
push
xchg
aam
cli
pop
push
sbbl
sbb
arpl
cmp
pusha
dec
cmp
sbb
lock
push
dec
mov
imul
repnz
rcll
jge
addb
es
subb
decl
pushl
dec
shl
lea
cmp
jb
inc
inc
pop
add
sahf
dec
in
mov
sub
push
push
orl
mov
pop
add
mov
inc
xor
imul
jne,pn
data16
cmp
and
inc
xlat
fcmovnu
mov
add
xor
add
ret
pop
subb
mov
rolb
cmp
je
inc
inc
or
jne
repnz
pop
add
mov
sar
inc
push
push
adc
mov
and
add
mov
xchg
push
jbe
ss
jl
daa
call
jecxz
dec
add
and
and
unpcklps
xchg
add
and
imul
jge
adc
add
imulb
shlb
into
out
int
pop
mov
pop
jl
bound
in
pushf
and
jbe
inc
xor
lds
mov
pop
adc
inc
mov
dec
add
pop
push
dec
mov
mov
jle
pop
test
lea
fstpt
es
or
or
push
cmpsb
cmp
cmp
xor
inc
pop
sub
shl
scas
mov
ss
into
mov
push
xchg
hlt
or
pusha
cld
xlat
test
int3
mov
mov
push
jmp
pop
sbb
cmpsb
dec
jecxz
push
jbe
rcrb
add
nop
and
clc
push
cld
add
and
adc
and
adc
cmp
jb
mov
cmp
jg
popf
jmp
adc
shr
xchg
movsb
mov
or
je
mov
pusha
mov
mov
pusha
movsb
jle
call
sarb
repnz
add
out
add
xorb
pusha
mov
cmp
test
push
pop
mov
test
mov
push
add
loopne
xchg
sbb
repz
mov
push
orb
jmp
xchg
adcl
nop
lock
push
ret
dec
mov
sub
roll
int
inc
mov
aas
push
aaa
xor
ds
pop
xchg
jne
jmp
lret
or
insb
jo
sub
mov
movl
add
add
mov
jmp
or
notb
mov
pop
arpl
aam
inc
mov
or
jae
mov
jmp
sbb
sbb
sahf
jb
testb
mov
daa
cmp
jbe
cmp
xor
lret
lods
dec
cmp
push
outsb
inc
mov
push
ds
xchg
lcall
dec
add
and
dec
je
mov
jle
insl
or
add
les
mov
adc
test
push
mov
xor
xor
mov
mov
add
iret
xor
mov
jmp
push
jl
pop
lods
mov
sbb
lea
mov
sbb
cmpb
mov
adc
dec
xchg
mov
add
xlat
loopne
jge
adc
xlat
fcoms
lret
jne
clc
jg
mov
ljmp
js
push
add
push
cmp
loopne
add
cmp
push
outsb
into
arpl
mov
lahf
jge
sub
dec
push
sbb
push
inc
cli
xor
xchg
and
jbe
add
int
cmp
and
adc
sub
and
or
lock
outsb
icebp
rcll
push
or
lock
cmpsl
pop
adc
xchg
add
ss
lods
add
push
mov
mov
inc
cmpsb
or
not
mov
push
push
pop
fnsave
add
xchg
inc
lcall
imul
push
add
and
jmp
test
mov
into
adc
lock
not
sbb
pop
jbe
rclb
mov
or
push
sbb
cmp
mov
jle
or
xor
xor
sub
popl
push
fsubl
jmp
mov
pop
sbb
push
movl
cmp
es
or
nop
or
fcomps
mov
inc
jno
movsb
sbb
cwtl
shrb
in
and
and
adc
add
or
jbe
stos
push
pop
lea
sub
mov
call
inc
into
out
inc
jmp
in
xor
hlt
xlat
adc
insl
inc
pusha
inc
icebp
xchg
scas
or
outsl
roll
dec
popa
jl
mov
dec
adc
cmp
bndldx
aas
or
cmp
jl
jle
add
icebp
xchg
negb
push
push
mov
clc
xchg
out
clc
adc
push
call
scas
lock
cmp
cli
cmp
push
jne
add
cmpsb
cltd
push
aas
out
jns
xchg
pop
aam
inc
test
gs
inc
push
call
nop
sbb
xor
shll
push
mov
sbb
mov
xchg
inc
insb
loope
ds
push
imul
sbb
jne
push
dec
cs
sub
add
sarb
jmp
dec
push
pop
rclb
sub
mov
add
or
adc
fstl
add
mov
lods
daa
cmp
inc
fldl
xchg
sub
mov
xorb
mov
cmp
mov
mov
mov
arpl
in
and
je
shrl
mov
xor
xchg
and
js
scas
testb
cmc
inc
or
mov
mov
push
adc
lret
or
test
add
add
jnp
lcall
cld
push
xor
fs
and
push
sbb
aam
daa
enter
mov
daa
enter
in
test
add
pop
cmp
add
ret
stos
pop
or
cmpsl
inc
aad
cmp
pop
rolb
shll
or
sbb
rcrl
inc
mov
clc
inc
std
add
push
dec
or
test
jbe
ljmp
jb
sbb
fwait
ss
add
shlb
add
cmp
jb
repnz
xor
lahf
jo
dec
sbb
pop
or
add
push
mov
push
xor
mov
shr
not
add
cmp
or
add
mov
enter
lahf
xor
push
imul
cs
dec
adc
xor
push
push
push
cmp
xor
mov
or
ja
cltd
sub
pop
sub
sbb
xchg
cli
test
bnd
push
pop
mov
or
movsl
dec
push
xchg
mov
sub
push
sbb
mov
popl
cmp
xor
shll
pushf
negl
call
cmp
sub
pusha
lods
imul
pop
jmp
loop
mov
cmp
jae
push
rcrl
ljmp
sarb
out
sub
dec
pop
pop
daa
ss
adcl
push
push
and
push
push
or
jecxz
or
imul
outsb
les
jmp
lret
or
push
xor
mov
mov
adc
bound
adc
outsl
lret
mov
adc
mov
je
cld
shr
mov
imul
jp
add
push
dec
decl
shrl
xor
adc
push
cld
rcrb
ljmp
mov
test
jne
sar
dec
sub
mov
sarb
pop
mov
inc
mov
subb
jae
lret
lea
shll
pop
mov
inc
decb
jne
and
xchg
les
orb
pushf
mov
repnz
pop
add
push
dec
mov
roll
add
pop
and
pusha
ljmp
rcl
xor
and
pop
hlt
shrb
cld
xchg
sub
sar
xor
shll
pop
lret
cmp
jbe
mov
mov
imul
sarb
cmp
je
inc
jno
fwait
lret
cmpsb
data16
mov
shr
not
and
fs
sub
jmp
push
mov
loopne
mov
xor
adc
mov
pusha
dec
pop
add
mov
xor
and
imulb
xor
or
imul
outsl
pop
pop
lock
mov
pop
or
add
or
adc
mov
push
negl
sub
mov
mov
sti
or
xchg
xchg
lods
push
or
pop
lock
dec
or
jmp
dec
adc
repnz
in
lods
dec
push
mov
mov
sbb
mov
mov
insb
decl
int
nop
or
and
dec
mov
pusha
cmpsb
dec
and
shl
add
scas
fistps
je
push
adc
aas
gs
push
or
cmp
adc
andl
iret
push
decb
adc
inc
push
pusha
add
and
nop
dec
scas
xchg
out
and
loopne
int
jb
adc
fildll
enter
push
imulb
ret
lahf
outsb
call
push
jbe
insl
or
mov
cwtl
or
add
inc
daa
lock
add
lock
add
adc
outsl
push
or
push
jmp
js
add
dec
adc
or
add
fisubrl
int
outsb
cld
mov
mov
inc
dec
xlat
add
adc
or
movsb
adc
mul
cwtl
sbb
pushf
jmp
orl
ds
mov
lds
adc
sub
lret
sbb
pop
mov
shlb
jo
xchg
add
inc
xchg
stc
mov
imul
mov
mov
or
or
jne
test
sti
mov
or
mov
or
push
cmp
mov
cli
ja
sub
shr
out
arpl
stos
inc
orl
orl
or
sti
out
sub
cld
lock
call
mov
jne
icebp
xor
test
mov
pushf
dec
and
jb
adc
jnp
pusha
frstor
popf
mov
jecxz
mov
inc
mov
lock
push
mov
jne
or
and
ljmp
int3
les
add
stc
add
shll
ljmp
dec
cld
mov
rcrb
stos
mov
and
jno
out
bound
mov
test
inc
xlat
insl
adc
pop
cmp
hlt
je
sbb
sar
push
mov
int3
push
sub
and
pop
inc
pop
mov
movsb
inc
stc
sbb
clc
jge
jb
rolb
es
add
mov
nop
dec
or
push
add
push
jns
mov
add
mov
shrb
cmc
add
mov
fstpl
dec
jo
push
lea
jbe
pop
jg
jmp
jle
mov
xchg
cmpsl
imul
shll
sbb
iret
jp
rclb
aaa
mov
dec
test
jbe
dec
mov
push
push
pusha
scas
xor
push
aas
lcall
sub
jl
push
loopne
ljmp
outsb
in
push
xchg
sub
pop
xor
push
sar
add
jp
movsb
pop
imul
nop
xor
sbb
pop
test
xor
cmp
xchg
or
into
je
fisttps
pusha
test
pop
mov
orb
fcmovu
ja
ja
mov
jo
dec
ficoms
add
mov
loope
loope
push
dec
lea
mov
ret
imul
cmp
mov
push
cmp
xchg
lret
lret
decb
into
mov
push
cs
rdmsr
cmp
dec
mov
jns
dec
hlt
rolb
sbb
jb
dec
add
jp
insb
mov
ret
pop
and
shlb
dec
push
push
push
cmp
shr
adc
jmp
in
pop
shll
xor
stos
dec
or
out
fldcw
push
nop
cmp
scas
js
mov
and
or
cmp
jb
cmpb
mov
es
fnstenv
jmp
sub
jmp
xor
aaa
arpl
sbb
push
test
add
push
xor
orb
add
je
mov
mov
mov
cli
mov
xchg
mov
jl
and
and
rclb
int3
jno
mov
imul
add
ss
out
repz
mov
mov
into
jne
mov
push
pop
les
inc
test
inc
push
pushf
mov
sub
in
sub
icebp
sbb
cmp
mov
add
cmp
xor
sub
push
ss
push
dec
cmp
mov
and
mov
decb
jne
int3
dec
das
cmp
and
jmp
jp
mov
pop
pusha
dec
bound
fwait
or
mov
imul
mov
je
cmp
push
or
das
pop
mov
enter
sub
jge
cmpsl
mov
inc
or
push
subb
cld
or
push
or
lret
mov
inc
mov
cmpsb
cmp
orb
or
adc
mov
add
scas
and
sbb
mov
lea
mov
sbb
sbb
sbb
pop
rcrl
mov
andl
add
sbb
mov
sbb
rorb
filds
cmp
adc
or
push
pop
push
ret
insb
push
push
inc
loopne
inc
orl
mov
cmp
data16
add
mov
dec
cmp
sub
add
push
sbb
mov
mov
xor
mov
fistps
sbb
jae
rolb
push
mov
push
sti
add
adcl
in
jle
ret
js
sub
pop
lock
jae
loope
or
pop
lcall
inc
pop
mov
nop
xchg
inc
sub
in
orl
imul
and
dec
dec
out
xchg
pushf
fdivs
outsl
or
leave
and
push
push
mov
movsb
xchg
das
fucom
ret
ret
push
sub
sub
lret
adc
lods
xchg
inc
push
pop
loopne
sub
and
add
or
pop
push
inc
or
mov
or
dec
loope
adc
mov
leave
mov
loope
rcrl
ret
inc
sbb
sub
sbb
or
adc
adc
punpckhdq
repz
jmp
cmp
push
inc
nop
lret
cmp
fbld
push
jbe
dec
movsb
adc
outsb
adc
fistl
or
and
mov
iret
pop
inc
daa
add
sub
or
inc
call
jmp
leave
int
pop
xchg
adc
mov
adc
sbb
push
test
xchg
pop
xor
inc
ror
clc
add
int3
and
add
inc
jmp
pop
movl
pop
popa
xorl
cmp
jne
mov
leave
push
adc
dec
cmp
sbb
out
pop
je
sbb
test
movsb
packsswb
rorl
add
push
sub
inc
and
push
test
pop
sub
adc
rorb
pop
add
andb
jmp
pop
icebp
jle
push
push
pop
div
mov
aas
or
sub
adc
xchg
les
or
adc
jns
push
cmp
inc
mov
fiadds
mov
lods
sub
hlt
hlt
mov
test
hlt
xor
xlat
add
daa
and
imul
sub
call
cmc
je
inc
enter
sbb
dec
adc
cmp
or
stos
jb
inc
jge
xchg
xchg
cmpsb
cmp
push
hlt
cmp
je
movl
sbb
sbb
mov
inc
sbb
xchg
xchg
pusha
jnp
data16
or
push
adc
cmpsl
mov
mov
sbb
xor
fdivrp
scas
pusha
popa
pop
jbe
sahf
dec
push
jno
inc
fs
cmp
or
enter
orl
fcoml
mov
sti
outsb
cmp
fildl
nop
pop
jl
adc
ljmp
and
jo
adc
sub
mov
gs
mov
pusha
sbb
arpl
jle
test
ja
enter
xchg
cld
cmp
je
movl
xor
push
mov
data16
sub
hlt
jecxz
divps
outsb
jmp
lcall
sub
and
sub
sti
xor
neg
sbb
and
inc
sbb
ss
push
jecxz
dec
daa
js
pop
xchg
adc
incl
cld
shlb
push
addr16
or
lea
push
cmpsb
adc
add
pusha
subl
cwtl
ljmp
int3
cmp
push
sbb
aam
push
xlat
push
sub
int3
jl
or
jl
mov
mov
add
dec
mov
add
add
pop
mov
and
or
iret
inc
sbb
sub
ja
ja
sbb
or
je
mov
push
cwtl
pushf
aad
mov
jnp
bswap
arpl
rcrl
addl
sbb
rcrl
sbb
lds
sbb
push
test
adc
cltd
inc
inc
push
xchg
add
push
and
adc
add
int
push
in
and
cmp
cmp
imul
es
dec
shlb
out
sbbl
adc
leave
leave
in
ss
leave
leave
leave
leave
sub
xor
fimull
leave
cmp
inc
and
pushf
pushf
fmull
cmovs
pop
pushf
pushf
push
pop
add
daa
daa
fs
daa
daa
je
jl
imulb
dec
es
mov
xchg
cwtl
pushf
mov
movsb
test
and
or
dec
pop
dec
xor
inc
inc
ficoml
add
xor
inc
mov
and
shlb
movsb
mov
data16
cmp
and
test
adc
sbb
push
xor
sbb
dec
and
int
xor
and
subl
sbb
ret
adc
repnz
jo
add
xchg
xchg
inc
ret
cmp
std
add
sbb
dec
jne
out
mov
mov
sbbb
jle
sbb
popa
mov
mov
push
pop
inc
pop
inc
das
add
js
ss
add
scas
ret
test
and
icebp
mov
sarl
mov
xor
mov
push
sub
dec
leave
mov
jo
xor
mov
data16
jne
aad
mov
aad
sahf
push
jmp
inc
cli
lcall
ss
out
add
test
pop
xchg
icebp
fsubr
sbb
outsb
out
xor
call
mov
fildl
mov
pop
cmp
cwtl
adc
push
or
or
icebp
or
xorb
lea
repz
mov
mov
or
outsl
sbb
arpl
cmp
pop
mov
repz
mov
icebp
jbe
ret
je
xchg
adc
or
sub
push
jbe
push
cmpb
jne
adc
dec
sbb
mov
jp
ret
mov
xchg
shl
loopw
push
push
lea
jmp
scas
lea
arpl
aad
push
pop
sbb
sub
imul
sbb
dec
push
dec
and
or
lret
push
add
jo
testb
dec
pop
icebp
and
xchg
jb
out
dec
or
jo
add
cmp
aaa
pushl
dec
inc
and
decl
jo
sti
or
je
mov
add
rcr
out
shll
fs
pop
loopne
jecxz
mov
mov
mov
pusha
pushl
mov
fbstp
mov
mov
call
imul
sub
sbb
mov
cmp
cmpsl
pop
jmp
pop
sbb
mov
movsl
add
ret
pop
xchg
sbb
pop
popf
je
xor
push
in
shrb
inc
sbb
scas
cltd
xor
inc
add
and
movsl
jnp
mov
mov
aam
inc
pusha
cs
inc
add
inc
mov
lea
adc
cs
inc
xor
fmuls
mov
adc
fsubr
fisttpl
sarb
mov
sbb
push
mov
dec
mov
inc
ret
add
insb
int3
addb
xchg
add
xor
sub
adc
mov
andl
cmp
imul
rorb
clc
mov
xchg
stos
sbb
jmp
add
sbb
test
dec
lcall
insb
pusha
mov
and
sbb
add
sbb
mov
mov
stos
sub
xchg
rcrl
jns
dec
iret
sub
shrl
add
mov
cmp
movsb
inc
sti
xchg
lret
test
sbb
push
push
cmpsl
out
mov
jecxz
jnp
js
cmp
mov
inc
test
sbb
push
stos
dec
daa
stos
aam
push
inc
inc
adc
sub
sbb
dec
fwait
notb
push
or
add
push
notb
adc
jne
orl
pop
xor
mov
fldenv
ds
adc
inc
cmp
imul
xor
fsubrs
adc
inc
jb
movsl
lret
rcrl
push
or
jle
or
jge
mov
adc
cld
jmp
or
or
sbb
mov
mov
out
lods
adc
imul
lock
addr16
ret
mov
push
inc
jecxz
inc
adc
jo
add
push
movb
rolb
outsl
mov
mov
lock
xor
jbe
push
gs
movsl
pop
les
in
nop
ss
or
jno
push
cwtl
lods
inc
dec
xor
mov
sbb
into
or
cld
ja
orl
dec
out
cmp
mov
aad
es
cmp
outsb
popa
addr16
or
and
push
aas
shll
pop
mov
dec
cmp
out
xor
test
add
xlat
mov
test
or
sbb
jl
lcall
mov
popa
js
arpl
adc
cmp
push
hlt
sub
adc
mov
add
jmp
pop
xlat
add
pop
inc
orb
lea
jmp
loope
cmp
push
scas
xor
sti
inc
daa
mov
dec
sbb
outsl
fdivl
mov
ret
nop
sbb
push
outsl
xor
cmp
pop
dec
es
hlt
sub
mov
cmpsl
loop
push
enter
cltd
adc
or
sub
xor
ret
or
sub
fwait
ljmp
push
subb
test
push
sub
jl
and
mov
jae
mov
insl
pop
ja
dec
je
and
jno
add
push
cmp
sbb
add
jbe
out
or
nop
jb
jle
and
rorl
xchg
xor
lret
jbe
mov
ds
cmp
inc
pop
roll
dec
sbb
mov
mov
mov
std
pcmpeqb
fidivs
sub
add
filds
les
or
add
sbbb
inc
rolb
pusha
sbb
inc
pop
xchg
cmp
mov
pushl
or
dec
sbb
dec
adc
jl
xchg
fiaddl
push
sbb
imul
jo
add
cs
dec
sbb
mov
je
sbb
sbb
out
pop
xchg
dec
sub
jne
and
inc
call
and
test
rorb
inc
dec
jle
cmp
sub
inc
ss
je
and
sub
js
or
or
ret
inc
outsb
pop
adc
ljmp
je
lea
sbb
cmp
in
push
push
popf
fstpt
in
int3
sbb
movsb
fidivs
cmp
adc
pop
ficompl
in
sbb
add
je
push
mov
mov
push
das
dec
jnp
push
dec
and
lock
fmuls
add
fldl
test
lea
addr16
xchg
test
or
enter
scas
outsl
outsb
rcrl
or
out
push
cmp
nop
arpl
pop
xchg
or
cwtl
in
or
outsb
jne
and
sub
out
pop
adc
aad
mov
jo
and
sbb
or
jg
ja
ja
add
rcr
lret
mov
push
andl
push
leave
repnz
jl
xchg
dec
imul
cmp
adc
add
sbb
arpl
jmp
and
pop
lret
pop
loopne
shlb
nop
push
js
and
int
lock
adc
outsb
inc
rcll
adc
mov
adcl
addr16
adc
daa
incl
leave
out
lea
push
cmpsb
jle
cmpl
push
ret
sbb
sub
jl
inc
inc
shrb
mov
inc
inc
and
pop
add
pop
inc
jmp
cmp
add
jne
sub
cmp
mov
mov
test
and
cmp
add
jmp
sub
xor
mov
cmp
je
cmp
inc
ja
mov
insb
adc
pop
inc
ret
stc
dec
add
add
lds
rcrb
aaa
jl
dec
test
sahf
movsbl
sub
jmp
test
jnp
mov
sub
cmp
cs
push
push
or
and
adc
sbb
jb
addr16
mov
and
and
sub
add
push
clc
inc
inc
out
subb
add
mov
or
add
ret
push
adc
inc
xor
sbb
xor
sub
fs
aam
insl
mov
ja
gs
jmp
cmp
jns
aas
lcall
adc
push
movsl
arpl
xchg
xorl
push
or
cmp
data16
xor
adc
adc
cwtl
push
mov
and
push
ret
shrb
jns
int3
pop
and
iret
inc
mov
jle
xchg
adc
sub
push
push
shll
cs
cwtl
pop
push
outsl
sbb
push
aam
xchg
dec
pushl
dec
cmp
popa
jbe
jb
dec
sbb
jge
dec
xchg
and
je
adc
stos
popf
pop
leave
jne
shll
testb
mov
jmp
push
xlat
data16
iret
or
pusha
or
sbb
push
push
mov
imul
gs
rorb
std
stos
mov
add
jmp
inc
or
ret
daa
inc
sbb
mov
or
mov
dec
es
jg
or
insl
gs
adc
lcall
movb
je
jg
jo
int
pop
sub
std
add
insl
bound
xor
add
push
push
sbb
pop
or
popa
popa
pushf
outsl
cltd
or
push
pop
pop
mov
mov
add
or
inc
int
sbbb
stos
xchg
cli
rcll
or
je
xchg
ds
aam
das
cmc
mov
mov
into
es
push
je
mov
and
jb
cmp
cmp
std
ja
add
cmp
adc
cmp
jne
xor
adc
fidivrl
mov
neg
mov
into
leave
icebp
mov
imul
dec
add
hlt
or
push
ret
xorb
imul
popa
dec
stc
cmc
push
and
in
int
and
test
inc
gs
sbb
or
repnz
std
push
push
pop
dec
cmpb
pop
sub
cmp
dec
and
outsb
inc
adcl
ljmp
pop
out
pop
mov
xor
cmp
jle
cmpl
fsubl
xorl
push
jge
ss
adc
push
jge
dec
scas
dec
filds
sbb
xlat
jle
add
scas
sbb
and
adc
rcl
loope
loope
jl
imul
adcb
stc
add
push
pushf
jp
dec
icebp
js
enter
aas
mov
mov
sbb
fcompl
jne
push
fcoml
pop
cltd
in
push
insl
add
inc
add
jmp
rorl
cmc
sbb
or
test
jg
push
ds
je
mov
test
je
mov
cmp
jb
cmp
jbe
inc
inc
add
jmp
pop
sbb
mov
push
mov
int
adc
ljmpw
shlb
loope
into
sbb
adc
push
or
mov
clc
push
dec
aam
test
and
mov
jl
or
inc
pop
repz
mov
pop
jne
inc
jb
shlb
jno
lods
js
orl
in
add
idivl
and
cwtl
pop
mov
inc
pushl
jns
mov
je
test
push
fstpt
push
xor
mov
lahf
cmp
and
mov
loopne
pop
test
push
mov
or
sbb
jge
sbb
push
and
dec
adc
lret
sbb
rclb
fcoml
daa
jbe
and
xchg
inc
push
gs
addr16
clc
incl
shrl
jle
push
inc
mov
mov
inc
pusha
push
pop
mov
cltd
enter
fs
and
daa
push
push
add
add
in
cmp
push
push
roll
sub
pop
xor
jmp
inc
adc
push
push
push
jbe
aas
stos
rcrb
jle
cs
push
test
ret
test
imul
sbb
xlat
aaa
push
dec
outsl
aam
push
mov
mov
add
sub
popa
sub
fsubrs
call
fsts
xor
mov
mov
lock
ljmp
jl
dec
notl
add
push
js
mov
dec
jbe
movsb
lock
push
xor
add
sbb
jne
push
sub
and
roll
sbb
sub
outsb
jle
mov
cmp
pop
test
sub
push
inc
pop
jbe
ss
les
adc
mov
test
add
addl
and
sbb
repz
dec
rcl
pop
or
inc
neg
mov
je
mov
jg
sbb
in
xor
shll
sub
cld
add
call
pop
jl
jb
xchg
test
jbe
or
int3
cmp
fldt
jns
sbb
mov
nop
cmp
repz
and
stos
dec
xor
push
jmp
adc
loop
jge
filds
push
jmp
inc
add
mov
sub
sub
js
mov
dec
push
mov
mov
add
xor
sbb
cwtl
sub
pop
inc
sar
stos
mov
push
das
pop
inc
and
or
ja
hlt
filds
sub
add
mov
inc
and
and
or
aad
push
xor
stos
xor
imul
sti
push
and
push
mov
bound
cmp
sub
fcoms
sub
mov
add
stc
out
addb
outsl
and
push
jb
push
add
adc
adc
lret
dec
je
imul
pop
sub
sub
xchg
loop
insb
or
lock
fistpll
shl
inc
xor
mov
cmp
je
pmaxsw
das
add
es
loope
or
or
or
sbb
jp
mov
or
ds
push
fmul
xchg
mov
push
jmp
jns
test
sbb
or
decl
jbe
add
cmp
loopne
rorb
pop
es
iret
push
lret
or
es
shl
push
adc
cmpl
lret
mov
nop
shr
fs
xor
jo
and
push
sbb
or
dec
das
aam
out
jne
lods
call
inc
cld
ret
and
pop
sub
cmp
je
mov
cmp
jnp
jb
adc
cmp
addr16
outsb
or
cmpsb
xor
mov
out
fs
mov
jb
fsubr
add
movsb
jb
push
clc
sbb
dec
and
inc
mov
into
cltd
push
ds
jle
add
dec
or
push
in
cmp
insl
dec
rorl
mov
outsb
cmpsb
int3
pop
jp
push
push
mov
mov
or
pop
ret
sub
js
mov
in
dec
xchg
rorb
lock
jmp
cwtl
xchg
aas
popf
cld
inc
cmpsb
fs
cld
cld
les
mov
lock
rorl
mov
mov
into
push
in
mov
adc
cmp
mov
ficoml
adc
inc
push
ret
mov
into
push
sbb
xor
pusha
fadd
icebp
xchg
xchg
lds
or
and
mov
cmp
pop
or
dec
add
cmp
add
cli
aam
int
lods
mov
movsb
lret
outsb
in
imul
or
outsl
leave
sub
and
sub
push
mov
xor
and
das
add
push
xchg
imul
dec
in
shll
inc
mov
jae
sbb
inc
int3
jnp
ret
cmpsb
mov
mov
inc
movl
add
sti
pop
add
ror
sti
or
adc
push
add
mov
aas
bound
and
insb
outsl
arpl
imul
bound
data16
jo
aaa
mov
notb
sbb
punpckldq
dec
gs
gs
jmp
outsb
dec
dec
jo
jae
jns
jne
pop
dec
jbe
jp
bound
popa
insl
push
dec
inc
inc
insw
call
insb
jp
dec
dec
jno
dec
arpl
inc
outsb
push
pop
inc
inc
push
inc
inc
jbe
jbe
push
dec
jne
dec
idiv
jns
push
inc
fs
dec
dec
jne
push
outsl
inc
pop
arpl
dec
push
dec
push
js
push
push
in
in
decl
jne
imul
jo
fs
loop
pop
outsl
mov
insb
jne
and
bound
push
imul
dec
outsb
jae
push
push
pop
imul
inc
inc
jb
jno
popa
push
dec
pop
jp
jns
pop
inc
outsl
inc
lock
call
dec
pop
push
push
pop
js
gs
ja
dec
push
outsl
jae
dec
push
sub
inc
inc
insb
arpl
push
push
js
push
push
dec
jb
imul
ljmp
jae
outsl
addr16
data16
dec
popa
dec
imul
jb
inc
imul
int
cwtl
gs
jne
gs
inc
jb
add
pop
in
pop
das
comiss
fildl
dec
bound
jb
rorb
addb
adcb
addr16
jae
pop
cld
addb
fidivs
push
push
bound
mov
adc
pop
dec
ds
orb
lahf
mov
push
mov
test
add
fidivs
inc
imul
sbb
jle
pop
dec
inc
pop
adc
scas
mov
arpl
mov
push
getsec
pop
popw
mov
add
dec
aaa
scas
roll
pusha
mov
push
push
cmp
pop
aaa
cmpsl
pop
enter
outsl
ja
dec
mov
mov
jb
push
and
call
outsb
je
insb
insb
cs
ja
outsb
insl
pusha
test
push
imul
lahf
inc
insb
push
nop
ja
push
jnp
ffree
jb
jne
inc
dec
inc
js
movsb
mov
or
xor
movd
add
add
add
mov
popa
leave
jmp
jmp
jo
repnz
pop
dec
push
push
pushf
jb
loopne
inc
dec
pusha
inc
pop
jnp
jle
aad
inc
inc
cmp
xor
sub
xor
inc
or
xor
aaa
sub
fbld
inc
xor
xor
inc
jge
dec
outsb
jo
push
js
add
add
add
ss
lds
clc
xchg
cmp
sahf
ret
cmpsb
sbb
inc
outsl
mov
outsb
outsl
ja
and
gs
lea
cs
inc
cwtl
or
add
xchg
in
dec
fwait
add
and
push
push
mov
add
add
add
add
sub
jae
in
leave
push
mov
jle
pop
inc
arpl
bound
ja
jg
push
jns
or
adc
adc
push
pop
sbb
lcall
sbb
sbb
push
pop
and
and
and
es
sub
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
mov
mov
pop
pop
pop
pop
pop
pop
pop
pusha
popa
ss
xor
and
insb
insl
or
push
jmp
jbe
js
jp
jl
jle
add
add
add
and
and
adc
xchg
sbb
adc
add
insb
add
addb
xchg
push
aad
and
rolb
add
loopne
roll
add
subb
add
mov
add
push
mov
sbb
add
add
inc
sbb
out
aas
sub
add
incl
mov
mov
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
jmp
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
inc
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
jmp
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
incl
sbb
jo
and
inc
adc
mov
adc
add
push
dec
push
jne
jg
decl
outsb
push
jne
push
gs
push
push
popa
sahf
dec
popa
outsb
inc
pushl
bound
jb
jo
or
dec
add
inc
jne
push
gs
arpl
out
les
adc
js
je
outsl
mov
sub
add
xor
jb
stc
mov
add
jne
je
insl
and
sti
and
inc
push
dec
dec
push
push
and
das
stc
cs
inc
add
inc
and
aaa
rcl
and
xor
adc
and
jo
imul
and
into
sub
je
mov
fcos
gs
jo
and
insb
outsl
es
push
dec
mov
mov
bound
jns
imul
xor
or
xorb
outsb
je
data16
mov
jne
pop
ja
loopne
xor
and
insl
push
xchg
inc
cs
aas
xor
and
jne
dec
mov
shlb
push
inc
xchg
insl
les
out
fidivs
shrl
and
xchg
and
jbe
dec
mov
imul
push
pop
es
scas
shll
and
push
and
add
xchg
jb
and
push
loopne
test
ds
gs
popf
jb
je
outsl
mov
sbb
jp
push
daa
sub
dec
imul
insb
jb
cmp
add
sbb
dec
popa
sbb
mov
loopne
ret
mov
imul
out
xor
int3
or
inc
inc
inc
push
pop
add
pusha
mov
xor
mov
mull
xor
fadd
push
push
fistps
push
or
pop
aaa
xor
ss
shll
mov
sbb
add
add
imul
nop
ss
fs
jo
cli
jbe
inc
and
mov
xchg
push
mov
sbb
das
mov
inc
lock
sarl
dec
je
in
outsl
jo
xlat
outsl
push
or
arpl
hlt
xchg
imul
jo
in
xchg
ret
bound
push
inc
aaa
xchg
mov
ljmp
das
pop
mov
outsb
popa
pop
or
push
jmp
rclb
push
leave
nop
xor
sub
mov
fldl
or
adc
and
push
xchg
cmp
out
dec
pusha
or
and
pop
push
fldl
mov
push
jae
or
arpl
jo
js
pusha
jo
sub
push
mov
rorb
fsubrs
push
sub
lret
inc
sub
pop
in
jne
jo
jmp
add
jp
movsb
cmp
sub
inc
jne
jno
dec
arpl
out
gs
dec
and
fmuls
arpl
in
pop
les
pop
sbb
in
lea
mov
nop
xchg
xchg
ds
mov
xor
jbe
dec
lock
scas
dec
bound
mov
lock
mov
push
daa
inc
ss
movsb
and
sbb
repnz
xor
imul
ds
in
push
movsb
and
pop
mov
fimull
mov
add
loopne
dec
adc
cmp
cmp
aam
addr16
jbe
mov
addl
fisubs
jbe
push
push
push
cmp
lahf
fs
and
arpl
mov
xor
push
pop
add
gs
adc
mov
es
sub
aad
dec
lahf
jae
sub
pop
inc
xchg
pop
cmp
sub
push
push
jae
cmp
or
push
cmp
call
gs
addr16
subl
adc
adc
adc
inc
or
sti
dec
push
push
push
push
dec
testl
in
loope
lods
dec
je
outsb
pusha
cmp
fildll
dec
jge
pop
jae
lds
fs
add
sbb
push
bound
fistpll
ret
push
inc
outsl
jae
inc
imul
andb
inc
popa
cmp
jbe
bound
jg
sub
push
or
scas
mov
mov
pop
loope
aaa
daa
xchg
mov
popw
out
dec
jnp
cmp
cmp
add
ds
push
das
push
sub
imul
sub
sub
out
frstor
cmp
add
add
in
out
sub
sub
sub
sahf
sub
push
mov
add
push
cmp
je
add
in
dec
pop
pop
test
addr16
push
mov
cmpsb
ret
jb
imul
push
sbb
push
cld
or
jecxz
sbb
xor
xchg
mov
jo
sub
cmp
daa
mov
iret
repz
push
jbe
mov
repz
jo
pop
ds
out
push
mov
negl
push
inc
ds
cmp
sahf
out
sahf
xor
sub
sbb
jns
out
adc
or
add
cmp
out
cld
mov
repz
in
call
cmp
repz
ror
enter
iret
repz
iret
lods
test
mov
out
movb
repz
out
cld
mov
mov
cmp
lock
cmp
sarb
repz
pusha
inc
and
mov
pop
push
lods
andb
xchg
ds
cmpsl
aas
insl
mov
insl
insl
cmp
add
dec
xlat
mov
cmp
add
das
das
adc
push
dec
push
inc
test
adc
sub
gs
pop
dec
ret
dec
mov
xchg
inc
test
jne
or
nop
mov
xchg
outsb
gs
cmp
xor
push
push
push
filds
out
into
mov
xchg
jns
jg
addr16
popa
hlt
int3
pop
add
data16
ss
daa
push
clc
sbb
daa
shlb
mov
jae
sahf
dec
sahf
jbe
je
pushf
dec
inc
aas
add
pop
cli
jp
lea
outsl
ja
cmp
push
inc
mov
cmpsb
jb
dec
fisttpl
cli
hlt
sbb
ss
push
inc
arpl
push
pop
xchg
mov
daa
pop
lea
mov
jle
push
inc
push
xor
cs
dec
dec
mov
ret
mov
push
test
push
cli
add
insb
sahf
cmp
dec
cwtl
gs
sbb
jp
adc
lahf
js
les
and
add
and
subl
dec
add
out
adc
adc
ficoms
fisttpll
test
les
inc
aas
leave
mov
inc
add
xor
add
lods
pop
loopne
ja
lahf
das
faddp
ds
je
ret
push
sbb
and
mov
aas
mov
mov
movntq
push
pop
add
test
pop
inc
pushf
lods
lods
xorb
cmp
shlb
es
fs
mov
cltd
pushw
adc
and
lahf
pop
pop
leave
xor
ja
in
nop
out
push
pusha
jo
mov
cs
ja
not
fsubrl
sti
add
add
out
lcall
lret
loopne
repz
lock
sub
cmp
nop
cltd
mov
pop
fstpl
sub
loopne
add
push
lock
or
inc
ja
aas
out
mov
lds
fldt
leave
sub
test
cmpsl
sub
rcrl
push
jg
lods
xchg
inc
ss
jnp
mov
add
inc
aaa
add
xchg
or
ror
mov
aas
hlt
add
rcrl
dec
inc
iret
outsl
int
in
dec
xsaves
insb
add
fldl
add
inc
daa
dec
ret
in
or
movl
inc
dec
call
cmp
pop
or
push
jg
or
jo
dec
scas
xor
fwait
add
and
mov
add
cmpsb
xchg
in
mov
out
push
lahf
decb
es
ja
mov
xor
das
jmp
xchg
push
mov
xor
or
jbe
or
repz
rclb
push
inc
pop
mov
inc
popf
out
es
enter
inc
test
mov
subb
maxps
push
xchg
int
adc
adc
adc
cwtl
sbb
lea
pmuludq
popf
xchg
xchg
insb
mov
and
mov
out
divps
inc
pop
insl
daa
jns
dec
fmuls
sbb
sbb
or
in
mov
sbb
xor
mov
mov
into
and
and
and
fimull
sub
pushf
dec
dec
jl
mov
sahf
dec
pop
enter
icebp
cmp
or
cmp
aas
jg
cmp
or
xchg
or
add
mov
hlt
sti
push
es
mov
mov
adc
pusha
pop
iret
pusha
in
test
insl
aas
sarb
jg
adc
push
into
ss
aas
and
decl
xchg
or
int3
dec
cmp
jmp
add
js
int3
in
xor
cmpsl
out
and
sub
aaa
jb
pop
leave
add
cwtl
leave
test
xchg
scas
rolb
or
cltd
pop
jo
push
adc
and
adc
movsb
inc
mov
mov
cmp
mov
push
push
pushl
outsl
mov
fs
dec
push
inc
addr16
push
insl
jae
dec
dec
imul
dec
jns
jg
hlt
ja
push
imul
outsl
fs
jb
outsl
inc
call
je
jns
lock
mov
push
adc
jae
xor
add
and
ljmp
and
or
aas
ss
pop
add
and
adc
pop
push
bound
push
fs
jb
incl
or
jmp
popf
jns
lds
inc
call
fnstsw
call
and
or
movsb
inc
in
loope
inc
adc
fistps
js
add
inc
je
outsl
pop
jnp
outsl
inc
push
dec
call
pop
ja
inc
push
inc
push
jns
inc
dec
jge
jp
jae
inc
pop
bound
push
dec
push
inc
ljmp
clc
dec
inc
inc
push
pusha
dec
outsb
pushf
dec
pop
outsb
imul
push
push
push
decl
push
pop
push
push
call
jae
bound
popa
pop
dec
pop
inc
xor
push
dec
bound
hlt
je
dec
and
dec
dec
lcall
repz
push
mov
inc
imul
inc
arpl
in
in
je
pop
aas
fwait
pop
ljmp
bound
adc
sbb
dec
inc
pop
inc
push
fs
dec
enter
add
inc
leave
aas
daa
enter
adc
lcall
sub
sub
inc
cmp
repnz
xchg
cmc
adc
jl
xchg
dec
dec
enter
xor
xchg
dec
imul
mov
push
js
pushf
data16
cmp
adc
or
cmp
imul
or
or
dec
add
daa
outsl
lret
xor
cmp
inc
das
sub
ja
pop
add
imul
call
inc
cltd
sbb
movsl
xor
dec
mov
push
ja
or
int3
lahf
push
add
adc
inc
inc
push
push
cmpsb
sub
cmpsl
add
pop
imul
sub
fidivrl
dec
decl
popa
and
sub
xor
outsl
inc
adc
stc
xchg
sbb
lret
aas
scas
push
ja
pusha
addr16
push
jo
gs
shl
xlat
pop
outsl
test
dec
jo
out
insl
lcall
push
push
dec
arpl
push
mov
jbe
inc
inc
cmp
inc
sub
xor
xchg
in
stc
jo
inc
inc
mov
lcall
cmp
push
aad
push
addr16
push
gs
dec
cmp
dec
sbb
inc
ds
dec
or
je
dec
inc
add
jl
iret
out
and
idivl
cmp
divb
adcl
sub
or
imul
pop
dec
out
fs
mov
lcall
or
ja
repnz
lcall
sbb
orl
insl
xor
out
sub
outsl
aaa
pushl
les
data16
jbe
xor
rclb
push
clc
pop
arpl
loop
cmpsb
pushf
mov
mov
jbe
hlt
jg
mov
dec
scas
jmp
fwait
mov
and
shll
mov
add
xchg
cmpsl
pushl
aaa
jmp
gs
inc
cwtl
push
xchg
push
sahf
mov
imul
lods
adc
sub
lea
inc
or
inc
flds
mov
decl
xchg
jno
inc
clc
or
outsb
fadds
imul
test
scas
sub
lcall
mov
xchg
in
test
xchg
cltd
xchg
ljmp
mov
test
fists
adc
repz
stos
popf
adc
jg
orb
mov
xchg
mov
mov
out
xchg
movsb
mov
inc
mov
xchg
mov
jge
pop
jno
and
popf
test
test
outsl
mov
mov
xchg
pushf
out
mov
incl
aas
pop
cld
std
mov
mov
insl
icebp
xlat
mov
lcall
fldenv
cli
mov
pop
xchg
call
adc
imul
shlb
push
in
nop
push
enter
mov
scas
mov
fnstcw
and
stos
nop
mov
mov
xchg
incl
mov
mov
cwtl
mov
lret
sti
lods
xchg
cli
dec
gs
stc
call
xor
mov
into
mov
repz
pushl
mov
mov
dec
call
jmp
mov
push
xchg
add
loopne
lods
mov
movsb
lahf
push
fmul
mov
cld
push
mov
mov
rcl
lods
scas
aas
xchg
je
mov
std
in
maxps
xor
cs
mov
mov
loop
loopne
lcall
lea
adc
add
and
sub
inc
hlt
pop
cwtl
scas
mov
adc
stos
test
jns
xchg
out
loopne
aad
aaa
cld
stos
dec
mov
int3
adc
dec
mov
js
in
xchg
lods
xor
sub
sbb
fimuls
aam
push
in
xchg
ja
into
imul
out
jp
sahf
xchg
mov
dec
mov
sub
sbb
pop
inc
outsb
fsts
mov
pushl
mov
xchg
jecxz
test
notl
fbstp
xchg
cmp
or
call
push
xor
loopne
mov
scas
repz
ljmp
icebp
std
test
mov
int3
div
test
jg
test
out
jg
pop
mov
mov
dec
mov
mov
addb
movsl
mov
ljmp
mov
into
add
xor
shrb
jo
clc
sbb
ffreep
lea
aam
mov
repz
scas
cld
call
mov
jg
int
jmp
jge
and
incl
fwait
out
mov
loop
arpl
ret
mov
fsubp
jmp
mov
nop
mov
jmp
roll
lods
fldl
push
lahf
add
pop
iret
enter
mov
lods
mov
rcrl
and
mov
xor
fcomip
int
cmpsl
mov
clc
loopne
fwait
and
jmp
sahf
imul
int3
mov
in
in
cli
lods
in
repz
stc
rorb
popf
xchg
incl
movsb
inc
jbe
jp
out
mov
cmp
xchg
data16
fimull
jle
xor
loopne
push
int3
jmp
out
cmp
clc
cmp
testb
and
dec
mov
dec
inc
dec
xchg
comiss
lds
mov
mov
cmpsb
pop
clc
lret
mov
out
les
mov
mov
push
cwtl
bound
enter
stos
jmp
cmp
xchg
cltd
fxch
sub
bound
pushl
and
push
mov
mov
mov
cwtl
stos
mov
pushl
or
out
mov
test
testl
cmp
xor
jo
and
dec
dec
jo
mov
push
rcr
jmp
push
mov
gs
clc
shlb
cld
jg
or
jp
out
mov
out
nop
pop
stc
jmp
aas
out
sub
jecxz
out
xchg
pop
mov
pop
mov
fsubrl
mov
xchg
cmp
movsb
and
adc
addb
mov
shll
scas
sub
lahf
pop
loop
push
stos
out
mov
and
les
gs
and
lea
incl
mov
pop
nop
cltd
scas
mov
cli
cmp
mov
jp
aas
lea
dec
mov
dec
cwtl
add
add
push
dec
nop
mov
aaa
mov
inc
jmp
movsl
sbb
jge
sbb
fistps
jg
jno
sub
mov
mov
push
loopne
pop
inc
jo
mov
fbstp
shlb
fsubrp
repz
int3
jmp
add
jmp
scas
mov
ret
jge
jp
popl
mov
add
fcompp
xlat
add
ljmp
sbb
mov
outsl
xchg
pop
into
les
cmpsb
lods
cmpsb
js
movsb
or
scas
xchg
jmp
push
ljmp
cld
pop
ficomps
std
sub
andb
cld
incl
lods
mov
mov
cmp
popa
or
ss
jae
pop
cmc
jg
mov
sub
int
adc
jg
fwait
xchg
mov
push
cmpsb
out
fldenv
aaa
cld
call
scas
mov
mov
insb
push
js
loope
mov
mov
imul
cwtl
imul
cmpsb
add
mov
je
and
cwtl
aas
mov
addr16
addr16
shr
repz
push
sti
jmp
and
mov
les
jns
pushl
repnz
inc
cld
leave
enter
int3
repz
mov
not
xchg
inc
jg
mov
fmul
roll
mov
lods
pop
sub
aaa
push
std
in
mov
daa
mov
fcomip
jo
call
aam
outsb
movl
xorl
push
adc
stos
out
xchg
lods
mov
insl
push
push
sbb
cmp
cld
mov
xchg
scas
cltd
stos
cs
inc
jbe
cmp
push
incl
fisubl
cmpb
test
pop
cld
lcall
loopne
lahf
ret
sub
push
jno
idivb
jns
xor
jg
sub
xor
adc
and
jnp
sub
cltd
les
pop
sbb
dec
lds
divb
push
fnstsw
loop
ljmp
sti
mov
fists
and
mov
push
pop
repnz
lods
int3
cmpl
inc
dec
mov
mov
rorb
nop
pop
jl
mov
lahf
mov
xor
xor
setp
idiv
insl
xor
sub
in
dec
mov
xor
dec
call
xchg
shll
jg
ljmp
les
pop
push
lock
xchg
mov
mov
mov
xor
inc
out
adc
in
lcall
sub
sbb
sbb
shld
iret
and
dec
mulb
lcall
or
les
inc
add
lcall
out
test
cmpsl
jo
xor
cmpsb
iret
pushf
dec
cli
sub
decb
incl
scas
das
mov
push
and
out
scas
cwtl
daa
jnp
pushl
sbb
popa
push
pop
inc
enter
xchg
sub
xorb
faddl
mov
arpl
mov
ficompl
mov
test
in
scas
push
stc
and
and
cmp
cmpb
js
mov
and
and
aaa
test
lock
in
mov
xchg
push
les
sbb
cs
inc
inc
push
leave
mov
lahf
negl
mov
and
sbb
inc
sbb
and
mov
pushl
std
sbb
out
mov
adcb
test
mov
mov
scas
cmpl
ljmp
data16
pop
lock
pop
cld
roll
jle
icebp
sbb
dec
arpl
fldt
not
out
call
mov
aaa
push
inc
mov
sub
mov
adc
cs
or
sbb
mov
sbb
mov
jge
loopne
mov
js
sub
test
lcall
mov
add
xor
xor
incl
push
jno
pop
fistpl
mov
adc
pop
decb
rcll
xchg
push
xor
mov
call
clc
jno
cltd
insb
inc
sahf
push
fimull
sahf
out
add
int
bound
ret
pop
cmc
mov
dec
push
mov
and
ss
dec
add
sti
and
mov
cwtl
push
divl
filds
xor
jmp
fdecstp
test
ljmp
adc
push
mov
call
cwtl
xchg
adc
mov
mov
pop
sbb
add
mov
nop
ds
imul
ljmp
sbb
cmpsb
rclb
inc
cmpsl
sahf
daa
imul
add
or
jo
lcall
out
bound
insl
std
and
pop
aas
jbe
ds
ljmp
int3
or
adc
imul
cmp
filds
outsl
das
jl
or
pop
cmc
decl
pop
lods
insb
rcrl
rolb
adc
cmp
ret
dec
sub
fdivr
jg
adc
mov
inc
dec
pop
cld
cltd
std
lea
loop
jg
inc
jae
out
dec
cltd
mov
and
popf
repz
and
jg
aaa
ljmp
in
mov
add
xor
std
jg
inc
icebp
add
mov
inc
inc
in
sub
lock
xor
test
out
adc
jmp
cltd
sub
mov
mov
inc
ficomps
xchg
test
ret
jp
test
lock
call
fwait
xchg
sbb
push
das
clc
or
mov
jb
insl
add
jg
pushl
sahf
in
daa
jp
or
inc
cs
xor
movsl
pop
jnp
loope
das
push
add
sbb
fistpll
adc
nop
and
cli
pop
mov
into
adc
inc
inc
pop
hlt
xchg
repz
add
or
sbb
xor
add
xor
pushl
or
jl
xchg
mov
pop
outsl
imul
pusha
jecxz
pop
cli
cmp
pop
les
mov
ret
adc
push
bound
test
iret
push
push
fistps
mov
add
or
cmp
stos
sbb
ja
scas
or
lcall
loope
les
enter
sbb
sbb
cmp
sbb
sub
out
clc
xchg
xor
jecxz
cmc
mov
and
sub
sar
or
mov
scas
mov
in
inc
int
sahf
mov
cwtl
repz
lods
gs
adc
outsl
push
rorb
mov
xor
shlb
cmp
stos
pop
mov
or
add
lret
jb
inc
and
cmpsl
ja
lock
dec
sbb
mov
jmp
adc
gs
lcall
sub
push
in
and
pusha
jns
test
ljmp
icebp
nop
enter
fidivs
mov
mov
pop
and
push
xchg
rolb
sbb
cs
cmpsb
adc
divb
add
mov
lret
aas
lock
mov
mov
in
pop
scas
sti
jmp
dec
or
inc
sahf
jmp
pop
out
and
cmp
in
lcall
clc
xor
and
sbb
pop
pop
bound
sub
sub
cmpsl
lcall
jl
icebp
and
pushf
inc
sbb
adc
add
pop
or
mov
mov
sbb
adc
cmpsb
mov
lock
pop
enter
insb
outsl
cmp
and
stos
mov
mov
jmp
test
xor
scas
push
add
and
stos
lods
xchg
jns
inc
pop
add
outsl
rcrb
data16
mov
mov
sahf
mov
fnstsw
dec
mov
mov
out
jne
adc
stc
fwait
aas
xor
cmp
xor
xor
mov
mov
outsb
sahf
adc
cli
sub
mov
and
pop
add
ss
rcll
xchg
mov
push
lret
leave
or
lea
es
call
jge
mov
aam
dec
pop
push
inc
sub
pop
lods
nop
outsl
xchg
test
clc
pushl
pop
outsb
movsl
pushf
mov
insb
jne
lcall
roll
mov
aas
pop
xor
rorl
push
sub
xor
bound
mov
jno
or
iret
xor
mov
test
jmp
sbb
lret
fimuls
movsl
repz
cmpsl
stos
mov
mov
sub
or
adc
jg
stc
sub
out
inc
and
lahf
insl
sub
and
out
lcall
sahf
fisubs
dec
iret
hlt
int
outsb
enter
out
test
test
jns
push
or
add
test
rolb
arpl
hlt
jg
mov
or
pop
xchg
cmp
cs
sbb
xchg
pushl
push
mov
sbb
adcl
adc
dec
lock
jl
scas
cli
and
shrl
cmpsl
mov
cld
ljmp
sti
add
test
fdivp
or
mov
fstpl
cwtl
stos
mov
out
jb
jmp
into
mov
mov
lods
into
pushf
cltd
popf
push
cmp
mov
into
cmpsl
mov
and
mov
aaa
cmp
mov
mov
into
cld
sub
jno
mov
lods
je
adc
leave
es
sahf
negl
je
adc
idiv
out
sub
sti
or
mov
stc
xchg
arpl
movsb
xorl
fbstp
inc
sbb
rolb
mov
mov
jg
push
mov
std
push
cli
push
mov
push
pop
push
in
sub
fbld
rorb
sbb
decl
out
inc
dec
and
cmp
lds
insl
js
inc
les
add
lcall
mov
nop
decb
movsb
push
cld
decl
inc
inc
adc
dec
push
lods
lea
repz
or
incl
test
inc
sahf
sahf
sub
push
lret
pushf
push
xchg
iret
ljmp
mov
rorb
nop
shrd
lcall
and
outsl
mov
inc
jbe
cmp
mov
mov
push
and
inc
pop
shlb
in
out
add
xchg
stos
test
shr
dec
incl
jo
lock
out
and
push
mov
ja
lock
ret
mov
pop
nop
mov
fistpl
hlt
push
push
xchg
stc
arpl
faddl
add
icebp
push
insb
mov
push
repz
outsb
xor
jecxz
mov
mov
and
mov
lcall
lcall
xchg
mov
push
mov
mov
xchg
sub
mov
out
pop
cmp
pop
dec
aaa
jp
into
dec
orb
jg
scas
rorb
xor
adc
sbb
aas
lods
push
jb
out
arpl
lea
bsf
rorb
repnz
test
in
in
movb
inc
enter
xchg
rorb
call
mov
sbb
mov
and
mov
xchg
loop
addr16
sub
push
sti
cmp
cli
pushl
sahf
insl
movsl
cwtl
shlb
pop
loopne
jg
jecxz
mov
jns
xor
repz
sahf
incl
or
mov
inc
xor
iret
pop
and
and
rclb
dec
mov
clc
in
dec
inc
push
sbb
lods
xchg
mov
aaa
add
clc
loop
and
xchg
jle
sti
or
lea
scas
out
imul
jno
ss
sub
mov
and
in
sbb
lock
jecxz
xchg
out
xor
das
clc
std
or
cmp
mov
sub
je
call
fwait
mov
dec
push
and
adc
loop
lahf
mov
loopne
mov
jno
jg
inc
scas
and
xchg
or
add
xor
fdivr
sahf
xchg
mov
xor
lods
cmp
das
fimuls
int
dec
out
pop
shlb
mov
or
dec
int3
int
cld
xchg
fsubrl
push
and
rorl
inc
dec
dec
mov
stos
outsb
inc
and
stos
mov
cmc
rcrl
out
or
and
std
in
add
fisubl
mov
fnstsw
inc
sti
js
in
or
jb
aaa
ljmp
clc
dec
push
in
loopne
mov
sti
jmp
repnz
insl
mov
ficoms
enter
jbe
add
pop
es
int3
sub
lret
lahf
inc
push
xchg
pop
adc
push
adc
add
cld
or
testl
or
and
enter
nop
popf
cs
dec
jbe
aas
test
arpl
adc
call
outsl
cs
mov
call
inc
sub
fs
fidivrs
mov
mov
push
lods
mov
jge
xor
cld
loope
pop
dec
out
cld
pop
xchg
popf
mov
mov
fwait
mov
mov
movsl
fidivs
fwait
outsb
scas
or
or
jo
ss
inc
hlt
mov
adc
mov
xor
mov
fisttps
adc
fnstsw
stc
int
std
mov
and
and
out
ficompl
mov
xor
sbbb
imul
xor
xor
lret
mov
out
ret
gs
cs
call
mov
sbb
and
inc
shlb
mul
cli
int
mov
push
pop
inc
in
xor
repz
roll
lret
cmpsb
shlb
sbb
into
dec
icebp
or
xor
pop
outsb
loop
add
rcll
cwtl
aas
pop
into
stc
stos
jns
cmp
cld
push
mov
jne
fldenv
push
lods
cmp
cli
or
xchg
ud1
ds
jmp
adc
sbb
cmp
sbb
adc
in
sbb
add
xchg
cmp
lcall
testb
ds
mov
inc
xchg
or
out
adc
mov
addl
add
jne
cmp
scas
mov
or
orb
in
xor
outsb
roll
fwait
dec
adc
xchg
add
idiv
mov
xchg
testb
out
shrb
xor
pop
sbb
jg
lret
enter
cli
push
mov
inc
xchg
add
icebp
jg
lock
pop
mov
sub
push
xlat
sti
lea
mov
jno
sarl
mov
xchg
fisttpl
mov
std
mov
jo
aas
nop
mov
mov
mov
push
sub
add
sub
jmp
out
or
movsl
adc
sbb
fcomi
call
jbe
or
test
dec
fdivrl
pop
jecxz
lcall
mov
lods
cmp
insb
rcrl
xor
testb
adc
lods
sub
or
mov
pop
push
jg
or
dec
fdivs
push
sub
out
inc
xor
and
shlb
mov
adc
sub
xchg
mov
negb
xchg
sbb
outsl
inc
movsb
pop
inc
ljmp
push
outsb
xchg
and
push
mov
ficomps
inc
jle
sti
mov
scas
aas
shlb
mov
scas
notb
fisubs
pop
and
mov
mov
pop
mov
mov
lods
popf
xor
xor
stc
out
inc
add
mov
lcall
cmp
cmpsl
and
xor
cmp
jecxz
add
int
and
aaa
pushf
rorb
ret
jns
cs
or
fiadds
and
je
cmp
into
mov
cmpsl
adc
cmp
ja
mov
lahf
dec
leave
test
mov
push
mov
mov
mov
cmp
insb
mov
repz
mov
mov
repz
movsb
sbb
jg
push
lea
inc
ss
insb
adc
subl
decl
or
xchg
xor
and
cmp
std
pushl
cmp
dec
call
stos
mov
sub
popa
or
mov
jmp
add
dec
mov
out
fildl
addb
fstpl
enter
inc
sbb
add
rcll
stos
push
or
lcall
mov
fisubrl
call
mov
mov
pop
imul
fiaddl
push
adc
jmp
sub
fisubl
out
mov
sti
and
imulb
fildl
push
shrl
in
xor
adc
sub
icebp
pop
adc
jmp
fildl
xor
aas
es
jne
and
subb
sub
xor
pop
repnz
xchg
hlt
pop
or
inc
sub
mov
test
addl
lea
and
imul
mov
ja,pt
cmp
and
cs
push
sub
cld
stc
mov
cld
lret
add
adc
rolb
mov
cld
dec
adc
sbb
or
add
pop
call
fcmovne
testb
sbb
sbb
out
cs
js
jne
push
cli
xor
dec
into
and
sahf
nop
bound
in
and
dec
mov
das
pop
enter
je
push
inc
sbbb
ljmp
mov
adc
xor
sbbl
scas
rolb
push
sti
das
nop
cs
add
mov
negb
sub
test
in
js
ficomps
aad
loop
addr16
inc
inc
rclb
add
jmp
outsb
cmp
scas
adc
test
jle
mov
std
xor
ret
xor
or
cltd
mov
add
mov
call
cmp
aaa
daa
aaa
les
fsubp
push
bound
clc
scas
ret
jno
mov
mov
xchg
imul
and
and
xchg
lcall
jg
decl
cltd
sbb
cmp
sub
push
fmuls
aaa
ret
fcompl
xor
lret
call
push
fdivrp
sub
push
mov
jle
cmpsb
decl
push
sub
jg
jg
es
cld
mov
fcomip
xor
push
jl
inc
dec
mov
out
iret
movb
or
inc
sti
loope
jbe
sbb
adc
mov
add
sbb
add
clc
cmp
mov
push
notb
or
xor
sbb
lea
mov
and
loope
sahf
lcall
or
lret
fcomip
inc
jp
jecxz
ljmp
inc
lcall
in
xchg
inc
sub
push
bound
or
add
test
insl
jg
scas
fimuls
in
mov
mov
inc
push
inc
sub
fimuls
scas
movsb
sub
ss
hlt
or
mov
pushf
sub
xchg
or
fisubrs
sub
data16
jae
jle
aaa
ss
call
aad
pop
jb
mov
loopne
xor
cli
xor
das
js
decb
and
ds
popl
push
fidivrs
lret
xor
xor
sbb
push
stos
and
fldenv
push
or
stc
xchg
out
sbb
ret
je
clc
cs
loopne
mov
dec
or
stc
fs
xor
shrl
mov
xor
sbb
mov
cmp
xchg
mov
mov
xchg
inc
mov
rolb
fisubs
xlat
inc
mov
daa
clc
push
mov
cli
sbbb
mov
add
stos
mov
jg
add
push
sahf
inc
xchg
imul
push
aaa
lock
pop
xchg
cs
addw
stos
jo
jle
lea
idivb
mov
push
test
rcrl
loope
push
or
or
lahf
rclb
decl
ds
repnz
xchg
xchg
enter
push
add
or
fists
clc
sbb
mov
js
cmp
mov
fscale
or
ljmp
test
pop
xor
loope
test
cmp
scas
dec
add
js
movsl
or
lods
or
jnp
repnz
lcall
stos
popf
test
popf
insb
mov
inc
jg
adc
jl
shll
out
mov
test
fsubp
hlt
pop
ljmp
test
jo
and
movsl
inc
pop
out
sub
sub
lock
mov
sbb
out
xchg
mov
and
out
inc
repnz
dec
pop
dec
jle
mov
lock
mov
adc
aas
adc
pushf
aas
in
sbb
loop
sub
lock
sbb
pop
push
fdivrs
xchg
loopne
dec
xchg
xchg
popf
fistps
aad
mov
fs
xchg
daa
data16
ljmp
pop
inc
pop
loopne
data16
xchg
movsb
push
dec
lcall
stos
pop
pushf
cmc
add
sub
sbb
test
icebp
and
call
add
push
clc
adc
mov
xchg
dec
repz
push
popa
push
ja
jl
pop
fs
ljmp
pop
clc
and
in
int3
or
fisubrs
push
mov
mov
xor
sbb
sbb
into
push
push
cmc
out
lods
inc
enter
mov
inc
mov
mov
icebp
pop
add
xchg
data16
cltd
xor
sub
pop
mov
jle
fldenv
stos
mov
adc
leave
inc
ljmp
lods
test
jne
mov
mov
push
pop
into
jg
mov
xor
popf
sbb
mov
adc
lahf
imul
lahf
and
sbb
add
adc
mov
sbb
cmpsl
lahf
scas
sti
sub
clc
mov
sbb
sub
push
xchg
iret
nop
inc
test
shrl
rolb
xchg
filds
out
jg
lcall
mov
mov
js
jg
xor
bound
out
loopne
adc
out
jl
ss
aas
out
jbe
cmp
test
out
and
stos
mov
outsl
mov
out
and
out
lock
les
adc
and
movsl
pop
mov
push
inc
add
jg
scas
aaa
mov
sbb
sbb
xor
mov
into
jne
adc
jae
ja
fs
mov
push
dec
out
jbe
jo
sub
push
cwtl
mov
cmpsb
cmp
mov
bound
loop
xchg
or
xchg
pushl
leave
loopne
das
adc
decl
lods
sub
push
aas
dec
rorl
cmp
xchg
push
mov
adc
ljmp
jo
outsb
in
xor
xor
in
inc
sbb
pushl
std
lcall
dec
rorb
in
jl
push
out
add
jg
dec
cmp
add
mov
scas
into
std
xchg
lcall
xor
push
mov
aas
cs
in
sbbb
xor
jmp
stc
shll
std
je
pop
sahf
les
das
gs
jo
lcall
mov
jecxz
sbb
cmp
insl
mov
push
xor
sbb
mov
cwtl
mov
sub
data16
xlat
cwtl
inc
stos
xorb
xlat
call
in
rcrb
jg
call
mov
stos
push
jmp
js
xor
inc
ljmp
xor
popf
pop
cmpsb
mov
pop
add
popf
out
inc
in
jle
push
mov
scas
int3
inc
ret
jmp
jb
push
repz
dec
call
stos
cmpsb
enter
into
icebp
fnstsw
mov
dec
or
mov
fisubrs
cltd
lahf
es
les
sahf
xchg
test
jbe
ffreep
dec
fidivrl
fldcw
inc
mov
bound
in
cmp
adc
ljmp
imul
dec
dec
add
outsb
out
divl
jmp
pop
jb
aaa
repnz
and
out
adc
sub
insb
pcmpgtw
add
lret
pop
stc
jne
jb
push
in
add
ljmp
in
data16
xchg
aam
lcall
aam
cmp
sub
call
data16
popf
cwtl
fistl
incl
lods
bound
sti
add
pushl
fbld
mov
push
xchg
cwtl
ret
inc
js
jecxz
mov
movl
in
mov
and
psllw
loop
pop
rcrb
mov
fisttps
push
je
es
mov
push
movsl
mov
rcrl
jns
int
add
fwait
nop
xchg
cltd
into
icebp
ljmp
mov
mov
das
stos
cwtl
adc
dec
mov
ret
inc
mov
mov
ljmp
in
fs
adc
mov
lret
and
cld
cmp
add
popf
jmp
nop
mov
push
out
fdivl
lcall
or
inc
stc
cltd
lock
fs
push
and
out
jo
aaa
mov
test
jae
popa
ljmp
xor
pop
loopne
lds
out
sub
out
mov
mov
and
mov
es
pop
xor
xchg
pop
std
lcall
adc
inc
sbb
mov
cmp
fdivrl
dec
mov
call
roll
cmp
mov
jne
frstor
mov
mov
inc
std
sub
nop
out
xor
lock
add
out
xchg
daa
lret
aaa
jle
push
mov
pop
push
popa
insl
into
ficompl
loopne
mov
mov
inc
les
into
test
mov
inc
mov
jns
sbb
call
jge
fwait
scas
lock
stos
mov
xor
or
clc
cmpsb
push
fisubrs
dec
les
data16
cli
fsubl
sub
sbb
shlb
incl
xchg
sahf
xchg
xor
mov
dec
cld
call
out
push
mov
and
or
and
pop
adc
fldenv
xor
mov
mov
mov
or
xchg
dec
jg
or
add
mov
aas
push
aas
outsb
sbb
lea
xchg
mov
push
sti
and
jmp
xchg
mov
jno
dec
sarl
mov
adc
aaa
dec
xchg
mov
mov
mov
lock
add
xchg
andl
lret
dec
mov
scas
mov
push
out
and
mov
mov
incl
xor
or
add
lods
pushl
mov
and
xchg
movsl
xor
outsb
rcrb
or
sub
mov
es
movsb
ss
ljmp
mov
fisttpl
test
xchg
add
mov
cmp
xchg
add
inc
sahf
inc
or
testb
inc
cld
sub
mov
insb
and
xor
fistps
cwtl
cwtl
mov
in
cmp
mov
cmp
inc
shll
lcall
mov
js
das
mov
mov
popa
stos
adc
jg
and
mov
sbb
enter
test
jmp
mov
inc
push
lahf
shlb
or
dec
sub
rolb
sahf
insl
loopne
mov
cmc
push
pop
sahf
les
dec
aaa
ljmp
xor
pop
mov
pop
jnp
test
fwait
adc
cmp
xchg
inc
mov
push
xor
outsb
inc
mov
mov
arpl
dec
lret
mov
xchg
or
or
test
mov
cs
cmp
loopne
mov
ret
mull
outsl
pop
mov
mov
test
decl
dec
adc
sub
movsl
sub
fnstsw
js
decl
cli
pop
mov
sub
inc
orl
into
mov
add
ret
mov
or
add
lret
js
xchg
mov
loope
data16
sub
pop
jle
push
into
cmpsb
push
aas
cmc
xchg
push
push
pop
into
test
add
movb
call
xchg
je
aas
nop
enter
test
xchg
push
add
in
push
mov
mov
movsl
loopne
inc
mov
iret
mov
push
and
into
test
int3
adc
std
pop
daa
mov
and
add
pop
push
fisubrs
mov
xchg
and
sub
xchg
adc
test
movsl
xor
mov
sub
pop
push
ret
xchg
pop
sete
fisttpl
jecxz
clc
out
push
add
jg
jg
cwtl
jmp
lea
mov
sub
cmp
clc
mov
push
inc
aaa
xlat
lahf
jno
inc
mov
xchg
and
dec
outsb
push
mov
xchg
nop
and
inc
aas
xchg
repnz
mov
pop
ja
mov
mov
fwait
adc
push
mov
xchg
xlat
mov
and
outsb
xor
mov
jg
xlat
scas
iret
mov
and
push
outsl
xchg
mov
es
iret
cmp
and
fidivrs
aas
add
fcomip
cmpsl
jo
imul
jnp
xor
mov
scas
pushf
es
mov
popf
les
push
push
xchg
or
pop
dec
incb
mov
pop
lea
mov
out
adc
inc
jge
fisttps
xor
mov
lds
popf
cmp
xor
mov
and
lcall
cli
out
pop
add
cmp
push
mov
out
call
push
mov
ljmp
mov
and
jge
adc
movsl
mov
stos
sub
js
stos
jg
fucomip
outsb
leave
sbb
inc
xchg
add
inc
fildll
cmp
sub
arpl
sub
inc
add
data16
jb
lahf
shrl
cld
sahf
rorb
cmp
pop
movb
shlb
out
adc
adc
test
scas
cmova
nop
or
and
shll
mov
dec
mov
and
sti
adc
xchg
clc
popf
mov
dec
adc
insb
in
pop
push
gs
jmp
mov
cmp
and
les
push
roll
lcall
inc
mov
sti
ljmp
mov
cwtl
xor
jne
cmpsb
sub
movsl
ficoml
leave
cmp
shrb
data16
xchg
jno
inc
fwait
jmp
sti
or
mov
out
addr16
inc
repz
cmp
push
into
mov
repz
leave
sbb
mov
adc
dec
out
mov
xor
aas
decb
jb
or
enter
stos
pop
jnp
push
mov
iret
ljmp
sbb
call
stc
add
xor
ret
std
and
sub
and
insl
lock
mov
clc
cmp
pop
xor
cltd
aas
in
sbb
or
jmp
xchg
mov
mov
es
pop
out
jg
jg
sbb
enter
cmp
inc
addr16
fcoms
push
adc
jg
jl
test
faddl
pop
sub
lea
xor
sbb
call
mov
adc
cmp
jmp
mov
mov
lcall
jp
mov
movsb
es
inc
test
je
lcall
mov
add
mov
out
push
test
scas
inc
lea
mov
testb
dec
mov
cs
jl
push
jecxz
loopne
sub
push
aas
dec
shr
aam
cltd
xor
inc
jb
xor
add
insl
repz
movsb
inc
outsb
xchg
push
push
arpl
sub
jo
aas
loopne
aam
neg
xchg
inc
lods
filds
inc
inc
int
bound
arpl
stos
repnz
loope
cmc
push
sti
subb
xchg
jno
call
adc
and
inc
les
lock
push
sbb
and
pop
icebp
and
and
jo
xchg
jno
pusha
push
std
ret
dec
incb
loope
jg
inc
jecxz
pop
adc
add
pop
sti
sbb
ljmp
insl
push
frstor
jno
lcall
sarb
pushf
repz
sub
push
in
das
clc
xchg
ret
iret
inc
cld
addr16
push
out
push
insb
repnz
decl
mov
aaa
inc
fsubl
cwtl
or
dec
fistpl
push
call
xor
repz
pop
outsb
ds
mov
ret
pop
cmpsb
jge
daa
mov
or
fisttps
lahf
into
jg
pushl
push
in
jb
dec
fildl
mov
inc
je
cmp
dec
cmp
ljmp
pop
ret
sbb
push
int3
push
mov
out
aas
cmpb
pop
aam
pusha
in
cmp
clc
fstps
add
out
xor
out
cmp
outsb
in
and
cltd
rcl
movsb
decl
or
lcall
js
mov
mov
or
test
cld
dec
pop
jl
scas
xor
lds
push
fiaddl
lcall
shll
inc
aas
stc
test
pop
out
cmp
sub
jmp
jge
dec
mov
lea
movsb
popf
mov
mov
push
ljmp
pushf
mov
fildll
sbb
mov
jp
xor
call
leave
or
movb
push
stos
cltd
out
lcall
mov
xchg
push
mov
jle
sti
xor
sbb
pushl
outsb
imul
lret
mov
push
xor
sarb
filds
sbb
cmpsb
mov
ret
jge
mov
mov
notb
outsb
jno
add
and
cld
xchg
jno
popf
mov
jo
sub
mov
mov
out
jne
adc
push
dec
dec
cwtl
inc
dec
or
aaa
jecxz
pushl
xlat
mov
mov
xchg
mov
dec
inc
push
inc
mov
push
loop
incl
mov
and
inc
mov
lcall
icebp
das
add
test
cmpsb
out
mov
mov
pop
sbb
sbbb
and
mov
ret
mov
add
cmp
add
decl
mov
inc
lret
or
lcall
push
push
mov
scas
mov
test
aam
test
out
ja
cmp
mov
xor
xor
xchg
fists
daa
mov
xor
popa
add
pop
xchg
sahf
mov
mov
je
lock
mov
xchg
cmpsb
push
iret
or
sbb
aas
out
add
push
mov
pop
xor
adc
movsl
stos
mov
mov
or
inc
int3
sub
ja
js
stos
cmp
inc
out
outsl
mov
ljmp
inc
mov
add
out
pop
lahf
loopne
outsb
lods
out
sub
xor
dec
cltd
test
cmovg
cmp
jbe
mov
std
pop
sahf
mov
rcl
inc
and
out
mov
jb
dec
fs
dec
es
or
xchg
std
and
lret
cmp
incb
out
xor
and
mov
insl
ficoml
xchg
push
xchg
stos
xchg
xorl
rolb
ljmp
jbe
insl
js
and
jb
push
and
or
xor
iret
mov
mov
and
cmpsb
dec
out
call
scas
les
add
mov
mov
test
push
loope
movsb
pop
push
iret
jle
adc
int
repnz
jbe
mov
and
test
jecxz
jge
jo
dec
std
xor
pusha
xor
adc
lods
cltd
xchg
mov
cwtl
clc
iret
mov
cli
and
or
faddp
mov
in
and
pusha
frstor
nop
insl
rorb
add
cmp
dec
int3
cmp
ljmp
jno
nop
inc
in
xor
pop
in
mov
call
aaa
and
cmp
int
xchg
nop
xchg
cwtl
mov
int3
movsl
adc
pop
lock
or
xchg
xchg
or
pop
jbe
and
lcall
je
mov
and
sbb
cli
call
or
mov
repz
mov
pop
adc
cli
outsl
adc
lea
or
jle
lock
mov
int3
adc
sbb
inc
mov
lcall
fwait
in
or
xrelease
dec
cltd
divb
mov
sbb
lock
sbb
sbb
xchg
hlt
cmp
test
add
loop
outsb
pop
std
mov
scas
sbb
jg
and
mov
rcrb
push
stos
mov
fmull
mov
cmp
mov
sub
lahf
push
jp
arpl
pop
mov
data16
dec
mov
cwtl
aas
mov
or
sub
push
sti
or
xchg
fdivr
fisttpll
xchg
testb
add
xchg
leave
mov
sarl
movsb
lods
in
js
xor
cmp
ljmp
out
xchg
dec
cmpsl
out
out
iret
pop
lock
inc
ret
fidivl
add
fwait
insl
add
outsb
fdivs
in
xchg
cltd
mov
insb
cwtl
cmp
sti
out
mov
imul
mov
fwait
and
jae
or
pop
inc
sbb
scas
jbe
mov
fildll
xor
insl
movb
pushl
dec
xor
and
cli
push
mov
add
sub
lods
out
push
add
fisttps
mov
inc
outsb
jp
pop
mov
out
test
incb
testb
mov
inc
jecxz
lcall
xchg
xchg
mov
cmc
test
jg
and
mov
sahf
jnp
pop
push
push
mov
inc
cmp
mov
loopne
pop
dec
ljmp
out
mov
enter
and
sahf
adc
cmp
insl
data16
fistps
sbb
js
stos
push
outsl
rcrb
sahf
pop
call
dec
out
xor
sti
hlt
repnz
inc
add
cmpsl
cs
sahf
call
dec
pop
mov
pushl
jne
add
inc
cmc
das
push
push
dec
insb
jno
adc
push
push
pop
jo
mov
out
mov
xchg
dec
cmpsb
adc
jge
cwtl
jnp
jp
das
cli
push
mov
test
mov
sub
cld
addr16
test
mov
push
inc
adc
mov
add
push
clc
popa
pusha
nop
lahf
subb
mov
jo
xor
xchg
aam
adc
jbe
cmpsb
clc
div
es
sub
bound
push
out
or
or
dec
inc
out
repz
stos
xchg
mov
mov
mov
xlat
fistpll
ds
inc
adc
mov
and
sbb
mov
add
or
lcall
and
mov
sub
fs
jp
sbb
int
jbe
idivl
dec
xchg
ja
je
adc
leave
xor
inc
pop
push
pop
jbe
pop
dec
dec
sar
lcall
lods
mov
xlat
icebp
cmp
sbb
jp
stos
ds
scas
test
popf
inc
xchg
ret
xorb
out
xor
divl
nop
mov
mov
dec
xorl
jg
push
push
cld
sub
loope
mov
scas
adc
cmp
adc
jno
fistps
scas
cli
loop
addr16
adc
mov
mov
cmp
jmp
cmp
movsl
ljmp
mov
dec
push
xchg
mov
out
mov
jne
das
mov
data16
pusha
into
push
lcall
ss
lock
js
or
mov
jp
cmpsb
ljmp
lret
sahf
out
and
addr16
ss
movsl
jo
lcall
inc
movsl
into
mov
sbb
mov
and
bsf
in
mov
xor
pop
jns
sahf
cmp
test
dec
inc
scas
icebp
adc
scas
pop
fidivs
mov
mov
out
imul
into
xor
clc
add
jle
scas
jb
xor
nop
fsubrp
mov
cmp
push
popf
jns
inc
mov
fstpt
call
ds
insb
pusha
mov
xchg
sub
addb
push
xchg
loop
or
mov
add
mov
mov
mov
xchg
stos
mov
pop
icebp
lret
iret
and
addl
pop
jecxz,pn
sub
adc
popa
jg
popf
testl
jmp
call
lahf
push
sub
daa
jecxz
sahf
in
sbb
push
stos
pop
ljmp
pushl
mov
dec
in
push
cmp
jle
test
rorb
xchg
dec
jbe
xor
addr16
stos
outsb
inc
sub
pop
add
sub
insb
shll
out
sti
mov
lea
cmpb
hlt
fwait
loop
pop
cmp
aas
mov
jb
test
cmpsl
imul
lcall
in
popf
pop
enter
adc
dec
sbb
inc
pop
lret
movsl
and
fwait
mov
in
push
xor
push
movsl
fmull
test
xor
xor
cli
fbld
cltd
int3
cmp
and
push
scas
js
xchg
fsub
pop
test
mov
xchg
xchg
push
aas
insb
mull
popf
dec
push
xchg
pop
push
pop
out
mov
jp
mov
scas
xor
xor
mov
stc
dec
out
aas
aaa
in
and
mov
popa
insl
lods
xor
mov
adc
ret
jg
lcall
push
mov
sbb
add
out
ss
fisttpl
lds
jge
outsb
mov
call
cld
stos
fdivl
pop
fwait
movsl
out
jl
std
xor
dec
mov
ss
sub
mov
xor
pop
les
xchg
adc
or
sahf
inc
shrl
pop
mov
sub
and
push
fisttps
pop
js
mov
movsl
add
je
and
cmpsb
sbb
ds
cs
das
jecxz
mov
jge
cltd
jg
call
push
pusha
out
fs
cmpxchg
or
rclb
adc
aas
outsl
mov
mulb
lds
push
lods
mov
sub
dec
jb
loopne
js
mov
popf
pop
mov
es
jle
add
push
pop
ljmp
filds
inc
in
out
adc
pop
inc
ret
incl
mov
sbb
inc
cmpsb
aam
ret
fsubrs
sub
push
xor
adc
xor
out
inc
inc
jns
dec
adc
xor
and
loop
clc
in
mov
lahf
mov
leave
mov
adc
cmp
lret
cld
and
cmpsl
test
int
mov
pop
lcall
negb
es
stos
xor
fs
rolb
sub
sahf
ja
push
mov
es
nop
jle
mulb
cmp
lahf
shl
push
jp
sub
out
loope
adc
into
lds
sti
fsubl
add
mov
dec
dec
int3
shll
mov
aam
adc
in
bswap
cwtl
lcall
mov
daa
inc
sub
cmp
lcall
call
nop
pop
lock
scas
aad
addl
incl
add
or
mov
mull
xchg
cmpsl
sbb
sbbb
mov
lcall
rolb
in
sbb
mov
fwait
out
outsb
loop
orl
int3
mov
mov
lcall
xor
test
adc
or
fisubrl
out
add
repz
loopne
mov
inc
mov
and
hlt
pushl
hlt
aaa
int
jae
fldl
clc
stos
sahf
insb
push
push
mov
xchg
sbb
jno
add
adc
mov
and
adc
lahf
jmp
mov
xorb
insb
mov
add
mov
cs
pusha
pop
clc
and
ss
lock
xchg
ljmp
and
rcrb
lea
cld
dec
pop
scas
and
gs
mov
push
cli
xchg
mov
sbb
sub
fadds
and
mov
test
loop
in
cmp
lret
add
jbe
xchg
sbb
push
sbb
in
and
mov
sub
outsl
loop,pt
cltd
data16
xor
inc
fidivrl
jle
lods
psrld
clc
pop
das
outsb
ds
sahf
outsb
mov
push
sahf
scas
mov
mov
and
mov
sbb
sti
push
lret
add
ljmp
adc
imul
gs
sub
jp
adc
and
in
inc
xchg
arpl
pop
push
das
dec
test
push
ret
ljmp
fisttps
push
sub
jle
ficomps
pop
aam
jg
rcrb
mov
mov
adc
jl
push
les
insl
lcall
inc
pop
jno
mov
ds
repnz
or
pop
xchg
push
call
testb
adc
sti
mov
scas
xor
pushw
lea
dec
sbb
mov
subl
loopne
pop
xchg
cld
mov
js
jg
ret
das
mov
sub
add
mov
fs
pop
mov
xchg
sbb
push
lock
scas
lret
daa
pop
filds
mov
add
mov
dec
or
rcrb
xchg
js
scas
repz
inc
dec
mov
sar
sahf
imul
testb
jb
pop
out
push
sbb
call
decb
xor
mov
psraw
sub
push
aam
inc
ljmp
je
mov
jns
aas
stc
add
xchg
adc
les
mov
pop
rorb
or
shl
xchg
add
dec
xchg
cs
pushl
push
push
mov
in
test
or
lret
push
or
jecxz
xchg
cltd
inc
and
xor
sahf
lea
xor
xchg
out
adc
aas
clc
add
scas
push
sbb
dec
mov
or
add
sub
iret
mov
mov
pop
dec
inc
add
inc
jl
mov
addr16
xor
test
mov
aaa
hlt
jg
shrl
mov
je
mov
lea
jecxz
sub
xor
fimuls
data16
rcrl
jg
lahf
lret
xlat
sub
ss
pushf
out
sub
mov
imul
cmpsl
push
movsl
sbb
mov
nop
sub
xchg
mov
repz
cmp
sub
jg
icebp
pop
lcall
and
notb
aas
mov
and
cli
adc
push
leave
mov
and
rcrb
pop
shlb
jbe
adc
jle
test
mov
fidivs
jge
ret
dec
cld
cmp
push
pop
ds
test
ret
cmp
adc
push
pop
pop
repz
mov
out
loope
cmp
and
xor
test
das
decb
test
out
cmp
cmpl
daa
push
std
add
adcb
out
lods
dec
add
sub
mov
add
or
xbegin
push
jnp
mov
dec
sbb
aas
hlt
decl
push
inc
in
movsl
xor
push
add
or
clc
outsl
or
sbb
out
cmp
rcrl
push
adc
bound
pop
clc
or
and
in
dec
xor
lock
fistpll
aad
push
addl
ret
jmp
outsl
out
cmp
test
cmp
les
es
in
mov
sub
add
add
leave
cwtl
push
lahf
ret
popa
imul
incl
lahf
pop
mov
gs
jmp
dec
xor
out
pop
lds
aas
decb
mov
sar
jmp
jmp
test
and
and
sbb
mov
sbb
fidivrs
add
sahf
scas
cld
ficomps
pop
icebp
test
mov
mov
add
and
fiadds
xchg
dec
mov
loopne
dec
aas
mov
push
sbb
js
out
scas
imul
clc
xchg
cmp
imul
repnz
out
or
inc
not
shlb
outsl
jbe
lock
dec
lds
call
mov
mov
ljmp
jecxz
scas
sbb
es
pop
xorb
fs
jne
xchg
in
sub
dec
dec
idiv
sub
lcall
iret
mov
lock
xchg
push
push
negl
mov
adc
cmp
dec
scas
add
dec
dec
lcall
jmp
jbe
lret
arpl
and
mov
stos
int3
les
out
xchg
mov
or
rclb
aaa
lock
outsl
cmpsl
mov
jecxz
andl
das
mov
pop
jge
sbb
repz
in
cs
pop
fistpll
int3
clc
pop
repnz
dec
cmp
fmull
add
jl
xchg
inc
adc
aaa
arpl
lods
inc
shlb
jb
les
inc
adc
iret
xor
arpl
inc
xchg
xor
std
incl
lret
inc
std
xor
add
jns
sbbb
ret
mov
xor
sub
sahf
or
lcall
adc
jle
and
sbb
pop
repnz
movsl
int3
outsb
out
add
lds
imul
ret
shrb
mov
mov
iret
and
xor
sbb
pushl
pop
sti
sub
pop
loopne
das
gs
push
lahf
dec
nop
stc
das
or
jmp
out
mov
add
andps
fldcw
lods
jmp
std
pop
fistpl
lret
mov
rorl
into
mov
sbb
xchg
sub
dec
sub
lahf
ret
or
shlb
cmpsw
hlt
stc
test
jp
int3
pop
decl
insb
jne
cmc
imul
pop
push
dec
dec
push
jnp
incl
lea
mov
lock
hlt
lock
mov
aas
mov
out
jle
cltd
cli
dec
sub
les
movsl
inc
es
or
out
and
fcmovu
and
mov
addr16
rclb
dec
aam
out
adc
jno
adc
cld
out
test
mov
xlat
stc
orb
sarl
lcall
aaa
pop
es
adc
mov
cld
ret
jle
mov
ljmp
mov
sbb
insl
push
fcomip
sub
mov
jnp
enter
or
pop
lds
ljmp
std
and
mov
mov
das
insb
es
imul
mov
dec
jmp
imul
lcall
cmpsb
mov
in
dec
in
fs
iret
aad
mov
add
xchg
push
fstp
outsl
pop
inc
imul
jg
pop
leave
or
add
aas
dec
lds
xchg
mov
icebp
or
dec
mov
mov
mov
xchg
imulb
cwtl
and
fnstcw
and
jb
cmpb
mov
mov
mov
mov
push
subb
daa
mov
or
jno
jp
add
xor
into
movsb
mov
roll
mov
es
jns
jg
mov
jne
sti
xchg
bound
xchg
stc
mov
lcall
jmp
pop
mov
stos
adc
enter
sarl
sub
jb
push
iret
lods
sbb
jg
je
mov
jle
sub
push
mov
sbb
iret
mov
lahf
std
lds
cli
outsl
jg
inc
cmc
xchg
bound
inc
mov
push
lcall
testb
sbb
and
dec
ja
add
adc
pop
out
dec
jg
lds
daa
data16
jl
test
cmp
sti
or
leave
or
aaa
mov
test
dec
aas
mov
adc
arpl
xor
and
lock
add
icebp
push
xchg
test
push
jg
xchg
jle
das
push
or
inc
in
mov
xchg
cld
test
pop
mov
sub
addr16
enter
xor
or
jg
aam
cli
push
inc
data16
insl
sti
mov
and
lea
pusha
mov
pop
jb
sbb
or
xchg
add
lds
xchg
test
cltd
out
sbb
rcll
inc
push
adc
sub
adc
xor
aaa
sub
repz
and
sarb
sahf
pop
dec
dec
repz
inc
jb
fistps
push
mov
adc
sbb
push
mov
scas
pop
rclb
inc
add
clc
dec
adc
fcomps
jge
sbb
and
and
fdivl
test
mov
jg
mov
dec
push
and
xchg
repz
and
push
cli
dec
into
stos
in
ss
xor
cld
dec
rcrl
sbb
fcomip
sbb
push
mov
and
lret
fst
xchg
nop
inc
inc
mov
pop
int3
sar
rolb
roll
cmp
sbb
ds
pop
scas
clc
fnstsw
mov
repz
cld
add
jle
xor
ret
push
loop
insl
outsb
outsb
jl
push
ljmp
inc
sbb
idivb
js
mov
pop
or
fisubrs
mov
add
popf
les
stc
inc
push
mov
mov
dec
out
sub
or
jge
dec
cmp
aas
mov
addb
rorb
sub
cvtdq2ps
mov
push
std
or
js
lea
lds
into
les
mov
ficoms
jle
call
lds
in
adc
mov
popa
pop
outsl
outsb
fists
adc
mov
xor
mov
push
jl
es
mov
push
lods
dec
pop
fistps
jmp
inc
push
loop
fs
mov
fisttps
int
imul
cmp
repz
inc
xor
or
fsubp
push
clc
in
inc
leave
and
popa
daa
and
add
sbb
push
push
daa
clc
adc
sbb
or
testb
ja
clc
mov
dec
mov
ret
xchg
push
mov
xor
pop
push
mov
fs
inc
dec
push
push
lods
sbb
push
add
jno
sahf
sub
mov
xor
fidivrs
xchg
push
pop
or
mov
lret
push
sar
sarl
out
aaa
mov
addr16
jne
xchg
imul
sub
push
cmpsb
xchg
dec
push
fbld
mov
push
data16
cmp
jg
cmp
mov
mov
aaa
fiadds
and
adc
push
adc
push
outsb
sbb
xchg
stos
or
aam
movl
sub
std
loopne
jnp
daa
jb
fcompl
inc
sub
and
cs
shrl
push
add
mov
cmp
setle
dec
mov
xlat
call
push
in
popa
in
adc
inc
outsl
fucomip
adc
sbb
jmp
mov
call
inc
out
roll
sbb
bound
out
adc
aaa
pop
fmull
push
xorl
rolb
mov
jmp
inc
cli
ss
or
imul
push
jecxz
lock
stos
sub
vmread
bound
cwtl
leave
push
loop
scas
cmpl
pop
std
inc
ret
aaa
out
mov
in
mov
add
incl
mov
mov
fimull
sub
add
dec
push
outsl
inc
fsubl
loope
adc
jo
cmp
ret
imul
cwtl
push
jg
shlb
dec
cs
xor
orl
jne
jns
mov
sub
push
cld
mov
aas
mov
xor
sub
pushl
or
les
cltd
cmc
mov
call
inc
into
dec
lds
imul
scas
imul
mov
dec
mov
dec
lret
add
subb
xchg
jmp
je
xor
lds
cmpl
orl
sub
lea
mov
sbb
lds
jb
sub
adc
fildll
stc
sub
es
aad
mov
aam
xchg
add
cmp
mov
xchg
inc
jp
pushf
cld
adc
and
adc
shlb
lcall
decb
push
iret
and
sbb
outsb
leave
add
xor
pop
mov
cmpsb
stos
cmpsl
inc
dec
gs
dec
and
or
je
ss
cli
adc
lcall
pop
icebp
sbb
sub
push
frstor
cld
decl
dec
add
xchg
stos
push
testl
xchg
inc
jbe
dec
xchg
mov
lcall
mov
ret
adc
leave
and
test
cltd
outsl
decl
rcll
dec
std
sub
mov
out
test
in
xor
or
xor
sar
jg
mov
dec
dec
pop
iret
push
outsb
outsb
push
push
cwtl
jae
xchg
mov
ljmp
sbb
sbb
xchg
stos
sub
in
mov
sar
jne
add
xchg
mov
enterw
mov
sbb
lea
test
lods
decb
test
jnp
jle
pop
and
cs
test
cmpsb
jmp
ss
cs
aam
ljmp
jle
or
dec
jg
scas
adc
jg
scas
cwtl
addr16
cmp
mov
xchg
mov
cld
popf
ret
pop
lcall
xchg
adc
push
repz
mov
and
push
cmp
mov
add
test
add
fildl
mov
nop
sub
add
add
or
mov
inc
sbb
push
cmp
and
clc
xor
test
test
and
das
sbb
gs
jne
leave
or
mov
push
popa
push
movsb
mov
inc
mov
cmpsl
push
lock
add
inc
sbb
sbb
dec
pshufw
ss
scas
jg
jge
push
adc
sahf
cmp
pop
call
outsb
cmp
lret
jb
popf
lahf
and
das
test
xor
dec
cmpsb
out
push
les
cmp
mov
test
add
pop
movsl
adc
push
mov
fimuls
mov
aas
pushf
enter
cmp
cmp
xor
fistl
mov
add
xor
push
mov
push
cmc
out
mov
cmpsl
pop
in
mov
pop
xchg
or
or
daa
lods
adcb
jg
out
pop
andl
test
fwait
arpl
shll
cld
jecxz
test
pop
adc
mov
sbb
addb
mov
ss
mov
mov
push
xchg
jle
mull
mov
mov
sbb
ret
add
lea
dec
out
cmp
test
stos
movsl
add
dec
movsl
jecxz
mov
ds
jns
inc
out
pop
loopne
mov
fistps
shrb
cli
ja
push
sub
and
xor
mov
or
rol
outsl
lret
push
inc
aad
push
add
les
scas
sbb
cwtl
mov
jle
mov
negw
loope
jg
stos
popa
jle
dec
cmc
cs
mov
add
jmp
leave
cmp
idivb
ret
jbe
int
xchg
add
sbb
lea
decl
dec
cld
sbb
popf
dec
lock
add
sbb
incl
xor
adc
nop
cmc
sub
jno
clc
push
call
shlb
push
push
cmove
int
call
cmp
cld
aaa
out
out
test
push
rol
xchg
mul
xor
xchg
in
cmpsl
mov
mov
imul
pop
sahf
mov
clc
aas
divb
xorl
adc
cld
test
cmpsb
xchg
fildll
pushl
pop
mov
xchg
fwait
jo
xchg
push
sti
cmp
test
xchg
jl
cmpsb
push
push
push
maskmovq
testl
sub
push
cs
cmp
insb
loopne
repz
iret
ljmp
icebp
sti
or
sahf
xchg
lcall
and
pop
shlb
jns
inc
cli
cmp
jnp
pop
stos
mov
imul
push
add
fnsave
jo
mov
imulb
out
mov
mov
push
movsb
iret
inc
shlb
cli
cmp
push
dec
out
call
xor
dec
std
scas
pop
mov
loope
test
lock
fistpll
xor
xchg
mov
lcall
jb
cs
push
pop
cld
cmpb
push
and
sar
repz
lds
add
xchg
lods
inc
into
sti
add
out
clc
add
mov
out
std
mov
fcmovnb
jmp
pop
lds
push
adc
lock
dec
inc
out
cs
or
xchg
ret
cs
sub
clc
je
jo
mov
clc
or
movsl
xor
movhps
lcall
negl
pop
fistps
fs
xchg
ss
call
pop
jp
es
into
cmp
or
fwait
push
mov
gs
loop
scas
mov
dec
mov
cs
push
mov
xor
or
arpl
add
xor
sub
sub
cmpsb
pop
decl
jne
not
sbb
pop
cli
pop
mov
pop
fsubp
xchg
push
iret
dec
in
cmp
fistpll
mov
xchg
enter
lds
cmpsl
lock
sti
cmp
repnz
inc
pop
in
sub
jl
cmc
sbb
and
out
xor
mov
pop
jecxz
loop
addr16
pop
cld
xor
call
cwtl
mov
add
out
xor
aaa
fists
jb
inc
repz
pop
pop
testb
sbb
mov
pop
and
sbb
lea
xchg
clc
mov
sbbl
adc
sub
outsl
adc
cmpsb
and
es
negb
in
lea
call
lea
push
clc
sub
aaa
leave
add
cmp
loop
jne
xor
ret
xor
jne
movl
sub
jmp
jns
pop
inc
insl
inc
adc
sub
add
cli
scas
arpl
imul
pop
jg
out
pop
and
cmp
or
add
fiadds
aaa
incl
nop
mov
sbb
adc
mov
mov
cmp
pop
cltd
fs
jbe
sti
sahf
jb
std
add
sbb
sub
sbb
cmp
inc
stc
xor
outsl
xchg
bound
mov
mov
or
dec
cmpsb
push
and
insl
stos
loope
mov
add
push
loop
jmp
pop
mov
lods
popa
xor
paddusb
jg
cmp
cmp
push
and
adc
aaa
ja
daa
push
jg
xlat
adc
jne
mulb
ret
daa
scas
adc
xchg
inc
daa
pop
inc
add
cmp
adc
cmpsb
add
jle
imul
push
lock
mov
xor
incl
push
push
stc
add
addb
jmp
out
ljmp
pop
bound
jg
and
jmp
inc
aaa
in
xor
xor
int3
or
jecxz
mov
dec
out
jge
iret
sahf
dec
fsubrs
fiadds
clc
sbb
inc
inc
insl
daa
jmp
ljmp
mov
dec
idivb
xchg
lock
dec
mov
aam
sahf
mov
jle
ljmp
out
mov
pop
arpl
push
je
pop
xchg
cmpsl
push
cltd
and
pop
in
mov
sbb
jg
xor
cmp
xorb
mov
int
dec
popa
mov
jae
push
ja
pop
out
in
mov
xor
imul
xor
sub
nop
mov
and
ljmp
shll
cmp
nop
mov
rclb
cld
mov
dec
popf
pop
mov
std
and
into
into
push
out
loope
jg
fidivrs
fcoms
mov
sahf
adc
sub
inc
mov
and
jle
stos
add
test
inc
stc
cmp
bnd
cmp
push
loop
lcall
xor
inc
rorb
andb
mov
incl
cmp
cli
xchg
xchg
movsb
mov
insb
and
adc
decl
cmp
add
hlt
popf
add
pop
pop
std
and
sbb
jecxz
pop
ljmp
and
sbb
nop
mov
sub
ja
mov
jne
jg
faddl
ficoms
pop
lods
fildll
adcl
sbb
incl
js
xchg
jmp
add
jmp
clc
int
mov
fistpl
mov
mov
ljmp
mov
sbb
sbb
add
in
dec
adc
add
adc
jp
jge
in
das
jg
jg
sahf
ss
aam
insl
mov
mov
test
mov
xor
cli
xchg
sbb
ja
int
in
repz
mov
cmpsl
ficoms
dec
popa
inc
mov
repz
icebp
and
pop
pusha
pop
outsb
push
sub
test
sub
fildll
sahf
inc
xor
mov
ror
sbb
mov
mov
sti
cmp
sub
les
cmpsb
dec
push
fwait
popa
test
pop
into
clc
std
and
adc
dec
jecxz
negl
lock
xchg
movsl
or
ja
mov
push
mov
dec
dec
dec
dec
insl
scas
mov
jo
sarb
push
xchg
xchg
or
das
ret
mov
and
sahf
imul
cmc
and
stc
push
jmp
shr
xchg
push
repz
loope
ljmp
lods
add
cwtl
xchg
push
fwait
inc
out
and
out
pop
out
and
pop
cmp
cmpsl
scas
mov
les
and
push
jp
push
popa
divb
lcall
nop
sbb
mov
xorl
ret
jle
icebp
mov
mov
mov
fstps
call
xchg
mov
subb
lock
mov
inc
jne
sbb
adc
aad
xor
sub
movq
call
xor
mov
xchg
outsl
imul
sub
lahf
or
jp
ror
incl
jbe
test
or
aad
push
stos
cmpsb
mov
xchg
rol
push
and
jg
inc
pop
or
fadds
dec
inc
pop
loopne
pop
sbb
pop
movsl
sub
mov
mov
fsubl
in
imul
cli
ljmp
push
and
adc
repz
outsb
pop
sti
add
xor
lock
sub
mov
dec
jo
lock
push
in
dec
fisubs
movsl
incl
cmpsl
add
pop
stc
movsb
add
cmc
das
cli
adc
or
add
sub
pop
and
push
aad
testb
sub
cmp
inc
pop
push
jg
push
cmp
pop
jecxz
xorb
push
or
mov
mov
pop
outsb
jae
ret
dec
cmpsb
out
xchg
dec
movb
or
jne
in
shrb
outsl
call
scas
ret
xchg
js
lods
cmp
es
lock
jg
cmpsl
or
das
mov
je
xchg
negl
ret
sub
idivl
xor
or
jg
sbb
adc
jo
out
iret
mov
add
adc
inc
and
icebp
or
out
sti
xchg
lcall
aaa
or
xchg
jne
imul
mov
mov
loop
std
push
out
popa
pop
scas
in
fs
adc
into
mov
repz
dec
repnz
jecxz
aas
push
enter
adc
js
repnz
lock
or
inc
fsubs
mov
cs
insb
dec
jns
inc
clc
call
and
push
scas
outsl
jno
arpl
xchg
in
mov
dec
dec
pop
loopne
out
inc
xor
sub
clc
or
adc
cli
lcall
mov
sti
xchg
addr16
sub
jno
repnz
push
stos
sbb
mov
and
inc
mov
pop
push
ja
mov
shl
push
fcmove
inc
adc
xbegin
sub
jmp
mov
adc
mov
cld
mov
incl
and
xor
pusha
dec
dec
push
dec
sub
mov
or
push
popf
jmp
pop
mov
adc
sbb
inc
xor
dec
inc
inc
roll
dec
xor
repnz
cli
mov
sbb
lret
jb
xchg
insb
sub
aad
jo
cmpsb
out
jnp
xchg
rcl
push
push
sti
in
jl
mov
lea
jns
inc
out
jo
xor
rsm
subb
outsb
push
sub
mov
pop
loopne
adc
aas
pop
call
lods
out
fisubrs
mov
pop
rolb
sarl
jbe
jno
push
gs
into
sbb
mov
pushl
in
mov
dec
lock
push
xor
or
jle
call
decl
call
cmc
pop
cli
cmpsl
repnz
test
adc
pop
rorl
mov
sub
xchg
dec
mov
sub
ljmp
fildl
pusha
adc
and
mov
or
das
cmp
in
jne
enter
outsb
cld
push
pop
jmp
addb
fs
push
mov
outsl
pushl
or
add
sbb
faddl
mov
ds
adc
mov
clc
pop
cld
xor
mov
es
ret
jp
or
rorb
jbe
popa
sbb
div
mov
push
rcr
stc
subb
inc
mul
mov
ljmp
or
sbb
test
popf
xor
dec
idiv
decl
int3
sub
pop
negb
cltd
sub
psrld
fisttpll
iret
cwtl
push
add
das
std
jle
and
jg
push
in
es
out
and
jle
pop
fisttps
call
popa
push
fs
divb
and
movsb
jl
jae
loope
push
adc
dec
out
ja
mov
imul
scas
xchg
lret
loop
out
mov
es
add
fisttpll
frstor
decl
cmp
push
add
adc
push
fisubrs
xchg
shrb
push
stos
mov
fdivrp
test
pop
loop
jnp
sti
mov
arpl
sub
sahf
rclb
mov
jmp
fs
outsl
mov
sbbb
clc
in
insl
sar
inc
dec
mov
mov
repnz
xchg
inc
nop
dec
out
aaa
call
aad
pushf
cmp
bswap
or
dec
xor
lock
xchg
decb
push
inc
pop
sub
aam
or
mov
mov
mov
pop
scas
dec
roll
insb
mov
mov
dec
loope
inc
cltd
jmp
lock
mov
xor
popa
add
push
in
sub
imul
clc
lret
sub
mov
das
dec
cs
jle
pop
frstor
cli
decl
mov
pop
out
fildl
enter
lahf
je
cmp
mov
cwtl
push
jbe
adc
pop
pop
ss
cmp
int3
fmull
xchg
jo
das
and
push
fisubrs
dec
pop
es
fisubs
js
push
mov
xchg
push
add
push
and
stos
addb
push
sahf
cld
push
clc
scas
adc
cmpsl
xchg
push
jne
test
pusha
or
lods
add
pop
sarb
push
rorl
mov
mov
cmpsb
imul
clc
sub
ss
pop
mov
call
inc
enter
sbb
int
outsb
loop
inc
sbb
cmp
and
add
jmp
jb
add
jle
dec
je
jno,pt
cmp
or
xchg
out
xchg
ljmp
mov
aaa
out
inc
and
cmp
lods
sbb
out
rclb
gs
add
inc
or
sbb
aaa
imul
movsl
sahf
jnp
adc
ret
into
jns
mov
mov
mov
xor
into
cmp
iret
and
mov
push
int
decl
jmp
adc
adc
incb
js
sahf
xchg
or
decl
enter
rorb
pop
adc
ljmp
test
and
push
notl
mov
into
xor
cmc
cltd
push
cmp
test
xor
adc
clc
out
adc
fwait
or
xchg
inc
add
fildll
jge
insl
movb
in
es
add
lock
or
outsb
jne
stc
call
xchg
inc
and
lcall
inc
jle
sub
subps
cmp
push
push
neg
je
pop
imul
leave
lods
xor
jmp
ljmp
mov
jbe
jl
pop
cmpsb
mov
gs
xchg
loope
movsb
pop
push
aas
lret
sbb
push
ja
sbb
std
jo
and
add
add
mov
ljmp
clc
out
gs
xor
icebp
pop
jbe
cmp
in
xor
inc
pop
stc
imul
sub
push
mov
ss
clc
js
sub
and
rorb
fcomip
mov
jmp
ret
sbb
sbb
aaa
out
add
es
aas
int3
aam
cld
lahf
inc
push
roll
subb
sbb
frstor
push
sbb
jge
pop
mov
mov
into
pop
jp
out
cmp
sti
add
jns
clc
pop
fmull
dec
add
test
inc
or
xlat
push
scas
ror
dec
sbb
fidivrl
ret
inc
cld
sarl
inc
mov
jns
mov
repnz
push
push
data16
mov
sbb
ss
pop
sbb
pop
pop
mov
lea
popf
jmp
insb
roll
call
xorl
cmp
pop
xchg
daa
push
inc
fbld
test
cmp
jl
fs
inc
cli
pop
mov
xchg
cmp
dec
cld
enter
jbe
ss
lds
ficoml
lcall
or
xor
es
mov
iret
cmp
stos
jmp
and
inc
pop
jo
mov
mov
mov
xchg
push
lahf
dec
stc
das
sahf
movsb
outsb
dec
cmp
decl
push
or
adc
lods
gs
outsb
loope
bound
aaa
lcall
mov
push
pop
push
aam
addr16
hlt
mov
lods
outsb
imul
enter
cmp
repz
icebp
or
lock
add
and
rcl
ds
aas
add
dec
fldt
repnz
daa
scas
aam
sbb
xchg
lretw
or
loopne,pt
ljmp
xor
sbb
lock
adc
mov
cli
int
or
xor
out
adc
xchg
insb
sub
das
into
imul
cmovs
imul
cmp
jl
dec
jmp
cmp
pushf
and
imul
push
mov
push
mull
icebp
mov
xor
jnp
dec
add
push
scas
test
decl
mov
jne
inc
int3
pusha
inc
out
jbe
mov
or
popa
fwait
jp
in
fmulp
sub
std
cmp
sub
or
pop
mov
mov
lret
shl
ljmp
in
pop
xchg
jg
insb
lock
pop
int
mov
jmp
mov
pushf
pop
mov
inc
bnd
movsl
mov
cld
or
xchg
arpl
mov
cmpsb
mov
push
cs
add
cmp
test
fsts
xor
cmpsb
lcall
pop
sbb
push
xchg
andl
push
out
jge
pop
push
cmp
inc
jmp
push
jae
cmpsl
jle
pop
add
and
pop
cltd
nop
fistpll
sbb
sti
dec
mov
lea
sbb
cmp
lcall
insb
sbb
mov
insl
xlat
out
fildll
cld
jmp
sbb
pop
testl
mov
add
dec
hlt
or
cmp
xor
or
push
idivb
shlb
pop
adc
adc
lock
out
xchg
sbbl
loopne
fs
fbstp
loope
gs
xor
xorl
in
test
jle
andb
adc
out
sub
xor
inc
testb
popa
out
push
mov
decl
dec
clc
pop
pop
ljmp
mov
clc
jg
pop
gs
cmp
push
mov
push
mov
imul
fbstp
jae
into
or
xchg
popf
add
xchg
insl
out
jnp
add
inc
cld
jnp
adc
add
add
inc
jno
dec
loopne
jo
shrb
ss
dec
outsb
add
ret
push
or
inc
sub
daa
ficomps
add
push
insb
out
out
pop
add
stos
adc
scas
pop
stos
outsb
movsl
fidivrs
sbb
sub
jbe
mov
cmp
jbe
jg
loope
dec
frstor
pushf
clc
sub
xchg
jmp
xor
cmp
fimuls
sbb
aas
lods
inc
xor
mov
arpl
push
sub
push
inc
neg
push
punpckhwd
xor
cs
in
inc
dec
cmc
push
adc
pushl
dec
push
dec
jne
test
popf
ret
add
add
dec
call
or
rclb
dec
xor
jg
mov
mov
xor
cltd
jp
pop
std
decl
jle
push
pop
push
cmp
fildll
jbe
cltd
dec
into
mov
sub
dec
mov
std
pop
jbe
lds
push
jmp
push
ret
in
sub
mov
stc
xchg
cmp
repnz
adc
sbb
lock
loopne
call
movsb
inc
cld
cs
mulps
loopne
pop
jle
loop
lock
mov
jg
dec
push
cmp
shrl
mov
push
ljmp
xchg
sbb
add
sbb
inc
sarb
hlt
into
dec
rorl
adcb
xchg
cmpsb
jle
mov
xchg
repnz
ja
mov
sahf
push
cmp
mov
aas
popa
mov
xchg
add
aaa
std
aas
xor
out
mov
cmp
sub
sbb
or
loopne
pushl
sub
cmp
xor
sub
nop
adc
decl
into
stos
cmpsb
out
xchg
add
push
inc
ficoms
jno
out
pop
pop
xor
mov
and
cmpsb
aas
add
leave
outsb
test
clc
xorb
dec
push
jle
stos
jns
or
aas
add
cmpsb
imul
incl
mov
lea
push
cmp
je
inc
iret
sbb
data16
add
add
in
mov
dec
fcomip
lcall
jecxz
mov
mov
repnz
pusha
or
insb
pop
push
mov
movsl
cmp
or
test
cmp
dec
sbb
scas
outsl
out
js
mov
dec
jb
dec
lea
jne
ret
call
sub
js
clc
sub
xchg
inc
pop
dec
lock
insb
sbb
cmpsb
mov
out
stc
scas
mov
push
sahf
push
sub
adc
pusha
jp
push
cld
sub
cmp
es
ficoms
cmp
xchg
pushf
mov
or
xchg
fisttps
sbbb
push
insl
std
or
loop
into
mov
sti
inc
jecxz
mov
icebp
pop
jle
sbb
cmp
cli
lods
jge
xor
cld
decl
dec
sbb
push
loop
and
aaa
jl
sub
fsubl
lea
fildl
dec
add
push
mov
pop
lds
inc
fiaddl
push
or
test
fbstp
in
psadbw
push
icebp
int
aaa
adc
push
pop
push
pushl
sbb
sub
adc
outsb
mov
inc
xor
filds
mov
out
and
scas
mov
outsl
les
or
int3
push
mov
je
cld
ja
out
iret
mov
xor
rcll
fisttps
jnp
push
mov
cmovns
incl
push
and
mov
push
in
mov
insl
sbb
rcrb
push
adc
fs
pop
mov
ja
push
cwtl
sub
pop
std
adc
aaa
call
aaa
and
adc
in
push
frstor
or
push
add
ret
or
into
sbb
adc
lcall
mulb
int3
and
pop
gs
notl
incl
rcrl
lods
xchg
ficoms
loopne
mov
xchg
cmp
out
and
mov
adcb
out
sub
and
push
bound
fistpll
scas
mov
adc
decb
dec
xchg
ss
push
scas
or
cmpsl
dec
jp
fbstp
popf
daa
jmp
les
or
add
xor
cli
cmpl
or
into
adc
push
ja
and
sbb
mov
mov
mov
out
out
test
or
adc
subl
cld
mov
adc
bound
shll
cld
mov
out
or
sub
mov
jbe
push
loopne
jg
cs
cmp
or
xchg
pop
bound
test
insl
jg
pop
fsubrl
adc
push
pop
adc
sub
rorb
aas
xlat
icebp
jl
addl
mov
lcall
gs
inc
and
xchg
xchg
mov
or
mov
or
ljmp
xchg
shll
mov
adc
xor
adc
pop
test
cmp
inc
cli
pop
es
pop
daa
popf
sti
jno
cli
mov
inc
mov
clc
decl
jne
sbb
inc
and
cmp
psubsb
cltd
add
push
sahf
inc
loopne
cmpsb
fidivrs
clc
jge
push
daa
daa
add
pop
mov
test
cmp
or
xor
lods
cwtl
cmpsb
cmpsl
es
or
negb
mov
fists
mov
cmpsl
xchg
mov
leave
adc
fistps
sbb
dec
movsl
icebp
test
out
ret
fisttps
sbb
gs
incl
pop
dec
popa
jbe
fs
dec
xchg
dec
outsb
out
test
icebp
dec
popa
psubw
cmpsl
dec
jle
fisubrs
outsl
ds
int3
loopne
or
and
cmp
mov
lret
add
out
sahf
ret
enter
xchg
lock
jns
in
and
lret
loopne
mov
loopne
outsb
in
js
aaa
fistps
xchg
lcall
push
mov
adc
jge
hlt
xor
push
mov
leave
cmp
mov
call
subl
push
std
ds
loopne
xor
jnp
int3
xor
xlat
rorb
shrb
cmp
mov
cmc
aaa
cltd
clc
imul
ret
add
mov
les
fldl
outsb
mov
adc
mov
cmc
out
dec
in
push
nop
aaa
stc
mov
ss
loop
ds
repz
mov
xchg
std
fcomip
dec
or
nop
jl
push
lcall
xchg
add
cld
cmp
sti
ss
leave
or
xor
stos
or
mov
push
jno
dec
mov
adc
mulb
jle
lahf
xchg
adc
or
les
lcall
xor
xchg
jle
std
ljmp
sub
jmp
call
clc
mov
lret
xchg
adc
dec
or
pop
mov
shrb
cli
mov
cld
dec
loop
into
xor
mov
xchg
es
or
inc
push
jmp
icebp
cmp
mov
pushf
into
and
push
js
pop
outsb
rorl
lcall
mov
iret
out
div
lcall
and
mov
sub
js
jmp
sub
lock
js
and
mov
xchg
mov
inc
sbb
and
jb
push
mov
out
sub
xchg
jle
call
notb
mov
mov
cld
sub
fidivrs
popf
lret
jge
std
mov
mov
cmp
pop
xchg
xor
add
jecxz
sbb
xchg
insl
in
movsb
movb
ss
mov
fistpll
sbb
or
out
push
enter
mov
jno
ret
cmpb
add
arpl
scas
mov
outsl
xchg
lods
repz
mov
in
cmp
adc
jne
pop
clc
xor
test
cmp
push
and
cli
inc
mov
push
into
cwtl
lcall
xchg
idiv
clc
out
jp
mov
aas
add
pop
inc
fists
test
push
cli
push
loope
push
pop
call
and
cmp
or
adc
jp
cmp
ret
daa
lea
mov
incb
xchg
dec
inc
arpl
data16
inc
incb
jg
cmc
xchg
jbe
das
ljmp
push
dec
dec
mov
push
cmp
fisubrs
cld
push
inc
mov
add
jne
xchg
xchg
ss
shlb
into
xor
lock
mov
scas
push
inc
adc
test
xor
ret
and
xlat
cmp
sbb
scas
fwait
xor
and
ja
sub
mov
insl
iret
sbb
pop
mov
popa
push
fists
sub
jle
std
pop
and
hlt
pushl
xchg
jmp
add
ret
and
fwait
add
cmp
push
inc
js
mov
mov
add
sub
mov
fsubrp
mov
adc
rclb
ljmp
cld
fdivrl
aaa
adc
mov
repz
cmp
mov
in
sbb
push
jno
aaa
mov
jp
lods
adc
hlt
dec
stos
xchg
cwtl
rorl
xor
sbb
enter
sbbb
mov
cmpb
ret
adc
mov
das
pop
xor
mov
xor
aas
rol
mov
add
lock
jg
mov
xchg
xchg
xchg
mov
xor
jg
es
mov
movb
pop
mov
mov
clc
push
mov
cli
addl
adc
imulb
xchg
bound
cmc
xchg
jecxz
xchg
dec
aas
adc
mov
push
js
jmp
out
dec
sbb
repnz
roll
push
push
incl
out
jg
cmp
inc
rolb
push
cmp
ja
daa
pop
negb
sbb
jnp
ficoms
std
mov
mov
inc
mov
jmp
test
dec
mulb
mov
pop
jnp
jecxz
test
jae
mov
mov
out
cmpl
hlt
mov
fldenv
adc
out
cmp
outsb
cmp
adc
push
push
or
xor
xchg
outsb
lret
or
add
shll
mov
xchg
fistpll
mov
mov
jbe
or
jno
mov
enter
mov
sbb
and
in
out
and
icebp
sub
out
cli
data16
mov
jns
push
pop
and
xchg
jno
add
cmp
adc
lcall
scas
ret
std
and
ss
pop
pop
sbb
call
sahf
and
imul
outsb
add
mov
jmp
add
js
and
sbb
sbb
xor
scas
aaa
incl
add
ds
mov
fadds
sahf
cmp
adc
xor
stos
incl
push
ret
mov
jns
xchg
jle
gs
sbb
adc
pop
ljmp
adc
cmp
mov
inc
xor
sti
mov
lods
in
cltd
jg
int3
or
push
bound
jae
std
fmull
popa
fstp
ret
push
inc
lods
cmp
cmpsb
mov
lcall
frstor
jbe
push
xchg
inc
lds
fiaddl
jle
adc
out
test
into
lret
adc
int
mov
adc
dec
int3
incl
call
or
xchg
jmp
test
mov
icebp
and
sub
fcomip
addr16
add
stos
sbb
shrb
les
sbb
jmp
mov
mov
fisubl
push
sarl
jne
data16
ret
lahf
call
inc
in
cmp
dec
mov
xor
cli
adcl
leave
mov
clc
pop
pop
decl
jle
xor
movlps
test
ds
decl
adcl
push
test
or
inc
mov
sbb
out
bound
inc
or
jmp
inc
cmpsl
xor
mov
dec
decl
pop
enter
sbb
dec
cmp
and
sub
mov
cmp
push
adc
arpl
dec
fdivl
mov
adc
and
mov
incl
inc
out
add
adc
xchg
or
mov
pop
fcomip
outsb
pop
out
pop
ljmp
xchg
pop
sbb
aad
xchg
punpckhwd
or
xchg
xor
cmp
jmp
cmp
jo
add
cmp
and
cmp
xor
push
inc
sarb
push
dec
sub
iret
sub
xor
cld
jge
cmp
mov
push
xchg
add
pushf
xchg
pushf
or
lcall
fwait
movsl
in
lcall
sbb
pop
movsl
sahf
dec
jle
ss
dec
ret
popl
es
fimuls
ds
mov
xchg
cmc
out
jecxz
push
inc
jno
sbb
adc
or
mov
mov
shrl
sub
filds
and
fiaddl
imul
adc
pop
jmp
call
mov
loopne
int3
call
subps
sbb
incl
shll
stos
out
mov
incl
dec
lcall
in
mov
add
adc
jg
repnz
pop
into
and
ljmp
cld
mov
mov
movsl
ljmp
loopne
lahf
sub
and
std
sub
push
xor
lock
lea
push
scas
in
and
add
mov
lea
or
ljmp
xchg
and
fwait
mov
data16
xchg
mov
std
outsb
sti
rcll
dec
ret
mov
scas
mov
mov
pop
lret
dec
ds
test
icebp
dec
stos
and
mov
ds
xor
xlat
and
incl
pop
movsb
mov
and
pop
test
or
xchg
mov
sub
lock
jnp
xchg
cltd
cmp
mov
out
pmaddwd
pop
test
cs
lret
mov
lods
mov
pop
push
dec
pusha
mov
xor
cltd
pop
fwait
scas
incl
dec
pop
ds
mov
call
and
jg
test
adc
aaa
gs
sti
mov
or
js
dec
adc
inc
and
out
lahf
mov
outsl
mov
pop
mov
pop
cmp
mov
out
mov
mov
push
scas
xor
and
push
mov
dec
mov
push
pop
sbb
nop
mov
rorl
cli
jg
aaa
ja
adc
cmc
inc
adc
mov
or
pop
icebp
jp
jmp
fimuls
and
es
stos
cmp
xchg
fwait
sbb
int
sti
and
lcall
sbb
push
mov
pop
out
lods
mov
sbb
icebp
movsb
mov
inc
aaa
popa
cmp
js
rorb
lret
dec
loopne
roll
popf
push
jle
lahf
aas
jg
inc
adc
mov
cwtl
loopne
inc
dec
aam
pop
js
push
mov
scas
and
xchg
xor
mov
jbe
xchg
cmpb
mov
inc
xor
movsb
sub
push
ss
add
es
mov
inc
out
push
aad
add
scas
pop
dec
stos
or
jo
lahf
sbb
addl
inc
call
mov
xchg
push
mov
xchg
push
out
pop
lret
jge,pn
mov
daa
inc
push
ret
ficoml
call
decl
leavew
adc
loope
jge
mov
jb
or
out
add
xor
addl
cmp
out
in
jmp
xor
lea
dec
test
adc
jns
aad
incb
aaa
dec
adc
addl
mov
dec
inc
mov
dec
mov
ljmp
fiadds
inc
mov
inc
mov
adc
subl
dec
xchg
repz
mov
out
or
add
xchg
sbbl
sub
mov
and
fwait
movsb
out
xchg
outsb
in
xchg
xchg
push
jg
cmc
mov
and
mov
cmp
aaa
or
cmp
mov
cltd
shrb
push
sub
mov
xchg
pop
decl
mov
add
sub
cmpsb
int
mov
aas
cltd
xor
sub
lods
cmp
xchg
je
out
mov
adc
adc
decl
adc
movsl
xchg
aaa
pop
sbb
push
movsb
xchg
adc
into
push
and
dec
pop
pop
iret
test
sbb
call
pop
sbb
mov
pop
pop
popf
mov
cmp
sbb
std
dec
mov
in
jns
sub
out
pop
cmp
cmp
stc
pop
inc
push
icebp
mov
enter
or
xor
stos
std
and
sbb
lock
out
cmp
cs
out
inc
sahf
in
jb
outsl
inc
adc
mov
fistpll
mov
mov
cmp
cmp
leave
mov
mov
enter
shll
mov
iret
rolb
jns
leave
push
mov
mov
mov
ljmp
mov
mov
icebp
fnstcw
cld
lahf
lods
dec
fisttpl
data16
rorb
mov
js
add
jmp
jmp
jg
mov
scas
mov
test
mov
lods
inc
sti
outsl
adc
and
sbb
pop
mov
dec
push
or
sbb
test
mov
or
std
cmp
xchg
arpl
fsubl
icebp
rorl
jnp
xor
add
jge
mov
jno
ret
pop
cwtl
call
dec
mov
movsl
and
daa
push
mov
lods
mov
das
dec
dec
jbe
mov
inc
dec
orb
test
data16
mov
cmp
std
jno
test
je
jbe
inc
sahf
shll
or
pop
scas
adc
mov
jp
scas
cmpsl
or
ret
outsl
jne
push
xor
sbb
jp
sbb
sub
cmpsl
cs
xchg
popa
cmpsb
loopne
fcompl
fbld
and
inc
dec
push
or
sbb
jno
add
popa
jp
lcall
ss
jp
cmp
sub
addr16
data16
adc
inc
sbb
mov
sbb
xchg
sbb
mov
rcrb
test
or
scas
xor
pop
and
test
call
enter
dec
test
xchg
pop
push
push
or
mov
jge
addb
jmp
fiadds
mov
jo
in
addr16
data16
in
sbb
test
and
jmp
insb
pop
dec
cmp
push
jo
inc
sub
frstor
cmp
pop
sbb
outsb
cs
pushf
push
in
mov
push
xor
pop
call
inc
popf
pop
mov
gs
in
pop
into
sahf
mov
nop
xor
push
adc
dec
pushf
cmp
mov
mov
pop
adc
push
inc
fidivl
mov
movsl
pop
inc
cwtl
push
push
out
out
inc
cmp
jo
sub
mov
add
pushl
sbb
or
es
xchg
push
adc
cmp
xor
sub
call
stos
and
add
cs
xor
ret
aaa
dec
mov
arpl
mov
or
test
outsl
xchg
add
adcl
xor
mov
out
repnz
adc
inc
ficomps
jo
jmp
outsl
adc
mov
outsb
dec
xchg
xchg
sbb
jmp
xor
adc
ss
icebp
cmp
dec
pop
lock
xlat
fwait
inc
dec
sti
inc
popa
popf
test
dec
lret
shll
incl
xchg
push
inc
mov
push
test
cmp
sti
orb
mov
ja
push
jg
sub
adc
mov
and
sub
push
stos
ljmp
xor
ret
cmp
xchg
mov
jp
mov
dec
movsb
add
movsl
ja
dec
mov
mov
jg
fisttpll
push
push
nop
cli
mov
adcb
test
ret
ss
cld
jg
mov
jnp
aaa
cld
cmp
stos
push
xor
adc
idivb
cltd
incl
dec
rclb
nop
jecxz
mov
add
call
int3
inc
mov
adc
lea
push
mov
cmp
pop
or
pushl
and
popf
xor
push
push
sbb
ja
test
or
dec
fcoml
push
fmull
xor
repnz
aas
shrb
mov
jg
push
mul
mov
insb
adc
sbb
dec
dec
scas
incl
xorl
jo
fwait
cwtl
shlb
out
cmp
mov
cmp
sahf
cmp
jg
jg
int3
push
popf
hlt
sub
pop
cmpsl
pop
xor
in
adc
adc
or
jo
cmp
ljmp
shlb
and
std
outsb
push
sbb
adc
iret
jp
dec
jne
jne
pop
push
pop
lcall
adc
dec
das
jae
mov
mov
out
clc
outsl
ljmp
push
cld
adc
subb
sub
mov
jo
jle
sub
xchg
push
into
jmp
loopne
aas
inc
sbb
es
mov
cli
pop
sub
fdivrl
mov
push
into
test
outsb
pop
dec
mov
aaa
push
clc
insb
adc
std
sub
pop
test
jg
loope
xor
jmp
xchg
cmp
pop
mov
ss
int3
xchg
aaa
pop
out
cli
adc
es
sbb
popa
xor
mov
arpl
jbe
nop
or
icebp
dec
aaa
dec
jo
cmp
sub
xor
mov
pop
push
mov
sub
ljmp
adc
in
cmp
push
cwtl
fisubrs
insb
dec
or
cmpsb
push
into
sbb
dec
lret
mov
daa
popf
fwait
and
sub
repnz
and
push
dec
mov
xor
xor
notb
mov
xchg
mov
push
mov
cltd
dec
mov
mov
mov
xchg
jnp
xchg
insl
loopne
addb
mov
sbb
cli
pop
sarb
or
pop
mov
out
imul
stos
decl
aad
dec
adc
dec
insb
push
and
xor
inc
or
jl
dec
add
call
pop
aaa
or
cmp
out
clc
and
mov
test
lods
dec
movsl
jmp
std
jmp
gs
or
insl
loope
lcall
push
test
pushf
loopne
pop
lock
arpl
test
xchg
cmp
fsubrl
and
xchg
cmp
aad
in
pop
idivb
mov
pusha
add
adc
mov
leave
cmp
jmp
push
xchg
insl
cmpsb
cwtl
in
inc
shll
push
xchg
in
push
outsl
nop
lock
ds
iret
and
jp
cmc
jnp
cld
aaa
add
mov
div
daa
sahf
sub
jg
fisubs
test
push
popf
clc
pop
or
jns
jp
cltd
mov
mov
cmpsl
inc
out
mov
fldl
scas
call
jbe
out
mov
imul
lods
cmc
adc
jg
jbe
orb
nop
adc
mov
icebp
inc
sbb
repz
or
add
cmp
mov
jmp
in
sub
adc
jl
inc
call
mov
xor
das
call
mov
aas
lods
cmp
cmc
fwait
mov
xor
or
jbe
push
cmpsl
xchg
mov
push
out
xor
pusha
mov
mov
adc
and
lds
movsb
dec
aaa
outsb
fidivrl
sbb
xor
xorb
lcall
xchg
int
mov
jo
fs
mov
adc
movsb
lahf
jb
and
mov
cmc
lcall
push
icebp
stos
aaa
leave
mov
inc
iret
add
call
sub
add
pop
mov
into
and
xorb
roll
pop
pop
jne
adc
push
xchg
mov
sbb
inc
aaa
mov
incl
inc
sarb
xchg
dec
dec
and
inc
mov
je
xor
sub
mov
movsl
jmp
js
pop
sub
or
add
pop
out
cli
pop
sub
ficoml
mov
add
xlat
cmp
pop
pop
inc
lcall
mov
xchg
adc
es
adc
stos
push
data16
sbb
call
imul
dec
xlat
mov
outsb
jne
mov
imul
adc
inc
loope
pushl
jb
jne
add
lods
cltd
sbb
cmp
loopne
dec
cli
incl
push
icebp
sbb
test
pop
out
and
cmpsb
fisubrs
push
imul
or
mov
xor
sahf
flds
sub
adc
aad
ss
mov
add
mov
and
mov
mov
push
pop
or
or
or
mov
loopne
loopne
scas
sti
sbb
mov
and
rol
mulb
adc
pop
jo
mov
les
fs
jno
ljmp
xor
push
push
aaa
ja
cmp
jo
push
or
push
sarb
cmp
scas
dec
inc
lret
lret
push
or
les
pop
jp
adc
in
addr16
test
cmpsl
inc
xchg
sbbl
cmpsl
mov
popf
xlat
scas
adc
jae
add
sbbb
pop
or
pushl
inc
dec
icebp
adc
jns
xor
sbb
mov
outsl
pop
scas
mov
cwtl
dec
push
pop
add
add
jecxz
nop
inc
adc
stos
out
stos
sbb
arpl
pop
xor
mov
add
push
jns
xchg
lock
pushl
dec
les
jge
pop
push
leave
pop
jle
scas
jbe
das
sub
ljmp
push
jl
in
icebp
cs
repz
out
scas
mov
sub
clc
cli
cmpl
cmp
inc
out
movsb
rol
aaa
cld
sbb
enter
out
imul
insb
xor
incl
add
enter
jb
lods
punpcklbw
xor
xchg
cld
decl
jg
imul
or
sbb
and
and
cs
pop
mov
mov
ja
push
or
and
and
ljmp
ret
and
sub
xor
cld
mov
mov
pop
ficomps
nop
dec
cmpsl
cs
sahf
test
ja
adc
dec
inc
push
stos
pop
jp
inc
pop
push
jns
mov
call
mov
mov
pop
mov
cmp
jge
or
xor
xor
xlat
daa
mov
mov
bound
and
loope
data16
add
nop
pop
mov
pop
icebp
loope
int
mov
mov
repz
lock
loopne
mov
cs
enter
outsl
out
jle
adc
lds
fsubs
push
mov
jnp
nop
xor
xor
push
mov
test
sarb
push
mov
mov
stos
cltd
or
scas
clc
outsb
xchg
out
jl
hlt
inc
dec
gs
inc
in
sbb
xor
lock
decl
pop
inc
popf
iret
leave
adc
add
and
incl
je
lods
pop
dec
mov
jle
cmp
outsl
adc
popa
mov
ljmp
add
cmp
dec
cs
lds
clc
add
push
mov
ret
xor
pop
lea
mov
jle
pop
push
hlt
or
and
lcall
cmpsb
xchg
andb
jo
and
add
adc
jl
xchg
vpavgw
fcomip
lods
movsb
insb
jbe
repz
mov
pop
sub
mov
sbb
cmp
xor
iret
decl
data16
dec
cmp
dec
inc
push
cld
pop
sub
lret
push
aas
dec
sti
cmp
push
mov
mov
xor
scas
jbe
pop
lea
push
mov
imul
inc
std
aaa
pop
outsl
mov
int3
adc
cwtl
jne
cmp
mov
aaa
push
aaa
pop
ss
idivb
cmpb
inc
xchg
pop
jle
jne
pop
inc
into
add
sub
cmp
jle
mov
push
sbb
jge
push
xchg
pushf
ds
mov
clc
mov
test
ss
push
jg
call
or
arpl
cmp
xchg
outsb
aaa
xor
pop
or
mov
jg
scas
out
inc
jmp
jle
push
xor
mov
sti
cmp
xor
cmc
loopne
or
xchg
or
shlb
bnd
cs
adc
push
adc
js
push
out
outsl
lret
push
inc
aam
pop
dec
pushl
mov
sub
test
add
cmpsb
adc
and
outsl
add
mov
pushf
lods
sub
jle
mov
and
adc
or
push
jge
ficomps
scas
aas
ret
fimull
repz
xchg
mov
sbb
shrb
rcll
jbe
das
sub
mov
push
mov
pop
pushl
jmp
lret
mov
pop
cltd
inc
pop
or
inc
ret
icebp
add
jmp
xor
lods
jg
or
mov
aas
mov
nop
loop
gs
out
movb
sub
push
ljmp
mov
rcrb
lea
push
js
das
pusha
and
inc
into
push
mov
movups
and
call
xor
and
adc
cmpsb
adc
pop
lods
jmp
scas
and
xor
cmpb
js
fwait
add
or
mov
push
push
mov
rclb
negb
mov
cwtl
or
mov
inc
popa
insl
stos
jb
dec
jo
push
ds
mov
adc
call
inc
push
ret
sarl
jne
add
cmp
sbb
mov
mov
mov
push
cmpsb
push
pop
adc
ja
data16
jle
jno
dec
jns
cltd
aaa
popa
cld
fcomip
inc
stc
cs
jge
or
push
test
push
mov
bound
sbb
filds
sub
jmp
aaa
inc
loopne
into
les
xchg
cmp
mov
into
leave
cmc
jecxz
and
stos
push
mov
jmp
negb
push
jbe
cmp
mov
imulb
cmp
xchg
pushl
and
mov
jae
cmp
lea
js
xchg
int
cld
aas
push
popw
push
repz
cmpb
add
xchg
test
mov
jb
mov
fisttpl
mov
lcall
sbb
mov
and
jo
or
daa
pop
in
fists
andl
mov
ret
sub
adc
push
test
pushf
cmp
fidivs
scas
or
jnp
mov
jnp
pop
cwtl
inc
clc
lcall
movsl
sub
pushl
or
loop
jno
pop
sahf
adc
xor
pushl
inc
mov
std
pop
jbe
jmp
bound
cmp
nop
xor
inc
iret
add
incl
inc
rorl
xlat
mov
cmp
mov
inc
dec
jns
and
xor
adc
scas
dec
pop
pop
ljmp
ljmp
arpl
jnp
and
andl
aaa
fadd
jo
add
jge
jnp
test
jg
dec
out
dec
imul
lods
lods
aad
shll
call
out
out
loope
fimuls
fstp
xchg
sbb
ss
cmpsl
icebp
dec
into
fmul
mov
inc
push
lret
dec
clc
add
shll
inc
leave
mov
insl
push
dec
ja
push
jno
aas
dec
pusha
jmp
push
sbb
adc
mov
je
push
cmp
pop
jne
mov
jnp
sbb
xchg
scas
sub
jp
aas
add
or
icebp
jle
adc
imul
movsl
push
jp
popf
aaa
addb
ficoms
out
loopne
out
test
fcomip
jg
call
xchg
pop
pop
es
out
lret
inc
sub
mov
pushl
dec
and
xchg
pop
jne
pop
mov
hlt
push
out
sub
aas
pop
nop
adc
cld
test
pop
out
xchg
mov
das
cmc
mov
jbe
mov
xor
in
add
ja
aas
clc
jb
sar
out
cmp
jns
add
xchg
daa
jns
jmp
call
push
inc
dec
dec
fsubrl
enter
inc
ret
inc
dec
lock
lcall
lret
xor
pop
cltd
adc
mov
add
and
push
push
aas
inc
pushl
fimuls
jg
in
mov
mov
sbb
and
ljmp
pop
dec
loope
es
ss
clc
and
sub
shlb
clc
lcall
adc
adc
mov
out
out
sub
ret
jnp
lcall
or
sbb
decb
mov
jae
sbb
arpl
xor
imul
out
jb
pop
cwtl
and
mov
sub
mov
jge
aaa
push
jo
jns
js
popf
pusha
scas
mov
or
aad
mov
outsb
call
inc
mov
inc
dec
out
iret
lcall
in
inc
les
aam
mov
xchg
dec
jecxz
fldl
ss
popf
or
cmp
push
into
insb
loope
popa
lret
cmpsl
or
test
pop
xchg
jae
jecxz
gs
stc
cld
imulb
das
addr16
inc
mov
or
adc
cmpl
das
mov
xchg
popa
mov
sub
stos
popf
rorl
in
mov
or
mov
adc
lret
rolb
mov
mov
mov
sbb
inc
mov
scas
loopne
add
mov
movsl
dec
leave
jmp
inc
pop
add
gs
sbb
scas
aas
mov
mov
mov
cmpsb
jb
mov
mov
xor
je
adc
sbb
dec
sbb
jle
and
or
stos
icebp
jl,pt
jp
std
dec
sub
jmp
inc
jns
add
mov
jne
cmp
fs
xchg
inc
andl
outsb
in
pop
insb
cmp
dec
out
mov
dec
stc
adc
inc
lret
shlb
pop
cmc
jg
jo
sbb
mov
lcall
lcall
jne
cmp
push
imul
mov
cmp
push
add
stc
sub
incl
xor
jns
cmp
es
xor
and
xor
xchg
sbb
divl
je
aas
in
adc
dec
sbb
pushf
mulb
mov
dec
pop
adc
mov
pop
fistps
call
ss
cmpsl
mov
push
aaa
ds
clc
pop
loopne
pop
daa
scas
mov
sub
push
pop
cmc
outsl
ljmp
nop
inc
rorl
jbe
movsb
mov
jecxz
aas
or
jle
push
repz
xchg
test
pop
mov
stos
jg
hlt
into
testb
mov
jno
mov
jne
fcomip
add
cld
jl
adc
mov
mov
dec
pop
scas
pusha
loope
mov
inc
jbe
jns
xchg
push
jne
or
ss
adc
data16
pushl
jbe
decl
ficomps
push
sbb
addr16
and
mov
cmpsb
and
in
jne
push
aad
mov
push
jnp
mov
ficomps
inc
cmpsl
xchg
xchg
test
xorl
sar
mov
rorb
jae
xchg
or
fs
rcr
pop
mov
jbe
push
iret
xchg
or
add
jle
das
sar
outsl
insb
jge
sub
xchg
add
fwait
add
mov
adc
mov
push
movsb
bound
mov
jo
sahf
mov
pop
mov
push
icebp
movsl
out
cmp
push
out
inc
mov
into
xor
pushl
xchg
sbb
xchg
sbb
xlat
in
xor
lea
jb
inc
pop
ljmp
dec
cmpsb
dec
cmpsb
sbb
inc
or
in
imul
pushl
xchg
jae
xchg
xor
js
bound
inc
mov
jg
inc
or
mov
hlt
shlb
cmp
xchg
ljmp
decl
push
xor
aaa
pop
insl
or
add
xor
mov
ljmp
jbe
sub
xchg
add
imul
jne
lahf
lock
mov
mov
test
movsl
cmpsb
mov
lds
icebp
cmp
mov
out
mov
in
ja
xor
negb
nop
sbb
adc
add
xchg
cltd
jo
imul
xor
popf
xchg
xor
outsb
stos
insb
outsl
idivl
mov
jg
ss
lods
ds
shlb
pop
out
roll
add
insb
inc
jbe
jo
push
and
mov
decl
sbbb
nop
push
rclb
inc
sub
push
cmpsl
test
xor
decl
test
mov
dec
xchg
mov
les
mov
in
xchg
loopne
aas
add
push
jno
jns
je
pushf
stos
sbb
cmp
leave
xchg
sbb
jno
test
cwtl
pop
cs
cmpsl
cltd
mov
pushf
sbb
xchg
jmp
sub
lods
mov
mov
sub
les
pusha
stos
rorl
add
sbb
sbb
cmp
call
adc
test
subl
ret
sbb
nop
add
out
cmpsl
sub
aaa
add
sbbl
jecxz
icebp
scas
inc
repnz
mov
inc
dec
adc
out
add
popa
xor
sub
cmp
dec
dec
sbb
pushl
pop
ja
xorb
and
mov
xchg
arpl
incl
lret
int3
cmpl
xchg
test
cli
and
bound
mov
mov
idivb
bound
mov
cmpsb
mov
stos
das
push
ljmp
mov
sahf
push
jg
jmp
dec
mov
out
loope
mov
out
cmp
mov
inc
xchg
lcall
lods
cmp
add
int3
pushf
int
pop
outsb
and
stos
and
cmc
daa
add
mov
jg
or
dec
das
adc
xchg
push
dec
mov
cld
aas
out
pop
sub
push
loopne
xor
or
loope
jo
bound
pushf
add
adc
mov
decl
es
movsl
outsl
mov
and
test
call
gs
cwtl
and
mov
test
fbld
pop
pop
inc
sbb
enter
mov
or
push
data16
cmp
pop
cmp
mov
clc
test
aad
inc
inc
inc
imul
mov
pop
icebp
mov
adc
lds
cmpsb
and
icebp
ret
ret
ljmp
lcall
out
jle
lods
lods
pop
loop
and
jle
andl
idiv
push
jp,pn
pop
int3
dec
out
imul
jmp
fs
add
mov
insl
aam
mov
jecxz
es
jmp
push
mov
inc
or
lock
jno
pop
sub
in
adc
jle
cmp
mov
lock
mov
xchg
fidivs
js
cltd
mov
mov
cld
loopne
inc
enter
arpl
pop
mov
pop
pop
bound
imulb
outsb
jle
gs
testb
sahf
push
in
jle
idiv
add
mov
rorb
in
push
dec
cs
mov
fidivl
mov
cmc
mulb
push
jno
shrl
mov
cmpsb
push
sarb
cwtl
push
lahf
mov
popa
loopne
push
scas
aad
int3
mov
mov
xchg
lock
jns
lods
dec
lds
dec
std
decl
jbe
inc
stos
insb
xchg
xchg
stos
jmp
dec
xor
stos
push
or
scas
mov
aas
push
mov
dec
jg
loope
fwait
xchg
mov
mov
inc
mov
cmp
push
dec
mov
xchg
subl
cmpsb
ss
icebp
incl
or
fwait
inc
inc
movsl
cmp
and
pop
hlt
popa
aaa
outsb
into
std
push
mov
pushl
idiv
adc
shlb
in
or
cmp
lea
out
arpl
dec
cmc
mov
fcomip
or
ss
pushf
xchg
inc
bound
cmpsb
jo
mov
xor
sbbl
adc
les
imul
out
mov
subl
iret
mov
mov
mov
inc
icebp
sbb
and
inc
adc
cs
or
jmp
cmpsl
xor
add
mov
mov
inc
jg
xchg
daa
cltd
and
jne
adc
sbb
mov
decb
pushf
decl
lock
or
push
inc
out
or
sbb
mov
subl
fsub
mov
mov
in
push
cmp
lods
sub
xchg
mov
inc
lods
adc
hlt
popa
gs
jo
xor
push
mov
mov
aas
mov
rcl
decl
inc
outsb
or
push
enter
mov
or
rcll
data16
cld
mov
pop
xor
ja
mov
xor
loope
and
jge
mov
out
inc
daa
cwtl
mov
jb
lret
xor
and
adc
mov
adc
mov
sbb
push
into
fcoml
xor
ljmp
jno
mov
or
test
mov
jge
sbb
ss
fiaddl
inc
jno
xor
adc
mov
push
int
sahf
call
sbbb
lea
mov
xor
mov
mov
or
ljmp
out
xchg
sub
add
and
sub
std
push
push
subb
js
dec
lock
jge
push
arpl
mov
shlb
lds
popf
std
cld
mov
cwtl
ss
xchg
inc
xchg
dec
adc
mov
loopne
adc
add
jle
out
xor
sbb
push
ss
push
outsb
aas
push
fsin
push
loopne
loopne
sahf
imul
stos
bound
pop
pop
add
sbb
rcll
jo
add
inc
hlt
mov
insl
mov
adc
jp
mov
adc
sbb
xchg
jb
mov
test
adc
pushl
jp
cmpsb
call
dec
add
outsb
jne
dec
aaa
inc
add
pop
pop
nop
sbb
mov
push
cwtl
loope
out
das
jbe
out
scas
cmp
gs
jb
mov
data16
mov
jge
dec
pushl
sbb
xchg
sarb
inc
std
ja
jg
or
repnz
push
mov
mov
mov
inc
scas
push
xchg
stos
xor
mov
and
pop
test
jns
loope
pop
jbe
dec
jle
lea
inc
or
add
into
cmp
push
jp
filds
fisubl
mov
test
ja
pop
and
push
incl
cmpsb
cmpsl
mov
stos
icebp
mov
dec
sahf
sub
jle
outsb
stos
pushl
inc
xchg
inc
lcall
mov
cld
ja
push
inc
push
push
sti
and
jge
mov
jmp
or
dec
adc
movsl
or
pop
pop
sbb
xchg
xor
xchg
jg
decl
pop
cmp
mov
bound
jbe
mov
movsb
imul
js
mov
push
mov
xchg
mov
mov
jle
outsb
sti
push
lret
jbe
pop
clc
js
mov
cmpsl
gs
mov
test
cmp
sar
mov
mov
dec
add
adc
testb
sub
mov
scas
xor
imul
mov
jbe
pop
daa
pusha
or
xor
pop
xor
push
test
outsb
inc
fnsave
pop
data16
inc
gs
scas
ljmp
inc
fadds
adc
add
fs
pop
push
inc
iret
jg
loop
into
or
jg
jecxz
into
mov
push
es
lahf
push
sbb
add
sub
or
mov
push
push
pop
mov
lret
shll
stc
stos
data16
cmp
cmp
js
and
dec
sbb
rcrl
pop
xchg
cmp
ds
sbb
cmp
mov
fwait
mov
push
cltd
lods
insb
xlat
mov
ljmp
rorl
or
rcr
sbb
decb
push
sbb
inc
subl
pop
cld
adc
xchg
inc
iret
iret
mov
cld
inc
sub
ret
xor
xlat
cmp
std
mov
mov
arpl
push
in
and
dec
cli
add
nop
insl
std
add
mov
stc
xchg
popa
outsl
add
inc
mov
pop
stos
mov
imul
sahf
cmpsb
out
cli
sti
dec
lds
scas
mov
roll
in
ds
out
dec
in
xchg
inc
shll
dec
xchg
mov
fdivrp
stc
nop
jns
sarl
pop
jo
sub
cmp
mov
loopne
lods
fmull
dec
mov
xor
fnsave
mov
adc
cmpsb
decl
bswap
stos
in
sub
mov
rorb
mov
into
sub
or
ljmp
into
xor
mov
pop
or
mov
fmuls
incl
inc
test
ret
cmp
jge
and
loop
gs
aad
mov
dec
sub
dec
outsb
cmp
mov
push
hlt
fwait
movsl
imul
mov
jb
outsb
mov
adc
fwait
mov
addr16
fimull
adc
cmp
push
es
xchg
enter
int3
jg
fsubrp
mov
cmp
lea
in
pop
cmp
nop
stos
push
xchg
mov
or
scas
popf
xchg
pop
in
xlat
or
cmp
xchg
clc
push
lock
sbb
idivb
test
stos
mov
int3
rcl
mov
pop
out
xchg
shrl
dec
fadd
mulb
cmc
mov
popa
popf
jmp
inc
orb
jg
ljmp
pop
std
mov
ror
loopne
inc
into
sbb
fisttpl
jbe
loopne
inc
or
mov
mov
mov
movsb
scas
clc
out
lods
xchg
fcmovu
xor
lds
jbe
mov
data16
popf
ret
movsb
xchg
pop
ljmp
mov
lahf
outsb
push
sbb
mov
inc
call
int
ret
out
sbb
sub
inc
add
adc
sbb
cmp
aas
sti
xor
xlat
add
pop
notl
inc
out
imul
jl
or
popa
ljmp
push
rclb
inc
repz
jbe
add
in
inc
les
int
sti
sub
jno
xor
cmc
or
cli
jg
dec
xchg
bound
and
out
rcr
add
xor
cmpsb
loope
fdivrp
call
into
addb
aaa
outsl
icebp
sub
orl
push
roll
inc
fiaddl
in
incl
xor
inc
sub
test
in
adc
sbb
inc
shll
cmc
incl
add
aaa
mov
cli
pushf
sbb
mov
and
xchg
je
aam
add
aaa
out
ja
outsl
sar
mov
lea
or
cmp
mov
sub
or
test
inc
clc
mov
push
cwtl
test
push
sbb
xlat
cltd
jg
decb
mov
pop
dec
int
pop
cmp
les
and
fists
inc
xlat
mov
add
dec
cmp
push
or
adc
mov
call
cmp
rolb
js
jmp
push
mov
and
or
push
mov
sub
jbe
or
push
mov
mov
ja
es
clc
xchg
scas
shlb
jle
cli
nop
arpl
fidivrl
jl
pop
jbe
add
dec
andb
push
les
shrb
test
mov
pop
push
adc
cmp
popl
popf
sahf
xor
adc
mov
jne
mov
sbb
aad
jae
outsb
sbb
adc
cmp
test
add
inc
sbb
stos
pop
xlat
mov
cs
xor
jnp
fiaddl
pop
and
pop
sarl
divb
mov
iret
mov
daa
loope
ret
jo
push
xor
sub
xchg
idiv
decl
insb
jge
imul
dec
aas
rclb
inc
jg
cmc
pushl
xchg
mov
adc
jns,pn
inc
push
inc
sub
fldl
and
adc
pop
mov
insl
aas
or
xor
pop
mov
cmp
mov
clc
xor
sbb
dec
mov
jle
and
les
pop
data16
sbb
push
aad
sbb
mov
xor
jle
sbb
inc
decb
cmc
test
bound
cltd
insl
fwait
inc
add
adc
mov
popa
js
out
adc
addl
test
cmpsl
adc
stos
mov
mov
test
mov
mov
mov
fwait
into
xchg
add
push
mov
sti
inc
mov
inc
or
jb
ss
pop
mov
ljmp
push
ds
dec
xor
stos
push
dec
or
mov
outsl
clc
arpl
dec
adc
sti
gs
rcr
xor
mov
xor
jo
xor
push
xchg
dec
sbb
push
sbb
jl
aas
popf
popa
mov
xor
mov
cmpsl
push
neg
pop
pusha
pop
ljmp
cmp
sbb
cli
mov
mov
adcl
sub
fildll
lds
fmuls
xchg
out
pop
add
cmp
jmp
lcall
jne
imul
lods
cld
xor
xor
add
lcall
dec
aas
or
repz
in
aas
push
ret
pushl
stc
in
sub
cwtl
test
gs
and
mov
movsb
insl
movl
and
mov
ljmp
outsl
imulb
jo
out
or
ljmp
xor
shrb
mov
add
ret
or
jbe
sub
sbb
out
bts
mov
stos
incl
repz
pop
out
popf
loop
cmp
inc
inc
xchg
loope,pt
outsb
push
cltd
repnz
inc
cld
lcall
adc
adc
lcall
or
xchg
jle
ss
adc
mov
mov
jno
add
dec
repnz
popf
inc
es
lds
lcall
pop
mov
dec
push
or
push
push
mov
mov
mov
lock
jle
cmp
das
fs
adc
fcomip
jo
xor
add
or
xor
ss
aas
pop
repz
cmp
out
ljmp
fistl
dec
rcrb
push
push
mov
jg
pop
test
bound
or
ljmp
jb
and
add
xor
arpl
je
frstor
lcall
stos
out
jmp
mov
fdivrl
jmp
dec
add
xor
adc
add
in
mov
sahf
cmc
xchg
lcall
popa
loope
leave
out
stos
cmpsl
mov
push
fisubs
insb
jbe
adc
cs
mov
clc
or
mov
sub
outsl
or
leave
or
xchg
lret
leave
mov
push
sub
push
mov
inc
flds
jne
jecxz
adc
lods
inc
jp
mov
lock
dec
pop
pushf
mov
shll
inc
dec
loope
or
jno
mov
sqrtps
mov
pop
jl
testb
pop
mov
xor
jns
ljmp
out
cltd
cmpsb
jns
jnp
popa
inc
aaa
test
fnstenvs
add
pop
sbb
dec
jle
icebp
mov
mov
or
jnp
scas
in
dec
sarl
inc
xor
push
jne
call
insl
fs
jns
sub
adc
sbb
pop
push
imul
mov
push
mov
shr
cli
or
pusha
pop
fdivrl
and
ljmp
scas
adc
and
je
mov
sub
aas
movl
jmp
andb
sarl
and
pop
imul
sar
insl
and
add
ljmp
outsl
jp
decb
cld
dec
fsts
pop
adc
mov
lcall
xchg
out
and
sbb
push
ret
sub
pop
xor
mov
sti
test
test
incl
imul
bound
fs
lock
mov
dec
inc
mov
push
and
in
fdivs
jae
loope
add
mov
or
pop
mov
jo
test
xor
and
xchg
xor
push
bound
ljmp
enter
inc
out
and
inc
lcall
mov
jno
sbb
subl
insl
js
cli
incl
lcall
push
out
cmp
insl
mov
jg
icebp
out
movsl
jmp
xor
mov
xchg
es
adc
popf
push
jns
and
mov
in
ljmp
test
fcomi
pop
ds
dec
dec
sbb
es
add
cs
rolb
cmp
sbb
mov
imul
xchg
sbb
negb
push
dec
aam
xor
mov
sarb
xor
loope
sar
pushl
pop
add
mov
jno
out
stos
cltd
in
addb
fbld
jl
icebp
test
pop
sti
ret
mov
mov
xchg
xchg
pop
fmulp
imul
inc
into
dec
arpl
inc
daa
and
decl
xor
push
dec
clc
add
or
daa
insb
fadds
inc
cld
sub
add
jmp
add
sub
scas
aas
int
in
xchg
pop
ss
mov
shll
aas
xor
call
imul
xchg
movsl
mov
xor
push
decb
mov
jg
cmpsb
and
push
shlb
xor
sub
mov
mov
mov
ret
pop
popf
pop
inc
inc
push
iret
leave
ja
push
sarb
ss
call
or
in
shrb
pop
lret
inc
fildll
clc
aaa
xorl
insb
andl
inc
fcomip
pop
pop
jbe
mov
add
lea
push
or
or
lcall
out
mov
sbb
add
jecxz
cli
fwait
bound
lea
jnp
fildl
mov
mov
lret
sar
imul
ret
xchg
scas
js
lock
jno
lahf
pop
ffreep
xor
inc
add
call
xchg
push
js
dec
enter
push
jl
xor
ds
dec
fcoms
xor
into
pop
cmpsb
gs
movsb
cmp
push
call
sbb
decl
bound
jecxz
jge
mov
insb
pop
js
sub
adc
fcomip
jno
cmp
xor
fs
dec
les
dec
add
rcrl
ljmp
dec
ss
enter
cmp
mov
les
jle
sarb
xor
and
xchg
fcoms
aaa
add
cltd
mov
fsubl
or
mov
inc
jo
je
or
mov
mov
add
ret
xchg
mov
nop
jmp
cmpsb
lods
push
pop
outsl
call
das
mov
flds
packuswb
jbe
or
add
mov
mov
dec
mov
les
ds
adc
in
inc
add
xchg
int3
add
inc
mov
int3
sub
push
mov
je
hlt
lock
das
sahf
mov
mov
loop
out
cmp
add
adc
test
lock
cmc
lods
clc
jnp
xorb
sbb
dec
or
xor
inc
dec
std
inc
cmp
insb
jp
inc
enter
stos
into
sbb
inc
andl
xchg
inc
in
sub
pop
jno
or
imul
js
pop
ret
repz
mov
loopne
dec
dec
cwtl
adc
mov
repz
xchg
adc
add
in
js
repz
cs
aaa
je
sub
and
into
add
ljmp
cli
lcall
jle
sub
ss
push
dec
int3
push
int3
xchg
fidivrs
jle
mov
add
push
ljmp
xor
xchg
out
movsl
lcall
or
pop
cld
out
mov
xor
loop
mov
ds
adc
int
xchg
imul
jmp
mov
pop
mov
out
cmp
or
cmp
loop
mov
sahf
outsb
aaa
pop
or
adc
dec
adc
inc
shlb
mov
mov
mov
cmp
push
ret
xchg
stos
cmc
mov
dec
scas
mov
rcrl
call
arpl
lcall
push
cmp
xchg
outsl
call
pusha
pop
lods
xor
sbb
pop
push
loopne
inc
cli
sahf
jbe
jl
pop
inc
xor
jnp
push
imul
popa
into
add
mov
xchg
xor
xlat
xchg
fs
fs
cld
mov
inc
mov
int3
sbb
jb
add
lcall
and
push
adc
outsb
xchg
cmp
notl
loop
adc
iret
mov
js
add
sar
mov
cld
inc
cli
xor
pop
xchg
xchg
insl
jmp
adc
in
jbe
cmp
repnz
xor
call
popa
add
xor
or
or
jg
mov
jl
adc
and
or
loopne
xchg
iret
mov
dec
aas
xchg
test
push
out
lds
cmp
jbe
pushf
icebp
and
mov
mov
lock
out
cmp
sub
cmp
int3
lods
jg
ljmp
xor
push
inc
pop
or
push
into
mov
sbb
cmp
or
imul
jle
add
lock
sbb
out
fnstcw
fcomip
outsl
orb
dec
dec
mov
cmp
or
sub
jmp
xchg
dec
sub
ret
fcoml
pop
pop
dec
adcl
sbbl
ljmp
jle
cmp
mov
inc
popa
movsb
insl
sub
sbb
cmp
inc
and
cs
adc
flds
push
jmp
dec
ljmp
pop
gs
sar
stos
jmp
push
add
and
push
push
enter
adc
mov
jne
sbb
xor
sbb
cmp
add
jmp
fs
jg
mov
hlt
dec
push
add
jno
inc
lock
jmp
mov
into
mov
stos
mov
fisttps
inc
sbb
xor
sbb
movsl
int3
add
sub
xchg
cmp
mov
or
iret
lock
xchg
add
push
ja
inc
js
pop
mov
mov
out
rorb
scas
ljmp
mov
inc
fmuls
sub
rclb
sarb
out
push
sar
aas
dec
inc
pop
jo
sub
pop
push
pop
data16
push
fildll
scas
adc
imul
js
xchg
cmp
daa
gs
or
and
mov
cmp
rorl
adc
xor
sub
std
mov
les
lods
cmpsl
fistps
fildll
clc
push
mov
or
ret
dec
add
cld
add
push
or
push
sub
mov
xchg
xor
stos
repnz
sar
dec
add
inc
push
push
in
jbe
push
xor
arpl
mov
not
rolw
das
imul
pop
mov
jmp
add
xor
rorb
dec
adcb
lods
dec
mov
mov
ds
jno
jle
pop
cmpsb
repnz
inc
call
loopne
lret
fcompl
mov
cmp
add
add
lret
and
in
push
sar
jne
ret
popa
call
incl
ret
mov
cmpsl
sar
mov
xchg
cmpsb
sbb
cld
lcall
mov
xor
test
data16
mov
ja
out
sahf
scas
aas
dec
enter
cltd
pushf
test
lods
lock
rcll
push
xchg
jb
push
loope
push
icebp
mov
pop
sub
pop
repnz
or
fildll
loopne
jbe
cmpsb
mov
jp
and
cld
fisttps
jmp
add
or
cwtl
jnp
sbb
cmpsb
movsl
or
push
and
or
xor
pop
inc
cmp
cld
mov
dec
or
jo
aam
das
popw
rclb
dec
or
or
sub
incb
cld
fcmovnb
sub
inc
in
lods
cmpsl
xor
mov
push
scas
in
cmpsb
pop
adc
pop
dec
push
pop
dec
cmpl
push
mov
jo
mov
pop
popa
lock
scas
pop
adc
decl
jecxz
in
ss
sbb
gs
js
jmp
popa
je
fs
mov
adc
lahf
ss
in
dec
pop
inc
dec
adc
jbe
mov
xor
ljmp
imul
aam
insl
into
mov
je
pop
fbstp
inc
push
loopne
push
ss
cmp
xchg
pop
or
inc
ja
sbb
or
outsl
mov
pusha
cmpsb
and
lcall
xchg
inc
jmp
push
lcall
inc
xlat
ret
mov
filds
mov
inc
sahf
mov
inc
jecxz
stos
or
inc
mov
imul
shl
movsl
sub
decl
adc
push
mov
sti
or
jmp
pop
iret
sub
add
fadds
xchg
dec
divb
jmp
cltd
inc
rcr
xor
jp
ret
inc
rcll
jns
cmpl
push
mulb
jmp
mov
sarb
and
cli
dec
in
mulw
out
dec
iret
mov
add
mov
out
mov
movsb
imulb
mov
ja
imul
or
dec
adc
stos
adc
or
out
xchg
stos
mov
cmpsb
imul
mov
in
aas
pslld
aad
xor
push
mov
lcall
sub
adc
mov
gs
iret
sub
push
inc
fildl
dec
sub
mov
fiadds
jne
dec
icebp
inc
fildl
addr16
adc
sar
pop
push
sbb
cmc
xor
in
pop
mov
xchg
aaa
pushl
andl
jle
jne
xchg
ljmp
cmp
cltd
xchg
mov
push
or
loop
mov
shll
sar
stos
inc
push
inc
stos
out
mov
cld
jp
and
add
sub
sti
aam
popf
les
cld
lcall
cwtl
test
int
aam
dec
sub
mov
in
je
shrl
scas
cmp
sub
mov
jae
pushl
jb
xchg
pop
loope
jb
pushf
imul
lcall
pushl
sub
mov
xor
adc
or
and
lods
inc
out
sub
sahf
outsl
stc
cmp
and
dec
int3
mov
loope
test
data16
decl
push
ret
mov
inc
mov
mov
jne
xchg
das
inc
pop
movsb
repz
decl
inc
inc
nop
or
subl
dec
mov
dec
out
dec
sti
pop
dec
insl
pop
std
and
dec
jmp
lcall
cli
jne
push
jmp
jg
inc
stc
add
insl
repnz
dec
rorl
stc
pop
icebp
adc
inc
lds
leave
push
cld
incl
adcb
arpl
cmpsl
add
cmp
insb
sbb
push
jno
decl
fisttps
dec
std
and
in
push
cmp
add
add
jb,pn
loope
cmp
dec
fnstenv
addr16
or
mov
outsl
clc
mov
repnz
aaa
dec
out
daa
xor
push
in
and
adc
xor
push
andl
cmp
xchg
subb
dec
call
dec
sbb
out
and
xchg
aas
sbb
sub
or
lea
mov
xor
inc
popf
cmp
sahf
inc
inc
xchg
movsl
xchg
xor
pop
pop
pop
lret
aas
add
push
loop
ja
out
out
inc
rclb
adc
cmc
jmp
and
xchg
lahf
lds
pop
in
cmp
int3
je
pop
or
mov
cli
inc
ds
add
fimuls
pop
jmp
test
mov
cmp
movsl
rcrb
pop
inc
aaa
mov
and
icebp
lcall
decb
outsl
lret
fcoml
jnp
xchg
or
rorb
sub
sub
and
mov
push
ljmp
mov
into
aaa
jl
lcall
add
stos
cwtl
adc
mov
dec
nop
pop
clc
mov
xchg
jo
mov
aad
add
ficomps
push
push
inc
nop
sub
adc
ljmp
sbb
mov
data16
xlat
popf
push
shrb
jns
add
les
fldl
push
mov
pushf
and
aas
and
out
inc
fdivrs
add
push
out
jg
loopne
jp
sti
sub
ds
mov
les
add
xchg
mov
test
add
inc
icebp
mov
or
ljmp
push
lock
push
pop
les
and
or
mov
add
std
aaa
push
jb
cld
push
cmp
push
in
and
inc
icebp
jne
jg
icebp
outsl
les
adc
int
jle
aaa
imul
pushl
cld
jg
or
jb
out
lcall
and
punpcklwd
mov
decl
out
xchg
pop
pushf
lahf
inc
sub
add
out
mov
cmpsb
ds
jo
cwtl
sub
lahf
push
pop
into
stos
mov
enter
std
gs
decl
dec
test
push
ja
or
mov
sbb
or
or
inc
mov
lods
outsb
ljmp
jg
sahf
sbb
adc
or
xlat
daa
scas
cmp
cmpsb
xor
cmp
lcall
call
push
into
mov
mov
mov
aaa
mov
sub
lcall
cmpb
adc
sbb
sarl
pop
sahf
inc
inc
mov
jp
mov
inc
call
cmp
aas
dec
pop
mov
push
decb
and
aaa
mov
mov
outsb
lea
xchg
push
jno
mov
decl
xor
adc
mov
jne
js
out
sahf
jmp
je
push
scas
ds
mov
pusha
xchg
punpcklbw
arpl
ljmp
cmpl
stos
mov
push
movsb
hlt
test
push
fs
out
cmp
or
xor
mov
aas
in
inc
es
sub
lret
mov
add
js
lea
or
aam
cmpsl
jl
jl
jg
popf
hlt
lcall
mov
fildll
mov
jg
jbe
scas
or
js
or
ljmp
push
lret
inc
fimull
js
cld
jg
dec
decl
mov
xchg
or
mov
push
clc
lcall
sub
sub
mov
mov
xchg
jecxz
ljmp
pop
cmpsb
call
pushl
add
dec
std
adc
ret
mov
push
cmpb
stc
imul
inc
ss
mov
push
test
and
les
and
push
push
cli
fs
movsl
mov
jge
xor
jg
jg
cld
imul
leave
pop
pop
and
pop
int3
xchg
xchg
xlat
adc
xlat
mov
sbb
hlt
inc
ret
push
xor
inc
incb
mov
jg
mov
xor
or
add
or
pop
dec
je
and
lret
cmp
pop
and
xchg
and
or
insb
add
scas
clc
incl
mov
lcall
cmp
inc
mov
jns
mov
test
pop
or
iret
xchg
sub
and
lea
adc
dec
movsb
mov
jbe
daa
cwtl
xchg
addl
mov
mov
sahf
and
xchg
cmp
fisubs
mov
mov
cmpsl
sbb
mov
mov
sbb
out
cmpsl
pop
and
adc
loope
xor
cltd
stos
or
fimull
lea
sbb
push
jo
add
sbb
xor
movsb
negl
add
cli
mov
mov
xor
jbe
dec
xor
xchg
dec
call
je
les
inc
mov
movsl
sti
xchg
outsl
pop
and
inc
cwtl
pop
fwait
sahf
xchg
or
cld
jmp
jl
sbb
cmpsb
imul
addr16
repz
push
arpl
mov
mov
test
cltd
lods
inc
stos
decl
sub
std
andb
mov
popa
hlt
xor
sbb
ss
clc
and
clc
in
shrl
push
clc
jg
arpl
dec
fnstenv
stos
pop
pop
dec
jg
movsb
jbe
jge
mov
sbb
pop
dec
repz
lcall
fs
cmpsb
push
cmp
add
mov
mov
mov
out
mov
stos
aad
js
and
sub
fisttps
cmp
pop
add
pop
ret
push
xor
xor
call
pushf
xor
in
or
xor
mov
leave
test
add
mov
call
out
test
dec
inc
add
in
push
inc
sbb
and
adc
insb
loopne
mov
jl
hlt
inc
mov
jb
sbb
test
adcb
ss
xchg
sarb
cld
pop
in
pop
int
jg
dec
inc
pop
es
mov
sub
cld
push
lods
and
add
fwait
mov
pop
lcall
cld
ljmp
xchg
test
and
sbb
inc
int
push
std
scas
clc
es
pop
int
jne
cltd
adc
sti
cmp
mov
cmpsb
push
clc
lcall
fists
inc
fwait
inc
cmpsb
insl
fisttpll
lahf
adc
push
inc
lods
stc
adc
jle
lea
arpl
test
adc
sub
adc
ja
aaa
push
iret
jns
dec
imul
adc
push
xor
nop
sbb
or
add
cmp
mov
scas
cli
lahf
mov
jmp
adc
testb
jne
aas
inc
xchg
mov
mov
jnp
insb
nop
out
pxor
ja
je
adc
stos
aas
xorb
pushf
into
pop
stos
mov
out
dec
or
dec
cld
div
ss
jl
adc
addr16
pushf
test
ret
out
pusha
pop
xor
adc
add
popa
nop
std
lods
test
popf
gs
popa
out
cli
pop
push
testb
js
pop
xor
aas
mov
xor
insl
mov
pusha
xor
xchg
mov
xor
call
dec
call
inc
enter
inc
lret
insb
dec
sbb
cmpb
xchg
dec
jmp
and
aaa
inc
aad
pop
push
ret
xlat
pushl
pop
iret
cmpl
outsl
mov
dec
pop
sbb
nop
pop
filds
xchg
notl
push
mov
fs
out
fwait
icebp
outsl
xchg
xor
mov
jmp
rcrb
cld
decl
push
dec
pop
add
cmp
sbb
jne
mov
sub
push
xchg
or
inc
add
fidivrs
pop
add
push
adc
xlat
scas
mov
xchg
xchg
icebp
xchg
cmp
inc
mov
inc
push
scas
push
push
dec
imul
pushl
push
dec
jl
iret
xor
bswap
mov
stos
cwtl
mov
insb
sbb
inc
cli
aas
call
loopne
inc
xor
xchg
test
sub
insl
jg
dec
mov
call
test
jb
jge
cmpl
mov
inc
out
cmp
jmp
into
je
fistps
jl
adc
push
pop
mov
pop
sahf
inc
xor
fcmove
ja
xchg
dec
shrb
dec
stos
scas
xchg
repz
jl
and
je
jp
fsubrp
fnsave
sahf
dec
cmp
jns
mov
dec
push
add
ss
sub
roll
mov
add
ljmp
fimuls
movsl
jl
jp
add
mov
rcll
sbb
mov
aaa
xchg
enter
cli
and
popa
clc
xchg
inc
cmpb
mov
shlb
lds
ljmp
mov
clc
cs
lahf
push
adc
shlb
push
ja
and
xchg
xchg
enter
mov
add
add
mov
mov
and
das
adc
ds
pusha
mov
sahf
jle
pushl
jnp
dec
fdivs
js
jns
outsl
insb
int3
dec
lea
push
out
pop
js
sbb
pusha
mov
ja
push
mov
lock
cli
push
inc
cmc
je
or
fidivl
insb
std
inc
scas
mov
cmp
dec
fidivrl
aas
jle
cltd
and
dec
push
inc
mov
jo
mov
decl
pop
insl
mov
push
and
pop
addr16
push
adc
insb
mov
popf
inc
adc
jmp
mov
mov
dec
sub
movsb
into
das
add
adcb
pop
and
jno
dec
push
jge
popa
adc
jmp
push
int3
cmp
jle
mov
das
push
or
daa
and
fs
sub
and
pop
addr16
dec
ficomps
mov
fisubrs
cmp
aam
sbb
aam
bound
insl
fisttps
jge
mov
nop
mov
dec
push
jmp
ljmp
out
mov
mov
xor
pop
test
or
sbb
xor
out
int3
popf
pop
push
xor
filds
mov
push
aas
mov
cld
into
push
lods
mov
std
decl
jne
out
push
sbb
sbb
sbb
decl
jne
insb
pop
repz
int3
mov
incl
jmp
aas
test
or
es
adc
pop
inc
test
call
lock
mov
pop
mov
mov
pusha
insl
in
sar
out
mov
imul
rorb
arpl
lock
test
mov
inc
aaa
mov
add
cmp
out
xchg
mov
or
call
das
cli
js
push
dec
or
scas
sbb
cltd
xlat
or
dec
sub
push
pop
outsb
les
ja
lods
cltd
xor
pop
sbb
sub
mov
and
fdivp
xchg
jmp
mov
arpl
xchg
fisttpll
pop
jmp
ljmp
jge
es
fstpl
std
or
and
inc
rclb
out
sub
test
test
ljmp
les
outsb
jg
cltd
fisubrl
cmp
sub
orl
pop
mov
in
incl
scas
popa
mov
add
pop
dec
int3
mov
icebp
and
mov
decl
push
xchg
inc
lea
cmp
scas
inc
inc
pushl
lods
dec
pop
outsb
push
fiaddl
jb
imul
adc
add
pop
jle
sbbl
dec
mov
aas
xchg
xor
xchg
aam
pop
vandpd
jo
mov
aad
cmp
sbb
ljmp
xor
and
jmp
sub
loop
push
bound
loop
jb
mov
mov
and
decl
sbb
jb
repnz
cmpsl
mov
test
idiv
inc
jb
cmp
mov
mov
push
push
xchg
int
les
aam
scas
or
jae
add
adc
daa
cmpb
mov
mov
mov
xor
lock
incl
mov
popa
cmp
mov
add
fcoms
fprem
ljmp
sahf
adc
pop
cli
test
xchg
icebp
fildll
push
push
cltd
pop
dec
sbb
ss
int3
mov
add
sti
mov
rol
ficoms
daa
sbb
xor
out
out
jmp
and
mov
pop
push
adc
insl
lcall
imul
xor
or
popf
cmpsb
xchg
inc
aas
or
decl
dec
enter
je
test
cmp
fdiv
mov
dec
xchg
and
imulb
fwait
aaa
in
fildll
mov
pop
scas
xor
inc
imul
inc
mov
mov
push
pop
xchg
fdivrp
jle
mov
lcall
sub
push
cmpsl
and
mov
pusha
lods
adc
sbb
add
pop
sub
jno
das
mov
xchg
data16
outsb
loop
push
aaa
cmp
repz
inc
test
mov
lea
int3
pop
xchg
jl
test
mov
push
jno
dec
jne
dec
call
push
je
xor
fsubl
or
inc
cld
sbb
lods
mov
lcall
pop
repz
icebp
mov
jbe
and
and
test
mov
mov
or
mov
mov
orb
arpl
add
movsl
scas
xor
lcall
lahf
mov
fisubrs
inc
mov
sub
xchg
mov
arpl
mov
mov
addr16
out
pop
fdivrl
pop
repz
loopne
call
sbb
adc
jbe
cs
call
cltd
push
adc
adc
jmp
shrb
lods
clc
sub
sub
movb
mov
ss
adc
or
mov
aas
pop
into
cmp
mov
mov
sahf
lea
scas
sub
or
leave
out
mov
call
cmp
mov
adc
imulb
pop
mov
adc
leave
shll
rclb
shrb
out
popa
mov
lods
jle
jle
mov
scas
rorl
mov
ljmp
insl
es
test
mov
out
pop
call
hlt
cltd
scas
imul
push
dec
in
ret
incl
mov
inc
sbb
es
inc
data16
bound
stos
mov
sbb
xchg
stc
clc
out
ss
jne
dec
and
jnp
jl
inc
and
mov
mov
inc
xchg
adc
aas
dec
push
mov
sub
lahf
pop
mov
jb
movsl
adc
jecxz
adc
xchg
stc
mov
sbb
cli
jg
out
in
push
push
mov
dec
ret
imulb
xchg
test
das
into
xchg
fcmovb
fiadds
add
aas
mov
scas
into
imul
retw
cmpsl
sbb
loopne
push
and
mov
jle
push
into
or
rol
gs
gs
ds
and
jne
push
mov
inc
xor
inc
sbb
mov
push
outsb
sbb
lds
pop
adc
xor
add
fstpt
push
and
cs
lock
std
shlb
ret
jnp
mov
mov
stc
fcomp
and
cmp
icebp
mov
and
fwait
mov
and
mov
mov
ljmp
aad
dec
sbb
xchg
sub
sti
ljmp
lcall
rolb
sbb
mov
add
fldl
inc
fwait
call
cmp
test
repnz
dec
jns
push
repz
jmp
xchg
ds
mov
shll
mov
pop
je
add
or
push
sti
nop
xchg
rol
push
adc
push
sahf
rcl
push
push
in
jmp
call
push
cmp
jl
mov
dec
cs
scas
ret
push
lret
rclb
jo
hlt
mov
or
cld
pop
mov
xor
or
push
scas
pushl
insb
jbe
ds
mov
lret
cwtl
incl
cmpsl
into
lds
dec
jae,pt
cmp
sbb
insl
mov
lahf
into
sbb
mov
xchg
jmp
repz
mov
mov
mov
mov
cltd
lcall
daa
adc
pcmpeqd
lds
dec
add
push
cmpsb
or
mov
mov
mov
push
dec
jne
hlt
es
inc
dec
test
dec
out
add
jne
fbld
out
rorb
int3
mov
add
loop
jecxz
push
in
js
into
std
in
mov
outsb
mov
and
into
jmp
mov
adc
jecxz
inc
ror
cmp
call
pop
mov
sub
sub
push
xor
push
lock
inc
mov
add
aas
inc
insb
iret
jle
push
cmp
and
cmpsb
cmp
mov
lods
xor
test
jle
loopne
into
dec
packuswb
mov
fiadds
push
mov
std
xchg
adc
push
dec
cmp
jecxz
add
test
xchg
cld
jg
dec
lods
gs
jge
xlat
ret
or
fcomip
jg
out
cld
test
mov
add
xchg
scas
mov
pop
and
into
nop
mov
push
icebp
lcall
add
iret
adc
mov
jge
call
out
push
push
xor
and
xor
sub
pop
aas
push
icebp
jmp
mov
jne
xor
mov
jnp
xor
adc
or
xchg
jmp
sbb
outsb
add
out
dec
mov
sbb
mov
cld
jmp
pop
ret
movb
mov
insl
and
jmp
xor
cltd
pop
call
dec
cmp
sub
lods
or
ret
and
pop
das
lods
xor
push
lock
incl
vpaddd
adc
in
xor
cmp
mov
loopne
pushf
out
into
ret
dec
jo
out
and
xlat
ret
mov
jle
lcall
mov
cmc
or
es
divb
cmp
fildll
adc
sbb
mov
aaa
pop
jp
cmpsb
decl
stc
xchg
popa
adc
lret
mov
pusha
jmp
outsb
and
cmp
mov
sbb
clc
or
pop
and
out
fidivs
imul
scas
sbb
adc
es
cmpl
filds
outsb
aam
dec
jns
cmpsb
sub
stos
jmp
cmp
sbb
mov
inc
push
lods
leave
in
cmpsb
mov
lock
sarb
mov
sbb
cli
add
in
cs
inc
pop
mov
jg
std
pop
cs
jl
lock
pop
imul
sub
mov
insb
xlat
and
mov
mov
insb
mov
jl
push
imul
not
loop
push
jle
adc
lret
xor
add
adc
cmp
cmp
ja
or
mov
std
popf
shlb
add
adc
rcll
mov
dec
pop
and
push
pop
cld
adc
cld
or
pop
es
xor
jb
jle
or
decl
xor
mov
or
inc
cltd
mov
sbb
dec
adc
out
jg
cmp
or
pop
mov
inc
push
test
cmc
pop
jo
sub
mov
inc
pop
das
jle
jno
es
ljmp
inc
xchg
push
cltd
pop
or
addr16
mov
cmp
jl
or
mov
out
clc
incl
insb
jmp
push
mov
pop
push
pop
push
scas
mov
test
and
clc
outsl
movsb
xchg
psrlq
test
adc
popf
xor
pop
adc
adc
out
cmp
aaa
cld
fwait
dec
lea
push
or
scas
xor
sahf
in
out
decb
push
clc
lcall
cld
andl
mov
push
sbb
mov
mov
call
push
cs
xor
mov
sub
popf
cwtl
and
and
sti
je
cmpsb
add
mov
pop
cmpsb
sbb
xchg
mulb
dec
dec
in
or
adc
mov
xchg
and
or
mov
cmp
push
lods
ljmp
sbb
cld
sub
or
mov
fisubrl
or
fistpll
pop
push
mov
divb
icebp
pop
lcall
inc
cld
loopne
xchg
sti
sub
out
cli
sub
mov
lcall
scas
add
fs
enter
pcmpeqb
jb,pn
cli
jge
pusha
xchg
imul
loopne
lret
outsb
mov
sub
idiv
loopne
cmp
hlt
sbb
sti
inc
outsl
sub
jle
popa
push
inc
icebp
in
jle
and
add
xor
pushl
sub
and
int
push
cltd
in
subb
pop
cmpsb
addr16
mov
imul
lock
adc
int3
mov
pop
lahf
es
ja
pop
icebp
add
bound
pop
jb
cli
es
lock
jbe
mov
std
pusha
lret
jl
call
push
test
add
add
jmp
adc
test
pop
les
inc
add
out
out
out
scas
mov
inc
icebp
sarl
setl
sbb
mov
and
jg
out
inc
aad
gs
repnz
fwait
mov
cmc
cmpsb
adc
xor
lock
jmp
jecxz
xchg
std
rcrb
and
mov
xchg
xchg
lods
imul
sbb
out
ds
dec
out
xor
xchg
xor
or
mov
ds
shrb
ret
outsl
inc
mov
mov
sub
movb
and
push
fidivs
xor
sbb
inc
das
xchg
ret
mov
imul
sbb
pop
xor
pushf
xchg
lret
mov
mov
aam
jno
cmc
das
out
pop
sbb
sub
in
lcall
outsl
lds
cmp
ret
testl
hlt
and
jmp
xor
mov
mov
adc
pop
mov
pop
mov
pop
rorl
ss
out
mov
push
jle
aas
daa
xor
xlat
out
fs
mov
out
lods
je
mov
fisubrs
pop
push
lods
das
lea
mov
loopne
stos
sahf
in
out
inc
cmp
xchg
xor
push
xor
outsl
sbb
jg
sbb
mov
hlt
and
out
add
jbe
int
sbb
xor
adc
xorb
cmpsb
repz
jnp
scas
lods
dec
cmpl
xchg
xchg
fldcw
inc
mov
mov
loope
in
or
mov
sub
movsl
outsb
lock
sahf
jmp
push
out
fwait
inc
xlat
dec
loop
movsb
push
cwtl
dec
es
and
push
jnp
out
call
ljmp
mov
or
fldl
lret
jp
mov
cmp
inc
loope
adc
int
mov
loop
popf
add
inc
push
sarb
cmp
test
or
and
fucom
jmp
or
stc
int3
sub
pop
add
cwtl
mov
sub
dec
std
jg
popf
stos
xchg
ss
out
cmp
cmpsb
add
rolb
mov
out
stc
test
hlt
cmp
ror
add
int
aam
fcmove
xor
sbb
loope
dec
ds
cmp
loope
mov
mov
fisubl
fdivrp
xor
sbb
inc
lret
aas
mov
cmpsb
cmpsb
mov
gs
les
insl
out
cs
ret
popf
xor
fidivl
out
in
cmp
or
mov
in
or
fwait
insb
sahf
int
and
cmp
and
or
cld
aaa
jg
roll
jae,pn
or
popa
fcmovb
adc
out
pop
dec
out
sahf
call
lret
pop
sbbb
adc
cli
out
sub
mov
and
ljmp
ja
push
dec
lcall
jecxz
lret
mov
jl
or
or
das
jb
pop
add
or
jge
ss
cld
add
pop
cmpsb
jne
lods
fildll
adc
xchg
ret
or
mov
cmpsb
repnz
je
inc
add
lock
mov
mov
and
sub
addr16
push
rcll
int
icebp
jne,pn
iret
out
insb
cld
pop
dec
call
popa
out
lock
sahf
jmp
hlt
push
cmp
aaa
mov
adcb
mov
into
idivb
lods
test
ja
clc
and
movsb
aas
fdivl
stos
psubq
push
xchg
outsl
jle
fwait
xabort
out
cmpsb
fstpl
inc
stos
loopne
hlt
lret
sub
les
push
and
mov
mov
int3
gs
mov
mov
and
sbb
pushf
jle
inc
les
data16
cld
pop
outsl
mov
cmp
inc
sti
int3
adc
cmpsl
test
aas
imul
int3
sbb
push
sub
cmpsl
movsl
out
adc
pushf
in
xchg
hlt
lahf
test
mov
testl
mov
and
jl
adc
test
outsl
pop
xchg
adc
dec
push
js
mov
xor
je
daa
popl
dec
xor
ds
jmp
loopne
cmc
fwait
je
inc
loope
jne
pop
sub
jp
loop
add
repz
jp
jle
jle
aas
pusha
cld
sub
sbb
mov
fistps
cmp
xchg
cmp
mov
imul
jns
pop
pop
pop
int3
cmpsb
gs
xor
scas
ja
das
and
gs
dec
ss
hlt
inc
sbbb
jp
mov
mov
ja
mov
push
cmp
cli
jmp
sahf
inc
imull
test
push
xchg
mov
sub
aas
into
icebp
xchg
js
sub
jbe
xor
push
outsl
push
enter
mov
sbb
push
mov
test
mov
sbb
dec
mov
dec
lret
js,pt
loope
rcrl
ds
or
cli
leave
sarb
mov
movsb
out
mov
ss
cs
cld
pop
jne
mov
lock
add
pop
insl
pop
shll
test
dec
iret
cmp
dec
ljmp
imull
mov
cmp
adc
add
call
ret
lock
mov
aas
mov
sbb
aam
adc
jne
cmc
adc
push
inc
and
fs
mov
call
add
or
sbb
addr16
ret
aaa
loop
xchg
push
popf
cmp
enter
xchg
push
sub
push
rcll
enter
rcrb
add
pop
outsb
aaa
push
stos
add
add
mov
mov
lea
shlb
sbb
mov
mulb
int
lcall
movsb
cltd
ljmp
adc
mov
and
adc
int3
mov
lret
test
jle
xchg
mov
sbb
push
xchg
scas
xlat
mov
push
lds
or
and
sub
mov
xor
sub
lods
add
jg
testb
fimuls
lea
pop
scas
add
mov
gs
lcall
mov
pop
lods
fidivs
out
pop
mov
stos
imul
jno
inc
dec
cmp
daa
clc
pop
daa
cmp
insb
popa
mov
je
cld
lods
adc
cmovl
push
outsl
sbb
dec
movsb
jbe
decb
and
and
rorb
sbb
shrd
xor
push
int
std
jmp
dec
js
js
pop
fdivrl
iret
popf
mov
and
pop
outsl
icebp
sti
test
push
dec
or
pop
scas
fistpll
xchg
das
adc
and
mov
repz
adcb
inc
jmp
movsb
mov
xor
popf
mov
pop
mov
add
fiadds
mov
mov
sahf
ret
decl
cmp
dec
mov
filds
dec
lret
jno
cmp
stos
and
adc
ret
dec
inc
cmpsb
and
imul
ja
and
fs
pusha
ror
mov
pop
mov
sbb
jmp
jmp
jg
scas
in
scas
push
iret
scas
xor
inc
call
insb
sub
or
xor
jnp
es
test
lahf
dec
dec
push
inc
dec
jmp
or
in
mov
mov
inc
mov
mov
pop
adc
inc
cmpsb
mov
lds
xchg
fimuls
and
cmpsl
std
ud0
push
cltd
jae
scas
or
adc
divb
dec
movsl
dec
mov
dec
mov
jns
test
dec
out
aam
into
mov
jbe
sbb
mov
jecxz
mov
cmp
lcall
pop
negl
enter
fidivrl
imul
or
decl
arpl
or
mov
mov
fs
jbe
addr16
fwait
iret
mov
dec
pop
add
cwtl
cltd
sbb
jno
outsb
mov
mov
pop
push
or
scas
ret
ljmp
inc
sub
cmpsl
xor
dec
and
add
out
or
jg
loope
or
daa
fs
jmp
stos
sub
xor
mov
push
mov
pop
jl
popa
dec
outsb
push
jo
pop
mov
jnp
and
pop
bound
add
or
pushl
daa
js
dec
jnp
outsb
adc
mov
jg
jns
ja
pop
mov
ret
bound
cmp
or
and
pop
mov
adc
daa
into
iret
test
jmp
adc
xchg
push
push
add
xor
xlat
mov
lock
lock
outsl
and
fisttps
sub
inc
rcl
add
xchg
dec
cmpsl
call
xlat
dec
scas
stc
adc
or
bound
out
mov
adc
call
scas
lds
out
fwait
arpl
fdivrl
mov
xchg
bound
call
test
repz
andl
or
jle
enter
mov
std
pop
adc
mov
cmpsl
pop
push
cmp
push
dec
jp
mov
pop
icebp
cmp
call
scas
fiaddl
sub
rolb
mov
insb
imulb
mov
aam
daa
data16
sbb
cmp
push
adcb
stos
mov
in
sarl
dec
es
jp,pn
mov
mov
xor
inc
cmp
in
popf
mov
icebp
lods
pushf
test
lret
ret
push
and
das
add
xchg
pusha
xchg
stos
jbe
cmp
movsb
aaa
jne
add
push
jne
jo
aad
in
or
cmp
rdmsr
data16
icebp
aad
int3
xlat
mov
lods
pop
inc
xor
call
adc
push
push
dec
cs
das
shlb
mov
mov
lods
ficomps
push
pop
mov
and
and
mov
add
and
dec
and
mov
add
mov
sub
mov
mov
enter
jo
ljmp
add
xor
sarl
inc
es
push
xchg
inc
lcall
cld
pop
jns
lret
sahf
ds
mov
mov
popf
push
inc
loop
mov
inc
mov
jg
decl
inc
cmc
jle
arpl
inc
xchg
movl
sbbb
dec
mov
aam
mov
pusha
lds
dec
testl
divb
jns
cmp
std
add
xchg
out
dec
xchg
cs
sbb
cmp
inc
std
jg
jbe
loope
xor
add
pop
adc
push
shlb
xor
in
into
add
outsb
daa
mov
insl
movsl
pop
out
adc
das
jp
mov
jmp
and
in
mov
mov
ljmp
xchg
mov
dec
neg
pop
daa
imul
lcall
adc
add
pop
jo
cs
inc
xchg
cs
xchg
jmp
insl
or
ljmp
negb
movsb
fsubs
and
out
out
lods
and
cmp
sbb
fdivrl
test
xchg
push
xor
clc
mov
scas
and
pop
ret
pop
incb
xchg
mov
lea
inc
pop
inc
push
std
lahf
and
xchg
pop
mov
gs
outsl
fwait
add
sarl
lcall
mov
sbb
jno
in
sub
mov
push
adc
mov
or
mov
cmp
mov
nop
pop
cli
xor
fidivs
scas
jbe
les
push
jno
push
push
inc
adc
mov
mov
ror
mov
xchg
mov
aaa
adc
cwtl
dec
mov
ret
fs
add
push
idiv
pushl
cmp
xor
adc
mov
popa
lahf
xor
popa
cwtl
ja
pop
mov
mov
cmp
pushf
and
les
xchg
rcrb
dec
fstps
mov
pusha
mov
clc
mov
fs
add
les
mov
ja
mov
das
fdivrs
popf
loopne
dec
ficomps
or
cmp
jns
rol
inc
pop
jns
pop
jle
outsb
rcrl
dec
push
mov
push
stc
xor
dec
ljmp
jnp
dec
ljmp
cli
adc
jns,pn
cwtl
jge
pop
cmpsl
rcrl
xchg
fistps
cmp
add
pop
scas
fidivrl
jg
rep
cmp
mov
pop
test
cmp
insb
jmp
js
movntps
pop
aad
lea
push
mov
adc
hlt
incl
call
pop
mov
jmp
std
jg
insl
pop
imulb
xchg
roll
mov
ret
adcl
or
adc
sahf
mov
cs
jl
out
cmp
mov
or
adc
jmp
rorb
xchg
push
jo
lds
icebp
inc
cmpb
jp
lcall
jecxz
and
mov
dec
inc
rsqrtps
popl
loopne
add
jo
outsl
push
cmpsl
or
dec
mov
shll
xchg
movsl
sbb
incl
ss
xchg
jg
sbb
cli
push
lods
ds
rorl
adc
pop
js
jg
jp
jno
ret
push
inc
push
je
loope
cmp
loope
mov
and
lods
stos
ficoml
push
je
insl
loop
and
add
adc
cmp
stc
je
dec
jg
mov
lods
out
pop
fisubrs
and
clc
mov
fldenv
out
xchg
cmp
push
cmp
stos
mov
push
sub
sbb
adc
mov
lods
push
pop
mov
add
and
icebp
sbb
push
mov
push
pushf
shll
cli
mov
push
or
fidivs
inc
addb
out
push
push
daa
into
or
scas
popa
cmc
add
mov
imul
mov
and
lea
out
push
ret
outsb
push
xor
inc
fildl
loopne
xor
cmpsb
cmp
push
sti
sahf
ljmp
fisttpll
mov
mulb
data16
push
pop
decl
jle
jmp
int3
jb
ss
je
pop
adc
push
push
pop
data16
ljmp
stos
xor
outsl
stc
popa
or
add
out
jne
hlt
xchg
and
mov
jno
pop
mov
lcall
imul
xchg
cmovo
inc
xor
leave
lods
es
fcomip
dec
pop
mov
imul
out
pop
and
jmp
xor
nop
or
movsb
inc
out
push
mov
jae
lock
inc
pop
lods
xchg
sub
pop
jmp
out
xor
dec
and
cmpsl
xor
dec
movb
pop
mov
xor
incl
icebp
dec
sbb
pushf
clc
fs
cmp
movsb
pusha
add
das
lcall
lds
or
mov
inc
inc
xchg
dec
mov
mov
stc
cmpsb
cmp
and
mov
adc
mov
test
push
pop
enter
fwait
pop
mov
and
cmp
jno
sub
scas
movsb
push
mov
mov
imul
add
pushl
es
adc
xor
movsl
daa
or
push
incl
dec
mov
or
outsb
fcomps
movsb
and
out
cmp
fs
or
outsb
xchg
push
fnstsw
mov
and
sbb
dec
cli
jg
ret
mov
mov
ret
mov
xor
insb
push
ret
push
sbb
mov
dec
or
hlt
dec
jbe
ljmp
push
test
hlt
movsb
xor
ror
sbb
icebp
outsl
add
dec
pop
mov
fnsave
pop
jge
dec
lds
mov
pop
mov
mov
in
adc
test
or
out
leave
mov
sbb
sbb
xchg
xchg
mov
jle
pop
inc
and
cld
pop
cltd
clc
or
jl
out
adc
adc
push
add
lret
cmp
push
incl
push
stc
pop
sub
add
data16
xchg
popf
fisubrs
std
inc
or
jg
das
in
jmp
fists
es
mov
iret
mov
lock
mov
loop
or
scas
jnp
jnp
fisttps
cmp
or
in
pusha
push
jns
push
out
dec
pop
dec
int
mov
clc
lea
ljmp
iret
nop
inc
xchg
decl
or
add
jp
mov
push
jnp
dec
xor
and
jge
mov
jge
xchg
dec
cli
cmpsb
daa
gs
and
or
call
mov
hlt
aad
stos
mov
or
and
filds
jo
add
sub
mov
add
mov
incb
scas
pop
mov
mov
dec
loope
in
or
das
push
icebp
nop
push
pop
mov
sti
mov
mov
sub
scas
pusha
shll
xchg
jp
add
pop
cs
lcall
mov
mov
mov
dec
test
pop
shrl
add
test
lock
dec
shll
push
out
hlt
adc
sub
ljmp
mov
cmp
cmp
subb
push
stos
loop
lds
mov
or
add
rorb
push
cmp
lcall
pop
cmpsb
jl
jg
bound
pop
ror
filds
add
adc
in
outsb
inc
cmpsb
inc
cmpsl
cmp
lcall
les
mov
jg
jmp
cmpsl
sub
data16
stos
adc
jp
add
lcall
incl
into
mov
pop
scas
ret
dec
jbe
dec
mov
test
jne
loop
xor
mov
aad
scas
or
cmpsb
decl
push
outsl
or
inc
loopne
xchg
dec
pop
jne
push
cwtl
ds
sti
xchg
out
jg
mov
and
and
cmp
jecxz
adc
cmp
add
sub
inc
rorl
push
push
and
in
std
pop
dec
inc
test
idiv
mov
jb
je
into
add
lds
jo
xchg
jne
xorl
jl
xor
decl
xchg
out
inc
dec
cwtl
dec
mov
xorl
adc
push
add
cmpl
or
push
testb
data16
test
add
js
push
loope
mov
jmp
int
es
push
mov
sub
std
daa
lcall
pushl
mov
xor
jp
push
stos
cli
dec
les
pop
int
push
xor
dec
push
inc
cli
and
cltd
test
dec
loop
mov
pop
nop
add
and
push
lods
push
jae
cwtl
cmp
dec
mov
nop
mov
push
jbe
jmp
into
sti
outsb
out
mov
fwait
or
loop
je
mov
mov
mov
shl
mov
sub
sbbb
popf
push
aam
adc
ficomps
pop
rorl
pop
sub
arpl
cwtl
xor
sarb
je
push
leave
cmp
xchg
dec
rclb
imul
dec
out
cmc
mov
pop
mov
and
subb
sub
add
xor
ret
pop
mov
lcall
push
sbb
and
lcall
mov
sbb
daa
mov
mov
stos
mov
cmp
xor
test
outsb
add
mov
js
xor
jb
dec
mov
adc
ljmp
add
lds
cmpsl
das
mov
scas
add
dec
push
imul
mov
pop
stos
das
sbb
dec
jecxz
xchg
movsl
jne
mov
push
inc
pushl
and
fdivp
add
insb
call
lds
in
decl
fadds
mov
mov
test
jo
mov
ja
pushl
mov
sbb
pop
pop
mov
pop
mov
es
into
jecxz
popf
inc
decl
mov
cld
sbb
hlt
addl
fwait
sbbb
in
hlt
lcall
sbb
pop
xor
and
and
inc
push
iret
or
dec
xor
dec
adc
cmp
sub
test
hlt
pop
or
mov
fsubs
adc
push
pmaddwd
scas
jb
out
inc
pop
inc
and
push
fisubs
nop
in
mov
fbld
push
mov
fcoms
xchg
xchg
adc
jbe
cmpsb
add
call
addb
pop
adc
cld
jg
scas
inc
ljmp
fsts
sbb
and
sbbl
dec
dec
in
cmpsl
addr16
shr
pop
outsb
fstl
adc
arpl
pop
xor
push
fdivs
dec
dec
idivl
sti
fwait
sub
inc
aas
out
push
dec
aaa
hlt
dec
fcoml
jg
lds
pop
daa
imul
push
cld
inc
es
std
push
into
pop
daa
js
out
hlt
fs
popa
call
push
ljmp
pop
and
inc
sti
std
pop
adc
daa
dec
out
fldl
push
rol
jbe
jg
mov
dec
dec
mov
loopne
div
cmc
insl
add
inc
add
dec
jne
mov
add
jl
aam
inc
not
out
sub
call
push
push
mov
scas
push
push
ljmp
es
ror
or
decl
adc
daa
gs
pop
pusha
mov
jae
inc
lahf
pop
add
decb
pop
adc
sahf
aas
cmp
inc
cmpsb
xchg
inc
jle
call
mov
jp
into
push
mov
inc
aaa
jb
cli
ljmp
ljmp
add
or
fcoml
ljmp
mov
into
mov
dec
pop
dec
push
mov
jno
ret
and
fwait
push
mov
outsb
sbb
push
insb
adc
lea
popf
mov
mov
mov
in
adc
sbb
loop
mov
es
shr
ljmp
pop
dec
xchg
sar
jmp
jp
pop
dec
stc
pop
or
call
ljmp
gs
shll
or
push
sbb
mov
mov
mov
sub
cmp
out
int3
cmpsl
stos
mov
jge
xchg
add
mov
fbld
popa
clc
and
push
mov
loop
data16
adc
ds
ljmp
sbb
lock
mov
jg
mov
std
dec
dec
cmpb
outsb
cltd
add
mov
mov
pop
dec
inc
pusha
sti
call
int
daa
rorl
nop
aaa
push
fdivrl
dec
std
push
inc
cmp
punpckhdq
mov
je
and
inc
inc
hlt
mov
jbe
xor
call
subb
dec
and
xor
jg
xor
test
iretw
xor
dec
mov
clc
adc
jmp
test
sub
das
and
dec
or
jbe
pushl
mov
mov
popl
sbb
gs
test
sub
mov
outsl
insb
inc
ret
ret
push
mov
lret
jmp
ret
mov
mov
arpl
or
push
fistl
cltd
loopne
fidivs
nop
ljmp
fwait
push
rolb
mov
push
jg
mov
out
fwait
ret
into
cwtl
pop
das
dec
out
sbb
stos
mov
popf
jle
mov
cmp
maxps
out
test
movsb
push
jmp
test
fstl
add
cmp
pop
mov
sub
pushl
out
movsl
sub
clc
lcall
lcall
faddp
popf
shl
mov
push
iret
movaps
outsb
in
das
fnstsw
jne
mov
add
inc
into
xchg
sbb
mov
inc
add
cmp
xor
imul
aaa
jbe
gs
cmpl
das
mov
or
xchg
leave
inc
and
dec
add
sub
xchg
and
sarl
fdivs
or
xor
add
movsl
cmp
lea
cli
fildll
mov
sarl
das
jle
pop
sar
add
sar
xlat
mov
sbb
push
xchg
jb
sub
outsl
out
jno
pusha
xor
popf
mov
popf
outsb
call
ss
fs
mov
je
mov
lods
lret
das
add
cmpsl
sahf
cmp
xlat
ss
push
mov
jle
inc
push
pushf
pop
xchg
cmpb
into
inc
incl
jb
jge
dec
or
mov
imul
adc
or
inc
int3
incb
inc
jo
push
jg
in
inc
out
pusha
sbb
mov
cmpsb
dec
and
fbld
dec
dec
mov
jg
mov
stos
fwait
stc
push
mov
andl
inc
or
xchg
xor
lret
dec
xchg
lock
or
xchg
jmp
jo
repnz
mov
mov
ss
mov
std
mov
mov
jne
cwtl
inc
repnz
or
dec
cmpsb
fwait
lods
sbb
xchg
jg
jge
xchg
ss
dec
out
aad
add
test
inc
pop
into
inc
cmpsl
xor
aaa
dec
lock
xor
into
mov
out
cmp
arpl
xchg
xor
std
addr16
stos
inc
lret
xchg
push
imul
mov
fdivs
jns
std
or
ljmp
rclb
dec
and
test
out
cmpsl
aad
fcomip
cld
mov
test
inc
in
push
dec
rolb
arpl
lods
mov
jg
ljmp
sub
push
add
je
dec
stos
aas
lahf
xor
pop
pop
pop
popa
loopne
and
sub
dec
fmuls
lcall
xchg
loop
ljmp
cwtl
ud0
jg
ficomps
jbe
xor
ret
jns
je
push
fsts
add
jp
mov
add
xchg
mov
xchg
shl
decl
js
sbb
xchg
dec
push
jle
ja
jg
push
jo
cmpsl
outsb
ret
xor
ss
movsb
mov
ss
pop
rcrl
push
push
mov
scas
clc
lcall
js
test
sbb
cli
add
ja
pop
sub
sub
pop
or
out
movsl
ss
cmp
ds
mov
mov
sub
popf
xchg
popf
cltd
sar
fistpll
aaa
mov
stos
ds
xchg
cltd
mov
scas
jp
into
xor
fisubs
adc
add
and
fbld
idivb
imul
inc
cmp
lret
scas
insb
shrl
inc
call
lret
dec
cvttps2pi
sbbl
add
xchg
nop
ret
mov
std
cmpsb
adc
jmp
adc
jae
movsl
das
dec
leave
mov
ljmp
jmp
jp
fsts
or
mov
decl
inc
out
mov
inc
inc
jns
stos
lcall
inc
movsb
push
stc
inc
out
mov
and
xchg
jbe
decl
enter
mov
push
xchg
pusha
adc
stos
out
pop
mov
nop
popa
or
outsl
call
sti
or
or
mov
out
and
lcall
cmp
pusha
pop
bound
cmpsl
mov
mov
and
lea
jmp
call
call
movsl
scas
mov
or
push
aam
or
jmp
sub
xchg
cmc
sbb
lret
arpl
or
movsl
or
subb
mov
xchg
fidivl
out
add
lods
adc
xchg
ret
data16
inc
movsl
hlt
das
mov
xlat
push
sbb
jle
inc
in
mov
cmpsb
test
mov
jbe
aam
negb
push
cmp
jo
or
push
mov
cli
addr16
enter
sysenter
jp
mov
inc
mov
int3
outsl
xchg
pushl
xchg
jo
jnp
mov
fmull
dec
pop
fs
dec
scas
adc
cmpsb
push
lock
push
mov
pop
adc
xchg
fs
cmpsl
push
cmpsb
and
popa
stos
and
lods
or
push
mov
fnstsw
mov
or
push
out
mov
scas
lcall
loopne
and
stos
mov
mov
xchg
mov
push
sbb
mov
loopne
faddl
fidivs
add
pop
push
add
scas
js
dec
lods
pop
pop
jae
cmp
dec
inc
xor
ds
arpl
add
inc
adc
sahf
cmpsb
out
mov
fstl
decb
movsb
sbb
sbb
pusha
roll
test
dec
xchg
scas
pop
sub
arpl
xor
jbe
and
sbbb
lods
stos
es
xlat
lcall
pop
pop
jae
mov
xchg
jo
insb
xor
nop
and
xchg
lock
add
jmp
test
std
out
faddp
in
mov
movsl
into
fcmovne
test
not
stos
push
and
jg
mov
sbb
mov
leave
lds
js
iret
aad
push
adc
testb
cld
sti
incl
lcall
lock
stos
es
dec
into
or
ret
aam
sbb
push
out
je
cld
xchg
stos
mov
mov
mov
in
std
mov
sahf
loopne
mov
cmp
lea
testb
mov
mov
xlat
push
inc
xchg
mov
fwait
scas
mov
inc
mov
outsl
insb
dec
psubb
test
outsb
ss
push
push
jne
xor
popa
mov
pop
xchg
and
scas
mov
lahf
filds
adc
and
pushl
pop
ret
sbb
cs
sub
push
inc
xchg
and
outsb
fidivrs
lcall
sahf
dec
add
clc
and
movsb
jle
mov
ljmp
pushl
call
in
cmp
jp
mov
adc
add
add
lret
inc
cld
mov
pop
and
or
add
or
cmp
xor
insb
call
ja
sub
xor
cmp
sub
fwait
xchg
pop
int3
or
dec
sahf
add
es
dec
outsl
call
inc
js
into
jg
lock
roll
inc
cmp
sbb
and
fildll
pop
mov
ret
cmp
jecxz
jg
rorb
jnp
mov
adc
sbb
inc
out
cmp
out
incl
add
pop
fisubrl
dec
jecxz
gs
xor
push
int
xchg
and
pop
xor
ljmp
into
push
xor
sub
outsb
out
es
daa
jl
and
and
sub
add
decl
mov
cwtl
adc
stos
cmpsb
xchg
stos
gs
push
jmp
fs
dec
xchg
inc
testb
sahf
lock
movl
push
and
sbb
stos
aas
aad
pop
mov
mov
ficompl
pop
or
and
cs
xchg
fldl
mov
fmuls
cltd
cmp
add
repz
and
in
adc
mov
adc
jmp
xchg
daa
push
xor
and
mov
xchg
cmpsb
es
ljmp
jnp
out
test
push
mov
sub
sub
ret
sub
mov
or
pop
mov
add
jg
adc
das
jae
adc
xor
adc
cmp
js
das
inc
rorl
leave
test
xchg
pushl
jle
push
jo
push
inc
jg
adc
cmp
popa
jg
adc
xor
sub
mov
push
inc
cmpsl
adc
rcll
or
clc
popf
lock
in
pop
repz
jle
addl
mov
sti
aaa
adc
xchg
aas
xchg
mov
add
push
out
aam
pop
push
addr16
cmp
outsb
push
popl
dec
push
ficomps
push
loopne
jmp
cmp
add
xchg
lcall
push
jno
je
sar
jg
addr16
add
push
pop
inc
jmp
hlt
mov
push
mov
enter
fnsave
mov
imul
mov
inc
jbe
and
add
lahf
jg
dec
cwtl
filds
jmp
push
xchg
data16
movsb
cmp
xor
enter
or
mov
dec
out
push
mov
lods
pop
mov
test
xchg
adc
xchg
and
adc
pop
jmp
or
pushf
dec
cmp
xor
pop
inc
jno
and
sub
hlt
sub
out
into
stos
mov
xchg
inc
inc
loop
mov
nop
ret
sarl
into
and
cs
subb
mov
jg
pop
sub
je
inc
and
inc
xor
pop
push
das
dec
ss
sub
jg
mov
js
lock
sub
cmp
dec
cmp
sub
jp
sti
incl
push
cmp
pop
aaa
adc
adc
imul
and
cld
sarb
pop
pusha
or
sub
rcl
repz
add
loopne
cld
in
sbb
push
mov
mov
adc
and
sub
nop
sar
test
ljmp
movsl
fcom
fwait
jp
bound
xchg
push
xchg
cli
mov
cwtl
and
out
push
jbe
cltd
repz
sbb
or
xor
and
test
jg
inc
add
in
push
cwtl
jp
test
lea
jnp
int
xchg
add
xor
out
push
inc
cld
sbb
mov
push
fwait
sub
mov
test
cmp
push
les
xchg
shrb
loope
sahf
cs
adc
pusha
sbb
ret
cmp
das
mov
dec
pop
adc
adcb
out
add
or
mov
or
inc
mov
rcl
cmp
inc
xchg
and
pusha
jae
insl
or
mov
jno
decl
mov
test
mov
jle
arpl
jbe
jle
and
pop
cmc
lds
adc
pop
pop
ret
lds
mov
xor
pop
sbb
clc
mov
mov
inc
cmc
add
or
xchg
mov
xchg
xchg
push
xchg
pop
pop
jg
addl
imul
sub
dec
mov
jne
add
pop
inc
inc
dec
inc
adc
dec
inc
loope
mov
pop
rcrb
or
fdivp
call
jle
or
and
pop
inc
mov
cmc
mov
jle
call
inc
pop
cwtl
push
insb
repz
mov
pop
sbb
push
mov
mov
mov
and
aas
sbbl
and
add
sub
daa
icebp
inc
pushl
int
fisubs
sbb
fcomp
inc
add
call
mov
fisubrl
mov
rolb
xor
shlb
and
mov
sbb
iret
ds
and
add
andl
and
js
data16
outsb
repz
sbb
mov
lods
pusha
cwtl
clc
dec
xor
cmpsb
adc
ja
mov
aas
into
adc
cmp
scas
fisttpl
ja
fwait
dec
incl
dec
push
dec
jne
inc
adc
movsl
out
xor
ss
jg
clc
add
fdivs
sub
adc
nop
adc
daa
xor
push
shll
mov
mov
and
mov
jg
test
idivb
sbb
jecxz
xchg
test
imul
cltd
sbb
fstpt
mov
mov
mov
jp
sbb
test
incl
stos
lock
cmp
shlb
ret
or
test
jns
aaa
dec
clc
rcll
loopne
xchg
cmp
mov
xchg
or
stos
xchg
sbb
std
cltd
xchg
imul
scas
paddd
dec
dec
outsb
nop
sti
mov
mov
push
lcall
and
push
push
cmp
fs
imul
xchg
std
movsb
dec
xlat
mov
and
mov
mov
jbe
xchg
mov
jg
mov
les
cmc
sub
mov
mov
decl
data16
xchg
dec
adc
mov
pop
xchg
push
popaw
jo
ud0
clc
outsb
mov
inc
enter
scas
mov
or
test
into
pop
mov
fs
inc
aaa
dec
filds
loope
into
bound
cmp
clc
stos
mov
cld
es
adc
mov
popl
scas
mov
loop
lock
sub
jmp
xchg
mov
bound
mov
pop
xchg
add
pop
pop
hlt
incl
adc
flds
test
mov
into
arpl
pop
sar
jp,pn
mov
cs
push
jbe
fstp
jne
incl
dec
xchg
out
sarb
push
call
push
jnp
pushf
mov
inc
bound
out
xchg
pop
xchg
xchg
pushf
mov
pop
and
cmp
xchg
inc
popfw
cmp
jg
lods
out
daa
fldcw
ss
fstps
outsb
out
test
mov
rorl
mov
xchg
test
out
je
decl
xchg
popf
in
jle
xchg
test
push
mov
mov
or
cmpsl
xchg
call
scas
mov
cmpsb
icebp
iret
test
pop
sysexit
pop
adc
lahf
rclb
subb
inc
pushf
es
xchg
clc
test
jb
inc
add
jb
pop
sbb
xchg
cwtl
test
inc
cltd
adc
and
inc
sub
pusha
icebp
ficompl
ss
or
mov
ljmp
cmp
js
dec
add
rolb
test
lods
mov
clc
fisubrs
xchg
clc
dec
add
push
mov
daa
add
loop
add
push
icebp
aaa
lods
ljmp
mov
push
mov
cmpsb
xchg
inc
cld
add
cmc
push
nop
dec
ret
push
out
call
stc
int3
pop
test
imul
int3
mulb
fnsave
outsl
push
std
lods
test
mov
rorl
inc
mov
pop
jg
inc
mov
inc
cs
xchg
inc
ljmp
jne
fs
les
lret
sbb
in
insl
dec
add
jmp
adc
std
mov
mov
decl
or
inc
adcb
xchg
jle
xor
jns
fisttpll
sbb
in
ljmp
loope
or
sub
dec
mov
ds
popf
or
aas
cld
cs
xor
cmp
sub
daa
pushl
mov
xchg
out
vandps
cmp
mov
adc
push
lret
mov
mov
pop
pop
mov
fisubrl
loope
push
mov
outsl
shll
mov
push
push
ficomps
jg
dec
mov
out
or
in
lcallw
shll
scas
add
xor
fsubp
push
test
mov
xchg
outsl
lds
mov
hlt
jb
pushf
test
leave
jnp
in
bound
into
test
inc
fadd
pop
adcl
or
int3
imul
test
mov
mov
loope
mov
mov
jle
dec
out
lcall
jmp
lcall
iret
je
mov
lcall
push
inc
push
pop
arpl
pop
push
cltd
sub
rclb
stos
aas
cld
mov
out
int3
arpl
add
dec
add
mov
add
daa
pop
or
xor
xchg
and
shlb
push
sahf
call
or
stos
and
dec
ror
inc
mov
pop
and
mov
add
das
cmp
pop
std
adc
popa
iret
ja
inc
leave
les
push
nop
into
repz
scas
jno
jecxz
scas
mov
ss
dec
dec
ljmp
cmpsl
rclb
mov
std
jnp
xor
dec
jns
bound
push
push
mov
data16
loop
loope
sub
lret
mov
mov
jg
dec
or
jp
xchg
or
inc
clc
arpl
rorl
call
jnp
push
xlat
inc
jae
inc
mov
stos
out
movl
incb
push
xor
shrl
into
jae
push
sbb
xchg
pop
sub
mov
xchg
mov
pop
or
jmp
pushl
stos
int
nop
pushf
test
cld
sbb
push
or
sub
jmp
pop
lea
std
ret
ds
pop
out
xor
jbe
push
mov
xchg
jl
add
ljmp
ja
inc
mov
mov
ljmp
aas
mov
jg
jbe
push
push
and
inc
add
cld
repz
mov
adc
and
dec
aam
xchg
gs
shll
inc
cli
stc
loopne
mov
out
jecxz
sub
aas
into
inc
jl
pop
orl
das
pop
add
out
hlt
xor
jecxz
ljmp
shlb
scas
jb
les
cs
mov
rclb
mov
outsl
or
arpl
lock
adc
lret
cmc
xlat
dec
repnz
jno
sar
mov
dec
add
sar
jns
mov
ds
repnz
cs
add
les
sbb
aam
mov
jle
gs
push
mov
cld
cmc
test
icebp
and
mov
stos
pop
mov
aas
scas
sti
shlb
xchg
cmp
inc
adc
into
pop
jle
add
insw
insl
sbb
cld
jg
hlt
lds
dec
faddp
daa
mov
mov
and
inc
cmpsb
dec
xor
scas
cmp
pop
cmp
movsb
cmpsb
pushf
inc
hlt
pop
sub
popf
jns
pop
loopne
inc
and
pcmpgtd
ljmp
mov
mov
xchg
ja
stc
out
pop
hlt
pop
sbbb
dec
scas
add
dec
cltd
and
xor
jnp
ljmp
fsubr
mov
aaa
ffree
or
cltd
xchg
jg
jmp
pop
cli
mov
aad
mov
cs
jmp
xchg
nop
dec
jp
lods
dec
scas
adc
lret
mov
xchg
out
int
mov
jl
iret
in
push
mov
xchg
jae
jg
push
adc
mov
jge
repz
ficomps
jb
lcall
mov
inc
aas
cli
loope
sbb
push
rclb
in
push
pop
add
push
dec
and
jg
es
mov
inc
nop
or
add
fdivrs
sbb
ret
lret
pop
xchg
cld
and
push
ret
aam
out
jge
pop
ja
loop
add
outsb
enter
mov
roll
mov
dec
adc
shrb
into
add
mov
dec
jg
push
jg
out
cmp
jnp
shrl
mov
sub
jl
lock
adc
inc
add
jge
stc
jnp
rorb
popf
push
icebp
decl
push
mov
dec
jno
xorl
pop
cmpsl
test
inc
loope
mov
ficoml
mov
call
jbe
ds
jo
adc
dec
lcall
jo
lods
stos
ret
rcrb
gs
mov
ljmp
push
pop
stos
bound
adc
xor
and
xchg
jmp
mov
out
arpl
xlat
das
es
push
cld
imulb
pushf
outsb
jmp
call
sub
jne
xor
pop
jmp
jo
cltd
push
adc
xor
ret
mov
add
incb
inc
push
jnp
je
cmp
adc
mov
lods
out
out
mov
mov
mov
fst
pop
dec
xchg
lods
adc
pop
test
mov
test
mov
hlt
pop
les
arpl
pop
or
ret
jne
push
aaa
inc
sbb
nop
outsl
adc
into
out
sub
in
cmp
arpl
add
cli
dec
mov
popa
outsl
xchg
cmpsb
shll
pop
sbb
fcmovnb
jg
jne
daa
pop
mov
jb
sub
test
xchg
push
lods
cltd
sub
dec
pop
pop
loope
push
out
lea
push
mov
jb
push
rcrb
clc
or
into
int
pop
jbe
dec
decl
rolb
mov
les
sti
and
ljmp
adcl
push
jo
xchg
addr16
xor
into
xchg
adc
mov
xchg
ljmp
and
add
xor
leave
int3
cld
jg
and
inc
push
xchg
and
enter
xor
aam
int3
popf
and
or
lds
or
idivl
adc
jno
pop
xor
nop
or
imul
pop
bound
dec
aaa
push
sbb
cmp
test
pushl
dec
rcll
push
and
push
in
inc
in
mov
mov
test
decl
lods
xor
mov
push
popa
cmp
xchg
mov
adc
xchg
push
mov
mov
push
dec
cld
jge
mov
push
dec
idivb
jg
add
xor
mov
imul
imul
cmovae
fs
int3
repz
das
cmpsb
repz
es
adc
fnstsw
sahf
cmp
mov
jl
incl
rorl
sub
out
pop
push
lock
dec
mov
xor
adc
mov
call
push
inc
divb
jbe
mov
jg
mov
inc
inc
leave
testb
xchg
aas
repnz
adc
in
js
incl
sti
add
mov
mov
jle
jo
adc
cli
ljmp
mov
pop
into
mov
sub
cmp
cld
test
xchg
inc
sub
xor
into
or
jmp
dec
in
cmpsb
ficomps
notl
pop
insb
mov
imul
adc
mov
xchg
dec
adc
jbe
xorl
shrl
sbb
pop
cs
mov
es
js
mov
call
xchg
mov
aas
and
aam
xchg
call
push
shll
fs
push
adc
xlat
cmpsl
out
test
jmp
pop
push
lret
jns
add
mov
and
inc
out
jl
mov
lea
leave
pop
xchg
sahf
mov
push
mov
sub
repnz
cmp
es
stc
jbe
mov
out
cmpsl
lahf
mov
jle
es
lds
mov
dec
inc
repz
and
or
dec
push
xchg
and
mov
inc
je
push
sbb
push
push
call
lods
push
sbb
cwtl
aam
xchg
dec
pop
cmpsb
stos
mov
fwait
fimuls
sub
fwait
lret
stos
adc
inc
lcall
lea
out
xor
sbb
testb
push
nop
or
dec
cli
pop
adc
cmp
mov
pushf
sub
mov
xchg
fidivrl
mov
pop
call
insb
or
mov
cmp
iret
or
call
push
lcall
add
cmp
cmp
jbe
scas
add
mov
and
pushl
pop
outsb
pop
pop
ja
ss
out
push
movl
inc
mov
mov
fbld
divb
pop
negb
inc
lret
cli
or
and
arpl
es
stos
add
xchg
jmp
repz
push
test
pop
mov
inc
cmp
mov
cli
mov
lret
mov
dec
fmull
xchg
mov
cld
mov
insb
loope
dec
shrb
mov
out
cli
inc
cs
fistpll
push
jo
push
cmc
jp
movsb
aad
ss
out
add
jg
shl
aaa
pop
incl
jbe
pop
mov
inc
inc
rolb
push
xchg
packssdw
jns
mov
cltd
xor
enter
adcl
sahf
or
mov
or
movb
inc
daa
jae
call
hlt
pushl
std
xchg
pop
mov
pushf
lea
xchg
mov
mov
lahf
xorb
in
lcall
jge
inc
je
push
jg
and
adc
dec
sbb
push
sbb
mov
inc
sbb
cmp
in
lcall
out
fnsave
mov
inc
fisttpl
mov
addr16
push
mov
inc
cli
mov
movsb
add
cmpsb
dec
sar
incl
testb
mov
cmp
inc
push
mov
mov
ret
xchg
xorb
lcall
jmp
and
cmp
scas
ret
push
loope
cmp
js
cmpl
inc
xchg
arpl
mov
clc
pushl
imul
imul
test
inc
les
mov
cmpsb
xor
mov
cmc
dec
jns
jp
or
mov
dec
xchg
lret
xor
sub
sarl
test
xchg
rcrl
lock
data16
out
pop
stos
and
cmp
mov
movsl
das
rorl
movsb
lcall
pop
cmp
in
stc
aad
push
ror
outsb
ss
pop
outsb
int3
into
mov
fucomp
mov
movsb
jg
xchg
xchg
mov
inc
in
xchg
shl
stos
cmp
imul
jle
loop
int3
and
andl
pop
outsb
pusha
std
scas
mov
scas
adc
xor
adc
int3
aam
add
out
notb
pop
mov
fdivp
xchg
movsl
push
inc
jmp
insl
xor
es
xchg
adc
imul
in
lea
sub
cmc
stos
test
je
test
mov
mov
mov
pop
iret
in
or
jno
call
sub
imulb
mov
pushl
daa
pop
incb
movsl
mov
dec
jno
xlat
sub
pop
mov
mov
clc
jne
dec
in
sbb
lods
push
cmp
and
sbb
ja
ret
push
mov
push
loopne
jbe
lret
std
out
in
jmp
dec
fcompl
jne
mov
and
or
fisubs
dec
mov
fdivrs
xchg
dec
repz
push
lret
hlt
andl
xchg
inc
inc
ret
out
aaa
xchg
sbb
scas
jg
enter
psllw
test
mov
popl
xchg
fwait
pop
or
push
movsl
jp
fdivrl
pop
fistps
outsb
xor
out
decb
mov
lcall
mov
arpl
lret
leave
mov
cmp
and
xchg
stos
fcomip
movsb
xchg
stos
lods
add
in
mov
stos
inc
add
mov
insl
cmp
add
insl
sarb
out
loop
aad
insl
sub
mov
mov
mov
jne
inc
push
out
add
scas
xchg
pop
imul
or
scas
iret
testb
aaa
jecxz
xchg
xchg
inc
lods
imul
ljmp
mov
pushf
mov
mov
push
inc
test
mov
enter
mov
pushf
out
mov
add
leave
addb
sub
outsb
pop
testb
pop
mov
filds
filds
mov
pop
sbb
mov
stos
cwtl
xor
scas
dec
mov
inc
push
decb
mov
stos
or
add
adc
in
test
aaa
scas
fbld
lds
sub
xor
mov
popa
cld
mov
jbe
xor
mov
test
pop
arpl
sub
scas
clc
lock
mov
inc
fsubrp
lods
cltd
mov
xchg
mov
not
xchg
out
mov
scas
jg
and
push
lods
push
imul
dec
cli
cs
lods
xor
cmp
and
cltd
xchg
push
data16
filds
sahf
inc
pop
inc
push
addr16
ret
sub
add
xor
in
test
cs
enter
pop
inc
push
mov
daa
inc
rcrl
scas
xor
adc
scas
cmpsb
dec
or
push
jo
pop
add
filds
int3
inc
testb
decb
ja
lret
mov
leave
jmp
into
rorb
clc
push
rcl
mov
out
adc
cmpsl
sub
mov
adc
dec
cmp
jp
jecxz
push
popf
mov
lcall
jp
fcomp
mov
mov
cs
or
ret
dec
cmc
icebp
mov
mov
mov
mov
idivb
cmpsb
mulb
mov
mov
data16
lcall
sub
xchg
dec
inc
hlt
les
popf
push
sub
sbb
or
or
push
cmp
cs
into
lret
inc
insw
aam
push
stos
clc
out
mov
jg
rcl
subl
ss
mov
lock
call
fdivrl
xchg
je
mov
cwtl
into
inc
in
lret
pop
inc
mov
jg
dec
out
fldt
out
sahf
mov
jnp
xchg
loopne
or
adc
pop
cmpb
inc
jo
cld
inc
add
mov
movsb
aam
pop
out
scas
cmp
hlt
mov
inc
outsl
fmulp
fstpt
out
imull
loopne
push
out
push
in
test
rolb
shlb
loope
pop
cmp
lods
into
dec
punpcklwd
call
popa
into
cltd
jb
jae
xor
or
cltd
inc
bnd
pop
or
jmp
push
out
mov
pushl
clc
xchg
test
cltd
movsl
mov
hlt
pop
mov
adc
lock
lcall
add
jecxz
mulb
cmpsb
loopne
push
int3
xchg
ds
mov
adc
out
push
sahf
jbe
and
rcrb
mov
cmpsb
xchg
scas
out
lahf
mov
xchg
mov
movsl
xor
mov
or
lret
mov
push
push
in
sbb
mov
pop
testl
lock
ror
mov
aaa
inc
fldt
movsb
mov
dec
loopne
mov
lahf
xchg
mov
into
mov
sub
add
pop
adc
cmpsb
dec
pop
out
push
push
scas
out
inc
loope
push
xlat
dec
or
sahf
add
std
decl
cltd
push
pusha
sti
jne
cmpb
iret
cltd
ds
pop
std
add
je
mov
mov
mov
pop
or
mov
jbe
pop
inc
mov
xchg
inc
out
mov
push
jmp
inc
push
dec
int
loop
mov
mov
pop
std
pop
imul
mov
lods
jns
ret
scas
mov
dec
mov
add
mov
dec
add
sarl
xchg
scas
out
pop
mov
mov
lods
jne
in
dec
out
dec
popf
into
cld
out
mov
pop
mov
nop
mov
testb
xchg
pop
add
sub
xchg
jge
push
loopne
rolb
mov
add
mov
dec
adc
stos
ja
mov
inc
mov
out
hlt
fwait
add
outsl
cmpsb
aas
out
loopne
das
mov
gs
mov
sub
scas
iret
push
adc
and
rol
out
repz
out
fmulp
repz
mov
std
out
shl
jp
xchg
nop
hlt
mov
ljmp
mov
sbb
cltd
mov
add
sub
aas
dec
jl
fidivs
shlb
loop
mov
jbe
inc
cli
rclb
mov
daa
fsub
repnz
add
adc
out
mov
adc
clc
mov
ds
pushl
aad
xor
repz
jbe
push
and
mov
cld
outsl
mov
js
and
lahf
aaa
push
cli
xor
fisubs
andl
scas
repz
out
aam
fnsave
inc
push
inc
sti
mov
into
or
cmp
in
sahf
dec
rcl
inc
movsb
sub
fsub
stos
jecxz
inc
push
xchg
mov
icebp
enter
pop
or
aam
push
cld
hlt
mull
std
aad
dec
sub
lock
push
rolb
loopne
out
mov
dec
sahf
cmpl
gs
movl
adc
fists
sahf
xchg
mov
or
imul
jg
xor
loopne
data16
pop
mov
xchg
cmp
negb
sbb
ud0
clc
cltd
xor
dec
sub
ficoml
sti
test
dec
lock
push
push
mov
cltd
fwait
push
fadd
scas
push
sub
jp
lret
pop
addb
push
mov
lock
push
roll
pop
bound
mov
imul
mov
adc
dec
lock
pop
mov
xsha1
cmpsb
dec
movsb
mov
xchg
mov
inc
mov
fisttps
or
adc
stos
in
adc
jns
mov
call
out
lock
neg
mov
scas
sbb
faddp
pop
add
mov
rorb
mov
mov
inc
add
cld
mov
loope
mov
ret
cmpl
pop
jae
mov
pop
or
mov
xchg
sahf
repnz
inc
loop
fidivs
jge
pop
out
pop
push
aas
inc
add
call
decl
cmpsb
fwait
mov
insl
ficomps
adc
xchg
xchg
ret
cld
aas
mov
dec
cmp
shlb
cmpsl
pop
loope
cmp
repnz
mov
ret
shrb
out
mov
mov
push
clc
jge
std
xchg
idivl
push
fadds
mov
mov
pop
cmpsl
test
pop
ret
out
mov
loopne
movsl
xchg
xlat
sbbl
dec
rcrl
xchg
mov
into
clc
jle
in
xlat
out
mov
and
mov
mov
int
outsb
fmul
std
in
mov
mov
ja
lds
test
icebp
xchg
push
outsb
cmp
push
mov
lcall
imul
nopl
not
mov
mov
mov
scas
hlt
stos
mov
mov
sub
jmp
daa
and
in
mov
inc
into
inc
scas
lret
pop
cld
pop
add
out
pop
sub
push
ljmp
loopne
fistpl
push
dec
jnp
loopne
xor
repz
out
lret
sub
or
ss
mov
cmc
fbld
xchg
mov
jle
test
mov
jo
xchg
in
inc
aas
dec
mov
xchg
push
cmp
arpl
ret
cmpsb
sbb
outsl
lret
xchg
jnp
or
push
mov
ss
stc
add
inc
sub
int3
mov
xchg
adc
sarl
mov
mov
mov
mov
imul
lahf
cli
lcall
in
mov
inc
cwtl
lcall
sbb
dec
out
punpckhdq
mov
mov
jmp
mov
shlb
scas
into
or
mov
xor
cmpsl
addl
xor
ljmp
xor
popa
and
jp
jo
jge
je
pusha
adc
lcall
loop
das
dec
pop
adc
xor
mov
iret
std
out
cmpsl
push
mov
ficoms
jl
mov
enter
dec
pop
inc
imul
jnp
pop
pop
out
jle
jg
lock
ret
cs
xor
cmc
add
cmp
mov
jg
jg
inc
mov
cld
call
clc
je
out
jne
add
push
and
pop
decl
pushf
mov
roll
dec
add
je
push
imul
push
adc
das
pop
mov
push
sar
lcall
sub
mov
push
mov
lds
xchg
lret
iret
adc
fwait
jbe
cmp
sub
xor
dec
test
adc
cmpsb
or
jmp
jns
popa
sti
mov
jl
inc
shlb
hlt
push
out
fidivrl
dec
sti
or
push
inc
decl
mov
icebp
mov
ss
decl
ds
es
sub
insb
inc
clc
jne
into
cltd
movsl
add
dec
mov
add
cli
push
shrb
movsb
icebp
inc
push
fs
push
mov
repnz
into
jnp
out
loop
pop
popa
jg
push
or
lods
data16
mov
clc
xchg
daa
imul
popa
loop
xor
out
aaa
mov
xor
sub
add
or
jg
out
cmpsb
lock
ja
out
inc
cli
addr16
movsl
push
lcall
lock
dec
sahf
lock
adc
sbb
iret
out
push
sbb
mov
pop
add
dec
jp
incl
jmp
jb
and
out
es
out
fmull
inc
pcmpgtb
xor
and
arpl
or
mov
inc
icebp
lea
mov
pop
pusha
ret
push
mov
dec
loopne
dec
cmc
ljmp
push
ss
call
and
lret
mov
int
outsb
push
cmp
or
or
loop
mov
cmpsl
lock
out
inc
jb
push
cmp
call
or
enter
data16
add
cmp
out
lcall
lcall
mov
sub
out
xor
mov
dec
in
cmp
test
es
jmp
or
push
jge
sbbl
mov
stos
dec
jp
or
dec
pop
add
call
sub
out
cmp
arpl
cmpb
xchg
and
mov
call
out
loopne
pop
movsb
add
dec
sti
sub
pop
pop
out
pop
add
pushf
cmp
add
jecxz
arpl
add
add
ljmp
aaa
inc
out
or
into
adc
and
sbb
shrl
decl
mov
xor
negb
jne
fisubrs
lods
out
adc
inc
sbb
movsl
dec
and
out
addr16
aaa
inc
dec
xor
mov
or
dec
loop
addr16
sbb
jmp
ficomps
inc
mov
adcb
push
pop
test
and
fs
test
sbb
xor
mov
mov
cs
add
jg
and
and
data16
xor
test
hlt
sub
push
mov
leave
and
loopne
jbe
mov
push
mov
jmp
lret
push
sti
and
dec
jle
cmc
jmp
adc
shlb
xor
push
cltd
xor
pushl
cmp
adc
add
sbb
xchg
dec
cmp
add
call
add
shll
xor
mov
or
cmpsl
add
sub
into
sbb
lret
stos
jns
push
aaa
inc
scas
adc
push
lcall
out
mulb
out
or
call
xchg
or
xchg
mov
sbb
push
sub
adc
movsl
cmpsb
aas
test
std
mov
ljmp
pop
and
stc
push
pop
inc
js
cmp
lcall
incl
jle
scas
pop
outsb
adc
lea
push
fisubrl
inc
jmp
jns
dec
jae
ds
ja
mov
jns
fnstcw
and
sub
mov
decl
ja
gs
xor
cmpsw
je
xor
pop
pop
adc
inc
adc
nop
xor
call
mov
jnp
sbb
xchg
add
stos
div
stos
test
mov
lds
jg
mov
dec
repnz
and
lea
sub
fs
pop
or
push
mov
pop
pop
iret
popf
jecxz
mov
ja
scas
jp
loop
mov
cwtl
add
inc
ljmp
scas
inc
pop
negb
mov
dec
add
add
xchg
push
outsl
push
and
push
jmp
cmpsl
sub
xchg
xor
ljmp
cmpsb
mov
dec
nop
dec
push
dec
scas
push
jecxz
xchg
mov
clc
inc
int3
mov
inc
add
out
mov
mov
dec
fs
pop
stos
enter
pop
adc
pushl
push
xchg
mov
scas
fidivrl
imul
sub
sbb
mov
mov
xor
mov
mov
ss
xchg
push
in
add
lcall
into
jno,pn
out
xchg
xadd
pop
sub
daa
mov
mov
cld
sub
push
jmp
xorb
enter
and
into
movsb
loopne
xor
test
scas
jg
cmpsb
clc
adc
repnz
and
mov
cmpsb
push
push
adc
mov
push
inc
jl
and
cld
cmp
adc
jns
cld
int
daa
rcll
inc
cs
dec
sbb
xchg
and
data16
ljmp
cli
jns
nop
ss
ds
jb
fwait
mov
dec
les
popa
dec
int3
cmp
lret
incl
je
dec
mov
bound
fcomps
mov
les
imul
mov
scas
and
outsb
pop
ljmp
cli
mov
and
mov
sti
cwtl
out
out
push
pop
std
lods
repz
xchg
sub
pop
popa
pushl
in
sub
sarl
jg
inc
xchg
cmpsl
mov
cmp
mov
inc
jno
sahf
sti
sub
pushl
jb
aas
insl
jle
popa
jp
push
xor
popa
add
js
notb
addr16
incl
dec
adc
aaa
jae
or
fs
js
mov
ret
incl
popa
mov
xchg
sbb
xor
incl
push
imul
sti
xchg
stc
mov
mov
dec
jg
sbb
dec
mov
fsub
jg
aas
jl
xchg
incl
jge
mov
mov
data16
add
mov
lock
xchg
pop
adc
mov
sub
push
out
mov
jg
into
cmp
ds
clc
pop
mov
call
aaa
vpcomuq
outsb
fists
jg
ja
icebp
push
lea
cs
jo
sub
xor
test
test
incl
or
push
inc
adc
inc
hlt
outsb
add
add
dec
mov
div
push
jg
into
or
dec
shll
roll
ljmp
les
xchg
sti
and
pop
jp
mov
or
nop
test
add
dec
or
sbb
les
imul
sub
pop
mov
mov
adc
aaa
mov
sub
push
insl
mov
std
call
loope
jl
and
enter
mov
jo
cli
call
fimuls
popa
sbb
dec
mov
pushl
sbb
popf
loop
outsl
inc
push
fwait
les
xchg
xchg
jle
adc
cmpsl
cmp
sub
cwtl
mov
out
repnz
add
jo
popf
in
xor
cmp
xchg
or
pop
jmp
fsubs
sbb
inc
cltd
and
ds
pop
pop
jp
inc
pushl
das
je
sbb
adc
pop
mov
or
sub
cwtl
fdivr
cmpsb
decl
insb
jb
arpl
les
jp
adc
xchg
cld
es
pushl
outsl
lret
push
sbb
xchg
sahf
ret
push
pop
clc
xor
or
and
inc
sahf
or
lcall
sub
push
es
inc
cltd
loopne
push
sbb
cmp
jecxz
cmp
inc
dec
dec
push
add
add
and
pop
mov
jmp
add
adc
push
pop
and
jg
sbb
arpl
and
jmp
cmpsl
and
mov
jne
jo
mov
jmp
adc
and
into
add
mov
pop
dec
dec
jnp
sar
mov
pop
push
cmpsl
cmp
adc
adc
ljmp
fsts
and
es
or
push
or
lcall
dec
test
add
and
mov
or
scas
jne
push
dec
inc
out
adc
jg
aaa
adc
ss
pop
sub
test
or
fidivrs
push
add
and
scas
lahf
push
inc
lcall
add
int
pop
push
mov
adc
add
xchg
jmp
mov
gs
jo
and
out
adc
daa
and
jne
enter
adc
jle
xor
adc
xchg
lods
lret
push
sbb
nop
cmpsb
ret
xor
cmp
pop
in
and
jg
mov
and
pop
sbb
add
add
call
into
jae
jmp
sbb
xor
pop
mov
inc
push
jp
lcall
add
xor
test
dec
dec
repnz
jmp
cmp
sti
xor
sbb
push
loopne
inc
push
out
int3
mov
add
pop
scas
mov
or
sbb
nop
dec
pop
jp
jp
leave
fnstenv
push
std
mov
es
into
xchg
dec
inc
xor
pushl
add
lcall
xor
lock
outsb
add
out
les
andl
adc
jg
dec
inc
fwait
enter
les
mov
addl
jns
pop
inc
loop
repz
inc
xor
les
mov
je
jp
mov
iret
rorl
repnz
push
out
add
lds
ss
mov
mov
ss
sub
popf
mov
jbe
scas
xchg
push
into
in
sahf
cmp
ss
outsb
cld
mov
xchg
jnp,pn
jno
mov
ret
lock
decl
inc
inc
inc
mov
out
mov
jae
inc
insl
pushf
fmul
push
sub
jae
or
push
inc
jle
adc
mov
push
stos
icebp
jg
ss
scas
sti
scas
cmp
ds
xchg
adc
ja
push
xlat
nop
imul
adc
add
xchg
mov
and
sbb
fwait
ljmp
mov
push
or
and
push
sbb
pop
movsl
push
and
and
sub
and
push
cs
xor
dec
and
ds
je
outsb
adc
loop
lods
xor
pop
mov
daa
push
xchg
add
push
popf
mov
test
fs
sub
add
jl
dec
lea
movsb
scas
and
xor
xchg
xchg
test
lock
adc
add
cmp
cmp
xor
mov
in
and
xor
popf
ficoml
idivb
adc
out
mov
and
jmp
mov
and
out
mov
push
cltd
push
add
or
mov
adc
xorb
adc
push
mov
pop
fisttps
adc
popf
hlt
int3
fisubrs
add
inc
test
sub
aad
mov
push
adc
push
mov
shrl
mov
aad
push
fsubl
stos
pop
xor
repnz
sub
shlb
cs
andb
lock
pop
sub
cs
fimuls
jbe
out
repz
popf
push
mov
frstor
pop
clc
call
sbb
out
pop
repz
lock
push
or
add
pop
push
idivl
xchg
cli
jg
or
lock
pop
lea
outsl
cltd
popa
inc
and
cld
jg
jl
notb
sub
mov
in
rclb
lcall
inc
ret
outsl
bound
adc
sbb
inc
je
pop
add
cwtl
adc
xchg
fstpt
dec
nop
sbb
jbe
jg
add
jg
pop
xor
jns
mov
mulb
dec
jle
mov
aaa
cld
call
pop
jae
dec
jo
outsl
xor
sub
stos
icebp
xchg
and
movsl
int3
mov
cmp
cmp
cmp
cld
sbb
or
pop
dec
cmp
adc
in
or
cmove
popa
nop
push
popa
popa
add
je
xchg
mov
jg
or
int
outsb
push
stos
and
mov
fwait
mov
call
dec
sbb
inc
mov
fidivrs
call
mov
jge
std
or
mov
inc
addr16
fs
in
sarl
lcall
sahf
fidivs
insl
inc
mov
lcall
add
out
nop
sub
clc
adc
mov
imul
jle
int
pop
adc
ljmp
shrb
mov
mov
jo
repz
or
icebp
lcall
sbb
imul
xor
push
push
ret
clc
out
adc
fmuls
xchg
jne
mov
aas
out
inc
adc
xor
int3
popf
into
or
stos
xchg
int3
call
inc
jne
arpl
dec
negb
jo
insb
hlt
mov
outsb
icebp
mov
cwtd
scas
inc
loope
push
add
mov
insl
lret
lcall
fistps
jg
and
ljmp
push
jns
inc
call
push
rorb
inc
fisttpl
mov
clc
es
add
repnz
je
and
and
lahf
shrb
enter
pop
lock
adc
and
aam
push
lock
or
scas
fbld
rorl
cmp
push
dec
mov
sbb
push
das
scas
or
popa
mov
sar
lret
add
in
cs
fs
inc
cld
fwait
test
enter
lcall
pop
xor
add
inc
or
pushl
or
jne
out
ret
push
add
imul
pop
inc
adc
cmp
out
xor
nop
dec
add
daa
insb
pop
jge
jne
jmp
or
mov
jbe
add
mov
jne
bound
in
mov
mov
insl
jne
cs
cmp
push
dec
clc
jbe
movsl
mov
pusha
add
mov
add
mov
ud0
jmp
outsl
loopne
jg
psubsb
push
fs
add
clc
push
mov
jle
cmp
cld
outsl
es
clc
or
cmpsb
inc
stos
cmc
pop
add
push
adc
fldt
ss
clc
sub
sbb
lahf
daa
loopne
icebp
push
push
sub
or
pop
lret
outsl
xchg
jecxz
stos
pop
loop
test
cs
jge
sub
jmp
push
pop
jb
insl
subb
mov
sbb
fwait
mov
xchg
loope
data16
mov
jno
adc
add
fcmovu
push
je
cltd
xlat
insb
pop
inc
call
pusha
sbb
jne
cs
xor
lock
inc
js
hlt
sub
pop
xor
jle
inc
sbb
adc
das
mov
dec
push
sbb
ss
cli
dec
sbb
xlat
popf
adc
push
sbb
ljmp
les
mov
adc
inc
mov
and
sub
xor
xchg
cmp
inc
or
and
ret
add
scas
pop
pop
inc
jbe
adc
and
jg
jbe
dec
loop
cmpsb
jbe
dec
xor
clc
add
sbb
call
xchg
cmp
inc
jbe
pop
jg
pop
cmp
cmp
arpl
dec
mov
cld
mov
fimuls
mov
pop
mov
ss
pop
add
decl
out
or
and
mov
sub
ljmp
jbe
dec
cmp
pop
inc
and
lcall
fimuls
xor
or
mov
push
loop
push
notl
xchg
sub
jns
sbb
fisttpl
pop
xchg
add
out
mov
mov
into
sub
stos
mov
fiadds
lea
nop
sub
add
fildll
jge
push
jecxz
jae
inc
lret
cmp
addb
mov
gs
adc
xchg
pop
mov
jmp
fs
adc
mov
mov
hlt
js
pop
shlb
clc
jae
sbbb
ficoms
lcall
outsb
fildl
dec
in
fistps
je
xor
dec
cli
cli
pop
lock
mov
add
int3
ja
or
push
or
inc
fcmovb
incb
jne
pop
push
aas
mov
fmul
loope
pop
sub
out
add
outsb
adc
pop
out
dec
daa
out
mov
addr16
int3
cmc
flds
cli
xchg
jbe
lret
test
out
call
fidivs
cmp
setg
cmp
mov
fisttpll
outsb
addr16
enter
jbe
movl
push
mov
cmp
mov
xor
ljmp
rcrb
push
imul
and
inc
cmp
adc
lcall
add
lret
xor
sub
mov
incl
shlb
dec
dec
sbb
jmp
mov
mov
jp
xor
fistpl
mov
xor
jge
sbb
add
mov
ja
mov
xchg
popf
aam
or
or
inc
in
adc
cmp
xchg
mov
aad
push
mov
pop
insb
call
push
cmp
xchg
cli
mov
jns
and
or
call
xor
mov
dec
inc
out
adc
filds
lods
or
popf
push
mov
dec
dec
dec
js
sub
repz
enter
stos
mov
xlat
mov
cmp
sub
popa
clc
or
adc
decl
pop
ss
cmpsb
stos
push
call
inc
jno
repnz
cmp
lcall
cmp
xor
pop
je
clc
pushl
hlt
mov
daa
push
mov
movsb
cmpsb
movq
movsb
mov
jae
pop
fidivl
es
stc
add
and
xor
insb
sub
icebp
pop
dec
mov
push
push
out
scas
xor
and
call
cld
sbbl
call
call
mov
enterw
repz
pop
jmp
dec
dec
push
jne
sbb
inc
mov
lcall
and
out
cwtl
mov
mov
or
push
rcrl
scas
xchg
out
int
fcoms
push
cmp
cmp
fmull
and
loope
iret
imul
or
jns
mov
incl
insb
lods
lcall
stos
aaa
adc
sub
pop
popf
out
mov
pop
lea
mov
scas
call
or
inc
xor
jns
xor
cmp
int
xorl
sbb
adc
out
sub
les
jbe
jbe
xor
leave
les
shlb
loope
std
fldl
mov
dec
xor
cmp
fcompl
loopne
sub
adc
ljmp
ficomps
cmp
and
add
inc
negb
rcl
mov
xor
inc
pop
add
xor
jbe
push
outsb
xchg
adc
push
mov
adc
dec
test
pop
and
fnstenv
mov
cmp
out
mov
les
lods
xlat
mov
in
mov
sbb
lret
scas
out
dec
out
pusha
jecxz
repz
jg
pop
cmpsb
sub
mov
movsb
lods
mov
and
mov
stos
xchg
sbb
jl
xchg
cwtl
mov
mov
sbb
mov
scas
and
dec
out
cmp
gs
scas
nop
decb
pop
sub
fisttpll
repnz
call
test
mov
cld
iret
filds
divb
repz
xchg
fwait
daa
fs
into
loop
imul
ss
cmp
dec
sahf
push
es
and
cwtl
mov
jge
jg
mov
jne
popa
daa
js
jb
gs
and
and
arpl
and
mov
into
xor
xchg
adc
out
cli
jns
or
push
push
enter
adc
jmp
cltd
outsb
in
pushf
mov
inc
add
cmp
inc
pop
and
es
pop
mov
xchg
divl
jp
pop
and
loop
cmp
inc
fmull
push
or
es
test
fdivs
ret
fisttps
mov
mov
arpl
push
dec
mov
and
push
or
xchg
outsl
lods
add
lock
ja
xor
sbb
sarl
pushf
es
adc
loopne
enter
push
xchg
pop
adc
ds
xchg
dec
mov
inc
xor
push
pop
je
add
dec
and
movsb
sub
sub
pop
cld
das
sar
xor
push
outsl
lea
sub
inc
push
and
sub
add
jmp
cmp
lea
incb
lret
js
sahf
push
inc
mov
cmpsb
mov
jg
jmp
xor
fimull
jle
xor
cwtl
cmp
test
insb
in
pop
or
test
ljmp
and
sub
movsb
push
loope
pop
mov
sbb
aaa
pop
mov
push
sbb
pop
stc
sub
mov
sarl
fcomip
mov
cmp
inc
movl
lea
pop
fbld
incb
sub
pop
into
test
jae
jecxz
mov
std
popf
aam
xorl
movsb
cmpsb
jbe
add
mov
adc
aas
ljmp
sub
dec
cld
pop
mov
shlb
mov
push
daa
paddusw
adc
lock
mov
xchg
sub
movsl
sub
sti
mov
out
fisttps
jbe
mov
iret
mov
jns
cmp
add
decl
mov
mov
pushl
jle
mov
xchg
fnstsw
adc
push
jg
dec
pop
add
aam
mov
push
add
inc
movsl
test
mov
pop
and
push
cmpsb
aam
push
outsl
sbb
jo
or
mov
sbb
or
aas
out
or
pop
js
push
loopne
jbe
pop
cli
es
data16
mov
adc
fadds
jnp
mov
arpl
divl
ja
icebp
jg
mov
pop
push
push
repnz
push
jno
inc
and
enter
jb
movsb
enter
fdivs
pusha
call
dec
add
data16
scas
cwtl
mov
ret
or
push
cmova
mov
pop
jo
mov
jbe
in
lods
add
push
mov
hlt
decl
jno
orl
int3
mov
cmp
jg
mov
in
stc
jle
js
lret
add
sti
adc
mov
jmp
movsl
and
push
adc
les
mov
cmp
clc
or
sub
pop
push
xchg
mov
xchg
test
inc
pop
push
sbb
out
add
sti
mov
xchg
test
fdivl
adcb
adc
adc
cmp
out
add
lcall
inc
iret
ds
call
call
inc
xor
mov
lea
adc
fucomip
sbb
mov
test
or
jg
and
scas
pop
pop
xor
cmp
add
notl
pop
jo
dec
mov
addr16
mov
test
dec
cmpsb
hlt
mov
jmp
daa
mov
dec
xor
daa
pop
or
add
out
push
and
scas
mov
mov
lods
xor
orl
leave
add
outsb
jg
or
xchg
pop
ss
sti
push
sbb
push
pop
sbbb
mov
push
pop
pusha
call
mov
xchg
mov
xchg
popf
sbb
jle
inc
shrl
and
cvtdq2ps
inc
cmpsl
xchg
popa
ja
jno
or
and
add
adc
decl
shll
popf
in
or
jbe
and
jg
push
insl
cmpsb
lock
and
and
add
ja
scas
pushl
jl
mov
push
dec
mov
out
adc
xchg
sar
or
and
add
into
or
outsl
and
add
shrb
sub
adc
add
ret
push
dec
adc
xor
cltd
int3
inc
icebp
jmp
sti
sahf
outsb
lret
jl
inc
out
pop
fs
sbb
or
call
inc
sub
jns
or
dec
jmp
addr16
nop
and
jnp
sbb
mov
sarl
jb
pop
dec
sti
push
decl
mov
shlb
rcrl
lds
jae
dec
ljmp
dec
mov
test
push
sub
mov
mov
xchg
adc
ljmp
push
cmc
mov
dec
cmc
sub
fs
mov
dec
sbb
jae
jne
call
mov
cmp
insl
sbb
jge
ss
dec
sub
gs
clc
mov
sbb
dec
aaa
jg
add
and
es
dec
and
pop
pop
jp
pop
lds
lcall
push
iret
shlb
dec
push
pop
push
and
in
adc
call
js
mov
mov
cmp
mov
or
scas
movsb
popa
outsb
adc
fistps
daa
mov
pop
mov
cld
inc
push
cmpsb
sti
mov
lret
call
and
in
xor
into
adc
data16
insl
call
inc
addr16
and
adc
and
xor
sbb
addr16
xchg
inc
push
sub
movsb
add
ss
add
pop
mov
aaa
jne
add
sub
adc
dec
sar
inc
or
adc
daa
outsb
das
xlat
mov
mov
sbb
rcl
cs
clc
jg
xor
xchg
add
stc
and
clc
xor
out
mov
sub
inc
cmpsl
xchg
xchg
je
push
inc
adcl
xchg
fidivl
mov
dec
mov
add
mov
call
aam
push
pushf
jae
sub
and
lcall
jg
les
push
add
push
sub
and
pusha
adc
lea
pop
movsb
jns
mov
sbb
fstpt
popf
push
mov
push
push
shrl
incl
lret
inc
sub
inc
sbbb
inc
jg
into
popf
dec
mov
movsb
adc
jo
push
aaa
stos
pop
icebp
das
adc
call
adc
rclb
arpl
clc
pop
insb
mov
mov
cs
jno
jne
and
add
aas
nop
push
ss
and
mov
movl
shll
popf
movb
sub
std
jmp
lret
pop
jecxz
pop
xor
xor
push
movsb
add
popf
mov
add
or
inc
shlb
outsb
outsb
cmp
jecxz
outsl
aaa
jmp
call
inc
inc
sbb
addl
cmp
repz
insb
jne
mov
xor
daa
mov
out
in
iret
mov
clc
pop
cld
nop
add
jb
fistpll
lcall
xchg
sbb
dec
dec
cmp
mov
and
jg
push
stos
push
mov
das
outsb
mov
push
or
fadds
jb
inc
mov
mov
push
push
shrb
dec
mov
arpl
inc
popf
insl
std
jg
ss
adc
and
vmread
loope
xchg
ret
mov
mov
in
movsb
jmp
or
cld
cmp
incb
xchg
loopne
mov
mov
test
icebp
push
sbb
popa
jecxz
adc
das
data16
int
scas
push
mov
mov
push
ljmp
jg
and
or
push
aaa
cld
insl
or
rorb
ja
clc
or
cmp
mov
mov
and
jmp
outsb
sub
js
push
or
jmp
xor
xor
divl
data16
out
fwait
sbb
ja
dec
das
cs
xor
or
mov
es
es
incl
adc
ss
pop
dec
jne
and
mov
mov
push
cmp
cmp
icebp
fs
mov
sub
daa
outsb
inc
arpl
scas
and
sahf
inc
inc
mov
pop
icebp
ljmp
inc
in
mov
or
jp
xchg
pop
jbe
xor
lea
cs
iret
or
aad
notb
cmp
inc
decb
das
dec
push
mov
inc
idiv
dec
inc
dec
inc
add
inc
iret
pop
jp
adc
xchg
lret
subl
add
sarb
scas
jp
jle
cmp
ret
cmp
dec
mov
gs
mov
lock
out
test
cmp
cmc
mov
jmp
adc
mov
pushf
fnstsw
ds
mov
sahf
incl
shll
pop
sbb
arpl
push
jb
mov
call
jmp
push
fiadds
xor
mov
data16
ljmp
cmp
adc
aas
push
faddl
loope
push
push
mov
outsl
pop
stos
out
inc
into
mov
aaa
out
mov
ja
faddl
test
push
sub
inc
adc
xchg
insl
popa
mov
std
sbb
pushf
xor
pushl
enter
insl
hlt
cmp
rorb
dec
outsl
mov
js
cmc
lcall
ret
mov
mov
mov
ror
inc
fiadds
jb
jg
rol
stos
mov
nop
imul
ret
sub
in
mov
loopne
adc
jp
int3
mov
add
fbstp
pop
jg
cmp
push
inc
mov
mov
cmp
mov
mov
jg
lds
jo
ret
push
push
test
outsl
mov
outsb
repnz
fstl
pop
mov
jg
push
incl
pop
jle
cmp
fs
xor
cmpb
clc
jmp
mov
mov
cmpsl
dec
jecxz
data16
daa
fs
out
cmc
cmp
mov
rcrl
push
scas
xchg
andb
sahf
imul
clc
jg
mov
add
push
add
ja
aas
push
popf
inc
cld
ljmp
cmp
notb
add
mov
mov
xchg
dec
leave
fdivrs
ljmp
into
inc
repnz
loop
jge
mov
pop
xchg
iret
mov
xor
mov
dec
cmpsb
lret
mov
repz
push
fidivrs
jbe
mov
dec
dec
xchg
and
scas
out
pusha
ficomps
mov
or
inc
stc
and
fnstsw
dec
jl
sbb
mov
test
dec
jmp
mov
mov
imul
xchg
push
sti
xor
add
push
sti
das
inc
jne
adc
xchg
sbb
nop
fwait
lcall
test
lcall
xchg
dec
inc
loop
dec
out
push
pop
xchg
fs
xchg
pop
hlt
jecxz
lock
sbb
fidivrs
jg
cmc
cmp
out
push
inc
mov
cmpsl
jp
test
push
dec
jecxz
in
push
jmp
mov
dec
sarl
addr16
mov
ja
mov
jmp
inc
out
xchg
cmp
mov
inc
movsb
jmp
mov
call
pop
jns
sub
or
stc
sub
nop
xor
mov
scas
dec
fcoml
std
adc
jg
icebp
mov
dec
rclb
inc
clc
sub
jl
xor
icebp
jg
mov
sbb
loop
aam
es
sub
jle
mov
jo
and
scas
dec
in
sub
fsts
shrb
bound
adc
mov
xchg
in
icebp
pushl
fwait
stos
leave
pop
jge
fbld
into
mov
das
call
bound
pop
and
dec
rolb
std
mov
push
bound
clc
aas
dec
nop
lret
int3
pop
jmp
fimuls
jo
adc
xchg
jle
cltd
clc
mov
adc
sti
mov
xchg
shrl
cwtl
es
or
jg
cmp
mov
cld
cltd
jp
fwait
shrb
test
xchg
call
mov
dec
xor
lcall
dec
xchg
out
push
fisubrl
hlt
movsl
inc
lock
mov
aaa
jp
and
cmp
insb
loope
pop
push
fcompl
movsb
ds
dec
cs
lcall
mov
out
cwtl
inc
or
sbb
outsb
jle
pop
imul
jae
stos
int3
xchg
outsb
jmp
push
jge
out
popf
iret
mov
or
icebp
add
mov
leave
xchg
stc
xchg
sbb
out
sar
mov
mov
cmp
mov
inc
push
cmpsb
dec
fidivl
ret
incl
aam
adc
mov
dec
lods
push
mov
mov
dec
xchg
jnp
jmp
jbe
in
jg
call
dec
fildl
xor
mov
mov
push
xchg
cmp
xor
cld
mov
aaa
orb
pop
inc
xchg
mov
or
mov
lcall
fistl
mov
addl
popa
pop
test
mov
aaa
push
cmpsl
into
out
xor
mov
dec
shlb
bound
cmp
xchg
imulb
xchg
lds
addr16
fcompl
decl
lods
pop
into
adc
jb
popf
aam
push
movsb
iret
add
out
xchg
ja
inc
rcr
adc
xor
push
mov
add
dec
mov
pusha
je
enter
dec
push
pop
sahf
out
aad
dec
sub
test
mov
push
lcall
popa
xchg
outsl
and
jl
fwait
xchg
cmc
adc
in
cmp
jns
xchg
cltd
adcl
pop
mov
je
mov
lock
ja
lea
mov
xchg
outsl
jbe
or
pop
dec
cli
xchg
scas
add
jns
test
mov
int
scas
cwtl
add
orl
fwait
jno
fcoml
ja
sbb
xor
pop
mov
mov
adc
int
loopne
push
out
mov
outsl
out
xchg
pop
shlb
mov
cmp
mov
test
sbb
cmpsl
mov
xchg
call
nop
pop
into
sbb
pop
push
adcb
aas
xor
mov
inc
cmpsb
sub
mov
ljmp
mov
push
pushl
inc
ret
adc
bound
std
mov
in
cld
aaa
pop
mov
xchg
popf
pop
imul
dec
rolb
cmp
mov
subb
jmp
ja
sarl
dec
cs
xor
arpl
xchg
mov
into
shlb
add
subps
and
iret
xor
clc
mov
inc
jnp
lock
pop
lock
mov
ja
enter
mov
movsb
jp
cmp
push
ret
fnstenv
cmp
sub
imul
inc
fiadds
aas
nop
out
dec
mov
dec
aam
fistpll
lcall
xor
loope
test
push
mov
mov
mov
call
cld
int
mov
dec
xchg
repnz
inc
cs
fidivs
xchg
mov
lods
mov
shl
mov
lahf
jb
lods
add
shlb
pop
mov
jg
movsb
fdivrp
std
sbb
ja
icebp
mov
jle
inc
cli
and
cmp
mov
in
adc
cwtl
aaa
std
cld
inc
mov
pop
jl
lcall
inc
into
mov
imul
clc
add
cli
xor
lcall
cmpsb
enter
push
enter
bound
inc
mov
ljmp
into
in
adc
mov
mov
sub
push
mov
fcmove
movsb
jmp
jl
movl
mov
sahf
pop
aam
test
lahf
adc
xchg
nop
lret
xchg
xchg
sbb
inc
mov
cltd
mov
xor
lock
fadds
jp
jbe
xchg
lret
xor
shl
mov
lret
mov
mov
nop
inc
lcall
add
test
nop
out
mov
andb
andb
mov
inc
sahf
cltd
movsl
imull
in
rorb
cmp
cmp
lahf
and
add
stos
ss
cmpsl
jns
seto
nop
out
add
mov
popl
or
aas
lds
in
sub
int3
or
jno
enter
test
lahf
dec
mov
sbb
out
test
xor
jmp
into
fwait
js
repz
ljmp
out
xchg
stos
mov
push
xchg
xchg
sbb
stos
iret
call
ficomps
mov
mov
cmp
pop
enter
mov
andb
mov
cmp
pop
mov
mov
jb
jns
mov
lahf
dec
xchg
js
call
decl
push
jg
add
jae
add
xchg
mov
scas
jmp
pop
mov
call
adcb
fidivrs
push
pushf
test
cld
decl
xchg
dec
mov
push
aam
bound
mov
push
lods
jmp
adc
outsl
xor
ljmp
mov
lea
adc
ljmp
fildl
jns
popf
mov
jl
push
pop
loope
shlb
mov
add
push
loopne
adc
push
in
rolb
push
jg
iret
xchg
fs
es
mov
popw
xchg
jno
test
and
notl
mov
lcall
imul
pop
inc
mov
inc
lock
enter
mov
mov
jns
cmp
xchg
and
jae
mov
mov
add
mov
jb
mov
cmp
out
rolb
xchg
inc
pop
xchg
mov
icebp
push
sar
inc
xchg
lcall
jle
test
fimuls
repz
push
and
mov
enter
ret
fisttps
loope
and
sbb
mov
sub
ljmp
cmp
fstl
int3
xor
jns
cmp
popf
mov
mov
mov
sub
jns
mov
test
mov
out
mov
cmp
sbbb
pop
cltd
shlb
enter
fildll
inc
jle
cmp
mov
outsb
adc
test
mov
in
lods
xchg
data16
lcall
and
or
and
popf
mov
ja
adc
xchg
ss
lock
stos
inc
rorb
nop
ss
push
mov
cmp
sti
ds
in
mov
dec
out
xor
mov
mov
arpl
inc
ljmp
push
scas
int3
xchg
loope
inc
lret
push
xchg
test
dec
out
adc
xor
pop
icebp
jns
mov
clc
xor
leave
movsl
fwait
push
adc
cmp
clc
sbb
jb
xchg
add
dec
nop
inc
ljmp
cmp
dec
mov
cs
popf
leave
mov
ss
mov
cltd
xchg
cmpl
push
xchg
clc
ljmp
mov
mov
into
test
cmpb
xorb
pop
jns
lods
fisubs
mov
sbb
nop
loopne
inc
leave
into
mov
das
jp
out
jl
subb
jecxz
dec
cli
xor
ss
inc
jo
fsubrp
scas
idivl
pop
mov
mov
rcrl
push
and
pop
mov
mov
pop
mov
pop
cld
xchg
rcrb
mov
test
xchg
and
jae
sub
pushf
scas
jg
jmp
jle
js
xchg
cs
movsb
sahf
sbb
cmp
test
mov
mov
iret
ljmp
dec
shll
sbb
lcall
into
mov
mov
fcompl
mov
adc
aad
xchg
add
scas
pop
ret
adc
mov
xorb
xchg
cltd
sub
dec
xchg
push
es
incl
xchg
scas
push
sbbb
xchg
dec
movsl
sbb
mov
mov
enter
ret
sub
xchg
icebp
fwait
lcall
mov
mov
nop
jl
xchg
xor
mov
lods
dec
xchg
add
adcb
ljmp
push
mov
and
mov
mov
orl
test
jg
lea
aaa
jae
xchg
xchg
scas
sbb
adc
pushl
dec
jmp
stos
mov
xchg
ret
pop
insb
int3
mov
mov
fbld
mov
and
mov
out
stos
jmp
popf
mov
ret
jbe
mov
call
pop
xor
xor
pushf
insb
stos
cmp
test
sarb
inc
mov
mov
ret
stc
scas
sar
add
aad
mov
pushf
and
imul
mov
and
inc
mov
mov
push
add
lcall
adc
fs
div
mov
fcomip
cmp
movsl
xchg
imul
pop
clc
call
push
pop
inc
fwait
loopne
jnp
mov
in
cmpsl
jb
test
sarb
data16
jne
adc
cmpb
pop
mov
push
aad
out
adc
in
scas
popa
mov
cld
stos
je
and
xor
xchg
cld
xchg
jmp
cld
loop
dec
pushf
ret
jp
xchg
test
adc
inc
xchg
ss
xchg
mov
test
mov
and
rcll
adcb
rclb
xchg
popa
cld
sbb
push
call
imul
nop
testl
xchg
jbe
call
add
mov
sbb
repnz
xor
aam
sahf
mov
nop
mov
fidivrs
sbb
mov
les
scas
pop
jbe
push
jl
call
test
test
cmpb
mov
mov
fs
add
mov
hlt
addr16
not
sbb
sahf
dec
xchg
fs
xchg
cld
scas
cli
pop
dec
lds
ljmp
xchg
mov
xor
pop
fiadds
jle
iret
mov
cmpsl
jbe
jg
je
aad
xchg
aas
mov
xor
mov
ja
cmp
jl
fdivrp
sbb
jp
mov
aam
pop
repz
outsb
add
jns
adc
cwtl
dec
in
mov
add
movsb
jne
ss
sahf
shlb
mov
xchg
inc
sahf
out
jno
mov
ja
cs
mov
jmp
sbb
sub
add
stos
shrb
lcall
lcall
mov
xor
loopne
pop
loop
lock
pop
ds
lret
push
movb
jg
or
ja
jecxz
pop
sub
jle,pn
les
mov
add
repz
daa
pop
inc
sahf
leave
mov
xor
and
pushl
pusha
les
push
int
pop
pop
out
js,pt
mov
test
mov
fwait
add
or
jnp
xchg
rolb
jbe
inc
decl
xchg
or
add
icebp
xchg
mov
scas
add
inc
iret
ss
push
jg
insb
ljmp
inc
mov
lahf
out
push
fisubrl
add
add
jle
or
or
xchg
mov
inc
jp
mov
fcomip
jg
rorb
cmp
pop
dec
mov
leave
and
je
ja
clc
dec
insw
mov
mov
mov
cli
mov
or
lods
in
movsb
xchg
insb
mov
xor
fnstcw
inc
mov
jle
fwait
cmpsb
mov
dec
outsl
test
aaa
dec
jp
pop
dec
lods
adc
in
add
call
and
inc
test
xor
push
sbb
jne
add
inc
inc
adc
pcmpeqw
push
cs
ljmp
push
or
adc
jp
cmp
dec
stos
sbb
add
cmp
xor
and
cmp
pop
xor
xor
ret
jg
dec
mov
cmp
inc
add
aaa
push
inc
push
and
cs
xor
sub
mov
cmp
xor
xor
xchg
adc
or
outsl
sbb
inc
xchg
lcall
in
dec
jae
inc
xor
lcall
mov
jl
pushf
clc
das
or
sub
mov
push
mov
mov
loope
inc
ja
call
push
inc
lcall
popf
sbb
outsl
or
lcall
pop
lds
or
rclb
sub
jns
mov
mov
push
scas
push
loop
decl
test
xchg
push
pop
cmc
test
sub
je
pop
sub
pop
add
rolb
inc
lods
std
inc
mov
jne
arpl
adc
call
les
mov
xchg
lods
loop
pop
mov
aad
lcall
rclb
pop
jb
and
and
incl
pop
dec
je
gs
lea
stos
jno
add
nop
sbb
pop
mov
inc
push
mov
mov
xchg
pop
scas
adc
inc
sahf
mov
call
fs
mov
xchg
add
or
outsb
pop
mov
jb
or
ljmp
jns
and
outsb
adc
int
stos
and
out
cli
sbb
xor
sbb
jg
mov
dec
sub
insl
pop
jmp
jge
cmp
ret
push
in
dec
stc
add
or
popf
stos
bound
stc
ja
clc
ljmp
lods
lea
jo
pop
adc
and
test
push
or
sbb
push
sar
pop
out
mov
pop
dec
xchg
lods
ficompl
insl
mov
cmp
mov
adcb
sub
sbbl
mov
out
scas
test
out
cmp
sub
movsl
stos
mov
out
inc
clc
add
mov
fwait
jecxz
push
add
add
sahf
sbb
ds
mov
pusha
cld
stos
and
xchg
inc
push
jecxz
movsb
inc
pop
hlt
adc
and
call
sbb
out
or
scas
push
push
pop
xorl
stos
jl
sbb
mov
aas
sub
jle
outsb
cli
js
xor
inc
repnz
push
push
mov
jmp
jmp
cld
adcb
pop
aas
mov
inc
iret
and
bound
daa
pop
fbstp
mov
push
inc
dec
mov
sahf
stos
je
pop
nop
cmp
mov
dec
fcomps
hlt
add
lods
mov
cmp
mov
stos
pusha
notl
lahf
mov
jg
ja
orl
cmp
push
jbe
push
sub
decl
add
out
jg
gs
xchg
decl
aaa
dec
scas
and
add
add
xchg
mov
jmp
fimull
adcl
xlat
xchg
jno
shrl
movsb
sbbb
cmpsl
iret
push
inc
and
fiadds
push
and
sbb
push
fsubrl
dec
cli
pop
jns
dec
hlt
jbe
cmp
pop
xor
or
gs
push
jle
call
fimuls
jge
pop
cmp
dec
adc
xchg
adc
mov
jp
sub
adc
push
push
es
scas
sbb
push
js
push
movsl
xchg
popa
push
inc
cmpsb
loope
lcall
mov
mov
stos
sbb
outsb
and
addb
mov
xor
inc
inc
popf
outsl
sub
pusha
call
mov
imul
outsl
test
cmp
cltd
or
sub
aaa
adc
jle
xchg
negl
ss
and
test
cs
ljmp
mov
sbb
mov
xor
movb
pop
adc
out
shll
mov
sbb
test
mov
sbbb
lock
add
adc
fs
xor
aas
out
insl
test
stc
es
pop
dec
pop
adc
fnsave
or
insl
dec
push
push
jns
push
aam
pop
and
nop
xor
pop
and
nop
adc
add
push
imul
sbb
add
scas
inc
adc
ds
push
lods
call
cld
andl
mov
or
lret
or
in
shlb
or
into
sub
ret
scas
call
insl
ret
dec
out
aaa
mov
adc
jle
pop
adc
or
movsb
xor
call
xchg
and
jle
push
pop
movsb
jg
cmpsb
icebp
jg
call
outsb
and
ds
fucomi
test
xchg
jne
adc
cmp
and
sub
mov
cld
mov
mov
lods
adc
out
lcall
incb
jo
lods
imul
rclb
rolb
inc
clc
jmp
xor
rorb
inc
movsl
addl
loope
gs
fistl
push
or
dec
xchg
out
icebp
out
rcr
pusha
and
mov
decl
test
pop
jb
xor
cmp
mov
xor
shll
popl
and
adc
es
enter
mov
sbbl
mov
inc
aas
test
leave
jle
mov
xchg
pusha
jg
lsl
xchg
sbb
shl
popa
xor
add
jb
dec
icebp
mov
ret
mov
pop
jle
adc
add
sbb
js
sbb
jo
lret
lods
push
out
xchg
and
push
push
dec
xchg
outsb
out
mov
jle
cmpsb
cmp
pop
bound
xchg
mov
fadd
cmp
out
adc
outsb
push
ja
mov
jb
pop
cmc
lods
xchg
sbb
or
sbb
movl
xchg
ret
in
popf
es
xchg
push
icebp
call
mov
pop
stos
cmpsb
sbb
test
add
sbb
dec
repz
dec
mov
pop
xchg
inc
out
cs
or
jg
loopne
jecxz
insb
decl
es
jg
mov
orb
in
sub
cmp
pusha
sbb
insb
pop
xchg
adc
adc
jg
test
cs
mov
leave
jo
jne
les
dec
fidivrs
pop
lods
jmp
xchg
adc
pop
inc
mov
loope
inc
lret
jg
ss
imul
test
jmp
lret
inc
je
stos
xchg
fwait
mov
push
dec
mov
jg
stc
jg,pt
dec
lcall
push
pushl
xor
cmovne
xchg
aaa
and
inc
pop
lods
loope
dec
mov
pop
mov
ljmp
sub
pushf
andl
xchg
outsl
adc
clc
mov
sahf
enter
ret
outsl
ljmp
push
cmp
mov
cli
mov
pop
or
jecxz
popf
shll
cmpl
gs
jg
jne
xchg
adc
insl
hlt
and
lods
jg
mov
xchg
push
ds
ret
push
push
push
insb
xchg
adc
ljmp
sub
ds
cmpl
scas
jle
mov
mov
test
inc
mov
dec
xchg
or
es
scas
inc
cmp
mov
add
jmp
lcallw
jl
adc
adc
das
cmpsb
mov
cs
mov
int3
mov
sub
call
xchg
jns
sbb
dec
in
push
and
dec
or
in
jmp
add
push
test
ds
clc
pop
into
pop
and
sbb
test
data16
inc
add
xor
scas
mov
pop
or
cmp
sub
mov
subl
sub
mov
adc
push
or
sub
inc
xchg
push
push
cmpb
dec
es
ret
sbb
pop
push
scas
add
mov
push
pop
jbe
leave
mov
aaa
adc
push
or
in
fwait
hlt
inc
into
dec
jo
fimuls
lods
sub
pop
mov
push
and
imul
mov
pop
sub
pop
fwait
xor
sbb
sbb
je
movsb
cmp
retw
jno
bound
mov
mov
sahf
stc
lods
sbb
inc
cmpsb
push
icebp
pusha
or
outsl
sub
add
or
pusha
pop
sbb
ljmp
pop
sbb
and
xor
bound
inc
es
adc
pop
push
mov
push
inc
xchg
pop
cli
or
je
out
stos
inc
or
mov
sub
xor
decl
jg
or
ljmp
pop
push
or
pusha
loopne
cmpsl
cmp
jle
xchg
cmp
mov
test
xchg
in
pop
jg
cmc
cld
mov
xorl
cltd
mov
jne
xor
dec
push
dec
jne
cmp
test
and
mov
dec
test
ret
xchg
mov
inc
sbb
jle
pop
mov
mov
in
xor
push
lock
xchg
inc
pop
xchg
inc
hlt
ja
xor
daa
xchg
cltd
test
pusha
ficompl
jmp
hlt
lea
cltd
push
push
jge
adc
adc
xchg
and
lcall
jbe
ds
mov
push
lahf
push
lds
jno
adc
inc
push
dec
dec
loop
and
dec
cs
pusha
into
ds
push
pop
mov
sbb
pushf
cmp
xchg
mov
decl
sysexit
sub
push
stos
add
adc
cmp
xchg
lcall
pop
gs
dec
pop
push
fwait
pop
push
push
lods
jbe
adc
ret
es
inc
scas
pop
test
push
add
cmp
mov
inc
out
xchg
push
lret
inc
jbe
dec
test
sbb
mov
ret
inc
jg
cmpsb
cmp
sbb
test
xor
adc
add
add
mov
rolb
mov
mov
mov
adc
gs
movsl
into
xchg
sub
add
fcomip
push
mov
adc
cmp
dec
enter
inc
stc
sub
out
mov
add
gs
sbb
adc
stos
push
inc
jne
xor
jbe
fimull
iret
mov
ss
je
jp
jne
adc
dec
fnstsw
fdivl
into
jecxz
stc
lock
push
pop
out
jo
mov
mov
push
mov
cli
mov
jno
lods
adc
sbb
or
lods
add
lahf
in
enter
mov
mov
mov
jo
or
cmpsb
insb
cmc
pop
dec
cld
mov
cs
mov
lcall
mov
pop
dec
test
ljmp
hlt
xchg
scas
inc
mov
fwait
sbb
ljmp
loope
pop
inc
fists
add
movsl
pop
dec
push
mov
aaa
out
clc
push
mov
jo
jns
fwait
pusha
gs
mov
pop
cmp
pop
bound
jnp
popf
frstor
sub
je
mov
mov
push
mov
mov
mov
call
mov
and
pusha
outsl
xchg
cs
rclb
loop
mov
xorb
scas
adc
jecxz
mov
jo
mov
dec
push
ret
cmp
das
dec
push
lcall
adc
stos
lea
mov
mov
lods
minps
bsf
dec
push
ss
loopne
cmpsb
inc
inc
jg
pop
outsl
mov
push
pushf
xor
unpcklps
sahf
and
test
dec
add
push
xor
sbb
cmpsb
xorb
and
mov
filds
push
nop
sbb
imul
mov
cmovae
xchg
test
pop
mov
or
cmpsb
je
and
out
cmpb
cmp
sar
aas
ds
imul
sub
in
mov
dec
adc
sbb
cmp
nop
push
into
popf
movsl
das
sub
imul
push
inc
xor
scas
test
cmp
adc
pop
popa
filds
dec
or
jne
pusha
add
ss
sub
mov
icebp
jb
lock
cld
and
je
sahf
and
pop
mov
xor
mov
lods
adc
cmp
and
js
je
push
and
incl
and
xchg
inc
cmp
daa
mov
aam
jmp
push
les
pop
dec
xchg
inc
icebp
movsl
out
les
push
xchg
mov
cmpsb
jb
and
dec
xchg
incl
mov
jne
mov
push
inc
test
mov
pop
or
and
lods
cmp
adc
nop
add
fbld
test
mov
and
popa
pop
mov
mov
inc
cmpsb
push
rol
cs
jmp
xchg
cli
mov
fidivl
iret
mov
dec
int
mov
xchg
outsb
jmp
sbb
inc
scas
imul
xor
sbb
inc
incl
repz
pop
mov
jmp
jns
in
sub
jne
lcall
es
jmp
popf
mov
jge
cmp
hlt
pop
sbb
adc
out
mov
cld
pop
and
cmpsl
pop
fisttpl
mov
dec
outsl
negb
cmpsl
adc
xchg
sbb
or
insl
dec
or
cmp
ja
or
bound
in
and
insb
aam
mov
xchg
pop
fcompl
sbb
ja
sub
cmp
std
mov
xchg
mov
sub
xchg
aas
add
jne
sub
aas
sarb
and
insb
adc
mov
stc
mov
movb
xor
out
int
clc
sub
dec
cli
stos
mov
out
jo
das
or
icebp
add
clc
and
int3
push
dec
add
push
inc
fisttps
jmp
and
and
movsb
jp
mov
push
lea
test
subl
cwtl
pop
ds
mov
mov
rep
jne
loope
icebp
das
cli
ss
and
mov
jbe
test
enter
add
pop
xor
andb
cld
jg
dec
fcmovnb
add
lods
popa
aaa
arpl
pop
pop
mov
push
mov
pop
jmp
mov
scas
pop
cmpsl
pushf
xor
out
cmp
stos
cmp
mov
jge
mov
mov
das
adcb
mov
jbe
xor
fimuls
mov
inc
inc
std
inc
jmp
scas
sbb
out
mov
mov
fs
jg
into
cmp
jp
ret
inc
or
fiaddl
inc
pusha
mov
add
mov
insl
pop
add
mov
mov
mov
movsb
push
push
insb
cld
sbb
sbb
jbe
sbb
inc
ljmp
cltd
push
adc
incl
cmpsb
and
push
mov
imul
cmpsb
adc
in
xchg
push
pushf
fldcw
in
cmp
dec
cmp
leave
stos
jl
mov
add
ss
dec
mov
pop
jg
push
xor
sahf
cmp
cmp
pop
es
xor
mov
pop
sbb
lea
incl
xchg
loopne
rcrl
push
mov
fs
mov
inc
add
in
mov
mov
out
jle
dec
and
push
outsb
xor
lods
pushf
aaa
push
sbbb
mov
test
incl
insb
inc
mov
mov
scas
jp
sub
jle
adc
pushl
movl
cmc
and
dec
cmpb
orb
scas
sarb
cs
cltd
adc
es
js
enter
fs
in
cmp
test
or
mov
jl
mov
pop
and
ss
test
enter
add
push
push
inc
jmp
mov
test
aaa
jmp
dec
and
inc
cmp
mov
lds
test
dec
adc
call
add
fcmovnu
jle
test
dec
xchg
dec
adc
lcall
xchg
adc
movsl
mov
movsb
lahf
push
in
loopne
push
pushl
enter
aas
mov
jbe
xchg
or
xchg
js
enter
pop
cwtl
cltd
xor
and
mov
into
mov
mov
cli
inc
mov
test
leave
ss
dec
mov
gs
sbb
xchg
test
xchg
cs
add
rclb
jecxz
hlt
xor
mov
cltd
cmp
js
cld
ljmp
dec
popa
pop
sbb
add
gs
bound
leave
mov
fildll
xchg
aaa
movsl
xor
dec
in
or
out
xor
ret
fbld
enter
packsswb
lahf
xchg
inc
popa
addl
add
pop
push
imulb
adc
mov
or
adc
les
push
dec
mov
sar
aaa
lcall
gs
ds
mov
or
popa
icebp
movsl
or
add
jg
push
mov
aas
xchg
aam
mov
jg
sub
mov
push
mov
iret
repz
inc
push
push
sub
xor
fildll
aaa
inc
jp
add
jb
cmp
mov
into
outsb
push
xchg
push
xchg
xchg
and
mov
stos
adc
mov
repz
push
lcall
jg
push
into
jns
sbb
mov
sub
mov
fidivrs
sbb
inc
and
xchg
push
cmpsb
adc
xchg
push
sub
pop
mov
idiv
adc
sub
and
imul
dec
int
cmp
sub
adc
mov
lret
inc
mov
fiaddl
xchg
mov
pop
and
add
ffreep
scas
jp
adc
arpl
call
sbb
jno
lods
jp
outsl
add
xchg
cmp
mov
add
les
jno
pop
xor
pushl
fiadds
adc
and
mov
cmpb
jmp
ret
or
jg
push
mov
inc
mov
pop
xchg
inc
ljmp
push
jae
inc
lods
outsb
xchg
cmp
mov
jg
mov
repz
aas
repnz
mov
out
outsb
ret
dec
push
xchg
imul
push
xchg
mov
add
in
mov
cmpsb
or
xor
les
mov
and
js
and
lcall
or
fdivrs
sbb
addr16
jno
add
fsubrl
sbb
aaa
inc
pop
mov
adcb
pushf
cmp
call
leave
cmp
jge
mov
inc
jo
mov
sbb
xor
and
pop
test
movsb
xchg
arpl
dec
decl
adc
mov
insl
push
jmp
sahf
test
or
daa
jecxz
fistl
push
lahf
and
or
and
xchg
xchg
into
mov
das
call
add
inc
pop
jo
jecxz
inc
mov
mov
jge
xor
push
fldl
and
and
push
pop
mov
loope
sub
test
ret
or
loop
arpl
xchg
mov
fnstcw
in
push
rolb
inc
cmp
cmp
cmpsb
jle
hlt
dec
push
lods
pop
sbb
std
scas
add
cs
jl
cltd
mov
inc
jne
ljmp
xor
mov
nop
testb
mov
dec
xchg
xchg
in
negb
addl
push
popa
das
popa
jo
mov
clc
jg
test
push
mov
sbb
in
add
popa
add
aaa
push
es
sbb
pop
xor
dec
sbb
inc
aaa
inc
push
inc
in
out
dec
in
push
jg
ljmp
push
push
aas
adc
dec
mov
cmp
cmp
mov
cld
decl
mov
in
and
inc
in
pusha
in
push
jns
xchg
in
xor
cmp
dec
outsb
xor
dec
mov
lea
outsb
inc
cmc
das
into
adc
mov
xor
nop
sahf
jmp
out
mov
jnp
xchg
adc
incl
push
aas
test
je
movb
fisttpl
fbstp
push
mov
btr
mov
mov
jno
xchg
mov
cmp
jne
xor
das
sarb
push
scas
push
and
xchg
hlt
push
cli
mov
add
test
xchg
jge
xor
xchg
pushl
push
cli
add
popf
push
dec
stc
jns
xchg
add
dec
and
lcall
data16
push
jmp
mov
int3
sbb
data16
iret
push
xchg
out
xor
lea
cltd
cs
sub
je
push
mov
testb
cltd
sarl
push
or
ret
pop
addr16
jmp
push
lret
neg
into
inc
daa
je
imul
mov
mov
call
cld
dec
mov
testb
ja
or
insl
call
outsb
fdivrs
mov
jne
xor
ja
pop
int
jns
push
call
pop
or
sub
iret
sub
jg
push
pop
or
loope
mov
aad
xor
inc
daa
inc
mov
pop
jae
dec
push
fistpll
jb
pop
pop
push
sbb
pop
imulb
jae
cld
add
xchg
sahf
push
and
xchg
hlt
incl
jg
inc
dec
sbb
add
and
jecxz
dec
clc
dec
push
repnz
push
stos
cwtl
pop
cmc
sti
mov
lea
mov
pop
lcall
lods
jns
add
mov
out
lods
inc
dec
std
fwait
xor
and
call
xchg
orb
or
or
mov
icebp
incl
inc
and
xchg
adc
dec
rolb
cli
es
jge
jg
clc
ja
aas
inc
jo
addr16
cmp
xchg
add
fildll
inc
lret
mov
jno
cmpsl
sti
sti
into
adc
inc
sub
clc
ficoms
push
out
mov
ljmp
jo
and
inc
jb
lea
mov
sbb
xchg
mov
inc
addr16
decl
add
add
mov
dec
cmpsl
add
aas
dec
push
jp
mov
insb
xchg
or
outsb
call
loope
lahf
xor
dec
cmp
cmp
arpl
add
mov
movsb
push
push
out
push
in
mov
pop
gs
in
adc
and
or
in
mov
add
jbe
push
gs
sbb
inc
sub
mov
sahf
fimuls
ss
adc
movsb
push
es
and
scas
mov
in
push
add
adc
lock
inc
jle
inc
mov
insl
imul
fstl
mov
mov
and
xchg
inc
call
adc
stos
adc
jmp
pop
rolb
mov
test
mov
jne
or
add
decl
test
and
mov
xchg
pop
adc
arpl
xchg
aas
inc
inc
add
std
ljmp
mov
or
cmp
cwtl
or
mov
dec
sar
jp
adc
fldenv
out
sbb
in
mov
js
sti
and
arpl
dec
lock
test
sbb
lock
and
mov
pop
data16
js
scas
mov
mov
inc
mov
ljmp
shlb
sbb
movsl
jg
or
loopne
jg
notb
insl
js
out
cmp
rcr
push
dec
inc
sub
add
or
pop
ljmp
mov
adcb
int
jb
lret
decl
fsubp
adc
subl
xchg
add
adc
cmp
shll
out
mov
xchg
xchg
test
adc
faddl
mov
xor
ljmp
cmp
es
sub
inc
testl
sub
outsb
roll
lcall
mov
cmpsl
sarl
std
ljmp
and
jge
sbb
imul
mov
incl
movl
pop
enter
mov
jo
mov
add
cmp
insl
call
sub
sbb
and
inc
mov
test
or
aas
pop
sbb
clc
cmp
nop
insl
add
push
mov
inc
gs
inc
out
cmpb
or
addr16
test
push
filds
cmp
pushl
pusha
fs
dec
jg
imul
cld
incl
sahf
stos
enter
fisubl
std
movsb
mov
push
enter
icebp
call
out
ret
hlt
arpl
subb
fiaddl
and
cwtl
aas
stos
out
mov
mov
xchg
xchg
xchg
fsubrl
jmp
std
call
pop
xchg
jmp
add
mov
push
insl
adc
mov
jmp
les
mov
pop
fs
lods
inc
into
sub
stos
adc
mov
and
inc
in
xor
mov
jb
movsb
or
ret
insl
cmp
pop
add
dec
sub
mov
testb
cwtl
cmp
std
test
js
call
sarb
push
pop
add
lcall
push
cmpsl
add
loopne
push
cmc
pop
push
testb
lods
cmp
mov
test
and
xchg
push
minps
shll
out
movsb
cmp
dec
rcpps
je
stos
incl
cmpsb
lds
push
pop
ret
add
adc
inc
andl
sbb
mov
jmp
arpl
sbb
inc
jle
in
jg
mov
push
pusha
movsb
dec
lock
pop
js
sbb
mov
jg
incl
jno
mov
sub
mov
bound
aas
fistl
stos
xor
xchg
loop
nop
cmpsb
cmpsl
jns
pop
mov
mov
push
adc
aas
jecxz
jg
inc
lods
mov
rolb
add
incl
xchg
leave
xchg
mov
jae
mov
jne
int3
add
les
arpl
or
bound
lcall
xchg
pop
movsl
aaa
push
fbld
sbb
sub
test
jne
mov
gs
cmpsl
icebp
jmp
push
jle
or
sbb
out
ss
jge
sarl
subb
ficoms
fldl
lods
sbb
ljmp
or
icebp
pop
ret
stos
cmpsb
data16
cmp
mov
stos
push
xchg
or
sub
ja
fidivrs
je
sbb
mov
pop
insb
bound
leave
adc
enter
out
xchg
jmp
cs
mov
xchg
sbb
fildl
test
sbb
sti
cwtl
xchg
or
mov
mov
xor
test
lods
mov
nop
mov
icebp
pop
rolb
sar
aaa
sbb
cmpb
inc
std
add
lcall
or
sub
gs
and
cwtl
test
add
adc
jg
push
sub
push
sarb
xchg
mov
es
imulb
insb
or
jo
push
fistpll
icebp
inc
push
pop
mulb
add
fs
pop
cmp
dec
repnz
leave
enter
scas
mov
ljmp
mov
push
jno
int
inc
adc
movsb
mov
ret
inc
fbld
popf
mov
xchg
adc
out
and
outsb
ret
mov
sahf
pop
mov
sbb
cltd
cli
test
sbb
ja
push
cmp
mov
jg
xor
std
sbb
dec
lea
xor
jg
decl
pop
icebp
fs
flds
mov
je
test
lods
jl
adc
cmpsl
incl
jne
inc
nop
mov
or
enter
jg
lcall
in
imul
pop
mov
sub
jmp
and
jb
inc
rorb
jge
fst
inc
xlat
pop
ret
xor
test
mov
call
pop
les
mov
es
push
sbb
in
test
xchg
xchg
mov
lods
mov
test
jbe
jbe
mov
movswl
cmp
shrb
addr16
outsl
jb
jmp
out
xor
loop
and
sbb
out
xchg
pop
jne
out
fcomip
call
mov
shl
cli
inc
push
push
rclb
add
movsb
clc
testl
popf
imul
icebp
cmpsl
insb
cld
sbb
jmp
shrb
jmp
into
movsb
sub
xchg
movsl
fbstp
mov
mov
fs
fmul
ljmp
adc
movsb
rorl
and
lods
xchg
inc
sarb
jecxz
push
cmp
inc
xor
stos
mov
enter
dec
and
jns
mov
into
mov
jg
cmp
jmp
xchg
add
adc
imul
arpl
in
pop
sar
lcall
inc
movl
dec
adc
insl
xlat
mov
dec
movsl
push
inc
jmp
test
loopne
push
stc
sbb
mov
bound
pop
add
mov
lods
decl
jge
pusha
fadds
xor
unpcklps
pushf
xorb
xchg
pushl
pop
adc
notl
bound
pop
jo
gs
push
add
out
mov
outsl
shld
call
gs
lods
sbb
cmpsb
jmp
mov
out
lods
jle
jns
dec
lahf
push
ret
std
lcall
dec
pop
mov
or
xchg
int
xchg
jae
out
filds
les
push
or
cmc
sbb
ss
mov
rol
test
std
ljmp
popf
jle
hlt
xchg
call
stos
loop
mov
mov
mov
sub
rcll
mov
jl
add
cli
call
lcall
mov
movsl
sub
mov
mov
inc
call
and
movsb
test
out
xor
nop
insb
xor
mov
test
insl
add
into
push
call
xchg
in
cmc
xchg
dec
dec
ret
enter
jnp
pop
dec
test
into
push
inc
adc
andl
mov
test
mov
xchg
in
es
movl
jg
mov
lret
test
xchg
xchg
fdivp
decl
iret
mov
xchg
xchg
or
add
popa
xor
fbstp
mov
out
push
sbb
mov
jns
jle
outsb
xchg
pop
mov
ret
mov
je
dec
pusha
dec
lods
cmp
mov
inc
xchg
add
das
nop
icebp
xchg
pop
into
mov
int3
mov
movsb
jecxz
jg
add
in
bound
push
add
mov
clc
inc
int
sub
or
sahf
cmpsl
test
in
and
cmp
jp
clc
cmp
ljmp
xchg
jmp
adc
enter
mov
outsl
mov
dec
int3
sbbl
lods
out
rol
mov
jno
sub
dec
iret
mov
mov
mov
xchg
or
or
mov
fsubl
mov
pop
aas
adc
cli
lods
push
jle
xchg
mov
xor
dec
es
mov
ljmp
data16
daa
xchg
sbb
test
sbb
push
pop
jmp
xchg
incl
repz
test
cltd
xor
add
inc
js
jp
xor
jl
push
out
sbb
jg
pop
lds
xchg
.byte
in
mov
in
mov
movl
mov
inc
add
and
ret
int3
add
in
add
add
movl
push
sahf
cmp
test
cwtl
push
push
lea
jg
push
call
add
cmp
std
mov
fscale
push
scas
mov
fsubs
lahf
inc
test
mov
lods
frstor
cmp
mov
out
int
xchg
and
push
sar
push
push
xchg
xchg
jo
xor
pusha
testl
xor
mov
xchg
mov
pop
push
rorb
js
push
shlb
insb
xor
lea
into
inc
sbb
loopne
iret
gs
push
xchg
out
test
push
enter
mov
or
je
add
cmp
push
xchg
mov
jmp
insl
out
test
movzwl
mov
divl
mov
imul
in
out
cmpsl
dec
je
int3
loope
nop
fsubl
addr16
push
cmp
mov
test
pushf
pop
sbb
push
test
inc
inc
sub
mov
jmp
mull
xor
dec
inc
dec
repnz
mov
pop
jb
mov
mov
in
adc
pusha
rol
cli
fsubl
mov
dec
add
cmp
lods
dec
or
inc
cmp
add
mov
adc
popf
repnz
stos
sbb
mov
adc
lock
pop
mov
add
mov
loopne
std
or
jl
nop
mov
mov
fnsave
aas
xchg
lea
pushf
inc
cmp
xchg
mov
dec
xchg
inc
sti
inc
cmp
add
adc
subb
insl
insb
xor
fiaddl
dec
push
push
pop
xchg
inc
subl
push
mov
push
lahf
inc
push
lret
cmp
inc
push
lcall
cmp
mov
mov
sub
addr16
mov
jne
jno
add
or
dec
mov
jle
in
xor
lock
or
enter
loopne
in
shl
enter
pusha
cmpsb
pushf
inc
or
mov
mov
push
int
aam
or
aam
rclb
dec
aam
inc
jae
lea
push
jo
insb
sbb
loopne
clc
xorl
inc
mov
fs
xor
mov
fnclex
xor
push
rolb
sbb
adc
call
sub
jno
pushf
in
push
cmp
pop
jmp
dec
fsubrs
pusha
aas
jo
sbb
mov
xchg
adc
clc
push
ret
or
dec
fcoms
mov
es
dec
in
les
sar
fs
inc
push
cmp
dec
mov
cmpsl
xor
and
adc
scas
insb
jb
and
je
js
adc
mov
sbbb
je
movsl
movsb
popa
jns
inc
fs
push
cmp
cmp
lahf
xchg
pop
push
mov
sbb
xor
mov
xor
setle
std
adc
pop
add
adc
push
sbb
test
orl
cmp
movsb
or
fcoms
mov
add
mov
sub
inc
rclb
cld
mov
mov
cmp
mov
sbb
sub
add
or
jnp
push
outsb
dec
adc
jle
leave
sbb
cld
cmp
jne
aaa
sbb
sub
cmpsl
insb
lret
inc
nop
lahf
jmp
xchg
adc
push
xchg
jae
movsb
subl
test
xor
movzbl
cs
cmp
add
ds
lret
inc
add
fwait
mov
pop
or
mov
push
push
mov
and
jmp
add
mov
movsb
movsl
inc
adc
adc
dec
push
cmpsb
shlb
std
sbb
popa
pop
les
add
insb
shrb
cmp
sub
inc
push
adc
faddl
adc
into
push
sbb
jae
cmpsl
rorb
sbb
aaa
sbb
cmp
or
or
int
into
popa
js
dec
pop
iret
out
mov
mov
les
and
pop
lea
in
xchg
sbb
mov
xchg
or
mov
and
lcall
insb
rolb
mov
aas
stc
jo
sbb
add
jb
push
fmuls
sbb
nop
dec
adc
rcl
mov
mov
mov
es
sbb
mov
ret
ret
ficoml
inc
das
cmpsl
movb
int3
js
push
inc
lock
push
or
mov
xchg
pop
ret
mov
add
or
outsb
jp
add
ret
adc
mov
cwtl
jl
adc
sti
daa
xchg
cli
insb
xchg
push
rolb
cmpl
mov
rcll
pop
popf
and
shrb
push
test
cmpsb
std
jp
and
mov
or
xor
std
xchg
xchg
or
test
gs
clc
dec
les
gs
inc
clc
fistl
insb
rclb
and
dec
sarb
int
popa
and
push
mov
jno
push
fsts
mov
loopne
stos
jge
xchg
xor
dec
jae
test
inc
xorl
jbe
clc
mov
stc
push
int
in
enter
sbb
sub
loopne
cmpsb
inc
fmul
mov
adc
fs
iret
inc
mov
dec
adc
pop
js
push
pop
fs
or
fisubs
xor
arpl
in
add
je
lods
lahf
or
ret
pop
cltd
psrlq
test
lahf
mov
push
in
mov
jae
testl
icebp
lock
add
add
mov
fsts
xor
xchg
mov
gs
or
popf
push
gs
sbbb
adc
sub
icebp
sub
push
inc
in
mov
loopne
int3
sbb
xchg
pop
jl
jnp
inc
sbb
mov
adc
sbb
inc
xlat
xchg
in
adc
add
jge
and
xor
and
sub
inc
aad
outsl
in
lcall
jl
fsts
ja
mov
adcl
adc
inc
roll
cmp
sbbl
subl
sbb
arpl
sbb
xchg
movsb
sbb
adc
jl
mov
xchg
test
pop
sbb
pop
shll
sbb
jge
add
mov
sbb
aam
adc
mov
add
fsubrp
out
iret
sub
sbb
jne
pop
sub
push
pop
mov
add
das
xor
pusha
xlat
lock
sbb
mov
test
gs
stos
mov
mov
sub
movsb
inc
add
mov
push
adc
xchg
or
mov
fidivl
mov
out
inc
jo
test
nop
cld
les
mov
dec
push
inc
and
sbb
xor
outsb
xorl
jmp
daa
sub
fmuls
mov
xorl
sub
sbb
push
mov
push
push
mov
mov
sbb
sbb
fsubl
inc
sahf
adc
inc
xchg
cmp
shll
lea
lds
je
shl
or
js
push
arpl
sbb
add
movsb
jecxz
scas
xchg
test
adc
xor
mov
push
mov
cmp
insb
mov
sub
and
fdivrp
lea
insl
bound
dec
fs
daa
push
cmc
movsl
jb
fsubrl
je
subl
ljmp
jns
cmp
mov
mov
mov
pop
mov
adc
dec
add
sbb
jecxz
mov
test
mov
mov
mov
movsb
es
shll
add
in
cs
push
jge
dec
imul
stc
shl
ds
or
iret
push
xor
inc
js
test
mov
cmp
je
dec
in
jb
and
jb
jnp
or
push
jecxz
cmp
repnz
dec
jo
mov
cmp
mov
fistpl
jg
out
ret
inc
cli
or
or
fwait
sbb
add
in
in
je
sahf
jge
add
inc
add
fwait
xchg
repz
add
data16
gs
mov
cs
loope
shl
mov
icebp
mov
in
push
push
repnz
push
mov
push
leave
push
in
sub
lret
push
rol
xor
inc
outsl
add
loopne
out
adc
adc
in
andb
test
dec
push
movsb
inc
call
push
push
jno
cs
test
add
push
jnp
in
cmp
mov
xchg
mov
mov
and
mov
sbb
imulb
and
fdivs
lea
neg
sbb
mov
and
push
mov
mov
push
push
mov
mov
in
sbb
addb
and
sbb
mov
bound
movsb
or
cmp
mov
into
dec
sub
cmpsl
push
pop
xor
lcall
fidivl
mov
xchg
js
and
or
add
cmp
add
lea
cmc
mov
mov
cltd
test
pop
cmc
pop
rolb
sub
mov
add
sbb
sarb
rolb
and
rol
vpacksswb
pop
js
add
fcmovnu
js
js
or
inc
mov
test
int3
jg
or
arpl
jno
cmc
adc
xchg
pushf
cwtl
and
movsb
sbb
mov
ljmp
adc
mov
aaa
mov
nop
sub
imul
mov
inc
inc
jbe
lock
daa
pop
pop
shrb
out
rcrb
push
fiaddl
dec
pop
mov
lods
popw
test
and
pop
sub
or
inc
and
lods
adc
mov
mov
int3
sbb
push
lahf
cmpsl
notb
in
sbb
and
es
xorl
jb
and
lock
jle
mov
fcoml
or
or
mov
inc
xchg
adc
add
sbb
and
sar
and
movb
sub
sbb
sub
lea
sbb
ficoml
push
or
add
add
or
xchg
xchg
or
stos
xor
lods
xchg
lret
lds
lret
ret
fld
or
and
lock
mov
test
mov
fistps
cmp
inc
std
shrl
into
and
test
sub
sbbl
cmpsl
loope
sub
lea
push
pusha
push
insb
adc
hlt
in
rcll
call
adcb
xchg
test
mov
mov
jl
cmp
fs
lock
shl
pop
sbb
mov
push
mov
inc
cld
push
inc
incl
inc
enter
js
add
scas
fidivrl
pop
push
outsl
push
cld
ret
dec
pop
out
mov
mov
aam
pusha
filds
jg
or
push
cmp
jp
cmpl
loope
cmp
adcb
lea
mov
pusha
dec
push
mov
push
push
inc
or
push
jle
inc
xlat
cmpsb
inc
add
or
pushf
stos
jmp
add
sti
std
iret
and
xchg
dec
push
cmp
jge
sub
sub
clc
mov
sbb
jno
sbb
and
cld
jbe
popf
fisubrs
or
in
int3
jmp
shl
aaa
leave
lcall
mov
jbe
filds
pop
add
add
test
call
or
xchg
lock
jnp
loop
push
enter
or
sti
xor
jge
jne
push
adc
loopne
dec
loopne
sub
jle
pushw
js
inc
adc
and
loope
fndisi(8087
sub
cwtl
jmp
jae
inc
imul
push
les
fsubrl
aam
ja
in
sbbb
xchg
jmp
or
loope
mov
push
add
push
xor
decl
inc
hlt
xchg
bound
mov
and
jne
je
push
es
lods
insb
clc
push
mov
lret
cmpl
and
mov
out
xor
aam
rcl
rorb
adc
or
jmp
popa
mov
fsubrl
call
add
adc
add
outsl
ss
int3
xor
shr
cmp
outsl
clc
add
add
xchg
inc
jmp
cmpsl
push
hlt
push
adc
je
cmp
or
mov
push
hlt
and
adc
ja
out
aaa
and
adc
push
push
mov
push
sbb
dec
ret
mov
cmp
aam
or
mov
mov
dec
icebp
movl
adc
mov
jbe
xor
jp
pop
add
or
push
pushf
cmpsb
loope
pop
or
add
sub
mov
inc
add
fdiv
daa
repz
xor
inc
enter
int3
dec
xchg
aad
mov
add
rclb
add
mov
js
out
push
fwait
mov
jge
push
jne
push
cld
je
jbe
cmp
sbb
push
and
call
sbb
and
in
cmp
lret
cmp
or
jae
insb
cld
jge
inc
int
aas
sub
hlt
in
add
jae
hlt
leave
out
in
mov
imul
and
cmp
mov
sbb
lock
inc
sbb
pusha
fdivs
push
lock
adc
call
outsl
in
cmpsb
or
and
mov
mov
hlt
cmp
jne
cmpb
shlb
test
sub
sub
dec
add
adc
fcmovbe
and
push
call
int3
rcr
je
or
fs
cmp
xchg
stos
fdivrs
adc
outsl
mov
pop
jmp
cli
dec
sub
sub
add
push
adcb
adc
push
push
dec
mov
xor
mov
arpl
inc
sub
adc
sub
mov
xor
loopne
adc
push
in
out
addb
pop
dec
xchg
dec
movsl
nop
mov
adc
pop
orl
insl
gs
lds
stc
and
dec
aaa
mov
rorb
dec
sbb
or
mov
xchg
push
sub
pop
in
or
mov
pop
adc
pop
push
cltd
mov
lds
in
or
mov
and
out
or
stos
outsl
inc
ss
gs
sub
adc
loope
ror
mov
sub
sahf
dec
inc
inc
jno
js
xor
cmp
fmul
or
cmpsb
cmp
add
pop
cmp
inc
inc
or
push
xchg
mov
push
cs
adc
and
mov
outsb
es
or
pop
ret
loope
push
inc
sub
or
std
mov
or
xchg
dec
xchg
push
mov
xchg
xchg
xchg
test
clc
xchg
mov
fsub
imulb
mov
nop
xor
int
mov
inc
les
inc
out
popw
mov
or
jge
mov
cmp
test
cmp
adc
int3
orb
push
xorl
andb
push
cmp
cmp
jo
jns
enter
jnp
mov
sbb
jp
jg
sub
sbb
inc
lock
or
mov
cmp
jae
pushf
pop
pushf
stc
add
test
mov
clc
push
jbe
out
or
add
pop
das
imul
adc
mov
das
stc
or
testl
adc
loope
xlat
jo
dec
or
xchg
mov
push
and
and
xlat
roll
or
das
mov
xchg
popa
push
sub
mov
mov
sbb
nop
fs
or
and
lds
repz
bound
das
push
pop
and
sbbl
js
and
call
sbbl
in
and
or
lock
inc
xor
xchg
mov
push
or
add
adc
out
pusha
test
mov
adc
mov
cltd
inc
sub
xor
fimull
aas
addr16
dec
jl
sub
ret
filds
mov
lea
out
in
cmp
test
and
push
movsb
mov
mov
inc
lahf
adc
mov
jge
add
xor
push
mov
into
or
jae
mov
cwtl
xlat
jl
sbb
mov
cmp
mov
test
aas
sbb
mov
add
push
dec
addl
clc
jns
adc
ljmp
aam
or
jbe
das
js
mov
mov
adc
loope
sar
adc
into
lock
dec
sbb
imul
sbb
pop
mov
dec
xchg
inc
out
in
or
data16
dec
dec
js
and
mov
insb
es
adc
dec
or
push
out
mov
or
pop
sub
int
mov
mov
add
enter
cmp
mov
cwtl
dec
mov
ret
pop
sub
vpackssdw
push
es
jne
in
fdivs
mov
shrl
or
adc
loop
adc
lcall
dec
cmp
jae
mov
mov
arpl
adc
mov
cmp
pushf
mov
cmp
rolb
adc
sbb
mov
in
out
xchg
mov
mov
mov
sub
sbb
mov
and
mov
mov
inc
lret
sahf
xor
imul
cmpsl
outsb
rol
sarl
das
into
mov
push
or
mov
lods
les
dec
lods
lods
mov
outsb
or
lcall
movsb
stc
jg
test
test
sub
movsb
lock
mov
push
jne
lods
jmp
jbe
add
fwait
cmp
jns
jecxz
in
mov
sbb
lcall
push
enter
fldcw
dec
in
test
test
mov
scas
mov
fistps
sub
pop
clc
inc
ret
cmpsb
push
cli
movsl
movsb
sub
xchg
rolb
adc
mov
push
jecxz
cmpsl
les
sub
cmp
enter
fdivrl
test
adc
int
mov
es
or
or
sbb
mov
mov
sbb
mov
mov
and
mov
scas
test
xor
and
lcall
shlb
xchg
dec
mov
mov
je
and
in
shll
sub
js
xor
je
sub
inc
jecxz
in
lret
adc
movsl
in
es
dec
cs
fsub
fdivrl
pop
mov
or
dec
dec
sti
inc
jo
icebp
mov
loopne
imul
push
lret
mov
or
repnz
jmp
sti
fcoms
xchg
fcomps
jmp
arpl
loopne
rorl
fdivrs
orb
sbbb
pop
add
xchg
push
out
dec
cld
add
jns
push
sbb
sub
sub
shll
lea
sub
push
loopne
jle
push
leave
sub
or
fidivrs
je
cwtl
or
jae
cs
shlb
in
loope
push
aam
orl
push
movsb
loopne
jmp
andb
bound
jne
call
push
stc
push
push
shlb
je
test
out
or
rcrb
shl
or
add
enter
cwtl
dec
adc
xor
jne
add
lret
or
ret
adc
push
enter
outsb
in
sub
adc
fs
xchg
enter
es
les
test
es
loope
add
rcrb
jns
cmpsb
mov
rcrb
in
in
iret
enter
pop
push
enter
sub
xchg
dec
mov
and
add
test
loopne
mov
and
mov
sub
popa
ret
push
andb
jmp
dec
cmc
or
push
sbb
out
push
push
cmp
call
mov
mov
mov
sub
dec
lahf
sbb
sbb
jmp
fcomp
pop
fmuls
xchg
js
or
mov
fdivl
into
sub
sub
shlb
test
inc
repz
sub
enter
fadds
add
jo
dec
pop
insl
imul
mov
test
adc
pop
and
fmuls
bound
add
aas
or
dec
daa
jmp
and
adc
cmp
ret
fdivl
aaa
sbb
roll
lcall
je
sub
hlt
mov
mov
add
test
add
in
mov
lret
inc
inc
shll
call
fs
sub
data16
jne
xor
lahf
mov
inc
aas
fistpl
movsb
pusha
sub
je
mov
cld
mov
cld
pop
gs
cmpsb
cmp
clc
jb
jle
cld
xorl
es
add
cmc
ja
dec
add
add
aas
adc
lods
test
test
and
mov
inc
mov
add
or
mov
mov
jne
clc
add
mov
jmp
insb
lea
call
dec
and
adc
insb
mov
movb
cmp
xor
xor
subb
sub
and
movl
mov
dec
add
add
mov
mov
test
je
fisubrs
lock
insl
aaa
lds
in
aad
lock
add
movsb
or
rcrb
add
clc
xlat
ss
or
sub
mov
fs
popf
in
pop
add
add
pop
int
stos
call
call
push
repnz
ret
pop
xor
sbb
mov
or
mov
and
and
scas
sbb
adc
sbb
adc
cmp
nop
and
movsl
into
push
pop
inc
xchg
cmp
decb
inc
cmp
jbe
fmull
test
adc
mov
jl
rclb
mov
in
loope
pop
sub
push
add
sbbl
mov
jbe
popf
aad
sub
ss
sub
jge
or
sbb
jmp
jmp
cmp
or
dec
scas
dec
shll
sbb
sub
inc
dec
cmp
shlb
or
sub
adc
lock
addb
dec
sub
cmp
fcomp
sub
lods
sub
mov
lea
cli
mov
add
jmp
jg
cmp
inc
mov
add
mov
push
and
add
and
push
add
adc
nop
std
decl
adc
addr16
cmp
mov
out
xchg
in
dec
dec
popa
push
xchg
dec
inc
jp
lods
push
mov
js
lods
bound
fidivs
add
test
push
mov
push
imul
cltd
or
push
xchg
rclb
std
mov
xchg
pop
test
xchg
lea
jge
mov
adc
shrb
adc
std
out
push
adc
inc
add
add
inc
pop
sub
jo
test
dec
cs
cmp
pop
mov
je
add
or
psraw
jl
mov
repnz
pushf
xchg
or
adc
mov
adc
mov
push
cmpsl
jl
jmp
push
cmp
mov
and
inc
mov
cmp
xchg
inc
rolb
test
cmpsl
or
movsl
aaa
int
xor
insb
push
adc
add
add
nop
push
dec
push
mov
push
notl
add
and
jbe
repnz
push
les
push
push
sub
outsl
xchg
inc
pop
pop
imul
xor
cmp
mov
pop
mov
xor
pop
sbb
test
push
or
push
jmp
or
sub
xchg
xor
aaa
cmp
pop
rol
jl
push
lea
aad
orb
addl
inc
mov
push
sbb
push
jnp
stos
add
mov
aas
xchg
push
add
add
jl
xorb
and
test
sbb
movsb
push
fstpl
and
stos
xor
mov
pop
mov
into
pusha
add
dec
adc
jbe
ljmp
or
mov
inc
inc
cld
arpl
std
fiaddl
xchg
dec
cmp
push
pop
mov
imul
rcll
pushf
pop
das
add
and
push
sbb
push
hlt
andnps
mov
push
repz
mov
or
inc
inc
popa
movl
cmp
bound
inc
or
jno
xlat
xor
insl
cmpl
imul
cs
pop
es
inc
xchg
loopne
add
mov
js
push
cs
js
push
add
imul
dec
xor
inc
mov
mov
add
and
and
out
ljmp
gs
lods
orb
adc
loopne
jns
nop
lret
test
dec
inc
pop
lea
out
sbb
dec
push
movsl
daa
pop
dec
gs
inc
adc
push
shll
test
out
adc
or
push
inc
dec
dec
sbb
add
or
xor
ret
in
rclb
lahf
lea
push
jnp
sbb
dec
aaa
jbe
pop
adc
xor
test
call
out
imul
adc
mov
xor
pushf
out
sub
movl
xor
ret
jecxz
adc
mov
dec
xor
cmpl
or
adc
adc
stos
mov
test
xchg
addl
test
sub
pushf
insb
xchg
cmp
mov
les
push
mov
mov
pusha
mov
mov
cld
mov
stos
jae
adcb
add
mov
dec
mov
or
jae
adc
push
nop
jo
cwtl
dec
adc
jnp
fcompl
adc
shlb
inc
add
js
and
adcb
mov
adc
scas
icebp
mov
mov
mov
test
arpl
insb
ret
push
sbbb
fs
xor
lds
loop
repz
or
dec
add
js
scas
xor
movsb
dec
pop
adc
pop
xor
add
adc
push
push
jecxz
mov
inc
add
inc
and
mov
push
mov
sbb
lea
sarb
testl
mov
adc
add
jecxz
dec
push
into
cmpsl
std
lods
in
or
dec
mov
out
lods
push
js
xlat
cmp
ljmp
cltd
mov
inc
push
jl
push
or
sub
popa
push
xchg
or
ss
mov
mov
lea
pop
adc
push
inc
jmp
pop
jmp
mov
lea
aas
aam
xor
in
xor
sub
cmp
xchg
mov
mov
cmp
shr
and
push
scas
push
xchg
jo
popa
cmpsb
sbb
aam
std
mov
xor
shrb
xchg
leave
and
add
or
pop
loope
inc
daa
push
mov
pop
sbb
adc
arpl
imul
movsb
cmpsb
dec
loop
cli
rorl
fs
movsb
dec
pop
imul
sub
adc
out
mov
dec
xchg
aam
mov
push
aad
mov
cld
and
lock
fildl
push
add
sbb
daa
lds
adc
lret
enter
mov
imul
and
sub
aam
pushf
ja
push
stos
bound
pop
insb
xor
in
movsl
movsb
dec
xchg
inc
mov
push
cmp
jmp
jmp
mov
mov
jmp
gs
test
dec
aad
lret
mov
fisttps
sbb
mov
mov
and
orb
and
sbb
pop
pushf
mov
push
mov
shl
jnp
or
pop
adc
push
dec
mov
mov
cs
sbb
mov
outsl
arpl
scas
and
lcall
add
dec
stos
add
xchg
aaa
popa
jb
mov
lret
xor
addb
add
add
add
test
stos
and
jecxz
push
stos
jmp
push
sbb
xchg
xchg
xchg
xchg
mov
mov
orb
jl
adcl
arpl
out
pop
inc
add
jl
dec
rcr
fwait
dec
xchg
ja
jnp
les
out
dec
fstl
mov
mov
movsb
xor
add
push
sbb
xor
xor
imul
or
movb
pop
jge
jecxz
cmp
movsb
addr16
js
xchg
pop
xchg
adc
dec
sub
mov
insl
sbb
aas
or
rorb
mov
xchg
dec
movsl
cwtl
cwtl
test
pop
xor
add
lods
pop
pop
jp
sub
xchg
or
lahf
lods
out
dec
mov
or
cltd
push
mov
ja
loopne
add
ds
movsb
enter
mov
pop
mov
inc
js
dec
sub
xchg
dec
sub
fsubl
inc
aam
xor
push
idivl
jno
inc
lods
fs
xor
lods
imul
fdivr
stos
or
or
lret
outsb
test
and
mov
push
shl
xor
jno
aad
pushf
push
punpckldq
sbb
and
sub
jb
je
mov
push
jmp
mov
pop
or
loop
sbb
or
hlt
andb
sbb
insb
mov
or
lret
jmp
lods
xor
lahf
add
addb
inc
enter
cmpsl
and
outsl
ret
mov
enter
add
movsl
loope
sbb
add
inc
pusha
leave
adcb
cltd
sub
or
addl
sbb
xchg
mov
xchg
ret
test
and
fs
sub
gs
xchg
stos
xorb
mov
clc
push
nop
pop
decb
lds
push
popa
bound
inc
mov
stos
or
sbb
cmp
mov
icebp
push
and
jns
lret
and
xchg
mov
and
xlat
add
bound
mov
or
ss
xor
and
or
sub
jne
and
rolb
rorb
nop
faddl
test
or
jp
jl
cmpsl
push
test
pop
push
push
mov
xchg
pop
sbb
fs
or
mov
cmpb
cmp
jge
mov
jl
dec
cmpsb
dec
cmp
mov
jne
mov
mov
add
mov
test
inc
sub
and
push
push
loopne
ror
test
add
in
xchg
add
jl
adc
arpl
sar
aaa
bound
iret
inc
mov
mov
add
or
push
pop
mov
hlt
stc
add
cld
dec
xor
jl
nop
dec
jl
add
pop
sbb
cld
mov
adc
pop
cwtl
sbbb
inc
xchg
aad
adc
sbb
movb
add
jmp
cmpsl
push
int3
loopne
int
outsl
pop
ss
insl
jb
mov
jb
rcll
ja
add
and
leave
cwtl
clc
push
push
jnp
insl
jmp
movb
add
and
adc
lods
andb
imul
and
xlat
cmpb
inc
jmp
in
sbb
lea
xchg
test
add
das
nop
add
pusha
popa
pop
incb
pusha
adc
mov
sub
pop
mov
adc
loope
movsb
pop
mov
notl
add
cmp
ret
sbb
repnz
ret
cwtl
pop
jbe
and
aas
inc
xchg
inc
cmpsb
mov
pop
sub
xchg
dec
call
sub
sub
sub
ret
lret
repz
popa
into
aas
cmp
sub
xchg
imull
sub
sub
add
add
sti
cmp
push
lea
xor
pop
cmpsl
xor
sub
dec
or
mov
mov
in
cli
movsb
testl
not
push
mov
cmp
push
nop
lret
cmp
fucom
mov
ret
addl
jne
dec
or
and
sbb
adc
movsl
mov
mov
xor
push
popa
cltd
dec
jbe
pop
inc
decl
inc
push
lcall
pushf
xor
or
xchg
inc
aam
ret
je
shll
inc
imul
iret
nop
xchg
and
add
in
mov
lcall
test
xchg
loop
cmp
pop
mov
gs
mov
in
cwtl
push
dec
mov
adc
aaa
mov
fnsave
lock
xor
incl
not
or
and
lahf
push
adc
push
mov
shll
inc
pop
pop
pop
jne
les
dec
adc
inc
mov
and
xchg
insl
nop
inc
loopne
mov
ja
pop
lcall
rclb
dec
mov
mov
and
push
mov
ja
and
mov
dec
test
push
insb
pop
in
out
sub
shrb
dec
add
mov
in
push
je
std
cwtl
xor
add
fwait
test
adc
fwait
mov
pop
pop
add
xchg
pop
add
sbb
loopne
jl
jge
and
pcmpeqb
mov
imul
stos
or
pop
dec
inc
test
sub
outsb
add
ret
xchg
sub
cmp
ret
cmp
test
add
dec
pop
icebp
mov
nop
pusha
sbbl
xchg
gs
ret
mov
icebp
add
sub
xchg
or
xor
pop
lea
xchg
sti
add
inc
sub
or
rcll
testl
lods
push
movsl
sbb
inc
mov
fmull
bswap
loope
mov
mov
shll
pop
out
mov
push
jae
jae
fs
pop
or
int
je
pusha
and
adc
cltd
je
lea
insb
dec
mov
pop
nop
orb
std
mov
lds
mov
inc
and
leave
js
pop
mov
and
nop
xchg
xchg
push
mov
testl
xor
lods
fiaddl
stos
repnz
sub
fimull
push
mov
inc
pop
xchg
xchg
pop
cmp
push
mov
rorb
cmp
xor
insl
or
mov
incl
dec
roll
movsb
aad
inc
pop
mov
test
sbb
mov
dec
adc
xchg
jle
or
movsb
test
mov
mov
cmp
mov
dec
scas
push
jno
mov
xchg
mov
test
jg
movsb
add
sbb
inc
and
xor
push
lcall
cmpsb
data16
nop
push
mov
dec
sbb
shl
xlat
lea
test
mov
dec
xchg
fisttps
outsl
dec
sbb
loop
xor
leave
out
sbb
sbb
fs
mov
adc
andb
or
sbb
cltd
pusha
testb
iret
cmp
inc
stos
inc
daa
cmc
nop
popa
adc
pop
dec
aas
test
mov
outsb
or
adc
insl
xchg
mov
iret
sub
mov
add
xor
mov
imul
or
or
push
ss
out
dec
add
sbb
adc
jne
mov
imul
fdivl
orb
lods
out
add
mov
insl
les
adc
rolb
adc
subl
fildll
and
mov
pop
mov
xlat
cs
or
popf
mov
jg
xchg
push
testb
mov
jns
flds
mov
jmp
imull
mov
xchg
push
inc
or
add
movsb
mov
pop
enter
sbb
jo
in
stos
shl
out
pop
add
pop
addb
out
sub
cmpl
je
or
je
je
cmp
add
push
or
mov
jo
or
mov
inc
ljmp
add
fcoml
mov
lock
sub
data16
cmc
pusha
cld
push
or
add
cli
push
add
push
out
je
les
cmpsb
imul
sub
mov
push
push
test
pop
jge
mov
lods
fistl
lods
cmp
nop
mov
pop
out
or
mov
mov
pop
dec
adc
es
outsl
push
and
push
add
push
adc
adc
add
add
js
mov
call
enter
ljmp
mov
stos
outsb
sub
cmpl
sbbl
sahf
xchg
add
cmp
int3
lret
daa
in
xchg
dec
sub
lods
int3
jg
test
jle
imul
mov
push
stos
and
push
push
mov
push
stos
add
add
xchg
xor
lahf
add
add
stos
and
rorb
cmc
shlb
or
xor
jne
or
adc
xor
bnd
add
add
add
dec
cmp
es
add
lcall
push
push
imul
cmpsl
add
add
push
loope
add
push
push
jns
adc
out
jl
iret
add
xor
push
mov
enter
dec
jne
jge
mov
movsb
xor
cmpl
jnp
xor
daa
lahf
jl
data16
mov
add
jns
jg
dec
fisttps
push
cmp
xlat
in
xchg
adc
jg
ss
data16
jmp
push
sub
push
jp
data16
fwait
in
addr16
xchg
xchg
mov
add
fstps
out
leave
mov
mov
sub
and
arpl
call
push
pop
movsb
pusha
inc
sub
outsb
cmc
xor
pusha
out
mov
je
fldl
sbb
popf
je
shlb
push
test
loopne
lcall
pop
inc
iret
push
mov
insb
sbbl
ficompl
cwtl
jp
sub
cmp
push
cmpb
dec
gs
xorl
popf
ret
adc
dec
inc
loopne
adc
shll
callw
inc
inc
dec
inc
add
fdivrs
int3
stc
mov
add
inc
cmp
and
mov
aam
or
sub
mov
cmp
jl
out
xchg
push
sbb
je
rcr
and
or
sub
adc
rorl
add
in
insb
xlat
jbe
jbe,pt
dec
pop
mov
xchg
mov
mov
mov
jbe
scas
xor
cmp
mov
loope
rcrl
cmp
jne
orl
pop
loopne
cmp
cld
add
push
sahf
sbb
add
push
aad
adc
cltd
lcall
or
mull
sbb
mov
adc
les
push
push
sbb
hlt
jno
adc
and
push
test
loopne
rcl
jmp
push
jl
movsb
popf
add
mov
adc
loope
cld
clc
dec
stos
subl
inc
add
movsb
sti
ljmp
out
sub
adc
test
or
cmp
mov
sub
add
mov
cmp
nop
int3
int3
jbe
aas
xchg
sti
in
cmp
pop
mov
adc
and
sarb
shrb
push
and
iret
gs
push
sub
dec
adc
fsubs
xor
inc
insb
ljmp
adc
mov
lock
aas
shrb
pusha
setge
test
outsb
mov
loopne
and
in
pop
shl
xchg
enter
pop
add
into
loopne
jne
jecxz
fs
push
fldl
xor
or
aaa
pop
fiadds
mov
adc
add
aas
sub
ja
mov
push
pushf
nop
mov
ds
jg
lea
xchg
mov
pop
xchg
out
push
imul
pop
sbb
lcall
push
mov
adc
adc
or
add
push
jns
or
or
add
adc
push
mov
lods
or
mov
ficomps
jne
xor
in
ja
shlb
cmp
test
pop
sub
add
lahf
shl
push
nop
mov
and
stc
jns
sbb
fnstenv
push
and
into
les
mov
jb
les
lock
xchg
pop
repnz
and
addl
popa
jmp
or
repnz
imul
inc
sub
roll
lahf
push
imul
cld
outsb
cld
frstor
or
dec
mov
dec
lret
xor
fwait
andb
push
dec
pop
xchg
xchg
clc
mov
push
jne
mov
sbb
xor
cmp
add
leave
aam
movsl
fimuls
add
cmp
jo
popa
rorb
cs
sbb
ud1
push
test
ret
pop
add
jmp
fwait
dec
cmp
jg
xchg
xor
xchg
lock
push
in
adc
pop
lahf
and
mov
xorl
sti
lea
jmp
jmp
jb
psubd
cmpsb
stos
or
imul
pop
lock
or
jl
std
xchg
and
ja
fsubs
or
pop
adc
ja
adc
add
mov
sti
scas
adc
push
repnz
lret
repz
xor
xchg
je
je
push
mov
add
pop
and
sbb
xor
inc
add
stos
mov
mov
es
mov
insb
adc
push
imul
and
mov
imul
mov
and
adc
setl
cmp
loop
jo
adc
inc
dec
dec
cmpsl
or
aam
xor
lock
mov
stos
addl
subb
lds
add
mov
pop
gs
dec
inc
das
or
push
and
jb
fcoms
mov
cmp
pop
mov
sbb
adc
in
test
je
jmp
cs
and
insb
mov
or
rorb
pop
xor
setl
push
das
das
scas
and
jmp
and
mov
movsl
sbb
in
push
adc
jne
cmp
inc
or
xor
shr
shll
cli
add
xchg
js
pop
cmp
jne
jmp
dec
pushf
sbb
pop
inc
or
sbb
subb
pushf
or
je
add
das
movswl
push
or
push
cwtl
jns
jmp
je
add
adcl
pop
clc
xchg
cmp
dec
mov
ljmp
ficoml
cmpsb
push
add
sbb
sub
popa
ret
push
or
push
loopne
cli
add
je
jae
cmp
lods
jb
xchg
cmpsl
inc
int3
into
lods
add
sbb
dec
arpl
pop
sahf
cmpsb
adcb
loopne
imul
ret
add
and
push
js
test
sub
jno
push
rorb
cli
adc
inc
das
or
mov
fmuls
or
pusha
addl
or
xchg
in
pop
pop
mulb
loope
neg
sbb
push
mov
mov
fisttpll
or
jb
mov
cwtl
lahf
add
ja
adc
xchg
add
jns
clc
vpshaq
sahf
les
or
or
add
add
adc
lret
in
test
shll
inc
adc
sbb
out
les
inc
add
fwait
push
fwait
lahf
out
jl
cltd
call
popf
lods
mov
adc
pop
pop
add
add
add
cmp
or
and
je
test
mov
sub
and
mov
inc
adc
or
call
clc
add
dec
cmp
std
inc
daa
nop
lods
into
sub
dec
clc
jmp
or
insl
orl
add
or
fists
pop
mov
daa
xor
push
add
clc
push
sub
xchg
inc
lahf
dec
insb
shlb
add
pop
jg
push
out
int3
insl
clc
push
push
cmpsl
sub
push
popf
mov
adcl
icebp
add
nop
fnsave
push
fsubrl
icebp
and
int3
lock
sbb
cmp
xchg
lds
and
lea
pop
mov
cli
inc
cmpb
adc
or
xchg
xchg
int
pop
push
mov
int3
addl
lds
rolb
sub
cltd
lock
lock
sbb
and
insl
jmp
hlt
inc
hlt
mov
clc
hlt
hlt
and
out
lret
clc
std
or
pop
test
jmp
mov
sti
cmp
and
loopne
int
push
dec
xor
or
call
cwtl
orl
repnz
lods
mov
push
mull
ds
xor
add
push
inc
lods
leave
filds
add
ljmp
or
lock
in
mov
shll
ret
bound
xor
push
mov
jle
adc
int3
jno
xchg
aaa
push
lock
inc
mov
push
push
popa
pop
das
loopne
bound
and
insl
jne
or
pop
dec
jmp
aaa
sbb
push
cmc
cmpl
dec
rol
add
fmuls
and
sbb
js
inc
add
or
dec
sub
push
push
andl
sub
clc
sbb
int
or
lock
je
mov
out
cmp
jno
mov
std
movsb
mov
jne,pt
jae
sarl
aaa
rcl
sub
and
mov
add
sbb
xlat
sbb
cmpsb
add
out
adc
out
jmp
test
or
jge
xchg
mov
add
mov
clc
imul
sub
lea
hlt
pop
add
into
call
lods
ret
xchg
xchg
sbb
jo
cs
mov
addl
fcom
je
dec
add
cmp
add
iret
insb
insb
incb
or
mov
push
pop
jns
adc
mov
inc
cmp
add
mov
jmp
shlb
mov
andl
and
cmp
mov
popl
cld
enter
dec
add
inc
stos
sbb
in
inc
push
sub
fistps
push
repnz
ljmp
aad
mov
pop
test
pop
enter
lock
fimuls
xchg
xchg
fcoms
mov
or
dec
call
mov
orb
or
mov
call
mov
xchg
inc
sub
mov
popa
mov
inc
or
test
xlat
notb
in
popa
mov
mov
cmp
jne
scas
je
mov
gs
add
inc
sbbb
xchg
adc
es
loopne
jg
sub
mov
inc
jo
push
adc
jp
pop
inc
arpl
push
scas
mov
or
stos
or
push
loopne
js
ljmp
xchg
leave
icebp
pop
push
push
sti
and
or
outsl
test
dec
inc
pushf
xor
inc
mov
mov
add
sbb
mov
lods
pop
dec
scas
aas
or
cmp
mov
sub
or
je
adc
test
fiadds
sub
out
push
dec
jo
inc
push
or
fwait
push
loopne
cmp
inc
sub
cmp
clc
repnz
mov
add
adc
add
into
loope
sbb
inc
add
jb
cs
inc
sbb
push
push
or
push
ljmp
leave
cmpsl
jne
sub
xor
jmp
and
adc
loope
ds
mov
arpl
cmpsl
push
mov
orb
cld
add
aam
xchg
add
dec
pmulhuw
cld
dec
push
lcall
xlat
outsl
xchg
or
shl
xor
add
mov
pop
mov
jnp
or
arpl
mov
pop
xchg
and
in
lock
mov
inc
and
or
leave
and
adc
in
jle
gs
pop
aam
xor
dec
addb
push
push
or
inc
add
cld
stos
cld
sub
cld
push
xchg
sub
repz
lea
loopne
add
add
mov
sub
push
pop
insl
push
xchg
test
dec
dec
adc
movsl
in
mov
pusha
xor
push
sub
inc
push
add
ret
jmp
add
or
sub
hlt
mov
aas
pop
stc
or
test
rorl
mov
mov
sbbb
les
xor
xor
fisubrl
pop
les
add
outsl
sbb
std
dec
dec
adc
adc
push
lea
repz
pop
push
out
hlt
out
mov
pushf
subl
push
push
inc
das
das
or
mov
jge
lds
push
xchg
xchg
arpl
fsubl
pusha
cmp
push
out
mov
pop
pop
add
scas
pushf
fdivrs
lock
mov
xchg
les
lock
dec
sub
and
cs
icebp
pop
add
es
adc
mov
add
popl
push
or
cmp
ret
orb
sub
or
push
mov
dec
sahf
cmp
mov
mov
lock
popf
lods
mov
mov
in
push
jbe
test
jb
add
mov
insl
int
push
cmp
add
fincstp
sub
inc
mov
dec
and
mulb
scas
into
cmp
loop
in
shl
fs
pop
cmp
in
out
fdivrs
pop
out
fiadds
clc
jne
pushf
lods
das
gs
push
xor
pop
test
cmpl
pop
fisubl
call
int
jecxz
cmp
shlb
mov
aad
sub
sbb
inc
xor
arpl
mov
icebp
adc
rorb
jnp
shlb
xlat
push
loopne
add
and
popf
or
adc
pop
test
jne
mov
ret
push
cmp
subl
loopne
shll
cmp
pop
jne
in
sbb
or
jmp
fwait
dec
scas
jp
mov
int3
lahf
sub
sbb
add
or
push
pop
mov
push
inc
push
loope
jb
push
ficoms
paddd
mov
adc
shrl
stos
inc
lret
mov
fld1
mov
shrb
mov
lds
xlat
ja
pop
out
sub
mov
push
pop
dec
shl
inc
or
push
mov
dec
inc
jnp
mov
inc
mov
add
aam
push
inc
xchg
mov
adc
cmp
mov
xchg
mov
inc
ret
mov
jecxz
sub
stc
jmp
lea
xor
test
sbb
jmp
push
xor
ret
loopne
loopne
mov
pop
adc
and
inc
adc
outsb
xor
dec
mov
mov
jno
adc
pushl
test
cmc
cmp
int3
cmp
shr
push
sub
int3
imul
call
loope
jmp
jbe
pop
enter
sbb
inc
mov
add
dec
mov
add
add
sbb
mov
loop
adc
dec
pushf
inc
ljmp
xchg
push
lret
mov
dec
jge
faddl
cs
insb
insb
push
and
lret
adc
outsl
jecxz
and
push
xlat
inc
test
push
adc
push
dec
neg
mov
cmp
lds
sub
cmpb
cmpsl
push
or
push
pop
dec
xor
xor
pusha
movsb
lock
test
dec
movl
enter
xchg
sarl
cmp
je
xlat
ljmp
insl
xor
add
pop
jmp
push
xor
fadds
je
roll
cmp
inc
xor
mov
inc
xchg
push
fcoms
dec
push
insb
hlt
mov
cmp
mov
add
xchg
ss
fsubrs
into
push
jmp
cmp
fwait
test
fsubrs
jns
xchg
loope
push
inc
mov
popa
mov
cmp
pop
popa
daa
push
lcall
and
pop
cmpsl
xchg
packssdw
inc
leave
rcrl
or
divl
imul
xor
xchg
dec
push
sahf
push
add
jae
cmp
xor
or
int3
xor
jmp
imul
inc
cmpsb
jnp
dec
jo
cmp
clc
jne,pn
daa
and
leave
inc
dec
jne
dec
jne
cwtl
movsb
lret
inc
jne
pop
pop
test
pop
add
sub
std
adc
jl
xor
mov
std
jb
hlt
mov
faddl
push
xor
push
add
mov
jne
stc
jae
nop
cmp
add
xor
inc
add
lahf
imul
push
and
mov
add
ja
ret
push
sbb
mov
mov
into
mov
lea
mov
in
mov
aad
and
sbb
push
add
fnstenv
and
icebp
arpl
shll
mov
data16
inc
push
sub
les
clc
and
fld
es
sub
lret
mov
jno
mov
mov
mov
xor
imul
ljmp
lea
lret
cltd
push
icebp
out
je,pn
or
scas
iret
je
cmp
cmp
mov
jmp
jmp
dec
mov
push
add
aas
test
push
std
jp
insl
aas
or
xor
mov
sbb
add
shl
in
lock
sbb
adc
add
and
xorb
fstps
mov
xor
adc
and
jbe
add
pop
bound
push
cmp
adc
fisttpll
add
inc
pop
adc
mov
hlt
add
movsl
push
xor
pop
lea
push
lea
mov
adc
cmp
addb
sub
sub
cmpsl
mov
mov
dec
cli
shl
lret
add
nop
dec
inc
js
insl
movsl
add
ja
inc
cwtl
sbb
add
bound
push
roll
rorb
std
mov
push
movsl
pop
sub
dec
xchg
lods
mov
enter
sub
push
push
pop
jbe
scas
inc
xor
push
push
mov
xor
mov
jl
lock
and
std
xchg
xor
jb
xchg
xchg
aaa
xor
cmp
dec
cs
cmp
or
pushf
sub
cmp
mov
nop
fsubs
hlt
in
data16
add
ljmp
mov
dec
cmp
mov
inc
imul
leave
push
das
fs
lods
sub
adcl
dec
lods
subl
in
imul
mov
in
pop
fiaddl
lcall
int3
add
inc
lock
or
sbb
sub
fucomi
mov
dec
inc
sub
cli
roll
insb
push
xchg
xchg
cmp
xor
mov
dec
aad
js
and
iret
and
and
dec
or
dec
adc
movsb
es
leave
cmpsb
loopne
xor
test
dec
mov
pushf
das
xor
js
imul
lods
sahf
fcoml
xor
or
mov
jb
fwait
xchg
aaa
mov
push
cmp
xor
lcall
je
mov
dec
aas
push
popa
pop
loop
rorb
mov
fs
aad
js
call
pop
das
mov
hlt
ljmp
test
sbb
cld
das
sub
mov
xchg
adc
stc
cmp
and
push
xor
mov
cs
mov
fdivrs
test
sub
out
mov
mov
mov
sub
in
shrb
xor
call
xor
data16
mov
hlt
pop
or
dec
pop
pusha
jmp
or
and
mov
or
jne
xchg
sbb
xor
inc
nop
xor
shl
jp
cmp
add
loope
fcoml
pop
jp
es
and
add
andb
sbb
cmp
or
pop
mov
cmpsb
cmp
lahf
nop
loope
hlt
adc
fcmovnb
jmp
sbb
ja
xor
nop
test
jne
or
adc
sbb
movhps
mov
or
adcl
test
rclb
gs
jg
cmp
popa
inc
lock
mov
aaa
fdiv
and
ds
lock
js
sub
shl
mov
push
insb
test
in
mov
jl
mulb
and
inc
or
mov
lcall
loop
mov
mov
in
adc
mov
adc
adc
xor
pusha
in
ds
pop
hlt
shr
jb
inc
stc
fs
cmp
cmp
or
ja
mov
adc
push
mov
fmull
sbb
cld
popa
cld
cmp
call
push
push
lds
aaa
sti
clc
mov
stos
xchg
push
mov
divl
and
jo
jmp
mov
adc
inc
decb
pop
mov
mov
in
or
loop
or
inc
arpl
aaa
call
or
gs
pop
xor
fdivs
daa
pop
adc
sub
ljmp
mov
lock
call
mov
call
or
push
icebp
cs
outsb
scas
jge
inc
or
cmpb
repz
dec
jmp
cmp
je
or
xor
jno
xor
pushf
mov
xchg
push
cltd
push
lock
and
cmp
push
jne
sbb
pop
jmp
mov
jmp
dec
xor
xchg
pusha
shr
ljmp
push
sbb
shl
outsl
jecxz
faddp
wrmsr
add
mov
push
stos
cld
push
jg
push
mov
je
adcl
ffree
push
cld
je
shrb
movsb
pop
xor
or
inc
lds
clc
roll
dec
jl
rorl
int3
or
xchg
cmp
push
mov
adc
clc
jg
push
pop
jge
jge
mov
push
mov
adc
add
xchg
mov
mov
and
mov
addb
ret
negl
call
jge
and
push
incl
je
pop
xor
mov
sbb
hlt
cmpsl
outsb
jne
lea
int
push
test
jo
cs
and
iret
adc
stc
addr16
or
repnz
xor
lret
pop
or
pop
dec
mov
cld
push
stos
cmp
xchg
je
adc
cmp
ficoms
int3
xor
adc
mov
mov
les
or
and
lahf
loope
or
pop
jg
iret
sub
lea
fcmovne
push
rolb
out
add
add
add
ja
lahf
les
cvttps2pi
addb
lods
insb
or
push
outsb
imul
popl
pop
sbb
loopne
jg
mov
mov
mov
add
lahf
outsb
test
push
jne
pusha
or
ret
mov
aas
loopne
ret
and
push
das
xor
lea
insl
sub
sbb
add
mov
sub
sarb
and
push
lods
aam
jl
adc
aas
mov
bound
adc
repz
pop
cmpsl
dec
movlps
ret
pushf
ljmp
aam
repnz
jmp
test
sbb
iret
nop
fbld
sbb
or
mov
sub
dec
add
push
mov
in
and
callw
jecxz
xor
insb
addr16
and
adcl
data16
jg
bound
psrld
hlt
push
push
ror
faddl
dec
jne
mov
and
roll
or
out
hlt
adc
add
int3
loope
pushf
daa
rcrl
cmp
add
mov
xchg
pusha
incb
fadd
push
and
adc
or
incl
push
aam
lret
and
or
jb
shrl
inc
in
test
sbb
dec
or
inc
or
add
stos
xchg
imul
das
and
cltd
shlb
mov
or
movb
dec
in
fildll
call
push
xchg
sbb
stc
incl
rorb
sbb
mov
pusha
xchg
inc
pop
pop
mov
add
add
nop
mov
pop
pop
adc
adc
sbb
push
adc
add
mov
and
inc
or
dec
mov
je
ret
xchg
into
sbb
outsl
adc
cld
pop
adc
mov
dec
cmp
popf
push
cmpsl
imul
and
inc
es
push
icebp
sahf
xor
dec
xor
pop
mov
loope
xor
mov
cmp
cltd
pop
mov
and
loopne
pop
adc
dec
jno
nop
sub
pop
adc
stc
mov
jl
mov
sub
push
push
dec
add
add
enter
pop
mov
js
loopne
push
xor
lret
movsl
sub
push
insb
jo
js
popf
push
js
xorl
ja
lret
sub
dec
mov
mov
addr16
sub
mov
sub
or
and
and
stc
adc
jo
pop
push
or
arpl
or
xor
rorb
dec
out
movsl
sub
lcall
dec
cmp
ja
dec
in
add
add
bound
sbb
movl
and
incl
nop
cwtl
inc
leave
js
and
cmp
adc
cmp
cmp
add
xor
addl
jecxz
xor
aas
pusha
or
andl
hlt
lret
inc
out
ret
ljmp
xor
jmp
cmp
inc
inc
data16
jae
jmp
jg
or
mov
ret
cmpsb
sbb
jo
fbld
mov
sbb
ds
outsl
xor
add
or
xchg
lock
aaa
ljmp
stos
xchg
rolb
xor
mov
pop
addb
jb
movsb
inc
or
mov
inc
fdivl
sbb
or
rcll
mov
rorl
scas
sbb
cmp
sbb
or
jne,pn
scas
push
test
sbb
stos
ljmp
clc
mov
pop
mov
push
stc
push
js
pop
or
dec
pusha
stos
cmp
mov
and
sbb
addr16
or
shl
movsb
push
mov
ja
or
ret
loopne
add
or
xor
test
sub
mov
or
fmull
mov
mov
dec
adc
push
pop
inc
push
test
pop
sbb
or
push
jbe
shlb
sub
pop
or
jnp
push
and
and
cld
lcall
cmp
adc
cmp
mov
es
inc
cmp
or
clc
jmp
sahf
imul
and
cld
mov
lea
fcompl
jne
mov
cmp
pop
repnz
jne
push
push
pop
xchg
push
enter
or
or
out
les
in
dec
test
adc
aad
test
call
stc
rol
sub
push
dec
fcompl
call
test
or
loopne
sbb
shlb
sbb
dec
and
xor
sbb
test
xor
dec
push
sbb
push
int
lods
bound
xchg
push
ds
dec
sbb
adc
cmp
sub
sbb
pop
call
movsl
add
loop
movb
push
daa
adc
test
mov
ds
hlt
push
arpl
jns
loopne
addr16
out
adc
add
cmp
inc
aaa
icebp
and
mov
xchg
cld
xlat
sbb
sbb
ret
repnz
iret
lcall
in
lahf
dec
das
roll
xchg
shlb
xchg
and
dec
xchg
call
jno
push
mov
leave
inc
inc
loopne
sub
orb
lea
mov
push
xchg
loop
mov
mov
std
sahf
dec
ljmp
sub
cmp
add
or
loope
mov
mov
in
enter
and
adc
rolb
sub
pushf
js
sbb
sbb
lods
sbb
sub
sbb
xor
mov
dec
push
in
dec
test
push
jle
into
jp
stos
ja
add
movsb
shrl
jl
push
cmp
pop
addr16
int
movl
in
add
cmp
inc
adc
les
adc
fs
jp
int3
scas
push
imul
arpl
add
jl
clc
mov
adc
xor
jg
xor
rclb
mov
jbe
jnp
rclb
ret
pushf
aam
inc
pushf
fidivrl
test
in
push
adc
or
sar
sbb
xchg
adc
es
adc
push
jb
xor
sub
mov
push
push
sbb
ds
imul
roll
mov
sub
mov
sar
stos
je
mov
adc
clc
sub
adc
lock
jecxz
jo
outsl
jae
push
pop
push
lds
jecxz
in
sub
ficoml
jo
pop
mov
add
xor
sbb
decl
jnp
das
fstpt
or
and
lods
repnz
lods
outsb
mov
movsb
outsl
cwtl
jo
sub
test
hlt
aam
fs
cmp
push
mov
mov
mov
loope
xchg
inc
std
sub
mov
push
enter
xorl
adc
cmpsb
or
or
push
add
or
sub
mov
jmp
lods
lea
push
xor
or
or
push
sub
xchg
mov
or
stos
stos
or
lock
lret
pusha
lock
adc
and
jo
decb
movsl
dec
jp
adc
mov
mov
jg
pop
add
jl
mov
add
stos
out
jmp
iret
ret
jmp
adc
mov
fistps
sbb
pop
pop
xor
pop
imul
pop
add
jl
add
enter
in
cld
lock
adc
cs
add
push
mov
mov
push
push
inc
into
ss
ja
xor
pop
push
addr16
stos
jno
insl
pop
shlb
mov
inc
jg
rep
mov
push
clc
cmpb
mov
inc
cmpsl
adc
mov
pop
hlt
xor
andl
mov
xor
add
mov
push
jbe
lahf
xchg
mov
adc
inc
mov
rorb
ds
insb
stos
add
lods
andb
push
clc
sub
push
jae
sub
or
frstor
xchg
dec
mov
or
jp
xorl
test
jnp
sub
lcall
repnz
cmp
and
mov
rcrb
and
add
xchg
out
or
shl
mov
inc
xor
push
jle
inc
xchg
cld
cmp
cmpxchg
jo
jb
loopne
bound
cmp
loopne
cs
and
adc
in
add
mov
mov
dec
test
rcll
rclb
adc
jb
sbb
lods
lods
pushf
cwtl
jae
mov
fsubl
cmp
pop
mov
lods
sbb
test
test
ja
out
jp
pop
add
idivl
jp
out
push
mov
pop
lret
cmpsb
jns
lahf
es
dec
jmp
jge
jge
and
cli
scas
cltd
js
and
mov
and
cmpsb
lock
adc
xor
mov
test
jae
or
lahf
mov
test
and
pusha
mull
in
jg
pop
lock
lret
jge
push
adc
push
ja
lods
inc
xchg
andl
jecxz
push
push
std
push
pop
data16
jmp
pop
push
push
movsb
inc
mov
mov
mov
dec
mov
dec
out
mov
pop
xor
or
sahf
orb
cld
pushf
movsb
add
dec
mov
les
xchg
movsb
push
test
sbb
or
popa
xchg
repnz
jle
pop
xchg
mov
outsb
or
mov
cmpsl
add
xchg
jecxz
adc
in
lcall
aam
cs
jbe
fcomp
loopne
ret
xchg
cmp
xchg
jo
sahf
inc
inc
imul
jne
adc
shlb
add
push
fnstcw
or
lods
xchg
fisubs
fwait
pop
shlb
aaa
add
loopne
mov
out
sarb
jno
cmp
xchg
lock
sbb
ja
xor
sarl
xchg
lret
rol
enter
mov
add
stc
cmpsl
rorb
or
xchg
ret
and
dec
jmp
ret
outsl
stc
mov
push
int
or
shrb
in
xchg
xor
xlat
call
adc
arpl
or
das
scas
mov
fwait
movsb
enter
mov
sbb
adc
xchg
fstpl
popf
or
xor
cmp
add
jle
pop
pop
mov
enter
js
push
je
insl
pushl
sti
mov
jnp
and
je
imul
add
fcmovb
adcl
sbb
bound
mov
pop
jg
and
call
and
mov
ds
push
sub
push
cmp
test
push
xchg
sbb
pop
push
loope
aam
clc
and
outsl
push
xchg
add
loop
or
adc
mov
pop
xlat
or
sbb
jbe
jl
and
mov
lret
jno
rcr
jmp
mov
xchg
pop
mov
pop
add
pop
mov
divl
inc
mov
push
lea
push
push
sbb
fstpl
mov
xor
es
ret
icebp
clc
imul
push
dec
push
mov
add
hlt
mov
sub
push
cs
jmp
lret
cmp
sub
adc
das
add
shlb
adc
rclb
dec
mov
sbb
dec
cmp
add
std
cmpsl
jmp
insl
mov
inc
dec
imul
mov
add
push
mov
popf
push
mov
push
dec
lea
add
mov
dec
std
aam
pusha
mov
jmp
outsl
fadds
sub
adc
jne
shr
cmp
push
sub
hlt
pop
xchg
cltd
xchg
pusha
push
pop
mov
xor
cmp
rorb
dec
int
and
or
push
adc
ja
inc
imul
cltd
fmuls
sbb
je
jne
lods
xchg
dec
enter
xchg
or
cli
sub
inc
lock
dec
dec
das
mov
insl
lock
repz
and
push
xchg
lea
dec
fdivrl
shll
data16
fidivs
cli
push
xchg
push
or
push
pusha
out
enter
or
inc
fcoms
xchg
dec
push
xor
and
in
add
mov
sbbb
aaa
imul
movsl
jmp
enter
fnstsw
ja
mov
or
pushf
sbb
mov
dec
in
add
inc
push
test
push
sub
dec
mov
add
jg
push
mov
and
jmp
lahf
adc
adc
or
add
imul
xchg
or
loopne
jmp
jo
fstps
mov
and
cmp
adc
mov
inc
orb
jne
shlb
data16
xchg
popf
loopne
xchg
ss
in
add
push
push
test
add
add
lods
inc
aas
ss
test
in
daa
test
push
sahf
or
or
mov
rolb
push
mov
fistl
xor
push
jne
aam
xor
push
dec
leave
lods
mov
jge
insb
sbb
sti
sbb
add
xor
jno
adc
rcrl
sub
push
fwait
dec
hlt
adc
mov
pop
sub
pop
or
sub
xor
cmp
push
adc
sar
in
rorl
cld
mov
sbb
ljmp
mov
sub
shrb
icebp
push
push
mov
shlb
push
or
pusha
or
ret
lea
bound
sbb
inc
sbb
push
dec
scas
sbb
or
fdivrs
sbb
addb
fiaddl
mov
lock
cmc
sub
jbe
imul
cli
jl
mov
mov
pop
hlt
hlt
cmp
roll
jne
push
movsb
or
jbe
adc
jmp
movsl
rcr
inc
ret
mov
jp
scas
jmp
cmp
jbe
wbinvd
and
and
mov
cmp
sbb
or
loopne
je
mov
sbbb
pop
inc
rclb
or
jbe
fmull
in
adc
push
fmull
es
gs
cld
pop
fstpt
mov
xchg
mov
jmp
dec
jmp
jno
or
lock
or
cmp
testb
push
add
cmpb
testl
mov
adc
incb
outsl
sub
sub
lea
bound
or
mov
inc
dec
jne
test
pop
jne
adc
out
dec
mov
mov
pop
jl
jp
sub
fcompl
push
mov
sub
xor
mov
push
out
pop
dec
add
or
pushf
clc
push
out
notb
int3
stos
imul
jo
lods
mov
int
push
dec
call
or
sub
pushl
mov
pop
xor
add
fnstenv
js
jge
sbb
sti
jg
lret
aam
dec
lea
cmp
sbb
inc
jmp
push
xor
push
xor
cld
popf
sar
xor
cmp
fs
jge
xor
pop
dec
stc
mov
ret
or
jg
daa
or
mov
push
push
mov
jne
cmp
sbb
jne
int
mov
xchg
je
sub
mov
mov
mov
mov
sub
and
jl
pop
and
adc
lods
pusha
idivl
inc
sbb
adc
adc
addl
pop
push
andl
popf
test
lcall
push
xchg
mov
lods
push
jb
inc
jno
sbb
mov
add
xor
fldenv
or
rorl
ljmp
cmp
loopne
sarl
lret
or
mov
sar
xchg
dec
ljmp
cld
push
loope
push
clc
sub
not
and
mov
and
clc
push
jb
mov
pop
xchg
mov
add
ret
sub
jmp
adc
cmc
mov
rcrb
mov
sbbl
pop
pop
lcall
jno
push
fs
mov
jg
inc
xor
cmpsb
cmp
clc
ds
cmc
push
push
add
pop
lcall
cmp
lock
cmp
mov
fisubs
test
xor
popf
pop
ds
jne
out
shlb
push
adc
inc
inc
mov
xor
sbb
push
push
sub
jns
adc
mov
aam
push
addl
clc
jo
mov
inc
xor
loope
fsubrs
jne
xchg
je
add
adc
xchg
xchg
pop
mov
pop
andl
cmpl
push
mov
adc
dec
jmp
add
jnp
sahf
enter
out
bndldx
push
shrb
or
mov
or
pushl
inc
aam
pop
sbb
pop
test
enter
outsb
or
fmuls
imul
adc
loope
add
dec
lcall
std
data16
movl
or
push
mov
sbb
adc
loope
pop
gs
push
inc
js
sub
push
cwtl
add
add
xchg
cs
cmp
sbb
imul
cmp
jae
inc
les
mov
dec
sti
fsubrp
sub
push
test
sub
scas
dec
and
adc
adc
dec
add
and
xchg
jle
inc
adc
sbbb
enter
clc
jge
pop
pop
movsl
lret
mov
sbb
ja
cmp
jbe
fsubr
fisttpl
js
aaa
xor
push
je,pt
fistpl
push
jle
mov
add
jmp
or
or
cmp
inc
inc
xchg
loope
sti
mov
jg
adc
dec
add
mov
xchg
push
xchg
cmp
add
mov
int3
mov
push
xor
pop
sbb
ljmp
call
int3
cmp
in
faddp
mov
mov
or
push
jb
ret
add
in
pop
hlt
out
sub
pop
inc
xor
push
inc
fbstp
push
add
ret
lahf
clc
imul
sub
inc
jae
pop
pop
jle
cmp
adc
or
jle
mov
je
in
mov
je
push
push
lea
xor
xor
xor
xor
xor
rcrb
mov
xor
lret
test
mov
push
loopne
push
sbb
inc
xor
mov
pushf
push
pmaddwd
stos
fldl
out
popl
or
jmp
mov
or
ss
push
adc
pop
sub
sub
sub
sub
rcr
mov
push
push
sbb
jecxz
daa
xor
and
or
js
loopne
movsl
xor
mov
add
pop
lret
add
xor
dec
stc
jne
add
loopne
push
adc
cli
clc
nop
xchg
push
movl
out
jle
adc
pop
arpl
test
test
adcb
std
or
pop
or
rorb
inc
dec
loop
outsl
pushf
neg
pop
sbb
pop
inc
jmp
xor
sahf
arpl
inc
mov
add
cmp
jbe
clc
jb
nop
rcrl
push
pop
and
xor
testb
out
dec
pop
pop
adc
sti
adc
mov
adc
inc
inc
lock
or
fdivs
imulb
mov
mov
jb
loopne
add
xor
cmpsl
insb
out
pop
std
lea
std
push
or
push
mov
mov
mov
or
nop
scas
imul
mov
testb
movl
cmpsb
inc
add
or
mov
or
push
and
repz
adc
add
repz
sbb
jp
in
and
call
call
hlt
cmp
repz
clc
clc
cld
adc
mov
clc
fnstcw
mov
pop
push
push
lcall
pop
sti
sbb
insl
and
push
fcompl
jbe
push
lea
jl
cld
or
std
cld
out
loopne
imull
push
or
fcmovu
daa
mov
sub
pop
nop
hlt
xor
push
fiaddl
jl
sub
out
add
dec
inc
fcomps
add
jbe
mov
jecxz
insl
pop
add
ljmp
mov
or
push
movsb
lods
mov
repz
mov
iret
repz
sbb
sbb
adc
cmp
repz
adc
or
and
repz
xor
ret
fiadds
lock
adc
push
add
outsl
dec
add
je
sub
ja
sub
push
mov
adc
push
cmp
pop
jne
add
gs
sbb
push
inc
popf
sti
push
pop
mov
push
add
inc
ds
out
cmp
adc
or
xor
sarl
je
ret
mov
push
popf
insb
ja
cmp
pop
or
jmp
scas
pop
pop
mov
cld
push
stc
je
icebp
push
leave
fldl
popf
loopne
inc
xlat
push
sbb
push
xor
cli
mov
jb
xor
xrelease
or
loopne
cs
pop
es
loope
and
inc
lock
pop
stos
inc
add
aaa
fdivr
cs
xor
sbb
mov
andl
inc
add
inc
imul
mov
lcall
adc
out
jle
add
sub
inc
fiadds
stc
in
ss
add
inc
hlt
daa
clc
inc
push
xor
push
push
inc
shlb
div
or
repz
pop
or
adc
jns
je
pushl
sbb
add
adc
add
sbb
scas
xor
hlt
push
sub
test
dec
jp
jo
or
daa
into
cmp
jb
lock
movsb
pop
sub
sbb
out
fistpll
mov
and
sbb
icebp
sbb
xchg
lcall
out
jp
inc
insb
outsl
sub
push
int3
leave
stos
pop
cltd
call
pop
decl
out
sub
adc
mov
les
cmp
jne
inc
inc
inc
inc
jmp
and
mov
add
sub
imul
or
or
stc
inc
and
xchg
js
sbb
xor
mov
out
in
pop
inc
inc
sbbb
sbb
adc
or
ret
rep
adc
sub
or
js
inc
or
arpl
mov
mov
or
dec
add
push
cmp
mov
mov
dec
sub
fisubrs
push
cmp
adc
aas
or
outsl
icebp
and
mov
testb
adc
sub
test
xchg
js
add
inc
add
sbb
add
outsl
mov
mov
fcomps
mov
pop
dec
lahf
add
mov
inc
mov
mov
jp
jp
ret
jo
ljmp
mov
add
jl
sbb
and
mov
inc
pop
dec
in
add
andb
pusha
jo
mov
dec
or
sarl
in
pop
sub
add
xchg
dec
push
push
inc
clc
add
pusha
cmpsb
push
movsb
arpl
imul
add
bnd
pop
mov
shll
repz
jmp
mov
rcrl
hlt
cld
cmp
jne
mov
push
add
lahf
shrb
testl
push
mov
sbb
sahf
cmp
inc
sub
fimuls
cmc
pushl
push
jl
cmp
jb
cmp
jl
jg
outsl
inc
jl
adc
xchg
jbe
and
scas
repnz
or
jl
pop
sub
mov
les
add
mov
jl
clc
incl
fdivrs
sub
pop
push
sbb
push
mov
hlt
pop
pop
pusha
jle
xor
bound
test
stc
push
or
xor
mov
into
fsts
jno
sbb
pop
sub
aas
xlat
fidivs
push
lock
imul
inc
and
sbb
dec
push
cmp
add
sbb
xor
push
cltd
test
es
xchg
adc
insb
nop
fimull
in
sbb
xchg
jmp
sub
fcmove
jl
inc
js
push
push
and
int3
mov
cmpsb
or
les
adc
aaa
sbb
inc
add
test
and
clc
sub
fisubl
data16
cltd
lcall
lcall
imul
sarb
scas
leave
jbe
test
mov
push
cltd
pop
idiv
add
mov
or
jae
nop
lods
lods
dec
jg
jl
out
rcrl
lea
dec
push
push
fisubrs
es
add
pop
decl
or
insb
push
mov
aas
cmp
lock
cwtl
stos
adc
xchg
not
pop
and
je
xchg
enter
aaa
cmpsl
adc
shrl
mov
xchg
cwtl
add
push
push
xchg
mov
jg
cmp
daa
add
hlt
outsb
add
add
cmp
cmp
in
adc
sbb
lods
sbb
cmp
test
jl
pop
push
mov
divb
fs
sar
imul
pop
cld
mov
or
mov
ja
mov
sbb
jne
add
daa
mov
sbb
mov
jl
push
jbe
xor
cmp
cli
in
mov
adc
in
inc
push
int
mov
test
or
push
pop
and
and
xor
ljmp
mov
rcrb
pop
movsb
pop
rcrb
cld
xlat
inc
dec
faddl
mov
in
enter
push
or
push
mov
out
arpl
add
movl
je
cmp
ss
mov
push
pop
lods
push
push
jp
int3
idivb
pop
jne
pop
cmp
xchg
inc
cmp
push
jp
add
popa
add
or
sub
mov
divb
xchg
bound
inc
dec
mov
fcompl
sub
and
push
add
je
js
clc
das
cmp
and
add
ret
adc
aas
ret
add
jle
or
jmp
shr
lea
sti
les
push
inc
adc
and
inc
push
pusha
test
test
jo
mov
mov
jl
or
push
std
cmp
cli
sub
pusha
or
pop
int3
roll
adc
lret
lea
mov
cwtl
into
cs
mov
sbb
mov
sub
jbe
cmpsb
inc
hlt
rep
ss
jmp
mov
sub
orl
pop
add
loope
sub
mov
or
sbb
clc
or
rcrb
sarl
jmp
add
cmp
sbb
mov
mov
insl
xchg
xor
popf
mov
xchg
or
lcall
adc
aam
pusha
and
je
push
popf
push
call
cmp
push
mov
and
data16
pop
testl
add
push
popa
lods
data16
add
and
addl
aas
bound
daa
movl
mov
sbb
fdivrp
mov
add
dec
imul
lea
cmpb
test
jb
add
adc
dec
iret
adc
push
imul
dec
and
push
add
or
and
add
or
test
sbb
jl
or
dec
dec
inc
loopne
sbb
jne
mov
ret
xlat
add
inc
je
jle
sbb
adc
stc
insb
adc
pop
adc
cmpl
jae
outsl
lods
lods
dec
push
std
inc
jge
jne
je
movsb
jle
cmp
jl
sbb
test
pop
dec
or
xor
push
mov
add
jnp
mov
pushl
loope
inc
aam
jmp
pop
lcall
add
jmp
pop
out
sbb
jmp
sahf
xchg
and
jbe
push
in
inc
push
std
mov
cmp
sar
popf
xor
xchg
sbb
and
push
cmpsb
or
jne
inc
sbb
rcrl
and
mov
pop
pusha
xacquire
push
subl
outsl
std
pusha
loope
cmpsb
jle
pushl
aam
faddp
orb
mov
mov
push
lret
call
inc
mov
add
push
jl
das
sub
xor
or
add
jo
adc
add
repz
or
sub
outsl
aas
pop
loopne
inc
lret
push
push
push
arpl
cs
sbb
xor
iret
cmp
or
push
clc
jno
sbb
adc
sbb
out
xchg
pop
jbe
mov
pop
jg
jmp
nop
add
inc
cmp
jl
pop
pop
mov
leave
sub
mov
xor
mov
fstpl
repnz
cld
add
loopne
outsl
cmp
rolb
sbbb
arpl
adc
or
inc
push
fdivr
jbe
loopne
sahf
dec
or
pop
inc
fsubrs
mov
push
leave
mov
mov
fxch
add
aaa
loope
fdiv
rcl
ss
inc
mov
lret
push
sbb
push
incl
rorb
in
outsl
cmp
inc
sbb
pop
pop
cmp
dec
cmp
mov
jo
mov
lock
adc
inc
or
sbb
push
and
push
mov
jle
fdivrs
push
popf
mov
push
in
frndint
arpl
loopne
in
aam
or
loopne
xchg
inc
push
rorl
fs
and
mov
outsb
fcomps
pop
mov
push
mov
adc
mov
jle
cld
adc
test
cmp
movsl
and
jne
stos
cmp
lods
and
pop
mov
push
std
mov
cmp
je
aaa
xor
mov
adc
je
or
cmp
adc
rclb
cmpsl
mov
or
ja
cmp
pushf
cli
xor
sub
pop
push
sub
test
inc
test
pop
out
pushl
mov
jo
mov
lahf
dec
and
loope
push
in
flds
cmpsb
dec
adc
lock
repz
fiadds
push
movb
lret
je
outsb
jbe
in
cltd
aam
push
xchg
ss
push
cmpl
push
jae
aas
call
add
push
jmp
cmp
or
cltd
mov
xchg
je
mov
cltd
neg
add
cmp
lahf
xor
add
mov
pop
xor
inc
or
add
adc
or
mov
push
movsl
mov
lea
add
pushl
sbb
mov
rclb
cmp
mov
lea
xchg
adc
lahf
aas
push
lea
mov
dec
je
adc
hlt
pop
dec
jne
hlt
add
jno
pop
mov
jmp
xor
add
cmp
push
scas
aam
dec
fldl
out
sub
cmp
add
lcall
xchg
mov
cmp
mov
cli
inc
cs
inc
push
or
add
lret
sub
daa
sbb
xchg
jns
popa
loope
roll
or
lret
pop
or
filds
sar
adc
xchg
cmp
je
pop
cmc
and
shlb
and
push
out
cmp
push
cmpsl
rorb
or
and
es
pop
inc
nop
or
add
pop
push
add
lock
inc
cmp
jae
push
cmp
jl
mov
inc
addb
add
jp
adc
mov
addb
mov
lock
jne
clc
push
mov
sbb
or
add
pushl
jmp
jb
pop
pop
pop
pop
cmpsl
cmp
sbb
sub
push
push
pushf
in
dec
push
and
or
push
fsubrs
mov
icebp
cmp
data16
sub
mov
sbb
cmp
mov
adc
adc
incl
sbb
scas
or
mov
int3
xchg
mov
fs
inc
xchg
or
sbb
jns
jne
jmp
fcomp
vpand
or
push
mov
jl
sbb
dec
dec
mov
cs
pop
aas
and
dec
cmpb
jle
xchg
mov
mov
mov
xor
inc
add
sub
inc
inc
loopne
movsb
cmp
pop
sahf
das
dec
aam
sti
imul
aam
and
pop
mov
push
jle
pop
and
push
jbe
push
dec
loopne
clc
dec
imul
xor
cmp
jae
mov
adcl
jo
jl
ljmp
subb
mov
imul
and
and
test
jne
push
test
sbb
jl
add
dec
jg
adc
orl
fcompl
mov
hlt
dec
adc
jne
aad
xlat
insb
shl
or
rolb
pop
nop
cmpb
mov
adc
fistl
in
pop
push
testl
and
sub
pop
ret
inc
test
ret
out
lcall
ljmp
sub
sbb
push
dec
or
test
insb
and
cmpl
push
lret
push
scas
xor
mov
push
mov
and
mov
mov
xchg
int
mov
sbb
push
aas
cmp
cld
and
nop
adc
xlat
je
mov
cli
es
mov
and
cmp
jb
testb
and
cmc
xlat
xchg
insb
testb
int3
loopne
pop
js
sbb
jge
gs
movsb
mov
movb
and
cmp
jne
cmpl
cld
ja
jb
cmp
jbe
mov
push
or
jl
jo
movzbl
push
out
sbb
push
xchg
mov
sar
call
and
mov
fidivrl
adc
xor
mov
inc
mov
xchg
fiadds
je
push
cmp
shlb
push
mov
pop
mov
nop
push
jo
mov
adc
push
mov
je
and
sbb
cmp
jbe
jbe
sbb
mov
and
cmc
cld
imul
lds
movsl
negb
jne
and
lahf
pop
and
loopne
js
mov
jbe
or
orl
jp
pop
jmp
addl
leave
jge
sub
loop
fisttps
std
rolb
test
xchg
incl
jle
cwtl
and
loope
and
xchg
fstpt
loope
add
cld
push
jo
fcmovnu
mov
add
cwtl
mov
test
pop
adc
je
in
outsl
mov
pusha
sub
or
fiadds
cld
mov
jbe
bound
sbb
fbld
fnstsw
mov
xchg
add
scas
push
jns
lock
sub
inc
lret
mov
push
xchg
and
nop
insl
xchg
sahf
or
push
push
movsb
dec
popf
pop
mov
xchg
sahf
jns
cld
aas
movsb
fs
jne
dec
add
mov
jmp
push
clc
ss
cmpsl
xor
push
fistpll
fmull
cmp
cmp
push
sahf
cmpl
cmp
xchg
jge
addr16
inc
and
push
cltd
sbb
xor
cmp
dec
lds
xchg
and
shlb
push
or
cmp
ficoms
and
mov
lods
pop
cmp
shlb
cmpsb
jne
sub
cmpsl
mov
add
adc
or
sbbl
inc
cwtl
rcrb
mov
or
lret
pop
in
cs
rorb
mov
jae
xchg
xchg
inc
mov
jbe
xchg
push
cmpsl
mov
push
arpl
lcall
lahf
aad
mov
movl
dec
ja
adc
mov
xor
mov
sbb
pop
mov
and
sub
inc
mov
andl
mov
sbb
inc
sub
scas
dec
mov
nop
and
xor
hlt
add
dec
out
inc
add
ja
std
inc
js
push
fnsave
push
lahf
mov
aas
dec
sbbl
jns
mov
push
xchg
nop
arpl
xchg
push
lahf
enter
cwtl
push
mov
push
jg
push
push
mov
outsl
mov
jo
nop
mov
bound
jl
xchg
inc
mov
es
jmp
and
cmp
nop
push
inc
pop
pop
pop
leave
push
imul
xchg
jo
push
cmovle
dec
or
add
pushf
ret
pop
aas
push
sar
push
sub
repz
push
testl
bound
stos
cld
xor
mov
jle
pop
push
sub
pop
adc
and
sub
mov
lock
inc
sti
add
push
push
push
js
sahf
xchg
cmp
les
mov
mov
add
dec
sub
jbe
add
mov
jl
sub
or
cmp
lea
mov
mov
push
dec
add
inc
insb
cmp
mov
pop
jle
push
sub
adc
adc
mov
or
or
in
inc
add
scas
xchg
mov
jmp
cmpl
mov
cmp
jnp
orl
add
mov
adc
cld
jg
mov
dec
or
or
push
push
pop
pop
fmuls
xchg
inc
mov
and
mov
mov
jg
add
add
or
lea
push
ja
pop
push
testl
jp
mov
pusha
push
or
shll
jb
lock
push
inc
xor
je
testl
and
mov
lret
iret
and
jg
icebp
subb
pop
loopne
andl
sbb
adc
mov
pop
dec
or
nop
sbb
and
leave
mov
lock
inc
adc
bound
xor
dec
jno
and
adc
inc
push
mov
add
test
je
stos
mov
sbb
sbb
push
add
cmp
jb
cmp
jb
mov
jge
call
mov
js
mov
int
fadds
clc
add
lock
inc
add
shll
add
test
loopne
add
inc
loopne
xchg
aad
es
mov
sub
cmp
test
jge
cmp
push
cmp
fs
dec
fs
add
sbb
fstpt
dec
cld
mul
push
sbb
adc
lods
pop
call
xlat
push
mov
mov
mov
popf
out
xchg
mov
mov
mov
subl
add
cmp
je
pop
sbb
popf
aaa
lea
jl
sub
mov
bnd
push
inc
jge
pop
xor
inc
mov
mov
cmpsl
das
jecxz
jg
fwait
cmp
lret
mov
mov
inc
call
cmp
jle
push
adc
and
add
repnz
dec
lods
add
jl
fwait
push
pusha
push
rclb
sahf
push
dec
loope
add
add
add
inc
mov
mov
je
testb
cmp
mov
push
imul
xor
ds
jmp
mov
mov
pop
scas
jnp
adcb
pop
cmp
mov
mov
inc
mov
test
jle
int3
inc
clc
mov
push
loopne
or
jmp
inc
add
cmp
sub
jg
mov
std
sbb
or
pop
lea
mov
mov
pop
and
sahf
sub
rorb
jmp
jne
push
out
or
scas
outsb
push
adc
pop
loopne
addr16
loop
or
shlb
fwait
xor
xor
push
inc
out
mov
xchg
das
mov
or
mov
cmp
or
add
push
dec
add
mov
rcrl
iret
add
push
jnp
mov
shr
pop
js
rcrb
jns
pop
cmp
or
sub
cmp
sti
cs
adc
inc
cmp
jne
sub
nop
add
adc
call
push
xor
imul
rcl
or
add
ret
xchg
adc
iret
mov
js
fsubrl
add
dec
ja
movsb
mov
mov
mov
jp
sub
aaa
add
jne
adc
mov
popf
adc
push
outsl
movdqa
push
pushw
fisttps
or
pop
xor
dec
lahf
out
out
push
pop
outsl
inc
or
jbe
out
push
jle,pt
or
scas
push
into
lahf
ja
jo
mov
mov
loopne
sbb
hlt
xchg
rcrb
ret
stos
xor
xor
sub
and
or
pop
mov
or
jne
test
push
jg,pt
dec
mov
sub
push
push
mov
rclb
adc
in
push
mov
push
add
mov
push
in
add
sub
lock
in
lock
rep
stos
mov
iret
jne
and
adc
adc
ss
cmp
mov
xchg
out
push
sub
push
push
ret
stos
jmp
insl
jo
and
and
movsl
mov
mov
inc
lea
shl
adc
push
pop
es
outsb
mov
push
jmp
push
cmp
sbb
aas
push
mov
push
int3
or
pop
xchg
push
imul
dec
push
or
cs
scas
push
push
insl
xor
pushf
outsl
push
inc
mov
sbb
or
sbb
push
sbb
mov
mov
add
inc
je
push
push
sti
sub
lea
or
cmc
xor
popf
jbe
sbb
or
fsubl
gs
fcomps
int3
in
in
data16
popf
enter
cmc
out
movsl
shrb
int
lea
movsl
popf
inc
mov
call
hlt
aaa
dec
cld
adc
cmp
pop
inc
test
rol
mov
test
fsubrs
int
imul
fidivs
dec
or
fildl
add
pop
push
xorl
fs
sbb
dec
pop
dec
popa
mov
jge
pop
jmp
jge
sbb
js
sub
call
xor
stc
sub
div
lea
push
adc
push
pop
out
hlt
ss
rcll
add
mov
outsb
jle
and
lods
xchg
jb
imul
ss
mov
ret
cmpb
pop
push
sub
idivl
inc
fs
push
call
aaa
jno
movsb
push
enter
dec
mov
xchg
loop
pop
xchg
cmp
out
push
xor
and
adc
adc
or
iret
imul
push
js
pop
lock
or
xchg
inc
mov
inc
dec
pushf
divl
nop
add
sub
push
jne
rcrb
pop
pop
inc
fadd
pop
push
pop
cmp
jnp
mov
or
push
mov
les
aam
mov
or
pop
inc
add
add
icebp
jns
sbb
pop
jle
sbb
add
push
cmp
mov
jge
ja
adc
adc
push
xor
out
cli
inc
mov
jmp
mov
inc
inc
cmp
inc
dec
jne
push
push
int3
jo
sub
rcr
jo
mov
adc
cmp
pop
push
in
cmp
pop
into
mov
xor
sbb
popa
adc
sbb
adc
lahf
cmp
ja
cs
push
mov
mov
or
xchg
or
test
jne
ds
add
pop
in
es
jmp
and
iret
sbb
pop
dec
mov
lret
sub
lock
mov
fcoms
lcall
cld
sbb
dec
and
sbb
cmp
je
pop
movb
pop
jbe
adc
dec
daa
xor
pop
out
rcl
icebp
inc
cmc
je
mov
rolb
js
out
add
adc
decl
jle
rolb
jb
add
add
push
incb
jb
test
mov
fs
add
add
jb
mov
dec
sub
ret
adc
std
test
lcall
inc
mov
unpcklps
test
cmc
mov
nop
pop
cmp
xor
push
dec
sub
lea
test
ja
pop
or
ds
jae
mov
push
cmp
push
and
jb
cld
jecxz
pop
iret
out
sbb
sti
lea
sub
sar
push
push
or
ljmp
into
in
loop,pn
mov
add
xor
adc
pop
pusha
fistpll
push
inc
dec
inc
jnp
dec
sbbl
push
pop
pop
ret
andl
and
inc
outsl
mov
xlat
push
push
adc
je
dec
pop
js
sbb
pop
cmpb
inc
sub
pop
cmp
jb
icebp
in
mov
xchg
packssdw
pop
add
fldl
ret
call
add
push
adcl
cmp
add
sub
push
mov
xor
fs
test
pushf
or
ret
adc
divl
xorb
lret
jg
push
movzwl
loope
add
testb
add
dec
jl
mov
or
fisttpl
mov
sub
in
lock
push
push
sub
xchg
jne
lahf
pop
scas
in
fldcw
sbb
adc
inc
cmp
sub
adc
js
or
or
pop
insb
mov
adc
jno
dec
popa
push
xchg
jne
mov
add
imul
fcomps
jne
push
pop
cmp
ja
fucomi
aaa
adc
inc
lahf
insb
sbb
adc
pop
sbb
incl
sub
add
cmp
jae
insb
or
jb
xchg
faddl
push
clc
jbe
add
sar
mov
test
jne
sbb
pop
test
pop
and
scas
bound
xorl
loop
jne
jg
add
sbb
jle
and
ja
subb
sub
mov
jbe
or
cmpsb
add
and
lods
arpl
cmpsb
popf
cmc
xchg
lock
mov
xor
cmp
jb
ljmp
addb
xor
call
inc
dec
xor
mov
cmpb
bound
mov
dec
adc
add
fimull
or
adc
dec
dec
mov
adc
adc
or
xor
xchg
sbb
data16
mov
adc
mov
add
or
loope
or
lea
xor
ficoml
stos
add
mov
mov
mov
inc
dec
jne
lea
daa
or
or
jns
call
sub
dec
push
adc
dec
push
cmp
pop
insb
adc
outsl
mov
mov
scas
inc
div
mov
aas
rolb
jbe
lea
das
loope
add
cmp
ja
and
dec
in
lea
push
or
inc
mov
inc
in
fdivrs
cmpb
cld
ficoml
push
xlat
hlt
roll
jo
and
ja
jns
std
push
cmp
mov
scas
fs
inc
inc
cld
jbe
testb
dec
and
mov
or
int
rorl
mov
lods
jmp
and
je
and
arpl
push
xchg
or
test
add
mov
jmp
mov
mov
leavew
sub
mov
imul
lea
sti
rorb
push
xchg
and
and
mov
and
jmp
push
inc
cmp
jb
shrb
rolb
test
lret
mov
adc
je
cmpl
or
and
pop
and
sbb
fwait
sarb
popf
ss
jb
inc
pusha
sbb
push
or
imul
mov
mov
push
orb
jmp
adc
fstl
push
cmp
cmc
movsl
add
lock
hlt
xor
divl
movl
fidivl
push
popa
insb
jmp
inc
jnp
push
in
jne
sarb
fldt
mov
cmp
les
clc
loope
mov
or
push
push
mov
or
mov
cmp
push
mov
and
or
sbbl
cmp
cli
and
jmp
adc
jle
jb
or
inc
mov
insb
movl
xchg
push
xor
and
xor
lea
push
inc
rolb
jnp
arpl
scas
inc
jae
cmp
jbe
cli
pop
js
iret
push
jne
mov
test
mul
test
pop
leave
inc
es
sub
xor
les
outsb
fimuls
sub
jle
mov
into
sub
add
jmp
inc
orb
inc
cmp
jbe
ljmp
cmpb
shrl
mov
pop
push
add
loopne
xorb
imul
jp
movl
call
out
adc
mov
cmp
mov
inc
inc
inc
dec
jne
mov
xchg
dec
pop
jl
sbb
divb
cmc
fdivs
jo
mov
sub
or
inc
dec
jne
fisubrl
dec
inc
sub
cwtl
loop
or
test
xor
nopl
les
xchg
jae
adc
jo
mov
loope
dec
loopne
adc
mov
lods
or
movsl
ret
jp
loop
push
pop
loop
inc
and
dec
push
pop
sub
or
mov
rep
push
mov
pop
jno
aaa
or
mov
cmp
fcompl
inc
adc
les
pop
push
inc
pop
loopne
cli
jo
insb
ljmp
xor
std
and
sbb
push
or
pop
or
or
clc
clc
add
loopne
or
hlt
jnp
aas
or
jmp
xor
dec
sbb
mov
je
jmp
pop
fnstcw
jmp
subb
sbb
es
xchg
notb
and
or
mov
push
shrl
gs
leave
movsb
cld
sti
fnstcw
int3
test
push
and
sbb
movl
pop
bound
xchg
cmp
mov
pop
cmp
jne
sbb
lock
mov
ds
lcall
sub
out
jno
mov
inc
gs
dec
jnp
sbb
sub
pop
cmpsl
and
lret
sub
and
lods
sbb
mov
lea
bound
push
cwtl
mov
jne
pushw
out
jle
cmp
push
push
cmpl
sub
andl
orb
adc
xchg
add
push
decl
jne
sbb
out
xor
push
rclb
inc
mov
mov
push
rorb
outsl
aaa
cmpl
pop
ret
inc
push
pop
ret
jo
out
add
sbb
movsb
or
jo
sub
inc
or
das
js
xor
cmp
je
push
mov
sub
sub
loop
push
add
es
repnz
nop
pop
hlt
enter
jbe
outsb
nop
push
inc
mov
lock
rolb
insb
loope
pop
pop
xor
lock
sub
jmp
dec
push
pusha
xchg
sbbl
int
jp
push
lock
sub
mov
adc
pushf
inc
cmp
mov
adcb
jmp
std
sbb
and
or
or
cmp
int
mov
add
cmpsb
imul
call
aaa
mov
inc
lret
jecxz
lds
push
sub
add
push
imul
cmp
mov
js
inc
mov
ret
les
repz
out
jl
push
je
mov
push
push
xchg
cmpsb
xor
test
dec
xor
aas
sbb
pop
mov
pusha
push
pop
push
cmp
cmpsl
pop
or
aas
add
fistpl
dec
jmp
sub
push
mov
push
mov
jnp
or
jns
mov
cmp
mov
push
adc
add
sub
mov
adc
dec
icebp
xor
cmp
jmp
and
push
push
loop
xor
xor
jbe
loope
data16
mov
jg
movsb
add
pop
shlb
mov
mov
jmp
adc
cmpsb
lock
outsl
jo
fidivl
jno
fbld
or
or
push
pop
push
fcoml
dec
dec
xchg
call
push
mov
jne
mov
aam
dec
imul
outsb
lods
cmpb
mov
lods
filds
push
pop
imul
aas
and
or
jl
cmp
jg
inc
jmp
xor
inc
cmp
les
xor
jne
out
pusha
cmp
imul
xorb
xor
aas
sbb
xor
dec
enter
mov
and
popa
pushl
pop
mov
jle
pushf
rcl
lret
jne
add
cltd
push
adc
push
push
or
fiadds
enter
insl
adc
xchg
movb
mov
mov
ljmp
push
cltd
pop
idiv
popa
insl
filds
inc
pop
lea
mov
dec
and
mov
mov
sub
insb
je
pop
sub
or
aas
lea
mov
xor
ret
cltd
imull
sub
mov
lea
cltd
es
sbb
xlat
imul
lea
leave
sub
js
out
xor
ret
pop
sbb
lea
jmp
add
pop
xchg
and
in
sbb
pop
sbb
jo
andb
or
lock
sub
jmp
icebp
xchg
sbb
subl
xor
jecxz
adc
cmpsb
jg
jne
imul
dec
and
and
leave
call
rcll
or
mov
scas
test
mov
imul
pop
lods
cs
xchg
fisttps
or
fucomp
sbb
xor
popf
add
mov
pop
es
sbb
or
arpl
add
mov
mov
push
lock
hlt
aam
out
xchg
add
hlt
invd
mov
xor
push
fldenv
addl
cmp
pop
xchg
popf
mov
xor
jbe
idivb
or
notl
aam
shlb
enter
mov
push
xor
push
push
enter
jmp
pop
push
push
push
push
mov
cltd
das
mov
cmpb
dec
cmp
mov
jp
pop
ja
xor
push
mov
cli
idivl
cli
imul
hlt
ret
popf
or
jge
push
pop
mov
pop
int3
movsl
xorb
movsb
ja
pop
push
push
jnp
outsl
jnp
jecxz
loop
push
das
stos
dec
outsl
fsubs
mov
sbb
push
cmp
jl
cmp
jg
push
jle
jge
adc
mov
or
and
repnz
jle
push
daa
cwtl
or
jb
inc
insb
sub
aad
jle
pop
jmp
jne
test
push
or
add
je
sbb
data16
loop
sub
xchg
xchg
and
sub
adc
int3
and
sbb
shll
insb
repnz
pop
xchg
lock
lea
sub
fdivl
cmpsl
je
orl
orb
jmp
cmp
shll
pushf
test
dec
push
dec
arpl
je
mov
xor
push
mov
andb
push
jl
inc
push
xchg
push
pop
mov
jae
xor
fistpll
or
xor
es
xchg
ja
push
push
push
push
push
stos
add
or
add
lea
or
lea
sub
pusha
and
push
add
movsb
sub
jmp
lea
push
lea
idivb
or
push
sbb
sbb
push
mov
or
mov
and
dec
mov
add
or
loopne
cmp
mov
jb
mov
ret
clc
cs
inc
mov
lret
scas
outsl
jecxz
add
jbe
daa
inc
add
outsl
jmp
ss
xchg
les
or
ja
lret
xor
push
jb
adc
roll
xor
int3
outsl
imul
mov
loopne
adc
inc
add
or
inc
mov
sarl
mov
sub
test
lods
ret
ds
xor
xor
inc
xor
cltd
cld
test
and
and
push
mov
or
jnp
aaa
enter
in
push
dec
inc
inc
popa
jp
and
sub
pop
and
imul
jne
lods
mov
fcoms
push
nop
jno
and
jb
outsb
mov
sub
cmpsb
mov
int3
push
push
push
add
push
les
or
jge
inc
loopne
fdiv
fiaddl
fidivrs
sbb
imul
sbb
jne,pn
sbb
jg
inc
inc
xorb
pop
popf
jmp
shr
inc
push
xor
inc
jg
jmp
ljmp
lock
sti
std
sti
in
xor
cmp
or
cmp
add
loopne
mov
out
dec
pop
fsub
sbb
push
ret
push
push
bound
and
add
fcompl
sbb
sbb
pop
mov
outsl
scas
push
or
ret
jns
jmp
popa
cmp
mov
popa
enter
loope
out
adc
adc
push
jbe
sub
mov
push
or
lcall
pop
outsb
and
add
ret
sbb
mov
mov
mov
nop
out
sub
inc
rcll
pop
inc
ret
in
mov
rcr
mov
leave
repz
dec
dec
push
adc
dec
lret
cmp
dec
andb
adc
repnz
and
dec
add
sbb
clc
dec
push
mov
push
mov
adc
mov
or
lock
mov
sub
ficomps
nop
adc
inc
sub
xor
mov
mov
ficoml
insb
push
cs
pop
jmp
std
ror
int3
push
imul
adc
ds
rcl
or
push
jl
pusha
jb
cmc
inc
add
or
das
out
push
movsl
clc
into
push
test
inc
rorl
mov
mov
rol
ficoms
mov
push
add
scas
loopne
add
dec
push
push
outsb
cs
cmp
inc
push
jae
sbb
xchg
ss
add
cld
mov
pop
adc
aam
or
inc
and
fnstenv
dec
sub
lock
cmp
xchg
jg
mov
mov
popf
mov
inc
xor
stos
rcr
in
sub
out
push
mov
in
sub
push
cmp
imull
call
push
je
sbb
ss
xor
sub
sub
stc
in
cmp
cmpsb
mov
movsb
cmp
adc
fisttpll
push
in
dec
mov
and
and
cmp
adc
mov
movsl
rcrl
sbb
notb
inc
xlat
dec
and
xchg
add
call
gs
mov
sbb
add
setno
xchg
or
pop
pop
sbb
pop
pop
pop
stc
or
ds
push
inc
push
jb
movsl
mov
test
mov
xor
cmp
jb
sbb
push
cli
sti
cmp
jb
or
xorl
mov
shr
or
add
fyl2x
cmpsb
or
sbb
add
sti
cld
adc
push
fwait
sbb
adc
push
mov
lods
rclb
aad
mov
cmp
or
add
insb
es
jo
push
xchg
push
aaa
cmp
sti
inc
cmp
cmp
jl
add
push
mov
pop
xchg
fsubrs
enter
mov
add
xchg
mov
or
jb
push
push
sub
pushl
fisubl
loop
inc
inc
loopne
imul
push
icebp
add
aam
fdivrs
fidivs
jb
adc
pop
loope
xor
lahf
mov
cmp
mov
add
pop
div
leave
xor
jne
push
in
adc
adcl
out
js
adcl
test
push
cmp
mov
imul
fisttpl
out
imul
ret
mov
call
add
xor
pop
sub
mov
sub
in
test
rolb
int
and
jecxz
add
dec
pusha
adc
scas
add
pusha
test
das
or
hlt
roll
stc
cmp
jge
imul
lret
or
jle
andl
cmp
sbb
or
or
push
or
rclb
sbbl
pop
orl
xchg
test
cmp
and
cmp
loopne
pop
sbb
mov
bound
sbb
fs
rcrl
lock
bound
pop
leave
push
sbb
pusha
mov
xchg
bound
add
sub
mov
and
and
mov
xchg
enter
fidivl
leave
adc
stc
iret
push
push
add
push
jo
add
inc
jmp
push
fmull
inc
enter
mov
loopne
xor
sbb
inc
adc
cmp
dec
cltd
sbb
push
inc
push
rorb
push
jmp
cmp
daa
sar
lret
adcl
popa
call
xchg
into
push
pop
push
pop
adc
cwtl
cmp
dec
cmpsb
iret
sarb
add
add
adc
mov
hlt
daa
ret
jo
dec
mov
pop
dec
add
int
ret
dec
decl
mov
in
sahf
sbb
push
repnz
adc
mov
outsl
cwtl
scas
mov
orl
mov
push
fcom
inc
sbb
adc
adc
inc
sub
mov
incl
insb
or
in
jb
push
add
aaa
sahf
ret
push
inc
mov
mov
inc
incl
mov
out
add
test
je
add
cmp
mov
or
xchg
add
inc
push
lcall
ja
cmp
clc
pop
sarl
ss
jmp
xor
addl
adc
add
insl
xchg
inc
clc
lods
dec
inc
inc
inc
pop
je
pop
add
mov
jp
mov
js
cmpb
nop
lock
push
or
push
mov
jle
add
dec
stc
add
sbb
loopne
shll
xchg
or
inc
arpl
dec
je
sarb
sahf
adc
leave
or
rclb
jp
into
inc
mov
xor
inc
pop
stc
pop
adc
rolb
arpl
sub
push
xchg
aam
cli
pop
push
sbbl
sbb
arpl
cmp
pusha
dec
cmp
sbb
lock
push
dec
mov
imul
repnz
rcll
jge
addb
es
subb
decl
pushl
dec
shl
lea
cmp
jb
inc
inc
pop
add
sahf
dec
in
mov
sub
push
push
orl
mov
pop
add
mov
inc
xor
imul
jne,pn
data16
cmp
and
inc
xlat
fcmovnu
mov
add
xor
add
ret
pop
subb
mov
rolb
cmp
je
inc
inc
or
jne
repnz
pop
add
mov
sar
inc
push
push
adc
mov
and
add
mov
xchg
push
jbe
ss
jl
daa
call
jecxz
dec
add
and
and
unpcklps
xchg
add
and
imul
jge
adc
add
imulb
shlb
into
out
int
pop
mov
pop
jl
bound
in
pushf
and
jbe
inc
xor
lds
mov
pop
adc
inc
mov
dec
add
pop
push
dec
mov
mov
jle
pop
test
lea
fstpt
es
or
or
push
cmpsb
cmp
cmp
xor
inc
pop
sub
shl
scas
mov
ss
into
mov
push
xchg
hlt
or
pusha
cld
xlat
test
int3
mov
mov
push
jmp
pop
sbb
cmpsb
dec
jecxz
push
jbe
rcrb
add
nop
and
clc
push
cld
add
and
adc
and
adc
cmp
jb
mov
cmp
jg
popf
jmp
adc
shr
xchg
movsb
mov
or
je
mov
pusha
mov
mov
pusha
movsb
jle
call
sarb
repnz
add
out
add
xorb
pusha
mov
cmp
test
push
pop
mov
test
mov
push
add
loopne
xchg
sbb
repz
mov
push
orb
jmp
xchg
adcl
nop
lock
push
ret
dec
mov
sub
roll
int
inc
mov
aas
push
aaa
xor
ds
pop
xchg
jne
jmp
lret
or
insb
jo
sub
mov
movl
add
add
mov
jmp
or
notb
mov
pop
arpl
aam
inc
mov
or
jae
mov
jmp
sbb
sbb
sahf
jb
testb
mov
daa
cmp
jbe
cmp
xor
lret
lods
dec
cmp
push
outsb
inc
mov
push
ds
xchg
lcall
dec
add
and
dec
je
mov
jle
insl
or
add
les
mov
adc
test
push
mov
xor
xor
mov
mov
add
iret
xor
mov
jmp
push
jl
pop
lods
mov
sbb
lea
mov
sbb
cmpb
mov
adc
dec
xchg
mov
add
xlat
loopne
jge
adc
xlat
fcoms
lret
jne
clc
jg
mov
ljmp
js
push
add
push
cmp
loopne
add
cmp
push
outsb
into
arpl
mov
lahf
jge
sub
dec
push
sbb
push
inc
cli
xor
xchg
and
jbe
add
int
cmp
and
adc
sub
and
or
lock
outsb
icebp
rcll
push
or
lock
cmpsl
pop
adc
xchg
add
ss
lods
add
push
mov
mov
inc
cmpsb
or
not
mov
push
push
pop
fnsave
add
xchg
inc
lcall
imul
push
add
and
jmp
test
mov
into
adc
lock
not
sbb
pop
jbe
rclb
mov
or
push
sbb
cmp
mov
jle
or
xor
xor
sub
popl
push
fsubl
jmp
mov
pop
sbb
push
movl
cmp
es
or
nop
or
fcomps
mov
inc
jno
movsb
sbb
cwtl
shrb
in
and
and
adc
add
or
jbe
stos
push
pop
lea
sub
mov
call
inc
into
out
inc
jmp
in
xor
hlt
xlat
adc
insl
inc
pusha
inc
icebp
xchg
scas
or
outsl
roll
dec
popa
jl
mov
dec
adc
cmp
bndldx
aas
or
cmp
jl
jle
add
icebp
xchg
negb
push
push
mov
clc
xchg
out
clc
adc
push
call
scas
lock
cmp
cli
cmp
push
jne
add
cmpsb
cltd
push
aas
out
jns
xchg
pop
aam
inc
test
gs
inc
push
call
nop
sbb
xor
shll
push
mov
sbb
mov
xchg
inc
insb
loope
ds
push
imul
sbb
jne
push
dec
cs
sub
add
sarb
jmp
dec
push
pop
rclb
sub
mov
add
or
adc
fstl
add
mov
lods
daa
cmp
inc
fldl
xchg
sub
mov
xorb
mov
cmp
mov
mov
mov
arpl
in
and
je
shrl
mov
xor
xchg
and
js
scas
testb
cmc
inc
or
mov
mov
push
adc
lret
or
test
add
add
jnp
lcall
cld
push
xor
fs
and
push
sbb
aam
daa
enter
mov
daa
enter
in
test
add
pop
cmp
add
ret
stos
pop
or
cmpsl
inc
aad
cmp
pop
rolb
shll
or
sbb
rcrl
inc
mov
clc
inc
std
add
push
dec
or
test
jbe
ljmp
jb
sbb
fwait
ss
add
shlb
add
cmp
jb
repnz
xor
lahf
jo
dec
sbb
pop
or
add
push
mov
push
xor
mov
shr
not
add
cmp
or
add
mov
enter
lahf
xor
push
imul
cs
dec
adc
xor
push
push
push
cmp
xor
mov
or
ja
cltd
sub
pop
sub
sbb
xchg
cli
test
bnd
push
pop
mov
or
movsl
dec
push
xchg
mov
sub
push
sbb
mov
popl
cmp
xor
shll
pushf
negl
call
cmp
sub
pusha
lods
imul
pop
jmp
loop
mov
cmp
jae
push
rcrl
ljmp
sarb
out
sub
dec
pop
pop
daa
ss
adcl
push
push
and
push
push
or
jecxz
or
imul
outsb
les
jmp
lret
or
push
xor
mov
mov
adc
bound
adc
outsl
lret
mov
adc
mov
je
cld
shr
mov
imul
jp
add
push
dec
decl
shrl
xor
adc
push
cld
rcrb
ljmp
mov
test
jne
sar
dec
sub
mov
sarb
pop
mov
inc
mov
subb
jae
lret
lea
shll
pop
mov
inc
decb
jne
and
xchg
les
orb
pushf
mov
repnz
pop
add
push
dec
mov
roll
add
pop
and
pusha
ljmp
rcl
xor
and
pop
hlt
shrb
cld
xchg
sub
sar
xor
shll
pop
lret
cmp
jbe
mov
mov
imul
sarb
cmp
je
inc
jno
fwait
lret
cmpsb
data16
mov
shr
not
and
fs
sub
jmp
push
mov
loopne
mov
xor
adc
mov
pusha
dec
pop
add
mov
xor
and
imulb
xor
or
imul
outsl
pop
pop
lock
mov
pop
or
add
or
adc
mov
push
negl
sub
mov
mov
sti
or
xchg
xchg
lods
push
or
pop
lock
dec
or
jmp
dec
adc
repnz
in
lods
dec
push
mov
mov
sbb
mov
mov
insb
decl
int
nop
or
and
dec
mov
pusha
cmpsb
dec
and
shl
add
scas
fistps
je
push
adc
aas
gs
push
or
cmp
adc
andl
iret
push
decb
adc
inc
push
pusha
add
and
nop
dec
scas
xchg
out
and
loopne
int
jb
adc
fildll
enter
push
imulb
ret
lahf
outsb
call
push
jbe
insl
or
mov
cwtl
or
add
inc
daa
lock
add
lock
add
adc
outsl
push
or
push
jmp
js
add
dec
adc
or
add
fisubrl
int
outsb
cld
mov
mov
inc
dec
xlat
add
adc
or
movsb
adc
mul
cwtl
sbb
pushf
jmp
orl
ds
mov
lds
adc
sub
lret
sbb
pop
mov
shlb
jo
xchg
add
inc
xchg
stc
mov
imul
mov
mov
or
or
jne
test
sti
mov
or
mov
or
push
cmp
mov
cli
ja
sub
shr
out
arpl
stos
inc
orl
orl
or
sti
out
sub
cld
lock
call
mov
jne
icebp
xor
test
mov
pushf
dec
and
jb
adc
jnp
pusha
frstor
popf
mov
jecxz
mov
inc
mov
lock
push
mov
jne
or
and
ljmp
int3
les
add
stc
add
shll
ljmp
dec
cld
mov
rcrb
stos
mov
and
jno
out
bound
mov
test
inc
xlat
insl
adc
pop
cmp
hlt
je
sbb
sar
push
mov
int3
push
sub
and
pop
inc
pop
mov
movsb
inc
stc
sbb
clc
jge
jb
rolb
es
add
mov
nop
dec
or
push
add
push
jns
mov
add
mov
shrb
cmc
add
mov
fstpl
dec
jo
push
lea
jbe
pop
jg
jmp
jle
mov
xchg
cmpsl
imul
shll
sbb
iret
jp
rclb
aaa
mov
dec
test
jbe
dec
mov
push
push
pusha
scas
xor
push
aas
lcall
sub
jl
push
loopne
ljmp
outsb
in
push
xchg
sub
pop
xor
push
sar
add
jp
movsb
pop
imul
nop
xor
sbb
pop
test
xor
cmp
xchg
or
into
je
fisttps
pusha
test
pop
mov
orb
fcmovu
ja
ja
mov
jo
dec
ficoms
add
mov
loope
loope
push
dec
lea
mov
ret
imul
cmp
mov
push
cmp
xchg
lret
lret
decb
into
mov
push
cs
rdmsr
cmp
dec
mov
jns
dec
hlt
rolb
sbb
jb
dec
add
jp
insb
mov
ret
pop
and
shlb
dec
push
push
push
cmp
shr
adc
jmp
in
pop
shll
xor
stos
dec
or
out
fldcw
push
nop
cmp
scas
js
mov
and
or
cmp
jb
cmpb
mov
es
fnstenv
jmp
sub
jmp
xor
aaa
arpl
sbb
push
test
add
push
xor
orb
add
je
mov
mov
mov
cli
mov
xchg
mov
jl
and
and
rclb
int3
jno
mov
imul
add
ss
out
repz
mov
mov
into
jne
mov
push
pop
les
inc
test
inc
push
pushf
mov
sub
in
sub
icebp
sbb
cmp
mov
add
cmp
xor
sub
push
ss
push
dec
cmp
mov
and
mov
decb
jne
int3
dec
das
cmp
and
jmp
jp
mov
pop
pusha
dec
bound
fwait
or
mov
imul
mov
je
cmp
push
or
das
pop
mov
enter
sub
jge
cmpsl
mov
inc
or
push
subb
cld
or
push
or
lret
mov
inc
mov
cmpsb
cmp
orb
or
adc
mov
add
scas
and
sbb
mov
lea
mov
sbb
sbb
sbb
pop
rcrl
mov
andl
add
sbb
mov
sbb
rorb
filds
cmp
adc
or
push
pop
push
ret
insb
push
push
inc
loopne
inc
orl
mov
cmp
data16
add
mov
dec
cmp
sub
add
push
sbb
mov
mov
xor
mov
fistps
sbb
jae
rolb
push
mov
push
sti
add
adcl
in
jle
ret
js
sub
pop
lock
jae
loope
or
pop
lcall
inc
pop
mov
nop
xchg
inc
sub
in
orl
imul
and
dec
dec
out
xchg
pushf
fdivs
outsl
or
leave
and
push
push
mov
movsb
xchg
das
fucom
ret
ret
push
sub
sub
lret
adc
lods
xchg
inc
push
pop
loopne
sub
and
add
or
pop
push
inc
or
mov
or
dec
loope
adc
mov
leave
mov
loope
rcrl
ret
inc
sbb
sub
sbb
or
adc
adc
punpckhdq
repz
jmp
cmp
push
inc
nop
lret
cmp
fbld
push
jbe
dec
movsb
adc
outsb
adc
fistl
or
and
mov
iret
pop
inc
daa
add
sub
or
inc
call
jmp
leave
int
pop
xchg
adc
mov
adc
sbb
push
test
xchg
pop
xor
inc
ror
clc
add
int3
and
add
inc
jmp
pop
movl
pop
popa
xorl
cmp
jne
mov
leave
push
adc
dec
cmp
sbb
out
pop
je
sbb
test
movsb
packsswb
rorl
add
push
sub
inc
and
push
test
pop
sub
adc
rorb
pop
add
andb
jmp
pop
icebp
jle
push
push
pop
div
mov
aas
or
sub
adc
xchg
les
or
adc
jns
push
cmp
inc
mov
fiadds
mov
lods
sub
hlt
hlt
mov
test
hlt
xor
xlat
add
daa
and
imul
sub
call
cmc
je
inc
enter
sbb
dec
adc
cmp
or
stos
jb
inc
jge
xchg
xchg
cmpsb
cmp
push
hlt
cmp
je
movl
sbb
sbb
mov
inc
sbb
xchg
xchg
pusha
jnp
data16
or
push
adc
cmpsl
mov
mov
sbb
xor
fdivrp
scas
pusha
popa
pop
jbe
sahf
dec
push
jno
inc
fs
cmp
or
enter
orl
fcoml
mov
sti
outsb
cmp
fildl
nop
pop
jl
adc
ljmp
and
jo
adc
sub
mov
gs
mov
pusha
sbb
arpl
jle
test
ja
enter
xchg
cld
cmp
je
movl
xor
push
mov
data16
sub
hlt
jecxz
divps
outsb
jmp
lcall
sub
and
sub
sti
xor
neg
sbb
and
inc
sbb
ss
push
jecxz
dec
daa
js
pop
xchg
adc
incl
cld
shlb
push
addr16
or
lea
push
cmpsb
adc
add
pusha
subl
cwtl
ljmp
int3
cmp
push
sbb
aam
push
xlat
push
sub
int3
jl
or
jl
mov
mov
add
dec
mov
add
add
pop
mov
and
or
iret
inc
sbb
sub
ja
ja
sbb
or
je
mov
push
cwtl
pushf
aad
mov
jnp
bswap
arpl
rcrl
addl
sbb
rcrl
sbb
lds
sbb
push
test
adc
cltd
inc
inc
push
xchg
add
push
and
adc
add
int
push
in
and
cmp
cmp
imul
es
dec
shlb
out
sbbl
adc
leave
leave
in
ss
leave
leave
leave
leave
sub
xor
fimull
leave
cmp
inc
and
pushf
pushf
fmull
cmovs
pop
pushf
pushf
push
pop
add
daa
daa
fs
daa
daa
je
jl
imulb
dec
es
mov
xchg
cwtl
pushf
mov
movsb
test
and
or
dec
pop
dec
xor
inc
inc
ficoml
add
xor
inc
mov
and
shlb
movsb
mov
data16
cmp
and
test
adc
sbb
push
xor
sbb
dec
and
int
xor
and
subl
sbb
ret
adc
repnz
jo
add
xchg
xchg
inc
ret
cmp
std
add
sbb
dec
jne
out
mov
mov
sbbb
jle
sbb
popa
mov
mov
push
pop
inc
pop
inc
das
add
js
ss
add
scas
ret
test
and
icebp
mov
sarl
mov
xor
mov
push
sub
dec
leave
mov
jo
xor
mov
data16
jne
aad
mov
aad
sahf
push
jmp
inc
cli
lcall
ss
out
add
test
pop
xchg
icebp
fsubr
sbb
outsb
out
xor
call
mov
fildl
mov
pop
cmp
cwtl
adc
push
or
or
icebp
or
xorb
lea
repz
mov
mov
or
outsl
sbb
arpl
cmp
pop
mov
repz
mov
icebp
jbe
ret
je
xchg
adc
or
sub
push
jbe
push
cmpb
jne
adc
dec
sbb
mov
jp
ret
mov
xchg
shl
loopw
push
push
lea
jmp
scas
lea
arpl
aad
push
pop
sbb
sub
imul
sbb
dec
push
dec
and
or
lret
push
add
jo
testb
dec
pop
icebp
and
xchg
jb
out
dec
or
jo
add
cmp
aaa
pushl
dec
inc
and
decl
jo
sti
or
je
mov
add
rcr
out
shll
fs
pop
loopne
jecxz
mov
mov
mov
pusha
pushl
mov
fbstp
mov
mov
call
imul
sub
sbb
mov
cmp
cmpsl
pop
jmp
pop
sbb
mov
movsl
add
ret
pop
xchg
sbb
pop
popf
je
xor
push
in
shrb
inc
sbb
scas
cltd
xor
inc
add
and
movsl
jnp
mov
mov
aam
inc
pusha
cs
inc
add
inc
mov
lea
adc
cs
inc
xor
fmuls
mov
adc
fsubr
fisttpl
sarb
mov
sbb
push
mov
dec
mov
inc
ret
add
insb
int3
addb
xchg
add
xor
sub
adc
mov
andl
cmp
imul
rorb
clc
mov
xchg
stos
sbb
jmp
add
sbb
test
dec
lcall
insb
pusha
mov
and
sbb
add
sbb
mov
mov
stos
sub
xchg
rcrl
jns
dec
iret
sub
shrl
add
mov
cmp
movsb
inc
sti
xchg
lret
test
sbb
push
push
cmpsl
out
mov
jecxz
jnp
js
cmp
mov
inc
test
sbb
push
stos
dec
daa
stos
aam
push
inc
inc
adc
sub
sbb
dec
fwait
notb
push
or
add
push
notb
adc
jne
orl
pop
xor
mov
fldenv
ds
adc
inc
cmp
imul
xor
fsubrs
adc
inc
jb
movsl
lret
rcrl
push
or
jle
or
jge
mov
adc
cld
jmp
or
or
sbb
mov
mov
out
lods
adc
imul
lock
addr16
ret
mov
push
inc
jecxz
inc
adc
jo
add
push
movb
rolb
outsl
mov
mov
lock
xor
jbe
push
gs
movsl
pop
les
in
nop
ss
or
jno
push
cwtl
lods
inc
dec
xor
mov
sbb
into
or
cld
ja
orl
dec
out
cmp
mov
aad
es
cmp
outsb
popa
addr16
or
and
push
aas
shll
pop
mov
dec
cmp
out
xor
test
add
xlat
mov
test
or
sbb
jl
lcall
mov
popa
js
arpl
adc
cmp
push
hlt
sub
adc
mov
add
jmp
pop
xlat
add
pop
inc
orb
lea
jmp
loope
cmp
push
scas
xor
sti
inc
daa
mov
dec
sbb
outsl
fdivl
mov
ret
nop
sbb
push
outsl
xor
cmp
pop
dec
es
hlt
sub
mov
cmpsl
loop
push
enter
cltd
adc
or
sub
xor
ret
or
sub
fwait
ljmp
push
subb
test
push
sub
jl
and
mov
jae
mov
insl
pop
ja
dec
je
and
jno
add
push
cmp
sbb
add
jbe
out
or
nop
jb
jle
and
rorl
xchg
xor
lret
jbe
mov
ds
cmp
inc
pop
roll
dec
sbb
mov
mov
mov
std
pcmpeqb
fidivs
sub
add
filds
les
or
add
sbbb
inc
rolb
pusha
sbb
inc
pop
xchg
cmp
mov
pushl
or
dec
sbb
dec
adc
jl
xchg
fiaddl
push
sbb
imul
jo
add
cs
dec
sbb
mov
je
sbb
sbb
out
pop
xchg
dec
sub
jne
and
inc
call
and
test
rorb
inc
dec
jle
cmp
sub
inc
ss
je
and
sub
js
or
or
ret
inc
outsb
pop
adc
ljmp
je
lea
sbb
cmp
in
push
push
popf
fstpt
in
int3
sbb
movsb
fidivs
cmp
adc
pop
ficompl
in
sbb
add
je
push
mov
mov
push
das
dec
jnp
push
dec
and
lock
fmuls
add
fldl
test
lea
addr16
xchg
test
or
enter
scas
outsl
outsb
rcrl
or
out
push
cmp
nop
arpl
pop
xchg
or
cwtl
in
or
outsb
jne
and
sub
out
pop
adc
aad
mov
jo
and
sbb
or
jg
ja
ja
add
rcr
lret
mov
push
andl
push
leave
repnz
jl
xchg
dec
imul
cmp
adc
add
sbb
arpl
jmp
and
pop
lret
pop
loopne
shlb
nop
push
js
and
int
lock
adc
outsb
inc
rcll
adc
mov
adcl
addr16
adc
daa
incl
leave
out
lea
push
cmpsb
jle
cmpl
push
ret
sbb
sub
jl
inc
inc
shrb
mov
inc
inc
and
pop
add
pop
inc
jmp
cmp
add
jne
sub
cmp
mov
mov
test
and
cmp
add
jmp
sub
xor
mov
cmp
je
cmp
inc
ja
mov
insb
adc
pop
inc
ret
stc
dec
add
add
lds
rcrb
aaa
jl
dec
test
sahf
movsbl
sub
jmp
test
jnp
mov
sub
cmp
cs
push
push
or
and
adc
sbb
jb
addr16
mov
and
and
sub
add
push
clc
inc
inc
out
subb
add
mov
or
add
ret
push
adc
inc
xor
sbb
xor
sub
fs
aam
insl
mov
ja
gs
jmp
cmp
jns
aas
lcall
adc
push
movsl
arpl
xchg
xorl
push
or
cmp
data16
xor
adc
adc
cwtl
push
mov
and
push
ret
shrb
jns
int3
pop
and
iret
inc
mov
jle
xchg
adc
sub
push
push
shll
cs
cwtl
pop
push
outsl
sbb
push
aam
xchg
dec
pushl
dec
cmp
popa
jbe
jb
dec
sbb
jge
dec
xchg
and
je
adc
stos
popf
pop
leave
jne
shll
testb
mov
jmp
push
xlat
data16
iret
or
pusha
or
sbb
push
push
mov
imul
gs
rorb
std
stos
mov
add
jmp
inc
or
ret
daa
inc
sbb
mov
or
mov
dec
es
jg
or
insl
gs
adc
lcall
movb
je
jg
jo
int
pop
sub
std
add
insl
bound
xor
add
push
push
sbb
pop
or
popa
popa
pushf
outsl
cltd
or
push
pop
pop
mov
mov
add
or
inc
int
sbbb
stos
xchg
cli
rcll
or
je
xchg
ds
aam
das
cmc
mov
mov
into
es
push
je
mov
and
jb
cmp
cmp
std
ja
add
cmp
adc
cmp
jne
xor
adc
fidivrl
mov
neg
mov
into
leave
icebp
mov
imul
dec
add
hlt
or
push
ret
xorb
imul
popa
dec
stc
cmc
push
and
in
int
and
test
inc
gs
sbb
or
repnz
std
push
push
pop
dec
cmpb
pop
sub
cmp
dec
and
outsb
inc
adcl
ljmp
pop
out
pop
mov
xor
cmp
jle
cmpl
fsubl
xorl
push
jge
ss
adc
push
jge
dec
scas
dec
filds
sbb
xlat
jle
add
scas
sbb
and
adc
rcl
loope
loope
jl
imul
adcb
stc
add
push
pushf
jp
dec
icebp
js
enter
aas
mov
mov
sbb
fcompl
jne
push
fcoml
pop
cltd
in
push
insl
add
inc
add
jmp
rorl
cmc
sbb
or
test
jg
push
ds
je
mov
test
je
mov
cmp
jb
cmp
jbe
inc
inc
add
jmp
pop
sbb
mov
push
mov
int
adc
ljmpw
shlb
loope
into
sbb
adc
push
or
mov
clc
push
dec
aam
test
and
mov
jl
or
inc
pop
repz
mov
pop
jne
inc
jb
shlb
jno
lods
js
orl
in
add
idivl
and
cwtl
pop
mov
inc
pushl
jns
mov
je
test
push
fstpt
push
xor
mov
lahf
cmp
and
mov
loopne
pop
test
push
mov
or
sbb
jge
sbb
push
and
dec
adc
lret
sbb
rclb
fcoml
daa
jbe
and
xchg
inc
push
gs
addr16
clc
incl
shrl
jle
push
inc
mov
mov
inc
pusha
push
pop
mov
cltd
enter
fs
and
daa
push
push
add
add
in
cmp
push
push
roll
sub
pop
xor
jmp
inc
adc
push
push
push
jbe
aas
stos
rcrb
jle
cs
push
test
ret
test
imul
sbb
xlat
aaa
push
dec
outsl
aam
push
mov
mov
add
sub
popa
sub
fsubrs
call
fsts
xor
mov
mov
lock
ljmp
jl
dec
notl
add
push
js
mov
dec
jbe
movsb
lock
push
xor
add
sbb
jne
push
sub
and
roll
sbb
sub
outsb
jle
mov
cmp
pop
test
sub
push
inc
pop
jbe
ss
les
adc
mov
test
add
addl
and
sbb
repz
dec
rcl
pop
or
inc
neg
mov
je
mov
jg
sbb
in
xor
shll
sub
cld
add
call
pop
jl
jb
xchg
test
jbe
or
int3
cmp
fldt
jns
sbb
mov
nop
cmp
repz
and
stos
dec
xor
push
jmp
adc
loop
jge
filds
push
jmp
inc
add
mov
sub
sub
js
mov
dec
push
mov
mov
add
xor
sbb
cwtl
sub
pop
inc
sar
stos
mov
push
das
pop
inc
and
or
ja
hlt
filds
sub
add
mov
inc
and
and
or
aad
push
xor
stos
xor
imul
sti
push
and
push
mov
bound
cmp
sub
fcoms
sub
mov
add
stc
out
addb
outsl
and
push
jb
push
add
adc
adc
lret
dec
je
imul
pop
sub
sub
xchg
loop
insb
or
lock
fistpll
shl
inc
xor
mov
cmp
je
pmaxsw
das
add
es
loope
or
or
or
sbb
jp
mov
or
ds
push
fmul
xchg
mov
push
jmp
jns
test
sbb
or
decl
jbe
add
cmp
loopne
rorb
pop
es
iret
push
lret
or
es
shl
push
adc
cmpl
lret
mov
nop
shr
fs
xor
jo
and
push
sbb
or
dec
das
aam
out
jne
lods
call
inc
cld
ret
and
pop
sub
cmp
je
mov
cmp
jnp
jb
adc
cmp
addr16
outsb
or
cmpsb
xor
mov
out
fs
mov
jb
fsubr
add
movsb
jb
push
clc
sbb
dec
and
inc
mov
into
cltd
push
ds
jle
add
dec
or
push
in
cmp
insl
dec
rorl
mov
outsb
cmpsb
int3
pop
jp
push
push
mov
mov
or
pop
ret
sub
js
mov
in
dec
xchg
rorb
lock
jmp
cwtl
xchg
aas
popf
cld
inc
cmpsb
fs
cld
cld
les
mov
lock
rorl
mov
mov
into
push
in
mov
adc
cmp
mov
ficoml
adc
inc
push
ret
mov
into
push
sbb
xor
pusha
fadd
icebp
xchg
xchg
lds
or
and
mov
cmp
pop
or
dec
add
cmp
add
cli
aam
int
lods
mov
movsb
lret
outsb
in
imul
or
outsl
leave
sub
and
sub
push
mov
xor
and
das
add
push
xchg
imul
dec
in
shll
inc
mov
jae
sbb
inc
int3
jnp
ret
cmpsb
mov
mov
inc
movl
add
sti
pop
add
ror
sti
or
adc
push
add
mov
aas
bound
and
insb
outsl
arpl
imul
bound
data16
jo
aaa
mov
notb
sbb
punpckldq
dec
gs
gs
jmp
outsb
dec
dec
jo
jae
jns
jne
pop
dec
jbe
jp
bound
popa
insl
push
dec
inc
inc
insw
call
insb
jp
dec
dec
jno
dec
arpl
inc
outsb
push
pop
inc
inc
push
inc
inc
jbe
jbe
push
dec
jne
dec
idiv
jns
push
inc
fs
dec
dec
jne
push
outsl
inc
pop
arpl
dec
push
dec
push
js
push
push
in
in
decl
jne
imul
jo
fs
loop
pop
outsl
mov
insb
jne
and
bound
push
imul
dec
outsb
jae
push
push
pop
imul
inc
inc
jb
jno
popa
push
dec
pop
jp
jns
pop
inc
outsl
inc
lock
call
dec
pop
push
push
pop
js
gs
ja
dec
push
outsl
jae
dec
push
sub
inc
inc
insb
arpl
push
push
js
push
push
dec
jb
imul
ljmp
jae
outsl
addr16
data16
dec
popa
dec
imul
jb
inc
imul
int
cwtl
gs
jne
gs
inc
jb
add
pop
in
pop
das
comiss
fildl
dec
bound
jb
rorb
addb
adcb
addr16
jae
pop
cld
addb
fidivs
push
push
bound
mov
adc
pop
dec
ds
orb
lahf
mov
push
mov
test
add
fidivs
inc
imul
sbb
jle
pop
dec
inc
pop
adc
scas
mov
arpl
mov
push
getsec
pop
popw
mov
add
dec
aaa
scas
roll
pusha
mov
push
push
cmp
pop
aaa
cmpsl
pop
enter
outsl
ja
dec
mov
mov
jb
push
and
call
outsb
je
insb
insb
cs
ja
outsb
insl
pusha
test
push
imul
lahf
inc
insb
push
nop
ja
push
jnp
ffree
jb
jne
inc
dec
inc
js
movsb
mov
or
xor
movd
add
add
add
mov
popa
leave
jmp
jmp
jo
repnz
pop
dec
push
push
pushf
jb
loopne
inc
dec
pusha
inc
pop
jnp
jle
aad
inc
inc
cmp
xor
sub
xor
inc
or
xor
aaa
sub
fbld
inc
xor
xor
inc
jge
dec
outsb
jo
push
js
add
add
add
ss
lds
clc
xchg
cmp
sahf
ret
cmpsb
sbb
inc
outsl
mov
outsb
outsl
ja
and
gs
lea
cs
inc
cwtl
or
add
xchg
in
dec
fwait
add
and
push
push
mov
add
add
add
add
sub
jae
in
leave
push
mov
jle
pop
inc
arpl
bound
ja
jg
push
jns
or
adc
adc
push
pop
sbb
lcall
sbb
sbb
push
pop
and
and
and
es
sub
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
mov
mov
pop
pop
pop
pop
pop
pop
pop
pusha
popa
ss
xor
and
insb
insl
or
push
jmp
jbe
js
jp
jl
jle
add
add
add
and
and
adc
xchg
sbb
adc
add
insb
add
addb
xchg
push
aad
and
rolb
add
loopne
roll
add
subb
add
mov
add
push
mov
sbb
add
add
inc
sbb
out
aas
sub
add
incl
mov
mov
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
jmp
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
inc
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
jmp
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
incl
sbb
jo
and
inc
adc
mov
adc
add
push
dec
push
jne
jg
decl
outsb
push
jne
push
gs
push
push
popa
sahf
dec
popa
outsb
inc
pushl
bound
jb
jo
or
dec
add
inc
jne
push
gs
arpl
out
les
adc
js
je
outsl
mov
sub
add
xor
jb
stc
mov
add
jne
je
insl
and
sti
and
inc
push
dec
dec
push
push
and
das
stc
cs
inc
add
inc
and
aaa
rcl
and
xor
adc
and
jo
imul
and
into
sub
je
mov
fcos
gs
jo
and
insb
outsl
es
push
dec
mov
mov
bound
jns
imul
xor
or
xorb
outsb
je
data16
mov
jne
pop
ja
loopne
xor
and
insl
push
xchg
inc
cs
aas
xor
and
jne
dec
mov
shlb
push
inc
xchg
insl
les
out
fidivs
shrl
and
xchg
and
jbe
dec
mov
imul
push
pop
es
scas
shll
and
push
and
add
xchg
jb
and
push
loopne
test
ds
gs
popf
jb
je
outsl
mov
sbb
jp
push
daa
sub
dec
imul
insb
jb
cmp
add
sbb
dec
popa
sbb
mov
loopne
ret
mov
imul
out
xor
int3
or
inc
inc
inc
push
pop
add
pusha
mov
xor
mov
mull
xor
fadd
push
push
fistps
push
or
pop
aaa
xor
ss
shll
mov
sbb
add
add
imul
nop
ss
fs
jo
cli
jbe
inc
and
mov
xchg
push
mov
sbb
das
mov
inc
lock
sarl
dec
je
in
outsl
jo
xlat
outsl
push
or
arpl
hlt
xchg
imul
jo
in
xchg
ret
bound
push
inc
aaa
xchg
mov
ljmp
das
pop
mov
outsb
popa
pop
or
push
jmp
rclb
push
leave
nop
xor
sub
mov
fldl
or
adc
and
push
xchg
cmp
out
dec
pusha
or
and
pop
push
fldl
mov
push
jae
or
arpl
jo
js
pusha
jo
sub
push
mov
rorb
fsubrs
push
sub
lret
inc
sub
pop
in
jne
jo
jmp
add
jp
movsb
cmp
sub
inc
jne
jno
dec
arpl
out
gs
dec
and
fmuls
arpl
in
pop
les
pop
sbb
in
lea
mov
nop
xchg
xchg
ds
mov
xor
jbe
dec
lock
scas
dec
bound
mov
lock
mov
push
daa
inc
ss
movsb
and
sbb
repnz
xor
imul
ds
in
push
movsb
and
pop
mov
fimull
mov
add
loopne
dec
adc
cmp
cmp
aam
addr16
jbe
mov
addl
fisubs
jbe
push
push
push
cmp
lahf
fs
and
arpl
mov
xor
push
pop
add
gs
adc
mov
es
sub
aad
dec
lahf
jae
sub
pop
inc
xchg
pop
cmp
sub
push
push
jae
cmp
or
push
cmp
call
gs
addr16
subl
adc
adc
adc
inc
or
sti
dec
push
push
push
push
dec
testl
in
loope
lods
dec
je
outsb
pusha
cmp
fildll
dec
jge
pop
jae
lds
fs
add
sbb
push
bound
fistpll
ret
push
inc
outsl
jae
inc
imul
andb
inc
popa
cmp
jbe
bound
jg
sub
push
or
scas
mov
mov
pop
loope
aaa
daa
xchg
mov
popw
out
dec
jnp
cmp
cmp
add
ds
push
das
push
sub
imul
sub
sub
out
frstor
cmp
add
add
in
out
sub
sub
sub
sahf
sub
push
mov
add
push
cmp
je
add
in
dec
pop
pop
test
addr16
push
mov
cmpsb
ret
jb
imul
push
sbb
push
cld
or
jecxz
sbb
xor
xchg
mov
jo
sub
cmp
daa
mov
iret
repz
push
jbe
mov
repz
jo
pop
ds
out
push
mov
negl
push
inc
ds
cmp
sahf
out
sahf
xor
sub
sbb
jns
out
adc
or
add
cmp
out
cld
mov
repz
in
call
cmp
repz
ror
enter
iret
repz
iret
lods
test
mov
out
movb
repz
out
cld
mov
mov
cmp
lock
cmp
sarb
repz
pusha
inc
and
mov
pop
push
lods
andb
xchg
ds
cmpsl
aas
insl
mov
insl
insl
cmp
add
dec
xlat
mov
cmp
add
das
das
adc
push
dec
push
inc
test
adc
sub
gs
pop
dec
ret
dec
mov
xchg
inc
test
jne
or
nop
mov
xchg
outsb
gs
cmp
xor
push
push
push
filds
out
into
mov
xchg
jns
jg
addr16
popa
hlt
int3
pop
add
data16
ss
daa
push
clc
sbb
daa
shlb
mov
jae
sahf
dec
sahf
jbe
je
pushf
dec
inc
aas
add
pop
cli
jp
lea
outsl
ja
cmp
push
inc
mov
cmpsb
jb
dec
fisttpl
cli
hlt
sbb
ss
push
inc
arpl
push
pop
xchg
mov
daa
pop
lea
mov
jle
push
inc
push
xor
cs
dec
dec
mov
ret
mov
push
test
push
cli
add
insb
sahf
cmp
dec
cwtl
gs
sbb
jp
adc
lahf
js
les
and
add
and
subl
dec
add
out
adc
adc
ficoms
fisttpll
test
les
inc
aas
leave
mov
inc
add
xor
add
lods
pop
loopne
ja
lahf
das
faddp
ds
je
ret
push
sbb
and
mov
aas
mov
mov
movntq
push
pop
add
test
pop
inc
pushf
lods
lods
xorb
cmp
shlb
es
fs
mov
cltd
pushw
adc
and
lahf
pop
pop
leave
xor
ja
in
nop
out
push
pusha
jo
mov
cs
ja
not
fsubrl
sti
add
add
out
lcall
lret
loopne
repz
lock
sub
cmp
nop
cltd
mov
pop
fstpl
sub
loopne
add
push
lock
or
inc
ja
aas
out
mov
lds
fldt
leave
sub
test
cmpsl
sub
rcrl
push
jg
lods
xchg
inc
ss
jnp
mov
add
inc
aaa
add
xchg
or
ror
mov
aas
hlt
add
rcrl
dec
inc
iret
outsl
int
in
dec
xsaves
insb
add
fldl
add
inc
daa
dec
ret
in
or
movl
inc
dec
call
cmp
pop
or
push
jg
or
jo
dec
scas
xor
fwait
add
and
mov
add
cmpsb
xchg
in
mov
out
push
lahf
decb
es
ja
mov
xor
das
jmp
xchg
push
mov
xor
or
jbe
or
repz
rclb
push
inc
pop
mov
inc
popf
out
es
enter
inc
test
mov
subb
maxps
push
xchg
int
adc
adc
adc
cwtl
sbb
lea
pmuludq
popf
xchg
xchg
insb
mov
and
mov
out
divps
inc
pop
insl
daa
jns
dec
fmuls
sbb
sbb
or
in
mov
sbb
xor
mov
mov
into
and
and
and
fimull
sub
pushf
dec
dec
jl
mov
sahf
dec
pop
enter
icebp
cmp
or
cmp
aas
jg
cmp
or
xchg
or
add
mov
hlt
sti
push
es
mov
mov
adc
pusha
pop
iret
pusha
in
test
insl
aas
sarb
jg
adc
push
into
ss
aas
and
decl
xchg
or
int3
dec
cmp
jmp
add
js
int3
in
xor
cmpsl
out
and
sub
aaa
jb
pop
leave
add
cwtl
leave
test
xchg
scas
rolb
or
cltd
pop
jo
push
adc
and
adc
movsb
inc
mov
mov
cmp
mov
push
push
pushl
outsl
mov
fs
dec
push
inc
addr16
push
insl
jae
dec
dec
imul
dec
jns
jg
hlt
ja
push
imul
outsl
fs
jb
outsl
inc
call
je
jns
lock
mov
push
adc
jae
xor
add
and
ljmp
and
or
aas
ss
pop
add
and
adc
pop
push
bound
push
fs
jb
incl
or
jmp
popf
jns
lds
inc
call
fnstsw
call
and
or
movsb
inc
in
loope
inc
adc
fistps
js
add
inc
je
outsl
pop
jnp
outsl
inc
push
dec
call
pop
ja
inc
push
inc
push
jns
inc
dec
jge
jp
jae
inc
pop
bound
push
dec
push
inc
ljmp
clc
dec
inc
inc
push
pusha
dec
outsb
pushf
dec
pop
outsb
imul
push
push
push
decl
push
pop
push
push
call
jae
bound
popa
pop
dec
pop
inc
xor
push
dec
bound
hlt
je
dec
and
dec
dec
lcall
repz
push
mov
inc
imul
inc
arpl
in
in
je
pop
aas
fwait
pop
ljmp
bound
adc
sbb
dec
inc
pop
inc
push
fs
dec
enter
add
inc
leave
aas
daa
enter
adc
lcall
sub
sub
inc
cmp
repnz
xchg
cmc
adc
jl
xchg
dec
dec
enter
xor
xchg
dec
imul
mov
push
js
pushf
data16
cmp
adc
or
cmp
imul
or
or
dec
add
daa
outsl
lret
xor
cmp
inc
das
sub
ja
pop
add
imul
call
inc
cltd
sbb
movsl
xor
dec
mov
push
ja
or
int3
lahf
push
add
adc
inc
inc
push
push
cmpsb
sub
cmpsl
add
pop
imul
sub
fidivrl
dec
decl
popa
and
sub
xor
outsl
inc
adc
stc
xchg
sbb
lret
aas
scas
push
ja
pusha
addr16
push
jo
gs
shl
xlat
pop
outsl
test
dec
jo
out
insl
lcall
push
push
dec
arpl
push
mov
jbe
inc
inc
cmp
inc
sub
xor
xchg
in
stc
jo
inc
inc
mov
lcall
cmp
push
aad
push
addr16
push
gs
dec
cmp
dec
sbb
inc
ds
dec
or
je
dec
inc
add
jl
iret
out
and
idivl
cmp
divb
adcl
sub
or
imul
pop
dec
out
fs
mov
lcall
or
ja
repnz
lcall
sbb
orl
insl
xor
out
sub
outsl
aaa
pushl
les
data16
jbe
xor
rclb
push
clc
pop
arpl
loop
cmpsb
pushf
mov
mov
jbe
hlt
jg
mov
dec
scas
jmp
fwait
mov
and
shll
mov
add
xchg
cmpsl
pushl
aaa
jmp
gs
inc
cwtl
push
xchg
push
sahf
mov
imul
lods
adc
sub
lea
inc
or
inc
flds
mov
decl
xchg
jno
inc
clc
or
outsb
fadds
imul
test
scas
sub
lcall
mov
xchg
in
test
xchg
cltd
xchg
ljmp
mov
test
fists
adc
repz
stos
popf
adc
jg
orb
mov
xchg
mov
mov
out
xchg
movsb
mov
inc
mov
xchg
mov
jge
pop
jno
and
popf
test
test
outsl
mov
mov
xchg
pushf
out
mov
incl
aas
pop
cld
std
mov
mov
insl
icebp
xlat
mov
lcall
fldenv
cli
mov
pop
xchg
call
adc
imul
shlb
push
in
nop
push
enter
mov
scas
mov
fnstcw
and
stos
nop
mov
mov
xchg
incl
mov
mov
cwtl
mov
lret
sti
lods
xchg
cli
dec
gs
stc
call
xor
mov
into
mov
repz
pushl
mov
mov
dec
call
jmp
mov
push
xchg
add
loopne
lods
mov
movsb
lahf
push
fmul
mov
cld
push
mov
mov
rcl
lods
scas
aas
xchg
je
mov
std
in
maxps
xor
cs
mov
mov
loop
loopne
lcall
lea
adc
add
and
sub
inc
hlt
pop
cwtl
scas
mov
adc
stos
test
jns
xchg
out
loopne
aad
aaa
cld
stos
dec
mov
int3
adc
dec
mov
js
in
xchg
lods
xor
sub
sbb
fimuls
aam
push
in
xchg
ja
into
imul
out
jp
sahf
xchg
mov
dec
mov
sub
sbb
pop
inc
outsb
fsts
mov
pushl
mov
xchg
jecxz
test
notl
fbstp
xchg
cmp
or
call
push
xor
loopne
mov
scas
repz
ljmp
icebp
std
test
mov
int3
div
test
jg
test
out
jg
pop
mov
mov
dec
mov
mov
addb
movsl
mov
ljmp
mov
into
add
xor
shrb
jo
clc
sbb
ffreep
lea
aam
mov
repz
scas
cld
call
mov
jg
int
jmp
jge
and
incl
fwait
out
mov
loop
arpl
ret
mov
fsubp
jmp
mov
nop
mov
jmp
roll
lods
fldl
push
lahf
add
pop
iret
enter
mov
lods
mov
rcrl
and
mov
xor
fcomip
int
cmpsl
mov
clc
loopne
fwait
and
jmp
sahf
imul
int3
mov
in
in
cli
lods
in
repz
stc
rorb
popf
xchg
incl
movsb
inc
jbe
jp
out
mov
cmp
xchg
data16
fimull
jle
xor
loopne
push
int3
jmp
out
cmp
clc
cmp
testb
and
dec
mov
dec
inc
dec
xchg
comiss
lds
mov
mov
cmpsb
pop
clc
lret
mov
out
les
mov
mov
push
cwtl
bound
enter
stos
jmp
cmp
xchg
cltd
fxch
sub
bound
pushl
and
push
mov
mov
mov
cwtl
stos
mov
pushl
or
out
mov
test
testl
cmp
xor
jo
and
dec
dec
jo
mov
push
rcr
jmp
push
mov
gs
clc
shlb
cld
jg
or
jp
out
mov
out
nop
pop
stc
jmp
aas
out
sub
jecxz
out
xchg
pop
mov
pop
mov
fsubrl
mov
xchg
cmp
movsb
and
adc
addb
mov
shll
scas
sub
lahf
pop
loop
push
stos
out
mov
and
les
gs
and
lea
incl
mov
pop
nop
cltd
scas
mov
cli
cmp
mov
jp
aas
lea
dec
mov
dec
cwtl
add
add
push
dec
nop
mov
aaa
mov
inc
jmp
movsl
sbb
jge
sbb
fistps
jg
jno
sub
mov
mov
push
loopne
pop
inc
jo
mov
fbstp
shlb
fsubrp
repz
int3
jmp
add
jmp
scas
mov
ret
jge
jp
popl
mov
add
fcompp
xlat
add
ljmp
sbb
mov
outsl
xchg
pop
into
les
cmpsb
lods
cmpsb
js
movsb
or
scas
xchg
jmp
push
ljmp
cld
pop
ficomps
std
sub
andb
cld
incl
lods
mov
mov
cmp
popa
or
ss
jae
pop
cmc
jg
mov
sub
int
adc
jg
fwait
xchg
mov
push
cmpsb
out
fldenv
aaa
cld
call
scas
mov
mov
insb
push
js
loope
mov
mov
imul
cwtl
imul
cmpsb
add
mov
je
and
cwtl
aas
mov
addr16
addr16
shr
repz
push
sti
jmp
and
mov
les
jns
pushl
repnz
inc
cld
leave
enter
int3
repz
mov
not
xchg
inc
jg
mov
fmul
roll
mov
lods
pop
sub
aaa
push
std
in
mov
daa
mov
fcomip
jo
call
aam
outsb
movl
xorl
push
adc
stos
out
xchg
lods
mov
insl
push
push
sbb
cmp
cld
mov
xchg
scas
cltd
stos
cs
inc
jbe
cmp
push
incl
fisubl
cmpb
test
pop
cld
lcall
loopne
lahf
ret
sub
push
jno
idivb
jns
xor
jg
sub
xor
adc
and
jnp
sub
cltd
les
pop
sbb
dec
lds
divb
push
fnstsw
loop
ljmp
sti
mov
fists
and
mov
push
pop
repnz
lods
int3
cmpl
inc
dec
mov
mov
rorb
nop
pop
jl
mov
lahf
mov
xor
xor
setp
idiv
insl
xor
sub
in
dec
mov
xor
dec
call
xchg
shll
jg
ljmp
les
pop
push
lock
xchg
mov
mov
mov
xor
inc
out
adc
in
lcall
sub
sbb
sbb
shld
iret
and
dec
mulb
lcall
or
les
inc
add
lcall
out
test
cmpsl
jo
xor
cmpsb
iret
pushf
dec
cli
sub
decb
incl
scas
das
mov
push
and
out
scas
cwtl
daa
jnp
pushl
sbb
popa
push
pop
inc
enter
xchg
sub
xorb
faddl
mov
arpl
mov
ficompl
mov
test
in
scas
push
stc
and
and
cmp
cmpb
js
mov
and
and
aaa
test
lock
in
mov
xchg
push
les
sbb
cs
inc
inc
push
leave
mov
lahf
negl
mov
and
sbb
inc
sbb
and
mov
pushl
std
sbb
out
mov
adcb
test
mov
mov
scas
cmpl
ljmp
data16
pop
lock
pop
cld
roll
jle
icebp
sbb
dec
arpl
fldt
not
out
call
mov
aaa
push
inc
mov
sub
mov
adc
cs
or
sbb
mov
sbb
mov
jge
loopne
mov
js
sub
test
lcall
mov
add
xor
xor
incl
push
jno
pop
fistpl
mov
adc
pop
decb
rcll
xchg
push
xor
mov
call
clc
jno
cltd
insb
inc
sahf
push
fimull
sahf
out
add
int
bound
ret
pop
cmc
mov
dec
push
mov
and
ss
dec
add
sti
and
mov
cwtl
push
divl
filds
xor
jmp
fdecstp
test
ljmp
adc
push
mov
call
cwtl
xchg
adc
mov
mov
pop
sbb
add
mov
nop
ds
imul
ljmp
sbb
cmpsb
rclb
inc
cmpsl
sahf
daa
imul
add
or
jo
lcall
out
bound
insl
std
and
pop
aas
jbe
ds
ljmp
int3
or
adc
imul
cmp
filds
outsl
das
jl
or
pop
cmc
decl
pop
lods
insb
rcrl
rolb
adc
cmp
ret
dec
sub
fdivr
jg
adc
mov
inc
dec
pop
cld
cltd
std
lea
loop
jg
inc
jae
out
dec
cltd
mov
and
popf
repz
and
jg
aaa
ljmp
in
mov
add
xor
std
jg
inc
icebp
add
mov
inc
inc
in
sub
lock
xor
test
out
adc
jmp
cltd
sub
mov
mov
inc
ficomps
xchg
test
ret
jp
test
lock
call
fwait
xchg
sbb
push
das
clc
or
mov
jb
insl
add
jg
pushl
sahf
in
daa
jp
or
inc
cs
xor
movsl
pop
jnp
loope
das
push
add
sbb
fistpll
adc
nop
and
cli
pop
mov
into
adc
inc
inc
pop
hlt
xchg
repz
add
or
sbb
xor
add
xor
pushl
or
jl
xchg
mov
pop
outsl
imul
pusha
jecxz
pop
cli
cmp
pop
les
mov
ret
adc
push
bound
test
iret
push
push
fistps
mov
add
or
cmp
stos
sbb
ja
scas
or
lcall
loope
les
enter
sbb
sbb
cmp
sbb
sub
out
clc
xchg
xor
jecxz
cmc
mov
and
sub
sar
or
mov
scas
mov
in
inc
int
sahf
mov
cwtl
repz
lods
gs
adc
outsl
push
rorb
mov
xor
shlb
cmp
stos
pop
mov
or
add
lret
jb
inc
and
cmpsl
ja
lock
dec
sbb
mov
jmp
adc
gs
lcall
sub
push
in
and
pusha
jns
test
ljmp
icebp
nop
enter
fidivs
mov
mov
pop
and
push
xchg
rolb
sbb
cs
cmpsb
adc
divb
add
mov
lret
aas
lock
mov
mov
in
pop
scas
sti
jmp
dec
or
inc
sahf
jmp
pop
out
and
cmp
in
lcall
clc
xor
and
sbb
pop
pop
bound
sub
sub
cmpsl
lcall
jl
icebp
and
pushf
inc
sbb
adc
add
pop
or
mov
mov
sbb
adc
cmpsb
mov
lock
pop
enter
insb
outsl
cmp
and
stos
mov
mov
jmp
test
xor
scas
push
add
and
stos
lods
xchg
jns
inc
pop
add
outsl
rcrb
data16
mov
mov
sahf
mov
fnstsw
dec
mov
mov
out
jne
adc
stc
fwait
aas
xor
cmp
xor
xor
mov
mov
outsb
sahf
adc
cli
sub
mov
and
pop
add
ss
rcll
xchg
mov
push
lret
leave
or
lea
es
call
jge
mov
aam
dec
pop
push
inc
sub
pop
lods
nop
outsl
xchg
test
clc
pushl
pop
outsb
movsl
pushf
mov
insb
jne
lcall
roll
mov
aas
pop
xor
rorl
push
sub
xor
bound
mov
jno
or
iret
xor
mov
test
jmp
sbb
lret
fimuls
movsl
repz
cmpsl
stos
mov
mov
sub
or
adc
jg
stc
sub
out
inc
and
lahf
insl
sub
and
out
lcall
sahf
fisubs
dec
iret
hlt
int
outsb
enter
out
test
test
jns
push
or
add
test
rolb
arpl
hlt
jg
mov
or
pop
xchg
cmp
cs
sbb
xchg
pushl
push
mov
sbb
adcl
adc
dec
lock
jl
scas
cli
and
shrl
cmpsl
mov
cld
ljmp
sti
add
test
fdivp
or
mov
fstpl
cwtl
stos
mov
out
jb
jmp
into
mov
mov
lods
into
pushf
cltd
popf
push
cmp
mov
into
cmpsl
mov
and
mov
aaa
cmp
mov
mov
into
cld
sub
jno
mov
lods
je
adc
leave
es
sahf
negl
je
adc
idiv
out
sub
sti
or
mov
stc
xchg
arpl
movsb
xorl
fbstp
inc
sbb
rolb
mov
mov
jg
push
mov
std
push
cli
push
mov
push
pop
push
in
sub
fbld
rorb
sbb
decl
out
inc
dec
and
cmp
lds
insl
js
inc
les
add
lcall
mov
nop
decb
movsb
push
cld
decl
inc
inc
adc
dec
push
lods
lea
repz
or
incl
test
inc
sahf
sahf
sub
push
lret
pushf
push
xchg
iret
ljmp
mov
rorb
nop
shrd
lcall
and
outsl
mov
inc
jbe
cmp
mov
mov
push
and
inc
pop
shlb
in
out
add
xchg
stos
test
shr
dec
incl
jo
lock
out
and
push
mov
ja
lock
ret
mov
pop
nop
mov
fistpl
hlt
push
push
xchg
stc
arpl
faddl
add
icebp
push
insb
mov
push
repz
outsb
xor
jecxz
mov
mov
and
mov
lcall
lcall
xchg
mov
push
mov
mov
xchg
sub
mov
out
pop
cmp
pop
dec
aaa
jp
into
dec
orb
jg
scas
rorb
xor
adc
sbb
aas
lods
push
jb
out
arpl
lea
bsf
rorb
repnz
test
in
in
movb
inc
enter
xchg
rorb
call
mov
sbb
mov
and
mov
xchg
loop
addr16
sub
push
sti
cmp
cli
pushl
sahf
insl
movsl
cwtl
shlb
pop
loopne
jg
jecxz
mov
jns
xor
repz
sahf
incl
or
mov
inc
xor
iret
pop
and
and
rclb
dec
mov
clc
in
dec
inc
push
sbb
lods
xchg
mov
aaa
add
clc
loop
and
xchg
jle
sti
or
lea
scas
out
imul
jno
ss
sub
mov
and
in
sbb
lock
jecxz
xchg
out
xor
das
clc
std
or
cmp
mov
sub
je
call
fwait
mov
dec
push
and
adc
loop
lahf
mov
loopne
mov
jno
jg
inc
scas
and
xchg
or
add
xor
fdivr
sahf
xchg
mov
xor
lods
cmp
das
fimuls
int
dec
out
pop
shlb
mov
or
dec
int3
int
cld
xchg
fsubrl
push
and
rorl
inc
dec
dec
mov
stos
outsb
inc
and
stos
mov
cmc
rcrl
out
or
and
std
in
add
fisubl
mov
fnstsw
inc
sti
js
in
or
jb
aaa
ljmp
clc
dec
push
in
loopne
mov
sti
jmp
repnz
insl
mov
ficoms
enter
jbe
add
pop
es
int3
sub
lret
lahf
inc
push
xchg
pop
adc
push
adc
add
cld
or
testl
or
and
enter
nop
popf
cs
dec
jbe
aas
test
arpl
adc
call
outsl
cs
mov
call
inc
sub
fs
fidivrs
mov
mov
push
lods
mov
jge
xor
cld
loope
pop
dec
out
cld
pop
xchg
popf
mov
mov
fwait
mov
mov
movsl
fidivs
fwait
outsb
scas
or
or
jo
ss
inc
hlt
mov
adc
mov
xor
mov
fisttps
adc
fnstsw
stc
int
std
mov
and
and
out
ficompl
mov
xor
sbbb
imul
xor
xor
lret
mov
out
ret
gs
cs
call
mov
sbb
and
inc
shlb
mul
cli
int
mov
push
pop
inc
in
xor
repz
roll
lret
cmpsb
shlb
sbb
into
dec
icebp
or
xor
pop
outsb
loop
add
rcll
cwtl
aas
pop
into
stc
stos
jns
cmp
cld
push
mov
jne
fldenv
push
lods
cmp
cli
or
xchg
ud1
ds
jmp
adc
sbb
cmp
sbb
adc
in
sbb
add
xchg
cmp
lcall
testb
ds
mov
inc
xchg
or
out
adc
mov
addl
add
jne
cmp
scas
mov
or
orb
in
xor
outsb
roll
fwait
dec
adc
xchg
add
idiv
mov
xchg
testb
out
shrb
xor
pop
sbb
jg
lret
enter
cli
push
mov
inc
xchg
add
icebp
jg
lock
pop
mov
sub
push
xlat
sti
lea
mov
jno
sarl
mov
xchg
fisttpl
mov
std
mov
jo
aas
nop
mov
mov
mov
push
sub
add
sub
jmp
out
or
movsl
adc
sbb
fcomi
call
jbe
or
test
dec
fdivrl
pop
jecxz
lcall
mov
lods
cmp
insb
rcrl
xor
testb
adc
lods
sub
or
mov
pop
push
jg
or
dec
fdivs
push
sub
out
inc
xor
and
shlb
mov
adc
sub
xchg
mov
negb
xchg
sbb
outsl
inc
movsb
pop
inc
ljmp
push
outsb
xchg
and
push
mov
ficomps
inc
jle
sti
mov
scas
aas
shlb
mov
scas
notb
fisubs
pop
and
mov
mov
pop
mov
mov
lods
popf
xor
xor
stc
out
inc
add
mov
lcall
cmp
cmpsl
and
xor
cmp
jecxz
add
int
and
aaa
pushf
rorb
ret
jns
cs
or
fiadds
and
je
cmp
into
mov
cmpsl
adc
cmp
ja
mov
lahf
dec
leave
test
mov
push
mov
mov
mov
cmp
insb
mov
repz
mov
mov
repz
movsb
sbb
jg
push
lea
inc
ss
insb
adc
subl
decl
or
xchg
xor
and
cmp
std
pushl
cmp
dec
call
stos
mov
sub
popa
or
mov
jmp
add
dec
mov
out
fildl
addb
fstpl
enter
inc
sbb
add
rcll
stos
push
or
lcall
mov
fisubrl
call
mov
mov
pop
imul
fiaddl
push
adc
jmp
sub
fisubl
out
mov
sti
and
imulb
fildl
push
shrl
in
xor
adc
sub
icebp
pop
adc
jmp
fildl
xor
aas
es
jne
and
subb
sub
xor
pop
repnz
xchg
hlt
pop
or
inc
sub
mov
test
addl
lea
and
imul
mov
ja,pt
cmp
and
cs
push
sub
cld
stc
mov
cld
lret
add
adc
rolb
mov
cld
dec
adc
sbb
or
add
pop
call
fcmovne
testb
sbb
sbb
out
cs
js
jne
push
cli
xor
dec
into
and
sahf
nop
bound
in
and
dec
mov
das
pop
enter
je
push
inc
sbbb
ljmp
mov
adc
xor
sbbl
scas
rolb
push
sti
das
nop
cs
add
mov
negb
sub
test
in
js
ficomps
aad
loop
addr16
inc
inc
rclb
add
jmp
outsb
cmp
scas
adc
test
jle
mov
std
xor
ret
xor
or
cltd
mov
add
mov
call
cmp
aaa
daa
aaa
les
fsubp
push
bound
clc
scas
ret
jno
mov
mov
xchg
imul
and
and
xchg
lcall
jg
decl
cltd
sbb
cmp
sub
push
fmuls
aaa
ret
fcompl
xor
lret
call
push
fdivrp
sub
push
mov
jle
cmpsb
decl
push
sub
jg
jg
es
cld
mov
fcomip
xor
push
jl
inc
dec
mov
out
iret
movb
or
inc
sti
loope
jbe
sbb
adc
mov
add
sbb
add
clc
cmp
mov
push
notb
or
xor
sbb
lea
mov
and
loope
sahf
lcall
or
lret
fcomip
inc
jp
jecxz
ljmp
inc
lcall
in
xchg
inc
sub
push
bound
or
add
test
insl
jg
scas
fimuls
in
mov
mov
inc
push
inc
sub
fimuls
scas
movsb
sub
ss
hlt
or
mov
pushf
sub
xchg
or
fisubrs
sub
data16
jae
jle
aaa
ss
call
aad
pop
jb
mov
loopne
xor
cli
xor
das
js
decb
and
ds
popl
push
fidivrs
lret
xor
xor
sbb
push
stos
and
fldenv
push
or
stc
xchg
out
sbb
ret
je
clc
cs
loopne
mov
dec
or
stc
fs
xor
shrl
mov
xor
sbb
mov
cmp
xchg
mov
mov
xchg
inc
mov
rolb
fisubs
xlat
inc
mov
daa
clc
push
mov
cli
sbbb
mov
add
stos
mov
jg
add
push
sahf
inc
xchg
imul
push
aaa
lock
pop
xchg
cs
addw
stos
jo
jle
lea
idivb
mov
push
test
rcrl
loope
push
or
or
lahf
rclb
decl
ds
repnz
xchg
xchg
enter
push
add
or
fists
clc
sbb
mov
js
cmp
mov
fscale
or
ljmp
test
pop
xor
loope
test
cmp
scas
dec
add
js
movsl
or
lods
or
jnp
repnz
lcall
stos
popf
test
popf
insb
mov
inc
jg
adc
jl
shll
out
mov
test
fsubp
hlt
pop
ljmp
test
jo
and
movsl
inc
pop
out
sub
sub
lock
mov
sbb
out
xchg
mov
and
out
inc
repnz
dec
pop
dec
jle
mov
lock
mov
adc
aas
adc
pushf
aas
in
sbb
loop
sub
lock
sbb
pop
push
fdivrs
xchg
loopne
dec
xchg
xchg
popf
fistps
aad
mov
fs
xchg
daa
data16
ljmp
pop
inc
pop
loopne
data16
xchg
movsb
push
dec
lcall
stos
pop
pushf
cmc
add
sub
sbb
test
icebp
and
call
add
push
clc
adc
mov
xchg
dec
repz
push
popa
push
ja
jl
pop
fs
ljmp
pop
clc
and
in
int3
or
fisubrs
push
mov
mov
xor
sbb
sbb
into
push
push
cmc
out
lods
inc
enter
mov
inc
mov
mov
icebp
pop
add
xchg
data16
cltd
xor
sub
pop
mov
jle
fldenv
stos
mov
adc
leave
inc
ljmp
lods
test
jne
mov
mov
push
pop
into
jg
mov
xor
popf
sbb
mov
adc
lahf
imul
lahf
and
sbb
add
adc
mov
sbb
cmpsl
lahf
scas
sti
sub
clc
mov
sbb
sub
push
xchg
iret
nop
inc
test
shrl
rolb
xchg
filds
out
jg
lcall
mov
mov
js
jg
xor
bound
out
loopne
adc
out
jl
ss
aas
out
jbe
cmp
test
out
and
stos
mov
outsl
mov
out
and
out
lock
les
adc
and
movsl
pop
mov
push
inc
add
jg
scas
aaa
mov
sbb
sbb
xor
mov
into
jne
adc
jae
ja
fs
mov
push
dec
out
jbe
jo
sub
push
cwtl
mov
cmpsb
cmp
mov
bound
loop
xchg
or
xchg
pushl
leave
loopne
das
adc
decl
lods
sub
push
aas
dec
rorl
cmp
xchg
push
mov
adc
ljmp
jo
outsb
in
xor
xor
in
inc
sbb
pushl
std
lcall
dec
rorb
in
jl
push
out
add
jg
dec
cmp
add
mov
scas
into
std
xchg
lcall
xor
push
mov
aas
cs
in
sbbb
xor
jmp
stc
shll
std
je
pop
sahf
les
das
gs
jo
lcall
mov
jecxz
sbb
cmp
insl
mov
push
xor
sbb
mov
cwtl
mov
sub
data16
xlat
cwtl
inc
stos
xorb
xlat
call
in
rcrb
jg
call
mov
stos
push
jmp
js
xor
inc
ljmp
xor
popf
pop
cmpsb
mov
pop
add
popf
out
inc
in
jle
push
mov
scas
int3
inc
ret
jmp
jb
push
repz
dec
call
stos
cmpsb
enter
into
icebp
fnstsw
mov
dec
or
mov
fisubrs
cltd
lahf
es
les
sahf
xchg
test
jbe
ffreep
dec
fidivrl
fldcw
inc
mov
bound
in
cmp
adc
ljmp
imul
dec
dec
add
outsb
out
divl
jmp
pop
jb
aaa
repnz
and
out
adc
sub
insb
pcmpgtw
add
lret
pop
stc
jne
jb
push
in
add
ljmp
in
data16
xchg
aam
lcall
aam
cmp
sub
call
data16
popf
cwtl
fistl
incl
lods
bound
sti
add
pushl
fbld
mov
push
xchg
cwtl
ret
inc
js
jecxz
mov
movl
in
mov
and
psllw
loop
pop
rcrb
mov
fisttps
push
je
es
mov
push
movsl
mov
rcrl
jns
int
add
fwait
nop
xchg
cltd
into
icebp
ljmp
mov
mov
das
stos
cwtl
adc
dec
mov
ret
inc
mov
mov
ljmp
in
fs
adc
mov
lret
and
cld
cmp
add
popf
jmp
nop
mov
push
out
fdivl
lcall
or
inc
stc
cltd
lock
fs
push
and
out
jo
aaa
mov
test
jae
popa
ljmp
xor
pop
loopne
lds
out
sub
out
mov
mov
and
mov
es
pop
xor
xchg
pop
std
lcall
adc
inc
sbb
mov
cmp
fdivrl
dec
mov
call
roll
cmp
mov
jne
frstor
mov
mov
inc
std
sub
nop
out
xor
lock
add
out
xchg
daa
lret
aaa
jle
push
mov
pop
push
popa
insl
into
ficompl
loopne
mov
mov
inc
les
into
test
mov
inc
mov
jns
sbb
call
jge
fwait
scas
lock
stos
mov
xor
or
clc
cmpsb
push
fisubrs
dec
les
data16
cli
fsubl
sub
sbb
shlb
incl
xchg
sahf
xchg
xor
mov
dec
cld
call
out
push
mov
and
or
and
pop
adc
fldenv
xor
mov
mov
mov
or
xchg
dec
jg
or
add
mov
aas
push
aas
outsb
sbb
lea
xchg
mov
push
sti
and
jmp
xchg
mov
jno
dec
sarl
mov
adc
aaa
dec
xchg
mov
mov
mov
lock
add
xchg
andl
lret
dec
mov
scas
mov
push
out
and
mov
mov
incl
xor
or
add
lods
pushl
mov
and
xchg
movsl
xor
outsb
rcrb
or
sub
mov
es
movsb
ss
ljmp
mov
fisttpl
test
xchg
add
mov
cmp
xchg
add
inc
sahf
inc
or
testb
inc
cld
sub
mov
insb
and
xor
fistps
cwtl
cwtl
mov
in
cmp
mov
cmp
inc
shll
lcall
mov
js
das
mov
mov
popa
stos
adc
jg
and
mov
sbb
enter
test
jmp
mov
inc
push
lahf
shlb
or
dec
sub
rolb
sahf
insl
loopne
mov
cmc
push
pop
sahf
les
dec
aaa
ljmp
xor
pop
mov
pop
jnp
test
fwait
adc
cmp
xchg
inc
mov
push
xor
outsb
inc
mov
mov
arpl
dec
lret
mov
xchg
or
or
test
mov
cs
cmp
loopne
mov
ret
mull
outsl
pop
mov
mov
test
decl
dec
adc
sub
movsl
sub
fnstsw
js
decl
cli
pop
mov
sub
inc
orl
into
mov
add
ret
mov
or
add
lret
js
xchg
mov
loope
data16
sub
pop
jle
push
into
cmpsb
push
aas
cmc
xchg
push
push
pop
into
test
add
movb
call
xchg
je
aas
nop
enter
test
xchg
push
add
in
push
mov
mov
movsl
loopne
inc
mov
iret
mov
push
and
into
test
int3
adc
std
pop
daa
mov
and
add
pop
push
fisubrs
mov
xchg
and
sub
xchg
adc
test
movsl
xor
mov
sub
pop
push
ret
xchg
pop
sete
fisttpl
jecxz
clc
out
push
add
jg
jg
cwtl
jmp
lea
mov
sub
cmp
clc
mov
push
inc
aaa
xlat
lahf
jno
inc
mov
xchg
and
dec
outsb
push
mov
xchg
nop
and
inc
aas
xchg
repnz
mov
pop
ja
mov
mov
fwait
adc
push
mov
xchg
xlat
mov
and
outsb
xor
mov
jg
xlat
scas
iret
mov
and
push
outsl
xchg
mov
es
iret
cmp
and
fidivrs
aas
add
fcomip
cmpsl
jo
imul
jnp
xor
mov
scas
pushf
es
mov
popf
les
push
push
xchg
or
pop
dec
incb
mov
pop
lea
mov
out
adc
inc
jge
fisttps
xor
mov
lds
popf
cmp
xor
mov
and
lcall
cli
out
pop
add
cmp
push
mov
out
call
push
mov
ljmp
mov
and
jge
adc
movsl
mov
stos
sub
js
stos
jg
fucomip
outsb
leave
sbb
inc
xchg
add
inc
fildll
cmp
sub
arpl
sub
inc
add
data16
jb
lahf
shrl
cld
sahf
rorb
cmp
pop
movb
shlb
out
adc
adc
test
scas
cmova
nop
or
and
shll
mov
dec
mov
and
sti
adc
xchg
clc
popf
mov
dec
adc
insb
in
pop
push
gs
jmp
mov
cmp
and
les
push
roll
lcall
inc
mov
sti
ljmp
mov
cwtl
xor
jne
cmpsb
sub
movsl
ficoml
leave
cmp
shrb
data16
xchg
jno
inc
fwait
jmp
sti
or
mov
out
addr16
inc
repz
cmp
push
into
mov
repz
leave
sbb
mov
adc
dec
out
mov
xor
aas
decb
jb
or
enter
stos
pop
jnp
push
mov
iret
ljmp
sbb
call
stc
add
xor
ret
std
and
sub
and
insl
lock
mov
clc
cmp
pop
xor
cltd
aas
in
sbb
or
jmp
xchg
mov
mov
es
pop
out
jg
jg
sbb
enter
cmp
inc
addr16
fcoms
push
adc
jg
jl
test
faddl
pop
sub
lea
xor
sbb
call
mov
adc
cmp
jmp
mov
mov
lcall
jp
mov
movsb
es
inc
test
je
lcall
mov
add
mov
out
push
test
scas
inc
lea
mov
testb
dec
mov
cs
jl
push
jecxz
loopne
sub
push
aas
dec
shr
aam
cltd
xor
inc
jb
xor
add
insl
repz
movsb
inc
outsb
xchg
push
push
arpl
sub
jo
aas
loopne
aam
neg
xchg
inc
lods
filds
inc
inc
int
bound
arpl
stos
repnz
loope
cmc
push
sti
subb
xchg
jno
call
adc
and
inc
les
lock
push
sbb
and
pop
icebp
and
and
jo
xchg
jno
pusha
push
std
ret
dec
incb
loope
jg
inc
jecxz
pop
adc
add
pop
sti
sbb
ljmp
insl
push
frstor
jno
lcall
sarb
pushf
repz
sub
push
in
das
clc
xchg
ret
iret
inc
cld
addr16
push
out
push
insb
repnz
decl
mov
aaa
inc
fsubl
cwtl
or
dec
fistpl
push
call
xor
repz
pop
outsb
ds
mov
ret
pop
cmpsb
jge
daa
mov
or
fisttps
lahf
into
jg
pushl
push
in
jb
dec
fildl
mov
inc
je
cmp
dec
cmp
ljmp
pop
ret
sbb
push
int3
push
mov
out
aas
cmpb
pop
aam
pusha
in
cmp
clc
fstps
add
out
xor
out
cmp
outsb
in
and
cltd
rcl
movsb
decl
or
lcall
js
mov
mov
or
test
cld
dec
pop
jl
scas
xor
lds
push
fiaddl
lcall
shll
inc
aas
stc
test
pop
out
cmp
sub
jmp
jge
dec
mov
lea
movsb
popf
mov
mov
push
ljmp
pushf
mov
fildll
sbb
mov
jp
xor
call
leave
or
movb
push
stos
cltd
out
lcall
mov
xchg
push
mov
jle
sti
xor
sbb
pushl
outsb
imul
lret
mov
push
xor
sarb
filds
sbb
cmpsb
mov
ret
jge
mov
mov
notb
outsb
jno
add
and
cld
xchg
jno
popf
mov
jo
sub
mov
mov
out
jne
adc
push
dec
dec
cwtl
inc
dec
or
aaa
jecxz
pushl
xlat
mov
mov
xchg
mov
dec
inc
push
inc
mov
push
loop
incl
mov
and
inc
mov
lcall
icebp
das
add
test
cmpsb
out
mov
mov
pop
sbb
sbbb
and
mov
ret
mov
add
cmp
add
decl
mov
inc
lret
or
lcall
push
push
mov
scas
mov
test
aam
test
out
ja
cmp
mov
xor
xor
xchg
fists
daa
mov
xor
popa
add
pop
xchg
sahf
mov
mov
je
lock
mov
xchg
cmpsb
push
iret
or
sbb
aas
out
add
push
mov
pop
xor
adc
movsl
stos
mov
mov
or
inc
int3
sub
ja
js
stos
cmp
inc
out
outsl
mov
ljmp
inc
mov
add
out
pop
lahf
loopne
outsb
lods
out
sub
xor
dec
cltd
test
cmovg
cmp
jbe
mov
std
pop
sahf
mov
rcl
inc
and
out
mov
jb
dec
fs
dec
es
or
xchg
std
and
lret
cmp
incb
out
xor
and
mov
insl
ficoml
xchg
push
xchg
stos
xchg
xorl
rolb
ljmp
jbe
insl
js
and
jb
push
and
or
xor
iret
mov
mov
and
cmpsb
dec
out
call
scas
les
add
mov
mov
test
push
loope
movsb
pop
push
iret
jle
adc
int
repnz
jbe
mov
and
test
jecxz
jge
jo
dec
std
xor
pusha
xor
adc
lods
cltd
xchg
mov
cwtl
clc
iret
mov
cli
and
or
faddp
mov
in
and
pusha
frstor
nop
insl
rorb
add
cmp
dec
int3
cmp
ljmp
jno
nop
inc
in
xor
pop
in
mov
call
aaa
and
cmp
int
xchg
nop
xchg
cwtl
mov
int3
movsl
adc
pop
lock
or
xchg
xchg
or
pop
jbe
and
lcall
je
mov
and
sbb
cli
call
or
mov
repz
mov
pop
adc
cli
outsl
adc
lea
or
jle
lock
mov
int3
adc
sbb
inc
mov
lcall
fwait
in
or
xrelease
dec
cltd
divb
mov
sbb
lock
sbb
sbb
xchg
hlt
cmp
test
add
loop
outsb
pop
std
mov
scas
sbb
jg
and
mov
rcrb
push
stos
mov
fmull
mov
cmp
mov
sub
lahf
push
jp
arpl
pop
mov
data16
dec
mov
cwtl
aas
mov
or
sub
push
sti
or
xchg
fdivr
fisttpll
xchg
testb
add
xchg
leave
mov
sarl
movsb
lods
in
js
xor
cmp
ljmp
out
xchg
dec
cmpsl
out
out
iret
pop
lock
inc
ret
fidivl
add
fwait
insl
add
outsb
fdivs
in
xchg
cltd
mov
insb
cwtl
cmp
sti
out
mov
imul
mov
fwait
and
jae
or
pop
inc
sbb
scas
jbe
mov
fildll
xor
insl
movb
pushl
dec
xor
and
cli
push
mov
add
sub
lods
out
push
add
fisttps
mov
inc
outsb
jp
pop
mov
out
test
incb
testb
mov
inc
jecxz
lcall
xchg
xchg
mov
cmc
test
jg
and
mov
sahf
jnp
pop
push
push
mov
inc
cmp
mov
loopne
pop
dec
ljmp
out
mov
enter
and
sahf
adc
cmp
insl
data16
fistps
sbb
js
stos
push
outsl
rcrb
sahf
pop
call
dec
out
xor
sti
hlt
repnz
inc
add
cmpsl
cs
sahf
call
dec
pop
mov
pushl
jne
add
inc
cmc
das
push
push
dec
insb
jno
adc
push
push
pop
jo
mov
out
mov
xchg
dec
cmpsb
adc
jge
cwtl
jnp
jp
das
cli
push
mov
test
mov
sub
cld
addr16
test
mov
push
inc
adc
mov
add
push
clc
popa
pusha
nop
lahf
subb
mov
jo
xor
xchg
aam
adc
jbe
cmpsb
clc
div
es
sub
bound
push
out
or
or
dec
inc
out
repz
stos
xchg
mov
mov
mov
xlat
fistpll
ds
inc
adc
mov
and
sbb
mov
add
or
lcall
and
mov
sub
fs
jp
sbb
int
jbe
idivl
dec
xchg
ja
je
adc
leave
xor
inc
pop
push
pop
jbe
pop
dec
dec
sar
lcall
lods
mov
xlat
icebp
cmp
sbb
jp
stos
ds
scas
test
popf
inc
xchg
ret
xorb
out
xor
divl
nop
mov
mov
dec
xorl
jg
push
push
cld
sub
loope
mov
scas
adc
cmp
adc
jno
fistps
scas
cli
loop
addr16
adc
mov
mov
cmp
jmp
cmp
movsl
ljmp
mov
dec
push
xchg
mov
out
mov
jne
das
mov
data16
pusha
into
push
lcall
ss
lock
js
or
mov
jp
cmpsb
ljmp
lret
sahf
out
and
addr16
ss
movsl
jo
lcall
inc
movsl
into
mov
sbb
mov
and
bsf
in
mov
xor
pop
jns
sahf
cmp
test
dec
inc
scas
icebp
adc
scas
pop
fidivs
mov
mov
out
imul
into
xor
clc
add
jle
scas
jb
xor
nop
fsubrp
mov
cmp
push
popf
jns
inc
mov
fstpt
call
ds
insb
pusha
mov
xchg
sub
addb
push
xchg
loop
or
mov
add
mov
mov
mov
xchg
stos
mov
pop
icebp
lret
iret
and
addl
pop
jecxz,pn
sub
adc
popa
jg
popf
testl
jmp
call
lahf
push
sub
daa
jecxz
sahf
in
sbb
push
stos
pop
ljmp
pushl
mov
dec
in
push
cmp
jle
test
rorb
xchg
dec
jbe
xor
addr16
stos
outsb
inc
sub
pop
add
sub
insb
shll
out
sti
mov
lea
cmpb
hlt
fwait
loop
pop
cmp
aas
mov
jb
test
cmpsl
imul
lcall
in
popf
pop
enter
adc
dec
sbb
inc
pop
lret
movsl
and
fwait
mov
in
push
xor
push
movsl
fmull
test
xor
xor
cli
fbld
cltd
int3
cmp
and
push
scas
js
xchg
fsub
pop
test
mov
xchg
xchg
push
aas
insb
mull
popf
dec
push
xchg
pop
push
pop
out
mov
jp
mov
scas
xor
xor
mov
stc
dec
out
aas
aaa
in
and
mov
popa
insl
lods
xor
mov
adc
ret
jg
lcall
push
mov
sbb
add
out
ss
fisttpl
lds
jge
outsb
mov
call
cld
stos
fdivl
pop
fwait
movsl
out
jl
std
xor
dec
mov
ss
sub
mov
xor
pop
les
xchg
adc
or
sahf
inc
shrl
pop
mov
sub
and
push
fisttps
pop
js
mov
movsl
add
je
and
cmpsb
sbb
ds
cs
das
jecxz
mov
jge
cltd
jg
call
push
pusha
out
fs
cmpxchg
or
rclb
adc
aas
outsl
mov
mulb
lds
push
lods
mov
sub
dec
jb
loopne
js
mov
popf
pop
mov
es
jle
add
push
pop
ljmp
filds
inc
in
out
adc
pop
inc
ret
incl
mov
sbb
inc
cmpsb
aam
ret
fsubrs
sub
push
xor
adc
xor
out
inc
inc
jns
dec
adc
xor
and
loop
clc
in
mov
lahf
mov
leave
mov
adc
cmp
lret
cld
and
cmpsl
test
int
mov
pop
lcall
negb
es
stos
xor
fs
rolb
sub
sahf
ja
push
mov
es
nop
jle
mulb
cmp
lahf
shl
push
jp
sub
out
loope
adc
into
lds
sti
fsubl
add
mov
dec
dec
int3
shll
mov
aam
adc
in
bswap
cwtl
lcall
mov
daa
inc
sub
cmp
lcall
call
nop
pop
lock
scas
aad
addl
incl
add
or
mov
mull
xchg
cmpsl
sbb
sbbb
mov
lcall
rolb
in
sbb
mov
fwait
out
outsb
loop
orl
int3
mov
mov
lcall
xor
test
adc
or
fisubrl
out
add
repz
loopne
mov
inc
mov
and
hlt
pushl
hlt
aaa
int
jae
fldl
clc
stos
sahf
insb
push
push
mov
xchg
sbb
jno
add
adc
mov
and
adc
lahf
jmp
mov
xorb
insb
mov
add
mov
cs
pusha
pop
clc
and
ss
lock
xchg
ljmp
and
rcrb
lea
cld
dec
pop
scas
and
gs
mov
push
cli
xchg
mov
sbb
sub
fadds
and
mov
test
loop
in
cmp
lret
add
jbe
xchg
sbb
push
sbb
in
and
mov
sub
outsl
loop,pt
cltd
data16
xor
inc
fidivrl
jle
lods
psrld
clc
pop
das
outsb
ds
sahf
outsb
mov
push
sahf
scas
mov
mov
and
mov
sbb
sti
push
lret
add
ljmp
adc
imul
gs
sub
jp
adc
and
in
inc
xchg
arpl
pop
push
das
dec
test
push
ret
ljmp
fisttps
push
sub
jle
ficomps
pop
aam
jg
rcrb
mov
mov
adc
jl
push
les
insl
lcall
inc
pop
jno
mov
ds
repnz
or
pop
xchg
push
call
testb
adc
sti
mov
scas
xor
pushw
lea
dec
sbb
mov
subl
loopne
pop
xchg
cld
mov
js
jg
ret
das
mov
sub
add
mov
fs
pop
mov
xchg
sbb
push
lock
scas
lret
daa
pop
filds
mov
add
mov
dec
or
rcrb
xchg
js
scas
repz
inc
dec
mov
sar
sahf
imul
testb
jb
pop
out
push
sbb
call
decb
xor
mov
psraw
sub
push
aam
inc
ljmp
je
mov
jns
aas
stc
add
xchg
adc
les
mov
pop
rorb
or
shl
xchg
add
dec
xchg
cs
pushl
push
push
mov
in
test
or
lret
push
or
jecxz
xchg
cltd
inc
and
xor
sahf
lea
xor
xchg
out
adc
aas
clc
add
scas
push
sbb
dec
mov
or
add
sub
iret
mov
mov
pop
dec
inc
add
inc
jl
mov
addr16
xor
test
mov
aaa
hlt
jg
shrl
mov
je
mov
lea
jecxz
sub
xor
fimuls
data16
rcrl
jg
lahf
lret
xlat
sub
ss
pushf
out
sub
mov
imul
cmpsl
push
movsl
sbb
mov
nop
sub
xchg
mov
repz
cmp
sub
jg
icebp
pop
lcall
and
notb
aas
mov
and
cli
adc
push
leave
mov
and
rcrb
pop
shlb
jbe
adc
jle
test
mov
fidivs
jge
ret
dec
cld
cmp
push
pop
ds
test
ret
cmp
adc
push
pop
pop
repz
mov
out
loope
cmp
and
xor
test
das
decb
test
out
cmp
cmpl
daa
push
std
add
adcb
out
lods
dec
add
sub
mov
add
or
xbegin
push
jnp
mov
dec
sbb
aas
hlt
decl
push
inc
in
movsl
xor
push
add
or
clc
outsl
or
sbb
out
cmp
rcrl
push
adc
bound
pop
clc
or
and
in
dec
xor
lock
fistpll
aad
push
addl
ret
jmp
outsl
out
cmp
test
cmp
les
es
in
mov
sub
add
add
leave
cwtl
push
lahf
ret
popa
imul
incl
lahf
pop
mov
gs
jmp
dec
xor
out
pop
lds
aas
decb
mov
sar
jmp
jmp
test
and
and
sbb
mov
sbb
fidivrs
add
sahf
scas
cld
ficomps
pop
icebp
test
mov
mov
add
and
fiadds
xchg
dec
mov
loopne
dec
aas
mov
push
sbb
js
out
scas
imul
clc
xchg
cmp
imul
repnz
out
or
inc
not
shlb
outsl
jbe
lock
dec
lds
call
mov
mov
ljmp
jecxz
scas
sbb
es
pop
xorb
fs
jne
xchg
in
sub
dec
dec
idiv
sub
lcall
iret
mov
lock
xchg
push
push
negl
mov
adc
cmp
dec
scas
add
dec
dec
lcall
jmp
jbe
lret
arpl
and
mov
stos
int3
les
out
xchg
mov
or
rclb
aaa
lock
outsl
cmpsl
mov
jecxz
andl
das
mov
pop
jge
sbb
repz
in
cs
pop
fistpll
int3
clc
pop
repnz
dec
cmp
fmull
add
jl
xchg
inc
adc
aaa
arpl
lods
inc
shlb
jb
les
inc
adc
iret
xor
arpl
inc
xchg
xor
std
incl
lret
inc
std
xor
add
jns
sbbb
ret
mov
xor
sub
sahf
or
lcall
adc
jle
and
sbb
pop
repnz
movsl
int3
outsb
out
add
lds
imul
ret
shrb
mov
mov
iret
and
xor
sbb
pushl
pop
sti
sub
pop
loopne
das
gs
push
lahf
dec
nop
stc
das
or
jmp
out
mov
add
andps
fldcw
lods
jmp
std
pop
fistpl
lret
mov
rorl
into
mov
sbb
xchg
sub
dec
sub
lahf
ret
or
shlb
cmpsw
hlt
stc
test
jp
int3
pop
decl
insb
jne
cmc
imul
pop
push
dec
dec
push
jnp
incl
lea
mov
lock
hlt
lock
mov
aas
mov
out
jle
cltd
cli
dec
sub
les
movsl
inc
es
or
out
and
fcmovu
and
mov
addr16
rclb
dec
aam
out
adc
jno
adc
cld
out
test
mov
xlat
stc
orb
sarl
lcall
aaa
pop
es
adc
mov
cld
ret
jle
mov
ljmp
mov
sbb
insl
push
fcomip
sub
mov
jnp
enter
or
pop
lds
ljmp
std
and
mov
mov
das
insb
es
imul
mov
dec
jmp
imul
lcall
cmpsb
mov
in
dec
in
fs
iret
aad
mov
add
xchg
push
fstp
outsl
pop
inc
imul
jg
pop
leave
or
add
aas
dec
lds
xchg
mov
icebp
or
dec
mov
mov
mov
xchg
imulb
cwtl
and
fnstcw
and
jb
cmpb
mov
mov
mov
mov
push
subb
daa
mov
or
jno
jp
add
xor
into
movsb
mov
roll
mov
es
jns
jg
mov
jne
sti
xchg
bound
xchg
stc
mov
lcall
jmp
pop
mov
stos
adc
enter
sarl
sub
jb
push
iret
lods
sbb
jg
je
mov
jle
sub
push
mov
sbb
iret
mov
lahf
std
lds
cli
outsl
jg
inc
cmc
xchg
bound
inc
mov
push
lcall
testb
sbb
and
dec
ja
add
adc
pop
out
dec
jg
lds
daa
data16
jl
test
cmp
sti
or
leave
or
aaa
mov
test
dec
aas
mov
adc
arpl
xor
and
lock
add
icebp
push
xchg
test
push
jg
xchg
jle
das
push
or
inc
in
mov
xchg
cld
test
pop
mov
sub
addr16
enter
xor
or
jg
aam
cli
push
inc
data16
insl
sti
mov
and
lea
pusha
mov
pop
jb
sbb
or
xchg
add
lds
xchg
test
cltd
out
sbb
rcll
inc
push
adc
sub
adc
xor
aaa
sub
repz
and
sarb
sahf
pop
dec
dec
repz
inc
jb
fistps
push
mov
adc
sbb
push
mov
scas
pop
rclb
inc
add
clc
dec
adc
fcomps
jge
sbb
and
and
fdivl
test
mov
jg
mov
dec
push
and
xchg
repz
and
push
cli
dec
into
stos
in
ss
xor
cld
dec
rcrl
sbb
fcomip
sbb
push
mov
and
lret
fst
xchg
nop
inc
inc
mov
pop
int3
sar
rolb
roll
cmp
sbb
ds
pop
scas
clc
fnstsw
mov
repz
cld
add
jle
xor
ret
push
loop
insl
outsb
outsb
jl
push
ljmp
inc
sbb
idivb
js
mov
pop
or
fisubrs
mov
add
popf
les
stc
inc
push
mov
mov
dec
out
sub
or
jge
dec
cmp
aas
mov
addb
rorb
sub
cvtdq2ps
mov
push
std
or
js
lea
lds
into
les
mov
ficoms
jle
call
lds
in
adc
mov
popa
pop
outsl
outsb
fists
adc
mov
xor
mov
push
jl
es
mov
push
lods
dec
pop
fistps
jmp
inc
push
loop
fs
mov
fisttps
int
imul
cmp
repz
inc
xor
or
fsubp
push
clc
in
inc
leave
and
popa
daa
and
add
sbb
push
push
daa
clc
adc
sbb
or
testb
ja
clc
mov
dec
mov
ret
xchg
push
mov
xor
pop
push
mov
fs
inc
dec
push
push
lods
sbb
push
add
jno
sahf
sub
mov
xor
fidivrs
xchg
push
pop
or
mov
lret
push
sar
sarl
out
aaa
mov
addr16
jne
xchg
imul
sub
push
cmpsb
xchg
dec
push
fbld
mov
push
data16
cmp
jg
cmp
mov
mov
aaa
fiadds
and
adc
push
adc
push
outsb
sbb
xchg
stos
or
aam
movl
sub
std
loopne
jnp
daa
jb
fcompl
inc
sub
and
cs
shrl
push
add
mov
cmp
setle
dec
mov
xlat
call
push
in
popa
in
adc
inc
outsl
fucomip
adc
sbb
jmp
mov
call
inc
out
roll
sbb
bound
out
adc
aaa
pop
fmull
push
xorl
rolb
mov
jmp
inc
cli
ss
or
imul
push
jecxz
lock
stos
sub
vmread
bound
cwtl
leave
push
loop
scas
cmpl
pop
std
inc
ret
aaa
out
mov
in
mov
add
incl
mov
mov
fimull
sub
add
dec
push
outsl
inc
fsubl
loope
adc
jo
cmp
ret
imul
cwtl
push
jg
shlb
dec
cs
xor
orl
jne
jns
mov
sub
push
cld
mov
aas
mov
xor
sub
pushl
or
les
cltd
cmc
mov
call
inc
into
dec
lds
imul
scas
imul
mov
dec
mov
dec
lret
add
subb
xchg
jmp
je
xor
lds
cmpl
orl
sub
lea
mov
sbb
lds
jb
sub
adc
fildll
stc
sub
es
aad
mov
aam
xchg
add
cmp
mov
xchg
inc
jp
pushf
cld
adc
and
adc
shlb
lcall
decb
push
iret
and
sbb
outsb
leave
add
xor
pop
mov
cmpsb
stos
cmpsl
inc
dec
gs
dec
and
or
je
ss
cli
adc
lcall
pop
icebp
sbb
sub
push
frstor
cld
decl
dec
add
xchg
stos
push
testl
xchg
inc
jbe
dec
xchg
mov
lcall
mov
ret
adc
leave
and
test
cltd
outsl
decl
rcll
dec
std
sub
mov
out
test
in
xor
or
xor
sar
jg
mov
dec
dec
pop
iret
push
outsb
outsb
push
push
cwtl
jae
xchg
mov
ljmp
sbb
sbb
xchg
stos
sub
in
mov
sar
jne
add
xchg
mov
enterw
mov
sbb
lea
test
lods
decb
test
jnp
jle
pop
and
cs
test
cmpsb
jmp
ss
cs
aam
ljmp
jle
or
dec
jg
scas
adc
jg
scas
cwtl
addr16
cmp
mov
xchg
mov
cld
popf
ret
pop
lcall
xchg
adc
push
repz
mov
and
push
cmp
mov
add
test
add
fildl
mov
nop
sub
add
add
or
mov
inc
sbb
push
cmp
and
clc
xor
test
test
and
das
sbb
gs
jne
leave
or
mov
push
popa
push
movsb
mov
inc
mov
cmpsl
push
lock
add
inc
sbb
sbb
dec
pshufw
ss
scas
jg
jge
push
adc
sahf
cmp
pop
call
outsb
cmp
lret
jb
popf
lahf
and
das
test
xor
dec
cmpsb
out
push
les
cmp
mov
test
add
pop
movsl
adc
push
mov
fimuls
mov
aas
pushf
enter
cmp
cmp
xor
fistl
mov
add
xor
push
mov
push
cmc
out
mov
cmpsl
pop
in
mov
pop
xchg
or
or
daa
lods
adcb
jg
out
pop
andl
test
fwait
arpl
shll
cld
jecxz
test
pop
adc
mov
sbb
addb
mov
ss
mov
mov
push
xchg
jle
mull
mov
mov
sbb
ret
add
lea
dec
out
cmp
test
stos
movsl
add
dec
movsl
jecxz
mov
ds
jns
inc
out
pop
loopne
mov
fistps
shrb
cli
ja
push
sub
and
xor
mov
or
rol
outsl
lret
push
inc
aad
push
add
les
scas
sbb
cwtl
mov
jle
mov
negw
loope
jg
stos
popa
jle
dec
cmc
cs
mov
add
jmp
leave
cmp
idivb
ret
jbe
int
xchg
add
sbb
lea
decl
dec
cld
sbb
popf
dec
lock
add
sbb
incl
xor
adc
nop
cmc
sub
jno
clc
push
call
shlb
push
push
cmove
int
call
cmp
cld
aaa
out
out
test
push
rol
xchg
mul
xor
xchg
in
cmpsl
mov
mov
imul
pop
sahf
mov
clc
aas
divb
xorl
adc
cld
test
cmpsb
xchg
fildll
pushl
pop
mov
xchg
fwait
jo
xchg
push
sti
cmp
test
xchg
jl
cmpsb
push
push
push
maskmovq
testl
sub
push
cs
cmp
insb
loopne
repz
iret
ljmp
icebp
sti
or
sahf
xchg
lcall
and
pop
shlb
jns
inc
cli
cmp
jnp
pop
stos
mov
imul
push
add
fnsave
jo
mov
imulb
out
mov
mov
push
movsb
iret
inc
shlb
cli
cmp
push
dec
out
call
xor
dec
std
scas
pop
mov
loope
test
lock
fistpll
xor
xchg
mov
lcall
jb
cs
push
pop
cld
cmpb
push
and
sar
repz
lds
add
xchg
lods
inc
into
sti
add
out
clc
add
mov
out
std
mov
fcmovnb
jmp
pop
lds
push
adc
lock
dec
inc
out
cs
or
xchg
ret
cs
sub
clc
je
jo
mov
clc
or
movsl
xor
movhps
lcall
negl
pop
fistps
fs
xchg
ss
call
pop
jp
es
into
cmp
or
fwait
push
mov
gs
loop
scas
mov
dec
mov
cs
push
mov
xor
or
arpl
add
xor
sub
sub
cmpsb
pop
decl
jne
not
sbb
pop
cli
pop
mov
pop
fsubp
xchg
push
iret
dec
in
cmp
fistpll
mov
xchg
enter
lds
cmpsl
lock
sti
cmp
repnz
inc
pop
in
sub
jl
cmc
sbb
and
out
xor
mov
pop
jecxz
loop
addr16
pop
cld
xor
call
cwtl
mov
add
out
xor
aaa
fists
jb
inc
repz
pop
pop
testb
sbb
mov
pop
and
sbb
lea
xchg
clc
mov
sbbl
adc
sub
outsl
adc
cmpsb
and
es
negb
in
lea
call
lea
push
clc
sub
aaa
leave
add
cmp
loop
jne
xor
ret
xor
jne
movl
sub
jmp
jns
pop
inc
insl
inc
adc
sub
add
cli
scas
arpl
imul
pop
jg
out
pop
and
cmp
or
add
fiadds
aaa
incl
nop
mov
sbb
adc
mov
mov
cmp
pop
cltd
fs
jbe
sti
sahf
jb
std
add
sbb
sub
sbb
cmp
inc
stc
xor
outsl
xchg
bound
mov
mov
or
dec
cmpsb
push
and
insl
stos
loope
mov
add
push
loop
jmp
pop
mov
lods
popa
xor
paddusb
jg
cmp
cmp
push
and
adc
aaa
ja
daa
push
jg
xlat
adc
jne
mulb
ret
daa
scas
adc
xchg
inc
daa
pop
inc
add
cmp
adc
cmpsb
add
jle
imul
push
lock
mov
xor
incl
push
push
stc
add
addb
jmp
out
ljmp
pop
bound
jg
and
jmp
inc
aaa
in
xor
xor
int3
or
jecxz
mov
dec
out
jge
iret
sahf
dec
fsubrs
fiadds
clc
sbb
inc
inc
insl
daa
jmp
ljmp
mov
dec
idivb
xchg
lock
dec
mov
aam
sahf
mov
jle
ljmp
out
mov
pop
arpl
push
je
pop
xchg
cmpsl
push
cltd
and
pop
in
mov
sbb
jg
xor
cmp
xorb
mov
int
dec
popa
mov
jae
push
ja
pop
out
in
mov
xor
imul
xor
sub
nop
mov
and
ljmp
shll
cmp
nop
mov
rclb
cld
mov
dec
popf
pop
mov
std
and
into
into
push
out
loope
jg
fidivrs
fcoms
mov
sahf
adc
sub
inc
mov
and
jle
stos
add
test
inc
stc
cmp
bnd
cmp
push
loop
lcall
xor
inc
rorb
andb
mov
incl
cmp
cli
xchg
xchg
movsb
mov
insb
and
adc
decl
cmp
add
hlt
popf
add
pop
pop
std
and
sbb
jecxz
pop
ljmp
and
sbb
nop
mov
sub
ja
mov
jne
jg
faddl
ficoms
pop
lods
fildll
adcl
sbb
incl
js
xchg
jmp
add
jmp
clc
int
mov
fistpl
mov
mov
ljmp
mov
sbb
sbb
add
in
dec
adc
add
adc
jp
jge
in
das
jg
jg
sahf
ss
aam
insl
mov
mov
test
mov
xor
cli
xchg
sbb
ja
int
in
repz
mov
cmpsl
ficoms
dec
popa
inc
mov
repz
icebp
and
pop
pusha
pop
outsb
push
sub
test
sub
fildll
sahf
inc
xor
mov
ror
sbb
mov
mov
sti
cmp
sub
les
cmpsb
dec
push
fwait
popa
test
pop
into
clc
std
and
adc
dec
jecxz
negl
lock
xchg
movsl
or
ja
mov
push
mov
dec
dec
dec
dec
insl
scas
mov
jo
sarb
push
xchg
xchg
or
das
ret
mov
and
sahf
imul
cmc
and
stc
push
jmp
shr
xchg
push
repz
loope
ljmp
lods
add
cwtl
xchg
push
fwait
inc
out
and
out
pop
out
and
pop
cmp
cmpsl
scas
mov
les
and
push
jp
push
popa
divb
lcall
nop
sbb
mov
xorl
ret
jle
icebp
mov
mov
mov
fstps
call
xchg
mov
subb
lock
mov
inc
jne
sbb
adc
aad
xor
sub
movq
call
xor
mov
xchg
outsl
imul
sub
lahf
or
jp
ror
incl
jbe
test
or
aad
push
stos
cmpsb
mov
xchg
rol
push
and
jg
inc
pop
or
fadds
dec
inc
pop
loopne
pop
sbb
pop
movsl
sub
mov
mov
fsubl
in
imul
cli
ljmp
push
and
adc
repz
outsb
pop
sti
add
xor
lock
sub
mov
dec
jo
lock
push
in
dec
fisubs
movsl
incl
cmpsl
add
pop
stc
movsb
add
cmc
das
cli
adc
or
add
sub
pop
and
push
aad
testb
sub
cmp
inc
pop
push
jg
push
cmp
pop
jecxz
xorb
push
or
mov
mov
pop
outsb
jae
ret
dec
cmpsb
out
xchg
dec
movb
or
jne
in
shrb
outsl
call
scas
ret
xchg
js
lods
cmp
es
lock
jg
cmpsl
or
das
mov
je
xchg
negl
ret
sub
idivl
xor
or
jg
sbb
adc
jo
out
iret
mov
add
adc
inc
and
icebp
or
out
sti
xchg
lcall
aaa
or
xchg
jne
imul
mov
mov
loop
std
push
out
popa
pop
scas
in
fs
adc
into
mov
repz
dec
repnz
jecxz
aas
push
enter
adc
js
repnz
lock
or
inc
fsubs
mov
cs
insb
dec
jns
inc
clc
call
and
push
scas
outsl
jno
arpl
xchg
in
mov
dec
dec
pop
loopne
out
inc
xor
sub
clc
or
adc
cli
lcall
mov
sti
xchg
addr16
sub
jno
repnz
push
stos
sbb
mov
and
inc
mov
pop
push
ja
mov
shl
push
fcmove
inc
adc
xbegin
sub
jmp
mov
adc
mov
cld
mov
incl
and
xor
pusha
dec
dec
push
dec
sub
mov
or
push
popf
jmp
pop
mov
adc
sbb
inc
xor
dec
inc
inc
roll
dec
xor
repnz
cli
mov
sbb
lret
jb
xchg
insb
sub
aad
jo
cmpsb
out
jnp
xchg
rcl
push
push
sti
in
jl
mov
lea
jns
inc
out
jo
xor
rsm
subb
outsb
push
sub
mov
pop
loopne
adc
aas
pop
call
lods
out
fisubrs
mov
pop
rolb
sarl
jbe
jno
push
gs
into
sbb
mov
pushl
in
mov
dec
lock
push
xor
or
jle
call
decl
call
cmc
pop
cli
cmpsl
repnz
test
adc
pop
rorl
mov
sub
xchg
dec
mov
sub
ljmp
fildl
pusha
adc
and
mov
or
das
cmp
in
jne
enter
outsb
cld
push
pop
jmp
addb
fs
push
mov
outsl
pushl
or
add
sbb
faddl
mov
ds
adc
mov
clc
pop
cld
xor
mov
es
ret
jp
or
rorb
jbe
popa
sbb
div
mov
push
rcr
stc
subb
inc
mul
mov
ljmp
or
sbb
test
popf
xor
dec
idiv
decl
int3
sub
pop
negb
cltd
sub
psrld
fisttpll
iret
cwtl
push
add
das
std
jle
and
jg
push
in
es
out
and
jle
pop
fisttps
call
popa
push
fs
divb
and
movsb
jl
jae
loope
push
adc
dec
out
ja
mov
imul
scas
xchg
lret
loop
out
mov
es
add
fisttpll
frstor
decl
cmp
push
add
adc
push
fisubrs
xchg
shrb
push
stos
mov
fdivrp
test
pop
loop
jnp
sti
mov
arpl
sub
sahf
rclb
mov
jmp
fs
outsl
mov
sbbb
clc
in
insl
sar
inc
dec
mov
mov
repnz
xchg
inc
nop
dec
out
aaa
call
aad
pushf
cmp
bswap
or
dec
xor
lock
xchg
decb
push
inc
pop
sub
aam
or
mov
mov
mov
pop
scas
dec
roll
insb
mov
mov
dec
loope
inc
cltd
jmp
lock
mov
xor
popa
add
push
in
sub
imul
clc
lret
sub
mov
das
dec
cs
jle
pop
frstor
cli
decl
mov
pop
out
fildl
enter
lahf
je
cmp
mov
cwtl
push
jbe
adc
pop
pop
ss
cmp
int3
fmull
xchg
jo
das
and
push
fisubrs
dec
pop
es
fisubs
js
push
mov
xchg
push
add
push
and
stos
addb
push
sahf
cld
push
clc
scas
adc
cmpsl
xchg
push
jne
test
pusha
or
lods
add
pop
sarb
push
rorl
mov
mov
cmpsb
imul
clc
sub
ss
pop
mov
call
inc
enter
sbb
int
outsb
loop
inc
sbb
cmp
and
add
jmp
jb
add
jle
dec
je
jno,pt
cmp
or
xchg
out
xchg
ljmp
mov
aaa
out
inc
and
cmp
lods
sbb
out
rclb
gs
add
inc
or
sbb
aaa
imul
movsl
sahf
jnp
adc
ret
into
jns
mov
mov
mov
xor
into
cmp
iret
and
mov
push
int
decl
jmp
adc
adc
incb
js
sahf
xchg
or
decl
enter
rorb
pop
adc
ljmp
test
and
push
notl
mov
into
xor
cmc
cltd
push
cmp
test
xor
adc
clc
out
adc
fwait
or
xchg
inc
add
fildll
jge
insl
movb
in
es
add
lock
or
outsb
jne
stc
call
xchg
inc
and
lcall
inc
jle
sub
subps
cmp
push
push
neg
je
pop
imul
leave
lods
xor
jmp
ljmp
mov
jbe
jl
pop
cmpsb
mov
gs
xchg
loope
movsb
pop
push
aas
lret
sbb
push
ja
sbb
std
jo
and
add
add
mov
ljmp
clc
out
gs
xor
icebp
pop
jbe
cmp
in
xor
inc
pop
stc
imul
sub
push
mov
ss
clc
js
sub
and
rorb
fcomip
mov
jmp
ret
sbb
sbb
aaa
out
add
es
aas
int3
aam
cld
lahf
inc
push
roll
subb
sbb
frstor
push
sbb
jge
pop
mov
mov
into
pop
jp
out
cmp
sti
add
jns
clc
pop
fmull
dec
add
test
inc
or
xlat
push
scas
ror
dec
sbb
fidivrl
ret
inc
cld
sarl
inc
mov
jns
mov
repnz
push
push
data16
mov
sbb
ss
pop
sbb
pop
pop
mov
lea
popf
jmp
insb
roll
call
xorl
cmp
pop
xchg
daa
push
inc
fbld
test
cmp
jl
fs
inc
cli
pop
mov
xchg
cmp
dec
cld
enter
jbe
ss
lds
ficoml
lcall
or
xor
es
mov
iret
cmp
stos
jmp
and
inc
pop
jo
mov
mov
mov
xchg
push
lahf
dec
stc
das
sahf
movsb
outsb
dec
cmp
decl
push
or
adc
lods
gs
outsb
loope
bound
aaa
lcall
mov
push
pop
push
aam
addr16
hlt
mov
lods
outsb
imul
enter
cmp
repz
icebp
or
lock
add
and
rcl
ds
aas
add
dec
fldt
repnz
daa
scas
aam
sbb
xchg
lretw
or
loopne,pt
ljmp
xor
sbb
lock
adc
mov
cli
int
or
xor
out
adc
xchg
insb
sub
das
into
imul
cmovs
imul
cmp
jl
dec
jmp
cmp
pushf
and
imul
push
mov
push
mull
icebp
mov
xor
jnp
dec
add
push
scas
test
decl
mov
jne
inc
int3
pusha
inc
out
jbe
mov
or
popa
fwait
jp
in
fmulp
sub
std
cmp
sub
or
pop
mov
mov
lret
shl
ljmp
in
pop
xchg
jg
insb
lock
pop
int
mov
jmp
mov
pushf
pop
mov
inc
bnd
movsl
mov
cld
or
xchg
arpl
mov
cmpsb
mov
push
cs
add
cmp
test
fsts
xor
cmpsb
lcall
pop
sbb
push
xchg
andl
push
out
jge
pop
push
cmp
inc
jmp
push
jae
cmpsl
jle
pop
add
and
pop
cltd
nop
fistpll
sbb
sti
dec
mov
lea
sbb
cmp
lcall
insb
sbb
mov
insl
xlat
out
fildll
cld
jmp
sbb
pop
testl
mov
add
dec
hlt
or
cmp
xor
or
push
idivb
shlb
pop
adc
adc
lock
out
xchg
sbbl
loopne
fs
fbstp
loope
gs
xor
xorl
in
test
jle
andb
adc
out
sub
xor
inc
testb
popa
out
push
mov
decl
dec
clc
pop
pop
ljmp
mov
clc
jg
pop
gs
cmp
push
mov
push
mov
imul
fbstp
jae
into
or
xchg
popf
add
xchg
insl
out
jnp
add
inc
cld
jnp
adc
add
add
inc
jno
dec
loopne
jo
shrb
ss
dec
outsb
add
ret
push
or
inc
sub
daa
ficomps
add
push
insb
out
out
pop
add
stos
adc
scas
pop
stos
outsb
movsl
fidivrs
sbb
sub
jbe
mov
cmp
jbe
jg
loope
dec
frstor
pushf
clc
sub
xchg
jmp
xor
cmp
fimuls
sbb
aas
lods
inc
xor
mov
arpl
push
sub
push
inc
neg
push
punpckhwd
xor
cs
in
inc
dec
cmc
push
adc
pushl
dec
push
dec
jne
test
popf
ret
add
add
dec
call
or
rclb
dec
xor
jg
mov
mov
xor
cltd
jp
pop
std
decl
jle
push
pop
push
cmp
fildll
jbe
cltd
dec
into
mov
sub
dec
mov
std
pop
jbe
lds
push
jmp
push
ret
in
sub
mov
stc
xchg
cmp
repnz
adc
sbb
lock
loopne
call
movsb
inc
cld
cs
mulps
loopne
pop
jle
loop
lock
mov
jg
dec
push
cmp
shrl
mov
push
ljmp
xchg
sbb
add
sbb
inc
sarb
hlt
into
dec
rorl
adcb
xchg
cmpsb
jle
mov
xchg
repnz
ja
mov
sahf
push
cmp
mov
aas
popa
mov
xchg
add
aaa
std
aas
xor
out
mov
cmp
sub
sbb
or
loopne
pushl
sub
cmp
xor
sub
nop
adc
decl
into
stos
cmpsb
out
xchg
add
push
inc
ficoms
jno
out
pop
pop
xor
mov
and
cmpsb
aas
add
leave
outsb
test
clc
xorb
dec
push
jle
stos
jns
or
aas
add
cmpsb
imul
incl
mov
lea
push
cmp
je
inc
iret
sbb
data16
add
add
in
mov
dec
fcomip
lcall
jecxz
mov
mov
repnz
pusha
or
insb
pop
push
mov
movsl
cmp
or
test
cmp
dec
sbb
scas
outsl
out
js
mov
dec
jb
dec
lea
jne
ret
call
sub
js
clc
sub
xchg
inc
pop
dec
lock
insb
sbb
cmpsb
mov
out
stc
scas
mov
push
sahf
push
sub
adc
pusha
jp
push
cld
sub
cmp
es
ficoms
cmp
xchg
pushf
mov
or
xchg
fisttps
sbbb
push
insl
std
or
loop
into
mov
sti
inc
jecxz
mov
icebp
pop
jle
sbb
cmp
cli
lods
jge
xor
cld
decl
dec
sbb
push
loop
and
aaa
jl
sub
fsubl
lea
fildl
dec
add
push
mov
pop
lds
inc
fiaddl
push
or
test
fbstp
in
psadbw
push
icebp
int
aaa
adc
push
pop
push
pushl
sbb
sub
adc
outsb
mov
inc
xor
filds
mov
out
and
scas
mov
outsl
les
or
int3
push
mov
je
cld
ja
out
iret
mov
xor
rcll
fisttps
jnp
push
mov
cmovns
incl
push
and
mov
push
in
mov
insl
sbb
rcrb
push
adc
fs
pop
mov
ja
push
cwtl
sub
pop
std
adc
aaa
call
aaa
and
adc
in
push
frstor
or
push
add
ret
or
into
sbb
adc
lcall
mulb
int3
and
pop
gs
notl
incl
rcrl
lods
xchg
ficoms
loopne
mov
xchg
cmp
out
and
mov
adcb
out
sub
and
push
bound
fistpll
scas
mov
adc
decb
dec
xchg
ss
push
scas
or
cmpsl
dec
jp
fbstp
popf
daa
jmp
les
or
add
xor
cli
cmpl
or
into
adc
push
ja
and
sbb
mov
mov
mov
out
out
test
or
adc
subl
cld
mov
adc
bound
shll
cld
mov
out
or
sub
mov
jbe
push
loopne
jg
cs
cmp
or
xchg
pop
bound
test
insl
jg
pop
fsubrl
adc
push
pop
adc
sub
rorb
aas
xlat
icebp
jl
addl
mov
lcall
gs
inc
and
xchg
xchg
mov
or
mov
or
ljmp
xchg
shll
mov
adc
xor
adc
pop
test
cmp
inc
cli
pop
es
pop
daa
popf
sti
jno
cli
mov
inc
mov
clc
decl
jne
sbb
inc
and
cmp
psubsb
cltd
add
push
sahf
inc
loopne
cmpsb
fidivrs
clc
jge
push
daa
daa
add
pop
mov
test
cmp
or
xor
lods
cwtl
cmpsb
cmpsl
es
or
negb
mov
fists
mov
cmpsl
xchg
mov
leave
adc
fistps
sbb
dec
movsl
icebp
test
out
ret
fisttps
sbb
gs
incl
pop
dec
popa
jbe
fs
dec
xchg
dec
outsb
out
test
icebp
dec
popa
psubw
cmpsl
dec
jle
fisubrs
outsl
ds
int3
loopne
or
and
cmp
mov
lret
add
out
sahf
ret
enter
xchg
lock
jns
in
and
lret
loopne
mov
loopne
outsb
in
js
aaa
fistps
xchg
lcall
push
mov
adc
jge
hlt
xor
push
mov
leave
cmp
mov
call
subl
push
std
ds
loopne
xor
jnp
int3
xor
xlat
rorb
shrb
cmp
mov
cmc
aaa
cltd
clc
imul
ret
add
mov
les
fldl
outsb
mov
adc
mov
cmc
out
dec
in
push
nop
aaa
stc
mov
ss
loop
ds
repz
mov
xchg
std
fcomip
dec
or
nop
jl
push
lcall
xchg
add
cld
cmp
sti
ss
leave
or
xor
stos
or
mov
push
jno
dec
mov
adc
mulb
jle
lahf
xchg
adc
or
les
lcall
xor
xchg
jle
std
ljmp
sub
jmp
call
clc
mov
lret
xchg
adc
dec
or
pop
mov
shrb
cli
mov
cld
dec
loop
into
xor
mov
xchg
es
or
inc
push
jmp
icebp
cmp
mov
pushf
into
and
push
js
pop
outsb
rorl
lcall
mov
iret
out
div
lcall
and
mov
sub
js
jmp
sub
lock
js
and
mov
xchg
mov
inc
sbb
and
jb
push
mov
out
sub
xchg
jle
call
notb
mov
mov
cld
sub
fidivrs
popf
lret
jge
std
mov
mov
cmp
pop
xchg
xor
add
jecxz
sbb
xchg
insl
in
movsb
movb
ss
mov
fistpll
sbb
or
out
push
enter
mov
jno
ret
cmpb
add
arpl
scas
mov
outsl
xchg
lods
repz
mov
in
cmp
adc
jne
pop
clc
xor
test
cmp
push
and
cli
inc
mov
push
into
cwtl
lcall
xchg
idiv
clc
out
jp
mov
aas
add
pop
inc
fists
test
push
cli
push
loope
push
pop
call
and
cmp
or
adc
jp
cmp
ret
daa
lea
mov
incb
xchg
dec
inc
arpl
data16
inc
incb
jg
cmc
xchg
jbe
das
ljmp
push
dec
dec
mov
push
cmp
fisubrs
cld
push
inc
mov
add
jne
xchg
xchg
ss
shlb
into
xor
lock
mov
scas
push
inc
adc
test
xor
ret
and
xlat
cmp
sbb
scas
fwait
xor
and
ja
sub
mov
insl
iret
sbb
pop
mov
popa
push
fists
sub
jle
std
pop
and
hlt
pushl
xchg
jmp
add
ret
and
fwait
add
cmp
push
inc
js
mov
mov
add
sub
mov
fsubrp
mov
adc
rclb
ljmp
cld
fdivrl
aaa
adc
mov
repz
cmp
mov
in
sbb
push
jno
aaa
mov
jp
lods
adc
hlt
dec
stos
xchg
cwtl
rorl
xor
sbb
enter
sbbb
mov
cmpb
ret
adc
mov
das
pop
xor
mov
xor
aas
rol
mov
add
lock
jg
mov
xchg
xchg
xchg
mov
xor
jg
es
mov
movb
pop
mov
mov
clc
push
mov
cli
addl
adc
imulb
xchg
bound
cmc
xchg
jecxz
xchg
dec
aas
adc
mov
push
js
jmp
out
dec
sbb
repnz
roll
push
push
incl
out
jg
cmp
inc
rolb
push
cmp
ja
daa
pop
negb
sbb
jnp
ficoms
std
mov
mov
inc
mov
jmp
test
dec
mulb
mov
pop
jnp
jecxz
test
jae
mov
mov
out
cmpl
hlt
mov
fldenv
adc
out
cmp
outsb
cmp
adc
push
push
or
xor
xchg
outsb
lret
or
add
shll
mov
xchg
fistpll
mov
mov
jbe
or
jno
mov
enter
mov
sbb
and
in
out
and
icebp
sub
out
cli
data16
mov
jns
push
pop
and
xchg
jno
add
cmp
adc
lcall
scas
ret
std
and
ss
pop
pop
sbb
call
sahf
and
imul
outsb
add
mov
jmp
add
js
and
sbb
sbb
xor
scas
aaa
incl
add
ds
mov
fadds
sahf
cmp
adc
xor
stos
incl
push
ret
mov
jns
xchg
jle
gs
sbb
adc
pop
ljmp
adc
cmp
mov
inc
xor
sti
mov
lods
in
cltd
jg
int3
or
push
bound
jae
std
fmull
popa
fstp
ret
push
inc
lods
cmp
cmpsb
mov
lcall
frstor
jbe
push
xchg
inc
lds
fiaddl
jle
adc
out
test
into
lret
adc
int
mov
adc
dec
int3
incl
call
or
xchg
jmp
test
mov
icebp
and
sub
fcomip
addr16
add
stos
sbb
shrb
les
sbb
jmp
mov
mov
fisubl
push
sarl
jne
data16
ret
lahf
call
inc
in
cmp
dec
mov
xor
cli
adcl
leave
mov
clc
pop
pop
decl
jle
xor
movlps
test
ds
decl
adcl
push
test
or
inc
mov
sbb
out
bound
inc
or
jmp
inc
cmpsl
xor
mov
dec
decl
pop
enter
sbb
dec
cmp
and
sub
mov
cmp
push
adc
arpl
dec
fdivl
mov
adc
and
mov
incl
inc
out
add
adc
xchg
or
mov
pop
fcomip
outsb
pop
out
pop
ljmp
xchg
pop
sbb
aad
xchg
punpckhwd
or
xchg
xor
cmp
jmp
cmp
jo
add
cmp
and
cmp
xor
push
inc
sarb
push
dec
sub
iret
sub
xor
cld
jge
cmp
mov
push
xchg
add
pushf
xchg
pushf
or
lcall
fwait
movsl
in
lcall
sbb
pop
movsl
sahf
dec
jle
ss
dec
ret
popl
es
fimuls
ds
mov
xchg
cmc
out
jecxz
push
inc
jno
sbb
adc
or
mov
mov
shrl
sub
filds
and
fiaddl
imul
adc
pop
jmp
call
mov
loopne
int3
call
subps
sbb
incl
shll
stos
out
mov
incl
dec
lcall
in
mov
add
adc
jg
repnz
pop
into
and
ljmp
cld
mov
mov
movsl
ljmp
loopne
lahf
sub
and
std
sub
push
xor
lock
lea
push
scas
in
and
add
mov
lea
or
ljmp
xchg
and
fwait
mov
data16
xchg
mov
std
outsb
sti
rcll
dec
ret
mov
scas
mov
mov
pop
lret
dec
ds
test
icebp
dec
stos
and
mov
ds
xor
xlat
and
incl
pop
movsb
mov
and
pop
test
or
xchg
mov
sub
lock
jnp
xchg
cltd
cmp
mov
out
pmaddwd
pop
test
cs
lret
mov
lods
mov
pop
push
dec
pusha
mov
xor
cltd
pop
fwait
scas
incl
dec
pop
ds
mov
call
and
jg
test
adc
aaa
gs
sti
mov
or
js
dec
adc
inc
and
out
lahf
mov
outsl
mov
pop
mov
pop
cmp
mov
out
mov
mov
push
scas
xor
and
push
mov
dec
mov
push
pop
sbb
nop
mov
rorl
cli
jg
aaa
ja
adc
cmc
inc
adc
mov
or
pop
icebp
jp
jmp
fimuls
and
es
stos
cmp
xchg
fwait
sbb
int
sti
and
lcall
sbb
push
mov
pop
out
lods
mov
sbb
icebp
movsb
mov
inc
aaa
popa
cmp
js
rorb
lret
dec
loopne
roll
popf
push
jle
lahf
aas
jg
inc
adc
mov
cwtl
loopne
inc
dec
aam
pop
js
push
mov
scas
and
xchg
xor
mov
jbe
xchg
cmpb
mov
inc
xor
movsb
sub
push
ss
add
es
mov
inc
out
push
aad
add
scas
pop
dec
stos
or
jo
lahf
sbb
addl
inc
call
mov
xchg
push
mov
xchg
push
out
pop
lret
jge,pn
mov
daa
inc
push
ret
ficoml
call
decl
leavew
adc
loope
jge
mov
jb
or
out
add
xor
addl
cmp
out
in
jmp
xor
lea
dec
test
adc
jns
aad
incb
aaa
dec
adc
addl
mov
dec
inc
mov
dec
mov
ljmp
fiadds
inc
mov
inc
mov
adc
subl
dec
xchg
repz
mov
out
or
add
xchg
sbbl
sub
mov
and
fwait
movsb
out
xchg
outsb
in
xchg
xchg
push
jg
cmc
mov
and
mov
cmp
aaa
or
cmp
mov
cltd
shrb
push
sub
mov
xchg
pop
decl
mov
add
sub
cmpsb
int
mov
aas
cltd
xor
sub
lods
cmp
xchg
je
out
mov
adc
adc
decl
adc
movsl
xchg
aaa
pop
sbb
push
movsb
xchg
adc
into
push
and
dec
pop
pop
iret
test
sbb
call
pop
sbb
mov
pop
pop
popf
mov
cmp
sbb
std
dec
mov
in
jns
sub
out
pop
cmp
cmp
stc
pop
inc
push
icebp
mov
enter
or
xor
stos
std
and
sbb
lock
out
cmp
cs
out
inc
sahf
in
jb
outsl
inc
adc
mov
fistpll
mov
mov
cmp
cmp
leave
mov
mov
enter
shll
mov
iret
rolb
jns
leave
push
mov
mov
mov
ljmp
mov
mov
icebp
fnstcw
cld
lahf
lods
dec
fisttpl
data16
rorb
mov
js
add
jmp
jmp
jg
mov
scas
mov
test
mov
lods
inc
sti
outsl
adc
and
sbb
pop
mov
dec
push
or
sbb
test
mov
or
std
cmp
xchg
arpl
fsubl
icebp
rorl
jnp
xor
add
jge
mov
jno
ret
pop
cwtl
call
dec
mov
movsl
and
daa
push
mov
lods
mov
das
dec
dec
jbe
mov
inc
dec
orb
test
data16
mov
cmp
std
jno
test
je
jbe
inc
sahf
shll
or
pop
scas
adc
mov
jp
scas
cmpsl
or
ret
outsl
jne
push
xor
sbb
jp
sbb
sub
cmpsl
cs
xchg
popa
cmpsb
loopne
fcompl
fbld
and
inc
dec
push
or
sbb
jno
add
popa
jp
lcall
ss
jp
cmp
sub
addr16
data16
adc
inc
sbb
mov
sbb
xchg
sbb
mov
rcrb
test
or
scas
xor
pop
and
test
call
enter
dec
test
xchg
pop
push
push
or
mov
jge
addb
jmp
fiadds
mov
jo
in
addr16
data16
in
sbb
test
and
jmp
insb
pop
dec
cmp
push
jo
inc
sub
frstor
cmp
pop
sbb
outsb
cs
pushf
push
in
mov
push
xor
pop
call
inc
popf
pop
mov
gs
in
pop
into
sahf
mov
nop
xor
push
adc
dec
pushf
cmp
mov
mov
pop
adc
push
inc
fidivl
mov
movsl
pop
inc
cwtl
push
push
out
out
inc
cmp
jo
sub
mov
add
pushl
sbb
or
es
xchg
push
adc
cmp
xor
sub
call
stos
and
add
cs
xor
ret
aaa
dec
mov
arpl
mov
or
test
outsl
xchg
add
adcl
xor
mov
out
repnz
adc
inc
ficomps
jo
jmp
outsl
adc
mov
outsb
dec
xchg
xchg
sbb
jmp
xor
adc
ss
icebp
cmp
dec
pop
lock
xlat
fwait
inc
dec
sti
inc
popa
popf
test
dec
lret
shll
incl
xchg
push
inc
mov
push
test
cmp
sti
orb
mov
ja
push
jg
sub
adc
mov
and
sub
push
stos
ljmp
xor
ret
cmp
xchg
mov
jp
mov
dec
movsb
add
movsl
ja
dec
mov
mov
jg
fisttpll
push
push
nop
cli
mov
adcb
test
ret
ss
cld
jg
mov
jnp
aaa
cld
cmp
stos
push
xor
adc
idivb
cltd
incl
dec
rclb
nop
jecxz
mov
add
call
int3
inc
mov
adc
lea
push
mov
cmp
pop
or
pushl
and
popf
xor
push
push
sbb
ja
test
or
dec
fcoml
push
fmull
xor
repnz
aas
shrb
mov
jg
push
mul
mov
insb
adc
sbb
dec
dec
scas
incl
xorl
jo
fwait
cwtl
shlb
out
cmp
mov
cmp
sahf
cmp
jg
jg
int3
push
popf
hlt
sub
pop
cmpsl
pop
xor
in
adc
adc
or
jo
cmp
ljmp
shlb
and
std
outsb
push
sbb
adc
iret
jp
dec
jne
jne
pop
push
pop
lcall
adc
dec
das
jae
mov
mov
out
clc
outsl
ljmp
push
cld
adc
subb
sub
mov
jo
jle
sub
xchg
push
into
jmp
loopne
aas
inc
sbb
es
mov
cli
pop
sub
fdivrl
mov
push
into
test
outsb
pop
dec
mov
aaa
push
clc
insb
adc
std
sub
pop
test
jg
loope
xor
jmp
xchg
cmp
pop
mov
ss
int3
xchg
aaa
pop
out
cli
adc
es
sbb
popa
xor
mov
arpl
jbe
nop
or
icebp
dec
aaa
dec
jo
cmp
sub
xor
mov
pop
push
mov
sub
ljmp
adc
in
cmp
push
cwtl
fisubrs
insb
dec
or
cmpsb
push
into
sbb
dec
lret
mov
daa
popf
fwait
and
sub
repnz
and
push
dec
mov
xor
xor
notb
mov
xchg
mov
push
mov
cltd
dec
mov
mov
mov
xchg
jnp
xchg
insl
loopne
addb
mov
sbb
cli
pop
sarb
or
pop
mov
out
imul
stos
decl
aad
dec
adc
dec
insb
push
and
xor
inc
or
jl
dec
add
call
pop
aaa
or
cmp
out
clc
and
mov
test
lods
dec
movsl
jmp
std
jmp
gs
or
insl
loope
lcall
push
test
pushf
loopne
pop
lock
arpl
test
xchg
cmp
fsubrl
and
xchg
cmp
aad
in
pop
idivb
mov
pusha
add
adc
mov
leave
cmp
jmp
push
xchg
insl
cmpsb
cwtl
in
inc
shll
push
xchg
in
push
outsl
nop
lock
ds
iret
and
jp
cmc
jnp
cld
aaa
add
mov
div
daa
sahf
sub
jg
fisubs
test
push
popf
clc
pop
or
jns
jp
cltd
mov
mov
cmpsl
inc
out
mov
fldl
scas
call
jbe
out
mov
imul
lods
cmc
adc
jg
jbe
orb
nop
adc
mov
icebp
inc
sbb
repz
or
add
cmp
mov
jmp
in
sub
adc
jl
inc
call
mov
xor
das
call
mov
aas
lods
cmp
cmc
fwait
mov
xor
or
jbe
push
cmpsl
xchg
mov
push
out
xor
pusha
mov
mov
adc
and
lds
movsb
dec
aaa
outsb
fidivrl
sbb
xor
xorb
lcall
xchg
int
mov
jo
fs
mov
adc
movsb
lahf
jb
and
mov
cmc
lcall
push
icebp
stos
aaa
leave
mov
inc
iret
add
call
sub
add
pop
mov
into
and
xorb
roll
pop
pop
jne
adc
push
xchg
mov
sbb
inc
aaa
mov
incl
inc
sarb
xchg
dec
dec
and
inc
mov
je
xor
sub
mov
movsl
jmp
js
pop
sub
or
add
pop
out
cli
pop
sub
ficoml
mov
add
xlat
cmp
pop
pop
inc
lcall
mov
xchg
adc
es
adc
stos
push
data16
sbb
call
imul
dec
xlat
mov
outsb
jne
mov
imul
adc
inc
loope
pushl
jb
jne
add
lods
cltd
sbb
cmp
loopne
dec
cli
incl
push
icebp
sbb
test
pop
out
and
cmpsb
fisubrs
push
imul
or
mov
xor
sahf
flds
sub
adc
aad
ss
mov
add
mov
and
mov
mov
push
pop
or
or
or
mov
loopne
loopne
scas
sti
sbb
mov
and
rol
mulb
adc
pop
jo
mov
les
fs
jno
ljmp
xor
push
push
aaa
ja
cmp
jo
push
or
push
sarb
cmp
scas
dec
inc
lret
lret
push
or
les
pop
jp
adc
in
addr16
test
cmpsl
inc
xchg
sbbl
cmpsl
mov
popf
xlat
scas
adc
jae
add
sbbb
pop
or
pushl
inc
dec
icebp
adc
jns
xor
sbb
mov
outsl
pop
scas
mov
cwtl
dec
push
pop
add
add
jecxz
nop
inc
adc
stos
out
stos
sbb
arpl
pop
xor
mov
add
push
jns
xchg
lock
pushl
dec
les
jge
pop
push
leave
pop
jle
scas
jbe
das
sub
ljmp
push
jl
in
icebp
cs
repz
out
scas
mov
sub
clc
cli
cmpl
cmp
inc
out
movsb
rol
aaa
cld
sbb
enter
out
imul
insb
xor
incl
add
enter
jb
lods
punpcklbw
xor
xchg
cld
decl
jg
imul
or
sbb
and
and
cs
pop
mov
mov
ja
push
or
and
and
ljmp
ret
and
sub
xor
cld
mov
mov
pop
ficomps
nop
dec
cmpsl
cs
sahf
test
ja
adc
dec
inc
push
stos
pop
jp
inc
pop
push
jns
mov
call
mov
mov
pop
mov
cmp
jge
or
xor
xor
xlat
daa
mov
mov
bound
and
loope
data16
add
nop
pop
mov
pop
icebp
loope
int
mov
mov
repz
lock
loopne
mov
cs
enter
outsl
out
jle
adc
lds
fsubs
push
mov
jnp
nop
xor
xor
push
mov
test
sarb
push
mov
mov
stos
cltd
or
scas
clc
outsb
xchg
out
jl
hlt
inc
dec
gs
inc
in
sbb
xor
lock
decl
pop
inc
popf
iret
leave
adc
add
and
incl
je
lods
pop
dec
mov
jle
cmp
outsl
adc
popa
mov
ljmp
add
cmp
dec
cs
lds
clc
add
push
mov
ret
xor
pop
lea
mov
jle
pop
push
hlt
or
and
lcall
cmpsb
xchg
andb
jo
and
add
adc
jl
xchg
vpavgw
fcomip
lods
movsb
insb
jbe
repz
mov
pop
sub
mov
sbb
cmp
xor
iret
decl
data16
dec
cmp
dec
inc
push
cld
pop
sub
lret
push
aas
dec
sti
cmp
push
mov
mov
xor
scas
jbe
pop
lea
push
mov
imul
inc
std
aaa
pop
outsl
mov
int3
adc
cwtl
jne
cmp
mov
aaa
push
aaa
pop
ss
idivb
cmpb
inc
xchg
pop
jle
jne
pop
inc
into
add
sub
cmp
jle
mov
push
sbb
jge
push
xchg
pushf
ds
mov
clc
mov
test
ss
push
jg
call
or
arpl
cmp
xchg
outsb
aaa
xor
pop
or
mov
jg
scas
out
inc
jmp
jle
push
xor
mov
sti
cmp
xor
cmc
loopne
or
xchg
or
shlb
bnd
cs
adc
push
adc
js
push
out
outsl
lret
push
inc
aam
pop
dec
pushl
mov
sub
test
add
cmpsb
adc
and
outsl
add
mov
pushf
lods
sub
jle
mov
and
adc
or
push
jge
ficomps
scas
aas
ret
fimull
repz
xchg
mov
sbb
shrb
rcll
jbe
das
sub
mov
push
mov
pop
pushl
jmp
lret
mov
pop
cltd
inc
pop
or
inc
ret
icebp
add
jmp
xor
lods
jg
or
mov
aas
mov
nop
loop
gs
out
movb
sub
push
ljmp
mov
rcrb
lea
push
js
das
pusha
and
inc
into
push
mov
movups
and
call
xor
and
adc
cmpsb
adc
pop
lods
jmp
scas
and
xor
cmpb
js
fwait
add
or
mov
push
push
mov
rclb
negb
mov
cwtl
or
mov
inc
popa
insl
stos
jb
dec
jo
push
ds
mov
adc
call
inc
push
ret
sarl
jne
add
cmp
sbb
mov
mov
mov
push
cmpsb
push
pop
adc
ja
data16
jle
jno
dec
jns
cltd
aaa
popa
cld
fcomip
inc
stc
cs
jge
or
push
test
push
mov
bound
sbb
filds
sub
jmp
aaa
inc
loopne
into
les
xchg
cmp
mov
into
leave
cmc
jecxz
and
stos
push
mov
jmp
negb
push
jbe
cmp
mov
imulb
cmp
xchg
pushl
and
mov
jae
cmp
lea
js
xchg
int
cld
aas
push
popw
push
repz
cmpb
add
xchg
test
mov
jb
mov
fisttpl
mov
lcall
sbb
mov
and
jo
or
daa
pop
in
fists
andl
mov
ret
sub
adc
push
test
pushf
cmp
fidivs
scas
or
jnp
mov
jnp
pop
cwtl
inc
clc
lcall
movsl
sub
pushl
or
loop
jno
pop
sahf
adc
xor
pushl
inc
mov
std
pop
jbe
jmp
bound
cmp
nop
xor
inc
iret
add
incl
inc
rorl
xlat
mov
cmp
mov
inc
dec
jns
and
xor
adc
scas
dec
pop
pop
ljmp
ljmp
arpl
jnp
and
andl
aaa
fadd
jo
add
jge
jnp
test
jg
dec
out
dec
imul
lods
lods
aad
shll
call
out
out
loope
fimuls
fstp
xchg
sbb
ss
cmpsl
icebp
dec
into
fmul
mov
inc
push
lret
dec
clc
add
shll
inc
leave
mov
insl
push
dec
ja
push
jno
aas
dec
pusha
jmp
push
sbb
adc
mov
je
push
cmp
pop
jne
mov
jnp
sbb
xchg
scas
sub
jp
aas
add
or
icebp
jle
adc
imul
movsl
push
jp
popf
aaa
addb
ficoms
out
loopne
out
test
fcomip
jg
call
xchg
pop
pop
es
out
lret
inc
sub
mov
pushl
dec
and
xchg
pop
jne
pop
mov
hlt
push
out
sub
aas
pop
nop
adc
cld
test
pop
out
xchg
mov
das
cmc
mov
jbe
mov
xor
in
add
ja
aas
clc
jb
sar
out
cmp
jns
add
xchg
daa
jns
jmp
call
push
inc
dec
dec
fsubrl
enter
inc
ret
inc
dec
lock
lcall
lret
xor
pop
cltd
adc
mov
add
and
push
push
aas
inc
pushl
fimuls
jg
in
mov
mov
sbb
and
ljmp
pop
dec
loope
es
ss
clc
and
sub
shlb
clc
lcall
adc
adc
mov
out
out
sub
ret
jnp
lcall
or
sbb
decb
mov
jae
sbb
arpl
xor
imul
out
jb
pop
cwtl
and
mov
sub
mov
jge
aaa
push
jo
jns
js
popf
pusha
scas
mov
or
aad
mov
outsb
call
inc
mov
inc
dec
out
iret
lcall
in
inc
les
aam
mov
xchg
dec
jecxz
fldl
ss
popf
or
cmp
push
into
insb
loope
popa
lret
cmpsl
or
test
pop
xchg
jae
jecxz
gs
stc
cld
imulb
das
addr16
inc
mov
or
adc
cmpl
das
mov
xchg
popa
mov
sub
stos
popf
rorl
in
mov
or
mov
adc
lret
rolb
mov
mov
mov
sbb
inc
mov
scas
loopne
add
mov
movsl
dec
leave
jmp
inc
pop
add
gs
sbb
scas
aas
mov
mov
mov
cmpsb
jb
mov
mov
xor
je
adc
sbb
dec
sbb
jle
and
or
stos
icebp
jl,pt
jp
std
dec
sub
jmp
inc
jns
add
mov
jne
cmp
fs
xchg
inc
andl
outsb
in
pop
insb
cmp
dec
out
mov
dec
stc
adc
inc
lret
shlb
pop
cmc
jg
jo
sbb
mov
lcall
lcall
jne
cmp
push
imul
mov
cmp
push
add
stc
sub
incl
xor
jns
cmp
es
xor
and
xor
xchg
sbb
divl
je
aas
in
adc
dec
sbb
pushf
mulb
mov
dec
pop
adc
mov
pop
fistps
call
ss
cmpsl
mov
push
aaa
ds
clc
pop
loopne
pop
daa
scas
mov
sub
push
pop
cmc
outsl
ljmp
nop
inc
rorl
jbe
movsb
mov
jecxz
aas
or
jle
push
repz
xchg
test
pop
mov
stos
jg
hlt
into
testb
mov
jno
mov
jne
fcomip
add
cld
jl
adc
mov
mov
dec
pop
scas
pusha
loope
mov
inc
jbe
jns
xchg
push
jne
or
ss
adc
data16
pushl
jbe
decl
ficomps
push
sbb
addr16
and
mov
cmpsb
and
in
jne
push
aad
mov
push
jnp
mov
ficomps
inc
cmpsl
xchg
xchg
test
xorl
sar
mov
rorb
jae
xchg
or
fs
rcr
pop
mov
jbe
push
iret
xchg
or
add
jle
das
sar
outsl
insb
jge
sub
xchg
add
fwait
add
mov
adc
mov
push
movsb
bound
mov
jo
sahf
mov
pop
mov
push
icebp
movsl
out
cmp
push
out
inc
mov
into
xor
pushl
xchg
sbb
xchg
sbb
xlat
in
xor
lea
jb
inc
pop
ljmp
dec
cmpsb
dec
cmpsb
sbb
inc
or
in
imul
pushl
xchg
jae
xchg
xor
js
bound
inc
mov
jg
inc
or
mov
hlt
shlb
cmp
xchg
ljmp
decl
push
xor
aaa
pop
insl
or
add
xor
mov
ljmp
jbe
sub
xchg
add
imul
jne
lahf
lock
mov
mov
test
movsl
cmpsb
mov
lds
icebp
cmp
mov
out
mov
in
ja
xor
negb
nop
sbb
adc
add
xchg
cltd
jo
imul
xor
popf
xchg
xor
outsb
stos
insb
outsl
idivl
mov
jg
ss
lods
ds
shlb
pop
out
roll
add
insb
inc
jbe
jo
push
and
mov
decl
sbbb
nop
push
rclb
inc
sub
push
cmpsl
test
xor
decl
test
mov
dec
xchg
mov
les
mov
in
xchg
loopne
aas
add
push
jno
jns
je
pushf
stos
sbb
cmp
leave
xchg
sbb
jno
test
cwtl
pop
cs
cmpsl
cltd
mov
pushf
sbb
xchg
jmp
sub
lods
mov
mov
sub
les
pusha
stos
rorl
add
sbb
sbb
cmp
call
adc
test
subl
ret
sbb
nop
add
out
cmpsl
sub
aaa
add
sbbl
jecxz
icebp
scas
inc
repnz
mov
inc
dec
adc
out
add
popa
xor
sub
cmp
dec
dec
sbb
pushl
pop
ja
xorb
and
mov
xchg
arpl
incl
lret
int3
cmpl
xchg
test
cli
and
bound
mov
mov
idivb
bound
mov
cmpsb
mov
stos
das
push
ljmp
mov
sahf
push
jg
jmp
dec
mov
out
loope
mov
out
cmp
mov
inc
xchg
lcall
lods
cmp
add
int3
pushf
int
pop
outsb
and
stos
and
cmc
daa
add
mov
jg
or
dec
das
adc
xchg
push
dec
mov
cld
aas
out
pop
sub
push
loopne
xor
or
loope
jo
bound
pushf
add
adc
mov
decl
es
movsl
outsl
mov
and
test
call
gs
cwtl
and
mov
test
fbld
pop
pop
inc
sbb
enter
mov
or
push
data16
cmp
pop
cmp
mov
clc
test
aad
inc
inc
inc
imul
mov
pop
icebp
mov
adc
lds
cmpsb
and
icebp
ret
ret
ljmp
lcall
out
jle
lods
lods
pop
loop
and
jle
andl
idiv
push
jp,pn
pop
int3
dec
out
imul
jmp
fs
add
mov
insl
aam
mov
jecxz
es
jmp
push
mov
inc
or
lock
jno
pop
sub
in
adc
jle
cmp
mov
lock
mov
xchg
fidivs
js
cltd
mov
mov
cld
loopne
inc
enter
arpl
pop
mov
pop
pop
bound
imulb
outsb
jle
gs
testb
sahf
push
in
jle
idiv
add
mov
rorb
in
push
dec
cs
mov
fidivl
mov
cmc
mulb
push
jno
shrl
mov
cmpsb
push
sarb
cwtl
push
lahf
mov
popa
loopne
push
scas
aad
int3
mov
mov
xchg
lock
jns
lods
dec
lds
dec
std
decl
jbe
inc
stos
insb
xchg
xchg
stos
jmp
dec
xor
stos
push
or
scas
mov
aas
push
mov
dec
jg
loope
fwait
xchg
mov
mov
inc
mov
cmp
push
dec
mov
xchg
subl
cmpsb
ss
icebp
incl
or
fwait
inc
inc
movsl
cmp
and
pop
hlt
popa
aaa
outsb
into
std
push
mov
pushl
idiv
adc
shlb
in
or
cmp
lea
out
arpl
dec
cmc
mov
fcomip
or
ss
pushf
xchg
inc
bound
cmpsb
jo
mov
xor
sbbl
adc
les
imul
out
mov
subl
iret
mov
mov
mov
inc
icebp
sbb
and
inc
adc
cs
or
jmp
cmpsl
xor
add
mov
mov
inc
jg
xchg
daa
cltd
and
jne
adc
sbb
mov
decb
pushf
decl
lock
or
push
inc
out
or
sbb
mov
subl
fsub
mov
mov
in
push
cmp
lods
sub
xchg
mov
inc
lods
adc
hlt
popa
gs
jo
xor
push
mov
mov
aas
mov
rcl
decl
inc
outsb
or
push
enter
mov
or
rcll
data16
cld
mov
pop
xor
ja
mov
xor
loope
and
jge
mov
out
inc
daa
cwtl
mov
jb
lret
xor
and
adc
mov
adc
mov
sbb
push
into
fcoml
xor
ljmp
jno
mov
or
test
mov
jge
sbb
ss
fiaddl
inc
jno
xor
adc
mov
push
int
sahf
call
sbbb
lea
mov
xor
mov
mov
or
ljmp
out
xchg
sub
add
and
sub
std
push
push
subb
js
dec
lock
jge
push
arpl
mov
shlb
lds
popf
std
cld
mov
cwtl
ss
xchg
inc
xchg
dec
adc
mov
loopne
adc
add
jle
out
xor
sbb
push
ss
push
outsb
aas
push
fsin
push
loopne
loopne
sahf
imul
stos
bound
pop
pop
add
sbb
rcll
jo
add
inc
hlt
mov
insl
mov
adc
jp
mov
adc
sbb
xchg
jb
mov
test
adc
pushl
jp
cmpsb
call
dec
add
outsb
jne
dec
aaa
inc
add
pop
pop
nop
sbb
mov
push
cwtl
loope
out
das
jbe
out
scas
cmp
gs
jb
mov
data16
mov
jge
dec
pushl
sbb
xchg
sarb
inc
std
ja
jg
or
repnz
push
mov
mov
mov
inc
scas
push
xchg
stos
xor
mov
and
pop
test
jns
loope
pop
jbe
dec
jle
lea
inc
or
add
into
cmp
push
jp
filds
fisubl
mov
test
ja
pop
and
push
incl
cmpsb
cmpsl
mov
stos
icebp
mov
dec
sahf
sub
jle
outsb
stos
pushl
inc
xchg
inc
lcall
mov
cld
ja
push
inc
push
push
sti
and
jge
mov
jmp
or
dec
adc
movsl
or
pop
pop
sbb
xchg
xor
xchg
jg
decl
pop
cmp
mov
bound
jbe
mov
movsb
imul
js
mov
push
mov
xchg
mov
mov
jle
outsb
sti
push
lret
jbe
pop
clc
js
mov
cmpsl
gs
mov
test
cmp
sar
mov
mov
dec
add
adc
testb
sub
mov
scas
xor
imul
mov
jbe
pop
daa
pusha
or
xor
pop
xor
push
test
outsb
inc
fnsave
pop
data16
inc
gs
scas
ljmp
inc
fadds
adc
add
fs
pop
push
inc
iret
jg
loop
into
or
jg
jecxz
into
mov
push
es
lahf
push
sbb
add
sub
or
mov
push
push
pop
mov
lret
shll
stc
stos
data16
cmp
cmp
js
and
dec
sbb
rcrl
pop
xchg
cmp
ds
sbb
cmp
mov
fwait
mov
push
cltd
lods
insb
xlat
mov
ljmp
rorl
or
rcr
sbb
decb
push
sbb
inc
subl
pop
cld
adc
xchg
inc
iret
iret
mov
cld
inc
sub
ret
xor
xlat
cmp
std
mov
mov
arpl
push
in
and
dec
cli
add
nop
insl
std
add
mov
stc
xchg
popa
outsl
add
inc
mov
pop
stos
mov
imul
sahf
cmpsb
out
cli
sti
dec
lds
scas
mov
roll
in
ds
out
dec
in
xchg
inc
shll
dec
xchg
mov
fdivrp
stc
nop
jns
sarl
pop
jo
sub
cmp
mov
loopne
lods
fmull
dec
mov
xor
fnsave
mov
adc
cmpsb
decl
bswap
stos
in
sub
mov
rorb
mov
into
sub
or
ljmp
into
xor
mov
pop
or
mov
fmuls
incl
inc
test
ret
cmp
jge
and
loop
gs
aad
mov
dec
sub
dec
outsb
cmp
mov
push
hlt
fwait
movsl
imul
mov
jb
outsb
mov
adc
fwait
mov
addr16
fimull
adc
cmp
push
es
xchg
enter
int3
jg
fsubrp
mov
cmp
lea
in
pop
cmp
nop
stos
push
xchg
mov
or
scas
popf
xchg
pop
in
xlat
or
cmp
xchg
clc
push
lock
sbb
idivb
test
stos
mov
int3
rcl
mov
pop
out
xchg
shrl
dec
fadd
mulb
cmc
mov
popa
popf
jmp
inc
orb
jg
ljmp
pop
std
mov
ror
loopne
inc
into
sbb
fisttpl
jbe
loopne
inc
or
mov
mov
mov
movsb
scas
clc
out
lods
xchg
fcmovu
xor
lds
jbe
mov
data16
popf
ret
movsb
xchg
pop
ljmp
mov
lahf
outsb
push
sbb
mov
inc
call
int
ret
out
sbb
sub
inc
add
adc
sbb
cmp
aas
sti
xor
xlat
add
pop
notl
inc
out
imul
jl
or
popa
ljmp
push
rclb
inc
repz
jbe
add
in
inc
les
int
sti
sub
jno
xor
cmc
or
cli
jg
dec
xchg
bound
and
out
rcr
add
xor
cmpsb
loope
fdivrp
call
into
addb
aaa
outsl
icebp
sub
orl
push
roll
inc
fiaddl
in
incl
xor
inc
sub
test
in
adc
sbb
inc
shll
cmc
incl
add
aaa
mov
cli
pushf
sbb
mov
and
xchg
je
aam
add
aaa
out
ja
outsl
sar
mov
lea
or
cmp
mov
sub
or
test
inc
clc
mov
push
cwtl
test
push
sbb
xlat
cltd
jg
decb
mov
pop
dec
int
pop
cmp
les
and
fists
inc
xlat
mov
add
dec
cmp
push
or
adc
mov
call
cmp
rolb
js
jmp
push
mov
and
or
push
mov
sub
jbe
or
push
mov
mov
ja
es
clc
xchg
scas
shlb
jle
cli
nop
arpl
fidivrl
jl
pop
jbe
add
dec
andb
push
les
shrb
test
mov
pop
push
adc
cmp
popl
popf
sahf
xor
adc
mov
jne
mov
sbb
aad
jae
outsb
sbb
adc
cmp
test
add
inc
sbb
stos
pop
xlat
mov
cs
xor
jnp
fiaddl
pop
and
pop
sarl
divb
mov
iret
mov
daa
loope
ret
jo
push
xor
sub
xchg
idiv
decl
insb
jge
imul
dec
aas
rclb
inc
jg
cmc
pushl
xchg
mov
adc
jns,pn
inc
push
inc
sub
fldl
and
adc
pop
mov
insl
aas
or
xor
pop
mov
cmp
mov
clc
xor
sbb
dec
mov
jle
and
les
pop
data16
sbb
push
aad
sbb
mov
xor
jle
sbb
inc
decb
cmc
test
bound
cltd
insl
fwait
inc
add
adc
mov
popa
js
out
adc
addl
test
cmpsl
adc
stos
mov
mov
test
mov
mov
mov
fwait
into
xchg
add
push
mov
sti
inc
mov
inc
or
jb
ss
pop
mov
ljmp
push
ds
dec
xor
stos
push
dec
or
mov
outsl
clc
arpl
dec
adc
sti
gs
rcr
xor
mov
xor
jo
xor
push
xchg
dec
sbb
push
sbb
jl
aas
popf
popa
mov
xor
mov
cmpsl
push
neg
pop
pusha
pop
ljmp
cmp
sbb
cli
mov
mov
adcl
sub
fildll
lds
fmuls
xchg
out
pop
add
cmp
jmp
lcall
jne
imul
lods
cld
xor
xor
add
lcall
dec
aas
or
repz
in
aas
push
ret
pushl
stc
in
sub
cwtl
test
gs
and
mov
movsb
insl
movl
and
mov
ljmp
outsl
imulb
jo
out
or
ljmp
xor
shrb
mov
add
ret
or
jbe
sub
sbb
out
bts
mov
stos
incl
repz
pop
out
popf
loop
cmp
inc
inc
xchg
loope,pt
outsb
push
cltd
repnz
inc
cld
lcall
adc
adc
lcall
or
xchg
jle
ss
adc
mov
mov
jno
add
dec
repnz
popf
inc
es
lds
lcall
pop
mov
dec
push
or
push
push
mov
mov
mov
lock
jle
cmp
das
fs
adc
fcomip
jo
xor
add
or
xor
ss
aas
pop
repz
cmp
out
ljmp
fistl
dec
rcrb
push
push
mov
jg
pop
test
bound
or
ljmp
jb
and
add
xor
arpl
je
frstor
lcall
stos
out
jmp
mov
fdivrl
jmp
dec
add
xor
adc
add
in
mov
sahf
cmc
xchg
lcall
popa
loope
leave
out
stos
cmpsl
mov
push
fisubs
insb
jbe
adc
cs
mov
clc
or
mov
sub
outsl
or
leave
or
xchg
lret
leave
mov
push
sub
push
mov
inc
flds
jne
jecxz
adc
lods
inc
jp
mov
lock
dec
pop
pushf
mov
shll
inc
dec
loope
or
jno
mov
sqrtps
mov
pop
jl
testb
pop
mov
xor
jns
ljmp
out
cltd
cmpsb
jns
jnp
popa
inc
aaa
test
fnstenvs
add
pop
sbb
dec
jle
icebp
mov
mov
or
jnp
scas
in
dec
sarl
inc
xor
push
jne
call
insl
fs
jns
sub
adc
sbb
pop
push
imul
mov
push
mov
shr
cli
or
pusha
pop
fdivrl
and
ljmp
scas
adc
and
je
mov
sub
aas
movl
jmp
andb
sarl
and
pop
imul
sar
insl
and
add
ljmp
outsl
jp
decb
cld
dec
fsts
pop
adc
mov
lcall
xchg
out
and
sbb
push
ret
sub
pop
xor
mov
sti
test
test
incl
imul
bound
fs
lock
mov
dec
inc
mov
push
and
in
fdivs
jae
loope
add
mov
or
pop
mov
jo
test
xor
and
xchg
xor
push
bound
ljmp
enter
inc
out
and
inc
lcall
mov
jno
sbb
subl
insl
js
cli
incl
lcall
push
out
cmp
insl
mov
jg
icebp
out
movsl
jmp
xor
mov
xchg
es
adc
popf
push
jns
and
mov
in
ljmp
test
fcomi
pop
ds
dec
dec
sbb
es
add
cs
rolb
cmp
sbb
mov
imul
xchg
sbb
negb
push
dec
aam
xor
mov
sarb
xor
loope
sar
pushl
pop
add
mov
jno
out
stos
cltd
in
addb
fbld
jl
icebp
test
pop
sti
ret
mov
mov
xchg
xchg
pop
fmulp
imul
inc
into
dec
arpl
inc
daa
and
decl
xor
push
dec
clc
add
or
daa
insb
fadds
inc
cld
sub
add
jmp
add
sub
scas
aas
int
in
xchg
pop
ss
mov
shll
aas
xor
call
imul
xchg
movsl
mov
xor
push
decb
mov
jg
cmpsb
and
push
shlb
xor
sub
mov
mov
mov
ret
pop
popf
pop
inc
inc
push
iret
leave
ja
push
sarb
ss
call
or
in
shrb
pop
lret
inc
fildll
clc
aaa
xorl
insb
andl
inc
fcomip
pop
pop
jbe
mov
add
lea
push
or
or
lcall
out
mov
sbb
add
jecxz
cli
fwait
bound
lea
jnp
fildl
mov
mov
lret
sar
imul
ret
xchg
scas
js
lock
jno
lahf
pop
ffreep
xor
inc
add
call
xchg
push
js
dec
enter
push
jl
xor
ds
dec
fcoms
xor
into
pop
cmpsb
gs
movsb
cmp
push
call
sbb
decl
bound
jecxz
jge
mov
insb
pop
js
sub
adc
fcomip
jno
cmp
xor
fs
dec
les
dec
add
rcrl
ljmp
dec
ss
enter
cmp
mov
les
jle
sarb
xor
and
xchg
fcoms
aaa
add
cltd
mov
fsubl
or
mov
inc
jo
je
or
mov
mov
add
ret
xchg
mov
nop
jmp
cmpsb
lods
push
pop
outsl
call
das
mov
flds
packuswb
jbe
or
add
mov
mov
dec
mov
les
ds
adc
in
inc
add
xchg
int3
add
inc
mov
int3
sub
push
mov
je
hlt
lock
das
sahf
mov
mov
loop
out
cmp
add
adc
test
lock
cmc
lods
clc
jnp
xorb
sbb
dec
or
xor
inc
dec
std
inc
cmp
insb
jp
inc
enter
stos
into
sbb
inc
andl
xchg
inc
in
sub
pop
jno
or
imul
js
pop
ret
repz
mov
loopne
dec
dec
cwtl
adc
mov
repz
xchg
adc
add
in
js
repz
cs
aaa
je
sub
and
into
add
ljmp
cli
lcall
jle
sub
ss
push
dec
int3
push
int3
xchg
fidivrs
jle
mov
add
push
ljmp
xor
xchg
out
movsl
lcall
or
pop
cld
out
mov
xor
loop
mov
ds
adc
int
xchg
imul
jmp
mov
pop
mov
out
cmp
or
cmp
loop
mov
sahf
outsb
aaa
pop
or
adc
dec
adc
inc
shlb
mov
mov
mov
cmp
push
ret
xchg
stos
cmc
mov
dec
scas
mov
rcrl
call
arpl
lcall
push
cmp
xchg
outsl
call
pusha
pop
lods
xor
sbb
pop
push
loopne
inc
cli
sahf
jbe
jl
pop
inc
xor
jnp
push
imul
popa
into
add
mov
xchg
xor
xlat
xchg
fs
fs
cld
mov
inc
mov
int3
sbb
jb
add
lcall
and
push
adc
outsb
xchg
cmp
notl
loop
adc
iret
mov
js
add
sar
mov
cld
inc
cli
xor
pop
xchg
xchg
insl
jmp
adc
in
jbe
cmp
repnz
xor
call
popa
add
xor
or
or
jg
mov
jl
adc
and
or
loopne
xchg
iret
mov
dec
aas
xchg
test
push
out
lds
cmp
jbe
pushf
icebp
and
mov
mov
lock
out
cmp
sub
cmp
int3
lods
jg
ljmp
xor
push
inc
pop
or
push
into
mov
sbb
cmp
or
imul
jle
add
lock
sbb
out
fnstcw
fcomip
outsl
orb
dec
dec
mov
cmp
or
sub
jmp
xchg
dec
sub
ret
fcoml
pop
pop
dec
adcl
sbbl
ljmp
jle
cmp
mov
inc
popa
movsb
insl
sub
sbb
cmp
inc
and
cs
adc
flds
push
jmp
dec
ljmp
pop
gs
sar
stos
jmp
push
add
and
push
push
enter
adc
mov
jne
sbb
xor
sbb
cmp
add
jmp
fs
jg
mov
hlt
dec
push
add
jno
inc
lock
jmp
mov
into
mov
stos
mov
fisttps
inc
sbb
xor
sbb
movsl
int3
add
sub
xchg
cmp
mov
or
iret
lock
xchg
add
push
ja
inc
js
pop
mov
mov
out
rorb
scas
ljmp
mov
inc
fmuls
sub
rclb
sarb
out
push
sar
aas
dec
inc
pop
jo
sub
pop
push
pop
data16
push
fildll
scas
adc
imul
js
xchg
cmp
daa
gs
or
and
mov
cmp
rorl
adc
xor
sub
std
mov
les
lods
cmpsl
fistps
fildll
clc
push
mov
or
ret
dec
add
cld
add
push
or
push
sub
mov
xchg
xor
stos
repnz
sar
dec
add
inc
push
push
in
jbe
push
xor
arpl
mov
not
rolw
das
imul
pop
mov
jmp
add
xor
rorb
dec
adcb
lods
dec
mov
mov
ds
jno
jle
pop
cmpsb
repnz
inc
call
loopne
lret
fcompl
mov
cmp
add
add
lret
and
in
push
sar
jne
ret
popa
call
incl
ret
mov
cmpsl
sar
mov
xchg
cmpsb
sbb
cld
lcall
mov
xor
test
data16
mov
ja
out
sahf
scas
aas
dec
enter
cltd
pushf
test
lods
lock
rcll
push
xchg
jb
push
loope
push
icebp
mov
pop
sub
pop
repnz
or
fildll
loopne
jbe
cmpsb
mov
jp
and
cld
fisttps
jmp
add
or
cwtl
jnp
sbb
cmpsb
movsl
or
push
and
or
xor
pop
inc
cmp
cld
mov
dec
or
jo
aam
das
popw
rclb
dec
or
or
sub
incb
cld
fcmovnb
sub
inc
in
lods
cmpsl
xor
mov
push
scas
in
cmpsb
pop
adc
pop
dec
push
pop
dec
cmpl
push
mov
jo
mov
pop
popa
lock
scas
pop
adc
decl
jecxz
in
ss
sbb
gs
js
jmp
popa
je
fs
mov
adc
lahf
ss
in
dec
pop
inc
dec
adc
jbe
mov
xor
ljmp
imul
aam
insl
into
mov
je
pop
fbstp
inc
push
loopne
push
ss
cmp
xchg
pop
or
inc
ja
sbb
or
outsl
mov
pusha
cmpsb
and
lcall
xchg
inc
jmp
push
lcall
inc
xlat
ret
mov
filds
mov
inc
sahf
mov
inc
jecxz
stos
or
inc
mov
imul
shl
movsl
sub
decl
adc
push
mov
sti
or
jmp
pop
iret
sub
add
fadds
xchg
dec
divb
jmp
cltd
inc
rcr
xor
jp
ret
inc
rcll
jns
cmpl
push
mulb
jmp
mov
sarb
and
cli
dec
in
mulw
out
dec
iret
mov
add
mov
out
mov
movsb
imulb
mov
ja
imul
or
dec
adc
stos
adc
or
out
xchg
stos
mov
cmpsb
imul
mov
in
aas
pslld
aad
xor
push
mov
lcall
sub
adc
mov
gs
iret
sub
push
inc
fildl
dec
sub
mov
fiadds
jne
dec
icebp
inc
fildl
addr16
adc
sar
pop
push
sbb
cmc
xor
in
pop
mov
xchg
aaa
pushl
andl
jle
jne
xchg
ljmp
cmp
cltd
xchg
mov
push
or
loop
mov
shll
sar
stos
inc
push
inc
stos
out
mov
cld
jp
and
add
sub
sti
aam
popf
les
cld
lcall
cwtl
test
int
aam
dec
sub
mov
in
je
shrl
scas
cmp
sub
mov
jae
pushl
jb
xchg
pop
loope
jb
pushf
imul
lcall
pushl
sub
mov
xor
adc
or
and
lods
inc
out
sub
sahf
outsl
stc
cmp
and
dec
int3
mov
loope
test
data16
decl
push
ret
mov
inc
mov
mov
jne
xchg
das
inc
pop
movsb
repz
decl
inc
inc
nop
or
subl
dec
mov
dec
out
dec
sti
pop
dec
insl
pop
std
and
dec
jmp
lcall
cli
jne
push
jmp
jg
inc
stc
add
insl
repnz
dec
rorl
stc
pop
icebp
adc
inc
lds
leave
push
cld
incl
adcb
arpl
cmpsl
add
cmp
insb
sbb
push
jno
decl
fisttps
dec
std
and
in
push
cmp
add
add
jb,pn
loope
cmp
dec
fnstenv
addr16
or
mov
outsl
clc
mov
repnz
aaa
dec
out
daa
xor
push
in
and
adc
xor
push
andl
cmp
xchg
subb
dec
call
dec
sbb
out
and
xchg
aas
sbb
sub
or
lea
mov
xor
inc
popf
cmp
sahf
inc
inc
xchg
movsl
xchg
xor
pop
pop
pop
lret
aas
add
push
loop
ja
out
out
inc
rclb
adc
cmc
jmp
and
xchg
lahf
lds
pop
in
cmp
int3
je
pop
or
mov
cli
inc
ds
add
fimuls
pop
jmp
test
mov
cmp
movsl
rcrb
pop
inc
aaa
mov
and
icebp
lcall
decb
outsl
lret
fcoml
jnp
xchg
or
rorb
sub
sub
and
mov
push
ljmp
mov
into
aaa
jl
lcall
add
stos
cwtl
adc
mov
dec
nop
pop
clc
mov
xchg
jo
mov
aad
add
ficomps
push
push
inc
nop
sub
adc
ljmp
sbb
mov
data16
xlat
popf
push
shrb
jns
add
les
fldl
push
mov
pushf
and
aas
and
out
inc
fdivrs
add
push
out
jg
loopne
jp
sti
sub
ds
mov
les
add
xchg
mov
test
add
inc
icebp
mov
or
ljmp
push
lock
push
pop
les
and
or
mov
add
std
aaa
push
jb
cld
push
cmp
push
in
and
inc
icebp
jne
jg
icebp
outsl
les
adc
int
jle
aaa
imul
pushl
cld
jg
or
jb
out
lcall
and
punpcklwd
mov
decl
out
xchg
pop
pushf
lahf
inc
sub
add
out
mov
cmpsb
ds
jo
cwtl
sub
lahf
push
pop
into
stos
mov
enter
std
gs
decl
dec
test
push
ja
or
mov
sbb
or
or
inc
mov
lods
outsb
ljmp
jg
sahf
sbb
adc
or
xlat
daa
scas
cmp
cmpsb
xor
cmp
lcall
call
push
into
mov
mov
mov
aaa
mov
sub
lcall
cmpb
adc
sbb
sarl
pop
sahf
inc
inc
mov
jp
mov
inc
call
cmp
aas
dec
pop
mov
push
decb
and
aaa
mov
mov
outsb
lea
xchg
push
jno
mov
decl
xor
adc
mov
jne
js
out
sahf
jmp
je
push
scas
ds
mov
pusha
xchg
punpcklbw
arpl
ljmp
cmpl
stos
mov
push
movsb
hlt
test
push
fs
out
cmp
or
xor
mov
aas
in
inc
es
sub
lret
mov
add
js
lea
or
aam
cmpsl
jl
jl
jg
popf
hlt
lcall
mov
fildll
mov
jg
jbe
scas
or
js
or
ljmp
push
lret
inc
fimull
js
cld
jg
dec
decl
mov
xchg
or
mov
push
clc
lcall
sub
sub
mov
mov
xchg
jecxz
ljmp
pop
cmpsb
call
pushl
add
dec
std
adc
ret
mov
push
cmpb
stc
imul
inc
ss
mov
push
test
and
les
and
push
push
cli
fs
movsl
mov
jge
xor
jg
jg
cld
imul
leave
pop
pop
and
pop
int3
xchg
xchg
xlat
adc
xlat
mov
sbb
hlt
inc
ret
push
xor
inc
incb
mov
jg
mov
xor
or
add
or
pop
dec
je
and
lret
cmp
pop
and
xchg
and
or
insb
add
scas
clc
incl
mov
lcall
cmp
inc
mov
jns
mov
test
pop
or
iret
xchg
sub
and
lea
adc
dec
movsb
mov
jbe
daa
cwtl
xchg
addl
mov
mov
sahf
and
xchg
cmp
fisubs
mov
mov
cmpsl
sbb
mov
mov
sbb
out
cmpsl
pop
and
adc
loope
xor
cltd
stos
or
fimull
lea
sbb
push
jo
add
sbb
xor
movsb
negl
add
cli
mov
mov
xor
jbe
dec
xor
xchg
dec
call
je
les
inc
mov
movsl
sti
xchg
outsl
pop
and
inc
cwtl
pop
fwait
sahf
xchg
or
cld
jmp
jl
sbb
cmpsb
imul
addr16
repz
push
arpl
mov
mov
test
cltd
lods
inc
stos
decl
sub
std
andb
mov
popa
hlt
xor
sbb
ss
clc
and
clc
in
shrl
push
clc
jg
arpl
dec
fnstenv
stos
pop
pop
dec
jg
movsb
jbe
jge
mov
sbb
pop
dec
repz
lcall
fs
cmpsb
push
cmp
add
mov
mov
mov
out
mov
stos
aad
js
and
sub
fisttps
cmp
pop
add
pop
ret
push
xor
xor
call
pushf
xor
in
or
xor
mov
leave
test
add
mov
call
out
test
dec
inc
add
in
push
inc
sbb
and
adc
insb
loopne
mov
jl
hlt
inc
mov
jb
sbb
test
adcb
ss
xchg
sarb
cld
pop
in
pop
int
jg
dec
inc
pop
es
mov
sub
cld
push
lods
and
add
fwait
mov
pop
lcall
cld
ljmp
xchg
test
and
sbb
inc
int
push
std
scas
clc
es
pop
int
jne
cltd
adc
sti
cmp
mov
cmpsb
push
clc
lcall
fists
inc
fwait
inc
cmpsb
insl
fisttpll
lahf
adc
push
inc
lods
stc
adc
jle
lea
arpl
test
adc
sub
adc
ja
aaa
push
iret
jns
dec
imul
adc
push
xor
nop
sbb
or
add
cmp
mov
scas
cli
lahf
mov
jmp
adc
testb
jne
aas
inc
xchg
mov
mov
jnp
insb
nop
out
pxor
ja
je
adc
stos
aas
xorb
pushf
into
pop
stos
mov
out
dec
or
dec
cld
div
ss
jl
adc
addr16
pushf
test
ret
out
pusha
pop
xor
adc
add
popa
nop
std
lods
test
popf
gs
popa
out
cli
pop
push
testb
js
pop
xor
aas
mov
xor
insl
mov
pusha
xor
xchg
mov
xor
call
dec
call
inc
enter
inc
lret
insb
dec
sbb
cmpb
xchg
dec
jmp
and
aaa
inc
aad
pop
push
ret
xlat
pushl
pop
iret
cmpl
outsl
mov
dec
pop
sbb
nop
pop
filds
xchg
notl
push
mov
fs
out
fwait
icebp
outsl
xchg
xor
mov
jmp
rcrb
cld
decl
push
dec
pop
add
cmp
sbb
jne
mov
sub
push
xchg
or
inc
add
fidivrs
pop
add
push
adc
xlat
scas
mov
xchg
xchg
icebp
xchg
cmp
inc
mov
inc
push
scas
push
push
dec
imul
pushl
push
dec
jl
iret
xor
bswap
mov
stos
cwtl
mov
insb
sbb
inc
cli
aas
call
loopne
inc
xor
xchg
test
sub
insl
jg
dec
mov
call
test
jb
jge
cmpl
mov
inc
out
cmp
jmp
into
je
fistps
jl
adc
push
pop
mov
pop
sahf
inc
xor
fcmove
ja
xchg
dec
shrb
dec
stos
scas
xchg
repz
jl
and
je
jp
fsubrp
fnsave
sahf
dec
cmp
jns
mov
dec
push
add
ss
sub
roll
mov
add
ljmp
fimuls
movsl
jl
jp
add
mov
rcll
sbb
mov
aaa
xchg
enter
cli
and
popa
clc
xchg
inc
cmpb
mov
shlb
lds
ljmp
mov
clc
cs
lahf
push
adc
shlb
push
ja
and
xchg
xchg
enter
mov
add
add
mov
mov
and
das
adc
ds
pusha
mov
sahf
jle
pushl
jnp
dec
fdivs
js
jns
outsl
insb
int3
dec
lea
push
out
pop
js
sbb
pusha
mov
ja
push
mov
lock
cli
push
inc
cmc
je
or
fidivl
insb
std
inc
scas
mov
cmp
dec
fidivrl
aas
jle
cltd
and
dec
push
inc
mov
jo
mov
decl
pop
insl
mov
push
and
pop
addr16
push
adc
insb
mov
popf
inc
adc
jmp
mov
mov
dec
sub
movsb
into
das
add
adcb
pop
and
jno
dec
push
jge
popa
adc
jmp
push
int3
cmp
jle
mov
das
push
or
daa
and
fs
sub
and
pop
addr16
dec
ficomps
mov
fisubrs
cmp
aam
sbb
aam
bound
insl
fisttps
jge
mov
nop
mov
dec
push
jmp
ljmp
out
mov
mov
xor
pop
test
or
sbb
xor
out
int3
popf
pop
push
xor
filds
mov
push
aas
mov
cld
into
push
lods
mov
std
decl
jne
out
push
sbb
sbb
sbb
decl
jne
insb
pop
repz
int3
mov
incl
jmp
aas
test
or
es
adc
pop
inc
test
call
lock
mov
pop
mov
mov
pusha
insl
in
sar
out
mov
imul
rorb
arpl
lock
test
mov
inc
aaa
mov
add
cmp
out
xchg
mov
or
call
das
cli
js
push
dec
or
scas
sbb
cltd
xlat
or
dec
sub
push
pop
outsb
les
ja
lods
cltd
xor
pop
sbb
sub
mov
and
fdivp
xchg
jmp
mov
arpl
xchg
fisttpll
pop
jmp
ljmp
jge
es
fstpl
std
or
and
inc
rclb
out
sub
test
test
ljmp
les
outsb
jg
cltd
fisubrl
cmp
sub
orl
pop
mov
in
incl
scas
popa
mov
add
pop
dec
int3
mov
icebp
and
mov
decl
push
xchg
inc
lea
cmp
scas
inc
inc
pushl
lods
dec
pop
outsb
push
fiaddl
jb
imul
adc
add
pop
jle
sbbl
dec
mov
aas
xchg
xor
xchg
aam
pop
vandpd
jo
mov
aad
cmp
sbb
ljmp
xor
and
jmp
sub
loop
push
bound
loop
jb
mov
mov
and
decl
sbb
jb
repnz
cmpsl
mov
test
idiv
inc
jb
cmp
mov
mov
push
push
xchg
int
les
aam
scas
or
jae
add
adc
daa
cmpb
mov
mov
mov
xor
lock
incl
mov
popa
cmp
mov
add
fcoms
fprem
ljmp
sahf
adc
pop
cli
test
xchg
icebp
fildll
push
push
cltd
pop
dec
sbb
ss
int3
mov
add
sti
mov
rol
ficoms
daa
sbb
xor
out
out
jmp
and
mov
pop
push
adc
insl
lcall
imul
xor
or
popf
cmpsb
xchg
inc
aas
or
decl
dec
enter
je
test
cmp
fdiv
mov
dec
xchg
and
imulb
fwait
aaa
in
fildll
mov
pop
scas
xor
inc
imul
inc
mov
mov
push
pop
xchg
fdivrp
jle
mov
lcall
sub
push
cmpsl
and
mov
pusha
lods
adc
sbb
add
pop
sub
jno
das
mov
xchg
data16
outsb
loop
push
aaa
cmp
repz
inc
test
mov
lea
int3
pop
xchg
jl
test
mov
push
jno
dec
jne
dec
call
push
je
xor
fsubl
or
inc
cld
sbb
lods
mov
lcall
pop
repz
icebp
mov
jbe
and
and
test
mov
mov
or
mov
mov
orb
arpl
add
movsl
scas
xor
lcall
lahf
mov
fisubrs
inc
mov
sub
xchg
mov
arpl
mov
mov
addr16
out
pop
fdivrl
pop
repz
loopne
call
sbb
adc
jbe
cs
call
cltd
push
adc
adc
jmp
shrb
lods
clc
sub
sub
movb
mov
ss
adc
or
mov
aas
pop
into
cmp
mov
mov
sahf
lea
scas
sub
or
leave
out
mov
call
cmp
mov
adc
imulb
pop
mov
adc
leave
shll
rclb
shrb
out
popa
mov
lods
jle
jle
mov
scas
rorl
mov
ljmp
insl
es
test
mov
out
pop
call
hlt
cltd
scas
imul
push
dec
in
ret
incl
mov
inc
sbb
es
inc
data16
bound
stos
mov
sbb
xchg
stc
clc
out
ss
jne
dec
and
jnp
jl
inc
and
mov
mov
inc
xchg
adc
aas
dec
push
mov
sub
lahf
pop
mov
jb
movsl
adc
jecxz
adc
xchg
stc
mov
sbb
cli
jg
out
in
push
push
mov
dec
ret
imulb
xchg
test
das
into
xchg
fcmovb
fiadds
add
aas
mov
scas
into
imul
retw
cmpsl
sbb
loopne
push
and
mov
jle
push
into
or
rol
gs
gs
ds
and
jne
push
mov
inc
xor
inc
sbb
mov
push
outsb
sbb
lds
pop
adc
xor
add
fstpt
push
and
cs
lock
std
shlb
ret
jnp
mov
mov
stc
fcomp
and
cmp
icebp
mov
and
fwait
mov
and
mov
mov
ljmp
aad
dec
sbb
xchg
sub
sti
ljmp
lcall
rolb
sbb
mov
add
fldl
inc
fwait
call
cmp
test
repnz
dec
jns
push
repz
jmp
xchg
ds
mov
shll
mov
pop
je
add
or
push
sti
nop
xchg
rol
push
adc
push
sahf
rcl
push
push
in
jmp
call
push
cmp
jl
mov
dec
cs
scas
ret
push
lret
rclb
jo
hlt
mov
or
cld
pop
mov
xor
or
push
scas
pushl
insb
jbe
ds
mov
lret
cwtl
incl
cmpsl
into
lds
dec
jae,pt
cmp
sbb
insl
mov
lahf
into
sbb
mov
xchg
jmp
repz
mov
mov
mov
mov
cltd
lcall
daa
adc
pcmpeqd
lds
dec
add
push
cmpsb
or
mov
mov
mov
push
dec
jne
hlt
es
inc
dec
test
dec
out
add
jne
fbld
out
rorb
int3
mov
add
loop
jecxz
push
in
js
into
std
in
mov
outsb
mov
and
into
jmp
mov
adc
jecxz
inc
ror
cmp
call
pop
mov
sub
sub
push
xor
push
lock
inc
mov
add
aas
inc
insb
iret
jle
push
cmp
and
cmpsb
cmp
mov
lods
xor
test
jle
loopne
into
dec
packuswb
mov
fiadds
push
mov
std
xchg
adc
push
dec
cmp
jecxz
add
test
xchg
cld
jg
dec
lods
gs
jge
xlat
ret
or
fcomip
jg
out
cld
test
mov
add
xchg
scas
mov
pop
and
into
nop
mov
push
icebp
lcall
add
iret
adc
mov
jge
call
out
push
push
xor
and
xor
sub
pop
aas
push
icebp
jmp
mov
jne
xor
mov
jnp
xor
adc
or
xchg
jmp
sbb
outsb
add
out
dec
mov
sbb
mov
cld
jmp
pop
ret
movb
mov
insl
and
jmp
xor
cltd
pop
call
dec
cmp
sub
lods
or
ret
and
pop
das
lods
xor
push
lock
incl
vpaddd
adc
in
xor
cmp
mov
loopne
pushf
out
into
ret
dec
jo
out
and
xlat
ret
mov
jle
lcall
mov
cmc
or
es
divb
cmp
fildll
adc
sbb
mov
aaa
pop
jp
cmpsb
decl
stc
xchg
popa
adc
lret
mov
pusha
jmp
outsb
and
cmp
mov
sbb
clc
or
pop
and
out
fidivs
imul
scas
sbb
adc
es
cmpl
filds
outsb
aam
dec
jns
cmpsb
sub
stos
jmp
cmp
sbb
mov
inc
push
lods
leave
in
cmpsb
mov
lock
sarb
mov
sbb
cli
add
in
cs
inc
pop
mov
jg
std
pop
cs
jl
lock
pop
imul
sub
mov
insb
xlat
and
mov
mov
insb
mov
jl
push
imul
not
loop
push
jle
adc
lret
xor
add
adc
cmp
cmp
ja
or
mov
std
popf
shlb
add
adc
rcll
mov
dec
pop
and
push
pop
cld
adc
cld
or
pop
es
xor
jb
jle
or
decl
xor
mov
or
inc
cltd
mov
sbb
dec
adc
out
jg
cmp
or
pop
mov
inc
push
test
cmc
pop
jo
sub
mov
inc
pop
das
jle
jno
es
ljmp
inc
xchg
push
cltd
pop
or
addr16
mov
cmp
jl
or
mov
out
clc
incl
insb
jmp
push
mov
pop
push
pop
push
scas
mov
test
and
clc
outsl
movsb
xchg
psrlq
test
adc
popf
xor
pop
adc
adc
out
cmp
aaa
cld
fwait
dec
lea
push
or
scas
xor
sahf
in
out
decb
push
clc
lcall
cld
andl
mov
push
sbb
mov
mov
call
push
cs
xor
mov
sub
popf
cwtl
and
and
sti
je
cmpsb
add
mov
pop
cmpsb
sbb
xchg
mulb
dec
dec
in
or
adc
mov
xchg
and
or
mov
cmp
push
lods
ljmp
sbb
cld
sub
or
mov
fisubrl
or
fistpll
pop
push
mov
divb
icebp
pop
lcall
inc
cld
loopne
xchg
sti
sub
out
cli
sub
mov
lcall
scas
add
fs
enter
pcmpeqb
jb,pn
cli
jge
pusha
xchg
imul
loopne
lret
outsb
mov
sub
idiv
loopne
cmp
hlt
sbb
sti
inc
outsl
sub
jle
popa
push
inc
icebp
in
jle
and
add
xor
pushl
sub
and
int
push
cltd
in
subb
pop
cmpsb
addr16
mov
imul
lock
adc
int3
mov
pop
lahf
es
ja
pop
icebp
add
bound
pop
jb
cli
es
lock
jbe
mov
std
pusha
lret
jl
call
push
test
add
add
jmp
adc
test
pop
les
inc
add
out
out
out
scas
mov
inc
icebp
sarl
setl
sbb
mov
and
jg
out
inc
aad
gs
repnz
fwait
mov
cmc
cmpsb
adc
xor
lock
jmp
jecxz
xchg
std
rcrb
and
mov
xchg
xchg
lods
imul
sbb
out
ds
dec
out
xor
xchg
xor
or
mov
ds
shrb
ret
outsl
inc
mov
mov
sub
movb
and
push
fidivs
xor
sbb
inc
das
xchg
ret
mov
imul
sbb
pop
xor
pushf
xchg
lret
mov
mov
aam
jno
cmc
das
out
pop
sbb
sub
in
lcall
outsl
lds
cmp
ret
testl
hlt
and
jmp
xor
mov
mov
adc
pop
mov
pop
mov
pop
rorl
ss
out
mov
push
jle
aas
daa
xor
xlat
out
fs
mov
out
lods
je
mov
fisubrs
pop
push
lods
das
lea
mov
loopne
stos
sahf
in
out
inc
cmp
xchg
xor
push
xor
outsl
sbb
jg
sbb
mov
hlt
and
out
add
jbe
int
sbb
xor
adc
xorb
cmpsb
repz
jnp
scas
lods
dec
cmpl
xchg
xchg
fldcw
inc
mov
mov
loope
in
or
mov
sub
movsl
outsb
lock
sahf
jmp
push
out
fwait
inc
xlat
dec
loop
movsb
push
cwtl
dec
es
and
push
jnp
out
call
ljmp
mov
or
fldl
lret
jp
mov
cmp
inc
loope
adc
int
mov
loop
popf
add
inc
push
sarb
cmp
test
or
and
fucom
jmp
or
stc
int3
sub
pop
add
cwtl
mov
sub
dec
std
jg
popf
stos
xchg
ss
out
cmp
cmpsb
add
rolb
mov
out
stc
test
hlt
cmp
ror
add
int
aam
fcmove
xor
sbb
loope
dec
ds
cmp
loope
mov
mov
fisubl
fdivrp
xor
sbb
inc
lret
aas
mov
cmpsb
cmpsb
mov
gs
les
insl
out
cs
ret
popf
xor
fidivl
out
in
cmp
or
mov
in
or
fwait
insb
sahf
int
and
cmp
and
or
cld
aaa
jg
roll
jae,pn
or
popa
fcmovb
adc
out
pop
dec
out
sahf
call
lret
pop
sbbb
adc
cli
out
sub
mov
and
ljmp
ja
push
dec
lcall
jecxz
lret
mov
jl
or
or
das
jb
pop
add
or
jge
ss
cld
add
pop
cmpsb
jne
lods
fildll
adc
xchg
ret
or
mov
cmpsb
repnz
je
inc
add
lock
mov
mov
and
sub
addr16
push
rcll
int
icebp
jne,pn
iret
out
insb
cld
pop
dec
call
popa
out
lock
sahf
jmp
hlt
push
cmp
aaa
mov
adcb
mov
into
idivb
lods
test
ja
clc
and
movsb
aas
fdivl
stos
psubq
push
xchg
outsl
jle
fwait
xabort
out
cmpsb
fstpl
inc
stos
loopne
hlt
lret
sub
les
push
and
mov
mov
int3
gs
mov
mov
and
sbb
pushf
jle
inc
les
data16
cld
pop
outsl
mov
cmp
inc
sti
int3
adc
cmpsl
test
aas
imul
int3
sbb
push
sub
cmpsl
movsl
out
adc
pushf
in
xchg
hlt
lahf
test
mov
testl
mov
and
jl
adc
test
outsl
pop
xchg
adc
dec
push
js
mov
xor
je
daa
popl
dec
xor
ds
jmp
loopne
cmc
fwait
je
inc
loope
jne
pop
sub
jp
loop
add
repz
jp
jle
jle
aas
pusha
cld
sub
sbb
mov
fistps
cmp
xchg
cmp
mov
imul
jns
pop
pop
pop
int3
cmpsb
gs
xor
scas
ja
das
and
gs
dec
ss
hlt
inc
sbbb
jp
mov
mov
ja
mov
push
cmp
cli
jmp
sahf
inc
imull
test
push
xchg
mov
sub
aas
into
icebp
xchg
js
sub
jbe
xor
push
outsl
push
enter
mov
sbb
push
mov
test
mov
sbb
dec
mov
dec
lret
js,pt
loope
rcrl
ds
or
cli
leave
sarb
mov
movsb
out
mov
ss
cs
cld
pop
jne
mov
lock
add
pop
insl
pop
shll
test
dec
iret
cmp
dec
ljmp
imull
mov
cmp
adc
add
call
ret
lock
mov
aas
mov
sbb
aam
adc
jne
cmc
adc
push
inc
and
fs
mov
call
add
or
sbb
addr16
ret
aaa
loop
xchg
push
popf
cmp
enter
xchg
push
sub
push
rcll
enter
rcrb
add
pop
outsb
aaa
push
stos
add
add
mov
mov
lea
shlb
sbb
mov
mulb
int
lcall
movsb
cltd
ljmp
adc
mov
and
adc
int3
mov
lret
test
jle
xchg
mov
sbb
push
xchg
scas
xlat
mov
push
lds
or
and
sub
mov
xor
sub
lods
add
jg
testb
fimuls
lea
pop
scas
add
mov
gs
lcall
mov
pop
lods
fidivs
out
pop
mov
stos
imul
jno
inc
dec
cmp
daa
clc
pop
daa
cmp
insb
popa
mov
je
cld
lods
adc
cmovl
push
outsl
sbb
dec
movsb
jbe
decb
and
and
rorb
sbb
shrd
xor
push
int
std
jmp
dec
js
js
pop
fdivrl
iret
popf
mov
and
pop
outsl
icebp
sti
test
push
dec
or
pop
scas
fistpll
xchg
das
adc
and
mov
repz
adcb
inc
jmp
movsb
mov
xor
popf
mov
pop
mov
add
fiadds
mov
mov
sahf
ret
decl
cmp
dec
mov
filds
dec
lret
jno
cmp
stos
and
adc
ret
dec
inc
cmpsb
and
imul
ja
and
fs
pusha
ror
mov
pop
mov
sbb
jmp
jmp
jg
scas
in
scas
push
iret
scas
xor
inc
call
insb
sub
or
xor
jnp
es
test
lahf
dec
dec
push
inc
dec
jmp
or
in
mov
mov
inc
mov
mov
pop
adc
inc
cmpsb
mov
lds
xchg
fimuls
and
cmpsl
std
ud0
push
cltd
jae
scas
or
adc
divb
dec
movsl
dec
mov
dec
mov
jns
test
dec
out
aam
into
mov
jbe
sbb
mov
jecxz
mov
cmp
lcall
pop
negl
enter
fidivrl
imul
or
decl
arpl
or
mov
mov
fs
jbe
addr16
fwait
iret
mov
dec
pop
add
cwtl
cltd
sbb
jno
outsb
mov
mov
pop
push
or
scas
ret
ljmp
inc
sub
cmpsl
xor
dec
and
add
out
or
jg
loope
or
daa
fs
jmp
stos
sub
xor
mov
push
mov
pop
jl
popa
dec
outsb
push
jo
pop
mov
jnp
and
pop
bound
add
or
pushl
daa
js
dec
jnp
outsb
adc
mov
jg
jns
ja
pop
mov
ret
bound
cmp
or
and
pop
mov
adc
daa
into
iret
test
jmp
adc
xchg
push
push
add
xor
xlat
mov
lock
lock
outsl
and
fisttps
sub
inc
rcl
add
xchg
dec
cmpsl
call
xlat
dec
scas
stc
adc
or
bound
out
mov
adc
call
scas
lds
out
fwait
arpl
fdivrl
mov
xchg
bound
call
test
repz
andl
or
jle
enter
mov
std
pop
adc
mov
cmpsl
pop
push
cmp
push
dec
jp
mov
pop
icebp
cmp
call
scas
fiaddl
sub
rolb
mov
insb
imulb
mov
aam
daa
data16
sbb
cmp
push
adcb
stos
mov
in
sarl
dec
es
jp,pn
mov
mov
xor
inc
cmp
in
popf
mov
icebp
lods
pushf
test
lret
ret
push
and
das
add
xchg
pusha
xchg
stos
jbe
cmp
movsb
aaa
jne
add
push
jne
jo
aad
in
or
cmp
rdmsr
data16
icebp
aad
int3
xlat
mov
lods
pop
inc
xor
call
adc
push
push
dec
cs
das
shlb
mov
mov
lods
ficomps
push
pop
mov
and
and
mov
add
and
dec
and
mov
add
mov
sub
mov
mov
enter
jo
ljmp
add
xor
sarl
inc
es
push
xchg
inc
lcall
cld
pop
jns
lret
sahf
ds
mov
mov
popf
push
inc
loop
mov
inc
mov
jg
decl
inc
cmc
jle
arpl
inc
xchg
movl
sbbb
dec
mov
aam
mov
pusha
lds
dec
testl
divb
jns
cmp
std
add
xchg
out
dec
xchg
cs
sbb
cmp
inc
std
jg
jbe
loope
xor
add
pop
adc
push
shlb
xor
in
into
add
outsb
daa
mov
insl
movsl
pop
out
adc
das
jp
mov
jmp
and
in
mov
mov
ljmp
xchg
mov
dec
neg
pop
daa
imul
lcall
adc
add
pop
jo
cs
inc
xchg
cs
xchg
jmp
insl
or
ljmp
negb
movsb
fsubs
and
out
out
lods
and
cmp
sbb
fdivrl
test
xchg
push
xor
clc
mov
scas
and
pop
ret
pop
incb
xchg
mov
lea
inc
pop
inc
push
std
lahf
and
xchg
pop
mov
gs
outsl
fwait
add
sarl
lcall
mov
sbb
jno
in
sub
mov
push
adc
mov
or
mov
cmp
mov
nop
pop
cli
xor
fidivs
scas
jbe
les
push
jno
push
push
inc
adc
mov
mov
ror
mov
xchg
mov
aaa
adc
cwtl
dec
mov
ret
fs
add
push
idiv
pushl
cmp
xor
adc
mov
popa
lahf
xor
popa
cwtl
ja
pop
mov
mov
cmp
pushf
and
les
xchg
rcrb
dec
fstps
mov
pusha
mov
clc
mov
fs
add
les
mov
ja
mov
das
fdivrs
popf
loopne
dec
ficomps
or
cmp
jns
rol
inc
pop
jns
pop
jle
outsb
rcrl
dec
push
mov
push
stc
xor
dec
ljmp
jnp
dec
ljmp
cli
adc
jns,pn
cwtl
jge
pop
cmpsl
rcrl
xchg
fistps
cmp
add
pop
scas
fidivrl
jg
rep
cmp
mov
pop
test
cmp
insb
jmp
js
movntps
pop
aad
lea
push
mov
adc
hlt
incl
call
pop
mov
jmp
std
jg
insl
pop
imulb
xchg
roll
mov
ret
adcl
or
adc
sahf
mov
cs
jl
out
cmp
mov
or
adc
jmp
rorb
xchg
push
jo
lds
icebp
inc
cmpb
jp
lcall
jecxz
and
mov
dec
inc
rsqrtps
popl
loopne
add
jo
outsl
push
cmpsl
or
dec
mov
shll
xchg
movsl
sbb
incl
ss
xchg
jg
sbb
cli
push
lods
ds
rorl
adc
pop
js
jg
jp
jno
ret
push
inc
push
je
loope
cmp
loope
mov
and
lods
stos
ficoml
push
je
insl
loop
and
add
adc
cmp
stc
je
dec
jg
mov
lods
out
pop
fisubrs
and
clc
mov
fldenv
out
xchg
cmp
push
cmp
stos
mov
push
sub
sbb
adc
mov
lods
push
pop
mov
add
and
icebp
sbb
push
mov
push
pushf
shll
cli
mov
push
or
fidivs
inc
addb
out
push
push
daa
into
or
scas
popa
cmc
add
mov
imul
mov
and
lea
out
push
ret
outsb
push
xor
inc
fildl
loopne
xor
cmpsb
cmp
push
sti
sahf
ljmp
fisttpll
mov
mulb
data16
push
pop
decl
jle
jmp
int3
jb
ss
je
pop
adc
push
push
pop
data16
ljmp
stos
xor
outsl
stc
popa
or
add
out
jne
hlt
xchg
and
mov
jno
pop
mov
lcall
imul
xchg
cmovo
inc
xor
leave
lods
es
fcomip
dec
pop
mov
imul
out
pop
and
jmp
xor
nop
or
movsb
inc
out
push
mov
jae
lock
inc
pop
lods
xchg
sub
pop
jmp
out
xor
dec
and
cmpsl
xor
dec
movb
pop
mov
xor
incl
icebp
dec
sbb
pushf
clc
fs
cmp
movsb
pusha
add
das
lcall
lds
or
mov
inc
inc
xchg
dec
mov
mov
stc
cmpsb
cmp
and
mov
adc
mov
test
push
pop
enter
fwait
pop
mov
and
cmp
jno
sub
scas
movsb
push
mov
mov
imul
add
pushl
es
adc
xor
movsl
daa
or
push
incl
dec
mov
or
outsb
fcomps
movsb
and
out
cmp
fs
or
outsb
xchg
push
fnstsw
mov
and
sbb
dec
cli
jg
ret
mov
mov
ret
mov
xor
insb
push
ret
push
sbb
mov
dec
or
hlt
dec
jbe
ljmp
push
test
hlt
movsb
xor
ror
sbb
icebp
outsl
add
dec
pop
mov
fnsave
pop
jge
dec
lds
mov
pop
mov
mov
in
adc
test
or
out
leave
mov
sbb
sbb
xchg
xchg
mov
jle
pop
inc
and
cld
pop
cltd
clc
or
jl
out
adc
adc
push
add
lret
cmp
push
incl
push
stc
pop
sub
add
data16
xchg
popf
fisubrs
std
inc
or
jg
das
in
jmp
fists
es
mov
iret
mov
lock
mov
loop
or
scas
jnp
jnp
fisttps
cmp
or
in
pusha
push
jns
push
out
dec
pop
dec
int
mov
clc
lea
ljmp
iret
nop
inc
xchg
decl
or
add
jp
mov
push
jnp
dec
xor
and
jge
mov
jge
xchg
dec
cli
cmpsb
daa
gs
and
or
call
mov
hlt
aad
stos
mov
or
and
filds
jo
add
sub
mov
add
mov
incb
scas
pop
mov
mov
dec
loope
in
or
das
push
icebp
nop
push
pop
mov
sti
mov
mov
sub
scas
pusha
shll
xchg
jp
add
pop
cs
lcall
mov
mov
mov
dec
test
pop
shrl
add
test
lock
dec
shll
push
out
hlt
adc
sub
ljmp
mov
cmp
cmp
subb
push
stos
loop
lds
mov
or
add
rorb
push
cmp
lcall
pop
cmpsb
jl
jg
bound
pop
ror
filds
add
adc
in
outsb
inc
cmpsb
inc
cmpsl
cmp
lcall
les
mov
jg
jmp
cmpsl
sub
data16
stos
adc
jp
add
lcall
incl
into
mov
pop
scas
ret
dec
jbe
dec
mov
test
jne
loop
xor
mov
aad
scas
or
cmpsb
decl
push
outsl
or
inc
loopne
xchg
dec
pop
jne
push
cwtl
ds
sti
xchg
out
jg
mov
and
and
cmp
jecxz
adc
cmp
add
sub
inc
rorl
push
push
and
in
std
pop
dec
inc
test
idiv
mov
jb
je
into
add
lds
jo
xchg
jne
xorl
jl
xor
decl
xchg
out
inc
dec
cwtl
dec
mov
xorl
adc
push
add
cmpl
or
push
testb
data16
test
add
js
push
loope
mov
jmp
int
es
push
mov
sub
std
daa
lcall
pushl
mov
xor
jp
push
stos
cli
dec
les
pop
int
push
xor
dec
push
inc
cli
and
cltd
test
dec
loop
mov
pop
nop
add
and
push
lods
push
jae
cwtl
cmp
dec
mov
nop
mov
push
jbe
jmp
into
sti
outsb
out
mov
fwait
or
loop
je
mov
mov
mov
shl
mov
sub
sbbb
popf
push
aam
adc
ficomps
pop
rorl
pop
sub
arpl
cwtl
xor
sarb
je
push
leave
cmp
xchg
dec
rclb
imul
dec
out
cmc
mov
pop
mov
and
subb
sub
add
xor
ret
pop
mov
lcall
push
sbb
and
lcall
mov
sbb
daa
mov
mov
stos
mov
cmp
xor
test
outsb
add
mov
js
xor
jb
dec
mov
adc
ljmp
add
lds
cmpsl
das
mov
scas
add
dec
push
imul
mov
pop
stos
das
sbb
dec
jecxz
xchg
movsl
jne
mov
push
inc
pushl
and
fdivp
add
insb
call
lds
in
decl
fadds
mov
mov
test
jo
mov
ja
pushl
mov
sbb
pop
pop
mov
pop
mov
es
into
jecxz
popf
inc
decl
mov
cld
sbb
hlt
addl
fwait
sbbb
in
hlt
lcall
sbb
pop
xor
and
and
inc
push
iret
or
dec
xor
dec
adc
cmp
sub
test
hlt
pop
or
mov
fsubs
adc
push
pmaddwd
scas
jb
out
inc
pop
inc
and
push
fisubs
nop
in
mov
fbld
push
mov
fcoms
xchg
xchg
adc
jbe
cmpsb
add
call
addb
pop
adc
cld
jg
scas
inc
ljmp
fsts
sbb
and
sbbl
dec
dec
in
cmpsl
addr16
shr
pop
outsb
fstl
adc
arpl
pop
xor
push
fdivs
dec
dec
idivl
sti
fwait
sub
inc
aas
out
push
dec
aaa
hlt
dec
fcoml
jg
lds
pop
daa
imul
push
cld
inc
es
std
push
into
pop
daa
js
out
hlt
fs
popa
call
push
ljmp
pop
and
inc
sti
std
pop
adc
daa
dec
out
fldl
push
rol
jbe
jg
mov
dec
dec
mov
loopne
div
cmc
insl
add
inc
add
dec
jne
mov
add
jl
aam
inc
not
out
sub
call
push
push
mov
scas
push
push
ljmp
es
ror
or
decl
adc
daa
gs
pop
pusha
mov
jae
inc
lahf
pop
add
decb
pop
adc
sahf
aas
cmp
inc
cmpsb
xchg
inc
jle
call
mov
jp
into
push
mov
inc
aaa
jb
cli
ljmp
ljmp
add
or
fcoml
ljmp
mov
into
mov
dec
pop
dec
push
mov
jno
ret
and
fwait
push
mov
outsb
sbb
push
insb
adc
lea
popf
mov
mov
mov
in
adc
sbb
loop
mov
es
shr
ljmp
pop
dec
xchg
sar
jmp
jp
pop
dec
stc
pop
or
call
ljmp
gs
shll
or
push
sbb
mov
mov
mov
sub
cmp
out
int3
cmpsl
stos
mov
jge
xchg
add
mov
fbld
popa
clc
and
push
mov
loop
data16
adc
ds
ljmp
sbb
lock
mov
jg
mov
std
dec
dec
cmpb
outsb
cltd
add
mov
mov
pop
dec
inc
pusha
sti
call
int
daa
rorl
nop
aaa
push
fdivrl
dec
std
push
inc
cmp
punpckhdq
mov
je
and
inc
inc
hlt
mov
jbe
xor
call
subb
dec
and
xor
jg
xor
test
iretw
xor
dec
mov
clc
adc
jmp
test
sub
das
and
dec
or
jbe
pushl
mov
mov
popl
sbb
gs
test
sub
mov
outsl
insb
inc
ret
ret
push
mov
lret
jmp
ret
mov
mov
arpl
or
push
fistl
cltd
loopne
fidivs
nop
ljmp
fwait
push
rolb
mov
push
jg
mov
out
fwait
ret
into
cwtl
pop
das
dec
out
sbb
stos
mov
popf
jle
mov
cmp
maxps
out
test
movsb
push
jmp
test
fstl
add
cmp
pop
mov
sub
pushl
out
movsl
sub
clc
lcall
lcall
faddp
popf
shl
mov
push
iret
movaps
outsb
in
das
fnstsw
jne
mov
add
inc
into
xchg
sbb
mov
inc
add
cmp
xor
imul
aaa
jbe
gs
cmpl
das
mov
or
xchg
leave
inc
and
dec
add
sub
xchg
and
sarl
fdivs
or
xor
add
movsl
cmp
lea
cli
fildll
mov
sarl
das
jle
pop
sar
add
sar
xlat
mov
sbb
push
xchg
jb
sub
outsl
out
jno
pusha
xor
popf
mov
popf
outsb
call
ss
fs
mov
je
mov
lods
lret
das
add
cmpsl
sahf
cmp
xlat
ss
push
mov
jle
inc
push
pushf
pop
xchg
cmpb
into
inc
incl
jb
jge
dec
or
mov
imul
adc
or
inc
int3
incb
inc
jo
push
jg
in
inc
out
pusha
sbb
mov
cmpsb
dec
and
fbld
dec
dec
mov
jg
mov
stos
fwait
stc
push
mov
andl
inc
or
xchg
xor
lret
dec
xchg
lock
or
xchg
jmp
jo
repnz
mov
mov
ss
mov
std
mov
mov
jne
cwtl
inc
repnz
or
dec
cmpsb
fwait
lods
sbb
xchg
jg
jge
xchg
ss
dec
out
aad
add
test
inc
pop
into
inc
cmpsl
xor
aaa
dec
lock
xor
into
mov
out
cmp
arpl
xchg
xor
std
addr16
stos
inc
lret
xchg
push
imul
mov
fdivs
jns
std
or
ljmp
rclb
dec
and
test
out
cmpsl
aad
fcomip
cld
mov
test
inc
in
push
dec
rolb
arpl
lods
mov
jg
ljmp
sub
push
add
je
dec
stos
aas
lahf
xor
pop
pop
pop
popa
loopne
and
sub
dec
fmuls
lcall
xchg
loop
ljmp
cwtl
ud0
jg
ficomps
jbe
xor
ret
jns
je
push
fsts
add
jp
mov
add
xchg
mov
xchg
shl
decl
js
sbb
xchg
dec
push
jle
ja
jg
push
jo
cmpsl
outsb
ret
xor
ss
movsb
mov
ss
pop
rcrl
push
push
mov
scas
clc
lcall
js
test
sbb
cli
add
ja
pop
sub
sub
pop
or
out
movsl
ss
cmp
ds
mov
mov
sub
popf
xchg
popf
cltd
sar
fistpll
aaa
mov
stos
ds
xchg
cltd
mov
scas
jp
into
xor
fisubs
adc
add
and
fbld
idivb
imul
inc
cmp
lret
scas
insb
shrl
inc
call
lret
dec
cvttps2pi
sbbl
add
xchg
nop
ret
mov
std
cmpsb
adc
jmp
adc
jae
movsl
das
dec
leave
mov
ljmp
jmp
jp
fsts
or
mov
decl
inc
out
mov
inc
inc
jns
stos
lcall
inc
movsb
push
stc
inc
out
mov
and
xchg
jbe
decl
enter
mov
push
xchg
pusha
adc
stos
out
pop
mov
nop
popa
or
outsl
call
sti
or
or
mov
out
and
lcall
cmp
pusha
pop
bound
cmpsl
mov
mov
and
lea
jmp
call
call
movsl
scas
mov
or
push
aam
or
jmp
sub
xchg
cmc
sbb
lret
arpl
or
movsl
or
subb
mov
xchg
fidivl
out
add
lods
adc
xchg
ret
data16
inc
movsl
hlt
das
mov
xlat
push
sbb
jle
inc
in
mov
cmpsb
test
mov
jbe
aam
negb
push
cmp
jo
or
push
mov
cli
addr16
enter
sysenter
jp
mov
inc
mov
int3
outsl
xchg
pushl
xchg
jo
jnp
mov
fmull
dec
pop
fs
dec
scas
adc
cmpsb
push
lock
push
mov
pop
adc
xchg
fs
cmpsl
push
cmpsb
and
popa
stos
and
lods
or
push
mov
fnstsw
mov
or
push
out
mov
scas
lcall
loopne
and
stos
mov
mov
xchg
mov
push
sbb
mov
loopne
faddl
fidivs
add
pop
push
add
scas
js
dec
lods
pop
pop
jae
cmp
dec
inc
xor
ds
arpl
add
inc
adc
sahf
cmpsb
out
mov
fstl
decb
movsb
sbb
sbb
pusha
roll
test
dec
xchg
scas
pop
sub
arpl
xor
jbe
and
sbbb
lods
stos
es
xlat
lcall
pop
pop
jae
mov
xchg
jo
insb
xor
nop
and
xchg
lock
add
jmp
test
std
out
faddp
in
mov
movsl
into
fcmovne
test
not
stos
push
and
jg
mov
sbb
mov
leave
lds
js
iret
aad
push
adc
testb
cld
sti
incl
lcall
lock
stos
es
dec
into
or
ret
aam
sbb
push
out
je
cld
xchg
stos
mov
mov
mov
in
std
mov
sahf
loopne
mov
cmp
lea
testb
mov
mov
xlat
push
inc
xchg
mov
fwait
scas
mov
inc
mov
outsl
insb
dec
psubb
test
outsb
ss
push
push
jne
xor
popa
mov
pop
xchg
and
scas
mov
lahf
filds
adc
and
pushl
pop
ret
sbb
cs
sub
push
inc
xchg
and
outsb
fidivrs
lcall
sahf
dec
add
clc
and
movsb
jle
mov
ljmp
pushl
call
in
cmp
jp
mov
adc
add
add
lret
inc
cld
mov
pop
and
or
add
or
cmp
xor
insb
call
ja
sub
xor
cmp
sub
fwait
xchg
pop
int3
or
dec
sahf
add
es
dec
outsl
call
inc
js
into
jg
lock
roll
inc
cmp
sbb
and
fildll
pop
mov
ret
cmp
jecxz
jg
rorb
jnp
mov
adc
sbb
inc
out
cmp
out
incl
add
pop
fisubrl
dec
jecxz
gs
xor
push
int
xchg
and
pop
xor
ljmp
into
push
xor
sub
outsb
out
es
daa
jl
and
and
sub
add
decl
mov
cwtl
adc
stos
cmpsb
xchg
stos
gs
push
jmp
fs
dec
xchg
inc
testb
sahf
lock
movl
push
and
sbb
stos
aas
aad
pop
mov
mov
ficompl
pop
or
and
cs
xchg
fldl
mov
fmuls
cltd
cmp
add
repz
and
in
adc
mov
adc
jmp
xchg
daa
push
xor
and
mov
xchg
cmpsb
es
ljmp
jnp
out
test
push
mov
sub
sub
ret
sub
mov
or
pop
mov
add
jg
adc
das
jae
adc
xor
adc
cmp
js
das
inc
rorl
leave
test
xchg
pushl
jle
push
jo
push
inc
jg
adc
cmp
popa
jg
adc
xor
sub
mov
push
inc
cmpsl
adc
rcll
or
clc
popf
lock
in
pop
repz
jle
addl
mov
sti
aaa
adc
xchg
aas
xchg
mov
add
push
out
aam
pop
push
addr16
cmp
outsb
push
popl
dec
push
ficomps
push
loopne
jmp
cmp
add
xchg
lcall
push
jno
je
sar
jg
addr16
add
push
pop
inc
jmp
hlt
mov
push
mov
enter
fnsave
mov
imul
mov
inc
jbe
and
add
lahf
jg
dec
cwtl
filds
jmp
push
xchg
data16
movsb
cmp
xor
enter
or
mov
dec
out
push
mov
lods
pop
mov
test
xchg
adc
xchg
and
adc
pop
jmp
or
pushf
dec
cmp
xor
pop
inc
jno
and
sub
hlt
sub
out
into
stos
mov
xchg
inc
inc
loop
mov
nop
ret
sarl
into
and
cs
subb
mov
jg
pop
sub
je
inc
and
inc
xor
pop
push
das
dec
ss
sub
jg
mov
js
lock
sub
cmp
dec
cmp
sub
jp
sti
incl
push
cmp
pop
aaa
adc
adc
imul
and
cld
sarb
pop
pusha
or
sub
rcl
repz
add
loopne
cld
in
sbb
push
mov
mov
adc
and
sub
nop
sar
test
ljmp
movsl
fcom
fwait
jp
bound
xchg
push
xchg
cli
mov
cwtl
and
out
push
jbe
cltd
repz
sbb
or
xor
and
test
jg
inc
add
in
push
cwtl
jp
test
lea
jnp
int
xchg
add
xor
out
push
inc
cld
sbb
mov
push
fwait
sub
mov
test
cmp
push
les
xchg
shrb
loope
sahf
cs
adc
pusha
sbb
ret
cmp
das
mov
dec
pop
adc
adcb
out
add
or
mov
or
inc
mov
rcl
cmp
inc
xchg
and
pusha
jae
insl
or
mov
jno
decl
mov
test
mov
jle
arpl
jbe
jle
and
pop
cmc
lds
adc
pop
pop
ret
lds
mov
xor
pop
sbb
clc
mov
mov
inc
cmc
add
or
xchg
mov
xchg
xchg
push
xchg
pop
pop
jg
addl
imul
sub
dec
mov
jne
add
pop
inc
inc
dec
inc
adc
dec
inc
loope
mov
pop
rcrb
or
fdivp
call
jle
or
and
pop
inc
mov
cmc
mov
jle
call
inc
pop
cwtl
push
insb
repz
mov
pop
sbb
push
mov
mov
mov
and
aas
sbbl
and
add
sub
daa
icebp
inc
pushl
int
fisubs
sbb
fcomp
inc
add
call
mov
fisubrl
mov
rolb
xor
shlb
and
mov
sbb
iret
ds
and
add
andl
and
js
data16
outsb
repz
sbb
mov
lods
pusha
cwtl
clc
dec
xor
cmpsb
adc
ja
mov
aas
into
adc
cmp
scas
fisttpl
ja
fwait
dec
incl
dec
push
dec
jne
inc
adc
movsl
out
xor
ss
jg
clc
add
fdivs
sub
adc
nop
adc
daa
xor
push
shll
mov
mov
and
mov
jg
test
idivb
sbb
jecxz
xchg
test
imul
cltd
sbb
fstpt
mov
mov
mov
jp
sbb
test
incl
stos
lock
cmp
shlb
ret
or
test
jns
aaa
dec
clc
rcll
loopne
xchg
cmp
mov
xchg
or
stos
xchg
sbb
std
cltd
xchg
imul
scas
paddd
dec
dec
outsb
nop
sti
mov
mov
push
lcall
and
push
push
cmp
fs
imul
xchg
std
movsb
dec
xlat
mov
and
mov
mov
jbe
xchg
mov
jg
mov
les
cmc
sub
mov
mov
decl
data16
xchg
dec
adc
mov
pop
xchg
push
popaw
jo
ud0
clc
outsb
mov
inc
enter
scas
mov
or
test
into
pop
mov
fs
inc
aaa
dec
filds
loope
into
bound
cmp
clc
stos
mov
cld
es
adc
mov
popl
scas
mov
loop
lock
sub
jmp
xchg
mov
bound
mov
pop
xchg
add
pop
pop
hlt
incl
adc
flds
test
mov
into
arpl
pop
sar
jp,pn
mov
cs
push
jbe
fstp
jne
incl
dec
xchg
out
sarb
push
call
push
jnp
pushf
mov
inc
bound
out
xchg
pop
xchg
xchg
pushf
mov
pop
and
cmp
xchg
inc
popfw
cmp
jg
lods
out
daa
fldcw
ss
fstps
outsb
out
test
mov
rorl
mov
xchg
test
out
je
decl
xchg
popf
in
jle
xchg
test
push
mov
mov
or
cmpsl
xchg
call
scas
mov
cmpsb
icebp
iret
test
pop
sysexit
pop
adc
lahf
rclb
subb
inc
pushf
es
xchg
clc
test
jb
inc
add
jb
pop
sbb
xchg
cwtl
test
inc
cltd
adc
and
inc
sub
pusha
icebp
ficompl
ss
or
mov
ljmp
cmp
js
dec
add
rolb
test
lods
mov
clc
fisubrs
xchg
clc
dec
add
push
mov
daa
add
loop
add
push
icebp
aaa
lods
ljmp
mov
push
mov
cmpsb
xchg
inc
cld
add
cmc
push
nop
dec
ret
push
out
call
stc
int3
pop
test
imul
int3
mulb
fnsave
outsl
push
std
lods
test
mov
rorl
inc
mov
pop
jg
inc
mov
inc
cs
xchg
inc
ljmp
jne
fs
les
lret
sbb
in
insl
dec
add
jmp
adc
std
mov
mov
decl
or
inc
adcb
xchg
jle
xor
jns
fisttpll
sbb
in
ljmp
loope
or
sub
dec
mov
ds
popf
or
aas
cld
cs
xor
cmp
sub
daa
pushl
mov
xchg
out
vandps
cmp
mov
adc
push
lret
mov
mov
pop
pop
mov
fisubrl
loope
push
mov
outsl
shll
mov
push
push
ficomps
jg
dec
mov
out
or
in
lcallw
shll
scas
add
xor
fsubp
push
test
mov
xchg
outsl
lds
mov
hlt
jb
pushf
test
leave
jnp
in
bound
into
test
inc
fadd
pop
adcl
or
int3
imul
test
mov
mov
loope
mov
mov
jle
dec
out
lcall
jmp
lcall
iret
je
mov
lcall
push
inc
push
pop
arpl
pop
push
cltd
sub
rclb
stos
aas
cld
mov
out
int3
arpl
add
dec
add
mov
add
daa
pop
or
xor
xchg
and
shlb
push
sahf
call
or
stos
and
dec
ror
inc
mov
pop
and
mov
add
das
cmp
pop
std
adc
popa
iret
ja
inc
leave
les
push
nop
into
repz
scas
jno
jecxz
scas
mov
ss
dec
dec
ljmp
cmpsl
rclb
mov
std
jnp
xor
dec
jns
bound
push
push
mov
data16
loop
loope
sub
lret
mov
mov
jg
dec
or
jp
xchg
or
inc
clc
arpl
rorl
call
jnp
push
xlat
inc
jae
inc
mov
stos
out
movl
incb
push
xor
shrl
into
jae
push
sbb
xchg
pop
sub
mov
xchg
mov
pop
or
jmp
pushl
stos
int
nop
pushf
test
cld
sbb
push
or
sub
jmp
pop
lea
std
ret
ds
pop
out
xor
jbe
push
mov
xchg
jl
add
ljmp
ja
inc
mov
mov
ljmp
aas
mov
jg
jbe
push
push
and
inc
add
cld
repz
mov
adc
and
dec
aam
xchg
gs
shll
inc
cli
stc
loopne
mov
out
jecxz
sub
aas
into
inc
jl
pop
orl
das
pop
add
out
hlt
xor
jecxz
ljmp
shlb
scas
jb
les
cs
mov
rclb
mov
outsl
or
arpl
lock
adc
lret
cmc
xlat
dec
repnz
jno
sar
mov
dec
add
sar
jns
mov
ds
repnz
cs
add
les
sbb
aam
mov
jle
gs
push
mov
cld
cmc
test
icebp
and
mov
stos
pop
mov
aas
scas
sti
shlb
xchg
cmp
inc
adc
into
pop
jle
add
insw
insl
sbb
cld
jg
hlt
lds
dec
faddp
daa
mov
mov
and
inc
cmpsb
dec
xor
scas
cmp
pop
cmp
movsb
cmpsb
pushf
inc
hlt
pop
sub
popf
jns
pop
loopne
inc
and
pcmpgtd
ljmp
mov
mov
xchg
ja
stc
out
pop
hlt
pop
sbbb
dec
scas
add
dec
cltd
and
xor
jnp
ljmp
fsubr
mov
aaa
ffree
or
cltd
xchg
jg
jmp
pop
cli
mov
aad
mov
cs
jmp
xchg
nop
dec
jp
lods
dec
scas
adc
lret
mov
xchg
out
int
mov
jl
iret
in
push
mov
xchg
jae
jg
push
adc
mov
jge
repz
ficomps
jb
lcall
mov
inc
aas
cli
loope
sbb
push
rclb
in
push
pop
add
push
dec
and
jg
es
mov
inc
nop
or
add
fdivrs
sbb
ret
lret
pop
xchg
cld
and
push
ret
aam
out
jge
pop
ja
loop
add
outsb
enter
mov
roll
mov
dec
adc
shrb
into
add
mov
dec
jg
push
jg
out
cmp
jnp
shrl
mov
sub
jl
lock
adc
inc
add
jge
stc
jnp
rorb
popf
push
icebp
decl
push
mov
dec
jno
xorl
pop
cmpsl
test
inc
loope
mov
ficoml
mov
call
jbe
ds
jo
adc
dec
lcall
jo
lods
stos
ret
rcrb
gs
mov
ljmp
push
pop
stos
bound
adc
xor
and
xchg
jmp
mov
out
arpl
xlat
das
es
push
cld
imulb
pushf
outsb
jmp
call
sub
jne
xor
pop
jmp
jo
cltd
push
adc
xor
ret
mov
add
incb
inc
push
jnp
je
cmp
adc
mov
lods
out
out
mov
mov
mov
fst
pop
dec
xchg
lods
adc
pop
test
mov
test
mov
hlt
pop
les
arpl
pop
or
ret
jne
push
aaa
inc
sbb
nop
outsl
adc
into
out
sub
in
cmp
arpl
add
cli
dec
mov
popa
outsl
xchg
cmpsb
shll
pop
sbb
fcmovnb
jg
jne
daa
pop
mov
jb
sub
test
xchg
push
lods
cltd
sub
dec
pop
pop
loope
push
out
lea
push
mov
jb
push
rcrb
clc
or
into
int
pop
jbe
dec
decl
rolb
mov
les
sti
and
ljmp
adcl
push
jo
xchg
addr16
xor
into
xchg
adc
mov
xchg
ljmp
and
add
xor
leave
int3
cld
jg
and
inc
push
xchg
and
enter
xor
aam
int3
popf
and
or
lds
or
idivl
adc
jno
pop
xor
nop
or
imul
pop
bound
dec
aaa
push
sbb
cmp
test
pushl
dec
rcll
push
and
push
in
inc
in
mov
mov
test
decl
lods
xor
mov
push
popa
cmp
xchg
mov
adc
xchg
push
mov
mov
push
dec
cld
jge
mov
push
dec
idivb
jg
add
xor
mov
imul
imul
cmovae
fs
int3
repz
das
cmpsb
repz
es
adc
fnstsw
sahf
cmp
mov
jl
incl
rorl
sub
out
pop
push
lock
dec
mov
xor
adc
mov
call
push
inc
divb
jbe
mov
jg
mov
inc
inc
leave
testb
xchg
aas
repnz
adc
in
js
incl
sti
add
mov
mov
jle
jo
adc
cli
ljmp
mov
pop
into
mov
sub
cmp
cld
test
xchg
inc
sub
xor
into
or
jmp
dec
in
cmpsb
ficomps
notl
pop
insb
mov
imul
adc
mov
xchg
dec
adc
jbe
xorl
shrl
sbb
pop
cs
mov
es
js
mov
call
xchg
mov
aas
and
aam
xchg
call
push
shll
fs
push
adc
xlat
cmpsl
out
test
jmp
pop
push
lret
jns
add
mov
and
inc
out
jl
mov
lea
leave
pop
xchg
sahf
mov
push
mov
sub
repnz
cmp
es
stc
jbe
mov
out
cmpsl
lahf
mov
jle
es
lds
mov
dec
inc
repz
and
or
dec
push
xchg
and
mov
inc
je
push
sbb
push
push
call
lods
push
sbb
cwtl
aam
xchg
dec
pop
cmpsb
stos
mov
fwait
fimuls
sub
fwait
lret
stos
adc
inc
lcall
lea
out
xor
sbb
testb
push
nop
or
dec
cli
pop
adc
cmp
mov
pushf
sub
mov
xchg
fidivrl
mov
pop
call
insb
or
mov
cmp
iret
or
call
push
lcall
add
cmp
cmp
jbe
scas
add
mov
and
pushl
pop
outsb
pop
pop
ja
ss
out
push
movl
inc
mov
mov
fbld
divb
pop
negb
inc
lret
cli
or
and
arpl
es
stos
add
xchg
jmp
repz
push
test
pop
mov
inc
cmp
mov
cli
mov
lret
mov
dec
fmull
xchg
mov
cld
mov
insb
loope
dec
shrb
mov
out
cli
inc
cs
fistpll
push
jo
push
cmc
jp
movsb
aad
ss
out
add
jg
shl
aaa
pop
incl
jbe
pop
mov
inc
inc
rolb
push
xchg
packssdw
jns
mov
cltd
xor
enter
adcl
sahf
or
mov
or
movb
inc
daa
jae
call
hlt
pushl
std
xchg
pop
mov
pushf
lea
xchg
mov
mov
lahf
xorb
in
lcall
jge
inc
je
push
jg
and
adc
dec
sbb
push
sbb
mov
inc
sbb
cmp
in
lcall
out
fnsave
mov
inc
fisttpl
mov
addr16
push
mov
inc
cli
mov
movsb
add
cmpsb
dec
sar
incl
testb
mov
cmp
inc
push
mov
mov
ret
xchg
xorb
lcall
jmp
and
cmp
scas
ret
push
loope
cmp
js
cmpl
inc
xchg
arpl
mov
clc
pushl
imul
imul
test
inc
les
mov
cmpsb
xor
mov
cmc
dec
jns
jp
or
mov
dec
xchg
lret
xor
sub
sarl
test
xchg
rcrl
lock
data16
out
pop
stos
and
cmp
mov
movsl
das
rorl
movsb
lcall
pop
cmp
in
stc
aad
push
ror
outsb
ss
pop
outsb
int3
into
mov
fucomp
mov
movsb
jg
xchg
xchg
mov
inc
in
xchg
shl
stos
cmp
imul
jle
loop
int3
and
andl
pop
outsb
pusha
std
scas
mov
scas
adc
xor
adc
int3
aam
add
out
notb
pop
mov
fdivp
xchg
movsl
push
inc
jmp
insl
xor
es
xchg
adc
imul
in
lea
sub
cmc
stos
test
je
test
mov
mov
mov
pop
iret
in
or
jno
call
sub
imulb
mov
pushl
daa
pop
incb
movsl
mov
dec
jno
xlat
sub
pop
mov
mov
clc
jne
dec
in
sbb
lods
push
cmp
and
sbb
ja
ret
push
mov
push
loopne
jbe
lret
std
out
in
jmp
dec
fcompl
jne
mov
and
or
fisubs
dec
mov
fdivrs
xchg
dec
repz
push
lret
hlt
andl
xchg
inc
inc
ret
out
aaa
xchg
sbb
scas
jg
enter
psllw
test
mov
popl
xchg
fwait
pop
or
push
movsl
jp
fdivrl
pop
fistps
outsb
xor
out
decb
mov
lcall
mov
arpl
lret
leave
mov
cmp
and
xchg
stos
fcomip
movsb
xchg
stos
lods
add
in
mov
stos
inc
add
mov
insl
cmp
add
insl
sarb
out
loop
aad
insl
sub
mov
mov
mov
jne
inc
push
out
add
scas
xchg
pop
imul
or
scas
iret
testb
aaa
jecxz
xchg
xchg
inc
lods
imul
ljmp
mov
pushf
mov
mov
push
inc
test
mov
enter
mov
pushf
out
mov
add
leave
addb
sub
outsb
pop
testb
pop
mov
filds
filds
mov
pop
sbb
mov
stos
cwtl
xor
scas
dec
mov
inc
push
decb
mov
stos
or
add
adc
in
test
aaa
scas
fbld
lds
sub
xor
mov
popa
cld
mov
jbe
xor
mov
test
pop
arpl
sub
scas
clc
lock
mov
inc
fsubrp
lods
cltd
mov
xchg
mov
not
xchg
out
mov
scas
jg
and
push
lods
push
imul
dec
cli
cs
lods
xor
cmp
and
cltd
xchg
push
data16
filds
sahf
inc
pop
inc
push
addr16
ret
sub
add
xor
in
test
cs
enter
pop
inc
push
mov
daa
inc
rcrl
scas
xor
adc
scas
cmpsb
dec
or
push
jo
pop
add
filds
int3
inc
testb
decb
ja
lret
mov
leave
jmp
into
rorb
clc
push
rcl
mov
out
adc
cmpsl
sub
mov
adc
dec
cmp
jp
jecxz
push
popf
mov
lcall
jp
fcomp
mov
mov
cs
or
ret
dec
cmc
icebp
mov
mov
mov
mov
idivb
cmpsb
mulb
mov
mov
data16
lcall
sub
xchg
dec
inc
hlt
les
popf
push
sub
sbb
or
or
push
cmp
cs
into
lret
inc
insw
aam
push
stos
clc
out
mov
jg
rcl
subl
ss
mov
lock
call
fdivrl
xchg
je
mov
cwtl
into
inc
in
lret
pop
inc
mov
jg
dec
out
fldt
out
sahf
mov
jnp
xchg
loopne
or
adc
pop
cmpb
inc
jo
cld
inc
add
mov
movsb
aam
pop
out
scas
cmp
hlt
mov
inc
outsl
fmulp
fstpt
out
imull
loopne
push
out
push
in
test
rolb
shlb
loope
pop
cmp
lods
into
dec
punpcklwd
call
popa
into
cltd
jb
jae
xor
or
cltd
inc
bnd
pop
or
jmp
push
out
mov
pushl
clc
xchg
test
cltd
movsl
mov
hlt
pop
mov
adc
lock
lcall
add
jecxz
mulb
cmpsb
loopne
push
int3
xchg
ds
mov
adc
out
push
sahf
jbe
and
rcrb
mov
cmpsb
xchg
scas
out
lahf
mov
xchg
mov
movsl
xor
mov
or
lret
mov
push
push
in
sbb
mov
pop
testl
lock
ror
mov
aaa
inc
fldt
movsb
mov
dec
loopne
mov
lahf
xchg
mov
into
mov
sub
add
pop
adc
cmpsb
dec
pop
out
push
push
scas
out
inc
loope
push
xlat
dec
or
sahf
add
std
decl
cltd
push
pusha
sti
jne
cmpb
iret
cltd
ds
pop
std
add
je
mov
mov
mov
pop
or
mov
jbe
pop
inc
mov
xchg
inc
out
mov
push
jmp
inc
push
dec
int
loop
mov
mov
pop
std
pop
imul
mov
lods
jns
ret
scas
mov
dec
mov
add
mov
dec
add
sarl
xchg
scas
out
pop
mov
mov
lods
jne
in
dec
out
dec
popf
into
cld
out
mov
pop
mov
nop
mov
testb
xchg
pop
add
sub
xchg
jge
push
loopne
rolb
mov
add
mov
dec
adc
stos
ja
mov
inc
mov
out
hlt
fwait
add
outsl
cmpsb
aas
out
loopne
das
mov
gs
mov
sub
scas
iret
push
adc
and
rol
out
repz
out
fmulp
repz
mov
std
out
shl
jp
xchg
nop
hlt
mov
ljmp
mov
sbb
cltd
mov
add
sub
aas
dec
jl
fidivs
shlb
loop
mov
jbe
inc
cli
rclb
mov
daa
fsub
repnz
add
adc
out
mov
adc
clc
mov
ds
pushl
aad
xor
repz
jbe
push
and
mov
cld
outsl
mov
js
and
lahf
aaa
push
cli
xor
fisubs
andl
scas
repz
out
aam
fnsave
inc
push
inc
sti
mov
into
or
cmp
in
sahf
dec
rcl
inc
movsb
sub
fsub
stos
jecxz
inc
push
xchg
mov
icebp
enter
pop
or
aam
push
cld
hlt
mull
std
aad
dec
sub
lock
push
rolb
loopne
out
mov
dec
sahf
cmpl
gs
movl
adc
fists
sahf
xchg
mov
or
imul
jg
xor
loopne
data16
pop
mov
xchg
cmp
negb
sbb
ud0
clc
cltd
xor
dec
sub
ficoml
sti
test
dec
lock
push
push
mov
cltd
fwait
push
fadd
scas
push
sub
jp
lret
pop
addb
push
mov
lock
push
roll
pop
bound
mov
imul
mov
adc
dec
lock
pop
mov
xsha1
cmpsb
dec
movsb
mov
xchg
mov
inc
mov
fisttps
or
adc
stos
in
adc
jns
mov
call
out
lock
neg
mov
scas
sbb
faddp
pop
add
mov
rorb
mov
mov
inc
add
cld
mov
loope
mov
ret
cmpl
pop
jae
mov
pop
or
mov
xchg
sahf
repnz
inc
loop
fidivs
jge
pop
out
pop
push
aas
inc
add
call
decl
cmpsb
fwait
mov
insl
ficomps
adc
xchg
xchg
ret
cld
aas
mov
dec
cmp
shlb
cmpsl
pop
loope
cmp
repnz
mov
ret
shrb
out
mov
mov
push
clc
jge
std
xchg
idivl
push
fadds
mov
mov
pop
cmpsl
test
pop
ret
out
mov
loopne
movsl
xchg
xlat
sbbl
dec
rcrl
xchg
mov
into
clc
jle
in
xlat
out
mov
and
mov
mov
int
outsb
fmul
std
in
mov
mov
ja
lds
test
icebp
xchg
push
outsb
cmp
push
mov
lcall
imul
nopl
not
mov
mov
mov
scas
hlt
stos
mov
mov
sub
jmp
daa
and
in
mov
inc
into
inc
scas
lret
pop
cld
pop
add
out
pop
sub
push
ljmp
loopne
fistpl
push
dec
jnp
loopne
xor
repz
out
lret
sub
or
ss
mov
cmc
fbld
xchg
mov
jle
test
mov
jo
xchg
in
inc
aas
dec
mov
xchg
push
cmp
arpl
ret
cmpsb
sbb
outsl
lret
xchg
jnp
or
push
mov
ss
stc
add
inc
sub
int3
mov
xchg
adc
sarl
mov
mov
mov
mov
imul
lahf
cli
lcall
in
mov
inc
cwtl
lcall
sbb
dec
out
punpckhdq
mov
mov
jmp
mov
shlb
scas
into
or
mov
xor
cmpsl
addl
xor
ljmp
xor
popa
and
jp
jo
jge
je
pusha
adc
lcall
loop
das
dec
pop
adc
xor
mov
iret
std
out
cmpsl
push
mov
ficoms
jl
mov
enter
dec
pop
inc
imul
jnp
pop
pop
out
jle
jg
lock
ret
cs
xor
cmc
add
cmp
mov
jg
jg
inc
mov
cld
call
clc
je
out
jne
add
push
and
pop
decl
pushf
mov
roll
dec
add
je
push
imul
push
adc
das
pop
mov
push
sar
lcall
sub
mov
push
mov
lds
xchg
lret
iret
adc
fwait
jbe
cmp
sub
xor
dec
test
adc
cmpsb
or
jmp
jns
popa
sti
mov
jl
inc
shlb
hlt
push
out
fidivrl
dec
sti
or
push
inc
decl
mov
icebp
mov
ss
decl
ds
es
sub
insb
inc
clc
jne
into
cltd
movsl
add
dec
mov
add
cli
push
shrb
movsb
icebp
inc
push
fs
push
mov
repnz
into
jnp
out
loop
pop
popa
jg
push
or
lods
data16
mov
clc
xchg
daa
imul
popa
loop
xor
out
aaa
mov
xor
sub
add
or
jg
out
cmpsb
lock
ja
out
inc
cli
addr16
movsl
push
lcall
lock
dec
sahf
lock
adc
sbb
iret
out
push
sbb
mov
pop
add
dec
jp
incl
jmp
jb
and
out
es
out
fmull
inc
pcmpgtb
xor
and
arpl
or
mov
inc
icebp
lea
mov
pop
pusha
ret
push
mov
dec
loopne
dec
cmc
ljmp
push
ss
call
and
lret
mov
int
outsb
push
cmp
or
or
loop
mov
cmpsl
lock
out
inc
jb
push
cmp
call
or
enter
data16
add
cmp
out
lcall
lcall
mov
sub
out
xor
mov
dec
in
cmp
test
es
jmp
or
push
jge
sbbl
mov
stos
dec
jp
or
dec
pop
add
call
sub
out
cmp
arpl
cmpb
xchg
and
mov
call
out
loopne
pop
movsb
add
dec
sti
sub
pop
pop
out
pop
add
pushf
cmp
add
jecxz
arpl
add
add
ljmp
aaa
inc
out
or
into
adc
and
sbb
shrl
decl
mov
xor
negb
jne
fisubrs
lods
out
adc
inc
sbb
movsl
dec
and
out
addr16
aaa
inc
dec
xor
mov
or
dec
loop
addr16
sbb
jmp
ficomps
inc
mov
adcb
push
pop
test
and
fs
test
sbb
xor
mov
mov
cs
add
jg
and
and
data16
xor
test
hlt
sub
push
mov
leave
and
loopne
jbe
mov
push
mov
jmp
lret
push
sti
and
dec
jle
cmc
jmp
adc
shlb
xor
push
cltd
xor
pushl
cmp
adc
add
sbb
xchg
dec
cmp
add
call
add
shll
xor
mov
or
cmpsl
add
sub
into
sbb
lret
stos
jns
push
aaa
inc
scas
adc
push
lcall
out
mulb
out
or
call
xchg
or
xchg
mov
sbb
push
sub
adc
movsl
cmpsb
aas
test
std
mov
ljmp
pop
and
stc
push
pop
inc
js
cmp
lcall
incl
jle
scas
pop
outsb
adc
lea
push
fisubrl
inc
jmp
jns
dec
jae
ds
ja
mov
jns
fnstcw
and
sub
mov
decl
ja
gs
xor
cmpsw
je
xor
pop
pop
adc
inc
adc
nop
xor
call
mov
jnp
sbb
xchg
add
stos
div
stos
test
mov
lds
jg
mov
dec
repnz
and
lea
sub
fs
pop
or
push
mov
pop
pop
iret
popf
jecxz
mov
ja
scas
jp
loop
mov
cwtl
add
inc
ljmp
scas
inc
pop
negb
mov
dec
add
add
xchg
push
outsl
push
and
push
jmp
cmpsl
sub
xchg
xor
ljmp
cmpsb
mov
dec
nop
dec
push
dec
scas
push
jecxz
xchg
mov
clc
inc
int3
mov
inc
add
out
mov
mov
dec
fs
pop
stos
enter
pop
adc
pushl
push
xchg
mov
scas
fidivrl
imul
sub
sbb
mov
mov
xor
mov
mov
ss
xchg
push
in
add
lcall
into
jno,pn
out
xchg
xadd
pop
sub
daa
mov
mov
cld
sub
push
jmp
xorb
enter
and
into
movsb
loopne
xor
test
scas
jg
cmpsb
clc
adc
repnz
and
mov
cmpsb
push
push
adc
mov
push
inc
jl
and
cld
cmp
adc
jns
cld
int
daa
rcll
inc
cs
dec
sbb
xchg
and
data16
ljmp
cli
jns
nop
ss
ds
jb
fwait
mov
dec
les
popa
dec
int3
cmp
lret
incl
je
dec
mov
bound
fcomps
mov
les
imul
mov
scas
and
outsb
pop
ljmp
cli
mov
and
mov
sti
cwtl
out
out
push
pop
std
lods
repz
xchg
sub
pop
popa
pushl
in
sub
sarl
jg
inc
xchg
cmpsl
mov
cmp
mov
inc
jno
sahf
sti
sub
pushl
jb
aas
insl
jle
popa
jp
push
xor
popa
add
js
notb
addr16
incl
dec
adc
aaa
jae
or
fs
js
mov
ret
incl
popa
mov
xchg
sbb
xor
incl
push
imul
sti
xchg
stc
mov
mov
dec
jg
sbb
dec
mov
fsub
jg
aas
jl
xchg
incl
jge
mov
mov
data16
add
mov
lock
xchg
pop
adc
mov
sub
push
out
mov
jg
into
cmp
ds
clc
pop
mov
call
aaa
vpcomuq
outsb
fists
jg
ja
icebp
push
lea
cs
jo
sub
xor
test
test
incl
or
push
inc
adc
inc
hlt
outsb
add
add
dec
mov
div
push
jg
into
or
dec
shll
roll
ljmp
les
xchg
sti
and
pop
jp
mov
or
nop
test
add
dec
or
sbb
les
imul
sub
pop
mov
mov
adc
aaa
mov
sub
push
insl
mov
std
call
loope
jl
and
enter
mov
jo
cli
call
fimuls
popa
sbb
dec
mov
pushl
sbb
popf
loop
outsl
inc
push
fwait
les
xchg
xchg
jle
adc
cmpsl
cmp
sub
cwtl
mov
out
repnz
add
jo
popf
in
xor
cmp
xchg
or
pop
jmp
fsubs
sbb
inc
cltd
and
ds
pop
pop
jp
inc
pushl
das
je
sbb
adc
pop
mov
or
sub
cwtl
fdivr
cmpsb
decl
insb
jb
arpl
les
jp
adc
xchg
cld
es
pushl
outsl
lret
push
sbb
xchg
sahf
ret
push
pop
clc
xor
or
and
inc
sahf
or
lcall
sub
push
es
inc
cltd
loopne
push
sbb
cmp
jecxz
cmp
inc
dec
dec
push
add
add
and
pop
mov
jmp
add
adc
push
pop
and
jg
sbb
arpl
and
jmp
cmpsl
and
mov
jne
jo
mov
jmp
adc
and
into
add
mov
pop
dec
dec
jnp
sar
mov
pop
push
cmpsl
cmp
adc
adc
ljmp
fsts
and
es
or
push
or
lcall
dec
test
add
and
mov
or
scas
jne
push
dec
inc
out
adc
jg
aaa
adc
ss
pop
sub
test
or
fidivrs
push
add
and
scas
lahf
push
inc
lcall
add
int
pop
push
mov
adc
add
xchg
jmp
mov
gs
jo
and
out
adc
daa
and
jne
enter
adc
jle
xor
adc
xchg
lods
lret
push
sbb
nop
cmpsb
ret
xor
cmp
pop
in
and
jg
mov
and
pop
sbb
add
add
call
into
jae
jmp
sbb
xor
pop
mov
inc
push
jp
lcall
add
xor
test
dec
dec
repnz
jmp
cmp
sti
xor
sbb
push
loopne
inc
push
out
int3
mov
add
pop
scas
mov
or
sbb
nop
dec
pop
jp
jp
leave
fnstenv
push
std
mov
es
into
xchg
dec
inc
xor
pushl
add
lcall
xor
lock
outsb
add
out
les
andl
adc
jg
dec
inc
fwait
enter
les
mov
addl
jns
pop
inc
loop
repz
inc
xor
les
mov
je
jp
mov
iret
rorl
repnz
push
out
add
lds
ss
mov
mov
ss
sub
popf
mov
jbe
scas
xchg
push
into
in
sahf
cmp
ss
outsb
cld
mov
xchg
jnp,pn
jno
mov
ret
lock
decl
inc
inc
inc
mov
out
mov
jae
inc
insl
pushf
fmul
push
sub
jae
or
push
inc
jle
adc
mov
push
stos
icebp
jg
ss
scas
sti
scas
cmp
ds
xchg
adc
ja
push
xlat
nop
imul
adc
add
xchg
mov
and
sbb
fwait
ljmp
mov
push
or
and
push
sbb
pop
movsl
push
and
and
sub
and
push
cs
xor
dec
and
ds
je
outsb
adc
loop
lods
xor
pop
mov
daa
push
xchg
add
push
popf
mov
test
fs
sub
add
jl
dec
lea
movsb
scas
and
xor
xchg
xchg
test
lock
adc
add
cmp
cmp
xor
mov
in
and
xor
popf
ficoml
idivb
adc
out
mov
and
jmp
mov
and
out
mov
push
cltd
push
add
or
mov
adc
xorb
adc
push
mov
pop
fisttps
adc
popf
hlt
int3
fisubrs
add
inc
test
sub
aad
mov
push
adc
push
mov
shrl
mov
aad
push
fsubl
stos
pop
xor
repnz
sub
shlb
cs
andb
lock
pop
sub
cs
fimuls
jbe
out
repz
popf
push
mov
frstor
pop
clc
call
sbb
out
pop
repz
lock
push
or
add
pop
push
idivl
xchg
cli
jg
or
lock
pop
lea
outsl
cltd
popa
inc
and
cld
jg
jl
notb
sub
mov
in
rclb
lcall
inc
ret
outsl
bound
adc
sbb
inc
je
pop
add
cwtl
adc
xchg
fstpt
dec
nop
sbb
jbe
jg
add
jg
pop
xor
jns
mov
mulb
dec
jle
mov
aaa
cld
call
pop
jae
dec
jo
outsl
xor
sub
stos
icebp
xchg
and
movsl
int3
mov
cmp
cmp
cmp
cld
sbb
or
pop
dec
cmp
adc
in
or
cmove
popa
nop
push
popa
popa
add
je
xchg
mov
jg
or
int
outsb
push
stos
and
mov
fwait
mov
call
dec
sbb
inc
mov
fidivrs
call
mov
jge
std
or
mov
inc
addr16
fs
in
sarl
lcall
sahf
fidivs
insl
inc
mov
lcall
add
out
nop
sub
clc
adc
mov
imul
jle
int
pop
adc
ljmp
shrb
mov
mov
jo
repz
or
icebp
lcall
sbb
imul
xor
push
push
ret
clc
out
adc
fmuls
xchg
jne
mov
aas
out
inc
adc
xor
int3
popf
into
or
stos
xchg
int3
call
inc
jne
arpl
dec
negb
jo
insb
hlt
mov
outsb
icebp
mov
cwtd
scas
inc
loope
push
add
mov
insl
lret
lcall
fistps
jg
and
ljmp
push
jns
inc
call
push
rorb
inc
fisttpl
mov
clc
es
add
repnz
je
and
and
lahf
shrb
enter
pop
lock
adc
and
aam
push
lock
or
scas
fbld
rorl
cmp
push
dec
mov
sbb
push
das
scas
or
popa
mov
sar
lret
add
in
cs
fs
inc
cld
fwait
test
enter
lcall
pop
xor
add
inc
or
pushl
or
jne
out
ret
push
add
imul
pop
inc
adc
cmp
out
xor
nop
dec
add
daa
insb
pop
jge
jne
jmp
or
mov
jbe
add
mov
jne
bound
in
mov
mov
insl
jne
cs
cmp
push
dec
clc
jbe
movsl
mov
pusha
add
mov
add
mov
ud0
jmp
outsl
loopne
jg
psubsb
push
fs
add
clc
push
mov
jle
cmp
cld
outsl
es
clc
or
cmpsb
inc
stos
cmc
pop
add
push
adc
fldt
ss
clc
sub
sbb
lahf
daa
loopne
icebp
push
push
sub
or
pop
lret
outsl
xchg
jecxz
stos
pop
loop
test
cs
jge
sub
jmp
push
pop
jb
insl
subb
mov
sbb
fwait
mov
xchg
loope
data16
mov
jno
adc
add
fcmovu
push
je
cltd
xlat
insb
pop
inc
call
pusha
sbb
jne
cs
xor
lock
inc
js
hlt
sub
pop
xor
jle
inc
sbb
adc
das
mov
dec
push
sbb
ss
cli
dec
sbb
xlat
popf
adc
push
sbb
ljmp
les
mov
adc
inc
mov
and
sub
xor
xchg
cmp
inc
or
and
ret
add
scas
pop
pop
inc
jbe
adc
and
jg
jbe
dec
loop
cmpsb
jbe
dec
xor
clc
add
sbb
call
xchg
cmp
inc
jbe
pop
jg
pop
cmp
cmp
arpl
dec
mov
cld
mov
fimuls
mov
pop
mov
ss
pop
add
decl
out
or
and
mov
sub
ljmp
jbe
dec
cmp
pop
inc
and
lcall
fimuls
xor
or
mov
push
loop
push
notl
xchg
sub
jns
sbb
fisttpl
pop
xchg
add
out
mov
mov
into
sub
stos
mov
fiadds
lea
nop
sub
add
fildll
jge
push
jecxz
jae
inc
lret
cmp
addb
mov
gs
adc
xchg
pop
mov
jmp
fs
adc
mov
mov
hlt
js
pop
shlb
clc
jae
sbbb
ficoms
lcall
outsb
fildl
dec
in
fistps
je
xor
dec
cli
cli
pop
lock
mov
add
int3
ja
or
push
or
inc
fcmovb
incb
jne
pop
push
aas
mov
fmul
loope
pop
sub
out
add
outsb
adc
pop
out
dec
daa
out
mov
addr16
int3
cmc
flds
cli
xchg
jbe
lret
test
out
call
fidivs
cmp
setg
cmp
mov
fisttpll
outsb
addr16
enter
jbe
movl
push
mov
cmp
mov
xor
ljmp
rcrb
push
imul
and
inc
cmp
adc
lcall
add
lret
xor
sub
mov
incl
shlb
dec
dec
sbb
jmp
mov
mov
jp
xor
fistpl
mov
xor
jge
sbb
add
mov
ja
mov
xchg
popf
aam
or
or
inc
in
adc
cmp
xchg
mov
aad
push
mov
pop
insb
call
push
cmp
xchg
cli
mov
jns
and
or
call
xor
mov
dec
inc
out
adc
filds
lods
or
popf
push
mov
dec
dec
dec
js
sub
repz
enter
stos
mov
xlat
mov
cmp
sub
popa
clc
or
adc
decl
pop
ss
cmpsb
stos
push
call
inc
jno
repnz
cmp
lcall
cmp
xor
pop
je
clc
pushl
hlt
mov
daa
push
mov
movsb
cmpsb
movq
movsb
mov
jae
pop
fidivl
es
stc
add
and
xor
insb
sub
icebp
pop
dec
mov
push
push
out
scas
xor
and
call
cld
sbbl
call
call
mov
enterw
repz
pop
jmp
dec
dec
push
jne
sbb
inc
mov
lcall
and
out
cwtl
mov
mov
or
push
rcrl
scas
xchg
out
int
fcoms
push
cmp
cmp
fmull
and
loope
iret
imul
or
jns
mov
incl
insb
lods
lcall
stos
aaa
adc
sub
pop
popf
out
mov
pop
lea
mov
scas
call
or
inc
xor
jns
xor
cmp
int
xorl
sbb
adc
out
sub
les
jbe
jbe
xor
leave
les
shlb
loope
std
fldl
mov
dec
xor
cmp
fcompl
loopne
sub
adc
ljmp
ficomps
cmp
and
add
inc
negb
rcl
mov
xor
inc
pop
add
xor
jbe
push
outsb
xchg
adc
push
mov
adc
dec
test
pop
and
fnstenv
mov
cmp
out
mov
les
lods
xlat
mov
in
mov
sbb
lret
scas
out
dec
out
pusha
jecxz
repz
jg
pop
cmpsb
sub
mov
movsb
lods
mov
and
mov
stos
xchg
sbb
jl
xchg
cwtl
mov
mov
sbb
mov
scas
and
dec
out
cmp
gs
scas
nop
decb
pop
sub
fisttpll
repnz
call
test
mov
cld
iret
filds
divb
repz
xchg
fwait
daa
fs
into
loop
imul
ss
cmp
dec
sahf
push
es
and
cwtl
mov
jge
jg
mov
jne
popa
daa
js
jb
gs
and
and
arpl
and
mov
into
xor
xchg
adc
out
cli
jns
or
push
push
enter
adc
jmp
cltd
outsb
in
pushf
mov
inc
add
cmp
inc
pop
and
es
pop
mov
xchg
divl
jp
pop
and
loop
cmp
inc
fmull
push
or
es
test
fdivs
ret
fisttps
mov
mov
arpl
push
dec
mov
and
push
or
xchg
outsl
lods
add
lock
ja
xor
sbb
sarl
pushf
es
adc
loopne
enter
push
xchg
pop
adc
ds
xchg
dec
mov
inc
xor
push
pop
je
add
dec
and
movsb
sub
sub
pop
cld
das
sar
xor
push
outsl
lea
sub
inc
push
and
sub
add
jmp
cmp
lea
incb
lret
js
sahf
push
inc
mov
cmpsb
mov
jg
jmp
xor
fimull
jle
xor
cwtl
cmp
test
insb
in
pop
or
test
ljmp
and
sub
movsb
push
loope
pop
mov
sbb
aaa
pop
mov
push
sbb
pop
stc
sub
mov
sarl
fcomip
mov
cmp
inc
movl
lea
pop
fbld
incb
sub
pop
into
test
jae
jecxz
mov
std
popf
aam
xorl
movsb
cmpsb
jbe
add
mov
adc
aas
ljmp
sub
dec
cld
pop
mov
shlb
mov
push
daa
paddusw
adc
lock
mov
xchg
sub
movsl
sub
sti
mov
out
fisttps
jbe
mov
iret
mov
jns
cmp
add
decl
mov
mov
pushl
jle
mov
xchg
fnstsw
adc
push
jg
dec
pop
add
aam
mov
push
add
inc
movsl
test
mov
pop
and
push
cmpsb
aam
push
outsl
sbb
jo
or
mov
sbb
or
aas
out
or
pop
js
push
loopne
jbe
pop
cli
es
data16
mov
adc
fadds
jnp
mov
arpl
divl
ja
icebp
jg
mov
pop
push
push
repnz
push
jno
inc
and
enter
jb
movsb
enter
fdivs
pusha
call
dec
add
data16
scas
cwtl
mov
ret
or
push
cmova
mov
pop
jo
mov
jbe
in
lods
add
push
mov
hlt
decl
jno
orl
int3
mov
cmp
jg
mov
in
stc
jle
js
lret
add
sti
adc
mov
jmp
movsl
and
push
adc
les
mov
cmp
clc
or
sub
pop
push
xchg
mov
xchg
test
inc
pop
push
sbb
out
add
sti
mov
xchg
test
fdivl
adcb
adc
adc
cmp
out
add
lcall
inc
iret
ds
call
call
inc
xor
mov
lea
adc
fucomip
sbb
mov
test
or
jg
and
scas
pop
pop
xor
cmp
add
notl
pop
jo
dec
mov
addr16
mov
test
dec
cmpsb
hlt
mov
jmp
daa
mov
dec
xor
daa
pop
or
add
out
push
and
scas
mov
mov
lods
xor
orl
leave
add
outsb
jg
or
xchg
pop
ss
sti
push
sbb
push
pop
sbbb
mov
push
pop
pusha
call
mov
xchg
mov
xchg
popf
sbb
jle
inc
shrl
and
cvtdq2ps
inc
cmpsl
xchg
popa
ja
jno
or
and
add
adc
decl
shll
popf
in
or
jbe
and
jg
push
insl
cmpsb
lock
and
and
add
ja
scas
pushl
jl
mov
push
dec
mov
out
adc
xchg
sar
or
and
add
into
or
outsl
and
add
shrb
sub
adc
add
ret
push
dec
adc
xor
cltd
int3
inc
icebp
jmp
sti
sahf
outsb
lret
jl
inc
out
pop
fs
sbb
or
call
inc
sub
jns
or
dec
jmp
addr16
nop
and
jnp
sbb
mov
sarl
jb
pop
dec
sti
push
decl
mov
shlb
rcrl
lds
jae
dec
ljmp
dec
mov
test
push
sub
mov
mov
xchg
adc
ljmp
push
cmc
mov
dec
cmc
sub
fs
mov
dec
sbb
jae
jne
call
mov
cmp
insl
sbb
jge
ss
dec
sub
gs
clc
mov
sbb
dec
aaa
jg
add
and
es
dec
and
pop
pop
jp
pop
lds
lcall
push
iret
shlb
dec
push
pop
push
and
in
adc
call
js
mov
mov
cmp
mov
or
scas
movsb
popa
outsb
adc
fistps
daa
mov
pop
mov
cld
inc
push
cmpsb
sti
mov
lret
call
and
in
xor
into
adc
data16
insl
call
inc
addr16
and
adc
and
xor
sbb
addr16
xchg
inc
push
sub
movsb
add
ss
add
pop
mov
aaa
jne
add
sub
adc
dec
sar
inc
or
adc
daa
outsb
das
xlat
mov
mov
sbb
rcl
cs
clc
jg
xor
xchg
add
stc
and
clc
xor
out
mov
sub
inc
cmpsl
xchg
xchg
je
push
inc
adcl
xchg
fidivl
mov
dec
mov
add
mov
call
aam
push
pushf
jae
sub
and
lcall
jg
les
push
add
push
sub
and
pusha
adc
lea
pop
movsb
jns
mov
sbb
fstpt
popf
push
mov
push
push
shrl
incl
lret
inc
sub
inc
sbbb
inc
jg
into
popf
dec
mov
movsb
adc
jo
push
aaa
stos
pop
icebp
das
adc
call
adc
rclb
arpl
clc
pop
insb
mov
mov
cs
jno
jne
and
add
aas
nop
push
ss
and
mov
movl
shll
popf
movb
sub
std
jmp
lret
pop
jecxz
pop
xor
xor
push
movsb
add
popf
mov
add
or
inc
shlb
outsb
outsb
cmp
jecxz
outsl
aaa
jmp
call
inc
inc
sbb
addl
cmp
repz
insb
jne
mov
xor
daa
mov
out
in
iret
mov
clc
pop
cld
nop
add
jb
fistpll
lcall
xchg
sbb
dec
dec
cmp
mov
and
jg
push
stos
push
mov
das
outsb
mov
push
or
fadds
jb
inc
mov
mov
push
push
shrb
dec
mov
arpl
inc
popf
insl
std
jg
ss
adc
and
vmread
loope
xchg
ret
mov
mov
in
movsb
jmp
or
cld
cmp
incb
xchg
loopne
mov
mov
test
icebp
push
sbb
popa
jecxz
adc
das
data16
int
scas
push
mov
mov
push
ljmp
jg
and
or
push
aaa
cld
insl
or
rorb
ja
clc
or
cmp
mov
mov
and
jmp
outsb
sub
js
push
or
jmp
xor
xor
divl
data16
out
fwait
sbb
ja
dec
das
cs
xor
or
mov
es
es
incl
adc
ss
pop
dec
jne
and
mov
mov
push
cmp
cmp
icebp
fs
mov
sub
daa
outsb
inc
arpl
scas
and
sahf
inc
inc
mov
pop
icebp
ljmp
inc
in
mov
or
jp
xchg
pop
jbe
xor
lea
cs
iret
or
aad
notb
cmp
inc
decb
das
dec
push
mov
inc
idiv
dec
inc
dec
inc
add
inc
iret
pop
jp
adc
xchg
lret
subl
add
sarb
scas
jp
jle
cmp
ret
cmp
dec
mov
gs
mov
lock
out
test
cmp
cmc
mov
jmp
adc
mov
pushf
fnstsw
ds
mov
sahf
incl
shll
pop
sbb
arpl
push
jb
mov
call
jmp
push
fiadds
xor
mov
data16
ljmp
cmp
adc
aas
push
faddl
loope
push
push
mov
outsl
pop
stos
out
inc
into
mov
aaa
out
mov
ja
faddl
test
push
sub
inc
adc
xchg
insl
popa
mov
std
sbb
pushf
xor
pushl
enter
insl
hlt
cmp
rorb
dec
outsl
mov
js
cmc
lcall
ret
mov
mov
mov
ror
inc
fiadds
jb
jg
rol
stos
mov
nop
imul
ret
sub
in
mov
loopne
adc
jp
int3
mov
add
fbstp
pop
jg
cmp
push
inc
mov
mov
cmp
mov
mov
jg
lds
jo
ret
push
push
test
outsl
mov
outsb
repnz
fstl
pop
mov
jg
push
incl
pop
jle
cmp
fs
xor
cmpb
clc
jmp
mov
mov
cmpsl
dec
jecxz
data16
daa
fs
out
cmc
cmp
mov
rcrl
push
scas
xchg
andb
sahf
imul
clc
jg
mov
add
push
add
ja
aas
push
popf
inc
cld
ljmp
cmp
notb
add
mov
mov
xchg
dec
leave
fdivrs
ljmp
into
inc
repnz
loop
jge
mov
pop
xchg
iret
mov
xor
mov
dec
cmpsb
lret
mov
repz
push
fidivrs
jbe
mov
dec
dec
xchg
and
scas
out
pusha
ficomps
mov
or
inc
stc
and
fnstsw
dec
jl
sbb
mov
test
dec
jmp
mov
mov
imul
xchg
push
sti
xor
add
push
sti
das
inc
jne
adc
xchg
sbb
nop
fwait
lcall
test
lcall
xchg
dec
inc
loop
dec
out
push
pop
xchg
fs
xchg
pop
hlt
jecxz
lock
sbb
fidivrs
jg
cmc
cmp
out
push
inc
mov
cmpsl
jp
test
push
dec
jecxz
in
push
jmp
mov
dec
sarl
addr16
mov
ja
mov
jmp
inc
out
xchg
cmp
mov
inc
movsb
jmp
mov
call
pop
jns
sub
or
stc
sub
nop
xor
mov
scas
dec
fcoml
std
adc
jg
icebp
mov
dec
rclb
inc
clc
sub
jl
xor
icebp
jg
mov
sbb
loop
aam
es
sub
jle
mov
jo
and
scas
dec
in
sub
fsts
shrb
bound
adc
mov
xchg
in
icebp
pushl
fwait
stos
leave
pop
jge
fbld
into
mov
das
call
bound
pop
and
dec
rolb
std
mov
push
bound
clc
aas
dec
nop
lret
int3
pop
jmp
fimuls
jo
adc
xchg
jle
cltd
clc
mov
adc
sti
mov
xchg
shrl
cwtl
es
or
jg
cmp
mov
cld
cltd
jp
fwait
shrb
test
xchg
call
mov
dec
xor
lcall
dec
xchg
out
push
fisubrl
hlt
movsl
inc
lock
mov
aaa
jp
and
cmp
insb
loope
pop
push
fcompl
movsb
ds
dec
cs
lcall
mov
out
cwtl
inc
or
sbb
outsb
jle
pop
imul
jae
stos
int3
xchg
outsb
jmp
push
jge
out
popf
iret
mov
or
icebp
add
mov
leave
xchg
stc
xchg
sbb
out
sar
mov
mov
cmp
mov
inc
push
cmpsb
dec
fidivl
ret
incl
aam
adc
mov
dec
lods
push
mov
mov
dec
xchg
jnp
jmp
jbe
in
jg
call
dec
fildl
xor
mov
mov
push
xchg
cmp
xor
cld
mov
aaa
orb
pop
inc
xchg
mov
or
mov
lcall
fistl
mov
addl
popa
pop
test
mov
aaa
push
cmpsl
into
out
xor
mov
dec
shlb
bound
cmp
xchg
imulb
xchg
lds
addr16
fcompl
decl
lods
pop
into
adc
jb
popf
aam
push
movsb
iret
add
out
xchg
ja
inc
rcr
adc
xor
push
mov
add
dec
mov
pusha
je
enter
dec
push
pop
sahf
out
aad
dec
sub
test
mov
push
lcall
popa
xchg
outsl
and
jl
fwait
xchg
cmc
adc
in
cmp
jns
xchg
cltd
adcl
pop
mov
je
mov
lock
ja
lea
mov
xchg
outsl
jbe
or
pop
dec
cli
xchg
scas
add
jns
test
mov
int
scas
cwtl
add
orl
fwait
jno
fcoml
ja
sbb
xor
pop
mov
mov
adc
int
loopne
push
out
mov
outsl
out
xchg
pop
shlb
mov
cmp
mov
test
sbb
cmpsl
mov
xchg
call
nop
pop
into
sbb
pop
push
adcb
aas
xor
mov
inc
cmpsb
sub
mov
ljmp
mov
push
pushl
inc
ret
adc
bound
std
mov
in
cld
aaa
pop
mov
xchg
popf
pop
imul
dec
rolb
cmp
mov
subb
jmp
ja
sarl
dec
cs
xor
arpl
xchg
mov
into
shlb
add
subps
and
iret
xor
clc
mov
inc
jnp
lock
pop
lock
mov
ja
enter
mov
movsb
jp
cmp
push
ret
fnstenv
cmp
sub
imul
inc
fiadds
aas
nop
out
dec
mov
dec
aam
fistpll
lcall
xor
loope
test
push
mov
mov
mov
call
cld
int
mov
dec
xchg
repnz
inc
cs
fidivs
xchg
mov
lods
mov
shl
mov
lahf
jb
lods
add
shlb
pop
mov
jg
movsb
fdivrp
std
sbb
ja
icebp
mov
jle
inc
cli
and
cmp
mov
in
adc
cwtl
aaa
std
cld
inc
mov
pop
jl
lcall
inc
into
mov
imul
clc
add
cli
xor
lcall
cmpsb
enter
push
enter
bound
inc
mov
ljmp
into
in
adc
mov
mov
sub
push
mov
fcmove
movsb
jmp
jl
movl
mov
sahf
pop
aam
test
lahf
adc
xchg
nop
lret
xchg
xchg
sbb
inc
mov
cltd
mov
xor
lock
fadds
jp
jbe
xchg
lret
xor
shl
mov
lret
mov
mov
nop
inc
lcall
add
test
nop
out
mov
andb
andb
mov
inc
sahf
cltd
movsl
imull
in
rorb
cmp
cmp
lahf
and
add
stos
ss
cmpsl
jns
seto
nop
out
add
mov
popl
or
aas
lds
in
sub
int3
or
jno
enter
test
lahf
dec
mov
sbb
out
test
xor
jmp
into
fwait
js
repz
ljmp
out
xchg
stos
mov
push
xchg
xchg
sbb
stos
iret
call
ficomps
mov
mov
cmp
pop
enter
mov
andb
mov
cmp
pop
mov
mov
jb
jns
mov
lahf
dec
xchg
js
call
decl
push
jg
add
jae
add
xchg
mov
scas
jmp
pop
mov
call
adcb
fidivrs
push
pushf
test
cld
decl
xchg
dec
mov
push
aam
bound
mov
push
lods
jmp
adc
outsl
xor
ljmp
mov
lea
adc
ljmp
fildl
jns
popf
mov
jl
push
pop
loope
shlb
mov
add
push
loopne
adc
push
in
rolb
push
jg
iret
xchg
fs
es
mov
popw
xchg
jno
test
and
notl
mov
lcall
imul
pop
inc
mov
inc
lock
enter
mov
mov
jns
cmp
xchg
and
jae
mov
mov
add
mov
jb
mov
cmp
out
rolb
xchg
inc
pop
xchg
mov
icebp
push
sar
inc
xchg
lcall
jle
test
fimuls
repz
push
and
mov
enter
ret
fisttps
loope
and
sbb
mov
sub
ljmp
cmp
fstl
int3
xor
jns
cmp
popf
mov
mov
mov
sub
jns
mov
test
mov
out
mov
cmp
sbbb
pop
cltd
shlb
enter
fildll
inc
jle
cmp
mov
outsb
adc
test
mov
in
lods
xchg
data16
lcall
and
or
and
popf
mov
ja
adc
xchg
ss
lock
stos
inc
rorb
nop
ss
push
mov
cmp
sti
ds
in
mov
dec
out
xor
mov
mov
arpl
inc
ljmp
push
scas
int3
xchg
loope
inc
lret
push
xchg
test
dec
out
adc
xor
pop
icebp
jns
mov
clc
xor
leave
movsl
fwait
push
adc
cmp
clc
sbb
jb
xchg
add
dec
nop
inc
ljmp
cmp
dec
mov
cs
popf
leave
mov
ss
mov
cltd
xchg
cmpl
push
xchg
clc
ljmp
mov
mov
into
test
cmpb
xorb
pop
jns
lods
fisubs
mov
sbb
nop
loopne
inc
leave
into
mov
das
jp
out
jl
subb
jecxz
dec
cli
xor
ss
inc
jo
fsubrp
scas
idivl
pop
mov
mov
rcrl
push
and
pop
mov
mov
pop
mov
pop
cld
xchg
rcrb
mov
test
xchg
and
jae
sub
pushf
scas
jg
jmp
jle
js
xchg
cs
movsb
sahf
sbb
cmp
test
mov
mov
iret
ljmp
dec
shll
sbb
lcall
into
mov
mov
fcompl
mov
adc
aad
xchg
add
scas
pop
ret
adc
mov
xorb
xchg
cltd
sub
dec
xchg
push
es
incl
xchg
scas
push
sbbb
xchg
dec
movsl
sbb
mov
mov
enter
ret
sub
xchg
icebp
fwait
lcall
mov
mov
nop
jl
xchg
xor
mov
lods
dec
xchg
add
adcb
ljmp
push
mov
and
mov
mov
orl
test
jg
lea
aaa
jae
xchg
xchg
scas
sbb
adc
pushl
dec
jmp
stos
mov
xchg
ret
pop
insb
int3
mov
mov
fbld
mov
and
mov
out
stos
jmp
popf
mov
ret
jbe
mov
call
pop
xor
xor
pushf
insb
stos
cmp
test
sarb
inc
mov
mov
ret
stc
scas
sar
add
aad
mov
pushf
and
imul
mov
and
inc
mov
mov
push
add
lcall
adc
fs
div
mov
fcomip
cmp
movsl
xchg
imul
pop
clc
call
push
pop
inc
fwait
loopne
jnp
mov
in
cmpsl
jb
test
sarb
data16
jne
adc
cmpb
pop
mov
push
aad
out
adc
in
scas
popa
mov
cld
stos
je
and
xor
xchg
cld
xchg
jmp
cld
loop
dec
pushf
ret
jp
xchg
test
adc
inc
xchg
ss
xchg
mov
test
mov
and
rcll
adcb
rclb
xchg
popa
cld
sbb
push
call
imul
nop
testl
xchg
jbe
call
add
mov
sbb
repnz
xor
aam
sahf
mov
nop
mov
fidivrs
sbb
mov
les
scas
pop
jbe
push
jl
call
test
test
cmpb
mov
mov
fs
add
mov
hlt
addr16
not
sbb
sahf
dec
xchg
fs
xchg
cld
scas
cli
pop
dec
lds
ljmp
xchg
mov
xor
pop
fiadds
jle
iret
mov
cmpsl
jbe
jg
je
aad
xchg
aas
mov
xor
mov
ja
cmp
jl
fdivrp
sbb
jp
mov
aam
pop
repz
outsb
add
jns
adc
cwtl
dec
in
mov
add
movsb
jne
ss
sahf
shlb
mov
xchg
inc
sahf
out
jno
mov
ja
cs
mov
jmp
sbb
sub
add
stos
shrb
lcall
lcall
mov
xor
loopne
pop
loop
lock
pop
ds
lret
push
movb
jg
or
ja
jecxz
pop
sub
jle,pn
les
mov
add
repz
daa
pop
inc
sahf
leave
mov
xor
and
pushl
pusha
les
push
int
pop
pop
out
js,pt
mov
test
mov
fwait
add
or
jnp
xchg
rolb
jbe
inc
decl
xchg
or
add
icebp
xchg
mov
scas
add
inc
iret
ss
push
jg
insb
ljmp
inc
mov
lahf
out
push
fisubrl
add
add
jle
or
or
xchg
mov
inc
jp
mov
fcomip
jg
rorb
cmp
pop
dec
mov
leave
and
je
ja
clc
dec
insw
mov
mov
mov
cli
mov
or
lods
in
movsb
xchg
insb
mov
xor
fnstcw
inc
mov
jle
fwait
cmpsb
mov
dec
outsl
test
aaa
dec
jp
pop
dec
lods
adc
in
add
call
and
inc
test
xor
push
sbb
jne
add
inc
inc
adc
pcmpeqw
push
cs
ljmp
push
or
adc
jp
cmp
dec
stos
sbb
add
cmp
xor
and
cmp
pop
xor
xor
ret
jg
dec
mov
cmp
inc
add
aaa
push
inc
push
and
cs
xor
sub
mov
cmp
xor
xor
xchg
adc
or
outsl
sbb
inc
xchg
lcall
in
dec
jae
inc
xor
lcall
mov
jl
pushf
clc
das
or
sub
mov
push
mov
mov
loope
inc
ja
call
push
inc
lcall
popf
sbb
outsl
or
lcall
pop
lds
or
rclb
sub
jns
mov
mov
push
scas
push
loop
decl
test
xchg
push
pop
cmc
test
sub
je
pop
sub
pop
add
rolb
inc
lods
std
inc
mov
jne
arpl
adc
call
les
mov
xchg
lods
loop
pop
mov
aad
lcall
rclb
pop
jb
and
and
incl
pop
dec
je
gs
lea
stos
jno
add
nop
sbb
pop
mov
inc
push
mov
mov
xchg
pop
scas
adc
inc
sahf
mov
call
fs
mov
xchg
add
or
outsb
pop
mov
jb
or
ljmp
jns
and
outsb
adc
int
stos
and
out
cli
sbb
xor
sbb
jg
mov
dec
sub
insl
pop
jmp
jge
cmp
ret
push
in
dec
stc
add
or
popf
stos
bound
stc
ja
clc
ljmp
lods
lea
jo
pop
adc
and
test
push
or
sbb
push
sar
pop
out
mov
pop
dec
xchg
lods
ficompl
insl
mov
cmp
mov
adcb
sub
sbbl
mov
out
scas
test
out
cmp
sub
movsl
stos
mov
out
inc
clc
add
mov
fwait
jecxz
push
add
add
sahf
sbb
ds
mov
pusha
cld
stos
and
xchg
inc
push
jecxz
movsb
inc
pop
hlt
adc
and
call
sbb
out
or
scas
push
push
pop
xorl
stos
jl
sbb
mov
aas
sub
jle
outsb
cli
js
xor
inc
repnz
push
push
mov
jmp
jmp
cld
adcb
pop
aas
mov
inc
iret
and
bound
daa
pop
fbstp
mov
push
inc
dec
mov
sahf
stos
je
pop
nop
cmp
mov
dec
fcomps
hlt
add
lods
mov
cmp
mov
stos
pusha
notl
lahf
mov
jg
ja
orl
cmp
push
jbe
push
sub
decl
add
out
jg
gs
xchg
decl
aaa
dec
scas
and
add
add
xchg
mov
jmp
fimull
adcl
xlat
xchg
jno
shrl
movsb
sbbb
cmpsl
iret
push
inc
and
fiadds
push
and
sbb
push
fsubrl
dec
cli
pop
jns
dec
hlt
jbe
cmp
pop
xor
or
gs
push
jle
call
fimuls
jge
pop
cmp
dec
adc
xchg
adc
mov
jp
sub
adc
push
push
es
scas
sbb
push
js
push
movsl
xchg
popa
push
inc
cmpsb
loope
lcall
mov
mov
stos
sbb
outsb
and
addb
mov
xor
inc
inc
popf
outsl
sub
pusha
call
mov
imul
outsl
test
cmp
cltd
or
sub
aaa
adc
jle
xchg
negl
ss
and
test
cs
ljmp
mov
sbb
mov
xor
movb
pop
adc
out
shll
mov
sbb
test
mov
sbbb
lock
add
adc
fs
xor
aas
out
insl
test
stc
es
pop
dec
pop
adc
fnsave
or
insl
dec
push
push
jns
push
aam
pop
and
nop
xor
pop
and
nop
adc
add
push
imul
sbb
add
scas
inc
adc
ds
push
lods
call
cld
andl
mov
or
lret
or
in
shlb
or
into
sub
ret
scas
call
insl
ret
dec
out
aaa
mov
adc
jle
pop
adc
or
movsb
xor
call
xchg
and
jle
push
pop
movsb
jg
cmpsb
icebp
jg
call
outsb
and
ds
fucomi
test
xchg
jne
adc
cmp
and
sub
mov
cld
mov
mov
lods
adc
out
lcall
incb
jo
lods
imul
rclb
rolb
inc
clc
jmp
xor
rorb
inc
movsl
addl
loope
gs
fistl
push
or
dec
xchg
out
icebp
out
rcr
pusha
and
mov
decl
test
pop
jb
xor
cmp
mov
xor
shll
popl
and
adc
es
enter
mov
sbbl
mov
inc
aas
test
leave
jle
mov
xchg
pusha
jg
lsl
xchg
sbb
shl
popa
xor
add
jb
dec
icebp
mov
ret
mov
pop
jle
adc
add
sbb
js
sbb
jo
lret
lods
push
out
xchg
and
push
push
dec
xchg
outsb
out
mov
jle
cmpsb
cmp
pop
bound
xchg
mov
fadd
cmp
out
adc
outsb
push
ja
mov
jb
pop
cmc
lods
xchg
sbb
or
sbb
movl
xchg
ret
in
popf
es
xchg
push
icebp
call
mov
pop
stos
cmpsb
sbb
test
add
sbb
dec
repz
dec
mov
pop
xchg
inc
out
cs
or
jg
loopne
jecxz
insb
decl
es
jg
mov
orb
in
sub
cmp
pusha
sbb
insb
pop
xchg
adc
adc
jg
test
cs
mov
leave
jo
jne
les
dec
fidivrs
pop
lods
jmp
xchg
adc
pop
inc
mov
loope
inc
lret
jg
ss
imul
test
jmp
lret
inc
je
stos
xchg
fwait
mov
push
dec
mov
jg
stc
jg,pt
dec
lcall
push
pushl
xor
cmovne
xchg
aaa
and
inc
pop
lods
loope
dec
mov
pop
mov
ljmp
sub
pushf
andl
xchg
outsl
adc
clc
mov
sahf
enter
ret
outsl
ljmp
push
cmp
mov
cli
mov
pop
or
jecxz
popf
shll
cmpl
gs
jg
jne
xchg
adc
insl
hlt
and
lods
jg
mov
xchg
push
ds
ret
push
push
push
insb
xchg
adc
ljmp
sub
ds
cmpl
scas
jle
mov
mov
test
inc
mov
dec
xchg
or
es
scas
inc
cmp
mov
add
jmp
lcallw
jl
adc
adc
das
cmpsb
mov
cs
mov
int3
mov
sub
call
xchg
jns
sbb
dec
in
push
and
dec
or
in
jmp
add
push
test
ds
clc
pop
into
pop
and
sbb
test
data16
inc
add
xor
scas
mov
pop
or
cmp
sub
mov
subl
sub
mov
adc
push
or
sub
inc
xchg
push
push
cmpb
dec
es
ret
sbb
pop
push
scas
add
mov
push
pop
jbe
leave
mov
aaa
adc
push
or
in
fwait
hlt
inc
into
dec
jo
fimuls
lods
sub
pop
mov
push
and
imul
mov
pop
sub
pop
fwait
xor
sbb
sbb
je
movsb
cmp
retw
jno
bound
mov
mov
sahf
stc
lods
sbb
inc
cmpsb
push
icebp
pusha
or
outsl
sub
add
or
pusha
pop
sbb
ljmp
pop
sbb
and
xor
bound
inc
es
adc
pop
push
mov
push
inc
xchg
pop
cli
or
je
out
stos
inc
or
mov
sub
xor
decl
jg
or
ljmp
pop
push
or
pusha
loopne
cmpsl
cmp
jle
xchg
cmp
mov
test
xchg
in
pop
jg
cmc
cld
mov
xorl
cltd
mov
jne
xor
dec
push
dec
jne
cmp
test
and
mov
dec
test
ret
xchg
mov
inc
sbb
jle
pop
mov
mov
in
xor
push
lock
xchg
inc
pop
xchg
inc
hlt
ja
xor
daa
xchg
cltd
test
pusha
ficompl
jmp
hlt
lea
cltd
push
push
jge
adc
adc
xchg
and
lcall
jbe
ds
mov
push
lahf
push
lds
jno
adc
inc
push
dec
dec
loop
and
dec
cs
pusha
into
ds
push
pop
mov
sbb
pushf
cmp
xchg
mov
decl
sysexit
sub
push
stos
add
adc
cmp
xchg
lcall
pop
gs
dec
pop
push
fwait
pop
push
push
lods
jbe
adc
ret
es
inc
scas
pop
test
push
add
cmp
mov
inc
out
xchg
push
lret
inc
jbe
dec
test
sbb
mov
ret
inc
jg
cmpsb
cmp
sbb
test
xor
adc
add
add
mov
rolb
mov
mov
mov
adc
gs
movsl
into
xchg
sub
add
fcomip
push
mov
adc
cmp
dec
enter
inc
stc
sub
out
mov
add
gs
sbb
adc
stos
push
inc
jne
xor
jbe
fimull
iret
mov
ss
je
jp
jne
adc
dec
fnstsw
fdivl
into
jecxz
stc
lock
push
pop
out
jo
mov
mov
push
mov
cli
mov
jno
lods
adc
sbb
or
lods
add
lahf
in
enter
mov
mov
mov
jo
or
cmpsb
insb
cmc
pop
dec
cld
mov
cs
mov
lcall
mov
pop
dec
test
ljmp
hlt
xchg
scas
inc
mov
fwait
sbb
ljmp
loope
pop
inc
fists
add
movsl
pop
dec
push
mov
aaa
out
clc
push
mov
jo
jns
fwait
pusha
gs
mov
pop
cmp
pop
bound
jnp
popf
frstor
sub
je
mov
mov
push
mov
mov
mov
call
mov
and
pusha
outsl
xchg
cs
rclb
loop
mov
xorb
scas
adc
jecxz
mov
jo
mov
dec
push
ret
cmp
das
dec
push
lcall
adc
stos
lea
mov
mov
lods
minps
bsf
dec
push
ss
loopne
cmpsb
inc
inc
jg
pop
outsl
mov
push
pushf
xor
unpcklps
sahf
and
test
dec
add
push
xor
sbb
cmpsb
xorb
and
mov
filds
push
nop
sbb
imul
mov
cmovae
xchg
test
pop
mov
or
cmpsb
je
and
out
cmpb
cmp
sar
aas
ds
imul
sub
in
mov
dec
adc
sbb
cmp
nop
push
into
popf
movsl
das
sub
imul
push
inc
xor
scas
test
cmp
adc
pop
popa
filds
dec
or
jne
pusha
add
ss
sub
mov
icebp
jb
lock
cld
and
je
sahf
and
pop
mov
xor
mov
lods
adc
cmp
and
js
je
push
and
incl
and
xchg
inc
cmp
daa
mov
aam
jmp
push
les
pop
dec
xchg
inc
icebp
movsl
out
les
push
xchg
mov
cmpsb
jb
and
dec
xchg
incl
mov
jne
mov
push
inc
test
mov
pop
or
and
lods
cmp
adc
nop
add
fbld
test
mov
and
popa
pop
mov
mov
inc
cmpsb
push
rol
cs
jmp
xchg
cli
mov
fidivl
iret
mov
dec
int
mov
xchg
outsb
jmp
sbb
inc
scas
imul
xor
sbb
inc
incl
repz
pop
mov
jmp
jns
in
sub
jne
lcall
es
jmp
popf
mov
jge
cmp
hlt
pop
sbb
adc
out
mov
cld
pop
and
cmpsl
pop
fisttpl
mov
dec
outsl
negb
cmpsl
adc
xchg
sbb
or
insl
dec
or
cmp
ja
or
bound
in
and
insb
aam
mov
xchg
pop
fcompl
sbb
ja
sub
cmp
std
mov
xchg
mov
sub
xchg
aas
add
jne
sub
aas
sarb
and
insb
adc
mov
stc
mov
movb
xor
out
int
clc
sub
dec
cli
stos
mov
out
jo
das
or
icebp
add
clc
and
int3
push
dec
add
push
inc
fisttps
jmp
and
and
movsb
jp
mov
push
lea
test
subl
cwtl
pop
ds
mov
mov
rep
jne
loope
icebp
das
cli
ss
and
mov
jbe
test
enter
add
pop
xor
andb
cld
jg
dec
fcmovnb
add
lods
popa
aaa
arpl
pop
pop
mov
push
mov
pop
jmp
mov
scas
pop
cmpsl
pushf
xor
out
cmp
stos
cmp
mov
jge
mov
mov
das
adcb
mov
jbe
xor
fimuls
mov
inc
inc
std
inc
jmp
scas
sbb
out
mov
mov
fs
jg
into
cmp
jp
ret
inc
or
fiaddl
inc
pusha
mov
add
mov
insl
pop
add
mov
mov
mov
movsb
push
push
insb
cld
sbb
sbb
jbe
sbb
inc
ljmp
cltd
push
adc
incl
cmpsb
and
push
mov
imul
cmpsb
adc
in
xchg
push
pushf
fldcw
in
cmp
dec
cmp
leave
stos
jl
mov
add
ss
dec
mov
pop
jg
push
xor
sahf
cmp
cmp
pop
es
xor
mov
pop
sbb
lea
incl
xchg
loopne
rcrl
push
mov
fs
mov
inc
add
in
mov
mov
out
jle
dec
and
push
outsb
xor
lods
pushf
aaa
push
sbbb
mov
test
incl
insb
inc
mov
mov
scas
jp
sub
jle
adc
pushl
movl
cmc
and
dec
cmpb
orb
scas
sarb
cs
cltd
adc
es
js
enter
fs
in
cmp
test
or
mov
jl
mov
pop
and
ss
test
enter
add
push
push
inc
jmp
mov
test
aaa
jmp
dec
and
inc
cmp
mov
lds
test
dec
adc
call
add
fcmovnu
jle
test
dec
xchg
dec
adc
lcall
xchg
adc
movsl
mov
movsb
lahf
push
in
loopne
push
pushl
enter
aas
mov
jbe
xchg
or
xchg
js
enter
pop
cwtl
cltd
xor
and
mov
into
mov
mov
cli
inc
mov
test
leave
ss
dec
mov
gs
sbb
xchg
test
xchg
cs
add
rclb
jecxz
hlt
xor
mov
cltd
cmp
js
cld
ljmp
dec
popa
pop
sbb
add
gs
bound
leave
mov
fildll
xchg
aaa
movsl
xor
dec
in
or
out
xor
ret
fbld
enter
packsswb
lahf
xchg
inc
popa
addl
add
pop
push
imulb
adc
mov
or
adc
les
push
dec
mov
sar
aaa
lcall
gs
ds
mov
or
popa
icebp
movsl
or
add
jg
push
mov
aas
xchg
aam
mov
jg
sub
mov
push
mov
iret
repz
inc
push
push
sub
xor
fildll
aaa
inc
jp
add
jb
cmp
mov
into
outsb
push
xchg
push
xchg
xchg
and
mov
stos
adc
mov
repz
push
lcall
jg
push
into
jns
sbb
mov
sub
mov
fidivrs
sbb
inc
and
xchg
push
cmpsb
adc
xchg
push
sub
pop
mov
idiv
adc
sub
and
imul
dec
int
cmp
sub
adc
mov
lret
inc
mov
fiaddl
xchg
mov
pop
and
add
ffreep
scas
jp
adc
arpl
call
sbb
jno
lods
jp
outsl
add
xchg
cmp
mov
add
les
jno
pop
xor
pushl
fiadds
adc
and
mov
cmpb
jmp
ret
or
jg
push
mov
inc
mov
pop
xchg
inc
ljmp
push
jae
inc
lods
outsb
xchg
cmp
mov
jg
mov
repz
aas
repnz
mov
out
outsb
ret
dec
push
xchg
imul
push
xchg
mov
add
in
mov
cmpsb
or
xor
les
mov
and
js
and
lcall
or
fdivrs
sbb
addr16
jno
add
fsubrl
sbb
aaa
inc
pop
mov
adcb
pushf
cmp
call
leave
cmp
jge
mov
inc
jo
mov
sbb
xor
and
pop
test
movsb
xchg
arpl
dec
decl
adc
mov
insl
push
jmp
sahf
test
or
daa
jecxz
fistl
push
lahf
and
or
and
xchg
xchg
into
mov
das
call
add
inc
pop
jo
jecxz
inc
mov
mov
jge
xor
push
fldl
and
and
push
pop
mov
loope
sub
test
ret
or
loop
arpl
xchg
mov
fnstcw
in
push
rolb
inc
cmp
cmp
cmpsb
jle
hlt
dec
push
lods
pop
sbb
std
scas
add
cs
jl
cltd
mov
inc
jne
ljmp
xor
mov
nop
testb
mov
dec
xchg
xchg
in
negb
addl
push
popa
das
popa
jo
mov
clc
jg
test
push
mov
sbb
in
add
popa
add
aaa
push
es
sbb
pop
xor
dec
sbb
inc
aaa
inc
push
inc
in
out
dec
in
push
jg
ljmp
push
push
aas
adc
dec
mov
cmp
cmp
mov
cld
decl
mov
in
and
inc
in
pusha
in
push
jns
xchg
in
xor
cmp
dec
outsb
xor
dec
mov
lea
outsb
inc
cmc
das
into
adc
mov
xor
nop
sahf
jmp
out
mov
jnp
xchg
adc
incl
push
aas
test
je
movb
fisttpl
fbstp
push
mov
btr
mov
mov
jno
xchg
mov
cmp
jne
xor
das
sarb
push
scas
push
and
xchg
hlt
push
cli
mov
add
test
xchg
jge
xor
xchg
pushl
push
cli
add
popf
push
dec
stc
jns
xchg
add
dec
and
lcall
data16
push
jmp
mov
int3
sbb
data16
iret
push
xchg
out
xor
lea
cltd
cs
sub
je
push
mov
testb
cltd
sarl
push
or
ret
pop
addr16
jmp
push
lret
neg
into
inc
daa
je
imul
mov
mov
call
cld
dec
mov
testb
ja
or
insl
call
outsb
fdivrs
mov
jne
xor
ja
pop
int
jns
push
call
pop
or
sub
iret
sub
jg
push
pop
or
loope
mov
aad
xor
inc
daa
inc
mov
pop
jae
dec
push
fistpll
jb
pop
pop
push
sbb
pop
imulb
jae
cld
add
xchg
sahf
push
and
xchg
hlt
incl
jg
inc
dec
sbb
add
and
jecxz
dec
clc
dec
push
repnz
push
stos
cwtl
pop
cmc
sti
mov
lea
mov
pop
lcall
lods
jns
add
mov
out
lods
inc
dec
std
fwait
xor
and
call
xchg
orb
or
or
mov
icebp
incl
inc
and
xchg
adc
dec
rolb
cli
es
jge
jg
clc
ja
aas
inc
jo
addr16
cmp
xchg
add
fildll
inc
lret
mov
jno
cmpsl
sti
sti
into
adc
inc
sub
clc
ficoms
push
out
mov
ljmp
jo
and
inc
jb
lea
mov
sbb
xchg
mov
inc
addr16
decl
add
add
mov
dec
cmpsl
add
aas
dec
push
jp
mov
insb
xchg
or
outsb
call
loope
lahf
xor
dec
cmp
cmp
arpl
add
mov
movsb
push
push
out
push
in
mov
pop
gs
in
adc
and
or
in
mov
add
jbe
push
gs
sbb
inc
sub
mov
sahf
fimuls
ss
adc
movsb
push
es
and
scas
mov
in
push
add
adc
lock
inc
jle
inc
mov
insl
imul
fstl
mov
mov
and
xchg
inc
call
adc
stos
adc
jmp
pop
rolb
mov
test
mov
jne
or
add
decl
test
and
mov
xchg
pop
adc
arpl
xchg
aas
inc
inc
add
std
ljmp
mov
or
cmp
cwtl
or
mov
dec
sar
jp
adc
fldenv
out
sbb
in
mov
js
sti
and
arpl
dec
lock
test
sbb
lock
and
mov
pop
data16
js
scas
mov
mov
inc
mov
ljmp
shlb
sbb
movsl
jg
or
loopne
jg
notb
insl
js
out
cmp
rcr
push
dec
inc
sub
add
or
pop
ljmp
mov
adcb
int
jb
lret
decl
fsubp
adc
subl
xchg
add
adc
cmp
shll
out
mov
xchg
xchg
test
adc
faddl
mov
xor
ljmp
cmp
es
sub
inc
testl
sub
outsb
roll
lcall
mov
cmpsl
sarl
std
ljmp
and
jge
sbb
imul
mov
incl
movl
pop
enter
mov
jo
mov
add
cmp
insl
call
sub
sbb
and
inc
mov
test
or
aas
pop
sbb
clc
cmp
nop
insl
add
push
mov
inc
gs
inc
out
cmpb
or
addr16
test
push
filds
cmp
pushl
pusha
fs
dec
jg
imul
cld
incl
sahf
stos
enter
fisubl
std
movsb
mov
push
enter
icebp
call
out
ret
hlt
arpl
subb
fiaddl
and
cwtl
aas
stos
out
mov
mov
xchg
xchg
xchg
fsubrl
jmp
std
call
pop
xchg
jmp
add
mov
push
insl
adc
mov
jmp
les
mov
pop
fs
lods
inc
into
sub
stos
adc
mov
and
inc
in
xor
mov
jb
movsb
or
ret
insl
cmp
pop
add
dec
sub
mov
testb
cwtl
cmp
std
test
js
call
sarb
push
pop
add
lcall
push
cmpsl
add
loopne
push
cmc
pop
push
testb
lods
cmp
mov
test
and
xchg
push
minps
shll
out
movsb
cmp
dec
rcpps
je
stos
incl
cmpsb
lds
push
pop
ret
add
adc
inc
andl
sbb
mov
jmp
arpl
sbb
inc
jle
in
jg
mov
push
pusha
movsb
dec
lock
pop
js
sbb
mov
jg
incl
jno
mov
sub
mov
bound
aas
fistl
stos
xor
xchg
loop
nop
cmpsb
cmpsl
jns
pop
mov
mov
push
adc
aas
jecxz
jg
inc
lods
mov
rolb
add
incl
xchg
leave
xchg
mov
jae
mov
jne
int3
add
les
arpl
or
bound
lcall
xchg
pop
movsl
aaa
push
fbld
sbb
sub
test
jne
mov
gs
cmpsl
icebp
jmp
push
jle
or
sbb
out
ss
jge
sarl
subb
ficoms
fldl
lods
sbb
ljmp
or
icebp
pop
ret
stos
cmpsb
data16
cmp
mov
stos
push
xchg
or
sub
ja
fidivrs
je
sbb
mov
pop
insb
bound
leave
adc
enter
out
xchg
jmp
cs
mov
xchg
sbb
fildl
test
sbb
sti
cwtl
xchg
or
mov
mov
xor
test
lods
mov
nop
mov
icebp
pop
rolb
sar
aaa
sbb
cmpb
inc
std
add
lcall
or
sub
gs
and
cwtl
test
add
adc
jg
push
sub
push
sarb
xchg
mov
es
imulb
insb
or
jo
push
fistpll
icebp
inc
push
pop
mulb
add
fs
pop
cmp
dec
repnz
leave
enter
scas
mov
ljmp
mov
push
jno
int
inc
adc
movsb
mov
ret
inc
fbld
popf
mov
xchg
adc
out
and
outsb
ret
mov
sahf
pop
mov
sbb
cltd
cli
test
sbb
ja
push
cmp
mov
jg
xor
std
sbb
dec
lea
xor
jg
decl
pop
icebp
fs
flds
mov
je
test
lods
jl
adc
cmpsl
incl
jne
inc
nop
mov
or
enter
jg
lcall
in
imul
pop
mov
sub
jmp
and
jb
inc
rorb
jge
fst
inc
xlat
pop
ret
xor
test
mov
call
pop
les
mov
es
push
sbb
in
test
xchg
xchg
mov
lods
mov
test
jbe
jbe
mov
movswl
cmp
shrb
addr16
outsl
jb
jmp
out
xor
loop
and
sbb
out
xchg
pop
jne
out
fcomip
call
mov
shl
cli
inc
push
push
rclb
add
movsb
clc
testl
popf
imul
icebp
cmpsl
insb
cld
sbb
jmp
shrb
jmp
into
movsb
sub
xchg
movsl
fbstp
mov
mov
fs
fmul
ljmp
adc
movsb
rorl
and
lods
xchg
inc
sarb
jecxz
push
cmp
inc
xor
stos
mov
enter
dec
and
jns
mov
into
mov
jg
cmp
jmp
xchg
add
adc
imul
arpl
in
pop
sar
lcall
inc
movl
dec
adc
insl
xlat
mov
dec
movsl
push
inc
jmp
test
loopne
push
stc
sbb
mov
bound
pop
add
mov
lods
decl
jge
pusha
fadds
xor
unpcklps
pushf
xorb
xchg
pushl
pop
adc
notl
bound
pop
jo
gs
push
add
out
mov
outsl
shld
call
gs
lods
sbb
cmpsb
jmp
mov
out
lods
jle
jns
dec
lahf
push
ret
std
lcall
dec
pop
mov
or
xchg
int
xchg
jae
out
filds
les
push
or
cmc
sbb
ss
mov
rol
test
std
ljmp
popf
jle
hlt
xchg
call
stos
loop
mov
mov
mov
sub
rcll
mov
jl
add
cli
call
lcall
mov
movsl
sub
mov
mov
inc
call
and
movsb
test
out
xor
nop
insb
xor
mov
test
insl
add
into
push
call
xchg
in
cmc
xchg
dec
dec
ret
enter
jnp
pop
dec
test
into
push
inc
adc
andl
mov
test
mov
xchg
in
es
movl
jg
mov
lret
test
xchg
xchg
fdivp
decl
iret
mov
xchg
xchg
or
add
popa
xor
fbstp
mov
out
push
sbb
mov
jns
jle
outsb
xchg
pop
mov
ret
mov
je
dec
pusha
dec
lods
cmp
mov
inc
xchg
add
das
nop
icebp
xchg
pop
into
mov
int3
mov
movsb
jecxz
jg
add
in
bound
push
add
mov
clc
inc
int
sub
or
sahf
cmpsl
test
in
and
cmp
jp
clc
cmp
ljmp
xchg
jmp
adc
enter
mov
outsl
mov
dec
int3
sbbl
lods
out
rol
mov
jno
sub
dec
iret
mov
mov
mov
xchg
or
or
mov
fsubl
mov
pop
aas
adc
cli
lods
push
jle
xchg
mov
xor
dec
es
mov
ljmp
data16
daa
xchg
sbb
test
sbb
push
pop
jmp
xchg
incl
repz
test
cltd
xor
add
inc
js
jp
xor
jl
push
out
sbb
jg
pop
lds
xchg
enter
adc
mov
rcll
mov
cwtl
mov
inc
push
lock
mov
incl
sub
out
mov
mov
andl
incl
inc
sti
push
out
jmp
test
lods
mov
xchg
jno
mov
xchg
xchg
sbb
pop
fidivrl
push
lret
xor
jmp
jnp
sbb
cmp
fwait
jae
or
pop
enter
test
aam
les
sbb
icebp
jne
fwait
xor
and
and
xor
out
insb
inc
cmpsb
mov
mov
les
dec
mov
mov
pop
std
cmpl
insl
data16
inc
or
push
jmp
cmpsl
mov
repz
mov
and
jo
pop
and
mov
fsubl
int3
fsubl
mov
mov
cmp
mov
xchg
lcall
or
fwait
test
add
pop
icebp
cmp
inc
sbbb
out
pop
ret
cmp
movsl
cwtl
fs
or
cmpsl
pop
nop
mov
fdiv
ljmp
push
sbb
adc
mov
xchg
aas
ret
out
lcall
jp
test
dec
fimull
push
hlt
decl
fidivrs
push
loopne
arpl
ds
add
dec
mov
imul
sbb
lea
push
je
stc
push
add
mov
jl
pop
push
xchg
std
and
idiv
das
sar
pop
sbbl
add
in
add
scas
aam
add
repz
lret
adc
in
jg
push
ret
out
xor
fildll
jbe
outsb
cmp
xchg
stos
or
adc
pop
clc
xor
lcall
push
movsb
mov
push
shlb
in
dec
imul
ljmp
je
popa
push
popa
dec
imul
ret
pop
out
ja
repnz
loop
call
insl
call
fsubrs
mov
xor
lcall
cmp
pop
jmp
jle
adc
inc
std
call
xchg
mov
or
inc
pop
into
test
pop
pop
cli
popf
mov
test
data16
xlat
std
jmp
xor
inc
xor
test
fldl
xadd
lcall
in
dec
fdivr
aam
lcall
ja
jl
data16
fnsave
adc
inc
pop
jmp
jmp
dec
std
pop
out
jnp
xor
sbb
and
fwait
xorb
xor
xchg
lock
and
sahf
rorb
bound
fisttpll
adc
in
lea
push
fs
push
insb
add
xchg
inc
shrl
addl
cwtl
ja
cld
ljmp
mov
pop
imul
idivb
lds
jl
cmp
dec
and
ja
loop
fs
push
mov
xchg
into
mov
into
in
add
inc
pop
pop
inc
inc
in
data16
adc
pop
dec
jmp
push
or
push
xor
inc
shll
or
cmp
sti
push
or
pop
sbb
and
mov
jmp
rcll
xor
dec
mov
dec
test
aaa
repz
popa
imul
pop
dec
clc
sub
sbb
xchg
les
rcrb
sub
out
or
bnd
add
in
mov
inc
and
stos
gs
out
adc
dec
cmpsb
repz
adc
sbb
icebp
pop
jno
cmp
lds
mov
jg
lea
lcall
or
lods
pop
cli
nop
jns
loop
xchg
sahf
fsubr
sbb
movsb
incl
imul
repnz
insl
sti
das
xchg
das
jecxz
mov
and
int
ss
loopne
arpl
mov
outsb
cmp
decl
inc
adc
xor
loope
xchg
push
and
xor
cld
inc
dec
or
dec
insb
ret
xchg
mov
sub
pmaddwd
aaa
or
cmc
xchg
std
fdivs
push
pushf
mov
call
inc
std
mov
lds
ss
push
movsl
aas
mov
push
cmp
insl
frstor
out
cmp
xchg
push
pop
jbe
test
repnz
and
adc
pushl
push
and
mov
inc
push
push
mov
ss
ds
loope
pop
scas
mov
lods
jbe
in
jns
or
pop
add
cmp
and
mov
clc
pushl
dec
and
es
jbe
push
inc
push
cmc
xor
adc
ja
outsl
dec
inc
inc
loopne
add
push
mov
outsb
testb
dec
negb
daa
imul
aaa
stc
sub
hlt
scas
pushl
daa
outsl
mov
ss
pop
lret
push
jae
xor
mov
je
sub
and
jne
movsb
inc
inc
arpl
push
shlb
adc
mov
xlat
call
outsl
enter
lods
fs
adc
vrsqrtss
xchg
ret
push
dec
stc
inc
push
and
daa
inc
lds
cld
mov
repz
jmp
pop
outsb
clc
or
out
fdivs
mov
js
xor
stos
pop
mov
cmp
push
mov
cmc
cmpl
data16
sbb
sbb
dec
out
lahf
adc
pop
loope
mov
imul
sarb
xchg
lds
xlat
out
mov
dec
pop
mov
out
inc
pop
jle
add
leave
sar
inc
xchg
shlb
lds
mov
adc
sbb
push
mov
pop
sbb
push
push
pop
add
jo
xchg
cld
outsl
js
add
cmpsb
and
cmpsb
lea
stos
or
inc
lcall
inc
pop
adc
inc
xor
jg
in
pop
mov
nop
mov
xchg
call
lock
xchg
cli
pushf
test
lds
sub
les
dec
mov
out
fldpi
popf
daa
adc
adc
cmp
cld
or
repnz
icebp
int3
sub
cld
lcall
inc
jp
push
in
and
arpl
mov
add
inc
cwtl
add
mov
shrb
push
stc
xor
loopne
cmp
or
push
cltd
sub
in
aaa
rolb
es
xor
jmp
std
bound
nop
dec
inc
and
sti
adc
sarl
into
sbb
xchg
mov
dec
leave
mov
jge
xchg
mov
dec
nop
movsb
fwait
stos
cmp
adc
out
test
sub
stos
cmp
scas
and
aaa
lock
and
xchg
xchg
cmpsb
mov
mov
cs
jmp
xor
out
add
mov
insb
mov
fs
int3
sbb
test
decl
ret
adc
or
add
scas
incl
push
test
lock
mov
clc
mov
jmp
and
mov
sbb
lahf
inc
lret
lcall
jmp
mov
fidivl
push
sub
repnz
dec
adc
or
test
cltd
sbb
test
ljmp
dec
xchg
add
scas
inc
mov
je
ret
stos
dec
fsubs
lds
icebp
lods
jp
mov
clc
pop
orl
ss
add
fimull
or
in
add
or
fstl
incb
xor
icebp
dec
iret
scas
or
push
mov
inc
fisubs
dec
fisttps
push
or
in
xor
push
push
orb
popa
mov
cld
add
into
xlat
cmpsb
les
stos
adc
jb
loopne
and
psubusw
dec
jg
push
jo
jno
std
or
jp
lds
lds
push
dec
in
and
sar
pop
cli
cmp
add
push
sbb
int3
addr16
test
mov
push
push
daa
inc
pushf
or
xor
or
and
jo
sbb
je
push
adc
inc
call
data16
das
dec
sbb
sub
jne,pn
es
les
cld
pop
iret
lea
enter
test
add
inc
jle
icebp
xor
es
mov
lock
icebp
aas
in
mov
mov
int
mov
or
mov
mov
test
jg
fwait
mov
mov
or
popf
mov
mov
movsb
mov
add
sar
pop
mov
pop
cs
fisubs
pop
fdivrl
xchg
test
mov
cmpsb
jb
cmp
incl
cmp
rcll
inc
call
sub
push
shrb
es
call
jmp
xor
ss
dec
mov
fisttps
jecxz
mov
cmp
push
sub
clc
dec
std
push
dec
in
in
adc
in
push
pop
xchg
pop
test
jne
mov
incb
das
clc
adc
sbb
or
test
repnz
jns
xlat
lcall
movd
xor
mov
push
call
rol
fcomip
adc
or
lods
loope
add
test
scas
jbe
lock
pop
scas
stos
cld
std
add
push
push
jae
sub
adc
sub
mov
nop
mov
cld
inc
inc
scas
mov
sbb
decl
mov
lods
mov
loop
jg
fimuls
stos
push
in
imul
int3
cmpb
pop
inc
mov
dec
out
or
adc
cli
pop
pusha
pop
jbe
lods
repnz
dec
pop
incl
xor
subb
aad
ljmp
jno
xchg
int3
mov
mov
loope
ds
outsl
ljmp
mov
add
test
std
repnz
cld
or
hlt
jg
test
add
inc
adc
cmp
mov
inc
sti
dec
test
xor
inc
aam
push
jbe
imul
sti
das
push
stos
ret
mov
cld
ljmp
andb
sarl
xchg
dec
dec
addr16
iret
pushf
push
fdivrp
push
es
adc
imul
mov
int
fdivl
dec
fwait
ja
repz
repz
inc
jae
inc
xchg
add
les
daa
xchg
fcoml
cmpsb
lds
adcl
clc
mov
insl
mov
or
das
call
mov
movsl
add
mov
shlb
movsl
aam
add
cmp
pop
xor
inc
outsb
cmp
inc
push
dec
sbb
faddl
pop
or
cs
or
sti
jg
call
mov
mov
aaa
push
fwait
sbb
sub
in
insl
fdivr
add
ljmp
jp
push
xor
jne
leave
sbb
out
loopne
pop
dec
scas
cmp
pop
fidivl
es
push
fidivrl
push
lret
add
or
jnp
mov
fs
sbb
mov
push
adc
shlb
cmc
add
xchg
test
adc
jecxz
mov
arpl
rcl
stos
fdivp
xchg
sbb
xor
aas
sar
dec
push
das
dec
mov
mov
adc
mov
cmp
or
mov
dec
jns
imul
aad
std
shrl
mov
lret
mov
cmp
fildl
mov
jp
mov
mov
or
enter
push
mov
and
mov
dec
ljmp
push
sbbb
cli
mov
dec
add
adc
loope
orb
hlt
sub
jg
testb
and
filds
mov
stos
jp
arpl
add
or
fwait
sbb
push
repnz
mov
mov
xchg
cld
xor
clc
jo
sub
and
fbld
sub
inc
rcl
pop
mov
sub
fucom
and
in
xor
loop
jecxz
jo
lcall
pop
mov
fdiv
jg
mov
mov
dec
testl
daa
xchg
sub
pop
cltd
and
les
mov
adc
xlat
or
mov
dec
sarl
ret
out
ljmp
pop
mov
push
pop
out
std
insb
mov
insb
test
or
xor
ss
cli
stos
iret
xlat
cmpl
cld
dec
xchg
nopl
in
sub
pop
jnp
cmc
dec
jmp
and
or
or
out
ljmp
movsl
cwtl
sbb
incb
pop
mov
shll
dec
push
mov
stc
into
and
popf
ljmp
pop
push
ud1
sbb
pop
or
and
pop
mov
xchg
pop
push
loope
lahf
scas
stos
mov
push
lcall
loopne
and
pop
sub
mov
jmp
jg
addb
call
rcr
pop
mov
and
arpl
jg
dec
and
fistps
mov
mov
pushl
lock
adc
int3
pop
push
mov
movb
inc
iret
sbb
push
dec
leave
scas
out
sar
ficomps
mov
jg
push
fwait
sub
lcall
xchg
repnz
cmc
dec
push
or
fsubrs
cltd
pop
gs
ja
or
inc
xor
dec
dec
jns
shrb
mov
repnz
jnp
jne
ds
nop
jg
lods
jg
leave
sahf
adc
jle
xor
call
sar
mov
scas
mov
dec
xchg
mov
jg
pop
orb
mov
cmp
call
das
mov
mov
jne
mov
mov
idivb
decl
and
xchg
push
mov
jg
repz
xchg
cmpsl
xchg
movsl
jnp
cmp
add
and
test
cmpsl
imul
push
inc
sub
and
cmp
push
push
aaa
pushf
xchg
cli
pop
mov
mov
rolb
add
or
mov
addr16
stos
ljmp
out
mov
les
xchg
stos
cmp
outsl
clc
mov
incl
push
repz
and
and
sahf
jbe
xor
push
call
pop
add
cmpb
push
mov
mov
pop
and
out
jg
mov
cmpsl
rol
cmp
mov
int3
das
clc
lcall
scas
js
out
movsb
jnp
fimuls
ret
rorl
out
cmpsl
in
mov
enter
int3
add
adc
xchg
jbe
xchg
les
adcb
add
cmp
mov
lret
clc
outsl
mov
faddp
sbb
and
in
aas
inc
clc
out
stos
fisubs
jmp
pop
jno
push
shlb
in
push
lcall
add
inc
jl
mov
dec
push
fidivrl
push
scas
nop
fdivp
movsb
add
dec
push
dec
lods
sbb
add
les
outsl
and
sarl
test
mov
lcall
aas
fwait
xchg
or
inc
outsl
xchg
or
add
cwtl
mov
xchg
pop
xchg
fidivrl
jb
mov
adc
push
push
testb
je
mov
xchg
add
dec
jmp
nop
fnstcw
addb
xlat
sub
mov
subb
mov
push
sub
push
mov
push
imull
dec
ret
lds
roll
fcmovbe
cltd
dec
int
push
je
pop
inc
push
into
sub
ret
shl
sub
ljmp
clc
nop
cmp
mov
mov
das
cmp
jbe
pusha
mov
xchg
std
pop
ljmp
scas
outsb
std
dec
fs
sub
inc
lods
ljmp
addr16
mov
je
mov
popa
loop
inc
clc
pushl
inc
imul
mov
iret
mov
mov
pushl
out
movsb
pop
inc
ret
sbb
jle
aaa
push
mov
inc
adc
mov
cmpsb
je
xchg
dec
jl
xor
and
in
pushl
sub
xchg
xchg
leave
cmpb
nop
nop
pop
arpl
add
imulb
sarb
sahf
inc
jle
or
ret
dec
cmp
sbb
out
xor
push
jae
xorl
push
sub
sub
aas
cmpb
add
mov
mov
ret
pop
jb
or
pop
decl
loopne
sub
mov
sbb
mov
mov
test
xlat
incl
outsb
xchg
cmp
jp
adc
ret
mov
lcall
fists
xlat
xchg
mov
mov
xor
mov
pusha
popa
popf
jmp
in
nop
push
push
insb
ret
jg
xor
fildl
push
inc
iret
test
xor
movsl
inc
mov
dec
xchg
mov
push
inc
sbb
mov
mov
jbe
jno
andl
dec
jnp
push
xor
in
dec
dec
and
xchg
pop
inc
js
and
js
sub
jg
into
jge
dec
inc
push
jne
outsb
imul
xor
mov
add
inc
jne
push
mov
add
xchg
lea
adc
mov
inc
jae
jns
jo
pop
pop
into
mov
sbb
dec
dec
dec
inc
ficomps
icebp
dec
insb
js
dec
mov
dec
fwait
mov
push
sub
fiadds
mov
mov
cmpsl
test
sub
into
rcr
lcall
xor
mov
push
dec
pop
js
push
scas
cli
test
dec
test
dec
dec
ret
cmpsl
adc
mov
outsl
dec
adc
mov
fdivrs
imul
jae
inc
mov
add
pop
outsb
cmpsl
or
aam
jbe
adc
mov
pop
sar
jp
stos
sbb
lret
xchg
lea
xchg
push
add
lock
decl
adc
sahf
sbb
mov
and
mov
int3
inc
jmp
popa
xchg
outsl
call
fwait
ret
mov
mov
add
nop
arpl
ljmp
adcb
flds
cld
notb
out
jne
jp
inc
jg
gs
data16
cmpsb
outsb
insl
push
loop
std
jmp
js
mov
mov
inc
push
inc
ret
xchg
inc
push
mov
out
push
je
lods
das
clc
arpl
dec
mov
push
add
lock
jmp
push
mov
gs
inc
dec
mov
push
or
in
mov
or
ret
sahf
xor
rcr
push
cld
test
mov
push
push
test
xor
movsb
push
scas
adcb
mov
cmp
push
icebp
pushl
aam
dec
jne
push
pusha
notb
and
inc
xchg
pop
ficomps
test
jmpw
ds
clc
sbb
mov
pusha
xchg
mov
ds
outsb
push
xor
ljmp
subb
pop
cmp
mov
bound
mov
dec
decl
push
lcall
dec
into
mov
rcll
fistps
icebp
rol
adc
test
mov
inc
outsb
fdivl
mov
lret
xor
inc
icebp
and
in
pushf
fimuls
lahf
jge
ja
lock
out
inc
fdivs
pop
loope
in
pop
dec
shlb
or
in
fs
lods
daa
mov
sub
adc
lcall
adc
mov
in
cli
sbb
or
nop
mov
lods
or
dec
idivl
rol
int
xchg
fistl
in
test
sbb
push
outsb
mov
dec
push
or
jmp
sub
lea
push
fistps
js
xor
and
mov
mov
lcall
add
ljmp
pop
hlt
pop
jbe
lds
mov
into
aas
cli
or
js
cmc
xorl
dec
pop
cltd
xchg
pop
inc
fidivl
inc
cmc
mov
scas
xchg
dec
jno
or
xchg
xchg
dec
inc
insb
ret
into
lock
popa
mov
push
pop
lock
pop
pusha
ret
popf
insb
jne
mov
test
inc
inc
pop
inc
xchg
rorb
je
ficoms
push
xorb
icebp
jae
sahf
dec
flds
decl
test
jnp
mov
int3
cwtl
or
jne
lock
push
mov
pop
stos
dec
rorl
enter
jg
push
inc
fiaddl
inc
jle
pop
cwtl
addb
inc
cmp
test
stos
popl
mov
out
jecxz
mov
movb
loope
imul
and
ja
insb
jmp
rorl
iret
mov
bound
cmp
mov
mov
fisubrs
pusha
aas
out
ret
and
cmp
movsl
fbstp
mov
insb
lods
mov
mov
sbb
jecxz
inc
aad
pop
push
inc
cmpsb
lds
mov
push
popa
ds
dec
fmull
test
roll
push
dec
pop
sahf
xor
hlt
push
dec
xor
mov
xchg
xor
sbb
xor
jl
add
push
dec
cmp
pop
sub
mov
lea
push
pop
xor
testb
test
dec
out
scas
pop
add
add
and
mov
mov
cs
in
xchg
pop
decb
cmpsl
adc
pop
push
push
inc
aas
jg
scas
test
popf
jp
jle
or
or
jbe
call
push
jns
or
dec
adc
sbb
ja
aaa
loop
push
lods
sub
xor
sbb
fsubrs
imul
aam
xor
dec
sbb
adc
cmpsb
inc
movsb
cmpsb
decl
pop
push
adc
push
dec
add
lcall
lea
xor
and
daa
inc
dec
jl
jmp
jb
mov
jge
cmp
inc
xchg
mov
rorl
sbb
jl
clc
jno,pn
jmp
mov
outsb
fsubrs
mov
cmp
sbb
inc
mov
jl
mov
arpl
dec
add
andl
int
daa
dec
decb
mov
and
mov
jecxz
mov
ficomps
inc
js
and
jae
addr16
inc
dec
js
or
in
and
sub
ljmp
daa
stos
pop
push
sbb
dec
fwait
insb
cld
dec
es
dec
xor
add
add
dec
ss
dec
out
jg
add
and
add
xchg
imul
mov
push
aas
test
push
je
push
stos
js
popa
dec
nop
cmp
cmpsb
dec
mov
mov
fldl
movsl
test
jle
lahf
incl
adc
push
xchg
dec
push
fs
adc
cmp
insb
mov
dec
jl
and
call
push
mov
dec
clc
mov
cmpsb
adc
pop
cltd
fnstcw
jle
clc
aaa
push
inc
cmp
xchg
sbb
pushf
pop
js
mov
cmp
and
mov
mov
imul
cmp
adcb
cmp
jnp,pn
add
popl
jb
pop
dec
loopne
mov
in
dec
mov
mov
movsl
pusha
out
call
mov
sub
sub
mov
push
call
mov
ja
es
xorl
pop
popa
rcrl
jg
bound
call
test
stos
lret
mov
add
or
sbb
call
pop
mov
jo
and
xchg
lcall
pop
icebp
jge
mov
mov
mov
cltd
and
jnp
inc
add
sub
dec
adc
inc
adc
dec
mov
dec
jg
fiadds
insl
bnd
jbe
jbe
aaa
stos
jbe
or
sbb
cli
xchg
repnz
insb
loope
xor
stos
outsb
jmp
lcall
mov
scas
and
popa
jl
mov
push
in
mov
inc
mov
les
xchg
and
jl
decl
mov
mov
pop
enter
stos
mov
movsb
sbb
mov
and
pop
mov
or
rcr
out
push
outsl
filds
pusha
mov
or
jl
xchg
rcl
lock
es
cmp
mov
inc
pop
fimuls
lea
sub
sbb
test
sbb
icebp
sbb
sbb
lcall
scas
fnstcw
lcall
andb
sub
xor
shlb
sub
ffreep
push
dec
cmpsl
add
mov
sti
sbb
ljmp
data16
cmpsb
mov
fwait
mov
jmp
cmovle
mov
fwait
sub
sbb
jl
call
js
faddl
adc
test
xor
das
mov
xor
lcall
push
cmpsb
mov
notb
fs
push
negb
push
mov
dec
scas
cmpsb
pop
scas
lea
sub
pop
mov
xchg
cld
dec
jnp
pop
mov
mov
mov
mov
fwait
cmp
mov
jne
test
add
pushf
cmp
adc
incl
mov
lods
sbb
ljmp
stc
add
mov
gs
or
outsl
fbld
push
add
lock
sarl
xor
decl
add
out
sub
sbb
fbld
movsb
and
mov
xchg
aaa
dec
call
add
mov
xchg
cltd
aad
mov
out
xchg
mov
jg
icebp
jmp
and
lods
mov
sub
out
sub
push
mov
fs
mov
xchg
pushf
pop
call
inc
jo
xchg
mov
pop
lock
mov
cmpsl
lods
outsl
jno
add
lcall
adc
mov
outsl
mov
jbe
xor
fnstsw
pop
jb
flds
mov
xlat
dec
inc
xor
push
push
stos
jnp
xor
mov
xor
xchg
lock
and
jle
jo
pop
pause
sbb
loope
jmp
push
aad
dec
sbb
jne
push
ss
stos
fs
out
mov
std
fldcw
insb
pop
pop
cmp
pop
sahf
es
or
insb
cmp
fwait
jg
mov
out
mov
jbe
pushf
in
jno
or
cltd
jo
pop
xchg
xchg
mov
pop
pop
fisubrl
dec
push
push
dec
push
cmp
inc
clc
call
jb
and
mov
jge
inc
adc
imul
cld
push
je
cmp
movsl
push
add
cmp
mov
inc
inc
sahf
inc
xchg
out
mov
cmp
test
jb
cmp
mov
arpl
cmp
push
jle
sbb
jnp
sub
mov
in
hlt
ja
pushl
push
ret
movsb
jns
pop
out
xchg
mov
xlat
add
negb
pop
or
cld
cld
push
movsl
adc
cs
es
clc
push
rclb
fbld
stc
sub
es
cmp
adc
shrl
mov
push
sbb
sti
cwtl
xchg
jmp
in
sub
push
mov
sub
lds
jno
or
test
movsl
add
and
stos
or
jg
cmpsl
and
and
loopne
inc
or
fdivrl
mov
mov
decl
test
mov
aaa
inc
repnz
pushf
cmp
lcall
cmpsb
rep
xor
mov
and
xchg
mov
dec
xchg
aaa
jle
mov
cmp
pop
sbb
jns
sbb
mov
xor
lcall
xor
mov
popf
loopne
or
pop
scas
add
cmp
sub
mov
subl
jg
mov
incl
xor
or
push
dec
std
cmpsb
daa
add
adc
pop
test
fimuls
push
mov
mov
in
dec
imul
jne
mov
mov
insl
inc
call
into
sbb
mov
dec
cld
stos
inc
jbe
jecxz
ljmp
add
cmp
mov
mov
popf
gs
sbb
arpl
xchg
cmpsb
jbe
das
add
mov
mov
mov
sub
divb
sub
outsl
mov
mov
jg
scas
mov
mov
dec
scas
push
fs
or
arpl
inc
add
dec
cmpsb
mov
mov
ljmp
movsb
xchg
cmpb
cwtl
lds
gs
leave
add
decl
ja
ja
inc
inc
out
cmp
in
push
add
xor
decl
popf
in
ds
and
or
dec
lods
adc
sbb
test
and
jno
stos
ja
mov
insl
out
adc
mov
sub
mov
insl
testb
int3
mov
mov
add
dec
loopne
cli
mov
scas
push
mov
or
mov
jo
mov
push
cld
sub
xchg
dec
shl
ja
inc
ja
xor
es
ss
nop
hlt
jmp
rorb
jp
add
adc
add
lret
add
dec
dec
jp
push
cmp
jg
mov
enter
lods
xchg
jae
jae
pop
js
mov
es
shlb
mov
mov
iret
sbb
push
int3
mov
mov
cmp
mov
in
ja
push
rcrb
cld
sub
lock
xor
push
inc
out
call
xchg
stc
jno
cmp
adc
adc
pop
pushf
cmp
mov
push
dec
clc
mov
xlat
mov
sub
iret
push
xchg
jl
aaa
std
loopne
inc
inc
lcall
pusha
lret
or
les
inc
mov
cmp
out
test
lahf
jl
jbe
and
lcall
mov
data16
ss
mov
loop
inc
fisubrs
pusha
imul
inc
push
pushl
mov
cmp
jae
lcall
pop
sarb
inc
cli
push
or
es
jle
imul
cltd
push
lret
roll
lcall
ds
mov
push
adc
dec
les
sahf
lcall
cmpb
ret
xchg
cltd
enter
pop
lcall
xor
orb
push
push
dec
and
addr16
push
jle
dec
rcll
or
and
lcall
stos
insl
mov
hlt
pop
loopne
leave
pushf
test
andb
ret
pushl
out
and
stos
or
add
mov
or
jb
or
nop
and
xor
add
movsb
inc
add
or
fstpt
cmp
adc
push
jg
push
xchg
adc
and
loope
js
dec
incb
popf
sti
inc
std
gs
pop
bound
cmp
xchg
adc
scas
mov
add
mulb
imul
rep
ret
xor
add
test
inc
lock
sbb
cli
pusha
xchg
stos
lcall
adc
addb
or
fidivrl
push
adc
adc
inc
ljmp
inc
push
roll
cmpsl
ret
push
jbe,pt
test
ljmp
decl
pusha
js
pop
push
mov
inc
dec
cmpsb
addps
das
push
decl
adc
mov
mov
lods
push
stos
cmp
out
ret
pop
inc
scas
xchg
std
xchg
and
cmp
out
xor
add
cwtl
arpl
jg
test
mov
sub
push
aaa
dec
xor
and
call
cli
mov
adc
mov
dec
insl
xchg
mov
and
test
pop
outsl
or
mov
xor
sahf
add
mov
push
fs
mov
jg
push
add
shr
sarb
pop
stos
jle
and
push
adc
push
jbe
mov
mov
nop
mov
sbb
pop
xchg
jne
jecxz
rcl
pop
xchg
mov
js
or
pop
fisttps
arpl
add
scas
jp
out
clc
or
cltd
mov
pop
mov
jns
inc
adc
mov
add
cmp
outsb
cwtl
jb
incb
cld
push
adc
add
outsb
cmp
adc
movsl
cmpsl
test
mov
in
cwtl
mov
jg
out
int3
xchg
push
mov
ljmp
add
es
and
lods
mov
je
pop
insl
lods
mov
mov
sahf
fsubs
jne
mov
mov
xchg
jne
mov
mov
fwait
push
add
mov
jbe
nop
xchg
loope
cld
push
dec
pushf
xchg
cltd
movsl
pop
movsb
mov
xchg
out
sar
lcall
or
in
push
in
dec
adc
and
sbb
inc
xchg
mov
push
xchg
add
add
pushl
jb
dec
std
daa
test
faddl
ljmp
aam
insl
inc
jp
rclb
mov
inc
jg
inc
or
adc
jnp
test
lods
lret
mov
data16
mov
fbstp
sti
xchg
cmp
roll
lods
test
lcall
mov
movsl
test
test
addr16
pop
jne
sbb
ja
add
shlb
test
mov
or
cltd
mov
mov
xchg
cmp
adc
test
add
dec
xchg
out
add
mov
sub
cmc
adc
jmp
or
hlt
sub
mov
cmp
pop
call
das
cmpsb
fsubl
push
cs
ret
adc
pop
lock
sbb
std
out
mov
jo
mov
fsubrp
std
mov
mov
pushl
cwtl
sub
xchg
inc
pop
xor
or
leave
sub
ljmp
dec
pop
les
iret
sbb
mov
ret
scas
out
push
movsl
jmp
nop
mov
cmp
rcrl
dec
pop
cmp
xchg
pop
lea
inc
pop
lock
subb
in
inc
sahf
mov
test
push
leave
subl
ljmp
stos
cmp
outsl
dec
call
movsb
dec
fwait
scas
call
int
std
lahf
xor
dec
cmp
lea
mov
test
jecxz
sub
mov
inc
pop
sbb
xchg
mov
lods
into
push
mov
xor
popf
adc
stos
add
out
cmp
cmpsl
mov
sahf
in
mov
cs
jl
imulb
pop
sub
dec
cmpsb
mov
test
sub
dec
mov
test
adc
dec
ret
xor
dec
xchg
fistps
xchg
jo
ljmp
mov
xlat
and
outsl
cli
and
mov
test
outsl
outsl
push
pushf
mov
fisttpll
pushf
std
pop
sbb
xchg
and
jo
dec
out
add
adc
mov
sub
push
and
fbstp
fidivs
cmpb
lea
leave
es
ja
pop
push
sbb
mulb
mov
fimuls
callw
push
mov
inc
loop
mov
dec
aaa
adc
adc
shrb
ss
mov
push
xchg
mov
insb
outsb
and
mov
dec
adc
cmp
int3
out
scas
mov
inc
fcompl
iret
mov
and
dec
cmpsb
pushl
clc
xor
xchg
stos
mov
xor
nop
fimull
movsb
mov
data16
jnp
jno
mov
sar
pop
lret
mov
jbe
dec
iret
mov
ja
sbb
cs
jecxz
imulb
add
mov
lock
xchg
inc
push
push
jmp
cmpsb
lea
cmp
js
dec
out
clc
decl
push
or
add
jb
push
lret
jbe
aad
data16
cwtl
jle
loopne
lods
sti
mov
xor
cmp
movsl
punpckhdq
das
shr
push
or
fistpl
sti
pop
movsb
test
mov
and
loopne
pop
fwait
jae
sub
cld
dec
std
loopne
jge
push
test
clc
sarb
pop
push
std
aas
cld
jg
mov
mov
sahf
out
mov
mov
mov
mov
add
sbb
pop
sti
sub
fisubrs
mov
rcrb
sub
cmp
xor
rol
rorb
fistpll
imul
dec
cmp
popf
inc
pop
lods
call
sbb
and
or
loopne
es
repnz
insl
jbe
cmpsb
cmp
add
dec
jle
ljmp
adc
hlt
mov
inc
and
sbb
push
add
ss
xor
punpcklwd
pop
into
aas
cmp
je
cmc
rcrb
jl
add
mov
fiadds
adc
sbb
stc
sub
or
jecxz
cwtl
add
inc
xchg
into
push
pop
xorb
shrl
movsb
scas
mov
sbb
pushf
pop
xor
push
lock
mov
sbbb
ljmp
daa
inc
add
mov
and
jge
stc
adc
adc
out
cmp
cmpsl
xor
mov
push
outsb
insb
and
test
xchg
filds
jecxz
mov
sbb
stc
mov
fsubrl
jge
mov
lock
adc
sbb
push
cs
jo
mov
pop
shrb
and
into
push
sti
mov
mov
ja
ja
mov
push
mov
and
and
test
ss
mov
push
in
icebp
xchg
pop
imul
fildll
test
out
in
or
mov
fistpll
add
sbb
and
aaa
jbe
push
mov
add
mov
jle
cmpsb
cmp
mov
addr16
sti
cmp
push
adc
jno
fidivs
push
sbb
lock
addl
divl
mov
adc
lea
call
aad
das
cli
xor
push
daa
jbe
sbb
call
outsl
mov
push
push
std
and
test
cmp
lods
imul
jae
jbe
pop
dec
aas
js
and
jae
cmpsl
push
add
out
into
add
or
xchg
xor
lods
or
mov
lods
push
mov
insl
xor
int3
andl
xor
cmp
cmp
pop
clc
jg
ja
mov
and
mov
iret
out
add
push
es
in
xor
lea
xor
test
sbb
das
mov
out
js
inc
inc
test
mov
or
inc
or
dec
insl
das
call
gs
stos
jbe
xchg
fwait
incb
insl
mov
aaa
inc
push
bound
pusha
push
sub
in
insb
repz
cld
scas
add
or
shll
mov
stos
jecxz
ds
add
shlb
xor
sbb
in
xor
add
cld
dec
mov
cmpsb
xor
dec
jmp
fs
lcall
inc
pop
stos
and
xchg
pop
inc
mov
jl
sbb
inc
cld
rorb
push
mov
jno
inc
or
out
adc
je
push
data16
pop
mov
add
mov
jp
and
int3
fldcw
adc
add
inc
into
cmp
cmp
and
mov
inc
xchg
mov
orb
xor
sbb
popa
enter
mov
cld
gs
add
jl
sbb
xchg
adc
ds
jp
inc
das
sub
or
push
mov
mov
dec
push
mov
bound
jo
ja
ljmp
add
dec
lock
stos
or
xor
daa
push
es
call
out
mov
jb
dec
xor
and
push
rolb
and
and
sti
cmp
lret
inc
decb
es
push
sarb
inc
adc
push
inc
std
mov
or
cmp
add
dec
out
push
adc
test
sub
sbb
xchg
or
dec
out
cmp
lods
popa
jecxz
nop
outsb
mov
aas
inc
mov
dec
rorb
out
xor
or
push
mov
mov
push
cli
push
cwtl
sti
incl
scas
and
mov
or
es
icebp
push
pop
iret
cmp
cmp
popa
inc
jne
gs
jmp
dec
adc
cmp
imul
jbe
cmp
pop
pop
and
fwait
add
stos
fs
mov
lock
mov
outsl
inc
cli
xor
fnstcw
mov
mov
mov
or
xchg
lock
je
push
mov
mov
inc
mov
popa
cmpsb
cwtd
sbb
pop
pop
sbbb
lret
jecxz
push
test
bound
test
pop
nop
aaa
popa
ficoms
pop
jns
jl
push
hlt
adc
jp
rclb
jp
les
jle
outsl
decb
xchg
or
popf
aad
scas
cmp
mov
or
mov
dec
in
imul
test
cmp
enter
call
cmpsb
es
push
in
push
int3
or
rorl
dec
add
pop
stos
xchg
std
cli
scas
mov
loop
outsl
mov
int3
mov
imul
dec
push
push
mov
outsl
dec
sti
cs
addl
dec
repnz
lret
jle
ljmp
das
sahf
outsb
int
out
sub
dec
ret
adc
mov
das
gs
or
add
ds
fists
mov
cmpsb
jle
dec
int3
mov
jg
cmc
dec
in
mov
inc
push
iret
xor
jns
adc
dec
jmp
mov
or
sbb
dec
add
push
mov
mov
and
sbb
adc
xor
adc
xchg
adc
aaa
adc
adc
cmpsb
decl
pusha
cli
xchg
inc
in
fs
iret
and
ljmp
mov
les
fildll
das
jecxz
mov
mov
clc
insl
jge
cmc
mov
adc
jo
mov
lock
nop
jo
adc
pop
jae
arpl
mov
cli
lcall
je
cmp
sarb
dec
test
in
dec
inc
xchg
jmp
push
daa
js
lcall
jg
ficoms
jae
scas
or
xchg
decb
cmp
addr16
jecxz
adc
xchg
outsl
in
rclb
call
mov
adcb
pop
retw
add
jp
mov
addr16
mov
dec
mov
jo
push
xchg
fbld
sahf
xchg
cltd
sbb
jg
add
sti
lahf
loope
xor
push
or
adc
stos
sub
mov
je
mov
fldt
add
adc
ja
pop
std
loope
push
cwtl
dec
and
outsl
inc
mov
mov
sti
mov
push
movsl
mov
jmp
dec
pop
and
outsb
cld
cmp
mov
push
add
mov
and
movl
bound
mov
fistpll
xchg
mov
loope
pusha
loope
hlt
outsl
out
aam
test
loop
dec
idivb
loopne
sahf
dec
popa
add
test
and
cld
lcall
mov
iret
enter
mov
hlt
into
and
inc
add
pop
sub
fistpll
sub
mov
cmc
leave
push
scas
mov
scas
mov
fs
out
movb
aaa
int
jbe
jo
mov
in
stc
cmp
push
add
jns
and
cmpsb
mov
pop
mov
sahf
loopne
cld
pusha
fisttpl
cmp
notl
inc
or
movsl
sbb
jns
out
mov
mov
dec
movsl
mov
sbb
scas
mov
ficomps
mov
xor
fwait
loopne
dec
mov
test
push
mov
gs
mov
mov
adc
popl
out
adc
mov
mov
or
das
jne
shrl
ret
cmp
negb
mov
leave
adc
mov
jne
xor
inc
add
cli
pmulhuw
fwait
in
nop
mov
sahf
cmpsl
pushf
ret
mov
ja
push
mov
mov
movsb
sub
and
sbb
nop
inc
jl
jne
fldt
xchg
stos
xchg
pop
xchg
cltd
xchg
repz
scas
xchg
test
decb
aam
int3
push
loopne
dec
sbb
sbb
dec
into
mov
mov
fsubs
jge
mov
mov
sti
ss
aaa
das
pop
and
cltd
mov
cmp
adc
fdivrp
lds
icebp
push
xchg
xor
inc
adc
mov
or
sbb
adcb
mov
pop
or
push
add
repz
xchg
in
loop
in
repnz
mov
in
lods
mov
sub
xchg
inc
mov
dec
or
mov
and
xor
cwtl
or
inc
rclb
mov
cwtl
cltd
call
jbe
fildl
mov
ljmp
cmpsl
fldl
mov
mov
sub
cld
pop
push
ror
xchg
or
test
loope
cld
pop
out
mov
mov
outsl
filds
decl
bound
inc
push
mov
inc
ljmp
and
call
adc
mov
xchg
pop
sti
fwait
out
mov
jmp
xchg
dec
movsl
fwait
cwtl
negb
movsb
sbb
add
ja
lahf
inc
pop
jo
ljmp
mov
mov
and
dec
scas
mov
jno
cld
test
decl
sbbl
push
mov
push
push
push
flds
test
xchg
test
std
and
int
pop
std
call
out
and
aam
xchg
adc
xchg
sbbb
add
xor
cmc
imul
xlat
sub
cmp
or
mov
cmpl
imul
jle
xor
sbb
jns
addr16
add
cmpsb
incb
pop
cli
in
outsl
inc
enter
mov
inc
jle
insb
pushf
mov
decl
cs
adc
div
mov
cltd
nop
stos
pop
hlt
call
cmc
mov
mov
sti
std
and
xchg
pop
or
mov
imul
xchg
inc
add
xlat
mov
dec
pop
filds
add
push
mov
lods
push
mov
push
insb
xlat
or
incl
cld
out
mov
addr16
scas
rorl
sahf
xlat
cwtl
popa
stos
jb
cmp
rorb
int3
sub
cmp
dec
mov
arpl
xchg
mov
scas
rcrb
jo
jno
mov
mov
cmc
mov
push
mov
jg
out
sub
xchg
xchg
cmp
mov
inc
mov
sub
ret
push
ss
shll
mov
add
push
inc
aad
add
js
aam
out
mov
push
mov
dec
pushf
cmp
shrl
into
xchg
outsl
fdivrp
jmp
lods
negl
shrb
shrb
subl
cmpsb
sub
mov
mov
push
std
pushf
insb
and
mov
jl
mov
mov
out
mov
cmpsb
inc
push
mov
ficompl
or
jns
into
out
xchg
mov
daa
sti
enter
ret
nop
mov
xchg
mov
push
cwtl
and
lods
xor
xchg
mov
mov
js
popf
lahf
lods
cmpsl
out
hlt
and
and
cs
mov
jg
pop
repz
leave
out
lcall
xchg
fstl
jmp
fwait
xchg
rcrl
and
and
or
aas
stos
imul
mov
sub
mov
jg
negb
and
push
into
and
push
stos
xorb
int
jno
dec
pushf
add
and
mov
dec
dec
aam
outsb
add
jns
jmp
test
insb
lods
pop
cmc
push
pushf
dec
mov
fidivrl
clc
decl
and
xlat
and
add
cmpsl
cwtl
dec
push
jmp
mov
mov
mov
push
push
pop
pop
rorb
push
movsl
mov
aam
dec
xor
test
cltd
ljmp
jg
pop
add
loopne
neg
adc
fmuls
inc
jge
sub
mov
push
cmp
mov
les
mov
push
test
fiadds
mov
insl
arpl
pushf
push
mov
cmc
mov
out
bnd
pop
jae
repnz
mov
pop
dec
fadds
inc
adc
adc
push
pusha
lahf
inc
iret
add
sub
cmpsb
push
xchg
das
out
fdivrp
add
push
out
lcall
cmpsb
mov
cli
ret
cmpsl
and
aas
sub
scas
mov
adc
cs
mov
cmp
aam
sbb
mov
jo
jle
outsl
ss
push
xchg
adc
sti
cmp
out
lcall
fwait
adc
test
pop
lods
leave
cmpsb
cmpsb
mov
jbe
jmp
push
cmp
jle
inc
mov
and
stos
mov
or
insb
shlb
addr16
mov
pop
fldl
inc
jmp
mov
push
dec
jne
dec
jnp
test
fs
dec
jne
idiv
lcall
push
dec
inc
arpl
push
xor
jp
je
dec
and
adc
push
cli
pushf
pushl
je
inc
pusha
jp
fmull
dec
scas
fs
mov
imul
inc
jno
jae
ja
mov
dec
je
push
pusha
inc
lret
add
inc
push
imul
push
int
mov
fisttpl
gs
push
mov
insb
lods
push
movsb
dec
test
fwait
int
dec
push
add
repnz
cmc
jbe
mov
insb
in
scas
popa
stos
outsl
mov
insb
ss
int
insl
push
pop
push
data16
mov
sub
pop
addr16
ljmp
imul
fs
mov
push
outsl
dec
jnp
aas
pop
mov
insb
adc
dec
sub
pop
aaa
fwait
int
std
push
pop
mov
pop
ja
pop
pop
xlat
pop
insb
data16
jne
jb
jb
push
call
inc
or
aaa
push
adc
and
shrl
jo
add
call
pop
adc
adc
test
adc
data16
pop
stc
or
stos
aas
nop
call
inc
aaa
jb
sub
cld
decl
or
cmp
or
sbb
pop
jo
push
adc
and
add
push
sbb
cmp
cmp
pop
and
push
sbb
cmp
das
ds
es
call
dec
pop
sub
sub
arpl
adc
daa
cmp
pop
stc
push
ja
add
cmp
sbb
xchg
jg
and
and
and
pop
push
cmp
push
push
add
jnp
sbb
jg
pop
stc
and
adc
inc
sub
add
sbb
xor
comiss
call
adc
xor
adc
xor
sub
aaa
ss
aam
cwtl
imul
jle,pn
daa
xor
ljmp
add
and
add
sbb
aas
sbb
and
or
sub
and
add
sub
adc
or
aaa
adc
push
adc
add
pop
call
push
cmp
pop
push
add
pop
or
xor
adc
or
cmp
sar
fstpt
pop
push
xor
cmp
add
xor
xor
add
daa
add
xor
xor
inc
xchg
or
fnstsw
or
push
jne
mov
and
push
dec
push
es
ljmp
sub
sbb
dec
mov
push
add
adc
or
pop
jne
sub
cmpb
adc
sub
sbb
outsb
bound
xor
aaa
or
inc
jae
subb
mov
adc
loop
imul
insl
mov
mov
fisubs
xor
pop
je
out
fimuls
mov
das
inc
sub
stc
sbb
push
fadds
sub
aaa
and
adc
mov
adc
jne
dec
xor
pop
cmp
jo
dec
jne
xor
push
or
add
xor
adc
mov
ss
sub
sub
imulb
jb
data16
mov
jno
gs
clc
ss
sub
and
es
push
subb
pop
sub
jno,pn
out
insb
mov
push
xlat
dec
mov
xor
push
das
int
mov
cmp
adc
mov
xor
sbb
xor
mov
stc
insl
cmpsl
aam
push
mov
negb
aas
fwait
int
mov
adc
sbb
insb
ss
adc
and
mov
xor
inc
mov
ror
repz
shll
hlt
lcall
add
pop
pop
jne
cmp
insl
js
nop
int
push
call
mov
jmp
testb
jg
jl
jg
pop
sbb
es
xchg
jg
xchg
bound
je
push
adc
add
sub
sub
and
js
stc
add
dec
stos
aam
decb
aas
outsl
in
bound
sbb
add
aas
sub
sub
fmulp
repnz
scas
push
fildll
and
mov
rcr
add
or
cmpsb
jnp
sbb
adc
and
push
imulb
add
sub
jecxz
xor
or
xor
daa
dec
cmp
push
popa
inc
sbb
push
and
outsb
push
mov
or
cmp
jbe
ret
sub
mov
push
daa
ds
or
mov
stos
push
decl
xor
add
aas
cs
sub
pop
pop
add
daa
push
and
push
outsb
pusha
push
jmp
sub
adc
aas
cmp
sub
jge
and
orl
arpl
push
sub
and
out
insl
push
lcall
inc
jbe
jp
data16
pusha
jge
push
xor
mov
pop
sub
jb
pop
jp
bound
outsb
jle
incb
outsb
or
sbb
sbb
fdivrs
cld
xchg
icebp
push
mov
jb
xor
push
push
gs
xorl
sbb
cli
xchg
mov
sub
add
add
xor
adc
stos
add
sub
mov
adc
xor
xor
and
xlat
mov
xor
add
push
ss
cmp
xor
mov
pushl
imulb
or
aas
and
cmp
sbb
sbb
adc
add
outsl
cmpsb
jg
xor
add
add
and
inc
xchg
fisttps
or
subb
loope
and
push
add
jle
xor
pop
inc
xor
mov
xor
push
shlb
or
in
js
dec
mov
popa
leave
test
push
push
inc
jp
dec
arpl
push
dec
inc
out
cli
decl
addr16
pop
jge
jne
pop
pop
bound
push
inc
pop
je
inc
pop
pop
dec
bound
cmp
push
jne
pop
gs
outsl
jl
dec
push
fs
inc
xchg
cld
jmp
jb
je
jne
cmp
sub
sub
and
push
sbb
sub
sub
and
daa
ljmp
and
out
sub
pop
add
add
and
pop
decb
sbb
add
add
sbb
xor
adc
cli
inc
inc
roll
xchg
jo
add
scas
jl
out
push
cld
filds
xor
cmp
and
cmp
lcall
or
inc
sub
inc
sub
fs
sbb
add
mov
cmp
daa
ja
sbb
sbb
ljmp
add
sbb
inc
adc
or
and
mov
jle
in
or
and
push
outsl
mov
pop
cmp
inc
jns
outsb
dec
sbb
dec
xor
and
jmp
sbb
pop
jae
adc
insb
adc
xor
push
add
sub
cmp
lcall
sbb
or
and
add
ljmp
pop
add
or
test
adc
or
add
add
adc
adc
sub
adc
adc
ljmp
and
and
fs
sbb
push
aas
outsl
add
sub
stos
pushl
xor
sbb
sub
and
cld
jg
incl
push
cmp
push
ds
dec
add
jecxz
ja
inc
es
adc
push
push
xchg
or
cmp
or
adc
add
or
mov
add
sub
outsb
call
adc
sub
aam
lret
jo
and
fcomip
add
sub
es
xor
bound
add
push
sbb
or
call
cld
xor
push
or
out
or
add
sub
cmp
aaa
sbb
add
sar
sub
sub
add
pushf
adc
pop
and
add
pushl
push
es
cs
add
inc
xor
or
cld
pop
addb
pop
push
pop
clc
sub
add
imul
mov
push
add
sbb
cmp
cs
sub
sbb
int
icebp
es
and
add
cmp
dec
lock
xor
or
inc
out
imul
pop
in
and
sbb
or
sub
push
mov
ret
hlt
decl
sbb
sbb
push
or
cmp
cmp
jne
sti
incl
cmpsl
and
push
dec
bound
js
add
pop
cmp
ss
adc
sar
jg
aaa
cmp
or
pop
sbb
sub
pop
aaa
gs
xor
pop
inc
icebp
das
add
jge
out
insb
arpl
sub
sub
incl
or
adc
popa
sub
out
cmp
pop
lret
je
pushl
sbb
add
and
or
push
decl
inc
inc
jne
push
and
cmp
movups
sub
sbb
mov
fidivl
or
pusha
inc
pop
push
lret
test
xor
and
add
add
sbb
sub
je
pop
push
mov
fcomip
jg
inc
pop
enter
aaa
jno
or
and
adc
push
and
mov
cld
sbb
cvtps2pi
cs
mov
xchg
xor
or
ss
imul
push
loop
inc
jp
mull
in
pushl
or
adc
and
lret
adc
insl
add
sbb
fbstp
adc
pop
push
jne
into
pop
je
xor
lcall
add
cmp
and
aas
and
or
add
add
sbb
mov
dec
dec
bound
pop
js
xor
or
insb
ja
sbb
cmp
xor
dec
adc
repnz
call
inc
sbb
cs
jle
data16
arpl
or
adc
add
adc
clc
pop
cmp
into
clc
decl
and
and
pop
dec
and
inc
je
jae
jno
mov
dec
outsl
mov
or
push
sub
imul
jg
gs
sbb
imul
sbb
adc
jl
jp
cmp
xor
or
sub
push
and
push
sbb
ljmp
jae
addr16
jo
sub
inc
or
cmp
fwait
mov
and
aaa
dec
and
xor
xor
adc
adc
mov
sub
and
sbb
ss
or
sbb
add
add
aaa
cmp
mov
in
add
aaa
or
adc
scas
mov
inc
sub
push
xor
adc
add
cmp
cmp
lcall
cmp
and
add
add
sbb
or
cmc
aas
sbb
sub
jae
popa
xor
pop
aad
clc
push
daa
sub
and
mov
daa
sub
loope
cld
xor
xor
cmp
xchg
inc
push
lock
jns
pop
jg
dec
or
sbb
push
sbb
adc
es
cli
decl
scas
or
cmp
or
das
and
jns
sub
ja
inc
jl
pop
cmp
clc
add
insb
add
and
xorb
cld
incl
cmp
cmp
push
sub
dec
xlat
inc
inc
sub
sub
xor
or
push
rolb
sub
inc
jg
jno,pt
sub
xor
add
pop
mov
add
adc
adc
pop
add
or
lcall
push
or
add
pop
ds
pop
bound
dec
inc
data16
pushl
cmp
sub
pop
xor
add
es
push
pop
in
ljmp
adc
adc
and
sbb
insl
jae
add
fdivr
or
outsl
dec
push
dec
xchg
jae
aas
mov
cld
push
push
jne
outsl
out
jno
xchg
pop
andb
jo
enter
incb
mov
addb
imulb
xchg
js
arpl
dec
xlat
fiaddl
add
jns
push
mov
jg
dec
or
jnp
push
pop
or
pop
sbb
pop
add
and
and
mov
fidivs
idivb
sbb
adc
adc
or
sbb
sbb
jne
mov
and
xor
push
daa
jbe
push
or
cmpsb
imulb
adc
xor
jmp
add
and
pop
and
ret
add
je
ja
and
cmp
cmpsb
pop
out
pop
and
sbb
push
pop
sbb
adc
jp
and
je
decl
add
add
das
das
add
add
dec
or
incl
add
cmp
and
aaa
das
scas
adc
pushf
es
cmp
dec
out
sub
adc
cmp
js
or
decl
mov
arpl
sub
push
cmp
sbb
ds
aad
sbb
sbb
das
xor
pop
idivb
xor
sbb
sbb
adc
pop
sbb
and
cmp
fwait
in
adc
testb
sub
sub
ljmp
ljmp
es
adc
out
or
adc
packssdw
jg
and
mov
sub
aas
xor
jbe
and
sub
push
adc
sub
xor
inc
sub
and
and
push
or
mov
add
gs
adc
adc
sbb
pop
cmp
push
rcrl
lods
adc
xor
adc
sbb
xor
cli
lcall
cmp
sub
push
or
jo
and
mov
jbe
or
cmp
adc
and
gs
xchg
gs
stos
fidivs
mov
push
and
pop
icebp
add
add
mov
cmp
xor
daa
ss
push
adc
mov
adc
pop
adc
testb
fsubp
and
inc
xlat
adc
and
cmp
in
push
or
or
cmp
add
push
adc
pop
add
fdiv
mov
outsl
adc
and
xor
dec
popa
daa
xor
sub
push
jne
insb
movsb
xor
fs
pop
jg
outsl
cmpsb
dec
aaa
aas
pop
sub
cli
push
pop
sub
push
sbb
push
add
push
pop
or
daa
xchg
and
add
adc
or
sbb
xor
sub
inc
std
pop
icebp
jg
sbb
adc
js
adc
pop
and
dec
data16
sub
pop
dec
aaa
sbb
pop
push
push
ds
rolb
xor
sbb
mov
adc
xor
mov
ljmp
adcb
imul
push
push
adc
clc
das
xor
inc
sbb
aad
add
add
fisubrs
cmp
and
pushl
or
insb
push
and
adc
aaa
and
fimuls
push
push
xchg
sub
jl
icebp
sbb
cmp
fisubs
xor
xor
shlb
add
imul
out
stos
imul
cs
mov
or
adc
adc
or
fisubrs
jg
xor
sbb
and
jb
cmp
cmp
mov
pop
adc
arpl
adc
sbb
push
push
std
cmp
jns
es
xor
sbb
push
and
es
clc
and
add
or
cmp
and
push
mov
loopne
xor
fcomp
into
sbb
fdivl
push
mov
pop
xchg
or
sub
push
sub
adc
sbb
pop
ss
sbb
movl
cmp
adc
or
inc
sub
sbb
xor
out
pushf
insl
or
in
out
js
cmp
das
jo
pop
loop
jae
sub
sbb
jmp
cmp
sub
adc
dec
mov
stos
cmp
dec
scas
out
add
fistpll
cmpsb
shlb
push
scas
cmp
sbb
pop
pusha
lcall
dec
dec
jnp
popa
pop
push
ja
xor
mov
inc
mov
pop
scas
jp
fiadds
out
notb
out
out
adc
cmp
imul
dec
add
imul
dec
repz
inc
dec
negb
fs
jbe
pop
test
cmp
and
pop
push
ds
push
js
int
push
idivb
inc
imul
or
push
push
add
mov
adc
add
sbb
pop
adc
fdivp
jg
daa
cmp
cmp
push
sbb
adc
jle
jne
or
add
das
and
int3
sbb
mov
divb
ss
sbb
pop
adc
sbb
lahf
jg
ss
or
daa
or
sub
xor
push
sbb
or
xchg
dec
mov
mov
cmp
xor
mov
pop
in
adc
inc
int
xor
icebp
orb
cmp
push
or
lahf
cmp
xchg
mov
iret
cltd
cs
leave
lods
or
cltd
or
mov
jp
mov
cmp
cmp
mov
push
mov
mov
mov
cmp
pushf
xor
mov
gs
daa
and
dec
inc
xchg
xor
mov
pop
lods
lcall
and
mov
cwtl
add
iret
repz
pop
pop
dec
dec
inc
jno
fldcw
sahf
test
test
fwait
int
mov
mov
mov
fldcw
movsb
mov
insb
ss
int
popf
mov
mov
mov
aad
clc
lahf
loop
shlb
cltd
push
mov
pop
mov
int
mov
mov
loope
cmp
add
mov
ss
int
xchg
xor
ftst
mov
ds
pop
fldcw
mov
orb
fwait
int
mov
andb
js
pop
test
ss
mov
faddp
out
aam
pushl
push
push
mulb
dec
xor
or
aam
mov
in
jl
and
dec
outsb
jnp
lret
dec
mov
push
and
sar
inc
out
xlat
lock
call
cs
or
push
ljmp
js
add
addr16
xor
dec
fs
mov
imul
arpl
insl
outsb
jl
popa
inc
jo
gs
jbe
or
loopne
push
imul
sub
jne
push
dec
inc
jns
imul
inc
js
jns
push
and
mov
cmpsl
jle
pusha
push
data16
fcomip
jmp
pop
jb
pusha
dec
loope
lock
mov
loope
into
dec
hlt
inc
mull
outsl
icebp
inc
call
in
push
jb
pop
popa
jge
inc
dec
lds
insl
aad
icebp
insb
sti
insb
lret
pop
or
dec
arpl
outsb
push
gs
test
jbe
and
pop
push
dec
dec
js
addr16
and
gs
mov
push
pop
push
push
push
mull
data16
add
jno
inc
stos
jp
jge
add
popa
jbe
fisubs
dec
dec
jb
jge
mov
popa
jnp
pop
dec
je
js
fs
add
gs
aas
mov
data16
sbb
jne
dec
push
inc
jns
rclb
dec
pop
lds
push
gs
data16
sub
jne
test
adc
adc
push
sub
imul
push
popa
mov
aam
rolb
inc
push
pop
dec
popa
jg
and
outsl
aad
rolb
ret
test
inc
les
ja
dec
push
js
push
inc
addr16
dec
dec
je
push
outsb
inc
pop
bound
dec
push
dec
push
jns
imul
je
cmp
jo
hlt
fs
sbb
dec
loopne
jmp
pusha
mulb
addr16
ret
xor
ja
insb
mov
push
pusha
inc
dec
pusha
outsl
addr16
dec
inc
inc
fs
push
push
jb
js
imull
pop
adc
pop
add
cld
inc
jne
jno
push
gs
gs
jg
iret
jns
inc
dec
push
inc
jbe
pop
sbb
ljmp
ja
out
inc
push
jno
gs
jo
inc
decl
in
ja
jns
pusha
dec
jb
addr16
jbe
dec
dec
bound
pop
leave
mov
pop
inc
inc
push
inc
inc
negb
int
inc
aad
loopne
ffree
out
into
leave
repnz
ffree
fadd
loopne
repnz
in
std
out
lock
inc
iret
ret
in
fadd
into
fsubrp
jmp
cli
fstp
push
out
fcomp
movsl
or
ljmp
mov
mov
mov
popf
stos
test
pop
push
mov
xchg
sahf
cwtl
mov
lea
lods
movsl
mov
mov
mov
mov
outsl
clc
pushl
stos
mov
mov
xchg
dec
jb
pop
gs
ljmp
inc
pop
inc
insb
push
jle
jno
jns
push
dec
imul
pusha
je
in
outsl
clc
orb
pop
pop
insl
pop
sub
jle
jp
push
push
inc
ljmp
pop
pop
push
je
xor
add
sbb
push
cmp
and
xor
ljmp
sbb
cs
sub
adc
sub
and
sub
outsl
sub
dec
add
pop
cld
pushl
sbb
aad
int3
mul
shrb
fcmovb
fsubrp
aad
jmp
xlat
enter
sti
fmul
ror
jecxz
loope
int3
shl
into
loop
out
sar
fistps
int3
out
rcr
xlat
lock
scas
mov
pushf
mov
mov
lcall
addb
xchg
scas
xchg
lods
andb
test
fwait
fwait
cltd
cmpl
xchg
pushf
lahf
test
in
ret
iret
mov
inc
rcr
leave
out
stc
loopne
fcmovu
fmul
in
cmc
cli
ljmp
or
rcr
lret
loop
fcmove
enter
sti
enter
fcmovb
ror
clc
cwtl
mov
test
mov
mov
stos
mov
nop
mov
movsl
cmpsb
mov
lods
lahf
lahf
popf
popf
mov
lcall
movsl
mov
xchg
lods
mov
mov
dec
inc
dec
push
dec
push
jo
bound
mov
insl
inc
pop
inc
addr16
jae
inc
push
insb
outsb
pop
push
inc
pop
jns
push
and
dec
push
jg
dec
push
pop
js
or
ljmp
dec
jl
jo
insl
cmp
fucomip
sub
sbb
push
or
and
sbb
cmp
daa
sbb
sbb
or
and
adc
incl
add
xor
cmp
add
add
aaa
or
push
xor
add
xor
cmp
enter
call
cld
shr
loope
jmp
ljmp
repnz
call
out
ret
pop
push
hlt
mov
sar
push
leave
push
jecxz
hlt
rcl
ljmp
dec
fcmovb
lock
int3
push
mov
addb
mov
in
jmp
cltd
mov
popf
mov
popf
sahf
mov
xchg
mov
xchg
movsb
movsl
xchg
test
mov
mov
inc
mov
stos
mov
xor
pop
add
call
adc
jbe
add
xor
cmp
cmp
and
dec
pop
and
outsb
dec
jmp
or
sub
add
jae
loopne
mov
lock
sbb
adc
xor
jb
imul
and
or
shrb
add
mov
aaa
pop
push
or
aaa
inc
aaa
jg
es
cmp
sbb
or
and
or
cmp
and
adc
daa
sub
or
or
pushl
push
das
add
gs
ds
and
add
mov
inc
adc
push
xor
dec
add
adc
clc
or
cmp
inc
sub
push
dec
sbb
pop
dec
push
push
std
das
mov
and
add
adc
sub
outsb
cli
divl
and
pop
divl
or
ds
jmp
ss
dec
add
sbb
or
inc
push
and
pushl
or
and
sbb
or
gs
aaa
add
sbb
dec
cmp
sbb
andb
inc
sub
xor
cmp
sbb
and
dec
mov
add
push
pop
cs
lea
mov
sub
push
push
add
xor
adc
pop
cld
fbstp
and
adc
cmp
xor
inc
sub
aaa
and
inc
sub
jecxz
fidivrs
adc
inc
fiadds
or
or
push
add
lret
gs
jg
or
or
add
dec
dec
add
push
adc
sbb
daa
dec
ss
clc
stc
and
add
push
pop
je
adc
jnp
in
aaa
and
imulb
or
je
es
and
adc
mov
popa
daa
push
sub
and
add
or
adc
cmp
lea
rorb
adc
imulb
aas
adc
or
es
ljmp
out
or
in
call
pop
adc
data16
das
sbb
mov
adc
loope
bnd
jbe
bound
push
add
adc
pop
adc
stc
jg
mov
and
push
xor
xor
sbb
or
sub
sub
mov
push
incl
mov
andb
aas
adc
add
incl
loopne
add
cmp
ds
pop
add
add
imul
or
into
push
adc
dec
adc
jg
xor
sbb
sub
or
add
fwait
mov
sbb
mov
test
push
xor
pusha
sbb
and
push
xor
sub
jmp
jl
add
add
or
mov
adc
sbb
adcb
push
out
pop
or
push
clc
add
es
add
or
sub
adc
ds
add
ljmp
sub
and
pop
aaa
cmp
arpl
daa
xor
inc
fdivrp
fbld
xor
dec
ss
cmp
testb
and
or
and
sbb
out
pop
pop
fs
push
out
pop
add
and
adc
xor
push
fisubrl
icebp
jg
daa
add
xor
mulb
add
rorb
cmp
pop
rolb
xor
movsb
jg
fildl
sub
push
xor
adc
pop
cmp
sub
ds
or
and
jp
ds
jnp
inc
fs
xlat
and
pop
adc
add
push
rcll
out
pop
jl
popa
ja
xchg
cmp
out
adc
unpcklps
and
sub
adc
mov
sbb
into
jg
sbb
add
adc
push
add
aaa
cmp
push
adc
das
or
sub
out
sbb
pop
sbb
push
pmaxsw
add
or
add
incl
inc
and
xor
ss
push
ss
cmp
call
push
out
sbb
sbb
pop
sub
sbb
insl
clc
stos
fidivrs
add
push
scas
or
push
addr16
adc
enter
cli
or
adc
or
fwait
sub
cmp
xor
or
cmp
xor
in
push
sbb
mulb
idivb
daa
fidivs
add
or
das
xor
add
push
pop
or
push
iret
add
das
push
jns
orl
movlps
hlt
aaa
insl
pop
or
adc
sbb
loop
pop
test
add
or
cmp
psubusb
add
ret
aaa
xor
sbb
inc
notl
sub
mov
cmp
cmp
notl
jne
mov
fiadds
cmp
add
dec
push
jp
sysret
or
lock
cmpsb
adc
adc
aas
pop
adc
or
add
fisubrs
and
add
sub
pushl
mov
xor
push
sbb
sub
cmp
xor
push
xor
sub
cmp
or
and
rorl
or
adc
lahf
pop
movsl
cli
sbb
or
sub
testl
xchg
sbb
adc
out
popa
pusha
test
mov
push
xor
adc
pop
pop
add
dec
bswap
imul
or
aas
rol
xor
cs
sbb
aas
mov
push
sbb
mov
inc
sbb
sbb
mov
jp
xchg
and
test
or
and
jne
xchg
das
and
pushl
inc
xor
cmp
lods
xor
sub
daa
data16
cli
lcall
loopne
xor
es
and
aaa
push
and
sub
adc
lcall
mov
and
insb
or
pop
jne
adc
outsl
call
inc
pop
xchg
xor
xor
sbb
pop
scas
cmp
or
push
stos
pcmpeqw
sbb
inc
lods
orl
decl
or
cmpsb
sub
aas
and
mov
sub
push
mov
and
orb
pop
daa
add
xorl
loope
or
call
sbb
mov
inc
or
cmp
test
add
mov
cmp
xor
addl
insl
mov
cmp
mov
jne
jle
data16
inc
pop
movsl
notb
or
or
mov
stc
int
cmp
and
mov
gs
xchg
nop
stc
add
pop
lret
sub
es
mov
out
mov
lock
aaa
and
inc
xor
subb
fsts
aas
cmp
or
or
stc
int
popl
pop
inc
dec
xchg
add
jne
lods
adc
fs
stc
out
test
sub
addl
shlb
out
jg
or
mov
cmp
ds
adc
incb
das
add
xor
push
sub
inc
mov
int
stc
xor
data16
ds
dec
dec
and
aaa
mov
mov
push
and
jbe
mov
or
mov
movsl
ficomps
test
jle
or
sbb
xor
mov
jne
scas
xor
mov
int
nop
cmp
rorb
ds
xor
es
fdivrs
out
mov
fldcw
ss
iret
nop
add
cmp
inc
sub
xor
pop
jne
xchg
add
xor
and
adc
repz
mov
inc
fwait
and
xor
mov
or
xor
int
jle
and
mov
lea
cltd
mov
mov
pop
and
mov
push
negb
xor
dec
popa
push
inc
jge
push
jl
push
push
pop
imul
into
call
fcmovu
inc
add
and
sub
adc
aas
push
sbb
cmp
cmp
or
xor
mov
sbb
cmpsb
or
out
xor
push
loop
lds
pop
mov
adc
mov
push
sub
xchg
and
loop
and
aas
adc
adc
mov
pop
xor
push
and
and
adc
adc
sbb
and
or
pop
or
aad
sub
and
inc
push
out
and
cmp
mov
pop
sbb
imul
and
imulb
add
les
rcrb
and
sub
sub
sub
outsb
ljmp
xor
jb
loope
pop
or
or
xor
icebp
pop
add
daa
ds
adc
cmp
sar
pop
shr
add
cs
add
push
mov
pop
adc
jo
xor
xor
mov
mov
fiadds
mov
rol
inc
lcall
lcall
ds
or
and
adc
sbb
adc
xor
push
cmp
adc
adc
cmp
and
or
mov
mov
idivb
inc
popa
add
outsl
jbe
push
or
and
pusha
jmp
sarl
mov
or
pop
divl
leave
call
test
insb
imul
ret
push
cs
xor
movsb
cmp
mov
inc
std
mov
pop
dec
js
jne
cltd
xor
mov
sarl
dec
lods
or
inc
and
dec
lahf
lret
xchg
stos
test
xor
dec
mov
out
jae
add
adc
fimull
add
into
loopne
aaa
or
mul
jno
adc
jb
scas
cmc
cs
cmp
jmp
loope
pxor
mov
out
jge
rcrb
push
sbb
fstps
add
lahf
xor
cmp
jmp
pop
or
aaa
mov
mov
xor
negb
inc
push
lcall
movsl
not
out
inc
adc
push
mov
or
lods
aas
nop
lahf
push
fisttps
mov
pop
fyl2x
cmp
jno
adc
add
mov
mov
inc
or
out
lock
add
xor
jae
xchg
fnstsw
int3
out
out
mov
data16
cld
scas
int
pop
out
mov
mov
cmp
scas
fcoms
or
sbb
daa
inc
pop
out
imul
jae
mov
out
out
out
xchg
fisttpl
mov
xor
fs
pop
xor
iret
out
and
iret
aas
mov
xor
inc
iret
jne
loop
repz
add
ja
cmp
jl
sub
out
push
xor
xchg
cmp
push
push
xor
test
les
out
int3
out
jb
outsl
adc
sahf
jno
aad
add
test
mov
adc
xchg
mov
fsub
sahf
mov
movsb
test
push
fldl
jg
push
cwtl
testl
dec
fwait
int
lcall
pop
mulb
das
js
push
mov
push
jno
adc
or
xchg
fsubs
rorb
jg
lcall
in
movsb
out
mov
or
sbb
xchg
int
loopne
lea
mov
push
push
push
jb
ljmp
jns
pop
jmp
and
xchg
pop
fnstenv
mov
fs
fwait
out
cmpsb
pop
cmp
sub
sbb
pop
inc
pop
xor
mov
aad
dec
push
sbb
out
mov
mov
xlat
jo
jne
cmpsl
int
fstps
movsl
push
nop
and
jno
stos
imul
daa
xlat
cmp
push
pop
or
imul
cmp
and
cmpsl
add
mov
add
inc
into
cmpsl
enter
inc
mov
cmp
xor
xor
fstpl
inc
pop
dec
jae
insl
mov
add
mov
popa
lea
cld
mov
and
push
inc
cmp
mov
mov
add
xchg
lods
adc
bound
jno
scas
stc
iret
dec
dec
stos
sub
sahf
jmp
fisttps
rcl
push
inc
xchg
scas
dec
push
and
lcall
sarb
xchg
hlt
inc
das
mulb
dec
leave
mov
aad
adc
leave
jbe
sub
dec
lahf
pop
ss
into
cmp
out
fisttpll
add
movsb
inc
xchg
gs
idivb
bound
into
jns
ss
dec
add
scas
lds
cld
lcall
ret
je
popa
loope
push
adc
arpl
int
data16
out
inc
scas
rcll
sar
mov
dec
insl
into
inc
pop
adc
push
pop
shr
push
inc
repz
lock
decb
cmpsl
loope
inc
dec
jmp
jne
stc
outsb
inc
call
stc
lock
nop
ljmp
fldcw
rolb
leave
inc
push
clc
imulb
lcall
shl
loop
fisubrs
fldcw
std
addr16
shlb
cli
call
fadd
and
fisubrl
std
mov
cmp
cmp
out
mov
out
mov
in
dec
addr16
push
jl
cs
mov
out
out
fidivrs
dec
ja
fidivrs
sti
je
and
in
inc
fdivrs
jbe
les
jnp
out
jl
in
es
das
jg
xchg
or
mov
add
mov
jge
cmp
mov
into
je
jmp
dec
movl
clc
sbb
fidivrs
jae
add
sahf
pop
mov
xor
movsb
orb
mov
or
push
ret
xacquire
push
inc
loopne
jge
adc
mov
mov
pop
mov
mov
inc
jmp
add
les
rcll
ret
mov
arpl
dec
jb
or
aaa
xchg
push
xorl
repz
fwait
dec
out
in
lret
jb
xlat
pop
cmp
pop
jno
es
movsl
cs
pop
into
shll
int3
mov
dec
inc
aaa
mov
mov
data16
loopne
mov
push
outsb
les
and
jno
mov
dec
dec
dec
jp
daa
cwtl
std
sbb
dec
xchg
xchg
add
fucomp
push
enter
xor
out
pop
ficomps
mov
mov
push
jge
popa
out
mov
jo
pop
jle
mov
lods
fwait
aad
jecxz
and
cmp
jno
pushw
ret
jp
mov
aam
dec
test
push
xchg
pop
jb
push
scas
cmp
or
xlat
outsl
out
sbb
in
in
idivl
inc
or
jl
jle
ret
jnp
mulb
ret
pop
xlat
sub
mov
test
out
push
inc
scas
add
hlt
pushf
and
lea
aas
negb
inc
inc
cmc
xorb
mov
daa
and
data16
cs
sub
xor
jb
daa
insl
fwait
mov
and
xor
imul
adc
pop
subl
jae
loop
out
sub
testb
aaa
test
inc
repnz
loop
out
pusha
jmp
pop
repnz
pop
dec
les
pushf
loope
push
jle
out
ljmp
dec
xchg
or
stc
adc
enter
xor
loop
xlat
push
mov
mov
out
sbb
lahf
stos
lret
push
insl
imull
push
xchg
cmp
lcall
outsb
fs
jg
push
into
fwait
adc
pop
loop
jae
push
sub
fbstp
icebp
int
fists
inc
arpl
xchg
xor
invd
in
fbld
ret
test
jne
mov
cltd
adc
mov
out
ljmp
pushl
into
gs
pop
jb
test
repnz
sbb
fwait
xcrypt-cfb
cmpsl
addr16
iret
adc
add
mov
fbld
mov
movsl
nop
xchg
mov
ss
out
cltd
jp
xchg
les
cli
push
pop
xor
push
adc
int3
add
addr16
inc
fwait
pop
inc
scas
jno,pn
xor
push
in
mov
inc
test
iret
mov
ljmp
into
dec
sub
push
jle
ret
xor
data16
inc
inc
out
adc
or
adc
lahf
push
jb
cld
andb
popf
cmpsl
in
ret
jl
jp
in
jns
mov
xlat
mov
scas
inc
sub
mov
fsubrp
ror
mov
call
outsl
leave
loopne
dec
data16
jo
enter
fists
out
jnp
pop
roll
push
imul
add
pop
and
push
out
addr16
and
xchg
jno
or
inc
adc
push
outsb
subb
in
dec
and
push
bound
adc
pop
lods
test
loope
cmp
sahf
jmp
aaa
mov
sub
fcomip
or
mov
inc
fs
jp
adcl
sbb
jno
mov
push
cltd
adc
iret
sbb
cmpsl
aad
rolb
push
out
mov
adc
sub
jmp
cld
pop
scas
pop
incb
push
ss
mov
or
xchg
testl
enter
fbld
call
xor
cmc
adc
stc
fcoms
inc
mov
sub
test
inc
decl
or
int3
bound
outsb
mov
xor
pop
repnz
scas
mov
dec
add
bound
out
movsb
outsb
push
inc
jle
or
ficoml
cli
fdiv
mov
out
pop
or
sub
test
push
outsb
mov
hlt
and
shrb
mov
cmovg
sub
xchg
adc
add
out
cli
sbb
or
dec
int3
test
mov
incb
pushf
out
sti
es
mov
xchg
daa
mov
xor
fists
add
pop
in
fistps
mov
and
inc
sub
dec
popf
fists
xor
gs
lret
add
out
int
inc
es
fistps
test
push
mov
sahf
pop
fbstp
lahf
pushf
xor
mov
fbld
xor
push
fisttps
cld
or
call
push
mov
iret
xlat
mov
movsl
ret
shrl
cli
cmp
ss
sub
xor
imul
ss
out
mov
mov
xchg
xor
xchg
neg
lcall
cwtl
arpl
cltd
nop
pop
fidivrs
cmp
cwtl
fwait
out
mov
or
leave
xchg
gs
push
xchg
mov
mov
sub
jb
or
push
or
dec
xchg
cmpsl
out
xlat
xchg
sub
dec
xor
mov
call
mov
ds
fists
or
cmpsl
loop
fists
sub
cmp
fcomip
push
cmpsl
add
adc
lods
or
add
scas
popf
and
or
cmp
call
pop
jg
push
and
jb
jge
scas
int
xor
popf
and
repnz
fcmovu
daa
fs
test
decl
jp
mulb
arpl
cmp
dec
jecxz
fs
and
push
das
pop
ds
int
push
dec
xor
adcl
dec
pop
inc
jo
dec
or
push
aaa
fists
mov
or
or
jns
dec
idivb
int3
out
fucomi
movsb
daa
out
xor
inc
ja
jbe
push
idiv
mov
mov
outsb
push
inc
out
shlb
xor
ret
in
cmp
in
sbb
jg
stos
insb
push
inc
add
cmp
std
idiv
stc
out
icebp
xchg
inc
fdivrp
mov
or
push
ret
outsb
lods
dec
sbb
ljmp
imul
jb
push
insl
aaa
push
cmp
testl
mov
jl
dec
out
adc
jo
aaa
cmpsb
xchg
outsb
inc
popf
popa
dec
ja
jnp
idiv
adc
xchg
bound
push
outsl
jp
sub
and
dec
je
sbb
pusha
inc
cmp
data16
inc
cli
imul
fsubrl
insb
testl
push
mulb
jnp
sbb
or
mov
xor
rolb
scas
ret
in
dec
shll
mov
lea
clc
dec
jb
inc
addr16
push
and
outsl
adc
inc
jno
sbb
push
int
mov
in
call
push
fldcw
dec
movsl
gs
jno
int
mov
push
cmp
fildl
dec
leave
push
mov
insb
ss
fs
push
mov
jns
fwait
int
inc
pop
jge
pop
pusha
jae
sub
mov
insb
or
sbb
pop
ret
data16
ss
int
dec
mov
xchg
pop
dec
push
dec
inc
dec
fs
gs
adc
scas
sub
rcl
rorl
xor
xchg
xchg
cld
loop
arpl
fs
push
pop
pop
ja
insb
inc
decl
adc
or
jmp
jmp
sbb
add
adc
cmp
sub
xor
adc
sub
and
add
or
mov
fdivrp
jg
jmp
sub
adc
sbb
or
add
add
adc
mov
inc
push
push
je
sub
sbb
sbb
mov
mov
bound
add
pop
adc
adc
int
outsl
pop
dec
aaa
sub
aaa
adc
or
or
and
push
inc
xor
out
jg
sbb
xor
sbb
adc
jecxz
add
pop
sub
aad
sti
loop
sub
daa
xchg
cmp
push
cmp
xor
lock
es
push
inc
add
es
mov
push
cmp
sbb
ljmp
jbe
and
sbb
adc
and
std
push
mov
add
push
or
sub
adc
or
cmp
wbinvd
sbb
ds
in
or
adc
push
cmp
cmp
es
pop
cld
sub
sub
lcall
sub
and
xor
adc
xor
push
push
adc
add
xor
out
xlat
cmp
mov
push
daa
and
adc
xor
pop
inc
das
pop
sbb
aaa
push
and
sbb
daa
mov
push
rorb
adc
pop
aas
test
push
xor
push
das
cmp
and
sub
push
ss
or
sbb
sub
add
or
jmp
jo
adc
daa
or
lcall
sub
or
push
cmpsb
data16
cmp
adc
add
xor
sub
or
xor
xor
and
push
fimuls
sub
adc
or
mov
pop
inc
xor
sbb
cmp
and
or
pushl
cmp
sbb
sub
cs
and
add
add
aas
rcr
mov
xor
sbb
daa
and
dec
shlb
incl
cwtl
and
inc
jbe
jb
cmp
add
sub
incl
jmp
or
rdmsr
sbb
adc
aaa
and
sub
or
add
or
sub
push
cmp
xor
mov
mov
or
ds
or
xor
add
aaa
and
cs
js
adc
sub
or
cli
jmp
push
outsb
xor
sub
and
or
sub
outsb
jne
adc
xor
add
enterw
sbb
push
aam
fmuls
subb
and
mov
xor
or
scas
cwtl
sbb
and
or
lahf
addr16
adc
sbb
adc
add
mov
push
lods
clc
ds
scas
add
sub
mov
aas
pop
cmp
and
pusha
sub
and
sub
or
sbb
inc
das
cmp
and
add
pop
push
xchg
adc
jmp
sub
cmp
or
add
jno
ds
xor
mov
sbb
xor
adc
and
or
sbb
adc
xor
sbb
insb
negb
and
sbb
cmp
push
add
dec
xor
push
adc
sub
aaa
ljmp
mov
mov
push
sub
es
xor
or
xor
add
pop
aaa
ds
cmp
fidivrs
cmp
adc
and
adc
bound
push
or
or
adc
cmpsl
pop
hlt
aaa
out
sub
adc
xor
xor
aaa
cld
pushl
jne
and
add
outsl
scas
inc
adc
xor
cmp
lds
ret
or
pusha
and
fildll
add
push
dec
clc
popa
or
sub
cmp
daa
push
add
add
jmp
and
push
call
sbb
xor
cs
out
push
or
or
adc
cmpsb
and
adc
out
aaa
test
sub
add
cmp
bound
dec
and
cmpsl
lock
mov
add
adc
jae
adc
xor
mov
aaa
push
and
adc
sbb
or
inc
push
aaa
call
sub
call
sub
push
pop
mov
psubd
add
sbb
xchg
and
sub
aas
add
and
xor
sbb
mov
sbb
and
xor
daa
adc
cmp
das
push
adc
sbb
adc
add
outsb
or
and
xor
aas
sbb
and
add
incl
data16
aas
xor
add
and
pop
sub
inc
aam
xchg
sarb
dec
mov
test
sysenter
and
adc
push
sub
push
mov
mov
and
sub
dec
rorl
sub
rcrb
or
adc
cmp
repnz
and
adc
pop
or
daa
push
push
sbb
fbstp
movsb
sub
push
adc
cmp
test
cmp
test
cmp
mov
ljmp
mov
mov
sub
and
xor
das
and
clc
dec
or
adc
aas
sub
daa
fs
call
or
cmp
ds
adcb
add
or
add
shlb
pop
sbb
les
adc
sbb
xor
mov
test
sbb
in
pop
cli
xor
imul
push
cmp
and
sbb
sbb
lds
cmp
mov
adc
pop
jp
mov
xor
mov
wrmsr
std
xchg
add
sub
adc
incl
daa
sub
jne
das
bound
adc
das
xor
cmp
sbb
or
xchg
jmp
inc
dec
fs
pop
add
mov
sbb
mov
dec
bound
add
cmp
adc
or
xor
and
mov
mov
pop
test
and
sbb
daa
xor
pop
push
or
pushl
or
out
jge
add
jl
adc
push
movsb
add
aaa
jp
sub
cmc
push
cs
lea
ja
or
ss
dec
leave
clc
adc
sub
xchg
sub
mov
mov
pop
insb
sar
stos
adc
aas
add
add
and
add
imul
push
adc
outsl
outsl
es
pop
mov
cmp
adc
cmp
adc
xor
sub
stos
incb
add
and
aas
or
and
add
ret
lcall
cmp
cmp
adc
sub
sbb
pop
cmc
jb
mov
dec
inc
fcoml
adc
xchg
cmc
inc
jmp
or
and
lock
subb
sub
xorb
adc
adc
or
and
fcoms
inc
test
jp
cmp
ds
mov
push
outsb
arpl
pop
subb
sub
lcall
pop
pop
and
or
sbb
push
pop
inc
sub
xor
or
push
mov
push
insl
daa
xor
sub
imulb
ds
and
mov
pop
jae
push
push
push
sbb
adc
and
ds
cmp
and
sub
cs
neg
incb
pop
insb
or
sub
adc
and
or
pushl
cmpsb
or
sub
push
add
das
mov
shlb
sbb
lock
jmp
pop
push
or
aas
add
xor
jns
sub
adc
cmp
adc
add
xchg
sbb
ss
push
adc
add
jmp
aas
aaa
and
sbb
pop
es
xor
push
inc
and
adc
add
xchg
xchg
ret
scas
and
adc
es
add
stos
cmc
sbb
or
mov
stos
push
push
in
clc
inc
or
add
push
xor
xlat
je
pop
aas
pop
stos
add
mov
inc
iret
and
dec
divps
das
inc
inc
out
cmp
or
mov
sub
push
xlat
push
xor
inc
cmp
call
callw
data16
dec
or
lock
arpl
popa
jmp
xor
fisubrs
sbb
pop
icebp
mov
fbld
pcmpgtd
xor
xor
adc
add
cmpsl
decl
rol
sub
jp
pop
push
sahf
out
scas
mov
inc
je
sahf
out
popa
addr16
jne
jns
out
pop
jae
pop
sahf
out
sahf
outsb
jl
inc
dec
inc
jns
out
dec
jns
inc
pop
mov
jle
push
iret
repz
jns
push
outsl
repz
repz
jp
jge
iret
repz
pop
sub
imul
iret
repz
sbb
sbb
inc
cmp
adc
iret
shl
jno
outsl
pop
jmp
cmp
repz
jl
insb
out
cmp
sti
jae
leave
notb
out
sahf
rcrb
jb
inc
jns
out
loop
repnz
adc
sahf
out
subb
inc
cltd
movsb
add
je
sahf
pop
inc
nop
xchg
or
arpl
or
sbb
sbb
dec
data16
dec
inc
mov
into
xchg
into
int
dec
lahf
inc
movsb
xor
dec
add
stos
inc
scas
imul
sahf
jnp
jne
cmp
outsl
daa
fs
cs
xlat
or
or
out
fstpl
in
stc
inc
lock
sub
jle
inc
popf
dec
or
push
sub
push
jle
mov
sub
cmc
mov
add
push
divb
in
xlat
ret
scas
rcll
push
stos
mov
adc
mov
xlat
mov
xor
stos
add
bound
dec
test
cmp
lods
xor
or
out
bswap
shll
push
add
xor
ret
cmpl
cmpsl
out
idivb
iret
pop
fdivrp
mov
inc
pop
in
or
and
mov
popf
cs
jns
mov
pop
dec
mov
stc
out
push
or
xor
inc
xchg
dec
pop
push
stc
out
cltd
jl
xor
movsb
mov
push
jns
dec
pop
mov
push
lret
inc
sbb
jbe
adc
das
sar
jae
jg
dec
jae
push
pop
inc
inc
push
popa
sbb
sub
bound
dec
inc
push
adc
push
jp
outsl
push
mov
loope
imul
inc
dec
aas
add
and
pop
sub
cs
and
adc
add
cmp
add
sbb
cmp
cmp
add
sub
aaa
xor
cmp
adc
inc
or
cmp
adc
mov
gs
mov
inc
pusha
js
push
popa
pusha
push
data16
dec
mov
push
call
inc
dec
push
push
gs
ss
sbb
mov
push
jb
jne
bound
jmp
call
test
push
or
xor
and
dec
clc
fwait
adc
push
or
adc
sbb
decl
pop
cs
add
or
adc
add
sub
sbb
adc
cmp
add
pop
add
sub
movsb
scas
push
cs
loope
dec
shll
imull
mov
xchg
clc
incl
fisttpl
xchg
fsubrs
jne
in
add
shrb
cmp
in
inc
cmpsl
into
mov
push
xchg
jmp
in
lods
adc
xchg
shrl
nop
out
in
jle
and
and
shll
and
fbstp
adc
push
inc
sub
adc
jo
icebp
testb
lock
popa
repnz
add
jnp
sbb
and
cmp
inc
dec
push
inc
pusha
push
dec
xchg
and
fs
sub
test
jmp
and
mov
xchg
mov
jne
adc
inc
stos
mov
mov
xor
jg
adc
mov
xor
hlt
xchg
aaa
push
fimull
incl
mov
add
push
hlt
mov
insb
lret
xchg
xor
mov
adc
push
and
incl
test
jbe
lea
jne
xchg
cmp
daa
into
int
jg
pcmpeqw
mov
inc
or
mov
push
cmp
shrl
pop
pop
bound
rep
mov
push
mov
nop
mov
clc
movsb
into
push
cmp
arpl
mov
mov
dec
fs
lcall
push
or
imul
mov
lahf
out
or
aas
mov
pop
and
daa
aas
add
xchg
sbb
dec
aaa
inc
clc
insb
xor
mov
cmp
xchg
outsl
lods
adc
call
aaa
stc
cwtl
or
adcb
lods
inc
adc
enter
jns
pop
mov
push
std
add
and
frstor
out
jb
jmp
add
clc
iret
push
dec
sti
mov
pusha
push
int
cmpl
sahf
lret
in
xor
out
sub
mov
push
testl
fdivrp
call
pop
push
jo
xlat
add
lds
call
insl
mov
decl
dec
or
nop
lret
mov
fcomp
fmuls
ftst
pop
xor
jmp
adc
cwtl
std
mov
es
adc
mov
mov
aam
bound
dec
jge
cld
mov
push
mov
mov
add
cmp
lahf
pop
and
or
push
out
push
scas
fiaddl
enter
lcall
lods
in
outsb
jno
shl
sub
xchg
xchg
sub
clc
rorb
out
das
cli
call
adc
jmp
sti
adc
mov
add
sti
mov
push
cli
shrl
and
cmc
sub
in
lds
pusha
adc
mov
sub
mov
pop
dec
out
imul
adc
decl
ds
sbb
mov
dec
add
aam
sahf
jle
insb
push
push
dec
or
incl
and
jo
pop
loopne
push
cmp
mov
mov
in
jmp
mov
sbbb
adc
in
mov
movups
pop
mov
or
xor
mov
mov
icebp
fcos
call
std
jle
and
cs
arpl
push
dec
fwait
mov
hlt
loope
mov
mov
test
outsb
test
add
adc
and
decl
sbb
adc
mov
lahf
inc
inc
sbb
pop
or
pop
out
jo
movsb
pop
movsl
out
dec
ret
icebp
mov
in
in
and
std
fnsave
push
mov
jg
mov
inc
movsb
add
pop
popa
jecxz
ljmp
aam
inc
xchg
cmp
fs
out
decl
lock
jo
stos
pop
push
arpl
adc
lods
and
push
dec
cmc
mov
cltd
movsl
push
shll
cmp
jle
and
inc
insl
or
adc
cmc
fisttpl
mov
scas
pop
daa
std
bound
inc
dec
or
jnp
push
jnp
cmpsl
add
pop
dec
loope
jp
into
rol
movb
inc
into
mov
push
into
pop
sahf
pop
adc
ja
jne
sahf
out
xor
rol
mov
fwait
int
xchg
push
inc
adc
add
ljmp
and
aaa
add
sbb
aaa
xor
add
fwait
jg
js
xor
sub
xor
adc
xor
and
xor
stc
call
add
sbb
das
xor
or
aas
and
sub
imul
out
push
xor
pop
add
xor
cmp
add
push
push
pop
cmp
pop
sbb
clc
adc
adc
mov
mov
inc
mov
ljmp
jbe
sub
sbb
pop
ja
and
js
jo
arpl
pop
pop
decl
or
popa
sbb
cmp
and
pop
or
sbb
push
outsl
adc
inc
and
call
daa
or
add
das
pusha
push
or
add
adc
and
cmp
xor
xor
inc
inc
push
enter
add
add
sbb
push
adc
addr16
inc
stc
jbe
push
out
push
jg
jns
push
jns
mov
push
adc
push
clc
pop
scas
jb
js
addr16
pusha
sub
mov
jge
jne
dec
sti
lcall
popa
iret
pop
pop
push
in
je
movsl
pop
fisubs
push
test
notb
jmp
inc
push
jge
jno
je
push
les
cmc
bound
ja
push
je
pusha
insb
imul
inc
loope
inc
lret
push
jno
notb
ljmp
mov
jno
ja
pop
ret
insb
adc
push
pushf
jae
jne
jmp
jge
bound
les
push
dec
push
add
ret
pop
shlb
pop
jl
lcall
jns
jl
push
add
push
bound
jns
js
dec
add
push
sbb
jnp
dec
out
push
or
jno
add
gs
push
jge
inc
mov
mov
stc
ljmp
pop
and
insb
xchg
push
je
jp
jp
pop
test
jb
jbe
pop
repnz
js
jg
jg
pop
outsb
data16
push
outsl
pop
ret
jno
jnp
fs
lret
push
mov
ljmp
sbb
push
lods
push
sub
pop
arpl
add
adc
gs
jg
jg
out
or
pop
das
clc
addr16
sub
inc
gs
insb
push
xor
fs
loopne
lcall
out
dec
fldl
jle
imul
mov
sub
loop
adc
or
out
addr16
loopne
xlat
pop
insl
lcall
cld
pop
jae
jns
and
bound
pop
cmpsb
jbe
loopne
cmp
cmp
jle
loopne
lock
pop
call
jno
inc
push
inc
xlat
dec
inc
sub
jne
jo
pop
mov
pop
dec
mov
outsb
xchg
pop
jmp
insl
arpl
inc
loopne
lret
outsb
iret
pop
mov
clc
mov
out
push
jae
jno
fcoms
xor
call
push
pop
push
push
ficomps
jbe
jl
pusha
shlb
jo
push
sti
push
repz
jo
pop
in
jg
decl
pop
xor
jle
push
cmpsb
pop
js
jno
data16
inc
xor
incl
inc
add
jbe
jb
push
ss
inc
push
bound
je
push
xor
std
addr16
jb
dec
mov
or
push
inc
push
pop
push
jg
aas
pop
xor
inc
scas
into
push
mov
jo
fiadds
pop
sub
add
pop
jo
js
pop
aas
push
cmpsb
in
jbe
mov
fdivr
outsl
mov
push
push
jg
ja
pop
push
popa
addr16
add
call
and
outsb
shll
out
fiaddl
addb
lahf
je
adc
add
dec
dec
outsl
pop
jns
sbb
jl
inc
adc
jno
imul
pop
ficompl
outsl
mov
mov
dec
push
jg
pop
adc
jbe
jo
pop
orb
or
shlb
jg
pop
pop
push
pop
jl
jbe
imul
or
imul
pushl
js
push
insl
notl
push
jno
pop
jmp
push
in
js
jns
idiv
fists
mov
jg
jnp
pop
dec
je
mov
push
jge
pop
loop
out
idivb
imul
xchg
dec
gs
pop
int3
pop
icebp
mov
dec
sub
js
pop
movsl
lea
jbe
pop
adc
insl
lret
pop
cltd
push
movsl
jbe
sub
into
cmpl
sub
jb
push
adcb
sbb
dec
fs
pop
jmp
xchg
add
push
hlt
imul
clc
ljmp
lds
popa
mov
dec
jg
pop
je
push
and
inc
jmp
push
push
in
stc
fs
bound
inc
pop
jge
gs
arpl
xor
fldl
jb
call
push
shrb
jnp
jl
push
xor
push
cli
pop
out
jns
jo
push
mov
js
call
shll
je
cmp
xor
shll
pop
cmp
js
ljmp
clc
pop
jge
push
repz
sahf
pusha
movsl
jp
jnp
dec
je
jg
push
dec
addr16
cld
ljmp
add
dec
add
jnp
pop
fdivrs
insl
aam
fcompl
fwait
sub
fmull
jae
imul
test
dec
call
dec
inc
dec
jl
push
insb
pop
je
jb
pop
cmp
call
mov
mov
imul
popa
push
daa
push
bnd
jo
mov
ficompl
pop
add
jle
push
fisubrl
clc
insl
icebp
ja
jbe
inc
jbe
mov
inc
pusha
jns
jbe
jb
push
imul
dec
push
cmpsb
shll
ljmp
inc
push
jg
addr16
ljmp
adc
push
and
pop
flds
inc
mov
insb
mov
test
mov
gs
aaa
std
mov
jnp
jb
cmp
jle
je
imul
lahf
cmpsb
shrl
into
pop
fistpl
mov
pushl
ljmp
outsl
jno
imul
adc
jnp
je
jg
pop
inc
jno
ljmp
outsb
sbb
pop
out
jp
outsb
imulb
jge
inc
mov
jo
push
lcall
daa
push
fwait
dec
pop
dec
add
pop
mov
mov
jne
pop
sub
outsl
cmpsb
pop
je
fidivl
fcoms
int3
cmpb
aaa
cld
dec
cmp
jo
push
icebp
push
mov
jno
pop
loope
popf
pop
pop
pop
adc
jg
mov
sbb
adc
inc
jns
push
arpl
jnp
out
clc
pushl
out
fnstsw
inc
push
jle
pop
data16
outsl
push
imul
dec
stos
jle
decb
jno
imul
enter
lcall
pop
sub
cmp
jo
repz
inc
push
shll
jg
pop
cltd
push
pushf
jge
jmp
test
pop
push
out
loopne
push
mov
push
cmpsb
mov
jae
jbe
pop
lods
frstor
fs
jle
jg
dec
movsb
out
cli
inc
sbb
dec
shll
jge
movsl
pop
push
mov
dec
jne
data16
push
into
jae
fbld
push
dec
gs
add
pushl
addr16
inc
push
and
adc
inc
out
xorb
dec
push
mov
push
out
pusha
scas
push
inc
pop
bound
jbe
push
jecxz
je
jle
dec
popa
ljmp
push
out
xchg
ja
pop
push
arpl
lcall
inc
in
jne
aaa
jg
push
pop
insl
cmp
insb
out
mov
inc
das
clc
testb
fmull
jp
jne
mov
inc
or
ja
push
ljmp
addr16
into
dec
ret
jg
addr16
movsb
push
cltd
popa
nop
pop
xchg
inc
mov
decl
xchg
push
outsl
insl
jl
idivb
push
scas
push
xor
std
incl
into
pop
mov
ja
push
jo
and
fcomip
out
adc
cmpsb
insb
adc
push
mov
pop
andb
inc
or
test
pop
dec
jg
mov
inc
add
jp
pop
fnstenv
dec
mov
sbb
push
cld
pop
push
jp,pn
inc
jmp
fdivs
outsl
movsl
sahf
loopne
jge
mov
push
orb
push
jns
push
ljmp
jbe
add
push
push
push
jge
je
push
int3
pop
into
jbe
jl
arpl
sbb
jbe
aam
jg
jbe
lcall
mov
push
subb
ja
adc
xor
push
dec
adc
push
adc
jbe
fs
pop
mov
xchg
push
imul
jl
push
imul
popa
or
addr16
inc
mov
pop
ljmp
push
push
js
pop
push
sbb
push
out
sarb
je
lcall
jne
jg
pusha
sbb
std
jo
push
mov
std
ljmp
pop
ret
pusha
int
pop
pop
jb
jge
pop
in
bound
fs
push
mov
dec
jbe
jge
pop
jbe
push
fidivrs
scas
mov
out
push
js
in
gs
arpl
inc
dec
cmovne
mov
mov
push
sbb
outsb
cmp
dec
test
add
push
push
dec
add
bound
es
push
jne
bound
je
mov
pusha
pusha
dec
and
pushl
push
adc
jg
ja
pop
push
pusha
ficomps
push
ret
ja
jb
pop
andb
jmp
jnp
js
dec
nop
dec
jae
js
or
mov
inc
je
dec
repnz
rorl
mov
jnp
inc
imul
incl
push
or
pop
mov
lcall
imul
call
addr16
or
aas
jge
pop
jno
jns
dec
std
lods
mov
mov
jnp
push
pusha
outsb
dec
push
call
push
or
jb
pop
or
push
add
jnp
jp
dec
adc
imul
mov
jg
pop
fnsave
dec
leave
outsl
cli
loop
mov
outsl
popf
imul
incl
ljmp
insb
cmpsl
push
orl
pop
add
push
mov
loopne
divl
pop
out
jp
mov
std
aaa
xor
push
arpl
jb
push
jge
pop
add
mov
std
push
cmc
imul
dec
jne
pop
movsb
scas
push
lods
inc
lcall
icebp
and
loope
dec
arpl
inc
aas
jl
jae
ja
push
add
inc
adc
in
jo
push
fnsave
test
jne
dec
das
inc
or
int
push
push
jg
mov
inc
mov
hlt
insb
cmpsb
jns
jle
push
repnz
hlt
gs
push
mov
push
cmp
dec
je
jge
pop
sbb
mov
imul
jnp
pop
and
pop
mov
into
push
cs
clc
push
in
push
out
jne
jo
pop
jg
lcall
arpl
insl
dec
pop
push
and
pop
mov
je
dec
jl
dec
jl
pop
inc
jge
imul
shrb
out
inc
mov
inc
ds
ljmp
shlb
fildll
jp
jg
push
adc
gs
ficompl
je
jge
pop
sub
sbb
jge
ja
imul
pop
or
mov
fistpll
dec
push
or
pop
add
jo
jno
inc
push
cld
jbe
or
es
mov
jo
je
push
out
inc
jmp
arpl
dec
push
jae
or
lcall
push
cmpsl
push
stos
arpl
sub
inc
dec
jo
push
cltd
insb
sahf
jns
jle
push
pusha
loop
lcall
gs
push
and
insl
jge
pop
ret
icebp
mov
loope
shrl
jnp
decl
jns
and
insb
adc
push
aaa
jae
jbe
pop
shlb
repz
fisubs
loope
push
jl
aam
mov
push
in
js
mov
decl
movsb
push
js
inc
xor
jno
push
lcall
inc
xchg
je
dec
insl
inc
inc
js
pusha
and
fisubl
pop
loope
das
cli
push
inc
push
inc
cmp
or
jnp
push
xchg
mov
dec
pop
ja
push
jbe
push
out
ret
jle
popa
outsl
popa
jge
jg
mov
ja
pop
andb
je
pop
jp
jg
push
jge
add
insb
adc
xor
movb
cmpsb
call
inc
data16
ja
and
jno
pop
jno,pn
out
shrb
outsb
cld
xchg
ljmp
jge
inc
lcall
jo
imul
pop
outsl
insb
and
dec
mov
pop
jae
jne
pop
fstpl
outsb
fcomip
incl
jno
js
pop
into
push
xorb
jl
pop
mov
pushl
jl
push
cmp
push
dec
pushl
or
fs
sbb
lret
inc
lods
inc
sbbb
arpl
jb
jbe
push
xchg
jns
inc
gs
jae
push
ja
sarb
shlb
arpl
jbe
dec
push
inc
mov
arpl
lcall
mov
inc
jle
shrb
cmpsb
jle,pt
js
sbb
adc
loopne
call
push
sbb
jge
je
push
cmc
pop
in
les
xchg
jno
push
gs
pop
call
cmp
pop
xor
adc
adc
jl
jns
push
cmp
push
jo
jno
inc
pushl
inc
call
je
push
loope
testb
scas
jb
push
xorl
std
ljmp
cmpl
popf
push
xchg
test
inc
mov
outsb
inc
jnp
call
push
pop
push
dec
push
push
pop
pop
jbe
xor
push
xor
jae
jns
data16
jbe
push
add
decl
push
cmp
ja
pop
and
pop
push
pop
lret
jnp
jle
push
xchg
insb
cs
mov
mov
ja
jbe
inc
inc
add
or
push
xor
jge
or
je
push
cmp
xorb
imul
jle
jns
jnp
push
pusha
push
dec
jno
jmp
add
jbe
or
pop
dec
pop
js
sub
add
scas
mov
out
inc
mov
lcall
push
xchg
push
push
jg
ja
pop
pop
bound
outsb
pop
push
jg
icebp
das
sbb
push
popa
insb
insl
pop
js
fs
inc
dec
inc
xor
jmp
inc
add
xor
push
or
arpl
jne
push
and
add
dec
jmp
inc
out
gs
push
sti
push
xchg
call
inc
aam
ficoms
outsb
sarb
jge
fstl
push
mov
pop
xchg
jno
push
mov
jns
xchg
popa
mov
push
cltd
push
cld
scas
mov
mov
pop
jbe
pop
jp
lock
push
pop
insl
sub
imul
lock
or
into
sbb
push
add
jge
inc
lock
inc
jne
out
dec
gs
cmp
mov
xor
addr16
push
push
push
add
push
incl
adc
jb
push
or
jnp
jge
push
in
loopne
push
int
cli
js
jno
hlt
mov
pop
movsl
jae
jns
notb
push
pop
xchg
jg
adc
arpl
dec
pop
jae
xor
push
adc
insb
sub
ja
inc
add
or
cmc
inc
stc
data16
stc
outsl
clc
sub
mov
mov
jbe
out
xorb
decl
jae
push
addr16
push
inc
push
jb
dec
pop
and
cmova
jo
push
sbb
add
push
hlt
mov
lock
pop
fdivs
push
mov
jo
jp
mov
bound
es
jnp
push
dec
adc
xor
push
pop
aad
fstl
popa
cmc
jnp
mov
incl
jne
jp
jle
pop
dec
jno
dec
pop
outsb
aas
js
pop
sub
push
mov
cmp
jo
push
mov
dec
mov
pop
cli
mov
xchg
jae
pop
xor
push
jmp
or
repz
jmp
ljmp
js
loop
pop
cwtl
jno
or
insb
mov
push
dec
je
jno
fbld
jecxz
pop
popa
arpl
adc
sbb
jns
dec
icebp
push
cld
fdivs
js
jl
pop
jmp
insb
sub
decl
pop
dec
jg
imul
inc
inc
inc
dec
push
jne
insl
and
imul
decl
dec
cld
jp
pop
int3
data16
jne
pop
xchg
pop
pushf
outsb
xchg
pop
popf
push
inc
jno
js
pop
popa
push
inc
lock
jp
jo
outsl
cs
or
jbe
jle
hlt
imul
pop
cmp
cmpsb
jb
ja
pop
lods
gs
jge
dec
dec
aaa
mov
push
add
ret
pop
and
jbe
dec
out
sti
jg
pop
aad
imul
inc
mov
ja
outsl
cltd
pop
fdivl
lcall
push
inc
dec
ja
inc
jns
pop
or
jo
or
push
lock
pop
in
push
adc
dec
lahf
je
mov
dec
ljmp
push
cwtl
jnp
jae
pop
rclb
pushl
mov
jno
inc
push
push
imul
jb
jae
inc
xor
adc
rcrb
repnz
icebp
jns
inc
mov
push
push
add
jg
mov
cmp
jecxz
arpl
mov
gs
sbb
pop
faddl
inc
movsb
je
jo
jle
push
jp
push
cmp
sub
push
adc
cld
jg
cmp
push
aad
shll
popa
sahf
data16
push
imul
call
push
pop
bound
pop
and
jle
push
stc
insb
movsl
pop
mov
jmp
sbb
jbe
jb
push
cmc
jge
inc
cmpsl
bound
je
sub
das
xor
and
addr16
push
out
out
popa
enter
mov
call
pushf
dec
dec
xor
add
push
or
sbb
and
loop
cmpsl
push
cltd
pop
jne
push
mov
jl
push
pop
adc
sub
out
push
les
push
ficoml
ljmp
ret
mov
pop
jp
jnp
dec
adc
dec
xor
stc
jp
or
ljmp
xor
jno
dec
iret
outsb
mov
jp
jb
push
jle
inc
push
dec
sub
imul
lcall
mov
dec
jo
inc
pop
xor
xor
decl
imul
ja
jle
pop
test
add
in
pop
jno
jb
and
pop
xor
ja
out
fsubrl
push
fists
loopne
loop
xlat
jae
jbe
pop
popf
mov
jg
dec
xor
mov
cmp
dec
les
jle
jp
jbe
dec
or
fcomip
push
imul
imul
inc
sbbl
push
pop
inc
pop
or
push
in
dec
out
dec
jp
pop
dec
jmp
jb
xor
dec
push
push
pop
sbb
call
pop
lds
jge
bound
mov
xor
jb
pop
fs
ss
sub
jnp
cli
push
out
scas
cmp
push
loope
lds
xchg
inc
mov
jge
cmc
cmpsl
out
mov
or
inc
insl
inc
in
addr16
popa
fildll
dec
sbb
popa
movsl
push
fwait
push
push
lock
mov
dec
inc
sub
push
sbb
ljmp
jnp
push
jo
jo
inc
push
push
pop
jb
les
lcall
adc
es
data16
push
add
js
jo
pop
add
lcall
pop
sub
jl
push
sub
pop
and
jne
je
inc
popf
inc
mov
inc
push
nop
clc
call
je
jo
push
or
inc
pop
jp
push
filds
hlt
jae
dec
cmc
inc
jle
rclw
xchg
pop
mov
fwait
inc
xchg
jno
loope
lods
clc
push
mov
js
imul
dec
push
pusha
mov
jns
pop
mov
out
insl
je
push
decl
out
clc
push
push
sub
jnp
jae
add
pop
es
sub
jp
ja
and
pop
and
push
jb
inc
icebp
inc
stc
arpl
inc
fdivrl
in
jae
ja
push
cmc
js
inc
lret
addr16
jno
push
std
jae
mulb
je
dec
mov
ljmp
popa
mov
addr16
pop
addb
pushf
jbe
push
js
cmpb
xor
push
push
clc
jmp
push
rcrl
jns
jo
push
mov
test
or
cvtpi2ps
inc
and
rorl
aas
push
or
insb
jbe
data16
xchg
mov
inc
arpl
xor
jp
jl
incl
jle
idivb
insl
rorb
push
sbb
pop
pop
ss
xor
pushl
xor
add
pop
or
add
add
add
jle
inc
inc
jo
lcall
ret
fsub
push
and
loope
and
loop
sbb
jecxz
sub
in
sub
and
fdiv
adc
loop
or
int
or
std
cmp
add
rcl
and
in
sub
leave
mov
lcall
push
orb
leave
shlb
jecxz
pop
mov
into
sarb
jecxz
jp,pt
mov
incl
fsubr
aaa
sub
stc
xlat
adc
loope
add
out
or
push
add
ss
iret
xor
mov
xor
and
scas
jmp
loope
and
bound
gs
pop
bound
out
xor
jge
pusha
push
xchg
insl
sbb
push
mov
jbe
dec
insl
push
outsl
jae
jle
inc
push
jae
push
inc
and
aas
inc
push
dec
bound
iret
insb
inc
sbb
and
inc
iret
shrl
dec
adc
add
pop
bound
mov
imul
sbb
adc
in
cmpsl
dec
adc
sub
je
dec
addr16
cmpl
les
filds
ud0
syscall
mov
insl
cmp
fwait
out
es
xchg
or
clc
jmp
in
das
mov
sbbl
idiv
jmp
aam
pop
lcall
rcrl
popf
or
pusha
cmp
push
enter
mov
jmp
xchg
sub
mov
les
out
dec
cmp
push
sbb
les
idiv
out
enter
mov
add
adc
or
lcall
and
das
mov
fsubs
push
cli
adc
mov
sub
jns
or
ficoml
cmp
or
out
xor
out
push
fisubrl
mov
into
or
pop
xchg
lcall
lret
jno
xchg
lret
mov
xchg
inc
aam
mov
stos
inc
loopne
or
ds
mov
jmp
js
pop
shll
adc
aam
lds
gs
dec
rclb
ja
cli
ljmp
bswap
mov
sahf
sbb
dec
outsb
stos
ljmp
mov
shl
daa
jp
sub
adc
dec
xor
xor
lcall
cmc
cwtl
push
idivl
iret
orl
or
lcall
push
xchg
fsts
fldcw
pop
mov
xor
push
mov
stc
xchg
insl
out
push
aam
mov
hlt
xchg
add
cld
xor
lret
cli
dec
fucompp
ja
cmp
cld
and
fists
mov
sub
iret
cli
loope
dec
jno
jmp
pop
nop
or
push
jle
jmp
in
out
or
int3
push
inc
pop
mov
and
ljmp
push
xchg
aas
unpckhps
push
add
cmp
inc
jg
or
loopne
jp
mov
daa
addr16
movsl
loope
mov
and
mov
in
adc
decl
jmp
ss
jmp
pop
jge
repnz
cmp
in
adc
lcall
inc
mov
stc
cli
daa
cmpsb
lea
push
fnsave
into
aas
test
daa
dec
je
ret
adc
call
mov
subps
imul
nop
repz
jb
mov
repz
shrl
jle
lds
push
cmpsl
or
ss
inc
mov
fistps
pop
xchg
call
aas
jb
addl
xchg
dec
pushf
clc
les
aaa
cs
push
mov
jg
pushl
jo
or
and
cmpsl
sub
pop
lods
loop
aas
xor
fldt
dec
adc
out
and
xor
daa
pusha
jno
push
outsb
xor
ret
pushl
cli
and
das
pop
inc
hlt
outsb
jbe
mov
dec
mov
incl
out
or
jbe
lret
xor
pusha
mov
xor
in
and
pop
jne
stc
xor
cmp
inc
xchg
sarl
pop
in
jb
xlat
lret
push
or
xchg
repnz
xchg
cmp
lods
hlt
cmp
loop
xchg
add
int
push
incl
ror
pop
pop
popf
lods
ja
lcall
rcrl
pop
xchg
pop
sbb
ljmp
jmp
add
adc
rcrb
dec
sbb
aas
mov
shrl
ljmp
sub
lods
xchg
sbb
jg
mov
cmp
sub
lahf
pop
repz
sti
mov
mov
pop
mov
mov
inc
mov
xor
fnstcw
jmp
leave
in
arpl
pop
cmpsb
lods
jns
push
daa
inc
repz
decl
inc
out
pop
loope
rcll
nop
sub
subl
mov
or
xor
hlt
incl
sbb
mov
push
icebp
pop
or
add
push
sub
daa
or
jmp
add
adc
mov
mov
icebp
jmp
cmp
add
sub
push
scas
cs
sbb
dec
and
mov
das
and
xor
lock
scas
fcoms
test
daa
test
xchg
jge
xchg
pop
cs
out
out
sub
ljmp
pusha
repz
adc
pop
stos
lds
pop
fcomi
repnz
incl
aaa
fs
movsl
icebp
xor
in
push
mov
sub
sbb
dec
ljmp
pushl
lret
lock
push
repz
das
insl
lret
push
add
aaa
incb
or
jle
adc
or
jmp
dec
ficoml
sbb
mov
repz
cmp
push
lcall
mov
jbe
outsb
int
xchg
cmpsb
inc
daa
lods
cld
sub
pushl
sti
mov
xchg
into
jmp
lods
jle
movsl
fsubl
push
dec
loopne
or
clc
call
andb
rcrl
xor
ret
mov
fwait
cli
aaa
mov
js
cmpsl
and
xlat
push
xchg
leave
aad
jg
scas
aaa
in
and
movsl
out
mov
mov
jle
cmpsb
daa
mov
clc
ljmp
sar
sub
mov
push
dec
test
mov
sbb
push
out
outsl
push
test
mov
scas
aam
xchg
stos
adc
lahf
fwait
push
jne
imul
sbb
mov
in
cmc
cmpsl
dec
or
dec
jmp
mov
sub
outsb
add
mov
dec
repnz
xchg
icebp
jmp
sahf
test
xor
fcoml
push
xor
in
hlt
mov
frstor
shll
call
cltd
int3
lret
loop
es
jp
mov
lods
adc
stos
jle
test
pop
lods
ss
sub
mov
mov
push
enter
shll
nop
push
mov
cmc
mov
jbe
and
lahf
dec
pop
icebp
outsb
fnstcw
cli
adc
mov
test
fadds
cmp
xor
fadds
ds
mov
mov
lret
out
mov
dec
lds
jg
addb
subl
sbbb
repz
sar
mov
inc
aam
xchg
or
xchg
add
inc
sbb
mov
aaa
shr
mov
dec
push
ret
jno
repnz
rcrb
jmp
mov
mov
push
xor
sahf
pop
push
outsl
pop
cmc
scas
adc
icebp
fisttpll
int
sarl
mov
and
ret
outsl
push
cs
icebp
xchg
vmovq
leave
fwait
mov
flds
mov
test
sub
mov
sbb
dec
in
loop
lods
in
xchg
scas
add
out
clc
mov
jle
jp
rorb
mov
pusha
xor
jmp
dec
xchg
nop
dec
pop
notb
sub
jg
mov
dec
leave
lret
out
cmp
push
lock
push
fdivrl
incl
mov
sub
add
dec
fxch
lcall
jmp
pop
fistl
mull
ret
int3
aam
das
loopne
adc
mov
adc
sub
call
mov
shlb
imul
in
sbb
mov
push
imul
into
pop
xchg
ljmp
jns
lahf
iret
push
jns
dec
stos
sarl
add
cmc
test
repz
addr16
das
outsb
push
cld
push
std
int
ret
hlt
cwtl
shufps
jp
mov
in
les
cmp
decl
jl
or
mov
add
inc
sub
cmp
push
push
or
jmp
add
or
cmp
sahf
dec
aad
outsl
push
mov
cmp
inc
and
incb
rcl
lret
imul
pop
dec
ds
dec
xchg
inc
loop
subl
pop
sbb
mov
mov
mov
js
pop
sub
cwtl
lret
xor
scas
xchg
jo
push
ud1
insb
int
mov
repnz
std
lcall
push
push
mov
cmp
je
inc
cmp
hlt
xor
mov
sbb
lahf
adc
outsb
mov
dec
jno
adc
call
loope
out
add
adc
inc
into
add
push
fisubrl
pusha
cmc
call
popa
aam
xor
xor
addr16
push
enter
fbld
fs
and
js
xchg
sub
lret
fcomps
jmp
scas
clc
lcall
and
icebp
nop
jg
sub
lahf
mov
jecxz
aad
sahf
lret
add
xchg
mov
lret
int3
in
lcall
and
lret
xchg
gs
mov
test
icebp
pop
fcom
test
pop
enter
dec
or
inc
outsl
push
inc
ret
movsl
mov
mov
aad
mov
push
add
int3
in
rolb
mov
stos
sbb
insb
cli
mov
loop
lcall
stos
into
in
sahf
push
jo
iret
mov
lods
jl
cs
adc
in
into
cld
insb
mov
sarb
lret
clc
mov
or
xor
push
fdivl
and
iret
cmp
sub
addr16
sub
outsl
cmpsl
or
push
jae
or
mov
cs
mov
in
scas
and
add
call
mov
pushf
cmp
dec
out
sbb
testl
push
mov
or
popf
xor
sub
pop
jecxz
or
and
and
push
adc
and
stc
pop
pop
xor
jnp
stos
add
and
insl
daa
aad
dec
outsl
call
insb
jmp
ss
pop
cmp
or
orl
in
jge
mov
push
pop
xchg
adc
dec
es
adc
push
mov
std
jae
add
inc
lret
ljmp
repnz
jo
repz
xor
jg
aaa
aam
push
add
push
add
in
mov
dec
aaa
loopne
jle
or
imul
mov
pop
jo
mov
xchg
fcomip
stos
decb
out
mov
mov
hlt
lret
add
fldt
cwtl
dec
ret
std
mov
addr16
iret
rcrb
popf
push
call
pusha
loopne
sub
mov
or
insb
jg
pop
faddl
das
loopne
push
insb
rcr
mov
or
pop
icebp
das
mov
ds
enter
mov
loopne
mov
clc
cli
pop
inc
fsubrl
xor
lds
jmp
insl
repz
push
orl
mov
mov
in
call
mov
testl
and
das
and
pop
loope
ja
mov
xor
stos
sbb
mov
push
dec
push
adc
call
inc
or
push
jl
test
int3
jmp
decb
lods
popa
xor
push
sbb
cltd
in
or
dec
testl
test
data16
push
mov
out
jmp
ffreep
lods
dec
pushf
or
fs
push
loop
mov
lcall
in
rcl
or
mov
sahf
clc
inc
call
iret
nop
push
pop
push
imul
cld
orb
mov
jmp
inc
js
cltd
stc
out
jg
decl
stc
lods
jb
dec
cs
mov
adc
adc
shll
pushl
cmc
jnp
int3
aas
ja
lahf
fdivs
jne
cmpb
jg
fistpl
sub
or
loopne
inc
push
pop
divb
mov
jmp
out
cmp
pop
movsb
mov
cmp
mov
or
out
xor
sar
pushl
aad
into
dec
or
cmp
jmp
dec
es
addl
stc
add
mov
cmp
mov
lret
cmpsb
test
pop
dec
xor
jg
or
sbb
ljmp
pop
fisttpl
mov
push
pop
push
mov
mov
fstpt
pop
stos
lcall
shrl
call
daa
test
jo
int3
outsb
out
clc
fcomip
push
push
add
push
or
jmp
jne
jmp
push
cmpsb
dec
sbb
stc
mov
std
ljmp
lea
sub
fwait
rol
cmc
ss
and
or
xchg
mov
inc
xor
lods
into
loop
fisubrl
fisubl
out
jmp
ljmp
shll
arpl
sub
sub
faddl
mov
pop
cld
das
sar
push
and
cmpsb
data16
jne
push
lahf
jle
or
mov
mov
sub
lret
dec
shlb
sub
xlat
scas
lock
mov
dec
and
push
in
and
test
enter
jg
sbb
pop
iret
stos
ds
mov
fwait
or
loopne
ret
cwtl
xchg
icebp
decl
icebp
repz
sarl
cli
mov
xchg
je
into
mov
lahf
sub
cltd
pop
jae
lds
cs
clc
jno
ss
push
testb
jbe
fistpll
loopne
lcall
dec
vscatterdpd
ret
mov
push
inc
into
xchg
sbb
jmp
notb
mov
sub
pushf
inc
bound
std
mov
frstor
mov
xor
push
std
sub
aas
arpl
nop
mov
mov
stc
add
out
jne
mov
and
push
ss
test
popa
mov
cmpsb
out
push
adc
incl
lret
int3
fldenv
cltd
les
lret
in
mov
shl
cmpsb
xor
sahf
mov
lock
stc
push
fcoml
stc
add
jnp
in
jl
ret
les
xchg
adc
mov
xchg
je
fidivrl
mov
ret
repz
dec
pop
mov
daa
data16
idivb
fcomip
fldcw
adc
adc
pop
ss
inc
insl
push
lcall
aaa
iret
pop
test
sarl
push
mov
jnp
mov
lds
shlb
call
jnp
out
es
fwait
scas
adcb
mov
lods
jg
aas
adc
mov
adc
push
push
ds
cli
clc
les
int
out
jbe
aaa
xor
mov
incl
and
sbb
aas
les
mov
sarb
push
push
xor
lret
xchg
fiadds
fdivrl
add
push
mov
idiv
add
mov
lcall
lret
cli
stos
adc
in
divb
cmpsl
ljmp
cmp
add
incl
and
or
xchg
mov
xor
into
push
loopne
add
or
shrb
loopne
inc
shlb
stos
pop
orb
lcall
xor
jp
lds
lret
outsl
pop
jo
aaa
rcl
sub
out
mov
decl
lcall
mov
push
jbe
cwtl
fxch
notb
push
xchg
mov
div
sub
fisttps
int3
test
jg
popa
sar
mov
nop
ja
or
ljmp
dec
mov
lods
xor
popl
mov
cmc
cmpsl
inc
xor
test
sahf
push
mov
add
loope
data16
lcall
mov
call
rcl
sub
and
fstl
scas
adc
icebp
insb
dec
stc
mov
into
sub
cmp
push
push
outsl
pushl
inc
lcall
dec
pop
mov
loop
push
jmp
cltd
decl
dec
mov
inc
rol
aas
stos
insl
out
cli
test
or
or
dec
jo
inc
pop
xor
sahf
pop
mov
xchg
dec
pop
xor
lock
outsl
fmulp
fmulp
push
in
xchg
mov
repnz
out
into
cmpsl
xchg
clc
adc
mov
iret
rorb
cld
scas
sub
cltd
add
xor
xor
test
cs
cltd
fcompl
aaa
pop
fldcw
fwait
into
cmp
rol
cs
inc
iret
shll
rorb
dec
mov
sbb
mov
cs
xor
outsl
mov
loopne
decl
insb
ljmp
cmp
cli
jecxz
jmp
fnstcw
call
xchg
leave
sbb
sbb
ljmp
stc
mov
iret
leave
jmp
push
repnz
fbld
pop
mov
int3
les
testb
ret
test
ficompl
aam
stc
bound
jnp
push
std
mov
dec
xchg
aad
addl
in
iret
in
hlt
xor
fwait
ljmp
imul
add
ret
jecxz
fisubrl
inc
sar
cmp
mov
dec
mov
xchg
push
lcall
into
in
jo
mov
lods
outsl
lret
dec
inc
mov
fsubp
ljmp
pop
test
mov
int3
mov
mov
push
mov
notb
outsb
ret
popf
addr16
call
dec
or
mov
in
cld
add
icebp
jg
jp
mov
dec
lock
jg
js
inc
in
rol
mov
and
ficomps
decl
fs
out
loopne
jl
out
sbb
std
jmp
xchg
inc
ret
ljmp
or
adc
pop
add
lahf
in
ja
dec
clc
pop
test
test
xchg
fsubrl
and
mov
mov
gs
jle
ljmp
cld
push
sub
aaa
aam
mov
ret
cltd
insl
in
mov
mov
adc
pop
pop
xor
or
jmp
pop
cmpsl
jg
filds
mov
es
mov
pop
sub
jg
inc
sarb
jb
xor
out
mov
mov
dec
push
xor
mov
iret
imul
mov
fwait
out
out
pusha
and
call
push
loopne
lcall
repnz
and
fdivl
shr
repnz
adc
mov
fsts
jg
jp
lock
cli
mov
lahf
push
dec
loop
in
or
data16
fisttps
fisubrs
xor
sbb
subl
cwtl
clc
test
sahf
add
lods
scas
sub
pop
lds
repnz
dec
mov
mov
psubq
cmp
out
cli
in
jo
ljmp
sub
ds
jle
jo
lret
test
pushf
and
ljmp
into
mov
xchg
das
cmp
jg
ljmp
gs
jmp
rorb
mov
mov
mov
shr
mov
fcom
mov
ret
push
sbb
mov
ss
and
cld
sub
pop
mov
push
pop
mov
test
push
test
call
adc
pop
sub
into
mov
loop
ja
cmp
pushl
xor
jne
adc
mov
mov
push
and
push
les
fisttps
mov
mov
mov
push
mov
lods
test
ret
mov
call
cs
popf
in
adc
in
ret
pusha
loope
cmp
dec
sbb
sbb
lock
mov
jge
add
sbb
mov
dec
call
cwtl
in
mov
mov
pop
jmp
call
subb
loope
push
xor
sarb
stc
out
out
enter
cld
sub
decl
daa
mov
jg
xchg
push
orb
in
lea
mov
jg
or
subl
and
lret
cltd
dec
filds
out
mov
fwait
cmp
call
movsl
inc
xrelease
sub
xchg
shll
jnp
push
pop
pushf
push
popa
and
insb
in
mov
jmp
idivl
jmp
cs
clc
lret
repz
js
test
cmp
ljmp
inc
les
mov
sub
jne
mov
std
cmpl
sahf
js
jno
mov
in
pop
aas
and
shr
sar
cli
std
cmp
repz
dec
and
mov
call
lret
sbb
and
incl
std
mov
xchg
inc
sub
mov
shrb
out
cli
xor
je
movsl
sub
loop
cmp
hlt
xchg
sldt
call
pop
lock
hlt
inc
sbb
dec
push
cmp
loope
xor
sarl
push
mov
jg
push
lret
add
mov
sbbl
jo
rcrl
scas
jg
fyl2x
repz
rcrl
dec
in
sub
fisubl
stos
jnp
mov
insl
cs
cs
sbb
test
jmp
dec
pop
lds
fisttpll
aas
stc
lods
cli
mov
and
lret
mov
mov
lcall
popa
mov
sahf
add
sub
insb
cli
mov
or
pop
fucom
stos
ljmp
lods
out
stc
pop
cmp
mov
jne
push
jg
hlt
jbe
int3
mov
pushf
cmp
int
push
push
cmpsl
ror
fwait
or
je
mov
aaa
mov
jmp
testb
decl
outsb
push
shl
icebp
mov
and
cmpsb
mov
mov
ret
mov
inc
sbb
ds
filds
imull
in
lock
adc
shll
xchg
call
push
cmp
cltd
test
sbbb
iret
pop
sarb
adc
sar
cmp
xchg
push
pop
scas
bound
das
hlt
in
rcrb
icebp
cmp
loopne
mov
repz
add
xchg
out
shl
add
jmpw
add
mov
scas
cmpsb
adc
lods
inc
jmp
dec
mov
mov
pop
lret
push
xchg
jne
adc
pop
ljmp
cs
cwtl
jns
mov
std
jl
mov
aas
cmc
jg
ds
push
pop
imul
jge
insb
rcrl
pop
out
data16
incl
xor
fbld
pop
dec
sbb
call
push
sbb
mov
xchg
push
out
inc
into
std
mov
add
dec
xchg
bound
outsl
inc
ljmp
std
decl
aad
pop
mov
js
lahf
fimuls
sub
cld
jmp
sub
popf
fnstenv
jge
das
jmp
or
enter
or
lods
mov
jae
into
call
push
paddb
mov
iret
mov
push
rep
push
cld
daa
xor
adc
mov
int3
les
pop
adc
cs
outsl
push
aas
test
inc
mov
cwtl
out
ds
mov
fstpt
outsb
jmp
imul
flds
gs
nop
xor
cmpb
jge
cmp
inc
pop
cld
fildll
aad
loope
mov
outsl
sub
cmpsb
jmp
mov
jae
mov
push
sbb
incb
adc
mov
pop
mov
jb
pop
pop
sbb
jle
int
stos
adc
mov
push
and
xchg
xor
lock
insb
push
out
jbe
mov
lret
adc
pop
test
push
push
mov
cmpsb
jmp
push
pop
hlt
push
loop
pop
jae
mov
mov
lret
clc
mov
xchg
stos
fstpt
push
fwait
jmp
lahf
imul
out
inc
push
mov
jmp
stos
mov
dec
add
mov
test
sahf
aad
adcb
cmp
call
fcmovnb
push
or
pop
adcb
lock
icebp
rcll
repnz
adc
aas
icebp
inc
cld
jmp
lcall
loope
loope
scas
fisttpll
dec
dec
sub
dec
incl
cmp
stc
cmpsl
leave
cwtl
or
lret
fwait
lock
add
mov
cmp
hlt
fisubs
cli
push
sti
mov
mov
dec
xchg
inc
clc
decl
mov
or
gs
pop
lock
pop
lods
inc
fidivl
lahf
xchg
imul
fsubrp
stc
stc
xchg
inc
or
sub
cwtl
mov
inc
pop
or
add
cld
ds
or
pop
lcall
mov
jae
sbb
cmp
push
sub
dec
popa
sti
call
bound
cltd
dec
lock
addl
pop
or
add
fimuls
pop
out
jle
push
jnp
ds
stos
jle
lahf
punpckhdq
mov
push
cmpl
cmp
xchg
rclb
cli
js
mov
aaa
mov
or
int3
sbb
aam
aas
test
fiadds
std
jg
cmp
and
cmp
mov
jmp
divl
adc
and
and
call
push
mov
test
nop
cs
add
inc
int3
pop
pop
lock
or
pop
dec
jnp
lahf
js
add
sar
cmp
out
pop
dec
xlat
sbbl
lock
mov
or
out
shlb
jns
adc
push
push
shll
mov
mov
add
dec
jg
rcrl
pushf
pop
inc
xor
xor
sbb
mov
xor
test
push
adc
xor
pushl
mov
stc
ja
int
jmp
pop
add
sub
ror
int
add
ds
das
shrb
mov
lods
int
xchg
sbb
lods
cli
mov
lock
stos
adc
lret
cli
aaa
stc
rol
sub
inc
and
lret
dec
iret
pop
pop
or
cmp
mov
leave
and
xor
push
cmp
aad
adc
clc
xadd
out
ficomps
jg
add
or
push
scas
shlb
sbb
pop
dec
loop
mov
cmp
pusha
sbb
icebp
sarb
sbb
sub
daa
xchg
ficomps
sub
outsl
add
decb
jno
adc
sub
fs
call
add
rclb
das
pop
bound
cli
into
and
in
mov
cmp
in
xchg
test
adc
hlt
mov
out
add
push
out
shlb
fldenv
inc
daa
adc
sarl
shl
inc
ret
add
xchg
lret
in
add
xchg
ror
in
mov
xor
clc
call
adc
rol
dec
in
in
mov
fbld
and
out
or
ljmp
clc
and
ss
ja
fsts
and
xor
lret
pop
or
bound
stc
ss
leave
lret
daa
push
loop
aaa
push
add
dec
dec
pop
into
push
call
push
rorb
fstps
and
out
push
repz
add
cmovb
cmp
pmaxub
or
into
add
inc
fldenv
outsl
pop
lret
pop
xor
xor
jl
push
inc
dec
js
loope
mov
add
in
gs
fisttpll
js
jmp
add
aas
cmp
ljmp
push
mov
std
scas
adc
cmp
mov
fld
lcall
roll
call
hlt
jmp
adc
loope
das
dec
negl
popa
sub
aas
add
repz
enter
push
imul
jbe
std
jmp
xor
aas
in
enter
movsl
push
cwtl
sub
add
pop
out
dec
pop
mov
mov
loop
popf
cmp
fildll
pop
and
arpl
and
jae
lcall
jle
mov
inc
ljmp
fdivrs
adc
testl
pop
sub
jmp
std
mov
lds
sarb
or
jg
hlt
cmp
or
mov
lret
dec
or
xchg
cmpb
push
cmpsl
push
mov
push
jg
icebp
lret
pop
cmp
add
mov
or
or
xchg
ss
pop
and
mov
cmpsb
aas
add
lret
aas
scas
repz
dec
jne
pop
icebp
cmp
add
int3
xor
push
das
sbb
loope
sub
jmp
sub
aaa
cld
adc
cwtl
pop
dec
xchg
inc
adc
xor
jo
scas
aaa
adc
pop
sub
and
dec
or
rol
mov
or
xor
rorb
jo
lcall
and
push
call
mov
xlat
imul
mov
cmp
xchg
pusha
add
pop
cs
in
sbb
mov
loop
or
xor
loope
adc
movsl
incb
insb
xlat
add
aas
movsb
push
cs
out
pop
sub
inc
iret
pop
adc
jbe
inc
and
or
sbb
dec
cwtl
lret
sbb
mov
aad
ja
xchg
pop
int3
inc
jmp
sub
lods
ret
or
out
mov
adc
jmp
jle
rorl
jmp
cmp
sti
ret
add
push
scas
mov
addr16
fiadds
clc
int
sbb
push
rcrb
outsl
pop
dec
in
dec
out
les
push
and
jge,pn
outsl
xor
cmp
mov
push
sbb
gs
pop
xchg
lret
mov
adc
out
cmc
hlt
stos
pop
mov
rolb
test
ret
into
icebp
mov
call
mov
xchg
push
in
mov
divb
xchg
js
incl
out
mov
shr
repnz
call
inc
mov
sbb
xor
jg
stos
out
jne
xorb
jl
lods
cs
inc
and
dec
shlb
ljmp
das
xor
mov
xchg
jle
push
sub
cld
jecxz
push
cmp
or
mov
jg
pushl
lcall
in
mov
lods
enter
mov
push
cmp
mov
sbb
test
dec
lock
lock
aam
pop
mov
and
pop
dec
add
pop
lock
pop
lods
into
sahf
pop
leave
xchg
nop
mov
call
ljmp
scas
mov
jle
aad
mov
lret
pop
popf
out
mov
aaa
pop
test
cmp
and
lock
cltd
jmp
and
imul
out
cli
aas
test
push
cltd
mov
stos
pop
cs
flds
lcall
cltd
cld
movsl
xchg
pop
lahf
roll
insl
and
call
mov
cwtl
sbb
mov
into
dec
xchg
scas
call
daa
and
stos
std
pop
cmp
mov
nop
xor
pusha
clc
xchg
test
push
test
std
out
cmp
incl
mov
ljmp
jle
mov
cs
jecxz
call
xchg
mov
push
std
mov
rcr
sarb
loopne
xor
mov
shl
mov
scas
add
lahf
imul
mov
cmp
fstps
fsubrs
xchg
test
loope
jb
add
es
adc
sub
and
in
into
ret
cs
push
clc
or
adc
test
loope
lret
push
in
shl
repnz
mov
aad
sub
inc
loop
cmp
int3
cmp
mov
add
cmp
leave
lret
shrl
ss
das
or
fwait
mov
inc
ror
mov
xchg
cli
test
jl
les
popf
push
hlt
call
or
daa
popa
inc
pop
lcall
in
pop
mov
repnz
popf
rorb
out
scas
sbb
std
sbb
sbb
lock
ljmp
cmpsb
imul
push
jb
mov
pop
add
aam
mov
mov
dec
sub
hlt
push
cmp
jp
loop
push
jbe
mov
xlat
incl
or
jmp
jle
outsb
dec
jbe
push
ljmp
jle
add
int3
pushf
scas
xor
stos
push
clc
loop
cltd
jmp
push
mov
dec
jne
in
hlt
fstps
outsb
xchg
iret
test
xchg
add
stos
cmc
arpl
loopne
addr16
jle
stc
mov
sub
fs
pushf
movsb
daa
fwait
aas
andl
insb
insl
sub
cmp
jmp
dec
iret
mov
shll
outsl
aad
push
push
mov
or
movsl
enter
out
sbb
ret
jmp
push
mov
jno
icebp
mov
stos
cld
ljmp
sbb
pop
cltd
divl
jl
out
fdivs
fadds
or
fmuls
cltd
stc
push
push
sbb
cli
cld
sbb
mov
movsl
ljmp
test
mov
ljmp
jmp
ret
add
ja
pop
loope
loope
cmpb
cmp
addl
cwtl
push
mov
pop
arpl
mov
hlt
inc
iret
add
aas
fisttpll
bound
mov
je
test
mov
ret
insb
in
cwtl
fwait
push
mov
dec
sti
push
add
lea
pop
sub
call
cld
out
ds
or
mov
movsb
enter
arpl
stos
mov
icebp
test
pop
add
mov
test
sbb
jg
int3
lcall
outsb
pop
test
cmp
sahf
outsb
jae
into
sbb
sub
lahf
in
push
mov
dec
icebp
sub
mov
fadds
and
out
rclb
pop
scas
loop
jp
in
pop
out
cmp
test
jg
call
lods
fdivr
lock
xchg
add
call
fbld
mov
mov
lret
jb
mov
flds
lock
gs
xchg
cmp
fidivl
shl
jle
mov
aaa
cmp
test
lcall
imul
ljmp
icebp
mov
xchg
push
xor
push
lar
mov
cld
sub
imul
adc
mov
into
scas
pop
mov
call
push
sbbb
lock
loopne
push
cs
repnz
cs
mov
fistps
add
xorb
pop
dec
mov
popl
pop
cmpsl
out
ljmp
cli
fwait
xchg
loop
cli
pusha
je
icebp
dec
adc
shll
push
lcall
jbe
int3
loopne
lret
push
mov
push
add
jge
xor
push
stos
sub
jg
in
xchg
push
sti
mov
aam
subb
out
push
stos
call
pop
sahf
ret
xchg
pop
sub
add
adc
cmp
test
pop
cs
add
cmp
xchg
jle
test
stos
scas
fmull
jg
jb
test
ds
mov
push
sub
mov
push
xor
repz
jns
iret
data16
jo
jl
decl
fisttpl
dec
mov
fldenv
movsb
add
mov
xchg
icebp
sbb
aas
sahf
shl
adc
mov
cmp
cli
pushl
pop
jno,pn
out
xchg
leave
out
call
repnz
sahf
cli
pop
cld
scas
push
cltd
fdivs
das
xchg
aad
out
cs
pop
cmp
sahf
xor
fnstcw
loope
hlt
sub
push
outsl
mov
pop
clc
jg
out
mov
xchg
leave
lock
mov
out
jo
inc
push
imul
clc
mov
mov
cmpsl
pop
or
add
shll
pop
addl
aaa
mov
xchg
stos
jmp
bound
movb
ds
aas
mov
stos
hlt
outsb
mov
pop
aas
std
mov
pop
ljmp
pop
fcmovnu
xchg
cmc
js
sub
dec
ljmp
sahf
sahf
xchg
add
or
adc
push
mov
dec
das
jo
adc
stc
sbb
push
gs
in
loopne
fisubrl
dec
cli
push
jbe
jg
push
fstps
mov
pop
decb
sbb
jmp
mov
pop
test
xchg
in
mov
outsl
and
jp
and
inc
dec
and
clc
test
mov
add
push
adc
add
les
fildll
mov
stc
lds
cs
ds
scas
push
lods
add
dec
add
daa
mov
pop
mov
stos
out
jmp
stc
mov
push
imul
clc
fnstcw
dec
xchg
sahf
int
gs
lods
lods
mov
icebp
lahf
hlt
push
mov
pop
in
mov
stos
cld
dec
xor
div
leave
jmp
pop
or
or
pop
popf
in
jne
out
clc
mov
ds
stc
fdivrp
js
insl
adc
jbe
lcall
push
call
rcll
ljmp
inc
scas
js
and
enter
adc
adc
xchg
add
push
mov
outsl
add
lret
ljmp
mov
ret
scas
iret
mov
stc
jmp
mov
test
outsl
jle
mov
mov
pop
push
push
xor
dec
cmpsb
dec
xor
cs
rorb
movsl
jecxz
mov
xchg
fstl
loope
rcrb
fimuls
push
jmp
decl
jle
jae
mov
mov
movsb
stos
pop
movsb
insb
cli
in
push
pop
dec
scas
aas
cmp
mov
shrl
lea
adc
or
adc
push
adc
jle
lahf
fistps
add
sub
lret
outsb
movsl
pop
rolb
sar
add
adc
xor
sbb
lcallw
ja
test
mov
mov
fistpll
mov
push
mov
or
cmp
scas
icebp
xor
xor
and
cmp
push
xor
push
rcll
sahf
fincstp
jmp
loopne
in
scas
pop
out
mov
jl
in
mov
mov
fs
hlt
aas
or
daa
das
ss
mov
push
pop
adc
test
inc
jmp
mov
scas
nop
add
aad
nop
outsb
faddp
jo
pop
cld
aaa
fdivrl
icebp
mov
jmp
pop
std
jmp
and
xchg
ret
cmpsb
mov
out
dec
sub
inc
or
call
ror
add
adc
insl
sub
lods
pop
sub
jecxz
add
jp
mov
decb
sub
pop
push
loopne
mov
pushf
cmc
decl
sub
sub
stos
fwait
dec
rorl
push
sahf
cmpsl
push
aaa
add
cmp
pop
cmp
jg
ds
lods
ljmp
mov
dec
pop
out
mov
xchg
clc
lahf
cmc
aaa
fidivrs
ficoms
lock
rcll
mov
outsb
lcall
mov
and
or
dec
push
cli
sub
or
or
jg
ret
jl
shll
mov
ficomps
daa
sub
xor
leave
sub
nop
sbb
out
mov
sub
pop
or
jle
and
mov
cmp
mov
adc
roll
lods
and
and
mov
xchg
in
mov
sbb
arpl
and
push
push
mov
mov
rorl
jg
stos
aad
dec
frstor
cmovle
loopne
std
jmp
push
mov
lea
sarl
fsts
clc
nop
clc
cwtl
shlb
fs
dec
fwait
shr
pop
ficoms
xchg
fisttpl
dec
xlat
dec
in
ret
shlb
lock
loope
add
push
mov
fwait
xlat
mov
adcl
into
mov
fists
fwait
aaa
bound
push
fs
sub
and
out
jmp
or
mov
imull
lock
jmp
call
incl
pop
pop
nop
div
adc
imul
cmc
repnz
mov
lcall
mov
mov
ds
out
fadd
loopne
in
bsf
lock
add
mov
add
daa
add
into
pusha
repz
cmpsl
pop
adc
andl
clc
cmp
loopne
push
daa
push
les
adc
out
adc
hlt
das
and
xchg
and
loopne
jmp
mov
ret
pop
mov
stos
xlat
jmp
xor
sub
ss
sub
decl
xchg
in
jle
add
fnstenv
or
or
add
mov
aas
fwait
decb
push
mov
in
sub
mov
lock
cmp
pushl
cwtl
push
cmp
clc
imul
adc
hlt
pop
jg
push
call
adc
sub
push
rclb
sbb
lcall
mov
ljmp
adc
hlt
add
imul
mov
std
xchg
sbb
push
or
daa
and
int
cmp
aas
mov
or
sub
stos
jbe
je
and
stc
test
or
in
das
fwait
sub
xlat
mov
mov
dec
outsb
xor
sarl
das
nop
xor
or
xchg
push
adc
mov
lock
leave
shr
mov
repz
ret
fdivp
ss
jecxz
addl
adc
cmp
cs
mov
into
mov
lock
dec
jmp
or
add
fsubr
pop
mov
mov
iret
mov
mov
ss
ja
or
xor
negb
mov
stc
add
out
mov
cmp
in
stc
mov
les
idivb
mov
push
inc
sub
outsl
in
ror
xor
add
sbb
pop
lock
imul
cmpsl
faddp
ror
icebp
jl
dec
loopne
fisubrs
cmp
loop
push
enter
mov
sahf
gs
into
cmp
inc
bound
lcall
je
sahf
cmpsl
scas
mov
clc
loopne
rorb
fs
ret
je
inc
mov
cmp
dec
cltd
and
push
push
hlt
insl
loop
test
arpl
mov
or
add
outsb
loopne
sahf
inc
cld
jg
or
jns
push
push
fidivs
ljmp
push
fidivrs
jecxz
push
insb
cmp
or
cmp
push
mov
lahf
pusha
and
push
insl
in
orl
outsl
decl
repnz
adc
jge
sub
jne
xchg
dec
mov
dec
pop
sub
test
shrl
or
push
test
out
pop
mov
mov
xchg
fiaddl
cmpsb
rorb
sub
pop
call
mov
outsb
sbb
push
mov
mov
mov
push
lahf
and
pop
das
sbb
sahf
dec
add
push
call
pop
sar
adc
test
faddl
in
rcll
incl
pop
pop
pop
rcl
jne
adc
sub
cmc
jns
sbb
jg
aas
jno
and
loop
push
jb
scas
fbstp
cmp
mov
dec
insb
fisttpl
inc
xor
dec
inc
push
pop
int
jl
out
pop
push
add
push
jne
jp
inc
sbb
inc
xchg
mov
in
mov
rcrl
sub
decl
incl
jl
and
push
outsw
jne
sub
adc
inc
inc
je
add
pop
dec
out
sbb
jno
adc
or
jmp
std
sub
jmp
or
inc
pop
adc
jo
lret
pop
or
shlb
loopne
jle
jne
pop
sbb
add
inc
inc
pop
pxor
pop
fisubrl
adc
inc
xlat
or
xor
outsl
or
pcmpgtd
pop
push
jo
lock
xor
push
inc
push
cs
int
push
xchg
adc
les
mov
cld
or
pop
or
adc
scas
and
fcompl
ds
or
mov
jmp
jo
cld
mov
or
decl
icebp
repz
sub
pop
stc
lock
repnz
xchg
sub
rclb
and
jns
push
xor
lods
shlb
fucomip
inc
shrb
testl
push
adc
pop
push
imul
aaa
or
dec
or
cmp
js
stc
ja
add
outsl
ret
lds
jl
jae
sub
jge
or
xchg
mov
cmpsl
adc
in
push
nop
fsts
daa
mov
icebp
dec
dec
or
xchg
xchg
sub
mov
pushl
dec
fbstp
dec
mov
xchg
sub
mov
shr
lcall
or
test
sub
xchg
jmp
sbb
outsb
mov
ss
and
repnz
jo
add
popf
aas
sarl
ss
jns
adc
mov
sub
pop
and
sub
xchg
jmp
mov
lret
ret
cld
das
adc
test
and
adc
int3
push
or
mov
sbb
push
push
loopne
ljmp
xlat
pop
dec
xor
idivl
mov
dec
icebp
xor
outsb
dec
dec
push
add
dec
pop
ljmp
mov
or
cld
add
lock
adc
or
pushf
mov
push
es
cmp
ret
fldcw
and
sub
pop
push
and
and
rclb
dec
inc
ljmp
clc
call
insl
adc
push
outsl
imul
mov
xchg
rcll
mov
and
jo
and
aaa
xor
adc
sbb
ja
scas
add
test
jle
jl
in
lret
ds
stc
icebp
pop
bound
cmc
dec
sbb
inc
and
push
jne
mov
jle
mov
or
xchg
sarl
lret
sub
or
pop
mov
cld
ds
dec
adc
aas
dec
fpatan
ror
test
frstor
adc
lock
fistps
push
cmp
jbe
clc
in
push
push
inc
inc
add
test
add
or
mov
adc
jb
or
sbb
pushl
loop
sub
imulb
cld
push
add
push
or
sub
incl
mov
or
ljmp
jecxz
inc
jbe
pop
hlt
jmp
pop
sub
inc
cmpsb
cli
daa
inc
xchg
popa
ss
mov
outsb
pop
into
call
cwtl
fildl
push
mov
pop
xor
dec
pop
cli
jge
ret
imul
ucomiss
pop
add
sar
lods
int3
clc
jl
out
xor
insl
aas
icebp
adc
loop
lahf
lcall
fldt
xor
sub
push
lods
mov
ja
stc
adc
dec
cs
stos
into
pop
imul
in
sti
pop
arpl
sub
out
add
fisttpl
sbb
jg
push
lret
mov
mov
xor
and
xchg
aam
inc
cs
adc
jmp
call
push
xor
mov
std
mov
cs
mov
jge
lret
push
movsl
mov
in
fsubs
lock
inc
rol
xor
sub
outsb
in
ror
out
push
icebp
lcall
push
and
shl
ds
push
mov
lahf
repz
sub
fsubrl
jne
mov
lret
cmc
xchg
jb
movsl
popf
int
mov
xchg
adc
adc
lcall
into
jmp
xchg
cltd
mov
outsb
insl
leave
int
mov
movsb
popf
pop
loop
jp
mov
in
repz
adc
mov
jg
incb
fndisi(8087
mov
sahf
xor
loopne
outsb
mov
adc
out
sub
mov
pop
pop
movsb
push
addr16
aaa
int3
in
repz
mov
pop
mov
xchg
dec
stos
scas
pop
imul
loop
inc
into
push
push
dec
push
insl
loopne
xchg
pop
out
jae
mov
into
loop
xor
mov
scas
sub
mov
call
shll
lcall
idivb
lcall
ret
repnz
pop
enter
cli
inc
popa
or
jo
repnz
fwait
shl
xchg
push
jmp
imul
cli
clc
repnz
push
jae
das
lahf
out
or
pushl
daa
aam
push
pop
ror
mov
sahf
das
jle
or
clc
mov
pusha
jae
or
aam
test
fwait
cs
xor
lret
pop
mov
dec
popa
shr
mov
in
sub
lret
or
push
decl
sbb
pop
add
add
adc
ss
mov
add
jmp
mov
repnz
lea
xor
mov
mov
cmpsb
mov
sbb
testl
xchg
push
fstpl
cli
pop
std
bnd
clc
stc
fmuls
shrb
ds
into
pop
add
bound
in
popl
jg
adc
pop
lret
push
push
add
inc
dec
int
lcall
and
cld
loopne
pop
fists
sbb
cmc
xchg
mov
dec
divl
cltd
fidivs
cmp
loope
pop
gs
cmp
int
cltd
lret
cmp
in
cmpsb
jmp
fisubl
and
push
jnp
aas
mov
scas
cmp
mov
cmpsb
aaa
into
cmp
xor
es
nop
cld
cmpsb
mov
fistps
sbb
or
scas
and
das
sbb
addr16
ds
mov
jg
mov
int3
or
divl
pop
push
cltd
and
sbb
dec
jecxz
ljmp
inc
aaa
lahf
lahf
out
adc
and
mov
add
mov
ret
mov
pushf
fwait
neg
stos
mov
push
ret
mov
call
mov
and
jle
jne
lcall
mov
ljmp
movsb
out
cs
add
push
mov
cmp
shlb
repz
push
lcall
lret
push
jbe
adc
clc
push
imulb
aas
push
in
out
lret
pop
sarl
lock
incl
imul
scas
imulb
lcall
aas
addr16
adc
std
call
and
out
sbb
push
mov
or
jge
xchg
mov
jg
pop
or
adc
sti
imul
pushf
adc
xor
pop
loope
incl
mov
adc
int3
icebp
mov
mov
pop
and
scas
scas
mov
and
sub
mov
loop
bound
xor
outsl
ljmp
pop
incl
push
cmp
dec
jae
imul
cmp
std
cwtl
lret
jecxz
pop
lret
mov
pop
mov
ljmp
in
sub
and
pop
pusha
dec
pop
xlat
or
xor
fnsave
out
lds
sbb
jecxz
add
mov
leave
cmp
fdiv
lret
push
pop
mulb
add
fbstp
aas
push
into
mov
clc
jmp
scas
mov
fwait
or
rcl
mov
or
cmp
jno
incl
pop
or
test
ss
xchg
cmp
pop
test
ljmp
in
adc
std
stc
sbb
adc
xchg
cmp
mov
cld
cwtl
repz
and
dec
clc
decl
fsubl
jle
pop
xchg
lods
adc
fsubrp
mov
fisubs
incl
push
stos
loop
repnz
decl
ds
clc
jmp
icebp
rolb
fmull
xchg
les
iret
aad
sub
out
cmc
jmp
iret
xchg
dec
mov
pop
or
mov
add
lock
imul
mov
and
std
mov
das
nop
aad
test
cs
je
mov
pop
div
mov
daa
das
cwtl
leave
or
dec
movsl
shl
lds
push
pop
dec
adc
sub
mov
dec
sub
shl
in
ret
fnstcw
inc
lods
div
mov
cs
or
jmp
bound
lock
incl
sbb
cld
in
stc
jno
and
jb
ret
inc
mov
fnstenv
cmc
call
sub
pop
cmp
orl
int3
jg
pop
bound
mov
fistl
sub
mov
std
ljmp
mov
push
ss
int3
insl
jae
jle
idiv
in
into
testb
mov
jbe
lret
jle
pusha
fnstsw
mov
sub
loopne
cwtl
pop
add
nop
arpl
sbb
ja
cld
in
in
js
in
je
cmp
sar
ret
ljmp
int3
movsl
call
mov
jmp
push
cmpsl
ljmp
ficomps
ljmp
outsl
enter
jb
xor
push
cmp
addr16
pop
outsb
inc
fidivs
movsl
shlb
sub
nop
ljmp
jno
sub
sarl
in
push
inc
xor
mov
push
shlb
insb
mov
mov
or
mov
rcll
fcomip
inc
push
pop
aad
test
flds
ds
outsl
adc
arpl
fisttpll
cmpsl
out
dec
add
xchg
inc
sub
mov
and
pop
push
jo
iret
imul
call
fbstp
lds
push
popf
int
shll
sarb
int3
mov
cld
dec
aad
and
leave
notb
sub
dec
int3
mov
mov
in
out
push
cmp
or
call
in
cmp
fdivr
or
out
mov
test
aad
cmp
mov
jne
sar
nop
mov
call
jns
repz
pop
in
or
pushl
mov
std
mov
daa
mov
mov
xor
sbb
lret
and
cmp
adc
mov
add
shrb
jne
dec
jecxz
xlat
idivb
or
fucomi
call
cmp
sti
push
insl
xchg
cmp
or
sbb
mov
bound
lcall
inc
dec
repnz
in
fs
incl
xchg
repz
out
aas
mov
pop
push
in
lock
xor
in
add
das
cli
out
and
adc
cwtl
or
dec
sahf
fisttps
insl
pop
out
mov
pushl
cltd
mov
xlat
std
int3
lds
add
aaa
rcrb
add
jmp
addr16
mov
mov
mov
test
decb
fmuls
cs
into
clc
out
into
dec
aaa
cld
pop
ljmp
fs
shll
push
push
jo
and
int
fcomip
call
ror
andl
mov
pop
push
imul
ds
jo
cltd
fmull
mov
or
sub
aaa
inc
addr16
inc
adc
jmp
into
push
bswap
cli
sbb
movb
jmp
cwtl
jecxz
mov
sarb
xor
icebp
iret
ljmp
idiv
les
and
data16
dec
sti
leave
cld
test
jb
push
out
pop
pop
lods
dec
jg
out
ds
stc
push
dec
dec
pop
push
rcrb
push
sbb
lcall
aas
aaa
inc
push
inc
movsb
ja
scas
push
inc
dec
popa
repz
mov
push
jno
jmp
repz
fwait
dec
lock
cmp
mov
jge
aas
repnz
xor
dec
adc
xchg
lret
pop
cmp
loopne
push
sub
lds
cmpb
jg
ja
cs
xchg
arpl
ffree
dec
fwait
imulb
mov
dec
decl
jns
das
sub
in
int3
aad
dec
inc
jo
xor
ficompl
scas
scas
scas
sar
cli
jnp
rolb
mov
pop
jmp
pop
inc
mov
test
das
movsb
inc
les
jne
jg
das
mov
dec
clc
fs
inc
sti
icebp
in
pusha
jle
ret
pusha
push
inc
mov
ds
mov
push
pop
incb
aad
lock
call
fmulp
fdivrl
outsb
inc
and
mov
imul
btc
jmp
xor
pop
mov
das
aas
repnz
push
lods
pop
jnp
sbb
jmp
and
stos
js
jle
xchg
aas
outsl
ja
inc
adc
mov
fcomi
ljmp
aas
repnz
jp
or
in
decl
mov
xchg
movsb
dec
loope
push
sahf
test
ds
fidivrl
fwait
xchg
cmpsb
shll
cmpsl
aad
shrb
jp
pop
push
pushl
std
sbb
cmc
mov
repz
pop
ret
in
mov
clc
decl
hlt
into
mov
push
jno
or
dec
ds
les
jae
push
lock
inc
xor
sbb
call
imul
in
outsb
outsb
lret
dec
pop
faddl
and
adc
jnp
push
jnp
test
xorl
aaa
fidivrl
roll
mov
clc
lcall
aaa
aas
jmp
push
inc
or
into
jle
or
xor
into
sbb
ds
hlt
stc
xchg
aas
outsl
jo
imul
cld
jg
adc
incl
jne
jbe
jle
test
mov
jecxz
jae
icebp
mov
jmp
pop
or
loope
decl
fs
pop
or
fmull
mov
pop
std
int3
push
sbb
in
pop
enter
mov
dec
dec
sbb
ja
and
push
call
cmp
repnz
sbb
adc
mov
out
jne
ljmp
lcall
xor
das
xchg
aad
outsl
insl
je
or
mov
loope
sub
rclb
setae
mov
repnz
pop
push
push
sbb
jmp
movsb
fwait
lahf
pop
cmp
mov
loop
iret
jns
dec
sarl
pop
rorl
xchg
jne
sar
lret
cld
jge
xor
mov
aam
das
test
jmp
cltd
mov
jb
push
sub
ds
push
std
out
test
mov
jg
push
xchg
arpl
lock
dec
and
or
sub
lret
mov
jmp
add
in
les
add
sahf
aas
popf
push
jbe,pt
jae
aaa
daa
dec
sub
stc
out
pop
adc
or
xor
out
push
fs
les
or
mov
incl
in
inc
push
arpl
mov
adc
push
out
es
std
int3
cpuid
push
lds
pop
addr16
add
push
or
into
les
jno
stc
xor
dec
adc
jl,pt
jns
dec
decl
mov
jns
sbb
test
leave
fstl
les
icebp
lcall
push
pop
push
outsb
pop
add
mov
fisubrl
jmp
movsb
in
dec
aaa
mov
gs
push
jl
bswap
pushf
cltd
lret
stc
jnp
mov
rorl
mov
movsb
repz
or
push
jg
cmp
mov
dec
push
mov
cld
popa
jg
test
shll
hlt
shr
mov
std
lcall
xlat
arpl
pop
xlat
adc
in
rcrl
jne
sub
movsb
test
fcomps
ds
outsb
lret
mov
loope
sbb
mov
in
outsb
aas
mov
enter
mov
jp
imul
dec
cld
stc
xchg
aas
outsl
jae
pop
push
pop
fwait
sarl
loopne
jg
fnstenv
mov
mov
mov
dec
dec
and
mov
xor
cmp
jecxz
dec
jmp
rol
das
jno
push
cmpsb
stos
into
pop
inc
mov
inc
or
fbld
sbbb
repz
or
dec
and
mov
ds
outsl
dec
lcall
and
xlat
ret
ljmp
push
mov
pop
js
int
movsl
les
push
ret
std
int
jns
imul
cmp
xor
ja
or
dec
rcr
xchg
aas
outsl
jne
pop
dec
pop
in
push
xor
int
jg
std
or
imul
jbe
xor
loopne
dec
lcall
cmc
pop
jle
iret
ret
out
addr16
movsl
out
adc
decl
int
xchg
into
inc
fidivl
js
or
lcall
mov
xlat
fdivrl
dec
pop
cmp
in
repnz
cmp
lcall
inc
add
out
jb
jmp
cmp
gs
test
pop
add
outsl
inc
aam
lcall
jns
sar
xlat
jnp
push
outsl
cmp
clc
ljmp
loope
push
in
lock
lret
sti
sub
loopne
in
jle
pop
push
xor
xchg
dec
in
and
sub
fidivrl
repnz
push
pop
repnz
add
pop
xchg
ja
pop
xor
cmp
mov
fistpl
std
orl
ds
bswap
cld
jns
pop
xlat
sti
push
push
adc
pop
lock
rol
fldcw
cli
mov
les
dec
xor
cmp
jae
pop
stos
xchg
xchg
repz
leave
mov
push
addr16
mov
lock
jp
mov
lret
xchg
cmpsb
cli
pusha
imul
mov
xchg
outsl
sbb
fldl
mov
xor
xchg
ja
insb
out
rcrl
pop
add
pushl
jp
jo
or
icebp
fcomps
out
data16
les
jecxz
std
mov
add
push
insl
inc
mov
dec
push
mov
dec
bswap
cld
jns
arpl
mov
jp
push
mov
pusha
imul
mov
rolb
mov
rcr
pusha
sarb
in
shrd
cld
shl
and
pop
sbb
mov
incl
adc
std
iret
ljmp
outsb
lret
mov
push
in
mov
fisubrs
lcall
fsubl
into
lret
mov
in
fdivl
ds
aaa
adcl
jg
loop
pop
cmp
jge
pusha
xchg
hlt
or
add
sbb
mov
into
dec
dec
cmpsb
fmull
ss
and
dec
push
push
lds
pop
sarl
outsb
or
xchg
jg,pt
fwait
jno
movsl
jecxz
ror
dec
dec
push
push
sbb
add
test
cmp
lret
cmpb
bound
fstl
scas
in
ljmp
das
cwtl
div
lods
push
jle
adc
and
pop
setg
cld
int3
cmc
clc
inc
sbb
ret
rolb
jb
mov
jmp
mov
push
mov
sar
jg
stc
out
xor
repnz
dec
and
push
jecxz
sbb
insb
jle
iret
das
mov
arpl
lcall
lcall
clc
das
xlat
cmpsl
fimull
out
mov
inc
inc
adc
ljmp
cmc
mov
cmpsb
aam
scas
hlt
jnp
adc
jg
pushl
roll
mov
int3
mov
outsl
imul
dec
pop
ljmp
lock
cmp
fwait
mov
push
rcr
lock
push
outsb
adc
fbstp
outsl
add
cmc
shl
imul
sbb
mov
out
cltd
repnz
shll
push
cs
orb
inc
bound
push
mov
or
icebp
iret
loopne
xlat
lahf
push
jle
pop
mov
jp
push
psubsw
shlb
das
jg
jno
rol
int3
js
jnp
jecxz
repz
jle
shlb
dec
mov
xor
sti
lock
into
jo
mov
inc
aas
xchg
sar
stc
xchg
aas
jg
lcall
jne
iret
push
outsl
adc
push
jg
or
xor
add
test
mov
aam
out
movsl
xchg
aaa
xchg
dec
lcall
arpl
cmp
mov
icebp
pusha
idivl
inc
call
dec
push
push
inc
out
fimull
aam
pusha
clc
dec
fists
mov
pop
inc
or
je
and
mov
into
push
cs
xlat
fsubrs
push
pop
push
fs
pop
mov
adcb
inc
inc
les
movsl
push
bound
les
mov
vpcomd
gs
insl
dec
inc
and
push
or
add
call
sbb
iret
int3
bswap
jg
pop
sets
adc
out
or
out
out
mov
cld
repnz
mov
inc
in
fsubs
push
rol
or
je
pop
ljmp
cld
ljmp
daa
cwtl
test
mov
mov
mov
sub
pop
ljmp
jmp
jae
inc
inc
or
ffree
jge
imulb
hlt
in
jmp
ds
jl
pop
test
out
cli
push
fadds
xor
ljmp
fcom
outsl
imul
faddl
pushl
sbb
fcmovnbe
pushf
repnz
inc
out
call
test
out
test
fs
inc
dec
dec
in
mov
movsl
jl
dec
sbb
and
clc
sbb
mov
fisttpl
sub
adc
add
repz
adc
jmp
repnz
jmp
ds
fcoms
stc
loop
pop
mov
fstp
fwait
or
jne
jns
into
lahf
push
sub
clc
jle
out
dec
push
call
lds
insl
mov
hlt
test
mov
out
ror
mov
or
push
xchg
ljmp
jno
push
mov
pop
shll
push
jbe
add
xor
and
lock
jle
aaa
jmp
push
fidivl
leave
jno
ljmp
push
stc
test
vaddsd
pusha
push
or
lea
dec
iret
scas
jbe
inc
mov
pop
mov
stos
mov
rorb
adc
push
in
and
jae
insl
adc
mov
jg
push
ds
pop
inc
pop
test
fistpl
dec
mov
dec
adc
add
add
ljmp
lret
sub
pop
bound
cmp
lahf
call
call
inc
pop
adc
push
loopne
add
sbb
xchg
test
enter
mov
mov
jo
fstp
test
in
mov
shlb
jp
roll
insl
or
ljmp
notb
inc
lock
outsb
xchg
or
adc
ljmp
popa
loope
or
das
push
decb
sarb
push
ds
clc
pop
test
dec
mov
scas
clc
das
mov
add
leave
addr16
cs
adc
lcall
lock
cli
fiaddl
add
fstpt
outsb
sti
iret
push
push
pop
mov
xor
inc
pop
ljmp
rcrb
adc
mov
enter
les
cmp
fucomi
mov
pop
lcall
mov
sub
std
out
and
ret
xor
sbb
repnz
cmp
movsl
les
cmp
push
aaa
add
iret
out
xor
mov
push
sub
test
xor
jb
rcl
jg
and
outsb
out
mov
in
and
sub
or
in
fcmovb
fisttps
js
or
fidivrl
inc
mov
fidivrl
in
jle
pusha
sar
outsl
inc
lock
adc
cmpsl
std
xchg
lret
lret
ficompl
in
adc
cmpsb
sub
xor
call
fwait
pop
mov
mov
or
inc
in
push
sub
enter
aad
outsb
int
push
out
fisubrs
mov
mov
icebp
sbb
in
enter
ret
mov
push
push
les
jmp
pushl
mov
in
cmp
mov
mov
in
cmp
out
inc
nop
sti
jg
aaa
fwait
jmp
cs
lret
xor
jo
arpl
pushl
cli
mov
test
cmpl
push
lcall
cld
cmp
adc
or
jmp
mov
imul
cmp
push
push
cmpsb
rcrl
mov
out
jmp
xchg
lret
inc
dec
jno
js
pop
std
add
movsb
or
mov
in
dec
out
ds
pop
and
sarl
das
xchg
lret
ljmp
or
out
dec
movl
cld
outsl
jle
inc
ds
sub
push
push
inc
decb
or
mov
push
rcrb
inc
pusha
sub
icebp
mov
iret
into
out
outsl
add
fucomi
dec
stos
mov
outsl
mov
mov
ljmp
enter
push
pop
cmp
notb
sahf
cmpsb
enter
in
loopne
aas
outsl
seto
mov
movsb
fidivrs
xchg
jle
mov
fbld
inc
pop
cld
rcll
cwtl
out
rcr
inc
pop
xor
sub
mov
imul
lea
cs
mov
cld
cs
out
int
lcall
cs
cld
jmp
and
sbb
hlt
pusha
mov
sbb
rcr
jo
jnp
decl
shrl
hlt
out
das
insb
dec
pop
jge
aas
call
xor
sarl
pop
cs
test
sub
jle
jne
mov
in
rcrl
lds
outsl
lcall
xlat
popa
inc
xor
in
hlt
int3
and
push
dec
jae
mov
repnz
outsb
inc
in
fisttpl
incl
or
push
outsl
addr16
pop
rclb
or
movsl
cld
repnz
rclb
inc
out
adc
inc
mov
pop
inc
mov
cs
rcrl
or
bound
rorb
pop
cld
mov
jns
cmp
inc
ss
enter
push
cs
pop
mov
xchg
out
repnz
inc
dec
dec
test
or
scas
adc
jecxz
jmp
movsb
les
or
aaa
push
push
js
ds
into
mov
loopne
lods
dec
pop
mov
rcrb
lods
mov
into
or
in
push
ds
icebp
push
pop
out
ljmp
loopne
or
xor
cltd
shrl
out
das
movsb
pop
cs
mov
fcmovb
dec
dec
in
call
push
aaa
int3
mov
out
and
sbb
js
repnz
es
pop
pusha
jg
or
cs
hlt
or
shrb
dec
in
icebp
icebp
push
out
mov
mov
je
cmp
cs
into
mov
in
mov
cmpsl
movsl
lret
sbb
jle,pn
xor
dec
lcall
sub
rol
cli
adc
inc
pop
push
cmp
cli
xchg
jne
lahf
inc
cs
fdivrp
add
jmp
mov
lahf
pop
push
outsb
ss
xor
cmp
dec
int3
bound
cs
fisttps
int3
in
pop
jno
adc
in
mov
jmp
call
mov
mov
into
fmul
dec
pop
push
daa
jmp
ds
xor
jge
pop
jne
xchg
xor
xchg
aas
adc
bound
loopne
push
leave
add
xcrypt-ecb
cmpsl
into
mov
jecxz
cli
ds
int3
clc
mov
jns
jle
jp
sub
xorl
fwait
sahf
idiv
lret
scas
movsl
fdiv
popf
js
shlb
and
test
cltd
ds
cld
dec
jmp
movsb
test
test
outsl
jle
cmc
jmp
sub
int3
into
mov
fisubrs
clc
lods
ret
pop
sub
fisubs
mov
jns
fs
rcrb
cmp
cmc
fildll
inc
or
xor
std
repz
jmp
incl
popa
cmp
repz
pop
or
xor
sbb
cld
dec
sti
rorl
stos
mov
iret
shrb
mov
cs
push
sbb
mov
push
out
js
int
fucomi
jl
in
and
pusha
jo
pop
or
pusha
lods
push
cs
out
out
jecxz
fdivrp
shr
pushf
nop
subl
mov
dec
push
mov
in
into
aaa
xor
jmp
lcall
dec
bound
pop
push
shr
mov
imul
mov
call
jg
mov
xchg
or
dec
in
fsubrl
stc
cs
fistpll
out
jns
dec
jl
jbe
in
shrb
icebp
cs
mov
xchg
iret
xor
jnp
pop
mov
lcall
dec
into
jne
iret
sbb
cwtl
arpl
mov
pop
pop
addr16
push
jmp
cmpsl
aad
loop
push
out
mov
repnz
stc
and
pusha
bt
stc
ja
movntps
inc
cs
in
out
xlat
jecxz
fdivrp
ror
mov
outsl
push
cmpsb
cmpsl
xor
ds
cmc
hlt
or
ret
pop
push
sbb
int
test
insl
outsl
mov
fbld
out
fcoml
add
xchg
into
aas
pop
test
aas
xchg
cmpsb
jb
mov
ds
fidivrl
in
push
mov
testl
in
in
xchg
inc
cli
loope
inc
aam
cs
mov
movsb
nop
jne
scas
fdivp
cli
jbe
dec
pop
bswap
movsb
test
iret
adc
push
dec
xlat
hlt
inc
mov
lret
push
inc
dec
mov
xchg
mov
nop
loope
int
fbstp
ds
jge
in
enter
jl
push
sub
aaa
sbb
cwtl
jne
pandn
adc
repnz
and
mov
aaa
daa
dec
in
in
jo
into
das
or
jmp
xor
pop
ds
shl
mov
push
pop
mov
mov
mov
call
stos
outsl
shll
scas
xchg
test
pop
leave
imul
fists
das
testl
aas
fildll
arpl
cs
in
lcall
or
jb
out
movsb
and
es
in
xor
or
jo
into
cmp
out
ldmxcsr
lea
pop
pusha
outsb
cld
cld
or
jmp
outsb
cmp
lods
movsb
stc
cmp
dec
fstpt
jecxz
hlt
filds
mov
test
lcall
pmaxsw
or
lahf
mov
mov
jle
sbbl
dec
add
push
into
in
adc
js
ffreep
aaa
in
lahf
call
mov
cmc
pop
out
jb
scas
repnz
or
mov
inc
repz
push
rclb
lods
pushl
or
out
jle
jne
sbb
loop
mov
sar
aaa
std
jg
fsubl
es
aaa
aad
sub
punpcklbw
push
out
ds
dec
in
in
lods
and
push
retw
xchg
or
inc
movsl
ror
fbld
bt
push
loope
lds
push
mov
repz
pop
or
jne
iret
sbb
mov
sar
jo
sub
cld
sbb
cltd
xor
jmp
lcall
cli
loop
jno
mov
fnsave
fidivl
mov
in
out
push
out
lcall
sarb
jae
xchg
jmp
movsb
sub
pop
aad
rorl
ficomps
popa
sbb
push
hlt
lock
mov
stos
into
lods
mov
repz
lds
fsubrs
and
mov
cmp
dec
cs
or
fwait
arpl
lock
jle
xor
xor
aam
std
ficomps
fisttpll
xlat
incl
icebp
in
lret
stc
pop
sub
lahf
aas
clc
mov
pop
pop
aam
pmaxub
outsb
or
stc
repz
sti
in
insb
rcrb
ja
repnz
negb
cld
xchg
pop
ficoml
mov
adc
fprem
jb
push
stc
in
das
mov
lock
cmp
arpl
lret
cld
adc
push
or
sub
jl
lock
loope
dec
int3
aad
out
or
scas
add
mov
pop
ss
fdiv
xchg
lret
gs
jge
cmp
ljmp
loopne
adc
packsswb
xlat
xlat
mov
in
lds
jmp
cmpsb
ret
insb
pop
repz
out
insl
js
or
bound
lcall
mov
dec
insb
jp
push
or
adc
aas
push
arpl
xor
jmp
jbe
clc
cs
cwtl
rolb
jmp
ljmp
popf
pop
subl
roll
aas
mov
negl
arpl
ret
loopne
cs
outsl
xor
xchg
leave
jmp
jae,pn
stc
out
int
in
arpl
jae
mov
iret
das
jg
pop
push
jnp
rol
xchg
sub
push
adc
mov
inc
cs
sar
das
fisubrs
lds
ror
loopne
dec
and
enter
lds
decl
pushf
pop
sahf
or
mov
cmp
icebp
lcall
aad
fistpl
push
imul
ljmp
pop
ljmp
and
push
or
in
jg
into
mov
mov
push
sub
es
fisubs
fxch
inc
xor
mov
cld
mov
outsb
jnp
test
inc
dec
dec
fcoms
ljmp
xchg
aas
inc
pusha
or
dec
icebp
xlat
mov
dec
dec
mov
inc
jnp
xlat
int
pushl
cld
scas
negb
divl
inc
push
add
mov
mov
cltd
gs
jl
adc
push
sar
add
popf
jno
sarb
sub
mov
inc
shrl
into
lahf
pop
int3
leave
cli
arpl
inc
hlt
jle
jg
jns
rcrb
paddb
iret
imul
or
mov
mov
cltd
dec
sbb
mov
push
das
cs
sub
call
ljmp
push
jae
pop
test
daa
pop
ljmp
adc
clc
jg
aas
adc
incl
pop
and
pop
push
sahf
fucomip
idivl
and
mov
leave
jo
icebp
lcall
mov
pop
dec
adc
sbb
cli
jecxz
xor
adc
out
lret
pushf
xlat
lea
mov
aas
aam
push
pop
inc
inc
pop
repz
add
sti
clc
repnz
pop
sbb
pop
inc
pop
mov
sbb
mov
pop
cs
jmp
popf
std
ljmp
fwait
cmpsb
mov
jp
push
div
out
xor
in
pop
xchg
pop
call
xor
and
xor
shrl
bts
pop
mov
mov
testb
rorl
scas
and
outsb
cmp
mov
movsl
pop
fs
or
add
aas
or
cmp
hlt
ljmp
hlt
jg
cli
inc
cmc
sbb
dec
into
pusha
ljmp
aad
clc
xchg
sbbl
outsb
sbb
bound
cmp
mov
add
cmpsb
jmp
ss
shll
sar
jmp
bound
inc
adc
loop
sbb
pop
add
ds
pop
pop
sbb
add
sarb
loope
pop
testl
out
das
enter
lods
inc
xor
adc
dec
add
ja
xor
push
jb
pop
push
and
gs
push
or
push
adc
mov
bound
clc
lock
mov
sub
lret
lock
sbb
sbb
enter
pop
lcall
loopne
fsubrl
mov
das
add
xor
dec
mov
aaa
jle
cmpsb
cli
rcr
pop
das
js
dec
repz
dec
mov
adc
add
js
cli
fldl
pop
push
das
test
scas
clc
aad
or
stc
or
adc
jg
test
jp
sub
pop
xor
or
cmpsl
dec
std
div
cmp
in
and
push
das
loopne
jg
cltd
hlt
or
iret
ljmp
aaa
xor
jg
or
adc
lock
dec
or
push
clc
hlt
lds
pop
shrb
cli
ja
mov
sub
not
mov
fists
shlb
adc
outsb
stc
or
leave
int3
xor
insl
clc
incl
out
mov
data16
in
xor
cmp
adc
clc
ror
out
aas
push
mov
cs
into
stos
add
cmp
cmp
mov
loop
repnz
outsl
or
inc
cmp
sahf
repz
cmpsl
fldpi
pop
ja
adc
cwtl
mov
sub
movsl
loope
dec
adc
dec
xchg
ljmp
std
cmp
adc
push
sbb
sbb
ficomps
lds
xchg
hlt
loop
popa
daa
popa
ljmp
in
lret
or
out
clc
jg
lret
std
mov
test
push
and
adc
lods
mul
lret
iret
xchg
mov
icebp
enter
test
lea
push
ret
mov
or
int3
test
rclb
test
pop
fistps
test
ljmp
jnp
nop
sbb
cli
testl
pop
shr
aam
dec
cld
lahf
cmp
add
cmp
or
into
mov
inc
lcall
fcmovbe
scas
negb
mov
int3
les
add
push
fisttps
fistpll
xlat
in
bound
mov
cli
ljmp
push
lret
data16
push
xor
cmc
leave
jmp
fldl
adc
mov
outsl
icebp
pushl
dec
cs
add
lods
add
je
idiv
cmp
add
jg
ds
ds
xor
pusha
xchg
icebp
lcall
mov
xorb
cltd
mov
in
cli
int3
or
push
xor
pop
or
add
arpl
fisubrl
pusha
sbb
or
data16
ret
jg
mov
out
ror
mov
cmpsb
das
fmul
push
and
push
push
test
shr
ds
fidivrs
lods
jle
out
add
outsb
mov
cmp
mov
negl
mov
rorl
jg
pop
ljmp
push
int
mov
loopne
aad
sub
lcall
xchg
cmp
movsl
icebp
push
repz
adc
cltd
int
or
dec
add
das
subb
icebp
out
in
push
rol
lret
fildll
add
jge
xchg
and
das
push
xlat
js
shll
std
std
mov
hlt
xchg
fidivl
mov
sub
fistps
shr
mov
cmpsb
mov
or
cld
mov
lcall
pop
leave
lahf
mov
xchg
mov
cld
ret
pop
in
lock
mov
add
lock
or
cmp
xchg
pop
mov
fistps
pop
push
scas
loopne
lcall
jbe
lret
jg
cld
sub
dec
xlat
pop
inc
sahf
stos
ja
nop
scas
ret
xor
cli
jg
jno
ret
push
sub
cld
pop
fildll
cmpsb
jecxz
adc
jle
xchg
lds
mov
xor
lret
sbb
call
adc
out
xor
or
icebp
adc
xor
filds
add
sub
xchg
out
insb
loopne
mov
in
mov
idiv
ljmp
push
sarb
xor
add
aam
dec
into
push
ljmp
mov
lret
or
les
shr
sahf
cli
fisubl
lahf
and
mov
movsb
in
pop
add
call
mov
into
push
pop
and
fwait
outsb
out
mul
mov
ret
ljmp
lock
mov
cs
mov
adc
stos
imul
inc
push
inc
aad
xchg
int3
mov
adc
sub
or
fucomi
int
sub
sub
jg
je
or
mov
lods
lock
add
std
scas
adc
out
sub
nop
pop
lcall
imul
pop
dec
jne
jp
jle
xchg
ljmp
sahf
inc
or
popa
outsl
loop
or
int3
inc
sbb
jg
das
and
fmuls
fmulp
sub
inc
add
in
pop
outsl
cli
jg
out
add
adc
loop
and
inc
cli
imul
mov
out
sbb
jg
enter
dec
aaa
outsb
shlb
mov
int3
cmp
adc
lods
fwait
dec
pop
inc
lcall
icebp
pop
inc
cmp
xor
rol
or
clc
andl
enter
cmpsb
jmp
fmulp
icebp
lds
jle
les
call
pop
lret
ret
into
lods
leave
xor
mov
lret
shrb
rorl
lret
imulb
loop
mov
lods
fdivs
fsubr
sbb
test
cmp
fiadds
push
jecxz
lret
out
es
xlat
mov
sahf
arpl
cld
sub
push
xchg
loope
daa
pushl
fcmovu
scas
add
aaa
dec
mov
xor
mov
movsl
jle
ljmp
mov
push
aaa
aad
loopne
mov
xchg
inc
sahf
leave
mov
lods
orb
cmp
call
scas
mov
cmp
inc
xchg
jmp
add
out
pusha
addl
fwait
shll
or
inc
add
loop
jg
or
or
sub
lret
inc
or
cli
jg
fnstenv
xlat
xor
push
pop
iret
lock
in
repz
stc
dec
push
xchg
jg
add
pushf
lahf
jae
lcall
push
out
add
xchg
dec
sar
aas
into
push
mov
xor
mov
pusha
xchg
cmpsl
int
lods
int3
jno
fdivrp
inc
cld
cld
in
out
gs
lods
int
mov
cld
in
inc
or
ficoms
adc
mov
cmpsl
les
and
out
xchg
out
leave
gs
hlt
loope
ljmp
in
call
add
repz
bswap
aaa
add
inc
xchg
shl
push
icebp
lods
cmp
lods
fcom
adc
lods
adc
sub
mov
adc
fists
in
repz
movsb
loop
push
pop
push
jmp
mov
fmull
lds
mov
sbb
loopne
notb
inc
call
mov
sbb
ljmp
mov
inc
or
pop
scas
mov
loope
stos
decl
mov
icebp
out
ds
adc
inc
test
loope
decl
cld
cld
aad
push
js
add
add
xor
mov
loope
add
out
push
call
mov
cltd
arpl
mov
lret
in
push
gs
add
rcll
lret
fsts
cli
into
pop
inc
shlb
and
or
lcall
loopne
mov
out
mov
loop
out
or
add
jmp
ljmp
xchg
cmp
inc
scas
cli
inc
scas
icebp
lret
cmpsl
icebp
shll
mov
iret
dec
es
or
mov
les
xlat
and
and
xchg
xor
sub
pop
add
jle
outsl
fistpl
add
jmp
int
aas
adc
add
ljmp
inc
mov
mov
mov
icebp
call
mov
out
aam
cmpsl
jno
or
sahf
in
xchg
sbb
xchg
call
into
icebp
or
or
divb
sub
lods
scas
cmpsb
cmp
sar
frstor
ljmp
repz
pop
test
and
and
stos
mov
in
lock
lock
jmp
sub
sar
pop
repnz
push
and
pop
adc
popf
in
and
mov
sub
adc
jecxz
out
xchg
pop
jmp
pop
fmulp
fistps
sti
adc
mov
jp
lret
and
aaa
cmpsb
cmp
clc
mov
ljmp
push
xchg
inc
hlt
cli
in
insb
cmp
int
push
fsubrp
sti
out
fwait
xchg
shlb
call
pop
dec
data16
nop
jbe
pop
negl
out
into
sbb
xor
outsl
or
xchg
out
inc
call
std
movl
xor
test
and
sub
xor
outsl
cli
stc
mov
loopne
sahf
mov
repnz
mul
aaa
add
loope
xor
pop
decl
lret
movsl
mov
loopne
pop
jmp
incl
and
fwait
push
push
mov
mov
int
jmp
cli
out
das
push
out
mov
cwtl
or
or
push
popa
cmpsb
into
sarb
fldcw
lock
sbb
test
in
pop
adc
mov
mov
jmp
in
aad
or
inc
add
jmp
mov
lcall
pop
adc
test
mov
shll
lcall
or
jae
leave
lret
clc
sbb
repnz
jo
mov
jmp
sti
ret
or
loope
scas
cmp
mov
call
or
jle
cli
fisubrl
jb
or
outsb
jle
xchg
push
sar
pushl
test
in
and
or
loop
cld
pushf
inc
lds
mov
dec
fcomip
mov
mov
xchg
sbb
xchg
lret
or
andb
std
out
sbb
lods
inc
ljmp
jmp
mov
xlat
les
mov
repnz
ret
int3
or
addr16
xchg
mov
movsb
nop
xlat
adc
out
lds
mov
add
pop
pop
push
mov
call
mov
test
outsb
lock
sub
cmp
aaa
xor
lock
and
jecxz
pop
les
pop
stc
mov
clc
sbb
shrl
mov
add
dec
jb
mov
lret
xor
lock
mov
iret
pushf
sbb
loope
lcall
loop
bound
cmp
mov
dec
mov
dec
sub
sbb
xchg
jmp
lods
inc
pop
cwtl
repnz
jle
pop
sub
jg
push
xchg
xchg
mov
fstp
dec
std
xchg
lcall
ret
fdivrs
bound
mov
ss
pop
outsb
lret
loopne
scas
movsb
in
outsl
call
ljmp
decb
xor
dec
xchg
mov
pop
xchg
out
and
add
adc
add
test
sar
lcall
jge
test
and
jmp
pusha
push
lret
movsl
out
test
fcmovnbe
fs
mov
imul
cli
fisttps
fidivrs
nop
mov
xor
and
push
stos
inc
push
adc
inc
out
stos
fnsave
mov
jmp
jl
xchg
adc
nop
shr
mov
fmull
outsl
jl
sahf
pop
stc
mov
stc
cmp
js
mov
dec
mov
js
or
xchg
ljmp
cmp
pushl
into
lret
or
xchg
mov
inc
les
dec
add
pop
insl
add
xor
jg
or
xlat
mov
roll
test
jmp
scas
dec
cmp
call
sti
and
inc
das
xchg
in
cmpxchg
aas
movsb
cmp
sarl
aam
loop
push
insl
js,pt
call
xor
pop
icebp
ljmp
movsb
cmp
in
jbe
cmpb
dec
xchg
out
adc
inc
das
xchg
add
ja
int
pop
into
addr16
scas
xor
stos
cmp
or
mov
jg
sbb
mov
mov
popf
cltd
ja
mov
aam
aas
aam
ds
add
pushl
loope
stc
sub
pop
xchg
push
rorl
and
cmpsl
call
insb
inc
cmp
xlat
test
enter
mov
dec
sub
mov
push
fmul
mov
cmpsl
ja
fwait
movsl
adc
icebp
negb
fbld
xchg
mov
cmp
push
cmp
scas
pop
add
sbb
cmp
jle
pop
hlt
into
sahf
lret
in
jl
scas
add
jg
push
adc
jmp
or
scas
daa
adc
or
jg
pop
jle
gs
outsb
jnp
adc
mov
jo
lds
popf
inc
rorb
sub
adc
sar
add
jg
cmc
or
ror
and
enter
mov
cmp
push
cmp
xchg
lock
gs
ljmp
xchg
stos
push
add
gs
outsl
out
adc
adc
dec
out
xchg
lret
cmpsl
ljmp
push
outsb
jbe,pt
adc
push
add
mov
mov
enter
test
push
or
jg
jmp
cmc
sub
fdivs
and
or
std
lcall
push
and
xchg
out
or
jmp
movsl
stc
xor
ljmp
in
popa
movsb
xchg
lds
in
addb
cmp
in
adc
push
sbb
pop
cmp
and
dec
push
or
std
lcall
mov
aad
cmp
xor
cmpsl
ficomps
pop
filds
cmp
stos
jo
rorl
mov
xor
jle
idivb
icebp
mov
pop
cwtl
inc
xor
rorb
movsb
decl
pop
inc
mov
xchg
cmp
call
adc
fisubrl
mov
jne
idiv
stos
adc
shl
dec
mov
pop
mov
jmp
add
into
shr
pushf
jae
xchg
jle
xchg
aam
ja
mov
ret
jnp
mov
repnz
xchg
cmpsb
fildll
std
xchg
push
cld
repnz
lret
inc
ja
push
std
jmp
push
fwait
in
in
cwtl
sbb
cmc
xor
mov
sub
pop
dec
outsl
push
insb
xor
and
mov
add
pop
cmp
cmp
dec
out
jle
xchg
add
cmp
dec
push
stos
cli
ljmp
ffreep
push
or
fadds
jb
das
nop
cmp
xor
push
jmp
jmp
sahf
popf
lret
push
incl
out
sub
sub
movsb
mov
ret
push
sub
dec
push
insl
das
sar
call
pop
ficomps
fmul
std
sub
ljmp
test
mov
loop
lods
std
xor
imul
push
adc
jmp
jg
dec
orb
fstps
or
ss
or
hlt
xor
dec
sar
jbe
mov
int3
test
and
fwait
out
dec
leave
ret
xlat
lock
mov
dec
xor
lods
repz
stos
adc
dec
aam
add
and
pop
loopne
cmp
mull
or
cld
js
push
cli
movsl
xchg
in
adc
incb
into
test
cmp
dec
adc
movsl
testl
sbb
lods
add
mov
ja
dec
sub
fiadds
dec
add
hlt
xchg
add
out
incb
jmp
les
arpl
mov
out
mov
push
lcall
add
jge
xchg
and
adc
movsl
in
xor
push
push
scas
cli
scas
mov
fisttps
pop
fildll
xchg
cmp
mulb
or
incl
testb
repz
ja
into
icebp
shrb
pop
add
imul
dec
mov
fs
ljmp
pusha
icebp
mov
les
mov
or
fdivrs
test
and
push
movsl
aam
mov
fbstp
or
mov
jmp
xchg
sub
sub
fcoms
in
out
mov
ret
icebp
pop
adc
or
fimuls
mov
jg
mov
cs
sub
dec
mov
rcr
lock
test
inc
mov
jae
adc
shrb
hlt
scas
sahf
and
xor
jle
cmp
jo
jmp
dec
mov
movsl
cmpl
mov
ljmp
aad
mov
sbb
test
scas
dec
xchg
lcall
mov
aaa
lcall
in
rclb
fnstenv
jb
mov
dec
mov
insb
xchg
mov
fbld
mov
mov
ss
fcoms
adc
ret
and
loopne
jg
les
nop
mov
sub
push
in
pop
mov
or
cld
mov
ret
and
leave
repz
pop
ret
mov
jg
add
jecxz
jmp
xchg
xor
cmp
stc
lods
adc
test
push
fdivl
dec
cs
cmp
cmp
ds
sbb
ljmp
xor
lret
or
in
stc
fsubs
mov
fcompl
adc
push
jmp
add
dec
hlt
mov
xor
push
outsb
add
sar
or
xchg
outsb
outsb
fmuls
pop
sarb
lock
lcall
sahf
mov
int
pop
jle
adc
cmp
lea
jmp
hlt
ljmp
mov
iret
fldpi
int
sbb
aad
sub
inc
pop
lret
dec
pop
ljmp
mov
lret
lock
jle
mov
int
lret
cli
push
or
pop
push
lret
dec
mov
mov
add
mov
mov
lcall
ds
inc
enter
cli
rcl
into
ret
std
aad
imull
xlat
cmpb
loopne
subb
ds
into
ljmp
xchg
xor
aam
ds
xchg
jno
mov
push
inc
pop
sti
cmp
mov
out
or
lcall
std
fistpll
xchg
lcall
decl
mov
jmp
dec
ss
jmp
loop
aas
fcmovne
jmp
subl
loope
pop
dec
dec
xchg
fmul
xchg
stos
repz
icebp
xor
mov
push
lea
jmp
mov
xchg
pop
pop
ror
xlat
pusha
mov
jg
outsb
int3
mov
loopne
cli
jmp
cld
ljmp
xchg
icebp
enter
in
sub
mov
stos
sar
jae
loope
or
mov
cli
out
fistl
adc
cmp
nop
mov
pop
fisubl
ret
xchg
imulb
jg
jne
dec
lds
add
shrb
test
cmp
lea
cmc
push
test
pop
add
xor
sti
fisttps
fldl2e
cmc
jne
jmp
jle
adc
mov
rorb
sbb
add
or
adc
mov
cmp
dec
sti
lcall
ljmp
jne
pop
mov
neg
incl
mov
xchg
out
mov
xchg
sbb
dec
mov
push
roll
mov
pop
movsb
icebp
sarb
or
orb
addr16
cwtl
test
inc
lret
into
sbb
xchg
and
decl
mov
and
cmpsb
loop
adc
out
ret
stc
into
xor
jmp
out
xlat
enter
xlat
pop
mov
data16
adc
aam
add
inc
dec
std
add
push
mov
mulb
dec
push
mov
xchg
jle
and
shrl
inc
xchg
fisttps
sub
inc
sahf
data16
pushl
push
loopne
pop
orb
out
fldcw
mov
cltd
mov
cld
rcr
insb
inc
lcall
adc
push
inc
sti
and
or
cmp
sti
stc
sub
push
or
mov
or
notb
cld
jmp
adc
addl
sarb
pop
loope
mov
imul
xchg
dec
push
and
adc
push
jg
and
or
cs
push
lret
push
mov
out
xchg
iret
mov
aad
aas
jle
xor
dec
outsl
movsb
lcall
stos
out
mov
push
icebp
in
sbb
xor
mov
sub
sub
mov
fstps
or
scas
xor
cmp
xor
lcall
or
stos
xor
xor
lret
call
int3
lea
ljmp
mov
mov
fiadds
cmpb
daa
repnz
lea
int3
dec
pop
jp
je
mov
fwait
out
aas
xorl
jg
popa
pop
mov
mov
nop
movsl
push
mov
outsl
outsb
into
dec
pushf
fwait
push
decl
gs
mov
ret
push
lds
push
aaa
sub
sarl
loop
xchg
test
adcl
push
ficoms
fbld
or
idiv
mov
jne
adc
fld
mov
es
decl
ret
mov
ljmp
cltd
mov
stc
testb
mov
cltd
inc
das
sub
int3
movl
xor
ret
lock
jmp
hlt
stc
lock
out
push
aam
stc
mov
test
ret
pop
aaa
aas
in
fcoms
mov
int
xchg
movsl
jle
ss
sahf
jecxz
pop
xchg
fisubl
lret
mov
lret
iret
ljmp
out
cs
push
add
daa
adc
dec
mov
clc
ret
sbb
scas
xor
and
faddp
loop
xor
or
leave
and
aam
inc
adc
test
push
subb
mov
enter
clc
cs
xchg
into
lret
or
pop
adc
xor
scas
cmp
jae
int3
into
out
xor
mov
or
sbb
inc
sub
std
cmp
sbb
fdiv
mov
mov
push
jecxz
shrl
pushf
push
mov
xor
lods
dec
lret
cmp
outsb
rcrb
mov
stos
dec
test
in
in
jle
hlt
ljmp
shll
cltd
xor
mov
mov
int
shrl
lcall
add
adc
mov
sbb
add
cmpsb
idiv
jns
sbb
pop
mov
in
mov
pavgb
cld
add
xor
pop
xor
pop
mov
push
ret
scas
rep
les
add
sti
lret
add
lcall
sar
cmp
mov
jmp
jmp
mov
out
cmp
scas
lret
push
lock
add
repz
mov
add
scas
scas
cwtl
in
lcall
test
cmpsb
xchg
ljmp
and
hlt
shr
and
aas
sub
xor
movsb
xor
push
mov
or
int3
adc
dec
incl
xor
mov
pop
fwait
div
push
roll
imul
pop
arpl
fld
call
xor
pushl
mov
push
cwtl
sub
xor
dec
push
cmp
mov
inc
test
cmpb
dec
pop
mov
fisttps
outsl
xchg
pop
cmp
lds
imul
in
lea
inc
movb
inc
les
push
jb
lods
cmp
cmpsl
call
mov
sbb
sub
inc
jp
mov
ja
loope
sub
dec
insl
ds
stos
push
mov
jg
fwait
sbbl
aas
add
jmp
or
repz
cli
mov
lcall
in
mov
or
out
shrb
lea
mov
fwait
or
dec
in
inc
ljmp
or
push
ret
adc
scas
idiv
out
pusha
mov
aam
xchg
or
cmpsl
outsb
pop
ljmp
mov
fld
pushf
gs
mov
dec
call
sub
into
inc
jg
ljmp
movsb
ffree
repz
icebp
or
mov
loope
ja
lcall
sbb
mov
push
or
jno
add
out
push
sbb
cld
mov
clc
inc
or
cmpsb
sub
xlat
scas
jmp
mov
xchg
test
pop
rcl
mov
lahf
inc
or
mov
ljmp
cli
sub
pop
dec
movsl
xchg
cli
or
enter
jp
fistps
xor
jno
enter
jne
fdivs
and
popa
jge
push
cwtl
pop
and
cmp
ficomps
cmp
mov
inc
lea
cmp
jne
jle
dec
ret
lods
jo
jle
rclb
je
inc
mov
pop
cld
and
add
mov
and
jmp
add
xchg
pop
fdivr
imul
fidivrs
pushl
dec
pop
sub
pop
das
sub
pushl
jmp
imul
lock
xor
cmp
sbb
cli
cltd
or
jg
cmpl
jle
and
mov
lock
mov
daa
stc
cmp
sub
xor
out
add
cs
pop
ror
outsl
je
sbb
inc
mov
inc
push
je
or
cmp
inc
dec
inc
les
out
xor
xor
dec
imul
and
cmpsb
movsl
jbe
lds
in
cmpsl
or
mov
push
mov
jmp
dec
loop,pt
mov
inc
inc
ja
shlb
test
push
mov
pop
insl
roll
lea
cmp
and
push
ror
mov
shrl
rcr
sbb
jg
pop
push
xlat
mov
cld
mov
in
cli
mov
ficoml
jp
movsl
and
clc
arpl
dec
pop
outsl
ds
add
ljmp
adc
sbb
xchg
cmp
dec
cwtl
xlat
sbb
incb
mov
cs
push
aaa
cmc
aam
cld
cmp
ja
mov
add
in
adc
ret
sarl
rcrl
cmp
lcall
and
aas
or
mov
scas
jge
pop
add
xor
adc
xchg
xchg
cmp
decb
or
inc
lcall
xchg
insl
lcall
lahf
mull
cltd
mov
mov
das
xchg
or
arpl
ss
pop
inc
pop
sub
and
dec
das
fnstsw
in
lea
aam
call
mov
xor
jns
lret
call
jne
hlt
push
into
cmp
out
pushl
clc
pop
push
pop
jle
ljmp
hlt
mov
icebp
loope
sbb
lds
jg
setns
mov
aaa
xor
sbbb
mov
sub
out
rclb
add
adc
lahf
mov
add
and
frstor
inc
rcrl
mov
lcall
sahf
shlb
shlb
xchg
pop
mov
out
pop
in
xor
or
lcall
or
sub
iret
or
inc
loop
cmpl
out
ds
iret
addb
jg
mov
jo
jmp
stos
pop
xor
or
pushf
aas
leave
push
adc
inc
ds
sbb
pop
incl
add
fildll
stos
xlat
aas
cwtl
in
and
loopne
repz
sbb
cli
xlat
cmp
mov
fisttps
mov
sahf
and
pop
mov
push
push
pop
push
out
aas
xchg
out
movsl
out
call
test
pop
into
push
mov
pop
cmp
rorl
hlt
inc
lea
jle
fidivl
ljmp
mov
adc
pop
subb
inc
adc
fidivrl
cltd
mov
vpmacssdd
xor
push
mov
incl
inc
push
mov
mov
or
cli
sub
dec
rol
mov
dec
mov
push
inc
test
fbld
inc
push
lcall
ffreep
outsb
jmp
nop
out
ret
pop
xchg
test
mov
mov
dec
scas
cli
push
ficoms
dec
aaa
lahf
in
popa
dec
pop
mov
add
pushf
mov
shl
xchg
sub
and
push
mov
mov
subb
jae
rorl
pop
adc
leave
into
cmp
adc
jmp
ds
push
or
test
pop
jl
les
push
mov
push
mov
ret
leave
xlat
aas
clc
mov
jg
mov
fisttpll
push
adc
aam
push
into
aas
call
mov
sahf
and
into
jb
jg
push
adc
sbb
mov
fwait
je,pn
ljmp
fbld
xor
aaa
xchg
jae
dec
inc
lret
sub
stos
lret
or
bound
shlb
sti
out
ficomps
notrack
ret
pop
movl
adc
mov
mov
test
mov
sahf
xlat
fsts
xchg
mov
or
inc
push
decl
jle
mov
jmp
cli
jae
cwtl
inc
push
mov
in
es
shll
pop
sarb
xor
fcmove
fdivrp
jo
or
ret
mov
jmp
jo
or
je
push
scas
ljmp
movsl
xchg
scas
hlt
scas
in
loop
jb
pop
sbb
fucomp
mov
xor
and
and
loopne
jo
pop
cli
in
into
mov
aad
jbe
imul
es
jg
lock
fists
mov
enter
mov
addb
pop
jnp,pt
and
add
subl
stc
dec
out
sahf
dec
dec
xchg
fimull
jnp
aas
push
imul
mov
sahf
mov
test
mov
xchg
mov
sub
or
add
or
ss
shl
aad
jb
test
into
scas
pop
mov
push
mov
in
jle
insl
or
loope
bound
js
das
xor
push
outsb
mov
cmp
outsl
out
decl
xor
insb
lret
sub
jmp
xchg
push
rcrl
scas
loop
movsl
dec
sbb
je
out
test
jle
pop
mov
outsb
adc
ret
lods
mov
aam
cmp
and
lahf
pop
fs
sahf
aad
xchg
scas
stos
scas
cmp
outsl
fadds
or
mov
pop
mov
add
sub
ss
into
stos
push
test
lcall
mov
dec
sub
mov
out
push
sub
imul
xchg
push
dec
decb
xchg
pusha
mov
sahf
dec
mov
dec
mov
movsl
sbb
sub
push
jb
into
out
std
pushl
sbb
push
leave
mov
test
fwait
push
xor
push
mov
push
leave
incb
cmp
mov
jmp
rcrb
gs
inc
xor
jns
scas
scas
ret
cmp
clc
mov
lds
fwait
cli
dec
js
push
popa
aad
cld
outsb
xor
hlt
mov
sbbb
decl
scas
ja
hlt
mov
push
pop
sub
dec
cs
push
sahf
adc
mov
sub
aad
loopne
je
push
pop
scas
and
fwait
scas
add
aaa
cmc
out
lret
mov
xor
inc
outsb
test
scas
sbb
mov
add
fwait
in
xor
xor
xchg
test
sub
outsb
fiadds
test
ret
mov
add
adc
pop
pop
mov
fistpll
repnz
arpl
outsl
jne
fdivr
imul
lock
mov
sub
pop
add
pop
insl
loopne
stos
subl
cmp
sahf
imul
ror
pop
cld
ljmp
mov
push
stos
enter
pop
mov
inc
jne
add
push
cs
push
sub
or
icebp
xchg
cli
das
jo
or
enter
xor
xor
cld
jmp
aas
nop
in
dec
mov
add
mov
mov
fcomi
pop
lods
in
cmpb
sahf
push
pop
mov
and
ret
jg
das
js
adc
adc
fcom
mov
rcll
jb
xor
sub
push
loopne
mov
subb
out
sahf
pop
mov
outsl
xor
pop
sub
sbb
addr16
xchg
ljmp
sbb
aas
ljmp
je
mov
lods
fmuls
mov
mov
inc
jl
data16
pushf
mov
shl
push
dec
dec
dec
mov
shrb
pop
stos
outsb
dec
and
cmpsb
cli
lret
scas
out
mov
sahf
push
clc
jecxz
clc
or
cltd
push
cmp
push
mov
repz
and
or
xor
ljmp
imul
pop
testb
fstps
or
mov
jne
addb
lret
sbb
and
push
shlb
in
mov
jbe
aad
or
dec
adc
mov
fldt
imul
jge
mov
call
aad
rcr
int3
stos
sahf
stc
sub
imul
outsb
mov
push
jle
inc
and
movsb
out
popf
mov
das
xor
push
dec
cltd
call
mov
jno
lcall
sbb
movsl
les
in
push
outsb
sahf
icebp
lahf
cmp
mov
mov
jg
cmp
mov
jle
mov
decl
mov
mov
pop
xchg
dec
sub
lods
rol
mov
ja
dec
add
frstor
scas
add
test
ja,pn
or
push
scas
cmp
imul
pop
ljmp
cmp
or
std
jecxz
pop
pop
or
lds
enter
push
jg
inc
adc
dec
pop
rorl
sub
jg
cmpl
inc
xor
outsb
call
pop
mov
nop
inc
xor
call
stos
mov
hlt
xor
inc
dec
cwtl
xchg
xchg
fs
pusha
aas
xchg
andl
in
ds
mov
icebp
imul
into
int3
dec
pop
stos
xor
ret
jg
fwait
movsb
dec
cmpsb
push
mov
lcall
adc
xchg
xlat
mov
mov
fisttpl
adc
lcall
lods
add
cmpsb
inc
add
push
or
ss
mov
outsb
outsl
in
icebp
and
jle
ret
pop
xlat
pop
mov
outsb
pop
lcall
mov
pop
and
push
fsubs
ret
aas
mov
in
incl
cs
mov
out
decl
icebp
push
or
adc
nop
jbe
pop
pop
hlt
add
or
inc
cs
shr
clc
push
mov
lahf
cmpsl
ds
jo
mov
into
andb
sbb
cltd
dec
iret
jle
pop
adc
mov
scas
outsl
jl
inc
xor
test
mov
inc
mov
and
jl
xor
inc
cmp
ljmp
outsb
inc
jbe
test
rcrl
or
out
nop
xor
mov
orb
inc
xor
dec
adc
cmpsl
sar
mov
push
add
sahf
jmp
push
lcall
cmpsb
xchg
and
cmp
push
jae
mov
nop
es
ds
jbe
stc
add
ljmp
iret
jmp
dec
fstp
dec
ds
cmpsb
mov
and
lcall
out
xlat
inc
push
cli
sub
mov
sub
lds
jmp
out
test
data16
xchg
mov
addl
call
movsl
insl
jg
push
mulb
std
jg
ljmp
inc
mov
dec
xchg
pop
test
sbb
xchg
push
xchg
xchg
xchg
mov
xchg
xor
rcrb
mov
sub
stos
lea
rcr
push
shll
sub
mov
mov
es
cmp
js
movsl
test
xchg
or
sbb
inc
push
insl
ret
mov
stos
and
scas
pop
dec
push
cmp
fisubs
jmp
ficomps
femms
cmpsl
sbb
test
into
leave
ljmp
insb
ret
mov
add
mov
cmp
mov
mov
loopne
jg
mov
fistps
xchg
sbb
dec
rol
add
sti
sub
sbb
xor
icebp
jg
mov
lods
outsb
sbb
adc
pop
jmp
dec
enter
stos
pop
add
xchg
or
xorl
mov
fnstenv
mov
aaa
lret
or
test
aas
dec
mov
pushf
mov
cltd
dec
cmp
dec
cmpsb
shrl
pop
pop
sarb
xchg
pop
std
jg
dec
mov
jno
or
xor
and
mov
jo
adc
push
outsb
inc
sub
or
ja
pop
cs
dec
push
fisubrs
outsl
in
jl
push
jle
push
dec
enter
jmp
fistpl
push
mov
outsb
add
or
lcall
ror
or
dec
ss
cli
out
mov
add
pushl
test
dec
call
mov
ss
mov
ret
xchg
adc
cmp
daa
pop
sbb
ret
icebp
add
push
or
clc
fistpll
lea
pop
cmp
adc
cmpsb
insl
fs
mov
sbb
cmpsb
mov
mov
test
clc
xor
jle
dec
movsl
adc
push
sub
aas
push
sti
and
movb
iret
out
aaa
mov
icebp
into
in
outsb
incb
mov
mov
xor
rcll
mov
mov
sbb
outsb
xchg
loope
ret
out
and
int3
pop
add
jecxz
ljmp
test
or
sbb
pop
sbb
incl
xor
mov
pop
fsubrl
aad
mov
inc
add
push
out
test
dec
decl
orl
incl
add
int3
cmp
ds
and
inc
add
out
lock
cmc
ret
arpl
inc
lods
xor
push
ss
fdivrs
and
in
out
adc
dec
int3
out
push
jmp
fcomip
ja
cmp
cli
jl
add
mov
add
sub
out
hlt
lcall
jmp
loopne
dec
dec
inc
dec
xor
cld
push
sub
mov
mov
cltd
repz
inc
insl
mov
movsl
lods
call
xchg
lock
in
aaa
xchg
popf
pop
das
fs
mov
arpl
aas
dec
mov
fbld
imul
jl
cmpsb
mov
or
das
lds
jle
adcb
mov
adc
pop
adcl
inc
stos
fwait
scas
ss
jg
mov
lahf
mov
fadds
lcall
mov
sub
cwtl
inc
adc
push
cs
xor
sbb
or
add
mov
std
xor
cs
lods
push
push
mov
or
lret
push
stos
mov
push
cs
push
test
rcrl
stos
clc
push
rorl
in
add
mov
int3
dec
mov
push
adc
xor
pop
aas
scas
loope
addl
fists
mov
ficoml
xorb
aam
in
fsubrs
mov
fisttpll
fldenv
test
xchg
aaa
arpl
ljmp
mov
push
lods
cs
jg
fwait
loopne
xorb
jle
mov
movsl
push
xor
adc
mov
xor
call
lahf
je
xlat
scas
push
xchg
mov
or
imul
xchg
lds
movsl
ja
mov
or
lea
mov
pop
lret
addr16
lock
or
mov
stos
inc
mov
decl
pushl
push
pop
daa
cmpsb
adc
or
test
das
bound
mov
pop
mov
or
ja
mov
aaa
lock
push
cltd
and
jbe
pop
dec
orl
lcall
jle
mov
movsl
jecxz
lods
inc
or
pusha
xchg
jmp
pop
scas
mov
add
dec
mov
pop
mov
jmp
ljmp
stc
outsl
das
popl
cld
sbb
dec
jb
into
cs
lock
push
fcoml
sub
outsb
repz
xlat
xorb
add
sti
rorb
int
push
lret
sub
mov
ret
cs
lods
and
jbe
or
call
std
pushf
or
or
dec
add
inc
rorb
mov
mov
inc
jg
cs
popf
out
push
or
xchg
adc
icebp
adc
cltd
cwtl
sub
mov
mov
mov
cmp
sbb
push
faddp
lods
and
pop
xor
jmp
shlb
outsl
xor
loop
sahf
push
popf
mov
sub
ljmp
mov
sbb
mov
cmp
mov
out
stos
cmc
decl
or
sub
mov
cwtl
inc
add
into
mov
pop
fcomip
test
fistpll
hlt
mov
in
rcll
add
mov
inc
lahf
mov
daa
jge
inc
pop
daa
xorl
lret
outsb
fwait
xchg
add
andl
adc
and
add
or
and
out
femms
bound
mov
mov
mov
mov
inc
push
fwait
ret
xchg
decb
mov
mov
loop
or
pop
sbbl
jg
pop
pop
mov
loopne
push
pop
jmp
cmc
mov
xchg
sub
cs
hlt
incl
jle
mov
movsb
pop
cs
push
xor
dec
pop
pop
mov
pop
xchg
mov
rclb
push
jg
decb
add
push
iret
or
sub
mov
push
ds
outsb
and
clc
pop
jg
into
in
daa
and
aas
aam
decl
int3
lahf
das
insb
jnp
and
jmp
int3
jns
in
sbb
call
add
imul
cmp
pop
xchg
jmp
push
outsb
sbb
jge
jne
cwtl
and
pop
mov
jno
adc
into
insb
pop
into
or
imul
inc
lds
cld
push
cs
sbb
ds
sub
pusha
and
sub
inc
rcrb
stc
add
scas
mov
fwait
scas
into
test
pop
sbb
add
repnz
outsl
or
decl
ds
mov
push
sbb
inc
jo
sbb
repz
xchg
rcll
sub
mov
outsb
js
out
loop
push
or
or
mov
or
dec
in
push
jb
incl
cmpsl
lahf
pop
xchg
neg
test
mov
leave
ret
ficoms
xchg
push
test
and
icebp
push
out
lock
and
fs
cmp
pushf
stos
lret
ss
add
xchg
lahf
out
aam
dec
mov
out
inc
loope
dec
mov
imul
daa
in
insl
sub
fs
add
scas
xor
push
cld
sub
js
and
dec
fwait
cmpsl
jmp
xchg
std
arpl
and
push
jecxz
fcmovnb
jg
xchg
lcall
inc
cld
bound
mov
loop
mov
pop
imul
cmc
daa
pop
or
jbe
sahf
sbb
repz
adc
inc
scas
fwait
loopne
decl
mov
pusha
mov
dec
pop
and
fdivrp
enter
push
mov
sbb
xorb
idiv
mov
mov
mov
push
lock
in
insb
pop
add
dec
fistpl
leave
inc
andl
mov
mov
pop
push
aaa
inc
lock
lock
fisubl
aam
cmp
cli
aas
cmpsb
sub
out
data16
lds
mov
test
push
sarl
lods
jmp
mov
sti
pop
mov
js
test
test
fildl
mov
or
stos
int
ret
outsb
sub
lea
or
add
mov
mov
stc
in
out
call
pop
fdiv
xchg
sti
addr16
or
pop
clc
fbld
adc
arpl
adc
adc
sbb
inc
mov
out
jmp
jg
aam
lret
xchg
push
movswl
add
scas
fwait
mov
adc
jg
incl
aad
aaa
mov
cwtl
jle
xchg
sbb
sbb
jmp
out
mov
ja
ljmp
push
shll
test
data16
cs
shrd
or
fucomip
dec
pop
cmp
mov
dec
push
das
test
xor
sub
and
pushf
or
cltd
out
add
aaa
sbb
mov
cmp
jle
call
scas
xor
and
mov
gs
pop
outsb
pop
cld
in
rorb
test
das
mov
or
cli
rolb
cld
push
repz
or
cmpsb
cli
pop
fidivrl
jg
int3
repnz
mov
in
pop
cli
xor
dec
aas
sub
stc
mov
es
cmpsb
adc
subb
add
cli
fdivs
and
scas
mov
or
lods
in
mov
in
cmp
push
dec
fistpll
sub
ds
rorl
outsb
mov
arpl
divb
scas
mov
mov
add
out
pop
gs
dec
jl
pop
fisttpll
jg
bound
rorl
jmp
jl
pushl
adc
xchg
push
push
xlat
jecxz
divb
clc
cmpsb
mov
jmp
inc
aaa
dec
mov
or
xor
lock
incb
imulb
pop
dec
fistps
mov
push
ds
mov
shufps
mov
mov
adc
mov
mov
hlt
cld
or
shrb
mov
rorb
ja
or
out
sar
adc
xchg
mov
aad
xchg
jae
lods
in
lock
xchg
mov
in
sahf
insb
ja
ds
push
lret
movsb
fwait
add
mov
sbb
inc
add
leave
mov
sbb
push
das
push
push
inc
pop
add
incb
ljmp
xor
dec
pop
fwait
jg
push
xchg
das
jecxz
call
xchg
cld
or
dec
add
rorb
mov
test
and
movsl
mov
mov
pop
icebp
add
cmpsl
ret
adc
jne
and
or
icebp
pop
mov
push
dec
call
mov
scas
fs
mov
jno
mov
mov
mov
ror
cmp
xchg
mov
and
mov
and
sbb
or
rolb
sub
aas
clc
mov
leave
or
pop
adc
rol
loope
mov
pop
mov
fbld
loopne
test
cmp
addr16
bound
bound
mov
adc
subb
jae
or
jmp
push
mov
and
hlt
xchg
inc
pop
scas
movsl
sub
ret
pushl
fwait
into
leave
sarb
into
out
xchg
xor
pop
cmp
lods
aaa
mov
arpl
mov
shrb
outsb
fbld
xor
sbb
aad
lret
sub
push
lcall
xor
cmp
nop
in
loopne
loope
fsubrp
icebp
stc
xlat
mov
popl
or
aaa
bound
push
mov
popf
aas
adc
ret
xor
push
and
aaa
xor
stc
ret
cmpsl
inc
and
jbe
and
add
add
or
mov
popf
and
jle
cmpsb
ljmp
add
sbb
into
lahf
ja
inc
fdivrs
and
dec
lock
mov
test
push
push
cld
popf
inc
dec
mov
scas
lcall
inc
xor
xchg
nop
mov
icebp
adc
cs
mov
cmpsb
lock
xor
lds
test
scas
jp
loopne
pop
fidivrs
pop
and
out
lret
jmp
in
mov
lret
popf
stos
clc
inc
jno
aaa
out
lcall
stos
mov
xor
outsb
adc
inc
sbb
xor
fwait
sahf
mov
into
or
insl
mov
mov
xchg
les
cmp
stos
fistps
cli
lods
mov
fimull
jl
mov
and
lret
repnz
pop
mov
inc
xchg
pop
pop
cltd
fisttpll
test
adc
outsl
cmp
fistpl
lods
mov
xchg
icebp
add
sub
sub
add
mov
pop
cmpb
sbb
ret
push
mov
in
mov
pop
test
xlat
rcl
repz
add
dec
and
jno
sub
push
sahf
mov
movsl
aad
cld
xor
sub
nop
pop
sbb
xchg
sahf
test
or
push
aad
adc
jg
dec
out
jbe
iret
dec
sbb
pop
jmp
cld
rcrb
movsb
mov
pop
jne
push
dec
jmp
dec
loopne
xchg
inc
mov
daa
add
push
mov
adc
cs
loope
dec
out
test
iret
aad
out
push
shll
test
lock
das
cli
pop
xor
mov
outsl
aam
sbb
test
aaa
dec
add
xor
sbb
lock
daa
xor
adc
lods
pop
or
mov
mov
jo
cmp
sahf
fmuls
inc
test
mov
je
push
lods
sbbl
lods
add
sbb
jg
inc
ss
jl
xor
lret
inc
xor
ljmp
in
mov
jnp
orl
mov
dec
dec
add
sub
jg
fwait
test
pop
std
mov
fisubrs
decl
negb
mov
arpl
mov
sti
mov
push
lea
notb
cmp
inc
incl
out
xlat
sub
sarb
xchg
dec
mov
scas
mov
lret
and
lock
mov
icebp
sahf
ret
jg
frstpm(287
pop
pop
in
mov
push
pop
loop
mov
add
out
clc
popf
xchg
jae
loopne,pt
fwait
push
or
lock
adc
sub
cmc
xor
cs
add
out
ret
inc
dec
sub
xor
sbb
lcall
hlt
adc
mov
mov
test
or
loopne
subb
andb
push
ss
add
das
shlb
ds
dec
loopne
push
outsb
jle
arpl
pop
push
sbb
aas
mov
jbe
fucomp
jecxz
ret
scas
or
out
adc
push
mov
mov
xor
lea
in
jo
push
rcrb
sbb
das
movsl
mov
das
xchg
and
add
jle
mov
outsb
or
mul
shrb
push
fwait
jmp
fldl
out
or
sbb
loopne
clc
repnz
pop
pop
fildll
cld
mov
test
or
adc
adc
subb
pushl
fisttpll
xor
mov
mov
or
fmulp
pop
loope
lock
sub
mov
and
arpl
loope
add
test
jb
xor
mov
push
fwait
movsb
imulb
cmpsb
out
fisttps
aaa
lcall
out
push
loop
ffreep
lret
xchg
jmp
sahf
sub
sbb
test
inc
adc
pop
xor
out
mov
mov
mov
mov
iret
pop
mov
dec
ss
push
mov
pushl
xlat
int
aad
cmp
fnstsw
xor
sbb
jg
int3
stos
in
sub
lods
icebp
dec
jo
adcl
sbb
fimuls
mov
mov
clc
mov
fisttpl
dec
bound
int3
xor
movsl
test
mov
ds
cmc
shlb
clc
inc
xor
mov
pop
movsb
insb
mov
adc
mov
aam
test
lahf
test
mov
fwait
lock
mov
aaa
xor
mov
shr
cmp
mov
rorb
std
and
mov
lcall
mov
mov
pop
sub
inc
in
and
or
icebp
inc
pop
into
aaa
inc
clc
inc
aaa
call
add
in
sub
sbb
fdivp
xlat
xchg
or
roll
adc
scas
dec
lea
mov
mov
mov
cmp
lahf
xchg
fsubrs
stos
xchg
sbb
xchg
xchg
jecxz
in
cmp
lock
daa
mov
or
inc
aaa
xor
gs
inc
pop
pop
arpl
loop
aas
adc
outsl
jmp
out
outsb
clc
dec
out
aad
sub
rol
xor
or
xchg
test
fnstsw
push
fdivr
lods
les
lcall
andnps
stos
mov
lcall
adc
xor
jg
and
test
push
dec
fdivs
je
mov
cs
pop
imul
pusha
pusha
cmp
mov
lcall
lahf
out
xchg
xor
orb
mov
add
gs
outsb
bound
mov
mov
test
push
jle
cmp
out
adc
mov
pop
mov
stos
lods
mov
fisttpll
lock
sahf
mov
ds
mov
push
adc
jg
push
sarl
push
adc
sub
sub
iret
gs
dec
lods
iret
xor
pushl
pusha
sub
mov
cmp
test
jecxz
shl
int3
add
mov
mov
lock
sbbl
sahf
lret
sahf
ss
fs
inc
add
pop
jmp
adc
push
mov
outsb
add
xchg
cmp
les
lcall
push
in
cs
in
scas
loop
cltd
pop
fisttps
popa
aaa
sbb
lret
ret
int
or
push
mov
int3
rcrl
sub
sahf
fucomp
mov
jns
push
leave
in
test
pushl
or
mov
add
mov
fsts
push
pop
movsl
cmp
cmp
ret
mov
ljmp
cmp
mov
fs
out
xor
pop
mov
ljmp
jns
movsl
push
xor
les
out
cli
or
inc
cmp
mov
jmp
in
loop
dec
inc
dec
pop
loop
mov
ret
inc
sub
rolb
rcr
or
inc
sub
inc
movsb
ret
addr16
sbb
ret
add
pop
inc
adc
aas
addr16
aam
aad
lcall
push
mov
lret
sub
shlb
jno
lcall
cs
sub
pop
loop
or
xlat
test
xchg
xchg
or
sti
stos
lea
sub
pusha
xor
push
das
fs
xor
scas
add
mov
leave
push
xor
jle
mov
mov
pop
jno
cmp
cmp
jp
scas
arpl
lods
mov
ljmp
mov
inc
rolb
adc
push
aas
cld
sub
movsl
in
aaa
mov
cmp
pop
pop
clc
mov
dec
iret
jecxz
dec
sub
cld
aaa
or
out
inc
dec
rcll
repnz
pop
loopne
jl
jg
rdtsc
add
sarb
xor
call
xor
rcrb
mov
out
ds
xor
mov
jmp
js
or
cltd
dec
fidivl
insl
cmpsb
and
sbb
lahf
add
mov
ja
inc
pop
mov
stos
loop
fistpll
or
mov
mov
lahf
icebp
es
push
cli
outsl
mov
adc
pop
subb
test
insl
lock
xor
or
repnz
int3
int
test
or
stos
out
out
push
sub
mov
pop
cmpsl
pop
nop
mov
mov
aad
mov
dec
cld
scas
into
daa
mov
into
ljmp
insl
mov
jb
mov
cli
mov
or
push
fwait
push
sbb
clc
jle
into
cs
repnz
mov
or
mov
xor
add
cmp
and
movsl
jg
cmp
incb
xor
mov
lcall
or
xchg
arpl
mov
jl
in
adc
dec
cmp
pop
sahf
push
xor
adc
fs
lcall
mov
lret
xor
mov
imul
filds
cmp
cld
mov
and
test
sbb
jmp
mov
xchg
pinsrw
outsl
pop
mov
ja
in
out
shl
pop
sub
std
fucomip
mov
clc
pop
dec
das
pop
mov
addr16
mov
or
push
mov
aas
seta
mov
jmp
fildll
mov
inc
lods
sarb
shr
cmpsl
dec
lahf
mov
fbld
dec
mov
xor
lock
mov
jle
pop
test
dec
lcall
jo
test
mov
out
sub
sbb
cmc
jg
stos
outsl
out
and
add
inc
push
push
xchg
outsb
jmp
xor
loop
int3
nop
mov
mov
pop
mov
outsb
xchg
xchg
int
sub
ds
aas
repz
incl
decl
push
daa
test
aaa
mov
insb
negl
mov
inc
jl
dec
pop
add
scas
sub
mov
outsb
or
cli
jg
adc
mov
jl
jno
rcr
sarb
fadd
clc
push
adc
push
shrl
xchg
push
or
add
push
lock
jecxz
or
mov
push
test
int
addr16
xor
add
fbld
cmp
outsb
jmp
ja
adc
mov
lcall
mov
or
das
xchg
orl
and
fwait
push
sahf
fistl
sub
or
clc
imul
cwtl
pop
push
adc
jg
add
and
mov
cmp
pop
or
adc
call
push
dec
aas
lods
shl
or
iret
es
loopne
or
jns
mov
inc
jl
add
jo
in
pop
jno
fwait
into
xchg
mov
xchg
cld
fstpl
scas
mov
xorl
cmc
inc
loop
push
push
je
xchg
repnz
adc
cmp
mov
and
xor
xor
fwait
insb
popa
rorl
out
add
xchg
shr
cwtl
neg
mov
ret
inc
push
hlt
lcall
add
jle
add
jb
adc
das
and
repnz
ja
jge
or
sbb
pop
in
mov
aam
pop
xchg
jmp
insl
add
imul
dec
fisubrs
or
push
push
lods
jmp
xor
outsl
lock
leave
cmpsb
xor
sub
int
or
out
jle
and
add
popf
cltd
repnz
jecxz
loope
and
outsb
sub
fdivrl
outsb
xorl
or
sub
int
lret
imull
dec
xor
sbb
aas
mov
ds
arpl
out
push
xor
adc
add
into
jmp
mov
lret
or
insl
or
es
jg
loope
fmuls
in
cmp
or
inc
xor
ss
push
scas
out
jne
ret
mov
inc
and
push
lret
cli
add
adc
int3
pop
jg
mov
cmp
inc
push
fsubs
dec
cli
adc
aam
das
ret
push
mov
outsl
cs
out
mov
out
cmp
outsl
aas
push
mov
or
jl
cmp
outsb
xor
ret
into
pop
test
mov
movsb
les
dec
mov
mov
aad
sbb
pop
in
adc
lock
pop
pop
test
js
jbe
fdivr
aad
push
movlps
pop
mov
and
add
cld
push
add
repz
cmp
mov
dec
or
dec
mov
fdiv
add
pop
xchg
dec
add
bound
loope
std
mov
add
push
or
push
loop
jg
imul
dec
push
ds
push
pop
inc
jecxz
inc
push
test
mov
outsb
ljmp
push
fdivr
shrb
mov
mov
or
xchg
ds
inc
adc
fidivl
notb
dec
cld
mov
or
outsb
sub
jle
aam
int3
call
xor
nop
dec
lods
ja
and
adc
mov
aaa
ret
add
into
decl
test
ret
loop
push
aaa
out
sub
adc
jg
ljmp
dec
sbb
lcall
and
fwait
mov
jnp
outsb
mov
fwait
or
sub
lods
ds
sbb
xchg
pop
jl
faddl
and
pop
adc
jb
cs
arpl
dec
lret
jg
inc
xchg
imul
xor
enter
or
push
push
pop
and
and
test
mov
into
sbb
add
jle
shlb
test
prefetch
dec
cwtl
push
filds
call
jmp
pop
mov
xchg
or
into
or
loop
cmp
jmp
cwtl
or
push
outsb
push
adc
xor
fsts
cwtl
dec
adc
iret
jg
xlat
jbe
add
lcall
loop
ret
imul
mov
bound
sbb
sbb
nop
lock
pop
pop
cmp
cmp
or
aaa
cmp
aas
push
std
std
jne
add
xor
fsubrs
cmp
imul
lahf
sub
pop
adc
adc
push
adc
ja
mov
fisubl
mov
loope
mov
outsb
jmp
fbstp
push
outsb
and
ja
addl
je,pt
cltd
nopl
test
pusha
test
sarb
aaa
sahf
mov
and
into
loope
decl
or
xchg
inc
push
ljmp
aas
jb
bnd
rcll
cs
test
sbb
repz
cmpl
mov
adc
ret
jmp
lahf
movsl
pop
aas
in
mov
mov
incl
mov
scas
lretw
sahf
stos
jo
shl
inc
lods
mov
and
lret
loope
xchg
sbb
push
rol
shrb
mov
sub
out
xor
out
subb
xor
add
rorb
icebp
fistps
loop
sbb
into
outsb
xor
mov
sub
das
and
in
xchg
movsb
sbb
or
adc
iret
out
or
daa
les
int
sbb
mov
and
jnp
or
test
xchg
decb
dec
add
jl
lock
fildll
xchg
pushl
sub
xor
sbb
rcrl
shll
sub
ret
fistpll
das
sub
and
push
adc
vmovntps
pop
dec
cmpb
hlt
lock
mov
loop
inc
push
pop
fsubrl
cmp
xor
adc
cmp
pop
jl
mov
jl
das
lock
cld
int
div
mov
or
and
negb
adc
pop
or
xor
cld
add
adc
adc
and
push
sub
jg
stos
cs
or
sub
aam
push
jmp
cmp
xor
jg
ret
call
sub
insb
mov
xor
dec
jp
inc
daa
or
ljmp
or
sub
mov
and
sub
cld
inc
sar
pop
mov
int
adc
push
mov
jg
jbe
bnd
adc
push
sub
pop
jae
mov
or
cmp
daa
sbb
sbb
ljmp
mov
push
and
add
decl
clc
in
shlb
inc
inc
fnsave
mov
pop
in
ret
push
cs
mov
or
std
loop
push
cld
sbb
cs
dec
sbb
arpl
out
lcall
cmp
xlat
cmp
sub
shl
and
cld
aad
and
psrlq
scas
cmp
cmpsl
inc
sub
clc
scas
xchg
clc
rcrb
cmp
hlt
test
mov
test
sub
jmp
or
mov
jmp
and
push
cld
or
movsb
pop
push
loopne
or
fadds
pop
repnz
aaa
leave
inc
and
and
clc
lcall
pop
aaa
rorb
inc
push
push
mov
pmovmskb
out
cmp
aaa
push
js
pop
arpl
ljmp
or
add
out
push
push
ja
mov
mov
aas
loope
or
inc
lods
xchg
push
sbb
mov
and
adc
mov
ret
in
and
cmp
loope
adc
cs
mov
mov
fstps
sub
fisttpll
in
and
ret
loopne
push
hlt
clc
ja
bound
sub
push
pop
in
aas
cmovnp
xchg
ret
aaa
dec
mov
and
xor
add
cmp
or
or
fbstp
or
ds
loop
cld
push
add
xchg
xchg
xorl
sub
xchg
clc
add
mov
mov
jg
lock
push
mov
in
xadd
aas
and
aad
fidivrs
mov
outsb
inc
incl
into
add
mov
and
scas
or
rcll
pop
mov
in
outsb
out
cld
inc
mov
pop
fbld
sbb
sub
add
decb
xor
int
and
jle
adc
jle
icebp
pop
sub
cmc
or
add
cs
dec
out
cmp
inc
insb
mov
test
sbb
inc
inc
outsl
popf
cmc
icebp
lcall
into
mov
mov
mov
into
fwait
inc
cld
fildll
mov
or
adc
aad
jno
cld
lods
dec
push
sahf
int
aas
rolb
xor
lock
nop
mov
mov
cmp
imulb
ss
lds
mov
add
lock
iret
mov
add
fisttpll
les
or
pushf
fbstp
xchg
rolb
ret
iret
shrl
loope
aaa
mov
jno
out
aam
ss
cwtl
clc
call
rorb
adc
push
pop
dec
sub
jne
cld
fs
mov
testb
mov
and
in
gs
mov
ret
icebp
leave
mov
les
cld
loopne
pop
cld
mov
lock
mov
in
mov
jecxz
dec
repnz
decl
sbb
out
fcoms
push
push
fbld
cmp
out
ljmp
popf
notl
mov
sar
fwait
es
test
add
out
pop
ljmp
les
notb
fwait
xbegin
shrb
sbb
in
es
xor
call
adc
das
and
cmp
ror
fsubs
aad
sub
cld
push
add
mov
lods
push
out
out
aas
dec
ds
test
test
lea
dec
ljmp
das
mov
enter
xchg
out
repz
in
pop
cmc
aas
lea
call
lock
cltd
add
mov
jmp
lock
push
xor
scas
cs
decl
stos
into
lret
xlat
add
inc
ljmp
xchg
loop
insl
mov
mov
pop
aad
loope
shl
jno
xchg
es
inc
movsb
jns
testb
or
mov
test
xor
and
and
xchg
sbb
xchg
test
push
test
jnp
mov
lcall
cmc
sbb
or
movaps
pusha
popf
push
clc
fwait
fwait
cli
mov
push
dec
cmpsb
sub
push
xor
std
call
pop
push
mov
aad
mov
sbb
push
into
sub
mov
lods
repz
rcr
sub
fs
mov
cs
aaa
cld
jg
out
cmp
faddp
mov
xor
rcrb
outsl
cmp
decl
push
jmp
mov
ret
dec
std
fsubs
and
in
xor
push
sub
and
call
lcall
les
lods
cmpsb
cmc
mov
xorl
shll
mov
pop
xor
rcr
and
shlb
hlt
sub
movsl
repz
adc
inc
mov
sub
aam
sahf
push
or
or
xchg
jo
dec
std
call
jb
xchg
fdivrs
subb
cltd
mov
cltd
cmpsb
xor
mov
int3
mov
sbb
cmp
rcll
fs
sbb
dec
add
movsl
lcall
sub
dec
ficomps
idiv
push
test
lds
cwtl
aam
cli
lods
mov
fnstenv
jne
icebp
nop
fbstp
mov
stos
mov
sbb
pop
les
out
dec
mov
mov
js
pop
and
rcl
add
sbbb
lea
mov
adc
inc
ficoms
loopne
push
mov
jmp
jno
dec
jg
or
lahf
cmc
inc
les
push
cltd
fnstcw
mov
loope
test
outsb
data16
or
sub
shrb
movsl
hlt
enter
mov
sbb
std
add
mov
hlt
outsb
icebp
add
xchg
icebp
jnp
or
cmp
test
fldl
inc
add
inc
xchg
in
lea
or
mov
jae
mov
cld
pop
mov
and
test
pop
insl
cmp
xchg
adc
push
fidivrs
clc
testb
rcr
sub
loopne
lcall
test
push
lret
rcrl
dec
and
xor
ds
test
fbld
adc
lds
ss
jl
mov
ret
leave
adc
jle
xchg
mov
dec
push
pop
mov
mov
push
push
fs
cmp
jg
sahf
gs
jle
inc
xor
pop
pop
ret
adc
loopne
mov
test
repz
icebp
jmp
movsb
shll
loop
sub
mov
ss
and
mov
shll
into
repz
ljmp
and
fstpl
sbb
adc
or
clc
pop
sub
icebp
adc
add
pop
idivb
pop
clc
cmp
les
bound
aas
cmp
jg
test
enter
lret
sti
push
dec
pop
push
clc
out
push
cmp
shr
xlat
or
repz
sbb
sbb
and
dec
clc
fbstp
pushf
inc
loopne
jmp
fwait
ss
sbb
pushl
cmp
mov
fisubrs
jle
cld
pop
pop
ret
outsb
das
adc
fstp
mov
data16
and
fildll
xor
dec
fbld
mov
adc
inc
loopne
aaa
and
into
cs
fcmovnbe
xchg
push
outsb
cmp
pop
lock
adc
sahf
adc
aaa
xchg
pop
pop
inc
aas
mov
je
ss
ljmp
xor
push
push
mov
ja
fisttps
cld
push
inc
push
cltd
jmp
lock
stc
adc
adc
xor
pop
out
out
push
push
fbstp
ds
pop
das
outsb
and
cmp
add
repz
addr16
rcll
popf
push
fs
gs
jg
push
js
orb
dec
into
leave
mov
loop
xor
push
add
out
mov
or
add
push
lcall
push
pop
test
jmp
mov
mov
or
push
jmp
pusha
cmp
sbb
nop
stc
push
or
shll
add
adc
add
pop
outsb
and
cmp
jmp
adc
stc
into
xchg
cmpsb
lods
xchg
sub
xor
or
or
mov
sbb
nop
pop
subl
decl
cmc
sub
dec
add
stc
xchg
mov
ret
adc
cmp
mov
sbb
lret
push
pop
jbe
sahf
outsb
insl
pop
sub
jle
nop
inc
jmp
and
daa
or
and
adc
cwtl
cs
insl
jmp
fisubl
cmp
and
sbb
mov
arpl
jo
test
cli
cs
lcall
mov
std
orb
push
xor
xlat
aaa
je
es
into
ficompl
icebp
or
aaa
adc
and
aas
xchg
out
inc
xlat
ljmp
lock
pop
xor
cmp
imul
xchg
adc
out
das
jb
pop
dec
mov
and
insb
iret
inc
sbb
fsin
add
mov
xor
orb
sti
js
call
leave
sahf
add
idivb
mov
ret
fmull
pop
inc
and
fistpll
bnd
lcall
lods
scas
addl
xchg
lret
loope
int
cld
sub
pushf
shr
cs
push
cmc
mov
ds
jns
dec
outsb
subb
jg
test
pop
stos
movsb
pop
or
add
mov
fwait
inc
mov
cs
lea
jl
xor
scas
pusha
push
mov
adc
dec
cmc
xor
mov
mov
seta
pop
xor
or
xchg
pop
cs
cld
hlt
loop
fimuls
aad
fists
inc
dec
filds
cmp
cwtl
pop
clc
decl
ret
and
xor
mov
mov
jmp
mov
xchg
fcmovnbe
pop
loope
rcrb
mov
add
adc
das
fcoml
scas
jle
jnp
mov
mov
sbb
outsb
jl
adc
cld
sbb
sbb
pop
cs
mov
sahf
xchg
xchg
dec
fmuls
mov
or
mov
jle
mov
ds
repz
fistps
pushl
dec
xchg
inc
push
rcl
test
shlb
movhps
inc
imul
cmc
filds
insl
jmp
iret
addl
popa
jno
jmp
loop
andb
data16
inc
push
movsb
mov
gs
or
push
xor
pop
cs
pop
fstl
push
ret
sub
fsubr
or
dec
ljmp
js
sub
loopne
gs
dec
ds
repz
jl
and
push
lock
pop
pop
and
das
cmpsb
enter
cvttps2pi
add
ret
cmp
sarl
add
outsl
adc
mov
sub
das
jne
fwait
pop
jg
or
sbb
jge
pop
clc
xchg
sub
push
push
femms
sub
mov
inc
cmp
std
mov
mov
out
add
mov
ds
pop
std
call
jbe
int3
stos
pop
xchg
cwtl
pop
add
sbb
jg
jle
sub
or
cmp
pop
aaa
ds
mov
scas
or
add
adc
adc
sub
outsl
adc
ret
das
repnz
xor
lcall
into
sbb
or
lds
xor
outsb
jl
adc
pop
lret
popa
and
push
fiadds
aas
and
push
pusha
xchg
jl
jmp
adc
icebp
cmpsb
pop
jle
dec
bound
pop
and
rorb
es
add
push
lcall
fidivrs
or
test
dec
in
cmpsb
pushf
adc
aam
and
iret
and
shlb
mov
icebp
sti
cmp
fdivp
and
rcll
aas
or
sbb
xor
scas
and
and
loop
dec
fmulp
pop
ljmp
mov
sbb
pop
or
mov
mov
mov
pushl
loopne
pop
adc
push
lcall
push
ljmp
add
loop
aas
iret
mov
xor
cmp
or
jg
iret
sub
cmp
push
jb
hlt
xchg
lods
fstl
gs
mov
inc
push
pop
add
jb
outsb
js,pn
mov
rorb
mov
mov
dec
pushl
daa
cld
push
add
and
lea
es
pop
xchg
clc
gs
and
je
js
or
mov
jge
or
jno
mov
pop
mov
pop
mov
sbb
cld
daa
cld
jg
pusha
sub
mov
add
pop
or
and
ja
inc
adc
fiadds
and
movsl
and
push
jle
xorb
lods
mov
and
loope
xchg
dec
push
xor
pop
jns
iret
jns
filds
push
mov
sbb
je
pushw
xchg
lods
or
sub
cmp
cwtl
inc
mov
int
decl
fistpl
imul
push
test
outsl
clc
sahf
inc
push
and
clc
xchg
push
pop
and
cmp
dec
mov
jo
or
jbe
loopne
fimuls
iret
shld
aas
jbe
call
adc
adc
adc
cld
sub
add
pop
or
add
lcall
fdivrs
sub
push
gs
pop
inc
int3
mov
sarb
add
insb
cmp
dec
ret
cmp
call
shrb
rcll
adc
ja
ds
mov
inc
xchg
into
sub
bswap
test
pusha
cli
aas
rcrb
push
mov
xchg
int3
sbb
ds
add
fisubrs
int
insl
int
jle
mov
fisttps
into
add
pop
sub
lcall
in
xorb
leave
cmc
lods
xchg
ds
loop
or
fistpll
push
push
stos
jle
cltd
add
loop
incl
sub
cmpsl
cltd
int3
fnstcw
mov
hlt
in
jp
mov
adc
fstpl
lods
aad
sub
xor
fistpll
push
arpl
or
sub
push
subb
loop
and
add
xor
das
xor
adc
dec
loop
iret
xor
dec
dec
and
dec
pop
outsw
xchg
es
shlb
subb
add
decl
mov
adc
mov
sub
or
sarl
ffree
or
push
sbb
sbb
int
dec
loope
jmp
sbb
cltd
pop
cmp
sbb
fwait
xlat
ds
xor
test
scas
push
and
aas
lahf
jg
inc
and
lock
lcall
scas
sub
out
shr
sar
or
mov
das
scas
push
nop
push
adc
daa
mov
ds
or
xor
mov
jmp
icebp
push
aaa
or
pop
outsb
xchg
or
lcall
ds
sbb
mov
imul
ja
xor
sarb
out
daa
add
jne
pop
imul
jo
push
out
ret
inc
push
jl
in
fimuls
add
jmp
decb
mov
pause
mov
stos
inc
fsubp
in
fwait
inc
popa
push
mov
push
pusha
mov
jg
jl
mov
xlat
shlb
scas
popf
mov
iret
inc
pop
mov
std
ljmp
push
loopne
cli
insl
jle
mov
testb
das
add
sub
call
fbstp
addr16
lahf
cwtl
aaa
inc
pop
sahf
or
xchg
lods
int
aam
adc
pop
or
and
aad
das
adc
push
mov
mov
add
sahf
mov
iret
jle
aaa
loop
arpl
adc
jecxz
mov
pop
sub
push
int3
jle
ficoms
mov
cmp
je
jns
pop
mov
jle
xor
xor
xlat
xorl
aam
pop
inc
push
pop
xor
sarb
or
xor
mov
scas
out
mov
fisubs
jg
sbb
stos
pop
fs
sbb
icebp
and
push
xlat
push
add
dec
sbb
pop
add
lock
xchg
add
pop
mov
int3
in
out
jno
sub
mov
out
scas
xlat
sub
mov
cs
cs
test
test
ucomiss
outsl
pop
ljmp
outsb
jae
adc
sahf
sub
aas
cs
cmp
movb
inc
xor
push
cld
test
rcrl
cs
sbb
ficomps
es
pop
aam
push
jno
ss
fldenv
sub
jg
mov
decl
decb
xchg
cltd
aaa
jne
or
sub
out
cli
and
incl
ds
adc
mov
push
out
scas
rep
ss
and
pop
aaa
sbbb
ret
loopne
or
mov
mov
out
xor
addr16
lcall
cs
mov
mov
enter
daa
pop
mov
shl
add
out
popa
push
mov
call
scas
pop
aaa
push
les
sbb
ljmp
mov
scas
mov
mov
ret
sub
xchg
jmp
sti
cltd
mov
sbb
push
and
adc
test
lret
and
adc
mov
sarl
or
xor
pop
or
call
jg
lahf
pushf
je
push
sti
xor
in
clc
push
movsb
pop
in
mov
sahf
pop
divl
push
xor
dec
shll
das
xor
push
add
dec
and
cs
sub
lret
jl
std
stos
rolb
mov
pop
scas
xor
ret
clc
dec
pop
sub
adc
loope
pop
jbe
adc
xor
cmp
pop
ret
mov
jo
stos
movsb
ficoms
loopne
mov
cld
push
ss
lcall
sub
sbb
xchg
xchg
sbb
jecxz
daa
sbb
int3
cli
fistl
cmc
fidivs
mov
or
decl
jle
sbb
fsubs
jp
bound
aaa
xor
pop
loopne
jo
jmp
or
sub
pushf
pop
xchg
outsl
sub
adc
cs
xor
or
adc
adc
inc
fadd
mov
loope
or
pop
adc
ljmp
or
sub
pop
jns
cmpsb
cmp
out
and
jp
aas
jbe
hlt
mov
cmp
dec
jle
sbb
dec
cmc
pop
adc
cltd
mov
xchg
jb
daa
fisubrl
std
scas
dec
pop
fs
sub
aad
imul
test
mov
popa
in
into
xor
add
out
clc
fimuls
pop
ds
nop
mov
mov
push
popa
xor
iret
sub
jo
cmpsb
cmpsl
enter
sbb
sbb
adc
shl
orb
push
loopne
icebp
or
loope
mov
jg
mov
jmp
mov
imul
ljmp
std
mov
push
pushf
fucomp
pop
push
aad
sub
jg
lock
lret
icebp
inc
outsb
lahf
sti
and
jg
add
jle
dec
mov
push
insb
add
hlt
mov
adc
aas
xchg
dec
fsts
hlt
adc
mov
jmp
adc
mov
xorl
xchg
fidivrs
add
add
xchg
shl
ljmp
into
sbb
or
jecxz
xor
pop
divb
mov
out
adc
or
jecxz
cs
and
out
xor
dec
arpl
dec
imul
push
sbb
out
inc
mov
add
jo
decl
and
mov
sbb
lock
fiaddl
mov
scas
jg
cld
mov
or
sarl
sub
test
xor
push
mov
gs
hlt
ljmp
inc
jle
das
push
shll
cmpsb
imul
xor
and
push
xor
stos
rorb
push
std
cmp
ja
push
add
pop
mov
mov
mov
lret
adc
decl
cs
cmp
xor
xor
push
pop
clc
lcall
push
aas
stc
jae
sbb
stos
jmp
inc
aas
push
mov
sbb
scas
mov
pop
or
mov
xor
jge
push
jmp
xchg
push
sub
xor
call
aam
mov
ljmp
lcall
mov
test
ss
jbe
and
push
lcall
ja
ss
imul
pop
push
and
push
fisubs
inc
into
out
cmpsl
mov
cmp
movsl
dec
mov
cwtl
aad
mov
lahf
sbb
cltd
cli
cmp
lock
ficomps
call
pusha
ucomiss
int
jbe
aas
jmp
push
inc
or
adc
or
cmp
cmp
jl
loopne
setle
stc
jne,pn
fstl
or
adc
fisubrl
test
mov
shlb
mov
and
or
dec
dec
mov
cmpsb
and
fidivrl
mov
scas
inc
paddq
dec
rorl
xchg
lds
mov
adc
mov
aas
insl
ret
or
and
push
mov
fistl
push
push
sub
loop
fisubrs
jae
mov
cmp
in
incl
add
into
xchg
mov
into
and
mov
outsb
sbb
fwait
jl
dec
loop
cli
fisttps
shlb
leave
dec
pop
icebp
mov
pop
cs
sub
push
notb
ss
test
jecxz
pop
sbb
fwait
out
add
lds
mov
and
int3
icebp
sbb
out
add
push
pop
rcrb
pop
movsb
jg
mov
pop
sub
and
loope
fisttpll
sbbb
leave
cmp
cmp
or
movsl
inc
cli
out
push
fisttps
lret
cli
loop
icebp
push
subl
scas
xor
cwtl
and
test
mov
xor
mov
fcmovnb
adc
outsb
outsb
pushf
push
push
mov
pop
and
mov
cmpxchg
mov
mov
pop
decb
push
mov
pop
lea
pop
test
out
mov
loop
add
ja
mov
jbe
bsf
aam
sar
push
pop
rcl
les
push
ljmp
pop
mov
push
mov
xchg
pop
scas
insl
dec
lret
out
xor
sub
sbb
jno
and
add
loop
fs
movsb
xor
lock
aaa
rorl
aam
push
cmpsb
aaa
cwtl
clc
scas
push
movsl
mov
rorl
jp
sub
push
outsb
cmpb
adc
lea
or
outsb
add
mov
insb
sbb
data16
loope
cli
mov
push
mov
loope
adc
test
xchg
push
add
aaa
int3
jg
jno
cs
jmp
or
shrb
xchg
out
fistpll
jo
dec
adcb
jle
rcll
push
aas
dec
xor
xor
sbbb
cmp
loope
cmpsb
pushf
into
dec
das
or
sbb
pop
cs
das
dec
scas
jecxz
pop
ja
out
or
xchg
aaa
insb
incl
daa
aaa
mov
add
stos
mov
inc
les
and
aaa
mov
cmpsl
mov
push
lret
hlt
xchg
stos
mov
test
mov
leave
call
or
or
xchg
xor
sahf
mov
ds
inc
add
dec
add
or
xor
js,pn
cld
push
or
mov
inc
lea
jb
inc
testb
pop
adc
cmp
add
sbb
and
rol
fwait
std
lret
jo,pt
cmpsb
in
adc
pushf
mov
call
nop
popa
outsl
push
fbld
sbb
push
push
or
xor
divb
lods
dec
iret
decb
lds
sub
repnz
or
negl
jl
lahf
push
ret
dec
nop
xor
orl
mov
mov
pop
mov
iret
jg
rcrl
test
repz
or
and
mov
out
and
adc
enter
test
mov
test
fildll
jl
sub
pushf
into
out
push
iret
mov
push
add
es
lcall
pop
jle
adc
dec
dec
pop
hlt
out
and
lret
stos
mov
inc
in
ficomps
stos
jecxz
sbb
mov
lods
mov
adc
mov
adc
dec
mov
sub
push
pop
mov
pcmpgtd
mov
add
test
pop
xor
ljmp
push
in
adc
loop
add
es
push
mov
imul
push
cmpsl
pop
sub
pop
clc
or
adc
das
sarl
push
xor
nop
dec
jo
mov
in
xchg
out
fstps
jge
mov
and
sub
mov
repz
jle
fsub
adc
jg
test
pop
movlhps
xchg
pop
pop
sbb
sbbb
das
pop
xchg
cs
loop
fisttpll
in
andl
jp,pn
decl
out
aad
mov
fwait
shrl
push
daa
cmpb
dec
ds
aam
mov
orb
mov
sbb
mov
or
or
adc
faddp
or
stos
test
sbb
incb
out
test
or
adc
les
pop
pop
dec
loopne
push
iret
rcrl
outsb
xchg
mov
lcall
daa
and
mov
ficoms
clc
mov
jle
xchg
sub
in
out
add
mov
mov
or
and
lods
stc
mov
lcall
cmp
dec
mov
bound
call
pop
xchg
filds
cmp
mov
push
xor
mov
icebp
outsb
lods
inc
dec
pop
sbb
lret
call
test
shrb
and
std
jnp
cmp
or
adc
icebp
dec
stos
lock
lcall
mov
outsb
mov
je,pn
add
push
push
movsb
test
xchg
stos
or
out
mov
test
xchg
inc
stos
push
ds
jecxz
loop
ja
clc
movzwl
cs
stos
out
xchg
aam
jae
int
adc
dec
mov
xor
mov
adc
icebp
pop
movb
incl
out
fistpll
or
cmp
ljmp
add
rclb
pop
icebp
push
hlt
jae
and
mov
xor
ss
mov
aas
ds
es
std
push
iret
cltd
imul
push
mov
inc
popa
out
sub
jno
cmp
out
xor
add
pop
cmp
das
xor
xor
push
sub
fdivrl
xchg
xchg
pop
jg
jle
cltd
cwtl
sbbb
cwtl
arpl
mov
cs
or
mov
cld
lods
sub
and
ss
push
push
push
pop
xchg
mov
mov
call
ds
loope
in
sub
push
sub
into
mov
mov
jnp
pop
lds
sbb
pop
add
mov
jp
mov
mov
adc
dec
or
bound
daa
jno
ljmp
leave
cmpsl
into
std
pusha
decb
cld
inc
jp
addr16
xor
incb
xchg
mov
push
loope
push
outsl
cli
jo
mov
add
cmp
or
mov
add
out
dec
and
inc
adc
pop
xchg
pop
add
mov
sub
outsl
scas
fimuls
pop
hlt
jne
jmp
nop
call
decl
jge
xor
jo
scas
push
loopne
mov
add
cli
sbb
mov
popf
pop
pop
into
stos
cli
sbb
out
adc
lahf
mov
adc
pushl
lock
xchg
mov
loope
add
sti
mov
jmp
or
or
sahf
cwtl
dec
rorl
add
loope
or
ljmp
sbb
aaa
push
pop
jne,pn
es
adc
lret
sub
xchg
and
mov
cmpl
and
add
int3
cmp
push
mov
pushw
cs
sahf
push
jmp
xor
fwait
mov
scas
sbb
sarl
and
incl
ds
fisubrs
ficoms
outsb
sub
fisttps
or
mov
in
sahf
mov
shll
aas
ret
aaa
inc
ja
leave
into
cld
mov
lock
cmp
stc
push
ss
or
sahf
in
adc
lcall
or
icebp
sbb
decb
nop
or
inc
cld
or
int3
filds
add
pop
int
iret
int3
sub
popf
enter
push
call
dec
filds
stc
cmp
sbb
sbb
pop
nop
xor
adc
sbb
lds
pop
hlt
push
jnp
repnz
push
std
jmp
leave
popf
cltd
jo
mov
gs
jo
scas
pop
bound
dec
int3
je
cmpsl
jno
add
lret
mov
add
mov
cld
fsts
jae
loope
clc
mov
insb
data16
sub
adc
mov
jmp
out
cmp
adc
lods
ret
cld
ljmp
inc
jne
fdivp
mov
sbb
jbe
loop
lea
cmpsl
or
es
jle
cs
mov
outsb
rclb
jl
push
jle
outsl
rcrb
sahf
mov
rorl
scas
push
pop
mov
inc
push
es
and
dec
aas
pop
stos
bound
jecxz
push
pop
add
pop
decl
js
and
or
loopne
and
inc
loop
add
cli
scas
pop
jle
and
or
sahf
mov
into
pop
ds
jl
mov
sub
pushf
push
call
test
ds
js
mov
in
lahf
jbe
push
mov
inc
pop
stc
or
adc
sub
mov
pusha
sub
and
fsubl
cs
scas
arpl
jmp
mul
pop
ss
ss
push
push
xor
xchg
ret
cltd
into
fisubl
or
sub
push
mov
cmp
jp
lods
or
out
pop
or
mov
out
out
pusha
dec
mov
and
xchg
mov
jp
pop
mov
js
ja
aas
ljmp
cmc
out
orb
fiaddl
and
adc
and
pusha
mov
jl
aaa
push
stos
or
lret
xor
fildll
aaa
cmp
or
adc
mov
dec
fistpll
adc
xchg
lcall
lock
or
nop
jle
push
mov
rolb
aaa
push
lahf
mov
stos
loopne
sbb
int3
xor
push
sahf
or
push
inc
adc
or
pop
xchg
je
hlt
int3
jmp
sub
push
sub
dec
dec
dec
enter
push
mov
lahf
sbb
jmp
scas
xchg
jns
cs
mov
rcr
sub
pop
push
enter
or
jmp
add
xor
dec
cmpsl
aaa
jmp
jle
sub
stc
and
loop
mov
xchg
fsubrl
or
outsb
jle
pop
mov
add
arpl
adc
cmp
mov
jo
inc
mov
or
sub
stos
push
movsb
adc
push
adc
and
adc
mov
inc
dec
sbb
push
xor
sub
mov
ret
iret
lahf
sub
imul
sbb
mov
add
cld
cmpsl
dec
cltd
sbb
leave
pop
pop
xor
iret
push
push
sub
push
in
insl
rclb
xor
dec
std
xchg
enter
cld
lock
out
aad
sub
into
nop
add
cmp
xor
in
inc
clc
ljmp
pushl
arpl
ljmp
into
push
and
jbe
sbb
pusha
xorl
fnstsw
add
xchg
arpl
sub
repz
cs
cmc
aas
xor
outsb
cltd
lcall
and
cmc
ds
cmpsb
cmpb
in
stos
mov
sbb
and
es
imul
loope
icebp
decl
add
shlb
cmp
jg
push
test
fdivrl
cmp
scas
shrl
adc
xchg
imul
cmp
ret
or
std
mov
ret
or
sbb
add
and
xchg
sbb
xlat
js
stos
push
jmp
cld
ja
stc
mov
sub
lock
mov
lock
add
or
jg
xlat
and
add
mov
dec
xor
or
lcall
jbe
add
xor
sbbb
mov
jecxz
sbb
mov
test
sub
enter
in
sub
data16
fistps
stos
out
sbb
push
mov
pop
inc
daa
out
sar
dec
mov
adc
sti
cs
mov
shlb
jo
and
sarl
aaa
jg
in
pop
push
add
clc
xchg
mov
enter
jmp
pop
mov
lods
aam
jne,pt
testb
fmulp
sub
mov
test
aaa
sub
daa
sbb
add
mov
fisttps
rolb
imul
dec
mov
add
nop
rolb
or
mov
incl
orl
add
out
movl
addl
shl
push
aas
cwtl
inc
paddd
lcall
adc
loop
sub
sub
sub
aas
scas
ss
icebp
lds
mov
jp
cmpsb
lcall
lock
in
cmp
mov
fstp
data16
nop
decb
and
incb
pop
xor
mov
ss
in
lods
sbb
xor
adc
sbb
test
int
jle
in
jmp
push
sbb
or
ljmp
les
pop
push
cmp
add
loope,pt
cmp
pop
lods
ffree
xchg
mov
pop
mov
mov
jg
xchg
rcr
pop
and
ret
push
test
clc
movzbl
ficomps
lret
addb
mov
mov
mov
adc
fildl
movsl
mov
aaa
lcall
push
cmp
cmpsb
push
cmp
mov
sub
or
inc
xchg
xor
cmpsb
or
scas
jg
aad
sbb
adc
icebp
pop
or
mov
cmp
cmp
rol
dec
push
mov
shl
pop
mov
xor
mov
scas
dec
aas
les
push
cld
ret
or
aad
icebp
ljmp
push
mov
scas
mov
push
cmpl
adc
icebp
out
or
xchg
incl
xlat
push
adc
inc
and
inc
push
or
push
add
dec
scas
enter
dec
mov
pop
or
jg
arpl
loop
sub
jle
ret
clc
push
into
cmpsl
out
std
loop
inc
es
xor
and
push
cmc
jne
cld
scas
test
roll
mov
push
jl
jbe
jmp
in
push
jbe
pusha
clc
repz
fistpll
mov
aaa
pushf
in
fsubrs
mov
hlt
lods
cmpsb
movsb
stos
aas
movsb
sub
jnp
cmp
mov
and
das
ljmp
jle,pn
loop
lret
test
lret
cli
das
scas
jge
jmp
mov
or
push
cmc
out
xor
mov
jg
mov
loop
mov
jle
lock
std
sub
cmpsb
sub
hlt
aas
push
sahf
mov
mov
cld
scas
outsl
call
std
push
mov
cmp
shll
in
or
and
and
loope
loope
mov
mov
or
push
sar
pop
scas
xor
mov
dec
and
mov
pop
call
sub
sbbl
insl
fmull
in
in
scas
scas
repz
mov
stc
add
mov
xor
jg
sbb
adc
push
or
enter
loopne
in
mov
and
dec
push
mov
scas
jo
adc
sbb
lock
jg
adcb
sbb
fimuls
sub
mov
rcrb
mov
and
lahf
movsl
enter
sbb
add
sahf
cmp
es
pop
mov
xor
cmpsb
sub
xor
cmp
or
and
adc
mov
in
xchg
pusha
cmc
adc
into
adc
fwait
cli
dec
fstpt
aaa
push
aad
orb
cmc
dec
insl
pusha
adc
sub
lock
mov
or
scas
or
add
rcrb
test
clc
insl
fbstp
sub
aas
icebp
sbb
lret
inc
loope
adc
scas
push
outsl
aam
rcr
mov
dec
mov
popa
cmp
mov
sub
cmp
dec
fwait
imul
sub
incl
or
test
outsb
push
das
ljmp
xchg
mov
push
std
arpl
adc
filds
lds
aas
aad
adc
orb
mov
mov
dec
outsb
cld
mov
decl
xlat
cli
aas
stos
and
push
fcomps
ljmp
insl
jno
jno
out
loop
cmp
aaa
xor
dec
or
popa
push
mov
pop
out
jmp
cld
pop
xchg
mov
mov
loopne
insb
adc
jg
shlb
sub
outsl
push
out
hlt
mov
and
pop
filds
out
jecxz
dec
push
xor
loope
sbb
sarl
fcomp
push
inc
sahf
in
mov
cmc
incb
jg
inc
lods
push
fwait
sub
arpl
xor
cmp
lahf
cmp
sub
add
or
stos
jmp
add
mov
mov
adc
loop
aad
or
sub
jb
xchg
out
ret
arpl
sub
adc
clc
ljmp
push
out
mov
fidivrs
sub
fcomps
sbb
sbbb
sysret
add
mov
testl
lock
repz
push
xor
das
add
cwtl
lret
scas
ret
sub
mov
aam
cmpsl
leave
xor
cs
sahf
push
cmp
icebp
jl
dec
dec
loop
pop
incb
push
into
pop
es
iret
pop
pop
mov
hlt
mov
ds
scas
adc
test
fisubl
sbb
popf
and
cmp
mov
mov
sbb
and
and
ss
cli
pop
mov
inc
push
mov
rorb
cld
lret
mov
jmp
cmc
xchg
out
and
call
inc
xchg
mov
pop
nop
pop
xchg
aad
dec
ret
mov
jl
cld
cli
out
or
sub
je
enter
ds
ds
stos
les
pusha
mov
mov
lods
and
adc
loope
jbe
int3
test
incl
adc
bound
xor
or
pop
jle
dec
adc
sub
xor
dec
leave
sbb
popf
insb
sahf
rol
sub
pop
mov
add
aam
dec
mov
std
jmp
call
pop
popf
pop
inc
add
in
cld
pop
clc
push
cs
and
mov
outsb
and
incl
mov
aaa
push
mov
add
or
xchg
out
in
sarb
sub
pushf
nop
ja
andb
xor
jle
subl
push
add
push
and
inc
pop
push
or
mov
sarl
lock
loopne
inc
mov
sub
cmc
add
cmp
ljmp
movsb
push
insb
dec
push
and
sub
mov
cli
dec
fld
scas
push
lock
fs
mov
divl
lods
mov
mov
aad
adc
cmp
sub
adc
mov
insb
lods
mov
std
jg
test
lods
lahf
push
adc
pop
and
pop
cmp
daa
pusha
add
add
and
test
inc
aas
mov
shlb
arpl
cmp
xor
test
popa
lds
pop
adc
sti
or
sbb
ljmp
adc
cmc
fiadds
xor
sub
fwait
test
ret
orl
aaa
aam
jecxz
repz
push
dec
fdivl
xchg
mov
sar
int
andl
sub
xor
or
adc
or
shrl
xor
loopne
and
pop
fmuls
ss
add
dec
sti
push
ss
jp
icebp
and
subb
jbe
clc
loopne
lar
mov
or
pop
fiadds
sub
fiadds
xchg
les
or
cmp
mov
sub
inc
pushf
or
cs
sub
inc
push
inc
push
outsb
jecxz
cmpsl
add
cmpsl
and
push
cmp
lcall
ljmp
xorl
adc
scas
sbb
fwait
movb
out
lock
loope
or
xchg
ja
mov
in
lcall
jo
subb
icebp
adc
int
cmpsb
aad
xchg
and
incb
decb
aam
or
and
pop
mov
and
cmp
out
dec
cmp
and
movsl
in
das
pop
aas
jg
into
cmp
fcompl
idiv
sub
or
mov
xor
cmp
sub
ljmp
lcall
pusha
sub
in
jecxz
std
shll
les
add
jae
mov
jmp
dec
and
xchg
into
adc
add
out
pop
insl
sub
mov
dec
adc
aam
out
push
mov
fnstsw
sub
imul
mov
add
dec
mov
mov
xchg
aaa
lods
nop
scas
xor
mov
add
cmp
push
es
mov
fsubrp
push
adc
xor
iret
push
pop
add
dec
dec
mov
hlt
mov
pop
mov
inc
pop
xor
ds
incl
into
bound
daa
cmpsb
xchg
decl
and
dec
sahf
mov
pop
mov
mov
aaa
add
push
xor
pop
mov
and
dec
inc
mov
enter
mov
pop
pop
adc
dec
adc
mov
sbb
outsl
xor
mov
adc
popa
std
pop
sub
mov
and
out
adc
inc
scas
dec
pop
into
lock
popf
add
cmp
mov
stos
mov
ret
push
push
sbb
sub
rorb
inc
mov
jg
add
xor
nop
mov
and
out
arpl
jmp
ss
mov
fiadds
jne
jle
lahf
dec
xchg
hlt
mov
pop
fdivs
jo
iret
mov
jmp
jmp
call
aad
jl
mov
ds
daa
sahf
adc
fsts
mov
outsl
cwtl
rclb
int3
xchg
cwtl
data16
xchg
aam
lock
lds
out
imul
adc
ja
cmc
gs
outsb
testb
mov
or
into
add
pop
les
and
add
subl
inc
push
lods
je
shl
fs
mov
and
mov
cmp
clc
cmp
dec
lds
push
inc
cmp
iret
out
int3
daa
cwtl
or
xchg
int3
pop
add
outsl
das
jp
jg
testl
gs
pusha
and
add
in
test
loopne
pop
lds
lret
dec
ljmp
les
mov
lahf
xorb
add
cmp
insl
movl
pop
loopne
sahf
xor
les
pop
movl
fimuls
xor
pop
cwtl
pop
loop
sub
loope
call
incl
jno
mov
pop
scas
inc
push
aaa
mov
add
adc
mov
or
outsb
outsl
dec
mov
and
clc
and
inc
mov
push
pop
or
aas
out
gs
sub
mov
decl
lods
dec
push
dec
nop
dec
insb
es
pop
push
int
outsl
mov
cmp
sarb
jp
mov
lea
aam
xchg
daa
icebp
addb
out
sbb
hlt
xchg
add
mov
in
out
lcall
leave
cld
shrl
push
cmpsb
add
pop
ds
mov
xor
scas
pop
fsubl
mov
pop
pop
or
mov
int3
test
bound
cmc
cli
aas
mov
fstpt
jg
lods
decl
movsb
clc
loop
test
das
mov
and
dec
mov
cwtl
and
dec
popa
rcrl
insb
addr16
rcrl
cmp
lock
mov
push
pop
dec
push
repz
lret
sbb
mov
aas
xchg
push
pop
ja
add
into
aad
push
decb
jmp
in
xchg
pop
mov
push
sbb
mov
das
outsb
repz
dec
faddp
rorl
mov
push
jo
lods
push
jo
fs
mov
xor
mov
sti
movsl
adc
pop
pop
add
movzwl
inc
xor
dec
and
stos
cltd
pop
hlt
mov
mov
push
xchg
out
cmp
xor
pop
sub
dec
es
subl
decl
adc
inc
daa
leave
xchg
jle
ljmp
mov
cs
ficompl
sbb
xor
mov
mov
aaa
mov
cmp
xchg
inc
inc
outsb
jmp
sbb
mov
orb
movsl
icebp
sbb
fidivl
imul
mov
pop
scas
into
and
jle
cmp
ljmp
pop
and
loope
pop
inc
loope
inc
cmp
dec
rorb
scas
fcmovne
pop
add
aam
js
fmul
and
out
das
aam
fiadds
pop
inc
dec
fcmovnb
sub
scas
push
fcmovnu
add
outsb
aad
or
xor
add
cs
fcoml
imul
loopne
ds
mov
ror
push
out
and
rcrl
cmp
push
cmpsb
sar
sub
xchg
and
adc
sbb
mov
decl
sbb
aaa
cmp
xor
aas
pop
jne
cmpsl
stc
pop
mov
mov
test
mov
mov
pop
inc
mov
jmp
jbe
pushf
xchg
outsb
jp
aam
and
test
orw
mov
push
sti
pop
mov
dec
stos
push
pop
daa
push
jno
loope
aaa
ljmp
sbb
hlt
outsb
fld
outsb
loopne
shlb
push
fcomp
aaa
jnp
das
aam
hlt
int
cmp
out
in
cmp
in
cmp
sbb
imulb
pop
fdivrp
xlat
dec
out
les
in
adc
ss
fiadds
mov
inc
jle
xlat
pop
jns
sub
push
scas
cli
fldcw
pop
out
add
lock
ret
mov
and
fiaddl
add
outsb
out
ljmp
jge
and
xchg
push
sbb
test
outsl
adc
add
ret
cmpsl
jle
xchg
or
add
ret
fidivs
push
push
rclb
lock
xchg
inc
aaa
push
ficoms
hlt
jo
jmp
repnz
add
mov
sbb
sub
jo
xor
rorb
push
shrb
dec
add
xchg
mov
dec
cmp
xor
idivb
and
pop
sahf
push
neg
dec
mov
cmp
pop
fiadds
inc
loopne
jecxz
fidivrs
xlat
dec
jle
cltd
mov
sub
sub
fistpll
mov
fs
scas
mov
mov
push
aad
and
aaa
adc
sbb
fistpl
push
popf
mov
mov
xor
fbstp
aam
add
mov
repz
mov
sbb
sbb
notb
pop
pop
ja,pt
or
push
int3
in
push
sub
subb
xor
lock
mov
mov
cmp
stos
icebp
and
incl
out
mov
pop
xor
add
xchg
icebp
fwait
or
pushf
nop
adc
jg
icebp
fs
and
sbb
clc
adc
lahf
cs
inc
adc
mov
pushf
cs
fwait
mov
push
hlt
incl
mov
insl
shlb
pushf
out
dec
incl
popa
movsl
out
pusha
and
and
and
push
outsb
and
cmpsb
icebp
outsb
lods
mov
addb
sub
and
out
shrl
jne
mov
push
rcll
cli
pop
call
mov
aas
mov
ss
stos
mov
sahf
iret
mov
mov
decb
fadds
mov
scas
mov
add
cmp
jle
sub
sub
out
insl
aas
test
pop
std
roll
or
xor
cwtl
repz
sbb
push
add
aaa
sarl
jecxz
sbb
xor
push
ds
aas
in
sub
sbb
aaa
pop
add
mov
sbb
push
add
sub
out
xchg
ljmp
std
mov
loopne
sahf
push
adc
jae
pop
ret
mov
or
les
mov
push
or
push
ds
lret
js
scas
push
adc
sub
fiadds
mov
into
lea
pop
imul
psubsw
fimuls
sbb
arpl
cwtl
movsb
leave
xlat
inc
dec
or
adc
pop
jecxz
out
enter
adc
orb
dec
orb
mov
stos
ret
pushl
mov
sbb
xor
push
outsb
mov
das
push
xor
test
push
in
jecxz
sbb
mov
into
nop
xchg
leave
mov
jl
daa
dec
pusha
push
dec
xor
cmp
lcall
lds
push
sub
mov
out
aam
sub
pop
pop
fimuls
or
add
push
aaa
outsb
mov
push
xor
adc
pop
prefetch
jle
clc
scas
push
push
outsb
repnz
dec
imul
adc
jbe
call
rclb
adc
rcr
cltd
daa
cmp
ljmp
mov
xor
pop
cmpsb
outsl
and
xchg
movsb
xor
and
ss
jmp
into
cld
sub
add
repnz
jbe
cmp
aas
leave
repnz
or
push
scas
aaa
sbb
out
or
jl
inc
dec
outsb
data16
lcall
mov
jmp
push
sarb
xchg
loop
adc
pop
pop
pop
sbb
mov
xor
pushw
sub
push
pusha
jp
clc
lret
call
jne
scas
movsb
fstl
dec
dec
sbb
or
out
vunpckhps
ret
push
aaa
jne
push
incl
clc
decl
xchg
mov
aaa
mov
gs
addl
pop
std
sbb
stc
fs
dec
aas
inc
scas
jne
pop
lahf
xchg
push
outsb
add
dec
lods
in
cmp
decb
mov
lock
orb
or
fcompl
cli
cs
das
mov
mov
mov
jo
mov
loopne
xor
add
adc
inc
call
lahf
out
dec
outsb
sub
mov
xchg
rclb
repz
outsb
pop
xor
lock
lods
mov
dec
sub
cmp
add
clc
mov
mov
cld
sub
fdiv
imul
pop
shrb
movsb
sub
lcall
add
dec
xor
insl
test
or
sarl
xchg
mov
icebp
pushf
push
shrl
push
lock
mov
and
fbld
xor
or
pop
popa
std
ljmp
cs
cmc
sbb
lcall
dec
jg
icebp
pop
push
sahf
sub
pop
dec
ja,pn
lds
adc
sbb
push
inc
jle
xor
hlt
jl
out
xor
and
outsb
mov
sbb
or
pop
dec
pop
dec
sub
push
lcall
pop
aas
rorl
push
jbe
popf
cs
out
mov
nop
jle
dec
add
mov
clc
and
outsb
pop
mov
filds
lahf
out
xchg
xchg
xor
push
stos
jmp
dec
nop
lods
pop
add
fwait
pop
add
lods
push
ds
adc
inc
rolb
scas
or
adc
mov
ret
and
mov
jl
ds
push
mov
lret
enter
pop
jle
cmp
ljmp
cmpsl
sub
lretw
jmp
mov
pop
test
outsb
xor
test
push
dec
daa
jmp
fwait
in
xchg
cli
out
add
test
sahf
add
movsl
mov
mov
pop
ljmp
sbb
mov
adcb
dec
cld
int
jne
stos
mov
push
fimuls
add
add
cmp
cmpsb
mov
fimull
inc
ds
sbb
push
xchg
mov
js
xchg
dec
cld
dec
loopne
lcall
adc
push
in
inc
std
ret
cmp
addr16
cwtl
in
xchg
adc
cmpsb
dec
js
sbb
ret
push
push
fnsave
ds
out
cmpsb
repz
aas
insl
inc
and
or
sbb
cmc
pop
insb
mov
mov
fsincos
shll
das
lcall
sbb
cwtl
sahf
decl
and
pop
cmp
bound
scas
jle
pop
add
pop
dec
sbb
aas
rorb
mov
test
adc
dec
outsb
rcrb
cld
decl
sub
or
clc
mov
cmp
adc
or
decb
lcall
mov
add
xchg
sarl
outsl
mov
out
stc
outsb
adc
add
adc
add
mov
mov
les
shl
sub
adc
mov
movl
fldl
add
ficoml
loop
lahf
mov
cs
nop
sbbb
ss
mov
cs
cmpl
test
xchg
adc
mov
ret
testl
push
or
xchg
add
and
adc
out
aas
cwtl
into
div
push
fidivrl
stos
mov
popa
jns
sub
jo
cmpsb
push
aam
xchg
das
decb
aas
inc
fs
shll
test
sbb
fcomip
jg
test
stc
pop
adc
sub
sub
lret
sbb
xor
mov
xchg
ret
and
mov
jmp
aam
jne
dec
ret
into
icebp
ja
gs
xor
std
cmp
mov
push
das
xchg
popa
lds
ret
cld
jmp
mov
enter
adc
push
lret
incl
cmp
sub
mov
pop
in
ja
out
ljmp
push
in
mov
mov
xlat
sbb
push
sbb
lcall
jl
dec
mov
ss
jp
push
mov
jp
fwait
sub
sub
mov
daa
sub
out
lds
jle
fisttpl
daa
mov
push
jg
icebp
inc
adc
cmpsb
fidivl
mov
push
and
stos
outsb
arpl
sbb
rcrb
std
ljmp
fisttpll
pushf
stos
jle
icebp
movsl
lcall
cmp
std
cltd
push
gs
dec
fld
stos
test
outsb
ficoml
push
mov
or
mov
shll
mov
lret
pop
stos
add
aas
sbb
cmpsb
pop
ret
movsb
adc
jg
jecxz
adc
mov
and
imul
or
mov
mov
xchg
push
dec
pop
aaa
sub
mov
movsl
mov
mov
sahf
mov
imul
xchg
mov
mov
mov
mov
xchg
into
daa
loope
xor
jb
aam
or
pop
cmp
mov
decl
and
xchg
rol
jns
repnz
sbb
push
test
dec
clc
scas
gs
inc
ficoms
call
bound
push
lds
ja
sbb
adc
popa
aaa
aam
and
imul
imul
shrl
pop
cmpb
test
cs
icebp
ljmp
add
push
fnstcw
scas
sub
lret
shlb
ss
pop
ljmp
ljmp
daa
movsl
sbb
push
xchg
sbb
mov
xor
pop
outsl
mov
out
pop
and
dec
mov
aaa
jmp
pop
mov
add
ret
lret
out
incl
bound
xchg
sbb
lock
cwtl
xlat
adc
inc
out
mov
rcr
inc
or
ret
test
jg
push
popa
out
mov
push
push
js
cmpsb
aas
loope
jb
jo
clc
aam
int
nop
int3
hlt
ja
clc
mov
push
rclb
jg
sahf
rcrl
mov
xchg
decl
push
push
cmpsb
add
jl
pop
sbb
rorl
loop
pushl
push
mov
sub
mov
test
enter
pop
fidivrl
sahf
inc
in
imul
inc
jg
push
add
rolb
dec
mov
jmp
hlt
fbstp
xchg
flds
pop
dec
jecxz
das
push
fistpl
xchg
popf
adc
stos
fcomi
repz
mov
dec
das
or
sbbb
xchg
lahf
sub
mov
cmp
movsl
dec
es
sbb
das
jg
stos
push
in
lret
ljmp
add
daa
std
push
sub
dec
call
out
adc
sub
or
xor
dec
ds
scas
and
xchg
pop
jb
loopne
add
pop
fimull
aaa
and
push
iret
jmp
scas
cld
cmp
sub
incl
or
push
std
xchg
movsb
out
jl
xchg
lods
and
push
cmp
stos
push
mov
loop
in
add
and
add
rdtsc
mov
popf
pop
out
xor
lret
jb
andl
push
out
mov
es
xor
adc
outsl
lret
negb
pop
popf
lahf
sbb
add
cld
in
stc
adc
push
add
pop
arpl
hlt
outsb
ljmp
popa
ret
sub
dec
sbb
adc
or
add
les
out
loopne
fcoms
mov
mov
lock
add
mov
test
sbb
decl
sbb
pusha
pop
mov
mull
out
add
iret
add
pop
lcall
add
imul
aam
add
aas
push
fdivp
xor
dec
mov
lock
fdiv
and
dec
inc
xchg
dec
data16
out
insb
call
and
int
out
into
call
in
das
out
testl
jmp
arpl
push
loop
cltd
and
jge
inc
call
and
lods
cmp
push
rolb
movsb
xchg
sub
mov
add
lea
push
push
shll
shl
adc
mov
repz
aas
add
fwait
push
rcl
add
out
andb
cmpsb
or
cmpsb
das
jnp
int3
push
ljmp
hlt
push
sbb
enter
int
xor
xor
pushl
loopne
dec
jbe
or
fs
jo
mov
test
jle
ss
into
mov
cmp
lock
pop
call
mov
pop
aam
dec
lcall
incl
aas
lcall
in
loop
je
ret
cld
pop
inc
lcall
jecxz
xorb
out
aaa
jno
incb
adc
push
xchg
idivb
or
inc
loopne
sbb
lret
frstor
xchg
jle
jno
ret
push
jp
mov
lahf
rcl
dec
fidivrs
mov
xor
pop
push
fisttpl
flds
pop
mov
adc
xor
mov
push
rolb
cli
adc
hlt
xchg
mov
andb
mov
sbb
cld
rorb
and
fcomps
xchg
pop
xor
pop
hlt
lret
in
sbb
cmpb
pop
call
or
outsb
or
outsb
mov
xlat
pop
int3
add
push
pop
jns
out
push
fs
jmp
cs
test
add
inc
xchg
dec
int3
sub
add
mov
js,pn
lds
dec
in
push
xlat
and
adc
pop
push
add
add
call
dec
pop
decl
xor
hlt
xchg
cmp
ret
jp
mov
xor
data16
rclb
adc
enter
pop
out
jns
cld
scas
nop
insb
sahf
pop
sub
xor
jg
and
pop
push
ret
fimull
inc
push
loop
xbegin
adc
shlb
js
mov
add
jp
stc
or
mov
ljmp
add
idivl
in
cmp
jnp
int
xchg
scas
and
inc
cs
xorb
mov
dec
mov
and
out
andb
outsl
movsb
icebp
rorb
jmp
loope
dec
faddl
decb
outsb
or
into
test
cs
xchg
js
mov
ss
fldcw
scas
dec
rorl
loopne
push
insb
xor
lock
and
add
ds
xchg
mov
inc
mov
mov
jle
mov
add
adc
pop
adc
js
filds
call
ljmp
dec
mov
sub
and
int
and
aaa
jg
outsl
and
add
fcomip
std
or
mov
inc
push
or
or
shr
mov
xor
push
push
adc
outsl
adc
shrl
ret
fwait
int
pop
add
jmp
lods
aaa
testb
and
mov
sbb
sub
in
adc
subb
cmpsl
and
cmpb
adc
decl
mov
adc
mov
cld
mov
mov
loope
push
scas
mov
fildll
dec
leave
mov
cmc
aam
adc
mov
pushl
adc
movb
rorl
mov
sub
pushl
mov
stos
dec
into
or
mov
xchg
fnstcw
data16
gs
lret
lds
mov
or
mov
push
into
or
movl
lret
les
in
dec
push
or
and
or
mov
dec
pop
scas
mov
pushl
push
cs
movsl
lcall
rcrl
gs
and
add
cmpsb
dec
jge
lahf
xlat
push
sahf
mov
push
push
cmp
rcrb
add
inc
addr16
xchg
iret
mov
clc
jg
sbb
test
aas
rol
popl
stc
cs
lock
mov
mov
shrl
mov
push
ja
clc
das
jle
push
sbb
mov
jg
repnz
adc
mov
cmpsl
dec
xor
dec
decl
lea
cmp
or
xchg
mov
mov
fwait
call
insb
stc
mov
pop
rcrb
outsb
sbbl
enter
rcrl
push
mov
add
repz
out
outsl
loope
or
and
hlt
aas
pop
call
icebp
vmovaps
dec
xchg
divl
subb
lock
das
mov
fisubrs
aam
sahf
cld
add
or
test
cmp
push
mov
xor
add
sarl
filds
mov
fisubrs
mov
adc
mov
or
pusha
fwait
sub
in
hlt
ficompl
sub
rcrb
dec
std
ja
xor
mov
pop
mov
sbb
push
loope
dec
sarb
cmpsb
incb
mov
stos
icebp
sbb
aam
scas
es
jg
pop
das
xchg
sbb
push
jp
adc
sub
dec
je
inc
les
xor
push
outsl
jne
xor
mov
icebp
out
stc
dec
fadds
scas
push
add
xchg
mov
or
into
scas
incb
pop
push
pop
xor
or
mov
aas
dec
pusha
and
jl
lock
scas
push
test
cwtl
scas
jle
int
pop
add
das
xchg
decb
test
mov
daa
arpl
jecxz
add
jg
pop
sbb
jge
popf
cs
xor
sbb
ficompl
cmp
cmp
call
lcall
or
lahf
in
sbb
mov
das
test
mov
aaa
cld
out
sub
mov
pop
add
mov
leave
hlt
outsl
and
mov
pushfw
lahf
jmp
or
jo
ds
mov
dec
adc
je
cwtl
data16
jo
loopne
pushl
aaa
mov
in
aas
mov
test
cmp
repz
jecxz
mov
out
sub
mov
repz
xchg
mov
xchg
rorl
incl
ret
fisubrs
fists
fisttps
sahf
cld
stos
lock
cmp
add
adc
mov
ds
push
loopne
mov
das
nop
inc
mov
scas
mov
inc
jg
aaa
loopne
mov
sahf
pop
xchg
adcl
shlb
es
sti
lea
inc
sbb
in
xchg
pushf
stos
ds
or
fwait
fwait
call
cmp
divl
mov
mov
or
imul
push
and
ret
mov
sub
add
pop
sub
cltd
mov
subb
cltd
cwtl
or
xchg
and
cld
push
into
add
outsb
push
loop
mov
adc
rolb
ret
cmp
dec
sub
mov
push
sar
decl
push
sahf
fidivrs
scas
inc
xchg
push
adc
ret
fists
xor
push
pop
stos
in
jno
lea
scas
xor
adc
pop
fwait
xlat
les
es
jg
or
dec
push
mov
mov
jmp
dec
push
cmp
inc
in
rcr
or
cltd
sti
lock
test
push
fbld
push
sbb
cmp
clc
call
insb
xorb
loope
cmp
push
adc
lcall
rclb
add
push
insl
or
test
pop
sub
outsl
pop
es
negb
or
and
jmp
std
xor
push
adc
adc
loopne
mov
stos
sbb
aaa
enter
mov
jl
aas
jmp
jns
insb
sbb
sub
mov
in
add
mov
in
stos
cmp
fsubs
dec
adc
or
push
ss
add
shl
in
repnz
and
rorl
adc
nop
mov
fwait
push
mov
sub
or
ds
push
addb
push
sti
sbb
pop
adc
push
clc
call
stc
push
lahf
rcl
or
sbb
sub
ud0
xor
xor
sub
mov
inc
sub
filds
xchg
cli
inc
and
lds
dec
sbb
call
ret
cmp
pop
sub
icebp
sahf
push
cwtl
dec
movsl
xor
inc
pop
fnsave
les
pop
lock
adc
mov
jg
or
icebp
mov
pop
add
decl
arpl
outsb
repz
js
std
push
or
xlat
pop
cmpsb
jl
add
testb
rolb
add
icebp
cld
or
incl
pop
rorb
sahf
mov
mov
aad
pop
sbb
cmpsl
xor
hlt
push
lcall
jle
push
cmpsb
cmp
mov
jmp
push
fcmovu
cld
fistps
and
imul
in
sub
pop
cmp
decl
mov
cmp
dec
adc
jmp
xor
pop
sbb
lcall
jp
mov
dec
aas
fs
incl
je
fsubrp
jle
inc
adc
fldenv
outsb
mov
mov
sbb
cld
inc
jmpw
hlt
lcall
pop
int3
aas
pop
aaa
inc
fdivrp
sub
fisttps
jecxz
cmpsl
xor
sub
xchg
jcxz
dec
cmp
jmp
subb
xor
filds
push
push
loopne
mov
fs
add
mov
mov
ret
mov
ret
sbb
fiadds
popf
enter
or
ljmp
cmp
or
icebp
mov
stc
test
push
aas
cmc
jmp
cld
add
mov
xchg
int
xchg
cmp
orb
out
int
push
inc
pop
inc
cmp
test
and
dec
outsl
clc
call
loope
jb
jae
cli
jle
repz
sub
fldl
inc
sbb
inc
std
cs
lahf
mov
add
lea
cmp
or
jmp
mov
push
sub
adc
sbb
std
or
daa
iret
xchg
test
jno
sub
test
cmp
jle
scas
pop
jns,pt
xor
jo
lock
jne
or
popa
nop
sarb
mov
cmp
adc
mov
icebp
dec
daa
sbb
jg
lock
mov
mov
or
les
inc
nop
lcall
mov
clc
sub
cld
movsw
rcll
out
in
mov
push
mov
push
mov
pop
fsubl
mov
push
sbb
add
ss
pushf
adc
push
aas
and
xchg
psubusb
jmp
andl
out
incl
mov
mov
pop
cmp
loopne
sub
sbb
loope
nop
in
iret
sahf
and
jae
jg
int3
sub
fldcw
xchg
dec
xor
pusha
sub
add
call
mov
jo
outsl
cltd
daa
out
sti
div
pop
fdivs
xor
jmp
and
mov
cmc
orb
pop
mov
mov
hlt
aaa
add
test
sahf
add
nop
rol
aam
jle
repnz
fidivl
aas
xchg
push
add
sub
jg
or
lods
gs
jp
push
jmp
scas
add
das
inc
sahf
mov
adc
dec
mov
push
cs
sbb
aaa
into
and
mov
stc
jnp
mov
imul
sbb
or
filds
cmpsl
inc
pop
jle
ds
sar
clc
sbb
imul
or
fadds
std
xor
enter
mov
mov
decl
stos
and
filds
push
xchg
in
and
push
inc
sbb
incl
es
or
les
sbb
into
adc
mov
xor
xor
sbb
mov
push
ret
inc
rcll
adc
inc
add
fldl
mov
pusha
add
xor
mov
mov
adc
cmp
sbb
xlat
decl
sbb
mov
decl
into
xchg
add
and
adc
jmp
mov
mov
mov
jg
hlt
outsl
pop
and
inc
mov
test
dec
add
decl
aas
dec
cmp
pop
fsubrl
pop
mov
cmp
mov
cmpsb
sub
jge
ds
push
imul
jg
cmpb
in
stc
push
cld
mov
xor
repz
popf
adc
pushl
imul
xchg
cmp
bound
in
adc
ret
repnz
cmc
loope
and
dec
clc
pushl
ss
pop
out
fucomi
addl
daa
fisubs
jnp
ljmp
call
cltd
gs
cwtl
test
iret
pop
dec
xor
cmp
cltd
push
xchg
xchg
inc
xchg
push
enter
loop
incl
sbb
pop
push
push
mov
ret
pop
cmc
jmp
push
cmp
push
and
jo
imul
movsl
scas
dec
in
cld
lret
fcompl
push
test
rcll
fisttpll
outsl
sti
nop
mov
sub
sub
sub
inc
pop
add
sbb
pop
dec
pop
fidivs
loop
repz
pop
mov
ljmp
out
mov
xlat
mov
rolb
add
xchg
out
outsl
arpl
add
add
lods
bound
and
movsl
icebp
testl
cmp
shlb
jns
in
push
cli
ljmp
push
adc
test
sbb
loopne
or
mov
or
adc
aas
cs
push
or
push
sbb
xor
xchg
clc
mov
sub
xchg
and
into
ja
sub
pop
fbld
dec
adc
adc
ds
mov
dec
pop
xchg
std
or
pushl
mov
inc
and
sahf
or
movaps
cmp
mov
lock
arpl
int3
es
jmp
pop
mov
mov
xchg
and
fadds
sbb
call
cmpsl
scas
jl
adc
fdivp
cmp
pop
jmp
xor
fidivl
pop
fwait
jecxz
das
jle
xor
dec
ljmp
aas
out
mov
sbb
or
in
push
or
popf
mov
js
xor
add
xor
clc
stos
pop
fbld
pusha
test
sub
ds
jnp
aaa
mov
xor
pushf
jmp
push
ds
into
fwait
sbb
arpl
mov
and
sub
movsb
jmp
dec
into
jle
mov
daa
cmp
inc
mov
cmp
adc
push
and
test
or
and
lcall
inc
add
popf
movsb
pusha
les
inc
push
jg
iret
adc
adc
xor
fwait
lods
je
or
pop
jg
pop
push
sbb
sub
mov
inc
pop
adc
sbb
mov
out
mov
adc
push
movsl
mov
mov
jns
jo
daa
jg
cmp
adc
lret
testb
fdivrp
dec
lcall
cmp
sbb
cwtl
xchg
push
das
cmp
sub
gs
cmc
or
in
incb
mov
cmp
mov
aas
mov
cmp
mull
xchg
shrl
addl
push
push
push
into
out
pop
and
fstpt
fs
sub
dec
pop
rorb
mov
aam
mov
mov
inc
ss
sbb
mov
ljmp
xorl
into
pop
sub
inc
pop
cld
decl
sahf
sub
cmp
push
pop
sahf
sbb
lahf
push
and
insb
adc
das
and
int3
cmp
adc
inc
xchg
fnstenv
mov
push
dec
xor
xchg
mov
or
incl
inc
jnp
pop
mov
dec
or
imul
adc
les
cmp
sub
sbb
adc
sarl
dec
xchg
mov
adcb
cmp
or
in
fs
psubb
decl
pop
out
xchg
sbb
ret
shlb
das
dec
pop
and
sbb
cmpsb
aas
push
xchg
mov
xchg
pop
paddd
aas
cli
call
mov
popa
ret
scas
xchg
sub
stc
sub
jb
movsb
mov
pushl
lds
sbb
cmc
mov
movl
aas
add
repz
add
pushf
pop
aad
jb
mov
jmp
test
or
mov
addl
pop
mov
lods
insb
pop
sub
dec
outsb
cmpsb
ret
clc
cmp
adc
das
ss
rcrb
push
mov
cs
xor
adc
cmp
cltd
adc
outsl
inc
and
cmp
mov
pop
loop
icebp
pushl
jmp
add
cli
jb
inc
cmp
ljmp
cld
pop
mov
cmp
repz
and
hlt
movl
loopne
jecxz
repnz
sbb
lret
or
or
lcall
jae
xor
mov
clc
aas
lods
jo
mov
xchg
or
adc
btc
mov
mov
mov
xchg
mov
imull
sub
push
add
jb
test
int3
stos
jecxz
addr16
cmpsb
push
setl
aas
cli
cmpsb
out
lret
adc
pop
sub
mov
lds
and
rcrb
cltd
adc
mov
dec
push
push
pop
addr16
inc
idivb
push
ljmp
jmp
sbb
pushf
mov
les
bound
daa
fistl
xor
jbe
setg
dec
sbb
adc
sbb
xchg
outsb
xchg
movsb
add
xchg
int
cli
cmp
movsb
faddl
and
or
add
aas
cltd
push
arpl
sarl
dec
fldt
movsl
rclb
test
mov
js
and
outsl
push
jns
or
mov
fdivp
cmp
mov
rorb
pop
jbe
or
pushf
dec
xlat
daa
pop
sbb
jg
iret
xor
xor
and
pusha
mov
cmp
dec
sbb
loop
push
idivl
aas
mov
sub
adc
sbb
decl
es
cmp
test
andl
fcomps
icebp
push
aad
cmp
cmpb
jle
in
or
loop
adc
cmp
jle
mov
scas
xchg
push
push
mov
sbb
mov
sahf
icebp
sub
lods
inc
fisttps
sbb
mov
pusha
mov
aaa
add
adc
incl
mov
outsb
or
cli
daa
into
movsl
mov
mov
retw
cmpsb
lds
mov
jbe
cmp
dec
inc
clc
jg
dec
adc
add
pop
add
push
jg
fbstp
jo
adc
mov
cs
jl
mov
shll
push
cmp
sbb
sarb
aas
pop
adc
jg
add
mov
rcrb
inc
push
sbb
nop
mov
add
mov
popa
adc
or
pusha
adc
bound
call
pusha
sub
lock
adc
sbb
inc
sbb
repz
pushl
push
and
pslld
push
or
mov
sub
in
jae
stos
mov
and
fiadds
aas
pop
add
mov
mov
mov
mov
pusha
jb
cmp
xchg
jmp
jmp
jl
adc
sbb
sbb
int3
inc
pop
stc
lea
andb
push
xor
cmp
or
std
jg
pushl
adcl
fbld
mov
gs
ja
lcall
ficomps
int
xor
aad
cmp
sub
sub
jmp
pop
sbb
pop
dec
pop
sahf
std
or
dec
add
std
dec
sub
stos
sbb
cld
or
leave
inc
das
sbb
fistpl
cltd
push
xor
lcall
pop
and
popf
inc
jmp
push
sbb
mov
push
and
pop
mov
ds
jp
mov
lcall
mov
adc
or
sahf
aas
lock
jg
movsl
test
adc
mov
fwait
hlt
pop
sub
pop
and
decl
xchg
sbb
popf
nop
popa
mov
xor
xlat
cmpsl
add
ds
stos
jg
loope
cmp
pop
and
or
in
mov
inc
sbb
or
jmp
aaa
adc
test
push
xlat
dec
pop
pop
jns
and
sbb
mov
imul
sub
fwait
lds
mov
addr16
aad
pop
xor
sub
lea
fildll
jle
pop
pop
xor
mov
adc
in
or
outsb
hlt
scas
rcrl
nop
jl
dec
call
scas
sub
lcall
ds
popf
sbb
scas
add
xchg
push
hlt
mov
lahf
dec
add
and
and
xchg
xlat
sbb
dec
xor
add
nop
cs
repz
cli
cmp
fcoml
test
xchg
mov
rolb
outsb
push
jbe
cmpsb
jg
push
cmp
adc
and
or
mov
icebp
jmp
cmpsb
jns
xor
or
push
std
or
push
add
cmp
inc
repnz
movsl
mov
adc
das
sub
call
daa
dec
add
ficomps
mov
imul
xchg
add
xor
pop
adc
cmpsb
decl
movsl
adc
int3
fs
and
jg
add
pop
incl
stc
incl
sub
mov
popf
scas
and
je
dec
loope
ljmp
rolb
jl
adc
sahf
mov
incb
and
fidivs
cmpsl
lock
pop
xchg
clc
push
jo,pn
fildll
xor
sbb
push
adc
cs
pop
pop
adc
mov
add
icebp
xor
stos
push
sbb
les
lcall
movsb
dec
aad
inc
mov
xor
adc
sub
inc
adc
mov
ljmp
js
lahf
pop
sbb
mov
sub
inc
add
fdivrl
ljmp
clc
add
sbb
lahf
in
fildll
and
or
fdivp
enter
add
bndstx
sets
jle
or
pop
inc
sub
push
sub
and
mov
rcll
and
xor
nop
mov
jmp
xchg
sub
push
incl
imul
add
push
xlat
mov
icebp
and
scas
imull
stos
mov
arpl
lcall
rep
lock
cwtl
mov
std
ret
xchg
xor
mov
jmp
cwtl
push
push
das
and
insb
out
dec
cmc
sahf
jmp
cwtl
daa
jmp
jmp
xchg
cld
cmpsl
mov
scas
jge
cld
lcall
cmpsb
in
aaa
stos
addl
add
pushl
or
or
or
push
rcrb
adc
lahf
cli
das
and
pop
pop
movsl
shlb
push
jae
adc
push
cmp
decl
lcall
les
pop
outsl
adc
iret
scas
push
aad
mov
pop
add
das
cli
das
ror
cmp
or
mov
cmp
lock
sub
stc
adc
out
scas
cmp
int3
cmpsl
jbe
or
les
pop
mov
xchg
jns
aaa
jbe
lcall
sarb
push
fsubrp
cmp
push
btc
jg
jns,pt
adc
pop
jle
out
xor
inc
or
out
popa
push
rol
icebp
dec
pop
or
pop
inc
jmp
daa
test
inc
inc
and
sub
incl
mov
and
inc
rolb
stc
push
push
and
adc
repnz
or
mov
push
cmp
cmpsl
into
pop
and
arpl
cmpb
jle
cld
decb
aaa
arpl
imul
pop
xchg
and
or
les
fcomip
dec
mov
cmpsb
jo
mov
lcall
jg
mov
xor
test
std
inc
mov
sub
jmp
mov
sub
call
mov
lret
sahf
or
xchg
lret
es
push
sub
fnstsw
scas
add
shl
lods
cli
xor
adc
mov
xchg
ljmp
adc
into
cs
arpl
outsl
cmpb
fnstcw
push
je
int3
xor
mov
xlat
scas
test
adc
shlb
and
into
scas
mov
in
xlat
inc
mov
mov
idivb
xor
std
cltd
jbe
stos
fs
pushf
test
fldl
or
mov
cld
xchg
adc
mov
pop
sub
cmp
ja
clc
add
xor
movsl
dec
inc
mov
ja,pn
pop
cmp
and
ljmp
adc
adc
pop
loope
xchg
das
into
or
decl
rcrb
stc
add
pop
hlt
adc
loopne
pusha
insb
push
idivb
lods
movsl
lock
adc
jge
popf
ficomps
ss
insl
loop
loop
jmp
int
dec
cmp
add
inc
js
shrl
push
push
pop
test
outsb
out
sub
lcall
outsl
cmp
xchg
pop
jl
pushf
sbb
shlb
ljmp
fstl
outsb
int3
dec
mov
rcll
ljmp
dec
fnsave
icebp
out
iret
popa
jmp
fucom
std
cmp
rol
incl
iret
xchg
cli
in
in
ret
jnp
jg
aas
call
mov
fdivs
call
test
mov
rcr
std
push
jne
jb
sub
leave
dec
fwait
lahf
cli
call
jbe
int
mov
cld
add
mov
sub
enter
mov
in
les
or
jno
sub
lcall
dec
mov
mov
rcl
andb
js
loop
and
scas
dec
lock
stc
addr16
nop
ljmp
imull
push
xor
std
jns
in
lock
sub
inc
loop
push
loop
push
jae
inc
int3
popa
pusha
adc
mov
test
jns
sub
push
or
inc
mov
ss
or
cld
pop
xchg
mov
adc
fisubs
pushf
outsl
icebp
jle
fisttps
aaa
or
adc
add
fisubs
into
lahf
mov
jmp
push
ljmp
adc
cmpsl
sub
mov
repz
aam
in
jecxz
orb
ljmp
mov
push
push
xchg
lcall
fdivp
or
jg
scas
orl
adc
pop
xchg
dec
out
fnsave
push
loope
dec
pop
hlt
pop
and
fiaddl
push
ret
push
adc
cmpsb
mov
repnz
movsl
aam
icebp
pusha
add
add
mov
pop
and
jecxz
dec
es
pop
jmp
jg
repz
das
xchg
adc
push
out
mov
mov
icebp
arpl
xchg
fisubs
mov
mov
pop
mov
pop
push
rorl
or
ljmp
aam
or
jns
lock
xchg
out
into
out
xlat
jg
pop
mov
sub
movsl
aas
cmp
xchg
xor
test
add
in
je
rorl
lcall
jge
sub
pop
push
test
and
dec
das
testb
mov
dec
inc
mov
imul
fidivs
dec
sarl
add
adc
sahf
or
push
pop
cmc
outsl
outsb
sub
loop
jo,pt
mov
mov
jg
and
das
es
and
push
cld
mov
ja
sbb
mov
sbbb
mov
dec
sbb
adc
dec
decl
mov
fisubrs
aas
pushf
push
inc
rorb
adc
xchg
cmp
loop
in
loopne
icebp
into
imul
in
push
xchg
xor
pop
lahf
and
mov
jo
scas
fwait
mov
cs
int3
push
or
sti
rcl
jle
mov
pop
lods
fidivs
mov
cld
xchg
sub
cmp
int
es
icebp
sahf
lock
xchg
loop
lock
cmp
iret
cmp
scas
adc
vmulpd
cld
int3
pop
aam
ficomps
out
jp
std
mov
and
shll
out
jb
out
aam
xchg
sub
icebp
mov
outsl
mov
pop
cmp
test
xor
lods
sub
adc
fucomi
lahf
hlt
mov
inc
std
incl
movsb
cli
scas
pop
shlb
daa
in
mul
shll
fistps
push
jp
sub
cli
es
out
add
mov
call
shrb
aam
sti
test
push
pop
cltd
mov
sub
icebp
ja
add
int3
loop
cmp
push
push
jae
ss
scas
or
mov
repnz
imul
sahf
adc
inc
fidivrs
std
loope
fs
fisttps
jle
jbe
std
xor
ja
cmp
stc
sub
cmp
icebp
ljmp
inc
sub
std
cmpsl
into
xchg
sti
sub
cli
mov
push
shrl
dec
push
adcb
dec
sbb
sbb
fbld
fists
aam
or
cs
inc
and
fcmovnb
mov
outsl
lock
mov
mov
add
lcall
adc
cld
ljmp
push
xchg
ret
incl
call
inc
xlat
push
out
rcrb
add
in
decb
cli
jno
lret
mov
lods
push
repnz
lcall
arpl
add
fists
std
ljmp
les
dec
aas
push
add
xor
and
and
into
loope
mov
fdiv
dec
jbe
sub
xabort
out
shl
ljmp
out
or
ds
jns
mov
push
repz
in
mov
movsl
lock
adc
imul
aaa
cld
push
lods
adc
or
int3
cli
sub
push
push
push
lret
testl
mov
xor
mov
mov
push
or
and
fs
and
sub
sbbb
xchg
cmp
sti
call
repz
add
in
or
xchg
or
adc
scas
fidivrs
or
iret
adc
sbb
push
pop
xchg
outsl
mov
dec
movl
cld
adc
xorl
xor
gs
push
aaa
sbb
or
imull
or
sarl
cmp
repz
pop
or
push
loope
jp
sub
rcr
sub
or
mov
add
sbb
add
ljmp
cmp
or
das
xor
adc
mov
add
and
das
cli
in
ficoms
xchg
and
cs
or
jecxz
aam
aam
rorl
icebp
mov
dec
fbstp
in
into
mov
es
inc
enter
in
fisttpll
icebp
divb
cs
pop
push
add
dec
add
cmpl
and
loopne
loop
push
clc
xchg
pop
sub
xor
pop
mov
jmp
or
xor
jge
test
add
ud0
pop
add
es
jmp
cmp
adc
push
push
xor
xor
push
sub
repz
jo
aas
aad
fiadds
shll
movsl
jo
out
adc
sub
or
or
aas
jmp
stos
test
mov
das
loope
repnz
lea
out
cs
dec
push
ljmp
fwait
mov
vcvttss2si
cmp
idivb
mov
fistps
shlb
rcll
ret
jmp
mov
repnz
xchg
and
daa
shll
inc
aaa
adc
jg
clc
insl
insb
das
imulb
enter
sahf
xor
xorl
and
jle
adc
push
or
fst
ffreep
sbb
cs
and
adc
ret
and
xchg
xchg
adc
push
std
pop
pushf
cli
push
int3
lret
or
lock
and
add
adc
je
push
roll
std
mov
jmp
dec
push
aad
sub
cmp
imul
cwtl
call
rcrb
jg
push
fcompl
jmp
sub
or
into
mov
mov
or
lret
hlt
mov
test
into
into
fdivrl
shr
or
lahf
aas
jge
jle
scas
xor
in
and
add
pop
mov
cmp
inc
adc
push
lret
out
mov
das
add
cld
and
in
push
popf
cmp
sub
and
ds
mov
sbb
adc
xor
cli
push
pushf
test
pop
jecxz
sbb
xor
and
es
icebp
nop
sbb
pop
mov
into
pop
sarb
pop
mov
sbb
jb
mov
lock
jp
pop
pop
adc
hlt
dec
sub
add
out
push
push
mov
nop
xor
cmpsb
mov
dec
mov
sbb
mov
mov
sub
pushl
push
sbb
popa
loope
jmp
add
mov
pop
sbb
adc
or
fistpll
xlat
mov
jmp
dec
sbbb
add
fwait
les
lock
cmpsl
push
inc
icebp
jmp
mov
adc
adc
test
rol
or
rolb
mov
mov
mov
push
daa
jnp
xchg
push
popf
pop
je
inc
add
imul
xchg
call
lds
mov
jg,pn
shrd
dec
inc
add
call
sub
push
setb
cld
add
sub
push
add
adc
lcall
shrb
cmp
push
popa
icebp
repz
cmp
stos
adc
mov
adc
cmp
mov
fwait
pop
cs
cmpsb
push
mov
scas
sub
cmp
cmpsb
lahf
fisubrl
fwait
push
pop
or
add
stc
lcall
xchg
and
movsb
cs
loopne
sahf
mov
sbb
imul
orb
cmp
push
push
push
xor
inc
sub
inc
cli
lods
out
cli
stos
push
cmpsb
xor
or
cltd
cmp
lods
filds
inc
fidivrs
cwtl
xor
outsb
into
pop
cld
adc
enter
push
push
les
fdivr
aas
rorl
mov
mov
dec
lock
loop
add
jmp
cmpsl
pop
sub
mov
repnz
add
or
pop
xchg
xor
stc
fdivr
inc
js
mov
jb
xor
mov
stos
push
and
iret
pushf
mov
call
ljmp
inc
andl
push
or
pop
inc
loope
sar
push
mov
push
jne
dec
out
out
ror
inc
jp
std
daa
jo
stos
das
pop
mov
incb
cs
and
sar
rcr
add
push
insl
pop
xchg
jmp
and
imull
mov
push
jns
testb
or
arpl
mov
pop
fnstcw
add
cmp
adc
fsubr
or
or
adc
mov
cmp
mov
hlt
loopne,pt
jl
aad
jmp
xchg
sub
and
jmp
call
jle
xchg
adc
ds
ljmp
aas
pop
das
sub
fidivrl
mov
or
add
lock
xorps
cmp
shrb
xor
scas
insb
das
adc
cli
xlat
sub
add
cmp
je
fs
loop
xlat
push
dec
and
fwait
inc
cld
cmp
add
push
test
or
jae
xchg
arpl
ljmp
sbb
adc
sub
outsl
push
cmp
pusha
jns
jl
cwtl
adc
imul
out
fsubrl
sub
lret
add
push
and
pop
rcrb
add
fisttps
add
cmc
push
popf
fiadds
sbb
ljmp
dec
jle
rcl
mov
cmp
and
add
xlat
das
and
sahf
subl
or
pushf
cmp
ds
aas
pop
push
jbe
and
inc
cmc
add
add
into
pushf
xchg
mov
sbb
xchg
jne
sub
movsl
push
sar
imul
jmp
add
cli
pushl
out
add
imul
lods
xchg
or
aad
mov
pusha
cmc
or
int
sub
pop
int
add
push
push
or
sbb
xor
clc
xchg
mov
add
cs
pushf
cmp
mov
out
cmp
add
lock
call
mov
fs
rclb
push
xchg
std
das
add
mov
rcrl
cmp
or
push
daa
pop
fdivp
stos
sub
xor
push
push
mov
out
stos
outsb
sbb
pmulhuw
popa
pop
sub
jmp
and
enter
or
mov
ret
jg
and
sahf
iret
or
negl
iret
shl
or
push
sbb
std
pop
adc
incl
fnsave
lret
cmc
and
shrl
mov
fisubrs
dec
clc
dec
jg
dec
fidivs
lret
int3
adc
rol
or
or
dec
cltd
mov
sbb
push
xchg
or
ret
dec
repnz
xchg
ss
out
inc
fists
xlat
ljmp
js
inc
mov
xchg
pop
in
loop
test
mov
mov
hlt
pop
std
add
dec
divl
in
pop
add
dec
scas
cld
ja
jp
pop
or
das
int3
rolb
adc
jg
fwait
mov
xlat
push
in
adc
test
mov
pop
lock
clc
dec
or
mov
cld
cld
test
dec
out
cs
and
daa
dec
dec
clc
cmpsl
lcall
push
lds
sub
inc
divl
xor
cmp
xchg
das
jle
pushf
pop
insl
sbb
jmp
add
jo
cmp
and
inc
push
sbb
dec
outsb
sub
inc
sub
add
mov
add
push
cld
orl
in
fdivs
dec
mov
outsl
xchg
hlt
cmp
pop
pop
mov
jle
cmp
rcl
mov
sub
movsl
test
pop
mov
mov
ret
cmp
out
ljmp
test
outsb
adc
hlt
jne
ds
cmpl
iret
shrb
out
fnstsw
inc
mull
jmp
cmpsb
scas
rcrb
jl
adc
sub
adc
add
out
icebp
outsl
sbb
roll
sub
aas
rorl
xor
lock
clc
hlt
addr16
cmp
push
pop
mov
push
cmp
in
cmp
xor
add
jg
and
cli
out
daa
test
les
sbb
jmp
movsb
sub
sahf
and
xchg
xchg
add
pop
mov
in
jo
sbb
incl
scas
sbb
dec
add
in
fidivrs
pop
subl
sbb
scas
and
cmp
mov
mov
shr
dec
jg
adc
add
or
dec
movsb
jno
push
push
incl
loopne
add
int3
mov
rep
cli
hlt
add
sbbl
mov
sub
mov
dec
xchg
mov
cmp
pslld
es
incl
push
shll
repz
or
push
pop
ds
pop
or
clc
pop
jg
sbb
add
lods
mov
daa
cli
inc
or
sbb
dec
push
sahf
cmpsb
cli
cmp
jmp
repz
into
fldenv
or
pop
das
dec
xchg
or
or
lock
inc
jle
mov
shlb
xchg
jbe
pop
lahf
add
push
mov
in
mov
lods
cli
in
imul
stc
sarb
nop
cli
call
xchg
lock
lret
int3
and
mov
mov
addr16
ss
or
xchg
in
mov
sub
dec
into
test
hlt
push
mov
psubsw
test
adc
into
mov
pop
roll
sar
sbb
popa
mov
sub
lret
cltd
jg
or
sub
push
jecxz
push
outsl
imul
jae
out
and
mov
lea
add
lcall
or
ja,pt
mov
add
xor
icebp
decl
push
sahf
sub
insb
dec
loopne
or
and
incb
in
pop
jno
mov
or
sub
sbb
push
jecxz
cld
jg
arpl
push
rcrl
mov
loopne
ds
icebp
push
push
mov
adc
push
adc
pushf
sbb
repnz
xchg
aas
fprem
imul
dec
or
xorl
add
insb
lds
test
add
jle
es
sbb
jmp
lock
add
sbb
mov
inc
pop
pusha
adc
mov
into
loopne
pop
or
orl
loop
fidivl
jns
mov
mov
rcll
fmull
adc
out
or
pop
and
jge
imul
shll
jns
data16
es
xor
xchg
dec
dec
xchg
inc
loopne
out
mov
jmp
xor
stos
push
dec
push
add
fs
cmp
fxch
dec
or
jmp
arpl
mov
fstpt
pushf
les
decl
cwtl
mov
inc
and
mov
mov
insb
fcoml
das
pop
xchg
mov
ljmp
loopne
mov
mov
cli
pop
movsl
incl
scas
bound
arpl
fwait
cli
and
cmp
and
inc
sbb
adc
mov
push
push
insb
clc
mov
ljmp
test
and
jbe
cli
shll
lods
push
mov
das
in
sbb
push
cld
and
mov
and
jl
pop
je
adc
sub
scas
cmpsb
inc
cltd
or
cmp
cs
incl
push
fstpl
cmp
lods
int3
mov
aaa
mov
adc
aas
fimuls
mov
jle
insb
mov
je
notb
lods
lods
clc
clc
pusha
jp
cmp
dec
add
out
pushf
mov
cmp
xor
and
movsb
cwtl
add
test
fbld
xlat
xor
sub
js
or
call
icebp
inc
lods
cltd
adc
fbstp
fwait
mov
outsb
clc
pop
dec
xchg
or
mov
jmp
cwtl
mov
getsec
nop
mul
jns
mov
lcall
mov
sysenter
test
jns
lret
fidivs
call
mov
loope
cli
leave
inc
ds
jecxz
call
lock
and
test
jmp
mov
ficompl
shlb
arpl
add
xor
fcoms
fs
test
pushl
daa
aas
and
int
and
ficompl
jo
pop
enter
dec
or
xor
mov
mov
mov
dec
dec
fwait
sbb
shr
sbb
fdivr
lcall
arpl
pop
jecxz
popa
or
pop
or
and
jl
ret
dec
decl
mov
mov
into
lret
stc
xor
test
aaa
aam
aad
pop
push
fsubl
ljmp
xchg
push
pushf
das
andb
cmp
mov
sarl
rcrl
mov
sbb
and
out
xor
loopne,pt
jl
ss
cs
and
and
push
jbe
push
clc
cwtl
and
cs
xor
jmp
outsb
jl
test
pusha
xor
or
scas
lcall
inc
orb
repz
nop
in
jle
mov
cmpsl
das
dec
jmp
pop
outsb
mov
stc
incb
mov
cld
dec
add
jge
jg
fxam
into
pop
jno
inc
icebp
sbbb
movsb
xchg
push
adc
xchg
cmpl
xchg
aad
cmp
xchg
pop
xor
arpl
ss
xchg
cmp
jmp
insl
and
cmp
cld
mov
loop
dec
jg
jg
call
mov
dec
cwtl
insb
sub
and
jne
popf
cmp
ss
adc
jg
ds
scas
lea
add
add
mov
pop
mov
push
loop
sbbb
push
mov
adc
xchg
out
push
dec
cmpxchg
sar
repz
jg
je
push
push
push
hlt
adc
dec
test
mov
fdivrl
nop
jecxz
xchg
cmc
mov
loope
insb
xor
add
outsb
add
mov
arpl
ret
jno
or
pop
jg
out
sbb
lods
call
or
adc
push
pop
sahf
or
mov
add
jae
cld
add
mov
xchg
lock
fnsave
sub
mov
lds
cmp
test
ljmp
jle
movsb
adcb
push
call
mov
or
mov
xor
push
daa
xor
jnp
xchg
das
jecxz
les
pop
jl
cwtl
pop
sbb
adc
jl
or
stos
test
incl
add
lock
xchg
xor
mov
cmp
sub
fisttps
mov
jmp
ljmp
inc
outsb
or
ret
pop
and
cmp
push
jbe
inc
xor
xchg
mov
decl
scas
push
push
mov
push
insb
cmpsb
adc
ljmp
xchg
push
mov
inc
call
lcall
sbb
dec
insb
adc
dec
mov
push
fwait
rorb
mov
dec
jg
xchg
insl
cltd
insl
test
scas
or
add
inc
mov
outsb
jo
pop
outsb
jle
mov
sub
add
aaa
repnz
pop
into
or
jno
test
int
outsl
data16
push
or
sbb
test
xor
ds
cmp
adc
and
dec
mov
xor
fldl
sub
lcall
stos
into
int3
jo
pop
aaa
push
mov
nop
divl
out
cmpsl
adc
and
add
movsl
insb
movsl
jge
icebp
jg
pop
sub
cltd
test
lods
idivl
push
std
sbb
loop
push
ljmp
and
das
pop
movsl
jae
je
insl
pop
sub
das
movsb
mov
lods
scas
inc
or
lods
out
aas
jmp
xchg
push
jae
notb
mov
mov
cld
decl
or
icebp
mov
scas
insl
cmp
and
out
dec
gs
sub
lods
imul
xlat
roll
in
adc
add
adc
push
cmp
test
pop
clc
pop
mull
xchg
mov
fistpll
sbb
into
and
sub
hlt
mov
cmp
push
and
rclb
dec
mov
adc
inc
sub
test
cs
in
mov
mov
sub
dec
xchg
dec
cmp
movb
test
aaa
std
das
jl
aaa
into
sub
pusha
cld
sub
jae
push
jl
outsb
sbb
push
sub
stos
mov
add
and
cmpsl
repnz
ljmp
notl
push
mov
adc
lods
popf
pop
push
outsl
test
clc
aas
inc
inc
enter
or
insb
daa
add
adc
jg
lock
mov
jnp
fwait
xchg
pop
adc
dec
xorl
mov
mov
mov
js
mov
push
push
jae
test
jg
into
add
imul
cmpsl
fnstenv
imull
xor
mov
scas
mov
and
sti
cmp
dec
into
leave
jae
loop
inc
repz
mov
mov
push
pop
inc
push
call
mov
inc
js
into
repnz
cmp
aaa
xchg
mov
jnp
or
sar
lcall
and
push
popl
push
lods
push
cltd
mov
mov
gs
nop
push
xchg
xor
push
movsl
sbb
pop
sbb
jne
test
outsl
xchg
push
dec
stos
ret
sub
jmp
bound
xlat
mov
inc
xchg
mov
jecxz
inc
test
imul
das
add
adc
mov
mov
test
out
pop
je
or
add
xchg
push
mov
adc
stos
push
push
sub
lods
xchg
loopne
ljmp
repnz
inc
stos
aam
cmp
pop
adc
pop
aad
aas
shlb
sbb
add
into
daa
int
push
mov
mov
incl
or
sbb
aaa
mov
add
test
cmp
or
call
aas
adc
jns
test
cld
push
iret
mov
lods
loopne
ljmp
mulps
push
ds
mov
sub
ljmp
or
outsb
inc
filds
or
imul
mov
push
or
lcall
add
call
test
test
aaa
dec
sub
pop
imulb
jge
shrb
jecxz
sub
dec
loopne
mov
mov
repnz
or
gs
xchg
decl
outsb
cltd
pop
mov
jle
inc
jecxz
cmp
lret
sbb
das
popa
sar
es
push
dec
cmp
pop
cld
mov
and
sub
mov
scas
xchg
sub
cli
std
or
sbb
aas
lock
push
lods
adc
test
call
xor
test
or
pop
adc
sub
cs
movsl
jp
cmp
dec
jle
mov
test
adc
push
sbb
xlat
add
dec
lea
push
ljmp
dec
or
lods
adcb
lods
ret
in
adc
or
mov
jg,pt
movsl
decl
xor
cmp
cs
inc
sar
fwait
jns
pushl
loop
mov
addr16
aas
sqrtps
cmp
ret
add
dec
and
das
adc
inc
pop
dec
xchg
inc
test
ds
adc
cld
inc
aas
je
pop
cmpsb
ss
sbb
dec
sub
enter
inc
fiaddl
mov
out
add
lret
into
int
rcrb
mov
dec
mov
icebp
xchg
aas
xchg
mov
xchg
or
jnp
push
cmp
cltd
out
scas
lret
lods
shl
xchg
mov
shl
mov
or
jo
ja
dec
adc
cwtl
iret
push
add
pop
ljmp
mov
mov
jns
or
mov
mov
push
mov
lcall
cwtl
fimuls
push
das
rorl
and
es
stos
stc
cli
xchg
aam
and
push
mov
into
das
js
ret
enter
loope
jg
lcall
push
call
lds
adc
pushf
mov
cmc
mov
outsb
les
movsb
xor
and
imul
sbb
incl
push
stc
iret
call
daa
daa
pop
aad
call
cld
scas
push
mov
aaa
test
cmp
add
fidivl
cmpsb
adc
filds
and
mov
xchg
dec
imul
and
scas
ds
pop
in
and
popf
shlb
and
pop
xchg
and
fisttpll
pushf
adc
inc
cs
movsb
sbb
outsb
lods
dec
decl
and
out
movb
movsl
mov
add
jge
adc
inc
fcoml
cmp
add
jne
pop
lock
fisttps
out
adc
pop
incl
aaa
cmp
sub
into
clc
xlat
stos
pslld
dec
xchg
mov
test
or
mov
mov
adc
mov
adc
jg
adc
mulb
aas
test
faddl
decl
inc
sar
jmp
pusha
xor
mov
icebp
mov
mov
loopne
xor
ja
sbb
fwait
inc
jge
aam
sub
dec
imul
mov
pop
jmp
and
push
jns
xchg
cmp
xlat
pop
fs
cmpsb
orl
sbb
pop
call
cmp
jge
mov
xchg
or
jmp
mov
vmovapd
into
xchg
fldenv
adc
cmp
mov
aas
enter
mov
stc
pop
cmp
shlb
push
js
aam
divb
test
into
add
shl
stc
call
mov
stos
pop
outsb
dec
push
adc
incl
setp
nop
or
notb
mov
lcall
shrl
xor
push
int
cmp
jp
and
jmp
leave
inc
push
add
jg
cmpsl
or
jge
gs
sub
push
inc
popf
lods
add
paddsb
clc
ljmp
dec
in
cld
shr
inc
xchg
jno
cmp
push
mov
inc
out
or
jmp
dec
repz
sbb
decl
shlb
or
sar
test
ss
lret
mov
mov
scas
gs
cmc
xor
xor
sti
mov
leave
das
or
and
sti
out
or
clc
add
cld
mov
inc
lret
dec
pop
push
negb
insb
jecxz
inc
jp
xchg
lcall
fdivrp
fbld
jecxz
out
out
push
jmp
aas
xchg
mov
dec
dec
and
lcall
call
mov
insb
adc
mov
aaa
push
cli
add
cmp
out
aam
loope
cmpsb
and
aam
ss
aaa
nop
jg
dec
jg
mov
push
mov
cmp
sbb
adc
adc
cltd
rcrl
cli
xor
xor
test
cltd
push
pop
push
clc
mov
lahf
mov
mov
push
or
cs
aas
ljmp
clc
cmp
dec
or
fldenv
adc
fbstp
ljmp
inc
ret
or
pop
lds
test
mov
aas
cli
mov
inc
lahf
insl
jae
and
in
push
cmp
out
shrl
ror
push
and
std
pop
sbbb
push
lods
std
pop
xchg
mov
and
mov
jbe
sub
jmp
mov
cld
pop
movsb
inc
test
mov
cs
fwait
sbb
cltd
pop
ret
sti
mov
out
xor
cmp
aaa
cs
aas
add
test
jg
test
dec
ljmp
sbb
out
call
sub
scas
and
sub
fwait
cmp
aas
inc
or
or
call
pushl
mov
and
ficomps
jecxz
pop
sub
mov
negb
in
cs
cmp
push
push
push
push
xor
sbb
xchg
dec
fstpl
dec
pop
sarb
fisubs
cmp
imul
push
inc
outsb
ss
xor
decb
outsb
push
ret
push
push
jno
push
mov
xor
cmpsl
daa
ss
fidivrs
xchg
cmp
nop
in
xchg
and
fld
inc
sahf
lret
jmp
jmp
or
pusha
loop
mov
ss
cld
incl
push
ja
sub
xor
pop
inc
hlt
nop
shll
xchg
or
adc
fbstp
ljmp
xchg
add
jp
popa
ss
jmp
push
pop
fisubs
pop
cmp
adc
mov
mov
lret
mov
data16
mov
fstpl
pop
fisttps
mov
jmp
push
cwtl
fs
sbb
icebp
pop
dec
xchg
lcall
inc
and
cmc
sub
pusha
js
ss
mov
cmp
or
xchg
ret
loop
aam
fcomip
incl
ret
cmpsl
out
mov
repz
and
les
cmp
fwait
mov
es
or
popa
call
ret
jle
addr16
jp
stc
decl
dec
cld
mov
mulb
xchg
jg
std
cli
out
lret
xchg
xor
call
fs
and
jmp
pop
xor
add
cltd
dec
test
push
aaa
cwtl
pop
mov
push
mov
decl
aam
xchg
call
cmc
inc
fstp
cmp
adc
test
ss
das
and
test
aam
lea
pusha
loopne
repnz
fwait
stos
fldenv
bnd
inc
pop
sub
inc
pop
pop
xchg
out
dec
movsb
das
push
cs
mov
xchg
roll
shrb
mov
mov
cmp
icebp
sub
in
in
jb
int
jo
lcall
or
pop
sahf
arpl
stos
decl
mov
xor
mov
and
orl
fdivl
insb
aas
inc
xor
imul
mov
out
mov
or
cs
loop
pop
pop
call
icebp
add
loop
in
sbb
push
mov
incl
hlt
clc
mov
loope
pop
xchg
insl
dec
cs
inc
ret
mov
xor
xchg
enter
cmc
call
ret
lock
mov
stos
rorb
iret
icebp
das
cli
mov
test
and
dec
adc
shrl
movsl
test
scas
pop
std
movsl
fisubs
outsb
sub
push
fst
lods
enter
xchg
or
in
inc
std
push
add
dec
popf
subb
leave
jmp
sub
rclb
jo
xor
stos
inc
mov
cmp
cmp
xchg
outsb
cli
icebp
orb
mov
test
inc
sub
or
sub
pop
dec
cmp
ljmp
add
xor
cmpsl
cmp
movsb
cli
clc
jbe
add
or
add
adcl
ljmp
push
pop
adc
pop
sub
call
jle
xor
add
stc
repnz
loope
jne
adc
loopne
lcall
pop
xor
cmp
xor
jbe
fucomip
or
or
cld
xchg
shrl
pop
rol
ret
cmp
add
loopne
aad
mov
cmp
iret
daa
arpl
add
incl
add
xlat
in
cmc
push
div
add
dec
adc
or
hlt
les
je
repz
ljmp
push
lds
xor
xor
insb
pop
xchg
adc
icebp
ret
adc
test
es
in
and
aas
dec
sar
push
sub
and
cmp
lock
lcall
dec
jno
xor
push
and
push
dec
pop
clc
lcall
pushf
dec
mov
jbe
sub
imul
and
incl
jo
and
and
mov
inc
shlb
cmp
call
mov
or
lret
icebp
xor
repnz
and
lret
icebp
jmp
jecxz
mov
ds
leave
pop
xchg
cli
fst
sub
adc
shr
enter
test
inc
fbld
mov
ljmp
test
pop
dec
rorb
std
js
and
es
rcll
repnz
in
daa
dec
ret
push
lods
cwtl
rclb
lds
cmp
sub
dec
int
ja
clc
sbb
pop
adcb
xchg
push
movsb
or
adc
aaa
cmp
sbb
xchg
lock
fiadds
mov
jb
lods
sbb
or
retw
shrb
lea
and
call
add
fists
jge
fstp
in
dec
lds
cmp
int
test
mov
push
in
loop
cld
cli
popf
xor
push
pop
das
out
out
jmp
stc
jb,pn
rcrb
std
int
sub
wbinvd
out
cli
add
daa
xchg
mov
sti
int3
rcll
frstor
sti
xchg
jmp
clc
push
jmp
cld
es
out
or
xor
inc
or
jnp
xchg
and
cltd
pop
test
flds
test
test
fldcw
nop
pushf
mov
popf
mov
mov
xor
aaa
hlt
xor
push
push
ja
push
fnstsw
jbe
adc
bound
les
imul
mov
jno
add
add
xchg
imul
add
xor
pop
jl
mov
into
cmp
sbb
mov
xor
cmpsb
fildll
insl
sarl
push
jmp
imul
clc
pop
cmp
test
cmp
outsb
div
dec
lds
hlt
rorb
mov
adc
hlt
fsts
sti
dec
adc
pop
adc
mov
sub
or
frstor
jmp
mov
dec
or
dec
pop
jg
movsb
or
dec
lock
sti
and
cmc
call
xchg
clc
adc
and
je
in
loop
push
imul
lcall
rorb
or
ret
mov
shr
sbbb
cld
sub
pop
jae
rcrb
add
decl
cmp
push
pop
popf
lret
pushf
movsb
adc
fnclex
and
mov
xor
or
jmp
mov
xchg
imul
out
pop
into
xorl
clc
incl
subl
mov
movsl
in
lcall
adc
inc
inc
enter
lret
nop
stos
push
movb
std
das
shl
push
nop
icebp
sti
pop
bound
incl
jp
xchg
test
xchg
cmp
shrl
leave
or
mov
fidivs
xchg
dec
hlt
ret
adc
mov
fcmovnbe
push
adc
push
mov
sub
pop
ss
sbb
mov
sbb
jg
js
or
or
aad
pusha
lcall
idivl
push
pop
push
and
iret
sbb
jecxz
std
call
adc
xor
xchg
cli
hlt
repnz
push
cs
jmp
pop
pop
mov
or
aaa
add
cmpsl
decl
push
out
sub
or
bound
push
add
fbld
ficomps
cmpsl
sarb
out
or
lea
daa
dec
jmp
scas
rorl
mov
dec
popf
lahf
add
subl
adc
sbb
clc
or
adc
push
ds
xor
pop
mov
pop
icebp
ds
xor
pop
jle
pop
mov
shl
xor
jg
aas
jl
call
and
inc
dec
hlt
adc
ss
or
ljmp
xor
sub
lods
jmp
call
andb
add
clc
lcall
aam
mov
mov
pop
mov
scas
adc
sub
mov
lods
and
call
or
clc
fists
bound
scas
inc
cld
sub
or
iret
jp
xor
push
aas
cmp
sbb
fildll
dec
insb
mov
pushf
into
push
cmp
xchg
movsb
mov
ds
aas
jg
stos
popa
in
jmp
mov
out
push
or
jl
fdivp
dec
popf
repnz
das
in
and
xchg
push
mov
test
faddl
inc
xor
fnstsw
lock
jns
mov
push
mov
xor
mov
mov
test
lods
fiadds
leave
sbb
out
cmp
jle
pop
adc
adc
inc
popl
std
xchg
gs
pop
xchg
fsts
jmp
std
sub
jb
lds
mov
cmp
imul
or
fwait
testb
xor
int
ds
addr16
mov
mov
mov
adc
dec
cmpsl
mov
push
cs
pop
pop
fcomip
and
mov
add
mov
jle
inc
dec
shlb
cld
push
jmp
pushl
shll
mov
outsl
inc
adc
adc
xchg
jno
into
jg
lock
sub
movsl
sahf
es
add
scas
aam
sub
aaa
push
lcall
in
fldt
fimuls
add
pushf
jbe
mov
inc
int3
mov
call
call
push
int
mov
stos
fcmovnu
xchg
fcomps
xchg
mov
ljmp
jo
jle
es
mov
dec
nop
in
pop
mov
fbstp
outsb
jp
stos
or
or
hlt
xchg
out
mov
xor
lds
push
push
mov
inc
adc
push
push
ljmp
xchg
fnstsw
xchg
adc
jp
mov
imul
divb
mov
cli
jg
repz
and
mov
mov
dec
jae
aas
ljmp
jle
in
iret
mov
or
fistps
inc
jmp
cmpl
or
mov
scas
and
inc
test
mov
add
decl
jae
test
add
imul
xor
movsl
sub
adc
xor
mov
ljmp
ss
outsl
mov
xchg
shl
hlt
popa
push
sub
mov
mov
fldcw
fs
ljmp
jns
test
xorl
dec
dec
pop
lahf
imul
cli
or
rorl
jle
adc
das
movsb
mov
lods
push
push
cmpsl
mov
cwtl
add
sub
cmp
cli
jg
lea
xchg
inc
stos
loopne
lods
adc
adc
int
fcoms
xchg
incl
lods
jg
xchg
in
mov
rorl
or
ret
mov
jmp
ds
push
rcr
and
push
jnp
popf
popa
sbb
out
jns
leave
addr16
dec
js
xor
loop
sub
or
sbb
addr16
mov
jg
dec
roll
or
adcb
push
ret
jb
xchg
scas
cli
sbbl
popa
arpl
mov
std
xchg
and
jg
lea
out
mov
in
into
push
add
xchg
ss
push
incl
js
jmp
gs
scas
out
lods
int3
mov
jb
in
push
or
addr16
mov
and
pop
cmc
dec
cltd
and
fcmovb
mov
dec
mov
repz
lcall
add
inc
rcl
push
repz
pop
pop
or
mov
rclb
dec
iret
pop
daa
ss
push
das
xchg
rcr
pop
les
lcall
pusha
xchg
int
xchg
arpl
lret
jecxz
sar
inc
xchg
xchg
cld
jg
test
push
ffreep
or
jns
lcall
cmp
push
push
inc
xchg
lods
bound
adc
adc
shll
ss
roll
jbe
push
adc
mov
ljmp
repz
inc
or
andl
xchg
fucom
cmp
push
call
sub
add
imul
dec
or
movsb
adc
or
out
mull
and
mov
add
push
cmpsb
shlb
sbb
lcall
push
sbb
lret
mov
and
sub
xor
test
test
scas
outsb
loop
fmuls
mov
jg
lock
ss
adc
aaa
pop
push
xor
sub
dec
clc
out
mov
jmp
or
add
cmp
orb
popf
lret
cmp
cmpl
push
stc
scas
adc
incl
iret
icebp
leave
loope
jmp
or
cli
aad
mov
std
pushl
jecxz
js
jp
xchg
and
gs
add
mov
lahf
call
std
adc
test
and
sub
test
dec
pop
adc
cmp
jmp
xchg
leave
xchg
cli
ret
icebp
insl
into
test
sbb
hlt
mov
out
jmp
mov
xor
xor
xchg
fimull
xchg
adc
rorb
mov
test
lock
xchg
pop
daa
lods
cs
out
xor
sbb
es
xor
sub
mov
mov
cmpsl
loopne
mov
mov
ljmp
sbb
sbb
pop
data16
or
push
jmp
mov
adc
out
arpl
lea
data16
loope
outsb
xchg
idiv
pop
xchg
cli
push
pop
mov
sbb
decl
sub
movsl
jle
jb
mov
aaa
fidivrs
fists
mov
sbb
movsb
cmpb
xlat
popl
daa
push
mov
daa
icebp
daa
pop
imulb
pop
mov
inc
mov
cld
inc
mov
pop
aas
cmp
jg
outsb
pop
adcb
pushf
sub
stos
and
or
pop
and
test
int3
add
sarb
cmp
push
adc
cmc
incl
adc
cli
shr
push
dec
xchg
repz
push
dec
mov
and
push
dec
ja
cmp
push
outsl
xor
cld
insb
xchg
mov
lcall
sbb
jmp
jo
adc
loopne
in
push
pop
nop
jl
adcl
ja
sbb
push
sub
ret
xor
pop
icebp
mov
inc
in
ret
or
mov
pop
mov
loope
cwtl
cmp
dec
hlt
jg
shrl
ret
mov
leave
cmp
stc
lret
xor
mov
xlat
mov
xchg
sub
mov
popl
scas
test
xor
pop
lcall
loop
jle
pop
imulb
adcb
notb
sbb
std
lcall
push
sbb
ss
pusha
sub
imul
mov
mov
into
xlat
lock
push
insb
pop
dec
mov
cmp
mov
and
sub
adc
cmp
fists
repz
shlb
incl
call
mov
lods
mov
xor
ljmp
inc
aam
cmp
lods
jl
mov
dec
fnsave
inc
lds
sahf
fisttpl
rclb
loope
sub
imul
scas
scas
gs
fistps
lret
xor
in
jg
lods
xchg
out
out
cmp
mov
sahf
fisubl
push
mov
movsl
mov
pop
mov
clc
pcmpeqd
hlt
or
jb
decb
and
in
push
subb
prefetch
or
mov
lret
mov
sub
mov
icebp
or
cmp
add
cld
lcall
ljmp
hlt
jl
mov
or
scas
loopne
loop
hlt
mov
adc
ss
mov
cmp
lcall
or
push
bound
out
cmp
adc
cmp
xor
jae
popf
or
call
mov
push
aas
scas
inc
and
fwait
mov
and
xor
adc
mov
push
sub
xlat
outsl
push
jp,pn
ds
mov
jecxz
mov
lahf
lret
out
fisubrl
mov
lock
add
cli
rcl
test
out
inc
jbe
adc
into
add
jp
xor
or
pop
jmp
dec
hlt
aad
dec
repnz
push
xchg
scas
or
mov
out
aam
xor
andl
jl
mov
popf
nop
lock
lret
sarl
lods
jp
sahf
enter
incl
xchg
xchg
jo
mov
cli
mov
ljmp
cs
inc
dec
dec
out
sahf
push
push
jle
mov
out
cltd
adc
sub
add
es
lcall
pop
or
jno
mov
test
mov
inc
loop
mov
cmp
inc
hlt
cwtl
pop
xor
aaa
subl
stos
add
shrb
push
sub
dec
adcb
jg
movsb
std
lods
out
xchg
ja
scas
idivb
sub
mov
sub
std
call
pop
imul
jmp
loope
lcall
xchg
subl
adc
mov
mov
and
lods
rorb
push
mov
jb
in
enter
mov
jns
movsl
or
pop
and
add
scas
xchg
xchg
lods
lods
loope
push
rorb
lret
sub
clc
sbb
or
mov
inc
lcall
or
jle
imul
mov
and
xor
cs
mov
fnsave
es
loopne
gs
mov
xchg
and
or
jmp
xorl
test
adc
lcall
stos
sahf
sub
in
and
stc
iret
jmp
dec
xor
lock
jb
stos
hlt
fisttps
xchg
adc
xor
lods
or
xor
adc
popa
mov
dec
popf
pop
test
gs
pop
dec
ret
add
filds
jle
push
mov
push
and
mov
mov
xor
mov
jbe
mov
inc
std
ja
aam
adc
push
mov
xor
push
fistps
filds
and
lret
push
dec
jg
cmp
stos
inc
imul
pop
mov
pop
jl
mov
repnz
and
stc
xchg
xor
test
sub
sub
mov
inc
xor
jb
and
pop
scas
mov
xchg
in
out
mov
sub
add
xchg
aam
inc
jle
pop
inc
andb
adc
jmp
push
adc
xlat
decl
add
dec
pop
jle
aaa
call
outsl
push
jnp
cmp
dec
pop
xchg
loope
cmp
pop
insb
jg
and
fisttps
into
call
jge
negl
test
jle
xor
adc
xchg
mov
sbbb
adc
ljmp
cmp
popa
cs
and
ret
repz
seta
xchg
das
or
xchg
loopne,pn
push
inc
or
or
dec
dec
mov
add
mov
insl
sbb
mov
cmpsb
cmpsl
pop
sub
nop
aas
mov
pusha
jmp
test
xor
aas
dec
cs
icebp
xchg
ss
inc
pop
pop
popa
std
ja
xchg
ja
stc
icebp
movsb
data16
fimuls
je
mov
mov
xchg
fwait
or
and
outsl
pop
push
fbstp
jmp
movsb
and
lcall
mov
pop
mov
xor
xchg
pop
sub
out
or
push
fmulp
cmpsl
das
jmp
cltd
into
mov
jmp
cmp
cmp
cmp
movsb
repnz
shl
push
inc
or
sub
and
filds
xor
stc
bound
add
sbb
adc
and
loopne
sub
sub
or
stos
movsl
xor
lret
loopne
fbld
and
ficomps
shrb
clc
lcall
jb
call
arpl
aad
movsl
repnz
jnp
mov
push
loopne
mov
adc
sub
mov
push
cmp
push
sub
js
insl
adc
mov
ljmp
mov
dec
ja
sub
out
mov
push
pushf
mov
xlat
shlb
mov
mov
inc
lods
stos
cs
cmc
sub
jle
push
lcall
sahf
add
stc
fstpt
mov
sub
xor
cmp
jg
cwtl
test
nop
scas
popa
pop
adc
aaa
icebp
lods
stos
into
dec
adc
jmp
sub
jle
ret
int3
int3
push
int
insb
icebp
mov
jle
mov
icebp
das
xchg
test
cwtl
jno
lock
fdivp
lcall
cmp
test
cmp
dec
jle
mov
push
dec
loopne
adc
jo
test
mov
dec
int3
rcr
or
shl
lock
pop
dec
loop
pop
jae
fstps
sub
inc
mov
mov
push
enter
faddp
ss
pop
repz
sar
fwait
mov
pop
mov
or
xchg
les
cmpl
mov
dec
cld
imul
pop
out
ss
repnz
decl
sub
add
xor
loope
sbb
dec
xchg
arpl
or
and
into
fs
aas
out
sub
cmp
rorl
scas
mov
out
mov
sahf
mov
sar
fistpll
dec
dec
lock
je
lahf
sbb
add
xchg
jmp
xchg
cs
daa
adc
in
xchg
xor
mov
and
pop
mov
les
xor
enter
movsl
push
add
xor
and
cld
fistpll
push
and
mov
mov
push
cmp
mov
inc
jns
mov
mov
xor
mov
scas
in
stos
mov
test
pop
mov
lcall
add
inc
mov
jp
das
stos
push
xor
or
cs
pop
dec
pop
xchg
cmp
decl
adc
sahf
icebp
bsf
cmp
add
xchg
sub
and
scas
ljmp
popf
pop
xor
ljmp
out
push
xorb
mov
inc
andl
lock
mov
push
or
cld
pop
mov
inc
add
in
jmp
adc
sub
sub
stos
sbb
sar
das
scas
mov
dec
and
je
stos
adc
aad
stos
or
outsl
ret
fcompp
cld
push
lret
rcll
add
jbe
stos
inc
aaa
jb
fcmovb
jmp
ret
add
lahf
push
push
insl
or
jp
clc
nop
repnz
fwait
outsb
in
call
mov
scas
mov
incl
or
in
test
jmp
cmp
push
in
jo
sub
mov
and
sbb
repz
cmp
fwait
dec
pop
lock
push
fstpt
sub
mov
ljmp
mov
inc
mov
sti
cmpsl
icebp
adc
ljmp
add
xchg
adc
fxch
cmc
sti
xor
decl
ds
repnz
mov
lret
sbb
mov
adc
aam
test
adc
push
movsb
ret
out
sarl
andl
inc
sbb
xorb
test
jecxz
xchg
push
lods
and
sub
cmpsb
cli
popf
test
test
xchg
fisttps
push
jo
aad
out
ret
add
rcll
fiaddl
imul
cmp
xor
add
ss
mov
fidivs
aaa
aad
sbb
mov
rorb
into
cli
pushl
js
mov
xchg
aas
pop
sub
hlt
mov
imul
jg
sbb
filds
xor
jecxz
mov
lcall
sti
pop
in
int
and
aad
repnz
and
cld
lahf
lcall
dec
es
cmp
mov
ss
cmpsb
out
push
imulb
cmc
fimull
lgs
pushl
outsb
cld
adc
pop
int3
iret
adc
xchg
sbb
inc
mov
jns
jg
jle
popa
fs
in
pop
mov
push
call
scas
into
arpl
mov
loopne
dec
ret
out
jl
outsl
push
pop
adc
cwtl
inc
dec
lds
cltd
cmp
adc
aaa
cltd
ret
xchg
push
push
sbb
and
xchg
outsb
decl
sahf
mov
cltd
mov
mov
gs
add
decl
jne
lret
jno
in
push
add
insl
arpl
mov
mov
test
insl
mov
push
into
ljmp
stc
push
xor
xchg
call
ljmp
mov
mov
jbe
outsb
dec
inc
mov
frndint
jmp
adc
xor
mov
and
mov
sahf
call
test
ja
inc
rcll
mov
ds
iret
insl
movsl
mov
ja
fisubrs
test
ret
dec
movsb
movsl
pop
nop
mov
std
into
ds
add
out
ljmp
sarl
fcmove
stc
xabort
mov
das
loope
lcall
mov
dec
out
outsb
aas
cwtl
iret
data16
cmp
dec
add
ljmp
cmc
xchg
cs
in
rorb
xor
dec
mov
imul
jmp
or
call
rcl
into
xor
movsb
xchg
test
aaa
cld
incl
mov
mov
fdivs
sbbb
sbb
incl
sbb
fwait
mov
psubq
test
mov
mov
xor
mov
jle
mov
mov
mov
iret
lcall
mov
ret
aas
mov
mov
add
popa
js
test
ja
addr16
inc
xchg
jg
mov
and
inc
push
lcall
dec
rclb
fsubs
mov
mov
loope
lret
movsl
in
lea
fcmovne
stos
insl
imul
repz
jmp
jmp
loop
push
mov
inc
push
leave
into
sub
inc
pop
push
cli
in
inc
out
pop
pop
imulb
xchg
fwait
jno
mov
mov
add
inc
std
mov
sti
mov
fisttps
sti
adcb
inc
lock
pop
and
sahf
xchg
add
cwtl
jp
cmp
push
outsl
jb
sbb
dec
mov
mov
jbe
adc
ds
pop
or
add
push
pop
fwait
push
shl
out
outsl
arpl
xchg
xchg
cmp
shl
jb
loope
cmp
push
shlb
sbb
sub
testl
call
shl
decb
and
sub
xor
pop
adc
cs
push
pop
cli
push
ret
mov
sar
add
or
cs
ss
fisttps
mov
decl
mov
fisubrs
pop
cmpsb
mov
pop
aam
and
idiv
xchg
das
jle
push
popa
ja
aaa
or
inc
sbb
pop
shrb
xchg
out
or
stc
stos
dec
cld
outsl
push
adc
ret
aaa
cmp
imul
mov
and
pushf
sub
insb
stc
dec
sbb
stc
push
add
mov
cli
loope
mov
cmp
sahf
push
cmp
jbe
aam
lahf
and
pop
hlt
push
inc
fcomip
aaa
sahf
in
rorb
pushf
adc
push
push
mov
jne
cmpsb
into
decb
cmpsl
arpl
lcall
shlb
test
mov
adc
enter
aaa
dec
out
jbe
ret
ficompl
push
jg
test
mov
idivl
ficoms
adc
mov
test
adc
xor
or
sti
aam
loopew
mov
pop
and
cmpsl
sbb
pop
inc
in
into
mov
mov
subb
and
adc
cld
loop
fadds
stos
movsb
add
in
cwtl
arpl
mov
pop
and
ja
outsb
sar
add
scas
cs
ljmp
jbe
push
mov
or
add
cmp
mov
movsl
out
pop
or
cld
jle
jmp
pop
xchg
daa
sub
push
incl
pushf
xchg
mov
mov
mov
sahf
sub
mov
pushl
and
movsl
adcb
aam
scas
xor
sub
inc
cmpsb
jecxz
sub
test
mov
mov
push
adc
in
fldcw
not
or
lock
dec
pusha
out
xchg
gs
sar
pushl
sarb
aaa
adc
movsb
dec
std
jmp
pop
pop
addr16
ds
push
test
std
jg
cmpsb
les
ret
add
adc
clc
pop
test
scas
xchg
orb
pop
mov
adc
mov
mov
mov
inc
es
jmp
dec
mov
lods
mov
mov
cli
fwait
aaa
movsl
mov
mov
push
mov
jb
fdivrp
mov
push
inc
aad
xchg
cmpsl
adc
bound
nop
xchg
cmp
std
aaa
scas
pop
roll
mov
mov
ljmp
xchg
aad
or
shl
out
mov
dec
dec
imul
or
sbb
jle
sub
test
mov
mov
scas
add
out
clc
fucomip
decl
add
cmp
xor
mov
jmp
or
lea
in
and
and
notl
aam
lahf
movsb
jg
test
cld
in
sbb
std
into
mov
test
and
bound
andl
xchg
dec
test
sbb
in
jnp
xor
fcmovne
cld
test
or
loope
xchg
pusha
std
imul
fiadds
out
fbld
fisubrl
sbb
pop
xor
jl
push
shr
ret
pop
ljmp
int3
lret
or
add
sub
xor
incb
mov
les
and
adc
cld
ljmp
test
xchg
add
call
xchg
movsl
adc
jne
add
in
xchg
xchg
nop
ds
lcall
cmp
iret
mov
cmpsl
mov
test
mov
lcall
lods
das
ds
scas
mov
mov
sbb
mov
or
add
cmp
cli
mov
mov
aaa
push
rorb
sbb
ljmp
hlt
ljmp
sbb
test
mov
movsb
or
cmp
das
xor
je
add
in
addl
push
jl
scas
adc
xchg
or
jmp
and
test
jne
adc
inc
jno
dec
xchg
cmp
add
or
adc
push
movsl
add
dec
cmp
cmpsb
mov
pop
loopne
xchg
shll
mov
add
movsl
xor
push
cvtps2pi
out
leave
adc
cs
fmull
add
cmp
fmuls
cmp
fsubrl
popf
cmp
push
stc
jmp
jg
icebp
nop
imul
sub
repz
mov
lcall
ljmp
fcomi
dec
xchg
add
lret
and
out
sub
in
push
gs
fisubs
loopne
cld
add
repnz
out
repz
push
in
incl
cmpsl
mov
ffreep
mov
addr16
mov
jp
lcall
stos
aas
aas
loopne
jo
ret
gs
lcall
loopne
pop
sbb
clc
xchg
add
loopne
jns
mov
mov
mov
cmp
sar
inc
iret
mov
int
enter
mov
mov
out
dec
fst
arpl
mov
lcall
in
mov
inc
fbld
incl
inc
pushl
subl
daa
repnz
hlt
pushl
lock
jp
ljmp
leave
incl
in
xchg
mov
imul
mov
mov
jb
or
ficomps
fimuls
sbb
hlt
cwtl
mov
inc
scas
mov
cmp
fidivs
loop
repnz
insl
loop
xchg
rcll
decb
mov
mov
std
lods
add
rolb
mov
pusha
lcall
dec
in
into
jmp
mov
mov
fcomps
mov
insb
movsb
pmaddwd
and
cmp
aas
fisubl
jbe
leave
gs
lock
shl
in
aaa
mov
push
fisttpll
xchg
movsl
incl
mov
adc
xor
xlat
mov
and
jg
pop
mov
sbb
sbb
adc
ffreep
or
or
ret
hlt
cmc
jmp
repnz
clc
lods
cs
mov
addr16
div
dec
jmp
lds
vmovdqu
push
stos
fstpt
decl
mov
sbb
cld
fbstp
and
stos
icebp
jmp
xchg
std
rolb
decl
cmp
movhps
jecxz
pop
jg
lods
call
mov
lcall
cmpsb
shlb
subb
fistpl
cmc
fldenv
mov
jg
stc
loope
clc
ljmp
mov
cmp
loope
sbb
cmp
lahf
adc
sbb
aas
adcb
mov
in
aaa
and
loopne
pushf
jo
xor
cmp
push
and
jmp
cli
cmc
jmp
adc
popa
or
sub
ljmp
out
rcll
iret
adc
cli
fwait
nop
hlt
xor
or
cli
lcall
notl
cmp
int3
inc
stc
adc
scas
fstp
dec
lea
cmp
sbb
cmpsl
push
cmp
jne
int
roll
ret
push
cmp
testl
fisttpl
aaa
enter
add
hlt
sti
inc
jmp
xchg
out
jb
mov
leave
xor
pop
and
filds
ret
js
call
jmp
cli
xor
stc
xchg
cmp
scas
xorb
mov
pop
mov
cmc
pop
and
cmc
jae
cmpsl
leave
out
push
in
lret
aaa
std
pop
push
dec
xor
jmp
push
in
ja
jbe
jp
vpunpcklwd
icebp
lds
dec
cli
shlb
lret
or
aam
or
xor
adc
int
push
cmp
call
mov
shl
stos
push
pop
cwtl
cld
jae
addr16
mov
fst
nop
aad
sub
adc
cld
fists
mov
sbb
and
mov
jg
aaa
push
lods
imul
dec
jge
sub
clc
mov
scas
cli
and
aas
mov
jle
fwait
cli
mov
dec
mov
ret
jne
pop
outsb
jne
std
mov
mov
jbe
xchg
dec
stos
pop
or
jmp
sub
lods
cmp
dec
shl
mov
adc
pop
or
inc
lret
push
mov
cmpsb
cmp
shll
sbb
mov
callw
repz
scas
cld
loope
mov
stc
xchg
lock
lcall
jecxz
xor
inc
mov
and
dec
sub
cld
cmc
insl
fbld
dec
mov
adc
sbb
inc
enter
push
cmp
xlat
sub
test
pop
adc
add
mov
outsb
js
std
es
jle
mov
mov
scas
inc
fwait
cmp
data16
cmp
mov
cld
xchg
or
lods
push
scas
inc
sub
mov
adc
push
call
aad
sahf
fadd
jb
push
ds
lcall
fcoml
cs
push
jmp
and
pop
cwtl
pushl
jge
out
ss
adc
movsb
mov
xlat
add
sbb
ficoms
int3
push
rol
mov
xchg
jg
cld
in
fwait
outsl
scas
ja
mov
mov
mov
xlat
pop
out
cwtl
insb
rcll
divl
adc
jg
out
dec
xchg
ds
mov
adc
xor
ljmp
and
dec
imul
push
add
mov
loopne
mov
mov
cmp
mov
jae
mov
jg
decl
pop
data16
pop
xchg
es
cmp
push
les
inc
dec
sub
outsb
mov
jg
shrb
push
xor
sbb
inc
cld
aad
jp
jl
decl
adc
cmp
lcall
neg
push
shl
pop
pop
fadds
mov
dec
adc
dec
int
cmc
fisttps
ret
loopne
xchg
pop
in
pop
lahf
add
lcall
xor
std
repnz
pop
iret
ljmp
fs
jmp
cmc
sbb
sbb
xor
jmp
rdmsr
inc
out
sub
and
aas
shlb
mov
outsb
cmp
sub
dec
outsb
push
int3
push
sahf
fadd
mov
bound
ret
cs
pusha
or
das
add
fnstsw
inc
or
test
jg
mov
mov
dec
pop
stos
sar
sub
sahf
loope
xlat
inc
icebp
call
call
jne
cmp
insl
push
int3
sub
ljmp
sahf
push
cmp
push
ds
sbb
aas
add
xor
mov
mov
push
jmp
pop
sub
out
rcr
mov
add
or
movsl
mov
add
cs
or
push
loope
cltd
ljmp
imul
and
or
pop
xor
mov
out
decb
test
pop
orl
icebp
out
call
xlat
mov
and
fdivrp
jmp
ja
or
shl
pusha
sub
fcomi
shll
pusha
loope
push
icebp
rol
ret
enter
fwait
ret
loop
out
lret
mov
and
push
lods
jno
sub
inc
mov
and
mov
in
jo
lcall
sbb
movsb
and
inc
push
imul
mov
js
ret
decb
push
mov
bound
push
repnz
mov
mov
loope
push
dec
jae
mov
mov
fwait
lcall
fsubrp
xchg
sub
xchg
test
repnz
mov
sub
loopne
rcr
mov
incl
or
xchg
jo
mov
and
sti
pusha
mov
out
mov
jnp
leave
data16
inc
jecxz
mov
or
dec
shrb
fs
jge
xor
or
mov
mov
xchg
aaa
loope
xor
or
cld
mov
daa
mov
mov
sbb
decb
lods
adc
ficompl
inc
loopne
mov
dec
fcomps
adc
push
cmp
enter
push
jl
je
loopne
mov
dec
stc
inc
dec
jo
add
or
push
test
test
or
lock
imulb
fwait
int
ret
subl
mov
and
mulb
adc
pop
loop,pt
std
push
lret
mov
jg
lcall
fadds
xchg
pusha
in
pop
and
push
and
mov
sbb
ds
fidivs
sub
lret
adc
stc
ret
push
jp
les
cs
ret
divb
outsb
xor
das
or
dec
pop
movsb
mov
and
stos
jecxz
outsb
clc
inc
sbb
push
hlt
jmp
pop
push
adc
add
fwait
out
rol
cmpsb
jmp
and
data16
sbb
adc
push
mov
imul
jae
fnsetpm(287
iret
into
daa
cmc
mov
push
and
out
lret
or
imul
cmp
int3
add
fimuls
ror
int
ss
and
call
jno
gs
outsl
mov
testl
xor
decl
mov
lret
jg
xor
dec
cmp
nop
xor
push
mov
xchg
xor
push
push
add
aas
lcall
loopne
lods
lds
pop
ss
lock
or
or
jb
enter
cmpsb
add
inc
clc
lock
mov
ret
fsubrp
xor
lahf
and
das
out
outsb
push
sti
out
fbstp
lds
loope,pn
dec
and
jl
mov
insl
lock
fs
into
fmuls
push
sub
into
fildll
pop
imul
inc
imul
inc
into
xor
loopne
adc
aas
sbb
aas
inc
fildll
daa
ljmp
fmulp
ds
ss
push
or
sti
es
mov
stos
scas
cs
xchg
outsb
stos
iret
pop
loopne
ds
ds
xor
jle
adc
adc
std
loope
sub
orb
pop
loopne
call
lods
dec
sbb
inc
xchg
add
or
push
insb
inc
inc
sahf
inc
jge
test
adc
push
dec
dec
addr16
mov
dec
sub
filds
sub
dec
push
push
das
mov
ret
fiadds
filds
cli
or
sub
int
or
fcmovb
or
mov
int
add
push
out
pop
dec
rorb
test
jg
test
xor
jo
cs
jecxz
push
inc
cmp
sbb
pop
inc
ljmp
inc
mov
pop
xchg
or
test
xchg
or
lcall
out
ficoml
xlat
mov
fwait
mov
inc
adc
cs
cmp
es
jg
test
add
loopne
or
mov
stc
add
lcall
insl
test
outsb
ja
push
ljmp
pop
div
push
push
dec
jmp
push
push
clc
sahf
xor
rorl
dec
rorb
out
mov
pmaxub
out
and
popf
and
fmuls
sbb
pop
mov
js
sub
outsl
and
loopne
testl
icebp
jmp
fwait
add
add
clc
cmpsb
fists
insb
mov
popa
fnstsw
dec
push
pop
jo
out
mov
push
fidivrl
stos
cmp
mov
sbb
cmpsb
cwtl
sar
mov
fidivs
add
inc
pop
add
sti
data16
add
inc
pop
cs
push
scas
inc
mov
or
into
roll
mov
add
popa
mov
repnz
out
outsb
inc
dec
out
test
inc
enter
dec
out
gs
stos
push
mov
jle
push
or
loop
add
shll
xorb
pushl
addl
mov
jno
jecxz
incl
mov
in
and
xchg
fists
cmpsl
push
xor
outsb
and
cs
xchg
int
std
hlt
call
jmp
jmp
pushf
ss
mov
and
sbb
push
cld
loopne
mov
sub
push
pusha
in
adc
stos
or
jmp
and
jnp
add
int3
or
dec
scas
lahf
xorb
pop
insb
push
push
cwtl
into
mov
loop
les
sub
scas
pop
mov
scas
in
fwait
add
dec
xchg
repnz
mov
push
inc
std
mov
int3
cmp
lcall
dec
cld
cmp
dec
shlb
adc
das
xor
pop
xchg
pop
push
mov
decl
mov
pop
adc
js
push
std
lods
sbb
mov
push
filds
lcall
lcall
in
rcrl
sbb
jbe
popf
xor
sahf
bnd
mov
outsb
out
lock
outsb
ds
and
jle
sub
scas
jle
xchg
into
or
cmp
adc
add
jl
repnz
xor
enter
mov
outsb
aaa
sbb
jle
or
and
inc
inc
pop
jmp
push
and
loopne
push
dec
out
xor
sbb
xor
aad
mov
hlt
shll
add
mov
push
in
and
xchg
jmp
pushl
xchg
mov
mov
xchg
iret
into
add
ret
rorl
add
scas
push
inc
fimull
cld
jmp
xchg
xor
out
jne
push
clc
aaa
into
push
je
icebp
out
pusha
adc
das
aas
add
or
sub
mov
dec
pop
sbbl
repz
les
mov
mov
inc
clc
pop
hlt
pop
xchg
dec
js
cwtl
arpl
arpl
jmp
ds
push
lock
and
or
mov
pop
out
insl
stc
rorl
xlat
std
dec
decl
add
lods
and
out
sub
ret
pop
aas
inc
decl
nop
jp,pn
aam
test
dec
xchg
jne
pop
lcall
fsub
enter
cmp
cli
lret
pop
lcall
fst
or
mov
loopne
out
cli
nop
nop
insl
loop
decb
ljmp
xor
add
cld
jg
and
mov
pop
inc
xchg
movsb
fstps
adcb
or
scas
cs
decl
int
popl
sbb
test
std
xlat
or
pop
or
stos
fistps
adc
in
scas
aas
and
cs
cmpsb
mov
dec
mov
mov
or
aam
sub
fistpll
out
sahf
cli
shlb
cmp
cld
mov
fsubp
adc
int3
sub
shl
mov
lret
adc
pop
mov
jnp
jmp
push
jmp
nop
add
push
outsb
pop
sub
dec
add
push
or
psubsw
mov
add
inc
dec
pop
filds
or
mov
sub
lret
loop
rclb
jno
adc
mov
jmp
loope
and
lock
cli
and
push
mov
js
cs
int3
fnstenv
not
mov
decl
mov
stc
mov
fsubrs
or
or
pushf
loopne
add
inc
clc
frstor
cs
es
pavgb
into
pop
add
rcrb
aaa
repnz
lods
mov
or
out
lcall
mov
pop
fstpl
outsb
clc
lret
rep
lods
inc
push
ja
pop
out
ss
pop
mov
mov
dec
cli
pop
iret
gs
push
pop
inc
jecxz
out
fcompp
adc
sbb
in
outsb
dec
aam
popa
inc
dec
push
enter
cmp
clc
decl
outsb
jmp
scas
xchg
dec
ljmp
out
or
adc
push
das
ud0
jnp
icebp
or
outsl
ss
jnp
mov
in
sbb
add
or
xor
rorb
les
aaa
das
and
fs
dec
std
cs
lock
out
inc
sub
or
inc
inc
loope
dec
push
push
fdivrl
lods
fwait
pusha
std
mov
push
sub
pop
sahf
or
notb
jmp
ficoms
inc
xlat
jge
nop
cld
fs
cmp
fidivs
adc
out
and
lds
mov
loopne
cs
jmp
add
sbb
loop
cld
pop
nop
gs
xlat
aaa
mov
sub
cmp
mov
rol
in
insl
lock
outsb
outsb
jecxz
lret
and
dec
icebp
cmp
sbb
cwtl
dec
std
scas
add
rcrl
xchg
push
outsb
push
add
adc
add
loopne
push
push
mov
pop
std
jmp
xor
dec
ljmp
inc
aas
ret
into
sub
or
in
fimuls
xor
jg
cmc
cmpsl
mov
pop
jle
xor
lods
daa
dec
gs
movsl
xlat
and
push
cmc
jo
pushl
pop
jno
or
ret
sbb
sub
imul
dec
inc
jg
icebp
out
push
sbb
push
add
lret
int3
inc
addr16
lcall
jmp
js
mov
fwait
jnp
test
xlat
push
aas
cld
adcl
repnz
push
sbb
sbb
test
mov
aas
dec
or
lds
repz
jmp
dec
outsl
fcoms
clc
adc
sub
testl
popa
fiadds
mov
push
clc
jno
push
inc
daa
movsl
scas
flds
ja
pop
push
and
aam
fld
mov
mov
arpl
shrl
call
stos
xchg
add
aas
mov
test
das
and
out
insl
loop
jge
push
jo
pop
and
loop
ret
push
cs
inc
clc
add
or
xor
sbb
push
jge
or
das
fisubs
adc
pusha
dec
iret
xlat
movq
mov
pop
test
cmp
cs
mov
outsb
lock
push
lea
paddd
aas
jne
insl
imul
push
jecxz
cld
nop
rolb
notb
hlt
mov
pusha
cld
add
es
cmp
jae
test
lcall
jl
mov
cs
xor
push
sarl
outsb
mov
add
inc
sub
call
cld
pop
dec
sbb
out
or
ror
fildll
sub
out
jmp
mov
jle
imul
call
push
add
cld
jmp
jae
and
add
jg
jmp
dec
dec
push
aad
sub
and
out
jmp
fcmovnu
push
dec
lea
sbb
xchg
cmp
arpl
rolb
popa
mov
pop
nop
and
push
int3
or
jbe
jg
jmp
lods
xor
lret
pop
or
sbb
loope
adc
xor
add
adc
clc
test
push
push
mov
fwait
adc
mov
aad
mov
pop
clc
push
xchg
inc
idivb
dec
mov
aas
outsb
push
cltd
out
scas
mov
sub
jnp
mov
xor
shll
inc
mov
mov
sbb
data16
jbe
xchg
jmp
xchg
loope
sub
adc
mov
jl
cmp
ret
xchg
jecxz
inc
rolb
hlt
ss
pop
push
add
pushf
lahf
call
scas
into
push
ja
jle
nop
paddd
aad
or
dec
pop
dec
stos
mov
jle
scas
aaa
mov
out
jmp
jmp
stc
xchg
lret
sbb
and
ss
xorb
add
mov
push
shrb
add
sub
mov
out
jne
sub
lock
fisttpll
mov
pop
les
outsb
lods
lahf
repz
sub
test
dec
add
clc
lahf
or
les
fisubrs
cmpsb
loop
les
sub
addr16
movsb
mov
hlt
dec
out
mov
testb
mov
inc
mov
stos
inc
lahf
in
pop
std
inc
scas
outsb
mov
dec
sbb
push
push
int3
sub
mov
insb
add
loope
ret
add
aas
and
mov
jle
jo
adc
and
jg
cmc
negb
adcl
mov
sub
cwtl
mov
movsl
lods
aas
cld
lret
into
jbe
mov
push
jl
ret
push
ficomps
xor
dec
pop
loop
pop
stos
imul
jg
mov
add
out
xor
mulb
aad
add
push
mov
rolb
mov
fucom
jge
sbb
cli
icebp
movsl
sarl
or
rol
in
cmp
jle
pop
cs
or
insl
faddl
pop
lds
test
iret
pop
push
pop
dec
js
es
mov
sub
xadd
inc
mov
shll
push
mov
xchg
cmp
out
subb
daa
arpl
hlt
scas
push
ror
cmpsl
lahf
call
aad
pop
hlt
fildll
aaa
and
mov
gs
stos
pop
sti
jg
nop
jns
cli
or
mov
pop
pop
mov
in
adc
adc
cmp
jg
icebp
std
ljmp
test
adc
aam
jnp
inc
cwtl
rcr
scas
cmp
loopne
adc
pop
cld
mov
fimull
popf
xchg
add
cli
pushl
out
pop
movsb
adc
les
jo
repnz
les
scas
and
push
test
fs
out
in
dec
sar
ds
mov
cmp
in
popf
fistpl
mov
pop
enter
adc
inc
xchg
or
mov
addb
fnstcw
mov
sub
js
xor
sub
rcrb
dec
sub
push
ficompl
ja
movsb
adc
ret
or
mov
lds
decb
loop
cmpsb
lods
int3
sbb
mov
nop
lock
xchg
xchg
fiaddl
dec
xlat
xchg
cmpb
loope
jl
stos
ds
movups
popf
push
lcall
cmpb
sbb
in
mov
mov
cli
loopne
push
mov
lock
outsl
loope
ret
push
jg
or
jg
fidivrs
and
mov
cmp
or
push
mov
xchg
push
clc
test
fwait
addr16
jecxz
lret
inc
cmpsb
mov
lods
das
call
mov
push
and
stos
mov
ljmp
pusha
mov
pop
sub
ja
jecxz
mov
mov
adc
ja
xchg
icebp
decl
incl
pop
aas
push
in
pop
scas
pop
mov
dec
lcall
cli
mov
cmp
aam
jp
stc
test
movsb
dec
sub
pop
or
mov
adc
dec
jb,pn
xchg
jge
scas
std
push
jno
fildll
adc
cld
add
sbb
mov
xchg
jle
ds
std
clc
push
cli
je
cli
mov
jle
btr
xlat
loopne
iret
fcomps
cmp
in
push
jnp
and
push
or
push
push
rcr
in
mov
cmp
pop
push
push
out
mov
xchg
es
mov
cmpsb
lcall
test
leave
xlat
dec
repnz
and
leave
push
and
ljmp
in
dec
dec
movsb
cmp
lret
push
pop
rorb
shll
stos
in
push
mov
or
das
mov
lock
cmp
lcall
mov
stc
push
rorb
std
and
add
cmp
stos
fiadds
out
jb
das
add
loopne
dec
or
lcall
mov
sbb
inc
inc
dec
aas
inc
into
int3
cwtl
adc
ljmp
mov
jb
das
aad
int3
movsl
push
push
add
xchg
insl
insl
lcall
aam
movsl
rclb
popl
jecxz
mov
int
mov
shrl
repnz
das
clc
mov
push
add
lcall
arpl
pop
call
adc
and
into
sahf
sbb
incl
fwait
clc
sub
add
xlat
repz
xchg
jno
add
mov
add
ds
xor
fnsave
push
xor
adc
dec
inc
lea
dec
push
lcall
jl
xor
or
adc
push
out
pop
lret
inc
or
and
mov
jl
pop
ja
xor
jmp
popf
lcall
push
dec
dec
scas
pop
xor
push
loopne
stos
lds
mov
daa
cltd
dec
mov
jmp
xchg
mov
std
pop
and
decl
call
jp
lods
incl
mov
in
add
jl
adc
loop
decb
sbb
jp
pop
cmpsl
into
jmp
daa
lods
aam
xchg
sub
in
rorb
imulb
cwtl
lds
xchg
stc
js
outsl
xor
cmp
fidivs
hlt
mulb
test
push
into
push
push
lock
mov
add
mov
lock
data16
push
dec
lret
aad
or
pop
push
push
movsb
cmpsb
and
push
dec
push
xchg
arpl
jnp
repz
and
cmp
les
mov
dec
mov
dec
loope
xchg
cs
repz
sahf
rclb
cwtl
repz
mov
repz
cmp
pushl
dec
repz
or
cmp
stos
cs
sub
mov
cmp
xchg
adc
inc
sbb
das
xchg
lcall
or
ror
daa
pop
ja
jecxz
mov
cmpsl
adc
dec
pop
retw
lods
mov
inc
xchg
dec
ds
pop
pusha
adc
out
sarl
movsl
adc
movsb
pop
filds
lcall
in
adc
das
pop
loope
fisttps
std
cmp
ret
jp
mov
mov
mov
insb
lock
decl
add
cmp
xchg
mov
mov
sti
hlt
les
ficomps
push
pop
sbb
out
mov
sahf
lret
pushf
repz
ds
call
cmc
cmc
inc
cmp
mov
iret
pop
pop
mov
outsb
dec
int
orl
seta
push
shlb
sti
cwtl
jmp
pop
xor
loope
das
lock
femms
loope
jae
cmp
xchg
loopne
test
sarb
jg
icebp
jg
ljmp
push
mov
add
mov
add
fcomp
push
add
lea
decl
adc
sahf
mov
ds
lcall
lods
stc
mov
arpl
add
cmc
fadds
inc
fsubrs
repz
sahf
adc
add
xchg
mov
sahf
clc
pushl
fdivrl
in
fucom
sub
xchg
out
jmp
ret
dec
and
fisubrl
lcall
movsl
out
xchg
xor
scas
ficompl
xchg
fcompl
mov
into
lret
push
repz
sbb
pop
ljmp
xor
mov
jg
loopne
push
or
jmp
mov
scas
ret
insl
sbb
mov
xor
push
lret
push
xor
adc
adc
sbb
adc
leave
pop
into
aad
lcall
sbb
sub
xchg
fisttps
sbb
mov
ret
sub
inc
cwtl
fcomps
rclb
hlt
cmc
or
loop
fbld
test
movsl
test
fwait
push
xor
or
nop
ljmp
mov
fbld
loopne
fadds
inc
xchg
xchg
cwtl
stos
insb
dec
pop
push
insl
decl
cmp
dec
xchg
jp
xchg
jmp
por
call
out
aad
in
sti
jl
jbe
xchg
push
mov
lcall
outsb
adc
mov
stc
mov
or
jl
dec
std
dec
fisttpll
out
cld
jmp
shlb
xor
and
outsb
stc
sub
std
mov
sarb
scas
jnp
lahf
inc
rorb
decl
inc
sbb
cmpsl
into
dec
arpl
jge
in
fistps
insb
fbld
test
pop
xor
lods
lcall
push
mov
push
out
jmp
cmp
jmp
test
pop
xchg
movsb
jmp
pop
mov
pop
cmp
stos
push
and
mov
fisttpl
je
loop
mov
sbb
jmp
jns
mov
loopne
mov
fsubrs
incl
movsb
adc
pop
mov
cwtl
inc
add
aam
fs
outsb
dec
adc
filds
fsts
or
fisttps
imul
loop
decl
in
cmp
mov
xchg
aad
adcb
pushw
and
mov
cmovno
fdivr
decb
clc
mov
into
cmp
xlat
imul
test
xchg
icebp
fdivrs
scas
cmpsl
aad
sub
rcrb
dec
fidivs
cmp
scas
push
fcom
cld
decl
mov
mov
out
rorl
mov
xchg
fs
lcall
insl
lcall
xor
dec
push
jb
cmpsl
add
mov
aaa
dec
sarl
pop
pusha
jbe
inc
pop
jne
test
mov
faddp
pop
out
push
ror
dec
pop
mov
inc
xchg
sahf
push
cmp
mov
ret
pop
mov
imul
xor
fsubrs
sub
das
sar
xchg
push
fwait
pushf
pop
movl
push
pop
push
aas
or
cmc
fadds
out
ret
cmovno
pop
out
jbe
orl
and
incl
pop
fstps
mov
mov
int
xor
cmc
fsubp
popa
outsb
call
mov
mov
es
pop
or
push
dec
jge
xlat
mov
int
or
scas
les
inc
gs
xor
push
call
test
push
xor
dec
jno
outsb
xor
jle
sar
add
adc
mov
pop
outsl
pop
nop
mov
xlat
mov
bound
call
jmp
call
or
sbb
push
imulb
add
fs
cltd
lret
mov
mov
cmpsb
hlt
mov
mov
ret
in
stos
dec
fimull
inc
sar
cmp
pop
dec
loope
loope
mov
lahf
imul
in
xor
xchg
mov
imul
out
inc
xchg
adc
lock
pop
xchg
push
lds
push
sti
dec
sahf
inc
aam
orw
rolb
push
cld
push
rcrb
aad
xor
jg
mov
mov
add
adcb
movsb
cmp
call
shlb
cmpsl
incb
rcrb
aad
pop
ret
push
xchg
sub
daa
repnz
mov
push
fcmovb
decl
mov
pop
sub
cltd
sahf
mov
sub
xor
mov
mov
jle
or
lcall
scas
cmovp
les
mov
into
cmp
test
pop
pushf
cmp
sti
pop
mov
xor
push
jge
xchg
push
lods
xor
push
or
and
insb
mov
mov
into
mov
mov
xor
ret
adc
mov
mov
xor
mov
fidivs
lods
cmpsl
outsl
icebp
aas
and
cltd
into
sbb
sbb
xor
mov
cli
call
xchg
pop
inc
push
ds
ret
cmp
xor
dec
push
es
and
jo
test
outsl
mov
fs
jns
lret
mov
inc
mov
into
jno
pop
mov
dec
xor
push
and
std
lcall
jmp
or
and
ja
and
clc
lret
adc
lods
or
aaa
test
sub
mov
jle
ficoml
mov
adc
sbb
mov
pushf
lcall
clc
or
cld
jmp
jae
adc
sbbl
loop
popf
mov
movl
dec
rcll
jo
addb
mov
outsb
and
dec
je
cs
fcmovb
or
lahf
cwtl
jb
hlt
lock
mov
adc
cmp
adc
mov
or
test
mov
cmp
pop
shrb
lret
out
adc
xor
mov
pop
sub
aam
and
jmp
xchg
hlt
xchg
jmp
test
add
sahf
jg
lock
lock
pop
stc
jecxz
jns
fwait
cmpsl
push
cwtl
lods
cmpsl
call
add
in
adc
mov
repnz
dec
outsl
mov
pop
push
shl
test
inc
movsl
xor
leave
cmpsb
or
aaa
pop
or
mov
data16
inc
pop
neg
out
outsl
cld
cltd
sub
jmp
std
repz
adc
add
scas
push
popf
cmpsb
cmpsl
add
push
fiaddl
std
inc
jecxz
fisubrl
into
or
add
cmp
ds
xor
lock
jg
imul
adc
ss
mov
ret
out
xchg
dec
jo
adc
dec
xor
add
jg
mov
std
sub
loope
xchg
sahf
mov
add
out
inc
aas
push
inc
mov
scas
outsb
stc
call
ficomps
xor
and
or
decl
sub
add
pop
out
push
ffreep
xchg
xor
sbb
ljmp
jmp
sub
out
in
in
subl
or
jl
add
adc
cmp
stos
pop
xor
push
decl
sbb
outsb
cmp
lds
inc
out
bound
aam
sbb
ds
ja
hlt
aas
add
ja
mov
cmc
xlat
inc
xor
aad
loopne
call
sahf
cs
xchg
mov
add
fstpt
jne
mov
inc
xchg
cli
sub
outsb
and
fbstp
mov
sbb
xchg
adc
mov
add
pop
pop
dec
mov
mov
psraw
rorl
mov
add
les
adc
rolb
mov
ss
dec
ds
loope
mov
mov
lcall
pop
aas
jmp
mov
ficompl
sub
fsts
mov
push
add
cmc
mov
cmpsb
inc
das
ret
pop
int
xor
into
cs
push
mov
pop
mov
and
negl
popf
sub
or
pop
cmc
repz
outsb
xor
mov
adc
jg
test
mov
aad
scas
or
mov
dec
sar
out
sub
rcll
and
sbb
mov
into
out
pop
cmp
popa
sub
outsl
adc
dec
pop
outsb
mov
test
sub
incl
int3
sti
cltd
pop
and
adc
cmp
sub
sub
inc
sub
ljmp
js
int3
test
clc
mov
fs
repnz
ret
lret
and
jecxz
adc
push
push
xchg
dec
pop
xor
mov
sub
lret
xor
fisttpll
popa
inc
into
sti
ljmp
loope
or
jl
dec
aas
addb
pop
ret
ds
aad
popa
rol
enter
sub
jg
mov
add
pop
imul
inc
insb
loopne
cld
aaa
fadds
in
push
cmp
jg
and
jmp
push
jp
xor
ds
xor
shll
cmc
out
aad
decl
dec
pop
popa
or
or
popf
push
pop
ret
adc
pushl
into
dec
mov
insl
sub
xlat
cmp
adc
mov
dec
sahf
adc
push
xchg
add
pushl
jg
lods
sbb
ret
adc
mov
push
addb
fistpl
fcomp
cmp
jmp
or
xlat
pushl
in
in
cs
xchg
pop
insl
ljmp
pop
orb
inc
out
jne
insb
arpl
mov
ret
pop
or
sub
in
ds
aad
mov
mov
in
ret
outsb
pop
lcall
or
ljmp
or
add
scas
add
mov
jo
into
adc
into
pop
adc
or
dec
add
jg
xor
in
fmuls
test
test
cltd
int
ljmp
repnz
push
mov
push
cld
fildll
into
push
sub
js
ljmp
out
jge
xor
icebp
pop
mov
or
cli
ret
pop
lock
call
pop
sbb
popa
cmp
mov
sbb
cs
push
adc
decl
fidivs
imul
xorb
dec
pop
adc
cmpsl
divb
gs
mov
jg
mov
int3
sbb
neg
paddq
pusha
lret
lods
pop
inc
std
fistps
sbb
pop
lea
push
or
data16
lods
or
push
mov
pop
jne
rcrb
dec
in
imul
out
or
dec
shll
das
subb
jmp
or
test
lock
add
jo,pn
sub
cld
lahf
pop
or
mov
xchg
imul
int
lret
icebp
aaa
out
ret
and
roll
push
ljmp
cmove
into
rcr
imul
cmpsb
or
adc
sahf
aaa
cld
das
cli
int3
cld
push
cmp
cli
mov
push
insl
punpckhwd
jle
cli
pusha
mov
test
pop
outsb
pushf
aas
in
adc
xor
iret
push
sbb
mov
loopne
pop
dec
add
fists
fldt
or
out
add
mov
push
aaa
dec
add
dec
bound
das
ret
pusha
or
lock
call
dec
aas
fsts
scas
sub
add
repz
pushf
cmp
negb
aad
push
loopne
filds
add
ds
adc
xor
mov
sub
call
cmp
xor
aaa
pop
or
aam
icebp
xor
xor
fildll
dec
adc
inc
sarl
pop
and
out
add
mov
popf
addr16
sbb
outsb
scas
sbb
jg
dec
nop
lds
sub
int3
dec
adc
jmp
ja
xchg
rorl
or
outsb
mov
xchg
add
loope
ss
jg
push
out
aas
sub
xor
insb
cmpsb
xor
jmp
insb
add
ljmp
in
mov
test
das
dec
xchg
psrad
fcompl
push
push
scas
add
icebp
jl
fistps
cmp
into
lahf
add
inc
mov
sub
cmc
dec
pop
aad
push
sub
mov
out
cmp
lcall
call
gs
xor
mov
jmp
fwait
cld
bound
das
sbb
pop
addr16
mov
dec
add
lahf
movsb
add
fbld
mov
out
mov
ret
frstor
sub
call
shlb
pop
jmp
imul
adc
movsl
xchg
fs
mov
rorl
mov
jo
jnp
call
test
mov
and
cmp
jmp
mov
xchg
lcall
lods
pop
mov
xchg
lea
mov
and
and
roll
loope
add
hlt
add
fwait
in
ljmp
rorb
cli
pushl
bound
xor
insb
pop
mov
xchg
std
mov
sbb
gs
dec
xchg
sbb
sti
out
in
decl
movsl
lcall
and
orb
iret
outsl
in
jecxz
sbb
mov
decb
sar
mov
sub
sbb
xor
mov
pop
xchg
out
in
sub
arpl
jno
daa
mov
test
add
ja
push
push
lods
adc
cmpsl
leave
fnstcw
sahf
fs
loope
mov
decl
cwtl
lock
inc
add
rcrl
sub
test
aas
and
mov
in
add
ss
jnp
out
push
add
xor
ret
jmp
dec
cmp
adc
hlt
xchg
insb
lcall
out
dec
push
cmp
inc
out
push
in
xor
pop
scas
aam
and
xchg
fldl
testl
call
outsb
jne
jbe
mov
shrb
shrb
xor
out
push
mov
fildll
xor
adcb
add
jo
mov
mov
cmp
pop
or
inc
cmp
icebp
cmp
in
pop
lea
imul
int3
adc
lea
test
shl
rcrl
adc
movsb
adc
sub
lret
mov
shlb
out
aas
sbb
sub
and
fidivrl
add
arpl
and
fldl
into
push
pop
or
dec
sbb
xchg
ds
mov
ror
rorl
xor
loope
ficomps
cltd
mov
imulb
pop
mov
mov
mov
push
fistl
or
mov
add
shl
ds
pop
dec
push
lcall
mov
inc
lret
jb
sbb
shlb
pop
sbb
ret
loope
xchg
or
fnsave
push
das
xchg
xchg
sub
xchg
or
push
je
repnz
sbb
out
or
fcomi
jb
lret
shl
mov
pusha
int
lahf
negl
mov
jl
adc
add
or
cmpsb
loop
cld
jg
into
decb
test
and
ja
or
inc
add
push
push
cmp
xor
ljmp
adc
sub
jp
in
jl
and
enter
cs
scas
ljmp
jge
xchg
outsl
mov
add
rcr
add
loop
stc
mov
cmp
and
pushl
sahf
xchg
shll
xlat
cmp
ret
add
mov
pop
xor
cltd
push
inc
adc
mov
cltd
in
shrl
pop
fbld
cmpsb
mov
mov
ja
loop
mov
mov
jmp
xchg
cmp
fdivp
mov
aad
or
lock
ljmp
imul
out
stos
fmull
int3
cli
mov
cli
dec
cli
orl
push
pop
and
sbb
dec
xchg
push
cmc
ja
rorb
and
neg
hlt
call
pop
inc
sub
jmp
mov
ds
mov
addr16
lcall
popf
xchg
cmp
into
pop
cmp
lea
sbb
or
fisttps
es
pop
xchg
aaa
ljmp
fwait
push
aad
mov
add
ds
mov
mov
sub
aam
test
lahf
lea
fwait
push
testb
push
int3
jp
pop
enter
mov
push
loope
inc
aas
outsb
xchg
dec
push
sbb
outsl
outsl
pop
scas
push
pop
fcoml
push
das
xchg
or
fbld
loopne
cmpsb
pop
es
push
mov
out
lods
into
imul
mov
cmp
pop
ja
rorb
jg
incl
lods
xor
movsl
cmpl
daa
pushf
or
ljmp
ljmp
add
bound
lods
clc
lret
push
mov
es
ljmp
sbb
dec
ja
test
fadds
frstor
adc
pop
push
repz
cmp
dec
pushf
mov
cmp
push
popf
outsb
adc
sub
subl
mov
jne
mov
popf
mov
adc
jae
pop
in
dec
scas
lcall
mov
fists
mov
pop
aas
leave
pop
jmp
xor
adc
ror
jnp
ljmp
pop
xor
and
sub
cmp
stc
leave
cmp
xchg
push
adc
mov
sahf
sub
add
movsb
xor
fucomp
dec
test
jmp
lcall
adc
fwait
repnz
scas
stos
lret
xchg
nop
sbb
inc
aad
inc
xchg
outsb
adc
loope
arpl
outsb
add
cwtl
cmp
sub
sub
icebp
setle
jmp
movl
scas
inc
cmp
leave
mov
in
test
push
mov
ljmp
outsb
stos
ja
fndisi(8087
lods
jo
popf
pop
daa
fisubl
jecxz
cmc
lcall
pop
sub
pop
xorl
jle
push
push
push
pop
fisttps
insl
fiadds
mov
adc
xor
xor
or
clc
mov
xchg
fcoms
adc
mov
mov
mov
pop
lret
add
fimuls
cwtl
or
outsb
bound
cli
imul
scas
jge
mov
xor
icebp
lcall
fsubr
cltd
in
push
jnp
or
sbb
aam
insb
mov
dec
push
out
xchg
es
decl
sbb
mov
cmc
ss
xchg
pop
loopne
push
pop
cmp
push
sbbb
add
mov
pop
sar
sarb
stc
sub
fwait
shll
sbb
jb
ja
outsb
inc
movsb
jmp
xor
mov
xor
loop
mov
pop
xor
test
ds
aam
or
popa
sti
inc
and
pop
lcall
stc
clc
gs
dec
mov
int3
int
lcall
pop
mov
jle
mulb
lcall
scas
pop
imul
call
pop
test
mov
mov
xor
out
inc
sub
lds
lcall
stos
repz
xlat
out
fbld
aam
orl
arpl
fbld
push
xor
mov
push
inc
dec
fdivrs
into
and
cmpsl
mov
pop
std
cs
xorl
xchg
ret
lds
outsl
pusha
inc
jmp
in
es
lods
outsb
lret
sbb
xchg
scas
cli
inc
jecxz
jl
std
inc
ds
pop
mov
push
call
sahf
inc
mov
xchg
cs
ds
sub
lea
adc
push
stc
lret
mov
in
fidivs
cwtl
repz
cmpsl
lret
cmp
inc
lock
push
fldt
lcall
jb
or
roll
mov
xchg
mov
pop
mov
ret
pop
scas
rorl
shll
in
out
psadbw
outsb
fldl
ljmp
std
scas
jo
icebp
adc
mov
lock
repz
sete
jno
mov
fstl
cli
sbb
sub
dec
pushf
das
movl
jl
in
aad
and
test
insl
std
movsb
pop
lds
cmp
pushl
std
sbb
movsl
sub
das
dec
jmp
ljmp
test
mov
dec
outsb
mov
lock
mov
pop
mov
iret
jno
push
push
dec
cmp
or
call
aas
fdivrl
ret
push
xlat
fdivrl
std
decb
jmp
cmc
insb
push
icebp
lcall
push
out
das
mov
cmpsb
push
daa
and
lcall
jle
imull
cs
push
or
outsb
js
mov
decl
mov
push
xchg
sub
dec
mov
shll
mov
xchg
push
inc
add
ljmp
outsb
pop
or
mov
push
jg
push
mov
pop
ss
xchg
insl
decl
inc
push
or
loope
inc
adc
add
bound
dec
lock
or
int
les
fwait
cmc
ret
pop
cs
xchg
into
outsl
cli
ljmp
lds
loope
inc
ficomps
add
nop
lods
adc
sar
jg
lods
data16
in
xor
xchg
add
adc
ljmp
mov
cli
nop
and
test
mov
xor
and
bound
xor
mov
push
test
sbb
push
cmpsb
pop
lcall
pusha
lahf
and
mov
jns
into
and
ljmp
fnsave
das
ss
jp
jbe
or
out
sub
mov
add
adc
in
icebp
scas
adc
dec
aas
subb
inc
sbb
sub
outsb
mov
ja
and
xor
cld
push
xchg
or
pop
xchg
push
adc
rclb
mov
sub
adc
adc
sahf
inc
or
xor
test
push
xchg
jecxz
ljmp
mov
sbb
pop
jle
test
hlt
inc
and
movsb
cmpsl
adc
test
dec
aas
gs
inc
mov
lods
inc
daa
ja
push
loope
hlt
dec
push
clc
popf
cli
xchg
fldl
adc
outsb
clc
push
mov
cmp
or
orb
scas
mov
shrb
loopne
mov
test
decl
lret
or
ror
inc
dec
sub
lahf
loope
inc
pop
ds
adc
jg
mov
fldt
mov
lret
leave
test
out
xor
push
sarb
idiv
pop
rcrb
clc
jne
test
and
mov
test
nop
jo
outsl
add
call
shlb
push
lcall
push
insl
cli
or
jo
dec
out
or
lock
adc
jg
lods
ljmp
sub
call
out
pop
imull
aad
loopne
pop
pop
stos
movsb
jg
sbb
pop
inc
xchg
rorb
jg
mov
insl
fisubrs
fidivrs
sub
call
jg
and
mov
cmpsl
out
repz
mov
sub
icebp
mov
mov
loope
icebp
lret
dec
cwtl
scas
cli
push
sbb
loop
mov
sub
fiadds
ret
xor
mov
push
ss
xchg
ficoms
in
int
push
xor
cltd
dec
fiadds
stos
push
pop
cli
test
inc
negl
mov
clc
mov
xor
jb
clc
cltd
stc
or
mov
adc
test
mov
xor
pop
dec
mov
hlt
stc
adc
mov
cli
add
daa
push
out
xchg
dec
pop
mov
sub
fimuls
push
cmp
call
and
cli
or
sub
jmp
xor
popa
inc
pop
or
add
mov
ds
xor
mov
fwait
jo
push
outsb
cmp
sub
insl
out
mov
lcall
cmp
or
cmpsb
push
dec
mov
lock
push
push
lds
stc
mov
ficompl
fimull
decb
mov
jge
pusha
sbb
in
insb
lret
out
aad
popf
call
cmp
xor
mov
sbb
lods
cltd
push
cli
adc
leave
cli
cmpsb
insl
pop
jmp
dec
int
out
ret
add
jg
adc
dec
jle
pop
ss
inc
ja
cmpsl
iret
cli
add
lret
enter
out
mov
and
lret
outsb
out
outsb
mov
fcomip
es
fwait
xchg
or
fucomip
mov
bound
lods
popl
mov
push
into
cmp
incl
outsl
xchg
mov
pop
dec
mov
add
movsb
and
or
or
cld
jecxz
lcall
pop
mov
jne
or
testb
mov
mul
leave
cld
ret
pop
xchg
or
inc
push
stc
or
push
inc
ljmp
out
mov
fdivrp
cmp
fistps
sbb
jmp
mov
dec
sbb
adc
out
push
dec
lea
inc
loop
outsb
xor
loope
int3
scas
dec
mov
fcmovnb
xor
cs
in
leave
xor
out
clc
dec
lret
out
xchg
mov
or
jmp
or
or
inc
repnz
pop
pusha
mov
jg
mov
pop
cmpsb
int3
int
xchg
ds
cmc
mov
pop
sub
ret
mov
pop
inc
mov
incl
lcall
cmp
loopne
lcall
mov
shll
aam
mov
ljmp
or
enter
in
sbb
sub
ljmp
clc
mov
hlt
dec
cmp
decl
scas
movsl
shl
fs
or
clc
push
adc
xchg
sub
pushf
scas
pop
push
ret
sarb
or
inc
xlat
add
incl
std
pop
int3
int3
sub
nop
jge
int3
adc
insb
xor
and
cmpsb
inc
xchg
aam
cmp
xchg
inc
jmp
add
pop
xorl
pop
sahf
lods
mov
inc
or
dec
ret
and
aaa
dec
cmc
je
incb
pop
clc
jg
mov
cmp
lret
fwait
mov
ljmp
sarl
cmpsb
ffreep
mov
cmp
loop,pn
popa
test
xchg
mov
test
mov
in
sbb
loop
lcall
inc
enter
sar
mov
pop
aam
movsl
mov
mov
imul
fs
clc
jg
pop
testl
ljmp
out
and
mov
aaa
pop
popf
or
out
adc
jno
mov
sar
xchg
push
cmpsb
cwtl
adc
das
mov
int3
fldt
bound
aad
stos
call
mov
aaa
add
adc
es
ljmp
in
dec
lahf
ss
cmpsl
cli
mov
xorl
je
dec
sub
lock
scas
test
shrb
pop
adc
xchg
das
test
mov
jg
inc
mov
push
leave
mov
lods
mov
sub
jmp
sbb
jno
test
mov
dec
adc
mov
das
add
clc
inc
and
xchg
ret
jmp
cs
mov
jmp
jp
xchg
out
adc
sbb
insb
jbe
aas
scas
jmp
sub
xchg
ror
jge
fstl
cs
test
in
lcall
out
push
jp
movsl
inc
shrb
jns
sub
lods
ffreep
and
push
movsb
std
adcl
push
push
cmpsl
cs
mov
shr
ret
jns
xchg
in
add
es
cmp
sahf
and
call
unpckhps
cmpl
adc
xlat
sbb
and
lock
scas
or
sbb
int
mov
add
fsubrl
test
adc
in
sbb
dec
ret
push
mov
in
or
ror
xor
cld
icebp
decl
pusha
cld
sub
cmp
out
xlat
loopne
imul
clc
mov
push
leave
pop
jmp
loopne
je
in
jg
out
out
das
mov
inc
cld
xlat
test
xor
jne
scas
cmpsl
cs
add
incl
ljmp
or
lds
xchg
lcall
lock
push
dec
push
mov
ljmp
mov
enter
pusha
mov
push
jmp
test
fcomip
jmp
or
ficoms
xlat
rcll
loop
xchg
js
pusha
xor
test
fists
push
sar
add
push
daa
dec
cmc
xor
mov
cmc
es
push
xchg
shll
jnp
ja
clc
pop
scas
adc
sub
lods
int3
cmpsb
insb
mov
fadds
jo
mov
add
mov
repz
adc
pop
repnz
dec
adc
loopne
mov
mov
sahf
xor
insl
ret
pusha
ds
and
sbb
fiadds
cmp
sbb
pushl
lods
les
push
xor
pop
cmovs
xchg
pop
sbb
popf
xchg
push
mov
sbb
pop
mov
cmp
into
adc
push
mov
cs
test
das
cli
xchg
push
rcrl
add
fs
mov
out
jmp
sbb
sti
js
mov
jo
inc
xor
push
inc
out
outsl
fmuls
push
mov
out
call
cmp
arpl
pop
and
bndldx
jp
mov
push
xor
add
pop
movsl
mov
leave
mov
adc
mov
aam
dec
xor
mov
repz
mov
ljmp
cmp
pusha
std
rcll
dec
cmpb
push
inc
jl
jecxz
sub
pushl
ljmp
or
mov
out
leave
pushf
xorb
mov
adc
lock
mov
aad
jo
inc
sbb
inc
test
mov
out
sub
cli
loopne
shll
shl
into
xchg
pop
ret
or
or
shll
fidivl
ljmp
add
bound
enter
movsl
flds
cmpsl
ljmp
xchg
or
sbb
scas
sarl
mov
jg
call
push
xchg
mov
and
mov
inc
mov
mov
xchg
dec
jg
test
adc
sub
xchg
into
cs
pop
mov
mov
test
dec
adc
das
or
cs
xchg
das
and
sub
cli
mov
push
adc
cmpsb
shlb
xor
int3
push
add
push
cmc
or
sbbb
popf
fistpl
fisttpll
lret
sbb
cmp
sahf
push
ljmp
pop
inc
mov
cmp
ret
scas
push
or
add
xor
mov
in
inc
dec
cld
add
shlb
cmp
mov
test
popf
inc
ljmp
xchg
decl
test
push
mov
sbb
repnz
add
jne
pop
dec
mov
es
les
mov
mov
sbb
sahf
loope
xor
mov
sbb
in
pop
out
add
pushf
adc
jg
or
lods
xor
mov
pop
rorb
pusha
xchg
fs
xor
outsb
stc
mov
pushf
mov
add
into
push
xor
or
sahf
cs
jg
and
xor
jecxz
adc
lahf
das
xchg
mov
repz
add
cmp
add
scas
clc
adc
xchg
out
cld
das
sarb
cltd
stc
jge
mov
pop
xchg
lret
rorl
inc
lds
sti
jmp
decb
cmp
insl
mov
call
shll
and
jg
es
pushf
movsb
or
or
pop
dec
sub
stc
sbb
pop
lahf
sbb
pop
jg
fisubs
and
fidivs
xor
les
push
ja
sub
aad
sbb
icebp
outsb
push
loopne
sub
push
pop
or
sbb
jecxz
adc
clc
data16
pop
aas
test
xlat
mov
decl
into
orl
add
call
mov
push
dec
add
fwait
rolb
icebp
jmp
les
or
and
jmp
mov
or
lods
mov
pop
mov
mov
repz
lcall
mov
out
xor
popf
and
adc
xor
push
jge
mov
in
jb
add
xor
inc
xlat
cld
incl
and
lret
cwtl
fs
xchg
adc
jmp
or
dec
loopne
push
sti
idivl
jmp
ret
adc
fisubl
adc
jne
mov
xchg
dec
test
sub
scas
lret
aas
push
and
mov
sub
jmp
sahf
out
xchg
mov
sarb
cmp
xor
dec
and
in
xor
pop
lcall
add
loopne
push
cmpl
cli
in
outsl
sar
cmp
sti
fisubrs
push
sahf
test
mov
ljmp
push
add
movsb
loopne
sbb
test
cmpsl
dec
lcall
dec
mov
push
add
ljmp
mov
mov
pop
in
std
aas
jp
fstl
pushf
decl
add
xor
scas
adc
add
lds
cli
ljmp
dec
test
cmp
cmpsl
jmp
mov
lret
cmpsb
push
sahf
jge
dec
into
mov
sub
lods
stos
ret
incl
ss
stos
jle
adc
sub
cli
inc
mov
imul
push
pop
sti
or
out
mov
cli
and
add
or
push
out
fisubrl
dec
push
sbb
add
xchg
xchg
jle
sub
popa
test
divb
imul
sahf
dec
andl
incl
cmc
aaa
add
int3
and
jmp
fmul
test
into
or
mov
sbb
mov
call
lock
ret
jecxz
out
aam
jmp
ljmp
cld
aas
gs
inc
mov
bound
cltd
jae
xlat
jmp
insb
mov
insb
movsb
and
push
jg
ljmp
call
arpl
int
dec
insl
sarb
cmp
insb
pop
pop
inc
pop
add
adc
jmp
call
lret
mov
sub
jbe
push
inc
pop
cltd
add
lahf
in
dec
fwait
insl
std
das
into
lret
pop
sbb
jbe
mov
cmp
clc
sahf
pop
push
inc
scas
je
sbb
dec
cmpl
fmuls
add
orb
xchg
pop
lea
cli
lcall
push
pop
popf
or
push
cmp
cmpsl
adc
push
adc
cli
jnp
sub
iret
sbb
and
sbb
vpshaw
sub
sub
jne
out
clc
lcall
movhps
sub
in
lahf
fstl
jo
ss
aaa
or
jg
test
out
sub
mull
int3
fld
lds
stos
and
inc
adc
cmp
mov
out
stc
mov
and
cltd
scas
clc
pop
popa
rcr
in
xor
push
cmpsb
xchg
cltd
out
jg
movsl
ljmp
insb
loope
push
add
lock
xchg
pop
jno
pop
frstor
mov
mov
fldcw
or
sbb
arpl
lods
aam
jle
call
and
movsb
xor
inc
push
mov
loope
out
es
mul
push
push
and
ja
push
push
std
hlt
sbb
sbbl
das
rorb
or
dec
fs
pop
or
scas
xor
stc
mov
ds
jmp
mov
jmp
insb
shlb
inc
cmp
stc
xchg
addb
cld
addr16
or
push
jns
test
cwtl
pop
imul
mov
pushf
push
mov
xchg
add
mov
inc
loopne
aad
filds
sahf
add
xchg
sub
pop
mov
cmpsl
and
loop
int3
jg
add
xor
insb
cld
sbb
or
incl
mov
out
in
shll
orb
rclb
nop
fldl
mov
mov
sub
cmc
inc
pop
lds
pop
pop
inc
imul
ret
clc
mov
lcall
sbb
jg
push
out
push
out
add
mov
pop
inc
mov
ljmp
mov
roll
decl
mov
out
pushf
and
add
fwait
outsb
js
cli
jg
push
add
repnz
pop
mov
cmpl
test
inc
mov
or
rcll
or
rclb
push
jmp
push
cs
clc
in
hlt
imull
mov
pop
aad
pusha
adc
xor
ljmp
es
ljmp
sub
in
cli
icebp
stos
mov
int
push
popa
jge
sub
sub
int
add
adc
sub
scas
fnstenv
add
aad
pusha
scas
fs
out
and
jp
xor
stc
jle
add
sbb
mov
push
push
push
shll
push
dec
testl
in
and
lds
test
pop
scas
sar
stos
jg
in
dec
insl
mov
dec
push
lahf
adc
sub
out
or
xchg
stos
jno
adc
pop
aaa
stos
test
nop
mov
and
pop
movsl
out
adc
mov
movsb
push
cmp
pop
fsubrl
call
movsl
mov
movsb
push
xchg
mov
dec
push
gs
mov
outsb
jae
jle
fisubl
pop
out
xchg
cltd
and
sub
push
aam
mov
adc
xor
loop
rcll
imul
sarl
out
xor
jg
mov
jl
mov
hlt
fimuls
insl
xor
sub
cli
ljmp
cld
dec
add
std
fstpt
xor
ret
xor
dec
push
mov
dec
ja
mov
push
pop
shrb
or
subl
xor
test
add
cli
mov
mov
cmpsl
ret
rcrb
movsb
adc
fisttps
jo
hlt
lret
clc
inc
mov
sub
push
or
orl
nop
inc
je
pop
push
insl
cld
shrb
and
call
loope
sarl
ror
sub
sti
into
sbb
or
fsubp
pushf
js
shrb
das
shrb
divl
xor
rclb
loop
aaa
inc
ds
daa
rorl
fstp
aaa
cs
aad
and
outsb
mov
push
dec
pop
add
call
ret
cmpsb
je
pop
mov
rol
or
test
push
outsl
into
sbb
call
ss
fwait
add
into
xchg
sub
ffreep
out
sbbb
mov
push
test
outsb
jp
jle
mov
shrb
jp
shr
ss
ds
cmp
push
aad
incb
out
pop
push
and
lock
pop
lcall
mov
sar
cwtl
jg
mov
fiadds
adc
or
shr
or
mov
decl
in
mov
jmp
xor
inc
jecxz
and
mov
iret
sub
repnz
imul
sbb
test
mov
movsl
int3
adc
sub
push
cmpsl
ljmp
aam
sbbl
pop
adc
call
pop
sti
imul
mov
and
mov
inc
sahf
hlt
cli
ljmp
mov
pop
cmp
inc
sahf
loop
push
lods
or
fs
dec
loopne
pop
outsb
xchg
incl
test
cmp
and
in
lock
hlt
mov
pop
sub
fimuls
mov
cld
ljmp
outsb
das
adc
push
loop
adc
loopne
mov
scas
add
lahf
adc
arpl
inc
xorb
inc
dec
xor
cwtl
lods
sbb
sub
jp
popa
out
jecxz
decb
push
popa
shrb
pop
or
mov
aas
mov
lock
mov
inc
cmp
push
sub
sbb
inc
outsb
adc
mov
add
xlat
fcmovnu
mov
movsb
popf
sub
fcmovnbe
push
cmp
fildl
jecxz
inc
loop
push
imul
movsb
adc
or
jns
inc
mov
sbb
es
push
jo
fcom
mov
ret
or
add
add
inc
imul
js
adc
ds
decl
pop
into
clc
scas
test
sub
data16
add
push
mov
mov
jmp
rclb
and
in
and
sbb
sahf
or
cld
bound
sub
or
faddl
std
pop
popa
pop
inc
sub
pop
mov
sub
loop
mov
scas
cmp
in
repnz
add
adc
movsl
sbb
sub
or
xor
dec
push
ljmp
in
cmp
out
adc
ljmp
out
aam
lods
fisttps
cmp
lret
and
sub
rcrl
popa
test
or
pop
add
clc
outsb
add
mov
or
into
loop
pop
inc
or
jmp
push
sbb
stos
faddl
outsb
pushl
orl
mov
xor
das
movsb
mov
and
mov
inc
sbb
dec
cs
adc
mov
cmp
jno
pop
imul
adc
mov
jg
cmc
xor
and
xchg
pop
xchg
sub
rcrb
stos
push
sbb
test
adc
jle
xor
or
fwait
push
lret
lret
push
push
loop
sbb
ds
call
rorl
das
and
aam
dec
fdivr
fsubp
jb
loope
add
add
push
inc
add
push
jle
push
fsqrt
loop
dec
lock
pop
inc
xchg
ljmp
scas
ljmp
xchg
je
dec
xor
push
jmp
lret
rorl
inc
push
mov
dec
push
lahf
mov
cmp
stos
decl
outsb
cmp
fadds
push
ds
mov
cwtl
dec
div
cwtl
cli
scas
mov
add
dec
fldenv
dec
adc
enter
xchg
push
sub
sar
fwait
test
shr
or
call
outsb
sub
lcall
ja
es
sub
lods
push
dec
shlb
incl
xor
leave
bound
outsl
ss
cld
mov
adc
out
in
loopne
mov
aaa
jne
pop
out
cltd
lods
rclb
mov
cli
pop
xor
fsin
mov
repz
arpl
xlat
add
mov
push
and
mov
ljmp
fisttpl
rcrb
lcall
jg
pop
aam
push
sub
cmp
loop
rcr
jle
lods
in
dec
leave
push
mov
ljmp
icebp
dec
out
add
loopne
push
sub
clc
mov
push
jmp
fdivrs
adc
call
sahf
repz
outsl
cmp
add
dec
call
sbb
call
adc
outsb
and
add
push
push
cs
mov
and
mov
test
cld
pop
pop
aam
pusha
dec
mov
cmp
cmpsl
mov
jle
xchg
out
incl
mov
cwtl
cmovp
jno
ja
fs
movsl
sub
fimull
fld
mov
push
lock
and
cltd
xlat
hlt
adc
mov
mov
outsl
cmpsb
fwait
into
shrl
inc
jge
fldl2e
shll
jg
stos
movsb
mov
insl
stc
and
in
mov
add
lcall
push
pop
mov
jg
cld
incl
jmp
cmpsl
or
pop
xchg
inc
and
cli
cmp
add
pushf
mov
inc
pop
into
lock
aaa
std
xor
je
hlt
incl
test
mov
lahf
xchg
ret
shrl
pop
in
lods
fcmovbe
sahf
aad
xor
call
fcos
dec
or
lret
mov
push
shll
stos
xor
jle
or
loopne
mov
jne
test
mov
or
push
incb
jle
stos
loope
outsb
ds
sahf
or
cmpsl
ret
add
mov
fsubrp
stos
jmpw
xchg
or
adc
sub
cmp
ds
push
adc
mov
out
adc
dec
cwtl
push
decl
push
test
sbb
dec
bound
mov
shlb
inc
pop
sub
sahf
daa
lods
jle
sub
mov
out
cmp
adc
mov
int
lods
cmc
aam
sub
jle
adc
mov
int
xchg
ds
scas
cmp
aaa
sbb
mov
push
nop
insl
inc
xchg
add
mov
jno
inc
xchg
leave
xor
jle
mov
inc
pusha
inc
mov
test
mov
mov
push
pop
das
ss
jmp
into
sub
cs
mov
ret
mov
in
pop
shl
sub
movsl
or
cmc
mov
aam
stos
cwtl
xchg
ljmp
cmc
push
mov
loop
push
stos
dec
mov
flds
filds
pusha
ret
outsb
loopne
jg
daa
lods
test
mov
daa
mov
shll
loope
or
pop
addr16
mov
add
xchg
jne
test
push
mov
add
pop
das
pop
mov
test
and
or
jbe
decl
push
outsb
or
push
gs
fdivrs
call
scas
das
mov
data16
mov
xchg
cld
mov
pop
mov
mov
push
or
inc
cwtl
mov
divl
ret
or
test
pop
pop
and
push
sahf
cmc
mov
loop
lods
jbe
popa
insl
addl
add
out
cmpsl
push
dec
ss
mov
xchg
clc
daa
add
filds
out
xchg
gs
ds
mov
outsl
and
idivb
push
pop
push
je
sahf
jg
sbb
add
mov
xor
mov
or
xchg
cli
test
push
xchg
clc
mov
out
loopne
adc
pop
idiv
mov
jno
and
or
sub
gs
cmp
add
xor
movsb
mov
repz
dec
call
out
push
lea
dec
fnsave
dec
call
in
or
mov
adc
mov
pop
std
in
add
jl
dec
iret
push
cmpsb
outsb
sub
adc
movsl
and
or
pop
arpl
enter
mov
popf
daa
test
aas
xchg
push
lret
sub
data16
xchg
jne
loope
sbb
call
sub
ljmp
xchg
or
les
push
pop
mov
mov
dec
loope
stos
ss
pop
movsb
xchg
sbb
cmc
mov
ljmp
lods
add
loop
and
adc
mov
mov
sahf
fcomip
stos
sbb
or
xchg
sar
andl
adc
aaa
into
loop
lds
inc
mov
inc
sub
clc
adc
lret
and
incl
dec
mov
jmp
jg
in
leave
mov
xlat
jle
test
mov
mov
or
lods
dec
cwtl
sub
fidivs
jmp
orl
cmp
jge
repz
outsb
popf
je
lret
xor
mov
lds
inc
icebp
adc
mov
mov
out
xchg
or
inc
push
out
adc
pushl
xchg
xlat
lea
sbb
rcr
cmp
fsubl
loopne
push
addr16
sbb
xor
cmp
setg
rcll
aaa
outsb
setnp
or
lret
dec
aad
jg
xor
adc
pop
fwait
and
jbe
ds
adc
or
add
and
pushf
sbb
mov
das
inc
fsubl
xor
push
cmp
je
push
cs
lsl
shlb
pop
add
loop
jg
scas
xchg
ds
mov
jb
jle
rclb
lock
arpl
jns,pn
or
dec
xchg
mov
mov
lahf
jae
add
hlt
inc
mov
adc
or
pop
inc
or
add
mov
inc
jno
orl
loope
mov
mov
sub
xchg
xor
mov
andl
push
sahf
lret
leave
in
jg
dec
lods
aaa
xchg
das
push
sub
push
fildl
loopne
fnsave
or
jge
cli
incl
notl
or
lahf
sbb
daa
sub
call
orb
xchg
in
mov
fs
pop
mov
lcall
outsb
push
cmc
jo
sub
in
push
les
sahf
sahf
loope
pop
sub
dec
jb
lock
pop
pop
sti
cmpsl
arpl
inc
add
cmpsb
out
and
jne
js
dec
clc
sub
ja
or
orl
movsb
out
clc
jg
push
arpl
out
xlat
hlt
cld
push
fwait
shll
sbb
bound
adc
add
mov
std
mov
jge
aas
push
or
into
lcall
out
fcomp
push
pushl
into
add
icebp
vpaddusw
sub
fistpl
cmp
dec
cmpsl
pop
cmp
xchg
dec
add
inc
inc
lcall
sub
mov
leave
into
sub
cmpsl
cmp
pop
mov
jle
adc
lods
fs
add
scas
outsl
inc
push
out
call
sbb
scas
imul
mov
adc
push
xchg
mov
mov
mov
mov
push
test
iret
inc
mov
pop
pop
push
in
xchg
or
outsb
add
jmp
mov
dec
or
lcall
int3
dec
xchg
fs
jg
repnz
out
cmp
pop
push
aaa
xchg
sbb
or
imul
js
popf
ss
jecxz
outsl
pusha
test
loope
and
xlat
cld
pop
jo
xchg
xor
outsl
cmpsb
fidivs
push
fmul
aas
orl
push
push
enter
jns
stc
adc
mov
jmp
dec
jecxz
or
mov
mov
es
incl
mov
mov
bound
scas
mov
cwtl
adc
mov
jae
push
dec
ret
jl
pop
cld
imul
dec
movsl
cmp
inc
mov
xchg
hlt
xchg
inc
sub
sub
adcl
jg
push
jb
push
inc
std
inc
sahf
test
push
stos
insl
shlb
adcb
jb
inc
ljmp
test
mov
arpl
sub
cmp
add
push
cmp
loopne
inc
enter
mov
mov
xchg
push
rol
call
cmpsb
xor
lahf
sub
adcb
jmp
mov
pop
cli
adcl
jge
lahf
stos
out
and
mov
cltd
adc
daa
fwait
test
push
andb
xchg
sbb
mov
cld
dec
sti
lcall
pop
orb
incl
jg
cmp
adc
push
setbe
call
ljmp
mov
add
sub
lcall
sbb
cwtl
xor
mov
jl
dec
sbb
pop
outsb
cwtl
scas
xchg
mov
add
movsb
repnz
movsb
inc
out
ljmp
mov
fcoml
fdivr
inc
std
ljmp
call
loop
push
imul
adc
mov
shlb
lock
mov
xchg
dec
pop
xchg
sar
aaa
mov
call
gs
jmp
outsl
mov
push
cmp
std
dec
cld
dec
mov
mov
mov
dec
pop
andb
add
in
icebp
cli
jl
lods
sarb
sbb
cmpsl
and
mov
loop
adc
dec
insl
pop
repnz
mov
shl
test
push
mov
cltd
sbb
add
ljmp
xor
pop
filds
sbb
fidivrs
xchg
mov
add
pop
das
jle
data16
or
stc
testl
add
pop
into
pop
mov
and
insl
enter
mov
incl
inc
sbb
add
cwtl
pop
stos
push
inc
cli
jg
lock
jp
and
push
xchg
or
std
and
cmp
inc
xor
in
mov
in
bound
imul
loopne
xchg
xor
add
add
dec
add
pop
inc
mov
daa
scas
out
adc
xor
mov
mov
cli
lds
sub
pop
xchg
cli
pushl
push
imul
ds
mov
sub
rorl
cmc
test
jb
mov
xor
pop
test
fwait
incl
xchg
mov
stos
arpl
jg
clc
adc
pusha
sbb
fsubp
sbb
and
mov
orb
lcall
adc
add
mov
mov
push
loopne
rcr
sub
out
sub
sbb
dec
ret
movsb
pop
mov
ljmp
adc
into
mov
pop
xor
mov
add
cs
lcall
in
xchg
or
sub
push
add
mov
sub
mov
push
mov
push
cltd
clc
mov
dec
into
push
inc
cwtl
ss
stc
fldcw
adc
inc
jle
xlat
add
dec
or
fstps
pop
popf
jnp
sbb
or
dec
sbb
mov
decl
lcall
adc
sub
das
aas
sub
jnp
or
or
shl
mov
add
insl
pushl
pop
clc
xchg
aas
enter
mov
sub
out
xlat
xor
incl
ss
aad
push
les
jae
neg
push
mov
shrb
fisubrs
loope
loop
incl
sbb
scas
fisubs
out
xchg
int
sbb
rcrl
aaa
cld
fsubl
in
xchg
xor
cwtl
addr16
mov
add
jg
leave
scas
cmpl
andb
jmp
loop
mov
loopne
lods
repnz
or
adc
jmp
mov
push
daa
addr16
stos
cli
and
ret
rcrl
add
push
clc
sarb
add
jp
incb
add
add
xchg
push
adc
add
sub
stos
mov
xchg
lods
lahf
push
sahf
mov
jle
loopne
cmpsl
in
or
clc
call
push
cld
xchg
xchg
jo
stos
or
mov
call
add
xor
fldenv
adc
xchg
addr16
aaa
sbb
xchg
data16
sti
sbb
decl
mov
sbb
or
mov
mov
ljmp
ss
xchg
push
repnz
pop
mov
mov
push
pop
loopne
add
in
jno
jb
cli
pop
jle
mov
xor
add
sub
data16
or
cmpsb
xchg
adc
rolb
pop
cwtl
iret
pop
adc
cmp
pop
push
lea
adc
mov
and
add
out
adc
les
pusha
xchg
out
and
roll
movsl
xor
ja
in
iret
jp
mov
cmpsb
cs
push
sbb
xchg
adc
lret
or
shlb
push
mov
mov
jg
jg
push
pop
push
mov
loope
cli
push
xor
sar
lcall
cmpsb
stc
xor
pop
or
sbb
push
xor
xchg
ficomps
cmpl
lret
rolb
xchg
popa
add
push
xor
push
mov
mov
incl
lods
stc
adc
adcb
add
fdivs
sbb
lahf
pop
roll
sub
xlat
shl
repnz
dec
or
or
dec
mov
or
jne
jmp
add
or
dec
shl
inc
out
bound
xchg
mov
in
lock
in
push
push
sub
pusha
lret
jle
out
cwtl
fdivl
test
mov
out
enter
nop
std
outsl
cld
lock
cmp
xor
or
pop
out
push
cmpsl
ret
rolb
jns
out
push
mov
test
xchg
repnz
lock
sahf
xchg
test
adcb
test
fisubrs
cmp
std
adc
mov
jg
adc
into
cmc
cmc
add
sub
cld
sub
mov
xchg
or
mov
imulb
push
sti
clc
mov
cmp
cmp
mov
or
inc
les
cmp
pop
imul
loopne
mov
cmpsl
mov
fsubs
scas
inc
jmp
ds
sbb
movd
fs
or
icebp
movsl
mov
aaa
dec
sub
insl
or
dec
push
aaa
in
ss
or
ret
sub
ret
dec
or
sarb
pushf
push
cs
decb
pop
sbb
addr16
jmp
xlat
pop
sahf
loope
ja
dec
lret
or
nop
inc
rcr
push
inc
loopne
nop
and
sub
ljmp
movsb
out
in
push
incb
les
sub
das
mov
shl
aas
mov
pop
js
pop
xor
aas
or
js
pop
jns
cmp
or
hlt
and
mov
subl
scas
in
data16
dec
pop
fsubr
rcrb
inc
mov
loop
adc
scas
mov
fsubrs
jmp
mov
iret
cmp
sahf
outsl
mov
mov
or
aaa
add
lcall
cld
mov
mov
mov
jle
cltd
aam
dec
lds
sbbl
jg
or
push
cmp
nop
pop
mov
push
mov
pushl
loope
mov
add
pop
push
xor
and
std
repz
jp
es
icebp
or
pop
bound
mov
pop
cwtl
repz
sahf
lret
jg
ljmp
or
jnp
adc
jno
add
es
sbb
decl
or
pop
mov
push
shl
test
adc
lea
pop
inc
shr
and
adc
sahf
or
xor
xchg
cs
dec
xor
xor
sbb
pop
xor
push
and
out
nop
and
jbe
movsb
mov
jle
icebp
fbld
scas
push
sbb
xor
sarl
in
sub
bound
daa
dec
adc
out
into
incl
sub
cs
fstpl
hlt
pop
push
dec
xor
sbb
pop
loope
shlb
push
mov
cli
inc
adc
fwait
sar
xchg
repz
cwtl
fstpt
push
jle
cmc
add
push
vpsrlw
sbb
push
push
mov
in
rorb
iret
add
push
xor
dec
xor
das
dec
mov
mov
mov
sarb
add
test
in
xchg
mov
mov
outsl
les
xchg
push
mov
mov
dec
xor
inc
sub
and
sbb
into
xchg
aad
xor
test
adc
mov
or
in
movsl
filds
push
sub
xchg
jecxz
xor
add
mov
lahf
and
dec
or
cmpsl
dec
idivb
jecxz
rorb
js
scas
adc
mov
mov
xlat
sub
add
or
enter
mov
outsl
decl
je
filds
mov
cmp
adc
pop
cmp
sub
xchg
lods
das
dec
and
scas
cltd
cli
mov
scas
xor
mov
mov
mov
or
add
into
sbb
insb
ret
popf
push
movsl
adcl
inc
inc
sti
ljmp
mov
cmc
loopne
into
mov
pop
push
inc
loopne
sbb
loope
jmp
adc
xor
mov
push
outsb
es
iret
ja
fdivs
js
push
popf
movsb
jp
scas
inc
add
les
xor
xchg
ret
xor
aad
push
hlt
push
mov
adc
fdivrp
sub
dec
push
inc
ret
ds
std
into
mov
push
and
and
out
lock
or
test
enter
ljmp
int
xchg
or
cmp
xor
cmp
xor
cmc
mov
pop
xor
loopne
add
je
fdivs
aaa
or
inc
insl
scas
pushl
or
pushf
and
cmp
adc
fists
ljmp
clc
and
fwait
pop
add
cli
jmp
pop
mov
shr
sub
outsb
test
push
and
xchg
ds
mov
adc
mov
lods
ds
subl
ds
call
xor
decl
fiadds
adc
or
pusha
mov
mov
sarb
lods
add
call
cwtl
rcrl
movsl
xor
popa
lcall
jg
inc
adc
mov
push
jge
adc
cmp
jg
loopne
outsl
adc
cltd
jnp
or
stc
aad
mov
clc
mov
jecxz
or
adc
iret
fildl
push
sbb
imul
call
ds
push
cld
jmp
xor
in
mov
add
call
movb
mov
xor
or
jmp
and
jne
test
decl
ret
mov
jnp
cmp
outsb
jle
xor
jl
pushf
setp
cmp
push
subl
aas
pcmpeqw
in
xchg
mov
loope
jmp
cmpsb
decl
pushl
pusha
push
xchg
mov
dec
rorl
xor
add
xor
and
push
ja
jg
jl
jb
insl
imul
aad
call
lahf
lret
aad
rolb
sub
xor
push
xchg
mov
movsb
das
movsb
push
and
loopne
hlt
sub
test
mov
addb
jb
scas
mov
repz
or
jg
cmc
test
cmpsb
mov
sub
xchg
fnstcw
aaa
lcall
sar
test
fists
mov
or
jmp
insl
mov
cmp
push
xor
sub
pop
pop
loop
xchg
loope
pushf
out
jecxz
nop
test
aaa
std
push
lret
sbb
test
popf
aaa
gs
call
mov
push
cmp
cmp
adc
inc
leave
subl
std
rcrl
mov
or
ja
or
sub
data16
push
push
or
fcoms
ljmp
fsts
xchg
orl
mov
jne
jae
outsl
and
push
cltd
inc
negl
sbb
mov
test
icebp
cmpb
clc
fwait
out
fidivrs
xlat
lods
int3
dec
fisubs
aam
inc
imul
cmpsb
dec
push
cld
xchg
scas
or
aad
add
or
cmpsb
icebp
es
out
xchg
dec
ficoms
int
pop
xchg
fisubl
aas
pop
pop
aaa
mov
or
dec
add
mov
stos
push
dec
lcall
sbb
ds
and
outsb
cltd
ret
decl
lcall
mov
mov
add
pop
add
fisubs
mov
or
lcall
inc
jle
divl
or
xchg
stc
pop
mov
sbbb
loopne
mov
xchg
mov
adc
jg
clc
iret
lcall
cmp
or
cs
dec
add
arpl
lcall
sub
movsl
dec
incb
mov
ss
push
adc
lock
adc
xchg
jl
or
call
sub
jecxz
lods
int
pusha
and
mov
decb
scas
push
in
incl
in
cmp
das
mov
in
push
cld
jno
out
mov
mov
dec
decl
out
jnp
jbe
fsubs
push
xchg
aas
mov
sub
inc
decb
cmp
pop
xchg
jns
mov
out
or
movsl
push
sbb
test
add
scas
adc
movsb
loopne
scas
pop
imul
jg
scas
xchg
ja
pop
mov
push
mov
outsb
jg
clc
hlt
daa
mov
add
mov
add
ljmp
xchg
xchg
xchg
aam
sahf
daa
sahf
mov
popa
rcrl
movsb
movsb
insb
inc
out
xor
sbb
test
add
push
xor
mov
aaa
mov
pop
ljmp
jmp
push
cmc
xor
pop
mov
and
ja
hlt
mov
jle
mov
int
sti
pushf
mov
mov
mov
sahf
cmpsb
inc
adc
sbb
ss
jg
fs
fists
pop
cld
out
and
mov
loop
mov
mov
cmp
xchg
fadds
outsl
jbe
inc
adcl
out
cmp
push
cld
dec
out
ja
arpl
aam
lret
cli
jl
xchg
adc
ja
lcall
lods
rcrb
fsubs
cs
lods
sbb
orl
mov
mov
rol
cmc
dec
cmp
adc
mov
test
ljmp
lods
adc
nop
jle
cmpsb
cmp
ret
movsl
adc
insb
xchg
lock
cltd
jg
xor
fsts
adc
stos
pop
xchg
icebp
stc
dec
sbb
cmpsl
test
and
mov
pop
jg
push
cmp
jle
test
xchg
outsl
orb
popf
int3
xchg
in
aam
sarl
xchg
push
in
sub
xchg
cwtl
aas
stos
fs
mov
jb
imul
pusha
fwait
int3
mov
call
iret
inc
es
fmulp
inc
ds
xor
and
jle
ss
pushl
mul
mov
pop
in
movsb
cmp
insb
stc
adc
xchg
mov
cli
test
negb
clc
jmp
gs
mov
mov
mov
push
pop
out
sbb
mov
push
les
cmpsb
test
cld
add
ljmp
cmpb
out
xchg
sbb
test
cld
call
push
ss
cmp
cmp
or
sbb
lcall
call
stos
iret
jmp
jo
aas
xchg
push
ljmp
mov
lds
in
xchg
add
outsb
cmc
inc
and
enter
aad
xor
das
xchg
stos
cmp
mov
push
xor
repnz
mov
lcall
push
ret
inc
ficomps
or
aam
subb
test
mov
scas
ss
and
xlat
push
incl
das
lds
jae
xchg
pop
movsb
add
sbbb
cld
or
jmp
jle
add
pop
cs
jnp
ljmp
icebp
cmpsl
cs
xlat
cli
push
imul
cltd
repnz
push
dec
out
mov
out
cld
mov
mov
push
in
pop
enter
xchg
enter
or
and
lcall
stos
aam
dec
out
mov
lcall
and
fists
mov
xchg
push
mov
test
sahf
dec
xor
xor
loopne
out
ret
ret
lock
pop
icebp
out
sub
xor
sub
movsb
adc
pop
idivl
push
cmc
or
lcall
test
push
mov
push
lds
sbb
sbb
callw
lods
imul
bound
call
imul
mov
hlt
mov
pop
xor
cmc
or
adc
shlb
pop
insb
adcb
inc
dec
xor
icebp
jmp
sbb
sbb
xchg
test
aaa
or
iret
arpl
jl
into
cmp
xor
xchg
push
adc
fldcw
daa
mov
pop
clc
and
test
popa
mov
push
add
faddp
inc
push
xor
pushf
adc
jg
or
or
xor
sub
jg
pop
pop
mov
out
das
cwtl
jb
cmp
pop
leave
mov
add
sbb
dec
orb
aas
outsb
ss
xchg
sub
jmp
lods
in
xor
das
lods
mov
xor
outsl
mov
inc
xor
in
mov
cmp
ja
xlat
add
or
aaa
jns
or
fs
scas
inc
loopne
movsl
or
add
ret
lods
testb
decb
mov
pop
dec
lret
and
pusha
jmp
pushl
pop
sub
das
fdivr
shll
sbb
xchg
shrb
mov
jecxz
fidivrs
dec
dec
sub
mov
adc
pop
dec
and
test
mov
cmp
ljmp
ds
sbb
xchg
pop
hlt
mov
push
add
nop
cmp
lods
divl
sbb
pop
jbe
xor
mov
insb
push
adc
jp
lock
mov
loop
sbb
jecxz
add
ljmp
out
inc
bound
jp
dec
mov
dec
rol
jg
clc
in
xchg
fsubrl
push
dec
mov
movsl
into
sahf
xor
add
dec
scas
lds
es
movsl
movsb
fnstsw
aaa
bound
adc
idivl
mov
out
pop
mov
call
aas
mov
lret
fisubrs
stos
ljmp
cli
pop
inc
add
nop
shl
sub
repnz
hlt
icebp
jns
mov
std
das
push
je
in
in
dec
in
sub
loope
imul
and
outsl
mov
in
add
mov
stos
ds
lock
js
mov
adc
sbb
adc
lahf
pop
push
dec
dec
scas
out
add
ret
jp
out
je
pop
and
and
or
inc
call
adc
aaa
testb
mov
fisttps
cvtps2pi
sbb
aas
ds
test
xor
or
sbb
call
sbb
es
pop
stos
push
add
filds
mov
das
adc
hlt
sbb
notl
outsl
scas
and
push
sbbb
movsl
mov
repnz
adc
mov
add
sahf
nop
xchg
test
mov
adc
imul
pop
pushf
frstor
and
sub
and
shrb
cli
cs
mov
into
orb
pop
ds
addb
xchg
cli
mov
pop
adc
mov
loope
xchg
mov
aas
and
mov
ss
xchg
stos
fsubr
rcl
push
fisubrs
mov
mov
add
or
mov
sub
lret
pop
in
vmwrite
xor
mov
adc
or
push
xor
jle
cld
popf
mov
mov
cmp
pop
mov
adc
jo
add
iret
scas
mov
push
add
lahf
out
pop
xchg
incl
xor
cmp
outsb
pop
stos
in
xchg
insb
flds
out
icebp
outsl
inc
ficomps
inc
dec
or
lea
and
or
pop
aam
imul
es
push
clc
das
add
rcl
out
jg,pn
and
sub
andb
lock
mov
xchg
mov
jecxz
mov
popf
fildll
adc
iret
clc
loop
and
js
jo
movsb
scas
aas
push
xor
push
cmc
sbb
add
push
stos
ljmp
mov
dec
add
outsb
fidivrs
cmp
push
outsb
dec
fwait
les
rorl
fs
xchg
pop
adc
dec
fisubs
dec
sahf
adc
mov
scas
das
aad
ret
call
mov
dec
pop
stos
std
xchg
push
out
ja
mov
xchg
fisubs
mov
add
inc
lahf
cmp
and
cmp
pushl
xor
or
xor
dec
lcall
add
mov
push
call
pop
subb
rcrl
clc
or
and
aad
ds
dec
pushf
jg
add
imul
jp
into
xor
xor
jle
movsb
rcrb
dec
sahf
mov
inc
out
lock
mov
jle
sub
lock
aas
lcall
out
xchg
mov
loopne
mov
adc
cs
xor
out
clc
inc
sahf
or
sbb
and
inc
cmovo
push
xchg
cmp
int
outsb
scas
pop
xor
mov
mov
adc
lar
xchg
jecxz
or
lcall
cltd
xchg
sbb
and
or
cwtl
shl
mov
pop
insb
aad
sub
mov
loope
or
xchg
lock
shlb
daa
scas
pop
subl
enter
js
and
cmp
mov
adc
mov
xchg
dec
icebp
shl
or
inc
dec
push
rol
push
fimuls
pop
mov
xchg
lahf
xchg
or
push
push
mov
ds
sahf
pushf
outsl
adc
dec
roll
mov
pop
loopne,pn
push
xor
add
jle
pop
xlat
mov
shrl
scas
push
rclb
es
sbbb
mov
adc
out
icebp
mov
pop
add
test
pop
xor
inc
fisubs
cwtl
insl
mov
sub
xchg
mov
and
cld
lcall
xor
mov
inc
insb
stos
jne
stos
inc
push
sbb
pop
xchg
gs
adc
mov
xor
sbb
int3
adc
ds
jae
jo
cli
jmp
dec
fst
imul
rcr
fs
fwait
in
mov
fcoml
clc
ja
les
pop
adc
icebp
es
aas
push
subb
mov
push
repnz
inc
lcall
mov
or
in
insl
je
mov
pop
push
dec
test
dec
xor
mov
or
out
lcall
push
dec
cmp
add
mov
mov
jno
push
mov
sbb
cmp
js
test
and
addr16
test
pop
test
or
sbb
sub
sbb
decl
sbb
jecxz
pop
jmp
push
push
aaa
ds
and
incl
sub
xor
andl
insb
mov
ror
ret
and
adc
ds
adc
aas
jmp
or
ss
cmp
mov
ficomps
jb
outsb
lret
sub
out
sbb
inc
bound
mov
decl
test
dec
loop
outsb
les
mov
idiv
jno
decl
scas
sbb
jl
rcrl
xor
push
shl
pop
dec
jb
or
loope
fcomip
fwait
rcrl
test
call
and
int3
jne
push
ret
inc
xlat
mov
lea
jg
mov
adc
inc
xchg
and
outsb
pop
lcall
imul
inc
pop
jg
xchg
aas
and
jl
xchg
add
dec
xchg
fistps
mov
cmp
mov
xor
inc
adc
xchg
into
and
lret
mov
push
outsl
push
fisubs
scas
sbb
out
in
inc
loope
repnz
jo
out
push
push
jno
pop
xchg
daa
mov
iret
xchg
push
loope
xor
repnz
nop
es
lcall
mov
xorl
add
xchg
loopne
mov
push
adc
ja
mov
or
pop
mov
mov
or
loop
mov
ljmp
xlat
lea
pop
lcall
lahf
xchg
lret
jnp
jecxz
cwtl
pop
fs
cmp
in
sbb
mov
xchg
pushl
xchg
je
mov
mov
and
adc
rclb
inc
jne
push
pushl
xlat
aas
lods
fstpl
pop
push
pop
mov
xlat
out
gs
cltd
popa
pop
cmp
xorb
mov
xlat
inc
mov
push
xchg
lods
test
adc
stos
lock
fistps
jae
gs
ret
and
sub
mov
mov
fldcw
sbb
push
loopne
fwait
adc
mov
mov
jge
add
push
scas
inc
lahf
jg
fistps
dec
cmp
ret
cmc
mov
rcr
mov
fs
ljmp
rcl
fmul
lahf
mov
mov
dec
je
std
mov
dec
stc
arpl
ret
mov
jb
dec
cmc
out
push
xchg
aas
gs
fists
nop
adc
decl
mov
jge
nop
repnz
insl
inc
and
fidivl
lcall
rcll
movsl
enter
sbb
or
and
das
stos
stc
sar
jmp
cmc
fimuls
sbb
cmc
divl
xchg
adc
adc
cmp
jp
ljmp
mov
adc
sbb
repnz
std
dec
or
cmp
mov
sub
add
mov
ljmp
mov
xchg
sub
iret
add
mov
aam
sbb
add
xor
push
dec
adc
pop
pop
insl
jg
test
into
push
rcr
outsb
lock
sub
aas
cmp
push
dec
mov
fs
lcall
lods
mov
enter
jl
inc
cmp
inc
repnz
out
pushl
mov
js
inc
ljmp
jno
stc
repz
pop
test
pop
sti
xor
jnp
addr16
out
fstps
jmp
cld
ljmp
and
inc
mov
pop
inc
fisubrs
cld
and
lds
decb
repz
pushl
addr16
push
pop
adc
and
arpl
lea
dec
mov
out
sahf
jmp
clc
fcomip
sti
pusha
push
int
pushf
and
fcmovbe
seto
loopne
push
mov
adc
jecxz
int
out
push
ret
sti
jne
aas
inc
inc
faddl
cmp
pop
icebp
jmp
jle
jle
push
add
inc
sbb
cmp
fildll
scas
xor
and
cmp
dec
and
push
cltd
and
inc
push
fcomps
mov
mov
xor
pop
add
aam
cs
icebp
inc
out
les
enter
mov
sub
shlb
out
cmp
add
ret
push
testl
sbb
lret
adc
out
insl
inc
in
out
repnz
decl
loopne
test
cmpsb
pushf
push
xor
call
mov
cmp
mov
js
adc
xchg
ds
repz
lcall
sbb
sub
fisttpl
cli
mov
lcall
and
pop
outsb
lret
mov
outsb
ds
decl
les
pop
inc
lcall
ja
xchg
clc
cmp
mov
sub
inc
std
push
xchg
cli
ret
jmp
decl
loopne
pusha
mov
cmc
outsb
mov
mov
lcall
incl
cmp
adc
mov
jmp
rorl
mull
inc
fwait
pop
inc
cmp
incl
dec
incb
mov
addr16
dec
pop
fs
jl
push
xor
stc
add
mov
mov
jno
seta
dec
enter
jnp
cmp
stos
ss
sub
xchg
inc
cli
iret
call
stos
arpl
loop
fs
inc
aad
lret
dec
mov
js
inc
shl
mov
les
clc
or
das
pushf
sub
mov
into
mov
mov
mov
std
cli
mov
xchg
jge
mov
fstpl
ljmp
jg
mov
stos
adc
xor
rolb
lea
ljmp
aad
push
pop
out
les
cld
sbb
outsl
notb
stc
add
mov
dec
je
test
sahf
mov
aaa
cmp
mov
mov
cmp
pop
popa
pop
pushf
pushf
mov
por
call
pop
mov
neg
mov
arpl
sarb
lds
fadds
sarb
cmp
push
jmp
cld
push
das
xchg
neg
int3
lcall
rol
lret
mov
dec
jg
mov
pop
mov
fldt
pop
hlt
pop
iret
jg
dec
rol
mov
pop
nop
mov
adc
adc
jmp
repz
adcb
add
pop
or
ficompl
pop
pushf
xchg
sbb
ffreep
or
sub
fisttps
adc
mov
call
popf
pop
push
fimull
scas
sbb
mov
insb
icebp
test
cmc
jb
fwait
dec
loope
add
push
xchg
push
gs
int
imul
imul
pop
dec
sbb
mov
clc
mov
mov
ja
subb
jmp
adc
es
enter
ret
mov
cmp
movb
xor
call
xor
inc
imul
incl
cld
pushl
sbbl
gs
mov
xor
mov
sar
incl
sbb
mov
call
inc
fadd
in
push
ret
xor
add
and
call
js
mov
and
cwtl
incl
enter
testl
mov
test
xor
or
mov
mov
ret
sbb
ljmp
adc
stc
fmul
adc
mov
pop
insl
cwtl
xor
in
sti
xchg
push
jg
call
shll
cs
mov
popf
es
xor
jmp
cmp
shlb
mov
inc
aas
pop
mov
mov
mov
pushl
dec
or
sbb
dec
xlat
adc
mov
loop
nop
aam
mov
pop
add
mov
push
cmp
ljmp
hlt
mov
jp
mov
adc
cmp
jbe
aas
push
mov
call
push
test
loopne
push
push
xor
mov
repnz
loopne
mov
mov
xchg
mov
call
in
jecxz
adc
insl
je
or
orb
adc
test
inc
dec
mov
mov
push
out
mov
dec
stc
mov
or
mov
int
or
mov
or
les
mov
xlat
xor
nop
lock
cmp
inc
add
push
test
pop
hlt
out
aas
movsb
leave
add
sub
cmpsl
pop
sbb
insb
fs
loop
push
dec
inc
ds
js
push
push
fcmove
adc
scas
sub
std
call
adc
dec
das
cmp
pushf
or
inc
leave
pop
mov
in
jle
pop
add
xchg
decl
mov
jg
loopne
lahf
nop
cmp
sub
fwait
mov
lcall
jecxz
mov
inc
pop
dec
rcrb
stos
cmpl
daa
mov
insb
fdivr
pop
insl
lcall
cmc
add
sub
and
ret
addr16
lcall
aas
cwtl
loop
mov
and
movsl
xor
mov
shrb
mov
call
ror
mov
xchg
adc
repz
insb
incl
mov
lret
push
dec
lock
inc
pop
scas
and
mov
out
ret
pop
insb
sarb
aas
push
loopne
test
cmp
mov
add
jge
sbb
lar
out
cmp
test
mov
jg
sbb
sub
and
jl
push
mov
and
movsb
lret
pusha
sahf
cmp
mov
xchg
push
pop
out
jmp
mov
lret
pop
ret
and
das
cmpb
lods
cmpsl
add
cli
dec
lock
jmp
and
rorb
test
test
lahf
daa
xor
sub
loope
bnd
cmp
or
leave
and
push
or
cli
or
push
cli
lret
push
int3
clc
dec
mov
jmp
mov
lods
out
lock
pop
add
addr16
outsl
icebp
dec
push
lods
lods
test
pop
ret
xor
das
cmp
mov
lret
or
ret
add
loop
inc
roll
and
das
in
adc
pop
xor
into
pop
imull
mov
in
addr16
test
mov
mov
ds
ror
xlat
or
mov
stos
sti
and
cmpsb
mov
sbb
adc
and
sub
pop
cmp
mov
push
popf
cmp
mov
outsl
push
jns
lds
sbb
mov
iret
push
push
pcmpeqb
cmp
adc
subl
pop
push
les
jns
push
cwtl
sbb
leave
fistpll
sbb
or
inc
mov
repnz
inc
popa
mov
mov
xor
int
inc
mov
jbe
scas
fldenv
cmp
adc
pop
das
mov
or
es
xor
fistps
dec
test
aas
and
inc
jne
in
and
xor
test
and
add
or
fcomip
jns
mov
adc
dec
mov
lret
push
mov
imul
cld
pushl
sub
nop
pusha
or
stos
xchg
pop
les
lcall
pop
mov
ss
scas
dec
notb
mov
cmp
jmp
xchg
dec
inc
sbb
fs
jg
repz
ret
aaa
insb
dec
push
mov
and
inc
mov
nop
scas
jae
ljmp
jno,pn
add
das
xchg
stos
sbb
in
mov
cmp
mov
inc
xchg
fdivr
and
pushf
add
mov
sbb
mov
push
xchg
sbb
cmc
jo
aaa
inc
xor
mov
xlat
cwtl
lea
cmc
mov
mov
je
loop
cmp
adc
sub
push
jb
sbb
and
sahf
and
sbb
repnz
jg
push
and
mov
movb
xor
jnp
pushf
lea
sbb
jb
stc
lcall
xor
fcompl
add
shrb
push
sti
mov
add
add
sbb
ret
enter
mov
push
sbb
jg
jne
push
add
mov
push
inc
xchg
lods
in
dec
xor
fbld
ljmp
cmp
xchg
jle
fsubrl
fidivrl
lahf
arpl
jae
adcl
das
mov
clc
hlt
sbb
jg
imul
je
sbb
xchg
push
mov
pop
std
out
adc
and
adc
ds
ljmp
or
jo
cmp
push
dec
stos
mov
jb
or
cmp
test
lcall
psrld
add
mov
les
xlat
arpl
test
sahf
add
dec
das
mov
cmp
incl
mov
push
pop
fwait
arpl
andb
and
dec
fdivl
insb
xsha256
cmpsb
adc
call
lock
movsl
pop
mov
xchg
enter
ret
psubusw
add
jo
sub
stos
inc
adc
or
sbb
push
je
mov
jg
inc
cmp
xor
lods
push
and
loope
adc
mov
cmp
loope
sbb
sub
bound
ljmp
cld
mov
out
xor
lahf
mov
sbb
xor
mov
jmp
inc
cmc
add
add
inc
mov
mov
movsb
ret
mov
jbe
mov
sqrtps
cwtl
lods
push
xchg
sub
dec
sarb
mov
rcrl
mov
dec
dec
cmp
mov
mov
add
xor
lods
mov
cltd
jmp
es
js
jne
stos
mov
sbb
ds
sub
daa
stos
mov
std
pusha
cld
das
mov
xor
test
mov
lahf
sbb
xor
popf
ja
mov
push
mov
xor
ljmp
in
fmul
lret
imul
mov
sahf
iret
fildll
push
mov
mov
daa
sti
rcr
mov
push
rcrl
stc
popa
insb
pop
mov
dec
out
loopne
cs
and
leave
push
add
push
stos
sub
jg
sbbb
repz
adc
push
lret
cmp
scas
xchg
cmp
ss
ljmp
jo
and
sbb
push
pushl
rcll
das
icebp
sbb
push
les
in
sarl
and
add
sbb
into
cmp
mov
clc
in
inc
xchg
loop
iret
sub
mov
in
repz
cli
jmp
shl
fldt
pop
aam
out
jae
cmc
jmp
int3
push
hlt
sar
in
sar
in
jmp
clc
das
push
cs
lahf
nop
int3
mov
fwait
pop
fs
dec
ret
inc
xor
push
adc
lret
push
fisubrs
dec
incb
addr16
icebp
insb
out
in
shl
out
ror
lock
cli
int
aam
dec
jmp
in
out
iret
icebp
aad
adc
iret
dec
lock
test
lret
fcompp
iret
rol
call
fmul
fst
adc
repnz
aam
in
div
lret
std
rep
stos
addb
pop
lahf
ds
push
idivl
ss
icebp
es
jg
ljmp
adc
aas
sbb
pop
sti
xor
and
xchg
das
mov
stc
rcr
in
xlat
out
das
loop
ljmp
pop
jbe
iret
jp
push
pushl
stos
cmp
iret
inc
loope
loope
aas
into
cld
aam
dec
sahf
cli
decl
outsl
mov
insl
inc
push
insl
jne
inc
imul
jge
push
push
dec
ja
and
pop
clc
jg
jbe
push
arpl
dec
fs
insb
std
loop
ljmp
inc
icebp
dec
testl
addr16
push
lds
inc
cld
sti
inc
int3
rorl
jbe
jg
mov
insb
out
push
inc
in
jo
imul
jo
imul
and
xor
and
aaa
aam
out
sbb
enter
cmp
and
and
pop
rcrl
push
ret
jg
por
in
in
aad
or
movsb
imul
push
mov
push
dec
pop
push
insl
inc
or
pusha
inc
jb
mov
insl
dec
push
push
dec
pop
jmp
decl
arpl
insl
shll
faddl
in
in
pop
fldt
lret
inc
repz
sbb
inc
bnd
addr16
cli
dec
pop
decl
in
adc
cli
sub
fstps
or
clc
cli
popf
lods
dec
lock
call
cmp
inc
aas
in
push
cmp
aas
inc
push
push
push
rclb
mov
dec
sub
mov
cmp
imul
and
addl
mov
dec
add
es
dec
sar
xorb
xor
stos
data16
ret
rorl
subl
sti
mov
fildll
pusha
movsl
jg
or
xor
mov
and
sarb
dec
and
or
sub
jmp
loope
add
scas
push
pop
inc
rolb
jle
pop
push
ror
push
imul
mov
fadds
js
in
adc
jb
les
push
pop
das
clc
jbe
and
es
ljmp
sbb
arpl
das
mov
or
arpl
mov
jbe
dec
sbb
ljmp
push
insb
loopne
sbb
mov
in
rdmsr
mov
pop
add
push
lret
cmp
rcrl
lock
lods
dec
push
or
stos
add
xor
cmp
pushl
jge
inc
daa
jae
xchg
js
sarb
cld
pop
jb
xor
call
mov
mov
ss
in
cmp
shll
push
ret
cmp
push
arpl
sbb
bound
cmpsl
ja
pop
dec
lret
loopne
lock
and
jno
cmp
test
ljmp
pusha
add
sub
lcall
lea
cmp
lcall
and
mov
sbb
dec
add
push
scas
clc
decl
push
push
imul
push
dec
mull
mov
clc
fisttps
sub
sub
jne
mov
in
mov
call
pusha
repnz
ret
inc
mov
sbb
sbb
pushl
xor
jecxz
push
mov
daa
cld
lret
aaa
je
xor
add
outsb
cmpsb
push
sbb
xor
pushl
data16
push
hlt
fistpll
push
xor
pop
stos
dec
mov
loop
aam
mov
dec
mov
push
sub
cmp
mov
test
aaa
inc
jae
inc
or
cs
jp
mov
adc
jg
sub
test
movb
popa
sbb
xchg
das
ds
mov
mov
test
ds
adc
mov
lods
es
and
or
in
out
stc
mov
and
add
lcall
sub
stc
cmpsl
loopne
xor
jne
pop
or
in
push
aas
add
add
imul
pop
mov
inc
cwtl
adc
xlat
dec
loopne
inc
jb
jg
decb
mov
mov
daa
cmp
fists
and
lock
push
push
dec
outsb
push
xor
sub
incb
aad
mov
xor
mov
outsb
int
popw
pop
add
jne
mov
push
fldt
lret
inc
imul
mov
xor
dec
sbb
ret
sub
mov
sbb
test
cmp
sar
pandn
fstps
mov
sub
int
pop
cs
cmp
or
aas
das
cmp
jge
add
xor
shlb
loop
dec
stc
xchg
outsb
pop
cmp
cmp
pop
sub
imul
pop
insl
cld
adc
and
add
push
jmp
inc
inc
outsb
aaa
clc
pop
cmovle
cmp
sarb
int3
loopne
lds
push
std
out
test
movsb
scas
inc
adc
loop
pop
lahf
mov
outsb
aaa
pop
rcr
jbe,pn
repz
lret
roll
add
cld
jbe,pn
shrl
and
adc
idivl
movsb
jmp
fs
loop
sub
ficoms
fcmovu
push
popa
pusha
or
adc
fstps
add
dec
scas
cs
mov
mov
andb
lret
nop
inc
jb
std
pop
das
faddl
jl
les
mov
jle
jo
inc
sub
nop
aaa
adc
and
dec
pop
inc
jb
lock
sarb
test
fwait
ds
or
jle
push
xrelease
or
mov
and
cs
mov
dec
pop
addr16
mov
int
and
mov
and
adc
mov
test
fldenv
lock
cld
and
add
cwtl
ds
sbb
out
push
in
inc
out
popa
rcrb
imul
shl
loopne
fwait
out
add
jecxz
jmp
dec
outsb
and
add
divb
dec
jae,pt
mov
mov
incl
enter
repnz
mov
xchg
cli
jg
in
push
loope
sti
sbb
pop
adc
int3
jg
stos
in
rcl
mul
addr16
popa
in
sbb
outsl
out
fcom
mov
inc
in
xchg
out
cmovno
lock
dec
mov
cmp
push
pop
push
stc
imul
test
dec
int3
ja
pop
stc
jg
mov
push
scas
in
data16
nop
jg
push
les
adc
inc
jg
push
add
or
sbb
notb
cld
and
fxam
loope
aad
pop
shl
adc
push
aad
cli
pop
in
int
aaa
xor
fildl
leave
mov
aam
xlat
rcrl
clc
loop
in
cltd
xlat
int3
das
and
ja
jg
sbb
aam
pop
push
incl
les
lret
repnz
out
jno
daa
jns
mov
gs
repz
lock
inc
or
mov
inc
cmp
sahf
xor
jb
call
sub
sbb
cmp
xor
sub
int
mov
test
in
xor
or
or
ss
push
pusha
jo
enter
insl
push
das
jp
data16
add
push
inc
push
cmpsl
jae
mov
insb
ss
push
fs
ss
int
adc
outsb
mov
mov
mov
insb
stos
lret
adc
enter
fwait
int
rclb
jb
xchg
iret
adc
faddp
cmp
ror
inc
mov
mov
insb
outsl
cmpsb
xchg
mov
cltd
add
ss
int
push
test
inc
jge
mov
mov
insb
adc
pusha
sti
imul
jl
imul
mov
data16
lods
xchg
xchg
stos
mov
insb
xor
mov
fwait
int
and
and
mov
data16
insb
add
sub
in
int
out
js
ds
stc
int3
pop
xchg
mov
shlb
jle
decb
push
jno
push
add
shl
push
movsl
add
mov
mov
cmpsl
ds
dec
mov
push
dec
sub
aad
pop
loopne
out
cltd
xchg
mov
dec
mov
jo
mov
mov
repnz
stos
xchg
lcall
dec
in
sbbl
cmc
xor
push
mov
inc
jae
pop
xchg
decl
lock
fsubrs
arpl
mov
pop
arpl
sub
icebp
mov
out
xchg
mov
insl
jg
and
outsb
mov
ds
lahf
jg
pushl
ror
mov
test
rclb
mov
shrb
add
push
push
lcall
jle
push
mov
mov
dec
xor
cmp
sub
add
mov
in
sahf
add
pusha
imul
pusha
add
pusha
sbb
jne
sbb
dec
dec
cld
mov
adc
pop
mov
les
pop
arpl
fwait
mov
jns
inc
push
ficoms
pushl
loopne
pusha
iret
outsb
pop
mov
scas
sar
add
das
shlb
jno
pop
call
dec
pusha
dec
mov
dec
cmpsb
mov
imul
cmp
push
sbb
dec
inc
mov
cmp
add
add
decl
sub
gs
inc
pusha
sbb
sub
sahf
and
mov
jg
cs
mov
pop
repz
push
in
sbb
bound
aaa
daa
stos
jns
and
cmp
clc
lock
outsb
adc
push
inc
sub
adc
push
or
fdivrs
push
cld
out
hlt
jo
pop
ja
rorl
pushl
push
bound
es
sub
add
ficoms
dec
popa
pop
ret
xor
fildll
adc
mov
int3
clc
lcall
mov
arpl
sbb
insl
insb
aam
sub
test
imul
xchg
inc
adc
xchg
and
lcall
cmp
stos
pop
fdivrl
xor
mov
clc
ljmp
loope
push
inc
orb
mov
fistps
xchg
sti
mov
leave
lods
lock
mov
sbb
sub
dec
aad
mov
dec
sbb
push
or
mov
or
lret
xlat
incb
daa
enter
pop
icebp
pushw
movb
loopne
ds
popf
and
rcr
or
pop
hlt
mov
jp
mov
dec
push
sbb
mov
inc
call
outsl
jae
fistpl
stc
jb
jbe
push
dec
loope
sub
jge
and
and
add
cmp
aaa
cwtl
mov
outsb
incl
mov
clc
push
add
and
mov
mov
lret
in
fcomip
jmp
cmp
divb
sub
lret
mov
sub
cs
adcb
roll
and
clc
ljmp
xchg
and
inc
sbb
fs
in
sbb
push
es
jge
lret
xchg
dec
adc
ret
incl
sub
insl
jge
push
dec
pop
add
push
int3
add
cli
mov
aam
xchg
stos
push
nop
mov
pop
rcr
stos
mov
xchg
mov
push
sbbb
gs
xchg
insb
pop
test
push
ljmp
clc
in
ret
inc
inc
mov
xor
inc
cli
pop
dec
add
arpl
mov
xor
pop
mov
sub
mov
out
cmpsb
xor
add
call
mov
ljmp
add
std
pop
daa
xor
hlt
shrl
lock
decl
jle
in
dec
push
add
ds
aam
cmp
dec
pushl
ds
test
and
and
or
ret
andb
std
in
insl
pop
mov
sbb
iret
sub
mov
dec
xchg
push
filds
lret
jg
cld
pop
mov
ds
xlat
in
pop
push
scas
adc
cli
loope
cmp
cltd
mov
stc
cwtl
das
cmp
aaa
cld
in
out
mov
inc
dec
lcall
popa
cmp
decl
pusha
xchg
int3
inc
xlat
sbb
shll
or
fs
cmp
lcall
sbb
test
push
lret
or
pop
xchg
dec
or
shl
mov
xor
adc
sbb
repnz
pop
cmp
add
lock
out
mov
jle
call
mov
push
pop
subb
jbe
loopne
stos
cli
fisttpl
xorb
fdivrp
fucomip
decl
je
lret
dec
push
cmc
inc
pop
aam
mov
xlat
jecxz
sbb
std
clc
dec
addr16
add
xchg
mov
pusha
adc
push
push
cmpsl
push
jmp
in
jo
je
test
lods
jbe
clc
popf
pushf
data16
addr16
push
mov
push
push
dec
mov
xchg
fs
je
mov
je
incl
imul
test
shlb
rol
and
dec
push
clc
jg
sbb
lret
in
or
jb
cmp
sarb
stos
dec
aaa
addr16
jmp
icebp
cmpb
inc
xor
ficomps
xchg
call
fistl
mov
add
lock
push
mov
movsl
arpl
jg
cmp
aaa
inc
push
and
outsb
sar
add
dec
push
gs
adc
stc
pushl
ret
stc
mov
es
or
fisttpl
lret
add
mov
xchg
sub
lds
jecxz
mov
cmp
mov
dec
push
mov
lcall
sahf
and
and
loopne
mov
ret
lret
inc
xchg
adc
cli
lcall
or
imul
pop
mov
pop
icebp
clc
mov
mov
test
aam
add
sbb
imul
dec
adc
int
lods
push
mov
loope
fwait
push
pusha
push
lret
cwtl
frndint
call
xchg
xor
jl
mov
pop
clc
mov
pop
and
sub
arpl
sub
add
push
andb
push
into
icebp
cmp
pusha
incl
cmc
xor
imul
cltd
mov
jmp
xchg
incl
mov
out
pushl
fnstsw
push
or
inc
sbb
jmp
cmp
clc
sbb
mov
lock
loopne
add
sub
pop
push
std
jge
mov
pushl
jmp
push
sub
mov
test
cmpsl
jecxz
cmp
aas
xchg
das
inc
out
clc
sbb
jge
sub
fcompl
add
xchg
xor
outsb
incb
push
and
sbb
cs
incl
push
fucomi
insl
sti
xchg
pop
aad
push
test
lock
sahf
insl
xor
mov
mov
jle
sbb
outsb
mov
push
leave
mov
repz
ds
pop
cmc
test
pusha
cmp
sahf
movsl
data16
icebp
jg
jae
inc
pop
add
adc
out
mov
movsl
push
jl
add
add
dec
sti
fistpl
fwait
and
outsb
or
jae
mov
fildll
je
push
dec
xlat
mov
jg
mov
inc
jns
ja
arpl
add
stc
icebp
mov
ds
data16
mov
lods
dec
cmpsb
popf
lock
sahf
jmp
fs
or
icebp
iret
lds
adc
mov
std
nopl
jbe
shlb
bound
jmp
push
mov
mov
mov
sub
add
ds
mov
pop
rorl
fincstp
mov
ljmp
rcr
fcom
idivl
xor
fcom
into
lock
icebp
test
cmp
out
clc
lods
mov
push
and
mov
mov
sbb
pushl
xchg
lock
fstps
cmp
xchg
sbb
sahf
ret
xchg
xor
sub
push
adc
lahf
mov
push
sub
imul
bound
sbb
sub
pop
dec
and
mov
jmp
icebp
jnp
cmp
xor
push
and
fisubs
dec
adc
shrb
rorb
push
jle
mov
pop
cmp
addl
or
dec
add
shlb
lcall
and
lods
inc
insl
imul
jae
ror
lcall
arpl
sub
cli
out
sub
push
nop
mov
push
mov
out
push
test
add
fcomip
jmp
or
ds
jmp
push
and
and
pushl
fs
jbe
push
sahf
mov
and
lods
sahf
pop
lcall
sar
lcall
mov
add
or
fucom
lea
shrl
add
sub
pop
add
add
icebp
sti
icebp
lcall
sbb
cmp
jle
stos
jne
and
mov
stos
pop
mov
pushl
addr16
ds
xchg
lds
lcall
sahf
lret
nop
jg
pop
dec
cmpsb
xor
in
cmp
jno
sub
push
inc
add
xchg
pop
jns
mov
hlt
add
mov
mov
scas
and
mov
jg
cmpsb
mov
inc
imul
in
jbe
lods
sbb
push
jle
lret
insb
pop
jecxz
pop
std
incl
into
jecxz
fwait
scas
in
popa
ficoms
fldt
dec
loope
repz
stos
dec
pop
mov
lcall
and
adc
test
cs
insl
sbb
sub
pusha
insb
xorl
sahf
jg
jmp
inc
je
jecxz
out
inc
adc
shll
xor
mov
push
mov
clc
pop
push
mov
cli
fwait
push
push
add
cmpsb
sbb
test
int3
in
xor
scas
push
insl
inc
icebp
inc
idiv
jg
pushl
inc
mov
or
jge
mov
shll
xchg
jle
test
mov
inc
outsb
inc
icebp
pop
inc
inc
ja
push
imul
jp
cmc
mov
loopne
push
pushl
inc
sti
lods
push
inc
scas
outsb
dec
outsl
inc
dec
sbb
sbb
call
mov
adc
mov
arpl
jb
add
in
or
dec
fbstp
insb
adc
fsubrl
pop
dec
or
out
cli
sub
roll
mov
dec
imul
jo
lret
mov
mov
outsb
jg
push
mov
outsb
pop
rorb
ret
adc
jle
lods
dec
test
xor
ljmp
dec
fistps
test
push
sbb
pop
add
add
pop
lock
lds
mov
ret
fiaddl
jno
xchg
dec
push
sbb
xchg
push
sub
lods
iret
lcall
pop
xchg
cmp
and
dec
imul
orl
pop
pop
dec
add
sbb
arpl
pop
aas
jecxz,pn
add
mov
pop
and
fdivrs
lds
xchg
mov
mov
sub
push
imul
pop
decl
push
cmp
sub
movsb
decb
push
loop
jmp
mov
filds
sti
xor
mov
std
adc
rclb
lcall
das
sub
pop
nop
pop
aam
xor
add
lcall
push
insl
cmp
dec
dec
jbe
outsb
sti
sub
mov
and
cmp
repz
decl
insl
fsts
imulb
cmpsb
pop
sbb
push
dec
jae
pop
daa
pushl
push
cld
repnz
stos
mov
jo
jae
push
mov
push
decl
sub
inc
gs
stc
push
in
sub
dec
adc
pop
pop
pop
hlt
inc
sar
cmp
and
add
cld
cmp
lret
outsb
inc
mov
xor
std
xor
incl
mov
movsb
pop
aas
mov
decb
test
mov
xchg
dec
dec
ja
add
mov
cmp
call
adc
dec
aaa
rcl
in
sbb
hlt
push
fisubl
xlat
fidivl
int3
adc
cli
add
and
bound
repnz
mov
loop
call
mov
push
lock
iret
in
stc
out
addb
jb
lcall
cli
pop
hlt
in
nop
xor
lret
jge
cld
mov
mov
lods
add
fcompl
mov
cltd
push
ja
sbb
xor
cmp
jmp
test
mov
dec
flds
cmc
notb
xor
xor
lcall
sub
stos
xor
inc
mov
ffree
sbb
mov
or
mov
pop
sbb
fsubl
mov
decl
shlb
pop
mov
pop
mov
ja
mov
popf
pop
adc
test
pop
sub
lret
dec
fcompl
stos
clc
cmp
push
in
jns
pop
leave
aaa
inc
lock
fistl
lret
pop
push
jecxz
jecxz
mov
mov
call
xor
addr16
or
inc
cmc
sbb
and
pop
xor
icebp
fistpll
mov
nop
jg
movsb
and
mov
movsb
xchg
push
leave
mov
lcall
pop
stos
adcl
xchg
pop
fimull
shll
es
pop
mov
cli
push
test
sbb
lock
jmp
and
sub
fcmovb
lods
jg
adc
fcomip
fistpll
jecxz
fistpll
mov
jb
outsb
or
inc
mov
ljmp
arpl
sbb
gs
pop
das
push
pushl
mov
mov
xchg
lock
mov
push
sbb
jle
xorb
out
adc
incl
mov
fidivrs
out
js
enter
mov
pop
xor
push
je
sub
inc
dec
cmp
lea
lcall
sbb
cltd
sbb
call
lods
lock
mov
pop
int3
mov
lds
add
jmp
cmp
imul
dec
shll
mov
dec
les
adc
fs
or
aas
ret
dec
mov
or
mov
call
jmp
out
sbb
cld
imul
std
mov
mov
jns
push
or
fisttps
pop
dec
sbb
jmp
fld
pop
push
imulb
cmp
nop
lds
dec
sarb
ljmp
sbb
cmp
out
loop
cmp
stos
add
lds
mov
repz
mov
sub
and
insl
daa
and
rcrb
pop
inc
push
fs
sbb
lcall
jno
xor
push
mov
testb
push
xchg
lock
cs
dec
push
pop
clc
frstor
cmpsb
lahf
jge
sbb
cs
out
clc
int3
je
icebp
pop
ljmp
mov
loop
incl
out
outsb
and
dec
loope
mov
sbb
iret
xchg
mov
or
jno
packuswb
jnp
ds
mov
les
cmp
pusha
sub
out
mov
scas
lock
jp
jmp
stos
es
push
decl
add
adc
ret
mov
in
in
cmc
xchg
cmp
xor
add
mov
adc
fstpt
jne
pop
sub
fsubp
dec
mov
pop
das
es
xchg
and
dec
adc
out
jle
inc
adc
sub
adc
and
push
movzwl
cld
or
outsb
mov
and
aas
nop
out
cli
mov
push
push
xchg
lods
xor
push
sub
cmp
outsl
cli
xchg
outsb
jl
xchg
pop
xorl
movsb
dec
xlat
fucomi
inc
cmpsb
push
jne
arpl
pop
hlt
jmp
js
je
add
pop
mov
pop
loope
in
test
stos
andl
cmp
mov
shr
incl
out
mov
lcall
inc
mov
add
test
mov
push
push
lods
dec
notl
cmp
incl
pushl
fmul
shrb
subb
stc
xor
push
arpl
inc
icebp
cmp
ss
adc
lcall
shlb
cmp
insb
es
jmp
inc
shll
fnstsw
push
daa
int3
and
in
jnp
nop
or
aaa
pop
sar
or
cs
pushl
ret
loop
clc
cli
xor
int3
out
popf
add
insb
inc
incl
rcr
sbb
cmp
loope
ds
out
mov
int3
dec
push
daa
insb
roll
lds
sbb
or
nop
mov
mov
movsb
and
aas
je
push
icebp
scas
pop
and
out
cmp
push
lock
call
lret
stos
scas
lock
xor
dec
and
imul
std
xor
aas
add
addr16
mov
fildl
lcall
sbb
cld
dec
pusha
gs
sbb
or
aas
bound
out
mov
jl
bound
dec
enter
int3
mov
lcall
clc
outsl
xor
test
mov
lock
jecxz
or
ret
jne
orb
leave
xchg
inc
out
jg
mov
fisttps
inc
lret
and
push
jle
aad
jecxz
rcr
decl
fisttpl
jmp
jecxz
or
pusha
out
pushf
inc
mov
mov
sbb
lcall
mov
pusha
loop
fsubp
mov
pop
pop
std
dec
inc
icebp
push
dec
sti
aas
cmp
jne
xchg
and
lea
cmpb
loop
fnstcw
mov
cld
cmpsl
push
adc
dec
lock
and
pop
mov
mov
arpl
jmp
push
pop
pop
hlt
test
shll
lds
mov
add
inc
test
scas
jl
imul
fcmovb
jg
jp
fists
push
sbb
push
out
mov
jecxz
dec
add
je
decl
enter
popa
xor
dec
xchg
mull
jecxz
push
std
ljmp
aam
inc
mov
lret
sbb
jne
jae
push
ljmp
cmpsb
testb
xchg
xchg
addr16
ficompl
dec
xor
mov
pop
clc
ret
data16
sbb
cmp
out
jb
ret
mov
and
fcompl
fsts
push
in
dec
into
imul
clc
scas
mov
bound
js
jecxz
jbe
ljmp
dec
xor
mov
sbb
sub
dec
fcmovne
jne
xchg
inc
loope
lcall
dec
adc
jmp
fisttpl
test
pop
loopne
in
lcall
pop
jle
inc
andb
ja
ds
push
cmpsb
mov
fst
dec
insl
insl
pop
stc
icebp
lea
subb
push
jb
push
pushl
jne
dec
fs
sbb
xchg
cs
call
push
sub
or
jg
sub
imul
dec
out
push
shlb
movsl
push
mov
out
mov
nopl
aas
xor
push
lea
ds
jnp
lcall
inc
dec
js
cwtl
incb
or
xchg
test
repz
and
mov
push
mov
pop
jmp
stos
pusha
adc
cld
ljmp
hlt
iret
pop
mov
mov
punpckldq
addr16
inc
push
repnz
xor
jle
mov
add
sbb
push
ds
out
cmp
and
imul
cmp
push
enter
pop
sub
ficomps
je
push
inc
xor
inc
jmp
push
sahf
push
dec
xchg
mov
ds
repnz
test
and
std
pop
pop
mov
sahf
imul
add
mov
add
call
sbb
bound
shrb
add
ja
dec
mov
push
xchg
pop
xor
out
call
mov
inc
xor
sahf
xchg
cmp
inc
push
aaa
lret
andl
sbb
das
std
das
and
mov
dec
lret
std
add
add
inc
lea
and
inc
lods
xor
push
mov
mov
cmpb
jns
xchg
pushl
sbb
add
mov
lods
test
or
sbb
adc
daa
stos
test
pop
nopl
mov
sbb
cmp
jmp
aaa
add
inc
push
ja
rorb
loope
jno
pop
cmp
dec
mov
lds
dec
xlat
sbb
sti
fdivl
mov
mov
cmp
xchg
push
xor
and
pushl
pop
add
adc
mov
xor
ljmp
aaa
fdivrl
loope
hlt
mov
fwait
nop
xor
cltd
dec
adc
les
mov
pushl
or
mov
cltd
mov
sub
fisttps
fldcw
cmp
add
lcall
iret
cs
mov
nop
pop
sar
xchg
adc
into
jae
fdivrl
ss
jmp
shlb
sbb
and
mov
loop
repnz
test
icebp
sbb
shlb
ljmp
adc
cmp
and
sub
pop
jmp
sub
adc
cmp
sbb
pop
call
sbb
inc
sub
cmp
out
add
jae
daa
leave
ss
cmp
push
or
shll
push
sub
push
in
push
dec
jae
in
pop
call
negb
aad
push
adc
aaa
and
jg
stc
out
lret
jae
inc
cmp
movl
stc
out
test
int3
or
inc
add
pop
in
cld
shlb
push
stc
out
jg
sub
lds
xlat
std
pop
push
lret
lahf
jg
inc
or
sbb
sub
nop
lds
sbb
cli
ss
sub
fsts
and
icebp
into
push
xor
dec
adc
out
jae
mov
daa
fwait
xchg
int
lahf
sub
aaa
push
pushf
insb
dec
ss
xor
jae
cmp
xorb
mov
out
stos
push
xor
xor
daa
sbb
adc
std
cld
insl
fmuls
repz
dec
xor
in
add
imul
imul
sbb
daa
push
cld
xchg
out
sub
stos
insb
fildl
xchg
daa
fildll
std
movsl
dec
inc
push
pop
stc
enter
push
fs
je
mul
or
ljmp
and
repnz
popa
push
adc
sti
xchg
rcrl
mov
ja
jns
adc
icebp
in
push
sbb
leave
inc
mov
mul
jmp
ret
jg
push
bound
sbb
mov
pop
cmpb
mov
pop
pop
mov
mov
ss
push
push
hlt
fnstcw
out
icebp
adc
outsl
rorb
int
loope
push
xchg
loope
inc
pop
into
repz
out
aaa
fisttpll
sahf
xchg
push
push
adc
mov
loopne
sbb
rcl
sahf
stc
shll
leave
repz
jp
xchg
lea
repz
and
cmp
repz
scas
inc
cmpsl
lcall
in
fwait
mov
repz
addr16
sbb
gs
repz
adc
repz
inc
divl
repz
push
mov
cmp
repz
sarb
ror
repz
in
jle
dec
jp
movsb
stc
cmp
jno
fsubp
rclb
pop
fwait
add
push
sub
in
jl
shll
cmpsl
sub
jg
daa
xchg
sub
je
sbb
jg
dec
cmp
sub
sbb
movsb
sub
scas
outsl
sub
push
mov
dec
nop
lret
fimull
rcrb
jmp
sbb
sbb
jg
dec
sbb
pop
mov
xchg
pushf
xchg
sub
mov
dec
cltd
ret
fisubrl
adc
fisubrs
test
jb
movsb
test
inc
or
lret
in
or
jmp
lods
fadds
dec
jb
cld
sahf
inc
cmp
sub
mov
sarb
pop
inc
sbb
mov
jno
rcr
mov
mov
fcmovbe
ljmp
push
push
or
dec
jl
in
arpl
movsb
xchg
outsb
int3
ret
mov
mov
std
decl
mov
clc
loop
cmc
dec
push
cmpsb
add
jg
mov
test
lock
jp
lcall
dec
rclb
aaa
clc
std
mov
mov
push
notb
jbe
dec
fucomp
lcall
lea
out
int3
adc
test
popf
fisttps
mov
or
push
jp
lock
decb
push
out
mov
push
mov
ret
xor
pusha
dec
inc
aad
adc
push
lods
lcall
pop
pop
sub
inc
ss
pushl
push
vmwrite
xlat
ss
push
jae
cmp
jecxz
movb
mov
xor
int3
mov
arpl
xchg
jno
pop
jp
mov
cmp
jecxz
adc
call
pushf
inc
enter
enter
jns
xlat
rorb
scas
outsb
rcrb
lcall
mov
enter
mov
std
jno
rcrb
mov
lret
xchg
or
repz
jecxz
jg
sbb
mov
inc
xor
jg
xchg
int
cmp
lret
outsl
mov
rolb
jbe
fldcw
iret
sbb
mov
dec
cmp
ds
call
jle
rolb
test
popa
adc
jp
jge
stc
iret
scas
jmp
push
nop
clc
incl
int3
push
jae
mov
std
jg
decl
out
fisttps
out
or
jge
outsb
in
push
and
or
aaa
inc
push
mov
pop
orl
ret
push
mov
add
pop
stos
lret
or
xor
ret
and
les
jnp
loope
lock
adc
clc
push
push
pusha
call
xchg
popa
push
lret
pop
jp
clc
imul
sub
sarb
jb
lret
mov
jne
rorl
jb
jmp
pop
scas
xor
unpckhps
push
in
dec
xchg
movsl
lcall
rolb
gs
inc
inc
loop
cwtl
fwait
mov
inc
dec
push
push
notl
jne
insb
loope
shl
test
jle
inc
stc
imul
mov
test
push
inc
fnstcw
pop
ret
xchg
ret
nop
mov
call
jnp
lahf
xchg
jne
and
push
add
aas
cld
cld
dec
setns
inc
or
mov
push
push
lock
ss
jmp
mov
add
shrl
push
add
mov
xor
and
incl
scas
cmp
sub
cmp
add
cmp
xor
pop
adc
sub
xor
cmp
cmp
daa
adc
or
jg
xor
aas
sub
sbb
or
and
jg
lcall
add
ds
pop
pop
and
push
add
adc
cs
sbb
fwait
cmp
pop
push
sub
push
xor
xor
ds
sbb
filds
mov
cmp
add
pop
adc
sub
or
lcall
sub
add
sub
sub
ds
push
xor
sub
cld
push
cmp
sbb
sbb
push
dec
add
add
or
or
cmp
push
cmp
sbb
add
and
sbb
adc
aaa
ss
cld
fbld
pop
sub
and
and
daa
sub
sbb
lcall
cmp
sub
cs
sbb
push
daa
adc
adc
cs
aas
adc
push
sbb
sbb
es
pop
cmp
pop
or
push
outsl
ss
das
sbb
stos
nop
fldt
sub
inc
sub
push
shlb
mov
mov
insb
std
pop
lret
movsb
out
inc
popa
mov
int
hlt
out
inc
jo
and
sar
cmp
ja
inc
lock
call
add
in
or
push
mov
clc
arpl
addb
andb
mov
fcos
out
pop
loopne
push
imul
mov
or
mov
imul
inc
sahf
cmp
in
js
incl
cmc
adc
and
mov
push
xchg
dec
push
sub
loope
pushf
ljmp
mov
push
hlt
mov
aaa
mov
dec
les
hlt
mov
mov
xor
call
dec
andb
xor
dec
scas
jno
and
push
xchg
fidivrl
incl
push
xchg
push
mov
dec
mov
inc
push
mov
cld
xorb
jmp
add
xchg
fs
pop
inc
stos
push
adc
das
ja
dec
lods
and
adc
mov
push
fs
icebp
push
xlat
insl
xchg
hlt
push
ja
pusha
sbb
fs
and
shlb
inc
inc
jne
mov
js
icebp
gs
je
and
push
dec
jbe
sahf
sub
jmp
dec
inc
push
dec
push
push
popf
jle
sbb
xchg
imul
insb
pop
and
mov
cld
call
jle
incb
sub
dec
push
cmp
fcmovnbe
push
cmp
jb
mov
jg
sahf
sbb
cmp
insb
mov
in
in
cmc
jg
ljmp
rorb
jbe
in
push
jns
inc
inc
inc
and
jbe
fbstp
mov
popa
fmuls
jne
dec
cld
popa
inc
loopne
outsl
dec
sub
ja
dec
mov
sbb
push
adc
adc
outsb
cwtl
pop
pop
rorl
jb
subl
rorl
jbe
jmp
push
inc
jg
arpl
push
jno
push
insl
add
push
int
and
pop
push
xor
das
sar
out
and
ja
push
jne
das
arpl
push
lahf
in
jle
adc
fisubrl
fldt
cmovb
jb
add
and
mov
sub
jmp
out
sar
outsb
cs
arpl
sbb
add
fldt
and
pushl
inc
add
repnz
adc
push
fiadds
repnz
adc
sbb
rcr
xor
data16
adc
cmp
cli
decl
xor
xchg
adc
loopne
push
scas
adc
loope
cli
icebp
insl
or
js
and
inc
ljmp
data16
js
sub
inc
dec
push
push
pop
sar
out
sub
sahf
popw
daa
xor
call
push
fcoms
dec
sbb
xor
out
iret
imul
or
pop
in
dec
daa
mov
jp
fldlg2
testl
push
out
push
lret
dec
test
rcrl
pop
inc
mov
fisubl
add
xchg
push
ror
fisubs
sub
sar
decl
ret
repnz
jb
pushf
pusha
fisubl
xlat
adc
rcrb
push
push
call
sbb
xor
fists
nop
ret
add
dec
repz
jae
add
mov
enter
jno
loope
jno
in
sti
jns
rclb
ret
ljmp
stc
pushf
inc
aad
jbe
ja
aam
jnp
in
fisttpl
adc
fiadds
neg
gs
decl
int3
push
imul
push
cld
icebp
pop
sbb
cmp
pop
sbb
bound
lock
jp
gs
jo
movb
les
aad
mov
push
insb
mov
and
lea
gs
or
jae
sbb
cmp
jno
cld
sub
into
lcall
mov
pop
push
stos
or
sbb
mov
xchg
push
add
pushl
cmp
scas
xchg
in
cmp
sbbl
pusha
mov
pop
xor
aas
in
inc
sub
flds
ljmp
pop
adc
rclb
aas
jb
daa
or
xlat
je
loopne
dec
rcr
lcall
adcb
loop
int
jmp
jmp
pop
in
jmp
enter
add
adc
and
xchg
stc
pop
xor
mov
push
pop
call
xchg
outsb
cmc
test
add
xor
add
mov
cmp
sbb
ljmp
lods
sbb
mov
jmp
and
sub
pop
mov
xor
cli
pushl
in
mov
xchg
add
sahf
xlat
dec
mov
add
test
mov
sbb
fs
fmull
inc
fisubs
incl
dec
lcall
sahf
mov
pop
cmpsb
jg
mov
ljmp
js
int
and
cmp
adcb
lret
es
ljmp
cmpsb
sbb
es
sub
sbb
test
lcall
or
sub
int
pop
jbe
call
jns
pusha
mov
sub
sbbb
decl
or
xor
int
dec
push
out
imul
int3
out
outsb
dec
adc
push
push
aad
xor
sbb
pop
cs
stos
pop
jns
out
inc
xchg
dec
push
arpl
scas
dec
push
ret
push
push
hlt
les
sub
decl
inc
sbb
in
lret
push
loope
cmp
xor
pop
pop
movsl
pop
push
out
jle
loopne
roll
mov
inc
push
push
jmp
push
pushl
jo
push
aad
inc
add
sahf
inc
push
or
xor
bound
add
test
inc
aaa
fbld
into
fs
test
sti
insb
push
scas
ljmp
inc
or
addr16
xchg
mov
jno
pop
loope
ja
dec
outsb
gs
mov
call
loopne
cmc
mov
pop
ja
fs
std
pop
sbb
sbbl
js
js
jmp
adc
mov
fidivl
in
adc
jo
push
outsb
fwait
sbbl
adc
loopne
or
jmp
iret
stos
jnp
bound
adc
shrl
arpl
jae
pushl
and
push
and
clc
ja
and
adc
aam
jp
insb
mov
jmp
push
std
rcrb
jmp
ja
cld
loop
add
jbe
out
push
ljmp
pop
jb
cmpsb
sub
lea
adcl
nop
fists
ja
sbb
fs
lahf
mov
inc
jp
push
test
decl
sbb
ret
push
bound
xor
cmp
cmp
mov
aaa
jmp
fsts
push
test
pop
xor
ds
push
repnz
enter
jae
ljmp
rolb
sub
pop
add
lret
insb
icebp
stc
jg
aad
movsl
xor
sahf
aaa
cld
incl
ret
sbb
sbb
fdivrl
pop
adc
inc
les
jmp
insl
inc
dec
cwtl
sub
mov
lret
inc
adc
inc
shl
sub
ljmp
lods
pop
jle
xchg
jg
pop
mov
push
and
or
mov
push
js
lods
ljmp
js
dec
pop
xlat
arpl
cmp
hlt
jp
inc
jl
push
stc
add
pop
ljmp
mov
das
test
sbb
dec
movsl
scas
icebp
xchg
push
pushl
sarb
push
insl
shrl
push
dec
pop
fchs
jmp
repnz
test
xor
sbb
cld
inc
xchg
jmp
dec
or
bound
sub
pusha
lea
jne
ljmp
jge
pusha
movsb
mov
mov
gs
call
mov
call
push
addr16
push
pcmpeqb
or
sbb
inc
pop
sub
jne
jg
and
xchg
in
stos
inc
push
faddp
dec
call
push
rol
sbb
out
decb
or
pop
dec
sbb
call
push
insl
fwait
xor
or
lock
call
imulb
mov
xchg
cmpsl
sbb
mov
pop
adc
outsl
mov
enter
and
hlt
inc
stos
jbe
mov
adc
jg
jb
pop
ja
jns
bound
inc
nop
jb
dec
cld
lods
dec
jg
out
dec
xchg
int
out
xchg
inc
cmp
pop
jle
add
loop
or
adc
clc
mov
add
popf
xchg
push
pop
adc
orb
ds
test
pop
nopl
lcall
dec
mov
sarb
xchg
xchg
pop
xchg
testb
js
fmuls
insb
in
fimull
push
iret
jp
jle
icebp
in
xchg
popa
rcll
clc
dec
sbb
jmp
xor
adc
or
js
movsl
pop
fidivrl
lods
or
outsl
loop
push
insl
mov
push
adc
pop
xchg
add
jmp
push
inc
cli
inc
data16
pop
push
dec
cmc
ljmp
xchg
jo
mov
ljmp
imul
pop
repnz
push
fidivrl
in
scas
cmp
fwait
mov
cmp
sbb
xchg
imul
lahf
cwtl
jns
mov
push
fldt
decl
jne
test
pop
leave
cmp
sub
adc
dec
stos
and
jg
push
and
and
ret
jmp
call
pop
les
ja
sub
push
xchg
ss
fs
setl
dec
rclb
incl
sub
das
and
stos
mov
and
sbb
popa
push
mov
aam
ret
pop
pop
jg
inc
into
and
mov
pop
sarb
adc
adcb
pop
imul
inc
incl
mov
mov
mov
push
adc
xorl
xchg
out
dec
mov
dec
or
loope
in
jnp
dec
cmp
dec
push
push
ja
incl
mov
nop
stos
aas
pusha
adc
xchg
adc
ja
and
mov
rcrl
icebp
incl
mov
ret
pop
and
ror
mov
jp
mov
cmp
pop
inc
and
adc
cmp
rcll
or
fnsave
jmp
adc
aaa
push
pop
out
mov
push
push
lods
mov
das
xor
subl
arpl
fcomip
fldcw
lahf
je
inc
push
jmp
mov
jge
iret
aas
jmp
xor
decl
adc
jno
int3
pop
dec
pusha
dec
pop
jmp
and
cmpsl
xlat
jbe
adc
and
sbb
clc
sub
pop
imul
sbb
jae
aas
dec
jg
inc
mov
cltd
fcoms
cmp
cmpsl
test
or
in
pop
dec
xor
mov
or
sbb
jmp
cmpl
or
jo
sbb
adc
mov
add
add
push
inc
and
inc
scas
outsl
incl
notl
push
push
aaa
cmp
and
jne
add
lcall
and
cmp
popa
and
sub
and
and
aad
add
push
sbb
pop
sbb
push
pop
jecxz
cmpsb
es
loopne
ljmp
lea
and
push
push
adc
adc
out
adc
add
mov
punpckhbw
jmp
jnp
or
lret
repnz
lock
pop
dec
mov
sbb
mov
xor
inc
out
dec
test
jp
enter
or
sbb
out
bound
icebp
pop
mov
sbb
int
adc
xor
xor
mov
and
ljmp
fnstsw
and
add
cli
in
xchg
pushf
and
decl
inc
cltd
test
ds
cmpsb
mov
cmp
loope
rolb
addps
lcall
and
lea
inc
and
rcll
xchg
insb
mov
std
jne
sbb
jg
jg
mov
pushf
mov
mov
stos
addl
rolb
mov
pop
sahf
jmp
sbb
dec
insl
mov
insl
inc
dec
scas
pop
or
ljmp
push
push
pop
bnd
adc
mov
outsl
ja
daa
jb
sbb
push
call
inc
dec
mov
mov
outsl
mov
xchg
test
or
scas
ljmp
in
mov
add
sbb
out
add
movsb
out
mov
jmp
and
ljmp
sahf
and
pushl
jp
xor
in
lods
adcb
scas
cmp
icebp
arpl
sbb
cmpsl
leave
jg
pop
dec
jbe,pn
sbb
ljmp
pop
push
lcall
adc
sbb
test
movhps
cmpsb
pop
or
sahf
cmp
cmp
arpl
cli
ds
ljmp
lret
mov
in
mull
push
movsl
shr
sar
push
ss
addr16
or
push
add
jne
xchg
cmp
adc
clc
sub
add
pushl
imul
punpcklwd
jbe
xor
popa
popa
pop
and
adc
dec
adc
es
mov
xchg
fcoms
ljmp
push
pop
fdivrs
imul
and
cs
inc
inc
pop
inc
movsb
ds
pop
aas
inc
push
or
pop
inc
cld
fs
inc
aaa
outsb
or
out
xchg
jo
add
add
xor
add
jg
or
or
je
out
sbb
sbb
pop
push
idiv
ljmp
sub
add
push
dec
add
add
or
add
dec
push
lcall
inc
xor
add
cmp
xor
adc
add
pop
cmp
stos
lods
mov
call
push
adc
inc
cmp
adc
and
xor
or
adc
arpl
pushl
cmp
xor
cmp
add
xor
cmp
sbb
daa
xor
pop
sbb
or
jg
ret
es
dec
push
sbb
adc
mov
pop
push
xor
or
add
adc
lcall
aas
push
scas
mov
adc
push
aas
pop
cs
push
or
fists
sbb
cs
cs
das
pop
and
ds
pop
add
add
in
outsl
test
sbb
xor
sbb
adc
and
in
or
test
cmp
adc
add
adc
sub
sbb
call
pop
mov
fsubl
ljmp
and
sub
mov
add
or
and
add
ljmp
inc
push
cmp
int3
add
or
and
xor
push
sbb
mov
push
das
sbb
adc
pop
add
or
ds
popf
call
adc
and
sbb
and
psubw
sbb
adc
das
out
aam
jl
imul
sbb
pop
push
push
cmp
and
cmp
or
sub
pop
popa
jno
pop
pushl
std
jp
inc
dec
jo
ss
push
dec
pop
dec
push
dec
insb
jp
inc
push
imul
dec
mov
push
inc
addr16
jb
pop
inc
dec
push
data16
cli
decl
jbe
push
fs
je
dec
inc
jno
lcall
dec
jne
jno
fs
cli
mov
insl
dec
jp
jns
fs
inc
gs
dec
pop
inc
jb
jb
dec
fs
or
pop
orb
inc
pop
push
push
push
inc
jo
idivb
pop
mov
imul
inc
ja
and
inc
addr16
dec
push
pushw
push
inc
popa
lods
jo
push
jbe
push
dec
dec
push
dec
inc
push
push
pop
arpl
push
inc
pop
outsl
push
dec
pop
dec
and
outsl
jle
sbb
jp
push
push
push
dec
jbe
inc
push
dec
fs
inc
ljmp
inc
pop
arpl
outsl
sbb
inc
imul
mov
mov
js
dec
jge
add
sahf
je
add
fs
das
add
add
or
adc
or
repz
adc
sbb
sbb
cmp
repz
and
and
repz
repz
cs
xor
repz
xor
ds
pop
cmp
repz
inc
push
push
push
jmp
fdivp
push
sub
bound
dec
sahf
out
pop
cmp
cmp
inc
dec
dec
jns
out
push
push
pop
test
out
sahf
out
fs
jnp
je
jl
addb
nop
xchg
pushf
cwtl
iret
repz
movsb
mov
jo
repnz
shrb
scas
jmp
lock
xchg
call
js
lss
inc
and
ss
neg
imulb
arpl
das
push
imul
jb
outsb
inc
jo
add
iret
jnp
cmp
test
or
repz
dec
push
loop
aaa
push
imul
in
and
sti
add
mov
push
or
xchg
scas
pop
out
mov
push
sub
push
data16
jae
push
ja
jb
add
arpl
jb
mov
pop
jecxz
insb
xor
inc
arpl
jo
insl
push
outsb
cmpsl
aaa
jbe
fistpl
subb
je
outsl
aaa
mov
imul
insb
neg
sbb
mull
push
bound
das
push
xlat
scas
cmp
imul
jne
insl
xlat
loopne
das
inc
mov
loopne
mov
data16
addr16
mov
mov
inc
jg
fidivs
add
je
jns
sbb
inc
fsubp
jns
inc
inc
inc
insl
insb
add
push
rcr
lock
push
jp
add
out
cmp
loope
pop
push
arpl
addr16
cmp
outsl
push
jae
popa
lock
sub
mov
cmp
or
pop
arpl
ficomps
cli
dec
push
popa
xchg
cmp
push
adc
or
dec
ja
rcll
fimuls
je
insl
aaa
adc
jnp
dec
xchg
pop
das
push
xlat
or
sbb
xchg
pop
das
and
cs
pop
inc
arpl
cmpsl
and
mov
ja
popf
mov
fs
sti
outsl
fwait
add
xchg
pop
xor
leave
fs
enter
or
inc
add
push
cmp
jb
add
and
mov
pxor
jae
jb
fsubrl
and
push
adcb
push
xchg
sbb
push
lods
mov
push
inc
arpl
push
pmaddwd
ret
pop
sub
arpl
add
pop
inc
jnp
fstpt
push
mov
cmp
bt
in
add
inc
dec
out
inc
cmovo
lret
push
aaa
add
add
add
imul
sub
pop
jb
xchg
dec
movsb
ds
mov
jg
pop
dec
push
push
sbb
mov
add
mov
jmp
sub
jns
cmpsl
pop
sbb
out
or
or
outsb
leave
in
in
or
or
or
daa
adc
jmp
pop
inc
fucomi
jbe
inc
push
addr16
das
push
nop
outsb
mov
mov
insl
push
and
iret
repz
jb
pop
orb
or
jb
jns
or
xchg
sub
cmp
ss
mov
pop
addr16
inc
lds
adc
cwtl
push
or
push
adc
test
mov
or
imul
adc
call
movsb
add
repnz
mov
cmpsb
fisttps
mov
cld
inc
cmc
ja
inc
jle
test
shll
xor
cmp
enter
inc
mov
iret
mov
in
call
mov
push
add
mov
xor
fcomp
loopne
jb
jle
lods
push
cmc
add
negl
or
push
pushf
imulb
push
xor
jo
scas
clc
scas
pop
nop
xchg
flds
js
pop
nop
push
fnstsw
aas
jb
subl
xorb
icebp
daa
push
jo
xchg
push
test
jle
pop
aaa
adc
stos
jo
and
mov
push
or
cmp
repz
in
or
lcall
adc
adc
sbb
fdivl
iret
repz
push
pop
pop
repz
out
mov
shlb
mov
repz
and
js
jns
jns
cmp
cld
hlt
inc
ja
out
add
or
mov
daa
adc
xchg
pop
mov
aas
inc
inc
add
cmp
loop
add
push
cmp
repz
pop
push
dec
inc
iret
repz
cmp
and
adc
iret
repz
add
cld
sar
sahf
out
hlt
lock
call
out
fmul
les
mov
movsb
cwtl
nop
jns
out
test
jo
sub
or
push
in
jae
xchg
sub
jb
jg
fistpll
add
xchg
leave
push
mov
xchg
push
mov
int
jns
repz
xor
sbb
sti
insl
add
push
pop
ja
repnz
xchg
mov
repnz
das
push
mov
repz
dec
insb
pop
mov
xchg
cli
pop
aaa
mov
outsl
imul
pop
stos
aas
aas
mov
jle
outsb
addr16
inc
aas
outsl
jne
pop
outsl
add
jb
dec
gs
pop
stos
mov
push
dec
sub
out
movsl
pop
or
dec
add
add
sub
push
or
aas
mov
lahf
pop
push
inc
das
ficoms
xor
xchg
add
rorb
add
rolb
and
pop
imul
testb
add
add
push
mov
gs
dec
and
jg
fcmovnu
leave
in
mov
addb
pop
popa
subb
into
outsb
mov
pop
out
pusha
pusha
or
jle
or
pop
mov
mov
add
andl
or
push
not
in
rolb
sbbl
add
push
pop
not
sbbl
ja
jbe
addl
loopne
out
loopne
jnp
sbbl
mov
sbbl
lock
out
outsb
add
data16
orb
pop
clc
add
push
int3
jmp
push
rolb
xchg
das
and
rclb
clc
cld
mov
nop
xchg
incl
xchg
sti
fsubp
xchg
dec
cmc
iret
adc
jp
adc
addb
pop
push
mov
das
cld
pusha
aas
fadds
push
xlat
pop
jle
jg
jbe
rcrb
jo
push
out
pop
inc
ja
loop
insb
out
push
inc
jle
loopne
push
mov
pop
xor
xchg
push
mov
dec
inc
ret
push
add
mov
aad
pusha
scas
outsl
add
inc
leave
dec
sahf
xor
add
xlat
mov
inc
dec
push
pop
xlat
mov
mov
fsubs
ja
das
mov
push
dec
xor
pop
jg
shlb
mov
dec
jnp
sub
jle
dec
mov
pusha
pop
aas
fildl
insb
jmp
icebp
outsl
add
pop
nop
mov
rcrl
faddp
dec
sbb
das
pop
das
add
jge
sarl
add
dec
in
dec
sub
pop
mov
dec
insl
shrl
das
fisubrs
mov
mov
sarl
das
adc
add
rorb
outsl
mov
cmp
loopne
shrl
inc
cmp
scas
addb
mov
gs
rcll
subl
lock
sub
das
sbbl
das
shrl
jle
stos
sarl
data16
out
out
or
add
jmp
mulb
mov
orb
orb
vmread
psadbw
movaps
add
orb
loopne
enter
clc
cld
nop
pop
enter
enter
add
pop
enter
clc
cld
cmp
jo
add
aas
pop
scas
adc
pop
fisttps
out
loop
jb
iret
mov
in
cmpsb
push
fdiv
lret
add
or
or
fwait
int
add
add
add
and
sub
fldcw
add
inc
add
das
mov
or
push
xchg
add
es
int3
add
repz
pop
out
adc
test
iret
repz
cltd
int3
sbb
xor
imulb
incl
xor
sahf
cmpsl
sub
push
xor
out
lret
jnp
xchg
incl
xor
out
sahf
cltd
int3
sub
dec
popf
mull
add
cltd
daa
std
repz
inc
push
xor
xor
iret
repz
xor
xor
xor
cmp
repz
xor
xor
repz
repz
xor
xor
cmp
iret
xor
xchg
es
xor
and
adc
out
add
data16
sahf
out
data16
data16
cmp
push
data16
cmp
xor
xor
int3
int3
jmp
push
data16
outsb
cwtl
pop
xchg
test
add
mov
repz
popw
call
es
cmp
out
call
cltd
cltd
mov
cltd
sbb
fisubrs
cltd
cltd
xor
pop
mov
iret
shrl
lcall
mov
mov
test
xor
push
mov
cmp
imul
push
data16
jae
xor
int3
iret
sbb
xor
int3
mov
int3
cmp
repz
int3
cmp
out
push
int3
int3
sbb
rcrl
push
push
cmp
repz
dec
repz
cmp
dec
mov
xor
cmp
cwtd
int3
cs
int3
out
cmp
repz
int3
int3
int3
test
es
incl
data16
out
fnsave
mov
push
and
movsl
add
add
data16
add
add
fwait
xlat
add
add
add
add
adc
data16
jbe
mov
mov
in
cmp
pop
in
cmp
icebp
add
lock
lock
in
fsubrl
aas
xor
mov
test
mov
mov
add
pop
icebp
jg
mov
scas
dec
fildl
cwtl
jns
mov
fneni(8087
inc
add
jbe
insl
mov
aas
mov
mov
fildl
icebp
jg
or
shrl
mov
fcmovnu
dec
fildl
int3
mov
fistpl
mov
sub
roll
add
cmp
mov
sbb
aas
inc
sbb
or
add
inc
xlat
push
mov
add
cltd
xlat
mov
adc
jg
mov
filds
cmp
insb
inc
ret
sbb
shll
loopne
loope
mov
mov
mov
icebp
jg
loop
add
or
fcmovb
repnz
aas
sbbl
rcll
roll
inc
hlt
test
movsb
gs
addl
sbbl
pop
xchg
sbb
add
cmpl
inc
cmc
inc
sbb
inc
loop
aas
in
cmp
sub
aas
sti
push
outsl
cmp
push
leave
push
add
mov
adc
jb
push
pop
push
dec
mov
cmp
dec
mov
sbb
pop
outsl
pop
and
adc
xor
inc
test
scas
mov
outsb
sub
pop
hlt
add
leave
cmc
repnz
hlt
dec
xor
in
or
adc
icebp
add
aam
pop
add
push
add
sbbl
add
add
dec
sub
or
jns
shll
loope
pop
xchg
cmp
sbb
pop
push
sbb
sbb
sti
mov
rcrl
or
sub
mov
fcoml
neg
loopne
data16
fs
mov
inc
shll
xchg
xor
pop
push
or
popa
mov
or
call
in
fabs
fcmovnbe
pop
push
bound
in
out
adc
or
or
js
insl
add
push
fistl
lds
cmp
nop
and
popa
loope
mov
pop
loopne
jle
cwtl
pop
cmpl
fs
outsb
loope
arpl
jbe
bound
pop
pushf
push
sbb
xchg
imul
rorb
das
pop
out
adc
shrl
or
mov
mov
and
jbe
or
and
insl
push
fidivrs
je
rol
iret
shrl
mov
cmp
shl
pop
sarl
fdivl
mov
rorl
insl
jp
mov
push
and
pusha
repnz
arpl
sbb
popa
mov
out
out
out
sbb
rol
pop
or
roll
sbb
and
adc
loopne
push
pop
arpl
push
jl
mov
and
fcom
mov
insl
inc
xorl
sbbl
and
add
mov
push
pop
shll
pusha
add
popa
mov
xchg
sbb
pop
loop
mov
je
mov
mov
and
rol
mov
add
mov
sbb
pusha
xor
imul
ret
add
pop
imul
pop
add
pop
int
pop
mov
pop
loop
sbb
push
dec
test
fisubs
pop
pop
lds
in
fiadds
orb
roll
loop
sbb
test
or
lcall
adc
xor
outsl
adcl
in
mov
mov
add
add
and
popa
daa
and
pop
add
data16
pop
addr16
ficomps
push
mov
and
jnp
add
mov
aas
ja
adc
mov
add
ds
mov
es
pop
mov
jo
pop
xor
mov
out
jbe
jae
or
mov
xor
xor
cmc
mov
pop
pop
mov
imul
inc
add
fxch
add
mov
out
inc
aaa
or
hlt
clc
dec
sarl
add
addb
cmc
mov
pop
push
push
nop
nop
lock
insb
sub
clc
add
jo
and
cmp
add
outsl
neg
in
adc
sbb
or
xor
sbb
add
push
pop
test
ss
sbb
jo
fimull
outsb
pop
sbb
movsl
sbb
add
add
cmp
push
ja
inc
js
jnp
jle
sub
aaa
or
mov
add
add
sbb
xchg
dec
add
cmp
aaa
insl
sub
mov
xor
add
aas
and
into
mov
dec
push
pusha
test
jb
sub
add
or
or
js
je
ja
mov
mov
sub
add
pop
mov
jg
jnp
je
pop
aaa
add
es
cmp
xchg
jns
inc
add
fsubrs
xchg
jae
gs
push
mov
add
repz
pop
insb
dec
shl
aaa
add
fs
sub
and
xlat
push
scas
jae
push
sub
aas
sub
cmpsb
ss
or
xchg
dec
in
stc
push
sub
mov
cs
sub
pusha
insl
gs
sbb
xor
lcall
das
inc
add
xor
and
fidivl
popa
sub
xchg
push
push
out
push
daa
cmpsb
andl
mov
out
push
sbb
ret
popl
pop
xchg
jo
shll
jae
or
dec
dec
roll
cli
jne
push
xchg
int
in
mov
and
xor
not
xchg
mov
add
mov
addb
aas
sub
cmp
adc
sbb
pop
test
add
aaa
cmp
pop
mov
es
inc
mov
inc
mov
pop
add
and
loop
cmp
dec
iret
mov
daa
scas
push
mov
scas
popf
jbe
jne
jae
xor
ficomps
pop
jb
and
outsb
out
scas
mov
jae
out
icebp
fisubrs
insl
dec
or
mov
xchg
fildll
and
insl
out
repnz
sarl
aaa
fstl
cwtl
lahf
outsb
xchg
andl
add
pop
jb
shlb
arpl
mov
mov
bound
addl
xchg
xorb
mov
mov
adc
mov
push
ss
push
push
jle
ret
jnp
push
mov
inc
jle
testb
jbe
arpl
outsb
ja
xlat
fstpt
and
mov
cwtl
fadds
addr16
imul
bound
jae
or
loope
mov
jnp
adc
stos
or
fucom
jae
jne
cmpsb
jns
fisubrs
sub
scas
or
movsb
adc
jecxz
push
imul
lret
pop
dec
repnz
jae
adc
jbe
loop
stos
push
scas
mov
mov
sbb
ja
inc
shll
ja
mov
pop
pop
jmp
je
ret
fidivs
fldt
mov
jmp
fs
adc
mov
xlat
outsb
stos
push
fcomi
fiadds
das
sub
daa
inc
loop
mov
mov
xchg
and
inc
add
dec
adc
inc
scas
loope
mov
imul
cmpsb
mov
popa
ret
jae
out
dec
outsb
ret
out
mov
fbld
ret
jb
aaa
sub
jg
push
mov
lods
jp
push
pop
fwait
das
adc
addr16
mov
sbb
loop
arpl
out
mov
lret
adc
cmp
repz
jb
mov
jmp
inc
testl
into
mov
addb
ficomps
mov
cmp
loop
fildll
push
iret
pop
scas
or
and
pop
dec
jmp
insb
in
pusha
mov
ja
xchg
push
addl
aaa
addr16
insl
push
insl
and
repnz
fisubs
mov
jo
cli
pop
mov
jg
ja
mov
push
outsl
and
test
test
xor
gs
lods
pusha
inc
aas
cmpl
dec
fildll
je
or
outsl
pop
insb
sub
or
roll
or
jnp
fucomip
and
xchg
pop
lret
inc
ja
roll
xor
mov
and
sub
inc
sbb
cmpsb
sti
inc
daa
xchg
pop
or
sub
aaa
jmp
dec
jmp
sub
pusha
ret
gs
or
fs
adc
xchg
mov
inc
sbb
imul
ja
insb
xchg
push
adc
nop
pop
jns,pn
or
or
addr16
push
cmp
pop
ljmp
rcrb
push
or
icebp
add
cmpsl
fs
loope
test
pop
dec
lods
add
and
sub
lret
push
mov
test
mov
iret
xchg
call
insl
repz
pusha
xlat
fistpll
jne
and
add
mov
sbb
lcall
test
pop
jno
loop
loopne
iret
jae
and
cli
or
sbbb
js
lahf
fisttpl
xlat
sahf
pop
mov
ret
mov
inc
sub
ret
es
jmp
or
and
ret
adcb
out
and
mov
mov
add
pop
sbb
add
shll
imull
ds
sbb
insl
xorl
xchg
push
mov
add
inc
pop
femms
mov
outsb
inc
les
sbb
cmp
fucomp
icebp
scas
lahf
insl
ja
jge
ret
pop
bound
add
rcr
push
mov
xor
xor
iret
mov
ja
imul
imul
mov
mov
lcall
add
and
sbb
imul
or
push
push
roll
pop
ret
or
mov
fcomps
sub
push
iret
jecxz
pop
pushf
pop
shlb
and
repz
aas
dec
push
add
movsb
sbb
arpl
push
fwait
mov
mov
or
fcmovnbe
movsb
jmp
scas
sbb
mov
aas
pop
sbb
xor
jno
out
and
sahf
gs
xor
sarl
and
xchg
adc
sbb
aam
leave
inc
outsl
bound
scas
add
stos
push
jb
push
or
addl
mov
push
sbb
xchg
lods
cmp
test
bound
push
sbb
pop
pop
push
add
cmp
add
adc
adc
scas
dec
mov
jle
mov
push
mov
pop
psrlw
push
pop
out
icebp
mov
insb
push
inc
sbb
cmp
lods
cmp
repz
addr16
dec
inc
dec
inc
es
imul
outsl
dec
mov
or
imul
dec
push
lea
idiv
sbb
fs
inc
imul
xchg
pusha
fs
inc
fdivs
cmp
add
lret
arpl
pop
data16
scas
xor
jb
dec
fs
es
mov
push
pop
cwtl
dec
mov
arpl
or
sub
push
xorl
arpl
push
sub
sub
cmp
dec
cs
sar
dec
jae
inc
inc
push
dec
adc
adc
mov
push
xchg
xchg
rcll
faddl
pusha
fwait
sbb
gs
fmull
inc
pop
popa
pop
ret
adc
jge
sub
pop
jne
push
imul
test
mov
pop
xor
mov
push
sbb
dec
gs
adc
inc
pop
fimull
mov
jae
fs
pop
jbe
dec
adc
das
in
jne
loope
mov
fs
shlb
mov
push
push
adc
mov
xor
add
sbb
dec
icebp
pusha
nop
scas
mov
cmpsl
cwtl
pusha
or
jae
mov
lret
adc
popa
pop
inc
or
xchg
dec
outsl
fs
cmp
shlb
fsts
and
pop
mov
inc
mov
aas
push
jne
enter
jmp
inc
mov
jo
dec
inc
dec
cmp
and
shlb
jb
push
hlt
xor
mov
cmc
xor
dec
loope
inc
and
sbb
inc
iret
xor
testb
add
jns
imul
insl
sub
fcomps
test
xchg
bound
sbb
xor
jnp
sarl
lea
insl
cmpsb
sbb
ret
dec
push
aad
push
fdivrl
rol
stos
inc
jae
cmp
fimuls
or
int
je
ja
mov
push
fwait
fwait
cwtl
scas
push
ret
jns
push
xor
lret
std
shrb
imul
sbbb
mov
fldlg2
mov
dec
pop
inc
bound
test
mov
jmp
jo
pop
cmc
add
fldt
jbe
lods
mov
jae
les
aaa
imul
xor
mov
ljmp
je
push
shll
cmp
or
push
loop
popa
insl
lods
rcl
cmp
sbb
cli
push
inc
sbb
in
outsl
cmc
sbb
pop
cs
mov
jo
xchg
cmp
add
popa
add
mov
outsl
ret
push
sbb
dec
inc
imul
inc
adc
add
or
jo
loope
push
mov
aas
cmp
jb
add
cmp
add
addr16
gs
inc
or
call
and
lret
jae
dec
dec
cmp
push
and
jmp
adc
std
xchg
imul
aaa
lods
cmp
imul
xor
test
mov
shlb
addr16
cmp
rolb
inc
and
or
enter
xor
inc
adc
repz
push
iret
sarl
jle
inc
adc
pop
sub
ret
add
inc
bound
cli
out
inc
mov
cld
insb
dec
es
nop
jno
dec
jne
inc
imul
shll
inc
push
lcall
xchg
add
inc
dec
mov
and
jo
pop
icebp
imul
xchg
insb
cmp
xor
loope
mov
insb
pushf
test
leave
loopne
push
and
insl
scas
adc
push
mov
inc
js
sub
and
push
xchg
jbe
ret
inc
adc
shl
les
in
arpl
outsb
adc
lcall
add
addr16
bound
pop
inc
arpl
jnp
inc
div
jae
xchg
jne
push
inc
insb
jl
sub
imul
xchg
and
mov
outsl
add
scas
pop
les
push
cmc
cmp
imul
dec
outsb
out
sahf
insl
pop
mov
pop
imul
fucomi
aad
subl
outsl
test
inc
dec
jmp
cs
push
pxor
xchg
push
mov
or
lret
sbb
popa
jmp
iret
push
cwtl
push
xchg
mov
fdiv
cmc
inc
roll
xchg
cli
push
arpl
mov
mov
cmp
jg
add
adcl
sbb
jae
shlb
pop
jne
inc
scas
mov
imul
je
jle
pop
sub
pushf
inc
xor
jo
xor
cmp
dec
mov
nop
add
arpl
stos
push
fs
or
mov
push
mov
fldl
xorl
je
imul
pop
sti
fwait
imul
mov
mov
aaa
and
rolb
push
push
jae
cmp
rcl
sub
mov
sub
push
arpl
dec
in
fbld
sbb
sub
inc
pop
data16
adc
fsubrs
data16
push
and
aas
or
pop
add
addr16
sbbl
rorb
pop
sub
mov
lret
xchg
ret
cmpsb
test
xor
push
testl
lods
pop
push
mov
sbb
in
mov
cmp
jae
mov
inc
mov
push
and
inc
es
outsb
dec
jbe
cmpsb
in
push
push
outsl
adc
push
and
insl
mov
bound
adc
sub
and
xor
add
in
test
adc
imul
xor
mov
jo
fstl
mov
inc
cmp
mov
cmp
jno
or
cmpsl
add
xchg
stos
sub
rorb
pop
sub
xor
sub
ja
add
addb
popa
mov
movsb
cmp
dec
add
add
mov
mov
and
adc
xor
xchg
xchg
pop
inc
cmp
jns
push
fnstcw
sbb
sbb
push
mov
cmp
ret
pop
les
pusha
dec
clc
add
xor
and
add
dec
loope
jb,pn
rorb
popa
js
testl
out
inc
cs
xchg
xor
cmp
xchg
mov
dec
jbe
aam
push
mov
jb
test
sahf
dec
fisubrs
in
push
add
es
jg
filds
add
add
push
incl
add
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
dec
add
add
inc
add
