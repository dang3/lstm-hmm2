call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
inc
jbe
pushaw
push
jo
int
bound
jg
push
rol
out
ret
xorb
xchg
push
pushaw
push
jo
add
adc
and
xor
cli
shl
loopne
lock
movsb
mov
outsl
push
jg
dec
jo
add
adc
and
xor
div
lds
call
aad
fsubrp
pop
cmp
pusha
xor
leave
fwait
out
cmc
enter
pop
stos
imul
aad
icebp
imul
incl
aad
jmp
push
sbb
xchg
cmp
xchg
clc
mull
jle
ljmp
mov
outsb
pop
shl
out
mov
in
pop
lds
push
cltd
or
add
orl
sbb
sub
and
imul
xor
adc
push
jne
sub
xchg
gs
mov
mov
lds
adc
mov
xor
sahf
and
sahf
sbb
orb
inc
add
adc
and
xor
shl
loopne
lock
mov
adc
xor
and
xor
inc
inc
jp
arpl
cltd
mov
loopne
mov
ret
stc
imul
and
and
push
push
movsl
addb
add
jbe
data16
sbb
dec
add
xor
shl
out
lock
mov
inc
jbe
pushaw
push
jo
add
adc
and
xor
shl
out
lock
mov
inc
jbe
jne
rcrl
mov
sbb
into
leave
xchg
add
loope
jo
mov
dec
arpl
movsl
test
pop
ret
adc
lret
and
call
cmp
aas
fistpll
shlb
push
mov
mov
cmpsb
jb
xchg
cld
mov
push
insb
dec
xlat
data16
jle
in
mov
xchg
xchg
arpl
mov
jbe
push
xchg
inc
shll
and
jecxz
and
jg
pop
and
push
fiadds
xchg
mov
xor
mov
and
test
rorb
and
ret
push
pop
add
les
push
cmp
xlat
mov
ds
jb
sub
orb
jecxz
sbbl
and
jle
lret
or
cwtl
sub
inc
mov
aam
das
fwait
stc
and
mov
repz
adc
cltd
mov
pop
dec
scas
add
push
dec
imulb
add
dec
mov
cld
jne
stc
in
je
outsb
test
and
cmp
scas
pop
test
dec
daa
pop
jo
cwtl
add
sub
outsl
das
les
cwtl
dec
inc
ss
jae
xor
push
ret
icebp
roll
push
pusha
pop
inc
sbb
outsb
pop
add
shlb
mov
mov
fstpt
push
out
loope
inc
jnp
into
mov
fldl
jecxz
daa
popf
jae
and
mov
test
stos
mov
ret
jl
in
add
and
xlat
cs
test
xor
jl
mov
xchg
mov
sub
test
es
push
inc
pop
push
lds
dec
fwait
xchg
out
fwait
cmp
popf
or
xor
dec
inc
imul
shr
out
stos
xor
dec
pop
leave
and
and
repnz
cmp
xchg
push
lret
mov
movsb
cltd
sub
stos
adc
lock
sub
adc
add
out
in
insl
fldenv
sbb
sahf
jl
dec
mov
lds
xchg
and
enter
cmp
cltd
mov
adc
mov
jmp
enter
pushf
adc
in
mov
push
cwtl
out
inc
or
cli
fcmovnu
jbe
rcrl
and
inc
sahf
call
sbb
inc
sahf
imul
jp
and
insl
sub
into
pop
xor
out
fs
inc
js
xchg
mov
lea
test
xchg
xor
and
and
pop
pushf
addr16
jmp
insl
addb
mov
push
lret
xchg
cmp
dec
nop
xchg
fsubrs
out
sub
push
mov
hlt
dec
sbb
ret
jns
cli
lods
jecxz
enter
push
push
lcall
enter
cmp
sbb
mov
dec
xchg
imul
insl
outsl
pop
xchg
sti
mov
xchg
jne
jg
fisttps
fcoml
or
aas
lcall
stos
xor
jbe
and
loop
dec
loopne
jo
xchg
xchg
lods
jne
out
int
mov
and
cmp
adc
ss
out
pushl
mov
decl
and
jns
out
add
in
ficoms
lret
ljmp
mov
pusha
popa
lret
add
and
icebp
adc
pop
jne
js
mov
repz
lods
mov
mov
xchg
outsb
aaa
lock
dec
or
in
dec
or
lcall
arpl
push
fldcw
loope
rcrb
xor
lock
mov
ds
lds
cs
into
addl
cmc
cmp
pop
sbb
fisubl
lret
jns
jle
add
rclb
fdivs
cli
mov
sbb
roll
inc
nop
jmp
loope
inc
outsb
mov
lahf
dec
push
hlt
jo
adc
add
cmp
jp
push
or
or
push
or
push
aaa
bound
out
rolb
and
xchg
aas
daa
dec
jge
add
or
fiaddl
push
xchg
aaa
inc
rep
bound
imul
inc
xchg
jge
inc
mov
ret
jae
outsl
xchg
imul
in
dec
jne
push
pushf
in
fisttps
jns
js
xchg
adc
pop
in
push
inc
xor
mov
outsl
and
in
mov
scas
mov
bound
push
mov
movsb
sub
lods
and
jg
imul
xchg
inc
xor
cmp
cmc
loopne
popl
lret
inc
cs
jg
or
sbb
into
adc
mov
mov
push
outsl
xor
sahf
int3
insl
mov
mov
rorl
adc
xchg
jns
ss
test
icebp
std
mov
jl
adc
mov
mov
mov
and
mov
cmp
cmpsl
xchg
dec
sbb
adc
ficompl
test
mov
dec
dec
mov
les
add
add
mov
fwait
mov
cmp
push
cmpsl
xchg
inc
inc
push
pop
jp
push
or
and
mov
or
sti
mov
lcall
clc
add
test
push
sahf
inc
ja
ds
in
out
jbe
lret
push
popf
xor
push
ret
jns
popa
pop
dec
or
xor
imul
add
jns
test
xchg
or
pop
ljmp
sbb
xchg
jb
and
push
outsl
inc
in
sahf
lods
call
int
pop
add
inc
out
adc
xlat
mov
add
fnstcw
xchg
test
sbb
movsb
aaa
and
cmp
cwtl
push
jbe
cmp
jbe
jb
daa
popa
push
mov
xchg
pop
push
stos
stos
pop
out
adc
sbb
jnp
loop
icebp
pop
cmp
push
popa
add
and
xor
out
fsubrl
cwtl
aam
out
incb
call
cmpsl
sub
mov
xchg
jae,pt
adc
lods
dec
xor
or
cmp
and
inc
pushf
xchg
and
jmp
mov
xor
leave
test
repnz
and
or
sahf
mov
pop
xlat
sti
std
test
add
mov
push
jl
mov
and
adc
xor
dec
ds
mov
jb
fidivrl
jl
xchg
imul
mov
fs
frstor
mov
faddl
out
xor
push
scas
cmp
push
jae
cld
iret
push
bound
rorb
in
and
popa
lds
mov
cmp
jne
insb
movsb
outsl
pop
rorb
lcall
mov
jb
dec
sub
movsb
andl
addr16
inc
mov
push
out
ret
jl
aas
aam
lods
push
add
int3
inc
xor
in
push
jno
incl
imul
sarl
xchg
repz
dec
push
add
int3
dec
xor
stos
fwait
mov
scas
pop
xor
mov
addr16
or
inc
xlat
lcall
sbb
arpl
and
sbb
daa
sbb
dec
aam
add
jne
xchg
insb
pop
and
sbb
sub
mov
dec
fisttpll
cld
xor
insl
ret
scas
fdiv
ds
shll
xorl
dec
or
dec
into
std
mov
ret
mov
jmp
add
cs
daa
fwait
ja
fisttps
sbb
mov
sbb
outsl
mov
mov
push
push
lret
and
pop
and
add
ds
shlb
in
lods
rcll
or
sbb
out
cmpb
les
add
adc
mov
pushf
mov
fwait
divl
and
clc
sub
arpl
jbe
push
pop
out
dec
jo
dec
pop
fwait
enter
xchg
hlt
setle
cmp
mov
jno
xchg
ljmp
pop
mov
cmp
insb
out
xchg
cmp
inc
fs
mov
nop
dec
aam
sub
add
popf
test
mov
lret
addr16
stc
lret
in
lahf
rcrb
mov
loopne
xchg
gs
dec
popa
mov
mov
sbb
ret
push
sub
xchg
imul
sahf
inc
divl
dec
icebp
push
mov
dec
stc
sbb
and
jne
push
inc
ret
pop
adc
inc
xchg
cmp
cwtl
negl
mov
xchg
push
lret
cmpsb
lcall
mov
sti
xchg
ror
movsl
mov
aam
rcrl
mov
test
cwtl
cwtl
mov
cwtl
inc
jno
sbb
out
and
shl
int
shr
add
pushf
mov
add
fwait
and
mov
jg
mov
jne
push
les
mov
mov
push
fildl
insb
pop
cmpsl
test
push
in
rclb
rcll
nop
fs
mov
mov
adc
xor
add
mov
int3
pop
cmc
inc
push
mov
test
sub
enter
sahf
jle
pop
xchg
adc
pop
dec
testl
mov
sti
mov
imulb
adc
dec
js
out
mov
or
mov
andb
adc
mov
lds
dec
lret
mov
frstpm(287
mov
daa
xlat
cmp
mov
jmp
and
sub
add
nop
clc
gs
xchg
lcall
or
or
mov
cmp
mov
cmp
fs
xor
aaa
inc
mov
fbstp
in
mov
fisttps
push
subl
loop
dec
add
rcr
mov
or
xchg
out
sbb
in
sub
adcb
dec
jmp
mov
mov
aad
lods
jl
stos
or
loop
mov
call
clc
or
push
jmp
das
cmc
jl
sbb
adcb
fwait
add
movsb
add
xor
imul
and
or
loope
adc
jns
push
inc
sahf
es
repnz
mov
fidivs
jnp
dec
mov
inc
shr
adc
fsub
sbb
pop
insl
jae
mov
aam
xchg
xchg
sub
inc
adc
aad
cmp
dec
call
mov
sbb
loop
xor
xor
test
jo
inc
scas
loop
push
xchg
dec
push
loop
xchg
mov
cmp
ss
sbb
mov
daa
dec
adc
negl
dec
into
push
cmpb
jmp
jno
fiadds
xchg
adc
movsl
loop
movsl
mov
into
out
jecxz
push
aaa
mov
data16
dec
ljmp
je
jmp
loope
pop
push
dec
popa
adc
es
fiadds
xor
lock
inc
cmp
cwtl
sbb
and
add
out
sti
icebp
js
pop
cmp
insb
adc
cmc
es
adc
cmp
andl
leave
xor
push
int
mov
pop
sbb
push
or
aas
test
lock
pop
xchg
cmp
mov
cmp
push
lock
ljmp
jmp
adcb
mov
mov
test
cli
mov
mov
imul
dec
stc
add
xchg
incb
lret
daa
or
test
pop
pop
cwtl
push
mov
daa
xor
dec
push
sub
mov
lcall
fstps
jmp
in
std
fistps
out
cmp
scas
push
clc
push
xor
jecxz
pop
test
xor
pop
push
adc
sub
into
push
push
inc
pushw
push
ljmp
lcall
jno
dec
mov
test
sbb
fcoml
fsubr
int3
in
pop
loope
adc
mov
popa
leave
fld
jl
movsb
xchg
addr16
sub
mov
add
push
and
aaa
in
cmpsl
lock
mov
in
adc
or
cmpsl
lea
jnp
into
out
mov
pop
fs
mov
stc
ds
cwtl
ret
add
stc
adc
cld
pop
push
push
mov
ds
and
stos
cli
xchg
lcall
fildll
outsb
adc
sub
out
inc
adc
xchg
std
stc
test
clc
pop
rorl
sbb
jp
xchg
je
in
add
adc
sbb
push
fsubrl
mov
and
or
fs
mov
test
cmc
sub
jmp
jnp
xchg
movsb
dec
push
mov
mov
int3
and
movsl
repz
stc
mov
ss
cmp
pop
dec
mov
xchg
fistpll
add
pop
pop
or
loop
adc
ja
sbb
loopne
je
inc
cli
mov
fnstenv
test
in
mov
rorb
das
mull
jl
jne
dec
sub
fildll
adc
imul
cmpsb
dec
clc
jmp
or
adc
adc
notl
pop
inc
adc
lods
sub
sbb
stc
sbb
dec
adc
xchg
xchg
cmp
or
cmp
push
xchg
cmc
cmp
push
in
stc
mov
stos
movsl
shll
imul
and
das
ret
xor
dec
ljmp
sub
fnsave
imul
scas
mov
mov
mov
fbstp
and
inc
xor
addr16
enter
pop
stos
test
or
pusha
fisubrl
sbb
mov
shl
jecxz
scas
or
mov
fcomps
fsubr
fildll
or
adc
test
mov
mov
mov
movsb
les
bound
sub
fwait
push
popa
add
push
scas
je
cmp
jl
nop
or
fildl
ljmp
add
push
adc
or
outsb
dec
pop
daa
jge
in
pop
mov
stc
cmp
mov
xchg
lock
push
or
aam
lret
arpl
sub
outsl
mov
loop
call
cmc
rolb
sub
dec
out
mov
mov
jno
in
adc
dec
xor
loope
mov
pop
mov
popl
stos
mov
dec
jmp
mov
shrl
sbb
add
out
xor
in
andl
and
jmp
lcall
stc
xor
mov
adc
inc
mov
adc
test
jp
sub
cmpsl
shlb
inc
repnz
adc
jle
mov
sahf
rcr
int
aam
xchg
pushw
cmp
jle
xchg
push
in
jo
sbb
ja
ss
outsb
pushf
xor
std
jmp
add
aas
aam
sbb
fistpl
mov
add
mov
xchg
into
push
jb
mov
into
xchg
stos
pop
jmp
mov
cmpsb
push
test
hlt
adc
mov
lods
mov
mov
mov
mov
or
stos
jae
inc
cmpsl
pop
shr
test
lods
iret
xor
mov
push
call
subb
outsb
out
stc
in
adcl
mov
nop
cmp
xchg
xchg
mov
add
cmpsl
imul
es
adc
dec
jae
fcmovu
enter
push
xor
popa
inc
jmp
iret
fwait
mov
jnp
lahf
stc
popa
movsl
test
ss
iret
arpl
mov
ljmp
add
adc
fwait
loop
fstps
orb
xor
je,pn
stos
das
mov
add
jg
std
and
adc
popa
lret
test
lret
sbb
pop
jbe
or
mov
sbb
loope
jl
mov
std
lods
mov
jo
rcrb
dec
in
fstl
push
ss
inc
lods
cmp
xor
sbb
fldl
cmp
lcall
dec
in
inc
or
icebp
adc
sbb
dec
rorl
iret
lea
shrb
and
lret
pop
inc
cmp
fs
fstps
pop
pop
cmpsb
sbb
jecxz
inc
sbb
in
cmp
mov
aas
mov
pop
push
mov
adc
fwait
outsl
cltd
and
ret
fsubrl
mov
xchg
jmp
pop
ss
xorl
mov
pop
mov
xchg
mov
das
cs
std
add
sbb
aam
mov
xor
lret
jae
fldenv
ret
adc
and
mov
xchg
cmp
aam
mov
das
rorl
sbb
rcrl
adc
add
les
jne
test
mov
mov
or
rorb
lcall
adc
cwtl
aam
and
xchg
js
cmpsb
inc
aas
xchg
jo
or
jne
lods
push
mov
jmp
sub
mov
adc
xchg
inc
push
add
xor
xor
ja
jl
in
mov
dec
mov
int
dec
sbb
out
mov
ret
cmp
sbb
dec
xchg
pop
inc
cld
mov
outsb
sub
adc
rcl
add
rcrl
mov
xchg
int3
jbe
push
sarl
sub
in
jecxz
into
and
je
add
loop
leave
into
fs
add
stos
rcrb
loope
dec
aad
push
adc
mov
jmp
push
pop
insb
ret
in
popf
mov
xchg
movsl
shrb
and
mov
cmp
outsl
push
clc
in
push
cld
shrb
lahf
xchg
pop
insb
mov
movsb
push
sub
movsb
add
out
push
dec
test
and
mov
les
loopne
mov
addl
fisubl
cmc
cmp
sub
push
mov
xlat
fisttpll
test
dec
fadd
and
dec
or
pop
stc
imul
std
add
mov
jp
gs
push
pop
in
jp
or
fiaddl
idiv
lret
in
cmp
test
into
mov
jne
sbb
jae
enter
xor
pminsw
pop
in
xor
xor
stos
xor
or
inc
and
fsubrs
fsubs
mov
xchg
jmp
fwait
mov
lcall
test
stos
push
aas
out
loop
cmp
fnstcw
xchg
iret
call
add
stos
cmpsl
inc
mov
mov
pop
repz
and
jb
inc
rcll
cld
sub
push
call
daa
insl
loopne
mov
mov
mov
push
fldcw
add
leave
out
enter
push
mov
cmpsb
jbe
jae
ljmp
push
lret
outsl
jle
inc
adc
lods
jae
mov
popl
aaa
shlb
push
fisttpl
fnstcw
roll
lock
test
jg
lcall
or
aad
shrl
sahf
mov
movsb
popw
out
shr
mov
mov
sarb
mov
in
sti
cli
jle
stos
test
adc
or
es
insl
gs
pop
stc
inc
es
jno
inc
cli
lock
mov
insb
ret
test
imul
ss
out
test
sub
rcll
and
outsb
push
pop
in
pop
shlb
in
imul
push
ja
dec
in
jecxz
or
jae
jmp
insb
aad
sub
mov
ljmp
mov
out
fs
stos
cmp
and
aad
sbb
xor
icebp
into
cmp
gs
test
cmc
cmpb
repz
add
dec
pop
sub
mov
mov
insl
out
push
cmp
orl
pop
outsl
sbb
push
gs
xor
fs
arpl
sahf
lret
decl
test
daa
ja
shl
xchg
mov
dec
jo
jae
jae
sub
rcrb
jbe
cli
xchg
imul
lock
mov
sbb
std
push
mov
aas
stc
adc
stos
add
lods
and
xchg
inc
sbb
jns
xlat
std
mov
jle
adc
cmpsl
shll
aad
pop
scas
es
test
jmp
xchg
inc
xchg
jecxz
dec
rcl
test
and
dec
inc
ja
cs
add
cmpsl
adc
push
or
dec
psubsw
popa
fiadds
divb
mov
rcrl
lret
add
je
lds
jo
mov
push
xchg
cmpsb
ret
dec
dec
decb
nop
mov
mov
fists
aaa
arpl
mov
bound
add
iret
test
cs
sbb
mov
ret
add
dec
pop
xor
gs
movsl
int
push
incb
jb
fs
mov
push
lds
inc
in
jge
dec
ja
lods
fmull
mov
push
dec
out
xor
jmp
lods
sbb
mov
enter
add
push
dec
lret
int
loopne
jo
imul
int3
pusha
lds
cltd
leave
inc
pusha
sbb
pop
pop
push
lcall
stc
pop
xchg
pop
jmp
std
popaw
push
jo
add
adc
and
xor
shl
out
lock
mov
inc
jbe
pushaw
push
jo
add
adc
and
xor
shl
out
lock
mov
inc
jbe
data16
jo
xorb
and
mov
shl
out
lock
nop
cmpsb
mov
jb
bound
jo
add
adc
and
xor
shl
dec
dec
lock
loopne,pt
shr
sar
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
add
lcall
xor
push
scas
jle
orb
sbb
dec
rcrl
push
jp
mov
lcall
push
push
arpl
jae
orl
cmp
and
repz
sbb
lcall
push
out
add
loop
aad
jns
jne
dec
ret
sbb
lcall
fistps
dec
std
add
mov
clc
and
mov
jp
mov
xlat
or
mov
out
add
mov
lock
push
inc
lret
push
es
stos
fwait
mov
pop
inc
dec
sub
mov
lahf
dec
mov
xchg
push
cltd
and
cmp
cmpsl
ss
push
pop
pusha
stos
repz
dec
xor
loopne
xor
sub
lods
mov
adc
jae
push
dec
inc
pop
dec
xchg
dec
shll
push
lahf
xchg
jb
stc
into
aas
mov
loop
cli
sbbb
cs
cmp
xchg
sbb
sbb
repz
dec
jmp
sbb
fcomps
stos
arpl
les
jb
aad
and
dec
andb
mov
push
xor
arpl
jae
orl
ret
shlw
data16
gs
cmp
or
negl
rcrb
push
inc
and
sbbl
iret
fildl
jb
movsl
sbb
test
xchg
icebp
outsl
hlt
dec
fimuls
pop
xor
mov
mov
cltd
adc
frstor
push
flds
scas
push
fisubl
jae
orl
sbb
dec
rcrl
push
jp
mov
lcall
push
fisubl
jae
orl
sbb
dec
rcrl
push
jp
mov
mov
push
mov
mov
lret
pushf
dec
ficoms
inc
aaa
jl
aad
popf
mov
sub
xlat
fdivrs
in
dec
rcll
xchg
sarl
cmc
sub
and
fs
inc
sbb
mov
mov
xchg
test
or
sbbb
sub
scas
fstps
dec
and
xchg
xchg
ds
nop
xchg
scas
jae
add
out
stc
lea
fisttpll
mov
sbb
push
mov
jae
mov
push
rcrb
ds
pmuludq
add
mov
mov
push
movsb
mov
scas
pusha
mov
sbb
and
pop
fisubs
and
pop
jb
fcompl
test
lods
cmp
outsl
in
aaa
adc
add
adc
jno
das
aam
lock
push
sbb
lret
jle
sub
inc
adc
fwait
sub
adc
jl
jmp
push
idivb
fdivrl
orl
push
or
add
loope
push
mov
lock
movsb
rol
cmp
daa
or
test
sti
jl
in
or
xchg
jnp
jecxz
add
mov
jl
xchg
ret
cmp
and
mov
adcl
adc
aas
jns
jl
pop
adc
inc
push
cwtl
popa
dec
jo
stos
in
shlb
stos
int
stc
mov
ds
outsb
call
jecxz
test
aad
mov
enter
movsl
mov
out
loop
dec
cs
sbbb
loope
int
enter
sub
repnz
jmp
mov
cmp
push
icebp
pop
in
movsl
sub
imul
jmp
out
adc
add
clc
ljmp
xor
ret
insb
aaa
sub
dec
popa
lcall
mov
and
in
mov
loopne
nop
push
pop
mov
ja
bound
mov
into
adc
mov
add
pop
and
push
push
ficomps
daa
lret
mov
int
cmp
jo,pn
gs
add
inc
in
jmp
cmp
mov
jb
bound
mov
add
pop
push
mov
sbb
outsl
insl
dec
xchg
daa
cwtl
or
icebp
dec
xchg
movsb
cltd
addr16
xchg
arpl
call
hlt
push
pusha
xchg
out
outsb
shll
inc
pop
inc
jmp
addr16
mov
sbb
sarb
ret
dec
add
jge
inc
clc
xchg
call
push
jne
jb
shll
das
xlat
push
mov
test
cltd
cmp
jp
mov
mov
or
insb
pusha
jnp
and
mov
push
cmp
jo
enter
mov
sub
shrl
daa
std
xor
repz
fisubrl
mov
mov
mov
jecxz
sbb
sbb
and
sub
push
push
addr16
repz
pop
imul
inc
mov
inc
pop
divl
decl
pop
mov
or
push
mov
cmp
push
insb
jecxz
cwtl
cs
lea
cmp
into
aad
dec
jb
cmpb
or
pop
lahf
cld
stos
int
enter
add
sub
cmpl
add
mov
adc
rcrl
cmp
dec
outsb
xchg
addr16
inc
add
movsl
pop
xlat
stc
movsb
xor
loope
cmp
in
jne
mov
xchg
aaa
xchg
mov
or
xor
jge
je
bound
jbe
mov
cli
lods
mov
fs
iret
mov
cmp
and
fmul
in
jnp
aaa
pop
xlat
cld
mov
or
jmp
out
lods
in
mov
add
inc
cmpsl
cmpsl
jge
rolb
jbe
or
ffreep
mov
int
int
bound
dec
mov
test
es
mov
outsb
inc
inc
ss
push
mov
insl
jl
lret
lahf
fmull
lahf
sahf
sbb
pop
jge
stos
scas
sub
lcall
nop
stos
mov
lea
sbb
fs
lahf
inc
mov
orb
fcmove
xchg
stc
int
and
mov
xchg
mov
jnp
int3
sbbb
push
cwtl
add
xchg
cmpsb
subb
push
cli
outsl
insb
ret
out
cltd
testl
subb
dec
stos
add
jecxz
addr16
cli
je
xchg
xchg
std
jge
push
push
cmc
pop
add
mov
lea
pusha
ss
jge
xchg
xchg
daa
rcrl
sub
pop
xchg
fdivrl
pop
insb
jb
push
aad
jb
push
sarb
mov
cmp
xchg
mov
xchg
push
push
or
sub
dec
fwait
sbb
sub
pop
subb
cltd
fs
jo
bound
stc
pop
dec
iret
push
cmpsb
call
imul
jl
or
into
daa
aad
add
pop
jecxz
pop
cli
dec
cmpb
clc
xchg
add
fbstp
in
sbbb
enter
imul
jle
mov
movsl
adc
dec
inc
add
or
out
out
push
push
xor
mov
mov
pop
loopne
popf
incl
xchg
inc
ss
or
dec
rorl
outsb
sbb
fcmovu
lea
fidivrs
push
leave
xchg
jg
sar
out
sarl
jmp
lock
add
iret
int3
jne
lds
in
mov
testl
out
leave
xchg
cmpsl
movsl
xor
mov
rclb
mov
scas
add
pop
inc
js
cmp
lahf
adc
clc
or
movsb
xor
and
stc
cmp
das
fidivrs
sbb
cmc
popl
in
arpl
mov
xor
mov
pop
adc
mull
and
add
add
mov
pop
inc
shlb
fmull
enter
into
mov
jns
insb
sbb
cmp
cmpsb
dec
je
add
jmp
and
out
jg
popa
dec
clc
dec
fildl
jg
and
clc
xchg
mov
pop
adc
bound
ret
jae
pop
mov
test
popa
cmpsb
popf
lods
pop
pop
xor
das
repnz
sbb
int
cld
cmp
and
mov
add
popf
into
push
lret
push
hlt
in
fs
bound
scas
push
subl
repnz
movsl
lods
inc
inc
lahf
mov
adc
repz
xor
pop
pop
mov
and
ss
test
mov
scas
ja
clc
adc
decl
dec
and
cmpsb
in
xchg
fs
mov
aas
mov
js
mov
mov
xor
mov
add
scas
sahf
stos
aam
jecxz
jge
mov
sub
aaa
push
mov
pop
cmp
push
push
das
xchg
mov
mov
add
or
mov
and
fs
shrl
test
scas
cmpsb
cmc
sub
or
add
stos
xchg
je
sti
imul
xchg
xchg
mov
insl
addr16
pop
add
lret
addr16
mov
stc
lcall
icebp
fcomp
dec
mov
push
mov
inc
mov
test
dec
xchg
jle
into
mov
aas
mov
mov
ficomps
movsl
dec
sub
sbb
sub
hlt
jnp
add
lret
out
xchg
inc
in
lds
fdivl
scas
rcrl
add
cmp
loopne
dec
and
pop
test
loope
movsb
adc
pop
cmc
das
mov
xor
dec
rcrb
jmp
pop
xor
mov
inc
dec
or
sub
jg
and
sub
mov
das
dec
push
popa
fiaddl
or
negb
ret
dec
in
mov
push
or
fisttps
stos
cmpsb
xchg
sub
and
cltd
inc
insl
loop
or
add
xor
outsl
les
push
out
sub
lods
test
daa
dec
cmp
jmp
in
jno
fbld
mov
jb
mov
jecxz
movsb
jo
or
xchg
imul
in
inc
outsb
loopne
cli
enter
fistpl
fmulp
popf
fnsave
adc
push
popf
dec
arpl
sbb
and
xchg
sahf
mov
insl
mov
int3
lcall
sub
mov
test
jnp
icebp
pusha
cli
daa
cli
push
pop
jecxz
ds
jle
add
mov
out
cs
push
xchg
lds
mov
fucom
jno
fsubr
subl
push
mov
mov
rorl
or
pop
stos
dec
mov
addr16
les
iret
mov
jno
add
mov
cmp
lret
mov
xchg
jno
sub
pusha
mov
ja
sbbl
flds
mov
or
cmp
jo
sub
insb
popf
aaa
xlat
ss
cmpb
mov
aad
test
inc
pop
out
int
cmp
outsl
lods
mov
sbb
push
pop
jecxz
push
fstpl
shlb
dec
inc
mov
xor
jns
ds
add
push
jecxz
in
pop
pop
leave
aam
fisubrs
mov
aas
lret
sahf
xchg
sarb
mov
scas
jno
orl
sub
jae
jo
sti
xor
push
inc
sub
scas
inc
ds
aas
pop
dec
test
and
arpl
mov
cmpsb
xchg
mov
pop
sub
cmp
or
nop
ret
mul
test
das
or
stc
cwtl
ud2
addr16
aas
jmp
push
xor
push
inc
mul
lds
pop
fcmovnu
add
shrl
cltd
and
jge
jecxz
rorb
push
outsb
ljmp
cmp
out
xchg
hlt
mov
sbb
sub
loop
mov
sbb
sbb
or
xor
lods
mov
int3
lret
sub
inc
sbb
and
in
dec
adc
fdivp
mov
mov
mov
lea
aaa
push
ret
retw
imul
leave
je
enter
jle
and
sub
mov
inc
jg
les
gs
pushf
or
test
mov
daa
out
mov
sub
lds
rcll
in
and
cs
in
pop
mov
lret
pop
cli
in
inc
xchg
push
mov
inc
xchg
shlb
fcompl
xor
dec
bound
repz
add
sarl
popf
dec
popf
stos
xchg
stos
adc
mov
lods
jl
mov
mov
sub
sbb
xadd
push
xor
je
pop
mov
clc
pop
add
movsl
std
fnsave
lods
mov
inc
mov
rcrb
cmp
div
dec
push
add
pop
subl
int
push
or
aad
je
mov
or
fwait
movsl
call
ret
lret
xchg
sbb
aam
mov
pop
xor
movsl
js
jne
mov
sbb
lahf
push
lods
push
push
rolb
fcoms
aad
out
sbb
add
adc
mov
outsb
add
hlt
push
mov
cs
popa
push
inc
enter
inc
popf
call
aad
mov
rcrb
out
dec
xchg
jo
fs
xchg
and
hlt
mov
mov
stos
push
decl
jmp
movsb
and
or
jns
push
negb
cwtl
mov
xorl
call
scas
mov
add
mov
popf
out
stc
mov
xor
imul
mov
pop
fwait
and
mov
xor
int3
stos
xchg
insl
ficoml
sbb
pop
mov
sahf
mov
mov
cltd
pop
or
xchg
ds
out
hlt
mov
add
xlat
push
xchg
lods
addb
sub
xchg
sub
mov
cltd
or
std
sub
popa
loope
jecxz
jno
xor
into
inc
mov
dec
inc
loop
in
in
jmp
push
ja
popl
orb
cmpsb
xchg
enter
fidivs
push
fmul
shlb
inc
and
jae
pop
mov
les
ja
inc
dec
repnz
or
sbb
inc
ljmp
add
mov
fucomip
das
rcr
fdivs
pop
pop
mov
xchg
pop
outsl
mov
pop
iret
jns
ret
push
xchg
xchg
sub
incb
xchg
cld
repnz
mov
jg
insb
js
pop
xor
xor
mov
rolb
int3
les
jg
sbb
xor
cli
ret
test
bound
add
xchg
rorl
mov
lea
and
mov
daa
aam
sub
xlat
out
adc
xor
or
xchg
jmp
aas
dec
or
mov
mov
mov
pusha
and
pop
inc
sub
scas
in
push
pop
jp
ret
inc
and
add
inc
pusha
xchg
add
jae
pop
xchg
xor
rcrl
out
dec
mov
pop
lds
cmp
rorl
je
or
je
mov
lock
icebp
aaa
xor
push
fsts
mov
mov
inc
push
xchg
pop
jne
xlat
pop
push
adc
cmp
imul
push
push
jle
arpl
pusha
sbb
cmp
adc
es
in
aas
xchg
fisttpl
jg
ds
push
in
nop
lret
movhps
adc
pop
mov
sub
cmpb
repnz
fwait
add
lds
inc
repz
dec
rep
pop
testb
dec
dec
pop
sub
ss
cmp
fistps
xor
jb
and
xchg
and
jo
fmulp
cli
int
cwtl
insl
lahf
jmp
pusha
xor
popf
out
lock
push
mov
std
push
pop
out
test
xlat
pop
push
mov
cli
dec
lock
dec
sub
shlb
xchg
sbb
test
in
sbb
mov
dec
sbb
pop
testl
pop
add
lret
or
push
xchg
jg
imul
scas
and
pop
not
test
xchg
aam
shrb
sub
ds
sub
jno
push
mov
sub
icebp
sub
or
lods
jp
inc
sbb
push
cmc
sub
mov
cmpsl
js
push
out
movsl
adc
jle
lcall
push
out
lock
sti
mov
adc
xchg
pop
mov
aaa
mov
adc
mov
lret
pop
jb
out
and
add
adc
pop
push
enter
push
mov
push
adc
mov
rolb
aam
insb
ds
fstl
ret
sub
shll
cld
into
and
in
notb
mov
out
frstor
ss
into
sbb
pop
ss
lods
xchg
mov
pop
fidivrs
cwtd
inc
insl
pop
xor
sbb
cmpsb
insb
cmp
push
inc
aam
add
mov
push
or
mov
enter
mov
shll
sbb
shll
xchg
into
cmp
xchg
sub
jle
outsl
push
out
mov
cwtl
adc
xor
sub
mov
jl
mov
test
dec
add
data16
dec
dec
scas
jecxz
insl
aas
or
mov
jmp
pushf
int3
enter
ret
loope
test
pop
mov
jo
xor
push
add
rcr
lock
xchg
sbb
xor
sbb
fdivl
sub
lahf
or
or
test
fsts
out
incb
divl
inc
jp
jbe
xorl
lret
in
imul
jg
addr16
push
movsl
into
test
fnstenv
xor
jnp
fdivrl
mov
insb
sbb
gs
push
jae
pop
fnstcw
rcrb
negl
dec
rcr
dec
cwtl
and
dec
rcll
iret
fildll
dec
insw
in
cmc
pop
into
mov
repnz
mov
cmp
sbb
cmp
sbb
inc
lahf
adc
das
cld
inc
aam
clc
adc
or
lcall
xorl
mov
xchg
sub
adc
cwtl
daa
in
lahf
movsl
and
mov
sarl
fwait
das
rcrb
pop
mov
das
cli
push
repz
cmp
mov
pop
ret
jl
jmp
aas
cli
mov
pop
js
or
mov
iret
int
push
cmp
fistps
ja
mov
decl
cltd
sub
stc
or
icebp
mov
cwtl
aaa
xchg
pop
mov
fnstsw
insb
imul
jecxz
dec
insb
mov
cmp
and
cmc
testl
jl
add
mov
inc
out
cld
mov
jb
pop
xchg
pop
imul
jnp
jmp
push
add
scas
jg
cli
xor
lret
negl
out
test
repnz
sbb
repnz
pusha
shr
popa
cs
fsubs
xchg
or
push
mov
call
add
popf
mov
jnp
add
inc
lock
adc
sbb
jne
mov
int3
mov
mov
rorl
hlt
sub
jno
jge
inc
pop
ljmp
mov
stos
imul
inc
dec
aad
push
es
jb
xor
dec
lock
in
fisubs
mov
cmpl
cs
push
lods
jb
sbb
mov
aaa
fcompl
mov
push
add
mov
and
pop
dec
cmp
and
mov
mov
rolb
imul
cmp
jb
fsubrp
out
jecxz
bound
mov
mov
inc
enter
mov
fdivrs
or
mov
cli
mov
fisubs
and
je
jge
testb
rolb
push
rorb
das
in
mov
lret
xlat
sbb
mov
dec
mov
test
std
loopne
stc
out
in
js
test
xchg
fimuls
xchg
adc
and
fmull
cmp
xor
sahf
cmp
cmp
movsb
mov
mov
das
dec
insb
cli
int3
jnp
cmp
lret
fsubl
or
mov
cmc
xchg
ljmp
out
out
gs
stos
outsl
call
scas
lds
in
inc
pop
cli
pop
dec
test
pop
cmpsl
xor
xchg
cld
and
lcall
insl
popl
jno
or
mov
or
mov
rolb
mov
xor
or
cld
sahf
cmp
add
and
jmp
imul
imul
mov
leave
dec
push
xchg
outsl
shlb
xor
lret
fsubp
incb
sbb
or
jle
decb
push
jmp
insb
jbe
push
adc
loopne
loope
pop
shll
push
xorb
and
ljmp
mov
dec
int3
and
mov
inc
inc
pop
fcomp
cmpsb
cltd
icebp
leave
mov
fadds
jp
adc
jns
mov
in
sub
push
pop
lds
mov
mov
adc
add
sub
lock
dec
std
aaa
lahf
repnz
in
rolb
mov
popa
push
andb
pusha
sub
lods
cmp
inc
jno
fidivs
mov
incl
imul
push
sub
xchg
jl
and
cmp
mov
inc
mov
dec
insl
es
xor
add
int3
adc
and
mov
jbe
lods
imul
xchg
cwtl
sahf
mov
cmpxchg
clc
test
xchg
xor
int
and
addb
pop
sti
jmp
mov
push
icebp
add
loope
jne
mov
out
stos
mov
xchg
out
fnsave
fs
fisttps
inc
pop
mov
es
xlat
fs
mov
push
push
jmp
stos
pop
xchg
std
inc
lret
ss
ficomps
jle
jne
and
enter
and
dec
daa
faddl
add
pop
scas
add
push
popf
shrl
leave
loopne
fmull
and
xor
xorb
or
or
ret
add
fadd
cld
mov
push
clc
popa
orb
jp
cmp
and
mov
dec
push
cmpsb
push
inc
sbb
lcall
pop
jbe
xchg
jb
adc
jns
pop
fisttpll
push
sub
mull
push
cmpsl
lahf
xor
das
sbb
add
push
inc
les
f2xm1
lds
fwait
xchg
sahf
les
rclb
adc
pop
lods
xchg
in
xchg
cmp
and
mov
cmp
xlat
iret
les
outsb
cmp
xor
xchg
adc
dec
sbb
or
scas
lock
xor
repz
mov
inc
loop
shl
or
gs
dec
mov
outsb
xorb
out
jmp
xchg
sub
fstl
popa
push
xchg
nop
mul
out
xchg
xchg
and
inc
inc
fisttpl
mov
call
js
sbb
pusha
mov
cwtl
decl
addr16
and
repz
stos
cmp
mov
sub
idivb
loope
xchg
and
inc
arpl
add
popf
push
cmpl
fs
or
pop
jp
adc
in
dec
cmp
bound
call
testb
rolb
es
out
jae
add
xchg
sub
sub
insb
lea
dec
mov
jns
mov
sub
arpl
lcall
push
fisubl
jae
orl
sbb
dec
rcrl
push
jp
mov
lcall
push
fisubl
jae
orl
sbb
dec
rcrl
push
jp
mov
shlb
shlb
mov
arpl
jae
adc
sbb
dec
rcrl
dec
repz
mov
lcall
push
push
cli
jl
insb
mov
sub
movsl
sbb
in
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
clc
test
mov
lds
gs
add
push
push
je
je
test
mov
in
aad
lds
cmp
add
inc
je
test
mov
les
hlt
xor
inc
fs
push
add
or
add
add
enter
div
sarl
mov
icebp
push
xchg
call
scas
int
and
fwait
je
mov
into
or
movsl
aam
pop
insb
inc
jle
adc
jmp
fucomi
and
push
hlt
paddq
enter
mov
xchg
jbe
jae
mov
jne
ficoml
mov
sbb
call
lds
aam
in
adc
clc
jbe
add
push
addr16
adc
imul
mov
xchg
mov
hlt
cmc
sti
jne
ljmp
inc
add
frstor
mov
push
outsb
cmp
int
fstl
adc
add
add
fs
mov
movsb
jmp
aam
in
hlt
movl
xor
inc
jnp
push
and
movl
mov
push
je
or
sbb
or
and
add
mov
sub
xlat
pushf
xchg
or
inc
imul
add
mov
int3
mov
in
aad
add
adc
and
xor
inc
gs
push
fs
je
test
mov
in
aad
add
adc
and
xor
inc
gs
push
fs
je
test
cmp
xor
adc
xchg
or
push
loope
idivb
cmp
imulb
ljmp
cltd
fildll
adc
inc
mov
cmp
call
mov
aam
pop
cltd
mov
push
repz
outsb
mov
outsl
mov
pop
cmp
and
pop
xchg
dec
inc
fdivs
jg
mov
cmp
pop
nop
rcrl
sbb
mov
jmp
adc
mov
test
add
lret
adc
addb
push
mov
jbe
out
lret
mov
mov
pop
and
xlat
cwtl
ds
cmc
pushf
subb
dec
insb
jno
add
add
sub
cmp
test
inc
repz
in
xchg
lret
adc
push
jle
addr16
int3
adc
xchg
jo
pop
cmpsb
mov
lcall
sbb
mov
insl
jnp
orb
or
xchg
jnp
adcb
pusha
mov
xchg
hlt
jle
in
test
dec
cld
sbb
sub
fistpll
mov
inc
inc
add
xchg
mov
xchg
pop
les
inc
mov
fsubrl
push
push
xor
xor
addl
loope
fwait
sub
and
and
xlat
push
rclb
adc
shll
cmp
fisubrl
add
sub
addl
push
incl
xchg
js
int3
sbb
or
inc
lods
pmovmskb
mov
loopne
sub
push
mov
leave
jmp
mov
or
jo
shrl
cmp
stc
mov
das
out
inc
scas
adc
dec
or
push
sti
ds
outsb
xorl
cmp
push
jo
in
fs
add
int3
movsl
push
cmc
sbb
sub
arpl
fwait
mov
jl
mov
xchg
rclb
movsb
dec
rclb
and
fs
lret
hlt
jae
clc
and
cld
test
aaa
or
out
movsl
sub
lret
data16
movsl
pop
push
jae
fstpl
xor
dec
std
shll
pop
inc
push
jne
fs
mov
xchg
sbb
push
and
jo
jnp
sbb
out
cli
sbb
jno
cmpsl
pop
mov
stos
inc
xchg
daa
js
sbb
xchg
test
call
leave
subb
das
push
mov
xchg
dec
mov
mov
lds
or
ds
fnstcw
xchg
mov
sti
cmp
xlat
and
pop
sahf
pop
inc
cmc
mov
rol
stos
daa
fsts
fildll
dec
test
push
mov
adc
inc
lcall
pop
push
mov
inc
jno
fcmovbe
in
orb
out
pop
fnsave
arpl
xor
pop
insb
mov
dec
test
rorl
pop
mov
cmpsb
sbb
stos
cmp
jnp
fcomps
push
adc
test
adc
mov
or
or
into
stos
hlt
xchg
iret
hlt
and
fists
call
jno
sub
add
pop
mov
push
sti
inc
push
repz
inc
mov
fsub
lea
jle
sub
pop
aaa
pop
imul
shrb
sbb
sub
adc
cli
dec
mov
mov
inc
lahf
xchg
pop
xor
pop
jl
jle
imul
mov
xor
push
mov
xchg
push
mov
lea
pop
scas
outsb
adc
or
mov
fists
fnstsw
in
inc
cmp
pop
sub
in
inc
pop
insl
fstpl
dec
mov
outsl
in
in
ds
sbbb
mov
push
sbb
lods
stc
lcall
sti
pop
loope
stos
nop
and
mov
cmp
jbe
dec
int
orb
in
iret
lahf
aam
fsubp
clc
out
jb,pn
add
aad
fmuls
pop
push
andl
iret
xor
repz
mov
nop
jl
mov
fsts
xor
inc
inc
aaa
push
inc
mov
loop
fisubrl
shll
rclb
aas
or
add
or
adc
sbb
mov
aad
stos
sbb
in
daa
push
inc
fsubl
sub
dec
dec
pop
adc
mov
mul
jmp
and
hlt
mov
addb
inc
jmp
cs
insb
ja
jmp
daa
lods
push
hlt
or
dec
inc
sbbl
sub
xor
and
jb
mov
or
out
out
movsl
lods
ds
sub
push
mov
repz
aam
xchg
cwtl
dec
dec
mov
cltd
cmp
imul
lock
dec
mov
push
mov
rcl
xor
cmpsb
jmp
push
pop
movsb
inc
js
pop
jns
mov
sbb
dec
dec
repnz
in
test
dec
push
push
stos
or
xor
out
mov
jo
push
outsl
cli
sbb
rolb
sbb
lahf
xor
insb
inc
sub
nop
cmp
fwait
push
stos
add
mov
jge
fs
push
cmpsb
addl
lock
mov
test
nop
mov
jnp
mov
jne
fsubp
or
pop
aas
xchg
xchg
xor
mov
add
adc
push
or
sub
into
cs
cmp
pop
loopne
jnp
xchg
fs
xchg
in
lahf
out
aad
and
popl
and
xlat
sub
xor
dec
sub
jmp
dec
or
data16
xor
cli
enter
mov
sub
mov
out
outsb
mov
rorl
lods
mov
jl
cmpsb
xor
cmp
adc
add
mov
push
dec
cmp
sbb
mov
push
sbb
jae
sub
mov
cmp
fwait
daa
dec
frstor
sub
cmp
lcall
mov
inc
push
add
cmp
mov
psubsw
push
daa
mov
mov
mov
jge
in
call
jle
loop
cmp
int3
cmp
lret
push
xor
jo
mov
push
sbb
stos
mov
lret
mov
nop
lea
push
sbb
xchg
stos
fists
xor
fsubrl
insl
dec
mov
out
scas
add
xchg
int
cmp
pop
dec
outsb
jl
mov
rorl
js
jl
dec
fldt
jmp
mov
das
adc
test
arpl
mov
push
sbb
mov
pusha
push
push
les
pop
xchg
mov
mov
pop
daa
mov
in
in
js
std
fsts
adc
repz
inc
adc
hlt
sbb
insl
push
cli
mov
sub
lods
insb
arpl
dec
ss
aaa
push
mov
mov
or
aam
mov
mov
insl
loope
xchg
lods
xor
jno
sbb
sti
insl
movsl
ss
imul
sbbb
cmp
fiaddl
out
in
dec
and
xchg
sar
loop
jno
jo
imul
outsl
jnp
je
mov
dec
je
pop
dec
xchg
jae
xchg
out
cltd
and
cmp
inc
lods
enterw
ss
test
jecxz
add
mov
mov
or
lcall
ret
faddl
mov
push
test
xor
pop
push
mov
lret
xchg
std
adc
mov
mov
cmp
mov
and
es
pop
adc
push
cli
dec
sti
sarl
sub
and
lods
cmpsb
int
jbe
sbb
mov
setae
dec
jmp
inc
mov
adc
jne
cli
dec
int
xchg
cmp
xchg
cmc
xchg
leave
testb
sete
mov
lret
rolb
pop
std
cmovo
arpl
xor
icebp
or
add
ja
push
iret
and
repnz
cmpsl
jge
dec
mov
pop
pusha
test
daa
sub
or
loope
dec
mov
mov
test
pop
aam
mov
out
loop
stc
iret
xchg
icebp
and
fnstcw
and
push
mov
call
inc
inc
cltd
scas
xchg
outsl
push
mov
gs
aam
mov
sub
das
or
jl
dec
das
sbb
fdiv
xor
lods
pop
call
test
test
mov
dec
fisubl
and
movl
push
mov
push
mov
insl
mov
add
clc
lods
mov
sub
hlt
sbb
or
out
lret
mov
stos
jle
sub
push
xchg
mov
jmp
fsubs
xor
or
jbe
cmp
out
pop
inc
cmc
stos
inc
cltd
pusha
test
in
lret
push
testl
sub
jno
dec
movd
ja
mov
add
neg
lods
xor
mov
mov
xor
into
mov
ficompl
push
mov
sbb
pop
jecxz
sbb
push
fstpt
mov
repnz
iret
jno
jmp
movsb
mov
push
rorb
stos
mov
daa
and
aad
cmp
ret
lods
and
jecxz
pop
cld
mov
popa
fbstp
mov
fsubl
dec
xor
mov
enter
iret
and
dec
repnz
jle
fisubrl
mov
out
dec
sbb
or
xor
test
add
movsb
and
es
adc
mov
repz
push
cltd
ret
cmc
sbb
cmp
adc
xor
pop
frstpm(287
pop
in
mov
fucomip
hlt
jp
inc
repz
test
adc
mov
and
adc
jb
dec
pop
lds
pop
int
fcoms
scas
cltd
pop
dec
rorb
pop
imul
add
pop
in
push
sub
repz
jo
jno
test
ljmp
jno
pushl
push
dec
mov
ds
push
inc
mov
scas
lret
inc
push
push
fcompl
rorb
jmp
jmp
dec
mov
les
mov
mov
lret
and
rcl
fmulp
sub
jno
inc
cltd
bound
test
jg
fcompl
jecxz
mov
add
testb
daa
pop
test
rorl
or
dec
jmp
or
outsl
and
inc
xor
push
add
cmp
adc
jnp
adc
adc
xchg
fdivrl
mov
hlt
scas
adc
movsl
cwtl
cltd
adc
sbb
mov
insb
sub
movsl
mov
cmp
cmp
xlat
popa
data16
jo
cmpb
xchg
xchg
mov
sbb
adc
leave
push
cmpsb
inc
das
dec
mov
fucomi
and
push
imul
test
movsb
lock
xchg
daa
push
cmp
jg
mov
pop
stc
adc
jns
xchg
sub
mov
pop
jb
cltd
in
notb
push
ffree
dec
mov
or
push
push
mov
mov
lock
adcl
test
fwait
fs
movsb
in
loop
pop
adc
dec
lahf
sub
jno
push
and
jae
test
arpl
xor
xor
mov
sti
xor
stc
mov
xor
stc
cmp
aam
sbb
loopne
jnp
pushf
mov
cmp
mov
sub
add
dec
adc
cmp
jo
xchg
orl
out
loope
or
out
or
sti
imul
jns
dec
inc
add
cmp
mov
mov
cmp
add
aaa
aaa
and
mov
cmpl
insl
pop
mov
ss
divl
adc
xchg
and
sbb
loope
imul
and
adc
xor
adc
mov
sub
mov
inc
xorl
stos
lock
jns
mov
inc
fstps
dec
out
fisttps
mov
imul
jo
subb
sub
sti
cmpsl
movsl
xor
es
mov
mov
mov
test
xchg
movsl
pop
pop
js
inc
mov
inc
lea
cmp
sbbb
push
or
cmp
push
in
pop
loopne
pop
pop
fcomp
lods
mov
cmc
fbld
lcall
enter
push
mov
cltd
adcl
jne
ficompl
fcmovnb
pop
test
int
xchg
insb
mov
cmc
jno
pusha
mov
stc
mov
out
in
cli
clc
aaa
insl
insl
xor
out
in
cmp
out
mov
mov
xchg
inc
dec
mov
jl
jb
fistpll
jge
sti
inc
negl
mov
out
int3
enter
push
outsl
addl
lahf
ret
popf
les
outsb
adc
pop
in
iret
lahf
rclb
out
jnp
ja
jp
dec
push
test
lret
mov
pop
xor
lds
sahf
data16
popa
xchg
cmp
mov
je
sbb
lcall
mov
idivl
mov
ljmp
mov
lahf
add
xor
sub
adc
add
mov
sub
sti
xor
inc
push
push
inc
pop
dec
dec
mov
cmp
mov
adc
adc
lcall
imul
adc
call
stc
lret
jne
cmp
int
cmpsb
xlat
movsb
inc
sahf
icebp
test
aam
int3
sub
cli
sbb
mov
cmpsb
sub
xchg
dec
sbb
fs
sti
outsl
xor
loopne
push
lahf
xchg
inc
negl
movsb
cld
xchg
or
pop
outsb
loope
mov
aam
jp
inc
or
imul
cmpsb
inc
jnp
push
in
leave
daa
xchg
out
xchg
xor
fwait
in
jae
mov
adc
or
mov
add
test
adc
shr
push
jns
add
stos
scas
adc
testl
dec
cmp
jo
mov
xchg
mov
cmpsl
mov
or
jmp
add
push
xchg
dec
lock
loopne
cmp
jbe
adc
adc
rolb
fdivrl
sub
cmp
stos
jecxz
int3
or
cmp
loope
cmp
mov
or
dec
pop
sarl
push
dec
insl
gs
xorb
aaa
jbe
jle
sarl
pop
jne
xchg
cli
xlat
out
mov
mov
add
loope
stc
cli
cmp
fs
fcomip
pop
fistpll
jb
mov
ss
xchg
andb
cmp
ret
lret
cmpsl
insl
repnz
lret
lcall
adc
dec
popf
lods
mov
lret
push
lahf
xchg
icebp
out
leave
iret
push
and
call
lock
sub
mov
xchg
imul
and
pop
jae
lcall
frstor
jae
insl
sub
out
js
cmp
icebp
repnz
stc
pop
enter
mov
lds
inc
mov
adc
mov
daa
mov
aad
cmpsl
rorl
mov
subl
sub
xor
paddsw
movsl
lock
jp
mov
push
or
mov
sbb
fwait
pop
xchg
mov
in
dec
rorl
xor
in
je
fmuls
xor
out
in
inc
push
loope
mov
loope
inc
pop
cmp
ss
lahf
inc
jb
mov
jnp
xchg
movsl
cs
xor
shll
test
movsb
popa
fstpl
mov
lea
cmpsl
push
pop
mov
mov
icebp
icebp
or
cmpsl
adc
mov
out
push
mov
cmpl
push
or
jns
and
mulb
mov
sub
add
inc
cmp
xchg
jb
add
cmpsl
or
stc
dec
xchg
cld
sarl
jl
insb
orb
xchg
fwait
push
lcall
cltd
fsubs
les
pop
les
ljmp
adc
dec
sti
cmc
iret
cmpb
sbb
sub
mov
dec
test
sub
add
rclb
xor
and
push
cltd
out
mov
cmp
mov
or
jns
jecxz
cmp
lods
mov
sub
and
movsl
aas
push
mov
dec
aad
push
pop
mov
or
test
mov
punpckldq
sbb
mov
pop
mov
cld
out
dec
mov
dec
xor
mov
cld
push
addr16
pusha
and
mov
add
jmp
ret
enter
stc
mov
add
insb
movsb
sbb
je
insb
add
daa
or
add
adc
cmp
mov
xchg
test
fmuls
movsb
fwait
inc
fimuls
test
loopne
xchg
aas
enter
xor
cmp
lock
xchg
andb
jg
xor
icebp
repz
jb
addr16
add
cwtl
adc
loopne
je
test
stos
sub
notl
fildll
mov
mov
and
sub
arpl
and
mov
sub
adc
mov
sbb
pop
inc
data16
int
jecxz
cmp
pop
xchg
inc
shl
mov
jo
idivl
jno
xor
pop
cld
loopne
jecxz
mov
xchg
mov
incl
mov
sahf
mov
dec
cmp
push
push
sub
cmp
xlat
scas
std
out
push
cmpb
mov
mov
test
xchg
loop
cmp
jg
jne
dec
gs
daa
pop
data16
roll
andb
decl
in
fisubl
movsl
inc
sti
mov
cmp
leave
ljmp
add
imul
xchg
cld
jl
les
hlt
cltd
stos
sbb
pop
pusha
pop
cli
test
mov
jecxz
mov
enter
lock
iret
daa
out
cmp
stos
push
inc
cmpsb
insl
ss
dec
ss
repz
adc
shll
std
sahf
into
and
jge
add
jae
cmp
pop
imul
in
add
loope
adc
decb
jb
push
pop
cmp
std
into
pusha
lret
jle
dec
mov
xor
outsb
sub
test
xlat
sbb
mov
adc
mov
xlat
adc
aam
jbe
xor
adc
jns
ss
pop
loope
xor
push
dec
fstpl
push
dec
in
in
popa
lret
sahf
or
fldcw
mov
ret
ljmp
test
push
xchg
sub
jle
push
out
xchg
sbb
xorl
addr16
sub
fldl
push
push
das
cltd
loope
arpl
and
pop
call
repz
jmp
adc
bound
dec
and
xor
es
repz
pop
xor
cmpsl
jp
and
movsl
lret
insl
mov
pop
scas
sbb
push
lods
xchg
cmp
cwtl
mov
push
push
sub
es
je
cmp
dec
sub
xor
push
inc
mov
add
jecxz
and
push
jne
or
xchg
addb
sbb
repz
push
dec
dec
testb
js
stos
aaa
inc
lea
push
jp
push
cmp
jle
xor
dec
imul
cmp
cmp
push
ljmp
push
in
mov
push
les
pop
pop
push
mov
and
rorb
inc
dec
add
mov
xor
pop
iret
stos
test
fisttpll
sbb
aam
xlat
shrb
iret
fs
mov
push
cmc
lods
out
pop
gs
pushf
aad
sbb
aas
divb
aaa
sub
jmp
dec
or
shll
jne
insb
popf
dec
mov
ds
mov
in
shr
adc
mov
test
loop
scas
fcomps
int
stos
xchg
push
dec
and
dec
inc
daa
out
push
stos
hlt
scas
cli
sbbl
xchg
pop
jno
outsl
pop
jg
dec
shlb
or
scas
stos
inc
sub
and
pushf
lahf
repnz
in
pop
movb
int
jmp
insl
push
mov
das
ficoms
xchg
adc
popf
fidivrl
rolb
lods
sbb
je
movsb
aam
mov
xor
pop
ljmp
pop
jmp
test
sbb
inc
mov
insl
push
adc
and
hlt
mov
jg
add
aad
fs
out
pushl
xchg
lret
push
inc
lods
jmp
xchg
out
cltd
sbbb
in
jecxz
lods
pop
push
push
ja
jmp
ss
movsl
or
sbb
cmp
mov
or
mov
adc
sbb
ljmp
cld
cmp
movl
lcall
push
fwait
test
sbb
lea
imul
jbe
ret
push
clc
mov
test
sbb
sbb
fwait
pop
cmpsb
subl
hlt
mov
fstps
mov
cmp
and
sbbb
out
cs
fistl
pop
stos
cmc
sbb
lcall
dec
and
jmp
mov
push
iret
imul
xchg
test
jle
stc
mov
mov
mov
jle,pt
test
xchg
scas
mov
jle
jnp
push
adc
mov
inc
mov
push
sub
and
lods
cmc
std
addr16
xchg
andl
hlt
xor
and
xor
inc
gs
push
fs
je
test
mov
in
aad
add
adc
and
xor
inc
gs
push
fs
je
test
mov
in
hlt
xor
xor
inc
jl
push
fs
lods
test
mov
cmc
aam
in
xor
add
mov
add
in
stos
stos
fwait
mov
cwtl
mov
mov
mov
sbb
or
cmp
sub
pop
dec
dec
fnstsw
imul
test
mov
stc
call
or
sub
cmp
dec
pop
jns
imul
test
mov
stc
call
or
dec
dec
pop
cmp
or
pop
js
mov
jmp
jb
adc
fistl
jp
rorb
sub
dec
into
and
repz
dec
daa
repnz
pop
mov
mov
lods
mov
cmp
xchg
sub
add
xchg
or
arpl
call
rcrb
popf
mov
iret
sub
pop
addl
mov
punpckhbw
xchg
imul
push
xchg
inc
leave
ret
std
call
dec
sub
mov
movsb
cltd
xchg
jl
pushw
mov
dec
dec
inc
and
bound
dec
jge
sbb
cmp
pop
dec
lahf
jns
add
mov
mov
stc
call
or
cmp
sub
pop
dec
dec
pop
jns
imul
fadd
int3
shll
cmpsb
test
pop
insl
or
jle
sub
sub
mov
lcall
movsl
mov
jl
or
dec
insb
push
cmp
sbb
sub
shr
rol
test
fxch
leave
fdivr
call
or
cmp
sub
pop
dec
dec
pop
jns
imul
test
mov
stc
call
or
cmp
sub
pop
dec
dec
pop
jns
imul
sbb
fs
xchg
idivb
jo
jle
stos
mov
std
sarb
lock
movsl
pushf
mov
fwait
movsb
bound
out
dec
negb
dec
add
push
movsl
dec
push
mov
add
out
outsl
movsl
call
push
aad
enter
mov
and
jns
xor
inc
out
lret
mov
add
mov
cmpsl
mov
clc
push
cmpsb
in
mov
jmp
into
pop
mov
sub
fadd
inc
stos
mov
dec
fidivrs
lret
pop
dec
cmp
out
stos
movsl
or
cmc
xchg
testb
cli
push
xchg
out
stos
jmp
ret
sub
sbb
test
sar
sub
movsl
lods
jmp
sub
iret
sbb
test
rep
pop
ljmp
fcoml
dec
nop
ss
adc
and
scas
adc
dec
fucomi
icebp
sbb
pop
adc
aas
dec
cwtl
sub
sub
inc
push
into
shrl
xlat
pop
fcompl
icebp
dec
mov
sub
int
push
pop
gs
sbb
stos
into
inc
mov
popa
fcmovu
in
cwtl
push
dec
xor
les
loope
shrl
push
inc
bound
loopne
jmp
jae
mov
loope
out
dec
and
es
lea
sarl
adc
push
ret
stc
xchg
sbb
outsl
shlb
add
add
clc
cld
call
lea
dec
aad
inc
sbb
nop
or
jb
mov
mov
jo
mull
std
jmp
xchg
lds
mov
lods
addb
jbe
sarl
pop
mov
mov
data16
mov
dec
add
mov
cmc
dec
out
imul
mov
repz
or
out
mov
rorl
daa
sub
jo
call
add
cmp
fildll
sbb
pop
sub
pushf
imul
mov
jns
pusha
xor
popf
pop
scas
int
pop
test
pop
mov
addr16
push
lahf
jb
and
push
mov
rcl
jl
sub
mov
push
loope
mov
movsl
adc
pop
xchg
sub
or
movsb
adc
push
aam
fscale
xor
mov
push
push
dec
lret
adc
adc
shlb
roll
or
lahf
cmp
in
stos
in
lea
jecxz
inc
popa
aad
pusha
lret
sub
insb
loop
mov
inc
sbb
add
aad
in
dec
jns
test
ds
ljmp
jne
stos
loop
or
mov
in
pushf
mov
mov
add
cmp
in
mov
into
imul
or
stc
mov
fwait
and
push
dec
icebp
add
pop
cwtl
push
fs
or
shl
and
imul
inc
outsb
pop
gs
ret
aad
xchg
xchg
jge
cwtl
leave
lock
jge
jo
data16
jnp
sbb
or
ljmp
dec
fldenv
mov
cmp
jbe
and
sub
or
inc
xchg
daa
add
cmp
adc
mov
enter
pop
add
mov
push
mov
mov
or
out
ljmp
mov
pop
cld
daa
lock
ds
cwtl
or
or
aad
jb
jge
in
jle
cmp
mov
push
popf
loopne
mov
jbe
cli
ret
push
mov
gs
push
push
hlt
dec
fisubs
mov
mov
sub
xchg
sbb
jb
mov
inc
pop
into
in
jle
fs
repz
xor
xor
push
jmp
mov
mov
popw
fcmovnbe
imul
rorl
loope
push
das
or
xor
fnsave
adc
or
sarl
aaa
call
push
pop
dec
pop
and
in
adc
pop
js
scas
push
jle
lds
dec
adc
int
mov
fcompl
idiv
mov
push
push
popa
cmp
pop
jnp
mov
mov
enter
das
xor
ret
sbb
mov
into
push
in
cltd
add
int
xchg
cld
and
scas
mov
push
das
imul
sbb
jp
lret
lcall
ljmp
aam
fnstenv
jg
sbb
inc
push
sbb
or
inc
inc
mov
ds
sub
mov
push
mov
in
xchg
sbbl
out
insb
jbe
push
mov
and
dec
loopne,pn
clc
sub
mov
aad
or
or
iret
sbb
repnz
dec
gs
lods
jno
sub
insl
add
stos
scas
add
es
mov
sub
xchg
jge
dec
lea
or
xor
xor
mov
push
mov
sub
in
cmp
aam
cwtl
sbb
fldenv
pop
fisttps
and
fisttps
mov
int
dec
push
pop
dec
lock
cmp
xor
sub
das
lret
push
rorb
xchg
xor
jae
cmp
mov
mov
aad
scas
dec
mov
sub
adc
sub
sub
scas
xchg
std
insb
inc
pop
jecxz
xchg
scas
pusha
or
xchg
dec
and
mov
or
enter
loope
mov
hlt
cmp
lret
jmp
lea
mov
push
push
jmp
ret
jo
sysenter
rclb
sub
mov
clc
sbb
sub
xor
stos
test
js
lods
clc
repz
push
sbb
jo
sahf
mov
xor
sahf
pushf
cmp
movsb
fs
rolb
mov
pop
pop
xor
lret
jbe
jb
jbe
inc
jl
aad
mov
push
jbe
ret
push
call
repnz
push
jle
pop
push
mov
xchg
int3
cmpsb
les
insl
jp
roll
ret
addb
pop
mov
push
and
sbb
mov
subb
dec
jmp
popf
inc
scas
cltd
movsb
frstor
lahf
or
xlat
sub
sbb
fwait
xor
pop
movsl
pop
scas
ja
imul
and
mov
add
test
icebp
gs
cmp
lret
rclb
mov
out
movd
sbb
mov
test
inc
cmpb
pop
in
sub
fsubs
jne
enter
imull
xor
iret
popa
jns
insb
scas
inc
fiaddl
adc
push
and
or
xchg
es
fisttpll
in
xchg
test
mov
sub
mov
fcmovnu
mov
ret
test
jo
sbb
jp
scas
mov
push
scas
mov
jle
mov
movsb
mov
gs
sbb
xlat
dec
jecxz
adc
int
push
jae
mov
adc
mov
imul
ljmp
insl
popa
lretw
pop
inc
repz
jl
pop
inc
inc
std
add
ss
mov
mov
fsts
sbb
jbe
and
jns
jmp
mov
sub
add
enter
scas
addr16
into
mov
jle
ficoms
xchg
xor
ja
loope
and
adc
data16
inc
adc
sub
mov
mov
adc
mov
push
mov
xor
push
inc
in
outsl
mov
sub
out
jp
or
loopne
adc
aaa
mov
pusha
mov
xchg
mov
test
or
outsb
in
out
or
dec
cmp
mov
test
ret
xchg
cmp
xor
adc
orb
xchg
je
xchg
outsl
scas
mov
add
movsb
out
inc
popa
pop
jg
dec
mov
lahf
dec
fldt
outsb
repz
mov
xchg
outsb
adc
jl
mov
mov
push
loopne
pop
mov
orl
sub
jmp
testb
icebp
clc
test
dec
mov
mov
test
and
add
int3
movsb
scas
inc
in
je
adc
sbb
pusha
add
lret
mov
les
loope
sbb
fstps
in
orb
leave
or
cmc
or
xchg
enter
xor
jbe
aad
dec
or
add
add
sbb
fdivl
inc
aam
shl
inc
or
add
xor
cmp
jmp
sub
jb
xchg
sbb
push
fdivl
mov
sbb
in
xchg
lahf
fisubrs
prefetch
sub
loop
jmp
mov
ljmp
sbb
xchg
test
pop
cmp
popf
icebp
dec
cmp
jne
insb
xchg
add
mov
les
lret
inc
mov
out
shll
adc
cmpsb
mov
decb
cmc
xchg
pop
pop
xor
jne
movsl
jmp
fiadds
pop
jmp
pop
mov
mov
push
int
adc
or
fwait
push
jle
xchg
pop
sbb
lea
bound
push
and
nop
push
and
push
mov
mov
test
ret
or
out
popf
std
sbb
and
enter
in
movsb
rolb
jmp
pause
xor
icebp
sahf
jge
push
add
xor
jo
cwtl
int
mov
mov
push
sbb
std
xchg
mov
and
in
test
add
sub
and
sub
testl
pop
fbstp
inc
mov
rcl
nop
test
sub
fs
cmp
cmp
mov
or
push
jmp
xor
sub
cmp
mov
lret
in
sbb
mov
orb
popa
xor
jp
iret
adc
in
fwait
dec
orb
xchg
add
lahf
push
stos
jne
popf
push
test
adc
dec
pop
int3
xchg
aad
fldcw
movsb
mov
hlt
call
add
dec
inc
pop
in
and
mov
pop
fsubrs
jle
sub
cmp
mov
adc
cs
xor
daa
mov
imul
lods
inc
mov
cmp
dec
imul
ds
sbb
xor
sub
push
jecxz
inc
adc
out
inc
push
jl
jno
mov
jne
ficompl
icebp
sub
insb
leave
xchg
ret
adc
lods
rcrl
mov
dec
push
push
enter
sbb
pop
aad
sbb
jnp
push
aaa
adc
outsb
push
lods
aam
pop
xchg
insl
into
out
mov
cwtl
bound
mov
scas
aam
sbb
mov
jle
adc
dec
pop
xchg
and
adcl
xchg
in
jnp
xchg
test
jns
xchg
nop
fsubrp
or
push
xchg
dec
iret
stos
testl
popf
call
xor
cmp
adc
fidivrl
pop
cmpl
push
push
mov
mov
jo
mov
lret
mov
lcall
adc
adc
fsubrl
mov
out
testl
xchg
inc
or
imul
adc
fs
mov
xor
pop
mov
push
insb
lock
es
dec
adc
arpl
jle
out
sbb
xlat
xchg
test
out
test
movsl
add
sbbb
xchg
test
adc
fwait
or
jp
adc
iret
js
out
cmp
push
jmp
mov
out
bound
out
in
add
ret
sbb
enter
jl
lret
fistpl
repnz
or
loope
mov
push
cmp
aam
add
js
xchg
pxor
fs
shrb
stos
rolb
mov
and
adc
insl
pop
jo
repz
andl
cmpsl
pop
xchg
ret
cmp
scas
add
out
jb
cmpsl
xchg
dec
icebp
aam
mov
sbb
js
int3
in
and
gs
arpl
fnstsw
jl
xchg
cmp
pop
push
or
pop
mov
or
inc
js
mov
cld
hlt
mov
sarb
push
in
inc
xor
pop
out
repz
movsb
and
push
cmp
inc
xchg
mov
mov
xchg
inc
inc
es
xchg
popa
xchg
sbb
cmp
fistpl
andb
adc
or
rcr
je
js
ljmp
lods
adc
adc
sarl
sbb
add
xchg
cmp
pop
sbb
jno
mov
lock
jb
movaps
lret
mov
push
rclb
mov
stos
mov
loop
mov
into
fcoms
adc
add
xchg
pop
inc
mov
push
fistpll
int
pop
not
and
dec
jmp
mov
jnp
dec
cmpsl
in
rcr
or
mov
sbb
jo
stc
leave
imul
repnz
cld
hlt
lock
mov
gs
mov
push
pop
testl
xor
dec
adc
add
lock
scas
fdivrp
xchg
sub
cmp
loope
xchg
mov
pop
mov
add
out
adc
adc
popf
mov
pop
outsb
call
and
fcmovne
and
mov
pop
inc
pushf
test
sub
pop
mov
cmp
out
out
inc
out
int
andb
adc
in
fwait
loopne
sahf
push
les
mov
xchg
xchg
notb
loope
xor
cmp
sbb
cld
xchg
popf
jbe
jo
stos
pop
sbb
pop
or
int3
hlt
jo
sub
add
idivl
push
pop
inc
lret
sbb
cmp
xchg
dec
fs
outsb
or
nop
xchg
arpl
inc
or
xor
mov
or
pusha
xchg
adc
cmpsl
andl
xor
fstps
inc
add
cmpsb
call
out
int3
insl
sub
aaa
dec
loop
int
test
rcr
pushl
faddp
jecxz
dec
dec
cmp
mov
xchg
sbb
jbe
pop
or
xor
es
int3
bound
inc
inc
inc
push
insb
cmpb
push
cwtl
das
stos
push
jle
jge
lcall
mov
sub
testb
inc
std
sbb
scas
cli
inc
xor
sub
jno
neg
std
insb
gs
mov
mov
pop
or
mov
push
repnz
mov
pop
lods
pop
and
test
pop
xor
into
daa
imul
xor
mov
xchg
or
shrl
jl
aaa
add
les
xchg
test
test
mov
pushf
sbb
notb
sub
mov
add
dec
imul
sub
dec
test
sbb
sub
inc
xor
push
nop
shll
and
out
and
push
mov
inc
ljmp
lcall
mov
mov
mov
js
lods
jbe
xor
popf
mov
clc
mov
lock
inc
and
xchg
fcoms
imul
js
pop
jne
mov
test
sub
inc
movsb
call
outsl
sti
in
mov
clc
cmp
ss
and
in
dec
addr16
cmpsb
cmp
mov
mov
mov
jb
clc
adc
jae
roll
jnp
dec
jns
adc
js
xlat
or
in
mov
sahf
lea
pusha
or
xor
es
out
pop
mov
jecxz
js
pop
push
mov
jae
sub
mov
pop
imul
nop
pop
jnp
xchg
dec
inc
in
and
aaa
mov
push
xor
adc
sbb
add
hlt
test
popf
xor
pop
in
jns
mov
push
jbe
jge
inc
lahf
dec
jbe
xchg
jge
or
pop
mov
out
loope
cltd
pushf
fistpl
loopne
xor
jnp
aam
inc
lret
test
jecxz
fimull
cmp
push
cltd
ss
notb
sbb
push
out
enter
jle
inc
xchg
sbb
rorb
fwait
push
loope
xchg
mov
sub
adc
add
lea
movsb
fimull
repnz
fcoml
mov
xchg
inc
mov
sahf
js
push
std
sub
test
add
mov
push
pop
subb
outsl
std
xchg
lcall
push
xor
lea
fisubrl
aam
int
in
xchg
enter
rcrb
mov
pop
jne
and
push
icebp
cmc
adc
push
les
lea
push
ss
xor
sub
out
movsl
outsl
xchg
xor
mov
pusha
sarl
jmp
ret
adc
jne
pop
xchg
repz
scas
aaa
pop
inc
push
jg
push
fistpl
call
xor
iret
mov
and
mov
inc
xor
push
mov
jb
push
in
push
push
adc
dec
xor
or
push
addr16
mov
sub
or
dec
loope
sbb
lods
xor
in
adc
xor
stos
popf
shrl
sbb
push
jbe
sub
mov
loope
and
fistpll
add
aam
pusha
xor
inc
push
ret
inc
lret
popa
xlat
roll
xchg
pop
ljmp
cmp
es
loop
lahf
mov
sahf
jl
push
cmpsb
jo
pop
jle
dec
jmp
adc
lock
rol
test
lods
pushf
dec
js
mov
cltd
or
inc
or
sub
cmp
inc
je
push
scas
or
cmp
daa
xor
push
call
sbb
mov
mov
iret
inc
mov
test
orb
sub
int
ja
gs
mov
adc
mov
jmp
int3
mov
orl
mov
pop
gs
adc
cs
call
xor
push
mov
or
shll
arpl
cvtps2pd
imul
sub
aad
lea
arpl
mov
or
movsb
and
mov
xchg
out
inc
xchg
out
inc
cmpsb
fsubrl
sbb
push
aaa
test
sub
mov
add
xor
jnp
sub
in
test
push
addr16
stos
sahf
lea
inc
sub
mov
jae
xchg
decl
mov
jp
nop
xchg
mov
pop
js
repz
hlt
inc
lock
int
addr16
dec
cmp
popf
in
stos
out
mov
test
std
aad
mov
push
fs
xchg
xor
lcall
sbb
push
loopne
int
jno
btc
jno
out
negl
add
incl
and
mov
es
lcall
sub
jge
push
cmp
add
xchg
insl
popf
test
xchg
leave
add
out
outsb
or
fwait
orb
push
hlt
inc
scas
add
stc
outsb
cmpsl
stos
fld
outsl
mov
mov
dec
sub
dec
pop
lock
ljmp
ja
inc
test
dec
hlt
add
push
xchg
cmp
aaa
hlt
in
jl
repnz
test
adc
scas
gs
push
jmp
out
xchg
pop
xchg
mov
mov
pop
fcoms
mov
or
adc
adcb
mov
nop
xor
mov
sub
inc
call
adc
dec
add
cwtl
cmp
aaa
push
inc
notb
push
push
dec
sbb
push
mov
aaa
xor
stos
push
das
pushf
fst
dec
mov
or
scas
or
mov
pop
and
inc
imul
mov
push
jp
js
xor
or
stos
hlt
jne
cmpsl
xchg
sub
mov
cmp
scas
jp
mov
push
adc
cmpsb
movsb
test
cmc
sti
sbb
rcrl
mov
cmp
ds
outsl
in
pop
rol
jno
movsl
test
fstpt
int3
pop
shrl
in
sbb
cmp
shrb
mov
fadd
xor
std
out
fiaddl
cmpsb
loop,pn
dec
inc
outsb
daa
pushf
xchg
or
stc
inc
shrb
ja
pop
jae
mov
call
pop
popa
push
or
mov
jno
or
sbb
int
aam
xchg
ljmp
pop
and
movsl
xchg
add
push
ret
jns
imulb
pusha
fsub
loopne
jo
inc
xchg
call
mov
xor
mov
xchg
mov
mov
mov
push
jl
faddl
cmp
push
mov
test
cmc
icebp
xor
mov
hlt
pop
rcl
lock
pop
fdivl
scas
mov
push
xchg
push
popf
pop
pop
cmp
test
pop
inc
xchg
icebp
add
lret
mov
shrb
cltd
mov
ret
dec
xor
rorl
pop
add
int3
mov
inc
fstl
push
scas
arpl
jbe
lea
inc
xor
hlt
je
jnp
test
lret
pop
xchg
xor
sub
ss
pop
sub
movsb
fistps
mov
cmpb
fwait
xchg
dec
pop
push
xor
mov
in
jmp
push
push
cmp
loop
xchg
stc
test
sbb
sub
lcall
push
dec
test
and
ljmp
jo
sbb
out
mov
add
in
in
fsubrs
adc
lods
fdivs
ja
sbb
xor
push
adc
mov
mov
mov
rcll
jne
inc
mov
data16
ret
cli
test
clc
aas
mov
xor
adc
cmp
inc
mov
xor
in
adc
sbb
pop
add
icebp
fidivs
sbb
test
sbb
jecxz
push
pop
cld
cmpsl
outsl
adc
xchg
pushf
xlat
cwtl
adc
leave
fdivr
call
or
cmp
sub
pop
dec
dec
pop
jns
imul
test
mov
stc
call
or
cmp
sub
pop
dec
dec
pop
jns
imul
sub
pop
stc
call
or
cmp
sub
pop
dec
dec
pop
jns
imul
test
mov
stc
call
or
cs
xchg
jecxz
shr
ret
decb
fiaddl
mov
push
outsb
inc
jle
push
and
add
repz
jecxz
shr
ret
mov
mov
mov
xor
jle
push
and
adc
add
repz
jecxz
shr
ret
mov
mov
mov
xor
es
pop
dec
jp
dec
insb
ds
stos
lahf
mov
pop
push
push
pusha
or
sub
or
mull
incl
popa
sbb
pushf
or
jg
into
fcoml
jbe
loop
fcompl
mov
adc
jae
xor
lea
jecxz
nop
roll
xor
jecxz
repz
das
ljmp
sub
jge
dec
push
nop
stos
adc
rorb
pop
push
push
sbb
cmpb
add
stos
popa
xchg
push
sub
or
pop
add
dec
pop
xchg
das
cld
outsb
or
es
out
inc
mov
imul
mov
dec
es
jle
icebp
and
adc
add
lods
into
jecxz
shr
ret
mov
mov
mov
push
outsb
inc
jle
push
and
adc
add
mov
lea
aam
out
sbb
shll
cmp
daa
adc
outsl
addr16
ja
lods
mov
test
xchg
sar
and
push
xor
cmp
adc
push
jno
pop
sbb
test
jecxz
repnz
sahf
xchg
scas
cmpl
outsb
inc
jle
push
and
adc
add
repz
jecxz
shr
ret
mov
mov
mov
push
outsb
inc
jle
push
and
adc
add
repz
out
pop
sbb
das
rorb
loope
ja
fs
cmp
xor
je
or
aaa
je
cmp
xor
pop
push
mov
loop
adc
int3
push
push
dec
xchg
push
mov
adc
dec
sub
mov
xchg
ja
mov
dec
inc
mov
inc
jp
dec
pop
xchg
cmp
lret
daa
mov
push
dec
ss
outsb
vmptrld
mov
mov
mov
stos
mov
add
push
and
xor
das
xor
pop
movsl
dec
adcb
sbb
mull
shlb
test
dec
flds
push
inc
sbb
jo
pushf
push
dec
inc
jbe
dec
test
imul
je
dec
dec
xchg
adc
dec
and
sub
dec
stos
and
out
in
add
add
mov
and
jp
dec
mov
mov
test
out
stos
mov
addr16
push
or
inc
lods
test
mov
nop
ljmp
dec
stos
push
mov
ficompl
add
xchg
mov
addb
mov
sub
ss
andl
jbe
das
pop
dec
decl
push
add
and
push
mov
and
outsb
movsl
sub
leave
sti
call
ja
mov
lcall
xor
ret
or
xchg
xchg
and
push
mov
ftst
int
insl
mov
pop
xor
insb
jg
addr16
sar
add
lahf
push
rol
sarb
mov
mov
cmp
mov
loopne
sub
mov
add
sbb
lea
mov
xchg
fildll
pop
hlt
mov
nop
fldt
iret
sar
inc
lahf
fstl
rorb
pop
inc
xchg
mov
loop
aam
mov
ret
ja
mov
push
dec
xor
cltd
int
mov
test
adc
add
jl
addb
icebp
pusha
dec
mov
aam
repz
jnp
lods
add
and
jge
mov
add
ja
repnz
dec
fwait
mov
pop
std
pop
lret
lods
lret
aad
mov
rorl
and
inc
call
sbb
push
jae,pn
cltd
dec
dec
lret
xchg
dec
ret
mov
mov
enter
jae
add
in
stc
cmp
or
add
loopne
fbstp
adc
mov
dec
and
mov
mov
push
imul
leave
xlat
call
out
scas
xor
lcall
mov
xchg
lret
push
sub
inc
arpl
sti
icebp
inc
fisttpll
pop
xlat
xchg
sbb
xchg
dec
sti
sub
arpl
mov
movsb
dec
adc
repz
fidivrs
and
pusha
xchg
xchg
or
add
mov
mov
ficoml
cli
xor
cs
adc
mov
xchg
and
lret
add
ljmp
sbb
stos
mov
adc
jb
jae
loopne
add
mov
lds
xchg
lahf
jo,pn
inc
dec
daa
mov
aas
sti
jp
addr16
fdivp
cld
inc
fldl
inc
add
mov
stos
imul
mov
icebp
mov
cld
mov
clc
cmc
jbe
test
adc
movsl
pop
adc
lds
lea
pop
dec
mov
les
add
cmpsb
out
mov
lea
mov
cli
push
daa
xchg
xchg
push
push
push
icebp
and
rorb
sub
movsb
mov
cltd
dec
outsb
outsb
popl
push
push
into
in
sbb
add
cmp
push
mov
std
rcrl
jo
lret
aad
dec
or
sub
rcrb
jge
pop
jno
ficoms
mov
testb
xchg
adc
decb
add
cmp
xor
jnp
icebp
lods
fstp
cmp
imul
xor
jge
movsb
xchg
mov
cld
pop
movb
add
rorb
sub
and
pop
xorb
sahf
cmpl
je
fs
sub
jbe
xchg
in
fcmovnu
stos
mov
push
xor
nopl
sub
fisubrl
ss
inc
ljmp
sbb
pop
mov
int3
std
mov
ficomps
aad
dec
pop
dec
loopne
mov
insb
pushf
sub
ret
in
adc
jno
lcall
pop
nop
push
loope
cmpsb
nop
xchg
and
stos
test
cwtl
enter
outsb
cmc
and
push
dec
xor
scas
movsb
xchg
in
sub
mov
lods
and
push
int
mov
push
inc
repz
leave
fucomip
xor
xor
aas
jo
add
or
push
jbe
lods
fistpl
pop
lcall
nop
jb
sub
or
jge
gs
add
out
dec
add
mov
pop
mov
ds
or
scas
mov
inc
sti
inc
pop
push
pop
cmp
ss
mov
shlb
out
test
mov
cmpsb
sbb
inc
cmp
inc
arpl
mov
sbb
out
inc
jae
xchg
fsts
popf
js
aas
cmp
js
cmpsb
and
xor
xor
inc
mov
int
std
pop
icebp
aas
clc
int
dec
or
pop
cli
dec
lret
cli
mov
jb
es
out
add
hlt
inc
jecxz
push
push
notl
dec
lret
push
ds
mov
sbb
iret
les
addr16
push
jecxz
sbb
push
das
mov
cmc
cwtl
dec
fcomps
mov
jle
inc
push
shlb
jbe
scas
push
dec
xchg
xchg
sbbl
clc
adc
jg
cmp
aad
cmp
cmp
mov
mov
stc
pop
adc
shr
stc
mov
cmpsb
xor
cmp
sub
inc
rcl
stos
daa
cmp
iret
mov
loop
rorl
mov
negl
fstpl
cmp
jb
xchg
cld
dec
testb
inc
outsb
cmp
cmc
sub
loopne
sti
pop
ljmp
sub
sti
sbbl
hlt
enter
mov
sbb
xchg
shr
xchg
and
xchg
push
sbb
lods
mov
dec
jns
je
dec
ss
ret
es
push
mov
jno
xchg
dec
sub
cmc
idivl
mov
inc
arpl
inc
lcall
dec
out
sbb
aas
sub
movsb
xchg
and
dec
int3
mov
ficompl
ja
mov
sbb
je
adc
in
test
adc
jo
fmuls
mov
or
test
lods
and
scas
mov
inc
sub
mov
mov
dec
into
test
pop
xor
sub
push
mov
pop
lret
adc
lahf
and
dec
addr16
insb
out
shrb
mov
sbb
fwait
jns
xor
jmp
cmp
mov
mov
push
push
sbb
leave
out
lock
and
xchg
inc
pop
pop
rol
jmp
shll
push
cmp
test
push
loop
mov
xchg
in
jmp
add
xor
inc
test
lret
cltd
add
push
cmp
pop
adc
adc
adc
jno
cmp
in
mov
pop
movsb
xor
push
ret
jno
mov
cmpsb
adc
or
andb
adc
push
pop
add
push
adc
cld
call
mov
mov
xchg
repz
out
jb
out
add
pop
ret
fldcw
icebp
lods
cmc
sub
nop
mov
fnstcw
negl
mov
cmpsl
mov
lock
xchg
movsl
sbb
loop
adc
fwait
movsl
ret
sti
dec
sub
xchg
sahf
repnz
push
jl
ret
lods
addb
xor
outsb
imul
xor
mov
mov
push
adc
or
stos
stos
push
movsb
or
jle
jno
fwait
out
jmp
mov
jl
cltd
pop
aad
test
xchg
or
mov
xor
sub
push
loopne
fwait
out
push
cltd
inc
sbb
jb
dec
push
orb
fstps
pop
mov
rolb
in
jecxz
cmpsb
mov
lods
insb
inc
adc
adc
sbb
pop
sbb
mov
imul
sub
push
insl
loop
mov
in
or
push
mov
xor
fs
push
gs
xchg
and
jne
mov
movsl
shll
fbstp
int
jo
popa
mov
imul
push
lahf
sub
sbb
aam
hlt
xchg
sahf
mov
mov
aaa
addb
mov
addb
mov
aam
shl
lods
outsb
mov
mov
or
and
and
mov
push
scas
outsl
jnp
out
in
pushf
mov
pushl
les
fmuls
add
in
mov
scas
mov
mov
inc
adc
push
or
jne
subl
pusha
dec
adcb
in
adc
mov
mov
in
outsb
popf
insl
stos
jae
mov
out
jmp
shll
sbb
push
add
shrb
movsl
outsb
mov
push
inc
xchg
into
insl
fldl
cmpsl
imul
add
dec
call
push
incb
mov
std
mov
fcomps
cmp
pop
mov
sbb
jmp
lcall
inc
jmp
shll
and
or
xor
jecxz
and
orl
mov
sub
sti
sbb
sahf
mov
mov
das
add
adc
mov
push
into
jbe
mov
imul
icebp
inc
mov
push
pop
popa
stos
test
push
out
push
stos
movsl
pop
add
mov
mov
cmpsb
add
repnz
inc
fwait
test
and
mov
jno
sub
pop
inc
push
add
sub
push
xor
push
cmpsb
xor
rcll
popf
rclb
inc
aad
ret
sub
mov
shl
das
hlt
aaa
push
arpl
mov
test
lock
stos
test
popa
out
ljmp
dec
lcall
into
outsl
subl
push
add
push
enter
fcmovb
push
pop
nop
jp
xorb
out
mov
sahf
nop
or
rcrl
xchg
addr16
in
in
mov
jae
sub
pop
sbb
insl
jecxz
enter
cmpsb
or
inc
mov
movsb
hlt
gs
insl
sbb
mov
ret
js
push
arpl
into
xor
mov
movsb
xchg
lds
mov
outsb
out
dec
loopne
sub
xorl
jno
dec
xchg
fisttpll
int
inc
xor
ss
aam
scas
mov
add
sar
jb
cmpsb
sbb
fiadds
lds
adc
repnz
add
push
cwtl
xor
mov
outsl
cmovo
push
and
test
popa
cmpsl
test
das
aad
lret
adc
jne
movsl
int
cmp
inc
or
add
into
pop
mov
add
mov
stos
test
pop
xlat
ds
mov
pop
xchg
iret
lock
enter
test
dec
mov
inc
inc
out
add
repnz
jno
add
cmp
mov
dec
mov
mov
in
mov
push
daa
dec
lret
outsb
dec
jbe
pop
daa
sub
add
aad
sbb
mov
cld
mov
push
lock
mov
and
lods
subps
add
sbb
pop
daa
movsb
mov
mov
mov
push
roll
xchg
cmp
js
mov
ljmp
es
pop
fsubl
lods
sbb
dec
xor
incl
mov
aad
dec
xor
push
lock
int3
and
imul
pop
mov
jge
lods
pop
jae
mov
sbb
mov
jns
mov
sti
int3
rcll
cmp
push
cmp
cmp
cmp
in
pop
sahf
sti
inc
scas
into
testl
aad
pop
mov
rol
pop
mov
hlt
mov
cmpsl
int
test
in
imul
sbb
xchg
sar
orb
sub
movsl
gs
stos
adc
cmp
ja
cmp
lods
add
mov
sbb
pushf
cli
in
push
outsb
movsl
xlat
xchg
dec
test
ljmp
aas
push
jb
and
push
lahf
test
aam
shl
or
mov
fsts
das
imul
cli
xchg
cmp
xchg
rolb
shll
in
in
test
mov
sti
lods
lcall
jecxz
ja
cmp
push
mov
insb
sbb
push
ja
push
test
out
push
lret
jmp
fdiv
inc
ror
mov
jmp
pushf
call
aaa
insb
outsl
dec
in
sahf
aad
mov
inc
jb
mov
lcall
xor
les
movsb
rorl
repz
sub
xchg
call
and
icebp
add
movsl
pop
or
iret
sbb
and
mov
sub
cmp
and
xor
lods
and
mov
sub
xchg
lea
ja
xchg
outsb
hlt
iret
sbb
movsl
add
icebp
dec
xchg
mov
mov
add
adc
pop
lahf
arpl
or
jecxz
sbb
es
and
test
ficoml
sub
cmpsl
mov
and
icebp
dec
push
mov
inc
jp
lds
lods
xchg
movsl
cmp
enter
mov
add
sub
insb
xchg
pop
ficoml
dec
mov
cmpsb
sbb
xchg
cmp
mov
ret
aaa
push
jl
adc
pop
nop
movl
ljmp
movsl
mov
push
cs
fs
lret
enter
or
and
mov
in
cmc
and
fistpl
stos
push
fsubl
inc
into
call
xchg
mov
fwait
cmpsb
inc
ja
out
mov
cwtl
inc
sbb
outsb
rolb
inc
out
push
cmp
adc
xchg
incl
mov
lret
leave
xor
xchg
jp
int3
data16
int
scas
cmovo
dec
repz
push
inc
lods
lock
mov
pop
rol
cmp
cld
cmp
jp
les
mov
int
add
nop
call
xorb
aaa
aaa
xor
pop
pop
pop
add
lds
mov
push
mov
adc
into
push
inc
mov
push
mov
push
insb
xchg
sarb
imul
xchg
dec
mov
icebp
dec
xor
adc
mov
mov
call
insl
pop
xor
out
and
xchg
ja
cmpsl
adc
sbb
cmp
pop
and
cltd
outsl
and
xor
adcb
dec
lret
out
sbb
bnd
cmp
arpl
inc
pop
xlat
cmp
rclb
dec
in
dec
in
cmp
add
sbb
adc
lock
lock
and
inc
adc
mov
hlt
sbb
cmp
cmp
pop
adc
sbb
xchg
jo
fidivrs
xchg
pusha
xor
and
add
adc
mov
pop
sbb
call
call
sbb
sar
sbb
mov
ss
and
cli
sbb
aam
mov
sub
pop
push
push
into
and
movsl
xor
mov
ds
je
sbb
subb
inc
mov
mov
jge
xchg
or
test
lds
sub
mov
fnstcw
mov
sub
add
push
mov
xchg
push
and
std
out
mul
mov
in
call
in
pop
popa
xor
aam
xchg
xlat
pusha
fidivrs
shll
cs
inc
fbstp
or
sbb
in
push
iret
ret
mov
mov
lods
insl
mov
in
repz
lock
jo
dec
in
std
js
call
add
outsl
imul
xchg
push
push
das
mov
jnp
adc
jmp
jmp
test
scas
pop
xchg
aas
cmp
cmp
cs
outsb
pop
adc
outsb
aad
cmp
insb
les
mov
addr16
nop
mov
shrb
cmp
mov
and
insl
fstl
mov
nop
clc
cli
dec
xchg
xchg
xor
out
lods
mov
dec
insl
icebp
test
das
shll
shlb
loope
call
mov
test
insb
jne
stos
stos
sbb
icebp
mov
or
out
jae
orl
ss
xchg
mov
push
divb
inc
adc
aad
sbb
sbb
add
push
out
fnstsw
scas
repz
repz
pop
hlt
xorl
stc
cld
fisubrl
jo
and
push
out
hlt
fbld
sti
cmp
loopne
inc
sahf
or
xlat
int
push
imul
mov
out
adcl
jle
push
cmpsl
sti
call
shll
jmp
outsb
and
add
and
icebp
push
int3
xor
in
pop
ja
aam
pop
bswap
xchg
add
inc
push
push
in
cwtl
mov
and
mov
sbb
add
cmp
fcom
movsb
pop
scas
rclb
in
pop
push
mov
lahf
icebp
sbb
popa
mov
mov
andl
cld
mov
mov
pop
ljmp
pop
xor
in
xchg
sub
mov
and
data16
das
push
fmuls
xor
inc
cwtl
jo
cmpsl
sbb
je
adc
scas
or
loopne
push
cld
das
out
jbe
mov
sbb
decb
jg
lock
daa
jle
xor
dec
call
inc
loopne
dec
push
mov
div
das
cmp
addr16
lods
and
dec
sahf
in
in
jo
lock
cmp
ljmp
loopne
mov
out
jne
in
lret
clts
cmp
xor
mov
dec
jle
icebp
add
xchg
icebp
lcall
shll
sub
mov
rorl
loope
aad
std
pop
fstl
xchg
xchg
out
jae
lods
jb
addl
daa
lea
out
inc
sahf
mov
xor
loopne
mov
cmp
js
lret
repz
popa
pop
xlat
mov
and
lahf
test
xchg
add
lret
xor
dec
mov
xchg
gs
adc
jmp
in
ja
aad
sbb
pop
fstpl
aad
fmulp
jmp
xor
jae
or
or
lahf
xchg
xor
push
scas
sub
imul
and
mov
mov
scas
xor
dec
ljmp
jle
xchg
daa
das
lea
pop
adc
stos
xor
and
ret
xor
push
mov
mov
popa
push
or
or
lods
leave
or
xor
sub
jge
aaa
call
or
mov
pop
jbe
pop
or
fldcw
xchg
in
mov
cmp
loope
les
inc
sbb
add
shrb
inc
adc
enter
xchg
in
mov
xlat
push
cmp
mov
jmp
mov
sbb
add
les
dec
roll
mov
divl
sbb
test
ja
fstpl
or
push
dec
popa
adcb
out
xor
xor
cwtl
and
sub
mov
lcall
dec
push
and
popa
jb
ss
dec
push
pop
es
or
sub
insb
sub
pusha
popl
int3
dec
ror
mov
sarl
cmc
cmp
test
icebp
cmpsb
mov
int3
inc
mov
cwtl
lret
mov
cmp
push
loop
insb
sub
ljmp
push
sbb
aas
inc
lcall
mov
lods
roll
jl
fisttpll
dec
ja
xlat
cmp
mov
fsub
push
cmp
test
jae
imul
jp
inc
xchg
mov
mov
xorb
mov
icebp
stos
mov
xor
pop
adc
inc
mov
popf
dec
lahf
lea
add
test
sbb
jnp
call
test
test
test
rolb
lds
dec
dec
out
movsl
js
es
push
out
aam
jle
icebp
or
js
out
pop
and
test
push
cwtl
dec
cwtl
hlt
stos
test
subb
adc
xchg
scas
sbb
pop
push
add
xor
hlt
je
xchg
push
xchg
jecxz
cwtl
ja
cmp
inc
pushf
cmpsb
xchg
xchg
and
xor
xorl
adc
sbb
sub
cwtl
push
adc
rcrb
push
mov
clc
sub
iret
ret
dec
aad
cmp
adc
nop
icebp
daa
fcompl
xchg
cld
ljmp
fldenv
or
sti
pop
imulb
push
cmpl
dec
ss
sub
pop
inc
sti
hlt
xchg
aad
push
icebp
push
es
jmp
testl
mov
xor
add
ret
mov
mov
mov
push
outsb
inc
jle
push
and
adc
add
repz
jecxz
shr
ret
mov
mov
mov
push
outsb
inc
jle
push
and
adc
add
repz
shr
ret
pushl
scas
cmpl
outsb
inc
jle
mov
adc
add
repnz
loop
shr
ret
cli
mov
mov
inc
jae
arpl
stc
outsb
inc
or
loope
sar
roll
addr16
push
pop
sbb
or
sbb
ret
out
imul
xchg
cmpsl
test
pop
push
dec
or
push
daa
cmp
push
fcom
enter
call
cmpsl
mov
movsl
mov
loop
push
sbb
ja
cmp
aaa
sbb
cltd
xchg
lcall
jmp
sub
or
push
or
std
mov
in
mov
inc
xchg
test
pop
stos
mov
or
xchg
sub
mov
xor
pop
or
cmpsl
xor
mov
and
into
hlt
push
icebp
das
enter
fdiv
stc
notl
xchg
imul
outsl
insb
mov
pop
aas
dec
cmpb
or
cmp
clc
aaa
movsl
pop
xlat
sub
or
js
xchg
add
mov
test
xchg
sti
sub
aam
sti
push
lahf
out
mov
ret
popf
pop
jmp
and
or
clc
push
sti
fmuls
sub
mov
cwtl
outsb
add
cmpsl
push
mov
sbb
add
or
push
daa
cmp
pusha
xchg
cli
aam
movsb
popf
xchg
mov
and
add
mov
aaa
outsl
fwait
test
cmc
out
int3
rol
or
xor
adc
dec
jb
rclb
sbb
stos
fdivr
xlat
clc
mov
fldt
sub
test
adc
add
push
pop
or
cmp
sub
fcom
enter
call
cmpsl
mov
push
dec
addr16
push
daa
cmp
sub
fcom
enter
call
cmpsl
mov
icebp
push
movsl
add
incl
dec
xchg
xchg
pop
scas
xchg
and
test
jl
jle
xor
adc
addl
inc
pop
roll
cli
sub
es
incb
cmp
add
into
cmp
mov
movsl
push
inc
jp
cmc
loope
push
fisubs
cltd
push
hlt
inc
adc
sbb
jae
add
add
mov
xchg
xor
lods
jge
pop
repnz
cli
cmc
je
enter
cmpsl
push
aaa
sbb
sbbb
clc
mov
jb
inc
loope
jmp
sub
jnp
inc
out
push
pop
popf
xchg
xchg
dec
inc
push
and
mov
jno
adcl
test
xor
in
sbbb
fldl
sub
xor
push
jecxz
jp
adcb
push
das
xor
push
sub
dec
push
andl
add
jecxz
dec
jl
xchg
insb
icebp
stc
fcompl
adc
xlat
loope
cmpsl
xor
jns
jl
pop
es
fidivs
in
rcrb
addr16
jmp
aam
stos
jb
shl
out
out
mov
rcrb
cs
sahf
hlt
jp
jno
enter
mov
cmpsl
sub
mov
test
and
add
push
jne
jle
cmpsb
and
jae
cmpsl
ret
xchg
dec
mov
add
loopne
add
mov
lea
xor
xchg
or
out
sti
dec
test
inc
sahf
into
mov
xchg
fidivl
add
arpl
call
adc
xchg
mov
or
int3
cmp
adc
ljmp
cwtl
pop
ret
adc
xchg
xchg
leave
jns
aaa
outsb
data16
dec
pop
call
pop
rolb
jle
pushf
inc
ds
xor
xchg
and
bound
loopne
mov
mov
nop
adc
mov
lods
aam
lock
notb
cmp
xor
cwtl
das
adc
or
outsb
xor
je
repnz
xchg
pop
push
sbb
mov
jnp
lods
lret
dec
clc
ret
jp
push
sub
nop
cmp
out
stos
and
cmc
sub
mov
pop
add
or
xchg
jo
adc
inc
push
xchg
sub
popa
xchg
aam
xchg
rcr
mov
out
ljmp
mov
xor
mov
ja
popa
sub
stos
sub
lahf
mov
sub
pusha
or
fmuls
and
out
mov
push
std
jl
fsubr
inc
sub
fninit
imul
js
xor
movsb
out
inc
ljmp
mov
stos
test
movsl
or
or
xor
aaa
pop
test
add
pop
sti
mov
inc
add
jae
mov
and
cld
arpl
dec
pop
mov
inc
xlat
xchg
mov
stos
push
dec
jg
test
lods
lods
mov
loope
arpl
dec
test
imul
adcb
mov
fs
mov
pushf
popa
stc
ljmp
mov
int
xor
divb
or
out
xchg
outsb
mov
mov
jae
arpl
mov
push
sbb
push
pop
pop
jb
mov
push
popa
jb
cmpsb
cmpsl
mov
cmpsl
cmp
insb
cmp
jmp
ss
cmpsl
stos
and
jb
dec
fnstenv
imul
call
mov
cmp
pushf
xchg
mov
imul
adc
xor
imul
mov
mov
and
movsb
mov
push
jle
rcll
sub
int
lea
add
xor
imul
and
fstpl
xchg
mov
cvtpi2ps
inc
daa
xchg
xchg
pop
repnz
pusha
push
adc
lods
sahf
adc
pop
xlat
fstl
stos
leave
jne
mov
or
xor
and
fnstenv
mov
rcrb
sub
jbe
bnd
mov
lock
lret
mov
dec
mov
lahf
push
cmpsl
sub
loopne
adc
mov
arpl
push
mov
loopne
ret
stc
fldenv
loopne
mov
cmp
push
les
pop
aaa
fidivrs
cmp
xchg
pop
iret
mov
cmpsl
imul
pop
pop
jnp
xlat
ds
repnz
inc
push
mov
in
mov
imul
hlt
cmpsl
and
add
jo
mov
cs
les
jge
mov
das
adc
xor
pop
mov
jl
jae,pt
fisubrs
mov
cmp
cmp
int3
push
jle
pop
leave
ss
jl
fimuls
out
and
push
aaa
or
sub
mov
xchg
or
test
call
inc
ljmp
je
daa
pop
sarb
mov
faddl
lretw
icebp
shr
call
dec
call
sbb
or
lret
push
mov
out
data16
shrb
cmp
int
out
jmp
push
dec
movsl
xchg
pop
ror
cmp
lcall
pop
dec
xchg
mov
xchg
xchg
add
pushf
xchg
repz
add
adc
pop
mov
pop
pop
lret
lods
jecxz
rcrb
fs
push
pop
cli
pop
out
stos
jmp
mov
in
jnp
push
jle
aam
arpl
xchg
mov
in
xor
push
cld
cmpl
push
aas
cmp
mov
mov
adc
scas
xchg
outsl
cmp
out
lods
cmc
int
push
es
push
mov
jmp
ja
rcr
jge
jecxz
aam
adc
mov
xor
mov
clc
adc
adc
jl
testl
jg
jns
xor
pop
out
testl
addr16
sbb
sub
mov
testl
clc
mov
adc
in
cld
cmpsb
xchg
int
ds
xchg
jmp
push
adc
in
cli
cmp
jnp
mov
repnz
cmp
pop
mov
mov
test
adc
push
stc
and
xchg
lds
leave
xlat
push
pop
adc
aad
mov
and
add
stc
push
jecxz
sbb
aam
fwait
inc
rorl
call
lds
filds
test
stos
sub
dec
xor
jne
mov
js
sbb
lret
shlb
jge
adc
push
dec
andl
push
mov
sahf
lahf
test
clc
cmp
imul
into
and
lret
sar
mov
in
repz
cmpsl
loopne
lods
push
cli
mov
fistpl
faddp
gs
sub
lcall
test
in
cmp
add
xor
out
lock
ss
jecxz
mov
jnp
push
mov
shl
pop
fisttpl
or
jne
pusha
xor
push
icebp
sub
lret
cmpsb
dec
in
or
icebp
cmc
or
or
sub
inc
test
inc
sbb
jb
jle
jp
mov
test
leave
fdiv
fistpll
popf
ljmp
inc
inc
clc
stc
testb
push
push
add
int
gs
xchg
jae
pop
stos
in
insb
cmp
or
inc
pop
lret
std
push
ret
fstpt
ja
out
ret
push
jle
pop
jae
jne
ljmp
xchg
enter
mov
or
ljmp
cmpsb
ja
add
addl
sbb
cmc
lcall
pusha
xor
pushf
xor
imul
loop
xlat
adc
adc
loope
add
push
sbb
popa
and
movb
jbe
divb
pusha
adc
jge
fiadds
das
jnp
push
dec
cmpsb
jecxz
jae
lock
loop
ss
mov
lock
dec
pusha
add
out
test
mov
add
sub
push
outsl
fnsave
mov
outsb
psrlq
repz
add
loope
push
lcall
sbb
pusha
imul
jle
adc
imul
and
lock
aaa
sub
lret
hlt
adc
cli
popa
inc
sbb
push
mov
jl
jl
loopne
push
shrb
aas
ret
xchg
xchg
fst
out
xchg
adc
cwtl
push
lock
jl
xchg
aas
jl
js
out
pop
icebp
out
cmc
xchg
xor
add
lcall
sbb
pop
xchg
aam
sub
mov
mov
imul
pusha
push
outsl
sub
mov
mov
inc
lock
and
popf
mov
negb
ljmp
jno
fmull
ret
or
mov
in
pop
repnz
xchg
lahf
mov
jbe
add
in
clc
shrb
inc
cli
dec
in
pusha
icebp
mov
push
pop
push
cltd
ss
jns
fistpl
mov
int3
stos
fcmovu
inc
mov
jmp
loop
std
add
jle
or
fisubrl
jl
push
push
jecxz
mov
ljmp
sbb
mov
ret
dec
or
idivl
mov
popa
pop
das
insl
inc
stos
pop
ss
popa
lods
inc
cld
dec
jle
inc
push
adc
mov
mov
lods
xchg
and
ret
insl
lret
inc
xchg
add
js
lret
in
dec
pop
cmp
fmuls
enter
in
fucomip
dec
aad
aad
sahf
mov
call
adc
fcoml
lcall
pop
mov
cld
xchg
inc
jmp
ja
popa
inc
fiadds
or
xor
jge
push
aaa
mov
pop
jno
popa
xchg
dec
iret
xor
inc
sahf
int
aam
arpl
adc
and
jg
hlt
ds
xchg
push
jmp
mov
and
rolb
pusha
ffree
pop
xor
dec
mov
and
xor
push
add
jbe
sbb
std
jp
pop
sub
sub
aas
mov
push
ljmp
dec
xchg
adc
gs
in
cmp
lret
popf
loope
cmp
ja
jle
pushf
lds
push
adc
sub
rcrb
jne
int3
inc
ret
jnp
fstpt
dec
sub
enter
inc
pop
jl
fstl
int
cmp
cmp
hlt
rorl
cld
adc
insl
push
sub
daa
adc
push
jecxz
push
bound
sub
notl
cmpb
push
jns
mov
jbe
les
cmp
sti
cli
pushf
ret
mov
fwait
movsb
xchg
lds
enter
sub
pop
pushf
aad
add
fstps
mov
add
jecxz
or
scas
mov
cmp
hlt
in
add
insb
pop
cs
pop
dec
imul
mov
or
arpl
outsb
push
loopne
outsb
or
mov
mov
mov
push
cmpsl
pop
xchg
pushw
lahf
or
scas
jb
in
xor
add
fs
cmp
cs
orl
out
jmp
adc
inc
leave
push
dec
sub
out
ss
sbb
cmp
xchg
cltd
fadds
dec
sub
scas
dec
mov
ljmp
mov
out
adc
js
popf
repnz
fidivs
stos
or
cmpsl
sbb
add
mov
mov
int3
shlb
shlb
sub
and
push
jnp
pop
sbb
dec
repz
mov
cmpsb
mov
int
xchg
shlb
and
pop
push
scas
pop
push
mov
lods
dec
xlat
rcll
lcall
addl
loopne
fwait
rorl
lds
leave
sub
jbe
jg
dec
cltd
daa
ljmp
lcall
mov
pop
es
adc
dec
push
stos
test
in
cli
in
xchg
add
mov
test
jmp
push
adc
jns
call
ret
add
dec
iret
sub
jnp
cmp
mov
cmp
jne
popf
lock
sbb
aas
xchg
lock
push
rcl
fldt
and
call
jle
mov
mov
idivl
push
sub
dec
in
test
nop
jge
and
cmp
ljmp
xchg
imul
fistpl
stos
aam
sbb
dec
and
sahf
mov
movsl
push
jg
and
mov
adc
xor
imul
and
andb
xor
jae
push
push
sub
cmpsb
cmpl
lret
loope
das
cmp
cmpsb
mov
push
add
jecxz
push
push
mov
sbb
dec
mov
ret
sbb
icebp
aas
xchg
stc
negb
add
sub
dec
loopne
pop
repz
out
or
int
inc
imul
fldenv
stc
sbb
cmpsb
das
ds
inc
sub
fcomps
jecxz
and
sarl
es
lds
and
inc
push
jle
sbb
mov
xor
and
sarb
jns
insl
fbstp
push
adc
pop
push
dec
fs
and
inc
xor
test
test
adc
fildll
add
pop
call
xchg
dec
mov
jle
add
test
push
ficompl
jae
xchg
mov
loopne
sarl
fstps
pop
xchg
mov
insb
or
mov
mov
jne
pop
pop
std
loopne
shrl
daa
lock
cs
scas
xchg
inc
cmp
mov
js
movsb
sbb
shll
and
imul
out
push
daa
aam
mull
dec
mov
sbb
fnstenv
mov
inc
pop
mov
mov
aam
mov
into
dec
mov
sbb
push
jae
pusha
decb
xlat
adc
xchg
sarb
mov
mov
inc
adc
xchg
lea
push
je
leave
xor
xchg
cmp
lret
daa
rorl
aad
adc
fcmovne
lret
divl
loopne
dec
in
icebp
or
push
sbb
scas
pop
outsl
cltd
in
xor
adc
or
sbb
cmp
fcmovne
inc
cmpsb
mov
dec
mov
in
adc
mov
shl
xor
iret
cmc
inc
dec
das
loope
push
adc
leave
imul
ss
push
push
or
xchg
sbb
adc
push
insl
dec
stc
lock
rcr
shrl
out
cmp
or
add
mov
sub
sub
and
int3
inc
and
jp
dec
outsl
xchg
mov
adc
pop
stc
outsb
ret
shlb
popf
jmp
sub
movsb
adc
sub
lds
adc
das
dec
fsubrl
sub
inc
cmc
cmp
xor
pop
loope
and
cmc
mov
gs
xor
pop
shr
int
cs
adc
stc
mov
sti
inc
mov
cmp
in
push
sub
push
fisttpl
cmp
imul
stos
mov
jnp
and
adc
sub
inc
push
xor
test
daa
nop
sub
dec
jae
pushl
loope
jmp
pop
jbe
fadds
pop
xchg
sbb
mov
sub
or
or
std
fwait
xchg
push
in
jne
adc
sbb
pop
inc
add
cmpl
sub
add
dec
ljmp
mov
jmp
add
aas
cmp
inc
xchg
ljmp
mov
ljmp
pop
fiaddl
xchg
mov
mov
aaa
out
inc
ljmp
mov
pop
mov
mov
aad
pop
stos
dec
mov
xor
xlat
mov
test
inc
push
in
data16
out
inc
xchg
push
out
add
and
aad
out
dec
xlat
mov
sbb
push
inc
mov
cli
sti
test
xchg
mov
sbb
je
enter
jo
jg
mov
mov
mov
das
jnp
es
sbb
dec
push
lahf
mov
mov
pusha
adc
inc
cs
adc
cmpb
int
hlt
fstpt
or
arpl
ret
negb
sbb
jp
outsb
push
adc
pop
mov
xor
into
xchg
mov
and
mov
and
jge
scas
aam
dec
mov
mov
or
push
cmp
ja
xchg
mov
pop
mov
or
dec
lcall
rolb
popa
jae
jl
fldt
fsts
xlat
dec
or
lods
mov
pop
push
sub
jmp
sub
pop
fcoms
sub
repz
pop
pusha
lea
movsb
inc
jp
stos
mov
cltd
jmp
inc
out
xchg
stos
and
mov
push
dec
or
jecxz,pn
xchg
rol
aad
int3
test
xor
test
call
pop
mov
iret
cmpsl
pop
adc
sub
js
scas
sbbb
sbb
aaa
xorl
movsb
loopne
clc
push
xchg
inc
lods
adc
shll
sbb
test
lret
cld
sub
inc
jnp
pop
nop
mov
movsl
mov
inc
sub
dec
xor
ds
mov
movsb
or
mov
or
or
push
push
pop
mov
inc
sar
test
sti
outsl
dec
clc
inc
sbb
fldl
or
repz
lret
and
mov
pop
int3
pop
mov
test
popf
iret
push
sbb
test
mov
les
or
mov
cmp
sub
clc
inc
pop
mov
dec
sub
lahf
fldcw
push
jl
ljmp
mov
js
sbb
fsub
xlat
movsb
add
push
out
inc
inc
aad
imul
jb
pop
jle
push
nop
out
aad
fwait
push
enter
in
subb
bound
mov
cmova
fdiv
mov
enter
xor
xor
scas
insb
mov
cli
arpl
fsubrl
ss
pusha
dec
xor
or
or
lock
outsl
mov
ljmp
and
aaa
pop
dec
and
cmp
outsb
add
fisubrs
inc
fnsave
add
ljmp
in
in
sbb
scas
xor
fidivl
cmp
push
imul
fisubrl
mov
imul
jle
inc
je
dec
gs
add
rorb
cli
mov
aas
loopne
mov
dec
inc
jp
shlb
ljmp
pop
xchg
jecxz
dec
pop
mov
xchg
cld
outsb
lret
mov
and
jle
push
stos
loop
push
xor
ss
pop
repz
push
push
adc
inc
xor
jbe
and
sub
jne
dec
cmpsb
je
sbb
cmp
fbstp
or
mov
jno
addr16
pop
sub
imul
push
mov
xor
sar
gs
ja
sbb
fcmovnb
xchg
and
es
std
out
clc
popf
ret
das
adc
mov
cwtl
lcall
mov
adc
mov
or
pop
and
jmp
iret
scas
and
push
scas
lods
cmpsl
or
mov
or
ret
or
jb
fistl
sahf
adc
pop
je
imul
xor
add
gs
test
jp
push
push
stc
sarb
jb
loopne
das
sbb
and
mull
pop
shrl
cli
ret
pop
fisttps
mov
adc
add
or
fsub
insb
mov
jns
push
shlb
mov
loop
int
and
and
outsl
pusha
and
mov
pop
loop
out
inc
sti
cmp
mov
into
jne
clc
mov
and
adc
pop
sbb
jb
jge
xchg
mov
lds
enter
sbb
xor
mov
cmp
jmp
movsb
sbb
adc
sahf
push
jle
ret
mov
lea
inc
lods
or
adc
test
sbb
xor
mov
jbe
and
inc
sbb
adc
adc
jg
cmc
in
adc
push
jo
pop
dec
fstps
es
sahf
push
inc
sar
cmpsb
dec
out
add
inc
jge
mov
xor
adc
pop
and
mov
push
clc
xor
push
test
aam
cli
cmp
cmp
mov
cli
mov
mov
dec
push
cs
xchg
cltd
negl
imul
push
mov
ljmp
xchg
pop
sarb
aad
loop
enter
push
jmp
mov
dec
add
jg
mov
mulb
mov
lea
and
cmpsb
ret
scas
mov
mov
xor
xor
cmp
ja
xchg
ret
sbb
aam
sbb
mov
dec
mov
or
enter
adc
shr
inc
push
lcall
decb
and
pop
sbb
mov
inc
dec
hlt
outsb
addr16
faddp
cwtl
iret
cmc
sar
imul
sarl
or
xor
andb
cmpsl
dec
xor
loopne
adc
fisubrl
iret
adc
fsubr
rolb
mov
aaa
pushf
adc
jb
jae
mov
dec
and
push
daa
cmp
sub
fcom
enter
call
cmpsl
mov
push
dec
addr16
push
daa
cmp
sub
fcom
enter
call
cmpsl
mov
addr16
pop
pusha
ja
xchg
sbb
arpl
cmp
sub
int3
pop
clc
mul
xchg
dec
push
mov
push
sub
sbb
or
mov
sub
clc
negl
pop
rorb
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
dec
lret
pop
and
adc
add
push
jno
pop
sbb
inc
iret
mov
test
test
xchg
les
and
adc
add
je
fs
ds
fidivs
lock
aam
les
inc
and
or
sbb
ss
ds
xlat
push
std
sahf
mov
xchg
sub
daa
xor
dec
outsb
pusha
or
out
lret
dec
aas
and
rolb
sub
gs
pushf
ret
lcall
lcall
testl
mov
mov
mov
pusha
int
lcall
xor
fs
sub
mov
in
sub
and
adc
xor
push
pop
movsb
rorl
mov
jno
sahf
sbb
or
sahf
in
push
push
cwtl
arpl
inc
into
cmp
movsb
out
rorl
test
sahf
imul
mov
iret
icebp
dec
sbb
leave
xor
scas
xchg
lret
cmpsl
int
scas
sub
xor
jle
sbb
cs
daa
pop
xlat
lods
mov
xchg
in
xchg
mov
mov
and
adc
js
arpl
ds
fnsave
jmp
cltd
sti
mov
aam
test
add
bound
push
push
xor
int
mov
mov
mov
xor
jne
jno
sbb
fs
ds
into
mov
movsb
out
xchg
incb
aam
les
pop
and
adc
add
je
fs
ds
into
mov
movsb
out
xchg
incb
aam
les
jno
shll
jl
sub
sti
lods
out
and
mov
lret
stc
rorb
jno
mull
mov
xor
loope
lahf
push
xor
mov
add
or
dec
dec
dec
sti
mov
dec
add
add
push
and
adc
int
xchg
xchg
adc
stos
dec
mov
mov
pop
pop
outsl
rcll
fwait
jle
ljmp
out
movsl
loop
popa
mov
xor
imul
les
jne
cs
mov
jo
popw
push
out
jne
pushf
in
jns
cwtl
sbb
xlat
call
pop
aad
dec
jl
cld
scas
jnp
pusha
xor
sub
maxps
sbb
lods
ficompl
dec
xchg
jne
sbb
std
cmp
add
cmp
inc
push
xor
add
cmpsb
scas
jg
jmp
sahf
fcompl
call
iret
push
int
cmp
sub
pop
in
popf
sbb
aam
adc
data16
or
test
fwait
dec
rorl
sub
in
add
mov
adc
scas
pop
mov
push
dec
mov
pop
jae
pop
jmp
out
add
cs
cmp
aas
subl
mov
lods
fucomi
bound
or
rcrl
cmpsl
bound
mov
jecxz
mov
sysret
popa
sub
imul
fwait
outsl
in
jge
push
adc
lret
shl
xchg
repz
jo
movsl
jg
cmp
sbb
ret
xor
or
inc
push
jle
insb
xor
cmc
imul
out
jb
mov
shll
mov
jmp
adcb
sbbl
out
cmpl
lahf
mov
in
je
cmp
pop
mov
or
mov
enter
test
dec
mov
aad
idivl
adc
add
jg
out
lea
mov
pop
inc
mov
add
jp
mov
push
test
inc
cmp
push
mov
fidivl
mov
and
sub
cs
out
repz
lods
mov
pushf
mov
adc
dec
in
cli
ds
mov
adc
popf
and
repz
hlt
or
cmc
add
cld
xor
adcl
cmp
xchg
lds
mov
pusha
mov
shll
inc
mov
js
push
and
sti
adcl
dec
sub
fsub
push
sbb
sbb
or
lods
loop
aad
jns
mov
xor
into
lods
cwtl
ja
je
fmull
insb
sub
lock
or
prefetch
sbb
add
xchg
andb
push
into
fists
ljmp
out
dec
xor
jb
shll
rorb
outsb
mov
aaa
cmp
outsl
inc
mov
shl
pop
push
jg
xor
jecxz
dec
adc
insl
fisubrs
sub
fsubs
into
lahf
jne
out
mov
and
mov
loope
cmp
pop
pop
loop
lea
aam
fistps
notb
repnz
xlat
or
push
pop
pop
psubw
or
pop
sbb
xchg
add
pushl
mov
mov
cli
insl
jo
xchg
popa
jp
outsb
je
shrb
cwtl
test
cmc
arpl
mov
xchg
xlat
xor
int
mov
clc
push
add
xchg
insb
mov
or
xor
dec
push
stos
in
mov
or
push
popa
test
pop
push
pop
jge
mov
imul
jae
in
mov
mov
cs
push
mov
fldenv
aad
xor
pop
sub
cmp
xchg
scas
xchg
xchg
jbe
mov
rcrl
add
hlt
ljmp
pop
daa
pop
out
ficoml
mov
mov
fsubrs
stos
mov
xchg
xor
push
pop
subb
mov
daa
jecxz
andb
inc
or
pop
xchg
push
repnz
repz
fs
pop
adcl
sub
lds
inc
shrb
arpl
cmp
imul
and
iret
ljmp
xor
rep
xor
std
xchg
and
fidivrs
movsb
out
js
sbb
sbb
cli
sti
push
imul
mov
fwait
cmc
out
xchg
shll
dec
sub
insl
xchg
cmp
daa
in
mov
mov
push
sub
test
out
rolb
into
jae
mov
sarl
out
hlt
push
imul
idivl
adc
arpl
cmpsl
pop
sub
test
push
xor
ret
inc
xchg
mov
jno
pop
pop
adc
test
pop
push
int
call
clc
test
iret
mov
ja
lret
outsl
cmc
leave
or
and
rclb
xchg
xchg
or
popl
sub
xor
jno
jecxz
and
adc
push
sub
and
sbbb
lret
sub
mov
mov
cmc
leave
sarb
cmpsl
imul
cmp
push
add
movsl
fs
lods
popa
xchg
add
rorb
mov
mov
sbb
stc
xchg
xor
ss
insb
ljmp
mov
jecxz
adc
sub
lret
outsb
push
or
xor
xchg
pop
sahf
pminub
loop
jl
pop
add
data16
nop
lods
enter
out
sub
xor
lods
in
ret
pusha
mov
and
jno
ja
lret
fstps
stos
xor
jmp
mull
jmp
lret
and
es
cmp
dec
dec
pop
mov
test
sub
decb
out
jns
xchg
jge
xor
xor
lret
insb
or
cmpb
scas
adc
pop
inc
std
adc
lods
sub
xchg
int
mov
pop
jns
mov
or
jge
adc
dec
mov
mov
aad
cmp
scas
aam
test
es
pop
push
sbb
pushw
sub
imul
sbb
popf
add
fcomps
and
cmp
and
rcl
out
imul
mov
pop
add
xchg
jns
push
lea
push
cmpsl
jge
iret
xchg
cwtl
aad
mov
imul
test
repz
sub
in
jb
sbb
mov
pop
fs
fs
mov
and
mov
dec
aaa
jns
pop
popf
jno
es
test
mov
or
adc
insl
rolb
aas
scas
adc
cs
xor
xchg
fidivs
inc
sahf
xchg
arpl
ret
iret
xor
mov
rorb
sbb
lods
xlat
push
rcrl
inc
fiadds
xchg
test
add
sub
adc
stc
sahf
xchg
les
fs
and
jbe
dec
loope
mov
movsb
jno
jbe
xchg
xchg
sbb
cs
icebp
lret
bound
dec
fwait
into
push
aas
jae
mov
cld
stos
push
test
push
pop
je
cwtl
xorb
scas
sarl
ret
loop
sub
push
std
imul
or
fisubrs
mov
frstor
ret
insl
sti
inc
dec
imul
int3
xchg
sub
test
mov
mov
call
fstpl
fisttpl
adc
imul
icebp
movsb
cltd
aaa
inc
add
jbe
mov
shr
push
inc
rorl
xchg
add
ljmp
or
jmp
mov
scas
roll
call
fisubrl
fs
push
cmpsb
shrb
fistl
loopne
push
mov
jnp
fmull
pop
lret
ljmp
fdivrl
daa
inc
mov
fcmovnb
test
int
pop
xchg
sbb
cmp
jmp
adc
js
mov
pop
push
pop
test
and
in
pop
cmp
sbb
clc
outsb
push
dec
rcrl
mov
rcrb
dec
gs
jle
rcr
pushw
cmpsb
or
imul
mov
jg
in
ret
push
leave
sbb
fldenv
or
push
mov
mov
psllw
int3
mov
repz
fidivrl
fwait
cltd
inc
fcoms
dec
mov
push
jno
cwtl
add
leave
mul
pop
inc
jle
and
mov
test
dec
fidivl
scas
push
cmpsl
rolb
hlt
sub
push
or
sub
sub
add
mov
call
adc
loopne
mov
lock
in
dec
aaa
fisubl
cwtl
les
mov
push
nop
push
in
idivl
test
mov
dec
jmp
std
fwait
mov
fstl
push
fsub
pop
fldenv
repz
and
sbb
jns
mov
inc
jnp
shr
rolb
arpl
iret
std
jge
daa
cmp
enter
mov
or
outsl
fistpl
xor
sbb
inc
pop
lret
dec
sbb
or
cmpsl
notl
push
or
das
xchg
movsl
les
movsb
not
testl
mov
aaa
cmp
scas
push
xor
jg
push
daa
fs
lods
add
xchg
adc
adc
or
stos
fadds
gs
and
mov
repnz
dec
mov
push
mov
mulb
hlt
bnd
push
sti
ret
fmuls
iret
and
xchg
or
out
dec
stos
rcr
dec
jmp
mov
fbstp
xchg
cmp
and
int
lahf
sub
and
mov
dec
data16
lcall
sti
mov
fisttpll
stos
js
push
pop
ds
popf
pop
jp
lea
repnz
mov
shll
cmp
cmc
push
rorb
mov
mov
mov
mov
outsl
roll
xchg
or
or
push
dec
nop
decb
outsb
add
mov
cld
fbld
out
inc
or
mov
sub
aas
cmp
cmpl
out
and
lcall
xor
sub
adc
jmp
xchg
ret
daa
sar
aaa
push
movsl
inc
push
sbb
test
outsb
adc
lds
xchg
das
inc
sti
sub
add
sbbb
dec
dec
and
xchg
jl
push
imul
outsb
scas
scas
inc
add
cs
pop
jno
push
fimull
jbe
dec
into
lret
xchg
mov
ret
fiadds
or
fmull
cli
icebp
pop
mov
movsl
repz
aam
cltd
pop
inc
aaa
pop
data16
out
cmp
mov
aad
into
dec
shll
push
fdivs
xchg
xor
dec
push
pop
dec
or
repnz
xchg
dec
scas
push
mov
out
adc
jae
call
cmpsl
scas
stos
movsl
pcmpeqd
fisttpl
dec
mov
or
pop
jbe
vpshaq
inc
adc
sbb
out
xchg
clc
sub
mov
repnz
adc
sub
pop
sarl
push
clc
lods
push
fisubl
cwtl
inc
sbb
sti
sahf
jecxz
pop
cmp
das
lcall
sub
gs
int
inc
rcrb
aas
shlb
aam
stc
sbb
js
mov
dec
ss
sbb
bound
iret
mov
ret
adc
hlt
in
add
adc
icebp
std
lock
inc
test
pop
push
adc
shr
cmp
notb
add
inc
into
test
data16
outsl
xor
or
push
and
aaa
pop
icebp
sti
and
jg
loop
inc
or
or
movl
mov
xor
xlat
inc
mov
push
scas
fiadds
fsubrs
xor
dec
inc
push
xor
test
rorb
pusha
inc
push
popf
or
add
adc
repz
or
and
enter
mov
hlt
mov
ret
lods
int
test
jne
pop
pop
int3
mov
sub
mov
jl
inc
mov
int
enter
outsb
mov
push
cwtl
lods
out
sbb
push
inc
push
lahf
add
cmpsl
mov
insl
dec
andb
ja
inc
xchg
sub
lods
shll
clc
add
jl
popf
int
sbb
out
cs
add
xlat
outsb
inc
xchg
mov
sbb
push
loopne
je
ljmp
xlat
mov
out
adcb
shrb
out
dec
and
sbb
mov
pop
xchg
shlb
aad
sub
sbb
fisttps
mov
sbb
inc
or
call
push
call
dec
lock
movsl
mov
dec
sbb
jbe
enter
call
aam
cmp
mov
sbb
xor
inc
cmp
cld
xchg
iret
jno
cmp
jnp
jnp
in
daa
add
dec
or
aam
jmp
ljmp
inc
out
sbb
dec
dec
add
jmp
push
mov
mov
sub
push
cmp
insb
push
xor
and
jb
call
fadds
mov
jae
cmp
xor
mov
hlt
cmpsl
mov
insl
outsb
pop
js
add
xchg
and
push
mov
sub
in
leave
and
mov
and
fs
inc
out
push
xor
pop
mov
mov
scas
in
addr16
loop
js
cmpsl
sbb
jbe
testb
pushf
mov
xchg
dec
je
sub
ljmp
push
cmp
loope
add
pop
aaa
pop
outsl
stos
aad
fisttpl
mov
pop
jmp
daa
cmp
ret
inc
xchg
fadd
repnz
rolb
fcomp
xchg
pop
enter
daa
inc
into
adc
pop
jg
push
xor
xchg
repz
or
jns
imul
xchg
mov
loopne
mov
or
push
into
mov
dec
shll
add
mov
scas
mulps
sahf
adcb
xchg
jge
cmpb
insb
jns
adc
xor
rcll
cltd
dec
add
scas
xor
xchg
jnp
stos
leave
xchg
and
jg
mov
int3
outsl
push
mov
loopne
cmp
jp
aad
jmp
push
pop
imul
and
cmpsl
lahf
pushf
iret
cltd
or
xchg
sbb
mov
inc
mov
add
loopne
popa
repnz
gs
loope
inc
loope
mov
dec
pop
push
sub
imul
fdivp
jnp
outsb
adc
fwait
mov
sub
xor
jo
cli
mov
xor
pop
sbb
subb
cld
loop
xchg
sub
xor
fs
movb
aas
in
test
mov
fwait
inc
inc
in
pop
adc
and
or
and
sbb
sahf
mov
pop
jnp
aam
or
int
test
dec
loop
sub
nop
inc
mov
pushf
cmpsb
or
shl
sbb
andb
sahf
repnz
jnp
mov
mov
pop
jbe
cld
lahf
cmpsb
sbb
mov
add
clc
jge
xchg
add
cmpsb
mov
cmpsb
jns
pop
lcall
in
sbb
cmp
pop
jp
xchg
stos
dec
out
inc
and
mov
ret
push
cpuid
jne
pop
mull
imul
add
pushf
fsubr
add
arpl
inc
jo
out
ret
push
loopne
je
cmp
repnz
test
inc
xor
mov
loop
bound
cld
pop
sub
sbb
lcall
sub
sti
or
or
add
pop
dec
iret
scas
mov
and
cmp
test
roll
pop
mov
dec
aam
add
pop
addl
mov
out
add
fstpt
pop
test
and
rolb
scas
inc
push
mov
icebp
inc
hlt
iret
sbbl
ret
sbb
sub
arpl
sbb
cld
test
mov
and
dec
mov
jae
lods
add
xor
cmp
push
hlt
mov
dec
and
ret
mov
mov
jle
ret
and
insl
sub
jnp
xor
scas
js
xchg
jns
mov
mov
fnstenv
repnz
out
stos
ja
and
and
sub
je
fisttpl
mov
adc
pop
inc
sbb
add
repz
mov
adc
sti
inc
fsubrl
shlb
push
mov
std
mov
lcall
cmp
cmp
jmp
pop
jle
gs
push
adc
out
add
dec
adc
stos
push
insl
jno
bndldx
movsb
inc
xchg
loope
push
jp
push
int
idiv
lret
mov
addb
mov
xorb
push
mov
pop
cmp
mov
movsl
cmpsl
std
out
xchg
xchg
test
dec
sbb
lret
ljmp
push
push
pop
sbb
push
rcrl
sub
push
rolb
call
movb
cld
les
dec
in
fsubp
in
mov
and
mov
pop
mov
or
in
call
out
jp
stc
ret
nop
cmp
adc
or
cmp
mov
mov
addb
out
mov
shr
pop
sub
pop
xchg
pusha
jb
rorb
xor
cmp
mov
push
mov
enter
sbb
inc
mov
xlat
dec
sub
xlat
add
xor
or
scas
ss
loopne
sbb
popf
sbb
stos
int
or
xlat
inc
ja
loopne
cld
cmp
fldt
dec
pop
sahf
sub
lock
addb
push
push
gs
mov
cltd
dec
outsb
cwtl
sbb
bound
mov
leave
hlt
decb
addb
movsl
fwait
mov
retw
lods
fmull
push
test
lea
jp
pop
fmul
jl,pt
mov
mov
hlt
aaa
imul
ljmp
lret
loop
jb
aaa
jbe
sbb
inc
data16
pop
out
mov
push
jg
loop
pop
outsl
push
sub
mov
add
outsl
xchg
push
sarl
push
repnz
in
pop
loop
pop
test
inc
push
dec
fsubs
mov
adc
rorb
mov
or
cmp
sti
jl
xor
addr16
sarb
das
into
mov
rcll
outsl
jp
cmp
mov
jbe
test
add
lahf
in
mov
cmp
pop
insb
xor
jne
out
inc
clc
push
xor
outsb
fbld
sbb
dec
fisubrl
jb
jg
repnz
sub
leave
cmc
mov
inc
cmpsl
or
sarl
pop
add
xor
clc
je
sub
pop
adc
mov
dec
add
jmp
mov
pop
and
and
fwait
leave
nop
push
loop
sarl
cmp
and
pop
cs
js
mov
or
pop
pop
push
bound
adc
gs
rcl
int
inc
test
ljmp
pop
xchg
mov
pop
sub
jae
fwait
ds
adc
and
iret
out
adcb
inc
cwtl
cmp
mov
insb
daa
rcll
push
sub
jns
cs
scas
mov
mov
sub
mov
iret
stos
repz
jp
xor
imul
fwait
sub
mov
daa
jbe
movsw
mov
sbb
mov
repz
push
pop
push
mov
xchg
mov
movsl
sti
aaa
adc
jno
adc
outsb
rcll
sarb
pusha
mov
rcl
test
xchg
outsb
ret
cmp
sbb
mov
mov
insb
lods
sub
fmul
js
dec
or
fwait
sbb
adc
or
add
je
popa
data16
scas
push
out
xchg
repnz
jecxz
int
push
xchg
cmpb
dec
jmp
mov
divb
ds
pop
mov
adc
icebp
jae
rcl
jl
test
arpl
loope
pop
bswap
rcrl
or
mov
push
gs
fiadds
pop
inc
test
pop
shll
and
je
test
sub
push
scas
outsb
test
mov
mov
jge
dec
xchg
int
mov
call
fisubl
push
sub
rcrb
sub
mov
frstor
adc
inc
test
cmp
aam
push
cmp
push
fstps
push
test
inc
rorl
inc
cs
xlat
fwait
xchg
add
outsl
loope
or
test
add
mov
fdivr
jno
sbb
dec
dec
fmuls
cli
push
push
mov
xchg
adc
movsl
xchg
fcmovne
shrb
fsubrl
and
mov
sti
fsubr
push
inc
das
add
mov
mov
rclb
in
loop
outsl
dec
adc
arpl
sti
mov
jle
push
je
fs
ds
into
mov
movsb
out
xchg
incb
aam
les
pop
and
adc
add
je
fs
ds
into
mov
movsb
out
xchg
incb
aam
les
pop
and
adc
add
je
fs
ds
into
mov
movsb
out
xchg
incb
scas
aad
les
pop
and
adc
add
je
fs
push
mov
push
inc
xchg
repz
jl
sbb
inc
cmp
or
dec
sub
xor
dec
cmp
std
lcall
std
fimull
or
jge
pop
cmp
push
add
mov
lcall
mov
cli
je
sbb
inc
cmp
and
adc
mov
mov
sbbb
mov
inc
xor
and
loope
icebp
push
imul
lret
xchg
movsl
insl
pop
lock
dec
jbe
mov
std
aam
and
add
mov
ljmp
or
add
lahf
cmp
inc
cmp
pop
cltd
add
pop
popf
repz
push
fisubl
outsl
pop
inc
mov
add
insl
or
sub
add
gs
sbbl
loopne
sti
lea
dec
adc
sub
sbb
jne
fcoms
mov
add
gs
jge
add
sarb
dec
mov
in
bound
aas
adc
fsubrl
insl
ljmp
dec
sub
cmp
push
jp
mov
lcall
movsl
fimull
push
sbb
sub
cmp
push
xor
sub
cs
repz
fwait
mov
mov
mov
insl
outsl
jge
sub
cmp
push
push
popa
add
out
sar
mov
test
enter
std
mov
dec
push
sub
pop
push
fs
jp
mov
lcall
mov
cli
insl
or
dec
sub
sub
push
jp
mov
lcall
mov
cli
insl
or
clc
add
adc
ret
arpl
fists
adc
pop
adcb
inc
rolb
movsl
stc
andl
mov
popa
xor
add
jne
insl
in
enter
lock
ret
outsl
cs
pop
test
mov
fs
xchg
dec
cmp
ret
mov
sbb
mov
je
in
sbb
push
vdivpd
push
add
xchg
sbb
and
rorb
fstpl
dec
fisubrl
loopne
sub
clc
or
push
rorb
push
xchg
daa
mov
push
adc
xchg
repz
adc
stos
cli
mov
inc
popa
and
movsl
jnp
das
imul
mov
inc
add
cmc
cld
das
mov
mov
pop
mov
pusha
or
cmpsb
jb
js
xor
cmpsl
scas
pop
add
lret
mov
pusha
data16
repz
sub
jnp
test
pop
dec
mov
jp
pop
jnp
ror
in
mov
ss
sbb
mov
adcb
push
daa
jnp
or
xor
pop
adc
adc
sar
pop
add
cmp
movsl
dec
mov
pop
test
leave
jecxz
add
mov
data16
fisubrs
leave
adc
cmp
cmp
cmpsl
scas
subb
mov
arpl
xchg
je
add
cli
xlat
push
mov
jno
add
rcll
js
cmpsb
rcr
jne
movb
and
cmp
stos
lret
push
mov
ficoml
dec
aas
fldcw
dec
add
jnp
popf
sti
cmp
xchg
sub
jo
in
push
cmp
int3
sbb
jae
adc
pushf
inc
loopne
push
cmp
inc
add
sub
sub
ret
mov
cmc
cmp
mov
pop
xor
sarl
push
mov
pop
mov
xchg
cld
mov
call
outsl
cltd
movb
cmp
cmp
jl
or
rol
clc
mov
ja
aad
xchg
cmp
push
inc
jl
outsb
xchg
in
push
pop
loope
into
fwait
lcall
cmp
loopne
js
push
out
cld
ljmp
js
cltd
inc
mov
lret
mov
sbb
push
inc
jp
out
js
outsb
xchg
cld
or
cld
dec
pushf
or
mov
pop
cmp
sub
pop
lods
popf
orl
fwait
mov
jno
arpl
cs
jno
sub
xchg
cmp
sub
or
pop
or
pop
int3
mov
es
jno
jne
insb
adc
gs
fwait
ljmp
sti
mov
cltd
pop
fstpt
jb
inc
mov
mov
mov
or
add
pop
sub
cmp
inc
neg
lds
out
push
jb
aas
add
movsb
and
jae
shr
pop
test
dec
or
ja
call
jmp
jmp
js
mov
test
enter
cld
pushf
jnp
push
dec
xchg
daa
lds
mov
mov
pop
movsb
jmp
je
lea
sub
shl
cltd
and
divl
int
push
lcall
add
sarl
loop
jne
jmp
pop
adc
pushf
std
out
pop
ja
in
mov
xchg
push
jg
daa
les
and
jns
ljmp
das
enter
loopne
pusha
rcll
in
pushf
fucomp
clc
cmpsb
inc
hlt
sub
je
int
push
cli
les
std
push
inc
clc
xchg
fwait
test
cmp
cs
pop
into
fistl
lods
jnp
sub
dec
fs
iret
dec
sbbl
out
pop
jb
xor
out
lea
mov
rol
fstp
pop
cmp
xchg
xchg
shl
les
mov
cmp
rcll
cmc
mov
push
dec
testl
cld
in
sarb
pop
jl
lds
mov
push
jns
fisttpl
xor
xor
shlb
jp
sti
leave
sahf
or
add
lret
mov
inc
cwtl
dec
xchg
lods
jnp
loope
xchg
fucomip
mov
cmpsl
sbb
push
dec
ja
ret
int3
int3
jne
and
adc
loope
out
in
add
mov
mov
sub
leave
scas
and
rorl
daa
iret
and
aam
pusha
daa
mov
push
jle
ret
inc
jb
jno
loopne
aaa
sbb
mov
cld
pusha
sbb
popf
hlt
into
out
stos
pop
add
test
or
push
lahf
popf
adcl
inc
fildll
inc
jmp
ss
lea
mov
add
leave
nop
in
enter
add
pusha
cmp
mov
add
cmp
sbb
cmp
ss
bound
and
scas
ret
jne
sbb
pusha
imul
dec
loope
scas
js
pushf
mov
lahf
pop
xor
aas
lahf
cmp
sbb
imul
cmp
ljmp
imul
xchg
mov
pop
jne
data16
test
stos
adc
insl
test
lcall
push
mov
sub
sub
out
push
sti
call
addr16
ljmp
inc
cmc
repz
xchg
add
idiv
out
stos
mull
test
adc
mov
mov
ds
in
jge
add
sarl
andb
lcall
xchg
in
roll
dec
sahf
dec
shlb
cmp
fidivrl
cld
clc
and
or
or
adc
lods
jp
fldcw
inc
inc
enter
lock
xor
ss
movsb
and
cwtl
ja
and
mov
aas
add
aas
push
repz
dec
into
mov
outsb
sti
adcl
jb
es
imul
cmc
je
jl
cmp
jb
add
fcomi
xchg
mov
dec
push
loop
push
and
jecxz
sbb
pop
icebp
push
fbstp
xor
xor
lahf
cmp
or
clc
notb
mov
es
pop
xchg
outsl
inc
cmpsb
scas
cli
push
shl
mov
push
aad
into
rcrb
movswl
or
fs
mov
in
jns
cmp
pop
aad
jge
lods
pop
push
mov
mov
sub
xor
add
xor
push
incl
inc
mov
je
stc
mov
adc
subl
adc
lret
jp
in
inc
aaa
xchg
push
pushw
sbb
push
out
pop
jno
and
nop
inc
inc
lds
adc
out
add
push
cmp
push
dec
fwait
mov
test
lahf
lcall
add
fsts
or
jno,pn
sbb
aas
ja
dec
ret
sti
aaa
push
push
lds
lods
xchg
push
push
je
data16
inc
imul
fdivl
push
jns
movsl
addr16
adc
sarl
mov
rorb
xchg
mov
outsl
ss
pop
mov
aam
rolb
pusha
xor
xor
jne
push
mov
adc
jg
addr16
jecxz
mov
jg
rolb
add
outsl
xor
movsb
nop
dec
ljmp
scas
mov
jmp
movsb
mov
dec
shl
cmp
ffree
xchg
push
dec
lret
add
dec
and
mov
addr16
lcall
xlat
das
daa
mov
jo
shrl
inc
mov
ret
or
dec
jae
scas
testl
adc
pop
mov
testl
test
jo
mov
mov
pop
or
loope
mov
or
mov
xor
push
lahf
add
adc
fwait
push
sbb
out
fcomps
cmp
insl
popf
inc
or
cmp
and
popf
jns
fldt
jecxz
insl
cmpsb
aam
jne
lret
adc
pop
iret
stc
lret
jmp
or
jmp
repnz
lods
inc
and
pop
jns
dec
hlt
mov
push
sub
or
or
pop
clc
xchg
call
enter
cmp
jae
push
inc
sahf
xor
xchg
xor
jns
in
movsl
dec
fcoms
jmp
or
lcall
dec
cwtl
pop
ret
lret
je
inc
push
fdivl
push
mov
xchg
or
ljmp
bound
pop
and
orl
inc
incl
rcll
pop
jnp
push
fs
push
lcall
xchg
inc
or
scas
and
pop
test
into
je
outsb
std
jb
hlt
js
cmpsl
inc
push
cmp
cmpsb
mov
bound
and
out
int
mov
das
jmp
add
adc
push
and
mov
xchg
mov
mov
lahf
out
xlat
sbb
mov
jnp
lea
or
lods
xor
lret
scas
nop
out
ret
mov
sarb
mov
movsb
insl
xchg
or
pop
call
scas
loope
rcr
lcall
jmp
pop
insl
shl
dec
outsl
les
sub
addr16
adc
jns
xchg
dec
sbb
xor
or
imul
mov
fs
enter
jmp
push
lea
inc
dec
ret
ds
fwait
lahf
or
add
loope
inc
pop
mov
int
push
inc
mov
dec
sub
mov
or
or
bound
push
fbld
and
cli
push
mov
or
imul
lods
ss
mov
addb
jno
inc
jge
jmp
mov
rorl
movsl
fimull
pop
cmp
jnp
cltd
fs
add
mov
dec
push
push
adc
dec
cmp
mov
sub
out
in
dec
mov
data16
add
and
xor
dec
lea
movsb
lock
ficompl
lcall
jge
sub
ja
add
cmp
outsb
add
stos
mov
loope
sbb
adc
jmp
or
cmp
pushf
push
vmptrld
lret
scas
call
je
fcomps
insl
mov
push
push
bound
xor
aam
jbe
les
mov
mov
and
cltd
imul
inc
sbb
std
adc
jl
ret
subb
insb
xchg
shrb
ljmp
lds
push
sbb
and
repnz
push
mov
adc
mov
push
stos
test
adc
lret
push
push
fadds
rorl
leave
into
popf
jp
push
imul
mov
pop
ds
imul
mov
popa
aad
jb
stos
stos
loopne
jl
ficoms
fcomps
lret
xor
pushf
loop
jl
xchg
in
mov
arpl
daa
fdivl
pop
ret
add
ret
shr
push
dec
pop
rcll
xchg
ss
xor
or
int
repnz
stos
pop
pop
stos
pop
dec
sub
sbb
loopne
push
loope
dec
push
mov
mov
movsb
jae
scas
jge
addl
or
dec
pop
jno
cmpsl
mov
push
xor
jle
jmp
and
ret
push
push
jl
add
xchg
outsl
sarb
push
arpl
pop
in
loopne
repnz
mov
shll
pop
movsl
xchg
push
ffree
and
jle
mov
adc
push
push
add
jb
mov
inc
maskmovq
fwait
aad
inc
add
mov
cmp
sbb
sar
mov
sti
into
popf
pop
push
push
cmp
fs
and
inc
ss
sub
imulb
iret
add
ret
xor
jecxz
xor
xor
pop
or
jnp
push
mov
push
mov
shr
push
xorl
sub
adc
ud0
lahf
aad
mov
and
mov
loope
divps
pop
nop
fcmovu
sti
das
je
sbb
mov
mov
jnp
lahf
loop
test
mov
cmp
adc
push
push
repz
push
jne
lret
popf
mov
jg
popf
adc
jne
imul
rcl
adc
in
in
sarb
ljmp
and
std
and
fstpt
lock
insl
push
xchg
in
aaa
cmp
clc
dec
mov
cs
push
shll
jne
call
sub
jmp
ret
push
and
mov
inc
cmp
in
insl
mov
add
pop
xor
sub
pop
cmpsb
insb
jns
xor
fs
imul
xor
cmp
stc
es
xchg
pop
xor
mov
cmp
hlt
int
dec
incb
ficomps
js
push
or
or
clc
cmp
pusha
test
xor
inc
sbb
adc
fwait
or
push
ja
pop
rolb
ljmp
cmp
mov
clc
roll
jo
mov
cmpsb
push
add
mov
mov
out
aas
push
notl
and
inc
push
mov
sub
push
pop
outsb
call
neg
daa
and
mov
cmp
mov
std
outsl
xor
jo
jge
lret
adc
xchg
jae
les
push
or
mov
xchg
push
into
insb
mov
sub
sub
xchg
cmp
xlat
adc
pop
mov
test
rorl
subl
or
rclb
mov
stc
test
nop
xor
dec
add
xor
jl
pop
jl
inc
xor
andl
insb
ss
pop
mov
pushl
xchg
pop
and
push
xor
mov
sbb
lods
stos
ss
lret
lret
xor
xchg
stos
xchg
std
and
sub
sub
fsts
insl
inc
mov
lret
dec
pop
daa
rorl
loop
or
push
push
arpl
adc
roll
push
jbe
inc
loopne
jne,pt
mov
jecxz
test
pop
in
lds
shlb
or
icebp
jae
loopne
lock
xor
stos
test
bound
push
shl
in
imull
xor
mov
xor
jne
xchg
cmp
cmpl
sbb
pop
add
gs
push
mov
lahf
test
pop
mov
insl
sbb
mov
pop
scas
and
insl
aaa
insl
dec
mov
cmpsb
xor
es
sub
stos
add
cwtl
cmp
frstor
xchg
and
cmp
jg
lods
cs
jp
inc
cs
xchg
bound
jle
sbb
xchg
pusha
sub
and
roll
hlt
pop
mov
shrl
imul
mov
in
or
adc
aam
jns
shll
dec
movsb
movsb
fsts
and
lahf
jl
jecxz
push
stc
in
xlat
push
jns
shrb
pop
leave
push
cs
rorl
cli
sub
das
mov
frstor
imul
sbb
shrb
lock
mov
adc
mov
mov
data16
push
jp
pop
vpmacsswd
fcompl
ja
mov
jp
je
lods
adc
fidivrs
and
shlb
lods
xor
es
std
ret
sub
in
fcoms
js
dec
mov
scas
mov
jmp
mov
clc
cltd
pop
push
push
loope
mov
jno
mov
cmp
nop
ja
cmp
xchg
add
fdiv
mov
inc
push
adc
pop
or
push
sbb
jle
sub
adc
pop
xchg
mov
bnd
mov
sarl
mov
daa
xor
and
xchg
aas
push
fbld
insl
add
fimull
dec
xchg
lahf
push
mov
in
mov
push
ret
popf
jmp
jmpw
jle
pop
cld
ror
mov
push
daa
rolb
xor
sub
aad
test
mov
fstps
xchg
push
rcrl
outsb
int
sbb
add
fs
lea
aaa
repnz
insb
jo
into
movb
adc
add
and
hlt
pop
xchg
addr16
or
scas
xor
mov
pop
and
dec
je
pop
mov
jp
pop
cmovbe
loopne
push
outsb
dec
or
insb
xchg
add
xchg
jle
retw
push
popf
daa
iret
cmp
mov
xchg
popa
addb
sub
movsb
cmp
nop
or
mov
dec
push
fists
jecxz
fcoml
cmp
sub
out
pop
inc
loop
clc
cld
rorb
pop
rcrb
add
adc
pop
mov
inc
negl
and
clc
insl
pushf
lods
or
mov
insl
xor
pop
in
int3
insb
xor
jne
mov
enter
mov
faddl
gs
cld
xor
adc
xor
add
fwait
dec
adcl
push
dec
jne
ljmp
out
fs
or
ret
jg
enter
add
mov
inc
cmpb
cs
mov
lcall
rorl
imul
pop
jg
sbbl
cwtl
stos
push
jns
pop
mov
mov
xchg
imul
test
fdivrl
or
mov
sub
out
gs
jp
mov
daa
ljmp
je
test
jo
dec
jne
or
push
xchg
gs
cmpsl
adc
lret
loopne
dec
jae
inc
sub
adc
sti
int
inc
dec
sub
insb
jmp
out
cwtl
xlat
out
adc
inc
int
xchg
outsl
mov
pop
sbb
push
pop
xor
xchg
mov
jmp
js
and
shlb
pushf
je
adc
sbb
cmc
add
neg
call
shrl
push
nop
dec
and
or
sub
mov
pop
dec
sbb
clc
mull
scas
insb
xchg
sti
xchg
cmpsb
and
pop
in
jne
mov
insl
or
nop
cmpsl
and
lods
in
je
jecxz
cmp
jbe
push
inc
lock
and
jns
lods
dec
and
cwtl
gs
pusha
std
bound
push
jb
or
imul
or
iret
inc
dec
mov
pop
xchg
mov
sub
fsts
bound
fcoms
push
xchg
cmpsl
punpcklbw
test
cli
cmc
bound
push
jl
fsubrp
cltd
fistl
jle
ror
repnz
test
dec
ffree
and
rcr
pusha
ss
imul
jecxz
xchg
jne
inc
outsl
inc
inc
mov
lret
or
lds
mov
sbb
pop
xchg
pop
jo
and
sbb
sbb
add
cmp
add
mov
or
pusha
call
std
insb
cld
aad
scas
mov
icebp
repnz
shll
imul
mov
test
lea
adc
jmp
and
icebp
mov
add
push
cld
mov
sbb
pop
inc
stos
mov
pop
stc
je
cmp
std
jnp
cltd
and
jb
fs
in
daa
mov
fsts
lret
add
push
out
leave
je
sbb
insl
lock
fisttps
sub
leave
rolb
mov
call
test
or
jmp
fidivrs
jo
and
mov
pop
mov
add
ss
out
mov
arpl
dec
rcr
aad
lret
loop
and
adc
mov
pop
sub
cmp
sbb
mov
lds
push
bound
jp
mov
xor
lods
mov
ret
out
cmc
xchg
test
adc
adc
sbb
lock
in
les
testb
addr16
out
pop
loope
dec
iret
jmp
or
xchg
sub
outsl
fs
stos
bnd
mov
fmull
sub
js
notl
int
mov
inc
das
jbe
mov
and
test
pop
dec
fstps
das
and
mov
mov
dec
sub
xchg
pop
jl
lahf
leave
pushf
dec
pop
sub
cld
sbb
repnz
sti
mov
pop
sub
fs
loop
sbb
rclb
mov
push
add
nop
adc
gs
aad
inc
cmp
repz
jecxz
fldcw
dec
jp
sbb
fidivrs
inc
mov
ret
ja
cmpb
add
xor
mov
pop
push
testb
test
imul
sbbb
sub
loop
pop
shr
pop
out
test
movsb
inc
dec
shr
movsb
scas
movsb
sbb
ss
dec
push
mov
sbb
dec
aam
or
and
xchg
mov
xor
data16
pop
lods
test
jno
fidivs
jl
inc
fcomip
shl
fldenv
in
lods
push
and
in
sbb
pop
iret
mov
and
sbb
mov
mov
cli
pop
sbb
bound
mov
add
jp
hlt
in
inc
jbe
fstl
adc
add
mov
das
mov
pop
test
loopne
int3
jle
mov
cmpl
stos
jp
adc
jp
and
cltd
cld
outsl
sub
push
xlat
jmp
sbb
cmp
jp
mov
lcall
mov
cli
insl
or
dec
sub
sub
push
jp
mov
lcall
mov
cli
insl
or
dec
sub
sub
push
jp
mov
lcall
mov
cli
pop
or
jnp
pop
cmp
push
jp
mov
xor
fiaddl
and
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
mov
icebp
lcall
mov
xchg
rolb
pop
add
push
add
or
pop
add
add
add
mov
add
add
addl
arpl
insl
add
add
add
outsb
add
pop
add
add
add
add
incb
adc
xchg
add
dec
add
daa
add
add
push
add
pop
add
ltr
add
arpl
inc
add
add
jecxz
mov
add
add
cmp
or
roll
xlat
add
add
push
add
add
add
addl
addb
add
add
add
add
add
mov
xchg
add
add
mov
add
outsb
add
add
roll
roll
add
add
cmp
push
add
add
mov
add
jg
adc
push
inc
add
cmp
rolb
rolb
les
pop
add
add
mov
add
insl
add
mov
add
add
add
pop
add
add
jnp
lods
add
add
add
popa
add
add
add
fs
add
inc
add
xchg
add
lldt
add
add
add
aas
add
add
add
and
dec
add
add
add
jae
mov
clc
add
add
add
add
xchg
add
add
add
xchg
addb
add
add
add
add
add
add
add
arpl
roll
add
mov
add
add
add
add
add
and
cltd
add
add
add
add
add
js
adc
adc
nop
add
add
add
push
add
add
add
add
add
add
add
add
add
fs
add
or
inc
add
add
add
add
xor
sub
lret
add
add
add
and
and
or
js
and
inc
add
bound
dec
add
add
pusha
add
addb
add
add
addb
add
ss
add
add
or
add
xchg
add
add
add
add
add
or
add
add
or
fs
add
add
rolb
sub
adc
push
add
add
add
add
jae
or
mov
scas
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
inc
add
sub
and
mov
add
xlat
add
add
adc
data16
add
je
mov
add
push
add
push
add
test
add
push
xor
add
adc
cmp
lret
add
lea
inc
add
rolb
adc
cmp
jmp
sldt
add
add
add
add
add
add
cmpsb
add
add
add
xchg
add
push
add
add
add
add
add
add
add
sbb
xor
mov
add
add
add
add
add
add
pop
add
add
sub
insl
add
add
add
add
add
add
add
add
add
xchg
add
add
sub
stos
add
add
out
sbb
and
mov
bound
cmp
je
or
test
mov
aaa
icebp
adc
jl
and
xor
cmpsb
cmp
shlb
loope
inc
adc
subl
sahf
pop
mov
fisubrs
inc
mov
shrb
inc
insl
das
adc
jmp
pop
jae,pt
inc
push
or
or
lret
lock
in
xchg
mov
or
sbbl
outsl
sarb
aad
add
vaddps
daa
xchg
sbb
movsl
mov
ljmp
or
loope
js
sbb
int
xor
sarl
les
cs
das
cld
xchg
adc
sub
push
and
lahf
xor
push
ret
mov
daa
cmp
and
add
add
dec
lcall
lods
cmp
fildll
push
mov
sbb
lcall
adc
jno
test
scas
movsl
sub
js
push
xor
stc
cmpsb
aaa
mov
cmp
inc
lock
sbb
clc
in
repnz
subl
fistl
loope
add
stos
outsl
adc
push
push
jg
roll
or
aas
jg
aas
pop
jmp
mov
andb
inc
pop
fdivrp
iret
push
lea
add
dec
or
push
ficoms
iret
repnz
in
cmpsl
adc
xchg
mov
scas
in
jle
cmp
adc
stc
sub
xor
cmp
mov
sub
push
mov
bnd
and
dec
xchg
lea
arpl
dec
sbb
pop
insl
pop
push
fiadds
shlb
pop
adc
loope
es
popa
add
test
cmp
pop
out
xchg
das
dec
addl
test
mov
lret
aam
sbb
mov
fstpl
out
and
push
pop
test
push
and
test
fs
je
loop
cmp
push
inc
push
enter
mov
inc
xor
fsts
stos
cltd
dec
sub
out
sahf
pop
adc
arpl
adc
xchg
sbb
xlat
lea
cli
adc
adc
fwait
addr16
mov
xor
push
les
ja
fdivl
cmpsl
popf
xchg
push
rcr
jmp
jae
add
jno
jne
xor
pop
orl
into
pop
out
cmp
les
repnz
scas
shl
sub
adc
inc
and
mov
cmp
daa
in
popa
add
scas
movsb
vshufps
or
jo
mov
mov
push
xchg
sbb
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
