call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
sub
int
inc
aaa
push
daa
sub
es
js
mov
cmc
mov
xchg
cmpsl
mov
notl
pop
inc
aaa
push
daa
and
ja
dec
mov
cmc
xchg
mov
rol
test
xchg
out
mov
rol
xchg
push
xor
jge
push
in
cltd
movsb
mov
test
mov
and
push
inc
add
scas
pop
jo
add
push
cmpsb
sbb
js
cmc
pop
dec
jle
lock
rorb
lods
imul
fdivs
lret
mov
jnp
dec
mull
ret
add
sbb
inc
outsb
aad
lods
mov
sub
xchg
cmp
cmp
jbe
lret
pop
or
daa
and
lret
mov
ljmp
sub
nop
or
loopne
mov
mov
fs
inc
mov
fwait
and
push
push
push
mov
loopne
loopne
jne
mov
sbb
mov
pop
in
sbb
xlat
les
int
mov
test
inc
inc
cmp
and
ja
cmc
pop
xchg
addr16
sbb
jmp
sub
pop
add
pop
cmp
repnz
sub
add
aam
notl
nop
fldt
gs
std
inc
add
dec
add
push
mov
mov
cwtl
rol
lock
aam
pop
fs
out
pop
adc
pusha
sbb
addr16
cmc
xchg
mov
cmpsl
movsl
xlat
mov
test
xchg
out
pop
jne
inc
aaa
push
daa
and
ja
addr16
cmc
xchg
mov
cmpsl
movsl
xlat
mov
test
xchg
out
pop
mov
in
dec
or
imul
jno
cmpsb
fadds
or
xor
es
scas
es
jb
cmp
or
gs
rol
ds
mov
mov
mov
mov
push
jg
scas
cmp
xchg
sub
sub
andl
jg
cmpsl
cmpsl
outsl
mov
jae
call
dec
ret
dec
cmc
mov
lahf
das
mov
mov
cmp
xor
jb
push
add
cmp
adc
cmc
sbb
pop
mov
pop
cmp
iret
mov
and
cmc
shll
data16
jb
pusha
mov
data16
dec
adc
cs
rcrl
pop
mov
ss
bound
xchg
notl
jnp
std
push
jle
fbld
test
sbb
jno
and
hlt
jb
and
mov
dec
scas
loop
pxor
fimuls
xchg
jecxz
mov
or
cli
call
mov
movsb
int
jle
dec
and
mov
aaa
std
xchg
imul
push
fmul
cmp
adc
pop
out
mov
jb
pop
push
arpl
adc
sub
dec
out
into
inc
xchg
xchg
push
imul
jmp
add
inc
mov
icebp
popa
mov
sub
cmpsb
jnp
jecxz
inc
xchg
xor
loopne
and
sti
mov
punpcklwd
in
faddl
movsb
mov
sbb
repz
xor
je
mov
xor
std
repz
in
jno
in
pop
mov
xchg
repz
int3
ja
test
jmp
pop
sub
jo
pop
inc
inc
mov
cmp
dec
in
lock
pop
gs
out
sbb
lea
das
cmp
lret
sbb
jbe
cli
rorl
cmp
rcl
arpl
lock
xlat
cmpsb
add
xor
sahf
clc
dec
mov
add
pop
lret
xor
inc
dec
sub
aaa
fnsave
lret
push
pop
repnz
call
popa
xchg
in
adc
cli
or
insb
dec
cwtl
in
sub
repnz
inc
in
mov
nop
dec
jle
mov
push
inc
dec
icebp
xchg
aam
pop
movsl
jnp
pushf
sahf
sub
shrl
cmpsl
push
cmp
lret
psrld
inc
scas
and
push
scas
shlb
ja
popf
fnstsw
aaa
loop
add
test
movsl
and
push
xchg
xchg
ds
outsl
mov
jb
cmp
sbb
sbb
cmpsl
xchg
int
into
movsb
mov
sti
mov
sbb
mov
fadd
push
mov
mov
rolb
jb
jl
incl
int
in
jb
incb
xor
dec
push
inc
mov
imul
pop
imul
aad
push
sub
jle
shll
pushf
xor
cmpl
mov
sub
out
loope
mov
push
jbe
test
jp
pop
dec
sbb
imul
test
jno
mov
or
adc
bound
dec
jbe
scas
cs
mov
stos
and
jg
cmpsb
cld
dec
jns
mov
into
repnz
insb
out
lea
push
repnz
iret
stos
data16
aam
lahf
popf
xor
xor
fistpll
dec
je
icebp
sub
cld
repnz
jns
dec
insb
bound
inc
adc
sub
or
popf
test
repnz
or
les
ds
stc
lock
pushf
adc
negb
cmp
shr
pop
insl
jl
ror
cmp
out
out
mov
fdivr
adc
imul
imul
es
ja
mov
xor
fstpl
add
daa
aaa
andl
jmp
mov
iret
sbb
lock
cwtl
jecxz
jge,pn
adc
push
cs
iret
sarl
repz
xor
sbb
add
dec
inc
cbtw
movsb
or
hlt
vpunpckhqdq
mov
xchg
rcl
xor
or
outsl
mov
jno
jl
jno
das
fsts
push
les
cmp
lcall
mov
call
sbbl
das
cwtl
or
popa
jno
dec
ret
or
xor
sub
addl
lcall
cmp
fwait
stos
addr16
rorb
out
push
aaa
cmp
mov
inc
jle
gs
into
and
xor
pop
sub
xchg
pop
push
mov
cmovns
adc
enter
sub
xor
xor
repz
cltd
cwtl
leave
cmp
jg
divb
pop
inc
ret
imul
insb
mov
xor
shlb
cmp
or
mov
call
shl
je
sti
or
mov
jecxz
fidivrs
cmp
mov
xchg
mov
push
jbe
push
imul
mov
das
push
cltd
pop
push
mov
add
mov
and
mov
aad
jo
shlb
mov
jmp
icebp
dec
out
ja
adc
sbb
and
add
cwtl
jno
xorb
andb
or
sub
sub
nop
pop
xchg
hlt
add
inc
hlt
or
xchg
xchg
dec
mov
sub
xor
inc
ret
test
aam
pusha
adc
mov
mov
icebp
bound
cwtl
sub
sbb
cld
mov
inc
fstpt
mov
add
cli
adc
or
sbb
sub
orb
adc
lcall
jnp
jnp
xchg
mov
xchg
jg
sub
icebp
fwait
push
jge
hlt
pop
aaa
jg
xchg
movsl
lock
xchg
into
decb
or
inc
aad
jp
inc
enter
dec
jge
fidivs
and
fisubrl
std
jno
cmpsl
cltd
jecxz
jl
add
ds
or
imulb
pop
push
mov
movsb
fcoms
jne
mov
xchg
cmpsb
dec
and
inc
add
jmp
mov
dec
cmp
jle
xchg
popa
test
adc
les
lahf
pop
ret
sbb
cmp
push
lret
pop
jnp
in
push
lea
inc
mov
shrb
int3
lock
lahf
push
jne
addr16
pop
aam
out
mov
cmp
push
fdivl
add
in
lahf
or
scas
xchg
sub
cmp
shll
cmpsb
and
mov
dec
inc
dec
jmp
inc
out
dec
mov
movsl
loopne
inc
sbb
fdivl
cmp
aam
bound
testl
mov
adc
les
int3
outsb
adc
sub
and
mov
scas
data16
negl
xchg
adc
scas
mov
lods
fyl2xp1
xchg
jge
mov
dec
xchg
xor
mov
ja
leave
in
xchg
aas
add
inc
fisubs
mov
jno
jo
mov
add
cltd
mov
imul
mov
push
pop
bound
add
cld
or
and
sub
outsl
loope
mov
sub
jnp
pop
add
or
xchg
faddl
sbb
xchg
cmp
hlt
lahf
jne
lea
repz
dec
movsb
push
rclb
add
jge
hlt
lods
mov
jge
pop
dec
mov
jmp
xor
insb
jp
push
fnstcw
xlat
test
rcr
ds
push
fwait
sub
inc
loope
xorl
lods
fs
ljmp
xchg
or
push
movsb
push
mov
lea
ret
mov
sub
cmp
int
push
mov
mov
adc
mov
inc
das
stos
pop
pusha
mov
xor
add
sbb
mov
sbb
dec
hlt
mov
mov
or
lret
bound
mov
callw
daa
dec
ja
aaa
cmp
sbb
shlb
adc
fistpl
or
adc
dec
fs
andb
cmp
mov
mov
push
push
mov
adc
subl
inc
sbb
iret
fisubrl
mov
pop
mov
shlb
int
dec
gs
dec
jg
and
push
jl
sahf
add
repz
imul
jae
and
push
lcall
push
mov
jle
in
and
andl
sarb
cs
aam
adc
sub
xchg
push
cmp
ss
and
mov
cmp
testb
aas
jg
or
fimull
mov
js
xor
xor
gs
decl
mov
xchg
nop
mov
jp
fcomps
inc
sub
xchg
sarb
inc
popf
hlt
sti
sub
lret
cmc
popf
inc
lds
ljmp
int3
adc
sub
dec
popa
nop
jbe
jecxz
mov
add
testb
xor
ss
add
ret
out
imull
dec
dec
addr16
inc
lret
ds
scas
sbb
push
insl
or
fwait
adc
aam
add
into
clc
cmp
push
int
or
sub
mov
lcall
adc
or
les
push
lds
cmp
sub
push
inc
mov
adc
dec
orb
loopne
ljmp
mov
insb
in
gs
sub
xchg
or
dec
jmp
cmp
dec
cmc
push
stc
push
jge
ja
fcomi
icebp
loop
fnstenv
mov
rorb
inc
cmp
cmp
sbb
dec
xchg
mov
inc
inc
and
ror
int3
es
pop
xor
pop
xchg
inc
pop
or
lcall
dec
dec
pop
and
lret
lahf
adc
leave
mov
cmp
mov
lret
ficompl
sbb
pop
push
scas
sahf
je
or
cld
loopne
mov
add
dec
sahf
fs
mov
mov
rcrl
mov
arpl
movsl
outsl
ror
jl
xchg
ds
sahf
push
in
leave
icebp
imul
jmp
imull
adc
fs
adc
xchg
xor
add
loopne
mov
iret
mov
pop
sub
pop
sub
in
lret
mov
cwtl
xchg
aad
mov
push
lcall
cmpsl
mov
cld
lea
mov
fiadds
pop
xorl
scas
inc
jle
mov
add
ja
jns
jnp
push
and
jle
xor
or
cwtl
adc
call
adc
sarl
dec
push
push
repnz
dec
mov
aaa
mov
mov
cmp
pop
sahf
data16
mov
roll
mov
stos
jle
arpl
pusha
xchg
cmp
lock
or
sbb
push
sub
push
stos
pop
ss
ljmp
imul
popa
jo
es
add
inc
sub
lret
xchg
pop
mov
lahf
inc
adc
sahf
cmp
jecxz
inc
outsl
mov
outsb
jmp
xchg
leave
and
cmp
clc
test
mov
outsb
loopne
cwtl
inc
jge
adc
dec
and
sahf
mov
adc
adc
fnstenv
fs
mov
add
out
pop
dec
sub
aaa
out
jge
lret
dec
test
and
scas
push
sbbl
movsb
ja
xor
lret
jb
fucomi
sub
fs
xor
cmpsw
addr16
popa
arpl
bound
outsb
sub
cmc
std
cmp
or
mov
loopne
jnp
pop
cltd
add
in
push
in
pusha
mov
fadds
and
movsb
push
jge
sub
lahf
out
jbe
mov
out
xor
inc
jae
pop
mov
cmp
push
loopne
sti
inc
sub
scas
and
xchg
testb
ljmp
jnp
rcr
in
xor
dec
pop
xchg
jmp
xchg
push
pop
mov
mov
and
aaa
jmp
sti
scas
push
js
fistl
jmp
fildll
mov
push
mov
push
sub
es
mov
mov
xchg
or
jns
jge
aas
ja
popa
ficoms
aam
dec
jnp
cmc
xchg
jno
mov
mov
gs
jp
out
pop
and
add
sub
repz
mov
add
jecxz
icebp
and
sbb
dec
out
aas
push
mov
adc
inc
xor
out
push
inc
bound
xlat
jge
call
in
popa
cmpsb
addr16
push
jp
ret
mov
lods
jb
imul
orl
jp
test
std
or
lret
jge
add
xchg
pusha
imul
stos
push
nop
and
jl
sbb
and
cmp
pop
cmpsl
mov
lret
mov
clc
dec
push
lock
lret
dec
xor
pop
repz
test
adc
mov
in
jns
shrl
stc
outsl
pusha
sbb
fisubl
lcall
stos
mov
test
pushf
stc
scas
icebp
not
mov
mov
stc
xorb
cmc
and
scas
ret
push
pop
pop
repz
inc
mov
mov
into
scas
jecxz
pop
scas
add
cld
push
fisttpl
sahf
sub
xchg
mov
nop
or
jg
leave
xchg
mov
dec
mov
inc
mov
jae
pop
int3
adc
popa
or
add
xchg
sub
pop
adc
aas
cwtl
cwtl
mov
test
nop
xor
cwtl
jl
and
xchg
mov
ljmp
and
dec
adc
xchg
outsl
insb
arpl
sbb
movsl
hlt
pop
sarl
cwtl
fistl
sbb
std
xlat
push
inc
adc
ljmp
fbld
addb
push
lcall
jp
push
lods
mov
cmp
sbb
xor
dec
xchg
call
shlb
lods
loop
dec
cmc
imul
stos
in
out
adc
fs
pop
std
mov
adc
ja
leave
arpl
mov
cmpsl
adc
mov
addl
mov
scas
jnp
or
and
push
cwtl
test
enter
or
enter
mov
iret
jle
out
mov
sub
jle
popf
dec
fildl
ret
std
sti
pop
mov
out
fdivr
lods
std
push
add
stc
lahf
leave
jl
addr16
and
jne
cmp
lods
pop
addr16
jg
mov
aad
inc
fldenv
out
sub
jbe
out
out
sarl
leave
xor
add
mulb
test
mov
jle
push
rcll
adc
push
mov
jl
repnz
mov
pop
out
cmp
insb
push
test
mov
mov
xor
push
ja
jno
jl
sub
mov
push
imul
push
cmp
nop
and
pushf
xchg
lods
sub
push
lock
sti
ja
loop
xor
cwtl
cmc
pop
pop
addr16
lcall
push
add
mov
pop
cmp
jge
fwait
popa
xorb
es
loopne
nop
pop
mov
xor
push
sub
push
outsl
sub
fwait
add
mov
xchg
dec
mov
add
dec
lahf
mov
dec
icebp
push
stc
sub
mov
dec
insb
sar
add
mov
movsb
push
mov
add
xor
repnz
pop
mov
loopne
mov
daa
xlat
enter
rorl
cmp
int3
xor
add
add
das
xlat
outsl
dec
dec
test
adc
test
mov
out
inc
mov
pop
or
loope
push
std
pop
xorl
arpl
fmuls
push
scas
sub
jb
aad
push
push
push
adc
dec
mov
mov
add
pusha
jge
mov
andb
into
ret
push
push
push
jl
out
mov
push
xor
inc
or
jle
mov
sbb
xchg
into
pop
mov
into
push
lahf
mulb
add
xor
sbb
xchg
mov
sbb
adc
pop
subl
gs
pop
dec
adc
push
rep
in
mov
es
cmpl
call
sbb
je
sub
cmp
mov
mov
or
std
popf
roll
dec
jnp
repz
mov
and
jg
fcomps
sbb
xchg
sbb
add
adc
mov
daa
add
pop
sub
addb
jo
add
dec
mov
xchg
lret
or
movl
pop
push
fsubs
xor
lods
inc
pop
ret
pop
incl
js
test
mov
dec
js
ficoms
pop
or
outsb
aad
jae
pop
jne
fsubs
out
rorb
adc
out
xchg
mov
xchg
sahf
mov
push
iret
xor
shl
xor
fidivrs
aaa
sbb
clc
dec
cwtl
mov
insb
push
xlat
jnp
add
repnz
mov
fnstsw
repnz
inc
sub
mov
pop
jle
iret
imul
cli
and
pop
stc
inc
mov
js
call
scas
xor
pusha
add
test
jo
pop
repz
cmp
ret
push
inc
cmc
cmpsb
sub
in
xor
pop
inc
pop
xchg
dec
push
iret
xchg
jp
lret
leave
xchg
movsb
cmp
push
sub
lods
or
popf
in
int3
sahf
and
mov
mov
jne
cli
mov
stc
lds
adc
inc
jae
inc
add
in
ds
xchg
sub
sub
xchg
ja
sbbl
dec
aaa
cmpl
or
decb
pushw
cmp
negb
enter
sub
ret
mov
popa
subl
inc
xor
mov
pop
lret
add
lods
sub
xchg
jmp
cmp
shlb
xchg
aad
lds
mov
iret
out
fcoml
xchg
outsl
xchg
icebp
out
sub
dec
out
adc
mov
and
in
push
in
mov
aam
dec
subb
lret
roll
dec
mov
call
xor
mov
xor
aam
gs
roll
leave
fsubrs
push
mov
mov
mov
test
inc
sub
rorb
es
loop
xchg
jb
pusha
arpl
outsl
lods
jnp
push
dec
in
cmp
enter
clc
adcb
and
push
sbb
sub
leave
ss
stc
dec
sub
jecxz
push
dec
or
xchg
pop
jmp
roll
push
out
in
sub
and
mov
xchg
int
jae
cmpsl
out
or
cltd
pop
mull
sub
dec
mov
call
int
inc
dec
inc
mov
enter
test
test
lcall
dec
in
dec
bound
lods
adc
cltd
test
xchg
inc
mov
lea
outsl
xor
lods
out
stos
pushf
cmc
jge
and
sbb
fmuls
add
sub
sub
insb
pop
cmp
pop
mov
push
sbb
cs
jmp
pop
insb
test
data16
out
shrl
icebp
lcall
stc
lret
sbb
ret
frstor
sbb
jp
repz
push
pop
in
jle
inc
sbb
xor
xchg
and
lea
lret
dec
loope
in
xchg
fbld
pushl
mov
adc
in
cmc
pop
mov
add
xchg
sbb
es
ja
fnsave
test
mulb
outsl
imul
and
aas
pushl
pop
mov
pop
pop
fs
xchg
dec
cmpsl
xchg
stc
sysexit
cmc
hlt
aas
or
loopne
dec
or
adc
jno
call
ret
mov
into
add
repnz
leave
sbb
ljmp
pushf
jns
pop
push
daa
xchg
pop
and
sbb
sarl
cmpsl
outsb
pushf
xor
ret
cmp
mov
fsubs
adc
mov
push
imul
mov
mov
lret
cmc
cs
cmp
test
insl
in
xlat
in
loopne
cmp
xor
loopne
pop
cmp
jae
mov
fcoms
add
mov
outsb
xchg
xor
push
jo
sbb
fwait
mov
testl
dec
test
mov
dec
add
sbbl
fwait
jns
add
outsb
pushf
lds
cmp
jp
xchg
pop
xor
ljmp
pop
cmp
dec
push
outsl
dec
push
jmp
cmp
popa
stos
push
pop
int
add
jp
lock
fadd
cmp
sub
sbb
adc
mov
and
pmulhuw
rorl
lret
inc
shlb
mov
out
mov
add
sub
xchg
xor
hlt
pop
lahf
inc
add
mov
data16
pop
mov
int3
mov
jle
mov
push
out
arpl
and
cltd
mov
leave
mov
xor
xchg
data16
and
jle
jbe
cld
mov
and
jle
call
pop
dec
jle
mov
mov
call
idivl
push
daa
jmp
xchg
xor
das
data16
inc
jmp
rcrb
mov
cli
fcompl
push
push
jb,pt
inc
addb
mov
lret
pop
jp
scas
and
dec
push
xchg
fwait
pop
fwait
inc
adc
pop
sbb
xchg
insb
dec
divb
sub
call
add
push
xor
and
ja
addr16
cmc
xchg
mov
cmpsl
movsl
xlat
mov
test
xchg
out
pop
jne
inc
aaa
push
daa
and
ja
addr16
cmc
xchg
mov
cmpsl
movsl
xlat
mov
test
xchg
out
adc
push
das
push
and
xor
xchg
cmc
or
shrl
cmp
pop
jecxz
sarl
and
notl
sub
shrb
push
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
xor
add
and
mov
pslld
outsb
ret
dec
xor
add
push
filds
mov
push
mov
repnz
outsl
rcrb
dec
sub
sbb
dec
filds
stos
aas
orl
cmp
fists
int3
je
and
add
mov
fiaddl
jecxz
or
fnstsw
pop
out
bound
push
xlat
inc
aaa
das
mov
outsb
loopne
sbb
out
push
int
fisubrs
dec
inc
dec
mov
out
flds
or
aas
pop
cs
sbb
lock
rcl
ret
xor
mov
arpl
lods
xlat
inc
das
cmp
mov
mov
sub
dec
bound
push
lahf
pusha
loop
lea
pop
mov
cmp
sub
jg
aaa
shrb
push
and
xchg
push
dec
inc
dec
aas
das
sub
push
lock
mov
rcrb
mov
mov
add
push
fistps
stos
aas
mov
pminsw
outsl
enter
pop
mov
jbe
add
inc
mov
loope
out
repnz
sub
inc
ret
jge
jb
push
mov
adc
icebp
pop
pop
xchg
js
pop
repnz
sbb
dec
cld
jle
push
cmp
out
push
filds
mov
mov
pslld
outsl
rcrb
dec
xor
add
push
filds
mov
mov
pslld
outsl
rcrb
dec
xor
jno
push
or
insb
push
mov
xor
lahf
fmuls
sbb
add
in
xor
popf
sub
nop
movsl
jno
dec
push
jl
fstl
int3
push
call
mov
add
outsb
andl
and
leave
sbb
pop
inc
cmpsl
xor
mov
inc
je
into
das
ds
dec
jns
insl
addr16
psrlw
pop
cwtl
push
lock
inc
arpl
aas
mov
or
cmp
cmp
push
push
mov
insl
scas
ds
hlt
jns
add
pop
loope
xor
pop
lahf
pop
aas
pop
push
add
inc
xor
shrd
dec
xor
fistl
sub
xor
addl
ret
push
and
push
call
add
aam
clc
stos
stc
enter
repz
jl
sahf
out
aas
or
add
dec
in
xor
int
in
test
and
mov
adc
cmp
insb
jne
scas
fmuls
fildll
inc
pop
push
andl
xchg
jl
xabort
shll
mov
dec
sbb
movsl
jge
out
jae
divl
ss
adc
or
xlat
shlb
lods
inc
out
sbb
fidivl
xchg
push
stos
and
iret
mov
repz
xchg
lret
mov
and
add
shlb
push
mov
xor
lret
out
xchg
pusha
loopne
sbb
sub
iret
xchg
sub
loopne
scas
ljmp
dec
test
cmpsl
stos
jb
in
fstp
cmp
sbb
clc
iret
std
dec
enter
incb
push
xchg
jo
dec
push
iret
mov
je
sub
jae
movsb
sahf
dec
lret
mov
pop
aad
or
jns
inc
in
pop
ljmp
jl
nop
jp
movsl
sbb
or
sbb
nop
out
mov
je
jmp
setns
sbb
mov
xchg
icebp
mov
cmp
aas
jae
push
add
push
loop
test
xor
stc
lret
adc
rcrb
mov
hlt
in
push
pop
paddusb
aad
push
and
or
mov
sbb
hlt
mov
fnstenv
xor
push
cltd
dec
push
pop
mov
jecxz
xchg
in
mov
ficoml
cli
lods
ret
aam
pop
fcoms
dec
movsb
test
fisubrs
jnp
or
cmp
mov
gs
addb
gs
cmc
add
fsubrl
mov
push
dec
arpl
and
out
xor
mov
bnd
ret
sahf
mov
ss
lods
jmp
out
cltd
enter
push
ja
jns
mov
mov
sbb
lods
push
ficompl
push
mov
testb
push
fistpll
pop
jns
int
int3
sbb
nop
dec
sbb
mov
pop
lods
mov
sub
movsl
ret
dec
sbb
cmp
push
subl
or
xchg
sbb
sbb
cmpsb
xor
jne
int3
decb
bound
shlb
xor
add
pop
mov
mov
mov
cmpsb
cs
mov
jmp
push
jnp
fsubs
or
in
outsb
push
push
cmp
add
adcb
or
fstpt
mov
sbb
lods
dec
test
pop
rcll
sbb
or
push
dec
cmp
sbb
pop
sub
sbb
jecxz
test
leave
cld
pop
push
rcr
jecxz
imul
cs
mov
rolb
pop
jl
out
pushf
ficompl
cmp
push
gs
arpl
ret
push
das
xor
and
subb
mov
jbe
outsl
int3
fsubr
popf
lea
xor
in
inc
mov
leave
xchg
in
in
sbb
mov
aad
push
mov
icebp
or
sbb
nop
fbstp
pop
jmp
lods
int3
stc
clc
stc
jbe
cmpb
and
push
inc
lods
mov
push
imul
inc
mov
out
jb
mov
les
pop
jno
outsl
je
fs
pop
cld
into
cmp
jns
mov
and
in
mov
enter
inc
and
jg
data16
fdivrs
pop
outsl
xor
sbb
mov
pop
mov
jmp
jae
mov
repnz
or
xorl
pop
outsb
pop
fwait
inc
jl
lret
mov
subb
cmpsl
lcall
xchg
repnz
xchg
xchg
push
fsts
fistpll
in
mov
cld
icebp
or
enter
push
jns
das
dec
lock
imul
faddl
mov
mov
add
jb
jg
stos
aas
push
in
push
out
fimuls
and
es
add
jns
sbb
test
jp
adc
push
jbe
in
repz
repz
fldl
testl
push
dec
xorl
fcmovbe
mov
scas
rcll
sub
inc
jb
jmp
sub
js
pop
rclb
clc
cmp
or
int
out
adc
loope
push
push
icebp
test
repnz
xor
add
test
dec
mov
out
mov
jb
lods
out
dec
inc
adc
ss
outsl
icebp
testb
pushf
sti
in
lret
call
cwtl
sarb
fldl
pop
shl
jp
sti
movsb
lcall
pop
pusha
mov
mov
pushf
mov
aam
negb
mov
outsl
sbb
jg
dec
adc
loop
shll
jno
inc
pop
pop
pop
sahf
inc
nop
testb
dec
aad
stc
repnz
jecxz
push
ja
mov
mov
lret
mov
mov
std
inc
mov
xchg
xor
out
push
jg
or
ss
test
mov
or
sub
sbb
test
test
xchg
idivl
popa
je,pn
xor
insl
pop
data16
mov
cmp
sahf
lods
mov
pusha
push
roll
xor
add
andl
cmpsl
enter
iret
jecxz
push
mov
aaa
in
xor
lock
repz
xchg
push
cmp
gs
hlt
jne
lret
sub
sub
lahf
sbb
jo
ret
fcompl
in
jl
mov
mov
add
aaa
test
sub
roll
ret
cltd
shl
add
sub
sbb
stos
push
inc
in
sbb
or
xchg
cmp
lods
dec
lret
cld
push
and
adc
ss
cmp
outsl
xchg
mov
pop
bound
adc
mov
mov
inc
fsubrl
mov
xchg
mov
cli
mov
jle
jp
icebp
loop
mov
inc
into
int
sub
xchg
pushf
adc
and
sbb
mov
inc
and
fmuls
cmp
jge
aad
push
cmp
mov
and
mov
adc
sbb
call
out
dec
add
inc
adc
leave
enter
aam
push
aam
into
aad
daa
or
or
lods
push
cwtl
or
add
cmc
sub
sub
xchg
sbb
jnp
pop
sbbb
ja
jg
push
adc
sahf
fwait
and
lds
loop
mov
jmp
add
cmp
push
les
push
lds
push
xor
jg
push
mov
xchg
mov
pop
es
mov
ljmp
adc
lret
out
xchg
in
cmpsl
nop
dec
push
in
mov
bound
push
mov
jg
mov
add
out
xchg
add
pop
dec
inc
lock
shl
adc
test
cmp
dec
sub
les
mov
fstps
push
cld
or
loopne
fmull
sub
aam
decl
test
hlt
loop
push
neg
pop
xchg
loope
add
outsl
pop
cli
inc
std
js
lock
test
pusha
cwtl
int3
ret
push
cld
jge
in
insl
pop
fstps
sub
sub
stos
subl
add
inc
lret
pop
lahf
xchg
fsubrs
push
test
sti
or
sbbl
or
and
or
adc
dec
and
jnp
and
ds
mov
rorb
in
outsb
lods
aas
dec
pop
mov
push
pop
cltd
push
mov
lcall
pop
int
arpl
int
mov
out
mov
add
sbb
lret
mov
into
cmp
je
xchg
out
pop
testl
aam
push
add
mov
dec
jo
icebp
das
mov
lds
imul
xor
ljmp
psrlq
xchg
scas
mov
sub
gs
xchg
inc
lds
inc
inc
pushf
push
fstpl
mov
pushl
lods
xchg
mov
out
adcl
dec
aam
mov
mov
jg
mov
xchg
repnz
xor
mov
xor
sbb
or
imul
fistps
pop
jne
sbb
mov
pop
lea
dec
pop
inc
pop
xchg
push
fiadds
pusha
cltd
mov
out
loop
jge
mov
loop
xchg
mov
hlt
xchg
test
sbb
gs
hlt
lcall
mov
inc
fcmovnu
adc
cmp
rcll
cmp
jb
js
lods
cwtl
adc
icebp
cmpsl
mov
xchg
fstpl
stos
mov
mov
arpl
mov
and
add
cmp
jo
decl
mov
jnp
dec
sbb
mov
addb
das
aas
jge
and
pusha
adc
leave
repnz
fildll
xor
mov
jnp
push
aas
push
test
xor
xchg
inc
clc
xchg
lock
popl
div
pop
sarb
and
popf
mov
cltd
arpl
sbb
or
or
je
xchg
mov
jno
inc
insb
push
sti
push
add
mov
or
fs
sbb
imul
push
xor
shll
jb
aas
lods
cli
sbb
testb
orl
lea
pop
shlb
pop
pop
ficomps
pusha
loope
push
mov
sbb
adc
mov
dec
out
dec
out
cli
xor
outsl
cltd
arpl
mov
cltd
cmp
imul
mov
push
push
pop
xchg
pop
inc
adc
dec
mov
sub
inc
xor
pop
and
rorb
call
gs
mov
add
cmp
dec
cmp
cmc
jns
add
adc
add
outsl
stos
cmpl
mov
popa
mov
addr16
mov
ret
pop
cmp
cmp
icebp
cs
jbe
ret
sahf
lgs
mov
add
push
or
cli
movhlps
or
mov
mov
fcmovbe
cmpsl
int
inc
rcrl
and
inc
test
and
pop
xlat
sti
int
jo
jl
dec
ljmp
enter
sub
shlb
lods
mov
ds
jnp
roll
paddw
jecxz
lock
cmp
or
mov
mov
pop
mov
sbb
or
push
push
mov
pop
pop
xor
mov
dec
je
leave
dec
decb
push
test
and
lahf
push
inc
in
or
pop
cmp
hlt
push
pop
mov
loopne
jns
ljmp
sub
inc
xor
jmp
stos
loope
repnz
in
pop
xchg
xchg
inc
loopne
xchg
pop
out
jae
test
aad
lea
mov
outsb
xor
push
sbb
pop
and
pop
cmpsl
mov
fsubr
ds
push
adc
cmp
jp
mov
int
pop
test
inc
lods
popf
push
insb
mov
je
push
aam
aam
aas
insl
sub
fldt
js
loope
pop
mov
sub
mov
repnz
mov
lods
sub
loopne
jl
fldcw
mov
pop
mov
into
sub
scas
pop
push
pusha
push
mov
repnz
push
stos
sub
push
aaa
xor
pop
sti
pop
cli
leave
shlb
sbb
outsb
mov
mov
movsb
cmovl
pop
pop
aam
push
push
xchg
out
mov
shrl
hlt
rclb
push
ds
mov
loop
pop
mov
jg
iret
fcomip
and
add
cltd
cmp
xlat
ja
mov
scas
in
push
mov
ret
dec
loopne
adc
cmpsb
push
cmp
and
jmp
cmpsl
cli
xlat
mov
and
repnz
inc
mov
fistpll
test
rcrl
bound
cmp
dec
loopne
sti
sbb
cmp
pop
cmpsb
and
shl
fmul
sbb
push
xchg
filds
xor
int
data16
aas
icebp
into
add
sub
pushf
sub
mov
aam
and
insl
xor
pop
mov
in
adc
dec
mov
pop
notb
subl
push
lahf
or
inc
leave
inc
sbb
out
dec
scas
setl
xor
fcmovnb
dec
and
stos
sahf
ret
outsl
mov
lea
cmc
cltd
notl
sahf
sbb
inc
int3
jnp
popa
xchg
xchg
icebp
mov
mov
enter
and
pop
int3
xchg
mov
fldcw
inc
mov
add
movsl
cmp
ss
popa
inc
addr16
nop
addr16
lea
scas
pop
cmpsl
mov
push
pop
xchg
into
outsb
xor
cmp
in
pop
test
addl
les
sub
xor
add
jne
adc
adc
mov
push
rcll
stos
icebp
fcoms
and
test
and
cs
mov
imul
xchg
push
filds
aas
int3
imul
sub
imul
pop
lcall
sarb
pop
mov
pop
lods
dec
fisubl
adc
repnz
cmp
xchg
add
test
push
mov
xchg
xorl
mov
cmpsb
cli
ret
mov
aad
mov
push
push
add
das
cmpsb
push
sub
mov
fcoml
pop
pop
sub
loop
data16
out
stc
insb
xchg
in
das
mov
dec
loope
je
mov
dec
sbb
adc
in
jae
xor
dec
mov
inc
mov
and
jecxz
fcomps
inc
xor
xchg
lcall
pop
notl
data16
or
xor
ret
les
xor
out
mov
mov
in
dec
jl
xchg
jmp
jmp
rorl
dec
add
xchg
in
sbb
loopne
mov
mov
aam
xchg
movsb
jns
dec
aas
pop
xchg
xor
jmp
push
dec
pop
cmc
dec
sbb
dec
gs
adc
leave
push
mov
xchg
jecxz
and
cmpb
scas
icebp
mov
arpl
sub
push
mov
fs
adc
jmp
push
and
loope
and
jns
repz
mov
sub
loop
iret
pop
add
jle
pop
sub
stos
leave
test
mov
pop
sbb
xchg
mov
sbb
pop
push
mov
sarb
notl
mov
pop
sub
lock
filds
cmp
cmpsl
push
adc
rorb
sub
adc
cmp
ss
dec
sbb
loop
imul
and
mov
insl
jnp
in
popf
jo
in
xchg
sub
and
adc
and
out
jae
mov
shll
mov
js
into
les
aas
shll
pop
jmp
sbb
loope
sub
test
cli
inc
or
adc
aam
stos
cmp
shl
sbb
lods
cmc
aaa
incl
mov
shrb
jnp
lock
sti
pop
fidivrs
sub
push
inc
jg
mov
cmp
mov
lahf
and
xchg
jne
repz
sub
push
add
cmp
xchg
aaa
inc
or
rclb
outsb
inc
shl
xorb
enter
xor
or
mov
jnp
mov
add
out
fwait
ret
adc
cmp
mov
in
shr
xorl
pop
insb
rcrl
push
lret
lods
mov
sub
pop
jmp
clc
insb
xlat
repnz
add
lea
jns
dec
icebp
js
subb
xchg
ljmp
jg
pop
mov
ja
mov
sbb
adc
dec
xchg
xor
out
je
mov
xor
in
in
les
adc
cmp
push
jg
divl
xchg
push
dec
jb
nop
scas
cwtl
rcll
push
sbb
test
cmp
fsubr
sbb
test
cmp
cwtl
inc
mov
adc
xor
pop
in
jmp
out
ljmp
cmp
ljmp
sub
into
in
adc
sbb
dec
mov
mov
sub
cmpsl
inc
idiv
stc
cli
xchg
rcll
daa
in
mov
bound
pushf
pop
mov
test
insl
mov
adcl
mov
aad
inc
pop
mov
es
sets
add
mov
dec
push
mov
mov
enter
cmp
mov
mov
cld
sarb
add
dec
cs
mov
call
rcrb
push
cli
gs
out
cltd
jl
repz
pop
cmp
xchg
add
and
inc
xchg
mov
out
ffreep
push
inc
test
dec
dec
ja
loope
repnz
dec
cld
sub
fisubl
xchg
push
imul
movsl
lcall
pop
adc
cmp
sub
sbb
loopne
fwait
into
enter
shll
repz
notl
andl
push
mov
lret
shl
xorl
ja
stos
in
imul
scas
in
mov
or
mov
jg
repz
cmpsb
jnp
xchg
or
mov
and
lods
pop
rcr
sbb
cmp
cwtl
xlat
push
test
jnp
push
adc
pop
and
xor
addr16
dec
pop
subl
leave
or
pushf
and
out
aad
xchg
out
dec
mov
daa
jb
fldcw
push
lahf
mov
sbb
cld
and
pusha
jmp
dec
repz
les
jecxz
mov
adcb
shll
sarb
pop
lods
scas
mov
rclb
mov
pop
packsswb
add
les
andl
gs
add
leave
jmp
mov
mov
shrb
daa
cmp
sbb
aas
repz
cmpsb
lods
imul
aas
inc
sub
jmp
aad
imulb
rclb
mov
sbb
xchg
pop
push
adc
cmp
out
dec
enter
jns
and
in
sahf
xor
dec
cmp
out
pop
movsb
push
adc
and
jg
mov
popf
jle
or
movsl
mov
lods
into
xchg
mov
fdivr
sbbl
lahf
sbb
jecxz
pop
loopne
push
loopne
stos
pop
ss
xchg
out
js
push
sahf
fmul
ret
jp
inc
popf
cmp
mov
bound
cwtl
shlb
js
xor
pop
add
sbb
cwtl
loop
xchg
fnsave
mulb
sub
pop
xchg
push
mov
imul
dec
movsb
fistpll
push
cmpsl
movsb
or
sbb
pop
mov
jae
insb
in
lret
outsb
imul
outsl
je
test
cmpsl
mov
das
lods
pop
mov
adc
stos
lds
in
sbb
xor
xor
push
jg
paddsb
adc
sarl
cmpsb
leave
stos
addb
cs
outsl
add
in
test
das
push
bound
xor
aaa
js
divl
shl
push
xlat
pop
adc
mov
data16
and
push
mov
push
cltd
rcrb
mov
cmp
xchg
inc
jmp
dec
test
add
rorb
and
xor
int
cmpsl
jmp
movl
mov
xor
ret
jbe
inc
dec
mov
shll
lcall
pop
dec
push
movsb
aas
dec
loopne
pop
sbb
imul
mov
inc
addw
xchg
movsl
enter
xchg
mov
mov
inc
clc
xchg
imul
cwtl
stos
dec
enter
dec
loope
lds
adc
faddl
inc
in
adc
jnp
adc
repnz
sub
das
sbb
xchg
sub
and
sti
shrb
ret
hlt
cmp
leave
pop
lret
leave
in
stos
into
lds
adc
sub
ror
std
sub
xor
in
pop
inc
shlb
pop
jb
jb
cmp
mov
inc
testw
pusha
outsb
gs
cmpb
test
lret
cmp
or
lods
mov
push
movsb
add
bound
arpl
or
mov
xor
daa
and
jae
cmpsl
ds
mov
cmp
stos
and
push
xchg
cmp
mov
fsts
andnps
js
sbb
sbb
or
aad
dec
or
push
popa
jp
or
inc
push
aad
fisubrs
lea
mov
inc
dec
decb
xor
out
ds
fdivs
leave
cltd
jbe
mov
xor
cwtl
leave
outsl
push
add
fstl
pop
faddl
scas
sbb
out
push
filds
mov
mov
pslld
outsl
rcrb
dec
xor
add
push
filds
mov
mov
pslld
outsl
rcrb
dec
xor
add
push
filds
mov
mov
pslld
outsl
rcrb
dec
xor
add
rcr
ret
aas
pop
test
pop
cmpb
push
sub
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
aad
lahf
mov
xchg
xchg
iret
out
xlat
dec
imul
pop
dec
addr16
ja
inc
jg
cwtl
cmpsl
lahf
mov
xchg
imul
ljmp
dec
pop
std
pop
dec
or
outsl
inc
jg
xchg
cmpsl
xchg
out
div
call
adc
jne
jbe
xor
and
push
and
aam
jecxz
rcll
fmull
hlt
out
out
shrl
and
or
fldt
jb
iret
ss
push
loopne
rclb
xor
or
repnz
add
jge
sub
out
or
pop
rolb
sbb
ret
pop
loop
xchg
dec
scas
xor
ljmp
sub
fdivs
das
andl
addr16
das
dec
xchg
push
outsl
shll
not
lret
sbb
lods
out
testl
clc
aas
adc
xor
ja
inc
xchg
loopne
xor
jb
push
aas
bswap
aam
lock
sar
add
inc
jg
dec
cmpsl
lahf
mov
xchg
imul
out
push
daa
pop
aaa
aaa
pop
es
push
addr16
ja
inc
data16
mov
fistl
in
adcl
arpl
and
adc
sbb
pop
lahf
ror
loop
xchg
mov
scas
mov
dec
push
dec
jb
or
pop
adc
out
lods
dec
cmc
mov
imul
call
pop
aaa
das
pop
aas
pop
dec
addr16
ja
inc
jg
cmpsl
lahf
mov
xchg
imul
call
pop
aaa
das
pop
aas
pop
dec
addr16
ja
inc
jg
cmpsl
pop
fcomip
push
push
loopne
repz
cmpsl
xchg
and
insb
lods
roll
jb
mov
shlb
xor
int3
out
dec
push
push
jne
dec
adc
adc
mov
sbb
bound
fmuls
push
jne
pusha
test
adc
bound
xchg
repz
sub
jns
mov
in
jb
sub
lret
cmp
sbb
xchg
out
mov
cmp
push
mov
mov
dec
cmp
cli
push
or
xchg
insb
mov
loopne
icebp
lea
jg
mov
enter
xchg
ficoms
in
dec
adc
lcall
notb
lods
jmp
adc
imul
inc
cmp
lcall
xchg
inc
aaa
push
inc
dec
aam
mov
aaa
fisubrl
sbb
jecxz
dec
mov
jns
cmp
lods
pop
ficompl
mov
jae
mov
cmp
cmpsl
sbbl
dec
movl
shrl
mov
pushf
out
push
dec
mov
pop
pop
test
adc
jbe
mov
mov
xchg
lahf
or
hlt
imul
clc
push
sbb
daa
mov
or
mov
mov
pop
inc
cmp
dec
sbb
les
or
or
push
push
jnp
leave
lods
arpl
and
add
rol
bound
inc
gs
push
mov
mov
lods
mov
nop
imul
negl
mov
ss
divl
cmp
loop
push
dec
shlb
mov
les
in
popf
pop
jae
pop
add
leave
cmpsl
push
data16
xor
add
add
loope
subl
scas
sbb
mov
cmpsl
jno
stc
mov
aaa
xor
mov
jnp
jle
push
mov
lea
cli
pop
jo
popl
mov
dec
jge
out
iret
and
mov
adc
inc
lret
and
es
jns
adc
ret
jecxz
fimuls
lock
adc
stos
cmp
jp
mov
ss
aad
jl
imul
pop
pop
pop
hlt
mov
fstpl
nop
pop
mov
mov
aad
lret
xchg
int
in
push
push
fwait
out
insl
sbb
inc
sub
adc
outsl
pop
xor
scas
fs
mov
cmp
test
jecxz
mov
aam
sbb
lds
mov
jne
cmc
adc
mov
mov
in
jb
dec
pop
push
int3
lods
cmpb
lret
in
xorl
and
xchg
add
dec
out
sbb
bound
pop
cld
pop
mov
sbb
or
aad
addb
mov
pop
cld
pop
in
mov
rcr
adc
lret
lock
lea
leave
sub
outsl
frstpm(287
daa
dec
imul
lock
push
sbb
xlat
arpl
add
test
je
push
push
jl
call
in
dec
ret
mov
dec
sarl
out
inc
pushf
adc
mov
and
or
in
add
jns
xchg
lods
outsl
ja
adc
movb
arpl
jae
js
or
lret
sbb
pop
stos
cmp
jg
add
inc
and
daa
dec
hlt
jnp
ss
and
imul
jle
aad
popa
pop
repz
sbb
sbbb
xchg
daa
mov
inc
dec
mov
sub
dec
and
bound
les
adc
out
icebp
call
push
test
mov
jae
ret
xchg
mov
cmp
mov
dec
or
arpl
adc
jmp
mov
js
ljmp
adc
jae
add
inc
cmp
mov
jge
movsb
shl
lahf
pop
and
push
adc
movsb
add
inc
adc
jle
mov
repz
and
enter
pop
or
fcmovnbe
xlat
fdivs
fcomp
jp
sub
push
out
mov
je
xorl
sbb
shrl
mov
xor
cwtl
outsl
or
cmp
fildl
int
jge
popa
mov
mov
mov
mov
push
push
adc
rcl
or
cltd
jl
shrb
push
mov
push
rcl
xchg
dec
bound
shrb
popa
mov
adc
inc
sub
test
mov
cwtl
jnp
dec
adc
mov
mov
outsb
xchg
adc
inc
test
aas
add
add
dec
push
fistpll
or
mov
dec
lret
pmovmskb
mov
sbb
mov
pop
mov
pop
nop
push
shlb
dec
lea
fs
movsl
pop
andb
stos
xorl
shll
mov
pop
push
pop
ja
push
push
aas
pop
sbb
fcom
rcr
pop
xor
pop
and
call
jmp
adc
inc
xchg
xchg
sub
cli
or
push
pop
add
mov
insl
std
out
pop
mov
pop
inc
inc
mov
in
outsb
xor
std
dec
testl
or
popa
adc
add
xor
xchg
inc
push
das
pop
mov
hlt
push
or
dec
push
mov
imul
sbb
lret
cmp
jb
dec
in
xchg
jmp
ret
sbb
jbe
xchg
add
scas
dec
jle
mov
stc
cmp
cmp
pop
inc
ret
les
jg
jle
pop
add
add
test
sbb
lret
das
clc
push
mov
mov
add
enter
add
push
jnp
xchg
xor
aam
sub
xchg
in
insl
sub
push
jbe
js
dec
jo
fcmove
add
inc
in
flds
jge
sti
stc
iret
rcll
xchg
fiadds
call
mov
pop
ja
lcall
fdivr
clc
int
pusha
hlt
mov
lock
arpl
and
jecxz
and
dec
imul
faddl
data16
ds
mov
xchg
ret
out
cld
fstl
pushf
jne
pop
cwtl
repnz
mov
push
mov
sub
lock
or
mov
fmulp
add
xor
loope
inc
in
adc
adc
dec
lods
in
pop
mov
ret
jnp,pn
fdivs
cmp
nop
mov
pusha
and
xor
jns
dec
adc
adc
push
gs
xor
and
push
xchg
cmp
cmp
ss
adc
mov
inc
aas
in
mov
inc
in
inc
mov
sub
adc
in
adc
out
es
aaa
inc
push
cmp
cmp
lret
fsubrs
pop
lret
lock
scas
inc
inc
repz
push
mov
aam
jg
push
or
push
push
xchg
adc
and
sub
mov
ljmp
pop
sahf
or
push
jmp
int
xchg
test
lock
les
lcall
pop
push
mov
jno
lock
out
pop
adc
ret
pop
mov
push
std
imul
pop
dec
jmp
push
adcl
and
dec
pushf
insb
hlt
cmpsb
jmp
xchg
mov
lods
pushf
cmp
imul
insb
pop
inc
inc
pop
daa
sbb
push
xor
popa
pop
les
or
adc
mov
jl
shlb
push
shll
cmc
jmp
outsl
in
xchg
xor
sub
ja
sub
mov
scas
call
push
pop
les
stos
xor
pop
xor
je
test
loop
addr16
pop
sbb
jmp
scas
int3
aad
cltd
xlat
sub
loopne
es
mov
mov
ljmp
lahf
push
mov
loop
arpl
pop
fsubrl
sub
idivl
cli
lret
xor
cs
mov
adcl
dec
mov
cltd
in
xor
mov
push
lret
jmp
iret
test
inc
jmp
scas
sbb
mov
sbb
leave
loop
sbb
add
pop
in
dec
sbbb
icebp
jno
ret
stos
movl
sub
fwait
add
cmpsb
cltd
push
fmulp
stos
test
cmp
xchg
push
xor
ja
int
stos
or
xchg
pop
cmpsl
push
push
int3
jnp
outsb
int3
lea
cs
add
data16
in
and
jno
cmp
enter
inc
cmp
cmp
les
lcall
nop
xor
mov
mov
inc
ja
add
fistl
imul
sbb
dec
nop
xchg
cmpsb
int3
cmpsl
shr
cmp
insb
mov
imul
xchg
or
pop
jmp
jmp
iret
decb
mov
stc
cmc
cli
add
lods
xor
dec
sub
lcall
add
mov
and
sbb
ficomps
das
das
lret
mov
add
push
icebp
mov
cmp
sub
std
jnp
loop
xor
dec
pop
jl
jne
lea
lds
andl
aam
clc
pop
or
out
sub
fwait
mov
jbe
fisubrl
imul
je
jno
adc
add
xor
psraw
mov
push
mov
xor
in
pop
pop
pop
adc
add
fmull
leave
mov
xchg
es
mov
xchg
addr16
lods
rclb
dec
movsb
ss
decl
mov
ret
sbbl
aad
icebp
in
into
or
xlat
cmc
pop
int
mov
aaa
cmp
sbb
lahf
js
jp
xor
scas
fistps
movl
enter
sbb
mov
iret
es
dec
cmpsb
repz
dec
outsl
out
insl
and
lahf
xchg
cld
imul
add
dec
pusha
or
add
imul
add
and
xor
das
mov
and
pop
push
sbb
test
pop
lods
fs
xor
adc
xchg
pushf
punpckhwd
cmp
inc
push
cmp
lret
loope
leave
mov
cs
fisttpll
subb
test
mov
gs
dec
jg
std
dec
test
xchg
mov
scas
xchg
call
xor
mov
mov
xchg
mov
shlb
leave
cli
cld
fwait
cld
mov
pop
sar
fldenv
pop
dec
ja
xor
jp
jmp
sbb
sti
xor
sbb
std
in
xor
dec
lcall
push
xor
fadd
lds
mov
sbb
or
lret
loope
push
sub
dec
adc
mov
adc
fstpt
scas
nop
addr16
clc
sub
mov
mov
lods
xor
sbb
out
sbb
test
sbbl
xlat
cmp
adc
out
add
or
lea
add
add
push
mov
pushf
cmp
stos
and
popa
dec
hlt
hlt
cmp
mov
cld
mov
push
dec
arpl
dec
aad
fnstenv
add
aam
mov
cmpsb
iret
lahf
ja
mov
outsb
adc
xor
xchg
sahf
lret
cs
or
push
jmp
shll
call
mov
cmc
faddp
pop
or
lret
hlt
lods
mov
jbe
pop
cwtl
inc
daa
sti
mov
cmpsl
and
lea
xor
popf
mov
rcl
sti
jp
pop
inc
cmp
adc
adcl
sbbl
aad
push
mov
mov
dec
jge
movsb
fsubrl
mov
jge
inc
xor
adc
movsb
pop
repnz
adc
aas
bound
scas
bnd
lret
cmp
ljmp
leave
arpl
enter
test
jmp
xchg
mov
aam
push
insb
popf
ss
pop
or
filds
pop
lock
pop
push
xor
inc
adc
add
popa
int3
nop
jb
arpl
or
sahf
rclb
sbb
ljmp
xlat
jg
loope
pop
test
dec
out
fs
addr16
push
sub
mov
push
xchg
mov
jl
fs
xchg
les
xor
popf
mov
std
fs
int
out
inc
leave
or
mov
inc
or
popa
mov
xchg
cltd
daa
xchg
mov
std
lds
mov
into
cltd
jl
sti
loop
int
jbe
add
das
out
mov
repnz
in
jp
mov
cs
inc
and
js
inc
cmp
sub
in
mov
sub
pop
sbb
or
mov
cmp
jbe
jae
dec
inc
mov
push
or
or
pop
or
jbe
inc
popa
scas
mov
jg
std
lret
popf
ds
mov
adcb
push
call
aas
sarb
sbbl
test
negb
insb
jne
pop
push
ret
dec
aad
and
std
out
mov
in
push
mov
xor
in
pop
jmp
cmp
bound
sbb
ret
sub
sarl
or
lcall
sbb
es
aam
jo
jnp
dec
sub
bswap
nop
push
inc
xchg
mov
int3
scas
add
into
jge
mov
rclb
mov
mov
dec
xchg
push
mov
mov
icebp
mov
scas
cmp
adc
shll
aas
push
add
lret
and
xchg
dec
xor
int
das
cmc
iret
push
test
mov
push
fnstenv
dec
lret
sub
inc
or
cmp
inc
mov
pop
mov
jo
jmp
insb
jnp
mov
mov
jne,pt
mov
jae
jecxz
and
xchg
push
lret
sahf
mov
dec
inc
xorl
fwait
mov
pushf
xor
xchg
add
addr16
aaa
or
or
data16
xchg
and
xchg
js
xor
rorb
fdivrl
jnp
nop
add
rcll
test
leave
lods
and
jle
mov
jae
xchg
shrb
rolb
cmp
rorl
mov
or
or
je
lahf
xchg
testl
mov
sub
test
nop
push
call
sub
push
jb
pop
cmpsl
loop
xor
pop
push
cltd
cld
add
sub
dec
testb
arpl
fistps
es
mov
add
stos
sbb
pop
dec
aas
pusha
or
xor
mov
mov
add
int
je,pn
jb
enter
mov
lods
sbb
xchg
lea
mov
sub
fldenv
into
ret
xchg
xor
data16
pushf
and
lret
xor
cmp
inc
in
ret
lahf
jnp
aaa
sub
xor
je
sub
mov
test
cltd
mov
add
pop
cli
jbe
xor
push
jno
pop
xchg
lods
dec
and
mov
mov
daa
mov
fistps
mov
pusha
jmp
cmpsb
int
ret
cmp
dec
sbb
loop
insb
mov
push
in
xchg
ljmp
pop
outsl
es
ficoms
lahf
fcoml
sarl
ret
sub
sarl
hlt
pop
mov
xchg
adc
inc
xchg
xchg
mov
insl
mov
fstpt
or
orb
jb
out
mov
xchg
inc
sub
loopne
mov
bound
add
inc
mov
ficoms
and
sub
inc
mov
push
bound
shlb
jo
into
nop
into
xchg
inc
inc
sbb
clc
adc
inc
sbb
shll
jl
xchg
xchg
test
xorl
xchg
mov
jae
adcl
and
rorl
mov
movl
lods
pop
lret
mov
int
push
fdivrs
inc
scas
fsubrs
pop
push
adc
hlt
outsb
inc
fsubrs
jmp
shrb
inc
and
outsl
test
out
xchg
je
cmp
cmp
add
fisubs
imul
xchg
out
add
and
subb
mov
push
xchg
mov
xchg
sbb
inc
mov
sbb
aad
push
loope
leave
imulb
xorl
dec
add
outsb
and
in
xchg
imul
repnz
test
jg
sub
pop
pushf
sahf
int3
pop
adc
dec
adc
jmp
inc
mov
mov
out
std
sub
jge
cmp
jbe
adc
pusha
cmp
icebp
ret
inc
push
jge
cmpb
xchg
sahf
fiadds
mov
imul
dec
fldenv
aas
push
popa
jg
std
xchg
stos
mov
insb
cmp
jno
popa
and
mov
mov
cmp
add
mov
into
lds
je
sbbl
adc
sbb
icebp
push
xorl
arpl
push
loop
icebp
call
mov
jne
mov
or
lcall
jmp
inc
jne
nop
pop
and
cs
ret
jnp
fmuls
inc
stos
mov
jge
mov
inc
je
cmc
xchg
mov
scas
mov
mov
adc
or
lret
adc
push
aas
adc
mov
das
sti
subb
pop
add
mov
sub
pusha
xorl
and
ficompl
scas
mov
cmpl
sahf
pusha
mov
test
fs
shlb
test
call
aam
mov
insb
lods
xchg
movsl
cld
jecxz
repnz
jae
and
rclb
xlat
addl
in
jbe
jmp
shlb
dec
and
pop
shld
push
xchg
add
or
daa
mov
jbe
clc
inc
mov
mul
decb
in
incb
lock
pop
xchg
jle
adc
sarb
or
out
sbb
pop
cmpsb
rclb
xor
out
gs
ret
mov
mov
jno
std
popa
xchg
loop
jl
inc
mov
lret
push
inc
sub
sub
mov
lcall
out
loopne
or
mov
xlat
cld
nop
mov
es
xchg
loope
mov
push
jns
or
arpl
js
sti
xor
ss
xchg
js
mov
add
inc
out
mov
push
pop
xchg
cltd
cli
push
lds
div
addr16
lret
sbb
push
adc
pop
adc
fwait
jno
arpl
lods
cwtl
xlat
popa
mov
stc
repz
inc
aad
mov
mov
lods
movsb
repnz
outsl
lea
or
jg
lcall
xchg
inc
cwtl
pop
sbb
dec
les
xor
inc
lods
out
mov
pop
mov
mov
in
mov
push
xchg
mov
and
or
call
hlt
jmp
icebp
mov
add
and
test
xor
adc
or
fdivrs
sbb
mov
cltd
push
ss
decl
pop
mov
cld
push
add
adc
and
loope
push
ds
xor
mov
fisubl
xchg
loop
inc
iret
lahf
adc
sbb
lods
fcoml
mov
leave
mov
das
icebp
popa
leave
dec
jne
fwait
out
stc
or
insb
inc
sub
cmp
cmpsl
mov
mov
mov
int3
or
mov
es
sbb
dec
jl,pn
mov
sub
xchg
push
push
lret
cmp
inc
push
add
sbb
cld
push
sub
jge
arpl
sbb
mov
cmpsl
pop
aaa
movsl
scas
ds
inc
pushf
mov
push
hlt
cmp
mov
jge
xor
add
sub
or
daa
iret
in
dec
fistpl
cwtl
sub
sub
and
dec
push
push
fldt
push
dec
xor
xor
or
adc
pop
sub
lcall
cmp
jmp
pop
fcoms
add
pop
lods
fwait
pop
push
lret
push
inc
rol
lods
mov
cli
dec
and
rcrl
addb
aad
add
jmp
popf
adc
lock
and
cmp
or
loopne
stos
enter
add
lds
jge
ret
push
xchg
adc
sbb
inc
call
pop
loop
in
mov
fsubp
inc
xor
pushf
mov
sahf
jge
jnp
rorb
add
out
scas
push
paddsw
cmp
call
pop
cmc
jmp
and
call
repz
pop
xchg
mov
dec
sbb
adc
mov
lods
mov
nop
pop
into
loope
mov
push
adc
xlat
insl
call
xor
mov
popf
xchg
aaa
push
cmp
inc
pop
push
mov
push
cmc
dec
add
shrb
loope
fcomi
add
add
cltd
mov
dec
subb
xchg
adcl
test
xchg
clc
xchg
mov
mov
xchg
imul
call
pop
aaa
das
pop
aas
pop
dec
addr16
ja
inc
jg
cmpsl
lahf
mov
xchg
imul
call
pop
aaa
das
pop
aas
pop
dec
addr16
ja
inc
jg
cmpsl
lahf
mov
xchg
imul
call
pop
aaa
sub
aas
pop
dec
addr16
ja
inc
dec
push
mov
xchg
imull
jg
lock
loopne
test
aas
pusha
cmp
xlat
mov
dec
jne
inc
xchg
push
xchg
xlat
inc
mov
pop
in
hlt
sub
push
aam
movsl
jbe
test
inc
gs
cmpsb
inc
xchg
push
xchg
adc
lds
aad
gs
xchg
inc
gs
jne
inc
mov
and
into
adc
sbb
arpl
push
movsl
aaa
fimull
lock
inc
cmp
cmp
push
dec
in
pop
test
adc
loope
lock
aam
xchg
sbb
sbb
stos
jp
jge
sbb
pop
call
into
cmp
sub
pop
repz
rclb
or
leave
and
scas
mov
dec
sub
mov
out
stos
adc
data16
xchg
inc
gs
cmpsb
das
xchg
push
mov
and
orb
fnstcw
idivb
cltd
push
fsubl
inc
movsl
imul
or
push
test
negb
dec
jmp
push
xchg
mov
xchg
movl
mov
add
push
cmc
and
adc
mov
xchg
and
iret
adc
lds
aad
movsl
outsb
mov
test
and
add
and
mov
nop
pop
lds
imul
adc
and
mov
stos
orb
aad
movsb
add
or
cmp
and
divl
sub
cmp
imul
cmc
lds
aad
movsl
jbe
test
inc
gs
cmpsb
inc
xchg
push
xchg
adc
lds
aad
movsl
jbe
test
inc
gs
and
mov
xchg
fcmovne
aaa
sub
loop
xchg
mov
in
or
or
dec
push
jnp
nop
nop
push
xchg
push
aaa
xor
testl
pop
lods
insl
fmulp
cs
adc
lods
lcall
xchg
cmp
mov
enter
push
sub
int3
adc
std
and
aaa
adc
mov
sbb
ss
mov
gs
into
and
mov
cmpsb
inc
xchg
repz
loop
rcr
dec
movl
adc
iret
clc
cwtl
jne
enter
mov
pop
cli
mov
cltd
cmp
mov
movsl
push
adc
and
mov
xor
dec
es
sub
lahf
test
cld
cmp
mov
jae
shl
fidivs
aaa
pushl
addl
dec
dec
fmull
push
repnz
jno
and
movsl
iret
cli
ds
fmul
jns
mov
xor
pushf
mov
aaa
lods
sub
imul
mov
mov
mov
xor
mov
movsl
in
out
mov
cmpsl
pop
imul
into
loop
push
add
daa
inc
outsb
int3
pop
jmp
orps
shr
mov
les
lret
bound
push
or
stos
es
inc
movsl
enter
fcomps
and
hlt
lea
xadd
stos
movsl
sbb
pop
cwtl
gs
sbb
sbb
mov
cltd
jno
and
inc
push
jb
xchg
sarb
mov
push
xchg
mov
sbb
or
and
pusha
pop
cld
rclb
pop
arpl
adc
dec
inc
adc
call
movsb
fwait
hlt
inc
outsb
sub
stos
or
or
cld
push
xchg
inc
xchg
mov
dec
aam
lret
or
imull
inc
mov
std
sub
das
jo
int
lcall
mov
dec
ljmp
push
jle
push
sbb
sahf
mov
and
jg
sub
fstl
bound
or
ds
xlat
and
add
test
fistpl
jge
pusha
stos
sbb
mov
mov
and
adc
rcrb
popa
jge
pop
fldenv
das
cmp
pushf
inc
dec
mov
cmp
push
scas
pushf
sub
cltd
jbe
sbb
inc
push
je
sbb
scas
orl
lods
hlt
rclb
pop
pop
fisttpll
outsl
jne
sbbb
in
mov
fs
rcrl
test
mov
pop
fisubrs
jne
jno
push
cmpsl
mov
cmc
push
xchg
mov
int
mov
jnp
pushf
sbb
push
enter
stos
and
loop
jle
inc
test
sbb
imul
stc
mov
xchg
pushf
test
mov
sub
or
lock
jge
test
dec
lret
mov
jne
mov
xchg
fld
mov
sahf
xchg
add
inc
popa
xor
pop
mov
imul
into
cltd
int3
xchg
mov
subb
into
hlt
cli
icebp
inc
jmp
and
push
js
ret
sub
push
mov
or
sbb
xor
fwait
lods
adc
push
data16
mov
out
repz
jae
lods
xchg
test
sub
loopne
std
cmp
jge
pop
jecxz
add
shlb
cwtl
cld
lea
jmp
push
cmc
adc
xchg
lret
imul
dec
mov
lret
push
ret
clc
out
mov
fdivs
sarl
int
sbb
aad
movsl
cli
push
ja
testl
xor
out
cltd
push
fwait
sub
push
mov
sub
into
jmp
dec
shll
ss
ficompl
test
push
divb
mov
add
pop
dec
ja
inc
jno
fsubrs
or
jbe
and
int3
cwtl
mov
imull
jbe
into
pop
leave
popa
fsubrs
jno
loopne
mov
jg
je
and
inc
js
test
jo
mov
daa
push
inc
mov
lcall
mov
mov
inc
or
push
test
imul
cld
call
push
hlt
mov
mov
fidivs
pushf
rolb
imull
adc
rep
and
pop
jbe
mov
incl
or
dec
insb
push
das
add
sbb
mov
pop
cmp
add
stc
cs
sbbl
outsb
lods
mov
imul
or
dec
mov
inc
sbbb
xor
xor
int3
leave
and
cmp
or
xor
mov
mov
mov
or
inc
push
mov
cmc
sti
add
shll
movl
pop
mov
sbb
mov
mov
dec
pop
lcall
sbb
mov
sarl
push
push
xor
adc
cmpsl
sub
cmp
push
sub
arpl
jp
ss
fisubl
or
bndstx
xorl
sbb
popa
loopne
jecxz
lret
rclb
ror
scas
into
push
data16
loop
cmpb
rclb
adc
and
dec
out
sarb
or
sbb
pushf
adc
pop
cld
and
pop
fimull
inc
aas
push
lock
ret
or
xchg
xor
mov
arpl
push
mov
mov
push
inc
movsl
sub
mov
jmp
iret
jecxz
add
pop
pushf
dec
fisttpl
sahf
adc
lea
je
and
add
xor
cmp
fildl
fwait
cmp
mov
add
xchg
jg
mov
xchg
int
add
push
mov
xchg
loopne
xchg
mov
xchg
dec
cmp
ss
mov
fwait
lock
mov
and
sub
movsl
test
cltd
inc
fstps
int
jp
nop
lret
les
mov
mov
nop
sbb
aas
adc
push
inc
adc
aas
cmp
clc
push
ljmp
mov
sahf
lods
jb
jl
pushf
jl
shll
inc
in
into
dec
dec
lock
imul
sahf
jnp
pop
add
test
movsb
and
or
call
jle
xchg
iret
iret
jne
jecxz
inc
sub
push
pop
jp,pt
cmp
stos
push
hlt
imul
fiadds
stos
or
dec
or
imul
cmp
sbb
enter
push
dec
sbb
fld
es
cmp
dec
iret
fwait
cmpsb
push
ja
push
jecxz
xchg
mov
cs
sti
ficoml
xchg
jns
in
les
inc
sbb
mov
xor
xchg
scas
mov
pop
push
cmp
and
sbb
es
rolb
imul
xor
jge
cmp
xor
fsts
push
sbb
jbe
inc
cltd
iret
adc
lretw
testb
dec
hlt
ja
adc
roll
push
mov
ss
cld
in
call
outsl
xor
adc
mov
inc
push
and
pop
or
push
pop
sbb
dec
mov
mov
fstpt
test
or
add
jecxz
push
add
push
dec
lret
mov
out
cltd
in
sub
test
push
insb
jmp
xchg
xchg
lds
push
mov
push
xchg
cltd
mov
dec
fistpll
jl
and
clc
je
mov
sub
call
xchg
xor
mov
in
xchg
cmp
mov
hlt
sub
and
pop
and
aad
cmpsb
push
in
pushf
imul
sbb
leave
notb
pop
mov
mov
mov
pop
dec
jecxz
cs
push
pop
add
dec
cltd
dec
mov
sbb
cmp
push
mov
cld
mov
test
pushf
leave
rclb
aaa
mov
test
jge
xor
lods
adc
jmp
scas
jg
xor
fcoml
dec
test
sub
pop
sbb
test
dec
xlat
test
loope
daa
jo
mov
fwait
push
adc
xchg
mov
pop
push
jb
push
loopne
arpl
sub
xchg
scas
out
xchg
jae
jns
pushaw
dec
push
cwtl
into
cmp
mov
es
jp
rorl
xchg
rolb
das
lods
call
jle
pop
in
pop
lret
pop
out
outsb
into
xchg
push
mov
fcomip
arpl
std
mov
push
scas
mov
pop
mov
pop
pop
cltd
jne
mov
pop
mov
test
into
hlt
nop
mov
xchg
imul
test
sub
inc
jnp
ljmp
mov
sbb
in
mov
inc
fucomip
mov
mov
insl
mov
test
cmp
pop
pop
outsl
cwtl
add
and
add
cmp
push
je
ljmp
cmp
lret
add
xor
mov
add
dec
outsb
les
mov
jmp
or
jl
iret
loop,pn
xor
fs
loop
les
pop
popf
lret
jae
jns
repz
push
or
pop
iret
sarl
mov
sub
addr16
and
dec
xor
push
push
or
sbb
pop
test
and
fisubl
ja
movsb
rcl
cmpsl
lret
xchg
sahf
lods
jb
pop
mov
ror
sbb
dec
popf
loopne
jns
add
cmpsl
inc
fs
jecxz
insl
sbb
cmc
pop
push
and
out
imul
dec
pop
xor
push
or
out
xchg
pop
adc
or
mov
jmp
pop
xchg
cmp
fistpll
xor
lds
mov
js
movl
daa
xor
fidivl
push
hlt
mov
into
xor
test
les
push
scas
test
xor
fcoml
push
adc
in
xchg
les
sub
andb
sahf
inc
inc
mov
cmp
bound
push
add
pop
cmp
cmp
mov
add
into
ja
dec
int3
bound
jmp
std
mov
addl
inc
mov
lods
out
testl
hlt
xchg
push
xorb
mov
scas
xor
in
adc
push
enter
mov
in
mov
into
das
and
pop
ret
repnz
out
dec
sbb
xchg
or
call
cwtl
ljmp
movl
cmc
imul
inc
lock
xchg
push
cld
das
add
cmp
adc
add
out
stos
mov
mov
sub
int3
inc
shlb
pop
cs
aad
movsl
dec
dec
cmc
mov
mov
cmpl
inc
fdivrs
lods
addl
iret
push
cmpl
cmc
popf
iret
adc
movsl
xchg
mov
sbb
jmp
pop
push
lret
sub
pop
jge
adc
adc
fpatan
push
pop
xchg
stos
mov
sub
mov
rcrl
jge
pop
cmp
jnp
lret
sub
arpl
mov
out
pop
push
sbb
daa
adc
into
cmp
in
mov
nop
mov
loope
mov
xchg
in
mov
icebp
inc
repz
add
dec
lds
jae
test
ds
push
out
add
pop
cs
mov
shll
shll
icebp
push
xchg
jmp
add
std
mov
or
es
lods
in
xchg
inc
adc
lahf
push
int3
and
xor
mov
dec
sbb
stos
outsl
lods
cmpsb
lods
mov
xor
jp
mov
les
call
jnp
enter
push
push
and
mov
cmp
add
insb
xor
fmulp
inc
and
mov
imul
pop
mov
add
add
aad
shl
stc
mov
clc
xchg
and
scas
mov
jnp
push
int3
inc
jge,pn
mov
dec
mov
fadds
sub
sub
cmpsl
jbe
adc
aaa
std
push
aam
cmpsl
icebp
sub
outsl
outsb
addl
sub
sub
punpcklwd
roll
in
je
mov
or
push
mov
jb
cmp
push
dec
add
andb
adc
push
cmp
xor
imul
scas
sub
or
scas
andl
insw
cmp
mov
sub
sub
movsl
push
mov
imul
in
jmp
inc
add
jmp
loope
push
lahf
and
xchg
or
ret
cs
clc
es
stos
repz
mov
insb
dec
out
int
movsl
js
push
add
lret
mov
cmc
xorl
in
push
mov
xchg
mov
jp
rcl
jge
sub
cs
xor
mov
test
and
xchg
into
mov
mov
arpl
lret
dec
dec
out
jo
and
repz
jno
cmp
shlb
sbb
les
dec
lcall
sbb
or
cmp
sub
dec
inc
addl
xor
dec
test
mov
lds
and
mov
bound
bound
push
pop
imul
add
dec
or
inc
cmpsb
call
cwtl
ret
je
test
rclb
lods
mov
jbe
int
jmp
out
outsb
iret
xchg
clc
jo
xor
push
sbb
jno
std
xchg
in
dec
pop
lock
mov
mov
std
adc
mov
mov
out
mov
div
jmp
hlt
sarb
lods
and
outsb
hlt
xor
mov
int
adc
mov
ror
subb
inc
sbb
sbb
sbb
adcb
out
sbb
call
push
in
inc
mov
mov
jecxz
xchg
leave
in
insb
mov
mov
call
jbe
mov
sub
daa
pop
xchg
xlat
dec
insl
sub
movsl
sbb
insl
sti
and
pop
sti
mov
dec
pop
mov
hlt
xor
outsl
pop
les
mov
das
xchg
adc
shll
lods
fld
lock
mov
mov
pop
sub
clc
mov
sub
fnstcw
daa
adc
cli
rclb
fstpl
push
inc
sbb
mov
inc
push
jg
stc
adc
lea
aaa
mov
lcall
jg
inc
pusha
test
loopne
mov
sbb
inc
les
leave
push
adc
ss
out
sbb
pop
scas
or
adc
inc
jecxz
add
adc
daa
mov
mov
pop
dec
xchg
mov
pop
adc
jge
or
sahf
ficompl
add
negb
fsubs
sbbl
clc
cmpsl
jno
xchg
nop
pop
mov
push
mov
dec
loope
orl
fdivrl
push
xchg
mov
xor
ljmp
mov
add
out
ret
dec
scas
mov
pop
nop
rol
enter
stos
int3
add
or
fildll
jne
ret
adc
pop
pop
lds
push
sub
sub
pop
mov
jmp
jno
jae
repnz
sbb
leave
lret
sbb
jge
dec
stc
inc
dec
popa
mov
popa
sahf
cs
mov
fcmovnbe
xchg
add
sub
mov
fnstcw
mov
ret
lea
add
fadds
scas
movsb
pop
popa
xor
pop
mov
pop
lods
test
popf
ss
movl
inc
fstps
pop
xorps
lea
insl
daa
cltd
or
sub
pop
mov
popa
mov
cmc
lret
cltd
mov
xchg
dec
ds
pusha
lea
mov
aad
adc
xchg
sub
lret
mov
inc
push
or
repz
pop
pop
pushf
shrl
loopne
add
shrb
lock
lret
cmp
sbb
inc
or
lret
jp
mov
mov
fldl
movsl
push
imul
sub
subb
lcall
xchg
stos
inc
pop
jg
imul
imul
in
je
mov
mov
loopne
popa
xchg
push
cmp
xchg
jg
les
adc
in
cli
inc
scas
lea
aam
pop
fs
mov
jb
pop
mov
jp
in
stos
or
cld
mov
pusha
jnp
aaa
int3
adc
bound
sub
mov
bound
aas
pusha
mov
cmp
push
daa
push
xor
repz
ljmp
push
stos
jno
decl
pop
adc
mov
sub
jo
push
xchg
ret
cs
sahf
ret
jno
movl
jae
fxch
jle
jns
push
sbb
enter
in
jp
sub
test
in
out
into
xchg
scas
inc
dec
movsb
mov
and
sub
loopne
mov
and
testb
cmc
ds
insl
cmpsl
pop
xor
pop
into
out
jne
push
sub
mov
imul
inc
leave
adc
push
xchg
lret
gs
adc
pop
shll
mov
stos
pop
imul
lret
test
stc
popl
and
dec
stos
push
pop
rorl
xchg
fisubrl
xor
fnsave
sub
adc
lods
or
or
test
adc
rcr
push
jbe
fistps
adc
mov
in
fsub
xchg
mov
mov
cwtl
xchg
add
cmp
loop
mov
loopne
sub
dec
jl
pop
stos
sbb
dec
mov
pop
sbb
add
repz
lds
mov
aas
adc
xor
dec
ret
push
hlt
jge
bound
mov
xor
sub
das
icebp
jae
aas
iret
sub
xor
xchg
and
in
xchg
in
mov
mov
push
enter
imul
test
inc
sbb
bsr
lock
inc
iret
sbb
xlat
mov
mov
int3
mov
cmpsb
adc
repnz
es
ret
or
inc
arpl
int
xchg
push
dec
cltd
mov
lds
incl
ret
or
push
jae
cli
dec
incl
cwtl
fcoms
xchg
daa
add
jae
mov
adc
and
pop
ficompl
jmp
jle
pop
dec
pop
sahf
out
or
jbe
lcall
xor
xchg
sub
daa
in
ret
cmp
repz
dec
inc
cs
jge
cmp
push
icebp
dec
dec
mov
imul
mov
or
dec
dec
ds
mov
adc
adc
sbb
fiadds
adc
and
inc
mov
sbb
pop
ret
push
jne
push
add
fdiv
pop
jns
mov
push
popf
cmpl
mov
fdivrl
aad
pushf
pop
lahf
iret
pop
jl
inc
adc
inc
test
std
aam
ljmp
jmp
xchg
clc
imul
hlt
mov
xor
xor
dec
cmpsl
push
std
bound
push
shrl
add
into
mov
stc
mov
aaa
dec
in
enter
or
scas
jmp
loop
inc
jne
jmp
xor
push
pop
dec
mov
pop
ficoml
inc
pop
loope
sub
loop
xor
xchg
cmp
ljmp
or
xchg
jne
xchg
les
add
shlb
cwtl
ret
dec
pop
test
xchg
andb
mov
in
and
sbb
adcl
mov
shlb
lea
je
jl
jmp
xchg
jl
in
fimuls
mov
sub
mov
pop
div
xor
ss
push
into
jl
rcr
and
xor
test
pop
adc
mov
sti
ljmp
and
xor
mov
push
xor
push
sbb
mov
jp
mov
fdivrs
scas
xchg
test
sbb
inc
or
inc
push
cmp
mov
push
fldt
iret
or
enter
push
ja
scas
jbe
sub
pop
shlb
movsb
enter
movsl
es
or
lock
aad
and
mov
xor
sub
xchg
xor
sbb
movsb
nop
xor
jns
cmp
add
in
adc
loop
jg
jle
arpl
popf
adc
cmp
shl
in
addr16
scas
cld
xor
sub
mov
dec
lods
and
inc
fidivrl
pop
jecxz
movsl
shl
add
pop
push
movl
js
nop
lcall
mov
xor
cli
sub
lods
lods
pop
lods
sbb
mov
push
and
inc
jmp
mov
mov
push
mov
sbb
das
call
push
clc
nop
insl
jae
ror
or
pop
ja
mov
cmpsb
int
fstpt
cmp
cmp
fwait
shrl
dec
xchg
popf
xor
cmp
negb
mov
mov
movsb
and
jmp
ds
lds
adc
xor
in
insl
cwtl
sbb
mov
jns
xchg
adc
lds
aad
movsl
jbe
test
inc
gs
cmpsb
inc
xchg
push
xchg
adc
lds
aad
movsl
jbe
test
inc
gs
cmpsb
lds
xor
in
cmc
lds
aad
movsl
jbe
test
inc
gs
cmpsb
inc
xchg
push
xchg
adc
mov
aad
aad
lds
xor
and
adc
add
jge
add
mov
cmpsb
mov
hlt
ljmp
xor
and
adc
add
je
fs
dec
inc
pop
mov
movsb
ficoml
in
aam
fidivl
and
adc
add
je
fs
dec
inc
pop
mov
xchg
hlt
scas
xchg
xchg
xchg
mov
inc
gs
insl
dec
jnp
xor
jl
mov
filds
jno
ret
fdivrs
jmp
stc
in
jmp
lods
sbb
inc
sub
mov
mov
lcall
jle
dec
jbe
out
stos
sahf
or
mov
push
mov
test
addr16
jmp
cmp
les
aas
add
sbb
fwait
jp
lds
jno
jne
jnp
movsb
and
sub
dec
push
addr16
xchg
stc
in
imul
iret
fnstenv
jne
pop
movsb
cli
fs
sub
fadd
cs
sti
jecxz
pop
out
div
aas
push
mov
fs
adc
fcomi
sub
adc
add
je
fs
dec
inc
pop
mov
movsb
mov
hlt
ljmp
push
inc
inc
cmp
inc
jae
push
or
add
or
iret
ror
loop
fdivl
movsl
mov
sub
ja
inc
push
adc
ret
iret
jmp
mov
mov
and
push
bound
xor
jp
dec
inc
pop
mov
movsb
mov
hlt
ljmp
xor
and
adc
add
je
fs
dec
inc
pop
mov
movsb
mov
hlt
ljmp
xor
inc
jae
mov
xchg
movb
pushf
pop
dec
ja
stos
adc
pop
fstpl
aad
call
push
mov
mov
lods
sahf
xchg
shrb
fwait
lahf
into
xchg
out
and
fs
cmp
cwtl
and
bswap
sbb
add
sub
imul
and
lods
nop
jns
rcl
xchg
lea
xchg
dec
sub
mov
pop
cli
inc
in
test
mov
inc
pop
jo
jne
pop
scas
xchg
xor
arpl
mov
push
push
popf
in
push
xchg
loopne
arpl
sub
xchg
dec
push
and
xchg
ret
stos
nop
fs
out
mov
cmp
ljmp
add
faddl
icebp
lods
insb
sub
rclb
test
arpl
out
cmpsb
xor
pop
jle
sbb
pop
pop
sub
sbb
jno
stos
mov
sbb
fisubrs
adc
inc
mov
sub
mov
popf
popa
movzbl
popf
jnp
movsl
mov
jbe
xlat
dec
push
mov
inc
adc
mov
inc
inc
xor
xchg
xchg
int
out
sbb
lods
and
mov
and
in
cmp
cli
aaa
adc
insl
mov
or
ret
gs
sti
out
cmp
cltd
jb
subb
or
mov
inc
ja
sahf
adc
lret
iret
inc
push
inc
jne
movsb
cltd
pop
mov
int3
gs
ja
add
and
cltd
pusha
xorl
pop
dec
xchg
pop
not
cmc
sbb
xlat
pop
mov
cmp
mov
and
mov
es
xor
and
ds
cmp
jmp
dec
aaa
adc
shlb
xchg
or
dec
sbb
sub
shl
nop
mov
pop
add
scas
test
std
mov
in
xchg
dec
dec
push
mov
test
cmp
push
daa
ret
popa
jp
add
ss
mov
mov
jle
fs
xor
arpl
shr
dec
pop
movsb
sarl
mov
imul
adc
inc
inc
sub
sbb
jae
push
insb
loope
mov
cmp
push
ret
xor
loop
scas
movsb
iret
fwait
mov
ret
mov
pushf
enter
push
lds
cmpsl
mov
sbb
popa
mov
mov
dec
dec
jl
cmc
in
dec
jb
xor
mov
call
lahf
sub
xchg
cmp
sbb
pop
push
hlt
dec
out
mov
jp
sub
mov
sub
sbb
jbe
int3
aad
jl
out
dec
sbb
mov
push
adc
mov
mov
rcrb
ds
jns
mov
das
cltd
mov
int3
notl
fmul
movsb
mov
pusha
mov
daa
jae
and
push
fnstsw
lret
xor
xchg
bound
xlat
add
adc
jae
jge
sahf
jecxz
std
mov
stos
in
daa
lahf
mov
inc
rcrl
dec
rol
jg
adc
xor
jecxz
push
push
fimull
mov
cli
rcrl
push
pcmpeqd
lods
insb
pop
outsl
push
movsb
xor
xor
jbe
jp
fs
xor
stos
lods
sbb
mov
clc
push
imul
std
mov
loope
adc
aam
mov
xor
add
cltd
cmpsb
imul
fdiv
das
test
mov
add
int3
andb
roll
movhps
pop
arpl
cmp
fwait
mov
xor
and
repnz
xor
xchg
loopne
fadds
mov
sub
ret
add
jno
mov
push
xchg
pop
out
jbe
idivl
repz
jmp
stc
xchg
scas
xor
pop
lcall
scas
popf
mov
mov
xchg
repz
out
and
sbb
adc
mov
out
dec
cli
pop
xor
call
js
dec
enter
push
test
fs
pushf
test
cmp
ds
or
and
std
push
xchg
pop
push
je
push
sti
lock
lret
inc
inc
setno
insb
push
sarb
dec
mov
inc
outsl
lea
in
mov
mov
leave
aaa
mov
call
bound
cltd
or
loope
push
inc
add
lahf
dec
out
jg
mov
repnz
call
aad
mov
sub
inc
jmp
pop
and
popf
stos
hlt
sub
sbb
jmp
cmp
les
sbb
push
cltd
int
cmovno
inc
je
inc
xor
into
popf
daa
mov
xor
rolb
mov
test
inc
test
sbb
lret
inc
rcr
mov
mov
cmp
xchg
cmp
jge
xor
iret
sbb
push
sbb
test
xor
ds
popf
jle
push
add
rolb
out
cmp
sbb
pop
shll
push
pusha
xchg
jp
xchg
adc
inc
enter
fs
dec
iret
push
int
xchg
std
repnz
cwtl
mov
pusha
jecxz
mov
jge
sub
lods
mov
roll
rcl
subb
pop
push
xor
pop
and
and
and
cmp
ret
in
jmp
dec
dec
adc
iret
push
cli
nop
out
sub
ret
sub
and
lds
xlat
pop
bswap
push
jae
mov
loope
rorb
mov
movsl
jno
inc
add
and
inc
push
call
mov
mov
dec
xor
add
rorb
pop
or
out
rcr
cs
lret
fistpl
lret
decl
mov
mov
mov
pop
adc
mov
and
xor
add
rorl
inc
jge
sub
xor
dec
leave
pop
mov
inc
mov
cli
ljmp
xlat
rorl
dec
into
insb
aaa
in
out
ljmp
adc
iret
mov
fwait
pop
sub
mov
std
push
nop
xchg
sub
cmp
mov
jg
jg
sub
add
xor
lea
adc
outsb
xchg
in
data16
and
mov
mov
sub
fistl
lock
dec
or
and
jns
jg
or
scas
adc
sbb
insb
xor
addr16
cmp
stos
mov
repnz
incl
rcrb
pop
aas
cmp
or
fwait
ja
ljmp
jl
test
arpl
fisubl
push
hlt
ret
or
mov
shr
jb
inc
dec
cltd
cmpb
push
enter
in
adc
push
rolb
ds
xchg
xor
cmpsb
push
jbe
and
mov
jns
mov
mov
fdivl
fistl
pop
inc
pop
out
das
out
pop
push
out
leave
shl
inc
jbe
sub
pop
je
push
dec
dec
rcrl
lahf
pop
fcomps
add
pusha
push
dec
mov
clc
ret
in
push
jns
lock
rorb
in
mov
dec
inc
add
xchg
cltd
ret
sbb
dec
lahf
mov
sbb
adcl
jg
loopne
and
enter
nop
fs
and
incb
subl
adc
push
fildll
mov
mov
pop
inc
icebp
cltd
pop
jp
cmp
xor
jno
add
inc
pop
outsb
testl
mov
mov
fnsave
pushf
push
lret
lret
jl
cwtl
jno
jbe
add
mov
stos
inc
lcall
xchg
jmp
cmp
mov
and
push
xchg
ds
int
adc
lock
push
cwtl
popf
loop
test
dec
push
loop
inc
ja
fdiv
adc
cmpsl
cmp
sarb
clc
movsl
push
pop
hlt
lods
inc
inc
mov
xor
xor
loop
fistpll
push
mov
loope
std
loope
mov
test
mov
inc
enter
and
sub
aas
sahf
dec
add
cld
lock
popf
aaa
mov
loop
cmc
inc
out
push
mov
iret
into
push
dec
out
in
mov
pop
and
pop
arpl
pop
in
xchg
jbe
ja
outsl
dec
pushf
arpl
jne
add
adc
popa
inc
test
cmp
pop
dec
inc
leave
or
mov
mov
cli
or
pop
add
gs
push
in
cmp
jbe
pop
jns
scas
jp
inc
imul
daa
mov
sti
jle
fs
fistl
divl
movsb
jg
add
xor
jle
push
mov
out
sub
xchg
xchg
ret
and
mov
in
pop
cmp
mov
jo
aaa
out
ret
or
aad
pop
mov
inc
jno
es
stc
stos
mov
in
xchg
pop
sub
fsts
aaa
insb
fldcw
xchg
aad
xchg
insb
jl
lahf
inc
add
fsubr
jmp
or
xor
lock
aam
pusha
inc
or
popl
adc
sub
iret
and
pop
lds
pushf
lods
out
idivb
js
ss
xor
xorl
mov
mov
lods
xchg
xchg
cld
arpl
es
in
mov
push
xor
out
aad
xchg
shlb
ss
mov
dec
clc
sub
bound
or
mov
enter
test
cwtl
pop
ds
sub
in
hlt
sti
adc
push
ret
adc
fs
lods
aas
mov
sarl
mov
inc
mov
fildl
test
js
jg
adc
pop
jae
add
and
pop
test
push
shrb
outsl
sub
leave
shr
pop
cmpsl
mov
cmpsl
aam
aad
popf
push
test
call
xchg
stos
aaa
or
out
pop
dec
lods
das
inc
sub
and
mov
adc
xchg
adc
mov
xor
addl
sub
dec
and
mov
mov
je
pop
sub
loope
cmc
add
add
xor
lea
loopne
xor
mov
fcmovnbe
sub
rorb
fisttpl
ja
aad
int3
stos
or
xor
push
and
bound
inc
jg
or
in
rclb
inc
push
aas
pushf
and
in
in
or
pop
pop
dec
mov
pop
icebp
push
mov
in
push
dec
mov
or
add
push
mov
ja
mov
call
jns
pop
add
xchg
jecxz
xor
inc
mov
cmpb
stc
xor
inc
aad
and
inc
jo
fcomps
pop
shlb
and
sbb
orl
movsb
scas
out
xor
push
lock
mov
repnz
inc
inc
sub
incl
and
cli
or
add
push
add
icebp
sub
int3
pop
repz
sub
lret
ss
repnz
fdivl
sub
xchg
fadds
clc
clc
ja
mov
jno
push
mov
sahf
and
and
cmp
xor
adc
das
imull
repnz
dec
xor
jne
outsb
or
or
dec
iret
stos
call
das
jno
cmp
mov
mov
or
jg
mov
cmp
repz
adc
out
sbb
orl
and
jle
push
in
inc
sbb
and
and
fsts
jnp
clc
sbb
add
inc
push
jp
xor
mov
and
pop
addr16
fstps
or
pop
mov
popl
shl
ja
pushf
enter
repz
in
and
cwtl
arpl
dec
scas
arpl
in
pop
pop
ret
mov
mov
int
stos
and
push
xor
mov
fcmovnbe
jl
xor
fimull
es
mov
mov
cs
mov
call
aaa
sub
mov
or
bound
in
or
dec
mov
push
push
jge
xchg
pop
sbbb
aam
jbe
cltd
push
popa
cltd
mov
lahf
sub
cmp
sbb
rcll
decl
and
add
xor
pop
xor
cmp
dec
arpl
sub
rcr
sub
pop
push
xchg
push
out
push
xchg
subb
mov
ret
rorb
jne
mov
mov
fucom
mov
fimull
cmp
push
jns
fbld
xor
sbb
jb
pop
shll
rclb
xchg
in
jbe
gs
cmpsb
mov
lods
or
mov
sub
xor
jmp
out
sub
push
add
push
xor
fimuls
add
add
jle
and
sti
repz
inc
cs
cmc
mov
popf
xor
js
lds
or
adc
inc
mov
pushf
push
imul
mov
out
sub
subl
xor
jmp
ret
aad
adc
push
icebp
sarb
jns
fmul
pop
adc
pop
mov
outsl
xchg
mov
fcom
pusha
jge
inc
leave
movsb
fistpll
add
jne
enter
xchg
lea
outsb
icebp
shlb
push
inc
mov
int3
enter
sub
int
aaa
scas
cltd
mov
mov
mov
sbb
sub
sub
ficomps
add
add
cmp
enter
adc
mov
loop
dec
sbb
push
ss
xor
dec
dec
add
mov
xchg
sti
sub
xchg
out
xchg
repz
and
loope
loop
lret
out
jge
imul
rorl
mov
xor
jg
test
jne
aad
shll
cmp
shlb
pop
dec
in
js
push
push
sbb
or
inc
pusha
mov
sub
dec
cmp
shrl
xor
jecxz
push
cld
cmp
push
sahf
icebp
and
test
sub
or
mov
push
lods
jo
inc
enter
adc
es
push
pop
dec
xchg
and
mov
testl
mov
ja
mov
xchg
jns
xchg
xchg
push
mov
add
or
fisttpl
jle
jo
sub
call
push
xchg
lcall
push
sbb
lds
loopne
repnz
mov
xchg
fildll
aas
sarl
test
and
mov
stos
icebp
dec
sbb
inc
sub
aas
xchg
cmc
cmp
fistpl
mov
mov
jp
bswap
movsl
or
lock
das
movsl
cltd
stos
or
fildl
mov
push
xor
mov
mov
jmp
aad
pop
popf
inc
andb
sub
push
les
dec
clc
xor
mov
push
shl
aad
mov
in
subb
fsubrp
add
xchg
xchg
cli
adc
jnp
pop
cld
movsb
cmp
fildl
outsl
add
loope
or
sub
or
sbb
imul
cmp
mov
mov
mov
mov
cmpsl
fcmovb
jge
and
pop
pop
inc
mov
out
xchg
pusha
adcb
inc
and
mov
addr16
dec
insl
xor
lds
shll
call
push
fidivrs
dec
xor
inc
rcrl
xor
repz
ret
iret
xlat
mov
call
aam
mov
lahf
in
lods
testb
sbb
outsb
dec
adc
cli
jbe
add
fadds
inc
nop
mov
into
inc
roll
fidivrl
jae
sbb
lods
in
jae
test
leave
mov
mov
mov
dec
dec
les
rcrb
lret
cmpsb
xchg
sbbl
out
jg
sub
mov
and
dec
inc
mov
outsl
pop
aad
test
das
pop
sub
push
xchg
cmp
push
lahf
dec
pop
jbe
cs
iret
in
in
xchg
out
leave
ljmp
xchg
xor
mov
popf
xchg
push
cmp
sub
pop
jnp
mov
inc
lock
sub
push
iret
outsl
cwtl
cwtl
ss
add
clc
lds
jmp
push
mov
pop
and
cli
fsubrl
mov
scas
push
in
js
inc
sbb
jmp
fdivs
test
and
or
nop
adc
mov
shl
popf
sbb
pop
dec
subl
cmpsb
or
jp
seto
xchg
xchg
ljmp
mov
lea
aaa
mov
dec
lret
or
mov
ret
cmc
mov
xor
mov
daa
rcr
dec
and
xchg
xor
jge
adc
ja
hlt
mov
adc
pop
pop
push
movsb
mov
repnz
out
popa
inc
icebp
aad
add
and
fisttpll
popa
cmp
repnz
and
leave
push
cs
cmp
and
jne
aas
dec
dec
push
je
mov
stos
mov
sti
aas
adc
jge
mov
into
mov
mov
jbe
into
xor
mov
xor
insl
lahf
xor
add
repnz
mov
add
movsl
and
popf
push
inc
bound
mov
xchg
and
xchg
popf
lret
std
mov
push
addr16
ja
xchg
js
pop
ljmp
jbe
inc
dec
cmp
push
movsl
sbb
out
adc
fcomp
push
pop
pop
pop
mov
add
push
sub
es
pushf
or
test
outsl
jg
hlt
dec
outsl
push
jne
and
jne
or
in
dec
push
loop
out
push
out
pop
sub
cmp
repnz
xchg
daa
add
je
mov
fwait
and
lock
andl
mov
pop
jbe
cmp
pushf
sub
es
push
jnp
les
xor
and
xchg
jg
aam
out
mov
mov
add
and
xchg
popf
jp
mov
ss
or
in
ret
and
hlt
fisubl
sbb
jp
cmp
ret
cli
xor
mov
aam
jmp
scas
sbb
out
and
mov
std
std
stos
pop
inc
xchg
lret
fists
pushf
sbb
sahf
sub
pop
lcall
xlat
pop
sahf
sahf
stc
xchg
mov
sub
outsl
outsl
mov
inc
adc
or
fdivrs
push
sbb
fidivrl
hlt
sbb
into
hlt
push
mov
xchg
insb
orb
mov
dec
xor
mov
fwait
mov
adc
pop
stos
adc
es
fidivs
div
adc
out
inc
clc
out
dec
push
mov
mov
mov
pop
leave
sbb
inc
stc
outsb
aaa
cmp
loop
cmp
call
mov
dec
push
lret
ds
xchg
mov
loop
mov
mov
jno
dec
and
arpl
cmp
mov
in
push
out
fiaddl
insl
or
pushf
inc
and
xchg
cmpsb
sub
scas
mov
and
push
sub
inc
enter
lods
ja
push
cmpsl
ret
decl
sub
jp
pop
or
xorl
adc
rcrb
dec
arpl
lret
push
test
inc
int
inc
xor
push
popf
cli
xor
pop
aad
lea
or
sbb
loop
sub
dec
out
and
pop
gs
push
int
mov
fst
adc
mov
jp
stc
idivl
mov
mov
pop
dec
pop
jge
lret
or
subb
jecxz
add
inc
add
inc
scas
loop
sub
fists
mov
sbb
repz
jno
fwait
inc
cvtps2pd
enter
pop
ljmp
jecxz
es
test
xor
or
dec
fucomi
jbe
bound
pop
fs
pop
aaa
or
or
negl
aam
push
jg
jbe
pusha
fs
push
test
cmp
mov
mov
addr16
lods
mov
adcl
dec
adc
les
hlt
repz
cld
inc
push
adc
adc
aad
enter
ds
notb
ret
cmpsb
leave
fidivs
xchg
lret
inc
leave
pop
addr16
or
punpckldq
ud0
pop
add
push
dec
cmp
push
pop
sahf
pop
or
cli
pop
adc
or
stc
dec
fs
inc
dec
lock
and
push
push
call
das
dec
push
jb
inc
jb
repz
popf
jg
adc
sub
iret
testl
out
jae
cmpsl
mov
adc
dec
lds
xchg
repnz
cmpsl
into
xchg
pop
add
leave
mov
stos
lea
rcll
jo
mov
xchg
in
inc
orb
stos
lock
shl
loope
divb
repz
subb
mov
sahf
or
loop
mov
pushf
int3
add
inc
mov
xor
cmpsb
cvttps2pi
pop
faddl
jo
mov
les
cmc
rcrb
arpl
mov
mov
cmp
push
icebp
mov
pop
mov
js
xor
rorl
sub
push
mov
loope
jle
fadds
int3
push
pop
jno
cmp
add
ds
fsubl
fstpt
sub
add
je
fs
dec
inc
pop
mov
movsb
mov
hlt
ljmp
xor
and
adc
add
je
fs
dec
inc
pop
mov
movsb
mov
hlt
ljmp
xor
and
adc
add
je
gs
push
dec
inc
pop
mov
movsb
mov
hlt
ljmp
xor
and
adc
add
je
fs
dec
les
stos
pop
adc
mov
sub
cmp
das
mov
lcall
lfs
mov
mov
cmp
dec
lcall
iret
push
jp
mov
lcall
jg
dec
ljmp
sti
sub
pop
iret
push
jp
mov
lcall
jg
dec
ljmp
cld
pop
mov
xchg
pushf
orl
aas
out
jl
insl
push
das
or
sbb
jmp
gs
inc
sub
insl
fs
out
addb
mov
addb
inc
xor
and
pop
mov
jp
sub
cmp
mov
ror
push
xchg
lahf
mov
pop
xchg
xor
mov
scas
lret
jo
cmc
cli
dec
dec
jbe
stos
xchg
pop
jnp
jne
fwait
jns
sahf
scas
outsl
lret
outsl
lret
aaa
stos
scas
cmp
lds
sbb
pop
rclb
dec
data16
inc
aam
je
dec
adc
inc
sbb
cmp
das
imul
rorb
pop
bound
dec
xchg
add
jg
cmc
aad
ja
fidivrl
shll
mov
jno
aas
lcall
jg
dec
ljmp
out
dec
lcall
push
cmp
out
dec
push
jp
add
push
mov
mov
inc
repz
mov
xchg
and
lret
dec
rcrb
jp
sub
pop
cli
lret
jbe
jl
push
mov
fists
ficompl
data16
into
outsl
cmpsb
jg
dec
ljmp
out
dec
lcall
push
jp
mov
lcall
jg
dec
ljmp
out
dec
lcall
push
jp
mov
imul
inc
test
adc
ficomps
fs
or
fwait
inc
sbb
jecxz
jno
lods
das
jp
inc
push
pop
sbb
dec
fwait
sub
in
out
jle
test
pop
out
arpl
out
out
jbe
aas
in
orl
das
inc
add
and
sub
cmp
repnz
test
int3
mov
jbe
ss
mov
add
or
dec
sti
sarb
sbb
pop
mov
ret
data16
push
push
mov
jle
out
xchg
jmp
sbb
pop
lea
pusha
sub
in
pop
rol
jnp
stc
mov
dec
into
push
jle
xchg
dec
arpl
mov
popa
jno
or
das
xchg
xchg
cmpsb
outsb
or
xor
push
mov
insb
push
adc
nop
adc
iret
or
clc
icebp
lock
les
mov
fildl
mov
jg
xchg
push
jns
adc
gs
jg
dec
pop
mov
enter
jmp
test
in
mov
mov
ja
movups
add
inc
mov
xchg
cmp
mov
jnp
aam
iret
fadd
insb
out
pushf
out
insb
dec
fwait
fwait
push
out
dec
dec
les
lret
insl
jns
adc
mov
sub
test
aaa
ljmp
loopne
sarl
call
xchg
push
iret
pop
cmpb
leave
jne
cmpl
mov
outsb
mov
popa
or
movsw
out
test
push
test
dec
mov
push
lcall
mull
insl
jecxz
mov
mov
xchg
or
jecxz
imul
mov
pop
xor
xchg
out
cmove
movsb
out
adc
adc
cld
sbb
push
dec
adc
sub
push
mov
jmp
test
xchg
xchg
std
test
pop
lods
hlt
xchg
jle
pop
loop
js
pop
incl
lods
lcall
mov
ljmp
adc
pop
lods
jae
pop
stos
nop
inc
dec
inc
clc
dec
adc
aaa
push
ljmp
or
cvtdq2ps
mov
add
lret
dec
push
insb
inc
push
std
jnp
inc
fdivs
xor
mov
les
sahf
jl
jg
mov
mov
push
xchg
cmp
dec
add
orl
ret
or
add
push
add
jno
inc
sub
cs
inc
clc
xchg
rcrb
push
testb
mov
mov
inc
lock
ja
fcomp
mov
nop
push
mov
cltd
xor
out
lcall
mov
add
pop
inc
jmp
lods
push
push
inc
add
cmp
adc
adc
fs
dec
scas
rol
pop
mov
cmpsl
mov
test
xchg
add
push
aas
lcall
adcb
lods
ficompl
or
insl
ret
bound
inc
pop
cwtl
cmp
ret
jmp
bound
lea
lcall
out
and
in
sub
jmp
mov
jae
in
lods
out
jnp
and
add
mov
mov
push
jmp
push
add
leave
xchg
mov
dec
lret
or
push
aad
dec
out
pop
push
mov
pop
ss
sub
adc
mov
movntq
out
sahf
inc
sbb
push
rcrb
sub
cmpsb
xchg
inc
mov
test
clc
jae
inc
int
call
mulb
cmp
adc
lds
sub
lods
xor
cmp
dec
sbb
in
stos
aam
sub
cli
xchg
fcoml
cmp
aaa
mov
adcl
inc
rolb
icebp
stos
aaa
mov
inc
inc
cmpsl
mov
fstpt
sbb
mov
in
ja
stos
mov
adc
pop
dec
out
dec
pop
clc
loop
add
jle
out
and
fwait
stos
jns
adc
xchg
xchg
andb
mov
int
and
sub
jbe
xor
inc
fsts
adc
inc
jnp
inc
mov
ret
in
mov
cld
mov
dec
cmc
aas
outsl
dec
cmpsl
in
imulb
push
fdivrs
push
dec
cmp
lret
pop
data16
mov
sbb
mov
incl
cli
jae
mov
fdivrs
jb
mov
clc
xchg
mov
and
xor
rorl
mov
inc
sub
push
loop
test
inc
cltd
in
sbb
and
test
sbb
imulb
dec
loope
andb
outsl
fmul
ss
inc
cld
sbb
lds
pop
jno
cld
cmp
adc
lods
or
je
data16
rcrb
subl
jne
sbb
push
sbb
dec
add
rcrb
rcrb
sahf
mov
push
xchg
add
cmp
lahf
loope
lods
cli
fs
ficompl
dec
and
jae
lock
jmp
and
aaa
or
push
cmp
jnp
mov
add
ljmp
imul
nop
adc
adc
leavew
dec
in
jno
loop
into
cmp
gs
cmp
outsb
pop
fsubrs
ja
jg
add
sub
jae
cmp
insb
or
addr16
sbb
dec
fisubs
arpl
jp
xor
imul
imul
sbb
popf
fidivrs
adc
mov
pop
adc
out
scas
mov
push
adc
adc
adc
insl
mov
mov
lods
idivl
sub
inc
cmpb
dec
sub
pop
or
push
pop
adc
in
daa
mov
add
sbb
jbe
adc
mov
and
insl
std
ror
int3
jne
pop
jmp
mov
push
test
sub
push
mov
rcr
xchg
xor
add
and
mov
or
ret
add
test
std
adc
fistpll
inc
add
cltd
mov
mov
dec
cmp
stc
sbb
dec
xchg
clc
mov
fsubrs
lret
addr16
cld
adc
dec
pop
in
mov
mov
xor
movsb
dec
sbb
int3
xchg
addl
push
in
movsl
jge
adc
fidivrs
mov
sbb
xchg
repnz
add
add
mov
push
in
cmp
cmp
scas
cmp
call
outsb
or
jg
stos
lahf
hlt
and
push
mov
push
jge
imul
lret
pop
inc
lcall
inc
mov
inc
push
lods
mov
fmul
cmpsb
fs
lods
jbe
je
push
clc
les
pop
aam
cmpsb
data16
jmp
dec
addr16
jne
fwait
jl
bound
jb
add
lods
mov
pop
fdiv
xlat
add
dec
xchg
das
lret
jmp
cld
pop
inc
data16
lret
mov
lahf
lret
stc
pusha
pusha
jl
scas
fld
scas
mov
mov
fildll
idivl
inc
rclb
lock
test
into
push
sbb
pop
movsb
push
out
jb
push
mov
out
dec
jp
stc
je
sbb
cmp
lods
enter
test
cmpsl
fisttpl
mov
add
dec
and
push
or
push
hlt
add
jmp
movsl
inc
xor
rol
pop
mov
notl
nop
mov
dec
lret
je
in
outsl
int3
sarb
es
imul
mov
cltd
test
clc
jne
jo
rcr
xor
mov
pop
cmp
jb
out
pusha
xor
cld
out
fadds
and
pushf
rolb
mov
popa
lret
fsts
adc
stc
mov
push
aaa
adc
mov
out
add
jne
stos
out
rcll
dec
cmp
pop
fildll
iret
jecxz
inc
xor
int
fstl
xchg
mov
add
adc
aaa
or
mov
rorb
loope
scas
dec
jae
xchg
pop
mov
fstpl
xchg
xchg
incb
sti
aad
in
movsb
xchg
adc
dec
movsb
mov
inc
fwait
pusha
pop
pop
add
pop
mov
aam
sahf
cmpl
jae
inc
add
add
nop
fadd
push
out
cs
popf
xor
and
push
in
cli
mov
fstpt
sbb
aad
fs
push
push
adc
ficoms
sub
xchg
jmp
stos
sahf
mov
arpl
stos
mov
fwait
stos
out
mov
lcall
mulb
imulb
add
jl
outsl
pushf
fxch
rcl
or
sti
out
aas
call
call
pushf
xlat
adc
mov
dec
pop
xor
and
mov
aad
dec
nop
fstps
xchg
aam
push
int
test
cltd
push
movsl
test
mov
stc
sub
mov
movq
aaa
push
jg
jle
adc
inc
sub
popa
inc
test
popf
repnz
add
jge
jne
mov
xlat
fcmovu
xchg
in
imull
popf
imul
push
sbb
mov
incl
sbb
test
mov
mov
cld
jecxz
fdivl
push
out
mov
and
ret
and
xchg
ljmp
jecxz
jae
push
dec
inc
mov
push
movsl
push
or
lahf
data16
pop
dec
loop
mov
pop
xchg
movl
pop
fcoms
pop
mov
in
insb
inc
popa
into
fldenv
push
jnp
inc
mov
xchg
jne
test
push
jae
xor
stc
push
xor
int
mov
mov
lds
mov
nop
inc
addr16
jbe
in
ja
mov
mov
sbb
sub
adc
inc
adc
rol
mov
push
cmpsl
and
push
cmpsl
or
pop
fcoms
push
inc
sbb
ret
ret
xlat
subb
imulb
add
sbb
and
xchg
lret
pushf
mov
push
add
inc
aaa
jge
das
cmpl
ja
xchg
aad
gs
clc
mov
adc
ss
mov
mov
orb
ja
scas
mov
pop
adc
push
cwtl
and
outsl
popa
mov
mov
mov
mov
mov
aaa
xchg
jl
daa
jns
daa
mov
add
popf
sar
sbb
ja
and
lret
outsb
mov
mov
out
leave
xchg
jb
or
inc
loope
fs
adc
mov
aas
in
mov
add
int
add
iret
push
loop
mov
mov
mov
in
movl
loopne
inc
jne
shrl
hlt
test
push
or
jbe
iret
out
mov
xchg
fisttps
in
cmp
repz
aaa
fnstcw
nop
jl
xor
in
push
sbb
push
xchg
bound
ja
jnp
shlb
imul
cli
sarl
addl
ja
int3
cmp
leave
popf
stc
xlat
mov
jle,pt
bound
mov
sbb
push
dec
pop
and
dec
lret
cmp
add
inc
int
test
inc
push
jl
push
and
pop
and
mov
dec
iret
fsubp
sbb
rorb
push
xchg
mov
insl
add
pop
ss
jl
jnp
add
mov
adc
test
adc
cli
mov
jno
jne
inc
push
jno
addr16
xor
mov
xchg
popf
push
nop
dec
jecxz
sub
insl
push
je
das
cmp
or
inc
cmp
sbb
js
in
mov
sub
out
repz
in
xor
popa
pushf
ss
xorb
rcrl
mov
sti
cld
lods
jge
stos
sbb
test
jmp
mov
fcmovu
add
xor
dec
pop
xchg
daa
jno
xor
out
cmp
push
dec
mov
insb
std
out
test
sub
pop
mov
mov
push
fwait
int3
inc
mov
inc
xchg
xchg
pop
cmc
imul
mov
lods
js
iret
ljmp
test
push
rorl
push
mov
sti
idivl
mov
movsl
ret
jl
sbb
test
dec
mov
push
nop
adc
fisttps
cmc
imul
dec
fstpt
cmp
sahf
xor
loop
xchg
sbb
out
push
icebp
fldt
mov
sbb
decb
je
pusha
push
stc
repnz
jecxz
or
movsl
xlat
add
daa
in
mov
sub
inc
inc
lock
mov
mov
mov
xchg
mull
insb
setl
jo
push
jne
or
in
or
xchg
negl
dec
clc
and
jge
add
inc
sub
pusha
fstpt
test
mov
orb
xor
and
cmc
fnsave
jae
sar
les
fsubs
mov
mov
data16
jb
mov
and
mov
push
hlt
inc
aad
jmp
test
dec
bound
movsb
imul
in
jg
and
lahf
fwait
imul
int3
sbb
jns
inc
imul
dec
hlt
xchg
adc
je
or
xor
shrl
mull
fs
addr16
jnp
movsb
dec
adc
and
and
addr16
cmp
lds
inc
jp
mov
xchg
stc
dec
jl
mov
and
push
sarl
xchg
imul
xor
gs
cmp
scas
not
divl
mov
xor
cld
jae
cmp
aaa
pop
call
cmp
pop
inc
in
cmp
loopne
les
mov
jp
stos
sub
mov
test
pop
cmpsl
rcrl
pop
and
mov
push
mov
push
cmp
push
leave
addl
je
mov
insb
add
popa
mov
iret
push
and
dec
push
negb
pop
adc
mov
ljmp
in
pop
push
dec
push
jl
add
sub
pop
shlb
jo
xchg
push
mov
cmp
out
pop
adc
xorl
out
out
bound
filds
xchg
into
mov
negl
jb
lret
imul
xlat
xchg
pop
out
or
cmp
mov
pop
dec
pop
test
sub
idivl
cmpsb
loop
or
repz
cli
ja
mov
add
pop
dec
fisttps
and
mov
aad
xchg
jg
mov
pop
insb
and
jle
or
jo
fs
pop
ret
push
and
loop
mov
lret
cmp
sbb
and
push
inc
cmp
imull
dec
ljmp
pop
jo
test
xchg
mov
lahf
out
xor
pop
push
adc
sub
jg
push
cmp
jecxz
mov
push
repnz
subl
test
mov
sbb
xchg
mov
adc
loopne
mov
xor
mov
in
insl
in
jecxz
jge
dec
pop
stos
out
sbb
jns
js
adc
mov
lret
add
jl
or
lahf
mov
fwait
mov
call
jle
and
push
sbb
fsubrs
sti
popa
inc
cmpsb
cwtl
adc
lcall
push
pop
je
xor
cs
fs
incb
in
and
std
pop
mov
sub
cs
arpl
mov
jg
push
mov
nop
jns
xchg
aad
orb
repz
sub
xlat
leave
cmp
add
and
shld
cld
scas
jg
mov
jne
mov
mov
in
sbbl
mov
push
loopne
aas
xor
pusha
lahf
jb
psubq
sbbb
jns
fistl
je
cmp
repz
push
jnp
and
jbe
xchg
mov
fsubrl
fdivrl
xchg
jne
cmp
addr16
and
loop
push
mov
jbe
xchg
mov
mov
lods
push
pop
jmp
inc
jne
xchg
pop
ds
dec
jno
arpl
cmp
push
stos
push
lds
pop
pusha
pop
aad
int3
scas
push
cmpsl
cmp
jo
adc
outsl
adc
in
or
inc
cs
fbstp
pop
dec
subb
sub
bound
movb
inc
test
loopne
pop
cmp
pop
aad
sub
push
mov
outsl
inc
mov
adc
into
test
jbe
push
cmp
lcall
lds
sub
pop
fmuls
sub
mov
in
inc
mov
dec
mov
fwait
pop
fnsave
cmpsb
jge
xchg
shlb
test
loope
push
movsl
or
repz
mov
push
dec
sbb
arpl
bswap
sub
out
cltd
int
adc
push
jl
cmp
ror
cmp
mov
aas
or
pop
andl
jge
rcrb
lea
add
int3
xchg
clc
push
rcrl
xchg
mov
mov
addr16
call
xchg
pop
mov
adcl
mov
jp
sarb
add
enter
in
xor
xor
inc
ljmp
cli
push
xlat
imul
jo
js
popf
mov
data16
sahf
addr16
xchg
imul
xchg
stos
mov
sbb
std
mov
rorb
inc
or
ljmp
or
add
fstps
mov
enter
adc
nop
pop
pusha
repnz
xor
add
cmp
and
clc
mov
cli
sbb
mull
loope
cmp
cld
pop
jbe
jne
xchg
insb
cmp
ss
push
imul
into
cli
mov
push
int3
xchg
inc
mov
xchg
bound
movsb
mov
cmp
mov
add
inc
loop
outsl
outsb
sbb
popa
mov
xor
movsl
and
mov
mov
les
out
push
mov
lret
xor
into
stos
cmp
xchg
mov
mov
cmp
jnp
xchg
and
movsb
es
jg
inc
andb
popa
mov
push
fwait
bound
loope
incl
jnp
dec
icebp
mov
loopne
out
mov
jmp
adc
inc
nop
push
cld
sbb
sub
cltd
pop
rclb
mov
pusha
pushf
adc
adc
addl
dec
into
xlat
hlt
adc
cltd
popf
adc
hlt
cmpl
repz
movsb
dec
addb
pop
mov
stos
addl
mov
bound
xchg
scas
nop
roll
call
adc
cs
inc
jns
inc
xor
test
xlat
outsb
jmp
pop
or
adc
iret
cs
pop
xchg
rcl
repz
push
add
in
dec
repz
es
std
mov
push
jl
dec
dec
push
cmpsb
mov
ljmp
jne
mov
sti
jo
add
dec
sbb
xor
xor
xor
sbb
les
cli
cvtpi2ps
sub
sub
push
fldenv
fwait
push
pop
mov
divl
xor
or
cmp
out
or
bndldx
xor
hlt
xor
xor
or
jecxz
cmp
loopne
cmp
rorb
lods
aad
ret
cmp
loope
xor
sbbl
dec
std
fwait
bound
js
sbb
xor
sub
mov
and
int
int
test
negl
je
notl
mov
mov
imul
shll
inc
dec
sub
enter
lods
cli
push
mov
pop
and
inc
jge
push
mov
push
sbb
addr16
shrl
xchg
hlt
sub
jge,pt
ja
and
jecxz
mov
outsb
imul
xlat
fidivrs
xchg
shrl
add
out
loop
xor
fildll
xchg
sbb
mov
sub
dec
ljmp
inc
movsb
mov
inc
aas
popa
xor
cmp
aaa
mov
aas
mov
jnp
mov
test
xchg
imul
lea
inc
fcomps
jl
int
sbb
ret
xchg
movsb
mov
dec
pop
mov
sub
and
cmp
ret
ja
mov
cmpb
cli
std
sub
mov
in
xchg
and
arpl
push
jnp
sub
mov
ret
into
xchg
pop
sbb
mov
mov
pusha
xchg
add
mov
popa
pushf
ja
cmp
popf
loope
das
pop
inc
add
cmp
add
dec
sub
inc
add
and
sub
inc
mov
add
inc
jl
add
mov
rclb
push
outsl
xchg
adc
jmp
test
mov
mov
push
or
rorl
loop
aaa
shl
push
cmp
mov
mov
lock
push
aaa
mov
lods
xor
mov
push
shlb
push
ja
daa
out
data16
out
or
scas
mov
or
jns
aas
add
inc
add
sti
nop
std
je
shlb
dec
cmpsb
mov
push
push
mov
jecxz
and
pop
mov
call
or
and
shr
pop
mov
es
iret
fcmovbe
mov
pop
mov
dec
ljmp
out
dec
lcall
push
jp
mov
lcall
jg
dec
ljmp
out
dec
lcall
push
jp
mov
lcall
jg
dec
jmp
cli
scas
or
cmp
dec
lcall
push
jp
mov
lcall
jg
dec
push
add
and
ret
xor
in
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
outsb
mov
pop
dec
push
dec
jns
insb
xor
mov
call
mov
mov
and
js
or
dec
in
enter
call
mov
mov
ffreep
test
xor
and
sbb
mov
icebp
sarl
sbb
cmp
loopne
lret
into
bound
je
adc
add
fadd
add
mov
jp
in
mov
push
mov
pop
lea
cmp
jb
push
in
jl
add
inc
std
pop
fsubs
jne
test
cwtl
inc
push
adc
rcl
cmp
in
aaa
std
mov
and
mov
jmp
pop
jo
insl
cmp
std
shrl
cmp
fwait
jle
int
cwtl
clc
call
mov
loopne
dec
jns
inc
rorb
fwait
repnz
stc
mov
pop
sub
and
sahf
cmp
dec
sub
leave
or
or
dec
addr16
mov
movsb
mov
mov
sbb
pop
cmp
and
ja
inc
sbb
popf
test
mov
in
in
clc
fldenv
or
cmp
inc
addr16
sub
inc
dec
push
mov
movsl
lahf
aam
rcl
in
add
adc
sub
push
sbb
cmp
cmp
enter
call
mov
mov
dec
push
cmp
cmp
enter
call
mov
mov
lret
popf
push
loop
aad
arpl
jae
or
mov
mov
push
xor
pop
mov
jmp
push
cmpsb
dec
push
dec
addr16
hlt
aaa
pop
sbb
jnp
cmp
adc
mov
add
int3
push
lds
clc
mov
mov
out
cmp
fwait
jge
fwait
mov
loopne
jae
ret
and
dec
aaa
dec
mov
pop
adc
mov
or
loop
pop
add
cwtl
arpl
cmp
and
ret
and
outsl
and
jl
shll
out
push
out
mov
sahf
push
mov
xchg
test
cs
call
ja
mov
aam
jne
insb
jb
data16
sbb
out
mov
mov
sub
movl
pop
cmp
iret
and
push
cmpsb
test
mov
icebp
cmpsl
mov
push
xchg
pusha
scas
pop
pushf
in
fnstsw
mov
sub
hlt
xlat
cmp
xor
fdivrl
add
jbe
add
les
lcall
shll
xchg
stos
outsl
pop
fcomps
xor
jecxz
pushf
sub
aad
pop
out
jno
lahf
mov
push
andl
enter
inc
ret
fcomi
jo
inc
loope
out
int
cltd
lcall
into
pop
sub
adc
test
mov
subb
cmp
mov
inc
jbe
or
or
push
add
bound
cmpsb
lret
cli
out
cmp
sub
pusha
or
push
ja
bound
movsb
add
jge
or
testb
cmc
cwtl
inc
xchg
jo
sub
adc
cmpsl
inc
shl
jb
enter
mov
xchg
insl
ss
mov
nop
jmp
mov
mov
sub
ss
iret
fidivrs
jp
fsubrs
mov
test
mov
outsb
sub
push
movsl
out
xchg
xchg
cmpsb
pop
adc
mov
fimuls
xor
incb
push
frstor
cmp
addr16
insl
sbb
arpl
scas
cmpsl
sarl
inc
dec
push
sub
mov
ret
xchg
sti
mov
movsl
cmc
icebp
inc
and
and
cli
or
and
ds
or
push
fldenv
ficoms
or
inc
inc
into
pop
lds
sbb
xor
mov
shlb
pop
int
lods
xor
jp
cmp
adc
inc
mov
int
imul
jecxz
iret
pop
jo
adc
pop
hlt
fdivrl
and
cltd
mov
push
sub
loop
push
repnz
cmp
dec
dec
mov
pop
repz
mov
xchg
imul
js
sahf
scas
adc
jno
mov
xchg
mov
aam
xor
rcl
in
xorl
nop
into
lea
adc
push
push
push
cmpsl
insl
jbe
push
jb
pop
lcall
test
icebp
sbb
inc
shrl
xor
outsl
dec
outsb
cmp
dec
ds
dec
push
rorb
dec
jne
and
in
fsubrp
sarl
vpsllw
mov
loopne
andl
aad
fs
fcomps
dec
in
jne
xchg
sbb
fisubs
adc
jge
imul
loop
mov
paddb
ficompl
scas
jge
int
add
jb
pusha
push
cmp
aad
sub
adc
xor
xchg
sub
mov
xor
jb
cli
jmp
mov
stc
test
push
pop
loope
aaa
iret
stc
ja
aas
lahf
cli
sbb
enter
inc
movsb
les
sub
fsubs
sbb
fisubs
lret
push
sbb
mov
or
out
icebp
sub
nop
pop
mov
mov
adc
or
mov
or
mov
mov
mulb
lods
cmp
dec
jle
cld
xchg
cmpsl
in
adc
or
dec
or
aad
push
test
jo
mov
test
or
xchg
xlat
push
inc
repnz
inc
sub
stos
dec
in
jo
sbb
mov
mov
lcall
mov
fs
mov
cli
xor
setne
cmpsb
iret
divb
mov
push
mov
push
mull
hlt
xor
lret
ds
mov
sahf
fs
pushf
mov
xchg
xchg
out
scas
mov
imul
jo
leave
push
pop
mov
in
mov
in
mov
insb
shll
cld
xor
int
shll
out
lret
cmc
or
inc
mov
shlb
or
btsl
sub
subl
lods
into
sub
jge
push
repz
mov
adc
mov
mov
imull
loope
mov
outsl
mov
aaa
clc
pop
mov
mov
lods
dec
icebp
stos
inc
inc
loopne
out
dec
cld
fstpl
xchg
xchg
rcl
pop
inc
mov
xchg
push
and
imul
jbe
adc
outsb
add
mov
cmp
cwtl
push
push
iret
lret
jbe
xlat
add
enter
gs
lahf
in
ror
jb
in
jno
mov
cltd
leave
pop
in
and
imul
mov
dec
out
fs
inc
dec
push
xchg
mov
ret
sahf
cmc
add
mov
or
jecxz
fcmovnu
dec
movsb
lock
jns
es
movsl
aas
mov
push
xchg
loopne
ljmp
mov
mov
and
add
or
stc
mov
loop
dec
bound
mov
rorb
jo
pop
sbb
xchg
movsl
bnd
jecxz
pop
jmp
bound
mov
das
xlat
mov
push
mov
add
push
stos
test
push
pop
inc
loop
ljmp
xchg
jmp
cmp
subb
dec
cmp
lods
lcall
dec
xchg
push
outsb
daa
call
mov
inc
movsb
loop
lcall
mov
mov
cli
fmul
mov
and
les
sbb
leave
sub
push
jbe
jbe
lods
mov
scas
mov
lret
cmpb
inc
xor
cmpsl
leave
sbb
js
lea
lret
test
cmp
jb
adc
mov
add
adc
or
test
cmp
aam
inc
fwait
sbb
jo
sub
scas
add
frstor
jle
pop
pop
inc
in
cmp
mov
movsb
sub
dec
hlt
add
into
sub
push
and
cmp
pop
mov
scas
jnp
mov
mov
inc
push
rcrl
imul
or
mov
or
loopne
mov
mov
pop
call
dec
jl
push
cltd
jae
movsl
mov
pop
sbb
in
and
add
and
fwait
jge
lods
arpl
xchg
sahf
push
fwait
je
inc
jns
rcll
or
sbb
loop
inc
and
pop
jb
pusha
incb
cmp
xor
mov
ret
fildll
and
add
sub
mov
sti
outsl
mov
paddsw
dec
lret
xchg
popf
pop
jo
js
inc
hlt
sub
or
xchg
mov
orb
pop
cmp
imul
pop
aaa
jae
gs
sbb
iret
mov
popf
jne
hlt
cmp
and
pushf
pop
push
add
add
add
push
adcl
repnz
adc
cs
test
test
or
shrb
lret
adc
cmp
cmp
fiadds
lods
and
aad
mov
lock
jnp
ljmp
out
test
fidivrl
or
cmp
popl
ret
or
cs
push
mov
dec
jae
jb
add
cmpl
dec
pop
clc
insb
push
push
ret
loope
mov
scas
or
jns
cmp
dec
pop
jg
dec
out
call
in
cmp
pop
or
xchg
mov
hlt
xchg
pop
stc
jae
adc
adc
push
data16
sub
arpl
dec
push
sub
jno
mov
adc
mov
pop
xchg
adc
sbb
pop
inc
sub
fmull
sbb
ficomps
fs
fs
xchg
mov
inc
mov
jae
adcb
imulb
or
popf
data16
jle
push
cwtl
mov
outsb
cmpsb
pop
jae
test
cmp
mov
rolb
cmp
mov
pop
in
jne
xor
aad
sahf
sbb
mov
jne
inc
loopne
ret
shlb
mov
scas
or
aam
adc
mov
jne
insl
cmpsl
dec
fsubrl
ret
cmp
or
ja
add
dec
jg
bound
and
add
and
sbb
dec
mov
mov
mov
jbe
push
aad
xor
push
push
dec
inc
lret
xchg
lret
enter
cmpsl
or
insl
xor
sar
nop
push
dec
in
push
enter
ret
addr16
ret
and
jb
aam
das
test
or
cs
dec
repz
movsl
dec
mov
ljmp
in
sbb
and
sbb
mov
add
mov
jmp
in
push
pop
test
stos
out
pushl
adc
push
cwtl
sbb
fidivl
or
icebp
aas
jecxz
outsl
mov
dec
aad
loope
mov
jl
imul
mov
push
mov
repz
test
inc
mov
sub
jmp
ds
and
enter
divb
popa
mov
test
sbb
xor
push
and
and
dec
scas
fistl
repnz
mov
cmp
xor
rcrb
loop
lahf
aad
jp
in
out
sub
pop
mov
negb
mov
mov
dec
fisubrs
pop
je
in
les
jne
rolb
dec
leave
jnp
fwait
lsl
jb
ljmp
shr
pop
sub
adc
orl
scas
sub
jae
mov
push
jo
mov
push
imulb
xchg
cmpsb
mov
xchg
insb
shrl
addr16
repnz
shrb
movsb
aad
mov
ffreep
jecxz
push
daa
sub
lea
fwait
or
movsl
popf
dec
adc
aas
jnp
ss
arpl
sub
mov
dec
sbb
jno
ret
dec
pop
test
nop
lds
int3
stos
movsb
repnz
or
decl
xchg
xchg
gs
xorb
and
out
popf
nop
pop
outsb
mov
ds
std
pop
sub
lret
shll
push
xchg
inc
cmp
les
aam
jge
push
sub
dec
push
sbb
mov
rcrb
cmp
lahf
das
idivb
mov
xor
outsb
mov
gs
cmp
jb
adc
testl
mov
aad
jb,pt
jp
ljmp
jle
push
cs
fsubl
xor
xorl
xchg
xor
daa
gs
dec
sub
outsb
inc
cmp
jo
cmc
add
cmpl
and
pop
shrb
mov
scas
inc
add
jp
cltd
loope
lods
lds
push
ja
cli
jbe
lcall
leave
or
and
push
pop
stos
roll
fwait
aaa
mov
cltd
and
sub
stos
inc
push
ss
rclb
mov
gs
add
adc
lret
sub
fwait
and
lcall
pop
xor
repz
insl
mov
cwtl
mov
leave
jge
in
aam
mov
lds
mov
mov
jae
icebp
add
mov
test
dec
or
add
cld
mov
xlat
js
imul
pop
cwtl
paddsw
push
mov
cmp
dec
inc
mov
xor
jb
into
movsl
adc
ret
mov
das
pop
sub
movsb
inc
mov
cmp
test
repz
cltd
fisubrl
test
daa
enter
es
mov
inc
and
loop
fisubs
cmpxchg
jb
in
dec
add
lea
rcrl
pop
add
sbb
mov
mov
sbb
mov
loopne
js
mov
adc
daa
mov
and
push
lahf
pushf
stc
sbb
mov
add
data16
loopw
mov
xor
lds
lock
mov
loop
gs
cs
and
mov
cltd
loope
push
fdivl
jmp
mov
leave
inc
mov
pop
jle
loopne
outsb
push
mov
jge
shll
add
mov
nop
sub
roll
insb
movsb
pop
sarl
fs
sub
cmpsl
ret
sbb
lret
inc
dec
add
adcb
add
aad
outsl
jp
lret
outsb
xchg
push
mov
xor
cwtl
xlat
or
int
bound
fs
xchg
clc
mov
dec
loope
push
cltd
sub
shr
sbb
sbb
and
add
xchg
pusha
out
and
outsl
jge
sbb
dec
cmpsb
repz
jae
cmpsl
jno
lcall
jb
push
jmp
cmc
test
and
add
enter
xchg
stos
xchg
sbb
xchg
mov
dec
into
fcoml
gs
pop
sahf
fisttps
cwtl
ja
mov
or
xchg
sbb
sbb
sbb
mov
popf
or
stc
sti
xchg
push
push
sub
out
push
mov
xchg
loop
or
mov
loop
cmp
dec
push
mov
fsubrs
mov
sbb
stc
jg
movsb
sahf
mov
or
data16
cmpsl
push
push
movsb
shll
and
sbb
mov
pop
xor
data16
sbb
or
push
adc
xor
daa
fstps
test
sahf
idiv
test
jb
mov
inc
push
pop
push
sbb
out
ds
xchg
aam
and
cmp
pop
push
lcall
mov
inc
fists
subb
mov
je
adcb
push
or
or
incl
push
xchg
mov
jno
push
pop
movsb
xchg
jecxz
cmp
nop
mov
scas
fwait
and
loope
xor
cmpsb
icebp
mov
ret
aam
dec
clc
or
or
je
xchg
jle
xchg
icebp
jge
dec
enter
loop
cmp
jmp
pop
inc
pop
pop
push
cmp
rcrb
in
mov
mov
movsl
out
sbb
mov
fisubs
mov
lahf
mov
fldl
push
bound
xor
lahf
test
in
jge
cmp
and
push
dec
icebp
insb
mov
mov
mov
iret
inc
fnstenv
mov
fs
rol
cmp
or
xlat
into
jp
insb
inc
xor
int
inc
loope
pop
push
in
pop
imul
dec
rorb
in
clc
dec
imul
jmp
mov
rorb
adc
push
xor
xchg
inc
push
fisttps
stc
add
loop
inc
idiv
mov
cmp
divl
and
xlat
les
xchg
testb
jp
insl
out
outsl
rorl
mov
push
pop
xchg
inc
lahf
mov
pop
cmpsl
lret
out
aad
pushl
adc
das
push
popf
lods
push
daa
dec
sub
xchg
gs
pop
cmp
mov
mov
push
push
sbb
aas
sub
mov
push
nop
inc
cs
inc
push
pop
pop
pop
call
mov
push
push
fbld
dec
movsb
movsb
and
repnz
ss
jb
sub
iret
inc
std
stc
es
or
and
fwait
inc
int3
adc
jg
mov
mov
div
push
orb
mov
movsl
test
cs
lret
ljmp
jae
rorl
cmpsl
outsl
insb
or
aad
leave
or
call
jae
popf
ss
cld
dec
sub
cmc
dec
inc
cs
jg
mov
imul
mov
and
stos
cmp
mov
and
int
pop
fwait
mov
dec
cltd
lock
stc
push
mov
cmpsl
adc
pop
inc
and
xchg
std
pop
pop
scas
aas
mov
or
cmp
pop
sarl
movsb
mov
mov
mov
repz
fcmovbe
sbb
sub
dec
xchg
mov
cmpsl
push
mov
xor
xchg
inc
pop
pop
push
cmpsl
xchg
ja
push
sbb
xor
les
add
adc
movsb
jle
push
push
std
or
sbb
push
gs
fldcw
xchg
jg
inc
mov
inc
stos
enter
mov
pusha
mov
xchg
pop
jge
jae
dec
xchg
adcl
lahf
out
daa
sti
adc
rorb
push
dec
lahf
pop
ficoms
lock
mov
lock
mov
fsubl
sahf
jae
mov
mov
js
inc
xchg
enterw
test
push
and
test
or
or
lret
test
sub
sahf
aam
bound
or
mov
jo
or
imul
mov
inc
loopne
lods
sub
push
sbb
xchg
sbb
lret
icebp
or
aaa
nop
aad
ret
fistpll
push
xor
pop
lret
mov
lret
adc
pop
lds
xor
cltd
adc
push
leave
movsb
xchg
adc
sarb
mov
pop
dec
xor
sbb
imul
and
jge
mov
test
orb
jbe
pop
cmc
cmp
out
test
mov
pop
cmp
lock
xor
cli
int
sub
add
adc
lahf
mov
enter
jle
adcb
and
sbb
ljmp
or
lods
test
stc
mov
insb
jno
mov
lock
out
jecxz
mov
mov
mov
dec
mov
xchg
pusha
sub
test
roll
ljmp
mov
push
push
mov
movsl
xchg
jge
inc
inc
mov
mov
xor
lock
hlt
push
inc
jno
add
cwtl
lret
push
lock
pop
das
scas
inc
mov
mov
sti
pusha
enter
mov
push
push
test
jg
lahf
ljmp
ja
shl
scas
jo
and
xchg
and
cltd
mov
outsl
cwtl
mov
into
popf
aam
add
test
add
scas
and
mov
xor
sti
dec
out
sub
fists
mov
jmp
pop
loopne
scas
push
cmp
mov
imul
mov
or
mov
add
mov
stos
mov
int
xchg
pop
mov
fdivrl
jmp
dec
inc
mov
jae
lds
and
xchg
dec
cmp
push
and
aad
jno
xor
icebp
aam
lea
sbb
pop
mov
jg
cmp
test
movsb
mov
out
jo
ret
popf
mov
inc
mov
jnp
rcr
mov
movsl
xchg
shll
outsl
xchg
xor
cli
jge
or
adc
imul
ret
enter
pushf
mov
sbb
fwait
sub
or
clc
mov
scas
cld
test
or
cmp
or
xchg
sbb
or
repz
mov
mov
rcll
out
call
mov
inc
cs
int3
test
cmp
insl
insb
or
add
cmpsb
cld
icebp
push
or
push
int
push
inc
adc
icebp
std
cmpsb
xor
xor
daa
popa
cltd
into
dec
xchg
hlt
icebp
jg
xlat
push
jge
scas
jns
test
push
cwtl
mov
cmp
jb
or
jmp
outsl
stos
dec
or
out
call
mov
pop
es
or
cmc
in
hlt
dec
cmc
loop
es
sbb
or
shrb
push
cmp
xor
mov
repz
dec
jne
lock
rcll
jl
inc
add
mov
pop
mov
sub
cs
and
push
jae
int
jno
mov
mov
andl
add
test
pop
xchg
mov
jge
push
push
sub
daa
ja
push
ret
jno
mov
lods
adc
pop
cltd
inc
cwtl
jno
lret
ret
aam
fcoml
cwtl
jle
push
cmp
mov
push
jns
push
pop
cwtl
test
or
mov
mov
add
idivb
mov
cwtl
push
into
jb
mov
adc
loope
ret
repz
rcrl
adc
or
and
aas
pop
jb
xchg
pop
push
test
ret
jg
inc
adc
sub
andb
mov
sbb
xchg
lds
mov
icebp
dec
adc
pslld
add
add
in
sbb
or
jle
pop
push
or
cmpsl
test
repnz
jo
jg
inc
cs
jmp
xor
lds
test
xchg
ret
push
test
jne
cwtl
test
sahf
cli
mov
mov
leave
insl
pop
push
lock
iret
inc
stc
add
outsb
stc
and
cs
dec
cs
xchg
sbbl
or
cmp
enter
call
mov
mov
dec
push
cmp
cmp
enter
call
mov
mov
sub
or
cmp
adc
fdivrs
mov
mov
pop
push
sub
cmp
aaa
add
call
xor
inc
subb
cmp
or
sbb
shlb
adc
add
nop
popf
cmpb
call
loopne
adc
add
xor
and
push
push
pusha
sub
movsb
cmpb
lcall
adc
add
xor
and
push
jno
pusha
jo
pusha
inc
nop
test
fwait
shl
cmpsl
test
mov
add
insl
jo
push
mov
jb
cmc
mov
adc
aaa
imul
add
push
sbb
cli
mov
cmpsl
in
jg
jmp
mov
cmpsb
clc
cmp
and
cmp
push
jecxz
push
sti
jnp
add
out
pop
outsb
dec
add
enter
jbe
adc
int3
dec
push
push
pusha
fldl
ja
adc
loopne
ljmp
divl
or
clc
push
cmc
inc
loopne
mov
call
call
lock
xchg
mov
mov
mov
or
push
rol
ja
movsb
rol
icebp
lret
dec
aas
add
xor
and
push
push
pusha
inc
nop
test
mov
shl
shl
shl
fldenv
dec
pop
insl
outsb
jge
push
sbb
and
cmp
fisttps
cli
popf
cmpsl
xchg
mov
inc
inc
push
inc
jnp
ja
push
sbb
fsubr
in
lds
mov
sub
cmp
add
pop
inc
js
dec
pusha
pop
nop
test
mov
shr
sar
enter
sub
cmp
or
sbb
inc
js
dec
pusha
pop
nop
test
mov
shr
sar
enter
sub
sbb
jecxz
out
xchg
xor
xchg
cmp
test
cmpsl
outsb
je
popa
push
push
mov
xlat
aam
loop
sarb
mov
xchg
jg
or
hlt
sbb
xor
mov
lahf
jmp
push
adc
mov
shrl
cmpsb
push
dec
push
dec
pop
add
sti
xchg
imul
std
cvttps2pi
pusha
cmp
pop
sub
jge
shrb
push
or
xor
pushf
loope
insb
fs
mov
addr16
push
adc
push
scas
test
or
xchg
cmpsb
cld
ss
or
lods
outsb
inc
pop
jne
lahf
outsl
addb
ret
out
lcall
lret
adcl
xchg
xor
inc
jb
lock
dec
sbb
mov
push
xchg
shll
faddl
pop
inc
mov
jae
cmp
ja
popa
mov
xor
push
inc
sub
sub
mov
inc
or
lahf
and
dec
mov
or
pop
movsl
add
jle
push
xchg
loop
scas
test
call
push
pop
fdivrl
push
rclb
in
pop
dec
ret
sbb
push
test
dec
mov
lods
test
xlat
rolb
dec
jle
xchg
nop
and
cmp
cmp
aaa
inc
pop
rolb
adc
cmp
add
ja
inc
sti
in
sbb
jecxz
jnp
jne
and
nop
mov
jmp
xchg
scas
xchg
pop
jl
inc
rcr
xor
mov
outsb
mov
adc
aad
mov
mov
push
int3
and
push
outsl
jmp
pop
push
jp
push
pop
sub
push
push
pop
pusha
and
bnd
aam
enter
mov
bound
lcall
push
add
inc
aaa
sbb
pop
pop
cmp
sbb
adc
mov
insl
outsl
adc
aas
xchg
bound
jns
xor
aam
xlat
mov
bsr
fmuls
add
inc
or
lahf
jnp
sub
sbb
add
andl
adc
sbb
mov
cmp
loop
dec
jne
adc
movsb
in
pop
xchg
addl
sbb
inc
cmpsl
push
out
inc
cwtl
sub
pop
pop
frndint
pop
mov
sub
jp
loope
adc
iret
ret
pushl
sub
lahf
pop
jecxz
shll
push
pop
loopne
push
sbb
lcall
mov
outsb
mov
or
sbb
dec
push
mov
aam
adc
jno
push
inc
out
push
jl
das
ja
jb
dec
sub
mov
push
or
pop
inc
test
cmp
xchg
addr16
popf
jbe
shll
loope
outsb
in
aaa
adc
fbstp
cld
and
sub
std
sub
adc
sbb
and
cmp
adc
dec
ret
jae
mov
sbb
xchg
or
pop
and
in
aas
sub
add
sub
test
into
push
cmp
jmp
les
pop
xchg
stos
push
pop
cli
in
push
xchg
mov
mov
jno
jle
mov
sub
lahf
repnz
decb
push
daa
pop
stos
ljmp
inc
out
cs
into
inc
flds
sahf
f2xm1
jmp
aad
cwtl
imul
inc
inc
xor
rolb
and
or
scas
jns
and
dec
sub
mov
stc
imul
aaa
xchg
mov
fnsave
cmp
inc
sbb
imul
cmc
fadds
xchg
sbb
popa
addr16
lret
cmp
stos
dec
xchg
dec
int3
add
mov
mov
xor
push
and
sbb
mulps
inc
arpl
rclb
pop
js
mov
andnps
out
fsub
loope
mov
mov
fmull
in
mov
inc
popa
pop
cmp
jns
adc
mov
jmp
mov
dec
ja
cli
xlat
loopne
sbb
cmp
push
mov
mov
jge
pop
stc
sbb
cmp
dec
fdivrl
pusha
mov
and
enter
push
rol
hlt
rorb
shrl
xchg
add
mov
adc
cmp
adc
insb
fbstp
xor
fisttpl
dec
mov
sbb
clc
jb
into
sbb
push
push
mov
mov
ljmp
sahf
mov
mov
push
pop
dec
jnp
into
push
in
or
xchg
movsb
push
test
jae
push
mov
push
dec
mov
outsl
in
sahf
adc
inc
mov
mov
dec
in
roll
xor
mov
ss
push
pop
fdivl
mov
rcl
mov
insl
or
enter
das
adc
inc
cld
repz
insb
jmp
in
mov
pop
insl
push
movsl
adc
lret
mov
or
mov
add
inc
mov
push
xor
fs
xor
push
mov
aad
in
push
pop
pushf
push
lret
mov
sub
loope
push
jb
adc
inc
dec
mov
add
inc
mov
scas
mov
mov
test
cli
jg
jmp
les
cmp
or
xorb
imul
stos
mov
addr16
rorl
cli
fmul
and
cmp
imul
out
push
push
test
adc
jge
mov
sbb
pcmpeqd
js
in
sarb
xor
adc
pmuludq
xor
and
rorl
and
sub
xchg
push
push
aam
in
sbb
popf
movsb
inc
neg
aad
add
add
cmp
inc
sub
cmp
insb
sarl
jae
lret
in
or
jl
adc
push
ss
and
cwtl
add
int
mov
shlb
mov
fldenv
out
xorb
add
xchg
mov
push
clc
push
testl
lret
std
imul
testb
pop
imul
and
scas
aam
pop
mov
mov
fcoml
out
xchg
sahf
test
sbb
lds
arpl
aas
stos
cmp
fcom
aam
mov
lcall
add
mov
jns
inc
xchg
jge
lods
and
lahf
inc
mov
mov
mov
xor
jo
or
frstor
hlt
shll
imul
pop
pop
addr16
fcompl
popa
mov
cmc
add
in
lods
inc
mov
hlt
inc
inc
mov
sbb
or
mov
in
ficompl
cltd
add
xor
adc
andb
mov
xchg
gs
ret
dec
and
xchg
out
cmpl
mov
sub
and
jo
roll
jecxz
les
jnp
dec
dec
ds
lock
bound
adc
ret
adc
xor
jnp
mov
jns
xchg
dec
and
dec
and
inc
movsl
xor
loope
xorb
movl
ficoml
std
xor
in
push
sbb
popf
les
add
and
mov
sub
in
or
sub
cmpsb
inc
pushf
jmp
sbb
cmp
pop
lods
rclb
add
cmpsl
mov
add
inc
int3
inc
sub
and
jp
rorb
in
cmp
imul
inc
and
icebp
adc
mov
scas
inc
push
mov
xor
pushf
jb
add
pop
sub
xchg
adc
jg
or
test
into
stos
sub
ljmp
mov
insb
icebp
out
lcall
cmp
jbe
cs
mov
xchg
push
push
xchg
adc
adcb
ja
push
and
cmp
pop
loopne
into
gs
in
adc
jge
xor
jnp
fnstcw
or
inc
jnp
jno
dec
and
insl
jl
out
mov
cmp
pop
pop
and
xchg
outsb
add
or
addl
jmp
bound
or
dec
jle
sbb
gs
loop
ret
jae
push
jns
test
fildll
jne
xchg
shlb
clc
push
jns
arpl
ss
cld
push
cwtl
mov
dec
fistps
int3
add
in
mov
clc
scas
add
cmp
mov
into
cmp
pop
loop
stc
mov
adc
xlat
xchg
inc
mulb
das
lock
in
popa
fdivrs
xor
pop
mov
push
dec
out
mov
jecxz
ljmp
push
fs
cltd
sbb
push
xchg
frstor
nop
cmp
add
pusha
cmp
rorb
adc
sub
mov
mov
xor
daa
sbb
adc
xchg
mov
out
push
std
or
sti
mov
xchg
or
sub
xchg
bound
add
aam
jne
xchg
pop
mov
arpl
aad
fs
cmp
stc
cs
mov
xchg
and
lock
dec
adc
dec
ret
cli
xor
imul
leave
xchg
or
je
addr16
xchg
fstpt
movsl
dec
cmpsb
inc
ja
xchg
mov
add
insb
sub
pop
push
add
jno
jle
mov
data16
sub
or
mov
repnz
test
out
ss
sub
pop
int
call
call
push
push
cwtl
loope
bswap
fwait
mov
loope
popa
mov
lretw
cmp
push
sti
or
mov
inc
testb
sbb
push
cvtpi2ps
lret
ljmp
and
or
add
aam
push
aad
jecxz
movb
out
sbb
fisttpl
or
test
dec
inc
sbb
jne
or
xor
lret
xor
pop
jp
test
mov
inc
out
mov
inc
mov
fnstcw
and
dec
xchg
movsl
stc
xchg
jne
cli
inc
inc
xchg
lock
sbb
test
jae
sbb
cld
push
loop
test
xor
int
cmp
pop
push
sbb
cmc
movsb
sbb
js
loope
in
sysret
outsl
xor
mov
and
pop
jns
mov
mov
or
xor
aam
aad
xor
and
adc
adc
jp
pop
pushf
scas
mov
stc
sarl
dec
pop
mov
dec
nop
call
pop
and
nop
xor
enter
hlt
inc
mov
and
dec
add
sbb
rolb
pop
lcall
mov
iret
fcompl
jmp
test
mov
or
cltd
dec
xchg
mov
fst
jae
cld
sbb
int
pop
test
inc
pop
arpl
mov
inc
mov
sub
scas
inc
sahf
and
into
inc
popa
inc
enter
adc
sub
je
fistps
push
cld
inc
mov
mov
lcall
arpl
push
repnz
pop
icebp
or
push
adc
pusha
mov
fs
test
call
addr16
out
test
mov
adc
mov
fcmovnu
je
fiadds
jg
sbb
cmp
sub
fadd
stos
shr
out
adc
mov
add
dec
outsb
cli
int
cmp
push
mov
pop
pop
aam
sahf
insb
xchg
jns
mov
jns
inc
pop
call
mov
xchg
ret
test
cmp
arpl
inc
jne
in
jae
arpl
sbb
jb
pop
inc
xchg
rcrl
push
or
mov
xor
jmp
add
adc
and
stos
out
mov
mov
in
add
add
push
push
leave
movsb
imul
mov
scas
fsubs
mov
xor
cmpsl
jp
inc
daa
mov
stos
arpl
or
ret
lret
sbb
push
push
test
lret
pop
aad
and
adc
lods
outsb
into
sbb
xchg
or
pop
add
or
mov
arpl
pop
scas
fsts
inc
rorl
mov
mov
outsl
out
dec
push
outsl
xor
dec
movb
adc
jb
js
aad
loop
ljmp
insb
add
dec
mov
shl
xchg
xchg
adc
pop
mov
xchg
cmc
pusha
loope
mov
push
gs
sbb
push
repz
pop
cmpsb
cmc
outsb
test
xorl
cmpsl
fmuls
sti
enter
ljmp
mov
mov
popa
jo
and
scas
push
and
mov
jns
enter
sub
sbb
lods
icebp
sbb
cld
jle
push
js
scas
leave
mov
add
sub
insb
mov
mov
int
xchg
pop
rolb
fwait
popa
mov
clc
xorb
pusha
or
jge
sub
add
xchg
aaa
test
jbe
pop
dec
adc
xchg
cmpsl
jg
xchg
sbb
daa
mov
loop
dec
leave
or
data16
sbb
xchg
cmpsb
cmova
jl
sahf
mov
call
aaa
outsb
ja
mov
adc
xor
ja
jl
mov
lret
dec
nop
arpl
addl
sub
push
sub
rcr
test
xchg
enter
ja
mov
pop
stc
insl
mov
jge
xor
mov
mov
rcr
cs
test
imul
insb
fldt
xchg
push
push
dec
cmpsb
andl
aas
pop
daa
mov
mov
iret
cli
or
stos
xor
mov
mov
cmp
mov
push
xlat
roll
jp
pop
sti
sbb
jge
test
sub
insb
mov
lret
xlat
push
inc
dec
movsl
inc
test
inc
pop
rep
out
push
lcall
push
aaa
rcrb
dec
lret
call
inc
testl
jno
addr16
adc
push
test
mov
repnz
test
insl
neg
pop
fcmovu
hlt
mov
dec
in
sub
add
pop
pop
andl
sahf
fwait
pop
push
or
in
and
mov
sub
jge
and
jg
clc
lea
cli
movsb
fidivrl
xor
mov
or
adc
jmp
dec
jns
andl
outsl
enter
mov
icebp
and
das
add
bound
stos
out
jbe
push
lret
repnz
pop
pop
fimull
insb
pop
aaa
ljmp
into
add
mov
les
and
repz
call
and
dec
inc
pop
ds
or
daa
mov
xchg
cld
test
int3
je
cmpsb
cmpsl
rorl
scas
movsl
push
imul
in
insb
xchg
push
jo
fisttps
cmpsb
fbstp
xchg
inc
int3
in
pop
push
pop
iret
mov
fdivs
push
dec
dec
push
cmpsl
popl
xor
out
mov
xchg
jg
sub
clc
pop
cli
mov
inc
aas
and
sbb
and
adc
jbe
mov
mov
dec
fbld
jnp
push
mov
movsb
dec
cmpl
push
xlat
lock
mov
xchg
or
movsb
rcll
in
pop
loopne
mov
xor
fisttpll
popa
ret
call
vpaddsw
addl
inc
jg
adc
cs
popl
popf
and
ret
out
add
dec
push
xchg
mov
jae
add
mov
mov
stos
and
shr
inc
xlat
xor
add
ja
outsb
cld
mov
add
outsb
or
pop
adc
jl
sbb
stc
addr16
rorl
or
insb
ret
jecxz
push
xchg
jle
adc
jnp
ret
call
add
jle
push
add
pushl
cli
inc
or
aas
jl
adc
sub
cmp
xorb
out
dec
xor
rorb
adc
jmp
fisttpl
mov
pop
jl
xchg
xor
fstl
push
ss
stc
jnp
add
adc
adc
mov
test
ficoml
sbb
mov
pop
es
pop
push
pop
inc
cwtl
mov
iret
hlt
into
sub
in
add
hlt
or
addr16
cld
add
fcmovne
loope
std
arpl
icebp
jb
inc
repz
mov
lcall
jno
jecxz
fcmovnbe
pop
js
repz
mov
xlat
pop
add
dec
scas
ret
xchg
ja
push
cmpsl
int3
and
pop
jge
dec
xor
fisubl
or
ficomps
cs
or
iret
or
xchg
fs
negb
fsts
adc
in
jp
rclb
mov
or
hlt
push
sub
or
jmp
xchg
mov
insb
lds
dec
mov
jl
xchg
je
add
mul
fldt
fwait
stos
mov
sub
sbb
loop
push
adc
test
orb
jmp
and
loopne
test
shll
mov
int3
movsl
add
fwait
add
pop
stc
rclb
lods
xor
lea
jmp
dec
jg
pop
movsl
inc
mov
sub
push
sbbl
jp
ret
stc
rcll
dec
and
repnz
mov
fsubl
add
lods
mov
push
lods
push
mov
addr16
cld
adc
outsb
xor
pop
ret
sbb
shll
lods
xor
repnz
and
pop
pusha
scas
jne
pop
notl
mov
add
or
sarb
out
push
mov
jmp
jmp
fs
imul
cmp
mov
cli
insb
aaa
pop
push
inc
push
je
jo
movsb
sti
cmp
add
jmp
mov
push
in
adc
stc
jge
lret
sub
dec
inc
rcrb
cmpsl
push
sahf
ret
sti
push
xor
or
mov
add
lods
je
fwait
mov
lock
push
shlb
xor
jl
pop
mov
aam
mov
js
mov
lret
xchg
xchg
sub
sub
ror
imul
sub
stos
icebp
shrl
sarb
into
mov
mov
mov
in
lea
sub
add
lcall
sub
movsb
push
hlt
mov
movsl
in
popf
in
inc
xor
lcall
pop
lcall
add
jg
subl
ret
mov
xchg
mov
push
shll
je
add
xor
lret
pop
adc
adc
call
mov
pop
cli
mov
sub
lcall
fnsetpm(287
lahf
xlat
gs
int3
xor
push
sub
mov
in
imul
outsb
or
lods
rol
sub
mov
mov
scas
jle
xlat
mov
test
movsl
out
iret
xor
sub
push
int3
sbb
icebp
movsb
push
pop
mov
or
dec
je
xor
xor
test
filds
sbb
pop
cmp
mov
pop
inc
pop
fistl
lcall
cmc
dec
stc
and
sti
fildl
pop
xchg
pop
mov
test
jmp
inc
mov
testb
out
jbe
movsb
sbb
or
mov
or
mov
mov
cmc
push
nop
shlb
mov
leave
jne
push
push
lods
sbb
mov
pop
cmp
lahf
sub
or
cmp
mov
mov
test
in
sub
add
loopne
enter
out
mov
js
sahf
setns
push
xor
movsb
pop
imul
test
mov
rcll
orb
mov
cmp
sub
shll
in
adc
imul
inc
add
cld
xchg
sub
insb
int3
fisttpl
test
and
outsl
out
push
addr16
push
sbb
mov
out
movsl
cwtl
pop
xchg
jle
sbb
dec
or
movsl
lret
aas
mov
fisubs
or
lock
dec
rcr
cli
es
add
call
sbb
push
jns
sub
ss
pop
es
out
lea
fsubrs
clc
dec
push
pop
mov
xchg
adc
addb
lock
pop
mov
shrb
into
or
addb
pop
mov
push
pop
push
lret
flds
push
add
fcom
or
or
push
pushf
int3
dec
dec
pop
mov
pop
test
push
mov
std
scas
push
sub
mov
icebp
test
mov
cmpsl
clc
and
and
test
ret
xor
xchg
or
xchg
xlat
or
cmc
dec
scas
add
xchg
inc
or
xchg
sub
fwait
movsb
shll
ss
or
fiadds
idivb
sbb
sbb
jae
cltd
ss
imul
dec
sbb
jb
pusha
cmp
mov
rorb
mov
xchg
std
mov
call
popf
jbe
jno
aas
or
and
xor
jb
inc
or
adc
hlt
lea
or
inc
xor
loopne
repz
push
push
dec
pop
and
subps
nop
mov
or
jp
int3
std
shrb
xlat
aad
sub
incb
xor
cmpsb
inc
sar
or
sbb
inc
js
dec
pusha
pop
nop
test
mov
shr
sar
enter
sub
cmp
or
sbb
inc
js
dec
pusha
pop
nop
test
mov
shr
sar
enter
sub
cmp
or
sbb
inc
js
dec
pusha
pop
nop
test
mov
shr
sar
int3
loope
adc
cmp
or
sbb
inc
js
dec
pusha
cwtl
nop
test
adc
mov
xchg
mov
cmpsl
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
mov
sub
aaa
xor
and
and
pop
add
add
add
add
rolb
dec
add
pushf
add
push
add
add
pop
add
enter
in
push
add
add
jns
addb
add
add
pop
add
add
fiadds
adc
inc
add
add
add
add
add
add
add
add
add
add
add
lods
add
add
add
add
add
add
jno
cltd
add
add
sbb
pop
add
inc
add
jae
add
add
add
add
add
add
add
add
xchg
add
add
mov
test
cmp
ret
add
xchg
add
mov
addb
add
add
pop
add
add
add
add
push
add
add
add
add
add
add
add
push
add
add
add
or
add
add
sbb
xchg
add
add
add
add
add
add
add
add
add
sbb
jg
push
add
movl
and
roll
dec
add
inc
add
pop
add
add
rolb
cld
add
add
add
add
incl
test
inc
add
add
jg
rolb
pop
add
add
add
add
add
add
add
rolb
push
add
add
aas
add
add
add
xor
enter
cmp
mov
add
add
add
add
lods
add
pop
add
and
and
je
lock
add
add
inc
add
add
add
xchg
add
add
roll
test
pop
add
les
data16
add
add
add
add
add
mov
lods
add
add
pop
add
add
add
add
add
add
add
add
add
inc
add
add
push
add
and
rolb
je
lds
adc
out
add
add
add
add
jo
lock
repz
add
add
xchg
add
add
add
and
in
add
mov
scas
add
add
add
add
add
dec
add
add
repz
add
add
add
add
add
pusha
add
add
pop
add
add
xchg
add
add
mov
mov
sub
sub
mov
add
add
jo
lcall
add
jno
dec
add
push
add
movsl
add
jno
dec
add
cmpsl
add
add
add
pop
add
push
add
add
add
add
incb
adc
ds
add
add
pop
add
scas
add
add
add
add
add
in
and
inc
add
mov
add
add
add
add
add
lods
add
add
add
cs
add
add
add
add
mov
add
loopne
push
add
add
and
and
inc
add
push
add
add
add
mov
add
and
mov
push
add
add
add
pusha
add
add
add
jae
insl
add
add
add
add
xor
lods
adcl
sub
mov
sub
mov
sbb
ret
jns
iret
pop
adc
mov
sbb
ja
sbb
sti
orl
xchg
push
xor
xor
mull
mov
sub
mov
sub
add
inc
and
push
adc
mov
pop
sub
pop
xor
popl
leave
and
push
mov
cmp
aad
mov
notb
repnz
xchg
not
movsb
in
ret
iret
incb
imul
mov
fsts
mov
sahf
leave
cmp
add
push
leave
cs
adc
push
add
mov
movsl
shll
outsb
mov
in
jle
mov
in
rolb
out
aad
jge
and
popf
mov
in
or
out
sub
or
xor
dec
sarb
add
jle
sbb
cli
cmp
jbe
inc
aaa
fadds
cmpsb
or
inc
pushf
and
and
ret
cmp
and
push
lret
lea
lret
fists
adc
int3
xor
adc
loopne
inc
or
push
mov
dec
push
lcall
call
sbb
fwait
add
inc
xchg
sub
mov
shlb
inc
cmpsb
xchg
lahf
xchg
shlb
stos
pop
inc
xchg
inc
lock
ret
loop
xchg
inc
mov
testb
daa
mov
outsb
adc
pop
xchg
les
xlat
cmp
imul
mov
xor
outsb
ja
out
pop
repnz
pusha
jne
sti
clc
out
jb
sub
sbb
ret
movlhps
dec
cltd
out
pop
mov
add
daa
add
inc
mov
ret
inc
cmp
addr16
test
xchg
stos
mov
test
xchg
adc
aaa
or
xchg
fisttps
shlb
sub
adc
popf
dec
jecxz
test
ficompl
jmp
shrb
fisubrl
push
pop
outsl
ds
pushf
mov
adc
lds
push
test
inc
cli
cmp
ljmp
inc
mov
das
mov
repnz
mov
in
adc
push
insb
xchg
sub
and
push
scas
push
xlat
or
add
sub
andb
lret
inc
scas
dec
ja
imul
mov
popf
gs
lcall
cwtl
in
test
add
and
cwtl
shrl
xchg
sti
nop
adc
cld
sub
cwtl
testl
xchg
loopne
cwtl
sub
scas
out
xchg
lods
popf
xchg
or
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
