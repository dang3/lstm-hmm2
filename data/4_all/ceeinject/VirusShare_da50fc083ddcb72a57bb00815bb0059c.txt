call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
cmp
sub
sbb
or
jb
sbb
cmp
lods
aas
pushf
jl
jge
dec
int3
pop
cmp
sub
sbb
or
jl
insb
jae
iret
dec
stos
mov
jl
jg
bswap
pop
cmp
sub
sbb
or
jl
insb
ret
pop
and
lock
pop
out
push
mov
push
xchg
cmp
shrl
jle
cmp
insb
je
shll
test
pop
ja
cld
repnz
or
jmp
out
call
popf
dec
or
lsl
mov
les
test
and
push
mov
and
pop
dec
gs
or
jns
sub
daa
jl
jl
mov
sarb
add
sbb
into
or
mov
xor
lret
addr16
lods
jl
das
mov
add
jle
pop
fldenv
pop
sahf
in
movsl
test
and
das
push
fs
pop
shrb
fmull
sub
sbb
or
jl
insb
lcall
pop
mov
pop
mov
inc
in
xchg
dec
int3
xor
inc
mov
adc
or
jp
jnp
jbe
add
ds
ljmp
cmp
dec
mov
dec
scas
imul
aas
mov
xor
stc
dec
clc
jne
or
lcall
fistpll
mov
cld
outsl
in
jg
dec
int3
pop
cmp
sub
sbb
or
jl
insb
lcall
fistpll
mov
cld
outsl
in
jg
dec
int3
pop
cmp
mov
sub
mov
jbe
fsub
xchg
push
xchg
aad
fistl
imul
outsl
sbb
xchg
mov
adc
adc
mov
lret
mov
add
jecxz
jae
mov
inc
pop
inc
enter
aad
jl
subb
jns
add
rcrb
fcmovu
dec
cmp
lret
cs
scas
jl
outsl
jno
int
jge
testb
aas
popf
jne
scas
xchg
mov
mov
inc
hlt
dec
inc
lds
fstp
lods
lods
mov
stos
push
push
imul
push
in
adc
or
mov
out
daa
fcompl
subb
icebp
push
adc
shl
xchg
push
shlb
imul
call
jmp
push
jl
add
incb
daa
push
push
shrb
jnp
adc
jmp
jecxz
rclb
pop
and
push
jno
sbb
push
add
call
insl
inc
repz
mov
add
adc
hlt
sub
or
aam
lret
sbb
in
jbe
mov
imul
jbe
mov
insb
cmpsb
jg
ljmp
cs
addl
arpl
sahf
mov
stos
stc
mov
in
hlt
in
add
mov
aaa
mov
shll
popf
in
or
or
push
rorl
push
lcall
dec
cs
mov
insb
add
mov
pop
adc
push
mov
push
lods
fdivrl
enter
jmp
and
push
mov
jno
mov
xchg
scas
cmpsb
nop
cmp
dec
les
jge
call
cs
std
jg
jmp
cmp
out
aaa
pop
lods
add
fdiv
ljmp
cmpl
jmp
mov
push
aaa
daa
call
jae
call
jb
ret
icebp
or
jge
ja
inc
xchg
jge
pop
fimull
call
ror
sbb
sbb
jmp
dec
xchg
lcall
inc
sub
mov
pushl
push
lea
lret
aas
fldcw
fldl
lcall
aad
outsl
leave
data16
hlt
ret
int3
ds
ret
addr16
cmp
roll
push
mov
inc
in
cmp
pushw
push
jbe
dec
fsts
negb
out
xor
ret
repz
cmpsb
mov
sub
addb
fstps
jb
hlt
ret
push
ret
fcom
sarb
ficomps
out
push
pause
dec
imul
iret
shll
lahf
xchg
imul
ja
pushf
pop
cmpsb
mov
or
inc
sbb
jge
out
insl
sbb
fisubrs
rol
or
sub
gs
int3
inc
cmc
xchg
sbb
sarb
fs
icebp
in
jle
xchg
je
jae
ss
inc
pop
push
xor
cmpsb
sub
arpl
cmc
xchg
mov
or
cmp
sbb
adc
mov
movsb
lahf
jecxz
jo
sbb
adc
mov
and
insb
pop
fidivl
cmp
mov
stc
push
sti
xor
xorl
add
xor
pop
mov
push
pop
adc
imul
push
push
jne
xor
or
jle
int
lahf
sarb
jnp
cs
ds
or
leave
shl
and
into
jecxz
lahf
push
jmp
or
imul
jmp
ficoml
push
mov
push
jecxz
lahf
add
mov
xor
lahf
jbe
mov
hlt
xchg
sahf
pop
sbb
inc
insl
cmp
popf
cmpb
lahf
adc
mov
sbb
mov
pusha
bound
scas
test
xlat
lock
shll
mov
std
xor
bnd
inc
or
or
pop
sar
cmp
ficoml
fdiv
inc
cmp
in
pop
fnstcw
mov
mov
cmp
lcall
mov
xor
cli
imul
dec
cmp
jae
xchg
jbe
adc
and
pop
in
mov
lret
fsubrp
sbb
mov
cmp
pusha
ret
outsl
in
outsl
outsb
push
or
xchg
test
cwtl
xor
pushf
or
mov
int3
jo
test
addr16
dec
shlb
adc
pop
xor
test
in
add
mov
scas
lock
mov
sahf
clc
jp
cld
cmp
out
mov
fdivrs
adc
in
xchg
out
dec
int
fstpl
shrl
and
int3
xchg
inc
push
fwait
icebp
mov
add
add
les
xchg
sbb
loopne
push
mov
add
repz
mov
or
mov
lret
xchg
fidivrl
jecxz
imul
jae
or
ret
xor
fistl
mov
scas
pop
test
push
sub
push
movsl
mov
in
ja
shlb
test
movsb
fs
sarb
xor
lods
pop
push
es
jno
pop
sub
mov
inc
aaa
jne
jne
imul
cmc
xor
imul
gs
pop
ds
push
popl
into
or
dec
data16
xchg
out
js
dec
xchg
and
push
push
xor
js
mov
add
fists
out
lret
xlat
xor
out
mov
pusha
lock
mov
sub
sar
fbld
adc
mov
neg
ficoms
out
scas
xlat
xchg
adcb
gs
sub
mov
dec
adc
out
shlb
test
pop
mov
sub
and
mov
enter
mov
aam
adc
inc
sbb
test
imull
and
fsubrl
push
cld
jp
scas
and
scas
jl
fucomi
jo
mov
pop
inc
loope
inc
je
testb
adc
daa
and
lods
fcom
xor
mov
and
movb
repz
mov
sbb
or
ljmp
mov
push
fcmovb
mov
inc
mov
sbbl
inc
add
sbb
xlat
cmp
add
lods
gs
iret
enter
cmp
fwait
mov
xchg
jae
cmpsb
leave
dec
and
aam
in
addr16
push
std
mov
ret
pop
lcall
imul
pop
stc
fwait
mov
mov
dec
out
insb
and
mov
or
setns
nop
stos
popa
push
out
mov
lahf
mov
ret
shr
xchg
jbe
dec
mov
ss
inc
cmp
leave
adc
mov
or
adc
dec
jns
mov
cmp
negb
hlt
out
addr16
test
sar
push
mov
mov
rclb
jl
scas
pop
inc
mov
or
cmp
push
shll
xchg
inc
sbb
xor
lods
fidivrs
pop
xor
jno
leave
ret
es
mov
aam
aas
and
pop
iret
inc
sahf
fs
lds
hlt
sub
sub
pop
inc
movsl
ficoms
daa
mov
sbb
fwait
andl
and
stos
cmpsb
xor
shll
divb
mov
push
je
mov
sub
pop
or
mov
ja
xchg
lea
insl
add
jb
pop
imul
xchg
pop
shll
mov
xchg
dec
into
xchg
sbb
jnp
imul
dec
rol
gs
push
outsl
shrl
dec
and
into
push
stos
push
sub
sbb
xor
rolb
mov
jmp
jg
jle
scas
jmp
sarl
lret
imul
mov
out
out
cs
shl
xlat
inc
ja
ret
out
cmp
lds
jo
add
into
or
xchg
cmp
jmp
sti
jl
gs
pop
imul
or
jae
ret
or
int
push
adc
rcl
and
mov
xor
adcl
sub
sbb
pusha
xor
lahf
cmc
mov
shrb
lock
in
scas
sbb
addr16
mov
ficompl
adc
fdiv
sti
cmp
clc
dec
ss
pop
in
cli
in
imul
pushf
and
and
test
dec
or
pop
mov
push
test
jmp
inc
adc
test
dec
imull
ja
jp
lret
call
in
dec
stos
cld
dec
jp
or
add
push
testl
es
cmp
stos
in
data16
or
mov
in
xor
stos
add
lcall
sbb
sub
adc
in
pop
push
jno
leave
xchg
mov
add
fadd
fcom
pushf
lods
mov
repz
jae
shlb
adc
jnp
jno
std
jle
cmp
xor
mov
or
dec
sub
and
mov
stc
les
inc
push
xor
mov
sahf
in
ja
ret
repnz
mov
incl
and
shlb
or
cmp
push
enter
fcoms
xor
fwait
pop
add
cwtl
rorb
jmp
std
loopne
in
pusha
inc
mov
xchg
popf
in
dec
insb
pop
daa
in
fwait
repz
jge
stos
xor
jnp
aas
test
jecxz
psrad
sbbb
push
jmp
lods
lahf
imul
loope
or
sub
xchg
lods
or
cmp
sub
inc
mov
inc
push
adc
test
idiv
sub
mov
ret
lret
xor
test
shrl
lds
xor
dec
es
pop
andb
jle
dec
jnp
cmp
sub
movsl
mov
js
mov
jns
insl
cmp
add
add
xorb
ficoml
loopne
mov
fs
xchg
mov
loop
aaa
mov
mov
jns
push
jne
add
outsl
scas
int
cs
or
out
jnp
rcrl
mov
sub
sbb
enter
loope
int3
pop
add
and
leave
xor
push
mov
dec
aam
adc
lcall
mov
or
jae
or
inc
xor
add
hlt
out
div
es
outsb
mov
loopne
movsl
pop
pop
lea
push
fidivl
add
pop
std
cld
mov
cld
lcall
cmp
scas
shlb
movsb
push
jnp
rolb
aaa
inc
in
sbb
add
jmp
test
cmpsb
adc
jno
out
rcl
test
popa
or
lcall
mov
sbb
xchg
xchg
mov
repnz
jmp
sbb
cmp
aaa
sbb
xchg
ret
sahf
dec
pop
cli
fmull
test
jnp
push
roll
mov
push
jnp
xor
or
or
xchg
xor
je
lods
ficompl
cmpsb
lds
js
in
adc
sub
in
js
inc
sbb
ljmp
mov
ja
pop
data16
pop
mov
adc
ds
sbb
and
sub
xorb
adc
push
cmpb
pop
leave
rorb
jnp
cmpsl
pop
leave
add
push
inc
cmp
xchg
xchg
push
negb
sahf
nop
lahf
jp
or
arpl
jmp
stos
scas
adc
fwait
aam
mov
push
fistps
xor
xchg
cmp
sarb
out
sbb
mov
xchg
out
cmp
mov
xchg
jg
xor
mov
push
xchg
xchg
mov
sysenter
shll
adc
mov
add
xchg
clc
lods
outsl
dec
inc
das
or
inc
aam
sub
jbe
imul
add
push
pop
push
push
inc
loop
repnz
mov
mov
inc
rclb
cwtl
lahf
cltd
dec
xor
fmuls
cmp
pop
adc
in
je
and
lds
add
mov
mov
lret
dec
int3
mov
shll
ficomps
dec
scas
pop
in
sbb
repnz
outsb
xchg
adc
jnp
dec
jnp
test
xchg
imul
mov
movsl
stos
sub
add
stc
pop
mov
cmp
xor
enter
pop
leave
xchg
ret
cltd
push
jae
dec
mov
test
data16
or
sub
cmp
sbb
das
pop
add
test
out
push
cmc
pop
add
sbb
in
lock
rcll
mov
aad
gs
xor
xchg
lahf
shll
jecxz
inc
fisubrl
lret
add
insb
in
outsb
int3
jo
lret
add
fistpll
xchg
inc
sub
in
pop
popa
fistpll
adc
bound
sbb
or
fisttps
sbb
adc
sbb
sub
test
mov
adc
bound
sbb
dec
dec
imul
dec
mov
mov
cmpsb
rcrl
mov
stos
imul
addr16
insb
fsts
in
loope
adc
pop
call
add
stos
loopne
stc
popf
subl
mov
adc
imul
cld
call
dec
std
in
mov
push
scas
shrb
add
jl
ss
or
inc
orl
fdivs
sbb
call
xchg
xchg
mov
cmp
stos
test
bound
or
nopl
push
cmpl
mov
leave
push
fildll
sbb
sub
lret
jmp
sub
clc
and
sbb
sahf
jmp
clc
pop
mov
jb
stos
test
cwtl
add
outsl
lcall
mov
inc
cwtl
pop
cmc
xor
mov
fimuls
out
or
clc
popa
inc
mov
jle
inc
inc
cmpsb
imulb
push
addr16
cmp
inc
movsl
add
out
mov
mov
test
sbb
popa
mov
arpl
xor
push
sti
movsb
loopew
xor
lret
mov
out
insl
rcll
jg
xor
addr16
add
popf
jns
push
ret
push
inc
mov
and
sbb
in
stc
jl
orl
push
xlat
mov
movl
xchg
fs
push
xlat
mov
push
loop
sar
and
mov
sti
mov
or
fucom
fmull
cmp
int
aad
mov
jno
cli
shl
sbb
call
bound
sti
addr16
push
pop
adc
pushf
push
mov
mov
pop
xchg
or
fwait
inc
inc
into
bnd
cmp
lret
add
cmp
push
test
adc
and
xchg
movsl
sbb
and
fdivrl
xlat
jo
adc
cmpsb
lcall
adc
xor
aaa
mov
add
movsl
pop
jo
sub
sub
test
xor
arpl
stos
pop
sub
jge
adc
sbb
and
out
insl
inc
ret
repnz
sub
sarb
jb
daa
pop
cli
pushf
out
cmpb
fisubl
lods
sub
in
xchg
pop
mov
adc
mov
adc
movsl
mov
push
push
mov
in
pusha
or
test
cmp
lock
dec
imul
enter
std
push
rcll
xchg
pop
mov
mov
leave
or
movsl
sbb
aaa
xor
mov
fstl
xrelease
sbb
pop
repnz
mov
jle
ret
mov
test
int3
cmp
pop
popf
mov
xchg
aaa
inc
lods
cmp
fcoms
ret
pusha
fwait
xor
lock
js
rcr
mov
push
sbb
adc
repz
mov
jmp
sbb
or
xchg
cltd
ss
ret
scas
les
pushf
test
jl
fs
gs
cmp
xchg
lea
jo
jmp
cmp
loopne
test
add
push
jp
sahf
pop
adc
add
push
push
movsb
shr
loopne
hlt
leave
jne
mov
dec
js
jle
out
jmp
das
lods
jb
mov
xchg
popa
cmp
movl
lds
ljmp
xchg
dec
mov
xor
or
stos
mov
cmpsl
rcl
outsb
dec
or
insb
xchg
dec
imul
push
sub
fwait
pop
xchg
ss
dec
add
jmp
mov
and
insl
xor
xlat
mov
repz
jno
shrb
and
imul
cli
jmp
inc
and
pop
test
push
pop
daa
sbb
dec
mov
shl
dec
enter
mov
jp
xchg
gs
lods
pop
mov
mov
xchg
enter
push
push
xchg
not
xchg
addr16
sbb
adc
flds
imul
dec
nop
dec
push
leave
decb
sub
bound
fnstsw
pop
sar
add
xchg
mov
stos
call
adc
xchg
xchg
or
fldt
jbe
jo
cld
jo
shlb
xlat
xor
cli
xchg
sarl
jae
lods
mov
setbe
pop
clc
jbe
xchg
pop
xor
jmp
bound
cwtl
push
roll
cld
in
roll
mov
mov
pop
enter
mov
lods
leave
and
addr16
scas
push
pop
pop
cld
outsl
hlt
jle
adc
and
fwait
adc
sub
rclb
sarl
and
test
mov
fstp
mov
lahf
test
cmp
sub
pushf
clc
fs
xor
fs
cmovge
mov
jb
ret
lcall
arpl
add
pop
pop
adc
cmp
fwait
call
out
xchg
inc
aas
js
xchg
mov
fsubrl
inc
sbb
jg
cmp
out
jmp
ja
pop
mov
or
pushf
inc
sub
fimuls
popa
jg
loope
cmp
pop
ja
popf
loope
adc
jp
mov
lock
or
push
cmp
rolb
iret
xchg
mov
dec
out
out
mov
sar
cmpsl
push
pop
and
or
cmp
iret
jl
sbb
lods
xchg
jecxz
push
mov
or
inc
adc
push
jmp
data16
testb
aad
cmpsl
lahf
add
dec
sbb
into
jbe
pop
out
fnstenv
cmpsl
cmpsb
into
insb
dec
adc
sub
addl
outsl
jo
cmp
fidivs
enter
mov
xor
xchg
imul
mov
jge
bswap
shrl
xlat
sub
mov
sarb
add
pusha
dec
mov
pusha
aam
lcall
jmp
xor
bound
sbb
mov
test
pop
roll
mov
divl
dec
loop
jmp
cmp
into
push
xor
cmp
aas
sub
rcll
inc
mov
arpl
and
adcl
sbb
dec
out
lods
adc
orb
jmp
sbb
sub
shll
xor
mov
scas
jle
ret
daa
pushf
add
sahf
in
repnz
adc
xchg
fildll
inc
or
lahf
mov
ror
sti
sbb
xorl
rol
sub
adcl
fldenv
negb
push
sub
jmp
pop
test
cld
pop
lret
lret
cltd
push
mov
jne
jno
inc
clc
or
sbb
mov
add
mov
dec
cmc
adc
addr16
xor
add
out
int
xorb
out
jg
fimuls
xchg
outsb
add
scas
xor
sbb
mov
iret
push
add
push
orl
jb
or
in
lcall
cmp
pop
jo
imul
cmp
stos
push
or
cld
add
sub
rcr
imul
popf
mov
xor
xor
mov
sub
ds
xorb
pop
stos
mov
mov
fsubrs
pop
sub
in
inc
inc
mov
xorl
aaa
aaa
orb
iret
out
pop
sub
in
cli
setne
push
pop
je
jae
jae
mov
sti
adc
add
xchg
mov
cmp
add
jle
jmp
jb
ss
das
repz
insb
in
ret
fwait
sbb
pusha
dec
enter
or
lods
repnz
fs
das
insb
in
adc
and
mov
push
mov
out
jmp
mov
in
lock
or
aas
push
xchg
sti
mov
lret
inc
in
test
lock
js
xor
loopne
add
dec
scas
iret
idivb
orb
fadds
imul
daa
jae
adc
xchg
jnp
cmp
seta
nop
pop
sub
xchg
inc
test
xorl
jb
mov
mov
icebp
aaa
jno
xorl
inc
enter
push
mov
xchg
pop
push
jp
mov
test
movsl
fs
int
loope
pop
loopne
push
and
cs
popa
outsl
push
mov
int
xlat
ret
hlt
mov
faddl
imul
push
mov
mov
out
cs
mov
jecxz
or
lods
cmp
jns
mov
sbb
mov
jl
insb
lcall
fistpll
mov
cld
outsl
in
jg
dec
int3
pop
cmp
sub
sbb
or
jl
insb
lcall
fistpll
mov
cld
outsl
in
jg
dec
int3
pop
cmp
sub
sbb
or
jl
insb
push
pop
iret
dec
fistpll
mov
cld
outsl
in
jg
outsl
int3
pop
cmp
sub
sbb
or
jl
insb
lcall
fistpll
mov
out
andb
xor
in
sbb
jne
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
orb
push
in
cs
andl
xor
dec
sarb
mov
insl
scas
jge
or
sbb
inc
push
fstpl
in
cs
lea
pop
lods
outsb
mov
incb
jge
or
lods
cmp
push
imul
ds
dec
aad
subl
sahf
or
sbb
sub
pushf
dec
decb
mov
mov
mov
jle
pop
xchg
sti
idivb
or
push
pop
mov
bound
leave
data16
xor
mov
int
in
fnstcw
add
test
xchg
outsb
addl
nop
push
ficoms
bound
sbb
mov
pop
lods
loope
sbbl
sub
movsb
pop
and
adc
jae
out
and
adc
push
dec
jmp
jb
leave
xchg
push
jle
ficomps
jae
cwtl
fucom
adc
movl
sbb
sti
movsl
sahf
insb
mov
sbb
decb
fstpl
in
cs
lea
pop
lods
outsb
add
sahf
mov
arpl
sub
popa
stos
push
test
and
pop
mov
jmp
ljmp
jae
pop
in
jp
int
push
sbb
cs
in
cld
cmp
sbb
jle
negb
or
adc
jle
js
pop
mov
inc
out
dec
popf
inc
mov
pop
lods
outsb
mov
sahf
insl
scas
jge
or
out
cmp
push
in
cs
lea
pop
lods
outsb
mov
sahf
insl
scas
jge
or
out
cmp
push
inc
pushf
mov
loop
adc
mov
dec
aaa
mov
fildl
mov
adc
mov
sahf
push
sbb
add
daa
mov
js
xchg
addr16
pusha
popf
lret
jae
nop
ljmp
jbe
nop
dec
xor
push
out
jmp
inc
add
ljmp
and
shrl
js
add
mov
pop
lods
pop
sub
shr
add
inc
jl
ret
xor
mov
cmp
cmpsl
inc
and
movsl
std
in
nop
mov
xlat
cmpsb
cmp
or
and
push
push
arpl
mov
add
sbbl
out
ljmp
xor
xlat
jg
aad
xor
cwtl
sub
xchg
ficomps
out
inc
lock
xor
fisubrs
jae
add
lcall
clc
fdivrl
jle
repnz
popa
mov
out
cmp
nop
adc
or
mov
fistps
scas
sbb
incl
mov
jo
dec
in
dec
scas
add
or
sbb
jl
pop
into
cmp
fidivrl
mov
sub
cmpb
rcl
rcl
cmpsb
inc
sbb
movsb
cmp
or
loopne
bound
loop
je
mov
xor
enter
imul
sub
mov
xlat
xchg
jbe
add
push
pop
inc
fbstp
jo
test
jp
shlb
je
aam
rcrl
lret
out
mov
ljmp
dec
sahf
mov
repnz
call
jl
gs
fsubrs
test
mov
sub
jo
xor
ds
cs
jmp
divb
pop
iret
jge
daa
test
sub
int3
fildll
sub
push
inc
ficoms
inc
daa
mov
sub
in
mov
add
sub
mov
adc
sub
xchg
icebp
imul
dec
ja
icebp
test
or
jne
fdiv
jns
es
mov
or
ret
cmp
test
aad
pop
jnp
or
lods
pop
add
pusha
ror
ljmp
dec
mov
cld
mov
adc
mov
adc
adc
add
inc
xchg
negl
das
pop
cmpsl
xor
mov
add
push
lahf
repz
mov
lret
fidivs
in
add
xchg
inc
push
outsb
fcomip
hlt
gs
inc
call
sbb
jne
inc
fs
lcall
mov
fcmovne
test
xchg
jg
inc
bound
repnz
rol
push
or
inc
mov
nop
xchg
pop
repz
xchg
jecxz
outsb
stos
mov
mov
xchg
bound
push
pop
or
add
loope
and
or
lea
xchg
or
xchg
adc
mov
push
int
aaa
push
push
cmpsb
sub
xchg
mov
push
les
xor
loopne
sub
cmp
push
xchg
mov
cmc
pop
sub
aaa
mull
mov
mov
outsl
or
sbb
pop
test
jb
test
adc
stc
jb
pop
push
or
mov
add
lods
lock
push
mov
in
fisubl
push
mov
rcl
jne
mov
push
iret
dec
addr16
sub
cmp
cli
movsl
das
subl
stos
insb
jmp
push
xchg
and
mov
sbb
jp
aas
das
cmp
mov
add
fstpt
inc
jnp
xor
jb
ja
clc
xchg
xor
call
pop
adc
decb
ljmp
lods
daa
inc
lcall
cmp
jle
int
cmpsb
adc
adc
mov
aaa
adc
popf
mov
xchg
outsb
mov
test
xchg
cli
sbb
in
ja
xchg
cmp
inc
push
mov
ja
lock
push
or
inc
shlb
stos
mov
pop
inc
nop
adc
adc
lods
repz
fdivrs
cmpb
jo
in
aad
int
pushf
push
in
jb
test
sub
pmaxsw
roll
adcb
mov
push
mov
ret
mov
pop
pop
stos
stos
ret
js
les
xchg
pop
pop
xchg
scas
mov
dec
xchg
xchg
sete
adcb
pop
pop
or
rcll
xchg
dec
subl
cwtl
roll
sub
or
int
in
add
cmpsb
sahf
inc
data16
hlt
fsts
inc
xchg
xchg
loope
enter
xor
in
and
jae
inc
inc
aas
sub
push
adc
jecxz
push
jae
mov
push
adcl
push
mov
and
fsubl
xchg
sbbl
xlat
xorb
or
xor
lret
fistps
fbld
dec
dec
mov
in
hlt
and
add
sub
loop
into
pop
push
negl
mov
add
inc
movsl
stos
cmp
cltd
lods
xor
in
in
pushf
stc
in
push
or
xor
mov
add
pop
int3
call
add
push
add
testb
ret
dec
adc
jecxz
inc
add
dec
jbe
and
cmpsb
aad
push
cmp
lahf
fmul
mov
shll
repnz
xlat
xchg
andb
popa
xchg
inc
insb
jge
repnz
add
jnp
addr16
loop
or
mov
mov
mov
fidivrl
rclb
fwait
jge
in
xor
pop
lock
mov
mov
mov
mov
jmp
or
jmp
fdivr
orb
int3
mov
or
cmc
push
ret
out
loop
in
addl
jmp
adc
js
mov
hlt
fsub
add
frstor
in
and
cmp
inc
push
lret
sub
push
cmpsb
mov
pop
mov
jne,pt
or
or
out
push
popf
stos
xchg
cmp
and
inc
dec
shll
mov
stos
sbb
cmp
jnp
aam
into
jge
push
and
push
dec
mov
es
ss
test
inc
in
or
in
push
cmpsl
xchg
and
out
xor
and
inc
cld
pusha
jbe
jae
fs
out
pop
pop
iret
fwait
mov
pop
dec
lcall
bound
add
sahf
add
movsl
or
loop
mov
stos
mov
les
imul
mov
dec
inc
das
pop
pushf
and
mov
fcmovnbe
ficoml
mov
mov
inc
loopne
sub
push
or
xchg
stos
mov
pop
dec
or
aad
dec
aaa
cmp
add
jge
xorl
mov
xchg
or
adc
mov
lret
cltd
rolb
xor
int
insb
lock
cli
loop
adc
xchg
push
jnp
inc
test
add
push
int3
cmp
pop
popf
mov
inc
sub
cmp
movsl
testl
pop
fadd
dec
mov
push
mov
shrl
mov
out
ds
adc
xchg
add
jae
test
and
cmc
faddl
repnz
orb
push
std
stos
jbe
xchg
dec
movsb
incb
or
mov
ret
int3
mov
sbbl
popa
xchg
ss
add
mov
pop
cmpsb
push
add
xorb
inc
cmpb
xor
mov
xchg
cmpsl
push
jge
dec
gs
popf
jo
push
push
popl
dec
xchg
mov
adc
frstor
push
sub
cwtl
mov
and
movsl
inc
loop
nop
xor
aam
js
mov
cmc
popa
sub
mov
adc
ret
xchg
popa
daa
xor
ret
out
data16
pushf
xchg
sub
movsl
adc
sub
mov
fistl
scas
aas
push
sahf
lret
mov
insb
movsb
push
jno
mov
push
xchg
push
sbb
scas
rcrb
shrb
aaa
test
pop
mov
nop
jecxz
mov
cmpsl
insb
stos
stc
pop
test
xchg
test
add
roll
outsb
sub
push
movsb
mov
das
loop
adc
mov
gs
stc
std
sbb
push
jg
stos
push
ret
sub
and
insb
insl
xchg
add
push
outsb
rorl
cwtl
out
dec
pop
fisubl
cmpsl
mov
inc
add
aaa
xor
in
nop
or
dec
lods
adc
dec
inc
inc
inc
mov
pop
push
mov
int
or
cs
sti
xchg
cmp
test
es
lcall
push
pop
sbb
mov
push
cltd
and
xchg
outsl
push
imul
aas
push
and
neg
lods
aam
faddp
out
adc
sbbb
mov
lahf
test
or
mov
jl
push
nop
cld
pop
add
in
sbb
mul
add
scas
scas
mov
popf
roll
mov
mov
test
insb
fstps
push
adc
in
leave
and
loopne
lds
fwait
hlt
add
push
pusha
pop
stc
cmp
mov
mov
shll
mov
test
mov
xor
orb
test
into
push
outsb
sbb
mov
mov
xlat
jg
aaa
fsubrs
sub
adc
mov
scas
mov
sbb
out
lcall
int3
aas
sbb
jo
das
dec
or
sub
scas
lods
pop
out
icebp
xchg
fsubs
sub
and
add
ss
adc
insb
test
inc
subl
outsl
mov
fistpl
adc
lods
dec
xor
push
or
sahf
mov
js
and
in
xchg
jmp
ficompl
push
cmp
inc
fs
lret
cmpsl
xchg
dec
cmp
outsb
dec
addr16
pop
clc
and
sahf
xchg
cmp
mov
icebp
push
data16
fcoml
xor
std
loope
sahf
inc
adc
loopne
hlt
mov
arpl
add
stos
push
sub
repz
lods
lret
cmp
cmpsl
pop
mov
les
rorl
jbe
icebp
das
and
add
pop
push
xchg
or
aaa
xor
inc
and
pop
cmovb
add
rcr
push
inc
leave
mov
jle
ja
and
scas
xchg
adc
jle
das
out
je
push
dec
movsl
popl
pop
and
jbe
bound
lods
sub
test
mov
add
pushf
ja
clc
xchg
push
je
inc
mov
and
imul
jl
jae
xchg
push
fistps
lret
shll
lret
ror
fsubs
push
clc
mov
es
jnp
lcall
mov
mov
mov
jle
arpl
ret
sub
insl
and
rcpps
in
jae
test
stos
in
and
mov
clc
push
add
sbb
add
movsb
aad
jl
add
popa
gs
pop
popw
jne
jb
fidivrs
insb
sbb
and
cld
add
movsb
xor
mov
xor
xchg
js
call
iret
sub
pop
adc
mov
cld
lds
ret
lret
or
and
repz
push
repz
mov
push
test
mov
add
dec
and
dec
pop
fsts
lret
push
pop
pushf
in
sbb
inc
test
not
into
xchg
sub
pusha
ja
outsb
xor
pop
test
and
hlt
rorl
leave
imul
testb
mov
and
lcall
popa
push
sbb
out
xor
scas
test
adc
loope
andl
cmc
add
xor
jne
xor
mov
mov
pop
mov
jae
into
sbb
cmp
cmp
or
and
leave
mov
js
push
mov
std
xchg
add
cmp
sbb
ss
xchg
add
jl
ljmp
mov
mov
ret
setbe
stos
std
xor
sbb
add
and
pop
sbb
in
push
int3
add
jno
adc
xchg
xchg
jb
add
push
rcrb
push
cmpsb
gs
inc
in
jecxz
jne
push
and
jg
xchg
adc
xor
jns
pushf
shl
ret
xor
jbe
scas
dec
jns
jl
cltd
or
sbb
and
ss
and
mov
jbe
pop
and
and
add
mov
int
pop
and
sbb
in
gs
imul
enter
xor
test
jne
push
ds
or
leave
fcompl
xchg
subl
adc
push
stc
inc
jg
repnz
icebp
addr16
shll
stos
push
push
mov
insb
jno,pn
pop
sarl
push
pop
add
jg
inc
mov
mov
sbb
mov
lock
mov
std
fiaddl
sbb
stc
daa
loop
dec
sbb
dec
dec
jo
jbe
pop
scas
lahf
ds
push
pop
cmp
lea
outsb
mov
sti
repnz
push
mov
pop
fldln2
sub
pop
scas
popa
dec
xchg
sbb
ret
xchg
or
fs
sbb
mov
testb
imul
out
call
inc
fnstsw
enter
adc
dec
aam
lea
dec
imul
jns
cmp
sbb
cmpsb
fidivs
shlb
mov
adc
jge
clc
mov
imul
push
lcall
sbb
pop
pushf
xor
inc
popf
push
push
into
rclb
popf
test
adc
dec
lea
sbb
jg
add
sbb
xorb
dec
mov
ljmp
ljmp
fists
scas
loop
dec
pop
les
loopne
dec
mov
test
inc
fwait
pop
push
dec
push
sub
sub
mov
icebp
jbe
adc
arpl
and
sub
push
iret
repz
mov
jne
ljmp
sub
mov
pop
lods
sbb
xor
sub
pop
cmpsb
aam
aam
xor
adc
imul
mov
shl
xchg
or
subb
jge
dec
popf
addr16
ljmp
in
daa
push
or
frstor
sar
push
mov
pusha
loopne
out
ja
dec
xchg
jae
out
inc
int3
jb
sub
xor
xchg
and
xchg
cmp
push
inc
jo
arpl
insb
fldcw
jecxz
sub
mov
jl
push
test
mov
bound
jecxz
mov
sub
and
push
cmp
add
xor
call
lods
cmp
and
and
xlat
adc
and
dec
pop
negb
sub
sbb
add
cmp
xor
repnz
lods
jmp
rolb
int
sbb
cmp
lret
pop
push
movsb
xchg
inc
call
jp
push
fldcw
hlt
in
dec
std
mov
fstl
inc
pop
push
adc
push
movl
scas
lods
or
push
in
jl
sbb
cmpxchg
xlat
ret
cmp
and
inc
pop
pop
jno
shll
lods
and
inc
inc
or
jno
ljmp
sub
inc
adc
push
dec
out
jle
jo
sti
jmp
sbb
mov
push
jle
xlat
insl
in
xor
cs
jnp
testl
xor
outsb
rorb
adc
inc
sub
repnz
das
sahf
sbb
lea
ret
psllw
imul
or
cli
mov
mov
out
outsb
jae
mov
cmp
out
inc
rcrb
loope
adc
jo
mov
push
push
pop
push
push
rcll
cmp
xchg
push
fistpll
out
fmuls
testl
mov
push
mov
push
cld
inc
loope
lcall
int3
loope
pop
jle,pt
push
pop
aaa
inc
fidivs
jle
jne
cmp
into
ret
jp
push
push
fcmovnb
hlt
mov
cmp
out
and
ret
jecxz
push
push
and
shll
std
insb
xor
hlt
xchg
xchg
stc
cmp
insb
add
incb
inc
rclb
cld
pop
add
pop
jle
add
jg
xor
cmp
shrb
rcll
or
cmp
rcrl
sbb
adc
test
into
mov
sub
or
ljmp
pop
and
pop
cwtl
mov
fs
inc
xchg
jbe
lret
mov
sub
and
sub
and
test
jo
adc
dec
fildll
icebp
pop
pop
pop
ss
aaa
and
popf
sbb
mov
fldenv
cmp
je
fstps
xor
pop
and
stos
imul
aas
rcr
sub
lahf
or
cld
cmp
xchg
sub
mov
in
mov
and
pusha
test
aaa
mov
jecxz
push
push
jmp
std
dec
mov
fidivrl
ljmp
mov
in
leave
adc
xor
push
cmp
inc
out
scas
mov
std
jg
jp
mov
imul
and
sbb
lcall
daa
into
das
xor
stos
dec
or
pushf
xlat
shlb
iret
jecxz
ficoml
lcall
mov
cmp
push
adc
fwait
or
repz
jp
and
std
dec
jbe
mov
push
sbb
inc
fisubrs
jl
sub
inc
xor
popf
in
je
jl
insb
ret
xorb
adc
adc
jbe
jne
mov
jo
or
cmpsl
lds
pop
add
scas
and
xchg
and
inc
inc
stos
mov
sbb
cmpsb
sbb
add
cs
add
repnz
repnz
push
shll
jnp
test
and
and
sub
jmp
cmp
clc
cmp
add
dec
pop
cmp
rol
cmpb
jb
fidivrl
js
and
scas
insl
dec
dec
xor
adc
insl
push
test
mov
mov
pushf
outsb
leave
popf
movsl
sub
leave
pop
int3
adc
sbb
pop
inc
push
rcll
inc
call
push
jl
outsb
xor
jge
shrl
jne
lcall
repnz
cmp
push
dec
add
and
add
call
push
mov
dec
test
idiv
cmpl
jmp
push
dec
mov
adc
pop
cmp
xor
mov
loop
push
push
dec
xchg
jge
dec
lcall
pushf
adc
filds
dec
idivl
mov
sub
mov
mov
sbb
roll
shll
push
shl
push
cld
leave
pop
xchg
push
pop
push
push
lea
scas
gs
mov
add
inc
mov
cs
ja
lods
enter
jnp
test
mov
add
inc
and
mov
mov
push
movsl
ficomps
jl
xchg
xchg
dec
xorb
scas
test
mov
jmp
mov
cmp
mov
push
jmp
lret
in
pop
add
hlt
cld
int3
inc
adc
orb
sub
fs
jg
mov
imul
mov
ret
lret
ljmp
and
mov
sbb
jae
push
or
adc
dec
pop
int3
mov
sbb
jae
push
adc
mov
xlat
shlb
xchg
data16
cmpsb
pop
outsb
insl
pop
aaa
mov
inc
sahf
push
pop
mov
js
rcrl
dec
pop
cltd
in
inc
test
js
mov
mov
mov
mov
inc
test
dec
xor
add
lea
out
xlat
lret
sbb
lock
push
sbb
out
cmpsl
and
movsb
in
mov
sbb
xchg
cmpsl
ljmp
pop
mov
and
cmp
inc
xchg
inc
xchg
fdivrs
jg
push
roll
dec
mov
inc
test
lea
iret
test
iret
fcmovnbe
sbb
dec
fistpll
ss
bound
jae
add
clc
mov
mov
es
add
push
pop
mov
cmp
orl
call
pop
inc
into
sub
arpl
xor
jbe
pop
dec
into
aas
addr16
jnp
sub
sbb
cmp
pusha
xlat
xor
test
leave
dec
sarl
adc
in
mov
imul
add
ds
clc
or
rcr
adc
test
jno
aaa
cli
movsb
cmp
shl
lahf
mov
jne
dec
and
inc
cmp
arpl
and
xchg
mov
dec
rcrl
jne
cmpl
sub
in
fstpt
jae
out
jae
pop
out
push
xlat
loope,pn
lea
pop
lods
outsb
mov
sahf
insl
scas
jge
or
out
cmp
push
in
cs
lea
pop
lods
outsb
mov
sahf
insl
scas
jge
or
out
cmp
sahf
std
scas
std
mov
fisubrs
push
pop
sahf
fs
jns
or
out
or
push
gs
lea
pop
lods
outsb
cmp
xor
scas
jge
jp
xchg
and
adc
add
in
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
dec
ds
cs
jp
mov
or
fisubrl
mov
cwtl
scas
mov
ds
cs
jp
or
outsb
sub
dec
fidivrl
hlt
mov
fidivrs
jb,pn
bound
adc
outsb
xor
dec
roll
orb
mov
xor
loop
mov
std
lods
dec
mov
mov
ss
mov
lret
movsl
outsb
adc
icebp
and
scas
inc
dec
add
into
push
sahf
add
fidivrl
mov
fiadds
mov
cmpsb
clc
cltd
jmp
sahf
in
pop
cli
iret
popf
jle
push
rcrb
data16
rorl
pop
pop
sbb
jg
jle
mov
push
inc
fstpt
jne
lcall
mov
lcall
mov
sbb
jmp
or
push
fildll
sub
mov
insl
fsts
push
mov
iret
add
sbb
ds
cs
jp
sbb
pop
and
mov
jecxz
xchg
incb
mov
push
aas
std
addps
dec
jns
jl
cmp
ds
cltd
lock
loopne
xchg
call
and
push
or
sbb
inc
sub
imul
enter
xchg
icebp
sbb
outsb
ss
push
push
jp
adc
outsb
sub
dec
lret
scas
ljmp
out
stos
fidivrs
cs
jp
or
outsb
sub
dec
lret
scas
ljmp
out
stos
fidivrs
cmp
in
or
mov
sub
pushl
jmp
lcall
ror
mov
out
les
int3
push
add
inc
iret
dec
cmpsb
mov
mov
out
mov
fildll
mov
mov
mov
mov
add
dec
mov
push
push
jb
hlt
fldenv
into
dec
cmp
icebp
sarl
clc
mov
pop
jge
in
push
inc
push
xchg
cmp
dec
push
sub
aam
loope
add
push
shlb
pop
ja
adc
mov
enter
mov
dec
rclb
shl
pop
xchg
lds
scas
movb
dec
ja
sub
out
cltd
xchg
jnp
outsb
jmp
adc
mov
popf
pop
mov
aaa
outsb
pop
dec
jg
adc
fnstsw
sarb
or
and
cmp
jae
xchg
nop
sbb
xchg
mov
int3
fcomps
loopne
pop
out
pop
ret
insb
jle
pop
mov
les
call
cmp
fidivrs
cmpsb
cld
pop
or
xor
shll
push
daa
cmp
mov
stos
cmp
dec
mov
mov
jnp
pop
out
imul
mov
lods
add
add
pusha
cmpsl
loop
hlt
test
lahf
push
add
inc
add
shll
sub
stc
es
push
push
add
add
adc
fmull
mov
xor
mov
xchg
fstps
fcmovnb
insb
fldt
jae
add
outsb
cmp
int
int
pusha
or
xlat
push
imul
jnp
lds
push
xchg
and
test
push
bnd
xor
cwtl
rcrl
jae
fldenv
and
inc
jmp
mov
jne
hlt
pop
cmp
lea
mov
jb
ss
shll
and
iret
pop
fiadds
sub
jae
or
cmp
movsb
arpl
jne
and
xchg
loop
sbb
rolb
je
popf
insb
jne
mov
fidivrl
xor
xor
sbb
mov
adc
or
push
int3
mov
std
jno
push
leave
push
sbb
or
adc
lahf
and
xchg
dec
push
arpl
mov
mov
and
imul
cmp
and
test
test
and
mov
sbb
or
adc
test
scas
jbe
cli
cmpsl
inc
shrb
mov
test
in
movsl
leave
xchg
xchg
mov
jl
cmpl
sbbb
cmc
mov
pop
cmp
push
or
scas
js
push
call
xchg
jne
icebp
inc
sub
movsl
shll
lods
push
lcall
das
jne
mov
lret
and
mov
inc
add
cmp
or
mov
pop
mov
sbb
sub
mov
push
cmp
lcall
cmp
xor
sub
mov
adc
cmp
fsts
ficomps
xor
cmpsb
ljmp
cld
push
data16
add
push
jl
cmpsl
scas
sbb
pop
adc
mov
mov
add
mov
hlt
mov
popa
push
xchg
shrl
out
cmpsl
push
fs
sub
fwait
lahf
lods
jmp
fldt
push
dec
and
loope
loope
gs
inc
cld
add
imull
inc
loop
cmpsl
mov
jns
int3
ja
adc
faddl
lods
sti
popf
ret
ss
aam
xchg
cltd
push
and
out
adc
add
inc
out
flds
pop
dec
lds
fwait
and
pop
ret
pusha
shlb
pop
mov
popa
add
mov
gs
mov
pop
xchg
dec
jo
jg
or
mov
mov
divb
push
dec
call
jb
in
add
test
push
jg
lock
std
dec
cli
ret
les
inc
mov
jp
and
hlt
lods
std
xor
loopne
xor
out
pop
roll
sbb
sub
icebp
cmp
adc
mov
fsubrl
lods
bound
and
mov
mov
mov
mov
jge
into
adc
lcall
push
adc
adc
inc
mov
fwait
ss
mov
mov
dec
leave
mov
imul
test
shlb
xbegin
sahf
cmc
mov
push
iret
ss
in
fistl
ljmp
loope
mov
and
and
cmc
outsl
push
dec
dec
in
loopne
xor
lea
sub
mov
imul
jp
push
sub
sub
sbb
xor
cltd
stc
mov
dec
sbb
lock
andb
xchg
popf
insl
cmp
adc
ljmp
sub
hlt
mov
bound
push
insb
mov
shll
int3
lods
pop
shll
xchg
add
push
mov
cwtl
mov
jge
les
into
aas
mov
mov
mov
xchg
or
mov
xorb
mul
lahf
xor
add
lds
jmp
loopne
mov
leave
mov
ss
xchg
loop
scas
xchg
inc
getsec
cmp
lahf
lcall
dec
jnp
and
mov
xchg
inc
inc
ljmp
in
jns
cmp
in
adc
pop
sarb
mov
dec
jno
outsb
jnp
pop
mov
adc
sub
xorb
stos
pop
lock
sub
loopne
xor
sahf
loopne
insb
jno
xchg
jo
or
out
sahf
inc
fildll
xchg
pop
pop
lea
into
in
mov
pop
stos
repnz
xchg
fimull
gs
hlt
mov
test
push
pop
sbb
dec
add
jnp
icebp
or
cmp
inc
and
adc
sbb
pop
gs
int3
and
and
and
lods
call
scas
inc
inc
repnz
gs
dec
jbe
shl
push
inc
in
cmp
mov
jmp
ss
add
cmpsl
int
lret
int3
icebp
ds
mov
vfrczps
xchg
arpl
adc
iret
mov
fdivl
xor
jecxz
fcompl
cli
mov
jge
mov
es
jle
sti
adc
in
out
popa
cs
mov
xor
in
add
pop
or
imul
dec
add
pop
xlat
mov
adc
icebp
fwait
or
sbb
push
xlat
pop
push
push
adc
xor
jmp
xor
pop
std
lret
mov
inc
mov
in
xchg
mov
mov
dec
ret
sti
cmpsl
push
mov
cmp
and
test
fidivrl
mov
int3
dec
dec
stos
jg
pop
adc
mov
cltd
loopne
fdivs
add
fisttpl
jmp
cmp
mov
cltd
aad
mov
dec
cmp
out
jecxz
xchg
push
mov
arpl
insl
imul
add
cli
scas
cli
pop
mov
int3
mov
lods
push
xchg
sbb
mov
out
addr16
inc
and
jb
int
bound
pop
es
lock
jae
scas
mov
jbe
dec
dec
and
mov
mov
jne
mov
test
scas
out
mov
fcmovnb
imul
addr16
jno
sahf
xor
sbb
push
xor
sahf
ret
outsb
sub
arpl
xchg
jl
mov
aaa
and
mov
jo
test
push
aam
cmp
mov
adc
push
and
rorb
mov
cmp
incb
insl
push
push
dec
daa
scas
jns
cmp
cmp
pop
cmp
andl
pop
pop
int
arpl
loopne
sbb
adc
xor
and
in
jecxz
clc
les
shl
adc
notl
mov
insl
inc
nop
add
dec
sub
mov
xchg
cltd
mov
push
jmp
repnz
push
ror
outsl
sbb
fdiv
xchg
jbe
imul
inc
leave
movsl
pop
fwait
jno
arpl
xchg
fcmovu
pop
xchg
mov
stos
movsb
mov
jg
test
jle,pn
ret
pop
or
out
xchg
outsl
cmp
imul
adc
cmp
das
sbb
test
jbe
arpl
es
std
dec
cmc
adc
pushf
sub
aaa
cmp
fldl
loop
sbb
add
loopne
pop
inc
xor
add
xlat
adc
mov
enter
and
imul
icebp
jle
popf
mov
loop
out
mov
cmp
xchg
mov
or
or
fdiv
sar
adc
gs
inc
fwait
sbb
pop
negb
xchg
je
xchg
and
dec
call
loopne
cmp
das
outsl
jle
fnstenv
sbb
in
adc
jno
dec
xchg
inc
lds
lock
std
jl
movsb
cmc
xchg
hlt
mov
loop
int3
inc
mov
in
aaa
sti
sub
sbb
lock
jl
aas
test
mov
push
push
cmp
mov
mov
fdivrs
cmpb
out
lahf
mov
mov
pop
dec
xchg
push
pop
inc
pop
cmp
pop
sbb
push
inc
test
hlt
mov
adc
je
mov
add
or
sahf
popf
adc
sub
jp
mov
and
sub
cmp
lcall
dec
int
xor
sbb
and
jg
or
mov
adc
jle
int
fsubs
cltd
data16
sbbl
dec
int3
xchg
out
lcall
nop
fcompl
rcrl
or
cld
adc
dec
mov
or
rorl
sahf
mov
sti
mov
stos
add
mov
push
and
fsubrp
in
sub
push
cmp
mov
cmc
push
scas
lds
loope
and
outsl
xchg
pop
sub
outsl
pushf
arpl
in
out
sub
repz
dec
fists
js
fstl
cs
push
jecxz
sub
in
iret
and
rol
test
add
enter
mov
jmp
pop
xchg
sahf
loop
dec
or
dec
inc
popa
dec
xor
mov
adc
sar
jno
loope
fists
rcrb
test
call
outsb
ret
insb
xchg
in
in
mov
cld
pop
pop
jnp
int3
fmull
push
adc
cmp
repnz
and
je
fsubl
or
jo
imul
inc
adc
sbbb
idivb
cmp
lcall
jnp
dec
pop
popa
xor
push
ja
and
lock
xchg
push
aad
lahf
adcl
and
aad
mov
pop
jno
js
repnz
movsl
jl
out
adc
mov
idivb
mov
aam
cwtl
test
sbb
mov
sbb
rcr
or
pop
and
ss
ja
fdivrs
jl
jl
and
and
mov
das
ja
cmp
or
test
cmp
mov
ss
dec
sarl
rorl
lret
aam
loope
aas
sbb
popf
int
sub
cmp
scas
add
cmp
outsb
cmpsb
loop
mov
and
fcom
aam
decl
add
add
pushl
pop
enter
fists
mov
insl
mov
pop
pop
lret
fstpt
or
sysenter
nop
pop
je
int3
and
into
push
loopne
sbb
mov
mov
hlt
pop
cmpsl
jmp
mov
mov
pop
shlb
icebp
jp
add
pusha
xor
hlt
or
ror
ret
cmpl
lds
xchg
sbb
iret
mov
mov
lcallw
pushf
mov
sti
mov
popa
xchg
fisttpl
ffree
add
cwtl
nop
cmp
xchg
enter
jae
mov
inc
dec
je
scas
dec
xchg
movsb
add
sbb
dec
mov
jle
adc
mov
fimuls
mov
js
arpl
jl
or
fs
xor
loop
popa
inc
fs
inc
les
add
inc
sbb
push
add
aas
sbb
movsb
and
pop
aas
add
xchg
inc
stos
and
push
dec
push
movl
out
enter
out
pop
and
stos
loope
lcall
outsb
sub
in
lods
xchg
sbb
add
notb
push
pushf
pop
push
sbb
xor
sti
fstpt
mov
push
pushf
pusha
push
adc
je
in
test
sbb
decb
mov
push
cmpsb
jle
test
jle
and
and
push
jo
stos
mov
pop
xchg
dec
dec
adc
shlb
inc
mov
mov
sub
pop
xchg
adc
inc
stos
xor
push
test
call
rorb
clc
pop
imull
mov
in
and
imul
push
ret
int3
mov
lods
call
stc
mov
pop
jmp
jnp
pop
pop
pop
xor
adc
mov
leave
inc
fstpl
jl
test
jl
out
mov
aaa
sti
inc
lods
fs
int
into
xchg
inc
mov
xor
test
lds
shl
lcall
add
sbbb
fwait
mov
std
clc
mov
outsl
outsl
cli
pop
mov
xchg
or
xor
popl
cltd
xor
sbb
add
sbb
aas
inc
rcl
xchg
jnp
loopne
mov
ds
aad
addr16
sahf
sub
stos
sbb
test
and
adc
adc
pop
sbb
repz
subl
insb
lods
ja
push
mov
add
pop
mov
sbb
jle
jmp
gs
icebp
inc
sti
addb
aas
mov
out
or
add
cmp
mov
adcb
mov
push
roll
ret
xchg
jnp
insb
std
and
and
xorl
out
lahf
sti
mov
je
cli
mov
cmp
pop
jle
repnz
sub
or
push
mov
adc
icebp
lds
xor
mov
xchg
jecxz
xor
sti
pop
fcmovbe
and
cmp
xchg
ret
jno
sub
pop
dec
dec
test
pop
imull
pop
call
cmc
mov
lods
data16
imul
arpl
pop
xlat
cwtl
jbe
int3
xchg
fwait
push
ss
sub
pop
adc
pop
xchg
push
jl
push
push
pop
xor
leave
inc
mov
and
push
mov
imul
sub
pop
subl
std
mov
arpl
push
fisubl
mov
cltd
xchg
cmp
das
imul
xchg
lfs
les
and
outsb
jae
je
test
dec
int3
sti
fdivp
push
jle
sub
in
push
lahf
mov
mov
push
pop
push
fisttpl
jge
cmp
xor
push
add
jl
inc
jg
je
mov
add
test
xchg
ss
outsl
mov
mov
jbe
arpl
cmpsl
ss
dec
cmpsb
mov
jecxz
xchg
inc
xor
fs
mov
insl
xor
scas
std
bound
int3
rorl
aas
ret
xchg
xchg
and
lods
fcompl
xchg
das
sysexit
mov
aaa
fucomp
or
int3
std
add
in
lret
mov
jnp
push
mov
mov
out
loopne
sbb
jl
cmovl
mov
loop
cmpl
xor
in
push
out
mov
inc
lds
push
jns
mov
pop
pop
mov
xchg
push
pop
stos
lods
lcall
sbb
pop
sbb
testl
shrl
push
dec
in
in
or
mov
sar
ds
andl
pop
enter
imul
mov
mov
push
pop
in
sbb
out
fs
enter
repz
std
mov
jo
mov
cmpsb
jne
fiaddl
dec
jno
into
ss
jne
shll
lret
out
inc
push
mov
ret
push
mov
jne
inc
icebp
xchg
aad
fiadds
pop
and
sahf
pop
mov
cld
mov
dec
sbb
adc
xor
push
push
xchg
jmp
aam
jb
roll
lds
sub
sub
andl
jno
fwait
inc
mov
in
or
sbbl
cmp
xchg
pop
jb
mov
push
xchg
mov
adc
lds
sarl
lods
sti
fptan
inc
cmp
faddl
mov
mov
pop
mov
iret
fdivrs
jmp
pop
pop
mov
jle
lods
jg
jb
sub
mov
add
sub
cmp
jb
xchg
sub
mov
push
jb
ror
mov
sbb
jnp
stc
lock
popa
mov
popa
scas
cli
fabs
sub
sbb
add
sbbl
les
es
rorl
xor
inc
sbb
aam
xor
mov
dec
cmp
insb
mulb
je
and
or
mov
mov
jmp
cmp
cmpb
ficoml
pop
mov
push
sbb
pop
cld
adc
mov
mov
insl
dec
jo
cltd
test
mov
sub
pop
inc
outsl
xor
xchg
jmp
mov
add
jns
outsb
jmp
or
pop
sub
mov
loop
pop
fidivrl
adc
cmpsb
add
push
imul
sub
cmp
jno
mov
in
sub
pop
movsl
jno
fsubp
shlb
ret
or
jmp
in
into
scas
stc
and
loop
insb
aad
orl
mov
or
fisttpl
cmp
int3
out
enter
ljmp
es
sar
mov
repz
jns
xchg
iret
outsl
inc
inc
vpsrad
pushf
outsl
loop
xchg
cld
jmp
pop
scas
lds
push
and
pop
cmp
xchg
enter
bswap
stos
shlb
pop
mov
gs
mov
sub
jge
fdivr
mov
mov
outsb
and
jge
bound
xlat
dec
inc
mov
sub
loopne
leave
jbe
lods
aaa
push
out
fwait
push
jbe
loopne
mov
loopne
fsubl
out
add
add
ret
ret
leave
add
scas
jnp
mov
les
test
mov
aad
jl
xor
xor
mov
sbb
mov
xor
out
outsl
ret
dec
das
xchg
and
test
fdivr
cs
add
out
xchg
push
in
out
addr16
pop
sti
jp
fwait
je
leave
test
insb
adc
imul
pushl
mov
cwtl
inc
sbb
iret
mov
push
xchg
ljmp
ja
xchg
and
bnd
scas
out
out
xchg
mov
cmc
inc
fnstsw
imul
jae
xor
int3
sbb
mov
jmp
dec
shll
fisttpl
sub
fcmovu
mov
jle
test
inc
repnz
jbe
ja
cmp
and
cmp
add
dec
pop
add
fwait
inc
adc
inc
loope
xor
sub
add
insb
adcl
hlt
sub
jns
call
ret
pop
gs
loope
cld
mov
adc
ret
dec
push
es
add
and
xor
jnp
cmp
pop
dec
or
in
jae
and
jg
sarb
sbbb
gs
enter
jl
pop
and
add
fsub
outsb
cmc
sub
pop
hlt
pop
nop
xchg
sti
addr16
rclb
pop
in
adc
mov
popa
mov
in
pop
or
adc
je
xchg
sub
fdivr
fcomip
outsb
jb
mov
push
push
cld
inc
inc
daa
mov
iret
mov
hlt
idivl
faddl
mov
mov
sahf
ficompl
icebp
loope
push
jno
stos
cli
pop
adcl
dec
jecxz
in
loopne
test
ja
jne
lcall
jne
shrb
lods
mov
lret
xor
imul
clc
push
pop
sub
inc
sbb
xchg
xor
sub
xchg
and
jge
mov
cmpsb
push
cltd
imul
xchg
pop
add
in
or
cwtl
les
call
ja
loopne
cmp
jg
inc
es
mov
fsubl
gs
ret
shll
pop
inc
std
stos
mov
or
pop
cld
push
cwtl
clc
or
pusha
cld
jno,pn
pop
cmp
lahf
push
mov
insb
xchg
cltd
jge
xchg
fsubrl
mov
sti
inc
xchg
scas
sbbl
dec
pop
xchg
ss
imul
enter
xchg
push
mov
addr16
pushf
mov
aaa
ds
dec
xor
ret
sbb
or
mov
cwtl
cs
pop
jp
or
outsb
sub
dec
lret
scas
ljmp
out
stos
fidivrs
cs
jp
or
outsb
sub
dec
lret
scas
ljmp
out
stos
fidivrs
cs
jp
or
outsb
sub
dec
lret
scas
ljmp
out
stos
fidivrs
imul
or
jle
out
stos
fidivrs
add
sahf
cli
stc
std
jbe
adc
inc
xor
jle
dec
test
dec
mov
cmpsb
xor
mov
cmp
cmp
jns
jns
mov
and
jmp
sbb
sub
jns
nop
mov
xor
pop
rcll
push
jecxz
ljmp
lds
int3
aaa
fidivrl
ret
mov
lock
fnsave
xor
es
ja
cmp
sub
mov
and
and
inc
add
daa
andl
sbb
and
push
int3
loop
mov
xor
jbe
push
cmp
dec
fucom
lahf
jg
push
popf
sub
xchg
fidivrs
xchg
mov
cltd
stos
test
ds
mov
push
out
pop
out
leave
and
push
sbb
adc
push
ret
pop
shr
mov
test
jge
into
insb
fwait
cmp
and
xchg
test
xlat
cmp
shrl
je
or
or
and
in
sub
xchg
popf
imul
leave
inc
lock
add
push
mov
mov
in
or
cmp
push
mov
test
xchg
out
pusha
lods
popa
stos
jl
push
fsubl
or
imul
cltd
cmp
aas
mov
sti
lea
mov
js
pop
cmpsb
jp
cmp
ss
fistps
enter
enter
movsl
jmp
sbb
sub
cmp
imul
mov
push
jmp
sbb
sub
cmp
imul
stos
loope
mov
xchg
cmc
xor
push
inc
cmp
repnz
ljmp
xor
notl
pop
xor
adc
or
pushf
mulb
out
loop
mov
xchg
mov
test
rcll
push
or
call
iret
in
mov
xchg
adc
jp
dec
andb
pop
mov
and
jle
push
test
mov
or
push
sub
or
add
push
movsb
push
das
mov
adc
daa
cmpsb
insb
int3
mov
and
push
adc
imul
sbb
jno
mov
xchg
jmp
adc
imul
or
and
in
movsl
mov
imul
inc
dec
add
inc
dec
mov
ret
jl
sbb
push
dec
mov
sahf
dec
rorl
pop
push
or
cmp
add
stos
add
cld
lods
jge
cwtl
adcb
adc
xor
or
neg
or
dec
inc
add
mov
sti
jg
mov
jb
add
andl
sahf
or
adc
cmpsl
xchg
adc
add
or
leave
ret
imul
lock
add
test
test
out
adcb
mov
mov
fimuls
enter
stos
std
cli
stos
pop
sub
negl
dec
lods
or
sbb
movsl
cwtl
and
int
cmp
loopne
xlat
icebp
and
mov
lret
movswl
lods
das
jbe
push
inc
stos
sub
jmp
bound
jbe
jge
sbb
dec
pushf
fst
sbb
dec
dec
jmp
adc
add
lret
flds
outsb
lods
cmp
mov
aaa
test
and
push
xor
lds
mov
je
fildl
call
pop
jbe
lret
xor
mov
lods
jne
mov
inc
pusha
jmp
sbb
jle
je
adc
jecxz
add
mov
and
cli
cs
rorl
xchg
mov
cli
xchg
mov
ja
push
pop
mov
aas
mov
das
dec
in
movsb
rep
frstor
add
push
mov
adc
xchg
or
mov
pop
sarl
loop
in
jge
stc
inc
aam
mov
xchg
fldl
das
into
mov
inc
jg
repnz
stc
sarb
xchg
aas
pop
push
popf
pop
hlt
scas
mov
inc
lret
cwtl
mov
push
jmp
pop
cmp
push
mov
xchg
mov
stos
xchg
push
mov
imulb
shl
mov
sub
dec
or
mov
cmp
sbb
iret
cmp
cmp
sahf
jbe
jp
movsb
or
or
sbb
aas
mov
jmp
and
test
andb
mov
jns
cltd
inc
push
and
and
and
add
sub
inc
mov
fistps
jle
mov
cs
cs
sub
cmp
or
cltd
aam
ret
jp
ja
push
cmpsl
icebp
ss
mov
lret
shrb
cli
pusha
mov
jp
push
mov
mov
xor
mov
leave
mov
lds
leave
mov
or
addl
mov
clc
gs
dec
xchg
daa
ror
mov
jp
pusha
js
jmp
or
rorb
add
test
mov
mov
mov
inc
not
fldcw
fsubs
mov
add
aad
rorl
stc
mov
or
out
int
adc
popf
mov
loopne
xor
test
inc
xlat
std
fimuls
or
cmp
inc
sbb
ret
aad
test
xorb
push
inc
loop
sbb
mov
push
cmp
jp
cmp
int
mov
pop
add
cmp
push
aam
mov
mov
inc
bound
and
out
jbe
cmp
xlat
das
scas
jmp
sub
je
movsb
jne
leave
in
adc
xchg
mov
pop
lahf
arpl
ret
inc
mov
loope
mov
fs
loopnew
pop
or
leave
loop
ja
ljmp
insl
xchg
into
inc
push
push
inc
repnz
aam
insl
inc
adc
testl
mov
outsb
mov
xor
xchg
jmp
cs
add
mov
push
ja
int
leave
stos
lcall
jno
inc
adc
ljmp
loop
adc
push
xor
xor
icebp
mov
in
nop
stos
xchg
lods
mov
push
mov
xorl
sub
sub
mov
dec
xor
gs
test
pop
inc
test
lcall
gs
icebp
jns
xchg
dec
push
mov
mov
fisubrs
int
sbb
inc
test
in
mov
test
cld
scas
andb
cmpl
sbbb
add
or
xor
jge
push
cld
adc
and
xchg
mov
and
dec
inc
orl
push
push
xor
stos
in
mov
or
xor
icebp
inc
mov
mov
lahf
cmp
dec
cmp
push
push
popf
mov
push
loope
jmp
mov
or
cmc
push
popa
sub
fisttps
mov
inc
pop
orl
xchg
mov
mov
pop
jno
hlt
rclb
add
insb
das
cs
mov
dec
aas
rcll
sub
lret
jl
shrb
repz
pop
or
fcoml
xchg
leave
push
jae
pusha
fmull
mov
notl
sti
jns
testl
test
aam
repnz
daa
pushf
ret
cmc
loop
push
imul
in
cmp
adc
ret
ljmp
mov
cmp
lahf
xchg
cmc
call
xchg
inc
jl
adc
pop
mov
ret
loopne
or
push
xchg
pushl
jl
mov
dec
insl
pop
pop
scas
push
mov
or
in
pop
pop
xchg
outsb
jo
push
and
mov
jle
xor
pop
add
les
xor
inc
cs
out
cmpsb
outsl
icebp
mov
loopne
and
lds
outsl
scas
fmuls
dec
decb
fiaddl
outsl
rcll
mov
cld
negl
aaa
and
sub
pop
ret
mov
insb
pop
sub
sub
cmp
std
sub
movsl
bound
cli
shr
mov
repnz
rep
loopne
sub
jmp
add
mov
into
fcoms
int3
div
push
jge
ljmp
pop
or
ja
sbb
je
cwtl
ljmp
inc
sub
sub
mov
jge
xchg
jecxz
adc
mov
jle
xchg
xchg
jle
mov
or
fstpl
or
or
gs
arpl
mov
pop
xor
call
mov
inc
cmp
adcl
js
mov
jae
sbb
push
push
pushf
and
out
fstl
in
jmp
push
dec
or
mov
stc
xchg
ds
jae
imul
xor
jae
pop
pushf
jbe
das
les
or
jge
shl
lea
enter
in
imul
nop
test
lods
xlat
cs
sbb
sub
adc
std
inc
data16
mov
mov
jmp
loop
test
pop
mov
cmp
xor
jp
movsb
fildll
adc
push
xchg
xlat
andl
add
mov
pop
adc
cmp
sbb
mov
stc
jb
sub
stos
loopne
adc
mov
or
pop
and
inc
push
inc
imul
pop
sub
push
dec
data16
add
test
cli
push
xor
or
fsub
pop
push
rdtsc
push
aam
mov
sub
psubusb
daa
repnz
cltd
jmp
push
int
jg
inc
ret
adc
dec
loop
addr16
inc
pusha
push
cmpsl
test
inc
and
inc
and
jmp
sbb
int3
fcomip
fmuls
cmp
stos
imul
add
ss
mov
push
je
xor
and
xchg
ss
add
ret
mov
xchg
push
mov
andnps
dec
mov
js
pop
adc
mov
or
int3
inc
scas
in
sbb
stos
push
outsb
xor
mov
inc
or
aad
sub
in
ja
test
cli
repz
mov
loope
mov
aad
popf
jns
fwait
orb
pop
pop
mov
cmpsl
rep
data16
inc
lods
mov
jle
fbld
and
cmc
sub
loopne
xchg
pushf
sub
fistpl
pop
cmc
gs
test
add
arpl
js
movsb
fiaddl
andb
mov
les
pop
enter
fwait
aam
add
dec
sub
mov
or
push
inc
adc
leave
jb
mov
mov
adc
insl
pop
mov
and
mov
inc
ficompl
jae
unpckhps
sub
jns
stos
xchg
cmp
or
out
daa
test
cmp
add
add
ljmp
fwait
mov
push
and
imul
xchg
cwtl
add
testl
add
mov
and
fdivrl
xlat
mov
sbb
xor
mov
ret
jbe
sub
mov
xor
cmpl
adc
or
mov
insl
subb
add
mov
pop
aad
xlat
test
idiv
jbe
call
jl
arpl
push
sub
popf
cmp
xchg
mov
setge
popa
fsts
lahf
lods
data16
daa
pop
test
stc
test
mov
arpl
iret
mov
xor
gs
sbb
mov
out
adc
dec
repnz
loop
mov
sysexit
jmp
fiaddl
sbb
mov
pushl
test
arpl
std
mov
mov
arpl
push
inc
or
loop
or
xor
loopne
and
lea
push
cld
jmp
jg
push
into
out
mov
test
ljmp
jp
scas
cmpsb
dec
mov
movsl
or
jmp
dec
sub
xor
nop
lds
pop
pop
and
clc
shlb
push
mov
dec
nop
pop
lock
jg
jnp
mov
xlat
xor
sub
out
fcompl
out
push
jmp
lcall
cld
in
icebp
test
stos
push
add
fisubs
mov
push
and
lock
sbbb
mov
push
cmp
scas
lock
in
or
and
pop
into
xor
dec
pop
cld
imul
lds
mov
pushw
js
sti
les
mov
shrl
add
lods
into
ficompl
gs
cmp
xor
cmpsl
push
add
imull
push
out
adc
add
test
loope
mov
sbb
dec
xor
jae
pop
cmc
bound
call
ljmp
bound
mov
pop
sub
mov
sbb
xchg
out
cmp
cwtl
jp
xchg
int
jmp
mov
outsl
insl
add
mov
aas
ret
sarl
sbbb
mov
out
movsl
adc
add
sti
inc
test
add
xchg
in
mov
sub
add
jecxz
mov
cwtl
les
out
xchg
mov
xor
out
pop
jg
pop
pop
movsl
repz
aam
xchg
sbb
lods
fsubl
jp
and
sbb
fs
jg
xlat
sahf
fidivs
stc
inc
hlt
ret
jbe
sahf
data16
jge
in
sbb
je
dec
mov
sbb
xor
cltd
das
dec
inc
dec
jae
sbb
adc
and
sbbb
in
xchg
bound
popf
dec
aad
mov
mov
cwtl
outsl
xchg
ret
inc
movsb
shrl
cmp
inc
out
push
xor
test
rolb
and
mov
mov
or
sbb
push
fbstp
daa
dec
and
cli
sbb
fdivrl
and
jg
inc
fiaddl
dec
out
lock
imulb
pusha
int3
or
mov
mov
pop
lcall
hlt
out
mov
sub
mov
xchg
jmp
rcr
jbe
dec
sbbb
insl
pop
stc
and
jno
mov
xchg
jmp
push
push
add
push
lock
mov
mov
out
and
push
icebp
jns
push
repnz
sahf
jp
arpl
stos
fs
sub
addl
fiaddl
bnd
insl
or
xchg
xorl
in
mov
xor
outsl
mov
inc
pop
rorl
jecxz
nop
push
scas
out
sbb
mov
pop
sbb
sub
mov
xor
loope
xchg
imul
xchg
cwtl
jne
mov
add
psubw
gs
dec
mov
cmp
data16
lret
inc
xchg
ret
mov
scas
and
dec
inc
pop
js
cmp
mov
loopne
mov
inc
push
lds
push
insb
fidivs
std
xor
xlat
xor
ret
lock
ja
ss
xchg
sub
sub
inc
xorl
push
clc
or
outsb
imul
cmp
fildl
fwait
and
enter
dec
xchg
aam
inc
add
mov
sbb
jno
sub
or
aaa
push
add
sub
and
int
cmpsb
adc
mov
je
lret
lds
cmp
adc
mov
clc
sahf
inc
xor
sbb
call
cmp
and
ljmp
addr16
push
xor
add
adc
sub
adc
xor
sub
fcoms
mov
es
sub
jne
adc
and
mov
fadds
popf
das
xchg
cs
in
xchg
daa
pop
push
fbstp
and
les
pop
pop
pop
bound
sub
imul
pop
out
test
mov
adc
add
xchg
dec
jbe
iret
cwtl
xchg
and
mov
roll
pushf
mov
loop
xchg
jbe
cltd
and
pushf
mov
ficoml
inc
lea
push
mov
lods
sbb
pop
jl
and
xchg
icebp
mov
in
push
inc
mov
inc
jecxz
aaa
cld
mov
add
mov
hlt
pop
sbb
dec
sub
mov
fldcw
add
mov
or
inc
lock
add
add
dec
mov
jmp
test
mov
lea
fisubl
mov
repz
xchg
adc
loop
mov
xor
cltd
fstpl
mov
repz
xchg
rorl
cmp
add
vunpcklps
dec
sti
stc
xchg
hlt
aaa
je
data16
jbe
cmpsl
lcall
and
mov
and
push
fcoms
pop
cmp
dec
out
xchg
dec
sbb
mov
mov
xchg
xchg
fiadds
add
push
lahf
fcompl
sub
xchg
lahf
leave
lahf
inc
mov
inc
dec
test
gs
insb
push
dec
and
lret
pusha
movsl
js
sarl
xchg
cmpsl
sbb
ja
inc
das
mov
inc
push
add
sbb
sbb
mov
or
cmp
divl
add
push
xor
movsl
dec
jecxz
icebp
adc
inc
jl
nop
inc
jle
repz
stc
pop
pop
pop
or
push
test
scas
cmpsb
push
out
stos
pop
out
cs
int3
aas
ljmp
ja
not
or
xchg
negb
ficoml
aam
aad
sub
inc
jg
sub
mov
ds
or
ret
pop
adc
cmpsb
test
aad
fstpt
cltd
push
pop
inc
rcrl
clc
idivl
sbb
push
xchg
add
icebp
insb
nop
jbe
nop
stc
repz
xchg
cmp
pushf
add
mov
pop
xchg
pop
dec
xor
popf
xor
sbb
neg
dec
sub
test
ja
jae
mov
imul
adc
jge
iret
xchg
cmpsl
lahf
sti
test
add
pop
aad
pop
pop
aam
shll
loopne
mov
sbb
push
mov
arpl
mov
dec
pop
lds
push
xchg
int
mov
outsb
out
push
je
mov
pusha
lock
sub
inc
cmp
inc
aam
push
cmp
or
repz
sbbl
in
sub
mov
sbb
sti
cli
sbb
xchg
pusha
pop
pop
xor
inc
sub
mov
sti
cmpsb
outsb
cmp
movsb
fmull
push
jmp
movsb
mov
fmuls
xor
sbb
loope,pt
or
scas
mov
mov
cmp
imul
call
pop
clc
adc
adc
leave
and
cmp
stos
jecxz
int
xlat
rep
inc
dec
inc
mov
lods
sti
int3
push
pop
repz
addb
mov
xchg
test
push
insl
cld
jae
pop
cmp
test
pop
icebp
cmp
shlb
fdivr
push
ret
addr16
mov
out
mov
sub
xchg
jge
lods
jle
cmpsl
rcl
scas
pop
lds
test
shl
sbb
mov
cmp
pushf
cwtl
ja
clc
adc
cltd
add
mov
push
or
dec
bound
pusha
das
pop
add
sti
lcall
cmp
or
cs
scas
pop
dec
push
dec
mov
popf
xchg
mov
xchg
sahf
fsts
jbe
enter
test
push
xor
stos
dec
mov
lock
xchg
push
mov
ficomps
enter
insb
push
pop
lret
sub
jnp
imul
rcr
xchg
fcmove
in
popl
jno
jne
dec
enter
leave
aaa
shlb
dec
sahf
loopew
push
and
sbb
test
and
cmp
cmp
mov
xchg
xchg
les
outsl
fs
sbb
mov
mov
add
pop
mov
ficoml
std
mov
shr
in
cmp
popa
inc
lea
xor
xchg
inc
and
outsb
int
lock
cmpsb
dec
cli
lea
inc
xchg
iret
aam
ljmp
inc
mov
push
cmpsb
imul
adc
test
jp
jb
xchg
mov
inc
bound
or
daa
mov
sub
push
outsb
bound
sbb
shlb
imul
rcll
aaa
mov
add
les
call
lds
leave
adc
test
push
mov
xchg
aad
loopne
mov
ds
jecxz
inc
adc
xchg
popf
nop
xchg
inc
adc
pop
push
mov
pop
es
push
out
jae
testb
xchg
pop
pop
push
sbb
aas
int
lahf
add
pop
fnstcw
pop
in
int3
insl
xor
in
loope
aaa
xor
call
mov
fwait
mov
push
sub
and
es
lea
xchg
xchg
xor
mov
movsl
fsubs
sbb
nop
add
and
pop
jg
iret
jg
rclb
mov
mov
shlb
les
inc
or
vshufps
sbbb
pop
stc
mov
into
ret
fldcw
jb
arpl
icebp
cmc
in
movb
ljmp
lods
mov
mov
mov
or
iret
ss
push
cmp
inc
xchg
aaa
loop
jmp
add
mov
mov
dec
lods
bound
jns
imul
sub
cmp
mov
xlat
fbstp
dec
inc
fdivrs
fwait
mov
pop
dec
push
add
subl
bsr
loop
or
add
push
dec
mov
mov
addr16
sbb
xlat
stos
cmpsb
or
icebp
cmpsw
cmp
and
cmpsl
enter
or
mov
sub
add
jns
dec
dec
es
mov
sbb
sbb
stos
ds
gs
mov
mov
mov
adc
push
ljmp
inc
cmpsb
inc
movsl
dec
adc
and
push
xor
cmp
jns
jmp
xchg
mov
mov
cmp
add
mov
iret
pop
bound
rep
loop
xchg
hlt
mov
pushf
in
jb
jb
mov
lods
pop
push
repnz
cmp
cli
imul
lret
xchg
xchg
cwtl
and
pop
aaa
jg
cld
mov
adc
nop
adc
out
jp
jp
cmp
jg
xchg
fcoml
outsl
sbb
push
in
mov
rcrb
ja
test
xchg
test
adc
icebp
jo
pop
mov
fimull
jae
movsb
fcmovnb
enter
dec
inc
dec
push
es
and
loop
add
dec
fldln2
sarl
sbb
fldt
mov
lret
ret
mov
mov
fnsave
inc
jbe
fs
pop
jb
adc
jle
or
xlat
cmpsb
jge
repz
pop
cltd
or
mov
push
jmp
sbb
sub
cmp
imul
mov
push
jmp
sbb
sub
cmp
imul
mov
push
jmp
sbb
sub
cmp
push
and
cs
jmp
add
fld
cmpsb
jno
popa
xchg
stos
fdivrs
adcl
fisttpl
pop
cmp
js
or
hlt
sub
pop
enter
call
jmp
jmp
lret
mov
cmp
js
or
sbb
dec
cmp
mov
mov
mov
cwtl
jecxz
sarl
sbb
jb
outsb
or
packssdw
push
xor
out
lret
call
and
cmp
xor
icebp
jae
bound
jg
test
jg
and
daa
xor
addb
push
xor
and
aam
lds
or
and
aaa
aaa
mov
cmpb
shlb
out
imulb
dec
cmp
std
in
into
xchg
ret
cmp
enter
sub
loopne
addr16
mov
aad
mov
xchg
shlb
inc
insl
je
out
ja
mov
mov
xlat
push
in
repz
xlat
sbb
fdivp
push
and
shlb
adc
lret
cmovae
in
inc
dec
fwait
out
dec
cmp
mov
clc
fwait
mov
cwtl
sti
test
mov
and
js
or
arpl
push
cmp
stos
mov
in
jmp
cmp
cmp
sbb
cmp
jns
and
aaa
mov
clc
mov
mov
mov
aas
pop
adc
sbb
inc
sub
das
scas
stos
fdivrs
int
cwtl
sti
test
mov
cmp
js
or
jnp
dec
cmp
stos
fdivrs
mov
cwtl
sti
test
mov
cmp
js
or
jnp
dec
cmp
stos
mov
cltd
pop
pusha
push
clc
add
mov
push
adc
mov
fstpt
scas
adc
test
mov
in
das
test
sbb
add
aaa
add
push
xchg
dec
add
cmc
cmp
imul
cmp
push
push
lcall
cmp
dec
add
pusha
in
or
fldenv
dec
test
push
mov
sbb
jne
sbb
fldenv
mov
pop
mov
jg
jno
mov
in
sbb
aas
cwtl
jae
cmp
ret
xchg
rcrb
cmp
sub
add
xchg
xchg
cmp
scas
sub
push
xchg
fstpl
mov
stc
mov
push
xlat
push
push
ret
inc
loop
jl
mov
inc
cmpsb
mov
push
pop
gs
pop
fs
movsl
sbbb
cmc
orl
aas
fwait
jg
dec
imul
shll
jl
enter
dec
fiadds
fs
xchg
int3
out
and
xchg
push
dec
ja
push
mov
xor
lret
insb
xor
jnp
fdecstp
push
push
stos
aaa
pop
out
sub
cltd
test
mov
lds
pushf
gs
insl
jb
enter
daa
js
leave
xchg
jecxz
les
je
xor
lods
mov
jbe
clc
fwait
or
xchg
sub
add
lods
jmp
xor
pushf
cmp
std
insb
icebp
adc
mov
push
aas
push
sub
adc
sbb
aad
mov
mov
movsl
push
sub
mov
sub
xchg
pop
xor
call
stos
dec
setbe
push
push
or
fstpt
add
dec
and
lock
inc
les
and
les
test
xchg
pop
push
imul
and
popa
into
or
dec
stos
add
nop
sub
les
jno
jl
add
sub
mov
inc
scas
icebp
mov
adc
ljmp
insb
sahf
jnp
aad
mov
add
jns
mov
push
pop
mov
lods
or
sub
std
in
xor
cmc
dec
mov
adc
push
movsl
or
xchg
jae
and
test
sbbb
lock
popf
add
lret
add
dec
fs
jp
mov
pusha
cmpb
pop
and
test
pop
cmp
loope
clc
je
popf
sbb
repnz
insb
or
push
xchg
imul
sub
xchg
adc
test
cmp
fisubrl
pop
xchg
pop
sarl
int3
dec
adc
mov
mov
lahf
in
and
sti
cmpb
dec
frstpm(287
das
cli
cmpsb
mov
adc
mov
xor
cli
fstpt
fcompp
mov
lcall
scas
mov
mov
jb
cmp
bound
jo
in
adc
xrelease
xchg
std
add
jns
in
mov
das
add
mov
pop
imul
mov
push
xor
fsubrs
and
jno
push
enter
xchg
mov
movsb
addr16
mov
xchg
lret
xchg
cmc
cld
leave
dec
xchg
adc
cltd
jp
lret
insl
sti
mov
adc
shufps
test
push
adc
out
push
lret
ljmp
jo
in
add
push
mov
jno
add
mov
ja
lcall
hlt
push
dec
in
repnz
sub
fidivs
push
pop
mov
xchg
sub
mov
cltd
xor
jg
pop
idivb
data16
shrl
xor
idivb
enter
ss
lods
dec
xor
cmp
mov
pusha
xlat
dec
loope
scas
out
test
ficoml
repz
mov
push
mov
cltd
je
dec
sbbl
cwtl
and
lds
out
ret
sub
lahf
repnz
stos
gs
jl
xchg
int
fnstsw
les
jb
sub
movsb
insl
clc
clc
and
xchg
rcrl
rcrl
arpl
shrb
cmpsb
jo
jns
es
dec
pop
sahf
mov
mov
int
fidivl
adc
cmpsl
cld
cld
dec
mov
ror
jo
call
stos
mov
pop
push
je
fdivrl
addr16
push
sbb
xor
dec
jge
xor
test
movsl
fldcw
rcrl
pop
push
or
aaa
mov
mov
aam
add
int3
repz
add
sub
add
mov
push
xor
xchg
xchg
addr16
cwtl
mov
add
sbb
sub
rcrb
pop
test
and
jnp
add
movsl
push
push
inc
repz
dec
mov
mov
in
sbb
shrb
std
aam
push
pop
popf
ret
int
jns
xor
cmpsl
xor
xchg
mov
mov
pusha
fstpl
xchg
aas
repz
adc
dec
fisubl
popa
cwtl
pop
mov
and
arpl
dec
pop
dec
je
push
pop
add
cmp
jnp
pop
adc
inc
test
popa
jecxz
xor
mov
xchg
loope
mov
cmp
pusha
repz
mov
orb
movl
dec
test
das
ss
bnd
vmovntpd
lret
fstps
xchg
cmp
jl
pop
ljmp
sub
into
shld
fxch
les
dec
or
pushf
sbb
mov
cmp
inc
setae
sub
shl
stc
mov
ret
rep
add
pop
adc
cltd
xchg
cs
pop
les
or
mov
scas
mov
add
out
or
push
or
insb
sbb
mov
leave
mov
or
js
and
lret
fisubrl
les
jl
dec
mov
xor
leave
or
sbb
push
pop
pop
lods
nop
test
jle
jg
and
leave
cltd
sbb
das
mov
jne
mov
jno
fmull
jl
or
mov
fs
xchg
cmp
outsl
mov
or
xchg
cltd
fiadds
int
lock
dec
rcrl
mov
adc
ss
icebp
push
mov
pusha
mov
inc
test
fldl2e
out
sub
mov
enter
pushf
imul
jmp
aad
lea
mov
push
sub
push
xchg
add
fidivs
push
daa
jmp
pop
push
test
repnz
xchg
jl
mov
jnp
dec
clc
icebp
in
xor
mov
sub
clc
pop
xor
aaa
adc
jno
pop
lods
scas
aaa
push
int
or
mov
repz
int
bound
pop
popa
mov
xchg
pushf
test
icebp
push
jbe
and
cli
in
repnz
lret
jge
jle
push
push
mov
dec
fbstp
push
mov
and
mov
push
loop
mov
cwtl
push
or
repnz
cmp
push
sbb
pop
fcomp
rorb
cmpl
cmp
repz
scas
sub
pusha
jnp
sub
imul
push
out
addr16
out
push
dec
push
sbb
mov
sbb
push
push
pop
push
add
int
fnsave
jns
inc
mov
adcl
mov
cmp
push
inc
dec
pushf
and
pop
into
rclb
and
dec
jno
sbb
mov
push
loopne
jne
pusha
leave
mov
insl
cmp
push
pop
loope
insl
mov
xor
dec
inc
xorb
aam
mov
cwtl
shrl
pop
or
outsl
nop
mov
pop
pop
in
pop
mov
mov
jnp
jb
mov
mov
test
imul
pop
jl
push
and
ja
push
sub
fcmovne
jne
dec
lods
int3
imull
pushf
gs
xorl
aaa
push
mov
in
or
xlat
jns
fs
aas
mulb
call
mov
xor
in
jmp
lea
out
cmpsb
adc
ja
mov
rcrb
xor
movsl
pop
pop
bound
or
and
add
js
xchg
mov
pop
int
mov
push
adc
shlb
movsb
addr16
jmp
push
shl
cld
inc
out
jl
dec
push
loope
sarb
stos
jp
test
and
adc
sub
add
adc
xor
scas
mov
inc
jl
pop
mov
mov
mov
inc
bnd
xchg
pushf
lods
inc
ljmp
out
dec
mov
xchg
test
jecxz
push
popa
add
daa
aad
or
clc
mov
clc
sub
rorl
and
push
push
in
mov
es
xchg
jg
nop
cwtl
push
pushf
jg
xor
sar
xor
in
jge
fsubl
push
syscall
mov
repz
jmp
cmp
mov
cwtl
ljmp
pusha
fbstp
mov
shll
inc
call
push
cmpsb
test
and
and
push
sbb
es
pop
dec
push
jno
cmc
push
adc
mov
xchg
cld
ret
and
inc
mov
int3
adc
pop
cmp
inc
and
push
xlat
push
pop
cmpsb
arpl
sub
lahf
pusha
out
pop
cwtl
outsl
out
or
inc
mov
pushf
in
pop
adc
fs
cmpsb
or
inc
dec
sub
mov
cli
sub
xchg
dec
adc
cwtl
sub
sub
fisttpl
fnstcw
inc
loope
lods
into
pop
sub
lcall
push
cmp
sbb
pop
pushf
inc
sub
inc
push
pop
mov
in
gs
subb
cmp
cmc
popa
imul
sub
inc
stos
jnp
lcall
rdpmc
push
dec
lds
push
dec
movb
jb
dec
mul
or
repz
testb
ljmp
popa
sbbb
or
or
lahf
push
inc
ret
int3
mov
loope
pop
popa
lods
and
jg
inc
fs
adc
add
insb
inc
jnp
fstpl
dec
mov
xor
mov
fsubl
scas
sbb
out
pop
std
mov
pop
jae
sbb
jns
mov
mov
sub
xchg
and
sbb
fnsave
jmp
push
hlt
jle
inc
mov
jp
add
pop
xchg
adc
bound
jns
movsw
pop
inc
jp
sbb
loope
iret
cmp
ficomps
xor
push
push
adc
sub
push
mov
lock
xor
or
sub
mov
jbe
and
jns
mov
int3
xchg
adc
scas
push
lock
xchg
int
rcr
push
mov
sbb
pop
aad
cwtl
fwait
inc
xor
lcall
mov
mov
pop
sbb
mov
fwait
jle
push
push
mov
pusha
je
push
cmp
jecxz
ficompl
stos
into
cld
ja
sbb
add
mov
cmp
sbb
aas
adc
addr16
insb
xchg
jae
and
test
pop
sub
gs
dec
pop
xchg
ss
lahf
jno
cs
fistpl
scas
add
xor
pop
insl
out
adc
in
and
mov
out
sbb
addb
call
clc
push
add
lret
jg
lret
dec
fwait
in
jne
and
pop
mov
jb
dec
fstpt
mov
sbb
mov
or
jmp
std
js
push
push
adcl
jne
push
testl
push
enter
ds
test
xchg
pusha
dec
jp
shll
stc
mov
or
jns
jg
loop
cmp
xor
cmp
mov
repz
dec
push
int
mov
hlt
cmp
add
pop
insb
xor
inc
cmp
jne
cmp
push
push
andl
mov
jns
popa
int3
mov
push
push
call
je
push
inc
mov
int3
lock
mov
mov
jg
and
fscale
imul
adc
or
mov
xchg
outsl
push
sbb
mov
mov
xchg
in
jmp
popl
loopne
xchg
push
inc
pop
in
jmp
sbb
inc
jmp
mov
and
mov
movsl
leave
cmp
push
jno
sub
pop
sbb
xchg
js
sbb
adc
int
in
dec
pop
add
movb
out
stc
xor
fcmove
js
test
jne
jl
ljmp
ljmp
hlt
movsl
bound
lock
mov
ret
rol
inc
mov
loopne
mov
fwait
das
into
pop
inc
inc
jle
daa
push
icebp
test
jo
lcall
insb
mov
pusha
iret
out
daa
clc
sbb
mov
popa
bound
lods
bound
cmp
stos
pop
dec
mov
fneni(8087
pushf
repnz
jo
cmp
movsb
fimuls
xchg
xor
inc
in
mull
bound
jbe
dec
cli
mov
mov
xchg
aad
ret
and
in
lahf
mov
loopne
jbe
xor
clc
sub
jge
popf
and
dec
sahf
shll
cmpsl
jno
test
test
mov
fs
popa
in
adc
xchg
popf
enter
pop
sub
xlat
mov
imul
pop
jecxz
mov
jl
jb
cmpsb
stos
push
fidivrs
aaa
lahf
filds
stos
sbb
in
or
pop
cmpsl
call
mov
xor
lahf
pop
mov
push
incb
push
mov
icebp
ret
cmc
leave
les
loope
jns
pushf
xchg
stc
xchg
cmpsb
pop
out
out
jecxz
add
call
sbb
imul
out
ret
push
jmp
insb
mov
in
xchg
dec
or
out
lret
adc
add
insb
sub
enter
lea
andb
js
inc
push
fxch
cltd
push
aas
push
les
dec
jbe
push
sarb
dec
push
enter
divb
ss
int3
fstp
mov
pop
jmp
sarb
mov
ficoms
das
add
fnsave
in
testl
push
and
mov
incl
xor
je
add
int
push
hlt
mov
mov
loop
pop
push
push
add
repnz
lret
jmp
loop
mov
jle
mov
add
inc
add
loopne
mov
je
jmp
adc
cmp
clc
rolb
test
nopl
sbb
inc
jge
ss
jg
scas
pop
aad
mov
aad
loop
cmp
test
mov
push
sbb
mov
adc
aaa
in
clc
or
xor
fs
roll
arpl
push
sbb
xor
sti
or
adc
and
test
cs
lret
sub
aas
jp
inc
repz
or
xchg
push
scas
inc
pop
mov
adc
pop
jne
dec
out
or
xchg
syscall
fcompl
loop
mov
mov
in
andb
adc
sbb
rorl
jge
bound
shl
mov
int3
mov
cmp
imul
roll
jle
xchg
mov
inc
aas
xchg
inc
inc
jge
mov
add
xor
pop
xchg
ja
or
shll
fcompl
xchg
insl
jmp
ficomps
fwait
mov
cmp
push
pop
movb
jbe
or
adc
add
xchg
jmp
dec
xor
adc
icebp
stos
pop
sbb
in
fcomps
adc
mov
mov
jno
mov
cmp
fsub
fnsave
pop
mov
and
imul
cmc
dec
in
xchg
gs
stc
inc
out
pop
and
in
shll
mov
pop
loope
xchg
test
lea
xchg
mov
pop
fwait
imul
pop
out
pop
xlat
je
cmpsb
adcl
adc
in
fbstp
les
xchg
cltd
cli
nop
adc
push
cs
mov
out
xlat
outsl
ficoml
int3
movsl
jns
push
out
outsb
cmp
fmul
test
andl
outsb
sbb
or
dec
lret
loop
xor
pop
pusha
insl
pop
xor
in
jns
sbb
and
mov
and
mov
dec
or
clc
loopne
jmp
movsl
sub
cmp
sub
pop
lea
pop
jbe
arpl
mov
imulb
sbb
jg
pop
xor
lods
int3
test
mov
ljmp
jle
test
inc
mov
outsl
pop
shlb
and
cld
mov
cmc
loop
repz
adc
stos
jge
mov
lods
lret
push
ret
inc
add
inc
jne
jge
mov
mov
dec
sub
and
mov
add
mov
and
jl
addb
xchg
xchg
loopne
add
movsb
dec
outsl
xchg
mov
stos
loopne
dec
or
adc
add
jge
jbe
adc
add
jns
add
cmp
imull
jl
lock
les
loop
adc
cmpsb
cli
mov
pop
and
movsb
jae
inc
mov
stos
push
out
test
jp
addr16
sub
test
or
cmpsb
insl
jmp
sar
mov
xor
jmp
xor
cmp
jns
jmp
adc
mov
xchg
sbbl
in
stos
lret
std
jmp
pop
jbe
xchg
sti
add
iret
es
xchg
rcr
jge
inc
and
mov
sbb
bound
addr16
stos
jae
icebp
fidivrl
les
mov
adc
inc
out
or
movsb
push
and
mov
sbb
mov
or
xchg
repz
and
sub
hlt
imul
dec
adc
aas
shll
push
int3
add
enter
in
dec
fcmovu
rep
mov
dec
outsb
mov
xchg
mov
jae
data16
leave
sarl
jno
mov
pop
adc
xor
std
sarb
mov
lcall
mov
ret
fs
push
mov
adc
push
hlt
and
dec
cmp
jge
ja
jno
cld
push
iret
xlat
sub
dec
call
add
xchg
mov
in
dec
mov
fsts
inc
outsb
call
sbb
mov
test
sub
or
mov
mov
sub
cld
push
repnz
xor
sub
fdivrs
and
inc
add
lret
mov
and
jnp
push
mov
aam
out
ficoml
fildll
mov
addl
xor
into
sahf
movl
mov
sbb
pop
mov
shlb
js
and
sarl
out
bound
lss
jo
sarl
and
cmp
mov
jo
cwtl
nop
lahf
jae
rcll
sub
repnz
mov
lahf
arpl
xchg
xchg
jl
arpl
loope
popf
pop
push
cmp
jnp
fdivrl
inc
xor
xchg
pushf
cmpl
sub
repnz
pop
or
fwait
cmpsb
mov
mov
dec
es
mov
dec
pop
xchg
incl
mov
ret
hlt
sub
sbb
sbb
or
dec
and
dec
cmp
mov
push
cli
sahf
clc
sub
lcall
pop
faddp
sub
mov
pop
rcll
jge
js
cld
and
lea
sub
frstor
cltd
lods
ds
test
inc
mov
fndisi(8087
test
and
mov
aas
in
test
pop
icebp
inc
add
lahf
mov
mov
loope
movsb
test
mov
faddp
mov
sub
sub
in
jno
jns
cmp
sahf
push
add
dec
aas
xor
inc
roll
inc
dec
sub
enter
es
mov
or
sahf
faddl
sbb
xlat
test
call
insl
mov
cmp
in
cwtl
sbb
push
imul
popf
ljmp
cmp
cmc
sbb
lds
lock
adc
cmp
xlat
test
xor
ja
add
jecxz
data16
pop
mov
jae
push
or
xor
loopne
and
movsl
cmp
pop
loop
out
mov
jp
push
cli
inc
sbb
repnz
sbb
repz
insb
sub
cmp
call
mov
push
jp
xchg
add
cli
push
mov
test
addb
fidivl
testb
mov
sbb
ret
mov
dec
leave
mov
mov
fiadds
sbb
pop
mov
inc
mov
int
mov
repnz
daa
push
test
adc
outsb
jno
fldcw
adc
test
imul
xor
push
orl
sub
hlt
and
or
sbb
mov
lret
test
clc
fwait
mov
cwtl
sti
test
mov
cmp
js
or
jnp
dec
cmp
stos
fdivrs
mov
cwtl
sti
test
mov
cmp
js
or
jnp
dec
cmp
stos
fdivrs
mov
cltd
sti
test
mov
cmp
jns
or
jnp
dec
cmp
scas
fdivrs
mov
cwtl
sti
sub
cmp
mov
cmpsl
xchg
ret
insb
jg
nop
add
xor
and
pop
or
cmp
imul
pop
or
mov
pushf
mov
call
dec
or
imul
push
leave
fdiv
push
fdivs
call
and
xor
inc
sub
pusha
xor
cwtl
flds
fwait
test
or
je
inc
or
push
mov
dec
mov
jo
jno
inc
add
out
sbb
mov
or
mov
mov
mov
xor
mov
in
xor
adc
ljmp
leave
jo
lcall
pop
daa
push
jne
insl
das
outsb
enter
fdivrs
imul
push
sub
mov
aad
divl
sub
aad
cli
ja
lods
sbb
pushf
jne
adc
cmpsb
or
in
ret
cli
cwtl
dec
inc
sub
ja
inc
das
test
int3
sbb
ret
fcom
or
or
push
or
jno
sbb
mov
shlb
fwait
imul
pop
adc
and
outsb
in
lcall
mov
lods
out
int
rcrb
or
pop
or
add
adc
sub
mov
mov
fsubr
fidivl
cmp
and
or
push
leave
mov
cltd
enter
call
dec
cmp
imul
push
leave
mov
cltd
enter
call
pop
popa
add
xchg
fs
nop
xor
mov
sti
mov
push
js
cmc
loope
in
and
mov
xor
or
out
push
cmpb
push
pop
dec
shrb
mov
loope
cmpsl
subl
jge
mov
call
add
scas
pop
stos
repz
frstor
cwtl
lcall
add
push
jne
xor
fisttps
clc
enter
rolb
cmp
cmp
insb
mov
cs
sub
cmp
mov
xchg
aam
nop
lcall
rorb
orb
pop
dec
xor
loopne
test
ret
and
mov
cmp
in
and
mov
adc
loop
sbbl
ret
sahf
adc
gs
jp
dec
cltd
jns
lods
ljmp
xor
mov
xorb
loope
xchg
dec
fimull
inc
psllq
std
jge
or
in
out
pop
fsub
lods
sub
push
push
mov
pop
inc
jno
cmp
add
xchg
dec
aad
pop
popf
push
cmpsl
mov
mov
mov
icebp
inc
pusha
daa
dec
xchg
sub
popf
loopne
jae
repz
aad
mov
sbbl
push
sbb
push
pop
sbb
xchg
mov
dec
stos
or
jb
pop
jp,pt
xor
sarl
call
mov
les
mov
in
cwtl
adc
inc
aas
dec
xor
fstpl
bound
std
mov
sub
jnp
jb
and
and
add
xchg
imul
into
cmp
dec
in
lea
inc
xchg
rcr
daa
pop
pop
cltd
jb
outsb
lahf
repz
stos
cmovbe
orb
mov
adc
enter
adc
insb
and
sbb
xor
cmc
xchg
dec
lret
daa
push
mov
int3
xor
dec
ljmp
push
mov
jb
xlat
mov
adc
mov
pop
cmp
test
popa
cmp
jge
arpl
ss
xlat
add
je
out
in
xchg
xchg
popa
mov
call
mov
gs
cld
pop
xlat
mov
cs
pop
loopne
test
jmp
sub
sti
mov
out
pop
mov
dec
jge
clc
clc
cmc
sarl
xchg
xor
test
pop
icebp
call
inc
fld
hlt
aam
and
jle
sub
mov
ficompl
xchg
fsubs
subb
mov
in
xchg
jmp
push
mov
movsl
ja
lret
xchg
loopne
loopne
lods
or
cmc
test
or
add
dec
sbb
and
or
mov
jb
aas
pop
shlb
sub
in
outsl
inc
outsl
outsl
sbb
or
push
in
mov
push
nop
addr16
push
inc
jnp
lea
mov
push
insb
sbb
sbb
pop
nop
insl
rclb
push
out
adc
mov
out
cs
sub
enter
adcb
insb
jl
or
stos
sbbb
cmp
jo
mov
roll
mov
push
test
and
andb
cmc
out
fdivs
xor
jnp
cmp
jnp
jmp
aaa
mov
inc
xlat
push
in
add
cmp
mov
cli
cld
cld
jmp
pusha
jl
mov
call
xor
xor
sub
push
xchg
dec
lret
scas
out
call
in
xchg
ret
jmp
mov
jno
mov
sub
and
sbb
iret
cmp
fiadds
cs
lret
mov
add
jbe
jo
jl
pop
arpl
xchg
imul
scas
dec
pop
stos
es
dec
loopne
leave
jae
cmp
mov
add
aaa
push
mov
fmuls
pop
loopne
scas
push
jne
dec
jmp
push
enter
jecxz
int3
mov
repnz
fdivs
jne
xchg
mov
repz
mov
sub
insb
imul
aaa
push
jae
xorb
push
sub
xor
pavgw
es
sbb
sbb
mov
and
xor
xor
outsb
jmp
xchg
sub
inc
or
push
mull
or
dec
fiaddl
push
or
cmpsl
and
jge
add
or
jmp
repz
cmc
insl
pop
mov
cmc
jbe
mov
jae
xchg
pushf
lock
pusha
test
add
and
repnz
cmp
push
cld
pop
pop
jg
and
jnp
or
sbb
or
popa
xchg
inc
test
mov
mov
jecxz,pt
jne
in
and
sub
add
scas
pushf
xchg
mul
insb
mov
shlb
or
pop
imul
cmp
pop
std
pusha
adc
jg
das
sub
in
insb
xchg
mov
shrb
inc
sahf
sti
mov
xchg
jmp
out
ror
ds
push
js
inc
stc
lock
sbb
enter
ss
shrl
inc
sbb
inc
nop
sarb
into
sbb
or
mov
dec
pushl
and
cmp
test
inc
fstpl
fs
push
mov
daa
ret
cmp
test
jmp
test
dec
lods
pop
pop
xchg
pop
push
and
leave
movsl
push
adc
out
pop
xor
xchg
cs
cs
jmp
push
push
fidivl
mov
jno
out
push
dec
loop
sbb
pushf
jnp
jg
xor
and
inc
jae
sbbb
out
sub
mov
ljmp
and
pusha
arpl
inc
cltd
loop
addr16
stos
dec
ret
loope
cmc
push
loope
repz
adc
rolb
jmp
aad
aaa
bound
roll
repz
xchg
inc
jl
sub
push
inc
mov
or
sti
sub
pop
dec
mov
es
xchg
push
add
adc
cli
outsl
cmp
hlt
add
shll
inc
push
es
mov
add
xor
sub
pop
setb
xor
mov
leave
cli
shlb
pop
jmp
stos
jle
test
push
sbb
pop
scas
out
lods
add
data16
stc
and
xchg
add
stc
xor
jmp
cld
xor
ror
and
rclb
test
add
imul
movsb
aaa
pusha
rolb
sub
movsb
cs
fnstenv
adc
pop
das
cs
pop
push
sbb
sub
pop
mov
in
test
ret
jmp
sbb
sub
mov
bnd
ja
hlt
subb
testb
stc
adc
sahf
repnz
in
push
loope
lret
rcl
pop
adcb
push
bound
pop
xchg
arpl
push
shlb
adc
add
xor
jbe
loopne
sub
mov
iret
test
xor
scas
std
pop
jne
out
fimuls
std
enter
nop
or
adc
loope
adc
shrl
jb
mov
add
rolb
int3
lds
mov
xor
movsb
fcmovnu
aaa
jecxz
jo
jno
xor
int3
icebp
scas
xchg
stos
ret
stc
dec
pop
jl
fs
mov
not
into
dec
push
lret
insl
pushl
push
inc
mov
sbb
xchg
iret
sub
shl
jecxz
movb
xor
popa
xor
xchg
test
xchg
das
aaa
arpl
shrl
jae
mov
div
outsl
mov
adc
imull
xchg
mov
mov
add
sbb
test
adc
cmp
push
mov
pop
xor
sub
jp
pop
cmpsl
enter
xchg
into
inc
mov
pop
cld
xchg
fs
or
and
jnp
sub
fists
cmp
or
mov
push
jecxz
mov
movsb
fcompl
adc
xchg
mov
mov
jns
add
jmp
sbb
scas
bound
rorb
push
and
pop
and
mov
mov
jbe
xor
lods
loopne
popa
sub
push
add
add
mov
add
xchg
repnz
rclb
xchg
and
cs
xorb
lcall
sub
push
data16
add
cs
mov
loopne
fld
jmp
mov
inc
push
mov
xor
andb
fwait
aam
dec
cmp
addr16
mov
cwtl
xchg
roll
ss
add
bound
lock
mov
ficomps
sub
sub
mov
cmp
mov
sbb
out
jl
daa
fstpt
pop
inc
inc
mov
or
and
or
cmp
adc
mov
add
or
clc
jae
dec
mov
jns
leave
sti
fcmovne
cmc
xor
stc
push
sbb
out
pop
into
add
mov
lret
xor
xchg
subb
int
xchg
and
add
mov
pop
sbb
cmp
push
pop
mov
mov
out
fisttps
xlat
subl
inc
in
xorb
mov
and
pop
push
fcoms
add
jecxz
lods
int3
lret
inc
push
mov
jb,pt
push
mov
rcl
mov
dec
js
xchg
addl
pop
inc
mov
cld
inc
repz
mov
leave
fcoml
pop
xchg
mov
inc
dec
jmp
push
sti
xor
or
hlt
lods
xchg
inc
xadd
cli
mov
jl
outsb
insl
call
notb
or
dec
mul
cmp
imul
notl
outsb
xchg
push
rorb
popf
cmpsb
mov
cmp
mov
sub
or
loope
adc
out
test
mov
adc
adc
shlb
adc
bound
pop
adc
jg
mov
int
and
movsl
loopne
ljmp
xlat
inc
sub
adc
mov
adc
mov
in
mov
mov
lret
mov
addl
add
ja
lret
cwtl
mov
je
xchg
subl
sbb
ss
cmp
or
jbe
pushw
lock
mov
divb
push
inc
in
repnz
mulb
es
jg
sub
mov
cld
mov
fcompl
inc
lods
test
pop
out
fmuls
adc
aaa
popl
fadds
pop
jmp
sbb
dec
sub
and
mov
mov
add
ja
mov
jno
scas
mov
je
scas
xor
cmp
pop
sti
sbb
pop
inc
sub
mov
and
cmp
pop
xchg
clc
or
jmp
push
and
loop
test
jno
pop
inc
cs
inc
cmp
test
insb
mulb
enter
daa
push
test
dec
fucomip
fbld
outsl
inc
or
mov
dec
sbb
aam
jl
jnp
xchg
dec
aas
loopne
xor
push
ljmp
dec
sub
jp
inc
xor
repnz
cmc
pop
cwtl
lea
push
or
jbe
lret
cmp
or
stc
pop
jge
pop
push
inc
push
test
imull
lock
push
ds
out
mov
push
mov
add
cmp
adc
xchg
inc
movsb
fsincos
into
int3
test
ljmp
fs
sbb
adcb
add
add
dec
test
sbb
in
push
jmp
jle
rorl
repnz
cmp
push
adc
push
ja
clc
lcall
push
dec
idivl
push
mov
dec
insl
mov
pop
mov
jo
and
inc
in
in
movsl
daa
inc
add
ret
mov
pop
mov
or
inc
ljmp
movsl
call
adc
paddw
add
js
test
sti
xor
push
negl
or
dec
test
jg
faddl
push
ficoml
jecxz
les
roll
lret
movsl
scas
ds
adc
push
sub
imul
std
je
push
repnz
or
push
mov
mov
fcmovne
fidivs
xchg
add
jg
cmp
outsb
mov
jae
adc
cmc
lret
aas
insl
inc
and
shlb
add
pushl
inc
out
outsl
int
hlt
push
mov
or
shl
push
aad
jns
sub
decl
aam
push
imul
push
and
in
daa
stos
in
or
mov
loopne
int
mov
mov
out
and
xchg
xchg
lcall
sahf
cli
mov
inc
mov
pop
inc
mov
push
mov
enter
cmp
dec
rol
aad
jb
aaa
inc
ror
xchg
inc
xor
inc
mov
mov
test
jl
jb
push
fidivrl
rorb
bound
jmp
jg
lods
pop
imul
xor
mov
or
pop
sbb
xchg
out
inc
popa
mov
cmp
cs
jle
jp
adc
sbb
popf
stos
xchg
test
jp
sarl
mov
or
addr16
cltd
push
inc
add
or
push
xor
xchg
stc
adc
pop
lret
jle
cmp
ja
adc
test
fistl
imul
and
fidivrs
dec
insl
mov
scas
or
inc
jle
adc
jl
mov
jle
loope
arpl
add
repnz
loop
adc
jg
popf
cmc
ret
jp
sbb
jne
push
adc
xchg
xor
and
mov
out
xchg
sbb
ficoml
inc
fs
lea
bound
out
insb
cltd
dec
rcll
cmp
aam
mov
sub
scas
jmp
leave
mov
pop
push
xor
cltd
dec
sub
push
insl
xor
ljmp
pushf
and
sub
adc
jmp
xor
bound
jb
addr16
popa
push
pop
jo
or
xlat
dec
daa
mov
ret
mov
mov
sbb
cltd
xorl
inc
jbe
test
xchg
cmp
lea
jg
mov
mov
or
inc
sub
pop
push
jo
xchg
push
mov
aam
sub
mov
addr16
pminub
cmpsb
push
mov
sbb
and
mov
stos
fists
rclb
cmpsb
jns
out
jecxz
pop
mov
or
test
frstor
out
jo
ret
mov
adc
lea
sub
lcall
adc
lahf
jnp
dec
fwait
inc
mov
add
mov
outsb
imul
scas
imul
adc
jp
out
sbb
cmp
outsb
jnp
pop
inc
les
sbbl
das
jns
out
sub
test
pop
movsb
pop
add
xchg
or
jmp
ds
cmp
xor
dec
jg
in
ret
mov
aad
push
inc
adc
mov
popa
popf
ja
xchg
shlb
rcll
push
cli
mov
stos
xor
cld
es
int3
jo
add
and
lds
stc
mov
or
in
mov
push
call
insl
mov
adc
inc
add
das
add
adc
shlb
clc
and
pop
scas
mov
mov
cmp
sub
stc
scas
lods
xchg
aam
jmp
dec
out
ret
shr
jecxz
jae
icebp
into
xor
fsub
lock
in
in
jle
test
std
inc
gs
fs
sarb
mov
dec
icebp
aad
popf
dec
and
xor
xchg
jg
ss
imul
mov
dec
and
mov
push
pop
jg
movsb
test
ret
push
fistpl
xlat
mov
ja
imul
mov
cmp
xchg
adc
out
ss
jbe
or
lds
in
mov
in
add
push
or
push
inc
and
aaa
lods
aad
iret
mov
test
jo
add
lock
movsb
movsl
xchg
xor
dec
and
mov
dec
dec
pop
clc
ljmp
cmc
cwtl
mov
and
ljmp
sarb
or
inc
jb
mov
lods
push
fdiv
adc
in
or
orb
mov
leave
jl
repnz
stos
mov
lds
xchg
cmc
mov
jno
mov
lea
jbe
dec
hlt
mov
jnp
jp
call
jmp
and
push
pusha
in
aaa
je
addr16
ljmp
pop
jp
pop
push
pop
cmpsl
jae
xor
lahf
add
mov
or
fnstenv
call
xchg
dec
push
adc
fisubl
pop
pop
andb
xor
fdivl
and
outsl
push
fsubrs
loope
push
push
mov
popf
pop
sub
mov
movsl
mov
sarl
insl
daa
int3
jp
clc
add
cli
fucom
add
adc
pop
sbb
repnz
lods
shld
push
push
pop
mov
insl
stc
shll
fisubl
in
push
inc
ja
cmpsb
xchg
int3
or
andb
mov
lods
test
inc
dec
nop
xchg
fsts
std
popf
mov
filds
jl
test
les
inc
add
sub
int3
sahf
sub
sub
sarl
pop
pop
cmp
fistpl
out
pop
pushf
mov
jbe
sub
sti
push
sbb
xchg
inc
adc
xchg
xchg
push
cli
fxam
adc
cmp
scas
inc
add
push
add
inc
jae
lret
dec
mov
add
aas
add
imulb
push
mov
arpl
cmovns
push
pop
fldcw
xchg
sahf
test
and
mov
gs
lret
enter
xlat
mov
cmp
fmuls
xor
sub
int3
mov
adc
rclb
xlat
push
sub
xchg
int
push
or
sbb
daa
inc
sbb
stos
sbb
mov
bound
leave
push
adc
inc
mov
frstor
pushf
sahf
gs
sub
xchg
lods
pop
sbb
test
mov
das
incb
push
push
scas
pop
mov
pop
jge
pop
cmpsb
jne
push
or
xlat
jne
movsl
loope
sti
xchg
mov
or
popa
sub
cmp
imul
add
inc
push
and
loop
jg
push
flds
insb
inc
dec
pop
pop
fisttpll
pop
mov
dec
xor
and
or
cs
rep
stos
add
imul
push
add
jecxz
fdivp
fstps
dec
movsb
push
cmp
sub
pop
popa
mov
pop
mov
xchg
int3
pusha
dec
iret
adc
int
mov
jmp
mov
inc
sti
xchg
xchg
add
mov
sbb
pop
inc
jb
xchg
cltd
cmpsb
sbb
enter
insl
mov
mov
pop
cld
xchg
mov
mov
xor
jle
and
pop
or
stos
xchg
in
pushw
faddl
xchg
nop
int3
jbe
movsb
mov
mov
aas
vmovdqa
ljmp
xor
sub
repz
daa
xor
cmc
movsl
mov
jle
push
dec
in
jnp
enter
xchg
push
pop
je
testl
incb
mov
test
adc
in
aad
xchg
add
stos
sahf
mov
ficoml
add
cltd
pop
pop
fstpt
add
inc
stos
xor
test
outsb
insb
xchg
jg
xchg
add
pop
jl
aaa
jecxz
mov
mov
ret
bound
pop
push
movsl
mov
lahf
inc
jnp
dec
xchg
ficomps
jbe
test
pop
cli
push
gs
jne
sub
dec
jl
movsl
xlat
imul
jo
jo
pop
in
sub
negb
int3
cmp
sub
mov
pop
lods
int
lcall
das
insl
lods
imulb
rcr
push
dec
inc
jge
xor
stc
jg
inc
xor
add
inc
dec
inc
push
shlb
or
int3
jg
push
aam
loop
mov
divl
pop
mov
adc
push
ds
jb
cltd
loope
imul
insl
mov
adc
push
insb
mov
pop
in
nop
dec
lret
in
aam
mov
mov
adcb
mov
mov
mov
add
testl
pusha
int3
outsb
les
sbb
push
std
and
mov
iret
call
ret
pusha
jle
stos
inc
jl
in
jno
out
cmp
mov
cmpb
ret
pop
mov
ret
lret
jnp
xchg
jns
lea
pop
cmp
movsl
push
push
mov
jl
mov
sub
pop
nop
lods
bound
jge
mov
pop
xor
ss
enter
mov
xrelease
push
cmovno
xorb
xchg
repnz
mov
rolb
add
mov
or
mov
scas
notb
adc
loop
cmpb
push
cs
mulps
push
sbb
iret
sbb
dec
mov
nop
mov
icebp
sbb
bound
es
mov
les
addr16
out
add
add
out
pop
arpl
sti
push
jmp
call
mov
cli
insb
cmp
mov
stos
out
out
call
std
fwait
insl
mov
rcll
ja
sub
sbb
js
push
leave
mov
cltd
enter
call
dec
cmp
imul
push
leave
mov
cltd
enter
call
inc
cmp
insl
pop
sbb
js
push
int
stc
test
fcomps
mov
sub
pop
sbb
clc
mov
ja
adc
test
scas
loope
icebp
pop
rcll
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
test
mov
sub
pop
shrb
aam
mov
mov
js
dec
cli
pop
ljmp
cwtl
sub
pop
clc
dec
enter
sub
sbb
dec
cli
pop
ljmp
cwtl
sub
pop
clc
dec
enter
sub
sbb
push
xchg
ss
imull
inc
mov
sub
jp
dec
ret
icebp
and
dec
jns
incl
lahf
cmp
mov
dec
xor
pop
pop
clc
iret
ss
pusha
aad
mov
into
xchg
fidivrl
pop
cli
aad
clc
sbb
sub
push
lret
xchg
sub
insb
pop
or
fdivr
cmp
add
push
test
mov
jge
stc
in
dec
dec
adc
xchg
movsl
gs
dec
xchg
fidivrl
xor
lock
jmp
outsb
pop
pop
push
sar
ret
dec
adc
lea
scas
cmp
pop
adc
lahf
inc
xchg
adc
pop
or
jg
enter
xor
or
sbb
sub
pop
clc
dec
enter
sub
sbb
dec
cli
pop
sub
int3
dec
loope
icebp
sub
aas
mov
lods
cmp
ds
pop
mov
fbld
imul
pop
hlt
sub
ss
push
dec
shrl
or
sbb
imul
inc
out
hlt
dec
movsb
je
dec
enter
sub
sbb
dec
cli
pop
ljmp
cwtl
sub
pop
clc
dec
enter
sub
sbb
dec
cli
pop
ljmp
mov
push
cs
movsl
and
das
sub
or
or
and
in
add
dec
cwtl
inc
push
lods
inc
js
pop
aad
mov
xor
or
jecxz
mov
sbb
nop
sub
ljmp
jmp
xchg
mov
and
dec
jae
jae
mov
iret
cmp
push
fnsave
mov
pop
enter
lahf
xchg
inc
fidivrs
testl
add
and
aas
cmp
shlb
sbbb
stos
mov
inc
js
or
mov
sub
ja
push
loopne
pop
sbb
pop
mov
xchg
insl
mov
push
scas
fwait
add
push
pop
or
insb
xchg
push
leave
pushf
lock
outsb
adc
dec
push
ss
lods
loopne
jnp
and
jns
insl
cmp
mov
popa
je
lods
fs
xor
mov
pop
arpl
jle
jge
mov
pop
and
jp
in
loop
adc
addb
xchg
mov
pushf
push
or
arpl
jns
or
mov
std
mov
aas
out
xor
jb
dec
js
lcall
hlt
cs
das
add
dec
test
inc
sbb
pop
adc
sbb
dec
adc
jge
mov
bound
or
imul
jae
sbb
pusha
or
mov
data16
test
lock
push
xor
mov
dec
insl
dec
cmp
or
ficomps
pop
mov
adc
jbe
cld
rorb
dec
cli
mov
das
clc
repz
push
cmp
pop
xor
dec
inc
mov
mov
movsb
xchg
shll
imul
cld
adc
jo
pop
inc
lcall
enter
ds
sbb
lds
fsubrs
daa
movsb
dec
inc
pop
cmp
and
js
enter
fiaddl
leave
orl
icebp
mov
into
popf
movsl
xor
imul
test
jle
jne
push
jnp
dec
xchg
and
pop
cmc
repz
bound
push
fsubrs
sub
pop
inc
negb
dec
and
fwait
xchg
neg
repnz
adc
mov
mov
scas
adc
int
scas
adc
sbb
fiadds
push
xchg
movsl
dec
push
ficompl
cwtl
push
jns
outsb
insl
ljmp
lds
sbb
rcll
andb
lret
adc
or
and
aam
pop
leave
mov
mov
mov
les
sbbl
call
mulb
orb
aad
jle
mov
jecxz
xchg
mov
xor
dec
inc
arpl
leave
ret
jg
sbb
jb
call
or
xchg
and
push
mov
pop
mov
daa
into
outsb
xor
movsb
xor
sub
sbb
pushf
cmp
sbb
adc
adc
ja
mov
and
stc
cwtl
and
adc
xor
push
jae
pop
sbb
repnz
mov
pop
test
xchg
jb
jl
rcrl
arpl
xor
dec
pop
loop
push
sti
jnp
sbb
les
pop
mov
ret
xor
inc
data16
out
jns
push
hlt
lods
dec
mov
sub
mov
std
cmpsl
and
adc
nop
arpl
mov
or
out
and
inc
push
sbb
popf
lcall
inc
cmp
pop
out
fsubl
popa
mov
cli
arpl
ret
inc
add
testb
pop
cltd
das
push
mov
mov
mov
push
es
mov
and
push
mov
shlb
nop
insl
loope
je
xor
daa
out
pop
call
js
lcall
cmp
jae
add
mov
cmpsl
loop
and
fidivs
push
fwait
fs
incl
jne
adc
dec
sti
outsl
leave
push
add
jo
scas
sbb
jns
cmpl
jmp
mov
xchg
xor
mov
cmp
xchg
imul
mov
leave
jns
push
sti
ds
adc
cmp
sub
sbb
push
sbb
cmp
sub
imul
aad
aam
push
call
ret
andl
push
ficomps
es
push
sbb
cwtl
xchg
pop
and
gs
xor
ret
pop
xchg
lret
dec
shr
movsl
sbb
aad
lret
pop
sbb
repnz
lret
in
stos
icebp
add
lcall
push
pop
xor
mov
adc
mov
fisubrs
push
fs
in
mov
mull
bound
ficompl
gs
push
add
mov
dec
jne
jge
dec
xchg
roll
mov
push
mov
push
pusha
cmpsb
stos
mov
das
into
jae
std
dec
jl
repnz
repz
nop
dec
or
rcl
sbb
pusha
sarb
sub
insl
cmpsl
mov
int3
sbb
push
mov
insb
lea
std
push
lahf
pop
xchg
pop
mov
and
mov
ss
testl
mov
inc
add
dec
mov
mov
aas
jns
sbb
cmpsl
mov
pop
add
in
fbld
dec
fisubrs
repnz
lret
add
mov
stos
sbb
adc
mov
cltd
fidivl
jle
cld
lret
xchg
shr
imul
or
iret
pushf
scas
clc
out
fsubrs
or
cmpsl
pushf
or
lea
sub
movsl
cmpb
jl
fistps
push
les
cmpl
ljmp
inc
jno
inc
mov
test
jecxz
and
pop
or
outsb
and
push
xor
cmp
dec
dec
out
cltd
mov
insb
fistpll
fildll
pop
cmp
icebp
push
je
lcall
lds
dec
adc
inc
cltd
scas
lock
or
ss
or
jne
mov
daa
or
test
cmp
sbb
popl
push
loope
lcall
or
push
xlat
cmp
or
mov
scas
push
mov
dec
aaa
lock
cwtl
xchg
adc
insw
sbb
sub
ja
adc
mov
sti
movsl
clc
cli
add
lods
ss
insb
inc
jl
fs
in
rorl
mov
jno
mov
lock
fbld
add
push
call
rcll
lcall
push
stos
sub
sbb
sbb
mov
jne
add
dec
lods
jle
icebp
sbb
insl
ljmp
and
sub
pop
hlt
mov
notl
ljmp
inc
pop
inc
and
xor
stc
aad
mov
cmp
pop
ss
call
pusha
ds
sub
inc
sbb
mov
cmp
rcrb
movsl
mull
adc
mov
stos
inc
push
xor
sti
mov
jp
mov
mov
das
pop
sbb
in
mov
es
push
jle
lock
xchg
sbb
inc
cli
es
imul
in
imul
inc
call
and
dec
xor
rcll
push
sti
out
imul
out
roll
xchg
add
in
in
or
adc
xchg
push
mov
ret
jo
aas
sub
xor
mov
sahf
ret
mov
mov
mov
insb
pop
xor
pop
movsl
fisubs
enter
test
sahf
js
pslld
nop
xchg
les
negl
cmpsl
leave
or
add
loopne
xor
loope
or
push
cmp
mov
sbb
inc
xchg
arpl
sti
popf
mov
sbb
add
mov
lods
stc
and
xor
movsl
xlat
push
ds
and
mov
pop
insb
out
push
mov
insb
test
lea
out
cli
lds
dec
test
incb
nop
imul
js
jne,pt
cmpsl
outsb
dec
mov
xor
xchg
fistpl
sbb
jb
sbb
pop
cmpsb
cltd
sub
sbb
xor
loopne
mov
pop
add
mov
loop
or
rclb
xor
inc
mov
jno
adc
mov
dec
mov
sub
cmp
out
push
cmpl
stc
mov
xchg
sub
pop
iret
popl
inc
testb
hlt
shlb
and
scas
dec
repnz
cs
sub
test
mov
jge
inc
dec
lds
std
gs
jl
jg
xchg
mov
repnz
cli
lds
xchg
gs
das
adc
sti
ficomps
aaa
jae
jle
insb
out
std
pop
out
shrl
push
mov
lahf
add
inc
cs
sbb
add
insb
add
mov
push
shrb
clc
and
mov
push
ds
xchg
and
cmp
lods
fildl
clc
daa
or
pop
xchg
adc
jnp
outsl
push
lds
test
dec
jge
adc
inc
cmp
mov
pop
inc
mov
dec
inc
fidivrl
or
gs
mov
jnp
in
mov
das
xchg
jo
pop
mov
cld
ret
mov
mov
lahf
add
fwait
sub
movsl
push
lock
xor
roll
dec
cmc
leave
popa
gs
push
fnsave
jg
addb
outsb
xor
outsb
sarl
rcrl
rcll
adc
fs
push
pop
jmp
cltd
jno
daa
jne
or
call
jl
pop
dec
in
push
adcb
mov
mov
jne
cmc
sub
or
mov
dec
sbb
dec
adc
sub
aad
call
testl
das
sub
sbb
cmpsl
push
sbb
xchg
mov
out
fimuls
xor
xor
sbb
sub
jno
pushf
or
and
sub
xor
fcompl
add
fldt
rorb
push
mov
push
jmp
or
stos
aas
popf
mov
pushf
icebp
jle
repz
sub
pop
int3
inc
push
inc
or
add
add
ds
pop
subl
sti
lret
sub
jns
imul
mov
xchg
or
push
dec
jo
dec
daa
xchg
push
push
insb
int3
outsb
insl
pushl
nop
inc
dec
mov
jp
lret
pop
adc
data16
test
fnsave
mov
je
adc
push
stc
add
je
and
ffreep
popf
loopne
mov
cli
push
arpl
xchg
mov
stos
sbb
clc
xor
pusha
xor
mov
leave
adc
pusha
je
cmc
xchg
mov
xor
cs
outsl
push
test
mov
lds
outsl
dec
pop
lock
inc
outsl
repz
sbb
mov
aas
pop
std
xor
add
lret
adc
mov
jecxz
add
or
add
jae
flds
push
icebp
insb
sbb
mov
scas
jns
cmpsl
test
ja
je
cli
mov
movsl
ja
incl
loopne
lcall
add
les
xchg
dec
mov
cli
testl
pop
add
gs
xor
add
in
nop
popf
xchg
mov
outsl
xchg
sbb
jecxz
mov
ret
aam
jmp
push
enter
leave
xor
fnsave
dec
xchg
js
xchg
push
pop
mov
cmp
cmp
and
loopne
pop
outsb
and
out
dec
dec
xor
fimull
sbb
leave
mov
jne
cltd
or
mov
xor
in
shrb
ds
fsubp
das
jnp
add
sbb
xchg
jg
movsl
push
pop
aaa
mov
sbbl
lods
flds
xchg
mov
xlat
rorb
ret
jg
or
sbb
sbb
in
push
push
mov
jae
adc
sub
mov
sub
out
mov
xchg
add
cmp
xchg
in
scas
mov
xchg
fiadds
in
push
jmp
mov
xor
jmp
dec
test
adc
ja
cmp
add
shrb
add
movsb
stc
lea
push
sarl
sub
mov
rorb
testb
add
arpl
xchg
fwait
test
jbe
mov
fstp
push
mov
test
jp
lods
xchg
jns
inc
iret
adc
imul
shrb
in
ficomps
sub
lods
and
adc
mov
inc
or
pop
decl
pop
shll
xchg
push
jg
xchg
xchg
jns
mov
stos
aad
adc
les
xor
cmp
cmpsb
cmp
in
pusha
fsubl
or
jp
sahf
sarl
pop
leave
adc
add
mov
cmp
or
xchg
and
ss
xorl
pop
add
fwait
cltd
add
add
sbb
loopne
mov
loop
and
dec
jns
xor
sub
aad
jle
sti
lock
pop
outsb
sub
je
xor
sbb
fimuls
jne
scas
dec
call
mov
test
add
ja
stos
cmp
jae
mov
pop
mov
lods
idiv
pop
lock
stos
cmpsl
enter
rorb
fdivp
repz
lods
test
icebp
lcall
jge
sahf
xor
pop
iret
jmp
icebp
inc
stc
mull
cmp
gs
sbb
mov
add
jae
in
aas
inc
jp
push
pop
pop
pop
mov
int
scas
mov
inc
push
mov
inc
dec
mov
fdivrl
pop
push
into
inc
pop
sbb
popa
fwait
je
cmp
es
dec
adc
les
add
add
popa
rorb
sbb
fwait
lret
leave
xor
clc
aam
stos
mov
fstpl
jns
cmp
test
dec
scas
cmp
fs
lahf
or
ficompl
insl
cmpsb
out
lods
nop
inc
inc
dec
mov
ret
or
mov
and
adc
dec
js
or
rorb
jg
or
rorb
arpl
sub
jp
bound
repnz
xlat
or
lret
lcall
inc
xchg
in
or
test
sahf
in
je
and
sarl
into
adc
inc
cwtl
push
push
rolb
and
inc
mov
int
and
sbb
push
aas
mov
arpl
out
mov
out
xor
mov
sub
sbb
jno
test
adc
mov
sarl
loope
sub
roll
push
xchg
mov
jle
fwait
and
test
and
jns
or
es
cmp
pop
sbb
das
in
pop
mov
in
stc
daa
shl
pusha
aaa
rep
and
mov
lds
adc
dec
cmp
mov
clc
pop
jge
daa
mov
shrb
inc
pushf
add
sub
loop
mov
repnz
outsl
adc
mov
xchg
ret
rcrl
stc
aaa
lock
push
mov
dec
mov
popf
idivb
lods
addb
xchg
mov
cmpsb
jge
adc
sub
mov
pop
insl
or
out
push
insl
jecxz
in
pushf
push
xchg
ds
xor
pop
test
inc
sahf
push
mov
bnd
nop
test
xchg
mov
inc
inc
fidivs
push
in
inc
dec
movsl
push
dec
addr16
or
sub
mov
pop
push
mov
dec
jmp
adc
sbb
mov
bound
adc
data16
clc
subb
pop
ret
icebp
jecxz
out
cmp
sbb
or
gs
mov
rclb
jge
xchg
lahf
int3
xor
lods
xchg
mov
inc
out
xor
mov
sbb
test
inc
stos
or
fnstsw
rcrb
pushf
bound
in
jge
into
ret
faddl
push
mov
in
cltd
popa
ja
dec
imul
dec
jae,pn
cltd
stos
mov
bound
mov
adc
sarl
or
or
je
push
movb
jg
loopne
shlb
cltd
jne
sub
mov
mov
jo
jnp
inc
push
nop
into
push
inc
and
inc
test
xchg
push
icebp
ss
adc
or
mov
inc
aas
pop
mov
jae
add
pop
jbe
icebp
adc
push
mov
sarb
sbb
imul
repnz
dec
lcall
or
cmp
push
das
jl
paddb
mov
add
mov
les
jae
mov
popa
jp
stc
in
test
leave
loopnew
je
inc
loop
xchg
out
and
cmpl
cld
das
loope
jge
xchg
adc
jnp
dec
xchg
add
pop
repnz
enter
mov
mov
push
test
lret
cmp
lock
sbb
mov
mul
ljmp
loope
in
leave
jl
mov
sub
in
fidivl
dec
adc
and
add
mov
and
mov
jl
inc
bound
add
xchg
dec
shlb
add
or
or
jmp
xor
loop
jmp
sbb
pusha
inc
push
mov
ret
adc
pop
mov
jnp
enter
jmp
enter
or
fsubl
push
and
and
mov
mov
pop
pushf
cmp
mov
aas
sub
push
and
leave
or
pop
mov
xchg
jmp
mov
sbb
mov
ds
cmp
xchg
xchg
out
lahf
adc
pop
dec
fidivrs
push
loope
and
sub
js
in
sbb
sub
movsb
cmp
inc
inc
out
jmp
stos
mov
mov
enter
mov
inc
cmpsb
push
sbb
jnp
cmp
ljmp
add
gs
ja
adc
ja
xchg
cmp
daa
adc
movsb
out
xor
sbb
or
ficoms
lret
and
in
mov
push
popa
aad
push
popa
adc
sbbb
jmp
xchg
pop
movsb
mov
and
sbb
xor
cmp
mov
pusha
rcrl
cmp
iret
ja
adc
jbe
aaa
fiadds
in
adc
insl
or
cmp
jb
jbe
mov
test
and
repnz
outsl
nop
pop
gs
cld
nop
add
aaa
decl
shll
inc
lcall
lahf
lds
mov
cli
mov
aam
daa
dec
mov
mov
mov
inc
xor
sbb
pop
popf
mov
out
imul
imul
inc
fists
pop
ljmp
sub
rcl
ret
inc
and
movsb
jne
daa
xlat
mov
addr16
ja
push
mov
stos
mov
and
mov
stc
jge
lods
jecxz
sub
orb
add
jbe
mov
add
std
ret
call
mov
cmp
push
ret
insl
add
test
sub
adc
movsb
addr16
dec
push
xor
xchg
testl
rorl
adc
scas
mov
mov
addr16
jg
ljmp
jle
in
xchg
nop
mov
cmpsl
mov
adc
fsubl
or
leave
outsl
fsubp
mov
mov
fisubl
leave
iret
jae
jmp
rcrl
pop
ss
loope
notb
das
pop
subl
out
stos
push
xchg
in
adc
mov
jp
sar
sbb
test
loopne
xor
mov
scas
dec
xor
test
pop
cmp
and
cwtl
icebp
test
into
or
sub
outsb
dec
aas
lds
and
aas
pop
jmp
jmp
test
xchg
call
aam
dec
mov
fsubrl
mov
mov
pop
xlat
clc
add
cmc
lock
addr16
sbb
fwait
mov
inc
mov
jae
fadds
or
icebp
stc
arpl
lret
sahf
insl
pop
les
daa
in
pop
push
push
mov
in
adc
add
aam
mov
mov
enter
outsb
push
aas
in
mov
inc
and
cld
add
cwtl
outsb
fwait
outsl
jmp
shll
incl
mov
sbb
mov
inc
fwait
ret
cmp
scas
enter
dec
sbb
ret
mov
sbb
fwait
lds
add
nop
rorb
jns
jae
sahf
or
insb
cltd
push
bnd
frstor
nop
pop
cmp
sahf
add
lcall
cmc
lret
shrl
sbb
cli
or
cmp
loopne
jle
dec
push
mov
fistps
fld
sti
push
jmp
stos
lods
dec
inc
bswap
lret
imul
cmpl
movsl
in
mov
pop
iret
push
aad
jo
ret
test
fwait
movsb
cmp
std
and
jg
fdivrp
lock
jecxz
sbb
pop
xor
mov
mov
aam
testb
arpl
add
out
call
xor
inc
or
pop
clc
dec
enter
sub
sbb
dec
cli
pop
ljmp
cwtl
sub
pop
clc
dec
enter
sub
sbb
dec
cli
pop
ljmp
cwtl
sub
clc
dec
enter
sub
sbb
dec
cli
pop
ljmp
cwtl
sub
pop
clc
dec
enter
sub
sbb
sbb
xor
mov
xor
add
adc
fidivs
xor
dec
mov
test
xchg
in
cmc
movsl
aam
aam
and
xor
add
xor
and
adc
popa
movsb
hlt
mov
in
xchg
in
hlt
movsb
les
fs
adc
fs
and
adc
add
hlt
mov
in
icebp
stos
xchg
popf
clc
in
mov
adc
pop
inc
and
mov
pop
add
ja
sbb
cmp
pop
inc
jno
mov
leave
gs
test
shl
dec
sbb
sub
rcrl
movsb
or
int3
sub
aad
fs
andl
ljmp
in
rcl
imul
dec
xor
inc
sbb
jno
inc
clc
adc
and
sbb
in
or
test
jl
add
cmpsl
inc
aam
fiadds
stos
add
mov
push
add
or
icebp
aam
xchg
les
cld
sub
xor
mov
xchg
dec
test
scas
mov
hlt
loopne
mov
hlt
hlt
lds
fs
adc
fs
and
adc
add
hlt
mov
test
xchg
in
hlt
movsb
les
sbb
daa
jae
push
add
jo
test
std
jmp
lock
sarb
jnp
ja
jo
pop
daa
add
popa
inc
inc
sub
notb
icebp
xchg
scas
roll
rclb
sbb
xor
cmp
push
je
inc
adc
add
hlt
mov
test
xchg
in
hlt
movsb
les
fs
adc
fs
and
adc
add
hlt
mov
test
xchg
in
hlt
movsb
les
dec
mov
inc
adcl
jg
ss
mov
cli
pop
cmpsb
leave
adc
xlat
mov
jae
popa
dec
ret
pop
gs
filds
stos
out
add
lods
dec
and
inc
jb
cmp
push
or
sub
lods
push
jnp
stc
cmp
jo
icebp
cmp
xor
or
jo,pt
insl
sbb
call
insl
fsts
in
scas
into
mov
mov
xor
pop
pop
mov
cmc
ja
sbb
int
dec
ja
popf
inc
inc
jae
ret
or
in
add
jb
sub
lahf
mov
adc
mov
hlt
mov
adc
add
lds
mov
sub
mov
and
jnp
outsb
fs
cltd
cmp
aam
mov
or
cmp
sub
xchg
pop
inc
cmp
cli
cmpl
jge
add
jge
flds
leave
insb
popa
scas
enter
xchg
call
mov
lcall
ret
add
adc
or
popa
cmp
fcmove
cld
pop
ret
fwait
test
repnz
pop
jmp
inc
add
iret
and
inc
jb
ds
loop
push
jg
rcr
aas
add
mov
scas
dec
pop
inc
add
loopne
cmp
xorb
fcmovnb
xor
and
test
adc
adc
daa
cmp
inc
jns
xchg
xor
xchg
pop
gs
or
lret
xor
xchg
sub
push
push
sbb
adcb
and
xchg
dec
jmp
add
iret
insb
sub
sarb
lahf
jns
repz
dec
dec
std
adc
dec
fldl
add
mov
jmp
mov
scas
mov
inc
aam
lea
into
jae
add
das
sub
add
fists
sbb
jb
adc
fstps
mov
fdivrl
test
int
repz
and
mov
pop
push
stos
loope
xlat
xor
jno
test
into
mov
or
aas
fs
sbb
jb
pop
stos
ljmp
sub
loope
lret
push
in
sub
insl
xchg
xor
in
adc
pop
pusha
mov
push
lret
cmpsb
lahf
stos
lds
fldl
xchg
sub
data16
arpl
jl,pt
sub
je
sarl
subl
or
xchg
adc
roll
xchg
repz
pusha
push
jp,pn
pop
hlt
rcrb
push
pop
data16
repz
pusha
jne,pt
or
les
sbb
int
cmc
sub
add
and
cmp
push
cltd
js
shlb
adc
add
aad
or
int3
scas
cwtl
inc
lahf
xchg
test
adc
clc
cmp
or
mul
scas
inc
xchg
pop
mov
adc
or
leave
push
cwtl
jge
out
add
sub
add
sub
sbb
pop
in
xlat
inc
or
jmp
xor
jb
pop
dec
or
pop
jb
hlt
xchg
sarb
mov
pop
mov
jl
sbb
mov
cmc
push
cli
inc
inc
mov
inc
mov
mov
xchg
dec
gs
mov
push
dec
xor
scas
xor
cmp
mov
repz
mov
insl
mov
sahf
or
lock
lcall
cli
cmpsl
movsl
adc
ret
mov
jg
test
jmp
mov
adc
pop
or
jg
and
sti
aas
sub
sub
sub
out
jno
mov
je
pop
stc
test
ficoml
pop
or
cmp
cltd
orb
add
fcomp
adc
scas
xchg
mov
xchg
inc
das
loop
test
sbb
jo
cmp
sbb
add
sahf
mov
cmc
xchg
insb
mov
jmp
clc
xchg
adc
fistpl
sbb
xor
mov
pop
mov
testb
movsl
std
sarl
push
mov
pop
jbe
in
xchg
icebp
push
fadds
js
xor
push
xor
push
ror
movsb
and
dec
shlb
push
push
push
add
xchg
cmpsb
sub
lcall
fwait
iret
lock
adcb
jmp
mov
ljmp
hlt
aas
cmp
sub
cmp
dec
mov
push
jns
xchg
lcall
inc
mov
sub
and
sub
outsl
cld
pop
sti
rolb
pop
cmpb
ja
daa
inc
int3
mov
loop
push
mov
inc
add
add
popf
clc
nop
jle
sub
jge
mov
rcl
cwtl
aaa
xor
sub
mov
mov
or
pop
xchg
sahf
or
std
mov
pop
jge
aaa
mov
loope
mov
jb
iret
mov
mov
pop
sbb
imul
mov
mov
test
or
rorl
lock
or
jmp
adc
adc
std
std
push
out
fnstsw
push
sbb
pop
rorl
mov
mov
dec
shll
mov
repz
jecxz
fidivrs
add
ret
arpl
mov
scas
mov
dec
cld
fiadds
add
fs
xor
fs
lahf
adc
mov
mov
mov
xlat
jecxz
lods
dec
mov
xor
add
mov
dec
add
push
inc
and
dec
and
fdivs
lods
test
mov
adc
and
fistpll
xchg
mov
pop
pop
addr16
pushf
loopne
jne
cltd
sub
bound
add
jmp
xchg
xchg
mov
je
aam
push
mov
js
orb
hlt
mov
add
sub
sbb
nop
or
rorl
jnp
les
xlat
mov
loopne
aas
not
xor
scas
push
jle
aas
add
cmp
lock
in
mov
fbld
cld
stc
popa
bound
add
gs
mov
pop
xor
dec
xchg
xchg
jnp
aas
cmp
leave
inc
jb
pusha
dec
mov
out
or
adc
xor
arpl
and
jno
les
inc
mov
sbb
mov
push
out
or
pop
push
cmp
movsl
and
push
add
inc
sub
ja
test
bnd
jb
push
push
cltd
cmpl
xchg
dec
std
enter
ljmp
lock
push
aad
cmp
mov
cmpsb
jo
outsl
xor
divb
imul
jmp
pop
inc
inc
stos
mov
in
sub
mov
jno
pop
lcall
lods
cld
or
xchg
sahf
out
fwait
scas
push
sbb
mov
inc
inc
mov
and
add
sbb
fucomi
test
insl
in
cmp
std
push
dec
pop
pop
jo
or
pop
scas
jbe
xlat
mov
loop
fisubrs
mov
fsubrl
sub
mov
cs
aas
lea
arpl
cmp
bound
lret
sub
sbb
bound
inc
imul
mov
shrb
mulb
sahf
pop
cs
pushf
mov
push
xchg
mov
and
cmp
adc
lret
cmpsl
sub
mov
jae
in
loop
inc
mov
gs
mov
xchg
and
pop
into
mov
movsl
nop
lds
icebp
push
or
out
add
je
and
push
mov
imul
xchg
sub
sub
clc
add
add
aas
into
mov
pop
shll
dec
jno
shrl
popf
jns
sub
add
fiadds
lods
mov
rcrl
add
pop
mov
sbb
jnp
pop
dec
add
sar
pop
push
test
sbb
cmp
test
xorb
xchg
or
notl
clc
jb
push
js
data16
mov
mov
pop
filds
sub
pop
sub
ret
filds
xchg
push
cld
jmp
sti
bnd
scas
lds
push
adc
jns
mov
push
mov
js
pop
mov
xchg
mov
es
lds
daa
xor
xor
repnz
imul
scas
cmp
cli
adc
out
sbb
aas
outsl
mov
push
mov
pushf
push
pop
enter
push
cmp
fwait
stos
das
fscale
mov
stc
ljmp
loope
and
sbb
clc
sub
int3
jecxz
pop
and
cmp
int3
push
xorl
inc
js
lods
ljmp
xor
sub
popf
repnz
shrl
fmull
mov
adc
adc
xor
insb
in
rcl
add
lock
pop
adc
mov
push
pop
dec
add
out
sub
xchg
es
pop
add
sbb
pop
sub
scas
addr16
mov
pop
rcll
stos
dec
in
pop
adc
add
daa
lret
pop
dec
jb
cmc
jecxz
ret
cmp
lds
xchg
adc
push
xor
rcrl
shl
push
jp
test
push
xor
xchg
dec
cmc
xchg
aad
adc
adc
jge
lahf
sbb
test
push
lock
or
lret
pop
push
push
xchg
sbb
mov
ja
xchg
mov
xchg
jb
push
dec
pop
sub
push
xchg
mov
cmp
test
ret
imul
adc
or
mov
pop
pushl
and
jae
or
mov
xchg
mov
and
sub
hlt
jns
cmp
orb
push
daa
mov
scas
test
in
xor
mov
mov
jno
mov
fcoms
xlat
pop
mov
incl
jno
stos
repz
xor
sub
pop
jl
pusha
addr16
adc
sub
rcrb
and
xchg
push
xor
adc
push
mov
aad
fmuls
dec
mov
xchg
iret
enter
push
pusha
imul
pop
in
cld
inc
cmp
popa
jno
mov
call
mov
xor
std
sub
xchg
and
inc
js
fcomi
push
xor
cli
mov
rep
arpl
pop
or
fdivs
lret
push
mov
mov
or
sbb
iret
loope
and
mov
inc
mov
add
push
and
mov
add
adc
scas
fwait
jbe
xor
pop
mov
pop
cwtl
out
push
icebp
lcall
mov
stos
out
jns
aaa
jae
cld
test
pop
cs
xchg
out
inc
and
out
loopne
sbb
int3
sub
mov
and
push
sbb
adc
stos
dec
mov
aad
mov
cmpsl
shl
sahf
dec
inc
mov
shll
int3
xchg
sub
sbb
jp
inc
addr16
or
hlt
jmp
movsl
mov
jnp
ljmp
push
pop
out
insl
loopne
sti
cmc
jbe
dec
jnp
jne
pop
cmp
sub
sub
jecxz
xor
lahf
jb
das
xchg
rcll
sbb
jns
or
and
imul
addr16
rcl
jb
inc
inc
shrb
pop
cs
xorl
sbbl
shrb
mov
and
sub
loope
out
imul
outsb
outsl
push
test
iret
or
pop
lcall
mov
lahf
jnp
es
mov
sbb
xor
add
push
dec
stc
pushf
loopne
push
cmpsl
inc
mov
xor
push
dec
sub
pusha
inc
pop
push
push
pop
pop
pop
pop
xor
push
xchg
insl
jnp
cmp
nop
hlt
insb
insl
mov
xchg
enter
mov
mov
roll
jae
push
inc
adc
mov
xchg
stc
and
add
inc
subb
adc
loopne
mov
push
ss
xchg
jb
push
aaa
mov
jmp
adc
add
cmp
es
shlb
push
fmull
enter
mov
inc
jp
xchg
fsubrp
clc
xchg
sbb
sbbl
int3
fstl
stos
in
es
mov
hlt
or
int
push
xchg
add
xor
loope
cwtl
sub
add
or
sbb
rcrl
testb
mov
xor
test
or
jp
faddl
shll
cmc
lods
enter
lods
sti
pushf
inc
sti
outsb
ret
sahf
adc
mov
ficompl
push
in
mov
cmp
iret
testl
sub
jae
xchg
xchg
xor
test
mov
pushf
jo
leave
sti
lcall
dec
push
fwait
out
xchg
outsb
mov
ljmp
adc
mov
shrb
mov
loope
div
push
enter
into
jecxz
enter
push
push
in
sub
add
sbb
popf
in
stc
pop
lock
cli
xchg
inc
pop
leave
dec
inc
fidivs
stos
scas
dec
push
sbb
inc
inc
mov
loope
xor
pusha
ret
mov
jp
mov
loope
dec
jnp
std
push
xchg
enter
add
out
mov
ja
xchg
pop
jnp
and
lods
lds
movsl
mov
push
sub
pop
popf
xor
mov
mov
inc
pop
add
fmuls
push
or
lock
sbb
xor
mov
icebp
sbb
push
pushf
cmp
jno
push
xor
imul
je
pop
inc
ffree
sub
mov
movsb
mov
fsts
jecxz
xchg
inc
sbb
jae
in
sti
pop
fsts
ficoml
cmp
push
ficoms
aas
arpl
lock
pop
sbb
mov
inc
add
push
shrl
arpl
ss
cmpsl
or
and
or
cs
inc
mov
lea
popa
cs
and
loop
mov
pop
jl
sbb
xchg
scas
ret
cmp
push
xchg
daa
push
addb
sub
dec
xor
jmp
loopne
dec
or
enter
movsb
push
lock
ror
sbb
dec
mov
lcall
push
jg
jge
stc
inc
scas
mov
insl
push
mov
loop
push
push
cwtl
pop
lret
cmp
add
shrb
cmp
test
popa
cmp
lahf
sbb
sub
mov
push
in
cmp
addr16
int
push
and
add
jns
jmp
inc
dec
lret
dec
push
mov
sti
mov
mov
sub
push
repz
dec
cmp
xchg
lret
into
add
xchg
pop
loope
lods
cmp
aas
push
imul
bound
rcrb
aas
xchg
test
push
inc
mov
jmp
popf
sti
lret
mov
xor
ja
test
cli
mov
mov
sub
movsb
int
faddl
push
mov
push
ret
sbb
sbb
push
or
icebp
xchg
jge
sub
cmp
mov
mov
stc
xchg
and
push
xchg
out
daa
cli
dec
xchg
jmp
ss
test
dec
pop
or
cmp
or
push
sub
cltd
add
sub
call
jnp
mov
aas
cli
push
in
adc
scas
in
out
adc
pop
pop
enter
mov
pop
mov
rol
adc
push
push
mov
scas
mov
add
cli
jbe
in
pusha
inc
test
scas
aad
adc
ja,pt
adc
sub
inc
ja
sbbl
cmpsb
out
adc
mov
cmp
mov
adc
data16
ja
test
out
sbb
jns
out
insb
cs
insb
pop
fildll
sahf
jmp
or
cmpsb
bound
fldenv
pop
or
sbb
cmp
test
sbb
inc
push
test
inc
add
test
fdivrs
inc
fstp
and
push
mov
cmp
xchg
jb
sbb
lods
dec
cli
aad
jae
push
adc
in
push
inc
jns
push
shl
sub
fwait
ljmp
in
adc
lahf
add
jne
ljmp
push
stos
ds
test
push
negl
jmp
hlt
dec
pop
or
sbb
cmp
dec
stos
shrb
mov
jbe
es
inc
mov
into
xchg
pop
mov
or
push
xchg
adc
ficomps
popf
push
imul
nop
int3
imul
rcrb
sub
or
in
mov
cltd
add
inc
ja
fs
mov
push
pusha
xor
lock
adc
jne
dec
pop
ret
movsl
xor
lret
hlt
fwait
push
mov
les
xor
cmpsb
roll
popf
test
add
mov
push
push
cmpsl
add
out
rcll
shr
xchg
sbb
fs
push
inc
test
repnz
pushl
sti
mov
out
jl
stos
jg
push
in
xchg
inc
clc
cmp
xchg
mov
mov
mov
orb
shl
out
mov
mov
cmp
jp
iret
jae
or
call
into
cmp
cli
mov
shll
hlt
mov
inc
jp
mov
cmp
int3
dec
sub
fst
dec
mov
pop
sahf
xchg
stos
repz
stos
or
mov
jl
cmp
iret
aad
xor
push
in
mov
cmp
xorb
iret
scas
sub
and
cmp
mov
xchg
pop
mov
adcl
into
pop
xchg
xor
loopne
cmp
fadds
and
les
aas
pop
shrb
fs
pop
push
and
pop
lods
mov
push
fwait
sbb
rcrb
push
cmp
loope
jmp
xchg
sarb
jl
dec
imul
enter
sti
movsl
xchg
push
mov
sbb
iret
or
cltd
fdivrl
inc
jge
xchg
movl
adc
xchg
outsb
lods
imul
scas
jg
mov
adc
inc
dec
push
xchg
dec
sti
ljmp
jnp
xchg
push
repz
hlt
out
sbb
std
lods
mov
lret
nop
fdivl
shll
jo
mov
hlt
mov
popf
cmp
push
hlt
pop
xor
ror
jecxz
and
vphaddubw
pusha
push
bound
sub
sub
add
loop
sub
data16
cwtl
js
fisubrl
push
jg
push
xchg
icebp
adc
xor
xchg
add
mov
mov
test
adc
cmpl
lods
mov
nop
mov
adc
je
xor
push
loop
pop
out
popf
dec
in
cmp
push
pop
cmp
shrb
int3
bound
push
stos
roll
fdivrl
frstor
cmp
push
xchg
sarl
adc
call
movsl
dec
xchg
and
dec
roll
jl
sub
dec
add
jmp
dec
sti
movsb
pushf
cltd
lea
shl
xchg
mov
inc
xor
fistpll
add
xor
jge
inc
push
xor
cs
sub
es
push
clc
in
jae
cmp
xor
adc
lock
jl
mov
cmp
mov
inc
xchg
movl
cmp
es
xchg
scas
pop
xor
icebp
incl
dec
icebp
fimuls
jne
shl
mov
faddl
cmpsl
lds
sbb
sahf
inc
or
and
add
insl
fldl
jnp
push
inc
lahf
push
add
inc
adc
test
and
loopne
push
mov
push
mov
cmp
stos
fcoms
arpl
pushf
imul
sub
push
pop
cmp
add
cmp
jae
mov
dec
jno
mov
and
pusha
rclb
xlat
mov
ljmp
aaa
mov
jae
stc
sub
dec
lret
jb
sub
aaa
dec
xor
cmpsl
mov
xchg
loop
scas
popf
loope
inc
mov
leave
sarl
xor
out
mov
dec
jge
mov
mov
sbb
xor
mov
sbb
pop
adc
adc
sub
mov
icebp
lret
fisubl
xor
lret
dec
dec
pop
aas
fcmovnu
adc
mov
sub
pop
scas
xor
xchg
xchg
setg
and
scas
arpl
sbb
adc
pop
inc
push
fiaddl
bswap
cmp
not
andl
sub
out
pop
flds
push
fstl
adc
lret
xchg
lea
sbb
inc
inc
jne
sbb
mov
xchg
push
mov
insl
pop
cmp
insb
int
das
add
addr16
adc
mov
sbb
pop
jns
inc
cmp
mov
movsb
fwait
inc
xor
data16
in
xlat
aas
pop
movsb
mov
shll
enter
xchg
mov
in
sub
jg
pop
mov
data16
mov
pop
xor
test
dec
cmpsl
pop
sarb
movsb
mov
in
les
icebp
imul
lcall
or
mov
push
adc
fs
and
adc
add
hlt
mov
test
xchg
in
hlt
movsb
les
fs
adc
fs
and
adc
add
hlt
mov
test
xchg
in
hlt
movsb
les
fs
adc
fs
and
adc
add
hlt
mov
test
xchg
in
hlt
movsb
les
fs
xor
and
adc
les
xchg
mov
cmp
pop
cmp
jnp
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
int
es
push
into
scas
push
mov
xor
add
or
add
add
pop
add
add
add
add
add
add
add
add
add
sub
popa
add
add
add
mov
add
mov
adc
jbe
push
add
and
adc
add
mov
push
add
add
add
add
push
add
add
add
add
add
add
add
add
push
add
dec
add
adc
pop
add
add
add
add
xor
add
and
or
add
add
add
add
mov
add
add
add
add
add
add
mov
jbe
arpl
adc
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popf
add
ret
add
jge
and
sub
add
add
add
jnp
sbb
sbb
popa
add
add
add
mov
add
push
add
sub
popa
add
add
arpl
add
add
add
add
mov
add
add
add
add
add
add
add
add
push
add
push
add
push
add
inc
add
add
add
add
add
add
jecxz
lods
add
add
add
pusha
add
ret
add
add
add
add
add
cmp
add
add
add
in
add
add
add
add
add
mov
and
or
xor
popa
add
add
add
add
add
add
or
add
insb
add
mov
add
add
jno
add
xchg
add
add
add
addl
fildl
into
add
add
add
add
push
add
add
add
add
dec
add
add
add
add
add
push
add
add
add
add
add
add
add
mov
inc
add
add
add
add
add
add
or
add
add
add
add
add
add
xor
push
add
add
add
add
popa
add
add
add
add
and
xor
push
add
add
clc
add
push
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
sub
add
add
sub
jecxz
and
insb
add
add
adc
aaa
add
mov
or
add
add
add
add
add
add
add
adc
sub
cwtl
add
mov
sbb
xor
pop
add
add
add
add
faddl
add
add
addl
sub
add
add
add
add
add
xor
add
add
add
pop
add
add
add
add
sub
add
arpl
xchg
addb
add
add
push
add
add
add
add
ljmp
add
add
add
add
cs
in
push
clc
and
int
mov
dec
outsl
in
sar
test
jbe
adc
insb
fcompl
fcomip
into
mov
cmp
cmp
sbb
push
sub
cmpsl
mov
enter
dec
bound
adc
push
mov
mov
jl
fbstp
mov
pushf
mov
and
pop
minps
mov
popf
aas
aaa
push
or
cmp
aas
das
jb
jbe
nop
std
xor
aam
xor
and
jge
movsb
sub
and
pusha
rcrl
andb
shll
lret
inc
out
out
and
add
fsubrp
ss
push
mov
loope
xchg
ret
add
mov
xchg
xchg
je
repz
xchg
cmp
out
jp
mov
xor
ljmp
lods
push
js
add
sbb
add
ja
sub
push
stos
pop
mov
inc
ret
scas
push
cmc
cli
xchg
cmpsb
or
or
cmp
or
adc
and
xor
or
lea
xor
addl
jle
dec
and
or
ljmp
cvtpi2ps
daa
cmp
in
jb
pop
push
jnp
xlat
pop
ss
mov
cli
mov
stos
push
add
fbld
xor
subb
fsubrl
imul
xlat
xchg
jmp
cmp
mov
pop
cld
pop
mov
mov
fldt
int3
stos
xchg
jg
xor
jle
ret
call
jge
sbb
andb
jae
lret
stos
cmpsb
testl
cmp
loop
les
gs
xlat
sbb
mov
push
test
or
inc
inc
leave
mov
xchg
popa
xor
dec
dec
test
shll
imul
mov
sarb
xchg
pop
pop
loope
mov
mov
scas
mov
jle
add
sub
jae
gs
test
mov
test
imul
out
pushf
sub
mov
pop
ret
sub
pusha
jno
imull
fldt
imul
sub
test
jmp
adc
push
dec
xchg
push
mov
shll
test
sahf
lods
dec
mov
mov
aas
icebp
push
pop
lahf
sub
stos
outsl
int3
pop
sbb
sub
bound
hlt
andl
std
stos
sbb
stos
fidivrs
cli
mov
fucomi
fs
pop
fstpt
imul
lret
stos
sbb
mov
iret
stos
outsl
sub
sub
mov
mov
fisttpll
testb
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
