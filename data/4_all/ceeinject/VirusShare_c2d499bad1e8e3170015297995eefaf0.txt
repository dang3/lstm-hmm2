call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
push
and
cs
or
push
into
nop
mov
in
jp
push
and
cs
jle
outsb
and
test
scas
xchg
ficoms
out
aad
cmp
sub
sbb
push
insl
push
pop
xchg
dec
sahf
movsl
loop
fdivr
iret
loopne
stos
xchg
orl
pusha
pop
jb
lods
or
jg
clc
mov
and
jle
cmp
lods
adc
cmpsl
inc
push
adc
ljmp
aad
push
test
jg
arpl
ds
dec
out
aas
pop
or
or
movsl
jno
inc
out
push
push
inc
inc
dec
or
jnp
lret
jnp
pop
gs
jg
insb
rorb
jp
sbb
int3
jo
cmp
lds
cli
out
popa
mov
dec
es
inc
jge
sub
out
in
xchg
fwait
push
fimull
inc
sar
lahf
shr
mov
sti
inc
xchg
add
mov
int
adc
sub
sbb
adc
jle
dec
insb
movsl
sbb
pushfw
mov
mov
fisttps
inc
jp
inc
jo
cmp
insl
sub
xor
lret
out
or
testl
jbe
jp
gs
cmp
xor
rcr
loopne
xchg
lods
xchg
stos
cmc
mov
cmp
push
sbb
jne
inc
outsb
push
sahf
movsl
mov
fsubp
into
cmc
inc
out
aad
and
cs
jle
outsb
push
sahf
movsl
mov
fsubp
into
cmc
inc
out
aad
and
jno
adc
and
push
mov
dec
fnstsw
dec
cltd
popf
jno
dec
adc
ss
mov
shrb
not
mov
mov
sarl
xchg
add
push
das
sti
mov
jne
mov
ret
adc
inc
lods
out
out
ja
fldcw
mov
xor
and
out
xchg
and
inc
icebp
jnp
das
shrb
dec
and
cmpsl
xlat
mov
mov
pop
sahf
inc
mov
roll
dec
lcall
mov
in
sahf
xchg
push
pop
les
mov
xor
mov
mulb
jno
xchg
clc
lods
pop
jecxz
cmpsb
rorl
sbb
aad
inc
leave
mov
pop
inc
push
aas
sub
fidivs
dec
mov
jecxz
sbb
mov
add
daa
inc
jo
mov
push
enter
in
imul
in
jne
or
dec
cmpsb
xchg
or
jge
imul
dec
pop
xchg
out
mov
aam
cltd
sbb
dec
ficoms
nop
sbb
push
adc
rcl
jne
xor
stos
aas
outsb
sub
aaa
fldl
mov
int
jne
xlat
notb
pop
mov
jmp
jbe
jge
fnstsw
test
inc
mov
jns
jne
cltd
test
adc
cmp
add
stos
aaa
dec
mov
mov
mov
repz
add
inc
mov
jns
shrb
cmp
int
test
lods
pop
iret
loopne
rclb
dec
hlt
icebp
inc
stos
dec
lea
push
push
in
ficompl
jmp
ljmp
add
inc
mov
rep
sub
mov
jnp
push
cld
ret
add
fistl
jl
das
jge
sub
in
push
cmp
pop
push
mov
sub
mov
cmc
leave
push
jp
mov
jle
push
xabort
ret
jne
insb
jae
xchg
jmp
pop
rclb
xor
xor
add
lcall
dec
lods
push
xchg
fcmovbe
out
in
idivl
adc
pop
push
int
or
pop
inc
xor
je
gs
dec
add
je
jge
aaa
mov
hlt
inc
xor
cs
mov
cmpsl
pop
jnp
stc
jno
mov
adc
push
push
adc
sub
mov
adc
adc
rolb
xchg
pushf
push
cmp
mov
jo
fdivrs
sub
shl
push
test
mov
test
sbb
in
rcrb
fadd
bound
stos
jne
rorb
repnz
adc
xlat
pusha
out
push
fsubs
lea
jecxz
and
cmovbe
xlat
data16
in
jb
push
mov
movsl
shrl
push
shrb
inc
sub
mov
mov
lods
scas
scas
pop
adc
jecxz
scas
mov
sub
dec
dec
pop
fs
movsb
jg
inc
adc
int3
scas
cmp
add
pop
hlt
xchg
int3
cmp
test
in
mov
bound
shrd
shl
dec
add
adc
sub
test
mov
dec
xchg
ror
sub
xor
loopne
mov
pcmpgtw
sub
repz
shll
add
fidivs
cmp
jb
incb
add
fisubrl
jbe
sbb
xor
orb
pop
mov
cmp
mov
addr16
lret
sub
scas
xchg
push
std
addb
das
aad
stos
pop
popf
or
cmpsb
pop
or
push
xchg
gs
or
mov
dec
and
bound
ss
ret
in
xchg
jno
ljmp
dec
and
test
sahf
adc
in
lods
rcll
loop
pushf
or
jbe
call
dec
jle
lods
xor
and
mov
in
adc
sub
pop
pop
loop
sbb
iret
dec
cltd
ljmp
sub
mov
faddl
or
push
sbb
aam
stos
mov
mov
push
xlat
lcall
int3
into
jbe
insb
pushf
sub
push
cmp
notl
filds
jns
mov
ret
cmp
inc
sahf
stc
or
inc
test
lods
inc
call
mov
rorl
inc
jp
movsb
arpl
jle
mov
fs
or
jmp
cli
mov
add
loop
out
push
je,pn
rorb
js
imul
xchg
dec
jb
orl
insl
bound
add
push
fisubs
dec
push
in
adc
jp
mov
data16
fsubrs
mov
test
pop
lahf
or
fwait
fs
out
dec
hlt
adc
fdiv
lcall
dec
mov
add
mov
rcrl
jg
push
inc
cmpsb
push
xchg
fidivl
adc
sub
das
xchg
xor
test
dec
push
and
mov
mov
mov
ficompl
or
lea
add
jp
sub
dec
popa
xchg
sbb
sti
adcl
aas
mov
mov
add
rcll
mov
gs
xor
push
push
nop
int3
test
sbb
stos
dec
jmp
and
pop
xchg
push
outsl
fldenv
fwait
jnp
sbb
or
adcl
addr16
or
cltd
repnz
out
ret
inc
imul
out
mov
hlt
aas
jmp
pop
mov
iret
fucomi
pop
je
mov
add
arpl
or
sub
icebp
mov
in
stc
mov
bound
jo
mov
and
xchg
call
cmp
adc
sub
lods
pop
push
fwait
dec
mov
jae
and
jb
add
popf
scas
mov
lret
sbb
mov
pop
or
jp
xor
shrl
jb
repnz
xchg
subl
mov
xchg
mov
outsl
insb
ret
push
inc
xor
push
xor
ret
cmpsl
in
test
js
addl
mov
inc
pop
inc
filds
xlat
shlb
lea
inc
push
inc
je
outsl
enter
notl
arpl
test
add
xor
adc
sbb
test
dec
sub
cmp
js
mov
xchg
cmpsl
movsb
in
inc
jns
dec
jo
xor
int
dec
sub
das
xchg
fstpt
xchg
sbb
push
addb
repnz
and
scas
jb
enter
aad
test
dec
dec
fiadds
cmp
jnp
push
or
and
stos
or
and
aas
test
push
lds
test
push
shll
xlat
call
aad
add
and
cltd
inc
dec
nop
fldenv
push
clc
jbe
cmp
loope
repnz
in
andb
or
push
jge
repz
jle
push
mov
mov
cmp
roll
stos
hlt
imul
sbb
xor
ja
cmp
repnz
dec
cmpsb
pop
sarl
fidivrs
mov
sti
sub
mov
xchg
out
dec
test
sbb
sub
rcrl
pop
and
out
sahf
cmp
pop
push
mov
adc
insb
loop
cmp
lcall
cmp
push
inc
cmp
jns
call
icebp
add
mov
mov
sbb
pop
jp
pop
insb
daa
gs
fmuls
lock
cmp
jae
lds
pop
add
xchg
rcrb
push
xchg
or
sub
stos
movsl
adc
jmp
and
repz
repz
arpl
xchg
std
xchg
bound
inc
outsl
jo
aam
jge
stos
mov
sub
outsl
fnsave
repnz
cmpb
test
push
loope
loop
push
xor
lret
adc
and
mov
xlat
nop
mov
cltd
cmp
ss
cli
and
xor
icebp
add
repz
jne
repz
mov
arpl
pop
stos
cltd
cmp
and
and
sbb
cmp
push
xchg
jb
push
inc
insl
lret
mov
bound
mov
in
dec
test
add
adc
lret
rcl
shrl
mov
out
jecxz
int
mov
cmp
aaa
je
pushf
pop
gs
or
fldcw
push
addl
aaa
sub
dec
push
sti
movsb
mov
cli
cmp
rorb
lea
dec
mov
push
sbb
in
scas
adc
and
xchg
out
movsb
pop
and
pusha
out
mov
cmpb
cwtl
cmp
loopne
adc
lock
add
ljmp
aad
leave
mov
jg,pt
in
adc
lock
jnp
xor
sbb
std
inc
adc
in
mov
pop
nop
mov
test
repz
ret
fldl
out
subb
outsl
movb
mov
add
test
add
movsb
out
daa
adc
sbb
icebp
cs
rorb
fistl
xor
mov
xchg
outsb
in
inc
inc
xor
add
shlb
xchg
stos
frndint
popf
aas
lcall
mov
mov
int
mov
aad
mov
iret
stos
jbe
sti
imul
cmp
lret
int
sbb
jle
jnp
mov
idivl
mov
ljmp
ret
imul
pusha
push
add
orl
icebp
repz
lods
mov
push
addb
adcb
cmp
scas
sub
xor
xor
sti
cli
pop
push
xor
lods
popf
jl
js
xor
ljmp
mul
mov
lcall
mov
cmp
pop
out
fwait
adc
mov
adc
mov
outsl
xchg
paddd
movsl
imul
popl
mov
inc
loop
mov
hlt
repnz
int3
jle
xor
movsl
sbbb
or
jns
std
out
iret
push
jecxz
mov
leave
test
shr
imul
dec
testl
xchg
xlat
dec
jl
repz
push
jne
or
rcll
scas
jmp
pop
jmp
into
jge
jmp
fdivl
inc
push
pop
and
adc
mov
inc
cmp
sbb
lds
xor
lret
push
sbb
movsb
xor
movl
jae
lods
push
movsb
adc
ret
and
and
jecxz
xchg
push
imulb
jno
fdivs
or
in
fildll
adc
ljmp
arpl
mov
imul
fcoml
jp
or
pusha
xchg
jne
mov
sub
rorl
js
sti
inc
daa
or
sbb
lods
pop
mov
pop
jle
xchg
jecxz
jge
xchg
lea
insl
pop
out
lds
xor
repz
scas
and
mov
cmpl
xor
icebp
int
fimuls
add
xchg
inc
inc
jl
and
mov
lret
xor
rcrl
cs
imul
jmp
popf
xchg
das
pop
inc
add
insl
xchg
inc
stc
xchg
les
jmp
in
rolb
sub
es
lock
push
rcr
push
shlb
cmp
xor
cmp
rorb
xor
mov
out
pusha
inc
fdivrp
out
jo
jle
adc
je
stos
dec
mov
ss
test
mov
xor
flds
dec
jns
jns
lret
lock
lds
or
out
mov
mov
mov
pop
ds
mov
mov
mov
push
imul
popf
jo
fwait
mov
or
movsb
fsubrl
lds
mov
mov
push
loopne
into
leave
cmp
pushf
pop
outsl
std
outsw
inc
stos
fdiv
mov
xchg
jecxz
inc
pop
jmp
sub
cmp
mov
pop
je
jbe
pop
leave
xor
ds
or
push
outsl
push
xchg
sbb
hlt
pop
xchg
push
cmp
dec
add
loop
jge
ret
inc
rcll
push
dec
repz
loopne
aam
push
add
lcall
pop
push
bound
cwtl
jns
inc
jmp
jge
mov
fsub
jne
lea
pop
jmp
xchg
dec
pop
or
xchg
and
xchg
xchg
pusha
pop
jo
movsl
or
movsl
adc
dec
repz
xchg
imul
mov
jnp
or
call
jne
movsb
sbb
sarb
dec
stc
mov
inc
adc
bound
loop
shl
mov
ret
enter
sbb
jno
jmp
xchg
ss
out
out
xchg
dec
cli
cli
mov
lock
shl
sub
adc
xchg
clc
arpl
dec
scas
cld
imul
adc
scas
mov
cmp
loope
and
sub
inc
out
push
stos
mov
ja
cmp
jecxz
popa
ficoms
out
addb
push
arpl
mov
sti
jbe
stos
into
cld
test
sti
jp
outsb
mov
jns
shll
insl
ja
sarb
arpl
cmc
sbb
push
mov
jbe
iret
dec
lods
popf
hlt
into
xor
fistl
adc
hlt
shl
pop
aad
pop
dec
stc
bound
push
xor
lea
mov
add
pop
daa
jecxz
aad
sbb
cld
jecxz
icebp
icebp
fsts
and
and
xchg
xchg
loop
lret
jno
xchg
lcall
cmpsb
mov
push
pop
popa
insb
lcall
popf
out
fldl
and
call
dec
pop
pop
push
add
push
stos
dec
js
ret
inc
dec
xor
das
mov
jp
cmp
xor
pop
ja
cmpsl
sub
in
cli
mov
mov
dec
push
dec
nop
cmp
inc
insl
movsl
into
shrl
fisubrl
mov
mov
scas
stos
lods
clc
outsb
notl
ret
ss
push
loope
cmc
mov
xchg
sti
push
mov
ret
mov
push
adc
popf
repnz
pop
mov
inc
pop
out
ljmp
or
popf
sub
pop
aam
jb
inc
mov
push
aam
shrb
call
leave
lea
sbbl
test
mov
addr16
mov
rcrb
xor
cli
xor
push
sbb
adc
or
stos
fs
or
and
popf
add
dec
int
in
pop
test
mov
je
inc
jecxz
cwtl
or
jne
pop
aad
inc
sub
aam
jns
push
ja
push
fildl
mov
and
stc
iret
dec
ficomps
xchg
fisubrl
lahf
dec
xor
into
sub
divb
sbbl
icebp
ss
mov
mov
mov
xor
pop
movsb
sbb
roll
les
mov
insb
test
scas
movsl
outsl
push
inc
test
sub
sbb
lret
mov
adc
push
popa
mov
lock
mov
cmp
or
push
sti
shll
dec
push
fdivrl
add
notl
lods
xor
clc
nop
sub
jb
shlb
adc
leave
int3
lea
cmpsl
lock
or
sti
mov
jmp
push
daa
cmpsb
cmpsb
xchg
cmp
adc
scas
or
in
jae
iret
and
loop
clc
push
dec
pop
lock
cmc
fwait
pop
loop
ss
fldl
shl
icebp
pop
loop
outsl
push
aad
sbb
push
and
dec
pushf
std
pop
outsb
mov
bound
adc
jb
incb
das
clc
lds
inc
jecxz
cmpsl
lods
or
mov
dec
jb
jno
out
cmp
loope
dec
or
lahf
adc
sub
mov
out
mov
mov
jae
js
xchg
fsubl
rorb
test
cmp
sub
insl
scas
arpl
inc
and
jp
mov
mov
and
data16
or
dec
icebp
outsl
cmpsl
sub
sub
subl
out
push
and
addr16
jecxz
cmp
mov
push
or
xchg
jle
cmpsl
pop
sub
dec
pop
xchg
push
cwtl
mov
inc
push
leave
inc
setp
outsb
dec
or
fnstsw
sahf
negb
fwait
adc
dec
jl
ds
nop
rcrb
jnp
cmc
dec
insl
jge
jnp
pop
js
cmpsl
movsb
and
fsts
ljmp
cld
bt
aad
xchg
dec
fwait
leave
mov
dec
mov
mov
sbb
jns
stc
cmc
popf
bound
cwtl
xor
pop
adc
xor
clc
mov
xchg
adc
sbb
jp
dec
aad
dec
cmp
add
add
out
sub
push
xorl
jmp
mov
insb
xchg
out
jge
or
call
test
hlt
into
xchg
inc
and
inc
dec
insb
aad
add
test
mov
shlb
ds
jne
mov
cmp
outsl
jp
imul
in
enter
xor
adc
pop
add
insl
add
out
sbb
in
js
add
subl
gs
adc
fistps
cmpsb
lret
aas
sbb
ds
xor
inc
mov
pop
inc
xchg
out
xchg
adc
sub
xor
mov
dec
and
sub
faddl
jne
cmp
test
aam
jnp,pn
mov
call
inc
push
cmpl
push
shr
jne
push
test
cli
sti
in
icebp
cltd
lahf
xor
out
pop
jmp
and
aam
cmc
mov
xor
or
jl
push
leave
test
adc
js
mov
pop
cli
inc
outsb
lea
xor
mov
xor
imul
testl
inc
push
mov
loop
jae
sbb
cs
cmpsb
jno
in
adc
lcall
xor
or
imul
shll
xchg
stc
out
or
aas
sub
jne
xor
arpl
mov
cmp
adc
xor
mov
clc
stc
pop
push
cmp
or
stos
repz
push
jmp
bound
and
ss
daa
les
xor
cmpsb
mov
mov
imul
mov
rorl
xor
in
fldl
testl
xor
ljmp
xor
int3
xchg
inc
lcall
shl
push
cmp
lock
cld
in
sbb
mov
shlb
jmp
mov
push
loop
call
and
push
insb
loop
mov
out
aad
rcrl
insl
mov
lds
push
jp
popf
mov
pop
add
in
mov
leave
lret
test
xchg
insb
shrb
jne
adc
fcmovbe
scas
adc
jae
push
insl
or
jo
xchg
dec
jo
sbb
dec
pusha
push
jecxz
fmuls
sbb
mov
sbb
pop
push
fistpll
or
ficompl
or
fxch
xchg
iret
fcoms
and
stos
inc
cmp
dec
lcall
outsb
add
lea
pop
push
cmp
js
jne
xchg
mov
xor
xor
and
enter
insb
dec
das
movsb
xchg
xchg
xor
mov
mov
and
jecxz
xchg
sar
dec
add
xor
scas
popa
bound
stos
xor
out
mov
fs
mov
and
fmul
jo
adc
aaa
in
mov
sub
test
aam
in
out
fildl
arpl
cmpsl
movsl
jg
inc
divl
sbb
movsb
out
dec
mov
pop
rcrl
stc
or
movd
mov
mov
xchg
push
inc
mov
push
xchg
jns
xchg
call
adc
sub
or
ficoms
pop
push
fiaddl
shrl
inc
test
arpl
roll
fstpt
mov
imul
mov
stos
xor
xor
dec
sub
pop
jmp
xchg
sarb
test
stos
shl
popa
aas
sub
ds
pop
rcr
mov
xchg
scas
xchg
iret
mov
sub
mov
mulb
scas
out
out
js
nop
xor
rol
jo
ret
stos
cli
sbb
pop
fdivrl
cmp
repz
mov
jnp
xchg
xchg
sub
in
or
gs
cmpsl
je
movsb
fistps
movsb
sub
fisubrl
jbe
lcall
dec
dec
sbb
and
data16
or
enter
int
adc
inc
xchg
sbb
out
xchg
repnz
pop
and
inc
push
cs
adc
loopne
or
fdivs
sbb
fldl2t
test
outsl
clc
xor
push
mov
pop
lcall
jg
dec
pop
repnz
incb
inc
shll
sahf
and
popf
xchg
xlat
lock
and
cwtl
int3
std
mov
aad
test
push
lock
sub
fwait
je
or
imull
hlt
cs
xchg
xor
push
cwtl
jl
pop
lcall
fmull
xor
pop
gs
jne
inc
outsb
push
sahf
movsl
mov
fsubp
into
cmc
inc
out
aad
and
cs
jle
outsb
push
sahf
movsl
mov
fsubp
into
cmc
inc
out
aad
and
cs
jle
outsl
push
lcall
xchg
fsubp
xlat
cmc
cli
rcr
push
and
xor
gs
jne
inc
out
xchg
sahf
movsl
jno
adc
scas
loop
insl
inc
mov
mov
in
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
pop
add
push
jne
or
lahf
clc
movsl
call
aam
cmc
test
pop
add
push
push
cmp
adc
test
xchg
clc
movsb
out
cwtl
mov
test
inc
add
jo
add
push
and
jne
test
mov
rclb
in
incl
js
push
push
dec
decl
mov
pop
push
xor
mov
nop
dec
mov
flds
aam
xor
fdivrs
xchg
loope
add
push
mov
mov
adc
repnz
mov
popl
gs
cwtl
cmp
push
pop
add
inc
or
insl
sub
int
pop
xor
mov
or
fimull
mov
fdivrs
cmp
sbb
inc
lea
add
fwait
xchg
cmp
lret
out
and
daa
test
test
mov
test
add
push
push
cmp
jne
test
xchg
loopne
icebp
mov
lds
mov
add
sbb
imul
and
sub
fdiv
movsb
mov
mov
xchg
lret
nop
aaa
imul
push
je
or
cmp
jnp
fwait
loopne
out
ret
cwtl
mov
int3
mov
adc
add
ja
push
cmp
jne
test
xchg
clc
movsl
call
aad
in
cmc
pop
add
push
push
cmp
jne
test
xchg
clc
movsl
call
aad
in
cmc
pop
add
sbb
je
push
cmp
in
xchg
stc
xchg
mov
arpl
jno
mov
inc
test
movsl
mov
pusha
addl
xor
add
jmp
fst
lock
xor
int
mov
jno
int3
into
es
pop
push
jle
pushf
inc
gs
xor
add
cmp
mov
in
cld
mov
outsb
add
test
inc
mov
ror
arpl
mov
loop
leave
rcrb
mov
lahf
aad
rolb
mov
sbb
add
stc
rcrb
repnz
mov
sub
mov
mov
lret
andb
jbe
cmp
and
call
dec
push
cmp
xchg
push
flds
ss
mov
fwait
or
xchg
pop
add
or
xchg
lods
xchg
test
sbb
mov
jns
divl
mov
mov
jge
adc
sahf
jnp
push
dec
xorl
out
jle
add
jns
mov
pop
push
loope
les
dec
pop
dec
insb
shll
in
sti
test
xchg
out
mov
xchg
stos
test
ja
mov
iret
les
pop
push
fldenv
in
cld
loope
shll
fdiv
jnp
out
es
adc
mov
call
pop
xor
lods
cmpsl
add
call
das
in
lods
jmp
or
das
cmp
aas
jg
jle,pn
out
das
cmp
clc
push
paddw
in
mov
sbb
jbe
inc
xchg
mov
lds
lahf
lods
xchg
hlt
jne
inc
scas
cmp
push
and
dec
imul
ja
ret
test
add
jnp
sub
in
aad
pop
and
mov
inc
call
rorb
int3
out
push
jno
push
test
cld
adc
mov
aaa
fcomi
loopne
xchg
scas
leave
in
mul
mov
scas
fmul
mov
sbb
lret
push
jbe
push
mov
nop
lods
add
xchg
mov
jl
sbb
cli
dec
dec
xchg
mov
sub
mov
out
pop
pop
jle
cmpsl
aas
xor
mov
sbb
cld
fistps
test
divps
push
rcl
js
push
fildll
jne
sub
dec
push
leave
aam
roll
inc
or
ss
dec
lds
ret
cmp
fists
pop
push
sub
test
cmpsb
xor
pop
and
add
stc
test
mov
iret
outsb
sub
data16
xlat
mov
mov
xor
xor
stc
inc
negb
xorb
dec
inc
aam
pop
mov
arpl
mov
ljmp
cmpsl
dec
enter
jae
cmpsl
mov
in
rol
ret
fldt
jbe
mov
imul
mov
lock
xchg
int
mov
xorl
fistpl
jge
gs
mov
and
xchg
loopne
std
xchg
push
xchg
das
je
push
dec
cld
aas
and
jle
jecxz
push
ljmp
sbb
ret
xlat
mov
shrl
mov
pop
inc
test
jne
test
add
jns
test
inc
loopne
jae
lret
xor
xchg
xchg
adc
icebp
std
jp
jmp
and
xlat
sub
notb
push
dec
in
loop
movsb
aaa
es
pop
jne
mov
ljmp
xchg
inc
add
add
push
outsl
add
arpl
adc
jno,pt
insl
push
inc
mov
les
rolb
movsb
in
lea
repnz
outsl
dec
xor
and
or
mov
dec
aam
sub
daa
icebp
pushf
mov
and
sahf
aaa
push
call
pop
cltd
sbb
test
push
lret
test
pop
pop
popa
inc
inc
mov
test
std
pshufw
shll
mov
clc
sub
ret
leave
dec
out
mov
dec
cmpsb
mov
aas
shr
sub
das
adc
lret
mov
ds
xchg
scas
std
mov
mov
mov
fidivl
lcall
push
mov
xchg
scas
mov
movsb
in
dec
dec
adc
sub
xchg
int3
arpl
lret
in
jge
aas
jge
dec
das
lea
xchg
sub
xchg
inc
jnp
mov
pop
sub
mov
and
cmp
push
dec
rcl
test
lret
sub
mov
cld
dec
adc
ja
cs
cmp
jecxz
add
shll
jg
mov
jp
mov
and
mov
mov
stc
pop
dec
fwait
gs
xor
pop
sub
movsl
pop
mov
sub
mov
xor
stos
ja
fisubrl
aad
cmpsl
stos
leave
pop
adc
andl
repz
je
cli
in
cmp
jne
cmpsl
jno
dec
adc
jbe
out
dec
hlt
mov
adc
fistl
cs
addb
dec
daa
int3
test
and
xchg
pop
and
cmp
pop
jge
xor
fdivrs
movsb
lods
addr16
loopne
imul
icebp
cmpsl
inc
add
test
mov
jae
and
sbb
pop
push
fidivrs
das
push
inc
push
cmp
xchg
ds
add
or
repz
fs
filds
ficoml
xor
xchg
jnp
pop
xchg
cld
and
inc
and
pop
and
in
sti
mov
hlt
sbb
test
sub
xchg
ret
cvttps2pi
sub
push
lock
inc
adc
mov
stos
stos
lret
lods
mov
and
sub
popa
cmp
clc
fwait
sbb
pop
pop
lea
jbe
xor
mov
stos
jnp
xchg
rcll
jns
jmp
push
sbb
jl
ds
mov
mov
arpl
sbb
push
push
sub
push
push
clc
cmp
rcrb
mov
push
in
icebp
fwait
int
out
cmp
mov
jmp
pop
jmp
mov
jno
mov
lods
ret
sbb
jno
or
xor
in
mov
adc
pushf
aas
sub
jbe
popa
xor
cmc
in
frndint
shll
rorl
dec
cmc
fidivl
aam
and
gs
je
movl
mov
mov
out
clc
xchg
repnz
insb
subb
dec
jl
sti
movsb
mov
aam
negl
and
inc
mov
mov
lret
ljmp
repz
loop
xorl
inc
inc
dec
mov
loopne
jecxz
aaa
mov
push
movsl
lret
pop
sbb
dec
cmp
cwtl
scas
push
pusha
pop
fs
gs
push
lds
movsl
jno
outsl
in
push
in
xorl
jne
fldt
div
dec
fisubrl
adc
cmp
jae
gs
and
jmp
cld
xlat
in
ror
xor
dec
imul
insl
add
shrb
repz
pushf
mov
es
stc
and
mov
mov
push
outsl
iret
fdivrs
lret
jne
movsl
push
pop
cwtl
inc
outsl
dec
fwait
ds
shlb
add
mov
sub
mov
insb
orb
repnz
sbb
add
iret
xchg
add
xchg
popa
adc
fimuls
mov
lods
mov
sub
adc
mov
lahf
adc
inc
mov
rorl
or
repnz
cld
pop
insl
cmpsb
out
call
repnz
xchg
nop
pop
mov
mov
mov
push
sahf
xor
shlb
sbb
sbb
pusha
inc
daa
cld
les
cmc
mov
fs
cltd
mov
in
fwait
xlat
fdivrs
mov
mov
mov
push
xchg
push
stc
loop
dec
pop
ja
outsl
dec
imulb
pop
outsb
shll
enter
negl
mov
jecxz
push
or
daa
sub
and
imul
sbb
sbb
adc
xor
fistps
aam
mov
or
icebp
jg
das
push
lock
sub
jnp
decl
pop
push
mov
sbb
add
jmp
ficompl
jl
mov
movsb
xchg
les
mov
sub
cld
fistl
ret
dec
adc
push
dec
jp
dec
pop
add
xchg
adc
js
ret
out
jo
jns,pn
ss
mov
sub
icebp
cltd
jbe
dec
lea
cmp
cmp
dec
jns
dec
mov
sub
ret
inc
jmp
mov
test
and
into
out
daa
mov
jmp
das
push
aas
iret
jae
jns
stc
into
jns
mov
les
and
mov
lods
pop
aad
pop
fmul
dec
lcall
or
push
lahf
and
mov
mov
cmpb
testb
mov
int
mov
and
add
fsubrp
loop
or
pusha
xchg
pop
dec
adc
std
adc
xchg
orb
dec
andb
das
xchg
out
loope
out
mov
add
add
cmc
test
call
push
sub
insb
scas
add
lret
push
xor
ret
fsub
mov
inc
aam
imul
mov
popa
push
sbb
xchg
xchg
lret
pop
mov
mov
add
xor
into
jae
js
mov
xlat
scas
adc
cmpsb
jne
or
push
out
fsubs
shr
or
std
fcmovnb
mov
mov
or
or
mov
sub
xchg
sti
mov
sub
pop
sub
xorb
in
jl
xlat
ret
push
sub
dec
mov
xchg
xchg
in
sahf
fildl
bnd
xor
lock
decb
cmp
xor
mov
adc
push
into
adc
aam
pusha
aad
push
jb
adc
stos
sti
sub
lahf
jp
adc
scas
mov
repz
ret
cli
mov
and
in
divb
cmpsb
js
sub
dec
adc
adc
data16
xchg
cli
xor
jnp
sbbl
mov
int3
fnstsw
ljmp
push
pop
out
jb
sti
pop
aaa
sub
dec
sbb
sarl
pop
fmul
and
lcall
pushf
popa
aad
mul
loop
jmp
jae
jno
pushf
mov
int
or
les
cs
movsl
fadd
outsb
inc
jmp
add
int3
fwait
push
sarl
push
add
mov
adc
push
jo
mov
std
inc
lret
adc
adc
hlt
push
lahf
das
cmp
push
add
xchg
sbb
lcall
hlt
pop
sub
xchg
dec
fs
xchg
xchg
inc
fwait
lcall
and
loopne
mov
xor
jns
mov
adc
psrlq
data16
push
sub
mov
push
push
shll
rorl
popa
or
pop
pusha
mov
jmp
lock
sahf
test
push
jge
sub
push
test
clc
insb
mov
and
int3
mov
inc
or
lahf
test
jg
out
lds
arpl
insl
stc
loop
std
pop
cmpsb
daa
sbb
push
inc
into
cs
jecxz
test
mulb
push
adc
or
cs
stos
xchg
xor
mov
and
jg
mov
mov
cli
loope
inc
mov
arpl
enter
fadds
ret
mov
xchg
aad
aas
das
push
add
aaa
stos
xchg
sbb
aaa
test
daa
lods
sbb
cmc
hlt
mov
int
int
js
and
addr16
out
mov
imul
push
push
xlat
cmp
xchg
or
mov
and
mov
lret
ror
mov
mov
inc
mov
add
aam
push
xor
icebp
xor
fldcw
sbb
icebp
mov
or
lahf
mov
jg
inc
dec
xor
inc
movsl
test
std
hlt
popf
outsb
vmulss
insb
testb
xchg
clc
in
adc
or
mov
sbb
test
push
popf
addl
pop
mov
cmp
sub
and
xchg
dec
mov
sbbl
leave
jne
das
mov
test
icebp
idivl
jb
shll
call
sbb
cli
jg
xchg
xor
subb
test
add
das
push
dec
dec
xchg
out
mov
ja
push
fstpl
xchg
scas
or
jb
push
inc
fwait
push
nop
loope
sbb
hlt
mov
inc
and
je
pop
dec
fwait
mov
xlat
in
jb
movsl
loopne
mov
in
test
mov
and
push
shll
mov
aaa
xor
add
sub
fxch
or
dec
imul
dec
sbb
or
and
mov
in
push
shrl
jmp
popf
cli
xor
cmp
lods
or
out
ret
out
fs
xchg
xchg
stc
sarb
cmp
jne
add
inc
std
fs
fidivl
in
or
rorb
std
test
lds
push
jne
rcrb
jnp
mov
dec
addr16
fidivs
dec
sbb
out
sub
aam
lock
xchg
xor
push
je
sbb
outsb
dec
scas
data16
lahf
add
mov
scas
jmp
dec
fiaddl
lods
mov
popf
lret
mov
hlt
dec
mov
add
xchg
js
and
cltd
fwait
pushf
test
mov
daa
and
sbb
pop
ds
mov
cmp
fiadds
inc
and
cmc
idivb
jbe
gs
cmc
and
mov
out
mov
cmp
ds
push
mov
mov
gs
out
xor
loope
adc
mov
sti
in
xchg
divb
push
pop
std
lea
mov
mov
cs
fstpt
cmp
jnp
stc
mov
rcrb
pop
scas
and
jnp
notl
xchg
lea
movsb
rcrl
sub
cwtl
jmp
push
sub
jae
xchg
xchg
test
dec
outsl
dec
xlat
and
push
ret
loopne
mov
xor
inc
sub
jbe
mov
add
pop
ret
add
arpl
cmp
in
xchg
adc
jg
mov
mov
repz
and
jle
xchg
lock
andb
push
adc
mov
or
push
push
paddw
push
pop
mov
iret
loope
or
rolb
stos
leave
bound
ficoml
ret
inc
mov
sub
and
lahf
and
push
and
dec
test
mov
add
add
mov
fdivs
mov
jp
jo
arpl
fs
and
loope
int3
jcxz
push
add
loope
mov
das
adc
imul
xor
stos
cmp
in
outsl
test
jp
loopne
sahf
in
aam
call
imul
test
push
imulb
cltd
sub
call
sub
scas
in
es
int
dec
test
lret
cmpsl
and
ja
xlat
out
jbe
aas
mov
cmpsb
ficoms
sub
xchg
jb
or
add
cs
mov
mov
out
jb
cld
in
sub
adc
push
dec
push
adcl
out
fildll
and
xchg
adc
insl
inc
dec
mov
cltd
or
jmp
pop
mov
adc
xor
in
inc
inc
fucomi
add
cmp
inc
mov
dec
in
pusha
das
jne
mov
jbe
cltd
mov
aam
cmc
mov
jecxz
lcall
jae
mov
jnp
mov
addr16
pop
inc
mov
push
nop
push
and
shll
xchg
push
out
mov
pop
repnz
cltd
inc
xchg
adc
pop
in
or
jns
mov
ja
add
fistl
mov
add
sub
call
sbb
fs
adc
inc
sub
ss
roll
push
outsb
push
jle
imul
cmp
push
int
fiaddl
xchg
mov
push
mov
aam
dec
loop
jbe
icebp
pop
push
and
div
jl
adc
adc
cmp
cmp
or
add
or
mov
popf
mov
pop
adc
cmpb
sahf
out
mov
mov
inc
push
or
mov
mov
mov
lret
or
rclb
cmc
loope
mov
sbb
hlt
int
add
pop
sbb
mov
loope
xor
cmp
fstpl
push
cs
ja
sbb
pop
mov
popa
mov
outsl
es
inc
cli
fnstsw
cs
aas
jle
pop
or
into
push
mov
loope
and
mov
lret
movsl
into
jmp
clc
loope
jmp
pusha
call
in
dec
xchg
pop
arpl
xor
cld
adc
cmc
in
notb
out
mov
mov
adc
test
mov
daa
push
je
xchg
xor
lods
dec
filds
fdivr
out
cmpsl
push
pop
inc
loopne
xchg
shrl
xor
in
cli
shll
mov
fstpl
fidivs
aad
xchg
xchg
shufps
scas
mov
mov
or
sub
sbb
mov
mov
ljmp
in
lods
lock
pop
or
and
ss
aam
les
ficompl
or
rolb
jge
aas
cmpsl
out
and
jno
out
jbe
sbb
mov
divl
and
add
inc
sub
mov
adc
push
adc
ss
or
pop
out
xor
das
test
rorb
cltd
aaa
lds
lahf
sub
movsb
mov
cmp
pop
test
cmp
pop
and
and
popf
or
js
clc
fstps
cli
movsb
aas
popa
adc
or
lret
dec
sarb
dec
rorl
lret
cmp
fsubrl
add
push
pop
push
bound
hlt
fwait
mov
xchg
sti
adc
sbb
or
repnz
lock
insl
inc
test
ret
jne
pop
inc
adc
pslld
dec
lock
arpl
xchg
in
cmpsl
xchg
sbb
jbe
push
mov
xor
pop
std
sbb
inc
push
and
getsec
push
leave
inc
dec
insl
sti
cs
xor
dec
lods
test
sti
dec
out
mov
or
movsw
inc
arpl
pop
jae
mov
or
popf
jno
lock
sbb
xor
inc
and
and
dec
psubusw
popa
xchg
insb
add
inc
xor
jnp
into
mov
pop
sub
xchg
adc
mov
test
cmp
push
mov
subl
andb
dec
jmp
lcall
aam
mov
data16
incl
mov
adc
add
dec
cmp
fdivrs
inc
fwait
sbb
pop
mov
and
cltd
lock
ja
mov
or
fcomp
pop
out
adc
push
pop
jmp
cltd
push
push
pop
xor
test
outsb
stos
addr16
pop
adc
sub
push
xor
mov
sti
mov
dec
pop
inc
hlt
adc
out
dec
and
test
aas
push
cmp
arpl
sbb
lret
leave
jb
pushf
push
cmpsl
out
leave
std
gs
lods
jbe
jmp
scas
movsb
cs
push
insb
ss
test
dec
jmp
dec
dec
add
inc
pop
xchg
in
sub
popf
xchg
mov
mov
daa
sbb
jnp
mov
xchg
aam
mov
add
pop
xor
or
xlat
repnz
incb
fldt
adc
pmaxub
fcom
pop
inc
inc
push
mov
lods
jae
adc
fstp
push
test
inc
push
push
std
xor
sbb
xor
pop
mov
out
jmp
adc
shl
dec
pop
xor
mov
les
jle
xchg
and
clc
test
add
adc
add
ret
lock
lcall
scas
cmp
scas
into
xor
int3
pop
push
and
cltd
outsb
adc
cmc
lea
push
les
mov
xor
jnp
pop
mov
cltd
sub
lahf
push
je
aam
xchg
xor
xor
iret
mov
or
add
fildll
add
cld
jne
jb
popa
out
pop
repz
mov
push
leave
inc
fildl
rolb
push
adc
loop
rcr
sub
xor
mov
icebp
das
cmp
jb
ljmp
lret
mov
add
fwait
push
sub
fisubrs
jns
fucomp
jbe
cmpsl
cli
or
ret
mov
roll
movsl
mov
loop
xchg
mov
push
pop
outsl
insb
les
xchg
pop
dec
xchg
movsl
jecxz
xchg
add
push
dec
js
mov
adc
aad
in
unpckhps
arpl
jecxz
or
sub
or
inc
scas
or
xor
addb
js
pop
faddl
inc
xlat
jle
stos
std
iret
fisubs
inc
in
bound
sbb
adc
daa
xchg
mov
js
xor
sub
jp
inc
inc
pushf
push
mov
mov
aaa
rcl
mov
jmp
inc
mov
in
in
dec
cmp
cs
pop
and
fimull
sti
sbb
and
xchg
mov
movsb
mov
dec
lahf
cmpsb
adc
push
push
cmp
jne
test
xchg
clc
movsl
call
aad
in
cmc
pop
add
push
push
cmp
jne
test
xchg
clc
movsl
call
aad
in
cmc
pop
add
push
push
cmp
jne
test
xchg
clc
movsl
call
aad
in
cmc
pop
add
push
push
mov
test
aas
push
movsl
call
sub
push
or
in
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
xor
mov
addl
lahf
and
dec
shll
adc
jno
push
rcll
and
jno
popa
icebp
push
roll
and
adc
add
mov
xor
add
push
flds
mov
orb
je
adc
and
push
inc
mov
push
sub
stos
mov
jl
push
cmp
fdivp
out
or
insl
jno
popa
shrd
pop
or
adc
cmpsb
in
and
inc
nop
sbb
pop
dec
ss
dec
cmc
and
mov
fwait
mov
cmp
cmpl
rcll
push
mov
addl
xor
cltd
inc
cs
jno
into
jo
jle
mov
lret
dec
cmp
movsb
push
xchg
jle
jno
roll
xchg
lret
lods
test
adc
inc
shrl
cmp
adc
sti
push
pop
mulb
in
popa
adc
add
mov
and
jno
popa
icebp
push
fadds
mov
mov
or
jns
rolw
xor
push
addb
mov
lahf
lods
lds
push
les
or
and
push
mov
icebp
inc
xchg
adc
sub
adc
add
ret
pop
push
in
jne
push
push
adc
push
loopne
aam
loopne
in
lea
push
roll
and
adc
popa
loope
roll
push
xor
add
push
roll
and
adc
popa
loope
roll
push
xor
jle
mov
jge
cmp
mov
pop
scas
mov
sbb
in
insb
jo
inc
adc
dec
ret
sahf
dec
adc
iret
stos
and
ret
loop
mov
fwait
xor
mov
cmc
mov
fiadds
or
and
mov
xor
cwtl
jge
leave
cmpsl
fmull
mov
cmpb
rcll
mov
cmp
out
cli
inc
std
mov
jb
jnp
pop
in
adc
xor
sbb
sub
popf
push
out
int
test
cltd
jle
push
xor
or
inc
adc
cwtl
sbb
jp
pusha
in
inc
mov
sbb
test
dec
into
sbb
dec
fcomps
xor
rorl
xor
outsl
insl
mov
add
fistps
in
pop
data16
xor
xchg
movsb
ja
inc
lods
lds
pop
or
ds
adc
and
pop
mov
lret
xor
sub
movl
pop
pop
inc
push
movsl
and
jmp
sbb
add
not
fidivrs
and
mov
cwtl
push
adc
mov
xchg
cmpsb
push
mov
dec
pop
lds
lahf
push
fs
popa
mov
call
out
cs
call
push
push
push
pop
sbb
and
mov
adc
cld
fadds
push
pop
bound
test
pop
pop
jp
mov
cmp
pusha
cwtl
mov
dec
jp
pop
hlt
fadds
sbb
testl
cmp
sub
inc
mov
mov
repz
xor
add
xlat
mov
xor
shrl
or
je
cmp
pop
enter
xchg
sub
lods
scas
dec
jns
mov
jle
js
pop
addb
jge
mov
pop
push
flds
jle
push
js
sbb
pushf
mov
in
sub
mov
xchg
popf
dec
jge
xor
ss
enter
test
xor
std
clc
cmp
outsb
inc
js
out
imul
mov
mov
fiadds
movsl
mov
lret
xchg
mov
in
xor
dec
aaa
push
dec
call
insb
std
cmp
jmp
pusha
arpl
ss
dec
cmc
int
xchg
mov
iret
popl
aas
loop
cmp
mov
dec
cmpsb
cmpb
and
push
mov
mov
inc
arpl
xor
cmpsb
test
inc
mov
fiadds
cmp
jo
clc
and
add
xchg
mov
pop
xlat
idivl
jle
lds
ss
jbe
dec
xor
cs
mov
shll
jmp
xor
jo
dec
adc
inc
fs
sbb
andb
popf
je,pt
jecxz
add
out
lea
cmp
sbb
subb
push
adc
daa
aad
ss
stos
cmpsb
mov
jg
roll
push
sub
xor
pop
data16
mov
and
dec
nop
pop
insl
out
mov
mov
push
aam
push
xchg
add
ljmp
punpcklwd
pop
push
jb
mov
jg
xchg
mov
iret
arpl
inc
fwait
out
cmp
scas
subl
cmp
rcll
add
mov
jae
or
sub
xchg
sahf
test
fcoms
aad
sbb
xchg
out
shll
push
mov
jbe
cmc
popf
sub
xchg
xlat
pop
cs
loop
jo
pop
xchg
frstor
cld
popa
addb
sti
sub
jae
pushf
cwtl
je
rclb
cwtl
scas
jl
inc
ret
and
shl
imul
or
mov
dec
xor
repnz
or
outsl
pop
cmpsl
lret
cmpsl
sbb
mov
mov
enter
aam
inc
jge
add
add
ljmp
xchg
xchg
shr
dec
sub
push
inc
pop
push
aad
lea
lea
push
inc
xchg
and
push
ljmp
and
xchg
cmp
call
std
jb
aaa
mov
push
cmc
jl
rorl
pop
and
imul
insb
lea
ja
pop
aaa
insl
push
clc
sbbb
or
jg
clc
xor
xor
sub
jnp
or
movsl
das
into
push
out
pop
inc
mov
or
nop
inc
adc
push
xchg
xor
adc
xchg
std
sahf
in
sbb
jae
push
mov
aas
lea
inc
sarl
mov
pushf
idivb
int3
mov
and
push
push
into
rep
mov
or
loop
adc
jbe
jbe
xor
add
jae
cmp
push
cmpb
xor
adc
ret
push
test
test
adc
ja
jge
ucomiss
js
or
mov
or
lds
jge
mov
call
xor
or
sbb
and
push
pop
xor
xchg
mov
adc
pop
adc
icebp
pop
adcl
sbb
decb
jmp
popf
cmp
xor
int3
test
pop
lahf
fisubrs
mov
cmp
pop
repz
mov
stc
and
adc
gs
gs
cmpb
call
loopne
aad
add
stos
dec
inc
insb
lock
sbb
arpl
jne
loopne
pop
popf
pop
dec
sbb
mov
iret
pop
lds
sbb
inc
or
pop
mov
adc
xorb
jne
dec
insb
insb
enter
jne
movsb
xchg
leave
cmpb
jnp
push
movsl
inc
cltd
sti
shll
adc
out
loope
js
out
int3
mov
out
in
cld
jg
cmpsl
mov
icebp
mov
cmp
fs
bound
sub
or
mov
jmp
lret
cld
cmpsl
insl
sahf
and
repnz
aaa
ss
subl
cltd
add
cld
xor
out
pop
pop
repnz
inc
lahf
xor
ds
idivl
test
lods
add
outsb
jo
loopne
and
loopne
jle
mov
sbb
fisubl
mov
cwtl
inc
pop
xor
mov
adc
dec
push
sahf
lret
sbb
dec
or
in
cwtl
cmp
cmp
cmpsl
mov
inc
jl
pop
lcall
imul
in
sbb
notl
mov
adc
xor
lods
in
fs
or
test
and
jnp
popf
jl
nop
lret
mov
fs
hlt
cmp
fwait
loope
xchg
rcll
sbb
jle
movsb
lock
filds
dec
push
cmp
pop
sub
lock
fisttps
xchg
loopne
xor
mov
ret
mov
xchg
sub
add
pop
lods
ljmp
testl
or
aas
and
loopne
mov
and
int3
adc
test
fwait
mov
mov
sbb
aaa
sbb
aas
arpl
mov
aaa
xchg
sbb
mov
and
cmc
push
clc
cs
adc
cmc
pusha
popa
mov
sub
cmp
dec
pop
ljmp
jg
mov
lods
sbb
push
mov
in
movsb
push
ljmp
fistps
test
les
sti
rep
jo
mov
out
dec
xchg
sub
push
mov
insl
es
jo
int
push
mov
popa
ss
jp
jae
adc
gs
adc
mov
rorb
jecxz
push
push
insb
iret
xchg
imul
ret
push
push
test
rcl
cmp
pop
and
sub
push
xor
jbe
xchg
jno
dec
jg
into
out
add
dec
jnp
or
dec
dec
or
imul
rcll
pop
sbb
stos
jmp
add
mov
in
stos
or
jp
or
pop
pop
enter
aaa
movl
data16
inc
scas
mov
or
std
inc
pop
cs
pop
popa
dec
push
loopne
insl
sub
inc
shlb
push
pop
inc
jo
orb
int
push
mov
mov
mov
lret
pop
imul
mov
aam
push
xchg
inc
push
fwait
jae
fldln2
jae
insl
push
push
and
cmpsb
or
cmp
out
frstor
mov
mov
sub
mov
dec
call
dec
and
jne
dec
jg
outsb
out
and
inc
sub
add
mov
rcll
sbb
adc
and
mov
xchg
push
fsubs
mov
ljmp
pusha
aas
je
out
cmc
ds
xlat
popa
and
push
les
das
mov
cmp
orb
hlt
xor
test
xchg
ret
std
cmpsl
out
mov
fiadds
mov
cmp
xchg
inc
pop
aad
test
and
stos
lods
push
int3
loopne
sarl
jecxz
pop
or
imul
mov
repz
fs
aaa
mov
fisubl
cmpsb
mov
fcmove
addr16
mov
xor
jge
cwtl
push
cmp
xlat
clc
sahf
jmp
ret
pop
inc
push
aas
inc
in
mov
es
imull
xchg
mov
int
repz
pop
cs
mov
data16
mov
xor
inc
add
push
sbb
nop
lock
cmp
xchg
imul
sarb
xor
jne
fimull
lret
inc
fstpt
add
dec
data16
out
aad
push
pusha
add
xchg
xchg
jecxz
in
loop
push
and
repz
fbstp
mulb
sbb
xchg
and
adc
and
sbb
ds
cmp
jbe
dec
xor
add
fisubrl
repnz
jge
xor
xor
pop
push
daa
pop
int
icebp
repz
push
or
insl
cmpsb
adc
ret
arpl
jmp
push
inc
sub
fsubl
inc
mov
push
cmp
mov
mov
imul
xchg
sub
test
push
xorl
lea
add
dec
cmp
movsb
sbb
pop
out
mov
int
jmp
add
xchg
in
xchg
clc
xchg
aas
pop
arpl
jae
inc
or
push
mov
rorl
ja
cmpsl
xchg
fstpt
jo
push
dec
fistps
jle
aam
ret
mov
in
loop
mov
pushf
mov
mov
fbstp
rolb
cmp
dec
stc
cwtl
xor
add
jmp
out
push
mov
add
js
sub
and
push
push
test
jmp
jns
sbb
pop
dec
outsb
aad
lahf
pusha
pop
lds
mov
je
mov
push
int3
push
xchg
xor
into
xchg
dec
sbb
adc
cmp
jp
es
dec
addr16
xchg
inc
outsb
mov
or
in
jne
add
pusha
lock
outsl
mov
loope
jns
and
cmp
push
shll
inc
mov
lret
push
ret
movsb
aad
sbb
in
out
hlt
test
std
ror
stos
mov
dec
pop
jb
sbb
jl
cli
mov
xchg
or
mov
in
gs
int
xchg
mov
push
in
negl
inc
sbb
pop
adc
push
mov
xor
fistpl
mov
push
cli
mov
jle
stos
inc
addb
inc
sub
push
xchg
mov
push
mov
mov
xchg
outsl
jns
into
sbb
loop
pop
lods
mov
rcr
jmp
push
xorl
jmp
mov
cld
mov
pop
mov
hlt
dec
in
sti
lcall
shlb
xchg
loop
cltd
roll
shrb
ss
addb
mov
out
nop
stos
cli
imul
mov
out
xchg
sbb
and
jg
inc
inc
push
addr16
iret
int
scas
pop
jno
fnstenv
inc
cmova
mov
cli
xor
sub
pop
cld
arpl
mov
cmpsl
aas
push
iret
not
sbb
or
mov
inc
repnz
mull
das
mov
mov
out
enter
outsl
sbb
shlb
out
pop
add
ret
ds
in
out
popa
sub
adc
and
test
push
mov
fisttpll
rcll
push
idivb
ss
push
lcall
jns
rcll
cmpsl
out
xor
lret
dec
push
out
test
stos
xchg
and
pushf
hlt
in
repz
das
in
pop
leave
mov
mov
scas
adc
shll
divl
and
shll
and
pop
mov
mov
lahf
test
mov
cs
loop
mov
test
repnz
psllw
xchg
jns
roll
daa
test
std
jmp
sbb
mov
pusha
into
popf
faddp
lods
and
add
cli
outsl
jo
cmpsb
fwait
sbbb
iret
inc
popa
rcrl
push
jo
mov
add
mov
mov
mov
and
cltd
inc
aas
push
inc
fistl
ljmp
aam
in
in
or
pop
add
dec
push
cmp
adc
xor
ret
pop
lcall
mov
sbb
mov
dec
jno
aad
cld
add
ja
int
or
jo
mov
jnp
jne
push
mov
pop
inc
mov
xchg
dec
lods
dec
jns
imul
movsb
xchg
push
add
dec
ja
sahf
and
xchg
mov
cmpsl
sub
jmp
mov
clc
push
mov
mov
sub
mov
mov
fcompl
hlt
sbb
inc
push
lret
adc
arpl
pop
and
sbb
lcall
dec
sbb
cmc
daa
or
mov
pop
sub
sub
out
push
jl
pop
in
in
mov
xor
push
dec
in
or
xcrypt-ctr
cmpsl
sbb
mov
stc
mov
ljmp
hlt
mov
bound
loop
jp
sbb
cwtl
mov
movsl
lods
rolb
testl
out
sbb
sahf
testl
mov
sbb
mov
adc
lcall
jg
xchg
repz
jg
pop
sets
movsb
aas
sub
arpl
ljmp
ljmp
movsb
sub
sub
testl
push
imul
addr16
fistpll
fadd
ja
bound
lock
xor
js
jne
push
mov
mov
call
fistl
sub
lods
cltd
sbbl
imulb
incl
mov
mov
xchg
aad
fstpl
pop
pop
shrb
lret
gs
mov
pop
push
sub
push
addr16
in
mov
inc
lds
outsb
adc
cmp
scas
push
pop
xchg
and
cmp
mov
push
in
pop
mov
mov
in
fadd
xor
and
jnp
jp
cmp
adc
jne
push
inc
or
xor
pop
sbb
enter
push
lea
call
lock
jle
pushf
push
aad
jl
mov
sub
jne
int3
adc
ds
and
mov
add
lret
into
addr16
in
xchg
add
lods
fstl
inc
fadds
sub
aam
add
mov
hlt
lods
fisttpl
pop
mov
ds
ljmp
pop
or
jp
and
mov
out
mov
jb
cmp
fucomp
outsl
in
mov
cltd
clc
pop
insb
repnz
mov
shl
mov
fisttpll
into
inc
jbe
fimull
call
jmp
ret
push
and
dec
jl
les
adc
aam
mov
aas
mov
fidivl
std
adcb
sbb
mov
mov
or
xlat
imul
negl
dec
add
mov
ja
pushf
mov
jnp
cmp
sub
add
jmp
inc
in
pop
repnz
jnp
inc
xchg
mov
xchg
jnp
push
sub
and
xchg
aam
cmp
push
les
and
shrl
adc
mov
push
aam
xchg
and
xorl
dec
imul
cwtl
jno
sbb
lea
fdivrs
leave
jo
mov
enter
push
pushw
in
aaa
loope
mov
js
xchg
dec
push
xchg
mov
sbb
push
or
lods
inc
mov
stos
sub
inc
fcomps
cmpsl
aas
cli
jnp
and
stc
add
xchg
decl
ret
scas
adc
loopne
sbb
ljmp
add
out
mov
push
fnstcw
mov
nop
stos
mov
test
mov
jbe
mov
cltd
adc
lods
clc
inc
inc
and
or
sub
and
insb
mov
xchg
pop
bound
lods
ret
pop
lret
jmp
add
mov
cmpsl
sbb
sbb
xor
mov
inc
addr16
icebp
mov
scas
jns
repz
subl
and
pushf
imul
pop
aam
jno
stos
clc
mov
xchg
sar
sub
mov
js
insb
pop
outsb
repnz
daa
je
jmp
subb
mov
push
mov
aaa
dec
imulb
scas
scas
mov
dec
sti
lds
sahf
mov
mov
mov
es
dec
outsl
rol
mov
sbb
in
repnz
mov
movsl
xchg
jp
or
pop
jmp
jg
adc
cwtl
and
push
call
jg
js
push
mov
push
add
orb
js
xchg
test
scas
inc
add
mov
and
ror
xlat
pop
bound
gs
in
cs
cmp
in
movl
daa
addr16
cli
test
add
jne
adc
mov
in
cmp
xor
xchg
mov
xor
push
aad
rolb
inc
in
test
test
cli
push
push
imul
je
in
inc
mov
cli
pop
mov
out
leave
andps
lret
sbb
sarl
fs
xchg
mov
imul
mov
xchg
fsubp
xor
cwtl
push
jle
pop
arpl
into
ss
sbb
pop
dec
add
lods
stos
mov
mov
test
scas
xchg
pop
bound
popf
or
mov
dec
cmp
mov
test
mov
adc
push
call
push
pushf
xor
sub
and
add
push
sbb
lcall
pusha
movsl
jl
lock
mov
sbb
pop
loope
lahf
cs
std
loop
sarb
add
out
out
adc
ficomps
mov
jmp
testl
fs
test
test
push
std
test
push
inc
jl
xchg
sub
je
icebp
rcl
fdivl
leave
cmp
jmp
dec
in
pop
frstors
jl
xchg
ja
iret
jecxz
adc
decb
jp
jbe
adc
xor
jo
aas
call
mov
push
not
addr16
fldt
mov
push
cld
lcall
mov
stos
xlat
and
aas
jno
jb
xrelease
xor
data16
imul
lods
pusha
cltd
inc
mov
cmc
sub
lcall
mov
test
xlat
lock
shll
mov
divb
push
loop
jg
add
sub
sti
mov
xor
loopne
lea
push
add
jecxz
add
mov
addr16
cmp
mov
aam
cmp
fdivs
sub
shll
in
cltd
xor
outsl
cmp
sbb
cmpsb
test
andb
pop
pop
push
arpl
jl
jl
xchg
xlat
push
in
out
cmp
pop
push
stos
xchg
mov
mov
in
ret
push
dec
jle
jne
push
xor
push
xor
pusha
xor
sbb
in
loop
std
or
mov
cmp
dec
xchg
cs
imul
sti
and
int
and
or
cld
dec
or
push
dec
inc
dec
push
jns
dec
mov
cmp
adc
loop
loop
pop
in
insb
xchg
xlat
cs
adc
xor
ds
dec
cmpb
push
mov
arpl
mov
popa
dec
loope
fwait
jo
lock
repz
jno
adcb
xchg
jecxz
es
push
ds
int3
pop
fucomp
mov
fisttpll
popa
call
out
mov
add
insb
push
js
es
pop
lock
mov
movzbl
and
int
add
push
mov
mov
test
pop
push
scas
cwtl
jg
and
pop
sbb
cmc
aad
jp
cli
test
or
mov
scas
xor
jo
int
jbe
cmp
lcall
inc
stos
out
mov
sar
adc
mov
xor
push
xor
mov
ret
fucom
int3
inc
lods
inc
push
sub
adc
inc
loope
mov
loopne
xchg
sbb
sub
xchg
xor
in
pop
outsl
aaa
movlhps
mov
in
fisttpll
adc
outsb
add
push
roll
and
adc
popa
loope
roll
push
xor
add
push
roll
and
adc
popa
loope
roll
push
xor
add
push
roll
and
adc
popa
loope
rolb
push
xor
add
rol
rcl
and
cmp
andl
mov
push
test
mov
movsb
inc
mov
pop
in
adc
add
xor
and
push
shl
out
bound
movsb
inc
aam
les
jbe
xchg
fs
xor
and
push
inc
out
mulb
in
mov
out
movsb
pop
aam
les
jbe
loop
mov
into
push
shll
push
stos
fs
fistpl
inc
adc
mov
mov
mov
loop
repnz
ljmp
pop
push
repnz
movsb
jo
loop
and
mov
clc
int3
push
xchg
push
inc
and
pop
pop
adc
shr
xchg
sti
mov
mov
push
xchg
test
mov
in
fiaddl
fisubl
jnp
sbb
lret
dec
je
ds
mov
stc
je
jnp
xor
shr
loope
cmpsb
call
repz
inc
mov
stc
add
pop
mov
addl
das
and
and
out
cmc
gs
xchg
inc
test
mov
movsb
mov
hlt
shl
inc
adc
add
xor
and
push
faddl
testb
fisttpll
sub
jbe
xchg
jo
pop
shll
xor
xchg
and
push
mov
das
pushf
xor
loope
les
push
into
dec
mov
adc
xlat
inc
fsubl
adc
hlt
jbe
xchg
add
xor
and
push
inc
out
mulb
push
test
mov
movsb
inc
aam
les
jbe
xchg
add
xor
and
push
inc
out
mulb
mov
in
mul
mov
mov
and
mulb
lds
xor
add
sbb
and
push
ljmp
inc
dec
rclb
adc
cs
mov
and
cmc
xchg
ljmp
imul
and
ljmp
and
push
xor
and
call
push
add
add
cmp
ficompl
cmc
adc
and
push
sub
lret
cmp
lret
xchg
add
sbb
clc
mov
and
sub
pushl
push
cwtl
movsb
push
mov
out
xchg
fsubrs
jb
pusha
mov
push
rcll
lock
add
mov
adc
outsl
xchg
adc
int
test
add
frstor
xor
cwtl
sub
notl
mov
jge
jecxz
dec
push
insb
push
sub
cmp
call
cmp
sub
rol
cmp
mov
jns
loope
and
pop
test
pand
mov
push
aam
lds
dec
add
mov
jle
sbb
cwtl
out
fistps
xor
repz
negb
pusha
and
add
les
push
jo
outsb
push
stos
lods
enter
mov
cltd
call
jle
lock
push
fisubs
inc
pusha
inc
int3
enter
mov
adc
push
adc
push
dec
cltd
lret
stc
cmp
sbb
or
mov
jl
cmp
cmp
in
dec
leave
push
ljmp
jae
in
mov
es
xor
inc
xchg
fidivl
dec
loopne
inc
out
inc
lfs
out
pop
mov
adc
mov
mov
and
insl
xchg
lahf
or
shlb
loope
add
jl
add
sahf
mov
ds
popa
xchg
dec
repz
inc
aaa
xchg
dec
js
xchg
cmpsl
add
jne
inc
scas
dec
insl
fildll
movsl
jl
gs
xchg
jnp
mov
notl
outsl
sub
popf
mov
cli
into
int
outsl
add
or
fwait
in
jb
xor
and
repnz
fbld
mov
nop
cltd
or
xchg
xchg
enter
jge
in
mov
xor
lret
loopne
sub
ret
pop
push
mov
sbb
sbb
mulb
sbb
sahf
xchg
in
pop
out
xor
jp
and
repz
add
testl
cld
daa
clc
les
dec
sbb
aam
push
mov
jnp
dec
xchg
lods
out
out
iret
mov
or
xor
jb
push
mov
inc
ds
mov
xchg
cmp
jp
or
jns
sbb
adcl
inc
ret
in
sbb
push
addr16
pop
cmpsl
ret
cmpsl
add
mov
out
popa
jnp
mov
xor
repz
imul
mov
test
in
sbb
inc
add
arpl
out
cmpsl
ffreep
nop
xchg
adc
sub
mov
or
add
pop
cwtl
lcall
jne
sbb
push
out
repnz
cli
call
jbe
rcrb
mov
jl
loopne
pushf
roll
fisubs
and
add
adc
adc
imul
std
sbb
aad
or
gs
fldcw
ss
xor
shll
adc
mov
int3
fs
xlat
loop
mov
cmc
jge
aaa
jne
push
push
pop
fidivrl
lret
adc
sub
hlt
repz
aaa
pushf
stos
push
pop
jmp
xchg
sbb
mov
sub
push
jae
dec
push
or
in
sbb
mov
pop
leave
mov
repnz
out
outsl
mov
jno
sub
or
ljmp
ss
cmpsb
test
jb
popa
je
daa
xchg
in
add
pop
fdiv
iret
xchg
pop
push
popf
pop
adc
fwait
orb
fs
lds
stos
ljmp
nop
adcl
imul
dec
mov
movsb
es
mov
mov
mov
xchg
jbe
add
loop
jge
and
pop
leave
sti
fisttpll
mov
repz
lods
and
push
mov
add
aad
imul
insb
inc
and
sti
mulb
or
jl
xchg
and
push
mulb
or
jb
adc
pop
sti
xor
stos
popa
xchg
push
xchg
unpcklps
mov
orl
lcall
scas
inc
and
js
pusha
out
push
mov
in
pop
push
inc
mov
cmpsl
dec
sbb
and
mov
or
mov
fisubrl
outsb
inc
call
adc
add
mov
icebp
jle
jmp
ss
and
int
and
pop
leave
xchg
inc
sbb
mov
add
hlt
add
mov
decb
out
stos
insb
jmp
int3
adc
mov
cmp
lea
sub
jecxz
add
mov
imul
das
push
bound
jnp
scas
push
sbb
cmc
jns
mov
or
xchg
inc
push
aam
xor
jb
dec
mov
aad
xchg
and
dec
push
pop
aas
data16
cmp
mov
adc
jne
push
lods
mov
enter
mov
lods
in
cmp
dec
cmpsb
popf
dec
std
sub
xchg
jl
jbe
dec
mov
stos
pop
inc
and
xor
xlat
jns
adcl
cli
mov
loopne
sbb
sahf
movsb
or
mov
xchg
movsl
sahf
sub
in
add
subl
call
mov
lds
cmpsb
mov
and
loop
push
in
jbe
sbb
pushf
arpl
jmp
add
fs
sub
cld
jl
or
shlb
dec
fdivrp
clc
and
add
icebp
pop
xchg
mov
fisubrl
push
xor
mov
inc
xor
add
mov
enter
arpl
out
daa
lretw
sbb
add
jmp
hlt
inc
xchg
mov
xor
cmp
and
daa
call
aad
dec
push
mov
insb
popa
insl
rorl
add
sbb
addr16
mov
sub
jp
jbe
fldln2
mov
adc
les
dec
sbb
and
loope
xlat
inc
pushf
and
aad
xor
add
aaa
not
shll
xor
dec
incb
cwtl
stos
sarl
leave
fcomps
aas
aad
fisubs
mov
lea
into
nop
pop
inc
cmc
cmp
cmpsl
repnz
je
sbb
outsl
gs
mov
mov
data16
lret
push
into
aam
xchg
mov
and
pop
jo
ret
xchg
inc
mov
push
and
cwtl
dec
fwait
stos
and
cmp
dec
fisubs
in
pushf
or
mov
fidivrs
scas
fsubrs
arpl
push
int3
sarl
ja
jo
mov
xchg
adc
pop
add
or
int
outsl
pop
cld
cmpsl
movsb
pop
xor
clc
or
and
into
clc
sti
xchg
xchg
jmp
mov
mov
hlt
cmc
and
mul
jbe
sub
push
dec
cmp
push
xor
andl
xor
pop
jno
enter
sub
insl
mov
ljmp
loopne
pop
inc
pusha
sbb
test
xlat
or
push
pop
lea
add
push
aad
inc
mov
arpl
sub
addr16
mov
test
nop
pop
or
xchg
cltd
pop
int
dec
in
pop
cld
sub
lcall
xlat
out
nop
push
fwait
testl
sbb
insb
pop
hlt
jl
sub
nop
jge
jb
push
cmpsl
xcrypt-cbc
cmpsl
xchg
xchg
insl
xor
mov
jns
inc
loop
popf
cwtl
lds
cltd
xchg
push
cmp
or
ja
jmp
stc
sbb
add
sbb
test
mul
add
pop
xchg
pop
dec
fs
repnz
test
push
lea
push
and
push
push
lods
xor
into
or
add
jle
mov
inc
nop
dec
out
add
push
fdivl
xor
test
loop
fwait
and
xor
enter
ss
xchg
loop
inc
xor
adcb
das
mov
adc
clc
and
dec
sub
mov
daa
inc
and
jnp
xchg
push
sar
mov
dec
jmp
jno
stc
pop
xor
daa
mov
jecxz
pop
fdivl
ss
cltd
and
and
cmpb
pop
fdivr
mov
cmp
jno
jmp
test
or
push
xor
dec
mov
and
and
ret
movsl
aaa
push
jp
outsl
mov
test
into
dec
js
imulb
pop
fisubrs
aas
scas
jl
and
mov
cmp
push
pop
adc
insb
pop
mov
pop
ja
jno
xchg
scas
loopne
into
aaa
imul
pushf
cmp
adc
sbb
insb
lods
outsb
cld
movsb
mov
sub
pop
cmc
fdivrs
add
mov
jmp
sbb
faddl
adc
push
je
in
cmp
les
xor
bound
test
jecxz
nop
mov
adc
sbb
mov
cmp
mov
ljmp
ja
dec
xchg
mov
mov
out
aad
and
mov
leave
and
or
ja
or
sbb
loopne
imul
iret
shrb
fucom
shrb
stc
shr
int
mov
iret
faddl
sbb
in
scas
adc
shrl
test
jge
pop
lods
je
int3
sub
pushf
bound
js
pop
jmp
cmp
pusha
adc
aas
jnp
mov
mov
repnz
cmp
data16
and
ljmp
stc
lcall
mov
popf
jle
mov
or
ss
push
sbb
fnstsw
and
jmp
xchg
add
imul
sub
fdivs
and
xchg
adc
pop
nop
testb
push
insb
shlb
outsb
mov
pop
push
aaa
out
stc
dec
ljmp
jb
negl
subl
push
cs
insl
jb
mov
mov
xchg
fcoml
push
sbb
leave
and
and
mov
faddl
xor
fildl
movsl
mov
and
hlt
push
sbb
cmp
sbbb
lret
xchg
push
cwtl
fldl
cmpl
fs
lcall
lret
mov
les
pop
mov
inc
std
pop
sub
adc
outsb
mov
shlb
fiadds
dec
sbb
scas
movsb
in
sbb
xlat
repnz
and
movb
ds
out
dec
or
or
xchg
xchg
inc
popa
jno
mov
es
push
clc
sub
adc
bound
push
or
or
lret
xchg
lret
in
add
lret
mov
not
xchg
dec
adc
mov
outsl
xchg
dec
fistl
jnp
repz
lret
ret
mov
ds
mov
std
adc
decb
pop
mov
cmp
loope
xlat
adc
loope
jecxz
dec
scas
popf
int
xchg
xor
mov
lahf
mov
in
xchg
lret
mov
or
daa
clc
fldln2
bound
add
push
iret
xor
sbb
mul
xor
jmp
jns
outsb
mov
int3
cltd
push
aad
rolb
outsl
lds
jo
xchg
xchg
orl
cmp
negl
imul
push
imul
pop
sub
out
cwtl
fldt
xlat
inc
loope
push
outsl
push
std
or
insb
lret
mov
lods
movsb
mov
add
enter
cmp
or
sub
dec
clc
repz
cmp
xchg
mov
xchg
jg
add
or
sbb
lret
xor
inc
push
fimull
pop
jb
add
repnz
push
jae
inc
inc
mov
call
dec
lea
or
push
pop
out
mov
and
inc
lds
cmpsb
xchg
inc
add
or
adc
lret
popf
sbb
or
mov
jnp
rorl
lahf
dec
jecxz
xchg
pop
cmp
repnz
jae
int
scas
xor
lret
insb
cmp
inc
hlt
push
push
or
sbb
lcall
int3
inc
adc
sbb
sbb
and
and
loopne
sub
aad
fnstsw
mov
cmpsl
rcrl
loope
notl
jp
sbb
mov
dec
pop
pop
pushf
jnp
mov
dec
outsb
xor
repz
jns
imul
inc
xchg
mov
pop
orl
outsb
mov
or
jmp
adc
rcr
push
cmpsl
mov
testl
lahf
mov
push
cmp
or
ret
add
imul
dec
push
int
fdivr
push
jg
out
lret
xchg
out
lods
add
push
xor
jnp
push
jge
and
sub
adcl
mov
dec
sub
inc
fistps
and
xor
mov
std
cmp
pushf
push
and
icebp
mov
add
into
mov
mov
push
insl
int
xchg
xor
jmp
js
mov
orb
or
out
ljmp
lock
adc
or
andb
jnp
and
cmpsl
popf
inc
aaa
mov
insb
test
xchg
or
in
daa
xchg
fimull
outsl
cmpsl
mov
dec
push
int3
pop
clc
mov
xchg
rcl
lods
sbb
stc
loopne
jb
mov
push
loopne
ljmp
adc
fistps
test
insl
aad
mov
out
aad
lahf
out
mov
ret
in
push
ss
outsb
js
sbb
icebp
mov
mov
int3
in
or
or
scas
cld
cli
cmp
scas
cmp
sub
pushf
shlb
mov
movsl
jg
xor
imul
mov
fistpll
pop
add
mov
test
jmp
cmp
cwtl
mov
xchg
sbb
dec
outsl
scas
jle
and
dec
popf
popf
fisttpll
mov
popf
cltd
jecxz
xor
mov
pop
mov
popf
and
pusha
inc
pop
aas
fimuls
adc
mov
pushf
dec
ja
fs
add
dec
lock
adc
cltd
std
adc
int3
shlb
movsl
jg
sbb
repnz
sbb
cmp
std
mov
mov
popa
add
push
loopne
push
pop
into
inc
jge
cmp
add
repnz
rcrl
xchg
mov
pop
ret
xchg
or
mov
xchg
mov
push
fs
xor
jno
inc
and
or
in
shll
xlat
xchg
inc
mov
add
pusha
shrl
mov
and
inc
sbb
les
arpl
xor
sbb
pop
scas
out
jmp
inc
mov
push
test
data16
aad
jo
fwait
pop
inc
push
sbb
xor
jge
push
popf
push
sub
outsl
aas
into
sahf
loopne
xchg
push
and
xlat
arpl
adc
push
repz
nop
call
lea
jo
ret
mov
lods
je
addr16
mov
loope
pop
pop
icebp
and
xchg
inc
sbb
nop
jns
iret
mov
pop
scas
fs
fnstenv
push
rcrl
int
movl
push
xlat
cs
mov
xor
dec
mov
popf
stos
int
in
mov
imul
addl
sbb
mov
dec
jno
push
mov
inc
pop
add
addl
push
filds
adc
mov
mov
in
mov
dec
jp
inc
jle
xchg
shrl
cltd
stos
pushf
pop
pop
cmp
mov
dec
mov
cmp
shlb
call
aas
dec
out
xchg
xor
and
push
mov
rcr
or
call
nop
shrb
lret
imul
fstpt
fisttps
popa
aas
cld
push
lods
scas
dec
mov
sbb
cmpsl
and
add
mov
call
push
adc
repnz
inc
in
fisubl
clc
adc
mov
cmpsl
lahf
pop
inc
cmpsb
outsb
mov
sub
inc
out
loope
stos
cmp
jg
test
push
add
or
ds
xchg
mov
pop
inc
xchg
jnp
mov
dec
outsb
jecxz
dec
aam
xor
cmp
jne
adc
adc
andb
icebp
lods
push
cld
sub
scas
in
jne
adc
mov
sub
mov
gs
sbb
out
pop
xchg
mov
aad
add
lret
pop
push
ret
mov
dec
aad
push
int
lods
jmp
out
mov
nop
adc
pop
shrl
mov
mov
push
rcrb
mov
int3
filds
cmp
stc
sub
cmp
scas
add
or
cld
jmp
or
scas
pop
lods
xor
sbb
jg
idivb
repnz
call
sti
adc
aas
das
insb
lahf
gs
and
mov
stos
inc
sbb
xchg
jge
movsl
sbb
aad
xchg
adc
pop
dec
ret
mov
jmp
or
daa
loope
inc
push
ror
mov
int
dec
sbb
in
and
sub
mov
add
adc
fiaddl
int3
icebp
xchg
or
push
dec
in
cwtl
arpl
test
push
loope
adc
push
mov
insl
mov
push
sub
js
imul
lret
xor
mul
push
inc
push
repz
dec
test
cs
mov
das
aam
adc
sub
push
mov
jp
xchg
push
aad
setns
pop
xor
mov
bswap
in
mov
std
rclb
and
jmp
pop
or
das
lock
aam
sbb
mov
mov
adcb
or
dec
dec
rcr
cmp
idiv
cmp
cmp
loope
scas
rolb
icebp
xchg
xor
incb
sbb
flds
jns
push
aad
imul
pop
xchg
sub
mov
xchg
repz
add
jecxz
or
scas
or
add
notb
loop
sub
jg
jg
adc
mov
out
add
les
pop
adc
aad
mov
sarl
ds
cwtl
icebp
aaa
or
arpl
clc
inc
dec
mov
sub
cmc
mov
aas
cmpsl
fsub
pushf
ss
lock
fistpl
dec
jp
hlt
adc
lds
xchg
mov
dec
dec
and
mov
jo
xchg
cmpsb
push
add
dec
scas
fcompl
pop
test
lret
jns
and
sti
rcrl
pop
jbe
fsubrl
mov
sbb
push
dec
or
mov
jnp
push
aaa
inc
clc
aad
adc
or
push
mov
mov
mov
mov
rorl
xchg
sub
stos
scas
xchg
cmpsl
cmp
add
nop
popa
or
js
inc
stos
mov
pop
pop
scas
popf
mov
mov
cld
lret
adc
adc
dec
pop
cmp
imul
mov
add
shll
les
mov
ret
das
cmp
jno
xor
daa
aad
adcl
inc
mov
rorb
stos
repnz
lods
lahf
pop
push
mov
and
imul
inc
push
inc
rorl
xchg
loop
pop
sbb
insb
movsl
dec
and
lea
inc
outsl
inc
std
lds
xchg
lret
adc
pop
jno
iret
adc
shrl
lret
sbb
ja
push
mov
je
enter
bound
jmp
fwait
pop
add
iret
xchg
lcall
push
std
and
movsb
lcall
mov
push
mov
pop
sahf
mov
jbe
pop
loop
push
or
xchg
xor
fdivrl
iret
movsb
inc
fcmove
xchg
push
mov
pop
add
rolb
faddp
push
adc
and
pop
push
pop
jae
mov
mov
xor
sub
sub
push
cltd
or
in
adc
mov
mov
fmuls
cltd
cmpsb
xlat
push
add
mov
fs
in
daa
adc
out
ss
mov
aam
scas
inc
inc
ja
or
cmpsb
mov
dec
jo
mov
mov
mov
pop
xchg
push
test
popa
push
add
dec
cmp
out
cmp
push
sbb
in
inc
popa
sbb
fiadds
fistl
sub
jp
pop
mov
insl
jbe
jns
fidivl
push
adc
or
inc
add
mov
xor
xchg
rcl
xchg
jge
pop
inc
imul
mov
mov
movsl
push
mov
add
mov
mov
push
and
xor
adc
subl
lods
cmc
test
movsb
inc
aam
les
jbe
xchg
add
xor
and
push
inc
out
mulb
push
test
mov
movsb
inc
aam
les
jbe
xchg
add
xor
and
push
inc
out
mulb
es
xor
movsb
aam
inc
data16
mov
xchg
and
push
movb
adc
movsb
inc
aam
les
mul
xchg
scas
or
mov
mov
pop
mov
cmp
sub
sbb
or
or
dec
jg
outsl
test
cwtl
dec
mov
clc
das
test
fmuls
enter
sub
sbb
or
pop
outsl
test
cwtl
dec
mov
clc
das
call
cmp
sub
sbb
or
pop
vpmacsswd
call
dec
mov
popa
enter
pop
lods
jl
in
mov
je
mov
cwtl
sbb
mov
aas
xor
xor
sub
inc
notl
push
jns
mov
lret
cmp
arpl
fdiv
xor
sub
inc
fs
mov
leave
jg
add
dec
lahf
clc
cmpsb
fstpt
iret
leave
mov
sbb
mov
mov
sbb
jg
shlb
ja
stos
inc
mov
add
div
add
movsb
xchg
sahf
cmpsl
mov
outsl
std
xchg
test
mov
sub
cwtl
add
das
jge
mov
imul
int
inc
add
mov
pop
cs
int
enter
sub
sbb
or
pop
outsl
test
cwtl
dec
mov
clc
das
call
mov
pop
stos
dec
rcll
out
cli
cmp
imul
mulb
out
xchg
inc
xchg
pop
pop
pop
lods
cld
jns
bound
sbb
insl
les
into
or
pop
xchg
jnp
insl
lods
xsha256
cmpsb
xchg
push
into
jl
adc
push
jg
outsl
test
cwtl
dec
mov
clc
das
call
cmp
sub
sbb
or
pop
outsl
test
cwtl
dec
mov
clc
das
call
cmp
fs
seto
push
mov
sbb
mov
push
fisttpl
sti
pop
into
ficompl
add
dec
std
ds
popf
pushf
mov
sub
dec
and
in
or
push
mov
mov
mov
orb
add
xor
mov
and
enter
push
mov
or
xor
push
sbb
dec
call
and
cli
push
hlt
pushf
mov
pop
jg
push
ss
call
push
call
mov
mov
ret
dec
test
jge
cmpsb
adc
add
rolb
loop
xor
mov
xchg
cmp
scas
repnz
in
icebp
aam
stc
in
loopne
scas
mov
xchg
jns
sbb
shll
rol
std
pop
scas
out
imul
inc
movsb
jb
add
lret
jp
std
push
loop
popa
inc
int
repz
cmp
mov
ret
outsl
sbb
adc
or
mov
jo
and
fbstp
push
dec
ret
inc
pusha
clc
xor
or
je
stos
sbb
mov
dec
aaa
mov
pushf
xchg
push
subb
xchg
repnz
sub
jmp
sub
movsb
addr16
stc
xchg
jmp
jne
sub
adc
into
mov
cmp
adc
mov
add
sbb
push
jp
cmp
fidivrs
mov
iret
pop
xor
test
into
dec
in
xor
cmpsl
inc
add
push
ds
test
push
jnp
pop
or
lock
mov
inc
mov
je
or
sbb
je
jle
inc
cmc
mov
add
mov
add
mov
in
pop
jnp
pop
cli
scas
iret
cmp
jp
stos
lock
movsl
std
call
aaa
lret
xor
mov
cwtl
addl
leave
ret
mov
jns
mov
repnz
insl
mov
add
push
data16
mov
fs
cli
xchg
jp
pop
jp
punpcklbw
in
pop
sarl
fidivl
xlat
loopne
in
je
fs
cwtl
movsl
arpl
pusha
cs
add
bound
cmp
pop
pop
ljmp
mov
dec
out
push
scas
dec
dec
push
push
sbb
add
addb
gs
outsl
cld
imul
in
loope
sub
cmp
lock
dec
mov
sahf
dec
loopne
jbe
sahf
enter
xlat
inc
sub
enter
out
jbe
lods
divb
xchg
gs
fcoml
sub
and
rsqrtps
test
enter
mov
fimuls
pop
stc
ret
shll
pop
add
mov
and
repnz
mov
sti
in
test
test
hlt
fstl
repz
and
ficompl
pop
or
clc
mov
pop
xchg
push
dec
pop
test
data16
pop
inc
pop
cld
or
ret
ficomps
jl
jnp
stos
dec
cmp
repnz
adc
xchg
lfs
dec
out
lods
fidivrs
mov
xchg
adc
es
in
adc
add
ljmp
or
mov
lahf
insb
roll
xchg
scas
sbb
sahf
addr16
inc
jne
push
repz
mov
mov
sub
lods
dec
jo
sub
fistps
inc
rcrb
xchg
fwait
sbb
mull
pop
jnp
mov
idivb
inc
ljmp
arpl
jne
jge
lods
dec
aas
ja
pop
cwtl
in
fcomps
xor
lock
movsl
negb
cmpxchg
and
jns
push
xor
or
adcb
je
cmp
test
int3
pushf
or
iret
cmp
in
push
pop
cmp
clc
mov
std
fs
das
jle
cmp
insl
sub
sub
cwtl
iret
sarl
inc
popf
repnz
inc
or
inc
and
loop
xlat
mov
clc
adc
pop
aad
jmp
mov
push
and
jns
out
pop
xchg
xor
bound
cmpsb
aaa
lea
xor
fildll
inc
lahf
mov
pop
mov
je,pn
push
mov
and
imul
xor
jg
and
or
cmp
xor
add
lds
fcmovne
push
fs
scas
jle
inc
das
hlt
out
cmp
int3
fisubrs
pop
sbb
xor
pop
jle
les
mov
lds
push
inc
and
push
loopne
mov
mov
aad
pop
push
in
dec
fisubrs
mov
jo
or
jne
sub
pop
aam
sub
inc
movsl
jge
insb
or
jmp
sub
adc
shl
fdivrs
outsl
rorb
rolb
push
jmp
imul
inc
insb
and
in
jb
dec
and
addr16
cmp
dec
push
mov
adc
or
push
jns
and
outsb
pop
dec
mov
bound
stos
movsl
or
das
hlt
xlat
mov
push
jp
js
rolb
mov
lea
stc
leave
or
int
pop
pop
sub
insl
insl
and
push
in
add
add
sarb
adc
mov
or
jae
cmp
mov
xor
les
fdivs
xor
push
mov
pop
aam
jnp
xchg
dec
dec
xchg
les
das
mov
mov
or
jbe
jg
inc
push
gs
adc
dec
cmpsl
fwait
ss
in
pop
ja
push
push
or
jo
mov
insl
rolb
inc
mov
add
outsb
lea
jnp
adc
cmp
test
test
push
test
mov
movsb
repnz
add
stc
xchg
pop
in
xor
pop
xor
test
xor
cld
fucomi
xchg
lods
fdivl
push
and
xor
sti
add
mov
jbe
adc
push
add
lahf
push
cmpsb
rclb
mov
fs
xchg
repnz
dec
in
sbb
pop
in
push
mov
push
idiv
adc
ror
rol
idivb
test
or
test
fmuls
insl
mov
xchg
int3
lcallw
add
add
lods
call
call
cmpsl
int3
or
inc
add
test
push
mov
lds
lock
in
cli
xchg
inc
and
stos
xchg
cld
dec
stos
jno
gs
and
jb
fs
push
jecxz
push
imul
in
mov
in
lds
or
stos
in
pushf
jne
out
cld
jecxz
ljmp
mov
fsts
xchg
jb
pop
daa
mov
pop
cmc
sub
test
mov
mov
sahf
xor
out
cmpl
pop
lods
movsl
hlt
jmp
test
push
test
ja
aad
ror
mov
push
inc
inc
lea
mov
imul
cmp
dec
lods
sub
in
out
testb
aam
xchg
push
das
sbb
mov
sti
jbe
loop
int3
mov
cli
xchg
mov
outsl
cmc
sub
jmp
pop
mov
movsl
lret
cs
out
adcl
nop
mov
pop
stc
shrl
jno
loope
ret
mov
cmpb
push
and
lods
dec
movsl
mov
jae
mov
and
cmc
imul
ucomiss
out
loop
xor
lret
mov
shrl
rcl
cmp
xor
das
mov
jp
mov
pop
jmp
sti
mov
in
mov
xchg
fimull
ss
push
pop
adc
mov
loopne
test
mov
sahf
not
xchg
in
lret
sar
inc
int
ret
jb
jecxz
mov
les
mov
scas
pop
shrl
into
push
push
div
iret
repz
mov
and
outsl
lahf
pop
sbb
pop
sbb
adc
ljmp
out
adc
add
mov
mov
push
jbe
dec
jge
pop
pop
orl
dec
fdivs
les
in
lcall
push
sub
pop
bound
push
sub
or
cwtl
aas
icebp
push
cmp
test
mov
leave
cmc
rdmsr
pop
push
adc
es
inc
cmp
popa
mov
pop
pop
into
cs
push
mov
in
sbb
data16
pushf
push
movsl
dec
mov
mov
lods
into
jnp
cmp
shlb
icebp
testl
aas
notb
dec
push
std
dec
mov
scas
sub
ljmp
mov
ss
loopne
repz
cmp
rcrb
jg
xchg
cli
mov
gs
in
xor
jmp
xor
sbb
dec
pushf
jle
ds
sti
cmp
neg
jbe
out
ds
jno
cwtl
call
mov
pushf
xor
lret
outsl
in
icebp
add
testb
sub
pop
jns
popf
sub
out
inc
js
push
adc
in
dec
insb
cmp
ja
xor
enter
jmp
mov
in
cwtl
push
call
inc
pushf
jl
fisttpl
rolb
sti
and
add
popa
push
mov
cmp
add
ljmp
mov
addb
cmpsb
mov
push
test
rcl
xor
add
addl
pushf
cmp
rcl
negb
mov
inc
jnp
cmp
dec
lret
mov
dec
shrb
xor
mov
pop
push
mov
push
mov
dec
leave
dec
mov
lea
dec
mov
loop
xor
mov
cld
sbb
lcall
lcall
shr
mov
nop
cli
inc
inc
jle
testl
or
push
and
ss
add
mov
adc
dec
add
cmp
and
inc
add
pop
xchg
xor
loop
ffree
cmp
xor
xchg
cli
das
sbb
outsl
jp
and
roll
and
fwait
insl
push
loopne
mov
sbb
cmp
call
es
pusha
push
ja
add
push
cmpl
incb
sahf
ret
fwait
jno
inc
popf
pop
xchg
lcall
or
aas
and
push
push
int3
cmpsl
xchg
test
stos
movsl
sbb
std
iret
inc
jmp
cmpsl
or
sti
pop
test
push
hlt
cmc
cmc
sub
call
data16
pop
push
fwait
sar
ror
push
shlb
xlat
push
pop
cmp
adc
dec
test
dec
decb
cmpsb
inc
pop
fs
cld
nop
xlat
in
ret
push
jno
push
dec
or
fnstcw
outsb
jl
or
mov
jb
inc
jp
dec
cmpb
jne
repz
shl
inc
mov
movsb
jecxz
mov
outsl
lods
jns
cmp
xor
cmp
subb
or
gs
pop
cmpsl
inc
cltd
and
jne
shrb
mov
in
repnz
shrl
push
xlat
mov
jbe
and
stos
fcompl
subb
lret
aam
sub
lock
or
mov
cs
int3
inc
lcall
rclb
sub
sbb
or
pop
js
int3
jae
sbb
mov
call
movsl
push
shlb
outsl
xchg
into
movsb
dec
ror
mov
in
add
movsb
das
sub
out
lock
pop
jno
daa
mov
sbb
mov
lret
push
insb
aas
sub
xor
pop
push
outsb
aam
icebp
jbe
adc
call
sti
cmpsb
popl
pop
adc
sbb
stos
mov
push
xor
mov
mov
inc
push
rolb
ljmp
cmpsl
mov
sbb
jbe
jno
push
lds
pop
out
mov
mov
out
shr
mov
push
mov
mov
scas
insl
lea
xchg
pop
xchg
fimull
into
pop
pop
aas
sbb
mov
jno
aad
je
fwait
clc
cmpsl
fs
and
or
addr16
cmp
cs
sti
adc
ds
xchg
jmp
mov
iret
lods
inc
lea
dec
xor
add
subl
adc
nop
pusha
mov
cmp
mov
mov
test
fucomi
sub
add
inc
cli
jp
push
dec
or
std
xor
adc
lret
pop
sbb
lods
and
xchg
jle
fmull
mov
fnsave
adc
sar
add
dec
push
rorl
xchg
scas
push
sti
pop
jmp
fadds
aaa
mov
out
mov
hlt
jmp
loope
shll
mov
add
push
cmc
out
outsb
and
push
pop
cmp
cltd
mov
mov
mov
cmpsb
xchg
mov
or
lods
loopne
lcall
or
inc
call
and
jbe
addr16
rol
aad
in
lret
out
sbb
into
pop
dec
js
jo
jge
mov
sti
mov
into
dec
push
xchg
add
push
pusha
xlat
lods
jbe
aaa
rcrl
jb
xor
mov
fldl
lahf
leave
lcall
jge
mov
inc
or
in
pusha
or
inc
testb
das
mov
scas
pop
pop
ss
dec
push
mov
mov
std
scas
leave
dec
je
mov
xor
xor
bound
stos
cmc
lret
mov
mov
xor
fistps
cmp
pop
daa
movsb
es
imul
mov
and
aas
sbb
insl
fistpll
rcr
sbb
adc
mov
xor
enter
xchg
repz
test
dec
loop
sub
test
mov
pop
mull
movb
lret
fistps
push
fidivs
jl
lods
jae
mov
imul
pop
push
pop
pop
push
inc
out
and
in
lret
iret
and
aam
outsl
outsb
test
cmpsl
mov
sbb
xchg
out
pop
jnp
inc
jg
jae
outsb
cmpsl
outsl
loope
js
pop
adc
test
pop
jmp
pop
push
adc
mov
insl
bound
adc
mov
notl
adc
dec
lods
pop
fidivl
push
and
rcl
addl
lods
sub
ss
sbb
mov
test
outsb
pop
dec
cmpb
adc
push
int
lret
jmp
mov
nop
sub
add
cmp
xchg
insl
push
sub
jmp
notl
cmpsl
setl
mov
icebp
pop
jp
fistpll
iret
ja
lock
mov
cmp
xchg
push
jae
int
adc
add
cmp
sub
jge
inc
push
fdivrs
mov
loop
dec
cmp
int
push
loopne
add
cmc
ret
pop
daa
dec
xchg
xor
cwtl
xor
inc
es
enter
pop
mov
jbe
mov
out
xor
pop
jae
addb
dec
loope
mov
xchg
add
int3
outsb
and
out
xchg
fiadds
pop
in
add
out
insb
xchg
je
jp
adc
jl,pn
cmp
add
imul
scas
sub
xchg
xchg
jbe
pop
cs
lcall
pop
pop
fstp
and
xchg
pop
and
dec
jno
inc
repnz
popa
pop
lea
fwait
hlt
cmp
icebp
jns
inc
int3
sub
add
std
enter
mov
icebp
add
jno
pop
stos
subl
lahf
inc
arpl
aaa
xor
loope
add
outsl
mov
add
shlb
enter
data16
jno
push
push
loopne
sub
out
movsl
sarb
jb
xchg
or
insb
leave
ret
mov
sub
fisttps
adc
jmp
dec
out
push
adc
push
pop
in
inc
popa
ret
xchg
sub
adc
out
mov
push
sub
aas
cmp
sbb
addb
je
and
andl
push
fdivr
sbbb
mov
adc
and
cli
sbb
cld
add
push
outsb
sub
push
movsb
dec
inc
out
pop
mov
scas
push
std
sbb
cmpsl
in
fidivs
bswap
sahf
nop
mov
std
in
cmp
fcompl
insl
adc
sahf
std
cld
lock
lods
adcl
js
push
popa
fst
out
cmpsb
paddusw
cmp
outsb
cs
sbbl
inc
cmp
call
outsb
inc
lahf
pusha
xchg
xchg
std
mov
lahf
ret
lahf
inc
inc
adc
in
push
dec
adc
lret
pop
dec
aad
add
jns
rclb
xchg
and
ss
out
std
lret
pop
testl
in
inc
xchg
movsb
scas
jmp
or
sub
shrb
fimuls
pop
and
xor
bound
xchg
pusha
xchg
or
rcll
aad
fistps
mov
lcall
and
bound
lock
jb
jle
ja
lcall
fcmovnbe
mov
xchg
inc
pop
sub
shlb
mov
push
mov
mov
sbb
sbb
rcrl
xchg
mov
xchg
shr
dec
fstps
cmpsb
fistpl
jmp
or
dec
cwtl
or
push
push
movsb
iret
shrb
dec
jbe
test
mov
sub
adc
dec
pusha
mov
call
adcb
loop
push
xor
push
xor
cmpb
xchg
in
mov
ljmp
push
dec
loope
fiadds
xchg
ss
push
iret
rol
shl
cli
lods
out
sbb
sub
scas
mov
pusha
dec
jnp
mov
cmpsb
mov
popf
push
and
sub
mov
ficomps
mov
or
sub
dec
mov
adc
mov
push
sbb
cmpsb
scas
popa
js
mov
inc
pop
inc
rclb
jb
test
cli
mov
sub
pop
sbb
push
cld
fldl
dec
mov
sarl
inc
mov
cmp
sti
out
out
out
sub
mov
xchg
sbb
icebp
jns
scas
xchg
ja
add
push
ljmp
sub
lahf
jo
xchg
data16
xor
popf
inc
mov
insl
out
inc
mov
dec
roll
mov
in
mov
insl
leave
aas
cmp
lret
mov
push
lods
outsb
mov
sub
xchg
jb
pop
add
pop
sti
aad
lods
pushf
cmpsb
incl
repz
push
xor
dec
je
or
lahf
enter
dec
sti
and
or
pusha
sub
loop
sbb
add
es
xlat
xchg
add
and
les
sub
shl
sbb
add
scas
inc
xchg
add
sub
aaa
cmp
mov
std
cmp
pop
or
mov
repnz
addr16
xchg
mov
jnp
push
and
test
pop
es
je
scas
push
lods
test
sbb
bound
iret
dec
xchg
les
jnp
cli
and
ljmp
hlt
sub
jae
jo
shr
mov
out
sbb
pop
lret
dec
mov
fucom
jb
cwtl
and
pop
in
push
mov
xchg
mov
adc
bound
add
lret
fwait
ljmp
rolb
data16
jne
les
sub
shl
jne
lods
test
hlt
cmp
hlt
xchg
addl
ror
shll
xchg
loop
xchg
xchg
pop
xchg
inc
lock
pop
cltd
xor
jo
jbe
jmp
andl
xchg
loopne
call
add
add
adc
test
repnz
in
adc
mov
iret
test
repnz
mov
es
rcl
cmpsb
fwait
push
mov
sub
jmp
mov
test
push
mov
and
sbb
cwtl
push
testb
shrl
std
sti
cmp
loop
addr16
pop
out
out
pop
ljmp
sub
mov
pushl
jo
push
cmp
cld
arpl
push
ret
dec
xchg
je
gs
and
add
push
dec
mov
outsl
jae
nop
data16
out
movsl
movsl
push
popf
mov
lret
jl
xor
jmp
push
out
jo
shlb
cld
pop
popa
dec
outsl
lds
mov
inc
lods
push
sarl
xchg
gs
adc
call
daa
pop
push
repz
pop
push
daa
dec
mov
les
negb
xor
ljmp
daa
push
fldt
xchg
repnz
roll
daa
xor
xchg
scas
cmpl
cli
imul
in
fs
ds
mov
call
leave
push
pop
xor
test
ja
xchg
push
aaa
dec
jecxz
cli
out
scas
popf
movsb
lock
cwtl
xlat
and
pop
iret
fidivrs
jge
inc
jg
xor
out
imul
cmp
and
fwait
adc
andb
inc
test
mov
or
pusha
test
xchg
shlb
and
in
inc
cmc
stos
adc
pop
std
sbb
mov
in
lret
addr16
pushl
hlt
clc
int3
fdivp
or
rcl
dec
sub
js
push
jg
outsl
test
cwtl
dec
mov
clc
das
call
cmp
sub
sbb
or
pop
outsl
test
cwtl
dec
mov
clc
das
call
cmp
sub
sbb
or
pop
outsl
test
aas
stc
das
call
cmp
sub
sbb
or
js
call
jg
outsl
add
cwtl
dec
decl
cmpsl
pop
loopne
lock
sub
cmp
or
sbb
mov
and
lods
daa
mov
shr
cmpsb
cld
pop
int3
sbb
sub
cmp
or
sbb
insb
and
add
jecxz
repz
pushf
shrl
fcoml
or
sbb
insb
adc
or
jecxz
shl
mov
xchg
aad
icebp
mov
jae
pop
xor
jo
movsl
sub
lret
movsb
ror
push
pop
cmp
jl
fsubs
mov
aaa
jecxz
xchg
ss
mov
mov
cmp
adcl
std
in
fwait
or
jl
xor
or
imul
lods
loop
jecxz
ret
mov
push
fcoml
cmp
inc
sbb
dec
aaa
imul
and
adc
not
adc
jmp
mov
mov
jl
iret
ret
inc
shr
or
loope
mov
rcr
push
rcrl
subl
pop
adc
mov
mov
mov
outsl
pop
stc
loopne
cmp
or
sbb
insb
and
add
jecxz
pop
mov
pushf
out
in
lahf
cld
pop
int3
fsubl
gs
jne
insb
xchg
pop
sub
push
lods
mov
in
in
in
fsubrl
and
jo
insb
jno
popa
xor
push
and
sub
mov
xchg
mov
out
loopne
adc
arpl
jo
and
xor
adc
pushf
shr
mov
fcoml
or
sbb
insb
and
add
jecxz
repz
pushf
shr
mov
fcoml
xchg
xor
cmpsl
stos
stos
sub
lods
lea
push
fcmovnbe
jge
jmp
pusha
xor
daa
add
mov
call
pop
jg
ds
mov
clc
add
xchg
mov
outsl
je
jge
add
push
loop
sub
sbb
and
mov
pop
xor
inc
pop
call
out
mov
inc
cmp
int3
lds
mov
dec
outsl
adc
hlt
mov
aam
scas
adcb
addr16
or
cmpsb
jbe
xchg
jle
xor
popf
jge
and
aam
fwait
sbb
fcoml
pop
jmp
sub
rol
pop
dec
add
jne
test
mov
push
jp
xor
idivb
pop
pop
mov
lret
fidivrl
xchg
gs
pop
dec
xor
xchg
leave
push
test
mov
push
xlat
das
sbb
fs
jp
in
sbb
loop
and
mov
loopne
repz
mov
xor
dec
xor
sbbb
les
mov
fildll
mov
push
roll
mov
dec
mov
adc
xchg
leave
add
xchg
mov
test
push
mov
test
jge
lcall
pop
sahf
pop
xor
xor
test
add
ds
mov
cltd
sbb
fcmovnb
in
mov
fwait
jge
pop
sbb
cs
fsubrl
mov
test
popa
filds
mov
mov
leave
inc
jg
xchg
mov
repz
mov
or
and
fistpll
test
sahf
ds
pop
push
jnp
aaa
jle
in
or
push
popf
mov
adc
leave
and
pop
ror
or
loop
or
out
dec
out
call
rcrl
adc
test
les
xchg
loop
mov
mov
dec
cld
or
arpl
in
pop
lahf
daa
das
sbb
mov
push
jae
sbb
jp
xchg
ljmp
jno
adc
call
dec
or
adc
sub
or
pop
adc
mov
adc
adc
cmp
push
jl
shr
pop
insb
repz
push
dec
movzbl
mov
nop
xor
sbb
mov
adc
loop
pushf
add
sbb
lahf
push
dec
sbb
cmp
rcll
pop
dec
in
dec
mov
sbbl
push
adc
jle
adc
mov
jl
and
popf
movsl
adc
sub
xchg
cmc
jnp
dec
popa
cmp
mov
cli
ret
negb
cmp
enter
pop
sub
jnp
ret
mov
cs
arpl
mov
je
scas
cmp
mov
test
sbb
inc
pushf
aam
xchg
add
or
push
dec
mov
mov
xor
into
push
lods
and
mov
add
dec
lea
lock
adc
jae
stos
inc
fstpt
test
jmp
leave
add
add
push
fcmovnbe
xorl
jbe
add
cmpsb
push
sbb
out
inc
ret
popl
out
arpl
inc
sbb
gs
sahf
rolb
adc
loop
sub
push
mov
or
pop
pop
movsl
test
cmpsb
movsb
ficoml
dec
loope
jns
pop
add
sub
mov
push
mov
gs
pop
pop
js
fdivrs
and
js
imul
jno
test
inc
mov
ds
sbb
enter
sti
popf
arpl
aam
dec
ret
rorl
in
rcl
iret
fstpt
dec
pop
fisttps
sbb
rcrl
and
stos
jp
aas
loop
sbb
jmp
sbb
or
rorl
mov
push
aad
je
ret
xchg
popf
movsl
jno
jno
sub
dec
dec
xor
inc
push
cmp
clc
fcmove
mov
adc
mov
adc
gs
xor
sbb
sbb
jmp
pop
mov
cmpsb
or
xchg
jae
push
and
in
push
jbe
xchg
fwait
cmpsb
gs
bound
icebp
clc
pusha
jb
test
sub
and
xor
rclb
sarb
fdivl
dec
or
inc
jg
lock
mov
into
cmp
mov
cmc
fsts
jle
xchg
cmp
xchg
cmp
daa
push
inc
es
adc
sahf
and
scas
add
test
iret
shl
push
push
sub
inc
sub
aas
jg
xchg
loopne
sbb
push
fisttps
xlat
stos
cmp
in
adc
push
pop
mov
int3
pop
imul
stc
fadds
or
dec
sbb
lods
mov
popa
push
xchg
or
ret
jnp
inc
and
push
jge
jg
test
int
pop
das
inc
pop
push
add
sub
movsb
pop
lods
roll
sub
lds
cmpsl
sbb
mov
mov
and
dec
dec
icebp
mov
and
outsl
jmp
add
rcrl
add
jo
and
inc
dec
gs
call
dec
jge
adc
mov
bswap
fld
loop
jmp
inc
cmp
jp
fadd
jns
sarb
rcrb
sbb
cmpl
adc
sbb
test
ja
mov
mov
cltd
fldz
push
mov
xor
push
push
mov
addr16
fs
pop
int3
lods
jmp
aaa
cmp
cmp
fwait
outsb
pusha
push
sub
sub
mov
pop
jl
mov
in
sub
mov
jno
pusha
mov
pop
ret
fistl
fdivl
push
sbb
push
inc
movsb
sbb
sub
fcmovbe
stos
jecxz
push
fwait
stos
xchg
mov
cmpsb
push
mov
jp
sbb
mov
pop
mov
aaa
pop
pop
imul
dec
add
shrb
and
stc
out
je
into
push
movsl
xchg
mov
adc
clc
sbb
lret
ficompl
dec
and
std
add
push
loop
nop
filds
xchg
out
mov
call
lret
cmp
flds
imul
mov
cmc
mov
in
shll
rcll
pop
ss
mov
lock
je
mov
mov
cmc
cmpsl
sti
add
andl
cmp
adc
or
inc
xor
xor
push
add
adc
mov
jne
hlt
shl
outsl
nop
into
arpl
out
shrb
fldt
jbe
shrl
push
push
mov
sub
inc
les
imul
mov
aad
gs
pop
jecxz
out
sbb
and
popf
jmp
mov
fwait
add
pushf
mov
cs
jo
pop
cmp
mov
push
idivb
mov
mov
mov
fimull
or
cmp
cmc
aaa
mov
pmaxub
inc
pop
loope
add
test
stos
push
or
dec
sub
stc
iret
mov
pop
or
addr16
inc
jo
cs
and
sbb
imul
inc
jg
mov
cld
mov
inc
out
sbb
jle
push
dec
sahf
push
imul
or
int3
in
jbe
lock
jmp
scas
pop
jmp
pop
subl
int3
xorl
dec
xchg
sahf
sub
jnp
pop
lret
fadd
push
scas
clc
sbb
aaa
adcb
pop
jge
aad
test
sti
cmp
mov
xchg
add
inc
lret
jecxz
pop
pop
sbb
test
dec
aam
ds
in
jp
push
inc
jp
in
test
lock
stos
xorb
or
es
inc
fdivs
and
jne
inc
mov
fidivs
pop
lret
mov
std
pop
or
rcrl
cmp
adc
jecxz
mulb
out
jge
add
cltd
pop
out
pop
jo
mov
stc
incl
adc
mov
in
lods
pop
in
call
in
adc
sti
orl
jbe
clc
jne
dec
lcall
mov
sahf
mov
sbb
fwait
test
rcrb
loope
pop
or
mov
xchg
test
nop
mov
in
lods
outsl
xor
xchg
fists
lea
rol
cmp
mov
fs
scas
nop
xor
shlb
cmp
jae
adc
das
movsb
adc
xchg
into
lock
in
leave
mov
fcompl
xchg
xlat
sbb
add
ljmp
mov
pop
fstps
xor
mov
sub
pushf
lea
mov
mov
repz
mov
js
sub
pop
mov
rcrb
addr16
mov
imul
mov
mov
ljmp
xorl
repz
mov
jl
add
and
sarb
push
shll
insl
add
pop
repz
push
xchg
pop
out
les
push
jmp
mov
rolb
sub
int3
int
mov
mov
idivb
push
std
pop
xchg
incl
xchg
aad
incb
clc
inc
dec
fs
fwait
jmp
in
sahf
ret
div
sub
test
or
jo
mov
stos
gs
in
cmpsl
pop
xchg
inc
xor
nop
int3
pop
pop
rol
add
incl
mov
mov
mov
mov
sahf
lods
lret
or
movsl
pop
mov
aam
loope
push
or
movsb
pushf
dec
gs
cmpsl
fwait
ret
mov
lret
cli
add
or
shrb
inc
cli
aad
loopne
les
dec
call
daa
cmp
dec
lret
sub
pushf
jg
in
dec
mov
cmp
call
pop
dec
in
xor
mov
lahf
mov
push
jmp
or
dec
inc
xor
scas
subl
push
test
mov
mov
into
sahf
xor
sbb
call
int
out
mov
pop
int
mov
xor
push
in
pop
movsb
das
les
or
push
fwait
pop
mov
push
inc
jb
pop
stc
rcr
enter
out
inc
and
repz
mov
mov
inc
insl
insb
arpl
nop
in
xchg
mov
lds
call
test
je
xor
cmp
jge
sub
ret
lock
hlt
xchg
cmp
outsl
jecxz
out
int
mov
insl
pop
mov
in
add
outsl
xchg
cmc
and
push
sbb
insl
push
xchg
xchg
pop
shl
cmp
pop
jae
jg
jecxz
faddl
data16
aas
adc
xchg
xchg
mov
xchg
push
mov
xor
sarl
idivl
sub
rcll
xor
cmp
repz
mov
push
lock
cmc
xchg
adc
rcrb
adc
cs
in
aam
and
cmp
inc
mov
and
pop
sahf
icebp
std
pop
loopne
scas
add
outsb
mov
aad
push
lock
inc
call
adc
ss
mov
stos
popa
dec
inc
shlb
lahf
mov
pusha
stos
sahf
add
je
jnp
std
jp
lahf
stos
xor
sti
hlt
cmpsl
xchg
pusha
ret
pop
sub
loope
and
stos
jae
and
add
fists
cmp
push
mov
loop
cmpsl
cmpsl
mov
mov
insb
jo
decb
das
add
jns
push
shlb
js
test
popf
add
ds
out
dec
cs
cmp
jbe
mov
push
ljmp
xchg
xchg
mov
pop
stc
dec
lds
cmc
push
xor
push
sbb
shll
test
popf
call
pop
cld
xchg
xchg
lret
movl
out
scas
xor
mov
dec
add
sbb
hlt
mov
daa
pop
daa
outsb
andl
test
popa
ror
cmc
xor
mov
and
mov
movsl
xchg
xor
repz
cs
lods
div
sub
rcrl
or
xor
mov
and
cmp
push
mov
mov
fwait
int3
push
sub
lea
and
mov
pushf
lahf
jle
dec
ss
adc
mov
push
jg
jne
cld
or
addb
pop
mov
mov
xlat
lahf
das
lahf
cmp
enter
inc
cltd
cmp
jns
out
rorl
leave
outsl
inc
repz
std
sbb
pop
xchg
jbe
popf
mov
fs
rclb
ja
mov
lods
xor
inc
pop
lods
jmp
bound
mov
or
and
icebp
aas
mov
cmpsb
xlat
fs
mov
je
mov
push
inc
or
cmpps
push
std
mov
addr16
popf
and
rclb
inc
push
dec
fistpl
add
call
sbbb
sbb
mov
cltd
or
cmpsb
jl
sarb
lock
iret
out
movsl
jge
stc
adc
cmc
inc
dec
in
cmpsb
jle
jne
sbb
mov
push
mov
dec
dec
mov
pusha
out
roll
adc
fistl
adc
dec
jne
xchg
lds
pop
enter
mov
and
loope
or
fmulp
dec
mov
pop
pop
xchg
push
xchg
lret
xor
adc
pop
mov
jns
cwtl
cmpsb
iret
xor
shrl
scas
bound
aas
mov
lock
lds
and
mov
int3
testb
addr16
push
in
pop
movsl
imul
jb
push
in
ja
stos
fcomps
rcr
scas
shlb
push
les
les
ret
jg
daa
xchg
shrl
ja
aam
nop
js
ret
out
mov
aad
adc
fwait
outsb
stc
pop
std
mov
ss
push
xlat
insl
and
aad
pop
ds
and
shll
sbb
jbe
jo
lcall
dec
leave
push
out
sub
cmp
fmul
xorl
cmp
enter
sub
inc
mov
pop
insl
jno
es
dec
jmp
mov
out
aad
push
mov
inc
add
mov
mov
or
cmp
shll
ljmp
lahf
sarl
mov
mov
xor
fldcw
lods
rorl
nop
les
mov
jb
aas
ss
cltd
lcall
repnz
sbb
cmc
scas
fcoml
dec
cmp
repz
jne
dec
push
andl
sbb
pop
subb
jl
dec
pop
pop
fs
mov
mov
popf
add
jae
xor
pop
xor
mov
dec
add
mov
aad
mov
jo
fbld
mov
mov
inc
and
sbb
fs
sub
jne
or
sbb
and
in
out
cli
xor
or
or
lret
jge
test
cld
lods
mov
xor
xchg
xor
xchg
jb
movsbl
int
cmpsb
cs
int
pop
fdivr
outsl
xor
mov
stos
js
sub
cmp
jmp
xchg
push
xchg
insb
adcl
mov
cld
push
mov
mov
bound
icebp
xchg
cmp
jg
dec
inc
inc
shrb
in
or
call
cwtl
lds
fs
fldl
insl
sahf
push
ret
or
lret
pop
mov
add
test
fistps
cmp
push
pop
jo
hlt
xor
jns
mov
ret
pop
push
lret
out
insl
fwait
orb
mov
jmp
sbb
mov
into
cmp
pop
shl
out
scas
and
and
insl
mov
rclb
std
inc
popf
push
sub
loopne
arpl
add
push
cltd
cmp
lret
or
mov
std
popa
dec
sub
test
inc
je
out
fmuls
sarb
push
sbb
mov
mov
dec
icebp
cmc
xor
mov
push
sbb
jl
mov
jb
sub
in
sbb
xor
mov
daa
mov
sub
xchg
pop
mov
mov
push
lret
leave
sub
mov
outsl
enter
jns
xchg
negl
adc
mov
mov
xchg
add
rclb
inc
lret
lret
or
add
addr16
xor
stos
sbb
ret
mov
add
inc
fwait
jl
jbe
cli
aam
stos
pop
pop
jo
or
mov
out
ret
sbb
and
gs
scas
jns
mov
movsb
ja
jne
xlat
jg
sti
sbb
sub
aas
jo
jge
mov
add
dec
test
adc
xor
pop
dec
out
mov
mov
mov
pop
ret
dec
fnsave
xor
jg
adc
mov
test
sbb
popf
xor
lahf
movsl
enter
add
imul
rol
push
cld
inc
shll
jae
or
mov
xor
dec
repz
js
cli
in
mov
je
data16
push
xor
lods
xor
andb
bound
addb
add
adc
xlat
mov
push
xchg
sti
sbb
lea
push
push
hlt
xor
fwait
mov
out
add
jns
ret
sti
xor
das
in
lret
insb
ss
dec
movsl
add
mov
inc
test
lret
popf
pop
sbb
jne
jge
mov
push
insl
or
cwtl
lret
push
mov
in
dec
iret
cld
pop
jno
cld
addr16
movsl
icebp
cld
sub
std
cmpsl
das
adc
jbe
mov
bound
cmp
pusha
cmp
and
inc
sub
jle
outsl
mov
sbb
fstpt
bound
lret
dec
or
filds
lea
fisttpl
xor
and
testb
enter
xor
rcl
popf
repnz
pop
jge
xchg
mov
mov
or
sbb
push
mov
aas
sbb
popf
in
test
comiss
fidivrl
push
aaa
add
test
or
pop
fsubl
cmp
fbstp
sbb
jg
and
outsl
inc
shll
enter
sysenter
mov
pop
lret
xchg
inc
hlt
mov
xor
mov
cmp
clc
sbb
rclb
packssdw
push
filds
lcall
add
imul
pop
les
bound
sbb
mov
cmp
adc
jne
lds
rcl
xchg
pop
scas
push
jo
add
push
loop
xor
jnp
add
fbld
xchg
lcall
fadd
cltd
or
push
sbb
fisttps
lock
sti
jb
sbb
cmp
jle
jl
dec
mov
aad
mov
fwait
add
shlb
js
das
dec
sbb
sub
push
pop
hlt
bnd
mov
mov
push
iret
gs
xchg
test
xchg
pop
lds
shrl
mov
movsl
dec
inc
xchg
mov
adc
jl
adc
pop
xorb
pop
aam
or
push
jb
pop
xchg
mov
jns
push
dec
jecxz
scas
scas
cmpsb
sahf
mov
pop
aaa
mov
pop
jbe
cli
and
imul
add
and
and
sti
mov
popa
and
stos
push
and
lret
inc
cltd
ret
cmc
inc
push
adc
pop
fcomps
pop
fisubs
mov
cltd
xorb
pop
xor
sbb
and
loope
std
addl
lret
push
imul
dec
loopne
mov
push
adc
popf
xchg
aas
jl
mov
movsl
mov
pop
fidivl
out
xor
loop
xchg
scas
xchg
mov
push
add
mov
inc
push
sub
cmp
sub
mov
mov
cmpsb
xchg
mov
lcall
pop
xor
into
test
ret
push
lcall
enter
jne
mov
jae
imull
hlt
ret
inc
mov
mov
mov
sbb
sbb
les
sti
fsubrp
sahf
sub
iret
push
jecxz
test
mov
lods
mov
sub
shlb
mov
mov
mov
xchg
push
out
fisttpl
cmc
hlt
sub
lea
jg
mov
jns
lods
fs
adc
xchg
loopne
mov
les
xchg
jg
push
fnstenv
push
xchg
xor
dec
into
mov
fdivs
dec
dec
cmc
xchg
jb
inc
or
pop
and
lock
orb
mov
jp
mov
and
sub
popa
repnz
mulb
fstpt
mov
and
ja
jo
jne
jl
mov
and
add
aad
jmp
sub
mov
mov
and
add
shll
sahf
cltd
fbld
add
repnz
push
leave
in
rol
aad
mov
or
arpl
lock
dec
daa
lret
pop
pop
out
sub
mov
lds
add
loopne
jp
ljmp
std
aas
stos
arpl
mov
cmp
mov
cmc
and
pop
inc
inc
aas
mov
jecxz
sbb
rsqrtps
enter
ret
mul
test
fisubs
cld
cmc
mov
or
and
add
jecxz
repz
pushf
shr
mov
fcoml
or
sbb
insb
and
add
jecxz
repz
pushf
shr
mov
fcoml
mov
push
in
and
pop
fcoml
lods
loop
testl
fdivl
xchg
or
sbb
insb
and
sbbl
mov
movsb
pushf
fisttpl
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
jae
cmp
adc
lods
imul
mov
dec
leave
jl
insb
ds
cmp
fdivrl
dec
cld
pop
cwtl
mov
cmp
sub
xor
dec
leave
cmp
insb
xor
and
loopne
lock
adc
test
arpl
pop
or
pop
pushf
cmp
inc
leave
ja
popa
jmp
inc
jp
mov
mov
jne
popf
mov
xor
pop
mov
or
or
scas
fldl
scas
pusha
cmp
jbe
xchg
cmp
pop
scas
and
popf
cmp
daa
js
pop
pop
inc
stos
xchg
inc
mov
mov
mov
arpl
pushf
jmp
fsubrl
pop
pop
adc
or
shrb
mov
xchg
xor
leave
mov
fs
out
insl
sub
clc
mov
in
mov
sti
cltd
sub
psubb
insl
and
inc
lods
xchg
xchg
aam
repnz
test
sbb
fs
cwtl
xor
pop
jmp
call
or
push
cmpsb
jns
arpl
dec
es
insb
mov
mov
fs
jo
mov
jl
add
pop
mov
orb
xor
fstpl
dec
sti
dec
testl
cmp
cmp
insb
fstpl
mov
xchg
sbb
stos
jns
pop
int3
pop
in
dec
mov
add
lret
insb
in
sbb
adc
pop
in
test
cmp
sub
pop
stc
dec
leave
jl
insb
sub
lods
imul
pop
in
test
cmp
sub
pop
stc
dec
leave
jl
insb
sub
addb
out
mulb
lret
pop
scas
xchg
dec
pop
call
mov
mov
rcrl
mov
mov
loopne
adc
idivl
dec
iret
jnp
nop
sbb
sub
cmp
lcall
jp
sub
sarb
lcall
push
ret
mov
fistpl
popf
mov
pushl
push
mov
mov
pop
jae
lods
repz
adc
push
and
ljmp
sub
mov
lds
sub
das
sub
stos
insl
push
shrb
enter
cs
push
xor
mov
imul
cs
popf
xor
repnz
fnstenv
pop
mov
subl
movsb
out
stos
in
jg
popa
hlt
add
dec
fwait
leave
js
jno
cmovle
and
mov
and
nop
ljmp
addr16
inc
and
push
cld
dec
or
push
int3
cmp
pop
cli
jne
fadd
cmp
pop
and
sub
sub
or
es
and
nop
xlat
pop
push
in
cwtl
dec
push
dec
xchg
aaa
ljmp
pop
and
jp
and
push
sbb
jge
mov
ss
add
negl
and
dec
movsb
cld
xrelease
jecxz
inc
sbb
push
pop
call
frstor
call
or
addr16
jl
cmpsb
clc
mov
mov
push
pop
mov
gs
insl
and
xchg
xlat
repz
cld
lea
sti
sbb
mov
movsb
insl
bound
int
aaa
or
sbbb
sbb
cwtl
vshufps
test
mov
add
jle
adc
lods
aas
push
mov
es
sbb
xor
sti
add
test
push
push
cmp
push
jnp
imul
mov
loop
cs
aad
or
add
out
insb
cld
das
dec
add
bound
cmp
int3
pop
mov
adc
stc
xchg
adc
or
int
push
dec
or
cmp
test
push
adc
cmpsl
and
or
push
push
outsl
in
fadds
inc
mov
fnstcw
add
cmp
jge
popf
pusha
call
pusha
push
pop
cmpsb
aam
rcl
push
int3
mov
mov
dec
mov
bound
xchg
ficoms
lret
popa
adc
in
mov
insl
loopne
ljmp
mov
push
push
sub
out
inc
sub
inc
pushf
sbb
fistps
adc
and
jge
loopne
out
xor
cs
aam
inc
ret
push
jp
xchg
adc
xchg
js
ds
lods
mov
loopnew
inc
cmp
cld
mov
movsb
inc
mov
mov
mov
shr
in
inc
or
rol
lods
fists
push
pop
or
sarl
cli
push
jne
loopne
test
jo
pop
aaa
push
loop
jns
psubsw
or
sbb
jecxz
je
dec
pop
mov
jp
sbb
inc
pushf
or
jns
mov
out
ds
subl
orl
cld
mov
jbe
or
andl
pop
add
push
lcall
fs
cmp
cld
pop
jno
mov
sbb
inc
dec
xchg
mov
xchg
jecxz
les
les
stos
push
pop
test
push
ss
enter
into
xor
mov
sti
loopne
sbb
fld
fstps
and
mov
bound
repnz
xchg
sbb
mov
adc
mov
into
cmc
mov
jns
ja
sbbb
and
dec
int
and
in
mov
jno
mov
in
or
and
mov
push
pop
mov
rcll
imul
mov
pop
mov
iret
test
push
outsl
inc
inc
jle
rep
sub
ret
push
sti
adc
loopne
lds
insl
mov
mov
dec
pop
pop
loope
subl
lcall
pop
mov
mov
pushf
in
dec
hlt
gs
inc
inc
cwtl
cmp
jns
add
pop
add
xchg
lret
push
addl
incl
negb
pop
arpl
ds
dec
cmp
and
jno
and
js
dec
mov
das
scas
pop
xorl
push
hlt
jo
out
mov
xor
ficoms
aaa
gs
pop
dec
dec
pop
mov
scas
mov
sub
rcrl
jne
or
mov
es
xchg
mov
mov
movsb
je
pop
test
stos
das
out
loopne
rol
in
or
sbb
jle
std
and
cwtl
push
gs
adc
stos
test
inc
cltd
push
jle
outsl
sbb
jbe
ret
dec
fsubrs
dec
js
mov
xchg
pop
mov
jb
movsb
stos
pop
dec
cli
fidivl
fistpll
mov
sub
pop
dec
daa
or
push
icebp
mov
out
jl
rol
adc
inc
std
js
inc
ficoml
hlt
popa
mov
int
lret
dec
cmp
jne
out
in
nop
int3
pop
adc
ja
scas
push
ljmp
cmp
out
test
xchg
outsb
xchg
pop
setae
or
adc
xchg
cltd
and
dec
mov
push
xor
inc
enter
dec
jp
add
in
imul
jmp
jle
or
aas
or
adcl
insl
xlat
add
ja
xorl
and
dec
push
xchg
adc
cmp
fs
jb
js
in
and
adcl
jbe
dec
push
or
and
jns
lahf
ret
push
jmp
repnz
repz
and
clc
cmp
mov
push
push
ja
rorb
in
mov
pop
or
in
push
jbe
shll
repnz
mov
repz
jbe
and
mov
pop
cmp
sarl
int
pushf
push
out
lods
xor
ds
dec
jmp
outsl
inc
js
cwtl
cmp
dec
xor
popa
xlat
adc
jg
ret
jmp
das
push
imul
ds
movsl
push
ret
jns
inc
bound
adc
cs
pop
lahf
or
cmp
push
pushf
insb
ret
cmp
aad
imul
mov
push
or
and
imul
mov
fadd
cli
mov
test
movsb
call
sbb
lret
nop
pop
add
test
mov
ret
mov
inc
fs
inc
jge
lahf
test
jmp
jns
push
and
xor
jmp
and
mov
ja
loop
jb
mov
jle
mov
cmp
out
add
xchg
mov
mov
dec
xlat
out
stos
and
js
int3
mov
xchg
xchg
and
mov
lahf
xchg
xchg
addb
aam
lock
repz
cmpsb
mov
testl
add
xorl
adcb
repnz
xor
das
pop
adc
ja
cld
sbb
mov
imul
adc
ljmp
add
repnz
pop
pop
and
xchg
cmp
pop
call
cmp
fs
xchg
or
dec
mov
and
pop
out
fisubrl
js
dec
or
clc
mov
dec
jae
into
add
lods
inc
xchg
xchg
adc
jno
loopne
push
mov
iret
or
sub
sub
sbb
leave
mov
lods
cltd
mov
jae
jmp
outsl
push
xorl
jl
cli
aaa
push
pop
bound
xchg
scas
lods
jp
xlat
lahf
jp
push
pop
stos
sub
je
movsl
cs
adcl
inc
lea
hlt
sti
jae
daa
adc
pop
pop
mov
shrb
inc
pop
repz
cmp
in
dec
insl
inc
inc
pop
push
inc
pop
out
sub
pop
nop
imul
pop
xchg
mov
pop
mov
test
shll
addr16
rcll
pop
xor
sarb
ja
hlt
add
xor
push
sub
and
insb
push
pop
mov
jl
cmpsl
push
std
out
push
arpl
insb
sahf
push
or
dec
imul
xchg
mov
shlb
mov
xchg
jmp
jns
mov
test
xor
enter
fcmovne
or
hlt
pop
inc
orb
enter
mov
mov
lfs
jb
mov
mov
dec
cmpsb
mov
imul
hlt
inc
pop
scas
pop
es
pop
cvtps2pd
mov
fildll
gs
push
popa
out
inc
sub
ret
enter
mov
pop
adc
loop
ja
mov
jge
mov
mov
adc
xor
xchg
ret
xchg
mov
xchg
sub
mov
cs
add
cmc
mov
mov
stos
cmp
push
out
lcall
in
cltd
insl
outsl
nop
jl
add
mov
pavgb
imul
adc
bound
jo
mov
push
xlat
lods
cltd
push
dec
push
sbb
inc
lock
pushf
aaa
xor
stc
loopne
push
sahf
les
pop
push
pop
push
loop
dec
xchg
test
jnp
aad
in
pop
or
cmp
incl
push
xlat
in
push
cmp
clc
xor
aaa
xor
and
fistl
sti
dec
and
sbb
pop
pop
js
sti
sahf
mov
sub
mov
bound
adc
lods
lahf
mov
xchg
inc
orb
rcll
mov
push
mov
sub
dec
lods
mov
fwait
add
cmp
fisubl
add
mov
jmp
outsb
dec
jbe
add
cmpsl
push
jo
sbb
mov
imul
mov
adc
add
add
dec
bound
shr
andl
lods
and
sbb
mov
and
shrl
int3
es
into
push
in
outsl
push
xor
add
ds
lods
lret
jb
divl
std
bound
hlt
sbb
rcrb
cs
xchg
aas
test
fnstsw
and
push
push
rcr
dec
push
in
cmp
pop
add
pop
pop
xchg
fidivrs
adc
stc
xor
push
jne
sbb
cmp
push
jl
or
or
addr16
loopne
shrb
ljmp
mov
call
xchg
call
cltd
pushf
xor
sbb
jno
inc
into
dec
rorb
int3
jo
and
addr16
popf
mov
scas
pop
xchg
call
sahf
jno
rclb
rclb
cmp
gs
pop
ds
jno
cmp
test
pop
cli
ret
jbe
pop
xor
add
inc
outsb
cmc
gs
adc
sub
es
iret
ljmp
insl
mov
add
aaa
dec
int
gs
sub
ds
adc
mov
or
leave
xchg
popf
mov
dec
popa
xchg
pusha
enter
inc
mov
mov
test
lret
int
cli
test
enter
frstor
and
lock
pop
pop
mov
js
mov
mov
pusha
pop
pop
test
dec
dec
test
and
mov
loop
je
add
and
mov
xor
nop
or
pop
dec
adc
jbe
ds
sub
adc
insb
mov
mov
jmp
sarb
in
stos
scas
xor
lods
push
adc
and
push
jbe
add
xchg
jg
jne
popf
ret
stos
jno
addr16
repz
ds
and
les
xor
into
pop
mov
in
sti
mov
popa
sbb
hlt
push
mov
push
xor
xchg
aad
clc
jg
push
or
movsl
xchg
fwait
mov
cmp
mov
dec
sahf
movsl
adc
and
and
cmpb
insl
sbb
fcomps
cmp
xor
xor
mov
je
aaa
dec
xor
dec
xchg
ds
out
icebp
out
test
mov
shl
jnp
sub
dec
roll
mov
sbb
push
ficoml
push
xor
fistps
popa
xchg
push
cmp
jae
sti
iret
test
xorb
addl
mov
stos
rolb
jns
sbb
das
push
and
ss
sub
insl
jne
imulb
xchg
inc
mov
sub
popa
repnz
lds
mov
lret
or
pcmpgtd
test
dec
cmpsb
ret
adc
dec
push
std
and
adc
pop
xlat
pop
data16
sbb
lock
jo
call
std
and
pop
leave
and
movsb
jo
das
test
xchg
pop
lahf
unpckhps
orb
ret
fadds
xchg
jns
pushl
lcall
mov
xchg
sbb
sbb
xor
or
xor
cmp
fs
out
lahf
popa
mov
mov
js
jo
xor
loopne
aas
stc
adc
adc
xchg
xchg
outsb
insl
cli
addr16
fiaddl
bound
lahf
pop
ret
inc
addl
data16
sbb
int
push
cmp
sub
mov
xchg
and
mov
mov
ja
les
les
incb
adc
jns
cmp
inc
add
jge
loopne
iret
mov
lods
outsl
nop
cli
fstl
mov
loop
xchg
dec
mov
cmp
aas
add
mov
clc
dec
xchg
inc
mov
repz
inc
bound
add
out
and
mov
mov
arpl
fildll
fwait
repnz
add
jmp
cmpsl
adc
mov
jecxz
mov
nop
mov
sub
dec
mov
arpl
mov
cld
or
or
dec
loop
push
in
inc
stos
aam
jg
shlw
test
mov
cli
push
cltd
xor
push
bound
pop
fnstenv
imul
pop
mov
je
fistps
gs
addr16
mov
insb
or
gs
shll
int3
cmp
adc
test
mov
out
cmp
push
pusha
test
inc
xchg
outsb
fimull
push
in
test
les
sub
sub
jo
xchg
sub
jmp
add
enter
int3
or
scas
bound
xchg
in
in
push
fsubs
dec
pop
jns
cmp
xchg
out
rcll
mov
outsl
pop
in
pop
sahf
jecxz
icebp
xchg
sahf
push
ds
push
push
and
mov
cs
and
pusha
add
pop
add
add
stos
or
mov
and
or
mov
and
movsl
testb
loope
pop
adc
repnz
push
and
xor
add
arpl
test
push
test
and
outsl
xchg
enter
les
ljmp
inc
mov
mov
jg
shll
cli
sbb
lcall
push
iret
popa
push
mov
push
xor
sbb
or
out
mov
cli
pushf
lret
scas
ret
push
dec
xchg
loope
aam
pop
xchg
outsb
ds
outsb
outsl
lods
test
into
rorb
adc
jmp
push
fwait
pop
scas
frstor
aad
movsl
les
xchg
xchg
push
rcll
movsb
stc
imul
xor
outsl
jns
shll
ret
mov
imull
int
cmp
shlb
outsl
cmpsb
out
jae
unpckhps
mov
popa
shlb
sbb
mov
aaa
fildl
pop
cmc
in
sub
lcall
les
mov
jg
mov
shr
sahf
in
xchg
inc
aam
push
mov
popa
or
data16
xor
ljmp
inc
sbb
sbb
add
and
ja
rcl
push
fnsave
xor
dec
sub
dec
ds
ja
daa
xchg
jbe
sbb
cmpb
cmp
dec
jp
pop
mov
fdivp
mov
mov
in
mov
and
mov
xchg
insl
xchg
mov
mov
cltd
mov
xor
pop
dec
fidivrl
dec
jmp
jp
pop
mov
arpl
or
pop
add
aad
dec
sarl
pop
jb
idivl
sahf
push
scas
push
fdivrs
mov
test
fbstp
imul
scas
cmp
bound
insb
cmp
or
mov
push
cmp
mov
mov
neg
ret
dec
int
clc
rol
sbbb
inc
xchg
push
ret
pushf
je
jne
xor
into
mov
xlat
bound
mov
xchg
xchg
xchg
sbb
andl
or
sub
lcall
sti
mull
cmc
xchg
xchg
bound
stos
lds
mov
sti
nop
jle
movsl
clc
xchg
iret
mov
ljmp
dec
adc
pop
push
enter
push
xchg
xor
cmpsb
add
pop
lcall
xlat
add
mov
cmp
xlat
sub
mov
fldt
aaa
mov
xchg
scas
add
mov
inc
fstpt
xrelease
cmp
mov
mov
fisttpll
jne
push
mov
loop
lahf
mov
loope
jne
jno
idiv
jbe
mov
inc
pop
sbbl
adc
and
adc
or
inc
aaa
and
xor
hlt
nop
push
xchg
cmp
ljmp
ret
inc
into
sbb
pop
fisubs
jmp
mov
in
ficoms
lods
xor
mov
jnp
cmp
cmp
push
and
in
stos
or
push
ljmp
mov
push
adcb
std
out
xchg
jmp
lock
aaa
lock
mov
popa
imulb
mov
enter
fbstp
sarl
pop
jnp
add
sub
push
pop
mov
mov
sub
loopne
outsb
outsb
out
jle
sarl
pop
pop
jg
loop
xchg
push
or
pusha
ret
movsl
pop
fiaddl
xor
add
ljmp
outsb
in
aad
push
cmp
mov
aam
mov
jno
bound
or
cmp
sub
mov
insl
cld
repnz
pop
xchg
sbb
test
xchg
stos
int3
and
push
daa
loopne
imul
push
orb
mov
inc
jmp
inc
mov
cwtl
mov
or
ret
jmp
mov
int
xor
add
jnp
inc
repnz
ss
jg
lret
sub
pop
add
testb
out
aam
push
sub
or
lock
fldl
inc
rcr
lret
cmp
imul
pop
out
cmp
jns
pop
aam
push
mov
aam
inc
js
stos
in
stc
push
mov
inc
lods
adc
pop
mov
lods
xlat
and
dec
dec
mov
or
cmp
lods
cmc
sbb
jbe
loop
std
lcall
xchg
loop
mov
mov
sbb
or
inc
fildll
jp
fdivrs
mov
cmc
cs
sbb
and
xor
mov
jno
sbb
xor
mov
pop
stos
push
fimull
movsb
popa
mov
jg
mov
sbb
sti
dec
aas
mov
jmp
in
xchg
fs
mov
icebp
lahf
lret
pop
dec
push
pop
fmuls
sahf
imul
xchg
mov
in
inc
movsl
lahf
stos
inc
mov
or
mov
pop
enter
loopne
popf
nop
ret
mov
aad
mov
ffreep
lret
sub
jp
xchg
sahf
das
mov
ljmp
add
aam
in
gs
js
push
xchg
movsl
test
mov
neg
mov
pop
icebp
cmp
jbe
movsl
push
loope
lahf
jl
push
adc
ret
jmp
pop
mov
cld
in
xor
mov
aaa
jb
push
mov
and
cmp
mov
pop
jae
add
pop
mov
js,pt
mov
fucomip
and
ja
fadd
call
jnp
imul
stos
stos
pop
subb
paddsb
add
xchg
lods
movsb
outsl
imul
out
test
insl
call
mov
xor
cmpsb
xor
sarl
popf
jmp
lea
imul
adc
popf
sub
push
sbb
loope
cmpsb
jo
pop
cmp
or
adc
lea
jmp
aad
mov
pop
outsb
pop
jns
xchg
lret
jnp
hlt
fcmovne
bound
cmpsl
test
movsl
add
enter
stos
mov
dec
cltd
xorl
mov
add
mov
fmuls
push
ds
adc
xchg
fsubs
or
sbbl
mov
inc
sub
push
cmp
mov
insb
push
push
fwait
cli
xchg
and
adc
rol
cmp
fistpl
xchg
in
test
push
sbb
cld
pop
in
test
cmp
sub
pop
stc
dec
leave
jl
insb
sub
lods
imul
pop
in
test
cmp
sub
pop
stc
dec
leave
jl
insb
sub
lods
imul
pop
in
test
cmp
sub
pop
std
dec
leave
pop
call
mov
mov
jns
leave
jl
in
push
jecxz
cmpsb
and
pop
sahf
aam
mov
andl
shrl
push
cmp
jae
mov
push
sarl
sub
clc
mov
mov
inc
sub
bound
jae
add
js
dec
xor
ret
test
mov
addl
inc
sub
arpl
jae
add
js
dec
xor
test
fwait
cmp
stc
loopne
cli
scas
andl
jno
pusha
and
mov
jge
ret
add
inc
dec
ror
in
inc
mov
call
push
jnp
mov
push
xor
test
fsubrl
mov
call
dec
mov
sub
insb
bound
push
pop
pusha
cltd
clc
test
inc
or
mov
or
cmp
dec
mulb
insl
push
sbb
and
jns
and
cmpsb
rcll
inc
loop
sbb
call
mov
push
jmp
sbb
and
xor
push
cmpsb
hlt
mov
repz
sarb
dec
es
sbb
pop
jecxz
cmp
add
imul
xchg
stos
mov
sub
arpl
jae
add
js
dec
xor
test
mov
sub
clc
mov
sub
jns
or
adc
or
shll
mov
xchg
in
imull
xchg
sbb
adc
insl
cmp
data16
xor
and
xchg
jecxz
rcrl
loopne
repz
lods
mov
insb
jge
add
jge
inc
adc
dec
xor
test
mov
sub
clc
mov
sub
arpl
jae
add
js
dec
xor
test
mov
sub
clc
mov
sub
out
in
fidivl
sbb
aam
mov
pusha
enter
les
jb
mov
mov
test
shl
iret
lret
sarl
in
test
pop
les
jne
push
bound
loop
mov
cltd
flds
xchg
aaa
jo
movsl
inc
xlat
sub
shrl
sbb
mov
inc
xchg
or
dec
mov
jle
jbe
jne
sbb
xlat
cmc
mov
pop
sbb
shlb
jne
in
inc
xor
shrb
sub
outsl
ljmp
xchg
mov
popa
test
or
adc
sti
nop
shll
outsb
mov
fdivr
test
mov
pop
scas
sbb
mov
scas
lods
in
push
sub
test
jg
pop
int3
jle
push
arpl
cmc
dec
pshufw
insl
rorl
jmp
push
fbstp
iret
pop
data16
fstl
cli
gs
popf
xor
xor
faddl
ljmp
cmp
clc
sti
loopne
popa
jmp
out
sahf
pop
popa
xchg
int3
jno
test
jne
stos
jbe
xchg
inc
push
test
add
fs
popf
inc
cmp
test
stc
int3
sbb
scas
inc
push
rcll
stos
jge
loopne
rcrl
xorb
ds
sub
rolb
fs
mov
lret
sub
push
push
inc
and
jp
pop
hlt
add
add
push
repnz
cmpb
fdivs
pop
xchg
imul
push
and
mov
adcb
cwtl
mov
roll
jmp
mov
std
push
fxch
sub
sub
xor
mov
cs
icebp
jp
xchg
xchg
push
mov
inc
cmc
pop
mov
inc
arpl
aaa
jl
jb
add
loope,pn
das
loopne
and
push
cltd
in
jle
cmpsl
add
jae
cmp
lea
push
pusha
mov
cmp
mov
jge
jge
jp
enter
test
stos
cmpb
fcom
jne
mov
push
dec
popa
add
add
cmpsb
or
aam
sub
xor
mov
and
pop
cwtl
adc
into
fwait
adc
jbe
inc
fisubrs
in
push
cmc
or
push
mov
cmp
scas
inc
mov
dec
adc
sbb
mov
xor
enter
sub
lret
insl
out
jle
mov
call
cmp
inc
into
push
sub
stos
inc
fildl
call
sub
test
mov
cmp
ret
mov
nop
pop
add
fistpl
xchg
sbb
and
jp
gs
stos
dec
fsts
add
push
dec
or
mov
lcall
testl
push
jmp
jns
testl
mov
cmp
bound
stc
and
push
xchg
daa
or
gs
xor
test
add
add
sbb
mov
mov
repz
aad
push
ds
inc
or
sub
sbb
mov
lcall
sub
or
cmp
or
cmc
pop
fwait
sbb
dec
push
jle
jae
cmp
icebp
leave
lds
lods
push
sti
xor
iret
xchg
jecxz
movsl
jae
inc
pop
aad
cmp
mov
push
aad
mov
sbbl
mov
repnz
pusha
jl
faddl
fcoml
jno
popa
dec
xchg
addr16
mov
scas
test
dec
xchg
inc
int
adc
sbbb
jge,pt
popa
jmp
adc
sahf
xchg
sbb
shl
or
in
mov
xor
jns
mov
aas
rcl
sbb
and
cmp
data16
xor
sub
pop
mov
pop
outsb
loopne
scas
sbb
xchg
xor
pusha
mov
mov
jle
fwait
push
loope
popf
loopne
sbb
rclb
xchg
jge
cwtl
sti
pop
xor
dec
mov
cmpsb
pop
push
jns
rclb
imul
cli
mov
fwait
xor
mov
out
mov
mov
inc
stos
lods
shrb
rcr
add
xor
lods
lods
pop
shlb
aad
cwtl
lret
or
nop
or
ret
into
mov
xchg
mov
sub
cmc
push
stos
push
test
xchg
fs
loopne
insb
out
mov
and
xchg
mov
in
cmp
and
cmp
fwait
adc
adc
cltd
adc
dec
push
dec
imul
push
adc
sbb
jne
aad
mov
cmpsb
in
add
xchg
jge
inc
xchg
stc
or
mov
les
adc
adc
xchg
xchg
cltd
scas
mov
jp
dec
cmc
psubusb
bound
cld
ljmp
jb
fcompl
fcomps
lds
fists
les
icebp
fists
inc
in
xor
mov
faddl
mov
adc
popf
mov
xor
test
inc
fs
jle
and
add
lea
lahf
and
les
addr16
imul
fists
fisttps
mov
in
sbb
mov
add
mov
sbb
adcl
ljmp
in
mov
mov
push
add
ljmp
inc
add
and
or
iret
imul
adc
pop
out
les
sub
add
roll
filds
lret
aaa
xor
xchg
xchg
adc
out
loope
jnp
jb
bound
mov
dec
mov
xchg
dec
push
push
ret
cmpsl
adc
test
xor
jmp
sahf
xor
data16
add
enter
sbb
mov
mov
mov
cld
mov
and
iret
imul
lds
inc
std
push
pop
or
mov
add
cmpsb
in
xor
dec
and
sub
inc
push
adc
or
mov
ss
outsl
into
or
enter
daa
mov
mov
lods
data16
leave
fadd
movsb
inc
mov
inc
enter
jno
pcmpeqw
add
movsl
test
cmp
inc
sti
or
pop
cs
inc
in
sub
adc
sbbl
lds
mov
and
fdivp
push
sbb
xor
add
mov
push
insb
fisubrs
inc
mov
or
adc
insb
scas
loop
gs
loop
out
mov
pop
sub
addl
dec
rcrl
shrb
pushf
cmp
arpl
cmp
and
scas
add
gs
fs
jns
mov
fcomps
repnz
jp
push
and
int
cmp
ret
pusha
inc
push
cmp
imul
xchg
jmp
or
and
loop
and
pop
scas
scas
lods
jnp
lret
stc
add
incb
rcl
pop
subl
hlt
dec
push
push
arpl
sub
aas
and
sub
notb
ficomps
sbb
xchg
ret
ja
leave
fiadds
mov
rol
push
ret
in
inc
dec
frstor
lock
add
jns
xor
push
dec
push
inc
cmc
lock
aam
add
cwtl
pop
movsb
mov
mov
mov
cmpb
push
inc
xchg
mov
mov
adc
out
into
lret
divl
scas
jg
mov
orb
insl
pop
mov
pop
mov
repz
jge
pop
lret
cli
inc
or
dec
sbb
xor
test
mov
push
stos
dec
sbb
xchg
lcall
imul
bound
test
std
repz
bound
inc
rclb
dec
cmpsb
sahf
add
leave
dec
or
jnp
pop
sti
into
int
stc
enter
jl
push
mov
or
mov
lret
lret
or
cmp
sub
jmp
mov
adc
in
mov
and
add
and
repz
and
xchg
add
lock
out
mov
adc
dec
or
pop
dec
into
lahf
shlb
xchg
inc
in
pop
adc
or
in
jp
cmp
in
popa
das
je
pop
xor
cmpsl
push
int
stos
push
mov
push
aad
mov
sbb
sbb
hlt
xchg
adc
and
call
xchg
inc
outsl
mov
cmp
sub
es
out
stos
mov
stos
sti
mov
inc
lea
xchg
cli
das
std
pushf
and
cmp
mov
adc
test
jmp
lods
xchg
cmpsb
mov
call
mov
in
inc
rcl
imul
and
and
int3
test
scas
sub
hlt
cmpsl
pop
shrb
sbb
notrack
sahf
lock
push
and
lods
sub
adc
stos
rorb
xchg
xor
dec
inc
mov
push
mov
adc
cwtl
aas
and
jns
ret
fidivl
je
jecxz
pusha
pop
push
jns
das
daa
adc
pushf
cmp
sub
and
cmp
xor
fdivrl
jnp
pop
push
das
adc
push
jp
in
mov
inc
jp
lcall
push
jb
xchg
mov
cs
xor
sub
movb
repz
xchg
out
dec
xor
gs
and
mov
mov
sub
in
xor
jle
or
test
pop
sysenter
adc
pop
mov
add
ljmp
mov
push
cmp
fstpt
lods
mov
cmp
push
mov
insl
outsb
xor
add
push
and
xor
jmp
jno
sbb
outsl
sbb
ficoml
and
mov
cmp
sub
xchg
push
ret
nop
jge
dec
insb
call
ds
int
jl
or
sub
adc
imul
add
orl
mov
call
dec
das
mov
lods
add
mov
xchg
push
mov
lds
xchg
xchg
push
xor
adc
pop
in
enter
add
movl
add
xor
aas
mov
imul
cmpsb
dec
push
or
movsb
out
push
scas
mov
mov
push
iret
cmc
rcrb
xchg
jg
cwtl
pop
ss
jp
jmp
xchg
adcl
pop
dec
dec
imul
std
jae
cld
sub
jmp
les
es
push
nop
imul
push
lret
or
mov
outsl
mov
mov
inc
jmp
mov
pop
arpl
xor
xchg
jle
scas
jmp
lretw
movsl
into
adc
sarb
sub
sbb
push
sti
loopne
ss
dec
sub
and
js
push
lods
call
cld
dec
jns
rcrb
sbb
xor
rcrl
mov
xor
or
repz
fwait
addl
xchg
lahf
outsb
xchg
jmp
mov
push
cmp
xor
pop
mov
xchg
jns
rcl
sub
push
ljmp
push
in
sub
div
in
mov
adc
push
iret
cmp
lret
and
movb
lods
push
jb
cs
insb
test
incb
rcrb
inc
pop
mov
mov
dec
xchg
or
xchg
xchg
push
repz
jae
pop
mov
cmp
xor
scas
dec
push
movsb
push
mov
xchg
push
lret
add
outsb
push
inc
fwait
lock
or
inc
mov
lret
push
xchg
dec
or
lods
subb
mov
jle
sbb
xor
and
jge
out
inc
jl
aaa
dec
aam
sub
adc
push
clc
mov
leave
stos
aaa
sarl
lock
sub
cmpsl
daa
frstor
xor
or
aaa
fidivs
xchg
pop
pop
addl
mov
dec
xchg
add
cmp
shlb
idiv
mov
jae
std
loopne
or
dec
push
pop
lahf
adc
sbb
out
pop
pop
add
push
fisttps
jmp
adc
in
cmp
in
cs
testb
adc
sbb
jae
pop
nop
add
ret
cmp
mov
notb
sti
repz
std
nop
adc
les
popa
leave
sbb
ficoml
in
sbb
dec
cwtl
cmp
pusha
leave
inc
icebp
enter
pop
push
lock
jg
mov
cmc
adc
adc
push
adc
cmpsl
mov
lock
lret
inc
repz
adc
leave
xchg
ljmp
mov
xchg
cld
cmp
push
imul
sbb
mov
bound
add
add
pop
int3
stos
data16
orl
movsb
lods
or
jnp
aas
inc
ds
fs
cmp
sbb
lods
add
test
sarb
sub
daa
adc
call
xor
scas
insl
in
mov
jae
add
adc
pop
add
push
jle
mov
filds
jb
push
mov
int3
pushf
xchg
sbbb
push
les
and
and
mov
lret
jecxz
xor
jecxz
out
push
xchg
aam
call
sub
cwtl
sbb
addr16
mov
hlt
enter
mov
jne
mov
icebp
andb
ret
mov
adc
xor
shll
fcomip
mov
mov
out
call
ss
xor
ret
lret
aam
out
mov
dec
push
lock
mov
cld
dec
jns
mov
adc
inc
ja
fcmovnbe
jmp
inc
push
in
in
into
popl
dec
xchg
dec
out
fucomi
loope
mov
adc
adc
ja
push
jge
mov
jb
mov
xchg
out
and
stc
out
cltd
cmp
push
and
push
push
lds
test
sbb
push
sti
jbe
shl
jp
or
lock
push
push
ja
gs
mov
jecxz
insl
xor
shr
int
bound
inc
dec
lcall
cli
add
and
aas
inc
test
scas
fsubs
jp
xchg
scas
xchg
xor
adc
in
stc
fldt
fucomip
sbb
mov
aad
nop
mov
mov
pop
roll
add
jb
push
mov
dec
and
inc
cmpsl
add
adc
dec
mov
mov
and
movsb
inc
shll
shrb
dec
add
and
mov
xchg
or
rcr
testl
out
mov
arpl
push
fadd
pop
jbe
inc
pop
fwait
dec
sti
insl
shlb
lcall
iret
pop
ret
add
mov
loop
xor
mov
jecxz
fmul
dec
cs
cmp
push
cmc
pop
xlat
repnz
xchg
jno
out
pop
hlt
lcall
push
popa
jl
dec
cmp
cmpsl
push
das
sbb
xchg
jbe
xor
out
mov
xor
push
js
mov
movsb
clc
jmp
push
pop
in
push
out
mov
and
add
inc
jle
push
roll
inc
ja
or
ret
lret
test
inc
xchg
mov
pop
mov
ljmp
hlt
clc
fwait
inc
sbb
dec
je
pop
sbb
adc
mov
or
dec
cmp
and
test
outsl
mov
fwait
inc
ret
dec
sbb
aad
shr
dec
push
nop
addl
mov
and
insl
das
inc
adc
sbb
dec
mov
pop
fwait
mov
gs
or
mull
je
or
aam
js
and
mov
add
jg
cmp
aam
ljmp
ficompl
fs
not
daa
ljmp
fcmovne
inc
push
cmpsb
leave
xchg
fistpll
adc
outsl
pop
inc
jo
imul
and
arpl
sbb
stos
lret
iret
and
pop
out
mov
adc
mov
hlt
jne
mov
test
mov
and
out
sub
dec
je
push
jmp
inc
or
cmc
xchg
xor
cmp
clc
mov
mov
pop
enter
div
out
push
insb
jne
inc
movsl
in
xchg
add
inc
cld
aad
cwtl
aam
add
movsl
mov
mulb
pop
push
jg
xchg
scas
xchg
xor
xor
lahf
pop
sbb
mov
mov
scas
mov
in
test
int
cmp
daa
test
cmp
and
fdivl
fidivrs
cmp
rol
mov
fnstenv
scas
icebp
bound
movsl
pop
or
cs
test
jl
mov
mov
int
or
jb
scas
fst
cld
aad
and
imul
mov
jns
xchg
test
arpl
sbb
inc
arpl
mov
sub
inc
and
mov
mov
add
je
fdivrl
adc
es
and
lcall
inc
mov
sbb
das
mov
clc
lcall
adc
std
notl
mov
pop
rclb
mov
mov
sub
sahf
and
out
push
in
adc
addr16
jne
mov
push
fs
xor
sbb
adc
push
and
call
leave
sbb
xor
inc
ljmp
cmp
call
jbe
cmp
loope
int3
mov
cmc
inc
out
outsb
mov
and
pop
fxch
jl
adc
clc
jb
mov
inc
mov
xor
cli
inc
iret
jle
fiaddl
fdivs
ret
cmp
pop
pop
inc
inc
pop
add
push
mov
fimull
push
js
mov
lret
je
push
xchg
jo
xchg
xchg
jle
enter
lret
mov
mov
push
add
push
test
push
xor
imul
nop
jae
xchg
mov
mov
mov
dec
sahf
mov
iret
mov
push
dec
mov
les
dec
mov
pop
add
cmp
or
sub
jnp
out
add
subl
mov
cmc
cmpb
xor
cmc
jg
xchg
and
and
outsl
sbb
mov
ljmp
in
sub
cmp
jl
add
fnstsw
and
ss
sarb
dec
or
push
inc
fistpl
mov
aas
rolb
push
mov
xchg
imul
fisttpll
outsl
dec
cmp
mov
orb
add
cmp
pusha
or
arpl
jecxz
sub
clc
pop
shlb
mov
outsl
xchg
xchg
shrl
push
iret
jmp
ja
mov
shrb
xchg
inc
jne
mov
mov
pusha
mov
icebp
dec
ret
mov
cmc
push
cltd
jae
inc
mov
scas
loop
lahf
inc
out
jmp
addr16
push
jp
sbb
push
popf
cmpb
aaa
pop
cmp
das
arpl
cli
aaa
lods
jns
or
xor
fisubrs
push
imul
test
jle
sti
testl
arpl
cmp
sub
mov
adc
out
cli
ret
push
dec
fimull
inc
dec
repnz
pusha
cmp
mov
es
pop
pop
push
test
sbb
fists
or
adc
push
xor
in
sub
push
lahf
stos
scas
sub
lods
or
int3
jns
rol
fisubrl
imul
sbb
popa
mov
mov
cmc
faddl
lcall
lods
dec
fwait
sub
mov
shll
ret
cmpsb
push
cs
inc
outsl
jb
fsubr
jae
into
pusha
sub
xchg
cmpsb
in
adc
roll
fsubrl
inc
leave
jb
fdivrl
or
xchg
jae
or
outsl
adc
or
dec
les
mov
dec
addr16
inc
std
push
cwtl
movsl
adcb
cmc
jns
scas
into
ret
jb
jg
or
sbb
sahf
xchg
aas
mov
mov
leave
mov
fldcw
mov
out
int
cmc
test
cmp
mov
sub
mov
aam
ljmp
lea
stos
inc
jmp
lds
div
hlt
pop
iret
insb
mov
cmc
sbb
sbb
notb
jp
imul
rcr
loop
cmp
scas
mov
jmp
cmpsl
or
push
sbb
call
fidivrl
fmuls
or
insl
pop
insb
ret
data16
inc
jp
jl
in
xchg
and
lods
jo
loope
pop
inc
pop
mov
xchg
test
movsl
and
and
rcrb
lea
addr16
lock
ret
mov
xor
out
pop
jl
mov
add
jnp
movsb
xor
jl
inc
mov
adc
ss
xor
dec
jns
xor
jle
sub
test
jae
loope
rcr
push
out
femms
lcall
repnz
stos
jae
push
or
cwtl
adc
aad
loopne
fistpll
lock
pusha
ja
pop
push
sti
ja
lock
sbb
dec
loop
dec
into
adc
push
cmp
cmp
add
mov
cwtl
hlt
sarl
jmp
mov
mov
adc
jmp
call
mov
mov
or
aam
xchg
push
pop
xor
and
icebp
or
fmulp
cmp
or
add
js
dec
xor
test
mov
sub
clc
mov
sub
arpl
jae
add
js
dec
xor
test
mov
sub
clc
mov
sub
arpl
jae
add
js
dec
xor
test
mov
sub
clc
mov
sub
bound
jae
add
js
dec
xor
test
adc
repz
hlt
pusha
sbb
pop
aaa
dec
daa
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
push
sub
add
sub
mov
lods
ss
add
or
push
add
or
add
add
loopne
loopne
out
add
mov
pop
add
add
add
add
add
add
add
add
add
add
aam
roll
and
pop
add
add
add
add
add
test
aad
inc
add
stos
add
add
mov
add
add
jbe
push
add
add
add
add
add
add
add
add
mov
add
add
cld
add
add
add
add
lret
add
xor
sub
mov
add
add
add
add
add
add
add
stos
add
jmp
add
add
or
add
add
add
add
add
add
add
add
add
add
add
popa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
loopne
das
add
roll
add
leave
add
add
add
fiaddl
pop
add
jo
adc
roll
add
add
in
add
xchg
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
mov
sbb
add
add
add
add
add
add
add
add
add
popl
and
add
add
out
add
add
add
add
add
add
pop
add
add
add
popa
add
stos
add
mov
ja
test
loopne
stos
add
add
daa
add
sbb
call
add
add
sbb
les
bound
je
add
inc
add
add
add
add
add
add
add
test
pop
add
scas
add
stos
add
add
add
add
add
add
ss
add
add
add
add
add
roll
add
or
inc
add
add
and
adc
or
add
add
add
add
add
mov
add
add
add
add
add
add
addb
add
add
add
roll
add
add
add
rolb
mov
mov
xor
aam
mov
out
add
add
iret
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
int
or
and
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
int3
add
sub
ljmp
add
add
add
push
add
add
add
add
add
add
add
dec
mov
mov
mov
push
outsb
in
fisubl
jge
push
ret
sub
cmp
xchg
rcr
pop
xor
add
inc
leave
imull
aad
or
jae
dec
cmp
daa
sbb
aad
mov
in
add
pop
jns
clc
fisttps
and
sbb
lret
xor
adc
or
popl
inc
vmwrite
or
hlt
mov
inc
or
pop
or
call
inc
movsl
inc
adc
mov
xor
dec
stos
add
xchg
mov
mov
ds
mov
adc
ficoml
cmp
mov
xlat
sub
push
dec
add
lock
imul
insb
cmc
fdivrp
cmp
add
ret
fildl
shrb
loope
lods
mov
jl
push
xor
pop
fsubrs
fcoms
popf
mov
and
leave
mov
outsl
cltd
sbb
mov
aas
in
mov
ljmp
or
add
dec
xchg
jle
ljmp
in
jns
lds
xor
mov
ret
jno
movsl
xchg
cmp
push
inc
out
adc
jp
mov
push
popa
mov
mov
sub
shlb
in
adc
cmc
sbb
or
repz
in
in
in
clc
out
jecxz
mov
xchg
imul
fs
push
fcomps
push
mov
cwtl
cmpsl
push
fsubrl
push
mov
mov
sub
stc
in
pop
int
jno
std
aam
dec
clc
lods
dec
jne
es
nop
xchg
loop
push
or
or
mov
mov
jge
jbe
iret
push
cmc
mov
mov
arpl
xlat
lods
pop
insl
jl
mov
cmp
repnz
shll
ficoms
adc
push
fimuls
lods
data16
inc
or
pop
pop
nop
cmc
insb
hlt
xchg
lret
hlt
mov
adc
imul
push
mov
jbe
fidivrs
mov
cmp
ja
inc
mov
rcrl
shlb
lahf
cs
mov
into
push
mov
jns
push
and
lahf
fs
gs
xor
data16
and
and
imul
pop
inc
out
jp
push
arpl
std
insl
iret
lcall
out
in
dec
jb
and
xor
mov
popf
lods
iret
mov
es
cli
test
sub
shll
mov
xchg
cmpsl
pop
add
imul
mov
mov
xor
pop
push
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
