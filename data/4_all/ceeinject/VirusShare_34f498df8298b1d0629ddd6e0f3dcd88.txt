adc
decl
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
imul
gs
xor
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
push
push
push
push
call
push
lea
push
push
call
add
leave
ret
test
xchg
push
movsl
cs
lret
add
jle
rclb
inc
into
push
fisubs
jne
test
xchg
push
movsl
cs
lds
pop
in
cmc
push
add
scas
xor
fisubs
jne
test
xchg
push
movsl
cs
lds
pop
in
cmc
jle
mov
fildll
sbbb
int3
jge
push
inc
test
pop
outsb
in
cmc
insl
iret
jmp
addr16
into
mov
call
pop
sub
out
dec
push
fucomi
add
cmp
mov
inc
pop
fs
mov
insl
inc
cmp
ficomps
fdivrs
pop
out
in
add
inc
rorb
roll
xor
pop
sbb
popa
test
adc
into
cmp
jp
loope
iret
jle
mov
in
hlt
pop
adc
push
mov
fiadds
mov
jle
dec
adc
sbb
cmp
jg
fstl
stos
jns
push
lea
sbb
push
movsl
cs
lds
pop
in
cmc
jle
mov
mov
gs
jne
ret
or
pop
shrb
ds
sub
inc
lret
pop
lret
cmp
and
out
cmc
dec
sarb
andl
adc
pop
cmc
sbb
pop
out
std
jo
and
jne
in
dec
icebp
push
int3
pop
mov
lds
pop
in
cmc
jle
mov
mov
gs
jne
test
xchg
push
movsl
cs
lds
pop
in
cmc
jle
mov
mov
gs
jne
test
xor
ret
xchg
cld
pop
cmp
pop
loope
cmp
bound
mov
addr16
adc
pop
movsb
push
in
pusha
xor
sub
sti
jno
cld
das
xchg
xor
shr
mov
pop
push
sub
sahf
imul
bnd
mov
aas
nop
mov
fs
jl
dec
pop
fistps
cmpsl
outsb
or
adc
push
jle
les
mov
test
popa
negl
sbb
jns
cmpsb
dec
add
aas
sub
pop
inc
sbb
cld
lcall
scas
lock
push
call
lock
and
adcb
loop
icebp
xchg
pop
je
stos
mov
adc
pandn
xor
int3
mov
int3
mov
shl
mov
imul
idiv
push
push
shlb
inc
std
roll
dec
inc
das
ljmp
lods
gs
mov
aas
bound
inc
test
dec
cmp
pop
or
push
adc
push
shlb
ret
aam
mov
stc
add
mov
ds
sub
inc
subl
testl
sarb
xchg
mov
out
dec
sbb
xorb
inc
enter
add
dec
les
fwait
xlat
fdivrl
flds
stos
sbb
push
jmp
in
add
mov
fnstenv
fst
add
jp
add
daa
testb
adc
lcall
cltd
push
push
and
cwtl
in
sub
in
fadd
lret
stos
es
jbe
add
jnp
icebp
and
inc
fsubrp
sbb
out
xor
cmc
pop
jmp
sbb
ret
ja
shll
orl
in
mov
inc
pop
jno
jo
in
ja
jne
and
sbb
push
test
push
xchg
cmpsb
movl
sub
shlb
mov
shll
and
in
outsl
and
xchg
dec
xchg
jb
in
ds
aas
sub
xor
xlat
dec
mov
push
sti
mov
je
inc
cmp
cmpsl
or
dec
jge
inc
and
cmp
adc
mov
outsb
rep
mov
adc
shll
mov
out
and
fwait
add
push
pop
sub
xor
pop
and
out
push
dec
enter
in
shrl
hlt
scas
mov
dec
ret
jl
dec
sbb
mov
jle
jmp
inc
pop
dec
xlat
ds
test
lods
xor
xchg
adc
adc
pop
or
xchg
popa
push
insb
push
ret
lret
mov
pusha
pop
je
add
xchg
lahf
stos
adc
fwait
ret
inc
pop
inc
ja
mov
fcompl
fisttpl
pop
imul
ds
adc
and
outsl
pop
xchg
ficoml
jmp
push
jbe
fwait
push
das
pop
aam
sub
xor
ds
sbb
stc
and
push
in
mov
cmp
sbb
fisubrs
sbb
imulb
sub
jnp
mov
pop
inc
and
aaa
dec
xor
pop
repnz
xchg
movsb
jmp
push
inc
adc
xor
shll
sub
pop
mov
adc
mov
adc
adc
cmp
and
xor
xchg
jne
cld
xlat
dec
out
pushf
adc
pop
out
pop
out
int3
es
push
fcompl
mov
jbe
popa
pop
fiaddl
divb
or
pop
out
dec
cmp
sub
xchg
jnp
ss
ret
cs
xlat
outsl
bswap
sbb
idiv
int3
out
and
add
mov
in
out
push
shrb
push
add
scas
cli
lods
test
and
push
lds
pop
adc
clc
pop
lock
mov
add
in
sbb
int3
cmpl
jg
push
cmp
inc
sbb
out
cltd
inc
mov
repnz
repz
push
out
pop
imul
rcr
jb
cmp
ljmp
scas
ds
sub
hlt
leave
mov
jnp
push
sub
bound
iret
xchg
xchg
dec
out
adc
ljmp
ds
xor
mov
sbb
dec
scas
stos
pop
cli
popf
ljmp
jmp
xor
pop
jnp
push
pop
adc
xchg
pop
jo
push
shr
sub
std
dec
lcall
lods
xor
mov
push
sub
in
jae
jb
divb
dec
mov
sub
out
sub
movsl
mov
pop
jg
mov
stos
mov
sbb
xor
cmp
mov
pusha
cltd
loope
mov
jne
cmc
adc
xor
or
fisttpl
in
xor
sarl
into
cwtl
mov
call
mov
bswap
mov
inc
mov
out
test
jmp
push
xor
les
cmp
adc
and
pop
ss
pop
cld
inc
sbb
fistpll
mov
xor
cmp
or
dec
jae
xchg
je
enter
adc
and
in
lods
movsb
lret
arpl
add
rorl
adc
mov
scas
adc
call
sub
mov
in
cltd
sbb
fdiv
sbb
dec
cmp
inc
cmc
ficompl
dec
shlb
add
push
sbb
int3
ljmp
mov
loope
lea
adc
add
sub
mov
mull
xor
sarl
jle
ds
jae
xor
push
xchg
dec
data16
pushl
jno
dec
lods
stc
xchg
lock
sbb
adc
aas
lock
pop
cmc
cmp
xchg
ret
sub
lret
shlb
push
dec
stos
loope
inc
shlb
bound
pop
push
call
scas
loope
subl
inc
sbb
cwtl
mov
jae
dec
loop
push
scas
sarb
add
roll
js
add
push
pop
xchg
mov
mov
rolb
jecxz
sbb
mov
jno
pushf
or
dec
xchg
inc
js
shll
jns
fsubl
inc
push
aaa
push
sahf
sub
test
push
fs
out
out
shlb
adc
insb
cmovb
jbe
mov
fsubrl
cmp
cwtl
ja
mov
out
aas
pxor
and
fistl
xchg
and
push
sbb
xlat
stos
sbb
fistpl
inc
mov
test
in
test
jae
nop
adc
lret
push
inc
test
add
adc
xchg
lcall
movl
imul
push
cwtl
int
xchg
pop
pop
repz
cmpsb
das
ret
int3
mov
jb
or
sub
mov
enter
or
stos
pop
jne
insl
fisubs
cli
out
add
xor
mov
movsl
sbb
jge
pop
imul
push
lret
ja
or
jp
mov
pop
scas
hlt
mov
push
and
out
ret
loop
adc
leave
stos
pop
roll
cmp
stc
mov
stc
scas
adc
inc
ja
xchg
rcr
xor
jo
add
jb
add
popa
and
inc
scas
dec
push
fstps
jne
lcall
add
and
pop
lahf
jle
stos
fnstcw
cmpsb
add
adc
ret
bound
inc
and
fisubrs
mov
fwait
xchg
rolb
data16
xor
xchg
rcrb
test
cld
jns
sbb
jo
shll
xchg
out
and
in
cmp
mov
sbb
mov
insb
push
xchg
add
mov
adc
and
imul
or
test
pop
mov
pop
daa
sbb
adc
ja
and
punpckhdq
sub
aam
mov
push
sti
popa
sbb
inc
pop
aam
mov
cld
cltd
sbb
cwtl
mov
ds
or
dec
data16
sbb
shr
cmp
mov
push
cltd
cli
sahf
jns
add
jb
shrb
dec
loopne
in
call
sbb
or
js
movsb
cli
adc
add
pushf
das
mov
or
push
dec
ss
daa
pushf
mov
sub
add
push
loopne
sub
push
pop
repz
inc
ret
pop
js
popf
and
jmp
mov
repnz
fildll
mov
mov
mov
sub
mov
fistpl
push
outsb
xor
les
add
mov
sub
xor
inc
test
stos
pop
mov
fucomp
push
push
inc
and
ss
cmp
shll
lret
jecxz
push
sbb
sbb
mov
sbb
in
out
jo
xchg
aad
cmp
and
mov
mov
mov
push
flds
mov
lret
fidivrl
mov
jge
pop
push
mov
lods
dec
adc
sub
dec
mov
ss
idivb
shlb
lret
dec
sti
adc
adc
or
jg
or
xor
ljmp
daa
sbb
sub
jl
jne
int
mov
add
cmp
adc
push
gs
aas
lods
sbb
and
jbe
cmpsb
mov
pop
inc
hlt
ljmp
inc
jmp
push
sub
stc
sbb
adc
or
cwtl
or
loopne
loope
es
ljmp
cli
int
jnp
xor
or
fidivrl
fisubs
ds
push
lods
imul
movl
sbb
cmpsb
add
nop
inc
cltd
push
clc
into
dec
hlt
iret
into
imull
movsl
lods
dec
test
mov
push
add
jmp
icebp
xor
cmp
mov
outsl
out
jno
sbb
scas
cmp
cmp
dec
je
xorl
cmp
push
ss
mov
jnp
push
mov
sbb
cs
in
bound
data16
lods
or
sbb
or
adc
or
mov
add
mov
push
xchg
inc
mov
xor
orl
sbb
push
je
sarb
insl
movsl
sub
mov
aaa
shrl
in
outsb
loope
mov
lods
lea
add
lret
jge
jecxz
xor
scas
sub
jmp
ss
les
mov
les
cmpsb
outsl
adc
adc
mov
and
mov
jge
shll
xchg
pop
and
cld
das
cmp
scas
lcall
mov
push
js
scas
int
pop
aas
adc
jle
sti
int3
scas
gs
jnp
fisubrs
inc
test
dec
xor
arpl
mov
gs
or
xchg
dec
mov
lods
mov
push
sub
ss
out
sbb
lock
pop
imul
loope
int3
xchg
inc
add
stos
or
jnp
sahf
adcl
lahf
ljmp
dec
jmp
or
jb
xor
jl
add
mov
negb
insb
rolb
inc
lret
sbb
ss
sbb
jge
dec
aas
push
leave
mov
loop
xor
jle
mov
mov
iret
pop
or
sbb
xor
test
data16
dec
subl
insl
sbb
or
xchg
jae
les
push
ljmp
or
mov
cwtl
sarw
lea
push
add
push
push
repnz
std
mov
scas
jge
aas
movsl
add
xor
mov
push
lret
mov
xchg
leave
jg
leave
pop
rorl
clc
xor
cld
shrb
int
sbb
ja
or
mov
sbbl
leave
mov
repz
jl
data16
jg
cmp
adc
adc
push
push
or
cmpsl
test
xchg
inc
pcmpgtw
arpl
cmp
dec
fists
popa
aas
sti
lods
sbb
or
or
in
mov
pop
lcall
icebp
xchg
mov
lahf
jp
lret
fwait
pusha
or
es
inc
into
or
mov
xor
lahf
lret
push
sub
mov
loop
and
stc
xor
hlt
push
jmp
mov
hlt
pop
daa
or
add
xchg
jno
jb
adc
pop
mov
sub
hlt
add
xchg
xlat
loop
sbb
dec
flds
sub
cmp
int
mov
inc
shrl
mov
addb
pop
jge
cld
sbb
mov
lds
retw
pusha
bswap
adc
cmp
push
cltd
pop
xor
lret
pop
dec
loop
lea
notb
add
sub
lret
out
inc
ret
sub
dec
pop
jp
pushl
ret
jge
hlt
jae
out
xchg
iret
xor
je
imul
in
test
inc
movsl
sbb
mov
sub
xchg
add
out
jmp
xor
test
lea
sbb
adc
mov
addl
or
mov
testl
adc
mov
adc
dec
pop
cld
mov
fbld
cmp
bound
shrb
push
mov
inc
into
lock
leave
js
adc
cmp
inc
mov
mov
dec
adc
xor
lret
rcll
adcb
mov
mov
mov
hlt
dec
lea
inc
repz
mov
daa
mov
mov
out
push
sbb
adc
adc
and
dec
xchg
call
test
fisttpll
push
imul
into
imul
or
add
mov
mov
sahf
fstps
push
ja
insb
cmp
pop
mov
loopne
mov
sarb
test
adc
sbb
and
rol
mov
inc
pop
jnp
pop
mov
stos
cmpsl
or
inc
in
stos
dec
dec
out
fidivs
mov
xchg
pushw
aam
enter
xlat
pop
dec
mov
or
pushf
mov
jne
push
xor
int
test
outsb
pop
pop
arpl
std
paddw
xchg
andb
sbb
outsl
mov
incl
pushf
add
cmp
fildl
stos
push
and
stos
aad
cmpsb
nop
sbbl
pop
push
sti
scas
aad
dec
test
mov
popf
dec
jns
mov
sub
dec
jae
cmp
sub
sbb
lds
mov
vmwrite
test
in
jnp
or
cmp
pop
fucomi
jae
stos
jbe
mov
inc
mov
cmp
int3
cmpsl
mov
int3
inc
ffreep
xor
pop
push
jae
jle
adc
gs
cmp
sbb
dec
lret
adc
lret
pop
mov
or
sub
addr16
sub
or
mov
loope
rorl
loope
fsubrs
or
dec
jl
iret
jne
xor
sub
orb
in
pushl
sbb
sbb
insl
cmp
mov
sub
dec
inc
mov
out
mov
ss
ds
and
inc
addr16
cltd
mov
scas
mov
scas
cmp
loope
mov
int3
push
out
sub
mov
pop
iret
pop
mov
push
vmfunc
mov
aad
std
sahf
jecxz
add
pop
jo
fldl
fs
jg
xor
rcrl
pop
xchg
out
popl
pop
push
jmp
pop
addr16
sub
ljmp
or
add
in
xor
sbb
xchg
fiaddl
icebp
addr16
mov
shr
fadds
jecxz
roll
aad
sub
or
cmp
in
or
sbb
xor
pop
ficomps
out
adc
add
mov
in
je
lret
xchg
cbtw
sbb
fcmovnbe
or
cltd
sti
and
mov
xor
push
add
shlb
cwtl
movb
inc
arpl
lock
inc
mov
and
insl
ds
inc
xor
xchg
pop
loopne
loope
scas
jae
inc
das
inc
cli
jg
loope
xchg
or
push
cmpsl
fucomip
and
in
rcl
shll
and
int3
mov
cs
cmp
inc
sub
in
aam
std
into
test
xchg
pop
mov
adc
xchg
push
jge
mov
adc
dec
shrb
xchg
into
arpl
cmc
leave
push
adc
jne
incb
ret
jge
fxch
jmp
int
loope
out
inc
cmp
cmp
daa
mov
xor
sbbb
fwait
enter
shll
pop
in
jge
in
ja
int3
adc
mov
pop
in
pop
enter
stc
lret
daa
stc
sahf
jge
sub
and
divb
loope
add
or
cmp
push
or
xor
add
lahf
jnp
sub
stc
out
pop
inc
jmp
sti
jge
aam
shl
mov
ljmp
pop
das
js
push
ja
and
mov
add
rorl
cli
sahf
jg
out
sub
adc
cmp
jecxz
icebp
mov
aas
ret
cmp
and
pop
sbb
repz
xchg
ret
mov
add
gs
pop
jl
in
sub
ljmp
sub
push
smsw
fdivl
sub
or
mov
nop
clc
pop
cmp
stos
or
jmp
cmpsb
lods
stos
xor
add
pop
popf
adc
test
sti
mov
xor
test
rorl
or
iret
cmp
dec
and
lahf
das
bound
jne
mov
popf
iret
pop
and
and
mov
or
jge
enter
mov
stos
adcb
mov
gs
iret
fwait
into
or
lods
xchg
rcl
lret
aam
data16
cmpsl
subb
cld
ss
js
push
push
add
cli
sub
or
xor
in
popa
jae
fnstenv
loope
jb
pop
or
xlat
mov
cs
mov
leave
pop
jg
sub
or
mov
and
loopne
jg
bnd
inc
xor
cld
fmul
or
dec
sarb
loopne
pop
faddl
or
xchg
sub
cmc
jmp
negl
cmc
push
aad
mov
aas
cli
lods
jmp
das
ficomps
roll
movsb
inc
hlt
mov
inc
inc
jg
cmp
xor
movsb
loopne
pop
cmc
mov
leave
in
lds
adc
and
movsl
cmp
mov
popf
adc
cmp
add
adcl
mov
pushf
test
jg
inc
push
outsb
into
mov
repz
fcoml
negl
xchg
lret
int
lahf
loop
jns
pop
in
mov
xor
sbb
push
repz
idivl
popf
sbb
js
adcb
jmp
dec
or
inc
push
imul
je
in
sub
rcll
dec
sbb
imul
inc
adc
stos
push
or
mov
adc
cmp
inc
jne
cmp
add
sub
jo
xchg
cmp
out
shrb
xchg
sbb
test
les
daa
cli
shlb
dec
mov
lds
xlat
jmp
jns
mov
call
fs
and
push
rcrb
cmp
xchg
insb
shlb
addr16
shll
mov
jns
sub
gs
jecxz
cwtl
out
cmp
push
dec
divb
pop
cmp
xor
and
fwait
pop
into
stos
add
xlat
roll
xchg
mov
mov
and
lock
shll
incl
movsl
adcl
jno
lcall
and
push
pop
sbb
push
add
sub
mov
cmp
mov
mov
xor
cmpsb
das
xchg
adc
mov
popa
mov
cmp
jo
pop
faddl
pop
dec
hlt
pop
imul
leave
hlt
sbb
dec
jg
ja
and
xor
xor
push
push
push
pusha
xchg
jp
out
popa
jl
dec
data16
sub
dec
xchg
inc
mov
mov
loope
insb
cmp
gs
jnp
or
or
cmpsl
inc
push
xchg
xchg
mov
push
push
sbb
push
rorb
inc
and
lds
add
cmc
sarb
pusha
mov
push
call
mov
cwtl
inc
sub
ret
push
cmp
jae
clc
imul
and
jl
sahf
dec
mov
pop
inc
loopne
in
fisttpl
shlb
stos
imul
dec
sbb
jecxz
cltd
iret
jae
ljmp
push
push
fisttps
push
test
cmp
cmp
dec
jg
dec
push
cwtl
cmp
stc
je
inc
and
xor
cmp
xchg
mov
dec
into
inc
pop
adc
sub
push
lret
cwtl
xchg
imul
loopne
imul
je
rol
cmp
mov
mov
movsb
mov
pop
add
or
mov
daa
arpl
shrl
jmp
sbbl
stos
hlt
pop
ret
ljmp
jbe
jnp
jmp
pop
aaa
mov
imulb
jbe
popf
ret
jl
out
xor
dec
mov
pop
mov
mov
stos
add
aad
call
aas
and
jb
xlat
ret
clc
in
jecxz
in
xor
notl
pop
sbb
mov
notb
or
mov
lds
pop
in
cmc
jle
mov
mov
gs
jne
test
xchg
push
movsl
cs
lds
pop
in
cmc
jle
mov
mov
gs
jne
test
xchg
push
movsl
cs
lds
pop
in
cmc
jle
mov
mov
gs
jne
test
xchg
push
movsl
cs
lds
pop
in
cmc
jle
mov
leave
xor
and
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
mov
cwtl
stc
test
mov
xlat
lcall
jns
dec
cmp
sub
js
js
mov
cwtl
stc
test
mov
mov
sbb
jns
dec
ss
dec
sub
push
jmp
mov
mov
adc
and
dec
jnp
pop
xor
das
sbb
jmp
into
xor
sub
jecxz
mov
cs
loope
orb
loope
mov
loop
fadds
test
aam
sbb
dec
pop
sbb
dec
mov
or
das
pop
ds
mov
pop
xor
cmp
pop
test
mov
dec
sub
mov
mov
popa
enter
test
test
sbbl
sbb
jp
imul
je
add
aaa
test
or
or
js
mov
push
loope
jl
or
pusha
insb
js
out
enter
fidivrl
notl
push
int
sbb
sbb
cmp
fildll
loope
adc
jns
dec
and
sub
jb
js
in
std
sub
int3
lahf
mov
in
clc
jmp
pop
daa
pop
aaa
dec
inc
cmp
jl
test
mov
leave
enter
fcoms
dec
sub
adc
dec
inc
xor
jl
ja
mov
shrb
call
imul
pop
dec
sub
push
jmp
mov
mov
or
jns
dec
cmp
sub
push
jmp
lret
or
cmp
mov
mov
or
and
push
rolb
jbe
out
xchg
xchg
lcall
mov
push
call
nop
and
xor
ret
mov
je
dec
pop
inc
cmp
imul
pop
xchg
mov
subl
lret
les
lods
in
jb
mov
jmp
fistl
pop
xor
ljmp
dec
addr16
cltd
xor
cmpb
cmpsl
aad
inc
push
aas
adc
mov
adc
pop
fbld
push
enter
rorb
sub
and
mov
jae
aas
xor
dec
sub
movsb
test
test
cli
cmpsl
push
fsubrs
sbb
das
pop
mov
pushf
cltd
dec
ret
mov
das
xor
daa
add
add
fmuls
imul
fldcw
adc
out
push
mov
sbb
push
adc
mov
mov
adc
pushf
pop
psubw
dec
inc
adc
inc
pop
fldl
hlt
outsl
adc
inc
mov
xchg
or
popf
popf
loopne
sbb
inc
in
mov
xor
mov
push
sbb
out
cmp
xchg
mov
out
xchg
push
sbb
icebp
xchg
cwtl
add
popa
sbbl
imul
lahf
push
pop
arpl
into
sbb
ret
sbb
pop
sbb
push
stos
sub
jne
scas
mov
cmp
dec
pop
sub
jmp
fnsave
fildl
das
popa
in
cmp
stos
mov
call
adc
sub
and
fsubrs
sub
leave
mov
mov
xchg
inc
xchg
xchg
ja
mov
pop
ja
add
call
dec
or
js
cmpsl
jae
int
idivb
xor
jmp
inc
pop
jae
ss
adc
ja
int
jno
jle
mov
mov
sub
add
sbb
sub
int3
data16
ficomps
dec
push
outsl
in
mov
lret
mov
sahf
dec
outsl
stc
adc
data16
add
ret
es
or
mov
jl
jg
push
mov
lcall
mov
ljmp
in
outsb
ds
loop
jp
or
clc
lods
aaa
xor
jp
pushf
imull
inc
loopne
sbb
mov
mov
mov
loopne
leave
rolb
push
sub
mov
cmp
test
imul
ret
sub
fs
mov
push
or
dec
and
subl
das
loope
push
cmpsb
ret
push
pushf
subl
les
pusha
cmp
in
mov
jb
inc
xchg
cmp
cmpb
push
jmp
mov
sbb
int3
push
jbe
lret
pushf
arpl
jp
adc
mov
adc
mov
stos
or
sbb
in
add
mov
and
ret
std
icebp
repnz
jns
jae
mov
xchg
jmp
jp
int
pushf
fld
fildll
bound
scas
dec
lock
inc
sbb
push
int3
repz
sbb
loop
repz
lds
popf
mov
xor
add
mov
pop
xchg
mov
aaa
testb
icebp
jb
cltd
fdivr
aad
ret
sbb
sub
xlat
imul
test
cmp
xchg
movsb
jnp
mov
movsl
sarl
and
aam
orl
mov
rcr
and
ret
mov
mov
push
pop
addb
pop
push
pop
mov
xorb
and
push
insl
mov
or
filds
sbb
fstl
addr16
dec
out
inc
mov
sub
in
ficoms
pop
lret
mov
lock
dec
nop
jmp
in
mov
and
mov
xor
mov
dec
inc
arpl
jns
pushf
xor
lret
outsl
pusha
xor
ret
jge
mov
cmp
fadd
in
repz
test
adc
clc
inc
cmp
push
xor
mov
aaa
pop
sbb
fsubl
cmp
test
mov
mov
lret
dec
pusha
pop
pushfw
pop
mov
pop
xchg
jo
outsb
pop
icebp
lock
add
test
dec
adc
sub
and
sbb
fistpl
lret
inc
outsl
shrb
rcrl
xor
mov
cmc
adc
jnp
stos
jae
xchg
push
in
je
arpl
inc
sbbl
clc
jae
rclb
adc
pop
lods
orl
ljmp
stos
out
cmp
adc
jp
pushf
iret
xchg
inc
imull
leave
cltd
cltd
pop
dec
or
push
push
ret
adc
les
rclb
inc
repnz
aad
xchg
ret
pop
aaa
add
jne
xchg
jge
popa
int
cli
inc
ja
nop
mov
mov
mov
lock
and
js
aam
xor
adc
push
pop
sarl
add
mov
jle
addr16
insl
fmull
xor
push
jbe
adc
das
mov
push
adc
pop
loope
subl
and
fwait
cmpsl
je
inc
cmp
sub
sub
jecxz
or
sbb
imul
or
push
jo
je
inc
pop
and
jb
push
inc
mov
imul
test
fs
push
fldcw
lahf
inc
adc
lods
out
or
inc
rep
pushf
sub
add
cmp
int3
sbb
test
out
outsl
clc
xor
xor
das
ljmp
inc
ret
dec
sbb
sahf
mov
jns
dec
cmp
mov
out
inc
lcall
add
int
mov
xchg
fwait
negl
xchg
int
lahf
pop
jmp
mov
and
add
xor
scas
mov
dec
cmpsl
call
xchg
int
mov
dec
xor
ja
pop
and
mov
adc
mov
mov
lahf
dec
xchg
mov
xchg
into
pop
sub
mov
int
in
mov
into
loop
popf
aas
incb
pop
js
add
rcrb
mov
jle
ret
stos
in
push
call
mov
sub
inc
arpl
outsl
jno
fisttpll
pop
stos
loop
roll
aam
mov
mov
fldenv
incl
pop
test
mov
cmpsl
and
add
or
sub
ret
in
xor
push
adc
ret
rcr
mov
insl
cmc
push
inc
adc
push
cmp
insb
ret
add
or
pop
pop
call
xor
repz
cltd
movsl
mov
xchg
subl
pop
cmp
sbb
test
call
mov
movsl
mov
mov
mov
pop
sub
and
mov
cmp
in
pop
jae
and
dec
inc
pop
lret
jmp
loop
in
stos
fnsave
out
iret
and
mov
out
movl
mov
xchg
sbb
or
lahf
into
lods
mulb
int3
cltd
gs
aad
cmp
mov
outsl
push
adc
mov
cmp
sbb
insb
pop
and
xor
mov
ret
mov
scas
inc
mov
lea
push
jle
cld
and
repnz
sbb
out
xchg
and
hlt
xor
jle
lods
imul
lret
xor
in
shrl
xchg
das
pop
shll
jbe
in
add
std
mov
adc
outsb
adc
inc
fwait
rcrl
cmp
push
fs
mov
outsl
sub
jae
jnp
call
mov
lods
test
mov
out
xor
rcrl
cmp
scas
mov
movsl
lods
sbb
ret
mov
xchg
mov
in
push
and
or
mov
sbb
sbb
jb
loop
aad
mov
or
ret
out
imul
cmp
idivb
jne
cmp
jge
and
icebp
test
sub
subl
inc
mov
mov
movsb
and
and
movsl
lret
xchg
in
cmpsb
mov
add
fwait
pop
sbb
xor
mov
call
in
jge
push
mov
adc
aaa
out
cmpsb
testl
mov
and
push
lret
pushf
sub
ret
cli
inc
cmp
imul
mov
push
mov
inc
mov
push
add
and
out
cwtl
dec
pop
or
in
mov
in
jnp
push
outsb
les
push
cmpsl
or
xchg
mov
bound
roll
out
add
decb
jns
fmul
lret
gs
fidivs
lcall
cmc
add
les
inc
cwtl
dec
or
ljmp
je
enter
jns
xchg
sbb
hlt
mov
xor
mov
rcll
aaa
pop
jmp
mov
cmp
sbb
ret
mov
mov
hlt
loop
jp
nop
adc
enter
inc
insb
mov
pop
cwtl
int3
daa
xchg
outsb
xchg
fildl
xchg
rolb
inc
fdiv
adc
jnp
and
fimull
arpl
fcoms
aam
nop
addr16
pop
in
mov
inc
fnsave
cmc
mov
or
pushf
pop
or
jb
xchg
dec
inc
mov
negl
add
inc
xor
shll
or
xchg
mov
shrb
push
xor
jle
jmp
mov
sahf
jb
push
push
insl
shrb
inc
test
icebp
aam
mov
hlt
cmp
dec
cmp
sub
mov
jp
pop
lcall
jmp
and
movsl
test
mov
arpl
mov
dec
inc
inc
mov
mov
xor
lea
xchg
out
mov
xchg
xor
cmpsl
mov
xchg
jecxz
adc
imull
pop
xor
stos
loopne
cmpsl
adcl
add
xor
out
movsl
cltd
into
sarb
fs
dec
xlat
int3
cmp
xchg
mov
es
jns
xor
imul
inc
dec
ret
cli
mov
xchg
xchg
mov
lods
popf
outsb
mov
mov
mov
ss
mov
fbstp
push
inc
cs
dec
xor
jbe
fmul
test
push
xor
mov
addl
call
mov
arpl
and
aaa
add
dec
push
xchg
aad
mov
sub
add
enter
cli
push
or
lret
clc
sub
js
ret
frstor
and
jl
mov
es
push
xor
loop
hlt
cmp
cmp
pop
mov
push
jle
sub
adc
mov
mov
js
mov
adc
in
adc
add
mov
xlat
imul
xchg
jbe
push
mov
and
mov
mov
push
mov
mov
cmp
cmpsl
mov
jne
lret
stc
push
aam
out
scas
cmp
mov
sbb
and
xchg
ljmp
inc
in
mov
lds
adc
mov
adc
mov
into
imul
in
pop
repnz
xor
lcall
jne
xlat
fcom
scas
jae
lock
lahf
jno
adc
cmp
stos
add
cmpsl
in
orl
rcrb
stos
adc
push
testb
sti
mov
ja
sub
aaa
inc
mov
mov
jne
push
ffree
add
rolb
xchg
loopne
mov
mov
and
cmpsb
cwtl
test
scas
das
rcrl
and
push
push
call
daa
mov
push
jbe
cli
pusha
sub
insb
pop
dec
cs
lret
and
cmp
rorl
jp
adc
ljmp
push
xchg
sub
jecxz
mov
pushf
mov
clc
push
pushf
xchg
std
rcll
inc
xchg
mov
loope
lds
mov
ret
loope
loopne
out
insb
outsl
jmp
xor
jae
and
lcall
data16
repz
ljmp
mov
cmp
jecxz
js
jbe
fiaddl
int3
adc
in
ja
mov
xor
xor
dec
push
repnz
lahf
scas
cmp
push
sar
mov
xchg
sti
mov
insl
cmpsl
cmp
sti
movsb
int3
imul
pop
jecxz
cmc
imul
jg
lret
call
xchg
lds
stc
ja
push
cmp
mov
jnp
out
nop
testb
icebp
aam
lds
leave
out
mov
mov
mov
mov
mov
mov
das
sub
mov
pop
popf
and
and
mov
movsb
xor
lret
insb
xchg
cmp
iret
mov
test
arpl
int3
xor
dec
pop
outsb
or
cmpb
inc
nop
add
es
loopne
or
scas
int3
inc
mov
lahf
mov
add
insb
cmp
ja
jle
xor
jle
xchg
enter
add
push
push
xchg
sbb
pop
adc
inc
les
sub
adc
or
int
sub
lods
nop
sub
pop
inc
outsl
xor
mov
lahf
inc
jne
iret
leave
outsl
test
xor
jns
shlb
pop
pop
dec
cmp
cmp
sbb
fbstp
push
cwtl
pusha
inc
lods
test
and
insb
aad
cmp
cli
xchg
ja
push
test
sbb
cs
outsb
inc
add
push
xchg
or
xchg
scas
push
lret
out
pop
push
pop
insl
cld
mov
movl
push
lds
cmp
mov
adc
cmc
insb
in
loopne
test
xchg
push
dec
xchg
push
rsm
ret
mov
aaa
outsb
cs
fmull
xorb
roll
inc
jg
ja
xchg
cwtl
push
cmp
ds
sahf
add
popa
out
das
xor
inc
call
aas
roll
mov
testl
cld
jmp
gs
insb
adc
fisubrs
sbb
adc
cmpsl
cmp
ret
push
test
mov
shlb
lea
ja
dec
sbb
insl
and
or
sar
sbb
jecxz
outsb
dec
push
add
push
pushf
sub
pop
jp
push
data16
fildl
stos
push
bound
icebp
bound
xchg
pop
pop
fcmovnb
jge
cld
cld
mov
jle
jnp
xchg
push
add
or
mov
cmp
xor
or
adc
imul
and
mov
and
pop
cmpl
aaa
int3
imul
inc
cmc
pop
mov
add
nop
add
hlt
fadd
fs
cmpsb
add
push
add
aad
testl
xchg
int3
scas
add
add
sbb
repz
int
lcall
or
arpl
mov
xchg
insb
or
fcmovnb
icebp
sar
mov
jnp
xchg
test
test
adc
xlat
ret
xchg
mov
mov
inc
rcrl
lods
add
xchg
mov
outsb
ret
fwait
cmp
push
fimuls
mov
in
movsb
fidivs
mov
mov
push
fisubrl
movsb
xchg
and
or
mov
jno
pop
shrb
dec
out
dec
add
mov
cmp
repnz
xchg
or
or
or
hlt
repnz
sbb
dec
imul
stos
xorb
mov
lahf
inc
repnz
pop
jmp
add
mov
sbb
jb
and
imul
pop
jne
pop
out
jl
mov
push
stos
push
fstpt
pop
jnp
dec
test
call
ljmp
pop
ret
jecxz
mov
mov
imul
enter
hlt
mov
and
sbbb
aam
fsts
fisubs
ja
fadds
shll
inc
or
sbb
mov
xor
adc
mov
mov
test
dec
gs
push
xchg
mov
sbb
sbb
repnz
mov
and
xchg
or
mov
ds
jmp
addl
icebp
icebp
mov
lret
adc
clc
xor
inc
scas
mov
fldcw
ss
lods
clc
push
lahf
dec
sahf
insb
jne
inc
cmpsb
xor
ret
cmp
jbe
cmp
insb
outsb
xchg
sbb
jp
hlt
sub
mov
movsb
repz
jno
in
cmp
mov
push
ljmp
fidivs
mov
lret
mov
push
loope
push
and
call
cmp
fists
hlt
dec
push
movsl
movsb
ljmp
sbb
adc
mov
fs
mov
sub
pop
movsb
out
push
or
ror
adc
iret
xorb
stos
push
mov
adc
or
mov
mov
icebp
loop
xchg
hlt
dec
fsubrl
cs
inc
lcall
pop
xor
movsl
push
inc
stos
xor
test
mov
popf
xchg
fimull
inc
inc
out
hlt
mov
pop
loopne
aaa
xchg
inc
in
out
aad
mov
rcr
push
js
push
bound
push
cli
scas
sub
or
sbb
aad
adc
push
arpl
mov
dec
or
xor
jno
sbb
mov
pop
or
jo
mov
add
cmp
test
popf
leave
jp
add
push
xor
and
addr16
mov
mov
push
xchg
loop
push
and
sbb
cmp
dec
std
xchg
test
push
outsb
mov
cmp
ret
je
sti
in
pop
and
loopne
pop
cmp
and
ror
int3
repz
dec
mov
pop
out
jp
cmpsb
cwtl
pop
push
scas
scas
mov
leave
mov
adc
or
mov
les
mov
jns
movsl
clc
data16
fwait
jmp
jp
outsb
shll
pop
pop
xchg
pop
lcall
adc
xor
rcrl
xor
mov
adc
or
nop
les
test
xchg
cmp
sbb
cmp
in
jnp
ja
fstpt
pop
std
and
jns
jl
out
test
in
adc
loopne
jne
mov
push
subl
xchg
xchg
rcll
xchg
adcb
dec
or
jmp
sub
mov
lret
jl
sti
ljmp
xchg
xchg
imul
dec
insb
xchg
js
test
cs
pop
pop
inc
pop
cltd
cmpsl
fisttpll
inc
repnz
pop
sub
fidivl
cmp
aas
shrb
leave
jecxz
shrl
jle
sbbl
jge
data16
add
lea
fmuls
or
xor
dec
sub
push
movsl
push
cli
test
xchg
xchg
pop
mov
mov
fwait
hlt
cmp
pusha
pop
popa
cmp
test
ret
pushf
inc
cmp
out
jecxz
push
inc
arpl
lods
xchg
ja
clc
push
jb
sahf
pop
sbb
mov
lock
std
dec
cld
leave
ja
push
shlb
jle
mov
or
inc
jl
test
out
insb
inc
mov
and
push
lret
or
push
das
xor
inc
pop
mov
sar
aaa
scas
jns
sub
push
rolb
mov
adc
push
add
add
iret
sbb
stos
sarb
test
mov
fbld
add
cmp
ljmp
aaa
ret
sub
decb
aam
or
inc
or
jb
das
nop
add
ljmp
mov
mov
dec
inc
adc
lock
xor
push
in
cld
and
xor
cs
fnstenv
push
ja
in
jns
mov
out
sub
push
sub
cli
cmpsb
lods
pop
mov
xor
outsb
add
xchg
imul
data16
or
push
int3
fistps
push
les
loope
daa
or
loopne
hlt
mov
lock
mov
stos
stos
std
out
loop
ss
imul
jo
push
jno,pt
out
or
jmp
xor
and
call
call
cmp
aam
ljmp
out
xchg
pop
fsts
inc
lahf
mov
mov
lcall
fidivl
call
mov
lcall
pop
adc
mov
shll
je
sbb
int3
int3
jl
test
push
stos
dec
das
aas
push
lods
icebp
lods
out
je
mov
in
mov
aad
adc
pop
push
dec
jecxz
and
andb
das
scas
xrelease
in
stc
repz
popa
mov
aas
jmp
leave
lods
and
iret
lret
inc
add
movsb
fwait
mov
xor
jbe
xor
inc
leave
add
fsub
cmpsl
je
jecxz
cmp
aad
or
mov
in
lds
fadds
loope
jnp
les
orb
add
subb
sbb
push
adc
lods
in
pop
add
cli
out
pop
sahf
jne
aad
add
jbe
aam
mov
cltd
subl
jnp
test
enter
fs
dec
pop
inc
out
mov
mov
popf
fnstcw
pop
out
pushf
es
xchg
sar
into
pop
fbld
test
sbbb
adc
push
sti
repz
lret
jle
inc
orb
stc
mov
test
clc
cltd
or
jns
dec
cmp
sub
push
jmp
mov
mov
or
jns
dec
cmp
sub
push
in
cwtl
stc
test
mov
mov
or
js
dec
cmp
sub
push
jmp
mov
cmp
js
notl
cmp
aas
mov
xchg
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
xchg
jge
insl
mov
mov
or
pop
inc
loop
xor
and
push
mov
jb
idivb
insl
ficomps
dec
sarb
loop
adc
add
push
fsubl
int
fadds
jb
bound
and
dec
int3
cmp
loop
jbe
and
pop
mov
xor
es
ds
cld
xor
sbb
xchg
ret
leave
or
xor
insl
xchg
fdivs
dec
jle
jle
xor
daa
sar
inc
mov
in
jbe
mov
lods
lods
push
divb
popf
fsubrl
lods
mov
sbb
jecxz
ror
inc
std
add
daa
xor
pop
xchg
mov
lock
cmp
sub
adc
add
mov
fmull
lods
inc
dec
jae
bound
xchg
mov
dec
ret
imul
pop
out
inc
mov
insl
and
jnp
jecxz
inc
sub
xchg
xlat
test
std
push
jmp
fildll
jb
jge
insl
mov
mov
sub
aam
cwtl
in
inc
fstl
int
mov
lret
sti
jge
adc
sbb
or
jp
pop
xchg
jns
lea
push
mov
and
sub
sbb
pop
call
rclb
push
jne
push
lahf
xor
sub
fsin
cmp
sarl
icebp
xor
repnz
add
xor
and
push
mov
bound
mov
mov
sub
adc
add
xor
and
push
mov
bound
jo
bound
pushf
dec
inc
jmp
push
scas
or
iret
fisubs
push
jecxz
push
jl
std
aas
insl
jns
mov
movsl
iret
imul
xor
lret
xchg
in
cmp
sar
ss
jg
pushf
mov
aam
jle
sub
idivb
adc
scas
cmpsl
std
pop
add
adc
ljmp
xchg
and
sub
outsl
mov
and
push
jb
mov
test
insl
mov
push
adc
shlb
pushf
fadd
adc
cmpb
jmp
shl
xchg
arpl
xor
dec
addr16
adc
jmp
bound
mov
lcall
and
pop
sub
jmp
or
jne
fistpll
call
adc
cmc
pop
mov
iret
sub
pop
mov
pop
jns
inc
pushf
jmp
testb
sbb
orl
mov
frstor
pop
data16
aaa
jmp
mov
sub
push
mov
push
pop
lret
jo,pn
mov
ret
or
roll
jg
sub
insl
cmp
mov
movsb
mov
and
dec
arpl
sub
xchg
and
insl
repnz
add
nop
aaa
lahf
sbb
dec
ljmp
cwtl
pop
jge
or
inc
inc
insl
xor
mov
les
mov
jne,pn
dec
test
imul
int
dec
mov
icebp
add
cli
test
jb
lret
aaa
push
push
cltd
lret
jne
shl
mov
shl
nop
cmp
mov
pop
jo
mov
lods
jp
fisttpl
lahf
sbb
dec
push
es
xor
mov
inc
lods
xchg
hlt
shlb
popa
pop
mov
add
jmp
ss
test
cmc
cmpsb
insb
xchg
sub
mov
xchg
mov
imul
and
flds
aam
scas
fs
popa
stos
sub
in
add
adc
push
fsubl
int3
mov
lds
mov
or
lock
std
fidivs
dec
xchg
inc
sub
cmp
mov
sbb
mov
xor
xchg
add
pop
dec
and
jl
push
adc
adc
cli
dec
fsincos
mov
push
sbb
adc
xor
mov
dec
push
pop
roll
shrl
jne
sub
icebp
lock
pop
das
xlat
lcall
aas
sub
pop
scas
int3
push
cmp
mov
sbb
jp
ss
loopne
add
cmp
les
dec
pop
int
fsubs
xchg
ror
xchg
adc
movsl
mov
les
push
cmp
and
xchg
sar
inc
xor
jnp
bound
or
inc
mov
mov
xor
decb
mov
mov
xor
dec
sbb
mov
cmp
in
cmp
insb
inc
pop
or
fwait
sarb
lret
xlat
sbbl
cmp
rcr
nop
lcall
mov
pop
lea
rorl
adc
mov
loopne
clc
adcl
imul
adcb
lret
dec
push
std
jecxz
ljmp
test
test
ret
pop
jg
mov
arpl
cmpsl
adc
jns
sub
xchg
jo
cmpsl
int3
xor
ljmp
hlt
mulb
xorl
repz
nop
mov
or
cmp
mov
mov
sub
mov
cs
xlat
push
mov
rcl
push
and
sbb
inc
cltd
pop
lea
arpl
rcrb
imul
pop
and
leave
aas
jecxz
mov
mov
sbb
jmp
fs
int3
dec
out
imul
ficoml
sub
mov
in
jmp
jne
ss
subb
push
arpl
mov
ret
pop
add
daa
les
add
cmpsl
js
fcoms
xchg
ja
addr16
mov
fiaddl
jne
lds
imul
imul
sub
popf
shl
xor
ja
nop
dec
jns
das
cmp
iret
xchg
in
xchg
xor
stos
sub
cli
outsb
repz
bnd
aaa
xorb
xor
add
repnz
xchg
push
cltd
and
and
test
int3
xchg
jecxz
jg
jnp
pop
jp
ljmp
dec
test
mov
rcll
sbb
imul
mov
xor
dec
orl
clc
fisttpll
pop
cld
pop
call
xchg
jmp
jbe
jbe
jae
cmc
pushf
xchg
or
enter
movd
dec
negl
test
push
jg
mov
es
xchg
mov
jb
bound
push
pop
dec
add
cmpl
adcl
cwtl
outsb
out
aam
or
mov
clc
or
jo
fistps
jo
xor
loop
stos
xor
stos
cwtl
movsl
insb
cmp
pop
or
inc
mov
dec
aas
and
push
jnp
out
cmpsb
push
sub
fnstcw
pop
fwait
pop
jb
and
scas
inc
aam
xchg
sbb
jb
mov
push
pop
mov
nop
dec
cmc
ja
jle
xor
inc
sub
mov
es
outsl
inc
mulb
iret
mov
xlat
xchg
jmp
popa
call
mov
mov
in
imul
cs
cmp
sbb
xchg
shlb
hlt
push
mov
movsl
pop
adc
ljmp
adc
adc
inc
lcall
imul
dec
das
dec
insb
fwait
sbb
mov
mov
pop
outsb
xchg
arpl
push
mov
je
insl
je
ficoml
cltd
jmp
xchg
in
inc
and
mov
aas
jne
mov
movsb
cld
gs
jmp
int3
add
pop
mov
pusha
pop
mov
stos
cltd
cs
mul
insb
andl
fnstsw
loope
test
data16
mov
sti
xchg
in
bswap
jns
jecxz
loopne
in
loopne
lock
cwtl
xor
sbb
or
xchg
jne
mov
adc
sub
jmp
pop
add
vdivps
mov
add
xlat
inc
mov
and
push
mov
cwtl
outsb
out
mov
aad
lret
mov
lods
cmp
mov
push
mov
dec
xchg
xor
push
mov
shrb
test
mul
pushf
cmp
call
stos
xchg
pop
test
popf
ja
test
dec
stos
cmp
gs
fistpl
inc
ja
dec
dec
sahf
int
aas
lea
jno
gs
push
jg
imul
cmp
addb
ret
mov
sbb
cmovl
test
mov
dec
xor
dec
jne
cmp
dec
xchg
fisttps
fidivrl
mov
pop
jmp
and
idiv
sub
mov
stos
sub
repnz
out
lds
xchg
mov
out
or
jb
push
lods
insb
lea
fiadds
aam
stos
mov
mov
stc
mov
sub
mov
rcll
outsb
cwtl
inc
std
xchg
mov
jmp
mov
jge
test
scas
push
icebp
imul
lock
lea
ss
or
rcrl
repnz
dec
arpl
cli
push
cld
int
or
pop
rol
push
xchg
cs
jmp
and
adc
insl
out
lods
xchg
bound
sbb
pop
cwtl
out
leave
sbb
mov
ljmp
ret
je
push
or
sahf
leave
or
push
test
jb
in
movsb
push
pop
jmp
ror
iret
and
xchg
shlb
addr16
cmp
movsl
cmp
out
xchg
mov
std
test
scas
pop
mov
or
mov
rcll
mov
notl
pop
ss
jg
xchg
sub
cmp
repz
insl
xor
bound
adc
iret
inc
hlt
mov
mov
push
mov
cmp
push
adc
arpl
push
fisubrs
add
add
jbe
repz
pop
test
sub
pop
push
ljmp
fs
dec
aam
jns
std
pop
pusha
cmp
sub
mov
cmp
jne
pop
xor
sbb
adc
jnp
call
jg
xlat
xchg
ror
cmc
jecxz
xlat
sbb
adc
adc
movsb
ljmp
imul
push
mov
ss
aaa
or
sub
popa
fwait
dec
into
cmp
clc
add
dec
push
pop
sbb
push
cmp
push
dec
and
mov
ds
add
adc
aaa
arpl
rorb
xchg
lahf
aad
push
cmpl
xor
jmp
test
mov
push
outsb
pop
mov
and
imul
lcall
es
adc
pop
pop
sub
xorl
mov
sbb
mov
mov
add
nop
cltd
sub
test
scas
in
into
fadd
or
or
xchg
or
in
or
insb
pop
mov
sahf
jecxz,pn
mov
xor
adc
or
sub
pop
mov
aad
jge
test
loop
inc
test
adc
rcr
mov
dec
jp
ja
mov
adc
push
mov
mov
push
mov
loope
inc
arpl
sbb
hlt
jecxz
fld
jle
lcall
loopne
sbb
inc
xchg
adc
mov
xor
xor
adc
hlt
lds
ljmp
dec
or
mov
mov
mov
out
sar
imul
jmp
mov
jno
sub
mov
jns
imul
sbb
jl
scas
leave
xorl
dec
data16
imul
scas
lret
pop
cld
fwait
out
mov
test
shll
lahf
lods
aad
xchg
test
loope
js
data16
imul
in
mov
scas
sahf
sub
or
adc
emms
push
ja
out
sbb
imul
push
sbb
jb
xchg
sbb
hlt
shl
fwait
lahf
xchg
adc
mov
les
addl
je
push
ja
xchg
mul
dec
pop
mov
dec
lcall
ljmp
cmp
dec
dec
adc
scas
hlt
imul
jo
mov
adc
cmp
push
and
test
aas
mov
fstpt
repnz
insl
jnp
stos
add
cmpsl
mov
pop
ja
loopne
pop
lds
jle
add
outsl
or
int
pop
mov
push
and
scas
xor
out
ja
add
or
in
jne
and
xor
js
and
lret
mov
add
repnz
je
cwtl
xlat
or
out
popa
icebp
inc
sub
dec
push
xor
inc
xor
and
es
dec
xor
stos
sbb
dec
clc
lahf
arpl
int
stos
xor
cmp
jbe
cmp
inc
sbb
sbbb
in
aas
mov
or
mov
rorb
xor
fdivrl
sub
or
mov
div
jle,pn
cmc
inc
ja
jns
lock
pop
and
add
scas
in
sub
pushf
mov
xor
xchg
ret
cmp
ds
pop
ret
popf
repz
outsl
push
xlat
push
mov
xor
pop
int3
fstpt
mov
imul
dec
and
adc
pop
into
lret
push
decb
mov
sbb
xor
mov
jnp
sbb
cmp
xor
xchg
icebp
addb
xlat
shlb
xchg
or
mov
cmp
push
sub
push
mov
cmpsb
imulb
or
mov
dec
movsl
lcall
inc
imul
movsb
cmp
dec
mov
add
fbld
das
cmp
daa
and
and
std
data16
sahf
jbe
mov
fnsave
lods
loope
mov
adc
add
daa
push
xchg
cli
cltd
gs
mov
mov
rclb
jecxz
stos
push
cltd
les
js
nop
shll
test
inc
rcrb
loope
add
add
mov
dec
cmp
mov
jmp
pusha
enter
outsl
or
inc
loopne
lcall
push
jbe
test
add
in
or
mov
add
pop
adc
pcmpgtb
push
mov
jg
push
pop
in
insb
jmp
xchg
mov
mov
mov
fmul
lock
lahf
lods
dec
or
enter
dec
adc
ret
xchg
and
out
mov
jnp
aaa
icebp
test
xchg
jnp
xchg
xor
iret
int
mov
push
sti
lods
adc
mov
nop
xchg
mov
pusha
roll
push
sub
sbb
push
in
sbb
sbb
loope
test
pop
out
sbb
mov
test
mov
in
jo
add
mov
ljmp
mov
popa
icebp
xchg
add
mov
icebp
mov
cmp
pop
bound
das
arpl
aas
push
in
or
pop
and
sti
add
popa
add
nop
cmp
or
fwait
add
xchg
fistl
pusha
imul
stos
cmp
pusha
popf
add
inc
xchg
pop
cwtl
popa
mov
push
mov
push
mov
jg
cwtl
repz
sub
setp
mov
add
leave
xchg
mov
or
fs
xchg
xor
push
outsb
popa
ror
dec
xchg
and
test
les
in
cmp
push
das
loope
aas
idiv
xchg
repnz
adc
adc
dec
push
mov
decb
xor
in
adc
sti
mov
jnp
jbe
insb
mov
in
jno
repnz
mov
and
push
ja
nop
repnz
rol
in
aaa
sbb
jnp
push
mov
incl
stos
repnz
ret
clc
daa
lock
les
lds
sbb
lds
js
mov
mov
jmp
adcl
add
cmpsb
mov
sbb
stc
aaa
mov
out
int3
push
repnz
xchg
lea
call
mov
jp
dec
jle
ret
cmp
push
stos
dec
add
ja
stc
lods
in
popa
les
and
add
movsb
subl
push
jl
push
inc
mov
adc
call
rorl
cmp
cmp
sub
call
mov
push
in
stos
call
mov
xor
dec
fwait
adc
cmpsl
daa
leave
sub
insb
push
in
sbb
iret
jo
icebp
mov
fistpl
sub
aad
pop
pop
in
lock
hlt
and
pop
xchg
popa
jns
and
adc
mov
mov
inc
cmpb
xchg
cmp
test
mov
sbb
imul
xchg
scas
movsl
sbb
cli
push
jg
mov
mov
pop
mov
fsts
inc
cmc
sub
adc
and
sahf
mov
fnstenv
ljmp
ja
mov
js,pn
into
lcall
or
ss
inc
repz
push
adc
outsl
cmpsb
flds
and
jo
ret
or
mov
sbb
xchg
push
es
fwait
jecxz
jno
rclb
lods
and
jmp
cmp
sti
sar
inc
int3
xchg
cld
dec
jmp
ret
and
cmp
push
sub
setl
xor
lret
sbb
mov
adc
push
stos
div
and
mov
mov
push
mov
jge
cmpb
and
xlat
ss
cmp
movsl
mov
jmp
cmp
test
cli
mov
rorl
popa
fcmovnb
mov
jecxz
xchg
movsb
push
sbb
dec
aas
outsb
sub
jnp
mov
jo
out
ret
mov
mov
dec
adc
iret
xor
mov
xchg
or
cmc
push
cmp
pusha
mov
inc
xchg
xchg
pop
and
lret
rolb
xor
pop
hlt
fdivrs
pop
sub
mov
xor
fsubrl
mov
les
das
fistpl
cltd
push
mov
inc
pop
lret
xor
lds
stc
mov
cld
mov
sarb
add
insl
xchg
aaa
ds
ja
jbe
jae
fisttps
es
cmpsb
imul
or
lods
and
je
mov
fcoms
int3
xchg
sahf
out
rcrl
fwait
dec
pushf
cltd
cmp
or
insl
xor
pop
jmp
jo
aad
nop
js
call
sbbb
pop
cmp
cmp
sti
inc
mov
shrl
clc
cld
jle
dec
add
jl
xor
arpl
mov
je
ss
lcall
jns
xchg
jne
pop
adc
dec
add
cmp
or
add
sbb
pop
pop
scas
xor
mov
imul
loopne
mov
inc
dec
xor
pop
push
dec
in
cmp
jle
filds
push
jns
fadds
loopne
aas
pop
xor
adc
push
cmp
or
leave
cmpsb
out
sub
jmp
setns
and
push
add
jbe
test
scas
ja
andb
aas
cmp
das
fstpl
mov
add
rcrl
mov
mov
xchg
dec
popl
xchg
sti
cmp
insl
cmp
and
aaa
lock
aas
inc
jmp
ljmp
mov
ds
xor
jae
test
xor
mov
scas
cwtl
gs
cli
push
add
dec
stos
dec
cmc
adc
push
in
out
mov
push
add
loop
sbb
rorb
add
popa
jle
addr16
sbb
jne
sub
js
cs
dec
xchg
or
sbb
in
dec
xchg
add
cmp
mov
xor
imul
sbb
pusha
fs
sbb
pusha
enter
outsl
rcr
and
stc
clc
mov
sub
leave
je
loop
sbb
js
test
ret
adc
push
out
shlb
dec
pop
mov
push
shll
in
ss
dec
outsb
imul
push
jbe
mov
push
insb
les
push
aaa
in
cmp
xor
shll
sbb
push
cmc
pushw
scas
adc
mov
mov
pop
push
adc
xor
jo
in
aad
push
shlb
lods
cltd
pop
xlat
mov
mov
push
icebp
mov
out
xor
pop
lds
and
push
fidivrl
fists
lret
je
test
cmovne
mov
push
adcl
in
fsubl
push
xor
insl
push
jno
xchg
fisubrl
fwait
add
mov
lea
xlat
repnz
jge
xchg
fs
inc
in
adc
lds
ror
test
mov
or
aas
or
mov
add
in
aad
faddl
mov
and
fistpl
jb
stc
scas
mov
aaa
hlt
mov
and
inc
pushf
push
fdivl
adc
push
jp
or
xor
adc
inc
fldenv
fidivl
jecxz
popf
dec
arpl
push
in
or
fs
sti
sahf
jne
mov
popf
movsl
ljmp
js
hlt
incb
fsts
and
pop
push
lcall
sub
je
rorb
repnz
mov
jno
sub
dec
jg
movsb
imul
lcall
je
cmpsb
mov
mov
sahf
sbb
push
mov
jo
ret
dec
sub
inc
ljmp
xchg
mov
sub
adc
enter
ficoms
xorl
add
out
pusha
xchg
or
jae
std
jecxz
xchg
xchg
aam
pop
in
push
imul
add
adc
mov
jle
jmp
mov
fwait
jl
mov
ss
mov
ret
das
mov
mov
mov
push
xor
sbb
out
sbb
lcall
out
inc
lods
sub
xor
sub
rolb
aam
cmp
stc
mov
jle
inc
mov
popa
insl
std
xchg
mov
int3
add
xchg
pop
pop
cmp
fdivrl
push
inc
inc
jmp
mov
push
jg
sbb
imul
das
add
je
je
fisttps
jno
in
loop
push
adc
lcall
mov
ret
bound
aas
mov
cmpsb
popf
int3
out
fwait
popf
stos
add
sbb
aad
pop
outsl
mov
or
into
sub
cltd
sbb
mov
sub
mov
stos
rcrl
sbb
or
adc
fs
and
pusha
out
arpl
stos
cltd
imul
fidivrs
add
aas
adc
call
scas
into
test
insb
rolb
dec
sbb
pop
inc
mov
rorb
movsl
insl
cmc
pop
mov
sub
adc
add
xor
and
push
mov
bound
mov
mov
sub
adc
add
xor
and
push
mov
bound
rcrb
dec
inc
cmp
and
ret
int
mov
mov
call
cmp
int
std
std
inc
cwtl
frstor
mov
lea
jb
out
negb
dec
or
fnstcw
insl
xchg
stc
jmpw
inc
leave
push
mov
push
mov
jns
imul
cmp
or
mov
es
push
jns
imul
cmp
or
mov
arpl
pop
mov
out
test
mov
or
pop
cmp
adc
mov
sub
in
sub
or
cmp
jl
mov
inc
fildl
ficoml
mov
sub
xchg
jl
stc
fwait
mov
stos
pop
daa
imul
mov
or
mov
or
imul
mov
cli
leave
mov
sbbl
inc
pop
sub
cmpsl
and
xchg
lcall
ljmp
fwait
xorl
das
loope
loope
iret
jbe
adc
jbe
push
inc
push
int
test
pop
es
negb
dec
cmp
or
flds
push
mov
push
mov
mov
mov
pop
enter
add
mov
lods
adc
inc
in
hlt
add
push
es
hlt
sub
out
dec
rcrb
icebp
jno
stos
push
test
mov
inc
ficompl
arpl
movsl
cmp
sub
stc
jmpw
inc
leave
push
mov
push
mov
jns
imul
cmp
or
flds
push
mov
push
mov
jns
insb
mov
dec
push
or
std
push
out
test
xchg
mov
jo
fwait
cld
mov
and
pop
cs
push
mov
jnp
jae
fdivrl
inc
jg
out
cmp
ret
lcall
mov
mov
push
push
push
or
lret
repz
or
sbb
test
push
adc
xor
jg
xchg
add
xchg
or
inc
mov
xor
loopne
mov
jnp
push
cmp
cs
loop
mov
test
xchg
test
lea
outsl
mov
mov
or
mov
xchg
jo
frstor
roll
inc
and
bswap
ljmp
fcompl
test
jge
imul
push
iret
cmp
popa
and
out
ret
xchg
xlat
rcll
std
mov
jb
inc
xchg
inc
fists
mov
ja
jae
and
sbb
out
pop
int
sub
mov
sub
sahf
push
les
add
cs
in
push
imul
loope
icebp
aam
cmpsl
push
ds
mov
add
jns
in
jo
push
std
mov
aaa
rorl
arpl
aad
dec
inc
dec
xor
pushl
pop
pop
lcall
das
pop
xchg
pop
inc
push
sti
xor
push
shlb
sub
cli
and
mov
lods
xchg
inc
lods
inc
or
iret
int3
fwait
mov
jecxz
and
jecxz
mov
out
sarb
push
pop
push
dec
adc
fisubl
push
repnz
jbe
icebp
mov
pop
outsb
mov
jb
outsb
pop
bound
pushf
dec
mov
bnd
in
or
sbb
mov
daa
daa
cmp
cmpsl
mov
movsl
mov
imul
cmpb
insb
cld
imul
mov
leave
das
icebp
lock
scas
mov
bnd
dec
xor
inc
push
idivb
sarl
pop
xlat
jbe
push
outsb
inc
test
dec
scas
xor
jecxz
mov
loop
cmc
popa
lock
jecxz
mov
test
ss
or
mov
addr16
dec
or
mov
lret
cwtl
ja
fiadds
orb
pusha
mov
lods
inc
mov
je
dec
aas
xor
xor
lods
cmp
mov
xlat
push
sub
mov
push
mov
push
xchg
aad
mov
roll
cwtl
or
lea
imul
lods
sbb
jp
out
or
mov
loop
xchg
cwtl
cmp
push
push
test
mov
popa
cmp
mov
inc
dec
push
stos
xchg
inc
mov
jp
cmpsl
add
sbb
mov
inc
in
xor
cmpsl
jmp
gs
jbe
aad
pop
dec
mov
arpl
pusha
out
es
pop
scas
jo
xorb
mov
adc
push
pushf
inc
jnp
es
fcompl
into
inc
dec
mov
xor
push
movsb
lea
sahf
scas
out
inc
dec
popa
xor
shr
sub
inc
or
pop
sahf
push
in
cmp
dec
mov
push
add
push
sbb
je
mov
xchg
mov
mov
mov
mov
or
add
xor
mov
aaa
cli
xorb
sub
mov
xchg
mov
outsb
xorl
pop
test
test
sub
loopne
mov
shlb
xchg
cmp
add
popa
xchg
ljmp
popa
xor
mov
push
call
andb
in
lods
enter
push
neg
add
cmp
add
imul
punpckldq
out
es
sub
aam
jmp
pop
xchg
testb
repz
pop
sbb
je
mov
lcall
fs
sbb
xor
xchg
adc
mov
sbb
xchg
xchg
sti
inc
ljmp
mov
cmp
lret
loope
stos
dec
cmpsl
out
adc
xchg
xchg
mov
gs
push
pop
pushf
push
mov
stos
fidivrl
inc
push
pop
sbb
mov
outsl
adc
insb
jb
inc
cmpb
cmpsb
outsl
shll
fsubrs
les
mov
mov
ds
or
sbb
add
sub
dec
enter
cmp
aad
daa
ret
inc
dec
iret
dec
std
xchg
subb
pusha
dec
inc
hlt
sub
dec
jns
mov
and
mov
repnz
lods
mov
cmp
xor
inc
sub
std
pop
mov
xchg
mov
lock
jg
cmp
or
and
or
or
out
lret
into
xchg
or
mov
cli
jo
call
shll
jb
or
cmpsb
mov
fdivl
inc
xor
inc
into
xchg
dec
leave
sub
jne
test
pop
inc
xchg
jnp
nop
or
push
iret
movl
pcmpeqw
mov
pop
enter
outsb
stc
jae
add
cmp
add
lds
fcmovb
and
mov
mov
int3
jno
inc
pusha
mov
adc
lcall
aad
or
inc
adc
mov
push
fldcw
inc
dec
lods
fisubs
jmp
push
pop
adc
pop
jg
add
out
xchg
mov
lcall
mov
xor
imul
lret
pop
cmp
push
add
inc
lcall
cmovl
in
stc
pop
scas
stos
mov
cmp
and
addb
fstl
or
add
jge
ja
fwait
jno
cmp
aas
lea
imul
shlb
insl
rcr
nop
cwtl
je
addl
lret
jnp
test
or
sbb
lds
in
loope
sub
pop
data16
cmp
loope
out
add
clc
or
jo
cs
or
loopne
lock
dec
je
sar
into
pop
jae
jg
cltd
scas
test
lods
xchg
sbb
gs
sbb
xor
pusha
pop
rcll
inc
add
mov
pop
sbb
cmp
sbb
mov
or
aad
dec
shl
sub
fwait
push
sbb
pop
xchg
jg
pop
mov
xor
pop
test
push
shr
sarl
mov
pop
sbb
shlb
cli
add
cmp
inc
out
mov
in
test
sarl
ja
lret
push
pop
in
insb
lea
mull
cmpsl
insb
movsb
ffree
xchg
and
and
and
push
mov
shlb
std
add
mov
shlb
out
cld
xor
cmc
insl
cmp
sbbl
jns
in
mov
and
xor
sbbb
call
and
add
subl
lret
stos
push
inc
adc
out
call
sub
ds
mov
cmp
add
jp
lcall
jg
daa
cmp
cwtl
test
push
dec
shrb
pushf
gs
adc
pcmpgtw
add
adc
addr16
jo
ret
ret
stos
pop
mov
adc
mov
sub
ja
sbb
pop
adc
jno
xor
test
outsl
insl
jmp
or
and
lea
fwait
mov
mov
lock
sarl
mov
movb
inc
imul
les
aaa
jle
cmp
out
dec
push
cmp
cmp
in
xor
and
jns
xchg
test
or
stos
sub
jge
cltd
shll
sub
push
out
mov
mov
mov
dec
fs
push
xorl
arpl
loopne
sub
out
mov
push
js
or
inc
xchg
mov
addb
sbb
pop
lret
gs
mov
lock
imul
jb
aam
and
call
sub
mov
in
je
push
push
jmp
xor
mov
and
mov
sahf
repz
aad
jge
cmp
xchg
push
clc
imul
jge
adc
ss
jns
je
inc
aad
push
or
sarb
add
divb
in
xor
or
mov
adc
aaa
out
mov
aad
mov
movsl
fnsave
sti
repz
rolb
pop
call
out
fistpll
sbb
into
pushf
imul
sbb
es
stos
inc
js
cmp
push
adc
es
and
xchg
inc
dec
subl
mov
jae
daa
in
mov
xchg
xchg
fnstcw
int
pusha
sti
dec
inc
fcomps
lods
jnp
dec
sub
add
out
push
popl
xchg
cmpb
ljmp
inc
sbb
xchg
mov
inc
xchg
add
lds
push
mov
jno
mov
in
out
add
mov
add
push
jno
inc
adc
adc
inc
out
adc
data16
out
jne
or
popf
adc
loopne
fisttpll
adc
mov
sub
cld
test
pop
add
in
bound
xchg
ljmp
mov
sbb
out
adc
inc
fs
fimull
lret
mov
in
dec
shrl
or
push
fwait
ljmp
ljmp
outsb
jnp
jbe
loope
xchg
rol
ss
pusha
mov
rolb
test
sub
pop
xchg
dec
test
push
test
and
fistl
in
movsb
jl
ds
and
clc
fsubrl
mov
xor
sub
fadds
out
arpl
mov
cmc
sub
mov
or
jne
jp
xor
lahf
sub
push
xor
mov
adc
inc
add
addr16
jbe
sub
and
roll
and
arpl
jbe
sbb
in
lret
and
mov
addr16
adc
adc
shlb
cmp
in
push
jle
inc
push
aam
test
bound
or
sbb
popf
add
cmp
push
jae
inc
addl
je
push
cmp
std
jnp
popa
adc
cli
je
xor
sbb
push
or
out
and
ljmp
dec
pop
into
cltd
fucom
mov
jmp
add
add
outsl
jmp
sti
in
jbe
adc
push
aad
jae
push
xor
jns
jb
mov
cmp
outsb
push
mov
push
movsb
popa
adc
insb
jg
inc
int
jg
sahf
out
dec
pop
sub
push
clc
frstor
movsb
xchg
bnd
push
mov
add
dec
push
dec
push
xlat
inc
inc
push
insb
push
adc
jb
push
into
inc
mov
in
enter
cmpsb
inc
pop
das
mov
sbb
pop
scas
imul
mov
pop
or
adc
mov
pop
add
add
mov
cltd
das
gs
adc
cmpsb
pop
cmp
mov
and
int3
lret
xchg
mov
sub
shll
cli
jge
mov
adc
cmpsl
cmp
jl
mov
scas
pushf
xchg
mov
jmp
sub
xchg
popa
dec
push
lds
fsub
outsb
and
pop
sarb
pop
pop
mov
movsl
out
cs
mov
mov
or
cmp
lods
mov
sbb
add
in
sbb
aaa
out
pop
mov
mov
dec
add
movsb
shlb
adc
shll
xchg
je
mov
push
sbbb
insb
stc
cltd
xchg
dec
mov
ficomps
fwait
jl
imul
pushw
enter
test
sahf
cmp
and
add
jnp
out
int
cmp
fisubrs
imul
inc
push
mov
inc
mov
pop
push
push
test
lret
mov
aam
adc
adc
jae
ja
out
rclb
rcrb
xchg
out
pusha
adc
or
mov
rcrl
arpl
adc
jmp
popf
push
push
pop
and
add
lret
clc
push
negb
sar
vpxor
xor
in
xor
xchg
js
out
xchg
aaa
push
jbe
insl
add
mov
in
fists
pop
andl
inc
ret
sti
clc
jp
mov
sbb
enter
mov
mov
xchg
adc
sbb
clc
scas
jle
shl
loope
fdivs
andb
sbb
sbb
lea
lods
int
scas
enter
in
cs
sbb
sbbl
jp
xchg
jg
jmp
push
inc
cmp
loope
es
ds
imul
push
xor
xor
leave
into
cmp
xlat
dec
add
add
push
subl
sbb
outsl
or
inc
and
fsubrs
imul
fcoms
stc
xchg
cwtl
push
mov
cli
mov
das
sbb
pop
sub
xchg
mov
dec
xchg
sbb
addr16
mov
dec
or
outsl
pushf
imul
sbb
and
sbb
sub
push
sbb
dec
sbb
jg
lret
dec
mov
jnp
pop
mov
lods
call
outsb
ret
insb
mov
xorl
mov
mov
push
cmp
pop
ror
enter
adc
dec
jnp
iret
jb
pop
ret
lret
stc
int
mov
inc
pop
dec
movups
rcrb
dec
ds
xchg
adc
mov
mov
out
cmp
jnp
cmpsb
dec
pop
pusha
js
push
lds
mov
fsubp
out
dec
sbb
or
repnz
clc
jmp
aam
mov
nop
scas
fldcw
and
ja
add
bnd
add
lock
out
push
inc
push
pusha
iret
ss
fs
fidivs
push
push
cmc
sbb
mov
iret
shr
sub
fcompl
xor
xor
push
loopne
cmpsl
push
inc
mov
ficoms
repz
lret
sbb
push
xor
jl
dec
mov
insb
dec
xor
adc
mov
adc
xchg
pop
xlat
push
aam
ret
pop
jae
mov
sub
popf
mov
testl
test
pop
inc
fcoml
add
shll
fmuls
push
add
inc
sub
leave
add
in
cld
sub
test
aaa
cmp
xchg
inc
mov
mov
inc
std
and
out
xchg
cli
dec
sbb
push
pop
sti
or
dec
add
mov
outsb
insb
inc
sub
fldcw
add
pusha
insb
das
stos
sub
pop
jno
cmpsl
std
test
lahf
ret
mov
mov
xchg
dec
stc
xchg
jne
push
arpl
imul
push
jne
adc
aad
js
outsl
add
add
push
and
mov
andl
pop
inc
fxch
xlat
sbb
test
int
inc
dec
mov
or
inc
in
fsub
adc
sub
outsl
ret
mov
rcll
sub
xorb
mov
das
inc
dec
shrd
xor
aam
jbe,pn
xor
test
pop
es
push
push
idivl
xor
jg
mov
rcll
jae
mov
push
sbb
jp
iret
pusha
int
lods
popa
or
ja,pn
sbbl
loop
movsb
mov
in
xor
test
rcll
cs
ret
lahf
cmc
lds
pop
cs
outsl
lock
sbb
cwtl
jns
hlt
sub
xchg
sub
pop
mov
mov
test
addl
loope
push
pusha
mov
cmp
or
jo
lods
popf
enter
aad
and
jae
sbb
xchg
std
daa
sbb
xchg
movsl
and
xor
sti
mov
push
xchg
sbb
cmp
and
jns
jo
and
outsl
test
mov
hlt
adc
nop
mov
in
orl
in
in
pushf
jns
ficoms
fsubp
cmp
push
add
mov
or
pop
push
mov
mov
mov
pusha
push
sbb
sahf
sarl
subl
bound
and
cmpsb
lret
pushf
arpl
xor
dec
xchg
sbb
imul
xor
test
pop
ret
adc
jbe
xchg
stos
pop
xor
in
add
push
neg
adc
iret
stos
mov
cmc
call
pop
or
bound
push
into
frstor
sub
dec
cmp
cmpsb
inc
popa
lods
cmc
inc
jmp
xor
xor
data16
dec
push
shlb
cld
fxch
sub
mov
mov
out
mov
inc
pop
or
adc
push
outsl
scas
sub
fcmovnb
stc
mov
sbb
xor
rcrl
sub
cltd
xchg
adc
pop
sbb
clc
hlt
loopne
std
rorb
mov
dec
adc
push
repnz
int
ljmp
out
in
xchg
iret
cmp
jecxz
mov
mov
lret
or
movsb
and
test
sbb
stc
fnop
jo
mov
xor
dec
pop
adc
mov
adc
out
arpl
mov
pop
aaa
pusha
ret
adc
mov
ss
push
push
push
and
shl
and
mov
pop
adc
pusha
pop
sub
lret
imul
mov
xor
add
stc
cmp
cmp
sbb
nop
sub
xor
xor
cmp
pushf
sbb
aaa
mov
adc
outsb
or
jno
bnd
imul
sbb
push
inc
sbb
push
cmp
xchg
pop
and
jecxz
popl
mov
aam
loopne
inc
xor
shrl
ret
jne
sub
mov
push
cltd
mov
mov
mov
lock
imul
jp
inc
dec
sbb
jne
pop
inc
fcmovu
and
call
xor
pop
push
xchg
pusha
mov
push
push
xchg
and
loop
mov
sub
sbb
gs
mov
out
push
dec
out
add
pushf
sbb
sbb
add
cmp
mov
int
xchg
jno
sbb
xorl
push
jne
aaa
lods
loopne
gs
lahf
roll
or
cmp
ljmp
cwtl
aad
pusha
loop
in
jl
lea
xchg
mov
jae
and
pop
imul
push
lds
out
fcompl
mov
subb
pop
test
loop
sbb
repz
add
sbb
adc
lds
pop
pushf
cmpsl
inc
xor
in
cmp
scas
scas
sbb
movsl
lret
mov
inc
cmp
mov
in
jp
in
dec
mov
xor
jmp
stc
cwtl
xchg
outsb
inc
leave
das
mov
rorb
push
mov
rorl
adc
mov
mov
inc
dec
popf
popf
pop
xchg
test
fistpll
stos
pop
inc
faddl
sub
outsb
lock
arpl
movsl
push
pop
cmp
fs
mov
inc
and
push
or
mov
mov
int3
cmp
mov
fnstenv
jb
popa
vmovhps
jns
jg
insl
repnz
jnp
leave
cmpsb
sahf
or
xchg
jb
stc
or
out
xlat
mov
out
clc
ret
and
and
cmpsl
pushf
ret
fistps
ja
or
inc
adc
pop
cld
sahf
inc
push
xor
mov
inc
notb
jbe
popa
mov
inc
fbstp
ljmp
jno
roll
leave
inc
jno
cltd
adc
lahf
cltd
and
lds
aas
xor
jnp
adc
add
cmpsb
jb
iret
icebp
push
fsubr
ss
scas
mov
and
push
fsubr
lock
cltd
add
xor
add
push
xchg
mov
inc
lcall
pushf
shlw
push
and
mov
push
sbb
mov
mov
les
cmp
mov
loopne
add
push
mov
xlat
pusha
stos
inc
pop
xor
jge
adc
loopne
inc
push
loope
cld
push
loope
lahf
or
jb
dec
call
dec
sarl
in
test
enter
shr
enter
jmp
jl
push
inc
iret
mov
push
cmp
lcall
mov
pop
jb
inc
idivb
lods
adc
sbb
jge
pop
and
xorb
test
push
jno
push
repz
inc
cmp
ret
loope
jp
push
stc
sbb
xchg
cmpsl
andb
mov
lock
out
clc
test
test
push
jmp
shll
leave
inc
enter
pop
stc
add
dec
jg
add
inc
notb
aam
and
push
in
into
cltd
gs
mov
xor
push
iret
push
mov
push
shll
je
lret
sbb
jge
sub
outsb
fwait
jp
or
inc
into
jae
clc
fstp
nop
cmp
mov
push
in
add
sub
cmp
sbb
ret
sub
ds
rcl
pop
adc
xchg
mov
xorb
scas
adcb
cmpsl
enter
enter
sahf
in
ljmp
rcl
rorb
jmp
aaa
dec
clc
jmp
testb
sub
stc
jmpw
inc
leave
push
mov
push
mov
jns
imul
cmp
or
flds
push
mov
push
mov
jns
imul
cmpsb
sub
sbb
jmp
push
mov
push
mov
js
push
cmp
or
jae
leave
and
scas
and
data16
jbe
pop
push
adc
and
xor
pop
imul
inc
dec
sbb
dec
xchg
xchg
cmpsb
lcall
in
hlt
cli
adc
adc
adc
xor
inc
dec
push
pop
fs
push
mov
jbe
in
ljmp
cmp
sub
pop
jp
adc
dec
test
ror
cltd
cltd
mov
je
adc
push
inc
test
push
jmp
insb
gs
call
sub
in
adc
cltd
fldenv
and
sbbl
xchg
xchg
mov
pop
push
mov
test
popa
jns
mov
inc
insl
jae
lret
push
mov
xchg
dec
inc
cmp
xchg
es
xor
les
mov
push
stos
je
mov
cld
jp
push
call
push
movsb
adc
jmp
jge
inc
lds
xchg
pop
je
xchg
mov
outsb
mov
or
in
adc
imul
stc
add
pop
jnp
fldcw
pop
jl
rolb
les
les
and
push
dec
dec
pop
fs
call
mov
test
in
in
enter
jne
inc
push
push
and
cmp
popw
sbb
pminub
test
mov
sbbl
ss
xor
cmp
or
xor
jmp
out
loope
rorl
hlt
mov
es
inc
inc
xor
cmp
push
pop
fs
jp
mov
lret
in
hlt
cli
add
adc
and
xor
inc
dec
push
pop
fs
jp
mov
lret
in
hlt
cli
add
xlat
dec
jge
pop
aam
sub
sub
stos
pop
cmp
popa
jmp
outsl
adc
xor
loopne
mov
das
sahf
dec
xor
add
sub
xor
mov
stc
jg
xlat
fistpll
lods
and
fildll
lcall
mov
dec
rcrl
dec
inc
and
sbb
xor
iret
loope
leave
aaa
rcrb
add
shlb
nop
aaa
out
sub
add
jmp
gs
rcrl
add
fucomi
lahf
and
xor
push
push
sub
xchg
cmp
mov
and
xor
mov
mov
lds
cmp
add
lcall
icebp
adc
xchg
adc
lods
daa
push
jne
mov
in
mov
orl
out
sub
mov
hlt
rcrb
xchg
inc
in
div
pushf
push
pop
out
push
jecxz
lea
add
pop
divb
mov
mov
xor
lods
jo
dec
lahf
pop
cmp
cmp
gs
int
adc
push
sub
mov
jns
pushf
inc
icebp
int3
enter
jne
mov
cmp
idivl
sbb
jo
les
xchg
pop
loopne
orb
andb
mov
out
cmp
push
xorl
push
mov
jo
fchs
jae
mov
jne
mov
dec
mov
push
adc
lret
imul
clc
xchg
lahf
jle
mov
add
jnp
mov
scas
sbb
sbbl
fstpl
inc
test
sub
jg
icebp
jmp
mov
pop
mov
inc
les
cwtl
pop
mov
ret
outsl
jmp
test
inc
xlat
pop
mov
jmp
jmp
aad
dec
add
mov
jp
pop
and
movsl
sbb
pop
inc
cli
sbb
cmpsl
insb
test
mov
addr16
push
into
insl
jo
cltd
in
pop
sqrtps
sbb
jle
in
mov
divl
dec
xchg
aas
and
adcb
pop
cs
mov
add
je
hlt
lahf
push
mov
out
jle
testl
fisttps
pop
subl
and
lods
repz
sbbb
inc
test
stos
pop
mov
in
pop
mov
test
call
sub
repnz
aam
loope
xlat
or
decl
leave
seta
inc
loope
sahf
dec
pop
ja
push
pop
dec
jb
sbb
fstl
imul
inc
lock
idivl
in
xchg
mov
dec
push
mov
add
jle
filds
and
sahf
int
fwait
bound
int3
dec
push
push
pop
push
mov
jno
ja
in
and
cld
enter
sub
fcmovb
add
jno
jmp
adc
gs
mov
add
aaa
mov
push
xor
sbb
mov
adcb
add
push
jle
sahf
inc
imul
pop
cmc
imul
cmp
addb
push
and
mov
pop
fcomps
or
cmp
push
xchg
int
xlat
inc
dec
lret
jp
lahf
pusha
xchg
and
add
std
rcll
pop
cltd
adc
call
sub
pop
push
lahf
xor
ljmp
adc
or
sub
iret
fs
xor
and
fisubrl
call
out
push
clc
jo
loope
jo
jg
lcall
sahf
lods
push
dec
xlat
xor
add
fyl2xp1
jne
lea
fwait
enter
es
pop
add
adc
push
rorl
and
adc
dec
mov
or
stc
mov
ljmp
jecxz
fst
inc
stos
insb
or
cmp
shll
out
sbb
sbb
iret
stc
sbb
int3
out
roll
inc
psrlw
lahf
jle
xchg
jnp
mov
pop
sbb
in
rcr
add
fidivl
jnp
xchg
in
mov
scas
dec
jle
cmp
mov
cmp
mov
pop
ds
adc
mov
sub
daa
orb
in
imul
nop
mov
fprem
out
sub
jle
xchg
cs
mov
lea
call
rol
stos
stos
fldenv
lods
push
pop
xor
jle
fists
push
fs
loope
insb
xor
bound
js
fsubs
add
pop
lds
ja
push
imul
inc
repz
gs
dec
aaa
int
jle
dec
stos
in
sub
cmc
xor
std
or
ret
pop
and
je
mov
data16
fnsave
cmp
clc
dec
aas
sbb
and
cmc
lods
dec
mov
inc
push
push
pop
mov
fsubrs
es
mov
sbb
adc
sahf
dec
rorb
popa
cli
inc
jmp
jge
push
mov
fstpl
hlt
lret
repz
jg
test
xor
mov
xor
jle
in
xor
and
cli
loop
out
inc
out
and
push
cmp
in
mov
ds
outsb
xchg
sti
aad
cmp
cmp
mov
outsb
inc
mov
pop
cmpsl
lret
xor
pop
inc
cmp
stc
sub
pop
cmp
sub
cs
das
mov
movsb
jns
or
repz
std
lret
cmp
dec
sbb
push
push
jno
mov
pop
in
mov
pop
xor
insb
ret
movsl
or
sahf
dec
das
mov
sub
leave
lret
adc
inc
adc
dec
in
cwtl
fstl
inc
out
daa
cs
mov
fistps
lea
push
inc
fildl
add
sahf
adc
sbb
insl
xchg
mov
pop
mulb
adc
jg
mov
mov
sbb
cld
out
xchg
movsl
ljmp
cmp
jns
mov
lods
aad
cmc
adc
adc
and
xlat
scas
fwait
ljmp
lods
pushf
and
or
inc
adcb
sbb
fwait
add
out
insb
dec
scas
push
sarl
ds
and
add
and
movl
loopne
mov
out
and
je
mov
nop
xor
xchg
add
dec
jmp
mov
nop
jmp
rclb
mov
push
decb
jmp
sub
jge
lahf
push
es
sbb
popf
push
cltd
shl
fildll
inc
jae
aad
cmc
xchg
out
in
jle
in
lea
dec
mov
scas
stos
push
lods
in
jmp
es
push
cli
or
mov
sbb
add
test
sub
fisttpl
xchg
testb
pop
add
iret
lock
into
xchg
add
pop
xchg
lahf
iret
pop
sub
xchg
cmp
jnp
cmp
aas
nop
jle
xchg
fnstsw
cld
pusha
fdivrl
jo
mov
outsb
call
and
pop
cltd
cwtl
cli
lret
imul
sub
dec
stos
fbld
push
cmp
pop
sbb
pop
sub
mov
mov
push
mov
insb
cs
add
lahf
cmp
jl
and
push
aaa
imul
cmp
sar
mov
mov
cmp
mov
movsl
je
add
cmc
cmc
inc
adc
inc
inc
add
pop
fisubs
in
adc
xchg
cld
bnd
call
cs
add
sub
or
mov
add
orl
mov
fbstp
jp
cmpsl
fwait
lret
pop
std
sbbb
pop
jno
cmp
je
sub
cltd
fsubs
mov
push
dec
fsubrs
dec
xor
mov
sub
and
jne
data16
icebp
shll
dec
xchg
loope
xor
cld
push
jns
mov
cld
leave
mov
icebp
mov
xlat
lock
or
aas
pop
adc
or
cmp
fdivr
add
int3
adc
cmp
mov
adc
xor
sub
stos
dec
lahf
sbb
push
pushf
xor
mov
out
cmc
fistpl
xchg
cmp
or
sub
fwait
ljmp
or
sbb
or
clc
in
cs
not
jge
mov
sub
mov
scas
ja
cld
xchg
rol
mov
es
jo
fmulp
aas
insl
test
out
jno
jl
dec
inc
xorb
sbb
mov
xchg
popf
shll
jg
dec
out
popa
xor
gs
push
lods
pusha
inc
daa
cmc
jmp
xchg
lods
add
cmpsl
dec
mov
addb
enter
and
lods
ret
divl
in
add
stos
push
test
addl
test
hlt
jbe
mov
iret
mov
mov
mov
jne
and
shrl
adc
cltd
mov
pusha
fsincos
inc
sti
mov
mov
jbe
loope
in
ret
ljmp
test
aam
xchg
daa
das
test
mov
xchg
push
les
mov
out
jge
in
cwtl
in
lods
dec
enter
rolb
mov
sarb
push
cmpsb
push
pop
mov
jns
add
daa
scas
test
shlb
dec
mov
mov
push
pop
popf
data16
loope
test
jns
mov
dec
fbstp
push
sbb
dec
push
popa
mov
pusha
pop
or
xor
repnz
jae
push
mov
mov
sub
jno
sbb
into
cmp
movd
sahf
mov
xchg
mov
inc
adc
shlb
sti
cmpsl
daa
xor
loope
jno
insb
jp
xlat
mov
dec
stos
scas
iret
xchg
mov
mov
jg
mov
jno
in
stos
insl
jne
xlat
in
js
outsl
popf
mov
cmc
add
out
cwtl
in
cltd
push
push
int3
sub
popf
int3
xchg
lds
jnp
jae
movsb
adc
bound
repnz
inc
insb
jp
jmp
pop
fld
pop
mov
hlt
adcl
jp
mov
test
mov
mov
push
sub
in
out
mov
ljmp
adc
inc
xor
push
test
fwait
std
jecxz
orl
sub
stc
jle
inc
lret
outsb
test
shll
inc
das
and
int3
fimuls
or
repz
js
cld
aas
mov
negb
inc
fstpt
and
das
and
imul
mov
or
mov
cwtl
jae
xor
jg
ds
stc
pushf
shrl
mov
cltd
ja
fbstp
add
xor
push
call
icebp
cmp
ss
mov
xchg
dec
stos
lcall
xorl
movsl
pop
je
clc
mov
pop
mov
dec
and
mov
sbb
or
pop
mov
push
ds
jno
and
mov
sti
rol
mov
out
adc
sub
pop
sbb
dec
jl
test
sub
pop
sbb
in
sarb
pop
subl
mov
or
inc
inc
cld
popa
adc
inc
cmc
push
and
pushf
stos
add
orl
adc
sub
andps
jg
in
rcl
stc
cmp
je
cmc
cmp
jae
sub
push
fld
cmc
scas
call
pusha
add
mov
push
sub
push
ret
pusha
outsl
clc
sbb
xor
and
xchg
mov
inc
cwtl
test
pop
cs
push
mov
jge
and
fildl
je
sarb
stos
in
loopne
sbb
movsl
cmp
shlb
and
mov
popf
ja
addr16
fimuls
dec
dec
adc
sub
xchg
scas
popa
xlat
pop
or
adc
mov
mov
xchg
jo
sbb
sbb
add
jb
cmc
and
pop
sub
adc
iret
loopne
lcall
dec
or
rcll
mov
mov
sahf
xor
test
inc
das
mov
movsb
dec
rclb
and
xor
or
cld
pop
xor
fidivrs
jp
pop
icebp
arpl
mov
lcall
es
imulb
cmp
or
fptan
mov
pop
lret
shlb
das
add
outsb
dec
repz
or
mov
jns
dec
push
lds
aad
adc
sbb
test
inc
push
loopne
and
sbb
push
aam
popa
test
jmp
jb
nop
jl
lahf
mov
aad
pop
out
xchg
stos
je
dec
xor
das
ds
or
sbb
repz
cld
mov
cmp
mov
add
cmp
or
movsb
lret
push
inc
fsts
insb
cmp
add
out
cltd
aad
xor
adc
sbbb
push
shlb
int3
test
cmp
cmc
divb
stc
ja
js
push
cmp
fidivrl
sbb
arpl
std
cld
inc
arpl
push
repz
shll
pusha
xchg
movsb
and
pop
mov
lock
bound
mov
mov
das
push
inc
out
cli
inc
xor
leave
xchg
popa
and
lock
sbb
jp
popf
fidivs
and
pop
add
xchg
js
sub
divl
jl
or
xor
mov
loopne
incb
lret
push
scas
test
push
outsl
jecxz
and
pop
in
ljmp
push
xor
pop
mov
cmc
jg
shlb
outsl
jb
add
push
pop
cmpsl
fdivrs
int
sbb
jp
loope
daa
xor
es
out
jo
loopne
xor
inc
cld
or
out
hlt
addr16
mov
mov
std
xchg
outsl
hlt
sbb
imul
sub
xor
cmp
adc
ds
xor
pop
daa
mov
addb
sbb
popa
scas
orb
addl
inc
push
adcb
xchg
jmp
mov
test
jp
repnz
mov
gs
imul
testl
fwait
dec
in
mov
and
cmp
cmpsl
cmp
into
add
or
data16
insl
dec
shrl
dec
mov
inc
pop
sbb
icebp
movsb
cmc
mov
insl
jns
sub
jle
or
jl
aam
sarl
rcl
xor
push
pushf
int
aad
sbb
out
push
popf
pop
int3
push
arpl
in
inc
sbb
aaa
mov
inc
fnsave
jl
jl
leave
pop
push
add
xlat
jle
push
pop
fisttps
shrb
cli
jg
nop
cmpsb
subb
push
inc
sbb
pushf
ss
mov
pop
push
sbb
or
cmc
push
out
out
dec
adc
jns
lcall
xor
jbe
mov
in
sub
aam
push
jbe
jg
and
pop
stos
add
sahf
imul
or
cmpl
call
out
mov
mov
xor
bnd
lret
pop
mov
movb
jnp
mov
cmp
sbb
xchg
lock
xchg
push
rorb
mov
aas
inc
mov
mov
sbb
aaa
shlb
pop
add
ja
mov
inc
in
lea
mov
pop
fldenv
adc
ffree
mov
add
es
xor
jge,pt
and
push
jae
pop
test
sahf
mov
xlat
jnp
and
mov
out
mov
and
add
test
adc
mov
addr16
dec
or
cmp
sub
mov
sbb
cltd
jl
sbb
je
je
mov
scas
cmp
std
neg
sub
and
scas
orb
cmp
mov
lods
dec
data16
lret
ds
add
sub
inc
sub
pop
push
mov
pop
es
test
imulb
fidivs
or
dec
in
sub
dec
mov
sahf
xor
or
pusha
pop
cs
mov
xchg
stc
mov
push
sub
dec
push
pop
inc
aaa
xchg
sub
xor
es
mov
mov
jne
dec
sti
jae
das
inc
rcrl
pop
mov
addr16
insb
hlt
add
mov
icebp
stc
les
ret
jae
xchg
cltd
push
ja
nop
jnp
sub
jb
repz
xchg
shll
or
push
xchg
orb
mov
pop
xchg
dec
xor
mov
fidivrs
imul
sub
dec
jno
lods
mov
or
xchg
in
fstps
inc
das
push
jo
jle
cld
push
or
mov
inc
orb
mov
xchg
mov
repnz
inc
xchg
test
dec
add
js
dec
adc
sti
das
rorl
inc
mov
rcrb
enter
in
mov
mov
icebp
dec
inc
jae
pop
jge
loope
push
sub
xchg
in
mov
sub
nop
into
jg
gs
lcall
mov
mov
adc
fbstp
pushl
push
xchg
mov
push
add
repnz
push
or
insl
in
mov
mov
lods
inc
bound
cmp
jae
in
call
push
mov
mov
mov
fs
mov
mov
imul
push
out
in
clc
sbb
and
stos
int
jae
cmp
imul
repnz
je
int3
das
mov
nop
popf
flds
lock
push
lods
sub
loop
repnz
test
gs
or
fnsave
lret
jle
or
jno
cwtl
stos
imul
xchg
andb
loopne
movsb
xlat
out
iret
out
jns
mov
xorl
mov
addr16
in
mov
fisttps
sti
add
sub
add
ss
daa
aad
jmp
divb
in
sbb
imulb
hlt
aas
out
leave
xor
fsubrs
pop
inc
aam
fdivl
scas
iret
addb
inc
push
test
lock
mov
mov
xor
pop
addr16
leave
je
pop
stc
pushl
add
cmp
int
or
push
and
mov
add
cmc
inc
loopne
mov
or
scas
cld
mov
cmp
mov
sti
push
jecxz
fwait
push
sahf
adc
in
lods
pop
add
std
cmpsl
lret
mov
daa
add
addb
push
mov
or
pop
xchg
insb
pop
in
mov
fistpl
ror
jecxz
adc
out
push
push
stos
movsl
repnz
and
jl
and
pop
ss
pop
inc
pushf
push
push
mov
popf
mov
dec
je
cld
inc
jge
add
push
ljmp
jae
jl
adc
push
pop
icebp
mov
leave
push
pop
jp
out
xchg
lods
pop
mov
xchg
fsubl
shl
mov
mov
iret
mov
dec
fsubrp
mov
xor
cli
in
pop
adc
and
xor
adc
adcl
mov
sbb
fdivs
fs
mov
fldl
dec
adc
pop
fcmovnb
ljmp
cmovge
jnp
jno
inc
sub
movsl
add
lcall
sbb
inc
cmp
scas
or
ljmp
fs
mov
das
sub
scas
lods
jne
add
and
push
cld
cli
sbb
out
frstpm(287
scas
js
mov
lock
insl
cld
outsb
xor
pop
popf
jg
pop
mov
leave
test
mov
or
pop
adc
jle
or
cld
lea
jno
lcall
cmpsb
lds
leave
cli
and
test
and
mov
xchg
xor
outsb
push
ret
push
jp
mov
cwtl
les
xor
mov
jmp
dec
call
push
out
sarb
push
fidivs
pop
scas
xchg
dec
mov
arpl
mov
xorb
sub
fildll
xor
adc
out
icebp
shlb
out
in
pop
pop
cli
pop
adc
push
cld
jecxz
adc
fsubrs
fistl
push
cld
gs
mov
or
addl
mov
mov
inc
lret
idivb
jecxz
mov
and
stos
leave
mov
lret
cmp
outsb
push
out
fsubs
lods
lcall
pop
imul
jecxz
movsl
mov
cmp
rorb
loopne
lea
mov
fldcw
sbbb
sti
cmp
or
out
mov
xchg
sbb
sub
lcall
cmpb
jbe
aam
in
xor
inc
mov
xchg
xor
test
out
cmp
sub
add
repnz
repz
lods
clc
push
xchg
les
jp
js
dec
cli
dec
mov
xor
jne
cmp
mov
clc
fldcw
fisubrs
mov
fisubrs
lods
cmp
data16
shrb
ja
add
jns
test
iret
sbb
arpl
mov
inc
push
pop
mov
rcrb
into
xchg
pop
mov
aaa
mov
into
dec
pop
adc
pusha
into
in
je
lret
or
test
pushf
pop
popa
cmpsl
pushf
sbb
pushf
sub
xchg
xchg
push
cld
mov
rcrl
out
pop
xlat
lods
adc
ret
dec
scas
rorb
shl
jecxz
jp
mov
pop
push
mov
popa
sbb
das
xor
inc
dec
push
pop
fs
jp
mov
lret
in
hlt
cli
add
adc
and
xor
inc
dec
push
pop
fs
jp
mov
lret
in
hlt
cli
add
adc
and
xor
inc
dec
push
xor
jp
mov
into
rcr
in
lds
xor
and
adc
xor
inc
dec
push
pop
in
hlt
mov
push
stos
mov
mov
pop
mov
mov
imul
cmp
leave
sub
sbb
or
js
push
mov
cwtl
imul
cmp
lret
sub
sbb
or
mov
test
test
cwtl
jno
pusha
clc
adc
add
xor
and
sub
jecxz
pushf
or
js
pop
imull
dec
int3
xor
out
rcl
xor
pop
inc
out
xchg
in
leave
scas
cmp
sub
loop
adc
sbb
loope
test
sub
mov
lods
xor
stc
idiv
xchg
int3
pop
mov
ficomps
pop
popf
sbb
xchg
aad
dec
jl
sbb
jl
cltd
adc
mov
repnz
mov
lods
es
bound
xchg
sub
and
inc
jno
mov
mov
jns
cmp
inc
jle
popf
lods
jne
sub
xchg
adc
test
push
mov
cmp
sbb
push
adc
mov
enter
cld
and
sub
in
sbb
dec
test
cwtl
jns
arpl
or
sbb
xor
and
shrl
rcrl
or
js
push
sub
pop
icebp
push
lcall
mov
jo
jns
push
aam
xor
pop
std
sbb
jl
jp
sub
mov
mov
jns
push
divb
test
testl
call
cmp
leave
sub
sbb
or
js
push
mov
cwtl
imul
cmp
leave
sub
sbb
or
js
push
mov
add
xor
jl
xchg
aas
rorl
sbb
cld
repz
pop
sub
mov
sub
jmp
stos
jo
push
sbb
scas
andl
rcll
cmp
jle
sub
ret
lds
inc
mov
lret
pop
push
lret
adc
push
mov
pop
outsb
mov
test
push
mov
out
xchg
xor
dec
loop
inc
jb
mov
push
lret
push
xchg
fwait
mov
jnp
push
ret
mov
xorl
add
pop
loope
push
jno
inc
rcrb
cmp
sbbb
mov
pop
push
mov
scas
outsb
insl
je
aaa
bound
stc
fiadds
and
in
adc
fnsave
dec
inc
jg
icebp
enter
add
or
cmpsl
xchg
sahf
lahf
sti
testl
pop
sub
loope
pushl
les
repz
cmp
sub
loope
or
in
addr16
xchg
jl
aad
inc
push
std
mov
out
xbegin
arpl
xor
cmp
xlat
aam
add
out
aaa
sbb
divb
enter
scas
cmp
push
mov
pop
nop
and
imul
jb
or
int
int
lds
outsl
and
push
push
arpl
nop
push
dec
inc
or
nop
push
outsb
int
xorb
mov
mov
xchg
sbb
adc
push
add
or
xor
dec
jl
mov
lret
dec
mov
add
jae
mov
iret
subb
lods
stc
int3
cmpsb
and
aam
push
pop
jns
js
jb
ljmp
in
mov
hlt
mov
mov
lret
mov
sti
mov
add
cmp
fisubrs
pop
xor
cmpl
das
xchg
or
test
push
add
cmp
lds
sub
xorl
push
dec
shll
pop
xchg
lea
cli
cwtl
jmp
pop
repz
icebp
lret
lea
loop
jp
and
and
cmpsl
pop
ja
aaa
outsl
xor
push
jnp
scas
daa
insb
cmp
sti
addr16
or
mov
pop
jbe
xchg
fwait
xor
je
sbb
jb
aad
popf
je
push
cwtl
mov
mov
jmp
mov
stc
fchs
or
and
and
insl
arpl
mov
mov
mov
cmpsl
xor
jne
jo
mov
in
xlat
mov
movb
xor
out
divb
pop
stc
ret
and
jp
push
icebp
imul
jp
popa
inc
ficoms
icebp
sarb
and
xor
mov
cltd
sti
flds
mov
xlat
stos
inc
arpl
and
push
push
cltd
lods
enter
mov
stc
test
mov
cmpsl
add
and
jl
enter
in
dec
lret
lcall
daa
mov
add
add
es
push
fidivs
scas
test
aam
js
cs
scas
pushf
cltd
mov
cmp
xor
xor
add
or
jnp
lcall
or
sahf
mov
add
imul
jl
and
dec
push
cli
imul
sub
ja
cmp
lahf
pop
xor
ds
mov
dec
lret
mov
nop
adc
ret
ret
adc
int
ja
les
icebp
lea
call
pop
inc
sbb
mov
adc
out
out
popf
push
lret
scas
adc
pop
out
inc
pop
cmpsl
movsb
jns
lcall
xchg
shr
pop
cmpsb
pop
inc
pushf
cmpb
pop
loop
and
pop
lret
dec
jb
mov
pop
adc
cmp
adc
add
aam
lret
or
pop
mov
push
pop
test
subl
sahf
iret
jg
lds
push
adc
rcl
cmc
jno
notl
stos
jnp
and
or
xor
add
dec
jnp
jnp
pop
jmp
mov
jp
xlat
cmpsb
mov
fbld
mov
pop
out
iret
inc
shr
xor
pop
fstpl
sbb
mov
cmpsl
cmc
jo
push
dec
sub
fildl
mulb
lods
jns
xlat
inc
mov
je
shll
dec
aad
nop
xor
stc
fisttpll
decb
pop
xor
cmp
jp
shlb
orb
cmp
pop
adc
pop
and
xor
ret
clc
mov
ret
xor
sti
fsubrl
dec
sbbl
arpl
mov
mov
rorb
jb
pushf
movsb
sub
idivl
jnp
and
mov
cmp
sub
loopne
jmp
rolb
leave
fidivs
lcall
movsb
fmuls
mov
fs
cmc
pop
add
ret
shlb
mov
shlb
or
pop
mov
mov
loopne
lds
cltd
ror
in
cmp
ds
call
insl
fs
in
lret
int
xchg
mov
sub
dec
std
subl
or
addr16
int
mov
test
adc
adc
xlat
stc
mov
movsb
push
sbb
sahf
pop
stos
push
outsb
out
pop
xchg
cmp
mov
ret
and
out
mov
int3
push
movsb
jecxz
rorb
jg
in
popf
and
mov
pushf
lds
dec
push
test
ja
push
jb
push
mov
push
inc
call
push
mov
push
outsb
and
pop
std
inc
stos
jg
xchg
mov
mov
scas
ds
xor
sub
scas
push
xor
pop
sahf
mov
xor
adc
lahf
imul
or
mov
es
jne
inc
out
addb
cmp
mov
dec
fbstp
push
les
pop
push
push
jge
imul
push
sbb
mov
in
in
inc
out
roll
into
sub
lods
cmpsl
sbb
pop
mov
jo
push
pop
std
into
add
call
mov
test
and
cltd
sbb
out
push
and
push
pop
dec
clc
insl
xchg
jbe
jnp
cmpsl
pop
push
pop
out
xor
insb
ret
pop
mov
jne
mov
inc
mov
mov
jns
push
data16
ss
lods
jmp
pop
mov
fdivs
push
fs
repnz
movsb
mov
cmp
mov
or
sahf
cld
xbegin
and
jle
xor
push
cwtl
and
jno
mov
shrb
test
outsl
sub
jnp
mov
je
xchg
adc
orl
lcall
or
outsl
lret
aas
xor
inc
int
mov
stc
iret
jo
addr16
idiv
test
cmp
adc
shll
mov
inc
jae
jb
mov
sub
icebp
fisubs
and
add
enter
lods
test
adc
negl
add
sub
loopne
ret
mov
xchg
fsubrl
xchg
push
call
cmc
pop
mov
sub
mov
pop
pop
xchg
in
test
push
in
out
inc
outsl
xor
pushf
hlt
flds
popf
and
adc
mov
or
cmp
mov
jl
fdivs
cmp
inc
into
imul
mov
or
stos
cli
addl
jbe
ljmp
pop
out
ljmp
test
xor
cvtdq2ps
adc
mov
jecxz
lahf
shrl
pop
mov
sub
mov
incl
ret
xor
sbb
ret
mov
xlat
stos
xor
and
pop
push
cmp
std
cmp
jg
out
insl
cli
adc
test
das
or
into
lcall
xchg
dec
lods
gs
hlt
out
mov
mov
push
dec
pop
jg
pop
and
jle
test
dec
mov
dec
dec
xchg
cmpsb
mov
push
fcomps
mov
pop
ja
out
sbbl
rcrl
adc
rcrb
addb
or
push
pop
cmp
inc
clc
cmp
jge
call
adc
push
push
int
xchg
ficoms
push
rol
pop
push
sti
in
push
inc
seta
push
iret
xchg
cmp
sbb
jp
cmp
ljmp
insl
sahf
xchg
jbe
insb
mov
cmc
pop
outsb
pop
add
xchg
xchg
jg
fwait
int
or
jns
sbb
mov
or
xor
mulb
insb
push
mov
jne
jmp
std
cmp
test
or
imul
and
test
xchg
mov
out
and
hlt
in
cmc
ja
and
aaa
add
jmp
mov
or
leave
in
shll
cltd
adc
je
jecxz
dec
jns
clc
mov
mov
mov
pop
and
insl
add
mov
hlt
rcrb
sarb
clc
or
ljmp
adc
lahf
dec
cmp
push
jb
je
dec
daa
sub
xor
mov
mov
jmp
sti
push
add
call
cmp
ret
and
imul
std
rolb
fcoml
jne
xchg
pop
data16
scas
sub
adc
scas
jne
loope
dec
inc
mov
fsubl
adc
stc
add
movsl
mov
sti
cli
dec
sub
bound
xor
test
dec
je
lock
int3
lahf
xchg
add
pop
pop
mov
push
loopne
adc
xorps
mov
or
aad
ret
jne
stos
leave
and
imul
shlb
aas
pop
pop
xchg
push
rclb
outsl
lret
jl
xor
cmc
cmp
jge
push
pop
repz
in
cmp
outsl
and
fisubrs
loope
pop
in
mov
popf
repz
mov
incl
lds
mov
mov
xchg
mov
sbb
ret
or
call
std
sub
pop
test
mov
xchg
insl
mov
popa
shrb
aad
sti
sbb
dec
dec
fists
loope
sub
gs
jmp
fidivl
jbe
jl
lods
cmpsb
fldl
fcmovb
movb
or
and
inc
xlat
mov
mov
fcmovbe
shl
and
xchg
jno
pop
icebp
and
or
ds
and
push
cmp
in
xchg
daa
jne
pop
jae
nop
je
stos
xchg
or
xor
insl
insb
into
cmpsb
jl
loope
ret
dec
adcb
xchg
jmp
leave
lods
imul
inc
jecxz
enter
push
adc
test
xor
jbe
mov
sbb
push
adc
lods
sbb
mov
sbb
jb
jae
repz
shll
lahf
push
push
mov
jle
ss
enter
mov
or
scas
into
pop
test
imul
jmp
int
cmp
fidivrs
scas
cmpsl
jmp
repnz
or
movsb
jp
mov
mov
int3
mov
jno
out
movsb
inc
jb,pn
add
in
out
arpl
mov
sub
sub
pop
mov
shrl
sti
mov
pop
pop
jg
fnstenv
jae
jmp
and
pushf
imul
lock
xor
shl
inc
fcoms
mov
not
inc
xor
mov
or
ss
and
iret
push
inc
imulb
adc
gs
xor
loope
decl
ret
mulb
hlt
dec
xchg
imul
adc
xchg
push
test
cltd
push
into
pop
cmp
imul
icebp
cmp
mov
test
pop
xchg
imul
dec
insb
push
test
sub
insb
jo
inc
cwtl
mov
xor
xor
loop
cmp
ss
mov
cmc
mov
rorl
int3
xchg
cmp
stc
inc
mov
out
vmovaps
pop
aaa
das
xchg
insb
and
stos
movsb
mov
out
scas
outsb
sbb
jl
cs
and
add
pop
movsb
jle
fistpll
rorb
push
insl
cmp
inc
xchg
jle
sar
loopne
dec
call
jne
loopne
xlat
mov
cltd
pusha
mov
enter
sub
cmc
fmuls
adc
cmp
iret
sbb
push
into
scas
and
fcmove
pop
xchg
add
in
pop
hlt
ret
inc
push
inc
fistps
movsb
mov
xchg
push
cmpsl
ror
out
imul
cmpsb
fstpl
push
ds
jmp
push
xor
mov
data16
std
shld
jne
in
pop
outsl
ljmp
mov
out
out
jle
bnd
mov
aas
lcall
pop
sub
cmp
sbb
cmpsl
mov
outsb
push
loop
incl
out
aaa
fldl
push
adc
push
push
dec
push
mov
sbb
and
sub
inc
loop
cmp
testl
add
adc
ljmp
movsl
xlat
arpl
adcl
dec
push
push
outsl
push
std
ds
lds
pop
mov
or
sbb
jecxz
push
jmp
dec
out
mov
enter
int
sub
jmp
nop
fndisi(8087
inc
sbb
mov
sub
cmc
js
in
mov
shr
push
xchg
xchg
rorb
push
xor
out
or
fcmovnbe
dec
mov
mov
and
cmp
sub
das
int3
gs
pop
sbb
testb
mov
jnp
push
mov
mov
rorb
xor
or
push
add
icebp
sti
je
out
movsb
xor
jecxz
xchg
xchg
mov
inc
mov
jle
pop
arpl
or
push
mov
jge
lods
int
mov
xor
dec
lods
xchg
add
cld
jo
fsubrp
pop
es
pop
mov
mov
mov
mov
sbb
lock
aad
gs
bound
mov
pop
paddsw
adc
fcmovne
xor
mov
repz
mov
xchg
mov
adc
or
mov
leave
xchg
mov
imul
mov
adc
testb
fimuls
fisttpll
jl
testl
fwait
sbb
xor
lock
jle
int3
push
aaa
pop
xor
imul
push
push
or
push
mov
stc
adc
jnp
lea
push
add
lahf
cwtl
xor
jge
or
jae
shlb
add
bound
sbb
inc
test
inc
or
scas
dec
addl
fmuls
ret
sbb
mov
sbb
lea
lds
imul
repz
outsl
add
adc
cld
aas
mov
sub
lret
cmp
push
sti
rcl
mov
gs
test
fsubrs
add
mov
fmul
fs
jp
or
cmp
mov
or
data16
cmc
push
adc
jle
int3
and
sbb
push
repz
mov
mov
das
fsubrs
les
sbb
imul
push
lret
inc
cmp
fadds
mov
das
lods
push
stc
in
mov
sub
pop
bound
mov
pop
jg
pushf
push
test
xchg
mov
fdivrl
mov
out
shrl
jmp
add
adc
out
adc
daa
enter
sbb
cs
mov
clc
daa
push
call
maskmovq
testl
repz
and
sbb
in
dec
je
into
mov
inc
mov
scas
in
mov
xchg
push
gs
lods
loopne
jbe
jmp
loope
mov
nop
jbe
outsb
cltd
insb
mov
push
inc
test
fstpl
push
cmp
jae
dec
les
cltd
sahf
ljmp
pop
dec
xchg
out
arpl
cld
push
dec
rclb
int3
pusha
fwait
sbb
push
xor
hlt
aas
shll
jmp
pop
pop
test
mov
mov
lret
jne
shll
cmp
mov
sbb
shll
insl
and
in
stc
jmp
or
push
mov
loope
cltd
jecxz
iret
push
shrl
pop
js
jle
cwtl
push
lods
notb
jnp
sub
cmpsb
call
sub
add
repnz
or
jle
mov
js
add
scas
ror
cmpsl
jl
push
shll
hlt
fsubs
insl
dec
ret
les
and
mov
rcr
stc
cmp
or
sub
aad
mov
dec
rclb
mov
rolb
push
cmp
jle
push
dec
dec
test
mov
mov
cmp
xor
ljmp
test
shlb
cmp
sbb
cli
xchg
pop
cmc
adcb
out
add
mov
popf
xor
fsubl
pop
lds
addb
add
lea
dec
sub
inc
out
sbb
pop
xchg
inc
cs
and
rcr
add
jmp
movb
mov
dec
xchg
mov
mov
push
and
push
hlt
je
ret
rclb
neg
daa
stos
scas
jno
cmc
adc
pop
cld
in
xchg
das
outsb
out
mov
push
scas
int
leave
iret
jecxz
test
mov
xchg
xchg
repz
enter
mov
or
xorl
jl
int3
mov
sti
mov
pop
mov
loop
dec
js,pt
cmp
add
outsl
mov
jmp
stc
mov
lcall
push
popa
fstl
fmull
je
or
int
ret
mov
ret
lcall
sub
fs
sbb
adc
add
or
or
test
call
insl
push
dec
mov
mov
ffreep
daa
mov
adc
dec
sub
jae
divl
dec
movb
jmp
lret
jge
pop
scas
jg
dec
loope
stos
cmp
sub
nop
out
mov
jl
sbb
mov
dec
pusha
mov
pop
or
out
ja
shrb
and
cltd
sbb
loopne
pop
jb
lods
adc
pop
inc
loop
dec
mov
mov
shll
mov
mov
add
xchg
sub
cmp
iret
test
dec
jle
ds
leave
bound
lock
and
mov
add
sti
inc
movsb
mov
dec
add
cmpsb
jg
std
cmpsb
repnz
lret
push
mov
xchg
into
and
sub
jle
clc
cli
dec
ja
jp
pop
movsl
inc
call
mov
ljmp
xchg
push
pop
sahf
dec
rclb
and
ss
pop
mov
cli
xchg
icebp
es
enter
pop
sub
loopne
fnstsw
pop
repnz
mov
cmpsb
cmpsl
arpl
mov
ss
bound
clc
sub
jecxz
std
jno
pop
or
test
inc
ja
inc
push
popa
test
arpl
insl
pop
rorl
stc
js
mov
dec
hlt
insb
jp
mov
inc
repnz
stos
mov
xor
jge
mov
adc
push
inc
cld
insb
xor
scas
pop
imul
fldl
stos
or
fnstcw
fildl
pop
subb
incb
stos
jle
xchg
icebp
fldt
shrb
movsl
cmpsl
testb
jnp
cmpl
jmp
sbbb
shll
movsb
jbe
dec
outsb
xor
sub
lods
test
mov
shrb
adc
adc
or
and
hlt
ret
sbb
cmc
insl
nop
cwtl
lret
lahf
inc
cli
push
cmp
pop
mov
lcall
out
or
jecxz
mov
mov
mov
xchg
pop
jmp
hlt
add
jne
iret
fmull
push
push
mov
movl
mov
fwait
and
cmp
arpl
shrl
mov
mov
nop
xor
cmc
jno
adc
aam
outsb
jge
cmc
dec
loop
mov
xor
jns
pop
cmp
xchg
out
stos
push
push
jnp
lret
mov
fimuls
push
fldcw
shll
mov
sbb
jmp
scas
pop
or
leave
mov
cmp
mov
xchg
add
int
add
js
adc
and
mov
pusha
lsl
sub
call
sahf
movsb
cmp
rcll
pop
imul
and
imul
pusha
lea
add
add
cmpsb
lods
and
or
movsl
inc
int
push
cmp
cld
cmp
movsl
mov
add
loopne
push
int3
roll
jo
fs
cs
cmp
jg
loop
enter
insb
add
cmpsb
jns
fwait
pop
loop
dec
and
in
mov
loopne
and
lahf
je
jo
push
test
cmp
inc
or
cmp
es
pop
push
pop
testb
hlt
sub
sbb
rcrl
xchg
sbb
sub
cmp
leave
sub
sbb
or
js
push
mov
cwtl
imul
cmp
leave
sub
sbb
or
js
push
mov
sbb
jns
or
sbb
sub
cmp
sub
sbb
or
js
push
mov
cwtl
imul
cmp
leave
sub
jmp
sbb
push
cmp
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
push
jo
lahf
jbe
data16
pop
add
inc
stos
sub
aad
les
imulb
out
xchg
dec
xchg
outsl
cmpsb
jg
popl
jbe
mov
push
push
ss
es
shufps
das
out
xchg
and
jg
sbb
mov
push
jecxz
add
out
shl
jl
jo
dec
xchg
sbb
ss
sbb
jg
daa
icebp
jbe
pminsw
clc
push
push
lods
daa
push
or
movsl
cld
in
loope
sbb
loope
mov
cmc
fwait
add
into
push
and
scas
into
mov
or
das
rorl
loopne
div
test
mov
xchg
inc
pushf
aam
cld
dec
jns
push
mov
or
outsl
push
dec
popa
mov
popa
pop
jle
stc
mov
adc
add
lock
dec
pop
sbb
ret
dec
xchg
add
cld
fwait
cmp
jmp
lcall
into
call
push
pop
dec
jle
subb
and
test
scas
add
rorb
jno
movsb
sti
xchg
popl
jbe
data16
iret
push
fbstp
xor
fdecstp
aas
out
xchg
arpl
adc
frstor
xchg
jae
imul
test
push
adc
sub
cs
push
and
xor
adc
mov
arpl
mov
pop
popa
pop
jecxz
fisttps
int3
adc
flds
xor
add
push
stos
push
fbstp
out
es
shufps
das
out
xchg
dec
xchg
outsl
cmpsb
jg
popl
jbe
mov
push
fbstp
out
es
shufps
das
out
xchg
dec
xchg
outsl
cmpsb
jg
daa
dec
jmp
sbb
data16
mov
iret
adc
xchg
mov
sti
pop
into
xchg
and
push
xchg
in
jne
push
mov
int3
mov
sub
mov
test
pop
leave
into
scas
jb
mov
push
hlt
div
inc
and
scas
hlt
and
cmp
arpl
mov
ljmp
mov
cli
mov
sub
loopne
out
jne
inc
leave
jnp
les
in
mov
not
int
pop
dec
xor
jge
mov
outsb
dec
push
pop
and
dec
pop
les
fadd
in
jp
in
add
lock
adc
xor
mov
sub
push
mov
xchg
arpl
addr16
jmp
lea
mov
mov
rol
add
push
scas
mov
ret
shll
xor
push
dec
sub
in
push
xor
ret
jge
push
mov
cs
test
mov
mov
xchg
bound
xchg
repnz
in
mov
pop
leave
or
imul
shll
icebp
mov
pop
or
gs
stos
aam
dec
push
xor
ss
adc
out
pop
popa
mov
and
mov
stos
mov
mov
mov
movsb
add
cmc
shrb
loop
lahf
sti
cwtl
mov
jnp
loopne
out
stos
cmp
cld
stos
out
icebp
mov
or
dec
in
rcrl
xchg
inc
mov
xor
cmpsl
ljmp
and
stos
sub
aas
fs
mov
mov
scas
mov
orl
jns
xor
cld
addb
cmp
add
add
and
pop
mov
mov
sbb
mov
mov
mov
xchg
push
pop
sbb
cmpl
scas
and
pop
es
ljmp
lahf
sbb
mov
dec
orl
xor
mov
lret
cmp
lahf
sbb
stos
inc
fs
xor
stos
push
dec
inc
je
push
out
aad
inc
add
xchg
jnp
and
sbb
inc
mov
sub
pop
sbb
mov
movb
fwait
push
shlb
ds
push
out
lahf
mov
cmc
lahf
int3
fildll
inc
or
jp
jns
std
into
xor
inc
mov
sbb
sbb
dec
inc
sbb
xor
outsb
cmp
and
adc
jns
aad
mov
rclb
cmpsb
loopne
pusha
fnstcw
inc
pop
add
in
dec
leave
xchg
scas
in
jecxz
xor
mov
cli
push
pop
pop
arpl
dec
jbe
pop
hlt
arpl
stc
nop
push
dec
ret
iret
in
jecxz
jo
jo
gs
lcall
ret
cmp
mov
jnp
pop
outsl
stos
cmp
cmp
sbb
add
or
stos
daa
data16
in
xor
lret
ss
or
andb
es
aas
nop
mov
or
cld
loopne
ds
sub
dec
push
or
outsb
dec
cmp
bound
out
addr16
pop
adc
xchg
jp
das
xchg
and
call
in
mov
jae
in
mov
xchg
cwtl
out
and
jnp
and
loop
arpl
adc
subb
arpl
mov
into
mov
push
in
enter
ss
mov
mov
or
int
fsubrl
adc
test
ret
xchg
pop
scas
fmuls
inc
call
mov
mov
inc
in
repz
lods
lret
aam
insb
sarb
clc
cmp
dec
lret
popf
outsl
jg
fs
xlat
adc
xchg
mov
fisttpl
daa
fisubrs
jge
sbb
xchg
enter
in
jnp
icebp
mov
std
lcall
xor
mov
movsb
es
in
mov
je
or
and
adc
jnp
jo
xor
ja
dec
popa
pop
lcall
xlat
mov
cmpsb
ljmp
popa
lock
lods
pusha
in
es
jecxz
mov
lods
push
adc
xor
ljmp
pop
and
fstl
gs
add
xchg
xchg
xchg
dec
mov
daa
insb
adc
adc
lret
xchg
sub
adc
pop
sbb
xchg
jmp
mov
fdivs
fwait
or
scas
push
mov
stc
pop
xchg
mov
orb
adc
xor
pusha
lea
push
pop
mov
aaa
in
jp
xorl
mull
sahf
mov
ljmp
outsb
jnp
insl
adc
int
jge
aad
ror
jle
pop
add
push
out
or
icebp
scas
ds
mov
rorb
and
xor
and
les
mov
pop
jnp
and
jecxz
xchg
out
ret
pop
jecxz
fwait
pop
cmpl
dec
push
insl
xor
ficomps
pusha
rep
sahf
or
mov
jnp
inc
sub
popf
fnstcw
aas
mov
fnstenv
in
lea
rcll
call
das
jp
dec
gs
push
add
mov
rcrl
cwtl
outsb
cltd
dec
or
inc
inc
outsl
scas
push
push
jle
cmpsl
rolb
stos
mov
xchg
inc
sbb
in
into
lock
mov
jmp
dec
dec
data16
jp
fwait
cmp
xor
adc
push
lretw
ljmp
sub
loop
push
in
outsb
pop
in
loopne
pop
movsb
lods
mov
jle
and
rcl
cmp
xor
adc
sub
mov
push
popa
adc
or
jmp
ljmp
outsb
sbb
mov
xor
mov
mov
jb
add
fidivrs
negb
or
dec
push
aam
push
scas
lods
or
mov
stc
shl
shl
mov
sub
sar
dec
ret
mov
push
jle
dec
jl
dec
es
jbe
adc
gs
fs
mov
addr16
add
xchg
mov
sub
or
movsb
xchg
sub
out
ret
push
inc
shrb
sti
xor
xchg
push
adc
cmc
mov
jle
ljmp
push
dec
pop
pop
loop
dec
cld
addl
adcb
push
push
fsts
cmp
pop
cmp
push
ja
mov
push
lea
gs
jecxz
insb
jns
lock
sahf
add
pop
and
sbb
adc
lods
stos
push
negl
ljmp
repnz
and
pop
mov
insb
call
mov
push
inc
shr
push
adc
mov
cmpsl
jne
shlb
jb
popa
lods
stos
and
sarl
std
or
inc
mov
movsb
insb
outsl
inc
sub
jg
dec
fs
sub
rolb
fiaddl
jae
xor
fidivl
push
push
inc
cmpsb
mov
adc
aad
and
insl
pop
arpl
ret
inc
rcr
add
and
sahf
jne
push
cltd
negb
dec
push
adc
shrb
mov
jle
lcall
mov
xchg
mov
shll
cli
mov
sub
pop
jp
mov
cmp
lahf
xchg
mov
jle
arpl
call
mulb
arpl
loope
arpl
inc
insb
pop
cmp
testb
sbb
insl
test
sbb
push
enter
repnz
pusha
arpl
add
sahf
or
push
roll
fidivs
mov
repz
adc
clc
in
cltd
jns
push
aam
scas
in
mov
ja
add
pusha
stos
popa
testl
jmp
pop
jmp
adcl
pusha
movsl
out
dec
sub
push
sub
pop
fadds
mov
cmp
rolb
pushf
mov
shll
mov
mov
sub
imul
xchg
outsl
jp
shll
pop
shl
cwtl
jg
xor
xchg
jo
inc
out
push
loopne
xchg
xor
icebp
push
cmp
fnstsw
scas
outsl
hlt
aad
scas
xchg
jnp
lds
xor
cmp
mov
icebp
lahf
sub
test
cld
and
mov
mov
inc
data16
sub
xlat
push
inc
xchg
sub
imul
sbb
data16
mov
or
mov
sarl
movl
rorb
mov
test
inc
mov
pop
test
push
or
xchg
insl
mov
roll
jl
sub
fsts
push
or
jae
bound
sub
ja
enter
addr16
pop
jmp
test
aad
sub
inc
sub
fstpl
push
pop
lods
xchg
mov
adc
jno
push
cmpsb
cld
lds
imul
cmp
rclb
shrb
insb
xlat
es
aas
dec
adc
inc
inc
jae
adc
nop
cmp
xchg
stos
lock
lahf
adc
xchg
incl
mov
mov
sbb
shrb
das
jno
mov
popf
shlb
shlb
adcb
jge
sub
test
push
mov
cs
inc
pusha
gs
mov
jecxz
icebp
pusha
sahf
adc
cmp
imul
xchg
lahf
mov
inc
push
mov
rcll
imul
out
adc
cmp
in
rcll
sub
lock
jae
je
cmp
cmpsl
add
inc
adcb
adc
std
gs
mov
aaa
push
das
add
in
stc
push
and
popf
pusha
stos
mov
xor
stc
pop
dec
mov
imul
in
jle
ficoml
fmull
jne
xor
xchg
add
addb
sahf
lret
push
push
pop
xchg
xor
fnstenv
in
lahf
lock
xchg
sbb
mov
xchg
mov
push
and
pop
push
dec
and
xchg
xorl
scas
sub
xor
sahf
push
push
imul
fcomps
arpl
lret
pop
daa
sahf
push
fisubl
xchg
mov
rorl
and
in
sub
mov
jbe
xchg
push
sbb
add
test
or
cwtl
adc
iret
adc
dec
punpcklbw
add
stos
lea
cmp
inc
mov
movsl
arpl
push
add
jb
pop
cmp
call
movsb
lods
push
fwait
jp
test
cli
inc
aad
test
xor
pop
divb
cmpsl
pusha
or
mov
cmc
dec
sub
ljmp
sbb
js
fldl
mov
lea
orb
sub
mov
aad
add
testb
pop
ror
test
or
or
xchg
mov
insb
push
cs
add
insl
mov
fmuls
pop
xchg
popa
sub
shrb
stc
and
leave
inc
pop
xchg
dec
adc
jecxz
and
adc
orl
push
jo
xchg
jmp
pop
sub
ljmp
and
pop
push
bound
sbb
insl
push
flds
rorl
sar
clc
fs
mov
sbb
sub
sahf
imulb
movsl
mov
insl
inc
add
pop
inc
fisttps
inc
and
mov
out
jmp
jge
fwait
pop
cmp
int
and
andl
imul
cld
ja
or
mov
mov
dec
stos
mov
or
adc
ds
add
pop
cmpsb
cltd
test
sbb
test
cmpsl
aad
ss
xor
xor
leave
mov
sahf
xor
adc
xlat
loop
cmp
outsl
xchg
stos
nop
push
mov
es
sub
cmp
scas
pop
cwtl
fcmovnbe
rcrl
mov
sbb
jbe
icebp
imul
mov
dec
scas
jae
xchg
xor
sti
mov
dec
jmp
adc
dec
dec
leave
cmp
test
lahf
sbb
loope
inc
lcall
mov
or
fwait
test
ret
mov
ja
mov
xchg
sub
sbb
dec
cmp
clc
xlat
cmpsb
inc
movsl
cli
pop
std
das
out
out
inc
jle
roll
rorb
sti
cmp
mov
xchg
imul
dec
inc
jns
imul
and
and
jnp
fdivrs
dec
or
lcall
mov
jge
pop
xchg
stc
shll
js
rcl
add
cld
xor
repnz
test
loopne
inc
sti
mov
adc
mov
adc
xor
xor
fists
outsb
daa
pusha
out
pop
or
loopne
ret
dec
rolb
mov
fadd
xorl
adc
fwait
arpl
dec
cmp
sbb
mov
inc
gs
sahf
shll
dec
fadds
inc
clc
movsb
rorl
aam
jp
in
leave
xor
xchg
sbb
jp
rcr
imulb
xchg
dec
sub
shll
lods
adc
xchg
xchg
imul
mov
aaa
pop
in
dec
outsb
inc
fsubrs
xchg
test
stc
outsl
mov
test
int
push
add
leave
mov
out
aas
add
in
add
adc
lcall
mov
test
mov
addr16
dec
jns
push
repnz
cmc
imul
iret
dec
ljmp
cmp
insb
xor
push
iretw
movsl
jno
bound
ss
mov
jmp
sub
cmpsl
outsb
inc
and
mov
stc
aam
mov
inc
jl
inc
mov
adc
aad
jecxz
xor
push
ja
out
push
jmp
inc
jecxz
sub
and
sbb
loopne
push
enter
fiadds
dec
cmp
xor
pop
inc
mov
cmp
dec
popa
out
mov
in
test
inc
test
es
shr
mov
mov
lret
mov
add
das
jns
adc
pop
imull
dec
xchg
pop
push
sbb
push
lcall
xlat
hlt
popf
pop
popa
sub
in
sbb
xchg
push
mov
cmp
sub
outsb
sbb
sub
jns
cltd
ror
or
add
mov
dec
sbb
fwait
and
in
aad
xchg
je
pop
in
jb
test
jp
int
lds
cli
xor
out
push
addr16
fisubs
fcomps
ljmp
iret
lea
cli
rorl
mov
fwait
xor
outsb
rorb
loop
push
repnz
shr
inc
and
movsb
fistpl
pop
lret
adc
outsl
sub
mov
in
and
push
mov
and
daa
mov
inc
shrb
adc
arpl
or
and
or
add
js
jmp
frstor
dec
into
imul
jg
add
mov
inc
add
adc
cli
aam
jns
xchg
in
leave
mov
movsb
cmp
pop
mov
int
orb
pushf
int
addr16
and
or
sbb
fsubrl
lcall
loope
xor
push
mov
mov
inc
jns
leave
sti
jl
aaa
cmpsl
nop
inc
dec
push
test
sbb
lret
loopne
push
scas
test
je
es
mov
mov
add
or
int3
dec
insb
mov
sub
jl
iret
push
movsl
mov
pop
data16
rcll
mov
mov
movsb
mov
push
bound
jb
cmp
xor
rcll
fiadds
push
jbe
stos
ficoms
popa
sbb
mov
fmuls
aas
or
pop
clc
fs
testl
popa
icebp
push
cmc
idiv
fmull
mov
jbe
jbe
cltd
pop
xchg
pop
ljmp
adc
fmull
cmp
mov
mov
rcrb
adc
mov
push
xor
push
in
in
fs
das
add
mov
xchg
adc
cs
adc
push
stos
sti
and
add
push
xchg
mov
imul
mull
pusha
inc
repz
rcll
je
mov
repz
test
push
sbb
fdivrs
jle
das
sbb
ljmp
shrl
roll
sbb
lahf
push
test
sbb
xchg
outsl
into
sub
xchg
int
add
adc
stos
mov
lcall
mov
imul
outsb
lahf
pop
mov
imul
std
add
cmp
into
inc
xor
xchg
and
xchg
inc
push
mov
in
inc
cli
sbb
inc
ja
sti
jmp
pusha
and
xor
fwait
push
arpl
add
sub
jge
or
in
aam
imul
out
dec
mov
das
add
not
cmp
xchg
in
jmp
mov
int3
shll
xchg
jmp
std
jmp
fldcw
enter
mov
xor
push
add
add
imul
daa
lock
cld
lret
push
ret
xchg
or
cwtl
cmp
dec
mov
fcomi
lock
inc
insl
push
xchg
add
jp
lret
stos
cmc
cmpsl
aam
rcll
les
jp
push
mov
sbb
shlb
stos
inc
stos
sub
fadd
push
mov
testl
incl
testl
out
sbb
in
push
sub
cmp
ljmp
cmpsb
popa
fwait
push
mov
xor
fmulp
inc
scas
pop
int
dec
jo
inc
sbb
push
jae
xchg
mov
stos
mov
popf
inc
stos
popf
cmpb
adc
adc
mov
and
sub
cmp
dec
leave
shll
pop
dec
sub
or
jge
dec
cmp
pop
xchg
xchg
repz
push
add
mov
in
xchg
int3
jle
aaa
ret
iret
xor
sbb
daa
cmp
shl
inc
nop
xor
adc
adc
mov
pop
test
jnp
mov
sbb
push
and
scas
jb
sti
clc
jo
lock
sti
fwait
dec
ret
cltd
movsb
dec
adc
push
cmc
test
ss
adc
fcompl
aam
push
or
stc
xchg
je
ja
sub
push
arpl
pmaxsw
mov
cmp
jge
fidivl
adc
xlat
mov
push
mov
loope
pop
je
fstp
icebp
jb
jne
push
cwtl
arpl
notl
decb
int3
testb
mov
xor
sbb
stos
sub
pushf
stos
sbb
or
lahf
fnsave
dec
insb
xor
jns
pop
xor
cmp
push
movsb
inc
inc
and
test
sbb
push
xchg
in
push
push
sbbb
inc
xchg
int3
cltd
dec
cli
rol
push
mov
insl
test
push
add
ltr
dec
dec
pop
jg
nop
pop
pop
jmp
push
out
test
push
and
dec
js
inc
dec
call
imull
arpl
xchg
gs
jnp
adc
outsb
mov
sub
gs
lea
mov
sbb
mov
jnp
adc
fidivl
adc
bnd
dec
andb
leave
cmc
push
push
cmc
scas
sbb
pusha
xor
js
int3
bound
imul
push
sbb
pusha
mov
xor
or
xor
popa
xor
fadd
out
mov
fsubrl
aaa
popf
and
nop
fdivs
dec
xchg
pusha
stos
xor
xchg
adc
adc
cmc
add
or
cld
xor
xor
mov
jmp
and
clc
mov
shl
xchg
insl
inc
ljmp
mov
jmp
sbb
cmp
xchg
push
fs
outsb
lcall
dec
in
push
pop
add
sbb
adc
xor
insb
dec
stos
xor
lahf
jo
push
negb
dec
js
xchg
div
and
int
fnstcw
popa
and
lret
jno,pt
popa
stos
shrb
es
ljmp
fdivrl
popf
inc
shlb
mov
inc
stos
xor
jnp
jnp
pusha
inc
jg
push
xor
jnp
je
xchg
sub
testl
aaa
sub
inc
or
sub
fwait
add
pop
pop
pop
rol
mov
or
mov
jge
sub
sbb
adc
sub
jecxz
rcl
ret
cs
mov
push
jns
movsl
dec
fdivl
repz
test
add
test
lea
cmp
rcrl
cltd
stos
call
lret
pop
xchg
arpl
cmp
cmp
add
inc
les
cltd
dec
insb
jnp
xchg
lock
sub
push
mov
inc
push
shlb
mov
dec
inc
icebp
lods
xchg
test
or
sbb
adc
fwait
inc
and
mov
push
mov
dec
icebp
lods
loop
inc
movsb
pop
push
xor
push
je
stc
jmp
cltd
pop
popa
pop
or
rol
mov
movsl
mov
inc
jno
fnstcw
mov
rcrl
rcrb
jle
adc
into
cmp
and
push
flds
sub
dec
nop
xlat
aaa
add
push
iret
push
fbstp
out
es
shufps
das
out
xchg
dec
xchg
outsl
cmpsb
jg
popl
jbe
mov
push
fbstp
out
es
shufps
das
out
xchg
dec
xchg
outsl
cmpsb
jg
popl
jbe
mov
pop
ja
out
es
xlat
pop
imulb
out
xchg
dec
xchg
dec
cmpsb
jg
popl
jbe
mov
push
fbstp
lock
loope
push
mov
push
jne
cmp
inc
push
lea
dec
or
add
in
shrl
clc
xchg
call
cmp
inc
pop
xor
push
in
aad
lods
cmpsl
clc
xchg
call
jl
dec
out
pop
dec
sub
cmp
cwtl
cmc
in
fisubrs
rorl
cmp
adc
sar
or
ljmp
and
add
cs
jne
out
add
or
push
ljmp
inc
test
pop
aad
sti
jns
gs
jmp
test
sarb
push
pop
fdiv
ja
inc
mov
inc
sbb
xchg
mov
pop
sub
inc
stos
jge
pop
xor
push
lea
push
dec
push
mov
and
push
xchg
popf
lock
lcall
lret
push
cmp
and
or
sbb
stos
jl
mov
mov
popf
add
lods
iret
aad
mov
std
adc
push
pusha
popf
jo
mov
popf
enter
clc
subl
or
dec
inc
inc
pop
xor
rcrb
cmc
sbb
pusha
int3
mov
mov
mov
xor
ss
cmp
pusha
stc
lcall
mov
cmpsb
cmpsl
mov
scas
jmp
jg
jecxz
xor
sbb
mov
mov
stos
lds
icebp
push
cmp
xor
sbb
adc
mov
mov
mov
movsl
clc
xchg
call
cmp
inc
pop
xor
push
in
aad
enter
call
jbe
shlb
adc
daa
mov
fldt
lahf
int
xchg
dec
inc
pop
xchg
fcomps
add
icebp
mov
dec
js
lods
dec
aaa
subb
xchg
xchg
jae
lods
jmp
or
adc
inc
adc
push
and
arpl
pop
mov
push
test
mov
mov
mov
loop
int
fxtract
sub
mov
sub
pop
mov
jle
ljmp
iret
popa
cmpsb
enter
inc
add
fdivr
ret
test
xor
xchg
add
out
mov
pop
idivb
push
jmp
and
lods
movsl
mov
mov
and
jnp
cs
jae
mov
les
sub
les
mov
xchg
jne
xor
icebp
into
jl
faddl
mov
sbb
mov
imul
inc
aad
sar
movsl
into
dec
inc
nop
test
sub
test
mov
fiaddl
xchg
push
xchg
jbe
scas
pop
xchg
dec
nop
pop
inc
push
in
inc
adc
mov
sbb
popa
jnp
or
dec
loop
jge
iret
xorb
fbstp
or
push
rcrb
xlat
push
loop
cltd
loopne
cwtl
mov
mov
and
xlat
inc
idiv
jbe
inc
int
aaa
cmc
xor
pop
repnz
push
imul
inc
aaa
push
cmp
movsl
inc
add
mov
cmpb
mov
xchg
sbb
fisttpll
adc
xchg
lret
imul
add
pop
push
adc
jecxz
ret
inc
loopne
cs
mov
pop
xlat
ja
js
or
outsb
stos
ss
mov
jp
pop
and
jb
xchg
jl
out
pop
xchg
imul
sub
cmp
pop
sub
cmpsl
call
mov
cmp
shr
shl
lea
dec
mov
shrl
or
bound
cmpsb
jnp
adc
je
pusha
fstpl
outsb
ss
add
mov
cmp
sub
fisubl
fistl
jmp
jg
lods
lahf
push
add
jmp
movsb
into
xchg
out
pop
adc
mov
outsb
and
pop
loop
pop
outsl
lea
cmpl
jbe
into
jae
int3
inc
cmp
dec
cmp
stc
movl
leave
xchg
or
push
sarb
aam
ljmp
mov
sub
popa
icebp
pushf
xchg
mov
cmp
bound
mov
in
stos
orb
xor
test
inc
jno
add
jno
loopne
mov
loope
arpl
add
sbb
aad
or
ret
pop
cmc
xchg
fneni(8087
lcall
insl
xchg
push
jns
pop
xor
and
mov
inc
fsubl
push
pushf
movsb
roll
leave
aaa
jp
rol
jo
lods
lea
cmp
push
mov
ss
stc
cltd
pop
push
je
push
test
mov
sub
mov
jmp
xchg
or
mov
sbb
enter
and
mov
mov
fdivl
push
pop
out
lret
lea
mov
jns
aad
arpl
mov
xchg
mov
sbb
or
jecxz
in
sti
adc
add
and
jg
pop
insb
lret
or
jge
push
mov
jge
xchg
cli
add
scas
je
and
cmpl
test
add
js
repz
pop
xor
and
or
inc
clc
test
inc
mov
add
inc
sub
mov
mov
xchg
inc
xchg
cmpsl
loope
mov
test
cmpsl
pop
cli
insl
xor
loope
push
pop
cli
cwtl
out
push
sbbl
push
mov
repz
fucomi
int3
dec
push
lahf
loopne
adcb
jge
cmpsb
aaa
jne
adc
jbe
add
aad
imul
sahf
in
hlt
mov
dec
push
jle
xlat
pop
faddl
cmp
pop
and
jb
add
mov
cmp
inc
fs
jns
test
push
jne
push
sbb
jecxz
push
and
xor
pop
sub
sbb
divl
out
dec
in
cmp
lock
fstpt
movsl
push
in
mov
and
jb
insb
cs
cmp
in
into
cld
lods
adc
inc
push
or
push
mov
or
sub
dec
and
push
jno
jno
push
or
sbbl
adc
sub
pop
adc
lret
xchg
push
lret
fcmove
jge
adcb
iret
es
aam
add
lret
mov
sbb
int
leave
sub
push
lods
imul
xchg
fimuls
xlat
in
cmp
cmovns
lods
enter
inc
inc
adc
insb
push
sbb
aas
int3
push
adc
jbe
scas
stos
loop
lds
mov
rcll
cmp
adc
arpl
and
lock
pop
jns
adc
jmp
ret
add
ret
dec
inc
push
cwtl
xlat
pop
test
sbb
sbb
or
mull
dec
shl
sbb
mov
test
xchg
sub
ret
jle
jne
pop
fwait
out
insb
jecxz
or
xor
mov
and
scas
sub
int3
cmp
fdivs
mov
sti
faddl
inc
adc
cmp
cmpsl
ds
sbb
cmp
push
fcompl
pop
jle
sahf
push
test
cmp
inc
in
push
jle
aas
jbe
push
sbb
ret
mov
fsubl
jp
push
jmp
push
ror
push
cmp
test
xlat
notl
dec
sahf
push
test
adc
int3
popf
repnz
imul
pop
and
into
inc
lods
jb
test
adc
inc
sbb
les
addr16
and
cmp
gs
mov
add
out
pop
insb
pusha
aad
mov
pop
cld
cltd
cmp
lret
or
push
mov
inc
ss
sub
mov
xor
cmpsb
xor
cmp
ds
sbb
or
jp
sub
and
roll
mov
push
aaa
cmp
xor
cmp
ja
lret
aaa
xor
out
iret
adc
and
enter
add
dec
testl
xlat
add
insb
jb
adc
fidivs
mov
pop
inc
mov
lock
jp
inc
cmp
adc
sub
add
jbe
inc
inc
in
clc
pop
add
test
jnp
sbb
push
lods
pop
out
inc
out
es
fisubrs
and
sbb
inc
nop
jnp
xchg
mov
pop
dec
leave
push
xchg
aam
jge
add
inc
mov
lret
sbb
add
and
out
lret
dec
shlb
cmp
and
daa
xor
lea
pop
mov
push
outsb
jae
lret
xchg
lahf
push
dec
pop
mov
repz
cmc
inc
fistpl
jge
aaa
jnp
mov
rolb
jbe
or
xchg
jge
lds
mov
pop
nop
sbb
fwait
out
dec
hlt
xchg
inc
lret
jmp
sahf
test
stc
aas
iret
test
inc
mov
pushf
lds
orb
bound
jge
cmc
mov
inc
cmpsl
cmp
lret
inc
lds
jnp
push
mov
jo
mov
and
cmc
cmpl
es
mov
pop
int3
push
sub
call
daa
mov
fs
mov
stos
jge
add
lds
cmc
push
cmp
loop
push
xchg
arpl
push
jecxz
mov
add
ja
sub
xchg
jp
adc
mov
cwtl
lods
dec
inc
sub
add
pop
cli
mov
cmp
fiadds
xor
mov
mov
mov
mov
outsl
xchg
dec
pop
dec
test
xchg
add
push
ret
les
jbe
cmpsl
push
stos
mov
in
xlat
hlt
sub
add
js
ss
sahf
push
outsb
scas
push
mov
cmc
jo
mov
mov
mov
fisttpll
push
jp
popf
arpl
shr
movb
push
and
rorl
ss
cmp
call
cwtl
aas
ds
outsb
xor
jnp
cmc
jle
pop
fwait
xorl
dec
push
repz
fnstenv
or
jge
jle
inc
lds
and
dec
mov
loope
es
orl
mov
or
cs
cmpsl
mov
frstor
sub
ret
js
xor
subb
xchg
popa
pushf
stc
xor
outsb
adc
pop
inc
mov
mov
sub
pop
mov
pop
jmp
mov
fldcw
jg
lahf
adcb
orb
push
pop
sbb
or
xor
sub
adc
rolb
out
int3
or
or
hlt
mov
jnp
push
fnstsw
fmuls
jb
inc
cmpsb
divl
push
cmc
sbb
cmp
js
cwtl
push
cmp
imul
loopne
mov
or
call
fcmovu
mov
pushf
mull
test
loop
dec
std
sub
fcompl
mov
test
mov
lock
or
mov
rcrl
sbb
cmp
xchg
arpl
cmp
call
es
xchg
enter
xor
fcmovnbe
mov
fwait
adc
pop
jg
scas
xchg
lods
or
int3
lods
loope
jmp
test
mov
lds
ret
jp
imul
mov
and
push
mov
imul
loope
test
bound
in
xchg
cmc
add
ret
testl
rcrb
mov
push
dec
jbe
loop
and
xchg
shl
cmp
leave
dec
xor
ja
mov
adc
and
mov
cmpsb
lahf
cli
notl
in
dec
jae
stos
sub
insl
jns
or
lods
mov
and
xor
inc
xchg
jp
cmpsb
xor
pop
or
imul
mov
jle
cmpsb
test
jnp
movsb
sahf
popf
out
out
ljmp
jo
push
lods
in
inc
imul
mov
faddl
cmp
cmp
test
mov
xorl
in
sub
stc
dec
xchg
lea
dec
jno
ljmp
loopne
int3
pop
movsb
push
std
hlt
int3
pushf
xchg
test
pop
push
push
sahf
cmpsb
xor
arpl
js
outsb
mov
and
mov
fsubl
adc
inc
insb
and
add
xchg
push
ret
ss
popf
mov
ds
dec
cs
aam
hlt
fstpl
sub
fcmovu
fisubl
xlat
ljmp
shrl
sub
xchg
filds
cmp
dec
pop
pop
dec
xor
mov
dec
ret
loop
dec
lret
jmp
das
ljmp
leave
dec
loopne
rorb
addr16
mov
sti
push
loop
mov
movsb
and
jne
or
cmp
sub
pushf
xor
testb
sub
ficoms
mov
jecxz
cli
aas
pop
frstor
test
mov
xorl
insb
adc
sub
add
lods
fildll
pusha
ficompl
mov
leave
mov
imul
xor
cmpl
mov
std
pop
cli
fwait
enter
jmp
data16
xor
dec
lds
scas
repnz
stos
pop
jmp
cmp
inc
pushf
pop
aaa
pop
mov
rcr
clc
push
cmpsb
aas
adc
cmpsb
jmp
mov
cs
xchg
or
pop
movsb
lds
fnsave
shlb
sub
jp
aam
jae
rol
or
sub
xor
add
shl
cld
adc
push
stos
jg
sbb
sub
cmp
xchg
shl
pop
pusha
push
sbb
xchg
sbb
pop
cmpsb
xchg
out
add
sub
ffreep
les
scas
fmuls
dec
pop
stc
pop
std
insb
pop
test
in
into
mov
lods
mov
sarl
pop
hlt
inc
imul
enter
jns
into
cmp
sub
aaa
xchg
add
adc
ret
in
mov
movsb
xchg
frstpm(287
aaa
in
test
popa
sbb
xor
inc
gs
aad
mov
inc
rol
sbb
stos
inc
aam
jne
aas
divb
cmp
test
popf
mov
bound
mov
cmp
in
mov
xchg
pop
int
out
cmpsb
xor
into
inc
imul
ss
xchg
sbb
mov
stos
jmp
jecxz
nop
jge
adc
es
shrl
jle
mov
mov
sbb
pusha
mov
notb
xchg
cmp
dec
les
inc
call
gs
adc
mov
enter
out
and
icebp
xor
jae
in
lods
mov
jp
dec
fldcw
and
std
and
push
or
addr16
in
jle
or
es
sbb
mov
popf
and
mov
hlt
jge
cld
jp
push
repz
fs
xchg
enter
int
mov
mov
lock
mov
ss
imul
adc
xchg
jbe
in
sub
xchg
and
lahf
mov
push
loop
mov
lahf
lock
fldenv
pop
insb
test
xchg
pop
pop
and
lods
add
sahf
rolb
fs
ficoml
insb
xchg
mov
std
mov
mov
outsb
ljmp
int
stc
jp
push
mov
aaa
aad
test
fsubs
mov
sub
aad
add
out
or
push
mov
pusha
es
in
xchg
stos
sub
mov
aad
cmp
push
nop
xor
adc
outsb
outsb
fsubrl
mov
pop
mov
mov
or
xlat
cs
addr16
pop
fucomip
fs
test
je
movsl
xor
xchg
enter
or
out
lcall
mov
cmp
inc
add
shlb
fnstcw
push
mov
in
fmul
int3
testb
lds
call
mov
icebp
jle
shl
jae
jne
jp
inc
xchg
push
and
xor
lods
pop
outsl
daa
jg
mov
inc
lods
mov
mov
mul
xor
xorb
cld
outsb
cmp
shrb
loopne
hlt
aas
clc
add
stc
xchg
jecxz
dec
subb
xchg
and
xchg
loopne
and
outsb
xor
and
adc
push
loopne
and
mov
addr16
xlat
cmp
cmp
push
pop
out
push
hlt
fadd
fisttpl
or
popa
pop
jbe
sub
dec
push
mov
sub
sbb
lds
insb
jl
fidivl
pop
add
cwtl
loopne
push
addr16
xchg
repnz
jle
or
es
pop
xchg
sbb
in
xchg
jge
loop
shlb
jns
inc
out
aam
xchg
movsb
pop
push
fsubrl
mov
adc
icebp
scas
adc
bound
cmp
les
in
xchg
dec
mov
dec
cli
add
xchg
insb
pop
dec
inc
mov
popf
or
cwtl
mov
adc
ja
adcl
xor
icebp
scas
leave
inc
add
xchg
adc
mov
ljmp
xor
xorb
dec
push
jge
lret
sub
inc
rcrb
xchg
mov
pop
fstps
daa
fwait
bts
icebp
shlb
pushf
sub
shrb
push
loope
addr16
sbb
mov
in
sbb
arpl
adc
int
movsb
cmpsb
sbbl
adc
scas
lret
adc
hlt
fldt
hlt
xor
sbb
jnp
or
jp
sub
in
icebp
sub
pop
jno
insl
ret
stc
xor
pop
popa
inc
aaa
push
outsl
push
lods
aas
jge
mov
jl
out
clc
int3
mov
cmc
les
inc
or
jg
bound
cmp
cmpsb
push
shrl
fstps
jo
ljmp
mov
std
enter
mov
loopne
test
shl
fs
insl
mov
cwtl
lcall
outsl
lret
ret
pop
xor
adc
jle
or
or
and
jecxz
movsb
inc
xchg
test
mov
dec
adc
sarl
lods
arpl
and
insb
and
inc
fsts
xor
into
icebp
vpaddw
inc
pop
sbb
cld
dec
jo
push
inc
negl
mov
jge
inc
sar
cmc
adc
mov
and
clc
add
and
inc
jno
push
xor
adc
push
push
aas
daa
and
jno
sarb
cld
popa
sub
push
pop
sub
ja
add
movsb
sub
cmp
pop
jmp
fsub
ljmp
inc
push
mov
addr16
stc
aam
cmp
xchg
dec
xchg
sbb
scas
rolb
lods
push
jg
xchg
inc
dec
fadds
push
and
mov
call
mov
gs
loopne
aaa
jmp
dec
xchg
ret
fxch
adc
push
sbbl
jl
repnz
leave
mov
mov
insb
mov
loope
dec
push
sti
call
fmul
popa
push
cmp
xchg
aam
scas
xor
mov
and
test
sbb
jle
xchg
jae
idivb
scas
jl
inc
pop
rcr
or
popa
add
sub
cmp
fnstsw
jmp
inc
and
flds
adc
adcl
test
loopne
out
jl
roll
mov
fwait
setae
jb
and
jg
jle
js
jbe
lcall
adc
cld
loopne
shrb
lcall
cmc
mov
xor
sbb
adc
cmpsb
cmpsl
sbb
cmp
push
fwait
data16
stos
pusha
sub
insb
mov
lret
inc
loopne
jo
insb
loop
jnp
mov
sbb
xchg
push
enter
push
inc
pop
xchg
movq
add
mov
push
pop
dec
pop
and
jo
popa
or
pop
je
sbb
mov
cwtl
add
pop
sub
lcall
mov
inc
and
mov
iret
idivb
cmp
in
cld
push
cmp
adc
cmpxchg
cmp
push
hlt
inc
dec
lret
or
icebp
scas
pop
rol
shll
icebp
es
jnp
movsb
aad
aas
shll
mov
aas
and
sbb
lock
daa
repz
mov
add
push
xchg
inc
add
aad
hlt
or
xor
out
fistpl
add
int3
sahf
push
jae
popa
mov
jle
scas
pop
mov
or
outsb
push
inc
mov
mov
mov
hlt
ret
int3
push
ret
add
insl
jecxz
and
inc
lahf
fs
js
psllq
sub
mov
out
mov
cmp
sbb
and
pop
es
leave
and
xchg
add
mov
push
and
fbld
adc
mov
push
in
int
push
push
imul
repz
popa
jne
cmc
mov
imul
add
ds
jo
mov
adc
xchg
insl
ds
dec
addb
inc
mov
mov
cmp
lret
fdivrs
imul
leave
jecxz
sub
dec
jbe
pop
mov
aad
add
int3
stos
shlb
aas
sti
push
addb
popa
push
ljmp
dec
ret
xchg
aaa
mov
jp
ljmp
mov
xor
subl
add
ret
cld
gs
shr
pushf
mov
jb
or
imul
dec
sbb
xor
insb
incl
sbb
pop
aad
ja
mov
movsb
or
daa
inc
push
sub
sub
in
or
fstpt
cmp
inc
mov
fst
outsb
leave
pushf
shlb
mov
cmp
xor
xchg
popf
xchg
mov
mov
or
and
addl
jle
roll
pop
mov
loop
stos
fwait
dec
dec
fwait
lcall
pop
sbb
cld
mov
sub
fnsave
jae
sbbl
dec
mov
jo
in
xchg
mov
sub
fwait
outsl
push
insl
imul
mov
outsb
xchg
inc
addr16
std
aaa
ds
xor
lret
dec
aam
cmp
imul
rcrl
rorb
iret
mov
xlat
adc
loopne
pop
sbb
movsl
adcl
mov
imul
cmpsl
cmp
and
push
xchg
scas
xor
call
sbbl
inc
mov
and
jbe
stos
lods
shll
test
iret
pop
shrb
cld
xchg
fstl
push
and
xor
push
loopne
jo
sahf
inc
pop
bound
inc
cltd
cs
xor
push
stos
js
xchg
pop
arpl
daa
inc
cmp
das
je
imull
inc
ret
dec
xorb
fisubs
rcrl
and
outsb
add
jecxz
dec
pushf
adcb
cmp
jecxz
pop
loopne
pop
rcrl
mov
push
xchg
pop
add
dec
jae
movhps
pop
sbb
pop
inc
adc
out
stos
mov
sti
rcl
mov
xchg
mov
icebp
repz
jmp
adc
jo
in
sbb
stos
inc
inc
sbb
scas
sbb
push
jmp
cmp
ret
push
mov
dec
jne
ljmp
rorl
add
je
loopne
rorl
pop
ss
mov
sbb
add
scas
rolb
jno
jnp
pusha
cwtl
xorb
dec
push
outsb
pop
mov
xor
cmp
inc
pop
xor
push
in
aad
enter
call
cmp
inc
pop
xor
push
in
aad
enter
call
sub
inc
pop
xor
imul
fdivs
fadds
mov
add
xor
call
dec
adc
test
scas
cmp
pop
cli
sbb
push
mov
addl
add
pop
push
add
push
add
add
sldt
add
add
add
add
add
test
xor
inc
add
add
add
add
add
add
add
add
add
xor
add
loopne
xor
cmp
test
dec
add
push
add
add
add
add
sub
xor
inc
add
add
add
add
add
add
add
add
mov
enter
xor
inc
add
add
add
addb
xchg
add
add
add
add
add
mov
push
add
filds
cmp
push
add
imul
add
pop
add
add
add
add
add
pop
add
mov
mov
outsb
add
add
add
jne
mov
add
or
adc
addb
push
add
add
jl
pop
add
add
lods
add
add
add
add
inc
add
add
in
add
add
sti
add
add
add
add
add
add
test
int
aam
pop
add
add
addb
fiaddl
jl
pop
add
add
add
pop
add
arpl
inc
add
add
add
pop
add
add
add
add
imul
add
add
add
add
add
movsl
add
add
add
add
add
pop
add
add
add
sub
push
add
add
add
or
add
icebp
add
xchg
add
add
add
pop
add
add
add
int
or
sbb
cmp
les
add
lock
add
sbb
pop
add
addb
inc
add
add
add
pop
add
add
add
add
add
add
add
add
mov
add
add
add
add
jl
ja
add
pop
add
jl
pop
add
add
sti
add
add
xor
sbb
pop
add
add
add
add
adc
int
sub
cltd
add
pop
add
add
add
rolb
add
sub
lret
add
add
add
dec
add
add
add
add
add
add
add
add
add
imul
add
dec
add
add
add
add
add
add
add
addl
test
pop
add
add
add
add
add
outsl
add
add
pop
add
incl
xor
jg
jae
jae
incb
aas
add
push
incl
add
add
add
add
pusha
add
add
add
add
outsb
add
add
stos
add
das
add
add
add
add
xchg
add
add
add
add
or
jo
or
iret
add
add
pop
add
adc
add
add
add
add
add
add
add
fiaddl
incb
pop
add
pop
add
add
sbb
bound
movsl
add
cmp
pop
add
or
add
addl
add
addl
sbb
sub
or
add
cli
add
add
loope
add
inc
add
add
dec
xchg
push
jle
push
sub
sbb
mov
stos
ja
push
enter
repnz
test
iret
mov
add
sub
cmp
dec
cltd
pop
push
pushf
pop
ds
cs
xchg
mov
out
lods
xor
push
call
xor
rcll
cmp
mov
gs
out
mov
mov
xchg
sub
fsubrl
jo
cmc
sar
es
adc
in
sahf
repnz
popf
mov
repnz
cmc
push
cmp
out
loope
sti
jecxz
repnz
cli
adc
pop
test
lret
adc
fbstp
sub
idiv
cmp
and
imull
lods
jae
icebp
lahf
dec
lret
cli
aad
dec
cs
jbe
or
shrb
mov
call
and
scas
and
sub
push
popf
idivb
inc
add
inc
imul
dec
inc
push
testl
out
add
insl
or
push
nop
jno
loope
push
jno
mov
push
jecxz
stc
and
adc
das
fdivrl
add
pop
inc
mov
fiaddl
jge
inc
or
popa
test
mov
shrl
xlat
fisubrs
jo
ja
lahf
out
repz
xchg
xor
sub
jl
and
or
xchg
das
lret
push
add
mov
add
and
cli
daa
adcl
notl
call
js
out
cmp
jnp
pop
push
fwait
jge
in
sub
lret
cmp
lds
mov
or
ss
dec
out
stos
pop
into
aam
sbb
sbb
lods
ficomps
jl
jae
sbb
add
test
in
add
jmp
lds
fs
cmp
cli
mov
mov
mov
mov
dec
lods
cltd
mov
shlb
sub
sub
lods
nop
imul
rorb
cmpsl
adc
dec
xchg
rcrb
inc
dec
mov
popa
pop
sub
xor
call
cmp
decl
or
fnstenv
test
xchg
xchg
enter
in
pop
xor
mov
dec
cli
fwait
add
je
fdivs
fidivrl
pusha
xlat
es
sub
imul
inc
push
dec
xchg
mov
push
mov
cli
cmp
filds
mov
sub
or
cmp
push
push
mov
icebp
cmp
or
insl
bound
cmp
call
sbb
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xor
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
dec
clc
add
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
or
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
clc
add
jl
add
nop
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
or
add
sub
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
movsb
stc
add
lods
stc
add
mov
add
mov
stc
add
int3
stc
add
aam
add
out
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
add
add
or
add
sbb
add
sub
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
