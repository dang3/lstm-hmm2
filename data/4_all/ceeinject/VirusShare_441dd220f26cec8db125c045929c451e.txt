adc
decl
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
imul
gs
xor
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
push
push
push
push
call
push
lea
push
push
call
add
leave
ret
xchg
cmp
sub
sbb
or
xor
dec
adc
add
cld
inc
in
jno
popa
int3
xchg
cmp
sub
sbb
or
jl
insb
icebp
pop
loope
adc
mov
inc
in
jno
popa
int3
xchg
cmp
sub
sbb
or
jl
insb
icebp
pop
loope
adc
in
push
test
mov
in
loopne
mov
enter
xchg
imul
pop
sub
cmp
hlt
fdivrl
es
jge
jle
dec
inc
pop
mov
jl
jmp
lods
enter
mov
call
daa
fdivl
popf
outsb
cmp
and
jbe
or
mov
and
lds
repnz
popa
je
jns
or
cmpsb
pop
mov
ss
loope
mov
sbb
insb
add
inc
adc
dec
add
xor
pop
subl
ss
adc
loopne
arpl
in
mov
popa
xor
or
dec
cli
jge
movsb
push
push
icebp
or
inc
inc
fs
cltd
mov
adc
push
cmp
sub
sbb
or
jl
insb
icebp
pop
loope
adc
mov
inc
in
jno
popa
movsl
hlt
cmp
insl
negl
or
sbb
sbb
lods
inc
stc
fs
xlat
mov
adc
sarb
or
adc
sub
data16
iret
and
cmpsb
xchg
and
sbb
andl
shrl
dec
adc
mov
inc
in
jno
popa
int3
xchg
cmp
sub
sbb
or
jl
insb
icebp
pop
loope
adc
mov
inc
in
jno
popa
int3
xchg
cmp
inc
sub
fmulp
add
xor
mov
fmull
and
dec
data16
mov
outsb
add
push
repz
add
xor
sub
xchg
mov
push
movsb
add
sbb
icebp
pushf
jne
add
imul
pop
hlt
cwtl
or
inc
icebp
je
pop
int
mov
mov
push
xchg
pop
scas
jmp
movsb
mov
dec
incl
xor
rcll
jb
iret
fldl
fsts
aaa
adc
push
or
shlb
xchg
dec
inc
fs
cmp
pop
adc
inc
mov
lret
rcrb
jge
pop
jo
sub
fidivl
scas
flds
jb
cmpl
jo
xchg
jbe
sub
shlb
aad
push
test
insb
in
stos
fdivs
xor
mov
push
adc
dec
pop
push
shrb
jae
das
cld
adc
icebp
out
bswap
jge
lock
sbb
xlat
cmp
jmp
rcrb
fstl
f2xm1
xor
xor
imul
outsb
rcll
and
outsb
xchg
stos
ret
push
orb
or
arpl
dec
push
int3
roll
mov
cmovno
push
inc
out
sub
cmpb
adc
aam
loope
cli
fnstcw
mov
mov
cmpsb
sub
adc
dec
dec
out
mov
mov
sbb
ret
sti
xor
lock
pop
xchg
mov
xchg
movsb
adc
dec
add
and
mov
into
jle
lock
out
clc
clc
inc
sub
pusha
jo
cmpsl
push
dec
pop
loop
cs
rcrl
js
cld
mov
jmp
sub
in
and
mov
xlat
add
test
mov
dec
adc
xchg
popf
loope
stos
mov
dec
bound
test
jecxz
aaa
icebp
inc
cli
pop
addb
inc
mov
mov
js
xchg
in
shlb
xchg
jb
cmp
fsubrs
nop
cmc
int
pop
mov
shrl
sub
sahf
mov
xor
push
sahf
cmp
lidtl
fldt
dec
cltd
push
imul
dec
jmp
aad
bound
mov
stc
ret
jl
add
sub
mov
test
in
icebp
xchg
aaa
mov
mov
xchg
les
xchg
ret
jmp
pusha
in
xor
in
and
mov
jecxz
ja
hlt
sbb
jmp
xchg
jno
jmp
dec
repnz
lret
sahf
mov
mov
fs
sarl
mov
scas
arpl
cld
cs
pusha
jne
add
jb
loopne
jmp
xchg
stc
orb
jb
xchg
aad
push
stos
cwtl
pop
xor
push
xchg
in
xchg
push
add
add
push
aas
movsl
ja
clc
xor
je
scas
idivl
ret
add
or
or
adc
inc
dec
dec
faddp
dec
push
adc
rorl
xchg
mov
call
rolb
hlt
fidivrl
sub
xor
loop
pusha
sbb
out
sub
aas
jo
inc
push
ret
and
mov
test
pop
jae
out
daa
or
pop
fdivrl
bound
lret
xor
movsl
and
mov
dec
shl
and
jle
out
cmp
adc
and
fld
inc
mov
pop
in
mov
jb
and
xor
pusha
subb
aad
inc
aas
and
jecxz
and
outsl
in
and
push
sti
test
lret
mov
fcmovne
sub
or
shr
jmp
shrl
in
push
imull
mov
sub
add
push
jno
xchg
mov
mov
jns
in
shr
je
es
mov
mov
jp
xchg
mov
sub
les
das
push
clc
push
dec
jge
dec
mov
pop
pop
and
loop
or
shrb
aad
into
sti
inc
pop
in
dec
xor
ficoml
pop
or
xor
jl
jae
mov
or
leave
add
push
sbb
fdivrs
push
add
sub
jl
call
aam
xchg
cmp
jns
popf
jne
xor
clc
jmp
add
jno
add
dec
repz
ja
das
rol
jle
dec
lahf
pop
insl
cmpsl
aas
xor
push
push
lock
pop
dec
and
jmp
ss
xlat
push
loopne
push
mov
mov
xlat
inc
js
lods
mov
cmp
sub
jle
out
fidivrl
scas
loopne
out
jmp
outsl
clc
pop
cmpsl
incb
xor
xchg
mov
nop
sbb
xor
mov
push
out
xchg
ret
mov
insl
nop
sbb
insb
test
bound
adc
sarl
xchg
stos
mov
das
or
in
and
shll
out
test
addb
lods
stc
roll
adc
outsl
rorl
or
ret
lret
jecxz
leave
test
pop
in
jecxz
xchg
or
pushw
movsl
outsb
out
cmp
xchg
test
and
xor
imull
mov
rclb
sub
and
ss
inc
pop
addl
out
push
iret
js
out
xchg
outsl
fisttps
mov
and
or
testl
icebp
orb
adc
cs
daa
daa
sbb
sbb
insb
jecxz
sbb
jb
xor
insl
or
cmp
push
jmp
push
inc
sub
ljmp
clc
or
pop
rcrl
mov
call
add
cmc
loop
ret
notl
dec
dec
fsubs
adc
nop
inc
pop
push
icebp
rolb
outsb
inc
sbb
fs
pop
out
ret
jmp
out
pop
sub
mov
push
jp
jl
add
adc
aad
outsl
frstor
and
fisubrs
mov
fcomip
cmp
fadd
stos
cmp
adc
mov
repz
leave
addb
and
and
lds
out
sbb
jp
lret
push
clc
aas
cmp
xchg
pop
loope
mov
push
in
fs
dec
repz
sti
jno
dec
lret
adc
and
push
push
cld
xor
xor
pop
and
das
leave
and
ret
aaa
sti
adcl
add
fcos
cltd
ror
pushl
pushf
popa
adc
push
or
xor
movq
fnsave
pop
leave
xchg
mov
aad
in
xor
add
jl
mov
push
sarb
hlt
hlt
cmpsl
cmp
push
mov
add
xchg
out
test
mov
movsl
mov
outsl
sub
and
sub
xchg
inc
or
movsb
scas
and
ret
inc
stos
fisttpl
cmc
sbbl
cmp
repz
cmp
into
jmp
mov
cwtl
movsb
pop
cmp
movsb
dec
xor
loop
and
dec
fdivrs
in
gs
adc
inc
inc
imul
sbb
dec
imul
js
fidivrl
inc
pop
lahf
adc
push
mov
sbb
add
jae
pop
xlat
addb
cmp
push
jecxz
pop
dec
sbb
sahf
fsub
mov
jno
dec
outsl
lds
jl
pop
lret
mov
cmc
add
cmpsl
leave
scas
xchg
mov
or
cmp
fldl
jge
mov
xor
rclb
ss
push
xor
mov
pushf
sub
nop
test
lods
jle
cmp
fstpl
jae
inc
stc
into
jle
test
sahf
jae
cmpsl
fstpt
mov
std
sbb
mov
aam
cmp
cmp
push
in
mov
dec
or
sbb
loope
fstl
mov
adc
loope
cmp
sub
dec
loop
sub
fidivl
jne
cmp
pop
jbe
mov
gs
pop
clc
lret
adc
sbb
sbb
mov
adc
lea
mov
add
cmp
mov
pop
sti
sub
repz
mov
btr
dec
push
add
cmp
mov
jp
test
sbb
icebp
outsl
push
inc
jno
cltd
cmpsl
xchg
lret
and
cmc
mov
outsb
pop
mov
pusha
jo
icebp
nop
fisubl
lds
stos
dec
icebp
stos
mov
jg
and
xor
call
pop
add
in
popf
or
lods
sbb
es
or
sub
iret
sbb
ret
cld
inc
or
icebp
mov
in
loope
lea
jo
int
xor
mov
loopne
lock
fwait
imul
mov
sbb
mov
pop
mov
mov
fstpl
inc
cs
cmp
leave
divl
out
int3
push
push
jp
and
test
jnp
xchg
xchg
vpermilpd
pusha
mov
loope
fmull
loope
lock
adc
les
je
mov
shlb
pushf
sub
mov
aas
stos
ss
adc
movsb
push
pusha
adc
push
sbb
and
out
gs
dec
mov
icebp
and
stc
movsb
sub
or
rcrl
mov
mov
pop
or
push
into
pop
ret
push
xor
push
or
jmp
sbb
dec
dec
cmp
push
movsl
nop
fucomi
scas
dec
out
pop
insl
xor
addr16
outsb
in
pop
ja
sub
rolb
mov
sbb
push
dec
inc
repz
xchg
test
cmp
or
mov
fsubrs
repnz
sub
mov
sub
push
mov
andl
shll
std
ret
push
pusha
call
sub
inc
sbb
dec
arpl
out
inc
mov
mov
mov
out
dec
or
pop
xlat
leave
xchg
and
and
sti
adc
xor
xchg
mov
rcrb
add
inc
lcall
lock
push
pop
aas
gs
sub
push
hlt
sbb
or
inc
inc
outsl
jg,pn
jno
sbb
int
mov
sbb
jl
push
outsb
inc
lsl
es
iret
nop
xor
iret
je
xor
xor
mov
cltd
jle
aad
cmp
daa
test
clc
sub
out
leave
dec
cmp
fdiv
pop
jns
adc
and
fstps
jl
aad
xchg
loop
add
sub
imul
jo
or
sbb
sub
inc
or
sub
mov
mov
scas
jmp
xchg
std
dec
inc
lock
test
adc
mov
out
mov
xlat
fs
out
inc
mov
cmc
and
sub
cmc
mov
mov
jne
int3
rclb
adcb
jo
mov
repnz
hlt
xchg
inc
jg
mov
gs
movsb
pop
push
and
inc
sbb
mov
movsl
adc
dec
fucompp
divb
add
shr
cmpsb
jg
dec
mov
push
loop
mov
mov
rcrb
sub
aad
daa
dec
test
pushl
add
mov
mov
lods
stc
push
jbe
xchg
cmc
xchg
pop
scas
push
cmp
fldl
out
stc
sbb
addr16
mov
lods
cmp
push
xor
jae
mov
dec
dec
mov
mov
and
rcll
mov
ja
fs
adc
mov
xchg
cmp
push
repz
mov
orl
jg
fdivs
jno
add
rcr
cs
es
repnz
das
int
add
inc
test
pop
lods
mov
and
shrb
jp
fidivrs
mov
xlat
mov
jge
leave
cltd
pop
jp
rol
cltd
leave
fdiv
mov
fnstenv
call
mov
fisubl
dec
testb
adc
and
fs
adc
push
lret
and
in
lea
lds
jb
push
jb
jne
dec
sbb
inc
pop
adc
inc
xchg
repnz
loope
or
fsubs
int3
push
mov
insb
cmp
sbb
fdivp
push
mov
push
mov
sbb
mov
add
cmpsb
scas
push
push
js
xchg
js
jno
sub
ret
ds
decl
in
adc
pop
nop
dec
sub
push
out
adc
add
inc
into
pop
les
xorb
mov
cltd
repz
cwtl
fcomp
leave
mov
shll
daa
mov
sub
mov
push
xchg
test
movsl
imul
stos
add
add
popa
xlat
cmp
xor
xor
subl
jae
loop
jne
gs
pop
lods
pop
and
dec
arpl
icebp
adc
pop
pop
xor
xor
in
stos
mov
cmp
jns
lret
ss
mov
scas
sti
int
mov
inc
dec
outsl
scas
repnz
push
popa
dec
sbb
stos
cltd
mov
loop
rcrl
shll
cmp
mov
sahf
lods
jne
push
push
adc
mov
mov
ror
adc
push
push
shrb
icebp
scas
adc
lds
inc
adc
rcrb
test
out
xchg
mov
loop
mov
jecxz
mov
loope
lcall
mov
js
repz
shll
inc
icebp
movsl
jmp
mov
hlt
inc
and
pop
mov
sbb
sub
dec
lods
fistps
xor
jo
sub
jne
adc
cwtl
jbe
mov
aam
sub
add
inc
icebp
cmpsl
cmc
mov
mull
cmc
push
and
mov
in
push
shlb
test
cmpsb
mov
xchg
ds
push
and
addr16
in
cmpsl
in
insl
fsubrp
lret
call
sbb
mov
push
cmpsl
repz
mov
pop
push
xchg
cmpsl
test
out
or
sub
cmc
icebp
out
or
ljmp
sbb
popf
mov
sub
shll
test
imul
insb
lock
negb
dec
test
cmc
or
sbb
aas
pop
cltd
xor
loop
xorl
iret
pop
icebp
and
orl
jne
adc
push
clc
jmp
es
icebp
nop
addb
sarb
jle
sbb
mov
in
mov
cmp
xor
pop
sub
sbb
bound
faddl
aaa
daa
lock
inc
adc
mov
push
stc
jbe
pop
inc
pop
inc
icebp
mov
dec
inc
adc
insl
pop
inc
inc
or
adc
std
push
pop
jnp
mov
jmp
pop
cmpsl
scas
inc
test
jmp
mov
xchg
movsb
out
jns
fwait
pop
cli
inc
push
mov
dec
popa
fstpt
repnz
lcall
test
mov
cmpb
inc
aam
sbb
xor
int
incl
push
and
iret
rcl
je
inc
rcrb
sahf
or
sbb
cwtl
pop
mul
imul
push
mov
mov
mov
jge
loopne
xchg
inc
inc
cmpsb
push
xlat
jns
inc
adc
daa
and
jle
jb
clc
out
push
shl
inc
inc
loope
out
nop
insl
pop
cmp
in
adc
stos
dec
jbe
push
out
push
xor
sbb
push
sub
cmp
xor
ds
mov
sbb
jbe
nop
ret
insl
out
cltd
add
addr16
cmp
xor
xor
mov
pop
rclb
pop
push
xchg
addr16
xor
pop
shlb
add
cmp
insb
stos
jl
clc
jbe
jmp
mov
and
lea
imul
add
pop
ret
or
mov
sub
lret
push
enter
int3
adc
rorb
pop
mov
xor
les
inc
dec
mov
dec
cwtl
sahf
rol
push
sub
dec
mov
aaa
mov
push
in
cmp
stos
into
fwait
cld
xor
jo
cmp
shll
cmpsl
jbe
push
mov
int3
popa
mov
push
or
or
mov
ret
xchg
mov
test
or
shrl
dec
adc
add
setl
in
fbstp
ret
out
mov
cmp
lds
push
enter
sbb
push
iret
in
mov
pusha
xor
mov
sub
jae
nop
inc
push
jnp
jne
push
mov
jns
ja
pop
imul
out
cli
addr16
push
pop
lret
xchg
jnp
fs
mov
mov
xchg
cmp
dec
pop
jne
icebp
ja
loopne
idiv
xchg
or
pop
fsubs
push
pop
add
and
pop
loop
xor
adc
jno
repnz
add
test
fisubs
addr16
fs
je
push
ret
ror
or
call
mov
sub
les
sbb
adc
mov
and
mov
ret
mov
xor
add
ret
lods
pop
shrb
push
or
lret
fmull
xor
lods
pop
mov
lahf
xchg
out
inc
mov
mov
fimuls
add
dec
sub
or
imul
jge
pop
loope
cmc
sub
sbb
movsl
push
and
pop
xor
dec
adc
mov
cmc
xchg
leave
inc
shlb
test
movb
data16
jo,pt
push
mov
iret
in
mov
sub
push
mov
dec
js
scas
push
stc
adc
mov
dec
adc
mov
imul
mov
ret
arpl
std
outsb
and
xor
sbb
mov
insl
lcall
outsb
add
sub
jbe
sub
sbb
or
xchg
and
inc
lret
push
mov
push
lahf
popf
push
mov
mov
mov
int
daa
jo
in
cmp
idivl
mov
in
xchg
dec
jp
fidivl
mov
cmp
mov
add
sbb
rclb
aas
mov
pop
adc
pop
mov
andb
add
inc
jnp
cmc
inc
xlat
pop
push
mov
leave
pop
shll
pushf
sub
pop
adc
add
aas
jnp
outsb
les
mov
pop
je
dec
insl
and
fdivrl
push
jns
jo
lcall
add
shll
adc
cmp
cmp
cmpsb
push
stos
shll
int
cmpsb
push
outsb
imul
fsubl
pop
jle
push
pop
mov
adc
sub
aam
sub
push
pushf
rorl
mov
test
loop
mov
cmpsb
sbb
jns
int
mov
je
pop
pop
jo
xchg
lds
mov
push
ljmp
sar
out
lahf
and
xor
or
fmul
inc
push
popf
sbb
in
sbb
mov
nop
and
sub
sub
sahf
leave
mov
mov
sub
or
cmc
je
mov
popf
scas
hlt
xchg
jnp
repnz
loop
mov
mov
icebp
jae
mov
int
adc
insb
jne
dec
pop
inc
pop
dec
push
rorl
ljmp
loope
js
xchg
inc
add
and
mov
out
xchg
mov
into
das
mov
ja
jmp
and
add
in
or
sahf
clc
arpl
popa
xchg
paddb
mov
cmp
int3
push
daa
lock
sarl
ret
sbb
or
mov
rcrl
adc
cmp
jo
test
cmp
mov
fwait
push
push
pop
stc
xchg
cmp
ror
in
icebp
sti
sbb
cmp
mov
push
mov
int
cli
scas
dec
in
push
pop
add
xchg
mov
nop
push
or
loopne
std
arpl
insl
xlat
ss
sbb
cmp
jmp
jno
ja
inc
xchg
push
adc
or
in
push
mov
rolb
jb
xor
adc
xor
mov
add
inc
cmc
pop
pop
aaa
or
jno
cmp
mulb
outsl
inc
les
sub
cmpb
jecxz
loopne
jne
cmp
adc
orb
xor
rcll
xchg
xchg
inc
mov
jge
stc
movsb
adc
cmp
mov
pop
cli
sbbb
int
sti
loopne
lea
cmpsl
in
mov
ja
scas
sbb
or
mov
add
pop
das
lcall
jno
insl
jo
add
gs
cmp
or
jmp
sub
fiadds
pop
mov
movsb
xchg
popf
cmp
lods
out
adc
adc
aam
movsb
out
mov
loopne
mov
mov
scas
jle
inc
popl
cwtl
sbb
das
das
in
sahf
xchg
mov
mov
loop
push
adc
mov
addl
cmc
mov
lods
xor
or
in
pop
clc
mov
inc
fmuls
fcompl
ficomps
ret
nop
or
push
mov
movsl
xor
sbb
or
jl
insb
icebp
pop
loope
adc
mov
inc
in
jno
popa
int3
xchg
cmp
sub
sbb
or
jl
insb
icebp
pop
loope
adc
mov
inc
in
jno
popa
int3
xchg
cmp
sub
sbb
or
jl
insb
icebp
pop
loope
adc
mov
inc
in
jo
popa
int3
xchg
cmp
sub
sbb
or
jl
insb
jno
popa
dec
out
mov
and
es
adc
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
fisubs
adc
fdivr
sbb
xchg
lods
mov
nop
insl
test
les
xor
add
adc
lea
lods
and
dec
mov
test
pop
xchg
or
aam
cmp
xor
insb
mov
movsb
outsb
xchg
adc
stos
jg
imul
test
lods
lea
sbb
stc
and
or
lods
xor
mov
mov
or
stos
stos
pop
cmp
aam
imul
push
stos
cmp
mov
sti
dec
push
out
int3
pop
mov
sahf
or
movsb
dec
mov
out
insl
imul
adc
sbb
add
lea
lods
rcrl
dec
stc
jnp
sbb
fmuls
les
mov
jo
popa
movsb
add
cmp
pop
into
dec
jge
sub
lds
push
inc
cld
cld
adc
inc
inc
cwtl
add
int3
dec
fdivp
jnp
imul
rolb
sbb
cmc
je
inc
or
movsb
xlat
lods
or
pop
in
pmaxub
inc
mov
jno
data16
leave
sub
mov
orb
outsl
andl
nop
dec
test
ja
jnp
fs
data16
pop
sarl
adc
hlt
push
mov
mov
push
into
push
lea
lods
push
pop
movsb
dec
mov
test
sbb
les
xor
add
adc
lea
lods
push
pop
movsb
dec
mov
test
sbb
les
daa
aas
subl
rorl
mov
ret
adcb
movsb
adc
xchg
xchg
call
push
std
ret
dec
lret
sub
mov
call
lods
cli
mov
or
clc
outsl
inc
sub
cmp
mov
shrb
adc
dec
or
push
lea
mov
sub
cld
in
xor
jmp
xchg
cmp
in
movsl
sbb
daa
or
mov
push
cli
ret
fildll
dec
popa
xor
outsl
outsb
rcr
mov
outsb
mov
stc
fisttps
add
adc
movsb
mov
push
xchg
xor
stos
and
subb
mov
sbbl
std
popa
sbb
dec
xorl
cmp
and
mov
mov
jne
loope
cmp
nop
lds
jne
cmpsb
bound
bnd
adcb
pop
daa
stos
sub
pushf
jne
add
aam
rcl
mov
mov
pop
gs
outsl
inc
add
jae
mov
jo
das
das
stc
data16
arpl
scas
push
cs
shll
mov
mov
xchg
fbstp
lds
pusha
dec
jg
test
ja
shr
imul
sti
sub
stos
xor
adc
push
out
xor
inc
test
enter
popa
je
cmp
shlb
enter
scas
call
pop
xor
sbb
enter
push
and
test
jnp
outsb
adc
int3
stos
outsl
aam
dec
out
dec
jmp
bound
sub
jno
cld
out
pop
mov
push
ja
scas
imul
jns
xchg
mov
fstps
sti
push
xchg
jb
mov
sub
repz
sbb
pusha
test
push
jnp
mov
fwait
jl
xchg
int3
roll
lock
js
or
jne
mov
testl
jg
ljmp
dec
test
mov
dec
lock
xor
or
push
push
mov
inc
out
jnp
lea
cmp
call
jmp
ss
adc
call
int3
arpl
pusha
xchg
enter
faddl
in
dec
adc
pop
aaa
xchg
scas
scas
lock
hlt
sub
cmpsl
jge
mov
leave
lods
bt
cmpsb
jecxz
pushf
push
call
std
xchg
sti
in
adc
mov
dec
clc
mov
gs
loope
push
jb,pt
imul
stc
xchg
jecxz
hlt
or
fiadds
jl
sub
aam
popf
sub
fisttps
loope
sbb
fldpi
loopne
fs
inc
mov
push
mov
fistl
subb
cli
test
push
std
xor
or
pop
dec
ja
inc
repz
lods
cmp
xor
ds
jl
popf
es
je
roll
inc
mov
and
or
xor
test
enter
push
jno
and
daa
sub
lcall
pop
movsl
pusha
jnp
arpl
adc
xor
push
mov
inc
aad
inc
mov
or
pop
push
and
push
dec
push
mov
into
push
mov
inc
fsubs
add
in
std
mov
mov
dec
pop
fs
or
xchg
test
push
shll
push
jmp
pop
or
add
outsl
lock
repz
jp
std
xorb
shl
push
subl
mov
cmpb
xor
rorb
leave
pusha
out
nop
mov
mov
mov
xor
or
mov
repz
cmp
aam
jle
inc
or
popa
jl
dec
cli
cmp
and
mov
xor
mov
xchg
sbb
or
sub
push
xor
mov
or
mov
dec
mov
xor
sarl
aad
loop
into
mov
mov
push
js
mov
inc
lds
movntq
out
cmpsl
sbb
pcmpgtd
jl
in
ss
mov
add
nop
jnp
out
lahf
insl
dec
push
daa
sub
fdivrl
xor
test
cmpl
mov
sub
add
sbb
xchg
sbbb
sbb
xor
aas
shll
jo
add
sar
pushf
xlat
xor
push
lahf
scas
or
mov
mov
outsb
arpl
dec
and
push
pop
pop
rcl
pop
add
push
dec
dec
cltd
xor
cmp
inc
xor
jno
inc
mov
xor
and
push
imul
cmpsl
mov
or
cltd
scas
pop
add
push
stc
sub
enter
sbb
pop
xor
fs
adc
mov
shll
enter
push
mov
in
sub
mov
fisubs
or
out
cld
jp
mov
aas
stc
ror
into
mov
rcl
ficompl
push
sbb
mov
daa
inc
rcr
and
dec
mov
lds
loope
pop
jae
push
mov
ljmp
aaa
test
cwtl
xor
jl
lds
test
xchg
test
popf
and
incl
outsb
dec
outsb
clc
shl
push
fdivl
add
out
sarb
aam
push
and
xchg
xchg
jecxz
imul
jnp
mov
pop
adc
andl
jle
jg
mov
adc
mov
mov
out
lcall
loopne
mov
leave
push
push
call
das
into
push
xchg
dec
movsl
sub
fcoms
data16
mov
add
dec
js
mov
fsubr
adc
lea
cld
push
rcrl
out
mov
jo
inc
pop
cs
mov
jo
inc
xor
inc
jecxz
std
sbb
adc
cwtl
mov
sub
and
xlat
into
sbb
sarb
jne
push
xchg
mov
jl
bound
das
and
adc
out
jmp
fcoml
jbe
lcall
mov
rclb
mov
aad
pop
bound
cmpl
lret
pusha
lea
scas
jecxz
mov
std
and
leave
movswl
enter
xchg
mov
aam
cmpsl
jge
jecxz
idivb
inc
xchg
xchg
add
cwtl
adc
push
shr
imul
and
pop
scas
add
push
pop
es
and
ret
sub
jne
out
add
ja
sub
mov
lret
das
mov
mov
push
jmp
mov
hlt
or
pop
mov
lcall
cmpsl
sub
int3
clc
xor
stc
add
adc
jp
xor
push
pop
mov
cmp
int
cmc
jg
push
ret
mov
inc
ds
mov
mov
xor
mov
std
scas
adc
ret
loop
mov
jno
adc
cltd
or
xor
iret
outsl
jo
addb
sub
jecxz
out
xchg
iret
dec
xchg
sbbb
or
mov
fiaddl
inc
test
push
icebp
and
or
popa
sbb
pop
mov
mov
push
pop
add
xor
cmp
or
xor
jge
jg
push
scas
or
int
mov
outsb
out
and
add
inc
push
pop
popa
mov
loop
loop
jge
into
mov
xchg
ds
and
enter
jb
push
shl
lret
addr16
pop
into
adc
adc
enter
daa
sub
gs
dec
ss
inc
push
add
into
call
push
xchg
sbb
jne
xchg
sub
pop
add
mov
or
ljmp
stos
mov
mov
mov
lods
rorl
iret
into
ss
lea
pop
mov
mov
std
inc
jge
add
ret
loope
xor
mov
in
mov
dec
push
dec
mov
cli
loop
jns
fmuls
add
mov
cltd
int
pusha
stos
cmp
pop
jbe
adc
mov
fstpl
stc
cmp
loope
fwait
mov
and
xchg
lahf
btc
sbbb
xchg
dec
movsl
dec
mov
push
and
in
mov
inc
mov
cs
sbb
sti
adc
cwtl
jmp
mov
fidivs
sbb
cli
jle
out
or
fwait
mov
imul
cmp
push
cmpsl
sub
sbb
dec
adc
pushf
sub
rclb
cwtl
cld
inc
adc
pop
cmpsb
push
fwait
outsb
sbb
mov
cmp
push
sahf
push
out
mov
cmc
arpl
dec
notl
cmpsb
mov
stc
and
dec
in
ret
adc
sub
cmp
jge
fldenv
xchg
ret
cmp
jne
test
mov
cmc
in
imul
fistpl
fldcw
sub
dec
sub
xor
movsl
aas
xchg
cmp
lods
addl
sbb
xchg
enter
xor
aad
aas
mov
fildl
aad
call
sbbl
pop
jnp
xor
lods
scas
bound
dec
xor
sub
push
sub
xchg
ds
cmp
enter
adc
mov
or
add
cmpsb
and
repnz
popf
rol
cmp
jecxz
jg
popa
out
jp
sti
jae
fwait
pushf
push
std
sub
mov
loopne
inc
stc
xchg
aad
sbb
test
sub
sbb
jecxz
inc
dec
imul
decb
fwait
aaa
xchg
inc
cmp
jo
adc
imul
das
out
stos
mov
pop
and
pop
jne
dec
sbbb
lods
mov
mov
adc
add
mov
pop
adc
shlb
cltd
pushf
pusha
out
call
mov
gs
scas
add
lret
sbb
sub
pop
inc
dec
mov
pop
dec
fistpl
pop
mov
mov
push
push
mov
fwait
pushf
lea
mov
lret
shll
push
xchg
add
movb
sub
es
or
pop
pop
or
mov
jae
scas
mov
fsubs
push
add
jmp
fmuls
xorb
cltd
test
movsl
mov
dec
sub
xchg
mov
cwtl
push
pushf
jbe
loop
sbb
sbb
repz
mov
jl
ror
loop
dec
test
cmp
cltd
and
push
in
xor
loopne
rclb
xor
add
mov
out
lret
das
roll
pushf
js
mov
xor
pop
leave
jp
jecxz
test
repz
inc
lods
jle
icebp
clc
lcall
inc
adc
lods
cltd
mov
les
movb
rcll
jb
push
fsubrl
jns
sub
xor
cmp
add
dec
mov
out
sbb
inc
pop
cmp
hlt
sti
dec
decb
pop
cmp
int3
bound
fld
cmp
stos
xchg
ret
scas
sbb
loopne
sbb
xchg
pop
mov
mov
mov
test
daa
push
fcoms
cmc
mov
scas
jns
fucomi
sahf
push
test
mov
sub
ret
lock
inc
leave
insl
mov
fwait
sbb
mulb
mov
fisubl
lret
cs
jb
jo
nop
fwait
jno
das
hlt
xchg
rcrb
or
adc
push
and
xor
int
loopne
sub
hlt
test
xchg
jns
xchg
gs
sbb
inc
pop
test
inc
ss
xor
cmpsb
jns
js
push
incb
push
shll
pop
sti
imull
or
adc
fistpl
jae
out
mov
dec
xchg
les
push
out
nop
arpl
int
jo
in
ja
daa
xlat
fwait
out
lret
into
sbb
mov
xor
cwtl
adc
les
xor
jo
adc
cwtl
xchg
out
lahf
pop
mov
inc
cs
jnp
inc
inc
in
in
jecxz
ds
repz
or
cmp
adc
push
mov
pop
xchg
ss
add
cwtl
jle
xor
scas
sub
pop
and
xor
or
dec
push
xor
int3
jno
imul
fcmovb
iret
inc
sbb
icebp
inc
cmpsb
sbbb
sarl
push
mov
call
xchg
aad
jl
sub
mov
imul
int3
mov
iret
lcall
xchg
pop
mov
mov
push
fbstp
pop
sub
sbb
inc
mov
xor
popa
push
daa
pextrw
push
or
arpl
jo
addb
pop
lret
in
xor
sbb
xlat
repnz
or
mov
fwait
dec
movsl
dec
aaa
push
jae
mov
lds
fs
cmp
and
pusha
xchg
loop
mov
mov
adc
adc
add
jb
inc
fs
jbe
jno
jbe
dec
jmp
xchg
hlt
ss
scas
lock
ljmp
adc
insl
test
or
mov
mov
sbb
iret
imul
clc
cs
inc
fildl
mov
mov
stos
hlt
jmp
push
fstpt
or
xchg
dec
sub
lret
pop
push
fdivl
inc
test
dec
mov
xchg
aam
jl
dec
sahf
or
leave
dec
ret
mov
mov
cmp
lods
dec
push
mov
pop
push
shrl
mov
jnp
mov
leave
or
fucom
gs
jne
pop
loope
mov
mov
sub
mov
ficompl
ljmp
lods
jp
cmc
mov
pusha
add
rcrb
fidivs
mov
dec
sub
cmp
mov
in
jmp
andb
add
decl
fs
sub
ret
sub
xor
mov
cmp
lock
adc
jmp
stos
jge
icebp
pop
lcall
mov
cltd
cmc
in
mov
jle
dec
ds
jnp
rcrl
xor
ret
inc
xchg
nop
inc
inc
and
int3
das
cmp
xchg
xor
inc
push
mov
adc
and
mov
mov
sub
xchg
lcall
into
push
jecxz
gs
mov
orb
es
and
out
pop
push
in
out
or
ss
mov
out
pop
pop
inc
xor
push
fsts
mov
mov
push
mov
dec
testb
xchg
dec
hlt
pop
ds
call
pop
jle
sbb
inc
aaa
jg
or
adc
insb
xor
push
out
addb
push
or
movsb
fldcw
mov
pushf
dec
out
jle
jl
add
inc
adc
mov
cmp
fsubp
xlat
add
xchg
les
mov
or
sti
xchg
jmp
and
mov
jns
ljmp
xor
aad
mov
push
or
mov
scas
sbb
bnd
or
or
sbb
cmp
bound
mov
push
add
popa
push
stc
or
leave
icebp
imul
sub
jno
cmp
push
lahf
cmc
insl
sbb
cmp
int
movsl
xchg
sbb
nop
mov
dec
movsb
fwait
jns
sub
pop
dec
mov
stc
imul
pusha
mov
fwait
inc
stos
pop
test
jge,pn
fistps
je
repnz
pop
js
jb
scas
push
fldcw
mov
stc
into
jbe
roll
pop
icebp
mov
fs
or
ret
xor
andl
cwtl
ss
inc
cmp
jg
add
mull
pusha
sahf
lcall
pusha
and
cmpb
fcmovnbe
aad
fildl
addr16
mov
push
pop
sbb
xor
mov
xchg
jecxz
sub
sahf
int
leave
out
pop
lea
xchg
nop
xor
dec
imul
pop
fwait
ret
in
cs
outsb
cld
jle
xlat
xchg
jb
fiadds
jecxz
es
or
mov
fisubs
push
test
cmp
cmpb
mov
mov
push
lret
lods
cltd
insl
rcr
xchg
in
idivl
rcll
data16
push
sub
jnp
addb
jo
gs
jnp
xchg
jbe
out
jnp
pop
inc
xchg
test
add
mov
pop
jnp
in
push
cmc
jp
and
jb
idivb
push
aam
mov
in
movsl
outsl
aaa
fildl
mov
jne
jle
jmp
mov
push
mov
lahf
sub
cmp
popa
ja
sbb
sbb
jmp
out
and
xchg
sub
fcoml
cld
daa
scas
xchg
js
aam
xor
mov
test
popf
test
les
push
aas
push
repz
push
adc
xor
mov
dec
push
xchg
xor
adc
mov
lods
adc
pushf
enter
cmc
cs
sarl
leave
sbb
push
sbb
jg
leave
in
mov
lret
mov
dec
outsb
and
scas
in
xor
adc
inc
das
call
insb
xchg
imul
cltd
enter
jne
pop
mov
adc
fucomi
aas
loope
xchg
sub
push
imul
jno
int
jecxz
sbb
add
lret
xchg
sub
fisubrs
dec
cmpsl
mov
les
or
cmc
cmp
push
adc
movsl
icebp
adc
mov
xchg
int3
jecxz
cld
mov
aaa
mov
fwait
xorl
rolb
mov
and
or
arpl
je
mov
lret
lods
xchg
push
and
jno
mov
xchg
mov
push
cwtl
inc
cwtl
outsb
and
insb
fdivrs
div
add
scas
add
push
pop
lret
mov
pop
mov
iret
xchg
xor
mov
dec
dec
cmp
lods
addr16
dec
jns
jae
jo
sbb
pop
addl
mov
pusha
aaa
adc
cmp
incl
mov
xor
sub
imul
iret
adc
dec
adc
je
dec
push
lock
sub
mov
aad
rolb
mov
sbb
aas
loop
pop
mov
add
pop
pusha
ret
dec
test
xor
or
or
mov
xchg
xchg
mov
inc
jp
outsl
sbb
fwait
js
fld
sub
movsl
push
fiaddl
and
fisubrl
cltd
cmp
sti
or
into
insl
pusha
sahf
pop
xchg
and
pushf
jge
mov
mov
cmp
or
movsb
push
cmp
inc
dec
pop
cmpsl
in
cwtl
shr
cmpsb
push
addr16
jmp
xor
pop
lds
ss
fldl
pop
ja
mov
cwtl
xor
or
dec
pop
pop
add
ljmp
shrl
mov
jae
flds
orb
shll
lds
daa
cmp
pop
push
ljmp
ret
mov
cmp
jns
adc
mov
xchg
ret
das
sub
pop
jecxz
arpl
insl
xchg
in
out
outsb
xor
fucomip
pop
and
adc
stos
stc
jae
lock
test
mov
push
stos
loop
lret
cmc
jle
cmp
popa
inc
jmp
mov
lahf
inc
es
fdiv
sbb
arpl
cmp
dec
xorb
push
clc
test
push
fstps
and
insb
out
mov
pop
lcall
or
les
mov
mov
xchg
mov
mov
cmp
push
movsb
xchg
add
inc
in
xor
aas
cli
mov
dec
mov
cmp
daa
pop
mov
cld
adc
mov
shrb
push
lcall
adcb
imul
push
movsl
roll
mov
add
add
shlb
in
in
add
mov
mov
shll
mov
sbb
inc
test
mov
in
push
ds
scas
jns
imul
mov
out
loopne
jbe
les
jl
push
fcomps
pop
sti
push
cli
ja
aad
xor
mov
jg
std
out
stos
cmp
in
mov
je
jp
call
xor
mov
pushw
jmp
neg
push
ds
popl
add
iret
dec
adc
and
lret
icebp
mov
and
stos
jns
fadds
add
cmp
stc
push
lret
aas
inc
lods
push
test
mov
jo
scas
mov
jmp
and
mov
mov
sub
sbb
and
repz
out
imul
inc
pop
clc
xchg
repnz
int
jl
cltd
pop
push
or
nop
repz
insl
dec
fsubrl
lea
pop
push
out
xor
rcrl
call
xorb
loope
daa
cmp
push
scas
call
or
dec
mov
mov
xor
jle
jns
add
clc
lods
sahf
bound
out
loop
jb
divb
pop
pop
or
jge
in
xchg
mov
or
push
sbb
jne
push
mov
icebp
xor
cmp
out
stc
add
pushf
fs
in
les
add
push
dec
stc
insl
mov
sbb
mov
js
int
push
movl
pop
adc
and
xor
add
adc
lea
lods
push
pop
movsb
dec
mov
test
sbb
les
xor
add
adc
lea
lods
push
pop
movsb
dec
mov
test
sbb
les
xor
add
adc
lea
insl
push
pop
movsb
dec
mov
test
sbb
rol
leave
and
adc
fs
je
inc
sub
push
xlat
test
push
test
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
repz
inc
push
push
inc
cltd
adc
dec
popa
pop
ja
jecxz
repz
ret
ret
mov
adcl
inc
and
xor
add
adc
jecxz
repz
icebp
rol
mov
xchg
xchg
andl
push
pop
and
xor
add
adc
jecxz
repz
lock
mov
jno
or
and
adc
clc
and
bound
push
aad
xchg
scas
pop
daa
popf
aam
sbb
ss
and
fsts
mov
mov
or
lcall
hlt
mov
jb
dec
push
xor
mov
in
jecxz
mov
inc
sbb
outsl
andl
pop
loope
dec
adc
repz
cmp
inc
loop
pop
xchg
sbb
adcb
inc
mov
add
add
xchg
rol
lock
sub
xchg
insb
jle
jle
or
or
sar
aad
sbb
and
rcl
loop
aam
outsb
xchg
xchg
cmp
jae
inc
inc
push
pop
and
xor
add
adc
jecxz
repz
ret
enter
test
xchg
in
adc
popa
das
push
sbb
dec
inc
jge
insb
mov
mov
xlat
fdivr
repnz
xchg
out
cmp
xor
and
inc
inc
inc
push
adc
jne
insl
mov
sahf
cmpb
ror
std
mov
adc
xor
bound
and
adc
add
icebp
repz
rcl
shll
xchg
andl
push
inc
and
xor
add
adc
jecxz
repz
rcl
shll
xchg
andl
add
or
inc
jno
out
hlt
stos
mov
mov
mov
mov
fs
scas
mov
les
pop
ret
xor
or
or
bound
clc
pop
sub
lret
int3
shll
leave
cmc
out
xor
mov
das
xchg
and
pop
mov
test
rclb
xchg
or
adcl
dec
and
sub
or
sbb
mov
out
ds
pop
std
pop
pop
cmp
lods
sahf
pop
sub
cmp
fstpl
rorb
or
lcall
int3
xchg
sbb
jnp
pop
imul
loope
jnp
cmp
gs
pusha
std
xchg
aaa
jo
lock
adc
inc
out
mov
jno
push
jbe
pushf
lea
into
inc
aam
mov
mov
addr16
in
testl
sbb
ss
push
sub
add
adc
jecxz
sti
push
sbb
insb
arpl
clc
xor
leave
das
xchg
mov
inc
jns
lahf
add
xchg
das
int
test
fisubrl
test
in
xchg
lock
fnstenv
push
aas
push
add
lcall
iret
imul
cs
dec
push
mull
nop
or
xchg
cltd
insb
pop
jp
rclb
mov
add
notb
stos
xor
jae
in
lcall
sub
or
ret
fmull
cmpsb
dec
loop
cmp
cmp
fimuls
sarb
sub
dec
jmp
push
jmp
xor
in
sbb
lds
mov
lock
sbb
xchg
lret
jp
adc
call
imul
lret
inc
fwait
stc
xchg
xor
call
jnp
sbb
inc
bound
mov
push
imul
cmpsl
scas
daa
pop
and
sub
jns
lock
arpl
clc
sti
dec
shlb
mov
ljmp
adc
dec
dec
mov
ljmp
incl
xlat
dec
dec
or
lahf
out
or
int
pop
jl
out
mov
lret
inc
inc
mov
movsl
repnz
cmpsl
push
mov
fnstsw
sarb
data16
pop
xchg
mov
add
xor
push
cwtl
push
iret
or
cmpsl
mov
dec
les
add
fbld
ret
and
js
shlb
and
pusha
fildll
xchg
cli
data16
sbb
mov
xor
decb
loop
jp
sti
stc
cmpsb
xchg
adc
and
xor
push
jno
and
push
push
xor
adc
out
push
mov
repnz
cld
popf
mov
mov
hlt
outsl
lods
add
xor
push
adc
xchg
pop
mov
push
andl
xchg
add
out
movsl
popf
add
xor
inc
leave
mov
pushw
lcall
sar
mov
inc
mov
jge
push
imul
nop
fildll
cltd
cmp
iret
and
and
push
mov
lret
sbb
aas
movsl
sbb
test
in
enter
jno
das
js
mov
fwait
test
test
mov
dec
push
mov
pop
pop
adc
push
in
cmp
fs
inc
cmpsb
addb
and
popf
es
fcmovne
arpl
sbb
or
lock
fcomi
push
add
and
dec
cld
push
add
push
gs
call
into
mov
pop
int3
cmp
pop
adcl
xor
sub
or
xchg
test
rorb
call
push
mov
inc
lds
mov
jnp
enter
jns
fisttpll
mov
mov
sub
call
push
push
push
out
loop
push
stc
mov
or
and
xor
ja
leave
push
std
sub
push
shl
sbb
mov
sub
movl
pop
rolb
lods
dec
push
mov
out
adc
cmc
adc
xor
cmc
js
les
cs
sbb
mov
jnp
xor
sbb
dec
arpl
sarb
in
cwtl
sbbl
and
sahf
mov
sub
and
or
sti
hlt
popa
push
hlt
mov
xchg
std
rclb
cmp
sti
or
je
repnz
mov
dec
icebp
xchg
inc
cs
add
and
and
sbb
in
icebp
mov
pop
mov
arpl
pop
sbb
add
sbbl
arpl
sub
add
xor
test
in
and
fidivrs
or
loop
push
enter
out
jmp
sbb
cld
ss
ljmp
bound
test
stos
das
jl
push
push
aaa
push
and
sbb
mov
cmpsb
fs
mov
in
in
inc
shl
mov
leave
xchg
adc
cmp
push
sbbb
xor
or
mov
cmp
out
jne
in
dec
scas
xchg
jne
add
jae
mov
insb
jno
mov
pop
outsb
cmc
sbb
leave
and
and
jge
pop
and
mov
in
mull
adc
mov
mov
jecxz
push
mov
addl
inc
daa
cwtl
aam
test
cmpsl
sbb
mov
popa
sbb
cmc
lret
rclb
cs
cmp
rcrb
lds
push
pop
sbb
xchg
sub
fstpt
push
rcrl
loope
jb
cltd
sbbl
pushf
cmc
ja
pop
add
adc
dec
xchg
lds
push
data16
pushf
xor
sub
dec
shlb
inc
mov
xor
pop
aam
lret
add
inc
imul
imul
idivb
adc
imul
adc
sahf
and
inc
cmpb
mov
cmp
decb
and
jle
jg
add
and
out
dec
dec
popa
and
cmpsl
xlat
pop
or
test
cmc
pop
pop
pop
call
mov
fwait
or
andb
and
fists
xor
test
roll
pop
adc
sbb
outsl
dec
xchg
pop
out
inc
sub
or
jg
roll
leave
lea
lods
sbb
ss
cwtl
jl
arpl
jns
jno
repz
push
adc
cmp
cmp
xchg
push
stos
arpl
jge
out
jle
push
dec
mov
out
popf
push
rorb
sub
sub
lds
jae
cmc
adc
arpl
bound
push
test
add
mov
je
fdiv
lahf
cmpsl
fwait
clc
fcompp
shr
sub
pop
dec
xchg
fwait
push
ds
fisubrl
jno
inc
dec
scas
out
xor
stc
xchg
ljmp
push
enter
and
jge
jp
test
push
mov
lahf
dec
das
sbb
dec
jns
pusha
sub
inc
mov
jle
sbb
fwait
mov
das
push
add
mov
xor
bound
xchg
mov
fdivl
xlat
movsl
push
mov
aaa
inc
and
in
mov
inc
inc
inc
rcrl
enter
push
ja
cld
clc
fildl
mov
call
shrl
rcrb
xlat
cmpsl
fdivl
popa
scas
or
xchg
push
dec
fildll
xor
sub
in
aam
js
sub
in
mov
pop
bound
cmp
fwait
popa
push
adc
adc
mov
jbe
sub
mov
and
jb
shlb
sbb
xor
push
cs
ljmp
sbb
xor
pop
push
jo
jmp
fdivp
sahf
sbb
enter
int3
and
jae
test
push
clc
in
mov
pop
mov
jecxz
push
inc
jp
mov
in
in
call
xor
insl
mov
push
inc
push
or
fadd
mov
jg
sub
sbb
and
mov
pop
shrl
jp
push
in
js
push
xchg
lock
inc
aad
aam
sarl
sbb
push
jo
movsl
push
add
btcl
sub
mov
rclb
daa
jle
arpl
mov
sahf
cltd
stc
and
mov
fwait
adc
pusha
cmp
push
push
push
dec
mov
aam
ret
pop
lea
jno
pop
pop
xchg
add
cld
mov
mov
mov
pop
call
pop
aaa
arpl
repz
cmpsb
enter
cmpsb
out
mov
xor
push
stos
pushf
mov
andb
out
inc
int
andnps
jnp,pt
inc
and
adc
insb
cmovb
mov
scas
in
ljmp
inc
xor
flds
xchg
imul
mov
cmp
jle
jecxz
push
sbb
add
test
out
rol
out
outsl
sub
xorl
outsl
pop
ss
inc
push
xor
and
pop
and
dec
push
push
in
mov
mov
push
pop
in
cmpsb
popf
jmp
push
and
adc
es
bnd
adc
pop
mov
sbb
ret
pop
mov
scas
and
nop
add
lds
int3
mov
inc
fisubs
jae
test
sbb
iret
int
cmp
ljmp
and
adc
mov
mov
mov
jo
jmp
pop
pop
dec
or
test
out
bound
add
xor
scas
orb
jo
iret
jno
test
push
shrl
aas
lahf
mov
dec
fcoml
pushf
mov
push
add
in
jb
or
cmp
nop
push
pop
ret
rorl
xchg
push
cld
movsl
aam
fisubrs
mov
add
jmp
add
add
fisttpl
adc
pusha
mov
stos
aad
push
push
push
and
push
sti
shlb
adc
xor
flds
jmp
push
adc
lods
mov
xchg
daa
test
in
inc
aam
test
mov
test
sbb
and
pop
mov
lret
xchg
pop
cld
mov
dec
inc
movsl
adc
push
jnp
mov
mov
xchg
mov
repnz
mov
cs
mov
loop
shl
push
clc
cmp
mov
pushf
sub
insb
adc
stos
in
repz
inc
mov
inc
clc
or
imul
dec
lea
jp
xchg
test
jl
xchg
or
mov
mov
lret
add
add
mov
sub
adc
pop
or
dec
into
lods
ret
decl
xchg
lods
shlb
out
jns
xchg
movsl
ljmp
or
outsl
adc
jle
adc
mov
repz
adc
mov
mov
insl
lcall
push
fs
pop
jle
adc
data16
aad
add
and
popa
outsb
or
orl
fstp
cmpsl
scas
jle
pop
xchg
sub
sub
data16
push
lret
hlt
fst
popf
fisubrl
mov
loop
or
cmp
cmp
push
adc
imul
add
out
sub
je
orb
fs
jo
mov
cmp
adc
xchg
jecxz
or
repz
adc
dec
pop
xchg
addr16
data16
or
stos
jg
fwait
out
or
xor
rcrb
pop
dec
arpl
les
pop
fbld
jecxz
jne
xchg
push
inc
pushf
mov
sub
cmp
push
sbb
ret
xchg
decb
and
out
jge
sahf
mov
les
add
mov
les
xchg
mov
xor
aas
and
stc
sub
pop
dec
call
stc
arpl
push
fs
and
aam
or
in
lret
mov
and
jo
add
scas
fistps
sbb
aad
das
mov
mov
pop
cmp
cmc
and
mov
into
leave
iret
add
data16
aam
insl
loop
out
ds
lahf
sub
loope
sbb
xor
sub
xor
inc
cwtl
out
sbb
xor
jle
or
adc
hlt
and
fstpt
fnstsw
inc
int3
dec
imul
ljmp
xchg
dec
insb
xchg
add
in
stc
dec
clc
sbb
out
stos
and
lret
test
adc
in
push
stos
lea
pop
popf
out
cmpb
pop
lock
in
pop
test
and
inc
daa
push
dec
dec
and
xor
cs
addr16
push
rolb
cmpb
mov
loop
xchg
sbb
xchg
cmp
add
cwtl
adc
sbb
inc
sbb
push
adc
imul
stc
dec
sbb
imul
pop
pop
mov
jbe
ss
xor
rorb
add
test
sub
inc
mov
rolb
repz
or
les
rorb
sbb
fadds
and
bound
cmpsb
lret
fldl
mov
gs
mov
movsl
adc
push
ret
nop
ret
rcll
mov
adc
sti
lret
mov
and
pushf
shlb
and
jecxz
push
out
dec
and
inc
jno
pop
dec
cmp
enter
mov
or
mov
imul
fsubs
or
or
hlt
jmp
xor
aam
mov
pop
push
mov
inc
js
pop
sbb
loope
enter
mov
sub
call
sbb
lds
out
dec
pop
mov
and
stc
cmpsb
pop
jns
dec
sub
push
and
fdivr
and
push
cmpsl
out
xlat
mov
add
or
enter
lcall
addb
jge
fstpt
pop
jae
xor
loopne
loopne
mov
sub
cmp
push
jmp
mov
mov
inc
xchg
loopne
inc
jno
leave
sub
pop
enter
dec
dec
push
push
stc
hlt
pop
fs
pop
add
mov
xor
push
stos
lds
call
sub
ret
mov
shrl
xor
push
sbb
mov
lcall
arpl
adc
gs
rcl
loop
mov
mov
sbb
or
push
daa
mov
mov
lea
sub
mov
mov
cltd
pop
jo
rclb
hlt
retw
or
test
popa
aaa
xor
dec
or
adc
xchg
pop
fmull
xchg
rolb
cmp
mov
add
cwtl
movsl
in
aaa
aas
dec
ja
loopne
and
cld
pop
ret
in
pop
popa
mov
jle
sbb
lods
mov
and
lea
lods
cltd
lods
inc
pop
cld
enter
stos
orl
mov
sbb
loop
fidivrl
xchg
and
xor
sub
pop
aad
xchg
cltd
mov
into
jg
sub
or
and
add
rcll
lahf
inc
push
lahf
add
sar
movb
cltd
jge
call
ds
dec
les
bound
gs
dec
test
pusha
aad
and
xor
jmp
push
mov
in
in
jmp
cmp
imul
es
add
mov
mov
mov
notl
enter
mov
loopne
icebp
push
test
aas
std
popa
js
iret
cmc
loope
rcrb
mov
mov
adc
jge
into
pop
cmp
mov
mov
cmp
lcall
xor
adc
es
std
int3
and
out
out
call
out
pop
sarb
out
inc
les
adc
xchg
clc
inc
loop
int
mov
jo
int
mov
dec
repz
mov
pushf
call
lods
fwait
je
jo
jle
clc
add
push
scas
adc
pop
leave
pop
inc
and
or
in
imul
rcrl
pop
or
sub
push
enter
int3
mov
loopne
xchg
pusha
xchg
mov
icebp
inc
lahf
push
test
pop
add
shlb
or
inc
mov
in
adc
dec
mov
add
sbb
jge
shr
push
fidivs
adcb
jnp
mov
push
and
ja
lret
push
jo
aam
fisttpl
int3
push
lods
cmc
add
sbb
xor
lods
pop
add
jecxz
lret
lea
test
mov
out
or
negl
test
int3
cmc
and
cmp
jle
or
sti
or
dec
xor
lcall
clc
pop
in
push
out
dec
mov
scas
loop
mov
push
jmp
lret
push
dec
popf
xchg
push
mov
out
iret
int3
jle
dec
jmp
sbb
aam
mov
inc
scas
pushl
adc
pop
out
jg
pop
mov
dec
out
ss
inc
adc
sub
call
ficompl
xchg
xor
mov
push
into
add
push
cwtl
scas
dec
aaa
and
ss
fmuls
movsb
orb
jge
addr16
test
mov
mov
mov
add
xchg
xchg
cmc
imul
sub
cli
sahf
inc
mov
aas
test
addr16
mov
jne
ljmp
dec
fisubl
xchg
lds
jle
xchg
sub
push
ss
js
test
sub
jns
jns
mov
pusha
hlt
xor
inc
push
test
incl
sub
mov
xor
sub
xchg
lcall
clc
xchg
ja
xor
push
stos
sub
and
js
loope
lea
inc
xchg
sbbb
mov
sahf
ljmp
pop
cwtl
add
paddq
aad
jb
cli
sbb
lds
mov
cmp
jbe
xor
mov
xchg
jb
and
mov
in
int
es
mov
dec
mull
imul
add
movsb
xchg
push
xchg
pop
loop
out
pmaxsw
imul
decl
arpl
scas
imul
xchg
imul
xchg
mov
or
push
mov
and
add
mov
and
mov
jno
inc
xchg
jg
jbe
add
mov
and
ret
test
xor
mov
ja
sub
mov
mov
lahf
movsb
xor
xchg
imul
inc
dec
in
jle
fwait
add
inc
bound
jbe
rclb
xchg
icebp
hlt
jg
pop
mov
push
mov
mov
jns
movsb
lock
lea
rcl
repnz
inc
cli
lods
and
inc
int
loop
fldcw
jo
insb
stos
xchg
jne
pop
fadd
jecxz
scas
lret
push
inc
enter
stos
fdivrs
sti
xchg
push
es
adc
insb
lea
inc
mov
jbe
popl
cmp
repnz
jne
xor
mov
divb
cmpsl
cmp
push
aam
outsb
lods
aaa
mov
in
outsl
inc
jg
push
dec
pop
jl
into
nop
jle
pop
mov
sahf
xor
insb
cmp
in
in
xchg
inc
fidivl
subl
insb
mov
pop
sbb
test
pop
std
ret
dec
loopne
in
cmp
xor
add
stos
nop
out
mov
outsl
jnp
mov
iret
fstpl
dec
mov
dec
cmp
push
dec
in
add
xorl
or
les
mov
mov
dec
sub
jae
scas
mov
fstpl
shr
outsb
sub
sbb
push
sub
fistpll
idiv
push
mov
jmp
dec
out
in
rcll
inc
mov
imull
ret
aad
dec
fnclex
sbb
add
jge
adc
inc
sub
mov
imul
xchg
stos
insb
test
out
ds
or
inc
xchg
adc
movsb
fwait
mov
xchg
jp
cmpsl
fistpll
negb
fsts
cwtl
mov
fadd
out
add
sub
hlt
or
pusha
hlt
adc
ja
push
add
inc
and
or
pop
fcom
or
sti
mov
or
addr16
sbb
sub
cmpsl
out
push
sub
dec
jmp
pop
jno
imul
in
nop
mov
or
or
jge
sarb
scas
or
mov
test
lahf
mov
popf
mov
repnz
loopne
mov
int3
out
test
dec
xchg
aam
stos
ds
dec
dec
lock
push
test
fimuls
inc
icebp
push
gs
jmp
jg
and
ljmp
inc
dec
push
ss
mov
cmp
ret
pop
adc
pop
jne
dec
fstl
adc
out
xor
xchg
mov
dec
mov
cmpsb
enter
xchg
jb
scas
pop
jae
sbbb
dec
cmpsl
fdivrp
xchg
pop
cli
movsb
lretw
jno
xchg
mov
cmove
pop
or
jmp
es
in
push
inc
and
xor
add
adc
jecxz
repz
rcl
shll
xchg
andl
push
inc
and
xor
add
adc
jecxz
repz
rcl
shll
xchg
andl
push
inc
and
xor
add
adc
jecxz
repz
rcl
shlb
xchg
andl
push
inc
and
xor
add
adc
jecxz
repz
imul
cmp
outsb
insb
jle
adc
mull
rcll
gs
xchg
push
test
ja
add
pop
inc
daa
cmc
aaa
in
adc
mull
cmpsl
jne
gs
xchg
push
in
mov
movsl
pop
aad
lds
mov
in
adc
xor
mov
gs
cmp
push
movsl
daa
nop
dec
stos
push
xchg
adc
xorb
cmpsb
mov
or
loopne
and
adc
std
push
daa
lret
inc
addb
push
and
cwtl
mov
sub
movsl
mov
pop
out
ja
psubusb
xchg
shll
test
cwtl
jne
pop
clc
aam
add
addb
xchg
push
push
lcall
mov
mov
enter
sub
sbb
adc
jecxz
jmp
xchg
rcrb
lds
cmp
inc
push
sbb
fmull
and
and
dec
test
movsl
ja
add
add
daa
in
adc
fwait
and
cmpsl
jne
gs
lds
addr16
lds
cmc
push
mov
pop
cltd
dec
jmp
cmp
xor
aaa
fstl
jecxz
mov
mov
divl
adc
cmp
out
sbb
les
in
push
lock
sbb
je
jb
push
nop
jbe
mov
in
xchg
pop
mov
ret
inc
cmpsl
jne
gs
xchg
push
test
ja
pop
aad
lds
cmc
aaa
in
adc
mull
cmpsl
jne
gs
xchg
push
test
ja
pop
aad
lds
cmc
aaa
in
adc
test
lret
cltd
clc
stc
or
mov
inc
sub
pusha
xchg
es
dec
addl
mov
imul
adc
lcall
or
xor
lods
ret
lods
imul
xchg
in
push
je
addr16
and
mov
pop
or
mov
fistpll
adc
push
sbb
and
outsl
fisubrs
inc
cmpsb
je
loop
push
sbb
jo
add
popl
lret
popf
rcrb
push
adc
mov
pop
adc
push
sub
mov
movsl
je
cmp
cmp
fnstsw
push
es
xchg
mov
fs
inc
mov
cmp
popa
cwtl
insl
mov
push
sbb
fisubl
or
and
mov
jl
cmp
xchg
mov
hlt
les
push
outsb
xchg
push
add
mov
dec
xor
mov
dec
push
adc
lret
icebp
xchg
loop
dec
rcrl
aaa
mov
inc
out
inc
sbb
int
ljmp
dec
mov
sarl
mov
mov
aam
pop
xor
in
jl
xchg
mov
fists
pop
or
insb
test
enter
aam
xor
ret
mov
test
xchg
ficoml
out
movsl
jnp
ret
jns
mov
dec
dec
or
jns
pusha
out
nop
pop
cmp
out
pusha
push
mov
inc
rclb
rcrl
mov
xchg
loope
nop
out
lret
popf
std
lret
mov
jmp
out
pop
gs
mov
xchg
ret
das
push
scas
xchg
mov
cmp
mov
fwait
testl
jns,pt
imul
or
push
mov
imull
xor
mov
sub
fdivp
or
dec
dec
mov
cmp
sub
pop
jp
fdivl
push
inc
or
dec
add
mov
mov
xchg
sbb
aaa
in
xchg
in
dec
imul
pop
jae
xor
cmpsl
clc
jmp
je
and
push
add
inc
cltd
sbb
daa
pop
sbb
and
sti
mov
fsubrs
mov
mov
aam
cli
mov
or
xchg
daa
cld
jmp
adc
cmpsl
rol
sbb
cmpsb
dec
xchg
push
ret
mov
push
lret
xor
push
insb
adc
push
jle
ljmp
inc
dec
cmp
popf
insb
cli
push
mov
lret
mov
mov
add
xchg
jmp
pop
mov
sub
into
mov
mov
fwait
and
and
movsb
mov
popa
sbb
or
push
push
cmp
jae
nop
dec
stos
loop
adc
shlb
jmp
leave
sbbl
push
sahf
mov
ds
aam
adc
jns
adc
clc
push
inc
bound
mov
push
test
fwait
daa
inc
or
mov
xor
mov
ljmp
call
inc
int
or
lds
movsl
mov
rolb
mov
jne
push
adc
cld
xchg
lock
xchg
add
cmpsb
scas
xchg
cltd
into
mov
insl
loopne
rcrl
enter
jl
shrl
fs
dec
test
jnp
mov
mov
stos
pop
js
push
fwait
add
std
push
jo
or
jl
sti
jecxz
sbb
push
push
mov
mov
or
movsl
and
aam
imull
ret
dec
sub
lods
cmpsl
pop
jo
shlb
jnp
cli
fildl
jle
pop
jg
stc
dec
divl
xorl
in
jg
xchg
add
sub
sti
pop
cld
inc
sbbl
bound
repnz
xchg
out
xchg
push
shrl
add
and
push
imul
out
lock
cmp
out
rcr
das
pop
sub
cmp
dec
in
aas
movsl
testb
sub
mov
mov
pop
je
mov
setb
fs
adc
mov
outsb
daa
and
stos
push
lock
cli
mul
pop
mov
mov
pop
cmpsl
adc
push
fimuls
and
lods
out
cmpsb
xchg
hlt
pop
loope
xchg
popf
in
movsl
call
jne
mov
xchg
ljmp
cmp
adc
xchg
lods
push
lret
ljmp
push
fs
or
xchg
pop
loopne
fwait
imul
cltd
jle
das
or
push
mov
cltd
test
fs
mov
popf
ss
clc
cmpsl
mov
fs
test
mov
enter
das
push
icebp
pop
sub
leave
adc
mov
inc
imul
ret
cmp
and
push
inc
jae
cli
dec
dec
outsb
fsubrs
adc
out
shll
and
ss
add
fcom
jp
dec
jle
push
mov
outsl
cli
icebp
dec
xor
repz
ljmp
adc
dec
jp
and
and
mov
dec
call
pop
clc
inc
leave
cmpsb
pop
mov
test
addr16
jnp
std
sub
lret
nop
xor
pop
xor
popf
ja
dec
out
in
sbb
sub
xor
shlb
orl
sti
filds
add
cmp
mov
push
leave
shlw
call
mov
pop
mov
arpl
dec
adc
sbb
pop
sub
pusha
fistpl
scas
cmp
xchg
es
pop
push
mov
cltd
mov
loop
inc
clc
jge
ja
mov
cmp
ja
int
inc
cmc
cmpsb
or
sub
test
cld
push
mov
sbb
lea
sbb
pop
push
mov
xchg
fmul
lahf
ljmp
loope
pusha
iret
pop
insl
sbb
xchg
and
and
add
cmp
xor
mov
lahf
js
insb
xorl
pop
push
lret
jns
adc
out
push
add
mov
lock
negl
in
imul
or
push
fisubl
cli
or
aad
loopne
rolb
insl
bound
add
aas
rcrl
js
sub
and
das
mov
ja
jne
adc
shufps
sub
cmp
out
pop
rorl
fistpl
cmp
xor
js
sbb
and
lahf
repz
xor
shrb
dec
pusha
mov
jg
lock
jb
xchg
in
jo
and
bound
std
shl
outsl
in
push
push
sub
ss
fidivl
mov
mov
mov
mov
aam
xor
xchg
test
lock
mov
cmp
pop
or
push
scas
repnz
mov
sub
adc
loope
neg
adc
repnz
sti
ja
pop
cmp
imul
jb
mov
cmp
push
lahf
adc
pop
fnstcw
je
dec
lods
lods
sub
test
cmp
mov
jmp
dec
int3
fcmovnbe
adc
xorb
jmp
pop
stc
rorl
xchg
cwtl
xlat
lock
dec
lds
hlt
sbb
ss
inc
dec
je
ret
and
jecxz
mov
out
pop
test
mov
adc
mov
fcomps
shrl
jmp
int
sahf
pop
mov
addr16
cmp
das
dec
push
dec
fiadds
pop
xchg
std
leave
xchg
lret
mov
jecxz
jge
push
pushf
or
sub
xor
aam
and
sahf
sub
mov
pop
cs
dec
mov
lret
imull
adc
inc
addl
cmp
jne
push
dec
mov
and
sub
adc
popa
cs
push
ret
pop
xchg
mov
ss
in
test
roll
sub
lds
or
addr16
inc
ljmp
ret
mov
xor
push
push
xor
dec
mov
stc
push
dec
lods
cld
jae
mov
shl
xchg
adc
aas
xchg
jp
mov
popa
mov
aas
cmp
loopne
xor
pushf
fsubrp
out
add
mov
jo
idiv
movsb
les
jmp
push
call
pop
and
leave
jg
fistl
jne
pop
lods
mov
mov
jbe
popf
or
push
rcrb
mov
insl
inc
cld
inc
pop
cltd
or
cmpsl
xor
cmp
or
fstpt
add
dec
mov
pop
ret
in
pop
cld
cmp
xchg
lahf
or
jns
mov
loope
pop
jmp
dec
sbb
stc
bound
pop
dec
mov
nop
mov
jge
enter
mov
decb
rolb
inc
mov
pop
fdivrl
mov
incl
sub
dec
jmp
and
std
mov
adc
xchg
cmp
xchg
jo
inc
int3
pop
stos
repz
imul
cmp
mov
test
jl,pn
int
push
sbb
xchg
jbe
fistl
ret
push
jle
es
mov
pop
cmp
stos
scas
mov
mov
out
jbe
lds
lret
sbb
pop
mov
push
out
das
fnstsw
push
sbb
jmp
test
bound
pusha
dec
ja
hlt
fcomps
push
cmp
mov
outsb
pop
mov
xor
aam
pop
ss
cli
jecxz
pop
cli
lahf
and
cmpsl
out
into
aad
jle
mov
inc
std
inc
mov
push
mov
jle
add
mov
and
gs
mov
jl
or
lret
pop
sub
dec
fiaddl
adc
mov
add
cmp
mov
sbbb
jge
xorl
cmpsb
notl
sub
mov
iret
fisubrl
add
sbb
add
mov
into
push
jle
lret
mov
push
pop
inc
sbb
mov
scas
out
scas
fstpt
dec
lea
sub
stc
testl
out
or
and
call
cwtl
test
out
mov
cmp
cltd
jle
mov
push
xchg
and
lods
out
or
scas
pop
fstl
dec
cld
out
mov
mov
orb
imul
inc
int3
adc
and
je
in
dec
ljmp
sub
mov
mov
push
cmpsb
jp
cmpsl
out
dec
sbb
xchg
imul
jl
js
in
inc
or
and
dec
or
int3
inc
idivl
mov
and
ja
mov
or
xor
imul
jge
xor
xorb
rol
sub
lahf
xchg
inc
rcr
jecxz
xor
fidivs
xchg
hlt
xor
dec
mov
shrl
out
xchg
add
shrl
fimull
mov
mov
mov
xor
sub
cmp
repz
add
mov
out
lods
sbb
mov
mov
shrl
nop
push
sub
xchg
push
mov
jnp
adc
repnz
imul
fistps
lahf
popf
pusha
push
lahf
or
or
and
in
fwait
in
push
sahf
aaa
in
xchg
pop
and
fbld
lcall
xchg
enter
and
faddl
adc
sub
aaa
lret
std
xlat
in
icebp
lock
sub
mov
cmpsl
jp
std
jae
out
test
mov
sbb
sbb
dec
pop
mov
mov
mov
xlat
push
push
rorb
push
nop
gs
hlt
add
add
das
jmp
add
test
inc
mov
adcb
fs
inc
movsl
rcl
cmpsb
cmp
test
outsb
arpl
lahf
xchg
push
test
cld
add
pop
pusha
push
aam
hlt
mov
mov
inc
xor
mov
mov
mov
shlb
mov
mov
lahf
aaa
scas
pop
aas
fimull
add
imul
shr
arpl
jnp
fisubrl
orb
cs
sub
dec
adc
dec
and
lods
test
pop
scas
mov
mov
push
fstpt
push
inc
add
stos
cmp
push
mov
scas
jp
ror
and
dec
lret
jmp
pushf
loopne
dec
fcom
out
mov
xchg
mov
jge
cmpsb
xor
mov
out
xchg
push
mov
adc
or
and
repz
call
mov
mov
jo
cltd
mov
fs
pop
jle
sbb
jl
sub
pop
std
sbb
add
outsl
adcl
outsl
sub
popf
add
aam
adc
pushf
fwait
mov
mov
divl
add
and
test
jb
mov
fiaddl
jp
lea
nop
mov
out
mov
mov
sahf
xchg
incb
jmp
out
jno
sub
outsb
fistps
gs
mov
cltd
mov
pop
pop
jmp
sub
mov
mov
dec
les
or
outsb
lods
loop
ljmp
imul
adc
lahf
scas
arpl
and
xchg
mov
mov
add
movb
xor
mov
or
cwtl
xchg
push
dec
add
pop
or
std
mov
notb
push
mov
inc
paddd
ret
push
pop
loope
lods
in
scas
pop
ud0
push
sahf
sub
leave
mov
mov
movsl
add
mov
fidivl
mov
inc
popf
mov
in
cmpsb
mov
push
nop
bound
push
jae
inc
xchg
push
nop
mov
mov
movsb
xor
mov
movsb
push
dec
add
inc
loope
or
pop
inc
inc
push
icebp
push
pop
add
jp
enter
rcrl
xor
xchg
subl
xor
sbb
mov
adc
ret
cld
gs
scas
mov
ds
mov
lret
scas
add
out
inc
mov
rolb
shll
push
push
push
mov
pushf
sub
inc
bound
cmp
xchg
mov
pop
mov
iret
cmpsb
or
sarl
pop
xchg
loop
int
adc
jmp
fimull
pusha
xchg
lcall
into
lea
mov
lds
outsl
xor
outsl
or
mov
adc
pop
stos
xor
push
cmp
cli
mov
mov
imul
dec
pusha
inc
sahf
sti
fisttpll
cmp
pop
ds
stc
fists
cltd
insl
cwtl
jo
cmovne
add
and
pop
sub
inc
xchg
cmp
or
mov
in
insl
ja
dec
mov
push
mov
loop
je
jge
sbb
in
cmp
std
gs
add
out
xor
mov
xchg
mov
mov
mov
cmp
xchg
push
mov
mov
mov
mov
decb
pop
push
mov
fidivrs
jg
jle
daa
inc
cmp
loop
jmp
inc
sbb
xor
jl
lahf
sbb
mov
movsl
and
sub
jecxz
xchg
lods
sbb
pop
pusha
mov
lcall
bound
aas
sbb
pop
fists
scas
adc
ret
std
adcl
sahf
add
mov
and
pop
xor
or
fcomps
fs
dec
lock
add
lcall
notl
pop
jae
dec
push
imul
cmc
jns
push
push
movsl
mov
packsswb
into
add
in
mov
aam
ss
repnz
sbb
dec
out
xor
adc
mov
push
xor
sbb
sub
adc
and
mov
cmp
rcrl
fldenv
xor
test
push
mov
iret
cmp
ja
or
shrb
pop
iret
or
pop
xor
cld
call
xchg
push
mov
ret
rclb
repz
out
scas
mov
pop
repz
sub
clc
movsb
adcb
inc
stos
push
das
add
cmc
adc
jmp
lock
mov
xchg
clc
inc
inc
pop
fldt
mov
sub
les
or
aas
pop
aas
add
push
cld
or
loop
add
cmp
push
fmuls
insb
sarl
and
sbb
sarb
jg
fdivrs
cmpsl
movsl
outsl
add
push
mov
adc
cli
cmpsl
daa
jo
inc
mov
aas
dec
adc
jecxz,pn
mov
jecxz
loope
sub
pop
add
arpl
addr16
stos
sub
lea
xchg
mov
jno
mov
cli
lods
outsb
adc
ftst
mov
in
adc
ja
in
hlt
sti
lds
and
std
push
mov
mov
inc
arpl
fld
xchg
repz
lods
sbb
cmp
mov
push
pop
sub
sub
popf
lret
call
xchg
push
js
fnstcw
mov
add
mov
fs
pop
scas
jae
mov
xchg
fsubr
and
mov
xlat
cmp
clc
mov
vpavgw
shll
add
int
mov
pop
icebp
sti
addr16
inc
xchg
iret
push
aam
pop
xchg
mov
orl
xor
add
cltd
dec
pop
daa
push
add
jmp
add
xchg
mov
and
cld
cld
movsl
cmp
jecxz
dec
cmp
imul
inc
imul
fnsave
add
into
push
shrb
mov
loop
mov
pop
and
jmp
dec
mov
ret
dec
push
movsl
lret
pop
xchg
js
mov
mov
push
pop
push
sbb
jb
or
popf
ds
outsl
arpl
inc
mov
clc
std
roll
cwtl
dec
inc
stos
push
ret
dec
or
mov
cwtl
sbb
lret
inc
mov
shrb
and
negb
arpl
sub
insb
jl
xor
push
add
addl
notb
push
and
cwtl
mov
aaa
adc
sahf
or
add
sub
lret
add
push
add
lea
lahf
sbb
mov
xchg
lahf
inc
xor
outsb
mov
ret
jo
sbb
pop
push
xchg
pusha
fldcw
adc
xor
sahf
mov
pop
jl
cli
xor
fsubrl
xchg
out
mov
aas
push
jp
cli
insl
fstpl
cmp
les
push
inc
jne
cmp
jns
nop
jne
push
jle
scas
je
data16
mov
lret
mov
leave
aaa
mov
mov
in
lret
jne
out
repnz
and
lea
push
jo
cmp
sahf
ror
jbe
and
push
mov
cmpl
jg
ds
mov
call
mov
gs
jno
pop
mov
call
fdiv
jge
xchg
jge
in
xchg
mov
movsb
repz
clc
push
pop
sahf
xor
fwait
mov
push
lods
cmpsl
mov
and
icebp
inc
notb
sahf
ljmp
xor
inc
ljmp
imul
jmp
cs
xor
push
mov
or
out
push
and
popa
jge
xchg
dec
jb
enter
xchg
les
and
lret
popa
les
rorl
outsb
out
push
jge
cli
inc
rcrb
in
mov
mov
addl
fldl
xchg
xchg
enter
std
inc
inc
cli
push
dec
sub
sbb
mov
je
pop
mov
mov
inc
and
lret
mov
loope
addr16
cld
testl
int3
dec
in
rolb
aaa
insl
or
adc
out
mov
dec
cmp
pop
push
sub
or
lods
jbe
mov
popa
push
or
insb
mov
into
imul
iret
jl
push
jmp
movsb
inc
inc
mov
in
bound
les
mov
jp
sub
cltd
sbb
sarl
or
adc
dec
cmp
aam
insb
mov
and
ds
xchg
mov
fs
cmp
cli
nop
test
int
negb
jae
push
push
mov
add
xchg
jb
push
add
mov
dec
adc
inc
cmp
imul
xlat
enter
shrl
pop
test
fs
lahf
cmp
push
lods
scas
fadds
inc
and
adc
cmp
push
gs
in
jno
and
push
loop
mov
fistpl
fmull
dec
repnz
fmul
shll
outsl
sbb
sahf
movsb
outsl
fs
jo
bound
push
fcomps
jp
stos
lods
movsl
nop
push
loopne
inc
fnstenv
xor
push
push
test
cmpsb
daa
xor
pop
xor
jp
cs
push
out
lret
lods
sbb
cwtl
add
ja
ljmp
xchg
sbb
enter
clc
pop
mov
mov
data16
ja
or
sbb
int3
scas
cwtl
in
sub
push
cmp
jl
mov
aad
xchg
jo
jle
add
insb
lds
dec
and
sbb
in
lret
jecxz
aas
addl
or
mov
ret
dec
cmp
pop
sub
stc
fidivrl
jmp
mov
repnz
push
pop
xchg
repz
pop
pop
mov
cmp
scas
subl
pop
test
lcall
add
shl
mov
mov
add
xchg
inc
cmpsl
jne
gs
xchg
push
test
ja
pop
aad
lds
cmc
aaa
in
adc
mull
cmpsl
jne
gs
xchg
push
test
ja
pop
aad
lds
cmc
aaa
in
adc
mull
cmpsl
jne
gs
adc
jae
pop
aad
lds
cmc
pop
in
adc
fbld
cmpsl
jne
gs
xchg
test
int
ja
jo
lahf
cmp
or
sbb
pop
mov
xchg
xchg
pop
stc
gs
out
mov
js
dec
ss
data16
cmp
push
sbb
enter
test
xor
mov
in
sub
ss
bound
pop
inc
ja
inc
dec
push
sbb
pusha
mov
call
andb
cmp
sub
cmp
jl
sbb
call
clc
out
lahf
or
cmc
xchg
das
inc
ret
cli
sbb
aam
mov
dec
pop
inc
cmpsb
arpl
jmp
and
pop
dec
leave
sub
and
dec
fisubrl
and
stos
or
xchg
sub
mov
iret
rclb
sti
testl
push
vpmullw
enter
sub
pusha
ret
test
shrb
jae
adc
push
jge
movsb
jecxz
and
dec
inc
std
dec
adc
fwait
loop
mov
ss
add
cs
push
int3
jnp
cmp
sbb
inc
leave
fstps
loop
out
jge
es
push
pop
inc
cmpsb
sub
cmpsb
or
callw
xchg
imulb
iret
sbb
out
cs
jle
outsb
rolb
jbe
mov
repnz
mov
cmp
or
dec
and
jns
lods
mov
jecxz
xchg
std
xchg
cwtl
mov
or
arpl
add
je
imul
jecxz
xchg
mov
mov
cwtl
es
push
pop
data16
inc
or
cmpsb
call
xchg
fsub
test
mov
es
push
pop
data16
inc
or
cmpsb
call
hlt
leave
xor
fwait
jns
mov
or
and
fimull
sub
sti
cwtl
xor
bound
outsl
sbb
mov
jg
dec
cltd
rep
mov
outsl
push
cmp
jmp
sti
or
mov
jecxz
mov
xchg
xchg
mov
xchg
cmc
cmpsl
movsb
mov
pop
adcl
dec
and
push
mov
cmp
mov
mov
mov
rcll
data16
jne
popa
and
and
js
inc
inc
icebp
pop
outsb
int
xor
pop
mov
adc
int3
mov
flds
and
or
out
dec
fdivp
nop
jle
cli
xor
hlt
or
scas
and
sbb
push
add
sti
cmp
sbb
push
xor
xor
aam
es
fs
mov
push
out
push
push
idivb
ret
outsl
inc
adc
divl
add
mov
pop
imul
cmp
mov
xchg
mov
or
mov
int3
pushf
inc
daa
xchg
fistpl
xchg
fisttps
test
jae
inc
jno
test
lock
push
jnp
xchg
clc
test
mov
sub
adcl
into
cli
dec
int3
inc
out
xor
cmp
repz
mov
inc
repz
adc
out
insb
fiadds
dec
jle
gs
push
int3
add
inc
push
sbb
mov
fists
add
push
aaa
pop
inc
ret
sub
fcompl
not
rolb
mov
out
out
mov
fisttps
loope
rolb
movsl
dec
jl
mov
out
dec
sub
and
lahf
push
mov
cwtl
pop
add
jecxz
test
and
push
mov
mov
orb
rcrl
inc
mov
pop
jo
in
add
pop
addr16
mov
jecxz
xchg
cld
jmp
jns
jns
call
scas
push
push
pop
imul
sub
clc
es
bound
lea
inc
push
adc
jmp
xchg
cltd
popf
dec
mov
shl
push
loopne
lea
in
xchg
mov
pop
push
inc
add
push
daa
and
mov
inc
mov
das
mov
and
addl
push
pop
mov
jbe
push
into
jne
add
jns
int3
mov
mov
or
lret
cmp
push
cmp
mov
push
ds
or
fbstp
je
pop
iret
pop
sahf
bound
xchg
mov
sub
int3
sub
nop
xchg
je
push
mov
loope
jmp
sbb
dec
inc
loop
add
testb
out
jne
out
sbb
mov
and
rorb
rcrb
add
xchg
lods
xchg
ja
mov
popa
adc
jae
cli
scas
pop
in
cwtl
mov
cmp
xor
in
lea
adc
int
cmp
inc
dec
add
dec
sbb
push
out
jns
inc
jae
dec
sub
pop
sub
push
sarl
mov
and
xor
xchg
pop
std
arpl
addr16
mov
push
enter
imul
das
insb
aas
in
jmp
mov
sbb
sarb
xorb
lret
or
add
xchg
mov
int
gs
add
aaa
popa
add
and
jns
lahf
mov
lock
and
loopne
mov
cmc
cltd
lods
xor
xchg
mov
movsl
insl
mov
push
es
jg
mov
pop
cmp
mov
and
sarb
ficomps
cmpsl
test
ss
ja
sub
and
pop
into
add
adc
mov
push
sub
sbb
aaa
and
and
pusha
loop
xchg
sub
mov
outsb
add
lret
ret
and
outsl
out
and
pop
pop
in
sub
out
out
rcr
lods
jb
fs
test
fbld
push
lock
pop
repz
cmp
xor
jb
aam
mov
xor
and
cmpsb
mov
push
and
popf
pop
es
pop
andl
inc
je
cmp
pop
xlat
dec
add
shrl
sub
dec
aas
dec
push
hlt
adc
movsb
add
dec
inc
jmpw
push
mov
orl
int
stos
aas
mov
jmp
bound
shrl
push
mov
pop
sbb
sbb
inc
mov
out
jae
inc
xchg
sahf
addl
call
inc
mov
out
sub
imul
or
or
jge
in
xor
jno
fstl
dec
clc
insl
jo
fbld
shll
repz
mov
mov
dec
movsl
pop
sbb
sahf
imul
xchg
add
adc
dec
cmp
add
shll
inc
jp
int
dec
sub
mov
cmp
inc
pop
push
outsb
jle
mov
lret
mov
loopne
fildll
test
data16
pop
mov
pushf
sbb
fstpt
aas
mov
lret
pop
lods
pop
push
jmp
loope
imul
std
jecxz
in
and
push
shrl
in
add
and
gs
mov
imul
add
ljmp
sub
adc
and
or
gs
arpl
jp
pop
or
xchg
notb
fiaddl
icebp
ljmp
and
stos
jle
dec
jo
jg
adc
mov
jecxz
in
shll
push
pop
xchg
add
sbb
ja
outsl
dec
inc
jge
sbb
test
mov
cltd
aad
mov
xor
aam
mov
enter
daa
jmp
outsb
cs
cmpsl
push
clc
stos
jne
dec
mov
test
adc
mov
sbb
sbb
or
xchg
inc
xchg
adc
rol
in
dec
cld
setb
sbb
pushf
mov
rolb
pop
and
mov
das
outsl
adc
jne
jne
arpl
mov
or
push
dec
add
or
shlb
cmp
pusha
js
js
mov
sbb
std
push
cli
and
mov
std
inc
mov
jno
inc
mov
xchg
sub
pop
int3
dec
jmp
mov
or
pop
mov
test
cmpsb
lcall
fs
fwait
push
lret
mov
rcl
shl
fwait
cwtl
shll
mov
in
pop
rcl
jne
icebp
xor
dec
xor
xchg
push
hlt
cmp
sarb
test
sarl
lds
fildll
out
push
fwait
pop
ret
adc
popf
xlat
js
fxch
hlt
cmp
ss
movl
xor
sub
xchg
in
mov
push
leave
sbb
adc
push
cmpb
push
inc
lahf
imull
mov
xchg
push
mov
pop
adc
sbb
incb
and
ret
add
pop
je
inc
hlt
addr16
jo
inc
test
jnp
sbb
arpl
inc
mov
call
mov
out
and
out
aaa
fbld
das
dec
orl
loopne
fnstcw
gs
pop
shrb
in
int
loopne
ret
mov
sti
dec
mov
push
das
ficomps
or
int3
lret
nop
jge
hlt
jmp
lds
inc
sub
pop
addb
pop
add
add
out
notb
mov
pop
mov
mov
mov
lock
call
or
adc
mov
mov
shrl
or
in
icebp
sbb
mov
out
mov
mov
imul
in
imul
pop
xor
xchg
repz
rolb
dec
jbe
adc
imulb
xor
stc
iret
aam
jg
mov
test
adc
out
fwait
int3
js
leave
push
cwtl
aaa
cltd
mov
jl
push
iret
lods
testl
lods
scas
scas
mov
sub
jl
fimuls
mov
test
sbb
mov
stos
ljmp
adc
lcall
repz
mov
jmp
add
xor
dec
inc
mov
fisubrl
mov
lret
aaa
lods
test
push
jp
neg
das
sbb
mov
lods
or
lock
add
cltd
shrl
push
push
in
sub
inc
jecxz
xor
cmp
xchg
insl
imul
dec
pop
icebp
xor
leave
inc
sub
mov
dec
mov
test
xchg
sub
mov
and
int
push
faddp
loope
daa
cmp
das
sub
movsl
add
inc
push
jp
xor
xchg
outsb
sbb
push
dec
mov
imul
int
mov
scas
dec
xchg
addr16
bound
lcall
cltd
stos
cli
ds
stos
je
sbb
xor
xor
out
cs
fcomi
or
pop
sqrtps
and
je
in
sbb
lds
lds
repz
pop
lcall
inc
call
inc
cmp
das
scas
ficoms
sti
inc
loopne
jp
movswl
insb
xchg
mov
mov
sbb
jb
out
pop
sub
rorl
xchg
addr16
and
mov
dec
mov
enter
xorl
pop
mov
cmpsb
ljmp
or
leave
aam
xor
insl
add
lock
imul
sbb
xor
pcmpeqw
pop
pop
notb
cltd
inc
adc
mov
mov
add
lods
movsl
cmp
daa
test
push
add
or
jns
pop
out
movsl
fwait
in
ds
push
cld
fldenv
adc
out
mov
lds
xchg
pop
xor
ljmp
leave
fiaddl
leave
aaa
rol
lea
push
mov
dec
test
sub
xor
std
stos
cmpsb
jnp
pusha
inc
shlb
or
jmp
stos
and
lahf
andl
jb
xchg
push
cs
js
pop
add
sbb
pop
int
push
sbb
push
sbb
sub
mov
lods
fwait
sbb
lahf
into
inc
movsl
and
cmp
cmp
push
fidivs
push
mov
fdivs
fnstcw
test
scas
fs
dec
dec
cltd
inc
cwtl
xchg
push
mov
nop
mov
inc
add
sub
mov
lods
xor
inc
insl
fnsetpm(287
mov
add
sbb
js
inc
scas
aad
mov
pop
loope
add
sbb
cmp
bound
pop
ret
cmp
dec
mov
fnstcw
push
add
push
arpl
ret
and
fmull
fildl
mov
call
sbb
pop
rol
lock
fildl
jo
pop
int
xorb
xor
mov
int
pop
inc
sbb
incb
cld
jg
mov
bound
rcl
clc
insl
ja
sbb
or
or
dec
movq
mov
cli
push
and
dec
add
adc
icebp
pop
es
jbe
test
lock
cmpsb
cmpsl
mov
push
js
aaa
xchg
push
shrb
adc
cmp
jo
pushw
cld
mov
cs
das
or
mov
pop
insb
dec
jp
mov
addr16
movsb
jl
mov
shrl
add
push
adc
es
outsl
out
mov
push
faddl
test
pusha
fimull
dec
or
jo
or
cld
jmp
cmp
xor
jmp
sub
das
push
adc
leave
outsl
mov
mov
outsl
repnz
mov
mov
addr16
sub
repz
mov
mov
xlat
jmp
int3
xor
sbb
dec
dec
sub
mov
and
inc
mov
mov
xorl
and
adc
cmpsl
dec
mov
shrb
jge
pop
and
sbb
cmp
enter
cmp
pop
iret
mov
sub
jnp
femms
lret
mov
dec
fldl
xchg
ja
pusha
mov
mov
lea
ds
pushf
jp
repz
inc
lcall
mov
in
push
xor
iret
pop
xchg
out
sbb
lret
push
cltd
pop
xor
xor
or
mov
jp
flds
lret
pop
sbb
dec
clc
add
in
adcb
add
cmp
out
inc
dec
pop
xchg
cmc
push
in
fbstp
pop
rorb
pop
cmp
pop
popa
inc
test
cmp
bound
pop
pop
in
sbb
sub
repz
cld
add
inc
pusha
testb
ret
mov
stos
xchg
negl
lds
sahf
jecxz
jg
mov
sub
mov
scas
and
jbe
rcr
jmp
or
out
icebp
popf
and
test
mov
mov
outsl
sbb
roll
sbb
jecxz
xor
clc
push
dec
cwtl
lahf
xlat
sbb
or
inc
push
into
inc
pop
fnstsw
push
push
xchg
cmpsb
pop
jb
pop
mov
test
adc
push
sti
jmp
dec
dec
testl
mov
jbe
xchg
lcall
pop
jb
data16
xchg
xchg
xlat
lahf
mov
sbb
addb
pop
cmpsl
mov
and
imul
add
in
dec
xor
adc
push
cli
pop
adc
sbb
jb
inc
inc
inc
movsb
repnz
addr16
in
jg
lea
mov
cmc
addr16
mov
push
inc
pushf
lods
cmc
dec
repnz
mov
testb
xor
sbb
sahf
lods
das
jle
leave
push
test
sub
dec
jl
aam
movsl
addb
inc
xchg
orb
mov
pop
lock
push
adc
aad
jo
movsb
and
adc
lds
dec
test
scas
mov
mov
xchg
jg
dec
movsl
repz
adc
or
insb
xor
jl
mov
lea
outsl
mov
repnz
mov
ret
and
repz
and
fwait
das
lds
in
test
xchg
movsb
mov
lock
or
push
pop
cmp
imul
and
pshufw
xchg
mov
jo
int
sbb
incl
jno
pop
sub
fs
xchg
xchg
jge
sub
in
stos
push
lods
ds
adc
adc
xchg
push
in
cmp
cmp
jbe
fmuls
shl
es
loop
mov
xor
adc
divb
dec
dec
lock
mov
jmp
aas
cld
pop
push
sbb
in
mov
dec
hlt
jae
imul
add
bound
sub
fmuls
lds
push
lock
jecxz
pop
test
and
fwait
push
das
lock
mov
rorb
je
mov
flds
jne
mov
stc
dec
cmp
pop
jo
enter
mov
bound
mov
and
pushf
sub
push
jp
push
ja
mov
dec
fcompl
nop
aam
adc
jne
loope
icebp
ljmp
lret
jmp
sahf
mov
adc
mov
sbb
int
test
add
sub
ja
add
pop
mov
ja
pop
aas
jge
or
gs
js
or
mov
ret
ds
scas
loop
push
outsl
add
lea
push
and
mov
pop
push
adc
mov
sahf
cmp
stos
bound
adcl
cmp
aam
shrb
adc
aam
je
xor
lods
push
cmp
xlat
rorb
sub
shlb
scas
lret
out
popf
push
mull
mov
in
pop
sbb
lea
fisttpl
sbb
orl
cmp
stc
movsb
sarl
daa
xor
add
icebp
fcmovu
and
jg
and
sbb
and
dec
aam
push
aas
dec
push
ja
pop
out
aas
mov
cmpsb
imulb
loopne
inc
push
mov
mov
data16
iret
test
mov
out
shlb
add
pusha
xchg
mull
adc
and
sbb
xor
mov
push
push
aam
xchg
cmp
or
add
sbb
mov
scas
fcmovbe
xor
sub
inc
out
stos
fdivl
mov
test
loope
sbb
xchg
test
inc
loop
cwtl
aaa
mov
in
or
sub
inc
cs
pop
es
test
ds
mov
outsl
xbegin
mov
cmpb
xlat
xchg
outsl
fadds
push
pop
imul
test
test
adc
mov
mov
fsubs
out
rorl
push
fistpll
jb
jl
sbb
sub
adc
push
push
add
sbb
sti
loope
aaa
mov
lock
jp
sub
lds
xchg
test
mov
jns
mov
inc
bound
in
and
inc
mov
jb
andb
gs
mov
pop
inc
dec
inc
aam
jg
std
inc
push
test
sbb
cmp
lds
aad
adc
adc
mov
repnz
and
in
push
out
cmpsl
imul
or
adc
scas
mov
mov
mov
jns
lea
repz
shl
jg
dec
cmp
fs
add
xor
mov
jne
xor
xor
jno
aas
pop
jecxz
lock
daa
mov
adc
insb
test
mov
or
or
popa
cmp
pop
lret
sbb
rcrl
or
and
pop
cmp
mov
jnp
jo
adc
aaa
mov
into
aam
outsb
inc
inc
or
cmp
hlt
imul
inc
push
xor
int3
push
mov
inc
add
jb
mov
pop
jns
mov
jb
addr16
in
mov
cmp
ljmp
dec
xchg
out
outsl
push
sub
leave
movsb
stos
dec
jne
test
hlt
jecxz
or
jl
out
push
movsl
jge
lret
mov
loop
and
sbb
push
add
adc
shll
push
out
pop
mov
mov
in
movsl
ret
mov
rcr
xchg
outsl
or
mov
in
ja
mov
and
cmc
xchg
outsb
pusha
popa
loopne
ficoml
cmc
stc
addr16
and
inc
dec
mov
mov
pop
movsl
or
js
cmp
rol
add
dec
adc
jle
js
out
jno
fidivl
test
ficoml
fs
pop
pop
jecxz
and
jno
or
dec
out
mov
lret
xlat
mov
or
or
fdivrs
es
hlt
aam
gs
adc
mov
mov
cmpsl
mov
jp
cmp
sar
mov
adc
in
or
js
orl
push
and
testl
inc
mov
mov
stos
jne
and
xchg
ret
insb
js
add
std
ljmp
adc
in
sub
and
mov
push
jae
push
imul
imul
xchg
adc
data16
icebp
hlt
mov
or
in
bound
es
cli
arpl
dec
out
push
xchg
fisttpll
sub
xchg
iret
inc
push
div
js
inc
cmp
xor
rorb
push
cwtl
int3
mov
fsub
xchg
xlat
fdivs
js
lock
dec
xchg
movsb
test
or
lret
roll
jnp
add
stos
mov
stc
xchg
mov
das
out
or
subb
inc
out
test
lgs
loope
adc
and
sahf
test
jp
fisubrs
jnp
cmp
aas
and
mov
mov
xchg
pop
xchg
inc
out
lret
popf
sbb
fimull
ror
and
xor
sahf
hlt
dec
dec
test
pop
stc
es
les
subb
mov
leave
jbe
arpl
mov
hlt
mov
jle
outsb
outsl
bound
div
fimuls
out
or
mov
mov
aad
mov
int3
or
mov
dec
jne
popf
lods
jno
repnz
add
test
or
jb
fwait
jae
sbbl
inc
sbb
inc
pop
daa
stos
in
adc
mov
adc
or
test
mov
lret
std
mov
mov
out
mov
lret
sub
out
stos
cli
sbb
xorl
inc
pop
lock
nop
cmp
hlt
mov
fwait
call
mov
push
pop
lahf
or
push
inc
rclb
daa
xchg
inc
xor
mov
in
imul
lret
dec
out
in
adc
fucomip
mov
pop
mov
push
xlat
test
pop
adc
call
test
mov
cmpsl
cli
inc
cli
and
cli
xor
jle
test
mov
out
fwait
mov
dec
mov
inc
ret
jmp
or
mov
movl
in
push
cmp
dec
adc
mov
dec
fs
aad
push
cmc
notl
jo
jne
adc
cmp
movsb
xchg
fsub
test
mov
es
push
pop
data16
inc
or
cmpsb
call
xchg
fsub
test
mov
es
push
pop
data16
inc
or
cmpsb
call
xchg
fsub
test
adc
mov
cwtl
es
js
dec
push
pop
data16
inc
sub
xchg
call
xchg
test
mov
fsts
push
das
adc
test
subl
xchg
popf
test
xchg
sbb
inc
cmp
adc
in
push
rcrl
loope
xchg
fadds
or
inc
pop
jns
popa
dec
aas
pop
add
js
mov
pop
test
mov
leave
call
push
sbb
adc
adc
inc
cmp
inc
push
inc
rcll
test
xor
pusha
lret
mov
ret
leave
dec
or
add
and
pop
test
or
dec
push
pop
scas
ss
mov
dec
pop
imul
xor
xchg
jge
js
inc
push
cli
or
push
xlat
jo
lahf
call
in
out
rcrl
loope
test
mov
jno
sub
aam
mov
mov
xor
pop
in
cmp
or
push
jae
roll
sbb
push
cmp
pop
adc
bound
ja
mov
xor
ficomps
jb
shll
add
shlb
pop
inc
push
pop
cwtl
loope
test
sub
push
sbb
sub
pop
dec
sub
js
into
shl
scas
int
fisttpll
les
xor
push
add
inc
sub
mov
fisttpll
call
xor
xor
and
sub
push
js
loope
cld
and
popf
mov
sub
push
sbb
jno
popa
dec
adc
push
rcrl
loope
xchg
fadds
or
inc
sub
popa
dec
adc
push
sarl
movhlps
je
push
sbb
sahf
popa
push
outsl
cmp
imul
mov
stc
pop
and
mov
add
jo
cmp
sub
les
mov
dec
sub
pop
nop
in
pop
daa
xor
fs
mov
mov
mov
xor
adc
cmp
cmp
pop
insl
add
ja
insl
adcl
leave
pop
push
xchg
insl
leave
or
jmp
adc
sub
push
or
sub
mov
enter
fucom
pop
sbb
dec
bnd
pop
cmp
insb
or
jmp
xor
sahf
jne
xchg
negb
mov
not
xor
mov
roll
cmp
daa
loopne
lock
mov
dec
pusha
lret
cwtl
mov
ret
sbb
bound
pop
xor
cltd
inc
xchg
cmp
push
out
mov
sahf
dec
mov
push
inc
xchg
or
fs
add
and
loope
shlb
andb
sbb
or
add
lret
xor
sbb
jmp
out
add
leave
add
pusha
iret
push
mov
xor
jg
jo
sub
sbb
xchg
pop
lcall
in
sub
dec
incb
cwtl
cmp
fists
and
nop
fiadds
leave
fstps
shlb
jae
mov
scas
sub
sahf
enter
jo
insb
cmp
sbb
sbb
cmp
dec
sub
mov
pop
mov
stos
sti
ja
pusha
adc
arpl
mov
adc
out
sub
lods
fwait
adc
push
call
adc
outsl
jge
or
mov
das
xchg
push
in
loopne
jmp
testl
stc
scas
push
rolb
imull
jno
dec
jmpw
into
test
icebp
xchg
pop
pop
mov
xchg
lret
cld
pop
pop
loope
mov
xchg
sbb
inc
push
add
xor
adc
mov
and
jb
outsb
roll
sbb
add
fcomip
jg
xor
rorl
pop
mov
mov
and
in
jp
aas
sub
shr
adc
test
repz
or
sub
mov
inc
fcomps
lods
jmp
jae
rclb
jae
pop
inc
mov
xchg
in
icebp
sbb
sub
sbb
das
cmp
mov
mov
popa
push
sub
iret
andb
push
or
and
inc
or
scas
dec
push
and
adc
pop
scas
iret
outsl
int3
imul
movl
std
add
mov
pop
shlb
jle
js
movsb
lcall
push
jae
push
xchg
sti
rcrb
jmp
jecxz
mov
mov
iret
jne
and
nop
pop
into
ja
cmpsb
jb
xchg
mov
testb
sbb
notl
sbb
loop
adc
js
adc
rcrl
jmp
push
in
jae
nop
push
xor
xor
pushf
push
inc
fisttps
lret
mov
sbb
jle
jne
sub
inc
loopne
ja
stos
loope
test
add
call
rcrb
cld
mov
cmc
and
sbb
out
pop
fimuls
cmp
dec
cmp
mov
outsb
das
push
xchg
jle
outsb
lea
in
enter
mov
xlat
movsl
mov
mov
fucom
add
shlb
xchg
fcompl
push
es
push
push
xor
xchg
jne
out
dec
mov
xchg
lret
jl
xor
pop
mov
push
jg
mov
mov
ret
xor
cs
js
popl
dec
loope
and
xchg
fsubrp
inc
pop
pop
push
push
in
dec
push
push
sub
das
jns
and
mov
scas
adcl
add
imul
lahf
pop
inc
push
sbb
hlt
ljmp
insl
xchg
es
outsb
push
fistpl
insb
pushf
sbb
jbe
adc
and
jp
mov
ljmp
addr16
inc
lock
dec
fstl
mov
jbe
fsubrl
xor
cmp
mov
jecxz
in
lea
rorl
fcmovnu
push
sub
std
mov
jae
daa
les
add
dec
xchg
gs
adc
mov
or
lahf
or
pop
lods
jnp
fldenv
mov
clc
bound
xchg
mov
in
sub
cld
dec
add
fiaddl
das
pop
jnp
enter
push
pop
inc
fisttpl
imul
inc
dec
lahf
loopne
mov
insl
dec
jecxz
mov
mov
cmp
jecxz
repnz
pop
popf
out
sbb
movsb
jne,pt
cmc
xlat
cmp
jno
popf
sahf
adc
daa
insb
push
int
stos
ret
push
fwait
adc
popf
xchg
out
jge
clc
call
or
mov
inc
shlb
enter
xor
mov
imul
cs
std
jecxz
mov
xchg
bnd
loopne
xchg
inc
fmuls
les
shrl
sub
iret
gs
mov
sbb
xor
aas
mov
gs
dec
lods
scas
in
mov
lret
dec
sbb
stc
lret
test
les
bound
xlat
and
movsb
mov
pop
fs
out
lret
mov
adc
cwtl
sbb
and
ficoms
imul
mov
jo
fwait
jecxz
mov
dec
fcmovbe
imulb
dec
daa
sub
fwait
inc
jnp
add
add
cmp
pop
add
lock
xchg
sbb
jb,pt
jnp
mov
jle
mov
pop
jae
adc
mov
adc
mov
notb
loope
inc
lcall
pop
sbb
mov
call
sbb
cmpsb
out
cmp
movsb
sub
pop
leavew
mov
fs
sbb
sub
icebp
cltd
lret
jmp
cmpsb
mov
mov
sarb
mov
or
pop
and
loope
cmp
rolb
sbb
mov
or
jbe
adc
out
add
popf
mov
mov
imul
jmp
gs
cmp
cmp
jl
xchg
pop
inc
mov
or
add
pop
mov
pop
ret
pop
loopne
rcll
push
xchg
push
or
push
and
aad
or
les
in
jmp
adc
and
jne
mov
jnp
mov
ficompl
lds
testb
pop
jno
in
andl
xor
cmp
nop
xor
call
mov
jge
push
sbb
into
sbb
push
pop
pop
mov
cmpsb
xor
in
jmp
dec
jno
xor
addr16
dec
dec
es
dec
loope
cli
add
dec
shlb
hlt
add
jg
sbb
ficoml
pop
mov
sbb
mov
jecxz
pop
repz
xchg
xchg
cmp
jg
rclb
pusha
fiaddl
fmull
mov
imul
push
push
les
icebp
cwtl
lods
cs
ss
jp
lock
std
icebp
or
cmp
gs
repz
in
mov
popa
push
and
lock
pop
xchg
loopne
push
int3
data16
mov
mov
xlat
ror
and
cltd
aam
push
sbb
sub
mov
xchg
mov
arpl
lds
cmp
mov
jb
and
sbb
into
mov
jp
scas
jg
cmp
popa
cmp
add
loopne
xor
pop
pop
shlb
movsl
cmp
lcall
mov
pop
mov
lods
cs
subl
adc
sarb
mov
jmp
jmp
add
call
stos
mov
out
mov
sub
lea
or
stos
lds
mov
jl
mov
mov
sbb
in
movsb
dec
repz
in
xchg
mov
arpl
xchg
pop
mov
adc
lcall
or
inc
mov
push
rcr
inc
jecxz
mov
out
xchg
rcl
sahf
jp
add
sbb
fisttpl
mov
insl
inc
les
ss
cmpl
fsubrl
and
call
mov
scas
int3
adc
fiaddl
mov
inc
push
aam
jnp
mov
cltd
fucompp
loop
in
push
inc
int3
mov
arpl
popa
arpl
iret
aam
sbb
or
je
ret
test
push
push
sub
xor
cmc
xor
jno
cmp
xor
and
or
mov
aas
xchg
push
xor
out
daa
cmp
sbb
bound
call
or
clc
jne
fdivs
imul
lods
in
fwait
and
pop
jno
ret
mov
xorl
out
dec
jne
cmp
fsubrp
jle
mov
mov
rorb
icebp
lret
push
cld
leave
sbb
int3
sahf
loope
mov
pop
and
aaa
mov
xor
mov
push
shrb
cmpl
dec
add
daa
jb
fdivs
and
push
cmp
sbbl
bound
testl
jne
mov
jno
or
fdivrs
rcll
inc
jb
push
or
and
cmp
ficompl
xor
daa
inc
xor
pushf
mov
push
xlat
fwait
jo
push
jl
sbb
xchg
push
int
into
and
or
loope
jbe
scas
fadd
int3
xor
adc
mov
ljmp
dec
jecxz
mov
pop
or
int
push
add
mov
add
addr16
mov
xor
adc
inc
sub
fstpt
push
push
or
or
adc
push
and
mov
add
fst
mov
mov
sbb
decb
rcr
fidivs
adc
dec
clc
adc
xor
inc
dec
scas
add
rcll
adc
sbbl
shl
xchg
adc
xchg
and
icebp
jno
push
add
mov
ret
mov
test
sbb
adc
jmp
xchg
roll
call
lret
add
ja
jecxz
aad
into
cwtl
xchg
mov
dec
fistpl
mov
jecxz
cmp
lods
incb
sbb
push
insb
imul
mov
ffreep
das
sub
mov
pusha
mov
mov
and
pop
xchg
push
sub
test
icebp
lds
sbb
cld
and
out
xor
shlb
scas
fwait
mov
cmp
jge
push
or
inc
enter
pop
mov
lahf
or
test
xchg
mov
or
xchg
xchg
inc
cmp
imull
pop
shrb
or
movl
pop
inc
xor
adc
mov
dec
sahf
push
sbb
cs
gs
cli
add
mov
sub
test
jle
int
xchg
xchg
xchg
mov
push
xchg
lock
dec
sub
lock
sahf
dec
mov
imul
adc
fdivr
clc
adc
inc
sbb
pop
repz
xorb
movsb
mov
mov
sbb
cmp
clc
movsl
fildll
mov
inc
imul
cmpsb
stos
rcl
add
addr16
test
bound
pop
xorl
filds
xor
add
jl
sub
cmp
shl
push
xchg
dec
xchg
mov
stos
and
lods
xor
pop
xchg
cmc
push
and
punpcklbw
add
mov
pop
mov
bound
push
xor
inc
inc
fldt
cmp
test
std
mov
jnp
pop
mov
into
mov
outsb
sbb
adc
jmp
add
adc
adc
fucomi
imul
addr16
test
jp
and
sbb
dec
inc
lcall
out
cs
cmc
fstpt
imull
fbld
sub
pop
ret
push
in
fnstcw
test
lahf
inc
pop
dec
lret
int3
mov
iret
xchg
dec
sub
insl
mov
es
lcall
cmpl
cmp
inc
push
jae
subl
jmp
jecxz
jle
add
xor
or
fimull
int
jmp
loopne
pop
sub
dec
mov
movsb
jae
adc
add
cmpsl
fs
pop
mov
pusha
xchg
jmp
inc
xchg
adc
xchg
inc
pop
std
jb
mov
fdivrs
mov
xchg
jb
jno
push
pusha
push
push
mov
xor
nop
insl
fmulp
jl
mov
push
dec
xchg
dec
mov
fnstsw
dec
cli
imul
daa
int
test
imull
and
loopne
loop
jge
mov
add
es
aas
xor
mov
movb
and
or
jbe
dec
inc
xchg
stc
in
fwait
xchg
cmp
inc
aam
pop
cs
add
mov
fldenv
jb
ja,pn
lods
pop
icebp
jnp
adc
xchg
xchg
or
push
lock
popf
sahf
xchg
in
sarl
es
inc
cmp
inc
or
out
test
arpl
sub
xchg
lds
cmp
and
or
push
xchg
ret
push
xchg
jmp
lods
es
push
pop
roll
cmp
call
fwait
jno
repnz
test
scas
add
in
fdivrs
lret
sbb
or
sub
xchg
lahf
aam
cmp
je
xor
and
push
jo
icebp
adc
cmp
lahf
insl
pop
lcall
or
test
or
mov
sub
sbb
push
in
xor
push
xor
aad
mov
xor
mov
add
mov
subl
inc
fwait
xor
mov
rcll
mov
jmp
repz
stc
int3
mov
loop
cmp
mov
clc
jl
mov
push
cmp
out
dec
mov
sub
insl
mov
out
push
mov
xor
fadd
xor
dec
arpl
xor
repz
sbb
mov
das
movsl
mov
pop
xor
fisubl
das
mov
addr16
dec
shll
ficompl
daa
mov
enter
xchg
pop
push
mov
aad
sub
ret
fisubl
mov
jns,pt
jae
lods
mov
or
nop
or
imul
scas
push
mov
out
sub
ret
cmpsl
std
push
popa
xor
push
push
dec
ficompl
push
or
pop
jl
xor
pop
das
mov
cmp
out
nop
insb
or
int3
ret
stos
js
outsb
cld
fs
mov
sub
fwait
pop
imul
ja
clc
sub
mov
sbb
cmpsl
out
or
mov
das
mov
push
pop
xor
scas
mov
mov
data16
scas
mov
shrl
dec
jge
pop
or
aas
sahf
add
and
lds
cmc
add
testl
clc
es
jg
icebp
into
jge
in
xchg
pop
mov
lock
jne
inc
ds
nop
scas
in
lret
mov
mov
sub
pop
inc
xor
sub
xchg
dec
sbb
and
shrl
sub
fs
pusha
pushf
xchg
adc
cmpsb
inc
mov
inc
outsb
dec
push
scas
negl
xchg
cmpsb
ljmp
jecxz
fnsave
call
pop
and
sub
aad
jl
cltd
push
xor
int3
cmp
mov
or
mov
sub
iret
jns
xchg
cmp
adc
push
or
ljmp
frstor
inc
sbb
loop
lock
shl
ret
lret
jb
scas
or
adc
sub
mov
jb
push
add
mov
into
pop
clc
shrb
movsl
std
ret
or
into
jp
jae
sahf
nop
outsb
aaa
or
dec
xchg
jns
iret
xchg
repnz
pop
dec
mov
in
push
and
movl
xor
into
sub
cmc
sarl
rorl
sub
cwtl
push
jecxz
mov
test
mov
mov
mov
enter
mov
lcall
loop
iret
adc
pop
sbb
push
sub
mov
in
rcll
es
xchg
cmc
cld
inc
lock
insb
or
xor
sub
add
test
shrl
cmp
xchg
enter
jecxz
dec
mov
pop
in
js
negl
add
sub
popf
roll
lods
test
mov
into
and
stos
xor
inc
and
mov
or
dec
jbe
mov
pushf
fldl2e
push
repz
in
cmp
lahf
inc
pop
rcl
andl
xchg
fisubs
cwtl
aad
fld
int
shll
xor
sbb
push
adc
sub
jbe
leave
inc
xchg
sub
cli
push
add
subb
and
and
jle
adc
invd
sahf
sbb
loope
gs
js
jbe
cmp
fstpl
popf
ja
add
mov
push
mov
push
test
and
add
dec
pop
mov
add
and
clc
in
mov
xor
gs
mov
push
mov
push
not
or
in
fdivr
mov
jne
imul
sbb
lea
push
sub
ljmp
imul
lret
ljmp
clc
lock
in
push
pop
sar
or
pop
cli
lcall
jb
push
std
jns,pn
cmp
outsb
cmp
pop
sbb
push
fs
xchg
popl
jo
lds
cwtl
out
push
adc
inc
mov
inc
bound
loopw
add
fsub
enter
loopne
outsl
adc
xor
lretw
pop
sub
mov
sbb
push
push
sbb
out
nop
jle
mov
lods
adc
jne
pop
xchg
movl
push
add
add
call
lahf
mov
fists
pop
jnp
jb
xchg
out
bound
insl
cmp
xor
adc
push
xchg
aas
cmpsl
cwtl
mov
jb
push
xor
lods
add
nop
orb
inc
mov
mov
sbb
scas
push
repnz
lret
sbb
cmp
popf
and
jmp
sbb
cmp
add
pop
arpl
push
xchg
test
push
addl
push
xchg
push
test
ds
xchg
sahf
push
mov
outsl
push
lock
je
in
ret
push
push
repnz
nop
dec
sbb
test
push
dec
push
and
lea
or
ficoml
dec
jl
cmp
lods
xor
rorb
sbb
ret
sbb
rcll
divl
mov
cmp
icebp
mov
pop
or
push
data16
daa
jge
jae
mov
add
ds
jmp
pushf
in
ds
mov
pop
jne
in
inc
xchg
and
push
cmp
rclb
cld
js
jb
mov
jae
ret
jb
and
jp
dec
xor
lahf
es
xchg
adc
sbb
xor
adc
lock
sub
mov
adc
aam
shll
div
idiv
sbb
stos
cwtl
and
mov
ret
cld
rcr
xchg
sbb
pop
fildll
mov
jp
flds
cltd
jg
jo
cmp
lahf
inc
dec
sub
mov
hlt
scas
xchg
popf
shlb
mov
pop
jno
mov
add
sub
add
mov
mov
inc
aad
add
push
or
repnz
inc
into
jb
add
xchg
mov
push
loope
sbb
and
loope
shlb
xchg
add
negb
mov
scas
call
pop
xchg
and
xchg
shrb
sbb
outsl
cmp
fwait
inc
testl
mov
aas
int
push
jb
sub
mov
push
jl
push
rorb
lds
jno
icebp
outsl
ret
lahf
xchg
insb
jns
stc
insb
xchg
inc
outsl
sbb
cmp
or
test
and
cmp
mov
rcrl
inc
mov
jne
jmp
and
push
sbb
adcl
xchg
std
pop
jp
sub
mov
in
fdivrs
imul
mov
divl
xchg
orl
add
repz
dec
cwtl
cmp
daa
popf
setbe
cltd
mov
test
xchg
stos
pop
xor
fiadds
sbb
inc
pop
ds
je
in
pop
sbb
fwait
cltd
fldl
push
and
sub
mov
repz
subl
das
adc
push
sbb
cld
mov
test
sbb
mov
lds
xor
add
frstor
xor
ret
jge
add
aas
adc
pop
das
adcb
aaa
jne
popa
jecxz
outsl
fs
inc
jbe
iret
stos
or
lcall
int
les
push
push
test
inc
push
pop
jbe
lods
in
mov
xchg
inc
xchg
addb
rcll
mov
sub
push
sbb
jno
popa
dec
adc
push
rcrl
loope
xchg
fadds
or
inc
sub
popa
dec
adc
push
aad
iret
test
mov
ljmp
sbb
jno
push
push
xor
mov
sub
scas
sbb
xorb
aas
imul
pop
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
stos
sarl
jecxz
xchg
xchg
mov
sub
cmp
jae
arpl
js
pop
and
stos
sarl
jecxz
xchg
cli
or
fcmovb
cmp
inc
or
arpl
dec
add
pop
and
repz
xchg
loop
shlb
sbb
push
bound
push
push
or
mov
mov
cli
insb
or
sarl
lcall
sub
inc
shl
cltd
outsb
rolb
sub
mov
jbe
add
dec
mov
add
fsubl
fidivrs
inc
push
lds
jne
pushf
push
xchg
dec
mov
stos
inc
out
mov
xchg
sti
xorl
cmp
add
roll
cli
adc
cmp
or
out
adc
loop
mov
or
adc
mov
int
gs
fdivr
or
cmp
sub
push
mov
ja
dec
pushf
das
add
push
dec
xor
arpl
mov
jecxz
xchg
ljmp
push
and
jae
arpl
bound
push
xor
rcr
mov
cltd
aam
testl
and
push
pop
inc
cmp
inc
lds
ljmp
in
lea
pop
xor
adc
xor
adc
iret
xchg
nop
out
repnz
mov
mov
mov
or
arpl
jp
dec
xor
stos
sarl
jecxz
xchg
cli
or
fisubl
or
arpl
jp
dec
xor
stos
rcll
and
cbtw
add
in
inc
or
pop
out
pop
mov
jo
push
sub
sbb
enter
cmp
pushf
sarb
mov
inc
push
daa
imul
jge
mov
pop
push
mov
pop
jae
es
xor
and
je
and
cmp
inc
ficoms
scas
mov
adc
fisubl
jo
push
mov
pop
ds
faddl
es
xchg
xchg
insb
ffreep
stc
insb
adc
pop
insb
incl
out
mov
push
insl
adc
loop
dec
imul
leave
xchg
push
pop
movsl
cs
mov
sti
xchg
jle
pop
outsl
andl
add
dec
stc
inc
xchg
adc
mov
mov
push
mov
rcr
popa
je
mov
inc
sbb
sbb
xor
push
cmp
ss
add
pop
scas
inc
jnp
pop
pop
sahf
xlat
inc
lret
fistpll
jl
cmc
push
idivl
inc
lds
add
sub
xchg
lcall
ret
loope
repnz
and
lret
dec
add
push
mov
pop
movsl
ljmp
ljmp
jle,pt
sub
dec
addr16
pop
and
std
cmp
in
into
test
pop
pop
sbb
pop
inc
das
sub
sbb
cmpb
in
cmpsb
insb
std
xchg
gs
popa
fsubl
hlt
les
adc
aam
shll
pushf
sub
fmull
cmp
jge
xor
mov
push
pop
test
xchg
lds
std
add
sbb
pop
loopne
lcall
ret
adc
daa
adc
into
outsb
cmpl
jne
sbb
in
icebp
lock
adc
sub
xor
push
cmp
gs
and
cmp
orb
mov
and
das
jbe
pop
mov
pushf
pop
sub
popf
test
push
shlb
daa
dec
push
ret
mov
or
test
out
fsubrl
lds
pop
lcall
cmp
sbbl
hlt
shlb
fnstenv
jecxz
roll
sbbl
imul
mov
js
mov
jp
shll
or
js
mov
aad
js
dec
and
ficoml
xor
jno
push
ja
arpl
add
cli
adc
cmp
mov
push
mov
mov
ret
mov
push
enter
das
pop
cmp
movsb
cmp
xchg
push
aas
push
aad
das
cmp
and
out
clc
and
fxch
cmc
cmp
sbb
dec
cmp
xor
sub
jo
aam
mov
inc
mov
pop
cmp
psrld
fdivl
or
pop
ret
gs
js
js
pop
push
imul
jle
mov
movsb
hlt
out
lock
jo
cs
xchg
xchg
jne
inc
lds
out
xchg
jbe
add
adc
mov
lret
jle
inc
addb
jo
xchg
cmc
push
sbb
filds
ret
negl
xor
xchg
push
shlb
dec
movsb
inc
ss
cli
sbb
add
je
add
cmpl
imulb
add
outsb
inc
pop
sbb
jmp
xor
mov
pop
das
mov
push
outsb
dec
mov
fs
mov
adc
sbb
lock
mov
scas
mov
popa
xor
add
pop
out
int3
mov
xchg
repnz
inc
adc
inc
cmc
popf
iret
pop
pop
mov
dec
insb
sbb
pop
xchg
jl
xor
mov
lods
mov
pop
test
leave
xor
jb
lea
xchg
push
mov
mov
push
pop
sub
in
cli
inc
xchg
ja
or
push
movsl
movsb
int3
or
lods
xchg
push
ficompl
mov
lahf
sahf
andb
cs
int
mov
insb
sti
test
jmp
jae
mov
push
rcll
jae
pop
mov
testl
xor
pop
pushf
mov
sbb
lret
lret
mov
dec
jb
mov
sbb
pop
pop
cmpsb
loopne
fadds
cmp
ficompl
pop
mov
cmpl
mov
add
cmovg
gs
cmp
sahf
xchg
cmpsb
sbb
and
js
bound
inc
test
call
push
sbb
pop
fstpt
dec
fs
dec
adc
lahf
lods
div
testb
adc
fcompl
fs
sti
in
stc
jg
xlat
out
push
mov
mov
mov
lcall
adc
sub
test
jle
pop
fildl
mov
pop
sbb
jp
mov
cmpsl
cmp
dec
adc
in
cmp
mov
out
xor
mov
xchg
xorb
sbb
test
hlt
xorb
aam
dec
add
add
lret
sub
out
cmp
cmpsl
cmpsl
and
push
cmpsl
xchg
jle
dec
pusha
mov
inc
les
dec
shll
stc
cmc
insl
addb
push
pop
cmp
imul
add
sub
pop
nop
mov
out
lret
adc
mov
ret
dec
cmp
xchg
xchg
test
in
push
mov
inc
rolb
inc
mov
movsl
push
js
adc
repnz
jge
mov
sahf
fistpl
insb
mov
insl
jno
mov
pop
mov
in
cltd
adc
pop
push
dec
adc
loope
sbb
rcll
out
pop
sub
jecxz,pt
or
inc
cmp
aam
push
jae
repz
jno
lcall
fmuls
push
fistpl
jle
insb
dec
dec
xor
fidivrs
xor
jnp
orl
lock
int
shll
push
nop
xlat
adc
scas
aas
mov
inc
loop
and
lret
lods
or
in
sub
mov
pop
mov
pop
inc
repz
mov
repz
les
cmp
or
movsb
xchg
sahf
lods
cs
dec
sbb
add
loopne
sbb
lods
scas
and
orl
repz
mov
xchg
mov
push
jp
adc
cmp
out
orb
dec
mov
rcrb
test
and
rolb
pusha
leave
pop
sub
pop
and
add
sub
push
lret
fcomi
sub
sahf
push
xor
mov
and
adc
sarl
aam
stos
push
jle
inc
pop
ss
test
insl
adc
adc
mov
cmp
and
jge
jge
jmp
mov
das
paddusb
inc
push
in
jnp
sub
rcl
scas
out
and
sub
xor
ss
ja
in
xchg
pop
sub
cmp
xor
and
xor
lret
lret
jp
xchg
mov
arpl
imul
inc
cmp
scas
aad
mov
inc
cmp
cmpsb
jae
push
cs
pop
mov
xchg
add
jno
jge
xchg
movsb
pop
push
mov
and
pop
push
aad
popf
sti
adc
ss
fildl
rcrl
cwtl
enter
lock
sahf
xchg
imul
mov
sub
neg
mov
mov
fcmovnu
adc
mov
dec
les
cmp
es
inc
push
mov
xchg
and
shl
sub
rclb
stos
popa
fisttps
stc
clc
in
movsl
out
in
jbe
sti
fldcw
rclb
lcall
push
mov
test
ret
out
cmp
sarb
add
mov
sarl
jnp
jb
mov
pop
cmc
fstl
push
lret
lock
cmp
jne
sahf
in
fstpl
and
daa
sub
sti
ficompl
dec
nop
jle
and
mov
repnz
pop
stos
scas
dec
adc
cmp
pusha
cmpsl
or
sbb
jo
sarb
xor
loop
imul
adc
in
xor
aam
jne
dec
dec
mov
loopne
xor
sarb
fwait
lods
xchg
imul
in
sbbl
mov
in
add
stos
push
jbe
jmp
inc
xchg
cmp
push
frstor
mov
pop
lods
xchg
aad
loopne
jmp
push
sub
inc
in
inc
dec
lds
bound
je
mov
daa
push
mov
mov
repz
lcall
add
jp
cmpsb
fsubr
adc
xor
js
xchg
mov
and
vmovshdup
dec
ficomps
add
addr16
aam
cmp
xchg
leave
cmp
cltd
pop
and
dec
fdiv
sbb
je
ja
push
push
clc
dec
rolb
hlt
xchg
icebp
fisubrs
loope
aam
mov
jne
inc
mov
xor
jmp
addl
lea
lahf
fildll
dec
iret
jne
or
push
mov
andb
cmp
xchg
js
pop
cmc
xor
nop
leave
xchg
sarl
es
cwtl
mov
outsb
ds
inc
add
xchg
mov
js
mov
or
in
fwait
xchg
cmp
or
out
rep
adc
mov
lahf
pop
xchg
lds
es
mov
fsubrs
jecxz
mov
loope
push
mov
daa
push
mov
aad
mov
leave
sbb
mov
cs
in
mov
sub
push
out
es
outsb
add
xlat
fldz
sub
mov
mov
lcall
inc
lret
mov
dec
mov
movsb
scas
and
or
pusha
jbe
and
aam
stc
shl
aad
or
imul
lret
arpl
cwtl
push
jge
outsl
js
sbb
call
dec
nop
xchg
out
cmp
cmc
stc
mov
and
cld
push
fadd
aad
and
data16
nop
sub
add
outsl
inc
pop
jno
sub
movups
mov
mov
imul
nop
stc
pop
gs
lret
movsb
daa
mov
pop
popa
rorl
xor
adc
insl
popf
inc
out
hlt
add
lret
sub
push
add
push
cmp
scas
jp
sbb
mov
pop
and
test
fwait
bound
add
pushf
cli
pop
or
das
lds
dec
mov
xlat
jl
cmp
test
pop
fldcw
out
icebp
sub
jnp
out
adc
mov
push
sub
mov
rcll
decl
cmp
dec
cmpb
mov
les
rol
sub
jo
push
cwtl
hlt
test
fisubs
cmp
mov
int3
jmp
pusha
fldt
push
xchg
shll
in
mov
dec
pop
fiaddl
mov
sbb
cmp
aas
call
xchg
fwait
test
fdivrs
out
lret
cmp
dec
mov
je
mov
dec
adc
cmp
iret
out
ja
out
mov
jne
pusha
es
cmpsl
and
adcb
sarb
pop
cld
jg
inc
jb
cmp
cmp
mov
mov
addr16
enter
aad
sahf
xor
push
fst
in
jle
ja
rcrl
cli
gs
sbb
push
pop
pushl
cwtl
mov
inc
movl
pop
pushf
sub
mov
mov
fisubrl
dec
ss
lods
jecxz
dec
mov
dec
inc
sub
inc
lock
xor
xor
add
dec
push
cmpsb
or
add
shll
imul
and
sub
aad
adc
dec
loop
lock
addr16
push
int
mov
jmp
scas
aas
imul
adc
dec
cmc
std
jae
pop
int3
in
in
pop
pusha
push
les
add
jle
jmp
je
cwtl
loopne
add
insl
rorl
pushl
shlb
pusha
icebp
cmpsl
daa
or
mov
negl
aas
mov
xor
outsb
pop
sbb
gs
out
pop
ror
sbbb
or
jp
ret
jge
mov
mov
xchg
repz
sub
stos
pop
push
cwtl
ljmp
xor
in
xchg
xor
mov
xchg
idivl
mov
shlb
dec
jl
lahf
add
cld
pop
sbb
sub
lock
xor
push
mov
dec
mov
pusha
dec
add
xchg
mov
imulb
mov
movsbl
sahf
dec
lds
cld
pop
or
test
cld
pop
sbb
ret
xor
xchg
mov
cmp
jbe
clc
add
xor
scas
fs
loop
lods
adc
gs
jge
pop
gs
xchg
cmp
pop
mov
lds
add
adc
dec
xor
mov
in
xchg
mov
movsb
aaa
data16
or
dec
nop
scas
push
add
outsl
gs
pop
or
int
xchg
sub
cld
xchg
mov
inc
push
outsl
adc
xor
pop
pop
push
pop
jmp
pop
xchg
mov
and
xchg
cli
or
lret
int3
sahf
dec
out
push
mulb
adc
lret
mov
cmc
mov
push
cltd
cld
repz
jp
in
push
adc
stc
cmp
push
mov
pop
mov
adc
aas
adc
popf
mov
ret
loope
mov
lret
xchg
fs
sti
mov
mov
jl
nop
xchg
sbbl
decl
pop
xchg
cmp
addr16
xchg
cmp
inc
mov
or
sub
icebp
mov
adc
adc
sub
sbb
std
inc
jmp
sub
loop
inc
stos
pop
rolb
movsl
sbb
or
subb
imul
mov
cmpsb
insb
enter
jecxz
bound
or
cwtl
inc
inc
lods
ss
add
shll
aam
and
mov
lret
push
gs
lock
lods
mov
into
mov
mov
leave
sub
push
into
jae
mov
shlb
fildll
in
inc
test
outsb
out
cmp
cld
loop
rcrb
push
pop
ja
sti
and
cmp
dec
loope
repnz
push
popf
dec
mov
lret
inc
test
ljmp
add
push
dec
int3
xchg
inc
ds
dec
cmp
xor
lock
scas
jno
xor
lret
lret
or
xchg
or
or
data16
cmp
mov
or
lods
inc
aam
fadds
out
faddl
inc
mov
push
xchg
enter
into
repnz
cmp
dec
xchg
xor
or
test
icebp
negb
jae
aam
sbb
dec
repz
or
jmp
mov
insl
mov
iret
sahf
mov
pop
outsb
cmpsb
into
jg
insl
repnz
cmp
dec
mov
push
pusha
jecxz
sbb
jbe
xchg
push
pop
aam
push
fimuls
xchg
out
dec
arpl
scas
leave
out
mov
adc
sbb
fnsave
rorl
icebp
test
les
mov
pop
dec
push
mov
sbb
loopne
fnstsw
jecxz
adcb
ljmp
jmp
xor
shlb
addb
dec
pushf
xchg
xchg
mov
mov
imul
movsb
adc
ret
call
cmpb
int3
cmp
fdivrp
pop
fsub
aaa
jnp
add
outsl
cmp
jae
push
dec
imul
pop
mov
cli
idivb
pop
xor
adc
mov
mov
jns
sbb
mov
stc
out
loope
xchg
enter
scas
shlb
xchg
mov
aad
lcall
push
mov
stc
test
iret
aaa
sub
aad
jl
jl
add
inc
fildl
mov
ljmp
mov
inc
cmp
and
xchg
cmpsl
cltd
xlat
imul
ss
mov
pop
mov
sti
stc
out
cmp
loopne
sbb
nop
cmp
daa
in
jnp
gs
add
jno
push
clc
fstl
jae
xlat
xchg
std
sbb
lret
sub
icebp
lods
adc
ja
fisttps
jmp
sbb
in
imul
jge
push
rolw
mov
sub
jne
outsb
mov
inc
mov
adc
ljmp
loope
mov
movsb
leave
or
push
arpl
pusha
add
adc
lock
aam
subl
and
pusha
jle
jno
cmc
push
push
mov
jg
jnp
xchg
aad
cli
jmp
and
and
xor
enter
call
or
pop
mov
and
sbb
insb
imul
xchg
aam
outsb
adc
out
in
gs
in
dec
push
ret
loop
mov
call
int
test
clc
in
rol
cwtl
insb
jle
repnz
cltd
in
int
push
enter
fimull
push
fwait
ret
out
sub
jecxz
test
or
sahf
dec
aas
sbb
dec
pop
rcr
push
fnsave
xor
push
inc
push
lret
not
test
or
lret
mov
popf
iret
push
jo
in
out
shr
es
mov
lods
pop
xchg
jle
dec
mov
pop
mov
bound
das
cli
js
mov
loope
pushf
sbb
shrb
sbb
mov
mov
inc
adc
sbb
popa
pop
sbb
js
aaa
je
std
mov
lods
lcall
repnz
inc
mov
jno
inc
aas
faddl
jg
ds
xchg
out
stos
lahf
repnz
cmp
test
sub
leave
out
and
add
xor
adcb
in
sbb
insb
int3
insb
mov
mov
jl
adc
ret
push
sbb
stos
int3
pusha
fwait
cmp
les
insb
xchg
pop
sub
sbb
sbb
orl
ja
or
mov
sub
dec
jb
sbb
mov
mov
loopne
fnstcw
push
and
xor
jnp
ja,pn
mov
mov
fcomip
lcall
outsl
pop
rorb
aaa
pushf
push
or
bound
jmp
mov
cmp
mov
lds
test
pop
loope
jns
mov
rcr
adc
insb
mov
pop
cmpsl
xchg
nop
dec
pop
adc
cli
enter
cs
mov
das
sub
fisubrl
mov
out
inc
mov
insb
inc
dec
push
sbb
push
fisubl
xchg
mov
mov
pop
add
mov
mov
cmp
icebp
in
mov
dec
rorl
push
mov
and
mov
add
push
out
mov
fdivrl
in
lods
popf
pop
xchg
mov
fadd
xor
cmpsb
stos
pop
ljmp
mov
gs
and
jg
sbbl
push
mov
adc
scas
dec
dec
mov
fucom
sti
dec
mov
cmp
mov
out
sbb
mov
mov
mov
mov
push
nop
dec
cmp
cmpsl
cmp
xor
mov
subb
pop
lcall
xor
sahf
aas
push
cmpsl
imul
pop
stc
sbb
cmp
cmp
flds
mov
sub
jg
into
aad
pop
or
mov
imul
addr16
adc
inc
loop
fldenv
cmp
cmpsb
ret
mov
in
mov
testb
lods
in
repnz
jno
cmc
out
mov
mov
nop
jmp
lea
pusha
negb
lcall
cwtl
mov
insl
xorl
dec
jl
sbb
mov
lcall
test
dec
sahf
add
push
dec
insl
lods
gs
inc
dec
jns
dec
lahf
mov
inc
das
jno
xor
dec
mull
xor
sbb
xor
mov
mov
jae
push
sbb
fldl
scas
bound
pop
adc
imul
dec
dec
in
mov
xor
push
push
aaa
mov
pop
cli
call
push
addb
dec
mov
sub
add
xchg
push
pop
or
cmp
push
mov
imul
add
mov
icebp
ja
jmp
jl
ss
cltd
jle
mov
or
pop
mov
xlat
jo
pop
push
dec
jbe
or
sbb
adc
enter
mov
insl
loope
mov
std
mov
sti
mov
in
repz
or
lock
mov
fidivl
out
mov
pushf
into
movsb
xchg
lahf
pop
mov
ret
xchg
jp,pt
push
daa
imul
inc
jp
in
mov
xchg
jmp
out
loopne
add
out
ljmp
ss
pop
xor
dec
lds
push
push
xchg
es
cmc
or
cmp
int
int3
push
imul
pop
or
xor
data16
pop
sbb
xor
pop
and
stc
lods
lahf
cmc
repnz
cwtl
cmp
jp
lret
jno
xchg
xor
outsl
sub
ret
repnz
cmp
sub
xchg
push
nop
cmc
mov
push
rcrb
std
add
cs
adc
xor
jmp
add
xor
sbb
lds
push
sub
or
outsl
lret
popf
in
xor
sbb
push
push
or
push
inc
pop
xor
je
dec
sub
jp
push
lcall
xchg
cli
or
fisubl
or
arpl
jp
dec
xor
stos
sarl
jecxz
xchg
cli
or
fisubl
or
arpl
jp
dec
xor
stos
sarl
jecxz
xchg
cli
or
fisubl
or
arpl
jnp
dec
xor
stos
sarl
jecxz
xchg
cli
orl
arpl
push
jae
adc
fwait
repnz
mov
movsl
fdivrl
sub
popf
xor
lea
popf
pop
lods
push
mov
pop
in
dec
std
mov
sub
out
pop
fildll
jge
lea
popf
pop
lods
bsr
in
dec
std
mov
sub
out
pop
fildll
jge
mov
shll
mov
sub
lret
imul
outsb
aaa
sahf
pop
xchg
loopne
xchg
lods
into
ljmp
dec
xor
add
jo
add
xor
xor
mov
or
ret
sbb
push
je
lcall
dec
jnp
pop
test
jge
int
out
cmp
dec
cld
mov
sub
sub
dec
cli
dec
pop
test
sub
loope
gs
sbbb
faddl
dec
loope
sti
jo
cmpsb
dec
out
mov
xlat
enter
push
jb
sub
nop
cwtl
paddsb
inc
mov
pop
sub
dec
cmp
cmpsb
iret
clc
push
test
loop
sbb
iret
std
jae
scas
sbb
decl
pop
fildll
jge
lea
popf
pop
lods
bsr
outsl
fstpl
dec
mov
imulb
jnp
and
or
pop
ret
ja
jle
outsl
movsb
cmp
or
cli
sub
stos
jae
add
icebp
sbb
mov
cmp
lock
jecxz
mov
out
pop
fildll
jge
lea
popf
pop
lods
bsr
outsl
fstpl
dec
std
mov
sub
out
pop
fildll
jge
lea
popf
pop
lods
bsr
outsl
fstpl
dec
std
mov
fbld
dec
xor
cmp
dec
xchg
push
pop
sbb
ss
sti
jecxz
sbb
imull
sub
fs
sti
mov
cli
gs
sbb
out
jnp
jmp
jle
mov
jno
and
mov
loope,pt
adc
test
pop
cmpl
out
adc
or
pop
mov
cmp
sub
xor
in
jl
sub
hlt
shll
repz
cmp
mov
lea
in
or
sub
clc
or
sub
cmp
outsb
stos
sti
xchg
notb
fwait
xchg
shr
add
jbe
pop
adcl
mov
inc
mov
mov
push
ficoml
shlb
xor
add
jnp
sbb
into
mov
popf
xchg
cmpsb
into
in
xchg
inc
bt
loopne
inc
xchg
or
cmp
std
into
and
dec
repnz
jae
lahf
sbb
lock
int
adc
movsl
test
rorl
mov
push
dec
rcll
and
fdivp
pop
repz
repz
sbb
pop
pushf
sarl
cmp
push
enter
out
push
mov
and
test
mov
sbb
and
push
cmpsl
and
mov
cmc
std
mov
cmp
rcrl
out
sbb
push
imul
ds
fucomi
loopne
sub
in
adc
mov
sbbl
test
fldl
nop
jl
mov
push
pop
cmpsb
and
insb
gs
adc
jnp
loope
pusha
in
lods
inc
xor
repz
fs
aam
mov
out
mov
pop
lock
in
mov
mov
sub
aad
xchg
adc
pop
inc
jle
aad
nop
inc
cld
nop
test
jle
scas
mov
xchg
sbb
scas
sar
jno
in
movl
aas
je
and
sarl
or
leave
lods
lret
cli
jno
dec
push
sbb
mov
enter
pop
jb
test
aad
fbstp
push
inc
test
mov
stc
xor
in
icebp
pop
addr16
lea
movsl
test
mov
and
dec
cli
insb
sahf
inc
fs
xor
push
mov
andb
sar
in
lea
cmp
cli
sbbl
jne
cmc
stos
movsl
arpl
jle
push
ret
pusha
pop
addr16
ror
loop
repnz
adc
cwtl
cld
mov
xchg
pushf
rcrb
movl
das
mov
cli
ljmp
pop
jecxz
shlb
mov
ret
test
inc
push
and
inc
dec
sub
mov
js
test
js
hlt
ss
idiv
dec
sub
jp
mov
fldcw
adc
push
out
xchg
sub
int3
fwait
jge
and
inc
loopne
xor
and
scas
sub
shlb
mov
mov
fisubrl
arpl
andl
inc
inc
dec
fists
lret
or
aam
pushl
sbb
lret
aam
sub
rorl
movsb
mov
mov
or
adc
dec
cmp
xchg
mov
mov
sbb
and
jbe
and
pop
fistps
loop
iret
inc
fcomi
sub
pop
xchg
aaa
loope
push
les
sbb
aam
inc
or
xchg
out
inc
pop
mov
in
outsl
add
call
dec
xchg
jecxz
jecxz
aas
xor
jmp
insb
add
jp
pop
add
into
cmp
sub
dec
addb
pop
adc
loopne
mov
cmc
inc
mov
xchg
mov
nop
into
aad
dec
dec
out
and
stos
xor
lea
sub
aaa
lret
pop
mov
outsl
sub
ret
mov
pop
in
push
xchg
std
jge
push
xchg
loop
hlt
dec
je
xchg
pop
xchg
icebp
call
aaa
lds
aam
jbe
and
aad
lea
add
cmpsl
cmp
and
sbb
pop
or
xchg
cmpsl
dec
into
inc
xor
mov
into
inc
iret
shll
mov
icebp
inc
bound
xchg
lock
outsl
mov
xchg
jl
arpl
in
test
sbb
mov
jne
dec
xchg
icebp
lret
rcrb
pop
fbld
mov
rcrl
insl
mov
push
insl
aad
and
pop
jg
jp
sti
test
lret
xor
xor
aam
mov
in
popa
loop
enter
add
out
sti
xchg
and
mov
jns
outsl
movsl
in
add
mov
test
push
lods
in
sub
mov
mov
inc
mov
lahf
cli
shlb
mov
add
mov
lret
sub
inc
xchg
jl
insb
inc
int
shlb
pop
xchg
inc
lret
mov
mov
scas
fsubr
xlat
inc
or
jns
jno
sub
push
sahf
xchg
lds
clc
rcrl
xor
movb
mov
jo
out
mov
enter
and
mov
cmp
insl
sbb
pop
data16
rclb
fadds
push
jnp
lods
and
cmp
push
xor
xor
in
stos
adc
insb
mov
loope
lock
movsl
mov
jo
sbb
out
shrl
mov
push
fmuls
sbb
out
add
inc
dec
in
sub
sbb
cmc
orb
data16
jnp
rol
test
mov
jl
in
push
lods
lcallw
sbb
loop
outsl
dec
in
popa
pop
addl
in
ja
push
inc
fcomps
xor
add
lcall
pop
shl
cmc
rcrb
hlt
pop
jg
xchg
xchg
mov
dec
and
lea
or
xchg
std
mov
ss
repnz
pop
push
aad
and
xor
outsb
sbb
cmp
loopne
aad
or
ret
mov
dec
sub
sahf
sub
sbb
lahf
lea
pushf
jo
mov
dec
push
pop
lea
fcmovb
je
add
ds
aam
data16
pop
push
pop
clc
popl
lret
pop
adc
jnp
jg
jmp
popa
mov
ffreep
mov
mov
ss
mov
js
scas
repnz
enter
push
test
icebp
xor
push
out
xlat
imul
xor
sbb
daa
lcall
cs
test
xchg
aas
inc
addl
mov
mov
inc
cmpsb
cmp
or
aaa
fxch
or
std
std
in
cmc
or
or
icebp
push
cmc
int
dec
dec
fdivs
jle
addl
pushf
loope
jecxz
ljmp
stc
mov
adc
shrb
rorl
mov
xor
lods
in
loope
sbb
adc
cwtl
int3
mov
call
jmp
xor
js
cmp
add
jp
out
push
ds
leave
in
lods
dec
dec
or
xchg
repnz
xchg
jle
pop
cmp
cli
pop
addr16
adc
cmp
jns
jl
mov
pop
add
cmp
push
fdivrl
push
aam
clc
or
dec
adc
mov
sbb
fdivrp
paddsb
xor
in
pop
xchg
mov
xchg
push
cmpsb
mov
dec
fmul
mov
sarl
sbb
inc
in
xor
mov
cli
shll
jle
xor
dec
xchg
xor
dec
fisubrl
ja
insb
stc
xor
gs
dec
jmp
xor
jle
test
xor
push
pop
mov
repz
pusha
insl
loop
in
xchg
inc
xor
pop
js
in
push
sub
dec
lea
add
out
cs
push
std
xchg
hlt
adc
cmp
cmp
in
jbe
and
aas
bound
push
jle
sti
adc
cmp
xchg
or
sbb
adc
daa
dec
push
dec
and
aad
lods
rol
pop
push
jecxz
inc
push
incl
xchg
pop
stos
adc
cmp
lock
mov
sahf
pop
dec
cmp
cmp
shll
jg
insl
dec
rol
xor
adc
test
pop
push
sbb
adc
xor
jbe
mov
pop
mov
adc
sub
jge
mov
add
sub
mov
cmp
pop
scas
lea
cmp
add
in
data16
push
xchg
push
out
lcall
test
cmp
stos
cmpsl
pop
loope
sub
push
test
push
mov
addr16
xchg
cmp
popl
fidivs
es
ret
and
jae
adc
cmp
mov
add
ret
jb
mov
push
mov
rcr
rorb
mov
loope
or
and
icebp
mov
shl
xor
and
mov
pop
xor
call
jbe
mov
lock
sub
arpl
aad
xchg
ss
fst
rorb
sti
mov
push
mov
or
mov
divl
in
fadd
mov
jne
testb
scas
xor
sub
jno
es
pushf
fisttps
pop
sbbl
sbb
jne
adc
fwait
leave
mov
lods
jbe
cmp
add
ret
sub
cmp
adc
jnp
fsubs
daa
pop
fsubrl
pop
inc
test
jmp
xchg
sbb
leave
mov
stos
dec
das
fdivr
scas
pop
mov
sbb
add
dec
xchg
cmc
mov
jmp
push
mov
add
cld
sti
jne
sbb
mov
sub
xchg
push
divb
cwtl
and
test
inc
push
subb
push
sbb
out
jp
shll
xor
rorl
dec
lahf
xor
ror
cmp
fwait
sub
lret
aam
sarb
dec
lods
cmp
cmp
outsb
test
inc
iret
cmc
sbb
out
cmp
xchg
leave
dec
arpl
cmp
in
sub
ja
sahf
mov
fmul
fimull
jmp
shll
lods
int3
ljmp
iret
hlt
cmpsl
or
jle
movsl
push
inc
loope
inc
jge
push
xor
mov
jmp
push
dec
pcmpgtb
in
mov
out
mov
pop
dec
pop
pop
jg
es
add
push
add
fcompl
cld
loope
xor
cli
and
mov
cwtl
and
and
push
mov
jbe
clc
jg
dec
jne
sub
fs
sbb
roll
jae
jnp
ljmp
mov
jae
adc
jg
sub
pop
bswap
cmp
xor
addr16
inc
jecxz
clc
sbb
ffree
loope
out
jae
je
ret
push
call
push
repz
lahf
sbb
xchg
push
pop
movsl
adc
mov
inc
test
add
ja
ja
aas
or
sbbb
push
xchg
pushf
xchg
inc
xor
popf
inc
xor
cld
imul
fs
in
icebp
test
stc
push
addb
loop
rorb
sub
and
cmpsb
adc
dec
mov
pop
sub
inc
push
out
pop
pop
adc
mov
pop
enter
push
dec
insb
inc
je
pop
sarl
and
pop
adc
sub
xor
leave
fimuls
xlat
mov
stos
jl
dec
mov
mov
inc
adc
in
imul
aad
xchg
lods
mov
dec
rorl
frstor
add
fstpl
roll
movsl
mov
jmp
je
es
push
cli
lock
gs
lods
xchg
lret
into
mov
neg
popa
inc
into
shll
ret
sar
js
stos
fs
mov
inc
jno
adc
ja
mov
pusha
nop
test
xor
mov
arpl
xor
fiaddl
cmpsb
adc
push
pusha
lcall
movsb
sbb
push
inc
popa
addr16
aaa
lock
repz
pop
xchg
test
mov
es
mov
testl
pop
dec
adc
mov
pop
icebp
inc
or
jmp
cs
push
movsb
addr16
mov
in
adc
jae
lods
movsl
in
insb
cmc
out
sub
std
imul
xchg
ficoml
jae
cmp
push
mov
faddl
jle
orb
xorb
call
push
fld
xorb
mov
addr16
movsb
add
outsb
xchg
push
push
push
add
pop
imul
adc
mov
outsl
cmp
mov
sbb
xchg
push
push
mov
fldl
jmp
mov
daa
sbb
sbb
ret
inc
rcr
or
mov
mov
bound
movsl
out
push
cwtl
cmp
ret
and
dec
nop
ljmp
cpuid
pop
push
inc
sbb
les
out
mov
adc
call
aam
and
mov
mov
sub
dec
mov
sbb
js
push
mov
mov
jg
jle
clc
pop
xlat
sub
into
mov
sub
sti
xchg
mov
imul
and
shlb
push
in
or
jnp
aaa
and
fistpll
sub
inc
fdivl
lahf
imul
std
or
and
push
adc
mov
cmpsl
mov
data16
xchg
repz
xorb
push
sub
loop
xor
and
movsb
cli
test
ds
in
pop
dec
lret
add
out
mov
pusha
inc
xor
stos
ret
fsubrp
push
xor
stos
xor
cmp
mov
leave
jae
pop
adc
adc
push
ret
cmovle
rcrb
mov
push
xchg
insl
cld
xor
movsb
xlat
cmp
cmc
sbb
sub
fcmovb
sub
jb
pop
icebp
dec
shrl
out
or
and
mov
fldenv
lret
sbb
xor
pop
gs
jl
cmpsb
stos
jns
add
add
and
mov
mov
outsb
cmp
pushf
mov
or
push
into
jb
sbb
mov
jg
push
xchg
mov
xchg
daa
xchg
sbb
lock
cmp
sbb
insl
stos
pop
ficoml
sub
out
inc
dec
dec
cli
xchg
out
mov
jo
mov
mov
inc
pop
mov
test
inc
fcmovb
cmc
cmp
fcompl
or
es
inc
cmp
pop
lret
incl
aad
fidivrs
mov
dec
mov
or
scas
js
fcmovb
xchg
popf
jno
jo
mov
sub
xor
hlt
or
or
and
mov
dec
jecxz
xchg
imul
xor
sub
aas
stc
mov
mov
or
pop
dec
out
mov
out
mov
stos
add
inc
ret
cmc
jo
pop
in
cmpsl
data16
xchg
testl
xchg
adc
mov
insl
jb
imul
pop
mov
mov
in
rcr
stos
std
pushf
cmc
sub
jo
gs
sbb
and
fisubl
fmul
dec
and
jl
adc
xchg
fs
in
mov
inc
jmp
adc
jecxz
in
jae
and
mov
lret
inc
je
xchg
lret
mov
ds
or
push
sub
popa
sub
mov
out
mov
pop
push
lds
sbb
or
outsb
andb
mov
mov
mov
int
loopne
popf
cltd
inc
or
xchg
sbb
daa
sti
inc
mov
cs
mov
scas
cmp
ljmp
cmp
negb
and
inc
jecxz
add
or
mov
popw
jne
xchg
adc
fbld
xor
mov
lods
pop
sti
addb
scas
into
out
inc
xchg
mov
fst
insb
add
push
xchg
fbld
nop
cs
sahf
out
pop
cwtl
inc
outsl
xor
xor
push
inc
iret
insl
in
jno
jno
add
pop
aas
repz
loopne
sub
shll
fistps
jmp
fisubs
add
mov
mov
xchg
movsb
jmp
push
mov
loope
jl
testb
and
mov
loop
mov
shlb
inc
xchg
and
fldenv
rolb
bnd
push
sbb
fmull
sti
aas
mov
add
push
cmpsb
jb
inc
push
push
inc
mov
and
out
sbb
jo
adc
je
mov
test
data16
pop
push
push
xchg
mov
xchg
cmc
cs
dec
mov
mov
mov
loop
jae
pop
mov
pushf
mov
dec
outsl
xchg
clc
addb
inc
cmpsl
cmp
pop
cmpsl
push
lds
addr16
iret
xchg
jnp
cmp
add
aam
or
mov
iret
mov
jae
sub
pop
pop
xlat
adc
inc
push
pop
int
fwait
sbb
jns
stc
and
loopne
mov
jl
lock
jns
adc
aam
insl
mulss
lret
aaa
int
and
enter
or
xchg
mov
loopne
cltd
jns
int
xor
sbb
mov
aad
mov
add
mov
dec
daa
ljmpw
arpl
inc
mov
lods
adcl
daa
inc
repnz
in
sbb
push
lds
push
add
fwait
inc
or
dec
xchg
cmp
test
fs
mov
aaa
or
imulb
jnp
jecxz
loope
push
call
and
or
mov
loopne
ficoml
addl
add
in
shlb
les
adc
int
mov
mov
rolb
mov
mov
sti
cmp
adc
into
out
sbb
jns
cmc
mov
call
insb
lods
sti
loope
push
pop
push
dec
scas
into
in
test
pop
mov
nop
in
push
jbe
push
xorb
dec
inc
out
mov
sub
pop
call
mov
pop
ret
sbb
dec
loope
cwtl
mov
repnz
dec
sub
xchg
xorl
and
xchg
mov
shrb
mov
and
mov
fwait
sub
sub
test
cmp
lret
sub
cmc
mov
test
cli
adc
pop
aaa
imul
cmp
sbb
dec
adc
mov
inc
loop
icebp
test
stc
jecxz
jp
dec
stos
scas
cmpsb
and
jecxz
lea
push
test
add
mov
mov
xor
repnz
push
inc
adc
enter
sbbb
aad
xchg
std
or
xchg
adc
adc
pop
mov
xchg
test
idivl
clc
scas
fdivrp
cs
fadd
js
lcall
icebp
inc
into
xor
cltd
stc
fwait
std
xchg
dec
les
adc
lods
iret
or
or
mov
cs
mov
pushw
stos
sarb
jge
add
push
ficomps
mov
sbb
push
xor
xchg
movsb
fimuls
movsb
cmp
jl
fnsave
add
adc
out
sti
mov
cld
xchg
pushf
and
lods
dec
shr
xchg
xor
pop
mov
or
jl
push
jbe
adc
aaa
out
popa
sub
pop
inc
mov
jbe
lea
push
loopne
sar
xor
jl
sti
xor
ret
jae
xchg
and
repnz
dec
imul
cld
test
pop
in
sbb
jg
dec
popf
popa
fistpll
stos
and
ficomps
std
pusha
andl
mov
pop
and
mov
or
push
sub
xchg
outsb
inc
pop
aaa
sbb
xor
test
mov
and
icebp
pusha
lods
ror
stc
lods
mov
xor
push
icebp
mov
cmp
fcmovnu
sbb
and
je
jle
sti
mov
mov
mov
test
pusha
pop
pop
add
mov
mov
mov
inc
out
or
xor
hlt
adc
pop
les
cmp
loope
jnp
pop
clc
sbb
sahf
and
sub
dec
xchg
dec
into
lret
out
test
xor
cmc
data16
loope
ja
inc
cmp
xchg
mov
fdivrl
mov
hlt
pop
lds
adc
rorl
cmp
cwtl
rorl
notl
popa
or
cmp
lcall
jno
ljmp
jno
cmp
lahf
xor
sahf
cli
rolb
cmp
push
jae
add
mov
mov
nop
movsb
or
vpshad
aam
adc
mov
enter
xchg
cmp
push
inc
xchg
inc
xchg
imul
pop
mov
mov
sub
sub
and
pop
mov
ja
mov
dec
dec
scas
arpl
sahf
dec
adc
aam
into
jg
insl
stos
rcrl
push
enter
lods
roll
in
fidivs
xor
out
add
cmp
fildll
jge
lea
popf
pop
lods
bsr
outsl
fstpl
dec
std
mov
sub
out
pop
fildll
jge
lea
popf
pop
lods
bsr
outsl
fstpl
dec
std
mov
sub
out
pop
fildll
aas
lea
pushf
pop
lods
bsr
outsl
fstpl
dec
std
mov
sub
out
fstp
in
iret
cmpb
das
aaa
mov
bswap
cmovne
and
adc
add
cmpsl
popa
mov
scas
xchg
mov
in
add
add
add
add
add
push
add
add
add
add
sbb
cmp
xchg
add
add
incl
xchg
add
add
add
mov
test
mov
add
addl
rolb
add
cltd
add
add
or
add
add
cltd
add
sbb
lcall
add
add
xchg
add
xchg
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
imul
add
mov
add
loopne
jge
push
dec
add
add
jns
stc
add
add
dec
add
add
add
pop
add
mov
ret
add
add
jns
mov
arpl
out
add
add
add
add
add
sbb
adc
push
add
add
add
xlat
add
xchg
add
add
sub
cmp
inc
add
add
add
add
xor
pop
add
add
pop
add
push
add
push
add
add
add
addl
rolb
sub
pusha
add
add
add
add
add
loope
cwtl
add
add
add
add
add
add
add
add
add
xor
mov
add
mov
add
add
add
add
mov
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
fwait
add
add
add
loope
cmpsl
add
add
pop
add
add
add
add
stos
add
add
add
add
add
add
add
add
add
add
add
add
add
add
arpl
sbb
adc
movsl
add
sub
jge
pop
add
add
add
push
add
add
jge
pusha
add
add
add
pop
add
add
add
jno
imul
add
add
add
add
add
add
xchg
add
add
add
add
fwait
add
add
add
add
xor
sbb
dec
add
jge
inc
add
add
flds
jns
loope
cmpsl
add
and
add
movl
jno
loop
or
add
add
add
add
add
add
xor
imul
add
add
add
add
add
add
dec
add
add
add
incl
add
add
add
or
add
add
push
add
sub
add
add
add
mov
push
add
add
add
add
add
add
or
cmpsl
add
pop
add
add
add
add
mov
add
jl
data16
add
add
jge
add
adc
add
add
add
add
jge
loopne
pop
add
cmpsb
add
lods
add
add
add
loopne
add
add
int
outsl
add
inc
add
add
into
sbb
fnsave
mov
jno
adc
clc
mov
jo
ret
cmp
in
inc
adc
out
mov
jecxz
cmp
daa
testl
icebp
or
push
mov
outsl
sbb
mov
in
pushf
push
out
mov
add
and
nop
xor
sub
mov
loop
cmp
jo
cmp
popf
pushf
lret
push
pop
sbb
or
cs
lcall
push
sbb
lret
into
inc
std
aas
xor
ror
loope
enter
aam
mov
pop
adc
pop
loope
lret
pushf
lds
push
sbb
and
and
imul
jno
loop
mov
inc
sbb
mov
mov
arpl
jl
jecxz
mov
xchg
addr16
jle
cmp
push
dec
adc
in
push
mov
inc
ficoms
pop
or
hlt
imul
adc
inc
dec
stos
push
dec
and
sarl
rorl
frstpm(287
in
push
popl
xor
xchg
pushf
mov
nop
push
pushl
test
adc
gs
mulb
lea
mov
mov
leave
test
mov
inc
cmp
jl
mov
in
movsl
fcmovb
sarl
test
push
adc
stc
fs
test
inc
inc
in
stc
nop
insb
fdivrs
insb
adc
pop
loopne
push
sti
in
call
loope
imul
loop
int
fwait
or
sub
dec
stos
adc
pop
cmpb
loop
cld
add
cmp
cwtl
int
dec
push
mov
mov
inc
leave
sbb
jle
stos
nop
test
push
jmp
and
xchg
sub
xorb
rol
fmuls
xor
stos
inc
repz
mov
hlt
and
mov
icebp
pop
or
je
inc
mov
in
xchg
and
inc
jne
mov
inc
fsub
pop
clc
adc
out
and
push
push
jge
enter
les
sub
sub
mov
dec
xchg
mov
mov
fcompl
xor
out
mov
inc
jne
pop
fsts
mov
daa
nop
mov
mov
mov
enter
pop
or
or
jno
loope
mov
inc
pop
idivb
mov
arpl
out
clc
cmp
psrlw
or
lahf
sub
movsb
cmpsl
arpl
shlb
or
add
mov
push
daa
icebp
adc
cmp
inc
mov
rorb
or
test
jnp
mov
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xor
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
dec
clc
add
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
or
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
clc
add
jl
add
nop
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
or
add
sub
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
movsb
stc
add
lods
stc
add
mov
add
mov
stc
add
int3
stc
add
aam
add
out
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
add
add
or
add
sbb
add
sub
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
