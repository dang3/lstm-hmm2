call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
in
cmc
fadd
in
aad
stos
lds
bnd
inc
insb
push
jl
or
adc
fadd
in
aad
movsl
mov
fldenv
jne
xor
jl
imul
fadd
in
aad
movsl
mov
mov
or
dec
dec
push
inc
dec
dec
jnp
lods
xor
mov
cmpsl
cltd
in
mov
push
scas
outsb
mov
lea
push
aaa
scas
test
clc
outsb
int3
dec
int3
xor
xor
mov
ss
pop
pop
mov
ficompl
inc
add
jmp
sbb
ds
cmp
shll
dec
pop
pop
mov
repz
lock
stc
push
stos
movsl
lea
pop
gs
mov
fistpl
cmp
or
and
pop
mov
mov
push
xchg
fdivrl
aaa
or
inc
add
sbb
xor
pop
jp
push
xor
mov
sbb
jge
mov
in
aad
movsl
mov
mov
inc
insb
push
jl
or
sbb
sub
jp
int3
pushf
movsl
mov
lret
cld
call
and
jno
es
cmp
js
pop
inc
pop
inc
pop
out
xchg
jecxz
test
xchg
xchg
add
ja
add
adc
inc
imul
mov
aam
movsl
mov
xchg
mov
inc
insb
push
jl
or
sbb
sub
cmp
int3
cmc
fadd
in
aad
movsl
mov
mov
inc
insb
push
jl
or
sbb
sub
cmp
int3
push
hlt
jle
icebp
cmp
sbb
cmp
mov
pop
add
push
pop
stos
lods
outsl
test
xchg
mov
cwtl
inc
mov
jp
push
push
adc
jae
int3
dec
lcall
imul
add
dec
clc
mov
lret
lret
icebp
push
jne
in
and
mov
pop
jge
popf
std
adc
adc
loope
icebp
mov
out
idiv
insl
iret
xor
ljmp
mov
cltd
out
mov
add
sbb
push
cli
fsubrs
je
out
test
daa
lock
sub
dec
push
pop
xor
add
pop
repz
flds
or
cmp
jl
mov
and
shrl
add
xor
mov
jbe
dec
sarb
xor
insl
jnp
sbb
outsb
push
fiadds
data16
or
js
sbb
mov
push
cmp
shlb
pop
mov
negl
scas
cmp
lcall
imul
lret
jne
mov
movsl
or
mov
mov
stos
enter
push
cs
xchg
mov
pop
fiaddl
dec
into
xorl
jo
repz
clc
rolb
fistpll
sahf
rep
imul
inc
cwtl
lcall
inc
xchg
or
xor
lock
clc
vmaxps
lret
pop
add
in
xchg
xchg
sub
inc
mov
lods
xor
test
and
sub
js
mov
push
add
xor
dec
mov
pop
sbb
push
out
push
and
cld
and
mov
cmp
nop
push
std
js
fwait
std
into
nop
add
push
adc
pop
loopne
jmp
fmul
lret
scas
mov
stos
aam
es
adc
or
cmpsb
insb
lea
xor
les
test
loop
inc
adc
fcom
jb
dec
fistpl
xchg
jp
repnz
pop
push
out
mov
jbe
mov
dec
fs
pop
test
cltd
cltd
adc
xchg
xor
insb
lock
xchg
aaa
sub
int3
pop
cltd
pop
call
and
sbbb
inc
std
mov
cld
stos
push
jae
xor
and
mov
push
arpl
mov
push
or
test
out
xor
inc
jb
jle
ja
sbb
cmp
dec
sbb
push
sbb
dec
lret
mov
lods
jecxz
addr16
ja
sahf
stc
push
lcall
aad
mov
cmp
or
and
sbb
cmp
fwait
jmp
daa
lret
jl
mov
mov
jl
enter
in
sbb
and
hlt
out
in
push
xor
in
mov
cwtl
lahf
push
adc
add
sub
xchg
cmp
xchg
aas
mov
pop
cmp
push
sbb
mov
subl
pop
imul
jmp
lods
adc
nop
xchg
dec
cmp
pop
dec
aaa
adc
ja
mov
jne
in
sub
sbb
sub
in
or
popf
stc
and
and
popa
fnstcw
fcompl
jo
pop
jno
lds
cltd
sbb
sub
sbb
stos
mov
scas
pop
sbb
xchg
repz
call
sub
xor
fcoms
shlb
xchg
sub
in
outsb
repnz
mull
push
movsb
fistpll
xchg
idivl
scas
lock
outsl
jno
and
jne
lcall
lcall
mov
sub
ljmp
test
mov
loope
jmp
xor
outsl
sbb
andl
adc
or
dec
mov
or
pop
xlat
xchg
jl
push
fwait
sbb
jb
pusha
or
lods
jg
sahf
popa
in
add
add
imul
mov
xchg
sub
push
std
scas
mov
jbe
inc
stos
pop
lret
mov
fiaddl
cs
add
mov
shll
xor
outsb
lahf
dec
aaa
ss
call
jae
mov
inc
out
pop
dec
push
sti
aas
mov
pop
insl
aaa
push
ss
rcr
dec
jb
pop
aaa
dec
or
into
sahf
insl
inc
dec
mov
mov
mov
dec
fisubs
adc
arpl
xor
jge
popl
cmc
test
adc
inc
int
push
leave
xor
addr16
and
pop
inc
jle
jbe
stc
sub
adc
jge
stos
pop
repnz
movsl
shlb
xchg
xor
popf
loop
or
sbb
pop
inc
mov
push
in
in
daa
sub
mov
lret
mov
adc
ret
rclb
xchg
add
xchg
push
je
aaa
cmc
test
mov
mov
ret
pop
outsb
mov
jle
fstpl
jbe
out
mov
aad
imul
popf
pop
xchg
loope
push
cmp
mov
lcall
imul
dec
test
fisttpl
lods
mov
push
xor
adc
sbb
cmp
into
jge
adc
ds
jp
mov
jae
bnd
mov
mov
sbb
adc
add
pop
cmp
sbb
mov
cwtl
push
out
mov
enter
lahf
ja
loop
test
jno
sub
fmull
xchg
mov
test
loopne
imul
out
ljmp
push
dec
and
or
jns
mov
jns
add
adc
shlb
shrb
cmpsb
mov
aas
sub
xor
ljmp
lods
repnz
jne
mov
arpl
pop
int
push
scas
pop
mov
xchg
mov
xchg
cld
pushf
xchg
pop
mov
jo
stos
sahf
mov
test
aaa
aad
sbb
mov
lcall
inc
sarb
add
out
pop
mov
nop
test
loop
or
mov
leave
sar
popf
sbb
mov
mov
dec
aam
sub
imul
jno
stos
jecxz
mov
inc
adc
mov
jnp
in
pop
adc
pop
sbbl
dec
nop
adc
lea
aad
or
lods
mov
dec
movsb
mov
ja
pop
mov
push
or
fwait
mov
sub
xor
ja
mov
cli
int
out
push
cld
jle,pt
aas
cmpsl
das
or
ficoms
lret
jle
inc
xchg
insb
int3
jo
dec
pop
adc
ja
push
xchg
push
mov
jg
mov
insl
mov
mov
call
loop
pop
xchg
mov
loopne
lret
movsl
push
fsubrp
cmp
xlat
or
add
int
xchg
sub
aaa
lahf
fisttpll
ss
mov
mov
xchg
cmp
cmc
mov
outsb
inc
xchg
mov
pop
repz
cmp
outsb
xchg
mov
pusha
std
jae
adc
dec
push
stos
inc
cmp
hlt
dec
pusha
fsubrp
es
lods
jecxz
lods
pushf
dec
outsl
aas
push
mov
mov
mov
pop
inc
add
add
cbtw
call
js
xchg
test
push
adc
dec
cmpsb
repz
cwtl
cmp
inc
mov
xor
mov
pop
stos
adc
mov
pop
push
mov
mov
dec
rol
test
es
xor
xchg
mov
and
adc
pusha
fisubrl
cwtl
addr16
ret
jne
je
mov
jg
push
lea
daa
lahf
and
imul
push
stos
pop
sti
or
popa
repz
aam
push
mov
dec
popf
jnp
sbb
divl
outsl
lret
cmp
xor
and
fsubrp
arpl
cli
add
cmp
mov
enter
call
into
jb
fsubs
aam
dec
jmp
push
sti
frstor
mov
data16
mov
add
out
adc
fmuls
cmpsb
mov
cmc
in
out
adc
call
mov
shr
pusha
xchg
das
sahf
inc
push
mov
adc
xor
inc
inc
mov
es
in
xor
and
inc
into
jp
cmp
outsl
or
js
cmp
cli
pop
das
pop
push
mov
dec
std
push
mov
xorb
xlat
mov
pop
jg
outsb
lock
aas
in
mov
imul
dec
bound
les
add
push
lods
lds
and
and
push
lods
stc
pop
add
jl
xor
outsb
aam
nop
and
fimuls
jle
sbb
test
xchg
insl
lods
xlat
inc
jge
cwtl
ror
lahf
inc
das
test
dec
das
jnp
adc
jbe
mov
push
add
adc
je
xchg
inc
or
call
imul
pusha
fdivs
das
sub
jle
push
leave
rcrl
pop
out
jae
std
sahf
ja
and
sub
notl
sbb
pop
nop
test
sub
pusha
pop
int3
lret
push
lods
outsl
xor
lret
jne
sbbl
shrb
xor
insl
into
sahf
test
in
std
ljmp
cli
or
add
push
in
add
test
out
mov
jno
or
fwait
xchg
adc
cld
mov
fcoms
xchg
clc
sbb
aas
xor
xchg
push
scas
ja
mov
pop
jnp
push
dec
push
ljmp
cli
cmp
mov
mov
push
shll
and
test
lret
inc
ret
jg
addr16
vshufpd
jle
pop
mov
dec
add
enter
push
pushf
or
fdiv
scas
cmpsl
pop
out
lods
cmp
pop
cmp
aas
in
sbb
clc
dec
rcr
stc
xor
jle
cmp
imul
dec
popa
rcl
add
pop
iret
rcr
icebp
push
push
push
shlb
arpl
xchg
xlat
or
or
int
push
filds
loope
es
fldcw
pushf
dec
or
hlt
out
in
xlat
lock
ljmp
mov
jns
inc
das
pop
imul
pop
loopne
fs
jmp
sti
rcrl
inc
iret
mov
stos
in
add
int3
sub
add
dec
mov
imull
or
in
cmp
addb
testb
mov
fisttpll
push
and
int
jb
jp
subb
insl
fwait
and
pop
fidivrl
xor
movsb
mov
xor
mov
jo
test
cmp
xchg
add
jp
jg
mov
pop
decb
jne
in
fdiv
leave
xchg
mov
cmpsb
loop
cli
repz
jle
inc
pop
dec
push
cmp
insb
dec
fs
pop
icebp
scas
xor
and
hlt
ret
jb
cmp
sub
lret
cmpsl
shl
ss
insb
sbb
cmc
ljmp
addr16
stos
daa
sti
shll
orl
pop
pop
inc
jo
sbb
sbbl
jle
gs
out
dec
pop
adc
or
mov
repnz
fldt
pop
mov
and
inc
sti
cmpsl
lock
js
mov
cwtl
fbld
xor
cmp
jno
repnz
ffreep
dec
in
sbb
imul
or
std
and
jp
jnp
and
sbb
sub
inc
mov
mov
ljmp
mov
mulb
loope
stc
jno
inc
loope
adc
sahf
data16
mov
cmpb
push
mov
in
sub
cli
pop
ss
ljmp
sti
mov
add
mov
sub
scas
ss
cmpsb
cld
imul
in
or
inc
mov
iret
xor
shrl
cmpl
mov
idiv
andl
int3
cmp
jg
lahf
dec
rolb
mov
add
mov
lret
jo
sub
pop
inc
and
and
into
aaa
jmp
cmp
jne
mov
jo
push
push
jl
packsswb
pop
mov
fsubrs
or
mov
mov
ds
push
mov
repnz
sarb
ret
inc
adc
push
jecxz
sbb
adc
in
fdivl
lods
cmp
lea
fwait
ds
pop
dec
test
enter
mov
dec
or
xor
cs
stos
addr16
xor
fs
negb
xchg
lods
mov
pusha
test
sub
push
int3
pop
les
fwait
mov
js
repnz
clc
ds
push
dec
or
sub
into
adc
mov
xorb
or
xchg
mov
and
xor
fwait
in
fwait
dec
xor
xchg
sbb
ss
pop
in
and
std
lea
sbb
pop
subl
sub
js
adc
sub
mov
sub
xor
ja
lret
pop
hlt
pop
jg
rorb
test
xor
fbld
jg
xor
inc
jmp
movsb
incb
stos
inc
adc
fiadds
daa
nop
mov
push
sub
push
out
fcoms
int
dec
xor
in
xchg
dec
push
test
idiv
rclb
jmp
fsubrl
ret
mov
loop
sbb
int3
ficoms
inc
lds
cmpsl
pop
lahf
pop
out
push
mov
cld
imul
das
mov
sub
inc
sti
bound
push
inc
in
mov
cmp
in
std
pop
pop
loopne
fistps
pop
pop
lret
push
mov
ficomps
cmpb
adc
shlb
lahf
jg
push
pop
pop
shlb
pop
or
jb
aas
shll
cmp
inc
inc
dec
xchg
jo
iret
xchg
add
mov
incb
inc
cmp
sub
bound
sbb
shll
stos
fcmovbe
dec
lret
int3
loop
loope
sbb
push
negl
xor
dec
mov
gs
cmpsl
mov
xlat
imul
lds
jns
test
cmp
add
shl
cmp
pop
mov
jmp
out
xchg
xchg
push
cmpsb
push
mov
mov
mov
push
test
sub
mov
pop
inc
and
arpl
xor
push
xorb
xchg
jecxz
xor
daa
in
cli
into
pop
jnp
dec
xchg
int
push
xor
jmp
jnp
xorl
mov
nop
pop
xchg
test
sub
dec
loopne
rcr
shrb
shll
das
int
or
inc
fdivs
aas
arpl
adc
push
call
pusha
inc
dec
jne
fprem
mov
jl
xchg
cmp
fmul
in
scas
xor
push
mull
call
sbb
xchg
or
mov
add
lcall
add
dec
in
icebp
idivl
cmpl
jle
imul
int3
enter
lcall
mov
aas
out
cltd
push
je
clc
ds
insb
push
lea
cmp
icebp
mov
or
fcmovnu
jb
and
sbb
xor
enter
data16
or
adc
adc
xchg
sti
shufps
cs
cmp
leave
fucomip
fdivs
stos
cmpb
jmp
aad
addr16
push
imull
cmp
push
std
ficoml
inc
shll
call
adc
test
test
enter
in
push
mov
repnz
mov
fwait
les
push
addr16
sarb
out
xor
jecxz
mov
pop
pop
jmp
jno
jnp
pop
add
icebp
test
or
in
mov
jno
mov
mov
jle
fmuls
add
test
mov
enter
fsubl
iret
mov
testb
or
les
rcll
or
pop
inc
fildl
idivb
dec
push
ss
pop
and
xchg
sbb
jecxz
sarb
icebp
adc
dec
or
dec
cmp
out
lar
inc
sti
pusha
cld
cmp
pop
inc
movsb
orb
lahf
sub
mov
andb
sbb
jg
out
adc
ja
inc
sub
lods
fwait
xor
in
pop
out
loopne
test
test
hlt
popf
push
push
movsb
xor
outsb
les
cmc
es
jno
cmp
stos
pop
rol
addb
jp
jae
mov
inc
jno
daa
aaa
fcomp
fs
xor
enter
mov
test
daa
call
jo
xor
pop
mov
inc
cmp
pop
mov
in
lcall
mov
push
loope
fcompl
sbb
std
pop
or
outsb
cmp
cmp
mov
cltd
leave
imul
push
jecxz
pusha
hlt
rclb
in
sub
insb
lahf
mov
bound
sbb
pop
stos
cmp
stc
in
dec
shlb
xchg
subb
mov
sub
ret
and
and
jecxz
add
xchg
hlt
or
sbb
cmp
test
jae
mov
push
fwait
inc
fnstenv
push
inc
mov
out
repz
enter
sub
cld
ret
andl
stc
push
sub
sahf
je
xchg
sahf
sbb
xor
gs
cmp
clc
stos
push
es
ss
push
std
leave
movsb
cmpsb
fcoml
cmp
movntq
sbb
push
mov
push
movsl
push
dec
mov
rcrb
push
orl
push
repnz
bound
cmp
clc
rorl
rorb
xchg
jle
ljmp
jbe
cmp
icebp
test
pop
inc
movsb
xlat
jmp
add
lods
es
cltd
mov
sbb
sbbb
loope
pop
jns
sub
adc
cmpsb
adc
inc
xchg
stos
xchg
mov
scas
fldl
mov
cmpb
popl
inc
gs
leave
std
mov
dec
xchg
in
movsb
out
ss
es
call
int
into
push
adcb
movsl
roll
popf
iret
sbb
cltd
xor
lods
test
mov
aad
fnstenv
sub
pop
pop
mov
dec
pop
mov
mov
xchg
test
les
in
setle
flds
in
sub
cmp
add
in
ja
jmp
in
push
cmp
pop
push
adc
mov
sbb
out
cmp
and
cld
or
enter
out
pop
data16
andb
and
xor
and
arpl
inc
sub
or
dec
call
lahf
xchg
out
mov
dec
push
in
scas
inc
orb
push
adc
mov
inc
xor
xchg
divl
and
test
aas
add
sbbb
lcall
push
jae
aad
in
fmulp
cmp
add
pop
jns
xchg
pop
insb
mov
test
mov
sbb
nop
int3
subl
lds
pop
adc
pusha
cmc
ja
cmpsb
jle
push
std
push
xlat
popf
xor
icebp
out
sub
xchg
and
test
sub
out
push
sub
lret
or
pop
mov
imul
sahf
aaa
mov
fisttpl
scas
sahf
adc
cwtl
mov
mov
and
adc
les
dec
pop
icebp
cwtl
out
inc
mov
mov
les
adc
push
cmp
push
sbb
xchg
push
inc
sub
loope
mul
mov
cmp
inc
pushf
cwtl
mov
insl
pop
or
jge
push
repz
mov
lea
mov
xchg
mov
push
and
mov
aad
mov
mov
push
xor
mov
fisubs
add
add
dec
inc
adc
aas
or
cmp
pop
clc
ja
stc
movsl
cmp
add
push
insl
mov
sub
cmp
mov
add
jmp
scas
cld
pushw
mov
or
clc
sub
xor
out
lods
push
add
mov
int
jb
xlat
fildll
or
adc
stos
push
push
aam
dec
and
sub
mov
les
mov
lods
mov
out
loopne
or
cltd
pop
push
mov
cli
push
les
fwait
lods
dec
jbe
cmp
mov
pop
xor
scas
inc
ds
add
push
sti
sub
mov
push
cmp
pop
xlat
cltd
sub
xchg
xchg
push
jecxz
jmp
std
in
pop
pop
sbb
mov
nop
out
mov
mov
mov
fnsave
addr16
mov
repnz
add
lret
jle
arpl
and
xchg
das
push
ljmp
mov
sbb
aam
xchg
insl
cmp
shll
clc
ljmp
xor
pop
in
mov
jle
ds
xor
and
fdiv
xchg
mov
in
cmpsl
shld
nop
inc
mov
mov
mov
sub
jns
mov
jae
call
sbb
inc
call
pop
add
jns
cs
pop
push
in
addb
loopne
push
fldt
scas
pop
movsl
sub
jb
jb
push
pop
sub
cld
movsl
lods
sbb
ss
jb
jl
fwait
addr16
inc
sbb
insl
clc
add
fucomi
push
mov
frstor
dec
or
dec
push
adc
ljmp
push
iret
jns
sbb
adc
ficompl
gs
aad
movsl
mov
mov
inc
insb
push
jl
or
sbb
sub
cmp
int3
cmc
fadd
in
aad
movsl
mov
mov
inc
insb
push
jl
or
sbb
sub
cmp
int3
cmc
fadd
in
aad
movsl
mov
mov
inc
insb
push
jl
or
sbb
sub
cmp
int3
cmc
fadd
in
aad
movsl
mov
jl
dec
jne
out
insb
push
or
mov
ret
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
roll
jecxz
pop
xchg
icebp
mov
push
add
jae
bound
adc
adc
arpl
jae
add
repz
adc
jecxz
repz
add
jae
arpl
roll
push
xor
jae
add
repz
adc
jecxz
repz
cmp
arpl
adc
insb
aaa
inc
push
dec
jae
andl
pop
add
pop
adc
pop
mov
and
mov
daa
mov
scas
mov
dec
insb
cmp
sti
scas
mov
pushf
xor
addl
arpl
inc
hlt
push
xchg
fistps
xchg
negb
in
jb
ret
pop
in
jae
mov
pusha
push
pushf
and
jl
xchg
cltd
mov
xchg
ret
or
push
fisttpll
int3
in
adc
mov
push
push
sub
and
jne
dec
lret
sub
sbb
movsl
mov
fistps
add
cld
push
arpl
and
push
cmp
xor
jno
sub
add
mov
pop
add
repz
adc
jecxz
repz
add
jae
arpl
adc
push
xor
xor
lcall
xchg
xlat
xchg
jp
dec
sbb
add
push
loope
push
mov
cmpsb
fsts
cmpsb
std
lret
mov
repz
adc
jne
pop
adc
sbb
pushf
xlat
pop
fildll
mov
adc
arpl
adc
push
xor
jae
add
repz
adc
jecxz
repz
add
jae
arpl
adc
push
xor
jae
and
outsb
push
int3
bound
add
and
jb
jo
pop
jne
insl
jb
jecxz
sub
pusha
push
hlt
jbe
pop
jne
outsb
ret
aas
mov
ds
daa
in
aam
pop
test
in
jb
in
movsl
adc
filds
mov
lahf
movl
jae
ds
cs
ret
call
push
das
inc
cmpsl
adc
add
inc
fsubl
pushf
mov
gs
out
mov
lcall
dec
pop
out
js
jbe
sbb
les
push
outsl
in
shlb
mov
lret
add
cmp
pop
sub
xor
test
fdivrs
loop
pop
test
cmp
push
add
or
fwait
cld
mov
or
insl
es
lahf
imul
data16
lods
fistps
scas
jne
lret
cmp
mov
mov
pop
lret
movsb
pop
or
ror
scas
out
icebp
lcall
scas
sarb
aad
mov
sbbl
movsb
push
fstpl
push
lcall
adc
inc
push
bound
jnp
cmp
ds
ljmp
stos
adc
movsl
call
xlat
cs
popa
ss
movsl
mov
repnz
mov
aas
cmp
aas
out
dec
imul
ret
mov
or
out
filds
cmpsb
mov
mov
sbb
jnp
lods
xchg
gs
movl
clc
je
or
cmp
jnp
mov
leave
jle
push
pop
push
lods
out
lods
sub
pop
and
pop
add
inc
aam
stos
lods
xchg
sbb
popf
outsl
addb
jno
ljmp
or
filds
push
out
cmp
mov
popa
cmp
mov
mov
push
in
repz
jbe
add
cli
jne
pop
cmp
insl
testl
and
aad
xchg
sbbb
mov
cli
pop
jns
or
push
and
jne
ret
aad
and
lcall
xorb
orl
jp
jae
cmp
aam
mov
mov
mov
clc
pop
movsl
nop
push
pusha
mov
sbb
movnti
add
rcrl
aaa
or
pop
and
and
mov
push
sbb
jbe
int
inc
push
or
shll
aam
inc
out
mov
sbb
lods
push
pop
movsb
add
out
mov
push
pop
test
clc
in
in
jg
push
aas
mov
mov
mov
loop
sub
add
arpl
out
icebp
outsl
mov
xor
xchg
test
imul
and
in
xor
push
aaa
jbe
out
icebp
imul
or
popf
fdivrl
pushf
jnp
xchg
or
rorl
adc
mov
loopne
add
js
pop
xor
dec
jbe
ja
push
jle
mov
xor
push
lret
or
inc
roll
ds
shll
lods
je,pt
cmpsl
jmp
push
jg
popa
test
iret
lret
push
mov
xor
movsl
jg
in
xor
imul
subl
push
pop
in
in
lods
jecxz
xor
inc
mov
lcall
stos
aam
or
jne
insb
iret
mov
sarb
xchg
test
xor
mov
dec
sub
pop
inc
loope
test
in
shlb
fstl
push
mov
mov
lcall
cmp
movsl
rolb
sahf
mov
add
cld
shl
and
mov
or
and
pop
push
inc
and
nop
out
hlt
jne
jmp
and
mov
test
insl
clc
pusha
sbbb
adc
inc
stos
stos
sub
push
push
mov
mov
mov
and
add
xor
push
fistpl
imul
sub
movsl
push
ss
push
mov
pop
and
add
push
fstpl
movsb
into
inc
ljmp
mov
inc
sub
in
sub
out
insb
jns
xor
cmp
cmpsl
pop
fabs
loope
imul
scas
jle
xchg
add
minps
xor
xchg
add
xor
sbb
rcr
jno
jp
sbb
jecxz
loope
inc
aad
test
add
daa
push
mov
negb
xor
jge
fmull
add
incl
jmp
push
stos
sub
repnz
push
xlat
lahf
rcl
dec
loope
rcrb
adc
add
or
scas
std
das
inc
aad
mov
sbb
cmp
mov
sbb
mov
inc
xchg
mov
arpl
push
sbbl
jecxz
sahf
mov
cmp
setno
fwait
int
xchg
test
out
cltd
idiv
shlb
pop
pop
inc
repnz
sbb
das
mov
add
mov
or
jmp
jmp
add
adc
lcall
cmp
arpl
bound
push
mov
out
out
sub
fs
clc
mov
or
sub
shrl
sub
imul
or
push
or
in
mov
ficompl
cmp
lds
push
and
cld
js
pop
js
jp
mov
push
stc
push
orl
rcrl
loopne
pop
or
iret
and
cld
insb
add
insl
testb
dec
dec
mov
test
or
aaa
pusha
sahf
fdiv
sbb
sub
sub
dec
enter
stos
lea
sub
mov
enter
sub
int3
shr
in
sbb
icebp
bound
add
ljmp
mov
sub
lods
xchg
cwtl
out
mov
xchg
cmp
ror
xchg
fucomip
cmpb
bound
sbb
xchg
push
push
pop
inc
iret
sbb
icebp
mov
xchg
push
int3
lods
test
pop
in
push
pop
loop
mov
cmp
hlt
loopne
push
push
shlb
cmp
incb
push
loope
xor
mov
or
pop
and
mov
push
mov
mull
repnz
mov
icebp
lret
cld
rorl
int
js
out
push
sarb
xchg
mov
and
fdivl
out
rcr
inc
aaa
mov
push
jo
push
adc
ljmp
sahf
shl
mov
and
clc
push
cld
cmpsb
clc
je
inc
cmp
cmpsl
dec
mov
and
stc
hlt
dec
scas
out
outsl
and
cld
cltd
jmp
mov
les
test
ficoml
popa
sbb
xchg
push
int3
out
sbb
push
or
in
inc
mov
xabort
gs
xor
mull
rcll
in
push
lods
cwtl
pop
add
and
ja
pusha
icebp
dec
adc
jp
scas
adc
filds
ja
and
push
and
mov
push
out
lea
fildl
or
das
mov
lret
fimull
je
pop
inc
int
adc
push
ret
inc
or
push
pusha
shrb
stos
xchg
push
enter
daa
pop
xor
and
mov
cmp
xor
and
mov
cmp
inc
cmc
mov
pushf
movsb
nop
fcomp
mov
or
sarl
xchg
xchg
push
addr16
cmp
rcl
fildll
aad
inc
daa
test
push
inc
jmp
sub
lcall
jg
sahf
push
add
mov
iret
jle
movsl
test
inc
pushf
xchg
or
cmp
out
adc
int
mov
pushf
leave
repz
test
std
into
add
xchg
into
adc
cltd
js
jmp
lcall
test
bound
loopne
dec
lock
dec
mov
jae
ret
movsb
jle
xor
imul
ficoml
mov
jmp
adc
lret
dec
adc
fcoms
mov
xorl
enter
and
push
push
inc
mov
ljmp
shr
sbb
sbb
roll
into
add
xor
mov
ret
inc
mov
sub
adc
jbe
push
or
cwtl
shrl
push
negl
inc
lds
pop
or
insb
cmp
fdivp
into
adc
or
xchg
dec
sub
inc
xchg
and
andl
repz
cmp
pop
mov
xchg
jns
cmpsl
dec
test
test
in
mov
pop
or
mov
pop
pop
and
dec
pop
mov
adc
fsubs
push
pop
imul
pop
notl
or
fnsetpm(287
adc
mov
call
pop
in
sti
add
jnp
mov
in
xor
test
mul
lret
xchg
jmp
jmp
pop
fnsave
xchg
pop
movsl
aaa
and
stos
nop
cmp
jno
sbb
inc
sbb
mov
push
inc
lods
in
inc
leave
test
stc
sub
sub
add
cmp
mov
das
pop
out
add
pop
inc
cmp
sub
push
sarb
sub
xchg
roll
pop
inc
addr16
or
adc
scas
and
pop
and
mov
lods
insl
in
xchg
jmp
or
mov
loope
xchg
jno
fs
inc
lcall
sub
adc
pop
xor
loope
sahf
sbb
in
dec
cmpsl
xor
test
movsl
xchg
pop
std
stos
xchg
push
icebp
mov
ja
sbb
or
sbb
add
push
insb
or
lahf
shll
dec
leave
push
jno
push
jecxz
fs
test
cltd
ja
sbb
out
aam
test
outsb
out
repnz
je
push
lahf
repz
xchg
lret
in
push
mov
mov
sbb
movsb
jmp
fbld
in
lret
xor
mov
sbb
divl
enter
pop
sub
enter
lahf
outsl
sarl
test
push
lds
add
pop
out
sti
lock
ror
lock
xor
or
or
add
sbb
mov
or
adc
cmc
dec
sbb
inc
jmp
out
mov
xchg
mov
ds
xchg
inc
fs
mov
dec
cld
xchg
cmp
lret
stos
aad
mov
dec
cli
jge
push
fists
adc
xchg
cld
jge
xchg
push
fsubr
jae
int3
outsl
pop
in
dec
jns
add
test
push
cmpsb
cmp
mov
dec
cli
icebp
pop
fnstenv
fadd
ficomps
sbb
ret
inc
sbb
jge
aam
cltd
movsb
mov
mov
ljmp
push
push
push
fnstcw
fisttps
push
rclb
cmpsb
push
sbb
jmp
scas
mov
pop
sub
push
push
mov
add
sahf
mov
fstpl
push
push
imul
xchg
push
mull
loop
mov
in
dec
sbb
jp
div
dec
mov
inc
pop
popf
dec
out
xchg
dec
shl
test
xlat
cld
sbb
aaa
aas
cwtl
xchg
mov
sub
cltd
sahf
jo
add
test
push
icebp
mov
cltd
mov
jge
andb
cmp
fs
jmp
lock
fxch
mov
mov
mov
stos
xor
gs
lods
ja
jae
or
pushf
jp
das
inc
push
and
lods
push
pop
or
stos
aaa
xor
lret
or
push
ja
stos
inc
lcall
or
fldl
and
insl
mov
cld
lods
jne
xchg
cli
and
jmp
insl
push
mov
push
mov
aam
mov
and
mov
mov
mov
out
ret
icebp
movsb
add
test
lret
push
lods
mov
lods
outsl
bound
and
push
push
mov
adc
jae
jnp
or
jge
into
mov
outsl
std
shlb
lret
rol
jo
cld
or
test
push
jne
or
xchg
jle
or
rorl
scas
data16
jp
std
or
pop
aam
pop
call
inc
les
hlt
fidivrs
mov
mov
or
lret
add
fistps
inc
add
repnz
das
cmp
dec
pop
scas
pop
clc
scas
xchg
add
push
and
jecxz
push
fnsave
mov
popa
cwtl
pop
imul
push
jge
in
jge
pop
pop
inc
cmp
push
test
push
int
test
cmp
and
test
clc
ljmp
dec
fidivrs
mov
fisttpll
test
aas
push
jge
bound
pushf
pop
xchg
lea
add
repnz
inc
xor
inc
add
dec
push
shll
mov
sbb
je
adc
addr16
pop
ss
and
movsl
lcall
repz
lea
icebp
gs
inc
sbb
sbb
push
movsl
fidivs
inc
in
mov
cmp
leave
lcall
xchg
dec
xor
mov
sbb
cli
add
xor
fcoml
push
ds
add
sbb
sub
scas
mov
and
mov
mov
or
adc
mov
jl
inc
pop
out
dec
and
jbe
les
out
adc
fcoml
jge
add
mov
ss
cmpsl
or
out
subb
aas
adc
dec
lds
xor
push
loop
aad
push
outsb
cwtl
inc
cmpsb
cmp
jecxz
test
mov
jg
imul
lock
arpl
mov
ret
roll
scas
adc
mov
pop
jne
aam
hlt
insb
enter
push
sub
test
ret
sbb
jmp
lret
mov
xorl
mov
leave
cli
bound
lds
imul
and
push
mov
iret
pop
mov
xchg
mov
movl
mov
xor
inc
addr16
mov
in
pop
sub
xor
aam
clc
fdivrp
cmpl
out
and
jnp
adc
or
test
clc
je
out
movsb
xchg
sbb
pop
pop
add
mov
mov
in
movsl
xchg
mov
rcrl
es
fldcw
and
hlt
imul
shll
pop
arpl
es
adc
out
sub
outsb
sbb
bound
lret
cmp
stos
popa
fcompl
dec
test
dec
xchg
lfs
adc
cmc
dec
inc
ds
adc
mov
pusha
cmpsl
or
mov
mov
adc
adc
mov
or
adc
jle
sub
lods
loop
inc
aad
jmp
push
pop
mov
sbb
cmc
mov
xchg
push
or
out
and
xchg
jno
sbb
xchg
and
aad
pop
pop
sbb
stos
addr16
pop
mov
mov
inc
inc
ror
xchg
mov
dec
push
adcb
jae
and
lods
data16
jno
push
inc
cmp
sbb
inc
jnp
push
test
mov
lods
push
jmp
mov
inc
ljmp
jge
xor
rcl
push
mov
adc
xchg
mov
out
bound
das
push
aad
sub
sbb
aaa
fs
push
lock
and
jle
jnp
pop
push
subl
rcll
cmpsb
enter
je
mov
sti
inc
or
outsl
loopne
fwait
popa
lret
push
pop
movlps
stc
jle
aad
sbb
jne
push
aam
movsl
and
clc
or
xchg
repz
jnp
cmp
cli
lds
mov
movsl
lock
dec
fdivl
mov
mov
or
pop
mov
pushf
pop
lock
jecxz
sti
es
test
fistl
outsb
mov
mov
insb
bound
fldcw
bound
or
adc
cmc
lock
sahf
sti
or
out
mov
pop
jbe
clc
mul
test
addl
sbbb
mov
cmp
clc
pushf
in
fxch
or
mov
dec
fbstp
cmp
inc
xchg
xchg
dec
sbb
cmp
or
jne
add
jo
addr16
popf
test
rorl
mov
fdivrp
push
adc
mov
movsb
adc
mov
stos
adc
addr16
adc
ljmp
and
js
add
into
sub
and
dec
stc
mov
std
fs
fisttpl
leave
cmp
stos
lods
cwtl
out
mov
push
std
movsl
inc
add
int3
adc
clc
push
jl
cmpsl
mov
or
scas
push
dec
loopne
jbe
and
xor
pop
jl
gs
jo
ror
cli
aaa
fcmovnu
inc
inc
and
mov
nop
mov
movsl
and
mov
mov
ss
jle
lock
aad
and
mov
bound
lods
pop
cmpsb
xchg
sub
pop
popa
xor
dec
jno
shrb
sbb
ljmp
xor
dec
or
cs
and
lock
jmp
fisubs
jle
jbe
inc
cmp
call
jnp
imul
nop
inc
shlb
test
stos
sbb
nop
add
push
or
iret
std
dec
outsl
mov
dec
xorl
pop
loopne
or
push
jmp
push
ljmp
jp
loopne
push
xchg
pop
aaa
xchg
clc
ja
jbe
ret
popf
mov
lcall
add
jle
icebp
push
cmp
mov
insb
push
lds
sarl
add
scas
xor
aaa
subl
xchg
mov
adc
xchg
repz
jns
dec
shld
mov
push
ljmp
or
stc
aas
sbb
ds
xor
fiadds
cmp
loope
mov
cmc
mov
sbb
lcall
xchg
mov
xor
fdiv
lret
andb
mov
loope
es
insb
insl
dec
or
scas
sbb
in
pop
add
jecxz
out
jmp
xor
cs
pop
mov
fidivs
sub
insb
xor
mov
add
in
and
sbb
cmpsb
imul
or
popf
sbb
mov
inc
sbb
sti
sbb
jle
adc
push
roll
sbb
pop
sti
movsb
cmp
jae
movsl
or
pusha
frstor
lcall
adc
mov
jge
int
rorl
arpl
inc
adc
cwtl
sub
mov
test
xor
iret
repnz
cmp
fidivl
inc
lahf
jmp
dec
inc
rcrb
popa
lret
mov
or
mov
or
push
rcl
lret
sti
xchg
push
and
cltd
aas
jnp
aaa
xor
cmpb
inc
mov
jnp
scas
andl
cmp
int
adc
mov
jne
xchg
cld
mov
push
popa
repnz
and
lock
jb
jge
mov
xchg
pop
or
shlb
push
push
ljmp
mov
sbb
mov
ja
mov
mov
test
inc
lods
xor
or
jg
jnp
xchg
adc
clc
je
ss
imul
push
add
arpl
inc
das
daa
stos
xor
lret
fists
push
fcompl
aaa
gs
mov
inc
addb
rorb
test
ss
sbb
adc
and
jno
or
cmp
lret
pshufw
mov
enter
fwait
jecxz
jns
xor
pop
adc
xchg
lret
push
dec
adcb
lock
push
adc
test
mov
outsb
sahf
sar
adc
bound
mov
xor
clc
mov
pop
jae
cmp
jl
lret
cltd
xor
pop
jl
xchg
push
mov
scas
iret
jnp
insb
frstor
aaa
arpl
push
dec
sub
pop
jge
outsb
bound
or
or
inc
jo
nop
dec
ret
mov
push
cltd
pop
mov
data16
xchg
fists
fsubp
cmp
je
out
mov
inc
cmpsb
inc
add
sub
xchg
jae
mov
fsubrl
pop
loopne
in
fsts
inc
push
and
push
test
arpl
jns
mov
add
sbb
push
mov
dec
xchg
je
movsl
mov
test
push
jo
add
xor
and
add
jne
fbld
mov
push
popa
rclb
and
dec
push
sub
ljmp
xor
push
scas
lret
inc
mov
mov
xchg
mov
cmp
pop
sbb
push
pop
inc
pop
pushf
out
mov
repz
or
cmp
ja
mov
gs
nop
jbe
pop
js
and
dec
adc
xor
incl
gs
daa
or
test
out
je
push
push
mov
adc
fwait
test
jmp
les
bound
mov
xchg
adcl
in
lock
cmc
addr16
imul
mov
imul
notb
push
jnp
into
pop
jecxz
xchg
repnz
adc
jecxz
repz
add
jae
arpl
adc
push
xor
jae
add
repz
adc
jecxz
repz
add
jae
arpl
adc
push
xor
jae
xchg
jae
jecxz
adc
adc
loop
repz
add
jae
arpl
adc
push
xor
jae
add
repz
adcl
mov
mov
arpl
jae
inc
pushf
push
mov
in
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
leave
add
xor
sub
jo
addb
xor
add
loopne
lock
adcl
and
push
repz
jecxz
sbb
loope
push
rolb
mov
lcall
inc
ficoml
pusha
hlt
jo
sub
nop
pop
les
jl
push
mov
jecxz
orl
int
fildl
sbb
sti
cwtl
cli
cmc
iret
xor
jnp
insb
xor
inc
mov
adc
cmp
add
xor
push
cs
lahf
mov
mov
cli
xlat
popa
pop
popf
int
and
jge
outsl
arpl
dec
lods
roll
fstps
movsb
jns
adc
sub
testb
sbb
jecxz
daa
pop
imul
pop
jg
stos
adc
xor
mov
loopne
out
ljmp
inc
jecxz
repz
es
and
rolb
pop
fwait
jge
xchg
sub
inc
cs
outsb
xor
enter
cld
nop
int3
mov
mov
aad
pop
xchg
hlt
arpl
push
add
xor
inc
fsts
pusha
cli
jo
sbbb
sub
pop
shlb
jp
loopne
out
dec
pop
mov
scas
push
icebp
mov
addr16
in
enter
mov
push
mov
add
inc
cmpsl
or
jo
clc
add
jbe
push
fbstp
mov
arpl
dec
mov
push
repz
jecxz
adc
and
jae
arpl
xchg
add
xor
inc
ret
push
repz
jecxz
adc
and
jae
arpl
xchg
add
ljmp
in
dec
push
mov
into
int
adc
out
xor
aad
xchg
into
push
adc
cwtl
push
repz
stos
test
add
cmp
push
testl
or
pop
jle
bound
arpl
repnz
dec
add
mov
hlt
sbb
je
or
les
out
sub
pusha
sahf
add
outsb
lods
dec
scas
out
sbb
cmp
sbb
mov
das
jge
cmp
adc
ror
mov
emms
fucomi
rcrl
cltd
ja
loopne
in
jnp
fmuls
sub
inc
rolb
stc
cmp
mov
xor
dec
sahf
add
jne
xor
mov
pop
stos
in
inc
ds
mov
pop
mov
mov
jae
cs
pop
lea
add
loopne
mov
fsubs
mov
jl
and
popa
fs
data16
test
adc
rorl
dec
fldenv
test
and
stos
call
int
sbb
xchg
aad
lcall
push
pushf
xchg
mov
stc
pop
push
sub
daa
test
inc
push
pop
je
lds
les
test
insl
mov
or
movsb
push
mov
fisubrl
icebp
test
aaa
sub
call
arpl
movsl
outsb
repz
inc
aas
stos
mov
xor
ljmp
sahf
test
sbb
dec
loopne
cmp
add
sbb
fildll
mov
mov
call
divl
mov
in
mov
cli
inc
jp
imul
aam
idiv
xchg
push
sub
push
xor
outsb
jae
dec
jg
aad
mov
stos
out
jp
ret
xchg
nop
mov
aaa
sub
imul
out
mov
mov
pusha
dec
mov
movsb
cwtl
in
jae
ss
xlat
or
insb
hlt
add
addr16
idivb
loope
bound
jo
lock
das
jg
mov
cmpsb
xor
jmp
shrl
lods
xchg
mov
arpl
cmp
sti
sahf
test
scas
mov
cs
mov
push
pop
jnp
fsubs
lock
imul
sub
roll
jl
rorb
or
adc
pop
mov
cmp
cmpsb
pop
mov
push
jns
mov
popa
fisttps
outsb
jmp
cli
jae
jg
inc
inc
add
push
in
lret
xor
jbe
outsb
int3
test
idivl
or
cwtl
pushf
inc
pop
mov
in
cltd
jl
xchg
cs
lret
and
jle
lock
aam
push
iret
movsl
repz
pusha
adc
lds
xchg
dec
or
fnstsw
xchg
push
inc
push
fistpll
outsl
push
mov
popf
fmuls
jbe
js
adc
sbb
push
push
in
mov
cmp
pop
arpl
and
loopne
mov
scas
sbb
inc
jnp
push
in
push
mov
xchg
xchg
push
insb
mov
push
or
xchg
adc
in
test
jo
mov
inc
into
pop
out
push
push
fstp
stos
and
inc
or
adc
mov
xor
sbb
sub
das
mov
fwait
call
jne
sbb
jmp
pop
mov
mov
fcompl
xchg
cmpsb
inc
test
fldcw
cli
cmp
rolb
xor
xchg
fnstcw
push
push
aas
pop
jecxz
cmp
push
xchg
std
xor
mov
mov
sbb
mov
in
sahf
and
push
imul
jp
jne
add
or
btc
hlt
addb
cli
cmp
or
inc
adc
test
aaa
fstl
mov
iret
add
stos
shlb
xchg
push
cmp
movsl
add
sti
std
iret
xor
mov
mov
sbb
and
adc
leave
add
movsb
dec
cmpsb
mov
sub
js
popf
int3
pop
cmp
xor
fsubrl
testl
rcrb
inc
push
gs
out
out
mov
jae
popa
js
lea
out
inc
in
fstpt
fisttpl
xlat
cmp
mov
pop
pop
stc
cmp
push
popa
ds
xchg
jno
jge
dec
shlb
icebp
mov
rcrb
frstor
xor
scas
jp,pn
scas
mov
fstps
push
xlat
jb
mov
gs
mov
sub
xchg
cwtl
in
cmpsl
pop
cld
sub
daa
pop
add
test
int3
ss
outsl
cwtl
xchg
sbb
adc
dec
aam
jbe
inc
pop
sahf
lahf
push
pop
iret
or
push
loope
sti
iret
repz
push
mov
jmp
sbb
je
popf
mov
xor
mov
scas
pop
xlat
sahf
jno
inc
jo
out
cld
mov
mov
pop
test
mov
or
push
sti
bound
je
mov
xorb
orb
in
jns
sub
push
add
inc
pop
ljmp
sbb
lods
or
and
sbb
daa
xchg
clc
in
outsb
pop
inc
mov
icebp
cmp
stos
pushf
fwait
xchg
int3
xchg
sbbl
sub
or
and
fidivrl
push
aad
cmpsl
rcr
pop
xchg
fnsave
pushf
int3
jmp
add
xchg
addb
xchg
cmpsb
inc
popa
and
imul
das
xchg
and
sub
xchg
test
fsubs
daa
outsl
pop
adc
push
sub
rcl
adc
sub
mov
push
pop
in
inc
rorl
idivb
inc
cmp
sarb
ja
mov
add
xor
loope
cltd
mov
andb
addr16
cmpsb
mov
push
clc
movsb
jg
or
cmpsb
std
repz
inc
add
js
and
jae
in
adc
jp
xchg
or
xchg
cmp
xchg
or
inc
pusha
dec
ret
mov
js
lret
in
mov
mov
sahf
aaa
mov
push
mov
pop
in
push
insb
bound
movsl
or
loopne
mov
jge
inc
and
cs
mov
data16
mov
adc
out
fwait
outsl
mov
test
and
xor
push
aad
pop
out
icebp
xchg
xor
or
mov
mov
addr16
or
xchg
mov
cmpsb
push
jmp
and
int
test
rolb
and
cmpb
mov
adc
hlt
cmp
jno
in
js
jp
push
xor
push
in
into
xchg
mov
pop
hlt
aaa
ret
aaa
divl
mov
jg
push
pushl
cmp
cwtl
dec
pop
fldcw
rorb
lods
sub
imul
xchg
push
mov
pop
xor
and
mov
xor
fwait
push
mov
out
push
subl
add
fsts
cmp
enter
mov
aad
jecxz
push
dec
shl
loope
aas
arpl
lea
push
dec
mov
adc
cs
cli
xor
test
pop
movsb
mov
loop
fadd
cmp
add
push
adc
out
or
jge
jno
or
das
cmp
lock
push
out
mov
daa
out
sub
sbb
in
lret
scas
mov
dec
add
frstor
loope
clc
stc
testl
pop
movsl
cmp
mov
mov
orb
aad
lret
push
shr
mov
pop
or
sbb
leave
loop
push
fldenvs
test
sti
movsl
movsb
add
jns
xlat
ss
jb
cld
pcmpgtd
lods
mul
xor
xor
inc
shl
mov
call
fistl
and
in
ljmp
adc
test
mov
pop
out
adc
pop
into
test
mov
cmp
mov
or
mov
rcl
decl
arpl
pop
loopne
outsb
dec
dec
mov
jno
cmc
jne
mov
repz
adc
test
sbb
sbb
cmc
shll
stc
ljmp
xchg
mov
mov
fstps
and
cmp
les
sbb
and
mov
push
jmp
pop
and
jmp
xchg
divl
mov
xor
icebp
cmp
or
ret
push
lock
test
xlat
jecxz
mov
lcall
cmp
hlt
mov
push
cltd
mov
add
scas
sub
pop
lods
sbb
enter
mov
add
nop
adc
jns
pop
sub
mov
test
fcomip
push
fcoml
mov
enter
push
and
fildl
int3
dec
negl
add
movsb
jecxz
sub
cmp
rcl
xchg
jp
push
jle
xorb
es
xchg
and
add
mov
test
mov
cmpsl
xor
jp
xchg
mov
rcrl
rcl
icebp
or
xchg
outsl
pop
jecxz
and
dec
add
leave
sti
aad
fwait
mov
pop
and
movsb
repz
and
test
fildl
push
jecxz
xchg
ljmp
mov
cmp
lahf
stos
mov
fistpll
mov
adc
add
orl
add
ss
mov
push
xor
mov
call
xchg
jne
fsubs
imul
jns
or
mov
roll
js
lods
movsb
add
es
adc
pop
add
mov
push
pushf
dec
outsl
shll
stos
cmp
xor
pop
sub
call
sbb
jecxz
xor
jl
xor
adc
sbb
lret
push
inc
or
jnp
fs
outsb
lcall
pop
mov
dec
in
xor
adc
jne
sbb
jno
mov
jg
outsb
out
cmpsl
mov
cmp
sub
call
rolb
add
xor
stos
dec
fcompl
mov
addr16
sbb
sarb
scas
out
out
mov
push
add
push
cmc
pushf
in
nop
lret
arpl
aaa
test
outsl
pop
add
stos
dec
bound
mov
inc
lea
xchg
push
pop
int
or
pmovmskb
and
mov
lock
test
stos
hlt
dec
mov
cltd
sub
xchg
and
xorl
stc
scas
scas
dec
adc
fdivl
icebp
imul
test
test
bsr
mov
inc
fsts
je
nop
js
dec
les
mov
mov
std
xor
sub
xor
cmp
shlb
into
xchg
xchg
push
or
add
cld
mov
cmpsl
daa
push
xor
mov
xchg
je
data16
inc
out
mov
aaa
das
ficoms
mov
cld
pop
pop
movb
pop
mov
aaa
pop
pop
mov
outsb
pusha
dec
adc
jo
ds
pop
inc
ret
jne
imul
mov
dec
cmp
ficompl
dec
movsb
lock
pop
lahf
lahf
push
xchg
cmp
sub
popf
int
les
pop
andl
pushf
roll
or
mov
and
jb
mov
cmp
ds
jg
mov
fs
mov
loopne
adc
pop
xchg
xchg
xchg
mov
cli
cld
orl
das
shlb
les
push
xor
inc
sbb
pop
dec
push
pop
mov
add
hlt
mov
ja
fwait
cmc
dec
or
test
jg
and
sahf
sbb
cmp
into
movsb
leave
test
lahf
popl
pusha
popf
sub
add
ret
pop
push
xorb
mov
dec
jb
pop
add
fstps
lea
mov
fidivs
add
sub
jne
push
seto
outsl
addr16
stos
inc
mov
cmp
mov
pop
add
rorl
test
mov
emms
es
cmp
xchg
mov
adc
mov
scas
rcrl
repnz
push
mov
fdivrs
ja
les
lcall
sahf
cli
xchg
xlat
push
add
bound
out
sub
sbb
sub
fwait
aas
and
mov
mov
dec
lods
mov
xor
push
sbb
lods
test
cmp
adc
adc
cli
dec
aaa
sahf
sarl
push
imul
mov
dec
clc
inc
fxch
daa
out
fdivr
sbb
xor
dec
mov
jp
mov
pop
popf
lret
push
add
sub
cmp
pop
mov
xchg
push
jne
mov
lret
sbb
test
outsb
or
test
daa
pop
and
cld
xor
lock
ret
cmp
mov
stc
popa
ljmp
in
lahf
ljmp
shlb
mov
and
add
testl
sbb
test
mov
inc
lods
and
sub
sahf
jbe
sbb
out
sub
andl
ret
movsl
and
mov
sub
or
aam
xchg
in
adc
jo
and
or
in
test
test
imul
jmp
xor
xor
out
out
pop
mov
xor
loope
pop
cmpsb
cmp
fwait
lcall
cmp
add
inc
jp
mov
jo
or
fcoms
scas
sbb
jmp
adc
or
mov
arpl
daa
add
jge
inc
aaa
sub
incl
xchg
mov
or
adc
lea
or
push
aaa
jns
push
and
aam
pop
std
xchg
fldt
orb
inc
nop
mov
dec
pushf
mov
ret
mov
pop
xchg
dec
out
xlat
jge,pn
and
or
mov
push
dec
rcll
lret
jae
call
test
icebp
cmpb
cwtl
push
mov
jecxz
and
inc
push
lahf
inc
stos
push
repnz
leave
shlb
pusha
mov
fwait
xor
rcl
insl
pop
push
loope
jg
enter
pop
clc
mov
in
mov
adc
dec
push
push
lods
fcmovbe
aas
lcall
fnstenv
mov
rcrl
lods
and
dec
out
imul
enter
sti
xchg
jns
xchg
out
mov
add
fidivs
lahf
push
inc
xchg
pusha
push
mov
mov
push
push
sbb
frstor
mov
inc
sbbl
mov
mov
xor
and
jbe
push
or
dec
mov
sub
in
dec
push
stos
insl
pop
jno
mov
fdiv
mov
jl
xchg
mov
int3
repz
mov
out
push
and
xchg
shrl
sarw
bnd
hlt
call
pop
pop
jo
mov
push
test
daa
mov
mov
sti
cmp
std
cmp
shlb
xor
fstpl
das
lcall
sub
outsl
gs
dec
leave
lahf
inc
pop
sbb
xchg
push
lock
stc
add
daa
int
add
jecxz
aam
mov
mov
sbb
and
loope
shlb
das
sar
in
nop
add
cli
push
mov
xchg
adc
je
jge
movb
mov
mov
jg
adc
cltd
sbbl
mov
jns
mov
mov
pop
cli
lods
lods
cmp
loop
fcomps
lods
jbe
or
rcl
mov
dec
cmp
jae
dec
loopne
in
fsubrs
popf
push
xlat
sbb
push
inc
jne
fwait
pop
in
push
mov
cltd
adc
ret
cld
movsl
adc
out
loope
or
sbb
jo
inc
mov
movsl
imull
fimuls
xor
mov
call
hlt
inc
xchg
mov
mov
inc
push
fldl2e
popf
fisubrl
adc
fcmovnbe
xor
and
iret
cmp
xchg
jo
jne
xlat
pop
rorb
xorl
and
pop
stc
clc
in
fistl
cmp
addr16
mov
jl
cli
jle
or
adc
and
push
stos
add
jae
add
cltd
push
jns
adc
pop
inc
sub
pop
xor
loope
sub
jg
clc
pop
popf
push
mov
or
lds
ret
das
mov
fcomi
jl
lds
insl
js
lods
mov
xlat
stos
into
pushf
mov
xchg
outsb
cmp
rolb
clc
jne
aam
jmp
and
sbb
cltd
xchg
add
aas
mov
adc
movsb
jp
enter
repnz
inc
loope
nop
loope
inc
rorb
ja
lret
xchg
lea
scas
imul
dec
sbb
jmp
data16
or
fnstsw
adc
int
or
and
mov
in
jae
cmp
inc
out
fdivp
mov
dec
sub
lcall
inc
subb
cmp
xor
in
xchg
or
addr16
sub
aas
mov
fiaddl
push
test
fwait
rolb
mov
aaa
push
pop
inc
pandn
xor
xchg
jnp
and
add
add
add
pop
dec
sti
out
fcos
adc
pop
push
mov
outsb
mov
push
cmpb
pop
fistl
loop
ret
sbb
xor
cs
out
outsb
test
jmp
sarl
push
push
idivb
nop
gs
lds
mov
add
push
lock
dec
mov
aam
mov
mov
pop
pop
fdivs
icebp
and
je
es
sahf
sub
pop
cltd
adc
mov
cmpsb
into
cli
stos
negl
cmpsb
dec
lret
mov
lods
test
inc
xor
sahf
mov
pop
dec
cltd
rcl
add
test
orb
imul
in
mov
mov
lods
popf
cmpsl
inc
imul
pop
lods
push
pop
psrld
cld
jae
cltd
and
jo
mov
cmpsb
xlat
cmp
jle
leave
dec
sub
dec
xchg
div
mov
fs
movsl
lods
add
mov
xor
cmp
mov
movsb
pop
cmp
pop
scas
adc
rorb
sub
dec
push
mov
dec
adc
or
lds
hlt
mov
sub
or
stos
daa
shrl
lea
in
add
stos
cmp
mov
push
dec
int
nop
lds
adc
nop
daa
into
mov
ret
rcll
cmp
fcoms
xor
xor
cld
enter
and
jle
push
push
mov
mov
push
or
pop
gs
das
add
jo
mov
push
xchg
sarl
push
add
clc
and
cmc
rorb
nopl
sbb
outsl
mov
fcmovb
fiadds
sub
mov
std
aaa
sub
test
insl
sub
xchg
push
fldl
jmp
icebp
int
mov
nop
int3
paddusw
inc
sub
div
pop
in
sbb
add
out
popf
mov
xlat
out
mov
add
imul
mov
sub
cmpsl
dec
sub
mov
push
add
aas
cmp
xchg
cmp
sub
or
push
inc
inc
pop
std
aas
fistpll
mov
lcall
push
sbb
mov
dec
cld
stc
mov
add
and
xchg
repz
mov
xor
test
insb
mov
scas
pop
xor
or
push
push
and
sub
sarb
or
les
add
lret
iret
cmpsl
and
mov
call
jae
inc
nop
cltd
mov
fistpll
dec
arpl
pop
jecxz
xchg
imul
jnp
outsb
pushf
mov
xchg
xchg
aas
mov
sub
adc
jo
xorb
sti
enter
scas
and
shlb
aaa
lock
ret
outsl
inc
pusha
inc
in
shll
mov
enter
cli
cmpsb
pusha
mov
mov
shll
test
pop
mov
mov
sub
lds
mov
pop
sbb
cli
sub
into
in
aam
ret
sub
test
lods
mov
push
xor
in
sbb
mov
aam
test
movsb
sbb
sub
lea
in
mov
icebp
idivb
mov
shrb
mov
mov
and
or
adc
push
xchg
clc
mov
lret
push
popf
sub
cmp
hlt
jp
popa
and
stos
adcb
xorl
lock
fildll
rcrl
and
cmp
sub
mov
lret
subl
cmc
mov
push
xor
mov
out
pop
jle
add
dec
ds
sbb
mov
sub
int3
dec
cli
jge
add
das
sbb
sub
inc
xchg
add
or
pminub
cmpsb
in
dec
cmp
or
sbb
xor
aad
fsubr
mov
in
xchg
sub
mov
mov
xchg
ds
hlt
fisubs
sti
add
leave
fsubs
js
daa
sub
cmpsl
decb
xchg
imul
sub
filds
add
imul
inc
in
push
clc
rolb
js
lds
mov
cmp
mov
int
jge
addl
outsb
push
xor
add
adc
cmpb
int3
ljmp
imul
shl
or
and
cmp
shlb
push
cli
mov
sub
adc
inc
ret
push
repz
jecxz
adc
and
jae
arpl
xchg
add
xor
inc
ret
push
repz
jecxz
adc
and
jae
arpl
xchg
add
xor
inc
ret
shl
pusha
jecxz
adc
add
push
rolb
loopne
lock
add
xor
inc
ret
push
jae
arpl
cmp
cltd
mov
lret
das
mov
pushf
jle
fdivrs
lret
pushf
mov
push
push
dec
cmp
sbb
mov
sahf
call
into
mov
lock
js
push
dec
push
outsb
sub
jle
xchg
clc
xchg
mov
cmpsb
enter
test
cwtl
decb
jno
inc
sub
xor
jbe
jnp
mov
mov
popf
cwtl
fisubrs
mov
data16
pop
cmp
stos
popa
pusha
test
dec
in
fisubrs
mov
xchg
rorb
sub
cmp
outsb
sbb
in
mov
into
or
imul
pop
loope,pn
push
add
sub
jle
mov
lcall
repnz
xchg
xchg
sbb
shrl
adc
fimuls
inc
xor
and
xchg
and
cmpsl
into
dec
mov
pop
sub
jge
gs
mov
test
imul
jnp
sbb
inc
clc
xchg
scas
fdivrs
test
cwtl
out
pop
js
push
push
cmp
je
jle
loop
sti
test
mov
fdivrp
fmull
add
pop
cmp
cmp
popa
adc
popf
decl
mov
icebp
lods
in
dec
xor
or
dec
push
xor
addr16
repnz
xchg
decb
cs
ds
dec
cmp
outsb
sbb
mov
sahf
call
into
mov
decb
cs
ds
dec
cmp
outsb
sbb
mov
mov
adc
mov
lret
pop
repz
sub
mov
lea
sub
adc
cltd
popa
gs
loope
adc
pushf
push
sub
and
insl
mov
inc
decb
xchg
jmp
and
dec
pop
push
or
in
ds
iret
rol
idivl
sub
daa
and
sbb
mov
lahf
mov
je
cmc
in
test
mov
iret
mov
arpl
cli
imul
in
mov
jbe
orl
outsb
test
repnz
mov
test
into
xor
dec
faddl
aam
aad
nop
sbb
stc
pop
pop
adc
xchg
ds
add
pop
rclb
cmp
aad
mov
cmp
incb
pop
cs
sbb
cwtl
out
push
in
push
outsb
mov
mov
ja
fstpt
xor
xchg
mov
js
mov
fldt
pop
pop
scas
pop
lock
mov
stos
fcmovnu
mov
lea
daa
jns,pn
pop
push
sub
sub
push
imul
push
rorb
lods
cmc
fwait
fwait
or
mov
out
lret
out
pop
pop
mov
mov
cmpl
jae
inc
jle
dec
arpl
xor
ds
add
mov
inc
leave
pop
sbb
int
shrl
imul
add
cmp
movsl
adcb
lret
in
gs
and
insb
frstor
fidivs
or
mov
adcb
and
shll
movsb
inc
in
int3
aaa
ds
testb
push
xchg
pop
and
lods
inc
mov
cmp
push
jbe
and
inc
movsb
mov
arpl
mov
out
xor
into
jno
iret
leave
jne
scas
popa
adc
cwtl
ss
or
dec
mov
inc
cwtl
movsl
pop
push
lret
xorb
jno
inc
push
cwtl
xchg
adc
dec
test
mov
jno
dec
sub
out
pop
call
or
inc
out
push
hlt
pusha
rcrb
cltd
and
add
adc
scas
sbb
lea
or
out
and
cmpsl
sbbb
mov
andl
out
push
jne
mov
mov
das
out
nop
pusha
ja
cli
mov
inc
mov
mov
jne
test
mov
jnp
loopne
pop
in
pop
dec
push
movsb
mov
adc
data16
mov
jle
xchg
sahf
or
mov
sub
lret
jae
mov
mov
xor
add
ja
sbb
push
das
push
imul
add
pop
xchg
mov
outsl
dec
lcall
fwait
mov
loopne
fsubr
mov
testl
fdivs
fwait
sahf
cmp
push
cmp
inc
jg
push
dec
inc
lahf
aam
inc
inc
addr16
loope
rcrl
gs
jg
jbe
sahf
mov
dec
add
mov
movsl
mov
icebp
mov
mov
sbb
mov
rclb
and
test
jp
push
cld
adc
sbb
fbld
xchg
cwtl
sbb
dec
inc
sbb
inc
xchg
into
lahf
xor
loopne
mov
xor
sbb
cmpsl
idivl
lcall
mov
lahf
jmp
add
mov
scas
xchg
mov
mov
pusha
in
icebp
adc
out
roll
lods
inc
jmp
data16
jns
out
das
jno
jp
sbb
xchg
out
mov
add
push
cmp
lea
push
stos
push
orb
inc
movsb
xchg
and
cmc
jge
inc
dec
aam
jbe
loopne
xor
xchg
xchg
inc
add
mov
sub
push
adc
fxch
scas
sbbb
cmp
xchg
in
mov
mov
fistps
icebp
sbb
cmpb
push
in
sub
sahf
imul
enter
inc
std
test
xor
pop
or
arpl
push
jle
sub
jo
push
xor
jo
or
xchg
add
jg
leave
mov
mov
mov
ficomps
pop
or
jne
outsb
xchg
jecxz
cmpsl
push
push
mov
jmp
ret
stos
push
sub
and
adc
dec
aam
shl
popa
adc
jle
lock
jb
dec
divl
adc
shll
mov
std
gs
out
ljmp
outsl
mov
jmp
popf
in
push
aas
pop
arpl
dec
push
inc
cmp
orl
dec
jl
jns
scas
add
xchg
or
arpl
test
add
inc
cmpsl
mov
lahf
ds
ljmp
cltd
scas
jb
loopne
sbb
or
je
and
ljmp
cwtl
mov
pop
mov
mov
jp
cmp
test
jecxz
loopne
scas
repnz
out
test
in
loopne
mov
shlb
loope
push
push
std
scas
xchg
scas
sub
call
pop
cmp
add
rcr
cmp
xchg
fisttps
test
xor
dec
inc
mov
mov
lahf
sbbl
test
add
cld
je
push
pop
jne
dec
pop
or
pop
lret
add
add
sahf
call
pop
lock
sub
inc
push
or
shrl
cmp
out
sbb
cmp
mov
xor
adc
lock
popa
pushf
pop
jae
sub
and
les
dec
dec
cmp
xlat
xor
dec
mov
sub
sub
inc
adc
and
mov
push
jl
or
sub
mov
in
iret
ret
mov
clc
add
push
push
pop
or
dec
jge
enter
cmp
aam
jne
loopne
xor
inc
adc
inc
scas
scas
jne
xor
inc
inc
in
icebp
sbbl
mov
jbe
dec
add
test
icebp
mov
movsl
push
loop
inc
pusha
mov
popa
dec
aam
movsb
xchg
adc
mov
ret
cmp
in
cwtl
xor
mov
or
sbb
les
es
pop
cmp
cltd
mov
std
cwtl
idivb
pop
out
xchg
sbb
repnz
sbb
inc
arpl
push
loop
jbe
iret
fwait
push
cmp
cmp
mov
pusha
fisubl
xchg
mov
mov
xchg
lock
fiadds
mov
movsb
or
dec
bound
aad
mov
push
stos
gs
jo
js
les
add
lret
leave
fwait
inc
xlat
cmp
cmp
and
fildl
add
sbb
hlt
pop
icebp
clc
pusha
and
pop
fwait
jno
aas
sbb
jmp
push
pop
fistpll
icebp
inc
sbb
push
arpl
fnstcw
xchg
ja
popf
add
iret
in
inc
mov
out
stos
mov
aaa
enter
pop
cmp
lds
jecxz
cmp
mov
inc
fstl
xlat
outsl
push
jg
push
dec
call
out
push
push
movsb
push
jl
es
cmpsb
addr16
sub
or
jle
push
sbb
add
iret
push
pop
stc
lods
cmp
mov
addr16
jmp
pop
jecxz
in
pop
inc
in
cmp
sti
jno
xchg
lret
shlb
jne
int
out
cmpsl
clc
cmc
scas
fwait
mov
mov
jle
scas
and
mov
and
sar
jne
jo
mov
mov
sub
inc
push
or
popf
mov
mov
pop
dec
add
mov
mov
inc
cmp
mov
in
jae
inc
inc
outsl
mov
outsl
cmp
lcall
add
pusha
adc
inc
jo
pop
data16
sbb
sub
stos
popa
into
aam
push
pushf
pop
fdivrl
add
stos
dec
lret
dec
adc
ret
clc
movsl
jge
inc
and
push
imul
sbb
adc
ljmp
dec
cmp
fidivl
push
add
testb
jge
jb
sti
enter
jg
nop
into
xchg
scas
adc
sub
rorl
jbe
push
fildll
lret
js
xor
xor
inc
mov
lock
out
sub
repz
into
mov
mov
cli
leave
out
or
jp
pop
in
xor
pop
movb
rclb
jnp
pop
lds
add
fs
push
mov
pusha
mov
sub
popf
jg
dec
push
dec
mov
push
add
imull
loop
test
enter
ror
sbb
pop
call
cmc
push
js
cwtl
inc
mov
cmp
rcrl
push
lods
jmp
add
sub
mov
je
adc
mov
ret
pop
adc
and
shrl
cmp
aam
sub
lods
popa
ds
mov
cmpsl
enter
daa
sahf
je
mov
push
outsb
sbb
cmp
mov
add
stos
xchg
push
lea
xchg
int
inc
push
xchg
int3
jne
cld
jne
xchg
mov
adc
xchg
jg
mov
rorl
aas
jo
incl
lods
pusha
fisttpll
dec
int3
les
sbb
jno
stos
fcomp
mov
add
pop
sbb
mov
pop
cli
fdivr
daa
or
mov
jl
sbb
mov
lock
stc
cmp
sub
lret
pop
mov
mov
sti
add
movsb
stos
sbb
sub
aad
lea
es
xor
ret
push
pop
lret
lods
loopne
mov
loopne
js
in
xor
fstpl
std
or
mov
dec
jns
push
ret
cmp
dec
jns
mov
sbb
mov
std
popf
popf
popf
add
xchg
into
push
daa
and
adc
sti
idivb
jecxz
push
sub
inc
sbb
sbb
xor
fidivl
repnz
sub
fildll
xchg
popa
enter
adc
scas
sti
cli
fidivl
inc
leave
in
inc
mov
xor
add
pop
js
mov
cmp
and
mov
mov
jbe
sarl
shll
inc
ficoml
lods
data16
fisubs
fsubs
adc
jbe
push
mull
add
xchg
mov
ret
aaa
jbe
call
maskmovq
idivl
clc
xchg
out
sub
imul
xor
cmc
pushf
push
iret
pop
insl
or
jecxz
imul
add
xchg
out
mov
fwait
scas
je
dec
cwtl
jno
jne
lds
push
in
dec
js
sbb
rclb
aaa
cmp
pop
cmp
in
pop
push
mov
out
pop
mov
mov
push
add
xlat
lock
inc
xlat
cmpsl
pop
stc
jbe
in
jno
add
test
xchg
in
ret
add
mull
mov
dec
or
mov
insb
stos
jo
rcrb
adc
ffreep
fistpll
xchg
jno
mov
or
ret
lods
and
mov
popf
adc
xor
insl
xor
outsb
pop
mov
dec
cmp
mov
jp
in
outsl
into
js
dec
data16
jbe
sahf
adc
sub
lods
repz
daa
mov
push
add
pop
add
fcoml
ds
mov
fldenv
push
sbb
stos
and
adc
in
or
mov
ja
popf
pop
call
pop
adc
lgs
leave
popl
ret
sbb
bound
nop
fs
or
push
xchg
nop
inc
add
jp
loope
sub
imul
mov
roll
dec
sbb
jecxz
xlat
mov
or
cmpl
int
xchg
dec
cltd
push
sub
frstors
sti
fldl
xor
ja
dec
and
push
dec
mov
sbb
jo
outsb
movsb
jmp
jge
inc
std
pop
cmp
mov
cmp
mov
cmpsb
ljmp
inc
icebp
leave
jmp
add
jbe
icebp
dec
cwtl
aaa
fistpll
mov
inc
mov
mov
int3
rcr
ljmp
mov
add
pop
mov
mov
push
push
nop
jbe
or
mov
lret
test
mov
bts
idivl
jns
jb
xor
mov
add
lret
and
ss
mov
fwait
ret
test
sub
sbb
mov
fiaddl
jg
int
hlt
mov
rclb
mov
in
stos
aam
cmp
mov
sub
mov
inc
fwait
jmp
xor
repnz
pop
lcall
rcl
adc
iret
cs
jno
add
xor
cmp
pop
sgdtl
mov
mov
adc
mov
adc
fisttpll
xchg
and
cmc
push
mov
fnstenv
xchg
dec
mov
in
pop
das
in
and
lret
jp
mov
pop
push
sbb
and
jne
in
mov
test
mov
clc
js
imul
add
cmp
adc
cmpb
data16
adc
sub
or
es
mov
loopne
lret
mov
ds
or
jle
pop
dec
int
dec
inc
hlt
mov
sub
fisttps
loop
cmp
jno
int3
or
in
jge
push
imul
repz
push
xlat
pop
and
jns
lods
mov
icebp
imul
test
inc
clc
test
fsubrp
mov
repnz
dec
ja
test
push
mov
pop
inc
or
mov
jg
jae
clc
hlt
ss
cli
test
clc
push
cmp
sahf
xchg
inc
aam
adc
push
imul
adc
pop
add
jle
sahf
lahf
push
and
ret
enter
and
push
fistl
call
int3
in
fcomip
jg
sbb
scas
sub
dec
dec
clc
arpl
bound
jnp
pop
inc
cmpsb
jb
pop
cli
xchg
in
clc
test
or
cwtl
dec
std
pop
add
mov
fwait
pop
adc
cltd
xchg
cmp
popa
dec
dec
gs
scas
js
call
orl
cmp
xor
fimuls
mov
xor
push
repz
pop
mov
push
fcoml
xor
jbe
push
sub
hlt
lods
lea
nop
adc
lahf
mov
xchg
jb
imull
pushf
subl
inc
xchg
stos
push
out
mov
xchg
mov
mov
push
or
jno
hlt
mov
outsb
lea
inc
int
or
xorl
icebp
sti
adc
sahf
mov
mov
aad
mov
mov
cmpsb
mov
add
push
and
jmp
mov
mov
dec
and
push
dec
fcompl
lds
divb
fwait
cwtl
lret
cli
mov
xchg
je
inc
loop
xor
adc
test
push
das
mov
shll
pop
or
pop
and
jmp
in
xorl
mov
ja
dec
xor
fstl
adc
inc
cmpsb
push
stc
andb
mov
shr
cwtl
lock
jno
das
rolb
stos
push
int
shlb
outsb
test
movsl
out
cli
xchg
stos
mov
sub
or
outsb
jecxz
pop
ljmp
add
sahf
jb
inc
mov
mov
and
mov
jp
and
hlt
or
push
repz
icebp
ja
testb
ja
dec
sub
jge
out
fstl
mov
push
shll
aad
inc
and
ret
add
sbb
pop
dec
or
xor
sahf
out
loop
roll
push
std
xchg
rep
mov
test
fiaddl
shlb
inc
adc
rcll
call
jbe
lock
jo
pop
mov
jg
xor
leave
xchg
shl
imul
addl
mov
xor
mov
adc
xchg
xorb
or
sbb
pop
mov
orl
mov
mov
jbe
or
es
daa
andb
lcall
jmp
mov
jg
outsl
pop
xchg
in
dec
movsl
ret
arpl
sarl
dec
arpl
dec
or
daa
es
or
lds
or
aas
jecxz
insb
popf
xlat
push
push
inc
add
jmp
mov
jbe
mov
mov
test
sbb
out
pop
or
adc
ss
sbb
xor
or
ss
jnp
push
sub
xchg
sbb
rol
call
nop
push
jb
jne
sbb
jle
clc
stc
or
push
cmp
jp
cmp
pop
stos
or
sub
pushf
mov
cltd
shlb
insl
insb
mov
adc
inc
push
xchg
popf
adc
cli
or
stc
mov
add
addr16
clc
cli
movsb
lcall
xor
je
iret
mov
test
lock
lods
pop
inc
add
jbe
pop
cwtl
mov
movsl
xchg
inc
and
fdivp
jle
mov
push
call
dec
psllw
into
jg
dec
mov
insl
cmp
cmc
vphadduwd
dec
mov
mov
cld
xor
jp
push
add
pop
aad
xorl
mov
rcrb
or
adc
dec
xor
push
lods
imul
outsl
outsl
aam
outsl
dec
lret
jo
dec
push
je
cmpsl
push
push
sbb
adc
scas
dec
iret
add
mov
mov
pop
inc
fdivrl
xchg
mov
sbb
xchg
xchg
mov
and
sahf
sub
js
jae
pushf
push
movsl
or
dec
rcrl
outsl
mov
je
inc
push
out
jmp
fcmovnu
fcompl
xchg
and
popf
xor
loope
test
dec
mov
in
mov
sub
scas
icebp
mov
mov
adc
loope
ljmp
mov
inc
push
clc
std
out
cltd
pop
call
jge
push
in
js
shlb
push
movsb
lods
lahf
sub
inc
add
add
sbb
pop
and
das
roll
inc
outsb
inc
sub
mov
adc
push
dec
pop
mov
dec
je
pusha
notl
out
push
jb
popf
shrl
fists
mov
xor
loopne
cmp
aas
jmp
imul
add
insl
jle
outsl
or
insb
jmp
loope
push
or
fwait
mov
stos
xor
pop
mov
inc
xchg
insb
outsb
sbb
pop
and
xchg
nop
aam
iret
and
in
adcb
sbb
sub
jmp
xor
rcll
ficoms
cmp
sub
sbb
push
je
subb
mov
outsl
xchg
adc
push
sub
push
adc
pop
xor
inc
out
sbb
inc
sub
movsb
je
mov
aam
xchg
scas
insb
jl
or
pop
inc
pop
sahf
xor
dec
outsb
mov
inc
movsb
dec
icebp
xchg
jne
mov
mov
addl
inc
cmpsl
outsl
mov
pop
rorl
movsl
shl
outsb
lret
orl
repz
ret
dec
xchg
pop
xor
inc
mov
mov
add
fldenv
daa
loop
or
imul
std
scas
xchg
in
push
addr16
push
sbb
or
mov
push
pop
sub
cmc
mull
sub
ror
idivb
sti
cmp
std
cmp
ljmp
xor
push
jmp
ret
jnp
push
out
xor
ror
mov
xor
dec
bound
call
addr16
mov
pop
jg
loopne
popf
xor
or
xchg
jg
jbe
sti
pop
mov
pushf
les
pusha
jns
xchg
xor
iret
js
mov
imul
sbb
sub
jmp
movsl
push
dec
lods
push
hlt
stos
cmpsb
in
pop
test
mov
ss
xorb
call
inc
jge
pop
into
mov
out
mov
mov
mov
xor
scas
bound
nop
lahf
dec
cmp
nopl
lock
test
adc
test
ss
push
add
mov
xchg
test
enter
hlt
iret
outsl
and
fcmovnbe
jmp
lock
cs
ds
movsl
outsb
adc
dec
lcall
inc
dec
pop
sub
rcrl
pusha
fcomps
dec
pop
out
mov
ljmp
movsl
ds
sbb
aad
jle
ljmp
mov
push
add
sub
sub
adc
icebp
out
mov
dec
push
stos
xchg
popf
push
popa
xor
fidivl
mov
and
push
jp
xor
sub
gs
cmpsl
lret
and
mov
push
add
fistl
cmpl
bound
insl
adc
mov
in
pop
into
mov
in
cld
insl
add
aam
mov
mov
out
rcrl
xchg
iret
dec
cmpsb
lret
das
sub
cmc
push
sbb
push
shl
jnp
mov
adc
sub
ljmp
lcall
and
cmpsb
das
imull
nop
and
sub
mov
test
cwtl
decb
cs
ds
dec
cmp
outsb
sbb
mov
sahf
call
into
mov
decb
cs
ds
dec
cmp
outsb
sbb
mov
sahf
call
into
mov
decb
cs
ds
dec
cmp
outsb
sbb
clc
pushf
call
int3
mov
jle
icebp
js
ret
ds
cmp
xor
mov
aam
mov
test
cmp
xchg
push
aaa
inc
and
inc
fcoml
arpl
jae
and
mov
ret
cmpsb
ret
xchg
jecxz
xchg
adc
and
jbe
es
push
arpl
jae
lcall
test
lret
mov
xchg
adc
inc
xor
pop
and
or
daa
inc
adc
cwtl
iret
stos
jecxz
scas
aam
or
sbb
fsts
or
lret
xor
fcoms
pushf
add
sbb
inc
jecxz
mov
and
sbb
or
cld
adc
shll
int3
leave
and
push
xchg
stc
mov
pop
mov
in
jg
out
sahf
shlb
adc
inc
int3
es
ljmp
mov
sub
dec
ret
cmpsb
ret
imul
mov
pop
pushf
push
arpl
push
jmp
negb
dec
add
cmpsb
sbb
jmp
in
push
fildl
mov
es
out
xor
testb
jnp
xlat
pop
cmp
dec
dec
dec
jbe
loop
mov
mov
mov
popa
add
adc
mov
ret
xchg
jecxz
ljmp
jbe
jle
sub
and
push
jb
adcl
ror
loop
xchg
xor
and
es
push
jg
arpl
mov
shlb
popf
arpl
xor
push
inc
xor
dec
push
jg
inc
pop
lcall
mul
lock
rcll
add
push
and
ss
es
push
arpl
jae
and
mov
cmpsb
rcll
add
push
and
ss
es
push
arpl
jae
addl
and
mov
dec
dec
dec
clc
sub
xchg
out
xor
mov
nop
iret
mov
fs
pushf
cmp
in
lahf
iret
sub
cld
push
out
scas
fnstcw
mov
inc
loopne
enter
and
push
cmc
ja
push
out
outsb
dec
jg
lods
mov
ds
mov
daa
pop
jnp
mov
xchg
or
mov
in
pop
push
xor
rol
mov
push
scas
mov
aad
mov
jge
mov
pop
sub
mov
or
rorl
pop
out
sub
nop
movsb
mov
jae
aas
push
movsb
adc
mov
scas
inc
xchg
dec
push
sbb
pop
insl
sbb
inc
pop
mov
pop
jns
sub
andb
test
jbe
pop
and
jns
pop
enter
sub
fcompl
ret
inc
push
inc
or
mov
sub
cmpsl
call
mov
pop
out
dec
pop
pop
add
daa
or
test
add
cmp
cmpsb
out
es
clc
jle
pushf
pop
fnstsw
inc
pop
jns
jbe
jbe
dec
lods
and
cld
mov
cmp
stc
in
pop
dec
jp
adc
fsubrl
in
adc
jae
fldl
ret
or
rcrl
ss
cmp
das
push
add
out
stos
adc
xor
sub
pop
movsl
push
xor
inc
je
nop
out
xlat
cmp
add
bound
xchg
loopne
pop
cld
jae
ret
sbb
cmc
inc
mov
pop
fidivrs
cmp
and
inc
aad
roll
mov
sar
fsubp
and
pop
pusha
loope,pn
sub
push
jg
mov
adc
push
rep
repz
lret
lock
dec
jne
imul
xchg
loope
mov
mov
xchg
in
mov
push
into
xchg
cmp
into
out
test
sub
and
or
push
and
ds
mov
scas
mov
les
add
adc
and
mov
cs
sbb
add
lret
sbb
dec
or
xor
lahf
pop
mov
cmp
or
fsubl
push
cmpxchg
or
push
stos
call
or
out
jg
movsl
xchg
movsl
jl
dec
cltd
stos
mov
sub
xchg
es
jno
push
insl
xor
inc
rol
mov
add
fsub
cltd
add
xchg
xor
test
es
dec
mov
adc
in
or
lea
xor
inc
xchg
mov
cld
sub
or
mov
mov
add
addb
int3
add
jb
xor
pop
dec
and
sbb
and
scas
push
int
cli
dec
or
test
imul
in
in
cmp
insb
sbb
ret
jge
insb
lea
rcll
je
clc
mov
xor
test
lea
sbb
movsl
add
jg
fsts
getsec
lcall
icebp
jp
pop
addr16
stos
lds
mov
imul
daa
outsb
push
sarb
repnz
fiaddl
xor
xchg
xor
leave
mov
push
cwtl
push
jns
mov
lcall
fucomi
in
iret
test
pop
gs
lock
adc
push
ss
mov
mov
dec
std
imul
loope
xor
sbb
inc
sbb
mov
xchg
jg,pt
xchg
dec
hlt
imul
gs
xchg
mov
jne
cmpl
movb
or
leave
test
lret
push
xchg
das
mov
cld
pop
xchg
test
fnsave
and
loope
mov
mov
cmp
dec
int3
or
sbb
movb
or
push
lret
cld
or
inc
pop
adc
out
mov
sbb
mov
jbe
xchg
shlb
or
imul
pop
test
pop
lret
bound
push
pop
pushf
dec
pushf
ljmp
loope
loopne
cmpsb
jmp
js
add
in
andb
arpl
scas
sub
stos
test
pushl
lea
outsl
sti
dec
divl
jecxz
pop
lea
mov
add
lret
daa
and
sbb
in
add
cmp
jno
inc
dec
stc
xor
jno
lds
sub
lods
sahf
adc
push
mov
in
xor
push
add
icebp
cmp
in
cltd
sub
mov
inc
adc
mov
dec
sti
add
xchg
and
pop
loopne
sub
pop
movsb
repnz
xor
fprem
xchg
push
jo
jg
icebp
jno
add
xor
icebp
movsl
ss
stc
loope
push
scas
pop
xor
xchg
dec
mov
dec
addr16
xor
cwtl
pop
pusha
ret
mov
stos
into
xlat
jge
mov
inc
icebp
pop
sub
call
inc
add
test
dec
in
lock
fbstp
stos
movsl
push
ret
rolb
jmp
mov
jno
mov
jno
lcall
cwtl
pushf
add
stc
pop
pop
mov
or
sbb
add
into
pusha
and
hlt
inc
push
std
jp
mov
rolb
cmpsl
dec
inc
xchg
cmpsb
adc
cmp
aas
test
rcrb
int3
add
movsl
xor
pop
or
xchg
jae
es
icebp
js
jns
add
xor
andb
movsb
mov
mov
nop
push
lret
pop
or
add
pushf
mov
jecxz
out
xchg
pop
xchg
mov
mov
pop
mov
push
jle
cmp
adcl
jbe
aas
cmpsb
out
arpl
xor
push
arpl
movsb
into
xchg
xchg
aas
adc
mov
lods
jb
sbb
jg
add
xor
cmpsl
aas
sbb
mov
int3
leave
jo
xchg
aad
adc
inc
gs
mov
sbb
xchg
out
cmpsl
xor
pop
iret
cltd
adc
sbb
stos
push
jp
cmp
test
repz
mov
pushf
daa
dec
pop
push
adc
cld
cld
dec
lds
pusha
add
adc
repnz
lods
push
sub
jno
imul
xor
pushf
and
jecxz
out
cld
repnz
pushf
int
in
jb
stc
xchg
sarb
and
fcompl
sub
xchg
cmp
stos
call
ss
xor
arpl
ror
jge
pop
into
in
sarl
dec
stos
push
pop
inc
dec
into
lahf
inc
in
popf
xlat
push
insb
aaa
mov
mov
add
mov
push
cmp
cmp
lret
imul
pop
or
in
jg
and
sbb
es
fwait
loopne
or
pop
lods
pand
clc
movsb
mov
subl
in
aas
or
fistpl
sub
stc
cmp
cmp
in
add
jns
enter
iret
fs
es
je
mov
out
ret
or
ss
jmp
push
jl
mov
rorl
imul
data16
sti
mov
sub
mov
lret
dec
jmp
cwtl
xor
adc
mov
sub
inc
pop
test
mov
es
lcall
sub
cmpl
ljmp
jl
xchg
andb
popa
lret
jae
out
shlb
loop
out
rclb
jp
bound
pop
or
gs
mov
xor
mov
pop
mov
jne
scas
mov
mov
and
ret
sbb
jge
pop
int
insl
add
test
and
cmp
sahf
cmp
sarb
repnz
mov
ljmp
adc
mov
sbb
rolb
mov
enter
inc
push
sbb
or
test
inc
outsl
pop
and
jg
cmp
mov
imull
cli
mov
ljmp
mov
imulb
add
adcb
xlat
popf
cmc
xor
in
cmp
inc
adc
or
sub
call
sub
dec
hlt
jmp
loop
add
loop
dec
pushf
fdivrs
adc
mov
xor
fadd
imul
imul
dec
dec
xchg
sbb
xor
out
and
inc
xor
pop
and
pop
dec
push
xor
fisubl
sbb
pop
clc
cltd
or
push
jg
sbb
out
je
in
daa
xchg
push
stc
idivb
lahf
or
and
xchg
call
or
faddl
pop
push
pusha
out
pop
imul
xor
mov
cmpsb
hlt
adc
push
paddw
scas
loop
cmc
fisttpl
insb
popa
push
inc
jb
cmc
lcall
mov
mov
inc
into
cmpsb
and
into
lea
or
push
pushf
sub
lds
subb
mov
pop
dec
mov
sub
ss
fs
mov
jg
inc
ret
mov
mov
push
or
jl
enter
xchg
cmp
dec
inc
jmp
ja
or
pop
pop
aas
lds
push
push
cmp
test
ficoms
and
xor
jae,pn
xchg
cmp
pop
adc
mov
popf
int
ret
add
aam
dec
xchg
movsl
movsl
dec
sub
ret
pop
push
push
add
push
push
mov
lret
aam
add
faddl
xchg
jg
pusha
jp
cmpsb
push
push
ret
mov
or
sbb
ja
push
nop
add
lock
imul
cmpsl
out
mov
xchg
pusha
cmc
add
scas
adcl
fwait
cltd
jns
jo
jnp
jmp
or
jl
mov
xchg
fisubl
push
shr
or
sbb
cmc
js
aas
imul
insl
xor
lds
inc
ds
inc
test
cli
lods
ljmp
pop
mov
push
mov
clc
mov
adc
add
xchg
inc
mov
or
imul
dec
mov
jg
or
mov
lahf
sbbl
mov
mov
mov
xchg
out
jae
jp
int3
dec
xor
push
jbe
neg
cld
in
sarl
roll
das
and
inc
push
mov
mov
jno
mov
add
push
and
mov
lods
push
ret
bound
mov
and
xor
icebp
out
inc
repnz
mov
xchg
pop
add
push
insl
adc
push
sub
mov
xor
sub
ret
popf
push
add
jl
out
add
inc
fdivrs
fiadds
and
and
mov
adc
inc
mov
fidivs
or
lahf
int3
jno
rol
add
incl
adc
repnz
int
adc
cld
sbb
or
shl
jno
xchg
jne
rcl
sbb
sbb
mov
push
or
rcrl
jns
adc
stc
dec
mov
nop
push
adc
and
xchg
add
jne
cltd
pop
jmp
jbe
ficoml
inc
dec
sub
hlt
clc
mov
xor
sub
or
push
mov
pop
jae
rep
pop
jae
push
fwait
or
inc
add
and
in
adc
outsb
repz
push
gs
or
add
ficomps
and
mov
scas
test
insl
pop
or
and
jnp
add
adc
adc
inc
cmc
push
pop
push
pop
adc
imul
mov
lods
mov
xchg
js
push
jmp
sub
xor
xchg
and
mov
loop
subl
xor
ja
mov
cmp
lahf
xor
pop
fistpll
inc
push
dec
pop
movsl
inc
gs
sbb
and
xor
cmpsl
jecxz
mov
rcrl
loope
call
scas
mov
xor
daa
cmpsl
and
adc
fmuls
aas
lods
inc
daa
cmc
enter
stos
mov
inc
out
repz
mov
jg
into
and
mov
dec
sbb
jmp
or
mov
inc
and
jl
jno
push
pop
jne
loop
mov
mov
pop
nop
ljmp
jg
jge
rorb
sub
ja
popl
mov
int
cmp
dec
fsubrl
ds
mov
inc
into
shll
jb
mov
pop
das
mov
inc
inc
aam
mov
stos
loopne
inc
sbb
adc
es
lock
imul
and
inc
dec
adc
inc
cmp
mov
shll
jp
sub
int3
hlt
xor
scas
jl
in
jae
aam
insl
cld
jge
pop
lea
adc
rorl
or
ret
addr16
lcall
fcomps
lret
ds
and
rol
arpl
push
add
cmc
and
in
mov
aam
dec
cld
or
cmp
adc
inc
dec
push
aas
adc
or
sbb
cmp
ljmp
xchg
lock
loope
cwtl
sub
dec
bound
jbe
lea
sbb
scas
xchg
and
mov
cld
cmp
mov
add
in
mov
ret
inc
cmpsb
scas
call
xchg
jnp
icebp
insl
mov
jae
aad
shll
idiv
mov
xor
sub
in
notl
inc
enter
and
out
dec
or
insb
pusha
dec
loope
dec
jge
mov
clc
roll
adc
aad
idivb
push
mov
jl
out
and
cmpl
sub
clc
ret
ss
adc
jns
jmp
xor
mov
call
inc
xchg
push
mov
push
scas
dec
clc
mov
mov
cmp
cld
addb
mov
dec
es
pop
cmp
aad
sub
leave
rorb
mov
add
cmp
xchg
jmp
rclb
mov
inc
sbb
push
mov
xor
or
cmp
pop
into
xlat
pop
cmp
xchg
cmpl
hlt
stc
pushf
inc
sub
or
mov
push
arpl
mov
mov
jno
push
in
xchg
jp
xchg
pushf
bound
adc
iret
xor
sbb
fimull
stos
and
lods
cltd
push
push
push
push
or
mov
add
lea
mov
cs
xchg
sahf
ret
cmpb
cli
cmp
mov
popf
sbb
orb
cmc
adc
mov
leave
pop
repnz
pop
sub
push
in
lahf
fldcw
arpl
loope
insl
add
mov
jne
push
stos
fs
xor
or
adc
addr16
or
es
lret
scas
adc
mov
xchg
inc
inc
pusha
mov
cmp
cmp
rorl
loopne
data16
pop
sbb
jecxz
jmp
js
dec
popf
inc
dec
sub
hlt
out
jnp
pop
stos
fstpt
inc
inc
ja
data16
ss
xchg
sub
fs
xchg
push
popf
fstps
mov
adcb
cmpsl
and
stc
fwait
decb
idivl
sbb
xor
icebp
loope
xchg
push
test
push
in
fstps
mov
loopne
or
dec
bnd
or
push
adc
outsl
mov
push
lcall
jle
lds
push
sti
add
pop
fiaddl
sub
outsl
nop
cmp
jae
jg
or
jbe
je
fucomi
aaa
jo
aad
imulb
lret
testl
mov
xchg
ljmp
add
xchg
ds
push
test
jmp
adc
popf
mov
xor
jmp
lea
loope
sub
mov
fnsave
inc
push
shlb
xor
in
push
rclb
outsl
adc
ss
mov
mov
inc
push
cs
inc
lea
faddp
pop
jmp
push
cmpb
xor
mov
das
movsb
lds
xchg
inc
jmp
push
or
test
jle
push
aad
or
lds
fldt
pop
xor
adc
xchg
jmp
xchg
adcb
push
mov
call
cmpsb
add
addr16
nop
add
notl
enter
in
pop
loopne
addr16
push
add
addl
mov
in
inc
mov
mov
lret
rolb
push
das
fadd
pop
outsl
dec
dec
and
fwait
jae
mov
stos
adc
inc
loop
test
rorl
mov
shrb
lea
xchg
cwtl
out
cld
dec
mov
inc
sub
leave
or
rcll
lds
fs
lods
mov
push
in
jmp
push
in
int3
lcall
vpunpckhbw
push
sbb
lcall
sbb
shlb
jno
inc
js
cli
shr
add
dec
lret
imul
pop
sub
push
test
jmp
push
mov
push
cmp
cs
std
bound
jno
dec
inc
mov
or
mov
push
or
sub
inc
nop
loope
stc
popa
setno
push
and
pushf
fcoms
lret
lea
cmpsb
mov
mov
roll
aam
cli
shrb
xchg
inc
add
lock
les
mov
shrl
ja
pushw
fwait
dec
adc
cld
sbb
out
sahf
xlat
push
cld
add
adc
mov
out
pop
std
or
mov
sbb
scas
in
popf
push
sub
leave
xchg
push
dec
jp
or
cmp
jge
in
leave
add
inc
sbb
add
jne
int3
add
cmpsb
cmc
jg
test
scas
xor
enter
call
ret
inc
pop
pop
pop
xchg
or
iret
push
idiv
mov
roll
ljmp
jns
mov
fwait
jmp
mov
jns
rcrl
jmp
aam
inc
jae
ret
dec
mov
jne
mov
pop
idiv
or
xchg
ds
add
ss
pop
xchg
cmc
test
push
rcrl
pop
mov
mov
xorb
xor
add
mov
enter
cmp
sar
cmc
bound
xor
fbld
add
lret
addr16
mov
movsl
jmp
loop
rol
loopne
cmp
stos
js
sbb
into
xchg
out
mov
movsb
cmc
sub
cltd
jns
ljmp
nop
dec
js
jmp
mov
mov
repnz
and
fisubs
sarl
xchg
test
mov
repnz
imul
mov
inc
mov
lret
xor
mov
push
mov
xchg
or
push
jo
jg
lret
xchg
outsb
loop
aaa
push
movsl
mov
cmp
push
js
push
and
mov
inc
test
dec
xchg
lds
ljmp
mov
mov
rcrl
push
sahf
loop
jno
dec
jge
sbb
adc
loop
rcrl
mov
lods
inc
mov
ret
lock
popf
cmp
or
jns
xchg
inc
and
in
dec
and
pop
lret
xchg
stos
sbb
push
fwait
adc
ret
and
and
jl
jg
lret
stc
call
sub
scas
add
inc
sub
lods
fistpl
in
mulb
lahf
ds
dec
and
jo
or
jecxz
jmp
add
sub
les
stc
ljmp
fcmove
jbe
imull
jle
out
pop
subb
inc
xchg
test
pop
cmpsl
pop
lcall
jle
repz
mov
cmp
sarb
xchg
pop
jp
ja
sub
or
sub
push
std
inc
cmp
xchg
fnstenv
mov
mov
subl
cmp
popf
mov
or
les
test
push
repnz
in
bound
pop
fildll
sub
mov
dec
mov
inc
xchg
or
sahf
mov
daa
xor
sbb
loop
xchg
jmp
xchg
shl
popa
lret
into
and
aad
sub
mov
mov
xchg
cmc
lret
lahf
cmp
jns
jnp
jmp
pmaxsw
mov
pop
jno
xlat
daa
mov
inc
pop
aas
stos
cmp
cmp
scas
mov
stos
nop
loope
iret
clc
rcrl
icebp
or
pop
and
inc
int
sub
nop
jb,pn
rcl
in
les
sub
mov
es
loopne
xchg
jmp
xchg
imul
stc
mov
ret
or
mov
sbb
sbb
js
stos
dec
clc
cmc
imull
cmpl
imul
in
ss
sahf
nop
dec
iret
and
xchg
xchg
xchg
mov
cmpsb
rcll
add
push
and
ss
es
push
arpl
jae
and
mov
cmpsb
rcll
add
push
and
ss
es
push
arpl
jae
adc
mov
mov
ret
cmpsb
rcll
add
cmpsb
and
ss
ss
push
addr16
ja
xchg
mov
ret
mov
xchg
jecxz
xor
cltd
mov
inc
lret
scas
sub
sbb
or
adc
call
iret
push
fistpll
add
and
dec
lahf
mov
movsb
jae
pop
xchg
das
out
pop
pop
ss
call
iret
push
fbstp
mov
inc
lahf
mov
cmpsb
jg
outsl
xchg
dec
out
shufps
mulb
call
xlat
push
jbe
cmpsw
push
xchg
inc
test
cmp
pop
imulb
push
xchg
pop
scas
pop
inc
out
inc
xchg
push
mov
xor
adc
pop
jle
hlt
pushf
dec
orl
repz
sti
and
inc
stos
add
sub
mov
seta
adc
nop
dec
mov
pushf
sti
sbb
ljmp
idivl
insl
aas
push
icebp
pop
ss
add
push
cltd
jg
xlat
inc
pusha
inc
aas
sub
cmpsb
jl
shrb
dec
jne
xlat
mov
aas
mov
int
mov
scas
jg
or
mov
shufps
loopne
pop
sub
stc
adc
xchg
in
pop
repnz
adc
outsb
jecxz
pop
in
dec
adc
adc
les
cmc
out
es
jbe
mov
inc
xchg
push
xchg
aaa
out
shufps
inc
call
inc
ficoms
stc
or
cmp
ret
push
ret
pop
in
ret
xor
cmpsl
insb
mov
mov
inc
xchg
push
pushl
inc
ficoml
fsubrl
repz
rcrl
cmp
push
mov
scas
es
mov
inc
lahf
mov
cmpsb
jg
dec
xchg
das
out
shufps
out
call
iret
push
fbstp
mov
inc
lahf
mov
cmpsb
jg
dec
xchg
das
out
shufps
out
inc
js
out
jns
cmpsb
xchg
xchg
fiaddl
xor
ja
stc
jne
test
push
xlat
push
ljmp
mov
sbb
out
popf
xchg
jne
cs
jmp
sub
xchg
es
loopne
cmpl
je
ss
shl
in
jecxz
sub
pop
popl
jmp
js
stos
stos
lret
gs
test
push
xchg
in
push
mov
out
cwtl
jns
jo
add
addl
sahf
in
xor
scas
jns
std
lods
push
outsl
bound
pop
jl
inc
sub
sbb
cmc
jp
les
or
dec
mov
cmp
dec
loop
lods
in
sub
or
shlb
cmp
sahf
icebp
repz
push
je
loopne
dec
push
cli
and
push
xchg
out
push
mov
ds
xor
insl
xor
loop
jo
imul
in
stc
pop
jge
pop
icebp
mov
and
shr
sbb
inc
and
sti
nop
callw
and
push
cmp
mov
repnz
iret
sbb
sbb
mov
adc
filds
mov
adc
pop
lcall
sti
lods
jg
insl
aad
movsb
sub
fxch
jg
sub
push
test
div
add
lds
outsb
fwait
jmp
ds
nop
sbb
je
ljmp
mov
or
nop
and
insb
sub
jge
out
jge
sub
mov
or
mov
cmovge
mov
pop
lahf
sbb
sahf
jl
insl
jecxz
mov
jle
adc
movb
out
pop
cmp
stos
cli
test
inc
repnz
pop
ret
fisubrl
or
adc
mov
fwait
test
clc
mov
inc
inc
out
andb
sbb
sbb
push
pushf
push
fnsave
xor
mov
inc
sub
movsl
cmp
pop
das
or
out
mov
and
mov
mov
lods
fdivl
mov
cmp
sub
cmpsl
ret
cs
aaa
xor
adcl
mov
test
mov
pop
nop
icebp
mov
lret
pop
popw
jge
mov
in
cmpsl
fimuls
cmpl
cld
mov
xlat
mov
push
in
sub
cltd
lods
mov
sub
into
sub
and
cmp
jnp
jecxz
nop
or
sbb
fistpll
push
das
mov
jg
ds
jg
add
sahf
add
and
fidivl
insl
mov
sarb
nop
outsw
test
in
cmp
adc
sub
ffreep
xchg
loop
jb
mov
test
in
in
hlt
pop
pop
insb
bound
lods
mov
fisubrl
js
fadd
fs
ja
in
in
xchg
hlt
jb
push
loop
dec
mov
mov
dec
jbe
imul
iret
add
ss
lcall
push
jb
sbbb
enter
cs
add
int3
adc
iret
ljmp
neg
cwtl
sub
fisubs
xchg
dec
fs
mov
xchg
lahf
imul
inc
mov
fcmovne
adc
mov
mov
in
scas
test
leave
in
mov
push
jbe
mov
mov
sub
in
push
inc
jnp
ss
arpl
fisubrs
jae
mov
jle
dec
inc
mov
mov
imul
das
gs
xchg
sbb
dec
fidivl
or
inc
insb
and
mov
mov
xchg
fimuls
xor
enter
pushf
push
xor
mov
jae
out
mov
jno
cmp
dec
cmp
push
mov
or
mov
inc
pushf
je
mov
stc
sbb
vphsubdq
add
ss
ljmp
xor
mov
jne
push
out
sbb
pop
pop
cmp
movsl
adc
insb
sarl
cmpsb
bound
sbb
mov
in
movsb
add
and
filds
pop
mov
fstp
imul
sbb
jbe
lds
and
and
xchg
cli
outsb
push
lret
lods
lahf
push
inc
or
sub
in
jge
aam
insl
aad
cmpsl
and
dec
enter
imul
shrl
aas
inc
jl
mov
push
or
dec
xchg
jl
nop
fsubrs
pop
push
xchg
pop
mov
adc
push
push
test
mov
es
sub
ror
dec
sub
fwait
jecxz
pop
pop
mov
daa
sub
pop
scas
adc
and
rorb
mov
arpl
sbb
ficomps
aam
sbb
fcompl
das
xor
sarb
jge
pop
sbb
divb
pop
test
js
imul
cmp
jno
cmpsb
sub
or
sbb
dec
and
int
negb
imul
xor
sahf
stos
jle
and
jo
rcrb
or
inc
add
movsl
stos
iret
test
add
stos
pusha
xor
push
pop
and
mov
sbb
shr
mov
scas
dec
test
aaa
int3
sub
into
inc
sbb
or
pop
das
aad
jns
in
ljmp
jb
aam
iret
lock
push
arpl
repz
mov
cmpb
mov
lahf
sbb
sub
or
jle
xor
mov
lds
imul
fcoms
in
fistpl
dec
cmpsb
shll
cmpsb
sub
mov
xchg
cmpsl
imul
mov
push
mov
ret
xchg
cmp
inc
mov
int3
add
repnz
sbb
sbb
pop
inc
and
jecxz
repnz
insl
dec
pop
ret
aam
das
mov
into
push
or
es
and
leave
sbb
cwtl
rol
mov
inc
lods
pop
push
inc
cwtl
cmp
add
fistpll
adc
push
sub
aaa
or
inc
iret
test
cli
outsb
shlb
xchg
cmp
stc
xor
cmp
shll
mov
rcl
leave
fistpl
mov
adc
push
movsb
push
mov
pop
mov
pop
adc
inc
xor
imul
int3
and
fildl
shr
ret
and
outsl
inc
adcl
mov
dec
pop
jbe
sbb
fcomip
inc
push
decb
jle
in
cli
jo
inc
and
adc
loope
mov
and
and
out
aaa
fstpt
sub
inc
imul
mov
jns
and
and
aaa
sub
sti
mov
sahf
incl
cli
lds
mov
loope
xchg
mov
xchg
mov
lods
movl
xchg
int
mov
test
mov
lahf
les
test
jle
cmpb
push
or
std
pop
dec
out
mov
cmp
ret
mov
pop
fists
cmp
cmp
sub
std
xchg
xlat
shll
inc
xchg
sahf
leave
adc
dec
sbb
jno
mov
movsl
jae
xchg
inc
add
push
stos
or
ljmp
scas
pop
stos
cmp
inc
clc
pop
add
shll
rep
adc
dec
push
mov
lret
lock
xor
stos
inc
enter
cmp
das
nop
pop
pop
rcrl
out
pop
pop
mov
cmp
push
xor
jae
into
in
mov
leave
imul
lods
add
sbb
inc
mov
rcll
dec
pop
adc
pop
dec
adc
fcmovnbe
bound
sarl
mov
fmulp
les
add
notb
js
jb
cvttps2pi
add
dec
jae
sbb
xor
mov
mov
lahf
sub
loop
jns
aaa
sub
push
cwtl
pop
int3
or
dec
jmp
pop
cmpsl
inc
pop
imul
mov
add
out
mov
lret
cmp
es
cmp
mov
or
and
fnstenv
add
mov
mov
xor
jecxz
icebp
mov
sbb
or
xchg
add
fisubl
aad
jno
das
push
add
test
mov
scas
add
ljmp
mov
insb
pop
std
sbb
out
aaa
push
add
fistpl
arpl
xor
daa
loop
xchg
arpl
pop
sbb
call
sub
js
pop
mov
js
pop
cmp
jg
mov
or
fwait
out
cmpl
lods
loopne
jmp
xchg
push
push
in
sbb
mov
pop
jge
testb
mov
es
cmp
dec
lcall
mov
sbb
mov
add
scas
or
sti
push
jb
movsb
nop
jne
jne
xchg
js
jle
push
xchg
addl
adc
fs
fcmovne
pop
test
add
je
fimuls
jge
dec
aad
jecxz
jge,pt
push
push
xchg
test
xor
outsw
fldenv
cli
xor
std
jecxz
imul
xor
mov
mov
inc
gs
lods
notb
outsb
xlat
dec
or
in
mov
pop
or
push
cmpsb
and
shll
inc
cmp
outsl
mov
sbb
gs
add
add
mov
jns
cmpl
outsb
jge
mov
loope
dec
icebp
repnz
mov
mov
aas
mov
pushf
and
xor
mov
inc
je
loop
pop
mov
addr16
mov
cmpsb
mov
add
jecxz
pop
mov
mov
xor
push
ja
data16
adcl
repnz
xchg
out
fisubrl
aad
daa
cmpb
ds
loop
movsl
push
mov
mov
xchg
mov
sub
lock
xchg
daa
xor
les
leave
in
or
adc
xchg
cmpsl
cmp
jmp
outsl
mov
xchg
sti
ss
cli
arpl
cltd
sbb
dec
or
scas
stc
int3
nop
or
mov
sub
pop
sub
push
fmuls
mull
xchg
sahf
xchg
ret
fcomip
push
pushf
push
pop
es
fcmovnb
xchg
mov
pop
cli
in
xlat
stc
insb
add
dec
mov
clc
inc
movsl
mov
ret
sbb
mov
fistpll
loopne
fcmovnbe
pop
inc
das
push
fcmovnu
mov
fadds
jb
out
mov
sbb
aaa
sbbl
adc
aam
or
dec
push
out
jnp
dec
data16
inc
repz
lock
rolb
mov
adc
or
mov
imul
out
test
jno
imul
xchg
jo
lock
lods
iret
loop
jns
daa
daa
aam
pop
mov
bound
sbb
repz
push
pop
inc
xchg
adc
inc
lock
sarl
jnp
das
mov
out
add
test
mov
adc
lea
inc
mov
sbb
inc
pop
push
jmp
pusha
mov
jnp
jbe
inc
mov
or
adc
cmp
stc
sbb
idiv
mov
jmp
adcb
or
ja
mov
sub
cmc
inc
inc
sti
jae
sub
test
push
xor
mov
stos
pop
arpl
add
jnp
punpckldq
adc
ss
scas
mov
dec
iret
jns
jl
pop
xchg
pop
arpl
aad
aaa
std
mov
sbb
jo
xchg
cmp
pop
dec
adcb
adc
imul
adc
lds
movsb
inc
gs
es
mov
bt
dec
add
pop
and
test
icebp
in
or
iret
xorb
xchg
jne
or
push
mov
inc
arpl
iret
cmpsl
jg
xchg
jl
xchg
mov
mov
cmpl
pop
in
movsb
adc
dec
dec
es
dec
lds
mov
shll
pop
adc
gs
imul
shll
sbb
inc
pop
inc
push
cmp
pmaddwd
xor
pusha
ss
pop
jp
jbe
xchg
cvtpi2ps
fwait
test
xchg
lods
ret
scas
fisttpl
movsl
out
or
out
jp
pop
mov
ror
xchg
sub
push
dec
mov
sub
addr16
fsubrp
xchg
inc
pop
or
inc
scas
or
cmpsl
fwait
dec
adc
or
jmp
pop
jle
pop
xchg
push
dec
add
into
push
popf
mov
xor
insl
bound
add
mov
ljmp
test
inc
cmp
mov
mov
inc
icebp
scas
insl
lcall
push
pusha
mov
mov
adc
fdivr
mov
in
and
fmul
sub
movsb
inc
fisttpll
jp
cmpsb
into
jb
jmp
nop
daa
rorw
jle
popf
cmp
add
push
dec
mov
fldenv
mov
push
sahf
sub
or
dec
jecxz
jge
hlt
test
subb
iret
adc
cwtl
dec
mov
or
mov
push
jp
in
cmp
cmpsb
inc
pop
mov
add
mov
stos
mov
adcb
pop
cmp
imul
xor
shll
sub
ss
xchg
xchg
scas
dec
cmp
push
or
stos
out
sub
or
mov
adc
js
inc
fwait
rcrb
pop
and
jae
aad
cmp
mov
mov
lea
push
test
mov
or
adc
rorb
test
xchg
dec
inc
jae
mov
in
test
jbe
mov
ficomps
dec
push
outsb
in
sahf
insl
out
aaa
dec
ret
mov
mov
imull
jbe
inc
push
jne
pop
sti
inc
lods
xor
fidivl
cmpsb
adc
cld
aas
rcr
pop
aad
mov
not
test
sbb
pusha
mov
outsl
mov
ret
xchg
mov
shlb
fdivs
es
jae
sub
jnp
pop
in
ret
out
lock
jmp
add
xchg
pop
adc
add
cmp
test
cld
inc
dec
call
rcr
into
pop
sbb
pop
and
stos
int
jns
push
mov
push
mov
xor
jns
movsb
mov
sbb
jmp
push
mov
cmpsl
mov
sub
pop
mov
push
stos
xchg
aas
xor
fdivrs
cmp
outsb
add
loope
in
imul
jno
imul
adc
xor
mov
and
mov
cmp
andps
fdivrl
rolb
pop
fisubrs
push
xor
insl
mov
cwtl
push
iret
fstps
movsl
jne
std
scas
cmpsb
cmp
push
sbb
xlat
fldl
xchg
add
lock
popa
in
aas
ffree
xor
lea
jo
xchg
jne
leave
or
xchg
sub
push
and
jg
mov
ret
int
mov
fadds
push
lret
or
into
stos
sub
xchg
int3
in
jo
scas
fdivrl
add
or
inc
sbb
push
inc
test
xchg
dec
std
fsubrs
repnz
in
mov
cmp
mov
inc
out
mov
cld
mov
mov
cld
jns
xchg
sarl
xor
cmc
cmp
sbbb
sub
mov
lret
inc
sub
xor
js
dec
ds
sub
andl
jns
fcoml
enter
dec
push
push
and
inc
dec
fs
fs
adc
mov
or
mov
add
add
push
scas
pop
and
inc
push
lods
test
push
pop
dec
rolb
pop
cmp
mov
mov
jno
jp
jmp
fdivrl
ja
lcall
shl
loopne
jecxz
cli
or
movsb
mov
loope
hlt
cmp
push
ret
std
loopne
imul
pop
shll
cld
stos
inc
and
cmp
cwtl
mov
jo
in
adc
pop
cmpsl
jp
pop
fadds
ljmp
ds
jl
lock
cmpsl
lret
pop
xor
sub
mov
cmpsl
stos
sbb
or
scas
subl
orl
jle
into
mov
in
push
push
aam
add
inc
inc
lods
imul
or
testl
insl
push
dec
lcall
jb
sub
mov
inc
out
scas
iret
std
pop
testb
popf
bound
out
pop
pop
mov
sub
lea
inc
test
ficompl
and
pop
jecxz
pop
iret
pop
wrmsr
out
xorb
lods
mov
insb
mov
xor
jo
fcoml
repnz
pop
in
adc
arpl
aad
dec
xor
mov
mov
mov
imul
mov
testl
fcoml
rolb
pop
mov
gs
sarb
xchg
imul
mov
stc
jo
mov
fstps
jnp
push
mov
out
jne
pop
jg
pop
jb
mov
in
and
adc
and
loope
inc
das
sbb
inc
jae
mov
pop
jbe
pop
je
mov
cmp
adc
scas
cmp
in
add
sbb
mov
cwtl
shrl
sbb
or
out
std
int
loope
cmpb
push
xor
adc
mov
mov
sub
rclb
vdivpd
cmp
mov
cmc
mov
shlb
push
data16
add
xchg
ret
repnz
xlat
in
pop
cmc
cltd
icebp
lock
xchg
sub
add
sti
mov
jns
add
push
and
loopne
out
aas
ja
adc
sbb
sub
rorb
sbb
mov
cmp
repnz
pop
jle
mov
dec
push
ror
das
sbb
xor
mov
stos
into
add
add
fcoml
nop
pop
loope
mov
and
aam
sub
fs
iret
xchg
in
es
hlt
pushl
push
xchg
push
sbb
gs
mov
fsubr
cmp
jnp
mov
into
sub
sub
and
scas
mov
xor
adc
sub
shlb
rcll
sub
decl
sub
mov
pop
sti
mov
fwait
repz
dec
hlt
or
sub
outsl
jl
fstps
out
mov
xchg
adc
fldenv
inc
pop
imul
repz
in
jno
test
test
loopne
insb
loopne
in
enter
add
push
and
lock
cltd
clc
push
call
andb
fwait
addr16
push
cs
jns
vcvttpd2dq
mov
int3
adc
jae
rorl
add
incb
outsb
lds
jnp
cld
loopne
and
add
jge
push
ds
pusha
imul
fs
cmpsl
stos
movsb
setns
bswap
ret
inc
out
jnp
ds
or
push
jns
sti
cld
mov
adc
es
call
inc
stc
cmpsb
jecxz
jle
fisttpl
and
stc
add
mov
inc
rcr
push
mov
jns
and
insl
mov
pop
mov
jmp
xor
dec
std
es
push
xor
ret
cmp
mov
lcall
cmpsl
hlt
in
mov
das
jecxz
insb
inc
pushl
mov
and
dec
lahf
jno
add
xor
movsb
pop
adc
sbb
xor
out
jae
xor
add
into
insl
vshufps
js
movsl
inc
jns
aas
jge
popf
mov
push
out
call
sub
addb
mov
mov
out
cmp
ficoms
inc
sbb
xchg
jmp
mov
pop
ja
cltd
fcompl
sbb
cmpsb
repnz
repnz
jmp
lea
push
addl
mov
push
subl
cmp
orb
adc
leave
adc
rcll
mov
fstpl
push
push
inc
push
mov
sub
jl
or
mov
push
pop
pop
mov
xchg
aas
mov
jmp
cmp
inc
mov
adc
cmp
adc
push
imul
scas
pop
rolb
xor
in
in
sub
push
hlt
mov
subb
cmp
pop
into
pop
and
fisubl
icebp
cltd
test
into
jmp
pop
cmp
pop
ja
lret
popa
pop
les
xorb
inc
mov
stc
loop
inc
arpl
push
mov
or
js
fwait
add
add
hlt
mov
jae
idivb
xchg
ss
pop
into
ret
inc
bound
js
inc
div
in
inc
movsb
pop
cmc
push
mov
cmp
jmp
loop
jmp
sti
adcb
push
cmp
loop
lret
rcl
mov
jns
or
cwtl
test
dec
mov
and
fbstp
mov
inc
lahf
mov
cmpsb
jg
dec
xchg
das
out
shufps
out
call
iret
push
fbstp
mov
inc
lahf
mov
cmpsb
jg
dec
xchg
das
out
shufps
out
call
iret
push
fbstp
addr16
mov
cmpsb
jg
dec
xchg
das
out
xlat
push
pop
ss
call
iret
push
fbstp
mov
lahf
dec
outsl
pop
aad
dec
xchg
andl
in
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
cli
mov
pop
dec
insb
pop
cld
nop
rcrl
push
int3
cli
fmul
in
stos
mov
mov
dec
insb
pop
jl
or
nop
or
dec
ljmp
cld
stos
jecxz
pushf
mov
lcall
les
sub
cmp
or
sbb
adc
mov
leave
fcmovnbe
cmc
stos
fdiv
mov
push
sbb
sub
xor
in
iret
stc
lds
mov
jmp
testl
or
outsl
jle
jmp
push
in
push
lea
subb
pop
inc
jbe
push
cs
mov
orl
and
pushf
or
lods
mov
push
mov
sub
je
xlat
sbb
cli
xor
lret
fnstenv
add
jmp
out
xchg
pop
test
sub
pop
or
cmp
lahf
int3
lcall
popf
bsr
xchg
mov
sarb
lret
lahf
repnz
fadd
adc
adc
fimuls
fwait
cmp
call
cmp
negb
mov
lret
mov
mov
lcall
das
adc
imul
pop
orb
xchg
fsubp
imul
out
out
fnsave
or
pop
das
or
push
mov
mov
rcr
int
xlat
sbb
push
sbb
cmp
pop
imul
or
cmp
int3
cli
fmul
in
stos
mov
mov
dec
insb
pop
jl
or
sbb
sub
cmp
int3
cli
fmul
in
stos
mov
mov
iret
or
xchg
xor
js
out
ja
or
mov
mov
mov
clc
xlat
cwtl
ja
mov
divb
add
in
stc
pextrw
jle
inc
cmc
mov
mov
mov
lcall
mov
push
dec
and
cmpl
rolb
mov
imul
mov
sub
fldl
dec
fsubl
cmpsb
ret
jp
and
lret
fdivr
sub
jno
sub
mov
mov
jecxz
test
mov
cmpsb
std
movsb
das
mov
jmp
pop
repnz
sbb
inc
std
enter
jg
cmp
push
mov
scas
inc
lods
aas
xchg
add
test
inc
and
outsb
xor
notb
or
inc
fwait
test
push
nop
inc
adc
rclb
xlat
mov
jno
fnstsw
icebp
movsl
and
roll
fcmovb
pop
test
pusha
dec
int
push
outsl
adc
repz
sbb
adc
xor
jb
aaa
push
outsl
mov
sbb
push
jnp
pop
rclb
jg
mov
jmp
out
das
xchg
xchg
xchg
negl
int3
repnz
sbb
or
sbbl
mov
add
cs
fistpl
in
aaa
out
popa
mov
adc
shrl
sub
sbb
sub
movsb
fisubs
adc
mov
adc
add
negl
cwtl
repz
test
or
mov
inc
sub
dec
push
std
pop
push
sub
ficoms
mov
mov
adc
in
insb
movsb
call
jl
push
hlt
cmp
clc
ss
adc
cmpsb
mov
insl
int3
aam
lret
mov
call
pop
cmp
fwait
xchg
lods
in
pop
add
scas
and
jmp
inc
adc
mov
loop
jl
jne
and
add
xor
gs
xlat
adc
loop
mov
xor
scas
xor
dec
int3
xlat
and
push
inc
lods
xchg
ret
ja
das
and
mov
cmp
ljmp
fdivp
jns
js
and
ret
inc
aas
out
xor
cmpl
adc
pop
mov
sbbb
xor
aam
fdivrp
sbb
cmp
movsb
push
mov
push
mov
mov
std
sub
push
call
and
movzwl
mov
lods
out
loope
aam
pop
cmpsl
lds
scas
mov
mov
push
mov
or
mov
ss
inc
add
mov
jge
mov
lret
push
lea
sub
or
add
js
xchg
mov
ret
cmpl
mov
in
mov
pop
inc
inc
inc
cwtl
enter
mov
inc
dec
and
xorb
lock
mov
xor
push
push
testl
mov
popf
xor
in
js
jno
jl
mov
enter
xor
xor
adc
mov
jp
fucomip
pop
and
fstpt
pop
mov
xor
hlt
jns
jl
adc
and
and
jge
mov
out
jmp
rorl
pop
push
je
shll
cmp
cwtl
xchg
int
std
jg
sub
nop
repz
pop
dec
neg
mov
out
xor
cmc
sub
add
xchg
xlat
push
push
js
loop
add
mov
dec
pusha
push
and
add
add
bound
pop
inc
clts
inc
jns
xor
bnd
inc
sbb
add
lret
dec
dec
insb
jmp
pushf
and
hlt
add
fiaddl
or
xor
and
fcompl
push
out
or
or
fsubrs
rcl
ljmp
frstor
and
lret
xchg
mov
ret
ja
outsb
cmp
adc
xchg
inc
div
mov
inc
mov
mov
sbb
cmp
sub
add
and
mov
mov
sbb
push
or
movsl
les
pop
testl
out
cmp
mov
or
jno
lret
enter
mov
out
inc
push
imul
nop
fcomi
mov
sbb
push
frstor
idiv
pop
lcall
ret
sub
aas
inc
add
xchg
add
in
and
imul
rolb
inc
push
pushf
and
sub
mov
int3
sbb
push
pusha
xchg
inc
fbstp
adc
pushf
sahf
pop
push
push
loop
mov
mov
push
jns
mov
push
jno
push
push
jae
mov
pop
cmpsl
out
fistl
jle
cld
cltd
into
push
add
dec
push
ret
mov
or
jae
hlt
jg
add
imul
cmc
or
mov
mov
lea
fisubl
gs
lcall
adc
dec
sub
push
sub
mov
das
loop
repz
cmp
cmpsl
in
dec
into
aaa
mov
mov
popf
into
arpl
dec
fbstp
sahf
mov
mov
inc
or
orb
repz
fiadds
gs
push
and
sar
xchg
add
aam
in
lea
push
jo
rcl
testl
mov
fwait
add
dec
inc
cltd
jo
std
xor
sub
pop
insb
aad
or
xor
jg
mov
or
jmp
ljmp
xchg
mov
dec
add
add
cmpsb
sub
inc
or
or
iret
rolb
arpl
imul
cmp
cmp
ljmp
inc
dec
cmc
xchg
adc
sub
xchg
xchg
mov
nop
ljmp
data16
sti
mov
outsl
push
xchg
sbb
add
mov
fbld
insb
sbb
xor
sub
jbe
out
pop
fwait
cs
lea
test
and
mov
sub
push
adc
addl
fisubrs
lahf
jg
dec
test
std
sbb
ret
arpl
lea
not
xor
outsl
mov
and
scas
mov
jg
xorl
in
stc
shrb
jne
aam
xchg
or
pop
es
push
adc
mov
rcll
and
shl
and
bound
mov
sub
pop
fwait
jne
cmp
in
mov
and
cmpsl
lods
adc
mov
inc
cmp
loopne
mov
and
and
int
push
dec
data16
push
jmp
popa
add
adc
lcall
pop
jo
arpl
fsubl
xor
mov
lret
movsl
mov
mov
int3
loopne
out
outsl
mov
jecxz
pop
out
test
scas
dec
out
and
fisubl
imulb
insl
in
pop
sub
je
test
xchg
pop
and
or
test
in
andl
or
add
imul
shlb
inc
daa
iret
or
add
mov
movsl
lock
pop
or
cmc
test
pop
insb
call
xchg
movsb
into
push
call
out
int
es
pop
ficoms
aas
loop
cmp
and
fs
movsl
das
jecxz
inc
rclb
faddp
mov
cli
insb
push
out
jns
pop
sub
rorb
jno
dec
gs
in
add
mov
inc
mov
cs
sbb
jae
popf
xchg
sub
mov
cwtl
or
xor
ror
lret
scas
push
cld
ss
roll
pop
popa
pop
mov
mov
scas
dec
mov
shrl
stos
sbb
sbb
push
mov
iret
add
sbb
inc
mov
sti
test
cwtl
cs
xchg
aaa
jp
push
mov
daa
and
lcall
or
pop
out
int3
imul
sarl
insl
loope
cltd
jbe
stos
cmp
cld
mov
mov
shlb
shrb
scas
cmp
cmc
pop
psubb
pop
mov
inc
mov
mov
cld
jbe
jmp
sbb
incb
xchg
cmp
jmp
push
cmpsl
sbb
pop
mov
sub
pop
aam
nopl
rcl
cmp
mov
aad
dec
adc
mov
pop
sbbl
sub
icebp
jmp
insl
pop
stc
std
cmp
aas
dec
mov
push
mov
cld
mov
xor
ds
jno
popf
xchg
outsb
sub
lret
mov
lret
and
arpl
mov
push
insl
scas
nop
adc
pop
shlb
mov
dec
aad
cmpl
loope
mov
or
sub
fwait
xor
fsubrs
xor
rol
mov
pop
xlat
cmpsl
adc
fnstenv
jb
push
xor
add
out
lahf
icebp
rcrl
mov
imul
xchg
inc
dec
daa
dec
mov
sub
pop
clc
sub
or
mov
pop
mov
lds
addr16
and
mov
stc
outsl
movsl
sbb
cmpsl
movsb
loope
fldcw
insb
jp
stc
push
pop
icebp
cwtl
cs
and
push
fstpt
adc
cmpsl
add
push
mov
sbb
pop
add
or
mov
mov
mov
dec
sbb
mov
add
pop
or
mov
add
rorl
lock
pushf
mov
popf
pusha
lods
out
mov
add
sbb
or
test
jg
push
nop
test
adc
dec
in
jbe,pn
scas
ljmp
mov
jecxz
or
fnstenv
arpl
mov
xor
lcall
mov
xchg
stos
jno
sbb
xor
mov
add
and
mov
cmp
jnp
ret
in
mov
clc
adc
mull
mov
mov
lret
fs
and
dec
sbb
test
xchg
test
sbb
cmp
icebp
aas
jns
sbb
stos
inc
xchg
ss
xchg
ret
xor
out
sbb
cmp
cmp
push
dec
adc
scas
insl
inc
ret
sbb
dec
push
push
cmp
je
jnp
outsl
fstpt
push
scas
mov
sbb
insl
mov
outsb
inc
push
into
push
push
mov
sti
call
xor
out
pop
mov
push
pushf
stos
or
je
and
mov
cltd
loopne
jno
fs
xor
rol
pmullw
mov
loop
cmpsb
dec
add
inc
lret
enter
add
pop
and
dec
cmp
xor
ficoms
mov
test
clc
fisubl
sub
insb
arpl
ss
push
insb
lods
mov
incl
mov
lock
orb
xchg
sbb
inc
aaa
es
iret
dec
pop
push
js
out
jge
jns
push
xchg
lcall
mov
sub
shlb
jne
cltd
out
adc
pop
mov
rorb
mov
imul
push
lahf
fisttpl
sbb
lret
addr16
out
mov
cmp
dec
test
jbe
sub
fistpl
jmp
mov
clc
enter
int3
fwait
or
aas
cmovl
ret
loopne
aaa
loope
sbb
ss
and
inc
lret
or
mov
jno
dec
pop
or
push
clc
leave
lds
dec
and
xchg
movsb
add
sub
out
pushf
adc
ret
jecxz
test
insb
iret
ljmp
or
adc
out
fnsave
add
cli
sub
sub
fwait
ss
sub
pusha
jbe
clc
clc
cmp
jp
out
mov
or
fsts
sarb
sbb
test
insl
push
lahf
in
dec
sbb
xor
jecxz
mov
and
jp
sub
test
hlt
jo
push
loope
sbb
dec
shlb
std
push
dec
push
lock
sub
xor
sarl
in
arpl
add
cmp
scas
cmp
mov
pop
adc
out
inc
mov
xor
jne
aad
jg
repnz
and
imul
adc
sub
mov
in
scas
xchg
int
mov
cmp
out
xor
mov
jne
ret
dec
jecxz
mov
mov
add
pop
push
xchg
and
add
popf
lcall
pusha
xchg
lret
or
cmp
arpl
push
mov
inc
sub
mov
cmp
pop
inc
sbb
aad
or
in
cmpsb
shll
cmp
hlt
out
sbb
mov
mov
aam
jecxz
lcall
mov
mov
scas
data16
add
jmp
sub
lods
ss
fwait
sbb
sarb
fcoms
les
and
cmp
dec
shll
jge
and
roll
ret
repnz
movsb
loopne
jnp
test
fndisi(8087
ja
leave
pop
pop
inc
mov
sbb
cmp
jl
popa
pushf
fs
push
add
jl
pushf
and
div
cmp
mov
ret
stos
sub
adc
adc
mov
push
sbb
fidivrl
cltd
dec
iret
out
add
add
adc
lods
mov
mov
xor
push
cs
mov
loop
xchg
mov
data16
cmp
xchg
fs
mov
clc
jl
mov
in
gs
ret
sti
addr16
and
pusha
push
add
loop
xchg
movsb
jne
mov
das
jno
ja
jno
rcl
into
push
rolb
sahf
pop
cmp
fldl
adc
jbe
movaps
je
jg
sti
dec
pop
jmp
dec
push
and
or
or
loope
mov
out
pop
push
mov
lahf
imul
lea
fidivrs
in
fcmove
es
push
mov
dec
sti
cmp
xchg
pop
shr
or
sub
push
jg
cwtl
test
mov
nop
fdiv
or
stos
xor
xor
lcall
sti
adc
sbb
shll
jnp
mov
aam
lahf
xor
jmp
mov
cmp
leave
push
clc
pop
cmp
add
jbe
lret
nop
daa
lock
add
or
cmp
add
fimull
add
adc
and
adc
adc
inc
outsl
pop
add
into
mov
push
fisttpll
clc
jge
and
jns
sarb
iret
lock
or
pop
je
sub
lods
xchg
fcomps
mov
andb
in
cltd
mov
cmpsl
xor
pop
xor
jnp
xchg
xor
cmp
pop
scas
xchg
sub
lahf
adc
cmc
out
cmpsb
sub
test
ffreep
bound
test
std
int3
jmp
inc
test
and
adc
mov
sub
xor
dec
pushf
dec
cltd
mov
int3
pushl
dec
scas
lods
fisttpll
mov
mov
dec
and
lds
enter
cmp
sbb
pop
outsl
add
xor
xor
out
cmp
mov
lock
add
and
lcall
push
mov
in
xchg
pusha
inc
mov
dec
lahf
sti
int3
dec
add
pop
or
pop
jnp
out
fisubl
sub
fs
aaa
lret
xor
and
lret
ss
sub
loopnew
repz
sahf
mov
jno
jnp
mov
scas
push
repz
push
imul
clc
movsl
in
xchg
mov
mov
cld
daa
loopne
mov
filds
sub
fsts
fdivl
dec
mov
mov
rcll
pop
adcb
idiv
popf
xor
mov
sbb
stos
sbb
lds
repnz
pop
es
outsb
adc
in
lea
in
frstor
mov
daa
fucomp
pop
cli
fistpl
je
into
cmc
push
mov
repnz
inc
or
xchg
fsts
scas
add
into
ficoml
jle
mov
stc
sahf
iret
or
mov
jae
or
ret
dec
jns
ficompl
dec
and
rolb
or
ss
sbb
cmp
fisubrl
sbb
dec
push
sahf
rcl
jmp
mov
lock
add
fsubrs
mov
gs
out
pop
fbstp
pusha
inc
js
xor
push
add
in
sarb
and
cmp
in
dec
outsl
or
scas
add
pusha
push
xor
scas
out
cs
mov
cmpsb
nop
fisttpll
repnz
out
mov
or
xchg
push
jbe
push
cmc
lahf
cs
mov
mov
int
sarl
and
add
leave
addb
xchg
xchg
shrb
cmp
xchg
std
ljmp
lds
mulb
adc
cld
repz
insl
and
mov
pop
adc
hlt
into
dec
push
xor
fcomi
jnp
js
inc
inc
das
sbb
add
xor
xor
pop
mov
stos
add
cmpsb
fsubp
test
adc
ret
xchg
mov
movsl
inc
mov
dec
gs
outsb
xchg
lea
mov
sbb
push
sub
xor
daa
sub
add
pop
rcrb
repz
pop
dec
mov
pop
ds
xchg
sbb
sbb
outsb
out
push
lret
jae
rcr
repz
sti
int3
xchg
divb
enter
jl
push
mov
sbb
adc
outsb
lret
mov
mov
pop
std
adc
mov
sub
into
mov
loope
outsb
es
incb
pop
mov
and
push
mov
inc
add
fwait
arpl
les
jg
or
and
enter
ret
sahf
rorb
cmp
mov
fbld
dec
outsl
nop
adc
es
or
jbe
dec
pop
xlat
xchg
mov
lahf
stos
push
mov
sub
nop
add
jg
mov
ljmp
insb
dec
jae
lret
sub
or
pop
les
out
sub
shrb
cltd
je
or
jg
adc
in
imul
das
sahf
xorl
movsb
es
mov
push
iret
or
mov
mov
lret
std
fisttpl
jbe
ss
inc
xor
ja
jl
pusha
xchg
adc
mov
sub
and
mov
mov
fwait
adc
popa
fcmovnbe
dec
add
add
gs
bound
push
lret
mov
pop
mov
imul
fsubl
icebp
mov
xchg
cmp
add
mov
adc
cmpl
cmpsl
adc
data16
xchg
ret
aas
mov
int3
fstpl
sbbl
imul
push
pop
repz
int
out
lea
add
cli
inc
cs
cmp
repnz
popa
pushf
lea
aaa
pop
outsb
mov
cmp
jb
dec
mov
jo
test
loopne
add
imul
lcall
les
xor
jle
fbld
mov
lahf
movb
repz
lcall
sub
fwait
dec
push
lcall
add
cmp
stos
mov
clc
sub
cld
stos
addr16
sub
iret
mov
xor
imul
shll
mov
or
popf
mov
es
xor
loop
enter
rorl
pop
cltd
rolb
outsb
hlt
pop
pop
cmp
adc
mov
mov
jae
stos
test
push
pop
insb
imul
fidivrl
pushf
mov
mov
imull
sbb
mov
mov
pushf
out
in
cmp
pop
pop
ja
stc
int3
add
out
jns
fsubrs
stos
lret
repz
dec
xor
sbb
lods
call
inc
icebp
adc
xchg
cmp
inc
xor
in
mov
push
pop
fisubrl
push
iret
jb
outsl
aas
mov
or
cmp
push
mov
fsubrl
decl
test
pop
push
push
mov
add
and
adc
sbb
scas
aam
jne
jecxz
popf
insl
fdivl
stos
jo
and
mov
jo
cmpsb
and
push
inc
xchg
sbbb
xchg
push
adc
sub
mov
sbb
add
js
jne
xchg
stos
pop
imul
inc
int3
sbb
or
stos
loop
std
mov
inc
ret
mov
push
shlb
dec
xacquire
leave
add
cmp
dec
popa
dec
cltd
leave
les
and
mov
xlat
push
sub
mov
lret
jns
cmp
jge
not
adc
loop
nop
test
shll
push
nop
jo
gs
iret
jecxz
sti
adc
mov
push
add
and
add
out
xor
jne
inc
push
aaa
sub
dec
ret
mov
fmuls
mov
mov
jo
out
push
jns
faddp
xor
and
sbb
mov
sub
std
adc
das
dec
lret
adc
cltd
pop
in
inc
cmpsb
movsl
push
xor
or
adc
and
das
cmp
aaa
les
jmp
pop
ja
xchg
movsb
inc
mov
pop
adc
pop
inc
call
fstps
int
xor
add
sub
sbb
sub
cmp
int3
cli
fmul
in
stos
mov
mov
dec
insb
pop
jl
or
sbb
sub
cmp
int3
cli
fmul
in
stos
mov
mov
dec
adc
jl
or
mov
sub
cmp
adc
fmul
in
stos
mov
mov
dec
insb
pop
jge
or
sbb
lods
sbb
xor
jbe
in
fimull
jne
gs
aam
xor
mov
shll
out
testb
cmp
sub
pop
ja
jns
imul
xchg
test
loop
shr
in
dec
xor
and
sbb
add
sub
inc
inc
adc
fs
or
leave
ret
aad
adc
sbb
add
dec
jo
and
es
test
out
std
mov
std
push
ljmp
push
mov
outsb
cmp
pop
or
out
jge
out
imul
int
faddp
in
ret
fdivrs
clc
ftst
bswap
ficompl
jb
push
mov
cltd
pop
xor
xor
adc
cld
cmpsb
add
test
mov
mov
fsub
ss
adc
dec
or
pop
ret
add
addr16
out
insb
lods
xchg
ds
je
inc
outsl
imul
adc
jne
repnz
stos
sbb
sub
sbb
sbb
mov
out
push
push
mov
adc
loope
icebp
jb
les
push
cmp
jns
stos
mov
fptan
loop
rclb
jmp
fwait
mov
adc
cmp
mov
or
int
inc
out
mov
mov
test
dec
push
imul
sub
loope
out
mov
test
xchg
mov
dec
push
pop
inc
inc
xor
cmp
sub
jmp
mov
out
pushf
mov
jmp
and
adc
add
dec
bound
imul
xchg
test
loop
shr
ret
or
cmp
sub
pop
jb
bound
imul
out
imulb
cmpsb
jmp
jnp
std
pop
jge
pop
push
xor
int
fcmovu
push
or
data16
sub
adc
dec
xor
fstpt
das
add
xor
cmp
sub
shr
xor
test
adc
cmp
or
pop
mov
lret
mov
sub
xor
cmp
xchg
or
movsb
imul
xor
jp
inc
xchg
jle
xor
sahf
add
jo
jns
icebp
rcll
dec
das
push
jae
stos
pop
stos
jg
jns
je
cmp
push
inc
and
js
pop
dec
pop
scas
mov
push
sbb
cwtl
pop
jp
stos
cmp
ret
jbe
arpl
jmp
jecxz
jae
adcl
mov
icebp
decb
mov
sub
aam
cmc
and
inc
fcmovnbe
inc
dec
and
jbe
jl
cmp
jp
shrl
loop
jo
inc
cmp
cmp
jne
add
addl
ret
jno
push
pop
jecxz
mov
sbb
pop
mov
lods
add
or
sub
inc
pop
cltd
repnz
in
dec
sub
loop
icebp
aaa
aam
leave
iret
fbstp
fsubrl
fwait
pop
in
and
notb
repnz
xchg
into
or
or
inc
dec
cltd
stc
xchg
in
xchg
fwait
mov
dec
jnp
or
adc
cmp
movsl
pusha
cmp
sub
jl
insl
inc
into
lret
pop
mov
sbb
add
testb
gs
sub
fs
gs
int3
mov
bound
jnp
pop
lods
adc
shlb
xor
adc
ret
jp
mov
dec
fucomi
sbb
flds
xchg
sbb
mov
and
cmp
mov
pop
or
fldcw
cmp
out
rclb
je
lods
loopne
inc
push
mov
lods
movsl
outsb
sub
leave
xchg
out
outsl
rorl
pushf
clc
lock
imul
adc
mov
lea
inc
int3
push
pop
push
push
fdivl
dec
or
lds
xchg
je
jmp
jmp
sub
inc
fwait
jbe
jno
lret
pop
test
faddp
sbb
std
jno
nop
dec
das
lahf
mov
mov
pop
jo
jecxz
sbb
movsb
push
sub
pop
lcall
pusha
fiaddl
push
jo
stos
les
dec
out
inc
mov
insl
test
jnp
jge
push
stos
cmpsb
outsl
mov
fildll
cmc
add
insl
arpl
sub
out
subl
add
jle
lods
xchg
ja
stos
cmp
cmp
xchg
sub
inc
xlat
push
dec
cltd
add
dec
xchg
adc
sti
into
sbb
mov
cmp
xchg
daa
insb
stos
aam
add
lods
xlat
or
mov
not
xor
mov
mov
test
fnstsw
adc
mov
in
mov
js
lods
xchg
sub
imul
shlb
and
cwtl
xchg
cs
ds
and
sub
mov
push
jl
pop
mov
pushf
outsl
test
jne
shll
imul
jle
pop
aad
aaa
push
cmpsl
test
fs
jp
roll
in
sbb
adc
leave
pop
pop
nop
pop
jge
push
sub
aam
movsl
lret
movsb
adc
daa
or
int
pop
loop
scas
and
pop
in
ret
out
push
inc
adc
pop
jmp
lret
rorb
xor
mov
sbb
mov
pop
imull
mov
adc
push
test
pop
sbb
jnp
rsqrtps
mov
imul
movsl
iret
mov
adc
mov
or
cwtl
loopne
mov
push
sbb
imul
fstl
mov
cmp
daa
xorb
push
cmp
add
scas
mov
rcl
in
push
mov
or
lcall
iret
push
push
scas
xor
outsb
scas
mov
ss
lods
fptan
inc
icebp
and
pop
rolb
aaa
push
pop
lret
cmpsb
aaa
or
rclb
stos
add
add
cmp
inc
inc
jge
push
lock
xchg
fs
jne
inc
stos
cmp
xor
lcall
cli
push
or
in
test
test
jnp
xor
cmp
pop
cmp
aaa
mov
fndisi(8087
sub
nop
in
jmp
cld
xchg
mov
mov
pop
fwait
push
adc
rorl
cmpsl
arpl
sub
or
xor
ss
sub
icebp
xchg
pop
lds
jns
pop
jo
mul
out
mov
inc
aaa
out
and
fildll
and
mov
push
in
ja
mov
dec
cltd
push
ljmp
lahf
xchg
imul
push
or
gs
xor
cmp
xor
adc
and
out
cltd
cltd
mov
mov
push
dec
out
mov
je
insb
scas
inc
cmp
data16
xchg
adc
dec
mov
xchg
sub
nop
loop
pop
lods
orl
lret
fwait
test
pop
cmpsl
xchg
and
add
sti
push
pop
xchg
aaa
mov
stc
xor
in
clc
xor
mov
mov
mov
push
adc
in
insb
das
flds
cmp
mov
dec
aas
push
out
push
pop
cmp
mov
je
fisttpll
push
enter
pushf
movsb
add
cli
fneni(8087
popa
lret
inc
rol
or
cmp
lock
movsb
jmp
stos
push
or
inc
shl
and
shll
mov
pop
sub
or
cmp
or
leave
push
push
add
fistps
repz
je
mov
and
sbb
test
adc
jbe
xor
pop
test
jmp
das
xlat
arpl
arpl
ljmp
add
fbstp
xchg
ss
sub
or
iret
in
dec
xor
sub
sub
mov
mov
stc
pop
mov
dec
and
xor
cwtl
mov
idivl
inc
aaa
jge
mov
into
add
cltd
jmp
repnz
sbb
bound
adc
sbb
in
xchg
jns
outsb
movups
and
mov
es
inc
orl
loop
popf
push
in
je
mov
icebp
jp
bound
subb
pushf
cld
mov
jns
inc
jecxz
pop
mov
sbb
sahf
xchg
push
shrl
imul
dec
andb
push
fs
mov
pop
xchg
and
adc
push
mov
sbb
pushf
sbb
cmp
xchg
add
mov
pop
sbb
imulb
adc
je
in
dec
adc
movsb
inc
lret
ficoml
jge
fsubr
mov
push
clc
xchg
and
jp
nop
mov
push
add
frstor
mov
test
add
add
mov
insl
and
rcl
cmc
inc
test
ror
shrl
xchg
inc
rorb
sar
pop
int
push
js
mov
mov
lcall
cli
movsl
leave
sub
jg
mov
push
add
fs
loop
pop
pop
jg
xor
mov
divl
mov
ds
push
gs
dec
insb
pop
mov
mov
stos
ror
addr16
sbb
mov
push
or
and
or
ret
jp
fucomi
jo
mov
insb
adcb
insb
mov
imul
add
stc
and
std
repnz
shll
sti
popf
inc
dec
and
inc
inc
cli
sbb
mov
dec
jno
and
rcr
sbb
xor
sbb
call
push
dec
test
outsb
loopne
xor
shrl
lea
clc
mov
mov
stos
jg
adc
inc
lds
pop
sbb
jg
sbb
jge
imul
pop
cli
or
fidivrl
mov
popf
mov
jo
or
lock
and
in
cmp
arpl
mov
ss
add
iret
xchg
push
movsl
push
mov
dec
js
dec
call
sub
loope
ljmp
cmp
rcll
cmp
ljmp
cli
orb
xchg
add
inc
shlb
xchg
cmp
int
mov
xor
leave
in
jge
push
xchg
fld
rclb
lds
dec
test
int
push
add
jle
iret
dec
mov
jb
rorb
cwtl
mov
push
and
ror
orl
ljmp
repnz
js
loope
cmpsl
inc
jae
pop
insl
push
les
je
pop
sbb
sub
mov
and
mov
jne
repz
test
pop
add
arpl
mov
fisubrs
mov
mov
notb
pop
or
pop
data16
mov
mov
mov
cmp
iret
outsl
mov
push
pop
push
ret
in
xor
mov
lock
jge
jl
xor
and
pop
mov
jae
movsb
mov
inc
sbb
dec
lahf
mov
jnp
fistl
mov
and
test
dec
push
in
loop
ret
rcr
fwait
or
div
lahf
pop
xchg
dec
mov
jle
test
inc
outsb
mov
cli
mov
xorb
ret
mov
or
lock
mov
les
jmp
cs
mov
gs
or
sbb
outsb
jo
sub
cmp
popw
inc
fwait
xchg
mov
fwait
or
cmp
or
sarl
lea
js
sti
cltd
aad
cmp
jo
scas
jle
mov
leave
mov
cltd
les
mov
repz
and
push
stos
dec
scas
in
push
push
inc
jmp
pop
mov
push
inc
push
jge
hlt
stos
jne
test
pusha
push
sub
push
outsl
enter
jmp
cmp
or
out
cmp
or
rclb
cmp
push
sbb
outsb
mov
push
xor
dec
inc
dec
and
or
or
cmp
sbb
adc
dec
mov
pop
int
in
ja
pushf
mov
scas
jmp
into
dec
icebp
lock
ss
mov
hlt
mov
mov
movsl
mov
xchg
add
cwtl
test
or
sbb
add
aaa
and
push
lds
xor
adc
or
fdivr
ret
orl
xorb
add
jl
aaa
cld
imul
in
insl
mov
pop
mov
outsb
mov
test
in
inc
mov
jnp
test
push
lret
lret
or
test
sbb
test
fcmovnu
xchg
dec
shll
sub
sub
ja
adc
repnz
ja
sar
add
movsb
push
outsl
mov
call
mov
add
repz
out
xchg
aad
mov
mulb
mov
inc
sarb
repz
push
and
int
movsb
pop
cmp
inc
sbb
xor
dec
xchg
jp
and
jnp
test
bound
lcall
sarb
aad
les
mov
jno
inc
cli
aad
mov
lods
fldenv
shrl
dec
pusha
jo
mov
mov
loopne
push
pusha
jg
cs
mov
mov
mov
ljmp
outsb
pop
mov
cmp
cmp
pop
jg
pop
es
dec
jb
cltd
je
inc
pop
xchg
mov
shlb
pop
pop
cmp
scas
jns
xchg
jb
lods
xchg
ds
daa
xchg
imulb
push
ja
sbb
mov
out
mov
inc
test
adc
pop
sbb
adc
pop
fdivrl
push
jae,pt
loopne
aad
cmp
loopne
pop
in
xor
or
dec
imull
shlb
popf
stos
push
dec
sahf
pop
lock
mov
fwait
add
cmp
out
cmpsb
push
clc
inc
fisubs
arpl
out
mov
adc
scas
push
out
jae
stc
subl
loop
lahf
faddl
test
cmpsb
and
ret
ja
cmp
shl
orl
push
cwtl
adc
mov
cmp
cmc
sbb
push
orl
inc
mov
lods
sti
and
enter
pop
outsl
mov
shrl
fcoms
sbb
loop
add
sbb
mov
negl
data16
and
push
add
mov
sub
push
mov
into
scas
std
pop
xlat
cmpsl
lods
push
or
push
into
sub
cmpsb
popa
push
clc
out
cld
mov
cmp
std
dec
cmp
push
lds
push
xchg
mov
cmp
shrl
imul
arpl
std
addr16
push
or
inc
mov
test
jl
scas
in
xor
mov
mov
xchg
clc
jae
dec
pop
sub
shlb
xor
xor
test
inc
pop
sub
mov
pop
or
sbb
push
fcoms
test
fnsave
adc
stc
in
pop
std
shl
cwtl
jbe
xlat
and
jae
mov
testl
mov
rolb
sub
fimull
and
iret
adc
mov
aam
sbb
push
aam
xor
ffreep
aam
daa
orl
outsl
jno
add
stc
insl
push
or
std
stos
je
jmp
pop
mov
mov
pop
iret
out
sbb
sbb
cmp
js
and
add
cwtl
movsl
fdivr
pop
add
dec
out
mov
inc
push
mov
dec
lret
sbbl
pop
aad
pop
xor
add
add
jmp
jp
adc
mov
and
bound
inc
dec
fists
jb
shr
push
andb
or
rcll
popa
lods
jmp
sahf
lcall
and
inc
xchg
cltd
adc
lock
stc
fwait
lahf
aaa
lcall
fiaddl
cli
mov
push
outsb
rcll
insb
loope
pop
cli
shr
jbe
fildl
jae
adc
mov
pushf
enter
mov
lods
adcb
jmp
sbb
enter
push
xor
fcmovu
cwtl
pop
loop
stos
jl
lret
nop
push
add
shrb
das
out
push
mov
adc
mov
ret
add
shlb
cmp
xchg
or
lds
aam
inc
rcrl
scas
dec
jo
xor
data16
into
push
insl
loop
int
insb
xor
xchg
bnd
xchg
loope
push
jbe
stos
dec
mov
fildll
xor
jne
outsb
jle
pushl
xchg
cld
xchg
call
es
popf
outsb
rcll
jns
pop
in
xchg
and
nop
and
loopw
shlb
adc
rcrl
outsl
in
call
push
jge
sti
loopne
out
rorl
fbld
lea
roll
test
ss
inc
pusha
aaa
fcmovbe
mov
or
fwait
inc
mov
add
repnz
and
ljmp
in
nop
push
cmp
outsb
ljmp
inc
nop
pop
mov
mov
xor
xor
js
ds
into
pop
dec
jle
nop
mov
and
jmp
or
jge
fdivr
out
mov
xchg
jge
xor
test
stc
lret
pop
jl
ja
jmp
cmp
imul
xor
icebp
pop
cmpsb
out
sbb
adc
xor
lods
dec
out
fs
or
dec
outsb
cmp
mov
movsl
jne
inc
cmp
sbb
lock
mov
cs
imul
clc
add
pop
adc
xlat
and
push
push
js
pusha
or
pusha
mov
dec
filds
push
adc
fsubl
or
stc
mov
mov
sbb
mov
sub
out
enter
sub
cltd
xchg
scas
mov
xchg
lret
lret
ficoml
mov
inc
test
scas
xorb
cli
adc
jmp
pushf
nop
cmp
adc
stos
jnp
imul
or
es
mov
andl
push
push
popf
jne
jmp
push
xchg
pop
sub
jbe
in
mov
mov
push
sub
and
jne
adc
sub
sahf
mov
insb
push
push
dec
lahf
push
inc
adc
ljmp
stc
es
loop
jo
jnp
pop
cmp
or
stc
sub
jle
xor
dec
cltd
das
ds
inc
cmpsb
pop
ret
jp
dec
mov
out
and
iret
push
inc
sub
jo
dec
adc
sbb
jb
iret
out
or
rcr
push
lret
cmp
jbe
rcll
mov
xlat
repnz
dec
xchg
sbb
push
rcrb
icebp
pop
sub
push
sub
arpl
icebp
cld
push
inc
fcoms
adc
sbb
mov
mov
inc
xchg
dec
push
imul
jbe
or
jne
incl
arpl
pop
nop
test
arpl
cld
and
repz
xchg
lds
test
jbe
dec
mov
outsl
loop
push
and
xchg
aas
cmc
push
mov
shrl
xor
lahf
xchg
inc
cltd
cli
out
jne
mov
int
dec
daa
mov
and
fdivs
ret
cmp
xchg
clc
sbb
adc
cltd
out
jbe
inc
and
xlat
xchg
imul
or
cld
dec
pop
adc
cmp
enter
pop
push
cli
into
loop
adc
adc
sarl
dec
mov
jmp
mov
hlt
cli
dec
je
inc
das
xchg
sub
inc
xor
mov
out
add
fwait
lods
lock
dec
shlb
fildl
jnp
xlat
sbb
std
aam
mov
jb
push
lret
mulb
push
inc
jecxz
xchg
inc
xor
stos
dec
lea
popf
inc
mov
jae
xor
push
movsb
fstl
sahf
ja
stos
ret
pop
add
inc
fs
gs
add
sarl
andb
and
ljmp
popf
outsl
cmpsl
push
data16
sub
inc
jl
add
jbe
shrb
lds
xor
test
mov
mov
pop
xchg
sbbl
sub
push
xchg
cmp
out
sti
test
les
jle
enter
jecxz
mov
or
add
insl
and
push
test
mov
cs
jbe
ss
lcall
dec
loope
stos
sbb
addr16
jne
fs
mov
out
fsubrl
inc
pop
jnp
test
adc
jnp
nop
cmp
mov
leave
lds
sub
pop
mov
pop
dec
sub
push
add
add
sub
in
ljmp
mov
rorb
cvttps2pi
into
js
les
sub
ja
outsb
pop
add
inc
xor
jmp
mov
lret
sbbb
bound
pop
cmp
cmp
xchg
lods
rcl
mov
xchg
xchg
or
hlt
mov
lret
sahf
stos
outsl
cld
or
sti
aad
cmp
xor
push
and
ret
out
test
pushf
enter
cmp
pop
and
aaa
test
rcrb
adcl
outsb
ror
add
bound
pop
push
in
push
mov
jg
sahf
insl
test
cmpsl
push
xchg
push
and
loope
lcall
dec
push
add
add
mov
cli
incl
aaa
fcmove
mov
add
out
daa
xor
mov
mov
adc
xchg
cmp
movsb
cmp
into
push
xchg
sti
pop
int
xor
sub
nop
cs
fucomi
mov
dec
sarb
mov
shrb
and
das
push
dec
jae
cmpb
jmp
pushf
pop
bound
addr16
fldenv
out
scas
enter
jnp
xchg
arpl
mov
loopne
mov
int3
or
insl
fwait
outsl
cs
jl
dec
lods
loop
nop
or
in
xchg
or
addr16
or
sbb
add
cmc
sub
cmpsb
insb
fcomp
shrb
adc
xor
cmp
dec
bnd
aas
int
out
mov
mov
or
xchg
pop
out
push
incb
outsl
pop
push
jp
push
jmp
call
mov
cmp
testb
sub
test
jmp
xor
imul
adc
jno
pop
js
push
mov
fdivrp
push
stos
in
xchg
arpl
inc
mov
out
sub
add
ror
cmp
sar
push
xchg
enter
out
aam
in
adc
adc
es
imul
jmp
stc
out
mov
stc
cli
cmp
jg
mov
into
test
mov
notb
sbb
aaa
movsl
mov
sub
fucomip
stos
mov
push
cmpsl
test
sbb
or
jb
ret
fadds
cs
dec
and
repz
jo
cmp
mov
jg
mov
mov
rorl
imull
test
mov
cmp
into
pop
data16
fptan
leave
loop
shr
ret
or
cmp
sub
pop
jb
bound
imul
xchg
test
loop
shr
ret
or
cmp
sub
pop
jb
bound
imul
mov
mov
call
xor
sub
bound
pop
cmpsb
adcl
ret
stc
push
imul
xchg
adc
jne
or
sbb
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
cltd
xchg
push
aam
mov
repz
loop
invd
add
add
add
add
addb
add
jne
jne
sub
jecxz
sahf
add
xchg
or
outsl
add
add
add
pop
add
outsl
add
add
add
jae
insb
add
add
add
add
add
add
add
xchg
jmp
jmp
add
or
add
add
add
add
add
add
add
add
add
add
add
or
add
add
xor
lods
add
add
popf
add
sub
mov
push
add
mov
add
movsl
add
add
int3
add
add
add
add
add
add
add
add
add
add
jnp
or
test
jno
xor
sbb
add
add
add
add
add
imul
push
add
jns
lods
add
add
add
add
add
add
add
add
add
jo
jbe
push
dec
add
add
add
add
inc
add
flds
push
add
add
add
add
add
push
add
dec
add
add
add
push
add
push
add
add
add
cmpsb
add
add
add
addb
add
roll
push
add
push
add
add
mov
pusha
add
flds
cmp
sbb
xor
je
mov
add
add
add
add
roll
push
add
mov
add
add
add
add
add
add
add
add
and
jno
sub
addl
add
add
add
outsl
add
enter
flds
push
add
add
in
add
add
add
add
add
inc
add
push
add
mov
or
push
add
add
add
roll
xor
pop
add
add
add
add
add
jo
mov
add
imul
jae
jno
rorl
pop
add
mov
jae
and
cmp
add
add
add
flds
push
add
adc
add
add
add
add
add
add
add
inc
add
dec
add
add
mov
push
add
jecxz
push
add
push
add
sahf
add
add
add
add
add
add
add
add
add
add
add
add
add
add
lret
add
add
add
add
add
addl
sub
test
mov
lret
add
add
add
add
imul
add
add
add
pop
add
jo
push
add
add
lds
add
add
push
add
sti
add
inc
add
add
add
add
add
rolb
dec
add
add
add
in
add
aas
add
add
add
add
rorl
sti
add
and
sub
gs
add
arpl
data16
add
push
add
sbb
outsl
add
add
add
add
fiaddl
popl
sub
test
lock
add
movsl
add
add
add
sbb
add
add
add
sbb
xchg
mov
out
ret
add
stos
adc
or
add
and
sbb
add
mov
mov
pop
orl
ljmp
jne
sub
int
fdivl
movsl
dec
leave
pop
repz
mov
ret
sub
das
fwait
cmpb
push
xchg
cli
lmsw
lds
and
mov
incb
test
inc
adc
js
sbb
testb
lds
je
mov
arpl
push
pop
fisttps
sub
cwtl
lcall
ret
xchg
test
mov
ror
enter
js
leave
jne
lcall
mov
mov
push
push
daa
jmp
stc
sahf
or
push
shr
mov
xor
shlb
jecxz
cmp
fistl
xchg
xorb
out
jnp
xor
xchg
xlat
add
xchg
icebp
or
sub
sbb
xor
inc
sub
inc
cmpl
scas
and
mov
mov
icebp
popa
mov
call
cmp
ret
jo
ret
imul
and
jae
sahf
xchg
and
cld
mov
test
daa
xor
std
stc
xchg
orl
ret
scas
pop
in
out
push
mov
cmc
sub
mov
xchg
jne
push
cmpsb
sub
inc
mov
insb
imul
mov
out
mov
ljmp
adcb
dec
ja
cmp
add
push
out
cmp
lahf
shrb
dec
sarb
sbb
fcompl
sub
bswap
pusha
inc
in
xlat
stos
pop
or
ds
cltd
lds
xor
jb
das
in
sahf
mov
pop
jl
call
fldt
and
sbb
stos
push
mov
testl
mov
es
dec
aad
fimull
mov
es
sub
std
xchg
ja
stc
mov
or
movsl
movsl
sbbl
adc
aad
xchg
xor
jecxz
out
pop
popa
outsl
clc
mov
jo
jb
in
lahf
insl
mov
fidivl
orb
loop
jno
sahf
popf
popa
push
leave
adc
hlt
jl
sbb
add
inc
sbb
fdivrl
test
jne
daa
xor
rsqrtps
cmp
cmp
mov
cmp
push
inc
das
lcall
jns
mov
fistpl
sub
bound
jae
clc
jae
mov
adc
jl
outsb
xchg
push
xor
iret
dec
pop
test
push
jmp
dec
and
fistpll
sbbl
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
