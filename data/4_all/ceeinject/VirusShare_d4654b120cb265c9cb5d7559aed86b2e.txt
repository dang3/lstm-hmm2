mov
call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
imul
gs
xor
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
push
push
push
push
call
push
lea
push
push
call
add
leave
ret
insl
sbb
int
pop
js
sub
pop
jmp
sbbb
cmp
sub
or
sbb
or
cmp
sub
jns
inc
jge
insl
mov
dec
test
sbb
mov
int
mov
jae
pop
jge
insl
stos
cmp
sub
pop
mov
mov
lea
dec
xchg
push
dec
ss
lea
cld
adc
push
sti
sbb
xor
mov
mov
test
mov
mov
xchg
xchg
or
jne
inc
sar
int3
rclb
js
in
push
shlb
fnstcw
mov
xor
cmp
push
subl
xor
cmp
in
or
cmp
cmpl
sbb
imul
inc
or
iret
adc
mov
fcom
push
push
dec
popf
mov
sbb
or
mov
fcompl
out
notb
dec
stc
pop
push
gs
or
fldcw
outsl
rol
mov
mov
in
sub
dec
int
mov
jns
sti
jge
insl
and
dec
xchg
cmp
loope
fisttpl
push
addl
enter
call
stc
xor
lret
popa
cmpsb
jo
jns
mov
dec
test
or
sbb
clc
add
and
xchg
pop
leave
dec
pushf
adc
mov
adc
lea
cltd
insl
mov
dec
test
sbb
sbb
or
cmp
sub
jns
imul
dec
test
sbb
sbb
pop
push
inc
lahf
into
cmpsb
inc
out
sarb
push
xor
fisubrs
adc
add
mov
clc
fwait
xlat
nop
scas
push
test
mov
ret
cmp
and
loopne
mov
insl
cmpsb
test
pusha
outsl
mov
hlt
push
lcall
clc
pop
pop
pop
and
jp
mov
insb
or
fwait
mov
ja
and
daa
out
adc
into
repnz
shll
fnstenv
or
adc
mov
imul
sub
repz
loope
sarl
dec
jl
sub
pop
xchg
mov
daa
popf
cmpsl
outsb
jno
lods
dec
mov
push
insb
push
leave
enter
add
mov
loopne
test
and
imul
ret
dec
pushf
sti
cmp
mov
out
mov
sbb
mov
mov
xor
dec
lds
clc
es
sbb
and
popf
pop
push
fsubr
ja
pop
repnz
test
out
jo
sbb
fnstenv
xor
adc
xchg
cli
xor
push
shlb
sub
mov
mov
idivb
push
daa
out
or
pop
outsb
test
jb
mov
push
mov
mov
sub
outsb
push
ds
es
outsl
jge
cmp
cmp
mov
mov
push
xchg
fistps
fistpll
data16
fstpl
subl
hlt
push
jecxz
or
arpl
mov
ret
pusha
mov
xchg
pop
arpl
push
mov
arpl
in
cld
pop
and
dec
or
aam
adc
loopne
jmp
dec
mov
push
jno
pushf
clc
inc
jge
adc
sub
hlt
jnp
cmp
xor
mov
mov
push
into
mov
sbb
pop
test
sbb
hlt
dec
ret
xor
mov
adc
cwtl
les
data16
cmovl
repz
cltd
cmpsb
xorl
in
scas
adc
and
stos
push
adc
sub
test
lea
test
xlat
popf
and
inc
sub
movsb
icebp
sbb
jae
adcl
test
and
jo
mov
fs
mov
aas
sbb
mov
lcall
cmc
test
push
push
shl
rcl
cmp
jecxz
lahf
test
mov
cmpsl
cmp
adc
dec
or
pop
adc
je
jae
insb
in
dec
xor
or
cld
lea
test
out
adc
insb
std
pusha
jl
sbb
rclb
das
fcmovbe
jle
dec
outsl
xor
pop
cmpsl
jmp
fld
insb
dec
fcompl
xor
and
cmp
mov
aas
add
adc
push
pop
xor
sbb
ror
cmp
adc
pop
test
add
xor
cmpsb
adc
aam
jg
out
jecxz
dec
loopne
push
pop
mov
test
dec
mov
cmp
nop
mov
adc
rorl
sub
bound
and
mov
lea
push
fsubs
jne
lock
loope
xor
push
sbb
gs
int
jae
daa
jno
sub
addr16
push
adc
jo
in
subl
leave
ret
lock
dec
daa
test
sub
test
pop
aad
xorl
in
shl
nop
les
fadd
fisubl
test
mov
jl
sar
movsb
stos
adcl
repz
icebp
into
push
pop
pop
xchg
scas
popa
lcall
jle
sub
adc
inc
call
jg
popf
cmpsb
leave
aaa
push
sbb
push
shrb
push
dec
clc
xchg
jns
sub
lret
in
mov
das
pmaddwd
sbb
push
add
in
lahf
inc
push
jb
lods
out
jg
jnp
cltd
mov
pushf
jle
inc
mov
pop
xor
mov
mov
lret
es
jl
xchg
lds
sub
lret
inc
jno
inc
sahf
xchg
aam
add
fistps
push
lods
aam
mov
mov
jecxz
pop
icebp
cmp
das
out
cmc
test
pop
push
test
mov
repnz
fcoml
or
pushf
aas
mov
mov
sub
cld
inc
mov
adc
mov
xchg
mov
add
xor
mov
lret
xchg
and
xchg
cmp
dec
jb
xchg
data16
xchg
pop
daa
dec
add
xor
ds
mov
pop
mov
add
push
sahf
mov
roll
adc
aad
mov
loop
adc
and
fstpl
mov
in
mov
fxch
xchg
pop
imul
aaa
addr16
xchg
adc
sarl
pushf
cli
mov
mov
nop
incb
xor
xchg
and
cwtl
sub
dec
fbld
in
jno
inc
add
mov
add
ds
ret
into
gs
int3
mov
add
inc
cltd
loop
add
cmc
adcl
nop
or
and
std
and
add
jo
and
pop
std
mov
dec
enter
sub
cs
lea
sbb
lret
sub
dec
and
pop
mov
stos
ret
and
shl
out
lret
shl
xchg
jbe
cmp
jns
jl
in
add
mov
sbb
insl
shrl
stos
fwait
pop
push
or
call
jge
xchg
inc
pop
in
mov
in
insl
outsl
push
jns
stos
sbb
int
pop
stos
mov
int3
mov
mov
mov
inc
lret
push
shrl
xchg
jl
xorl
cmc
push
sbb
repz
gs
sahf
insb
les
call
mov
push
pop
jmp
jle
ret
bound
add
int
add
jne
inc
jecxz
andl
add
pop
cmpl
stos
or
mov
sbb
test
sbb
nop
or
mov
mov
xchg
jmp
sbb
and
clc
jns
shrl
mov
popf
adc
fs
pop
pop
fs
or
stos
ljmp
daa
or
and
adc
or
and
push
aas
jle
stc
or
rorl
test
xchg
outsb
aas
cmp
and
pusha
add
mov
stos
cltd
jnp
in
or
ret
incb
ret
cmpsl
mov
mov
or
and
es
cwtl
test
sbb
push
mov
jge
int
mov
fisubl
add
insb
mov
lock
mov
nop
cmp
and
push
fwait
dec
lcall
add
push
push
ret
into
int3
fwait
mov
mov
mov
cmc
push
add
push
fs
xchg
mov
jle
xor
repnz
pop
and
test
call
push
pop
mov
pop
jp
int
iret
mov
dec
mov
jo
pop
aas
push
es
cmpsl
iret
daa
pop
test
movb
and
jae
data16
popa
outsl
leave
cmp
dec
stos
mov
mov
insl
pop
lea
addr16
and
stos
ret
mov
and
loop
scas
testl
lar
add
push
fisubs
dec
push
adc
dec
pop
hlt
pusha
cmpsl
gs
in
add
out
push
mov
mov
stos
hlt
pop
pop
test
inc
push
sub
mov
jnp
loope
xchg
in
jnp
xchg
add
jae
add
inc
loope
rorl
inc
sbb
or
adc
and
hlt
push
mov
or
adc
add
in
lret
insl
scas
ret
sbb
pop
sbb
out
setb
adc
stos
enter
std
jb
xchg
sbbb
aaa
iret
mov
fnstenv
pop
out
mov
push
addr16
test
jp
ret
sbb
dec
nop
add
lret
adc
xor
and
pop
mov
mov
mov
dec
push
ss
or
repnz
mov
fsubl
pop
insb
scas
outsl
lcall
inc
mov
sbb
sub
push
insb
inc
cmp
test
mov
cmpsb
arpl
aas
xorl
adcl
out
movsl
pop
aaa
jg
mov
jl
and
cltd
arpl
aas
les
xor
fld1
lds
je
cmpsl
push
jae
scas
cmp
pop
bound
fstpt
mov
outsl
push
cmc
lock
shrb
dec
outsb
add
cltd
xor
gs
jmp
lret
push
sti
outsl
fsts
cwtl
or
clc
mov
call
hlt
xchg
adc
ret
add
xor
pop
call
dec
jp
stos
or
ret
cmp
xchg
dec
testb
rcrl
clc
lahf
or
add
sbb
sbb
adc
mov
add
mov
or
ret
push
or
cli
and
push
push
mov
repz
sbb
sbb
cld
ljmp
xorb
jnp
xchg
fiadds
push
dec
aaa
xchg
ret
mov
mov
dec
jp
inc
jp
fdivs
mov
xor
cmp
pop
into
gs
aam
mov
or
adc
push
cs
adc
add
enter
pop
out
cld
adc
std
adc
aas
cmp
sbb
add
in
and
clc
mov
out
cmp
shlb
mov
pop
inc
add
dec
mov
pop
add
or
xchg
mov
and
in
push
cmp
repz
ss
pop
push
and
push
ret
sarb
push
pop
sbb
xchg
mov
icebp
sub
pop
inc
inc
outsl
loope
mov
stc
dec
adcb
mov
pop
or
xchg
out
idivl
push
mov
leave
loope
mov
cmp
lahf
push
bswap
push
fstps
fnsave
imul
leave
mov
and
fcompl
push
jp
inc
hlt
ljmp
gs
mul
mov
fisubs
inc
inc
jg
mov
cmp
adc
dec
pop
jbe
pop
mov
popf
dec
inc
imul
xchg
lcall
inc
pushf
mov
test
mov
ffree
or
loope
daa
mov
in
mov
test
stos
xchg
minps
mov
shrb
mov
nop
std
setb
adc
insb
ljmp
xchg
cmp
cli
mov
int3
out
cmp
test
jp
mov
add
cmpsl
and
jl
jmp
sub
cmp
movsb
jno
shlb
inc
testb
xchg
cmpl
gs
in
xchg
dec
jmp
adc
mov
xchg
mov
mov
fwait
push
fcomps
psrld
jae
pop
addl
mov
sub
lock
jmp
scas
jno
ss
pop
lods
dec
les
mov
ja
mov
clc
aas
jne
aas
adc
rclb
out
lock
mov
sub
jle
into
ret
xcrypt-ctr
cmpsl
pop
dec
daa
mov
jbe
pop
or
cwtl
dec
fcompl
push
push
insl
cltd
mov
xchg
rol
cld
stc
outsb
test
rolb
popf
xchg
jno
lods
xor
in
aad
add
adc
cmp
ljmp
lret
jbe
xchg
cmp
nop
mov
shlb
sahf
test
cwtl
dec
stos
dec
cmp
lea
mov
xchg
xchg
cmp
jp
call
xchg
iret
stc
sub
ja
xlat
pop
inc
push
mov
sub
and
pop
or
lahf
add
mov
fnsave
jns
cmp
adc
dec
jmp
dec
push
or
fildl
xor
dec
push
dec
mulb
jo
je
nop
leave
cs
cwtl
fnsave
jl
or
out
inc
push
or
outsb
push
in
sub
lcall
xor
inc
fidivrs
xchg
sbb
push
arpl
push
ljmp
dec
sbb
les
adc
mov
push
das
ljmp
loop
mov
idivl
aas
movsb
push
out
ss
cld
mov
cld
adc
test
insb
call
lret
xchg
cmp
mov
mull
cmpsl
fists
adc
mov
stos
jl
sbb
mov
sti
mov
add
xchg
jnp
push
repz
jmp
dec
cmc
jns
pop
jns
mov
call
dec
out
je
add
cmp
popf
ret
sti
pop
mov
jae
xchg
js
int
sub
jb
shlb
and
adc
enter
mov
cli
cli
adc
jl
jle
and
push
mov
xor
lret
push
pop
adc
cmc
dec
dec
incl
out
inc
mov
stos
int
jl
dec
mov
jne
scas
test
add
das
sub
or
push
hlt
in
movsl
add
lods
test
enter
stc
test
dec
in
lret
cmpsl
push
and
out
sbb
xor
push
dec
sub
cli
mov
sbb
inc
pop
js
in
repnz
sub
adc
push
insl
add
inc
das
xchg
cmp
adc
addr16
ljmp
cmp
movsb
inc
push
sti
inc
dec
mov
mov
sahf
push
jg
and
cltd
lds
pusha
aam
ja
add
mov
ds
les
mov
pushf
dec
cmpsl
and
shlb
pop
or
sbb
pop
fdivp
jb
xor
je
cmc
dec
icebp
iret
mov
fcmovnu
dec
xor
js
int
mov
test
cs
mov
dec
and
testb
cmc
ret
or
loope
sti
psrlq
shrb
daa
mov
jae
push
nop
and
cmp
pop
pop
lock
ss
push
das
push
adc
pop
add
xchg
inc
nop
ja
xor
jg
addr16
loope
fidivs
push
add
pop
orl
sbb
inc
and
test
mov
xlat
inc
add
cmp
inc
push
loop
cmc
and
clc
cmpsb
test
adc
hlt
mov
adc
gs
movsb
stos
cmp
push
bound
pop
scas
dec
mov
mov
lahf
xchg
int
aas
insl
sahf
ss
stos
aaa
repz
popa
mov
shlb
outsb
stc
loope
or
dec
xor
inc
rorb
scas
das
aad
loope
pop
xor
sub
outsl
jne
daa
xchg
inc
arpl
mov
mov
mov
rolb
or
and
jo
imul
inc
sarl
xor
cmp
mov
push
aam
mov
pop
xchg
sbb
cmpl
and
insl
cld
inc
adc
and
nop
mov
and
aad
inc
lret
jl
aaa
lret
xchg
es
jle
sbb
out
int3
pop
rorb
fdiv
out
cmp
push
aam
out
inc
push
lret
out
ret
decl
adc
push
iret
mov
rorl
cmpl
or
sbb
or
and
push
mov
lret
call
cmpsl
push
push
xchg
adc
in
gs
cmp
cmc
dec
pushf
cmp
sbb
dec
inc
pop
gs
sub
xchg
sub
mov
imul
fwait
ret
dec
jne
sub
mov
fs
push
xor
cmc
push
arpl
cmp
jl
push
adc
imul
pop
jl
clc
test
pop
out
xchg
and
lcall
dec
cmpsb
pop
lods
movb
dec
mov
rolb
pop
stos
ss
rclb
mov
xor
xchg
push
sbb
push
or
out
inc
jmp
lret
lds
jo
sbb
in
mov
xchg
out
mov
mov
sbb
sbb
xchg
lods
loop
insl
pusha
pop
mov
aad
xlat
ror
cs
cs
mov
push
sbb
iret
mov
repnz
pop
pop
push
jnp
mov
loope
mov
lret
pop
lahf
xor
inc
scas
arpl
xlat
repz
adc
lret
or
xchg
sbb
or
fnstsw
and
cwtl
xor
sahf
lahf
cmp
test
sub
mov
in
and
jmp
add
jmp
dec
cwtl
ja
jp
testl
mov
pop
loopne
jns
mov
out
sbb
cwtl
cmp
mov
xor
fmull
repnz
fcomi
in
jbe
pop
inc
or
mov
mov
es
popa
lret
jg
jge
xchg
jmp
pop
rorb
pop
or
sarl
je
fsubrl
into
enter
pop
nop
mov
mov
ret
jmp
insl
inc
imul
fwait
push
push
xchg
mov
ds
and
or
dec
jmp
jp
imul
cmp
rorb
jne
mov
mov
cs
out
punpckhbw
cmp
in
outsl
aas
mov
data16
dec
les
fs
shrl
push
ljmp
inc
js
enter
mov
push
mov
inc
cltd
inc
mov
mov
inc
push
adc
xchg
dec
pop
mov
lods
pop
int3
xchg
add
jmp
lahf
push
gs
or
mov
addb
into
aad
loopne
adc
cli
dec
sbb
sub
push
dec
std
cmp
mov
dec
xchg
repz
push
lahf
aas
call
dec
iret
jmp
jmp
pop
lahf
or
iret
cmp
adc
sub
je
sbb
pop
rol
loop
sbb
fldcw
lea
movsb
cmc
adc
cli
sbb
push
sahf
lret
adc
cmp
lock
ja
or
xor
xchg
shll
and
push
xchg
adc
inc
popl
arpl
push
hlt
push
jecxz
xchg
loopne
not
xor
ret
jb
mov
mov
jge,pt
push
out
popa
lret
dec
mov
enter
pop
sub
sub
jp
pop
sbbl
mov
test
mov
in
cmpsb
andps
and
mov
jb
fwait
cli
mov
pop
popa
in
mov
pop
dec
xchg
test
popl
cwtl
or
add
test
fisubrl
int
push
mov
stos
in
movsl
sbb
push
cmp
mov
popf
repz
xor
fdivrl
or
mov
aaa
lea
fnstcw
xchg
cmp
call
out
push
cld
cmpsb
mov
inc
jl
dec
sub
leave
sub
jg
cmp
enter
xlat
push
inc
outsw
movsl
dec
add
add
test
nop
aam
xor
adc
popf
xchg
push
or
fs
gs
mov
and
lahf
js
xor
ja
out
ds
cmpsb
xchg
lock
jb
ffreep
adc
notb
repz
pop
ret
fwait
daa
or
add
sbb
or
xor
xor
pop
lahf
fisubrl
aam
pop
mov
and
push
ret
sti
jg
xchg
push
jp
ffreep
and
fs
push
adc
pop
into
aaa
push
xchg
in
xor
cs
sub
add
aad
adc
cltd
movl
gs
fld
mov
sti
sub
inc
shrl
aad
mov
mov
loop
cmpl
jb
aad
xchg
daa
daa
ss
stos
add
push
daa
cmp
and
sahf
jns
pop
aaa
adc
ss
mov
inc
ds
mov
rcll
outsb
cli
push
lds
adc
pop
inc
test
pop
outsl
cmp
push
jge
mov
xchg
decl
ds
rcrl
testl
scas
inc
clc
inc
cli
inc
dec
lret
mov
ret
in
aas
inc
jl
cmp
in
sub
add
push
mov
dec
mov
cwtl
ret
inc
inc
notb
pop
dec
aad
les
out
sti
fidivrs
push
pop
pop
mov
mov
sti
xor
lds
dec
dec
pop
and
inc
jnp
xchg
mov
xor
arpl
mov
lret
inc
inc
fidivrs
and
add
adc
ficoml
or
imul
jne
insl
sbb
xor
into
pop
clc
fs
inc
pop
xchg
adc
inc
sub
mov
fisubl
inc
lea
mov
fisubrs
les
leave
ja
mov
sub
loopne
ja
mov
out
mov
sub
addr16
lret
in
mov
mov
inc
xchg
insb
imul
jge
lods
repz
cmpsb
stos
rcl
nop
mov
mov
cmp
pop
stos
xchg
loopne
insl
xchg
add
add
test
por
mov
insl
leave
sub
jmp
inc
adc
xchg
pusha
xchg
sbb
pop
pop
loop
out
and
sahf
icebp
scas
popa
and
jecxz
popa
popf
xchg
in
shrl
inc
aam
dec
or
lock
add
adc
loop
lahf
or
int
mov
jns
imul
dec
test
sbb
sbb
or
cmp
sub
jns
imul
dec
test
sbb
sbb
int
mov
jge
imul
dec
mov
sbb
std
in
in
int
mov
stc
lea
idivl
movsl
mov
xor
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
inc
fsts
arpl
jae
add
popa
out
ljmp
jecxz
repz
fsts
psubw
add
xor
cmpb
ret
sbb
sub
fldenv
jmp
cmp
addr16
call
pop
out
sub
popf
sbb
stc
mov
loopne
mov
push
xchg
shll
shrl
push
sub
mov
mov
data16
push
mov
int3
push
pop
push
push
gs
into
push
add
mov
shll
xchg
sbb
cmp
cmp
xchg
lahf
std
cld
cwtl
adc
ret
pop
xchg
xchg
jl
xchg
pop
mov
inc
pop
xor
lcall
mov
dec
jecxz
mov
rcll
jns
pop
into
xor
lea
jb
sub
cmpsb
xlat
pop
push
pop
imul
sub
sub
flds
jmp
and
dec
dec
xchg
jns
imul
cmp
sbb
mov
jge
push
fdivl
fld
xor
xchg
pop
icebp
je
jo
mov
adcl
adc
test
andl
lret
inc
das
mov
mov
push
cmc
adc
ret
pop
rorl
jns
imul
fsts
arpl
jae
add
xor
jecxz
repz
fprem1
fsubl
pop
sti
lahf
dec
out
xchg
xlat
stos
inc
and
push
aaa
ja
jp
adc
popa
cmp
ja
inc
shll
pop
jb
aam
sbb
dec
jecxz
out
xchg
cld
jae
and
cs
push
das
aam
adc
push
push
imul
stos
aad
dec
sti
ljmp
inc
push
mov
jo
mov
push
add
jle
xchg
ror
mov
or
jae
cltd
cmpsb
cmp
jbe
test
stos
and
push
mov
mov
cli
outsl
outsl
in
test
ret
inc
xchg
inc
sub
mov
pop
mov
leave
lret
dec
loope
jno
imul
jg
pusha
xchg
andb
dec
jecxz
shll
popa
ljmp
mov
inc
mov
call
lock
mov
int
inc
lret
sub
shr
sbb
cmpsb
sbbb
mov
sbb
fs
cmc
jne
jecxz
add
enter
mov
pop
xor
xor
test
shll
inc
lret
dec
xchg
bound
and
ret
outsl
daa
out
push
add
jne
outsl
mov
imul
cmp
push
or
xor
lods
xorb
int
ljmp
ss
and
nop
es
popf
js
sbb
add
loope
pop
pop
sarl
push
jl
fcomip
push
sbb
imul
nopl
mov
push
sbb
clc
fnstenv
imull
push
jecxz
pusha
cli
xchg
shll
mov
xchg
xchg
les
insb
push
push
sub
push
pop
ret
push
insb
scas
std
and
inc
pop
push
jle
push
cmpsl
ret
mov
inc
femms
push
int3
std
ss
call
shrb
push
inc
or
sarl
fdivs
pop
ja
cs
shlb
lds
lret
and
mov
dec
cmpsb
sbb
gs
mov
lahf
or
and
pusha
mov
int3
pop
add
shlb
dec
mov
mov
test
mov
xchg
xchg
push
gs
pop
gs
pmuludq
jmp
ret
pop
xchg
and
lahf
fwait
lock
jnp
in
int3
test
inc
popa
or
push
add
cmp
movl
shlb
xor
pop
or
outsb
or
aam
mov
cli
hlt
aaa
cmp
or
into
hlt
js
scas
jmp
cltd
xor
xor
ljmp
cli
out
xor
outsb
ljmp
mov
lret
xchg
roll
mov
mov
out
jp
dec
xor
filds
hlt
inc
pop
pop
ljmp
insb
add
movsl
int3
lds
jge
xchg
jle
movsl
xor
movsl
cmp
mov
push
arpl
xor
mov
hlt
out
xlat
cmpsb
out
or
mov
push
rorl
lea
xchg
adc
xor
sbbl
xor
jmp
roll
pop
sahf
xor
andb
ret
pop
and
adc
dec
sub
sub
cmc
cmpl
pop
xsha1
cmpsb
push
cwtl
rorl
ret
add
lods
ficompl
xor
nop
sbb
sbb
lods
nop
mov
cltd
sbb
test
mov
sbbl
cs
add
popa
sti
cmc
xor
and
xchg
push
inc
test
sub
xor
add
cmp
idivl
mov
scas
cmp
shll
cwtl
sbb
cld
icebp
jp
les
xchg
dec
push
aas
aam
test
les
in
xor
mov
add
push
iret
xlat
jp
sub
test
jns
cmpl
and
add
pusha
mov
xor
pop
push
jecxz
mov
nop
cmpb
push
popf
mov
lret
icebp
aaa
leave
out
inc
inc
sbb
out
fnstenv
cmpsl
lahf
dec
inc
xor
jg
sbbl
cmp
jns
addl
js
stos
mov
aam
mov
out
mov
sub
push
bound
push
and
fldt
out
pop
fisubrs
inc
or
mov
pop
adc
call
adcb
arpl
enter
ret
adc
dec
pop
mov
into
pop
inc
lret
dec
hlt
cmc
adc
mov
or
cmpsb
add
push
mov
out
aaa
and
push
xorl
loopne
jnp
fucomp
and
gs
sahf
int
std
xchg
xor
sub
call
dec
paddd
insb
adc
pop
clc
jle
lcall
mov
pop
sti
lret
mov
jae
imul
sbb
mov
xor
push
pop
push
xchg
scas
out
les
inc
clc
lahf
adc
in
push
and
adc
xchg
push
push
dec
sbb
and
or
loopne
adc
mov
add
nop
test
dec
into
inc
or
daa
mov
das
xchg
push
cmp
scas
iret
add
push
push
jp
or
mov
in
adc
mov
shll
fisubrl
push
xchg
pop
cmpl
loopne
nop
inc
cld
xchg
push
push
sub
shll
imul
xor
mov
cmp
cwtl
inc
mov
mov
fsub
rorb
or
pop
xchg
and
mov
dec
jle
mov
pop
je
adc
sbb
dec
push
push
ja
sub
scas
scas
mov
pop
adc
nop
sub
add
notl
inc
sbb
mov
pop
pop
frstor
cmp
dec
pop
loope
xchg
lea
lock
pop
adc
xchg
and
out
out
insl
sarl
in
or
sbb
dec
mov
pop
hlt
xchg
fmull
cmp
stc
mov
imulb
mov
mov
jbe
int
inc
mov
popa
ret
cli
inc
mov
fisubl
adc
ljmp
movsl
ja
aaa
loopne
fldpi
popa
mov
jp
inc
je
and
mov
add
mov
push
jg
xchg
mov
mov
andl
sarb
xchg
das
jecxz
mov
roll
stc
or
addr16
in
or
ret
push
xchg
insl
cmc
aad
push
jp
cld
mov
or
roll
pop
cmpb
rcl
pop
idivl
mov
add
nop
loope
mov
pop
xchg
aad
xor
pop
out
sub
add
push
or
lock
call
push
sub
add
test
pop
mov
andl
or
in
scas
popf
sar
lret
clc
outsb
push
movsb
push
sbb
sub
pop
push
lods
mov
mov
and
or
and
inc
movsl
mov
sbb
jecxz
cld
cmp
jp
sbb
rcl
lcall
out
lret
dec
stc
add
scas
jbe
add
call
pushf
mov
push
mov
fisttps
mov
sarl
sub
push
mov
dec
xorb
insb
lret
mov
jne
push
or
adc
sub
imul
enter
inc
out
pop
ja
data16
das
lods
std
pushf
or
dec
sub
cmp
xchg
mov
mov
je
add
and
add
stc
rorl
cs
xchg
lret
cli
xchg
sahf
sbb
test
enter
aam
ss
sub
ret
adc
call
jp
and
or
lods
mov
pop
test
lds
mov
sahf
adc
xor
push
dec
mov
push
fsin
dec
in
mov
imulb
sub
push
nop
xchg
add
inc
ljmp
push
sub
push
xchg
mov
mov
fisubl
cmp
push
repz
mov
push
add
in
cli
lcall
push
inc
adc
idivl
dec
push
mov
cltd
pop
add
jmp
scas
sbb
mov
lcall
mov
dec
lds
subb
ljmp
fnstenv
mov
sub
xor
fdivr
fs
push
xor
mov
popf
cmpsl
out
sbb
test
inc
insb
stos
frstor
pop
cmpsb
jg
add
or
xor
test
mov
insb
mov
leave
dec
adc
mov
mov
das
sub
outsl
pusha
cmpsb
xchg
push
test
sub
xor
dec
shll
scas
cmp
and
cld
push
adcb
push
or
jle
or
cmpsl
je
adc
leave
xchg
out
mov
mov
orl
mov
mov
and
cmp
pop
addl
inc
dec
xor
ja
repz
lds
stos
shlb
hlt
fmuls
scas
addr16
into
add
jb
mov
pop
shll
rolb
xor
cli
sahf
add
xchg
and
lret
xchg
inc
das
cltd
cmp
dec
xlat
lds
and
gs
add
or
cmp
pop
scas
js
inc
stos
cmp
jae
les
sub
sub
das
lods
dec
imul
ds
stos
sbb
cmp
jge
pop
cmpsw
xor
mov
sbb
dec
ljmp
dec
push
out
dec
arpl
roll
pcmpeqb
xor
dec
addr16
rol
pop
out
sub
push
in
pop
sbb
mov
sbb
xor
fnstcw
and
cmp
cmp
push
jb
push
insb
or
addr16
imul
cs
es
sbb
enter
hlt
cmpsl
xchg
push
or
iret
pop
lret
xchg
fdivl
add
int
xlat
jb
cmp
push
dec
mull
sbb
push
mov
sbb
icebp
mov
scas
aaa
pop
pop
mull
aad
rcr
or
sti
xchg
and
push
inc
xchg
adc
sbb
out
test
jno
mov
pop
fsubs
es
mov
jb
aam
mov
imul
xor
int3
cmp
incb
add
xor
fsubrl
dec
rcl
xor
aam
cmp
mov
icebp
xchg
shll
cmp
cmp
push
push
push
mov
subb
sub
jnp
xor
sub
cmp
pop
push
mov
xchg
mov
jl
fstps
testb
jp
sbb
dec
ljmp
jmp
jbe
mov
int3
mov
sub
aad
sbb
jge
pusha
jnp
adc
jp
je
dec
shlb
bound
add
cld
dec
dec
inc
addb
cli
push
aad
stos
sub
inc
sub
push
xor
or
push
mov
xor
cmp
je
jae
push
push
rorl
adc
push
aad
jns
xchg
mov
xabort
addb
xchg
lods
and
nop
iret
out
fidivs
push
mov
lret
icebp
jp
dec
sbb
aaa
xchg
jb
bound
daa
push
inc
xchg
add
xor
dec
or
add
fucomip
jae
jp
sub
dec
stos
sub
inc
arpl
xchg
aad
arpl
sub
lret
stos
cmc
push
testb
pop
jp
xchg
mov
lock
into
data16
pop
test
dec
inc
sti
lods
add
xor
lods
pop
and
jg
insb
ds
adc
sub
gs
xchg
push
sub
arpl
add
fldt
xchg
jo
movsb
sub
ds
and
not
popa
cmp
push
mov
adc
ds
loop
inc
adc
adc
popa
into
movsb
loopne
adc
push
dec
pop
cmp
dec
lcall
cmp
mov
std
out
sub
jae
hlt
js
cltd
sbb
je
lods
mov
sysexit
enter
dec
inc
mov
mov
ljmp
cmpsb
and
pop
int
out
jns
cltd
mov
loope
add
inc
xchg
push
lahf
stc
sub
out
test
and
xchg
sbb
call
cltd
or
bound
pop
sbb
mov
mov
je
sub
mov
jp
ljmp
ljmp
cmpsl
and
int
mov
fadds
mov
je
adc
pop
sub
out
jno
sbb
std
adc
sarb
cli
js
xchg
push
add
or
idivl
pop
sahf
dec
stos
icebp
lock
sbb
inc
jbe
inc
mov
jb
cmp
aaa
jbe
cltd
aad
in
imull
icebp
nop
test
adc
cli
das
push
pop
xor
fisubs
lahf
xor
pushf
popa
fimull
sbb
or
out
inc
enter
cs
mov
xor
mov
or
test
dec
mov
xchg
pop
xchg
cs
out
lret
rcr
pop
loop
xlat
push
add
push
xchg
lds
enter
call
xor
loop
cs
test
dec
in
sub
jmp
mov
in
popa
idivb
cli
adc
adc
xorl
adc
mov
inc
jo
je
sbb
test
aad
lea
shll
fwait
jmp
and
or
push
xor
or
sub
mov
imul
jle
sahf
cmp
gs
out
mov
fmull
dec
sti
test
les
jle
pusha
test
lahf
cmpsl
flds
fs
sbb
push
fiadds
mulb
xor
test
mov
insl
dec
insb
sahf
test
mov
push
push
cwtl
out
call
and
pop
xchg
in
pop
xor
push
add
in
sub
sub
pop
ret
sbb
dec
dec
adcl
mov
dec
or
mov
mov
dec
bound
sarb
push
mov
fstps
and
push
insb
icebp
inc
jbe
rolb
pop
or
aad
and
sarb
cmpsb
and
cmc
jl
movsb
jle
xchg
call
aam
enter
fstl
fwait
push
adc
jnp
stos
pop
inc
jbe
dec
hlt
lods
jg
sbb
xor
ret
mov
inc
sub
cmpsb
add
insl
sbb
aam
lds
lods
cmp
xor
hlt
sbb
enter
imul
fadds
in
fisttpll
push
inc
scas
loopne
mov
xchg
stos
enter
cmp
mov
xchg
push
adc
xchg
aam
xchg
pop
ljmp
pop
sub
movb
rcll
adc
xor
sbb
or
jl
dec
sub
or
jo
cli
lea
mov
rcll
pop
jmp
xlat
xor
push
mov
jge
pop
or
push
ret
pusha
mov
int
sub
jecxz
scas
mov
sub
xchg
push
divl
pop
xor
pop
pop
dec
aaa
jbe
mov
cmp
add
jno
jecxz
push
ret
and
jle
pop
add
test
lods
daa
shrb
icebp
pushf
cmp
add
xor
mov
or
in
dec
and
push
mov
jl
lods
inc
les
add
pop
pop
mov
push
mov
xchg
pop
ja
mov
cmpsl
addr16
js
push
stc
cld
xor
dec
shll
inc
or
add
mov
std
sub
xchg
addr16
lock
cmc
mov
xchg
sub
pushl
jnp
int3
mov
fldl
mov
aaa
std
sbb
imul
cmpsb
test
add
aad
stos
xchg
inc
mov
ja
push
rclb
jl
out
dec
int3
leave
jecxz
jl
pop
ljmp
mov
or
ret
inc
cs
cld
cmp
dec
mov
ret
loope
jecxz
mov
cld
les
push
mov
mov
inc
ss
xchg
add
sub
or
xchg
push
inc
push
xchg
leave
dec
xchg
push
jle
jp
mov
add
pop
jmp
dec
mulb
sbb
iret
sub
pop
mov
imul
add
push
dec
adc
xchg
je
cmp
push
push
add
mov
push
mov
pop
int3
or
jae
xchg
xchg
cmp
sub
nop
xchg
hlt
push
add
jp
js
lahf
mov
mov
dec
insb
push
sbbb
fimuls
adc
push
adc
loopne
sbb
or
enter
loopne
or
adc
lock
xor
lds
mov
cli
and
lcall
popf
ret
shlb
or
xchg
lret
and
mov
cli
jmp
out
push
test
fcmovbe
sbb
pop
orl
adc
sub
pop
mov
test
testl
add
inc
clc
rol
cmp
sbb
rorb
xchg
push
fnstenv
and
pop
xor
inc
and
cltd
mov
jmp
add
jnp
outsl
or
pop
push
call
xor
mov
push
daa
or
and
mov
test
pop
add
xor
xchg
xor
jbe
iret
pop
mov
pop
fcmovnbe
outsl
and
xor
xchg
mov
push
push
out
call
lds
ret
mov
pushf
push
xor
lret
or
sbb
push
sub
test
mov
cwtl
fists
pop
cmp
dec
jae
lods
xlat
aad
xadd
push
push
inc
es
mov
cmp
sar
les
shl
cld
insl
popf
add
pop
imul
xor
out
loope
int3
iret
insb
mov
sub
add
out
into
cmp
lock
lcall
dec
mov
sub
add
rolb
cmp
divl
sbb
fcoml
popa
imul
lahf
pop
loope
sub
xor
pop
adc
cmp
cmp
adc
push
jnp
daa
aam
rclb
repz
out
bound
push
inc
mov
fidivrs
pop
mov
aaa
pop
rcrb
pop
lods
dec
shrl
das
or
or
repz
sbb
mov
lods
push
mov
sbb
push
sbb
test
decb
push
mov
lahf
mov
push
xchg
int3
mov
bound
sti
stc
insl
js
xor
aad
std
sbb
inc
mov
jmp
dec
js
mov
rol
adc
dec
outsb
xor
bound
cmp
sub
dec
aaa
sbb
sbb
leave
or
push
aas
push
add
stc
and
mov
or
lret
push
fistpll
fwait
pushl
in
aam
pop
xor
add
cmp
or
cmp
insb
and
cmp
and
iret
incl
add
adc
jno
int3
cmp
lret
out
inc
in
or
in
arpl
jl
and
ljmp
inc
mov
add
jne
ret
mov
scas
jmp
addr16
test
jae
jnp
push
inc
iret
int
pop
add
lret
add
adc
jle
mov
or
sbb
arpl
test
adc
fcmovu
and
rcrb
xchg
ds
jbe
addr16
inc
mov
xor
ja
dec
jle
push
test
addr16
xchg
dec
into
push
sahf
mov
dec
xor
cmp
nop
pop
pop
gs
insb
fwait
dec
mov
xor
or
pop
push
loope
cmpb
imul
push
aam
cmc
test
sbb
ja
mov
xor
xchg
pop
pop
sub
cmpsb
mov
subb
stos
xchg
lds
xchg
add
clc
mov
jo
ret
loopne
push
mov
fcmovu
add
inc
xchg
add
jl
cmp
lods
dec
push
insl
es
sarl
cmp
loop
rcll
push
jno
scas
sbb
mov
mov
js
loopne
mov
in
jmp
das
sbb
test
mov
push
jp
lretw
sbb
cmpsb
sahf
cmp
pop
andb
cmc
test
ljmp
subb
ret
test
xchg
xor
sub
rcrl
mov
icebp
push
out
aaa
bound
adc
xor
and
nop
shlb
inc
cmp
rcll
jbe
sbb
inc
dec
adc
je
sbb
outsb
xchg
out
push
or
xor
lea
push
out
jns
imul
push
push
ficomps
dec
filds
cs
cmp
pop
inc
lret
xchg
ss
or
fstpl
in
inc
push
sarb
pop
fwait
jns
mov
jae
lahf
stos
ljmp
add
xchg
aaa
imul
sbb
jne
adc
scas
ss
test
adc
adc
fs
add
stos
outsb
out
cmp
pop
jae
pop
mov
std
mov
loope
lcall
mov
mov
leave
and
jae
add
xor
jecxz
repz
fsts
arpl
jae
add
xor
jecxz
repz
frstor
add
jae
xchg
cltd
adc
ret
pop
rorl
jns
imul
leave
cmp
push
in
add
mov
ret
cmpsb
sub
dec
jns
push
hlt
xchg
sbb
pop
dec
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
jge
jb
or
jnp
push
push
pop
add
shl
ret
xchg
mov
dec
jb
bound
jb
add
adc
xchg
repnz
int3
shl
ret
mulb
cwtl
loopne
in
mov
adc
pop
push
push
cld
lret
sub
xchg
mov
in
lret
aad
roll
daa
add
test
icebp
icebp
rcrl
adc
pop
dec
xlat
das
out
sbb
stc
add
push
xor
fimuls
push
mov
inc
xlat
das
mov
mov
add
xchg
aas
movlps
bound
insb
mov
sbb
or
sbb
xchg
pop
mov
pop
mov
jb
inc
daa
cli
add
in
dec
and
xor
xlat
or
or
pop
mov
dec
rol
scas
mov
push
xchg
data16
add
icebp
ret
xchg
mov
mov
fistps
jne
mov
cmp
sub
pop
mov
pop
out
mov
xchg
push
dec
add
push
and
enter
je
and
ret
loop
mov
xchg
in
xor
and
adc
insb
inc
addr16
xor
addr16
cmpsl
mov
xchg
stos
jmp
cld
shl
jecxz
aaa
fisubl
and
pop
jae
dec
jl
outsb
cli
xchg
xchg
mov
mov
movsl
icebp
loop
out
xlat
repz
adc
xor
inc
push
adc
and
xor
ret
loop
shl
ret
xchg
mov
inc
jb
bound
jb
add
adc
and
xor
ret
loop
shl
ret
xchg
mov
inc
jb
mov
icebp
sub
add
push
dec
xorl
sub
mov
push
add
aad
enter
aas
lcall
ljmp
sbb
dec
lods
shrl
mov
inc
cmp
mov
dec
push
pop
jo
xorb
dec
stc
or
hlt
ja
iret
lea
cs
scas
dec
sbb
push
adc
push
pusha
adc
das
fs
ret
add
mov
mov
ja
jg
inc
fiaddl
hlt
sbb
aaa
xor
xchg
lret
orl
std
out
push
inc
les
xchg
mov
imul
testb
cltd
inc
clc
cld
loope
es
mov
cmp
jecxz
and
xor
aaa
jp
mov
int
sub
cmp
xchg
adc
test
push
xlat
sbb
inc
sub
sub
outsl
and
repnz
and
mov
imul
lds
or
push
std
lods
adc
ret
ret
jecxz
and
jge
and
mov
sbb
push
data16
push
pushf
jcxz
lret
push
aad
dec
mov
xor
push
mov
mov
jns
das
jb
push
out
fsubrs
pop
dec
jbe
cmp
out
je
lret
outsb
push
xor
jae
aad
das
or
push
mov
lods
add
add
push
lret
push
mov
loopne
stos
or
mov
pop
add
movsb
das
sbb
pop
imul
out
cmpsl
adc
adc
xchg
insl
jg
push
mov
pop
in
pushl
push
push
mov
pop
xor
fisubrs
or
xchg
jae
sbb
inc
jmp
push
mov
push
xchg
popf
pop
lods
scas
fstps
sarl
adc
pop
mov
mov
dec
push
aad
push
push
loop
inc
jl
mov
into
xchg
xchg
cld
ljmp
pop
jecxz
xor
adc
sub
add
add
mov
cmp
pop
sub
movnti
nop
fwait
test
cmp
inc
dec
testl
ror
pusha
push
or
jl
dec
pop
pop
pop
fmul
out
les
push
ds
inc
pop
pop
repnz
insb
or
nop
push
mov
aad
loop
fxtract
adc
xchg
mov
rcrl
sahf
loope
test
add
pop
push
push
sub
pop
test
lret
pop
cmpsb
pop
mov
test
inc
aam
repnz
pop
mov
dec
jns
sarb
enter
loopne
xor
or
jecxz
into
xchg
mov
add
mov
repnz
push
mov
xor
adc
add
sbb
push
das
aad
mov
popl
repnz
leave
fisttpl
xor
pop
je
sbb
clc
dec
or
mov
fmul
add
loop
inc
pop
stc
sub
inc
sbb
or
or
cmc
test
fmull
inc
cmp
fidivrs
rcll
sub
in
or
aaa
in
mov
das
pop
idivb
je
rolb
dec
es
enter
outsb
jmp
dec
pop
adc
cs
mov
push
dec
mov
imul
shrl
mov
push
sti
mov
into
adc
fsts
and
pop
jl
or
and
cmp
leave
punpckhdq
and
outsb
push
lock
adc
adc
xlat
loope
push
lea
sub
fwait
std
sbb
fnsave
call
les
mov
outsb
mov
jmp
test
or
jnp
pop
fidivl
sub
movsb
arpl
outsl
mov
hlt
inc
lock
push
fdivl
jp
fcmovb
add
int
test
dec
push
push
insl
mov
adc
xor
sub
les
add
pop
iret
cmpsl
add
mov
mov
and
pop
mov
sub
or
cmp
and
mov
xchg
mov
jge
dec
fldenv
cmpsl
mov
outsl
pusha
outsl
ss
ret
mov
test
mov
mov
shr
sbbb
scas
jb
sub
aas
fwait
xor
xchg
jns
mov
mov
or
stc
mov
dec
fs
in
in
dec
pop
popf
push
push
push
adc
lret
or
sub
push
cmc
test
ret
clc
inc
xor
arpl
lods
fstpt
out
stc
lea
movsl
and
aas
movsl
fnstcw
cmc
cmp
lcall
lea
cli
scas
mov
xchg
nop
popf
jo
clc
shll
in
mov
out
push
xor
or
loope
fsubl
shr
enter
pop
enter
jmp
les
or
push
xor
insl
mov
inc
outsl
push
dec
out
mov
rolb
in
add
jbe
movsl
jne
or
xchg
jae
or
mov
iret
sub
mov
shr
or
mov
aad
fldcw
stos
jne
rolb
pop
sub
cmpsl
rcrb
insl
fistpll
inc
push
pop
jno
mov
pop
test
std
mov
mov
mov
add
gs
xchg
push
int
dec
outsl
call
add
pop
jl
pop
test
aas
mov
gs
insl
stos
inc
lds
lret
imull
add
lock
loopne
ljmp
add
add
push
xchg
and
xchg
adc
xchg
loopne
lds
je
into
pop
test
pop
dec
fcmovbe
sub
mov
jnp
rcl
push
push
cmpsb
cmp
mov
push
mov
dec
outsl
popl
mov
loop
push
fidivrs
pop
pop
add
jecxz
pop
test
add
push
or
push
addr16
jmp
sahf
mov
loope
jne
sbb
cmc
mov
and
in
filds
sub
xchg
out
add
daa
stos
or
sti
insb
or
mov
xchg
loopne
jbe
jae
stos
add
dec
and
or
mov
sbb
das
lods
mov
rcrl
dec
inc
idivl
shrb
and
loopne
jo
fs
sub
mov
inc
push
mov
or
push
push
sahf
push
or
cmp
and
fstl
in
ljmp
push
mov
jo
push
add
mov
add
mov
mov
pop
inc
push
dec
clc
outsl
loopne
sbb
mov
add
fidivrs
int
mov
cltd
mov
push
and
out
daa
test
push
pop
or
ds
loopne
in
cli
xchg
jb
jne
jbe
pop
adc
mov
lods
in
lahf
pop
sub
mov
sub
setl
mov
inc
push
loope
addb
pop
lods
mov
fs
dec
cmp
and
ret
and
insb
dec
mov
clc
push
inc
and
lret
push
and
inc
ja
test
lahf
xchg
ljmp
jns
adc
aaa
shl
mov
and
lret
fadd
repnz
stc
je
pop
add
jge
push
adc
mov
xlat
rcrl
aas
scas
dec
pop
push
ficoms
out
cld
lcall
cmp
pop
push
test
mov
jae
movsl
jle
cmp
les
mov
sbb
dec
call
jl
loopne
stc
insl
movsb
ret
add
jge
js
out
cmpsb
xchg
pop
out
xor
mov
or
pop
std
xlat
mov
jp
xchg
pop
leave
jne
fldt
addb
jmp
xchg
ja
test
bound
loope
mov
xchg
push
data16
sbb
mov
pushf
out
add
jge
jb
or
sti
xor
jo
nop
lcall
xor
add
inc
stos
pop
jl
movsb
mov
cwtl
lret
add
inc
xorb
mov
jg
stc
push
inc
mov
incl
jnp
dec
notb
and
mov
stc
or
xor
fisubs
mov
pop
sub
mov
mov
insb
dec
mov
popf
mov
daa
out
mov
addr16
xor
cmpsb
int3
and
push
cmp
push
mov
xlat
incl
std
movsl
mov
mov
sbb
sti
daa
mov
out
sahf
pushf
outsl
dec
xchg
ljmp
and
sbb
movsl
push
lods
out
out
and
mov
lret
enter
sub
mov
incb
shrl
xchg
scas
pop
loop
shrl
stos
sub
subl
rcr
pop
cmp
lret
inc
jo
or
sbb
cmpb
imul
sahf
arpl
and
out
push
pop
sub
gs
cmc
movsl
jmp
xchg
push
sub
add
sar
jl
or
mov
mov
jl
nop
or
xor
mov
jmp
sbb
test
or
or
adc
cs
and
loope
leave
pop
pop
or
jnp
push
cmc
mov
jae
ja
add
shr
cwtl
in
repz
push
imull
mov
mov
xchg
mov
push
aam
or
xor
and
push
imul
fdivr
xor
add
scas
mov
loop
gs
push
push
sub
jae
xchg
sbb
mov
dec
mov
sub
fsubl
cld
sbb
jne
sub
ss
into
xchg
test
test
dec
push
mov
jae
push
leave
cld
pop
cmpsl
int3
jecxz
lcall
pop
mov
mov
add
sbb
push
mov
aaa
popf
mov
pop
push
dec
jmp
mov
arpl
xor
push
ret
sub
push
add
popa
xchg
inc
imull
jecxz
fistpl
xor
add
sahf
xchg
mov
imul
iret
sub
jecxz
bsf
push
test
js
mov
xor
xchg
pusha
mov
pop
or
data16
mov
lahf
icebp
movsl
jns
sbb
loopne
mov
pop
pop
jg
or
sub
clc
rcrl
dec
fwait
jge
adc
iret
scas
fsubl
fisubrs
adc
cld
in
into
in
add
cmp
ss
iret
jp
cltd
aad
add
loop
jmp
xchg
outsb
adc
addb
mov
jnp
cmp
test
or
jno,pt
jbe
pusha
shl
outsl
out
pop
mov
in
stos
cmp
ret
sarl
add
sbb
inc
sub
data16
fisubs
addl
mov
mov
outsl
jo,pn
inc
push
pop
in
cmpsl
outsb
sub
movsl
mov
push
mov
xchg
rcll
addr16
bound
or
inc
dec
pop
lahf
jae
or
mov
fwait
mov
out
xor
jo
xchg
ss
aas
mov
pop
not
dec
mov
ret
repnz
push
sahf
mov
sub
xor
mov
test
iret
mov
jmp
clc
mov
mov
and
cmp
xchg
sbb
lret
xchg
adc
int3
repz
push
jp
dec
mov
jne
mov
ss
aam
jno
jne
lcall
pop
ret
shrl
mov
jl
mov
cmp
pop
rcpps
cmp
xchg
ljmp
subb
sbbl
xor
push
jecxz
inc
cwtl
popaw
inc
add
xchg
dec
fsts
or
sub
es
dec
sti
jbe
fld
push
ljmp
ljmp
mov
jle
sbb
mov
cwtl
pop
or
imul
cmp
push
cmp
push
add
and
pusha
ret
testl
sub
xlat
aam
push
repz
xchg
fs
adc
stos
sahf
fistl
scas
or
cs
and
jbe
add
adc
cmp
inc
repnz
pop
arpl
data16
fs
cmp
jg
divl
mov
in
sbb
push
fwait
aas
add
jnp
push
xchg
inc
loopne
push
sub
icebp
mov
fs
aaa
loop
adc
inc
insl
cli
aad
and
rorb
adc
out
repnz
adc
je
xorb
in
fiadds
and
mov
add
jle
xor
popa
push
sbb
pop
pop
or
pop
cmpsb
loope
scas
loopne
cmp
cmp
fsubrs
data16
lock
jne
pop
int3
push
fcompl
bound
sub
jae
pop
adc
xor
cmp
xchg
push
push
repz
je
push
cs
mov
paddd
push
jg
adc
xchg
jp
lods
mov
out
xchg
fsubrl
xor
or
popa
adc
das
and
inc
rcr
mov
movsb
sub
hlt
mov
mov
cmp
xchg
cmpsb
inc
js
pop
jae
sub
shll
popa
inc
fmull
xchg
in
lods
add
push
sahf
xor
repnz
and
sbb
jb
and
adc
scas
in
mov
jg
fisubrl
xor
and
cmp
jmp
lds
pop
ds
cmp
xchg
push
outsl
daa
cmp
outsb
es
jo
dec
push
inc
aad
andb
lret
xchg
leave
sub
mov
mov
inc
lahf
jp
inc
scas
arpl
mov
and
daa
sub
test
enter
dec
call
add
lods
je
ja
daa
inc
xchg
or
and
jl
jne
xchg
or
lds
xor
repnz
adc
lcall
sbb
mov
xchg
jnp
or
lret
dec
mov
cmp
popf
inc
cs
hlt
sub
imul
filds
fidivrs
int3
lahf
jmp
adc
sbb
xchg
call
std
jle
xor
daa
mov
int
xlat
clc
or
test
jno
mov
cltd
scas
pop
dec
lcall
mov
sarl
add
push
jb
add
out
shll
add
lret
insl
mov
mov
ror
inc
mov
in
xlat
adc
lds
sub
lret
cmc
mov
out
sub
fdivrl
sbb
xor
jmp
push
scas
in
test
xor
rcrl
imul
sbb
les
xor
cmpsl
in
push
sub
lods
pop
ja
loop
fdivr
loop
xorl
jecxz
mov
pop
lcall
jbe
xchg
sti
adc
inc
loop
pop
fs
rcl
sbb
lea
in
adc
xor
js
inc
ljmp
enter
push
xorl
xchg
test
aaa
movsb
dec
and
pop
loop
sahf
jns
mov
nop
or
aas
xchg
xor
pop
repz
xchg
adc
jl
pushf
scas
lahf
xchg
dec
push
push
call
xchg
push
sbb
xchg
adc
mull
out
xor
sub
push
mov
or
fstpt
sbb
xor
lahf
pop
shrb
ret
add
call
push
cmpsb
lcall
push
fdivs
sub
adc
outsb
shll
or
mov
push
cmpsb
pop
inc
adc
push
lret
xor
sbb
int3
lea
daa
repnz
xor
ficompl
das
jnp
mov
pop
push
inc
dec
testb
push
cmc
clc
divb
addr16
rorb
dec
mov
lret
aas
lahf
fistps
pop
inc
or
loop
cmp
mov
push
mov
out
sbb
dec
loop
aaa
out
xorb
xor
int3
add
mov
push
rcll
lahf
in
xor
pop
sbb
mov
cld
push
test
mov
mov
js
xchg
add
mov
les
jb
mov
dec
clc
daa
stos
xor
stc
mov
pop
mov
cs
pop
popa
fldl
push
sarl
jne
dec
push
inc
out
out
push
icebp
test
jg
mov
or
ficomps
pop
jb
or
std
pop
outsb
fistps
xor
sub
stos
loopne
vucomiss
inc
jns
mov
loope
scas
push
dec
lret
xchg
stos
and
xor
push
pop
push
jne
inc
and
enter
mov
mov
stos
sbbb
icebp
cmp
adc
into
pop
mov
pop
lret
out
sub
dec
jl
iret
adc
xchg
outsl
cmp
mov
jl
fadds
push
mov
mov
movsl
jp
push
loope
insl
dec
leave
or
add
fidivl
mov
lcall
pop
xlat
pusha
loope
mov
out
sbb
push
xor
mov
popa
imul
pop
dec
mov
sar
cmp
daa
adc
push
int
xor
orb
fwait
cwtl
and
xchg
xchg
lret
lods
and
outsl
mov
mov
stc
cwtl
pop
fs
xor
mov
leave
mov
push
xchg
rcl
or
fdivrp
dec
and
pop
aas
mov
push
bound
cld
ss
add
loopne
and
adc
fidivrl
push
mov
subb
fistps
xchg
sbbb
inc
out
test
cmpsl
add
dec
xor
imul
call
pop
inc
in
xchg
lods
fwait
in
fdivrl
inc
push
sbb
imul
ljmp
int3
or
scas
enter
mov
mov
lods
mov
imul
test
lock
mov
mov
ljmp
and
inc
xor
dec
inc
leave
pop
test
fmulp
popf
push
rorl
cmp
imul
push
popf
add
cltd
adc
xor
or
cmpsb
push
icebp
fimuls
jno
pop
push
mov
xlat
lcall
dec
mov
xor
mov
lcall
in
xor
lcall
jno
adc
fldt
dec
mov
mov
out
ja
pop
iret
sti
into
inc
push
into
cmp
sub
fwait
sub
inc
mov
es
jne
test
xor
jns
sbb
enter
mov
mov
xchg
leave
out
jmp
sbb
mov
push
or
mov
fstps
sub
addr16
mov
rcrl
out
rcrb
test
inc
xchg
pop
mov
xchg
fwait
cmp
add
and
add
xor
and
cmp
cld
adc
arpl
movsb
test
mov
in
adc
pop
test
dec
lock
out
out
xor
mov
or
cs
and
mov
test
jnp
fsubrl
and
and
inc
in
and
push
aam
dec
dec
int3
lods
mov
in
push
test
imul
xchg
mov
call
and
out
loope
push
addb
push
mov
and
push
lea
cmp
cltd
lods
dec
jo
out
ljmp
dec
pop
insb
cwtl
lahf
fistps
stos
and
push
enter
pop
iret
mov
jecxz
ja
xor
push
outsl
mov
dec
rcrb
mov
fsubs
test
out
or
or
sub
inc
mov
aam
dec
add
cmp
add
iret
daa
mov
stos
adcb
repz
shrl
fistl
aas
jp
mov
push
aas
arpl
push
jl
cmp
ja
inc
xchg
leave
ret
xchg
push
loopne
sbb
xlat
sahf
ret
or
lcall
xchg
call
or
add
mov
sbb
mov
pop
arpl
movntps
in
aas
lods
cmp
hlt
rorl
call
shll
dec
add
popf
out
push
push
dec
imul
push
out
push
scas
mov
clc
rolb
jb
popa
nop
jmp
hlt
xchg
ljmp
aad
or
xchg
mov
pop
xor
xchg
sarb
arpl
ret
sub
popa
test
sti
jp
jb
pusha
and
pusha
jecxz
cwtl
mov
je
mov
push
pop
add
repz
shr
inc
inc
sub
mov
lcall
adc
sub
rolb
fwait
xchg
in
mov
mov
testb
clc
fwait
and
test
je
in
mov
mov
gs
or
cltd
sbb
lea
or
fmulp
fisttps
aad
rcrl
dec
stc
mov
cmpsl
test
hlt
ffreep
ja
jnp
sbb
stos
ret
clc
jne
push
xchg
jno
pusha
mov
inc
sbb
mov
pop
test
les
movsl
push
mov
cmp
mov
sub
shrb
andl
jl
mov
mov
inc
pop
add
cmovg
pop
das
adc
stc
call
xor
xchg
sbb
mov
mov
cmp
dec
shrb
mov
mov
push
pusha
or
js
add
push
push
int3
or
push
shr
fdiv
and
push
jae
push
loop
or
mov
xor
inc
or
pop
cli
outsb
inc
add
adc
and
xor
ret
loop
shl
ret
xchg
mov
inc
jb
bound
jb
add
adc
and
xor
ret
loop
shl
ret
xchg
mov
inc
jb
sub
jb
add
push
mov
adc
add
sub
loop
shl
ret
mov
pop
jb
ljmp
and
xchg
mov
ret
dec
dec
shl
mov
cmp
pop
pop
insl
dec
jge
push
adc
jb
bound
aaa
outsl
adc
out
ret
mov
xchg
rorb
add
inc
and
bound
push
adc
jo
sbb
ret
mov
shl
and
lock
and
jp
or
pusha
sub
adc
loope
mov
xchg
rcr
mulb
push
jno
and
pop
add
mov
sti
int
or
loope
push
or
dec
mov
in
push
out
enter
xor
push
icebp
pushf
int
fnstsw
dec
sbb
mov
mov
sub
jns
adc
add
jg
rolb
sbb
arpl
aaa
mov
sub
scas
adc
inc
jo
jo
sbb
outsl
nop
scas
rolb
sbb
mov
xlat
xchg
mov
mov
cmp
dec
subl
cmp
nop
push
xchg
pop
loope
daa
cmp
call
call
les
pusha
jb
mov
ficompl
daa
mov
movsb
ret
inc
adc
imul
inc
adc
pusha
xor
adc
fisubl
mov
lcall
jae
popw
jbe
and
pop
hlt
inc
lock
cmc
xchg
xchg
addb
sub
jno
and
inc
xor
cmpsl
fstl
mov
mov
lcall
push
push
daa
add
xor
adc
ret
mov
rclb
mov
and
bound
push
add
jo
adc
ret
mov
rclb
mov
mov
cltd
mov
cmp
lahf
ljmp
fdivr
inc
adc
mov
adc
adc
adc
inc
push
cmp
adc
pop
in
out
push
nop
repnz
mov
push
std
push
aas
test
and
push
cmp
cmp
mov
add
nop
inc
scas
loope
xchg
mov
dec
inc
sub
xor
sub
jb
dec
cmp
xchg
lods
out
out
lcall
or
cld
xor
add
adc
loope
cwtl
inc
pop
imul
loopne
cwtl
lods
dec
xchg
imulb
sub
cld
mov
rol
mov
and
jge
mov
in
dec
cmp
fstpt
into
in
jb
sub
or
sbb
cmp
jns
roll
mov
sub
adc
imull
jecxz
call
or
pop
imul
adc
cmp
insb
mov
mov
rol
jmp
xchg
mov
lret
push
push
add
cltd
roll
subl
arpl
cmpsl
push
jmp
aam
mov
or
imul
stos
push
xchg
inc
test
pushf
pop
addr16
add
movsl
xor
and
out
sbb
pop
jbe
cmp
mov
push
push
fidivl
cmc
adc
test
xor
sub
int3
mov
adc
sbb
lock
popa
adc
pop
rcrb
push
fldl
scas
mov
out
movsb
shrl
xor
cmc
xor
fbstp
xchg
jns
mov
or
mov
adc
std
gs
scas
add
adc
pop
std
jae
pop
not
or
std
jp
das
shr
in
mull
lock
daa
int3
cltd
ffree
pop
mov
int3
js
mov
ja
mov
push
es
dec
iret
mov
sub
xchg
xchg
pop
out
cmp
shlb
xchg
mov
xlat
dec
xchg
adcl
push
jne
add
cmp
repz
lods
and
iret
cmp
mov
das
stos
in
mov
mov
jo
mov
push
lret
js
cmpsl
cmp
into
les
call
mov
sub
cmp
cmp
bound
jae
outsb
jge
pop
cmp
in
imul
aam
adc
inc
int
inc
loopne
pop
adc
cmpsl
aad
into
dec
mov
or
pop
and
xchg
xor
sbb
pop
in
lods
insl
cmp
aad
lret
ret
mov
popf
push
jp
inc
es
aas
cmp
and
iret
fldenv
call
popa
shl
mov
dec
aam
in
mov
inc
cmp
and
call
push
iret
mov
enter
stos
rclb
ror
sub
cs
sbb
add
call
and
cmpsl
mov
jae
lret
cmc
add
cmp
or
xchg
scas
pop
mov
push
dec
lcall
xlat
inc
pop
or
add
bound
mov
adc
dec
lcall
xor
jge
jle
lret
ja
mov
cltd
mov
mov
cmp
xor
repnz
cwtl
add
rolb
jnp
je
or
jne
jns
or
inc
jecxz
idivl
addl
ss
mov
mov
inc
and
loop
xchg
ss
js
add
push
mov
insb
mov
cmc
adc
add
dec
aam
sahf
stos
inc
mov
sbb
clc
xor
pusha
cmp
and
push
and
pop
and
mov
aam
sbb
das
adc
pop
test
imul
mov
pushf
push
mov
imul
dec
mov
inc
icebp
icebp
mov
pop
insl
in
repz
pop
ja
addr16
push
jns
stos
jno
cs
mov
fs
nop
add
jae
or
xchg
out
jnp
xor
mov
mov
xorl
out
xor
jge
repz
inc
inc
pop
jge
shlb
push
inc
push
enter
out
sbb
idiv
shll
aaa
jle
cmp
inc
nop
test
sbb
dec
in
push
dec
sub
adc
out
and
leave
mov
repz
rorl
dec
push
add
xchg
jae
loope
shrl
xor
mov
ss
lahf
outsl
jns
sbb
sti
adc
jb
cmp
loope
cmpsb
pop
cmp
out
mov
mov
jae
or
inc
inc
push
andl
sub
jecxz
inc
lahf
jmp
and
mov
ret
mov
lret
jnp
jno
jno
pop
es
xchg
repnz
add
aad
aad
adc
rcrl
push
jge
repnz
sbb
stos
push
xor
ffree
xchg
sub
inc
xchg
shr
negl
xor
shl
lret
popf
movl
xchg
sbb
or
xchg
in
mov
mov
movzwl
mov
jns
jecxz
mov
test
rclb
or
ljmp
pop
loope
mov
cmpb
call
fadds
ja
xchg
sbb
clc
push
or
push
sub
push
fildl
ret
mov
jmp
xchg
xor
clc
add
in
or
push
push
filds
fdivs
cwtl
mov
aam
push
mov
pop
sbbl
jae
fs
cmp
adc
je
cwtl
xchg
inc
adcl
out
mov
xchg
sub
lock
sarl
jo,pt
pop
sbb
push
outsb
scas
lcall
mov
les
or
iret
xor
or
js
mov
pop
and
sbb
xchg
ja
shlb
stos
sbb
inc
pop
jecxz
sub
cmp
jo
retw
dec
pushf
icebp
stos
cli
push
mov
push
sahf
and
add
pop
out
pop
loope
cld
jne
aaa
popa
loopne
aas
sbb
popa
xchg
sahf
imul
xor
dec
aas
and
lret
leave
jl
jg
xor
mov
jae
xchg
cmp
mov
dec
push
call
pushf
roll
test
dec
sahf
loope
cwtl
mov
add
adc
mov
jae
pop
mov
shlb
and
fstpl
and
frstor
dec
pop
or
inc
mov
pop
or
jge
icebp
or
mov
add
incl
loop
dec
sub
xchg
movsl
sub
mov
sub
lcall
or
mov
lock
mov
push
mov
push
lret
sbb
xchg
adc
int
push
push
mov
sbb
and
stc
mov
xchg
adc
cmp
test
cmp
es
scas
outsb
cltd
jle
popa
xchg
out
mov
fs
mov
ror
test
movsl
cmp
or
add
xor
je
shrb
inc
je
daa
mov
jae
and
xchg
std
cmp
mov
inc
or
sbb
cmc
aaa
or
daa
add
orl
sub
or
sarl
lock
fldcw
xchg
sbb
lret
pop
testb
xchg
xchg
fdivrs
in
fldl
mov
xchg
outsl
loope
ret
adc
popa
je
pop
mov
jne
in
rol
sbb
mov
cld
pop
ja
mov
cld
push
mov
clc
in
xchg
jecxz
rclb
pop
arpl
popf
and
mov
gs
int3
lods
mov
daa
pushf
sub
aad
add
insb
dec
pop
addl
out
sub
adc
divl
loopne
pop
das
sbb
inc
cmpsb
xor
lcall
aam
mov
fists
and
jg
mov
mov
dec
mov
pcmpeqb
divb
pusha
lret
dec
mov
inc
cmpsb
stos
sbb
dec
out
scas
ds
int3
outsb
insl
or
loope
bound
xor
push
fs
jns
pop
icebp
sbb
orb
sbb
jno
add
ljmp
jl
movsl
mov
mov
pop
loope
or
jmp
arpl
lahf
sbb
push
fcoml
iret
adc
roll
cli
add
clc
popa
mov
aas
inc
adc
adc
in
dec
push
shlb
movsb
adc
mov
arpl
imul
js
stos
pop
mov
fadd
inc
mov
sbb
jae
arpl
lods
sbb
lds
sub
mov
mov
nop
pop
add
or
push
stos
imul
jmp
push
int3
sbb
lea
mov
lock
xor
gs
pusha
jnp
iret
ja
daa
dec
ja
cmp
dec
repnz
mov
idivl
adc
lahf
adc
divl
cmp
pop
add
ret
fs
add
inc
out
mov
ret
pop
pushf
ret
sbb
cwtl
mov
pushf
cmp
mov
repz
pop
or
aaa
test
sbb
js
bound
les
jmp
jae
xchg
iret
jle
call
cmp
push
cli
jecxz
xor
sbb
mov
cli
pop
cwtl
inc
or
stos
test
push
jp
jae
inc
ret
aaa
dec
and
dec
arpl
dec
repz
cli
gs
xor
loope
mov
push
fbstp
mov
jl
out
cwtl
cli
das
cli
jmp
dec
sbb
dec
shlb
lret
cmc
lret
mov
stos
sbb
enter
inc
das
daa
into
arpl
je
insl
push
dec
and
xor
sub
lret
in
orl
stos
imul
fs
xchg
icebp
pushf
out
jp
adc
pop
bswap
add
aam
xchg
sub
or
jbe
sub
push
ficoms
jle
mov
getsec
test
arpl
test
inc
in
xchg
xor
std
mov
fstps
js
imul
out
loopne
incb
sahf
movsb
push
andb
adc
add
xorb
dec
arpl
add
cmpsb
xchg
test
ss
sub
sbb
adcb
jae
sbbl
insb
add
xchg
jns
xor
shrb
into
sub
test
or
sbb
push
mov
out
mov
stos
xor
mov
addb
enter
dec
or
int
xchg
test
mov
jbe
ja
sbb
pop
repz
imul
stos
xchg
lahf
inc
mov
cmp
mov
daa
in
pop
loope
dec
push
push
rcll
or
pop
std
mov
mov
mov
or
cmc
adc
pop
cld
jbe
inc
mov
cmpsb
mov
jmp
jge
xchg
cli
sbb
dec
xchg
xlat
addr16
mov
test
push
mov
stos
push
stc
repz
fsubrl
cmpsb
fadds
out
lea
pop
aad
jo
mov
psrlq
fs
in
popf
push
outsl
inc
jmp
cmp
jno
je
mov
pop
nop
xchg
mov
jle
or
sahf
lahf
push
je
repnz
or
in
fdivl
scas
jae
dec
lods
jmp
loop
sub
jae
push
pop
xchg
nop
pop
int
adc
iret
xor
sti
int3
divb
pop
dec
jo
dec
push
pop
inc
jle
jo
ret
jmp
sbb
sub
or
cmp
sbb
ja
push
int
and
nopl
mov
cmc
stc
push
mov
movhps
ficomps
lods
mov
rep
mov
inc
pushf
movsb
adc
mov
and
xchg
out
cmp
add
sub
cli
movsb
shlb
push
dec
inc
loopne
in
rcll
xchg
cli
out
sbbl
jl
ja
xchg
xchg
cmp
jl
or
mov
outsb
sbb
iret
push
insl
aaa
jnp
xchg
into
jg
shlb
stos
pushf
sbb
out
push
xchg
push
lahf
sbb
mov
cltd
mov
mov
outsb
adc
scas
scas
inc
inc
jns
sub
xor
out
shll
aas
sti
loope
shrl
pop
xor
call
dec
pusha
popf
ljmp
add
push
xor
add
ficompl
pop
ret
xor
pop
sbb
mov
pop
mov
mov
xchg
std
test
repz
gs
mov
in
jmp
sbb
mov
lret
movsb
inc
in
sub
shl
dec
xchg
movups
aas
jl
fcmovnu
addr16
leave
pushf
das
xchg
xchg
and
mov
sub
adc
jbe
pop
ss
cmp
or
lea
loope,pt
sub
insl
or
mov
cld
loope
adc
addb
mov
mov
push
add
or
popa
sbb
adc
adc
mov
cmpsb
into
mov
or
xchg
sbb
ss
mov
push
xor
jns
lret
add
push
ljmp
and
cs
lods
mov
lea
mov
mov
xor
cwtl
rorb
push
bound
mov
lods
outsl
sbb
cmpsl
lock
out
and
das
outsl
ret
outsb
int3
and
xor
cwtl
mov
std
xchg
jge
in
xchg
leave
popa
jg
lret
mov
pop
jl
sti
in
lods
jo
jae
xor
pop
cmc
loopne
out
nop
inc
mov
cwtl
push
push
jnp
lock
repz
popa
leave
pop
aad
inc
push
fdivr
mov
jae
mov
pop
fisttpll
aad
dec
lahf
jmp
ds
loope
xor
mov
lods
push
jb
fwait
jne
aad
push
cmpsb
or
shr
push
adc
cmc
push
into
inc
dec
sbb
jbe
ljmp
mov
xchg
lea
popf
cmpsb
sbb
repz
xchg
ffreep
inc
dec
stos
dec
rolb
dec
jae
sbb
imul
xor
push
and
push
daa
inc
pop
jle
inc
jp
adc
test
xor
scas
fsubl
testb
stos
inc
or
add
and
in
sbb
outsl
fdivl
dec
sbb
aaa
xchg
leave
mov
or
call
test
pop
in
jo
dec
shlb
pop
push
repnz
mov
scas
inc
nop
data16
xchg
testl
cmp
adc
mov
pop
mov
mov
dec
fs
pop
lods
jae
cs
fs
data16
aad
lods
mov
xchg
jle
psrld
push
jnp
dec
add
xchg
push
popa
xor
outsb
test
iret
adc
arpl
or
repnz
jne
lds
mov
in
fsub
lret
inc
loope
xchg
jae
dec
mov
ljmp
je
sbb
dec
test
cli
xor
pop
xor
pusha
xorl
lea
sbb
test
xor
push
push
js
aam
addb
aas
push
cmc
lret
mov
arpl
mov
outsb
sarb
and
pusha
std
add
mov
lock
push
movb
jmp
cmp
pop
push
mov
clc
stos
aam
test
adc
imul
out
ss
sbb
mov
dec
stc
push
ja
pop
and
pushf
dec
js
mov
movsb
xor
sub
mov
fnsave
lea
imul
adc
or
cltd
mov
cmp
sets
dec
or
sahf
flds
xor
pusha
imul
mov
mov
add
and
in
int
aas
icebp
and
jl
add
pop
inc
and
cld
in
das
xor
mov
and
xchg
xchg
or
fisubs
clc
scas
push
xchg
pop
out
fwait
adc
xor
ds
nop
mov
push
loope
cs
sbb
jae
xor
or
cmpsb
inc
nop
inc
jmp
add
mov
mov
imul
out
mov
push
pop
add
das
xorb
cmp
imulb
mov
int
adc
cmpsl
cmc
js
and
jge
insl
pop
fldenv
lahf
xchg
notb
and
div
fwait
roll
push
sarl
push
adc
sub
mov
and
sub
mov
fdivr
cmp
popf
movsl
out
shrb
dec
mov
sbb
or
and
mov
inc
adc
or
in
jo
sub
push
inc
jns
test
rcll
repz
sbb
mov
push
pop
jg
inc
push
insb
adc
jecxz
pop
das
pop
dec
decl
sbb
mulb
jmp
rcll
mov
outsl
icebp
jp
or
xchg
int3
add
jbe
and
popf
fstl
adc
xor
pop
push
fisttpll
sub
adc
sbb
ss
lret
pop
cmp
or
bound
testl
xor
xor
push
sbb
or
push
fistl
jne
pop
and
insb
stc
pop
push
lds
add
push
jle
ja
out
jmp
clc
and
xor
dec
bound
sub
lret
ret
lret
clc
mov
fstpl
xchg
xchg
push
cmp
in
pusha
push
add
mov
xor
shrb
jge
dec
sub
daa
pusha
xchg
pop
mov
xlat
cmp
add
sub
in
data16
rorb
add
jecxz
cmpsb
push
sub
cmpb
scas
add
sub
jns
mov
mov
arpl
aad
jbe
stc
fs
insb
mov
adc
jp
shll
stos
jp
fmuls
fsubrl
cwtl
mov
cmp
pop
ret
add
mull
sub
mov
cli
add
jns
add
out
xchg
push
testb
jmp
std
shll
inc
add
sbb
insb
test
js
ds
xchg
pop
ljmp
sbb
int
mov
mov
xchg
cmc
js
inc
and
mov
pop
rclb
lret
pop
stos
aaa
std
pop
shlb
std
push
pop
xchg
mov
add
dec
push
sahf
loop
in
outsl
rcrb
jno
cs
inc
cmp
pop
xchg
aam
cmc
rol
sbb
jmp
insb
push
pop
and
mov
dec
lock
test
bsf
cmp
mov
adc
pop
sbbl
adc
inc
jle
mov
js
xor
inc
aas
test
jnp
inc
cs
lea
iret
shl
arpl
iret
in
insl
adc
push
or
sbb
in
push
mov
cmp
sahf
jns
xor
test
ret
aad
mov
cmp
sbb
mov
xchg
mov
push
lods
sub
cmpsb
fcompl
pop
stc
pop
and
cmp
js
dec
jp
pop
mov
cmpsb
jns
daa
inc
insl
jo
fiadds
mov
dec
test
mov
movsl
shlb
test
pop
push
push
lret
scas
inc
and
shrb
or
outsl
sbbb
ss
sub
and
cmc
xor
dec
pop
dec
jl
mov
lds
xchg
and
mov
jmp
cmp
mov
out
call
jns
xor
fsubrs
jb
push
adc
repnz
sub
dec
cmpsl
sub
call
mov
jge
fs
loopne
mov
mov
int3
arpl
lcall
out
mov
sub
ljmp
fdivr
push
jae
cmc
popa
add
mov
bnd
out
es
xchg
sub
andb
js
push
sahf
outsb
pop
sti
add
mov
sub
cmc
add
or
js
sub
movsl
clc
pop
icebp
xor
xor
jae
xchg
lock
or
pushf
sub
mov
and
lret
subl
jb
shlb
sub
mov
xor
repnz
pop
iret
ds
ret
nop
imul
in
push
or
dec
cmp
push
mov
repnz
sub
mov
lds
inc
sub
xor
cmp
arpl
mov
inc
mov
sti
jecxz
push
ret
jmp
fistpll
cmp
fwait
mov
mov
mov
lret
xor
dec
mov
mov
lods
mov
jnp
in
ss
test
or
es
and
push
mov
sub
and
test
and
xchg
cmp
add
cli
cmp
das
add
outsl
int3
or
jp
mov
mov
loope
inc
outsb
lret
imul
repnz
push
adc
inc
push
cmpb
pushf
xor
inc
fildll
pop
pop
xchg
or
aas
int
mov
out
ret
xchg
into
cmpsl
lods
ret
xchg
cs
xchg
fwait
mov
mov
xor
dec
sub
jmp
outsb
rorl
jb
bound
push
add
jo
adc
ret
mov
rclb
mov
and
bound
push
add
jo
adc
ret
mov
rclb
mov
and
bound
push
add
jo
adc
mov
rclb
cmpsb
add
inc
and
bound
push
add
xor
loop
shrb
or
mov
mov
pop
std
sbb
or
lahf
lret
mov
push
mov
inc
push
mov
test
pop
cmc
dec
in
lds
lahf
xor
scas
add
call
inc
movzwl
movsl
aas
mov
test
jg
jg
outsl
lds
or
xlat
jge
dec
out
pop
push
push
sub
pusha
loopne
test
and
divb
ds
sub
xchg
ja
push
push
dec
fldenv
push
adc
cmc
dec
fwait
jp
jp
lcall
test
jo
mov
aad
mov
jae
dec
dec
jmp
gs
das
test
pop
sub
in
sub
sahf
gs
and
and
movsl
add
push
pop
or
jp
cmpsb
dec
sbb
pop
outsl
scas
iret
or
dec
in
push
xlat
cltd
mov
pop
inc
pop
cmp
movsl
ds
test
aad
cmp
outsl
vunpckhps
and
test
out
loopne
xorb
cmpsb
sbb
jg
outsl
aad
xor
scas
pop
enter
decl
push
lods
pop
mov
inc
in
push
repnz
mov
ficoml
add
and
sub
fsubl
dec
rorb
cwtl
sub
lock
out
and
mov
iret
push
pushl
mov
les
loope
pop
xchg
or
jecxz
shll
xchg
sbb
call
inc
pop
mov
movsl
aas
xchg
das
test
dec
in
aad
lds
adc
iret
call
inc
pop
mov
movsl
aas
xchg
das
test
dec
in
aad
lds
xor
push
mov
lods
add
jmp
dec
into
rcrl
xor
aaa
clc
add
test
mov
ss
mov
add
push
not
mov
cmp
cmp
inc
inc
cmp
jmp
xchg
add
les
rol
mov
ja
inc
lds
cmc
test
insb
xorl
mov
mov
and
sub
pusha
mov
sbb
incl
jae
adc
aas
pusha
in
subb
mov
loopne
cmpsb
cmp
daa
insl
loopne
int
xchg
jns
in
cmp
lcall
int3
push
loopne
mov
mov
cmpsb
adc
mov
jnp
inc
sbbl
adc
test
xchg
mov
add
sarl
out
insl
pop
lods
adc
mov
jmp
in
push
movl
push
cmpsb
and
pop
hlt
xchg
mov
mov
scas
mov
push
stos
lods
stc
dec
imulb
negl
adc
dec
xchg
pop
rorl
inc
dec
repz
push
jmp
sbb
jae
popa
repnz
and
imul
jle
sbb
int3
jmp
aad
aad
push
cld
and
mov
mov
push
lahf
mov
sbb
out
sub
pop
mov
inc
shlb
jge
loopne
mov
mov
pop
pop
push
xsha256
cmpsb
out
cmc
xor
jo
dec
lahf
jp
push
cmc
arpl
mov
shlb
mov
stos
pop
jno
inc
fdivrl
dec
cmc
lods
xor
xchg
mov
sarb
mov
xchg
icebp
mov
xor
cmp
bound
fidivrs
lock
insb
pop
dec
adc
arpl
push
inc
inc
xchg
lret
loop
dec
das
xchg
jae
fmull
aas
jbe
mov
lock
daa
adc
stos
mov
or
add
or
xorl
cmpsb
out
clc
push
pop
mov
mov
stos
in
sub
dec
sahf
loopne
mov
jmp
cmp
int
mov
push
fidivs
push
mov
mov
mov
test
push
mov
xor
jbe
scas
pop
loope
push
outsl
mov
loope
sbb
xlat
add
cmp
aam
pop
jbe
mov
add
add
adc
outsl
mov
rorb
xchg
ljmp
lods
bound
xchg
adc
nop
insb
out
dec
imul
imul
test
push
sbb
jle
sub
lock
push
movsb
fdivrs
inc
pop
and
cmp
or
mov
sbb
mov
jb
bound
repnz
and
jge,pn
sahf
outsb
in
ret
sahf
lahf
inc
lods
dec
sbb
sti
adc
push
addr16
std
movsb
stos
inc
in
mov
xchg
sahf
add
pusha
sub
mov
shll
push
stc
int
xchg
push
inc
outsl
push
jg
out
les
loope
sbb
inc
and
shll
mov
cwtl
stos
sbb
out
nop
shlb
xchg
nop
in
jb
add
das
cmp
or
push
daa
fwait
lds
xor
inc
ret
ret
addr16
pop
in
iret
aaa
nop
jge
xor
add
out
jbe
pop
in
jnp
es
pushf
pop
lds
pop
add
push
pop
add
neg
xchg
jl
dec
sbb
mov
das
roll
push
in
int
jae
stos
inc
aad
mov
mov
ss
and
sbbb
cmpsl
adc
mov
xor
xor
fcompl
push
fsubrs
and
or
or
aam
push
jno
in
hlt
mov
mov
and
push
gs
push
xchg
pop
roll
cli
rcl
lret
je
sub
loop
and
fstl
dec
les
jle
xor
not
fmull
xchg
inc
out
pop
lahf
fistl
mov
push
cmp
or
clc
insb
push
mov
loope
sti
push
dec
inc
fistl
inc
mul
fidivl
sbbl
int
and
nop
push
and
pop
jecxz
bound
lret
dec
loope
std
mov
push
lcall
shll
push
and
push
sti
ficoml
testb
push
repnz
push
inc
es
inc
hlt
sahf
cmp
pop
mov
xchg
in
mov
push
push
mov
sbb
push
nop
and
jmp
xchg
inc
adc
lret
xchg
jno
outsl
fs
test
repz
sbb
lods
shlb
mov
nop
push
pop
push
bound
xlat
xchg
bound
push
repnz
sar
jg
adc
fimull
idivb
or
bound
xchg
pop
ror
push
mov
push
ja
cmc
sbb
pop
sbb
inc
and
mov
lea
jns
and
push
jmp
int
fbstp
scas
mov
and
jae
repz
adc
aas
pop
add
es
inc
pop
jb
dec
jg
loop
push
and
mov
scas
pushf
pop
pop
test
push
or
pop
rorl
sub
stos
arpl
popa
mov
jae
shrl
aaa
mov
je
js
jmp
push
in
xchg
leave
int
adc
mov
popa
dec
sub
pop
dec
cmpsb
xchg
mov
sub
push
call
outsb
fbld
sub
dec
dec
mov
out
sub
jns
adc
cwtl
xchg
mov
push
push
pop
inc
je
lahf
nop
js
mov
jne
cmp
fadds
mov
iret
lret
les
enter
xchg
or
cltd
scas
inc
jbe
lcall
xchg
xchg
ficomps
or
loope
xor
cmp
xchg
pop
leave
ljmp
adc
leave
insl
jecxz
sbb
fildl
xor
cs
mov
gs
pop
jne
xchg
pop
int3
mov
xchg
xchg
sub
lret
cs
adc
movsb
lret
rorb
cli
push
ret
sub
lods
in
aaa
pushf
js
or
in
push
dec
mov
mov
leave
lods
xchg
int
mov
arpl
in
or
enter
and
push
nop
out
cmc
push
jbe
pop
call
mov
or
dec
mov
xchg
add
mov
cmp
and
cli
adc
vmulpd
mov
adc
gs
enter
dec
mov
mov
jnp
dec
fists
dec
shrb
in
and
aam
in
dec
adc
adc
js
cmp
xchg
jne
mov
les
mov
inc
cmp
in
dec
dec
inc
insb
add
sub
cwtl
jae
fdivp
mov
sub
jnp
fsubs
insl
js,pn
andb
stc
xlat
stc
or
dec
jns
test
gs
mov
jns
xchg
out
or
sbb
mov
pop
ret
clc
dec
repnz
jecxz
cmp
int3
mov
clc
ret
pop
cmp
xor
jae
fdivrl
frstor
pop
dec
or
imul
sbb
push
sub
sbb
xlat
loope
sub
popf
or
aam
aas
test
sbb
adc
ret
fs
mov
loop
mov
jno
inc
push
push
enter
sub
mov
sub
pop
insb
sub
inc
rcrb
out
sbb
dec
mov
cltd
in
push
cmp
test
jmp
ja
pop
stos
cmpsb
pop
int3
sti
push
sbb
push
jns
cs
les
out
loope
mov
and
sbb
jo
aad
and
pop
adc
push
xlat
adc
xor
xchg
cmp
lret
pop
iret
jb
ret
bnd
or
pop
jl
mov
cmp
cld
stos
xchg
mov
icebp
dec
cwtl
xchg
cmpsl
mov
mov
fistpl
test
ljmp
sti
push
scas
das
dec
jp
xchg
movsb
data16
push
je
outsl
sbb
xor
fadds
mov
mov
mov
bound
adc
cmp
dec
clc
stc
fidivl
xor
mov
ficomps
cmc
inc
lret
adc
mov
adc
push
mov
ljmp
xlat
xor
pop
add
fwait
rorb
or
mov
je
movsl
bnd
adc
stc
ret
dec
orl
pop
lret
push
pop
cmpsb
fyl2x
mov
push
iret
sahf
filds
add
scas
lods
cmc
fwait
xchg
mov
insl
cmp
adc
fwait
js
dec
xchg
mov
movsb
in
out
fwait
bound
jbe
pop
rclb
sub
mov
add
neg
loope
ja
mov
lock
stc
pop
xor
or
pop
or
fnstenv
xchg
rcll
fsub
jl
or
test
movsl
push
jmp
subl
dec
fildll
les
pop
mov
dec
fs
icebp
pop
and
sbb
sbb
cs
daa
pop
fcoml
inc
push
sbb
mov
xor
sbb
lods
clc
andl
mov
rclb
outsl
mov
lahf
gs
or
push
jmp
scas
adc
out
shll
stos
or
mov
outsl
std
sub
mov
cmp
inc
pushf
xor
mov
xor
xchg
fdivrs
pop
ds
pop
xor
outsl
xchg
mov
jno
add
imul
lahf
cmpsl
adc
xor
xor
push
dec
mov
pop
les
xchg
lahf
jno
pusha
sbb
scas
cmovnp
or
hlt
sub
pushf
ss
adcb
sub
test
loopne
mov
xchg
cwtl
lock
jmp
clc
mov
out
sub
repz
test
push
mov
mov
lret
shl
nop
dec
mov
test
mov
mov
shr
dec
aaa
mov
imul
cmp
xchg
jno
das
jae
insl
jae
arpl
fs
imul
push
jle
fmuls
arpl
sarb
cmpl
stos
cld
adcb
push
test
push
dec
adc
xor
mov
call
icebp
cmpsb
repz
clc
jbe
cwtl
jecxz
test
outsl
rcl
jecxz
sub
mov
mov
mov
lods
shlb
add
ss
mov
jp
jns
in
pop
rcl
arpl
flds
bound
mov
je
sub
mov
js
stc
mov
xchg
cmp
daa
jge
mov
popa
fbstp
pop
jne
mov
popf
mov
or
ficompl
out
dec
adc
push
push
xor
stos
cmc
addr16
test
scas
int3
lahf
mov
mov
cmpsl
cmc
push
fs
cmp
add
mov
mov
mov
lahf
jmp
bound
mov
or
les
gs
ret
std
insl
mov
arpl
or
or
cld
andl
push
movsb
pushf
lods
jg
inc
cli
fadds
iret
sahf
jle
mov
imul
push
fildl
rclb
nop
sahf
ds
pop
pop
nop
jl
cs
mov
add
out
and
sub
xorl
mov
fcom
push
dec
scas
jge
dec
ret
fsubr
cmpsl
jmp
add
decb
push
dec
rcrl
mov
and
adc
inc
ljmp
push
mov
xchg
xchg
fstp
inc
xlat
jne
dec
adc
push
and
push
inc
or
je
int3
mov
iret
addb
lods
dec
add
xchg
mov
mov
insb
out
int3
lea
jle
psadbw
mov
sbb
addr16
imull
arpl
stos
push
dec
shll
lea
popa
xor
and
shl
adc
subb
mov
lret
test
mov
and
loop
lcall
arpl
outsl
into
enter
jo
and
dec
out
xor
or
sbb
xchg
es
push
inc
movsl
cmpsb
and
jge
sbb
dec
jns
aam
mov
cltd
xchg
fstl
enter
rorl
faddl
add
jl
mov
and
out
ret
dec
xor
xchg
jns
iret
add
dec
jl
dec
lds
fildl
adc
mulb
shlb
add
into
or
adc
adc
leave
pop
push
mov
in
out
loope
mov
mov
mov
inc
nop
outsl
push
fidivs
out
jecxz
test
repz
int
jle
sbb
stos
push
popf
push
xchg
and
mov
scas
pop
lret
mov
mov
mov
ror
xor
sub
aam
in
jo
lods
xchg
dec
add
fdiv
daa
das
insl
clc
and
inc
add
inc
sub
and
movsb
or
out
rclb
dec
dec
xor
mov
mov
mov
out
mov
mov
lock
divb
aas
mov
push
xor
dec
mov
sub
mov
fcmovnbe
insb
sbb
jge
mov
pop
push
jb
jbe
sub
imul
movsl
dec
shl
out
xchg
enter
add
test
add
sbb
icebp
insb
jcxz
mov
or
fwait
dec
inc
ljmp
sbb
sti
mov
stc
lods
cli
and
mov
inc
lock
dec
inc
enter
cmp
mov
xor
das
fidivrl
mov
repnz
and
jge
arpl
ret
push
mov
mov
pop
rorl
fildl
iret
repz
jmp
add
jp
adc
pop
cmp
addr16
pop
cld
ljmp
fbld
adc
sub
mov
faddl
xor
fisubs
mov
push
rcrb
mov
sahf
insl
lcall
jbe
mov
and
push
sub
icebp
or
imul
add
ja
incb
in
aam
enter
cld
les
je
or
jbe
fldt
sub
incb
in
xor
std
in
mov
dec
fbld
cmpsb
inc
push
sti
xchg
mov
nop
idivl
outsb
mov
jecxz
jecxz
or
mov
push
push
or
mov
jmp
jmp
in
add
push
mov
mov
imul
filds
daa
jl
pop
cmc
xlat
lret
pushf
sbb
lods
mov
lock
lock
test
movl
jmp
pop
into
cld
dec
out
scas
sbb
lret
mov
push
or
xchg
mov
sub
sbbb
sti
add
pusha
mov
xchg
mov
inc
adc
out
mov
xor
shlb
sbb
stc
push
jb
inc
mov
lahf
or
rcrb
jb
iret
mov
mov
fisubrs
test
scas
jne
or
pop
call
inc
ficoms
aad
push
mov
add
cmp
mov
idivb
or
leave
divb
jp
push
aas
mov
and
cmp
xchg
in
mov
mov
fcmovnbe
int3
dec
sub
mov
shl
loopne
push
or
push
pop
sbb
adc
dec
sub
pop
jp
cmp
push
dec
into
data16
inc
pop
out
cs
xor
push
push
inc
aam
mov
movsl
and
and
sbb
arpl
repz
jb
mov
mov
push
add
cmp
ja
mov
out
call
lds
mov
pop
ljmp
and
adc
jnp
fildl
and
pop
mov
or
test
ss
in
dec
test
cmpb
arpl
inc
int3
xlat
cmp
ret
imul
les
mov
jnp
fimuls
lcall
dec
dec
mov
mov
sbb
sub
xor
inc
pushf
mov
jno
ds
jmp
mov
push
std
add
in
sub
js
repnz
stos
jno
je
out
pop
push
jmp
hlt
frstor
or
test
es
and
xor
cltd
sti
or
ja
test
pop
mov
inc
das
das
jno
or
cmp
or
in
lret
in
std
frstor
jno
add
cmp
or
or
xor
ret
sti
fldt
fistl
rcrl
lea
push
mov
loopne
iret
jne
dec
int3
adc
pushf
orl
lcall
jg
jp
out
push
aaa
push
hlt
out
xchg
movsl
xor
dec
or
mov
xor
popf
aaa
cmp
enter
addl
or
adc
or
jne
out
jo
push
cmp
daa
les
movsl
cmp
idiv
jecxz
cmpsb
or
add
inc
idivb
mov
cmp
xor
jmp
jp
lods
and
adc
nop
inc
sahf
sahf
mov
imul
cmpb
pop
imul
in
movsl
imull
fnstsw
pop
push
les
xchg
fisubs
inc
pop
test
cmp
cmp
mov
lds
addl
mov
negb
mov
jg
daa
popf
or
loope
add
lods
jo
mov
push
pusha
inc
lahf
hlt
int3
pop
jno
sahf
fnstcw
fwait
movsl
jg
mov
mov
out
cmp
sbb
add
jge
mov
mov
loope
rcll
mov
dec
jne
mov
xor
mov
fcomps
push
ja
mov
pop
mov
dec
sahf
cltd
iret
movsb
sbb
shrb
or
out
pop
mov
or
push
push
ljmp
cld
aam
sahf
xchg
cwtl
repz
repz
faddl
xlat
push
add
lock
cmc
repz
test
add
and
jp
mov
cwtl
mov
addr16
cmc
mov
dec
loop
mov
stos
mov
mov
cld
cmp
scas
lods
pop
int3
mov
in
scas
mov
lods
push
loope
dec
out
pop
cmc
cmp
lods
and
mov
mov
ret
mov
dec
jecxz
fstpl
imulb
xor
adc
test
cmpsb
adc
loope
arpl
xchg
cwtl
inc
jg
jecxz
add
ss
cmp
dec
repz
sti
jno
bound
loopne
and
mov
add
test
fdiv
dec
mov
addr16
ficoml
ss
mov
push
lahf
mov
jl
stos
les
sbb
decl
sbb
cmp
xor
mov
mov
fcmove
adc
and
stos
ja
fmull
push
sti
mov
fwait
mov
test
cmpsl
xchg
adc
xor
xchg
into
pop
pop
rclb
scas
je
shrl
mov
push
fdivrl
push
fildll
pop
ljmp
xor
mov
imul
enter
cmpsb
xchg
enter
xchg
xlat
pop
fadd
xlat
leave
enter
repz
jae
cmp
loop
push
imul
adc
adcl
dec
sbb
mov
out
stc
jle
test
cld
inc
lock
xor
mov
dec
add
mov
test
dec
jl
fidivrs
push
dec
adcb
adc
lods
push
sbb
push
jbe
rcrb
xorl
les
and
jecxz
loop
aas
sbb
xchg
mov
je
clc
add
int3
sub
jae
push
mov
mov
adc
or
or
inc
jno
push
lret
or
dec
call
aaa
mov
and
pop
or
fmuls
and
mov
push
test
mov
jecxz
data16
movsl
fcmovne
xor
imul
or
sub
loop
mov
push
psllq
or
push
outsb
dec
and
sub
in
ret
in
and
ss
jb
imul
std
mov
sub
cli
and
xchg
inc
stc
pop
sub
or
xchg
popa
add
loopne
jle
repz
nop
out
pop
xchg
in
daa
cld
mov
mov
shrl
pushf
ss
out
idivl
xor
das
jo
je
pop
ffreep
dec
dec
mov
insb
push
inc
mov
fistpl
pop
xor
rorb
jo
scas
jl
outsb
lcall
inc
inc
jae
outsb
xchg
mov
fidivrl
adc
out
cmp
iret
jae
pop
inc
mov
inc
in
mov
mov
jmp
lahf
cmp
xor
test
in
divb
in
inc
cmpsl
add
pusha
pop
sbb
insl
test
or
jo
pop
add
hlt
enter
ljmp
cmp
imul
push
mov
fistpll
das
stos
pushf
inc
dec
dec
lahf
jmp
inc
adc
stos
and
fbstp
call
inc
pop
mov
movsl
aas
xchg
das
test
dec
in
aad
lds
adc
iret
call
inc
pop
mov
movsl
aas
xchg
das
test
dec
in
aad
lds
adc
iret
call
inc
pop
mov
movsl
aas
xchg
das
test
dec
in
aam
lds
adc
iret
gs
outsl
inc
loopne
lock
sbb
dec
fwait
pop
stos
push
jp
inc
stos
jns
or
fisubrl
ljmp
imul
pop
stos
push
jp
or
sbb
sub
inc
or
sbb
pop
ljmp
imul
pop
stos
push
jp
or
sbb
sub
cmp
lret
pop
cwtl
adc
int
les
adc
add
jp
sub
pop
pusha
mov
shrl
iret
dec
mov
and
in
sbb
rcrb
ss
or
loopne
or
and
mov
dec
push
push
test
jae
adc
add
jl
add
lcall
jno
aam
push
stos
jmp
rcrb
into
setp
inc
cmp
adc
xor
sbb
imul
or
cmp
xchg
ljmp
xchg
cmp
pop
lcall
mov
cmp
or
rclb
jo
pop
rcll
jle
ja
pop
leave
imul
pop
stos
push
jp
or
sbb
sub
cmp
lret
sub
cmp
dec
mov
imul
sbb
push
jp
outsl
xchg
jae
insb
mov
fisttpl
push
mov
leave
xor
das
shrl
hlt
mov
jmp
jp
data16
jmp
sti
pop
outsb
sbbl
lahf
cs
fwait
sbb
jnp
loop
call
ret
pop
lret
and
sbb
sub
cmp
lret
sub
cmp
dec
mov
imul
pop
stos
push
jp
or
sbb
sub
cmp
lret
sub
cmp
dec
mov
imul
xor
xchg
cmc
push
movsl
in
bound
insb
inc
mov
push
ljmp
or
arpl
call
cmpsl
mov
cwtl
inc
lahf
dec
cmc
int
imul
hlt
or
std
stos
das
imul
int
xchg
sbb
cli
adc
pop
push
inc
test
fcoml
push
add
pushf
adc
jecxz
ss
popf
lock
adc
mov
xor
push
or
iret
stc
pop
push
adc
ja
out
xor
in
popa
mov
and
mov
sub
out
cs
and
pop
push
inc
pop
jo
fildll
mov
aas
mov
sbb
adc
xchg
outsb
fs
lea
mov
std
mov
outsb
fcoml
addr16
push
mov
jmp
sbb
movsl
imul
lahf
cmp
ss
fidivrs
test
sub
rclb
stos
pop
xlat
in
push
in
dec
push
inc
or
arpl
cmp
orb
xor
data16
push
dec
aad
inc
cwtl
inc
push
push
mov
xlat
xchg
lea
push
movsb
sub
ror
cwtl
ret
cs
imul
pop
adc
jecxz
xchg
xchg
cli
push
cmc
sub
sub
adc
push
jg
loop
stos
outsb
cmp
popf
jns
es
lock
xor
int
sti
hlt
mov
ss
adcl
jnp
cmc
daa
xchg
sub
int
xchg
cmp
sub
dec
movsl
inc
push
jge
push
or
jmp
jge
sub
hlt
sub
jg
jle
je
mov
mov
inc
add
and
xor
inc
enter
push
into
and
jns
pop
in
or
jmp
xor
mov
sub
pop
lahf
pop
inc
sbb
dec
and
dec
xor
adc
mov
mov
divb
ret
lahf
ds
mov
adc
dec
shrb
lahf
ljmp
enter
cmp
sbb
xchg
fmuls
orl
lret
stos
cmp
scas
imul
dec
nop
xchg
jg
jns
pop
aas
ret
std
fstps
repnz
aam
loope
es
stos
sub
xchg
push
loope
pop
in
xor
ret
sub
clc
jp
adc
cmp
push
std
aaa
bound
or
and
sub
cmpsl
push
adc
test
jecxz
fs
out
scas
mov
bnd
je
sub
imul
stc
data16
cmpsb
cmp
or
gs
movsb
and
push
lret
push
jne
ja
cmpsl
mov
mov
imul
pop
sti
cltd
cmp
ss
cmpsb
cmp
iret
push
mov
nop
aaa
mov
pusha
mov
mov
sub
repz
adc
push
jnp
xchg
jle
ja
inc
and
inc
mov
cmp
dec
adc
flds
adcl
pop
xor
scas
jge
insl
data16
int
cmp
push
mov
jl
cltd
jle
xor
push
icebp
loopne
add
or
loopne
outsb
pop
aas
cmpsl
mov
scas
inc
je
jo
add
das
scas
insl
loop
mov
test
add
sbb
and
in
jg
enter
add
pop
scas
scas
mov
add
adc
lret
xchg
push
inc
add
cli
lock
outsl
popa
aam
inc
mov
jo
inc
lock
popa
xchg
dec
cs
dec
divb
mov
mov
mov
cltd
mov
mov
dec
and
jb
add
add
aad
push
lea
ret
rcrl
rol
cli
xlat
add
aam
ljmp
push
jns
repnz
cmpsl
sbb
cmc
mov
call
repz
das
sub
dec
dec
xchg
sbb
adc
es
push
jbe
arpl
adc
mov
mov
cmp
xor
ret
sbb
push
in
leave
jge
ja
pop
add
sbb
xor
imul
xchg
test
sbb
mov
push
inc
xchg
outsb
jmp
push
jp
or
xor
orb
mov
daa
imul
sbb
mov
and
mov
mov
pop
xchg
sub
outsb
cmpsb
inc
push
sahf
out
add
mov
movsb
imul
cmp
mov
sarl
mov
xor
or
jo
push
push
xor
jns
jg
jnp
test
popa
xchg
in
jae
sbb
rolb
push
add
mov
pushf
arpl
jns
mov
xchg
lret
outsb
mov
hlt
cltd
adc
mov
add
sub
mov
mov
in
test
rcll
sbb
testl
inc
mov
lahf
scas
inc
adc
mov
lods
sub
cs
hlt
into
ljmp
push
mov
xor
jge
decb
jnp
mov
insb
insl
dec
sub
das
jp
ret
cli
out
mov
test
and
push
jmp
xchg
fldcw
les
jbe
stc
test
push
adc
stos
cld
jo
rol
inc
push
enter
or
jge
das
int
sbb
inc
addl
sbb
loopne
cmp
fcmovbe
pop
pop
and
insl
mov
loopne
clc
lahf
or
sbb
pop
icebp
pop
push
aad
inc
xor
outsl
cltd
adc
enter
ja
in
js
xchg
xchg
push
inc
mov
pop
ror
and
xorb
icebp
cmp
push
dec
push
sub
loope
lahf
mov
xor
outsl
and
into
imul
repz
add
fwait
sti
adc
ss
les
and
arpl
fwait
pushf
push
dec
dec
add
fidivrl
loopne
inc
loope
and
push
call
std
pop
dec
enter
leave
xor
dec
adc
mov
push
leave
xor
xlat
dec
inc
mov
flds
out
inc
push
cmp
into
add
repnz
push
inc
jns
and
aam
or
mov
bound
divl
lret
pop
sbbb
andb
cmp
sbb
sub
loope
dec
out
adc
icebp
or
inc
pop
psubq
rcr
mov
fidivrs
lret
mov
hlt
loop
pushf
adcl
daa
in
dec
push
jl
negb
mov
stc
adc
lahf
mov
dec
mov
add
arpl
pop
pop
rcrl
loope
xlat
add
sbb
rcr
and
mov
mov
xlat
mov
and
out
pop
jno
pusha
andb
imul
xchg
jb
sub
ds
iret
pop
nop
push
xor
push
add
jmp
fs
jae
das
pop
push
stos
sub
js
mov
mov
mov
mov
inc
fnstsw
mov
neg
mov
pop
pop
push
lret
cmp
adc
xor
je
dec
out
loop
in
inc
ret
mov
sarb
jecxz
cmp
not
inc
fcoml
or
repz
in
jp
mov
decb
inc
movsb
or
jl
imul
inc
mov
mov
sbb
loop
add
fnstsw
dec
and
push
mov
sbb
mov
stos
xchg
pop
pop
insb
jl
add
cwtl
cmpsb
scas
fcompl
jmp
cli
jae
mov
rcl
test
mov
in
cmpsb
and
fmull
lahf
js
mov
les
mov
jg
sbb
push
ljmp
adc
mov
or
xchg
inc
dec
mov
xlat
mov
xchg
scas
jecxz
jb
loope
nop
fbstp
cmpsl
cmp
mov
mov
ljmp
mov
imul
jns
add
mov
dec
sbb
leave
cmp
loope
xchg
xchg
mov
xor
jmpw
in
pop
pop
dec
iret
lcall
cmp
push
imul
icebp
sti
cmpsl
call
inc
lret
test
pop
push
lods
jo
loop
sbbb
repnz
mov
cmp
insl
popa
jmp
adcl
stc
push
clc
ss
adc
or
push
mov
movsb
leave
hlt
insb
les
call
or
dec
std
pop
pop
popa
les
iret
and
cltd
popa
dec
mov
addr16
or
addr16
loope
adc
shlb
adc
xor
out
jne
inc
sbb
call
lcall
outsl
or
pop
clc
pop
leave
xchg
cmp
mov
push
rcrl
out
mov
stc
adc
aam
pop
fisubl
rcrb
push
iret
je
jbe
cld
stos
leave
repnz
push
dec
out
mov
jp
fildl
rcll
pop
xlat
into
stos
das
outsb
xchg
and
cmc
cmpsb
mov
fildll
xchg
jmp
inc
imul
lock
lahf
cmp
pop
out
fsubl
xchg
enter
aas
jle
fcoml
push
fisubl
and
xor
je
mov
fists
sub
xchg
adc
mov
inc
adc
scas
mov
out
jo
orb
xor
ss
lods
in
mov
xor
dec
and
sahf
pop
cld
and
out
xor
test
jp
repnz
enter
adc
rolb
pop
sahf
ja
repnz
pop
mov
add
mov
loop
cli
mov
ret
fldt
enter
cmpsl
leave
stos
lret
imul
jl
rorb
push
lock
pop
pop
add
jl
outsb
xchg
xor
and
fidivrs
pop
cwtl
mov
add
lret
pop
jl
rorb
mov
xor
dec
in
adc
lret
mov
ret
sub
sbb
sar
add
outsl
push
cs
and
sbb
lea
gs
xchg
mov
popf
in
jo
adc
mov
loop
dec
bound
mov
test
inc
rorb
dec
mov
and
push
addl
mov
push
sbb
push
inc
pushf
daa
int3
iret
test
int3
dec
stos
lahf
enter
cltd
adc
mov
vmaxsd
mov
out
filds
lret
es
out
cmp
repnz
ljmp
in
aaa
jmp
inc
or
push
pop
enter
xchg
push
call
xor
fmuls
cwtl
rcr
incb
mov
add
fmul
fcmovnbe
incb
add
or
not
jecxz
test
mov
push
call
fildll
sbb
imul
mov
je
mov
cmp
out
push
sub
daa
cmpsb
pop
sbb
add
add
cmp
stos
repz
and
pop
push
cltd
pop
cmc
xlat
sbbl
inc
cwtl
je
mov
push
arpl
mov
insl
cld
mov
mov
sbb
cmp
aas
iret
fs
pop
dec
pop
test
mov
fsts
push
fisttpl
sub
pushf
iret
inc
or
push
lods
push
dec
fwait
pop
pop
mov
or
fucom
push
fnstenv
enter
jg
or
jg
inc
clc
mov
das
mov
aam
test
sahf
sub
pushf
xor
cmp
gs
mov
jbe
leave
out
mov
mov
cmp
mov
pop
mov
fs
dec
xchg
orl
and
fs
cmpsl
mov
daa
out
daa
pusha
ljmp
mov
lcall
inc
push
add
pop
sub
push
es
imulb
pop
out
lods
out
add
addr16
lahf
mov
pop
out
sbb
jge
or
ja
cld
es
push
push
jno
cmpsl
push
rclb
cmp
mov
popf
ret
je
cmpsl
ss
cmp
cmp
imul
mov
dec
cmc
push
cltd
repz
mov
lahf
pop
cld
bound
sti
test
in
cmp
fildl
lahf
xchg
and
xor
js
jle
mov
push
mov
mov
push
nop
push
cmp
into
push
dec
jnp
push
jbe
daa
pushf
or
jecxz
sbbb
pop
mov
int
push
mov
test
inc
lods
push
stc
or
rcrl
xor
clc
and
add
sarl
scas
or
cs
mov
jo
inc
insl
pop
imul
jmp
sub
inc
adc
jle
sbb
add
es
push
cmc
inc
pop
cmpsl
jmpw
mov
test
imul
push
sbb
sub
into
jecxz
jmp
fsubs
je
adc
out
cs
ficomps
sub
outsb
lods
inc
adc
sub
sub
adc
lret
leave
dec
daa
pop
test
push
dec
scas
fdivrl
lods
mov
inc
sbb
repnz
sbb
daa
dec
push
dec
lock
negl
dec
sbb
cmc
mov
jbe
jmp
cmp
rol
push
push
cmp
shr
ror
cmpb
jne
or
cmpsb
xor
adc
cs
jns
stos
and
inc
fwait
add
push
aad
add
movsl
push
xchg
insb
data16
or
fwait
or
pop
shll
outsl
sub
push
lret
lret
pop
ret
push
pop
xchg
repz
punpckhdq
pop
cmpsl
sti
adcb
mov
orb
jne
out
stc
jbe
lret
pop
xorl
pushf
dec
jbe
je
loop
inc
xor
add
ss
add
dec
sbb
enter
daa
lea
jmp
ret
std
inc
and
adcl
or
pusha
or
sahf
push
cmp
pushf
push
mov
add
ret
in
idivl
leave
loope
loope
outsb
push
mov
pushf
inc
mov
dec
ja
in
sub
sub
cwtl
xchg
cmpsl
shr
gs
icebp
js
sbb
push
push
push
or
mov
repz
adc
je
aad
cmpsl
xor
cmp
mov
adc
add
imul
adc
divl
cmpsb
outsl
lcall
cmc
std
pop
sub
les
xor
jmp
push
xchg
mov
fadds
ret
adc
adc
out
aam
in
aaa
pop
cltd
les
mov
mov
inc
dec
mov
add
outsl
sti
cmp
enter
fildl
push
movsb
loopne
es
sbb
in
loopne
add
fcmovnb
loopew
movsl
xor
cmpsb
lret
cmp
adc
nop
sti
xchg
or
mov
ret
int
push
xchg
adc
mov
or
or
sbb
std
insl
aaa
popf
out
lock
push
mov
jl
mov
jnp
sbb
sub
pop
push
or
clc
loop
mov
jns
push
mov
insb
mov
inc
pusha
push
es
cmc
stc
xchg
inc
lds
mov
test
push
orb
in
add
pop
mov
xchg
jno
repz
int
add
xlat
pop
fidivrs
daa
dec
je
mov
cmp
push
adc
jl
lret
outsl
sbb
pop
or
push
cmpsb
xor
adc
inc
outsl
mov
mov
xchg
and
inc
divb
push
mov
shll
sbb
cmp
into
jno
adc
cmp
mov
sti
lret
notl
or
jmp
xor
mov
mov
jne
shlb
aad
adc
loop
inc
popw
mov
xchg
sysexit
fs
inc
test
roll
loop
lock
xchg
pop
out
fwait
pop
aas
lret
std
ljmp
pop
jg
ret
pop
les
sbb
stos
pushf
xor
jns
addl
stc
jmp
inc
jge
clc
push
pop
repz
in
inc
adcb
das
sahf
repz
popf
mov
test
mov
jnp
lret
lret
sbb
xchg
push
cmp
orb
or
inc
inc
arpl
mov
ljmp
sub
mov
add
cmp
or
jg
dec
jo
les
mov
add
icebp
push
or
xchg
fdivrl
popf
xchg
adc
push
dec
lea
sub
and
mov
mov
loop
jo
inc
lret
xor
push
inc
dec
les
sub
dec
mov
data16
sub
xchg
les
mov
push
cmp
push
lock
or
lods
loop
ror
test
pushf
iret
ds
xchg
pop
ja
jge
cld
shld
sub
sbb
shl
bound
leave
push
mov
mov
pop
xchg
lock
out
adc
loop
cli
call
add
pusha
sbbb
adc
les
mov
aad
xorb
sti
out
jnp
loopne
lds
out
addr16
out
push
dec
inc
cmp
in
lock
sbb
mov
xor
andb
ret
test
jae
cmp
das
mov
lods
add
xchg
lret
jns
xor
je
lods
push
fstpt
mov
lea
dec
imul
lret
lcall
dec
inc
clc
or
mov
xchg
jg
mov
adc
in
clc
cs
ret
cmp
ficomps
mov
push
in
sbb
cli
adc
adc
sbb
cmpb
xchg
pop
rorb
cmp
int
xlat
or
out
stos
sub
pop
sbb
and
cmc
or
jmp
inc
mov
add
aad
xor
push
repz
add
minps
add
cmp
or
int3
and
cwtl
adc
adc
addl
cmp
lock
leave
or
sbb
adc
mov
jnp
mov
out
xor
out
das
jae
popa
push
xchg
add
cmp
into
xchg
ret
addl
sub
adc
imul
cli
push
inc
insb
sub
inc
sbb
xor
das
movsl
mov
sbb
fstps
lock
jecxz
fst
dec
faddl
cwtl
and
pop
or
loope
ds
add
ljmp
adc
out
test
cmpsb
push
jb
imul
jp
cs
ss
mov
add
mov
cltd
pop
cmpsb
faddl
aad
pop
or
into
in
mov
orl
jb
jnp
leave
daa
stc
in
pop
push
sub
iret
mov
mov
jnp
xchg
adc
or
loop
in
pop
jne
sub
testb
lahf
lods
sbb
pop
test
inc
sub
cli
push
mov
and
fwait
lds
cmp
add
lods
xor
pop
imul
and
neg
xchg
cmpsl
push
movsl
cmpsl
adc
aam
aas
cmpsb
in
xchg
imul
shrl
int
in
pop
dec
jb
jle
sub
or
sbb
xchg
shr
loop
stc
lods
jecxz
cmp
adc
mov
and
mov
jno
xchg
pusha
in
add
add
dec
ret
xchg
push
inc
xor
ret
and
pop
shrl
and
lahf
sub
js
mov
imul
mov
clc
adc
repnz
cwtl
nop
lods
pop
pop
nop
aam
in
aaa
push
test
sub
push
sbb
iret
pop
pop
and
data16
mov
cmp
cwtl
and
mov
aas
xor
addl
sbb
test
add
push
movsl
mov
pushf
stos
int3
imul
fxch
jno
push
sbb
mov
jns
cld
mov
pushf
in
enter
inc
cwtl
cmp
or
scas
lea
test
mov
and
cmpsl
push
stos
arpl
mov
add
or
fcmovnb
mov
repz
push
xor
lahf
pusha
inc
adc
rol
cmp
ret
mov
mov
push
jge
rorb
es
fwait
sbb
cmp
cmp
pusha
jle
mov
or
dec
jno
and
cmp
in
negb
adc
or
pop
push
mov
fs
jecxz
mov
movsl
add
push
jmp
or
adc
add
les
sub
andl
insb
aas
ja
das
pop
sti
or
lea
push
sbb
icebp
xchg
cvttps2pi
into
lahf
repnz
xor
cmc
int
daa
insb
fildll
push
add
sub
divl
loop
xchg
je
mov
fildll
out
adcb
mov
mov
and
sbb
leave
or
adc
sbb
mov
aas
sub
jbe
sbb
push
inc
inc
or
xor
mov
jp
or
sbb
sub
cmp
lret
sub
cmp
dec
mov
imul
pop
stos
push
jp
or
sbb
sub
cmp
lret
sub
cmp
dec
mov
imul
pop
stos
push
jp
or
sbb
sub
cmp
lret
sub
cmp
dec
mov
imul
pop
stos
push
jp
or
sbb
sub
cmp
lret
sub
shll
push
test
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
add
inc
and
arpl
adc
adc
ret
mov
xchg
rolb
loopne
lock
and
arpl
push
add
jo
adc
mov
add
lock
and
arpl
push
add
jo
cmpb
int3
xchg
mov
rcl
in
xchg
rcrl
and
xor
jmp
pop
lret
sub
xchg
or
add
iret
pushf
mov
xor
adc
outsb
aas
out
outsl
mov
jge
push
or
push
daa
test
lret
sahf
and
iret
subb
cmp
xor
nop
xchg
lods
inc
test
add
rorb
arpl
inc
add
mov
adc
mov
stc
nop
jl
dec
lds
pushl
iret
pushf
sbb
push
push
jecxz
xor
xchg
and
subl
mov
icebp
cs
jecxz
mov
mov
inc
jo
xlat
cmpsb
pusha
ret
pop
jecxz
loop
xchg
movsl
cmpsl
jo
int3
push
adc
jae
arpl
push
add
jo
adc
ret
mov
xchg
rolb
inc
cmp
inc
dec
sbb
inc
jg
add
cmc
mov
fwait
enter
shl
xorl
inc
inc
jae
adc
adc
and
stos
shll
lock
repz
adc
pop
push
or
push
add
jo
adc
ret
mov
xchg
rolb
add
inc
and
arpl
push
add
jo
adc
ret
mov
xchg
rolb
add
or
fists
mov
in
xor
es
pusha
mov
jns
dec
hlt
pop
enter
push
insb
add
sub
fstps
pusha
lcall
decb
aas
sub
and
inc
or
iret
cmp
add
inc
rorl
add
push
sub
rcrl
in
loopne
sbb
int
cld
dec
fdivrl
outsb
fbstp
aad
into
stc
adc
xchg
add
dec
adc
xor
fisttps
js
mov
adc
loopne
or
loope
cwtl
sti
jnp
push
push
not
xchg
shr
jecxz
or
addl
sub
cld
sbb
mov
adc
jnp
in
call
xchg
mov
push
fcompl
push
shrl
das
jg
pop
fwait
pop
push
pop
pop
enter
cmpsl
and
adc
in
mov
sbb
dec
cld
nop
sub
cmp
movsb
aam
push
fmuls
scas
fnstsw
sub
jno
jmp
adc
mov
sbb
das
or
out
inc
sti
or
in
cli
pusha
push
cmp
adc
sbb
lret
pop
push
sub
les
cwtl
sub
dec
jecxz
hlt
xor
mov
loope
adc
jmp
pop
mov
stos
cmpsl
loope
gs
sub
data16
fisttpl
xor
in
sarb
outsl
xor
loope
mov
insl
mov
mov
bound
ljmp
pushf
push
push
sbb
cmp
pusha
jns
mov
ds
cmp
inc
xchg
cmc
pushl
jb
mov
gs
sub
mov
dec
xor
aas
and
inc
and
loope
repz
sub
pop
in
mov
jb
roll
paddw
sbb
jb
leave
add
test
mov
jle
sar
pushf
pushf
add
dec
push
icebp
xor
pop
add
arpl
je
cmp
push
add
mov
cmpsb
aad
fwait
push
or
ds
inc
lods
mov
push
jecxz
mov
mov
inc
test
inc
aam
sub
inc
notb
push
lcall
inc
jno
push
rcl
cmp
out
out
jg
insl
mov
mov
test
lcall
aaa
or
aam
ljmp
cmp
sub
lods
xlat
aad
xor
in
dec
xchg
adc
add
les
ljmp
add
dec
mov
jb
mov
sub
leave
iret
inc
xchg
add
xor
jb
xchg
arpl
xor
dec
or
push
xchg
push
fdivrs
out
lahf
xor
inc
outsb
ret
dec
and
fisubs
jb
mov
or
sbb
xchg
cmpsb
push
cmpsl
mov
out
pushf
mov
cli
std
sahf
popf
inc
sub
adcl
mov
lea
into
nop
lods
pop
and
mul
xor
mov
cli
out
aaa
push
xchg
add
fldenv
jno
mov
add
nop
outsl
add
lcall
add
lea
loope
xor
push
dec
jb
cmc
into
fdivl
test
into
jge
xchg
jle
sahf
fs
mov
rcl
aad
fnstenv
insb
adc
int3
loope
std
cmp
jae
cmp
push
out
aam
sub
test
push
cmp
outsl
fldenv
pusha
shrb
xchg
cmc
cmpsl
jns
or
or
mov
scas
icebp
mov
adc
xchg
cmpsb
and
mov
ja
mov
xchg
jns
les
adc
icebp
rcr
jge
repnz
inc
or
sbbb
neg
leave
dec
mov
jae,pn
aam
dec
mov
inc
dec
jo
inc
or
inc
mov
shll
addb
add
sbb
sbb
js
cmpsl
xchg
fwait
mov
jmp
sub
sub
dec
xlat
es
mov
mov
leave
jp
dec
push
xchg
int
fyl2xp1
dec
jae
popf
cmpsl
into
pop
imul
lret
shll
testl
dec
mov
test
inc
dec
pushf
aad
es
jp
push
lods
ljmp
int
shll
xchg
popl
es
xchg
push
inc
push
pop
mov
shrb
mov
insl
sar
xchg
fcmovu
icebp
jb
iret
test
loopne
sbb
in
adc
hlt
frstor
imul
aad
jno
adc
push
fcompl
movsb
jbe
mov
js
popf
sub
push
in
ljmp
insb
push
popa
xchg
mov
dec
adc
mov
adc
dec
and
stos
pusha
rcr
andb
int3
ds
popf
test
loop
pop
shrb
mov
sub
in
push
in
mov
cli
aad
mov
mov
leave
mov
mov
xchg
enter
insb
xchg
insl
jns
test
mov
xchg
pop
jno
lods
gs
pop
xchg
icebp
daa
push
or
xor
xor
sub
call
scas
sub
out
aam
dec
jne
jmp
mov
cmc
sub
scas
shll
in
aas
ficomps
rol
jbe
cld
and
pusha
xlat
sbb
ljmp
adc
shlb
cmpsl
jbe
mov
add
xchg
sbb
pop
repz
mov
xchg
adc
out
cwtl
push
jge
gs
push
xchg
xchg
jl
insl
mov
pop
jge
cmpsb
xchg
stos
mov
jmp
aaa
outsl
dec
mov
or
pushf
lret
addr16
mov
outsb
xor
or
xor
mov
cmp
push
test
mov
int3
fildll
inc
sbb
mov
push
je
rcr
cmpl
stos
xchg
adc
xor
sti
int3
je
test
pushl
mov
and
fcoml
loopne
sti
filds
arpl
inc
rcrb
in
jmp
and
imul
mov
lods
mov
cli
fcoml
add
mov
loope
ffree
pop
testl
out
mov
sbb
sbb
int3
push
cmp
lds
pop
xor
call
mov
xchg
stos
push
mov
enter
inc
pop
push
repnz
addr16
cmpl
int3
jmp
xor
loopne
cwtl
push
mov
jl
jmp
push
push
xlat
seto
and
mov
daa
scas
iret
dec
add
out
pop
mov
jmp
insb
es
push
inc
fistps
add
inc
jae
xor
lods
sbb
mov
xor
sbb
insl
testb
fistl
jp
jge
rcrl
xor
in
lret
cmpb
sbb
adc
xchg
adc
lds
pop
adc
add
aad
div
aaa
push
jl
xchg
add
aad
lret
sbb
sbbl
ja
jle
into
cmp
jecxz
mov
fsubs
push
imul
pop
mov
pop
shll
not
imul
bound
mov
cs
cld
cmp
pop
jp
addr16
bound
add
xchg
iret
jb
sbb
negl
mov
pusha
push
cmc
pop
imul
and
fistpl
stos
clc
arpl
inc
pop
in
rorb
cld
mov
push
inc
mov
das
es
orl
jns
cltd
je
out
xor
ret
inc
imul
sbb
orb
hlt
les
dec
sbb
fwait
and
mov
mov
mov
lods
or
mov
cmp
pushl
mov
push
andl
ljmp
aaa
popf
pop
jo
jmp
add
movl
lods
dec
pop
sti
jge
lods
cwtl
loopne
inc
push
xchg
jnp
jl
or
fmul
lcall
out
xchg
jns
push
sbb
outsb
lcall
adc
push
bound
daa
das
shlb
loope,pt
sbb
mov
movsb
push
popa
mov
mov
out
hlt
jo
test
cwtl
movsl
pushf
inc
dec
xchg
mov
pushf
pop
mov
test
push
fidivs
pop
and
fsin
arpl
adc
inc
insb
dec
cmp
mov
out
std
test
pusha
pop
mov
adc
xor
or
inc
fs
and
add
push
es
ljmp
test
pop
pusha
add
add
pop
daa
mov
adcb
jmp
insl
cmc
test
lods
inc
nop
pop
jno
pop
mov
lret
test
icebp
dec
cmp
shl
push
jmp
dec
in
rcr
add
inc
xchg
mov
fldt
cmc
mov
ljmp
dec
adc
in
sarl
ljmp
xor
loop
inc
popf
sbb
mov
fstpl
frndint
adc
mov
imul
mov
cmpsl
and
test
and
fcmovb
jecxz
pop
shr
and
cmpsb
jmp
sbb
je
and
scas
outsl
call
adc
inc
addr16
js
mov
hlt
mov
dec
mov
data16
xchg
movsb
lock
mov
fdiv
jg
jmp
popf
int
sbb
aam
inc
mov
imul
scas
push
push
xor
scas
mov
repz
mov
adc
pop
test
test
cmp
inc
push
add
lret
imul
mov
add
lret
add
sbb
in
movsb
xor
aad
inc
push
and
push
ds
js
push
outsb
dec
lret
sarl
sub
and
push
or
push
sub
inc
hlt
in
adc
gs
cmp
lea
aam
dec
lret
dec
sbb
xor
loopne
sbb
repz
or
and
mov
fisttps
push
pop
xchg
push
stos
fsubs
push
scas
fdivr
iret
in
dec
rcll
loopne
jg
xor
aaa
movsl
mov
int
loopne
rcrl
dec
scas
out
in
xor
xchg
push
jg
push
mov
jl
leave
js
cli
lods
sub
es
pop
orl
sahf
addl
aaa
add
popf
pop
xchg
pop
fistl
dec
rclb
pop
cmp
in
scas
clc
arpl
xor
push
push
test
jge,pn
repnz
add
decb
movsl
cmp
fwait
xor
sarb
insl
pop
ljmp
push
mov
jmp
ljmp
xchg
rcl
rcr
int
jo
pop
and
sar
js
mov
xchg
push
ja
dec
inc
in
push
xchg
and
int
in
push
xor
push
fbstp
orl
movl
mov
sti
test
mov
and
or
push
lret
cmp
fld
push
test
pushf
out
movsb
js
jge
loopne
and
mov
cltd
outsb
fwait
dec
pop
mov
sub
push
aas
hlt
mov
nop
push
and
pop
int3
sbb
sub
pop
enter
xchg
push
aas
dec
out
xor
mov
icebp
mov
nopl
mov
pop
test
in
mov
adc
push
xor
push
leave
clc
pop
sub
jae
leave
mov
push
or
jbe
je
cmpsb
data16
inc
xchg
mov
scas
or
or
test
lock
lock
mov
pushf
out
inc
daa
sarl
mov
movsb
testl
mov
dec
outsb
or
xchg
scas
icebp
mov
cwtl
jl
xor
mov
mov
mov
push
gs
frstor
adc
push
lods
repz
test
shrb
icebp
push
and
or
inc
xchg
idivl
in
sbb
dec
imul
dec
inc
scas
jp
push
xor
xor
out
add
sbb
push
rcr
and
adc
inc
dec
cmp
sbb
cmp
inc
mov
stos
call
push
sarl
xchg
pop
or
hlt
add
add
xor
jbe
jg
sub
pop
test
xor
ret
inc
out
rcrb
lea
jle
mov
mov
mov
or
xchg
pop
xchg
pop
mov
sqrtps
outsl
stos
out
movsl
popa
sbb
push
cli
imul
inc
insb
xchg
xchg
add
add
jge
stos
in
outsl
cmc
out
std
xchg
add
mov
mov
das
dec
out
xchg
cmp
add
scas
stos
mov
cmp
mov
cmc
sti
mov
mov
mov
std
jne
inc
scas
jo
mov
dec
xlat
repz
cmp
add
adc
sub
dec
cwtl
fsubl
lods
xchg
mov
or
ficoml
int3
and
sbb
sbb
dec
lea
add
movsb
xchg
dec
sub
cli
daa
data16
gs
pusha
xorl
imul
into
ss
mov
jne
js
mov
call
rol
pop
pusha
fistpll
sub
mov
call
inc
adc
dec
stc
cmp
mov
and
adcl
pop
cmp
push
sbb
sub
scas
pusha
loop
icebp
movsl
popa
xchg
popf
xchg
mov
add
lea
notb
xchg
rcr
insl
jle
xchg
shll
lcall
push
cmc
icebp
jb
pop
inc
sar
fcmovne
sarl
xlat
pop
movsb
mov
push
dec
jmp
adc
insl
outsb
int3
pop
jb
dec
call
cs
cmp
sub
rsqrtps
arpl
fnstsw
lcall
push
xchg
insb
pop
scas
xor
mov
add
pop
mov
push
std
subl
mov
add
jmp
sbb
push
jno
das
mov
pop
push
or
call
add
mov
jecxz
fsubrs
cltd
fstpt
jns
outsb
xor
mov
clc
fsubrl
ret
mov
sbb
dec
adc
dec
sahf
dec
sub
fnstsw
enter
outsb
dec
jns
jp
ret
push
popf
lds
repz
jl
add
mov
dec
mov
fisttps
lcall
addr16
pop
push
fldz
rcll
pop
inc
add
aam
lahf
call
or
mov
gs
dec
in
push
inc
cld
inc
xchg
stos
inc
mov
lret
dec
shlb
cmp
and
ret
xor
jmp
adc
push
push
jno
pop
jae
movsb
lock
add
mov
repnz
loop
or
and
and
sti
outsl
lea
push
divb
mov
aad
fsubrl
push
std
sbb
inc
popa
fwait
incl
test
in
repnz
ret
add
xor
inc
test
ja
adc
bound
fwait
sahf
mov
cmp
stos
sub
cli
mov
sbb
push
das
andb
and
or
test
and
fnstenv
testl
mov
movsl
mov
add
mov
les
add
jmp
loop
test
push
cmp
iret
inc
or
inc
inc
mov
aam
lock
ss
sbb
ret
sub
sti
inc
or
in
and
arpl
jmp
add
gs
push
stos
and
sbbl
dec
rcrl
inc
rcrb
sbb
jge
sub
adc
movsb
fldt
pop
mov
push
inc
faddl
cmp
sahf
sbb
xchg
sbb
icebp
pop
repz
add
inc
xchg
or
sbb
xor
jbe
lea
mov
jg
sbb
mov
ja
imul
inc
fnstcw
ljmp
jnp
cmp
and
push
lahf
sbb
rorl
in
xchg
or
sbb
fldl
cmp
dec
add
movsl
add
int
dec
cs
add
mov
cmp
dec
and
mov
ret
ljmp
les
sbb
adc
and
mov
addr16
js
idivb
push
and
cmpsl
lock
jmp
mov
inc
or
pop
add
negb
jge
addl
hlt
sbb
je
pop
cmovle
in
lods
mov
inc
push
cmp
cmp
xor
mov
pop
push
mov
rcrb
pop
pop
das
or
add
push
mov
in
shrb
das
push
test
push
ret
scas
cmp
and
add
dec
push
dec
gs
add
add
xchg
cld
test
push
mov
push
ja
cli
xlat
pop
sahf
inc
lret
ljmp
cmp
shlb
fsubl
sub
fs
es
xchg
mov
dec
jle
test
push
shll
sbb
mov
push
sbb
pop
imul
jo
sarb
mulb
xchg
pop
xlat
nop
pushl
pop
adc
pop
jns
add
cmp
adc
mov
aam
pop
repnz
xor
jl
pop
int3
dec
and
cmp
and
pop
icebp
cld
jno
aas
jl
cmp
test
jb
hlt
es
movsl
inc
sub
pop
push
sbbb
push
hlt
mov
lcall
movaps
pop
movsl
test
into
cmpsb
pop
pop
cli
aad
ljmp
mov
jne
outsb
add
jbe
jnp
mov
jmp
or
aad
in
arpl
dec
scas
imul
pop
scas
movsl
jg
mov
xorl
jns
jns
adc
inc
pop
or
xor
insb
sti
push
cmpsl
cmp
or
add
cmp
sarl
xchg
enter
push
pop
push
inc
cmc
dec
xchg
and
or
and
sahf
pop
idivl
and
mov
adc
sub
add
test
jmp
cmpl
ljmp
stos
xlat
cltd
jb
movl
mov
fsincos
and
sub
mov
addb
daa
cmc
mov
xchg
dec
adc
xchg
loop
dec
mov
push
rcrb
xlat
es
push
add
scas
scas
idivl
idivl
add
mov
pop
test
xchg
push
mov
ret
les
sub
mov
jecxz
popa
rorl
add
pop
loope
ja
xchg
jne
cmp
mov
xchg
rcrl
push
mov
pop
movsb
add
push
mov
nop
xor
test
adc
sbb
sub
mov
dec
pusha
sarl
ljmp
adc
addl
inc
call
cmovge
enter
pop
add
mov
cmc
incb
subb
pop
fldenv
adc
test
scas
das
loopne
in
mov
dec
in
and
shll
dec
pushf
cwtl
std
mov
sub
dec
pop
fstps
sub
push
inc
inc
flds
push
call
outsb
xor
and
mov
loopne
rclb
mov
mov
pushf
inc
xchg
xchg
ljmp
out
pusha
xor
and
popf
rcrb
cmc
inc
lcall
cs
ja
sbb
lahf
fwait
out
sahf
js
sub
dec
mov
pop
lahf
test
data16
add
xchg
gs
mov
mov
mov
jo
loopne
stos
fld
aaa
xorb
icebp
or
push
mov
fs
xchg
mov
ja
add
cmpsb
jge
dec
stos
mov
push
push
shlb
or
dec
sub
jne
mov
cmpsb
and
pop
mov
std
lods
insl
test
mov
jp
popa
daa
aas
test
out
nop
jecxz
cmp
ja
add
sbb
pusha
or
imulb
jne
push
xchg
mov
mov
or
xor
pop
cmc
test
sub
fistpl
cltd
cwtl
int3
inc
mov
es
neg
scas
test
inc
dec
fs
mov
xor
and
inc
jp
scas
fldt
cs
aas
mov
inc
test
lds
xchg
jno
adc
mov
jp
inc
jmp
lods
fists
mov
dec
and
loope
push
mov
mov
xchg
iret
xchg
test
stos
fsubrs
cmc
addr16
mov
rcll
lods
push
in
arpl
mov
stos
mov
mov
test
ja
or
in
rcrl
loopne
push
sub
std
popa
sbbl
mov
jg
jbe
mov
lahf
or
nop
repz
and
push
int3
xor
out
cltd
cmpsl
das
or
jae
push
mov
shlb
lods
lods
imul
cld
mov
or
jge
cwtl
iret
jmp
cmp
jno
jae
inc
sub
mov
jae
and
cmp
pop
cmp
xchg
add
cli
scas
pop
dec
rcrb
adc
test
xchg
adc
mov
mov
in
jnp
xor
scas
mov
into
mov
gs
jns
inc
inc
cmp
out
les
inc
and
arpl
push
add
jo
adc
ret
mov
xchg
rolb
add
inc
and
arpl
push
add
jo
adc
ret
mov
xchg
rolb
add
ret
mov
adc
pusha
xor
and
repz
rclb
mov
and
arpl
push
add
jo
adc
imul
sbb
pop
mov
clc
pop
enter
mov
lret
cmp
sub
in
js
sub
mov
clc
insl
fdivrs
or
cwtl
pop
int
lcall
lods
sbb
shrb
jge
or
cmp
and
sub
pop
lret
jne
jnp
jno
cwtl
add
sub
mov
cs
cmp
mov
mov
add
call
call
pop
enter
inc
nop
js
push
mov
fldl
call
in
xchg
in
gs
clc
popf
cmpl
cmp
int
fcompl
jmp
add
jb
mov
cmp
call
sub
and
adc
dec
sub
lods
popf
imul
icebp
mov
xchg
xchg
lods
jo
xchg
cwtl
jl
cmp
pop
adc
sbb
lea
adc
dec
xchg
push
jne
inc
xor
xchg
int
fnstenv
pushf
sub
call
dec
clc
pop
enter
mov
sub
pusha
fstl
inc
std
xor
add
fwait
dec
popf
and
sub
cmp
dec
aad
mov
dec
sbb
js
cmp
pop
fisubrl
jge
call
and
pop
in
fstl
push
js
or
call
sbb
orl
add
mov
js
dec
in
pop
std
sub
sbb
enter
test
mov
cmp
dec
in
pop
std
sub
sbb
xchg
add
sahf
aaa
jp
flds
or
mov
outsl
sub
mov
sahf
cltd
sub
inc
adc
pop
or
test
xchg
mov
or
xor
adcl
lds
insb
popa
rclb
adcw
outsl
enter
cmc
in
mov
dec
sti
push
shl
arpl
ss
jecxz
into
cmc
xchg
adc
sub
mov
addr16
mov
adc
inc
adc
pusha
stos
aaa
push
cmp
mov
fmulp
lahf
inc
add
jno
das
push
xor
adcl
cmp
in
sbb
shll
mov
xor
xor
leave
push
out
xchg
inc
and
popa
out
imul
test
insl
dec
mov
sti
inc
mov
adc
cltd
xchg
pop
jne
ds
lods
mov
mov
loop
dec
dec
dec
xor
fdiv
fwait
sub
pop
loope
dec
inc
repz
add
movsb
ljmp
inc
push
sub
adc
jae
and
insb
inc
test
in
push
out
adc
add
fisttps
inc
out
out
push
shlb
cmp
scas
inc
cmp
test
mov
and
jb
adc
pop
mov
or
xchg
cmpsb
xorb
test
xchg
and
hlt
ljmp
push
xchg
jge
iret
mov
push
popf
pop
cmp
shrl
in
int3
inc
xor
mov
das
sub
dec
lret
xor
and
stos
lea
ja
sarb
loope
lahf
aas
mov
adc
cmp
incb
mov
inc
loop
inc
adc
sti
in
lea
in
or
dec
sti
inc
sub
ja
lret
ret
add
fnstenv
in
and
sub
sub
add
mov
shr
js,pn
rep
jl
shl
mov
jp
outsb
xlat
mov
adc
adc
dec
mov
push
das
sub
jle
mov
aad
lds
daa
xor
movsl
in
xchg
das
and
adc
dec
lods
mov
rcrb
dec
jae
and
test
sub
xor
aad
aad
jecxz
les
subl
mov
in
push
mov
and
movsl
mov
adc
or
cmp
scas
lret
enter
jmp
dec
fdivrl
pop
jp
xor
sub
xchg
pop
push
adc
push
sub
clc
test
aaa
push
pop
js
xchg
push
xchg
dec
add
xchg
cs
sub
push
addl
sub
push
ret
jp
and
daa
cvtps2pi
mov
fldl
jecxz
lcall
outsl
orb
imul
xor
clc
inc
insb
cmp
sbb
sbb
insl
and
hlt
adc
xchg
jb
test
ds
push
insb
movsw
push
xchg
xor
push
test
and
fldcw
test
pop
xchg
mov
into
sahf
mov
incl
or
frstor
mov
mov
jo
fidivs
jp
fisttpl
ret
jg
xor
pop
adc
sbb
popf
xchg
mov
inc
cmc
test
dec
sahf
jp
test
insl
int
xor
js
aaa
orl
lret
hlt
and
jbe
loopne
sarl
or
sbb
lds
sbb
mov
in
jo
repz
mov
sbb
outsb
leave
lods
pop
jmp
pop
bound
or
nop
mov
and
xchg
out
out
roll
call
xchg
repz
jl
adc
mov
data16
or
mov
push
imul
mov
pop
inc
push
in
imul
pop
and
jmp
mov
sbb
cmpsl
add
adc
pop
cli
inc
jae
iret
repnz
jle
or
pop
or
loope
mov
mov
xor
xchg
mov
call
nop
jbe
adc
mov
cmp
inc
sub
js
jb
insb
mov
xor
mov
mov
push
hlt
sbb
fmulp
lds
out
jne
jno
jp
out
mov
stc
xchg
push
fucomi
push
ret
out
test
fisubs
xor
inc
leave
shrb
in
pop
leave
jo
imul
stos
rcl
rorl
jo
add
testl
inc
lahf
add
adc
repz
cmp
sbb
sbb
movsl
or
add
or
mov
sub
jmp
inc
cmc
push
dec
sbb
fbstp
xchg
pop
push
jno
into
jnp
jb
cltd
test
fisubrs
mov
xchg
mov
mov
inc
push
cli
int
mov
addb
int
push
dec
mov
mov
jo
jb
jbe
jns
mov
cmp
cmp
inc
mov
jne
lods
sbb
push
xchg
push
xchg
pushf
outsb
inc
pop
ljmp
xchg
data16
je
mov
push
out
inc
inc
enter
pop
mov
cmovb
fwait
fstp
scas
or
mov
icebp
stos
inc
inc
jno
das
mov
sub
sahf
sbb
dec
cmp
fadd
aaa
pop
arpl
je
ret
int3
jae
pop
data16
out
xchg
ret
pop
call
adc
inc
mov
xor
js
cwtl
addb
mov
ds
clc
or
mov
sbb
and
inc
inc
lcall
jns
jae
cwtl
or
pusha
repz
loope
inc
pop
mov
jb
bound
lea
in
cmpl
jge
xor
mov
shlb
dec
stos
mull
jns
xlat
adc
fidivl
or
js
mov
ret
lods
mov
dec
inc
xor
lods
jbe
add
je
add
cmpsb
shrb
fcoms
testl
sti
and
mov
mov
mov
js
xchg
notb
loop
sbbl
jecxz
jne
imul
adc
fs
xchg
adc
mov
fisubs
sub
daa
xchg
pop
push
add
or
pop
add
sti
mov
sub
xchg
jmp
dec
sub
ficomps
jne
pop
push
movq
push
or
test
pusha
cs
dec
mov
xchg
and
xor
sub
or
ljmp
cmpsb
dec
mov
dec
xchg
js
fxch
cld
arpl
stos
aaa
aam
lret
data16
xchg
dec
jo
mov
dec
add
roll
xor
pusha
push
por
pop
cmp
data16
push
lcall
outsl
pop
icebp
cltd
gs
leave
fmuls
sub
or
stos
mov
in
mov
pop
dec
das
in
mov
cmc
sbbb
or
out
call
xor
loopne
and
mov
pop
jmp
shrl
mov
mov
xor
stos
sbb
sbb
or
into
inc
push
or
test
bound
and
push
xor
out
cmpsb
ret
xor
sub
pop
movsl
es
pop
pop
push
sub
push
gs
dec
mov
mov
cmpsl
andl
mov
pop
test
sbb
lcall
sub
sub
in
xlat
mov
lcall
fisttps
xor
jle
repnz
add
nop
jo
inc
daa
pop
push
fiaddl
pushf
jbe
dec
add
insl
fcmove
popf
andl
mov
je
mov
lret
pushf
add
cld
jno
scas
sbbl
scas
outsb
push
pop
add
xchg
push
into
xor
lock
push
out
mov
xchg
es
stos
mov
iret
mov
std
push
sub
mov
lods
jmp
dec
inc
scas
cmpsb
sub
mov
fwait
jae
into
int
in
xchg
inc
outsl
add
bound
test
xor
ret
insl
push
push
rolb
lods
test
into
xor
fs
xchg
negb
es
es
mov
jns
das
clc
cwtl
movsl
lods
scas
sub
sub
popf
pop
addr16
sti
and
or
xchg
inc
lea
xor
out
out
test
mov
add
sub
push
xchg
shlb
test
loopne
mov
cmp
sahf
testb
xor
push
mov
mov
dec
pop
mov
push
mov
mov
pop
sti
bound
adc
lods
popa
jecxz
in
mov
pop
lcall
xchg
push
and
xchg
mov
pop
movsb
pop
and
mov
or
adc
sahf
pop
jge
arpl
test
fs
inc
loop
xchg
enter
dec
out
xor
mov
fwait
ret
adc
out
jp
fisubrl
outsl
enter
and
stc
imul
bound
mov
daa
mov
cld
jmp
shll
sub
repz
mov
xor
orb
mov
in
lret
mov
adcb
and
outsb
outsl
clc
cmp
adcb
hlt
mov
sub
nop
lods
mov
shll
jae
mov
call
mov
xchg
push
add
push
mov
sbb
jo
aad
inc
jecxz
ds
xor
daa
mov
mov
xchg
rcrb
cmp
fwait
mov
aad
shlb
cmp
and
fcomps
out
mov
sub
pop
popf
add
and
insb
mov
lret
lea
mov
push
cld
std
int3
jmp
bound
repz
inc
inc
addr16
mov
aas
or
loopne
sub
mov
push
push
lret
je
jle
jae
repnz
test
sbb
xchg
cmp
cwtl
xor
lods
stos
push
push
mov
shrl
fwait
xchg
decl
rcrl
sub
pop
xchg
xor
xchg
dec
mov
xchg
xor
sbb
jne
mov
or
add
movsb
stos
imull
shll
mov
in
jmp
stos
mov
inc
cwtl
jbe
arpl
cmp
xchg
call
pop
les
lret
pop
mov
pop
fisttps
adcl
xlat
cmp
test
inc
sbb
push
pop
nop
dec
fisttpll
mov
pushf
inc
call
mov
push
inc
jae
leave
jmp
sbb
aad
and
inc
roll
fldenv
dec
daa
ss
push
inc
and
jmp
fisttps
push
icebp
sub
mov
and
xchg
add
xor
int
dec
pop
adc
xorl
dec
and
notl
in
and
mov
xchg
mov
xlat
loop,pt
dec
xor
jg
mov
xchg
add
mov
loop
jnp
enter
push
inc
data16
int3
pop
ret
sbb
xor
mov
in
pop
push
movl
push
jnp
popa
lahf
in
daa
sbb
loope
cs
aam
ja
jg
stc
in
pop
aas
mov
cmpsb
xor
push
arpl
dec
push
sub
psubsw
out
mov
iret
inc
sarb
sbb
pop
enter
adc
pop
loop
hlt
mov
sub
inc
int
scas
test
lock
pop
lods
mov
sbb
repnz
adc
lock
je
out
fsub
mov
outsb
inc
gs
mov
sarl
sbb
or
movsb
frstor
mov
int
dec
or
jmp
jecxz
sub
mov
jecxz
mov
in
lahf
out
mov
aam
loope
mov
cmpsl
push
call
shll
jne
das
cmpsb
lahf
scas
push
dec
add
mov
adc
xchg
pop
lods
mov
imul
insb
lret
lds
aaa
inc
les
xchg
test
inc
in
dec
dec
leave
pushf
inc
fst
sub
out
adc
dec
cmp
mov
stos
js
cmp
xor
arpl
mov
dec
aaa
ret
and
xorb
aaa
cmp
mov
and
or
mov
xchg
mov
jmp
pop
push
addl
cmc
pop
inc
xor
push
mov
mov
inc
inc
sti
mull
imul
cltd
and
cmp
rorb
sbb
jb
loopne
dec
inc
add
and
sbb
xor
pop
incl
jmp
dec
sbb
jg
push
sti
sub
xlat
or
cmp
sarb
mov
pop
add
or
aad
je
jb
add
sahf
aaa
js
jae
xchg
xchg
ja
push
or
xor
int
cmc
lret
mov
insb
vpbroadcastq
addr16
jl
insb
mov
push
cmp
out
dec
je
dec
cli
xchg
mov
and
dec
lcall
lock
jmp
push
add
std
mov
inc
xchg
out
fdivl
xchg
negl
and
stc
sub
cltd
enter
in
sub
ja
cltd
sbb
sbb
sahf
lret
or
mov
xrelease
imul
repnz
pop
mov
aad
sbb
and
jle
int
cltd
shr
adc
test
xchg
xor
jle
inc
ja
pop
add
jae
mov
jmp
out
insl
and
xchg
mov
repnz
adc
and
rcrl
and
into
aad
bnd
cmp
mov
data16
cmp
add
xchg
fisubs
mov
ljmp
lret
pop
sbb
cmpsl
lods
lds
les
scas
aad
insb
inc
es
mov
adc
fistps
adc
out
ljmp
negb
test
lock
or
test
adc
sbb
sub
sahf
cmp
add
in
jmp
jge
or
sub
dec
push
pop
pop
js
add
scas
fisttps
mov
inc
jbe
arpl
sbb
mov
adc
stos
aad
enter
dec
mov
shrl
jo
insl
jmp
sbb
cli
addr16
push
rcl
jge
mov
push
insl
int3
decb
out
pop
mov
pop
inc
addb
addl
test
adc
jne
fidivs
repz
dec
add
push
push
mov
cmp
add
mov
add
repnz
rcl
dec
pop
inc
mov
push
fcmovu
test
pushf
add
cmp
cmpsl
rolb
pop
xchg
pop
xor
push
aam
in
loop
rorl
in
dec
rcr
dec
push
sub
inc
hlt
mov
scas
fstl
rol
mov
push
inc
cmp
inc
jle
arpl
mov
push
dec
cmp
popf
jne
jno
arpl
jbe
mov
adc
mov
mov
mov
dec
inc
dec
int
sbb
inc
mov
push
cmp
adc
xor
pop
ss
lock
inc
daa
aaa
cli
and
rclb
scas
aas
inc
mov
or
and
sub
movsl
je
out
sbb
dec
scas
mov
sub
aaa
std
push
rcrb
mov
adc
xchg
outsl
scas
lcall
jno
mov
inc
pushf
inc
mov
arpl
out
mov
lods
pop
inc
loope
ja
pop
dec
or
mov
or
mov
loop
faddl
push
filds
sti
sbb
loope
fs
cmpsb
fnstenv
add
aas
mov
add
les
adc
jno
nop
stos
xchg
sub
lret
lods
sarl
pop
pop
or
pop
jo
popa
add
adc
mov
popf
pop
iret
xchg
xchg
mov
stc
insl
push
adc
push
int3
or
sub
jg
mull
imul
rcr
inc
lock
mov
lahf
xchg
jnp
mov
negl
adc
bound
ljmp
lahf
cld
adc
sub
shll
fldt
adc
xchg
sarb
sbb
call
push
shl
push
loop
rcrl
jecxz
jnp
add
jl
and
shl
imul
cmp
mov
mov
mov
fists
pop
movsb
outsl
add
or
or
mov
scas
jb
aaa
data16
jp
icebp
lahf
stos
jb
push
push
xchg
push
jecxz
jmp
fistps
add
lock
mov
or
jae
cltd
clc
push
fidivs
jg
jg
xor
ror
jo
sar
fs
repz
mov
decl
push
cltd
cltd
movsl
add
stc
data16
pop
leave
and
imul
mov
mov
jg
clc
outsl
sbbb
push
pusha
adc
push
aas
lods
lock
jmp
sbb
mov
test
xor
idiv
daa
xor
test
imulb
dec
inc
enter
ja
stos
sbb
ljmp
jp
push
in
mov
mov
xor
xchg
fcmovbe
imul
adc
int3
pushf
lock
ss
cmp
sub
push
adc
adc
sbb
mov
fdivl
pop
push
adc
push
cli
iret
orl
ljmp
ss
outsl
icebp
in
and
and
inc
sbb
sub
ljmp
mov
inc
pusha
add
repz
fimull
xor
pop
popa
and
sub
pop
mov
xor
rol
leavew
push
sub
mov
and
and
std
roll
mov
mov
gs
fwait
sub
out
add
adc
sbb
mov
wrmsr
and
add
mov
outsb
test
add
daa
mov
mov
fcomip
dec
push
ret
dec
out
or
mov
ja
adc
scas
fmull
leave
pop
push
int
dec
std
cmp
or
mov
imul
fdivl
mov
add
hlt
clc
sub
imul
clc
hlt
stc
sbb
cs
mov
lods
rorb
cwtl
jbe
jg
inc
dec
cwtl
notl
cmc
inc
fistpll
xchg
mov
iret
imul
bound
pop
xchg
insl
pop
sub
mov
add
push
cmpsb
jp
arpl
push
aam
loope
cmp
ss
pop
mov
popa
cwtl
add
adc
stos
cmp
enter
dec
jmp
mov
adc
sarl
cwtl
adc
push
xor
popa
and
mov
fwait
and
or
fisubrs
push
dec
xor
sbb
into
popf
fs
pushf
fstpt
sub
test
pop
and
jge
or
lds
and
jge
jb
mov
hlt
add
movb
les
push
dec
cltd
hlt
lcall
xor
add
mov
data16
pop
dec
xchg
pop
inc
out
loope
inc
mov
lods
cmp
mov
sub
jnp
pushf
push
test
out
shlb
cmp
lea
sbbb
mov
xorl
cmp
ss
fidivl
inc
adc
daa
andb
ret
lcall
inc
lods
pop
shlb
dec
imul
movsl
pop
scas
rcll
sbb
dec
push
arpl
push
enter
jo
lcall
add
stos
adc
mov
xchg
fs
fldenv
pushf
lock
xchg
or
repnz
push
sbb
pop
jg
stc
adc
adc
hlt
and
inc
push
es
jmp
jge
and
in
xor
ret
in
sahf
insb
lcall
inc
jnp
cmp
push
movsb
xchg
jmp
xor
insb
and
jmp
add
mov
adcb
lock
sub
js
jl,pt
mov
pop
dec
mov
pop
push
push
loope
mov
sbb
bound
cmpsb
pop
mov
pop
int
in
xchg
and
dec
je
scas
pusha
fwait
adc
mov
cmpsl
dec
pop
test
xchg
loope
test
repz
icebp
mov
push
mov
ja
mov
mov
dec
dec
pop
mov
jge
int
push
inc
cmp
ja
sti
jp
xchg
cmp
ja
shlb
movsl
repnz
inc
cmp
insb
sub
fwait
and
dec
xchg
inc
push
dec
mov
mov
dec
add
pusha
or
jle
mov
sbb
test
mov
lods
pop
push
call
pop
cmpsb
add
fnsave
add
jl
push
push
pop
mov
ss
loope
out
out
jg
sahf
mov
je
dec
add
cld
sbb
and
loope
jns
ret
and
stc
mov
nop
or
sub
scas
push
icebp
aas
movsb
lcall
add
jne
adc
push
ret
cmp
jmp
mov
ffree
sub
pusha
dec
into
test
mov
jno
es
inc
pop
cmp
cmpsb
das
scas
std
pop
and
aas
xchg
fldcw
xor
adc
bound
mov
mov
std
sub
sub
ficompl
insl
fdivrs
or
cwtl
cmp
dec
in
pop
std
sub
sbb
enter
test
mov
cmp
dec
in
pop
std
sub
sbb
enter
test
mov
cmp
dec
in
pop
std
sub
sub
insl
fdivrs
or
sbb
xchg
int
ja
in
pop
mov
mov
notl
inc
inc
jmp
push
pop
adc
inc
jle
xlat
pop
add
add
add
or
add
sbb
add
add
mov
add
arpl
inc
add
add
mov
add
push
add
push
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
sub
add
add
jne
out
xor
add
add
add
add
add
add
add
add
add
pop
js
out
add
add
sbb
cmp
mov
popa
add
add
add
pop
add
add
add
popa
add
add
add
add
add
and
jbe
add
icebp
add
add
add
movb
add
imul
add
add
add
add
add
add
add
mov
or
pushf
add
add
cmp
add
add
add
add
add
add
dec
add
insl
add
and
add
sbb
in
add
add
lcall
add
pop
add
add
add
add
mov
add
add
add
add
add
add
jae
or
popa
add
popa
add
add
add
add
push
add
add
add
add
add
enter
dec
add
add
add
add
push
pop
add
dec
add
add
add
add
dec
add
add
insl
add
add
rolb
or
dec
add
add
add
or
pushf
add
pop
add
xchg
add
add
add
add
and
add
add
inc
add
pop
pop
add
lret
add
add
add
add
add
xchg
sbb
add
add
add
add
lcall
add
jne
xchg
add
add
add
adc
mov
add
jns
jge
dec
add
add
add
add
or
add
push
add
bound
sub
push
add
loope
das
add
test
xor
cmp
adc
or
add
add
add
inc
add
add
jl
add
add
add
add
add
add
add
add
add
inc
add
in
aad
test
or
outsl
add
add
add
add
add
add
add
add
add
insl
add
add
add
cltd
add
mov
iret
add
add
add
add
add
add
or
ds
add
add
add
fwait
add
add
lods
add
add
add
add
add
add
fldl
add
add
push
add
xor
mov
add
add
movb
add
add
add
mov
xor
jno
sub
pop
add
add
loope
mov
insl
add
add
pop
add
add
add
add
add
add
add
add
cmp
add
push
add
push
add
add
pop
add
jne
addl
aad
sbb
add
or
imul
add
sub
in
add
add
add
add
add
ret
add
add
add
arpl
or
add
roll
push
inc
scas
push
scas
mov
mov
test
push
popf
push
mov
jno
xor
aaa
adcl
ss
iret
out
mov
pusha
es
push
push
fwait
dec
ljmp
mov
scas
lahf
push
out
and
scas
or
mov
sub
outsl
ljmp
sti
add
jo
add
ret
into
fsubrl
test
and
mov
sub
xchg
test
ss
jb
cmp
pop
mov
test
xlat
in
mov
outsb
sbb
jge
cmp
jae
mov
out
js
sbb
outsb
sti
mov
adc
sub
cmpsl
inc
pop
fadd
or
xchg
xlat
std
or
orb
sub
out
shrb
mov
cmpb
sbb
pop
outsl
leave
mov
add
icebp
dec
lea
out
data16
jl
jmp
push
push
daa
sub
jmp
out
je
stc
push
push
shll
jae
sub
inc
jo
xor
iret
mov
xor
or
nop
cmp
sbb
cld
mov
xor
xchg
and
cmp
jmp
cs
ja
push
push
out
cmp
mov
mov
push
sub
es
xchg
test
pop
cli
xor
mov
seto
mov
or
mov
sbb
pop
in
push
data16
xchg
das
mov
xchg
jae
cmc
cli
dec
ret
cmp
pusha
push
or
mov
lcall
or
mov
sub
cwtl
mov
jl
fstpt
in
push
stos
cmp
cld
call
shrl
lahf
addb
cmp
inc
lret
pop
dec
stos
popf
ror
sbb
test
daa
sub
push
outsb
mov
and
cmp
jmp
icebp
cmpsl
fnstsw
and
push
sub
std
std
pop
inc
inc
xlat
lret
inc
js
mov
xor
lret
adc
xchg
pop
cs
mov
and
pusha
loopne
cmp
mov
pminub
xchg
test
mov
add
or
lock
xlat
cmp
push
test
push
pushf
lret
dec
cmpsl
inc
outsb
out
shlb
or
and
xor
and
xchg
fdivr
nop
xchg
mov
inc
dec
aas
idivb
lods
xorl
dec
dec
aaa
aad
mov
leave
into
repnz
test
outsl
adc
jg
test
xchg
pop
xlat
sarb
mov
mov
loope
pop
rolb
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xor
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
dec
clc
add
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
or
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
clc
add
jl
add
nop
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
or
add
sub
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
movsb
stc
add
lods
stc
add
mov
add
mov
stc
add
int3
stc
add
aam
add
out
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
add
add
or
add
sbb
add
sub
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
