call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
and
pop
pop
and
push
push
jnp
jb
mov
fsubrl
sahf
lahf
sahf
outsb
jg
dec
dec
pop
pop
das
cs
ds
pop
push
mov
out
scas
int
outsb
mov
jle
push
cltd
inc
aas
aaa
ja
and
out
out
or
mov
sar
fsubr
sahf
outsb
pop
pop
or
sub
movsb
sarl
nop
sbb
fsubl
jne
lret
je
cli
or
scas
lds
sub
ja
mov
and
fwait
xchg
imul
xor
xor
sub
cs
mov
sarl
xchg
outsl
stc
dec
adc
cmp
jp
repnz
imul
xor
pop
push
mov
rcrb
dec
or
push
sar
push
sbb
add
and
and
mov
hlt
ljmp
mov
dec
pop
push
pop
das
arpl
ficomps
xor
mov
popa
ljmp
xchg
mov
xor
xchg
pop
out
pop
ljmp
mov
mov
imul
jnp
movhps
out
xlat
rol
mov
test
sbb
dec
xor
js
push
sbb
jle
mov
mov
in
sti
mov
rep
push
idivl
ds
pop
inc
pop
pop
or
push
jb
xchg
mov
popf
fcmovbe
cli
loop
sti
sbb
das
push
sub
aas
ds
pop
push
out
out
dec
into
scas
scas
mov
sahf
outsl
outsb
jg
dec
dec
pop
pop
das
cs
ds
pop
push
out
out
dec
into
scas
scas
mov
sahf
outsl
outsb
mov
dec
arpl
push
pop
outsl
mov
imulb
add
cmp
sub
loopne
sub
clc
inc
pushf
movsl
pop
jp
fidivrl
xor
in
adc
mov
insb
mov
push
push
call
inc
xor
jae
mov
mov
fstpt
icebp
je
adc
fdivrs
xchg
sti
dec
stos
push
bound
bound
inc
call
movsl
cmpsb
jl
adc
push
test
arpl
adc
jmp
mov
call
sahf
add
sub
or
ret
mov
mov
aam
in
in
ljmp
repnz
mov
mov
pop
xchg
mov
add
js
les
mov
sub
mov
cld
neg
test
pusha
mov
popa
fdivrl
ds
shlb
dec
enter
xor
das
dec
shlb
and
xchg
xchg
rcrl
fildl
pushf
sti
add
dec
addl
fnop
loopne
pop
xchg
push
and
pop
inc
ds
rcl
jne
xchg
dec
or
test
xchg
shrb
or
int
push
mov
mov
jg
pop
popf
ds
xor
mov
mov
aas
cmpb
xchg
pop
cs
hlt
orb
out
jle
mov
xchg
mov
mov
mov
push
loope
xchg
ficompl
sahf
adc
and
scas
fbstp
mov
shll
js
fs
pop
pop
dec
xor
sub
sbb
in
js
lea
or
dec
arpl
pop
insl
add
insl
cs
mov
mov
insl
clc
mov
push
addr16
out
lcall
push
clc
iret
arpl
in
stos
or
xchg
cmp
rcrl
lret
xchg
jecxz
inc
cli
popf
js
aas
das
mov
mov
rcrl
popa
shll
xor
inc
push
fidivrs
pop
jnp
push
xchg
popf
test
lock
fsubr
xchg
sub
repz
pop
sbb
aad
cmc
in
leave
add
and
in
scas
or
pop
mov
cmpsl
fisttpl
sbb
jb
lock
movl
test
push
ret
outsl
das
call
test
sub
adc
stc
loopne
and
dec
mov
jae
cmpsb
lods
jg
dec
aas
sbb
jno
sub
jo
xchg
sub
es
push
fucomi
dec
gs
pop
adc
out
imul
pop
ss
add
lock
addr16
pop
dec
and
cmpsb
movsl
out
jle
xor
dec
imul
and
out
pusha
divl
inc
mov
in
fildl
push
sets
lods
lds
push
xor
pop
in
popf
jg
jecxz
mov
daa
add
ljmp
pop
sbb
sub
sub
mov
dec
inc
lahf
test
cld
sub
insl
sbb
ja
and
call
or
sub
xchg
and
push
sti
adc
gs
mov
int
pop
dec
in
dec
jbe
jl
daa
negl
jnp
mov
jns
pop
xchg
mov
push
ret
dec
fbld
sbb
es
jp
sahf
fstl
aas
ret
mov
rolb
push
pop
ret
cs
pusha
cwtl
test
jb
std
sbb
pushf
jns
fs
std
push
inc
mov
pop
mov
sbbb
jl
dec
jae
shld
loopne
pop
xchg
adc
in
mov
mov
mov
loopne
xchg
or
pop
sub
clc
pop
movsl
arpl
pushf
jmp
jmp
lock
dec
push
push
and
dec
aad
inc
lock
jl
adc
pop
shll
xor
and
xchg
push
inc
adc
stos
pop
adc
ret
jne
outsb
fdivr
mov
jp
in
test
arpl
das
jns
pop
xor
insb
push
inc
jecxz
mov
idivl
stos
sub
push
outsb
xor
into
adc
jecxz
popa
inc
xchg
or
xor
xchg
sbb
jg
xor
xchg
mov
mov
mov
cld
mov
aaa
idivl
inc
or
push
shlb
in
mov
or
ret
push
xlat
sbb
add
sbb
dec
cmc
add
insl
push
mov
and
cmp
cmp
cmpsl
pop
and
add
sti
cmp
or
bound
cwtl
jnp
inc
std
bound
outsb
out
fiaddl
xchg
mov
push
jge
pusha
scas
jbe
lcall
lea
stos
pop
pop
inc
jge,pn
and
inc
lock
sbb
jmp
cmp
push
push
dec
add
xor
jecxz
sub
gs
sbb
into
in
loope
mov
in
jno
scas
xchg
jecxz
xchg
pusha
cmpsl
jmp
push
or
mov
repnz
mov
mov
in
mov
popf
in
daa
mov
insb
imul
xor
mov
push
adcb
pop
scas
jle
loop
mov
adc
pop
mov
cld
mov
mov
mov
int
cmp
stc
or
inc
loope
xchg
cmp
fwait
push
mov
or
mov
mov
inc
popf
clc
orb
adcl
cmp
daa
cltd
inc
mov
pop
nop
idiv
ds
sbb
or
pushf
or
and
xor
cmp
jns
sbb
enter
xor
jp
pop
xchg
sub
jae
cmp
xchg
sub
jp
pop
lcall
mov
repnz
rorb
cmpsb
es
aad
in
jns
add
fisttps
out
jo
mov
push
jecxz
and
mov
addr16
jno
jno
add
sbb
sbb
adc
pop
cmc
shrb
inc
aad
aam
pop
sub
jge
mov
adc
sub
sub
adc
xor
sarb
lret
mov
cli
add
adc
mov
popl
std
scas
mov
pushl
add
rorb
cmpsb
iret
cltd
ds
jl
popa
fsts
loope
mov
mov
inc
test
dec
aam
sub
aam
inc
fdivl
push
lock
inc
rep
sahf
mov
xchg
sbb
push
stos
ret
mov
mov
push
mov
dec
insl
mov
add
adc
xchg
sub
ret
jno
dec
stc
bound
xor
adc
push
and
jl
inc
dec
stos
arpl
xchg
roll
call
int3
shrl
ja
xor
insb
cmp
out
sbb
xchg
js
xlat
fldl
and
shrb
decl
and
mov
cli
fisubrl
inc
outsb
jmp
mov
outsb
xor
mov
loopne
lock
and
movsb
bound
push
cwtl
out
out
fstps
cs
mov
ficoml
mov
inc
inc
dec
pop
mov
adc
push
test
cmp
lahf
jl
xor
ss
cmp
div
sbb
in
imul
loop
sub
ljmp
lock
lcall
mov
pop
add
push
xchg
jae
rcl
lcall
adc
out
mov
lds
push
popf
cmp
mov
pop
aad
xor
or
push
js
adc
orl
jb
xor
cmpsb
rorl
mov
scas
xchg
inc
and
xchg
sbb
dec
xor
mov
mov
in
pop
fs
shrl
test
xchg
xchg
mov
ljmp
pop
mov
sti
sbb
and
test
xchg
pop
mov
in
cmp
sub
sbb
add
inc
lret
and
jl
add
outsb
mov
add
mov
mov
xchg
xor
cmpsl
insl
icebp
jecxz
xchg
jnp
ja
sbbb
mov
mov
adc
sub
dec
jl
cmc
cli
or
in
pop
mov
cmp
fwait
cmp
pop
xor
filds
dec
cmpsl
ret
out
cmpsb
out
push
in
pop
sbb
mov
clc
xchg
pop
out
cmp
mov
fiaddl
loopne
lods
inc
jle
xchg
das
popa
and
test
cmc
sub
mov
popf
mov
fcmovb
mov
icebp
inc
sbbl
cmp
ret
jmp
outsb
cmp
mov
xor
in
and
adc
out
dec
sbb
mov
je
out
lock
lods
mov
ffreep
pop
scas
lea
mov
cmpsl
jp
pop
ss
push
fsubs
dec
jbe
pop
inc
xor
orb
movsl
out
ret
push
das
lods
pop
lahf
ficomps
xor
or
jmp
enter
mov
jns
cwtl
loope
cmp
dec
mov
jmp
adc
mov
pop
cmpsl
mov
rolb
into
pop
dec
jmp
fs
inc
fisubl
xchg
scas
and
movsl
gs
add
adc
sbb
cs
xor
mov
inc
inc
add
stos
jno
ror
xor
jno
or
repz
fcmovb
fs
sub
in
or
mov
lds
pop
rcl
int3
sub
inc
and
jecxz
pop
negl
sbb
shrb
std
add
xchg
mov
pusha
push
or
lods
sub
bnd
mov
cmp
or
sbb
mov
into
mov
inc
mov
shlb
lcall
mov
pop
jo
mov
outsl
jae
jge
jg
ficoml
or
popa
inc
adc
inc
pop
std
pop
fcmovb
ficoml
cwtl
fs
mov
xor
sbb
fiadds
fdivrs
addb
int3
test
push
sahf
fcompl
or
lods
pop
xchg
scas
dec
addl
or
and
into
out
aaa
imul
lahf
cld
push
pop
lea
bound
pop
or
jae
cmp
sbb
inc
inc
xchg
nop
jo
loope
insl
mov
das
fs
cmc
inc
adc
cltd
mov
in
lods
andb
mov
mov
fnstsw
or
add
iret
xchg
xor
xor
int3
inc
pop
icebp
sbb
adc
in
adc
ljmp
cld
mov
cmp
stos
das
clc
sub
loopne
push
adc
das
das
jnp
loop
jns
jg
mov
xorb
mov
cmpsb
or
jno,pt
movsb
ret
movsb
adc
push
pusha
shlb
cmp
lods
pushf
sub
out
movsl
int
pusha
and
add
pop
cmpl
mov
adc
or
push
mov
in
jmp
xor
loop
xor
jno
dec
in
int3
icebp
dec
lahf
mov
inc
ret
divb
inc
mov
test
fnstcw
sub
fs
lcall
mov
jns
inc
and
sub
ja
dec
pop
dec
addr16
inc
gs
dec
mov
xor
sub
add
jns
pop
mov
out
push
lcall
adc
or
repnz
addl
lods
add
pop
test
dec
movsl
push
fstps
aas
jmp
xor
jns
mov
aas
in
les
push
andl
sub
imul
cmp
test
push
push
pop
loop
mov
cs
push
xchg
decl
icebp
stc
cwtl
clc
ret
dec
adc
jg
xor
cmpsb
repz
aas
inc
mov
ds
sti
xchg
subl
mov
lock
test
mov
push
adc
pushf
fists
or
iret
mov
addr16
sysexit
push
addr16
cmc
nop
xlat
scas
sub
test
jmp
sub
sub
mov
iret
push
inc
dec
sub
fcomps
fsub
and
leave
or
cmp
adc
push
xchg
and
es
sbb
into
or
lret
jl
mov
js
xchg
dec
bound
cmp
xor
or
fwait
test
ds
popf
std
call
loopne
test
push
ficoml
xchg
and
lahf
jbe
ljmp
jns
cmp
mov
ret
adc
lret
inc
fstpt
dec
test
mov
dec
shrb
and
imul
and
push
icebp
xchg
in
inc
adc
hlt
in
xchg
insb
lret
stc
cltd
movaps
mov
xchg
dec
jb
pusha
cld
dec
nop
xor
inc
jl
clc
es
insl
test
sub
add
pop
ret
add
iret
sub
ret
xchg
jnp
push
out
out
insl
in
and
shll
pop
loop
in
scas
add
js
test
call
mov
sbb
lea
lret
or
loopne
es
and
mov
jge
iret
sti
inc
js
mov
mov
rcrb
hlt
aam
or
scas
mov
adc
xchg
in
inc
std
js
lea
jno
mov
loope
sub
std
push
inc
push
divb
inc
mov
jb
lret
loopne
inc
lock
repnz
or
gs
add
hlt
aad
xchg
sbb
jmp
and
frstor
cltd
lods
outsl
push
push
loop,pt
dec
add
sub
lock
lret
mov
lahf
fisubrs
xor
scas
xchg
fdivrl
or
shufps
rclb
cmpsb
shlb
dec
clc
or
clc
sub
cltd
or
xchg
stos
mov
cmc
cmp
inc
pop
lods
or
jle
add
nop
rolb
xor
out
sub
sub
pop
cmp
mov
inc
or
lret
jle
sub
and
cld
je
shl
inc
cmp
dec
cmp
fstps
cmp
xchg
inc
mov
xchg
sahf
mov
jl
lret
test
dec
testb
and
mov
ds
jge
mov
iret
mov
cs
push
xlat
jnp
es
mov
xor
mov
add
mov
gs
pop
das
rol
adc
lcall
mov
repz
aam
dec
popa
je
jns
jo
ret
or
loope
lea
clc
push
xchg
bound
xor
aaa
movsb
orl
mov
testl
xchg
pop
jmp
popa
cmp
cmp
pop
ret
icebp
cmp
jmp
mov
repz
and
jb
mov
repz
hlt
rol
ficoms
aam
xchg
jns
aaa
in
call
mov
enter
cli
dec
push
dec
and
inc
les
cmc
cmc
lea
mov
dec
xchg
imul
insl
lret
add
cmpsl
and
xor
xchg
mov
lods
push
mov
into
dec
xchg
xor
scas
lret
or
sbb
add
cli
adc
mov
cli
sbb
fs
jl
icebp
or
lock
dec
out
mov
mov
fldt
push
lea
mov
inc
add
sti
outsl
jle
cli
pop
or
or
cmpsb
fnstsw
cmp
out
xchg
testb
xor
push
cmp
lret
xlat
jp
in
xchg
loope
mov
ja
ss
test
xlat
shr
enter
movsb
push
arpl
dec
cli
mull
cld
aad
dec
mov
pop
mov
lods
sub
push
shlb
cmp
sbb
mov
jbe
rcrl
inc
pusha
scas
cmp
ret
mov
sbb
fmulp
mov
into
push
scas
xchg
add
bound
mov
sbb
dec
push
fldcw
jge
filds
loop
imul
movsb
and
jmp
push
mulb
adc
in
add
shll
push
pop
xchg
adc
xchg
rcl
xchg
nop
or
in
xlat
adc
cmpsb
aas
jg
lods
xorl
xor
mov
out
jbe
xchg
xor
cmc
pop
movsl
jg
xchg
rorb
leave
repz
sub
push
pop
pop
lock
cmpsl
cmp
inc
xor
pusha
pushf
dec
fs
xchg
mov
mov
test
xor
jg
mov
imul
push
jmp
pop
rclb
pop
or
push
cmp
aad
arpl
cmpsb
or
ret
fsubs
xlat
push
push
and
cltd
in
mov
loope
testl
xchg
xlat
jnp
xchg
ja
add
mov
push
fsts
pop
jle
pop
push
xchg
and
std
shll
mov
lods
jnp
rol
outsl
sbb
stos
cmpsb
out
and
xor
popa
stc
inc
or
mull
in
bound
cmc
sub
es
loope
or
xlat
sub
nop
cwtl
sub
mov
divl
adc
testb
div
xchg
jmp
xchg
pop
incl
gs
sbb
sbb
push
aam
dec
lods
mov
cmpsl
jg
mov
jno
and
stc
dec
push
cmp
fadds
lahf
insl
pop
inc
fldl
mov
sahf
lock
push
clc
sahf
sbb
inc
push
popf
or
in
inc
or
enter
ds
adc
call
imul
mov
mov
popf
mov
nop
subb
and
ficoms
cmpsb
push
mov
std
xor
daa
popa
push
mov
lret
pop
push
pusha
dec
pop
mov
xchg
cltd
pop
lahf
fyl2xp1
mov
popf
pop
aaa
enter
sbb
push
call
jnp
stos
lea
jp
xchg
js
pop
fucomi
cs
sub
cmp
lret
repnz
push
sti
roll
adc
jl
jp
xchg
out
sbb
dec
fistpl
mov
cwtl
push
lcall
cmpsl
pop
int3
shrl
push
imul
popa
jg
jo
mov
lods
cmp
or
ljmp
dec
loop
aad
jmp
lahf
ja
cmp
mov
or
adc
sti
repz
xchg
dec
mov
mov
or
xor
lret
lock
icebp
scas
cmc
add
push
xlat
out
cwtl
sub
sub
shll
pop
test
cmp
ret
rcrb
dec
in
cmp
inc
xor
div
dec
sbb
push
repz
scas
mov
jecxz
clc
rorl
inc
xor
push
mov
xchg
adc
shrb
sbb
bound
mov
xchg
pop
sahf
sarl
rcll
and
insl
pop
outsl
out
adc
scas
xchg
icebp
mov
and
add
rcrl
jae
cmp
ret
push
xor
jo
mov
bound
sub
or
enter
cmpsb
adc
scas
xor
sbb
or
stos
or
andl
adc
outsl
loop
std
mov
emms
mov
js
fs
push
inc
pop
and
iret
pop
shrl
ret
jno
lock
xor
push
loope
inc
rcrb
mov
clc
pop
repz
dec
insb
jmp
shrb
sahf
sbb
xor
push
dec
in
mov
loop
adc
dec
pop
sub
mov
pusha
fneni(8087
data16
dec
shlb
mov
jp
mov
nop
into
into
jle
mov
mov
sub
mov
sti
mov
les
xchg
cmp
rcl
cld
xchg
stos
dec
lahf
icebp
scas
arpl
mov
or
xchg
adc
das
int
jg
lahf
stc
popf
mov
not
loop
scas
jne
or
mov
outsl
adc
dec
pop
outsb
loopne
pop
sub
out
cmp
cmc
inc
sub
pop
das
sti
imul
or
pushf
add
dec
inc
dec
and
mov
dec
pop
push
filds
sub
stos
test
cmp
shrb
mov
sub
xchg
mov
mov
es
es
xor
pop
sbb
xchg
xchg
xchg
arpl
push
dec
jle
inc
pop
xchg
xor
js
hlt
xchg
pop
and
mov
fiadds
scas
gs
and
lods
xor
rorl
sbb
dec
xor
sti
jge
popf
lret
dec
jp
jne
loopne
popa
mov
lahf
dec
xchg
rorb
xor
push
sbb
lods
sbb
or
imul
popf
mov
arpl
push
lds
cltd
pop
add
call
ret
pop
add
jp
jnp
push
test
subl
aam
jae
arpl
fmulp
jge
pop
cmp
mov
fisttps
xor
and
bound
xrelease
call
cld
out
pop
xor
jle
leave
sti
sti
xchg
mov
arpl
jne
mov
pushf
or
cmpsl
ds
mov
jbe
push
ss
lcall
pop
stc
inc
in
outsb
mov
lcall
in
mov
scas
xor
pop
xchg
pop
and
loop
inc
mov
dec
add
cwtl
fistps
push
cs
lea
call
js
out
mov
push
mov
fsubl
popa
cld
out
sbb
ret
aaa
lods
pop
rcll
mov
jmp
inc
cmp
lods
or
push
dec
jg
hlt
dec
mov
popa
and
xchg
es
sub
sbb
and
jg
or
scas
insb
lret
add
pusha
fdiv
or
lret
inc
lock
jle
mov
aas
ds
pop
push
out
out
dec
into
scas
scas
mov
sahf
outsl
outsb
jg
dec
dec
pop
pop
das
cs
ds
pop
push
out
out
dec
into
scas
scas
mov
sahf
outsl
outsb
jl
pop
dec
pop
pop
cs
femms
push
push
jmp
inc
into
fcmovnu
scas
scas
cmpsb
mov
ja
push
jle
dec
ja
das
cs
ds
lahf
push
out
out
add
fildll
jo
pusha
popa
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
idivb
mov
mov
lret
jbe
sub
inc
or
jnp
sub
pop
push
dec
idivb
mov
fildl
sub
sbb
ss
imul
push
dec
idivb
mov
fildl
ja
imul
sub
pop
ds
fbld
cmp
jge
mov
mov
pop
mov
rolb
jge
pop
jmp
mov
pushf
add
adc
xlat
jo
addb
or
mov
clc
mov
scas
insl
jge
insb
dec
out
lods
mov
jmp
push
aad
push
sub
xchg
jnp
pop
jae
dec
mov
out
mov
cli
mov
push
or
frstpm(287
pusha
hlt
enter
push
movsl
add
or
xchg
push
mov
sti
lods
adc
and
popf
data16
sub
iret
cmp
pop
adc
or
ficoms
lcall
imul
or
scas
pop
add
or
dec
test
out
fwait
mov
fildl
sub
inc
or
jnp
imul
push
or
mov
mov
stos
repz
bound
jne
gs
push
dec
adc
push
cs
cli
xchg
loope
fwait
mov
lds
jle
inc
pop
dec
add
adc
add
cs
and
mov
xchg
cmpsb
jmp
fildl
sub
inc
or
jnp
imul
push
dec
idivb
mov
fildl
sub
inc
or
jnp
imul
push
dec
idivb
loop
insb
ds
das
mov
out
les
dec
mov
stos
lahf
test
outsb
test
decb
pop
mov
fucomp
and
pop
cmp
xor
aaa
gs
pop
ss
lods
pop
jbe
xchg
mov
jge
adc
in
sahf
sbbb
sti
push
in
xchg
aas
out
cltd
sbb
dec
test
lods
repnz
adc
jbe
andl
outsb
sub
fs
ret
out
mov
fwait
test
subb
pop
lcall
jo
lret
repz
jp
fmuls
dec
fisubrs
call
or
mov
scas
imul
pop
jmp
cmp
jb
cmp
jno
and
scas
push
testl
mov
push
mov
movsl
push
pusha
cli
lahf
rcr
scas
sub
sub
jle
mov
mov
and
adc
sbb
inc
bound
xlat
pusha
pop
ljmp
dec
adc
and
mov
arpl
pop
inc
fstpl
shrb
push
inc
in
add
mov
outsb
les
xchg
mov
pushf
cmp
nop
shlb
pop
les
scas
dec
insb
jl
adc
pop
or
mov
xchg
cmp
add
sub
cmc
add
scas
shl
sub
mov
loopne
nop
push
ret
and
arpl
addr16
out
sbb
sbb
lret
inc
test
call
mov
xchg
stos
int3
ret
std
fldt
or
or
negb
push
sti
xchg
movsl
stos
mov
inc
into
sar
movsb
lods
adc
jle
push
out
pushf
add
push
pop
imul
cmp
hlt
mov
jnp
and
push
cmp
fsubl
or
out
pop
insb
sbbb
daa
jb
push
scas
adc
dec
mov
pop
xchg
xor
pop
xor
pop
jbe
sbb
ds
mov
out
and
cmp
mov
int3
sarl
dec
jb
adcb
out
rorb
xchg
mov
xlat
add
ljmp
push
insb
leave
insl
xchg
xor
xor
push
add
out
gs
sub
and
stos
pop
lret
popa
dec
dec
call
cmp
adc
xor
cmp
movsl
cmp
or
pinsrw
dec
push
jl
stc
mov
jl
xor
adc
popf
push
sbb
fisttpll
sub
push
sub
dec
inc
mov
sub
jns
movsb
movsb
cmp
ror
outsb
mov
int3
pop
xor
inc
popf
mov
into
cmpsl
lods
mov
jge
sbb
shrb
mov
insl
push
rorl
sub
pop
int
pop
lods
dec
dec
sbb
leave
nop
xchg
inc
inc
inc
fists
xor
shrb
mov
lret
xor
sub
mov
test
out
dec
jecxz
movsb
inc
sub
je
out
int
adc
push
arpl
imul
push
in
shl
aaa
aaa
cmpsb
fwait
pop
les
scas
push
sub
lret
jne
adc
jnp
xor
popf
stos
mov
mov
mov
pushf
rcrb
int3
outsl
pop
repz
jne
cmp
int
pop
shr
dec
outsb
outsb
clc
mov
or
inc
dec
add
and
lods
jns
bound
pushl
pusha
sub
add
xchg
mov
mov
jl
test
sbb
pop
sbb
call
push
sub
mov
int
add
call
bound
sub
scas
add
lahf
pop
stos
cmc
mov
shll
adc
push
daa
aad
push
insb
lods
pop
lret
into
push
mov
jp
out
loope
and
aam
mov
inc
xor
xchg
fadds
pop
sub
adc
mov
lods
and
sub
es
lcall
inc
jge
pop
mov
cltd
pop
sub
push
adc
sahf
xchg
daa
int3
mov
mov
pop
mov
jmp
mov
jl
or
sbb
aad
leave
sahf
cs
cmpb
imul
aad
ret
and
pop
sbb
adc
movsl
dec
in
xor
push
jl
add
mov
dec
outsl
fwait
aaa
pop
ret
push
and
cmpsb
sub
loopne
sbb
rcll
push
sbb
test
movsl
test
add
call
scas
or
js
cmc
jbe
xor
add
dec
scas
push
jae
lret
lahf
flds
inc
add
inc
dec
jns
inc
repnz
sub
sub
mov
hlt
xor
daa
push
es
clc
shrb
jae
imul
xor
cmpsl
jns
adc
sahf
dec
mov
icebp
lods
sub
add
or
adc
cltd
in
movsb
lcall
or
jmp
outsb
mov
add
pusha
rcrl
daa
mov
jb
adc
test
cmp
mov
scas
cli
cmpsl
hlt
xchg
and
mov
sub
cmp
cmp
cmc
sub
push
aaa
inc
lock
sbb
adcb
in
jo
jl
loop
and
cmp
jnp
add
je
bound
cwtl
push
hlt
push
and
push
push
mov
fdiv
xlat
ret
sti
xchg
outsl
test
pushf
mov
andl
loop,pn
push
jmp
stos
pop
shlb
fsubl
adc
imul
mov
sarb
jg
fwait
jecxz
mov
or
or
fidivs
leave
ja
inc
outsb
mov
add
mov
dec
ja
cmp
or
outsl
aam
and
dec
mov
repz
and
push
xchg
lret
and
jbe
mov
into
add
roll
mov
or
mov
jg
or
jnp
xorl
pop
ret
call
sbb
mov
ss
inc
out
jp
jl
adc
mov
dec
cltd
lock
sbb
mov
xor
shll
cltd
xchg
mov
cmp
lret
jl
stc
out
mov
mov
mov
mov
cwtl
xchg
adc
daa
mov
cmp
mov
cmp
mov
pop
rcrb
mov
in
xchg
push
rcrb
cmc
pop
mov
pusha
mov
jl
lods
leave
pop
leave
inc
lcall
outsl
pushf
icebp
inc
in
push
add
xchg
mov
dec
pop
adc
and
icebp
scas
je
push
xor
adc
or
in
sahf
nop
lret
test
inc
loop
stos
data16
dec
mov
jecxz
dec
sub
ror
push
jae
cld
mov
in
sbb
lret
xchg
mov
in
pop
push
movsl
mov
repz
cmp
test
xor
pop
mov
inc
hlt
movsb
push
xor
shlb
and
or
out
in
adc
sarb
shrb
sbb
lcall
nop
jmp
call
pop
sub
shll
add
stos
xchg
jecxz
xchg
popf
ficoml
sbb
dec
sbb
hlt
add
dec
rolb
or
sub
jbe
aaa
into
add
idivl
sahf
jmp
adc
out
fidivl
sub
jmp
lods
loopne
sahf
xchg
data16
xor
stos
mov
cmp
in
and
out
add
mov
fisubrl
inc
mov
repz
mov
sub
ljmp
pop
clc
push
fiadds
inc
cli
jle
mov
in
mov
icebp
push
mov
icebp
popf
and
lahf
inc
or
mov
data16
add
xor
sub
ljmp
mov
out
mov
jb
lcall
xchg
insb
stos
mov
inc
mov
jmp
pop
mov
mov
out
sub
leave
jl
lods
outsl
outsb
push
imul
jnp
clc
dec
out
or
mov
pop
clc
sbb
aad
push
push
jnp
push
pop
push
das
aad
sbb
addr16
outsl
das
pop
push
icebp
ljmp
push
mov
sub
sub
sti
and
ljmp
aad
push
adc
cmp
mov
test
inc
pandn
les
test
sub
es
jb
add
and
jae
lock
scas
pop
andl
stos
notb
lahf
dec
ret
sub
daa
shld
sarb
outsb
xchg
sub
loopne
in
push
pop
movsl
or
test
aas
test
data16
sub
and
push
test
les
adc
adc
jae
sbb
fnstsw
lcall
dec
inc
fsts
ja
or
sbb
scas
push
sbb
das
stc
inc
in
xchg
test
inc
push
lret
sub
lret
xorl
lret
mov
sub
pop
mov
jae
and
xchg
push
jnp
je
jmp
arpl
je
jae
sub
je
out
cmp
fs
mov
push
test
add
jl
ljmp
mov
shl
lea
xchg
call
fnsave
adc
push
and
js
scas
xchg
dec
xor
sarl
xlat
imul
movsb
fcoml
push
mov
dec
loopne
pop
and
aaa
jecxz
daa
cld
mov
cwtl
jg
bound
mov
add
pop
call
ret
lea
in
test
or
jnp
repz
sbb
jl,pt
cmp
frstor
pop
sub
fsubs
xchg
mov
xchg
clc
sub
fnstcw
mov
mov
add
loope
push
pop
jno
xchg
inc
mov
icebp
sahf
mov
aam
add
cmp
mov
iret
mov
push
inc
ljmp
sub
je
adc
xchg
xchg
outsb
insb
xchg
mov
xchg
daa
dec
mov
notl
or
testl
cltd
sahf
in
out
stc
sbb
push
aas
iret
mov
leave
lock
jl
addb
inc
mov
je
jbe
jecxz
pop
rcl
dec
pop
inc
push
lods
cmp
adc
lea
outsb
mov
push
fs
bound
pop
mov
sub
daa
push
inc
sbb
or
adc
test
sub
mov
mov
ss
jg
stc
pushf
daa
mov
movsl
loop
repz
jmp
imul
pop
shrl
in
aad
push
xchg
sbb
test
fwait
mov
sub
pop
imul
xchg
push
xor
cmp
xor
rolb
mov
addb
es
mov
push
inc
or
lret
jmp
sbb
mov
js
call
sub
call
aas
dec
lret
sti
movsl
aaa
pop
jnp
jns
push
test
push
lds
xor
lret
push
fdivr
pop
inc
imul
jbe
or
adcb
inc
sar
lret
sub
sbb
add
sahf
addb
movsl
es
scas
fbstp
popa
jle
loope
sub
jne
and
ds
addl
jae
pushf
jno
gs
sahf
jecxz
sub
or
negb
xor
popa
and
jmp
push
xchg
dec
outsl
fs
pop
or
loop
adc
ficompl
fbstp
and
ror
test
test
inc
inc
inc
sbb
popa
rolb
inc
push
mov
jp
sbb
inc
pop
js
repz
sub
mov
xlat
mov
fs
out
jo
and
outsb
pop
push
aas
out
dec
jno
test
adc
mov
or
add
add
pop
in
xchg
call
mov
into
inc
jne
stos
mov
je
pop
mov
inc
stos
push
lds
mov
mov
out
fnsave
in
inc
lock
xchg
out
inc
jno
adc
and
rcrb
mov
pop
repnz
or
cmp
jmp
rclb
int
sahf
inc
mov
push
jle
cmp
and
lock
jmp
cmp
add
repnz
orl
sbb
push
add
inc
xchg
aaa
rolb
xor
inc
jle
out
out
test
movsb
add
mull
addr16
shlb
mov
out
ficompl
fwait
xor
bound
imul
dec
aaa
subl
pusha
and
mov
xorb
imul
or
jno
xor
adc
push
subl
push
out
xchg
mov
pop
int
insb
cmc
inc
mov
add
inc
push
icebp
sbb
add
pop
mov
ja
add
aad
je
cmovns
push
in
imul
xchg
sti
lea
mov
mov
xor
xor
push
jle
cmp
sar
int3
movsb
inc
pop
adc
cmc
mov
add
jp
sbb
push
lds
adc
sahf
pop
add
sub
cmp
ljmp
popa
nop
mov
inc
insb
mov
mov
inc
int3
and
js
addb
mov
cli
outsb
jnp
push
ss
cwtl
notrack
inc
jb
sbb
push
aaa
rorl
jg
cmpsl
ds
sarl
push
pop
jmp
xchg
clc
push
pushf
push
xor
jno
subb
addb
add
pop
int
ret
dec
pusha
idivl
mov
imul
andb
dec
and
sbb
inc
movsb
cli
dec
sti
cmpl
mov
push
scas
mov
repnz
push
sar
pop
jae
imul
mov
or
pushl
aad
inc
sub
dec
lret
orl
popa
jecxz
inc
adc
inc
cmp
filds
adc
mov
dec
fcoms
mov
clc
call
xor
js
clc
dec
mov
gs
insl
and
mov
inc
cmc
out
xchg
add
and
lea
gs
pop
test
xor
xchg
sbb
call
mov
xchg
inc
test
pop
sub
mov
subb
mov
ds
sbb
scas
sbb
or
mov
iret
lea
mov
dec
push
mov
mov
sub
in
stos
or
pushf
ja
pushf
push
or
mov
and
xchg
stc
sti
mov
lret
enter
rol
mov
into
push
dec
iret
lds
push
jle
fldcw
push
dec
lcall
ret
mov
push
icebp
xor
or
push
ret
xor
add
stos
cmp
pop
jle
cmp
icebp
imull
jp
pop
jle
or
aam
push
dec
imul
cmc
jb
inc
xor
sti
dec
lcall
aad
imul
in
xchg
xor
out
inc
mov
add
add
dec
push
aas
enter
sti
cltd
sub
cmpsl
jae
or
into
jecxz
push
sub
mov
mov
lods
stc
ret
mov
lea
dec
cs
aaa
xor
neg
pushf
jle
dec
push
xchg
jo
jge
push
sar
xchg
sub
lods
xchg
inc
push
clc
insl
sbb
cld
and
xchg
or
aad
xchg
inc
lods
add
daa
fsubrl
das
push
mov
mov
lcall
in
push
jmp
mov
lods
sub
dec
add
xchg
xlat
jb
jmp
fidivl
ss
mov
inc
jns
in
mov
mov
orl
sar
in
fcoms
xchg
mov
push
movsb
adc
xor
mov
xor
pop
shlb
mov
in
sub
loopne
or
pop
js
mov
adcb
repz
xlat
cmpl
fbstp
mov
inc
add
and
or
out
sbb
pop
cmpsb
mov
xor
shll
push
jbe
xchg
sbb
mov
fucomip
push
sbbl
lret
sub
fs
mov
and
jle
stos
les
pop
adc
mov
xor
stc
cld
aaa
sti
lods
adc
mov
inc
jb
cmp
jecxz
or
sub
jbe
and
jle
or
bnd
jge
leave
xor
mov
das
mov
enter
jb
test
and
sbbl
xor
and
cmpsb
push
mov
mov
dec
adc
inc
sti
pop
lods
andb
and
mov
in
mov
movsb
hlt
cmpl
adc
std
or
sti
leave
add
or
or
dec
insb
and
xchg
mov
inc
mov
pop
stos
mov
out
mov
testb
pop
mov
sahf
cs
cwtl
lods
aas
mov
nop
loope
icebp
and
pop
sbb
mov
ja
xchg
movsl
xchg
xchg
sarl
ret
mov
push
mov
pop
enter
or
jb
std
mov
lods
out
xchg
lock
ljmp
popa
mov
sahf
and
xchg
and
push
in
jp
hlt
fldl
mov
add
repnz
cmpsl
stc
mov
aad
inc
pop
stos
sub
into
or
aaa
ror
test
add
sub
inc
and
jecxz
adc
push
stc
cli
lods
sti
call
inc
in
push
xchg
out
xchg
push
cmp
call
je
sti
pop
cmp
inc
cmp
aaa
inc
sub
les
and
test
out
lret
sbb
mov
mov
stos
fisttps
push
cwtl
cli
mov
pushf
popa
lds
pop
lcall
adc
xchg
cmp
sbb
inc
inc
sbb
or
dec
jmp
xchg
jbe
jl
mov
add
je
xchg
push
xchg
sbb
dec
clc
jns
arpl
mov
jae
pop
nop
fistpl
fs
adcb
push
or
mov
in
jno
int3
sub
and
ja
lods
push
cmp
jmp
mov
dec
nop
pop
mov
mov
cmp
sub
mov
lret
icebp
fsub
fdivs
out
mov
adc
lods
xor
loope
inc
xor
inc
fsubrl
les
pop
fstl
inc
and
add
test
sti
mov
aas
cmp
cmp
add
mov
xchg
cmp
cs
mov
test
clc
jbe
out
fucomi
inc
and
adc
fbstp
mov
int
aas
ljmp
mov
dec
pop
jns
jne
sar
mov
out
into
in
xor
sub
pop
lret
mov
adc
mov
jp
in
mov
push
lret
pop
ja
add
jns
jp
mov
mov
add
xlat
add
push
push
leave
mov
push
test
cmp
cmpsb
dec
sahf
ljmp
ljmp
mov
or
dec
ss
lahf
cli
sub
add
enter
pmaxub
mov
lret
jb
sub
cli
outsl
movsb
negb
loopne
push
push
cmp
mov
rorb
xchg
sbb
and
cmp
xchg
stos
bound
fidivs
cmc
test
push
dec
ss
dec
ljmp
jno
xchg
leave
xchg
and
cwtl
imul
pop
insl
shll
in
ja
inc
pop
jmp
and
les
xchg
adc
pop
into
fdivrs
js
das
cs
mov
add
not
mov
mov
ds
jg
lods
cmp
dec
bound
mov
aad
icebp
and
mov
test
loope
aam
lret
pop
lret
xor
iret
mov
adcl
pushf
and
xchg
xor
add
adc
popf
subl
inc
lret
xchg
dec
cltd
test
jmp
enter
cmpsl
std
sub
mov
push
push
pop
cmp
push
aad
pop
mov
mov
jge
jnp
adc
dec
dec
inc
mov
inc
xchg
add
clc
imul
sbb
aam
repnz
fs
outsl
lahf
dec
push
scas
mov
or
xchg
jmp
mov
std
lahf
jbe
dec
movsl
mov
pusha
lret
jmp
inc
sub
scas
hlt
into
sub
jno,pn
mov
and
dec
xchg
cmpsb
ret
daa
into
sub
pushf
mov
mov
pop
pop
jmp
cmpsb
pop
loope
dec
cwtl
and
imul
scas
inc
pop
xor
cmp
inc
test
insl
or
add
add
inc
shrb
xchg
scas
push
pop
scas
cmp
ss
push
in
pop
add
jl
pop
xchg
mov
test
rolb
xor
stc
sbb
push
or
stc
dec
sub
inc
sbb
movsl
stos
add
test
add
rclb
cmp
das
xchg
jb
jns
mov
ja
sahf
shlb
cs
in
out
imul
and
add
push
push
mov
xchg
cwtl
fcmovnbe
pop
stos
repz
xchg
fildl
sub
inc
or
jnp
imul
push
dec
idivb
mov
fildl
sub
inc
or
jnp
imul
push
dec
idivb
mov
fiaddl
sub
inc
or
jp
imul
push
dec
idivb
mov
cmpsb
imul
cmp
jl
repz
xchg
jmp
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
test
out
test
cmc
rol
xor
dec
add
aas
push
das
inc
enter
iret
xchg
out
test
aad
lds
dec
inc
sbb
push
gs
pop
das
inc
mov
movsl
out
testl
pop
popf
inc
and
xor
inc
or
inc
scas
mov
cli
mov
adc
mov
push
shll
subb
out
aaa
pop
and
push
jp
jbe
sbb
test
adc
mov
add
iret
mov
bound
xor
xchg
mov
pop
enter
aad
clc
loopne
dec
movsl
xchg
stos
call
es
pop
test
pop
scas
cmp
daa
dec
jg
xor
pop
pop
lcall
xor
adc
lock
sarb
push
outsl
lds
stos
xlat
enter
pop
mov
bound
add
pop
mov
mov
addb
mov
pop
mov
movsl
call
xchg
in
aad
lds
push
and
pop
jne
gs
push
ss
fisubrl
in
sti
cltd
loop
mov
push
dec
push
or
adc
push
pop
push
dec
add
mov
cmpsl
lcall
adc
dec
dec
push
cmp
jp
jl
dec
xor
adc
lcall
in
aad
lds
dec
and
pop
jne
gs
push
das
inc
fbstp
out
test
aad
lds
dec
and
pop
jne
gs
push
das
inc
fbstp
xchg
mov
mov
add
cmp
orl
sub
xchg
outsl
xor
xadd
xor
test
sbb
fsubr
push
push
sarb
int3
xlat
and
in
or
outsl
int3
add
leave
push
inc
int
pop
sub
inc
xchg
out
popf
mov
xor
xor
loopne
out
inc
test
jno
out
std
hlt
out
cmpl
sub
mov
rorb
xchg
inc
mov
mulps
mov
in
popa
aad
or
sub
jnp
dec
pop
outsl
dec
iret
lret
std
cmc
fstl
push
inc
std
int
cmp
xchg
mov
inc
adc
push
in
jo
add
gs
enter
je
mov
or
daa
xor
dec
sub
inc
aam
aaa
popf
push
fstl
inc
andl
shll
arpl
pop
cmp
xor
add
add
test
aaa
or
push
add
cmp
mov
mov
xchg
add
stos
pop
xor
mov
daa
scas
add
dec
cmp
mov
les
mov
jge
and
pop
push
dec
xchg
xor
int
and
cmp
fisubrs
rolb
orl
and
push
gs
in
data16
int
adc
or
xchg
sbb
bound
imulb
mov
adc
mov
adc
lock
adc
imul
ss
and
fildll
jbe
or
mov
sub
lods
mov
data16
cmp
xchg
clc
sbb
jl
outsl
idivl
or
lock
jge
ljmp
pop
decl
sahf
sbb
push
int3
inc
lds
rdtsc
inc
xor
cmpsb
andb
mov
clc
dec
fimull
fldt
jb
pop
mov
cmp
inc
mov
or
cmp
loopne
inc
repnz
sub
cli
cmpl
push
mov
jcxz
jns
lret
cs
lret
cld
jbe
and
dec
add
bound
xchg
cld
push
test
or
mov
pop
and
loopne
push
mov
adc
cmpl
cmp
mov
or
add
mov
aas
xor
je
xchg
js
in
popa
scas
insb
mov
mov
cmp
or
out
mov
subl
inc
daa
jo
adc
jmp
pop
mov
lods
xchg
int3
xlat
dec
sbb
mov
push
int3
inc
cmpl
shrb
cmpl
stos
sbb
fldl
inc
arpl
pop
jl
xchg
fisubrs
jb
and
ss
and
push
mov
jmp
mov
shl
cmp
add
cmp
sarl
mov
call
xor
xor
add
jae
scas
gs
pusha
lods
xor
addl
imul
xorb
cmp
pop
jb
mov
or
pop
je
sub
push
add
lahf
cltd
sbb
sbb
test
cltd
repz
sub
dec
ljmp
mov
leave
scas
mov
pop
dec
sub
jp
mov
movsl
imul
pop
movsl
dec
mov
jae
jo
jge
push
ficoms
inc
mov
stos
jge
je
in
fmuls
jmp
inc
incb
shlb
pop
xchg
in
repz
sub
and
sbb
clc
xchg
jae
or
mov
sub
sbb
mov
and
xor
test
iret
daa
nop
decb
mov
adc
arpl
inc
jne
mov
inc
add
push
fsub
out
stos
add
hlt
ja
scas
lods
out
mov
inc
jle
sbb
or
cmp
sub
jae
push
lcall
mov
mov
or
cmp
xchg
fs
pop
jns
subb
fsubs
daa
pushf
mov
lret
adc
sub
push
addr16
addl
inc
mov
add
xorl
lods
loop
add
fwait
incb
sub
pop
dec
add
pop
lock
iret
xchg
outsb
arpl
ljmp
xchg
js
movsb
insl
shlb
sbb
insl
fldl
stos
xchg
pop
push
inc
stos
in
sbb
ja
xchg
lret
push
jmp
sub
rolb
xchg
xchg
call
sahf
cmp
jle
cmp
in
jp
sar
push
addr16
ss
icebp
lea
or
mov
hlt
lahf
hlt
jg
fmull
out
xchg
or
sbb
enter
scas
data16
mov
cmpsl
addr16
jp
inc
jne
mov
movsb
sub
push
pop
sarl
and
cli
pop
jle
inc
test
jae
cmp
mov
lcall
aad
cmp
nop
xchg
das
jno
dec
ljmp
rolb
lock
mov
mov
out
jns
sbb
push
sbb
xor
add
negb
out
arpl
sbb
dec
imul
daa
shlb
mov
test
and
or
fcompl
es
gs
cmp
xchg
cmc
test
xchg
pushf
or
sub
out
sbb
sti
xor
and
ds
pop
add
mov
dec
xchg
push
mov
jmp
leave
mov
in
mov
or
mov
adc
aas
xor
lahf
push
gs
pop
and
in
xchg
pop
imul
adc
stc
xor
dec
rcrb
leave
push
jnp
mov
sbb
adc
push
out
dec
cld
dec
je
push
cmp
mov
ja
push
pop
shll
jb
cmp
mov
lret
lret
rcrb
dec
imul
mov
mov
xor
push
mov
xchg
fs
or
xchg
fcmovu
add
idiv
inc
outsb
gs
shl
stos
movsl
sbb
xor
shl
mov
and
cwtl
repz
adc
lcall
jbe
cmpsb
pop
outsb
int
mov
add
stc
jle
sbb
cmp
jl
cmpsb
sbb
xchg
xor
pop
das
leave
dec
inc
sti
mov
out
lcall
jp
repnz
jp
arpl
movsl
push
stos
lds
mov
lods
mov
fs
jle
popf
jg
imull
push
aam
push
imul
mov
std
pop
mov
call
jns
add
cltd
push
push
das
and
das
test
test
mov
cld
xlat
cmp
inc
out
sbb
mov
cmp
mov
mov
sarb
clc
dec
jp
jle
or
cmp
xchg
adc
and
xor
push
test
pop
add
xlat
cmpb
pushl
into
mov
fadds
adc
scas
mov
ret
repnz
movsb
andb
fdivrl
push
sub
pop
jl
mov
sub
inc
fcomps
jp
loopne
fisubs
orl
cld
iret
inc
or
cmp
flds
push
clc
xchg
sbb
pusha
pushf
cmp
idivl
dec
roll
lock
adc
fs
pop
or
es
push
mov
xchg
cmp
dec
add
mov
cmpsb
sub
push
ljmp
xor
xchg
ret
cli
xor
mov
call
inc
divl
rcl
lods
or
leave
sbb
push
push
cltd
mov
loop
adc
and
adc
mov
xchg
ret
inc
loop
repz
je
shll
daa
xlat
cmpsl
sbb
adc
aad
mov
inc
add
ljmp
outsb
sub
adc
jbe
loope
es
repz
popl
push
jp
faddl
les
add
inc
repnz
mov
cld
dec
jmp
lods
jae
les
fmull
dec
daa
cmpb
jmp
iret
cmpsb
mov
std
scas
adc
fcoml
enter
bound
shrb
jo
or
jp
jo
cmp
or
dec
sti
test
xchg
cmp
scas
add
jo
push
dec
inc
adc
sbb
mov
mov
add
je
mov
sub
inc
inc
fidivl
shlb
js
inc
adcb
mov
cwtl
dec
adc
int
pop
pop
push
jge
mov
fnstsw
in
push
cmp
add
ret
cmp
xchg
je
and
es
jae
cmp
fimull
mov
ja
in
jecxz
in
in
clc
in
or
hlt
pop
mov
dec
inc
icebp
fnstenv
mov
cmp
daa
mov
xchg
inc
mov
loop
dec
loope
stos
mov
adc
cmc
sarl
fldln2
xor
loop
pop
add
test
or
cmc
enter
test
cmp
or
call
dec
push
mov
andb
xor
inc
je
out
push
sbb
cli
cs
dec
sub
and
ret
dec
jg
adc
shrb
jno
inc
inc
pop
sub
mov
test
mov
lcall
clc
lds
aad
stos
dec
addr16
enter
sub
mov
push
orb
xor
cmpsl
das
or
iret
pusha
xor
lods
movsb
ja
mov
xchg
into
add
cmp
cmpsl
imul
mov
out
lea
push
jnp
data16
imul
mov
scas
pop
mov
cli
sbb
xor
insl
pop
xchg
xchg
cld
lods
mov
int3
notl
push
or
dec
jp
jb
sbb
ret
and
incb
addr16
dec
insl
sub
jg
outsb
jns
test
sbbl
rcrb
addr16
out
inc
divb
sbb
cmp
vpsadbw
sub
mov
shl
sub
mov
rcrb
cmp
mov
cmp
fstpt
adc
push
test
mov
std
outsb
or
sbb
adc
rolb
cs
pop
cltd
push
lock
push
cmpsb
sbb
out
adc
mov
inc
mov
scas
insl
mov
mov
push
pop
gs
loope
inc
fisubrl
hlt
mov
mov
insb
hlt
gs
fnsave
aaa
out
leave
inc
icebp
sbb
dec
mov
jge
mov
inc
push
and
push
out
xchg
xor
in
add
jmp
int
dec
inc
filds
test
or
lods
lds
call
mov
cmp
mov
and
adcl
hlt
data16
sub
push
mov
push
xor
and
in
mov
xor
shl
pop
fcoms
cltd
stc
mov
add
fcoms
gs
or
mov
mov
into
fiaddl
scas
mov
inc
cmpsb
les
xor
cmp
nop
insl
or
xchg
enter
xor
icebp
inc
sti
sbb
dec
xlat
cli
out
sub
or
data16
rol
jmp
test
pop
push
out
in
fmuls
out
pop
sbb
mov
add
mov
mov
inc
leave
adc
mov
enter
imul
mov
jae
or
pand
xchg
xchg
pushf
mov
xchg
dec
xor
lahf
add
ljmp
mov
lods
mov
xchg
and
and
js
jecxz
mov
mov
sub
mov
gs
mov
loopne
je
lret
daa
mov
add
xor
fnsave
hlt
or
fs
sbb
notl
ljmp
in
and
adc
mov
mov
das
cmpsb
mov
mov
imul
mov
fbld
jmp
lds
mov
xlat
and
push
imul
sbb
insb
push
sbb
cltd
cltd
xor
test
fs
push
mov
jns
jns
or
jb
push
xchg
dec
dec
int
rcll
adc
pop
jae
inc
fisubrl
std
pusha
sbb
push
int3
fcomps
push
outsb
dec
int
mov
sbb
sbb
pop
icebp
xchg
mov
repz
dec
movsb
cmp
ds
jg
nop
sti
push
andl
scas
xor
lret
or
mov
sub
add
push
fwait
incl
and
pop
dec
cs
or
aad
in
cld
fcomps
dec
in
repz
sub
cmpsl
jnp
popa
dec
cltd
pop
cwtl
dec
add
adc
xor
xor
lock
ja
stos
sub
sub
and
xor
mov
sti
insl
mov
test
sub
sub
in
enter
out
stos
popa
jae
mov
mov
inc
dec
mov
pushf
lock
ror
mov
xor
mov
js
addl
cmp
leave
fldt
dec
pushf
in
dec
andl
and
xor
fdivrl
add
std
addr16
std
sahf
mov
inc
outsl
lods
shrb
es
mov
push
arpl
das
adc
push
jb
dec
sub
fldl
jecxz
mov
dec
dec
cmp
mov
push
and
adc
inc
mov
jne
jnp
xchg
pop
daa
push
call
pop
cmp
pop
mov
icebp
cmpsb
out
mov
adc
ret
inc
insl
adc
lret
and
push
enter
or
leave
test
mov
cmp
mov
pop
push
mov
leave
lock
cmp
adc
pop
mov
cmp
shlb
lret
push
scas
push
out
mov
fsubl
mov
xchg
in
fbstp
mov
stos
repnz
addr16
out
out
jns
std
leave
or
imul
jecxz
inc
xor
ret
push
sbb
movl
cmpsl
sub
adc
or
fs
fwait
mov
sbb
jl
and
bound
add
or
xchg
and
or
jmp
adc
pop
lahf
lahf
fbstp
arpl
cmc
repnz
xorb
cmc
push
outsl
lds
cmp
mov
push
adc
jmp
es
mov
imul
mov
jl
repnz
xchg
rorl
pop
out
cltd
cmp
jno
adc
lret
dec
mov
xchg
and
cmpsb
cmpb
mov
pop
sub
ljmp
scas
xor
lods
xor
movsb
mov
push
mov
leave
dec
jnp
subl
in
pop
test
scas
ss
cmp
inc
mov
in
mov
mov
sub
outsl
mov
scas
push
push
movsl
inc
addl
orl
sub
add
push
insl
repnz
inc
lea
mov
and
ret
in
push
dec
xchg
out
lret
pusha
jle
subl
inc
jle
jns
fstpt
or
lea
mov
sbb
fcoml
inc
jmp
rol
jg
pop
lods
scas
shll
insb
push
xor
push
cmp
rcl
adc
push
xchg
notl
or
imul
stos
or
rcrl
aad
cmp
sbb
sub
sub
push
outsb
jno
add
mov
repz
fwait
mov
add
dec
add
cmp
sbb
fdivl
xor
inc
xor
push
mov
les
into
inc
les
sub
add
lret
push
inc
fadds
push
cmc
sub
or
adc
adc
push
and
clc
mov
movsl
outsl
test
and
jle
js
mov
in
lock
leave
jl
sbb
mov
cmc
flds
sarb
jle
inc
inc
scas
push
adc
xlat
daa
dec
cmp
lret
sub
movsb
jns
ret
adc
addr16
lods
stos
xorb
cmp
mov
adc
jle
repnz
add
fnstsw
call
inc
shrb
scas
flds
xchg
call
stc
outsb
adc
xchg
lret
lcall
push
jecxz
sarb
cld
xor
cwtl
sti
adc
pop
jle
stc
jmp
fldenv
and
pop
and
ds
out
fwait
jns
dec
stos
or
shr
jbe
mov
aam
or
push
jle
imul
loope
fdivrl
add
jae
shll
ljmp
hlt
push
adc
dec
popf
sbb
mov
sbb
das
sbb
add
test
pcmpgtw
xor
imul
mov
xchg
std
fs
test
sbb
pop
sahf
in
push
inc
shlb
dec
sbb
daa
je
and
inc
jbe
and
lods
repnz
mov
xor
enter
leave
add
out
dec
push
xchg
mov
mov
cli
sti
mov
nop
xchg
xchg
add
or
and
int3
mov
pop
mov
call
push
mov
aam
mov
mov
mov
adc
dec
test
cld
fbstp
aaa
and
addr16
inc
mov
adc
cmp
dec
push
lods
fucomp
lock
mov
lret
test
sub
mov
mov
mov
add
push
mov
cmp
mov
jg
jae
add
xchg
push
add
cmp
pop
sar
adc
fisttpll
xor
imul
xchg
pop
add
insl
dec
insl
push
dec
jno
xor
pop
and
jge
cmp
cmp
push
loopne
adc
popa
cmp
jmp
out
repnz
pop
cmc
lods
cmpsl
adc
je
mov
pop
mov
sub
mov
cld
mov
bound
xorb
mov
jne
mov
mov
imul
mov
popf
push
mov
aaa
lods
cltd
fcmovbe
jmp
fxtract
subb
cmpl
rolb
jmp
repnz
mov
lahf
into
inc
cmp
pop
shlb
jle
ret
inc
stos
out
and
inc
mov
lcall
and
xor
leave
mull
xchg
mov
jno
cmp
aas
in
movsl
mulb
or
xor
or
xor
dec
mov
mov
shl
adc
out
stc
out
daa
insb
push
xchg
jge
scas
mov
ss
mov
xchg
repz
pop
push
mov
addr16
sahf
int3
les
inc
cmpsl
popa
xor
jae
icebp
xchg
or
xchg
sub
stos
adc
in
cmp
xlat
lret
add
sbb
inc
mov
dec
xor
push
dec
adc
adcl
jecxz
mov
mov
dec
sar
mov
cld
adc
hlt
inc
loope
xor
mov
or
pop
sub
cmpsl
jae
xchg
pop
jge
inc
addb
mov
xchg
popf
cwtl
jl
adc
push
enter
cmp
push
mov
dec
and
jno
into
push
in
xor
push
or
mov
push
sub
jns
mov
outsb
repnz
adc
push
js
xor
orl
lock
push
dec
pop
jno
ret
push
mov
int
sbb
sbb
sub
sbb
mov
mov
ss
dec
dec
sahf
cmp
sbb
icebp
push
bound
roll
test
cmp
nop
mov
xchg
cmpb
jbe
push
daa
popf
hlt
test
lods
movsl
std
mov
push
bound
test
sub
or
xor
clc
es
sbb
mov
or
jmp
sub
dec
and
push
mov
jg
pop
dec
loope
daa
adc
out
jns
call
mov
and
in
sub
gs
sbb
mov
or
xchg
call
sbb
xor
inc
fsubl
pop
dec
test
nop
test
sbb
sbb
outsl
pop
outsl
pop
cld
daa
adc
inc
xchg
inc
sysret
cmp
cmp
sub
push
mov
frstor
sub
ja
mov
lea
out
fstps
stos
dec
sbb
sub
adc
cs
push
out
aaa
outsl
inc
ficomps
add
cwtl
pop
hlt
clc
push
outsb
dec
in
jg
jmp
jp
shl
ret
test
xchg
jns
jg
sbb
push
outsl
jo
icebp
aaa
leave
inc
vmovaps
push
lds
clc
pop
mov
xor
cmp
adc
or
mov
or
bound
jo
inc
jp
xchg
push
or
imul
out
cmpsl
cwtl
xor
ja
ljmp
xchg
inc
idivb
iret
mov
mov
out
adc
xchg
shlb
and
pop
aas
mov
movsb
mov
jge
pusha
call
cld
push
xchg
sbb
adc
ret
js
and
push
push
push
and
insb
aad
or
imul
enter
mov
cwtl
jne
fadd
xchg
sbb
lea
cmp
jecxz
leave
mov
sbb
hlt
cmpsl
adc
or
inc
inc
outsl
cwtl
loop
test
mov
xchg
out
test
aad
lds
dec
and
pop
jne
gs
push
das
inc
fbstp
out
test
aad
lds
dec
and
pop
jne
gs
push
das
inc
fbstp
out
test
aad
lds
dec
and
pop
jne
gs
push
push
inc
jmp
sti
movsl
leave
xchg
out
test
aad
lds
adc
xchg
xchg
xchg
andb
mov
xchg
xchg
pop
dec
daa
inc
aaa
bound
push
out
ja
ja
xchg
xchg
ret
mov
xchg
xlat
and
testl
cmp
add
ja
sahf
je
add
push
iret
lret
notl
js
dec
adc
cmp
and
xchg
clc
andl
xlat
jnp
xor
arpl
xor
dec
lret
mov
shrl
filds
xlat
or
bound
lods
ds
pop
pop
inc
pop
addr16
imul
jle
jnp
inc
aaa
stc
push
push
call
pushf
inc
loope
addr16
in
rolb
loop
xchg
mov
jb
das
mov
push
mov
mov
int
pop
xlat
add
aas
sub
push
sbb
stos
jae
pop
pop
jno
adc
mov
popa
scas
outsl
sub
dec
xor
fst
jno
ret
clc
add
or
jp
inc
fidivs
dec
pop
mov
cmpsl
xchg
and
out
xor
push
pminsw
jo
pop
pop
cs
in
jge
ja
jmp
repnz
ret
mov
mul
pop
adc
push
xlat
push
add
xor
inc
sbb
xchg
testb
xlat
shl
daa
and
inc
pop
cmp
adc
push
loop
sti
and
sahf
fisttps
out
mull
daa
jb
bound
push
add
ja
xchg
xchg
ret
mov
xchg
xlat
and
mull
daa
jb
bound
push
add
ja
xchg
mov
or
cmc
mov
in
xor
lret
jecxz
idivb
sbb
xchg
xchg
dec
cltd
push
lahf
ficoms
cld
mov
fists
daa
xor
jl
test
addl
rcrl
adcl
adc
dec
stos
faddl
mov
sbb
jb
test
addr16
push
out
outsb
nop
int3
jmp
and
stc
mov
xlat
test
inc
int
mov
xor
das
sub
adc
movb
in
xlat
and
nop
pop
mov
jne
mov
andl
sub
aaa
jecxz
cmp
jb
je
call
popf
xor
mov
ret
xchg
jnp
sub
sbb
mov
divb
outsb
fcoml
adc
and
insl
out
inc
cmp
leave
js
iret
sahf
pop
enter
jae
sahf
xor
push
jmp
pop
pop
sub
adc
xlat
inc
adc
add
adc
test
adc
dec
jle
test
cld
daa
andl
js
imul
pushl
dec
xchg
mov
xchg
sbb
inc
hlt
and
cmp
pusha
adc
mov
test
lcall
push
fbstp
idiv
push
mov
outsl
jl
pop
mov
rolb
mov
mov
inc
repz
inc
jl
daa
push
fadds
xor
lods
mov
test
jno
mov
aad
cwtl
aas
bound
fldt
lock
xchg
scas
sarb
xchg
xchg
loope
sbb
mov
into
xchg
xor
sbb
mov
mov
mov
popa
arpl
cmp
pcmpeqw
mov
ja
gs
jbe
ljmp
jno
sahf
xchg
mov
and
jmp
jl
mov
push
mov
sahf
mov
lods
ss
inc
add
addb
es
bound
xchg
movb
aad
pop
fisttpll
out
in
push
clc
fstps
sbb
jp
leave
iret
dec
orl
stos
cmpb
popf
cltd
xor
adc
mov
or
test
jl
add
sub
mov
cmc
mov
xor
les
out
xchg
adc
bound
sti
mov
cltd
aas
pop
push
inc
lds
std
cmpb
mov
mov
hlt
mov
dec
shlb
cmp
or
jns
xor
adc
add
ret
fwait
inc
jp
and
xor
push
lods
sub
xchg
inc
ljmp
les
mov
out
xchg
xlat
mov
jl
in
pop
dec
enter
sub
cmp
in
aad
push
cmp
or
pushf
pop
pop
pushf
out
cmc
jb
mov
fnstsw
pop
cwtl
jmp
mov
in
stos
inc
testb
and
and
cmp
cs
mov
fmull
clc
out
imul
mov
clc
sbb
daa
or
lods
es
lcall
loope
sbb
push
fdivs
xchg
stc
fisubrl
mov
fwait
enter
cmp
pop
loope
mov
lret
and
pop
inc
fs
mov
adc
sub
outsl
std
push
or
fdivs
in
loope
sub
push
jecxz
add
ds
jp
sti
xchg
sub
test
adc
sub
jns
dec
mov
cmp
xchg
es
aaa
pop
adc
push
mov
sahf
clc
cmc
cmp
stos
and
add
nop
or
jno
mov
lods
xor
jg
fwait
mov
loope
popf
push
clc
cmp
sub
mov
cmpsl
inc
ljmp
xor
xchg
ret
movb
cmp
mov
push
nop
add
sbb
pop
dec
in
sti
adc
sbb
ret
dec
cmp
leave
push
pop
cmp
imul
jb
addr16
adc
and
es
out
mov
pop
push
das
cmp
mov
or
pop
xchg
stc
jb
cmp
jge
xchg
jecxz
lds
jg
loop
xor
insl
sbb
orb
mov
adc
in
insl
mov
fsubs
xchg
cmp
add
push
cmp
das
jbe
sub
insl
sub
lods
or
and
fistpl
or
aaa
or
lcall
adc
push
lret
mov
lret
add
cmc
test
mov
shll
xchg
shlb
sub
cmp
sub
push
jle
repnz
jae
in
inc
jg
hlt
inc
fcoms
bnd
or
loope
movsb
outsl
stos
out
xchg
push
jge
adc
roll
sub
fdivrl
test
mov
sbb
or
dec
add
xchg
lahf
popf
adc
loopne
pushf
mov
int3
pop
mov
mov
std
cmp
test
popa
xchg
lds
in
pop
mov
repnz
arpl
andl
cmp
and
inc
mov
xchg
adc
push
jmp
ss
jg
scas
mov
push
aaa
rcl
arpl
sub
add
dec
int3
movsl
movsb
movsl
adc
ljmp
loop
std
dec
fwait
xor
je
mov
int3
in
fldcw
ljmp
pop
jnp
xor
push
popf
and
fbld
imul
sub
lret
insl
jns
mov
xchg
pop
mov
mov
popa
repz
mov
sbb
xchg
xchg
stc
add
pop
push
jmp
int3
jg
imul
jle
rcrl
imul
into
jl
sbb
or
sahf
mov
scas
xchg
arpl
fcoms
add
adc
dec
cmp
adc
clc
pop
cmp
xchg
loopne
adc
and
dec
sbb
insl
cmpsb
add
adc
pop
push
xor
jmp
cld
lods
call
popf
stc
into
xor
inc
xchg
adc
ss
sbb
clc
xor
les
add
lds
cmp
and
or
xlat
and
sub
loope
fsubl
cmp
into
outsb
pop
cmc
mov
cmp
insb
sub
enter
in
nop
mov
enter
sbb
jmp
xchg
xor
sarl
movb
cli
fdivl
pop
inc
mov
leave
lods
sbb
jp
rorb
ds
sbb
and
mov
dec
push
in
xor
pop
xor
pop
outsb
jnp
in
enter
cmp
add
je
push
int3
sbb
repz
into
pusha
sti
cmp
repz
sub
ds
mov
and
into
jl
fadds
mov
jae
clc
cmp
fwait
mov
mov
sahf
push
mov
repnz
rdpmc
sbb
sub
bound
insl
addr16
sbb
mov
or
js
divl
arpl
mov
or
jecxz
add
call
rcrl
jg
shll
mov
imul
hlt
mov
int3
arpl
nop
and
push
lcall
stc
es
stos
xchg
inc
jbe
sub
and
lods
pop
clc
out
fsub
pop
aas
add
andl
lahf
pop
outsl
jb
and
into
dec
xor
push
adc
cld
lahf
mov
sub
mov
mov
jge
dec
mov
mov
jmp
es
jge
mov
xchg
adc
xchg
mov
ja
iret
mov
adc
pop
fs
lret
sub
ds
inc
jmp
pop
popf
in
icebp
dec
jecxz
hlt
jae
in
insl
shll
lret
pop
insb
mov
rorl
fimull
jecxz
lods
dec
arpl
or
dec
fistpll
push
push
mov
aas
sub
pusha
dec
fmul
call
inc
sub
scas
icebp
mov
mov
push
outsl
mov
loope
mov
mov
ficomps
jge
sti
xlat
pop
sbb
push
sub
rcll
and
fiaddl
fs
in
add
in
sbb
xchg
dec
mov
add
mov
call
imul
loope
adc
push
or
ljmp
es
pop
inc
sarl
mov
inc
gs
inc
rcrb
sub
pop
pushf
aas
adc
dec
orb
jnp
dec
shlb
lods
inc
pop
sbb
mov
icebp
ds
xor
xor
jle
imul
addr16
cs
and
sub
mov
mov
outsl
dec
imul
xchg
fisttps
cld
xchg
or
jg
and
ja
push
inc
jp
jne
adc
out
push
fadds
sarb
fcompl
adcb
cmpb
lret
mov
fstcw
fdivr
push
lds
sbb
mov
adc
aad
cld
add
mov
cmp
aad
mov
aam
add
inc
push
jns
or
movsb
gs
dec
mov
ljmp
sbb
nop
aaa
xor
cltd
jecxz
clc
loopne
mov
sahf
loope
push
push
inc
cli
das
add
mov
inc
mov
lods
mov
adc
std
addr16
adc
jg
jmp
and
bound
shll
icebp
test
xchg
dec
popf
cmp
and
mov
fdiv
mov
ss
xlat
ss
mov
push
inc
popa
sbb
test
mov
sbbb
aam
pusha
loop
xor
dec
pop
mov
out
jnp
sti
out
cwtl
ss
pop
mov
add
jne
or
xchg
scas
inc
or
mov
rorb
pop
lcall
clc
sbb
dec
out
or
fsubrs
add
mov
jns
xor
imul
loop
pop
pop
in
repz
mov
pop
sub
push
jno
and
pop
rcrb
adc
enter
test
pop
pushf
inc
push
test
or
mov
or
xor
cmp
push
enter
sub
fwait
gs
fmulp
sub
loop
xor
dec
cmp
cld
lea
mov
mov
scas
pushf
sbb
imul
out
pop
aas
jae
movsl
pop
add
insl
and
push
xchg
jne
ret
add
jle
jmp
test
repz
cmpsl
adc
jbe
xorb
and
adc
cmpsb
push
and
xchg
ds
cmp
cmpsb
loopne
mov
add
cmpsl
jne
sarl
cmp
or
into
cmp
fucomi
ucomiss
xchg
fucomip
or
lds
mov
xlat
mov
xchg
pusha
call
mov
add
pop
mov
pop
cli
popf
push
cmp
mov
push
in
lret
shlb
loop
cs
mov
clc
cmc
pop
outsb
xchg
mov
cld
je
or
jae
sbb
scas
add
outsl
subl
sub
or
mov
aad
xchg
dec
insl
jno
imul
and
lcall
mov
sahf
pusha
arpl
adc
loopne
jge
sbb
lea
cmp
sub
mov
movsb
enter
sub
cmp
rcrb
jno
jne
cmpl
bound
xlat
outsb
adc
shr
je
pop
mov
lock
xchg
ja
shrl
cmp
sbb
or
cmp
dec
lcall
mov
mov
mov
and
jp
xchg
negl
mov
xchg
pushf
lret
outsl
xchg
hlt
in
lea
lds
je
jle
inc
fidivl
lret
push
movl
das
stos
lds
xchg
sbb
pop
decb
lods
arpl
cmp
xor
out
mov
ficompl
push
fs
mov
push
jns
or
call
addr16
xor
stos
shll
loop
cmp
and
pusha
lods
add
pop
or
inc
mov
adc
xchg
out
into
inc
fisubrl
inc
pop
dec
cmp
out
lods
pop
add
sbb
cmc
sbb
or
cmp
pop
push
push
or
aad
mov
pop
adc
imul
dec
push
mov
sahf
xor
idivb
mov
outsb
xor
jae
mov
lahf
in
lahf
rcrb
pop
daa
push
xchg
push
sub
push
leave
xchg
idivl
test
lahf
xchg
in
addr16
gs
mov
testb
add
cmp
shlb
sub
sub
push
filds
repz
cmp
sub
sub
cmp
add
insb
mov
or
mov
or
sub
cmp
inc
pop
add
dec
cmpsb
add
sahf
je
push
push
iret
clc
cmp
xchg
clc
repz
mov
lahf
sarb
jg
pop
or
dec
sub
mov
sbb
lds
int3
pusha
aaa
mov
xchg
loope
inc
xchg
addr16
mov
out
pop
in
adc
pop
mulb
jecxz
push
out
stos
inc
stos
loopne
pop
mov
pop
or
cmc
aas
sbb
xor
sahf
cs
das
push
movsb
sbb
push
jmp
icebp
dec
aas
scas
or
aaa
aaa
sub
pop
sub
or
xor
mov
cmc
fsubrp
in
and
sbb
nop
js
push
sub
dec
stos
sbb
jno
cli
or
xchg
loopne
pop
mov
mov
push
mov
inc
or
sub
in
xchg
pop
dec
addr16
inc
nop
aaa
jge
pusha
add
lahf
cmp
loope
sub
mov
cltd
fldcw
add
jmp
push
cs
sub
jle
cltd
mov
jmp
adc
pop
inc
mov
inc
shll
out
cmpsb
lcall
aad
test
ja
push
in
out
push
cmp
cmp
inc
enter
leave
cmc
outsb
add
mov
inc
call
inc
xchg
outsl
pop
fimull
rcl
pop
mov
cmpsl
and
dec
out
scas
fs
sub
pop
fisttpll
fwait
adc
dec
icebp
inc
or
xor
fwait
mov
cs
insb
outsl
outsl
in
scas
jo
ror
add
popa
lods
dec
adc
pop
mov
jl
ljmp
mov
mov
movsl
stc
dec
outsl
sahf
add
pusha
jle
xchg
xchg
nop
jnp
cmpsl
sbb
mov
sarl
xchg
out
bound
js
sbb
push
or
je
out
mov
xor
lods
xor
popa
pushf
cmp
xchg
lret
sub
sbb
popf
mov
aam
adc
dec
lcall
je
sbb
loop
cmp
neg
lods
inc
or
adc
and
push
into
arpl
pop
and
or
into
movsb
jl
push
cltd
mov
and
jbe
lds
adcl
cwtl
mov
sbb
jecxz
fs
imul
cli
sub
out
mov
cmp
cmp
mov
jns
cmc
fstl
jp
dec
add
inc
out
xchg
iret
call
test
gs
dec
ja
pop
jecxz
lret
mov
rcrl
call
shl
fistpl
pusha
cmp
icebp
ret
jbe
jg
jg
push
out
imul
mov
lcall
inc
in
outsl
popl
push
aas
cmp
loopne
xor
fs
adc
imul
and
es
push
nop
xchg
add
ja
int3
dec
int3
jl
bound
fsts
pop
mov
outsl
jno
sar
das
push
inc
or
pop
rcrl
pop
ret
sbb
xchg
mov
dec
cmp
and
xadd
mov
push
lcall
dec
inc
lret
stos
iret
mov
or
test
push
dec
inc
lahf
cmp
push
ds
jmp
push
pop
rclb
jno
xchg
out
js
ret
aas
loope
mov
pop
repnz
fstl
lea
mov
mov
push
out
or
into
mov
push
out
pop
xchg
push
inc
inc
outsb
int
aad
push
outsb
lea
cmp
outsl
mov
cmpsb
xorl
add
xor
mov
in
pushf
xlat
xchg
data16
and
sbbl
push
sub
xor
leave
xor
aas
shl
popf
mov
mov
rcrl
push
shrb
aad
cmp
add
int3
jns
dec
jmp
testl
add
jae
aas
test
add
jecxz
mov
mov
push
add
or
hlt
popf
js
cmp
lods
dec
mov
rcrl
in
jbe
fldcw
sbb
sarl
mov
in
xor
bound
push
cmp
mov
loop
insl
cwtl
and
lcall
dec
shll
aaa
std
iret
inc
lods
loopne
cmp
or
xchg
jno
xor
xlat
ret
or
and
hlt
sub
mov
out
jnp
cmp
mov
jl
push
xor
dec
fldcw
sub
push
lods
subl
jp
shl
aas
orl
mov
dec
aam
xor
test
call
mov
fs
xchg
lahf
fistps
aad
pop
lods
dec
inc
outsb
mov
adc
pop
push
lock
xor
push
in
sub
cld
loopne
aam
jo
sarl
aas
movsl
pusha
sub
dec
daa
xor
add
mov
dec
and
mov
mov
inc
mov
mov
mov
scas
fmul
stc
mov
fwait
iret
das
xchg
and
add
ljmp
push
inc
add
push
add
movb
in
xchg
cmp
cmp
cmp
in
pop
movsb
out
pop
mulb
xchg
gs
inc
lret
jns
mov
icebp
add
pop
adc
mov
movsl
shll
dec
mov
imul
jns
dec
sahf
outsl
xchg
and
stc
add
sub
or
xlat
lds
inc
dec
push
aam
mov
pop
aad
jecxz
pusha
daa
aas
hlt
ret
lret
pop
push
nop
cmp
cmp
fsts
imul
idivb
add
fwait
jecxz
xchg
dec
pop
pusha
pop
mov
xchg
lods
popf
invd
pop
inc
int3
inc
mov
dec
xor
jmp
push
arpl
push
cmp
pop
push
fcomp
push
test
pop
push
sbb
sbb
jmp
ret
mov
ljmp
mov
cwtl
adc
hlt
std
gs
test
bound
out
jne
subb
xlat
arpl
sub
xchg
cmp
movsb
js
dec
xchg
pop
ficoml
scas
push
shl
jge
and
bound
daa
jle
icebp
mov
rcrb
add
lret
mov
loopne
out
sub
test
cmp
pushl
jne
jge
cwtl
dec
xlat
inc
mov
cmpsb
sub
sub
push
mov
sahf
sub
ret
and
pop
xor
jle
dec
adc
cmc
in
mov
frstor
clc
add
mov
push
xlat
sub
cmpsb
add
or
ror
fsubr
call
mov
cmc
mov
mov
out
jecxz
add
jg
mov
test
jmp
xor
std
scas
fcmovb
jae
and
mov
je
mov
repnz
imul
fldl
sahf
pop
mov
mov
mov
mov
movsl
xchg
imul
stos
or
repnz
lods
pop
mov
dec
sub
xor
lea
mull
psubb
addr16
std
adc
sbb
jg
jmp
and
push
gs
inc
movsl
xchg
inc
aas
push
lret
mov
test
xchg
nop
aam
cmp
int3
es
push
scas
dec
rclb
insb
adc
std
or
push
daa
daa
sub
jnp
gs
mov
insl
shll
or
xlat
xchg
mov
pop
test
xor
test
out
repnz
mov
lds
repz
lret
fisubl
and
cmp
mov
shrl
adc
and
fadds
sti
inc
test
xor
rcrl
or
fwait
pusha
xor
pop
jge
repz
pop
test
jne
outsb
sbb
xchg
test
in
cmp
ds
adc
icebp
lea
jne
movsl
jae
dec
or
hlt
sub
into
imul
jb
ret
data16
jnp
add
dec
mov
fcomip
or
mov
idiv
filds
sub
mov
repnz
in
scas
pop
adc
scas
outsb
dec
sbbb
hlt
jmp
loop
je
test
repz
jge
addr16
jmp
xor
imul
sub
int
push
or
lret
cli
divb
xor
adc
addr16
mov
stc
out
mov
scas
fwait
adc
decb
andl
div
mov
push
pop
fidivrs
popa
jle
stos
fs
nop
and
push
push
scas
mov
bound
adc
enter
fwait
movq
mov
xchg
xlat
and
mull
daa
jb
bound
push
add
ja
xchg
xchg
ret
mov
xchg
xlat
and
mull
daa
jb
bound
push
add
ja
xchg
xchg
int3
cmpsl
ljmp
out
mull
daa
jb
imul
add
jne
xchg
xchg
cmpsb
push
mov
lds
ja
clc
lods
call
adc
cwtl
dec
mov
fucomi
xor
add
xchg
mov
add
pop
test
cmp
sub
sbb
sbb
sahf
and
xor
add
adc
fs
clc
lcall
xchg
cmp
hlt
sbb
xor
lods
adc
movsb
pop
lret
stos
mov
dec
xlat
xor
das
out
mov
popf
dec
mov
aam
and
pop
fidivl
inc
mov
pop
mov
push
add
sbb
jns
orl
and
xchg
sub
mov
mov
vpcmpeqd
sbb
cmc
pop
add
scas
xor
aaa
jmp
xchg
loop
fildll
push
dec
or
sub
outsl
hlt
rolb
les
in
and
adc
lods
inc
fs
sbb
mov
push
fidivs
sub
sbb
xchg
push
push
xchg
inc
inc
and
adc
pop
imul
movsb
pop
inc
sete
sub
loop
push
sub
adc
inc
mull
mov
jnp
mov
les
push
mov
or
pop
shlb
sub
mov
xchg
jp
jb
and
les
mov
scas
inc
mov
aad
les
out
sub
cmp
aas
lock
std
dec
mov
test
mov
jne
gs
xor
or
inc
outsl
sub
cmp
loope
repz
mov
mov
xchg
jb
jae
push
cltd
ja
add
push
jp
push
pop
test
cmp
sub
sbb
or
cli
and
xor
add
adc
fs
je
inc
mov
push
pop
test
cmp
sub
sbb
or
cli
and
jecxz
cmpsl
or
jne
inc
push
hlt
sbb
pop
adc
cmp
popa
cmpsl
xchg
in
push
lods
out
aas
sbb
mov
adc
gs
jg
lods
sub
lds
or
in
insb
insl
testb
jno
lods
nop
mov
popf
dec
add
push
mov
xchg
mov
lods
cmp
pusha
pop
shrb
nop
pop
cmpsb
addr16
outsb
mov
icebp
lock
jmp
ja
out
push
fwait
adc
xor
les
xlat
add
stc
push
inc
mov
add
das
dec
adc
and
leave
sar
adcl
mov
test
or
cmp
mov
sbb
fisttpl
or
lret
adc
push
negl
jb
push
test
inc
adc
inc
clc
cmc
jo
shl
push
sbb
ret
js
and
push
sti
and
aas
pusha
imul
dec
push
sub
mov
aam
mov
out
and
add
ljmp
out
movsb
int3
scas
lahf
push
and
lea
sbb
xchg
repz
mov
lock
popa
sbb
jle
cmp
popf
inc
jne
ja
das
jecxz
xor
push
inc
fcmovb
adcl
dec
rcll
mov
loop
loop
sub
adc
sbb
inc
mov
mov
outsb
imul
jb
mov
pop
add
das
in
cwtl
clc
pop
pop
add
fs
mov
inc
cmp
add
xchg
ret
mov
shlb
dec
add
adc
scas
aaa
fisubl
jl
aam
fbstp
movl
dec
test
and
jb
push
aam
lret
or
bswap
loope
sahf
xchg
inc
push
add
pop
mov
dec
jmp
inc
pushf
bound
dec
xor
mov
lahf
push
xchg
lcall
dec
cli
xchg
ret
jne
mov
inc
pop
pop
sbb
sbb
xor
mov
fwait
bnd
sbb
pop
loope
imul
arpl
jmp
imul
iret
pop
sub
stc
dec
push
imul
hlt
pop
scas
pop
frstpm(287
insl
incl
mov
push
ljmp
repnz
loopne
add
mov
outsl
jp
mov
loop
pop
pop
idivl
adc
inc
sub
cmpl
test
fidivrs
dec
outsl
sbb
push
imul
hlt
xor
pop
and
jne
not
cli
popa
adc
jp
ficomps
xchg
push
jnp
mov
pop
adc
xor
cli
les
ljmp
push
stos
addr16
loope
mov
dec
inc
and
repnz
lock
lcall
imul
push
push
xchg
popf
dec
repz
adc
int3
std
hlt
jnp
dec
lock
fisubrl
sbb
cmp
fst
iret
cmp
pop
jecxz
mov
xlat
sub
daa
mov
cmp
nop
std
mov
sbb
fmull
sub
icebp
jae
movsb
popf
xchg
or
and
cmpl
xchg
pop
or
repz
xchg
mov
mov
mov
in
jp
enter
shrb
mov
call
mov
inc
xor
shl
fisubrs
jo
sub
xchg
xor
adcb
sahf
mov
xchg
pop
jne
xchg
add
ficoml
dec
sahf
push
xor
out
loope
cmpl
xor
pop
pop
int
pop
sti
pop
insl
cmp
push
sub
gs
xchg
lret
imul
cmpl
stos
scas
in
xchg
loopne
scas
outsb
imul
push
into
sbb
push
and
iret
scas
ja
dec
jb
and
xchg
or
cmp
mov
dec
test
cmp
std
daa
into
xchg
mov
cmp
out
inc
dec
jbe,pn
sub
sahf
es
pop
sbb
stos
sub
push
outsb
dec
push
fidivrs
insb
or
sbb
jge
lret
insb
pop
fsubrp
push
pop
pop
outsb
adc
leave
sbb
insb
in
mov
add
rorb
mov
leave
scas
sarb
inc
push
imul
inc
fidivl
add
xchg
outsl
cltd
leave
pop
fisubrl
aas
mov
hlt
sub
fldenv
call
xor
push
jae
lret
ljmp
inc
cmp
arpl
and
pop
mov
stos
aas
inc
cs
pop
rcrl
sub
push
orb
shl
cmp
out
lea
pop
popa
push
cmpsb
pop
xchg
push
pop
mov
mov
imul
fs
mov
imul
push
push
lea
aas
repnz
aaa
fsts
cld
fisubrl
and
cmp
mov
and
inc
lods
lahf
push
or
mov
xchg
in
xor
jge
addr16
mov
inc
clc
popf
or
out
or
popf
daa
lea
dec
test
jg
sbbl
dec
lcall
test
addr16
add
sbb
cmp
lea
mov
int
inc
int3
jne
and
push
mov
icebp
cmp
dec
out
dec
jae
shl
aam
xor
xor
test
popf
das
mov
in
or
repnz
test
popa
mov
inc
inc
fisubrl
je
xor
shll
fistl
dec
pop
aad
ja
adc
int3
push
mov
fdivs
add
les
xchg
mov
sub
jp
inc
mov
fstpt
fisttps
nop
inc
sbb
test
daa
push
dec
mov
les
mov
or
cmp
mov
push
ficomps
dec
insb
and
jne
lea
add
das
lea
jae
popa
mov
mov
push
gs
adc
xor
and
cmpsb
inc
out
lock
mov
repnz
dec
out
mov
add
lahf
orb
stos
lods
lahf
lcall
xchg
or
iret
xlat
cmp
scas
jmp
cwtl
ror
stc
sbb
test
xor
insb
push
add
mov
mov
and
mov
jno
mov
clc
inc
mov
mov
fimull
pop
and
xor
xor
or
outsb
mov
xchg
adc
jl
aam
inc
dec
cld
shlb
loopne
pop
lahf
idivl
jo
das
in
xchg
inc
pop
dec
adc
push
cmp
stos
vcvtsd2si
cmp
lds
jnp
rorl
or
sbb
xchg
jno
les
loope
cs
fs
js
sub
pop
push
dec
lock
pop
enter
jb
call
push
addr16
fnstsw
push
sarl
or
push
lcall
mov
insl
aad
push
mov
jge
or
xchg
roll
sbb
rorl
inc
push
shlb
add
mov
in
adc
sbb
jp
call
xchg
lret
sub
sub
jae
adc
jle
push
sti
sbb
dec
hlt
jg
stos
xchg
inc
aam
xchg
in
xchg
jp
lret
scas
insl
jg
mov
cmpsb
and
fs
mov
das
mov
inc
cmpsl
cmp
js
mov
xlat
mov
or
adc
inc
nop
xchg
movsl
ja
out
lret
mov
test
orb
cmp
pusha
imul
sub
jl
cmpsl
cmpsb
push
aas
xchg
cltd
insl
repz
divl
fstpl
sarb
fwait
fs
sbb
pop
maxps
jg
pop
push
filds
out
js
and
xchg
mov
add
push
out
lcall
and
insb
ss
xorl
mov
jb
mov
insl
mov
out
lret
cmp
call
testb
mov
adc
fistl
ljmp
jp
dec
rorl
pop
jle
cmp
sbb
mov
popa
out
pop
cwtl
jl
rorl
ljmp
cmp
xchg
sub
imul
pusha
iret
insl
xor
mov
pop
pop
hlt
dec
dec
leave
ret
inc
jp
lods
push
xchg
mul
sbb
sub
fcoms
xchg
sub
xchg
sahf
mov
and
dec
jb
push
and
addr16
sar
jbe
xor
jno
add
insb
ror
mov
inc
daa
push
hlt
push
adcb
sub
jnp
xchg
sub
les
ljmp
mov
jo
inc
sahf
inc
sub
ljmp
pop
pushf
cmpsb
mov
xchg
pop
xchg
xchg
sbb
nop
aas
jmp
cmp
loopne
test
pushf
sub
fcmovb
xlat
xchg
addr16
outsl
ljmp
out
lcall
adc
cmp
mov
cltd
cmp
push
push
movsl
bnd
mov
cmc
lcall
lahf
aas
jmp
xor
inc
mov
mov
fcomps
sub
test
lods
inc
push
cltd
sbb
cli
out
js
repnz
jmp
aad
out
scas
cmp
popa
aam
lods
sbb
sub
fadds
adc
jg
div
mov
sbb
cmc
es
fbld
add
cltd
xchg
loop
idivl
bt
maxps
lds
mov
mov
mov
lock
inc
fnop
mov
xor
xor
cwtl
adc
gs
xor
xchg
std
add
inc
dec
pop
movsl
icebp
push
mov
cmpl
dec
mov
scas
in
int3
push
imul
sti
and
jge
ret
mov
dec
cli
dec
sbb
mov
xor
mov
and
scas
fstl
popf
mov
cmp
movl
lods
mov
es
out
test
fwait
jmp
lahf
movsl
fimull
scas
pop
popf
cmc
push
sbb
movsb
cmp
movsb
test
loope
push
cmp
jne
cmp
jns
out
ja
sbb
rol
add
test
mov
clc
dec
stos
ds
lock
mov
je
adc
mov
out
pop
sbb
mov
mov
mov
mov
cmp
pop
lock
sti
or
movl
rolb
adc
es
in
mov
jl
mov
jecxz
movd
fsts
mov
mov
or
das
shll
mov
int3
push
daa
jns
lret
cli
bound
enter
aam
pop
sbb
ja
cld
stc
rorl
pop
mov
fs
dec
cmp
add
clc
movsl
dec
es
mov
sbb
mov
jp
es
rcll
js
ret
push
pop
xor
fwait
inc
adc
movsb
sbb
push
jbe
ret
and
mov
outsb
popf
mov
call
inc
and
jmp
dec
bound
rcrl
mov
inc
pop
rolb
sbb
adc
xor
lcall
and
insl
add
ds
dec
jl
jle
mov
mov
lahf
xchg
shr
int3
sub
push
push
xor
mov
fstpt
sub
insb
inc
scas
pop
or
xchg
insb
test
add
pop
shlb
mov
xor
in
bound
sub
imull
in
outsl
in
or
inc
push
in
xor
fdivp
xor
gs
cltd
orb
add
enter
mov
dec
insl
adc
fldenv
cmp
jbe
incl
adc
data16
je
leave
add
bswap
hlt
push
in
fldl
mov
sub
nop
and
gs
mov
xchg
pop
mulb
notl
jp
and
imul
and
xchg
cmp
pop
loope
pop
in
mov
lahf
dec
pusha
pushf
hlt
push
int
push
adc
inc
call
aam
jb
into
repnz
arpl
inc
incb
add
pushf
cmp
mov
pop
xchg
xchg
ja
xchg
fucomip
shlb
popf
cmp
jb
out
pop
daa
scas
mov
mov
mov
sub
mov
and
mov
aad
sbb
lods
les
cmpsl
aad
push
sbb
jnp
xlat
or
out
push
movsl
fldt
push
sbb
js
ljmp
xor
dec
sub
cmpsl
test
stos
mov
test
inc
test
scas
add
mov
call
lea
fnsave
sbb
mov
mov
pop
sbb
clc
and
test
mov
fisubrs
xor
loope
test
adc
mov
pop
jg
push
cltd
int3
jg
jns
cmpsl
hlt
lahf
dec
fwait
adc
or
and
add
sbb
xchg
adc
or
test
mov
xchg
xchg
sar
iret
inc
mov
ss
mov
mov
sbb
loope
and
mov
xor
sahf
mov
or
mov
mov
repnz
out
xlat
call
dec
jb
test
jmp
add
push
xchg
push
pusha
mov
and
dec
dec
push
dec
lea
mov
or
xor
test
inc
lcall
stc
lods
jnp
inc
shrl
out
or
jmp
inc
fists
loope
push
and
dec
dec
or
mov
cli
shlb
call
icebp
dec
mov
lea
pushf
aaa
int3
push
mov
or
into
shll
xor
or
dec
xor
inc
lea
mov
aad
lret
mov
fcmovne
loop
xchg
xchg
mov
icebp
or
pop
lret
xchg
shll
sub
sti
fwait
cmc
shll
sub
cmp
xchg
fisttpll
je
mul
arpl
popa
ret
sub
mov
stos
mov
mov
push
jnp
mov
cmp
or
jbe
repnz
popf
pusha
push
jp
cs
sub
mov
ja
jg
pusha
xchg
dec
out
jmp
or
aaa
fidivl
subb
mov
xor
or
std
add
mov
leave
xchg
dec
lret
and
push
ds
cmp
pop
inc
cmp
cmp
stc
or
add
call
inc
or
in
pop
ret
cltd
lret
notl
xor
iret
dec
shll
ja
out
cltd
neg
sbb
jle
outsl
mov
jge
mov
test
lahf
das
mov
insb
sti
push
pop
jecxz
adc
sbb
int
add
xchg
test
stos
cwtl
in
ds
out
dec
or
fldcw
pusha
push
add
outsl
out
mov
add
in
jo
out
mov
lds
and
pop
fdivp
lds
xchg
ja
mov
sub
mov
dec
push
lods
mov
imul
dec
push
fisttps
mov
data16
jbe
pop
stos
cmp
cwtl
push
aaa
and
pop
or
daa
jb
inc
sti
and
adc
dec
or
jmp
stc
testl
add
sub
cmp
adc
dec
pop
push
repnz
test
and
xchg
mov
out
sarl
xor
xor
jecxz
push
dec
inc
scas
sbb
in
shll
pusha
jg
iret
mov
pop
ljmp
cltd
add
xor
mov
sub
and
push
inc
adc
push
out
loopne
jp
call
dec
mov
sub
push
outsl
in
sbb
mov
pop
arpl
cmp
repnz
adc
stc
ss
mov
xlat
cwtl
add
sbb
lret
imul
scas
xor
sub
js
xchg
jns
xchg
aad
adc
sub
aam
orb
test
lods
mov
iret
mov
cmp
sbbb
mov
std
cltd
pusha
jle
cmc
mov
aaa
jg
ret
and
pop
insl
inc
fcmove
xchg
mov
js
dec
adc
xor
sahf
mov
mov
lahf
ud1
mov
ret
out
adc
fdiv
mov
mov
lcall
mov
bound
and
inc
xchg
mov
xchg
adc
out
xchg
lret
lods
call
or
loop
dec
mov
fbld
jno
mov
xchg
sbbl
mov
leave
loope
stc
insb
dec
adc
jns
es
fsts
sbbl
aam
or
cmp
adc
or
inc
sub
sbb
sbb
push
in
mov
cli
mov
out
jae
call
bound
lret
in
iret
jns
xchg
ret
flds
mov
cli
testl
inc
andb
inc
mov
pop
push
xchg
das
rcr
xorl
add
scas
push
mull
orl
repz
push
mov
inc
stc
ljmp
sub
mov
int
cmpsb
dec
cmp
mov
es
push
lods
lret
mov
xchg
mov
test
jp
cmpsb
push
dec
fbstp
das
adc
cmp
adc
push
inc
sbb
test
into
loope
loop
pop
aaa
fisttps
pop
xlat
fs
or
daa
dec
mov
pusha
es
sub
jle
sub
dec
push
cli
ror
roll
adc
call
push
leave
xchg
or
mov
dec
push
lds
mov
jle
insl
cmp
jmp
lock
testl
lret
and
mov
add
and
pop
stos
cmp
jge
xorl
into
xor
ret
in
sbb
iret
call
cmc
test
roll
mov
std
jl
pop
sub
faddl
movsb
cli
aaa
mov
mov
or
lods
ficomps
sbb
xchg
aam
call
scas
rcr
les
mov
movsb
push
out
loope
cltd
xchg
xchg
inc
sarl
pusha
iret
and
push
adc
rorl
je
adc
and
mov
mov
xchg
xlat
push
sarl
and
rcll
mov
stc
movsb
add
dec
mov
mov
aad
scas
repnz
popf
loopne
testl
xor
pop
push
sahf
movl
jno
mov
push
ja
popf
mov
cld
add
cltd
sbb
mov
test
enter
pop
fs
jp
xor
loope
shlb
divl
add
mov
jnp
inc
pusha
call
cvttps2pi
insl
sbb
sbb
sahf
outsb
ds
into
imul
cmp
enter
sbb
mov
insb
out
test
inc
inc
ficoms
pop
or
cmpsl
and
adc
stos
scas
int3
cwtl
cmp
ret
pop
mov
daa
cmp
pushf
sub
and
lcall
repnz
adc
aad
movsb
jns
inc
fxam
mov
jp
call
dec
mov
jle
xorl
pop
jo
sbb
mov
stos
int
add
or
shrl
push
bound
aaa
imul
popa
add
xchg
xor
xor
enter
mov
adc
aad
scas
ljmp
mov
mov
sub
xchg
jne
pushf
mov
xor
sub
mov
jmp
mov
int3
stc
shlb
cmpsl
clc
sub
xchg
or
out
push
or
xor
clc
add
adc
push
adc
xchg
popf
xor
jno
mov
jmp
sub
scas
ljmp
push
fwait
sub
xchg
aam
xlat
or
sbb
notb
or
push
push
jb
dec
pop
cli
dec
pusha
jge
xchg
lea
mov
pop
lret
cmp
and
push
jb
aam
or
fisttpll
outsl
andl
imul
enter
mov
pusha
rorl
add
insl
and
idiv
push
mov
iret
sub
out
mov
lock
or
stc
imul
bound
and
jne
decl
cld
and
xchg
call
es
push
xor
push
scas
iret
pop
dec
dec
je
subl
jno
xlat
jp
mov
mov
lods
sbb
jo
int3
sub
push
xor
push
dec
dec
movl
sbb
mov
clc
sub
bound
pop
mov
fsubrl
inc
jg
jb
fcoml
imulb
fadd
jo
outsb
fidivrs
push
inc
popf
or
dec
sub
adc
ss
sub
mov
ficompl
dec
enter
js
or
jecxz
icebp
cmp
push
int
out
std
adc
fsubrs
cmpsb
mov
out
int
sahf
cmp
fwait
dec
js
mov
pop
into
or
addr16
lret
repnz
pop
fcompl
les
pop
adc
lods
in
mov
bnd
cltd
les
xor
gs
repnz
sub
sar
mov
imul
sbb
out
add
jae
sti
push
lock
stos
imul
addl
or
push
test
lds
insl
into
out
xchg
out
sub
push
and
test
aad
sarb
xchg
sub
std
inc
sub
fs
popf
push
stos
je
inc
mov
push
pop
test
cmp
sub
sbb
or
cli
and
xor
add
adc
fs
je
inc
mov
push
pop
test
cmp
sub
sbb
or
cli
and
jl
jl
adc
fs
fcompl
jl
mov
test
cmp
cmp
sbb
loop
out
and
xor
add
adc
lcall
push
lock
dec
insb
mov
sub
sbb
or
cmc
push
stos
aas
fwait
mov
dec
jmp
fldt
lahf
cmp
or
jnp
imul
out
xor
mov
das
mov
fldt
lahf
cmp
or
jnp
imul
out
dec
pop
mov
das
ljmp
add
mov
pop
inc
outsb
hlt
rclb
sarb
fidivs
mov
imul
push
mov
jnp
out
add
inc
loop
mov
shr
mov
fnclex
lcall
fimull
je
mov
pop
in
pop
es
ret
pmaxsw
jmp
pop
outsl
jae
jle
pmullw
scas
pop
clc
fcomp
push
xor
mov
inc
mov
inc
imul
pop
lret
outsl
jnp
dec
push
xchg
xor
out
fs
or
mov
das
fldt
bound
and
sbb
push
out
push
dec
stos
clc
shlb
psubq
mov
push
cmp
or
jnp
imul
out
dec
pop
mov
das
mov
dec
jmp
fldt
fidivrs
sti
push
sbb
or
push
mov
pop
pop
ret
aas
push
lcall
dec
mov
sub
fidivrl
or
pop
mov
xchg
mov
sarb
xchg
and
adc
arpl
imul
imul
out
dec
pop
mov
das
mov
dec
jmp
fldt
lahf
cmp
or
jnp
imul
out
dec
pop
mov
das
mov
dec
jmp
fldt
lahf
cmp
leave
and
int
adc
sbb
push
fistl
out
fs
cmp
sub
cltd
sti
mov
lea
ss
cmp
xchg
ss
push
shlb
ja
push
adc
pop
out
mov
jns
test
and
sbb
mov
cmp
mov
sub
repz
js
dec
das
outsl
xchg
or
inc
and
xor
sbb
sub
jnp
shrl
push
rcl
mov
push
iret
sub
sar
repnz
cld
sub
sbb
inc
shlb
fmull
jecxz
or
xor
fistpll
js
stos
sbb
shrl
lret
or
xchg
fldl
inc
dec
dec
adc
dec
test
sub
mov
out
add
push
imul
hlt
push
sti
je
clc
enter
in
in
insb
jmp
push
and
cmc
sbb
lcall
adc
jp
outsb
add
xor
enter
call
dec
push
add
mov
pop
pop
rolb
jnp
test
enter
pop
inc
and
outsl
sbb
or
add
inc
es
lret
fwait
push
dec
test
pop
adc
xor
add
mov
jmp
lcall
add
loopne
es
jecxz
je
call
movsl
in
pop
ficompl
jno
shll
fidivrs
push
jno
and
fstpl
cld
aad
mov
mov
inc
sbb
repz
pusha
pop
and
push
inc
js
cmp
xor
or
pop
or
mov
dec
lret
fimuls
add
jno
in
pop
mov
mov
int
add
sahf
data16
jl
xor
outsb
cs
int
pop
enter
mov
addr16
cmpsb
cmpsl
lds
les
adc
ficompl
add
cmp
xchg
sub
rcrb
sub
call
or
lahf
adc
inc
and
rcll
pop
lcall
popf
jmp
dec
adc
mov
add
out
arpl
jmp
mov
gs
dec
xor
mov
std
xchg
out
inc
adc
adc
lods
and
sahf
jge
inc
pusha
sbb
xor
mov
xor
jne
out
xor
test
sbb
lods
test
imulb
push
push
mov
push
lock
sbb
xchg
xchg
push
push
lahf
stc
jg
sti
push
aad
popa
jnp
mov
lret
cmp
lods
pop
push
cmpsb
push
and
js
lea
icebp
iret
push
cmpsl
inc
ljmp
dec
int
push
xchg
out
mov
xchg
adc
stc
hlt
scas
add
es
xor
rcr
sbbl
sub
movsb
pop
outsl
mov
xlat
and
int
mov
xor
or
clc
stos
pop
and
pop
insl
jnp
mov
repz
jl
ds
pop
in
int
stos
ret
adcb
jmp
push
pop
mov
out
adc
push
ret
insb
fcompp
test
ffreep
cmpsl
into
mov
mov
push
cltd
mov
cltd
sub
fs
rclb
or
fnstenv
insl
icebp
push
jmp
fidivl
inc
dec
outsb
inc
or
dec
adcb
jae
dec
dec
pop
or
or
jno
movsl
out
mov
cli
notb
inc
rcr
or
pushf
mov
fs
cli
xchg
loop
jnp
das
hlt
ret
jne
push
hlt
nop
movsl
xchg
mov
mov
nop
loope
and
cltd
dec
daa
cmp
sti
dec
or
shrl
jne
daa
cmp
mov
std
js
mov
mov
mov
movsb
xchg
and
ja
add
adcb
nop
or
pop
sbb
or
jg
and
cli
sub
cmp
lea
jbe
les
mov
pop
mov
and
cmpsb
aam
nopl
je
mov
mov
mov
int
inc
mov
xor
inc
push
iret
mov
xchg
jp
inc
nop
ljmp
dec
push
aam
fdivs
scas
arpl
pop
xchg
sbb
imul
jae
dec
push
adc
adc
pop
imul
mov
les
cs
push
je
hlt
aas
test
shll
sbb
or
jecxz
call
inc
notl
dec
imul
popa
xchg
adc
add
cmp
jne
lock
mov
and
sar
xor
stc
in
aas
pushf
mov
jg
bound
scas
push
lods
fstpl
fdivrl
mov
and
je
jne
cwtl
mov
inc
iret
sub
mov
out
pop
enter
hlt
scas
inc
subl
cmp
pop
and
adc
fs
outsl
cld
push
jo
shrb
or
fwait
iret
lods
or
js
cmpsb
insb
push
jns
adc
rol
push
push
lods
dec
fildl
adc
imul
pusha
popa
cmp
lea
pop
inc
pop
add
cltd
imull
xchg
js
lods
hlt
adc
daa
mov
jne
push
lahf
ljmp
jp
pop
cmpsl
pop
sti
sub
loope
call
lods
in
inc
pop
ds
cmc
call
mov
jg
icebp
cld
jb
movl
push
adc
sub
popf
pop
js
jbe
xchg
rorl
loop
sbb
jb
xor
cmp
or
popf
repnz
push
jbe
push
sbb
adc
pop
xchg
xchg
pop
arpl
loope
arpl
push
add
push
in
arpl
jo
and
dec
xor
subb
sub
shl
jbe
mov
pop
int
mov
popf
xor
push
ljmp
and
scas
mov
add
iret
ret
repz
das
cli
and
cmp
adc
std
jo
xlat
lods
pop
pause
mov
mov
and
sti
sti
xor
and
arpl
in
mov
xchg
stos
push
imul
cmp
jo
and
sbb
call
shlb
push
loopne
leave
xchg
jle
push
xchg
xchg
imull
sbb
mov
mov
dec
jmp
sub
or
add
sbb
std
in
sub
dec
push
in
mov
inc
fadds
cmp
test
and
loope
cmpl
hlt
out
ret
aad
add
inc
xor
mov
rolb
stos
out
pop
jno
push
add
pop
fsubl
in
mov
pop
dec
mov
sbbb
push
mov
mov
stos
dec
fwait
jmp
shl
mov
aaa
mov
bound
arpl
mov
ret
sbb
inc
cmp
sahf
hlt
push
fs
lret
or
add
mov
ljmp
mov
test
aas
lds
aam
fs
jae
mov
adc
or
out
push
ja
sub
fisubrl
or
jmp
clc
cmp
xor
dec
sti
mov
cmp
out
imul
pushf
stos
cwtl
hlt
pop
fnstsw
jecxz
test
rcrb
aad
adc
lret
adc
in
jl
inc
push
xchg
testb
inc
stos
js
lea
mov
sbb
mov
fcoms
push
xchg
into
xchg
in
fistpll
cmp
add
insb
xor
inc
pop
aaa
mov
shlb
pusha
bound
movsl
inc
pop
in
bound
int3
add
ret
dec
cmp
and
lret
fisubrl
mov
outsl
sbb
jmp
arpl
popf
aad
test
bnd
pop
xor
push
fiaddl
scas
push
mov
loop
cmp
inc
xlat
sub
pushf
push
mov
jbe
push
mov
jae
lret
jl
out
push
mull
je
int
xchg
xchg
xchg
sub
or
jno
pop
les
cli
lock
imul
sbb
add
cltd
jmp
xchg
jecxz
in
in
imul
das
ss
push
and
xchg
call
sub
out
dec
mov
cmp
insb
inc
rolb
push
dec
int3
inc
pusha
pop
mov
int3
dec
out
icebp
pop
lret
sub
and
dec
ret
push
ret
inc
sub
clc
pushf
jno
xor
cmp
add
insl
adc
loope
test
aam
aaa
pop
sti
and
sbb
jb
inc
cmp
cs
imul
jno
sub
pusha
enter
stos
xor
cmc
mov
inc
mov
xor
xorl
jecxz
ljmp
cmp
hlt
das
pop
mov
scas
pushf
sti
mov
int3
push
sbb
xor
jp
pushf
mov
test
imul
mov
stos
imul
jae
inc
xor
in
xorb
out
lcall
das
sbb
or
leave
or
out
cmpsl
sub
imul
lret
push
push
rcrl
rolb
pop
cmp
lock
fidivrl
dec
pop
outsb
cmp
add
sbb
or
rcrl
push
inc
sbb
test
test
cmp
orb
test
mov
push
pop
push
cmpsl
fmuls
adc
mov
loop
test
cs
sub
add
jecxz
into
inc
imul
dec
shl
jmp
jo
xchg
loopne
int3
mov
rcl
fdivs
add
sar
stc
or
xor
add
stos
pop
out
in
sbb
mov
jb
jno
das
dec
rorl
adc
aad
mov
sub
adc
cmp
push
and
repz
and
sub
sub
cld
jp
add
pop
out
fsubl
inc
inc
aaa
pop
adc
or
mov
sbb
jno
lock
clc
and
lcall
out
insl
div
inc
dec
cmp
jmp
testb
mov
stos
aad
sbb
out
mov
mov
nop
fcomip
adcl
cmpsl
mov
dec
cs
aaa
aad
fsubr
jae
or
jmp
and
push
push
outsb
and
mov
xor
loopne
int
cmp
mov
or
pushl
repnz
cmove
add
in
hlt
rcll
and
push
cmp
out
jae
lea
aas
push
incb
cmpsl
jbe
mov
pop
in
cmp
and
inc
les
hlt
enter
hlt
loopne
xchg
pop
push
aam
and
mov
pop
jne
imull
lock
cld
sbb
and
fcomps
mov
cmp
lea
out
stos
cmp
lods
or
add
xchg
sbb
sbb
add
dec
push
jnp
push
push
pop
sbb
push
dec
push
rolb
push
loope
gs
fs
push
aad
clc
and
pushf
mov
adc
stos
lahf
in
add
xchg
and
mov
shrb
mov
ret
into
jmp
xor
mov
pop
pop
add
xor
add
out
cmpsb
fcomi
mov
mov
inc
xlat
hlt
es
and
jnp
lods
sub
pop
and
mov
or
jns
fistps
fdivrs
loop
inc
stos
push
jge
out
insb
cmc
lods
data16
outsb
ret
xor
dec
ret
push
iret
cwtl
mov
cltd
neg
jbe
jl
mov
into
icebp
jb
cmp
xchg
and
aaa
sub
mov
cmpsb
hlt
divl
scas
js
jle
int3
mov
jg
or
out
fwait
cmp
in
pushf
xchg
mov
jmp
ljmp
cmp
dec
cwtl
pushf
gs
das
ret
lret
or
loop
daa
cs
xchg
inc
out
mov
fwait
int3
stc
jo
adcb
push
repz
mov
inc
ret
lods
add
jns
sbb
mov
rcrb
inc
push
adc
popf
dec
or
les
aad
pop
sub
fs
or
xchg
cmc
das
test
pop
jb
loopne
fcmovnbe
dec
or
cli
imul
jnp
cmp
mov
fildl
pop
int
pop
ja
add
inc
jae
pop
mov
fstps
sub
xor
jge
fsubs
enter
stc
pop
fdiv
pop
or
aam
and
inc
insb
inc
jp
icebp
aad
jmp
xor
dec
gs
ret
xchg
out
sbb
dec
in
mov
jge
enter
adc
mov
cs
ficoml
xor
sbb
mov
push
into
pop
pop
or
push
and
daa
cs
adc
dec
xlat
mov
or
pusha
jne
clc
mov
in
pop
mov
mov
enter
push
sub
cmc
pop
lea
or
imul
mov
dec
jmp
mov
rolb
fxch
lahf
sahf
movsb
push
cmp
movsl
jo
repnz
out
inc
pop
int3
and
xchg
pop
js
adc
inc
jno
dec
es
mov
jmp
aam
inc
sti
movsl
cs
jge
and
rorl
xor
fistl
fcompl
pusha
lcall
xchg
pop
sub
push
pop
out
lods
movsl
mov
mov
pusha
push
iret
inc
jne
js
shll
xlat
fs
subb
ret
repnz
ja
xchg
cmp
sub
and
push
into
int3
subl
ljmp
addb
outsb
jmp
test
and
push
add
insl
push
cmp
push
cwtl
xor
xlat
dec
xor
adc
popf
adcb
insb
push
pop
test
fxch
pusha
fbstp
pop
dec
sub
dec
fisttpl
lahf
sbbb
ljmp
pushf
out
lock
imul
or
adc
mov
or
adc
in
shlb
mov
mov
inc
push
aaa
cmpsl
clc
xchg
lea
xchg
into
xchg
push
test
push
and
int
inc
cmpsb
fwait
mov
xor
pop
pop
jmp
mov
lds
mov
fstpt
pop
or
and
and
pusha
aam
pop
jne
sbb
cmp
adc
dec
scas
rcrl
call
inc
jge
sub
out
inc
dec
pop
out
sbb
popf
imul
cltd
or
sub
es
pop
mov
pop
aas
sbb
add
mov
add
ja
lret
dec
adc
outsb
loopnew
ja
xchg
ja
divb
mov
adc
mov
mov
leave
ffree
rorl
ficompl
pop
roll
jbe
push
pop
shl
mov
sbb
data16
lea
dec
pop
enter
sbb
jb
jo
shll
in
repnz
dec
sbb
cmp
bound
xor
sub
orl
push
sbb
pop
sbb
add
sahf
adc
mov
xchg
call
test
aad
jecxz
mov
enter
push
cld
sahf
mulb
mov
ret
push
movsl
lahf
xlat
inc
cmc
mov
pop
cmp
shll
inc
or
and
jae
or
out
mov
pop
mov
cwtl
leave
pop
bound
adc
cmp
scas
xor
mov
inc
inc
cmp
and
add
jp
xor
mov
mov
arpl
imul
icebp
test
push
movsb
and
mov
cmpsl
xchg
push
mov
out
lret
cmpsl
ret
push
subl
enter
cli
mov
dec
add
pop
push
lods
pop
and
jecxz
jle
adc
pop
jb
lret
xor
sub
add
and
jl
inc
push
sbb
test
mov
lea
pop
cs
or
jle
mov
cmp
sahf
sub
jne
push
popl
jb
not
xchg
cmp
cmp
sub
lods
out
mov
adcb
jno
sbb
adc
add
jp
fstl
and
dec
add
jge
dec
sub
jg
mov
ficoms
adc
push
inc
add
mov
inc
xchg
shll
es
test
jno
iret
adc
jno
add
and
mov
and
mov
jnp
lcall
std
cmp
ljmp
jae
test
jmp
cmp
aam
aad
imul
les
add
adc
adcl
dec
mov
jnp
adc
push
inc
pop
inc
in
cmp
aas
xor
imull
sti
in
dec
das
cwtl
outsb
and
fidivrl
das
testb
cwtl
stc
stos
sbb
jmp
inc
add
mov
mov
sub
lret
lahf
mov
and
andl
dec
fimuls
cltd
fs
in
test
fsubs
jbe
outsb
mov
jno
rorl
fistpll
ror
and
stos
out
push
push
push
jp
cli
stos
sbb
rorl
mov
mov
push
dec
sub
lcall
in
jns
hlt
inc
add
mov
inc
test
rcl
arpl
and
cmp
addl
cs
xchg
cmc
aaa
push
movsl
or
sub
mov
jno
aad
add
mov
sti
out
inc
je
xlat
pop
adc
fwait
and
add
push
es
dec
out
mov
sahf
push
mov
adcl
pop
inc
pop
stos
mov
movsb
repnz
cmp
push
jo
push
das
rcl
xchg
jbe
addr16
add
lds
pop
outsl
mov
adc
sahf
mov
xchg
and
adcb
push
pop
popa
sub
mov
fstl
mov
cmp
adc
xchg
cmc
inc
inc
bound
loop
lret
aas
fstpl
sbb
je
loop
or
out
repz
xor
add
test
sub
mov
sub
outsb
sub
jo
fs
out
cmpsl
movsb
test
inc
dec
push
int3
cwtl
addl
outsb
inc
xchg
js
js
mov
addr16
je
cmp
jo
xchg
add
ds
and
add
fwait
stos
push
cmp
pushf
lcall
fdivrs
es
std
or
xchg
inc
jnp
dec
and
cmp
adc
sahf
fcoms
lahf
add
repnz
movsl
xor
dec
sub
ret
loope
add
push
inc
hlt
nop
repnz
or
or
std
inc
enter
xchg
mov
movsl
adc
in
inc
imul
jo
inc
inc
daa
pop
mov
sti
std
push
dec
popa
bound
lret
adc
in
loope
aas
lods
push
or
ja
pop
iret
xchg
nop/reserved
jmp
xchg
jb
popa
rcr
mov
pop
lods
scas
int3
in
push
mov
pop
out
fnstsw
test
push
sbb
outsb
cmp
or
or
incb
divl
mov
mov
dec
xor
add
clc
leave
in
pslld
nop
jo
sbb
sub
adc
push
imul
or
cmp
repz
add
sti
dec
mulb
fdivr
or
leave
sbb
push
testb
cmp
push
mov
and
outsl
mov
xchg
and
push
jg
inc
sarb
into
mov
pop
push
loope
adc
iret
cmp
jecxz
test
sbb
and
loopne
lods
shrl
lahf
jecxz
movsb
sbb
push
pop
and
mov
shll
add
sbb
mov
push
and
lds
sbb
dec
adc
sub
fcomps
pop
inc
add
test
lds
inc
mov
mov
loope
fwait
jmp
dec
test
and
pop
push
nop
pop
call
adc
fmull
dec
or
or
mov
pop
dec
and
aad
xchg
xlat
sbb
cmp
es
sub
xchg
jle
mov
aaa
mov
mov
in
and
adc
push
lret
push
jle
rcr
pusha
rcrb
push
mov
inc
or
jp
xchg
movsl
data16
inc
orl
repnz
data16
or
scas
test
xor
lds
push
ds
mov
sub
dec
hlt
fs
fadds
sub
lret
add
sub
imul
mov
sbb
push
aad
or
pop
cmpsb
mov
jmp
lret
push
in
addl
enter
or
xchg
sub
aam
or
les
pop
in
outsl
sub
xchg
mov
mov
jl
xchg
in
insb
push
dec
sbb
and
jb
pop
and
sbb
je
xor
dec
dec
push
mov
mov
in
push
scas
stos
mov
pop
mov
mov
in
jo
xchg
or
outsb
jge
fs
sbb
int3
cmc
xorl
pusha
add
and
jl
xchg
int
sub
jnp
imul
out
dec
pop
mov
das
mov
dec
jmp
fldt
lahf
cmp
or
jnp
imul
out
dec
pop
mov
das
mov
dec
jmp
fldt
lahf
cmp
sub
sbb
imul
outsl
dec
pop
mov
das
mov
dec
jmp
fldt
lahf
cmp
or
jnp
imul
out
dec
pop
mov
das
cld
das
jae
adc
and
xor
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
movsb
mov
xchg
xchg
in
pop
xchg
sahf
mov
daa
push
xor
adc
arpl
inc
push
push
movsb
mov
xchg
xchg
in
hlt
jecxz
ret
aam
and
xor
add
adc
adc
inc
inc
push
push
movsb
mov
xchg
mov
cli
hlt
jmp
fcmovnbe
leave
and
pop
adc
data16
pop
pop
xor
ret
test
std
hlt
jmp
mov
cmp
stc
pop
jle
pop
adc
jmp
mov
dec
cmp
imul
cmp
sub
fdivrl
in
xor
je
adc
out
mov
int3
mov
fmuls
lock
adc
xchg
in
gs
dec
movl
dec
inc
jl
rorb
push
aam
mov
sahf
xor
je
mov
xor
imul
cmp
pop
mov
mov
lahf
stos
xor
hlt
arpl
pop
dec
mov
imul
arpl
pop
hlt
cld
jle
orb
addl
addr16
mov
in
hlt
repz
and
xor
add
adc
fs
imul
shll
testb
push
mov
dec
push
xor
push
jbe
push
xor
aas
ror
rcr
lock
and
xchg
loope
push
push
push
jns
adc
xchg
adc
jae
and
daa
ret
mov
icebp
mov
ret
aam
and
xor
add
adc
arpl
inc
push
push
movsb
mov
xchg
xchg
in
hlt
repz
and
xor
add
adc
arpl
inc
push
push
movsb
mov
jmp
xor
push
insl
xchg
or
out
cmp
jns
dec
xchg
inc
mov
push
in
stos
addr16
ss
daa
inc
call
mov
shll
inc
add
xchg
jo
and
mov
cltd
push
add
in
in
sub
cmp
jle
add
mov
push
stc
mov
dec
pop
xchg
push
inc
rcl
lea
adc
pushf
repz
xor
ret
fdivrp
mov
push
push
fcmovnbe
je
push
pop
dec
das
movsl
imul
cltd
cld
arpl
or
inc
clc
movsl
sti
add
cmp
ja
aad
xor
pop
shl
add
mov
mov
add
int
incb
push
mov
popa
sbb
xchg
add
add
mov
lods
push
jg
cmp
subb
int
dec
imul
pop
stos
mov
psllq
xchg
sbbb
repz
mov
fstpl
adc
add
mov
pop
lods
cmp
scas
cmpsb
inc
out
ss
scas
jmp
xchg
sbb
pop
fmulp
jne
cwtl
dec
and
pop
pop
push
enter
rolb
adc
shr
or
dec
inc
adc
dec
add
jle
les
sbb
jmp
cmpsl
adc
inc
in
addl
mov
leave
inc
repz
arpl
lahf
push
xor
lcall
popa
loope
xor
sbb
inc
xor
nop
push
cmp
jle
sub
mov
out
and
fcmovnbe
pop
ja
je
adc
outsl
movsl
je
or
mov
add
into
stos
sbb
lock
ret
es
es
lods
negl
inc
push
fldcw
mov
notl
inc
jb
cmpsl
jge
xchg
dec
mov
lahf
adc
add
lret
xchg
ljmp
aad
jl
das
xchg
mov
cmpsb
mov
push
mov
loopne
lret
fcoml
mov
xchg
dec
jb
xor
cwtl
inc
pop
pop
xor
jg
shlb
cmpsl
or
clc
and
cltd
out
movsl
push
mov
mov
pop
imul
or
lods
gs
lahf
mov
adc
or
popf
add
xor
jns
inc
push
loopne
mov
shr
dec
xor
or
mov
lds
jp
cld
and
stc
ret
addr16
sbb
negl
pop
xchg
push
jecxz
sub
dec
adc
ret
mov
test
loope
daa
sub
aad
push
mov
out
xor
movsl
push
inc
jmp
xchg
jbe
pop
pop
xchg
ret
mov
sub
lods
pop
mov
popa
sub
cmp
inc
shlb
add
inc
movsb
sub
pop
pop
jb
add
mov
add
mov
es
dec
cli
push
xor
and
xchg
jbe
push
push
push
cmp
push
xchg
gs
in
inc
fwait
mov
xchg
insb
adc
outsl
dec
sbb
in
aaa
jns
cltd
insb
sbb
jl
mov
xchg
cwtl
out
sbb
jmp
iret
add
mov
fildll
xchg
cs
dec
inc
jg
mov
mov
pop
pop
and
insb
jge
push
call
in
loope
add
inc
pop
jb
adc
push
fdivl
add
stc
mov
andl
ljmp
jb
repz
xchg
and
aam
in
sub
add
shlb
jno
sbb
or
push
jbe
aam
sub
mov
mov
test
js
and
mov
xor
inc
sub
andl
enter
xchg
imul
or
sub
pop
into
bnd
int3
xchg
movsb
or
ror
dec
cmp
into
mov
mov
shrb
jne
pop
mov
adc
mov
test
cmp
fwait
mov
xor
adc
out
ret
and
scas
fwait
xchg
inc
fwait
add
lretw
sbb
pop
sub
out
cmpsb
push
dec
cmp
xchg
sbb
mov
in
add
cmp
ret
xlat
scas
lock
add
ret
inc
push
push
shlb
sbb
cwtl
jp
sub
jg
ljmp
loopne
mov
cmp
shrb
jne
fmul
bound
sub
int
xchg
in
mov
fnstsw
pushf
ret
mov
mov
ja
xor
outsl
add
scas
mov
or
pop
test
sub
hlt
adc
pop
movsl
lds
popa
sub
jae
add
mov
cltd
mov
jl
pushf
jno
cmp
fidivrl
xchg
xchg
stos
stc
dec
insb
aas
addb
push
rorl
jo
and
mov
ret
cli
inc
fists
mov
mov
xchg
stc
cmp
sbb
mov
mov
mov
pop
add
adc
rclb
mov
bts
rcll
xor
dec
icebp
cltd
add
imul
inc
mov
call
mov
add
test
dec
cmp
mov
cmp
testl
test
pop
sti
jbe
aas
mov
cmpsl
in
or
mov
xchg
fdivl
clc
cmp
lcall
dec
shrb
test
mov
xor
cs
adc
mov
mov
pop
addr16
or
jne
loop
pop
ret
push
repnz
push
adc
in
adc
imul
cmpsl
aaa
sti
mov
or
rdtsc
jns
push
push
fsubs
idivb
in
inc
aad
sub
fdivs
or
neg
mov
adc
sub
push
ljmp
daa
mov
loopne
xor
sub
xor
xor
and
and
xor
xchg
in
out
mov
and
mov
dec
xchg
popa
cmp
in
mov
sbb
out
out
push
arpl
sub
jg
jns
ret
pusha
pushf
push
imul
pop
int3
out
push
inc
adc
adc
std
inc
pop
jmp
int3
cmp
ret
dec
inc
and
xchg
add
add
mov
fbstp
jbe
or
mov
popa
lret
sbb
clc
or
add
sbb
cwtl
loop
addr16
jecxz
mov
sbb
and
out
loopne
lret
sub
push
ss
and
add
ret
roll
dec
nop
cmp
out
rcr
je
es
out
adc
xchg
push
not
push
sub
adc
outsb
inc
int
xorb
ret
or
in
xchg
xchg
push
pop
mov
lea
lods
ret
subl
mov
mov
inc
push
cmpb
xor
mov
mov
ret
jb
movsl
sbb
xor
repnz
or
fistpll
dec
dec
dec
mov
ficoms
test
das
in
adc
xor
pop
adc
push
jne
ja
mov
mov
fnstcw
cs
iret
dec
pop
add
cmpl
std
pop
cmp
xor
mov
sub
je
adc
adc
out
adc
push
cmc
push
xchg
shrb
cmp
adc
cmc
mov
out
rcrb
in
add
int3
adc
aam
jg
xchg
mov
leave
and
ror
and
xchg
lret
push
inc
icebp
mov
sbb
inc
aaa
mov
pop
ss
or
mov
jle
sub
cmp
insl
mov
push
dec
and
nop
ss
pop
mov
int
mov
xor
xor
stos
lds
loop
jno
cmp
inc
inc
jbe
lods
mov
cld
scas
sub
adc
outsl
jbe
jae
cs
sti
stc
ret
or
cli
and
mov
push
xchg
iret
shll
dec
ss
rcrb
or
mov
push
inc
xchg
stos
lods
mov
push
stc
gs
shl
push
add
pop
dec
sbb
jg
xorl
ret
lds
sahf
cwtl
xor
hlt
pop
pusha
push
cmp
imul
cmp
movsl
negb
mov
push
stos
cmp
push
inc
cltd
mov
push
mov
lahf
rcll
mov
sbb
mov
pop
in
pop
mov
inc
rorl
xchg
int3
jmp
imul
xchg
push
aam
xchg
daa
sub
mov
push
mov
imul
lret
push
fdivrl
mov
xchg
and
icebp
les
mov
insb
imull
push
in
pop
into
in
cmp
sbb
jb
jbe
sub
out
push
sub
cmc
js
outsb
xor
push
add
push
fildl
mov
push
mov
mov
daa
test
leave
mov
shl
mov
aaa
mov
mov
stc
or
mov
movsb
out
cmpl
jg
push
lds
jp
scas
add
dec
sbbb
ret
and
sahf
cmp
and
jl
fimull
lret
mov
int
in
loopne
adc
add
sarl
subl
sahf
aaa
mov
jg
std
orb
xchg
mov
nop
sbb
sti
cmp
xchg
imul
pop
mov
xor
pop
jl
pop
jno
dec
cmpsb
and
pop
fwait
mov
push
xchg
int3
dec
stos
aad
shl
testl
mov
mov
shrb
mov
mov
mov
dec
lcall
in
add
lods
loopne
sbb
and
lods
add
adc
adc
rorb
arpl
addr16
push
push
imul
inc
arpl
pop
sub
call
mov
mov
adc
add
ret
jl
pop
or
mov
push
clc
cmp
outsb
test
mov
push
fsubrl
pop
pop
bound
icebp
lods
xchg
mov
inc
xchg
inc
repz
lock
clc
in
out
cmp
cmp
ds
fdivl
mov
dec
pop
adc
lds
push
pop
jae
sub
scas
aam
cmpsb
out
rorl
add
or
cltd
loope
pop
sbb
xchg
repz
imul
mov
jnp
movsl
imul
cmp
cmp
mov
cmp
mov
push
das
mov
ds
add
pop
outsl
jmp
adc
xchg
cmpl
adcb
fisubrs
inc
mov
nop
in
jl
in
add
insl
pop
inc
xlat
ds
and
icebp
repnz
lret
pop
pop
sti
fsts
jnp
inc
and
adc
outsl
jp
addr16
je
dec
rcrb
inc
decl
push
xor
mov
push
mov
into
dec
push
cmp
daa
pushf
jnp
outsl
add
dec
xchg
test
push
and
inc
into
ret
xlat
lods
es
inc
cmp
cwtl
cwtl
enter
pusha
out
add
push
ja
sbb
or
and
roll
mov
aad
xchg
push
outsl
jae
sub
enter
pop
outsl
mov
fmulp
pop
fsubl
jmp
adcb
pop
adc
cvtps2pd
test
in
cmovb
pop
pushf
mov
sbb
lret
mov
xlat
pop
xor
adc
or
addr16
outsl
lods
shll
or
dec
lcall
mov
mov
push
mov
addr16
sbb
add
imul
test
std
jo
js
ljmp
xchg
cld
cmp
jo
pop
sbb
sbb
pop
sub
pop
mov
lcall
xchg
ja
repz
cmp
repz
jne
loopne
jl
push
idivl
dec
add
jbe
repnz
push
mov
loope
fs
cmp
add
xchg
lret
dec
mov
andb
or
push
inc
bound
pop
jmp
add
je
jmp
out
stos
cmp
adc
icebp
fbstp
call
mov
bound
jmp
in
mov
xor
pop
cltd
adc
cs
mov
stos
sub
lahf
hlt
lock
xchg
add
fnstenv
jb
daa
out
enter
mov
mov
ja
mov
mov
pop
imul
ficomps
insl
inc
frstor
outsb
shrb
xor
lds
sub
lods
andl
mov
push
cmp
pop
shll
mov
mov
shll
mov
jne
jo
shl
adc
pusha
cmp
dec
stc
popa
pop
jg
jl
shrl
push
dec
push
xor
popf
or
dec
outsb
mov
hlt
pushl
inc
out
inc
cmp
add
stos
jp
adc
inc
dec
test
mov
mov
adc
sbb
shll
loopne
pop
pop
or
sbb
mov
mov
mov
fiaddl
sub
in
bound
cs
push
and
pop
add
addl
xchg
repnz
and
out
mov
cmc
inc
data16
add
mov
mov
mov
fbstp
pop
xlat
jne
insb
mov
xor
xchg
je
ret
cmpsb
shlb
fwait
mov
sbbb
mov
pop
out
jge
inc
fsubl
ds
arpl
jo
inc
and
dec
xchg
std
rorl
mov
xacquire
mov
and
insl
rcrl
cs
mov
dec
movsb
inc
dec
adc
scas
and
in
push
mov
fwait
movsl
add
lret
sub
dec
xchg
pushf
in
mov
cmp
or
sbb
sbb
xor
leave
les
xchg
xlat
pop
cmp
jp
xchg
push
iret
push
dec
lahf
cmp
loopne
adc
jbe
lret
test
outsl
jns
dec
sbb
xor
sub
mov
mov
rcll
xor
pop
rcrb
xor
mov
cltd
cmc
sub
dec
je
mov
inc
xor
rcrb
lahf
pop
out
in
scas
loopne
sub
xchg
pop
adc
mov
ds
movsl
xchg
xchg
stc
xchg
gs
xchg
add
cmc
fld
xchg
dec
jl
scas
jge
cmp
pop
xchg
in
int
dec
shrl
outsb
lock
cwtl
out
into
loop
aad
lods
sub
xchg
int
sbb
xchg
lds
insb
in
jg
dec
popf
dec
stos
cmpsb
mov
xorl
fiadds
adc
jns
pop
stos
jo
addb
sbb
dec
xor
icebp
stc
jo
scas
jge
test
jmp
mov
loop
push
jb
jns
clc
fwait
and
mov
or
jnp
mov
dec
addl
xchg
mov
mull
mov
push
jb
mov
jle
jl
adc
aad
or
xchg
clc
mov
cwtl
pop
pushl
sbb
les
mov
dec
popf
test
or
cmp
rcrb
xchg
popa
cltd
mov
mov
mov
xchg
mov
sbb
cmpsb
lods
lret
enter
jo
sbb
dec
arpl
in
lods
lods
ds
fidivl
mov
jmp
imulb
xor
jo
mov
jnp
pop
or
scas
outsb
enter
inc
call
sbb
out
pshufw
inc
mov
mov
xor
xchg
sub
sub
push
sub
nop
leave
dec
mov
sub
push
or
jmp
jmp
popa
insl
nop
jno
jge
lock
push
mov
aam
pop
loopne
mov
fidivrl
xor
aam
andl
sub
lds
and
xchg
jle
outsl
mov
xlat
pop
push
cmp
xor
sbb
loope
test
test
or
sub
scas
scas
test
inc
in
cmpsl
stos
mov
das
adc
mov
flds
repz
push
lcall
in
sti
dec
sub
push
out
shl
add
and
cmp
rcll
dec
hlt
ret
lea
cmp
dec
cmpsb
hlt
jg
imul
push
les
ret
fiaddl
pop
mov
fldz
mov
inc
xchg
sub
out
int3
sahf
jo
sti
jge
xor
shll
mov
or
and
imul
push
jo
mov
and
push
and
enter
out
nop
inc
fs
ss
loope
js
imull
lods
push
pop
jle
jmp
lret
jnp
rcrb
dec
mov
les
sub
pop
mov
mov
mov
mov
lret
ljmp
push
scas
stos
jae
jle
fsubrs
fistps
je
jge
jl
call
xchg
add
sbb
pusha
mov
aaa
adc
mov
lcall
or
das
stc
cmc
aas
push
bound
mov
mov
or
cli
dec
xchg
call
add
pop
cmc
ds
rcrl
add
adcl
ss
gs
cmp
jb
pop
subl
jae
and
or
xchg
push
es
repz
xor
xchg
xchg
jg
loope
mov
shrl
push
sub
ret
inc
sbb
loopne
aad
push
ret
out
cmp
push
sbb
push
cmp
push
push
sbb
daa
or
ret
rorb
int
in
or
scas
ret
pushf
push
mov
sbb
cs
fldln2
adc
sub
lods
cmp
jmp
lcall
mov
into
popf
xchg
sbb
rolb
sar
push
sahf
das
cwtl
jl
xchg
and
mov
push
jmp
inc
add
pusha
fidivs
jne
popf
inc
inc
je
inc
jmp
pop
sbb
adc
pop
mov
xchg
xlat
pushf
mov
push
shl
jle
int3
stos
fildll
scas
out
mov
in
mov
jb
jo
add
sarl
rorl
stc
mov
rcll
jb
vrsqrtss
cmp
mov
inc
pop
jl
add
lea
sarl
nop
cmp
into
stos
mov
das
xchg
push
mov
xor
gs
xchg
fldl
cltd
inc
arpl
stos
mov
pop
insl
loope
jl
mov
jmp
push
mov
fdivrp
sub
call
bnd
std
pop
clc
fstpl
push
pop
cld
sahf
jg
and
imul
imul
inc
jecxz
ret
pop
gs
in
in
ret
out
mov
into
mov
aad
push
xchg
jae
xchg
dec
xor
sub
or
ret
jmp
push
push
data16
dec
clc
and
mov
mov
mov
or
out
inc
loop
xchg
sbb
and
nop
daa
jp
roll
xchg
mov
push
jnp
sti
pop
jns
cmpsl
jno
idivl
test
push
mov
inc
push
shr
stos
divb
aaa
jecxz
adc
shlb
sbb
lret
xchg
rcr
mov
push
iret
jg
add
in
dec
adc
pop
hlt
mov
in
mov
cmp
jmp
inc
js
rcll
lods
xchg
mov
add
xchg
out
xor
mov
cs
daa
pop
mov
fnstsw
js
cmc
xchg
fmuls
fdivl
test
push
sarb
hlt
in
pop
cmp
inc
loope
xchg
into
mov
inc
stos
pop
dec
pushf
sbb
into
dec
les
and
pop
inc
sbb
adc
test
mov
xchg
data16
pop
dec
sbb
out
or
add
orl
dec
or
push
in
ljmp
pop
jne
test
imul
mov
push
add
add
inc
das
icebp
jo
lods
mov
jl
das
push
dec
jne
inc
mov
dec
imul
mov
lcall
adc
ror
sahf
cmp
adc
je
cmp
repz
xor
fchs
insb
test
jmp
inc
and
stos
cmp
adc
pop
clc
inc
cmp
cmp
and
inc
push
movsb
fldl
or
pop
cmp
push
sbb
dec
xor
out
push
mov
repz
xor
fadd
in
stc
pop
pop
data16
pushw
mov
push
in
adc
outsl
adc
xchg
pop
fs
and
sub
fs
imul
xor
or
and
xor
cmp
push
sti
mov
aas
dec
test
jg
aad
sbb
repz
xchg
push
pusha
outsl
cli
fnstenv
dec
mov
dec
cli
fs
adc
xor
gs
push
movsb
pop
add
pusha
dec
stos
in
cmp
sbb
xchg
inc
push
sbb
fxch
xchg
out
inc
xchg
mulb
dec
add
divl
mov
dec
js
pop
pop
loope
fstpt
mov
adcl
ret
aam
and
xor
add
adc
arpl
inc
push
push
movsb
mov
xchg
xchg
in
hlt
repz
and
xor
add
adc
arpl
inc
push
push
movsb
mov
xchg
xchg
in
cmc
repz
and
add
jae
inc
push
push
movsb
cmpsl
mov
test
hlt
repz
ret
push
adc
and
cltd
scas
add
adc
cld
or
cmp
sub
mov
mov
mov
mov
adc
sub
cmp
jae
push
jns
jns
mov
mov
ret
pushf
and
xor
arpl
adc
bound
pop
inc
imul
subb
fld
jmp
xor
arpl
add
sbb
rol
mov
into
cli
ret
jae
ss
loope
mov
jb
jb
shl
adc
mov
mov
ret
shll
fscale
push
dec
popa
cmpsl
jae
sbb
out
lahf
sub
pop
lea
dec
shrl
pop
lea
jle
test
dec
xor
sbb
fdivl
pop
mov
add
mov
enter
loope
sbb
cmc
hlt
out
out
cli
mov
push
sbb
jns
dec
dec
rclw
mov
inc
cli
ss
stc
dec
testb
adc
xor
sbb
add
mov
xchg
push
cmp
jo
or
sbb
push
pop
jb
inc
imul
subb
fld
jmp
xor
add
adc
bound
pop
inc
imul
out
call
xchg
lods
test
add
jbe
push
cmp
es
in
cmc
mul
fcmovu
xchg
stos
xlat
jo
pop
imul
imul
add
adc
lret
mov
mov
jmp
xor
add
adc
bound
pop
inc
imul
subb
fld
jmp
xor
add
adc
bound
pop
inc
imul
shufps
xchg
cmp
pop
mov
es
sbbl
xor
cmp
arpl
ss
push
aas
and
mov
push
sbb
xor
in
enter
jg
out
jne
sbb
addr16
fstps
jl
mov
or
adc
mov
sbb
out
dec
scas
cmp
cltd
xchg
icebp
cmp
cmpl
xchg
sbb
mov
scas
bound
lds
movsb
fdivs
xchg
psllw
cli
add
loop
xor
push
repnz
and
mov
fmuls
addb
rcl
cmp
cmp
and
addr16
push
gs
daa
cld
jb
inc
js
jo
adc
aas
test
ja
fiaddl
pop
and
xchg
out
stos
inc
pop
test
pop
icebp
imul
sti
and
xchg
mov
cmp
sbb
lcall
divl
push
dec
pop
dec
mov
pop
add
cmpb
adcl
leave
sub
loopne
jmp
jmp
sub
test
pop
and
mov
rorl
push
dec
dec
or
cs
inc
mov
xchg
lcall
mov
inc
sub
and
mov
cmp
push
data16
or
push
clc
cmc
push
clc
jb
xchg
ljmp
loope
ss
mov
ficoms
lea
jl
ficoml
mov
into
pushf
add
test
xchg
mov
lock
dec
or
popf
mov
fidivs
lods
aam
jno
jbe
jbe
ror
das
mov
outsl
pusha
xchg
pop
test
pop
mov
repz
xor
test
mov
push
pop
xor
push
leave
pop
pop
sub
mul
cmp
or
aad
sbb
mov
lahf
stos
adc
add
adc
aas
sbb
ficoms
shl
test
ss
out
xor
out
inc
fildll
mov
lret
outsb
movl
fldenv
insl
cli
pop
rcrb
jmp
dec
jns
push
push
mov
xor
popa
fdivrl
arpl
scas
lea
lret
mov
out
mov
mov
fldln2
push
insb
pop
dec
sbbl
ljmp
sub
dec
cs
fxam
enter
popf
jmp
or
jo
adc
sub
push
mov
cli
sub
jbe
mov
sbb
into
inc
aam
push
push
cwtl
faddl
ret
fldcw
cmpsl
sub
stc
outsl
push
dec
or
cs
push
jle
or
jecxz
adc
and
xchg
cmpsl
pop
es
jns
ljmp
mov
adc
jecxz
xchg
add
mov
or
cmp
jns
adc
adc
lods
dec
cmp
adc
out
fsubr
pop
cmp
or
leave
iret
test
or
stos
push
jns
adc
hlt
test
out
xchg
rclb
cmpsb
sub
test
popf
loopne
mov
lds
xchg
outsb
cmp
jno
orb
pop
flds
sub
dec
cmp
scas
mov
ds
push
sbb
sahf
out
push
and
movsb
fistps
push
mov
cmp
xchg
xchg
scas
mov
xchg
cwtl
xchg
push
lret
xchg
xchg
xor
sub
dec
inc
shll
lahf
mov
pop
loopne
push
sbb
aam
lock
test
push
repz
pop
inc
fcomp
lret
cmpb
lret
pusha
jno
cmp
in
sub
push
test
mov
and
pop
lock
loop
adc
xlat
or
jno
rcrb
lss
or
stos
cmp
xchg
or
pusha
icebp
add
xchg
fildll
rol
test
movsl
nop
inc
add
pushf
fldcw
mov
std
jnp
lds
stc
pop
xchg
mov
xchg
aam
jns
in
sub
xor
lcall
lods
push
pushf
or
sbb
jne
adc
into
pop
test
mov
andl
mov
in
mov
test
imul
movsb
sbb
setne
lcall
sub
xchg
dec
lock
mov
ja
or
mulb
stos
mov
enter
subb
stos
aas
outsl
sub
dec
rorl
gs
mov
sub
mov
cmpsb
jge
fadds
fucomip
push
mov
push
lods
sub
int
in
aad
push
adc
sbb
mov
bound
add
ficompl
lret
pop
sbb
pop
mov
loope
and
push
movsl
cmp
mov
cmova
lahf
in
jmp
sbb
sti
mov
fidivrl
orl
jmp
out
insl
adc
xchg
mov
sarb
sub
cmp
xor
jae
xor
mov
push
inc
popa
dec
cltd
and
or
ficomps
lahf
sbb
cmp
jg
cmc
lock
mov
loopne
aam
lock
fs
cmc
imul
inc
adc
stos
lret
pop
xor
leave
pop
popf
fisubrl
das
jns
lret
mov
js
mov
inc
cld
mov
aad
adc
mov
hlt
sub
gs
lods
dec
jb
mov
cmp
rorl
test
mov
or
fsubr
mov
adc
jecxz
gs
mov
jo
adc
mov
sbb
cli
mov
arpl
jne
test
dec
push
shr
mov
add
int
outsb
jmp
mov
insl
push
jae
pop
xchg
pop
xchg
mov
xrelease
test
sbb
dec
jne
bnd
mov
enter
js
and
fnstenv
xlat
sbb
jmp
cltd
inc
mov
call
andl
jp
lret
hlt
xchg
mov
insl
popf
sti
adc
adc
cmp
in
das
or
push
gs
repnz
inc
je
push
xchg
jl
xor
out
push
dec
call
ret
xor
inc
mov
shll
cli
lret
or
cwtl
add
sbb
jne
rorb
scas
sbb
add
imul
mov
je
xchg
mov
mov
dec
sbb
xchg
cmc
pop
xor
adc
jmp
gs
cmc
cmpsl
sti
cld
aad
rclb
in
gs
xchg
icebp
jo
stos
cs
pop
scas
sbb
mov
in
mov
std
adc
or
and
lods
scas
aas
cmpsl
rorb
in
subb
sub
adc
shrb
lret
pop
cmp
mov
scas
inc
loop
push
enter
ljmp
inc
fisubrl
inc
fadd
aad
push
jecxz
fwait
pusha
or
pop
movsl
sbb
add
loopne
push
iret
pop
cmc
jmp
adc
push
test
cs
push
pop
stos
mov
mov
xor
movsb
insb
mov
inc
or
rcrb
test
popa
iret
bound
jnp
das
ljmp
sbb
lahf
cwtl
imul
ret
or
or
push
dec
pop
pop
mov
lcall
outsl
mulb
fsubs
adc
and
sub
into
shll
push
outsb
fimull
and
and
jmp
push
pop
cld
jl
dec
xor
mov
push
cmpsb
cmpsl
stos
and
sbb
out
lods
pop
mov
lret
mov
mov
stos
fstpl
cmp
outsb
cli
mov
xor
dec
sbbl
call
subb
out
sti
lret
jl
lret
imul
sahf
pop
popa
ljmp
push
out
mov
dec
mov
mov
nop
add
into
mov
out
xor
lahf
mov
cmp
insb
lods
gs
or
sbb
fildll
add
add
push
int3
or
cs
pushl
lea
fisubl
stos
enter
xor
out
sbb
push
inc
add
sub
sub
push
out
out
mov
cmp
and
mov
and
adc
addr16
test
mov
lcall
sbb
pop
push
xchg
jle
xchg
xchg
js
pop
xchg
push
sbb
jp
push
or
das
jmp
add
std
hlt
scas
push
lahf
bound
aaa
fcmovnb
sub
das
sbbl
cs
mov
xchg
js
push
pop
mov
push
pop
ret
shrb
fistpll
lret
imul
push
les
fsubr
sbb
push
iret
sbb
or
and
pop
dec
jne
imul
lods
data16
inc
mov
test
testl
pop
ja
sub
lret
fisttpl
jmp
jp
out
stc
lds
add
orl
mov
push
loopne
imul
mov
xor
icebp
add
push
or
stc
daa
mov
ja
mov
test
int
push
mov
add
jno
mov
js
sub
cmp
in
data16
add
ljmp
mov
add
sti
ficomps
xchg
popa
inc
cmp
jmp
sub
mov
loopne
xor
or
insb
insb
shll
sub
mov
imul
fs
mov
and
jb
popf
cmc
fiadds
dec
push
sbb
xchg
jmp
xchg
loopne
ficomps
and
bound
xlat
cli
cmp
es
and
wrmsr
dec
or
cli
cmp
mov
add
dec
outsb
stos
push
cmc
ja
jne
mov
outsb
aas
imul
ret
jmp
cs
sahf
lods
int
cld
inc
push
jb
sub
pusha
mov
out
rorl
scas
scas
sarb
mov
jne
cld
mov
cmp
xor
arpl
mov
cltd
iret
adc
sub
jno
push
pop
jl
mov
scas
mov
cmpl
jmp
sbb
sub
push
adc
cmp
adc
cli
in
push
outsb
sbbb
adc
inc
f2xm1
fs
aaa
mov
add
fwait
into
cmpb
out
in
pusha
sbb
or
repz
in
incl
and
jmp
pop
les
push
xorl
jmp
flds
in
dec
mov
sti
das
andb
jo
add
lods
xlat
push
adc
dec
or
xlat
inc
cmp
bound
mov
fprem
push
insb
dec
jb
mov
sbb
loopne
ss
rcl
jmp
push
pop
pop
mov
popa
add
pop
rcr
jno
xchg
or
aas
cmpl
xor
into
out
fsubl
lahf
cmp
mov
xchg
lcall
fs
inc
loopne
mov
data16
fcmovbe
jecxz
sarl
imul
mov
jbe
mov
cmp
cli
test
pushf
loopne
int3
es
mov
jae
mov
out
imul
jb
push
in
mov
add
or
sbb
in
jne
or
mov
stos
pop
dec
test
icebp
jo
insb
cwtl
lods
adc
outsl
lret
in
xchg
mov
inc
movsl
lock
loopne
push
sbb
jmp
xchg
cwtl
inc
in
in
pop
adc
inc
xor
mov
sub
decl
pusha
pop
fisubrl
outsb
xchg
mov
test
inc
xchg
pop
adc
xchg
fisttpll
shll
iret
insl
mov
dec
scas
push
shr
orl
xor
jge
add
ficompl
stos
mov
pop
testl
or
push
lock
cwtl
fwait
pop
jnp,pt
jns
mov
jnp
push
rclb
xlat
sbb
sbb
cmp
sub
adc
jae
cld
inc
xor
dec
jae
ss
pop
ficoml
inc
shlb
repz
jg
es
xor
int3
cld
shrl
loopne
cmp
push
loop
sub
pop
bnd
inc
lret
mov
dec
cmpsb
add
inc
and
shll
or
cwtl
mov
leave
add
pop
add
out
mov
pop
sub
lock
inc
or
ret
push
pusha
jno
mov
sahf
inc
xor
push
dec
mov
xchg
dec
jg
and
mov
adc
pop
es
outsl
push
loope
sbb
aaa
repnz
push
sahf
push
jno
push
xchg
add
pop
xor
cmpsb
mov
push
pop
adc
cmp
dec
repnz
arpl
mov
pushf
cltd
call
int
mov
bound
jle
cmpsl
pop
cli
pop
fisttps
xor
fidivrs
nop
mov
xor
sbb
sub
pop
inc
push
jae
rcrb
rolb
subb
push
and
clc
xchg
pop
pop
shlb
ficoms
dec
cmc
aas
test
test
adc
clc
mov
sbb
mov
ss
out
dec
xlat
nop
inc
cmc
xor
imul
xchg
nop
push
push
popa
and
jp
cmp
pop
jle
sti
into
push
repz
lea
push
mov
dec
sbb
lods
cmp
mov
adc
adc
jo
inc
data16
or
mov
imul
and
popf
cmc
or
out
xchg
sti
inc
pusha
or
hlt
ret
fcmovbe
jge
push
or
int
scas
jge
mov
mov
sbb
mov
in
jne
cmp
outsl
mov
add
cmp
xchg
jnp
push
inc
dec
or
or
fdivrp
sbb
mov
sub
mov
add
rcrl
popf
ss
adc
les
scas
aaa
push
sub
in
jg
and
nop
rcll
neg
or
or
xchg
and
cmpb
adc
js
mov
jg
mov
pop
add
into
mov
mov
fldt
dec
imul
xchg
jl
lea
movsb
shlb
xchg
int
xchg
loopne
jns
outsb
mov
imul
dec
pop
cmp
cmp
add
mov
push
or
pop
pop
lods
dec
loop
xchg
adc
pop
push
sarl
arpl
jae
add
mov
mov
sub
enter
mov
push
out
leave
movsl
cmp
add
xchg
test
adc
add
out
imul
xchg
xchg
hlt
push
mov
push
shl
and
jl
mov
cmp
notl
sarb
dec
out
cwtl
fsubrs
divb
scas
subb
out
inc
pop
enter
add
pop
ss
fsubr
pop
loop
dec
dec
cmp
es
xor
jo
or
pop
sub
pop
push
fistps
lds
cltd
xor
enter
enter
inc
imulb
mov
out
and
fcmovnb
jae
fstps
ret
dec
jae
xchg
test
mov
decb
data16
mov
jnp
push
adc
loope
lret
test
mov
aaa
mull
cmc
inc
stos
std
repnz
iret
and
ret
mov
icebp
sbb
scas
gs
nop
inc
fisubs
adc
mov
out
adc
cmp
cld
dec
loopne
ret
adc
xchg
mov
lock
push
mov
ljmp
jne
xchg
xor
lods
pusha
cmp
xor
xchg
or
stos
orb
add
cld
mov
jne
ds
call
push
cmp
pop
mov
cmp
cltd
sub
sbb
les
leave
mov
fwait
jne
test
cmp
cmc
pushf
add
lea
pop
mov
insb
or
in
jecxz
push
insb
pushf
lock
mov
inc
sahf
mov
das
aad
stos
sub
xor
outsb
mov
sub
cmp
xor
or
in
inc
pop
sub
dec
mov
sahf
push
aad
lods
hlt
lahf
pop
dec
sbb
mov
stc
lods
mov
inc
sbb
mov
sub
int3
movsb
push
dec
frstor
mov
push
lahf
lret
in
sub
sbb
pop
dec
xor
subb
push
sarb
cmp
cmp
sbb
lock
or
cs
xchg
das
pop
pop
test
insb
fwait
jmp
loopne
push
mov
mov
mov
xor
inc
cmp
scas
and
sub
push
aas
push
and
inc
pop
push
inc
testb
or
pop
mov
sarb
stos
inc
leave
hlt
and
pop
push
call
adc
lock
fiaddl
adc
jnp
sub
push
and
test
pop
sub
xor
cmp
pushf
pop
mov
popf
sahf
xor
push
nop
dec
lea
cmp
mov
jns
addr16
pop
and
push
addb
loopne
push
sbb
fwait
push
cmp
imul
ficompl
mov
sbb
jb
push
dec
je
xlat
es
lea
lods
lahf
push
mov
push
jae
mov
push
rolb
arpl
lods
mov
adc
icebp
movsl
rcr
pop
cmp
jle
inc
mov
faddl
adc
jnp
leave
jecxz
xchg
std
movl
fwait
dec
idivb
xor
mov
aad
bound
mov
addl
out
repz
or
fsubr
cmpsb
stc
pushl
not
cltd
cltd
adc
out
xchg
ja
pop
sub
inc
mov
pop
loop
scas
mov
cmp
mov
mov
jns
mov
xor
int
xchg
ja
adc
mov
jg
push
dec
sub
popf
jmp
xor
stos
dec
lret
xchg
lock
xor
and
lcall
mov
adc
mulb
ljmp
cmpsb
fs
enter
fwait
movsl
je
jp
pushl
dec
dec
xor
fisttps
gs
subb
push
xchg
lock
dec
add
ss
and
sub
ret
pop
push
push
stos
pop
aad
jns
dec
outsl
andb
jecxz
cmp
inc
jg
fdivp
fisttpl
mov
xlat
sbb
test
iret
adc
jae
ja
les
nop
or
mov
stos
jmp
rcll
cmp
int
rcrl
subl
jno
idivl
outsb
mov
movsb
mov
pop
ret
gs
loope
or
push
dec
movl
pop
hlt
mov
mov
out
dec
imul
sub
lock
ja
cltd
ret
dec
out
repz
test
jb
adc
mov
lret
push
shll
movsl
sbb
daa
inc
sbb
call
sarl
jno
std
movsl
mov
adc
dec
fwait
pushf
out
mov
mov
add
fisubs
lea
scas
adc
add
pop
mov
push
or
push
push
jns
or
pushf
lret
pop
mov
insl
mov
shll
rcrb
cmpsb
sbb
mov
test
loope
in
push
jo
add
pop
cld
add
add
insl
fimuls
jp
movsl
cli
dec
out
add
mov
cmp
inc
ret
push
testl
cmp
mov
mov
movsb
jb
sahf
adc
pop
sub
fdiv
rolb
ss
jb
clc
sbb
in
and
sub
popa
xchg
cs
loopne
jo
xor
test
push
mov
mov
and
sahf
cmp
out
jmp
dec
inc
cli
push
pop
xor
std
sbb
lahf
std
lock
sbb
mov
xchg
mov
nop
fmuls
mov
cmp
add
popf
nop
push
into
jo
jmp
xchg
sbb
xor
adcb
add
inc
mov
xchg
xchg
pop
fcoms
push
mov
add
dec
mov
xchg
inc
aad
enter
pop
imul
adc
icebp
xorb
aaa
shll
std
ljmp
cld
jp
xchg
mov
mov
xchg
les
dec
pop
gs
enter
mov
mov
jecxz
dec
cmp
mov
xor
sub
in
lcall
dec
sti
push
shr
dec
pop
and
xchg
cmp
push
repnz
push
inc
es
out
sub
inc
cmp
mov
xor
iret
mov
or
sti
lds
and
shrl
repz
cltd
aaa
xor
es
sub
fdivs
cmpsl
jl
outsb
imul
std
into
ds
xor
je
out
jo
push
jmp
pop
jne
xchg
fcoml
repz
mov
jbe
add
in
loopne
mov
mov
into
pop
in
xchg
int3
jnp
push
leave
fbld
inc
into
mov
shll
cmp
push
or
lea
adc
icebp
inc
scas
sbb
stc
or
fldt
fcmovb
pop
dec
shr
shl
aas
push
jp
xchg
shlb
mov
mov
test
repnz
jmp
xor
add
adc
bound
pop
inc
imul
subb
fld
jmp
xor
add
adc
bound
pop
inc
imul
subb
fld
jmp
xor
add
adc
bound
pop
inc
imul
subl
fld
jmp
xor
adc
xchg
lods
xchg
in
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
outsl
fisubs
cwtl
fisubrl
mov
add
or
add
pop
or
add
add
add
popf
add
add
add
add
add
add
pop
add
ja
jno
add
sub
test
pop
add
pop
add
lret
add
add
sub
add
add
mov
add
add
enter
stc
add
ret
add
jnp
cltd
add
int3
add
add
mov
ret
add
add
add
add
add
add
add
add
add
add
add
add
add
add
js
js
inc
add
cs
ret
add
add
add
add
add
sbb
inc
add
add
add
add
add
leave
add
add
add
add
add
sub
and
inc
add
dec
add
or
pop
add
add
les
ret
add
add
add
add
cwtl
add
add
add
add
loop
into
add
aad
sub
sbb
push
jnp
sbb
pusha
add
add
add
movsb
add
add
xchg
ret
add
add
cwtl
add
add
add
add
add
push
inc
add
add
add
or
pusha
add
or
add
add
add
jl
mov
les
stc
add
add
add
add
popl
ret
add
add
outsb
add
add
mov
les
push
add
movsb
add
xchg
add
add
test
cmp
adc
popl
ret
add
das
add
add
ljmp
add
add
add
push
add
add
cs
inc
add
add
add
add
call
add
add
add
add
add
add
cwtl
add
add
adc
stc
add
add
add
xor
popf
add
out
das
add
iret
add
add
add
add
add
add
sub
jp
popl
xor
insl
add
add
add
add
jnp
sub
cmpsl
add
pop
add
add
imul
movsl
add
add
add
add
add
add
add
add
add
add
add
or
ja
sub
fildl
lea
adc
mov
add
pusha
add
add
add
mov
add
mov
lcall
add
add
add
add
int
stc
add
add
add
add
add
add
add
lcall
add
add
js
lcall
add
mov
add
add
add
add
add
mov
xor
test
cmpsl
add
add
add
add
add
add
add
les
sbb
jmp
add
add
add
add
add
sub
cmp
cwtl
add
add
ret
add
jno
sbb
pop
add
add
add
add
popl
xor
add
pusha
add
pop
add
add
add
sub
call
add
add
add
lea
dec
add
add
add
ret
add
add
add
add
and
fldl
xor
sbb
mov
insl
add
add
push
dec
jne
jecxz
fcmovu
lock
outsl
cwtl
or
out
mov
repz
sub
push
enter
jnp
inc
in
es
xchg
lds
inc
imul
stos
or
add
pusha
xor
pop
aad
iret
lds
fwait
fwait
clc
xchg
add
xchg
adc
push
jle
xchg
std
jnp
mov
cmp
scas
mov
mov
stos
mov
mov
movsb
xchg
mov
sti
pop
mov
cmp
aad
mov
jmp
aaa
lcall
hlt
push
stos
push
xchg
or
cmp
cwtl
arpl
add
ret
shlb
out
jle
movsl
in
ja
sub
add
inc
lahf
aas
iret
outsl
jecxz
aaa
cmp
jae
push
pop
incb
sti
adc
andl
dec
dec
addr16
movsb
inc
ljmp
popa
fstl
test
mov
mov
xchg
sahf
jne
mov
cmpsl
pop
out
mov
fdivrs
push
popa
fs
je
cmpsl
scas
aam
jb
mov
stos
mov
sbb
sub
inc
mov
xchg
fnstcw
loopne
test
lahf
imul
dec
jmp
pop
xchg
std
adc
sti
lds
mov
aas
or
and
add
les
bound
mov
or
mov
xchg
xorb
mov
inc
xor
pop
adc
xchg
or
test
jbe
cld
pop
ljmpw
arpl
pop
jae
fstps
ja
shlb
mov
inc
in
cmpsb
cmp
loop
xor
stc
dec
and
jmp
sub
in
clc
or
adc
ret
pop
jmp
aaa
cs
add
fildll
mov
dec
ret
push
fmulp
rcll
cmpl
into
movsl
dec
aaa
test
xchg
xchg
ror
mov
adc
out
pop
jo
hlt
loopne
sarb
jno
xchg
loopne
lea
pop
fs
test
cmp
xchg
fcoml
pop
call
dec
pop
dec
aad
lret
dec
outsl
fcoms
and
cld
add
mov
mov
call
js
jmp
iret
lret
in
aas
lcall
movsb
mov
and
jb
icebp
sub
pop
pop
mov
fstps
mov
push
rclb
stos
aaa
xor
mov
sbb
std
call
adc
aam
mov
jl
fistl
jnp
ds
jne
xor
push
mov
adc
or
jle
es
in
adc
lret
jp
dec
insb
and
mov
pop
xor
add
inc
adc
mov
iret
aas
xor
dec
and
xor
push
add
movsb
mov
cmp
outsl
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
