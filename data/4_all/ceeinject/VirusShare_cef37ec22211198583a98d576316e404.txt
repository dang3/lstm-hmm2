call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
repz
ficomps
out
xchg
outsb
lret
push
push
push
jnp,pt
outsb
mov
outsb
dec
jle
mov
mov
fsubrp
into
shrb
cs
xor
push
jle,pt
or
outsb
dec
jle
sub
pop
sbb
enter
xchg
repnz
int3
ds
inc
cmp
pop
sbb
cmp
std
stc
stos
daa
fisubrl
aas
or
insb
test
movsl
xchg
sub
xchg
jg
mov
stc
pop
cmpsb
fiaddl
inc
scas
fistl
push
cmc
adc
mov
shl
outsb
sti
pop
incl
ret
xor
out
sahf
testl
daa
stos
push
mulb
loope
lock
adc
jecxz
fstpt
fildll
int3
jae
mov
push
shl
aas
repz
insb
rorl
mov
cmp
arpl
dec
inc
add
insl
fistps
sub
or
dec
push
cmp
scas
popa
popa
fldt
outsb
jae
push
sub
pop
dec
pop
clc
push
push
sti
outsb
sbb
sbbb
add
mov
fsubrp
jbe
int3
push
mov
add
jb
mov
jbe
dec
int3
mov
icebp
fcmovb
loopne
nop
imul
pop
dec
outsl
outsb
dec
mov
pop
or
xor
sbb
pop
mov
fldl
xchg
pushf
mov
outsl
outsl
imul
push
or
or
or
out
ret
mov
out
into
ds
cs
push
cs
jle,pt
outsb
pop
pop
outsb
dec
jle
mov
mov
fsubrp
into
ds
cs
push
cs
jle,pt
outsb
pop
pop
outsb
dec
jle
mov
ss
push
mov
adc
jge
lahf
cmp
std
in
ss
sahf
dec
sub
fs
dec
sub
push
rcrl
ljmp
dec
inc
sbb
lahf
ss
aad
push
cwtl
or
cmp
loopne
shlb
loop
lods
mov
dec
imul
cli
sub
and
js
stos
sarl
icebp
ds
add
xor
add
add
fnstcw
cli
pop
gs
xchg
mov
mov
mov
add
scas
xchg
mov
add
sub
jmp
out
std
mov
sbbl
cli
imul
pop
je
cmp
dec
divl
aam
addr16
call
add
ret
adcb
inc
dec
aad
dec
xchg
push
jo
dec
jg
mov
dec
inc
pushf
cmp
stc
mov
jno
mov
and
mov
pop
xchg
cli
lret
mov
push
push
and
dec
xchg
scas
test
mov
decl
ljmp
jo
mov
xor
inc
out
sub
repz
lahf
push
fwait
mov
cmp
mov
adc
ja
or
jmp
push
add
xor
lock
fmul
clc
fwait
cs
fwait
and
inc
xor
inc
adc
jl
fcmovnbe
jnp
lds
mov
scas
xchg
orl
cmp
leave
mov
mov
add
xor
js
jp
xchg
inc
movsl
dec
inc
ja
jb
add
mov
mov
xlat
jle
pop
push
fidivrs
and
sarb
pop
leave
les
les
and
add
insl
nop
outsb
xlat
inc
daa
in
mov
pop
pop
dec
jno
lret
pop
xchg
inc
stc
aad
mov
add
and
iret
xchg
lds
aas
loop
insl
add
stc
cmp
stc
stos
mov
push
aam
jnp
add
movb
into
repnz
and
clc
adc
add
add
shlb
fstps
aam
xchg
iret
cs
shll
cmp
cvttps2pi
lock
dec
aas
imul
push
out
pop
sbb
inc
or
addr16
bound
dec
sub
rcrb
xor
cmp
inc
in
lds
nop
xlat
into
xor
mov
pop
push
jbe
dec
pop
push
mov
bound
mov
jnp
inc
cmp
dec
mov
mov
fiaddl
jle
sub
es
scas
jns
shll
and
dec
or
push
push
arpl
loop
sbb
pusha
aam
xchg
negb
loop
xor
gs
loope
dec
dec
xchg
xchg
arpl
shll
cmpsl
push
inc
xchg
hlt
pushf
aad
stos
mov
pop
inc
sub
movsb
fstpl
add
inc
jo
inc
fdivrs
outsl
adc
ror
in
add
mov
push
imul
lahf
and
mov
rorb
fsubrs
lret
data16
js
add
adc
push
jnp
icebp
sub
sbb
rol
mov
leavew
jae
add
and
js
lods
push
cmpb
xchg
aaa
jp
jb
lret
dec
lret
xor
mov
ret
cs
aad
ds
cmp
sti
js
ja
xchg
cs
mov
dec
xchg
push
jbe
fmul
test
jl
sbb
jb
orl
pop
pop
in
sub
sbb
cwtl
imul
sub
cmp
ljmp
cmpsl
jb
mov
sub
inc
mov
enter
adc
add
es
xor
je
sbb
popa
push
lea
sub
jae
push
push
push
dec
xor
rcr
mov
mov
mov
and
popf
jmp
inc
stos
popa
jne
sub
adc
pop
add
adc
ss
sahf
pop
xor
jmp
xor
mov
add
movsl
xchg
sbb
dec
mov
jecxz
xor
cmp
rolb
pop
mov
pop
push
dec
mov
in
add
sbb
lock
mov
dec
aad
scas
xor
mov
jne
add
ret
mov
push
lock
mov
jbe
outsb
addb
ret
inc
fcompl
in
jge
cmpsb
or
subb
push
cmp
sbb
mov
xchg
mov
fstp
scas
xor
and
mov
push
aaa
cld
xchg
rcr
mov
lods
sbb
add
daa
push
std
lret
nop
add
outsl
mov
xor
push
adc
mov
repz
push
cmp
push
fwait
shrb
adc
inc
clc
repnz
jb
inc
test
in
jno
push
jle
mov
pop
aam
test
mov
pusha
mov
test
pop
aam
loopne
int
mov
lods
or
jbe
push
mov
sbb
rcrl
es
loop
mov
in
jb
jb
mov
mov
adc
mov
xor
out
fidivrs
scas
orl
adc
jbe
push
test
adc
adc
mov
outsl
jl
mov
xchg
push
push
sbb
push
outsl
std
cmp
jmp
xchg
pop
lods
jb
mov
movb
scas
sub
fstps
push
or
loope
test
adc
dec
add
mov
push
sbb
sbb
adc
gs
inc
scas
push
mov
mov
lods
testb
int
cmpsl
jbe
lcall
shrl
fistps
ds
add
lahf
jno
mov
pop
jbe
cmpsb
bound
cmpb
push
push
xchg
subl
pop
test
inc
lcall
les
arpl
sbb
out
movsb
and
in
jbe
mov
call
insb
xor
xlat
and
adc
popa
xor
and
popf
inc
or
fs
push
xchg
aaa
out
ret
cmp
xchg
fincstp
loopne
mov
dec
orb
jge
into
sub
cmp
icebp
aam
lret
out
fidivrs
movsl
pop
pop
xor
fisttpl
push
negl
lret
clc
enter
bound
inc
push
das
mov
and
sbb
mov
xchg
or
mov
pop
add
xchg
pusha
int
mov
mov
fisttpll
nop
aam
lahf
sti
rolb
outsl
jne
mov
pop
sti
pop
mov
or
cmpl
gs
stos
push
mov
in
in
gs
push
stos
scas
and
rcll
xor
dec
in
add
inc
cli
and
sbb
xor
shr
popl
ret
adcb
test
jae
lret
jmp
sar
stos
add
stos
inc
dec
and
pushf
test
clc
add
dec
daa
insl
loop
inc
jecxz
pop
inc
and
in
sub
xor
imul
and
test
push
xor
aaa
cmpsl
adc
sub
sub
cmpsl
js
lock
cmc
fdivrs
inc
subl
insb
jmp
leave
repnz
iret
mov
nop
cld
add
mov
movsl
push
int3
jp
inc
xchg
arpl
test
xor
outsb
mov
cltd
inc
jnp
xor
jmp
push
or
jle
popa
lods
adc
fcmovnb
dec
dec
jmp
pop
add
hlt
inc
mov
loope
pushf
mov
in
add
pop
push
lock
push
pop
fs
cld
sub
xlat
shll
in
sub
popl
add
mov
sub
sti
fs
mov
ss
pusha
sub
arpl
pop
adc
jo
out
cmp
test
mov
xchg
add
aad
ja
insl
ljmp
pop
xor
cltd
jecxz
and
es
popl
sbb
add
xchg
adc
in
mov
jecxz
arpl
push
push
repz
mov
movsl
mov
mov
xor
mov
push
daa
mov
mov
pop
inc
and
sub
loop
cmp
sbb
or
inc
pushf
jbe
adc
mov
xor
jge
push
pop
ss
enter
loop
push
out
fidivs
push
mov
fcom
mov
push
mov
lds
popf
add
insb
pop
pop
stc
cmp
or
je
dec
clc
lcall
fchs
push
outsl
lds
mov
pusha
rorl
loope
popf
int3
jl
dec
push
xor
cmpsl
fstl
pop
repnz
push
fmull
sbb
testb
dec
arpl
inc
test
out
lret
sbb
pushf
fwait
cmp
xor
xlat
jae
or
jmp
imul
cmp
loopne
and
jne
mov
scas
mov
sbb
adc
sbb
popa
xor
cmc
pop
les
mov
gs
sbbl
mov
jo
scas
rorb
ss
mov
sub
push
stos
rcll
iret
imul
xor
hlt
out
fsubr
movsb
ljmp
push
fldt
push
jmp
xchg
rcl
int
and
sub
xor
jecxz
cmpsb
jne
jnp
repz
mov
xor
add
icebp
loop
mov
mov
jg
fwait
push
test
out
in
and
loope
fwait
je
fiadds
fcomp
mov
inc
jge
movsb
jecxz
mov
ss
xchg
lcall
xchg
iret
aam
jb
pop
xchg
sarw
mov
ret
mov
fpatan
xchg
adc
dec
stos
mov
jecxz
fs
xchg
sbb
adc
mov
push
sahf
aad
stos
push
xor
xlat
jp,pn
mov
mov
push
xor
cltd
adcl
jne
or
mov
lods
mov
cmp
push
mov
push
int
dec
in
pop
lea
outsb
lcall
adc
rcr
lock
xor
es
cmp
bound
dec
sub
mov
jl
ret
push
int3
nop
mov
outsb
out
adc
add
in
cltd
sbb
sahf
xchg
cli
sahf
leave
inc
loop
aas
sbb
mov
mov
sbb
push
jp
orb
mov
adc
xchg
scas
lcall
or
aam
add
cwtl
sub
xchg
les
inc
popl
aas
xchg
mov
outsb
push
rcrl
leave
clc
outsl
cwtl
in
lods
cmc
cmpsb
sub
pop
psubw
dec
sub
and
or
adc
jle
mov
imul
outsl
dec
shrl
xchg
mov
test
push
cwtl
mov
pushf
rorl
mov
stos
mov
xchg
sub
mov
outsb
mov
cmpsl
out
repnz
adc
rorl
pop
add
stos
sub
push
aam
adc
into
mov
lret
mov
push
ljmp
and
mov
inc
out
push
mov
int
dec
inc
aas
and
jnp
adcl
pop
or
add
cltd
mov
std
dec
or
mov
xor
cli
sub
inc
mov
adc
xor
sbb
adc
int
cmp
lds
ficoms
shlb
icebp
dec
add
mov
dec
or
add
fistpll
addr16
sub
cmpsb
adcb
sarb
adcb
movsb
fwait
jb
gs
test
or
rcrb
ss
cld
cmpsb
push
adc
shl
loop
ja
jmp
addr16
std
scas
inc
jne
sub
test
and
ljmp
xor
push
pop
lahf
lret
ljmp
xchg
je
cli
cld
and
je
dec
cmp
fwait
add
push
hlt
movsl
std
imul
pop
jae
push
push
sti
or
jge
mov
mov
cs
adc
cmp
push
mov
pop
cli
pop
shrb
mov
xchg
aas
or
mov
negl
notl
xor
ret
imul
cmp
lds
dec
out
xor
fcmovb
cmp
mov
fcompl
lods
lea
jg
xor
insl
inc
test
cmc
aam
xchg
fisttpll
xchg
stc
or
jmp
in
fildll
pop
jae
adc
adc
push
xchg
pop
mov
clc
call
and
cs
push
ret
or
xchg
ljmp
call
and
in
lods
and
mov
addb
sbb
jbe
xchg
out
repnz
push
dec
adc
fcom
repz
push
mov
imull
adc
test
xor
sub
popf
adc
sbb
gs
das
fmul
or
lods
std
ds
jbe
outsl
lods
das
cmp
daa
xchg
cld
inc
pusha
sbb
int3
loope
lret
icebp
mov
push
or
dec
lret
movsb
lods
data16
sub
outsb
cltd
mov
fs
cmc
lcall
mov
shll
pop
push
inc
lods
data16
dec
push
ret
push
cmc
push
push
sbb
mov
int
or
cld
adc
push
in
jge
popa
addr16
push
bound
and
pusha
outsl
pop
in
ds
repnz
hlt
pop
imul
dec
inc
ds
jb
je
or
mov
push
das
mov
ljmp
mov
lds
jb
sbb
push
ficoms
push
ja
jbe
es
imul
push
inc
or
cld
cwtl
bound
mov
mov
fsubp
mov
cmpsl
inc
adc
push
pop
mull
cmp
adc
push
arpl
lods
inc
int
enter
mov
and
cltd
in
cs
ret
xor
jg
int3
aas
push
dec
fadds
lret
jae
in
fwait
sbb
ljmp
mov
push
add
adc
lret
inc
jmp
sbb
ljmp
adcl
pusha
shrl
jge
movsb
jmp
or
cmp
mov
imull
dec
mov
push
je
push
sub
jmp
jbe
shlb
or
test
sti
icebp
sub
jge
lea
out
sub
lahf
sahf
sbb
push
loope
movsl
adc
nop
mov
pop
xchg
pop
xchg
stos
mov
inc
repz
sti
dec
pop
out
push
arpl
inc
sub
jmp
fsubs
movsl
scas
pusha
push
stc
cld
hlt
adc
std
mov
fisubl
push
out
or
xor
out
outsb
lret
jle
out
mov
cmp
add
aad
stc
cmp
cmpsl
cwtl
mov
arpl
stc
adc
lahf
dec
ja
jle
push
jg
inc
mov
jle
popf
xchg
insb
scas
sub
lret
lock
inc
inc
movsl
add
and
sub
test
fdivr
lods
xor
xchg
push
add
pushf
ljmp
lods
popf
jle
lcall
pop
mov
out
jnp
pop
mov
mov
dec
add
mov
leave
pop
cmp
push
mov
mov
stos
aam
stos
inc
mov
mov
and
lods
xchg
sbb
or
and
sbbb
pop
call
pop
dec
cmp
lds
jo
or
inc
xor
cmpsb
imul
addr16
stc
sub
shrl
fldl
inc
sahf
push
sbb
jns
aaa
xor
cli
repnz
sbb
mov
bound
add
dec
clc
icebp
mov
push
scas
push
sarl
lret
rorb
inc
loop
scas
xchg
aaa
sub
mov
jns
push
jnp
mov
and
xor
in
xchg
leave
mov
or
mov
xchg
mov
fidivl
inc
ds
or
lds
pusha
mov
jno
pop
ss
mov
lods
mov
outsb
adc
xchg
ljmp
add
jb
pop
leave
mov
je
jne
mov
mov
mov
rolb
ret
sbbb
dec
and
jns
or
and
and
sbb
cs
sub
adc
insb
push
jae
fdivrp
mov
dec
test
pop
scas
jp
mov
iret
sub
jnp
fwait
jl
arpl
pop
inc
dec
dec
flds
fxch
leave
inc
into
lock
sahf
insb
or
aad
testl
pop
sarl
cli
faddl
or
aas
adc
je
pop
jns
int3
nop
js
mov
xchg
mov
aas
or
xlat
dec
mov
enter
lea
mov
dec
xchg
and
xor
dec
mov
idivl
rcll
sbb
cmp
daa
in
push
jae
repnz
xchg
sbb
and
dec
add
mov
push
loope
jnp
sub
test
dec
ficompl
stos
pushf
mov
push
je
aad
and
test
jns
subw
scas
dec
adc
cmp
mov
xchg
mov
mov
cmp
mov
lds
cmp
into
jne
push
dec
pop
mov
dec
jo
mov
loop
iret
int3
push
arpl
mov
out
cmp
sbb
sub
sbb
add
xor
addr16
inc
outsb
mov
rol
jp
scas
icebp
or
ljmp
dec
fs
test
xor
ds
jl
xchg
adc
sar
mov
sti
inc
ds
jnp
inc
dec
add
pop
into
jg
inc
out
sbb
mov
inc
pop
push
mov
mov
cwtl
scas
xchg
scas
mov
mov
imul
jmp
cmp
popa
jp
mov
fiaddl
inc
mov
cltd
out
fdivl
xchg
out
or
rol
xor
mov
outsb
xor
adc
sahf
aam
cmp
jae
mov
int3
sbb
mov
or
xchg
addb
jbe
cmpsl
std
jg
and
loop
push
cld
aam
ja
sbb
mov
insl
imul
int3
jmp
sbb
xchg
add
push
adc
mov
adc
shlb
lods
mov
pop
push
js
imul
int3
int
jmp
mov
fisttpll
lcall
xor
jmp
cmpsl
daa
fwait
out
dec
push
inc
shll
lahf
ret
int
ror
mov
sbb
sbb
push
xchg
adc
test
jg,pn
adcb
fimuls
fdivs
dec
andb
xchg
sbb
push
sahf
dec
mov
mov
aam
sti
jne
mov
popl
fidivs
out
ficoms
jne
jb
sub
sub
mov
or
stos
rcl
mov
lcall
leave
pop
push
loope
push
cmpb
or
jle
cwtl
add
mov
mov
sub
mov
or
loopne
cmp
fadds
in
lods
testl
mov
pop
test
sbb
mov
mov
mov
mov
pop
cmc
loop
rol
dec
roll
loop
cmpsl
adcb
js
sub
inc
into
mov
int
out
mov
clc
xchg
lret
push
test
je
jge
cmp
push
lret
add
lret
out
sahf
and
add
lahf
adc
fnsetpm(287
xchg
xchg
je
fs
mov
cmc
xchg
lahf
mov
pusha
inc
push
push
mov
arpl
dec
ljmp
sub
loopne
xor
in
mov
stos
xor
cltd
dec
adc
push
dec
fstpl
fsubrl
enter
dec
pop
xchg
sbb
iret
scas
cmp
mov
cmp
pusha
sbb
xor
repz
mov
mov
ficomps
push
add
loopne
push
inc
icebp
jp
mov
cmp
dec
test
rcrl
daa
sahf
gs
push
xchg
je
js
out
or
pop
das
and
lock
shll
inc
mov
xchg
xchg
jns
inc
jge
sbb
inc
cmp
xor
out
cmpsl
inc
jbe
daa
and
add
cmc
sub
imul
push
inc
mov
jge
or
mov
cmpsb
out
nop
scas
les
and
mov
in
imul
dec
insl
fwait
sbb
jg
call
push
pop
ret
call
push
negl
xor
subb
hlt
sbb
push
ret
xor
pop
inc
add
cmpsl
clc
xor
testb
pop
lock
iret
mov
cmp
cmpsl
call
dec
sub
cmp
fsubrp
add
test
jge
stos
push
incl
push
xor
cmp
dec
push
jl
je
daa
push
inc
in
lods
repnz
je
xchg
aaa
or
dec
std
add
inc
adc
rcl
stc
hlt
mov
addr16
and
in
xor
mov
mov
or
mov
mov
mov
push
xchg
xchg
adc
dec
xor
ret
adc
dec
mov
ret
sbb
inc
loopne
or
add
and
sub
cli
mov
stos
pushf
pop
popf
adc
loope
jecxz
dec
xor
xchg
mov
sub
sbb
adc
mov
and
and
or
out
ret
int
add
jle
pop
push
lret
fcomps
push
pusha
fdivs
cmovns
popf
shll
in
fcmovbe
outsb
mov
ja
xchg
mov
fsubrp
into
ds
cs
push
cs
jle,pt
outsb
pop
pop
outsb
dec
jle
mov
mov
fsubrp
into
ds
cs
push
cs
jle,pt
outsb
pop
pop
outsb
dec
jle
mov
mov
fsubrp
iret
cmp
sbb
or
jle
ja
pop
addr16
cmpsb
push
jp
dec
cmpsb
dec
outsb
dec
ds
shll
ss
mov
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
adc
and
add
insl
fists
push
pop
shrb
jg
dec
loopne
adc
and
jo
pusha
cmpsl
subb
aas
mov
scas
pop
rolb
lock
dec
loopne
or
cmp
push
das
mov
jle
cmp
sub
fsubrl
xor
push
lahf
add
inc
cli
mov
cmpsl
push
push
int3
jnp
cmp
clc
fsubrs
shrl
roll
xchg
cld
pushl
dec
rcrl
cmc
cmc
aad
pop
test
jnp
outsl
shlb
out
scas
cld
mov
in
cltd
xchg
out
jg
cmp
mov
jns
mov
push
sub
jg
lret
adc
adc
scas
dec
inc
decb
rolb
ljmp
outsl
rolb
fisttpl
adc
movsl
nop
call
lock
sbb
cmp
jg
dec
lock
ja
scas
out
inc
aaa
add
lcall
lock
dec
loopne
fldcw
and
jo
jns
mov
cwtl
aas
test
mov
jg
dec
loopne
jl
gs
push
push
lahf
and
pusha
mov
push
imul
movsl
sbb
lret
pop
ljmp
jo
xor
mov
loope
rolb
stos
jle
sbb
pop
std
dec
cli
sbb
inc
pushl
pusha
fists
push
pop
shrb
jg
dec
loopne
adc
and
jo
pusha
fists
push
pop
shrb
jg
dec
loopne
adc
push
pop
cmp
and
jb
movsl
popf
mov
shlb
xchg
std
mov
lock
divl
in
outsb
mov
fimull
orb
mov
pop
divb
xchg
sbb
imulb
cmc
test
ds
jmp
jno
out
fwait
scas
decl
inc
and
ret
sbb
nop
mov
cwtl
mov
sbb
and
cltd
enter
sub
push
leave
xor
pop
stos
dec
lret
push
lret
les
fsub
lret
adc
cmpsb
scas
xor
sub
sahf
inc
fwait
xor
jne
sarl
sahf
nop
mul
enter
xchg
push
inc
in
nop
cmpsb
in
aas
jle
fcmovbe
xchg
outsb
inc
imull
xlat
sub
adc
insb
and
dec
bound
int3
int3
fcompl
mov
out
mov
mov
sub
addl
shrb
out
mov
and
or
out
pusha
dec
or
sbbl
inc
jp
sub
rol
ret
shll
mov
addb
sub
sbb
pop
ljmp
cmp
mov
push
iret
mov
out
stc
aaa
jecxz
inc
xor
pop
mov
or
xchg
fwait
pop
icebp
xchg
aas
pop
ret
icebp
ficoml
into
mov
sub
sbb
jne
mov
mov
xorb
push
jnp
mov
or
xor
dec
in
xchg
test
mov
pop
bound
inc
lock
add
das
mov
xchg
pop
dec
imul
xchg
push
fnstcw
fisttps
sub
gs
lahf
sub
cmc
adc
cltd
inc
hlt
xor
and
mov
int3
xchg
lret
and
ss
popf
inc
xor
mov
adc
sahf
mov
jecxz
adc
and
aaa
outsb
jl
sbb
das
dec
test
or
out
aam
out
out
ds
subb
cmp
jae
daa
and
jns
inc
lock
inc
dec
movsl
rcrb
leave
mov
mov
into
xchg
jp
jl
adc
inc
jecxz
jb
movsl
int3
ror
mov
movsl
xor
pop
call
jg
stc
push
imul
fwait
xchg
mov
sarb
or
xchg
sub
ret
mov
loop
pop
test
stc
arpl
or
or
aas
mov
push
cmp
dec
lea
mov
or
mov
in
mull
lods
pop
or
xor
sahf
mov
lea
inc
sub
pop
push
mov
jle
inc
pop
pop
movsb
in
and
lret
in
mov
mov
jbe
jbe
les
mov
ljmp
xor
fiaddl
mov
aam
js
pop
in
lret
jb
push
jbe
and
leave
decl
inc
add
sub
scas
icebp
sbb
jle
shll
lahf
cwtl
ja
mov
lea
push
mov
and
lods
ja
loope
ror
fiadds
dec
icebp
jp
rdpmc
jecxz
int3
jp
cmp
sti
adc
pop
fildll
repnz
sub
pop
adc
scas
push
pop
jmp
inc
lcall
push
cmc
es
mull
imul
jbe
and
xor
push
aam
pusha
subl
ds
add
jnp
mov
addr16
call
xchg
sahf
clc
inc
mov
sub
add
stc
ss
adcb
and
xchg
divl
fstps
js
inc
loope
ffreep
addr16
cltd
cmp
dec
adc
outsb
xchg
into
xchg
push
cmc
push
les
xchg
or
sbb
shl
aas
stos
and
cmp
out
adc
mov
jo
icebp
xchg
pop
fldl
stos
sti
inc
cmp
sub
pop
adc
mov
in
pop
add
test
xor
xchg
jne
outsl
mov
or
add
mov
test
xor
lea
jmp
dec
daa
add
les
inc
mov
xchg
push
repnz
mov
test
fstpt
sbb
test
cmp
stc
mov
sub
xchg
imul
pop
pusha
xchg
andl
jne
jge
mov
call
jecxz
outsb
pop
lds
mov
cld
insl
cmp
xor
loop
addl
gs
shll
sbb
mov
rcrl
mov
lds
inc
mov
sub
pop
rcrb
in
dec
shrl
xor
outsl
push
or
rorb
aam
jecxz
sbb
sub
movsb
adc
in
cwtl
jbe
mov
push
out
loope
sub
ficoml
icebp
push
sti
mov
xchg
in
jns
xor
push
jbe
add
insb
fidivrs
in
push
js
sbb
push
mov
fwait
jae
mov
js
gs
cmp
out
push
fbstp
mov
aaa
subb
inc
bnd
sti
sahf
or
cwtl
movsb
sbb
push
inc
lods
leave
adcl
adc
ret
icebp
jne
scas
out
jne
mov
and
ds
loop,pn
push
iret
jecxz
mov
jmp
aas
mov
pop
jo
outsl
insb
shrl
out
test
xor
test
pop
mov
nop
adc
cld
or
jnp
mov
cld
or
fwait
cmpb
out
inc
repz
fsubl
out
inc
out
sub
mov
add
out
xchg
pop
scas
xchg
add
jo
aas
add
or
cmp
ret
ja
mov
aam
pop
adc
push
clc
std
jo
dec
push
stos
mov
ret
adc
pop
jp
push
push
adc
add
mov
sub
ror
or
aad
lcall
ja
sbb
xor
inc
adc
inc
inc
sub
mov
jmp
out
out
leave
pusha
loop
loope
scas
popa
cmpl
ljmp
inc
pop
and
nop
std
pusha
cmp
push
dec
stos
pop
sti
cmp
pushf
mov
add
or
repz
push
insl
sbbb
aam
ds
roll
std
and
testl
orl
jne
or
inc
jle
pop
and
xor
lahf
dec
rcrb
shll
insb
loope
sbb
fidivrs
popa
jno
sub
scas
inc
cmp
xchg
adc
scas
inc
xchg
in
sub
shlb
pushl
cmp
push
cmpsb
rorb
add
cwtl
sti
mov
jp
jmp
pop
sub
sub
rcrb
inc
cmp
push
imul
test
cmpsl
mov
pop
dec
movsb
fisubs
js
push
adc
nop
cwtl
jne
sub
pushf
xchg
call
ja
ret
add
inc
xchg
mov
xlat
or
push
call
inc
or
jnp
and
ss
jp
call
push
loopne
inc
shrl
xor
or
add
sbb
xor
dec
in
push
xor
lea
cmp
cmpb
dec
ret
xor
xchg
cmpsl
addl
mov
popf
mov
push
sbb
popf
and
into
lods
pop
or
pop
jecxz
mov
sti
dec
loope
pop
mov
sbb
jmp
loope
rep
and
or
test
adc
mov
push
xlat
scas
test
push
and
pop
dec
ljmp
push
test
scas
test
sub
push
ss
xchg
pop
popf
popa
mov
frstor
stos
stos
mov
adc
ja
out
or
add
mov
ljmp
xchg
pop
movsl
pop
mov
push
sub
es
stos
loop
aas
sbb
adc
push
dec
add
and
insl
data16
rol
testl
jae
aam
mov
mov
push
test
push
leave
sbbl
das
rcll
sbb
adc
mov
lahf
xchg
mov
inc
in
fisubrl
mov
int
testb
xor
or
inc
pop
dec
mov
test
xor
lcall
leave
xchg
jo
mov
aaa
mov
setp
stc
stos
adc
je
mov
in
lcall
inc
push
push
arpl
inc
mov
cmpl
insl
or
xchg
mov
lods
fidivrs
pop
xor
push
push
negl
inc
jle
bnd
or
nop
mov
stos
jg
cltd
mov
fists
frstor
or
in
lea
filds
mov
scas
mov
push
mov
mov
xchg
pop
repz
icebp
inc
dec
xchg
lahf
pop
jns
in
and
mov
jae
aam
addr16
hlt
leave
gs
rol
mov
jle
sub
mov
clc
push
inc
js
adc
mov
sbb
xchg
xchg
test
push
adc
fs
negl
je
icebp
es
fnstsw
les
scas
inc
mov
popl
das
jmp
xchg
sub
pop
scas
or
xchg
dec
sub
dec
popf
cltd
fnstenv
cwtl
lods
ds
jno
jno,pt
add
fstps
dec
addr16
outsb
lcall
mov
fcoml
dec
sti
or
lahf
inc
cmp
mov
jo
adc
repnz
in
sbb
mov
das
add
repnz
lock
fmul
jbe
in
push
and
xor
imul
imul
pop
pop
add
loope
je
dec
jbe
push
fimuls
mov
hlt
cmp
dec
cwtl
pop
sbb
pop
cmp
mov
and
negl
xor
xchg
pop
push
pop
movsb
xor
cmc
movsb
dec
xchg
mov
add
jmp
add
inc
push
shrb
inc
lcall
push
jne
jno
jo
push
or
fs
mov
in
into
aad
xor
pop
push
scas
inc
inc
pop
adc
adc
bound
and
cmp
lcall
out
and
lods
aad
fdivs
cmp
jle
fdivrl
pop
jge
sub
and
or
pop
add
pusha
or
scas
lret
rorb
cmp
sub
jg
cs
push
add
js
cwtl
cwtl
or
call
lret
pop
shll
jp
popa
cmp
cmp
das
and
mov
adc
movsl
jne
sub
fimuls
aam
jae
fstps
lock
xchg
pop
push
xchg
fs
int3
pop
mov
lock
insb
popf
cmp
int
pop
sbb
jge
jecxz
popf
mov
ljmp
pushf
cmp
loope
fs
jb
lcall
jne
repz
xchg
lahf
lods
fcompl
repz
gs
roll
xchg
fs
and
les
push
loopne
clc
mov
xor
cld
mov
insl
dec
int
test
jp
out
push
xchg
das
int3
mov
xor
call
or
mov
adc
pop
jae
aas
mov
and
rclb
sub
xor
or
mov
out
in
daa
in
adc
dec
dec
mov
lods
and
mov
in
mov
push
push
mov
das
pop
rcrb
test
das
or
xor
rorl
xchg
jbe
fiaddl
fxch
or
test
loop
testb
test
jb
and
lret
cltd
mov
jp
mov
pop
pop
jmp
in
andb
cmpsb
shll
mov
mov
push
and
push
jnp
ss
repnz
cli
jnp
adc
sub
mov
scas
mov
sub
jg
ja
lret
fs
pop
cwtl
ss
pop
fdivl
cmp
push
ret
in
pop
sbb
adc
dec
dec
jmp
cmpsb
shl
insb
popf
in
popa
mov
or
add
xchg
adc
lods
in
jnp
divb
out
outsl
hlt
or
jmp
dec
sbb
pop
imul
mov
testl
aam
shlb
fs
xor
repnz
idivl
popa
dec
xor
fildl
mov
mov
fwait
mov
test
aaa
mov
les
dec
dec
adc
insb
mov
dec
push
pop
push
enter
mov
or
ret
sbb
xchg
out
pop
pop
or
cmp
imul
and
rclb
mov
lds
jns
int
testb
ss
mov
fistpl
xchg
dec
xor
mov
mov
call
pop
hlt
cmc
outsb
mov
jmp
in
fisubrs
jl
in
sbb
push
sbb
push
iret
imul
cmpsb
pop
loop
fs
mov
stos
jmp
pop
push
mov
lret
sti
jae
mov
das
add
adc
popa
lcall
loop
add
adc
mov
sub
mov
icebp
aam
jo
sbb
pop
push
sbb
add
ret
dec
in
pop
lds
xlat
je
push
call
lods
jne
call
xchg
and
cmp
inc
push
lock
fiadds
mov
shll
rol
test
js
in
sub
dec
inc
xchg
jle
sub
sub
pop
jp
mov
sub
data16
rclb
pop
negl
insl
movsb
push
sbb
ljmp
aas
call
sub
stc
mov
inc
lods
aad
sub
xor
leave
mov
outsb
gs
loop
stc
jecxz
xchg
mov
mov
nop
sub
adc
test
pop
scas
fsubs
in
inc
enter
mov
popa
test
aas
imul
push
nop
je
aas
xchg
push
scas
lcall
sahf
idivb
movsb
lcall
mov
pushf
xchg
testb
dec
std
or
adc
mov
add
sub
mov
aam
fs
call
adc
daa
mov
outsb
mov
das
repz
ret
push
cmp
cmp
and
or
jae
es
xor
std
pop
rcl
stos
pop
ljmp
and
add
xlat
push
rolb
fldl
pop
test
push
lock
cwtl
loope,pt
shll
jnp
test
jmp
jle
mov
aas
jg
mov
cmc
push
es
jge
das
pop
lahf
cwtl
sti
inc
movsl
xchg
cmp
add
mov
jmp
mov
das
fdivl
sbb
cmp
add
dec
lods
js
adc
push
jmp
xor
stos
mov
test
xor
js
push
mov
gs
sub
xor
mov
add
call
pop
fmulp
div
shlb
inc
cli
or
add
cmp
jmp
mov
adc
notl
xchg
nop
push
shlb
leave
dec
outsb
call
add
int3
daa
xchg
and
lds
ja
aam
or
dec
sbb
ja
movsl
sbb
add
imul
nop
imul
xlat
vpunpcklwd
js
sub
cltd
mov
mov
mov
ss
test
or
loope
xor
xchg
loopne
add
sub
sub
fidivrs
test
or
shrb
push
or
push
mov
pop
lods
jne
cs
cmp
jmp
loop
push
cmp
test
push
sahf
jge
cld
mov
roll
pop
fdivrl
xchg
divl
fnsave
mov
or
xor
mov
push
xor
arpl
pushf
add
test
iret
test
les
cmpsl
fwait
and
pusha
mov
jb
push
ja
xlat
insl
jae
popa
jmp
call
sahf
jg
insl
outsb
push
sbb
cltd
and
mov
stos
bound
xchg
gs
test
mov
jb
mov
popa
loop
jno
and
and
or
or
mov
jns
arpl
outsb
mov
js
lahf
mov
jle
lret
xor
out
mov
inc
xlat
shrl
jle
mov
dec
mov
inc
push
sbb
mov
ficomps
sahf
jns
lods
or
xor
rcl
nop
sub
sti
push
xchg
pop
test
aad
mov
lods
rcr
pushf
and
lock
fs
and
push
insb
stc
push
sarl
and
dec
cmpsb
adc
stc
mov
testl
xchg
add
scas
mov
cs
out
inc
cmpsl
sti
fimull
out
stos
cmp
xchg
xchg
popf
mov
xor
pushf
push
jne
insl
repz
lock
mov
inc
imull
sub
mov
mov
or
movsl
movsb
hlt
scas
das
sbb
popf
out
ret
pop
mov
pusha
sahf
add
enter
push
sbb
sbb
mov
lahf
rcrl
jmp
aas
or
or
cmp
dec
mov
icebp
cmp
call
dec
and
cmp
sub
les
push
idiv
out
aad
and
ffree
xor
jl
lret
repz
cltd
ja
push
call
stc
xchg
das
cmpsl
or
lea
out
cwtl
push
pop
add
adcb
xor
xor
int3
add
jne
roll
push
scas
ds
clc
pop
mov
out
jo
dec
mov
fmuls
stos
and
push
or
add
scas
add
push
add
mov
enter
cmc
pop
test
add
push
lcall
pop
imul
mov
dec
inc
test
mul
pop
scas
dec
loope
inc
jo
out
jo,pn
and
or
fldenv
sbbb
out
or
std
fldcw
js
mov
push
lds
xchg
xor
inc
outsl
insb
in
adc
enter
in
cmp
inc
push
push
ljmp
loope
inc
push
outsb
inc
xchg
aas
outsl
adc
mov
push
scas
add
mov
jns
aaa
das
cmp
or
jae
scas
mov
mov
mov
push
jmp
test
sub
das
mov
dec
imul
psrld
loop
je
cmpb
je
dec
add
rcr
dec
cmp
test
xchg
cmp
mov
dec
cld
xor
pop
xlat
hlt
xchg
test
push
cmp
stos
idivb
fwait
pop
pop
pusha
jno
push
xor
ret
cmp
mov
hlt
stc
orl
push
cltd
mov
cmp
shll
mov
jns
push
ret
jge
xor
xor
pop
and
pop
mov
push
lock
push
lret
lods
fdiv
jl
mov
js
dec
mov
sub
fcoml
scas
fnstenv
bound
mov
sub
adc
arpl
std
adc
xor
jge
nop
pop
movsb
mov
addr16
repnz
sbb
repz
adc
les
xchg
nop
scas
push
in
xchg
lcall
div
cmp
adc
add
jmp
icebp
insl
insb
and
das
mov
fimuls
xchg
mov
loopne
fdivl
addr16
mov
jae
ja
ja
and
inc
jecxz
icebp
xchg
ret
mov
loopne
outsl
jmp
sub
jne
fcoms
movsb
repz
cld
mov
or
test
sbb
inc
add
out
adc
push
inc
mov
pop
mov
repz
pop
mov
roll
rcrb
adc
sbb
adc
repz
cmpsb
adc
mov
sti
loopne
call
mov
call
movsl
jne
enter
dec
pop
dec
scas
sarb
xchg
cmc
adc
lea
jns
jo
add
movsl
popa
repz
enter
mov
inc
clc
scas
fcoms
sbb
push
rcrb
cmp
cmp
mov
and
jge
mov
xlat
lcall
xor
mov
ljmp
mov
dec
cmp
hlt
pop
mov
aad
les
loopne
ss
sti
jmp
add
add
push
sbb
sub
xchg
jo
mov
jbe
rclb
rcrb
xchg
iret
rcr
xchg
and
mov
mov
sub
xchg
ljmp
fnsave
add
adc
sbb
shl
stos
cli
and
xchg
sar
xor
scas
and
dec
xchg
aad
and
add
push
pop
cld
loop
movsl
sahf
cmp
pop
xchg
stc
arpl
sub
jnp
xchg
sti
loope
xor
adc
arpl
cmp
push
mov
xchg
mov
call
shrl
sub
je
es
push
popa
adc
int
into
adcb
pushf
fisubl
sbb
pop
aam
and
mov
fldcw
jns
jae
pop
fwait
movsl
les
cmpsb
pushf
or
sub
cmp
pop
jmp
leave
push
pop
lea
or
sbb
xor
enter
pop
jmp
push
lods
call
xchg
cltd
or
push
adc
scas
add
test
xchg
in
andl
push
dec
pushf
jo
cmc
cld
or
loopne
sbb
test
jmp
push
daa
test
lahf
push
out
inc
pushl
pusha
fists
push
pop
shrb
jg
dec
loopne
adc
and
jo
pusha
fists
push
pop
shrb
jg
dec
loopne
adc
and
jo
pusha
fists
push
pop
shrb
jg
dec
loop
adc
and
lock
loopne
outsl
das
jg
sbb
mov
orb
pop
mov
inc
or
adc
add
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
or
sbb
sub
cmp
xorl
popf
insb
lods
push
mov
daa
in
push
cld
push
or
sbb
sub
cmp
dec
mov
cmpsb
insb
xchg
jl
mov
data16
push
mov
es
push
cld
push
or
sbb
sub
cmp
dec
mov
cmpsb
insb
xchg
jl
mov
inc
shlb
sub
jo
jp
jae
jno
mov
push
mov
addr16
test
and
mov
clc
ret
xchg
divb
ret
dec
mov
pop
sub
sbb
xor
fnstsw
scas
jno
pop
out
sub
add
sti
sub
dec
and
jbe
lods
push
jl
pushf
leave
mov
lret
sbb
inc
ret
cmp
imul
add
ret
xor
pushf
outsl
arpl
push
repz
sbb
sub
lret
adc
cmp
sub
and
mov
scas
jecxz
out
push
scas
sub
bound
xchg
mov
test
negb
sub
cmp
dec
mov
cmpsb
insb
xchg
jl
mov
data16
push
mov
es
push
cld
inc
dec
imulb
inc
xchg
push
xchg
rorb
repz
mov
stc
jg
add
fsubl
fs
mov
push
movsl
dec
cmc
sbb
adc
cs
adc
adc
xor
xorb
imul
pop
cmpsb
insb
xchg
jl
mov
data16
push
mov
es
push
cld
push
or
sbb
sub
cmp
dec
mov
cmpsb
insb
xchg
jl
mov
data16
push
mov
es
push
cld
push
or
cmp
mov
adc
mov
pop
and
sti
lods
js
and
xchg
dec
push
lods
dec
cmp
mul
pusha
subb
xlat
xorb
aam
repnz
stos
lahf
push
xlat
das
mov
orl
adc
mov
sub
ror
icebp
call
leave
aaa
rol
int3
jle
push
pop
jl
adc
es
pop
jle
fdivp
push
dec
cmp
or
adcb
cmp
pop
push
and
or
push
inc
imul
add
mov
cmp
push
jno
lds
sbb
jl
loopne
test
aas
jno
aaa
mov
mov
ret
enter
mov
scas
pop
aad
adc
repnz
out
dec
int3
push
mov
jae
test
and
and
enter
xchg
sub
ljmp
dec
dec
imul
pop
cmpsl
insb
cmp
sub
mov
out
fisttpl
or
aad
and
jbe
sarb
mov
mov
imul
iret
inc
sub
fwait
jbe
lret
outsb
arpl
pop
insb
in
mov
jp
movsb
sti
xchg
or
inc
dec
popf
cmpsl
cltd
cmp
mov
sarb
push
mov
mov
es
sub
jae
adc
test
sbb
adc
out
adc
cltd
cs
sub
push
mov
push
xchg
cmpsb
mov
test
je
aas
or
int
xor
subb
adc
add
fcomi
imul
mov
mov
lods
repz
shll
dec
cmp
ja
pop
sbb
jno
popf
fldl
sub
add
dec
adc
pop
and
test
push
pusha
ja
xor
jle
repz
pop
mov
ja
push
sbb
push
out
push
mov
cmp
mov
jecxz
jno
push
inc
or
repnz
into
mov
push
jns
pop
push
cmp
adc
jecxz
sbb
sub
mov
test
xchg
sbb
pop
dec
test
lds
aaa
je
lods
rol
mov
inc
stos
ja
out
icebp
adcl
push
sahf
out
scas
scas
mov
or
cmpsl
jmp
loop
push
dec
cld
gs
jne
jae
mov
pop
pop
arpl
cwtl
add
fisubl
scas
push
enter
scas
sahf
loopne
lcall
pop
fs
fnstenv
mov
and
mov
jns
or
cmp
xor
pop
jnp
je
dec
iret
sbb
cwtl
xchg
push
mov
sub
sub
hlt
xchg
jne
adc
out
clc
das
mov
flds
movsl
pop
ljmp
cmpsb
xorb
xor
pop
and
cmpsl
enter
out
sbb
fwait
mov
adc
sbb
cmpsl
ljmp
cmp
inc
outsb
xchg
mov
jge
inc
out
add
jl
mov
xchg
js
or
mov
cli
xor
nop
and
pop
in
imul
orl
rcl
add
cwtl
test
call
aas
loopne
xlat
scas
lcall
mov
iret
aam
add
mov
or
in
addl
iret
pop
pop
shlb
subl
push
mov
ss
fmul
sbb
cmp
sub
sub
xchg
lahf
xchg
shll
push
dec
and
mov
push
out
add
and
rcr
js
mov
dec
out
int3
inc
jno
test
dec
xchg
mov
mov
das
cmp
stc
pushf
cmpsl
cs
cli
xchg
fcmovne
ret
movsl
add
cmp
lods
inc
iret
scas
cmp
xor
cltd
pop
out
and
cmc
sub
pop
push
jmp
aas
lret
inc
xchg
mov
aam
stos
dec
add
xchg
cs
push
das
negb
pop
xchg
xor
mov
loopne
jno
jle
inc
cmp
or
popf
stos
mov
mov
dec
and
xchg
mov
jnp
rol
cmpsb
pop
loope
imul
xor
jle
or
cmp
jecxz
inc
call
and
push
push
adc
lods
int3
cmp
out
add
insb
ret
leave
and
add
mov
jnp
psubsb
ficoml
mov
mov
sub
mov
cmpsl
jg
sub
bound
xchg
mov
fucomi
lahf
fwait
cmp
adc
xchg
jns
inc
scas
gs
imul
inc
pop
cmpsb
sbb
rcl
push
mov
mov
dec
mov
js
data16
mov
std
filds
jns
sbb
std
cmpsb
dec
ss
outsl
insl
jmp
lods
mov
stc
cmp
push
add
outsb
jl
cmp
fsubs
and
inc
stc
ja
pop
and
stc
dec
dec
inc
testl
xchg
push
and
repz
testb
jne
cmp
cmc
mov
fidivs
push
out
jb
ret
fs
arpl
xor
cmpsb
add
in
and
sbb
aad
aas
sub
es
lret
sbb
inc
ss
addl
lcall
outsb
pop
cmc
xchg
cmp
leave
lret
mov
in
cmp
popa
addr16
cmpsl
hlt
pop
lcall
add
lcall
jp
mov
push
fcoml
pop
outsb
clc
xlat
lahf
sbb
lods
cli
iret
xchg
int3
jl
jmp
outsb
and
dec
push
adc
dec
dec
jo
mov
test
inc
push
fisttpll
je
inc
insl
imul
xor
jmp
mov
ljmp
incl
sub
outsb
cmc
cmp
jmp
pop
divl
push
xchg
dec
in
jmp
cmp
mov
xlat
lret
mov
lcall
pop
push
xchg
fs
cmp
pop
xchg
mov
lret
dec
out
add
fdecstp
xchg
sbb
push
mov
std
jle
dec
int
sbb
pop
xor
movsb
int3
in
and
not
xchg
outsb
mov
std
push
cmpsl
movl
aad
and
insb
xchg
push
and
enter
adcb
lods
fnstsw
clc
xor
jle
pop
jb
outsb
lock
inc
pusha
push
addr16
jmp
rorl
and
out
shll
push
pop
fisubrl
cwtl
xchg
orb
stos
cs
cmpsb
testb
cmp
cltd
pusha
jle
ja
cmp
vmovq
mull
adc
cmp
stos
out
xor
and
xor
mov
in
les
lea
dec
pop
dec
js
insl
dec
inc
or
stc
mov
xchg
xchg
dec
and
ret
xchg
jbe
aaa
sub
mov
sbb
mov
loope
jb
imul
shlb
xor
imul
repnz
mov
pop
loop
sti
jp
sbbl
or
int3
sub
cli
lcall
cwtl
data16
inc
int3
jo
cmp
aam
outsl
sahf
push
xchg
cmp
and
mov
movsb
mov
sbb
jle
xchg
xchg
sub
dec
fsubl
dec
iret
daa
or
jle
dec
ss
xor
adc
sub
and
pop
fiaddl
fldt
push
fwait
dec
jp
sahf
lods
push
js
push
cmpsb
sub
and
loope
sub
loopne
pop
push
dec
out
mov
or
pop
xchg
inc
aam
in
in
shrl
loope
clc
lahf
push
ss
inc
mov
stc
mov
push
scas
mov
cmp
push
aas
cwtl
lock
cld
dec
inc
mov
in
lds
popa
mov
or
cwtl
adc
adc
loop
sub
cld
fstpt
nop
cmp
pop
fwait
pusha
and
test
clc
mov
xchg
dec
and
mov
lea
xrelease
lods
filds
sbb
fs
dec
in
fimull
lcall
out
loopne
sub
cmc
lret
or
jne
dec
jbe
pop
inc
or
call
xchg
inc
mov
repz
and
jb
pop
mov
ja
add
ret
in
addr16
aam
xor
lcall
insb
push
mov
arpl
hlt
and
mov
js
lods
or
inc
lret
cmp
cmp
dec
push
into
loopne
lock
cli
aas
fidivrs
ljmp
sub
or
arpl
loope
js
dec
or
movsl
mov
lahf
loope
jl
add
push
sub
jp
push
mov
push
dec
push
lds
popf
xor
mov
enter
xor
push
pop
or
inc
or
popf
test
xor
fdivrl
and
cld
or
stos
std
adc
sub
scas
outsl
arpl
push
pop
jmp
pushf
pop
jo
orb
pop
dec
mov
insb
arpl
movsl
aas
movsl
hlt
stos
sti
xlat
call
lcall
idivb
idiv
mov
xor
xchg
dec
in
ljmp
lret
jo
and
dec
cltd
push
out
mov
mov
add
hlt
das
insb
dec
loop
testl
les
out
inc
inc
xchg
filds
fdivs
nop
je
push
pop
cmpsb
loope
ds
mov
idiv
pop
xor
pop
mov
jle
test
mov
sbb
jp
dec
sbb
into
rcrb
adc
inc
leave
cmp
sbb
dec
dec
inc
xchg
dec
pop
dec
and
imul
clc
std
sbb
push
callw
inc
ja
dec
stos
pushf
hlt
leave
inc
in
arpl
test
testl
pop
lea
out
mov
xchg
and
in
cmp
sbb
imull
lea
ds
test
cmpsl
cmpsl
arpl
mov
pop
or
or
loopne
dec
push
sbbl
sub
and
xchg
stos
cmp
mov
mov
shll
cmpsb
lock
ret
iret
lea
jnp
or
jg
mov
cs
clc
data16
and
repz
pushaw
fstpl
int
jo
or
ja
push
cld
add
rcrb
into
jne
or
dec
mov
xor
jp
sub
aas
jnp
repz
es
shrb
mov
aas
ret
lea
popa
loop
mov
mov
sub
jae
popf
jbe
enter
add
in
pop
out
jp
mov
push
out
popf
dec
notb
xchg
or
dec
mov
jecxz
and
rorb
mov
sahf
out
std
lock
dec
xabort
in
scas
cmp
add
insb
or
insb
stc
jmp
jae
popa
and
aad
xchg
pop
xor
leave
jp
mov
shll
insb
mov
int3
sub
xchg
mov
mov
dec
lret
add
mov
fnsave
popa
movsb
fdivrs
out
lds
rcl
dec
and
adc
outsb
pop
lea
into
adc
push
inc
jl
inc
scas
and
dec
push
mov
push
sbb
dec
jne
or
xchg
sbb
add
or
and
jne
inc
mov
leave
cltd
xchg
sbb
mov
movsl
sahf
mov
xor
xor
stos
jp
pop
mov
pop
arpl
xlat
mov
sub
inc
les
mov
popa
ds
sahf
leave
fnsave
mov
in
mov
and
cmp
popw
pop
ljmp
sbb
jne
pop
mov
or
out
inc
pusha
pushf
mov
in
js
mov
sbb
xor
fistl
cs
ds
xchg
xchg
lret
outsl
pop
sahf
pop
jp
lret
push
test
dec
and
adc
fcomi
dec
adc
push
sbb
add
mov
cmp
dec
fbld
in
push
lahf
das
ja
daa
sahf
pusha
add
pop
insl
cmp
popf
popf
bsr
mov
lods
dec
adc
push
or
or
fisttpl
xchg
call
pop
pop
ret
loopne
std
jnp
aaa
push
xchg
pop
xor
js
lds
push
cmp
fbstp
jno
psubd
mov
mov
add
test
mov
jo
mov
mov
sub
jle
pop
xchg
mov
mov
addb
add
in
lods
mov
mov
mov
cmp
call
inc
xchg
sub
sbb
iret
xchg
jbe
mov
pop
hlt
pop
lret
adc
cltd
inc
lea
pop
sbb
or
mov
addl
add
fldenv
sbb
je
data16
mov
in
jge
insl
push
or
mov
shl
cmp
pop
sub
int3
mov
test
notb
adcl
shl
fwait
adc
nop
and
dec
pop
flds
pop
out
pusha
sahf
aas
data16
mov
loop
push
xor
jl
lret
mov
leave
lret
xchg
in
stos
xchg
andl
xchg
icebp
cmpsl
lcall
stos
xchg
inc
sbb
adc
push
mov
out
imul
xchg
in
inc
pop
xor
push
daa
leave
rcl
ret
sbb
lods
loope
xchg
adc
nop
jo
lods
scas
cld
cmpsl
idivb
xorl
mov
jmp
and
sub
jo
pop
repz
ds
push
sub
inc
cmp
cmp
push
repnz
popf
sub
leave
jp
push
test
inc
shrb
sahf
bound
iret
popf
cmp
mov
mov
popa
adcb
add
sbb
mov
push
lret
and
add
mov
xorl
jmp
shl
cmp
inc
sbb
aam
repnz
jns
mov
cmpsb
xchg
mov
fidivs
and
cld
sarb
loop
lret
call
enter
mov
xor
jl
pop
mov
inc
loope
je
mull
sub
iret
gs
cmc
cwtl
orl
movsl
add
in
inc
sbb
inc
sar
lret
jmp
sub
call
pop
subl
pop
aad
xor
nop
mov
stos
scas
scas
stos
push
push
push
sbb
mov
fimull
push
or
or
adc
cmp
mov
dec
es
rclb
push
mov
and
push
jle
pushf
shll
scas
test
cmp
mov
pop
mov
shl
mov
dec
pushl
fstpl
inc
js
sahf
sub
ja
leave
push
and
add
jg
sub
loope
inc
mov
push
push
jp
sbbl
cmp
pop
lds
mov
xchg
or
test
scas
loopne
mov
cmp
das
leave
imul
mov
add
sar
pusha
sub
jno
or
pop
in
out
daa
cmp
ret
jnp
nop
popa
mov
aam
jns
dec
aam
inc
iret
cs
loop
bnd
fildll
lea
push
push
lods
inc
push
popa
pop
test
in
xchg
add
pop
mov
pop
shrl
push
push
jmp
arpl
fisubs
fs
add
and
jne
clc
shrb
jl
in
daa
or
lds
aaa
xchg
add
leave
jle
cmp
sub
mulb
cmpsl
shr
test
sub
sbb
lea
xchg
jae
loop
inc
add
jp
test
and
hlt
movsb
pop
ss
xor
inc
xor
sbb
shll
add
dec
pop
or
dec
hlt
inc
dec
mov
mov
repnz
xor
andb
roll
aas
imul
jno
fwait
mov
dec
gs
mov
xchg
jnp
or
lds
push
and
sub
jle
pop
inc
loope
and
mov
cmpsb
lock
repnz
js
push
iret
sbb
dec
xchg
jo
out
lret
lods
dec
lret
sbb
push
aad
popa
add
mov
aas
insb
mov
jns,pn
push
lret
inc
or
sarl
jno
cmp
sbb
xor
jae
cmc
js
sub
movsl
inc
mov
push
pop
add
insb
adc
pushfw
dec
out
jno
std
pop
sub
add
orb
data16
mov
fs
inc
add
lea
jno
dec
fldcw
and
cmp
outsl
add
in
ja
inc
xor
push
xchg
jp
popa
aaa
mov
std
test
pop
xchg
sbb
mov
dec
les
jg
dec
jg
cmp
les
lret
rcrb
fdiv
insb
pushl
mov
add
pusha
xor
pop
out
test
jp
negb
cs
cmp
mov
jle
xchg
fstl
lret
mov
push
inc
fcoml
frstor
ljmp
in
and
lret
arpl
lds
ret
jmp
ljmp
xor
jno
movl
dec
push
jo
fcomip
xchg
xor
test
mov
aas
xchg
aad
inc
cmpsb
inc
or
fsubr
and
fistl
inc
adc
pop
clc
insl
test
lcall
movsb
dec
cmp
aam
cmpsl
sbb
xchg
addl
pop
andl
xchg
mov
popa
out
icebp
inc
mov
adc
mov
sbb
aad
ss
pop
pop
test
les
stos
inc
sbb
jo
popf
ret
push
cmp
and
xor
jnp
cmp
divb
xchg
lahf
add
cmpsb
insl
add
adc
les
dec
sub
or
das
xor
pop
shr
cltd
cwtl
inc
inc
pop
xchg
int
fistps
fs
pop
mov
scas
cltd
enter
or
sbb
push
scas
dec
push
testl
pop
push
adc
clc
subb
push
sbb
das
mov
enter
sub
rorb
add
pop
in
loop
movsb
dec
jle
mov
or
aaa
nop
add
cmp
pop
sbb
cmc
sbb
leave
loop
jle
sbbb
sahf
mov
or
aad
pop
cmp
lret
add
pop
mov
loope
ljmp
arpl
mov
insb
dec
int
add
mov
and
mov
or
pop
clc
fdivl
je
popa
xchg
xor
pushf
xchg
push
inc
and
add
sbb
or
jno
lds
aas
mov
jno
iret
and
xchg
daa
loop
jmp
sahf
xor
aaa
mov
mov
sbb
push
mov
aam
and
aas
jbe
shll
lods
orl
pop
xchg
sub
inc
jbe
not
adc
and
dec
jae
push
pop
mov
and
mov
lods
dec
mov
nop
push
lods
dec
xchg
mov
sbb
lock
jl
in
push
je
dec
inc
addb
out
loope
mov
cmp
or
push
mov
xor
add
cmp
repnz
in
cmc
dec
fimuls
add
mov
xchg
cmp
or
jmp
addr16
push
pop
and
inc
xchg
mov
pop
pop
ds
es
stos
push
pop
lcall
push
outsl
sbbl
data16
sub
jl
or
stc
mov
pop
and
push
sahf
add
in
js
test
mov
fnop
clc
fidivrl
pop
clc
cmp
pop
mov
gs
movsb
in
inc
stos
push
mov
into
sbb
push
pop
push
dec
aaa
fsts
dec
jo
cmp
dec
sub
pop
mov
in
pushf
ss
jmp
rorl
sbb
sub
les
or
int3
mov
iret
outsb
or
aad
mov
mov
scas
mov
addr16
jle
call
inc
sub
sbb
dec
in
sbb
test
mov
je
xor
cmc
outsb
mov
clc
or
cmpsb
pushf
cmp
pop
shr
jecxz
mov
add
jecxz
loop,pt
mov
fmull
sbb
push
jne
jmp
mov
addr16
leave
ds
mov
pop
cli
notb
mov
cmp
das
dec
cltd
test
jle
mov
lock
sub
cmp
out
mov
das
push
lods
push
push
in
inc
sub
inc
xchg
hlt
sub
xchg
subb
test
lret
lret
aas
data16
push
cmp
push
push
mov
push
cli
hlt
in
in
test
outsb
inc
jb
mov
and
inc
xchg
pop
in
in
xor
loopne
pop
ds
lods
jbe
mov
adc
add
xchg
push
and
or
push
faddl
sbb
pusha
push
dec
inc
lahf
mov
mov
fldt
xlat
ret
int
lea
shl
pop
sti
push
cli
fstpt
cwtl
cwtl
or
or
loop
clc
jmp
dec
lods
jnp
add
sbb
pop
decb
add
pop
xor
pop
lret
push
sbb
xlat
xor
fwait
jne,pn
push
adc
or
ds
lcall
idivl
or
add
sub
mov
cmpsb
insb
xchg
jl
mov
data16
push
mov
es
push
cld
push
or
sbb
sub
cmp
dec
mov
cmpsb
insb
xchg
jl
mov
data16
push
mov
es
push
cld
push
or
pushf
out
cmp
int3
mov
cmpsb
insb
xchg
cld
xchg
mov
es
push
cld
push
or
sbb
sub
cmp
dec
mov
cmpsb
insb
xchg
jl
mov
int3
push
push
mov
fstps
fildl
jne
xor
imul
fbld
push
jnp
or
cmp
ljmp
add
dec
aad
lds
cmc
jnp
or
cmp
jmp
sti
mov
mov
cltd
or
jb
or
push
movsl
mov
adc
les
mov
lret
nop
fs
sub
jl
mov
sahf
pop
push
add
mov
xchg
cli
and
into
sub
xor
mul
notb
push
and
ficoml
popl
mov
xor
movsb
dec
adc
test
test
jle
or
fildl
pop
jno
adc
adc
pop
out
shrb
xchg
sbb
dec
aad
dec
xor
mov
xchg
cli
stos
lret
and
jnp
pop
pop
jae
scas
mov
cmc
xor
fstpt
imul
push
push
jge
mov
aam
icebp
mul
jg
sbb
mov
fildl
jne
mov
mov
lds
jnp
or
cmp
mov
xor
inc
in
push
ficoms
mov
pop
mov
push
cld
inc
aaa
dec
rclb
xor
jo
sub
nop
ss
inc
cli
push
lret
mov
add
adc
jns
add
dec
aad
lds
jnp
or
cmp
jmp
sti
mov
mov
lds
jnp
or
cmp
xchg
adc
bound
pop
int3
add
call
mov
lahf
sti
xor
push
fisttps
adc
inc
aam
push
in
cmp
push
adc
add
jno
enter
mov
stos
xchg
lods
cmp
stc
sub
lret
or
lretw
pushf
cmp
mov
inc
mov
or
pop
or
clc
test
mov
push
push
or
xchg
jne
mov
sarb
movsb
out
in
shr
nop
cmpsb
inc
adc
xor
adc
stos
sbb
push
adc
or
fcmovbe
cwtl
sbb
adc
das
xlat
aad
repnz
and
mov
int3
or
xor
testb
rorl
fwait
jecxz
or
sub
mull
add
jns
sub
mov
pop
test
push
mov
enter
sbbl
pusha
outsl
test
js
lods
and
movsb
das
push
dec
cmp
aaa
dec
out
push
jmp
cmp
out
sbb
addr16
jmp
lds
push
lds
mov
mov
jle
and
in
mov
or
push
ds
repnz
push
mov
out
iret
mov
stos
nop
adc
lods
sub
or
push
out
cmc
repz
lret
jno
pop
stos
mov
mov
or
imul
xor
pop
jg
xor
pop
sub
mov
dec
pop
insl
outsb
mov
cmp
les
clc
mov
xor
adc
dec
ds
and
in
addr16
popf
jecxz
cwtl
fistl
jns
fdivrl
jl
jecxz
pop
dec
sub
pmulhw
mulb
mov
xchg
ja
mov
or
aad
bound
jbe
in
mov
aad
cmp
pushf
inc
psraw
insb
add
jmp
aas
lea
push
pop
pop
sbb
pop
adc
xchg
outsl
call
dec
inc
ret
sbb
jl
xchg
lds
ret
out
mov
push
xlat
repz
pop
xor
sub
jno
loop
pop
cmp
int3
mov
xor
and
aam
sbb
xlat
sbb
push
jne
dec
xlat
loopne
lods
mov
mov
rol
mov
lahf
scas
out
mov
adc
into
dec
inc
fnstcw
scas
push
add
loopne
cli
push
add
xchg
int
lret
stc
test
mov
dec
out
outsb
rcr
sbb
mov
mov
test
inc
xchg
adc
test
aas
xchg
orl
mov
add
ja
inc
iret
xchg
push
pop
push
sbb
jne
jo
mov
and
in
xchg
dec
sub
imul
scas
adc
pop
sbb
ret
gs
dec
rcrb
inc
test
adcl
popa
push
pusha
in
inc
dec
stc
xchg
and
inc
into
mov
hlt
cmp
ja
mov
sub
dec
insb
jge
aaa
cltd
shrl
sbb
pop
jl
xor
rorb
pop
xchg
fcoml
test
mov
cmp
mov
test
addr16
mov
stos
cmp
cmp
sbb
scas
or
cmp
xchg
fsts
stos
mov
lret
mov
sub
jmp
push
repnz
jne
adc
icebp
jne
sub
mov
mov
mov
sbbl
scas
push
enter
imul
xchg
ret
fmulp
add
xchg
dec
xchg
daa
jecxz
fwait
je
cmp
popf
mov
xchg
xchg
popf
lret
jl
sub
mov
mov
filds
cld
xor
push
gs
xlat
push
add
pop
add
mov
lea
or
push
jp
icebp
fwait
aad
xchg
in
xor
rcll
pop
rcrb
fwait
shlb
push
mov
and
clc
stos
or
adc
daa
inc
and
rcrl
xchg
sbb
xchg
cltd
lret
xchg
arpl
mov
pop
mov
sub
mull
test
pop
or
xchg
mov
rorl
pop
dec
sbb
adc
into
bound
ljmp
stos
cmp
or
cmp
adc
aas
cwtl
lcall
or
jle
mov
hlt
andb
jle
ds
push
or
lret
pushf
pushf
test
xchg
mov
pop
cmp
jg
decl
and
sbb
mov
push
push
cli
adc
outsl
dec
imul
push
xlat
xor
fs
ss
mov
jns
push
bound
push
mov
add
aas
inc
and
sti
sbb
popa
pop
mov
pusha
out
outsb
and
data16
aas
add
xchg
jp
mov
pop
or
mov
jl
fsubs
jbe
je
mov
push
ja
dec
lcall
std
and
adc
ss
or
cltd
mov
push
shlb
in
and
stos
decb
insl
imulb
jl
add
jbe
cmp
pop
aam
xor
cmp
rcr
fs
stos
xchg
insl
fisttps
fs
or
sbb
push
outsb
std
lret
enter
jl
sub
jg
stc
notb
stc
mov
pusha
jbe
inc
in
jp
je
dec
gs
jb
sub
int3
cwtl
push
xor
xlat
fcomps
pop
aas
pop
orl
pop
pop
data16
push
jl
stos
push
pushf
mov
rcr
insl
pop
movl
xor
pop
cwtl
imul
in
into
sub
xchg
mov
mov
fdivs
pop
popa
push
ss
mov
dec
ja
lods
mov
js
sbb
xorl
mov
jge
or
jno
sbb
jge
mov
inc
push
ljmp
es
cld
mov
jo
add
mov
push
add
and
sbb
es
jno
out
fdiv
inc
out
shrl
mov
mov
icebp
dec
pop
call
les
ja
scas
aad
mov
adc
xchg
lods
fs
xor
jnp
pop
jae
fistps
push
or
push
add
jge
insb
sti
sub
adc
sarb
imul
sbb
jnp
loope
or
mov
insl
data16
lock
mov
or
mov
lods
mov
fidivrl
adc
adc
std
loope
mov
mov
sbb
ret
test
fstl
nop
cltd
xor
les
ret
pop
popa
inc
adc
push
push
cmc
sbb
xchg
and
cmpsb
push
aas
push
push
jp
mov
sbb
jg
xchg
out
hlt
movzwl
adc
lahf
cmp
stc
jg
pop
in
jl
jo
mov
xchg
iret
xor
add
mov
xor
push
push
mov
les
lea
xchg
dec
in
sub
and
arpl
adc
popa
cwtl
cltd
adc
and
jge
add
mov
mov
pushl
or
push
mov
sar
pop
out
and
stos
jecxz
enter
adc
jns
jnp
sti
rcrb
inc
movsb
mov
fnstcw
cmpsb
xchg
shrl
push
movsb
loope
xchg
adc
or
lcall
push
inc
and
orb
cli
hlt
mov
loop
pop
scas
push
mov
jl
xlat
mov
cmp
outsb
popf
arpl
xor
in
shlb
lret
sti
xchg
xor
decl
mov
shrl
mov
clc
cmp
xor
cmpb
jae
cli
jne
rorl
dec
pop
fcomip
lea
mov
mov
and
in
sbb
aam
mov
push
imul
lock
jecxz
mov
sub
ror
jg
cltd
push
stc
jno
xchg
dec
nop
add
leave
imul
mov
stos
aaa
lret
cli
daa
inc
dec
aad
gs
fwait
popa
fcom
mov
cwtl
insl
inc
mov
adc
dec
mov
pop
dec
mov
lds
lar
fs
mov
loopne
dec
sub
sub
push
ret
xchg
int3
push
in
es
sbb
pop
repz
inc
in
push
les
test
inc
add
in
jmp
sbb
lret
mov
pop
mov
test
mov
mov
mov
sbb
std
mov
bound
in
sub
add
stos
repz
sub
jae
imul
adc
xchg
loopne
mov
jno
add
aad
int
movsb
fidivs
nopl
sbb
popa
push
jl
lahf
inc
push
push
ret
mov
or
mov
mov
popf
out
sub
dec
aas
mov
push
xor
shr
adc
jne
stos
sarl
mov
sahf
icebp
aaa
int
in
push
nop
mov
ret
sbb
lea
push
cmp
ljmp
data16
push
jg
xchg
lods
sbb
jmp
fxch
sub
enter
repz
jp
mov
sub
mov
hlt
jnp
jle
pop
pushf
mov
jmp
mov
xchg
push
dec
popa
aas
or
aam
mov
or
or
pop
sti
jle
pushf
pop
mov
push
addr16
add
jb
notb
pop
xchg
out
adc
pop
jo
cmp
sbb
inc
adc
sbbb
inc
pop
ss
cmp
or
mov
aaa
or
xor
add
cwtl
push
data16
mov
or
insl
ljmp
jg
xorb
push
sbb
inc
cmc
mov
fistl
mov
sub
cli
mov
mov
hlt
inc
loop
mov
in
pop
add
in
das
jmp
test
gs
fdivrl
cmc
jo
push
fbld
and
jnp
xchg
insb
jl
and
sbb
mov
mov
movsb
test
pop
jle
int
clc
sbb
mov
mov
clc
add
leave
cli
fistps
xchg
xor
inc
sbb
dec
cmpsb
in
repnz
cmp
jmp
fdivs
imul
mov
ja
nop
inc
aam
jns
pop
arpl
sahf
add
pop
fiadds
sahf
adc
sarb
push
cmovae
dec
decb
enter
mov
movsb
mov
lcall
lahf
sub
xor
xor
into
inc
jmp
push
pop
cmc
icebp
push
addr16
pop
in
jno
mov
cmp
sub
cmpsb
pop
push
pop
shlb
int
negb
xor
ror
or
loopne
insl
in
rolb
in
or
xchg
mov
mov
xlat
cwtl
pop
fistl
add
cmc
pop
test
mov
icebp
cli
pop
hlt
int
push
mov
fwait
rclb
aam
gs
fstps
add
sub
sbb
shll
in
clc
push
push
xchg
lea
in
dec
insb
pop
fiadds
cmp
fs
hlt
inc
outsl
mov
popf
or
int
aam
xor
xchg
iret
push
pop
sbb
xchg
mov
iretw
jb
shlb
inc
clc
cs
loopne
hlt
je
sbb
les
mov
pop
cli
mov
cmc
sub
jle
fwait
dec
push
push
iret
clc
mov
xor
shr
fidivrs
cmp
test
inc
mov
movsl
std
enter
lcall
xchg
lds
jg
in
rolb
or
push
sbb
push
pop
notl
shrb
sub
add
mov
mov
insl
out
ja
push
std
iret
inc
inc
mov
adc
or
insl
inc
andb
pop
pop
icebp
out
mov
cmp
leave
jo
imul
call
jno
sbb
enter
icebp
inc
inc
orb
mov
out
loop
push
das
fcoml
xchg
fwait
mov
add
and
add
inc
xchg
and
inc
ljmp
inc
xchg
rcl
mov
or
xor
cs
loop
negl
xchg
mov
and
dec
push
xor
fstl
add
jle
pop
addr16
mov
fcoml
lcall
je
inc
inc
adc
mov
add
add
mov
je
cmpsl
xchg
ret
mov
scas
test
add
cmp
jbe
js
adc
cmp
mov
outsl
decl
adc
pandn
mov
clc
cli
rclb
jge
sbb
pop
addr16
push
inc
call
fstpt
add
mov
fwait
or
sub
into
or
pop
int
inc
cmp
cmp
ret
fistl
push
outsl
inc
das
and
xor
sahf
xchg
cmp
mov
mov
sbb
ret
or
loope
xlat
jl
enter
stos
out
mov
insb
sti
xchg
xchg
jmp
in
push
test
jmp
ret
sbb
int
shl
aaa
or
testb
adc
jle
lods
add
les
mov
movsb
inc
test
loope
inc
fwait
adc
add
testb
xor
test
sbb
aaa
pop
insb
push
add
adc
adc
inc
xchg
push
pop
sar
dec
mov
or
pop
lods
mov
repnz
lds
mov
push
stos
cmc
pop
or
rcrb
pop
jge
or
xchg
out
xchg
xchg
out
scas
add
sbb
cmp
mov
adc
mov
imul
mov
leave
xchg
int3
fimuls
repz
test
outsb
mov
xchg
add
cmc
sbb
test
push
mov
fisubs
clc
push
popf
jno
cmp
fbstp
lret
lea
jmp
cmc
sub
in
lds
popl
cmp
add
out
leave
jl
mov
and
outsl
addr16
dec
or
cmp
and
and
or
movl
mov
insb
push
stos
mov
sub
xor
adc
jb
add
sbb
cmp
aam
cmpsb
leave
test
stc
mov
rcrb
hlt
icebp
stos
pop
movsl
cs
outsb
daa
pusha
sbb
jle
int
xchg
loopne
bound
clc
xor
das
fs
xchg
xchg
out
dec
pop
and
push
mov
in
in
sbb
negl
cld
xor
lods
mov
mov
xchg
mov
dec
es
dec
pushw
push
sahf
lcall
dec
mov
shlb
aam
rcrl
pop
pop
adc
inc
or
jmp
inc
leave
xchg
or
lods
push
outsb
pop
stos
leave
fstpl
sahf
aad
xchg
ficoml
jg
cli
xchg
mov
mov
mov
or
xchg
ss
adc
fcmovnb
sbb
scas
sub
in
sub
and
sbb
or
call
imul
cmp
in
stos
andb
dec
mov
pop
mov
stos
or
mov
into
cli
xor
mov
or
stc
push
jne
loope
in
cmp
repz
xchg
lods
add
jg
mov
mov
mov
fcoml
into
dec
test
adc
push
adc
lea
rcrl
inc
fs
jne
lods
jle
jmp
out
xchg
ret
xor
fldcw
or
jbe
add
inc
loope
ret
sub
inc
cli
sti
sub
xor
ficoms
stos
inc
xchg
in
popf
out
jecxz
in
shr
outsl
jge
std
repz
arpl
mov
mov
lahf
loopne
mov
data16
inc
in
jnp
lea
adcb
mov
unpckhpd
xor
outsb
loop
push
lcall
int3
mov
rcrl
lret
rolb
shlb
mov
mov
jnp
shll
dec
push
dec
pop
and
jecxz
push
bound
inc
jl
incb
rol
mov
push
fmuls
out
iret
add
adc
ror
addl
and
mov
and
cli
cmc
cmpsl
lahf
xor
out
add
int3
jg
jle
xacquire
testb
mov
dec
roll
inc
orb
iret
inc
inc
aaa
pusha
cwtl
add
mov
pop
test
nop
sbb
xor
loopne
cmp
mov
and
enter
ss
subb
xchg
or
or
jle
dec
jmp
aam
cmp
repz
mov
cmpsb
sbb
mov
fs
pop
outsl
adcl
add
mov
iret
subl
xor
xchg
or
loopne
mov
sbb
cld
ja
inc
and
sub
insb
or
fwait
ljmp
sub
adc
addr16
mov
push
pop
mov
sbb
popa
jb
pop
or
mov
jmp
mov
arpl
loope
mull
sar
int
cmp
push
adc
or
ss
cld
inc
movsb
sbb
xchg
neg
fstl
and
lds
pop
or
push
push
jmp
ret
and
push
out
mov
in
sbb
mov
aam
mov
clc
scas
daa
xor
sbb
cmp
rolb
pusha
les
dec
inc
sub
stos
outsb
ljmp
push
jns
leave
cmp
loopne
std
jle
cs
pop
pop
int3
inc
mov
les
mov
insl
pop
mov
movb
lcall
cld
mov
jns
push
cs
mov
cmp
mov
or
push
fs
cmp
es
push
jae
shll
das
cmpsl
or
ja
cltd
stos
jo
ret
dec
push
fdivrs
push
inc
mov
insl
pop
xchg
sub
mov
cmp
aaa
pusha
xor
inc
inc
in
pop
mov
mov
push
mov
frstor
pop
outsl
insb
jmp
arpl
dec
ljmp
cmc
inc
or
pop
lea
sbb
out
aam
dec
insl
adc
ret
rcrl
push
fwait
test
pop
adc
negb
fldcw
push
mov
cmpsl
ret
data16
jbe
adc
mov
dec
aam
mov
ret
mov
adc
lahf
pop
flds
out
shl
fs
daa
fidivs
in
dec
lods
rcll
out
sub
xchg
sub
pusha
fistpll
mov
sub
sbb
jo
mov
call
adc
dec
xchg
pop
in
mov
test
and
movsb
mov
ljmp
jne
push
mov
add
add
xchg
mov
push
mov
push
mov
sub
dec
int3
sub
mov
test
pop
arpl
inc
jp
fldl
jl
sbb
enter
enter
inc
test
out
mov
jecxz
insb
add
jmp
aad
outsl
lods
jne
and
ss
add
adc
ret
sub
or
xlat
je
filds
sub
nop
mov
or
mov
jo
cmpl
mov
mov
aas
adc
mov
mov
xor
dec
insb
addr16
cltd
inc
mov
and
insl
dec
rorl
scas
fistps
popf
aad
push
fwait
mov
adc
xor
cld
cmpb
idivl
lods
cmp
xor
and
divl
sub
sbb
test
loopne
sub
ss
or
test
sbb
popa
xor
mov
inc
aad
sbb
sti
in
aad
aad
xor
int3
test
mov
fistpll
sub
cmp
pop
jp
mov
int
jae
lret
push
lahf
cmp
aas
arpl
out
add
sub
repnz
test
dec
adc
xchg
fists
mov
and
pop
xchg
mov
jl
mov
jp,pn
adc
dec
pop
inc
dec
das
loopne,pn
movsl
enter
sahf
clc
cli
mov
fstpl
sbb
push
pop
das
inc
aad
jns
es
cld
testb
fidivrl
xchg
scas
sub
repz
xchg
lods
inc
sahf
dec
fnstsw
jbe
repz
mov
mov
stos
push
jecxz
lea
push
push
adc
mov
inc
and
out
jp
sahf
imul
jae
imul
cwtl
mov
adc
repz
int
push
sbb
xchg
add
and
pop
test
arpl
nop
sub
les
fidivs
dec
lret
addl
imul
mov
pop
shll
inc
sub
jne
pop
sub
push
fnsave
les
and
mov
dec
jl
dec
mov
lods
jmp
or
push
enter
fstl
or
mov
jl
or
sub
ss
push
xchg
mov
movsb
out
inc
inc
aaa
clc
xlat
push
cmp
inc
or
mov
mov
lds
jnp
or
cmp
jmp
sti
mov
mov
lds
jnp
or
cmp
jmp
sti
mov
mov
les
jnp
or
movsl
lret
inc
ljmp
test
sub
shl
xchg
jl
xchg
jp
dec
les
pop
insb
mov
xchg
sub
imul
int3
push
mov
inc
mov
cmpsb
insb
mov
xchg
out
jp
or
cld
es
push
faddl
int3
push
mov
push
mov
xor
mov
cs
xchg
cmp
sub
sbb
or
cld
stc
iret
push
lods
pop
test
pop
fbstp
in
or
and
jge
fiaddl
mov
lret
push
xor
lret
or
fdivl
or
xchg
xchg
inc
add
and
push
jmp
lods
mov
inc
fstp
andl
mov
pusha
push
pop
inc
stos
stc
mov
mov
mov
xchg
lahf
xchg
dec
cs
out
sahf
inc
cmp
popa
cmp
ljmp
pop
add
mov
ret
ret
loopne
xchg
std
jne
es
roll
xor
mov
xchg
mov
pop
mov
sbb
mov
stc
cmpsb
push
pop
decl
mov
mov
add
out
negb
or
cld
mov
int3
pop
mov
inc
mov
sbb
movzbl
lds
mov
jae
mov
scas
jb
jg
or
add
pop
cld
aaa
or
sbb
aas
out
mov
mov
pop
test
mov
mov
ss
cmp
daa
out
sbb
insb
icebp
sbb
sub
jns
sub
sbb
or
cld
es
faddl
int3
push
mov
inc
mov
cmpsb
insb
mov
xchg
out
negb
or
cld
es
faddl
int3
push
mov
inc
mov
cmpsb
or
mov
dec
cwtl
xchg
popf
dec
out
pop
jecxz
mov
data16
pop
nop
loopne
adc
fs
xchg
and
pop
std
inc
es
loope
aad
insl
les
or
adc
aad
dec
xlat
mov
sbb
cmp
mov
nop
mov
in
loope
lahf
pop
addr16
subl
push
out
hlt
or
ror
xor
repnz
in
pop
icebp
fs
fabs
pop
inc
push
cmp
aaa
int
cmp
cmp
inc
addr16
jb
inc
in
push
das
jmp
fwait
sub
jbe
insl
movsb
pop
xchg
cld
sub
cmpsl
sub
jno
subl
sub
and
pop
inc
test
andb
ss
popf
test
enter
jp
clc
xchg
repnz
lock
fcmove
push
sub
les
test
sahf
test
scas
xchg
les
lret
mov
dec
sbb
pop
or
or
mov
or
inc
int
xor
cltd
cmp
fldenv
ja
into
pusha
test
cli
jg
mov
xor
mov
lock
mov
popa
pop
add
push
or
xchg
into
lcall
das
or
push
int
push
orb
push
ljmp
and
repnz
fucomp
loop
add
imul
inc
mov
jne
lods
lods
je
add
std
inc
mov
jb
testl
cmp
lods
xor
sub
roll
ret
adc
jo
lods
push
pop
fsts
popa
jae
mov
mov
xor
rcrl
dec
popa
sbb
pop
pop
xchg
push
aam
in
mov
sahf
rcr
popf
push
pop
adc
ljmp
mov
aad
out
adc
movsb
cmp
hlt
ret
nopl
jbe
mov
movsl
pop
mov
jmp
push
sbb
xlat
es
out
sub
addl
divl
shlb
jae
leave
cmp
fldcw
movups
mov
push
mov
cmc
pop
or
test
jnp
ja
rclb
repz
lock
sbb
push
adc
mov
mov
clc
enter
sbb
pop
push
xor
jo
mov
dec
push
add
addr16
add
mov
out
add
and
sub
mov
ja
push
sub
insb
adc
test
shrl
or
mov
pop
push
cld
dec
stos
pushf
add
imul
mov
push
push
sbb
inc
mov
jnp
adc
mov
push
sbb
push
pop
js
inc
in
out
mov
cmp
xor
adc
dec
lcall
push
mov
mov
adc
push
out
jnp
pop
ljmp
cld
imul
and
and
repz
shl
data16
ja
shlb
mov
adc
hlt
aas
inc
xor
jmp
adc
cmc
sahf
hlt
adc
jo
mov
add
add
add
fstps
cli
dec
add
in
divb
cwtl
sub
pop
inc
mov
xchg
int3
dec
mov
mov
popf
lods
dec
nop
lcall
ret
jns
test
fwait
jl
sub
xor
rcrl
mov
mov
leave
cmp
lods
outsb
jmp
xor
fsts
mov
in
sub
shll
into
mov
nop
ss
pop
in
ror
scas
jb
dec
aam
xchg
xor
sub
lods
push
sub
pop
sub
mov
push
fbstp
out
gs
add
adc
popa
mov
inc
sub
imul
mov
dec
cmp
fidivrl
adc
push
int
mov
dec
lret
or
mov
dec
aaa
inc
push
test
outsl
xchg
mov
mov
cmp
add
dec
mov
xchg
test
xchg
rcll
mov
cmp
mov
sub
shrl
std
push
stc
jl
push
lret
sbb
out
les
xor
in
shll
sub
add
bound
test
mov
outsl
push
sub
jl
inc
outsl
test
fsubl
jns
xchg
mov
mov
enter
xor
sarb
dec
imul
loop
and
movsb
xchg
stc
push
push
adc
xor
add
and
popf
mov
jbe
lret
call
mov
enter
enter
shl
loope
mov
lods
fs
add
sti
xor
lahf
pop
mov
std
repnz
sub
pop
mov
and
pop
clc
jne
pushf
insb
mov
out
pop
les
in
adc
inc
mov
cli
shr
in
out
dec
sub
cltd
jb
cmp
add
mov
cmc
mov
adc
lahf
cmp
pop
dec
add
enter
mov
outsb
lret
addr16
cmp
dec
outsb
pop
add
xor
lods
mov
mov
xor
movsl
adc
cmp
fnstenv
or
xchg
es
ffreep
push
outsl
sti
sub
sbb
js
inc
dec
aad
xor
outsl
dec
mov
das
fisubrs
fwait
dec
mov
mov
fdivp
in
lret
lds
in
inc
mov
mov
jge
mov
in
not
rcrl
cmp
or
push
test
mov
adc
pop
adc
jmp
enter
mov
dec
cli
jo
cmc
idivl
inc
ljmp
std
mov
pop
inc
jmp
xor
dec
inc
mov
sbb
leave
inc
lods
mov
sub
inc
and
ja
loope
add
sbb
xor
out
js
cmpsl
xchg
adc
rclb
dec
xor
ljmp
out
jl
add
lods
sbb
sbb
push
rclb
xlat
orb
shll
pop
icebp
cli
adc
mov
in
adc
sub
push
fidivs
sub
addr16
rorb
ret
fidivs
mov
cmp
cmp
cwtl
popf
add
stc
pusha
scas
mov
or
fsts
test
xchg
fidivs
jecxz
add
dec
loopne
mul
pop
cwtl
inc
fists
push
sbb
fidivrs
data16
leave
cmp
cmp
sbb
sbb
aad
add
xchg
pop
pop
xor
jno
stc
mov
mov
jmp
popa
add
mov
xor
cmp
mov
jge
out
pop
hlt
jecxz
cmp
loopne
mov
in
pop
adc
mov
into
outsl
sar
push
repz
push
xchg
cs
subl
jae
lea
popa
rol
test
popf
fadd
xchg
cmp
jge
xchg
dec
mov
lods
nop
add
adc
repz
mov
xor
push
xor
mov
lods
xchg
cs
ss
sbb
icebp
ret
add
mov
pop
xor
fldt
stc
mov
aam
xchg
adc
jne
ret
cmp
mov
call
push
pop
loopne
lcall
sub
jle
clc
daa
and
ss
pop
out
lcall
ret
outsb
fnsave
nop
lea
lds
jb
jo
adc
adc
add
mov
hlt
cmc
and
mov
sub
fs
jne
or
push
pop
out
gs
aad
int3
sub
and
inc
ret
push
push
into
xchg
push
mov
sub
cmp
leave
test
mov
fwait
in
jecxz
jo
jno
sub
xchg
or
mulps
pop
pop
jo
dec
mov
mov
and
mov
lea
fwait
mov
ljmpw
enter
stos
push
pop
pop
in
mov
stc
js
push
jb
mov
iret
inc
push
rorb
jle
rorl
pop
icebp
sbb
xchg
fwait
inc
xchg
shlb
ret
sub
mov
or
or
lods
xor
xor
mov
fmull
mov
movsl
leave
mov
movsl
cltd
pop
jecxz
xor
add
sbb
xor
push
and
shll
push
jp
jge
std
ljmp
into
push
mov
push
mov
or
add
mov
insl
aas
test
pop
cmp
xchg
fcoms
icebp
or
out
pusha
mov
addl
mov
out
adc
xor
cltd
push
and
xorb
or
mov
jle
mov
lods
cmp
cld
mov
and
arpl
cmp
stos
in
js
ret
lret
test
hlt
push
jbe
fstpt
clc
ret
mov
push
xchg
inc
stos
testl
neg
pop
fnsave
lods
dec
orb
ret
mov
adc
je
rcrb
sbb
or
test
push
pushf
mov
pop
pop
loope
ljmp
cmp
pop
test
sti
xchg
scas
jns
fwait
sbb
in
push
or
xchg
or
inc
into
dec
loope
loope
fcmovu
pop
sbb
lahf
mov
in
and
pop
push
scas
mov
mov
scas
fs
or
stc
aas
aaa
bound
ja
aaa
pop
dec
jle
arpl
fwait
mov
cld
lahf
lds
bound
xor
jbe
scas
repz
das
or
lahf
or
inc
fsubrp
cmp
jbe
insl
fistpll
dec
dec
notl
lock
inc
imul
out
dec
cmpsl
pop
add
test
and
push
leave
aas
jae
jl
mov
mov
lds
enter
pop
xor
arpl
out
pop
add
mov
loopne
das
sbb
stos
fcoml
lcall
cmp
les
and
lds
test
aad
jnp
rolb
pusha
clc
es
ret
add
pop
leave
push
pop
mov
jnp
pusha
sbb
mov
xlat
int
leave
jo
pop
mov
stc
pop
outsl
cmpsl
push
add
dec
or
jns
dec
out
mov
xchg
and
imul
mov
mov
ficompl
je
cmp
cltd
mov
push
out
xor
iret
mov
sahf
or
mov
arpl
and
pop
adc
out
mov
jl
pop
fimuls
out
pushl
cltd
adc
push
mov
sbb
add
pop
mov
and
rcrb
cmp
and
cmp
jb
mov
xchg
movsb
js
fstps
imul
in
in
lods
cmp
lods
mov
mov
cld
cmp
test
push
inc
out
cmp
inc
adc
lods
mov
je
mov
lods
push
mov
mov
rcll
jo
push
adc
testb
mov
push
pop
jne
lea
add
mov
mov
jo
popa
stos
jge
cmp
sub
mov
fsubrs
and
call
jl
scas
cmc
cmp
je
mov
mov
adc
lahf
mov
jns
push
imul
lods
icebp
pop
xchg
jg
clc
xlat
push
cmc
cmp
lret
fstl
cmpsl
hlt
lret
pop
arpl
sbb
test
xlat
jae
lods
test
addr16
add
pop
iret
enter
push
and
inc
lcall
mov
pop
push
lods
enter
movl
mov
data16
stos
push
and
dec
sbb
sub
xchg
out
pushf
add
fwait
enter
inc
mov
xchg
aas
jg
leave
mov
mov
ret
push
addb
cli
mov
cmp
data16
sti
mov
aaa
ret
inc
filds
dec
jnp
flds
mov
repz
xor
ljmp
mov
arpl
inc
push
pop
add
or
jge
mov
rorb
stos
adc
or
jle
clc
fadds
mov
xchg
cmp
imul
lahf
inc
jb
jo
inc
push
jb
ret
sahf
inc
jnp
cmp
xlat
xchg
fisubs
inc
adc
int
imul
in
push
pop
out
in
xchg
mov
popf
data16
jne
mov
adcb
sbb
jno
rcr
and
xor
xchg
jae
dec
sub
jnp
dec
out
xchg
leave
push
mov
cwtl
aaa
cli
movsb
push
xor
pop
inc
movsl
cmc
xchg
or
movl
or
nopl
shrl
inc
sarl
cmc
daa
xor
out
rclb
inc
jp
sti
push
setge
filds
mov
bound
push
jnp
lret
jp
das
mov
ret
es
icebp
movb
dec
fst
inc
movsl
mov
add
sbbl
sub
sbb
lret
and
mov
ss
dec
addl
test
xchg
cmp
subl
stos
leave
das
jno
jnp
add
shlb
fs
push
xchg
mov
filds
xchg
nop
push
sahf
mov
xchg
xor
cmpsl
cmp
leave
mov
cmc
cmp
jo
mov
mov
dec
jne
adc
movb
in
je
mov
mov
mov
xlat
test
sahf
aad
ret
pop
or
filds
lock
push
out
sbb
insl
xchg
pop
cwtl
mov
dec
or
daa
inc
sub
stos
push
int3
adc
jno
movsl
pushf
popa
add
mov
je
insl
pop
or
jecxz
pop
xor
mov
add
mov
pop
mov
out
jo
sub
jnp
xchg
jl
mov
push
sbb
ja
mov
dec
add
sub
dec
mov
fiadds
cwtl
das
int
fs
dec
mov
cmc
lcall
pop
ss
shll
fucomi
clc
add
xchg
xchg
aas
icebp
lds
test
leave
test
inc
xchg
lcall
clc
mov
mov
and
dec
repnz
xor
inc
jmp
pop
aas
dec
in
pusha
wbinvd
loopne
dec
and
ret
ret
lret
iret
icebp
pop
je
lea
ds
mov
in
pop
imull
ds
cmpb
rcr
stos
outsb
or
xchg
std
ljmp
fcomp
adc
xchg
bswap
mov
fs
jo
adc
inc
mov
pop
mov
mov
call
loopnew
pop
mov
cmpb
push
imul
imul
adc
jnp
mov
adc
mov
and
dec
idivb
jmp
daa
jg
mov
adc
sbb
inc
fists
iret
sub
xor
jae
adc
or
and
sbb
shll
out
add
or
sub
lret
jae
out
lds
push
filds
incb
pop
pusha
push
or
sub
mov
dec
adc
sub
push
cmc
add
jns
outsb
jmp
inc
enter
fs
hlt
cmpsb
sub
mov
fidivs
push
loopew
lods
or
pop
popf
jo
mov
or
xor
lods
insl
mov
adc
xlat
aam
xor
cmp
add
aaa
xchg
loope
pop
xchg
mov
out
push
gs
mov
cmpsl
mov
pop
call
adc
dec
inc
shlb
addr16
or
add
cmpsb
fwait
inc
inc
adc
cwtl
and
dec
nop
mov
push
out
cmp
jb
scas
sbb
mov
sahf
scas
add
ret
cltd
dec
fistpll
dec
cmp
mov
les
out
cltd
mov
adc
out
and
cld
xor
cli
or
jg
jb
mov
push
imul
inc
mov
jae
loop
push
jecxz
cmp
jmp
cmpl
push
jp
out
push
cli
jmp
push
popa
or
mov
sub
cwtl
data16
fstpl
filds
inc
lcall
fistl
jp
jb
cmpsb
imul
sahf
nop
jmp
gs
mov
sbb
mov
or
inc
lret
loop
leave
pop
cmpsl
jg
xor
sarb
inc
mov
pushf
fs
in
insl
adc
jbe
jg
std
mov
cmpsl
adc
jmp
ss
inc
test
add
imul
ss
xchg
inc
rcrl
les
mov
mov
roll
mov
mov
je
xchg
dec
movsl
inc
jge
arpl
cwtl
aam
inc
fnstcw
mov
outsb
xchg
or
mov
dec
cli
pushf
adc
inc
mov
sti
je
and
imul
lock
loopne
outsl
push
mov
or
dec
and
in
xchg
pop
imul
ds
sbb
or
push
ljmp
xchg
xor
aad
lahf
mov
out
sti
sahf
sbb
incl
cmp
aam
mov
fildll
cmp
jge
cmc
test
repnz
call
sbb
push
or
insl
ss
movsl
sbb
mov
nop
mov
imul
insb
sbb
cltd
popa
adc
ret
out
insb
inc
mov
lret
bound
aam
ror
std
fcompl
add
mov
inc
mov
adc
adc
dec
jno
cs
cmp
mov
mov
xchg
dec
sbb
mov
inc
scas
or
jae
mov
jne
sti
inc
imul
mov
les
lods
mov
jbe
rcll
cmc
inc
rcrb
jo
out
add
out
jp
inc
jb
add
into
or
mov
leave
mov
mov
sbb
cmp
dec
adc
xor
push
insb
add
sub
cltd
rolb
enter
or
push
mov
sbb
loopne
mov
pusha
ret
inc
shrl
test
sbb
icebp
or
adcb
stos
xchg
add
jae
inc
arpl
mov
dec
mov
clc
xor
nop
or
js
insb
pop
out
mov
repz
rcrb
cmc
leave
add
jbe
mov
popa
xor
adc
cmp
mov
scas
aam
xchg
mov
fsubrs
push
bound
test
sbb
loop
jmp
bound
scas
in
lret
push
loop
cmpsb
daa
inc
xchg
adc
or
fidivl
pop
pop
pop
popa
jb
add
std
dec
pop
adc
sub
mov
or
std
lcall
nop
jno
sbb
inc
fldl
push
mov
push
ret
imul
dec
outsl
popa
rcll
and
icebp
out
enter
in
adc
jns
ficomps
negb
insl
movsl
repnz
je
lcall
jmp
filds
fwait
xor
sbb
aad
mov
shlb
xlat
cwtl
arpl
aaa
and
outsl
adc
adc
loop
push
repz
mov
mov
aaa
stc
jle
inc
stc
mov
nop
outsl
push
pusha
aas
in
scas
cmpsb
pop
jge
push
dec
mov
cli
aad
test
outsl
mov
cwtl
mov
fwait
lcall
cmp
lret
xor
mov
dec
sbb
jmp
push
nop
sub
movsl
mov
fiaddl
fidivrl
inc
sub
sub
lods
into
mov
mov
scas
out
roll
lahf
popf
pop
push
pusha
int
sarl
push
jmp
sbb
loopne
fdivl
nop
fbld
mov
adc
mov
sbb
orl
pusha
fs
jl
out
ja
jmp
dec
stos
jge
sub
inc
xor
mov
leave
popa
fists
adc
jns
push
divl
mov
sbb
push
xlat
or
dec
bound
and
rclb
mov
clc
sar
mov
mov
mov
daa
iret
sub
jp
fs
sbb
leave
imul
cmc
imul
and
or
outsb
mov
jl
mov
jae
mov
stc
sahf
lcall
fistpll
and
mov
xor
mov
stc
into
out
push
hlt
dec
sbb
inc
mov
add
sbb
shl
cmp
push
dec
shl
mov
lea
movaps
es
dec
xor
mov
cmp
mov
stc
or
imul
cltd
loop
repnz
xlat
out
jne
mov
int
push
mov
in
adc
sub
xor
xor
push
or
andl
add
cs
outsb
add
xchg
mov
sbb
cmpl
inc
lock
ffree
jl
jge
test
lcall
cli
fscale
fwait
push
aad
mov
dec
push
imul
mov
xchg
inc
movsb
mov
hlt
lcall
mov
mov
arpl
dec
xchg
cmp
sub
sbb
or
cld
es
faddl
int3
push
mov
inc
mov
cmpsb
insb
mov
xchg
out
negb
or
cld
es
faddl
int3
push
mov
inc
mov
cmpsb
insb
pop
decb
out
pop
sbb
or
std
in
faddl
int
mov
data16
cmpsb
insb
mov
xchg
out
negb
adc
out
and
fs
loop
rclb
mov
pop
out
jb
call
xor
test
je
rclb
mov
mov
add
mulb
es
inc
les
xlat
and
add
dec
ret
sub
sbbb
pop
fisubs
mov
inc
lret
insb
test
and
std
sbb
mov
xchg
mov
push
pop
and
cwtl
mov
je
test
ffreep
mov
adc
jecxz
or
in
bound
call
lods
push
stos
movsb
ja
ret
and
movsb
push
inc
je
adc
in
dec
ljmp
xor
cmp
out
pop
adc
add
or
stos
cli
movsb
or
fcoms
jns
in
xchg
lret
les
xchg
pop
jnp
jnp
test
push
arpl
insl
or
stos
roll
push
out
rcll
imul
je
jae
inc
ret
xor
and
or
cld
push
int
fnsave
lods
and
mov
mov
cmpsl
inc
fisubs
dec
idivl
imul
subl
notl
push
jmp
andb
hlt
inc
into
push
xchg
jo
push
adc
jbe
pusha
clc
add
fwait
xor
ret
xor
adc
add
hlt
in
aam
les
mov
movsb
adc
rclb
mov
mov
add
hlt
in
aam
les
mov
movsb
adc
jecxz
jne
push
push
test
in
sbb
pop
pop
adc
mov
mov
fdivl
std
push
xchg
in
faddl
icebp
mov
movsl
mov
xchg
out
jge
pusha
push
xchg
inc
pop
xor
mov
pop
lea
addr16
push
push
jge
mov
rorb
mov
mov
ljmp
or
cmp
popa
movsb
fdiv
rorb
add
rorl
push
mov
sti
mov
cltd
pop
jno
lods
jecxz
clc
add
jge
xchg
adc
dec
mov
pushf
fsubl
cmc
fisubs
xchg
imul
out
push
cwtl
and
xchg
mov
pop
in
push
inc
jecxz
ret
sub
cmpsl
xchg
inc
mov
or
icebp
cmp
stos
and
mov
sbb
jp
mov
sbb
pop
push
mov
cli
cmpsb
or
jns
stos
cmpsl
dec
dec
outsb
sub
or
push
add
sub
add
jg
add
mov
repz
mov
push
xchg
jae
cld
add
cmpsb
pusha
mov
push
adc
xlat
in
sbb
xor
sbb
lock
mov
divb
test
or
mov
add
inc
in
xor
cmpb
xor
into
clc
dec
hlt
cs
push
test
dec
jmp
xor
adcl
jp
call
jmp
fwait
popa
test
jge
jo
sbb
cmpsl
out
adc
lods
data16
sub
dec
or
inc
mov
jno
cmp
push
adc
push
mov
icebp
aad
shlb
sbb
test
je
cwtl
pop
andb
cmp
push
mov
add
dec
popf
mov
sahf
jne
cli
hlt
insl
jo
ret
add
xor
lcall
pop
pop
insl
or
sbb
jecxz
pop
test
xchg
inc
out
rclb
inc
push
cwtl
stos
mov
push
lods
scas
cmpsl
daa
lahf
cli
pusha
cmc
xchg
sub
xor
pop
jbe
out
fdivs
fs
fists
xchg
dec
out
pop
and
mov
mov
xchg
mov
call
testl
gs
add
add
test
call
push
sbb
ret
push
jnp
dec
xor
lcall
iret
jae
imul
push
and
in
push
aad
test
adc
ss
xor
fdivl
jmp
call
inc
adc
fisubrs
sbb
ljmp
testb
inc
mov
push
das
test
adc
push
shlb
xor
push
inc
out
lret
mov
jo
clc
sub
mov
fisttps
std
cli
pop
sbbl
pushf
cmp
vcvtsd2ss
int3
pushf
aad
mov
xor
int3
and
movsl
out
push
fildll
push
fimull
mov
xchg
sbb
popf
jecxz
scas
cwtl
and
cmp
add
mov
das
movmskps
sbb
fstpl
mov
push
daa
pop
jge
and
jo
sub
lods
jp
xor
jo
mov
mov
scas
cmc
cmp
xchg
dec
icebp
aad
fcmove
xorl
jecxz
lods
shl
xor
mov
push
sti
out
dec
pop
mov
clc
mov
cmpsb
mov
outsb
ljmp
and
mov
inc
push
xchg
sub
mov
aas
lock
call
xchg
inc
bound
push
popa
push
shrl
mov
enter
jle
fwait
mov
pop
cli
bound
fdivr
mov
add
mov
loopne
out
cmpsb
dec
lret
or
sub
ss
pop
out
mov
push
lcall
sub
lcall
popf
sbb
adc
cmp
mov
push
or
jae
cs
xlat
mov
repz
pop
xchg
and
jp
sbb
xchg
stc
add
inc
lcall
inc
push
daa
jae
aaa
mov
je
pop
fs
sbb
rcl
jp
jns
cmp
jne
and
mov
inc
and
jns
or
js
data16
imul
sbb
cltd
pop
and
movsl
or
jne
jmp
test
test
xor
in
fstl
test
mov
jge
and
into
and
pop
iret
push
movsb
cmp
nop
push
scas
bound
adc
bound
loope
or
lret
jmp
aam
rorl
and
movsl
mov
scas
loope
cmc
mov
sub
scas
jbe
rep
mov
adc
push
mov
jae
xor
cmp
fildll
inc
gs
fisubrs
out
dec
xchg
mov
jnp
push
and
dec
mov
or
out
bound
daa
loopne
fnsave
jmp
aaa
lods
push
jns
push
stos
rcr
lock
ret
mov
adc
movsl
lods
stos
sub
mov
ljmp
push
cs
jae
jecxz
testb
xorl
mov
in
aad
xchg
xor
xor
jl
inc
push
mov
pop
push
pop
sbb
divl
xlat
mov
mov
aam
inc
mov
mov
lds
or
sbb
int
cwtl
call
inc
xor
mov
fldt
cmpsb
and
xchg
lcall
mov
rol
fdivp
pop
test
cwtl
or
dec
cwtl
pop
mov
mov
sub
popf
mov
xchg
scas
ret
mov
jmp
adc
xchg
gs
jnp
adc
stc
add
cmp
lahf
ret
movsl
lea
repz
fmull
xor
test
xchg
pop
mov
cmp
cmpsl
pop
xor
fidivrl
adc
sbb
adc
stos
jnp
scas
xchg
in
inc
mov
mov
or
mov
ja
or
or
out
and
mov
imul
cmpsb
jge
cwtl
loopne
popf
ret
out
mov
cmp
jne
cwtl
sub
loope
adc
fldcw
jbe
aas
in
icebp
and
sub
inc
xchg
lea
mov
xorl
and
mov
fidivrs
es
jnp
flds
xchg
shrb
xchg
repnz
rolb
push
push
inc
rcll
scas
scas
mov
inc
pushf
cmp
jo
add
ss
sub
push
icebp
jmp
cwtl
push
mov
mov
cmpsb
fs
adc
lret
cmpsl
and
xor
mov
mov
mov
fldl2e
es
add
stos
sbb
add
and
sbb
mov
add
rol
scas
or
xor
jg
inc
push
push
pop
adc
inc
les
cwtl
mov
aad
je
xor
mov
les
push
mov
mov
movsb
push
adc
lods
sub
in
stos
push
cmp
xchg
mov
lds
push
xchg
jge
lods
je
enter
imul
lods
mov
sbb
mov
mov
cmp
stos
mov
and
mov
or
or
arpl
mov
out
in
mov
repnz
insl
shl
or
or
inc
js
xor
std
ret
dec
std
dec
xorb
mov
enter
inc
int3
dec
cmp
and
stos
testb
shl
mov
cwtl
pop
jle
jno
pushf
fistpll
xchg
inc
add
jmp
jp
out
inc
insl
pop
cmc
lea
out
xchg
ret
jb
xchg
pop
push
or
inc
jmp
lods
ds
or
ja
mov
sti
mov
mov
push
adc
ret
out
testl
sti
sbb
xor
xchg
fwait
and
mov
out
ret
inc
sub
insl
mov
fnstcw
rcll
or
sbb
sbb
xchg
jg
mov
or
adcb
cmc
clc
sti
mov
dec
shll
dec
cs
adc
repz
add
rorl
dec
sbb
pop
mov
jmp
xlat
push
hlt
movsb
xchg
sbb
push
lahf
sahf
mov
inc
pop
mov
sbb
mov
popa
xlat
xchg
sub
or
js
call
inc
jo
pushf
rcrl
sub
mov
sub
cmp
push
fs
aad
dec
enter
fcomi
lret
cmp
push
jne
lret
bound
and
mov
lahf
fistl
sahf
nop
xchg
imul
js
add
testb
push
stc
add
sbb
sbb
test
bound
lds
adc
test
push
cmp
out
mov
jns
repnz
cmpsb
mov
jge
js
push
test
leave
pop
insb
or
lahf
xlat
mov
mov
jae
rclb
js
xchg
xor
int3
test
ljmp
ret
cwtl
jle
cmp
pushf
loop
xchg
push
xorb
test
xchg
fwait
shl
xchg
nop
rorl
jecxz
cmpsb
jmp
xchg
xor
mov
rol
scas
mov
xchg
test
mov
or
mov
faddp
push
xchg
scas
inc
jl
int3
jns
out
and
fadds
testl
adc
scas
cmpsb
jns
loop
xor
xchg
orb
cld
test
pushl
and
out
inc
push
xor
lret
movsl
inc
or
int
jp
or
es
enter
lcall
cmpl
insb
loope
and
jmp
add
addl
and
aas
leave
sti
rol
cmp
and
adc
enter
add
pop
cmp
mov
or
std
lds
shlb
push
xor
ds
popa
leave
adc
shrl
sub
sahf
sarl
insl
testb
mov
mov
pop
or
pushf
daa
jl
out
testb
sbb
pop
pop
dec
arpl
in
inc
pop
mov
jo
test
dec
sbb
sbb
mov
xor
nop
mov
fnstcw
mov
cmpsl
call
push
push
aas
rorl
push
arpl
pusha
cmpsb
fcomp
or
xor
xor
or
xor
xchg
xchg
aas
xor
mov
test
and
xchg
clc
adc
orl
pop
icebp
cmp
ljmpw
lock
daa
sahf
mov
addr16
xor
stos
xor
prefetcht1
xor
add
pop
xchg
ffreep
repz
mov
dec
les
lods
mov
out
sub
and
add
lret
mov
test
fcmovbe
pop
cmc
test
into
aad
popa
inc
inc
inc
mov
adc
cmp
mov
adcb
pop
pushf
jmp
adc
pushf
mov
cmp
test
shrb
lods
daa
pop
test
ds
mov
fucomp
xchg
cld
cmp
push
mov
out
push
pushf
orl
or
adcl
lods
cmp
testl
push
sahf
fcomp
sarb
movsl
dec
outsb
sahf
pop
dec
es
cmpsl
popf
or
out
ror
jp
sti
lcall
mov
stc
dec
mov
inc
outsb
cmpsl
inc
mov
in
xchg
or
scas
je
sub
aaa
push
inc
lods
shrl
and
and
add
lcall
jl
push
jmp
mov
int
jmp
lretw
add
int
inc
dec
add
sub
push
dec
jns
jp
outsl
jo
in
imul
imul
or
adc
enter
out
xor
mov
orl
jns
idivb
xor
leave
xchg
lret
fildl
and
mov
mov
add
add
stos
mov
cmp
adc
popf
add
mov
and
xchg
sbb
sarl
add
xchg
push
push
test
int3
sti
outsl
rcrb
test
xchg
mov
or
imul
mov
insl
jg
loopne
popf
pop
mov
fimuls
insl
jno
sar
push
sti
cmp
repz
mov
frstor
dec
lret
sub
fwait
dec
in
in
push
repz
cs
adc
shl
fsub
xchg
pop
cmpsl
lock
shl
push
enter
fs
mov
mov
and
and
inc
push
ja
pop
filds
mov
mov
cwtl
pop
cs
pop
and
lods
or
aad
icebp
mov
and
cmpsl
fsubl
jae
add
test
cmp
sbb
insl
jg
popf
sbb
and
jmp
call
add
imul
xchg
out
and
ss
pop
fs
fwait
inc
inc
mov
mov
add
sbb
push
cltd
fisttps
int
iret
imul
jle
pop
mov
je
jnp
mov
or
push
xor
or
adc
mov
mov
nop
sbb
inc
mov
in
add
incb
loopne
add
fprem1
jge
in
cwtl
imul
enter
cmp
xchg
xor
and
mov
bnd
lds
adc
out
andnps
adc
cwtl
std
mov
cmpb
fwait
mov
mov
int3
push
inc
pop
bnd
scas
dec
cmp
add
dec
loope
js
bound
inc
pop
clc
cmc
movsl
sbb
jae
jmp
scas
fwait
pop
adc
inc
mov
out
xchg
and
inc
push
outsl
jp
leave
fmul
scas
rcrl
push
aam
sub
inc
dec
sub
dec
lds
adc
add
xor
xchg
or
and
sbb
mov
addr16
pop
repz
xchg
mov
pop
or
aas
sub
push
sub
int
fisubl
mov
xlat
aad
push
sbb
ja
imul
push
jbe
push
lea
js
orb
inc
inc
test
std
daa
dec
xchg
daa
arpl
jle
ss
xchg
jnp
jbe
aas
cld
pop
inc
or
push
lret
je
aad
frstor
das
jbe
push
push
shrb
cs
inc
imul
outsl
cmp
popf
test
cmpl
sahf
popf
filds
inc
aad
popf
dec
pop
pop
insb
sbb
adcb
or
xchg
push
sbb
xor
and
jb
ret
dec
fmuls
rcr
in
fsubr
cwtl
and
fsubl
pop
gs
test
jmp
xor
and
cs
imull
imul
aas
xor
mov
sbb
push
outsl
aaa
jnp
mov
ret
push
inc
adc
xchg
push
or
mov
insl
nop
fcomps
movsb
mov
sbb
pop
push
mov
adc
sub
pop
push
test
xchg
les
push
imul
leave
cmp
lret
outsb
scas
js
adc
pop
mov
or
lcall
cmp
pop
mov
dec
pop
or
mov
inc
pop
jge
insl
sbb
cltd
mov
sbbb
movsl
fidivrs
mov
jmp
adc
jp,pn
lret
mov
jae
dec
cs
mov
and
inc
inc
repnz
aas
mov
loop
sub
mov
ljmp
inc
push
jne
inc
je
clc
add
inc
cmc
pop
in
das
adc
into
lods
divl
xor
repnz
bnd
lcall
popa
inc
ljmp
dec
inc
ljmp
test
fisttpll
xor
das
inc
fadds
ss
call
out
hlt
sbb
xchg
fldcw
sub
jb
test
out
push
lret
int3
adc
pop
mov
mov
and
adc
andl
or
sti
or
sbb
stc
lods
pop
loop
test
mov
sub
imul
mov
imul
daa
xchg
daa
out
mov
mov
mov
xchg
int3
out
stos
jnp
in
push
adc
and
sub
dec
repnz
inc
out
dec
xor
les
scas
xchg
popa
sbb
and
sub
add
push
out
xchg
outsl
addr16
or
nopl
call
mov
jle
and
mov
and
cmpsl
xorl
sbb
daa
les
shlb
sbb
push
mov
add
hlt
mov
lock
pop
pop
push
movsb
mov
scas
scas
outsb
or
into
aad
or
mov
push
or
jecxz
mov
in
sbb
xlat
push
push
cmp
sub
lock
cmpsb
lret
stc
imulb
stc
pop
repz
movb
int
mov
jno
dec
push
andl
jmp
inc
mov
jb
inc
les
dec
lock
dec
std
out
out
popf
inc
insb
aad
push
pusha
outsb
sbb
adc
ljmp
and
call
scas
data16
and
mov
inc
ret
sti
fcmovnb
in
cmpsb
fcmovnu
hlt
pushf
add
addr16
jae
in
frstor
out
loop
inc
or
mov
sti
or
cmpsb
clc
in
cli
das
xor
and
push
ds
mov
push
xchg
out
in
rorb
sub
icebp
iret
cmp
mov
dec
nop
out
xor
and
add
in
push
lret
in
mov
and
frstor
sbb
test
mov
push
lock
outsl
gs
repnz
loop
push
or
xor
push
push
mov
push
xchg
imul
in
fsubl
into
xor
dec
call
lds
das
dec
into
outsl
fildll
mov
pushf
push
sub
push
inc
ljmp
inc
int
test
fwait
cmp
xchg
aad
loop
out
cmpsl
sbbb
je
xchg
and
and
rcrb
sbb
clc
push
add
adc
outsb
jmp
sbb
mov
hlt
stos
add
mov
loope
mov
shll
or
sub
aas
inc
imul
fbstp
mov
jmp
fwait
aaa
fldenv
stos
mov
sbb
mov
adc
mov
mov
inc
or
rorl
or
mov
iret
dec
mov
ud1
inc
pop
add
ja
add
fisubrs
movsl
pop
xchg
cmp
inc
and
adc
jle
in
ret
dec
loope
jbe
jg
fiadds
hlt
loop
repnz
decl
or
push
sbb
imul
cmp
xor
jmp
dec
call
repz
or
stc
jmp
or
and
mov
and
fisubrl
xchg
popa
add
sbb
mov
sub
sbb
and
add
pop
xlat
rcrl
jl
scas
jno
stos
enter
sbb
jmp
shrl
cmp
fsubl
loope
sub
xchg
sbb
cmp
jle
xor
sbb
add
dec
xchg
cltd
mov
mov
pop
call
lea
push
aam
sub
fsubrs
and
fisubrs
cmp
jmp
push
push
dec
and
aad
or
inc
sbb
adc
test
outsb
or
pop
into
imul
cwtl
sbb
dec
sbb
add
das
loope
sbbl
or
in
inc
lea
push
xor
mov
pusha
mov
push
lods
popf
aad
sbb
jno
lds
jo
and
inc
lds
jle
mov
mov
std
jns
mov
ret
data16
mov
mov
inc
pop
mov
or
adc
xor
ja
daa
loopne
or
mov
lods
mov
adc
out
jae
pop
in
add
pop
hlt
aad
imul
loop
sbb
push
xchg
je
sbb
and
sbb
mov
bnd
scas
bts
xchg
push
cltd
push
cmp
cli
bound
jmp
aaa
jge
lock
das
adc
mov
adc
jecxz
cmp
xchg
push
loop
les
sub
xorb
push
addr16
or
cmp
fsubl
xchg
mov
jge
cwtl
push
in
daa
xlat
xor
bound
and
je
sahf
int3
pop
call
push
repz
mov
arpl
cmp
sarl
out
cli
in
inc
sub
dec
mov
lds
lret
mov
xor
popf
pop
jecxz
sub
mov
xchg
and
repz
pop
lds
out
pop
icebp
nop
xlat
and
push
cli
mov
scas
cmp
lds
xor
imul
je
sbb
and
add
in
cmp
xchg
cmp
sbbl
arpl
xchg
push
imul
std
jmp
or
in
ljmp
pop
in
adc
pop
mov
sbb
mov
jb
dec
push
jne
loope
scas
stc
xor
int
xchg
std
fbstp
in
imul
and
adc
add
hlt
in
aam
les
mov
movsb
adc
rclb
mov
mov
add
hlt
in
aam
les
mov
movsb
adc
rclb
mov
mov
add
hlt
in
aam
lds
mov
movsb
adc
loop
rclb
mov
mov
add
hlt
bound
aam
mov
cmp
pop
in
imul
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
fidivrs
int
std
sbb
or
jnp
dec
adc
insl
mov
fstpt
sub
jnp
imul
dec
lret
sbb
insl
mov
or
lret
cmp
sub
xor
imul
outsb
stos
adc
mov
jno
mov
xorl
lea
sbb
loopne
pop
cmp
pusha
cmp
sub
xor
stos
jge
push
xchg
xor
or
lcall
cmp
arpl
addr16
test
mov
sahf
cmpsl
or
push
push
cli
dec
sub
and
inc
add
movsl
test
xlat
add
bound
imul
mov
pusha
dec
stc
fs
fnclex
xchg
or
inc
and
rcl
sahf
jo
popa
jp
jle
dec
es
cld
jge
sub
jmp
pop
lds
inc
and
adc
bound
fs
cs
stos
outsb
into
dec
stos
hlt
mov
sub
iret
cs
fwait
sub
sbb
or
cmc
imul
xlat
stos
or
pop
jmp
fldt
sub
pop
jecxz
leave
adc
push
fistps
repz
outsl
lcall
nop
cmp
jns
xor
cmovs
dec
cmp
pop
fidivrs
adc
adcb
mov
mov
outsb
into
jnp
imul
dec
stos
jge
insl
mov
fldt
sub
sbb
or
pop
lods
dec
pop
mov
insl
mov
fldt
bound
test
xlat
shll
mov
dec
orb
out
in
mov
xlat
rorl
ds
fcompl
into
jle
add
add
pop
fisubs
inc
push
push
add
aad
int3
mov
push
lods
dec
xchg
out
fidivl
sahf
pop
scas
mov
sbb
sbb
hlt
jnp
adcl
in
cmp
mov
cli
sub
jmp
ljmp
push
inc
ds
or
lods
pop
push
insl
inc
xchg
adc
cli
loop
je
ds
or
pop
pop
iret
xor
movb
in
lahf
test
inc
mov
movsl
lock
mov
mov
ljmp
adc
insb
xchg
adc
pushf
mov
xor
xchg
mov
je
sbb
sub
cld
je
add
outsl
push
or
adc
mov
shlb
mov
jge
mov
ret
inc
xor
insl
repz
mov
xchg
out
jle
insb
incl
data16
fdiv
test
mov
gs
mov
xlat
pop
out
rolb
scas
outsl
pop
aam
jns
addr16
fwait
mov
jns
jge
scas
inc
out
xchg
aam
lods
mov
fs
je
jmp
jge
popa
xchg
jp
cltd
std
stos
js
pop
add
xlat
sbb
push
pop
pop
mov
pop
jecxz
ja
orl
dec
sbb
jae
pop
mov
push
shl
jb
push
or
and
adc
cmp
gs
mov
test
imul
hlt
movsb
fisubs
movsb
add
add
add
and
xchg
inc
mov
mov
rolb
jnp
ret
pushf
mov
test
movsb
inc
sti
add
decb
cmp
jbe
leave
push
out
std
pop
cwtl
icebp
adc
in
addb
repnz
int
add
add
jle
mov
insb
push
lock
and
incb
icebp
mov
out
addr16
cwtl
and
jg
and
sub
leave
test
xchg
not
add
jnp
enter
rorl
lret
mov
enter
xor
js
sahf
xor
in
pop
push
jp
xchg
insl
and
cmp
hlt
call
and
mov
sarb
cmp
xchg
cmp
imul
dec
loope
xor
dec
scas
and
dec
sbb
sbb
lods
pusha
xchg
scas
mov
dec
mov
inc
cld
inc
test
cmc
pmaxsw
aaa
jnp
sbb
pop
stos
or
push
mov
mov
pop
pop
dec
sarl
pop
popf
rolb
scas
xchg
lret
sbb
repnz
enter
cmp
sbb
or
cli
xchg
jbe
push
int3
lea
out
xchg
sahf
mulb
and
mov
movsl
stos
add
pusha
jp
jae
adc
clc
adc
rcll
stos
sbb
sub
je
mov
push
mov
ror
jo
lcall
dec
test
pop
jg
iret
cmp
mov
sbb
rep
xlat
adc
test
add
mov
popa
add
shrb
neg
pop
push
repz
lahf
flds
push
push
inc
cmp
cli
dec
repnz
xchg
mov
fsubl
lock
pushf
out
dec
mov
sub
fisubrs
cmpsl
aaa
leave
ds
sbb
add
rol
fcomps
push
push
add
jg
out
xorb
jge
bound
iret
jbe
cmp
sub
aam
dec
and
sbb
mull
leave
pusha
xchg
cmp
popl
push
aad
hlt
rcl
fidivl
mov
popf
fsubl
aaa
push
add
xlat
xchg
sarb
leave
mov
and
jns
add
inc
push
leave
outsl
cwtl
dec
cmpsl
jge
cs
in
mov
shlb
sub
std
ror
cmp
lods
mov
sbb
mov
and
pop
jne
push
aaa
inc
dec
rcl
pushf
jne
and
pop
dec
ret
sub
fidivrl
jl
adc
data16
cmp
pop
and
adc
and
dec
push
mov
cmovb
jmp
pop
les
and
popa
push
lret
add
mov
mov
and
adcb
and
test
cwtl
lods
bound
call
sbb
mov
xchg
test
je
pop
cmc
xchg
jmp
jg
hlt
jns
mov
xlat
rcr
pop
lcall
rcr
pop
gs
push
mov
rcr
or
xor
add
mov
lods
fsub
jne,pn
sub
out
mov
scas
mov
xchg
add
cmp
push
loope
and
pop
push
fbstp
push
fldl
sbbl
jp
lahf
repnz
pop
cmp
lds
sbb
loop
xchg
xchg
in
loope
dec
lret
popa
aaa
or
movsl
gs
cmp
loope
int
ja
dec
jb
dec
push
loope
cmpb
mov
cmp
or
xchg
cmp
and
jl
cmp
jmp
hlt
cmpsb
adc
and
aas
adc
cmovg
cmp
hlt
bswap
mov
cmp
js
mov
in
inc
pop
fnsave
addr16
cmp
cli
clc
call
or
aas
xchg
inc
cmp
push
jge
and
jmp
push
je
hlt
ja
arpl
pop
push
adc
fdivl
repz
ljmp
dec
aas
pusha
aam
xor
fdivs
aas
and
xchg
mov
mov
fisubs
cwtl
jno
pushf
out
cmp
mov
arpl
adc
scas
jns
inc
lret
pop
xchg
dec
insb
repz
sbb
and
sti
dec
cmp
sub
dec
xor
faddp
add
or
pop
pop
repz
dec
push
dec
mov
ss
xor
push
sarb
xchg
sub
sbb
sub
lods
in
das
sahf
sbb
loop
insl
add
mov
rcrb
ret
cmp
fwait
mov
fadd
pop
clc
xor
pop
and
fisttpl
arpl
dec
or
pop
sbb
andb
dec
fidivrs
ficoml
jle
daa
cmpsl
pusha
mov
inc
loope
pop
in
push
and
lock
faddl
mov
gs
xor
dec
jle
mov
dec
pop
jne
or
xchg
push
add
push
hlt
loopne
adc
pop
dec
movsl
fcom
jle
repnz
pop
psadbw
insl
test
ret
xchg
dec
push
adc
lods
push
mov
dec
scas
and
inc
popf
sbbb
gs
cmp
lcall
andl
sub
imul
iret
xchg
cmpl
test
jmp
and
and
test
mov
test
cmpl
nop
stc
pusha
aaa
jle
lods
loopne
shll
cs
cld
xor
fdivp
add
test
or
mov
adc
fidivrs
div
daa
fstpl
mov
jno
pop
inc
fimuls
and
or
pop
mov
aaa
sub
push
mov
rcl
jg
into
mov
jle
ficompl
lds
dec
shlb
push
arpl
jg
rorl
test
push
sbb
popa
mov
daa
push
push
xor
mov
mov
jg
mov
bound
jl
nop
or
xchg
jp
adc
jne
jmp
stos
pop
stc
nop
pushf
push
fwait
push
pop
and
inc
ret
popa
pop
loopne
mov
inc
inc
in
cmc
adc
into
and
mov
dec
jae
pop
fnstenv
pusha
sub
lcall
daa
add
cmp
push
mov
sbb
jmp
mov
jmp
int3
sahf
fdivr
add
and
mov
pop
imul
imulb
pop
mov
ljmp
jecxz
sbb
repz
ss
aas
pop
roll
ljmp
jle
adc
inc
in
inc
rcrb
mov
cmpl
mull
flds
mov
test
aad
adc
shlb
fsqrt
cmp
mov
jb
fwait
enter
es
jge
cmp
popf
jle
mov
out
out
out
fwait
mov
inc
out
lret
push
xchg
fiadds
ds
imull
loop
pop
jbe
mov
dec
lahf
js
mov
fstp
mov
dec
pushf
cwtl
xchg
jecxz
xor
adc
insl
or
dec
lret
jg
leave
cli
xchg
in
cmp
dec
lock
js
out
int
add
mov
gs
adc
int
cmp
fisubrs
ret
sub
jp
das
lods
outsb
cmpsl
add
outsl
lods
xor
ds
call
and
sbb
test
and
or
jge
adc
xchg
dec
ja
pop
jnp
mov
iret
cwtl
test
xlat
mov
add
and
int
adc
xor
ffree
mov
dec
fidivrl
push
or
mov
cmpsl
arpl
or
pop
push
fs
lret
sub
popf
jmp
inc
shl
push
int
iret
daa
dec
ja
lds
call
add
es
testb
loop
cmpsb
pusha
pop
rorb
add
shll
sub
repz
mov
xor
out
mov
jae
xor
lods
imul
and
stos
fisttpll
bound
stos
mov
push
pop
leave
aaa
dec
fwait
pop
stos
stos
xchg
xchg
cmp
ds
or
mov
adc
dec
std
cmp
adc
mov
ljmp
out
ja
stos
push
jae
push
aam
cmpsl
inc
pop
dec
ljmp
lcall
push
xchg
xchg
lret
into
mov
aas
add
in
ja
sbb
cmp
push
sub
push
fisubrl
mov
arpl
pusha
icebp
out
xor
sbb
jo
lods
xchg
int3
and
cmp
adc
pop
loope
pop
out
into
push
add
jbe
mov
inc
or
fists
test
cmc
rolb
in
insb
sub
call
pop
xlat
lcall
stos
jle
hlt
pop
xor
push
gs
push
xchg
dec
cmpsb
pop
push
out
lret
shll
sub
iret
aaa
sbb
lds
sbbl
push
xchg
lret
add
popf
cli
mov
mov
sbb
add
push
testl
mov
int
shl
inc
idiv
imul
push
cmp
xchg
sahf
mov
lea
in
fadd
add
outsl
insl
sbbl
test
mov
stc
mov
mov
mov
dec
hlt
cmpl
lahf
mov
push
or
xchg
les
add
pusha
xchg
stos
dec
imul
add
aaa
inc
push
pop
sti
sub
mov
mov
lods
mov
aaa
or
daa
pushf
push
push
push
push
mov
mov
nop
inc
out
fnstenv
cs
pop
in
in
ljmp
sub
sbb
sbb
insb
ret
inc
mov
clc
addr16
or
pop
add
into
or
add
cmp
xchg
xchg
cmpsl
add
or
add
imul
outsl
push
jmp
pusha
or
push
dec
pop
out
jo
cmc
je
push
test
cmp
loop
cmp
std
mov
xor
xor
in
mov
insb
inc
fstpt
decb
pop
xor
cmovl
mov
mov
dec
fsubr
jge
int3
add
cmc
push
inc
cmp
cld
leave
pop
mov
dec
cmp
and
andb
adc
mov
repnz
jp
mov
lret
push
or
xchg
sbb
adc
test
jnp,pt
fisubrl
popf
mov
push
nop
adc
stc
mov
in
or
std
lock
cwtl
sarl
jg
addr16
sahf
jne
outsb
fnstcw
dec
aas
test
dec
adc
xchg
ficompl
sbb
xorl
inc
add
add
hlt
pushf
pop
push
cli
push
mov
mov
loop
adc
mov
das
les
sbb
inc
and
and
push
sahf
lea
orl
pop
mov
repz
popa
cmp
mov
arpl
pop
icebp
jl
push
loopne
pop
int
cmc
xor
cmp
dec
sti
add
out
xchg
add
sbb
mov
imul
jo
mov
fdivrs
out
adc
ja
pusha
xor
push
cmpsb
popa
lret
shl
or
jmp
rcr
xchg
jno
dec
mov
and
sub
mov
es
jg
fildl
shlb
fimull
mov
ret
cmp
lret
mov
rcrl
and
imul
mov
adc
ret
popf
movsl
pop
stos
andl
dec
xor
adc
lds
and
add
into
inc
lock
pop
mov
sti
push
jae
aam
inc
lahf
inc
inc
stos
dec
fwait
dec
mov
out
into
jle
dec
pop
out
and
fsubrs
jnp
sbb
lahf
cmp
repz
vpmacsdqh
add
sub
scas
dec
stos
test
xor
js
mov
cmp
or
cmp
out
jo
cs
mov
mov
out
cmc
xchg
mov
movsl
fcoml
rcr
and
pop
mov
arpl
sub
sub
jo
fisubrs
sbb
sarb
or
sub
mov
repz
sti
js
movsl
xchg
jl
pop
loopne
cmp
xchg
stc
xor
mov
je
mov
das
sbb
push
sbb
mov
jnp
hlt
ss
cld
ja
mov
mov
pop
daa
jnp
push
jl
inc
lods
ja
subl
dec
jecxz
xchg
ds
fadds
pop
xchg
lock
jno
dec
ret
test
or
ss
pushl
mov
xlat
dec
mov
cmp
data16
and
lcall
jp
or
mov
xchg
sahf
push
adc
push
stos
jge
pop
repz
jecxz
cli
adc
jp
movsl
sbb
fmull
xchg
addl
and
adcb
jo
adc
cmc
add
mov
mov
loope
cmp
and
cmc
movsl
in
mov
imul
xchg
push
clc
rcr
hlt
rorb
sub
jl
ret
xor
fnstenv
lcall
push
cwtl
mulb
jb
mov
dec
dec
daa
mov
lods
push
movb
sbb
sub
dec
or
jne
adc
push
pop
dec
ds
cmp
mov
xor
lcall
mov
lods
mov
mov
and
ljmp
lret
sbb
jmp
outsb
fistpl
mov
inc
lahf
clc
out
mov
sub
jb
fxrstor
push
insb
das
xchg
mov
push
pop
dec
sarb
popa
xchg
push
fldz
icebp
push
xchg
ljmp
icebp
mov
arpl
fimull
int
test
add
or
add
movsl
jg
adc
xchg
jp
and
jmp
jb
dec
addr16
pop
cltd
mov
xchg
dec
fs
outsb
cmp
or
out
test
mov
ja
popf
push
into
cli
inc
mov
or
ficoms
mov
push
lcall
insb
or
adc
push
imul
pop
dec
jge
pop
mov
test
lods
add
sub
and
lret
pop
cmp
mov
xchg
inc
nop
push
mov
outsl
sub
pop
add
je
mov
sbb
mov
repz
mov
adc
fs
sbb
aaa
rcll
cli
cmc
and
dec
sub
dec
lret
dec
stos
jae
lahf
test
mov
push
mov
testb
jmp
push
nop
inc
in
cmp
insb
movsl
push
addl
aaa
or
push
push
or
imul
lret
pop
push
sub
movsb
lahf
xchg
out
lret
sbb
insb
cs
jmp
pop
sbb
or
dec
icebp
pusha
aas
pop
mov
push
push
in
outsb
je
popf
inc
inc
add
mov
aas
out
mov
frstor
dec
dec
iret
shll
xor
sub
lock
hlt
loopne
sub
sarl
add
lds
fcmovne
sbb
add
dec
xor
rorl
and
hlt
or
pop
mov
enter
dec
jns
inc
and
aas
pop
and
jnp
mov
dec
movb
inc
jbe
enter
cmpsl
adc
int3
mov
mov
sbb
or
scas
or
sti
adc
mov
push
dec
mov
adc
add
xchg
mov
sar
sub
adc
repnz
pop
neg
rdpmc
test
rcrl
scas
ret
testb
std
test
mov
mov
mov
movsl
mov
mov
inc
and
popa
dec
cmp
pop
push
call
in
aas
add
add
jg
xchg
fwait
and
icebp
adc
aas
mov
lret
out
push
push
adc
mov
cld
fldcw
shrl
add
mov
jp
fcoms
sub
inc
push
sbbb
add
ja
xor
repz
popf
int3
iret
popf
in
int3
stos
nop
iret
sub
adc
inc
out
shlb
repz
mov
lods
adc
mov
pop
stos
inc
jbe
and
hlt
and
inc
test
mov
push
xchg
jl
mov
cmp
xor
mov
adc
dec
mov
add
loop
sbbl
hlt
jae
and
stos
dec
ja
popf
xor
inc
xchg
cmp
add
rcrb
jl
dec
jl
stc
out
inc
int
cld
mov
in
cmpsb
and
sbb
aad
icebp
sbb
lcall
pop
sbb
adc
inc
test
movsl
mov
incb
jg
mov
inc
cmpl
pop
add
repz
or
pop
stos
mov
mov
mov
dec
mov
cld
sbb
sub
pop
mov
fwait
pop
mov
test
mov
scas
fcompl
jns
sub
stc
daa
test
push
leave
icebp
dec
rcl
sbb
adc
sbb
jbe
fistps
cmpsb
hlt
push
aaa
sbb
adc
jecxz
cmp
test
clc
add
or
jne
data16
mov
leave
mov
push
pop
push
sbbl
xchg
inc
mov
dec
push
cli
or
into
mov
xchg
xchg
mov
pop
sbb
pop
inc
sbb
lock
pop
add
fdivrl
jnp
orl
ds
in
add
dec
mov
rorl
movsb
jmp
inc
mov
js
js
in
test
mov
repz
mov
jne
add
pop
mov
popfw
xchg
test
or
inc
xchg
movsl
mov
sbb
sti
xlat
hlt
push
mov
ficoms
mov
ror
pop
negl
inc
sub
cltd
inc
or
cmp
mov
fwait
imul
mov
push
push
cmp
int3
inc
mov
notl
sub
xchg
push
mov
mov
dec
dec
in
daa
pusha
inc
sbb
dec
in
test
push
jge
aas
cltd
inc
in
bound
lret
xor
or
insl
inc
in
les
iret
shrl
mov
pop
cwtl
cmpsl
sbb
sbbb
aaa
pop
xchg
aaa
mov
pop
pop
imul
xlat
pop
xor
xor
das
jle
sti
rcll
sbb
mov
mov
clc
or
aas
add
push
test
pop
add
lea
movsb
sbb
test
stos
xlat
sub
loop
ret
mov
adc
imul
sub
push
adc
aad
pop
outsl
sahf
adc
sub
jo
jg
cwtl
test
cmpsb
sbb
clc
jne
jp
xchg
dec
lcall
out
push
mov
and
pop
cmp
into
push
mov
sub
nop
in
inc
push
loop
insl
push
ret
sub
and
mov
add
fnsave
jge
fistl
das
stos
sub
inc
cmp
ret
je
xor
loopne
out
cmp
sub
outsb
mov
jmp
sub
sub
popf
sub
out
adc
jns
rcrl
cmpsl
add
mov
insl
pop
mov
push
inc
ret
cmc
fisttpll
xor
push
iret
dec
inc
jmp
in
sub
adc
int
ss
fisttpl
fcomps
mov
cltd
jle
popa
lods
mov
jae
mov
repnz
mov
sub
inc
adc
dec
jb
loope
jl
test
sbb
xchg
cltd
mov
sbb
sub
outsb
popf
shr
outsl
push
lret
xor
adcb
cmpsb
lcall
mov
jnp
imul
dec
stos
jge
insl
mov
fldt
sub
sbb
or
pop
lods
dec
pop
mov
insl
mov
fldt
stos
popf
fwait
in
or
pop
insl
dec
pop
cmp
lea
sbb
lret
leave
cmp
or
pop
sub
add
fwait
insl
cld
push
test
and
xor
shl
ret
aam
xlat
out
mov
jmp
xor
inc
push
addr16
adc
xor
jecxz
in
in
movsb
xchg
xchg
mov
xlat
jle
fs
xor
arpl
and
and
lret
int3
jmp
sti
lods
mov
mov
cmp
xor
sbb
addr16
insl
dec
test
stos
test
jge
popf
ja
pusha
inc
jmp
mov
or
shrl
aam
aam
jae
pop
jo
dec
dec
pop
mov
and
mov
pop
clc
ret
mov
jns
in
popf
rolb
cli
sbb
jbe
fwait
inc
add
mov
mov
and
hlt
cmp
or
mov
xchg
mov
jl
test
inc
mov
mov
mov
ja
push
int3
in
xor
sbb
push
testb
mov
sahf
adc
cmpsb
adc
in
fwait
or
or
das
es
scas
repz
fwait
sub
cmp
hlt
xor
aam
shl
movsb
xchg
mov
mov
dec
push
jp
or
adc
sbb
mov
xchg
mov
loop
fucomip
movb
fs
es
push
pop
jbe
add
popa
dec
hlt
mov
mov
xchg
lret
mov
adc
xor
arpl
fs
add
popf
rcl
ret
mov
les
xchg
mov
mov
push
jae
arpl
and
adc
add
hlt
shl
ret
aam
movsb
adcl
inc
push
jae
arpl
and
adc
add
hlt
shll
rorb
sbb
mov
stos
imul
loop
rcrb
test
les
lcall
sub
insb
add
lret
jne
insb
mov
test
adc
sub
or
lret
aaa
mov
inc
fnstcw
pop
out
mov
mov
fiaddl
cli
std
movsl
mov
out
fdivl
cmc
pop
jbe
loop
xor
je
in
xchg
loop
cmp
push
xor
pop
rcrl
insl
in
gs
xor
lret
sub
data16
lea
js
mov
shrl
pop
dec
and
ss
jl
pop
popa
pushf
test
lods
gs
mov
jmp
pushf
mov
dec
shlb
jae
fadds
aam
sbb
cmp
lcall
enter
fsubp
inc
cmpl
aam
mov
cmp
xchg
jge
jnp
popa
mov
decl
insl
call
and
push
aaa
xchg
pushf
fs
xor
xor
sti
stc
rcrb
or
hlt
scas
maxps
push
push
inc
pop
cmp
pop
imul
out
dec
ret
lea
pop
gs
jae
mov
ror
clc
inc
xchg
jge
mov
mov
out
mov
test
cmpsb
adc
jns
dec
outsb
icebp
fidivrl
clc
push
add
xor
iret
into
das
shlb
jecxz
popf
adc
out
lods
or
adc
dec
adc
cmp
call
push
add
add
nop
sub
inc
xor
test
xor
fsts
shrb
imul
dec
inc
sti
dec
dec
jns
rclb
shlb
mov
ds
mov
ret
xchg
xchg
ja,pn
cmp
dec
int
inc
shlb
mov
sahf
adc
dec
jge
push
jl
inc
xchg
sbb
sbbl
movsl
xchg
push
in
gs
mov
rorl
and
cmp
insb
pop
and
pop
inc
fisttpl
out
mov
adc
jecxz
add
push
pop
jmp
subb
jp
sbb
jnp
sub
rcrb
jle
xchg
bsr
sbb
jge
adc
mov
popa
xchg
adc
xorb
jb
inc
xor
loope
adc
addl
ja
adc
xchg
loope
inc
std
fimull
cmp
adc
ss
sysret
loope
mov
imul
lcall
es
inc
jecxz
push
ds
sub
sbbl
in
int3
sti
popf
push
jno
lcall
push
mov
loope
rcl
mov
shlb
imul
lcall
test
pop
adc
sbb
aad
lcall
cld
in
sub
xchg
mov
cmp
pop
xorb
cmp
mov
jne
je
adc
jp
btr
and
iret
jle
sbb
add
push
ret
jl
loopne
push
scas
insb
pop
mov
jecxz
sub
sub
add
aas
push
push
xchg
shrl
pop
shrb
aad
test
movl
mov
sbb
add
push
adc
sbb
pop
jno
fdivp
mov
icebp
je
inc
je
sub
repnz
mov
push
cmpsb
mov
or
dec
and
cmp
or
mov
lret
pushf
ljmp
jo
xchg
insb
out
sbb
gs
call
mov
inc
stos
pop
rcl
je
mov
ja
pushf
rorb
jbe
and
mov
or
push
jp
lcall
mov
jecxz
out
jl
inc
mov
mov
enter
dec
sbb
and
cmp
leave
faddl
xor
bound
cmpsb
in
cmpsl
dec
stc
fucomi
pop
mov
adcb
lret
sub
ja
popa
mov
fbld
inc
and
es
in
aam
mov
sub
jb
mov
lahf
mov
add
inc
mov
ss
pop
jae
insb
jno
into
ja
mov
mov
inc
xor
dec
aam
push
xor
shll
lock
stos
and
pop
dec
sub
pop
std
loopne
ret
jg
or
jmp
ds
popa
mov
adc
mov
inc
pop
les
and
xor
push
mov
mov
xchg
dec
mov
aas
xor
data16
push
push
into
push
add
xor
jo
jae
xchg
push
inc
inc
movsl
clc
inc
jmp
outsb
mov
xchg
jno
stos
mov
cmp
xor
stc
adc
aam
jae
rol
xchg
adc
orl
lock
inc
ret
lods
push
sub
mov
outsb
jb
xor
mov
out
push
cwtl
or
jb
mov
lahf
fwait
pop
mov
push
adc
dec
mov
roll
sbb
call
xor
sub
notl
push
test
add
push
mov
jnp
repnz
icebp
jo
xchg
or
rorb
daa
push
mov
mov
daa
cmp
mov
lcall
lods
sbb
popa
sub
ja
sub
ljmp
lds
mov
mulb
call
sub
stc
xchg
outsl
mov
adc
inc
xor
push
lods
scas
popf
sbb
iret
or
sbb
and
addl
add
rolw
jg
push
mov
das
loop
or
push
mov
test
in
std
fcompl
in
cwtl
imul
addl
ret
addb
data16
shr
cmpsl
push
push
sub
cld
mov
dec
in
cmp
fnsave
mov
popf
jl
xor
mov
xchg
sub
out
pop
std
ds
xor
jbe
popa
inc
and
push
jecxz
std
jmp
pushf
scas
mov
sub
xor
je
cmp
outsb
cmpsl
dec
outsl
mov
movsl
xchg
lock
cmpb
orl
xchg
add
add
fisttpll
fimull
cmpsl
int
mov
pop
mov
das
ret
test
scas
aaa
icebp
sbb
outsl
cmp
inc
sahf
mov
out
jne
outsl
fimuls
mov
mov
xlat
cmpsb
mov
mov
or
incl
imul
inc
into
popa
test
andb
pusha
cmpl
inc
fisttpll
lahf
pop
dec
imul
imul
push
pop
inc
cltd
push
in
sub
into
cmp
or
jnp
mov
test
dec
dec
repz
and
or
pop
jbe
jno
and
push
and
jae
stos
and
push
push
push
or
fwait
sub
loopne
aad
and
outsl
sub
add
mov
mov
testb
lods
jmp
adc
ss
into
pop
gs
std
in
xor
nop
scas
das
shll
iret
mov
mov
sti
adc
stc
add
xchg
dec
imul
xor
jmp
je
mov
clc
data16
push
mov
lret
arpl
repz
mov
jg
or
and
adc
sbb
jnp
hlt
int3
insl
shr
cmp
jo
int3
arpl
clc
and
jne
inc
jne
aam
imul
add
loop
dec
ss
xor
dec
dec
mov
outsl
cmp
jp
or
fistpll
fs
jmp
sahf
mov
mov
rcll
arpl
cmpsl
dec
out
fs
repz
addl
jns
cmpsb
adc
and
mov
push
out
jo
scas
push
push
arpl
sbb
cmp
out
test
orb
mov
or
int
iret
jae
dec
scas
inc
dec
icebp
adc
outsb
test
addr16
movsl
add
mov
ficomps
push
nop
sti
lret
incb
ret
sbb
or
add
cmp
mov
dec
sub
jae
stc
rcr
push
mov
leave
sub
mov
push
jp
outsb
fidivrl
stos
mov
dec
lcall
sbb
fsubrs
cwtl
add
ficoml
jp
dec
cmpsb
imulb
jae
pushf
rclb
lret
iret
mov
fsincos
push
clc
xor
mov
aam
out
pop
adc
incl
sti
inc
adc
popf
call
cmp
nop
xor
call
in
push
mov
sbb
fsubr
loop
aas
jp
pop
inc
add
in
dec
lock
push
or
adc
xor
xor
pop
mov
pop
xor
cmc
aad
push
dec
fwait
mov
dec
xchg
sti
pop
pushf
pop
push
outsb
sub
iret
shlb
jno
push
dec
out
mov
sub
decl
fprem1
mov
add
push
pushf
xchg
aad
sbb
xchg
int3
dec
xor
repnz
mov
lahf
in
lcall
pop
pop
and
addb
imul
mov
pop
mov
dec
and
stos
jne
imul
mov
lock
into
sti
aaa
mov
or
repz
cmp
cmovle
mov
jo
leave
pop
popa
cmpsb
popa
pop
sub
lret
jecxz
les
mov
xchg
mov
adc
mov
ds
push
movsl
xchg
xor
push
pop
jl
or
out
jge
ret
push
popf
cli
scas
inc
rcrb
mov
fisubrl
sbbl
fs
push
cmp
inc
cmp
pop
dec
xchg
add
rolb
mov
outsb
mov
cmp
lret
daa
cmc
lcall
jb
pop
and
mov
movsl
mov
inc
inc
int3
lock
fs
xor
xchg
xor
push
bound
cmpsl
jmp
adc
adc
adc
pop
into
icebp
sbb
insl
ds
jns
adc
jbe
xchg
jmp
cld
mov
mov
fildl
xchg
cmpsb
cmpsb
test
ficomps
outsb
dec
out
out
out
mov
xor
push
mov
dec
and
test
or
mov
jbe
daa
test
movsb
mov
test
test
push
mov
add
scas
bound
adc
adc
sbb
imul
imul
mov
pop
mov
jg
and
je
mov
cli
ret
mov
loopne
sub
mov
push
xor
mov
push
arpl
xchg
loopew
jp
mov
lret
js
insl
push
aaa
mov
int3
pop
push
jg
in
aaa
sbb
stos
dec
jecxz
xor
or
movsl
lar
mov
add
adc
lret
jo
push
sarb
insl
iret
push
jl
push
dec
inc
daa
notl
aad
xchg
leave
xchg
out
sbb
lret
push
jnp
stc
inc
xchg
xor
pop
xor
pop
push
lods
ljmp
push
ljmp
int3
xchg
gs
xor
and
jns
js
pop
dec
and
inc
les
stos
push
xor
dec
out
adc
pop
mov
push
xor
inc
push
dec
sub
xchg
fisttpll
or
sub
inc
int
flds
adc
inc
mov
pushf
fcomp
mov
fidivrl
add
push
sub
jae
cmp
fsubrl
outsl
pusha
sti
mov
mov
nop
repnz
dec
xlat
mov
push
cmc
lock
rolb
fbld
decl
sub
imul
fisubs
int3
jg
mov
sbb
adc
das
fimull
push
lea
test
mov
xor
pop
jmp
lahf
add
adc
fisubrl
aaa
cmp
dec
sbb
jbe
mov
repz
adc
sbb
mov
push
or
jns
out
xor
xchg
scas
outsl
leave
adc
sbb
add
xchg
mov
xchg
fldl
imul
mov
mov
xchg
lea
cmp
cmp
mov
stc
outsl
fdiv
cmp
jae
lret
stc
aad
dec
and
pinsrw
jecxz
add
sbbl
lea
jmp
adcl
lcall
jne
gs
cmc
mov
mov
and
mov
mov
ljmp
outsl
movsl
divl
shr
mov
sub
xchg
shlb
xor
fwait
and
pop
aaa
jmp
jae
out
adc
and
leave
mov
orl
rcrb
scas
push
lahf
cmpsl
xorb
push
jne
pop
add
stos
repnz
jb,pt
push
loopne
pop
and
xor
jo
loope
mov
sub
lcall
dec
int
popf
int3
push
cld
xchg
xchg
sub
addr16
or
out
xchg
push
xor
daa
inc
cmp
inc
loop
inc
push
xchg
push
stc
rolb
rorb
pop
cmpb
ljmp
mov
in
jle
sbb
xor
jl
mov
int3
mov
and
roll
lret
jne
lahf
cmpsb
xor
addr16
push
inc
jb
lret
adc
xchg
push
or
cmpsb
sbb
fstpt
addr16
mov
jmp
jmp
repz
cmp
cmp
or
fdiv
xchg
or
loopne
push
fdivrp
jecxz
inc
jno
push
pop
mov
jecxz
xchg
pop
dec
jg
or
cmp
aam
lds
mov
cmp
adc
lret
adc
imul
cltd
sbb
and
movsl
fidivs
insl
push
mov
inc
rcl
gs
ds
das
imul
lcall
stos
fldt
scas
or
fbstp
dec
dec
adc
push
int
xor
pop
dec
pop
and
mov
in
dec
pushf
inc
lds
jbe
pop
mov
out
lods
lods
in
data16
inc
push
sub
pop
ret
cmp
inc
pop
loopne
shrb
stos
shl
mov
fisubrs
stc
jl
imul
push
push
push
aas
mov
or
add
dec
fisubl
inc
imul
test
dec
int
das
std
adc
les
mov
das
mov
lods
lret
outsl
sub
mov
push
ljmp
xchg
mov
mov
pop
addr16
inc
aad
xorb
ret
adcb
or
xchg
shlb
cmp
inc
aas
lock
fildl
andps
dec
movsb
roll
jo
cld
and
dec
pop
scas
fstpt
rcll
xchg
popa
and
cmp
fildl
jo
stc
daa
push
jge
ljmp
xchg
stos
icebp
loope
fwait
pop
push
or
xor
xchg
xor
mov
and
loop
stc
dec
jae
pop
mov
stc
loop
ficompl
sbb
ret
into
push
enter
ljmp
inc
fcoms
bound
sub
addr16
test
xor
cmp
imul
insl
aaa
cs
mov
ret
pushf
ljmp
mov
pop
pushf
imul
dec
pop
in
jns
push
fstps
inc
add
pusha
insl
mov
mov
and
lcall
mov
sbb
inc
js
nop
and
or
pop
js
or
jne
xor
hlt
push
push
or
xchg
jmp
add
outsb
dec
jne
adc
push
or
scas
jl
dec
xchg
mov
fs
repz
jge
sub
inc
cmp
dec
jp
dec
lds
or
add
adc
dec
mov
pop
js
adcl
stos
mov
sbb
add
std
imul
test
test
push
out
scas
jbe
inc
push
jne
stos
mov
bound
shrl
jo
adc
mov
adc
mov
repz
jmp
and
mov
mov
push
outsb
imul
mov
or
jmp
pop
xchg
xlat
fldt
call
cmp
push
jl
stos
int3
or
stos
call
das
movsb
loopne
sub
xchg
xchg
xor
lods
lahf
sub
mov
push
loopne
fstl
call
lods
into
adc
pop
lods
push
adc
dec
pop
sbb
or
mov
nop
lock
out
pop
or
daa
dec
mov
pop
mov
ja
popa
adc
cmp
cmp
imul
sar
ja,pn
nop
ljmp
popf
aaa
lret
stc
in
jmp
mov
sbb
fmul
mov
sub
insl
or
test
mov
jno
aas
movsl
mov
sub
loop
jno
fdiv
adc
fcoms
pusha
mov
pushf
cmp
xchg
jmp
popf
sub
jo
mov
jo
loope
cmp
or
rcll
aad
and
icebp
movsl
ds
pop
jbe
mov
sbb
xor
cli
test
les
stos
cmp
sbbb
xor
add
xchg
repnz
xor
xor
insb
stc
clc
mov
loop
mov
pop
mov
or
cmp
scas
orb
scas
cmp
cmc
test
pop
and
enter
ret
mov
sub
xor
or
pop
cmc
nop
js
pop
dec
push
out
fldl
shlb
xchg
out
movsl
pop
bnd
mov
in
mov
testb
xchg
pop
adc
aam
sbb
mov
in
aam
insb
lcall
leave
xchg
xchg
mov
lods
jle
cld
cli
mov
ret
jne
cmpsl
rorb
imul
jne
arpl
push
lods
xchg
lcall
out
push
dec
mov
popa
sbb
addr16
push
xor
nop
cwtl
push
and
lret
lds
std
push
and
sub
lahf
inc
xor
pinsrw
jbe
and
xor
out
mov
cltd
ret
push
push
ljmp
int3
and
ret
ss
sub
pushf
sub
xlat
aam
das
pop
mov
push
push
cmpsl
testb
nop
xlat
jge
mull
cld
cmp
mov
mov
push
movsl
fidivl
sbb
jmp
inc
mov
nop
lahf
pop
jo
or
jle
mov
fldcw
inc
xchg
push
cld
xor
mov
xor
mov
pusha
mov
scas
xchg
jge
pop
xor
andb
cmp
pop
inc
and
mov
xor
icebp
adc
repnz
sub
sar
test
adc
call
int3
imul
movsl
andb
out
sbb
push
ficoml
inc
fmul
aam
jmp
jb
loop
adc
dec
mov
mov
je
ss
inc
mov
decb
iret
loope
ljmp
les
iret
xor
cmp
test
shrb
ja
mov
inc
es
cli
push
das
dec
stos
mov
inc
jge
movsl
lret
push
jns
std
push
stc
mov
lret
into
into
stos
sbb
sbb
pop
jmp
jl
xor
shll
sub
lret
inc
es
pop
mov
cli
sahf
rclb
mov
into
xor
icebp
jl
clc
mov
out
outsb
push
call
pop
cmp
mov
xorb
and
xchg
and
cmp
sahf
dec
imul
lods
dec
sbb
imul
icebp
sub
lods
add
out
push
sub
xor
or
sub
add
rolb
jge
jo
movsb
imull
pop
ss
lea
push
xchg
insl
jge
daa
dec
iret
jl
arpl
inc
fbld
or
loopne
mov
lret
loop
fdivrs
fmull
sub
sarb
lds
icebp
cltd
roll
test
jmp
sahf
xchg
jmp
iret
jmp
push
cwtl
loope
ja
xchg
orl
jnp
jge
xchg
fsub
adc
xor
repz
xchg
add
fwait
loopne
mov
mov
jle
sbb
out
mov
loop
sub
inc
or
pushf
jle
inc
shll
push
add
cmc
mov
sub
nop
cmp
push
mov
fs
daa
mov
ljmp
jg
mov
shl
xor
das
adc
rorl
mov
mov
and
adc
jae
fildll
xor
add
pop
fstpl
mov
jns
jne
adc
sbb
or
vpaddq
fwait
xchg
xchg
rcl
cltd
dec
sub
mov
dec
sub
push
xchg
pop
arpl
data16
or
or
dec
mov
pop
dec
mov
test
mov
xchg
out
jge
sub
xor
pop
jne
sub
jecxz
and
addr16
inc
fisttps
adc
mov
and
jmp
xchg
std
es
inc
lcall
sub
andb
mov
into
out
out
mov
push
into
out
faddp
jno
or
push
lds
pop
lcall
lock
outsl
adc
stos
rcr
push
mov
sbb
or
mov
push
fistpl
repz
movsb
adcl
inc
push
jae
arpl
and
adc
add
hlt
shl
ret
aam
movsb
adcl
inc
push
jae
arpl
and
adc
add
hlt
shl
ret
aam
movsb
adcl
inc
push
jae
addr16
and
adc
xor
loop
movsb
adcl
arpl
jae
adc
fwait
lods
jl
dec
sti
pop
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
mov
adc
cld
movsb
stos
jns
xor
or
pop
add
add
add
add
add
add
add
add
add
mov
add
add
add
and
or
inc
add
add
add
or
lock
add
add
mov
add
add
add
lret
add
add
add
add
add
add
add
lcall
add
test
loopne
sahf
add
add
add
add
add
add
add
sahf
add
add
add
add
xor
dec
add
add
xor
sub
dec
add
and
out
add
test
test
insb
add
add
ss
or
add
add
testl
xor
sahf
add
or
jbe
push
add
add
add
inc
add
sub
add
add
add
xor
ljmp
add
or
gs
add
int3
add
add
add
add
incb
or
fiaddl
jbe
push
add
or
add
add
add
popa
add
add
add
add
add
test
outsl
add
add
add
push
add
add
aam
lret
add
add
inc
add
add
pop
add
add
add
add
add
testl
mov
lea
hlt
add
add
add
add
add
jbe
jbe
jmp
or
add
add
lds
insb
add
inc
add
add
and
xchg
push
add
add
add
add
push
add
fiaddl
jbe
add
add
add
add
into
add
add
add
add
add
add
add
add
add
add
add
add
add
stos
add
add
add
xor
pop
add
add
add
add
add
add
incl
inc
add
add
mov
add
add
loopne
push
add
add
and
in
add
add
push
add
add
mov
add
add
ljmp
add
or
outsl
add
dec
add
add
add
add
inc
add
popa
add
add
add
push
add
add
add
add
loope
adc
add
add
add
add
add
add
add
add
arpl
sahf
add
add
add
add
add
add
or
clc
add
add
add
test
mov
add
add
test
mov
add
add
dec
add
add
dec
add
inc
add
add
loope
adc
add
dec
add
add
add
add
add
add
cmpsl
add
add
dec
add
inc
add
add
add
add
dec
add
jbe
inc
add
add
add
add
add
les
xchg
add
add
add
add
add
add
inc
add
add
push
add
add
add
add
dec
add
add
jg
jno
je
dec
addb
cmp
xor
out
loope
sbb
adc
xor
mov
jo
cmp
or
shlb
lahf
xchg
in
dec
push
dec
pop
fidivrl
cmp
cltd
sbb
nop
jge
cld
movsb
mov
add
enter
jmp
jg
fnstcw
push
pop
clc
shr
jbe
mov
jmp
mov
adc
popf
pusha
or
xchg
mov
push
inc
push
jl
jmp
sub
sub
iret
or
push
cwtl
sub
mov
in
lret
out
fistpll
scas
jb
shlb
mov
into
insl
add
mov
inc
jnp
add
lods
pop
flds
loop
inc
sbb
inc
pop
in
stc
imul
push
mov
add
sbb
cmp
and
add
dec
lret
cmp
or
push
xor
andl
pop
xor
sbb
xchg
sub
addr16
repz
sbb
inc
out
xlat
roll
push
out
popa
or
js
mov
xor
lea
popf
inc
xchg
es
dec
out
mov
sbb
insl
or
mov
call
in
test
pop
adc
enter
lods
push
into
scas
jbe
pop
int3
push
rcrl
sbb
mov
pop
in
ficompl
aaa
jae
dec
or
inc
mov
dec
icebp
sbb
mov
int
mov
xlat
xor
sub
push
adc
push
dec
sub
jnp
fisttpll
pop
mov
xchg
sbb
dec
pop
popf
xorb
int
jbe
mov
rclb
test
insl
insl
addb
jg
sub
scas
fisttpl
scas
sub
cli
pusha
pop
int
mov
shlb
arpl
mov
mov
cld
or
mov
add
mov
inc
sbb
push
push
pop
inc
mov
sub
lock
sbb
cltd
inc
jnp
pushw
jmp
inc
cmpsb
pop
add
imul
pop
mov
dec
push
ret
in
insl
jae
js
das
les
fwait
sub
out
push
loopne
cmp
mov
xor
jbe
repz
lret
daa
pop
inc
sub
jp
lds
add
movsl
mov
mov
mov
sub
push
out
and
loopne
jno
or
aad
add
pop
mov
xor
aad
shrb
sub
cmpsl
xchg
mov
pop
jns
push
jg
or
loop
mov
push
jp
dec
mov
mov
adc
in
mov
fisttpl
and
popa
dec
jno
movsl
hlt
xchg
or
xor
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
