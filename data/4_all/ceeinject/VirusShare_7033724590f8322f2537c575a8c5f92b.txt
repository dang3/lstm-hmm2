call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
jecxz
push
data16
sahf
push
loopne
xchg
pop
mov
jb
lods
push
cmpsb
push
xchg
jle
dec
pop
cmpsb
ss
push
out
jbe
data16
push
fisubrs
mov
cmpsb
and
sbb
dec
pop
je
loopne,pt
mov
incb
loop,pn
es
mov
test
jg
dec
movsl
and
out
jb
addr16
arpl
mov
xchg
aam
insl
mov
cmp
or
outsl
lea
bound
stc
mov
test
ret
pop
icebp
imul
mov
pop
scas
jg
dec
push
mulb
lahf
mov
mov
mov
xchg
loopne
xchg
add
add
jmp
es
push
out
bound
push
iret
xchg
fmul
cmp
insl
inc
push
imul
imul
mov
jno
pop
stc
adc
mov
out
xchg
outsb
icebp
icebp
jbe
jbe
pushf
jle
push
test
dec
sub
mov
arpl
push
xchg
dec
es
inc
in
testb
push
in
jmp
jle
or
dec
lods
popf
mov
repnz
out
jbe
data16
push
data16
mov
push
xchg
add
dec
into
cmp
fdivl
enter
lock
rorl
add
jg
pop
xor
pop
mov
mov
mov
ss
leave
gs
push
and
xor
aas
lods
jne
xlat
jg
imul
mov
mov
pop
mov
inc
jp
push
cmp
data16
push
fiadds
mov
cmpsb
push
xchg
push
xchg
jle
dec
pop
scas
ss
push
out
jbe
data16
push
fiadds
mov
cmpsb
push
xchg
push
xchg
jle
dec
pop
scas
ss
es
mov
mov
fsubrl
pop
rcll
adc
pop
and
pop
cmpsl
jns
in
jns
leave
test
dec
pop
int
cmpsl
xor
inc
in
xchg
fsubs
xchg
or
cld
xchg
gs
shr
dec
fdivs
sbb
push
repz
jb
lods
loope
incb
sub
cmp
cmpsb
mov
out
mov
add
pop
xchg
inc
pop
dec
lcall
mov
ljmp
mov
mov
mov
outsl
xor
ret
shlb
lock
inc
dec
clc
vmovsd
adc
push
push
test
and
adc
cmp
and
xor
faddp
aam
mov
out
rolb
dec
sbb
icebp
stc
outsb
stos
out
push
mov
cltd
mov
push
iret
and
loop
lock
xchg
shlb
cld
xchg
shll
test
fsubrl
lock
sar
add
mov
push
cld
in
mov
mov
jno
xor
jle
mov
lock
add
dec
xchg
mov
jb
repnz
in
rcr
ret
pop
lods
xchg
push
fs
test
fcmovnbe
ljmp
in
add
sti
dec
cs
mov
clc
jp
or
add
ja
jl
mov
bound
add
xorl
dec
push
push
incb
aad
jne
fcomps
in
mov
dec
push
or
inc
push
adc
jecxz
ret
das
rcrb
sub
mov
clc
pop
pop
gs
jne
fcmovnu
outsl
int
adc
leave
cld
fists
mov
mov
pop
mov
dec
mov
xchg
jno
or
and
mov
jb
fwait
loope
insb
inc
xor
push
test
cwtl
cmp
sahf
inc
add
roll
icebp
cwtl
out
sbb
test
mov
insl
jne
mov
or
fildll
xchg
xchg
jns
inc
pop
aad
jb
mov
inc
inc
push
aas
push
daa
iret
push
out
and
paddsw
repnz
adc
inc
sub
lea
pmaxub
mov
enter
mov
lods
jg
push
int3
push
int3
lods
inc
push
lds
mov
repz
jne
inc
jg
shlb
dec
dec
xchg
adc
lea
xor
or
dec
ja
test
add
xchg
cmc
dec
jns
mov
mov
repnz
cmp
sub
pop
push
sbb
lods
jecxz
and
aas
fstpt
in
cmp
sbb
nop
mov
out
ja
adc
xchg
push
cld
xchg
shll
dec
pop
jns
mov
jno
adc
mov
mov
ja
cmp
and
sub
ret
in
push
dec
add
jmp
ss
std
loope
adc
imul
cli
push
stos
icebp
cwtl
and
lret
push
mov
decb
or
daa
stc
push
out
pop
push
out
pop
pop
out
mov
mov
das
pop
inc
ret
dec
sbb
loope
inc
inc
int
mov
stos
test
dec
mov
mov
scas
dec
call
lods
pushf
xchg
adc
adc
mov
in
xchg
sbb
adc
push
push
mov
and
sub
outsl
shrb
push
lock
sub
mov
mov
and
dec
ffree
stc
mov
repnz
mov
mov
push
mov
add
clc
pop
std
mov
mov
fldenv
xor
loopne
lds
inc
xchg
ljmp
int
mov
jo
jmp
fwait
scas
inc
xchg
inc
rorl
aas
je
mov
xchg
lods
jge
shlb
enter
xchg
dec
je
mov
sub
int
adc
or
sub
fstl
mov
mov
lods
outsb
dec
xor
push
cli
inc
lods
movsl
clc
mov
ret
loop
cmc
pop
xor
mov
sbb
into
addr16
lods
in
push
and
add
xchg
addr16
fwait
pop
push
sbb
mov
mov
sbb
mov
mov
jbe
shl
data16
scas
loop
inc
jns
das
sti
xor
xchg
lds
push
mov
or
out
add
ljmp
aad
bound
pusha
xchg
cmp
stc
lods
orl
sbb
sbb
jne
cld
gs
in
dec
add
jg
jnp
sbb
and
push
sub
adc
xor
pop
test
mov
mov
mov
pop
xor
pop
stc
add
mov
xchg
mov
mov
aad
xchg
lock
in
adc
push
mov
cmpb
xor
ljmp
stos
and
data16
movsb
movsl
stos
mov
ret
sahf
add
mov
call
xchg
jmp
nop
ja
addr16
repnz
js
or
sbb
clc
fistpl
lea
mov
xchg
daa
shlb
in
lods
pop
daa
mov
pop
ja
add
cmpsb
mov
jmp
hlt
inc
loope
or
idiv
test
roll
ja
ret
mov
ret
inc
cli
pop
inc
lcall
lcall
into
in
jns
aam
call
xor
lods
js
aam
sbb
mov
data16
movsl
and
hlt
cltd
stc
fidivrl
mov
cmpsb
mulb
lods
push
mov
push
inc
repz
nop
cmp
aam
pop
adc
jge
add
stos
adc
ja
xor
xchg
push
in
jp
jmp
ss
fsubrl
imul
xchg
mov
add
ss
jle
or
pop
iret
repnz
loope
mov
fistpll
fwait
xor
les
push
and
mov
pop
fldenv
push
cmp
hlt
fbld
imul
fnsave
sti
inc
pop
mov
in
popa
inc
das
cli
stc
sub
or
xlat
nop
dec
push
mov
or
sbb
xchg
sub
aas
sahf
mov
cltd
cmpsl
cmp
test
sbb
mov
fwait
mov
push
add
xchg
xor
or
push
es
add
out
scas
ljmp
cmpl
push
cmc
dec
ljmp
testl
mov
leave
fcmovbe
lahf
pop
mov
sbb
adc
push
cmp
aaa
pop
rorl
mov
push
pop
pop
popa
fists
insl
mov
cmpsb
bound
daa
sti
xor
mov
inc
mov
mov
push
movsb
icebp
adc
or
lret
push
inc
lods
cmp
jecxz
push
pop
cli
mov
or
mov
add
jp
inc
add
dec
sbb
in
data16
mov
and
stc
mov
addl
sub
xlat
cmp
nop
popl
jecxz
sbb
enter
sbb
mov
insb
daa
sub
and
cmp
cmp
outsb
mov
outsl
fwait
xchg
dec
add
mov
sbb
in
pop
xchg
mov
out
jnp
pushf
mov
and
add
scas
adc
xchg
xchg
mov
addr16
cmp
xchg
ret
sub
mov
outsb
shlb
push
inc
sbb
and
popf
xor
dec
cmp
test
mov
inc
aad
sub
cmp
mov
std
mov
or
sub
adc
in
pop
outsl
rorb
inc
sti
jae
lahf
out
fistpl
mov
mov
xor
cmp
push
mov
xor
push
adc
ret
mov
into
int3
mov
sahf
xor
pop
cmpsb
cmc
inc
or
lock
push
mov
repz
imull
fisubrs
jo
leave
add
sub
cltd
adc
ds
add
mov
jp
bound
pop
arpl
lret
push
jb
inc
ds
lock
lahf
sahf
add
xor
xchg
aam
cli
push
lds
lds
pushl
add
lea
push
sbb
mov
ds
enter
stos
addr16
sub
mov
add
jl
es
or
sub
jl
jbe
hlt
mov
mov
pop
jne
xchg
fstl
xlat
test
dec
sbb
arpl
lods
cwtl
stos
fbld
vmovupd
pop
shrl
xlat
jno
rcr
lret
fdivp
mov
ss
jg
dec
inc
pop
mov
and
or
or
imul
sbbl
xchg
add
gs
push
ss
psadbw
mov
dec
pop
inc
jo
mov
enter
into
cmpsb
and
rcll
add
pop
xchg
lods
push
mov
loopne
out
cmp
sar
adc
mov
adc
and
jecxz
fistps
clc
and
ss
into
mov
jo
rol
and
jbe
emms
jg
mov
aad
and
scas
mov
imul
stc
jae
mov
fistl
adc
das
dec
xlat
lds
cltd
add
fidivrs
shrl
jl
idiv
add
stc
mov
mov
mov
xor
fwait
jno
jo
out
ja
imul
fsubrs
ret
xchg
fwait
lock
adc
fiadds
add
sbb
mov
jl
arpl
out
std
js
in
sbb
insl
adc
nop
xchg
jo
sqrtps
or
adc
mov
cltd
shrl
iret
ret
add
out
xchg
cmpl
ret
add
push
adc
das
notl
and
es
cmpsb
jbe
cld
inc
pop
lds
jae
aas
adc
push
xor
mov
cli
push
call
mov
popa
dec
int3
dec
out
add
movsl
negl
lods
cmc
enter
inc
scas
pop
cli
shr
lcall
sub
imul
idiv
sub
push
ja
cmp
cmp
pop
cltd
dec
push
jl
pop
jp
add
sbb
xlat
pop
pop
es
inc
aam
ja
loop
hlt
adc
cmp
push
lret
mov
cmpsl
outsb
cmp
mov
jb
cmp
in
xchg
push
leave
adc
add
imul
adc
lods
adc
xor
fnstenv
xchg
idivb
call
jl
mov
and
add
xor
push
cli
test
mov
add
sahf
cmp
xchg
xchg
cmpl
sbb
push
mov
fnstenv
pop
jno
gs
das
and
das
pop
pop
sub
js
dec
jae
xchg
mov
inc
loopne
fisttpll
out
jne
xor
lahf
mov
mov
fmull
dec
or
test
adc
loop
mov
or
sbb
imulb
hlt
pop
xor
fsubrl
incb
in
or
decl
repz
lahf
mov
mov
addr16
adc
mov
jne
mov
fidivs
cld
cmp
xchg
push
mov
cli
cmp
cmp
xor
std
add
mov
lea
jmp
cs
lods
xchg
pop
add
bound
push
sub
jne
and
sbb
aad
mov
xchg
jns
or
inc
mov
fadds
aaa
dec
lock
jmp
cld
adc
adc
mov
xchg
hlt
loop
rcr
cmp
pop
test
dec
hlt
push
movsb
mov
mov
loope
jmp
jmp
insl
lds
test
sbb
mov
sar
sahf
ljmp
movsl
es
pop
aam
aas
in
mov
lods
hlt
fadd
stos
jge
jmp
inc
jb
data16
xchg
or
rcrl
pushf
sbb
je
jmp
adc
movsl
dec
mov
icebp
out
nop
ss
lahf
jbe
xchg
mov
out
stos
int3
xchg
pop
int3
in
scas
dec
push
dec
out
mov
vmptrst
mov
add
and
adc
sbb
mov
out
aaa
fcomp
cs
dec
dec
mov
pop
sbb
dec
jo
dec
test
inc
roll
hlt
push
popa
or
stos
mov
xchg
push
sbb
js
inc
add
pusha
add
and
push
adc
loopne
cwtl
lock
ja
push
jg
mov
push
lock
dec
fdivs
adc
test
cmc
xchg
mov
jo
cmpsl
add
cmp
or
push
je
inc
int
lahf
mov
sbb
call
shlb
adc
ret
imul
jge
es
mov
sub
daa
adc
hlt
push
pop
fisttps
xchg
mov
mul
cmp
mov
fnstcw
rcrl
in
movsl
imul
mov
mov
clc
pop
iret
fildl
jmp
push
xchg
sbb
xchg
inc
dec
xchg
jnp
fidivrs
jne
dec
lcall
adc
imul
push
in
cli
push
sbb
jg
lods
add
xor
stc
out
movsl
dec
mov
inc
mov
push
je
mov
or
adc
mov
cs
xor
pop
icebp
cmp
or
in
es
cmp
clc
pop
repz
hlt
addb
or
jecxz
fidivs
sub
mov
popa
xor
aam
sbbb
test
and
xchg
pop
hlt
inc
mov
aad
aad
andb
and
scas
push
pop
inc
mov
mov
repnz
add
je
jmp
jg
imul
ljmp
push
loop,pt
test
cmp
jmp
arpl
imul
cs
pop
jae
cmp
aad
mov
fs
rcll
pop
out
or
or
sub
insb
inc
cs
aas
sbb
into
js
lds
ficomps
jno
clc
test
nop
mov
cltd
fmull
adc
sbb
cmp
lods
les
lret
insb
xor
and
pop
mov
push
sahf
adc
pop
sbb
and
mov
ja
and
lds
and
cmpsl
jno
fldenv
fisubrs
test
jge
lahf
ffree
cmp
into
mov
pop
add
dec
mov
dec
into
jl
add
mov
outsl
xchg
push
mov
stos
rcrb
xchg
sub
jp
repz
sahf
loop
sub
xchg
outsb
into
cmpsb
ljmp
ja
push
inc
sbb
daa
inc
fistpll
dec
jg
popa
lods
mov
jle
arpl
in
cs
mov
fcmove
adc
sub
mov
popw
cwtl
jnp,pt
mov
ret
lret
xchg
jp
es
fcmovbe
cmp
mov
lods
movsl
imul
push
ror
inc
int3
xor
sbb
sub
push
in
adc
adc
dec
cltd
sbb
or
pop
pop
mov
adc
jmp
mov
insl
ret
jle
adc
xchg
pushf
pop
mov
inc
push
fldenv
sarl
pop
xlat
jl
repnz
imul
xchg
mov
or
dec
mov
xor
inc
dec
pop
xchg
jmp
sahf
aas
adc
dec
imul
andl
pop
push
mov
pop
push
or
lea
daa
std
sbb
pushf
les
sub
xor
adc
insb
imull
scas
andl
repnz
imulb
div
jbe
cmp
xor
xor
scas
cmpl
mov
fwait
push
scas
mov
lahf
xor
dec
loopne
test
std
xchg
test
inc
inc
lods
sbb
xchg
lods
sub
mov
dec
cltd
xchg
inc
xchg
pop
fs
or
cmp
test
daa
fisttpl
mov
mov
movsl
cmp
mov
popf
or
ja
mov
iret
and
pusha
xor
pop
or
pop
or
cmc
xchg
mov
jno
arpl
addb
xor
ret
sub
pop
jl
aas
test
out
lret
aas
inc
imull
loope
cmp
popf
mov
inc
add
push
fdivrl
or
iret
jg
inc
std
cmp
js
push
or
xchg
add
push
mov
stos
out
xchg
inc
or
fcomps
aaa
fnstenv
dec
cmp
stc
mov
pop
mov
jge
dec
test
mov
dec
daa
mov
es
jae
xor
fstl
push
push
mov
xor
outsb
fs
add
stc
pop
push
mov
ja
imull
pop
das
insb
int
jmp
cmpsb
cmc
mov
aad
dec
add
mov
icebp
scas
add
ret
in
jle
mov
in
xor
lahf
negb
stc
repnz
push
pusha
rcrl
cli
out
push
push
bound
add
xlat
xor
test
pop
lret
push
out
or
mov
xchg
cmp
mov
cwtl
inc
push
aaa
xchg
mov
cmp
iret
imul
xchg
jecxz
cmpsb
cmp
mov
in
adc
outsl
and
xor
sbb
and
out
cwtl
sbb
adc
mov
xchg
ss
sbb
add
leave
in
lret
push
inc
mov
dec
cs
roll
jp
jmp
clc
xchg
xchg
mul
sbb
xlat
push
pop
aam
push
imul
push
fucom
adcl
popf
mov
pop
repnz
and
dec
push
arpl
add
and
push
fsubr
scas
sbb
mov
push
mov
cmp
ljmp
xor
mov
aas
aaa
push
cmpsb
push
test
dec
mov
andb
or
push
incl
call
nop
pop
mov
stc
jns
jb
sbb
push
popf
pop
ficoms
fmull
dec
ficoml
loop
mov
fiaddl
gs
mov
cmp
mov
fcmovnu
sbb
cmp
int
and
sbb
cmc
cmp
pop
imul
ficoml
pusha
add
mov
sub
icebp
int
aam
es
call
ds
push
xor
and
or
xor
adc
mov
movsb
mov
or
rorl
add
jno
xor
ljmp
fcmove
ss
and
xchg
jle
mov
fcmovnb
xchg
jl
mov
add
xchg
aam
and
std
ds
lods
sub
push
aas
iret
daa
shr
cmp
arpl
lea
jbe
insb
adc
cmc
jge
or
lea
jmp
arpl
mov
test
pop
jg
cli
cmp
jnp
outsl
cmpsb
add
mov
mov
xchg
mov
pop
dec
cmp
add
in
shl
stos
jg
and
mov
jne
jge
scas
in
ljmp
pop
jmp
and
cmc
fisubs
popa
loopne
sbb
movsl
mov
push
sahf
push
lods
enter
mov
and
adc
rcll
icebp
lret
sbb
aaa
movsl
xchg
bound
jne
aas
in
pushf
jbe
fistpl
rclb
test
adc
xor
pushf
cmp
hlt
gs
scas
cmp
dec
sub
dec
loope
bound
std
jle
mov
pop
pop
adc
and
xor
stc
gs
jmp
inc
lods
or
movsb
jmp
mov
lret
xchg
cmp
add
call
mov
jecxz
mov
imul
jns
xchg
or
jb
and
cmpl
sbbb
cs
roll
dec
inc
ret
adcb
and
mov
imul
cmp
inc
movsl
xchg
sbb
dec
xor
in
mov
fwait
loop
cmp
lds
dec
or
mov
xchg
jo
push
adc
rcr
adc
jecxz
pop
sbb
aaa
adc
loopne
inc
movsl
cltd
mov
xor
add
test
mov
test
sbb
cmp
lahf
jbe
dec
ss
mov
out
fsubl
sbb
pop
cmp
sbb
nop
fnsave
dec
iret
inc
movb
sti
mov
jmp
fs
add
add
int
jno
pop
in
stos
jmp
inc
jecxz
rcrl
mov
ss
std
pop
adc
lahf
leave
or
adc
leave
test
inc
das
push
jle
lcall
clc
dec
add
push
mov
xchg
sbb
bound
je
fcompl
mov
ja
stos
insb
mov
cmp
push
mov
aam
popa
dec
ffree
lods
mov
or
push
into
xor
lock
jae
call
lock
insb
inc
dec
mov
xchg
aad
fdivrs
nop
bound
fildl
lret
mov
adc
jmp
mov
sbb
pop
pusha
sub
jb
push
mov
aas
nop
and
pushf
ljmp
and
xchg
sbbl
or
mov
xchg
fs
push
enter
mov
dec
xchg
lds
or
and
xchg
scas
and
cmpsb
shr
sbb
xchg
ds
scas
es
addb
jbe
data16
push
fiadds
mov
cmpsb
push
xchg
push
xchg
jle
dec
pop
scas
ss
push
out
jbe
data16
push
fiadds
mov
cmpsb
push
xchg
push
xchg
jle
dec
pop
scas
xor
add
jbe
or
sub
sbb
dec
fildll
mov
xchg
ret
mov
out
jbe
data16
pop
xchg
dec
rorl
push
icebp
sbb
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
sti
in
hlt
fcmovnb
lret
aam
call
xchg
inc
dec
push
cmp
xor
add
adc
in
hlt
fcmovnb
lret
aam
movsb
stos
mov
test
je
inc
inc
push
cmp
xor
add
adc
in
hlt
ret
rcl
mov
test
push
add
xor
inc
push
addr16
xchg
test
call
cmovl
std
xchg
sub
popa
sub
cmp
mov
jl
cwtl
ja
xchg
movsb
stos
xor
mov
sahf
adc
cmpsl
push
mov
imul
sbb
inc
add
pop
stc
sub
das
xor
ja
shrl
stc
arpl
xlat
xor
orl
rclb
in
out
addl
fs
mov
fwait
push
outsb
shlb
push
or
push
xchg
sub
sub
cmp
jnp
lods
cmp
mov
xor
add
ljmp
xor
inc
movsl
test
roll
sbb
and
sbb
or
xor
repnz
fcmovnb
lret
aam
movsb
mov
xchg
bound
inc
inc
push
push
and
xor
add
jge
loopne
mov
les
fst
ret
jnp
pop
jne
and
and
addr16
push
imul
xchg
mov
mov
clc
fwait
in
fdiv
cmp
push
or
cmp
xor
sahf
mov
mov
mov
test
je
inc
dec
push
cmp
xor
add
adc
in
hlt
fcmovnb
lret
aam
movsb
stos
mov
test
je
inc
dec
push
cmp
xor
add
adc
in
pushf
sub
pop
cltd
or
pop
lea
out
mov
push
xor
cli
jg
push
mov
mov
jnp
rcl
fwait
aam
jnp
and
insb
mov
mov
push
add
jnp
push
pop
cmpb
push
icebp
cmp
clc
js
add
sub
aad
popa
mov
lds
aam
fnstenv
in
sub
cwtl
and
mov
icebp
dec
pop
adc
mov
andl
fs
shlb
mov
popf
mov
cld
pop
lods
xor
inc
xchg
xlat
fldl
xchg
xchg
aam
mov
in
ret
inc
mov
test
mov
mov
sub
in
out
push
call
dec
pushf
and
mov
test
hlt
jnp
shrl
ds
ret
ljmp
repz
aas
push
jl
dec
mov
jge
rorb
or
sbb
repz
pop
das
lock
adc
mov
in
enter
mov
sti
iret
ret
imul
inc
xchg
or
jo
arpl
push
jns
adc
cmp
in
int
mov
and
xchg
and
mov
scas
std
lahf
dec
sub
clc
sarb
out
stos
clc
jb
push
push
inc
mov
cld
bound
iret
test
cmp
and
int3
js
mov
test
cmc
outsb
inc
mov
loope
cmc
scas
cmc
ja
in
push
jbe
jno
mov
xbegin
mov
cltd
fcomps
int
nop
jmp
dec
jo
int3
add
xchg
push
fs
insl
cmp
pop
pop
das
mov
xchg
aaa
out
inc
hlt
add
cs
enter
inc
movsb
mul
push
cmp
popl
or
cmp
shl
sub
clc
andl
jbe
mov
dec
cmp
daa
dec
jecxz
fadds
cmc
xchg
rorb
pop
lret
subl
push
in
sbb
pop
xchg
jp
ficompl
pop
xchg
inc
push
mov
push
mov
jg
push
sub
cli
mov
push
clc
jmp
incb
test
lods
and
sbb
stos
mov
shll
sbb
test
cwtl
mov
aaa
arpl
add
pop
push
leave
xchg
xchg
sti
jecxz
addr16
xchg
in
pop
xor
repz
inc
mov
loop
push
inc
and
movsl
loop
ret
mov
lea
xchg
in
cmpsl
inc
mov
out
adc
or
jns
test
stos
std
jb
xor
js
ret
fldcw
and
dec
push
push
jecxz
cmpsl
pop
repz
gs
fs
xor
sbb
les
jge
mov
sbbl
enter
lods
jne
hlt
stos
movsl
inc
inc
hlt
pop
in
fisubs
leave
jbe
inc
sub
shl
jo
mov
les
mov
inc
rcll
push
cmp
ja
jge
jnp
push
xor
scas
mov
shl
dec
push
es
push
pop
ja
pop
dec
inc
adc
jns
aas
lock
sbb
faddl
loopne
inc
push
add
jl
and
mov
add
mov
jo
jl
fdivr
mov
add
or
sub
jb
push
jecxz
sbb
stos
add
mov
in
inc
shrl
outsl
mov
leave
loope
jo
sbb
dec
andb
xchg
or
dec
xchg
jg
xchg
push
mov
aam
ficoms
and
ds
shlb
inc
push
es
xchg
cmp
hlt
push
in
sub
lcall
lret
mov
add
mov
add
ret
stc
jnp
repnz
mov
jp
mov
incl
sub
push
jg
push
les
int
sbb
pop
pop
jo
or
or
and
pop
shlb
or
iret
mov
jle
push
cmp
cmp
mov
iret
ja
pop
test
dec
pop
adc
fmul
sbb
iret
cmpsb
iret
xor
dec
loope
dec
pop
inc
pushf
mov
pop
jp
shll
out
mov
adc
or
adc
mov
sub
in
push
pop
fdivl
mov
dec
hlt
lea
repnz
in
stos
out
add
lea
out
sti
lods
loopne
jo
popl
cmp
push
imul
mov
jae
add
push
xor
mov
cmp
out
or
ret
mov
inc
mov
in
add
rorl
sbb
xchg
repz
addr16
in
xchg
scas
mov
push
lret
mov
push
aaa
mov
pop
mov
pop
mov
inc
rorl
popa
adc
sbb
popa
mov
push
xchg
movsb
jg
movsb
push
vmread
push
jl
sbb
sub
xchg
mov
xor
add
movsb
or
mov
or
aad
pop
in
pop
jae
pop
mov
mov
nop
xorl
jae
sbb
aaa
xor
mov
push
inc
rcll
out
mov
pop
jb
jmp
and
shll
or
decl
push
insb
adc
inc
dec
push
push
and
sbb
mov
ljmp
pop
leave
mov
jmp
or
mov
inc
sub
xchg
cmpsb
mov
adc
sub
in
loopne
sbb
in
xor
cmp
cli
stc
lods
ret
pop
pop
sub
xchg
dec
or
and
imul
movsl
push
dec
jnp
add
js
add
fmuls
pop
pop
ss
sbb
inc
push
mov
mov
pop
add
pop
sub
mov
in
mov
mov
jg
sub
pop
xor
into
shrb
mov
xlat
stos
or
mov
and
divb
xchg
adc
xchg
test
lea
xor
xchg
jno
stos
and
fdivl
jbe
adc
jp
mov
mov
stos
in
push
mov
mov
shlb
dec
xor
mov
sbb
test
xchg
ss
or
lods
imul
push
sub
jnp
sahf
stos
sub
popf
das
pop
or
pop
test
sub
ret
add
dec
mov
push
imul
xor
xlat
insl
or
test
cmp
test
push
jl
shll
sbb
loopne
fnstcw
mov
jae
fsubs
roll
jne
ja
sbb
sub
mov
fcoml
arpl
cltd
add
clc
lea
sbb
js
xor
push
lea
out
sarb
outsl
das
loope
mov
sub
mov
sahf
out
pop
lock
mov
addr16
daa
jp
mov
in
mov
sub
bound
jb
push
pop
cmp
xchg
mov
push
cmc
sub
iret
jmp
and
push
lahf
lret
outsl
sbb
pop
orb
popf
cmp
loope
inc
add
mov
inc
xchg
push
jp
sub
cmp
insl
gs
cmp
lret
mov
pop
enter
and
pop
pop
cmp
mov
gs
stc
add
jg
xor
mov
mov
in
lcall
test
adc
insb
push
xchg
mov
and
pop
pop
dec
sbb
imul
fisubrl
dec
and
adc
movsb
inc
fmuls
or
lock
or
fwait
xchg
inc
pop
adc
cmpsl
imul
add
jmp
or
cmp
imul
test
aaa
pop
and
adc
jnp
fisubrs
add
loop
dec
mov
cmp
push
insl
cmp
mov
jecxz
test
test
addr16
std
addl
sub
cmp
jg
pusha
xor
or
xor
rorb
arpl
iret
jg
hlt
cltd
jbe
mov
push
pop
scas
dec
push
mov
fldenv
call
stos
test
adc
out
fcmovnu
stos
xchg
iret
mov
and
jmp
in
fstl
fildl
dec
xor
pop
lcall
pop
push
pop
in
pusha
rcr
in
jns
xor
mov
fstps
inc
sub
push
inc
xchg
out
in
scas
fmuls
sarl
lock
ret
out
mov
or
mov
fists
out
scas
xor
mov
dec
aad
mov
jb
mov
aas
or
cmp
xchg
xor
call
test
rorl
scas
inc
pop
cmpl
lret
int
pop
dec
sub
popf
shrl
inc
push
xchg
ss
push
push
divb
popf
cmc
push
in
mov
sti
lods
ret
sub
adc
inc
shr
pushf
dec
add
test
in
pop
or
inc
roll
sbb
sbb
jnp
inc
dec
repz
and
lret
cmp
sub
dec
xor
xchg
xchg
mov
cmpsl
lcall
push
sbb
fcmove
bound
outsb
add
mov
and
aas
es
dec
in
xor
rolb
rcr
js
or
xchg
mov
push
xchg
mov
hlt
popa
lock
mov
or
add
mov
xchg
repnz
mov
sub
mov
or
ja
or
cmp
lods
imul
mov
stc
pop
jnp
in
adc
pop
sbb
ficomps
lock
or
adc
inc
add
or
lret
sahf
shll
aad
jbe
mov
mov
sarb
push
fists
std
sti
fsubrs
and
int3
js
xor
mov
add
das
jp
fdivrl
xchg
repz
mov
xor
das
push
cmp
adc
test
enter
pop
scas
cmp
push
sub
cli
sub
mov
mov
push
mov
mov
out
mov
rcrb
dec
pop
scas
xchg
add
xor
pop
pop
rorl
sbb
push
sti
xchg
mov
cmc
cmpsl
inc
push
or
cltd
pop
mov
ret
or
add
sbb
inc
mov
aad
lock
ret
jge
cwtl
out
movsl
scas
into
cmp
push
xor
cld
test
sub
or
jbe
mull
cltd
ljmp
fwait
cmp
aas
xchg
mov
sub
adc
in
sbb
mov
ret
xor
and
repnz
sbb
add
xor
push
lock
ret
int3
scas
xchg
sbb
js
or
das
dec
mov
adc
mov
cwtl
xchg
mov
sub
mov
scas
les
lock
xor
in
mov
les
add
mov
pop
stos
ret
xor
or
sub
inc
adc
xor
jge
in
sbb
pusha
dec
inc
push
push
lahf
and
in
inc
and
jmp
push
imul
sarl
adc
cmpsl
rolb
xchg
push
sub
mov
lahf
xchg
and
ret
lret
and
push
insl
xor
or
daa
ret
and
push
pushf
mov
and
sarb
sbb
sub
jg
or
lods
call
push
loope
or
adc
mov
xchg
dec
xor
inc
dec
dec
into
lods
cmp
das
sar
loope
repnz
pop
cmpsl
mov
sbb
int3
test
lret
mov
xchg
enter
subl
mov
cmc
insb
imul
pop
into
adc
fstl
stos
jg
cli
insl
outsl
pushf
xor
push
jg
int3
pushf
shll
xchg
adc
nop
aad
sub
and
vpcomub
dec
rorb
dec
test
xor
mov
lcall
jmp
push
rcll
push
add
cmc
xchg
fsubs
das
cli
lcall
and
xchg
inc
push
pushf
jge
pop
add
bound
fisubl
popf
and
inc
lock
sbb
cmpl
pop
push
lcall
pop
cwtl
add
stos
ret
aam
sub
leave
or
pushf
jne
mov
push
dec
ret
mov
or
mov
je
loopne
subb
insb
cmp
jne,pn
int
lods
xor
cmpb
add
shl
stc
sbb
sbb
cmpsb
fildl
scas
and
xlat
push
mov
jbe
into
push
mov
cmpsl
loop,pn
adc
cmc
je
cmpsb
pop
fidivrl
mov
mov
xor
add
xchg
out
mov
add
push
push
pop
pop
cltd
loope
lds
pop
add
push
cmp
das
les
outsl
sub
shll
aas
jb
fnstcw
aam
inc
push
add
lea
jle
xor
into
cli
cmp
push
push
shrl
cmovnp
sbb
dec
sub
jp
int3
mov
mov
sub
mov
sub
xchg
dec
dec
mov
movsl
fbld
fnstenv
test
xor
pop
stc
test
mov
lcall
fisttps
fsubrs
push
mov
pop
pop
xor
push
int
mov
test
or
fldt
xchg
push
push
adc
jl
and
jae
cld
in
adc
dec
imul
or
inc
cmp
cmc
bound
repnz
cmp
scas
lret
xchg
add
lcall
int
sbb
cmp
and
jns
adc
notb
ja
jmp
mov
in
mov
dec
ljmp
cwtl
mov
movsl
mov
adc
mov
outsb
adc
insb
scas
cmp
push
fwait
mov
adc
fnop
inc
int3
pop
clc
dec
push
movsb
mov
outsl
mov
test
xor
mov
imul
xchg
pop
inc
flds
jo
add
xchg
jmp
lcall
icebp
mul
lock
inc
dec
dec
add
inc
cs
or
daa
or
inc
outsb
lods
add
pop
push
add
loop
dec
push
pushf
orl
loopne
sbb
jmp
jne
das
pop
jno
inc
xor
cmpb
mov
pop
lock
jne
popa
xchg
or
insb
push
je
pop
mov
lods
dec
push
lock
dec
pop
xchg
inc
jae
mov
stos
imul
cld
iret
jo
out
or
in
outsb
popa
and
lods
push
or
dec
push
jns
test
mov
push
test
insl
jmp
test
jbe
xchg
xor
insb
xchg
and
icebp
andl
and
imul
push
adc
mov
adc
arpl
xor
mulb
mov
movsb
xorb
pop
cmp
inc
and
adc
mov
ss
aad
push
js
pop
push
shrb
ss
cld
xor
jle
das
pop
pop
mov
push
repnz
or
jp
into
inc
mov
pop
repz
fidivrl
add
sbb
jo
outsl
cli
test
and
xchg
jecxz
mov
pusha
adc
cmpsl
arpl
dec
ds
cmpsb
mov
mov
lret
adc
sub
fbstp
xor
sub
rcl
das
xor
icebp
push
aas
cli
inc
jbe
push
dec
fbstp
idivb
pop
test
cli
sbb
pop
xor
cmp
mov
pop
mov
mov
pop
enter
inc
idiv
jnp
ja
adc
gs
pop
jle
ja
push
xchg
lods
fs
es
das
jne
jo
sbb
repnz
fwait
mov
imul
xor
shlb
and
int
adc
xchg
adc
aaa
add
push
jnp
test
sar
cmpsb
in
adc
mov
sub
cmp
lahf
fs
sbb
lahf
xchg
fwait
ljmp
pop
into
decl
or
inc
std
dec
mov
mov
add
orb
inc
aam
das
int3
ficomps
push
dec
cld
aad
jo
popa
jae
pop
xor
jge
sar
cmp
clc
sub
inc
fwait
mov
addr16
mov
outsl
sti
mov
mov
leave
in
pop
mov
jbe
scas
subb
icebp
into
mov
repz
sbb
inc
inc
xchg
mov
xchg
movsl
mov
cmpsl
xlat
aam
icebp
repnz
mov
sti
mov
mov
outsb
test
mov
inc
mov
stos
xchg
fisubrl
add
mov
jbe
pushf
add
push
mov
and
jne
mov
cmp
jg
xor
nop
scas
mov
aas
cli
cmc
push
jp
mov
dec
popf
fcmove
jo
lahf
filds
adc
xchg
jb
push
push
hlt
aad
sub
repz
pop
les
xchg
inc
pop
push
jl
in
pop
lods
jg
je
lods
shll
add
test
inc
insl
jl
pop
lret
daa
lret
dec
cli
nop
add
popl
add
repz
shrb
add
push
sbbb
cld
jmp
test
xlat
aam
out
fstpt
adc
sub
jg
icebp
pop
and
mov
mov
add
add
test
popa
bound
addb
mov
les
add
sbb
ds
popw
adc
mov
inc
ds
pop
sub
cmp
sarl
cmp
data16
cltd
and
mov
pushf
jg
imulb
push
push
jne
fnstenv
arpl
push
sub
pop
js
dec
mov
adc
push
pop
sub
push
sbb
xor
xor
cmp
add
test
out
adcb
mov
sub
test
ret
dec
add
dec
push
sahf
sbb
loopne
leave
repnz
mov
dec
dec
adc
pop
test
call
mov
cmp
xchg
xchg
mov
push
rorl
arpl
or
xchg
adc
dec
stc
fnsave
and
mov
imul
int
jle
icebp
mov
mov
mov
mov
aaa
scas
or
fdivs
or
testl
cltd
xor
flds
mov
mov
scas
sbb
mov
lds
es
cmp
inc
aad
jmp
mov
cld
mov
xor
mov
adc
and
adc
in
repnz
cmp
xchg
or
inc
pushf
fwait
or
call
outsl
pop
mov
and
mov
mov
mov
mov
sbb
lods
fildll
lret
sub
cmpsl
cld
sti
outsl
or
jecxz
and
cmp
sti
and
cmpl
loop
pop
ret
xchg
mov
popf
test
sbb
cli
das
pop
dec
and
mov
cmp
push
out
repnz
leave
sbb
sub
in
cmc
iret
push
sub
dec
ret
inc
mov
cmpb
insl
loope
push
lcall
mov
in
mov
push
mov
iret
pop
xchg
dec
xchg
mov
inc
cli
fistpl
jge
push
iret
mov
addl
jnp
out
inc
std
mov
mov
mov
mov
adc
arpl
in
xchg
dec
add
add
and
ja
add
xchg
pusha
in
inc
clc
sbb
pop
sbb
negb
push
pushf
mov
jne
pop
push
fadd
dec
cld
in
lahf
inc
xchg
mov
leave
insl
and
sbb
inc
mov
in
push
popa
and
mov
cmp
pop
push
xchg
cmpsl
xchg
inc
imul
repz
orb
mov
add
enter
sti
lahf
jno
sbb
ret
pop
dec
in
xorb
adcl
and
jge
mov
jns
lret
push
jp
push
stos
jp
test
filds
repz
mov
pop
dec
xor
xor
mov
dec
push
fists
sbb
jge
cmp
cli
scas
sbb
fcmovu
shl
xor
pop
or
jno
fwait
push
call
jns
jne
xor
mov
orl
and
mov
lahf
adc
sub
andl
mov
leave
orb
fdivrp
sub
mov
and
fidivl
test
cs
dec
push
jo
fmul
rorl
jnp
mov
mov
add
shlb
aaa
inc
in
or
or
mov
or
arpl
shlb
push
and
add
int3
fwait
mov
add
roll
mov
loopne
push
xchg
pusha
pop
insb
mov
sbb
fdivr
leave
icebp
mov
movsb
pop
jae
sti
dec
adc
loopne
lret
in
loope
mov
push
andl
jp
jnp
mov
movsl
xchg
add
in
push
mov
or
inc
add
outsl
aas
dec
pop
and
mov
incl
pop
pop
and
ret
aad
lods
scas
adc
ds
mov
movsb
pushf
inc
test
lds
das
fimull
inc
mov
push
and
cmc
fbstp
dec
jecxz
mov
mov
push
mov
push
les
test
pop
int
js
rol
lret
aam
movsb
stos
mov
test
je
inc
dec
push
cmp
xor
add
adc
in
hlt
fcmovnb
lret
aam
movsb
stos
mov
test
je
inc
dec
push
cmp
xor
add
adc
in
hlt
fcmovnb
lret
aam
movsb
stos
mov
test
je
inc
dec
push
cmp
xor
add
adc
in
hlt
fcmovb
lret
aam
movsb
stos
mov
test
xchg
test
icebp
inc
dec
and
lret
in
hlt
jmp
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
testb
inc
and
xor
adc
cmp
je
test
xchg
movsb
mov
les
hlt
data16
adc
and
xor
inc
ss
push
fs
je
test
xchg
cmpsl
movsb
mov
les
hlt
data16
adc
and
xor
inc
ss
push
fs
je
mov
mov
lds
stc
hlt
push
add
pusha
or
fsubrs
addr16
ror
xchg
stos
ret
and
outsl
sbb
push
xor
cmp
xchg
cmp
hlt
lahf
movsb
pop
mov
add
pop
mov
outsb
or
adc
dec
shll
pop
and
mov
cmc
out
cmpsb
push
mov
jbe
add
sti
jbe
and
es
sbb
push
and
mov
add
xchg
in
xchg
sbb
adc
inc
ds
push
fwait
push
and
pop
xchg
or
xchg
add
imul
push
scas
shl
sbb
test
cmp
hlt
cmp
adc
and
xor
inc
ss
push
fs
je
test
xchg
movsb
mov
les
mov
imul
jb
sub
inc
add
mov
inc
std
test
test
loop
cmp
pop
xor
arpl
push
jp
or
mov
fwait
clc
mov
stos
lds
adc
and
sub
push
push
fs
je
test
xchg
movsb
mov
les
hlt
data16
adc
and
xor
inc
ss
push
fs
je
test
xchg
movsb
mov
les
hlt
data16
add
add
push
cmpl
push
inc
decl
xchg
jnp
add
and
aaa
in
dec
ret
and
mov
cmpsb
push
es
jmp
add
ret
adc
push
fsubrl
xor
jge
inc
sbb
dec
shll
outsb
out
mulb
push
out
imul
jae
push
pop
and
push
mov
fidivrs
enter
fwait
sub
js
fsts
xchg
lret
in
sbb
hlt
std
outsl
shll
jnp
repnz
outsl
andb
loopnew
jge
ret
ror
jnp
lahf
aaa
push
dec
jmp
mov
sbb
xchg
loopw
cmpl
rep
mov
inc
mul
aad
mov
stos
mov
lock
fsts
adc
imul
adc
shrl
fdivs
mov
lret
lret
dec
cmp
jp
xchg
lea
or
cmp
jb
cmpsb
xlat
insb
ss
pop
filds
movb
lds
fstps
add
pop
stc
in
lahf
push
cmc
or
dec
push
shll
and
sbbl
fcmovnb
je
mov
pop
inc
lahf
add
mov
loope
ja
mov
lcall
enter
pop
imull
test
cmp
orb
sbb
jns
push
adc
imul
movsl
aam
cmp
js
adc
xlat
popf
inc
lret
mov
popa
fmul
mov
lret
sti
mov
push
popa
mov
push
or
mov
or
push
adc
and
push
inc
or
hlt
out
dec
cmpb
mov
fadds
cld
cmp
lcall
cmp
sarb
inc
xchg
inc
and
repnz
imul
xlat
dec
rcrl
inc
mov
es
pop
out
call
pop
mov
and
xor
lret
mov
inc
fidivs
sarb
scas
cmp
repnz
mov
out
ljmp
xchg
cwtl
inc
leave
xchg
jbe
adc
pop
adc
push
aad
jecxz
push
rcrb
adc
ret
jns
out
xchg
sub
stos
add
mov
ds
fidivs
xchg
je
pushf
adc
or
nop
inc
jg
push
bound
sub
and
sahf
leave
add
jae
int3
jns
shll
mov
or
add
js
hlt
add
popf
pushf
cmc
aaa
jmp
push
enter
popa
outsb
pop
xchg
scas
cwtl
testl
mov
arpl
adc
fwait
sub
mov
data16
and
and
test
in
shrl
dec
push
lods
push
push
or
push
mov
pop
call
into
inc
mov
call
pop
xor
stos
add
dec
std
jnp
fucomp
sbb
mov
mov
fisttpl
cmp
add
and
or
cmp
fs
jecxz
add
sub
jle
pop
test
mov
shll
push
lret
fdivl
scas
sar
cmpsl
das
loop
push
add
cld
inc
dec
inc
dec
rorb
rorl
orb
ljmp
aam
lods
cmp
rcll
out
cs
setl
push
pop
xor
lock
ret
popa
or
ret
cmp
cld
int
cmp
xor
pushf
shrb
mov
clc
lahf
push
push
jno
insb
das
jge
cmpsl
mov
mov
or
pusha
dec
push
mov
mov
xchg
adc
popa
aaa
test
add
xchg
call
insl
mov
pop
xchg
data16
sub
and
cs
stos
aam
addl
aam
sub
in
xchg
mov
das
add
cmp
adc
jo
cwtl
lcall
jp
and
dec
testb
jl
lret
jb
mov
or
aas
sti
inc
xchg
pop
sti
jnp
icebp
lret
push
adc
test
pop
xchg
loop
dec
inc
jecxz
inc
sub
enter
fisttpl
repnz
rcrb
shr
es
scas
rolb
dec
lds
push
jp
stos
mov
fidivrs
lock
or
jp
sub
scas
jnp
and
add
mov
inc
dec
mov
aas
sar
xchg
sahf
push
insl
adc
mov
push
fisttps
das
arpl
lret
cmp
push
jno
insb
loope
sbbl
mov
pop
js
and
mov
mov
mov
aaa
es
scas
xor
xchg
inc
out
mov
push
mov
pusha
in
sub
jne
push
hlt
inc
and
out
sti
enter
out
lods
insb
sarl
daa
dec
mov
mov
push
or
fs
sbb
je
push
shrb
cwtl
mov
ljmp
mov
dec
pop
jbe
xchg
popf
jo
sbb
and
xor
into
int
sub
lret
sbb
add
mov
or
stos
inc
jae
dec
mov
pop
mov
mov
movsb
cltd
lahf
mov
shrl
or
lea
or
imul
pop
xor
push
adc
data16
adc
fdivrl
add
inc
mov
and
inc
int
loopne
pop
mov
in
xorb
rcll
loopne
jns
and
jbe
fdivrl
lcall
sub
add
push
ss
inc
ud2
mov
pop
mov
mov
inc
xchg
or
and
iret
add
ret
insl
cmp
rcll
and
sbb
data16
push
loopne
dec
mov
adc
inc
stos
fadd
mov
lods
fcmovbe
outsb
cmpsl
and
push
adc
mov
or
lahf
dec
cmpsl
enter
pop
cmpsb
mov
leave
ret
aad
pop
mov
aam
push
jbe
push
test
sbb
inc
shll
push
dec
mov
into
xchg
and
fists
dec
shlb
int3
shlb
test
cld
pop
or
sub
divb
loop
imul
shll
push
or
lcall
add
roll
mov
and
or
mov
stos
orb
inc
loopne
or
and
mov
stos
jo
in
ss
fstpl
test
xor
pusha
inc
dec
lock
or
pop
push
call
cmc
jp
fbstp
pop
aaa
cmp
xor
xlat
test
xchg
mov
outsl
pcmpgtw
insl
dec
test
mov
aad
push
cltd
lahf
loop
sub
aam
je
push
and
pushf
push
insl
sbb
mov
mov
mov
pop
repnz
outsb
jmp
test
scas
lods
lea
test
movsb
mov
or
xchg
mov
outsb
repz
sarl
das
stc
lret
jle
jb
adc
stc
lret
adc
insl
mov
dec
pop
jl
int
jp
sarb
mov
or
jg
das
or
call
scas
fadd
mov
adc
lcall
insb
imul
subb
cmp
movsb
clc
push
push
xchg
test
pop
cld
ret
test
and
add
xor
idiv
mov
xchg
dec
das
mov
shl
mov
ds
aas
push
test
push
loopne
lock
enter
fmulp
sub
in
sub
out
test
insb
dec
xchg
sbb
xchg
xor
push
fbstp
mov
dec
and
sti
pop
test
cli
jb
mov
xchg
ss
loop
cmovg
loop
mov
gs
mov
pusha
add
pop
test
rcll
loop
cli
or
adc
int3
subb
test
sti
xchg
inc
jbe
shlb
xchg
mov
dec
movsb
adc
repz
cmp
rolb
cmpl
pop
and
nop
and
mov
imul
or
jno
add
hlt
mov
push
ljmp
pop
xchg
dec
cwtl
loop
push
movsb
pop
xor
inc
jl
paddusw
jle
pop
cmc
mov
sub
sbb
adc
test
aad
movsl
repnz
pusha
push
cmp
cmp
mov
and
int3
pop
testl
ffree
or
jge
push
dec
xor
scas
xor
push
out
and
rcrb
xor
int3
lods
arpl
mov
mov
jb
sbb
sbb
cltd
out
repnz
decl
xchg
xlat
push
cmp
popf
xor
enter
fsub
popf
stos
mov
and
loope
adc
cmpsb
jmp
es
sbb
inc
inc
loopne
mov
aaa
or
push
mov
inc
sbb
pop
insl
arpl
push
sub
testl
mov
push
je
add
nop
popa
push
icebp
lahf
scas
adc
cmp
fcoms
sub
movsb
negb
mov
pop
ret
jecxz
add
add
pop
fsubl
fwait
push
push
mov
mov
xchg
lds
cmp
cmpsl
das
pop
lds
aam
mov
mov
push
dec
std
mov
cmc
mov
test
outsb
les
arpl
data16
jecxz
enter
popa
fwait
stos
fnstsw
xchg
mov
pop
sahf
ret
leave
pop
lret
sbb
sahf
fmuls
rcrl
into
jae
or
call
int3
mov
scas
xchg
xor
mov
add
lds
test
int
hlt
lock
mov
xchg
lods
sbb
testl
ds
jmp
repnz
lret
adc
xchg
out
dec
lods
cmp
movl
rcll
xchg
call
scas
mov
xchg
or
lret
dec
fwait
or
mov
inc
ret
xchg
lds
push
out
int
push
testb
rcl
jl
xchg
sti
gs
popf
dec
addl
sbb
or
shl
rorb
test
iret
dec
xchg
lock
popf
or
add
cmp
inc
negl
mov
adc
inc
scas
cmp
mov
neg
sbb
out
push
cs
push
adc
lcall
les
push
out
loopne
cltd
push
loopne
pop
int
xchg
mov
dec
jns
cmp
jno
add
jle
inc
push
ds
inc
mov
cltd
sti
arpl
mov
popa
andb
mov
xchg
stos
or
push
fwait
call
js
cmp
lea
inc
xchg
ss
mov
sub
pop
mov
rcrb
add
pop
lret
jnp
mov
ja
arpl
adcb
rcl
call
inc
sub
gs
inc
xchg
daa
in
sti
js
jp
sub
fs
out
push
mov
mov
and
fnsave
mov
xor
sarl
dec
mov
imul
lcall
insl
in
pop
inc
mov
dec
fisttps
fnsetpm(287
int3
icebp
push
jge
aaa
pop
or
dec
das
mov
test
jecxz
popl
dec
movsl
sbb
stos
incb
scas
mov
adc
mov
leave
push
cmp
int
daa
xorl
loopne
sti
shl
iret
xchg
lret
push
cli
lods
ljmp
stos
pop
cwtl
mov
lea
mov
xchg
mov
adc
pop
lds
inc
dec
clc
leave
pop
dec
mov
rcrl
out
sbb
jns
dec
lcall
dec
lcall
fs
testb
lods
xor
jl
das
inc
inc
mov
sar
push
insl
or
inc
cmpsl
mov
in
addr16
lods
pop
sbb
and
pop
test
cwtl
xchg
mov
push
cmp
idivb
in
mov
xor
hlt
insl
push
jmp
sbb
xor
sahf
add
or
js
xchg
loop
fistpl
xor
add
jp
mov
nop
sbb
fldt
jbe
or
cltd
rorl
test
sahf
lahf
xchg
mov
mulb
lret
imul
xchg
push
cwtl
pop
adc
stc
insl
jecxz
out
addr16
pop
or
hlt
xor
and
andl
in
es
in
jmp
mov
call
sbb
cld
mov
dec
adc
addl
mov
jg
pop
pop
xchg
scas
pushf
cmp
sbb
or
and
push
dec
mov
and
inc
sbb
mov
negb
mov
mov
gs
add
adc
bound
pop
cli
mov
sahf
push
orb
sbb
jb
push
add
std
or
add
push
add
inc
mov
mov
ret
cltd
mov
jne
gs
ret
sbb
add
adc
jp
xor
aaa
call
fwait
rcll
lock
push
pusha
xchg
mov
xchg
adc
adc
inc
cmp
and
dec
enter
jmp
rcll
fs
and
mov
sub
dec
out
cmp
jnp
lock
mov
rorl
or
cs
jno
mov
fcmovu
pop
lea
push
inc
pop
aad
adc
pop
push
sbb
mov
jle
test
cltd
push
mov
push
jmp
cs
mov
push
xchg
in
mov
push
dec
add
mov
sarl
aaa
ljmp
mov
lret
and
das
fists
lods
scas
test
jle
lcall
or
int
lret
mov
push
dec
inc
pop
jmp
xlat
jecxz
add
push
inc
dec
sti
pop
sub
imulb
call
rcll
dec
jne
popl
adc
daa
dec
xchg
outsl
enter
and
shrl
inc
out
js
lret
repnz
dec
jmp
lret
mov
bound
pop
stos
out
xchg
push
jg
dec
pop
ret
es
mov
mov
pop
cs
sub
rcll
jno
aad
sbbl
cmpsb
pop
jb
cmpsb
lock
xor
jno
lds
mov
popf
inc
inc
sub
push
fwait
add
push
ljmp
xchg
int3
lahf
test
xchg
xor
mov
ret
fucomi
mov
pop
mov
push
or
mov
push
adc
popa
test
xchg
sub
xor
pop
inc
mov
in
mov
lahf
jmp
dec
dec
cld
mov
repz
cltd
scas
ret
jecxz
sub
call
add
movsl
cmp
popf
out
loopne
dec
dec
cld
lods
aam
aam
sbb
enter
call
adc
dec
movsb
bound
inc
inc
enter
ljmp
push
sub
lds
jle
mov
or
and
mov
sti
xchg
cmp
push
je
in
push
cmp
aad
mov
clc
test
push
pop
xchg
in
adc
nop
std
decb
sti
xchg
es
lods
mov
and
add
fwait
in
jne
push
pop
insb
ss
xor
dec
add
cltd
cmpsl
fmul
xchg
push
cmp
add
mov
popf
mov
adc
lahf
data16
in
sbb
pushl
shll
test
xor
imul
stos
adc
rcrl
mov
inc
iret
out
jg
mov
aas
mov
fcomp
out
shlb
sub
aad
xor
shlb
rcll
pop
push
aam
cltd
mov
and
push
adc
inc
jp
bnd
aas
lock
and
mov
add
pop
mov
mov
push
xor
aad
jmp
pop
roll
inc
in
ficomps
vmread
xchg
adc
dec
mov
mov
jb
and
stos
and
jg
and
sub
iret
adc
jle
in
and
push
sbb
lds
rorb
scas
xor
mov
or
sub
push
sub
test
repz
pusha
mov
les
hlt
nop
mov
mov
fidivrl
arpl
inc
pop
push
jnp
ss
cmpsl
sub
sbb
xchg
outsb
mov
cmp
push
outsb
in
mov
xchg
out
push
adc
mov
out
sbb
movsl
repz
imul
push
in
rorb
push
mov
jge
adc
inc
sarl
bound
mov
push
icebp
mov
shr
aam
or
mov
xchg
insl
ds
push
gs
in
mov
in
aaa
sub
mov
lock
pop
jle
jno
lods
sbb
push
cmp
push
cmp
and
push
sar
pushf
or
sub
push
outsb
lret
jp
das
lahf
xorb
pop
popf
mov
or
jmp
xchg
adc
push
stos
dec
call
clc
out
fisttpll
mov
leave
ss
mov
sbb
dec
pop
xor
mov
mov
cmp
add
lret
jg
and
push
lds
insb
mov
je
dec
mov
push
dec
xchg
cmpsl
inc
add
call
jne
lcall
cld
jbe
dec
or
dec
ljmp
lcall
cmpsl
call
stc
sahf
push
sar
pop
push
dec
nop
icebp
ds
data16
lock
aam
pop
mov
add
adc
aam
outsb
clc
jb
lods
sbb
cmp
pop
pop
iret
xlat
mov
adc
add
or
mov
notl
push
lret
xchg
outsb
mov
out
or
cltd
hlt
jecxz
ret
insb
stos
ss
addl
sbb
fcomp
lock
js
imul
jns
inc
lret
lds
movsl
add
pop
push
mov
cli
imul
loop
xor
mov
push
or
inc
xor
sbb
xchg
pushf
in
push
dec
pop
mov
outsl
popf
js
cltd
mov
and
cmpsb
push
fwait
jb
and
jns
sbb
sub
das
mov
fldenv
push
adc
pop
mov
enter
push
popa
outsb
jnp
add
in
lock
sarl
popa
sub
inc
rcll
sbb
add
data16
and
adc
stc
leave
dec
mov
sub
push
hlt
pop
push
sub
enter
inc
cmp
add
xor
mov
fisttps
lods
test
push
and
adc
xchg
imul
cmpsb
sbbl
mov
fadds
insl
out
sub
subb
stos
imul
cmp
test
push
mov
inc
hlt
andb
add
insl
fsubrp
dec
pop
mov
inc
cli
adc
mov
dec
fcom
inc
fsub
sub
mov
jmp
je
dec
push
scas
enter
js
imul
gs
xchg
mov
inc
xrelease
lret
js
pushf
pop
rcrl
xor
bound
cmp
sbb
fidivs
or
jle
int
out
rcl
sbb
cmpl
adc
repnz
xchg
adc
sub
popl
inc
fnsave
sub
shrl
mov
fstl
jp
push
addl
or
adc
sbb
mov
push
fidivrl
sbb
inc
in
insb
ret
sbb
arpl
xchg
andl
mov
dec
stos
in
push
imul
sti
sub
mov
fwait
stc
std
xchg
push
cltd
scas
scas
ds
test
fsubrs
sub
inc
repnz
and
rcrl
iret
mov
adcl
imul
sub
add
ja
imul
inc
adc
adc
out
pop
jp
ffree
sub
jne
shrl
movsl
loope
cld
loop
sub
xor
mov
test
mov
cmp
xchg
pop
mov
fisttpl
lods
push
clc
jnp
lods
xchg
sub
inc
out
addr16
sub
dec
aam
xor
aad
fnstcw
idivl
mov
mov
imul
loop
jge,pn
les
sbb
add
jns
xor
cmc
pushf
mov
cmp
mov
mulb
arpl
mov
xchg
jl
lcallw
mov
lods
or
popf
jmp
ror
mov
das
push
cmp
insb
xchg
loope
mov
mov
imul
mov
jmp
sti
aaa
xchg
and
add
leave
or
fcmovbe
lock
fistpl
or
scas
mov
imul
jg
test
cmp
in
stc
pop
cltd
lea
mov
mov
add
mov
and
out
cwtl
sbb
js
int3
clc
adc
in
cmp
inc
or
lds
xlat
push
in
inc
cmpsl
or
mov
test
adc
and
ss
push
fs
je
test
xchg
movsb
mov
les
hlt
data16
adc
and
xor
inc
ss
push
fs
je
test
xchg
movsb
mov
les
hlt
data16
inc
and
xor
push
gs
je
test
xchg
movsb
mov
lds
hlt
addr16
adc
and
xor
inc
ss
in
mov
jnp
ds
movsb
ret
rorl
jns
imul
pop
jno
popa
mov
adc
mov
cmpsb
rcll
out
xlat
mov
mov
pop
jno
popa
ja
add
inc
and
icebp
xchg
aaa
xchg
out
xlat
repz
mov
pop
jno
popa
ja
add
inc
and
xchg
xchg
not
mov
mov
push
inc
push
pop
push
imul
in
loop
jmp
and
push
movsb
inc
fs
mov
arpl
lods
rorl
sahf
mov
mov
ds
in
insl
and
lock
push
adc
adc
fdivl
int
sub
ds
xor
cmpsl
nop
lcall
inc
daa
ret
pop
popa
push
adc
sarb
and
or
cmpsl
jle
dec
repnz
mov
mov
adc
aam
add
adc
cli
and
sub
fdivrs
mov
xchg
mov
inc
inc
shl
push
shrl
loopne
test
xchg
movsl
inc
mov
pop
jno
popa
ja
add
inc
and
icebp
xchg
notl
enter
inc
jle
outsb
or
adc
jno
mov
mov
cltd
jmp
mov
and
jb
imul
pop
and
inc
adc
mov
nop
xchg
mov
sbb
adc
imul
add
inc
and
icebp
xchg
notl
mov
pop
jno
popa
ja
add
inc
and
icebp
xchg
notl
mov
mov
sub
mov
gs
shlb
lahf
xchg
push
xchg
test
int3
push
mov
arpl
inc
adc
sbb
push
or
in
xchg
aas
xor
inc
add
xchg
xor
cli
sub
aaa
aam
int3
enter
xor
sti
dec
pusha
and
std
xlat
xor
inc
out
in
jmp
clc
xor
stos
mov
orb
dec
or
subb
loop
jne
in
cmpsl
mov
add
popl
cltd
ss
loope
sahf
sbb
mov
addl
repz
mov
xchg
pushf
sbb
xchg
adc
mov
loop
mov
jg
push
push
fadds
repnz
test
push
cmp
popa
out
cmp
cs
shll
pop
loopne
lds
mov
pop
stos
ret
mov
sbb
jne
inc
aas
jmp
jg
jno
xor
leave
mov
push
movsl
inc
addl
movsl
push
push
jb
sbb
push
popf
and
mov
shll
pop
xor
add
call
ficomps
inc
inc
inc
into
pop
cltd
jno
dec
adc
aaa
fisubrl
les
and
mov
jns
jle
sbb
push
sar
jl
lret
dec
push
xchg
out
shrb
shlb
data16
cmp
mov
mov
hlt
xor
test
xchg
mov
push
ror
mov
or
call
in
mov
adc
mov
sbb
mov
or
pusha
xchg
in
or
jecxz
sarb
mov
pop
hlt
ret
cmpsl
shrl
ja
adc
enter
jns
mov
int3
and
dec
push
mov
add
adc
cmp
add
sbb
std
jl
mov
mov
call
push
test
adc
xchg
push
sbb
pop
adc
mov
outsl
lahf
adc
push
movsl
dec
cld
pushf
add
pop
cmp
lock
mov
xor
std
sarl
sbb
mov
xchg
loop
int
mov
or
aas
adc
mov
xchg
cmp
dec
xchg
lahf
fsubr
test
and
push
stos
popa
mov
outsl
xchg
sub
out
scas
nop
mov
lods
mov
pop
jg
sbb
fdivp
scas
sbb
popf
fmul
jne
push
insb
cmpsb
into
mov
dec
pop
mov
dec
sbb
jg
jb
ljmp
xchg
or
jmp
adc
mov
sti
dec
shll
xlat
add
xchg
fs
shrb
repnz
leave
sub
pusha
add
pop
stc
andl
je
fsts
test
xor
cmpsb
xchg
pop
add
inc
sbb
and
jns
jno
push
or
in
or
push
cwtl
xor
outsb
imul
cmc
pop
imul
xor
fistps
mov
sbbl
sbb
push
sti
pop
and
insb
and
push
lahf
je
inc
punpcklwd
dec
lcall
inc
push
lret
sarl
adc
sub
popa
cmpsl
inc
mov
mov
mov
rcrl
adc
dec
mov
cmpsb
ret
pusha
sahf
cmp
clc
push
pop
pop
mov
xor
jecxz
adc
ds
add
aas
cwtl
jmp
ja
scas
mov
mov
leave
inc
test
les
stc
ss
pop
fsubrs
push
das
fldt
mov
or
adc
push
inc
mov
out
std
bound
jb
sbb
or
push
out
inc
fwait
fs
in
mov
sbb
sbb
sbb
sub
sbb
push
dec
or
push
push
push
shll
insl
sbb
or
sub
adc
ret
push
into
dec
pop
in
adc
sub
imul
xor
enter
int
and
jg
cltd
imul
orl
imul
sbb
pop
ficoms
divb
and
roll
fsubs
je
mov
or
loope
sbb
cli
inc
nop
nop
dec
adc
test
xlat
dec
scas
pop
out
clc
mov
pop
insb
push
jl
mov
push
fs
int3
psrlq
jge
add
sbb
ret
cs
aam
mov
push
sub
pop
loop
ja
dec
adc
lret
pop
stos
mov
add
cmc
mov
lcall
jnp
and
lods
or
out
out
lock
jb
rclb
in
xor
test
in
mov
cltd
xchg
insl
jns
movsb
push
sub
add
or
jbe
in
ror
lret
xor
inc
jle
div
negb
adc
push
sub
adc
clc
xor
lock
mov
es
sub
pop
mov
adc
ds
push
fdivrs
and
pop
hlt
jno
push
pop
ja
mov
adc
ret
fsubs
fs
mov
popa
mov
dec
lret
mov
mov
cmp
imul
mov
adc
mov
mov
call
pop
mov
inc
mov
or
mov
and
xor
push
add
mov
and
ret
xchg
out
cmpsl
shlb
sub
roll
in
outsb
pop
fmulp
daa
dec
xor
out
sbb
aad
inc
dec
pop
mov
or
pop
pop
aad
jp
rcll
sarl
adc
outsl
xor
xor
sbb
insb
jne
fadds
sbb
mov
pop
fcomps
push
jb
mov
in
pop
add
mov
add
nop
loope
adc
jno
pop
int3
pop
imul
mov
repz
enter
add
pop
push
jg
jbe
jne
sub
mov
dec
and
mov
ret
mov
cmpsb
cmp
int
push
scas
addl
ret
cli
and
movsl
jnp
and
mov
loop
ficoml
push
test
lds
sbb
inc
es
mov
dec
mov
or
push
gs
cmp
movsl
adc
orl
push
jb
and
cs
stos
daa
push
cmp
int
and
ficoml
test
in
sbb
aam
dec
inc
dec
aas
xor
inc
sbb
and
sub
insl
pop
pop
push
addr16
scas
and
sti
cwtl
dec
mov
sub
sub
icebp
jb
dec
cmc
stos
push
push
mov
stos
pop
mov
cmp
push
inc
scas
pop
loopew
int
arpl
cwtl
jns
xchg
stos
idivb
jmp
insl
mov
aaa
xchg
jl
cmp
nop
lea
xor
ss
cmp
imul
xlat
cld
push
push
dec
loope
call
xchg
xchg
arpl
or
dec
in
xorl
lds
pop
add
xor
sub
jb
dec
push
xor
test
rolb
inc
hlt
push
jge
and
push
push
jg
fistpll
pushf
rclb
dec
lahf
sbb
cmp
aam
imul
mov
adc
jg
test
sahf
les
out
mov
addl
loope
jmp
mov
repz
xchg
or
add
imul
adc
push
mov
sbb
and
sub
or
add
lahf
jb
xchg
xchg
add
xor
insb
push
jo
aas
sahf
sbb
fstl
addr16
fwait
cwtl
sbbb
mov
fwait
adc
mov
insl
mov
arpl
scas
xchg
inc
hlt
mov
mov
or
leave
adc
ds
stos
gs
in
fistl
add
mov
mov
repnz
pop
adc
repz
icebp
xorl
push
test
loope
xchg
in
loope
sbb
call
and
push
stc
jnp
mov
or
or
and
inc
jbe
ja
pop
sbb
xor
ret
fstl
lock
aad
stos
xchg
inc
das
test
push
xor
adc
scas
imul
jbe
add
push
jo
add
push
repz
or
dec
fs
in
push
inc
mov
xor
pop
sub
mov
dec
add
adc
push
cmp
cld
leave
leave
mov
and
iret
test
out
add
cmpsl
sbb
pop
jecxz
stc
lret
outsb
pop
push
and
cmp
mov
xor
xchg
incl
popf
pop
mov
jecxz
sbb
loopne
fstpl
push
loopne
lock
sbb
lods
fbstp
inc
jl
popa
iret
push
push
xor
jmp
or
sub
pop
cmc
push
ja
dec
and
das
int
push
pop
mov
push
les
mov
sbb
push
sub
or
cmp
pop
push
lret
sbb
sbb
mov
jge
add
dec
cmc
clc
cltd
xchg
lock
out
cmc
cs
sub
fcmovbe
mov
aad
nop
jb
movsl
in
or
push
fwait
test
pop
out
xchg
xor
je
popa
xchg
inc
jp
and
xchg
mov
add
loope
add
mov
pusha
sahf
fdivr
fs
rcrl
lock
adc
cld
jle
nop
dec
enter
out
adc
repnz
xor
or
adc
es
iret
mov
xchg
and
push
int3
movl
xor
sarb
scas
jae
xchg
fsubrs
inc
call
push
sbb
sbb
test
cmpsl
loopne
rcpps
dec
mov
pop
mov
mov
adc
call
imul
fucomp
inc
daa
insl
int3
push
cld
mov
lea
jnp
call
cmpsb
xchg
push
sub
lock
push
fdiv
cmc
lea
call
pop
jge
bound
cmp
rclb
add
dec
or
jae
das
inc
xchg
rcll
loop
mov
and
sub
insb
pop
mov
xchg
sarb
pop
cwtl
mov
iret
shrb
aaa
adc
stc
fisubs
jae
or
fbstp
adc
adc
cmp
mov
loopne
scas
inc
cmp
and
lret
pop
jno
push
xor
mov
gs
aas
fidivs
adc
lahf
in
inc
outsb
xchg
or
mov
mov
dec
je
xchg
xor
jg
xor
lret
sbb
sub
mov
stc
pop
mov
je
test
fcomi
dec
dec
mov
insl
insb
scas
jnp
jmp
insl
outsl
jbe
mov
nopl
xchg
in
aad
xchg
inc
test
push
mov
sti
pop
inc
scas
imul
ret
andb
dec
pop
adc
loopne
push
punpckhbw
scas
shlb
fistl
or
insl
addr16
loope
bound
nop
jp
push
ficompl
jo
mov
xchg
fcmovu
out
xchg
in
test
mov
push
into
jo
aaa
xchg
pop
fistl
push
xchg
shr
ja
test
sarb
xchg
jecxz
sub
loope
xor
or
je
cli
pop
mov
aad
adc
lock
cmpsb
mov
lcall
pop
ljmp
lcall
leave
mov
cmp
mov
out
adc
hlt
push
cwtl
shl
scas
ds
cli
shr
pop
in
cmc
test
rol
cmp
js
mov
mov
rolb
push
mov
sub
fdivs
pop
lahf
sbb
repnz
jp
jmp
nop
cmp
adc
inc
jb
and
inc
movsl
sarb
jl
in
dec
sub
sub
lcall
adc
fbld
push
adc
outsb
or
lea
xor
push
sti
push
cltd
cmp
xor
jecxz
mov
xchg
ret
lods
and
outsb
adc
xchg
jae
mov
mov
sti
fidivrl
or
nop
push
xchg
jo
mov
pop
mov
icebp
jp
inc
add
popf
std
xor
pop
push
pop
arpl
push
nop
sbb
or
insb
xor
sub
aam
push
js
and
cmp
lcall
push
mov
or
jb
dec
popf
dec
sti
pop
mov
fstl
loopne
adc
cli
lea
es
pushf
pop
hlt
jl
daa
imul
dec
mov
mov
or
dec
push
lock
data16
loopne
xor
out
sub
cmp
dec
adc
add
cld
lods
pop
mov
mov
sbbb
pop
cmpsl
add
adc
les
test
push
pop
filds
mov
aam
mul
orl
cmp
jg
add
loop
hlt
and
adc
mov
sarb
in
jbe
hlt
imul
sub
xchg
add
inc
paddusb
mov
psrlw
repz
add
xchg
test
daa
fmull
jl
pusha
lcall
mov
stos
jb
andb
xor
mov
adc
push
dec
push
xchg
inc
sub
push
pop
inc
xchg
rclb
sub
fs
sti
push
dec
dec
sbb
xor
and
mov
sar
int3
out
call
jl
jns
andl
push
or
cwtl
xchg
xor
lcall
mov
mov
inc
lahf
mov
leave
xor
xor
es
sbb
das
cli
xor
repnz
test
test
xor
push
mov
mov
mov
mov
loope
push
lret
cmpsb
out
jae
ljmp
or
addr16
xchg
inc
int
repz
sbb
enter
sbb
mov
out
pop
dec
daa
lds
mov
add
inc
jmp
outsb
daa
add
scas
rorl
jmp
fsubr
push
mov
outsb
fmuls
cmp
aad
mov
mov
cwtl
or
rorb
sub
cli
popa
js
mov
out
sub
lcall
add
lcall
pop
xor
cmp
cwtl
call
in
popa
rcr
stos
jbe
fisubs
add
sbb
jecxz
shlb
mov
dec
movsl
or
push
push
and
sarl
out
jb
ljmp
mov
movsl
je
xchg
mov
jecxz
call
xchg
adc
cmp
rorl
test
sub
mov
or
dec
or
mov
mov
xchg
jp
aad
or
stos
xor
mov
and
ds
sahf
mov
cmp
mov
jns
dec
jg
je
jl
jo
sahf
jp
push
mov
out
testb
sub
into
popa
xor
lret
iret
mov
add
decl
inc
and
into
out
sub
cmp
enter
clc
xor
sarb
sub
inc
push
cmpsb
or
bound
add
push
sahf
adc
cli
ret
orl
sub
inc
test
or
push
pusha
xor
outsb
jae
jecxz
nop
jp
pop
out
jg
fwait
lret
popa
dec
ret
sbb
std
negb
dec
lods
mov
aam
or
icebp
aas
xchg
test
pop
push
or
mov
out
out
popf
faddl
and
and
sbbl
jne
jmp
cmp
add
arpl
mov
mov
mov
stc
jle
lods
scas
jl
test
jmp
out
repz
out
mov
jecxz
mov
outsb
loopne
scas
cmp
fnstcw
push
out
aas
aad
xchg
pop
xlat
xchg
xchg
outsl
popf
push
lods
or
psllw
test
mov
cmc
dec
orb
pushl
push
cltd
sahf
aaa
in
outsb
and
xor
pusha
out
fistl
cmp
lret
push
icebp
vpshufhw
ret
ret
inc
or
sarl
movsb
jl
pop
adc
movsb
add
pusha
std
call
cmp
push
xor
dec
xchg
lods
int3
jbe
addb
test
fidivs
stos
mov
pushf
jo
outsb
push
jl
out
fadds
inc
testl
push
subb
lds
ffree
fwait
sahf
sbb
jae
mov
xor
mov
jge
mov
testb
scas
xor
int3
insl
push
int3
scas
sub
out
sub
fdivrl
pop
repz
mov
mov
adc
push
xchg
rolb
loope
shll
sub
pop
popa
fs
movsb
adcl
dec
mov
call
mov
into
in
dec
stc
push
and
xor
mov
int
adc
sarb
xchg
or
ret
out
fnstsw
xor
cmp
cmpsl
std
fdivs
fsubrs
push
sbb
int3
sub
mov
dec
ljmp
push
sbb
xor
jnp
sbb
hlt
icebp
or
and
aad
inc
sbb
shl
mov
cwtl
movsb
daa
push
sub
push
or
mov
inc
rcr
mov
dec
mov
cmp
decb
xchg
fisttpll
push
hlt
jnp
repz
cmpsl
lahf
and
icebp
cmp
lcall
push
pop
test
lret
scas
jno
dec
or
out
mov
bound
popf
rcrl
push
int3
les
sbb
jp
into
sahf
ljmp
cmp
scas
jmp
sbb
test
call
sub
mov
sbb
push
mov
mov
adc
xor
clc
stos
push
ja
dec
gs
imul
outsb
mov
jg
inc
pop
pusha
jns
and
cwtl
push
jge
les
daa
xlat
repz
fcompl
lahf
scas
push
cmp
out
cmp
loope
xor
fwait
dec
inc
pop
or
hlt
gs
call
cld
out
stos
jmp
inc
sahf
dec
jbe
mov
sub
pop
fptan
pusha
jecxz
inc
mov
aam
mov
mov
ja
dec
scas
sub
ds
movsl
push
mov
mov
jnp
mov
lret
mov
mov
lcall
and
xchg
dec
mov
adc
mov
sahf
mov
fnstsw
mov
sbb
lahf
xor
out
notl
lahf
shlb
std
leave
cmp
fsubrs
insb
xchg
loope
movsb
mov
push
push
mov
fisubl
data16
fnstsw
mov
adc
dec
sahf
inc
inc
push
mov
loop
scas
sar
lods
xor
out
out
out
leave
sub
xchg
dec
cmp
aam
mov
jne
or
sub
xchg
inc
cmpsb
sub
int
dec
mov
and
mov
sub
fwait
or
mov
xor
mov
mov
loope
in
cmp
and
int3
mov
arpl
arpl
pop
mov
push
repz
sarb
sub
in
xchg
bnd
enter
push
xchg
push
int
mov
mov
push
popf
push
add
std
xchg
lret
dec
lahf
mov
jo
cwtl
fcmovnb
out
out
add
inc
pop
pop
xchg
pop
mov
pushf
pop
pop
in
cld
addr16
es
daa
fisubl
std
jbe
inc
les
call
mov
mov
shl
jmp
sarl
lods
repz
push
xchg
sub
fldenv
mov
mov
shrb
fldl
inc
cli
jmp
push
dec
mov
xchg
adc
or
cltd
xchg
pushf
add
pop
mov
negb
cmpsb
jle
lea
and
mov
cmpsb
aas
pop
mov
lcall
cmp
pop
xchg
movsl
pushf
mov
scas
aas
rcr
sub
inc
mov
cmpsl
and
cmp
popa
sbb
mov
andb
aas
mov
xchg
mov
and
add
xlat
lods
pusha
adc
stos
fwait
mov
mov
sub
push
out
gs
xchg
mov
fiadds
jns
mov
inc
jne
stos
or
js
leave
enter
fwait
jbe
mov
jl
lret
dec
jne
mov
outsb
cmp
add
push
xchg
iret
mov
cmpsb
incb
adc
nop
jnp
sbb
jno
mov
dec
icebp
xchg
and
fisubl
idivb
in
jle
fstl
into
or
fcomps
cli
mov
cltd
roll
jne
jle
outsb
dec
popa
push
push
stos
mov
orl
sar
ds
xchg
stos
sub
xchg
movsl
mov
test
dec
ds
mov
add
mov
movsb
xor
inc
outsl
adcb
pushf
sbb
shrl
jp
pop
pop
cs
pop
arpl
mul
out
push
inc
xlat
xor
push
icebp
mov
adc
andb
xchg
add
sti
pop
fsts
pop
xchg
fwait
mov
jp
push
cwtl
dec
lea
cs
je
ljmp
adc
add
inc
ljmp
pop
in
adc
xchg
repnz
popa
ja
add
inc
and
icebp
xchg
notl
mov
pop
jno
popa
ja
add
inc
and
icebp
xchg
notl
mov
xchg
icebp
pop
popa
notl
adcl
cmpsl
rcll
out
xlat
mov
mov
pop
jno
popa
ja
add
inc
and
icebp
xchg
cmpsl
dec
mov
push
nop
inc
xorb
mov
inc
sahf
das
loopne
scas
rorb
xor
and
pusha
mov
xorb
mov
xor
and
repnz
and
jo
pusha
push
nop
inc
xorb
mov
xor
and
rclb
loope
adcb
xchg
push
icebp
sbb
adc
and
jb
or
sbb
repz
cld
clc
imul
pop
xor
mov
ficompl
dec
into
js
push
add
or
sbb
sbb
enter
subb
sbb
addr16
popf
rorb
clc
sub
insb
adc
add
fists
jl
std
mov
xchg
mov
idivb
std
shrb
add
in
dec
call
negb
mov
add
jg
dec
lahf
lods
in
pop
and
into
mov
lret
iret
imul
dec
sbb
xchg
dec
push
popf
test
lahf
mov
jp
imul
inc
rcll
jne
mov
xorb
mov
xor
and
rclb
ret
xor
and
jo
es
nop
and
xor
and
ja
insl
mov
xchg
cmpsb
xchg
mov
arpl
pop
xlat
add
add
adc
and
ja
dec
test
addr16
mov
push
loop
gs
enter
inc
shll
add
xor
and
rclb
ret
xor
and
jo
pusha
push
nop
inc
xorb
mov
xor
and
rclb
ret
xor
and
jo
pusha
push
nop
and
ret
inc
bound
adc
int
idivl
lret
adc
add
fisubs
sahf
mov
fdivrl
aam
adc
inc
add
sbb
ljmp
mov
repz
mov
mov
push
push
lods
pop
pop
cltd
xchg
adc
cli
ss
add
in
or
cmpsb
mov
and
push
pushf
shlw
fwait
mov
jmp
inc
icebp
mov
sbb
fadds
dec
cmpl
jp
mov
cs
rol
in
sbb
inc
or
adc
sbb
xor
xchg
xchg
pop
and
sbb
loope
add
popf
pop
xchg
rclb
xor
test
and
stos
dec
in
mov
xchg
aam
insb
or
adc
cmpb
and
inc
or
jmp
aas
adc
roll
fcmove
rol
xchg
mov
pop
stos
inc
jbe
or
je
jmp
cs
out
sub
mov
sub
inc
idiv
mov
cmp
and
stc
ror
add
pusha
out
push
adc
mov
stc
xchg
fldenv
pop
pop
xchg
cmp
xor
push
jg
fldl
xor
outsl
and
pop
add
push
pop
sub
mov
add
xlat
test
jae
mov
dec
jns
aas
mov
outsb
cmc
inc
dec
pop
mulb
pop
and
sbb
mov
fidivrl
adc
outsl
mov
call
orl
add
xor
test
sti
aad
inc
xchg
je
xor
push
sti
int
fiadds
shl
rcll
push
sbb
xlat
loopne
je
mov
dec
int
jge
ds
jb
and
mov
and
inc
sub
in
xchg
test
arpl
popf
scas
lahf
jmp
scas
jg
arpl
push
jge
jp
sbb
jge
cli
roll
xchg
sbb
xor
or
inc
and
inc
sbb
push
js
sub
jmp
int3
stos
pop
xchg
push
sub
push
test
int3
adc
aad
sbb
jbe
stos
adc
inc
imul
pop
push
gs
les
lock
push
xchg
pop
xchg
fwait
jle
sti
cmp
aam
push
pop
cltd
jnp
shl
and
stos
push
mov
add
pop
cmpsl
popf
jl
cmc
cmp
cmc
adc
jne
mov
inc
pop
inc
push
aaa
mov
test
xor
mov
shrb
es
mov
out
pop
fdivrl
cld
aam
cltd
js
outsb
xchg
icebp
mov
pop
xchg
js
sbb
clts
loopne
push
mov
push
jns
incb
in
mov
lods
xchg
mov
sub
in
add
cmpsl
rorb
push
fnstsw
shr
js
shr
cmpsb
jmp
cmp
mov
mov
pop
xchg
out
std
loop
add
jns
xchg
loope
pop
aam
pushf
mov
mov
notb
enter
movsl
push
push
loop
sub
push
shlb
xchg
push
xchg
jns
xor
outsb
push
push
push
cmp
inc
add
out
dec
mov
push
push
ljmp
jnp
popa
int
inc
sbb
insb
sbb
sbb
push
notl
cwtl
cmpsl
push
insb
dec
mov
fnstcw
pop
mov
subl
lahf
lcall
movsb
jle
popa
inc
pop
repnz
loope
insl
xor
cli
lret
jbe
jbe
mov
das
popa
dec
fsubrl
leave
out
mov
out
mov
repnz
sub
jb
aaa
cwtl
push
add
aas
sbb
mov
scas
fsubrl
mov
cltd
pop
stos
mov
add
adc
add
add
movsl
mov
std
mov
adc
push
xchg
xchg
inc
xor
insb
xor
movaps
sbb
jle
sbb
repnz
add
icebp
out
repz
daa
sub
xchg
call
sub
shll
push
xchg
adc
mov
inc
xchg
mov
les
call
mov
insb
mov
movsb
add
add
mov
mov
shlb
rcrb
dec
aaa
push
fldenv
jno
inc
cmpsb
jae
mov
inc
inc
xchg
rclb
pop
and
scas
ljmp
add
dec
dec
lock
xor
hlt
pop
jmp
xchg
jl
xchg
dec
mov
pop
dec
fisttpll
iret
out
inc
leave
ds
inc
arpl
jecxz
jb
jb,pt
xor
loope
aad
xor
jge
add
sbb
iret
lds
pop
js
mov
xchg
mov
aad
push
xchg
lods
pop
adc
js
sub
mov
test
sub
out
sub
mov
orb
xchg
jecxz
outsb
mov
sbb
and
dec
scas
pop
fisttpl
aas
xchg
jg
jecxz
sub
lea
iret
mov
addr16
mov
ret
sahf
push
jl
mov
sti
xor
mov
lret
sbb
jge
scas
into
mov
push
test
rorl
ficompl
and
nop
xor
sub
dec
lret
add
pop
lahf
insb
std
jbe
and
enter
push
lods
into
shlb
adc
in
push
inc
imul
cld
enter
rcrl
xor
popl
fstl
jne
test
add
sbb
mov
cmp
out
xchg
adc
ja
push
pop
sbb
and
movsl
cmp
jno
outsb
mov
add
repnz
mov
jle
mov
cltd
mov
add
clc
pop
dec
ret
subb
pop
mov
and
test
sbb
sub
punpcklwd
push
outsb
sbb
mov
pop
imul
pop
insb
pop
add
jo
mov
aaa
xrelease
push
jecxz
jo
xchg
xor
and
stos
inc
lahf
repz
mov
adc
xchg
repnz
fcoml
pop
push
push
int
repz
repz
dec
push
outsl
or
pop
xchg
mov
por
int
std
lret
jb
push
push
stos
cld
cltd
dec
fldl
sbb
movsl
sub
jb
xchg
cmpsb
lret
inc
mov
neg
mov
icebp
gs
movsl
test
and
rol
ss
out
jo
pop
mov
pop
xchg
stos
inc
mov
xchg
adc
pop
mov
data16
mov
icebp
out
dec
pop
sub
cmp
test
shl
out
sbbl
xchg
push
inc
loop
push
mov
dec
repnz
sub
jmp
pushf
sahf
fwait
jge
ljmp
mov
out
add
jmp
and
cmp
dec
dec
mov
popa
rep
sub
cmp
dec
movsb
cmc
cwtl
mov
sbbl
shll
pushf
rcll
sbb
subb
sbb
mov
pop
or
in
cltd
bound
mov
jp
aas
lret
push
mov
fcmovb
xchg
mov
out
inc
inc
test
decl
js,pt
pop
fstl
adc
lcall
in
mov
xorl
iret
nop
lahf
es
into
or
sub
mov
xchg
ss
cwtl
movsl
outsb
or
imul
push
gs
lock
pop
pushf
aas
pop
adc
mov
pusha
rcl
ret
push
inc
jg
inc
cwtl
or
push
int3
mov
outsb
sarb
dec
shl
and
stos
stos
push
jmp
aad
cmp
std
mov
cli
iret
in
cmpsb
lcall
aad
or
clc
sub
ror
outsl
sbb
sub
pop
test
outsl
lods
mov
adc
inc
xchg
scas
nop
sti
add
lds
pop
mov
cmp
jmp
subl
insl
and
adc
add
imul
xchg
xorl
sbb
mov
lock
arpl
push
pushf
push
movsl
mov
cmc
inc
dec
arpl
dec
cmp
jge
and
mov
cmp
jae
arpl
push
ret
clc
int
cli
hlt
sarl
lret
or
in
fnsave
push
jne
loopne
fadd
pushf
dec
inc
out
mov
out
out
jecxz
lea
add
adcb
sarl
pop
xor
push
cmp
ljmp
adc
jo
push
sub
xor
leave
inc
dec
sbbb
movsb
push
mov
outsb
std
cmpsl
or
ffreep
xorb
std
push
mov
js
cmp
cmp
mov
pop
sbb
in
push
repz
push
fwait
inc
and
add
leave
mov
mov
insb
inc
push
pop
mov
push
imulb
pop
mov
push
jae
jge
adc
jo
xor
lea
rclb
push
sub
outsb
adc
mov
aam
mov
mov
subl
lods
andl
add
aad
into
dec
mov
adc
xchg
jmp
pop
arpl
dec
adc
pop
fwait
mov
fmull
bound
scas
jmp
popf
push
or
mov
adc
fwait
cwtl
dec
add
lods
xchg
and
mov
sbb
imul
pshufw
out
stos
pop
cmp
xor
loop
inc
jl
pop
xor
push
fcomps
dec
ret
jbe
xchg
jl
dec
jns
aaa
adc
outsl
xor
mov
imul
cltd
cmp
jp
or
or
negb
movsl
lods
adc
adc
mov
mov
xchg
popa
in
or
pop
push
xchg
test
mov
xor
adc
inc
in
xchg
mov
scas
or
push
fcmove
jbe
outsb
fwait
pop
fildll
stc
loopne
xor
icebp
sbb
shll
repz
jne
daa
pop
jae
clc
aas
inc
mov
xor
cmp
xchg
adcl
mov
icebp
mov
xorl
xchg
jle
test
jae
xchg
jbe
sbb
jecxz
mov
repnz
mov
dec
ret
inc
out
add
jnp
dec
or
sub
xor
cmp
mov
in
sarl
mov
aam
mov
leave
stos
or
sub
sbb
inc
xor
fcoml
loopne
out
out
lods
xchg
cmp
fs
push
stos
jp
inc
fwait
adc
mov
mov
mov
dec
insb
incb
loope
das
fs
ss
xor
xchg
push
cwtl
sub
push
sbb
xor
lret
push
xchg
mov
pusha
or
js
push
jbe
mov
lock
sub
dec
mov
das
mov
push
sahf
cmp
imul
leave
xchg
fnsave
pop
push
add
cmp
imul
test
and
sbb
cmp
jae
and
mov
mov
lock
jo
mov
test
push
lcall
jo
faddp
xor
adc
lea
add
mov
mov
add
fwait
ror
test
and
in
dec
push
iret
push
bound
outsl
pushf
and
xchg
mov
cmp
shlb
mov
inc
ficompl
jbe
push
jmp
jecxz
push
das
lea
cmc
pop
mov
mov
xor
cmp
fisubl
stc
mov
push
aam
push
lcall
loopne
rolb
or
lret
je
aam
pop
hlt
js
pop
inc
mov
pop
mov
dec
mov
add
fwait
cmp
adc
adc
jno
dec
js
mov
xor
lahf
jge
loopne
jge
popf
test
add
ret
sbb
cmp
repnz
push
adc
mov
xchg
xchg
loop
out
jo
jnp
fucom
xchg
call
and
popa
js
repz
sti
subl
jmp
fs
jbe
imul
cmp
inc
adcb
mov
mov
fisubs
icebp
pop
data16
jbe
dec
adc
jb
pop
pop
cs
fwait
push
cld
xchg
mov
pusha
mov
int
sarb
shll
mov
aas
daa
out
repnz
mov
movsl
sbb
jno
cmp
fsubl
jecxz
sub
out
sti
out
in
jbe
and
dec
inc
repnz
dec
mov
cwtl
mov
fstpt
outsb
and
xor
ret
and
cli
lock
sub
mov
stos
popa
mov
inc
dec
into
int
jb
dec
movsl
aad
xchg
outsb
scas
adc
lahf
lds
push
or
pop
xor
mov
iret
cmpsb
xchg
scas
jo
inc
push
push
scas
xchg
lods
insb
xchg
inc
sbb
adc
mov
and
call
call
lcall
mov
xchg
ficomps
fiadds
in
lds
or
add
loopne
xlat
lods
add
lea
add
into
dec
lahf
popa
out
dec
fstpt
call
dec
test
cmp
xor
adc
jbe
mov
insb
inc
ret
test
sbb
push
jmp
push
andb
inc
xlat
insb
cmp
sbb
jl
scas
mov
mov
in
arpl
sub
adc
frstor
push
xor
daa
sahf
imul
movsb
je
popa
negl
and
fidivl
xlat
cli
ss
in
sub
pshufw
pop
mov
pop
mov
mov
lret
pop
fdivrl
repnz
mov
or
jge
mov
lcall
test
jbe
adc
pop
into
sub
mov
add
push
jb
ret
movsb
fdivr
mov
push
pop
xchg
and
sbb
insl
ds
out
and
add
cmpsb
out
jno
aam
add
je
fisttps
fwait
jae
pop
dec
inc
sbbb
mov
aas
dec
addl
mov
stc
int3
xor
aas
pop
sbb
mov
adc
inc
rcl
xor
cld
mull
inc
dec
std
out
sub
addr16
lahf
push
jb
sub
adc
xor
loopne
mov
pop
mov
fnstenv
popf
xor
sahf
jns
ja
add
jl
inc
lods
sub
add
jg
mov
dec
mov
mov
xchg
mov
mov
dec
jo
mov
fildl
or
jae
or
mov
mov
aad
fucomi
cmp
pop
in
loopne
stc
ja
dec
in
cmpsl
and
xchg
adc
push
add
push
sub
loopne
push
scas
aaa
inc
sahf
call
bound
mov
out
cs
das
ljmp
xchg
js
jmp
jmp
jnp
cld
dec
imul
xchg
and
cwtl
push
add
pop
movsl
adc
push
stos
ds
or
ja
dec
movsl
or
outsb
into
adc
pop
hlt
popa
scas
adc
mov
mov
mov
clc
sbb
mov
dec
roll
mov
inc
sub
mov
sbb
pop
ret
pop
pusha
ret
shlb
lcall
test
test
cmp
ror
pop
xor
adc
dec
ss
mov
cs
xchg
loop
adc
jmp
mov
mov
fdivs
fmul
xor
jmp
popf
xlat
insb
and
mov
pop
pop
cmpsl
sbb
movsl
jge
mov
aas
or
mov
sarb
dec
push
cltd
cli
xchg
inc
cmc
xchg
push
cmc
nop
push
popa
cmp
les
cmp
test
insb
in
scas
cmp
out
or
fs
xchg
shl
pop
sbb
mov
stc
xchg
mov
xchg
and
mov
cmp
pusha
xor
icebp
cmpsl
xchg
cmpsl
mov
inc
je
sub
inc
test
inc
in
pop
add
xchg
cli
add
divb
dec
jl
jge
dec
lods
xchg
leave
push
mov
sub
sbb
jge
inc
sbb
mov
rclb
or
lock
into
jg
cwtl
ret
and
sub
les
cmc
push
out
outsl
call
lahf
sbb
sub
mov
lods
fs
push
shll
mov
testb
adc
loop
ror
xchg
add
or
add
mov
fs
hlt
push
cmp
lea
mov
pop
fcompl
movsl
mov
ret
jb
andb
loop
test
xchg
into
adc
mov
mov
mov
inc
cmpsb
test
lcall
inc
mov
loopne
ss
fmull
xor
shrb
sbb
mov
and
push
add
movsl
mov
dec
push
jo
mov
out
in
pushf
xor
int3
es
dec
lds
movups
pop
xor
dec
pop
stos
cmp
out
and
stos
ret
jo
sbb
cmpsl
daa
mov
dec
mov
push
pusha
pop
xor
dec
sarl
mov
dec
push
mov
pop
mov
jbe
dec
xchg
add
mov
pushf
add
jno
pushf
push
dec
xlat
jb
call
xchg
mov
add
cltd
mov
in
mov
mov
add
push
jp
dec
inc
sub
inc
popl
loope
jae
std
test
add
cmpsl
jo
pop
mov
push
aaa
aaa
mov
mov
mov
xor
fmul
pushf
cwtl
lods
bound
cmp
sub
inc
jl
lock
push
sub
lret
std
dec
int3
mov
stos
xchg
mov
pop
sub
bound
int
gs
dec
pop
adc
xchg
pop
inc
cmp
imul
jo
cwtl
loopne
inc
mov
ja
fbstp
les
mov
adc
dec
xor
shl
imul
add
ja
insb
sub
and
push
dec
mov
push
inc
test
jecxz
pop
push
push
cmpsb
sti
pushf
xor
pop
adc
loopne
and
pop
hlt
cmpsb
mov
pop
xchg
cld
je
xchg
jo
in
xchg
xchg
test
push
xor
mov
add
cmp
dec
pop
lret
dec
jmpw
or
inc
xor
push
icebp
cmc
inc
mov
inc
or
dec
pop
sbb
pop
sbb
cmp
add
movb
mov
jbe
into
inc
mov
pop
cmp
and
sub
inc
scas
inc
sub
ss
sahf
or
sub
mov
pop
shlb
sbb
pop
mov
mov
push
add
lods
cld
pop
ljmp
inc
inc
neg
repz
mov
imul
sarl
or
fdivs
sbb
push
rorl
cmp
dec
jle
mov
lret
pusha
cmp
sbb
iret
jl
in
mov
cli
or
dec
pop
push
cmpsl
adc
rcr
cmpsl
sub
sub
mov
imulb
sbb
ljmp
jp
xlat
pop
insb
fidivl
mov
dec
clc
data16
xor
jecxz
data16
xor
cmpsl
pop
dec
and
not
inc
lods
loop
add
imul
cs
movb
xchg
scas
mul
out
sub
ret
out
push
or
push
in
jbe
jl
in
sbb
adc
cmp
loopne
mov
pop
and
ds
sbbb
pushf
mov
js
out
fistpl
mov
adc
jmp
sbb
cpuid
lahf
sbb
add
fidivs
mov
rorl
hlt
jae
sti
test
pop
stos
xchg
idivl
sub
repz
test
sti
pop
popa
loope,pt
repnz
gs
mov
sbb
in
mov
xchg
rcrl
faddl
aam
and
cltd
mov
inc
mov
pop
sarb
shlb
sub
mov
fidivrs
ss
or
pop
xchg
inc
mov
and
xchg
push
insb
sub
mov
popf
cld
in
lret
pop
pop
ficoml
movsb
and
stos
fs
xchg
xchg
inc
add
sub
adc
jnp
in
xchg
loop
inc
adc
ds
jae
pop
push
mov
mov
sub
push
out
pop
mov
fsubs
dec
int
xchg
xchg
xchg
dec
add
and
cmp
daa
rcrl
adc
sahf
xchg
enter
les
pop
out
adc
mov
and
add
out
fdiv
xor
dec
rcr
or
in
ret
fcmovnb
add
sub
sbb
in
lds
push
sub
xchg
in
aaa
jne
mov
adc
sub
xchg
ret
dec
cmp
orl
rol
push
dec
and
or
jns
addb
inc
add
lret
loopne
mov
ret
jne
enter
scas
inc
fsubrl
push
std
push
ss
rcl
pusha
sub
push
inc
mov
cs
adc
sbb
loopne
lds
rep
cmp
dec
jbe
push
and
dec
push
mov
jne
push
pop
rcrb
sub
roll
adc
daa
cli
xor
cmpsb
mov
ja
and
movsb
or
loope
ss
and
mov
imulb
jmp
adc
push
into
jnp
pop
cmc
mov
pop
push
jecxz
mov
mov
xor
jg
pop
test
test
mov
mov
xor
and
rclb
ret
xor
and
jo
pusha
push
nop
inc
xorb
mov
xor
and
rclb
ret
xor
and
jo
pusha
push
nop
inc
xorb
mov
xor
and
rcll
ret
xor
and
jo
pusha
push
nop
inc
xorb
mov
mov
mov
stos
pop
xor
push
in
or
das
mov
sbb
insb
and
jl
insl
jb
loopne
pop
fimuls
cld
xchg
int3
mov
mov
inc
cmp
pusha
bound
insb
add
and
sarb
loope
inc
int3
mov
into
push
sahf
jp
imul
or
pop
sub
and
repnz
mov
cwtl
hlt
xorb
push
jne
push
mov
pop
shl
adc
pop
fsubr
rcrb
adc
cld
in
shrl
cmp
repnz
repnz
mov
call
mov
or
movsl
push
cmp
fdivrp
inc
mov
ja
xchg
mov
mov
adc
lock
xchg
and
jp
int
xchg
mov
or
int
sarl
mov
popf
adcl
mov
rorb
cld
pop
xor
rorb
dec
mov
mov
mov
imul
popa
shrl
mov
or
sbb
mov
add
dec
cmp
sub
es
lods
jmp
lcall
inc
daa
dec
push
js
fs
push
adc
pop
pop
lods
stos
out
stos
jmp
out
xchg
shll
pop
push
jle
jge
add
inc
or
mov
in
xchg
lock
std
movsl
into
popf
xlat
inc
add
insl
add
aas
outsb
jl
dec
and
ret
mov
pushf
repnz
cmp
int3
mov
cmp
or
sbb
insb
add
and
ret
mov
pushf
repnz
cmp
int3
mov
lcall
aas
xchg
ja
sahf
fcmovb
push
dec
mov
jno
sbb
jbe
and
mov
mov
pop
push
xor
pop
push
and
out
rclb
ss
js
push
outsb
add
pop
outsl
xor
movsl
clc
mov
mov
pop
xchg
and
xchg
xchg
je
cmp
lds
daa
movsb
stos
data16
icebp
jns
or
mov
cmp
cmp
movsl
pop
sbb
out
jbe
adc
imul
xchg
addr16
jno
jle
mov
and
adc
push
test
sbb
ret
sub
adc
mov
mov
xlat
dec
ret
jne
mov
aam
mulb
incl
cmpsl
pushf
mov
pop
mov
dec
and
sub
popa
mov
or
inc
xchg
ret
inc
push
lret
lods
das
dec
mov
orl
or
jnp
shrb
iret
dec
popf
ds
rcl
push
adcl
and
icebp
call
insl
jne
mov
into
mov
std
mov
xchg
mov
arpl
aam
nop
jnp
mov
loop
cmpsl
inc
xor
mov
idivb
mov
insb
push
outsl
xor
sub
in
xchg
jmp
cmp
jge
rorb
or
fidivrl
cmp
adc
mov
xor
and
lea
ret
out
jge
dec
and
mov
add
rcr
push
into
pop
inc
das
out
cmpsb
fxch
push
add
cmp
jl
add
rcr
pop
fiaddl
sub
loop
mov
stos
inc
xchg
out
jae
jl
movsb
adc
fnstsw
xlat
push
lds
adc
xor
jbe
repnz
outsb
aaa
sahf
jb
mov
pusha
xchg
mov
or
jnp
test
arpl
sahf
mov
xchg
xor
dec
dec
js
addr16
repnz
mov
mov
lcall
pop
mov
stos
orb
roll
aas
das
push
rorl
inc
xchg
addr16
sahf
outsb
jae
xchg
scas
xchg
mov
lret
inc
iret
xchg
cmp
es
jno
xchg
or
lods
xor
mov
popl
or
push
clc
scas
clc
dec
mov
pop
loope
mov
cmpsl
orb
add
iret
adc
xor
jg
push
enter
insb
mov
xchg
sbb
xor
fsubrs
mov
jbe
jl
insl
cli
dec
pushl
inc
mov
jnp
addr16
std
and
dec
aaa
rcrl
push
repz
xor
push
push
je
les
and
xchg
in
int3
cmc
or
pushf
adc
mov
jecxz
jnp
xor
push
inc
jg
out
fisubrs
scas
jbe
insb
outsl
inc
push
jg
rorb
add
lcall
lahf
jbe
jbe
push
ljmp
or
int3
mov
adc
cmp
imul
in
add
lret
xchg
or
mov
dec
sbbb
dec
mov
mov
fnstsw
idivb
sub
jbe
mov
ret
inc
mov
fs
mov
fdivrl
shll
pop
je
or
hlt
sbb
scas
push
push
push
xchg
stos
das
mov
push
or
dec
pop
dec
xchg
pushf
pusha
adc
pop
jae
mov
pop
mov
sub
or
cmpl
dec
shrl
insl
fcmove
cmpsb
pop
sub
cld
xchg
jge
fsubr
jecxz
push
test
cli
dec
xchg
mov
nop
cmp
fsubl
mov
mov
popa
dec
loopne
cs
jae
in
pop
pop
out
popf
sub
push
or
pop
xchg
sti
cltd
push
cs
loop
sahf
mov
xchg
sub
enter
fs
leave
sub
jl
pop
jl
xchg
mov
imul
ja
repnz
adc
push
inc
sbb
pop
dec
mov
loopne
pop
dec
popa
loop
mov
sar
sub
jne
cs
or
xchg
mov
mull
mov
scas
fstpt
aas
dec
or
les
clc
add
dec
test
loope
cmp
xor
cs
out
ljmp
adc
sub
imul
add
or
adc
push
mov
movsl
mov
or
pop
pop
mov
adc
xchg
adc
aad
cmp
test
mov
jmp
mov
gs
pop
in
popa
mov
inc
test
lods
mov
movsl
push
stos
arpl
and
mov
fs
sbb
mov
subl
xor
mov
stos
add
rcrl
addr16
sbb
movsl
push
inc
scas
repnz
fdivrs
jns
movsl
mov
add
lret
push
or
push
sub
int
push
adc
xchg
daa
sbb
add
fisubl
jb
aad
dec
lret
lods
cmp
xchg
adc
push
iret
aad
fdivrs
addl
push
int
push
js
lock
push
mov
mov
je
js
and
and
xchg
pushf
ret
pop
icebp
xchg
dec
rsm
pop
lock
pop
mov
mov
jl
std
scas
cmp
pusha
aad
jp
cltd
aaa
mov
movsl
call
pop
popa
mov
dec
lock
ds
cmp
sti
cmpsb
sbb
out
add
int
mov
ds
fisttpll
xor
arpl
cli
shl
xor
repz
adc
xchg
rorl
mov
xchg
push
repz
dec
std
sti
jo
jp
or
xor
dec
mov
aas
sub
sbb
push
pop
popa
aaa
pop
cmp
dec
in
popf
ficompl
mov
xchg
sub
or
pop
xor
shlb
xchg
sub
stc
in
shlb
push
mov
outsl
mov
stc
mov
pushf
aam
dec
add
mov
cltd
dec
cmpsb
add
insl
or
mov
lahf
repnz
xchg
jge
in
push
loope
mov
and
test
pop
hlt
dec
in
jge
mov
and
mov
data16
ljmp
stos
cwtl
int
cmpsb
insb
in
mull
push
movsb
andl
mov
rcrb
mov
and
sub
mov
leave
mov
inc
loopne
loop
mov
push
sahf
mov
notb
cmc
movsl
inc
adc
cmp
or
sub
pop
adcl
jg
or
data16
dec
mov
arpl
scas
shrl
mov
lds
loope
icebp
and
jp
jnp
imul
nop
clc
jns
or
push
adc
mov
lret
xor
or
rcll
adc
dec
push
push
inc
cmp
cmpsl
test
dec
cld
sub
popf
jle
push
sub
int
ljmp
dec
fists
jne
fmuls
insl
ret
imul
shl
mov
lods
sarl
out
mov
sub
add
jp
jg
ficompl
xchg
and
mov
inc
cli
xorl
sbb
jo
cmp
aad
ljmp
add
dec
cmp
enter
daa
imul
in
mov
bound
pop
fdivs
faddl
add
mov
jge
lahf
add
mov
sbb
mov
push
pop
and
cld
insl
xchg
roll
scas
xor
xchg
arpl
xor
jne
lahf
push
mov
lret
dec
and
cmp
into
lea
mov
or
cmp
push
jp
jns
xor
cld
inc
adc
loop
test
orl
int3
movsl
ja
pop
adc
data16
cmp
mov
xor
xchg
pop
test
out
jbe
inc
rcrl
mulb
xchg
sub
sub
mov
cmp
mov
test
test
mov
dec
lea
data16
mov
in
inc
cs
push
mov
and
push
ljmp
sarl
pop
sbb
mov
ja
lcall
sbbl
ss
mov
ss
cmp
inc
xor
divb
je
dec
and
es
loop
jnp
ret
insb
aaa
rcrl
xchg
adc
pop
jg
dec
lret
jl
pop
fistpll
mov
push
mull
dec
mov
xlat
inc
or
mov
jmp
repnz
jo
loopne
push
lret
lret
adc
inc
stc
out
shlb
aad
adc
and
test
sub
pop
mov
andl
icebp
dec
mov
hlt
ret
test
fisubl
pop
xchg
sbb
sub
mov
addb
adc
ja
pusha
flds
xchg
jge
mov
pop
out
sbb
imul
pop
xchg
pop
sbb
adc
jmp
jo
insb
jmp
jge
inc
add
fldenv
xor
jge
add
xchg
and
pop
pop
push
pop
xchg
mov
bound
lds
hlt
ss
stos
mov
loopne
imul
leave
mov
mov
sub
imul
mov
in
sub
cmp
call
adc
jecxz
xor
enter
cmp
fcmovnb
push
pop
jb
sbb
adc
lret
inc
adc
test
dec
cmc
sub
cmp
ss
xchg
jne
jae
setne
icebp
sub
xor
push
jl
stos
daa
loop
mov
inc
inc
xlat
pop
jae
incl
sbb
adc
jge
test
mov
pop
jp
push
dec
aas
mov
repnz
push
in
test
mov
popa
inc
pop
dec
stos
hlt
mov
cmpsl
mov
decl
rorl
xchg
push
inc
add
lods
cmp
mov
push
sbb
push
movsl
mov
adc
sub
add
mov
imul
pusha
dec
cltd
and
fwait
push
mov
stos
js
or
imul
mulb
cmp
mov
pop
in
xchg
outsb
fisubrs
dec
push
xor
aaa
xchg
sub
jp
and
out
cmp
cmp
push
sbb
loop
pop
frstor
in
and
call
mov
ss
dec
adc
inc
inc
sbb
data16
adc
scas
jno
cmc
hlt
daa
xchg
iret
je
call
movsl
jbe
ja
push
sub
mov
fcoms
fiadds
int
cmp
stos
adc
mov
xchg
shl
mov
addl
sbb
jne
jne
test
jnp
fldz
aaa
and
js
cmp
xlat
adc
push
mov
mov
push
int
ret
out
pop
xchg
fists
insl
cmp
inc
ret
jg
mov
inc
fimull
inc
lcall
std
dec
xchg
mov
pusha
mov
or
push
push
in
add
inc
push
push
xchg
loop
sub
push
imul
mov
iret
rcll
push
and
lret
ss
mov
test
dec
add
sbb
xchg
or
add
pop
mov
sbb
shlb
aaa
xchg
cmp
push
shrb
lods
fsub
xchg
mov
lods
dec
loop
cmp
xchg
scas
adc
fmull
jbe
jae
push
popa
mov
pop
dec
mov
lods
ret
insb
call
out
iret
xchg
adc
or
insb
mov
xchg
xor
test
fimuls
mov
pop
iret
jecxz
test
or
xor
xchg
rcrb
iret
fwait
scas
test
shr
pop
push
jb
pop
outsl
sub
insl
xlat
jno
ja
or
xchg
addr16
xchg
das
pop
notl
scas
or
daa
bound
insl
or
lds
popa
iret
or
arpl
repz
rclb
imull
mov
ljmp
mov
loopne
add
rcrl
cmp
sub
outsb
inc
loop
cs
push
mov
mov
lahf
sub
cwtl
rorb
inc
leave
out
insb
cmpsl
ss
aas
bound
icebp
xchg
out
sarb
xchg
pop
push
lds
mov
shlb
and
icebp
mov
orl
repz
dec
into
lods
int3
arpl
inc
dec
cmp
aaa
jl
sub
xchg
ret
cltd
repnz
mov
rorl
or
push
inc
cmp
fidivs
iret
aam
sahf
xchg
mov
movb
mov
xchg
mov
in
push
popa
adcb
gs
sub
xchg
outsl
into
outsl
enter
loope
shl
or
pop
clc
stos
stc
pushf
clc
cmp
fwait
jbe
sub
fwait
inc
push
lock
push
lcall
ja
and
popa
inc
std
lret
mov
lock
pop
adc
sub
push
rorl
cli
mov
cmp
popf
xchg
iret
hlt
aam
adc
pop
jle
out
outsb
lock
es
dec
push
cmp
cli
bound
pop
jecxz
inc
test
lahf
jmp
add
inc
pop
mov
std
scas
cmp
es
aam
mov
ficomps
cwtl
dec
mov
outsb
in
mov
or
stc
and
ja
fs
mul
fidivl
and
adc
jb
gs
dec
test
sub
cltd
dec
inc
add
iret
dec
aaa
mov
xchg
jb
adc
pop
or
js
push
mov
pop
inc
push
negl
jo
pshufw
inc
mov
mov
jae
fadds
or
dec
ljmp
xchg
out
insb
mov
cmp
pop
mov
xchg
push
sub
mov
xor
das
popa
mov
push
out
or
push
cli
test
out
in
mov
xchg
dec
fiadds
cmp
sbb
add
add
sub
mov
sub
fldt
sub
xchg
add
pop
faddl
es
push
gs
cmp
sbbb
shl
xor
insb
roll
inc
js
or
push
sub
stc
lret
push
jle
jo
sub
add
xor
lcall
addr16
add
add
xchg
sahf
xor
ficomps
mov
adc
cmp
sub
mov
push
xchg
push
jno
andl
pop
ja
dec
negb
xor
idivb
dec
cmp
cltd
push
outsb
xlat
dec
popf
jno
in
aam
sbb
into
mov
push
xchg
int
inc
mov
into
xchg
and
and
std
mov
and
jle
popa
sub
fiaddl
mov
cmp
pusha
pop
bound
popf
mov
jg
dec
inc
imul
mov
test
int
test
mov
inc
lds
add
dec
out
imul
jno
mov
ret
jp
nop
xlat
inc
and
mov
pop
int
mov
sub
push
mov
jne
xchg
stc
or
in
xchg
add
stos
in
inc
icebp
add
jae
add
mov
dec
repnz
xor
aas
cmpsl
push
rep
mov
jmp
add
addr16
stos
or
mov
cmp
lods
dec
lea
adc
test
xor
push
je
push
filds
or
ret
mov
je
repnz
pop
ljmp
inc
pop
jb
ja
movsb
aad
xchg
cltd
fistpl
mov
sub
movsl
sub
sbb
mov
imul
sti
jae
jmp
popf
jae
pop
jmp
or
lcall
cmpb
adc
jl
mov
movsb
mov
push
scas
mov
cltd
xlat
ret
jns
sbb
stc
cmp
cmpsl
mov
movsb
mov
cmp
sub
xchg
rcl
ss
inc
push
std
gs
loopne
loopne
js
adc
hlt
or
sbb
in
sbb
sbb
fidivrs
pop
pop
outsb
add
mov
sbb
dec
shl
int
sbb
sub
xor
jo
test
popf
lret
pop
jp
repz
stos
push
push
inc
jg
roll
leave
addr16
dec
mov
jg
imul
cwtd
cmp
cltd
xlat
dec
xor
movsl
jbe
leave
addr16
cmpsl
call
in
lds
sub
outsb
sbb
roll
adc
sub
or
fnstsw
movsb
jne
inc
bound
push
mov
rcrb
aas
test
inc
mov
lret
pop
std
daa
jnp
imul
lods
inc
gs
sti
mov
mov
jecxz
fsts
dec
call
mov
and
push
push
sbb
lea
mov
jle
jecxz
int3
push
push
lret
pushf
ss
in
shlb
xor
je
in
xor
pop
mov
nop
jae
fidivs
shll
aas
lods
xchg
movsl
cmc
incb
int3
jge
adc
sbb
adc
push
dec
out
push
shll
sarl
push
jmp
lret
icebp
cmp
adc
xchg
sub
cli
cmpl
cmp
xchg
dec
xor
mov
pop
insb
pop
repz
xor
in
pop
sbb
filds
cltd
aad
xor
pop
mov
lds
icebp
cmp
loop
dec
test
sti
and
xchg
mov
pop
scas
push
fcmovnb
inc
pop
in
outsl
jns
jo
jb
pop
rclb
fstl
xor
adc
inc
mov
add
cwtl
push
rorb
adc
sub
imul
je
xor
jno
inc
inc
dec
ret
dec
arpl
das
dec
pop
cmp
int3
addr16
xchg
sub
out
push
lcall
adc
mov
sbb
andl
cmp
lahf
stos
daa
hlt
cmpsb
inc
fs
in
les
sub
leave
push
pop
sbbl
scas
push
fwait
pop
repz
adc
mov
movsl
lahf
das
jl
xor
push
xlat
push
inc
jne
fwait
lret
imul
jbe
dec
cld
sbb
out
cwtl
jmp
add
mov
div
mov
mov
push
andb
cltd
adc
lods
or
pop
in
jns
sbb
shlb
hlt
data16
xor
mov
fidivs
out
sbb
and
hlt
xor
outsb
in
es
xchg
rcrl
jl
in
int3
jp
push
fs
jo
mov
or
ss
imull
test
lret
aaa
adc
js
je
subb
xor
sub
rorb
cltd
cltd
je
aam
xchg
mov
ja
mov
cmp
mov
mov
xchg
mov
sarb
bswap
pop
gs
push
mov
xlat
dec
pop
aas
fsubrs
mov
out
xor
out
mov
mov
push
cmc
lret
mov
lret
sbb
inc
cmc
rorl
sbb
add
icebp
add
sahf
inc
or
sbb
push
pushf
push
mov
out
es
jge
xor
ret
repnz
push
add
movsb
dec
aaa
jnp
mov
loopne
push
sbb
push
lds
sahf
enter
push
pop
int
and
cli
add
adc
sub
lahf
push
divb
sarb
test
into
add
xor
mov
cmpsl
cltd
push
add
sahf
scas
jb
pop
fldenv
mov
sbbl
sbb
lret
inc
shlb
leave
fcmove
sarb
shrl
out
test
mov
adc
test
xchg
add
imul
je
fidivrl
xchg
fwait
cmp
push
mov
xor
push
sbb
test
hlt
out
xchg
sub
sub
adc
and
loop
dec
in
dec
push
adc
inc
addl
lahf
or
xlat
stos
mov
addr16
push
cmp
std
stos
adc
inc
fsubs
sbb
fnstsw
movsl
and
push
fisubrl
adc
or
insb
sahf
aam
sub
sti
dec
push
jmp
sbb
dec
fiaddl
add
or
js
fcomip
mov
addr16
ljmp
ficoml
int
adc
aad
divb
mov
mov
fs
jns
dec
inc
mov
popa
clc
and
push
mov
lret
ret
mov
dec
filds
scas
jbe
pop
and
cmpl
enter
add
das
adc
mov
fisubrl
rclb
sbb
mov
pop
rcl
filds
adc
insl
test
fmull
into
scas
ret
in
jbe
mov
inc
mov
iret
popa
mov
addl
cmpsl
scas
ja
movsb
pop
mov
or
push
mov
ficompl
mov
and
adc
mov
mov
or
jl
test
push
push
aad
mov
and
mov
std
mov
xchg
adc
nop
enter
jmp
repz
or
inc
mov
pop
jns
push
push
leave
pop
movl
stos
and
jae
sbb
lea
xchg
push
pop
outsl
xchg
gs
cwtl
push
dec
lea
insb
add
and
ret
mov
pushf
repnz
cmp
int3
mov
cmp
or
sbb
insb
add
and
ret
mov
pushf
repnz
cmp
int3
mov
or
insb
bound
cld
add
and
jl
pushf
repz
sub
int3
mov
pusha
push
push
bound
insb
add
and
xor
pushf
test
pop
and
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
adc
and
push
test
rcll
adc
ret
repz
jecxz
adc
and
jae
arpl
movl
ret
jae
inc
jecxz
adc
and
jae
arpl
xchg
and
fs
xor
roll
notb
sub
clc
and
jl
add
sar
jle
mov
cmp
mov
add
xchg
cs
out
sub
das
repnz
test
sti
mov
into
or
repnz
imul
jae
dec
enter
adc
incl
dec
inc
jle
ret
push
loope
mov
push
xchg
rcll
sub
mov
ja
pop
jle
in
and
jb
bound
mov
arpl
popa
adc
not
in
pop
cmp
je
ret
sbb
shr
ret
dec
jmp
out
out
dec
ret
inc
mov
mov
mov
push
loope
icebp
jae
arpl
xchg
and
or
jns
imul
mov
inc
hlt
aas
jecxz
nop
push
lods
and
add
stos
jae
cs
adc
jno
arpl
inc
adc
mov
jecxz
push
adcl
xchg
jno
es
jp
addr16
in
aam
rolb
jae
arpl
xchg
and
adc
popa
ret
jno
inc
jecxz
adc
and
jae
arpl
xchg
and
adc
popa
ret
jno
inc
jecxz
adc
pop
xchg
mov
outsl
lret
into
cli
mov
icebp
inc
pop
nop
jb
xor
hlt
pop
xor
sbb
cmp
adc
out
dec
shrb
je
xlat
or
and
and
pop
sub
rorb
jb
testl
test
cmp
push
sbb
dec
xchg
hlt
add
xchg
ret
mov
stos
sub
or
daa
shll
sbb
mov
adcb
or
int
orl
adc
lods
stc
pop
aam
push
mov
sub
scas
cli
jmp
daa
push
mov
or
xor
movsl
jmp
sub
push
mov
pop
pushf
push
pop
push
pusha
mov
bswap
pushf
jne
mov
and
xchg
mov
stc
pusha
lds
repnz
and
mov
add
or
add
std
and
fdivrl
aad
xchg
orl
add
push
or
addb
adc
lods
ljmp
sbb
jo
jmp
lock
pop
dec
xchg
les
cmp
jae
mov
lea
cmpsb
or
sbb
aas
cli
movsb
sub
jno
test
clc
clc
pop
lahf
jle
dec
data16
xchg
sbb
push
jnp
in
sbb
pusha
mov
arpl
dec
dec
or
push
iret
xchg
lock
inc
into
push
mov
fimuls
outsl
js
cmp
mov
inc
bound
daa
jmp
pop
push
xorb
pop
les
and
mov
xchg
pop
jae
sbb
dec
inc
outsb
loope
lret
aas
mov
stos
cwtl
imul
xorl
pop
scas
scas
int
sub
xor
dec
push
push
mov
test
mov
repz
into
push
or
xchg
add
sub
sub
loop
mov
out
shl
test
test
stos
lds
outsl
imul
mov
dec
stc
or
dec
pop
lahf
outsb
movsl
pop
iret
push
in
adc
mov
xor
push
dec
outsl
loopne
xor
cwtl
aad
imulb
sbb
cli
and
cmp
xchg
inc
and
shl
in
xor
xor
ja
xchg
jnp
inc
shlb
cmp
es
punpcklbw
fwait
ret
push
out
push
cmp
fnstcw
push
inc
jns
pushf
and
inc
inc
lret
mov
jg
mov
pop
popf
into
mov
inc
adc
sub
or
inc
push
or
jns
sbb
mov
jae
das
out
imul
shr
mov
fidivs
jg
ret
cmp
sub
orl
cmp
or
lock
out
popa
sbb
es
and
cwtl
inc
shlb
mov
mov
add
pop
das
pop
adc
lea
test
call
sbb
jecxz
mul
pop
enter
inc
adc
lods
aam
sbb
push
sub
add
insl
dec
sub
jo
sti
loope
mov
cld
stos
imul
inc
xor
jbe
pop
mov
loop
gs
sbb
jnp
inc
lret
ljmp
clc
mov
dec
adc
pop
sbb
aam
loopne
mov
test
ret
push
les
sarl
mov
sub
lcall
rcrb
cmp
xchg
imul
jecxz
stos
pop
mov
ficoms
push
or
xchg
ds
push
repz
jno
fisttpll
scas
leave
push
addl
jmp
mov
fldt
or
cmp
ja
inc
add
and
loopne
sbb
add
cmp
lcall
ds
cltd
adc
add
ret
jns
mov
jo
jmp
hlt
pop
bound
popa
sbb
clc
je
adc
push
insb
pop
pusha
les
sub
shll
xor
stc
in
mov
mov
xchg
ljmp
mov
cs
jns
mov
movsb
arpl
lods
xor
rcrb
dec
and
lds
shrb
or
insl
fwait
push
push
cmp
int
test
ja
adc
testl
xor
dec
cmp
push
and
popf
mov
sbb
arpl
dec
stos
in
adc
or
jae
cwtl
sbb
ret
test
ja
lret
push
xchg
daa
ret
lods
pushf
jo
or
adc
scas
inc
aas
mov
sbb
mov
inc
inc
xor
out
jbe
orl
cmp
lret
outsb
arpl
xor
mov
adc
mov
mov
cli
scas
sbb
dec
jbe
cli
and
in
rep
xchg
fimull
xchg
adc
aaa
cmp
aas
das
cmp
dec
jo
mov
scas
pop
mov
mov
rorl
pop
nop
jge
psubusw
fcomps
xchg
sbb
adc
es
sub
add
imul
push
sahf
and
inc
sub
sbb
xchg
xchg
xchg
movsb
xchg
jle
cli
pop
and
fiadds
sub
mov
cli
mov
cmp
pop
mov
and
aam
adc
and
fiadds
shlb
push
ss
stos
jl
into
testb
add
lea
jbe
arpl
fcmovb
mov
jmp
jne
lcall
negl
out
dec
in
push
icebp
into
fsub
ss
sbb
mov
mov
in
dec
xchg
push
sub
inc
ret
xchg
inc
cs
jecxz
rclb
inc
clc
iret
ss
aam
popf
int
and
sub
sbb
jmp
scas
mov
adc
push
ret
sbb
sahf
inc
pop
adc
nop
jp
subl
insl
inc
lahf
fsubrl
or
sub
enter
neg
jo
stos
xchg
adcl
xor
cmp
mov
fiaddl
xlat
cmp
fwait
in
roll
jmp
push
mov
jl
shld
nop
jp
push
rcl
dec
xor
xor
and
or
jmp
sbbb
sub
movsl
push
shrb
and
sahf
mov
pop
fidivrl
stos
sbb
inc
lea
and
sbb
addr16
in
mov
hlt
jmp
lods
mov
jge
mov
or
inc
outsb
pop
and
leave
mov
push
lahf
test
hlt
add
mov
rorl
cltd
push
movsb
cli
jb
jno
push
jge
mov
cli
into
imul
dec
pop
mov
add
pop
idiv
hlt
aam
xchg
mov
xchg
stc
mov
cs
popa
ja
bnd
add
push
test
adc
cmpl
dec
cli
mov
adc
xchg
add
cs
test
int3
rorl
mov
int3
scas
filds
std
jo
mov
mov
dec
iret
push
pop
jl
mov
fidivrl
call
mov
jmp
cmp
jp
push
push
test
fs
cmp
call
and
mov
aam
mov
pop
jg
push
push
test
leave
inc
or
int
lock
adc
dec
xor
out
fwait
sbb
popf
and
mov
add
repnz
lods
stos
pop
cld
mov
out
sub
pop
mov
fcom
push
jbe
fisttpll
mov
xchg
sub
push
pop
pop
icebp
xchg
stos
xchg
push
movb
mov
stos
enter
sbb
dec
loope
and
mov
inc
popf
or
or
cmp
mov
data16
outsb
enter
ds
sub
test
add
pop
cld
pop
cmp
dec
push
jo
adc
imul
or
mov
cli
adc
out
scas
mov
cmp
sbb
mov
lret
push
jae
imul
call
and
jbe
nop
xchg
pop
pop
aad
outsl
ret
sarb
push
push
sub
lock
ss
sub
lcall
repz
mov
and
jne
mov
fs
mov
in
push
adc
ss
pop
fldt
and
icebp
jne
fdivrl
sahf
and
dec
xchg
dec
sbb
ficoms
dec
push
stc
test
jae
sub
test
mov
loope
daa
pop
loope
cmp
loop
fstl
andl
fnstcw
mov
mov
mov
cs
sbb
mov
xor
mov
mov
jle
mov
mov
das
xor
fcoms
ret
ficoml
mov
ljmp
mov
in
mov
fists
mov
ja
inc
cmc
mov
nop
orb
pop
add
mov
mov
test
push
stc
mov
push
push
popa
sbb
jmp
sbb
pop
mov
test
mov
cmp
sub
jbe
insl
sub
orl
pop
add
mov
jae
pop
sbb
fwait
popa
fsts
ljmp
pop
cs
shlb
mov
xchg
mov
add
nop
popa
mov
sub
dec
mov
mov
nop
lret
out
iret
fdivs
mov
inc
and
push
mov
push
mov
in
xlat
mov
imul
mov
jns
scas
add
test
jge
and
cmp
jo
mov
stc
pop
mov
movl
int3
insb
sbb
scas
pop
psrlq
jbe
shl
out
mov
mov
rclb
mov
lsl
cmp
mov
jge
push
add
sub
shl
xchg
addr16
pop
mov
sbb
dec
aas
xchg
pop
pop
andl
cmp
aam
pusha
mov
mov
jae
ja
pop
outsb
shr
and
xchg
push
sub
mov
repnz
fsubl
loopne
jp
sbb
cmp
pusha
lock
or
xchg
pop
push
scas
sub
xlat
inc
mov
jmp
in
ret
cmp
inc
adc
mov
adc
sub
sarb
jb
sub
push
loope
cwtl
mov
push
pop
sub
jmp
rcll
mov
outsb
xchg
jb
fadds
cwtl
xchg
test
sbb
fcomip
mov
xlat
or
mov
and
dec
idivl
idiv
cmp
js
mov
cltd
movsb
push
adc
andb
adc
ja
dec
xchg
std
pop
xlat
xchg
adc
lea
insl
xchg
xor
mov
or
add
xchg
or
jo
pop
loopne
insb
popf
mov
sbb
push
cmpsb
pop
pop
add
add
leave
add
cmp
inc
jno
mov
je
xchg
ja
jge
jge
push
imul
mov
pusha
xchg
xchg
xchg
mov
push
repz
push
adc
push
push
sbb
push
cmp
mov
push
jns
mov
idiv
push
mov
aam
lretw
iret
rcrl
xchg
stos
rcll
movsl
add
pusha
adc
nop
adc
pop
shl
push
inc
call
mov
sub
and
sarl
popa
mov
hlt
imul
mov
xchg
cmp
ret
inc
clc
jmp
mov
test
xchg
mov
out
pop
fildll
mov
cmp
dec
enter
xchg
or
das
outsl
mov
jae
xchg
ret
xor
push
ss
test
push
shll
je
or
or
addr16
lea
cmc
std
cmp
enter
xor
mov
test
dec
arpl
scas
jbe
jmp
jge
lret
sub
xor
stos
or
mov
lock
das
fsts
mov
jnp
jp
mov
enter
dec
popa
mov
cmp
sub
jl
push
or
or
cmp
fldpi
and
xchg
sub
jnp
cmc
sahf
icebp
popa
jle
clc
dec
dec
fstps
xor
jnp
shlb
ljmp
mov
lods
movsl
incl
cmp
xchg
push
jecxz
inc
mov
imul
jl
loop
lret
sbb
aaa
loope
adc
je
test
leave
loope
xor
sub
mov
jl
in
and
inc
fwait
mov
xchg
jecxz
cmp
jge
pushf
sti
pop
xor
push
iret
outsl
xacquire
push
or
test
int
mov
ret
inc
push
ljmp
fldenv
shll
sbb
sub
insl
dec
fwait
iret
push
xor
arpl
xchg
test
mov
std
dec
jno
nop
pop
pop
aam
fistpl
loopne
decb
push
ret
add
fmull
lea
jecxz
mov
es
aaa
mov
mov
dec
push
dec
into
sub
add
ds
pop
sub
pop
inc
outsl
int3
les
add
mov
cmp
gs
std
es
pop
scas
aam
jnp
and
xchg
or
jl
or
mov
lcall
adc
je
adc
faddl
out
mov
jne
aas
lods
fwait
cmp
xor
mov
xchg
int
mov
mov
in
mov
insl
inc
adcb
jge
loope
popa
add
hlt
mov
lret
shl
mov
fstpt
insb
dec
pop
pop
ds
sbb
aam
or
bswap
cmp
cmp
decb
mov
shr
xchg
leave
cs
sub
jg
pop
js
pop
sbb
sbb
test
pop
dec
adc
je
and
xchg
insl
cmp
and
js
push
jmp
pop
and
fimull
cltd
or
jae
shll
subl
push
das
xchg
test
mov
or
ljmp
std
fs
loop
in
repnz
or
rclb
mov
mov
pushf
push
shrl
ss
push
xor
les
mov
nop
mov
dec
jmp
es
ljmp
int
mov
and
or
shrl
pop
xchg
in
sarl
inc
popa
gs
or
xor
shll
mov
mov
pop
ret
fidivs
cli
mov
mov
ficoms
adc
lods
imulb
out
clc
mov
cmp
pop
sbb
orb
sub
fistl
dec
aas
mov
in
mov
xor
cmpsb
cmc
xor
or
sub
mov
fsubrl
dec
mov
ror
subl
dec
lock
repnz
pop
das
mov
in
lret
jp
mov
push
in
jl
jne
dec
lahf
stc
repz
pop
je
sub
jno
pop
sbb
push
aad
and
repz
cmp
or
jnp
mov
push
and
and
out
test
cmp
mov
sub
lea
ja
and
clc
dec
pop
jg
cmp
jg
or
data16
mov
nop
dec
loope
jle
adc
pop
imul
test
cmpsl
jmp
jns
sbb
out
int
lods
push
insb
decw
add
sar
cwtl
xor
push
in
cltd
cmp
gs
cwtl
ds
cmpsl
enter
add
sub
xchg
cmp
adc
mov
sub
jg
data16
xchg
add
push
sahf
ss
iret
fildl
sbb
mov
out
or
outsb
mov
inc
scas
ror
and
xor
add
add
and
jns
or
dec
mov
scas
out
jle
mov
mov
ja
adc
jmp
xor
shlb
clc
mov
or
gs
mov
inc
cmpsl
xor
jns
fnsave
push
popf
xchg
cltd
dec
push
fs
stc
add
stos
sub
jae
inc
and
push
faddl
adc
fwait
lret
mov
inc
cmpsl
xor
adc
lds
xchg
mov
roll
mov
jecxz
jge
jo
adc
dec
pushf
jnp
movsl
jge
dec
dec
jns
pop
xor
mov
jg
dec
mov
and
les
aaa
inc
push
icebp
cmpsl
loopne
daa
xchg
daa
aas
aam
stos
out
mov
ret
or
out
sbb
inc
jmp
xor
cs
je
sahf
mov
cs
mov
cmp
shll
repz
test
rorb
push
pop
les
xchg
mov
pop
sbbb
movsb
jp
jo
inc
inc
mov
mov
in
aas
mov
divl
fsubs
push
sbb
das
movsb
adc
divl
cmp
push
mov
sarl
mov
jnp
pop
enter
out
sub
lahf
add
mov
mov
out
push
pop
cmp
jg
mov
adc
adc
imul
cmpsl
nop
sti
ja
xlat
push
repnz
movsl
and
or
sub
out
add
and
jbe
jp
xor
dec
ljmp
fsubs
mov
dec
push
popf
cltd
repnz
sub
add
and
movsb
imul
mov
push
enter
push
movl
in
lcall
in
scas
xchg
cmp
mov
insb
and
jno
cmpsb
push
xchg
pop
das
inc
inc
mov
ret
loopne
jo
adc
rcrb
notl
into
sahf
push
jle
les
pushf
cmp
mov
jge
cmp
repz
jl
jp
sbb
mov
xor
shll
clc
xchg
dec
lock
dec
mov
mov
pop
sub
sub
in
pop
push
xchg
xor
in
movsl
xchg
xchg
aad
lcall
fadd
mov
popa
ds
or
mov
sahf
lcall
xor
xchg
imul
pop
jnp
popl
mov
sar
enter
call
into
out
lock
shlb
aas
enter
outsb
jns
mov
and
add
hlt
sbb
jg
pop
repz
stos
cmp
fdivrp
dec
gs
fsts
mov
lock
aad
test
lock
xor
dec
mov
cmpsb
adc
sahf
and
addr16
mov
or
xlat
lds
inc
push
ds
in
and
daa
aaa
lock
popa
adc
lahf
sub
aas
out
or
sar
loop
sub
lcall
call
lods
in
mov
test
lret
xchg
mov
mov
xor
xor
mov
enter
insl
fucom
push
arpl
testl
insl
shrl
fxch
test
insb
push
out
or
pop
imulb
addb
cmp
xchg
lock
xor
or
imul
pop
pmuludq
imul
mov
pop
sub
pop
in
jbe
pop
cmp
std
adc
stos
lods
mov
cmp
cli
or
mov
lcall
inc
std
in
mov
xor
in
push
outsb
aas
push
push
movsb
add
enter
push
lea
divb
mov
push
pop
mov
jecxz
sbb
dec
inc
mov
pop
jg
push
pop
cmp
shlb
popa
sahf
jnp
imul
and
dec
in
mov
cmpb
out
data16
in
sbb
sub
or
loope
iret
push
sbb
adc
add
insl
dec
mov
mov
rcrl
jge
sarb
inc
or
or
mov
adc
add
sahf
loope
sub
cmc
pusha
incb
daa
ljmp
or
or
popf
xchg
mov
mov
cs
dec
sbb
xchg
sbb
ror
jmp
mov
movsl
xchg
inc
sahf
adc
je
and
test
push
sbb
sbb
or
outsl
ss
push
ss
les
dec
jmp
lret
imul
pop
cmp
sbb
and
daa
scas
daa
cmp
enter
mov
adc
loope
arpl
jnp
aas
call
adc
and
inc
or
sbbb
aaa
in
sbb
repz
cmp
push
je
push
ja
insl
jl
movsl
jb
cltd
outsl
into
out
sub
cmc
push
push
xchg
add
pop
jne
mov
aas
in
les
shll
movsb
enter
push
gs
xor
aam
dec
push
shrb
mov
jnp
sub
xorb
adc
aad
movsb
shl
mov
into
and
aad
sarb
xor
in
imul
repnz
andl
icebp
jae
arpl
xchg
and
adc
popa
ret
jno
inc
jecxz
adc
and
jae
arpl
xchg
and
adc
popa
ret
jno
inc
jecxz
adc
and
jae
arpl
xchg
and
adc
repz
jecxz
adc
and
jae
arpl
xchg
and
data16
jmp
sbb
cli
mov
pop
subb
inc
cmpl
cmp
add
xor
pusha
lea
lahf
inc
lods
push
mov
mov
nop
jge
or
rorb
int
std
fs
sar
pusha
loop
popf
inc
in
push
mov
cwtl
lds
and
ret
and
insb
mov
mov
cmp
mov
int3
sbb
sub
cmp
repz
in
into
enter
cld
mov
dec
call
cmp
shll
psraw
insl
sbb
call
sbb
pop
lods
lods
fnsave
sub
ja
push
scas
pop
icebp
and
and
pop
push
pusha
out
jo
lods
xor
lods
jo
mov
in
sub
rol
adc
pop
lea
fmuls
mov
bound
inc
mov
mov
ds
mov
xor
and
iret
int
sub
std
lret
pushf
int
test
inc
lea
inc
pop
dec
jnp
and
rcr
iret
mov
adc
in
mov
mov
dec
mov
sub
ja
or
leave
mov
sbb
or
inc
lods
dec
rcl
pop
aad
in
hlt
push
test
jb
inc
mov
cwtl
jb
jle
or
adc
and
or
pop
xchg
bound
push
and
gs
push
leave
sbb
push
cwtl
imul
cmp
add
adc
pusha
lea
inc
lods
push
mov
subb
loopne
lock
and
xor
add
adc
pusha
lea
inc
lods
push
mov
fxch
clc
push
iret
xchg
fdivrl
jg
mov
or
daa
push
fsubr
rorb
js
hlt
das
pop
insb
sbb
sbb
mov
arpl
inc
out
ffree
ljmp
pop
loopne
xlat
clc
push
ret
icebp
mull
sti
pop
mov
call
jge
and
outsb
add
loop
fwait
enter
xor
gs
push
bound
lcall
jl
jecxz
mov
loop
inc
scas
shld
neg
cmpsb
lods
aad
orl
jo
lret
mov
lahf
pop
dec
out
cmpsb
mov
cmp
dec
dec
add
out
es
add
je
into
push
cmp
cli
popf
adc
mov
in
mov
sarl
cs
push
pop
imul
sub
inc
push
and
or
loop
push
push
mov
jmp
mov
loopne
test
pop
jnp
insb
pop
mov
push
push
sbb
or
xlat
in
push
inc
cmp
out
jmp
stc
out
xor
jbe
sahf
add
mov
inc
push
imul
mov
shlb
xchg
lcall
mov
out
push
push
repnz
or
sarl
mov
mov
sub
icebp
mov
inc
inc
xchg
adc
sti
xchg
test
add
aaa
jb
xor
cs
imul
stos
or
repz
cmp
lods
arpl
ja
mov
and
adc
add
ljmp
jl
push
adc
les
stos
sub
lods
arpl
add
popa
enter
scas
shrb
sbb
xor
mov
insl
inc
jge
xchg
jge
outsl
jge
dec
and
kaddb
sti
cmp
enter
mov
insl
mov
mov
xchg
cmp
jecxz
sbb
in
cmp
ds
test
jle
cmp
sub
mov
add
in
nop
xor
enter
mov
push
sbb
fwait
in
push
cmp
test
jl
or
dec
push
xchg
pushf
and
rol
jg
je
jg
cmp
mov
insb
mov
ficoml
in
pop
mov
mov
cwtl
cld
repz
scas
inc
pop
and
insb
jnp
inc
xchg
or
dec
cli
xchg
inc
dec
loop
adc
push
add
fcmovnbe
fildll
lds
push
cmp
outsb
outsb
cmp
push
sbb
and
pusha
mov
cmp
mov
and
push
jbe
cmpsb
lods
pop
sub
push
in
xor
enter
int3
enter
push
push
outsl
add
cltd
inc
mov
jg
push
insl
jne
fstpl
inc
out
loope
outsl
aad
test
ljmp
pop
repnz
inc
lds
dec
or
imul
xchg
inc
pop
adc
and
dec
int3
or
out
fldlg2
pop
leave
cwtl
or
hlt
rorl
push
testl
pop
das
das
mov
or
mov
mov
and
pop
mov
aad
pop
mov
xchg
pop
aaa
add
aam
push
pop
sbb
fidivl
movsb
cs
pusha
mov
mov
lret
roll
dec
cmp
test
add
jne
outsb
pop
cli
inc
or
mov
shll
jg
add
mov
or
lds
mov
ljmp
repnz
mov
aad
or
xchg
lods
add
or
or
pop
and
mov
lret
pop
icebp
into
adc
lea
sub
adc
mov
int3
call
roll
push
lret
add
mov
push
xchg
pop
les
test
lock
adc
repz
pop
fiadds
mov
mov
and
or
mov
repz
jmp
push
fstl
sub
or
dec
lods
jnp
fcmovb
inc
lods
push
inc
jge
xor
and
xchg
fldenv
cli
dec
push
imul
imul
fdivrl
sti
mov
notl
test
movsb
enter
cmpl
add
mov
pusha
dec
stc
mov
dec
pop
lret
out
mov
mov
sub
jb
into
xlat
leave
std
xor
loop
lods
outsl
ret
mov
jg
mov
jo
push
cwtl
es
ret
push
cmp
dec
sbb
jae
sbb
addr16
pop
notb
xor
lahf
aad
sub
stos
pop
insl
or
sub
es
icebp
push
xchg
and
mov
enter
out
in
lock
insb
arpl
aam
sbb
xor
lock
adc
mov
cli
js
cmpsl
xchg
adc
ss
sub
jp
test
pop
iret
notl
xchg
sti
jmp
push
mulb
sub
jge
pusha
jb
xchg
pop
jbe
movsl
and
jnp
jg
clc
fadd
mov
lods
inc
cmp
push
cmc
xlat
xchg
sti
jnp
std
movsb
out
inc
out
and
xchg
sbb
pop
mov
nop
or
leave
mov
fstl
aaa
mov
sbb
mov
cmp
jg
mov
mov
test
pop
cmpsl
cmpsl
jbe
cmp
outsl
and
xchg
movsb
cmp
fdiv
or
sbb
and
test
cmpsl
pop
jle
rcll
ljmp
push
xchg
mov
add
out
leave
cmp
pop
push
iret
add
jmp
or
pop
mov
sub
std
in
inc
lret
addb
dec
ss
insb
aaa
pop
mov
xchg
cmp
mov
addr16
stos
or
push
pushf
in
mov
sbb
jg
pop
jecxz
loopne
xor
mov
fmulp
xchg
cmp
jmp
loope
sub
add
mov
out
mov
sbb
inc
out
lods
js
push
popf
or
xor
cmp
imul
jnp,pn
jnp
bound
pop
shll
jae
in
int3
mov
adc
push
fimuls
shrb
fldl
cmpsb
push
pushf
cmc
test
cld
into
mov
sbb
and
add
fwait
cld
cli
ret
shl
ja
in
outsl
mov
rsm
mul
addr16
and
sbb
int3
add
in
mov
js
sub
sub
cmp
enter
insb
aam
xchg
mov
stc
jecxz
lods
ret
xchg
out
jecxz
jnp
je
testb
adc
loop
xchg
stc
and
ret
sbb
test
cli
lds
or
push
fadds
dec
mov
adc
inc
push
push
daa
cltd
inc
pop
lods
and
mov
push
push
cld
insb
and
scas
rcll
je
or
jmp
sbb
test
in
loop
in
xor
fmuls
cmpsl
pusha
outsb
ffree
mov
add
lahf
and
xor
lock
imul
enter
cmp
push
popa
add
push
push
mov
lea
aas
adc
inc
fnstcw
aaa
fs
sahf
cli
sbb
adc
test
mov
lret
xchg
dec
ret
and
or
jno
dec
mov
add
mov
pop
push
mov
mov
cmp
jg
ss
data16
rolb
enter
nop
jmp
je
out
shll
inc
dec
shll
sbb
jne
and
dec
pop
mov
and
xchg
and
in
mov
fcompl
outsb
loope
jp
std
jb
loopne
hlt
cmpsb
mov
dec
loope
test
in
jl,pt
lods
das
adc
jecxz
adc
pop
ja
adc
add
xchg
xchg
xchg
or
fbld
shll
fisubrs
push
pop
ror
dec
sbb
je
jp
cmp
mov
cwtl
mov
aad
insl
mov
movb
test
das
out
mov
ljmp
les
lock
ss
cmpsl
shrl
push
leave
test
add
mov
ljmp
fsubrp
cmp
cmp
and
lcall
pushf
lahf
push
out
push
jne
ret
hlt
mov
and
scas
sub
mov
sbb
or
sub
sub
lock
jl
lahf
ret
lret
mov
repz
mov
push
cmp
subl
out
stos
xchg
inc
stos
cld
adc
push
lcall
or
cmpb
xor
xchg
mov
adc
mov
sbb
inc
fisubl
es
adc
arpl
inc
cld
rclb
stc
or
shrb
dec
pusha
dec
lea
mov
pop
xor
mov
xchg
inc
aas
dec
loopne
mov
cwtl
shlb
mov
iret
fcoml
jge
xchg
aas
aam
data16
icebp
outsb
mov
push
imul
fistpl
std
icebp
adc
out
mov
sar
das
cltd
sub
mov
outsb
add
jo
lods
lahf
cmp
fwait
sbb
popf
scas
dec
mov
repnz
mov
fs
xchg
lock
stos
fwait
lcall
rcrl
test
int
fwait
fwait
daa
jo
push
mov
in
mov
and
arpl
cmpsl
or
sbb
push
aam
stos
xchg
pop
xor
pop
es
je
mov
inc
movsb
or
insl
nop
lahf
inc
enter
rol
in
jno
push
outsl
pop
scas
adc
lahf
lds
add
imul
add
fsubrl
push
repz
adc
cmp
mov
leave
xor
sub
decb
je
lret
jno
mov
mov
lret
mov
ja
lea
sub
sti
rorl
sti
cmp
dec
xor
mov
and
jmp
push
cmp
xor
int3
pop
inc
iret
adc
stos
outsb
loopne
stc
mov
or
mov
pop
mov
cmpsb
pusha
push
push
faddp
sub
xchg
mov
lret
loope
repz
imul
bound
div
adc
enter
xchg
lret
sbb
pop
pop
pop
cmpps
cmpsl
jbe
bound
xor
dec
cmpsl
xlat
pop
jns
mov
sbb
stos
aas
iret
mov
sub
adc
leave
roll
daa
cli
mov
out
jl,pt
push
test
iret
loop
add
push
aaa
sub
push
into
mov
lcall
pushf
lods
xor
xor
mov
sahf
subb
cwtl
mov
shlb
ror
sub
mov
push
dec
mov
and
subl
push
loop
sbb
orl
pop
aas
movsl
jge
jno
and
mov
out
mov
adc
cmp
or
gs
dec
mov
mov
pop
pop
stos
lods
xor
sarb
push
or
arpl
cmc
jg
rorb
lods
xchg
jb
push
std
mov
xchg
sub
jb
fwait
push
mov
jno
and
xchg
js
ja
inc
pusha
cmp
cmp
shlb
sti
or
addl
mov
in
iret
int
mov
jnp
cmpsb
lods
lock
xor
adc
in
hlt
mov
jo
sbbb
dec
ret
nop
xchg
and
pop
jmp
mov
fwait
imul
add
add
sbb
mov
xchg
popa
pop
add
int
ss
imul
xchg
xchg
mov
dec
jns,pt
decl
jb
hlt
adc
outsb
sub
push
push
data16
inc
or
popa
inc
adc
xchg
es
stos
add
cmp
inc
mov
lcall
sbb
fdiv
mov
mov
xchg
ss
jp
faddl
mul
test
ds
xchg
adc
test
mov
mov
mov
mov
push
test
lret
leave
fidivrl
iret
pop
out
xor
push
rorl
cs
test
movsl
iret
sbbb
cli
dec
jecxz
xchg
cmpsb
fstpl
and
icebp
das
add
notb
ljmp
shll
and
insb
push
ljmp
rolb
pusha
sarb
jo
das
sbb
addr16
fisttpl
scas
jo
sbb
out
shrb
imul
mov
jnp
sub
packuswb
pop
lock
cmpl
push
loope
rolb
loopne
mov
icebp
stos
addr16
std
mov
out
js
jns
and
in
bound
and
sub
push
test
mov
pop
sub
or
shlb
arpl
xchg
jnp
lods
push
xchg
add
decl
jmp
iret
and
push
pop
test
mov
sub
jb
or
xlat
pop
sarl
mov
lret
sti
sub
cmp
repz
iret
and
roll
rcrl
fcomip
testb
mov
sbb
ljmp
adc
xchg
jns
inc
add
out
and
mov
ja
out
dec
inc
test
hlt
sarl
nop
outsl
add
fidivrs
popa
pop
andl
adc
bound
inc
cmp
insl
mov
adc
push
arpl
movsl
outsb
xlat
push
and
ljmp
lea
xchg
mov
sub
inc
pop
push
ficoms
jl
popf
js
inc
cmp
add
std
mov
movl
dec
adcb
cmpsl
sub
popf
cwtl
xchg
cmp
pop
mov
xor
jge
repz
cltd
and
aad
mov
cmc
xchg
or
push
call
push
test
jmp
sahf
ljmp
or
fsubs
insl
mov
addr16
adc
jle
lahf
push
mov
jbe
aad
mov
and
mov
maxpd
xchg
jg
jo
orb
add
xor
jne
push
js
mov
dec
out
stc
lcall
or
or
test
push
or
or
jmp
repnz
scas
lret
or
out
push
push
insb
inc
in
lea
jae
sarb
mov
sbbb
dec
shl
xor
push
dec
stos
in
mov
add
pushf
pop
xor
repz
lcall
xchg
jmp
or
pop
xchg
int3
or
sub
loope
je
sarb
pop
mov
out
mov
inc
ret
or
mov
popa
stos
adc
add
into
or
out
add
sub
mov
mov
push
adc
cmpsl
or
in
shrb
scas
pop
xor
enter
shr
jbe
stos
mov
dec
clc
or
pop
js
sub
cld
adc
xchg
inc
mov
cmp
mov
dec
adc
outsb
jl
fmuls
or
outsl
pop
fstpl
xchg
fisubrl
adc
mov
push
hlt
lcall
add
jl
loop
mov
notb
shlb
xor
leave
cmp
lods
ss
clc
push
jecxz
and
mov
shrl
lds
arpl
add
aad
adc
arpl
dec
clc
lods
jl
rorl
jmp
imul
add
sub
in
xlat
and
mov
jo
icebp
pop
faddl
mov
sbb
shll
cmp
aas
lods
lods
dec
pop
add
xor
fsubrs
repnz
jne
or
enter
sub
add
shll
leave
iret
rcl
addl
decb
notb
lods
push
mov
push
fdivrs
sarl
ds
in
sbb
iret
sub
pop
adc
jb
mov
push
adc
js
test
dec
mov
bound
in
sbb
aad
or
cwtl
ret
jg
jnp
int3
mov
negl
mov
in
dec
scas
popf
push
sbb
movsb
xor
pop
outsb
cli
divl
inc
jnp
push
jne
lret
xchg
add
adc
jp
cld
mov
imul
lods
mov
jl
fdivl
ret
cmp
adc
into
mov
imul
fwait
mov
adc
jnp
push
fucomip
sub
shr
sub
sar
jl
movsb
fldcw
push
inc
adc
ljmp
out
enter
or
and
decl
mov
test
inc
icebp
inc
movsl
mov
ss
or
fists
fidivrl
dec
aad
cli
mov
call
imul
xor
pop
xor
xor
jne
xor
mov
mov
jbe
dec
aad
je
cmc
aaa
test
inc
inc
fdivrl
jno
fsubr
rclb
dec
mov
aad
lods
fwait
xchg
nop
pop
mov
xchg
negl
inc
ret
clc
mov
add
aam
xchg
ret
mov
in
ret
sbb
call
dec
add
pusha
inc
stos
pop
pcmpeqb
push
cmp
mov
in
mov
fmuls
scas
mov
mov
mov
insb
shrb
sub
movsl
out
cmp
in
mov
loopne
mov
out
push
adc
xor
adc
mov
arpl
movsl
aam
imul
push
fisttps
mov
pop
inc
sbb
in
test
andps
mov
ret
gs
xchg
outsl
push
xchg
xlat
or
repz
dec
and
jae
add
clc
xor
jecxz
in
or
mov
lds
jmp
rcrl
outsb
das
add
adc
movsl
dec
scas
or
pop
movsl
inc
push
dec
pop
sub
cltd
dec
lret
add
jno
add
dec
pop
and
push
cmpsb
xchg
push
movsb
cwtl
or
std
dec
loope
mov
cs
out
ror
xor
dec
pop
imul
pop
cld
arpl
fbld
std
scas
mov
dec
aam
lahf
out
mov
clc
ss
or
imul
mov
loop
movsl
add
xchg
popa
add
sub
xlat
push
lret
sub
dec
and
loope
mov
inc
cltd
clc
mov
mov
jecxz
aam
popf
out
test
cmp
je
ret
mov
xchg
pop
je
out
push
pop
sarb
jecxz
or
lahf
lods
lock
pusha
jns
add
sub
in
or
sub
inc
xchg
std
sub
fcoml
ficoml
cmc
sbb
dec
inc
xor
adc
sub
icebp
push
jo
and
and
mov
lods
cs
or
jb
movsb
cmp
lea
and
test
test
sub
cmpsb
rcll
push
es
xchg
lods
dec
jmp
lret
jne
mov
mov
test
sahf
sarl
sub
xor
into
addl
fdiv
jbe
cmp
adcb
mov
es
leave
and
outsb
and
out
push
sbb
adc
adc
jb
pop
mov
mov
ret
hlt
and
mov
je
add
xchg
cmp
scas
sub
adc
imul
adc
dec
es
das
mov
fnstcw
or
mov
out
movsl
sbbl
xchg
cs
imul
jo
into
pop
call
test
shl
fldenv
sub
dec
addl
mov
lods
xchg
push
xorl
inc
sub
pop
cltd
stos
jno
mov
jle
test
xchg
dec
cmp
iret
sti
mov
or
inc
aad
lret
add
push
jno
add
sbb
into
jle
mov
sbb
mov
fldcw
pop
push
inc
push
inc
subb
sub
cli
and
mov
lcall
cmp
or
sbb
out
mov
cmp
pushf
add
pop
sbb
inc
aaa
pop
lahf
dec
ja
neg
jns
repz
pop
daa
in
or
jb
cmp
jge
sub
fidivs
sbbl
fldt
mov
pop
scas
outsb
fldcw
fsubrl
popa
in
int3
pusha
mov
pop
fidivs
stos
and
pop
sti
outsl
jb
int3
sbb
jno
cmp
mov
cli
pop
mov
sbb
rcll
sbb
inc
add
out
aad
mov
dec
cmc
out
scas
sub
jb
fsubrs
fldenv
ret
lods
ja
sti
loope
or
in
ror
into
lods
ret
jl
cwtl
inc
pop
movsl
aad
data16
sbb
pop
ret
inc
mov
mov
push
fidivl
nop
inc
call
xchg
shr
iret
stos
dec
mov
xor
mov
push
push
in
mov
loopw
add
iret
sahf
aaa
xchg
xchg
adc
testb
push
ljmp
jbe
inc
cmp
jmp
xchg
addr16
inc
lret
ret
lea
and
mov
and
fcompl
leave
add
adc
sbb
or
shr
mov
in
into
aam
out
sti
mov
add
mov
mov
scas
pop
pop
xchg
inc
jle
inc
cmp
xchg
test
mov
stos
rclb
jge
or
sarb
add
adc
pusha
lea
inc
lods
push
mov
subb
loopne
lock
and
xor
add
adc
pusha
lea
inc
lods
push
mov
adcb
mov
sub
xor
add
adc
pusha
lea
lea
xchg
dec
test
insl
nop
jl
or
push
cmp
stos
in
adc
mov
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
scas
mov
push
xor
test
out
inc
dec
or
or
pop
push
add
add
push
add
add
dec
add
add
add
add
add
add
add
add
lods
add
dec
add
inc
add
add
add
cmp
jne
mov
add
add
mov
add
nop
add
dec
add
add
add
inc
add
jae
and
jne
mov
dec
add
add
add
inc
add
add
testb
add
dec
add
add
add
add
outsl
add
add
add
stos
add
fwait
pop
xor
dec
add
add
add
add
add
arpl
xor
inc
add
add
add
add
inc
add
add
cmp
loopne
cmp
rolb
add
cmp
int
addb
add
add
dec
add
add
lahf
add
add
add
add
add
add
add
pop
add
jl
cmp
mov
add
add
push
add
add
add
mov
lea
mov
push
mov
add
add
add
add
add
jne
pop
add
add
xor
jl
dec
add
xor
push
add
mov
add
add
push
add
add
int3
add
add
add
add
sbb
in
add
add
add
add
inc
add
popf
add
add
add
add
add
add
xor
stos
add
cwtl
add
add
add
add
imul
ss
adc
add
addb
add
add
add
cmp
inc
add
add
add
roll
add
enter
cmp
inc
add
add
add
add
add
add
add
add
add
xor
mov
add
add
add
add
add
add
scas
add
add
add
add
scas
add
xor
inc
add
add
lret
add
add
add
add
add
add
mov
add
xor
test
add
movsl
add
add
pop
add
cmp
mov
pop
add
add
add
adc
xchg
add
sub
add
flds
jge
adc
jne
mov
add
add
nop
add
add
add
add
add
add
inc
add
add
inc
add
jne
mov
inc
add
add
add
push
add
add
add
add
add
mov
adc
inc
add
add
add
add
add
mov
adc
enter
adc
mov
add
add
add
push
addb
add
add
add
add
add
add
mov
add
add
add
add
addl
add
add
lea
outsl
add
add
lcall
add
add
add
add
nop
add
add
add
add
mov
mov
inc
add
add
add
xor
add
mov
add
add
add
add
add
add
add
insb
add
add
add
add
add
add
icebp
add
add
pop
add
add
sub
jb
repnz
outsl
js
inc
push
scas
out
ss
ja
xchg
mov
dec
push
jno
cs
lahf
les
or
arpl
cmp
aam
and
lock
push
sub
in
lock
out
out
mov
lea
push
mov
inc
push
and
enter
xchg
jns
aad
xor
mov
jle
insb
mov
adc
rcrl
ror
add
inc
sub
adc
stc
pop
pop
inc
int3
subb
xor
pop
mov
mov
popf
fisttps
call
in
pop
fidivrl
in
addr16
leave
dec
xchg
mov
add
mov
iret
cmp
std
mov
jmp
stc
or
int3
pop
lret
inc
push
mov
into
ljmp
sbb
fldcw
leave
cmp
sub
and
notl
imul
into
cmp
enter
mov
imul
sbb
push
add
mov
gs
or
clc
out
pop
sub
arpl
mov
pop
sbb
dec
lock
cmp
out
loopne
push
xor
into
or
and
lock
push
xchg
in
mov
popf
cmp
iret
cmpb
xor
add
jnp
fldenv
mov
lret
ja
lret
xor
imul
mov
cltd
outsb
loopne
jmp
or
and
sti
leave
fisttpll
cmpl
int
popa
jmp
xor
push
dec
cli
or
add
fscale
jae
pop
loope
push
xor
loopne
cmp
out
cmp
pop
test
loop
sub
jo
mov
push
push
jns
xor
sbb
cmp
mov
adc
out
in
cmp
lods
xchg
xor
sub
adc
sbb
sub
sbb
aaa
ss
nop
sbb
push
mov
mov
jbe
or
pop
sub
mov
push
orb
bound
sbb
scas
jmp
mov
adc
cltd
jo
and
adc
idiv
out
and
dec
icebp
adc
sub
dec
fwait
xor
and
aad
shlb
fs
pop
push
xchg
mov
fnstsw
mov
jl
jle
xchg
fwait
push
cs
shll
xchg
fiadds
mov
mov
push
dec
dec
or
testb
gs
mov
cmp
inc
mov
jmp
arpl
cwtl
xchg
shl
or
cmpsl
cltd
pop
mov
or
lods
jecxz
add
out
out
das
push
stc
fidivrs
mov
adc
imul
adc
xor
fisubrl
xchg
scas
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
