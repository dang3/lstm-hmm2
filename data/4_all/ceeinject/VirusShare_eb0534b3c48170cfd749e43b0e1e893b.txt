call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
xor
movl
mov
mov
test
and
fcmovbe
pop
lds
xor
movl
mov
xchg
dec
test
or
aaa
aad
lds
xor
pop
add
call
inc
movsl
mov
xchg
test
mov
mov
imul
aam
push
sbb
inc
mov
test
rcrl
xor
mov
sub
js
push
push
jp
or
in
orb
adc
adc
ja
int3
mov
icebp
addr16
inc
inc
test
mov
out
idivl
add
xchg
inc
inc
sbb
loop
xchg
imul
mov
lret
or
cmp
sub
gs
inc
add
inc
repz
cmpsl
clc
cmpsl
cmpsb
dec
sbb
test
enter
mov
pop
mov
xchg
inc
fdiv
inc
xchg
loop
push
daa
push
lods
cmp
nop
jmp
jge
imul
jne
gs
xchg
mov
movsl
fists
sbb
pop
lds
jl
insb
mov
xor
inc
shlb
loop
xor
pusha
in
mov
cmpl
inc
mov
mov
mov
sub
push
hlt
add
push
mov
push
xchg
and
mov
push
xchg
mov
movsl
ja
inc
test
daa
in
aad
lds
xor
movl
xchg
mov
movsl
ja
inc
test
daa
in
aad
lds
xor
mov
addr16
ret
or
jno
xchg
mov
lock
xchg
jno
push
inc
or
sub
sti
pop
mov
push
xlat
int3
jno
clc
cwtl
mov
and
push
sbb
das
fcmovnbe
push
movsb
rolb
sbb
cwtl
and
pop
mov
jl
test
push
dec
mov
mov
repnz
test
outsb
shr
int3
pop
jne
jmp
incl
add
ljmp
jo
jp
sbb
sarl
fs
xchg
push
test
mov
sub
fcomip
mov
loope
sub
xor
mov
jns
sbb
xchg
rolb
nop
shr
in
mov
rol
fwait
insl
jno
pop
sarl
jno
mov
rcrb
lcall
fnstenv
dec
inc
je
fisttpll
cltd
das
icebp
inc
rcrb
testb
sarl
pop
mov
push
shr
out
aas
cmpsb
xor
sar
xor
and
fistl
lock
test
pop
cwtl
dec
sub
insb
ljmp
aam
rcrb
inc
shll
out
jp
adc
in
test
push
push
sub
dec
aas
add
rcrb
add
xor
mov
or
mov
lar
sbb
sbb
sub
out
lahf
sub
imul
lds
xchg
xor
dec
cmp
or
pushf
movsb
loop
test
jne
sbbw
scas
vandnps
inc
call
push
pop
cmp
dec
add
addl
lcall
arpl
ret
mov
rcrl
jp
popa
push
push
out
call
fidivrl
xor
cmpsl
mov
notl
cmp
cli
mov
mov
movsl
cmp
pop
iret
adc
fs
jne
sub
add
mov
pop
cmp
and
adc
ret
xchg
jl
mov
shl
or
lods
cltd
cmp
jo
jbe
stos
test
xor
mov
aad
test
xor
mov
aaa
movsb
mov
mov
pop
cmp
mov
jns
ljmp
je
push
pop
pop
jns
add
je
inc
pop
pop
les
inc
push
sub
pop
add
out
mov
les
mov
fdiv
mov
add
jb
popa
mov
or
fwait
stos
pop
mov
pop
mov
outsl
pop
mov
ret
dec
stos
aaa
in
fimull
jnp
arpl
sub
pop
add
sarl
lahf
outsl
jg
dec
push
outsb
push
sbb
inc
adc
inc
addr16
pop
imul
int3
ljmp
inc
inc
mov
mov
orl
rorl
into
fistpl
jl
test
sbb
xor
jne
mov
inc
mov
stos
fcomps
lds
and
pop
fwait
xchg
pop
mov
les
rorl
pop
sti
pusha
jp
jae
xor
rcrb
push
xchg
xor
jo
inc
adc
js
mov
and
dec
fdiv
cmc
xlat
insl
mov
stos
jb
and
lret
scas
out
add
aam
add
xor
out
push
mov
jl
stos
fcomip
xchg
dec
lods
add
mov
pop
mov
lea
jmp
stos
imul
loope
add
in
test
and
xor
insl
imull
shlb
aas
push
and
sub
cmpsb
adc
and
arpl
push
popf
in
repz
jl
cld
rcll
xchg
lret
pop
adc
test
dec
sub
jno
shll
leave
nop
shll
xor
or
outsl
in
aam
adc
in
arpl
bound
add
xchg
add
in
and
pop
mov
mov
xchg
and
lods
mov
jl
jb
je
popa
or
xchg
fisubs
jnp
dec
fcmovnu
xchg
lods
ss
inc
mov
loope
jmp
data16
aaa
pop
dec
xchg
xlat
bound
lods
and
iret
mov
jecxz
rolb
mov
sbb
add
and
cmpl
into
daa
pop
bnd
push
rcrl
xor
jmp
or
arpl
sbb
xchg
imull
ds
shl
daa
repz
cmp
hlt
ret
ja
sub
push
inc
pop
loope
and
mov
add
dec
mov
mov
fisubrl
lds
adc
test
imul
pop
mov
loope
sbb
shl
and
jmp
movsl
mov
insl
jbe
dec
xor
incl
popl
and
imul
push
cld
lret
or
jge
cltd
cs
and
jno
je
or
cmp
shrb
shrb
and
lret
cmp
sub
mov
popf
sbb
repz
or
push
hlt
jbe
test
or
sbb
sar
mov
jne
add
jecxz
mov
pushl
je
shrb
xor
dec
push
xorl
xor
lahf
and
sub
int3
ss
sarb
movsl
xchg
sub
sbb
push
adc
dec
lret
adc
into
inc
add
test
push
push
fs
pop
out
inc
push
cmpsl
xchg
lds
sbbb
xor
stos
add
cmp
cmp
daa
lahf
out
popa
push
addr16
push
mull
jae
cmp
inc
xchg
jae
shl
mov
push
hlt
and
aaa
pop
int
xor
jne
jo
and
mov
xchg
loop
mov
or
cltd
loop
sbb
xchg
outsb
sbb
dec
inc
mov
insb
add
hlt
dec
lret
lahf
xchg
popf
and
mov
and
sbb
cmp
xor
fildl
lret
cmpsb
xchg
in
mov
jno
je
mov
fwait
sbb
add
aaa
fsubr
xchg
lods
pop
mov
mov
sarb
or
xchg
mulb
ds
pusha
mov
iret
pop
scas
push
movsb
pop
lods
push
in
mov
sbb
mov
shrl
fldt
cmp
lock
cmp
mov
repz
mov
lods
inc
sbbl
push
and
jb
mov
pop
sti
jno
sbb
xor
pop
movsl
sub
filds
fwait
mov
jns
repz
adc
fadds
outsl
mov
sarb
push
inc
mov
cwtl
outsb
push
or
movsb
push
xchg
sub
outsb
sub
inc
add
mov
xchg
dec
stos
out
mov
or
ja
sbb
mov
test
dec
mov
mov
inc
shlb
inc
stos
mov
xchg
movsl
js
test
loop
or
mov
push
sub
and
jbe
add
mov
out
push
andb
roll
jns
cmp
sbb
fwait
in
fisubrl
inc
mov
push
fidivl
icebp
scas
ss
js
mov
push
clc
xor
fadd
inc
inc
add
lods
and
into
rcrb
scas
mov
inc
cmp
xor
inc
cli
ljmp
test
aad
push
dec
adc
xor
fnstenv
jo
jl
push
mov
mov
cmp
sbb
mov
cmc
addr16
pop
stos
mov
pop
out
xor
add
aaa
into
ret
mov
add
mov
das
xor
inc
dec
dec
or
mov
push
dec
sahf
imulb
dec
sbb
ljmp
stos
pop
lods
jnp
push
cmp
adc
pop
lods
orl
mov
insb
loopne
andb
fsts
into
in
test
inc
dec
xchg
mov
sbb
outsl
xchg
call
adc
mov
sbb
or
lret
addl
mov
mov
lret
mov
and
cs
add
imul
push
jl
xchg
nop
jecxz
call
mov
mov
mov
jbe
jae
nop
xor
dec
pop
shlb
das
xor
test
xchg
sbbl
fwait
scas
mov
mov
cmpsb
cmp
sub
mov
push
loop
mov
pushf
push
aad
cmc
bound
outsb
adc
sub
mov
jge
insl
subl
outsb
mov
shlb
in
fs
outsl
sub
rorb
mov
add
pusha
mov
mov
je
loopne
jge
push
ret
or
ljmp
and
inc
int3
fimull
jp
and
adc
insb
lcall
nop
icebp
insb
movsb
jg
push
or
rol
sbb
push
negb
mov
ds
xor
mov
jg
xor
out
scas
cmp
add
sub
pop
jmp
push
xchg
cmp
and
in
xchg
ss
adc
add
xchg
mov
cwtl
test
jbe
push
cmp
inc
inc
mov
cmpsl
cmp
mov
fildl
adc
test
dec
out
in
jle
xchg
or
mov
xor
aad
mov
pop
dec
call
cmp
arpl
sbb
bound
jns
scas
int
xor
sbb
pop
in
and
sti
xchg
sub
ljmp
popf
fwait
cli
push
jecxz
inc
jno
stc
cmpsb
mov
ret
lods
xchg
jnp
mov
aad
out
test
outsl
daa
movsb
jne
jle
lret
mov
dec
xchg
aaa
lret
ja
add
fmul
dec
cltd
dec
xchg
call
xchg
mov
push
and
sarl
mov
outsb
sub
cmpsl
dec
xor
es
push
pusha
ja
insb
popa
mov
into
call
cli
aaa
cmpsb
clc
cmp
jge
cltd
mov
add
in
adc
adc
subb
or
push
fbld
mov
add
test
idiv
lods
xchg
iret
sbb
enter
fwait
movsl
gs
push
push
fadds
mov
cwtl
sub
adc
not
mov
dec
popf
mov
mov
lret
divb
arpl
xchg
mov
fcompl
jbe
das
jne
jle
add
sbb
pop
or
add
mov
or
pop
popa
sbb
pop
sahf
xchg
mov
cmp
jns
das
lcall
jo
iret
popf
addr16
lret
xchg
pushf
inc
popa
sbb
lret
cmpsl
shll
jae
in
cltd
sbb
jne
cmp
clc
stc
aam
xor
pop
mov
ss
push
sub
es
enter
dec
scas
pop
and
and
outsl
scas
add
cwtl
mov
inc
in
mov
adcb
dec
cltd
es
stos
call
pushf
je
inc
push
mov
xchg
jmp
clc
int
enter
cmc
push
push
xchg
fldenv
imul
pushl
loop
std
adc
push
loopne
mov
fdivrs
decl
jae
shl
bound
shlb
in
xor
xchg
mov
lret
mov
fcmovu
jbe
clc
xor
rorl
imul
adc
icebp
outsw
test
outsl
aas
xor
and
pusha
les
fnstenv
ret
pushf
pop
popf
jmp
jno
int3
jbe
add
jge
add
setge
or
es
mov
add
jl
icebp
pop
push
and
testb
inc
aaa
sbb
imul
sbb
in
imul
inc
adc
loopne
cmp
sbb
scas
fstl
pop
into
ss
or
out
jmp
fistps
fdivrl
dec
or
stos
pop
pop
in
fst
data16
or
and
and
mov
dec
and
pop
ret
sar
clc
and
sub
loope
xlat
popa
jnp
mov
inc
xchg
shl
jo
loop
lcall
push
das
shr
jl
push
mov
xlat
inc
mov
aad
sbb
sbbl
mov
jg
in
pusha
fcompl
add
mov
push
mov
out
filds
mov
xorb
cli
andb
stos
testl
mov
fistps
mov
lods
jo
test
cwtl
jmp
ret
adcl
and
dec
sarb
mov
fwait
popa
clc
mov
sbb
jne
outsb
mov
and
jg
repz
mov
nop
out
and
stc
xchg
in
inc
aam
cltd
mov
add
ss
outsl
pop
movsb
insl
dec
pop
push
in
lods
data16
andl
lods
in
clc
or
lds
std
roll
in
insl
sbb
cmp
mov
lcall
jb
test
pop
and
cmpsl
or
in
pop
xor
fwait
push
sti
fadds
push
ret
sbb
mov
adc
sbb
mov
fdivr
add
ljmp
lahf
and
les
jae
data16
adc
push
mov
adc
in
lahf
stos
iret
aam
arpl
or
sbb
inc
lods
sub
lret
jno
add
stc
push
inc
lods
mov
mov
mov
xchg
in
lock
and
lret
xchg
mov
add
adc
sub
fsts
push
iret
es
push
xorb
cmova
loopne
lcall
sbb
mov
sbb
xchg
jmp
sub
lods
xchg
pop
std
in
sub
std
jo
pop
dec
sub
xor
push
repnz
mov
idivb
xlat
push
inc
imul
cmp
cmp
sarb
inc
gs
and
ret
xchg
xor
or
pop
mov
dec
fidivl
mov
jb
iret
fdivrs
fcmovbe
inc
add
jg
mulb
push
push
and
mov
aad
rclb
fs
sbbl
les
dec
pop
repnz
mov
mov
pushf
sahf
std
lcall
dec
sahf
push
out
xchg
sbbl
pop
push
repz
jno
or
xor
out
outsl
scas
sti
or
jae
cmc
inc
xor
das
imul
pop
nop
jne
icebp
scas
sbb
mov
fdivr
adc
aas
mov
jge
pop
outsb
scas
pusha
mov
push
sahf
jo
addr16
dec
leave
sub
xchg
push
ja
cmp
sbb
aas
repnz
cmp
test
fwait
ss
sbb
aam
outsl
shl
jecxz
es
shr
jmp
and
in
dec
jl
int
sbb
push
aam
sub
mov
fdivrl
mov
jmp
out
push
xor
imul
aam
fmull
pop
xchg
test
add
jle
hlt
test
leave
std
imul
jo
sub
mov
push
stc
sub
or
jl
mov
into
cwtl
popl
cmp
inc
clc
insl
mov
test
dec
dec
xchg
dec
aam
or
add
repnz
rcl
sbbb
fmull
add
jle
insl
jl
js
jbe
test
test
out
add
cmp
sub
mov
rcl
xchg
or
pusha
scas
sub
arpl
or
js
sub
or
lods
cmpsl
icebp
outsb
arpl
fcom
rclb
icebp
push
xchg
test
jb
pop
scas
xor
xchg
loop
jnp
or
pop
pop
and
popa
movsl
orl
sub
and
pop
int3
iret
push
xor
clc
jbe
ja
outsl
sub
sti
and
dec
pop
popf
cmc
dec
shll
pusha
inc
mov
jns
mov
and
xchg
mov
inc
test
call
jns
movsb
and
test
pushw
mov
in
cmp
xchg
add
insb
mov
sub
aas
xchg
and
lods
std
ja
mov
add
ret
addr16
or
mov
mov
std
and
pusha
scas
in
lock
stos
mov
pop
sub
mov
mov
montmul
cmpsb
inc
mov
movsb
jae
insb
jae
xchg
std
mov
icebp
mov
lahf
into
cmp
test
jns
add
mov
pop
sbb
mov
mov
push
sarb
outsl
mov
add
xchg
ret
pop
fdivl
push
imulb
int3
jne
vmaxss
and
test
push
hlt
sbb
mov
out
imul
cmpsl
jno
popa
scas
xor
mov
and
lods
add
xor
enter
jae
mov
add
or
les
adc
xchg
xor
imul
sti
orb
fidivrl
dec
lret
push
leave
lods
or
mov
xor
xor
rorl
mov
sbb
jb
add
inc
pop
jo
in
andl
imul
inc
mov
out
je
fs
fdivrs
aas
inc
nop
or
xor
shll
push
jmp
in
sub
es
or
mov
and
andb
pop
add
cmp
notb
push
inc
mov
lcall
jp
push
xchg
xlat
cld
xchg
flds
repz
or
sub
xor
fsubr
nop
push
cld
insb
addl
adc
in
out
sub
jnp
repnz
xlat
cmp
pop
pop
sbb
push
push
xchg
test
mov
add
pop
adc
push
repnz
xor
or
fs
scas
mov
mov
jle
cmpl
adc
cld
sub
dec
push
push
xor
sub
push
testl
xor
lds
sbb
out
sbb
movsb
iret
addr16
xor
mov
in
xchg
lcall
xor
loop
and
mov
inc
jg
sbb
sub
ret
rorl
xchg
enter
in
fdivl
or
xchg
fwait
aas
into
sbb
loope
addr16
cmpsl
xchg
in
addr16
pusha
push
sahf
outsl
aaa
mov
mov
enter
lret
sbb
inc
adc
repnz
int3
and
mov
mov
mov
jno
in
push
in
inc
mov
lcall
sbbb
outsl
into
insb
imul
movsb
mov
es
shl
mov
sbb
orb
mov
enter
ret
sbbb
xchg
jp
and
pusha
pusha
inc
clc
shrb
pop
pop
sub
mov
mov
cld
test
xchg
imul
cmp
or
xlat
adc
ret
and
jg
and
push
pop
xchg
fistps
stos
mov
jne
push
mov
test
dec
or
mov
or
mov
popf
cmp
push
ljmp
pop
sub
insb
mov
addr16
insb
mov
popa
push
jmp
stc
add
mov
add
mov
stos
mov
and
mov
into
fidivrl
ljmp
inc
mov
jp
jg
dec
or
lret
jle
lea
push
xor
jl
mov
ja
imul
lods
mov
dec
divb
aaa
or
mov
adc
inc
push
cmp
divb
lods
xor
loopne
dec
fdivrl
sub
out
mov
sbb
in
outsb
jecxz
cmpl
adc
imul
ljmp
cmpsb
inc
jl
loopne
push
push
mov
sbb
or
test
fcoms
enter
pop
sahf
andl
fidivl
sub
fbstp
cmp
and
mov
inc
jno
mov
das
mov
jnp
xorl
xchg
pop
add
jae
lret
and
push
ret
cli
dec
sarb
pop
xchg
xorl
inc
lcall
mov
cmp
es
jno
dec
fimuls
shrl
add
sub
nop
clc
or
jmp
out
cld
popf
sarb
ror
sbb
out
xchg
pop
push
or
xchg
adc
pop
push
cmpb
mov
lret
inc
aaa
cld
push
in
add
test
repnz
out
test
jmp
imul
movsl
addr16
test
icebp
negl
pusha
ds
mov
fcompp
xchg
es
aaa
scas
testb
or
imul
push
notb
push
insl
push
mov
xlat
push
jl
cmc
lds
sub
xor
rcr
and
cs
inc
mov
dec
add
xor
aam
or
mov
shl
add
test
mov
mov
outsl
hlt
mov
inc
arpl
call
pop
cmp
pop
sub
jecxz
xchg
gs
xor
adc
add
mov
xchg
mov
movsl
ja
inc
test
daa
in
aad
lds
xor
movl
xchg
mov
movsl
ja
inc
test
daa
in
aad
lds
xor
filds
fcoml
lds
xchg
inc
test
and
aaa
aad
add
xchg
jne
gs
pop
inc
push
mov
movsl
fnstsw
inc
test
test
dec
movsl
jg
outsl
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
es
ss
push
pop
push
punpckhbw
push
or
jg
dec
cmpsb
icebp
mov
xchg
imul
iret
es
ss
push
pop
push
pcmpgtd
outsl
inc
pop
push
aaa
cmpsb
mov
xchg
out
imul
iret
es
ss
push
pop
push
pcmpgtd
outsl
inc
pop
push
dec
cmpsb
mov
mov
mov
outsl
dec
ss
fs
pop
jbe
int
lods
les
fimull
mov
xchg
nop
lods
insb
mov
dec
jg
ljmp
cwtl
push
or
jecxz
fildll
sahf
fidivrs
mov
or
ja
out
cmp
and
cld
filds
jg
mov
jp
or
xchg
pop
data16
mov
inc
cmpsb
push
or
mov
sbb
sahf
adc
aad
into
jg
dec
cs
jge
inc
xor
dec
jecxz
pusha
pop
mov
hlt
out
es
xor
mov
testb
mov
mov
scas
fdivr
jle
rcrl
fistpll
das
push
pop
push
pcmpgtd
outsl
inc
pop
push
dec
cmpsb
mov
xchg
out
imul
cmpsb
pusha
cmp
arpl
jae
or
aas
push
and
pop
sbb
mov
in
cli
sti
cmpl
and
jp
mov
sbb
inc
ss
sub
hlt
mov
int3
shr
adcl
mov
outsl
insl
pop
push
push
jbe
inc
pop
push
dec
cmpsb
mov
xchg
out
imul
iret
es
ss
push
pop
push
pcmpgtd
outsl
inc
pop
push
dec
cmpsb
mov
xchg
out
imul
iret
es
xchg
inc
mov
or
cmp
dec
or
adc
ljmp
dec
sbb
sbb
add
adc
or
cld
stc
sbb
arpl
fwait
and
xor
xchg
mov
fiadds
add
sbb
in
ljmp
decl
pop
gs
mov
cmp
in
inc
push
xor
or
icebp
insb
iret
and
cmp
adc
int3
int3
jb
dec
int3
and
mov
mov
icebp
stos
inc
mov
xor
insb
adc
adc
inc
aas
outsb
mov
adc
fnstcw
adc
in
cld
orb
hlt
xchg
xor
push
sarb
mov
jg
sub
jg
notl
in
xor
lods
lret
std
or
jl
adc
mov
add
sub
cmc
add
fiaddl
aaa
es
mov
stos
out
inc
mov
push
cmp
cs
or
jecxz
stc
ret
aam
adc
lahf
aam
lret
faddp
fs
gs
lahf
int
inc
hlt
test
inc
mov
cwtl
mov
stos
jno
mov
inc
in
push
aam
lock
push
push
jmp
popf
and
data16
pop
xchg
cs
imul
fldln2
jge
and
mov
adc
push
xlat
roll
sarl
xor
push
int3
inc
mov
mov
in
mov
out
jmp
push
psubusw
das
jp
arpl
push
das
fs
push
sub
dec
in
lahf
pop
xchg
inc
inc
andl
ja
mov
dec
sti
xchg
push
dec
addr16
imulb
test
xchg
or
and
stos
cmc
and
je
cmp
adc
lcall
repnz
mov
dec
xor
popf
pop
xchg
jmp
inc
inc
mov
pop
xor
int
or
sbb
push
in
push
jnp
mov
lds
idivb
rcr
js
fimull
aad
outsl
jp
ret
stc
aas
loopne
cld
icebp
jnp
push
and
and
loopne
pop
pop
cld
jns
sti
popf
cmpl
mov
add
xlat
outsl
jno
mov
int3
mov
data16
adc
push
shl
mov
jae
inc
int3
jge
xchg
fwait
call
adc
fwait
mov
inc
or
sub
or
sahf
dec
mul
push
es
jecxz
rcrb
pop
add
jp
leave
ds
inc
sub
mov
mov
or
and
cmpsb
lret
xor
out
push
sub
cld
addr16
movsb
fcoml
xor
push
gs
lret
insb
in
enter
xor
out
divl
sbb
or
fsubs
aaa
jo
fs
pop
test
sub
rcrl
sub
hlt
clc
mov
lock
clc
xchg
outsl
cmpsb
sub
xchg
sahf
jbe
pop
scas
enter
enter
psrad
jno
fld1
fwait
xor
aaa
bound
shl
xor
cmp
push
nop
jnp
iret
xor
sbb
rorl
jmp
sti
movsb
cld
pusha
out
cwtl
outsl
pop
mov
std
mov
pop
push
xor
xlat
cmp
mull
mov
mov
fnstenv
pop
sbb
rcll
nop
pop
or
inc
jb
mov
int
or
bnd
jg
outsb
xchg
mov
cmp
cmc
in
mov
xchg
inc
idivl
xor
int3
lods
enter
jle
xchg
pop
rorb
pusha
mov
movsl
jne
xchg
sbb
adcb
cmpsb
cmp
push
jmp
pusha
dec
jne
orb
imul
scas
cmp
lahf
xor
leave
push
inc
and
outsl
out
add
dec
rorl
fnstsw
mov
push
mov
jg
test
and
inc
pop
int3
fsub
imul
sbb
fldt
dec
orb
pop
nop
mov
test
pop
in
adc
fs
dec
cmp
add
cmp
xchg
shlb
sahf
mov
cmpsb
dec
sub
pop
shlb
mov
xchg
mov
out
dec
outsl
sbbl
push
push
cmc
js
dec
mov
and
icebp
adc
icebp
xchg
divl
sahf
push
sbb
push
cld
sub
test
ljmp
in
cmpb
in
out
add
and
xchg
dec
pusha
in
sub
pop
cmp
mov
mov
insl
xor
xchg
ja
ret
mov
mov
fcmove
in
jno
fisubs
sub
cli
push
test
pop
movsl
pmulhw
pop
xor
arpl
push
sbb
xlat
mov
insb
pop
cmpsl
clc
das
out
mov
mov
lods
push
dec
xchg
shll
jp
push
loop
xchg
sbb
cmpsl
nop
mov
in
pop
push
push
inc
adc
lret
jl
into
cmp
adc
lahf
mull
mov
jo
mov
or
push
add
stos
fs
inc
les
mov
sahf
shrl
pop
or
mov
and
dec
lods
stc
pop
cmp
or
rcrl
arpl
fisubrs
mov
mov
sub
pop
je
icebp
adcb
dec
dec
push
pushf
cmp
jno
mov
ja
and
or
mov
shll
push
insb
ja
push
packssdw
sub
fldt
sub
add
pop
lods
add
lret
cmp
sbb
xor
mov
frstor
and
mov
mov
push
cmp
xor
inc
js
jnp
pop
adc
shrl
xchg
jno
inc
movsb
add
arpl
mov
and
mov
cmp
inc
add
aaa
push
ss
jmp
or
stos
push
lcall
push
cs
add
loop
mov
ds
mov
inc
fsubs
sbb
add
and
pcmpgtb
xor
jl
cmpsl
loope
nop
jae
inc
add
mov
cvttps2pi
ret
cmp
movsl
dec
aad
inc
repnz
imul
push
push
repz
mov
out
js
mov
xchg
das
cmpl
popf
out
mov
xlat
cmp
loope
pop
xor
loop
xor
cmpsb
cmp
dec
test
sub
addr16
movsb
js
and
sub
mov
jl
stc
xchg
cmc
outsb
orl
popf
ds
adc
cltd
test
lods
adc
std
pop
loope
cmc
jecxz
mov
inc
stos
cmc
dec
cmp
mov
xchg
icebp
xchg
add
push
mov
arpl
mov
sub
jo
in
xchg
outsb
jno
or
add
jp
sbb
bound
lahf
jae
cmp
and
aas
or
loope
out
inc
mov
testl
in
nop
add
xor
adc
cld
inc
push
rcrl
rorl
xor
mov
andl
rorb
adc
jae
decl
ds
rclb
jno
inc
test
int
mov
incb
aam
push
dec
xor
mov
mov
fcoms
stos
xor
fdivrs
mov
repnz
mov
adc
nop
std
in
mov
and
sbb
pop
cltd
push
push
stos
aaa
js
mov
inc
push
fbld
into
mov
mov
test
rcll
xor
roll
sarl
push
sbb
cltd
mov
mov
lret
jae
xchg
dec
xchg
jg
jns
pushf
xchg
sets
inc
mov
int
jbe
cwtl
fbld
lcall
xchg
insl
ja
std
or
mov
sti
push
dec
cmp
out
insl
add
mov
push
xchg
int
jo
ror
outsl
push
cmp
cmc
inc
jl
inc
in
test
pushf
test
jg
inc
or
xorb
mov
mov
addr16
rclb
or
sub
subl
and
and
sub
mov
sarl
outsb
sub
dec
push
sub
dec
mov
xorb
pop
addl
scas
fistpl
cmp
pop
lds
xchg
sub
sub
xchg
popf
pop
and
imul
andl
das
adc
cmp
repnz
xchg
out
ds
mov
mov
inc
in
cmpl
jl
jecxz
test
push
sbb
fstl
loop
cwtl
jnp
sbb
xchg
add
hlt
aas
cltd
in
aaa
fistps
jbe
cmp
sbb
cwtl
imul
cwtl
out
out
scas
pop
add
js
push
lock
mull
push
xor
in
mov
pop
jne
fwait
stos
sbb
loop
jg
cmc
ret
sub
lods
pusha
dec
mov
push
jb
mov
jnp
shlb
and
fistpl
lcall
xchg
sub
jnp
jg
cmp
sahf
xor
mov
mov
mov
lahf
vfmsub132ss
test
pop
dec
xor
or
les
xchg
and
js
cmc
xchg
sbb
into
test
addr16
loope
iret
shlb
adc
pop
outsb
xor
jns
cltd
sub
jo
push
dec
test
inc
lahf
inc
in
cmp
inc
scas
loop
sbb
pop
pop
lret
iret
mov
arpl
xor
repnz
or
dec
cli
aaa
and
iret
scas
and
inc
loopne
cmp
mov
outsl
dec
push
jns
insl
jne
cmpsl
add
call
mov
lcall
mov
cli
shll
cs
inc
fistpl
imull
shrl
sahf
hlt
fstpt
or
icebp
jmp
outsb
push
les
arpl
pop
subb
mov
and
push
pop
test
sbb
out
adc
ret
cmp
bnd
dec
xchg
xchg
xlat
out
and
mov
mov
das
cmp
xchg
jp
dec
and
add
and
xor
adc
or
jg
mov
adc
stc
clc
xchg
dec
mov
add
pop
dec
push
mov
pop
addr16
in
mov
mov
push
aas
and
jl
pop
lcall
cwtl
jno
ret
xor
cmc
lcall
jmp
adcl
movsb
jb
xor
lret
dec
mov
dec
repnz
cmp
jg
adc
mov
repz
push
jge
ss
dec
mov
in
mov
scas
cmpl
cs
repz
jle
jmp
sahf
lret
out
daa
sti
mov
mov
loopne
push
movsl
pop
in
je
inc
xlat
cld
mov
cmp
mov
and
fsts
stos
in
mov
cmpsb
sub
adc
out
xchg
shlb
dec
pop
stc
icebp
ljmp
shl
and
mov
xor
fwait
cmp
pop
ret
push
lods
mov
psubusb
push
add
pop
cmp
xchg
push
mov
jo
addb
shlb
dec
int
nop
jecxz
loope
jmp
test
or
je
jbe
sbb
adc
out
adc
jecxz
cmc
cmc
add
outsb
xchg
xor
sahf
popf
pop
push
sbb
sbb
jns
aas
jo
loop
xorl
dec
lods
lods
and
nop
mov
fbld
and
pop
rcrl
test
popf
int3
xor
cltd
fs
jl
repz
xchg
fildl
js
mov
aas
loope
movsb
addr16
aad
xchg
inc
mov
jecxz
stc
adc
sbb
shl
aad
mov
mov
or
lahf
mov
mov
xchg
cli
adc
xchg
sbb
sbb
sbb
inc
add
dec
shlb
add
mov
rol
movsb
mov
or
mov
sub
cld
hlt
jno
data16
je
mov
stos
push
cwtl
js
push
or
push
push
test
and
xchg
out
inc
inc
shrb
xchg
lock
out
mov
fwait
add
add
test
adcl
mov
push
in
and
xor
aam
push
mov
ror
lret
shl
or
out
mov
or
nop
adc
mov
push
push
push
add
sub
mov
push
clc
das
lods
notb
mov
stc
xchg
push
in
not
daa
xchg
cli
jne
faddl
in
in
cmp
cld
xchg
lock
cmovns
jns
push
sahf
ffreep
push
jle
ja
mov
sbb
fstl
adc
ret
sub
test
in
sbb
sbb
mov
inc
mov
and
test
icebp
push
call
xor
inc
test
clc
or
into
outsb
aad
gs
rcrl
inc
insl
cmpsl
sub
test
lea
pop
xchg
ret
xor
or
lret
mov
xor
pop
xor
jle
or
or
adc
cmpsb
jle
or
mov
daa
mov
aad
add
mov
and
fdiv
xchg
mov
cs
test
sbb
test
jo
add
jns
sub
jb
repnz
jo
fistpl
fisubrl
cmp
fcomp
fs
mov
test
aas
rcrl
push
inc
add
scas
xchg
xchg
sti
adc
adc
fldt
mov
stos
push
cmc
pop
jmp
sbbl
push
and
or
bound
dec
sbb
sti
int
iret
pop
aam
push
cltd
and
and
notb
inc
ljmp
enter
cmp
inc
jle
push
ret
inc
jmp
iret
xor
and
lret
xor
inc
inc
sub
cmpsl
in
adc
adc
adc
xchg
fs
rcrb
andl
inc
sbb
sahf
fistl
scas
sbb
sbb
sahf
push
jl
sahf
divl
pop
add
in
sub
addr16
jge
movsl
adc
fimuls
insb
xor
dec
jbe
jo
mov
jbe
cld
movsb
inc
into
dec
sub
mov
mov
xchg
jge
xchg
and
sarb
sbb
sarl
push
js
jl
cmp
push
enter
scas
xchg
cmpsb
lods
and
xchg
loop
iret
sbb
push
adc
cmp
lret
push
sub
stos
scas
dec
loopne
sti
mov
ret
jbe
xchg
test
movsb
xchg
dec
mov
add
fistps
aas
sti
cltd
sub
and
mov
pusha
push
arpl
cmp
sti
xor
lock
cmp
pop
sbb
mov
jb
push
dec
mov
cmp
cmp
hlt
into
mov
in
sbb
jmp
jbe
xor
jl
aad
es
imul
xchg
lret
sahf
les
dec
xchg
pusha
test
push
fwait
cmp
mov
repz
sbb
mov
or
add
lret
pop
movsb
jae
inc
push
fstps
out
xchg
mov
test
in
xor
lods
mov
mov
inc
xchg
pop
out
push
test
leave
pop
in
aad
pop
push
cmp
mov
insb
pop
and
dec
mov
aad
stos
sub
add
fwait
iret
ficoms
into
fcmovnbe
and
dec
mov
movsl
mov
out
std
xchg
movsl
test
rorb
fisttps
mov
insb
sbb
movsb
sbb
adcb
arpl
adc
in
push
push
adc
add
cltd
rclb
inc
sbb
data16
mov
notl
cmp
and
ja
movsb
pop
ret
mov
out
test
xorl
fnstenv
cmp
inc
out
adc
sub
lahf
cltd
test
xchg
inc
and
imul
push
lret
adc
push
jl
pop
push
cld
outsl
mov
xor
testl
je
mov
xor
nop
jnp
ror
mov
hlt
imul
scas
jae
mov
lret
xchg
xor
jbe
cmp
dec
cmpsb
into
mov
insl
push
in
cmp
insl
push
pop
fidivl
add
aas
push
xchg
mov
cld
int3
rcrl
pop
mov
inc
sbb
lahf
pop
loopne
movlps
cmp
jb
sbb
or
inc
inc
fnsave
inc
jo
je
sti
cmp
or
mov
xor
dec
mov
aad
push
push
inc
fisttpl
push
and
mov
jo
imul
sbb
addb
pushf
or
scas
subb
insl
lods
pusha
push
icebp
mov
je
insb
jge
roll
notb
xchg
aaa
inc
rcrl
sub
mov
mov
iret
movsbl
sbb
jmp
push
pop
mov
and
aas
push
pop
popf
dec
pop
enter
push
call
imul
sti
addr16
pop
repnz
lds
mov
pop
jle
int
or
xchg
dec
pop
push
jo
call
clc
dec
adc
in
cmpsb
pop
dec
fld1
movsl
movsb
pusha
stc
cwtl
push
and
mov
int
cmp
mov
inc
mov
fsubl
push
imul
or
mov
inc
mov
dec
mov
jne
outsl
neg
sub
ljmp
xchg
ret
test
jbe
iret
leave
in
loopne
push
xor
nop
jnp
inc
negl
ljmp
lock
js
jg
scas
xor
mov
fs
dec
dec
sarb
sahf
lret
popf
xchg
push
pop
js
sarl
insl
mov
enter
jle
pop
push
jo
xchg
inc
cmpsl
push
cwtl
mov
mov
push
lret
ss
dec
push
rolb
xor
daa
mov
je
adc
mov
add
cmp
sbb
dec
loopne
adc
popa
xor
mov
pop
push
ss
ret
aad
sbb
jle
and
cmc
jg
adc
xchg
lods
xor
sbb
mov
cld
dec
aaa
fldcw
clc
mov
pop
and
inc
jno
dec
jecxz
call
xchg
loop
fistpl
and
jl
lods
sti
rclb
mov
shrl
xchg
sahf
mov
push
mov
jg
addb
cld
or
mov
add
sub
lods
jl
inc
pmuludq
lds
add
xchg
push
lahf
ds
inc
lcall
gs
cmp
mov
pop
sub
sbb
andl
les
xchg
loop
dec
test
sarb
leave
xlat
repz
cmp
push
movsl
insb
lret
and
jne
imul
jae
movsl
lods
adc
loop
and
loop
lret
mov
movsb
mov
xor
pusha
pop
mov
jge
mov
and
fstp
mov
mov
fstl
popf
shl
adc
xchg
pop
xor
popa
pop
and
dec
inc
xor
iret
jge
arpl
push
shr
pop
subl
mov
xchg
ret
cmp
sbb
jo
popa
bound
mov
mov
sbb
cmpsb
lea
leave
ja
push
cmpsb
lds
add
lock
gs
lret
mov
sbb
fldenv
cmpsb
dec
movsl
movsb
shll
arpl
loop
fs
lea
fldt
repz
inc
js
mov
sub
and
xchg
fdivrs
scas
mov
data16
lret
pushf
push
add
sub
xlat
push
iret
int3
je
pop
ja
jecxz
mov
scas
pop
and
scas
dec
std
je
add
mov
xchg
lret
test
push
push
dec
mov
sbb
xchg
fists
inc
and
and
push
cltd
inc
or
jecxz
clc
inc
jns
sbb
out
pop
push
inc
fld1
mov
pop
fidivrl
sbbl
js
stos
lods
mov
sbb
shlb
jecxz
mov
cmpsb
sbb
arpl
sbb
leave
shl
xchg
ror
push
pop
mov
mov
std
push
xor
hlt
lods
call
lret
add
cmp
stos
and
test
arpl
int
inc
cmc
mov
imul
rcl
xchg
cmp
hlt
or
sti
push
xchg
push
outsb
jnp
xchg
lret
cmp
fisttps
pop
shl
cwtl
outsb
xchg
xor
fsubrs
ja
dec
xor
mov
jmp
inc
sub
in
pop
inc
mov
outsl
sub
sbb
dec
pop
test
jl
adc
and
or
rcl
ja
sbbl
dec
add
xchg
cmpsl
add
fcmovbe
dec
and
je
or
and
insb
jecxz
lods
aam
int
adc
fisttps
leave
cltd
add
cmp
scas
mov
jne
loop
ljmp
test
xor
xchg
test
gs
mov
xor
in
paddd
lds
or
push
xlat
sbb
pop
testb
lods
icebp
arpl
pcmpgtd
outsl
inc
pop
push
dec
cmpsb
mov
xchg
out
imul
iret
es
ss
push
pop
push
pcmpgtd
outsl
inc
pop
push
dec
cmpsb
mov
xchg
out
imul
iret
es
ss
push
pop
push
pcmpgtd
outsl
inc
pop
push
dec
cmpsb
mov
xchg
out
imul
iret
es
ss
push
pop
push
pcmpgtd
outsl
inc
pop
push
dec
cmpsb
mov
xchg
clc
xchg
ja
adc
and
xor
in
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
outsb
idivl
dec
xlat
pop
daa
mulps
jnp
adc
into
inc
ficoms
aaa
mov
pop
outsb
idivl
dec
xlat
pop
cs
mov
xchg
push
repz
jnp
addr16
push
fiadds
inc
mov
pop
outsb
out
jle
dec
iret
pop
fildll
scas
ds
out
ja
inc
mov
js
push
int
imull
mov
aaa
mov
in
xchg
push
les
inc
and
xor
jle
testl
push
repnz
jae
xor
and
fsub
iret
call
in
cwtl
jnp
in
mov
movsb
inc
ficoml
jmp
fidivrs
xor
inc
outsb
test
pop
xchg
inc
mov
mov
jecxz
add
xchg
jae
das
test
lret
mov
pop
cmp
sub
shl
lahf
xchg
out
out
mov
cwtl
inc
scas
push
xor
sahf
adcb
xchg
je
mov
add
pop
mov
mov
dec
adc
jle
dec
into
pop
cs
cmpsl
push
xchg
push
sahf
out
ja
jg
dec
ficomps
das
mov
push
or
sbb
mov
popa
sti
lcall
push
fwait
and
push
jmp
sbb
pop
test
mov
jmp
pushf
add
inc
pop
inc
out
hlt
jae
idivl
or
cmpsl
push
xchg
push
xchg
ja
addr16
push
fiadds
aaa
mov
pop
outsb
idivl
dec
xlat
pop
cs
cmpsl
push
xchg
push
xchg
ja
addr16
push
fiadds
aaa
mov
pop
outsb
negl
hlt
rcll
int3
cmp
sbbl
xchg
in
pop
das
inc
dec
sub
inc
stos
and
iret
jl
loopne
aaa
jmp
and
fbld
push
xchg
mov
xchg
outsb
adc
loopne
ljmp
lret
stc
cmp
add
sub
iret
pop
mov
sti
xor
adc
mov
fmull
jecxz
mov
or
repnz
fstpl
xchg
repz
out
adc
and
je
movsb
scas
adc
lret
test
out
jl
out
loopne
sub
jmp
mov
mov
testl
cmpl
sbb
in
call
cmp
ret
xor
bound
pop
pop
cmp
fwait
inc
lcall
or
jbe
pop
std
push
dec
jecxz
cmp
sub
loopw
adc
cmpsl
jecxz
fwait
and
cwtl
in
adc
cmpsb
xchg
jns
gs
shll
movsb
sbb
sarb
inc
insl
pop
leave
lea
xor
test
inc
push
idiv
sbb
or
pop
dec
icebp
xchg
and
mov
and
mov
sbb
xor
add
std
or
xchg
in
adc
enter
fs
aam
enter
test
or
adc
fs
mov
sub
xor
jecxz
and
gs
sahf
xor
loopnew
xchg
mov
ljmp
arpl
sbb
imul
push
clc
inc
xchg
pusha
sub
pop
ja
cld
cmp
out
or
daa
shl
repz
repnz
xlat
jbe
push
xchg
and
fidivl
lahf
rdtsc
xor
or
cmp
mov
jmp
mov
xor
je
je
insl
dec
pop
and
or
adc
cmp
add
jnp
insb
sbb
outsl
ret
inc
lock
xchg
fdivrl
pop
fbstp
loope
mov
mov
int3
mov
mov
inc
lea
jno
pop
je
cmc
add
js
sbb
stos
and
fiaddl
cmp
gs
sub
fwait
xor
sbb
imul
sub
xchg
gs
push
push
int
mov
sbb
xchg
jg
and
mov
lcall
mull
lds
fisubl
mov
sar
or
sbbl
pop
jnp
push
push
adc
mov
mov
aam
icebp
mov
sub
lret
xchg
pop
repnz
pop
shlb
aad
mov
popf
mov
and
lods
jle
lds
mov
mov
add
jge
cli
stos
cwtl
stc
lret
paddd
mov
in
in
cmp
addr16
mov
lea
orl
add
lds
xor
push
mov
je
or
push
subb
adc
lcall
mov
jo
jno
inc
rorb
jecxz
fisubrl
in
inc
jge
sub
iret
popf
imul
cs
or
dec
mov
scas
fneni(8087
scas
dec
andb
out
stc
adc
bound
shrb
push
sbb
xor
js
or
arpl
or
sub
je
push
incb
fisubrl
std
and
mov
cltd
cld
lcall
fimuls
xchg
push
cmpb
imulb
pop
aam
popf
adc
lret
mov
jb
pusha
push
fcoml
xorb
or
cmpsb
fs
xor
inc
mov
adc
lret
roll
stos
jle
jnp
out
or
ljmp
call
in
mov
or
pop
loop
ss
rolb
fcoms
roll
lods
adc
jmp
sti
dec
inc
mov
std
pop
icebp
cmp
xchg
je
add
loopne
or
stc
push
out
mov
mov
push
sbb
movsl
push
outsb
mov
shrb
imul
imul
pop
inc
cmp
cmp
jo
dec
call
push
leave
adc
jg
mov
pop
inc
inc
lahf
xor
pop
mov
cltd
insb
aad
lea
add
jno
cltd
inc
out
repnz
lods
mov
dec
enter
mov
pop
jmp
pop
in
mov
imul
lahf
sub
ret
ret
xor
pop
fildll
pop
fldenv
gs
or
and
add
in
fstps
loope
sbb
xchg
lods
mov
mov
jo
cmp
inc
test
push
sub
xchg
xor
mov
out
mov
sbb
sub
icebp
test
int3
sub
jl
lret
rcrl
repz
jae
cs
pop
movsl
lea
sub
xor
push
xchg
cmp
mul
jns
and
cmpsb
rcrb
cwtl
les
mov
fiadds
sbb
pop
jge
cmp
jnp
pop
mov
add
xchg
add
pop
stc
mov
dec
out
mov
clc
push
ds
jns
jns
pop
adc
fists
push
dec
cmp
push
andb
mov
mov
mov
lock
mov
pop
sub
ret
sbb
xor
not
leave
test
cmc
shl
sbb
sbb
and
data16
push
xchg
lret
xchg
int
push
dec
iret
and
push
mov
stc
sub
packuswb
cmp
arpl
xorl
in
dec
jo
mov
data16
pop
andb
push
or
mov
arpl
mov
out
xor
push
mov
cmc
test
mov
dec
jmp
std
fdivrl
and
out
dec
in
sub
mov
add
push
pop
cli
mov
sbb
xchg
outsl
ficoml
ret
pop
aam
add
inc
pop
into
push
fcmovnb
lds
sbb
xchg
leave
push
xor
xchg
out
push
xchg
scas
xor
push
mov
push
mov
and
in
notl
aas
xor
mov
adc
mov
xor
sti
aad
test
xchg
dec
ja
sub
and
ret
insl
adc
lods
jmp
clc
movsl
cmpxchg8b
inc
xchg
push
xor
xor
sub
lea
fisubl
das
out
mov
enter
out
dec
cmovs
call
stos
js
pop
xchg
popa
mov
xchg
cli
cmp
add
push
aaa
test
add
imul
inc
addr16
iret
leave
cwtl
rcrb
and
or
cmp
or
xorb
negl
test
movsb
mov
loope
xor
arpl
adc
div
add
fs
sarb
mov
pop
rcr
push
stc
hlt
lds
and
and
out
and
cld
mov
or
jne
ja
xchg
adc
and
daa
iret
bnd
push
xor
mov
nop
sbb
daa
incw
out
leave
sahf
in
and
in
stos
dec
and
test
pop
shll
aad
mov
clc
ret
decl
movsb
or
push
adc
out
mov
pop
xchg
mov
outsl
pop
and
cmpsb
cltd
and
jo
mov
sahf
cwtl
mov
ljmp
in
fadds
push
xlat
inc
jecxz
dec
addl
xchg
add
cmp
push
pop
adc
mov
int
inc
jno
mov
lret
popa
pop
stc
sbb
xor
xchg
and
ss
mov
ljmp
xchg
ja
sbb
xchg
sub
jns
mov
mov
mov
cwtl
cld
popa
xchg
sub
or
cs
aam
cmp
adc
or
lods
scas
imul
outsb
addr16
test
jl
mov
sub
pop
insl
insb
sbb
push
jb
and
ja
cmpsl
scas
inc
cmp
fs
mov
sbb
clc
jns
adc
cmc
int
es
or
mov
ret
xor
inc
out
adc
push
std
frstor
mov
jmp
lret
jbe
push
div
jmp
sbbl
jg
add
sbb
nop
popa
dec
andb
sbb
fiaddl
sahf
aam
pop
stc
icebp
fs
and
arpl
xor
mov
call
sub
push
loope
xlat
jns
sbb
in
pusha
dec
jp
sub
subl
je
adc
push
scas
cmp
dec
xor
pop
cmp
stc
fucomip
lods
jg
and
fsts
data16
xorb
stc
dec
mov
out
jecxz
xor
sub
adc
cli
mov
xchg
roll
push
and
in
movsl
cmpsl
ret
pop
orb
mov
stos
sahf
imul
mov
in
sbb
jo
push
ss
sbb
dec
pop
sub
add
gs
mov
xchg
enter
pusha
and
cmpsb
sbb
pop
pop
adc
pop
popa
nop
rolb
in
push
outsb
mov
xor
mov
insl
cld
sbb
daa
aaa
pop
mov
icebp
das
lods
rorb
das
cmpsl
push
lret
fisttpll
lret
sub
lods
and
int3
data16
sahf
pushf
adc
fidivrl
mov
shll
jmp
fisttpl
fwait
jg
js
sbb
iret
rcrl
push
rcrb
xchg
push
fidivrs
or
push
hlt
mov
outsb
xchg
jl
std
mov
add
enter
xchg
mov
jo
push
inc
jae
mov
dec
insb
jg
pop
pop
addl
jnp
cltd
out
aam
mov
popa
push
imul
jno
mov
std
pop
xchg
shl
sbb
mov
decl
inc
jb
mov
cmc
mov
orl
hlt
imulb
pop
je
and
fcomps
in
inc
or
xor
inc
lods
scas
in
mov
push
mov
cltd
cmp
cltd
hlt
jne
fsubr
inc
xchg
je
insb
popf
lock
xchg
test
stc
std
xchg
jae
loopne
pop
hlt
subb
fs
popa
mov
pop
xorl
and
mov
push
push
fmull
cwtl
fldl
cmp
fld
int
cmp
mov
inc
adc
imul
faddl
loop
enter
jmp
sbb
lcall
or
add
push
pop
mov
dec
sub
push
fiaddl
lods
lds
add
push
pop
mov
jo
cmc
xor
out
mov
lcall
cmp
aad
std
pushf
mov
in
adc
lock
cld
fcoml
insl
icebp
dec
movsb
adc
popf
ja
xchg
int3
dec
jl
test
sbb
loop
cmp
sbb
aaa
daa
xchg
mov
roll
ds
popa
adc
scas
xor
hlt
andb
push
jge
cmp
loopne
sub
idivl
int
mov
sub
addr16
das
jnp
insl
and
in
cwtl
pop
or
pusha
push
in
out
dec
pop
and
popf
or
push
ja
and
out
sbb
leave
dec
out
pop
fnstsw
and
inc
dec
xchg
scas
ds
lahf
jne
loop
add
xchg
ja
rolb
fs
inc
lret
shr
mov
and
arpl
jmp
sbb
adc
inc
imul
ljmp
psrad
pop
xchg
mov
sti
mov
mov
das
jbe
shlb
cmpsb
fldt
call
ficoms
nop
mov
push
jae
iret
inc
andl
lea
icebp
adc
sub
mov
pop
or
out
mov
inc
ret
and
mov
and
push
and
ja
aad
adc
jno
and
inc
cmc
mov
jo
mov
cmp
mov
in
aas
outsl
rclb
repz
pop
mov
lahf
dec
outsl
ja
push
dec
and
mov
pop
inc
mov
fwait
shlb
inc
push
stos
jae
ret
sub
adc
add
sub
dec
xchg
sbb
fdivrs
out
inc
dec
js
inc
mov
jo
pusha
popf
adc
loope
aaa
adc
orl
call
pop
pop
cmpsb
cs
pop
insb
push
shrl
movsl
fadds
mov
aam
adc
cmpsb
inc
and
mov
jg
in
enter
push
fildl
or
pop
call
rcrl
bnd
es
or
xchg
mov
fiaddl
pop
and
or
insb
popf
les
push
or
js
cli
pop
xchg
xchg
mov
fwait
int3
nop
std
xchg
and
adc
jne
iret
dec
mov
inc
outsb
mov
and
cmp
mov
jno
je
gs
insb
inc
adc
in
jg
mov
mov
popa
scas
enter
adc
mov
dec
lods
ror
dec
xchg
cmp
enter
cmp
dec
jle
inc
cld
mov
data16
arpl
clc
insb
bound
dec
shll
shrb
dec
aaa
or
cltd
ds
push
or
or
aaa
repnz
add
in
movsb
repz
lret
mov
push
and
xor
repz
mov
sub
mov
sbbb
mov
bound
in
jecxz
or
mov
repz
inc
xor
jge
in
pop
adc
int
popa
pop
mov
dec
flds
repz
pushf
xlat
stc
repnz
push
ror
in
fwait
pusha
inc
decb
out
pop
lret
ja
stc
repnz
push
flds
into
dec
pop
mov
pop
mov
cmpsb
popf
inc
lret
jne
jle
sbb
pop
leave
lret
aam
idivb
push
inc
pop
push
xor
outsl
pop
mov
xchg
mov
sti
sbb
xchg
test
push
out
mov
out
cli
mov
ja
push
stos
flds
push
adc
aas
push
imul
dec
imul
xchg
fdivrs
fstpl
push
les
repz
arpl
fadds
lahf
mov
stos
jp
mov
cli
mov
clc
inc
fwait
add
loope
test
dec
adc
stos
rcr
pop
leave
adc
sbb
xchg
popa
mov
adc
mov
sub
sbb
pushf
jl
shlb
movsb
pop
arpl
call
inc
jae
ljmp
jmp
xor
adc
adc
inc
and
es
int3
cmp
clc
aaa
mov
cwtl
inc
stc
and
push
cs
pop
adc
and
cmp
adc
pop
pusha
xchg
aas
mov
add
popa
lcall
hlt
jg
repz
mov
cli
inc
popa
or
lcall
and
imul
adc
adc
jo
popf
fwait
stos
mov
out
sarb
outsl
sbb
sbbl
repnz
outsb
pop
mov
jmp
push
mov
adc
jo
es
pop
mov
jp
push
shl
aaa
push
mov
mov
addr16
jle
aam
cmp
sbb
mov
enter
or
mov
adc
or
xchg
test
dec
jns
and
xor
lret
roll
sub
xorl
popf
mov
je
in
inc
xchg
imul
dec
outsl
call
mov
jae
fdivp
js
imul
stos
subb
mov
sbb
sub
add
scas
andb
jae
test
jmp
leave
pop
sub
mov
sahf
xlat
out
pop
iret
cwtl
cmp
or
xor
sbb
mov
iret
jb
mov
or
testb
stos
lods
add
dec
mov
jle
xchg
stos
and
test
js
jge
mov
in
andb
mov
je
add
cmc
stos
cmpsl
adc
or
push
push
mov
xchg
xor
pop
mov
cmpsl
mov
in
imul
fimull
pusha
sbb
sbb
mov
aas
xlat
std
push
fld
ss
out
dec
test
mov
adc
lock
mov
aaa
sbb
scas
popw
push
or
or
jp
das
mov
mov
mov
pop
aas
scas
mov
dec
popf
in
inc
jne
hlt
jg
push
sbb
roll
test
aad
or
mov
ljmp
enter
scas
je
cmpsb
cmpsl
int3
in
jl
pop
add
and
sti
inc
aam
roll
jmp
cmc
adc
mov
add
rolb
aam
in
fs
sti
pop
cwtl
ja
int3
push
testl
push
ja
mov
or
and
orl
loope
aam
inc
or
dec
mov
sub
cwtl
dec
sbb
xchg
mov
adc
push
add
pop
jno
rcrl
xlat
mov
jo
add
lret
push
sub
or
pop
sbb
xchg
adc
xlat
mov
inc
bsf
mov
mov
push
xchg
xorl
mov
mov
jmp
clc
les
cmpsl
sahf
hlt
or
in
or
xchg
sti
mov
and
pop
test
gs
and
rorb
mov
pop
mov
add
jae
pusha
dec
scas
push
xor
cmp
cs
repz
rclb
dec
mov
fdivs
imulb
iret
mov
push
cmp
jae,pn
sti
and
sahf
mov
imul
das
or
xlat
pop
ss
jge
hlt
xchg
cmp
jns
rolb
out
popa
pop
push
sbb
in
loope,pt
xchg
pop
lds
mov
xor
addr16
test
mov
dec
pop
add
test
sbb
insl
pop
add
jo
dec
out
cwtl
data16
popf
lahf
xchg
es
mov
sub
push
cltd
lahf
in
sahf
inc
xor
cmp
xchg
sub
sub
mov
push
cmp
ret
push
push
mov
adc
mov
daa
inc
les
mov
insb
add
push
movsl
xchg
and
std
aam
sub
sub
scas
xor
arpl
test
push
je
cmc
cltd
cmp
enter
xchg
push
push
pop
inc
insl
mov
lds
fildll
pop
out
inc
push
pop
fwait
mov
sub
or
push
in
jl
bnd
or
cwtl
stos
fsubl
inc
fildll
bsr
rorl
dec
mov
andb
lds
xchg
sub
xlat
cmp
daa
lock
rcrl
dec
sti
mov
xor
adc
pop
icebp
lretw
inc
mov
daa
inc
jo
cmpsb
mov
pop
stos
jmp
rcrl
fistpll
fmull
lret
outsb
aam
clc
clc
mov
push
xor
scas
jbe
mov
lahf
test
loope
lahf
jmp
dec
push
insb
pop
sbb
outsl
inc
gs
loope
add
mov
sbb
sbb
mov
fldt
or
shl
cli
js
lock
pop
call
push
cwtl
ja
aas
xchg
lahf
mov
sbb
sbb
pushf
inc
sarb
das
xor
mov
in
aad
sub
ljmp
mov
push
jle
ret
sbb
cmc
push
repnz
je
xchg
jl
stos
rcrb
cwtl
fdivs
cmpb
imul
int
xor
sahf
mov
push
or
rorl
sbb
or
into
mov
cwtl
test
cli
inc
xor
pushf
ds
jle
frstor
cmp
xchg
aas
jge
aas
adc
lret
mov
xchg
sub
jns
arpl
sub
arpl
pop
add
out
movsb
aam
sbb
inc
lods
xor
and
add
mov
add
xchg
movb
leave
jno
mov
ja
nop
test
sbb
ss
in
pop
gs
push
fimull
testb
lcall
in
test
push
mov
cmp
xor
outsl
mov
pop
cli
add
dec
adc
arpl
or
sbb
test
push
push
xor
imul
clc
scas
mov
sti
stos
xchg
or
test
lea
stos
icebp
push
ja
aaa
inc
scas
adc
pop
lods
ds
jmp
cmp
test
loopne
xlat
andb
lods
mov
fnstenv
imul
push
mov
or
leave
insl
clc
mov
sti
mov
mov
dec
scas
push
stc
add
push
add
xor
jl
mov
jo
jmp
dec
mov
aad
adc
arpl
add
xor
add
shlb
add
clc
inc
test
enter
jae
cmp
subl
fstl
mov
sti
mov
jge
movsl
and
pushf
repz
lods
rolb
mov
stc
lea
push
scas
aad
test
inc
sar
mov
cmp
mov
push
xchg
fnstcw
test
notb
paddq
ljmp
xchg
call
ret
jle
pop
test
inc
gs
jg
lods
pop
leave
mov
adc
push
movsl
shrb
mov
clc
sbb
push
push
fstps
loope
jno
pop
cs
cmpsl
push
xchg
push
xchg
ja
addr16
push
fiadds
aaa
mov
pop
outsb
idivl
dec
xlat
pop
cs
cmpsl
push
xchg
push
xchg
ja
addr16
push
fiadds
aaa
mov
pop
outsb
idivl
dec
xlat
pop
cs
cmpsl
push
xchg
push
xchg
ja
addr16
push
filds
aaa
mov
add
jle
dec
rcrl
cs
cmpsl
mov
add
fs
fidivs
fnstcw
data16
icebp
ss
push
cs
mov
xor
pop
jle
mov
mov
out
es
ss
push
cs
ds
jbe
inc
outsb
push
or
scas
cwtl
mov
scas
aas
pushf
das
push
push
xchg
cmp
jb
bound
push
mov
std
fyl2x
out
int
cltd
cltd
mov
lcall
push
pop
pusha
imul
xchg
cmpsb
and
into
out
xor
push
push
stos
out
cmpsl
test
movd
dec
dec
jbe
ret
cs
cmp
stos
lahf
into
jp
push
sbb
lret
xor
adc
enter
add
mov
out
or
cs
out
daa
into
es
iret
xor
mov
jno
into
mov
imul
push
lods
jbe
mov
mov
or
jle
fnsave
xchg
mov
cmp
movb
into
mov
cltd
or
cs
sbbb
idiv
push
cmpsb
mov
out
jp
push
das
out
push
stos
push
xor
dec
pop
inc
mov
mov
mov
out
es
nop
dec
pop
push
push
arpl
adc
pop
push
sbb
xlat
out
xchg
stos
mov
mov
pop
imul
insl
inc
add
enter
sahf
popf
xchg
mov
mov
inc
pop
pop
pop
push
jle
sub
inc
outsb
push
jle
mov
mov
out
es
ss
push
cs
ds
jbe
inc
outsb
push
jle
mov
mov
out
es
sbb
mov
xlat
adc
inc
xor
imulb
mov
jp
adc
mov
jecxz
cmp
icebp
xor
out
das
ret
jb
inc
inc
out
cltd
mov
mov
sub
pop
jb
sbb
mov
out
fwait
popf
xor
dec
into
jge
and
inc
cmp
je
sbb
pop
mov
in
and
repz
jmp
in
sub
shll
push
repnz
test
inc
cld
pusha
out
xchg
mov
push
xchg
aam
pop
cmp
int
test
mov
iret
and
div
stos
je
sub
dec
lret
popa
dec
xchg
push
sbb
inc
sbb
hlt
mov
add
dec
push
sarl
xor
dec
rol
or
push
xchg
adc
ficoms
mov
lds
cmpsl
sbb
imul
call
fbstp
fidivl
hlt
stos
test
push
insl
cltd
mov
ljmp
adc
out
or
xchg
mov
mov
sub
and
mov
sub
sub
and
shlb
enter
aam
imul
inc
inc
xlat
inc
hlt
sub
xchg
mov
test
xchg
ds
pop
inc
mov
mov
cmp
mov
arpl
push
mov
cs
rcl
push
mov
jg
rorb
mov
push
cmpsb
mov
mov
mov
mov
dec
lea
inc
mov
dec
sub
push
mov
jns
loop
iret
fidivl
push
cmc
aam
rcll
sub
xor
call
sbb
mov
sub
sbb
popl
cmp
mov
testb
inc
push
xor
inc
test
je
mov
cwtl
inc
pop
inc
scas
add
jle
adc
cmp
shr
or
pop
testb
cld
lods
nop
or
stos
mov
stos
push
dec
outsl
mov
inc
cwtl
xor
scas
sbb
movsb
cmp
xchg
pop
ds
inc
fsubrl
sbb
inc
mov
es
or
sub
and
test
mov
mov
push
clc
test
jp
imul
dec
mov
adc
add
jge
inc
bound
int3
ret
and
mov
repz
hlt
sahf
add
xchg
push
in
jmp
mov
ljmp
loope
mull
bnd
xor
scas
jle
jp
adc
imul
mov
inc
jle
lahf
sub
push
shll
xchg
push
xchg
aaa
cwtl
or
sub
sub
test
mov
push
add
and
movsb
mov
and
fldl2t
pop
ja
cmp
mov
pop
mov
fildl
fcom
sbb
push
mov
std
out
js
xchg
stos
addr16
adc
adc
mov
jecxz
insl
push
inc
pop
push
and
sti
je
jo
adc
mov
jae
sub
sbb
or
xchg
div
cmpb
iret
cpuid
aam
xor
inc
xchg
sub
jp
cmp
mov
xor
mov
pop
and
out
jbe
mov
jmp
sub
out
adc
icebp
lahf
or
das
popf
push
nop
jl
xchg
dec
pop
mov
mov
dec
mov
repz
cmp
lods
cmp
pop
lds
cltd
pop
push
repz
add
mov
in
orl
roll
nop
inc
sbb
mov
pop
pop
addb
shrl
xchg
loopne
call
out
push
ret
mov
call
in
xchg
rclb
add
sub
fcmovnb
cmpsl
pop
out
sti
in
push
aad
int3
popf
xlat
xlat
gs
dec
js
mov
lcall
push
addr16
int3
or
push
xor
pop
or
push
jae
xorl
adc
ss
test
sahf
mov
or
xchg
inc
les
xchg
sbb
lret
xchg
and
add
je
aam
cmp
test
dec
push
push
mov
and
pushf
gs
testl
jne
ret
lods
es
inc
stos
jnp
or
adc
push
stos
dec
dec
aaa
jb
xlat
imul
popa
stc
das
add
add
mov
roll
mov
xor
or
stc
fisubrs
add
fwait
jmp
nop
nop
cwtl
test
push
fisttps
sub
leave
xchg
mov
inc
decb
mov
adc
or
pushf
xchg
movsb
cli
xlat
insb
push
pop
inc
push
popf
icebp
pop
inc
dec
and
mov
dec
cmpsl
mov
loop
xor
popf
sbbb
cltd
repz
popf
nop
test
pop
pushf
fisubrl
adc
adc
adc
and
push
mov
mov
ficoml
push
ljmp
dec
push
fidivl
jbe
in
cmp
cmp
out
mov
push
aas
imul
fcomps
rcll
and
mov
pop
lds
dec
mulb
movsl
mov
loop
inc
lods
popa
pop
sbb
jl
xchg
mov
dec
stos
mov
cmp
cmp
dec
xor
call
jecxz
lods
les
xchg
dec
clc
adc
jbe
and
cmp
movsl
jge
mov
mov
cmpsb
xorb
mov
lods
pop
mov
div
or
fwait
nop
inc
cmp
in
inc
out
xchg
xor
addr16
insl
inc
das
xor
dec
or
pop
movsb
xor
ljmp
fcoml
mov
stos
outsl
in
popl
mov
xchg
in
push
or
jb
ffreep
or
test
popf
xchg
shll
ficoml
inc
cmp
mov
je
adc
push
pusha
sub
adc
add
pushf
push
int
and
inc
adc
dec
xchg
inc
jnp
je
clc
int
dec
mov
add
dec
fldcw
jp
jno
imul
mov
cmp
clc
outsl
sbb
out
or
xor
call
and
push
fsts
mov
cmp
pop
divb
mov
sti
xor
imul
add
fimuls
mov
rcll
in
das
mov
les
and
sub
mov
push
cmp
pushf
and
pop
add
mov
out
fstps
imulb
stc
out
in
lods
cmp
pop
pop
nop
add
fisttps
sub
stos
sahf
lods
push
sub
pusha
jge
ret
mov
in
cmp
stos
dec
mov
fnstsw
out
ds
and
ret
pop
push
clc
mov
inc
inc
cltd
cld
or
leave
test
in
xchg
push
lea
stc
leave
adc
loop
pop
jl
test
fisttpll
jnp
cmpl
orb
push
xor
iret
out
xor
das
int
jmp
loopne
sti
sbb
mov
int
lock
movsb
cmp
adc
mov
push
push
fisttpll
js
pop
cmp
xor
mull
mov
sub
dec
mov
mul
ljmp
inc
frstor
pop
inc
cmpb
lds
aaa
xchg
out
shrb
add
mov
out
fs
inc
lcall
jmp
adc
cmp
cmp
gs
mov
jb
jb
arpl
ljmp
jle
push
gs
xchg
xor
sbb
sarb
pop
mov
fwait
mov
stos
into
les
lods
xor
ss
out
fmul
int
mov
xchg
js
lahf
mov
push
mov
inc
xor
pushf
clc
fsts
jle
nop
out
pop
and
aas
je
add
push
xor
dec
notl
mov
adc
int
mov
pusha
lods
sub
test
mov
sub
mov
ds
mov
xchg
and
pop
sbb
xor
clc
sbb
push
pop
mov
dec
mov
jnp
and
mov
mov
dec
push
es
jae
popf
out
cld
mov
cli
js
into
and
sub
sbb
cmp
mov
jp
mov
mov
push
mov
mov
sbb
mov
pop
inc
pusha
pusha
adc
fmuls
cltd
jge
lods
jo
or
and
pop
mov
enter
repnz
repz
mov
add
imul
jne
push
pcmpgtb
mov
xor
mov
call
ret
mov
in
or
jecxz
scas
pop
xchg
test
bound
push
fsts
scas
addr16
in
loop
aam
ds
mov
xchg
aaa
and
and
movsl
and
dec
bound
adc
iret
movsl
lret
rol
mov
push
stos
sbb
push
sahf
inc
popf
adc
repnz
push
ror
imul
mull
lods
jbe
inc
or
es
or
mov
jae
jae
or
mov
mov
adc
mov
sbb
nop
push
pusha
jp
sub
adc
mov
das
addr16
outsl
scas
jle
or
mov
sub
stos
addb
mov
pop
lret
mov
scas
and
js
lahf
add
push
mov
inc
je
stos
add
addr16
fcoms
mov
cmp
dec
lahf
js
xchg
test
dec
es
and
scas
add
ja
adc
mov
xor
subb
lahf
les
jge
xchg
mov
mov
dec
pop
inc
sbb
push
lea
cs
aas
jp
mov
mov
cmp
cmc
sahf
mov
int3
push
jns
stc
mov
test
xchg
aad
icebp
pop
xchg
int3
sbb
mov
mov
mov
add
and
stos
xchg
cld
sub
gs
imul
mov
outsl
daa
jb
mov
mov
imull
in
sub
ret
inc
in
insl
xchg
outsb
add
test
xlat
jecxz
jle
dec
imul
jg
fwait
or
sbb
dec
jb
int3
sub
fwait
shrl
sarb
cltd
xchg
mov
xchg
mov
test
xor
add
mov
mov
divb
pop
mov
scas
jl
mov
jno
ja
sub
dec
add
jle
lods
inc
jmp
mov
mov
xchg
lds
outsb
mov
mov
xor
out
inc
push
cmpsb
dec
pop
lret
leave
mov
data16
cmpsb
pop
fsubrp
sub
adc
dec
dec
lret
pop
repnz
pxor
and
xor
test
add
xor
pop
ja
shrl
shll
fwait
jp
lahf
sub
push
mov
call
sub
mov
int3
add
dec
xchg
in
addb
je
jl
repnz
and
push
movl
bts
xor
push
push
xor
mov
fadd
fcomps
sub
sbb
mov
push
pusha
orl
adc
ss
pop
outsl
adc
push
add
ficompl
icebp
test
fsts
pop
sbb
data16
mov
js
pop
gs
inc
push
sub
dec
lds
and
cmp
jbe
sbb
pop
dec
aaa
push
aas
mov
mov
xchg
sub
inc
out
jl
iret
test
inc
inc
push
push
pop
fisubl
adc
add
gs
div
add
adc
aaa
or
mov
into
or
je
hlt
sbb
or
push
lcall
or
in
mov
mov
jb
xchg
push
stos
inc
push
xor
cmp
insl
imul
mov
iret
dec
inc
sub
dec
cli
popf
in
arpl
out
ret
push
aam
mov
pop
in
imul
lret
shlb
adc
mov
mov
lea
xchg
loopne
inc
push
push
test
push
stc
dec
addr16
cmpsb
rcr
test
outsb
fistps
leave
addr16
test
xchg
xor
cltd
test
aad
mov
inc
mov
movsw
mov
fcmovne
or
movl
or
pop
jmp
jecxz
and
or
mov
cltd
xor
mov
mov
sub
mov
inc
jne
aaa
ret
mov
gs
jbe
in
lret
gs
jmp
push
stos
jns
push
jno
mov
inc
sbb
mov
icebp
adcl
jl
mov
clc
jno
shlb
nop
mov
into
mov
mov
xchg
les
fcomps
xor
push
scas
mov
nop
add
int3
outsb
mov
popa
sbb
test
bound
or
dec
lods
sbb
dec
dec
xchg
mov
inc
cmp
xchg
sub
cmp
aaa
cmp
adc
push
sbb
and
outsl
push
xor
nop
fs
sub
loop
jp
pop
out
es
ret
ret
ljmp
adc
mov
sub
jae
scas
pop
insb
mov
sub
adc
in
lds
scas
es
cltd
sbb
jne
mov
sti
adc
mov
push
aam
or
fwait
jg
inc
insb
jns
std
hlt
xchg
fcmovbe
jbe
cmp
xchg
push
mov
aas
jnp
notb
popf
sub
insb
xchg
loope
aam
sbb
in
mov
jo
adc
ja
lds
jecxz
mov
stos
lret
mov
andb
lret
and
xorl
loop
clc
mov
out
enter
sub
imul
mov
stos
fnsave
inc
in
fcoms
in
lcall
and
out
mov
clc
jno
int
mov
push
ljmp
test
pop
mov
das
das
or
push
ljmp
inc
xchg
je
mov
xor
test
aaa
movsl
dec
inc
nop
aas
lret
push
push
loopne
xchg
pop
pushf
jl
push
mov
hlt
xchg
inc
lods
push
mov
mov
fcoms
cltd
movsl
cwtl
xor
in
cmp
arpl
movsl
das
mov
notl
loopne
mov
lret
mov
les
roll
adc
pusha
and
aaa
mov
sub
adc
lock
mov
push
cltd
mov
xor
pop
sahf
fmul
cmp
xlat
add
jns
mov
fwait
aad
inc
ret
arpl
add
ret
pop
fldcw
std
jns
das
mov
mov
pusha
lret
pop
mov
or
jmp
ret
or
nop
mov
test
inc
xchg
lods
mov
and
adc
mov
lods
lods
addb
outsl
popa
fmull
cs
lods
out
dec
dec
lret
fistl
insb
and
mov
pop
mov
xchg
sar
jae
and
sbb
jns
sbb
testb
sbb
fmull
jnp
ret
into
je
cmpsl
ja
fxch
sbb
test
cltd
mov
jbe
je
mov
jg
aaa
mov
aas
cmp
rorb
loope
mov
stos
xchg
stc
sbbl
sub
pop
push
inc
jne
arpl
sti
test
mov
dec
inc
and
adc
loope
xchg
into
cmpsl
jmp
ss
rol
xchg
xchg
push
stos
leave
stos
cs
es
jge,pt
cli
sbbl
jl
enter
mov
push
cs
sub
aad
jbe,pn
pop
data16
mov
dec
daa
movb
jbe
movsl
fistps
ret
adc
fsubs
xchg
jl
pop
jb
adc
mov
call
and
mov
adc
cld
jmp
jl
dec
jge
ret
imull
outsb
test
dec
out
cltd
push
lock
rorl
xor
inc
out
sub
test
push
sbb
mov
jae
clc
insl
and
xchg
fnstsw
lods
and
pusha
cmpsb
mov
iret
xchg
sub
pushf
loop
mov
jp
jl
mov
scas
add
jp
sbb
sbbl
dec
push
sbb
fcompl
cs
mov
popf
xchg
cltd
xchg
pop
xchg
dec
jp
mov
jle
and
addr16
in
inc
mov
mov
clts
jb
add
in
gs
cli
je
jb
fs
lods
sub
jo
dec
dec
lcall
daa
sti
cmpsb
lock
sbb
ret
andl
mov
and
out
bound
fwait
add
into
mov
rcr
jmp
outsl
fstpl
jnp
dec
mov
add
dec
xchg
push
mov
xchg
movsb
fsubl
nop
stos
and
dec
adc
add
pop
mov
push
iret
lcall
pop
enter
xlat
xchg
jnp
jb
jle
or
mov
addb
pop
pop
addb
mov
je
mov
and
xchg
out
add
mov
outsl
inc
call
or
mov
push
movsl
or
add
cwtl
or
dec
scas
sti
mov
dec
idivl
lock
add
push
stos
pop
inc
jbe
jns
mov
cmpsb
mov
je
daa
notl
call
mov
fstpl
xor
bound
or
xchg
loop
leave
xchg
pop
out
mov
sahf
ljmp
xchg
push
push
sub
mov
fs
adc
data16
cmpsl
mov
icebp
xor
pop
inc
adc
xor
cld
xor
xlat
jo
push
dec
js
inc
mov
mov
orb
xor
dec
mov
xorb
add
stos
stc
lock
add
add
sbb
divl
xchg
inc
add
push
and
pop
mov
rcrl
scas
add
fwait
js
dec
movsb
inc
leave
pop
sbb
lcall
jbe
mov
test
push
jno
inc
sbb
cmpsb
fsts
imul
or
xchg
dec
and
movsl
icebp
mov
sbb
adc
inc
stos
and
je
cmp
sub
dec
mov
lcall
daa
sub
mov
mov
cmpsb
into
dec
mov
sub
lock
adc
xchg
testb
dec
pop
arpl
ret
aad
aaa
add
pop
push
xchg
xchg
sbb
pop
cmp
and
out
push
aas
cmp
stos
in
je
pop
js,pn
mov
push
dec
cwtl
cmc
jo
fwait
sbb
mov
xlat
mov
xor
pop
test
push
sbb
jno
fsubr
imul
mov
rolb
loope
js
scas
sbb
cmp
ret
sub
jecxz
sbb
sti
repz
push
push
addr16
mov
gs
push
push
sbb
xchg
mov
mov
push
inc
in
movl
pushf
cmpsl
add
dec
fcmovne
mov
push
das
cmp
push
out
icebp
jbe
rorl
pop
pop
lret
pop
dec
pop
cmp
push
inc
test
jno
std
je
push
mov
pop
pop
shlb
mov
stos
cmp
pop
icebp
das
pop
outsb
scas
andw
sbb
mov
fcomp
sub
repz
js
aam
pop
xor
je
lcall
das
mov
jmp
aam
movsb
xorb
test
jmp
jp
add
pop
jnp
mov
inc
adc
or
stc
pop
dec
mov
in
ljmp
or
and
sbbb
sbb
int
pusha
push
arpl
das
xor
push
test
lcall
scas
bound
mov
mov
popf
jl,pt
sub
ss
jmp
cmp
cvtpi2ps
mov
and
sbb
leave
add
movsl
and
sbb
inc
ljmp
aam
jb
js
ljmp
les
dec
loopne
cmp
pusha
insl
and
dec
sarb
stos
adc
hlt
jge
cmc
mov
mov
daa
jg
iret
adcl
cmpsb
aas
les
add
lret
xor
xor
loope
xchg
int
sub
gs
sbb
pushf
mov
mov
mov
mov
add
loope
mov
scas
cmp
jae
test
imulb
xchg
fs
mov
cmpb
xor
or
mov
repz
inc
add
xlat
movsb
dec
lock
mov
stos
mov
daa
and
movsl
cli
into
dec
pop
daa
inc
jae
pop
nop
stos
fisttpl
loope
shll
lock
sbb
adc
arpl
jno
mov
xchg
gs
fistpl
pop
or
fiaddl
sti
dec
outsl
in
mov
sbb
adc
into
sub
bnd
popa
inc
adc
mov
out
jg
adc
dec
sahf
flds
fsubrl
dec
mull
icebp
push
push
adc
or
sub
push
adc
jge
mov
rol
jmp
mov
pop
mov
mov
xorb
mov
das
jle
dec
xlat
cld
inc
sub
or
jecxz
xchg
scas
test
add
out
and
push
or
push
ds
jbe
inc
outsb
push
jle
mov
mov
out
es
ss
push
cs
ds
jbe
inc
outsb
push
jle
mov
mov
out
es
ss
push
push
push
ds
jbe
inc
outsb
push
jle
push
mov
xchg
neg
into
aam
es
xor
pop
cs
aas
fs
jbe
out
jle
jno
xor
scas
xchg
leave
xchg
inc
jle
cmp
sub
dec
insb
enter
call
push
fisubrl
sbb
in
dec
cld
jns
push
cmp
mov
pushf
fsubrs
stc
dec
call
cmp
or
sbb
in
dec
pushf
sbb
push
mov
fsubrs
clc
dec
call
cmp
or
sbb
inc
dec
cld
sbb
popa
rcrl
incb
test
enter
mov
filds
fwait
sbb
jb
hlt
ja
cmp
imul
cmp
lea
test
ret
xor
fstpl
mov
and
in
in
notl
int
xor
outsb
idivl
add
xor
pop
adc
add
or
and
jae
adc
fadds
movsb
cmp
subl
jns
orb
and
and
leave
std
mov
mov
adc
sbb
mov
xlat
adc
cli
enter
insl
movsl
js
inc
mov
jns
cld
cmpsl
cltd
sahf
cld
or
mov
sub
clc
dec
call
cmp
or
sbb
in
dec
cld
js
push
mov
lods
add
fildl
cmp
inc
int
xor
or
insb
int
iret
push
mov
insb
mov
dec
mov
pop
mov
xchg
and
mov
iret
jnp
push
and
enter
mov
or
sbb
in
dec
cld
js
push
mov
fsubrs
clc
dec
call
cmp
or
sbb
in
dec
cld
js
push
mov
fsubrs
jne
mov
or
pop
fimull
adc
sbb
mov
cld
outsl
test
rorb
dec
xor
mov
scas
dec
add
in
ror
mov
aaa
jbe
mov
cmpsb
xchg
out
mov
mulb
scas
lock
dec
repz
sub
inc
push
outsb
and
out
xchg
inc
in
mov
push
insb
or
pop
mov
cmp
pop
adc
jo
rep
mov
dec
and
xchg
xchg
lret
std
mov
xchg
sbb
int
push
nop
xchg
addl
imul
xor
add
fcmovnb
xchg
cli
loope
sbb
pop
xchg
andb
ss
scas
test
insl
stos
or
aad
movsb
push
outsb
xor
adc
cmpsb
push
out
clc
adc
jno
repz
je
mov
sub
sub
dec
mov
mov
pop
int3
adc
inc
aad
cmpsl
jmp
call
cmp
lea
imul
popa
lret
push
or
xor
leave
sbb
xor
adc
mov
aam
jge
aam
incb
jl
jb
add
mov
mov
pop
dec
outsl
and
xor
pop
mov
gs
stc
jo
push
mov
inc
and
adc
fwait
arpl
scas
xchg
loop
pop
mov
inc
fisttps
push
loope
aas
es
jl
lea
pop
leave
les
xor
xchg
loop
mov
jecxz
and
inc
fcmovnbe
xor
lret
sbb
mov
out
jno
push
sbb
movsb
mov
ss
addr16
fmull
push
mov
push
jp
cmp
adc
inc
out
xchg
je
inc
mov
stos
xchg
jle
test
repz
mov
notl
std
arpl
adc
popa
movsl
inc
in
aas
mov
mov
jb
mov
cli
in
lret
cli
dec
add
cmc
sub
cmp
es
cmp
test
fnsave
out
jg
insl
test
inc
cmp
cmpsb
imul
imul
push
mov
bound
out
xor
scas
mov
stos
push
jl
dec
mov
or
mov
push
mov
scas
enter
dec
push
int
fmull
loope
push
mov
pop
adc
adc
mov
xchg
insb
mov
push
cmp
sahf
dec
in
pop
inc
out
rcr
inc
testl
push
mov
enter
in
pop
mov
fwait
fs
pop
test
sub
or
push
ret
pop
push
stos
lret
cmp
call
push
in
orb
mov
outsb
push
pusha
mov
fbld
mov
dec
and
pop
in
stc
push
out
lods
jge
lds
cmp
sbb
jp
test
daa
arpl
aad
imul
mov
jmp
aas
cmpsl
std
push
xorl
daa
test
sub
sbb
pop
ss
hlt
pop
jl
sub
push
push
sbb
xorl
shll
sbb
pop
xor
jno
scas
jecxz
jbe
hlt
mov
lahf
cmp
imul
push
data16
lret
push
loop
sqrtps
outsb
xchg
mov
in
js
jl
clc
sbb
push
jge
std
xchg
imul
and
adc
outsl
sbb
mov
xchg
imul
jnp
cmp
xchg
sub
dec
push
sub
call
mov
rcr
pop
mov
xor
imul
and
dec
out
and
pop
adc
fs
subl
leave
in
dec
popa
mov
fsubr
inc
psubd
arpl
xchg
inc
pop
push
aas
std
bound
push
mov
push
push
push
push
aad
das
movsl
lds
imulb
out
loopne
mov
xchg
push
lret
or
insb
rclb
xor
out
test
add
xchg
rcrb
adc
xchg
add
addl
adc
jle
outsl
xchg
dec
jl
xor
jge
sti
push
mov
pop
fldenv
clc
je
clc
dec
lods
ja
xchg
enter
cs
mov
pop
sbb
and
std
and
mov
fcom
rorl
out
je
ret
xchg
cs
mov
lods
ljmp
cmp
jle
pop
mov
adc
mov
cmpsl
adc
jne
push
fsubr
rorb
out
xlat
xchg
mov
push
outsl
inc
and
cld
jl
mov
aas
cld
pop
mov
or
mov
adc
popf
rorb
mov
mulps
dec
add
xor
jge
ltr
and
rolb
mov
and
mov
mov
jle
clc
xchg
and
shrb
int
xchg
sbb
fwait
aam
add
jmp
adc
ja
mov
mov
insb
cld
xchg
test
rcrl
repnz
fsubl
fdivs
ficoml
pop
mov
data16
xchg
shl
add
je
lret
jmp
icebp
les
jge
mov
loop
xchg
jns
out
and
mov
mov
in
xchg
mov
pusha
mov
jns
push
push
or
arpl
or
sub
sbb
adc
sub
dec
mov
dec
mov
cmpsl
pop
rclb
add
sarl
pop
sbb
pop
lds
adc
pop
jnp
dec
icebp
add
pop
in
lcall
pop
sbb
nop
mov
mov
sbbl
dec
daa
test
cmp
insb
sbb
aas
enter
rcl
jl
add
cli
mov
scas
xlat
xchg
cmp
cltd
negl
sub
lret
inc
scas
xchg
out
xchg
push
leave
adc
pop
inc
dec
gs
iret
outsb
add
out
andb
push
xchg
cmp
sahf
and
pop
call
sbb
movsb
cmpsb
push
add
lds
in
dec
int3
add
outsb
fldlg2
cli
fcomps
fmuls
and
dec
mov
fwait
movsw
insl
mov
push
push
lret
jge
cmpsl
imul
mov
xchg
hlt
mov
push
inc
lret
negl
cmc
mov
cli
mov
cmpl
xchg
mov
loopne
cmp
int
xchg
loop
aas
movsl
fs
ljmp
jae
loop
xchg
mov
mov
shrb
cmp
xchg
iret
push
dec
or
jno
sub
mov
mov
or
in
das
imul
ljmp
push
dec
sub
lahf
xor
cwtl
std
movsb
pusha
mov
xchg
sbb
or
sub
pop
pusha
es
int
dec
cld
adc
int3
add
mov
dec
jg
fnstsw
bound
pop
movsl
jno,pn
cs
cmp
data16
mov
lds
dec
sahf
jle
pop
fmuls
inc
mov
pop
scas
push
andb
mov
movsl
fists
push
aas
and
fs
fistps
rorb
xor
lret
cmp
mov
ja
push
pop
xchg
pop
fistpl
stos
popf
add
push
and
andb
std
sub
fidivl
push
ret
sub
sbb
sarb
sahf
test
mov
push
test
push
inc
inc
lret
inc
jae
or
fisttpl
fisubl
mov
push
aaa
sbb
and
xchg
daa
dec
jno
mov
mov
aam
push
bound
pop
lret
jne
and
mov
imul
fwait
add
jp
ljmp
inc
xchg
mov
and
mov
pop
arpl
and
mov
mov
ja
nop
les
jbe
sub
and
add
push
cmp
stos
gs
push
push
push
repz
add
and
outsl
in
dec
cwtl
divb
mov
jae
cmp
and
out
mov
jmp
les
mov
dec
jmp
mov
sti
sbb
xor
jne
xchg
lahf
es
outsl
sbb
lret
test
cmp
xor
fisubrs
jp
lret
push
data16
jbe
cmc
jmp
es
jecxz
repnz
in
jecxz
pop
popa
xchg
jge
cwtl
stos
ljmp
ss
cltd
and
jnp
sti
fstpl
adc
and
pop
addb
test
and
mov
sti
sti
sbb
xor
adc
out
push
add
pop
and
rcl
ret
lea
enter
pop
stos
pop
ret
sarb
pop
lds
push
shlb
push
movsl
mov
lea
jge
adc
mov
inc
inc
xchg
mov
in
add
imul
inc
cmp
aam
popf
adc
adc
mov
in
fisttpll
inc
add
xor
jae
inc
jp
aad
sub
rol
fs
clc
ss
or
bound
lret
jge
repz
stos
movsb
cwtl
jmp
mov
decl
es
es
in
adc
dec
orb
aad
mov
scas
cmp
jmp
or
lahf
mov
mov
or
shlb
js
testb
xchg
cmpsb
ret
pop
in
push
scas
fnstsw
inc
add
pop
mov
sbb
xchg
fmuls
idiv
lods
xchg
cwtl
mov
or
jo
dec
jnp
sub
lds
push
outsl
fdivs
pop
sub
cmpsl
jmp
lcall
cmp
or
leave
dec
add
push
add
imul
shrb
push
xor
pusha
pop
test
sub
xchg
out
mov
lock
sbb
mov
ja
leave
or
pop
add
sti
and
sbb
leave
push
sar
add
stos
inc
push
out
je
push
repz
pushf
mov
mov
push
stos
je
fidivrs
jmp
fsubs
or
or
outsl
in
xor
sub
dec
loope
lahf
scas
adc
jo
aaa
adc
andl
int
and
cmp
mov
cmpsl
aaa
sub
fsubrs
or
mov
sbb
push
clc
cmp
mov
or
jne
cltd
mov
cmp
pushf
mov
out
aas
mov
jo
adc
sub
shl
out
adc
push
aad
and
in
ret
aas
jbe
gs
in
jb
jl
aas
movsb
cmp
pop
fisttps
iret
aas
xchg
or
aas
lcall
shll
add
in
mov
repnz
rcrl
loope
mov
lods
xor
push
pushf
sbb
push
imul
adc
cmpsl
leave
fsub
push
and
xor
cwtl
inc
jo
add
stc
push
sbb
adcb
mov
jbe
js
jle
cld
pop
mov
lea
es
mov
push
fmul
and
jle
jno
mov
loopne
test
pop
insb
push
aaa
cmpsl
cmp
adc
in
dec
stc
popf
sti
push
lret
inc
adcl
ds
pop
test
ret
jl
and
imul
xor
add
dec
leave
cwtl
mov
fisttps
mov
das
in
movsl
dec
pop
pop
sbb
adc
mov
sti
cmpsl
addr16
xchg
daa
or
cs
jmp
or
pop
mov
nop
xor
jbe
and
test
lods
arpl
mov
or
shlb
mov
cltd
xor
and
inc
and
xchg
push
stos
sbb
fildll
int
arpl
mov
nop
push
into
sbb
in
inc
pushf
je
shlb
mov
inc
mov
out
and
sbb
sub
fwait
push
or
push
fs
aaa
add
xchg
fmull
adc
das
rorb
mov
lock
mov
xor
ret
xchg
testl
cmp
dec
popa
mov
mov
pop
dec
and
pop
add
mov
std
out
movsb
lret
inc
lods
subb
jb
dec
xchg
push
push
lcall
adc
mov
and
cmp
xchg
cmp
cmc
cmc
sub
jo
pop
pop
pop
sub
sbb
cltd
sti
xchg
int3
sbb
and
sbb
test
daa
shlb
jne
or
stos
or
into
hlt
xchg
test
mov
and
mov
out
andb
movsb
testb
dec
shlb
insl
out
jns
xchg
in
and
movsl
mov
dec
mov
sti
push
adc
jmp
notb
in
xchg
jns
fldenv
inc
and
cmpsl
fsub
hlt
and
sbb
scas
mov
cmc
push
out
movsb
movsl
and
inc
outsb
andl
dec
dec
dec
cmp
repz
mov
mov
ret
xorl
out
negl
push
ficoms
fildl
repnz
xor
add
popa
sub
xchg
xor
addr16
sub
pop
push
mov
and
push
fcmove
imul
mov
das
das
push
lcall
or
decb
add
jbe
lahf
dec
cs
xor
lods
and
mov
ljmp
inc
mov
push
imul
and
push
dec
incb
pop
dec
cmc
mov
xchg
into
dec
xlat
and
in
test
mov
leave
pop
adc
aaa
or
iret
or
jle
cmpsl
dec
push
repz
mov
aaa
dec
lret
rol
mov
fiadds
jb
data16
xor
add
popf
jecxz
lods
pop
test
daa
mov
mov
sahf
xor
xchg
hlt
aas
and
mov
addr16
inc
cmc
inc
test
pop
cmp
daa
adc
cli
sbb
push
shlb
shr
xchg
fs
push
jle
repnz
sub
ds
les
xchg
insb
xchg
test
pop
js
mov
fcoml
pop
dec
cmp
lock
test
and
mov
scas
cmp
jmp
jp
sub
cltd
add
pop
pop
jae
ljmp
dec
sub
popf
mov
xor
xor
sbb
pop
in
adc
iret
imul
push
jmp
cmc
add
xorb
inc
xchg
stos
pop
push
ja
dec
mov
xchg
sub
rorb
or
test
jge
ja
cwtl
movl
jmp
roll
mov
mov
jle
stc
outsb
xor
mov
xor
hlt
fstps
repz
jo
int3
inc
mov
dec
xchg
mov
or
sahf
popf
adc
dec
mov
sub
into
adc
mov
outsb
out
ss
xchg
xchg
push
jecxz
xchg
jp
and
sub
outsb
sub
inc
call
push
lahf
test
mov
lock
bound
test
lds
in
cmp
inc
inc
hlt
sahf
cmpsb
repz
lcall
into
dec
and
std
mov
cltd
xor
call
subb
mov
sub
cld
xchg
push
xor
stos
inc
mov
fildll
inc
sub
ret
pop
test
cmp
or
and
sub
iret
or
or
js
pop
lcall
mov
lret
loop
mov
cwtl
fbld
push
push
push
and
mov
out
mov
imul
mov
push
xchg
push
pop
rcrl
aad
add
mov
cmp
mov
lret
lahf
dec
ljmp
add
xchg
dec
mov
aad
push
push
insl
adc
aas
inc
clc
xchg
sbb
ja
cmp
aas
xchg
in
imul
fcmovu
loope
mov
ja
jp
repnz
in
scas
fdivrl
mov
sub
pop
inc
add
sbb
pop
add
fwait
test
or
shrb
lahf
shrl
cmpsb
loope
xchg
dec
mov
xor
popf
mov
sub
pop
xor
js
push
pop
or
xor
stos
pusha
pushf
cwtl
lds
mov
sbb
mov
sub
jp
mov
jb
fwait
cmpsl
or
and
pop
sbb
mov
repnz
lds
cmp
in
inc
push
dec
adc
xor
pop
lock
push
clc
rcl
add
in
adc
test
jecxz
scas
mov
jg
mov
push
mov
das
fsubrl
sbb
mov
loopne
call
and
adc
mov
adc
aam
std
int
push
dec
push
add
loop
inc
stos
mov
mov
fadds
mov
aad
mov
repnz
and
scas
imull
pop
lods
mov
mov
xchg
ljmp
lret
pushf
test
mov
shlb
push
push
adc
stos
leave
mov
repnz
fstps
aad
pop
mov
pop
scas
test
fcoms
push
jno
lcall
lds
pop
stos
pushf
mov
pop
in
cs
dec
sti
loop
shrb
sub
je
push
or
cs
dec
lock
iret
add
loop
jmp
jecxz
loope
std
xlat
and
jp
loop
jne
sbb
sahf
add
mov
fmull
stos
pop
jb
es
pop
lret
sub
lock
aam
push
cmp
pusha
push
sub
faddl
xor
sbb
mov
fidivl
jge
mov
sub
sbb
push
movhps
inc
cmp
push
fildll
orl
jecxz
insl
dec
test
scas
mov
std
negl
sbb
hlt
jb
mov
hlt
popa
jbe
mov
lret
and
mov
jmp
sub
push
int
adc
out
or
mov
jecxz
push
popf
shll
sub
jo
push
jae
xorl
arpl
adc
mov
stc
imul
test
rcll
dec
sti
in
mov
ja
cmp
data16
ret
lahf
dec
inc
arpl
shlb
movsl
pop
add
ret
clc
ljmp
push
fisttps
mov
lahf
rorb
aaa
aaa
adc
or
mov
es
add
inc
pop
mov
cmp
and
into
es
and
push
jbe
cmc
repnz
sbb
js
cli
aam
lea
jg
xor
mov
xor
pop
jp
cmpsl
add
and
add
movsl
pop
and
test
ret
sub
loope
shlb
data16
ja
pop
sbb
push
mov
and
fucomi
enter
icebp
and
jl
pop
pop
stos
fisttpll
push
roll
xor
jbe
xor
inc
mov
ss
lahf
jne
pop
dec
adc
call
and
and
hlt
psllw
sub
ds
mov
call
mov
or
test
ss
xchg
fdivrl
inc
adc
pushf
popf
js
mov
inc
or
shll
outsl
repnz
adc
xor
jne
sub
inc
nop
push
mov
jno
mov
push
and
mov
push
mov
xchg
rorl
pop
pop
addr16
outsb
sub
rcrl
leave
adc
jmp
lcall
adc
jmp
dec
adc
cmc
jg
movb
inc
and
and
nop
and
dec
int3
mov
rcl
test
decb
es
xchg
stos
mov
mov
lret
arpl
add
cmc
das
dec
and
jnp
mov
jl
faddp
scas
dec
ja
lods
insb
mov
popf
pop
movsb
mov
and
adc
sarl
arpl
sbb
sahf
or
test
addr16
pushf
pop
shufps
pushl
aam
imul
add
mov
mov
int
cmpsb
dec
pop
ret
sarl
push
rolb
fisttps
scas
dec
jmp
mov
xor
repnz
mov
lock
push
jns
hlt
scas
add
cli
cmp
sahf
leave
jns
sbb
inc
daa
xchg
std
mov
inc
loopne
fidivs
fcompl
out
jo
mov
scas
movsl
lret
fildll
repnz
stc
mov
pop
sub
in
sbb
push
pop
xchg
enter
ret
mov
sub
mov
les
fs
xor
in
cmc
or
cwtl
iret
mov
lret
fistpll
or
std
dec
gs
mov
out
push
xchg
shll
mov
or
out
push
subl
cmp
push
dec
jo
movsb
das
test
inc
sub
ljmp
data16
mov
xor
xor
mov
gs
push
ja
lret
dec
pop
das
cmp
test
repz
ljmp
icebp
inc
sti
jns
rcr
popf
jo
mov
xchg
jmp
add
sbb
rorb
mov
mov
out
addr16
fnstcw
mov
ss
repz
xor
add
call
cmp
or
sbb
in
dec
cld
js
push
mov
fsubrs
clc
dec
call
cmp
or
sbb
in
dec
cld
js
push
mov
fsubrs
clc
int3
call
mov
pop
insb
dec
cld
js
push
mov
fldcw
stc
dec
call
cmp
or
sbb
in
dec
push
ror
push
inc
jae
arpl
dec
mov
test
sbb
add
nop
sbb
pushf
pop
mov
imul
sbb
or
cmp
sub
fcompl
int3
or
cmp
in
mov
mov
shrb
sub
mov
dec
mov
negl
daa
call
cltd
add
jl
add
adc
addr16
sub
cmp
mov
test
enter
push
xor
aaa
mov
mov
loope
sub
sub
rcrb
jns
and
or
or
jp
aad
dec
leave
xor
pop
add
jmp
dec
leave
dec
je
nop
imul
stc
or
ret
mov
int3
idivb
adc
arpl
mov
mov
inc
icebp
dec
loopne
test
cld
xchg
dec
or
jl
sub
xor
mov
mov
in
ret
ret
sbb
enter
sbb
adc
fistpll
xchg
sahf
jl
insb
mov
fnstenv
loopne
lock
push
adc
inc
xchg
jns
or
or
bound
fdivl
jno
insb
mov
xor
sbb
jns
add
loope
mov
leave
or
sti
leave
popf
jns
mov
dec
xchg
push
sub
es
in
or
fsubs
in
sbb
mov
leave
cmp
sub
fcompl
int3
or
cmp
sub
lods
imul
test
cmp
sub
fcompl
int3
or
cmp
sub
lods
imul
mov
push
inc
mov
mov
aas
bound
and
gs
or
daa
mov
sub
or
scas
loope
xor
dec
out
ds
xor
pop
ja
loope
imul
out
dec
jae
insl
nop
fstps
rcll
test
icebp
cmpsl
dec
lahf
ja
mov
mov
outsb
rorb
pop
add
cmpsb
shl
and
or
cmp
push
pop
jne
lret
push
repnz
push
xchg
hlt
pop
sub
ret
jmp
cli
test
fisttpll
mov
mov
push
fcmove
jp
inc
enter
sbb
xor
mov
xchg
stos
cmp
mov
ja
pop
xor
ficomps
pop
xor
xor
mov
jg
xchg
stos
movsl
mov
dec
add
pop
and
cmp
mov
lea
inc
inc
aaa
jge
cmc
cmp
and
lcall
push
cmc
shlb
clc
in
inc
movsb
push
jmp
push
adc
cmp
cmp
push
adc
push
push
sar
call
js
dec
push
sbb
insl
insl
xor
and
fwait
pushf
sub
out
ljmp
add
dec
int
out
leave
xor
testl
or
ja
and
xchg
inc
sub
loop
jle
lahf
std
ds
std
cmp
adc
cmpsl
xor
add
mov
addb
leave
cmp
push
jmp
inc
push
lea
jg
aaa
cmp
enter
add
aas
sub
mov
dec
repnz
adc
in
out
sub
cwtl
sahf
arpl
cld
mov
lds
jecxz
outsb
pop
aaa
push
stos
lods
sbb
mov
adc
or
out
push
dec
div
pop
into
mov
and
pop
pop
sbb
popf
sbbl
test
adc
stos
mov
rolb
fsubs
orb
inc
inc
fcompl
xchg
add
in
jb
sbb
rcll
mov
dec
ss
js
mov
sahf
and
icebp
lahf
or
shrl
mov
movsb
pop
adc
adc
loop
dec
cmp
inc
mov
inc
out
imul
jno
ss
sub
int
xchg
aaa
inc
outsb
fdivr
xchg
dec
mov
sahf
add
xor
fdivs
stc
mov
imul
loop
shrl
in
aad
or
xor
dec
mov
and
pop
pop
fidivrl
adc
movsb
ljmp
xor
mov
xlat
stos
push
adc
mov
out
popa
cmp
jb
jns
xchg
mov
jg
sub
xchg
dec
jnp
cmpb
mov
addr16
sub
mov
test
jmp
or
adc
mov
jo
js
add
xchg
lret
jge
or
push
mov
jne
rcll
jns
xor
icebp
inc
xlat
inc
or
sbb
cwtl
ret
test
out
lods
inc
inc
or
pop
mov
sbb
xchg
jp
push
shr
xchg
inc
mov
mov
pushf
in
add
and
orb
scas
push
cmp
loop
stc
sub
pcmpeqw
dec
fucomi
aaa
sti
repz
sub
fstpt
aaa
sbb
xchg
add
xor
xchg
cmp
into
mov
add
pop
push
cli
out
xchg
movsb
iret
scas
dec
fcmove
jge
xchg
cmp
shlb
out
adc
and
je
cltd
mov
adc
cmpsl
iret
adc
jb
pop
repnz
push
mov
inc
rep
adc
pusha
sbb
or
mov
enter
loopne
movsl
mov
data16
xorl
mov
fnstcw
ret
cmpsl
out
and
loopne
dec
outsb
or
in
dec
mov
sub
xor
orb
jge
lret
outsl
push
test
fwait
adc
mov
xchg
movsb
jne
out
cmp
inc
subb
pop
xor
inc
shlb
cmp
in
dec
into
lock
jp
and
sbb
xchg
ss
add
pop
xchg
fmuls
rdtsc
push
int
lahf
sahf
out
std
rorb
pop
sub
aaa
dec
lcall
jp
ret
in
ret
mov
xchg
punpckhdq
je
lret
inc
sub
shrl
or
shll
mov
inc
sbb
dec
add
pusha
popf
lock
or
or
mov
jno
adc
inc
sbb
incl
ret
jno
pop
add
fisubrl
in
add
pop
cmp
in
jne
cmpsl
lcall
fistpll
mov
xchg
push
jbe
and
dec
inc
mov
lcall
mov
jb
sbb
jl
int3
sahf
and
jle
imul
sbb
clc
jne
push
fwait
pop
dec
mov
fsts
push
sub
lahf
aad
add
mov
sbb
arpl
xchg
pop
sbb
aas
mov
pop
mov
test
sbb
iret
or
jp,pt
xchg
adc
sbb
push
jge
in
mov
xchg
std
jg
and
mov
outsl
and
insl
xchg
aad
nop
aam
sbb
add
xchg
popf
sbb
fisubrs
out
je
lods
ss
fs
xchg
adc
and
push
clc
push
int3
arpl
adc
jecxz
insb
sti
xchg
cld
rorl
daa
cli
in
imul
andb
lret
in
xchg
push
or
sbb
and
fstps
pop
push
cmpsl
push
loop
mov
add
mov
idivb
xor
gs
push
cmc
clc
jp
aam
push
insl
repz
adc
ljmp
jp
cs
fdivp
xlat
dec
cltd
shll
jb
pusha
sub
sbb
inc
int3
dec
push
mov
aam
loop
mov
mov
cs
pop
das
mov
and
pushf
fldenv
add
lods
xchg
push
lds
shlb
and
inc
test
xchg
out
jb
ss
mov
pop
popa
fsubl
call
inc
movsl
or
fdivp
adc
jnp
leave
insl
vaddps
movsb
and
out
in
xor
sub
stc
popa
jno
shlb
jbe
bound
lcall
data16
mov
lahf
mov
cmp
es
int3
mov
jp
cmpsl
inc
cmp
jecxz
add
das
aam
jp
dec
je
inc
pop
xor
adc
loopne
and
and
movsb
popf
cmp
rorl
xor
mov
sbb
mov
mov
mov
or
test
mov
pusha
mov
les
daa
xor
add
dec
dec
in
pop
cltd
pop
jmp
sti
adc
adc
jl
pop
jo
mov
sbbl
fistpl
jp
mov
out
jecxz
andl
je
aad
jl
xlat
mov
inc
aas
stc
jmp
das
mov
in
or
out
testl
stos
jp
push
in
and
sub
in
add
loopne
dec
pop
in
daa
inc
loopne
jno
loop
pop
outsb
stos
pop
dec
pusha
out
and
out
repnz
mov
mov
lods
mul
or
mov
and
xor
pop
sub
daa
sub
dec
insb
cmp
outsl
cmp
mov
outsb
push
jo
and
jl
mov
popf
scas
sbb
or
sti
in
pop
cmp
out
divl
inc
inc
movsl
sbbl
enter
flds
push
mov
pop
push
ret
rclb
dec
mov
jecxz
sahf
xchg
sbbl
adc
out
in
stc
popf
dec
mov
xchg
outsl
cli
pop
add
push
sbb
imul
lret
movsl
movsl
push
inc
xor
leave
mov
xor
push
or
cltd
cmp
or
ljmp
loop
retw
xor
std
lcall
fstpl
shlb
or
stc
inc
xchg
cltd
pop
xor
rcl
xchg
pop
jbe
jle
cmp
push
clc
test
xlat
cwtl
pop
push
adc
scas
jno
into
jnp
pop
in
mov
mov
jmp
pop
jb
add
lea
scas
mov
sbb
cmpsl
lock
xor
fcomps
ljmp
subb
ret
cs
outsb
sbb
sbb
out
sub
push
jge
adc
daa
mov
in
pop
xchg
jecxz
inc
or
cmp
roll
ss
xchg
lret
cmp
push
lods
cmp
mov
std
in
mov
dec
into
cs
sub
lds
out
mov
je
add
pushf
jl
xchg
fadd
test
pusha
mov
repnz
jle
jg
fs
into
inc
jle
add
and
jno
outsb
stc
sub
or
dec
movsb
and
cmc
cmp
push
dec
shll
add
xchg
inc
loop
sub
cmp
add
jmp
testb
push
add
xor
sbb
out
jno
jns
and
int3
repz
inc
mov
push
cmc
mov
adcl
nop
aam
and
pop
cmp
aam
jp
xchg
push
lret
jns
and
cmp
mov
inc
inc
ss
fsubp
sahf
xchg
jmp
jecxz
outsl
and
inc
int
mov
and
adc
jo
clc
mov
mov
into
stos
outsl
inc
push
inc
pushf
adc
dec
pop
or
clc
cmpsb
popf
adc
pop
cli
popl
pop
scas
mov
std
notl
test
sbb
cmpsl
inc
mov
je
jae
or
bound
cmpsb
adcb
rclb
adc
test
inc
jbe
es
repz
inc
mov
push
xchg
cmpsl
cmc
jl
cli
or
xor
jp
aam
xchg
pop
std
out
in
shrl
out
mov
xor
fidivs
adc
and
lahf
jmp
sub
fwait
aaa
sbb
cwtl
shr
mov
call
daa
mov
xor
sbb
mov
xor
xchg
sti
cmpsb
ja
pop
hlt
dec
dec
roll
push
sub
outsb
arpl
mov
mov
sbbl
adc
stos
sub
or
push
sbb
jecxz
cmp
sub
pusha
push
sub
jnp
mov
and
pop
mov
sub
push
pop
repnz
mov
mov
jecxz
insb
push
fadd
movsl
and
sub
inc
cmp
inc
pop
xor
jno
fadds
xchg
fistl
lea
and
mov
fstl
scas
sti
addl
lods
test
mov
aam
jl
inc
popf
jp
push
cmovge
stos
inc
mov
adcb
mov
xchg
ljmp
push
cld
xor
xor
cmp
inc
les
mov
jb
sbb
mov
fucomp
in
aaa
loope
mov
iret
stc
cmp
add
clc
mov
jmp
mov
sbb
cvtdq2ps
sbb
jae
inc
fidivrl
sbb
aaa
add
dec
add
mov
sbbb
mov
push
cmp
cmp
call
pop
xchg
adc
jno
add
and
jo
insl
popa
fwait
aas
adc
mov
mov
jno
cmp
jl
cmp
bswap
xor
ljmp
xchg
jecxz
aaa
aad
repz
test
pop
inc
cmpsl
inc
data16
adc
cmc
adc
insl
sti
test
cmp
jbe
mov
sarb
popf
xchg
or
cmpsl
inc
je
out
push
dec
mov
popa
dec
test
lock
or
adc
xchg
cmp
fwait
pop
jb
push
push
xchg
repz
lock
pop
cld
leave
fwait
adc
pop
xchg
lret
out
iret
daa
sub
lahf
mov
shll
js
lock
daa
rorl
sbb
test
dec
adc
inc
mov
sahf
jo
hlt
dec
mov
lret
int
ljmp
std
popa
push
mov
mov
xor
sub
out
cmp
sbbl
cld
or
and
xor
mov
stos
popf
cmp
data16
dec
popa
scas
arpl
rol
ja
jne
xchg
mov
fs
ret
cmpb
les
stc
push
fdivrs
xor
int3
inc
sub
xchg
jno
adc
cmp
mov
mul
xchg
jg
stos
pushf
or
ror
movsb
int
aas
inc
and
insb
test
mov
lret
xor
push
les
test
jno
pushf
insb
stos
add
mov
add
mov
daa
ljmp
push
jp
or
cmp
xor
jle
xor
pop
mov
push
xchg
push
shll
loop
mov
aaa
loope
or
scas
or
or
movsl
scas
xor
sub
mov
loopne
or
scas
ret
loope
sub
jno
lret
pop
mov
push
popa
out
jae
push
flds
pop
mov
jb
pop
cmpsl
and
inc
cmpsl
out
xchg
stos
test
test
mov
ss
fisttpll
and
xor
jecxz
xorl
movsb
jge
and
data16
js
loop
add
mov
lods
xor
cmp
arpl
loopne
dec
adc
sbb
cmc
jo
or
popf
push
sub
lret
js
jmp
xchg
add
sub
xchg
fcompl
std
jl
test
xchg
shrb
dec
inc
add
mov
loopne
das
sub
pop
ja
pop
ficompl
add
insl
push
outsl
xchg
mov
cmp
sbb
scas
nop
loope
outsb
push
inc
xchg
adc
add
icebp
dec
xor
pop
aaa
stos
mov
or
mov
push
scas
loop
xchg
dec
das
cmpsb
xchg
mov
inc
mov
jmp
cltd
bound
icebp
push
stos
aad
gs
add
loop
dec
cmp
insb
push
mov
stos
dec
es
xchg
sbb
mov
std
cmp
aas
pop
shr
ja
jp
mov
adcb
ja
cmp
mov
pop
loop
mov
pop
sbb
leave
lods
adc
repnz
cmpsb
in
sarb
pop
sbb
mov
scas
push
int
xor
ja
ret
inc
imul
jbe
arpl
or
nop
push
lret
test
lock
xchg
push
dec
loop
add
je
gs
fsub
cs
mov
mov
dec
lods
fisubs
push
fsts
int3
jae
fidivrl
popfw
scas
push
mov
or
into
stc
jg
popaw
cmp
sbb
cmovg
hlt
shll
pop
pop
fists
lahf
cmc
ret
mov
sub
dec
cmp
adc
test
mov
enter
iret
repnz
shl
mov
cmpb
jae
scas
push
push
cltd
jne
pop
jecxz
loopne
xchg
sub
ret
push
test
test
xor
dec
out
lds
inc
js
mov
mov
dec
mov
gs
and
or
cmovae
jae
mov
pop
int
into
xchg
xchg
or
pop
dec
les
pop
xchg
mov
repnz
cmp
jge
mov
xchg
and
add
iret
mov
jb
mov
shrl
sbb
repnz
or
xor
adc
lcall
mov
jb
popf
cmc
mov
into
das
popf
mov
test
jne
sub
jnp
jge
cmc
and
sbb
mov
xchg
pop
push
push
cs
rcrl
mov
out
or
fldenv
xchg
lods
push
decb
int3
jmp
out
adc
sbbl
dec
and
outsl
and
push
cmpsl
stos
ljmp
call
adc
mov
out
adc
insl
nop
cmc
arpl
sub
sbb
hlt
mov
mov
stos
sbb
stc
mov
inc
fs
dec
mov
adcl
sbb
mov
mov
fstl
int
and
xchg
cmp
push
cld
pushf
fsts
dec
fsubs
shrb
out
pop
dec
jo
jle
lock
xor
ret
jno
loop
enter
mov
test
notl
popa
mov
cld
cmpsb
jmp
mov
sbb
shlb
je
jle
jb
pop
mov
cld
fisttpl
mov
int3
or
xchg
jl
lcall
mov
in
cwtl
sbb
rol
das
nop
inc
cmpsl
mov
or
mov
xor
dec
adc
mov
lds
imul
mov
push
insb
dec
inc
mov
cmc
sbbl
cmp
xlat
push
pop
xchg
mov
repz
jb
push
mov
popf
ret
mov
jmp
gs
stos
fdivrp
in
sbb
lret
lds
leave
jne
adc
jmp
cltd
mov
mov
lds
enter
iret
fisubrl
popf
or
mov
add
fmul
ljmp
fiadds
and
pop
adc
addl
mov
sbb
and
cmp
adc
repnz
mov
and
gs
mov
cmp
lret
add
stos
adc
lret
vmread
push
mov
out
cli
ret
js
ret
fwait
sbb
sahf
lret
xchg
int
xchg
push
or
add
popf
addr16
mov
inc
out
bswap
out
fcomi
mov
mov
bound
add
adc
adc
out
sar
mov
jmp
call
ret
and
and
mov
mov
mov
sahf
mov
jb
lods
push
std
into
push
in
mov
xchg
pop
aas
mov
cld
aad
fucomip
gs
lods
inc
xchg
out
mov
shlb
mov
push
mov
pop
push
aam
dec
or
clc
sbb
mov
pop
xchg
xchg
addr16
insb
xchg
imul
lcall
dec
inc
jbe
inc
popa
xlat
jo
ds
repz
call
sbb
mov
pop
mov
movsb
repnz
daa
and
mov
fldl
inc
xor
xor
fisubl
mov
adc
mov
and
push
lods
push
iret
push
pop
rcr
push
xchg
cwtl
shl
cmc
shrl
fstpl
sbb
xor
lods
xor
mov
fdivrl
lahf
insl
pushl
out
scas
sbb
lea
cld
mov
aaa
in
fwait
test
cmpsb
jo
push
and
mov
daa
add
fstpl
push
add
xchg
icebp
sahf
rol
inc
sbb
pop
adcb
inc
out
mov
or
mov
jle
push
add
subb
cmp
clc
dec
push
inc
fstl
dec
jecxz
and
decb
mov
adc
adc
rolb
mov
fsubrp
push
xchg
int
fucomip
ret
shrl
imul
dec
nop
aam
push
ret
repnz
xchg
add
lods
aam
push
orl
inc
inc
outsb
mov
scas
outsl
mov
cmp
dec
lds
pop
or
sbb
cmp
sub
sbb
nop
call
sub
jp
jge
push
xor
in
sbb
and
das
adc
jge
sar
std
pop
fsubs
cmc
inc
mov
mov
jnp
insb
lahf
rclb
mov
jmp
out
stos
mov
insl
add
lcall
fucomp
sbb
xchg
add
mov
add
mov
mov
fmuls
cmp
add
xchg
dec
and
dec
cli
negl
inc
cmpb
nopl
jp
sub
scas
aam
shr
test
sub
ret
add
je
push
popa
inc
imul
jp
cmpl
dec
cmc
sarl
pop
push
adc
jo
test
sbb
pop
cmp
push
pop
mov
fnsave
icebp
and
int
es
mov
dec
adc
sub
loope
lret
mov
xor
inc
sbbl
adc
popa
push
pop
roll
in
push
xchg
push
cli
lret
gs
popf
sbb
mov
xor
ret
cmpsb
sbb
popa
jge
push
decl
jecxz
test
testl
add
cmpsl
aam
sarl
jg
ret
das
push
add
int3
movsb
out
or
push
gs
dec
mov
inc
inc
cli
cmp
test
icebp
sbb
fs
lret
cli
popf
jle
dec
lock
lcall
inc
cwtl
mov
jbe
data16
lcall
add
mov
dec
mov
add
jae
rolb
lds
out
out
cmp
subl
in
jne
popa
mov
mov
pusha
xorb
lea
out
stc
adc
and
xchg
mov
enter
inc
or
std
mov
ja
push
iret
fwait
mov
mov
dec
mov
bnd
lock
jnp
push
imul
xchg
and
shrb
sub
ljmp
jnp
ds
mov
and
popf
or
out
stc
std
push
mov
popf
pop
mov
ret
outsl
sbb
cmp
and
daa
jge
cmp
cld
imul
push
into
aaa
mov
push
insb
test
cmp
sub
fcompl
int3
or
cmp
sub
lods
imul
test
cmp
sub
fcompl
int3
or
cmp
sub
lods
imul
test
cmp
in
jmp
or
in
sub
inc
imul
dec
test
cmp
lods
jmp
push
cmp
pop
jmp
add
inc
xchg
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
arpl
or
jns
es
cld
mov
push
stc
ja
flds
inc
cs
cmpsb
sub
imul
mov
test
push
stc
adc
data16
inc
and
adc
inc
pop
mov
jae
push
stos
xor
push
lds
jno
xchg
or
mov
inc
mov
ficoml
gs
call
cmpb
movsb
mov
cld
sbb
mov
pop
orb
fldenv
test
inc
mov
out
inc
pop
mov
sub
inc
lret
inc
aaa
mov
push
add
leave
adc
push
mov
jmp
addl
mov
dec
es
lret
cltd
rcl
cmpl
cltd
and
inc
fnstenv
pop
inc
imul
dec
xchg
mov
push
xor
call
cmpsb
sub
les
bound
ss
and
mov
cmp
cmp
mov
sbb
jae
pop
push
mov
push
nop
push
loope
icebp
data16
add
dec
fistpll
sbb
mov
mov
inc
test
jbe
add
and
fisubrl
lret
or
or
orl
fdivl
push
pushf
adc
adc
sbb
jl
or
add
imul
mov
push
mov
stc
jbe
data16
inc
cmp
or
pop
dec
mov
push
mov
stc
jbe
data16
inc
cmp
popa
inc
push
add
out
adc
xchg
fidivrl
addr16
or
rcrl
repz
in
mov
cmpsl
clc
leave
xchg
or
xchg
ret
lret
cmc
push
cli
add
dec
mov
shr
hlt
insl
es
xchg
loop
outsb
stc
mov
pop
mov
xor
or
lods
dec
adc
push
faddl
cltd
xor
mov
mov
in
adc
fcmovnb
sbb
sbb
aad
outsl
das
idivb
fbld
dec
push
xchg
gs
mov
sti
push
jle
ljmp
or
jecxz
je
push
arpl
dec
inc
mov
inc
inc
sbb
lret
cmc
cmpsl
leave
loopne
adc
push
or
data16
gs
fwait
aas
xchg
mov
mov
xlat
jo
xor
jne
popl
mov
int3
aad
or
lods
push
pop
and
in
mov
mov
jmp
jne
mov
mov
lock
mov
call
ljmp
jle
xchg
dec
call
mov
mov
cld
xchg
or
cmp
sbb
into
push
push
into
dec
push
xor
pop
ljmp
mov
mov
iret
pop
add
lret
lods
mov
cmp
xchg
ret
xor
fldenv
pop
cli
add
and
pop
fistpl
and
push
mov
add
cmpsb
repnz
dec
jp
ljmp
lods
xor
and
mov
std
or
sarl
mov
rol
roll
outsb
or
or
movsl
or
jb
jo
push
aas
mov
mov
insl
push
insl
decb
xchg
fiadds
paddd
jge
mov
push
adc
into
add
lcall
std
sub
xchg
sub
or
sbb
adc
sub
subl
and
sbb
adc
add
jb
push
enter
out
push
or
xchg
stos
loopne
sub
cmpsb
roll
push
bound
cmp
je
in
xor
aas
mov
lock
sarb
mov
lods
dec
fistps
push
push
push
sbb
and
rolb
cmp
ljmp
lahf
push
bound
add
mov
add
mov
mov
sbb
xor
mov
cmp
pop
aam
pop
aas
iret
mov
gs
outsl
mov
pop
call
scas
imul
arpl
leave
sub
push
push
loope
jecxz
push
ret
shll
push
mov
push
test
dec
inc
mov
fnstcw
lods
cmp
xor
data16
rorb
dec
lock
and
push
int3
jmp
or
or
push
stc
xchg
movsb
and
icebp
xor
push
jb
cmp
rcl
aaa
fwait
outsl
das
cmp
adc
or
movsl
push
push
fidivrs
ret
sbb
xlat
clc
shll
inc
int
cli
jmp
mov
insb
loopne
repnz
rclb
cwtl
push
inc
rorb
sbb
ficoms
inc
mov
xchg
and
rcrl
mov
fldl2t
and
in
xor
jne
mov
imul
dec
loop
xchg
pop
push
xor
cvtpi2ps
scas
and
fdivp
pusha
push
pop
hlt
mov
fmuls
imul
in
into
test
push
xor
ljmp
mov
xor
cmp
adc
add
mov
or
shlb
cmpl
inc
jmp
in
lds
ss
pop
and
push
movsb
dec
sub
and
ja
push
les
inc
loopne
cmp
xchg
sub
loopne
push
xchg
cmp
lds
jae
arpl
mov
mov
xchg
lods
data16
testb
adcl
mov
xchg
xchg
hlt
sub
shr
dec
add
sbb
jl
pop
pop
mov
sbb
xor
jge
fiaddl
jge
lock
pop
lcall
jge
fwait
inc
es
in
repz
or
mov
aad
mov
mov
mov
jle
out
dec
lahf
mov
testl
pop
scas
add
mov
inc
outsl
cmovo
jecxz
pop
xor
add
ja
loope
dec
movsb
jns
outsl
in
sub
push
outsb
enter
pop
inc
push
xchg
xchg
adc
in
or
sarl
mov
into
mov
jmp
jae
push
out
push
lahf
adc
or
push
and
lahf
cmp
incb
xor
mov
pop
in
or
push
lock
and
jecxz
sub
loope
outsb
out
into
xchg
loop
sbb
inc
pop
int
pop
pop
push
insl
dec
adc
inc
test
mov
gs
adc
loope
xor
jmp
nop
mov
ret
push
jne
jle
mov
add
shrl
push
mov
mov
xchg
insl
or
shll
pop
ss
adc
cmp
mov
aas
add
ret
mov
stos
dec
adc
push
push
xor
cwtl
dec
add
adc
mov
mov
ss
jp
shll
mov
cmp
fisubrs
adc
xchg
ficompl
mov
out
xor
fstl
int
adc
inc
popf
inc
imul
and
arpl
popf
fldl
mov
push
lods
sbb
jl
pop
xor
sbb
sub
pop
repz
add
lretw
sbb
pop
lret
pop
cmp
xchg
push
mov
ds
dec
cmc
popf
fwait
orl
xor
push
push
mov
es
jle
enter
lcall
mov
psraw
cltd
push
mull
xor
push
pop
sub
inc
int3
out
jmp
mov
jp
dec
push
inc
or
setne
out
jns
adc
dec
pop
inc
pop
jns
movsb
mov
mov
jnp
jl
in
popf
mov
adc
xchg
xor
and
addr16
xchg
popa
icebp
push
cmpsb
dec
daa
fwait
sti
daa
test
icebp
scas
adc
stos
sub
xchg
mov
shll
push
cmpl
dec
aam
sub
cmp
cmp
addr16
shl
jb
lcall
repnz
lods
ret
cmp
push
das
movsl
jg
mov
imul
pop
shlb
shlb
push
mov
loop
les
les
inc
mov
ja
cmp
sbb
jl
std
ja
inc
mov
sbb
jge
adc
pop
push
idiv
jmp
sbb
aad
pop
adcb
ret
push
sub
pop
aaa
add
fisubl
das
mov
lahf
shlb
in
mov
loopne
popf
push
call
push
sub
test
push
xchg
imul
cmpsl
mov
lods
fwait
pop
fstpl
stos
jno
popa
out
push
es
lcall
mov
inc
sahf
jl
mov
xor
lock
mov
insb
cmp
jmp
mov
or
and
lret
fwait
jns
std
repz
int3
fimuls
sbb
push
das
sub
out
cltd
sbb
sbb
sbb
inc
aad
push
pop
call
nop
push
cltd
mov
dec
sub
jnp
jb
mov
ja
lahf
popa
roll
xor
pop
ja
cli
pop
outsb
sbb
jns
fstpl
lret
lea
je
inc
push
les
jae
add
jge
jnp
mov
mov
push
or
adc
mov
mov
sub
xchg
addr16
orl
cmp
in
lea
sub
and
adc
scas
jle
adc
sub
xlat
xor
jecxz
insb
cmc
xchg
in
pushf
push
arpl
arpl
jmp
in
outsl
fs
pusha
imul
sbb
loopne
xchg
pop
xor
and
cld
and
push
ficompl
mov
pop
outsb
push
jne
cmc
sarl
jmp
cmp
mov
xor
cmp
pop
xor
dec
mov
lcall
icebp
dec
mov
xchg
out
iret
dec
imul
adc
sarl
dec
pushf
adc
mov
dec
lods
out
je
dec
test
popf
cmpsb
imul
or
cwtl
inc
nop
lret
adc
add
nop
cltd
outsb
push
cwtl
pushf
in
xor
daa
xlat
sub
inc
sbb
fnstcw
cmp
mov
loopne
adc
out
cmp
push
mov
daa
push
repnz
jbe
testl
inc
cmp
dec
jo
mov
out
mov
repnz
popa
popf
fnsave
mov
call
xchg
hlt
in
push
insl
insb
dec
hlt
das
cmp
nop
push
jmp
mov
js
imul
add
lahf
xor
ss
lret
pop
add
push
or
hlt
fucomp
adc
dec
orl
rorb
or
aam
jbe
lds
inc
mov
mov
mov
rcrb
xchg
movsl
ja
xchg
xor
lock
sbb
add
xor
push
mov
mov
movsl
aad
out
or
jns
push
jb
mov
push
cmp
arpl
and
jp
push
mov
outsb
in
sub
cmp
push
jae
xorl
add
aam
jmp
inc
test
xor
mov
sbb
nop
test
fs
push
xchg
push
popa
lahf
lcall
test
xchg
cmp
adc
sbb
inc
jnp
sbb
out
cmp
andb
add
lahf
dec
push
rcll
jae
mov
lret
xchg
cli
enter
out
nop
aad
jno
xor
lds
mov
das
xor
inc
add
gs
push
jno
mov
adc
test
mov
icebp
mov
bound
dec
xor
push
movsl
jmp
xchg
sub
mov
call
cmp
and
hlt
mov
fisttps
mov
jno
and
inc
adc
cltd
adc
cmp
addr16
and
xor
pop
insl
mov
or
fcomps
pushf
xor
mov
add
xlat
int
clc
and
je
popf
lcall
and
push
jno
fwait
movsl
roll
lods
cmp
dec
pop
add
loope
lcall
jp
sub
cmp
enter
pop
lahf
lods
jae
int3
rolb
fstpl
cmc
push
or
fstps
jns
cmp
jmp
jmp
cmp
xorl
aaa
int
jne
out
std
mov
push
cltd
add
aam
add
pop
shll
int3
pop
and
mov
cmp
in
mov
fstpl
pop
jns
mov
dec
mov
mov
ds
subl
pop
arpl
cmp
and
xchg
mov
xchg
mov
jb
add
arpl
mov
pop
mov
xchg
mov
pop
sbb
movsl
jmp
int
jle
mov
mov
mov
mov
rcl
sub
out
pop
mov
stc
pop
mov
pusha
sub
xchg
fcompl
sbb
mov
mov
cmp
sub
cmp
dec
inc
push
or
cmpsb
repnz
inc
ja
cwtl
fmuls
sub
addb
xchg
fst
aaa
push
xchg
or
sub
cmp
xor
push
jns
dec
popf
jmp
cmp
jecxz
pushf
sbb
scas
pushf
imull
sbb
movsb
gs
xor
insb
je
mov
je
stos
out
or
leave
out
fwait
aam
gs
insb
scas
insl
fisttpll
fisttpl
imul
mov
push
jae
aas
out
jno
shrl
dec
aas
rolb
push
sbb
inc
pop
inc
jbe
sti
rclb
pop
mov
fidivrs
iret
test
mov
xor
outsl
and
inc
scas
xor
mov
sub
stc
mov
cli
adc
es
mov
add
and
pop
jmp
fucom
inc
movsl
xchg
nop
mov
xor
mov
rolb
cmp
xchg
mov
inc
testl
and
dec
mov
pop
push
filds
leave
fdivp
jmp
mov
cli
test
ret
jns
enter
cmpsb
test
push
je
arpl
test
xorb
int
cmpsl
sbbl
cmp
xor
test
push
mov
bound
clc
popl
out
mov
dec
push
xchg
loopne
push
mov
roll
cmp
inc
pop
push
ja
or
scas
dec
mov
mov
add
fadds
mov
repnz
out
out
pop
leave
pop
enter
add
mov
daa
mov
sahf
outsl
pop
adc
sbb
das
dec
jge
imul
and
jns
sbb
lds
and
mov
rcll
inc
jbe
stc
popf
loope
mov
pop
adc
pop
stos
sbb
ljmp
ljmp
add
ds
add
pop
inc
jl
test
idiv
movsb
imul
lods
adc
jmp
int
xchg
cmc
rolb
sahf
aas
mov
int3
adc
jbe
pop
movsb
int
jb
and
data16
add
add
aaa
mov
push
jbe
and
jb
outsl
addr16
cmc
insb
test
insb
call
xchg
movsl
pop
or
xor
outsb
and
shrb
push
imul
lret
dec
rorb
in
push
ficoml
sbb
cmpsb
imul
ret
scas
jnp
leave
and
lahf
pop
repnz
rorb
cmp
sbb
daa
jmp
fldenv
pushf
jp
cmp
mov
into
inc
cmp
mov
into
cmp
push
mov
cmp
xlat
or
iret
xchg
push
shr
stc
sbb
push
scas
xor
into
je
cmpb
fbld
adc
aaa
popf
mov
jl
mov
lcall
sub
push
fnsave
xor
cmp
jle
imul
in
sti
or
push
sbb
lahf
add
push
inc
in
jns
ficomps
cmp
sahf
cli
bound
and
data16
dec
mov
fadds
hlt
add
cli
sahf
sbb
adc
pop
mov
mov
pop
adc
fsave
dec
adc
push
fisubrs
dec
xchg
xchg
mov
xchg
dec
mov
and
pusha
mov
pop
pusha
or
fisttps
lret
icebp
cmp
sub
xchg
rorl
jne
popf
cld
mov
outsl
out
ljmp
inc
add
std
fmuls
sbb
cmpsb
mov
mov
mov
ret
add
scas
mov
sbb
add
jge
sbb
orl
ss
xor
ljmp
int3
xchg
jg
jecxz
sbb
mov
addb
and
adc
or
mov
jecxz
mov
dec
outsb
imul
mov
movsb
daa
push
xlat
add
add
and
adc
pop
les
jmp
sbb
add
adc
jne
sarb
shrl
mov
and
dec
mov
pop
pop
mov
call
push
mov
popf
rcrl
jle
dec
jmp
in
inc
gs
aaa
sar
jns
inc
iret
push
into
xchg
mov
loopne
fsubrl
movsl
jbe
andb
sub
cmp
sbb
add
cmp
sbb
lea
aam
sbb
lods
and
lds
dec
icebp
rclb
add
pushf
mov
test
mov
mulb
xor
sbb
inc
sub
sbb
cld
mov
add
mov
cltd
lret
lahf
xor
jo
aaa
arpl
in
add
adc
add
imul
out
xor
inc
push
out
adc
cmp
andl
pop
jecxz
das
fldl
sbb
or
add
data16
mov
mov
adc
into
push
cmpsb
and
nop
pop
addl
movsb
out
rcr
scas
pop
jne
mov
dec
adc
sub
int
adc
cmp
sub
lret
les
mov
dec
cli
sti
push
popf
sbb
mov
xor
mov
jb
sbb
xchg
jp
outsl
add
jle
loop
or
es
enter
mov
sbb
stos
cwtl
push
sub
lret
or
or
push
fildll
lahf
popa
fwait
negb
movsl
jbe
aad
movsb
jnp
test
cmp
jge
xor
mov
and
pop
inc
and
cmpsb
jecxz
or
push
inc
and
mov
mov
cmc
mov
sub
mov
push
sbb
mov
jae
enter
lods
push
inc
inc
scas
pop
push
pop
jbe
mov
scas
adc
popf
jle
icebp
adc
sbb
inc
lahf
ret
xor
and
push
mov
sarb
mov
or
out
pop
dec
mov
jge
push
popa
arpl
pop
adc
test
fiaddl
mull
jg
mov
mov
int
insl
inc
pusha
rorl
adc
pusha
lods
gs
neg
jmp
clc
mov
andl
rolb
jae
shrb
repnz
push
js
cmpsl
cwtl
imul
das
push
bnd
jo
mov
push
inc
sbb
in
arpl
fwait
or
je
adc
inc
and
rclb
pop
repnz
push
and
cs
mov
xor
mov
enter
lea
lods
adc
sbb
mov
incl
and
fisubs
movl
cli
mov
enter
sub
cmp
repnz
out
insl
mov
xor
call
and
pop
mov
mov
jecxz
repz
add
test
sub
cmp
scas
add
or
xor
push
ja
mov
ds
sub
adc
add
mov
pusha
pop
inc
out
xor
jns
subl
mov
pop
nop
pop
sub
cs
mov
push
sbb
mov
or
sub
pop
jnp
shrl
scas
push
pusha
ficoms
jle
pop
dec
jae
jmp
fwait
cmp
nop
out
cmp
clc
fwait
in
or
and
mov
sbbb
xchg
mov
es
outsb
mov
je
mov
sarb
lret
and
pop
aam
iret
cmp
inc
pop
aas
jl
leave
pop
jne
or
ficoml
stos
mov
mov
jne
fistpll
scas
sahf
pop
cmp
adc
in
push
cld
mov
and
cmp
jle
sub
outsl
out
jno
dec
lcall
loopne
je
hlt
outsb
and
out
pop
dec
push
jo
pop
mov
jb
cltd
pop
sub
mov
sbb
xchg
cmp
mov
inc
dec
jae
push
imulb
mov
inc
test
xchg
rcll
loope
mov
das
or
mov
ds
inc
or
jp
in
cmpsb
clc
mov
stc
inc
sbb
jge
imul
scas
xchg
mov
imul
adc
or
adc
test
xchg
and
loope
jmp
sub
jne
outsb
in
sub
pop
jnp
push
or
xlat
or
pusha
sbb
dec
push
mov
inc
jae
adc
lods
pusha
ffreep
inc
push
fsts
add
in
test
lahf
xor
ret
push
testb
fistps
call
aas
repnz
mov
xrelease
js
pusha
and
cwtl
out
inc
push
and
ds
or
iretw
lret
push
inc
repz
cmp
fimuls
cmp
inc
mov
das
mov
fdivl
repnz
scas
enter
add
movsl
add
cmp
insl
sub
repz
xchg
int
lds
addr16
test
loop
cmp
sub
loope
addb
mov
addl
dec
jecxz
mov
cwtl
dec
dec
data16
xchg
fildll
dec
mov
mov
popf
icebp
int3
push
jl
popf
jnp
hlt
pop
and
jp
mov
stos
sbbl
cmp
lea
out
fidivs
xchg
and
cli
jnp
mov
mov
leave
jae
pusha
cmpsl
push
sbb
mov
xor
xchg
or
daa
push
pop
daa
adc
xchg
into
xchg
dec
jns
adc
ficoml
xor
xchg
push
push
leave
cmp
xchg
in
mov
xchg
ja
jle
fs
fstl
inc
lods
add
dec
insl
add
in
pop
jb
cmp
or
add
lods
jle
in
cmc
inc
loope
and
add
or
sbb
in
fadd
shlb
or
pop
dec
mov
push
mov
stc
jbe
data16
inc
cmp
or
pop
dec
mov
push
mov
stc
jbe
data16
inc
cmp
or
pop
dec
mov
push
mov
stc
jbe
data16
inc
or
xchg
or
leave
push
inc
ss
mov
push
mov
popa
cltd
es
xor
mov
add
addr16
xchg
or
pop
xlat
dec
xchg
imul
mov
push
leave
inc
stc
ja
addr16
xchg
or
pop
xlat
sub
out
pop
or
aas
aaa
outsl
daa
leave
push
addl
test
dec
cmpsl
jns
adc
out
pop
test
lret
push
xchg
mov
sub
mov
pop
cmp
pop
cs
pop
fiadds
es
mov
insl
outsl
popf
sub
out
mov
cmpsb
fcoml
fmuls
in
leave
add
dec
push
add
out
push
idivb
mov
cmpsb
xlat
hlt
mov
ss
call
cld
xor
push
ss
clc
sahf
jmp
or
pop
xchg
sub
pop
aam
dec
xchg
insb
or
sti
inc
loope
fisubl
push
dec
mov
pop
xchg
dec
sub
negb
sbb
mov
inc
ss
push
pushf
xor
adc
loope
icebp
xchg
cmp
dec
xor
jns
stos
pop
mov
mov
push
lea
ja
addr16
fwait
xchg
mov
cmpsl
cmp
push
jns
or
aam
jno
popa
mov
mov
pop
js
dec
out
imul
daa
mov
cltd
push
add
aaa
bound
xor
addr16
dec
jmp
loope
lret
sub
sub
leave
inc
call
inc
stc
ja
sbb
cmp
dec
jns
imul
mov
push
leave
inc
stc
ja
sbb
cmp
dec
jns
imul
adc
div
xchg
xchg
cmpsb
push
cltd
and
inc
push
in
mul
int
ficoml
lock
cmpb
mov
push
mov
push
push
dec
dec
push
movsb
out
and
scas
sub
insl
pop
inc
jg
dec
sbb
sbb
repz
ret
pop
ror
mov
inc
dec
adc
aam
rclb
push
mov
hlt
imul
and
nop
aam
cmp
push
jbe
daa
pop
and
lea
jp
rolb
mov
lods
mov
adc
or
xchg
enter
adc
aaa
popa
les
inc
testb
clc
popf
mov
cmp
test
dec
stos
out
lds
aad
mov
and
mov
hlt
scas
icebp
mov
aas
js
sarl
dec
pop
mov
dec
lret
and
push
jg
lcall
int
and
cltd
aam
mov
lahf
push
andb
aam
pop
mov
jg
cmp
sbb
in
scas
dec
cmp
add
rolb
outsb
je
mov
pusha
movsb
out
shlb
mov
clc
stc
xchg
imul
aas
les
add
mov
add
test
popf
cli
out
adc
jg
lds
cwtl
scas
dec
mov
popa
js
cmpb
fs
pop
stc
xchg
inc
repnz
pop
fnsave
pusha
js
cwtl
adc
sub
pop
ljmp
sbb
pop
je
nop
into
sarl
les
add
inc
rcrl
sbb
xchg
repz
dec
add
pop
and
or
mov
testl
sub
adc
loopne
lahf
cmp
nop
xorl
jns
jae
adcb
xor
or
dec
int3
jp
sbb
jns
and
pusha
mov
sbb
push
cmc
icebp
mov
scas
inc
or
hlt
gs
push
jae
xor
hlt
or
xchg
fstps
push
inc
jp
addr16
pop
pop
jmp
sub
mov
mov
push
adc
pop
ds
mov
dec
push
adc
ds
call
jno
pop
or
xor
imul
dec
pop
push
pop
pop
out
ror
jg
dec
nop
push
or
cmp
fldcw
mov
iret
out
scas
mov
sub
arpl
movsb
mov
mov
inc
sbb
cld
fmul
jb
movsb
je
mov
sbb
outsb
stos
add
ds
mov
mov
repz
in
jo
push
insl
xor
or
sbb
cwtl
add
daa
aam
lea
adc
xchg
xchg
leave
fucomip
push
lret
xchg
push
ds
inc
inc
dec
lock
fcmovu
mov
shr
lds
fldt
xchg
cwtl
in
pop
mov
popf
or
mov
adc
shrl
inc
mov
push
in
scas
loope
sub
adc
lcall
outsl
mov
js
xchg
jno
mov
sub
lcall
push
cs
xor
pop
adc
jmp
aad
and
stos
scas
xor
and
pop
lret
insb
in
adc
and
shl
pop
jle
and
jo
add
ret
sahf
pop
aam
jb
outsb
mov
pop
mov
ljmp
mov
dec
inc
aas
and
imul
sbb
shll
inc
adc
adc
cmpsl
arpl
jns
bound
mov
subb
jbe
rclb
sub
xchg
push
aas
daa
push
fidivs
inc
ret
sub
pop
jae
or
and
fadds
add
rorl
lcall
shlb
mov
enter
inc
add
ret
das
pop
cmpsl
sub
jne
ret
mov
sti
fwait
sub
pop
stos
loope
mov
dec
or
lcall
pusha
hlt
push
sbb
je
jno
sbb
outsb
out
pusha
lds
subb
cmc
rcll
push
mov
shrl
imul
das
adc
je
jnp
or
push
flds
mov
outsl
cmp
aad
sahf
sub
and
add
add
adc
ret
fsubs
in
subl
fstpt
aad
push
inc
lods
xchg
cmp
or
into
addr16
ss
jle
int
inc
inc
imul
inc
mov
push
pop
mov
movsb
sbb
dec
scas
adc
lock
pop
ret
inc
ss
xchg
mov
jp
dec
mov
jge
and
cmp
hlt
in
add
shll
cmp
subl
rcl
mov
aas
movb
movswl
fidivs
mov
cmpsl
inc
mov
xchg
pop
movsb
shlb
cmc
inc
cmpsl
imul
and
xchg
les
xor
fstl
jae
and
dec
leave
mov
and
xlat
sub
sub
fcompl
pop
adc
insb
movsb
das
mov
cmpsl
sti
mov
sahf
mov
push
jbe
inc
insl
mov
out
and
jp
jg
enter
jl
add
test
dec
jle
punpcklbw
push
rclb
gs
bound
pushf
imul
rcr
xor
jecxz
popf
loop
pop
hlt
inc
leave
mov
lods
test
gs
call
test
pop
mov
call
dec
mov
cli
pop
mov
adc
jbe
hlt
out
dec
insb
lea
popf
lds
xchg
fs
lahf
xchg
cli
sub
xchg
xchg
inc
xchg
push
test
jbe
test
mull
inc
or
xchg
cmp
xor
adc
test
xchg
xor
test
ja
xchg
add
push
aaa
nop
inc
push
mulb
mov
cmp
lods
in
sub
scas
cmp
loop
mov
adc
cmpsl
push
mov
iret
mov
lock
adcb
inc
cli
adc
daa
hlt
mov
inc
add
xchg
imul
jns
test
xor
aam
xchg
iret
cmc
pop
mov
jl
scas
in
inc
leave
mov
repz
addb
leave
pop
rcrl
in
addr16
out
sbb
test
scas
dec
jbe
cs
fdivrl
shr
mov
mov
lods
xchg
sub
mov
push
sbb
loop
jp
movsb
push
pop
sub
push
push
gs
sbb
loop
xchg
insb
insl
and
sbb
test
pop
dec
pop
jno
add
loopne
repnz
inc
mov
xchg
idivl
and
jmp
lock
mov
pop
aam
xor
out
mov
lods
fs
jl
out
and
add
xchg
add
std
inc
sbb
ficompl
fldcw
shlb
mov
and
dec
xlat
sbb
in
jb
fists
andl
jno
in
mov
in
das
sub
rolb
jl
insb
fadd
loop
add
mov
scas
dec
and
es
test
aas
inc
dec
adcb
mov
pop
push
jmp
data16
sahf
lds
jmp
fcompl
testl
sub
out
sbb
ficoms
pop
sbb
mov
xchg
icebp
insb
or
mov
fimuls
adc
xor
orb
mov
lods
pop
push
or
imul
popa
pop
inc
lods
mov
loop
out
push
into
push
cmp
cltd
pop
mov
scas
sbb
call
mov
pop
arpl
aam
out
cltd
loope
int3
adc
cmp
sbb
nop
inc
and
pop
push
out
or
dec
pop
mov
push
sub
sub
hlt
mov
sbb
and
jecxz
push
std
jo
adc
sub
shl
dec
xor
push
adc
push
mov
pop
lahf
mov
adc
sbb
add
fstl
test
je
aaa
enter
mov
pop
int
dec
and
jg
xor
call
xchg
push
sbb
lcall
xorl
into
arpl
das
push
aaa
ret
and
sbb
mov
add
jno
aas
xor
add
shl
or
sub
sub
jle
push
adc
mov
pop
lock
sbb
sti
jno
pop
jb
inc
mov
mov
push
mov
das
push
mov
divl
add
mov
fdiv
xor
addr16
mov
pop
pop
xor
mov
leave
push
mov
arpl
xchg
jns
mov
mov
cmp
movsl
mov
jmp
xchg
dec
das
cmp
leave
fcmovnb
fcoms
fisttps
push
std
stos
enter
lahf
sub
in
stos
lods
rol
iret
iret
inc
dec
and
pop
push
ja
push
icebp
sub
or
and
out
xorl
and
xchg
xorl
out
or
adc
cld
stc
push
fwait
sub
add
rorl
pop
mov
jle
mov
test
adc
lds
shl
std
insl
imul
push
push
push
je
and
repnz
mov
lods
cli
push
imul
mov
aam
std
sub
adc
push
sub
and
xchg
stos
push
jno
push
das
js
daa
lret
dec
and
cmc
rcl
dec
test
popa
sub
xchg
fnstcw
jg
or
mov
lea
xor
aad
and
sahf
sbb
mov
add
sbb
mov
test
push
aam
outsb
ret
ss
pusha
mov
imul
movb
inc
mov
invd
arpl
test
test
flds
mov
sarb
cmp
rcrb
sub
sbb
jne
daa
fwait
push
sub
jle,pt
cltd
shrl
dec
mov
ss
inc
js
filds
daa
xor
neg
or
call
in
add
push
imul
pop
movsl
pop
enter
jne
mov
orl
test
mov
mov
or
rorl
mov
test
lods
fcomip
xchg
movl
push
cmp
push
movl
mull
cli
push
xchg
ret
orb
mov
dec
inc
lods
and
aam
pop
or
mov
sti
push
test
mov
pop
sbb
mov
loop
jl
int3
ja
xchg
jecxz
test
fidivrs
mov
aad
stc
out
jo
xchg
cmp
mov
adcb
mov
push
pop
jge
mov
int
push
out
mov
add
sub
fstpl
xchg
adc
fadds
pusha
mov
push
cmp
gs
xor
rclb
ret
xor
lea
xlat
leave
icebp
pusha
fisttps
test
stc
xchg
sbb
sahf
lret
rolb
add
pop
icebp
ret
pop
inc
pop
test
cmc
inc
pop
testl
inc
sbb
fs
es
pop
mov
xor
mov
ficomps
into
xchg
and
insl
test
stc
idiv
pop
int
vrcpps
mov
push
jnp
cwtl
xchg
cmp
cmpsb
js
add
mov
jl
jecxz
stos
mov
stos
iret
or
js
adc
fsubl
stos
aad
cmc
sti
mov
jl
sub
inc
js
cwtl
dec
jge
sbb
clc
pop
sbb
or
adc
imul
cltd
mov
pop
aaa
jl
sbbb
fiadds
lahf
repz
test
inc
ficompl
negl
mov
add
js
push
stos
and
push
adc
insl
sbb
mov
nop
sar
jp
jge
sar
push
fwait
ljmp
add
test
cmp
and
mov
cltd
lcall
and
fwait
sbb
jae
add
and
or
std
les
pop
mov
in
mov
jmp
mov
xor
inc
cmp
dec
pop
pop
js
cmpb
adc
add
aas
lds
sub
inc
mov
sbb
push
or
imul
in
mov
push
jmp
adc
cmp
mov
cld
inc
daa
add
andl
stos
fnsave
mov
aad
outsb
push
mov
mov
les
loopne
inc
and
or
or
or
adc
jo
fs
int
mov
pop
push
fisubrs
push
mov
mov
xchg
add
popf
inc
inc
jno
push
and
xchg
in
lret
cmpsb
jg
outsb
and
mov
jl
inc
cmp
fs
push
xchg
or
mov
pop
dec
push
or
cmp
cmp
xchg
mov
ja
mov
iret
sbb
in
push
or
jmp
int
sbb
adcb
pop
jecxz
mov
cli
ficoml
repnz
popf
fcoms
out
sbb
xchg
test
and
jge
xor
add
jp
pop
jge
shrl
dec
int
ljmp
push
scas
pop
sub
xchg
fdivs
mov
test
adc
fcompl
ret
addb
add
jp
jg
fistl
gs
sub
das
outsb
je
dec
int
jl
lock
and
hlt
add
and
xchg
out
out
es
mov
pop
mov
xchg
fisttpll
push
mov
imul
add
test
or
bnd
jne
pop
lahf
roll
cmp
mov
shl
pop
lds
and
popf
xchg
scas
and
stos
adc
sbb
xor
jae
lcall
and
scas
dec
clc
enter
addl
loop
jne
dec
dec
add
mov
stc
lret
push
in
xchg
and
fs
cwtl
fsub
xor
div
lret
inc
xor
mov
xor
enter
jns
xchg
add
sbb
int
jg
jo
ret
xchg
sarb
adc
cmp
mov
or
jns
in
repz
mov
cltd
inc
out
xchg
nop
pop
iret
or
lods
fcomps
mov
stos
fwait
dec
or
cmp
and
jmp
push
jno
outsl
jae
test
xchg
leave
popf
mov
or
lods
insb
pop
inc
sub
iret
sbb
mov
imul
sub
push
mov
sbb
pop
in
add
sub
add
xchg
jle
sbb
cmp
lret
mov
dec
or
push
bound
gs
std
bound
adcl
cmpsl
xchg
movsb
popa
stc
cmc
test
jbe
ljmp
adc
push
aad
test
lahf
ljmp
repnz
imul
sbb
pop
pop
sti
push
xor
push
lret
enter
mov
loop
into
sbb
lds
mov
pop
pop
jmp
jbe
or
or
popl
mov
pop
and
ficompl
mov
mov
aas
or
cmpsl
add
les
imul
mov
rclb
jle
push
add
jle
aam
call
sub
mov
xor
addl
push
mov
shlb
pushf
lahf
hlt
add
mov
mov
int3
shlb
push
test
shlb
jle
push
dec
dec
movsl
mov
add
sub
sar
fsubp
dec
sbb
test
in
cmpb
scas
pop
push
xchg
xor
insl
divb
dec
imul
shrb
mov
mulb
imul
mov
stos
push
sahf
imul
lea
repnz
mov
mov
push
mov
cmp
mov
jns
sub
lret
mov
xchg
rcl
pop
je
xor
sub
movsb
pusha
repz
cmp
mov
push
das
fs
dec
jnp
test
cwtl
mov
out
cmp
fwait
jno
mov
out
cmp
pushf
gs
mov
push
mov
jns
adc
outsl
rclb
ror
cmp
add
into
push
mov
subb
rcll
xor
push
lcall
sbb
xchg
push
or
cmc
sub
adc
push
rcl
imul
cwtl
push
ret
jns
pop
dec
movsl
scas
sub
mov
xchg
jg
arpl
pop
lds
jbe
xlat
imul
inc
clc
jnp
sahf
mov
mov
fsubrp
leave
cmp
push
and
ret
jmp
pop
fdivr
cmp
test
negl
loop
into
xlat
inc
test
pusha
jbe
xor
mov
inc
jge
push
shll
mov
into
mov
jnp
out
outsb
iret
fildll
dec
sub
jae
shl
adc
sti
jp
dec
repnz
sti
fidivrs
imul
and
add
xchg
sbbl
fildll
adcl
stc
mov
pop
or
test
stos
ljmp
cmpsb
mov
aam
and
ljmp
cwtl
adc
cs
fsts
pushf
mov
ds
or
in
sbb
dec
sarl
xchg
fwait
leave
sbb
sbb
jo
cmpsb
mov
adcb
nop
mov
cmp
cwtl
popf
daa
fadd
xchg
out
pop
or
jg
sti
dec
cmc
jle
push
iret
or
and
xchg
xchg
sahf
jl
loope
jbe
mov
addr16
outsb
mov
sub
jle
imul
sti
stos
lea
sbb
cld
xchg
in
jecxz
adc
pop
push
sbb
or
push
repz
ds
mov
imul
push
jg
sarb
out
or
ljmp
dec
faddp
xchg
movsl
xor
cmp
xor
mov
ljmp
cmp
ja
ds
popf
mov
and
iret
add
cmp
cmpl
test
sarl
push
jmp
jns
jae
jecxz
sub
leave
imul
xor
ja
jecxz
mov
enter
dec
lea
or
pop
sub
ja
outsl
jl
cld
jmp
mov
pop
sub
fimull
ljmp
mov
mov
in
fcom
lods
out
sub
sbb
jmp
xchg
sbb
cmp
divl
pusha
stos
popa
add
sahf
adc
int3
pop
mov
shlb
cli
and
gs
add
mov
or
ss
enter
inc
mov
andb
or
in
xor
add
ret
mov
xor
jnp
aas
cmp
mov
cmp
dec
jmp
mov
xchg
mov
fwait
sarb
mov
mul
xor
les
add
sti
fcmovnb
cltd
pop
dec
clc
cmp
adc
loope
mov
push
sub
mov
aaa
dec
or
dec
mov
repz
cmp
out
cmpsb
fstp
cmc
jnp
out
nop
inc
add
jp
jecxz
movsl
in
or
stos
jo
dec
dec
test
cwtl
jne
add
pop
leave
mov
cwtl
pop
dec
cltd
insb
cmc
jno
aaa
aaa
scas
pop
push
sub
xorl
cwtl
daa
jl
leave
push
jo
cmp
xor
das
xor
sahf
mov
and
aam
dec
jl
loopne
out
mov
add
add
leave
lds
cmp
xchg
dec
add
lcall
lods
dec
mov
scas
adc
push
ror
mov
stos
jl
pop
sarb
in
daa
cmpb
lds
mov
shll
and
in
pop
les
sbb
push
dec
adc
mov
lods
out
jbe
out
fisttps
imul
push
pop
loope
lret
inc
push
test
cmpsb
cs
or
stos
pop
dec
mov
push
dec
inc
das
inc
in
mov
out
or
pop
cmp
incb
popf
mov
js
popa
jo
lcall
jecxz
mov
adc
mov
mov
adc
jg
test
mov
in
add
sti
gs
dec
mov
in
xlat
idivb
mov
sub
bnd
and
lock
fucomi
iret
cmc
cwtl
cmp
cld
addl
int
and
imul
sub
gs
inc
and
inc
adc
pop
mov
sbb
aaa
nopl
or
lods
or
shrl
mov
stos
fidivrl
addl
adc
dec
rorl
dec
sub
sbb
mov
pop
sub
cmp
lock
pop
mov
test
mov
fsubrs
test
loopne
mul
scas
push
sbb
imul
xchg
dec
test
push
cmp
lret
movsb
daa
inc
pop
mov
andb
xchg
out
inc
cld
lahf
or
push
or
fbstp
cli
mov
push
ss
fsts
inc
stc
ja
sbb
cmp
dec
jns
imul
mov
push
leave
inc
stc
ja
sbb
cmp
dec
jns
imul
test
push
int
stc
jbe
addr16
mov
cmpsl
pop
push
jge
pop
out
pop
movsl
pop
xor
andl
stc
imull
sbb
sub
cs
sarl
or
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
cltd
cmp
and
out
mov
arpl
pop
add
add
add
add
or
dec
add
imul
ja
jo
xchg
mov
inc
add
add
add
add
add
add
add
xchg
je
xlat
add
add
pop
add
add
pop
add
add
add
xlat
add
ret
add
xlat
add
add
lret
add
add
add
add
add
add
and
adc
and
fildl
inc
add
add
add
and
add
mov
mov
pop
add
add
add
add
add
add
and
and
je
jnp
pop
add
sub
faddl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
testl
and
jns
add
pop
add
add
lea
addb
add
add
add
add
add
xor
mov
jge
mov
mov
data16
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
sbb
add
add
add
add
add
outsb
add
add
sub
mov
pop
add
add
add
add
pop
add
add
add
add
roll
add
clc
add
add
add
add
add
add
add
add
add
add
add
cmpsl
add
add
add
sbb
add
add
add
add
mov
add
add
xchg
mov
add
add
push
add
add
add
inc
add
add
iret
add
add
add
add
xor
jae
pop
add
mov
imul
add
inc
add
cmp
add
add
add
add
add
add
or
push
pop
aaa
add
add
add
add
dec
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
pushf
add
add
sbb
add
add
add
add
inc
add
add
add
xlat
add
jmp
fildl
ss
add
and
mov
aaa
add
inc
add
sbb
add
roll
add
add
add
jns
rolb
mov
test
add
sahf
add
jge
mov
test
and
pop
add
faddl
add
add
xor
add
cmp
dec
add
add
add
add
add
add
ltr
add
add
add
and
sbb
add
add
add
and
or
rolb
int
mov
adc
mov
add
mov
mov
mov
testl
icebp
add
add
add
add
add
and
jmp
loope
dec
add
rolb
mov
pop
add
add
mov
arpl
outsb
add
add
add
add
push
cmp
xlat
add
add
add
add
add
cmp
and
jmp
inc
add
outsb
add
add
icebp
add
add
add
or
add
add
mov
movsl
mov
in
jmp
loopne
cmp
ja
jns
dec
dec
inc
cmc
cmpsb
aas
dec
add
insb
inc
iret
nop
outsb
push
pop
inc
dec
xchg
jp
clc
sar
pop
test
out
sarl
scas
sbb
xchg
cli
je
gs
mov
aas
imul
xchg
xlat
mov
adc
aam
pop
sbb
dec
rclb
push
push
std
xchg
sbb
mov
sub
mov
gs
ds
dec
lret
add
bound
or
sub
xor
lahf
push
fsubl
adc
shlb
jp
mov
pop
scas
mov
lret
fnsave
lret
add
inc
adc
out
lret
jnp
xor
aas
scas
sub
stos
push
dec
icebp
imul
out
jmp
adc
sbb
sbb
lahf
add
lret
call
xchg
xchg
push
adc
movsl
cmp
outsb
mov
loopne
insb
ds
into
mov
xchg
rcrb
hlt
inc
inc
push
sbb
pop
in
lods
fdivrl
dec
stos
cli
mov
mov
xchg
mov
das
pop
fnstcw
sub
ret
mov
sbb
imul
xchg
cmp
out
out
cli
mov
cmp
xchg
pop
add
push
and
pop
and
mov
mov
adc
scas
ljmp
and
loopne
sbb
mov
mov
iret
ja
fsqrt
jbe
ret
repz
popf
push
mov
loope
sbb
inc
cwtl
test
inc
xlat
arpl
xor
test
fs
mov
repz
aas
push
rorb
jle
add
addr16
faddp
xorb
mov
lret
incl
ds
adc
push
inc
into
ret
in
loopne
jb
popf
cs
out
xor
ds
test
jae
and
rcrb
cmp
xchg
aam
pushf
adc
clc
push
sbb
inc
fildl
jnp
stos
in
es
out
pop
outsb
movsl
jb
ja
jl
sahf
inc
das
or
xlat
in
repnz
insl
sub
inc
mov
cmp
push
aad
cwtl
repz
out
in
mov
push
lods
outsl
push
dec
inc
sub
cmp
hlt
cmc
mov
loop
ret
jmp
xor
lods
jmp
jl
repz
lock
mov
addr16
add
cwtl
jecxz
jmp
fisttpl
fmull
nop
push
jmp
pop
sbb
pushf
imul
mov
mov
leave
mov
inc
and
lea
xchg
call
lods
xchg
out
arpl
mov
cltd
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
