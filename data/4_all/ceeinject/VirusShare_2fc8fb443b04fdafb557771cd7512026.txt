call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
cmp
sub
sbb
or
mov
sbb
ret
lcall
sub
cmp
sub
sbb
or
jp
push
pop
pushf
dec
jmp
lcall
sub
sbb
or
cld
sub
sbb
or
jp
push
pop
pushf
dec
mov
cmp
jo
jns
jnp
mov
pushf
sbb
loope
push
lahf
mov
gs
adc
dec
pop
mov
jecxz
enter
cld
inc
mov
inc
test
push
inc
insb
das
xchg
mov
jmp
lea
sub
push
jg
icebp
icebp
pop
mov
pop
dec
mov
ret
xchg
adc
jno
stc
jo
or
fists
xchg
fs
pop
imul
adc
and
shll
push
fxch
jl
pop
mov
adc
in
movsl
aad
fldenv
les
push
dec
add
sub
jl
sbb
repz
sub
sbb
or
jp
push
pop
pushf
dec
mov
pop
mov
ljmp
cld
pop
xchg
jae
arpl
ds
dec
clc
mov
pslld
dec
ljmp
nop
dec
cmpb
scas
jp
das
jmp
fistps
sti
push
cwtl
cmp
mov
pop
mov
data16
mov
pop
pushf
dec
mov
pop
mov
ljmp
cld
sub
sbb
or
jp
push
pop
pushf
dec
mov
pop
mov
ljmp
cld
pinsrw
push
push
cltd
cs
jle
fwait
inc
or
cmp
sbb
push
fdiv
call
ret
in
xor
inc
leave
mov
cmp
jp
push
call
push
add
mov
mov
pop
test
mov
test
adc
lds
mov
sahf
push
mov
lret
gs
mov
push
ja
pop
pop
pop
in
push
hlt
and
test
cmpsl
mov
push
sbb
sti
sbb
ljmp
fldln2
jb
roll
jb
push
pop
xchg
push
xchg
ret
sbb
mov
adc
lahf
mov
and
int3
add
mov
mov
loop
outsb
lock
xor
outsb
inc
dec
adc
daa
mov
stos
or
add
pop
jmp
arpl
add
pop
lea
gs
pop
pop
cmp
pop
nop
daa
les
mov
push
dec
mov
repnz
xor
stos
xchg
stos
sbb
ljmp
cli
mov
lcall
ljmp
lret
jmp
mov
mov
out
cmp
push
mov
scas
loop
sbb
imul
cmc
scas
fadd
and
dec
fmuls
popa
enter
xchg
call
cmp
leave
mov
jg
or
pop
mov
add
dec
sub
cli
popf
xor
stos
dec
adc
subl
jae
dec
mov
lds
xchg
add
xchg
loopne
push
jne
fnstenv
or
adc
decl
ss
test
inc
je
daa
aad
fdiv
test
dec
cmp
xchg
rol
jns
les
xchg
jns
test
jo
mov
or
mov
fnstcw
xor
shlb
sbb
outsb
xchg
push
loop
gs
mov
rorb
inc
cwtl
mov
xor
inc
mov
gs
sbbb
ja
mov
es
ficoms
jae
jbe
pop
cltd
sbb
jmp
sbb
and
adc
cmpsb
mov
and
xchg
inc
pop
arpl
or
arpl
arpl
ret
xchg
aad
mov
lods
xchg
repz
push
movsb
or
xor
sbb
cli
lods
dec
ljmp
fndisi(8087
mov
dec
mov
add
mov
mov
fwait
mov
push
sub
and
sbb
xchg
fwait
sbb
pop
jge
cmpl
cmp
add
inc
dec
xlat
push
popf
es
push
cmpb
add
out
ret
and
add
or
inc
sub
dec
popf
and
mov
icebp
pop
stc
and
pop
pop
xchg
test
mov
rep
add
dec
rorl
mov
cmp
jae
pushf
rcrl
sbb
xchg
lea
out
nop
push
rorb
xor
lods
clc
xor
mov
sti
mov
outsl
int3
and
xchg
xor
lods
inc
data16
mov
jne
xchg
or
in
sahf
scas
jp
add
fldenv
mov
repz
inc
lock
ds
and
xor
or
andl
inc
push
cmpb
jp
push
pop
subb
jnp
stos
push
add
jbe
loope
add
mov
imul
mov
lahf
call
mov
in
ret
filds
xor
mov
bnd
inc
test
dec
cltd
inc
adc
ja
xor
aad
push
sbb
inc
push
cmp
push
int
out
jns
scas
and
bound
jmp
repz
mov
fcomps
inc
cmpsl
and
dec
emms
aaa
jge
mov
sti
cld
arpl
mov
xchg
fsubr
pop
mov
or
push
int
psubsb
xchg
scas
jmp
add
sub
lods
push
jnp
push
fisubrs
mov
mov
outsl
je
iret
insb
mov
imul
sbb
and
fsubrl
pop
mov
pop
out
pop
mov
inc
xchg
mov
pop
in
es
pop
cmc
fdivrp
sbb
mov
les
lahf
push
int
xlat
mov
popf
aas
dec
lea
andl
pop
pushf
or
test
ficoml
or
sbb
jbe
sub
xlat
mov
hlt
mov
mov
pushf
int
hlt
sbb
inc
aam
push
cmp
and
dec
cwtl
cmp
repnz
cmpsb
xor
aaa
dec
lock
mov
fidivs
aam
fistpl
and
jae
int
imul
mov
leave
movsl
mov
sbb
mov
and
push
ja
ds
xchg
sti
jno
psubusw
movsb
lcall
lret
pushf
inc
or
in
cltd
jge
fimull
xchg
push
mov
cmpb
xlat
fimull
sub
scas
lock
inc
pop
dec
add
clc
pop
pop
call
sub
into
loopne
dec
notb
jbe
aaa
dec
das
mov
int
in
jo
or
xcrypt-ctr
cmpsl
pop
test
loopne
movsl
sub
pop
imul
or
xchg
shl
and
addb
aas
mov
mov
dec
dec
mov
lods
adc
pop
call
and
add
mov
xchg
push
xchg
dec
and
push
outsl
push
push
fisttps
adc
test
inc
push
or
rol
dec
movsb
dec
fwait
and
repz
test
or
je
bound
mov
mov
mov
mov
leave
cmpsl
push
and
mov
or
jecxz
xor
fs
inc
sub
idivb
jnp
mov
test
jnp
mov
std
mov
aaa
and
sbb
imul
popa
or
bound
cltd
mov
add
cmp
pop
cmp
mov
into
fst
sub
jg
movsl
inc
add
aad
inc
mov
sbbb
dec
imul
pop
lock
leave
push
cmp
xor
mov
lods
and
enter
flds
lods
out
xorl
or
pop
adc
clc
ja
es
push
pop
insl
ss
xlat
and
mov
mov
jb
pop
push
ljmp
test
jmp
cld
sbb
dec
xchg
pusha
push
or
loop
pop
sub
jmp
pop
movhps
inc
pop
pop
flds
jbe
imul
pop
ss
pop
xchg
jmp
mov
adc
xor
xchg
movsl
or
cld
dec
dec
aad
fsubr
lahf
nop
cmpb
cmc
inc
popf
aad
jle
xor
repnz
lods
mov
or
jl
lods
stos
xchg
out
outsb
fisubrl
call
push
cmp
sub
mov
lcall
mov
jge
rcrl
out
lret
add
in
pushf
iret
cmp
inc
sbb
xorb
pop
push
pop
fcmovb
hlt
ja
inc
xor
pop
icebp
enter
int3
out
test
int3
lret
lcall
ds
std
lds
or
pop
je
outsb
jnp
or
xor
dec
addr16
and
test
push
inc
mov
mov
popf
mov
negl
mov
stos
in
sbb
xor
adc
sbb
pop
leave
mov
cmpb
cmpsl
out
adc
fdivrs
lods
adc
in
sub
ja
xchg
movsl
mov
lea
inc
leave
push
fists
adc
cmp
fldl
loopne
sbbb
fiadds
dec
push
dec
lret
inc
sti
push
mov
cli
inc
lcall
lret
push
es
mov
and
jbe
ss
and
ret
nop
gs
push
sahf
in
repz
or
xlat
lret
sub
jg
cmpsb
adc
sahf
ret
xor
pop
xchg
movsl
push
daa
push
xchg
push
arpl
xlat
loopne
mov
and
xor
cs
mov
test
stos
mov
loop
jecxz
sbb
adc
sar
cli
scas
das
and
cld
jle
xor
imul
xor
or
jge
push
aaa
lea
cmp
cmp
cmp
test
xor
and
adc
test
hlt
test
xor
or
sub
or
pop
pop
hlt
jmp
push
es
push
push
or
push
int3
insl
idiv
pop
cli
add
andb
les
rcrb
jno
int
adcl
add
xlat
xchg
es
xchg
int3
loope
dec
mov
scas
inc
push
mov
fstpl
sub
xchg
cmpsb
or
mov
xor
fwait
xor
mov
jo
inc
outsl
stos
mov
js
add
imull
rcr
imul
sti
repnz
mov
sub
mov
sub
lcall
xlat
loope
xchg
and
pop
cmp
lret
mov
push
stos
jnp
test
mov
fdivl
leave
xchg
dec
insl
lret
mov
or
sti
jnp
lret
fisttps
cmpb
xor
pop
adc
adc
adc
jge
add
dec
je
data16
pop
push
ret
mov
dec
test
mov
pop
movsb
std
jnp
sbb
lds
nop
cltd
mov
mov
dec
sbb
stc
mov
lods
jp
lods
inc
ljmp
cmp
mov
jne
in
jne
scas
mov
and
call
sahf
mov
icebp
xor
rcll
mov
in
jb
stc
hlt
push
mov
sub
mull
jp
cwtl
pop
sbb
inc
add
in
icebp
mov
lods
clc
push
mov
xor
loop
lcall
and
pop
fs
push
inc
inc
pop
mov
pop
mov
in
out
mov
mov
fisttpll
insl
add
xchg
push
sbb
xor
andb
cmp
cmp
out
mov
popf
dec
fldt
cld
and
popf
inc
ds
add
mov
xchg
fdivp
mov
pop
add
dec
cmc
dec
pop
cmpsl
adc
out
cwtl
int3
repz
sub
jmp
inc
insl
lods
cli
adc
mov
mov
cld
and
loop
push
bound
test
lods
sub
mov
jecxz
incl
imul
jns
inc
push
cmp
in
loop
jnp
sar
pop
out
mov
push
cmpsl
scas
inc
mov
addr16
mov
mov
sub
push
push
mov
jmp
push
jo
and
aas
push
jge
cmpb
inc
or
inc
mov
lods
stos
call
rorb
inc
jbe
inc
lret
push
fwait
test
das
dec
test
xor
mov
ss
pop
mov
fidivrs
mov
insl
cmp
xlat
ljmp
xchg
inc
scas
sub
roll
or
adc
push
jg
pop
pop
iret
xor
pop
add
test
imul
scas
jae
adc
repnz
lods
mov
leave
jg
mov
movsl
mov
scas
cmp
pop
xchg
movsl
enter
mov
xchg
mov
mov
sbb
popf
lds
lcall
test
idivb
fsts
push
cs
out
inc
add
xchg
push
shll
sbb
jp
arpl
test
in
inc
popa
sbb
loop
ss
mov
ljmp
adc
mov
mov
cmp
test
fs
xchg
test
int3
cmpl
lret
repz
mov
pusha
mov
push
data16
pusha
mov
pop
xor
sub
or
push
testb
jbe
dec
ss
out
sbb
mov
movsb
sbb
adc
or
push
shl
jae
inc
imull
jbe
and
fbstp
bnd
aam
icebp
stos
inc
cmc
out
cmpsl
xchg
push
fwait
dec
jne
pop
mov
out
iret
cmpsl
mov
adc
outsl
cmp
and
adc
in
pushf
mov
mov
jb
dec
bound
fsubs
sub
leave
jle
mov
hlt
push
rorb
and
popf
push
ja
out
in
daa
push
xchg
pop
inc
pop
mov
rclb
jae
push
arpl
mov
fwait
add
enter
jbe
pop
xor
outsb
bound
and
pusha
sbb
lock
aaa
shll
ret
jne
imul
xchg
add
jnp
fwait
dec
xchg
aad
sbb
cld
pop
push
fnsave
test
xchg
and
pop
test
inc
sub
and
mov
xchg
lods
pop
mov
push
sub
xchg
pop
in
movsl
and
popf
lahf
mov
int
push
jnp
jae
outsl
movsl
aas
cmc
jne
add
push
jae
leave
enter
icebp
addb
in
stos
std
sar
xchg
fstps
in
aam
add
aad
xor
mov
push
orb
in
xlat
and
fisttpll
cmp
imulb
outsb
mov
push
lret
mov
xchg
cli
xor
push
lods
ja
nop
not
sbb
mov
fiadds
ret
cmpsl
push
or
popl
cmp
jbe
jae
test
insb
into
pop
xchg
fimuls
add
repnz
jno
out
lods
xor
in
sbb
daa
pop
js
mov
inc
mov
cmpsl
insb
dec
cmp
out
int3
or
push
jecxz
lret
jbe
xlat
dec
dec
and
frstor
dec
xor
xor
call
das
cwtl
or
arpl
mov
sub
movsb
movsl
xchg
or
and
or
and
add
xchg
dec
pop
loope
les
mov
shrl
lret
cli
pop
scas
xor
xor
and
pop
repnz
mov
mov
es
aam
sbb
adc
aam
andb
es
push
popf
push
cmp
sbb
pop
int
dec
xchg
das
inc
xchg
cmpsb
mull
pop
sbb
nop
jo
adc
push
sahf
shlb
shrl
sbb
add
pop
push
repz
daa
test
dec
lret
push
adc
push
lret
aas
push
mov
sub
cmp
dec
shlb
jp
lds
or
out
out
mov
pop
push
pop
lret
or
bound
cmpb
scas
int
pop
daa
cli
loop
int
xchg
add
jno
inc
fwait
mov
sub
mov
lock
or
mov
jp
les
push
jbe
xchg
mov
dec
sahf
add
in
lea
inc
cltd
push
fcmove
sub
or
lcall
and
mov
stos
icebp
icebp
mov
dec
aaa
icebp
dec
out
sbb
inc
fldl
sbb
adc
daa
sbb
mov
lods
ds
ss
leave
push
adc
pop
sbb
mov
ret
push
repz
jl
xchg
push
mov
xorb
jne
push
aad
movsl
pop
jp
push
xchg
xchg
loopne
mov
or
pop
lret
outsb
and
fstpt
lahf
imul
pushf
push
mov
cmc
mov
push
int
jae
add
or
dec
dec
lahf
pop
push
cmc
xchg
mov
lods
es
jo
mov
fistps
out
aad
inc
clc
dec
sub
sub
or
mov
cld
xchg
xor
jle
mov
call
mov
call
aam
js
push
xchg
mov
push
adc
and
push
add
dec
out
push
mov
in
aas
push
cmp
fidivrs
inc
push
cmp
int3
xchg
mov
cltd
pop
ret
int
mov
or
mov
and
shl
or
lahf
mov
xor
leave
test
push
inc
int
aam
xorb
mov
xor
sbb
icebp
jae
add
hlt
xchg
pop
jp
in
in
repz
lret
mov
inc
je
lock
xchg
sti
xor
or
jp
mov
ret
or
xor
sbb
and
add
aam
out
push
bound
xlat
in
jb
in
xchg
xchg
test
sub
sbb
imul
adc
sahf
arpl
outsb
jbe
and
jns
dec
cmp
jo
dec
and
mov
pop
jle
adcl
pop
in
sarb
adc
and
and
inc
jle
or
xor
cwtl
and
ds
jmp
inc
cltd
nop
xor
push
fwait
sti
inc
sub
jns
test
fildl
jp
mov
outsb
jmp
hlt
outsb
scas
rorl
push
mov
shlb
in
xchg
icebp
jne
divb
mov
lds
or
mov
shr
adcl
push
sarl
jp
loopne
jmp
xchg
data16
ds
cmp
es
sbbb
aas
imul
jne
add
out
mov
push
and
stc
pop
jl
fs
add
or
mov
xor
loopne
mov
inc
sbb
data16
push
test
mov
lea
mov
add
jle
ss
les
and
lods
mov
dec
in
jge
lds
gs
outsl
push
adc
inc
and
and
mov
mov
test
mov
inc
into
in
xchg
sbb
das
cmp
mov
fs
mov
das
stos
lcall
rcll
not
rclb
addr16
dec
test
scas
test
pusha
mov
pop
push
sub
mov
or
pop
sbb
mov
mov
aas
daa
aad
cmc
adc
divl
addl
stc
fcoml
test
and
mov
pop
mov
jecxz
push
ljmp
mov
xor
daa
inc
adc
lret
push
lret
mov
cmpsl
nop
cmpsl
fadd
mov
sbb
mov
out
mov
push
and
into
push
push
lret
int3
test
mov
push
mov
adc
dec
inc
fcomp
pop
int3
imul
out
jge
fdivs
lea
dec
sub
sbb
and
ljmp
les
jnp
xchg
cli
add
adc
out
pusha
jnp
adc
hlt
ret
data16
pop
jb
fildll
aam
dec
mov
xchg
fdiv
inc
inc
or
iret
add
mov
int3
cltd
loop
arpl
daa
push
stos
rclb
clc
aam
call
jns
xchg
inc
mov
movlps
cmpsl
sar
in
and
mov
mov
mov
lock
xor
push
xchg
fstpl
mov
push
call
sub
xor
out
subl
mov
push
inc
roll
or
imul
je
xchg
push
jmp
mov
push
enter
add
cld
out
xchg
aam
push
or
and
fdivrl
loopne
cmp
sub
xor
xchg
daa
mov
repnz
mov
inc
lds
outsl
pushf
xchg
cmp
shlb
cmc
jae
or
push
jbe
cmovae
mov
pop
out
jae
insb
push
out
mov
xchg
or
int
inc
inc
test
ss
jb
sbb
xor
or
test
bound
fildl
fiaddl
divb
mov
pop
inc
je
mov
je
int3
loopne
jae
inc
fdivs
pop
add
in
xchg
jmp
push
xor
subl
jmp
test
jbe
add
arpl
aam
lcall
push
stc
dec
pop
pop
mov
test
rorl
decl
pop
imul
dec
add
insb
mov
mulps
lock
adc
adc
lcall
mov
loope
xor
js
inc
adc
loope
and
daa
push
cmp
pop
jnp
pop
mov
or
adc
out
adc
push
movsl
adc
lcall
pusha
fsubrl
jp
add
movsl
scas
jmp
roll
mov
ret
mov
lcall
in
dec
cmpsl
int
mov
push
jge
cli
and
sub
xchg
aad
call
imul
xchg
sub
insl
mov
loope
or
in
test
mov
pop
sub
or
cmc
xchg
stc
mov
dec
xor
mov
lods
xor
jp
jns
push
jmp
in
add
push
or
bound
inc
inc
or
sbb
stos
dec
inc
xchg
out
pop
jne
adc
dec
jg
sarl
dec
pop
inc
and
mov
cmp
fdivr
xchg
jmp
push
jg
push
jb
mov
cmp
outsl
sbb
les
dec
repz
adc
mov
pop
movsl
pop
cmp
fistl
mov
in
and
adc
cmpsb
scas
fwait
dec
sub
xchg
sahf
mov
int3
jp
push
pop
pushf
dec
mov
pop
mov
ljmp
cld
sub
sbb
or
jp
push
pop
pushf
dec
mov
pop
mov
ljmp
cld
stos
in
lcall
lods
pop
pushf
lret
jl
insb
lcall
sub
sbb
or
cld
sub
sbb
or
jp
push
pop
pushf
dec
dec
mov
pop
mov
mov
repz
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
xchg
or
mov
int3
xchg
out
adcb
add
inc
and
xor
jb
bound
xchg
repnz
shlb
mov
adc
bound
jb
inc
push
push
inc
bnd
bound
xchg
jmp
loop
lret
shrb
loop
adc
inc
inc
push
jae
dec
xor
out
jecxz
mov
lret
dec
fstpl
jnp
or
inc
sub
cmp
adc
fxch
push
lcall
mov
sarb
ret
sbb
or
inc
fldl
mov
ja
adc
dec
insl
or
jmp
xchg
adc
lods
notl
mov
push
and
and
in
bound
xchg
mov
movsl
repnz
lret
loop
popf
shll
inc
fisttpll
lret
aaa
sub
loop
push
ret
adc
or
pop
test
scas
lea
std
scas
std
jp
mov
pop
or
mov
push
test
andnps
jbe
inc
dec
push
mov
adc
in
pusha
adc
xor
ret
shlb
loop
adc
jp
dec
and
sub
jb
bound
xchg
loope
hlt
shl
ret
mov
lods
int3
popf
out
bound
sbb
addr16
pop
adc
outsl
in
mul
shll
mov
pusha
or
dec
and
movsl
inc
daa
dec
sbb
addr16
mov
xchg
mov
mov
faddp
mov
adc
bound
push
and
xor
jb
bound
xchg
repnz
shlb
mov
adc
bound
push
and
xor
jb
bound
xchg
repnz
das
repz
add
jge
mov
fmuls
jnp
jae
dec
aas
rcll
fiadds
inc
mov
ljmp
jno
fisubl
inc
mov
rcl
imul
push
notl
inc
insb
notl
jns
push
stos
loope
in
sbb
nop
pop
fisttps
subb
mov
mov
xor
fdivr
jmp
iret
mov
dec
xchg
test
cmp
jp
je
add
cltd
xchg
loop
fld
repz
mov
in
fidivrl
shlb
aad
imul
dec
gs
jg
cmp
sub
or
fucomi
inc
cltd
pusha
in
jp
imul
ret
mov
inc
mov
flds
insb
mov
data16
addr16
mov
dec
cmc
mov
xor
xchg
sbb
aam
movsb
cmp
jecxz
pop
cmpsb
jo
lret
cmp
fs
ficompl
insb
mov
rclb
leave
pushf
je
dec
aas
pop
ds
enter
fimull
dec
and
mov
pop
nop
popl
leave
aam
mov
fimuls
scas
cmp
insl
mov
cmp
inc
jp
mov
or
je
mov
mov
dec
jbe
adc
mov
fcoms
leave
outsb
sbb
sbb
mov
jge
add
insl
stos
roll
or
pop
xchg
bound
adc
fimull
jae
lods
sub
add
adc
dec
lret
cmc
or
push
push
sbb
stos
sahf
shll
rclb
push
pop
sahf
fidivrl
popf
int3
negb
mov
cwtl
out
push
mov
cmp
cmpsl
mov
out
ja
popf
mov
or
enter
ret
xor
jno
add
xor
sub
fimuls
iret
xchg
out
cmp
ret
jl
or
mull
add
lret
aad
fildll
int3
gs
std
mov
xor
in
mov
hlt
add
inc
out
pop
adc
push
sbb
out
movsl
fidivrs
push
xchg
dec
and
adc
cmp
xor
js
inc
roll
std
mov
repnz
imul
or
sub
push
xor
scas
movsb
adc
sub
sub
int
sbb
in
mov
or
mov
jb
xorw
int
pop
lods
movb
stos
jg
mov
das
or
loopne
pushl
daa
and
and
xor
imul
stc
in
jecxz
sub
pop
lret
cli
push
cmp
push
or
sbb
loope
push
aas
icebp
xchg
xor
std
cmp
and
add
xchg
cld
sub
outsb
push
cmp
sbb
sub
insb
bound
mov
scas
dec
mov
and
scas
lret
gs
jle
addr16
cmpsb
bnd
and
or
aas
mov
sbb
xchg
enter
xchg
lea
cmpsb
lret
sti
orb
mov
loopne
xchg
pop
sarl
lahf
adc
test
adc
or
adc
lods
mov
inc
jno
das
and
sub
int
arpl
mov
fs
sti
and
jnp
inc
pop
mov
sub
iret
jo
push
lret
cmp
pop
dec
arpl
lods
lods
and
push
shrl
repz
orl
dec
or
pop
adc
push
test
xchg
movsl
dec
push
rorl
inc
mov
dec
xor
push
sbb
and
aam
or
cmp
test
inc
add
sar
lret
test
dec
loopne
loope
xchg
dec
sahf
mov
jne
jne
cmpsb
fwait
pop
cmp
mov
dec
jmp
adc
movsl
lahf
add
leave
out
ljmp
js
iret
inc
cmovno
lea
loope
orb
adc
sub
lods
mov
sub
jg
push
mov
clc
sub
mov
loop
lds
push
test
scas
sub
push
incl
popf
jb
jns
nop
xchg
lea
jns
mov
pop
fcompl
mov
lds
imul
movsb
sub
add
pop
loope
jge
mov
test
lret
dec
jmp
jno
enter
push
fwait
into
add
mov
dec
arpl
test
lcall
imul
push
push
mov
bound
adc
addr16
sbb
repnz
add
mov
push
xor
movb
jle
insb
push
repnz
outsb
jo
mov
push
xor
sub
gs
adc
arpl
xor
jbe
out
test
sub
push
cmc
sbb
adc
inc
dec
loop,pn
sbbl
out
int3
faddl
cwtl
inc
dec
imul
add
mov
and
jo
js
mov
int3
sahf
mov
aas
pusha
sbb
popf
xchg
lret
btc
mov
push
lea
fwait
mov
jno
scas
push
jge
mov
jp
lods
js
xchg
aas
ret
loop
lret
mov
lret
push
push
pop
lds
hlt
jb
data16
shr
dec
scas
stc
fbld
mov
jb
inc
lret
adc
out
dec
pmulhw
call
pop
mov
or
lea
jle
ljmp
mov
scas
sub
int
pop
das
push
stos
lcall
fs
and
testb
out
jl
sbb
loope
push
cmp
fbstp
mov
mov
test
jb
lock
mov
lods
fsubrl
xor
dec
dec
xchg
xor
test
cld
cmpxchg
sbbb
xchg
ret
divb
out
xor
push
mov
or
mov
mov
jmp
xchg
cld
push
pop
mov
mov
mov
inc
rolb
cmc
push
fxch
inc
scas
push
xlat
in
pop
sbb
jge
scas
hlt
pop
push
jg
cltd
jg
int
xchg
adcl
ret
inc
ret
fbld
std
ja
in
push
subl
mov
out
in
jb
jns
push
jne
insb
xchg
cli
bswap
test
test
mov
stos
call
mov
dec
push
lret
rclb
jle
data16
pop
xlat
sbb
xchg
nop
addr16
aas
enter
cmp
jge
push
push
out
aaa
xchg
imul
push
mov
in
adcb
dec
test
mov
mov
inc
mov
cli
mov
in
ja
scas
jmp
aaa
loope
xchg
in
in
addl
add
cmp
sub
out
cmp
and
jae
es
ja
or
out
cmpsb
cmp
stc
lret
std
test
or
adc
ror
add
push
jno
cmp
or
adc
loop
and
sarl
or
movsb
push
arpl
std
add
xchg
dec
push
pop
pop
rorl
pop
mov
xchg
adc
mov
mov
orl
fmul
adc
dec
ljmp
ret
pop
push
jb
pop
jp
xor
dec
mov
or
scas
sub
mov
cmp
push
cmp
xchg
int3
xor
cmp
out
mov
sbb
test
mov
add
inc
inc
xor
pop
dec
imul
icebp
orb
dec
sbb
mov
or
loope
mov
mov
mov
push
popa
sbb
sub
and
sub
adc
mov
xlat
push
icebp
cwtl
xor
mov
cmp
negl
adc
inc
dec
cmpsl
jg
scas
das
mov
push
pop
repnz
outsl
dec
cmc
dec
mov
insl
and
in
sbb
inc
xchg
fcomp
sbb
popf
scas
jno
cmp
push
inc
cmp
shrb
cld
test
add
sub
inc
cmc
rcl
mov
push
in
out
xchg
rclb
imul
and
lds
rolb
inc
ret
inc
push
les
sbb
or
push
add
nop
cmpsb
push
and
cmpsl
jmp
mov
inc
sti
aaa
aaa
aam
repnz
cmp
or
xchg
cld
mov
cmp
dec
fstl
adc
je
inc
xchg
hlt
insb
cmpsl
xchg
addr16
inc
mov
mov
arpl
test
or
fwait
jmp
mov
mov
fnstsw
call
sbb
sarb
jne
out
sti
jp
scas
into
stc
jmp
add
dec
in
fldl
out
out
jmp
data16
es
xchg
inc
mov
adc
xorb
cmp
out
add
incl
pop
push
or
cmp
xor
and
ds
int3
fisttpll
mov
cmp
cmp
push
cmc
dec
sti
dec
push
fwait
xchg
in
push
mov
inc
pop
fistpll
or
cld
sti
imul
enter
testl
xchg
jbe
pushf
fnsave
and
leave
mov
dec
icebp
jp
jb
call
imul
pushf
ja
outsl
push
mov
sub
dec
scas
xor
xchg
call
repnz
std
cmp
pop
aaa
ret
and
fs
sub
arpl
loop
popa
pop
cs
sub
ret
cld
lcall
xchg
xchg
mov
push
cld
push
out
imul
push
xor
sahf
mov
leave
mov
mov
dec
ret
repz
or
shrl
xchg
js
popa
add
push
xchg
xchg
mov
mov
imul
cmc
push
dec
lods
imul
dec
add
dec
inc
jnp
testl
lahf
sbb
adc
int3
lods
lret
xchg
push
cwtl
insb
fstl
mov
sahf
sub
cli
and
bound
mov
pop
mov
push
daa
sub
xlat
xchg
push
inc
fnstcw
mov
jne
inc
cmp
mov
pushf
xor
pop
dec
inc
sahf
clc
fistpl
mov
pop
ljmp
sub
dec
jo
mov
arpl
cmp
sub
jns
adcb
call
sbb
sbbb
push
pop
repnz
jnp
add
xor
mov
pop
pop
fisubrs
or
dec
xchg
lar
in
lret
and
scas
loop
fstpt
sbb
fiaddl
clc
mov
or
push
xchg
sarl
mov
push
push
pop
push
mov
sub
mov
xchg
out
dec
xlat
inc
cmp
xor
aas
xor
sbbb
lret
out
mov
nop
and
stos
jmp
xchg
dec
ljmp
push
repnz
adc
aaa
mov
jmp
cmc
or
xor
mov
jns
adc
fldt
xorb
fsubrs
xchg
sbb
nop
mov
cmp
lret
adc
fdivl
iret
daa
pop
adc
jmp
adc
ljmp
cmpsb
mov
rorb
and
mov
sub
mov
insl
hlt
cmc
popf
arpl
in
xor
mov
pusha
jo
push
cmp
hlt
hlt
mov
pop
mov
pop
ret
cmp
arpl
xchg
cmp
psrld
sti
cmp
pushf
push
add
mov
pop
loope
cmc
xlat
mov
jne
xchg
clc
cltd
aas
jns
rcrl
aaa
jecxz
lock
shlb
popf
xor
jp
cmp
xchg
mov
mov
iret
repz
xchg
stc
mov
inc
push
jg
sub
xlat
sbb
divb
call
and
add
pop
scas
outsl
and
sub
push
mov
cltd
push
es
adc
xchg
sbb
or
jne
je
ss
dec
movsl
push
lret
add
sbb
jo
xor
jbe
dec
leave
xchg
cwtl
cmp
cmp
mov
jg
clc
out
dec
push
into
mov
push
roll
mov
cmp
stc
adc
insb
jmp
insb
stos
js
imul
nop
imul
outsb
dec
jb
test
nop
mov
or
inc
imul
mov
sarl
out
pushw
lock
adc
in
sub
imull
cmp
mov
mov
shl
pushl
pop
in
sahf
iret
pop
and
push
cmpsl
mov
test
enter
adc
jne
sub
sbb
mov
ja
mov
loopne
movsl
adc
cltd
adc
frstor
rorl
fildll
inc
dec
lcall
jbe
into
fsubl
add
aam
sub
and
mov
fsubrl
testb
rorl
loope
nop
lcall
ja
xchg
adc
leave
lds
ja
dec
dec
inc
xchg
and
icebp
push
addb
xchg
popf
adc
mov
jg
dec
loopne
mov
sarl
lods
mov
dec
std
stc
or
and
xchg
sub
jnp
cmp
mov
fldcw
in
sbb
push
lcall
lcall
mov
push
pusha
xchg
ret
jg
stos
pop
and
sbb
out
scas
mov
jo
jb
mov
lret
adc
adc
dec
or
sub
cmp
mov
cmp
xchg
xorl
jle
imul
ss
das
aas
lods
sub
pop
mov
data16
pusha
push
add
and
mov
xchg
add
push
and
stos
clc
ret
xor
sbb
push
cs
jl
jle
sahf
je
push
mov
xor
or
lcall
arpl
scas
push
mov
mov
or
push
sub
jmp
adc
inc
movsb
xchg
lahf
dec
push
outsb
sub
lret
inc
or
sub
mov
pusha
cwtl
xchg
sbb
xor
divb
dec
push
adc
push
movsl
mov
aas
aas
lods
pop
ret
arpl
xor
push
out
sub
les
insl
xor
int
push
pop
call
xchg
pop
lcall
mov
jo
sbb
cmp
lret
inc
pop
and
gs
adc
dec
jle
xchg
inc
lret
rcrl
push
lds
jno
cmpsl
arpl
sahf
daa
fdivrp
xchg
lds
inc
popw
push
cld
insl
rorl
mov
inc
push
and
iret
or
inc
sbb
jnp
outsb
cld
pop
mov
mul
shrb
or
sbb
pop
sub
xchg
mov
dec
or
in
test
lret
xchg
pushf
adcb
jl
jo
cltd
hlt
fisttpll
sbb
lods
sbb
mov
mov
mov
or
jmp
inc
xchg
fldenv
and
mov
into
mov
push
test
push
or
iret
or
ret
cwtl
bound
ficomps
mov
cmp
push
cmp
push
push
push
sarl
adc
or
hlt
addr16
int3
dec
mov
inc
pop
push
pushf
fs
sub
mov
add
cmp
push
inc
aas
or
dec
out
and
push
sub
sub
mov
and
int
mov
sub
shlb
add
cmp
pop
fidivs
adc
dec
mov
sbb
xchg
hlt
stos
jnp
int
cwtl
movsl
cmp
lds
cmp
lock
or
lcall
out
mov
jge
and
cmpsl
add
lahf
or
ljmp
mov
fwait
add
cmp
mov
std
ds
aad
popa
fwait
stos
adc
xchg
adc
mov
in
sbb
sub
sub
mov
repnz
mov
jae
xchg
jmp
gs
and
sarb
sub
mov
dec
mov
inc
fs
jl
in
pop
adc
pusha
fidivrs
jbe
mov
sbb
push
xchg
and
dec
cmpsl
scas
hlt
jb
das
jle
cmp
pop
cmp
cmpsb
jne
jp
pop
push
pop
lea
cmp
jo
lods
ja
int3
add
gs
lret
lcall
imul
imul
test
aaa
mov
pop
jbe
stos
ret
sub
inc
adc
mov
sbb
cmpsl
jne
push
inc
int3
mov
mov
mov
repnz
adc
xorl
scas
or
xor
and
movsl
jle
jmp
ja
outsl
movsl
jmp
call
cs
jecxz
adc
pop
dec
dec
ds
mov
cli
add
and
cmp
scas
sarl
mov
outsl
sar
or
repz
clc
pop
ret
shlb
sti
push
sar
addr16
mov
out
fnstcw
pusha
insb
fimull
mov
adc
rcl
lods
sub
es
fldenv
cmp
enter
fcomi
xchg
jecxz
pusha
clc
mov
hlt
inc
adc
cmp
push
inc
pop
repnz
cmpb
aad
cmp
ret
outsl
cmc
or
mov
pusha
or
pop
mov
insb
mov
in
je
jp
add
sbb
pop
jns
fabs
outsb
dec
cwtl
cmp
xchg
pop
and
dec
jmp
call
insl
test
je
push
enter
sub
xor
cmc
inc
mov
cmp
insl
mov
stc
sub
lcall
fadds
in
das
cmc
leave
insl
inc
movsb
dec
xchg
sbb
clc
add
das
scas
xchg
sbb
inc
add
jb
push
dec
js
cmp
lcall
cmp
fcmovnu
orl
pop
leave
lods
dec
scas
lret
cmp
mov
rcl
test
cmp
fidivl
and
jg
loopne
xchg
mov
roll
jg
inc
xor
sub
cmp
test
sar
jecxz
lods
insl
or
je
mov
ficomps
or
cmc
sub
dec
jge
xchg
push
lds
test
xchg
xor
push
rolb
mov
popf
iret
rorl
int
mov
sub
pop
fisubs
xchg
scas
das
and
pop
jmp
jnp
je
daa
xchg
ffreep
inc
shlb
jo
lods
xchg
push
mov
jl
ljmp
ljmpw
cwtl
mov
cwtl
imul
pop
es
loopne
pop
pop
js
pop
cmp
jne
push
dec
pop
mov
cmp
std
stos
add
popa
adc
push
dec
ret
sub
jbe
push
xor
pop
in
push
adc
inc
mov
mov
scas
cmp
sub
outsl
or
stos
and
out
mov
lret
cmc
negl
pop
hlt
fsub
push
mov
mov
imul
jb
jg
bt
mov
pop
std
stos
pop
add
ret
mov
shr
sub
xor
imul
add
add
jge
mov
out
jne
mov
xchg
bnd
xor
mov
cmpsl
mov
xchg
dec
ljmp
jo
fwait
mov
out
cmp
lea
mov
cmpsl
add
dec
outsl
mov
clc
nop
jbe
mov
and
dec
mov
and
jno
mov
jmp
test
pop
pusha
inc
and
jcxz
nopl
mov
add
jge
clc
call
dec
aas
cmp
jg
ja
mov
mov
shlb
andl
ds
idivl
cmp
hlt
jmp
leave
push
mov
test
rolb
jno
jp
bound
jb
jp,pt
jbe
notl
in
dec
out
or
inc
outsb
adc
push
add
stos
lods
loopne
mov
or
push
std
icebp
dec
fwait
or
faddl
icebp
loop
push
xchg
xor
lret
out
movups
push
rcrb
jne
ret
xchg
sahf
push
fdivrs
ds
push
push
hlt
nop
je
lock
pop
stos
pop
adc
shlb
insl
ljmp
cmp
xor
hlt
int3
push
clc
lds
and
jp
jmp
je
lret
cmpsb
in
pop
repnz
mov
or
dec
addr16
outsb
jb
pop
inc
cmp
cwtl
popa
mov
adc
ds
pop
fwait
sbb
cwtl
imull
cmp
mov
add
push
fsub
mov
dec
mov
clc
xor
pop
int
pop
testl
stc
push
scas
sub
ret
dec
push
ljmp
loop
int3
jae
mov
mov
pusha
jnp
pop
test
repz
inc
test
popa
cwtl
add
mov
sub
iret
or
mov
insb
jno
icebp
fisubl
pop
outsl
shlb
lret
shrb
outsb
inc
mov
clc
repnz
and
mov
dec
popf
xchg
jecxz
inc
aam
call
lea
ret
xchg
loop
adc
bound
push
and
xor
jb
bound
xchg
repnz
shlb
mov
adc
bound
push
and
xor
jb
bound
xchg
repnz
shlb
mov
adc
bound
push
and
xor
jae
bound
xchg
repnz
shlb
mov
in
jb
enter
xor
mov
lcall
or
adc
add
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
out
add
in
xchg
mov
cmpsb
mov
jnp
cmp
or
sbb
outsb
inc
jnp
dec
bound
mov
mov
sti
pop
lret
loop
xchg
cmp
and
sub
pop
jb
adc
xchg
or
mov
out
and
sub
push
jno
jge
inc
dec
adc
sub
sbbb
pusha
cmc
mov
sub
add
test
loopne
jb
mov
push
cmpsl
or
xorl
add
loopne
pop
mov
daa
movb
lock
inc
ljmp
subl
arpl
jecxz
imul
mov
mov
inc
ret
xor
into
or
ret
lret
or
sbb
in
out
jns
pop
mov
je
pop
aaa
adc
js
jmp
imul
in
xor
jae
lea
inc
mov
mov
add
mov
ret
jp
fstpl
sub
inc
jnp
push
bound
cwtl
cmpb
jmp
mov
jb
test
jp
outsb
gs
dec
bound
sbb
ror
xchg
iret
loope
pushf
test
mov
push
pop
push
jp
add
sbb
stos
xor
int3
ret
push
xchg
subb
sahf
adc
inc
outsb
inc
ja
sbb
push
push
add
sbb
aam
aad
repnz
scas
cmpsb
sti
ror
loop
repnz
cmp
or
sbb
imul
dec
bound
stos
cmpb
jmp
sti
ror
loop
repnz
cmp
or
sbb
imul
dec
bound
stos
cmpb
add
sahf
cmpsl
pop
xchg
icebp
stos
mov
mov
inc
les
and
call
out
mov
ja
mov
outsl
add
sti
leave
dec
inc
lret
pop
iret
push
mov
sub
ficomps
cwtd
add
mov
mov
aaa
and
inc
xor
jmp
outsb
pop
dec
aas
and
sbbb
dec
nop
call
push
or
or
movsl
xchg
sbb
push
xchg
cmp
mov
frstor
lahf
xchg
test
jp
stc
ror
mov
add
and
sub
rcrl
xchg
mov
pop
nop
push
in
push
outsb
inc
pop
cmc
push
ret
daa
idivb
lret
aaa
hlt
xor
ja
jmp
xchg
test
mov
js
add
iret
out
ficomps
fs
in
scas
movb
cmp
or
dec
jg
lahf
lods
cs
lret
jmp
js
inc
lahf
jbe
cmp
or
cmp
push
pop
jg
xchg
sahf
outsb
std
hlt
clc
out
jbe
nop
fyl2x
rcl
sub
test
insb
add
dec
mov
dec
or
rcrb
addl
mov
in
push
clc
mov
fcomi
xor
lods
push
scas
inc
dec
enter
pop
mov
dec
mov
enter
xor
int3
ljmp
movsl
scas
testb
leave
inc
jns
inc
fisttps
add
add
call
or
fsubrl
mov
ds
jp
mov
adc
decb
int
jae
push
xchg
shlb
cmp
stos
into
add
inc
aam
in
sbb
jno
popa
xchg
xor
cli
mov
or
cmp
mov
sbb
sbb
jbe
nop
inc
out
xchg
pop
add
cmp
and
add
mov
xchg
mov
and
or
xchg
xchg
sub
mov
clc
je
fldcw
test
adc
testb
jge
and
stos
outsb
scas
aaa
push
pop
shlb
mov
or
movsb
cld
out
mulb
jns
xchg
addb
data16
aas
dec
bound
icebp
inc
out
pop
push
sub
xor
das
jmp
cld
fwait
cmpsb
scas
nop
insl
hlt
gs
sbb
pop
cmp
movsb
add
push
sbb
push
jb
push
mov
and
mov
out
push
gs
inc
dec
cmp
daa
mov
mov
les
push
fcoml
cli
push
mov
aaa
push
clc
jl
scas
sub
mov
fistl
aad
std
jno
sbb
int
andl
sti
mov
fwait
fwait
outsb
pop
jmp
pop
xor
negb
push
inc
cwtl
movsb
out
imul
lds
fidivrs
adc
test
push
mov
mov
sbbb
es
data16
adc
inc
mov
jne,pn
jns
dec
jmp
add
scas
add
pop
inc
sub
insl
xchg
sbb
jle
push
rorb
test
mov
je
jecxz
or
adc
dec
mov
pushf
ret
ss
adc
xlat
setle
f2xm1
test
inc
outsl
aad
icebp
xlat
xchg
fdivrl
fldcw
jbe
dec
ret
nop
push
cs
push
js
mov
jge
xchg
test
or
mov
inc
or
mov
in
leave
xchg
andl
pushf
loope
aam
sti
sarb
or
mov
push
scas
dec
ds
fwait
imulb
dec
into
mov
mov
push
xchg
aaa
xchg
sbb
data16
inc
push
ja
sbb
ret
ds
jne
dec
lret
pop
add
push
lcall
mov
stc
cmp
jl
xchg
cmp
test
std
int3
pop
dec
out
dec
inc
jg
jae
stos
cmp
pusha
push
mov
stos
lods
inc
in
inc
inc
lea
jne
add
in
sub
push
nop
push
out
inc
mov
pop
cli
dec
shlb
jb
xchg
mov
js
sub
xchg
fildll
sub
call
jg
or
call
xchg
ja
in
int
inc
cmpsl
sub
lods
jo
jbe
mov
adc
pop
mov
dec
mov
xor
mov
jno
dec
sbb
addl
sub
fwait
popf
fsub
push
call
std
pop
jmp
dec
lahf
lcall
push
cs
idivl
xor
mov
sbb
xchg
sub
rdmsr
ficoml
or
sarl
add
lret
mov
movsb
xchg
lret
xor
push
addr16
fs
push
outsl
sahf
lea
add
push
dec
or
cli
aam
and
mov
cmp
lods
cld
je
xor
lcall
xor
pop
ja
lods
and
mov
inc
sub
push
jp
and
dec
jb
inc
sbbl
andl
sbb
in
rcrb
adc
aam
inc
add
repz
xlat
lret
call
mov
fisttpll
stos
idiv
punpcklbw
inc
aad
in
add
mov
adcb
ja
pop
push
cmp
jb
mov
dec
aaa
jp
stos
push
mov
iret
scas
push
outsl
inc
lret
lea
mulb
mov
out
jno
xchg
in
loopne
xchg
repnz
add
out
push
cmp
repnz
cld
flds
mov
stos
lcall
cmp
sbb
xor
inc
fs
in
xchg
jl
loopne
jmp
daa
scas
adc
push
sbb
cmp
sub
and
insb
mov
xor
push
cltd
dec
lahf
dec
pop
lahf
iret
scas
mov
dec
dec
sbb
lock
push
or
das
arpl
add
cli
pop
sbb
addr16
ss
dec
imul
xchg
movsl
out
push
mov
subl
lret
adc
add
in
xchg
out
jns
pop
out
sub
pop
xchg
nop
add
stos
xchg
ret
add
xchg
movsl
filds
jmp
add
leave
dec
fucomip
lds
or
xchg
test
repnz
out
pop
pop
push
sub
dec
sub
in
xchg
mov
mov
fistps
aas
fimull
lcall
idiv
push
jae
scas
mov
mov
xor
xchg
push
jns
jbe
pusha
xchg
cmp
add
sub
xchg
clc
push
loop
daa
daa
and
xchg
insl
les
jl
rol
cmpb
mov
pop
leave
fnsave
pusha
cmp
add
mov
into
scas
mov
stos
in
push
lret
push
inc
shl
daa
cld
pop
jg
mov
add
iret
test
incl
je
cld
popl
dec
push
inc
push
pop
xlat
out
adc
cli
push
imul
divb
rcrb
jns
pop
loop
mov
jns
jns
cwtl
nop
ja
push
into
mov
xchg
mov
adc
and
sub
pop
mov
outsb
jnp
pop
in
or
shrl
push
nop
sub
and
stos
mov
xor
mov
dec
xor
cmp
mov
ret
ficoms
cmp
or
jno
lods
cltd
jg
push
push
pushf
xor
enter
or
push
mov
rorl
popa
jle
pop
xor
out
int
push
dec
aad
sub
in
xlat
mov
and
mov
mov
ret
or
mov
out
out
pop
sub
jp
outsl
cli
adc
pop
jge
xchg
out
mov
shll
mov
aad
fistpl
mov
dec
dec
ss
cld
mov
mov
testb
and
mov
sub
fistps
test
mov
jg,pt
push
jo
push
das
dec
fstpt
or
or
inc
pushf
iret
add
mov
sub
imul
jb
clc
and
and
cli
push
sbb
dec
inc
mov
pop
add
jb
mov
adc
mov
sbb
nop
cltd
add
mov
fdivs
mov
fadd
fsubrp
jno
ds
sbb
in
and
stc
adc
pop
push
test
adc
mov
test
cmpl
fisubs
je
jp
jno
add
outsb
inc
ret
in
pusha
std
sub
fists
push
push
mov
and
xchg
dec
pop
lds
cmp
aas
cld
and
jg
jge
rclb
adc
mov
lea
jmp
rclb
sbb
pop
jl
inc
jp
jmp
js
in
lds
into
mov
loop
test
mov
rclb
imul
lcall
xchg
sbb
jb
mov
imul
leave
es
popa
xchg
or
jbe
out
xor
push
mov
pop
xchg
xor
mov
test
jmp
dec
gs
movsl
roll
fcom
mov
outsb
jno
aas
imul
mov
xor
in
sub
in
out
jp
outsb
in
dec
movsb
fcompl
push
mov
or
lcall
jmp
dec
jno
push
cmp
les
ds
xor
stc
cli
or
pop
subl
push
inc
dec
xchg
popa
xor
mov
xor
ljmp
cmp
mov
pop
jle
loopne
popa
loope
vunpcklpd
cmpl
arpl
inc
mov
in
movsl
lcall
sbb
sub
dec
cli
mov
pop
adc
jge
or
push
mov
mov
xchg
mov
mov
sahf
fprem1
lcall
inc
pop
js
sub
notb
inc
addl
negb
xchg
sti
mov
mov
add
ret
ret
mov
lock
dec
xchg
decb
insw
test
inc
dec
mov
pushf
dec
or
stos
mov
xor
push
andb
outsl
push
inc
push
stc
pop
in
outsb
filds
cwtl
sahf
in
fisubs
popa
popf
xchg
bound
push
repnz
fimuls
bound
ss
lods
rcrb
jp
ret
stos
xor
aas
rcl
pushf
std
pop
jbe
sbb
mov
adc
and
xchg
sti
pusha
jg
dec
mov
and
add
mov
xchg
mov
xchg
xchg
leave
movsl
mov
inc
test
into
mov
inc
xlat
popf
ret
sub
roll
into
leave
outsl
js
jecxz
mov
jmp
or
xchg
dec
arpl
sbbl
push
xchg
push
test
in
pop
rcrl
cmp
daa
inc
mov
xchg
xor
loop
imul
jmp
mov
add
cwtl
jmp
add
scas
sub
clc
test
mov
xchg
or
sub
or
xchg
sbb
rcrb
jp
je
sub
mov
ss
leave
paddb
mov
add
mov
lds
cmp
fcomp
daa
mov
jl
mov
pusha
mov
icebp
push
cmc
push
mov
sub
jmp
ja,pt
xor
lret
adc
aas
xor
push
push
mov
mov
inc
lcall
idiv
cmp
add
dec
ss
adc
jle
jo
out
popf
pop
xor
ja
sub
push
nop
stos
popf
jmp
add
push
add
xchg
js
xor
and
dec
fiadds
mov
in
stc
mov
mov
xor
xorl
cmp
xor
loop
or
jmp
fxch
ljmp
push
test
imulb
and
mov
imul
pop
mov
sahf
xchg
aaa
scas
mov
sbb
mov
ljmp
jecxz
xchg
xchg
inc
cs
sub
pop
stos
adc
mov
dec
cmpsl
dec
mov
xchg
xchg
arpl
popf
or
dec
cwtl
dec
and
adc
cmp
jb
dec
cmpsl
cltd
jbe
daa
bound
add
insb
dec
inc
mov
jle
paddusb
lock
xor
hlt
xchg
cmpsl
or
aad
mov
subb
push
ja
mov
daa
adc
daa
in
aas
jo
ss
mov
movsl
adc
repnz
inc
test
cs
xor
or
and
sub
fildll
sarl
sub
jo
jle
adc
inc
xchg
rcll
push
cmp
sti
pop
fstps
cmc
cs
loope
xor
mov
cld
adc
jmp
cmp
pop
mov
xor
or
ja
mov
push
sti
and
jl
fisubrl
sub
ret
stos
xchg
roll
orb
sub
shrl
out
in
lea
aad
divb
rorb
out
inc
repz
dec
mov
bound
loop
imul
mov
aad
jo
xor
xacquire
dec
mul
pop
push
xchg
scas
add
iret
sub
pop
loopne
xor
pop
sub
dec
in
fadds
sub
xor
int
mov
push
sbb
add
out
outsb
mov
dec
jb
js
sub
in
sahf
mov
or
and
rclb
stos
inc
xchg
rolb
jmp
out
sbb
xchg
pop
sub
jns
ret
outsb
mov
push
gs
jecxz
movsb
jbe
cmp
test
lret
pop
and
pop
cmc
xchg
outsl
cmpsl
inc
dec
jmp
xor
mov
sarl
push
xor
or
mov
cld
outsb
add
jno
xchg
jp
pop
pop
lods
sub
mov
outsl
sbb
outsb
lock
pop
push
xchg
cmp
xchg
cmp
mov
mov
cwtl
lcall
pop
jns
dec
in
cmp
fcoml
add
push
dec
push
aad
fwait
inc
in
mov
jmp
mov
stc
enter
jl
cld
into
stos
dec
sub
mov
lods
pushf
sub
mov
mov
mov
cmp
mov
out
sbb
or
fldenv
cmpsb
adc
dec
add
adcb
mov
pusha
sbb
lret
pop
xor
aaa
sub
lret
stos
cmp
xor
mov
push
lds
lcall
push
or
cmp
jns
lahf
hlt
jae
mov
and
jmp
fisttpl
lock
xor
cs
jne
adc
mov
dec
inc
jl
cmc
pop
in
imul
cmc
push
add
sbb
outsb
stos
or
andb
xchg
sub
xor
fdivrl
dec
xor
or
dec
test
dec
fldt
cmp
lods
outsb
leave
mov
hlt
adc
jno
dec
adc
lahf
test
pop
rcrb
aam
mov
push
addr16
mov
call
sub
add
jbe
shll
lret
sarb
push
adc
dec
jno
insl
movsl
enter
mov
ffree
cs
pop
and
fwait
mov
pop
mov
je
pop
pop
hlt
addb
bound
movsl
mov
pop
pop
pop
idivb
ja
mov
lcall
xchg
inc
cli
cld
lock
into
or
xchg
xchg
xchg
mov
fidivs
or
adc
xchg
mov
sti
mov
add
xor
or
and
sub
xor
sbb
pop
mov
xor
xor
out
or
inc
repnz
into
fprem
mov
fsts
enter
in
dec
sbb
movsb
shrl
cwtl
loopne
repz
and
shl
cmc
or
lock
lret
push
jp
sbb
pop
jns
sbb
inc
ss
mov
scas
push
ds
adcb
aad
bound
pop
call
fwait
cltd
and
clc
mov
insb
mov
je
sbb
clc
jmp
cmp
xchg
scas
adc
hlt
fiadds
mov
cmpsb
dec
mov
mov
cmp
push
loope
and
dec
mov
mov
push
and
xchg
leave
sub
fistps
int3
cmpsl
jb
cmp
fnsave
sbb
ret
call
call
sub
orb
in
or
test
dec
cmp
iret
mul
icebp
jbe
sub
lds
vpmuldq
mov
sub
aas
push
jmp
movsl
ljmp
mov
mov
adc
xor
std
or
mov
sub
cmp
push
xchg
out
cmp
dec
lcall
jne
xchg
rcrb
and
fsubl
cmp
imul
aad
lock
and
popa
dec
data16
jp
xchg
inc
scas
mov
add
orl
aaa
out
mov
sbb
xchg
pop
cli
xchg
xor
stc
xchg
inc
adc
out
push
ret
mov
xor
les
dec
aaa
ret
out
cmp
sub
imul
gs
adc
inc
popf
pop
sbb
xor
loop
cmp
jle
mov
aad
mov
mov
popa
and
lret
cwtl
xchg
inc
std
les
sbb
sub
mov
xor
pop
mov
bswap
sahf
cmp
pop
mov
jle
mov
or
mov
scas
test
fisttps
or
xchg
or
pop
or
dec
sbb
push
lock
inc
bnd
cmp
outsb
stc
pop
rcll
mov
mov
inc
mov
imul
aas
push
jge
mov
xor
ret
shrb
sahf
xor
loope
stos
pop
rclb
shrb
ret
sub
mov
cmp
outsl
gs
sar
dec
mov
xchg
cltd
fcmovbe
fstl
sub
cmp
scas
add
dec
push
xchg
adc
lcall
xchg
xor
insb
fwait
xor
movsb
or
shrb
cmp
into
inc
ret
ss
jno,pt
enter
ror
aad
addr16
adc
std
jg
mov
adc
add
jb
or
loope
inc
shlb
and
lea
sbb
or
pop
add
xchg
or
in
dec
push
pop
iret
push
mov
dec
cwtl
jnp,pt
repz
jb
ss
sub
xchg
push
or
mov
mov
mov
xchg
aam
xchg
dec
movb
mov
and
sub
test
mov
pop
fcmove
sbb
mov
fildll
jmp
movsb
pop
xchg
mov
movsl
fucomi
xchg
fcmovnbe
cli
orb
aaa
wrmsr
add
test
push
jb
xor
popf
push
fs
fwait
cmp
rcr
incl
sub
mov
or
mov
and
adc
cltd
mov
dec
dec
dec
out
jbe
xchg
cmp
or
mov
sbb
push
add
cmp
sub
in
and
popf
lret
cmp
ljmp
lea
fisttpll
movsl
cli
out
mov
pusha
adcb
push
stos
in
mov
or
mov
mov
sub
push
inc
ret
sbb
inc
sub
cmp
inc
push
decl
jno
ds
in
lret
jne
mov
fdivs
jbe
sbb
sbb
pop
jnp
fisubrl
xchg
shll
jmp
je
push
outsl
mov
mov
in
fildll
adc
js
popf
roll
mov
mov
push
xor
pop
andb
clc
sub
cld
mov
inc
sbb
add
dec
mov
fildl
rcrb
ljmp
cwtl
leave
cmp
xchg
ljmp
inc
je
data16
xor
fisubl
cld
in
add
aam
repnz
mov
cmc
dec
mov
push
les
cwtl
das
push
xor
jmp
mov
add
frstor
fs
addl
popf
movsb
mov
outsb
mov
mov
clc
mov
cmp
push
cmp
mov
mov
mov
aaa
or
es
xchg
jl
gs
div
insb
jp
mov
ret
lock
or
aaa
fistpl
lahf
aam
sahf
sbbl
stc
mov
into
int
testb
pop
sbb
sbb
inc
xor
mov
movsl
clc
mov
loop
orb
aaa
mov
inc
jno
dec
in
jne
sbbb
shl
jmp
jmp
lret
pushf
jo
add
xchg
movsb
push
cmp
outsl
loopne
cmp
or
add
push
loop
cltd
ret
push
mov
adc
ror
push
fisubs
fcoml
fwait
div
or
mov
inc
jg
aas
dec
mov
push
cmp
fbstp
loop
jg
dec
iret
push
into
out
xchg
jnp
lret
stc
pop
mov
lods
or
fisttpl
adc
shl
dec
lcall
test
bound
hlt
neg
push
xchg
jae
es
psubw
test
xchg
mov
pusha
push
adc
push
add
pop
in
cmc
jecxz
fisubs
and
pop
xchg
fsubrp
imul
clc
xchg
push
xchg
iret
iret
mov
or
sub
cld
xchg
imull
pop
cltd
adc
dec
xchg
lea
aas
push
cwtl
in
pop
inc
add
xor
jae
movsl
mov
xchg
cmpsl
sbb
xor
out
imul
sbb
jae
xchg
lret
loop
repnz
cmp
or
sbb
imul
dec
bound
stos
cmpb
jmp
sti
ror
loop
repnz
cmp
or
sbb
imul
dec
bound
stos
cmpb
ljmp
repnz
fidivrl
adc
and
xor
bound
inc
imul
xchg
xchg
add
jmp
lret
bound
sub
les
sbb
rep
mov
movsb
lea
mov
mov
rcl
loope
adc
outsl
xor
or
jno
popa
ficoml
std
mov
lods
icebp
mov
popa
or
mov
inc
sub
xchg
les
xchg
roll
dec
mov
or
and
cs
add
xchg
fstp
mov
push
popa
and
movsl
or
loope
and
push
add
xlat
in
pop
dec
push
bound
pop
divl
stc
mov
lods
mov
dec
lods
shll
xor
fstl
ret
pop
pushf
adc
in
mov
fdiv
push
pop
addl
jge
mov
inc
jle
push
jns
xor
jno
cmp
insl
mov
in
sub
xor
pop
fst
pop
aam
in
bound
mov
loope
inc
sbb
mov
pop
fnstsw
xlat
jo
xor
add
and
inc
or
pusha
or
mov
mov
lods
icebp
movsb
loope
adc
jne
and
jno
or
fcomps
shrl
pop
jne
pop
adc
xor
dec
jae
and
xchg
fldl
stc
cltd
rep
roll
je
push
or
xor
pop
adc
xor
std
cmc
rcrl
loope
adc
insl
xor
or
jno
popa
int
fldl
rcrl
loope
adc
insl
xor
or
jno
popa
int
push
enter
out
sbb
in
arpl
cs
xchg
test
in
mov
nop
sub
inc
cmp
inc
sbb
add
mov
push
or
aas
movsb
fidivl
xchg
fldt
loope
dec
rol
movsb
lahf
imul
ss
cmp
add
test
imul
je
jne
mov
sub
or
shr
sahf
jnp
mov
loope
fidivrs
cli
xchg
fdivr
jbe
in
cmp
xchg
push
mov
stc
aad
sbb
gs
push
cs
out
stc
aaa
pop
cli
mov
mov
lcall
scas
jmp
dec
sbb
notl
add
and
flds
xlat
imul
push
js
adc
xchg
rcrb
ja
jl
mov
inc
dec
lods
clc
mov
dec
pop
fwait
and
subl
data16
xchg
mov
adc
nop
insl
pop
std
dec
enter
lea
sbb
cltd
popa
mov
hlt
inc
pop
push
push
rorb
mov
cld
mov
je
mov
rcll
xchg
mov
popf
jmp
jl
xor
xchg
sub
daa
inc
pop
and
icebp
roll
pop
push
pop
scas
cmc
mov
push
sarb
scas
push
adc
movsb
into
sar
push
pop
idiv
pop
out
push
dec
xorl
mov
movsl
decl
fistps
lods
std
pop
iret
les
aas
sar
lahf
test
or
ret
ds
ficompl
stos
add
cmpsb
and
movsl
pop
ja
sbb
in
enter
mov
cmpsl
xlat
mov
data16
cmpsl
or
mov
je
imul
outsl
adc
sahf
sahf
mov
fisubl
fwait
jl
fsub
movsl
repnz
mov
out
sbb
jbe
outsl
adcb
lea
jns
scas
das
xchg
bound
lea
iret
and
scas
mov
add
in
push
outsl
int
pop
jg
fidivl
mov
mov
hlt
xlat
sbb
xchg
popf
mov
lods
popf
xchg
lods
mov
add
cli
jecxz
xor
sti
sti
inc
xor
loope
push
cmpsb
cld
push
jne,pt
outsb
lods
dec
fidivrl
icebp
cmc
xlat
sub
dec
adc
scas
jle
cmpsl
mov
mov
insl
fidivs
fdiv
push
cmp
add
test
mov
cmp
and
cmp
sub
loope
mov
mov
fs
pop
ja
inc
or
mov
sub
jns
mov
stos
pop
xchg
sbb
out
lock
xchg
jb
mov
dec
mov
lea
add
mov
imul
xchg
pop
test
in
pcmpeqw
imul
push
cld
ret
into
jmp
fstl
into
pop
mov
sub
in
dec
pop
lret
pop
pop
and
mov
ja
leave
out
lret
dec
ficompl
jmp
inc
pop
dec
pop
pushf
es
mov
push
xor
xlat
stos
outsl
or
adc
lods
das
xorl
mov
adc
or
or
xlat
pop
push
push
scas
cs
in
add
ror
inc
mov
popa
inc
pop
xor
push
iret
enter
xor
rorl
fs
and
cmp
repz
adc
jns
sbb
daa
movsb
mov
inc
adc
push
and
push
ja
ret
les
shll
imul
mov
inc
xorl
dec
aas
outsb
mov
mov
jge
in
and
jge
pop
dec
xlat
aad
gs
scas
out
xchg
push
clc
out
cmp
mov
aaa
into
divl
jo
arpl
cmpsl
mov
push
insl
add
mov
pop
ljmp
dec
cmp
pop
stos
stos
cmp
xchg
jecxz
xor
jl
fnstsw
lock
lods
dec
push
out
ficomps
mov
mov
and
loope
pop
jo
sbb
je
sub
inc
call
mov
test
adc
and
xchg
mov
inc
pop
int3
roll
movsl
and
imul
jb
xchg
mov
jb
sbb
arpl
iret
push
cmp
out
imul
adcb
cld
out
mov
add
pop
inc
push
mov
hlt
popf
loope
sbb
or
ret
arpl
jbe
nop
adc
inc
mov
adc
or
mov
adc
pop
shrb
xchg
popa
imul
pop
rcrb
mov
insl
xor
dec
aam
not
mov
fcmove
mov
inc
adc
xchg
scas
push
jp
lds
int3
push
mov
int3
addb
adc
dec
push
push
cmpsb
push
lret
lods
xchg
jno
xchg
sbb
imul
insb
or
icebp
fisubs
sbb
mov
push
or
invd
cmp
push
lret
es
push
and
pop
arpl
jecxz
shll
xor
and
mov
sbb
fcmovbe
in
hlt
sub
mov
in
out
ret
aaa
aam
andl
xchg
mov
add
pop
adc
in
fst
sub
dec
loopne
sbb
add
sbb
out
mov
inc
mov
rorl
in
fdiv
xlat
jge
dec
mov
pop
sub
pop
enter
pop
popf
inc
xor
insb
jmp
nop
call
rcrl
jns
lcall
insb
cmp
adc
inc
jnp
out
test
inc
cli
inc
xor
stos
mov
or
pushf
mov
or
cmp
shr
movsl
sbb
jno
aam
cmpsb
addr16
and
sub
cmp
scas
aad
out
jle
xlat
shrb
push
dec
fcmovne
fiadds
pop
adcb
adc
popf
cmp
jge
in
and
sahf
pop
fwait
xor
adc
xor
int
xor
cmp
xor
add
or
ljmp
stos
out
lcall
inc
daa
aam
xlat
movl
push
outsb
fdiv
fstps
inc
pushf
or
fs
loop
test
pop
mov
push
adc
setbe
popf
add
aad
pop
mov
adcl
sbb
pop
dec
add
inc
and
jne
or
adc
cmpsb
mull
sub
fildll
xor
and
xchg
xor
arpl
xchg
sbb
mov
mov
add
scas
pop
int3
push
ret
mov
xchg
mov
xchg
jns
aad
and
imul
aam
cmp
cmc
mov
push
pop
cmp
xor
decl
dec
or
pop
jmp
test
push
adc
pop
inc
fwait
jno
xlat
shl
mov
out
cmpsb
cs
adc
mov
push
push
push
lock
hlt
lods
sbb
jo
inc
jecxz
mov
cmp
lret
or
fisttpl
popa
xchg
sub
ret
ds
sbb
dec
cld
sbb
lret
sbb
insl
jb
cli
jl
lret
sub
mov
xlat
dec
mov
add
ja
and
mov
fsubs
out
sub
sub
and
jecxz
dec
sti
iret
filds
mov
xor
push
fs
push
repz
test
mov
cmp
pop
or
mov
mov
out
int
into
xor
ljmp
add
ss
jp
xchg
xchg
or
jmp
mov
mov
xchg
xor
dec
xchg
xchg
mov
inc
mov
cld
insl
bound
repnz
mov
mov
add
mov
fbstp
xlat
jecxz
lcall
dec
xor
leave
sub
jecxz
adc
lods
aam
sub
es
sbb
fs
adc
inc
sub
mov
cld
daa
cmp
pop
gs
clc
xchg
out
jno
rorl
dec
sub
lds
mov
fisubrl
mov
push
mov
or
add
clc
arpl
stos
data16
ljmp
fs
jb
inc
test
pushl
and
lret
imul
popf
mov
jns
enter
pop
pusha
ret
pop
or
jb
andl
lret
add
xchg
dec
mov
pop
lahf
out
mov
clc
mov
nop
cmpsb
mov
icebp
stc
push
jne
gs
add
push
sub
xchg
dec
outsl
sbb
inc
test
inc
xchg
gs
out
jae
push
into
lds
mov
cmpsb
call
mov
push
rorb
call
ss
cmp
shlb
cmp
mov
inc
lret
addr16
in
sub
mov
lahf
inc
push
repz
rolb
mov
xchg
into
or
xchg
push
mov
xchg
stos
dec
faddp
add
js
mov
aaa
ret
inc
and
inc
push
push
sahf
and
xchg
or
mov
mov
pop
push
pop
mov
or
xchg
rol
adc
incl
in
shrl
in
dec
cmp
pop
sbb
jecxz
mov
out
add
add
sbb
pop
lods
sbb
sbb
pushf
bound
dec
ret
sbb
rcrl
xchg
arpl
inc
and
jns
push
adc
pushf
testb
jns
test
or
ret
adc
inc
xor
cmc
fistl
rcl
adc
sub
testl
out
xchg
ret
or
cmp
fstpl
push
mov
movsb
cwtl
addr16
push
insl
add
gs
xchg
push
inc
jo
or
mov
fisubl
or
sbb
adc
mov
frstor
fisttpll
les
xor
insl
jae
outsl
xchg
jmp
mov
add
jcxz
mov
mov
mov
push
sub
push
and
out
mov
xchg
mov
ftst
and
fidivl
mov
and
mov
mov
lret
in
sub
sbb
cmc
cmpsb
xchg
mov
mov
mov
inc
lods
push
jge
xor
cmp
push
adc
mov
dec
jmp
subl
jg
mov
data16
lods
or
movsb
cld
daa
xor
cltd
jo
xchg
ret
out
mov
inc
in
sbb
sub
cmpsb
insb
pop
xor
xor
jno
pop
imul
or
jl
aas
test
sti
adc
mov
dec
mov
inc
jne
ret
push
jmp
jle
divl
xlat
rcrb
aad
rdmsr
xor
jecxz
test
push
test
dec
dec
mov
js
push
imul
mov
sahf
addr16
sub
pop
mov
cmp
sbbl
or
mov
fldcw
stc
rclb
jb
xor
dec
dec
mul
sbb
dec
xchg
jo
pop
xchg
pop
add
xchg
and
repz
js
sahf
cmp
add
jp
scas
repz
pop
inc
pop
int3
xor
push
and
pop
or
adc
sti
out
xchg
mov
push
fsubrp
nop
call
xor
and
xlat
movsl
jecxz
outsb
push
push
test
or
lds
mov
scas
lock
insb
xchg
cmpl
add
lahf
inc
push
add
cmpsb
jae
cmp
int
xorl
jne
add
cwtl
push
mov
aam
nop
xor
fnsave
mov
lock
inc
out
enter
into
in
push
mov
daa
add
jns
add
loope
data16
lret
dec
xchg
inc
aam
jno
repnz
add
aam
xor
xchg
dec
iret
pop
mov
sbb
shll
dec
cmp
aad
add
jno
stos
gs
addr16
mov
dec
push
pop
aaa
mov
mov
push
cmpsl
nop
and
and
mov
push
add
and
mov
jb
adc
gs
insl
scas
movl
cmc
jle
shrb
adc
sub
adc
aaa
imul
popf
push
push
imulb
push
ret
daa
jmp
popf
loop
xchg
push
lods
cmpsb
out
xchg
jae
mov
xlat
andl
pop
inc
fwait
in
mov
lahf
jnp
and
xor
mov
mov
push
arpl
jecxz
adc
js
mov
sbb
or
mov
dec
cmp
pop
movsl
loop
scas
rcrl
xchg
outsb
ja
andl
pop
aaa
es
xlat
jno
fdivs
out
xchg
and
jg
pop
cld
test
xor
inc
dec
push
mov
int
dec
loope
cmp
mov
outsl
ret
aas
push
into
jl
insb
push
hlt
repz
dec
je
gs
xchg
int
call
and
fdivrp
sbbl
jle
clc
xor
movsb
push
sbb
mov
cli
jne
push
in
dec
sub
ds
xchg
inc
fld
pusha
jb
ljmp
fs
or
sbb
mov
add
call
add
mov
and
mov
inc
push
fldenv
mov
scas
mov
out
arpl
cld
je
xor
push
mov
or
das
mov
cwtl
or
daa
scas
push
push
sarb
repz
les
in
lock
pop
xchg
mov
std
pop
pop
and
mov
rorl
ret
mov
popf
xchg
xor
ljmp
in
pop
or
inc
xor
push
xchg
scas
ret
fldt
ljmp
mov
pop
pop
jecxz
iret
add
stos
sahf
cmp
pushf
dec
mov
aas
jl
clc
xchg
jmp
mov
inc
cmp
fisubs
ss
fsubr
ds
lock
std
outsl
pop
insb
mov
addl
adc
push
cmp
pop
or
not
cs
xor
cwtl
mov
mov
push
and
xor
daa
into
imulb
cld
dec
jno
or
aas
fwait
fwait
mov
in
push
ja
shll
jp
daa
push
sub
popa
mov
int
sub
imul
into
stos
add
rcll
sahf
push
sub
adc
sbb
gs
inc
jo
jecxz
push
aas
outsl
xor
cwtl
ljmp
jo
int
mov
movsb
sub
push
repz
push
jp
shrb
ficomps
fidivl
dec
mov
cmp
adc
ret
mov
cmpb
sahf
lahf
and
push
sub
jecxz
inc
iret
jg
cmp
dec
repnz
imul
xor
adcl
repnz
gs
cmp
xchg
int
sbb
xchg
inc
testb
mov
pushf
repnz
cmc
cmc
lds
push
inc
inc
sbb
pop
aam
push
xor
data16
jns
jecxz
aam
addr16
pop
adc
mov
add
lods
popf
addr16
dec
sbb
or
insb
xor
pop
and
xlat
cwtl
and
insl
dec
inc
cmpsb
pop
out
lahf
fdivrs
mov
lret
out
sbb
mov
cmp
test
daa
cltd
in
mov
sub
xor
out
push
cs
or
popa
shl
loopne
idivb
insb
jmp
push
ret
pop
mov
adcb
inc
in
in
movsb
pop
icebp
outsb
push
add
daa
cmp
and
dec
xchg
mov
jnp
fimull
dec
add
stos
mov
popf
mov
movsb
fwait
sbb
push
adcl
mov
out
sub
loope
push
sub
xchg
das
or
dec
repnz
inc
rolb
jno
push
cld
jge
data16
inc
pop
cmp
sub
xlat
dec
in
dec
jb
ds
xlat
js
mov
je
test
repz
xchg
add
iret
filds
leave
fisttpl
add
std
fadd
mov
dec
scas
je
ss
rorl
jp
sub
or
mov
jno
stos
repnz
xor
cmp
insb
jmp
pusha
push
jl
divl
sub
adc
pop
scas
jns
xor
sub
call
movsl
inc
mov
lret
gs
fistpll
cmp
and
imul
cmpsb
xchg
sbb
pop
mov
ja
jg
inc
mov
push
lcall
stos
rorl
outsb
pop
add
xorl
out
lcall
dec
mov
mov
imul
inc
es
outsb
mov
jo
xchg
in
cmc
das
inc
xor
in
repz
lcall
in
daa
sub
ss
fcmovnu
sbb
out
call
pop
cli
cmp
jbe
mov
je
lcall
out
inc
in
imul
jbe
rdpmc
and
xchg
pop
daa
call
in
shrl
jnp
push
mov
push
arpl
sub
push
imul
push
xchg
pop
dec
mov
fnstenv
out
dec
inc
int
lods
aad
leave
adc
and
push
push
sbb
push
lds
inc
movsb
clc
mov
iret
add
xchg
cmp
pop
cmp
cltd
mov
jbe
notb
pop
push
addl
hlt
sbbb
jnp
jne
loope
add
sbb
xchg
and
pop
ds
mov
inc
gs
pop
xchg
xchg
pmaddwd
inc
ja
dec
inc
mov
lcall
sub
jns
in
cs
jne
push
xchg
mov
movsb
mov
adc
jae
push
mov
xchg
xchg
insb
jp
fimuls
shlb
xchg
ret
in
fcmovnu
mov
outsb
jae
mov
add
xchg
cmp
cmpsl
and
lahf
data16
xchg
mov
outsb
movsb
jle
inc
push
jge
test
aad
pop
iret
mov
xor
loope
fs
mov
cltd
sahf
jne
pop
imul
jg
xor
xor
in
sub
xor
jnp
aaa
push
push
fistpll
xchg
xor
sbb
movsl
pop
xchg
arpl
test
mov
inc
push
sub
push
adc
and
add
inc
iret
shll
jp
inc
stos
sahf
dec
je
fstps
lods
out
and
mov
pop
mov
mov
mov
out
je
or
push
xor
dec
xor
add
sub
cwtl
movsb
adc
out
in
and
dec
adc
jge
sub
cmp
lcall
fcomi
and
push
push
mov
push
lea
dec
divl
in
aas
je
and
pop
xchg
ja
insb
adc
stos
mov
ja
xchg
sub
divb
add
mov
lahf
push
push
pushf
or
out
dec
inc
inc
adc
xor
lods
jne
sahf
call
pop
enter
and
dec
movsb
cmp
ds
cmp
call
push
sbb
arpl
fs
xchg
pop
or
sbb
xchg
jae
add
xor
xchg
orl
sub
in
mov
dec
or
mov
outsl
xor
sbb
lret
fsubr
xchg
push
lret
dec
jne
js
nop
push
fs
mov
es
movsl
cmpsl
pop
repz
bound
rorl
mov
fucomp
jg
cmpsl
das
mov
loope
mov
or
mov
aas
clc
inc
test
push
mov
push
push
cld
aad
sar
adc
or
sbb
mov
out
adc
fdivs
push
out
ret
inc
imul
dec
adc
add
mov
or
iret
cmp
pop
ret
imul
xchg
jmp
push
sahf
push
les
out
fcoml
lcall
cmp
inc
jmp
outsb
sbb
and
std
pop
ja
cmpsb
sarl
and
inc
test
dec
fs
add
movsl
xchg
jo
mov
mov
cmp
sahf
mov
std
and
mov
mov
test
lret
int3
sub
push
les
sub
in
insl
mov
mov
adc
out
lahf
jns
or
mov
xor
dec
gs
das
fwait
sbb
add
add
imul
ret
push
and
mov
jbe
es
outsl
dec
xor
orl
ficompl
popa
xor
enter
mov
mov
mov
mov
jmp
icebp
dec
inc
push
inc
dec
gs
icebp
cltd
icebp
loop
lahf
js
push
inc
jecxz
psllw
gs
jb
enter
cmp
mov
pop
mov
mov
cmp
callw
xchg
adc
and
xor
pop
pusha
mov
test
ret
and
idivl
pop
mov
push
mov
es
xchg
dec
lcall
in
fnsave
inc
out
and
cmova
pop
stos
xor
incb
push
push
mov
loop
jae
mov
mov
adc
rcrb
lret
fmulp
iret
inc
ljmp
push
fsubr
fisubs
lcall
popf
into
fs
lret
add
cmc
jbe
hlt
add
ds
je
shl
pop
rcrb
stos
ljmp
add
jae
clc
loope
mov
pop
test
out
fisubl
cmpl
icebp
mov
add
jge
or
jno
popa
int
fldl
rcrl
loope
adc
insl
xor
or
jno
popa
int
fldl
in
xor
mov
lods
icebp
mov
add
jge
or
jno
popa
stc
xchg
jmp
mov
sub
adc
push
jp
xchg
mov
out
popa
jno
inc
ficoms
insl
into
push
jmp
sti
adc
jle
dec
rcrl
mov
push
xchg
out
popa
jno
inc
ficoms
and
imul
pop
shrl
int
mov
sbbl
jno
inc
ficoms
and
adc
jle
cmp
cmc
pop
out
out
jo
cmpsl
adc
cmp
add
lcall
or
mov
xor
cmp
cmp
xchg
push
push
ret
aam
mov
mov
loopne
push
popa
jne
push
sub
lock
inc
outsb
mov
jl
cwtl
xor
mov
sub
imul
jo
imul
outsb
push
outsb
push
ret
inc
js
shlb
sbb
adc
out
adc
imul
pop
xlat
aad
repnz
out
orl
cld
mov
adc
jg
jno
adc
mov
adc
jbe
mov
jno
inc
ficoms
and
adc
jle
dec
rcrl
mov
push
clc
test
xchg
xor
inc
negl
inc
filds
cwtl
jp
sub
loop
aam
clc
dec
fucomip
add
adc
and
push
call
push
jl
setb
mov
iret
push
jl
push
incb
xor
xor
movsbl
mov
sahf
adc
jle
dec
rcrl
mov
push
xchg
out
popa
jno
inc
ficoms
and
adc
jle
dec
rcrl
mov
push
xchg
out
popa
pop
sbb
cli
xchg
je
adc
aaa
mov
push
orl
iret
cmp
sub
fcomi
add
mov
mov
enter
subl
adc
xchg
andb
jp
sub
outsb
ss
xchg
push
stos
mov
add
roll
pushf
scas
scas
fs
push
ret
mov
dec
mov
ret
inc
lods
es
sti
push
push
lods
mov
jno
outsb
sub
out
ljmp
call
mov
sti
cmp
xchg
pop
test
aas
ret
lahf
mov
add
push
adc
mov
shl
fwait
es
mov
gs
arpl
dec
pop
and
xor
int
hlt
inc
xor
xchg
aas
sbb
arpl
out
insl
ret
jo
pop
mov
mov
lods
inc
rcrl
movsb
adc
adc
fwait
sub
mov
mov
aad
or
push
lcall
rclb
sbb
nop
mov
add
push
arpl
std
in
aad
dec
iret
xchg
push
lods
test
mov
jno
enter
sub
sub
dec
scas
inc
jb
xor
ja
insb
test
incl
cld
out
xchg
mov
inc
das
shl
push
je
mov
xchg
push
or
aas
sysenter
insl
into
sahf
mov
pusha
cmp
das
sub
adc
xor
mov
das
cmc
lret
out
cmp
sti
push
add
cmp
lods
cmp
xlat
dec
outsl
adc
xor
loope
cld
mov
and
push
jecxz
je
rclb
adc
fildll
bound
jmp
std
int
cmpsb
add
cmpsb
and
jbe
dec
repz
arpl
jp
xor
push
int
add
mov
adc
pop
dec
loope
std
idivb
sub
xchg
jmp
rolb
dec
xor
sub
mov
ja
inc
fisttps
cltd
dec
cltd
test
pop
pop
mov
inc
stc
fisubrs
push
xor
mov
and
cmpsb
jo
sub
je
les
test
pop
push
and
mov
push
in
adc
push
loopne
jl
jle
sbb
push
test
pop
dec
loope
xchg
dec
pushf
lods
cmp
repz
sub
aas
dec
lcall
shlb
cmp
inc
mov
out
dec
cwtl
jae
or
cmpsl
rolb
aad
sbb
stc
lret
mov
or
cmpsb
inc
test
mov
mov
xor
or
cmp
test
sub
adc
movsl
adc
out
mov
dec
xchg
lret
ret
testb
rorb
insb
sbb
lea
insb
les
sti
mov
mov
cmc
incl
pop
sarb
dec
dec
adc
cwtl
popa
repnz
movsb
popa
shll
into
movsb
lsl
mov
push
into
icebp
cmp
in
rorl
cmp
int
sbb
into
push
out
mov
push
daa
mov
es
rclb
mov
enter
clc
out
mov
iret
push
int
pop
aam
mov
lahf
call
mov
adc
orl
jg
mov
pop
pop
stos
loope
push
jo
aaa
loop
stos
adc
add
out
push
aaa
mov
mov
add
xor
lret
mov
in
jb
dec
add
negl
aas
pushf
mov
in
cmp
pop
push
and
xchg
pop
repnz
fs
pop
adc
std
and
push
adc
fisttpl
in
cmp
rclb
sub
das
ret
cvttps2pi
cmp
inc
sbb
ret
lods
jle
add
aam
fmuls
jmp
enter
fcmovbe
xchg
sub
push
jae
jg
mov
and
pop
neg
mov
shll
push
jne
arpl
jmp
cmp
cmp
lock
insb
or
xchg
fisubrl
xor
cmp
lods
es
mov
out
sbb
mov
daa
xchg
sub
bswap
fnstenv
xlat
in
fcomps
stos
fwait
push
popf
ljmp
push
or
mov
or
pop
xchg
xor
and
cmpl
icebp
sbb
lret
addb
push
inc
add
dec
inc
and
adc
pop
dec
jge
xor
movsb
stos
dec
cmp
insb
sbb
adc
js
pop
jnp
shlb
mov
sbb
scas
push
lcall
mov
repz
sti
push
ret
pop
sbb
call
in
push
xchg
xor
mov
negl
aaa
pop
sub
xchg
dec
mov
inc
lret
xchg
jno
test
imul
imul
pop
push
dec
fcomi
xchg
xor
nop
vprotq
inc
les
sbb
cmpsl
call
cmpsb
repz
jge
pop
test
jp
xchg
jge
or
xchg
push
sbb
shlb
dec
add
jne
in
pop
inc
les
push
pop
scas
push
dec
xchg
add
fists
and
pop
or
lds
je
imul
xchg
push
inc
inc
aaa
scas
lea
push
pop
popa
outsb
and
pop
fadds
pusha
mov
mov
inc
add
je
fistl
pusha
mov
push
cmp
add
and
pop
cld
mov
mov
push
addr16
faddl
fdivrs
xchg
sahf
sub
jge
cmp
sbb
stos
roll
pop
mov
add
jns
xor
adc
mov
add
lcall
adcl
or
inc
bound
aad
lock
mov
pop
fldl
dec
in
xor
mov
mov
inc
xorl
mov
sbb
and
jne
sti
lea
xor
fmuls
add
mov
mov
mov
std
ds
idivb
ja
add
sub
iret
jmp
test
pop
inc
lods
jecxz
mov
out
ret
pop
loopne
adc
rol
pop
adc
sub
xlat
stc
jp
in
out
mov
lods
mov
pop
jo
dec
lret
lret
xchg
sbb
jb
pop
int3
dec
sbb
imul
loope
mov
and
push
arpl
dec
sbb
xor
mov
inc
xor
stc
pop
push
sbb
xor
mov
xor
inc
leave
stc
test
xchg
mov
imul
cmp
jbe
sub
mov
dec
mov
mov
jnp
fbstp
jo
cmc
std
adc
aam
mov
cwtl
jnp
ds
cmp
aaa
mov
enter
and
aaa
adc
in
adc
mov
call
cmp
enter
out
dec
js
cwtl
lock
dec
add
std
push
xchg
dec
aas
sub
jp
pop
cmp
adc
sbb
or
xor
lcall
pop
jno
push
inc
add
sub
fs
fisttpll
and
mov
loope
adc
jmp
scas
push
test
cwtl
cmp
sub
lret
adc
testl
out
jmp
xor
jno
aaa
pop
cmp
pop
imul
cmp
jnp
xor
mov
aad
fwait
sbb
mov
addr16
std
leave
xlat
pop
in
das
int3
ja
add
inc
cwtl
sbb
mov
outsb
cmpsl
mov
push
jnp
call
imul
jae
push
sti
push
push
hlt
lret
pushw
rep
fidivl
loop
xor
lea
icebp
ss
adc
arpl
add
test
testb
mov
sub
and
int3
filds
iret
push
dec
dec
jae
shll
inc
js
fst
xor
jno
jns
stos
ja
jge
xchg
add
mov
imul
jbe
cmp
mov
mov
push
sti
or
js
sarb
les
js
mov
inc
lea
out
data16
fisubrs
push
cli
adc
orb
and
mov
xchg
mov
xor
outsb
test
fisttpll
mov
xchg
mov
fcmove
stos
fld
imul
mov
add
cmc
outsb
stos
mov
pushf
push
jle
sub
shrl
mov
adc
dec
add
xchg
mov
sbb
xchg
ljmp
adc
test
push
je
fisttpll
xchg
cmc
lahf
mov
mov
push
adc
mov
mov
andb
lcall
in
adc
push
push
pop
loope
into
aad
stos
mov
cmp
lret
xchg
mov
data16
or
add
and
ds
xchg
lds
adc
sub
jae
push
push
lret
mov
dec
jle
push
test
fcom
in
sbbl
ror
call
js
test
clc
std
jo
push
cmp
shrb
or
xor
jae
movsb
mov
xor
push
stos
mov
lcall
ljmp
test
ljmp
jb
dec
mov
inc
pop
push
xor
mov
mov
dec
and
adcb
stos
pop
cs
mov
dec
scas
add
ffree
and
test
fsubrl
push
cli
imul
inc
xor
pop
xor
add
jne
jne
leave
mov
push
adc
sbbb
mov
add
leave
jnp
inc
stc
fisubl
xchg
or
mov
push
lds
jg
mov
inc
dec
arpl
jg
mov
imul
mov
xor
roll
leave
sbb
adc
or
cmp
pushf
adc
xor
sub
cmp
push
jl
inc
clc
xlat
jne
or
data16
addl
notl
mov
movsl
inc
mov
sub
pushf
mov
push
cs
or
or
jb
xor
jo
clc
mov
imul
mov
mov
rclb
notl
mov
dec
incl
push
lret
ja
xor
dec
sahf
lcall
dec
add
sub
sub
fildll
add
notl
movsb
aad
inc
sbb
ret
jns
or
dec
inc
sarl
jp
lock
push
aas
test
sbb
dec
shl
rcll
push
xchg
test
in
cmp
xchg
pushf
aas
fwait
out
jb
out
fyl2x
adc
lret
aas
popa
pop
out
jbe
pop
es
mov
filds
mov
inc
inc
pop
push
stc
inc
outsl
daa
and
iret
mov
orl
fs
and
adc
push
or
adc
adc
xor
cmp
pop
int3
insl
stos
jmp
jae
xor
jmp
xor
movsl
rcrl
jae
mov
bound
or
iret
cmc
sarl
or
ret
arpl
jne
pcmpgtb
or
jae
test
sbb
iret
sub
leave
hlt
lret
cmpsb
adc
mov
pusha
stos
inc
xchg
add
dec
std
xchg
adc
sub
and
xlat
sahf
leave
scas
push
dec
lret
shl
cmp
test
inc
xchg
pop
sub
movsb
roll
lods
sub
mov
int
popf
lods
mov
fidivs
daa
hlt
xchg
cmp
or
xchg
xor
mov
std
xchg
sbb
cmp
call
shll
stc
sarb
dec
cmp
icebp
std
pop
in
add
ja
in
mov
out
ret
inc
jno
das
jmp
xchg
shl
push
mov
add
push
mov
sbb
jmp
xchg
push
sahf
out
lahf
xchg
ja
addl
mov
std
movsb
cmp
icebp
in
add
loop
fdivs
fs
sahf
sbb
pop
sub
sahf
stos
dec
aam
iret
add
outsl
insb
rcrl
xor
inc
call
jge
cmpb
add
ljmp
ror
jae
push
jl
aam
sbb
repz
ja
or
push
call
push
inc
mov
imul
inc
dec
subb
mov
rcrb
mov
inc
pop
sarl
jge
lods
add
xchg
es
add
cli
fcompl
in
push
xor
std
sub
mov
into
push
inc
push
insl
inc
pushf
in
sbb
cmp
sbb
outsb
sti
adc
mov
lock
fnstenv
mov
mov
popf
push
rcrl
js
jmp
dec
repz
pop
rolb
popa
and
adc
ffree
mov
rcll
mov
inc
cwtl
js
jns
shll
adc
insl
sarl
and
std
insl
mov
pop
ja
push
mov
sub
hlt
xchg
lahf
or
call
sbb
jmp
sub
movsl
adc
fsts
cmc
rolb
xor
and
idivb
movsb
jo
mov
or
clc
ljmp
push
and
sub
clc
mov
sub
in
cwtl
adc
pop
loope
rorb
push
add
sub
mov
cwtl
mov
jo
or
je
mov
jg
call
pusha
mov
cli
jg
jp
jl
cmp
adc
icebp
enter
aad
and
out
inc
insb
pop
adc
cmp
dec
cmp
inc
fsub
adc
inc
jbe
dec
jno
sbb
std
in
adc
and
sbb
dec
cmc
ss
xchg
ret
xchg
loopne
mov
mov
or
sbb
push
das
push
sbb
in
fistps
das
js
mov
imul
push
mov
out
loope
pushf
ret
addr16
ljmp
fucomi
inc
adc
xor
addb
aad
fwait
add
call
push
pop
dec
or
xchg
add
iret
pop
mov
std
iret
pop
std
shll
notb
aam
pop
mov
lods
mov
mov
jb
rorl
decl
test
stos
dec
fmuls
cmc
pop
pushf
scas
push
icebp
hlt
jbe
push
imul
pop
jecxz
fmuls
sub
xor
cmc
push
movl
aas
add
jg
movb
ret
push
push
inc
inc
pop
inc
loopne
inc
and
int
sub
std
adc
lock
sub
dec
ds
out
jo
pop
push
jns
adc
cmp
sbb
jp
push
stos
fwait
push
cmpsb
sar
aas
jl
jg
ret
mov
cs
popf
lret
fisttps
pop
data16
lds
in
jmp
adc
ret
xchg
imul
data16
xor
cld
call
mov
inc
or
lods
mov
dec
lret
cwtl
ret
mov
or
lsl
jns
test
sbb
xchg
inc
pusha
mov
push
pusha
adc
adc
jo
pop
mov
mov
xchg
xor
out
mov
add
or
nop
jg
pxor
fs
cli
imul
aaa
sti
push
enter
inc
fnstenv
jae
rcll
iret
sbb
insb
xchg
into
sti
mov
lds
mov
xchg
jl
jecxz
sub
mov
ds
push
jo
push
push
mov
pop
add
nop
mov
and
outsl
scas
mov
dec
cmc
into
jp
loope
ds
xor
and
shll
popf
movb
push
adc
out
fs
arpl
pop
cli
gs
mov
push
or
xchg
shlb
aad
repz
mov
xlat
pop
dec
jle
loope
cmp
scas
stos
daa
stos
adcl
sbb
pop
mov
clc
jl
fiadds
daa
cltd
in
pop
lret
cmp
sbb
add
sub
pop
loop
cli
stc
jo
cltd
sbb
inc
stos
fidivrl
mov
mov
mov
shrb
mov
mov
mov
mov
sub
xorl
insl
out
pop
iret
sbb
clc
sub
push
cwtl
sbb
jno
imul
pop
add
adc
rorb
push
mov
and
or
cld
out
es
mov
and
movsb
dec
push
iret
jae
cli
mov
in
js
push
xchg
lds
mov
and
cmc
cwtl
and
out
mov
xor
jg
adc
sbb
ret
gs
push
inc
lods
mov
iret
mov
xchg
mov
popf
or
or
jl,pt
mov
aad
bnd
repnz
jnp
movsl
rcll
push
xlat
xchg
sub
dec
lcall
sub
pop
into
sarb
dec
shl
lea
lock
les
repz
pop
imul
es
test
call
out
and
jle
xchg
lods
cmp
jecxz
arpl
aad
jnp
arpl
jl
and
sub
mulb
aad
fadds
sti
cmpsb
dec
test
sahf
mov
cmp
in
xchg
cmp
add
out
or
notb
mov
and
push
ficoml
popf
push
out
jmp
movsb
push
inc
pop
mov
sbb
mov
in
adc
pop
lahf
sbb
jp
popf
imul
daa
inc
dec
in
ljmp
adc
sub
lcall
sahf
mov
clc
int
xchg
add
rolb
mov
jne
jbe
jns
fcmovnb
in
aas
add
test
sbb
clts
add
out
and
test
ja
fmul
ljmp
push
stos
nop
mov
inc
rolb
inc
sbb
fisttps
test
jbe
push
lcall
les
ret
xchg
mov
inc
jnp
or
rol
fildl
pop
shrl
or
add
push
cli
adc
adc
or
xchg
sub
mov
mov
pop
sbb
sub
hlt
test
inc
adc
mov
fsubrl
cwtl
xor
jp
mov
or
dec
mov
jo
and
in
xor
leave
or
data16
sahf
jge
cmc
call
rcll
es
xchg
and
arpl
and
dec
push
xchg
xchg
ljmp
sahf
bound
cmpsl
lea
outsb
xlat
mov
ljmp
jle
adc
xlat
xchg
fisubrs
rolb
insl
mov
sub
and
subb
dec
daa
fcmovbe
sbbb
lods
dec
jno
shrl
adc
xchg
sbb
mov
mull
out
inc
mov
je
mov
jp
xchg
fstpl
mov
dec
pop
sub
xchg
in
ja
loop
cmpsl
dec
cmp
push
call
cwtl
scas
leave
pop
subl
test
xchg
sbb
push
and
ss
push
clc
cmp
push
jno
bound
push
movsb
xchg
jno
repz
jge
fidivrl
popa
mov
adc
ss
mov
enter
mov
aam
mov
pop
ss
mov
sbb
ret
out
std
out
ja
jmp
pop
insb
notl
push
push
sti
xchg
and
lret
jl
ret
fbstp
movsl
jg
xchg
mov
inc
jle
pusha
jae
into
out
inc
jmp
push
stc
mov
lret
mov
mov
int
scas
popf
mov
pop
cmc
add
xor
mov
fldcw
ret
jbe
and
and
cmpsb
mov
dec
dec
adc
shrb
sub
or
jnp
dec
insb
stos
push
xchg
mov
mov
and
and
push
add
lret
decl
mov
out
inc
sbb
mov
and
sbb
fstpt
cmp
pop
push
fstp
repz
jnp
xchg
sbb
cmc
push
dec
pop
xchg
clc
movsb
sub
int3
icebp
mov
neg
mov
addr16
ficoms
test
inc
mov
test
xlat
cmpsl
mov
lahf
mov
mov
shll
or
in
ret
movsb
in
cmc
scas
or
xchg
mov
fcmovnu
mov
jp
add
lods
insl
pop
xchg
sub
xor
xchg
lcall
ficomps
into
popf
es
ffree
outsl
out
and
cmp
mov
shll
push
jg
lock
inc
add
imul
push
fsubs
in
mov
mov
xchg
dec
loope
or
mov
xor
sar
fimull
push
jo
dec
xchg
test
test
sbb
shll
lods
jo
pusha
int
pusha
push
fiaddl
ficoms
jo
jl
xchg
mov
mov
nop
int
fisubs
stos
lods
jnp
andb
sbb
stos
mov
std
adc
and
enter
jbe
inc
add
aas
hlt
sbb
mov
or
cmpb
dec
les
mov
dec
sbb
inc
pop
andl
lods
pusha
imul
mov
fnstenv
sub
mov
push
mov
xchg
jne
les
ret
std
sbb
inc
ficoms
and
adc
jle
dec
rcrl
mov
push
xchg
out
popa
jno
inc
ficoms
and
adc
jle
dec
rcrl
mov
push
xchg
out
popa
jno
inc
ficoms
and
adc
jle
dec
rcrl
mov
push
xchg
out
popa
jno
inc
ficoms
and
adc
jle
in
pop
cmpsb
pop
sub
outsb
aam
fdivp
into
in
sub
jmp
jg
outsb
inc
pop
pusha
dec
je
adc
mov
xor
and
aam
fdivp
into
in
xchg
scas
xchg
sahf
mov
shrb
outsb
inc
pop
je
fs
push
push
xor
and
int
ffree
in
cld
cmpsl
lea
mov
add
inc
jo
inc
pop
dec
xchg
cwtl
xorl
push
dec
dec
clc
mov
addr16
das
pop
lret
aas
pop
jg
adc
std
jb
xchg
in
ja
dec
sbb
stos
inc
mov
outsb
je
pop
push
icebp
faddl
dec
adc
jge
sub
sub
pushw
ret
fwait
ds
mov
decl
ljmp
rorb
imul
adcl
or
nop
inc
push
mov
sarl
mov
push
cs
addr16
mov
cltd
or
outsb
inc
push
lods
and
xchg
cmpl
fwait
jnp
jge
push
ss
and
ret
not
fsubrp
into
in
xchg
mov
mov
inc
insl
push
jge
or
sbb
cs
and
mov
xchg
enter
mov
jle
add
sub
jno,pt
push
insb
pop
arpl
mov
mov
lret
fstl
pop
adc
ds
add
push
push
fwait
aam
les
cmpsl
scas
test
push
outsb
inc
pop
je
fs
add
xor
and
aam
fdivp
into
in
xchg
scas
test
push
outsb
inc
pop
je
fs
add
xor
and
aam
xlat
popa
jae
out
pop
int3
sbb
cs
push
jns
add
mov
std
movsb
stos
addb
push
insl
sub
mov
scas
clc
xor
out
into
test
aas
out
bound
in
pop
or
cmp
dec
in
popf
push
jmp
dec
pop
xlat
mov
aas
xor
jne
shlb
adc
mull
adc
enter
sub
push
sti
leave
arpl
mov
orl
sub
movsb
xchg
in
stos
sub
lcall
or
sahf
adc
sbb
insb
loope
fildl
cltd
shl
xchg
xor
ljmp
mov
push
rolb
fisubs
cmp
dec
out
jge
sbbl
in
pop
sub
loope
inc
adc
int3
or
hlt
xorb
cmp
push
dec
notrack
cmpsl
lahf
push
je
repnz
int
jle
int3
inc
mov
flds
dec
loope
lcall
or
mov
xchg
pop
outsb
mov
push
xchg
add
test
in
xchg
inc
push
sub
insb
pop
lret
call
push
jno
xchg
xor
mov
jmp
and
in
adcl
push
dec
adc
arpl
jne
in
xchg
bound
push
mov
in
push
pop
pop
movsl
sbbl
mov
ffree
loopne
hlt
xor
dec
jno
mov
or
sbb
iret
push
mov
je
xchg
mov
rol
pop
sbb
fldt
cmp
mov
lock
fidivs
clc
data16
scas
rcll
pop
mov
iret
push
sbb
pop
bound
nop
rcr
lock
popa
test
or
popf
mov
cmp
aaa
mov
stc
mov
pusha
xchg
out
mov
sti
push
xchg
lds
aad
jle
jmp
dec
pop
or
rorb
sbb
aam
les
sbb
out
and
pop
push
mov
adc
xor
dec
cmpsl
addr16
fldt
and
mov
cld
push
icebp
or
int
movsb
inc
xor
pushf
mov
das
outsl
jns
cmp
cli
or
loop
andl
sub
sub
and
pop
andl
test
xchg
jns
add
popf
jge
inc
add
jo
push
out
stos
cld
int
call
flds
dec
mov
dec
or
sub
mov
cmovp
dec
xchg
iret
adc
rorl
pop
or
push
scas
cli
outsb
sbb
jmp
push
iret
div
dec
sbb
pop
cmp
lock
adc
adc
repnz
xchg
lret
xor
jle
sbb
push
stos
mov
shl
xor
inc
int
std
rcl
loop
push
pop
int
mov
jecxz
xchg
movsb
je
jo
or
jecxz
insb
inc
hlt
cmp
pop
js
sbb
cmp
ss
push
xor
dec
imul
xchg
lret
cmpb
testl
lea
ds
push
addr16
bound
adc
pop
andb
testb
enter
xor
pop
ret
ja
inc
dec
imul
jecxz
xor
es
jle
jo
xor
fimull
mov
pop
sbb
cmp
mov
and
push
push
cld
and
shrl
lods
inc
push
ljmp
aas
imul
test
test
sbb
loopne
sarl
xor
sbb
mov
adc
out
inc
loope
lea
and
repz
invd
and
mov
dec
popa
xor
push
inc
icebp
push
push
lahf
scas
neg
clc
jnp,pt
movsl
push
out
movsb
outsb
jg
mov
mov
pop
jae
aaa
int3
jae
dec
cmc
outsb
clc
gs
lea
mov
pop
sub
aas
dec
and
mov
mov
mov
insl
xlat
push
or
cmpsb
pushl
xchg
jmp
cmp
cmpsb
dec
std
into
mov
add
cli
fldl
sub
sbb
sub
pop
in
lret
scas
mov
out
or
mov
jmp
dec
lret
pop
in
icebp
mov
pop
faddl
mov
into
add
cmc
inc
loopne
pop
mov
adc
push
iret
addb
pop
xchg
pushf
jne
enter
xor
inc
cmp
cld
shl
adc
mov
ds
add
xchg
shrl
loopne
in
arpl
sub
jne
cmpsb
out
ljmp
mov
pop
adc
xchg
xor
fwait
stos
mov
dec
sub
aam
aaa
mov
bt
xorl
xor
arpl
mov
mov
jp
push
adc
and
cmp
or
or
inc
adc
xlat
test
gs
sub
jnp
pop
mov
cwtl
jae
imul
ds
push
pop
mov
fwait
dec
push
push
add
sub
mov
shr
mov
insl
sbb
adc
push
imull
sbb
adc
pushf
cmpb
jle
mul
adc
lods
jne
cwtl
sbb
lods
cmpsl
pop
xor
div
insb
repz
pop
sbb
pop
mov
mov
addr16
pop
xchg
or
sbb
mov
xchg
mov
pushf
jnp
pop
frstor
jg
cmp
sub
sub
mov
cmpsb
js
ret
lock
xlat
pop
pop
mov
pop
xchg
das
or
lods
sub
in
mov
pushf
dec
jbe
adc
jbe
cli
movsb
mov
cmp
dec
lretw
sahf
lret
jo
jne
lock
fiaddl
jno
mov
mov
bound
push
adc
cmc
sub
pop
fsubrl
sub
sub
pop
pop
or
popf
pop
fwait
insb
xchg
push
and
sbb
in
cltd
adc
iret
lret
sarb
xchg
xchg
scas
lahf
or
cmp
mov
das
mov
jb
pushf
push
inc
pop
iret
mov
aas
pusha
outsb
cs
sbb
mov
mov
jno
int
dec
lea
stos
mov
stos
pusha
push
pop
inc
in
out
add
lds
mov
clc
daa
fidivs
or
test
out
cmpsb
pop
mov
and
mov
and
push
pop
insl
mov
add
adc
push
mov
push
fs
sbb
jp
push
fcmovne
push
pop
add
and
popa
add
or
mov
push
push
rol
in
lret
out
mov
jmp
iret
out
insl
inc
and
sub
loopne
cmp
sti
bound
inc
pop
lret
sbb
je
roll
addr16
shr
pop
jl
push
sub
aaa
dec
sbb
mov
data16
and
rcrb
pop
out
rclb
int
mov
arpl
mov
lret
shl
ret
in
cwtl
shll
inc
xor
jecxz
mov
mov
mov
fmull
add
mov
or
fcoml
mov
andl
sahf
pop
inc
adc
jge
popa
test
xchg
enter
aam
int
jae
test
sbb
sub
or
dec
dec
fsubrs
jmp
pop
jo
and
gs
jle
rcl
dec
insl
out
mov
or
dec
stos
jb
inc
mov
clts
fisttpl
call
leave
sbb
test
icebp
sahf
in
in
inc
sub
mov
dec
shlb
add
loopne
inc
in
mov
mov
mov
lret
iret
mov
sti
jle
cmpsb
ret
scas
and
imul
loopne
cwtl
xor
popa
add
pop
int3
sub
jecxz
stc
mov
shll
push
out
mov
sub
mov
jns
in
mov
sahf
xchg
lret
mov
mov
fs
add
pop
and
fstpt
shrb
sti
sub
test
cmpl
mov
cmp
iret
dec
ret
ss
add
lret
cmp
dec
push
dec
dec
mov
int3
ret
cmp
dec
out
jge
mov
into
in
xor
nop
insb
mov
push
aam
adc
push
jnp
movsb
inc
outsl
fldcw
or
adc
frstor
test
xchg
movsl
repnz
xchg
xor
popf
sub
das
pop
jbe
inc
mov
mov
mov
filds
ds
cltd
cmp
cmpb
rcll
inc
insb
jns
add
adc
push
adc
and
pop
orb
cwtl
in
adc
mov
mov
push
mov
xchg
jg
xchg
mov
mov
inc
je
jp
inc
pop
popf
cld
inc
cmp
cltd
enter
push
push
pop
ja
inc
pop
xchg
dec
sti
stos
mov
xor
mov
imul
push
xchg
jne
sbb
imull
xchg
inc
out
sub
xlat
push
and
in
in
cmp
ds
pop
inc
sub
mov
test
rorb
lahf
clc
mov
out
push
cld
ja
push
clc
scas
jns
mov
insl
mull
icebp
xchg
add
dec
jle
xchg
movsl
pop
stos
sbb
leave
cmpsl
lcall
out
ret
js
insb
lret
aaa
test
xlat
lahf
imull
addr16
xor
fadds
xchg
add
out
call
aad
orb
and
xchg
das
xchg
add
jg
cli
xor
push
fadds
inc
push
jmp
jle
adc
sub
dec
in
and
push
cmpb
or
mov
push
or
scas
sbb
mul
adc
movsb
loop
les
adc
cmp
sti
je
lret
sahf
rol
daa
push
push
jbe
cmc
stos
xchg
pop
sahf
sbb
fists
inc
jae
xlat
flds
lret
mov
and
orb
lret
arpl
sets
test
arpl
adc
push
gs
test
jmp
dec
leave
cmpsb
adc
js
or
pop
push
cmp
xorl
es
mov
imul
dec
and
lock
daa
in
stc
cmp
xchg
ljmp
fidivs
mov
dec
inc
pop
pop
std
mov
or
ret
repz
cmp
addr16
inc
xlat
mov
fcompl
lret
lret
int
clc
stc
add
loopne
repnz
clc
shl
test
sti
and
sbb
push
mov
ss
aas
jl
push
xor
les
gs
lret
adc
jbe
jl
lret
xor
outsb
pusha
cmp
push
je
jecxz
adc
jle
dec
shrl
scas
lahf
dec
sbb
cmp
ret
bound
xorb
jecxz
cld
jg
push
push
aaa
add
lahf
pop
inc
xor
dec
fsts
flds
in
subb
scas
bound
jmp
and
jo
pop
das
nop
cmp
add
add
dec
adc
or
dec
pop
jl
int
gs
mov
shrb
sbb
in
push
adc
repz
aam
shlb
xchg
and
loop
xor
mov
jo
pop
xchg
lcall
roll
arpl
fs
ljmp
push
jno
push
sahf
adc
std
lret
jbe
jg
dec
in
scas
pushf
shll
xlat
push
test
mov
xchg
in
pop
adc
outsl
jmp
inc
lret
arpl
test
shll
bound
inc
hlt
sahf
iret
mov
popf
loop
xlat
cltd
or
add
or
inc
and
xor
mov
call
cmp
push
pop
enter
cmp
xchg
and
test
outsb
xchg
cmp
fidivs
add
dec
sbb
fstpl
cmp
in
int3
push
mov
xchg
inc
movsb
aaa
dec
add
lods
insb
mov
test
push
sub
popa
and
aam
jle
dec
sahf
lock
mov
dec
repnz
lahf
mov
xchg
add
lods
clc
ljmp
xchg
xor
cli
in
push
pop
aaa
xor
jmp
mov
jecxz
lods
out
mov
fwait
add
pop
cmc
into
push
pop
daa
pop
ret
xchg
out
xor
xchg
cld
jnp
pop
cld
mov
sbb
mov
fnstcw
push
subps
adc
dec
rcr
mov
xor
addb
enter
jmp
push
data16
cs
les
popf
mov
pop
cli
addr16
pushf
mov
ds
and
xchg
test
dec
or
cli
inc
jns
int
call
inc
mov
push
out
pushf
xor
and
mov
xor
mov
mov
xchg
int
faddl
in
sbb
push
xchg
inc
les
ret
or
jnp
pop
in
pop
jge
cs
pop
test
aad
pushf
and
pop
fwait
ss
out
jbe
clc
fildll
test
push
or
int
mov
pop
js
frstpm(287
inc
pop
in
out
imul
std
mov
mov
fnsave
lcall
push
cmpsl
jno
adc
push
cwtl
clc
jne
jnp
jge
stc
cli
adc
xchg
and
jp
stos
adc
mov
push
ss
pop
test
aas
xlat
js
push
cmp
iret
push
ret
jl
icebp
or
pop
pop
movsl
jle
arpl
add
fildll
mov
ret
sahf
cmp
and
push
ret
iret
mov
fcomi
decb
dec
ss
andb
nop
inc
jo
ss
add
faddp
jecxz
jecxz
test
into
in
roll
lret
ja
cld
or
arpl
rolb
and
stc
push
enter
std
fsts
fiaddl
shlb
bound
pop
and
ret
stos
das
lahf
xchg
insb
add
sbb
scas
push
mov
pop
fcomp
shrl
sub
and
cld
cmpsb
into
ficompl
mov
inc
loop
and
lods
mov
imul
inc
rorb
jmp
imul
push
rclb
or
mov
into
decb
push
push
pop
and
jbe
fwait
mov
cmp
jbe
push
test
and
cld
xchg
xchg
sbb
stos
scas
push
fimull
xor
dec
test
inc
je
inc
cmp
xor
mov
mov
sbb
xchg
mov
adc
xchg
mov
iret
into
dec
or
js
outsl
add
repnz
in
es
dec
xchg
pop
add
push
cmpsb
out
dec
ror
push
clc
dec
sub
xchg
or
jns
and
mov
push
xchg
outsb
je
xchg
sub
movsl
mov
pop
fimuls
xor
pop
pop
mov
movsb
stc
add
insl
into
or
es
outsl
lcall
xor
jo
xchg
ret
jo
xor
out
jmp
fabs
mov
and
xor
aaa
inc
pop
cmc
xor
jg
inc
rol
repz
jb
test
sbb
rcl
ljmp
sub
add
shll
pop
scas
inc
mov
clc
repz
cwtl
sbb
cmp
sub
pop
cld
test
hlt
mov
inc
dec
stos
in
jb
jge,pt
fwait
push
pop
mov
loope
jecxz
jg
pop
scas
ljmp
mov
ds
inc
mov
cwtl
out
mov
stos
lret
mov
adc
insb
aam
ret
or
repz
dec
push
test
gs
lret
dec
into
cmp
push
das
js
or
jle
fwait
icebp
xor
sahf
and
cmc
jo
iret
sub
push
pop
sbb
enter
das
fldenv
insl
stc
inc
inc
and
scas
into
daa
ljmp
cmp
shrl
subb
mov
inc
or
jno
int
adc
call
adc
aam
cmp
dec
push
in
lock
fdivs
sub
add
insb
mov
arpl
jb
or
mov
cmpsl
add
fwait
mov
ss
push
push
xchg
in
cs
push
in
sub
pop
stc
cmp
mov
loope
sub
ja
fdivrs
fnsave
xor
jle
mov
sub
push
and
pop
repnz
inc
lock
or
lret
hlt
mov
jbe
jmp
cmp
cmp
daa
mov
in
inc
mov
fs
sbb
ss
call
adc
outsb
test
ja
movsb
out
lahf
adc
push
sbb
mov
shll
pop
cmpsl
dec
jno
lret
insb
adc
pop
arpl
sbb
cltd
push
push
jae
das
push
jb
idivl
movsl
fsub
sub
imul
or
testl
shlb
stos
in
popf
push
std
dec
xchg
and
dec
loopne
ja
cld
add
push
aas
popf
ss
pop
clc
adc
bound
and
and
movsb
mov
movsb
icebp
push
stos
cmp
jg
mov
jle
push
or
test
pop
push
xchg
mov
pop
cld
add
inc
cmc
sahf
mov
int
jle
cli
xlat
add
inc
pushf
jge
or
dec
ja,pt
dec
sub
adc
sti
mov
notb
add
cmp
jns
fisubl
cmpsb
xor
and
xor
stos
add
mov
jne
jecxz
paddb
jl
jb
inc
mov
add
inc
mull
popf
xor
push
movb
push
or
fmuls
fsqrt
jle
hlt
js
arpl
sbb
lahf
leave
inc
xchg
pop
cs
cmp
mov
jb
push
ja
sbb
pop
jl
xchg
inc
rcr
add
pop
popf
fnstenv
sbb
jno
ja
loopne
jno
xor
add
ds
push
mov
and
jbe
icebp
xor
pop
inc
nop
js
adc
pushf
mov
and
fdivrs
loopne
dec
ljmp
adc
dec
inc
add
adc
lods
xchg
jnp
clc
je
sub
mov
sbb
sbb
clc
repnz
xor
addl
inc
add
push
push
mov
fstl
hlt
and
sbb
jo
aad
lret
push
jge
and
loope
jp
fs
mov
mov
cli
inc
dec
stc
dec
mov
cltd
ret
insl
gs
jmp
ret
push
dec
add
pop
jno
cmp
xchg
jo
dec
fs
sarl
mov
jmp
adc
inc
dec
sbb
xor
rcl
push
lret
push
push
inc
jae
loop
bound
test
dec
sahf
cwtl
incb
aaa
aaa
cmp
inc
es
or
pop
and
add
lahf
ljmp
mov
outsl
scas
outsl
mov
and
int3
loope
cmp
mov
addr16
and
lock
push
jge
in
lcall
mov
fwait
and
aaa
xor
idivl
adc
insb
negl
sub
mov
jne
test
ja
cwtl
je
in
ss
sbbb
sub
sub
mov
cmp
enter
pop
cmp
out
sbb
loop
icebp
out
adc
jmp
aaa
dec
in
arpl
mov
or
cmp
adc
pushf
mov
fsubl
imul
clc
cmpsl
cli
mov
add
and
xchg
lret
pop
adc
mov
push
stc
lea
stos
push
adc
stos
aas
cmc
cld
data16
cmpsb
insb
push
movsb
xchg
lods
add
sbb
or
arpl
repz
mov
outsl
pop
xadd
pop
sbb
mov
jecxz
xor
repnz
rolb
sub
cmc
mov
pop
arpl
js
pop
jp
adc
in
data16
pop
sbb
dec
sbb
fcomps
fisubrl
and
push
jne
sti
enter
and
nop
sub
inc
mov
test
lock
xchg
lock
jp
es
sub
jo
cmpsb
xor
fdivl
cmpsl
lret
pushf
mov
roll
fldenv
dec
das
adc
imulb
in
insl
adc
outsb
cld
jg
cmp
push
insl
push
jecxz
sbb
ret
dec
cmp
insb
cmp
mov
or
das
xchg
test
cltd
iret
in
imul
cmp
sub
mov
sbb
cli
cmpsb
aad
push
nop
xchg
pop
loopne
add
pop
fidivl
rcrl
mov
xor
mov
int
lahf
lret
mov
leave
and
mov
repz
fwait
dec
xchg
fidivl
arpl
fcompl
sahf
sti
sbb
inc
addr16
jg
mov
xor
mov
out
mov
addr16
aam
aas
stos
aad
mov
dec
int3
fisubs
xchg
or
xchg
cmpsl
jp
pop
sbb
dec
rclb
mov
leave
jg
pop
sub
mov
and
xchg
sbb
or
in
popl
loope
xor
push
cmc
inc
xor
ret
leave
aad
sbb
icebp
push
fs
imul
mov
mov
sti
jb
in
sub
fisttpl
aas
sbb
scas
cmpsl
pusha
cwtl
into
stos
enter
jge
jbe
jns
int3
pop
pop
adc
rcrb
ror
mov
sbb
sbbb
and
lock
jl
or
out
in
mov
mov
mov
rcrb
aam
into
in
xchg
scas
test
push
outsb
inc
pop
je
fs
add
xor
and
aam
fdivp
into
in
xchg
scas
test
push
outsb
inc
pop
je
fs
add
xor
and
aam
fdivp
into
in
xchg
scas
test
push
outsb
inc
pop
je
pusha
ds
add
xor
shr
rcr
into
in
xchg
scas
test
mov
adcl
dec
pushf
cmpsb
jnp
dec
icebp
pop
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
pop
mov
mov
sbb
add
and
adc
add
push
mov
mov
sbb
or
cmp
sub
lret
and
jae
arpl
mov
mov
add
shrl
ret
mov
arpl
pop
out
testl
testl
and
rolb
and
push
fidivs
mov
mov
out
jl
or
lret
sub
adc
add
call
movsl
cmpsb
push
jne
fs
shlb
inc
repz
fucomp
push
jmp
mov
push
jae
xchg
inc
xchg
sahf
xchg
xchg
les
sub
jg
adc
xor
cs
pop
pop
inc
idivb
repz
mov
and
out
scas
xor
mov
cmpsl
adc
xchg
mul
cmp
loopne
sbb
inc
call
pop
pop
add
mov
xchg
mov
mov
mov
push
jae
cmp
ret
sbb
adc
add
jae
arpl
fidivrs
jo
aad
lds
mov
fistpl
dec
sahf
jge
insl
jmp
ror
es
bnd
jb
outsb
int
mov
cltd
dec
sti
inc
xchg
outsl
loop
in
shlb
ljmp
out
testl
sub
lret
and
adc
add
push
stos
inc
pop
mov
mov
sbb
or
cmp
sub
lret
and
adc
add
push
stos
inc
pop
mov
mov
popa
stos
push
aam
jecxz
push
test
out
dec
rolb
outsl
xor
or
add
adc
cli
push
mov
add
sub
inc
je
and
pop
out
inc
les
mov
mov
jecxz
stos
lock
lods
nop
push
mov
and
mov
test
fcom
jns
or
movsb
cmp
scas
dec
push
pop
adc
mov
insb
js
in
loope
xor
sub
je
cltd
lods
mov
xchg
repnz
dec
jecxz
std
jg
mov
cmp
pop
jle
movb
add
pop
mov
lret
and
mov
inc
jg
das
pop
sahf
push
notl
mov
es
in
cwtl
jl
mov
and
xchg
fcmovnbe
clc
lods
xor
int3
inc
lahf
xchg
lds
add
hlt
imul
xor
lea
test
sbb
lods
fmull
aas
enter
es
cmp
stos
fstps
fisttpll
jecxz
outsb
sub
mov
cli
lods
iret
pop
cmp
push
mov
pop
ljmp
push
and
mov
sub
icebp
jmp
push
mov
sub
jb
xor
adc
stos
fldenv
adc
push
adc
out
mov
lea
les
add
aam
push
or
push
fmull
out
rcr
push
adc
mov
mov
and
sarl
notl
sbb
mov
out
and
sub
and
xlat
loopne
jle
sbb
and
mov
icebp
cwtl
xchg
ss
test
subl
sub
mov
jne
pusha
mov
ds
mov
inc
imul
dec
jo
ja
xchg
sub
aaa
cmp
dec
adc
adc
ss
push
dec
arpl
inc
leave
cmpsb
gs
dec
scas
ds
inc
xor
into
xchg
arpl
sbb
xchg
imul
xchg
out
loope
iret
sbb
aad
mov
adc
mov
pop
sti
mov
fcompl
jmp
fcoml
inc
sbb
int3
dec
cmp
fldt
les
in
stc
mov
pop
lods
jg
sbb
sahf
in
mov
xchg
sbb
inc
xchg
mov
je
pop
loopne
mov
js
bound
out
cmp
mov
mov
adc
jp
repz
add
push
cwtl
insb
adc
mov
sub
xor
pop
inc
xor
ljmp
xchg
or
or
repz
lds
shll
int
movsb
test
popf
fisttps
ret
mov
out
mov
mov
clc
faddl
jo
cmp
lret
add
jno
pop
inc
test
insl
dec
mov
into
mov
mov
cmp
sahf
adc
mov
inc
and
jbe,pt
mov
mov
mov
mov
sti
sbb
clc
mov
imul
xor
push
push
ljmp
dec
pop
lret
xor
mov
push
inc
nop
pusha
or
cltd
repnz
aaa
cwtl
in
lret
add
lret
pop
out
lods
sti
dec
lea
and
repz
ja
aaa
pop
sub
pop
push
xlat
mov
outsl
lcall
ss
int3
cs
pushf
pop
in
mov
add
sbb
jns
jmp
gs
and
adc
jg
xchg
jg
test
pop
fwait
outsl
xor
inc
idivb
es
inc
out
push
jg
mov
or
cmp
or
add
daa
mov
ljmp
or
mov
pushf
and
adc
or
xchg
push
fwait
add
jo
sub
cld
in
out
inc
pop
jb
rcl
jg
shrl
fldenv
mov
sbb
jecxz
sub
and
and
in
lret
outsb
jo
lret
pop
mov
dec
js
push
lcall
out
sub
mov
repz
dec
adc
out
mov
outsb
out
cmpsb
loopne
jl
mov
fstpt
daa
cmp
addr16
cmpsl
and
xor
sbb
jp
inc
add
push
cmp
ljmp
inc
insl
in
or
enter
cmp
and
mov
mov
shlb
jae
cmp
outsb
mov
popa
aaa
mov
shll
imul
faddl
and
test
lret
push
adc
fcos
loop
xchg
fs
mov
cmp
xor
lods
inc
rcll
dec
push
ljmp
enter
int
jnp
pop
mov
xchg
in
sbb
addl
xchg
adc
dec
xor
push
xchg
loope
xor
inc
add
and
aam
adc
mov
mov
lds
xor
mov
sahf
pop
repz
fsubrs
cli
jns
push
stc
sbb
andl
sub
in
ss
sbb
mov
mov
aad
mov
ret
data16
mov
mov
push
repz
nop
call
sub
jl
sbb
xchg
clc
mov
jmp
mov
jb
add
in
out
push
adc
movsl
ret
cs
mov
mov
out
pop
in
lcall
sbb
push
das
icebp
shrb
into
stos
add
popf
imul
xor
adc
rclb
lret
cwtl
push
hlt
inc
call
stos
cmp
dec
or
ja
mov
dec
lods
mov
divb
or
out
aad
push
mov
xor
pop
jbe
xor
std
cmp
test
les
xchg
in
ret
mov
cmc
push
les
fldenv
outsb
in
add
mov
rcrb
les
or
adc
mov
cmpl
cmp
ds
mov
cmp
ret
mov
xchg
sbb
xchg
pop
cwtl
cmpsb
mov
cmp
xor
or
ret
popa
dec
adc
imul
scas
pop
jle
add
jg
jae
jae
xor
scas
pop
gs
int
cmpsb
xchg
cmp
cmp
outsb
outsl
lret
or
xchg
jo
mov
cli
rorb
dec
jp
fs
inc
sbb
jb
push
in
sbb
fs
sub
fadds
or
mov
std
cmp
bound
test
push
jno
and
stos
inc
cmc
arpl
int3
xor
lods
aaa
stc
aad
icebp
mov
mov
dec
call
scas
or
push
dec
jne
or
icebp
pushf
sti
jmp
jmp
and
mov
push
xchg
sbb
movsl
sar
ljmp
push
int
cmpsl
decb
mov
fnstsw
add
inc
jo
sti
fistps
mov
movsb
push
mov
leave
test
sti
js
cmpsl
std
lret
icebp
inc
add
lea
sub
cwtl
push
cmp
ljmp
stc
sarl
and
xchg
adc
mov
lods
int
push
cmpsb
inc
and
outsl
fwait
lods
or
adc
xlat
and
hlt
or
dec
lods
imul
adc
repnz
fmuls
mov
test
pushf
int
daa
push
cmp
ljmp
dec
sbb
jns
fwait
inc
mov
je
movsb
arpl
fdivl
sbb
sbb
into
imul
fdivrl
mov
pop
fnsave
std
in
xchg
int
mov
mov
shl
test
int3
fnstcw
mov
xlat
outsl
xor
and
pop
and
cmpsl
lcall
imul
xlat
xchg
pop
inc
or
pop
xchg
out
push
rorb
push
lds
dec
fs
sbb
ljmp
stos
addr16
cld
fmuls
jae
pop
je
inc
jecxz
cltd
add
repnz
and
push
pop
cmpsb
mov
and
adc
or
mov
mov
test
sub
mov
dec
fstl
arpl
push
aaa
nop
xchg
adc
and
test
adc
add
push
push
or
and
or
jbe
pop
out
adc
out
stos
inc
shrb
lret
jae
xchg
or
dec
mov
ljmp
and
mov
jp
cmp
and
adc
repnz
dec
or
add
or
or
cmp
xchg
mov
popa
xchg
cmpsb
mov
ljmp
adcb
dec
xchg
sbb
fcompl
inc
rcrb
inc
and
ja
and
cmp
mov
cmp
xchg
aam
movsb
lea
adcl
loopne
mov
add
scas
loope
fs
stos
pop
int3
jl
into
sti
pop
test
sub
loope
bound
cld
mov
ja
sub
jns
arpl
jnp
sahf
mov
and
orb
cmp
inc
movsb
inc
js
inc
push
out
sbb
rclb
jecxz
daa
sti
mov
scas
ret
adc
es
sbb
stos
inc
mov
dec
and
dec
stc
add
push
pop
mov
mov
repz
shr
out
loop
xchg
mov
mov
rcr
gs
stos
addl
aaa
sbb
faddl
call
fs
scas
into
repnz
test
adc
jnp
jle
mov
xchg
jo
or
mov
hlt
xchg
test
mov
xchg
inc
dec
fistpll
outsl
cmpsl
std
jecxz
das
add
mov
rol
adc
jmp
dec
es
imul
and
lret
fcmovu
into
pop
aas
frstor
je
out
jl
and
inc
pop
hlt
out
pcmpgtd
data16
push
loop
inc
lret
hlt
mov
inc
sbb
pop
jno
adc
xchg
sbb
dec
adc
dec
imul
and
xchg
jge
mov
and
dec
adc
cmc
pop
xor
mov
shrb
adc
inc
dec
out
jns
rcrl
clc
mov
enter
insl
outsb
cltd
stos
dec
adc
fwait
pop
aad
sarl
into
aaa
cmp
or
xchg
dec
sbbl
stos
cmp
mov
ret
cmc
push
xor
aad
mov
aad
jnp
mov
shlb
out
fsubs
test
xor
mov
push
adc
sub
add
jmp
out
add
cmp
rol
jbe
lods
sbb
cmp
mov
inc
andl
into
sub
mov
fsubp
inc
aam
shlb
push
fldenv
mov
pop
and
xorl
nop
bound
jns
loope
push
sub
push
pop
call
jp
pop
fsub
inc
mov
jb
insb
iret
mov
inc
cmp
mov
out
sbbl
outsl
fdivrs
mov
dec
fsts
xor
add
rcll
outsl
iret
xchg
enter
sub
inc
dec
scas
inc
inc
lcall
cmpsb
mov
js
lods
out
out
repz
mov
loope
fadds
jge
and
leave
outsb
scas
mov
lds
bound
ja
sub
jae
test
xor
jmp
sti
ds
cmpsb
xor
les
pop
adc
lock
sub
jge
inc
cld
adc
sbb
imul
ljmp
xchg
nop
sbb
mov
mov
xchg
rcrl
or
stos
mov
push
enter
inc
xor
sub
jnp
xchg
stos
dec
push
arpl
popf
imul
cmp
repz
shlb
out
inc
popf
xor
jae
je
popa
rolb
pushf
jae
pushf
movsl
sbb
insb
xchg
sub
or
shr
fwait
xchg
in
call
push
outsl
sahf
in
call
fsubp
jne
loope
add
pop
sbb
leave
fs
ficoml
push
xor
sahf
sbb
in
mov
pop
loopne
insb
lods
cmp
or
jmp
outsl
sbb
cmp
fdivs
shr
rcrl
xchg
loop
xor
imul
loop
daa
aaa
adc
pop
popa
sbb
icebp
out
enter
js
jne
pop
cli
pop
test
ss
xchg
cmp
in
sub
xchg
sbb
mov
jnp
bound
leave
ret
das
push
push
repz
jns
or
insb
std
push
mov
shll
add
dec
jns
jmp
push
out
fstpl
arpl
sub
stos
mov
inc
mov
mov
dec
gs
repnz
orl
popf
lcall
popa
hlt
push
test
and
loop
mov
imul
push
loope
test
bound
sub
ljmp
push
cmp
adc
test
sub
add
pop
push
cli
rcl
fwait
ror
push
dec
jg
and
cmp
mov
mov
dec
sti
jbe
jno
lds
xchg
rcl
shl
out
add
data16
and
push
lcall
sub
xor
sbb
shll
jnp
push
enter
jecxz
and
sub
xor
sbb
adc
imul
test
inc
xchg
add
popa
add
add
test
fstp
divl
aam
aam
sbb
test
xchg
jecxz
outsb
sub
mov
data16
xchg
jo
inc
sbb
or
sarb
sub
adc
pushf
cli
pop
xorb
ret
mov
push
inc
xor
or
lea
sbb
je
mov
jo
cld
movsl
stc
pop
mov
sbb
loop
mov
fisubl
mov
neg
jbe
std
inc
xchg
and
mov
insl
sbb
lods
cmp
iret
jmp
cld
mov
cmp
or
bound
shrl
in
clc
mov
push
jns
push
shll
xor
shl
push
icebp
test
clc
jl
insl
add
aam
mov
and
pushf
pop
or
jae
dec
mov
fwait
and
loope
sbb
mov
xchg
in
mov
push
repz
movsl
mov
cmpsb
sub
lret
push
out
sub
mov
push
push
dec
cmp
ficompl
scas
div
jbe
push
aam
push
lds
adc
jl
lcall
dec
adc
jle
std
pop
mov
dec
and
jns
cmp
mov
add
pop
repnz
ret
jge
fs
sub
xchg
scas
ficompl
jae
repz
lret
insb
push
rcrl
adc
push
shlb
repnz
cwtl
sbb
jae
mov
jle
rcrb
std
cmp
xlat
jbe
and
xchg
and
cmp
lret
add
mov
out
pop
js
add
lahf
cs
sbbl
pop
mov
insb
testl
imul
leave
push
cmpsb
cmp
cmp
push
adc
fcoms
sub
jmp
bound
mov
jo
ss
lret
loope
icebp
test
mov
js
xor
fsubr
repnz
xor
outsl
mov
jb
sub
sbb
push
adc
fdivrs
popa
push
mov
daa
fldcw
out
movsb
je
fwait
cmpsl
wrmsr
ret
sbb
aaa
push
xchg
movsb
std
loopne
pop
les
xchg
push
inc
inc
adc
pop
fwait
in
andl
aad
jle
cmpsl
dec
adc
xchg
xchg
out
test
push
xchg
add
jp
popf
pop
subb
mov
es
insl
sahf
movsb
mov
cmpsl
inc
int
pusha
push
fcoml
cltd
add
xor
mov
daa
int
pop
arpl
mov
mov
andb
mov
stos
ret
cmc
iret
rcll
mov
xchg
mov
jp
shlb
shl
sbb
clc
inc
fistps
shll
xchg
mov
lret
and
jecxz
push
lret
xchg
push
push
jb
xor
mov
or
in
and
mov
mov
shrb
stc
fmul
leave
dec
call
push
jns
and
dec
out
jnp
adc
mov
aaa
mov
stos
mov
dec
cs
sub
jecxz
adc
arpl
jle
or
sbb
mov
test
jl
mov
je
clc
sub
and
mov
xchg
xchg
lds
mov
pop
popf
push
pop
popa
testl
call
inc
xchg
out
dec
insb
xchg
out
cmp
add
lea
arpl
cmp
jbe
mov
cmp
sbb
mov
and
notb
leave
xor
jnp
cmpl
xchg
push
cmp
and
dec
lods
das
fldenv
or
scas
sbb
lret
mov
dec
je
outsb
cli
test
jle
mov
cs
mov
insb
dec
mull
and
inc
inc
mov
jae
stos
in
xor
orl
dec
je
pop
jl
and
or
cmp
addb
lahf
hlt
sub
pop
dec
imul
mov
and
sub
and
pop
or
sub
and
pop
cld
sub
or
sbb
and
add
lahf
add
pop
pop
in
cmp
dec
arpl
cmp
scas
xchg
ljmp
push
test
and
insl
fsubrl
jno
and
pop
lds
and
les
jmp
gs
xchg
jb
dec
nop
lret
lea
std
outsb
cmp
lods
or
dec
xor
mov
lahf
lret
jae
jmp
mov
dec
add
xchg
popf
inc
sub
in
pop
add
daa
mov
or
mov
mov
jbe
xchg
sahf
cld
pop
lock
lods
xchg
aam
fcompl
ficomps
mov
bound
adc
cmp
pop
xor
inc
aas
sbb
mov
fmul
inc
mov
jno
jne
cmp
inc
adc
cmp
dec
xor
es
inc
push
testb
sbb
mov
or
or
jne
pop
adc
inc
addb
inc
imul
push
push
mov
xchg
mov
call
xchg
and
lea
push
add
sbb
pop
xchg
outsb
jno
push
stos
push
cltd
inc
push
inc
ficoms
pop
out
enter
xor
nop
imul
sbb
adc
and
mov
and
call
inc
fmuls
cmp
inc
sub
hlt
dec
scas
or
sbb
mov
push
test
and
cmp
int3
cli
add
pop
pop
rcll
decl
sti
pop
enter
and
repnz
ret
push
push
add
sub
hlt
out
push
adc
test
dec
xor
mov
lret
add
inc
in
pop
fmull
lret
rcrb
mov
add
pop
je
and
sub
mov
xchg
bound
into
fildll
popf
imul
sbb
test
mov
loope
xlat
push
jbe
insb
imul
mov
jb
rcrl
lods
jnp
and
movsl
iret
and
mov
movsb
sti
sti
test
cmp
fbld
leave
inc
mov
nop
cmp
lods
out
aad
aad
pop
lds
leave
stc
xor
enter
and
scas
mov
aad
rol
xor
inc
pop
into
jle
call
mov
adc
dec
pop
jbe
jp
and
sbb
cltd
inc
arpl
sahf
mov
ret
adc
shl
pop
es
jno
enter
aaa
add
mov
jl
out
stos
lret
daa
pop
cld
dec
mov
ret
fwait
jns
sti
sbb
push
icebp
mov
sub
fildl
es
pop
jno
mov
mov
aaa
sub
fwait
mov
dec
push
mov
mov
xchg
out
or
mov
loop
shl
or
and
movsb
repz
popf
mov
popa
imul
popf
mov
dec
pusha
jne
cmpl
fdiv
daa
bound
dec
ljmp
push
out
ret
fwait
or
insb
pushf
int
repnz
cmpsb
pop
dec
sbb
mov
mov
mov
imul
cmc
or
popf
and
sbb
pop
insb
je
dec
lret
data16
mov
add
xchg
shll
mov
mov
xor
decb
add
mov
int3
out
cld
ds
mov
mov
xor
mov
jg
scas
push
sbb
scas
adc
flds
pop
dec
imulb
mov
ja
jp
aaa
push
xchg
pusha
add
sbb
and
mov
lock
test
mov
push
ss
mov
xor
and
daa
movsl
mov
cltd
int3
popf
scas
pop
gs
mov
pop
push
mov
ljmp
std
fs
sti
daa
jmp
mov
jle
jl
movsl
cmp
sbb
andb
xor
outsl
call
sub
add
mov
and
dec
jns
sbb
cmp
imul
shrl
ret
lret
and
adc
add
push
stos
inc
pop
mov
mov
sbb
or
cmp
sub
lret
and
adc
add
push
stos
inc
pop
mov
mov
mov
or
cmp
jmp
lret
and
adc
add
push
inc
inc
dec
mov
mov
sbb
sbb
push
stos
cmp
int3
xor
push
adc
je
sti
add
lahf
loop
sarb
subb
fbld
push
or
xor
cmpsb
add
imul
loop
sarl
mov
lds
bound
xor
inc
sub
jne
dec
adc
imul
loop
shlb
ret
jmp
adcl
bound
xor
pop
push
or
xor
insl
jb
call
xorb
js
sub
nop
popa
hlt
pop
jns
sarb
mov
inc
test
dec
cmpsl
iret
adcl
inc
sbb
adc
in
testl
dec
fstl
lock
es
jecxz
fucom
mov
xor
or
mov
sbb
sbb
mov
mov
scas
inc
lods
xor
mov
mov
jb
andb
movsb
jmp
les
movb
or
cmovge
push
pop
call
adcb
cmp
pop
add
inc
dec
pop
xchg
sub
out
fs
pop
into
inc
jnp
xchg
push
push
inc
ljmp
iret
inc
inc
xor
push
adc
loop
ror
ret
jns
sbb
push
cmp
xor
movsl
adc
pop
xchg
mov
icebp
jle
cmpsb
aad
out
sbb
jnp
sahf
es
inc
sbb
and
pcmpeqd
lods
frstor
xlat
mov
cltd
xchg
xchg
cli
fsubs
jp
jle
imul
dec
inc
push
sbb
imul
mov
jmp
sbb
push
cmp
xor
dec
adc
imul
loop
sarb
mov
jmp
sbb
push
cmp
xor
dec
adc
imul
out
pop
nop
inc
sarl
gs
cmp
stos
pop
mov
or
cmpsb
adc
cltd
arpl
sbb
lds
test
mov
sahf
pop
lcall
adc
sub
ss
add
repz
ret
or
xchg
inc
sub
ret
fbstp
dec
mov
icebp
scas
ja
push
outsb
add
jmp
sbb
pop
xchg
or
adc
aad
xorl
sti
mov
push
adcl
sbb
adc
push
out
in
mov
lahf
dec
pop
mov
adc
repnz
sub
stos
xor
mov
je
test
repz
fistps
sbb
sti
in
push
test
jne
fdivrp
xchg
call
mov
add
ds
inc
adc
mov
pushf
xchg
sub
sbb
ret
jle
xchg
jbe
add
bound
popf
jbe
lea
mov
pop
data16
out
jns
or
lods
outsl
and
sbbl
insl
je
testb
and
mov
mov
lds
loop
mov
sbb
adc
inc
xor
cmp
fsub
addl
out
aam
movsb
mov
cmp
mov
imul
mov
jl
test
mov
jae
je
je
sbb
mov
enter
jle
pusha
pop
inc
inc
sar
inc
fdivs
mov
mov
or
and
mov
bound
dec
int
sbb
out
mov
adcb
sahf
cmpsb
divl
mov
add
cltd
out
outsl
lcall
xor
mov
xor
xadd
out
ret
inc
leave
out
push
lods
and
push
mov
les
xchg
xor
pop
sub
sub
mov
sub
xchg
xor
push
dec
imul
ret
ficompl
fcoml
fildll
mov
mov
dec
and
and
orb
popa
das
inc
push
or
jne
inc
pop
daa
adc
pop
inc
pop
and
std
scas
fnstcw
and
and
sbb
outsl
fwait
imul
decl
pop
subl
mov
xlat
adc
mov
xchg
xlat
push
scas
cmp
adc
jb
dec
shlb
jns
jo
shll
push
repz
pop
in
and
jns
mulb
jae
je
xor
dec
cmp
addl
pop
and
out
sub
inc
mov
xchg
xor
or
add
mov
jne
xor
pop
lock
or
jae
mov
push
cltd
adc
rorl
adc
mov
add
dec
das
or
test
add
mov
sub
add
jp,pn
add
pop
pop
cmpsl
iret
lea
lds
aad
fldt
push
cli
jae
or
fstps
xor
outsb
dec
aad
addr16
shlb
sub
add
xor
xlat
adc
int
mov
call
clc
ja
sahf
sahf
and
es
and
dec
in
out
mov
sbb
push
into
xchg
add
jns
popf
pop
xchg
sub
xchg
inc
aad
loop
pop
and
jp
inc
lea
cmp
inc
sub
xchg
sahf
adc
inc
add
adc
testb
test
test
insb
jo
push
mov
mov
mov
sub
sbb
test
add
adc
fwait
sbbl
push
add
add
xchg
xlat
test
shlb
jbe
mov
rclb
les
mov
mov
sub
xlat
mov
nop
cmp
data16
mov
pop
or
jecxz,pn
icebp
or
or
sbb
cwtl
xor
and
push
or
pause
and
cmp
xchg
rol
shlb
xlat
sti
jmp
aam
das
cmp
jle
ljmp
xchg
icebp
jecxz
loop
leave
negl
add
in
mov
int3
pop
mov
jmp
cmp
mov
rclb
xchg
push
out
cmpsl
cld
imul
in
iret
in
jle
ljmp
push
inc
and
push
out
inc
sahf
push
push
pop
in
jnp
mov
mov
rcrl
jb
aam
sub
int
ds
int3
insb
mov
fimull
fnstenv
clc
pop
push
fidivrl
nop
lcall
mulb
xchg
in
dec
push
cli
mov
inc
add
jb
out
xchg
or
push
fbstp
test
fcompl
add
xor
pop
orps
mov
pop
adc
in
xchg
and
cmp
jmp
test
icebp
mov
pop
jb
insb
test
pcmpgtw
sarl
mov
cld
pop
shlb
out
xor
shrl
jle
dec
inc
dec
xor
cli
ss
mov
cmp
js
xchg
jl
inc
shlb
pop
jmp
mov
cmp
test
or
pop
or
mov
ss
push
daa
scas
loop
repz
inc
mov
push
jle
sub
int
add
mov
dec
xor
jno
mov
loope
pop
imul
icebp
out
mov
test
mov
mov
jae
in
or
ret
jle
xor
nop
popf
sub
outsb
insb
dec
pop
sub
sub
pop
int3
sbb
test
adc
jbe
push
mov
pop
lcall
repnz
test
insl
mov
jl
jge
aad
push
cmc
jnp
cs
add
inc
sbb
mov
shrb
add
aaa
sbb
inc
stc
popf
fldenv
inc
dec
xor
push
jp
mov
push
pop
adc
fidivrs
ss
adc
push
pop
subl
add
push
insl
bound
sbb
push
push
sub
mov
loop
and
addl
mov
cmp
ret
mov
ljmp
cwtl
ljmp
lret
psubsw
sub
xchg
push
ljmp
mov
jl
xor
add
bound
push
dec
popl
negb
dec
cmp
jmp
sub
adc
pop
pusha
dec
xor
inc
fnclex
inc
and
jge
lahf
repz
pmulhw
or
stos
inc
lods
jge
cmp
addr16
shl
inc
push
pop
adc
jg
cs
subl
das
xchg
pop
mov
stos
jge
lahf
iret
in
push
jno
stos
sbb
jmp
jle
incl
pusha
push
xchg
ja
into
popf
arpl
sahf
push
sub
and
push
dec
sub
lock
xor
add
pavgb
rclb
outsl
fimuls
inc
cmp
add
jg
mov
aaa
fwait
add
outsl
stc
aas
jae
inc
mov
or
in
add
rclb
add
iret
mov
cmc
scas
data16
sub
or
jae
add
fwait
cmp
push
fstl
mov
imul
sbb
xor
js
aaa
pop
fcoms
inc
add
es
scas
inc
dec
xchg
scas
jecxz
xor
icebp
add
popa
pop
mov
repnz
lret
dec
mov
js
aam
daa
push
xchg
scas
jmp
mov
adc
and
shlb
sbb
and
fdivs
lcall
mov
ljmp
cmp
shl
push
add
mov
ret
cld
or
add
lea
dec
mov
and
ficoms
xlat
and
pop
cmp
mov
push
sub
adc
cmpsl
dec
andl
movsb
cmpl
pop
lods
jo
cmc
addl
pop
mov
xor
je
pop
dec
ljmp
mov
and
push
mov
les
cld
pop
outsb
xorb
push
out
dec
loopne
shrb
jg
adc
pushf
xor
inc
lds
jp
dec
shll
jb
bound
fcompl
inc
add
fidivrl
cmp
jbe
mov
sbb
imul
cs
xchg
out
fisttps
fildll
and
adc
ss
idivl
xchg
xor
push
and
push
sub
and
mov
scas
and
shrl
rcrl
lock
roll
popl
ret
push
pushl
gs
out
pusha
adc
pop
orl
mov
mov
adc
fidivrl
mov
hlt
mov
mov
test
mov
outsl
push
push
sub
stc
push
dec
inc
lods
stc
imul
stos
cmpsb
xor
shlb
and
fdiv
or
mov
repz
adc
cli
test
jnp
rcrb
mov
in
cmpsb
repnz
sbb
pop
push
xchg
test
test
aaa
lea
pusha
popa
xor
mov
out
fnstsw
sbb
and
mov
sbb
sub
shll
imul
cmc
fbld
aaa
xor
cmc
jbe
xchg
xor
out
mov
dec
scas
mov
fstps
mov
mov
sbb
es
mov
jnp
sti
xchg
jp
cmp
sarb
cwtl
lcall
shrb
movb
or
mov
xchg
add
and
xchg
mov
jl
mov
mov
push
cwtl
lahf
jmp
pop
fistpll
out
pop
push
and
inc
sub
xlat
icebp
in
xchg
imul
outsl
enter
js
push
out
int3
pop
add
inc
xor
sbb
jne
mov
add
cmp
jecxz
push
stc
mov
ret
sbb
lret
mov
jbe
pminub
dec
mov
aam
pop
push
push
adc
cltd
popf
and
mov
gs
sbb
dec
jae
jmp
inc
and
and
fsubrs
call
jae
lretw
insl
clc
daa
fninit
jne
fidivl
cmp
jns
lock
imul
or
iret
inc
adc
mov
sbb
cmc
pop
xchg
dec
adc
push
mov
cli
les
fscale
push
mov
and
data16
test
xor
es
lods
cmp
dec
movsl
ret
jg
jle
ror
lahf
xlat
pop
pushf
or
pop
insb
dec
int
or
mov
scas
mov
ficompl
enter
imul
lds
je
xchg
jle
pop
pop
mov
mov
or
out
cmp
pop
pop
cs
loop
sbb
inc
cs
call
clc
out
pop
xor
xchg
jp
mov
pop
std
mov
das
jnp
loopne
movsl
out
sbb
inc
jp
into
mov
fnstcw
repz
mov
out
fs
pop
xor
popa
sbb
stc
pop
out
jecxz
mov
inc
repnz
pop
pop
adc
jg
mov
mov
sub
in
push
jmp
mov
cmpsl
fwait
lret
sub
pop
fldl
lods
subl
xchg
outsb
add
push
xchg
sbb
or
fnsave
out
arpl
pushf
mov
push
aam
push
ds
sbb
jmp
push
ja
hlt
push
ja
inc
push
stos
ljmp
adc
shrb
push
into
mov
mov
push
xchg
std
sub
sbb
pop
loope
mov
jae
xchg
and
sub
push
cmp
jo
cmp
cmp
cli
jl
mov
add
imul
mov
test
mov
ret
xchg
pop
loope
addr16
or
movl
scas
sbb
mov
sbb
negl
adc
popa
push
mov
addr16
and
xchg
sub
outsl
xchg
mov
ljmp
popa
push
clc
push
jge
in
aaa
ds
dec
jl
addr16
mov
push
shll
jns
in
imul
pop
mov
popf
jns
xchg
test
push
mov
and
cmp
jle
movl
sbb
lret
mov
aas
loop
fisubs
jge
mov
pop
jns
mov
lahf
pop
cwtl
mov
scas
imul
subb
xor
loope
sub
push
adc
jno
jns
pop
sarl
add
cld
addb
movsb
stos
jne
mov
mov
fsubrs
pop
out
psubb
ljmp
loopne
mov
pushf
mov
arpl
jbe
mov
out
fcoms
sbbl
int3
pop
mov
xor
subb
add
sub
xchg
sbb
test
push
cli
lds
imulb
movsb
mov
sub
dec
andb
xor
sub
mov
mov
and
loope
jnp
je
sarl
sahf
jmp
mull
push
cld
subb
icebp
mov
pusha
in
insb
inc
les
mov
je
sbb
sub
cmpsb
push
icebp
bound
sahf
mov
cmc
jns
lea
mov
mov
arpl
sub
jno
or
and
mov
jl
xchg
and
xchg
popl
test
mov
push
sbb
ret
dec
test
filds
mov
push
mov
aad
ret
pop
mov
dec
push
xor
mov
sub
jno
jmp
scas
lret
mov
lock
js
popa
loop
xor
xlat
shl
or
insb
mov
xchg
mov
pop
scas
addr16
mov
andl
xchg
add
movsl
out
xor
decl
popa
dec
mov
push
push
lcall
loopne
scas
mov
into
fwait
pop
sti
push
push
fldcw
cli
stc
xchg
push
push
pop
sti
and
pop
pop
addl
mov
repnz
xlat
inc
mov
loop
cmp
pop
call
pop
es
cmp
out
bound
jne
xor
xchg
int
std
popf
roll
xchg
roll
popa
push
dec
repz
jl
jmp
icebp
cmp
and
lcall
outsl
or
mov
cs
inc
push
sub
popf
mov
mov
xchg
push
xchg
xchg
std
xor
mov
xor
pop
cmp
les
xor
inc
imul
push
fisubrl
call
push
push
clc
mov
mov
movsb
adc
rcrl
stos
test
dec
inc
or
dec
xchg
je
stos
jns
cld
mov
jnp
cmpsb
inc
sbb
daa
sti
jge
xor
cmc
push
mov
pop
fisttpll
data16
test
lret
or
push
test
imul
jbe
fsub
push
int3
cs
in
in
dec
in
iret
fsubs
sub
push
popa
pop
pop
sbb
mov
ljmp
and
mov
mov
push
rolb
insb
lds
imul
int3
shrl
loope
lds
lods
lahf
xor
push
mov
push
repz
jnp
mov
adc
fwait
cmp
sbb
leave
xchg
into
jnp
incl
cmpsb
int
cs
adc
test
cli
adc
in
out
lret
dec
dec
jo
std
fwait
inc
pop
mov
and
jbe
adc
mov
xchg
ss
clc
mov
jl
sbb
ja
cmp
add
push
sbb
sub
xor
stc
or
xor
jo
fildl
decb
push
push
or
mov
dec
incb
dec
add
call
iret
jo
addr16
jo
repnz
dec
jl
bound
jae
add
mov
push
call
xchg
or
inc
dec
sub
popf
incb
stos
push
in
pop
jno
pop
push
movsb
sbb
shr
jmp
aad
push
pop
rsm
js
push
jns
fcmovu
rolb
stos
sti
pop
xchg
aam
dec
cmp
cmp
cs
cltd
mov
fucomip
outsb
adcl
addr16
xchg
adc
jnp
mov
adc
imul
imul
fwait
inc
xchg
pusha
add
dec
xor
lods
in
mov
push
sarb
push
push
fdivrs
push
inc
inc
add
and
cmpsb
add
mov
or
outsl
out
lret
mov
pop
clc
push
xchg
inc
push
hlt
scas
test
or
or
int3
mov
pop
cmp
xor
inc
and
lods
loopne
fisubl
sub
test
or
cmp
cmp
inc
repnz
popa
mov
lahf
add
pusha
cmp
mov
sbb
lods
lds
xchg
cmpsb
and
out
popl
xchg
lahf
pop
leave
sbb
xlat
fidivs
pop
push
and
xlat
add
xchg
bound
cmp
sbb
cmp
fdivrs
mov
cmc
xchg
cmp
jae
fwait
out
inc
leave
sbb
sbb
adc
push
jbe
popf
rcrb
jmp
xchg
cmpsb
aad
push
mov
sbb
lea
or
cwtl
mov
xor
into
xor
and
xchg
cmpsb
popf
cld
jb
out
ja
jle
arpl
cmp
mov
ud1
jne
aaa
aaa
subb
insl
scas
daa
mov
or
fnstsw
ret
adc
dec
xor
sbb
dec
cmp
jb
push
push
inc
add
pop
push
movhps
jno
or
icebp
cmp
jp
inc
dec
les
fisttps
xor
push
test
cmp
or
lock
dec
add
sbb
addl
pop
out
inc
jno
jno
cmp
inc
cmp
and
in
jno
test
pop
mov
or
imul
jp
jb
mov
and
shll
out
and
cmp
pop
pop
dec
and
addr16
fld
push
or
pop
scas
sbb
lret
push
dec
test
xchg
das
daa
push
dec
ja
push
popa
das
push
cmp
vpshaq
popf
pop
sbbl
sbb
xor
adc
out
mov
mov
xor
inc
insb
cld
inc
fildl
das
fwait
push
jae
sahf
jmp
mov
loop
sbb
xchg
pop
test
frstpm(287
icebp
int3
stos
xchg
pusha
test
popa
jmp
roll
pushf
push
xchg
mov
mov
cmpsl
adc
add
mov
sahf
push
add
pop
pop
add
mov
pop
xor
mov
test
mov
inc
add
dec
inc
mov
cmpl
sbb
push
inc
cmp
sarb
data16
inc
imul
inc
xchg
cmpsl
jle
push
sarb
pop
test
sarl
mov
add
inc
mov
cmp
cs
or
push
divl
xor
jge
add
xorb
inc
add
mov
mov
arpl
or
mov
push
push
or
inc
sub
in
jecxz
jne,pn
jg
and
and
xor
jp
push
outsl
mov
sbb
lock
les
vpminub
cmc
insb
sbb
mov
mov
scas
fwait
cmp
xchg
out
es
xchg
mov
sbb
lcall
insb
sbb
and
repz
movsl
mov
jo
xor
dec
pop
push
inc
pop
and
outsb
sbb
pushf
and
scas
dec
mov
rcll
out
lea
les
insl
test
xor
rcr
add
cld
mov
xor
ljmp
jge
cs
push
std
sub
mov
cmpsl
xor
or
sbb
lret
and
bound
dec
cli
jg
pop
push
add
mov
data16
shll
xor
faddl
pop
mov
rorb
pop
ret
addr16
jle
ljmp
repz
fcompp
xlat
lahf
mov
mov
nop
inc
insb
inc
inc
mov
inc
aam
xchg
inc
shl
push
clc
cmc
mov
xchg
mov
fcmovnb
out
fnstcw
cmpb
out
xchg
aas
add
jmp
jmp
xchg
cmpsl
mov
or
or
push
push
mov
mov
pop
insb
sub
adc
les
jno
jl
xchg
jecxz
or
inc
shlb
adc
nop
sbb
jno
sub
xor
mov
adc
cmp
push
pusha
les
and
int
ds
dec
clc
cmp
cli
lahf
sub
in
out
inc
mov
sub
push
sar
aam
mov
fmull
jnp
mov
int
movsl
sub
nop
ss
dec
pop
pop
xor
shl
adc
sti
fists
dec
adc
xchg
addr16
je
sbb
pop
scas
nop
sub
mov
imul
dec
cld
sub
mov
shlb
aaa
scas
adc
daa
adc
cmp
mov
push
jne
nop
movsl
add
orl
insl
fstps
les
fstps
rcll
addr16
pusha
push
sti
push
ud0
fs
jge
arpl
sub
fs
jne
jno
cmp
push
iret
clc
sub
push
push
in
fisubl
adc
mov
mov
mov
jmp
sbb
push
cmp
xor
dec
adc
imul
loop
sarb
mov
jmp
sbb
push
cmp
xor
dec
adc
imul
loop
shlb
mov
jmp
sbb
push
cmp
xor
dec
adc
repz
outsl
rcrl
jmp
sub
bound
inc
and
adc
in
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
stos
int3
lock
pop
sti
xchg
cmp
mov
mov
add
or
add
cmp
add
add
add
popa
add
add
add
mov
add
test
add
add
mov
mov
mov
add
add
or
scas
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
mov
xor
cltd
add
sbb
xor
add
add
and
mov
pop
add
add
add
add
add
mov
add
add
push
add
add
add
sbb
xor
mov
add
add
xchg
add
add
add
add
cmp
mov
xchg
add
add
add
add
pop
add
add
add
mov
sbb
dec
add
add
add
pop
add
add
add
add
adc
xor
and
mov
mov
mov
jg
sub
mov
add
add
add
add
cmp
add
add
and
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
add
add
and
fiaddl
xchg
add
mov
flds
dec
add
add
lahf
add
add
add
ljmp
add
push
add
add
add
add
add
add
add
add
add
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
and
add
add
lahf
add
mov
push
add
testl
sbb
bound
pop
add
outsl
add
add
mov
lock
add
add
add
lahf
add
add
add
add
dec
add
enter
cwtl
add
add
add
add
add
add
add
add
add
add
add
data16
and
incb
leave
add
add
add
jecxz
pop
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
xchg
pop
add
add
add
add
add
lahf
add
add
pop
add
add
add
add
add
add
test
lldt
add
mov
add
add
add
add
add
add
and
add
add
add
add
add
lds
mov
lods
add
add
sub
add
add
add
add
add
add
stc
add
add
add
add
add
inc
push
insl
mov
sbb
xchg
xchg
stos
mov
jle
mov
cmp
in
popa
lds
xchg
je
mov
dec
xor
pop
mov
cs
fadd
cmp
or
add
std
lods
shrb
sbb
fwait
and
popf
mov
sub
xchg
sbb
out
nop
inc
cs
int
sbb
insl
xchg
sbb
jae
add
mov
inc
inc
sub
cmpsb
ret
sub
in
cwtl
inc
mov
mov
out
bound
mov
call
sub
pop
mov
arpl
jne
cwtl
or
jns
push
mov
add
dec
xchg
leave
jg
adc
out
mov
es
popa
mov
pop
cmpsl
push
add
push
jge
cs
xchg
lods
popa
cs
xor
cwtl
fsubr
les
xor
ds
mov
sub
test
int
imul
add
fisttpl
add
out
push
jg
jge
mov
mov
push
movsb
pop
adc
imul
jecxz
xor
mov
loope
popf
repz
push
xchg
lcall
sub
les
repnz
add
cmpsl
or
cltd
dec
pop
sarb
cmp
pushf
add
jbe
cmp
jl
movsb
push
dec
jle
dec
out
or
outsb
add
or
movsb
cli
out
data16
pop
pop
adc
outsb
cwtl
xlat
xchg
inc
popa
sub
dec
stos
inc
inc
sarl
pop
jae
dec
add
pop
lods
inc
push
lock
jge
push
jno
imul
cmc
or
mov
stos
es
shlb
int
inc
sbb
std
push
jmp
roll
and
call
popf
push
inc
mov
xor
adc
fwait
mov
out
mov
movsb
clc
enter
or
les
xchg
mov
mov
shl
mov
adc
pop
stos
sub
popa
or
ljmp
daa
pop
mov
jge
push
leave
and
jecxz
cmp
std
scas
or
cmp
mov
jecxz
or
mov
fimull
xchg
rcrl
aam
push
mov
jmp
jnp
pop
data16
divb
sbb
mov
adc
xor
lds
cmp
mov
mull
or
fsubrs
sub
cmp
jnp
and
cmp
pop
ds
inc
sbb
punpckhbw
int
daa
dec
dec
inc
shlb
outsb
or
cmp
cli
push
xor
out
add
adc
stos
dec
sbb
adc
adc
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
