call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
pop
inc
dec
push
js
push
jp
dec
push
aaa
xchg
repnz
clc
repz
sbb
inc
dec
push
adc
push
pop
cmp
sub
lret
enter
call
xchg
mov
pop
mov
outsl
push
push
push
sub
nop
sahf
lea
in
aad
fdivs
or
js
add
sbb
or
loop
add
lahf
sbb
gs
fnstsw
sbb
pop
lods
into
mov
mov
clc
outsb
in
daa
ss
in
fsubs
sub
adc
addr16
leave
mov
fisttpl
sub
mov
xor
push
enter
call
jo,pn
xchg
repnz
and
out
or
push
sub
jl
push
jp
mov
test
cmpsl
ret
pop
cwtl
cmc
add
movl
sub
pop
lods
dec
fldl
movsb
xor
lahf
xchg
std
out
loope
es
mov
adc
movsl
stos
mov
push
push
inc
js
push
pop
cmp
mov
push
push
iret
mov
fsubr
rcrb
test
xor
and
ja
data16
dec
sub
test
xlat
popf
jecxz
xchg
ljmp
fistl
adc
sbb
insl
pop
int
jge
mov
adcb
rol
jmp
push
sbb
cmp
dec
xor
pop
cmp
sub
fadd
enter
call
xchg
mov
inc
dec
push
js
push
pop
cmp
sub
fadd
enter
call
xchg
mov
inc
out
inc
mov
mov
mov
mov
mov
cmp
fwait
inc
mov
popa
ljmp
sarb
mov
out
pop
cld
mov
cmpsl
mov
mov
pop
sub
mov
scas
jne
or
jb
je
cmp
and
xor
push
lcall
lret
fldl
cltd
adc
inc
mov
and
negl
xchg
jnp
stc
jp
subl
inc
mov
jp
push
jle
dec
inc
stos
dec
pusha
jbe
nop
jl
sub
mov
push
out
fildll
jmp
mov
orl
pop
inc
int
mov
sbb
jns
imull
mov
jo
cmp
push
jb
mov
push
and
movsb
dec
jnp
jns
daa
jmp
inc
scas
cmp
sbb
dec
xor
sbb
icebp
loopne
xchg
das
add
cmp
js
mov
jle
jbe
sub
jge
adc
imul
movsb
fucomp
jne
sub
sub
dec
ret
enter
popa
test
movsb
add
inc
fisubrl
xrelease
cmp
mov
lret
sti
stc
add
popf
test
push
mov
nop
mov
sahf
push
mov
jecxz
enterw
pop
shl
sbb
ret
push
xchg
jne
fdivl
pop
hlt
mov
stc
xor
jle
or
pop
pop
xchg
push
mov
outsb
sbb
sub
or
mov
or
out
std
dec
shl
loope
sub
dec
and
std
mov
imul
bnd
inc
mov
sub
bound
mov
lcall
cmp
inc
das
or
mov
nop
dec
inc
adc
popf
cmp
xor
fcoms
lahf
lods
repz
mov
and
jnp
dec
test
mov
sbb
mov
mov
daa
pop
mov
cmpsl
dec
inc
mov
add
int3
aam
sti
imul
insb
popf
push
andl
or
xorb
scas
call
xor
push
in
push
out
in
push
insl
sbb
jbe
sbb
and
hlt
ja
mov
xchg
cltd
cmp
sub
inc
inc
dec
jecxz
pop
and
pop
enter
mov
sub
loopne
add
cld
loopne
push
pop
jae,pn
adc
mov
sbb
xor
inc
and
insb
mov
stos
or
cli
cmp
movsb
mov
inc
mov
and
xor
mov
jbe
movsl
and
test
repnz
insl
adc
cmp
fldl
xor
ljmp
adc
mov
jo
dec
stos
mov
jecxz
mov
jb
sahf
stos
cmp
test
jg
dec
sub
cmpsb
mov
fldpi
pop
add
mov
in
push
sbb
jl
dec
into
sahf
xlat
inc
pop
jo
ds
frstor
or
mov
pop
out
jmp
outsb
pop
and
sub
cmp
stos
bnd
shrb
xor
jmp
lret
adc
inc
xchg
jnp
dec
iret
inc
cmovge
cmovs
xchg
push
inc
test
outsl
mov
xor
call
stos
or
iret
mov
mov
jns
insb
fwait
push
in
pop
sub
ficoml
lods
ds
fidivl
in
sub
or
or
fs
loopne
sbb
cmpsb
sub
jl
mov
xor
jo
push
movsb
lcall
add
jmp
es
dec
mov
iret
pop
jmp
movsl
pop
fbld
push
daa
imul
nopl
test
adc
mov
jns
outsl
add
adcb
pop
cli
fsubr
rorb
mov
mov
pop
mov
loopne
or
ds
xlat
dec
mov
inc
clc
add
inc
fcompl
mov
sbb
or
les
cld
daa
or
cmpsl
jg
repnz
iret
insb
mov
out
loope
lret
mov
loopne
mov
out
push
test
xor
xchg
icebp
js
mov
cmc
sub
dec
daa
cld
mov
out
push
mov
sti
add
mov
add
mov
rorb
sub
adc
inc
sub
mov
ja
fisttps
subl
and
out
mov
or
and
mov
pop
mov
adc
bound
xorb
pop
ror
mov
pop
push
mov
mov
cmp
cmp
push
cmp
mov
mov
lea
fsubs
dec
data16
int3
xchg
imul
cmp
sub
pusha
scas
xchg
rorl
cmp
sbb
cmpb
sti
lret
sti
bound
adc
mov
pop
cmovge
test
in
inc
imul
xchg
jmp
jmp
push
movsl
xor
xor
aaa
and
push
push
cmp
flds
das
ss
fdivrs
stc
lock
ja
std
or
jb
ljmp
orb
and
mov
cmp
jae
and
inc
xchg
es
xchg
int
jg
dec
push
call
cmp
jbe
mov
lds
and
or
xlat
hlt
rorl
mov
std
mov
jmp
mov
jo
xor
lret
stos
repnz
add
clc
ficoml
mov
push
adc
add
inc
ret
xchg
mov
inc
lods
ficoms
subb
push
movsl
ds
jbe
and
mov
mov
or
scas
and
ret
jmp
sub
xor
leave
imul
ds
mov
es
adc
fldenv
test
jns
sahf
test
lret
jge
and
les
sub
les
mov
es
into
in
test
repz
sub
cmp
cs
sub
mov
les
push
jecxz
mov
dec
push
xlat
mov
imulb
mov
push
xlat
dec
cmp
ret
mov
mov
pop
pop
inc
popa
std
or
push
cmp
xor
jae
ljmp
mov
lcall
push
inc
out
cmpsl
sti
xchg
or
sub
mov
sub
push
add
sub
jp
add
or
popf
popa
inc
jl
add
ss
ret
out
xchg
loope
mov
imul
sbb
mov
sti
or
inc
mov
cmp
call
faddl
loopne
inc
test
mov
shr
sbb
testl
jmp
data16
insb
cmp
xchg
cmp
int3
and
xor
inc
imul
movsl
push
xchg
arpl
movsb
xlat
pop
mov
cmpsl
and
pop
and
inc
mov
xchg
or
nop
ret
xor
int3
mov
mov
das
cmp
xchg
jnp
lds
ss
pop
in
xchg
int3
sub
adc
cmp
mov
inc
cwtl
mov
movsl
ret
fidivrs
inc
mov
push
fs
cmp
sub
jb
and
jmp
lcall
jmp
mov
push
push
inc
mov
out
ficoml
mov
ret
adc
ss
xchg
sub
imul
lret
ret
pop
insl
shlb
pop
lret
and
popa
add
mov
pusha
data16
stc
and
pushf
xchg
repz
rcrb
jge
sbb
into
cmp
aaa
loope
dec
jnp
shrl
jbe
loope
jl
jg
loopne,pt
fdivrl
mov
pop
or
das
cwtl
cmp
adc
out
mov
cmp
gs
repz
sbb
jne
cmpsb
mov
adc
ja
xor
call
jne
mov
out
mov
sub
mov
outsb
ret
pop
jl
lahf
fwait
out
mov
sti
xor
rorb
aas
stc
idivl
scas
roll
sbb
sbb
xchg
sub
cli
xchg
movsb
pop
sub
xchg
sbb
ds
mov
push
sti
inc
sbbb
into
mov
imul
mov
test
fistl
in
add
aaa
inc
aad
push
xchg
xchg
pop
fsubrl
pop
jne
adc
and
jbe
ljmp
push
out
add
push
int3
pop
and
int3
sub
mov
cltd
xchg
mov
dec
incl
pop
hlt
pop
aam
mov
jae
push
add
adc
cmp
pop
imul
rcr
inc
sbb
shlb
and
js
or
mov
cmp
ja
dec
mov
loop
and
ja
in
cltd
jb
jl
and
in
fwait
xchg
sbb
cs
cmp
dec
mov
test
cmp
les
mov
push
inc
mov
cmp
xchg
dec
arpl
mov
in
sti
fnstsw
out
popw
xchg
adc
sti
iret
add
add
addl
loope
xchg
push
je
sub
cmc
pusha
adc
mov
mov
pushf
pop
push
gs
cli
out
repnz
ja
lods
test
pop
xor
mov
adc
scas
repz
loopne
loope
push
mov
inc
daa
mov
in
pop
xor
int3
push
aad
aad
mov
push
mov
cs
popa
mov
mov
add
jle
sbb
xchg
inc
je
stos
lods
outsl
das
arpl
repnz
cs
sahf
nop
push
std
xor
jle
fldl
data16
in
out
add
fcmovnu
rclb
sbb
dec
or
cmpsl
jg
fcomps
xchg
jmp
out
dec
jb
jne
imul
cmp
mov
add
cwtl
jp
jne
xchg
ljmp
sti
push
fidivs
scas
idivl
pop
cld
inc
test
mov
imul
add
scas
mov
sub
inc
xchg
xchg
jecxz
xchg
repnz
sbb
lods
xchg
outsb
das
test
lcall
dec
adc
lock
out
adc
xor
nop
sbb
push
inc
pop
jmp
stc
clc
movsb
fwait
jp
test
ret
pop
out
or
or
add
addr16
cli
sub
imulb
fwait
imull
xor
stos
jle
or
jb
xor
das
inc
jne
xchg
xchg
mov
iret
push
sbb
or
mov
aad
fsts
adc
iret
ja
xor
addb
sub
sub
fsubp
stc
insb
mov
mov
or
mov
xor
shr
adc
es
shl
push
sbb
jns
push
data16
insb
mov
je
sub
lcall
xchg
mov
mov
lret
loop
jne
shlb
jmp
icebp
jg
cld
push
out
imul
in
pop
rorl
sub
cwtl
stc
rorb
jb
jnp
repz
dec
out
ja
jecxz
mov
cmp
mov
jg
add
fists
bound
out
js
mov
pop
out
jle
int
fstps
push
push
adc
stos
insb
lret
test
cwtl
fimull
adc
jg
push
outsb
jne
cmp
xorb
outsb
repnz
ds
pop
and
pushf
push
mov
jle
aam
test
mov
sbb
out
and
ret
xchg
movswl
xor
std
xor
xchg
dec
adc
sub
jge
mov
fwait
push
and
mov
hlt
lock
cli
mov
pop
inc
daa
sti
das
push
dec
fcoms
adc
shlb
pop
add
das
sti
js
std
ret
fstpl
jmp
pop
movsb
pop
outsl
sub
cmp
out
cld
mov
pusha
arpl
pop
push
inc
jp
or
cmp
aas
inc
test
cmpsl
enter
push
lds
adc
rorl
lods
les
inc
mov
movsb
mov
sbb
or
pop
insl
inc
sbb
and
insb
xor
shrb
out
xchg
lahf
mov
out
imul
push
or
dec
pop
popf
fs
pop
pop
jne
jecxz
sti
or
xor
mov
insb
push
ret
das
dec
inc
in
out
jge
cmpsb
mov
in
cmpsl
mov
jmp
fidivrs
cmp
xor
xor
cmp
bound
push
pop
test
bnd
test
mov
ljmp
daa
in
dec
and
jg
fstps
and
cs
mov
dec
ss
psubsw
add
movsl
mov
push
imul
aas
ror
fmull
nop
sti
mov
adc
or
xor
mov
push
push
and
out
jmp
mov
insl
test
adc
jae
adc
cmpsl
sub
add
cmp
inc
rol
jnp
icebp
ficoml
push
pop
adc
dec
and
repnz
mov
lock
int3
lods
jmp
push
and
adc
mov
cmpsb
xchg
xlat
mov
bound
lds
add
xor
fldl
sub
notl
ret
and
sub
aam
rorl
ds
mov
sub
sti
lods
je
cmc
pop
push
int
adc
not
js
nop
into
icebp
pusha
pop
xorb
cmp
xchg
call
imul
adc
mov
adc
scas
out
shl
jno
sbb
mov
xor
push
loopne
imul
dec
enter
cmp
jge
jge
ljmp
xchg
shrl
cmp
jne
lcall
mov
jae
movb
lahf
ljmp
rcr
popa
out
fs
sub
dec
dec
adc
push
sbb
xor
testl
xor
fnsave
push
out
ja
sbb
mov
mov
out
dec
bound
repz
lret
daa
icebp
inc
mov
sbb
scas
push
push
lahf
aad
lahf
and
or
out
mov
mov
xchg
jmp
dec
lods
fwait
rolb
repnz
hlt
fidivrs
and
mov
xchg
mov
sbb
sbb
cmp
sub
cmc
mov
mov
inc
and
and
in
add
inc
sarb
ret
fs
xchg
enter
mov
jne
sub
mov
xchg
push
je
inc
or
add
pop
or
add
dec
sub
inc
jge
filds
dec
pop
sub
jns
in
xchg
mov
cmpsl
pop
out
xchg
lahf
dec
ds
inc
aaa
out
push
cmp
jns
dec
movsl
xorl
movsb
jo
jmp
add
sbbl
xchg
loop
popf
xor
dec
xchg
or
ds
inc
and
fs
push
je,pt
cli
cmpsb
ret
inc
mov
inc
mov
stos
mov
outsl
sbb
cmp
jle
je
outsl
inc
adc
cli
inc
dec
frstor
stc
mov
adc
xchg
mov
sub
fcomp
fnstenv
aaa
ret
and
inc
pop
shlb
pop
fildll
andb
je
ret
inc
xchg
testl
mov
adc
mov
add
mov
loop
push
adc
xchg
leave
in
mov
hlt
mov
into
fcomps
lds
pop
test
lock
dec
cmp
push
shrl
sub
shl
mov
lea
or
and
mov
outsl
cmp
push
lcall
insl
movsl
insb
push
es
test
sti
lea
push
pop
add
and
std
mov
arpl
jo
sbbl
into
xor
cmp
add
int3
pop
inc
dec
mov
int
inc
out
lods
dec
mov
int3
push
push
pushf
cmp
sub
sbb
fisubl
aad
push
stc
call
arpl
mov
pop
into
fsubl
sbb
inc
aas
hlt
cmp
xor
mov
aam
pusha
jmp
adc
imul
cmpsb
insb
mov
inc
ret
test
out
and
arpl
or
out
and
stos
and
test
in
int3
icebp
sti
or
negl
mov
add
cmpsw
mov
out
subl
xchg
lds
enter
popa
and
fcoms
push
and
mov
shlb
adc
inc
mov
xor
mov
push
dec
insb
mov
sub
test
jno
sbb
cmp
push
cmp
ja
out
scas
mov
mov
aaa
mov
loopne
push
leave
and
adc
fyl2x
xor
jp
scas
inc
cld
push
daa
jge
aam
xchg
jbe
sarl
mov
mov
call
cld
dec
push
testl
out
push
aaa
inc
cmpsl
xlat
call
std
push
ds
es
popa
stos
jmp
mov
test
int
fmul
mov
mov
jae,pt
and
xor
int
ret
gs
loopne
aaa
cvtps2pd
mov
pushf
into
inc
jp
or
fwait
mov
out
outsb
xchg
popa
adc
inc
mov
pop
mov
dec
out
popf
pop
cld
mov
sbb
in
xor
inc
pusha
lods
fwait
lahf
and
iret
cmp
fucomi
punpckhwd
clc
movsb
push
inc
cmp
div
jae
shrl
cld
lods
das
cmp
xor
xor
push
adc
and
loope
mov
dec
fwait
js
insl
inc
mov
sbb
jae
inc
sbb
lret
and
sahf
xchg
and
add
mov
push
mov
mov
arpl
xlat
lcall
rcrb
and
push
dec
xchg
jg
push
cmpsl
mov
adc
iret
dec
int3
xor
mov
mov
inc
and
add
push
xor
push
aaa
cmpsb
xor
test
mov
pop
cli
cmp
int3
loop
iret
cmp
xchg
jecxz
int
cmp
jp
fs
sbb
pop
mov
hlt
lahf
jbe
jbe
xor
sbb
xor
daa
adc
xchg
or
std
js
pop
jle
xchg
pop
loope
out
leave
xchg
jae
jmp
gs
scas
lods
loop
ss
or
loope
icebp
rorl
jno
mov
adc
lods
je
xor
jb
pusha
outsb
sbb
std
cmp
nop
mov
mov
mov
and
leave
jp
mov
test
gs
mov
repz
stc
pusha
add
xchg
aas
xor
ficomps
mov
inc
mov
loopne
or
mov
icebp
out
xor
adc
xchg
mov
lods
movsl
xor
adc
xchg
das
mov
das
int
sbb
adc
je
push
mov
xor
add
jno
sub
fnstcw
mov
xchg
mov
pop
and
sbb
inc
mov
dec
jb
imul
ret
outsl
lods
loope
lods
rclb
ss
cmp
push
daa
xchg
mov
stos
fimuls
or
push
push
bound
aas
sbb
mov
dec
rorl
pop
mov
std
imul
outsb
mov
scas
xchg
je
sub
ret
push
cmp
jae
pop
push
lahf
dec
movq
test
out
or
xchg
mov
iret
jb
inc
push
sub
inc
test
xchg
and
jno
aam
mov
fldcw
push
inc
add
inc
mov
push
pop
jg
ds
dec
pop
inc
jb
adc
imul
sbb
add
mov
js
sbb
ljmp
mov
mov
popa
and
add
cli
mov
lock
lahf
cmpsb
sbb
lahf
hlt
loope
and
fnstsw
not
pop
push
inc
mov
test
int3
test
lods
lcall
loop
and
fiaddl
pop
insb
adc
sub
dec
jg
ds
or
test
inc
mov
mov
addb
cmpsl
loop
inc
sahf
stos
jns
ja
int3
jle
mov
addr16
xchg
cs
jp
loop
adc
fmuls
mov
daa
leave
mov
mov
imul
mov
std
incl
jbe
out
gs
arpl
jne
std
mov
sarb
rorl
imul
inc
scas
aaa
fwait
loope
popa
push
dec
inc
imul
push
in
ds
js
movsl
cltd
pop
add
leave
sbb
mov
enter
xchg
xchg
jge
addr16
sub
sbb
bound
std
pop
jg
sub
test
mov
push
loop
sub
arpl
je
xchg
mov
xor
push
andb
inc
es
mov
in
sbb
lea
adc
jne
int3
add
test
pushf
xchg
inc
loopne
shlb
inc
fwait
xchg
hlt
sbb
nop
xor
lds
scas
push
into
or
cmpsl
dec
dec
mov
sub
mov
push
aas
addr16
pop
cmp
sub
fadd
enter
call
xchg
mov
inc
dec
push
js
push
pop
cmp
sub
fadd
enter
call
xchg
mov
inc
js
sbb
ja
pop
or
cmp
call
xlat
or
call
xchg
mov
inc
adc
and
ja
pop
sbb
cmp
test
fadd
aaa
jge
out
sub
add
inc
fcoms
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
scas
aam
les
fmuls
movsb
das
sbb
inc
pcmpeqb
outsl
adc
add
xor
and
aam
les
xchg
incl
push
aas
inc
jnp
pop
outsl
js
add
xor
and
aam
les
xchg
incl
push
aas
addr16
xor
add
push
out
mov
in
mov
addl
xor
mov
outsl
adc
mov
add
adc
xchg
jnp
les
mov
nop
adc
int
xor
jne
aam
leave
inc
sahf
pop
loop
pushf
out
add
inc
xor
das
add
lock
testb
lahf
pushf
ljmp
mov
aaa
out
test
fidivs
mov
xchg
adc
cli
dec
ds
and
in
cmpsl
imul
test
stos
ret
or
mov
add
xor
ficoml
xchg
in
movsb
pop
xchg
ds
xor
pop
testl
xor
aam
les
xchg
incl
push
aas
inc
pcmpeqb
outsl
adc
add
xor
dec
jmp
hlt
cli
in
icebp
mov
stos
repnz
lock
sub
jae
or
popa
or
push
mov
mov
test
fstp
rorb
cmp
or
add
nop
fisttpl
mov
fbld
je
outsl
adc
add
xor
and
aam
les
xchg
incl
push
aas
inc
pcmpeqb
outsl
adc
add
xor
and
aam
lods
xor
mov
imul
out
mov
dec
add
lret
mov
mov
push
xchg
jne
test
cld
adc
cld
loope
push
rolb
sbb
movsb
adc
jae
cmp
cmp
and
and
loopne
fisubrs
push
dec
dec
in
sti
push
pop
sbb
jb
push
icebp
mov
subb
adc
jmp
jmp
not
cld
stos
rcll
pop
pop
add
lret
fcomip
push
dec
je
adc
dec
loop
push
xchg
lcall
pop
daa
clc
mov
inc
lcall
inc
sub
aaa
negl
xchg
mov
je
push
and
sbb
hlt
stos
mov
jno
adc
jg
hlt
bound
sub
mov
test
pop
inc
ret
push
sarb
push
and
adc
adc
out
jns
stos
jae
jmp
or
and
and
loopne
and
scas
mov
xchg
inc
jae
push
cmp
rol
xorb
pandn
xorl
cld
inc
mov
sub
pop
les
fs
dec
incl
in
sbb
into
das
ror
fsts
push
les
jb
leave
push
and
imul
pusha
icebp
dec
adc
push
lret
imul
sbb
int
pop
xchg
mov
adc
xlat
bound
lods
scas
add
bound
adc
lds
out
jg
fidivs
dec
jecxz
xchg
jp
lret
inc
dec
repz
out
inc
fs
lahf
les
je
add
shll
scas
xor
not
inc
rcrl
or
scas
sbb
mov
adc
push
xchg
sahf
push
jmp
inc
pop
aas
std
fistl
jno
adc
sub
xchg
out
mov
jnp
into
fcoms
push
cld
mov
cltd
push
in
imul
mov
test
inc
dec
sti
outsl
xchg
pop
add
insl
ret
lds
xchg
or
mov
and
test
mov
imul
clc
adc
sub
out
cmp
cmp
push
mov
nop
cld
repnz
clc
and
inc
dec
popa
and
movsb
movsl
popa
fistps
jo
cmp
xchg
mov
push
jnp
out
leave
daa
mov
lods
dec
icebp
jmp
lret
inc
dec
sbb
xor
or
xor
test
das
or
ss
bnd
out
jbe
popf
ficompl
popa
and
mov
stos
fwait
pusha
dec
or
fs
mov
out
adc
push
int
or
pop
pop
sub
in
mov
jmp
fs
jl
push
and
push
xchg
xchg
repnz
ficompl
imul
pushf
lods
xor
sub
xchg
mov
pop
out
or
orb
xlat
mov
dec
push
xor
xchg
xor
call
add
mov
mov
cld
mov
lds
sbb
mov
aad
jb
xor
cmp
add
sub
push
xlat
inc
sub
in
imul
aam
fldt
or
xlat
dec
pop
orl
mov
pop
add
xchg
flds
das
fdivrp
mov
outsl
ljmp
mov
push
xchg
jbe
xchg
xchg
in
fists
lret
push
sbb
bound
or
into
and
push
or
js
sahf
nop
aaa
jl
addl
push
fstpt
xchg
lcall
cmp
push
cmovp
imul
and
mov
ljmp
movsl
movsl
xchg
pop
adc
cmpsb
iret
stos
scas
stos
mov
xlat
pop
pop
jecxz
pop
push
push
add
sbb
movsl
out
dec
cmp
mov
push
mov
dec
jg
sub
aad
and
fsubrl
sti
sub
dec
mov
pushf
dec
out
xchg
cli
popf
xchg
mov
push
ds
xor
and
insl
push
ljmp
fisubs
scas
dec
in
inc
or
jb
mov
scas
jns
mov
in
xchg
aas
xor
mov
icebp
sub
push
inc
sub
jb
push
ja
lds
dec
xchg
mov
iret
jne
jae
testb
and
mov
jg
add
xchg
loopne
mov
push
mov
cmp
outsl
mov
je
andps
into
mov
js
test
hlt
sub
mov
popf
movsb
push
insl
mov
jno
xchg
pop
or
fsubrl
push
and
mul
enter
scas
add
ja
ja
jne
pop
lods
pop
xor
inc
xchg
mov
add
adc
ret
mov
test
popl
jb
divb
adc
fists
rcll
xchg
push
jno
mov
ret
mov
icebp
mov
rcrl
sbb
inc
cwtl
or
test
add
push
cmp
xchg
popf
imull
mov
inc
sarb
add
pop
fbld
adc
hlt
bswap
mov
in
add
es
mov
adc
adc
std
mov
adc
ss
mov
cmp
pop
addr16
popf
scas
cmpsl
movsb
jle
int
pushf
das
int
xchg
rcll
or
mov
or
xor
inc
ficomps
mov
bound
cmpsb
lock
ljmp
cld
or
jecxz
dec
pop
aas
dec
pop
leave
outsl
sbb
lcall
push
cmc
xor
jg
sub
fsts
jno
xchg
ljmp
or
sub
or
push
arpl
xlat
test
pop
rorb
inc
lret
jmp
and
add
mov
pop
sbb
mov
jp
test
pop
sbb
stc
sbb
pop
xchg
jecxz
xorb
subl
and
shlb
cld
jmp
push
rclb
movsb
pop
jge
pop
cld
jns
jns
fwait
mov
xor
mov
pusha
jle
inc
aaa
arpl
mov
inc
and
cmp
xor
mov
push
push
lds
sub
outsl
or
push
int3
sub
cmpsl
cltd
dec
or
in
xchg
repnz
or
test
jb
outsl
mov
lcall
push
pop
stc
sub
jge
imul
push
ret
pusha
jo
pop
or
shrl
add
inc
sbb
pop
mov
push
jle
fistps
or
dec
xchg
mulb
jns
cmc
cs
subl
add
mov
insl
addr16
hlt
xchg
lcall
lds
push
jl
inc
dec
xchg
xor
mov
push
push
es
sub
pop
push
in
and
xchg
or
ljmp
pop
pop
fs
mov
cwtl
iret
sarl
jno
adc
int
stc
cmp
sub
pop
insb
push
scas
push
loope
sub
aad
adc
cmpl
jne
xor
popfw
shll
lds
jge
ja
sahf
out
or
lcall
mov
push
ja
aad
in
pop
and
mov
out
loop
pop
sti
mov
iret
mov
push
popa
sar
loope
popa
xor
push
pop
lock
add
lret
je
sub
sbb
repnz
push
rcrb
popa
cli
outsl
loopne
sahf
cmp
jae
nop
out
mov
call
xor
sbb
jb
push
or
dec
jecxz
mov
les
cmp
pop
test
movsb
pop
out
mov
inc
outsl
mov
scas
je
add
stc
dec
cmp
cmp
mov
sub
xor
mov
mov
lds
loop
sbb
shr
push
or
adc
jmp
lods
mov
jle
cs
rcl
push
xchg
mov
adc
push
sub
xlat
lods
movsl
dec
ret
popf
pop
andl
sbb
push
repnz
mov
cmp
cmp
and
inc
mov
xchg
pushf
xchg
leave
dec
xchg
xchg
sbb
sbb
ret
ja
jl
insl
pushf
pop
movsb
movsl
push
lret
scas
jne
movsl
leave
pushf
stos
pop
fwait
jmp
pop
addb
mov
ds
pop
xchg
mov
lds
orl
ja
sub
mov
fdivrl
add
inc
jg
pop
arpl
mov
cmp
notl
jo
aam
sub
call
lods
xlat
rolb
and
ret
int3
inc
dec
mov
jmp
mov
insl
jne
shll
add
sub
sarb
repz
push
cmpsb
pop
add
adc
fldcw
sbb
and
mov
xchg
mov
lcall
loope
je
stos
cmpsb
mov
and
dec
jl
scas
mov
mov
iret
mov
xchg
cmp
aaa
out
lods
dec
daa
fsub
ficoml
out
arpl
jg
imul
push
test
and
rcll
test
cmp
stos
sbb
sbb
decb
mov
mov
mov
dec
popf
out
data16
or
rorb
roll
mov
add
push
ja
enter
loope
scas
mov
test
mov
cmp
lret
xchg
jl
or
loop
dec
mov
add
adc
sbb
ret
inc
xchg
ds
jle
incb
fildll
out
mov
and
and
out
and
bound
mov
jecxz
jp
rcll
jle
push
sbb
xchg
stos
adc
xor
shll
inc
loop
imul
lods
sbb
fdivs
in
xor
push
xchg
lods
stc
jno
or
leave
ds
mov
xor
aad
rol
loope
push
cwtl
imul
xchg
aas
dec
jno
pop
push
dec
or
pop
out
cmp
mov
push
cmpsb
fwait
inc
data16
fidivrs
daa
pop
adc
inc
jp
lock
sbb
xchg
push
icebp
inc
and
orl
arpl
and
cmp
popf
shrb
adc
data16
out
or
aam
outsl
in
push
mov
out
rcrb
lret
mov
push
test
lcall
test
ja
lcall
mov
mov
loop
inc
inc
aaa
mov
shrl
subl
push
or
call
pop
pop
sahf
xchg
xchg
or
call
ss
push
sub
pop
add
xor
mov
sub
dec
xor
dec
sub
pop
push
out
pop
mov
jo
push
or
cld
sbb
xor
cwtl
mov
cmp
cmp
pop
loope
mov
call
bound
dec
add
pop
sub
shlb
mov
cmp
sbb
mov
sahf
xor
call
push
push
scas
jns
lahf
pop
int
inc
or
out
jl
inc
hlt
test
mov
popf
jbe
push
in
adc
and
imul
pop
das
cld
testl
push
test
dec
js
mov
add
fidivs
ds
mov
inc
adc
mov
mov
or
pop
imul
mov
mov
pusha
in
dec
sbb
cmp
mov
xor
imul
int3
pop
mov
ljmp
inc
lret
lock
aaa
jmp
ljmp
cld
data16
xchg
mov
rclb
sub
lds
fimuls
leave
mov
pop
or
insl
dec
int3
pop
xchg
lods
je
fs
into
sub
xchg
add
mov
cmp
dec
adc
movsl
adc
call
and
loop
dec
nop
out
ds
inc
ret
mov
push
mov
andb
pop
adc
mov
jnp
ret
divl
push
adc
test
loop
aas
push
or
xor
and
fs
pop
push
add
in
push
popf
mov
or
imul
push
jle
nop
mov
xchg
and
ja
fistps
inc
loope
icebp
mov
xchg
pop
mov
lods
in
jo
sub
mov
fidivl
cmp
test
mov
xchg
ljmp
dec
dec
cli
dec
mov
or
in
jle
push
movsb
fists
test
jo
ror
subl
mov
mov
js
add
sbb
push
lock
dec
jge
repnz
cmpsb
bound
pop
movsl
lds
and
pop
jecxz
mov
xor
or
xlat
inc
popa
movsl
lds
lahf
adc
or
dec
sub
inc
mov
fbstp
adc
dec
sub
scas
push
test
cld
and
adc
xchg
mov
lahf
xchg
push
cli
data16
faddl
push
arpl
clc
ret
addr16
pop
sbb
leave
jmp
push
inc
push
dec
int3
dec
push
daa
ja
push
adc
shl
adc
ret
aad
scas
sbb
push
aam
movsb
lea
and
xor
dec
sbb
jns
push
ret
add
mov
repnz
outsl
movb
pop
sbb
fldl
into
xchg
fsubrs
and
ret
andb
pop
in
clc
je
das
sbb
dec
ror
mov
sub
and
sbb
mov
cmp
jae
not
aad
xor
pop
or
adc
les
push
inc
gs
mov
push
adc
lods
lret
pop
enter
test
sahf
sbb
fists
inc
cmp
mov
fstpl
addl
aas
out
sbb
pop
adc
mov
add
repnz
je
and
xor
cld
cltd
mov
jbe
push
out
fidivs
sub
clc
add
outsb
rolb
out
es
mov
loop
imul
mov
cmp
out
jae
js
int
or
pop
push
mov
or
stc
dec
mov
cwtl
push
rcrl
xlat
test
mov
cmp
xor
adc
jp
xchg
ljmp
xchg
push
fildll
cmp
popa
sub
pop
jecxz
repnz
scas
inc
ret
jmp
xchg
daa
pop
test
ja
sub
mov
pop
loopne
add
movsl
subb
inc
mov
fwait
mov
bnd
mov
insb
jns
shlb
sub
stc
dec
hlt
fmulp
jnp
xor
inc
sbb
pop
xchg
and
scas
xor
sahf
pop
xor
aas
pop
sub
xchg
sti
add
test
stc
out
gs
or
cltd
pusha
jbe
mov
bound
mov
pop
pop
or
cmc
pop
xchg
dec
rorl
adc
cmp
cld
lea
cmp
arpl
inc
pop
push
and
add
call
filds
push
dec
stc
gs
cmp
aaa
or
dec
push
aas
js
insb
clc
ror
mov
add
test
xchg
inc
and
mov
jbe
enter
scas
enter
cmp
push
mov
mov
popa
cmp
inc
dec
push
int3
inc
cmp
hlt
mov
iret
sub
or
inc
inc
jmp
cmp
sbb
pop
imul
and
mov
sub
stos
cmp
int3
dec
loope
ret
ljmp
mov
cmp
pushf
sbb
in
out
mov
pusha
int3
sub
mov
pop
xchg
xor
or
out
jecxz
pop
pop
mov
adc
add
inc
or
aas
jbe
dec
ljmp
out
fwait
xor
pop
xchg
insl
mov
rcrb
push
sbb
stos
imul
aam
inc
ljmp
push
out
js
imull
mov
mov
push
rorb
les
bound
cmp
push
pop
aas
lret
bound
outsl
sahf
and
out
cmpsl
aas
popf
iret
ljmp
cmpsb
inc
fwait
inc
repz
cmp
xchg
xchg
mov
mov
and
cmpsb
or
test
shr
fcomip
mov
adc
or
and
lcall
jp
repz
lea
adc
in
pop
mov
ret
ret
divl
rorb
ret
testb
sbb
outsb
into
mov
es
push
lds
mov
mov
mov
cmp
sub
popf
mov
test
push
xor
jp
ret
dec
push
cwtl
add
xchg
imul
ret
xchg
mov
mov
lods
xchg
clc
aam
outsl
mov
mov
pop
sbb
ficomps
clc
insl
pop
scas
cmc
lahf
rcrb
stc
and
inc
jbe
mov
popa
in
cmpps
mov
jp
adc
cli
lcall
or
dec
je
sahf
cmpl
push
and
or
jbe
lcall
sub
psubusw
jnp
sub
xor
hlt
shll
aas
and
push
out
test
ss
xchg
mov
stos
push
xor
cltd
ret
mov
rolb
fwait
addr16
pop
jno
xor
sub
pop
mov
push
lods
push
int
popl
xor
fcoml
mov
add
leave
inc
sub
idivl
mov
notl
mov
paddq
stc
insb
repz
or
sbb
mov
cld
out
and
icebp
jecxz
repnz
sahf
imul
lret
fmuls
pushf
and
rorl
mov
iret
pop
je
and
sub
aam
fwait
insl
mov
sbb
sbb
lods
xchg
jo
movsl
scas
mov
push
cmp
mov
ljmp
test
or
addr16
inc
sub
xor
xchg
mov
jl
jle
repz
loope
test
mov
rorb
add
and
decb
cs
data16
int3
ret
cmp
repz
ja
daa
cmp
or
inc
pop
cmpsl
sbb
mov
push
add
test
cli
pop
push
lods
daa
shl
ffree
mov
add
test
ss
adc
ss
xchg
subb
push
lods
cmpsl
and
push
dec
movsb
jecxz
mov
ds
adc
cmpsl
adc
pop
repz
mov
ret
lock
cmpsl
test
dec
ficomps
pop
mov
lods
cmpsb
ljmp
or
loopne
push
hlt
sub
push
arpl
insb
insl
fs
divb
bound
lock
leave
das
push
imul
jnp
and
outsb
data16
in
adc
and
stos
in
jp
add
jl
inc
jnp
inc
lea
stos
stc
mov
stc
jbe
movsb
mov
js
pop
sbb
cmp
dec
cmp
cmp
mov
add
xchg
std
loope
and
movsl
mov
inc
or
mov
push
lds
ja
arpl
and
push
lcall
push
jne
mov
xchg
aad
dec
jb
rcl
ja
rcrl
xchg
or
int3
mov
push
lea
inc
pop
pop
sbb
aad
xchg
sub
pushf
jne
cmpb
imul
nop
mov
pop
test
dec
negl
pusha
add
mov
push
ret
outsb
lcall
lea
push
mov
fnsave
jns
and
cmc
add
into
mov
dec
dec
cmp
iret
daa
jbe
mov
cmp
sub
lcall
xchg
lds
sbb
cmc
pop
fists
lods
mov
in
out
inc
popf
into
dec
jb
push
imul
inc
fsubl
outsl
jno
xor
pop
outsb
call
stos
lock
int3
ret
mov
push
mov
fadd
sbbb
fstpt
int
cmc
scas
std
scas
jnp
or
gs
pushf
add
rcrb
inc
sahf
insb
movsb
in
cld
imul
dec
fidivl
mov
push
mov
pop
xchg
nop
fistpl
mov
sbb
jl
lock
pop
out
in
inc
mov
fdiv
lock
cmpsl
push
stos
push
imul
pop
cmp
stos
fwait
repnz
aam
cmpsb
shll
je
add
inc
aad
outsl
mov
jle
stc
push
fs
int
jmp
pop
lods
inc
inc
xor
xchg
sub
iret
sahf
shl
aam
sbb
clc
dec
push
ret
test
sbb
ror
pop
ret
cmpsl
out
orb
lds
xchg
mov
mov
xor
fsubp
dec
fs
sub
jmp
inc
test
add
inc
or
inc
mov
inc
insb
lds
adc
movsl
jns
dec
add
inc
repnz
lods
std
insl
xchg
test
mov
adc
sub
rorl
jno
sbb
jge
loope
call
in
scas
sub
loope
ret
push
mov
pop
and
and
pushw
mov
xchg
dec
enter
sub
ja
loopew
stos
dec
out
inc
pop
xor
imul
sub
fdivl
jle
jae
xchg
adc
cld
lea
jb
pop
lods
xlat
jno
dec
stc
bswap
int
outsl
pop
mov
test
rol
inc
imul
in
lods
addl
stos
pop
xor
js
add
jno
stc
les
xchg
incl
push
aas
inc
pcmpeqb
outsl
adc
add
xor
and
aam
les
xchg
incl
push
aas
inc
pcmpeqb
outsl
adc
add
xor
and
aam
les
xchg
incl
push
aas
inc
pcmpeqb
outsl
adc
add
xor
and
aam
les
xchg
incl
push
aas
out
movsl
je
adc
pushf
idiv
mov
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
cmp
mov
movsb
jecxz
sti
lods
in
adcb
inc
xor
and
push
adc
xor
roll
aam
les
inc
push
add
sbb
arpl
add
and
add
xor
sbb
sbb
adc
push
arpl
insb
add
and
shll
pop
push
andl
int
dec
cmp
scas
out
aam
mov
cmp
cwtl
test
inc
mov
cmp
pusha
jecxz
mov
iret
out
shll
out
cmc
arpl
jb
mov
pop
push
mov
xor
dec
push
scas
sti
mov
stos
adc
ret
xchg
cmp
leave
aas
icebp
jecxz
xchg
cmp
add
fnstcw
cld
popa
int3
fwait
scas
adc
jns
dec
jbe
sbb
xchg
inc
xchg
mov
lods
and
scas
push
adc
mov
mov
and
adc
dec
xchg
add
pop
out
push
jno
sbb
inc
xor
push
inc
les
daa
je
cmpsl
roll
aam
addb
push
xchg
inc
in
jae
arpl
pop
add
dec
out
bnd
lock
out
test
jne
inc
aaa
sbb
cmp
xor
bound
outsl
xchg
mov
les
ss
adc
daa
jo
push
out
mov
les
les
adc
add
xor
and
push
adc
xor
roll
aam
les
adc
add
xor
and
push
adc
xor
roll
sbb
sti
movsb
cwtl
pop
stos
aas
xchg
int
gs
mov
sbb
shl
push
sbb
lahf
mov
sbb
mov
inc
std
enter
sbb
pop
add
push
push
or
dec
add
test
push
xor
pop
lahf
iret
xchg
xor
in
lret
push
loope
fisubl
xorb
inc
out
fs
push
scas
rorb
push
jo
and
mov
cwtl
cli
push
pop
mov
xor
jbe
dec
ret
sbb
int3
pop
xchg
sahf
out
add
fmuls
pusha
push
hlt
pop
jp
cwtl
out
inc
inc
divl
lods
in
mov
add
add
and
mov
or
ljmp
mov
daa
dec
cmp
push
push
movsb
imulb
test
fisubl
cmp
mov
repnz
adc
sbb
dec
data16
xchg
sub
cs
mov
jne
xor
and
arpl
incl
adc
push
f2xm1
mov
test
xchg
mov
in
xchg
int3
je
push
je
repnz
es
mov
ror
daa
mov
xor
sub
out
test
sbb
dec
jecxz
push
cltd
fstpl
pop
push
cmp
or
push
jne
jno
and
divb
outsb
sub
adc
leave
dec
push
add
and
rcrl
out
movb
test
add
rcrb
lock
jns
adc
or
xchg
mov
push
or
cld
pop
add
xor
pop
gs
adc
out
pusha
popf
push
xlat
into
adcb
push
push
jns
mov
sbb
pop
push
inc
mov
clc
and
scas
pop
jle
adc
add
outsl
mov
sbb
int3
insl
lds
lcall
mov
jns
cmpsb
cld
roll
fdivrs
xchg
pop
divl
movsb
sbb
cmpsl
mov
and
xor
add
shrb
fucomp
mov
hlt
fdivrp
push
das
iret
mov
cmpsl
fdivrl
mov
or
cmp
add
pusha
jge
das
xchg
ror
and
lret
fcmovnb
inc
jbe
xchg
dec
sbb
daa
mov
cld
jmp
add
jns
cmp
stos
fsubs
scas
sti
ret
pushf
pop
jle
jecxz
rorb
incl
xor
mov
push
ljmp
mov
mov
das
sbb
movsl
fldcw
pop
push
aam
jg
xchg
inc
out
push
lcall
mov
and
shrb
ret
mov
add
repz
mov
insb
fidivrs
cmp
test
pop
jmp
xor
push
jmp
or
mov
add
adc
sub
push
sub
pusha
push
ret
lret
and
xor
add
int3
icebp
or
jno
add
cmp
adc
inc
hlt
jbe
mov
cmp
arpl
mov
faddp
push
lahf
scas
adc
jmp
inc
push
insl
aas
push
hlt
mov
push
in
and
mov
push
push
std
fwait
push
or
cmc
add
lahf
adc
push
je
inc
jnp
mov
mov
imul
sub
and
sbb
mov
int3
cmpsl
pop
sar
rcrb
rol
lds
push
mov
dec
mov
leave
loope
fnstcw
jb
movsb
lds
ret
icebp
mov
inc
xchg
sbb
clc
inc
fnsave
scas
adc
test
xor
outsb
mov
cmp
outsl
push
loope
popf
mov
in
sbb
mov
or
or
gs
jmp
push
arpl
sub
sub
gs
mov
fwait
hlt
mov
imul
mov
repnz
push
divl
iret
lret
inc
bound
xchg
jp
adc
inc
loopne
and
push
fucom
mov
adc
push
jle
enter
outsl
dec
movsl
idivl
int
jge
push
push
negl
sub
aas
jmp
sub
dec
hlt
test
movsl
inc
pop
inc
adc
fcom
test
shll
dec
cmp
loop
adc
or
mov
xor
daa
xchg
popa
push
loopne
adc
int3
mov
ror
jns
lret
jg
fcoml
jg
xchg
pushf
push
cmpb
lods
ljmp
jecxz
mov
out
pop
mov
lahf
and
sbb
and
stos
mov
adc
mov
sbb
add
adc
dec
push
sub
out
inc
ret
scas
or
pop
dec
and
mov
lret
xchg
dec
mov
inc
or
sbb
in
lds
test
enter
aam
enter
enter
jg
push
push
push
xchg
mov
dec
mov
and
jle
je
mov
pop
rcl
push
sbb
jns
pushf
mov
sti
sub
xor
mov
scas
jo
cmp
jae
outsl
mov
adc
fdivs
loopne
mov
and
repz
or
add
cld
mov
mov
mov
add
lods
mov
clc
and
pop
sbb
cmpsb
jns
inc
mov
out
nop
fbstp
mov
fwait
aas
daa
inc
lret
jg
push
orb
jne
add
sbb
movsl
mov
mov
jnp
loopne
dec
fimull
inc
lock
add
bound
sbb
orb
fucomip
insl
enter
cmp
stos
push
pop
push
adc
loop
movsl
or
and
das
dec
push
ss
adc
and
mov
xor
xor
inc
mov
or
sub
xor
push
rclb
add
sbb
jb
xor
repz
lahf
mulb
xchg
popf
xchg
pop
insb
popa
xchg
movsl
aad
shlb
dec
sub
dec
mov
stos
push
push
mov
lea
fcomps
repz
xchg
cld
xchg
imul
div
cltd
pusha
hlt
inc
andb
sbb
mov
cmp
loop
loop
and
sub
add
dec
and
sbb
xorl
mov
stc
test
mov
sub
jne
xor
insl
bound
mov
mov
mov
or
cmp
push
push
dec
insb
adc
cwtl
scas
cld
subb
les
adc
sti
push
es
jbe
mov
push
add
cs
imul
pushl
inc
bnd
fldl
bound
sbb
in
mov
inc
adc
mov
rclb
dec
inc
push
cmp
fwait
xor
jp
or
shl
out
fsubs
aas
add
ja
dec
repnz
inc
leave
sbbb
mov
sbbb
xchg
iret
xchg
int3
sahf
jae
clc
stc
sbb
loope
les
outsl
push
mov
mov
int3
outsb
iret
stc
mov
xor
inc
cltd
dec
and
mulb
ret
lcall
inc
rcll
adc
fwait
adc
in
scas
nop
sbb
mov
mov
leave
pop
add
and
into
adc
mov
add
and
pop
ficomps
jo
lret
pushf
nop
mov
popl
pop
loope
cmp
imul
mov
adc
fs
pop
xor
jb
sub
rcrl
add
lods
fistl
add
adc
jo
dec
fstpt
frstor
test
ljmp
sub
push
jb
insb
mov
pop
add
xor
xchg
dec
jge
jp
adc
push
and
dec
test
mov
adcl
cmp
shlb
addr16
jo
xchg
xchg
mov
xchg
lret
cmpsb
mov
xchg
cmp
scas
adc
nop
mov
dec
loopne
push
xor
fwait
pop
pop
xor
and
mov
mov
jb
xor
mov
sbb
das
int3
or
mov
orb
mov
mov
and
leave
std
jne
pop
sub
out
or
pop
xor
inc
jae
or
adc
lea
inc
shr
push
bound
fadds
mov
mov
shl
pushf
fstps
inc
cltd
mul
adc
sbb
js
jg
add
testl
insb
imul
lods
fstpl
dec
dec
jne
fisubrl
iret
lret
out
js
push
and
in
and
in
inc
inc
cltd
inc
das
dec
inc
jmp
pop
xor
inc
xor
les
cmp
rolb
xor
movsb
aaa
xchg
add
lcall
xchg
jns
or
push
lret
fisubrl
push
inc
and
mov
and
or
jp
lock
out
in
jb
lods
or
in
faddl
adc
int
or
mov
pusha
adc
mov
pop
add
cltd
sbb
xchg
and
in
mov
lcall
outsb
lock
inc
fimuls
int
lea
xchg
sti
xchg
stos
mov
adc
jg
hlt
hlt
int
cwtl
mov
cld
pushf
and
xorl
test
popf
je
jl
aas
lret
pop
ror
dec
push
xchg
xor
cmc
mov
in
psubusw
pop
jmp
loop
jecxz
or
int
sarb
adc
push
push
lret
dec
jb
sahf
leave
insl
mov
dec
adc
jmp
pop
rclb
popf
test
adc
lods
std
pushl
inc
je
sbbl
ret
inc
outsb
dec
mov
xchg
rcll
out
ret
jo
add
mov
andl
movsb
fs
xor
inc
fmuls
xlat
mov
inc
std
insb
cltd
fcomps
movsl
std
shll
jl
in
adc
pushf
lds
fdivrl
sbbb
imul
scas
add
pusha
xor
pop
lcall
cmpsb
push
in
sub
or
xchg
jne
mov
lret
popf
push
sar
imul
sbb
xchg
mov
test
test
sub
jne
in
sub
es
lods
mov
lods
dec
mov
mov
int3
aad
lret
push
rcll
jge
mov
xchg
mov
fidivl
repnz
repnz
test
imulb
or
pop
mov
xor
dec
stos
js
mov
ficoms
mov
pop
mov
arpl
subb
cmc
out
hlt
pop
sarl
andl
sbb
test
pop
repz
dec
jns
push
rolb
inc
mov
jg
call
lcall
in
sub
and
in
out
divb
movsl
mov
fadd
stos
es
xchg
dec
dec
cmp
push
aas
je
adc
adc
nop
mov
dec
rcrb
push
mov
sub
lcall
adc
pushf
jae
sar
shll
nop
ja
stos
leave
rorb
dec
jbe
sub
lods
popa
out
or
or
icebp
cmc
pop
js
inc
filds
in
dec
pop
inc
aad
gs
jmp
sbb
pop
lods
sbb
pusha
cmpb
mov
xlat
cmp
mov
mov
rorl
mov
sbb
pop
or
cmp
mov
push
test
jp
pop
fldcw
mov
mov
inc
cmp
aaa
dec
aam
mov
mov
insb
inc
imul
enter
jmp
lods
pop
ss
xor
mov
xor
pop
out
movsl
pop
xchg
pop
sub
mov
mov
cmp
xor
sbb
insl
pushf
jl
pop
xlat
sub
and
je
pop
lahf
jb
repz
bound
mov
outsb
adc
cmp
mov
sbb
fs
add
pop
jno
mov
shll
jo
cld
mov
loop
dec
lret
movsb
mov
mov
popf
adc
or
cmp
dec
movsl
sbb
sub
push
pop
loope
or
pop
jne
mov
rolb
movsl
jo
aaa
insl
inc
sub
jmp
xor
repz
xorl
enter
pop
mov
ret
lahf
jmp
pop
cltd
adc
movsb
leave
push
test
movsb
hlt
shr
in
sub
mov
das
outsb
cmp
sarb
leave
dec
ss
xchg
inc
in
pop
xor
leave
shlb
xchg
mov
stos
js
and
ficoms
outsb
inc
cwtl
pop
push
sub
mov
cwtl
mov
cmp
or
push
stos
call
leave
inc
dec
xchg
mov
mov
aad
ja
test
in
sbb
jb
dec
fsubrl
adc
lcall
mov
push
test
jge
test
decl
stos
mov
mov
stos
les
sbb
sbb
sbb
test
stos
fcmovb
popf
ret
dec
dec
push
cmp
sbb
fisubs
aad
in
ds
movsl
daa
pushf
ret
es
jnp
mov
stos
cmc
sub
popf
pushf
xchg
icebp
dec
jmp
repz
mov
pop
into
inc
shll
mov
adc
mov
sbb
xchg
adc
inc
sub
int
hlt
insl
mov
jg
lea
cli
mov
cmpsb
pop
repz
out
out
push
mov
nop
mov
pop
dec
das
cmp
adc
xor
lods
adc
mov
push
jle
ror
repnz
jae
cmp
dec
insb
lea
int
or
jae
in
test
xor
mov
fidivrl
test
jl
pop
and
ret
xlat
jmp
out
rep
rorl
stos
mov
mov
cmp
ret
cmp
sub
adc
ret
xor
mov
add
sub
xor
mov
sub
call
dec
fwait
xor
mull
outsl
lea
and
jns
lock
xchg
inc
mov
mull
mov
sub
fs
gs
rorl
int3
ljmp
ret
add
push
mov
mov
inc
jae
scas
stos
mov
scas
mov
mov
or
mov
mov
push
cmc
mov
pop
dec
stos
jg
addr16
scas
inc
out
jns
jl
push
xchg
push
or
popa
push
dec
ss
jg
fs
fimuls
mov
popf
xlat
sahf
mov
aas
sbb
jg
adc
imul
in
add
pop
test
sub
andl
mov
mov
pop
pop
mov
and
jmp
xchg
push
sbb
std
mov
jecxz
test
scas
add
mov
adc
stos
pop
jne
mov
xlat
out
push
add
aam
mov
or
popa
in
rcll
negl
mov
cmpsl
sub
and
loope
jmp
ret
pop
sbb
push
ret
das
lods
adc
add
sbb
out
leave
callw
gs
test
insb
cmp
sub
outsl
push
adc
xchg
outsb
pusha
and
ljmp
ror
mov
lcall
sub
pop
and
xor
pop
mov
xchg
mov
sahf
dec
mov
out
pop
inc
sub
ja
in
je
dec
scas
lahf
inc
or
inc
sbbb
mov
mov
xchg
loop
lods
aam
cmc
xor
cmpb
lret
je
mov
mov
ljmp
jae
mov
popf
cmc
adc
xchg
sub
mov
mov
add
sbb
aaa
insl
xchg
xchg
push
test
sbbb
add
adc
mov
mov
int
mov
and
scas
call
fwait
pop
mov
movaps
in
mov
pop
fisttpll
adc
sbb
pusha
or
mov
int
pushf
fmuls
push
adc
lret
adc
out
lret
fidivrs
pop
les
addr16
mov
lahf
push
jle
mov
pop
and
jbe
shlb
popf
stos
das
mov
repnz
cwtl
xor
pop
das
pushf
pop
mov
subb
aam
notb
in
je
sarb
insb
popf
sarl
sbb
mov
sub
mov
mov
je
push
shr
imul
jge
push
in
jae
xchg
cli
iret
jle
mov
cs
mov
push
push
and
jb
loopne
dec
cmc
xchg
push
push
jb
pop
sti
dec
dec
cs
adc
jp
push
imulb
pop
loope
mov
xchg
inc
xchg
sbb
outsl
adc
int3
cmp
push
xor
inc
push
imul
mov
inc
es
pop
sti
dec
pushf
das
xor
mov
pop
cwtl
sarb
dec
cmp
add
inc
jmp
testb
inc
data16
lret
push
fdivrs
xor
sbb
sbb
rcrb
pop
xchg
xor
mov
dec
mov
inc
addr16
xchg
mov
push
dec
lahf
repz
jb
hlt
scas
mov
jbe
imul
insb
sbb
cmp
int3
mov
into
pop
cmp
insb
push
mov
mov
mov
in
push
repz
rcl
cmc
inc
test
into
scas
lcall
push
and
cmpsb
xchg
xchg
add
add
shl
xor
sbb
xchg
cltd
adc
jbe
xor
daa
push
mov
xchg
arpl
std
int
fwait
push
push
sahf
pop
lods
loopne
push
out
mov
stc
sub
inc
call
or
xchg
or
std
mov
icebp
loopne
cltd
mov
dec
xchg
cmpsl
fwait
cmp
iret
fstpt
andb
bound
sbb
shrl
push
and
lret
lds
sbb
lret
or
xor
lds
fs
adc
ja
xchg
inc
aam
and
movsb
and
sbb
mov
out
int
mov
lods
shlb
add
xor
inc
pop
icebp
icebp
mov
mov
enter
std
pushf
xchg
sub
out
xor
sub
xor
vpcmpgtb
adc
stos
xor
adc
pushf
lahf
and
out
gs
cmp
jo
clc
adc
cmp
fs
xchg
inc
inc
movsb
sub
push
lcall
pop
adc
leave
nop
aas
jns
push
jb
jge
out
add
out
repnz
rcr
test
cmpsl
jp
sub
out
cmp
and
stos
push
lret
and
cmp
shll
mov
test
mov
stc
push
mov
xor
popa
popa
cmp
adc
dec
add
mov
stc
mov
loopne
pop
xchg
push
aaa
inc
mov
jge
les
xchg
and
mov
dec
jmp
out
jg
dec
hlt
movsb
dec
mov
mov
jae
push
dec
xchg
adcb
lock
sbb
dec
pop
hlt
add
xchg
and
lock
adc
inc
sti
bnd
lea
aad
dec
lea
scas
movsb
imul
xor
divb
cltd
in
arpl
and
add
mov
cmc
ret
cmpsb
out
pop
mov
mov
sub
or
sahf
lea
rorl
aas
xchg
ds
mov
or
push
ficompl
pop
repz
pop
push
dec
xchg
out
iret
ds
sbbb
push
mov
in
out
dec
cmpb
adc
mov
add
sahf
js
lock
cmpsl
xchg
mov
pop
mov
verw
mov
dec
pop
jo
add
jecxz
test
movsb
cmpsl
add
fmull
pop
jbe
jl
xchg
js
xor
jb
in
mov
dec
xchg
fdivrs
mov
mov
iret
ja
jnp
data16
in
hlt
mov
xchg
scas
sbb
xor
dec
repz
std
fsubp
cwtl
push
cli
repnz
or
repnz
adc
pop
gs
mov
dec
mov
in
jo
testl
jae
mov
jmp
adc
mov
inc
push
data16
dec
shlb
stos
loop
out
pop
inc
dec
test
and
cmpsl
xchg
add
aam
xchg
xchg
xchg
and
push
cmpsl
adc
xchg
cmovs
cmp
cmpsb
sbb
je
mov
or
push
xor
stos
data16
and
sub
xchg
xlat
xor
test
inc
or
add
xchg
ljmp
imul
leave
dec
sbb
push
push
rorl
mov
decb
and
cli
ss
mov
movsl
inc
out
adc
sbb
add
cmp
sub
mov
fistpl
sbb
adc
lods
scas
inc
mov
mov
in
mov
repz
xorb
lcall
push
and
sahf
dec
lods
cmp
push
jmp
mov
sub
repz
jg
daa
ret
pop
sarl
bound
sub
mov
xchg
mov
mov
push
mov
cmpsb
in
rorb
push
imul
or
imul
data16
push
leave
and
call
mov
rorb
mov
mov
sub
dec
jecxz
jne
mov
ret
pop
repz
xor
in
adc
add
xor
and
push
adc
xor
roll
aam
les
adc
add
xor
and
push
adc
xor
roll
jecxz
xchg
rolb
mov
mov
cmp
adc
jo
push
and
mov
aam
aam
hlt
mov
mov
sahf
jae
adc
fwait
int3
cld
mov
faddl
push
shll
jb
iret
andb
iret
cmp
loop
repz
add
xor
push
shll
jb
add
xor
ret
push
loop
bnd
fs
adc
rcll
loope
icebp
add
xor
mov
pop
addb
xlat
inc
faddl
lea
mov
lret
cmp
mov
ret
imul
cmp
mov
repz
sarl
lea
adc
sub
cmp
push
push
scas
sbb
adc
pusha
adc
pop
adc
pop
ss
addr16
test
inc
xchg
xor
out
sub
inc
dec
push
les
hlt
jb
and
test
push
scas
sbb
cwtl
hlt
jge
shl
and
mov
push
cld
pop
or
jle
lock
sub
jno
push
insl
add
dec
mov
mov
pop
stc
stc
ror
sbb
inc
and
adc
mov
adc
inc
out
xor
mov
push
shll
jb
add
xor
loop
bnd
add
ja
shll
or
pusha
in
les
mov
loop
mov
xorl
rcll
daa
lods
aaa
mov
add
push
aam
mulb
cmpsl
and
and
push
repnz
inc
gs
adcb
test
mov
adc
ret
push
loop
bnd
add
xor
push
shll
jb
add
xor
loop
bnd
add
xor
ja
decl
adc
leave
test
mov
jecxz
loope
lret
cmpsb
push
jp
lcall
imul
ja,pn
xor
jnp
xchg
push
pop
sahf
push
adc
and
xor
add
ret
cmp
xor
xchg
insb
sarb
imul
repnz
arpl
adc
inc
scas
xchg
or
mov
mov
jle
int
in
aad
adc
jne
hlt
inc
push
mov
leave
lret
repnz
dec
pop
pop
xlat
dec
mov
push
cmp
test
push
pushf
shrb
daa
mov
push
fnsave
inc
notb
xchg
out
push
call
xlat
repnz
je
jnp
jns
inc
scas
fildl
dec
lea
cs
daa
inc
jp
aam
fdivrs
fwait
inc
in
sbb
push
ret
inc
loopne
leave
mull
fisubs
sub
xor
push
cltd
and
jmp
cmpsl
cmp
jle
popf
pop
sub
xchg
mov
cmp
scas
pop
stos
imul
and
pushf
in
sub
das
dec
dec
movsl
jg
dec
test
cmp
shr
imul
sub
fmuls
or
orl
cltd
xchg
push
sbb
shlb
cmp
stos
and
cltd
icebp
ret
mov
fistl
aam
adc
stos
int3
in
loopne
loope
movsb
jp
cmpsb
cmp
inc
mov
in
inc
sbb
cmpsb
xchg
xchg
clc
int
push
aaa
fcoms
push
pop
cmp
xorb
inc
insb
or
and
or
push
scas
or
out
cli
push
in
xlat
pop
les
imul
xchg
mov
mov
scas
movsb
or
xor
xor
subl
inc
xor
movsl
loope
and
jle
xlat
cltd
fists
cltd
lods
dec
inc
cli
push
mov
leave
cmp
jle
push
mov
mov
mov
pop
and
pop
cli
out
pushf
mov
cwtl
mov
mov
dec
call
xchg
int3
or
mov
dec
jmp
push
imul
and
cmp
shr
sub
sub
xchg
mov
mov
div
push
push
add
stos
adc
xchg
popf
rol
push
addl
out
mov
pop
aad
sbb
mov
popa
cmp
mov
mov
fsts
rcrb
mov
pop
es
jmp
mov
add
mov
or
pop
fwait
dec
mov
adc
inc
in
xchg
sbb
ficomps
jns
mov
and
les
outsb
adc
pop
sti
cli
fsubr
pop
in
xor
push
mov
push
sbb
shl
mov
imul
cltd
xor
fisttpll
and
hlt
sub
mov
mov
pop
pop
pop
jg
mov
in
and
nop
sub
fdivrs
or
js
mov
js
dec
and
xchg
sbb
loopne
adc
popa
ljmp
ret
dec
or
subl
adc
dec
js
cwtl
lods
testb
ret
aam
loopne
xchg
mov
sbb
and
add
xchg
sbb
jae
jmp
nop
inc
sbb
mov
sub
xlat
enter
ja
imul
sub
xchg
clc
mov
addb
pushf
popf
out
sti
or
jmp
cmpsb
shr
xchg
or
xor
rcrb
subl
add
dec
in
cmp
xchg
dec
sbb
and
jno
xchg
xchg
int3
pop
xor
scas
scas
add
dec
clc
test
add
xor
xlat
xchg
push
add
mov
notl
hlt
pop
out
mov
roll
mov
mov
sbb
fisubrs
fucomp
add
mov
mov
ret
addr16
js
xchg
out
nop
test
cmpl
hlt
aad
cmpsb
sbb
sbb
fldt
int
les
and
xchg
push
jmp
pop
add
xor
and
and
sarl
mov
and
insl
rcrb
popf
and
and
fs
dec
outsl
arpl
cmp
or
cld
neg
sbb
pop
test
or
cmp
mov
aas
push
in
leave
dec
leave
xchg
call
pop
jnp
mov
lret
mov
xchg
leave
lock
mov
adc
js
idivl
jnp
push
jmp
sbb
imul
mov
xor
aam
mov
icebp
and
sbb
insb
sub
push
mov
and
bound
or
mov
mov
xchg
sbb
repz
imul
dec
gs
inc
jmp
fcmovnbe
dec
pop
les
inc
push
fnstsw
lcall
sbb
pop
inc
jge
out
xchg
fiaddl
add
dec
shll
inc
inc
or
sbb
jge
fsubr
popa
test
cmp
jne
js
and
arpl
xchg
cmp
xchg
xchg
insl
push
in
add
push
nop
enter
lods
mov
and
insl
addl
adc
fbld
flds
insl
push
andnps
xchg
cmc
cmp
test
mov
jo
pop
dec
mov
dec
adcl
mov
jge
aas
ljmp
insb
imul
dec
pop
mov
mov
jae
out
dec
sbb
mov
das
lods
jo
rcll
and
cli
ljmp
idivb
xchg
fisttps
lahf
imul
fcomps
fimull
adc
jle
jl
cmp
cmpsb
push
push
call
sbb
pop
jne
xchg
mov
add
or
jmp
dec
mov
pop
arpl
outsl
cmp
sti
sub
andl
push
cmp
xor
je
xor
pop
xor
xchg
pop
xor
orl
sti
lret
incb
popf
push
mov
push
adc
mov
dec
cmp
mov
xchg
jl
jbe
cmpsb
jo
and
mov
out
std
loop
pop
test
test
insb
mov
stc
adc
repz
fisubrl
in
jg
arpl
aad
xor
into
icebp
mov
push
push
test
fiadds
add
xchg
and
in
or
lret
call
xor
aad
mov
xor
jmp
pop
das
push
push
aam
adc
push
sbb
in
sub
pop
pushf
or
stos
bound
scas
scas
xlat
lds
cmp
sub
jae
aad
sbb
mov
leave
loope
xchg
add
ds
mov
pushf
sahf
push
and
mov
out
popa
mov
outsl
jae
out
lcall
adc
mov
iret
push
dec
and
test
inc
push
mov
test
addl
ja
pop
lret
sub
cmc
sub
or
and
or
popa
xor
jo
int3
popf
inc
add
jo
mov
mov
ss
add
dec
popa
mov
pusha
mov
add
xor
xchg
xor
mov
sub
sub
aad
adc
or
rorl
jp
stc
inc
mov
mov
sbb
sar
adcb
adc
cwtl
lahf
lahf
aam
sarb
mov
mov
mov
loop
les
and
mov
fsub
mov
data16
cmpsb
inc
out
ret
insb
push
pop
flds
inc
test
cmp
dec
mov
push
mov
test
xor
mov
cltd
test
rorl
addr16
cmpsl
out
fisubrs
sub
pushf
xor
jmp
mov
insl
je
xchg
in
or
mov
or
push
pop
int
lahf
mov
ja
add
scas
push
out
xchg
imul
les
sub
notb
jbe
pop
shlb
jbe
test
adc
shlb
fldl
out
fidivs
insb
or
dec
movsl
jno
mov
cld
mov
in
in
inc
and
nop
cwtl
ficomps
insl
out
xor
outsl
mov
cmpsl
pop
pop
sbb
jns
data16
stc
rclb
mov
sub
ds
add
fdivr
in
sub
cmp
or
push
sbb
cli
and
popf
loope
sbb
jg
add
inc
fsubl
cmpsl
push
lcall
add
jle
imul
dec
frstor
shl
dec
or
mov
xor
xor
xor
mov
daa
gs
xor
or
aad
jl
adcb
into
fldt
mov
movsl
sub
loope
movb
call
cld
movsb
inc
add
and
and
stos
insb
cmp
loop
iret
or
cmpsl
xor
ss
clc
clc
mov
jl
daa
sub
sbb
sbb
sbb
inc
fstps
sbb
and
insb
fstps
mov
mov
stos
int3
and
mov
mov
jl
push
ret
rcrb
jns
sub
dec
adc
dec
popa
fdivrl
jbe
mov
cmp
dec
lahf
push
test
sub
outsb
cmpsl
xchg
nop
sub
adc
mov
lret
ret
xor
sbb
lahf
mov
mov
adc
mov
push
mov
mov
std
mov
xchg
add
sarb
into
ret
or
dec
xorb
xor
loop
add
add
jo
xchg
mov
mov
adcb
jge
and
mov
push
pop
rcrl
aaa
stos
sbb
or
test
popa
inc
enter
and
in
stc
les
mov
loop
cs
ds
or
xchg
ds
jb
adc
iret
aaa
outsb
mov
nop
adc
movsl
arpl
pop
stc
push
inc
jge
fsubl
sahf
cs
jae
mov
out
and
dec
xor
pop
cmp
jg
int
xor
shrb
test
fstpt
sub
scas
pop
cmpsl
mov
sub
cmpsl
xor
repnz
jl
adc
aad
in
cmp
fucomi
and
sbb
insb
loop
dec
sbb
add
mov
jge,pt
ljmp
rcr
dec
and
xchg
push
xor
enter
mov
cmpsl
arpl
mov
gs
hlt
jae
pop
ljmp
dec
mov
aaa
pop
ds
jo
and
fadds
push
push
mov
mov
push
mov
dec
pop
insb
and
dec
cmpsb
daa
cmp
idiv
loope
cwtl
pop
or
adc
imul
mov
sbb
ds
mov
cli
in
in
fistps
lcall
je
fistpl
sub
xchg
pushf
xor
xchg
sbb
cs
loope
sbb
fistpl
pop
dec
xor
pusha
sub
mov
mov
pop
lock
inc
stos
data16
dec
data16
flds
movsl
aad
or
in
stos
inc
adc
mov
aad
insb
gs
in
pop
enter
push
jno
or
cmp
inc
hlt
mov
iret
stos
jecxz
das
sub
les
cmp
push
sbb
mov
cmpsl
insl
mov
rolb
push
pop
xor
or
sub
jle
xchg
out
adc
nop
pop
cltd
mov
lea
sbb
nop
shrb
out
cmp
std
scas
cmpsb
mov
outsb
add
cmc
push
mov
jb
test
out
dec
mov
mov
aas
sbb
xchg
ret
cld
mov
push
rorb
jne
jl
jb
pop
clc
pop
dec
imul
jl
into
mov
in
mov
or
in
mov
add
and
or
inc
xchg
in
pushaw
outsl
stos
add
gs
subl
mov
sarl
xchg
xor
mov
pop
sbb
std
imul
movsl
ljmp
stc
and
push
xor
int3
sbbb
or
push
sbb
orl
fisttpll
out
aad
mov
jo
pusha
mov
jecxz
xor
inc
cmpsb
xchg
or
les
push
mov
mov
push
push
adc
xchg
repnz
sahf
shlb
sbb
test
es
dec
nopl
addb
jmp
subb
push
pop
push
test
push
dec
sbb
push
mov
stos
cwtl
sbb
add
pop
pop
xchg
addr16
mov
stos
mov
mov
jnp
push
shlb
cmp
sbb
xchg
popa
adc
adc
mov
push
pop
add
loop
and
cmc
pop
in
stc
add
sub
enter
fcomps
daa
repz
inc
adc
xor
cmpsb
je
in
inc
jnp
adc
mov
out
or
out
jge
add
sub
das
dec
enter
ja
jno
mov
test
movsl
std
pop
mov
pop
jb
cmp
xchg
xchg
stos
cmp
and
insb
jne
ds
jnp
mov
sar
stc
movsb
cwtl
mov
aaa
iret
icebp
into
xor
adc
inc
add
addr16
int
sti
ret
fadds
mov
iret
cltd
pop
out
xchg
xlat
bound
les
aam
xlat
xchg
ret
sub
pushf
int3
scas
ds
lahf
and
test
pop
sub
stc
addr16
ja
mov
mov
imul
mov
and
leave
jnp
mov
or
rclb
inc
les
in
adc
leave
cmp
add
add
mov
rclb
mov
aaa
adc
or
sub
xor
adc
inc
ds
outsb
loop
enter
and
xlat
adc
cmp
or
jnp
cmp
popa
jns
inc
mov
out
inc
fisubl
mov
arpl
addr16
imul
pop
bound
sub
dec
jge
sub
sarb
outsb
scas
fcoml
pushf
imulb
xchg
jmp
inc
xor
mov
std
pop
jg
leave
sub
insl
mov
jl
cmp
jmp
mov
xchg
xchg
dec
lea
lret
arpl
sbb
in
enter
push
cli
enter
popa
mov
je
out
std
lock
jbe
mov
loope
imul
int3
add
mov
pop
stc
sub
cmp
bound
sub
call
lea
cmova
js
cwtl
add
push
sarl
hlt
pushf
sub
cmc
adc
xor
mov
sub
mov
xchg
jno
inc
inc
fwait
je
lds
js
adc
sbb
adc
pop
test
inc
jle
popa
shrb
adc
inc
scas
dec
in
xchg
mov
sti
jae
xchg
inc
mov
cltd
dec
and
mov
lret
fwait
adc
push
adc
adc
jo
xor
or
cwtl
js
or
jnp
dec
out
sub
stos
ljmp
mov
push
movsl
sbb
sub
add
cs
mov
pop
adc
and
lea
xor
ret
add
mov
and
sbb
negb
add
hlt
add
and
cwtl
inc
mov
mov
cld
sbb
iret
pop
jl
imul
and
inc
fisubrs
xchg
ret
adc
jg
add
adc
dec
cmp
loope
mov
or
call
popa
insb
cmc
cli
sti
mov
andl
jecxz
fildll
addl
loop
push
stc
push
imul
mov
xchg
mov
cltd
fsubrp
adc
sub
sbb
push
xor
shl
iret
pop
in
in
inc
xchg
rcrb
lods
loop
leave
mov
xlat
xchg
std
test
icebp
and
xchg
sahf
sti
jae
adc
lret
pop
sbb
stos
icebp
pop
xsha1
cmpsb
dec
add
fmulp
adc
stos
aaa
outsl
xchg
and
or
and
lret
loope
call
inc
jmp
movsl
test
mov
cld
es
das
inc
pop
pop
call
lds
scas
mov
dec
add
push
push
jp
divb
xchg
jnp
and
sbb
mov
xchg
int3
add
cmp
mov
inc
sub
sbb
call
movd
sub
pop
into
ret
cmp
mov
es
loop
lods
xchg
fsubp
mov
cmp
mov
ret
jge
outsl
jl
lea
sbb
pop
inc
or
xor
cmp
add
jns
aad
lods
push
clc
add
test
mov
lret
cmp
popf
or
mov
rcrb
add
sbb
nop
mov
sbb
cmc
out
xor
lret
and
add
jb
iret
dec
dec
or
push
es
test
subb
adc
push
stos
adc
bndstx
cmp
cli
and
into
test
sub
std
mov
pop
pop
lock
inc
adc
inc
repz
cmp
test
repnz
addb
fwait
adc
mov
addr16
out
inc
int3
jle
jo
or
cld
stos
inc
je
in
mov
fists
and
ljmp
adc
sahf
inc
lods
shlb
adc
sub
loope
xor
rcrb
rcl
mov
ljmp
mov
push
xchg
cs
orl
pop
ficomps
push
fldl
jb
mov
sub
jbe
push
adcl
mov
cli
mov
mov
add
sbb
jnp
hlt
pop
into
push
mov
ret
and
jp
push
pop
xor
iret
push
pusha
movsb
movsl
pop
push
xor
inc
mov
and
push
into
repz
enter
iret
pop
rcll
lret
out
popf
pop
cmc
xor
cli
into
and
cmp
fsubp
cmpb
fdivrs
setb
repz
fnstcw
out
in
aas
nop
out
xchg
mov
pushf
fnstcw
scas
and
xor
mov
xor
add
add
pop
lret
dec
decl
insl
push
cld
test
insb
stc
jge
pop
jecxz
clc
lds
js
std
lahf
bound
xchg
sbb
cmc
in
je
dec
lds
xchg
lea
es
jno
test
mov
out
mov
pop
test
add
xor
inc
idiv
jle
movsl
enter
cmp
fistl
dec
or
or
jl
inc
loope
jecxz
jo
xor
enter
fists
into
mov
sti
iret
cmp
push
sub
sub
in
push
jno
inc
ret
push
fstpl
jp
sarb
cmp
sti
mov
fsubl
lods
mov
js
or
add
sbb
fucomi
scas
pop
mov
loop
repnz
add
mov
jb
mov
cwtl
orb
outsl
adc
mull
pop
push
sahf
ds
in
ret
mov
inc
cmp
push
jno
or
sbb
mov
cmp
mov
fildll
add
push
dec
ljmp
cmp
stos
sbb
ja
pop
xchg
es
into
dec
sahf
out
sbbl
in
push
stos
mov
popf
bound
je
and
xorl
cmp
das
mov
sbb
cld
or
jne
or
mov
je
mov
and
lret
inc
scas
outsb
push
rcll
adc
loopne
xchg
cwtl
jge
mov
cmpsb
xor
xchg
push
add
fs
xor
rcll
pop
and
cmp
orl
inc
xor
and
lcall
pop
dec
push
je
push
inc
imul
cli
shl
add
mov
faddl
fstpt
ret
mov
jbe
stos
or
ljmp
xor
aam
les
or
xor
inc
add
dec
sbb
mov
roll
test
cmp
nop
out
je
pop
fwait
iret
xchg
xor
and
scas
push
imul
bswap
pop
negl
jmp
cld
or
jae
xchg
sti
jnp
jae
mov
push
pop
inc
cli
movsb
and
nop
pop
mov
xchg
adc
and
add
pop
xor
jmp
stos
jmp
jl
dec
dec
popf
in
jo
mov
popf
jl
enter
push
push
mov
pop
test
rclb
and
jge
or
into
cmp
mov
hlt
pop
sub
sub
inc
push
adc
pop
jl
pop
and
andl
stos
bound
fwait
outsl
push
mov
jb
push
sub
push
cltd
fstp
dec
fwait
mov
add
jns
arpl
xchg
divl
pop
jb
push
or
push
inc
es
arpl
aad
out
sub
insb
add
jl
cmp
mov
insl
shrl
cmp
jbe
inc
stos
inc
jg
iret
xor
jle
dec
cmp
xor
call
push
rcr
addl
loop
pop
outsl
rcll
mov
test
adcb
scas
shll
jb
add
xor
loop
bnd
add
xor
push
shll
jb
add
xor
loop
bnd
add
xor
rcl
loop
jb
addb
mov
inc
rclb
popa
bnd
add
xor
push
shll
jb
add
xor
inc
sar
dec
popa
repnz
repnz
out
rcr
ret
sarb
lahf
push
mov
mov
mov
imul
pop
fildll
sets
call
dec
fsubrs
sub
sbb
dec
pop
fildll
cmpsl
cwtl
sbb
enter
sub
fsubrl
jge
or
aaa
das
mov
dec
arpl
hlt
xor
xchg
dec
dec
fbld
jb
mov
cmp
push
fldenv
inc
shrd
push
out
xchg
out
xchg
into
mov
cmp
cmp
inc
inc
jmp
push
adc
iret
mov
iret
outsl
out
mov
cmpsl
call
mov
mov
or
sub
pop
daa
push
mov
inc
xlat
fistpl
add
cmp
inc
fcomps
cld
dec
scas
pop
dec
sbb
int
cmpsl
and
mov
and
xor
push
mov
jge
xchg
xchg
js
dec
iret
pop
pop
imull
mov
adc
enter
sub
cmp
lahf
sbb
push
iret
pop
mov
jge
aas
in
xor
es
cli
addr16
jl
sbb
xor
and
push
jle
outsb
sarb
lea
pushf
dec
enter
jp
push
jmp
and
inc
mov
jns
js
pop
mov
jg
dec
fcomps
scas
cmp
push
iret
pop
fildll
sets
call
dec
fcomps
scas
cmp
push
iret
pop
fildll
lods
lret
div
pop
mov
outsl
popa
xlat
mov
inc
xor
push
pop
cld
pop
push
dec
cwtl
cmpsl
mov
inc
mov
and
push
and
fxch
mov
int
push
decl
xchg
pop
lret
hlt
sti
shlb
inc
cltd
xchg
cli
push
dec
es
jmp
clc
push
and
popf
mov
xor
fwait
lcall
insb
push
mov
bound
dec
inc
lahf
cwtl
and
ret
iret
out
movsl
into
inc
mov
sbb
sbb
scas
sti
sti
sub
and
or
cwtl
push
aad
ret
cmc
mov
pop
sbb
sbb
leave
dec
popf
arpl
stos
outsl
je
sbb
adc
rolb
ror
jmp
sub
push
and
jbe
or
in
sbb
ffreep
inc
mov
rcl
add
cmp
mov
xor
outsb
daa
add
add
cmp
mov
mov
sub
and
lods
or
cmp
mov
test
push
or
es
aas
inc
mov
inc
ret
sub
test
xchg
sbb
inc
cmp
into
sbb
jmp
lahf
addl
add
jns
xor
scas
rorl
xchg
sub
inc
movsb
aaa
sub
mov
in
imul
cmpsb
push
imulb
decb
jno
jp
inc
dec
adc
push
push
bound
xchg
sbb
inc
push
in
ret
mov
shlb
jno
xchg
mov
cmc
adc
pop
gs
lahf
daa
scas
mov
dec
fsubrp
mov
or
xchg
cmp
ljmp
adc
mov
mov
ror
mov
pushf
call
loope
sub
xorl
jnp
mov
cmp
lahf
aas
mov
insl
lods
insl
dec
lahf
orl
adc
movsl
lea
push
cmpsl
enter
xchg
sbb
arpl
dec
aam
add
js
xchg
mov
sbb
mov
inc
js
popf
or
sub
sub
nop
mov
and
std
mov
xor
jecxz
lret
cmpsb
es
mov
in
mov
xchg
out
xlat
mov
mov
xchg
and
iret
cli
sbb
enter
out
jg
nop
jnp
sub
or
pop
in
pop
push
push
es
mov
sahf
icebp
push
push
mov
push
std
loop
mov
dec
das
jbe
test
popa
inc
mov
cmp
adc
xor
and
test
or
jno
adc
or
dec
adc
or
pop
insb
out
dec
stos
cmc
dec
add
sbb
fldenv
mov
imul
inc
jns
adc
adc
xor
inc
loopne
js
aad
pop
cltd
insl
pop
test
cmpsb
sbb
or
mov
ret
or
cmpb
test
inc
mov
xchg
xor
or
lods
mov
cli
popf
fst
scas
arpl
or
mov
lock
fnstsw
bound
xor
dec
jno
push
push
fnsave
ret
dec
scas
icebp
sbb
mov
mov
in
jmp
push
repz
push
cmpsb
add
outsl
cmp
roll
imul
clc
fldcw
mov
movsl
inc
sub
test
mov
test
lcall
pop
fwait
repz
jecxz
mov
mov
cmp
pop
stos
mov
ret
sbb
add
test
dec
cmpb
ret
int3
mov
dec
mov
and
jo
inc
ss
pop
pop
ds
add
sbb
mov
xlat
lock
in
orl
push
out
cs
jns
shr
fwait
adc
sub
mov
xchg
cld
bound
mov
pop
cmc
das
pop
mov
xor
push
js
sbb
push
mov
or
mov
dec
jae
sahf
rcrl
inc
sqrtps
cli
mov
pop
pop
pop
sbb
enter
and
mov
jecxz
imull
aad
stos
sbb
enter
jb
push
push
inc
ror
enter
and
mov
jecxz
js
jo
cld
cmpsl
popa
stos
and
dec
mov
stos
in
fisubs
aas
adc
xor
ret
sub
in
xor
and
adc
pop
std
loopne
out
push
fsubrs
arpl
dec
inc
imul
push
gs
mov
push
push
aas
cltd
jne
loop
cwtl
jle
mov
or
mov
repz
sbb
call
cmp
cmp
adc
iret
lea
add
push
stos
fdivl
and
or
repz
fwait
int
daa
pop
repnz
dec
daa
push
mov
cmp
mov
insb
popa
mov
popf
scas
scas
pop
cmp
or
cmp
out
movsl
sti
in
dec
fdivrl
lahf
test
aad
lahf
subb
mov
fs
adc
fnstcw
jle
adc
sarl
adc
in
addr16
jg
xor
daa
pop
adc
xchg
mov
jnp
pop
add
xor
lret
xor
insb
aad
xchg
fwait
push
into
mov
enter
push
les
xor
shrb
jl,pn
out
int
jns
sub
dec
data16
pop
cmpsb
arpl
inc
jl
aaa
dec
push
jmp
add
aad
mov
jmp
roll
sbb
cmp
test
push
fcomps
mov
shll
fwait
mov
stos
pop
mov
fs
stos
mov
jmp
mov
xchg
outsl
push
js
pop
movsl
jmp
inc
testl
and
push
jbe
outsb
movsb
jns
or
pop
cmp
jne
rorl
mov
xor
ljmp
or
mov
add
iret
sub
imul
sub
test
push
xchg
xor
enter
cmp
pop
adc
cmpl
stos
lods
pop
inc
cmpsl
or
sahf
neg
test
enter
rcrb
mov
lret
pop
sub
rcrb
jp
or
push
push
scas
add
or
push
mov
pushf
xlat
aam
in
ljmp
ret
rorl
xor
aaa
xor
inc
test
bound
sub
sub
scas
test
sub
or
sub
add
test
out
fadds
aam
lea
data16
sub
jae
mov
aad
clc
stos
mov
test
mov
inc
rep
rorb
outsl
mov
sbb
push
orl
jb
shll
test
mov
or
xchg
hlt
enter
inc
stos
fucom
outsb
jnp
bound
out
inc
popa
push
pop
sbb
dec
jne
and
pop
popa
out
pop
clc
xor
icebp
pop
aas
je
cli
add
test
insl
mov
cmpsb
adc
cmc
rcrl
xor
cli
lea
mov
fcmovb
mov
jl
jmp
fsubr
xor
test
ja
mov
dec
ss
mov
or
xchg
scas
push
push
aam
dec
stos
int3
sbb
cmp
mov
add
fildll
push
mov
cmp
aam
add
fbstp
mov
leave
stos
mul
mov
jg
add
sub
rol
js
lret
cli
dec
aam
gs
mov
push
sbb
or
push
mov
push
gs
mov
test
xchg
or
or
ret
ja
inc
push
cmp
mov
add
and
pop
js
lret
mov
cmp
mov
jg
cmp
stos
push
jmp
inc
cmp
andl
mov
sub
lods
movl
push
sub
add
mov
int
mov
sub
xchg
xchg
pop
or
rclb
add
cmpb
dec
jecxz
xor
xlat
and
lcall
divl
imul
shlb
cmc
mov
imul
mov
mov
xor
pusha
in
jne
inc
jb
sub
ss
repz
jbe
dec
sbb
push
cmp
xor
sbb
push
jno
lret
sbbb
insb
outsb
ja
mov
or
inc
test
cs
pop
aam
pop
or
imul
jb
lahf
push
or
test
mov
sub
in
and
imul
dec
mov
jg
cwtl
sub
xchg
mov
cmp
cmp
out
jns
cmp
mov
ficompl
cltd
push
mov
adc
mov
call
lods
leave
mov
mov
xor
sub
xor
adc
push
pop
xchg
cmp
pop
push
xor
in
lock
fstps
jo
sbb
push
add
inc
jno
pop
or
cmc
mov
in
imul
mov
pop
and
cmpsl
mov
fldt
shl
dec
mov
and
out
jb
test
ds
mov
sbb
into
loopne
add
iret
jno
jmp
mov
call
rcr
into
cmpsl
xlat
fistl
data16
scas
mov
sub
xchg
into
cld
dec
lret
jbe
xor
adc
pusha
test
das
sub
fcmovu
bound
mov
cmp
je
mov
lods
aam
jg
xor
xchg
fbld
or
jne
hlt
xlat
add
ret
lea
and
inc
popf
cwtl
cltd
out
sarl
fcoml
jge
flds
dec
mov
bound
push
cmpsl
dec
mov
inc
test
pop
outsl
jl
or
add
pop
lahf
adc
jge
in
cmpsb
inc
sbb
adc
push
addr16
push
stos
adc
ljmp
and
bound
pop
ss
test
loop
mov
inc
into
jge
mov
xchg
addl
loopne
pop
mov
enter
dec
pusha
push
add
test
push
push
and
and
inc
mov
inc
inc
mov
mov
js
jle
sbb
jae
or
xor
in
mov
fs
pusha
sbb
jnp
inc
adc
dec
xor
ss
jp
lret
movsb
pop
test
mov
mov
mov
mov
andb
pushf
xchg
push
iret
add
sahf
mov
lea
int
sub
pop
mov
addl
lea
sbbb
inc
outsl
add
dec
jae
into
subb
jns
fiadds
or
cmp
sarb
hlt
mov
in
repnz
daa
gs
and
mov
push
pop
add
or
mov
push
insb
lahf
js
lcall
jo
fidivrs
das
popf
pop
cmp
ret
jne
jns
notb
in
inc
rorb
imul
imul
dec
add
add
pop
jb,pt
enter
cmp
cmp
mov
cmp
scas
pop
scas
addr16
fs
lahf
inc
add
mov
xchg
cmp
divb
push
sti
mov
daa
insl
and
adc
jp
jnp
inc
aaa
cs
add
rol
scas
pop
out
ja
push
test
jbe
mov
lods
test
and
imulb
icebp
xchg
add
pushf
lods
jo
lret
push
jne
mov
aaa
pop
fildll
xchg
xchg
xchg
dec
cmp
divl
jp
push
js
das
shl
mov
xor
mov
push
mov
mov
lods
lods
inc
jge
sti
lcall
inc
cltd
sti
push
fisubl
test
mov
mov
fwait
out
mov
xchg
aad
adc
out
je
sub
push
into
je
sub
das
les
popf
lcall
scas
pop
xchg
sbb
cld
jb
inc
ret
ljmp
xchg
popa
jbe
adc
pop
xor
push
and
sub
cmp
movsb
mov
mov
mov
outsb
jae
negl
push
pop
xchg
mov
insb
sub
cmp
aam
ljmp
mov
adc
and
push
or
push
and
cmc
loope
outsl
ficoml
aam
in
insb
les
std
arpl
loopne
jge
fxtract
sub
fistpll
int
lcall
ret
adc
leave
fildl
add
xchg
sub
jne
cmpsl
rorb
jbe
shll
cmc
divl
push
fwait
mov
insb
jae
fsubrs
or
fstp
popa
sbb
push
enter
push
repz
bound
ss
dec
idivb
pop
mov
xchg
in
sarl
cld
mov
jmp
jb
mov
call
imul
int3
loop
int
bound
mov
jge
mov
pop
lcall
jo
pop
cld
dec
test
test
dec
aam
stos
insb
mov
fiaddl
lea
add
pop
xor
dec
loope
es
shl
nop
sbb
icebp
test
sbb
sbb
pop
add
aam
pushf
gs
mov
aad
ret
lock
out
out
shlb
ss
pop
sub
negl
ja
push
or
bound
cmp
movb
enter
cmp
movsl
scas
mov
iret
adc
idivl
and
ds
sti
or
mov
mov
add
jge
mov
pop
mov
fwait
test
adc
mov
icebp
mov
shr
aad
adc
mov
jle
add
cmpsb
or
and
sbb
or
mov
inc
jnp
fdiv
inc
imul
stc
in
add
stc
and
movsl
dec
popf
loop
int3
mov
adcb
xor
fistl
xor
test
or
inc
mov
ds
or
mov
cmp
aaa
pop
lods
and
in
andl
push
cmp
pop
mov
mov
test
dec
setno
insb
mov
inc
aad
and
mov
stc
mov
dec
xchg
aaa
fistpl
scas
xor
clc
test
iret
subl
xor
stc
sbbl
dec
mov
sar
push
std
nop
loope
shl
leave
lahf
xchg
push
push
pop
jmp
scas
pop
or
dec
push
fs
into
rorl
cmp
aad
loop
imul
dec
push
int
scas
ds
push
es
rorl
int3
cmc
xor
jnp
push
lea
pop
mov
ja
test
movsb
jae
mov
adc
or
sbb
mov
rclb
pop
icebp
arpl
fmull
fstps
divl
popa
mov
xchg
sub
jecxz
and
xor
and
test
lods
pop
outsl
insb
jo
mov
sub
jmp
aaa
out
pushf
ds
push
and
mov
xor
mov
hlt
movsl
adc
fildl
imul
sub
jno
cs
xchg
mov
xchg
xor
mov
jb
mov
aas
mov
cmp
jnp
leave
pop
packuswb
or
push
lret
lahf
roll
xor
popf
mov
xor
shlb
arpl
mov
jo
mov
inc
ret
xor
inc
jno
arpl
cltd
leave
pop
inc
mov
sbb
push
jbe
movsl
ffree
cmp
jmp
mov
pop
jne
out
mov
cmpsl
icebp
lcall
std
jns
push
repz
clc
push
adc
cli
adc
and
mov
jne
movsb
pop
sbb
inc
adc
xchg
mov
sub
jle
aas
xchg
sbb
adc
or
xchg
dec
sbb
pop
lret
into
mov
popa
xor
cltd
xchg
jno
add
dec
fstl
stc
pop
xchg
or
sbb
addr16
ja
fabs
xchg
jbe
pop
sub
mov
fs
xor
out
mov
mov
lods
test
cmpsl
fisubl
jp
inc
cmp
mov
inc
rcl
jl
add
or
jno
iret
bound
or
jmp
test
idiv
jno
xor
std
into
jmp
jno
pop
int3
jnp
push
stos
xor
rcrl
enter
adc
loope
insl
pushf
mov
frstor
test
inc
xchg
repnz
push
jmp
fisubrl
in
ds
push
pop
xor
mov
in
mov
fnsetpm(287
dec
adc
sbb
in
rcr
movsl
xlat
lea
mov
push
bound
js
aas
ficomps
pop
xchg
fstps
sbb
aam
cwtl
pop
sahf
stos
mov
aas
popf
xchg
loope
sub
inc
sti
in
shlb
dec
rcr
cld
xchg
add
inc
pop
lret
ljmp
psadbw
pop
jg
sbb
insb
ljmp
es
cmp
and
pop
push
roll
les
lods
inc
xchg
sbb
repz
xchg
mov
mov
add
in
dec
jnp
mov
imull
sbb
loopne
xlat
mov
push
jb
jg
rcr
leave
je
push
adc
mov
push
xchg
mov
push
icebp
and
sub
push
add
ds
mov
enter
sub
mov
mov
mov
out
cmp
push
iret
fnstsw
pop
mov
jae
leave
pusha
cs
xchg
movsl
mov
adcb
dec
xor
nop
imul
imul
movsl
cld
imul
in
bound
and
lret
lret
adc
push
popa
test
xchg
sarb
aam
cmp
lret
or
mov
push
xlat
fildll
push
jmp
mov
in
mov
mov
xor
call
out
jo
lods
xor
outsl
mov
pop
pop
xchg
cmpsb
mov
push
mov
xor
or
jno
mov
push
xorb
sar
gs
add
dec
ja
jnp
push
icebp
fisubl
push
xlat
popa
aas
shr
cmc
dec
outsl
stos
test
push
and
out
push
add
loop
loope
and
lods
cmpl
add
iret
and
clc
insl
lea
xchg
nop
sbb
cmpsl
lahf
xor
addb
pop
cmpsb
sub
lock
outsb
or
loop
pusha
arpl
mov
cmp
call
stc
ret
inc
daa
fdivrp
pop
xchg
popa
sub
orb
xchg
aad
mov
jecxz
jae
mov
movsb
pusha
xchg
mov
mov
cmpsb
xchg
pop
mov
mov
btr
movsl
inc
xchg
cmp
xor
mov
or
icebp
loop
sbbl
xor
mov
jns
sub
dec
add
stos
or
cmpsb
push
dec
int3
add
mov
aad
addr16
dec
jl
mov
xchg
mov
mov
popa
pop
push
xchg
mov
imul
cmp
enter
repz
mov
roll
popf
xchg
xchg
fldenv
xchg
xchg
shlb
iret
add
inc
rcl
mov
in
pusha
imul
push
add
hlt
fs
jg
cld
xchg
mov
stc
jl
xor
shrb
pushf
sbb
jl
dec
cs
cmp
cmpsb
and
cmp
jmp
pop
loop
aad
cwtl
jg
popa
mov
mov
jne
rcrb
je
mov
bound
dec
mov
out
mov
scas
int
in
sbb
push
fs
pop
pushf
xor
fcomps
xor
adc
in
cld
cmc
ror
stc
jmp
inc
enter
lahf
cwtl
test
jbe
sahf
ror
sbb
adc
and
add
mov
loope
mov
jmp
scas
shrl
hlt
or
push
jg
xor
hlt
sub
repnz
mov
enter
adc
push
cld
rorl
push
jg
jecxz
xlat
outsl
out
std
xchg
fs
cmp
das
xchg
push
mov
repnz
lahf
aad
in
repz
sub
cmp
fisubrs
cmp
loop
daa
decl
arpl
xor
mov
rcrb
inc
shll
mov
cmp
xlat
xor
cmp
add
mov
mov
aaa
fiaddl
xor
outsl
and
cli
jb
inc
push
js
or
lds
fistl
add
push
xlat
mov
ljmp
out
in
pop
pop
mov
fsubl
fildll
xchg
sbb
shll
add
sub
rcr
aaa
adc
sti
dec
aaa
sbb
mov
leave
in
stos
popf
testl
mov
mov
pop
ljmp
xor
int3
sbb
adc
aas
cmp
outsl
clc
jg
dec
fcomps
scas
cmp
push
iret
pop
fildll
sets
call
dec
fcomps
scas
cmp
push
iret
pop
fildll
ja
pop
call
dec
fcomps
ja
mov
push
out
pop
fildll
sets
call
iret
fcomps
push
cmp
pop
lock
and
outsb
or
aaa
jl
and
add
popf
in
sbb
in
jle
outsb
or
ds
cs
push
jge
insl
lahf
out
ficomps
scas
sbb
jle
outsb
or
ds
cs
push
gs
ja
jle
mov
enter
pushf
frstor
or
daa
cmpsb
xor
test
mov
and
mov
inc
xchg
dec
mov
cs
mul
in
sbb
xor
enter
and
pop
dec
imul
dec
aam
push
addl
dec
sub
add
or
push
jge
lea
push
xchg
push
int
jb
pop
xor
mov
xchg
ret
sarl
loop
test
out
push
clc
inc
lods
out
mov
inc
popa
std
mov
inc
adc
out
movsl
lods
mov
pushf
stos
cltd
cs
mov
pop
add
pop
sub
cs
push
fs
je
test
xchg
fisubs
ficompl
js
or
pop
or
jno
mov
mov
mov
lods
call
out
sahf
sti
std
incb
cmp
cs
sbb
mov
mov
mov
scas
lret
mov
sbb
sbb
jnp
cs
push
jge
insl
popf
out
fidivrs
scas
int
std
mov
jle
outsb
or
ds
cs
push
jge
insl
popf
out
fidivrs
scas
int
std
mov
jle
jp
out
pusha
fsubrl
dec
rcll
loope
mov
in
sarb
repz
mov
sub
lods
xor
mov
mov
test
enter
pop
adc
add
mov
adc
sti
in
sbb
or
outsl
scas
aas
dec
out
xor
or
cmp
xorb
fdiv
push
adc
nop
xchg
repnz
jo
xchg
or
push
lods
lret
inc
or
adc
divl
fsubr
xlat
ja
fcomps
mov
sbb
mov
lret
pop
and
test
dec
xor
data16
mov
jo
pop
lock
daa
push
je
fstpt
fimuls
ret
dec
ret
das
jo
add
fidivrl
mov
fistps
jl
dec
jp
lret
loop
or
fs
scas
xchg
and
sub
por
dec
sbb
xchg
clc
jnp
leave
ror
xchg
idivb
ficoms
out
pop
sub
pop
fwait
int
dec
dec
adc
sub
adc
or
inc
outsb
mov
fcmovnbe
xchg
lea
into
aam
loopne
out
sub
lret
cli
and
popa
mov
in
ds
mov
push
std
sub
cmp
sub
cmp
scas
jno
pop
adc
jg
lods
push
pop
cmp
pop
out
and
jbe
and
stos
ret
xchg
xlat
jp
pop
add
scas
jmp
popa
popa
or
pop
jl
sub
mov
rcrb
mov
jmp
cwtl
pop
es
lods
enter
jl
mov
mov
sbb
push
stos
lods
jl
lea
in
mov
sub
mov
xchg
fadds
call
scas
xchg
mov
repnz
or
add
mov
jb
mov
inc
inc
lock
iret
lret
jns
dec
lahf
lds
and
incl
fwait
mov
insb
push
dec
pop
pushf
jmp
andl
push
in
jecxz
lock
pop
testb
call
shll
fdivl
call
jmp
ret
or
mov
or
in
dec
jbe
pop
push
lods
inc
lcall
mov
sub
cmpsl
mov
in
inc
xchg
xlat
ss
push
dec
bound
cmpsb
scas
add
mov
fxam
jns
mov
testb
adc
push
dec
or
jnp
fsubr
sbb
mov
push
cmpsb
sbb
add
lret
mov
idivl
ds
or
test
mov
xor
or
js
les
lahf
movsl
push
and
test
mov
mov
mov
push
scas
jmp
dec
push
dec
inc
adc
push
mov
xlat
mov
push
aas
in
cli
mov
lea
inc
mov
stc
adc
in
push
and
mov
mov
stc
addl
jecxz
lret
fcompl
inc
jae
into
insl
mov
test
movsl
jo
pop
inc
sub
mov
nop
mov
pop
xor
jno
mov
cli
out
lods
js
mov
jmp
pop
hlt
stos
xchg
mov
stos
stos
sub
imul
add
dec
out
mov
pop
push
das
je
xor
mov
add
mov
lods
adc
call
sub
cmp
rcll
hlt
xchg
or
in
data16
and
lahf
rclb
and
mov
xchg
push
and
mov
outsl
or
dec
push
jo
stos
cld
dec
inc
pusha
or
adc
or
ret
xchg
subl
mov
xorb
push
std
and
test
mov
xor
mov
push
push
jo
mov
xchg
je
adc
int
mov
xchg
adc
lods
aam
fstl
xchg
aaa
pop
jns
in
push
stos
dec
and
fcompl
push
imulb
js
repz
add
in
sahf
adc
cmp
movsb
sub
leave
rorb
stos
fucom
cmp
out
lret
aam
add
xorb
dec
cmp
pop
lock
add
mov
pop
jle
mov
out
adc
orl
test
or
loopne
jno
sti
insb
out
int3
cli
aam
xchg
js
mov
aaa
and
lock
jg
push
xlat
cmp
push
push
adc
aam
mov
adc
jmp
cmp
or
adc
mov
ficoml
fbld
ret
mov
adc
cmpsl
outsl
mov
fwait
sbb
lods
iret
cmc
push
lret
adc
dec
push
ljmp
xchg
inc
adc
in
rclb
xchg
cmp
shrb
jge
hlt
out
pusha
cmpsl
or
popf
mov
mov
out
adc
hlt
pop
cmp
lret
push
stos
sbb
xor
inc
push
adc
mov
lods
repz
nop
out
and
mov
rorl
push
or
sub
or
jnp
pop
cmp
adc
cmp
jmp
jo
or
and
xor
rcrb
les
push
fucom
shlb
fisubrl
loope
or
or
pop
add
testb
xchg
mov
and
imul
out
imul
and
push
mov
jnp
mov
mov
sahf
lea
movsl
and
aas
loop
jae
into
rorb
out
mov
push
fidivrs
ljmp
jae
dec
insb
dec
mov
jns
add
jno
out
inc
call
jl
adc
jnp
out
cmc
push
es
aam
and
inc
aad
lcall
in
je
push
fwait
into
push
push
sahf
inc
jae
mov
rorl
aas
out
jo
adc
lahf
and
dec
xchg
mov
callw
push
adc
filds
int
into
shrl
sbb
loopne
lea
push
das
movsl
ss
mov
mov
inc
int
lret
loop
movsb
lret
in
xor
dec
xchg
add
cmp
mov
sub
dec
or
sbb
dec
sarl
div
int
jl
ret
xchg
leave
pop
nop
outsl
andb
movsl
sbb
add
mov
rcrl
loopne
ja
popa
pop
cmp
imul
lds
addr16
push
mov
enter
jecxz
adc
scas
loope
lods
jnp
fwait
cmc
inc
xchg
cmp
and
push
xor
mov
xor
adc
sbb
adc
push
or
mov
popa
pop
push
pop
out
mov
adc
out
dec
pusha
adc
pop
mov
fcomps
adc
in
xor
fidivs
pop
cmp
lods
or
and
jge
mov
ja
xor
in
sub
aaa
and
push
sti
dec
push
pop
or
jnp
mov
and
adc
or
push
sub
imull
ljmp
push
jle
inc
inc
in
add
sub
idivb
test
cltd
scas
ffree
in
jmp
das
aas
mov
inc
jae
es
jp
sub
mov
cld
jo
lret
out
jbe
bound
test
xor
xchg
add
outsb
jnp
push
jecxz
dec
inc
outsb
adc
mov
or
imul
lcall
popf
push
fldl
dec
icebp
hlt
divl
popa
imull
jne
mov
dec
out
add
xchg
mov
push
loop
mov
or
nop
xchg
cmpsb
mov
jb
adc
mov
adc
pop
jg
pop
loop
lcall
stos
pop
jbe
popf
les
loopne
sbb
les
negl
out
push
imul
out
addb
jb
fsubrl
dec
daa
in
inc
fcomip
fsubl
daa
jge
inc
xchg
test
lods
dec
aaa
clc
outsl
pusha
push
ljmp
dec
xchg
fadds
out
jo
xchg
push
jecxz
push
adc
inc
inc
add
xor
xchg
out
push
add
mov
ss
sub
sbb
fwait
jge
mov
stc
aam
fidivl
in
call
pop
lahf
or
jns
cmp
pop
jno
outsb
push
and
push
push
mov
mov
mov
cli
sti
pop
sub
loopne
cmp
and
dec
xor
sbb
adc
fldt
das
aas
pop
push
jle
sti
fmuls
push
and
sub
jnp
js
test
int
xor
push
mov
and
ja
xor
cmp
or
in
xchg
xor
jl
pop
pop
mov
cld
ds
jmp
lods
pop
mov
jo
add
iret
fisubrs
enter
jge
or
cli
push
cmc
push
test
test
inc
pop
lcall
icebp
jo
inc
repz
mov
je
sub
in
xlat
sbb
fidivl
sahf
cltd
jmp
or
dec
push
jb
mov
popf
scas
shlb
movsl
cmp
xor
pop
xorl
pop
mov
inc
xchg
dec
mov
mov
cmpsl
insb
pop
mov
loop
and
sub
cmc
or
and
cmp
lahf
or
ljmp
mov
arpl
adc
dec
dec
ds
xchg
push
adc
pop
loopne
inc
addr16
xor
or
jmp
notb
addr16
fcompl
sub
push
jnp
leave
and
sub
cmpsb
imul
xchg
test
xor
pop
sbb
lock
push
daa
mov
into
sbb
adcl
je
dec
lds
xchg
out
mov
add
out
lret
pop
aad
shlb
icebp
in
fdivrl
rorb
test
scas
js
ds
jns,pt
sub
mov
scas
pusha
fiadds
imul
add
loope
adc
es
pop
sbb
cmp
mov
and
adc
push
out
out
and
add
jmp
and
rclb
pop
push
dec
xlat
or
iret
daa
inc
lea
push
pushf
iret
push
data16
aad
xchg
das
cmp
sbb
mov
mov
in
push
stos
and
lock
outsb
lods
or
cmp
jecxz
dec
cmp
in
cmovne
jecxz
mov
push
aas
addr16
jecxz
jae
pushf
inc
dec
ljmp
fucompp
add
push
dec
or
mov
les
lahf
xchg
int3
rcll
fwait
pop
sub
or
sub
lret
sub
jo
dec
stos
push
sbb
ljmp
fsubl
inc
cmp
push
mov
lock
add
xor
lds
jmp
in
add
push
shlb
xchg
pop
cs
jne
cltd
add
cmpsl
push
test
icebp
rcrb
cmp
lods
xchg
lret
lret
mov
pop
outsb
cmp
ficompl
add
aad
pop
cltd
jp
mov
mov
mov
imul
mov
outsl
daa
push
shll
jmp
or
fisubs
jmp
mov
push
sbb
push
or
es
cmp
push
rclb
push
mov
jb
sub
outsl
sahf
add
or
sti
sub
sbb
stos
ficompl
mov
ret
xor
stos
ret
sbb
pop
out
mov
mov
cmp
adc
clc
sbb
sbb
popa
sbb
pop
cmp
cmp
leave
inc
clc
nop
inc
xchg
lods
aas
mov
aaa
push
cwtl
dec
xor
pop
cmpl
push
inc
fimull
fwait
and
push
add
out
dec
icebp
lock
insl
test
and
clc
xor
call
lret
inc
in
sub
addr16
adc
cmp
pop
out
hlt
jno
mul
fwait
cmp
cmp
sbb
push
sub
push
ds
add
addl
or
xchg
sahf
repnz
pop
cmp
jno
jnp
lahf
push
popa
xchg
cs
outsl
sarb
mov
imul
and
out
dec
pop
or
sub
sub
ret
pusha
movsl
lret
add
inc
fstpt
pop
enter
imul
pop
or
pop
push
lea
push
out
push
insl
std
push
adc
call
js
jmp
sub
sbb
gs
jnp
fdivr
xchg
popf
out
ss
arpl
sbb
sbb
das
inc
and
fiaddl
mov
jge
ffree
insb
bndldx
sub
in
insb
and
je
sub
and
adc
jne
inc
fstp
pusha
fistpl
andl
jns
jmp
sahf
adcb
jp
cwtl
pop
mov
sbb
popf
fwait
dec
pusha
add
pop
mov
imul
fisttpll
shrb
and
nop
add
in
in
ret
and
sbb
es
push
sbb
cmp
lea
xor
push
mov
out
inc
pop
mov
add
pusha
adc
sub
push
aam
or
and
cmp
lea
cmpb
inc
stc
xor
mov
xorl
add
lcall
fstpt
loope
fldt
push
xchg
stos
xchg
rcr
adc
sbb
and
jecxz
xchg
clc
daa
cli
aad
jl
dec
rorb
mov
jg
jmp
jnp
push
out
cmp
inc
jo
sub
les
or
sbb
inc
sarb
jns
xor
xchg
push
push
or
imul
mov
mov
or
arpl
imul
dec
cmc
stc
out
cld
adc
cld
xchg
xchg
inc
shrb
cmp
pop
mov
inc
mov
sbb
sub
cmp
inc
sub
or
jns
lock
arpl
dec
aam
sub
cmovg
adc
xchg
aaa
outsl
mov
or
dec
pop
fistl
das
push
pop
arpl
mov
mov
mov
cmp
scas
jmp
push
add
mov
push
xchg
fmull
lahf
js
out
xor
outsb
jmp
push
push
adc
cwtl
and
data16
mov
pop
and
into
aad
hlt
in
adc
ljmp
aas
or
mov
dec
mov
stos
in
pop
loop
xchg
sub
and
call
cmp
xchg
test
mov
fisubs
and
push
jmp
adc
jp
lds
push
jbe
test
xchg
inc
xlat
jle
fwait
inc
or
clc
pop
adc
add
lret
push
test
pop
mov
xor
xchg
aam
cmp
xchg
mov
int
aaa
movsb
movsb
pop
xchg
pusha
or
rcrb
mov
cmp
out
or
insl
out
loop
add
enter
lret
repz
mov
arpl
lods
push
xchg
push
add
jle
sub
insl
insl
mov
aam
sbb
add
in
and
call
or
shll
std
jae
andb
loopne
and
cltd
lahf
and
xchg
pop
xor
mov
jg
sbb
dec
pop
adc
dec
cmp
bound
pop
xchg
push
push
movsl
dec
jmp
jp
lcall
jno
add
mov
rcrb
pop
sbb
xchg
mov
pop
popa
fnstenv
insl
idivb
dec
cwtl
sbb
xor
adc
sub
and
or
push
adc
fsubrs
mov
stos
std
out
cmp
cmp
test
dec
adc
pop
push
or
push
sub
mov
dec
sub
xchg
jae
dec
jmp
sub
sbb
enter
and
jp
cmp
inc
rorb
div
adc
or
inc
out
jl
dec
sti
cmc
adc
int3
aam
cmp
pushw
lods
bndstx
mov
sete
mov
dec
repz
cmp
mov
ja
adc
out
std
push
jmp
stos
mov
sbb
mov
push
stos
or
push
iret
cltd
shrb
ljmp
pop
insb
add
popa
push
mov
cmc
fwait
mov
lcall
mov
cmp
mov
inc
cmpsb
insl
loope
cs
xchg
xchg
ficompl
mov
lea
mov
sbb
inc
mov
cmpsb
inc
dec
les
add
and
xor
jne
ss
mov
sub
xor
and
js
leave
inc
dec
std
push
push
xchg
sub
lock
dec
xchg
jle
adc
ljmp
adc
add
test
leave
sahf
mov
clc
rcrb
xor
fildl
xchg
cmp
je
adc
in
ret
sbb
jle
push
stos
adc
lret
rclb
xor
or
cli
js
out
nop
pop
das
dec
rol
insb
push
cmp
jle
insl
add
stos
call
rorl
cmp
sbb
mov
push
cmp
push
inc
inc
sbb
loope
adc
scas
xor
mov
lahf
jmp
not
imul
popf
js,pt
lods
fbstp
hlt
stos
faddl
enter
loopne
jns
mov
mov
jo
fsts
movsl
dec
xchg
lock
xchg
movsl
out
bound
popf
pop
lea
sahf
insl
lods
bound
push
sub
xor
xor
pop
inc
mov
jge
out
outsl
outsl
cmp
sbb
pop
stos
mov
or
leave
pop
ja
sub
loop
or
xlat
in
decb
push
dec
arpl
jnp
cmp
into
add
jge
in
scas
subl
jns
jnp
jge
mov
sbb
fsubr
add
mov
xchg
dec
xchg
add
inc
lretw
mov
add
xchg
push
shrb
iret
or
nop
adc
cmc
mov
cld
adc
mov
lods
xor
pop
call
pop
cmc
mov
mov
adc
cmpb
mov
cld
mov
adc
add
scas
sti
jae
dec
jmp
push
sbb
das
loope
mov
adc
fimull
jle
icebp
or
pop
je
enter
je
jmp
lods
push
out
push
aad
adc
enter
outsb
add
push
outsl
xor
cmpsb
mov
and
rcll
sub
fistpl
in
push
cmc
addps
lahf
int
cltd
sbb
mov
push
mov
inc
mov
mov
pushw
sub
rol
repz
xor
ret
mov
or
sub
inc
mulb
inc
mov
sbb
sub
cmpb
lret
cmp
sub
aad
mov
push
jbe
icebp
xchg
inc
popa
or
add
xlat
sbb
fnstenv
dec
lods
inc
mov
mov
inc
jns
fwait
sub
sbb
xchg
pop
ja
or
xchg
stos
push
cwtl
sub
addl
leave
lods
popf
xchg
dec
push
inc
xchg
push
mov
and
mov
xor
rorl
mov
sub
cmp
jae
dec
out
mov
push
sbb
cmp
out
xchg
test
jmp
pushf
xchg
dec
aaa
sub
mov
add
sub
mov
sahf
push
mov
hlt
xor
arpl
sub
shl
xchg
pop
call
dec
jmp
inc
inc
mov
jne
mov
cmp
jmp
mov
jl
fsubrl
addb
je
dec
cltd
mov
mov
mov
adc
add
push
test
mov
dec
jge
pop
fimuls
or
mov
sbb
pusha
mov
and
lahf
or
in
adc
cwtl
mov
push
fwait
jb
and
stc
xor
sub
in
loope
fisubl
js
out
and
cmpb
rcl
in
shlb
xor
inc
sbb
sarb
xor
pop
mov
stos
cmp
or
sbb
jg
inc
roll
notb
push
jns
jle
xchg
mov
out
inc
stc
sub
movsb
and
pushf
leave
sbb
pop
mov
and
int
mov
or
arpl
xchg
jb
jae
les
movsb
in
cmpsl
test
xor
cmc
jg
mov
or
mov
or
gs
or
xor
cwtl
pushf
into
movb
bound
ss
lahf
push
jo
cmpsl
jl
stos
push
adc
rol
in
testb
jo
cmp
and
sbb
xor
ficomps
pop
add
mov
push
sarl
mov
arpl
mov
test
lods
pop
inc
and
pushf
add
shl
fs
sbb
cmc
cmp
ret
cmc
and
clc
mov
ds
cs
push
jge
insl
popf
out
fidivrs
scas
int
std
mov
jle
outsb
or
ds
cs
push
jge
insl
popf
out
fidivrs
scas
int
std
mov
jle
outsb
or
ds
das
dec
push
jge
insl
lcall
iret
lods
mov
cld
mov
jle
outsb
or
ds
cs
sahf
jge
insl
add
into
fcmove
push
xor
jbe
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
icebp
and
rcll
push
mov
movsl
popa
mov
test
xor
and
icebp
and
rcll
inc
adcl
test
xor
adc
adc
add
call
add
mov
push
push
cmc
cmp
dec
mov
mov
popa
mov
loop
mov
mov
mov
sbb
cmp
and
jo
push
jne
adc
ljmp
adc
hlt
sbb
lods
test
jle
vmovaps
xor
jns
xor
aam
gs
dec
imul
add
lock
xor
add
add
mov
add
fs
push
mov
movsl
lcall
leave
pop
shll
call
fdivrl
cmpsl
mov
jns
cmpsb
leave
sub
adc
xchg
add
pusha
dec
scas
mov
rorb
adcl
add
rolb
aad
and
rcll
inc
cwtl
push
push
test
sub
cmp
or
add
mov
mov
ret
xor
and
fsubl
jmp
sti
xor
insb
mov
cmpb
mov
fldl
mov
push
xor
add
push
roll
stc
xor
gs
mov
or
push
jno
popa
mov
test
xor
and
adc
add
icebp
and
rcll
inc
adcl
test
xor
and
adc
add
icebp
and
mov
frstor
inc
sub
and
ficomps
lret
jne
pop
xor
cmc
or
mov
xor
add
add
lock
sub
cmpsl
aam
rorb
lret
das
daa
cmpsb
mov
es
test
mov
push
bnd
cmpsl
lret
imul
shrl
jno
mov
in
std
cmp
add
lahf
cmpsl
icebp
in
mov
add
push
xor
add
sbb
fs
repz
sub
lcall
adc
adc
and
add
aam
pop
pop
ja
cltd
shll
shrb
in
add
movsw
es
sbb
jl
mov
add
sub
sub
aas
jb
sbb
mov
xchg
imul
jb
les
add
pushf
aam
push
nop
mov
cs
push
fsts
mov
xchg
xor
xchg
add
and
fimuls
test
fnstenv
mov
sbb
mov
mov
adc
mov
cvtps2pi
lods
insl
xchg
fists
fisubrs
fsubrs
inc
dec
popa
push
jbe
movsl
sub
gs
daa
loope
int
inc
fwait
nop
addb
xchg
imul
mov
mov
test
dec
addr16
hlt
scas
or
dec
ds
pop
popa
in
dec
or
insl
sub
test
lahf
rorl
mov
pop
mov
pop
movsb
pop
stos
sub
out
arpl
inc
rclb
imul
cmpsl
sti
or
gs
push
pop
sahf
add
fdivrs
push
shll
nop
or
lods
mov
icebp
sub
das
dec
xchg
jns
test
or
pop
rcr
adc
add
xlat
or
mov
push
pop
sarl
popa
repz
in
sbb
std
dec
push
mov
mov
loop
loopne
out
jg
ja
mov
mov
daa
adc
je
cmp
jns
das
adc
fisubl
or
test
add
inc
dec
and
xor
bound
lahf
pop
sub
add
add
lcall
int
ljmp
das
jns
sub
and
mov
arpl
xchg
cmpsl
adc
mov
xchg
adc
icebp
pop
mov
adc
sbb
cmp
fs
mov
addr16
or
sbb
das
testb
les
mov
icebp
cmp
cwtl
stos
cltd
shlb
mov
fldt
std
push
popf
inc
mov
loope
dec
mov
xchg
or
xor
xor
stos
cwtl
sbb
sar
je
cmp
pushf
es
xchg
popa
test
push
and
sbb
sbb
sub
fisubl
jmp
stos
xor
xor
out
stos
cmp
mov
xor
xor
push
js
mov
es
dec
pusha
daa
lret
sbb
pop
ds
loope
fs
push
cmp
test
push
push
dec
ss
cmp
mov
push
add
adc
xchg
xor
lret
test
leave
pop
cmc
mov
inc
jecxz
loopne
add
mov
adc
into
mov
mov
xor
dec
or
push
test
mov
jo
xchg
xchg
mov
repnz
fwait
or
sbb
dec
test
test
aad
in
cmpsl
sbb
into
dec
inc
pop
in
jnp
enter
movsb
rcl
jl
mov
stos
sub
xchg
pop
or
or
xchg
xchg
pop
inc
std
negb
xor
into
xchg
sahf
outsl
movsl
in
std
mov
cmp
inc
pop
inc
add
push
mov
out
dec
jbe
pop
lock
stos
push
jl
and
pop
mov
jmp
pop
push
mov
xchg
lods
mov
mov
test
xchg
fsubrs
dec
mov
jne
fistpl
adc
cltd
xchg
out
insb
popa
rcrb
lcall
aad
xchg
testb
jno
pop
std
ljmp
inc
outsl
mov
rcrb
jl
or
loop
dec
shll
hlt
mov
cmpsb
repz
mov
sub
adc
cmc
pop
in
push
out
insb
sub
cmpsl
xchg
test
and
fwait
andb
cmpsl
filds
ja
movsl
mov
mov
mov
fbstp
in
push
mov
sub
lods
sbbb
xchg
mov
je
mov
pop
dec
out
xor
stc
out
push
lret
popf
and
movsb
mov
mov
xchg
inc
das
add
icebp
xchg
cmp
adc
push
or
into
mov
icebp
pop
arpl
inc
and
ss
xor
sti
jns
pop
push
xor
sub
lret
rclb
pop
xchg
inc
push
mov
jns
xor
das
dec
hlt
in
add
adcl
into
test
mov
cmp
scas
push
sub
nop
pop
aaa
push
push
aad
mov
xlat
cmpl
sahf
pop
adc
mov
pop
or
ret
test
outsl
std
pop
mov
lea
adc
flds
sbb
inc
cmp
lods
adc
je
idivl
or
inc
and
jge
clc
fadd
addr16
and
dec
pop
or
cwtl
add
outsl
inc
sbb
xor
adc
jno
imul
mov
imul
inc
mov
mov
pop
aas
sub
mov
fildl
sub
and
push
mov
and
notb
lahf
rorl
scas
popa
push
sbb
icebp
jae
add
movsl
add
xor
mov
ret
iret
ds
test
in
cmc
jne
cmpsb
jne
ljmp
loopne
rcl
push
mov
add
sbb
mov
or
push
adc
cmp
mulb
pop
mov
push
xchg
mov
std
or
rcrl
mov
dec
clc
fistpll
int3
aad
inc
mov
pop
movsb
push
or
dec
sbb
sbb
in
aas
lea
es
xchg
jmp
sbb
ljmp
push
movsl
loop
inc
inc
enter
jbe
jno
sbb
pop
dec
cmp
dec
adc
je
cmp
out
mov
dec
lret
mov
aas
and
stos
xchg
cmpsb
movsl
fwait
test
ja
mov
divl
adc
mov
add
pusha
sub
mov
and
jmp
in
push
or
pop
sub
mull
xor
mov
out
ds
pop
arpl
rcl
ret
and
or
scas
xchg
loope
int
xchg
xchg
or
sti
outsl
sti
jae
push
dec
aas
nop
xor
push
mov
and
lods
dec
in
movsb
mov
fs
mov
jbe
pop
xor
pop
xor
repz
sub
adc
addb
sti
lds
scas
rolb
cmp
ss
ja
jne
loopne
mov
sub
into
dec
data16
inc
add
fistpll
dec
sahf
add
sahf
repz
fwait
jle
mov
lods
loopne
adc
inc
sbb
jle
cs
cmpsb
mov
dec
mov
and
mov
aas
fsubs
mov
repz
test
add
into
out
and
scas
add
and
push
lahf
jg
int3
jle
ret
push
aaa
stos
das
test
ja
pop
dec
inc
dec
mov
dec
add
jbe
shrb
cmp
mov
mov
sti
sarb
in
bswap
jge
fwait
or
jle
lock
mov
adc
jmp
xchg
dec
adc
cmp
adc
cs
mov
or
jg
je
int
call
sbb
cmp
dec
cmp
jle
cwtl
pop
jne
ret
xor
les
outsb
xchg
xchg
push
xor
ffree
mov
ds
jo
daa
leave
stc
mov
fcomps
mov
push
lahf
hlt
aad
dec
call
data16
lea
sub
fcompl
and
cmpsl
sub
mull
and
stos
stc
stc
push
inc
fdivl
xor
adc
in
je
jae
mov
movsl
cld
clc
pusha
cmp
cmp
push
dec
adc
das
dec
or
cmp
ret
xor
lds
test
enter
outsl
les
xchg
in
xor
sahf
lcall
shlb
scas
jp
mov
fucomi
mov
mov
into
inc
les
imul
dec
add
cmc
repnz
hlt
jo
cmpsb
aaa
cltd
xchg
dec
push
das
sarb
xchg
sub
adc
js
call
sbb
mov
jne
jb
mov
jmp
in
mov
repnz
cmp
pop
out
movsb
stos
sbb
xchg
add
iret
pop
int3
inc
cmp
or
loope
mov
ret
scas
mov
or
push
mov
mov
push
mov
adc
adc
ljmp
mov
test
sub
aaa
and
inc
ja
leave
pushf
ljmp
jl
aaa
mov
incl
pop
fstps
movsb
das
sbb
pop
out
or
bound
inc
or
push
dec
std
sbb
xchg
mov
addr16
inc
add
xchg
push
sbbb
cmp
popf
shr
mov
imul
sar
loop
mov
push
mov
jge
and
fldl
fwait
pop
mov
xchg
ds
push
lret
sahf
inc
inc
lods
cli
pusha
xor
cld
aam
pop
fdivs
pop
shll
sbb
andb
sub
cmp
daa
mov
std
pusha
xchg
in
mov
adc
jge
movsb
mov
into
ror
daa
scas
jno
stos
mov
mov
fsubl
mull
adc
pushf
xor
repz
push
les
out
jge
jp
xchg
cs
rclb
push
ja
test
cmp
in
test
xchg
and
pop
xor
pop
inc
cmp
mov
jne
inc
fcoms
push
push
pop
lret
sbb
ljmp
ja
rcrl
lock
mov
testb
or
jge
shlb
sub
fdivl
inc
push
fdivs
out
and
inc
call
sbbl
mov
loop
push
daa
xor
aad
mulb
dec
stos
mov
daa
loop
push
dec
add
aam
push
xchg
pusha
and
mov
add
jo
es
xor
inc
repnz
pop
xor
mov
and
xor
inc
push
mov
xchg
ror
fsubl
lds
into
shrb
inc
out
enter
sbb
or
push
jns
jmp
jno
mov
inc
xor
data16
jle
mov
stc
outsl
sarb
movsb
sub
or
dec
data16
mov
push
loope
fbld
repnz
mov
sub
dec
bound
dec
add
lahf
pusha
xlat
xchg
pop
pushf
jle
out
ret
scas
cmp
je
ja
mov
mov
xor
fists
mov
sbb
sub
and
nop
jle
sbb
mov
test
push
push
cwtl
icebp
repnz
outsl
scas
mov
leave
xchg
push
fistl
dec
jecxz
jae
ss
pusha
in
push
sub
mov
sahf
mov
fisttpl
xchg
jno
jmp
cmpsb
out
xchg
test
inc
mov
test
jb
jecxz
push
push
lock
in
xor
scas
movsb
scas
or
and
and
stc
xlat
inc
xchg
scas
mov
fucomp
lea
fxam
sbb
les
daa
ljmp
dec
loope
dec
lret
sbb
test
jb
mov
sbb
inc
inc
leave
or
aas
ret
inc
cmp
sub
push
and
xor
cli
fwait
sti
sbb
addr16
xchg
neg
cmc
loope
lea
inc
or
icebp
into
stos
push
outsb
jge
xchg
test
xchg
out
loop
iret
mov
jnp
aaa
dec
dec
add
push
mov
dec
popf
cmpsl
aam
pop
div
mov
push
iret
stc
push
fisttps
jecxz
in
and
jo
mov
lret
shll
andl
in
xchg
stos
dec
or
mov
mov
in
sub
sub
sub
mov
in
sbb
inc
sub
and
into
jbe
cmp
daa
and
fisubrl
jb
inc
sub
inc
sar
xchg
fcomi
aas
pop
stc
xchg
pop
stos
fistpl
jo
loope
addr16
int
sarb
pop
pop
bound
mov
sub
loop
push
rorb
xchg
dec
dec
lock
pop
pop
dec
test
mov
outsl
out
jmp
int3
repnz
sbb
fidivrl
mov
dec
lcall
repz
arpl
call
sarb
jmp
xor
mov
cwtl
push
sbb
mov
fsubrl
setbe
push
mov
mov
jnp
mov
out
sar
mov
icebp
dec
add
int3
mov
inc
mov
xchg
add
inc
push
dec
cwtl
mov
fisubs
and
out
rolb
jbe
sub
xorl
and
push
rcll
dec
xchg
jmp
add
outsb
int3
aas
dec
xor
aam
std
rolb
adc
ds
add
call
or
or
add
mov
xchg
lods
jp
test
loope
push
or
mov
pop
jae
out
insl
icebp
jae
out
mov
add
repnz
shr
jb
dec
lret
xor
sahf
xchg
mov
pop
pop
outsb
sbb
jl
jb
je
mov
stc
js
dec
dec
cmc
inc
rorl
xor
sub
mov
cmp
sub
ret
pop
cmpsl
dec
mov
or
test
jns
shrb
movsb
fwait
shll
in
cmpsl
repz
popa
adc
sbb
mov
mov
pop
icebp
mov
nop
sti
xchg
pop
mov
dec
shl
cmpsl
es
inc
jno
mov
push
loop
mov
xor
scas
cmp
icebp
arpl
jmp
pop
insb
fwait
inc
pop
lods
nop
fistps
enter
dec
shr
dec
cmpl
gs
push
dec
sbb
inc
inc
stos
or
decb
pop
sub
pop
test
jge
mov
pop
or
xchg
mov
aad
addr16
push
or
jg
movsb
stos
leave
or
adc
fxam
push
ret
ret
cmp
repnz
lret
clc
mov
call
add
cmp
psubsw
add
ret
aas
je
mov
or
fisubl
jmp
mov
pop
js
xor
cmp
push
stos
jb
add
hlt
mov
testl
nop
push
and
jl
xor
enter
inc
pop
cmp
out
aad
jl
xchg
push
mov
cmp
and
cmp
in
fmuls
nop
fcmovbe
adc
adc
lahf
into
leave
pop
daa
mov
jne
repz
or
outsb
cmp
cmp
dec
in
ds
push
test
out
and
mov
das
aad
sbb
jp
push
in
pop
fld
mov
mov
dec
jmp
inc
notl
cmp
sub
push
rol
mov
out
in
cmpsl
jp
jecxz
sub
scas
lcall
pushf
sbb
jge
xor
add
pop
xchg
dec
adc
push
lret
test
in
push
sub
push
or
insb
sbb
shl
stos
xchg
jns
dec
jnp
dec
dec
push
repz
sub
lods
mov
push
addb
dec
jno
jnp
je
test
mov
sti
fucompp
cwtl
push
fdivrp
loope
adc
in
xchg
jns
push
mov
cmp
mov
push
add
lahf
bound
mov
popl
xor
in
sub
sarb
mul
pop
push
xchg
rorb
adc
and
cmpl
out
push
cmp
sub
jle
rorb
add
jmp
push
jns
mov
dec
or
fs
loopne
cmp
sbb
sysexit
cwtl
pop
sbb
out
adc
pop
and
das
cmp
push
data16
xor
mov
sub
sub
jge
jp
int
xchg
hlt
rcll
movsb
cld
imul
adc
ljmp
jmp
dec
mov
xor
aas
std
xchg
inc
in
pop
push
xchg
and
mov
adc
icebp
lea
shrb
stos
movsb
neg
outsl
cmp
fldenv
hlt
dec
inc
sahf
or
mov
shll
mov
dec
outsb
into
outsb
add
fmul
cmpsb
pop
ljmp
addr16
mov
xor
add
adc
and
call
pop
or
sub
or
inc
in
adc
call
or
cmp
int3
daa
push
adc
add
cmp
cvtpi2ps
xchg
mov
jbe
pop
push
call
pop
fcompl
cli
xor
sbb
shrl
aad
in
js
adc
push
xor
inc
dec
sub
sub
mov
cmp
xchg
dec
mov
pop
inc
cmp
jns
fcmovu
jg,pn
movsl
lret
inc
push
or
out
movsb
xchg
fistpl
inc
cwtl
dec
clc
sbb
jmp
sbb
mov
push
push
iret
and
rol
loopne
clc
fistpll
mov
inc
movsl
mov
xchg
mov
or
pop
je
sub
push
test
ja,pn
gs
mov
and
fucomip
mov
sbb
std
rclb
fisttps
add
dec
mov
mov
mov
pop
outsl
sbb
mov
pushf
test
xchg
shlb
lret
addb
xchg
outsl
jge
jp
push
inc
popf
sbb
add
jnp
dec
out
andl
jae
mov
ret
mov
fsts
push
bt
out
imul
sub
imul
scas
cmp
push
jb
lcall
jmp
leave
push
add
cmp
xor
jl
icebp
or
inc
sbb
and
stc
or
inc
or
xchg
mov
mov
xchg
adc
mov
sahf
xchg
pop
addb
add
xchg
xchg
adc
ja
sub
sbb
jo
lods
int
dec
ss
inc
adc
out
pop
mov
mov
add
pop
add
in
adc
pop
mov
push
add
icebp
push
dec
test
pushf
and
rcl
and
inc
jnp
add
sub
jmp
fdivl
mov
mov
fmuls
or
xchg
sub
data16
sbb
cmp
movsl
outsl
mov
in
aad
push
andl
jae
sbb
shl
in
daa
mov
xchg
cmpsl
xor
mov
pusha
test
test
mov
divb
ja
adc
rcll
shrb
cmovnp
xor
mov
rorl
pop
and
mov
mov
mov
and
xchg
fistps
cld
out
loop
js,pn
outsb
adc
push
fs
or
cs
xorb
bound
cwtl
sbb
in
or
add
pop
lds
mov
int3
ja
aam
jl
add
sbbl
push
shll
loop
or
pop
test
dec
cmc
cmp
push
mov
dec
sub
getsec
sub
cld
insl
inc
lods
mov
clc
lock
test
lret
inc
adc
adc
dec
mov
push
cmp
push
les
fs
insl
jbe
xor
mov
push
dec
pop
hlt
lods
arpl
stos
cli
add
cmp
fldenv
popf
frstor
push
mov
jnp
ljmp
andb
cli
xor
je
test
shl
xchg
mov
push
int
sbb
and
cmpsl
daa
lcall
imulb
ret
cs
sbbb
dec
cmp
mov
imul
dec
mov
daa
push
jo
andl
das
jns
cmc
dec
push
lock
jmp
cmpb
fimull
movsl
arpl
ljmp
or
cmp
and
sub
dec
aas
cmovb
call
sti
pop
mov
push
ds
add
jg
fistpll
cmpsb
sti
dec
shll
cmc
movsl
and
add
clc
aad
mov
xchg
inc
cmpsb
sbb
xchg
push
je
jmp
adc
std
jno
cmp
push
sub
mov
subl
add
in
sbb
mov
dec
call
cmp
mov
ret
jo
mov
sub
xchg
lds
rolb
or
lret
cmp
jecxz
mov
adc
jno
lods
sti
jl
sub
lock
lret
jb
or
adc
stc
gs
test
add
mov
ret
mov
out
pmullw
lods
xor
xchg
push
stc
in
cli
cmc
xor
mov
mov
push
jno
popa
mov
test
xor
and
adc
add
icebp
and
rcll
inc
adcl
test
xor
and
adc
add
icebp
and
xor
mov
mov
push
jno
popa
mov
test
xor
and
adc
add
icebp
and
rcll
mov
stos
mov
pop
sti
test
inc
insl
test
sub
sbb
add
adc
sub
dec
pusha
push
je
fs
mov
leave
in
sbb
push
and
xor
add
adc
pop
jo
inc
jns
andl
nop
leave
into
fdiv
jmp
xchg
divb
lcall
jno
outsb
bound
loope
loop
mov
xchg
lcall
jno
push
push
jne
outsl
movsl
mov
adcb
ret
mov
aas
negb
sub
mov
sti
cltd
mov
dec
push
jg
shlb
scas
add
dec
sbb
pop
sti
loopne
mov
jnp
popa
or
addl
inc
adc
pop
fldenv
or
leave
add
adc
inc
addl
in
dec
cmc
mov
aas
adc
std
dec
out
sbb
jno
subl
mov
mov
in
xchg
add
fistps
iret
data16
shl
rolb
jbe
data16
push
mov
mov
sub
mov
sub
pop
pusha
inc
jo
inc
pusha
ret
sbbl
rcr
rcrl
fsub
loop
and
insb
pop
jl
lds
std
jecxz
rcr
xlat
rep
cmpsl
mov
mov
dec
jae
jl
xor
and
rcrl
lods
scas
stos
lock
movsl
stc
mov
dec
insb
cmp
pop
jo
inc
jns
mov
mov
lock
and
xor
add
adc
pop
jo
inc
jns
mov
mov
lock
and
data16
push
popw
jne
jmp
ljmp
push
imul
sub
xor
in
loopne
jne
pop
lret
loop
dec
jnp
adc
subb
xor
cli
enter
mov
pop
lret
mov
adc
daa
int
cmp
jb
popf
inc
repnz
push
inc
sub
push
and
pop
pop
push
sbb
or
mov
dec
and
sub
pop
aam
cmp
fneni(8087
nop
lcall
out
inc
sub
fiaddl
add
xor
mov
pop
and
fidivs
inc
cmp
lret
ret
mov
imul
pop
outsb
icebp
inc
imul
ret
push
arpl
xchg
add
imul
scas
pushf
addr16
insl
mov
cmp
inc
and
ficoml
leave
push
or
mov
mov
test
shlb
loop
dec
in
scas
sbb
popf
out
xor
dec
lods
jae
adc
sub
je
arpl
std
js
jns
insl
imul
popf
lods
sbb
xor
push
pop
testb
add
aas
and
lcall
lock
mov
fimull
rcl
addr16
xchg
push
inc
xchg
popf
cmpsb
jns
and
mov
lret
or
sbb
int3
sbb
addr16
fstpl
mov
cltd
jae
mov
cwtl
sbb
imul
jb
test
popf
mov
dec
sbb
lods
dec
fdivrl
sub
adc
int3
dec
popa
adc
sub
in
out
pusha
push
rorb
mov
lock
das
aaa
mov
push
fwait
cmp
mov
mov
mov
mov
sub
sbb
aam
adc
out
push
pushf
push
and
clc
lcall
and
lods
jmp
inc
xchg
push
jb
or
inc
pushf
inc
outsb
adc
fdivr
cmp
mov
push
aaa
stos
push
mov
pushf
xchg
jo
loopne
mov
aam
pop
inc
adc
arpl
rorl
repz
icebp
dec
test
ds
divl
xor
hlt
daa
or
push
insl
and
jb
xchg
mov
loopne
or
mov
in
mov
and
jmp
mov
add
add
sub
push
fidivs
std
nop
subb
xlat
pusha
inc
xchg
inc
inc
fists
mov
movsl
push
mov
not
lea
xchg
push
push
out
and
xchg
popf
mov
adc
cmpsb
arpl
gs
adc
inc
cwtl
pop
cmpsl
sub
xchg
fcmovbe
pop
cmp
cmp
out
sub
mov
jae,pn
test
pop
lea
pop
sub
xchg
int
or
aad
mov
out
scas
enter
pop
pop
stos
push
or
jb
mov
add
cld
push
jge
xchg
cmp
das
f2xm1
cmpb
xor
add
rcr
cmp
pusha
dec
insl
mov
mov
mov
jp
in
mov
mov
push
xchg
test
cmp
or
jp
outsb
ret
pop
lock
add
scas
aad
mov
mov
or
js
fwait
sbb
jbe
fldcw
movsb
and
sbb
adc
push
push
sub
xchg
or
push
test
fsubs
sub
xchg
jmp
orl
and
add
shll
fcoml
pusha
push
push
sbb
cmp
sub
pop
cmp
cmp
dec
and
push
xlat
nop
enter
or
arpl
mov
stos
test
rcll
sub
clc
jmp
pop
add
les
call
daa
jle
push
cmc
lock
lcall
sbb
jne
dec
xchg
jmp
out
dec
cmp
in
mull
insl
cmp
xlat
mov
pop
pop
loopne
aad
je
dec
mov
add
pop
int
mov
cmpsl
jecxz
fmul
arpl
dec
mov
lcall
out
dec
xlat
push
outsb
sub
decl
cld
pusha
out
or
jo
je
jns
push
mov
mov
inc
lea
lahf
test
ss
bound
fwait
cs
add
add
gs
ljmp
les
xchg
pop
stc
mov
test
subb
xchg
sub
mov
sbb
cmp
xchg
or
das
mov
inc
fstpl
out
nop
loop
ss
cld
cwtl
inc
pop
add
inc
int
cld
scas
in
sub
xlat
loop
pop
or
cwtl
mov
pop
test
cmp
lods
mov
inc
push
ljmp
in
leave
cwtl
outsl
sbb
mov
sbb
movsl
testb
pop
sbb
push
leave
dec
mov
or
mov
outsb
movsl
inc
jmp
mov
mov
ss
sarl
pop
pop
push
push
adc
mov
add
jne
cmp
xor
jecxz
push
pop
imulb
sahf
test
shr
sub
pop
fcompl
stc
jl
mov
loop
mov
jg
xor
or
pop
fistpl
jg
pop
and
mov
inc
lods
and
hlt
add
data16
ss
xor
mov
mov
negl
inc
xor
pop
nop
xchg
test
xchg
pop
push
or
sub
xchg
test
xor
cmp
movsb
cmp
dec
sti
mov
jmp
in
push
lods
je
add
js
aaa
in
xor
test
push
xor
lock
loop
and
fcoms
xor
push
bound
rcrl
loopne
cmc
add
push
shll
lcall
notb
and
add
bound
test
pop
fistps
xor
shlb
add
cmp
xor
dec
xlat
in
jo
fdivl
xchg
cmp
ljmp
cli
pop
sbb
fadds
bound
mov
mov
pushf
jp
lea
adcb
les
fimull
push
pop
lods
inc
or
inc
or
mov
mov
sbb
inc
sbb
cmc
and
add
xchg
test
les
fnstcw
iret
inc
pushf
mov
jns
out
jl
pop
dec
lea
loopne
hlt
ret
stc
jmp
jae
push
rcll
mov
out
push
pop
cmp
and
push
insb
or
inc
mov
pop
fs
cmp
pop
loope
cmpsb
cmpsb
fiaddl
fistpl
enter
loopne
pusha
fimull
ss
jl
lock
pop
push
sbb
test
and
insb
xor
stos
pop
jp
pop
stos
jmp
mov
and
stos
lds
jne
mov
imul
and
push
pusha
lods
hlt
xchg
loope
dec
mov
test
js
add
gs
xorb
push
test
daa
aas
mov
jle
popf
das
outsb
pop
and
decl
xor
int
insb
push
mov
pop
adc
popf
cmp
call
mov
sbb
xor
mov
add
out
flds
aad
fcompl
lock
popa
imul
rcrl
lea
nop
pop
rol
sahf
mov
mov
xchg
sti
jns
and
jo
stos
lds
lods
lds
sub
jnp
jb
inc
dec
adcb
lahf
iret
sub
test
xchg
scas
dec
adc
repnz
scas
adc
jg
xor
rcr
xor
xor
out
sub
shlb
adc
mov
pop
xor
cwtl
push
add
lods
outsb
cmpsb
adc
mov
or
push
je
mov
xchg
cmp
cwtl
ja
in
lods
in
pop
pop
fnstsw
out
mov
sahf
cltd
pushf
pop
fwait
xchg
pusha
fmull
add
add
lods
jl
das
sub
jle
xchg
rclb
add
dec
mov
cmp
xlat
pop
ret
xor
fistpll
and
or
adc
mov
cwtl
scas
cmp
cmpsl
les
mov
xor
dec
mov
ljmp
push
mov
push
imul
gs
stc
int3
jg
jno
addl
fdivrl
test
or
lret
lret
ret
pop
push
lds
mov
sbb
int3
xor
pop
cmc
push
addr16
sti
jno
sbb
fcoml
cmc
pop
cmp
sbb
popf
das
dec
mov
sub
mov
adc
xchg
pop
les
push
add
xchg
inc
pop
shll
cli
jle
jg
int3
fs
lods
inc
popa
jp
jno
mov
push
xor
mov
fisttpll
and
mov
push
aam
or
add
mov
loopne
iret
xor
cmc
lcall
or
cwtl
enter
jnp
cmpb
push
sbb
ret
mov
add
push
jns
xor
push
fcmove
aad
mov
mov
mov
push
test
rol
pop
aam
pop
sub
dec
xchg
js
and
ja
mov
mov
pop
ret
mov
mov
int
push
repnz
out
or
sub
popf
cli
or
pop
add
in
dec
repz
pop
clc
push
fwait
stc
repnz
xchg
inc
in
jno
push
pop
xor
loopne
inc
add
out
daa
dec
imul
pop
sbb
mov
push
sub
nop
push
push
cmp
jecxz
fwait
push
test
vmwrite
and
mov
ds
repnz
notb
out
sub
pop
out
and
aad
cmp
jno
test
addr16
add
ret
movsl
cs
jbe
rclb
sti
daa
adc
lock
lcall
and
roll
xchg
adc
aas
xchg
aas
xor
jae
mov
pop
fsub
push
dec
fs
inc
addl
js
and
mov
outsb
mov
add
xorb
mov
jns
andl
cmpsl
push
fcoml
pusha
cmp
sbb
mov
je
inc
add
add
mov
push
jp
outsl
lods
into
nop
jnp
ret
mov
outsb
out
adc
inc
add
sub
jl
sbb
cmp
mov
cmp
lret
popa
mov
jmp
and
cmpsl
aas
repz
mov
pop
test
movsl
xchg
mov
add
jns
xchg
cld
jg
pop
addr16
adcl
and
mov
adc
in
aaa
cmp
inc
cmp
jne
pop
je
repz
jb
test
inc
rcr
jl
sub
fistps
dec
and
lods
cmp
add
dec
out
xor
mov
sub
push
js
call
add
and
xchg
ljmp
add
pusha
sarb
popl
pop
sbb
inc
jle
fucomip
mov
loope
jmp
cmp
mov
rcll
push
pop
push
hlt
push
sti
xchg
xchg
mov
mov
sti
sub
xor
push
popf
mov
jnp
test
fs
adc
gs
outsb
inc
out
xchg
fdivl
xor
ss
and
or
adc
stos
jp
or
lcall
cmp
call
insb
ja
mov
outsb
lret
cwtl
and
loope
mov
dec
out
int
mov
fists
cmp
mov
and
sbb
loop
popa
frstor
rcrl
cld
sahf
jl
cmp
dec
fsubrs
jns
cmp
call
popa
std
xchg
sbb
clc
pop
loopne
arpl
orb
outsb
pop
cmpsl
ficompl
imul
and
aad
and
les
cmpsl
xchg
mov
add
fwait
clc
or
scas
rcll
jp
pop
xor
inc
xor
je
cmpsb
es
dec
push
enter
loopne
jb
scas
push
or
cmp
clc
lret
repnz
dec
testb
push
xlat
pop
orl
cmp
mov
push
int3
dec
lea
in
cmp
lahf
fwait
rorl
xor
sub
mov
adc
mov
repz
xchg
negb
xchg
pop
popf
in
jg
jns
faddl
rcl
rcrl
xchg
in
and
jno
xor
and
jo
and
xchg
cmp
dec
cmp
push
out
in
mov
or
inc
jae
fistl
ss
inc
jg
or
jge
or
sub
mov
les
jo
test
push
inc
imul
mov
mov
sbb
sti
fiaddl
pop
test
insb
add
cmpsb
out
imul
mov
xchg
inc
xchg
dec
insb
sbbl
aas
sbb
lcall
popa
lcall
and
adc
adc
xchg
cmp
push
jmp
pop
lret
sub
cmp
movsb
sbb
inc
enter
into
daa
pop
pop
xor
fisttpll
xor
imul
push
fiaddl
insb
test
rolw
mov
in
inc
icebp
pop
ret
mov
data16
stc
xchg
pop
push
xchg
pop
fcmovnb
js
aad
mov
dec
cli
sbb
pusha
sub
mov
lock
mov
inc
jb
pop
xchg
loopne
movsb
push
sub
mov
mov
adc
cmp
xchg
xchg
pop
inc
adc
bound
incl
pop
pop
push
lahf
sub
xchg
movsl
mov
int3
sub
push
out
iret
scas
negb
rorb
cld
sahf
cmp
or
or
test
xor
test
mov
mov
sbb
or
aam
mov
xchg
mov
lret
std
cmp
jecxz
push
mov
std
jmp
mov
subb
adc
xor
inc
loopne
cmp
test
xor
xchg
ja
adc
imulb
inc
addr16
pop
pop
sahf
cmc
jge
xor
loope
cmp
cmp
sbb
loop
mull
pop
cld
hlt
mov
loope
add
cmpsb
mov
sub
lahf
ss
jp
mov
xchg
int
adc
in
lcall
adc
jno
out
movsl
mov
out
push
push
mov
push
enter
jo
pop
jmp
das
arpl
sbb
loope
sbbb
bound
inc
push
movsl
stos
lods
ljmp
dec
imul
dec
pop
shrl
mov
push
stos
and
inc
add
in
in
shll
mov
outsl
dec
fwait
cmpsl
mov
push
mov
mov
imul
mov
bound
pop
jp
xor
xchg
sbb
ljmpw
xor
in
je
pop
mov
std
clc
xchg
jl
sbb
lahf
mov
mov
mov
fisttps
push
cwtl
mov
call
cmp
pop
xor
pusha
jmp
daa
jae
xchg
jae
out
xor
mov
jbe
inc
push
push
es
jle
cmp
leave
scas
or
ret
sbb
insl
push
xor
add
mov
jne
movsb
ret
inc
sarl
cmp
or
dec
cmp
adc
sbb
and
jae
or
lcall
aas
sbb
cmp
outsl
int
insl
fdivrl
shll
push
ret
rcr
mov
sbb
loopne
push
fstpl
pop
fwait
cltd
ret
jae
cmp
rorb
push
hlt
dec
cmp
and
pop
mov
jp
scas
orb
in
push
mov
negb
fistpll
jne
mov
sbbl
mov
in
mov
xor
mov
std
addr16
and
and
mov
popa
imul
or
xor
mov
ja
mov
hlt
cmp
lock
pop
mov
xor
pop
add
pop
sub
jne
adc
insl
push
insb
pushf
ljmp
sbb
xchg
push
push
cmp
adc
enter
push
dec
icebp
or
jae
mov
jae
leave
sar
pop
aaa
dec
push
lods
insb
out
fnstsw
mov
pop
aad
mov
popf
pop
lds
jge
sbb
and
cltd
cld
jg
cmp
jne
out
push
outsb
pop
invd
test
movsb
pusha
lret
jae
jle
push
sbbb
mov
movsl
inc
pop
mov
add
xor
cmp
in
rcll
inc
stos
notb
push
inc
jge
iret
fs
sbb
jbe
sbb
fucomp
mov
xor
adc
pop
adc
cwtl
cmp
std
nop
popa
es
or
mov
and
scas
adcl
loopne
test
ljmp
jae
dec
add
rcr
sub
push
cmc
dec
push
adc
lods
imul
adc
call
das
std
xchg
lea
adc
loop
push
mov
int
out
mov
and
xchg
stos
mov
push
cmpsb
inc
mov
pop
icebp
arpl
mov
push
mov
setle
inc
mov
mov
sti
aad
dec
out
xlat
vsqrtsd
cmp
dec
or
adc
xor
cltd
push
hlt
ret
scas
pop
and
enter
inc
loope
jmp
sbb
ret
xchg
movsb
rolb
xor
stos
adc
push
jmp
adc
scas
dec
xchg
jmp
jge
ljmp
rclb
cmp
outsb
xchg
and
mov
jno
in
icebp
jne
int3
xchg
mov
jnp
add
jnp
push
das
mov
push
stos
add
outsb
jbe
sub
push
aam
mov
add
ds
fcoms
je
mov
pop
and
dec
jnp
cmpsb
push
jl
xor
or
cmp
add
jl
rolb
add
xchg
scas
and
or
cltd
xchg
psubusw
mov
cwtl
push
jbe
cltd
adc
in
mov
ds
stc
push
mov
in
loop
push
jge
sbb
pop
hlt
push
or
jnp
sub
leave
add
mov
xlat
lock
inc
mov
dec
imul
mov
jecxz
mov
into
pop
and
push
lods
push
push
in
inc
add
js
mov
pop
sub
ljmp
or
daa
mov
cmpl
sarl
stc
sarl
jg
lods
rolb
scas
mov
xor
jnp
leave
outsl
push
cmc
jl
addr16
fisttpl
cmp
aad
fsubl
xchg
add
out
xor
insl
dec
pop
sbb
adc
cmpsb
testl
int
fmull
out
xchg
jle
pop
fdivl
mov
and
stc
xchg
cmpsl
mov
mov
fwait
mov
rcpps
lcall
lods
lods
je
mov
jle
test
add
ja
lock
and
test
pop
or
sub
lahf
jb
mov
push
mov
lds
aad
dec
fnsave
cltd
scas
ds
ja
sbb
push
jns
adc
insl
xchg
push
addr16
or
loop
add
inc
test
cmp
stos
cmpsl
cmp
aad
stos
jns
mov
or
adc
clc
into
or
mov
aaa
fcoms
mov
dec
or
jb
push
xchg
and
pop
je
jno
sub
lahf
daa
movsb
mov
outsl
pop
dec
sbb
mov
xchg
adc
mov
ficompl
ja
pop
cmpb
inc
xchg
xlat
decb
xlat
int
mov
imul
mov
or
aas
ss
xchg
lods
cmpsl
inc
jne
hlt
enter
jge
incb
cmp
xchg
sub
xorb
aaa
cmc
dec
push
addr16
imul
loope
push
pushf
dec
rep
cltd
mov
fwait
mov
mov
sbb
in
dec
in
cmp
sbb
cmp
adc
or
insb
fwait
cmpsb
and
xor
push
dec
popf
hlt
test
out
dec
xchg
mov
roll
cmpsb
and
lods
and
data16
movsb
xor
push
ss
int3
clc
mov
lret
cmp
nop
insb
cmp
mov
add
pop
push
dec
mov
hlt
sub
lret
leave
in
add
imul
mov
fidivrs
aam
test
push
imul
and
xchg
lds
add
xchg
mov
ficompl
mov
data16
mov
fs
pop
mov
push
leave
mov
jns
lock
out
call
js
in
sbb
add
leave
sbb
mov
fwait
xor
dec
add
jb
pop
pop
cmp
imul
lret
xchg
icebp
cmp
and
pop
stos
push
inc
xlat
jnp
sub
gs
pop
add
adc
jne
cmp
das
out
push
fmuls
add
in
adcl
push
mov
jbe
cmp
mov
jo
sub
cmp
sbb
ffreep
lds
adc
xor
cmp
dec
pusha
pop
jo
inc
jns
mov
mov
lock
and
xor
add
adc
pop
jo
inc
jns
mov
mov
lock
and
sub
cmp
pusha
pop
sbb
jns
mov
mov
lock
les
push
dec
pusha
pop
jo
sar
jbe
data16
cmpb
push
mov
in
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
xchg
or
inc
sub
fbld
adc
faddl
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popf
add
addl
add
add
add
add
add
add
cltd
add
add
and
jle
icebp
add
add
add
add
add
in
add
add
add
add
add
add
add
add
add
je
int3
add
pop
add
add
add
add
add
add
add
add
add
add
filds
inc
add
add
add
sbb
sbb
call
add
add
add
and
int3
add
xchg
add
add
add
movl
add
add
add
add
add
in
add
out
add
add
add
add
add
xchg
mov
sbb
ds
add
add
add
icebp
add
add
add
add
add
add
adc
add
add
add
add
add
in
mov
cltd
add
add
add
or
sbb
and
dec
add
add
add
add
add
mov
push
add
jo
mov
add
add
add
add
add
addr16
add
add
cmpsb
add
mov
call
add
add
add
and
jle
icebp
add
movsl
add
add
scas
add
add
add
add
add
add
add
add
add
add
push
add
movl
lret
add
xchg
jne
filds
dec
add
in
add
add
add
push
add
add
add
add
dec
add
add
add
add
add
xchg
and
roll
mov
add
add
pop
add
add
push
add
add
add
add
dec
add
add
push
add
add
add
add
add
add
mov
fadds
jne
mov
add
mov
add
add
add
add
add
add
jo
enter
jb
xchg
add
loope
pop
add
add
add
add
add
add
add
add
add
cli
add
add
icebp
add
add
add
add
add
add
add
add
add
add
add
add
str
add
sbb
add
add
push
add
add
add
add
jbe
mov
add
sub
add
add
movsb
add
add
add
add
add
add
push
add
jae
loope
in
jo
cli
add
and
add
add
add
push
add
add
add
add
add
push
add
add
roll
add
add
add
bound
call
add
add
add
add
add
add
add
add
add
push
add
inc
add
add
add
add
dec
add
sub
ret
add
in
pop
add
add
adc
roll
add
jl
xchg
add
add
add
roll
pop
sub
xchg
pop
sbb
pop
mov
pop
cmp
subb
jmp
dec
push
dec
xor
fsts
loope
sub
push
sub
scas
jecxz
pushf
cmpsb
cmp
ds
mov
les
or
test
in
in
cmpsb
lcall
jns
fwait
pushf
imul
bound
ja
icebp
mov
adc
jge
fistps
orl
icebp
scas
out
stos
jle
jno
movsl
int
addr16
cmp
adc
jp
jns
dec
adc
adc
and
ds
and
pop
repz
shr
leave
insb
adc
cwtl
xor
pop
pusha
push
testb
xchg
outsb
adc
or
jnp
and
push
and
mov
pop
pop
or
arpl
pop
xchg
nop
xchg
pop
adc
mov
and
sti
imul
repnz
adcb
out
pop
inc
xchg
sub
std
jle
jge
ret
fs
repnz
xor
adc
mov
add
leave
inc
orb
out
in
xchg
enter
repz
lret
push
dec
add
cli
mov
loop
dec
popa
mov
test
xor
test
loop
pop
cltd
or
sti
dec
lds
xchg
push
test
mov
arpl
and
xor
addr16
lods
lods
mov
jns
inc
addr16
mov
pop
jbe
push
aas
dec
popa
out
mov
push
add
mov
mov
lea
shll
pop
jo
iret
pushf
push
int
adc
jns
adc
shr
cltd
sub
je
or
mov
push
xor
lahf
adc
inc
mov
jmp
int
into
cmp
and
mov
and
add
shl
mov
push
jg
in
cmpsl
xor
incb
sub
jo
mov
push
mov
stc
cmp
or
mov
push
pop
bound
sbb
cmp
mov
sbb
xor
sub
pop
mov
hlt
xchg
in
jne
pop
shlb
fwait
xor
jne
xor
out
cmp
test
jge
pop
jmp
popf
sub
xchg
int
mov
pop
mov
daa
and
dec
mov
fsubrs
bound
loop
pop
inc
fiaddl
xchg
mov
jno
orl
push
mov
xor
shl
fidivrs
pushf
xor
sahf
rolb
arpl
mov
rol
mov
outsb
ja
mov
into
push
lret
div
fstpt
fwait
sbbl
mov
push
pop
lods
mov
sub
inc
neg
movsb
out
dec
mov
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
