call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
pop
loop
or
sbb
pop
insl
sbbb
lods
test
aad
movsl
std
mov
push
sbb
jne
add
jge
sbb
popf
aad
cmpl
mov
pop
dec
or
sbb
or
cmp
inc
fsubrp
mov
sbb
mov
in
xor
dec
sbb
push
push
popa
int3
mov
sahf
sub
in
icebp
and
lods
mov
fcomps
pop
ljmp
mov
clc
mov
dec
cld
cmp
sbb
or
mov
dec
push
adc
aaa
fldt
or
std
ror
jb
xchg
fldl
test
add
icebp
bound
push
add
xor
adc
stos
in
outsb
add
xor
into
sub
das
mov
movsl
fstl
sub
pop
mov
cmp
sub
sbb
mov
faddl
imul
pop
cmovge
sbb
dec
std
lods
in
in
icebp
lea
ss
xor
popa
sub
daa
adc
or
leave
fwait
jmp
mov
push
dec
add
jno
jnp
dec
adc
xbegin
or
out
aad
mov
sub
addr16
add
dec
jge
adc
insl
lds
cmc
lods
test
xchg
int
std
mov
inc
sbb
jne
add
jge
insl
lds
cmc
lods
test
xchg
int
std
mov
inc
sbb
sbb
outsb
lcall
in
fcmovnb
pop
cmp
sbb
add
mov
pop
movsl
rcrl
mov
push
mov
gs
mov
dec
cmp
aas
imul
sub
aam
jae
xlat
stos
mov
jae
sbb
mov
loopne
inc
stos
jp
mov
pop
rcr
shr
cmpsb
mov
fstp
and
iret
push
xchg
jge
adc
jae
jl
mov
fists
sub
and
sbb
jo
cmpl
mov
pop
mov
push
or
fcmovnbe
inc
jg
test
inc
add
sahf
aas
pop
stc
sarl
add
into
in
jae
ljmp
lods
out
ljmp
rcl
dec
jl
aaa
sub
pushf
add
mov
jo
lahf
mov
negb
pushf
xor
pop
dec
sub
cmp
jnp
mov
xchg
pop
sahf
lock
pop
ret
andb
fsts
push
aaa
mov
pop
xor
push
xchg
jbe
fwait
clc
push
dec
jle
stos
je
mov
inc
adc
sub
ss
in
inc
clc
xacquire
pop
test
pop
adc
pop
cmp
push
dec
push
dec
dec
cmp
mov
imul
pusha
shll
jmp
subl
inc
cmc
xor
dec
out
sub
mov
pushl
inc
sub
push
push
inc
sbb
or
sub
and
out
pop
lahf
add
mov
cmp
loope,pn
and
sbb
lahf
sbb
and
mov
leave
in
jae
shrl
ds
fdivp
sub
icebp
imulb
inc
incl
or
je
push
push
cs
inc
jbe
mov
jne
mov
je
push
cld
outsl
imul
repz
xchg
sub
pushf
inc
mov
cmp
xor
stc
rclb
or
ret
adc
sarl
je
dec
mov
jmp
add
movhps
xor
imul
xchg
movb
push
bound
mov
push
mov
and
jns
sahf
push
orb
jne
mov
push
dec
cmp
stc
inc
cmc
xlat
leave
jmp
cmp
inc
cmp
in
popa
jno
ret
mov
es
pop
bnd
mov
adc
aaa
push
out
popf
ficompl
ljmp
adc
int3
fmuls
popf
push
adc
sub
imul
repz
mov
les
jae
pop
fmuls
mov
fildll
push
sbb
xchg
fcoml
cmpsb
sbb
out
rolb
in
sti
les
pushf
lahf
xor
xchg
cmpsb
aad
hlt
adc
dec
push
sub
dec
and
sbb
mov
jge
aas
cs
psllw
xchg
jb
lods
push
in
mov
jp
mov
ror
pop
xor
xchg
lods
ret
out
adcl
data16
adc
js
scas
popf
sub
lret
jmp
rclb
cld
push
testl
sub
add
jb
pop
inc
rcll
dec
sbb
and
rolb
mov
adc
sbb
loop
ret
xchg
sub
sub
cltd
sub
test
notb
jge
fs
push
or
and
idiv
push
or
hlt
push
stc
mov
xor
fcompl
lcall
pop
fisubs
pusha
mov
cmpsl
clc
jnp
push
mov
and
xor
push
xor
int
sbb
imul
mov
outsl
jmp
repnz
cwtl
sub
rolb
sub
movsb
or
fidivs
pop
nop
les
sub
loope
fdiv
sub
cmp
out
jp
sub
lcall
sub
test
mov
loope
psubsw
sarb
cmp
push
iret
xchg
roll
loop
dec
scas
mov
pop
mov
add
adc
out
cmp
mov
push
and
popf
ret
lea
sub
mov
sbb
gs
push
sub
int
mov
imul
and
das
xchg
cwtl
idiv
sbb
lahf
sar
mov
xor
pop
enter
lods
dec
insl
xor
push
mov
rcll
in
add
inc
sbb
jbe
mov
adc
notb
neg
in
leave
sbb
mov
and
cmp
ss
rcrb
js
sbb
fwait
test
loopne
arpl
mov
jecxz
fdivrl
or
pop
mov
clc
push
jbe
mov
icebp
fcoms
out
push
mov
jge
insl
inc
jmp
test
neg
lods
jg
ljmp
in
mov
push
mov
inc
ret
imul
add
fdivp
incb
hlt
sbb
sub
xor
mov
mov
test
and
incl
popf
adc
insb
lods
lahf
xchg
xor
shll
inc
fildll
cli
sbb
in
push
pop
and
adc
sti
sbb
call
add
push
or
lock
adc
ljmp
sub
push
pop
test
es
mov
jmp
sbb
mov
imul
mov
bswap
mov
lea
mov
adc
repz
loope
cmpsl
sar
ja
arpl
and
les
orl
stos
pop
and
mov
pop
roll
ja
addr16
pusha
nop
stos
hlt
cli
cld
punpckhdq
cs
lret
mov
negl
sbb
ret
pusha
push
dec
pop
scas
int3
or
movsb
inc
lret
xchg
mov
bound
mov
aas
sbb
out
mov
or
insl
andb
jp
jg
ret
xchg
je
pop
daa
stos
inc
lods
add
gs
cmp
jecxz
jae
repz
pop
lods
scas
dec
out
mov
mov
mov
popa
pop
xchg
sub
adc
out
inc
call
cmp
dec
or
in
push
loope
into
or
iret
xchg
mov
add
bound
and
fadds
sbb
loop
sub
adc
es
insl
ret
movsb
shl
xor
enter
pop
inc
adc
lret
leave
inc
bound
repnz
mov
dec
js
arpl
inc
push
pop
aaa
inc
push
in
std
push
mov
push
into
xchg
sub
xchg
push
jbe
ja
addl
pop
adc
data16
rcrb
jg
repnz
sub
dec
testb
out
popa
and
jmp
ret
push
rcl
mov
cs
roll
mov
test
cmp
sti
notl
dec
sbb
xor
rorl
rcl
lods
test
and
mov
cli
mov
repz
repnz
je
int3
shll
mov
cwtl
xchg
jbe
cmp
push
push
sub
mov
stos
jecxz
pop
ljmp
daa
pop
int
mov
mov
xchg
cmp
and
addl
inc
call
lret
jne
push
cmpsb
ret
adc
rorb
int
adc
aas
pop
or
lods
sub
xlat
sahf
or
into
arpl
inc
fwait
div
jo
mov
inc
jbe
adc
outsl
jns
test
jg
mov
clc
push
leave
mov
sarb
test
jmp
push
lds
popf
inc
sbb
aas
lret
fistps
sub
mov
pop
cmp
mov
fs
mov
stc
filds
repnz
pop
sbb
js
das
sahf
imul
and
and
scas
cmp
and
pop
aam
mov
loop
sbb
jo
add
add
or
mov
je
daa
fisttpll
cltd
mov
mov
data16
cmp
test
daa
cmp
add
push
and
loop
and
sub
lods
pop
js
lea
sbb
repz
das
and
dec
xlat
jecxz
add
jne
xor
clc
pop
leave
mov
xchg
outsb
pop
jnp
xchg
aaa
mov
mov
scas
loop
push
inc
dec
insl
jb
enter
mov
cmp
push
cmc
popa
cmpsb
or
fadd
lods
or
pop
ljmp
push
push
loop
cmpsb
xchg
shrb
vandnps
lret
and
or
xorl
addl
mov
popa
push
dec
cmpl
rclb
mov
mov
mov
lret
call
les
jp
pop
add
adc
ficoml
cmp
cmp
dec
add
push
testl
or
icebp
mov
mov
sub
mov
mov
dec
and
notl
popf
mov
cmp
into
cmp
dec
mov
and
int
test
mov
cli
lea
or
pop
cld
cmp
ret
js
std
pop
mov
aad
int
cmp
cli
sbb
xchg
pop
lds
lret
daa
ss
cmp
sahf
sti
scas
je
sub
jae
and
mov
das
aas
mov
pushf
sti
mov
int3
or
jnp
aaa
pop
mov
pushl
fcos
or
outsb
mov
lahf
addr16
nop
mov
push
pop
lea
add
inc
add
test
mov
rcr
jne
aam
aas
cli
pusha
jne
sti
push
or
xchg
bound
xchg
imul
loopne
stos
push
mov
stos
push
cmpl
mov
pop
sbb
xchg
lahf
push
lret
sbb
icebp
sbb
mov
mov
mov
pop
rclb
dec
inc
mov
and
mov
clc
imul
bnd
mov
pusha
push
les
icebp
lods
sbb
jae
fisttps
fwait
in
ret
mov
shl
inc
sbb
call
pop
xor
adc
and
mov
cmp
mov
xchg
fiadds
bound
icebp
xchg
loope
aaa
outsb
sbb
pop
stc
adc
inc
enter
hlt
ret
dec
in
mov
adc
icebp
push
and
pop
lods
mov
add
test
sub
comiss
mov
mov
pop
rol
pop
dec
arpl
cltd
xor
mov
aaa
or
ljmp
cmp
mov
fstpt
in
and
sbb
inc
adc
lahf
jg
push
dec
cmp
sbb
adc
jle,pt
mov
popa
or
push
test
mov
add
aas
dec
fwait
movsb
subl
roll
divw
mov
iret
roll
mov
in
adc
js
pop
xchg
int3
loope
pop
daa
das
inc
loopne
lods
sbb
mov
xchg
rcll
pop
push
int3
repz
hlt
sub
icebp
dec
push
adc
imul
and
out
adc
stos
movsb
setae
adc
aam
rclb
loop
out
xor
cmpsl
fadds
add
pop
insb
push
jg
sub
or
outsb
jbe
push
out
xor
rcrb
and
lock
jb
push
inc
xchg
mov
push
mov
jle
or
stos
bound
and
int
jnp
mov
das
xor
arpl
cs
call
or
mov
mov
cmpsl
fsts
cmp
cmp
pop
or
inc
scas
sbbb
fcoms
adc
movsl
push
or
clc
cmc
mov
scas
and
adcb
xor
scas
xchg
fsubs
jmp
in
cltd
in
stos
lahf
xchg
int3
sub
gs
push
loopne
add
popl
test
repnz
in
pusha
xchg
mov
and
aad
sahf
cmp
shrl
or
and
xchg
outsb
imul
stos
dec
andb
shl
push
or
add
cltd
sbb
lret
repz
dec
jo
mov
mov
push
and
insb
data16
jae
jmp
ficoml
scas
data16
outsb
push
cwtl
outsl
mov
repnz
cmpsl
stos
fsubrl
pop
aas
and
addb
jae
and
insw
popf
and
fcmovnu
ljmp
rol
shrb
cmpsl
repnz
out
mov
pop
or
pop
cli
iret
dec
ret
nop
bound
pushf
jns
push
mov
dec
dec
mov
mov
insl
mov
out
mov
loope
jbe
sub
adc
mov
xchg
in
int
add
add
into
outsl
sbb
xor
jbe
stos
mov
jne
fwait
pop
andl
dec
xlat
aad
mov
add
psubusb
mov
cwtl
mov
fimuls
jb
inc
mov
data16
or
xor
int
add
inc
mov
jae
stos
mov
and
inc
aas
mov
std
mov
mov
in
popf
push
stos
inc
sti
or
lock
push
mov
adc
or
cld
testb
sbb
sahf
mov
inc
ss
std
daa
xor
movsb
inc
push
cmpsl
sbb
sub
cwtl
lods
or
cli
fiaddl
outsl
int3
jp
arpl
aad
xlat
mulb
rcr
ficoms
jl
fsub
mov
in
insl
xor
xchg
push
ret
imul
std
jg
imul
lret
pop
push
dec
cmpsl
notl
lock
sti
adc
cwtl
push
movsb
pop
xor
add
adc
pop
add
mov
icebp
cmp
mov
xchg
call
insb
sbb
leave
sub
cmpsb
movsb
xor
xchg
shll
adc
push
mov
ss
dec
loop
clts
fwait
xchg
fsubrs
shlb
repnz
imul
xor
mov
xlat
popa
sbb
stc
loop
nop
movsl
add
and
ja
bound
mov
lea
imul
jne
lods
cmp
stos
stos
jns
js
xchg
mov
stos
push
mov
into
jbe
mov
cltd
cmp
rclb
mov
and
pop
mov
dec
inc
cmp
hlt
scas
mov
xchg
pop
xorb
mov
push
dec
ss
mov
inc
addb
inc
stc
aad
dec
add
cmc
mov
mov
dec
pop
loope
mov
ljmp
and
aam
inc
shll
stos
in
loop
in
fstps
divb
inc
xchg
scas
jg
xchg
push
cwtl
and
sbb
sbb
mov
in
out
and
cmpsl
xchg
lcall
aam
popf
cmpsl
cs
xchg
or
mov
push
dec
enter
mov
test
popf
push
ljmp
cmp
icebp
xor
jns
lea
push
sub
sti
mov
or
sahf
mov
and
push
pop
jae
das
mov
in
lea
jbe
mov
or
les
lcall
dec
or
or
fimull
lea
ds
jp
push
add
xchg
sub
data16
frstor
ja
pop
outsl
push
pop
and
dec
cwtl
mov
adc
xchg
cld
mov
inc
scas
jae
and
inc
dec
fs
cs
pop
aam
test
sub
lea
push
mov
pop
mov
cs
pop
mov
ret
xchg
cmp
rorl
sbb
enter
sub
sbb
inc
sbb
dec
jmp
shl
push
cwtl
scas
add
pop
xor
push
xchg
test
addr16
xchg
insl
into
xchg
cmp
and
sub
rcrl
push
mov
ja
sbb
jl
imul
sub
jae
mov
in
dec
cmpsl
mov
pop
das
ss
sbbb
mov
ret
cmpsb
call
sub
mov
sub
jecxz
popf
in
xor
adc
outsl
xlat
or
pusha
push
imul
fnclex
pushf
cmpsl
jmp
bound
repnz
mov
mov
sub
push
mov
cwtl
mov
fdiv
jl
mov
fwait
or
xchg
sbb
or
daa
add
negb
mov
movsb
testl
mov
cli
imul
test
cmpb
xor
lret
pushf
shl
cwtl
jge
scas
lret
mov
adcb
test
xor
test
loop
sbb
push
mov
push
and
cli
fisubrl
je
imul
jecxz
push
xchg
data16
and
sbbl
xchg
dec
fwait
mov
hlt
pop
add
pusha
xchg
sbb
xlat
sbb
xchg
mov
mov
in
add
cmpsl
pop
mov
lea
jo
sub
jg
or
mov
mov
repnz
dec
push
or
jne
adc
sti
test
shl
add
and
xor
push
stc
repz
nop
cmpsb
lods
or
add
sar
arpl
bnd
sub
icebp
daa
xchg
daa
cmpsb
push
sti
pop
lret
xor
aam
and
in
add
push
cltd
push
jge
xchg
inc
jns
xchg
add
add
iret
adc
xor
mov
push
ja
mov
daa
jmp
es
push
ficompl
imul
adc
jecxz
loop
adc
mov
cmp
push
shl
mov
jmp
sti
dec
jp
lcall
jge
xor
cmp
mov
stc
rcrb
mov
jmp
mov
stos
dec
scas
dec
push
ret
jne
ljmp
xchg
xchg
xchg
sbb
fs
scas
test
inc
sbbb
xchg
in
mov
adc
lock
rol
loop
mov
dec
lods
fidivl
scas
xchg
xor
lock
bound
lods
ljmp
cmp
pop
fucomi
jle
bound
lret
xchg
in
mov
pop
sti
adc
stos
add
mov
fwait
and
dec
mov
je
mov
in
xchg
add
jno
loopne
and
add
imul
sti
prefetchw
daa
xchg
mov
or
pusha
stc
lahf
xchg
adc
das
mov
xchg
xchg
or
scas
push
mov
rcl
xchg
ret
rolb
cmp
pop
je
scas
loop
outsb
int3
and
inc
stos
xchg
stc
shll
cli
mov
sbb
aam
inc
aas
push
xchg
lods
add
test
xor
push
movsb
test
mov
jge
cmp
inc
or
or
into
pushf
mov
pusha
xor
sarb
stos
or
imul
inc
scas
xchg
mov
sub
mov
loopne
xor
inc
push
aaa
sub
sub
adc
sub
pmulhw
gs
cli
aaa
push
jle
out
shrb
xor
adc
out
pop
maxps
cmp
jge
int
test
addr16
inc
mov
or
in
add
sbb
in
add
or
sti
test
ljmp
jecxz
jo
xchg
jge
cmpsl
je
fisttps
jecxz
enter
xlat
lock
aas
xlat
or
jle
outsb
cmp
add
dec
pop
scas
fcoml
out
push
movsl
lret
into
add
pushf
cmp
xchg
sar
mov
sub
push
fists
pop
neg
push
ficompl
sbb
movsb
mov
mov
push
sub
gs
adc
lahf
popf
test
fcomi
pop
in
jmp
inc
and
fucom
adc
inc
push
ret
push
mov
subb
movb
stc
mov
sti
data16
xor
test
dec
dec
xor
mov
in
pop
repz
js
and
mov
and
out
lret
nop
int3
mov
and
dec
fldl2t
adc
pop
inc
bound
je
jnp
sub
icebp
xor
jae
inc
ficompl
push
lea
add
xchg
mov
je
dec
adcl
sti
xor
mov
adcl
adc
aad
cwtl
mov
cmp
ret
fildll
dec
ficompl
inc
addb
push
adc
cs
sub
rorl
jecxz
lds
jle
pop
push
mov
sub
sub
loop
sbb
jb
std
sub
test
dec
lret
je
xor
or
ljmp
mov
jl
shrl
sarl
xchg
pop
icebp
sahf
mov
jo
jecxz
or
dec
jae
xchg
jbe
aaa
in
lods
dec
rcr
dec
ret
int3
pop
mov
pusha
mov
inc
push
pop
mov
movl
push
scas
fs
pop
and
cmp
and
cs
in
xlat
js
xor
inc
enter
cmc
pop
inc
mov
and
mov
jbe
lock
fnsave
xor
lods
xchg
mov
mov
aas
jbe
mov
push
ss
mull
or
aaa
mov
iret
sbb
mov
int3
jge
cmp
fs
adc
mov
out
andl
incb
jbe
or
add
jge
insl
lds
cmc
lods
test
xchg
int
std
mov
inc
sbb
jne
add
jge
insl
lds
cmc
lods
test
xchg
int
std
mov
inc
sbb
jne
add
jge
insl
lds
loope
cmc
lods
test
xchg
int
fldl
push
cmp
adc
insl
cmp
daa
dec
mov
sbb
adc
in
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
and
xor
sub
cmp
mov
test
cmc
ret
aad
and
xor
inc
inc
jb
bound
xchg
xchg
mov
loop
or
cmp
jne
inc
push
js
jno
mov
lea
mov
imul
test
into
in
scas
mov
dec
mov
hlt
outsb
cmp
decb
xchg
mov
lock
icebp
mov
push
adc
mov
repnz
int
popf
inc
cmp
inc
cmp
mov
inc
jp
jmp
inc
ret
mov
inc
xor
jae
xchg
adc
cmpb
movsl
jge
push
mov
sbb
xlat
mov
sub
outsl
int
ret
jle
inc
and
pop
dec
adcb
testl
sbb
cmc
jmp
mov
xchg
fists
flds
mov
adc
gs
jne
inc
imul
mov
mov
xchg
pop
add
jo
or
sub
push
adc
in
mov
out
stc
int
mov
orl
and
sbb
push
push
push
shr
jecxz
shl
andb
xchg
insb
push
adc
gs
inc
jb
bound
mov
mov
loop
adc
and
jne
inc
jb
bound
mov
mov
loop
adc
xor
into
dec
mov
add
jmp
insb
test
jmp
fisttps
stos
jb
mov
lods
int
mov
iret
inc
inc
sahf
test
ljmp
xor
xchg
mov
sub
mov
mov
cld
inc
pop
mov
pushf
sahf
lods
push
ficoml
mov
movsb
andb
mov
cwtl
mov
lret
pop
and
sbb
cmp
ss
inc
int
stos
fistpll
int
or
sub
stos
jns
push
xchg
popl
ds
jecxz
fidivrs
rcr
pop
decl
mov
dec
ss
mov
pop
int3
lods
mov
sub
mov
and
gs
cmc
jmp
or
push
les
mov
xor
bound
xchg
lcall
sbb
cltd
jl
push
push
dec
cmpsb
lcall
cmp
mov
addr16
loopne
adc
pop
sub
and
mov
test
je
sub
or
xchg
push
mov
pop
mov
push
xchg
pop
aad
ljmp
lret
xor
mov
adc
push
jp
pop
jnp
lods
fldl
push
insb
in
lea
or
ljmp
mov
imul
xor
pusha
mov
add
adc
imul
cwtl
into
lret
repnz
or
arpl
fwait
xor
mov
outsb
mov
dec
jnp
fwait
xchg
cmpsl
inc
mov
dec
pop
movsb
mov
inc
bound
in
mov
adc
cs
icebp
movsl
mov
in
push
test
push
push
shlb
cltd
pop
lret
mov
hlt
dec
imul
push
stos
xor
pop
data16
xchg
or
nop
dec
int3
add
test
outsl
pop
pusha
rol
repnz
out
and
lret
sub
pinsrw
data16
mov
fisubrl
jno
cltd
inc
xchg
inc
int
shlb
loop
or
xor
lds
movsb
hlt
push
int
push
mov
je
pop
add
and
pop
jne
int
push
inc
sbb
or
ret
pop
adc
jns
fwait
aam
pop
sub
and
mov
inc
cli
cmpsb
movsl
mov
pop
xor
push
dec
dec
mov
and
movsb
dec
leave
shl
xor
fidivl
jno
fidivrs
cmp
into
in
cli
dec
add
shlb
ret
or
addl
mov
lods
add
cmc
lahf
push
test
xlat
push
xchg
std
add
out
pop
sbb
imul
jl
mov
into
js
dec
cmp
pop
mov
and
mov
data16
sahf
mov
add
mov
cmp
push
and
or
in
in
ss
push
out
cs
push
sub
ja
inc
mov
out
mov
add
mov
jb
xchg
insl
jmp
cmpsb
sub
mov
mov
fidivrs
dec
cmc
sub
dec
pop
pop
xchg
and
xchg
xor
and
mov
or
loop
hlt
fisubs
adc
repz
imul
insb
rcll
scas
leave
icebp
push
orl
add
jne
adc
push
xor
dec
xor
lock
mov
mov
addb
in
je
and
dec
mov
out
and
fcmovb
in
scas
inc
dec
pop
cmc
test
hlt
push
inc
adc
enter
out
int
insb
int
sbb
bound
add
dec
jo
sti
push
cs
icebp
movsl
insb
lds
sbbl
mov
mov
adc
mov
inc
repnz
pop
add
dec
push
xchg
cmpsb
arpl
jae
aas
xor
shlb
aas
and
cmp
sbb
shlb
jge
fcomps
push
outsb
iret
repnz
mov
push
mov
add
xorl
bound
ljmp
out
dec
and
and
test
cmc
mov
jp
arpl
mov
stos
xor
jle
lahf
dec
sub
fcomps
shl
adc
mov
pusha
xchg
subl
sbb
add
inc
fdivrl
push
sub
data16
mov
orb
ret
lods
jbe
push
sub
imul
jbe
pop
dec
orl
lcall
mov
adc
jmp
aas
dec
jnp
cltd
sub
aam
iret
shrl
cltd
push
inc
js
das
push
int
lret
jge
pop
mov
inc
paddsw
aas
clc
xchg
aaa
push
jno
arpl
ret
stos
enter
shll
dec
fsubs
xorl
ret
fsubr
jecxz
aaa
rorb
push
dec
xchg
test
gs
push
sub
and
jle
aad
mov
push
ror
ret
mov
popf
jge
push
sub
xchg
sub
fstpl
into
cli
mov
xor
inc
loop
push
sbb
neg
lock
divl
loopne
mov
rcrb
flds
andl
sub
sbb
cmp
adc
bound
repz
jns
loope
adc
int
jmp
cld
sahf
mov
inc
add
lds
scas
fmuls
push
pushl
roll
movl
call
xor
arpl
stos
xor
jae
xor
xchg
in
add
insb
cltd
sbb
mov
mov
mov
out
lds
adc
jecxz
scas
outsl
cli
into
js
sahf
aam
das
and
pop
mov
testl
inc
or
add
in
pop
jb
aad
scas
pop
xchg
xchg
jmp
mov
out
xor
mov
gs
scas
mov
push
loope
movsl
sub
std
testb
pushf
cmp
neg
mov
mov
test
jp
imul
into
mov
jecxz
lock
loope
dec
out
push
sbb
xchg
ljmp
push
shrb
mov
inc
nop
shll
iret
push
insl
mov
and
push
js
aad
push
sbb
insb
repnz
call
pop
scas
pop
add
dec
dec
pop
pop
and
in
xchg
xchg
in
dec
cmp
cwtl
rorb
scas
inc
sahf
test
loope
mov
mov
sbb
pop
inc
fmull
outsl
sbb
xlat
sbb
cmpsb
movsb
xor
push
push
mov
cmpsl
sbbb
sub
pop
dec
adc
enter
mov
leave
lea
adc
xorb
test
lret
cmp
sub
dec
jge
pop
loope
adc
or
inc
mov
mov
popa
add
dec
push
xor
push
mov
pop
stos
test
xor
sbb
mov
loopne
inc
cltd
outsl
push
jle
shr
loop
fnsave
sbb
stc
inc
enter
cld
xchg
ljmp
xor
in
out
push
dec
mov
imul
xchg
mov
or
jg
xchg
ds
test
sub
frstor
jge
pushf
call
cmp
mov
jge
fisttpl
dec
shr
lcall
fsubp
iret
xchg
sub
dec
mov
sub
fnstsw
shlb
pop
dec
push
sbb
rep
push
or
loop
mov
std
mov
shll
mov
cmp
imul
in
pop
sub
sbb
mov
jmp
push
xor
int
inc
sahf
sub
sub
repz
push
mov
rorl
jecxz
or
popa
add
jb
jo
repnz
hlt
ds
rcrb
mov
test
push
dec
pop
sub
adc
mov
mov
dec
mov
imul
xchg
inc
add
repz
pusha
mov
lahf
std
xor
lahf
mov
dec
sarb
push
loopne
jo
loope
or
mov
adc
decl
or
sbb
popa
dec
pop
call
mov
mov
push
inc
js
gs
adc
repz
mov
jg
aad
push
pop
xchg
sub
jnp
mull
mov
popf
or
mov
imul
push
cmp
addl
repnz
xchg
out
daa
pop
add
scas
pop
jbe
push
sub
add
in
movsl
inc
lahf
mov
cmp
dec
outsl
sbbl
or
sbb
test
mov
sub
or
mov
leave
mov
and
sahf
scas
xchg
mov
mov
les
les
cld
mov
stos
imul
adc
scas
dec
imul
push
or
in
mov
mov
js
add
push
fadds
out
xor
mov
scas
outsl
es
push
adc
cmp
mov
leave
jb
push
cmc
stos
mov
or
lcall
movsb
aas
dec
and
bound
push
dec
es
popa
lret
lds
loope
jmp
push
adc
les
cmp
popf
mov
iret
cmp
push
fdivs
xchg
mulps
pop
cmp
xor
inc
in
inc
xchg
mov
push
out
in
movsl
clc
test
sub
mov
sbb
push
decl
sub
data16
jge
cld
jle
jae
mov
and
mov
adc
pop
jp
push
mov
outsl
sti
gs
xchg
sbb
mov
sub
inc
int
or
push
mov
clc
adc
mov
or
js
xchg
test
es
imul
out
push
xchg
pop
mov
pop
add
dec
in
fcoms
xchg
inc
cmp
mov
sub
aaa
test
testb
cmp
and
outsl
jno
sub
addr16
push
push
pop
mov
aam
xchg
jge
enter
pushf
fldl
fnstsw
js
mov
les
stc
xchg
jle
xchg
gs
inc
adc
pop
rcr
inc
inc
sub
arpl
jns
xchg
mov
mov
ja
push
adc
loop
push
outsl
sbb
mov
or
repz
dec
pop
inc
je
inc
cmp
push
adc
mov
mov
push
mov
outsl
cmpsb
gs
pop
jg
lahf
jmp
dec
mov
andl
mov
adcb
add
call
cmp
outsl
pop
mov
add
cmp
mov
pop
pop
xchg
add
aad
mov
xor
popa
xorl
loop
xchg
popf
lods
mov
sub
aaa
pop
add
xchg
popf
sub
repnz
lods
mov
dec
rcrl
clc
inc
xor
in
lcall
rcrl
dec
in
cmp
movq
pop
daa
and
mov
mov
cli
mov
adc
sub
shrl
adc
pop
imul
xor
test
cwtl
lahf
into
loope
xor
pop
enter
mov
dec
aaa
mov
sahf
out
cmpsl
sub
push
jnp
outsl
inc
mov
sbb
fadd
filds
std
add
cmp
je
dec
ljmp
inc
push
out
pop
aaa
pushl
dec
mov
std
gs
xchg
call
xor
aas
mov
rcrb
sbb
flds
inc
push
outsb
push
inc
push
or
xchg
dec
test
cmpsb
or
sbb
fiaddl
test
push
xchg
jecxz
jo
js
jmp
mov
xor
inc
jmp
lcall
lcall
inc
or
orl
mov
push
inc
movl
and
adc
fmull
push
mov
mov
aad
repnz
out
or
mov
inc
int
mov
jmp
cltd
push
push
sbb
into
rcrl
dec
ret
cmp
cmpsl
mov
mov
out
mov
dec
inc
imul
mov
sbb
adc
jg
cmp
pop
jo
jle
add
push
int
shrl
pop
inc
jae
je
jb
ss
fmull
sub
outsb
pop
movl
daa
repnz
call
and
iret
and
pop
daa
cmp
gs
out
fidivs
das
jns
pop
mov
dec
mov
fs
jmp
pop
fbstp
iret
fidivl
fnstenv
mov
dec
inc
jae
int3
sub
cmpsl
leave
ret
lods
adc
push
add
fists
popf
sbb
bound
add
icebp
jmp
xchg
insb
aam
adcl
adc
push
call
int3
xor
decl
sub
aas
mov
xlat
mov
push
test
pop
mov
mov
mov
frstor
lds
mov
add
cld
inc
or
dec
push
mov
push
xchg
mov
leave
sub
aad
inc
mov
or
dec
mov
jnp
push
adc
mov
stos
mov
fstl
jge
sahf
mov
cs
jno
lret
jecxz
dec
push
adc
xchg
fistpll
mov
lock
aaa
inc
sub
mov
ss
and
cltd
pop
ds
mov
push
add
cmp
mov
test
in
outsb
dec
dec
mov
std
lea
jae
mov
xor
ds
sbb
subb
pop
push
mov
push
push
xor
or
fdivrs
repnz
hlt
sbb
gs
ss
scas
xlat
cmp
sbb
xor
xchg
aas
outsb
bound
mov
aad
mov
aas
lds
arpl
sahf
pushf
js
popa
add
test
inc
outsl
xchg
loope
pop
loopne
in
and
jg
pop
cmpsl
sbb
mull
mov
sti
cmp
cmp
addr16
sarl
push
inc
jecxz
or
std
rolb
xchg
push
shlb
jmp
add
add
pusha
ret
insl
mov
incl
or
sbbb
sbb
and
ss
ret
inc
mov
and
rorl
inc
adc
fnstsw
aaa
cmp
das
test
jb
xchg
dec
pop
jne
icebp
push
orb
test
or
aaa
and
scas
aas
aam
xor
popf
lods
je
div
pop
fisubl
mov
mov
in
mov
cmpsl
push
ds
nop
lods
jo
add
or
lds
push
xor
fdivl
aad
stos
or
jge
sbb
add
inc
pop
inc
das
popf
fs
xlat
cmc
cltd
mov
fildl
imul
mov
lods
std
fwait
dec
mov
add
jmp
inc
repz
fisubs
sti
int3
inc
in
rol
cmp
mov
adc
cmc
fnstenv
and
sti
mov
dec
inc
jp
ljmp
jmp
cmp
shll
or
or
lods
in
mov
cmp
mov
int
movsb
xor
sub
aas
xor
cld
movsl
push
movsb
sbb
mov
outsb
mov
cmpsl
push
ja
push
stos
imull
imul
aad
sbb
xchg
dec
rcrl
into
mov
leave
mov
lcall
pop
sub
ds
fwait
xor
movb
jecxz
inc
jp
adc
push
insb
lea
push
bound
clc
lds
je
push
std
les
xor
arpl
push
jp
mov
jb
iret
dec
pop
dec
sbb
insl
add
push
mov
mov
add
push
pop
mov
out
jne
jnp
test
test
xlat
aaa
add
push
cli
pop
aaa
push
jmp
out
ljmp
vmaxpd
inc
and
cmpsl
addr16
push
aam
je
mov
pop
icebp
xchg
push
stos
xor
push
int
fadds
or
cmpsl
fidivs
cmc
adc
aas
out
jecxz
xchg
jno
add
mov
adc
push
adc
inc
push
out
and
push
cmpsb
aam
in
jne
std
pop
fdivs
xchg
mov
mov
stos
dec
mov
data16
sbb
and
adc
aam
mov
push
ss
mov
and
jge
sbb
out
xchg
decb
add
and
je
mov
es
push
aaa
cmp
leave
lret
mov
das
in
stc
xlat
insb
stc
stos
fwait
pop
mov
lcall
mov
jo
je
pop
movsl
mov
repz
test
or
adc
mov
out
or
mov
xlat
mov
outsl
xor
andb
lods
leave
cwtl
dec
cs
jl
add
lahf
mov
cmp
xlat
cltd
lcall
lods
adc
push
cmp
sbb
xor
aas
xchg
rcr
push
mov
dec
xchg
lock
inc
ds
ds
dec
fwait
cmp
lods
aaa
in
jnp
or
cmp
fcom
xlat
into
or
fidivrs
or
fsubrl
lods
mov
add
mov
jecxz
es
out
jo
adc
and
test
mul
mov
movsb
pop
jecxz
je
mov
push
fcoml
lods
mov
jecxz
sbb
push
xchg
lcall
int
insb
mov
push
sahf
inc
jne
shlb
pop
sahf
and
lret
mov
inc
lret
in
dec
or
testl
sbb
dec
aad
in
sbb
xchg
in
mov
lods
cs
add
clc
lods
add
clc
fldcw
fcmovnb
cmp
xchg
lahf
sbb
cmp
sti
mov
mov
lods
jecxz
mov
jb
das
lret
inc
xor
adc
dec
dec
test
mov
jmp
adc
mov
out
mov
js
jbe
shll
std
stos
rclb
mov
sub
cld
or
das
pop
ja
ja
cs
pop
sbb
ds
scas
and
xchg
loopne
rclb
insb
or
sub
stc
inc
cmp
pop
add
xlat
ss
insl
push
xchg
fwait
mov
enter
outsl
movsb
sub
or
cmp
je
stos
movsl
cmp
les
insl
mov
in
xchg
int3
pop
sub
xchg
xor
inc
pop
insb
inc
sbb
repz
dec
mov
xor
ret
mov
xchg
and
loop
pop
xchg
pop
shlb
xchg
movsb
jb
sarb
mov
add
leave
push
add
push
mov
adc
push
adc
in
sti
mov
stos
insb
pop
push
sti
arpl
push
add
scas
dec
popa
pop
push
jo
mov
dec
call
aam
jbe
inc
push
sub
add
out
lahf
mov
outsb
sti
fisubl
push
or
popf
xlat
xor
imul
push
mov
cli
loop
cmpsb
scas
jo
or
das
cmc
movsl
pusha
push
inc
sub
js
testl
cmp
jecxz
dec
dec
lods
mov
ret
enter
icebp
lods
out
jecxz
je
ret
inc
outsl
in
pop
cmp
lods
pop
or
stos
bound
mov
data16
call
enter
xchg
add
ficomps
fstp
cmp
leave
jns
js
lret
sub
imul
cmovae
inc
insl
lock
adc
cmpl
lea
xlat
xchg
sbb
arpl
out
cli
negl
xor
mov
mov
mov
rclb
stc
outsb
inc
stos
ja
or
jmp
sub
cwtl
dec
mov
ss
test
sti
sbb
sbb
in
insb
bnd
xor
rcl
ss
pop
jne
add
mov
aaa
xor
data16
test
lods
inc
adc
mov
push
imul
jns
inc
leave
xchg
sarl
mov
int
xor
cmp
addr16
in
fdivl
mov
pop
push
int
pushf
out
fmul
cmpsb
jo
jecxz
shrl
je
shrb
jp
push
popa
dec
adc
and
xor
and
sarb
and
js
or
fadds
ljmp
cmp
push
idivl
and
aaa
test
popa
sbb
add
pusha
or
adc
push
mov
in
mov
in
inc
test
je
test
shrl
popl
pop
push
lds
adc
scas
scas
leave
sub
push
lcall
jle
scas
pop
loope
sub
mov
popf
mov
fistps
stos
test
lods
int
add
aad
inc
push
xchg
stos
int
sub
push
cmpsb
iret
test
out
xlat
sbb
adc
outsb
popa
sbb
fldl
outsl
and
pop
lds
scas
mov
negb
mov
pop
cmp
jo
sti
in
lcall
addr16
inc
aam
add
jne
inc
jb
bound
mov
mov
loop
adc
and
jne
inc
jb
bound
mov
mov
loop
adc
and
jne
inc
jb
bound
mov
mov
loop
adc
and
jne
inc
jb
bound
mov
aad
pop
jge
cmp
in
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
jmp
push
stc
xchg
lahf
cwtl
mov
mov
xor
cmp
sbb
jbe
inc
dec
push
pop
scas
test
xchg
cltd
out
idiv
leave
divl
cmp
add
sbb
adc
dec
push
pop
jl
ss
adc
neg
mov
jmp
sub
pusha
push
sub
xor
and
clc
ret
cld
insl
out
add
dec
aad
adc
dec
popf
repnz
mov
adc
std
pop
data16
or
ss
mov
idiv
dec
jecxz
out
mov
cmpsb
loopne
rclb
imul
out
andb
sub
or
out
lcall
jecxz
into
mov
out
or
or
push
xor
sbb
jl
hlt
push
mov
and
jns
push
sbb
jne
orb
and
stc
jmp
jbe
push
sbb
aam
push
mov
jns
xor
cmpsb
push
or
das
fcomp
jp
imul
add
add
mov
xchg
cli
cltd
out
mov
leave
outsb
dec
aam
movsb
xchg
fimuls
or
inc
push
xor
test
clc
cmc
mov
aad
mov
inc
push
dec
push
lods
ja
ucomiss
push
xor
ds
cli
pop
cmc
mov
movsl
ljmp
jp
adc
sub
sub
fiaddl
cmc
mov
leave
fldenv
sub
cmp
or
sbb
jbe
inc
dec
push
pop
cmpsb
test
xchg
cltd
out
idiv
leave
fldenv
sub
cmp
or
sbb
jbe
inc
dec
push
pop
cmpsb
test
leave
ja
mov
out
xchg
cwtl
leave
repnz
in
sub
in
jle
mov
dec
push
cmp
sbbl
push
cmc
loope
je
test
movsl
dec
push
xchg
arpl
jmp
dec
sub
arpl
and
mov
fwait
or
push
or
mov
orps
mov
fldenv
loop
jge
add
jnp
and
je
rorb
push
stos
js,pt
das
in
sbb
shrb
pop
lds
call
sub
xacquire
jns
sub
dec
pop
mov
push
sub
adc
out
cmpsb
fisttps
jns
repz
jnp
icebp
out
adc
dec
ss
jg
xchg
fldl
cmpsl
sahf
ret
push
pop
jno
xchg
add
mov
inc
int3
ds
xorl
aam
cltd
test
mov
int
ljmp
repz
popl
and
sub
and
adc
pusha
es
enter
ret
adc
push
fimull
sub
adc
pop
or
xchg
xchg
or
clc
out
imul
movsb
fwait
pop
pop
adc
mov
test
rolb
int
clc
inc
in
imul
xor
mov
push
ret
inc
xorb
test
lods
xor
aas
jne
and
mov
cwtl
pop
imul
push
pmulhw
outsl
xor
iret
jle
pop
xor
push
push
xor
in
shll
movsb
cmpsl
les
arpl
mov
ss
dec
xor
jbe
xor
pop
loop
clc
mov
sub
movsl
lock
sti
xchg
outsl
test
loopne
jns
adc
decb
in
xchg
jl
mov
rolb
jmp
add
mov
sub
sbb
jns
dec
sti
movntps
jecxz
lods
or
add
ret
lret
mov
or
jecxz
popa
repz
imul
fidivrs
xor
jmp
imul
ljmp
adcb
mov
mov
sub
push
add
xor
fcmovnbe
hlt
arpl
shl
adc
inc
xor
iret
je
adc
add
mov
sub
mov
xchg
fs
test
out
push
lea
popa
das
lods
int3
sbb
nop
or
lea
push
out
icebp
push
fidivrl
inc
mov
jg
cmc
mov
mov
mov
sbb
jb
mov
andnps
push
inc
popf
testb
jp
sub
adc
dec
roll
push
stos
sbbl
bnd
daa
mov
dec
iret
cs
ja
les
cli
xchg
movsb
insl
loope
push
pop
fsubrl
xor
aaa
push
popa
sbb
out
leave
mov
fs
pushf
push
xchg
std
jge
pop
mov
mov
adcl
popa
mov
cmp
xor
cmp
out
shl
push
pop
lret
orb
scas
xor
cmp
aaa
stos
jns
popf
data16
out
mov
shll
fmuls
mov
push
std
cs
dec
mov
aam
fs
or
mov
cmp
pop
pushf
outsb
hlt
mov
roll
inc
roll
rcrl
aas
repnz
adc
dec
int
clc
jg
add
xchg
jo
pop
sbb
ja
xlat
gs
jmp
inc
cmp
movsl
ret
fistpl
mov
xor
inc
dec
xorb
xor
jmp
sbb
shrb
movsb
into
add
mov
jno
mov
jmp
popf
or
mov
mov
jl
adc
out
or
ja
movsl
into
lret
in
sub
inc
in
xchg
loopnew
mov
jae
jne
or
push
mov
pushl
pop
xchg
jg
jns
sbb
mov
or
pop
sbb
cmp
inc
repz
mov
lret
xchg
cmp
or
daa
pop
aad
dec
inc
insl
xchg
out
movsl
sub
xsavec
xchg
movb
and
xchg
popa
in
out
in
call
mov
cmp
inc
popf
sbb
cmp
push
hlt
repz
pop
jne
test
xchg
cmpb
test
stos
iret
push
xchg
adc
jg
push
lock
lret
repnz
sbb
add
insb
je
add
js
aad
mov
movsb
inc
popa
mov
mov
dec
or
fadds
fptan
test
imul
sbb
xchg
mov
inc
outsl
lock
mov
cmc
addl
pusha
xor
jle
outsb
in
xor
or
rcrb
inc
popa
jnp
xchg
fldcw
push
imul
add
adc
and
inc
in
jmp
mov
sub
push
push
fldl
in
xor
sub
lock
mov
fdivr
or
inc
add
pop
ljmp
dec
xchg
xchg
add
lods
sahf
pop
jecxz
mov
jg
sub
loop
mov
or
gs
add
cltd
jge
in
pop
mov
inc
cmp
stos
mov
inc
fs
iret
cmpsl
repnz
decb
and
in
lahf
fs
cmpsb
popf
ret
push
call
jle
std
add
rorl
lret
pop
ud1
mov
je
ret
gs
movsl
stos
jmp
int
negl
mov
imul
sub
pop
mov
outsb
push
xchg
push
mov
pop
out
mov
adc
fcompl
fldcw
test
mov
lock
pop
and
push
xchg
xor
imul
imul
stos
das
mov
outsl
xchg
stc
inc
mov
sbb
iret
jmp
loope
out
jno
scas
fidivl
mov
xchg
xchg
mov
or
add
or
mov
push
out
pusha
dec
dec
xchg
pushf
mov
lods
and
and
cmp
push
stc
lods
sub
hlt
or
inc
xorl
mov
hlt
lret
dec
mov
cmp
cmp
pop
xchg
mov
lds
out
out
push
lret
ja
xchg
fwait
repz
loop
clc
push
in
fld
mov
jecxz
sbb
sti
int
ss
daa
cwtl
jbe
dec
xchg
push
xchg
or
insl
leave
add
mov
pop
sub
or
lods
add
lods
mov
ret
cltd
dec
call
flds
xchg
call
cmp
rcll
push
inc
cld
ss
cltd
enter
aas
stc
xor
or
sub
inc
dec
pushf
adcl
insb
inc
cmpsl
sub
adc
inc
roll
iret
fwait
jmp
leave
rorl
or
cmp
mov
shrb
mov
movsl
fldl
push
or
inc
mov
jl
jne
dec
dec
add
add
inc
in
pop
dec
test
aas
pop
sub
je
dec
clc
popa
push
into
sbb
jbe
in
or
inc
fdivl
cli
test
pop
cmc
dec
stc
add
adc
fisubs
inc
test
xlat
cmp
inc
mov
ret
pop
cli
add
icebp
xlat
andl
in
and
hlt
sub
cld
lret
ja
and
mov
cltd
es
jbe
push
sub
xchg
sbb
or
add
in
clc
adc
in
and
lea
rorb
pop
lods
or
push
lahf
and
or
inc
add
in
in
pop
fistpll
sarb
bound
xchg
ja
jb
insb
fidivrs
out
cmp
mov
xchg
sbb
pop
dec
das
outsb
subl
pop
add
das
cltd
inc
out
mov
inc
test
and
push
aaa
mov
inc
sbb
add
sbb
shrb
rcll
push
vandnps
aad
es
push
mov
outsb
pop
jae
cli
cwtl
rcl
rol
jle
cmp
pop
rcrb
leave
lret
pop
adc
jno
out
jle
xor
push
std
push
sub
inc
sbb
dec
xchg
ja
xchg
mov
sbb
addr16
inc
mov
cmp
jp
or
pop
je
sub
sub
xchg
fisubrl
jb
cmp
arpl
xor
loop
cmp
stos
aaa
cmp
int3
sbb
call
pusha
pmaxsw
stc
negb
dec
lock
mov
mov
iret
and
insb
sub
jl
mov
sahf
xchg
pop
or
popf
arpl
pop
mov
mov
xchg
cmp
xlat
mov
sbb
cli
testb
imul
pop
es
bound
aad
cmp
push
sbb
inc
stc
je
sbb
inc
add
pop
icebp
push
pop
out
cmpl
push
mov
mov
dec
jae,pn
xor
sub
in
in
mov
mov
cmp
adc
jo
pop
mov
push
xchg
mov
cmp
int
lds
stc
gs
iret
mov
fs
out
out
repz
out
jae
sahf
data16
lods
mul
sbb
loope
xor
dec
mov
inc
sub
cli
sub
popa
das
repnz
jle
mov
push
in
cmp
sti
stc
sub
push
lret
js
out
xchg
jns
out
fnsave
jge
and
adc
pop
dec
fcmovnbe
xchg
ficomps
lods
inc
sbb
add
lahf
push
sbb
in
outsl
dec
outsb
stc
push
popl
push
fs
pushf
jecxz
pop
or
cmp
cmp
adc
pop
testb
push
sti
inc
xchg
sub
jle
sub
adc
ror
dec
sub
test
ja
cmpsl
ss
mov
mov
inc
or
jl
outsl
jle
dec
scas
rol
xchg
out
inc
test
sbb
mov
data16
fcoms
insb
cmc
hlt
icebp
hlt
icebp
sbb
sub
sbb
lret
sub
cmp
sti
adc
shlb
pop
adcl
mov
mov
xor
arpl
jbe
into
pop
jns
sbb
mov
push
aaa
int3
mov
aam
mov
cltd
aad
filds
mov
jg
add
icebp
cmp
dec
mov
out
aaa
xchg
ret
mov
fst
push
and
push
movntq
nop
lahf
mov
push
lcall
outsl
out
mov
xor
or
mov
mov
out
push
aas
adc
mov
fucomip
mov
mov
and
and
mov
cmpsb
mov
lahf
aad
in
insb
icebp
outsb
cmpb
cmc
lcall
ds
outsb
mov
dec
sub
outsl
mov
mov
sarl
cs
adc
push
subl
mov
daa
pop
je
sbb
stc
pop
pop
hlt
xor
xchg
jecxz
mov
inc
lods
int
rcrb
inc
addr16
pushf
sbbl
inc
xchg
inc
mov
dec
dec
cmp
int
iret
cmpsl
lcall
or
jno
mov
push
jge
scas
scas
mov
pop
loope
dec
stos
xorl
sub
out
mov
rcrb
fdivr
xor
das
add
sbb
outsl
jb
lcall
mov
push
js
jne
insl
adc
out
fsqrt
and
js
pop
mov
adc
jp
lock
inc
arpl
and
imul
dec
ss
jle
clc
xchg
ljmp
rorl
int3
inc
es
outsb
and
aad
ret
or
sbb
je
repnz
mov
popf
or
ja
push
mov
sub
outsl
push
xchg
sti
lock
xor
jmp
mov
jno
push
push
mov
or
xor
jle
jl
cmp
pop
mov
pop
inc
ss
mov
xor
sahf
pushf
cmp
cmp
inc
insl
imul
ret
push
repz
and
inc
bswap
js
jmp
mov
sbb
xor
jle
pop
popf
pushf
jge
jp
aaa
mov
mov
repz
add
scas
movsb
ja
int
mov
fnstcw
fucomp
dec
sbb
inc
ret
ret
mov
xchg
sub
aaa
pop
in
sub
xor
dec
inc
inc
push
push
in
mov
pop
jbe
lea
xchg
push
mov
push
fucomi
mov
jg
mov
popf
insl
lods
mov
sbb
sbb
pop
xchg
add
pop
lods
mov
xor
mov
xor
lcall
pop
test
push
les
cmp
xchg
jns
imul
mov
jo
inc
push
imul
iret
leave
fldt
inc
lods
and
add
jmp
clc
jg
xchg
scas
dec
push
lret
dec
test
call
in
maxps
pusha
inc
mov
mov
lea
xchg
iret
movsl
jmp
clc
pop
divl
adc
gs
mov
xchg
psrad
into
dec
movsl
incl
faddl
icebp
fsub
je
shlb
push
ret
cmp
sahf
xchg
inc
leave
mov
cwtl
dec
aaa
xchg
mov
adc
fstl
cmpl
dec
mov
fdivrs
cmp
mov
dec
sbbb
outsb
sub
add
std
cmpsb
out
or
push
in
inc
cmp
popa
push
sbb
call
into
fsub
mov
jmp
fdivr
lock
mov
jge
dec
dec
xchg
adc
movsb
js
cld
scas
nop
lahf
iret
mov
lods
lea
scas
inc
div
push
or
cwtl
cmp
insl
lock
inc
packsswb
adc
xor
cmpsb
xor
ret
sbb
cltd
sahf
mov
xor
ds
repz
dec
notl
jp
sub
mov
jecxz,pt
sbb
inc
dec
insb
fwait
out
insb
rcrb
dec
and
sahf
push
test
mov
inc
je
test
out
aad
jl
in
test
bound
in
jle
test
mov
dec
icebp
pop
dec
nop
ljmp
sub
es
push
call
rolb
adc
insl
cmp
xchg
jbe
mov
mov
and
add
pop
inc
xchg
mov
vucomiss
mov
inc
pop
jp
mov
fmuls
outsb
xchg
fistl
push
adc
xchg
enter
dec
jp
xchg
arpl
sub
in
in
inc
ds
bound
loop
scas
jp
fucomip
outsl
pop
lods
loop
in
cmpsb
dec
aad
enter
xchg
xor
fistps
xchg
gs
out
cmp
xor
adc
cltd
jne
xchg
fnstenv
pop
and
in
cs
inc
add
pop
mov
sahf
jp
pop
xchg
lret
and
fsts
inc
sub
dec
pusha
fcomi
insl
std
cmp
jo
sbb
sti
and
push
push
fstpl
pop
pop
lret
aam
andl
incb
js
movsl
push
xor
push
sbb
adc
xchg
push
jb
mov
repnz
call
and
mov
shrl
xorb
pop
sub
jg,pn
mov
in
imul
xchg
mov
xchg
sti
xchg
add
loopne
jo
pop
roll
loope
sbbb
mov
repz
shrb
lret
popf
lods
ss
ss
int3
iret
imull
rolb
adc
add
pop
pop
dec
mov
cwtl
sahf
aam
jmp
push
fsub
push
into
hlt
gs
pop
test
cmp
dec
out
lcall
shlb
sbb
push
and
in
xor
mov
xor
cmpsl
xor
subl
ss
sbb
add
bound
stc
popa
lods
add
sub
mov
cmp
ret
sahf
cmpsl
mov
lock
mov
lock
xorl
inc
or
cmp
inc
dec
repnz
adc
lea
imul
and
pshufw
js
and
mov
mov
push
jl
pop
movsb
fnsave
push
or
stos
dec
loope
nop
dec
in
push
xchg
dec
xlat
fxch
push
loope
mov
push
leave
loopne
sbb
jmp
out
cmp
fwait
push
xor
jle
dec
pop
sbb
push
lret
lahf
sbb
cmp
loop
add
aad
stos
imul
popa
sbbb
popa
cmp
push
sub
and
xchg
mov
cmp
jb
jno
xchg
std
dec
std
jg
push
in
mov
cmp
add
out
adc
pop
pop
push
cli
and
xchg
pop
icebp
lret
xchg
imul
aas
hlt
flds
add
cwtl
jmp
rorb
sarl
cmc
jp
mov
and
addr16
and
inc
adc
ret
lods
or
jo
or
jae
inc
jge
out
pop
dec
sbb
adc
jmp
xor
or
loopne
fs
inc
mov
mov
and
movsb
outsl
mov
lret
movsl
pop
adc
aas
adc
jmp
inc
or
test
or
add
lods
fisubrs
es
fcmovbe
repnz
mov
and
mov
dec
mov
inc
adc
pop
xor
add
lods
filds
insb
or
fildl
push
and
cmp
inc
rclb
dec
or
icebp
push
rcr
test
xor
scas
daa
pop
jge
mov
mov
xchg
xor
mov
cmp
cmp
mov
fldcw
and
xor
aam
and
mov
cld
mov
mov
dec
mov
pop
cs
cli
adc
mov
push
sub
test
cli
jmp
out
cld
pusha
xor
mov
movsb
adc
jb
dec
pushf
out
movsb
or
mov
inc
and
movsl
imul
lcall
jno
into
mov
repnz
and
dec
xchg
dec
adc
rcll
lock
jp
mov
jno
mov
pusha
es
jno
scas
pop
lret
rcrl
push
push
das
fmul
dec
mov
adc
cwtl
xchg
lcall
mov
jno
addr16
pop
cmp
aad
push
cmpsb
ret
and
or
dec
shlb
cmp
xor
and
push
fsubrs
divl
lahf
dec
in
cmpb
fsub
add
scas
inc
outsb
jle
dec
xchg
lret
xor
outsb
lahf
mov
xchg
jmp
sub
cld
pop
xchg
sti
mov
les
dec
aam
mov
adcl
dec
popf
lock
jne
pop
sbb
loop
cmpsb
mov
push
xchg
pop
rol
jo
inc
test
pop
mul
xchg
iret
ljmp
add
scas
push
in
mov
add
hlt
jge
and
aad
fmuls
ret
cmp
jb
fstps
lar
add
out
dec
or
jno
xchg
xor
inc
je
add
rcrl
pop
lahf
cmp
or
scas
and
lcall
adc
mov
jno
nop
jp
sbbl
outsl
notb
sbb
push
les
loop
adc
pop
cmp
lea
mov
push
scas
jmp
imul
push
fwait
xchg
sub
cmp
xchg
outsl
lock
xchg
fldl
adc
sahf
inc
pop
imul
incb
fbld
jb
sbb
cmpsb
inc
dec
adc
pop
sbb
rolb
xchg
sti
imul
shl
and
and
shl
add
lcall
pop
sbb
or
xchg
jbe
fildll
jb
aaa
xor
imul
fs
inc
mov
or
add
mov
sarb
mov
je
je
add
loopne
insb
pop
sbb
aas
xor
jle
mov
inc
cmp
push
shll
popa
dec
imul
daa
add
iret
xchg
shll
pop
sub
jmp
js
fstpl
ss
int
popa
sahf
mov
xchg
xor
push
sub
daa
fmull
jb
divl
out
sub
imul
leave
jecxz
ror
jne
jmp
repnz
rol
in
lret
in
or
mov
pxor
ljmpw
movsl
xlat
je
add
jnp
mov
xor
inc
and
mov
and
arpl
cmp
jg
pop
test
divb
cli
mov
jnp
sarl
lret
stos
mov
jo
in
cmc
jecxz
mov
mov
adc
and
mov
cmp
ret
fs
add
xchg
lock
pop
fdivrl
lahf
hlt
out
popa
data16
pop
das
or
test
mov
stc
aad
add
adc
jo
aas
dec
mov
xor
add
movsl
test
xchg
or
cmc
test
inc
pop
ficoms
cmpsl
lcall
pop
pop
push
insl
shlb
jmp
mov
push
sar
int3
adc
inc
xor
mov
inc
mov
cmp
in
xorb
mov
cmp
adc
in
sbb
idiv
mov
sbb
mov
sti
xorl
adc
enter
test
mov
inc
into
fldt
sahf
pusha
stos
push
xor
fsts
ret
out
mov
enter
cmp
pop
adc
push
imul
je
aad
jne
iret
pop
stc
pop
and
push
jnp
pop
mov
stc
leave
fldenv
sub
cmp
or
sbb
jbe
inc
dec
push
pop
cmpsb
test
xchg
cltd
out
idiv
leave
fldenv
sub
cmp
or
sbb
jbe
inc
dec
push
pop
cmpsb
lods
mov
xchg
xchg
xchg
popf
out
repnz
int
fldenv
sub
cmp
insw
outsl
jns
inc
mov
lcall
jmp
push
sbb
leave
xchg
lods
or
outsb
adc
incb
mov
out
icebp
inc
iret
rcr
insb
pop
ret
shr
out
lahf
popa
pop
jo
inc
pop
push
dec
and
xor
loope
icebp
inc
iret
rcr
mov
xchg
jmp
arpl
inc
dec
push
pop
loope
xor
loope
icebp
out
xlat
rol
mov
xchg
xchg
test
push
pop
sub
pusha
pop
dec
je
jg
mov
stos
mov
jle
insb
imul
dec
nop
pop
xlat
je
push
lock
jne
cs
pop
fbstp
pusha
pushf
nop
hlt
cmpl
lcall
cld
movsb
subb
les
outsl
and
mov
movups
mov
add
scas
movsb
scas
add
xchg
sbb
hlt
cmpl
lock
push
push
add
xor
stos
clc
outsl
mov
add
daa
add
sub
jb
into
das
push
pop
adc
add
pop
push
arpl
xchg
iret
ss
adcl
inc
or
icebp
out
rcl
fbld
xchg
xchg
jno
inc
push
push
inc
and
xor
add
test
mov
jecxz
cli
popa
add
inc
dec
sub
and
cmp
test
mov
icebp
stc
sti
ret
lods
add
and
inc
sub
and
aas
insl
push
icebp
ljmp
pushf
mov
orl
push
pop
and
xor
add
adc
loope
icebp
inc
iret
rcr
mov
xchg
lahf
popa
outsl
jno
inc
dec
push
pop
and
xor
add
adc
loope
aam
pop
dec
fstpl
mov
push
data16
inc
addl
or
inc
sbb
aam
push
scas
mov
pop
mov
mov
notb
mov
je
mov
inc
icebp
fistpll
xchg
fs
popf
inc
loopne
mov
cmp
clc
add
jne
fwait
xchg
imul
stos
test
and
xchg
pop
popa
mov
mov
stc
fisttps
mov
mulb
dec
std
jb
xor
add
pop
xchg
ret
cmp
adc
ret
roll
and
jbe
or
xchg
sti
mov
xchg
sub
sbb
mov
cmp
pop
movl
pop
pop
and
ret
push
ljmp
push
cs
pop
pusha
xor
hlt
fcmovb
dec
xchg
mov
and
hlt
sbb
leave
jb
aas
sbb
test
cmp
loopne
js
push
mov
mov
and
pusha
jmp
js
mov
rolb
test
imul
mov
mov
lods
mov
push
ds
mov
push
fdivrl
jbe
repz
sbb
out
pushf
xlat
mov
js
cmp
lds
add
sub
out
daa
pop
jge
aas
adc
mov
insb
sub
icebp
mov
lea
scas
add
cld
loop
bound
or
and
mov
divl
pop
fs
mov
cmp
sub
sub
leave
cli
clc
lods
mov
test
sahf
cmp
popa
lds
xor
sub
xor
imul
sti
in
mov
gs
imul
pop
aas
sbb
dec
pop
inc
mov
xchg
subl
scas
push
pop
push
rcrl
push
mov
mov
lret
jns
lahf
sbb
imul
xchg
adc
lds
loop
xor
adc
mov
mov
out
insb
repnz
mov
notb
leave
mov
ficompl
pop
sub
mov
lea
jecxz
ja
xchg
int3
pusha
cmp
pop
sub
es
les
int
mov
out
lods
pop
mov
out
scas
and
jns
scas
fisubs
fiadds
mov
lret
popf
outsl
stos
loop
frstor
cli
adcb
mov
xchg
push
and
jne
cmpsb
lock
and
push
in
mov
cld
aaa
ss
push
iret
ss
stc
pop
shlb
inc
shrl
jo
call
or
pop
outsl
xchg
in
pop
into
push
sti
sub
sub
push
stos
out
mov
into
fistpll
test
ss
and
adc
mov
push
jp
aaa
lret
sbbb
popa
bound
adc
adc
icebp
ljmp
and
jbe
andl
sbb
aas
mov
xchg
ja
jle
push
add
or
js
lcall
xchg
mov
clc
adc
pushf
adc
adc
js
lret
xor
mov
lock
cmp
push
jbe
pop
mov
enter
insb
lcall
test
pop
or
push
testb
rol
xchg
stc
mov
xchg
xchg
xor
inc
sbb
adc
sbb
xor
xor
pop
jecxz
sub
notb
imul
mov
stc
mov
jl
jo
in
fbld
ja
dec
mov
and
pop
mov
xor
and
xor
add
add
aaa
xor
fiaddl
and
nop
add
nop
js
mov
mov
push
popa
roll
mov
mov
or
hlt
outsb
xchg
dec
mov
jne
sub
inc
sub
jo
test
lahf
mov
repz
inc
insb
pop
je
addr16
cmp
pop
mov
mov
aas
cmp
cmp
xor
lds
push
push
lea
mov
inc
cmpsb
out
cmp
bound
rcrb
jp
sarl
adc
sbb
insb
push
pop
lea
cmp
pop
xlat
mov
out
xchg
aas
push
daa
out
pop
test
inc
or
sub
pop
fiadds
dec
cwtl
mov
nop
pop
ret
cs
lret
sub
shl
push
cli
push
ljmp
test
and
mov
add
loop
mov
cs
in
dec
jno
inc
push
addr16
sti
cs
arpl
xchg
clc
xor
mov
pusha
xchg
pop
mov
das
lahf
shl
in
scas
mov
out
sbb
and
adc
mov
inc
cmp
sub
lret
sub
pop
push
mov
jnp
dec
fisubl
mov
test
ja
cwtl
xchg
mov
sub
pop
jge
in
mov
xor
mov
mov
xlat
cwtl
push
pop
sbb
ss
fbstp
popa
fmull
xor
jge
cmp
jne
dec
and
aas
fcomi
xlat
popf
cld
cld
pop
pop
xlat
pop
sub
movsb
sbb
cwtl
test
test
pop
lods
aam
mov
dec
jns
sahf
sbb
and
mov
pushf
loop
xchg
pop
iret
popa
mov
mov
jnp
jp
add
jne
stos
push
dec
les
mov
add
out
jne
shrl
and
ret
mov
ss
movl
in
mov
jne
push
inc
push
call
fsubl
mov
adc
sbb
sbb
fmul
cld
adc
mov
mov
xchg
add
movsl
stc
stc
test
mov
sbb
outsb
jmp
fdivr
cmp
mov
and
loop
push
push
sbb
aam
xlat
lret
call
fstps
sbbl
mov
inc
ror
sub
das
int3
fmuls
icebp
push
cmp
addb
fistpll
mov
sub
and
outsb
fcoms
sub
mov
or
jmp
loop
ss
mov
add
dec
loopne
scas
fldt
cmp
out
mov
cmpb
fbld
mov
or
pushf
cli
jecxz
dec
sbb
inc
les
jnp
pop
aam
out
mov
lret
rorb
lds
out
daa
or
and
mov
call
cmpsb
lods
into
cmp
mov
jns
popf
mov
in
insb
int3
jbe
bound
add
popa
cmpsl
cmp
sbb
outsl
cltd
mov
div
ljmp
mov
dec
mov
shrl
cmpsb
cltd
andb
and
in
ret
out
pop
fildl
and
and
push
xchg
push
test
mov
adc
jns
fwait
test
pop
xor
sti
pop
push
inc
arpl
add
into
and
and
cmp
push
in
mov
es
jae
pop
lea
cmp
sub
fbld
inc
xchg
adc
clc
pop
xor
sub
and
nop
test
sbb
push
clc
and
enter
add
rcl
stos
push
mov
cs
ds
adc
jbe
das
or
push
ja
or
scas
cmp
cmc
loopne
xchg
push
sbb
jbe
psrad
fsub
add
mov
mov
aaa
stos
cmovne
daa
clc
aad
testl
sbb
in
xor
cmpl
call
mov
sub
jecxz
pop
into
bound
xchg
inc
in
mov
lcall
and
sub
inc
imulb
dec
adc
sbb
xchg
mov
jl
fucomip
scas
dec
popf
call
lahf
jecxz
adc
adc
repnz
jb
adc
scas
push
adc
sub
sbb
imul
leave
clc
sbb
lods
test
inc
flds
rcrb
push
and
imul
lock
or
sahf
xchg
pop
pop
repz
nop
pop
nop
test
jb
imul
lcall
shrb
jne
inc
es
int
sub
push
push
or
pusha
pusha
insl
pop
cmp
daa
out
rcr
and
xchg
dec
ljmp
fdivr
pop
xor
jg
sbb
sub
mov
incb
jo
movsl
jmp
icebp
adc
pop
imul
mov
push
xor
mov
mov
add
xlat
clc
xor
inc
pushf
cmpsl
int
inc
xchg
pop
cld
mov
repnz
xchg
mov
stc
inc
enter
or
or
je
pop
sbb
add
ret
xor
rclb
sbb
cli
and
scas
popa
shrb
in
push
das
stos
mov
icebp
rorb
les
mov
or
popa
mov
pop
and
xchg
push
les
das
fstpl
rcrb
gs
and
add
dec
popa
push
mov
jle
pop
psubd
add
adc
cmp
xlat
xor
push
jnp
int3
ret
adc
rclb
pop
pop
mov
inc
out
sahf
inc
pop
xor
pop
xor
lahf
xchg
lcall
or
inc
push
push
cli
jno
sub
in
outsb
dec
fisttpl
fcom
scas
adc
pop
outsl
and
adc
bound
sbb
mov
dec
or
sbb
jle
xchg
insl
ret
fwait
shrb
ficoms
xchg
movsl
aas
adcb
xor
cmp
aas
mov
adc
cmpsb
cmp
push
call
fsubl
sub
jns
sbb
jnp
mov
ljmp
popf
pop
jnp
mov
enter
dec
mov
shll
jecxz
lret
jae
into
pop
mov
fucomi
add
mov
and
push
addb
test
mov
push
test
xor
xchg
mov
mov
xor
adc
inc
mov
sbb
int3
and
xor
pushf
pop
ret
fcoms
and
fists
es
out
jge
mov
add
outsl
cld
and
push
stos
adc
cmpsl
inc
pop
inc
pop
push
int
test
mov
adc
popa
pop
and
or
ja
imul
dec
add
mov
icebp
cld
gs
je
xlat
cld
jg
mov
clc
icebp
les
xor
cli
ds
enter
loope
out
sub
jg
mov
outsb
mov
loopne
cltd
adc
dec
movzbl
in
adc
or
jl
lea
fstpl
add
in
jb
xchg
xlat
scas
xor
dec
fwait
push
imul
fs
inc
mov
in
jne
dec
lret
es
fstps
mov
cwtl
cwtl
adc
push
or
dec
and
push
repz
je
cmp
mov
out
push
or
subb
mov
lret
test
add
inc
cmpsl
lods
test
pop
stos
sub
inc
mov
sbb
insb
adc
gs
add
xchg
ret
fisubl
mov
into
stos
pop
lods
sahf
mov
fwait
test
addr16
xor
add
or
imul
xchg
and
loop
outsb
int3
call
cmp
nop
cmpsl
jb
lcall
push
mov
xchg
mov
stos
cld
shrb
xchg
addl
das
push
loop
xor
lcall
pop
popf
int
cmpsb
insb
push
xlat
and
test
inc
or
sub
shrb
dec
adc
cmp
fwait
sti
mov
lock
stos
cmpsb
bound
mov
adc
and
into
jne
add
mov
popf
mov
pop
mov
jp
xchg
aas
mov
fsubs
cmc
outsb
aaa
mov
add
std
inc
cmp
xchg
jne
test
pushl
mov
xor
pop
xchg
and
mov
popa
cmp
fsubrp
repnz
adc
out
imulb
xchg
test
popa
pop
xchg
sub
push
mov
pop
jecxz
dec
or
dec
push
jl,pn
mov
push
xchg
idivb
jp
enter
pop
sub
lods
or
sub
stc
sti
outsl
enter
cli
xchg
inc
cmpsl
jo
je
push
dec
jl
and
iret
dec
xchg
mov
clc
jg
and
fisubrl
scas
fldl2e
mov
ds
iret
dec
insl
cmp
adc
xor
jmp
into
xlat
xchg
push
outsb
xchg
loopne
cltd
jle
out
cmpsb
es
filds
adc
mov
addr16
outsb
out
sub
jecxz
leave
mov
mov
in
mov
xor
loop
inc
scas
sbb
sub
std
mov
je
imul
icebp
les
or
jns
inc
sbb
jns
dec
push
and
into
sub
mov
mov
push
lock
jae
in
dec
push
fistps
inc
mov
mov
in
je
add
xchg
jecxz
xchg
neg
in
lcall
sbb
pop
jns
pop
stc
das
dec
jns
inc
xor
addr16
icebp
out
jg
imul
jecxz
popf
xor
pop
insl
push
fnstsw
mov
enter
mov
sbb
or
pop
or
dec
mov
fmuls
ljmp
sub
ss
fwait
lods
xchg
and
inc
or
or
pusha
push
mov
dec
inc
add
test
xlat
dec
pop
rclb
pop
xchg
in
mov
lret
jne
adcb
push
mov
inc
and
movb
push
xchg
mov
push
in
out
idiv
mov
sub
dec
push
pop
push
cmp
lock
push
pop
sbb
sti
adc
push
adc
hlt
sbb
fcoms
icebp
insl
sub
mov
mov
stc
shll
mov
sbb
push
aas
sbb
push
adc
xorb
mov
cmp
cmp
or
adcl
div
movsl
xor
and
jne
jbe
daa
pop
mov
or
mov
xchg
fidivrs
and
fcoms
pop
inc
jmp
in
adc
int
xchg
adc
cmpsl
inc
jno
push
cmp
insl
hlt
xlat
and
sbb
cmp
loopne
lahf
sub
pop
pop
das
inc
pop
xor
or
push
cmp
fiaddl
adc
or
out
aad
lret
lret
stos
mov
es
out
cmp
pop
in
jg
icebp
pusha
lock
inc
mov
leave
fwait
inc
push
js
xchg
pop
sub
dec
fcmovb
in
lcall
loopne
cmp
data16
pop
add
xchg
aas
je
dec
loopne
icebp
xor
jo
stc
incb
mov
test
pop
fisubl
daa
je
xlat
mov
push
mov
bound
int
pop
ss
dec
xchg
es
dec
das
daa
inc
or
aam
adc
pusha
push
mov
pop
xor
idiv
scas
aad
addr16
xchg
mov
xor
or
sbbl
aad
ror
jnp
testl
aas
stos
mov
mov
repz
and
outsl
xorl
imul
sub
fwait
adc
int3
mov
and
push
inc
insl
cld
cmp
lods
xacquire
inc
lret
jne
xchg
rcrb
ds
outsb
out
sbb
ret
pop
outsb
pop
add
pusha
dec
push
insb
outsl
and
shll
mov
mov
cmp
dec
pop
lods
das
lods
mov
xorb
jb
cmova
ja
sarb
popf
mov
orb
movsl
pop
fs
push
outsl
mov
in
xor
pop
or
ret
pusha
mov
and
pop
icebp
inc
in
cld
or
cmpsl
roll
jae
jbe
jge
mov
outsl
xor
sbb
rorl
cmpsl
imul
popf
leave
mov
inc
test
add
inc
xchg
in
daa
cmp
arpl
mov
dec
cmc
or
pushf
mov
jbe
in
adc
and
in
popf
jb
inc
and
inc
sbb
mov
mov
loope
push
daa
pop
xor
aaa
mov
sbb
adcl
cmp
je
add
cmp
sbb
inc
orl
bound
mov
push
lds
lock
push
mov
xchg
pop
in
xor
cwtl
mov
push
les
popf
push
loopne
lret
xor
mov
bound
test
nop
push
dec
pop
xchg
mov
add
sub
out
and
sub
pop
inc
push
ds
jbe
or
ja
mov
add
ja
and
dec
dec
dec
add
pop
clc
arpl
xor
inc
dec
addr16
mov
out
and
jl
xor
lret
out
mov
ret
iret
outsb
divb
add
int
stc
hlt
pop
sub
subl
pop
mov
mov
dec
mov
cmp
test
icebp
push
lock
mov
shrb
lret
jae
mov
mov
ljmp
or
pop
dec
add
xor
or
push
movsb
jno
or
pop
cvtpi2ps
faddl
cmpsl
inc
and
sbb
test
lahf
sub
cmc
imul
popf
das
pop
adc
jo
xchg
mov
inc
jnp
jne
fmul
enter
adc
sub
popa
mov
int
dec
mov
repz
mov
and
das
inc
sbb
or
cmpb
jbe,pt
js
addl
xchg
fidivrl
dec
mov
mov
push
ret
sub
arpl
std
jb
dec
or
push
leave
movsb
and
ss
hlt
arpl
sub
loope
imul
sub
aaa
aaa
clc
mov
add
rol
xchg
sbb
out
lock
mov
pop
fnstsw
js
lods
push
inc
adc
pushf
add
cmp
lock
dec
and
jle
pop
lret
adc
inc
mov
loope
fnstsw
adc
imul
pop
pop
mov
inc
imul
stos
inc
iret
mov
sub
xlat
sbb
test
sbb
daa
sbb
bound
jg
push
inc
shrb
ss
push
ret
fs
jo
or
pop
inc
and
pop
dec
inc
mov
and
adc
and
stos
stos
dec
outsb
test
dec
mov
andl
arpl
aaa
fcoms
jno
jle
mov
jecxz
add
mov
lret
gs
xor
imul
fmuls
pop
repz
adc
xchg
sbb
rcll
sbb
jle
lahf
popa
lock
test
xchg
pop
mov
fiaddl
pop
push
pusha
scas
inc
fildl
jge
dec
fidivs
jle
jge
cmp
jg
orps
fistpl
inc
inc
imul
into
repnz
add
jg
mov
rcll
cmp
jae
popf
sbb
clc
out
add
xchg
push
std
pop
sti
aad
insb
ret
pop
mov
jns
gs
or
and
nop
cmp
or
into
mov
pop
mov
xchg
mov
xchg
cmpsl
leave
das
pop
ljmp
iret
cmpsl
mov
out
push
adc
imul
push
sbb
out
push
mov
adc
imul
adc
inc
and
inc
dec
mov
ljmp
cmc
cmp
lock
fdiv
aam
and
shlb
xor
out
jnp
mov
repz
std
stos
lret
sub
pop
dec
mov
fcoms
pop
mov
push
jne
in
mov
jl
je
inc
push
imul
push
sahf
add
lahf
pop
jecxz
pop
xchg
hlt
iret
sahf
mov
and
sbb
sti
lcall
stos
adc
int
inc
mov
inc
lods
inc
adc
out
pop
fsubr
sbb
lods
into
pop
and
lods
xchg
sti
ljmp
and
xor
sub
sub
sbb
jecxz
pop
xlat
xor
push
call
xor
mov
mov
or
dec
cmovbe
dec
xor
or
rclb
jmp
jg
sub
outsl
rorl
bound
fucom
push
daa
mov
adcl
jbe
loop
clc
jp
jnp
mov
push
int3
addb
dec
push
adc
ja
stos
hlt
out
fcom
mov
cmc
idivb
push
sbb
arpl
add
sahf
lcall
dec
add
stos
push
cmp
int3
int
stos
popf
jl
mov
adc
dec
test
pop
popa
jl
jge
movsl
jno
int
dec
dec
pushf
cmp
lcall
pop
xor
inc
ja
jp
out
iret
inc
into
xchg
mov
dec
ret
fdivr
aas
loopne
test
cli
fidivrs
dec
fwait
leave
ljmp
lcall
cli
sbb
or
es
into
mov
std
mov
xlat
dec
nop
imul
sar
xor
mov
xchg
ror
fbld
xchg
lahf
popa
outsl
jno
inc
dec
push
pop
and
xor
add
adc
loope
icebp
inc
iret
rcr
mov
xchg
lahf
popa
outsl
jno
inc
dec
push
pop
and
xor
add
adc
loope
jno
inc
iret
rcr
and
adc
inc
dec
push
pop
and
xor
add
adc
loope
icebp
sti
ror
fbld
xchg
pop
popa
outsl
jno
jmp
push
sub
inc
inc
jno
popa
pusha
mov
dec
xchg
pop
loop
sbbb
push
shl
add
adc
bound
popf
insl
mov
out
dec
xchg
pop
loop
repnz
and
xor
arpl
adc
and
jb
inc
lea
sbb
jge
dec
dec
pop
cld
sub
rcrb
push
ja
or
add
push
call
decb
out
repnz
push
stc
sbb
add
pop
xchg
lahf
xchg
daa
and
enter
pop
dec
insl
dec
insl
add
pop
ror
cmp
pop
xchg
aam
inc
add
mov
lods
int3
pop
jge
mov
sub
repz
fidivs
cld
pop
lret
adc
jb
aaa
orl
pop
jle
sbb
add
xor
xchg
in
pop
popf
mov
push
popf
pop
lods
mov
push
push
cmpsb
jp
dec
pop
pop
sbb
add
push
frstor
jb
mov
xor
imul
sbb
adc
ss
mov
and
inc
lea
stc
insl
in
orb
push
sub
je
in
test
je
and
sub
push
fcmovne
insl
rolb
ljmp
push
popa
in
sahf
ja
adc
sbb
sub
aaa
clc
out
add
adc
add
xchg
js
pop
xchg
inc
mov
add
sbb
leave
into
sub
jecxz,pn
shll
or
xor
add
adc
bound
push
popf
mov
dec
xchg
pop
loop
repnz
and
xor
add
adc
bound
push
popf
mov
and
sub
pop
jo
dec
std
shl
mov
xchg
fwait
ss
movsb
push
out
push
sub
sbb
jb
xorl
mov
out
mov
or
idivb
dec
loop
stos
and
jae
cwtl
push
mov
xchg
sub
lahf
jae
sub
adc
fmulp
rep
xchg
int
push
les
movsb
inc
mov
jmp
dec
jae
mov
mov
mov
and
mov
in
lret
inc
loope
addr16
push
add
push
cmp
pop
in
jmp
inc
cmpsl
pop
mov
sbb
sbb
cmp
pop
mov
mov
ljmp
les
inc
mov
scas
dec
daa
or
xchg
movsb
cmc
int
mov
repz
mov
adc
cmp
jle
cmp
xorl
out
push
push
xchg
jo
ja
fiaddl
and
in
xchg
pop
cmpl
or
cwtl
inc
nop
mov
pusha
fdivrs
int3
inc
inc
call
stc
xor
mov
ljmp
iret
xchg
add
in
lret
pushf
push
les
push
or
pop
lret
jb
movsl
mov
xchg
mov
and
or
sub
mov
stos
popf
mov
les
mov
inc
inc
stos
add
popa
rcrl
cld
push
das
mov
fcomps
insl
sbb
es
jl
inc
xchg
cltd
fisubrl
ss
pop
leave
sub
out
pusha
inc
fimull
or
and
mov
cld
sbb
jb
in
xchg
xchg
xchg
push
hlt
cmpsl
sub
sub
mov
jno
adc
popf
pop
push
mov
xchg
mov
int3
xlat
les
sahf
xor
mov
ret
lcall
sbbb
lods
ds
push
mov
push
jmp
stc
std
cli
or
push
dec
lods
mov
repz
cli
mov
jmp
sub
push
out
mov
lods
negl
pop
push
or
out
pop
xor
int
mov
mov
shl
pop
aaa
inc
adc
addl
dec
pop
pop
popa
aad
push
add
xchg
stos
mov
stos
mov
xchg
mov
subb
xor
out
push
inc
sbb
aam
iret
outsl
std
mov
add
jb
mov
mov
pop
mov
xor
fidivs
cmpsb
fistpll
aam
mov
jmp
jge
mov
call
jne
jb
add
sbb
inc
outsb
xchg
jmp
in
jnp
push
cli
ret
aam
insl
orl
jne
nop
hlt
adc
popa
int3
xor
inc
sub
sti
mov
and
pop
pop
scas
sbb
mov
inc
pop
fisubrs
stc
add
cmp
mov
jne
dec
aaa
lods
outsb
bound
cmp
lods
push
mov
mov
fisttpll
aad
adc
fsubs
jle
ja
fwait
xor
rcrb
in
mov
jnp
cmpsl
lret
rcr
sbb
mov
in
push
cmp
dec
in
fldt
fistpl
scas
dec
xchg
cmp
aam
cmpb
jbe
add
jae
sbb
fists
sub
push
jmp
repz
rcr
and
pop
jne
push
out
dec
mov
xchg
cltd
mov
repz
xchg
outsl
xor
fistpll
sbb
in
jecxz
and
stos
lcall
lahf
fsub
sub
or
add
mov
sub
incl
mov
in
cmp
xor
jns
cmp
negb
popa
inc
push
shll
add
fcomps
xlat
test
iret
jmp
dec
arpl
push
inc
push
inc
jle
dec
or
fdivs
scas
mov
insb
sbb
fisttpll
cwtl
das
rorl
test
daa
jns
xchg
dec
xlat
scas
daa
sub
xchg
scas
icebp
dec
pop
into
aad
jb
add
clc
xchg
fbstp
xor
in
mov
dec
mov
mov
jns
dec
jne
test
arpl
xor
into
je
mov
ret
cltd
cltd
push
xlat
cmp
test
enter
push
popa
stos
clc
xor
sub
jb
out
addr16
xchg
icebp
aas
cwtl
xchg
xchg
fmull
stos
lcall
push
lahf
mov
jg
cmp
es
bound
sbb
lret
scas
test
jnp
andl
es
xor
pop
ret
cmpb
jnp
sbb
mov
lcall
mov
and
repz
stos
xor
mov
ret
pushf
inc
push
scas
jbe
rcr
push
xchg
cmp
shll
pop
push
testl
pushf
mov
adc
mov
pushf
jbe
test
imul
jb
mov
or
out
jle
dec
ficompl
rclb
dec
mov
test
loope
jno
mov
sub
shlb
pop
push
or
aas
clc
mov
daa
pushl
xor
jo
fists
push
fdivs
out
loope
add
stos
jo
test
mov
fs
mov
les
dec
jns
dec
enter
out
xchg
movsb
aad
insb
xlat
lret
fwait
mov
jmp
popa
sbb
mov
orl
xchg
aas
add
lahf
stos
xchg
adc
cmp
inc
mov
adc
or
mov
cmp
mov
sbb
mov
arpl
lcall
nop
mov
sbb
fstpt
fdivrs
inc
inc
in
in
nop
into
arpl
mov
ljmp
mov
inc
out
xor
xchg
adc
movsl
outsb
push
jmp
in
rcrb
xchg
sbb
cld
push
pop
mov
or
jb
dec
clc
pop
jmp
lcall
pop
xchg
ds
scas
test
xchg
in
rcrb
aad
add
shrb
in
and
stos
mov
sarb
jmp
pop
aam
cmp
inc
cmp
inc
in
xor
or
gs
mov
inc
repnz
lods
lcall
movsb
shlb
movl
sbbl
dec
fmul
add
xchg
fimuls
or
xchg
jne
mov
repnz
lret
out
cmpsb
mov
in
jbe
stc
pop
cmp
adc
xchg
jb
and
bound
mov
push
push
pop
xchg
inc
push
mov
jbe
adc
cmp
jge
out
mov
dec
out
int3
in
mov
inc
jmp
test
lods
or
out
subl
add
sub
cmp
aam
mov
stos
xchg
add
andl
dec
icebp
cld
and
bound
jmp
sbb
xor
mov
pusha
and
jb
sub
jmp
lahf
cs
push
fisubrl
mov
movsl
mov
cmp
sbb
inc
out
cld
sti
jno
xor
xchg
movsb
mov
jecxz
pop
inc
mov
push
cmp
movl
sbb
xlat
leave
cltd
adc
adc
repnz
aad
adc
dec
cmp
mov
in
or
inc
pop
insl
shl
sub
jne
mov
adc
mov
stc
xor
push
stc
fidivs
ja
and
cwtl
bound
push
lods
ja
cmp
imul
out
add
mov
nop
rep
sti
sar
cmp
fdivrl
dec
das
ja
cmpsb
xchg
pmullw
fisubrs
stc
popf
repz
dec
cmp
mov
popa
xchg
add
sbbl
sbb
fdivrl
cmp
sub
lock
mov
test
dec
jae
sti
fimull
repz
mov
bound
outsl
lods
nop
xchg
pop
add
sbb
or
xorl
dec
ja
adc
xchg
gs
sub
add
lahf
fwait
sahf
clc
jg
imul
fwait
mov
and
imul
xlat
les
scas
mov
mov
adc
push
popa
mov
mov
jge
push
fstps
int
loop
or
scas
std
mov
sub
and
sub
push
imul
push
in
xchg
jp
pop
sarl
sar
sbb
shr
push
mov
and
int
mov
jae
stc
or
sub
mov
int3
mov
sbb
push
repz
dec
stos
fimull
jl
mov
jmp
idivl
test
xchg
jbe
stc
fcoms
ja
dec
addr16
mov
push
sub
xchg
leave
clc
es
in
sub
popf
mov
popf
cmp
inc
and
into
jb
in
out
sbb
fdivrs
das
add
lea
cmp
je
and
mov
cmpsb
push
xchg
test
xchg
mov
inc
test
pusha
nop
gs
out
lock
pop
test
adc
dec
sarb
xor
rorb
push
mov
out
xchg
aam
insb
pop
push
jbe
mov
repnz
jae
sbb
pop
fsubrs
push
mov
xchg
jle
stos
inc
lods
pop
repnz
mov
in
or
outsb
mov
xor
std
dec
pop
sub
xor
aad
add
sub
or
and
test
movl
rcr
cmp
mov
repz
xchg
addr16
fbstp
adc
and
negl
cmp
test
js
popa
js
mov
int
inc
repnz
insl
inc
mov
adc
xchg
jmp
int
adc
test
in
pop
jl
mov
test
sbb
ljmp
adc
imul
or
bound
xor
push
sbb
ja
jmp
sub
ljmp
pop
mov
xor
xor
rcrb
pop
shlb
lret
iret
sub
mov
sbb
push
pop
mov
cmp
dec
aad
fwait
dec
xchg
sub
jnp
push
or
cmp
loopne
mov
fdivr
int3
fisubrl
lcall
inc
js
push
dec
iret
xlat
mov
and
push
add
jae
sti
inc
cmp
mov
into
pusha
mov
cltd
in
jno
dec
repnz
push
adc
xchg
xchg
jns
dec
testl
jp
test
xchg
fstpt
inc
xchg
mov
ret
jecxz
popa
sub
mov
cltd
stos
and
add
pop
stos
ret
ljmp
adc
adc
cmc
enter
in
cmp
pop
xchg
adc
pop
jp
shll
jmp
jl
cmp
js
cli
push
ss
fisubrs
and
repz
enter
xor
pop
insl
int3
xchg
add
out
repz
xor
xchg
cmp
jo
and
cmpl
shll
push
push
jne
loopne
popa
add
mov
lods
mov
push
cmpsl
jns
sub
aad
push
sub
push
cld
sub
dec
jns
fsubl
pop
or
xchg
fwait
inc
dec
lods
cs
mov
and
xchg
dec
pop
push
pop
fmuls
add
or
insl
mov
cli
xchg
xor
inc
xor
lods
cs
jle
loopne
fidivrl
jp
xor
add
xchg
xchg
xor
movsl
test
jp
inc
pop
mov
mov
xchg
into
xor
ret
into
mul
insl
icebp
imul
mov
sbb
ror
xor
xlat
addl
pop
sahf
cli
pop
ds
jle
xchg
jb
shlb
mov
push
xor
mov
test
call
fbld
mov
or
mov
add
mov
adc
popa
in
adc
daa
xchg
lods
adc
lret
pusha
xor
or
outsb
mov
xor
movsb
sub
rolb
lret
jae
mov
ja
dec
mov
pop
fnsave
js
out
pushf
test
mov
xchg
fistl
hlt
xchg
data16
daa
jmp
push
mov
sub
fucomip
cmc
into
or
xor
push
es
out
cmpsl
loopne
cli
ja
aam
dec
dec
push
mov
jmp
aas
in
mov
daa
adc
into
or
inc
mov
fidivrl
arpl
and
rcr
imul
xchg
leave
scas
pop
and
add
mov
xor
es
push
inc
das
jae
cwtl
mov
aad
sahf
jno
fsubrs
add
es
jns
push
dec
mov
pushf
aad
outsl
mov
add
cltd
xchg
or
sub
mov
jnp
xchg
sub
fs
pmaxub
sarl
lds
cmp
je
pop
fcoms
shlb
jnp
imul
mov
add
jp
xchg
out
fistl
mov
xchg
repnz
mov
xchg
addr16
movl
add
fdivs
test
out
mov
fldenv
mov
jecxz
lds
pop
pop
movsb
pop
xchg
pop
mov
push
insb
mov
notl
cmp
or
stos
test
loop
mov
subb
in
push
pop
sub
xchg
mov
mov
repnz
das
mov
xchg
test
lcall
pop
mov
insl
sbb
mov
pop
adc
cld
sti
cli
adc
xchg
mov
shrl
lret
dec
mov
scas
sbb
add
and
pop
out
les
out
sbb
and
jge
cli
cmp
adc
lods
movsl
subl
sbb
push
inc
inc
xchg
mov
jnp
adc
mov
sbb
xchg
les
das
int3
push
add
mov
sbb
cmp
xchg
and
loopne
and
lds
add
and
lcall
pop
add
rcrb
insl
insl
mul
add
dec
addr16
or
push
sbb
roll
shrb
mov
push
pop
call
jno
popf
xchg
ja
shl
lods
in
jnp
dec
inc
mov
cs
daa
dec
adc
jle
mov
add
pop
mov
cmc
stos
pop
jnp
pushf
loop
sbb
cli
out
test
mov
cmp
mov
insb
repnz
cmp
incb
xchg
or
std
and
xlat
ja
dec
pop
push
lods
jb
mov
call
mov
mov
fiadds
xlat
jg
leave
in
mov
fistl
or
sub
je
cmpsb
or
and
xchg
add
repz
cmp
push
lods
mov
jle
pop
insb
mov
mov
das
iret
push
pop
sub
mov
xor
xor
jg
lea
pop
cld
aam
or
jmp
out
jbe
push
dec
movsb
movsl
outsb
enter
js
fbld
in
mov
xor
in
push
push
iret
push
mov
pop
cmpsb
ljmp
mov
xor
adc
mov
jmp
sub
pusha
sub
jbe
sbb
jno
or
out
lret
jmp
lcall
jp
jl
cltd
cltd
or
stos
mov
inc
add
repz
jae
out
xor
mov
adcl
sbb
pop
call
aaa
lcall
mov
dec
int
pop
dec
movl
xchg
push
sub
imul
jle
xchg
scas
or
dec
sub
and
cltd
cmp
fdivrs
pop
cmp
ret
insl
push
test
test
push
inc
cmc
inc
jno
push
and
mov
xor
sbb
adc
das
imul
and
call
inc
jnp
movsl
jp
xorl
jo
shr
pop
adc
insb
mov
clc
xchg
pop
movsl
loopne
clc
or
mov
daa
jecxz
mov
sub
push
sbb
add
sar
mov
fildll
xlat
arpl
add
insl
push
loope
fisubs
or
or
inc
fxch
in
jle
mov
fisttps
ret
in
mov
loopne
adc
test
inc
outsb
mov
sub
add
insb
cli
inc
aas
cli
icebp
mov
repz
lods
insl
add
push
fcomps
repnz
out
sbb
jge
fldl
in
pop
xchg
sbb
inc
out
stos
enter
adc
outsb
data16
fwait
cmp
ret
imul
sbb
sub
in
inc
xchg
inc
mov
xor
mov
aad
mov
int3
call
mov
mov
sub
mov
cli
cmp
les
fbld
or
mov
or
dec
jle
dec
rolb
add
dec
das
gs
dec
das
xchg
mov
and
ret
sbb
jbe
push
cltd
in
push
or
mov
sub
cmp
sub
dec
ret
inc
in
mov
movsl
fnstsw
and
xchg
sub
push
arpl
fsubrs
sbb
in
mov
shlb
dec
test
int3
popf
adc
jnp
push
inc
or
sub
cmc
mov
lcall
cmp
xlat
and
xor
mov
mov
test
aaa
test
mov
or
inc
addr16
mov
fiadds
or
clc
in
das
xor
aad
test
xchg
fcompl
jno
in
mov
jae
xchg
or
mov
mov
jmp
rorb
xor
shlb
pusha
insl
jae
jmp
sub
shl
or
add
jmp
xchg
inc
lods
aas
adc
stos
pushf
lds
es
int3
addr16
xorl
add
mov
insb
adc
xchg
imull
lods
inc
xor
sarb
xorb
lret
inc
lods
add
cmp
inc
xchg
push
cld
inc
shrl
xor
andl
scas
mov
mov
das
cmp
or
cmc
and
stos
lock
aad
xchg
iret
clc
test
xchg
cs
data16
bound
pop
icebp
or
sahf
movsb
into
add
mov
cs
jmp
mov
gs
pushf
jge
lret
push
mov
cli
mov
sub
push
lods
rclb
sub
mov
cmpsl
add
and
data16
jmp
jge
xor
inc
jmp
push
out
mov
rdpmc
iret
pusha
push
pop
daa
data16
inc
push
sub
divb
inc
cmpsl
jg
icebp
mov
aaa
mov
mov
fldcw
xor
and
cmp
data16
setp
div
push
pop
jb
stc
adc
cs
xlat
dec
adc
xchg
pop
leave
lahf
or
sub
pop
pop
fs
cmp
fstpl
je
shrl
movsl
push
inc
push
adc
push
daa
out
cmpl
adc
cmp
push
and
cli
xor
pop
xchg
insb
shr
cmpsb
jne
loope
xlat
xchg
jecxz
sub
cmp
clc
push
xor
stos
mov
fidivl
dec
xor
mov
mov
dec
stos
outsb
or
repz
js
mov
pop
or
movsl
cmp
icebp
imul
fnstcw
cmp
sub
sbb
out
test
xchg
addr16
aaa
dec
mov
fs
mov
xchg
cmpb
jmp
rorl
pop
jnp
xchg
aaa
xorb
dec
inc
jo
movsl
sbb
inc
arpl
mov
sbb
push
mov
fiadds
jg
dec
arpl
xor
sbb
shl
pop
xor
sub
sub
mov
andl
sub
jp
ljmp
pop
inc
add
aaa
push
jbe
frstor
dec
xlat
xlat
rcrl
sub
je
sub
and
adc
lea
popf
cmpsb
fcomps
cmpsb
or
into
es
imul
sub
dec
mov
adc
cmpsb
inc
pop
test
xchg
pop
and
sub
loopne
pop
and
gs
pop
lock
into
lea
stos
std
cmp
push
pop
fsub
adc
iret
adc
hlt
push
movsb
push
xor
xchg
sbb
imul
add
loop
cmp
jae
popf
mov
das
decl
jne
lea
mov
dec
arpl
ret
and
xchg
ret
shrl
mov
adcb
xchg
and
daa
and
push
sub
and
lret
mov
pop
adc
pushf
jb
fidivl
cli
insb
push
sub
adc
int3
iret
pushf
cmc
fdivrl
imul
loop
inc
lcall
push
xchg
sahf
subl
sub
rcrb
add
adc
bound
push
popf
mov
dec
xchg
pop
loop
repnz
and
xor
add
adc
bound
push
popf
mov
dec
xchg
pop
jb
repnz
and
xor
repnz
frstor
bound
mov
out
jge
dec
mov
loop
loop
ret
frstor
in
int
test
adc
mov
mov
adcl
xor
and
adc
add
jo
pusha
hlt
inc
inc
inc
push
mov
mov
xchg
icebp
loope
icebp
rol
rcl
and
push
jo
add
jno
popa
jno
add
mov
mov
xchg
icebp
loope
icebp
rol
rcl
mov
xor
adc
and
push
jno
cs
shll
sarb
adc
sbb
aad
mov
push
xchg
jge
cmc
cli
push
dec
lret
imull
in
shrb
out
push
pop
mov
inc
leave
fmulp
dec
add
pop
adc
mov
cmc
insb
imul
xorl
iret
pusha
mov
fdivs
mov
xchg
icebp
loopne
icebp
xor
cs
out
adc
jmp
mov
dec
fmull
dec
ret
outsb
sbb
jmp
push
pop
fstl
incb
shll
jno
aam
mov
dec
sbb
add
adc
xor
push
divl
adc
push
push
inc
push
out
mov
adcl
xor
and
adc
add
jno
popa
jno
inc
inc
cmp
into
in
std
call
test
xchg
movsb
sbbl
gs
add
inc
xor
mov
or
xchg
shll
dec
inc
imul
sbb
and
add
call
mov
icebp
rol
rcl
and
xor
add
adc
popa
jno
inc
inc
push
mov
mov
xchg
icebp
loope
icebp
rol
rcl
and
xor
add
adc
popa
jno
inc
inc
push
mov
movsb
clc
sbb
rcl
subb
pop
es
js
xchg
cwtl
pop
aam
xchg
ss
aaa
in
or
lods
jnp
mov
ds
jle
loopne
movsb
dec
outsl
xchg
int
xchg
mov
mov
cmc
jae
jmp
imul
notl
xchg
mov
and
subb
mov
int
cmp
hlt
mov
dec
add
pop
stos
adc
pop
mov
push
stos
pop
or
jns
loop
xchg
in
mov
mov
jle
cltd
jb
mov
adc
test
or
pop
jns
sub
fstpt
or
xchg
js
mov
out
loope
dec
ja
mov
jnp
fnsave
out
scas
in
test
pop
outsl
ds
int3
aas
repz
xor
lds
pushf
cmp
jb
stos
and
sub
insl
jecxz
xor
addr16
imull
push
pusha
sub
fildl
xchg
test
int3
es
imul
repnz
xor
adc
call
inc
sub
mov
in
sub
andb
arpl
js
dec
fldcw
mov
rclb
arpl
outsl
cmp
inc
cmp
mov
mov
cltd
mov
mov
sub
inc
sbb
std
das
ret
dec
jecxz
add
sub
cmpsb
sbb
bound
adc
mov
je
test
adc
cmp
push
je
roll
adc
adcl
fs
sti
xchg
mov
cltd
pop
fmuls
ret
aaa
sbbb
imul
jne
imul
xor
lock
adc
sbb
pop
xchg
xor
lahf
mov
es
mov
push
imul
mov
or
mov
std
or
cmp
imul
jb
nop
in
or
sti
add
lock
sahf
sub
scas
xor
fwait
xor
sbbl
cmpsl
jne
sbb
cmp
push
dec
mov
sbb
and
pop
shlb
mov
cmp
gs
dec
testb
lret
in
in
test
sub
test
mov
das
daa
add
fdivs
fiaddl
mov
add
mov
cs
fcoml
fiadds
sbb
adc
cld
pushf
xchg
fidivs
sub
xor
je
mov
clc
add
lea
test
loope
fbld
dec
pushf
mov
add
fldt
pusha
in
jmp
jne
rorl
mov
punpckhwd
pop
and
loop
inc
sub
bound
inc
jg
hlt
pop
jg
lahf
sbb
addr16
adc
mov
fistpl
inc
mov
jmp
ret
jecxz
std
push
xor
cld
mov
ffreep
pop
test
out
les
mov
in
out
test
shl
or
and
jmp
jbe
loopne
sub
adc
cwtl
lds
push
fists
mov
test
test
or
add
stc
int3
xchg
and
icebp
sbb
insb
cmp
repnz
mov
je
out
and
decl
mov
pop
mov
mov
or
fnstcw
ficomps
mov
sbb
fisubrl
fidivrs
je
mov
jge
stos
add
dec
dec
lds
clc
jge
lock
jb
xchg
fsubl
cmc
lods
add
add
push
es
or
nop
gs
cmpsl
ljmp
jle
sbb
push
ret
mov
mov
pop
dec
aam
dec
xchg
fwait
push
negb
dec
fnsave
icebp
push
pop
push
loopne
repz
pop
popf
inc
out
sub
xchg
mov
add
inc
inc
repz
jle
mov
and
inc
enter
inc
scas
popf
xchg
xor
or
int3
bnd
xor
add
inc
adc
fisttpll
lea
shrb
jae
mov
loopne
mov
and
scas
mov
xor
push
xchg
shl
cli
dec
sbb
mov
push
ret
cmp
sbb
subb
fldl
dec
mov
aad
rcrl
mov
push
das
add
jo
push
test
popa
das
add
inc
pop
dec
xchg
mov
in
rorb
loop
dec
mov
push
test
lds
outsb
push
frstor
inc
sbb
push
dec
and
das
mov
test
jl
pop
sbb
je
daa
lock
loopne
sub
rorl
arpl
or
sub
pop
cmc
int
push
lcall
adc
hlt
mov
lret
or
iret
cmc
adc
xchg
sub
sub
adc
xchg
pop
add
or
lret
push
int
add
hlt
mov
iret
or
xor
pop
pop
and
push
repz
sbb
imul
mov
xor
jb
incb
in
imul
arpl
dec
jbe
fcompl
stos
xor
cli
jmp
in
xchg
sub
stos
shl
outsb
hlt
inc
push
xchg
mov
adc
sarl
push
outsl
pop
cmp
cmp
pop
lock
and
xor
xor
shlb
adc
iret
dec
dec
xchg
cmp
loope
mov
cmp
hlt
mov
stc
popa
jmp
fmuls
movsb
out
imul
mov
jl
scas
sub
mov
ljmp
ljmp
adc
and
mov
in
mov
lods
out
dec
leave
push
and
mov
rcrl
je
leave
and
in
jns
fcoml
pop
incl
mov
sbb
je
fldl
outsb
outsb
adc
daa
cltd
inc
stos
aaa
add
rorw
sub
push
insl
mov
imul
or
movsb
mov
out
push
cs
shl
xor
repz
or
push
repz
inc
pop
jge
push
dec
inc
lcall
cmp
lcall
popa
push
sub
jp
aad
scas
cltd
mov
repz
dec
int
push
int3
stc
add
icebp
cmpsb
pushf
push
adc
or
pop
cmp
int
scas
or
or
mov
cmp
loope
push
xchg
es
mov
and
je
push
pop
pusha
adc
dec
push
mov
jl
stc
inc
jbe
mov
cmp
sahf
mov
clc
pop
pop
repnz
push
and
xlat
in
inc
movsl
or
cmp
inc
cwtl
add
mov
out
mov
xor
cmp
add
fdivrl
test
lret
ficomps
pop
jo
daa
mov
inc
add
data16
xor
shlb
cld
mov
push
push
imul
xchg
call
pop
icebp
inc
pop
test
std
inc
mov
pushf
call
in
cld
cmp
cmp
in
jp
lds
sub
popa
pop
fistl
mov
fcmovnbe
jp
loope
pop
and
rcr
fwait
test
cltd
ljmp
rcrl
imul
jo
out
cmc
sbb
mov
xchg
enter
sub
ret
movaps
pop
aaa
shlb
sub
lcall
push
adc
aaa
push
xchg
mov
mov
cmp
xchg
cld
stos
xchg
clc
and
xor
sbb
das
aam
negl
sahf
sub
dec
push
pop
frstor
dec
add
fcmovu
lods
iret
add
add
ret
dec
mov
sbbl
fcomps
mov
add
jo
outsl
mov
push
shrb
add
cmpsl
sahf
inc
jmp
sbb
movsl
dec
notl
pop
aam
cli
enter
out
lea
adc
das
xlat
mov
movsl
shlw
dec
clc
xor
ret
mov
cmp
nop
movsl
add
push
enter
pop
test
pop
iret
sti
cmp
mov
sub
sbb
xchg
push
inc
je
mul
aas
inc
stc
cmc
pop
jns
cmp
xor
notb
xchg
lock
mov
ds
test
lock
loope
sub
imul
xlat
adc
popf
pop
dec
jns
sti
mov
inc
cmc
lret
cltd
shlb
imul
ret
enter
add
cmp
lahf
add
cmp
fs
out
mov
push
pop
adc
xchg
rorb
arpl
pushf
sbb
inc
and
push
xchg
cmovne
and
mov
inc
lret
mov
rolb
push
call
push
dec
fwait
in
or
leave
filds
fldcw
outsl
jb
dec
inc
add
jecxz
out
popf
and
xchg
in
add
mov
dec
mov
or
dec
mov
inc
movsb
fs
lret
insb
or
and
loopne
fcmovne
enter
ljmp
lret
add
repz
in
inc
andb
pop
stos
xchg
movb
xchg
ja
sbb
push
dec
in
push
xor
adc
inc
xor
loope
arpl
test
xchg
js
sbb
ds
imul
faddp
leave
and
push
inc
sbb
pop
insl
push
lock
ret
gs
push
jmp
insb
mov
into
scas
jns
mov
or
daa
scas
in
pop
cmp
cmp
xchg
cmp
shr
ffree
push
imul
mov
imul
push
cmp
push
pop
mov
jmp
cli
scas
mov
pop
stos
pushf
or
stos
int3
sub
or
mov
mov
dec
lds
mov
xchg
inc
xor
mov
cld
add
mov
ret
dec
and
pop
jbe
dec
cmpsb
inc
test
xor
pop
ds
insl
adc
jnp
sbb
int3
inc
lret
test
fimull
adc
push
and
xor
pop
jne
cli
add
pop
adc
mov
scas
xor
loope
xor
pop
xchg
push
jne
andl
push
add
xchg
xchg
dec
cmp
stos
pop
pushf
add
icebp
test
push
out
inc
dec
sbb
adc
sub
lods
and
shr
lahf
push
dec
push
sarb
ljmp
lahf
hlt
scas
mov
aam
aaa
pop
lds
push
xchg
rorl
adc
and
push
shll
icebp
inc
pop
popf
scas
mov
xchg
pop
das
pop
pop
mov
push
dec
mulb
inc
and
pop
gs
ds
in
xor
mov
add
or
mov
xchg
test
scas
mov
outsl
pushf
xchg
in
les
xor
bound
push
lret
stos
push
xchg
es
cmpsb
aas
or
aam
mov
sbb
mov
icebp
lds
pop
mov
repnz
jb
stc
ja
pop
push
mov
mov
xor
cmpsb
insl
int3
or
push
jle
push
push
out
addr16
pop
jbe
ret
lock
mov
repz
ret
xchg
mov
jae
jl
bound
cmpsb
and
aad
sbb
xchg
movsb
inc
mov
loope
jecxz
lea
add
pushf
or
add
aas
sti
xchg
sub
ss
clc
cmpb
mov
cli
jle
cmp
mov
mov
xorb
jbe,pt
sbb
sbb
inc
bndstx
lods
es
adc
mov
incb
sbb
mov
mov
and
pop
sub
xlat
xchg
je
aas
cwtl
sub
mov
ret
cmp
xor
insl
pop
rol
pop
xor
mov
or
xchg
sbb
mov
xchg
add
scas
imul
jns
sbb
movsb
add
pop
js
jb
cmc
loopne
sub
dec
scas
fs
les
inc
in
mov
stos
adc
mov
fs
ja
sub
adc
cmpsl
dec
jmp
scas
leave
mov
daa
push
pushf
lds
jp
adc
leave
lods
jge
pop
lret
mov
hlt
das
pop
push
xor
iret
or
pushf
cmp
dec
pop
aad
sbbb
xor
xor
jecxz
dec
out
stos
clc
pop
ljmp
loopne
sti
xor
dec
mov
mov
xor
adc
cld
and
adc
fst
std
jnp
mov
icebp
jmp
insl
clc
xchg
xchg
sub
lcall
sbb
lds
jge
adc
xorl
fsubl
in
decl
pop
adc
rcrb
mov
pop
pop
pop
movsb
pop
daa
jae
push
push
ds
lahf
dec
lcall
fcmove
ljmp
std
lods
das
loopne
ret
adc
jle
sub
pop
pusha
jbe
js
in
fdivs
hlt
iret
pop
pop
xchg
adc
mov
jae
dec
mov
loop
movsb
call
data16
mov
xor
cmp
outsl
in
clc
jb
xchg
adc
daa
pop
mov
test
or
sti
add
scas
ds
out
sbb
push
rcll
movsl
loop
hlt
push
les
inc
xlat
fistl
insl
cmp
outsl
or
lods
and
jp
or
cli
jnp
cmpb
in
xchg
mov
aad
push
inc
out
sbb
push
inc
out
xlat
mov
lea
ret
fsubr
pop
les
jne
dec
lahf
jge
mov
jecxz
push
mov
cmp
pop
in
xchg
lea
fistl
cmp
inc
cmp
cmp
and
mov
and
incl
push
cwtl
adc
sbb
aad
cld
jno
lcall
test
inc
mov
out
xor
jbe
ret
push
in
mov
push
dec
pop
clc
push
mov
mov
sbb
lock
pop
inc
xor
add
inc
pop
sbb
jne
and
dec
pop
sbb
cmp
mov
jbe
cli
mov
add
dec
push
dec
cwtl
mov
add
xor
xor
cmpsl
jbe
psubusb
or
xchg
int
cli
xor
shll
adc
fsub
pop
shlb
insl
mov
fwait
cmp
add
mov
xchg
lea
push
push
mov
icebp
mov
stc
test
add
aaa
cmc
fimuls
cwtl
call
add
adc
data16
lcall
lahf
jmp
flds
jmp
pop
and
dec
push
and
movsb
adc
stos
pop
ss
jnp
std
sti
adc
cmp
xchg
fdiv
popf
in
mov
nop
push
push
icebp
ljmp
out
add
dec
rolb
ja
pop
mov
xchg
sbb
push
cmp
lock
enter
jno
out
sbb
jge
mov
bound
mov
movsb
or
cmc
and
not
pop
xor
mov
rcll
loope
repnz
lock
sbb
mov
or
add
push
add
dec
mov
repz
cltd
add
mov
hlt
jecxz
and
lds
outsl
xor
cmp
add
jbe
push
loop
sub
mov
mov
pop
mov
push
jmp
dec
jle
repnz
lret
adc
jbe
repz
or
lea
inc
int
mov
aam
imul
les
cmp
lock
and
out
mov
shl
cmp
scas
lods
out
sub
insl
je
sbb
int3
lret
movsl
sbb
xchg
jl
inc
xchg
mov
imul
add
xchg
gs
push
push
fs
loop
sub
mov
ret
pop
mov
jns
sbb
js
or
sub
xchg
or
pop
add
jbe
xchg
cmp
stc
insl
mov
mov
xchg
out
outsl
das
xchg
sbb
jbe
sub
add
clc
xchg
in
mov
or
lds
or
add
xor
cli
mov
test
pop
sbb
and
and
outsl
addl
stc
push
jge
in
add
jle
jbe
sbb
test
inc
insl
adc
mov
or
adcl
subb
movsl
cmp
push
jae
jmp
pop
shll
and
out
adc
fs
fwait
jecxz
ja
pop
stc
lods
pop
push
cmp
adcb
adc
xlat
ja,pn
test
lret
int3
lahf
lahf
add
adc
inc
jno
out
stos
scas
xchg
iret
movsl
lcall
popf
pop
nop
leave
sub
inc
pop
jle
test
jle
cld
mov
cmp
xor
mov
cltd
aas
decl
pop
out
xchg
add
inc
mov
lea
ret
mov
or
arpl
and
imul
lods
and
mov
adc
xorb
mov
out
push
push
sbb
lods
jne
mov
fs
push
ret
and
dec
and
inc
sub
and
out
jecxz
cwtl
ret
out
cs
popf
pop
andl
adc
push
mov
mov
cmp
shlb
xor
pusha
mov
sbb
out
les
sub
stc
cmp
mov
sbb
comiss
mov
jo
mov
cli
mov
jns
dec
js
das
mov
sub
mov
and
shr
inc
push
xchg
insb
popf
xor
dec
jmp
movsl
loope
lds
ljmp
dec
and
aam
pop
mov
jecxz
xchg
int
loope
adc
push
arpl
pop
push
test
mov
rorl
fsubrs
pop
clc
sarl
scas
mov
andl
rclb
and
stos
iret
mov
enter
xchg
mov
push
movsb
mov
ds
shrb
loope
cmp
sbb
dec
out
cli
lahf
fs
dec
sbb
cmc
outsb
or
jg
push
mov
lahf
cld
adc
dec
xor
shlb
or
aaa
xor
dec
xor
mov
inc
outsb
int3
sub
fwait
pop
idivl
repnz
add
cld
loop
fidivrl
outsb
lods
stos
test
add
xor
xlat
loopne
cmp
mov
xor
stos
pop
xchg
fisttps
adc
aam
mov
xor
sub
add
rorb
cs
bound
rclb
cmp
jmp
push
lods
mov
sti
or
lret
jbe
push
inc
add
sahf
mov
fsubl
insl
fs
mov
mov
lock
add
sarb
cmc
cmp
xchg
adc
loope
jns
test
repnz
loope
push
lahf
and
repnz
movsl
fisubrl
ss
pop
mov
mov
sti
dec
test
and
jg
bound
scas
sub
sub
pop
adc
mov
jecxz
addb
sbb
adc
cmp
mov
sub
mov
mov
fwait
adc
iret
push
pop
or
or
and
mov
sbb
into
dec
pop
pop
mov
cltd
stos
jbe,pt
loope
xchg
or
addr16
fistpll
outsl
jns
fcompl
cmp
mov
clc
and
icebp
push
xchg
dec
pusha
jecxz
test
mov
inc
sub
mull
push
pop
mov
out
les
push
mov
pushf
sti
xchg
mov
mov
leave
aas
xor
aas
fiadds
and
or
sbb
sub
es
scas
jo
or
lods
sub
pop
push
aaa
inc
aam
pop
test
cmpsb
add
addr16
mov
pop
divb
xor
sbb
pop
and
subl
je
mov
out
hlt
xchg
mov
dec
mov
movsb
icebp
sbb
leave
push
pop
push
xor
mov
stos
mov
sahf
pop
and
rcrl
mul
insl
call
mov
hlt
sub
adc
cmp
jmp
in
inc
pop
add
and
loope
inc
daa
xchg
jge
pop
into
ja
int
xlat
cmp
jp
cli
cmp
push
pusha
shl
and
cld
jbe
int
aaa
adc
and
loope
and
sbb
cmpsl
movsb
cmp
call
aas
sub
inc
mov
mov
cmp
orb
inc
sub
add
into
jge
mov
and
jno
scas
inc
nop
xchg
xchg
sti
outsb
fldt
daa
push
mov
cmc
jae
insl
and
sub
int
pop
lret
andb
dec
dec
in
xchg
sbb
mov
cltd
jae
or
or
push
cmp
ja
and
loope
aad
or
mov
in
xchg
mov
in
into
daa
xor
fs
mov
push
pop
ret
cmpsb
repnz
in
mov
sbb
pop
jge
fsubrl
mov
repnz
outsl
shlb
in
push
std
arpl
xchg
sbb
sbb
sti
pop
and
mov
stos
and
decl
ror
test
in
jg
adc
nop
cli
rol
jmp
ss
pop
arpl
pop
scas
pop
adc
xchg
icebp
loope
icebp
rol
rcl
and
xor
add
adc
popa
jno
inc
inc
push
mov
mov
xchg
icebp
loope
icebp
rol
rcl
and
xor
add
adc
popa
jno
inc
inc
push
mov
mov
xchg
icebp
loope
jno
rol
xor
add
jno
popa
jno
inc
inc
push
mov
mov
xchg
icebp
loope
icebp
rol
rcl
and
fwait
mov
jmp
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
jg
outsl
sbb
sub
cmp
sbb
push
add
in
pushf
fildll
pushf
lahf
in
cld
jg
outsl
sbb
sub
cmp
dec
das
pop
pop
insb
decl
mov
lahf
in
cld
jg
outsl
sbb
sub
cmp
dec
das
pop
pop
insb
pushl
stos
mov
fmull
push
push
xor
test
aad
enter
and
ja
enter
nop
pop
mov
mov
mov
inc
xor
and
push
leave
in
fiadds
sbbb
lret
push
push
push
std
xlat
aad
push
std
inc
dec
cli
iret
test
and
sbb
std
jg
dec
sbb
push
dec
rorb
cvttps2pi
mov
xor
lahf
scas
mov
add
sub
ljmp
dec
bt
xchg
test
dec
out
push
push
inc
out
add
cltd
pusha
in
lods
inc
mov
dec
adc
movsb
pop
mov
jae
lea
test
mov
pop
stc
cld
mov
sub
cmp
dec
das
pop
pop
insb
decl
mov
lahf
in
mov
sbb
jp
and
jo
mov
loopne
cmc
lods
ret
cmp
lcall
cmp
push
imul
jb
add
leave
mov
mov
mov
in
sbb
sbb
dec
jp
das
pop
pop
insb
decl
mov
lahf
in
cld
jg
outsl
sbb
sub
cmp
dec
das
pop
pop
insb
decl
mov
lahf
in
cld
jg
push
or
fidivs
in
out
mov
dec
dec
cmp
pop
loopne
mov
mov
inc
dec
fnstcw
jmp
lock
sbb
xor
cwtl
xor
divb
mov
aaa
dec
imul
sbb
push
out
push
inc
mov
pop
inc
dec
or
push
mov
lods
dec
adc
push
imul
jl
pop
imul
mov
mov
movsl
popa
pop
out
lods
call
stos
jno
lock
scas
jp
and
test
ret
lahf
adc
cld
push
push
daa
ljmp
dec
out
loope
xchg
int3
pushf
aas
mov
mov
fcoms
mov
cmpb
dec
idivl
clc
and
iret
xor
lea
les
jb
xchg
mov
out
mov
cmc
scas
lahf
in
xor
pushf
lods
or
lahf
test
xchg
ret
icebp
add
xchg
out
stos
mov
jecxz
test
inc
sbb
sti
or
mov
bound
sub
cmp
add
push
push
fcoml
shl
jbe
and
outsl
aam
sbb
push
xchg
in
lds
xchg
mov
add
jmp
movsl
pop
fdivrl
sbb
fidivrs
ds
cmpsb
cld
cmp
xor
mov
ret
inc
es
adc
xchg
outsl
mov
adcb
jns
std
mov
or
leave
pop
inc
pop
jnp
outsb
outsb
jo
push
and
insb
xchg
in
mov
arpl
sub
mov
push
sahf
cltd
gs
and
mov
popa
into
adc
loopne
mov
push
lcall
ficomps
iret
mov
out
scas
pop
test
test
xchg
lds
pushl
and
or
pop
rcl
xor
pop
lods
mov
out
pop
inc
ljmp
addr16
or
mov
les
or
cld
add
into
in
les
in
push
outsb
aam
sti
xlat
cmp
in
cmp
mov
dec
sub
es
in
scas
push
mov
es
scas
xchg
jo
sub
xchg
mov
insl
adc
cs
pop
push
cld
add
stos
or
es
mov
subl
xchg
add
js
das
iret
adc
inc
pop
or
testl
movsl
add
sbb
push
push
and
mov
mov
repz
pusha
in
sbb
mov
in
jg
in
xlat
js
bound
cmp
sarb
xchg
mov
inc
je
pop
push
cltd
fmul
fistl
push
movl
add
jno
into
mov
stc
dec
pop
pop
cmpsl
aad
aaa
adc
jns
mov
leave
sub
add
int
sub
int3
les
test
adc
jle
inc
cmpsb
lret
pop
sub
aaa
mov
std
in
pushf
xor
push
xchg
dec
ss
fs
add
push
in
dec
pushf
ss
pop
add
xor
pop
hlt
and
push
in
rolb
dec
mov
out
lret
dec
pushf
add
ret
stos
push
scas
or
es
mov
frndint
mov
xchg
test
mov
sbb
dec
cltd
dec
fisubl
xchg
roll
inc
std
das
int3
xor
jmp
call
stc
mov
sbb
push
inc
pop
int3
pop
icebp
pop
add
inc
mov
lds
mov
shlb
outsb
sub
scas
inc
movb
mov
addr16
mov
mov
adc
push
daa
dec
scas
repnz
stos
jbe
cmp
mov
mov
cmp
pop
dec
ret
insb
mov
push
arpl
shl
and
or
ficoml
mov
cmp
inc
jns
enter
mov
add
mov
xlat
mov
fisubl
test
add
cmpsl
stc
cmpsb
stc
cmpl
into
dec
mov
mov
or
fwait
xchg
fmulp
mov
cmp
das
sub
ret
gs
lea
xor
aas
js
or
mov
pop
pop
xchg
inc
fidivs
xchg
dec
xlat
in
cmpl
mov
aas
mov
pop
daa
pop
cwtl
arpl
xchg
inc
test
cli
aam
inc
clc
mov
sub
or
arpl
cmc
sti
mov
dec
sub
sub
mov
jl
inc
push
sbb
pop
cmp
adc
and
mov
ret
cli
int3
and
dec
push
pop
in
jno
dec
nop
mov
cmp
xchg
sbb
lcall
cltd
jle
push
int
into
jmp
jp
sbb
daa
outsl
adcl
popa
scas
outsb
xchg
insb
ficoml
loopne
out
add
fst
imul
std
lea
inc
sbb
scas
les
or
cmp
ret
outsl
cmp
push
mov
in
jl
mov
mov
ljmp
pop
add
sbb
mov
fs
cwtl
inc
pusha
popa
jl
insl
lret
xlat
sub
lods
push
repz
dec
xchg
insb
mov
mov
add
sub
ljmp
inc
mov
out
loop
xchg
mov
mov
popf
repnz
ret
jmp
aas
sbb
es
sbb
sub
mov
loopne
mov
loop
push
inc
pop
int3
syscall
add
push
cld
mov
lret
jge
sub
lds
dec
cltd
mov
aam
jo
push
push
inc
and
push
loope
push
ljmp
and
cmpsb
jmp
cmc
into
push
in
cmc
xchg
jns
xchg
in
es
jp
ljmp
pop
xchg
imul
mov
lds
push
pushf
inc
in
jl
repz
push
enter
or
push
jne
aas
push
iret
ret
rclb
popf
or
js
push
mov
test
and
xlat
xchg
cli
sbb
mov
shrb
push
fcomip
scas
nop
test
cli
lret
fcmovnu
mov
in
and
ss
push
xlat
out
xchg
fs
js
dec
adc
mov
mov
sub
xchg
cmpsl
imul
mov
mov
dec
aaa
data16
push
mov
dec
xlat
ja
jbe
sub
insb
movsl
std
movsb
jne
cltd
jge
xlat
add
jns
lcall
mov
jg
fisubrl
sbb
movsb
loop
fistl
dec
imul
movsl
mov
loop
push
out
jns
sbb
inc
jle
dec
scas
loop
pop
shrb
sub
push
pop
int
ret
rolb
les
sbbl
out
in
xor
mov
out
cmp
sub
mov
sarl
pushf
lods
mov
fs
xor
inc
sbb
frstor
xor
and
popa
lret
into
ret
mov
in
adc
pop
inc
mov
cmpsl
push
mov
mov
out
cltd
pusha
lcall
xor
pop
mov
cmp
insl
mov
stc
mov
xor
nop
mov
insl
fdiv
idivl
ret
inc
or
loopne
and
xor
cwtl
outsl
mov
jo
mov
mov
inc
mov
cld
mov
mov
xor
xor
mov
loope
or
cmc
cltd
mov
pop
pop
xchg
data16
xor
mov
and
ret
test
pop
jge
stos
cmpsl
add
ret
nop
aas
mov
push
jns
ja
xor
int3
xchg
adc
xor
and
dec
into
mov
popf
fabs
mov
inc
lahf
lahf
jnp
scas
xchg
add
adc
sub
adc
and
xchg
mov
add
push
nop
jns
inc
pop
jmp
dec
pop
and
out
pop
cmp
fs
in
pop
data16
std
xlat
ds
jl
push
test
cmp
push
and
subl
loope
add
scas
sbb
mov
js
flds
lea
in
inc
scas
in
in
sub
add
push
xor
jp
shll
aad
insb
aas
xchg
lods
fstp
enter
push
push
cmc
filds
xor
dec
sarb
and
push
xchg
icebp
jmp
loop
leave
mov
sub
push
jbe
or
into
pop
mov
pop
and
subb
pusha
xor
loopne
stc
lret
push
sarl
arpl
iret
xor
inc
dec
xchg
add
push
test
jle
arpl
jb
jmp
stc
jp
into
sahf
or
notb
cmp
inc
inc
pop
mov
pop
repz
cmp
cwtl
aam
mov
fmuls
cmp
jge
cmp
push
push
xchg
pop
xchg
push
ret
lahf
sub
inc
jno
dec
sub
mov
out
daa
stos
cmc
fcomps
imul
inc
in
sti
aam
lea
data16
sub
mov
jmp
ja
push
mov
sub
mov
jg
pop
jae
or
mov
mov
or
repnz
es
adc
add
mov
mov
cmp
cmp
or
test
or
int3
jno
scas
jns
fisttpl
aam
cmpsl
push
ds
pop
jge
stc
sub
dec
cmp
pop
jg
lods
pop
adc
jmp
push
add
xorb
inc
aas
movsb
push
mov
mov
sub
mov
loope
sub
imul
jg
add
mov
mov
add
mov
pop
ljmp
jp
out
popf
mov
lock
std
sub
push
mov
in
ret
mov
xorl
cmpsb
fdivs
cmp
gs
in
sbb
dec
popa
cmpsb
pop
test
pushf
jne
std
inc
xchg
xor
xchg
cmp
xchg
out
and
inc
shll
push
js
sub
iret
lret
sbb
fildll
xor
add
mov
dec
jmp
pop
pop
sub
pop
pop
push
aam
sbbl
test
das
push
test
lcall
sbbl
pop
mov
popa
xchg
xor
pusha
shll
test
inc
sbb
adc
aaa
aam
mov
mov
jg
or
inc
jle
cmp
mov
ret
jp
mov
xchg
jp
jo
dec
mov
mov
adc
cmp
loop
dec
imul
sub
decb
fcompl
sub
sub
cmc
icebp
cmp
mov
imul
insb
idivb
xor
fdivl
cli
inc
mov
xchg
fs
addr16
push
out
popa
les
mov
outsb
aam
sub
and
fmuls
and
push
test
into
sbb
push
push
fs
sub
xor
mov
int3
arpl
pop
shlb
mov
fldcw
pop
cmc
xor
leave
int3
out
movb
xchg
inc
rcrl
scas
inc
rorl
jnp
mov
aad
sub
test
adc
pop
gs
mov
mov
add
jnp
mov
pop
ror
cmpsl
xchg
daa
aam
adc
fcomps
push
mov
testl
pop
sbb
cmpsb
and
add
adc
push
pushl
sbbb
idiv
mov
pop
stos
out
lds
sub
sahf
mov
push
test
push
mov
leave
scas
and
dec
movsl
cmpsl
mov
push
push
rcrb
inc
push
into
mov
in
jg
mov
pusha
leave
bnd
xchg
aam
int3
sbb
arpl
xchg
jbe
dec
inc
mov
test
repz
mov
icebp
sub
mov
xchg
lds
mov
jl
aaa
add
inc
add
sub
mov
out
in
das
add
sbb
ret
adc
lods
jbe
lds
cltd
cmp
push
fwait
push
js
loopne
xor
push
push
sub
sbb
cmpsl
scas
xchg
pop
inc
adc
sbb
test
or
adc
lods
dec
imul
shrb
movsb
mov
adc
inc
incb
inc
jmp
mov
bound
push
sarl
aam
lahf
jns
in
loope
ds
dec
repz
inc
pop
or
dec
adc
stos
pop
inc
aam
call
or
or
mov
dec
pop
inc
iret
adc
add
dec
lods
test
jg
adc
cmc
mov
xchg
or
lods
push
ja
int3
inc
out
adc
cld
mov
xchg
mov
adc
inc
xchg
mov
ror
ret
mov
flds
adc
and
inc
and
pop
mov
sbb
mov
leave
mov
cmc
cltd
fdivrl
lea
mov
icebp
jbe
daa
inc
ret
enter
imul
pop
sarl
cmp
imul
mov
loope
add
adc
push
cmp
mov
js
pop
sbb
dec
andl
jne
shrb
cmc
insb
sub
or
lret
fldenv
in
in
mov
pop
dec
push
in
stos
adc
ftst
outsl
aaa
rorb
mov
and
inc
sbb
sbb
fdivrp
xor
xchg
les
jbe
mov
dec
fdivrs
and
sbb
test
stc
int
lahf
jge
iret
xor
iret
adc
mov
adc
or
fsub
int3
fwait
loopne
mov
sbb
xor
lock
and
jecxz
repnz
add
in
pop
mov
mov
cmp
daa
ss
jge
xchg
repnz
enter
or
fucomip
mov
fsubrs
ljmp
lock
dec
push
insb
fs
mov
loopne
pop
xchg
mov
inc
and
in
scas
adc
pop
fwait
dec
mov
int
xchg
stos
jp
xchg
fucomip
jl
faddl
xchg
jno
push
jns
ror
sub
cwtl
outsb
mov
outsl
js
lea
out
jecxz
sti
jb
dec
testl
pop
cmp
mov
cmpsl
push
add
or
push
nop
inc
lret
mov
mov
roll
mov
sbb
jae
dec
pop
mov
movnti
sbb
ja
push
pop
lods
jns
imul
cmp
mov
pusha
fldenv
mov
jno
pop
ficoml
decb
clc
mov
sub
and
mov
push
sub
xlat
jle
xor
push
in
dec
jne
jb
inc
gs
sbb
dec
xor
jmp
mov
mov
dec
jne
int
push
fsts
xchg
adc
loop
cmp
and
in
push
int3
mov
test
mov
inc
mov
mov
push
adc
fdivs
bound
lods
xchg
ror
and
push
sub
lods
sub
jbe
sbb
mov
dec
out
push
xlat
dec
jne
mov
shrb
dec
dec
pop
fcmovnb
int
jo
mov
xchg
ja
xor
mov
xor
cmpsb
mov
cmp
inc
jg
cmp
cmp
movsl
push
push
xchg
pop
pushf
clc
lea
xchg
sbb
es
push
cs
jecxz
in
mov
negl
mov
cmp
and
pop
fbstp
lret
add
stos
sti
or
and
shll
mov
adc
push
jge
dec
push
push
stos
dec
and
or
inc
int3
cmp
call
xchg
subl
rcrl
decb
xchg
es
lret
in
sub
in
xchg
nop
aaa
dec
xchg
or
lret
xchg
fldl
push
hlt
mov
loope
add
out
sub
sub
push
movsb
jb
adc
dec
xor
push
mov
popf
sti
fcmovnb
or
mov
xchg
mov
sti
sbb
outsb
dec
or
call
out
mov
or
xor
clc
cwtl
aad
stc
jp
ret
in
xlat
popa
inc
dec
adc
loop
add
movsl
out
mov
sbb
adc
les
jecxz
js
sahf
mov
jge
lcall
aaa
adc
xchg
fwait
push
outsb
cmpsl
rol
mov
sub
in
mov
jb
hlt
pusha
les
jp
repnz
sub
adc
aaa
mov
outsb
enter
pushf
and
stos
shll
push
jnp
push
jb
pop
lea
cmpsl
add
mov
negl
jge
or
xchg
mov
hlt
js
bound
sbb
and
iret
movsl
cmp
push
adc
pop
ss
out
fistl
inc
iret
mov
xchg
sar
repz
nop
les
loop
mov
sahf
jl
mov
imul
mov
xchg
adc
xchg
mov
sbb
popf
push
sti
xchg
pop
and
lret
inc
xchg
popf
rcrl
je
pop
sub
pop
inc
jnp
jb
movsb
into
adc
call
shlb
adc
adc
cwtl
cwtl
std
and
pop
or
movsl
je
cmpb
es
fildl
lods
mov
rolb
int
sub
sbb
out
arpl
jns
fisttpl
lahf
dec
pop
lock
shrl
cmp
lods
sbb
mov
push
mov
out
sub
cmpl
dec
sbb
ljmp
sub
push
mov
jmp
xor
mov
jecxz
sub
out
or
insb
and
mov
lds
jge
ja
sub
sbb
cmp
nop
inc
mov
xchg
xor
lods
in
lret
cli
xchg
ffreep
xchg
adc
aam
es
mov
mov
lret
inc
pop
in
xlat
xor
mov
loope
xchg
mov
push
sarl
movl
mov
cmpsb
mov
mov
loopne
call
mov
mov
es
test
insl
bound
mov
shrl
push
adc
icebp
loope
sub
push
ja
xchg
rorl
pop
lods
xorb
shlb
jle
mov
add
xchg
mov
lods
movsl
fwait
mov
jmp
jno
mov
pop
cltd
push
pushf
jno
test
ret
mov
push
mov
push
and
notb
adc
inc
mov
in
mov
mov
adc
cmp
jnp
jb
in
out
mov
ret
fcoms
jge
mov
orb
test
or
mov
push
nop
mov
pop
ja
xor
adc
adc
or
sub
shlb
ficompl
lahf
outsl
das
add
jmp
mov
lcall
es
cld
cli
xchg
jne
nop
push
or
stc
cmp
or
mov
add
addr16
xchg
push
xchg
pop
mov
and
mov
dec
or
push
shrl
jbe
and
jbe
push
ret
push
scas
add
push
inc
adc
push
fidivrs
mov
das
adc
cs
sti
test
xor
adc
shrb
sbb
pop
jno
ss
stos
inc
adcb
cs
imul
cld
or
mov
or
daa
orl
push
cmp
pop
xchg
lea
lods
jp
add
add
or
push
mov
test
adc
cmpsb
push
pop
pusha
movsb
mov
mov
and
fdivrs
pop
dec
movsl
cli
fsts
sbbl
lock
imul
daa
in
xor
mov
sbb
or
lcall
std
gs
xor
ss
ss
jno
pop
or
mov
dec
pop
mov
and
repz
es
and
push
push
stc
sahf
ret
cmp
pop
ja
jbe
or
fs
dec
dec
mov
pusha
push
dec
jecxz
test
push
inc
xor
or
or
cmp
jl
repz
pop
mov
sub
arpl
mov
inc
rclb
ja
and
pop
popf
add
or
aaa
cwtl
imul
jecxz
lds
sahf
and
pusha
scas
inc
inc
fidivrs
fadd
mov
inc
push
adc
es
leave
and
sub
sbb
mov
adc
cmp
mov
sbb
loop
shl
jo
add
scas
int3
push
jae
add
arpl
dec
loopne
into
sahf
jbe
mov
jle
push
mov
rcrl
cmp
stc
jecxz
pop
nop
xor
xor
jg
pop
bound
dec
inc
pop
inc
mov
xlat
sbb
sbb
insb
xchg
cmp
add
call
int3
loope
xchg
mov
loopne
dec
jge
inc
stos
in
mov
and
mov
xor
pop
xchg
lds
mov
or
sub
dec
push
mov
mov
add
mov
aam
daa
mov
inc
in
dec
pop
lret
lcall
lret
xchg
mov
lret
sub
lahf
stos
push
loopne
dec
leave
jo
ror
inc
aad
lcall
xchg
incl
sbb
and
std
sbb
popa
popf
pop
sbb
xchg
ret
lods
sbb
sti
sub
scas
scas
cmp
sub
das
pop
pop
insb
decl
mov
lahf
in
cld
jg
outsl
sbb
sub
cmp
dec
das
pop
pop
insb
decl
mov
lahf
in
cld
jg
outsl
sbb
sub
cmp
pop
insl
decb
mov
sahf
in
cld
jg
outsl
sbb
sub
cmp
dec
das
fcompl
jae
ss
iret
lret
enter
adc
and
inc
add
xchg
das
pop
adc
sbb
in
divl
cmpsl
jecxz
repz
ret
xchg
shll
ja
inc
add
daa
arpl
jae
inc
pop
sub
mov
fsts
xchg
xchg
sarl
outsb
xor
dec
adc
arpl
jae
inc
pop
push
mov
scas
repnz
mov
movsb
fldt
sbb
imul
je
aaa
jbe
enter
inc
or
dec
dec
jmp
cmpsb
mov
pop
dec
cmpsb
mov
jo
mov
or
dec
sbbb
fimuls
sub
mul
cmpsl
cmp
and
adc
mov
or
ficompl
cmpsl
testb
inc
xchg
imul
pop
mov
jae
fadd
ss
sub
lods
insb
pop
testb
jae
jecxz
or
aaa
push
cli
arpl
push
mov
fsubr
das
cli
dec
sub
jae
pop
xor
jl
xchg
pop
mov
repz
xchg
add
test
fsubs
mov
sbb
xchg
xchg
xchg
scas
and
inc
add
xor
jae
inc
push
push
mov
into
xchg
mov
ret
xchg
mov
and
and
push
push
push
sbb
pop
pop
out
fwait
mov
out
out
mov
cli
popf
or
push
sub
adc
aaa
aas
pop
sub
call
xchg
mulb
xchg
repz
sub
jbe
dec
aaa
jae
inc
pop
push
out
divl
cmpsl
jecxz
repz
xchg
shll
ja
inc
add
daa
arpl
jae
inc
pop
push
out
divl
cmpsl
jecxz
repz
xchg
shll
pop
pop
clc
out
and
dec
pop
push
pushf
add
dec
mov
sub
lret
cmp
stc
push
mov
cmp
mov
or
sti
loope
jmp
cltd
in
jae
xorl
cs
adc
dec
imull
movsl
pop
adc
push
inc
inc
pop
daa
test
xchg
mov
cmp
dec
push
pushf
fs
movsb
jmp
sbb
sbb
jbe
pop
loop
out
xor
xchg
shl
rcll
cltd
mov
pop
mov
inc
mov
loop
shrb
hlt
mov
mov
add
idivl
test
mov
ljmp
mov
aam
push
hlt
outsb
sbb
push
sahf
jb
ret
enter
dec
fistpl
mov
inc
mov
into
mov
ja
andl
cmpsl
test
not
into
out
in
loopne
daa
jecxz
lret
sub
rorl
fmuls
dec
mov
dec
xor
leave
mov
push
pop
bswap
stos
cmp
adc
pushl
inc
divb
lret
pop
sbb
aad
add
add
inc
insb
push
loopne
addr16
fildl
xlat
or
inc
int
push
jae
xsaves
outsb
ret
sbb
inc
jbe
int
adc
xchg
inc
pop
cltd
or
ljmp
xchg
push
arpl
mov
mov
xchg
test
sub
mov
popf
jmp
in
sti
sub
test
repz
aam
mov
je
movsl
test
in
sbb
xchg
sahf
xchg
es
popf
push
mov
adc
xor
shll
fdivp
lahf
data16
adc
and
adc
add
jae
adc
mov
lret
insb
cmc
es
mov
mov
fsubp
rorl
add
mov
outsb
lcall
ljmp
jnp
stc
ja
xchg
add
std
mov
or
repz
jmp
cmpsb
xchg
mov
popa
and
jg
pop
or
add
dec
loop
dec
push
cwtl
adc
xlat
xor
inc
pusha
in
cli
les
lret
xchg
insb
inc
fs
adc
mov
add
shrl
pop
arpl
xor
addr16
sub
jno,pn
loopne
rorl
cmp
cmp
hlt
fimuls
ss
pop
jmp
aam
mov
aad
arpl
dec
movsb
rcr
and
or
repnz
mov
or
cmp
rcll
inc
int3
dec
pop
filds
pop
rcll
xorl
adc
xorb
adcl
roll
dec
js
pop
pop
mov
call
pop
jae
ror
movsb
mov
movsb
fldl
idiv
roll
testb
ficomps
push
cli
jp
lds
in
jmp
xchg
incb
jge
dec
std
lcall
mov
das
negb
inc
mov
arpl
repnz
and
xor
mov
repnz
popa
rcr
pop
scas
in
addr16
mov
fwait
push
insl
shrb
mov
js,pn
pop
adc
ds
sub
mov
bound
push
inc
scas
mov
test
dec
xor
test
push
cld
in
pop
pop
cli
rcr
dec
leave
nop
pop
cwtl
jl
cmp
push
lret
ficomps
pushf
sub
dec
mov
jge
cli
add
scas
cli
inc
add
stc
mov
jge
in
movsl
mov
fisubs
aad
dec
mov
xor
divl
imul
out
ja
pop
mov
push
jmp
push
pop
jb
out
pop
mov
fsubrl
pop
in
das
add
push
aam
add
into
lahf
popf
push
mov
aam
cli
jle
lahf
sbb
xchg
insl
fbstp
cmpsb
cmp
idivl
cli
lea
xchg
mov
mov
cmp
jo
jl
sub
fisubs
dec
loope
div
lahf
not
ret
pop
push
lret
dec
or
add
mov
test
sar
rcll
or
bsr
mov
stc
lret
mov
popf
push
in
jp
xlat
mov
rcrb
cs
test
xchg
inc
dec
out
fdivs
push
stos
adc
loope
roll
loopne
test
xchg
and
mov
les
cwtl
inc
adc
adc
xchg
aam
faddl
aad
add
mov
jb
test
mov
lahf
ds
mov
pusha
pusha
cltd
mov
daa
orl
iret
mov
and
push
add
test
js
ret
negb
adc
shll
sti
cld
mov
xchg
or
dec
cmpsl
xchg
pop
jnp
jnp
mov
test
rcrb
push
cmpsb
and
mov
les
mov
jl
outsb
lcall
ret
inc
adc
imul
loop
or
insb
mov
mov
repnz
cmp
iret
ljmp
lods
mov
inc
int3
out
repnz
xor
or
push
jge
cld
pop
adc
test
stc
sub
sbb
push
das
lret
mov
sti
mov
xor
dec
icebp
scas
insb
jge
adc
jb
lret
insb
out
lcall
jge
stc
mov
movsb
aas
jns
cmp
adc
dec
stos
xchg
ss
test
sub
xlat
mov
outsl
sti
adc
shrl
mov
inc
test
adc
lds
push
subl
stos
stos
testb
xor
lret
mov
dec
mov
loop
add
push
decb
fmul
mov
cmc
out
in
mov
add
or
add
dec
adc
sub
cmpsb
adc
shlb
xor
and
and
cli
lods
int3
dec
in
inc
lds
mov
lcall
in
jp
jb
repz
test
iret
push
in
rcrb
stc
or
sub
pop
mov
cmp
and
fistpl
jecxz
dec
xchg
dec
xor
sbb
xchg
push
dec
cmp
pop
nop
loop
aaa
xor
ljmp
jnp
push
shlb
loopne
mov
or
ret
push
movsb
test
fimull
dec
pop
inc
push
pop
lret
and
fstpt
lods
xchg
add
ljmp
dec
dec
pop
push
mov
add
jmp
jl
add
sbb
xchg
arpl
push
loop
xchg
cs
out
scas
ja
jbe
cwtl
xor
sbb
xor
fldt
mov
xor
fcoms
andl
fdivrl
in
inc
pop
lock
xor
mov
sub
in
and
xchg
cmp
mov
mov
jne
lods
lea
pop
xor
add
stc
lret
lods
cs
jae
mov
insl
lds
nop
cld
dec
mov
add
cmp
ret
and
fldt
icebp
jo
hlt
xchg
repz
roll
mov
cmp
sbb
fwait
dec
cmc
cmpl
mov
ret
sbb
gs
adcb
lock
ret
push
dec
pop
adc
addr16
pusha
push
xchg
mov
add
je
push
notb
out
or
adc
mov
mov
pop
cmp
lcall
and
outsl
push
adc
jo
out
test
or
andb
xchg
ret
adc
push
stc
jae
xchg
xor
jp
mov
sbb
negb
dec
push
or
jle
jno
enter
filds
inc
mov
imul
pushf
test
jge
repz
mov
push
and
testb
cmpsb
pop
cmp
jecxz
xchg
add
inc
loope
sahf
sbb
ja
mov
dec
int
xchg
mov
jnp
jbe
leave
pop
repz
sub
cltd
divl
xor
and
popf
mov
sbbb
loop
ficoms
sahf
add
or
sarb
in
faddl
lock
in
fwait
repnz
pusha
or
inc
fcompl
cmp
mov
sbb
push
or
loopne
pusha
xor
push
inc
enter
lahf
sbb
add
jb
mov
icebp
mov
mov
mov
jmp
mov
into
inc
std
adc
add
ss
enter
cmp
outsl
sub
and
push
adc
push
aaa
test
inc
lods
inc
clc
in
invlpg
lahf
clc
jmp
test
stos
and
and
cmpsl
sahf
mov
les
xor
mov
xor
fildll
xchg
fiaddl
dec
pop
scas
lods
sarb
adc
mov
mov
insb
pop
lret
pushf
pop
jmp
mov
xchg
mov
enter
mov
jo
push
aas
mov
cmp
fcompl
xor
inc
push
daa
cmp
dec
and
push
jp
lods
outsl
and
mov
cld
push
insl
lea
aad
stos
xchg
aas
out
mov
xor
push
push
mov
cmpsl
sbb
xor
stos
or
sub
mov
dec
or
sbb
cmc
or
xchg
dec
cld
cwtl
mov
out
outsl
lcall
and
daa
test
or
jbe
into
mov
or
sub
sti
push
mov
adc
mov
hlt
jno
cltd
lret
test
xor
jecxz
mov
jb
push
jne
push
outsb
mov
imul
mov
dec
mov
in
or
cmp
mov
cmp
cmpsb
pop
mov
inc
loope
jbe
shrb
mov
pop
or
mov
mov
sub
movsl
sub
idivl
shl
pop
ret
adc
sub
sahf
mov
or
lret
bound
or
mov
iret
mov
imul
ss
dec
dec
lcall
mov
arpl
negl
in
push
mov
mov
rol
jge
mov
insb
aam
cmp
adc
fcoml
outsb
jge
leave
jmp
je
out
movsl
fsubl
data16
push
stos
adc
mov
clc
cmpsl
in
jno
outsb
pop
rol
iret
out
mov
push
sti
xor
enter
mov
adc
xor
orl
hlt
and
rorb
test
xor
stc
and
sbb
punpckhbw
xchg
inc
in
jnp
frstor
push
dec
js
popf
cmp
inc
je
mov
lcall
and
insl
pop
sbb
jl
repz
xchg
test
loop
push
iret
popa
mov
mov
mov
enter
insl
dec
mov
jo
cmp
fwait
add
adc
fcoml
sub
mov
mov
push
pcmpeqd
mov
or
dec
xor
aad
xor
data16
push
mov
jecxz
xor
int3
jmp
push
mov
psubsw
loopne
mov
pop
cmpsb
cmp
cmpsb
xchg
mov
rol
and
data16
mov
lods
sbbl
xorb
cmp
mov
test
pop
sub
pop
pusha
adc
push
loopne
inc
lcall
dec
lods
outsb
shrl
sbb
mov
jp
mov
into
pusha
xor
popa
je
mov
movsl
ljmp
xchg
js
das
mov
test
lret
scas
sbb
or
cltd
cwtl
imul
and
cmp
inc
push
fnstsw
push
pop
mov
xchg
add
jnp
shl
mov
fdivrl
mov
int
mov
jle
cmp
jl
notb
test
imul
das
pushf
jp
xchg
xchg
pop
or
div
xchg
hlt
dec
add
jo
mov
jmp
mov
clc
lret
cwtl
xchg
jnp
ret
rorl
mov
stos
jnp
clc
sbb
mov
popf
mov
je
cmpsl
inc
pop
inc
sarb
mov
inc
add
ret
fstpt
je
fmulp
lcall
pop
cmp
inc
xchg
ret
test
mov
add
mov
into
jmp
aas
or
jno
sti
lods
dec
fbstp
fistpl
pop
or
xchg
iret
fidivs
mov
pusha
mov
aam
cmpsl
subb
iret
sbb
fstl
insb
loopne
cmpsb
shll
aam
xchg
cmpsl
cmp
cltd
adc
decl
ret
gs
lock
clc
lcall
inc
push
push
xchg
cmc
cmp
popa
cmp
sub
and
adc
mov
xor
les
lods
faddp
add
lcall
popf
adc
dec
call
loope
scas
or
ss
xchg
and
mov
cmp
sub
fyl2xp1
test
lret
xchg
cmp
fcoms
xchg
cwtl
jo
xchg
repnz
icebp
sub
mov
xchg
lock
xchg
fnclex
xchg
popl
sbbl
mov
push
mov
or
sbb
mov
out
ficomps
test
or
ficoml
mov
adc
into
loopne
leave
or
or
xor
push
mov
pop
hlt
js
mov
add
cmc
in
cmp
jg
psubusb
int3
jo
in
int
and
xchg
push
xchg
jno
negl
pop
sti
mov
dec
pop
sub
outsl
add
mov
nop
or
jp
imulb
sbb
scas
cmpsl
repz
insl
out
and
popa
movsb
and
lods
mov
addr16
add
data16
cmp
ret
push
sub
or
iret
fsubs
fsubs
fs
xchg
test
scas
push
lods
sub
js
mov
jne
arpl
nop
xchg
add
push
cltd
orl
xchg
fldenv
push
scas
pop
pop
add
inc
xchg
fisubs
push
cmp
inc
pop
xor
sbbl
cld
xchg
ja
mov
pop
add
aaa
sahf
push
inc
rcl
pop
test
mov
push
push
aas
test
xorl
mov
add
call
add
cmp
lret
xchg
les
mov
mov
icebp
imull
shlb
hlt
fcmovnbe
jb
xchg
aas
mov
push
mov
mov
add
cmp
add
mov
inc
sub
js
in
jle
xchg
ja
jmp
loop
jae
out
push
loopne
push
mov
dec
rcll
ja
pop
pop
inc
mov
cmp
nop
or
add
lods
pop
pusha
or
pop
mov
dec
inc
mov
pushf
sbb
test
int
mov
mov
add
lods
xor
add
xor
mov
shll
sbb
into
add
xchg
enter
aaa
jmp
and
stos
lcall
mov
mov
sub
or
jle
rcll
sbb
jmp
adc
movsl
jne
daa
sbb
xchg
insl
shlb
sbb
test
push
test
mul
aas
push
popa
cmova
pushf
and
dec
and
mov
lret
xlat
add
push
enter
push
push
jo
out
mov
scas
stc
js
pop
adc
loop
inc
cmp
mov
sub
pop
stos
aad
lea
inc
arpl
jge
mov
ja
rclb
ficoml
std
or
pop
stos
daa
jp
sbb
jp
sub
rorl
gs
mov
ret
push
rcll
pop
jno
cmc
outsl
lret
cmc
daa
out
pop
and
sbb
cmpsb
xor
lds
fistpll
shll
jb
movsl
lahf
jg
stos
xchg
cmp
adc
test
mov
mov
movsb
loopne
mov
push
pusha
jg
lds
repz
cmp
push
leave
mov
sti
lods
sarl
clc
mov
adcb
push
in
mov
jecxz,pt
clc
push
sbb
out
jg
int3
mov
and
enter
popf
push
lahf
mov
aaa
push
outsl
cmp
pop
xchg
mov
fsubrs
dec
xor
jmp
pop
sahf
shll
repnz
int
push
ja
mov
push
xchg
les
or
cli
xlat
insl
push
pushf
inc
ror
or
pop
jl
out
adc
sahf
test
cmp
add
hlt
ljmp
scas
jg
push
add
mov
jmp
addr16
rep
mov
mov
xor
lods
ret
dec
rcr
ret
xor
movsb
dec
js
je
fwait
lret
xchg
pop
int
popf
fistpll
mov
push
jle
pop
pop
pop
xchg
mov
jns
scas
fstpl
pminsw
ret
push
fcoms
aad
sbb
mov
pop
pop
in
faddl
fcoml
sub
mov
aaa
shrl
cwtd
pop
jno
push
shr
fcomip
out
addr16
sub
mov
cli
out
sahf
inc
in
mov
jb
ss
sub
adc
repz
pop
sbb
dec
adc
pop
scas
les
sbb
mov
inc
inc
pop
xchg
lea
fstpl
icebp
push
push
test
jno
inc
aam
push
pop
sbb
loopne
mov
add
inc
adc
sti
mov
xchg
jae
or
mov
test
sahf
or
iret
xchg
mov
shll
add
xor
lret
outsb
xor
arpl
fisttpl
decl
xchg
leave
mov
addl
shl
cs
lret
or
std
pop
cmc
inc
outsb
cs
jne
decl
rorb
or
sub
push
or
ja
jp
iret
sbb
sbb
xor
mov
test
xor
pop
pop
lcall
es
int3
imulb
inc
outsb
xchg
pop
push
dec
mov
mov
mov
clc
outsb
inc
gs
mov
mov
push
mov
push
cmpsb
lahf
inc
sub
lds
push
sbb
out
fcmovne
insb
ja
sub
adc
lcall
inc
mov
push
aad
xchg
xor
push
add
sub
xchg
sub
mov
insb
mov
mov
inc
xchg
inc
xbegin
test
faddp
xchg
rorl
sbb
mov
add
add
push
les
cmp
xchg
xchg
addr16
addr16
xchg
jg
lock
insl
fsts
mov
cmp
lret
data16
repz
push
adc
push
gs
cmpsb
rcrb
xor
push
and
sarb
dec
push
push
push
push
lahf
pop
dec
pop
jb
sub
es
xor
cwtl
iret
mov
sbb
pop
sbb
arpl
pop
lods
add
mov
pop
aas
sbb
and
mov
sub
int
push
xlat
fs
rorl
cmp
stc
sub
push
dec
adc
lret
sbb
fwait
pop
in
sahf
and
or
jp
rolb
inc
scas
xor
cmp
pop
push
adc
enter
push
sub
pop
jmp
sar
lds
push
lret
gs
clc
loopne
or
adc
int
rcrb
cmp
fistpll
sbbb
rorb
jmp
inc
loope
adc
dec
mov
cmp
test
sbb
jo
dec
fwait
mov
testl
pop
dec
cmp
pop
fsubl
es
popa
gs
push
aas
ficoms
and
shll
outsl
lods
movsb
add
push
int
xchg
rcrl
fisubs
test
or
movsb
xchg
pop
mulb
fidivl
test
push
jl
les
in
mov
das
sub
leave
mov
push
mov
pop
mov
mov
xor
pop
add
movsl
and
jp
lea
and
repz
xchg
cmp
aas
add
dec
sarl
dec
daa
or
icebp
test
jle
imul
jb
mov
test
ret
daa
iret
xor
arpl
dec
movsb
jecxz
mov
or
adc
push
push
jmp
pop
xor
icebp
xor
xchg
or
iret
fistps
sti
lea
adc
inc
adc
shr
fisubs
iret
or
out
push
xchg
loope
xchg
shl
gs
fcompl
cwtl
popa
sub
xchg
jmp
ja
mov
sub
jnp
popa
daa
dec
mov
test
flds
jnp
scas
jb
or
inc
xchg
loope
sub
pop
mov
jns
jle
mov
sbb
cli
xor
push
fistps
jnp
sti
or
fistl
adc
icebp
dec
pop
inc
cmp
test
out
pop
pop
out
scas
inc
cmpsb
scas
fcmovnbe
or
mov
xchg
call
mov
add
pushw
loopne
add
jp
insb
repnz
shll
lds
rcrb
and
pop
js
pop
cmpsl
pusha
dec
test
dec
jg
imul
jmp
ds
mov
or
push
and
and
loop
push
add
mov
mov
ss
mov
dec
cmp
sub
xor
push
adc
arpl
jae
inc
pop
push
out
divl
cmpsl
jecxz
repz
xchg
shll
ja
inc
add
daa
arpl
jae
inc
pop
push
out
divl
cmpsl
jecxz
repz
xchg
shll
ja
inc
add
daa
arpl
jae
inc
pop
push
out
divl
cmpsl
jecxz
repz
xchg
shll
jne
inc
add
and
inc
xchg
push
sbb
xlat
in
imul
js
push
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
cmpsb
inc
mov
cmpsb
bound
mov
pop
add
add
add
or
add
push
call
add
add
add
add
xchg
add
add
add
add
add
add
add
js
int3
add
add
add
add
add
inc
add
add
add
add
add
add
add
dec
add
repnz
add
pop
add
add
add
add
lods
add
add
add
add
dec
add
add
add
addb
cmp
adc
add
add
add
add
inc
add
add
add
pop
add
add
add
or
add
add
movsl
add
add
add
add
add
add
les
cmp
sub
int3
add
jecxz
enter
scas
add
add
add
sbb
cmp
filds
call
add
xor
push
add
add
add
sbb
cmp
or
fldl
push
add
add
add
add
jno
sbb
rolb
jb
int3
add
scas
add
add
add
add
add
add
flds
pop
add
popf
add
add
add
add
add
add
add
add
push
add
add
dec
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
stos
add
cmp
jnp
push
add
add
add
adc
scas
add
add
add
add
add
add
add
add
or
add
add
mov
inc
add
add
add
add
add
add
add
add
scas
add
xor
add
scas
add
add
adc
add
or
lock
add
add
add
add
add
add
add
add
add
add
add
sbb
push
add
repnz
add
add
add
add
add
add
add
sbb
js
jbe
inc
add
add
add
add
add
add
xor
and
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
iret
add
add
jp
sti
add
add
add
sbb
dec
add
add
mov
call
add
add
or
roll
jmp
add
jecxz
fiadds
movsl
add
add
add
add
add
sub
loopne
repnz
add
icebp
add
scas
add
add
add
adc
add
pop
add
add
add
add
add
add
add
add
add
add
add
scas
add
add
scas
add
add
add
jo
mov
sahf
add
add
mov
add
add
add
adc
inc
add
add
add
add
pop
add
add
add
add
scas
add
add
add
add
add
add
add
add
add
add
add
into
pop
cmpsb
dec
add
movsb
movsl
mov
dec
mov
xchg
cltd
or
jge
pop
popl
mov
lds
mov
xchg
xchg
gs
pushf
xlat
cmpsl
mov
icebp
push
dec
adc
cli
daa
or
mov
test
in
icebp
and
lret
dec
das
xor
les
andb
push
jne
lcall
sub
loop
cmpps
or
dec
int
sub
or
sbb
push
test
sub
mov
adc
jnp
jno
pop
jl
outsb
inc
jns
jno
dec
inc
les
mov
ret
imull
pushf
cltd
inc
arpl
pushf
gs
rcr
xlat
push
lahf
xor
cmc
outsl
pusha
js
mov
lock
mov
das
inc
lret
nop
xor
mov
push
and
pop
pop
cmpsb
pop
popa
ljmp
lea
hlt
pop
outsb
jmp
imul
inc
sub
cmp
int3
dec
push
xchg
cmpsl
or
push
or
mov
xchg
xchg
in
push
dec
cmpsl
rclb
mov
add
xor
fstps
or
dec
shl
adc
jp
jb
xor
enter
dec
ret
pop
pop
or
jno
dec
ret
inc
ficoml
sahf
stos
jb
nop
out
test
xchg
mov
es
sti
loop
inc
adc
xchg
stos
shrl
imul
sbb
das
add
gs
push
push
jp
xchg
mov
jmp
cmp
inc
data16
int3
xchg
cltd
jnp
xchg
es
lcall
jne
test
pop
jo
pop
mov
aaa
mov
jns
stos
aam
xor
lods
ror
sti
jbe
in
add
add
pop
pop
adc
and
hlt
sub
test
in
pop
dec
mov
xor
cmp
push
int3
dec
push
and
mov
pop
rorl
pop
xchg
xor
xchg
xchg
pop
popf
addr16
inc
sbb
in
cmpsl
das
mov
insb
outsl
pop
pusha
adc
mov
cmp
pop
je
push
in
ret
add
jb
sub
mov
lock
es
stos
loopne
je
jbe
inc
lods
fnsave
cmpsl
push
xlat
andb
je
gs
jbe
movsl
sbbl
push
cmp
sub
mov
pop
loop
test
data16
mov
enter
xor
add
add
test
cltd
xor
lret
jae
xchg
test
les
mov
cmp
mov
and
push
shl
js
dec
out
mov
cmpsb
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
