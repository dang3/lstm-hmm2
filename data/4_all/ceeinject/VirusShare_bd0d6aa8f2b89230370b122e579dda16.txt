call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
dec
sub
cmp
or
sbb
aam
adc
or
xchg
in
xchg
int3
out
add
cmp
or
sbb
insb
inc
insb
jbe
data16
fs
sahf
test
fmull
xor
ds
jne
outsb
push
jno
xchg
lods
lea
stc
mov
mov
pusha
push
dec
jp
dec
jnp
movsb
mov
mov
jbe
icebp
jg
dec
lahf
mov
xor
movsl
push
sub
mov
add
mov
mov
dec
fsubrl
mov
fwait
mov
push
jg
in
sbb
inc
push
fs
add
pop
arpl
dec
addl
and
rep
dec
jae
push
insb
sahf
cmp
mov
jae
adc
xchg
jns
xor
int3
imulb
push
push
inc
jbe
sahf
push
jns
mov
out
in
jnp
push
pop
not
push
dec
jns
stos
xchg
jmp
int
xchg
dec
dec
or
les
dec
jae
arpl
sbb
into
out
cmp
sub
adc
pop
jl
dec
jg
lods
sahf
movsb
scas
xchg
mov
in
frstor
arpl
imul
je
or
loop
xchg
mov
mov
inc
push
push
push
jg
jae
insb
sub
sbb
and
fadds
sahf
mov
mov
xchg
xor
push
push
inc
jl
dec
pop
xchg
lods
xchg
in
cld
test
fcoml
sub
cmp
or
sbb
insb
inc
jl
dec
pop
xchg
lods
xchg
in
cld
test
fcoml
sub
das
outsl
mov
jns
push
leave
cmpb
mov
xchg
xchg
lret
push
jbe
sti
orl
pop
lods
sub
stos
cmp
lods
cmp
cld
sub
test
movsb
and
imul
cmp
ret
add
bound
pop
in
inc
addb
repnz
lods
ss
cmpsb
sahf
das
and
sub
aam
or
xor
mov
cmp
aam
xchg
push
mov
dec
inc
arpl
add
ljmp
mov
shlb
popf
mov
xchg
xchg
aas
cmp
push
pushf
lret
inc
fiaddl
out
je
out
jge
push
pop
ljmp
xor
jp
and
dec
inc
out
lds
int3
add
in
or
lods
pusha
daa
xor
sbb
or
inc
cmp
inc
inc
xchg
movl
je
jnp
sub
cmp
mov
ds
negl
pop
inc
push
mov
inc
psubb
popf
pop
ror
push
aaa
and
xchg
mov
enter
pop
iret
jmp
outsl
dec
cwtl
pop
loop
test
popf
in
loopne
sarl
dec
das
xor
movsl
mov
pop
fdivl
dec
call
xor
jmp
push
add
in
std
cld
pop
in
lret
dec
adc
mov
push
push
push
pop
mull
pop
outsl
push
xchg
sarb
repz
ret
xor
adc
ja
mov
aas
adc
add
js
pop
pop
nop
stos
scas
sub
bound
pop
movsb
push
popf
hlt
xchg
jnp
neg
or
adc
negb
sbb
jne
enter
in
dec
cmp
xchg
jno
loope
loop
rclb
and
fstpl
mov
test
rclb
inc
insb
lret
mov
push
lock
xchg
inc
filds
xor
pop
outsl
jl
lret
add
xchg
out
dec
push
sbb
mov
xchg
gs
inc
sub
jo
ret
or
inc
sub
xchg
and
cwtl
clc
aas
dec
imul
ljmp
jae
mov
cmpsl
gs
dec
jbe
lret
mov
cmp
mov
ja
push
iret
push
add
inc
pushf
sub
dec
mov
pop
ret
ljmp
test
mov
sahf
mov
imul
sub
rcrb
movsb
jg
daa
rcll
movsb
jecxz
je
push
sahf
jmp
adc
cmove
lahf
sub
cmp
je
pop
movl
or
mov
xlat
fmuls
ljmp
pop
fists
jns
mov
xchg
out
sub
cmc
xor
xor
xchg
bound
popf
dec
sub
insb
push
or
fwait
adc
std
jge
pop
cmp
lret
push
add
inc
imul
scas
mov
inc
jg
lods
lret
iret
lds
mov
add
bound
outsb
pop
pop
jb
bound
imul
movsb
ret
cmc
cmp
stos
lods
lret
pop
pop
ja
ja
test
jmp
sub
xor
add
mov
push
lahf
pop
enter
hlt
mov
dec
fwait
lret
stos
jae
cltd
cmpsb
hlt
rcrb
cmp
xchg
pop
mov
ret
xor
rolb
push
hlt
jmp
xor
mov
bound
add
and
xor
adc
xchg
stos
and
add
enter
jns
pop
cmpsb
pop
cmp
or
mov
mov
and
je
stos
cmpsb
push
rorl
popf
stos
jp
fstp
push
push
xchg
jge
mov
shll
inc
sahf
mov
out
ds
push
frstor
jle
vandnps
add
scas
cmc
push
xchg
mov
jp
int
popf
mov
add
stc
cmpsl
fidivrl
push
mov
or
pop
out
push
push
sbb
pushf
leave
pop
push
rcrl
xor
adc
ss
sbb
pop
pusha
adc
jg
test
mov
jno
jb
jbe
lods
mov
mov
sub
and
dec
loope
test
inc
aaa
cmpl
fsubs
cwtl
stos
push
inc
cmpsl
mov
dec
and
push
push
push
subl
inc
xchg
sbb
repnz
jae
pop
or
mov
fsubr
es
jecxz
jae
psrlw
adc
lahf
jl
ljmp
popl
cmp
xlat
fmull
xor
pop
jns
inc
cwtl
arpl
mov
or
mov
imul
hlt
sub
out
das
out
pop
dec
jmp
xor
ljmp
sub
mov
cmp
andl
ljmp
inc
aad
mov
cmp
out
add
jno
add
das
xchg
leave
or
jecxz
test
insb
xlat
mov
adc
sbb
push
out
pop
fcoml
push
xchg
pop
xchg
hlt
mov
shlb
xorb
mov
mov
adc
inc
cmpsb
and
loope
mov
or
hlt
mov
imul
dec
add
adc
lock
rcll
loopne
xor
int3
ret
adc
or
sbb
sbb
icebp
push
adc
mov
add
xchg
leave
fcomp
xchg
xor
sub
loope
popf
and
push
cltd
xchg
int3
roll
mov
push
data16
cmp
cmp
js
cmp
out
clc
add
insb
jne
inc
pop
pop
push
ret
lcall
test
test
lea
jp
xlat
cld
rorb
aad
xor
call
sbb
test
lret
adc
xor
dec
sub
xchg
push
cld
int3
cli
loop
sahf
fisubrl
call
add
adc
cmp
sbb
xor
scas
lret
pop
pop
sub
or
out
add
xchg
arpl
scas
pop
sahf
push
stos
leave
push
int
or
les
cmp
xchg
lcall
cmp
jo
mov
xchg
jo
aam
dec
sub
inc
push
test
xor
das
stos
scas
or
imull
xchg
clc
adc
scas
sbb
fs
pop
push
add
pushf
and
arpl
mov
adc
pop
push
push
pop
jmp
and
scas
xchg
dec
stos
or
inc
xor
cmp
jle
mov
in
mov
cmp
daa
jp
inc
add
sbb
inc
mov
jae
push
jl
sbb
mov
insb
and
jne
adc
rorb
push
mov
xor
lcall
push
mov
ret
bnd
shr
popa
and
popf
adc
loop
or
cmp
out
and
shrl
xor
jae
add
mov
dec
add
sub
addr16
dec
xlat
dec
fidivrs
jnp
xchg
rcr
mov
dec
aaa
outsl
mov
pop
aad
ret
inc
outsl
cs
xchg
repnz
test
sub
sub
adc
jo
push
in
bound
jg
leave
icebp
xor
iret
loope
mov
test
out
fmull
roll
cmpsb
insb
adc
outsl
frndint
js
sub
les
cmp
outsl
scas
mov
adc
inc
push
dec
sub
sub
ss
insl
push
orl
adc
sub
lods
rolb
popf
mov
inc
insl
fucomi
sbb
push
arpl
xchg
fmul
add
mov
push
jecxz
cmpsl
sbb
inc
cltd
jl
mov
in
nop
rcll
cltd
dec
mov
xchg
jnp
pop
pop
or
and
mov
insb
and
xor
clc
cmp
jne
mov
push
popa
rcl
inc
das
cmp
fbld
jl
stos
push
lods
shll
jmp
outsl
cmp
repz
fsts
call
lods
pushf
mov
inc
jl
pop
add
dec
fwait
mov
mov
ror
inc
daa
fildl
in
mov
adc
mov
and
int3
int
dec
xor
pop
jbe
dec
in
loope
or
out
add
dec
cmp
mov
outsb
inc
and
int
jecxz
adc
imull
lahf
jge
sbb
mov
or
mov
ficoml
ret
mov
cwtl
inc
inc
in
popa
test
repnz
subb
fwait
lahf
dec
and
js
loope
sub
cmp
inc
push
daa
sub
call
cld
js
mov
dec
add
movsl
insb
push
aas
push
rcl
cld
cmp
cltd
push
lds
and
push
es
dec
jl
xor
imul
or
cli
push
jns
lahf
clc
adc
mul
mov
jbe
sub
cld
inc
repnz
jmp
rorl
mov
fdivs
xor
mov
push
xor
sbb
into
leave
or
xor
ret
je
xchg
mov
xchg
adc
lret
fidivrl
repnz
test
add
mov
pop
cmc
mov
jbe
out
or
jmp
aad
xor
and
cmp
pop
xor
fwait
jae
testl
scas
lea
notb
jnp
movsl
ret
push
ljmp
mov
sbb
lock
push
cmpl
dec
stos
mov
sub
mov
or
test
add
outsl
xor
fldcw
sbb
add
mov
jne
pop
icebp
shlb
in
sahf
add
shl
mov
fsubrs
fistpl
push
addb
mov
sti
in
or
cli
inc
dec
pop
repnz
cmp
fcomi
int
dec
pop
push
je
popf
sbb
repz
jl
popa
aad
nop
mov
mov
outsb
lret
push
leave
pop
pusha
inc
loope
test
push
push
fmul
data16
push
dec
fstpt
cmp
lea
scas
dec
popf
mov
sub
adc
push
stos
mov
push
mov
call
mov
mov
cli
cmpsb
pop
out
dec
xchg
add
push
outsb
adc
ret
inc
dec
loope
insb
xor
movsb
sbb
inc
cli
lods
xlat
and
sti
xor
enter
test
xchg
ds
fcoml
push
mov
aas
adc
or
mov
notl
mov
nop
mov
into
movsb
les
std
jns
sub
mov
jo
mov
mov
out
fdivrs
xchg
ds
push
pmulhw
mov
loope
movsb
xchg
aad
jg
das
cmp
mov
mov
xchg
mov
aaa
movsb
jno
cmp
adc
and
xchg
dec
or
mov
adc
fisttpll
das
adc
push
test
xchg
aam
cld
addr16
add
lret
div
jmp
emms
cmp
mov
fstps
adc
or
xor
insl
lahf
cmp
cld
popa
in
jecxz
sbb
xchg
push
add
stc
data16
arpl
inc
cmp
lods
hlt
mov
mov
out
iret
sub
cmp
out
dec
or
dec
fimuls
je
mov
jg
dec
dec
dec
add
stos
stc
mov
add
into
fwait
cmp
pop
imul
jl
lcall
test
leave
push
xor
or
cs
testl
or
dec
inc
sahf
fisttpl
lcall
aaa
push
and
nop
sub
pop
push
adc
movsl
xchg
cltd
ds
sahf
adc
adc
repnz
or
or
lret
xor
mov
jge
leave
out
pop
test
test
popa
flds
mov
hlt
loopne
jmp
sahf
jns
lcall
or
loop
mov
jb
lods
ljmp
fiaddl
stos
jmp
and
mov
mov
inc
jae
shlb
xchg
cmc
scas
cs
gs
jmp
clc
push
jl
les
cmp
call
aad
aam
sub
out
inc
imul
mov
xchg
xchg
lret
push
xor
mov
stos
and
xchg
or
xor
mov
in
ss
pop
cmp
mov
dec
jecxz
xorl
in
mov
mov
mov
add
cmp
lret
cld
wbinvd
dec
jmp
lahf
test
add
jmp
xlat
imul
mov
push
pop
pop
outsb
rolb
sbb
loope
adc
mov
jo
dec
lods
inc
lea
cmpsb
in
jle
xor
sbb
fistps
pop
in
in
push
int3
icebp
outsl
mov
sub
into
inc
or
xchg
dec
push
sub
adc
lods
fisubrl
dec
lds
hlt
not
aas
das
jbe
xor
jle
fneni(8087
stos
adc
adc
mov
lock
and
out
outsl
dec
in
sti
dec
arpl
dec
dec
das
mov
aaa
xchg
or
test
pop
xor
call
xrelease
sbb
cmpsb
cmp
cmp
sbb
push
mov
mov
or
bnd
fs
fcomps
cltd
lahf
lea
fsubrp
fisubrs
addr16
leave
je
mov
lret
out
and
fs
dec
inc
pop
jle
fidivs
xor
cmp
fcomps
lods
in
inc
loop
sub
sub
daa
cmp
in
xchg
inc
mov
popf
xor
jp
xor
jle
fiadds
test
test
push
into
loop
pushl
imul
xlat
ja
xor
lahf
dec
outsl
rorl
shlb
pop
mov
pop
sbb
cmp
bound
or
into
push
cli
sbb
cmpsl
dec
clc
in
cmp
cmpsl
icebp
sub
xor
ror
push
push
addr16
jmp
ljmp
or
test
cwtl
in
jne
mov
dec
adc
mov
or
das
jp
imul
jmp
sbb
popa
je
push
mov
mov
popa
cmpsl
cmp
adc
insl
cwtl
insb
pop
jae
mov
mov
pusha
xchg
lods
ret
scas
mov
lret
dec
push
xchg
or
add
sbb
test
jg
xor
mov
mov
jnp
cli
lcall
mov
dec
sahf
hlt
cmp
loopne
pushf
adc
mov
push
push
repz
xor
fs
std
fisttpl
mov
adc
roll
push
xchg
enter
pop
pop
pop
std
xor
adc
call
mov
lahf
xor
inc
scas
xchg
stos
jmp
sub
mov
sbb
std
movsb
ja
sbb
xchg
fldcw
and
add
pop
bnd
inc
xor
mov
aad
popa
jmp
push
pop
push
sbb
jb
je
lahf
fs
fdivrs
inc
out
and
stos
hlt
fisubs
loop
lods
push
sub
cltd
lahf
add
aaa
push
cmp
insb
adcl
mov
mov
mulb
insb
add
out
pusha
xor
pop
dec
fsts
or
add
pusha
stc
xchg
sbb
nopl
push
imul
lcall
popa
jg
les
or
push
aad
inc
pop
movsl
sbbb
in
add
pusha
fsubs
ficomps
lods
andl
movsl
dec
test
js
rep
xchg
ds
pop
stos
pop
out
jmp
mov
call
xor
out
xor
aaa
movsl
es
cmp
ja
fwait
int
in
in
xor
pusha
jb
test
and
ret
jb
add
mov
mov
stos
sbb
clc
std
xchg
inc
movsl
inc
mov
addr16
cmpl
mov
jno
push
cmp
jle
mov
cwtl
test
int
or
loope
shrl
loope
insl
fcoml
loope
jno
jecxz
in
int3
push
shl
sub
mov
inc
inc
sbb
sub
in
fldcw
mul
insl
sbb
add
mov
add
ret
popf
lcall
cs
stos
mov
add
or
jge
jnp
fnstcw
xchg
std
rorb
rol
dec
ljmp
sbb
imul
push
jnp,pn
dec
sahf
ljmp
fists
cltd
add
out
shll
loop
push
andl
cmpsl
and
incb
push
sub
push
push
jecxz
call
aad
outsl
outsb
or
mov
mov
mov
sbb
mov
dec
dec
push
jne
push
dec
std
movsl
inc
mov
mov
daa
sbb
das
sti
mov
scas
pop
aam
das
and
xchg
mov
mov
lea
mov
outsl
inc
cmp
cmp
jb
pop
mov
push
aaa
cmp
pop
xchg
jo
fiaddl
das
xor
movsl
dec
scas
insl
inc
sub
mov
mov
mov
adc
sbb
pop
test
jnp
sub
shl
inc
sbb
xchg
inc
pop
clc
push
sbb
pop
mov
in
add
pop
cli
mov
jne
or
adc
dec
imul
roll
call
stos
dec
roll
fscale
lods
sbb
pop
imul
xor
xchg
das
sbb
fadds
add
out
jp
loop
sahf
movsb
inc
mov
sbb
dec
imul
lods
lds
adc
push
jno
out
std
mov
push
xchg
fdivl
push
inc
push
and
pushl
out
cltd
leave
cmp
add
xor
mov
lret
dec
push
lret
in
or
cmc
jns
bound
inc
sub
rclb
test
adc
repz
dec
gs
push
adc
cmpsb
xor
cmc
mov
add
lea
mov
imul
xchg
in
xor
xor
jecxz
jecxz
jge
out
fistps
rorb
fidivs
xor
enter
testb
js
mov
insl
out
or
sbb
stc
dec
inc
mov
les
push
cmp
aad
cltd
sbb
cmp
cmc
push
xorb
and
sti
stc
add
pop
xchg
sub
dec
mov
xchg
ret
call
jns
sti
inc
loopne
imul
xchg
pop
js
sahf
cmp
sub
jne
or
into
xchg
inc
inc
cmp
cli
inc
push
xchg
add
fisubrl
cmpsl
xor
jle
repnz
mov
xor
leave
jno
scas
aas
pop
pop
test
test
jge
bound
stos
adc
mov
mov
xor
push
sbb
dec
ja
mov
mov
push
cmp
iret
out
and
sbb
lahf
xor
outsb
mov
mov
mov
inc
sub
adc
iret
inc
cmp
push
jg
inc
imul
lds
cs
jno
repz
repz
repnz
das
cltd
and
or
mov
and
xchg
pop
add
push
lret
dec
test
xchg
jnp
clc
xor
push
push
jle
test
cmp
xchg
xor
pushf
jle
inc
movsl
lahf
adc
test
jle
ja
push
imul
xchg
lea
mov
cmp
push
test
test
mov
push
sbbl
cmpsb
inc
mov
mov
sarb
pop
mov
into
mov
pop
sub
cmp
and
in
push
cmc
lret
sbb
nop
iret
push
arpl
test
outsl
cmp
pop
pop
jo
and
aad
push
push
cmp
ret
pop
imul
xor
mov
xor
jmp
adc
cli
mov
cmpsb
es
xchg
pusha
pandn
xor
scas
sub
aam
orb
dec
and
and
add
xchg
cmp
out
dec
adc
inc
jecxz
fcomps
and
add
stc
outsl
adcb
loopne
dec
rorb
mov
call
jecxz
mov
push
stos
pop
xchg
loop
not
push
or
pop
sub
push
mov
jb
and
es
rclb
out
shll
rcrb
rol
stos
hlt
lret
lods
in
rcl
cwtl
mov
daa
mov
push
ja
jle
and
inc
fwait
jne
mov
push
sbb
adc
sbb
push
sti
leave
sbb
in
cli
mov
dec
ret
stc
cmp
repz
arpl
mov
adc
out
cld
cmp
push
adc
outsb
fadd
mov
sub
inc
mov
jp
xor
pop
lcall
scas
lods
push
cli
dec
sbb
pop
iret
scas
and
lods
inc
jle
dec
jb
roll
in
xchg
addr16
cwtl
stos
addr16
lock
test
mov
add
fldl
lahf
push
fldl
out
sub
mov
mov
arpl
cmp
mov
mov
shl
mov
mov
cld
imul
ret
jecxz
or
sbb
insb
inc
jl
dec
pop
xchg
lods
xchg
in
cld
test
fcoml
sub
cmp
or
sbb
insb
inc
jl
dec
pop
xchg
lods
xchg
in
cld
test
fcoml
sub
cmp
or
sbb
insb
inc
jl
dec
pop
xchg
lods
xchg
in
ret
enter
sub
cmp
or
sbb
insb
inc
jl
dec
out
imul
orl
sbb
in
sbb
jne
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
mov
mov
test
pushf
xchg
xor
and
adc
add
je
loope
push
inc
inc
mov
mov
test
hlt
loopne
rcl
rol
xor
inc
adc
add
je
fs
push
inc
inc
mov
mov
test
hlt
loopne
rcl
rol
pushf
add
jo
add
xor
or
sub
sar
sti
jmp
pop
cmp
dec
sar
or
inc
pop
cmp
pop
pop
xchg
and
bnd
lock
sbb
sub
adc
pusha
mov
add
adc
cli
arpl
call
sbb
fildl
aam
stc
jno
jmp
shrl
xchg
push
pop
xchg
pop
sarb
out
lods
dec
icebp
jmp
push
and
pusha
fwait
test
lret
leave
jecxz
and
jnp
cmc
shl
rorl
enter
jmp
les
fs
scas
stos
inc
leave
mov
pop
pop
stos
bnd
fildl
shlb
inc
gs
add
add
xchg
inc
inc
inc
jae
mov
test
hlt
loopne
rcl
rol
xor
and
adc
add
je
fs
push
inc
sub
std
in
xchg
cwtl
in
lcall
arpl
notb
xor
repz
shl
mov
test
inc
dec
inc
push
insl
jne
imul
sub
std
mov
loope
hlt
loopne
rcl
rol
xor
and
adc
add
je
fs
push
inc
inc
mov
mov
test
hlt
loopne
rcl
rol
xor
and
adc
add
je
fs
push
inc
inc
mov
shr
es
and
adc
stos
pop
add
lea
pop
xchg
insb
and
insb
pop
ja
dec
mov
jbe
pop
sbb
xor
testb
movsb
adc
roll
scas
andnps
stos
leave
adc
insl
cmpb
jo
lcall
scas
enter
adc
xor
leave
mov
sub
mov
xor
adc
jne
int3
clc
ret
fisubl
std
fwait
bound
mov
sbb
cmp
mov
adc
xor
loope
sti
lock
nop
outsl
fisttpl
mov
insl
out
scas
jne
movsl
inc
and
addr16
sub
repnz
xor
mov
adc
adc
sub
daa
cmpsb
test
ret
leave
inc
sub
push
sbb
mov
xchg
scas
or
dec
cltd
imul
mov
jb
stos
aad
mov
test
fdivr
int
addl
fcompl
sub
jbe
cwtl
movsb
insb
popl
sbb
sub
mov
mov
xor
and
cmp
xchg
jae
mov
push
sbb
mov
ljmp
dec
and
dec
addr16
pop
je
psrlq
loopne
lea
mov
test
xor
sbb
jmp
cmc
mov
popa
clc
mov
rcrb
cmc
push
lock
sbb
mov
mov
stos
mov
push
mov
xor
lahf
stos
pop
cmpl
out
cmp
dec
insb
push
rorb
lock
insl
sub
out
jecxz
stc
pop
cmp
inc
mov
dec
cmp
icebp
or
inc
sub
inc
and
in
repnz
and
xchg
out
mov
mov
push
loope
loopne
paddsw
jge
mov
fistpl
inc
cs
pop
sub
or
pop
int3
stc
mov
cmp
icebp
add
xor
xor
sti
lahf
xlat
jge
inc
loop
fcoms
mov
imul
roll
pop
sarl
cli
jne
pop
roll
cld
dec
enter
cli
push
or
repz
subb
sbb
sub
push
fisubrs
add
out
pop
popa
jle
jns
rorb
cltd
sub
jp
pop
mov
sub
sbb
mov
xlat
xor
jb
sub
sub
push
mov
sbb
stos
lahf
xchg
hlt
fs
add
fsubs
sbb
pop
mov
xchg
xchg
mov
xchg
pop
pushf
jmp
subl
push
push
nop
cmp
lret
and
push
or
out
dec
enter
ljmp
outsb
xchg
dec
mov
xchg
repz
fldcw
sbb
gs
mov
sub
and
out
inc
arpl
push
cmp
push
movl
adc
incl
push
push
fists
push
movsl
sbb
mov
mov
push
testl
aas
jnp
mov
jns
mov
gs
in
dec
dec
add
xchg
enter
cld
outsb
sbbb
pop
sub
or
arpl
mov
imul
push
shll
ja
dec
xchg
test
mov
js
lret
mov
inc
xchg
cld
mov
loope
push
popa
imulb
out
pop
ret
jno
ss
loope
dec
add
and
push
popf
lret
push
inc
scas
cmc
adc
les
or
push
sar
clc
into
outsl
movsl
jmp
cmp
xor
mov
icebp
daa
xchg
mov
dec
mov
pop
test
adc
cmp
loope
aas
mov
pusha
push
out
imul
jbe
out
dec
sbb
int3
add
or
add
pusha
mov
arpl
leave
lods
cli
dec
and
je
xor
lret
xor
mov
lret
clc
jp
out
clc
negb
cmp
out
and
ss
pop
add
outsl
icebp
lods
test
pop
sub
dec
mov
push
in
movsb
xor
xor
adc
or
mov
or
or
loopne
sbbb
dec
outsb
dec
lret
or
mov
sub
into
ds
sub
mov
fisttpl
pop
mov
dec
sbb
cwtl
mov
push
push
cmp
popf
dec
xor
and
cmp
andl
and
je
jb
push
xchg
out
cmp
xor
roll
js
jbe
mov
dec
mov
add
clc
jno
rcrb
dec
fisttpll
scas
mov
pop
xchg
mov
inc
push
adc
inc
jbe
std
mov
in
insl
or
mov
movsl
mov
std
jnp
mov
adc
aaa
and
stos
jbe
cs
pop
imul
dec
stos
cmp
lahf
loope
add
push
pop
addr16
sahf
gs
mov
sahf
pushf
or
test
mov
subb
jle
cmp
lret
fs
bnd
mov
inc
repnz
mov
inc
shrb
bound
lods
rclb
adc
sub
inc
or
fwait
outsb
clc
imul
jnp
xchg
pop
shll
addl
cwtl
push
fsubl
test
jae
sub
push
cs
mov
daa
and
push
mov
idivb
repz
add
or
out
mov
xchg
add
xchg
add
call
mov
testb
inc
jle
aaa
mov
dec
jne
es
vpsrld
dec
sbb
ss
popf
mov
subl
insb
std
insl
adc
adc
popf
inc
mov
insb
mov
mov
int3
or
shlb
vmwrite
cmp
xchg
mov
in
push
xchg
out
dec
popa
inc
mov
dec
cmp
push
dec
mov
insl
int
mov
test
insl
xor
add
xchg
push
loop
xchg
int3
daa
sub
leave
xchg
xor
mov
int3
int
pop
push
aam
sbb
mov
xchg
or
dec
pop
rcrb
mov
mov
fsubrl
dec
xor
outsl
push
cmp
fcmove
mov
xor
fcoms
fisubrs
sbb
out
sbb
cmc
pop
xlat
lds
xchg
movsl
imul
mov
or
test
rorl
push
test
out
pop
mov
call
mov
lds
in
inc
cmc
inc
adc
das
je
dec
iret
cld
stc
jg
xor
out
sub
inc
roll
inc
jne
movsb
pop
cmp
jmp
lahf
xor
xor
popf
adc
lea
pop
mov
fisttps
xchg
sbb
enter
dec
movsb
xchg
and
insb
xchg
jnp
jns
rcll
stos
daa
adc
arpl
andb
fstl
jg
jo
clc
cmc
stos
push
sbb
jp
daa
push
jb
or
daa
movsl
sbb
pusha
pop
pop
push
inc
icebp
ret
xchg
in
lea
xchg
mov
mov
call
stc
push
sbb
pop
or
xchg
or
mov
fstps
sub
pop
scas
int3
xchg
cld
sub
adc
or
inc
mov
setno
sbb
bound
and
push
and
out
mov
dec
pusha
andb
mov
dec
mov
mov
sbb
xor
dec
jle
mov
dec
daa
sahf
das
lret
xchg
cmp
jnp
jbe
fisttps
pop
rclb
jmp
jge
scas
imul
or
call
lods
shlb
shlb
jmp
ret
mov
in
js
es
fadds
icebp
push
mov
cmpl
dec
pusha
sub
sbb
repz
mov
jmp
sub
fsubs
inc
mov
add
repz
pop
adc
cwtl
or
dec
or
jo
jecxz
add
xor
inc
pushf
inc
xchg
lahf
mov
call
fs
inc
sbb
test
bound
or
push
xor
dec
les
aam
jne
sub
sub
lcall
fbld
lcall
pop
sbb
sbb
xlat
xor
adc
jle
test
push
push
test
int3
mov
dec
popa
negl
dec
jmp
xchg
sbb
cmp
adc
mov
cmpsb
leave
jg
mov
jge
clc
sub
sbb
or
xorl
sub
pop
push
mov
inc
rolb
pop
test
jl
adc
gs
aaa
and
xor
xchg
xchg
sub
xchg
aad
test
xchg
push
inc
push
cwtl
lods
push
xchg
ficoms
mov
movsb
lahf
xor
sub
mov
clc
stos
sbbb
adc
xor
in
xchg
fwait
adc
xchg
push
xor
ss
loope
sub
jge
sbb
jbe
lret
push
mov
add
js
jl
inc
jmp
nop
mov
iret
cwtl
push
test
mov
push
dec
pop
sub
dec
or
jo
pop
leave
loopne
negb
js
cmp
inc
rcll
push
ds
jbe
cmp
xchg
xchg
inc
fs
xchg
loop
pop
jno
int3
mov
fistpl
pusha
aam
or
roll
jmp
push
loopne
mov
fs
mov
fcomps
sahf
insl
and
and
jge
mov
enter
test
pop
dec
mov
loope
jl
mov
or
push
idivl
mov
push
js
call
dec
push
push
xchg
adc
stos
sub
mov
lock
aad
movsl
and
jb
insb
scas
push
cli
push
stos
dec
popa
or
dec
inc
loop
aas
sub
adc
loopne
inc
mov
clc
lahf
pop
pop
stos
fdivrs
mov
clc
push
fwait
jle
loope
loope
cmp
in
pop
pop
subb
xor
mov
inc
push
mov
sub
sti
mov
mov
jnp
ljmp
pop
cmp
mov
movsl
sahf
mov
fadd
jl
sbb
loop
clc
inc
data16
cmp
call
lahf
sbb
popf
mov
add
fucomi
ds
mov
pop
ffreep
push
sahf
ja
dec
sub
mov
push
mov
xor
aaa
sub
xchg
jbe
xor
leave
lds
or
loop
push
xchg
and
and
cmc
push
dec
imul
call
adc
fstps
xor
and
and
inc
rcrl
icebp
pushf
je
ja
repz
lea
add
mov
push
push
jbe
movsb
lret
xchg
dec
mov
in
jecxz
int
call
fucomi
xchg
inc
js
jle
xchg
sub
loop
js
dec
pop
adc
bound
movsb
pop
sbb
inc
clc
mov
add
gs
lret
shll
iret
jp
in
jne
sbb
js
out
cmpsb
imul
mov
push
cmp
aam
inc
test
repnz
ret
sbb
nop
cmp
jae
or
out
xchg
push
pop
outsb
scas
out
clc
mov
clc
sbb
add
pop
xchg
aam
push
xchg
aas
push
cmp
mov
jo
and
xor
xor
or
mov
cwtl
popa
xchg
mov
cltd
push
mov
movsb
into
test
cmp
cmpl
jge
jns
sub
outsb
push
leave
pop
lahf
stos
hlt
pop
pop
fwait
mov
mov
sub
jp
jmp
fs
les
shld
repnz
sbb
vpmacsdql
xor
movsl
jno
jmp
test
roll
cmpsl
mov
scas
neg
or
arpl
lea
rorb
popf
cmp
leave
cmp
and
jnp
xor
push
fcmovnb
cmp
push
mov
sub
or
add
sub
pop
cmpsl
fidivs
sub
mov
or
xchg
lret
jecxz
test
xchg
xchg
jg
clc
push
adcl
jl
and
loope
lcall
fsubrl
or
ficoml
dec
popa
lea
push
push
fsub
and
in
mov
push
les
xchg
fdivr
jge
pusha
xlat
pusha
or
pop
shll
sti
dec
push
push
andl
mov
push
jo
xchg
pop
mull
jecxz
loopne
xchg
clc
push
cvttps2pi
fstpt
leave
in
out
pop
sbb
aaa
inc
nop
jo
sub
cmp
clc
fsubs
dec
popa
inc
insb
push
repnz
cmp
and
push
jg
data16
sarl
xor
hlt
cs
and
fnstsw
sbb
mov
fildl
pop
ljmp
clc
push
jo
sbb
and
lcall
sbb
inc
lock
lods
enter
adc
jbe
rol
lea
xor
sub
jb
mov
xchg
mov
jno
jecxz
mov
or
cli
push
mull
add
add
int3
idiv
nop
and
out
jle
out
xor
ret
and
out
pop
sahf
faddl
adc
pop
add
das
into
ret
mov
pop
sub
fnsave
dec
sbb
pop
or
out
sahf
xor
pop
aaa
dec
jl
pop
pop
cmp
xor
sub
mov
cmp
xchg
sub
loope
movsl
movsb
aas
xchg
fsubrs
mov
cli
sbb
fisubl
xchg
jno
aad
inc
in
jl
fstpt
inc
mov
orb
in
fld
outsb
test
je
adc
push
pop
adc
cwtl
pop
pop
mov
imul
sub
push
push
aas
mov
push
int
add
mov
add
je
data16
jae
cli
imul
int
test
mov
xchg
mov
stc
mov
jno
in
mov
fists
scas
ror
inc
mov
pop
cmp
lock
cld
push
cmp
jecxz
cmp
hlt
adc
ds
stos
xor
xchg
insl
dec
pop
out
out
push
mov
add
scas
sub
push
daa
into
mov
dec
mov
cwtl
rcrl
mov
dec
add
xchg
frstor
icebp
mov
sub
inc
push
fmul
je
repnz
pop
inc
add
xor
xor
cwtl
mov
lahf
ja
push
dec
mov
int3
or
in
or
cmp
movsl
pop
fstps
insb
mov
mov
repz
xor
xor
insb
jbe
sbb
mov
and
pop
nop
lret
sub
cmp
cmpsb
sbb
pop
mov
mov
lcall
jno
xchg
xchg
adc
adc
push
stos
in
sti
or
leave
mov
out
ret
adc
dec
adc
pop
aaa
shr
je
cli
jne
pop
ss
repnz
xchg
insl
movsl
fisubrs
inc
cmpsb
cmp
lock
lret
cli
push
push
fmull
push
aad
in
aas
ja
mov
push
fcomi
xor
pop
iret
pop
aas
mov
cltd
in
inc
pusha
outsl
jg
lods
sub
mov
es
mov
je
and
xor
jbe
sbb
dec
rcrb
imul
rcrb
mov
int3
int
les
pushf
sbb
inc
sti
movsl
xor
adc
xor
sub
mov
mov
jo
dec
cmpsl
mov
inc
sti
sub
cld
or
xor
sub
or
sbb
add
ljmp
rcrl
xchg
and
mov
lret
insb
inc
xchg
out
mov
dec
sahf
aad
and
imul
jbe
fbld
mov
aaa
repnz
xchg
dec
or
sbb
jg
ror
outsb
and
add
dec
xchg
mov
push
mov
loope
inc
sbb
sbb
jnp
mov
push
xchg
ss
test
xor
popf
shr
cs
insl
cmp
out
js
ja
repnz
jmp
xchg
mov
inc
or
xchg
lods
mov
or
icebp
jb
dec
ss
add
sti
fidivrs
test
sbbb
cld
sub
pop
cmp
push
lahf
mov
ret
sbb
stos
sar
les
imul
mov
jmp
sub
out
jecxz
pop
cmpsl
or
jns
sahf
dec
xor
sarl
dec
and
inc
xchg
test
incb
sub
dec
adc
inc
lods
enter
sub
mov
imul
dec
test
rorl
dec
and
mov
imul
xor
leavew
out
in
mov
idivb
sub
xchg
loopne
mov
add
punpcklwd
or
inc
loop
mov
imul
andb
sbb
sub
aad
mov
out
mov
icebp
cltd
jbe
xor
std
jmp
jnp
sub
dec
adc
pop
std
pop
xor
int
icebp
or
cmp
mov
rcrl
pop
dec
or
xlat
or
xor
std
xchg
add
mov
leave
aam
ss
cmp
and
inc
arpl
incb
insl
add
fwait
xchg
and
aam
rorl
inc
jg
push
decl
mov
arpl
fimull
clc
dec
jns
dec
stos
ds
loop
push
jns
mov
xor
xchg
loope
popf
xchg
mov
shrb
adc
sbb
nop
inc
mov
rcrl
ret
out
mov
mov
mov
fchs
mov
roll
push
iret
pop
xor
sbb
xchg
in
test
inc
les
ljmp
jno
aas
push
jl
scas
scas
dec
gs
and
mov
hlt
sbb
stos
cmpsb
lds
nop
bound
xchg
add
cs
rcrl
jnp
xchg
aad
jl
mov
or
test
in
mov
inc
int
icebp
push
xchg
fsub
out
add
mov
xchg
add
in
cmp
xchg
jns
leave
jecxz
aad
in
roll
movsl
sbb
sub
cli
into
cmp
jg
enter
lods
xchg
ret
stos
nop
xor
jae
ljmp
repnz
xchg
cmpsl
sbb
clc
pop
lret
adc
test
mov
scas
pop
in
fsts
fwait
leave
pop
pop
sbb
addb
clc
idivb
xor
subl
mov
ret
jmp
movsl
mov
xlat
jo
cwtl
inc
xchg
repz
xor
leave
clc
adc
or
mov
jmp
mov
mov
push
add
mov
sbb
sahf
cmp
fisubs
cmp
adc
out
sbb
sti
pop
cmp
ljmp
ficompl
stos
adc
and
cmp
ret
int3
add
jg
xlat
loop
jmp
imul
fildl
mov
fistps
test
mov
sbbl
loope
adc
rcll
je
cmp
cwtl
pop
cld
hlt
push
lret
arpl
ds
inc
mov
sarl
call
mov
aas
lahf
aam
add
add
xchg
cmp
add
push
cmp
inc
rcrb
pop
mov
xor
scas
mov
inc
dec
add
dec
cmpsl
inc
inc
idivl
fistpl
pop
pop
pop
incl
shlb
push
xchg
icebp
cltd
scas
jmp
or
push
inc
orb
jns
lahf
sbb
or
add
pop
xor
in
or
and
xchg
mov
mov
sub
and
push
sbb
inc
pop
lods
dec
push
jl
inc
push
mov
sub
loopne
jno
mov
into
push
fistpl
mov
cwtl
xlat
mov
adcl
js
outsb
fistpl
and
addr16
dec
sub
mov
sbb
clc
dec
jne
test
xor
lods
or
loopne
fmul
int
lods
cwtl
mov
or
cmp
in
and
pop
outsb
aad
xor
cmp
xchg
addr16
enter
push
je
divb
xlat
and
pusha
sahf
and
jo
jg
into
push
mov
xchg
in
dec
ljmp
out
loop
push
add
inc
jae
lods
ljmp
repz
out
cmpsb
mov
cmp
adc
subl
jg
push
out
inc
push
adc
pusha
lods
cs
and
repnz
insb
aam
xchg
sub
pop
enter
mov
mov
lds
into
ret
push
inc
and
jge
outsb
pop
dec
lea
mov
lds
iret
test
adc
xchg
movsb
stos
arpl
jp
xor
dec
jbe
jbe
sub
cwtl
data16
pop
pop
or
pop
stos
push
mov
clc
inc
mov
jno
arpl
add
mov
outsl
and
jmp
xor
adc
in
fidivrl
sub
mov
rcrb
leave
mov
add
mov
add
iret
dec
mov
stc
mov
mov
test
push
add
hlt
loopne
rcl
rol
xor
and
adc
add
je
fs
push
inc
inc
mov
mov
test
hlt
loopne
rcl
rol
xor
and
adc
add
je
fs
push
inc
inc
mov
mov
test
hlt
loope
rcl
rol
mov
and
adc
add
je
fs
push
inc
inc
mov
mov
test
hlt
loopne
push
aam
iret
xor
mov
cld
call
mov
inc
or
adc
add
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
inc
fcoms
addr16
ja
pop
int3
gs
jmp
test
pop
aaa
dec
out
imull
sbb
sub
fcoms
or
ja
pop
cwtl
pop
mov
mov
xlat
dec
xchg
push
cmpsl
cmp
enter
call
cmp
hlt
adc
or
insb
repz
jmp
sub
sbb
pop
pop
dec
std
mov
in
mov
pop
xchg
shlb
shrb
pop
sub
ja
mov
mov
bound
imul
dec
aam
int
push
adc
popa
test
iret
push
add
mov
xlat
mov
jge
test
sbb
cmp
mov
fwait
daa
aas
leave
cmp
cld
clc
cltd
pop
cwtl
fcoms
clc
imul
arpl
xchg
pop
cmpsb
mov
mov
cs
inc
mov
dec
out
mov
ret
dec
pop
cmp
xor
mov
fdivs
sub
outsb
jl
push
cmpsl
sub
add
addr16
ja
jecxz
outsl
mov
mov
dec
dec
xchg
js
push
xchg
cmp
sbb
mov
jns
push
fnsave
fadd
xor
and
jne
jno
mov
xor
outsb
std
jb
rcl
bound
out
popl
ja
addr16
dec
testb
cmp
hlt
pop
mov
mov
xlat
dec
out
imull
sbb
sub
push
enter
call
daa
mov
xlat
dec
out
imull
sbb
sub
icebp
frstor
pop
lcall
scas
inc
and
test
fsubrl
sbb
jae
jle
adc
test
daa
mov
call
ds
jmp
xor
or
cs
inc
arpl
push
cmp
fimull
dec
pop
fbstp
pop
rcll
stc
fnstenv
xlat
arpl
push
xchg
dec
pop
inc
cwtl
pop
inc
cmp
popa
mov
jno
nop
mov
adc
call
jmp
inc
neg
or
mov
jns
lahf
fists
dec
jns
movsb
ret
xchg
mov
pushf
aad
pop
mov
xchg
push
into
in
lea
adc
ss
jns
adc
rorb
div
cwtl
ss
sub
jno
bound
test
jmp
idiv
pop
mov
adc
pop
xchg
mov
mov
jl
cmp
lcall
sti
cmp
dec
mov
sbb
inc
pop
fistps
mov
je
xchg
fucomp
int3
js
xor
adc
mov
insl
push
pushl
jmp
std
cwtl
pushf
in
push
sahf
pop
xchg
jge
adc
lret
rolb
int
in
inc
in
pop
sub
aad
jno
scas
sbb
testb
loop
mov
psubq
aad
push
sub
daa
add
in
inc
cmpsb
mov
dec
mov
js
lret
clc
dec
outsb
inc
out
movsl
mov
jae
out
push
fwait
jp
pusha
xchg
js
aam
dec
hlt
aad
jp
test
dec
sbb
adc
or
mov
lahf
push
pop
cmp
mov
mov
call
call
sar
stos
cmp
movsl
into
inc
inc
and
push
clc
dec
xor
push
pop
movsl
cltd
xor
notb
pushf
jnp
cmpsl
stc
out
inc
test
pop
jmp
cmp
dec
mov
les
cmc
adc
loope
sbb
in
dec
lret
mov
lods
mov
cltd
pusha
mov
into
push
cmp
out
sub
fdivrs
lds
les
jbe
xor
push
mov
sbb
push
and
sbb
mov
or
lahf
bnd
popa
mov
inc
nop
jg
rol
call
sarl
shlb
xchg
mov
xor
push
mov
insb
inc
xor
sub
mov
or
pusha
pop
mov
mov
lods
push
ljmp
lcall
into
aas
fidivrs
mov
cmpsb
adc
mov
sahf
test
mov
aas
add
idiv
es
scas
cmpsb
xor
push
lds
test
pop
xchg
bound
dec
mov
mov
sub
outsb
mov
loopne
adc
js
fs
test
je
xor
sbb
mov
jge
and
jae
push
in
in
inc
add
outsl
adc
cmp
mov
pop
cld
pop
hlt
aad
loop
and
inc
xchg
xchg
sub
cmp
adc
repnz
es
xchg
rol
pop
imul
in
loop
fdivl
mov
inc
notl
movsl
push
cmp
mov
lret
outsb
push
mov
inc
fidivl
dec
addl
mov
ret
jg
mov
pop
dec
out
mov
inc
jne
test
sbb
add
loop
dec
inc
cmp
pusha
sbbb
mov
pop
pop
jle
subl
mov
adc
cwtl
mov
and
cld
jg
add
sbb
ret
dec
aam
loope
inc
lcall
fimull
ljmp
xor
push
pop
in
je
retw
fidivrl
and
cmp
and
push
rcll
scas
dec
jmp
jg
sarb
aas
iret
popa
pusha
insl
mov
shl
shlb
clc
cs
sbb
jmp
icebp
cmp
xchg
push
and
lods
fsubl
ljmp
xchg
fsubl
insb
jecxz
inc
pop
sbb
sub
sbb
loop
add
es
adc
add
stc
insb
into
mov
ljmp
cltd
pop
jmp
pusha
push
movsl
xor
pop
pop
daa
xchg
push
dec
mov
cltd
shlb
ljmp
out
mov
fldt
out
push
repz
imul
cmp
ljmp
ret
test
pop
aad
xchg
pop
xor
or
ficoms
or
in
add
rcr
push
test
andl
xor
jbe
lahf
mov
cmp
xchg
lahf
xchg
aas
stos
adc
adc
mov
mov
inc
xor
jne
push
movsl
xorb
ss
inc
xlat
mov
push
ljmp
and
xchg
das
addr16
lods
cmpsl
jmp
sbb
call
bound
cmpsb
decl
sub
sub
push
js
jbe
adc
cmp
std
out
lock
mov
mov
fnsave
mov
aad
dec
push
sarl
out
add
lods
int
push
rol
fwait
mov
jns
inc
loop
into
pop
and
mov
lret
cli
or
dec
mov
mov
dec
jne
lock
dec
fcompl
sbb
jne
adc
je
xchg
in
push
push
cmp
cltd
bnd
aam
pop
mov
pop
mov
sbb
xor
popa
jnp
negl
ficoms
add
and
inc
pushf
imul
loop
push
ljmp
jne
repz
sub
fistpl
xchg
lcall
gs
or
inc
daa
in
jp
inc
pop
jmp
push
pop
cmp
sub
stc
outsb
add
push
and
ja
rcrb
jbe
loopne
mov
call
inc
mov
cld
in
jne
lret
sub
sahf
cmpsb
std
jne
pop
and
push
clc
mov
cmpsb
push
arpl
pop
jmp
sub
lock
out
lods
dec
dec
lods
pushf
lret
outsb
pop
or
sub
add
out
pop
cmp
mov
cltd
addr16
mov
pop
clc
lock
and
rolb
or
cmp
in
or
iret
xchg
pop
jmp
jo
add
add
jle
dec
jns
mov
xor
lret
int3
aas
add
subb
lea
add
or
les
pop
adc
fcmovnbe
push
aad
or
mov
inc
dec
les
push
lea
stos
push
pop
and
mov
dec
test
or
data16
push
stc
adc
adc
mov
imul
cmc
aaa
in
xchg
add
push
cs
filds
outsl
mov
lock
fidivrl
xchg
bound
xor
sub
aas
pop
jns
or
xor
std
orl
outsl
movsb
xchg
movsb
fmuls
adc
cmp
stos
lea
and
cmp
lcall
and
cmp
cmp
adc
filds
out
and
insl
sub
ret
pop
hlt
into
loope
add
jle
adc
xchg
cmpsb
and
lock
in
pop
aaa
out
dec
rorl
xchg
inc
cmp
xchg
loope
ret
icebp
ljmp
mov
jb
movsb
test
fcmovnu
pop
daa
push
pop
test
jl
icebp
incl
push
dec
pusha
mov
sub
dec
xchg
bound
mov
negl
mov
jns
jge
adc
cld
sti
mov
cmp
adc
lods
dec
scas
cmpsl
and
arpl
mov
cmp
std
xor
push
cld
jns
jae
push
ret
in
outsl
rol
stos
xlat
cmp
sbb
out
mov
out
push
shrb
ljmp
jle
adc
cli
in
xchg
ss
and
pop
sub
imul
jmp
fbld
rcrl
mov
add
push
push
jnp
movsl
lahf
aas
sti
xchg
arpl
jmp
and
sub
movsl
mov
out
inc
sub
out
lahf
mov
call
push
int
scas
pop
mov
inc
jg
aas
outsl
lods
outsb
add
dec
pop
add
jne
mov
lock
les
inc
rcrl
mov
mov
adc
dec
sub
mov
sbb
xor
and
stos
scas
pop
int
lret
adc
inc
xchg
push
xchg
inc
lea
push
and
pop
in
outsb
sbb
xchg
js
mov
sar
jl
mov
je
adc
in
xchg
inc
inc
aas
lcall
add
stc
push
popf
pop
imul
sub
push
mov
inc
hlt
inc
pop
call
fdivl
or
in
jne
mov
lcall
aam
test
gs
sub
sbb
arpl
pop
shlb
jmp
aad
les
movsl
mov
mov
loope
lret
jl
cmp
jmp
inc
mov
imul
rcrb
or
xor
dec
mov
mov
cmp
mov
adc
mov
inc
push
push
push
sub
mov
mov
outsb
cli
or
jno
mov
push
mov
sub
jg
sbb
sbb
jno
shl
inc
mov
popa
sub
push
pop
mov
ljmp
aam
or
cwtl
cmpsb
xchg
test
fxch
sub
or
add
or
mov
cld
xor
mov
shll
cmc
iret
or
or
xor
xor
mov
outsb
add
mov
dec
adc
ficomps
xor
pop
xchg
pop
cmp
lods
and
loop
push
xor
push
mov
fidivl
ja
repz
fstl
sbb
inc
jecxz
movsb
add
loopne
mov
outsb
cmc
mov
xor
jnp
imul
push
adc
sub
ljmp
xchg
roll
stos
ljmp
and
push
xor
pop
xchg
ss
pop
push
jno
mov
mov
imull
xor
test
daa
fdivrl
int
push
shrb
test
test
sub
scas
bound
test
adc
idivb
jg
inc
je
xchg
subl
sahf
xor
xor
inc
sub
sub
sbb
cs
push
mov
adc
pop
xchg
pop
test
negb
cmp
aas
pusha
aas
xor
inc
cmp
mov
sub
movsb
mov
jecxz
int
jl
cli
loopne
in
ret
inc
mov
cli
pushf
dec
out
jmp
stos
dec
or
push
jno
movsb
inc
stc
movsb
adc
xlat
or
cld
jae
pop
rclb
js
cmp
push
in
mov
inc
cmp
mov
es
fmull
es
add
lds
scas
sbbl
cltd
lods
lahf
xor
mov
test
sub
std
xor
xor
sub
in
pop
sub
and
xor
mov
cmovno
mov
dec
addr16
push
out
mov
mov
xchg
mov
cli
jl
xchg
ret
pusha
or
cmc
daa
cmpsb
mov
ja
push
iret
icebp
or
mov
es
mov
sbb
push
popf
cmp
cmc
xchg
push
sub
shl
ds
xchg
pop
sub
mov
mov
or
js
out
pop
add
xchg
out
inc
push
xor
mov
imul
and
popa
mov
mov
mov
and
add
stos
out
dec
xchg
test
adc
repz
leave
fbld
or
outsb
arpl
jmp
sbb
or
mov
movsl
pop
adc
fisubs
ds
xor
and
pop
xrelease
popl
insl
jb
setb
xor
dec
int3
add
lock
in
xchg
push
repnz
adc
fwait
pop
xchg
mov
and
push
lds
xchg
call
insl
test
out
push
jae
adc
jl
out
sbb
and
loop
jmp
enter
dec
mov
insb
jl
push
fs
in
mov
mov
xor
mov
loopne
mov
into
scas
jg
bnd
mov
mulb
mov
js
jae
mov
jo
mov
lea
cltd
push
add
add
jbe
in
lods
mov
int
pop
adc
and
add
cmp
cltd
and
mov
scas
cs
clc
pop
add
xchg
add
xchg
sti
lock
mov
jo
cmpsb
dec
mov
sbb
clc
sbb
data16
mov
lret
adc
cmpl
push
mov
das
mov
data16
xor
ss
push
inc
adc
les
mov
dec
mov
lretw
mov
enter
adc
out
insl
das
push
test
imul
inc
nop
call
std
cmc
or
or
mov
dec
add
divl
insl
jp
lcall
or
dec
and
repnz
jecxz
aad
mov
ret
rolb
add
mov
in
stos
jae
lret
imul
sub
dec
cli
popf
dec
inc
out
imul
ror
jo
out
cmpsl
mov
data16
shl
push
xorb
stc
sub
inc
sbb
jp
pop
push
dec
push
adc
dec
push
pop
pop
scas
add
mov
paddq
jmp
aam
imul
sti
mov
pop
mov
inc
and
jo
cwtl
cmp
movsb
mov
pop
iret
push
xor
mov
inc
add
xlat
in
or
xchg
or
outsb
and
cmp
and
out
dec
mov
sub
aaa
scas
mov
or
cmp
cmp
sub
inc
sbb
in
mov
xor
add
mov
nop
adc
movsl
or
push
inc
push
ss
jecxz
adc
jbe
mov
mov
pushf
inc
out
pop
sub
lods
rcrb
or
xchg
inc
push
cwtl
das
or
fnstenv
xchg
mov
pop
rolb
mov
fidivrl
fstl
adc
push
sbb
adc
jo
xchg
lret
test
icebp
push
scas
sbb
pusha
das
and
mov
push
add
mov
add
lcall
sub
mov
repnz
dec
sub
test
push
dec
into
aas
push
ds
repnz
and
mov
mov
cmpsl
inc
cs
insl
mov
es
xchg
push
fcomi
mov
adc
pushf
shll
adc
push
testb
and
mov
int
sub
sbb
in
sub
push
fwait
push
inc
fnstenv
add
sub
loopne
mov
fildll
jecxz
add
pushf
push
idivb
in
mov
pop
movsb
mov
push
add
cmp
adc
xor
mov
push
loop
pop
inc
xor
cmc
int
sbb
push
mov
js
repnz
add
sti
mov
xchg
inc
out
flds
leave
icebp
adc
xchg
or
xlat
inc
push
ret
les
daa
push
sub
inc
ljmp
mov
mov
sub
or
pop
leave
pop
imul
pop
ret
mov
jg
mov
inc
out
cs
into
and
ss
out
push
mov
lea
pop
movsl
push
stc
sbb
repnz
popf
push
cmp
mov
arpl
data16
negl
xchg
sbb
in
or
pop
pop
mov
addr16
push
mov
jecxz
aam
mov
cli
sub
or
lods
arpl
data16
mov
mov
fcomps
push
dec
out
inc
dec
pop
icebp
int3
jnp
push
pop
je
imul
mov
mov
mov
push
add
jmp
cs
iret
das
stos
sub
inc
popf
mov
and
not
fistpll
loope
sarb
and
cmpsb
inc
imul
cmpl
scas
add
push
in
push
xor
pop
jno
enter
mov
add
pop
add
je
popf
mov
xchg
and
inc
adc
sub
jp
xor
pop
add
fisubl
and
xor
mov
cmp
imull
sbb
mov
and
jae
sbb
dec
std
stos
aaa
pop
in
fidivl
ret
nop
insb
imul
cmpsl
inc
nop
pop
cmp
cmpb
cmp
fxtract
int3
inc
fildll
adc
xchg
jbe
or
mov
js
dec
in
shlb
dec
leave
inc
stos
stos
sbb
int3
add
cwtl
pop
dec
and
xchg
outsl
and
sahf
jl
xchg
and
dec
mov
pop
shll
insb
jl
test
call
xor
pop
lcall
adcl
mov
add
mul
int3
mov
mov
cld
cli
aam
adc
or
arpl
push
scas
mov
pop
imull
and
and
dec
xor
aam
cmpsb
cltd
pop
ljmp
hlt
test
push
fistps
lcall
std
adc
inc
jg
test
mov
adcl
xchg
dec
cli
scas
or
push
lods
add
nop
or
lods
movsb
lds
in
out
xchg
in
ror
repz
sbb
adc
adc
idiv
sub
pop
inc
fists
cltd
nop
add
sub
push
test
push
cmp
pusha
add
cwtl
das
mov
aad
cmp
dec
pop
into
dec
lret
inc
jns
loopne
inc
pop
ljmp
jg
fs
mov
cs
sub
popa
mov
jge
cmpsl
push
loop
or
idivb
mov
jns
and
push
lock
or
push
mov
sbbb
ror
push
repz
cs
sarl
stos
hlt
pop
jno
fmuls
movsl
popa
lea
mov
in
push
dec
mov
xchg
ja
mov
sub
popf
mov
shlb
bnd
adc
lahf
test
lea
fs
mov
pop
jle
fs
mov
lods
cmc
xorl
sti
xor
add
lods
inc
jp
fsts
jle
xchg
add
jmp
jge
dec
fcompl
xor
sbb
or
or
cmp
mov
cmp
adc
mov
mov
insb
add
fwait
push
enter
push
mov
loopne
jle
cmpsl
mov
cmp
xor
psrad
jbe
adc
dec
push
push
pop
dec
and
cli
aam
out
dec
lock
or
fcmove
jnp
lahf
sbb
push
das
clc
or
lahf
jl
adc
scas
and
xor
addb
aam
and
lahf
sub
mov
idivl
sbb
mov
push
adc
jl
outsb
insl
cmp
aam
jecxz
adc
orl
mov
fsts
les
aas
jp
in
sub
mov
js
xchg
outsl
mov
scas
mov
imul
repnz
out
popa
and
push
or
jge
xchg
sub
movsb
shlb
fcom
leave
cmc
ja
adcl
cmp
push
call
jb
mov
add
cli
xor
clc
dec
aas
adc
aaa
scas
inc
in
lcall
dec
mov
notb
es
in
aad
inc
sbb
stos
lret
lcall
dec
outsb
pop
fsubs
sub
mov
mov
jno
xor
ret
and
add
scas
bnd
fldcw
rcrb
shrl
dec
sub
ds
addb
pushf
icebp
shll
lea
dec
pop
add
sbb
lcall
mov
xchg
cwtl
aaa
loopne
xchg
decl
mov
mov
fiadds
mov
mov
aam
xchg
repnz
mov
out
and
cmp
xor
mov
mov
add
stc
add
imul
mov
xchg
iret
push
aaa
jmp
or
or
pushf
cltd
jnp
pop
mov
push
mov
push
imul
cmp
out
cmp
hlt
cli
mov
cmp
fnstsw
mov
dec
lret
sub
pop
popf
aam
mov
lock
sub
push
lahf
mov
and
mov
push
ljmp
cld
push
fwait
rclb
push
pop
inc
mov
ret
sbb
mov
dec
xchg
hlt
call
cmp
ljmp
push
lods
pop
movsl
inc
xchg
cmove
pushf
sahf
inc
sbb
insl
sahf
aam
jne
or
xchg
add
js
arpl
or
inc
mov
in
adc
and
push
xchg
test
sbb
iret
call
popa
mov
out
stc
sub
mov
push
mov
outsl
mov
aam
aam
cld
mov
cmp
mov
data16
push
inc
add
repnz
xchg
out
dec
add
mov
jbe
stos
jbe
mov
xchg
adc
xlat
inc
xchg
mulb
xor
push
cltd
adc
push
lahf
cs
inc
mov
jo
stos
mov
push
lahf
rorl
int3
sbb
cmp
js
jl
xchg
pop
adc
clc
aaa
js
bound
sarl
adc
stos
enter
call
daa
mov
xlat
dec
out
imull
sbb
sub
push
enter
call
daa
mov
xlat
dec
out
imull
sbb
sub
addr16
jmp
daa
mov
xlat
dec
pop
js
push
cmpsl
cmp
push
fmuls
enter
in
pop
cwtl
pop
or
cmp
loop
js
pop
lock
pop
negl
dec
xlat
pop
pushf
mov
test
stc
sub
ret
faddl
sub
pop
ret
movsl
repz
push
xor
inc
enter
mov
orl
xor
dec
repz
push
mov
in
inc
call
ficoml
pop
ret
or
or
fsubl
leave
ja
push
int
xlat
push
xor
pusha
sub
jp
ret
or
shlb
pop
fwait
push
dec
or
stos
push
add
mov
pop
pop
out
hlt
dec
dec
js
dec
push
pop
jb
outsb
and
xor
mov
xor
or
rcrl
jl
dec
cmp
sub
dec
mov
lods
mov
mov
jbe
push
int3
mov
xchg
pop
sub
rol
xchg
xchg
dec
jne
inc
jecxz
lods
jmp
leave
aaa
cmp
adc
cmp
pop
dec
fsubs
pop
mov
add
int
js
xchg
mov
jmp
mov
mov
or
and
test
int3
dec
test
fadds
enter
jp
sbb
mov
mov
frstor
popa
cwtl
jne
ja
dec
les
lea
scas
repnz
ret
popf
ret
pop
lods
daa
xchg
add
fimuls
les
mov
lcall
ret
push
sbb
sbb
xor
aam
les
xchg
inc
enter
call
mov
mov
dec
repz
push
xor
inc
enter
call
mov
mov
dec
repz
push
fwait
lds
mov
pop
xlat
rclb
jb
test
push
repz
and
out
dec
fisttpl
pextrw
pushf
dec
push
in
pop
xchg
mov
daa
les
cmp
inc
gs
push
inc
xlat
xor
fwait
pop
loop
jecxz
add
xchg
mov
gs
shrb
xchg
push
fs
pop
cwtl
jecxz
in
arpl
push
or
ds
adc
xor
inc
sbb
push
cmp
mov
and
bound
test
jmp
xor
outsl
push
popa
sbb
mov
cli
push
lock
pop
std
dec
or
insb
mov
sub
pop
stos
mov
adc
push
push
jns
es
mov
sbb
cmpb
lea
push
adc
inc
insl
xchg
outsl
aas
sbb
decb
mov
xchg
loope
add
popa
sub
imul
fxch
mov
mov
pop
xor
mov
into
int
cmpsl
jp
dec
mov
sub
addr16
fucompp
add
mov
out
cmp
pop
call
pop
pop
xor
in
cltd
adc
adc
pop
lcall
negb
xchg
ss
xchg
or
ficoml
mov
int
sbb
jno
push
aam
sub
xor
out
shl
imul
mov
jge
dec
ficoml
int3
adc
ja
cs
mov
lea
sub
ficoms
adc
inc
sbb
add
mov
jg
imul
push
fs
shlb
pop
cmp
xchg
bound
dec
push
push
mov
jp
xor
xchg
dec
xchg
pop
int3
std
lea
or
mov
jmp
cwtl
and
clc
xor
arpl
pop
fdivrs
push
aam
rcll
xor
popw
nop
mov
sub
ljmp
mov
mov
mov
dec
lahf
dec
mov
sub
sahf
lea
idiv
iret
cmpsb
lcall
les
ljmp
fs
adc
mov
xor
call
lods
aad
pop
ficoml
outsl
jge
lcall
jg
test
scas
push
mov
push
jp
pop
out
jno
cmp
imul
loope
xor
aad
out
mov
pop
add
out
add
dec
movsb
adc
mov
das
fnstenv
or
je
aad
sbb
dec
cli
mov
xlat
out
xchg
lock
xor
mov
subl
test
jo
xor
subb
mov
jne
lret
rol
int
inc
pusha
iret
dec
mov
data16
cmp
aam
je
mov
inc
dec
pop
dec
cmc
mov
mov
call
out
int
lahf
or
orl
push
mov
sbb
jp
xor
xor
das
sbb
inc
pop
adc
cmp
out
jmp
jecxz
aad
mov
dec
fidivl
sbb
sbb
mov
adc
divl
imul
inc
mov
xchg
jns
enter
cltd
adc
and
pop
cmc
je
pop
out
or
lret
pop
sub
dec
daa
mov
cmp
les
stos
addl
push
popf
repz
pop
ret
int3
adc
fwait
dec
pop
add
repz
xchg
fisttps
pop
aam
hlt
xor
fmuls
add
cltd
mov
push
mov
hlt
pop
mov
cmp
std
push
push
stos
shl
popf
cld
movsb
imul
xor
loopne
push
mov
popa
mov
fdivs
cmc
push
movsb
push
add
mov
cmp
or
mov
xchg
dec
pop
add
out
shlb
push
xchg
mov
test
cltd
pushf
mov
movsb
imul
test
lods
imul
out
jo
aas
shll
jnp
cmp
mov
or
jmp
mov
mov
mov
nop
pusha
and
test
jbe
daa
and
push
inc
fnstcw
xorb
sti
mov
call
dec
sarl
nop
jns
jo
dec
add
lahf
sbb
aaa
push
mov
sub
xchg
ficomps
or
dec
mov
cwtl
sti
jge
and
lret
mov
mov
cld
rcrl
notb
push
mov
test
push
neg
les
push
stos
movl
sbb
jp
pop
fwait
pop
and
test
xchg
lret
outsl
xorl
ljmp
xor
xor
cmp
lret
std
or
mov
cmp
aaa
push
jmp
sbb
dec
iret
fstpt
dec
outsb
and
subb
int
adc
mov
test
arpl
xorb
scas
jmp
push
pop
inc
notl
fucomi
and
xor
and
loopne
mov
xor
push
repz
rcr
mov
sahf
lret
add
movntq
or
int3
loopne
mov
mov
push
push
in
dec
ss
test
decb
call
pop
testl
out
nop
out
jns
cmc
sahf
dec
fdivrl
add
mov
pop
fldcw
mov
push
dec
dec
lods
adc
and
pop
repnz
scas
daa
fbstp
ljmp
dec
out
sub
xor
es
enter
das
xchg
gs
test
push
mov
or
xchg
adc
sub
outsb
nop
js
in
jle
xchg
jle
loopne
add
jge
sbb
push
or
repz
int
lods
es
loop
pushf
dec
sub
fstpl
pop
mov
test
mov
daa
movsl
stc
mov
int3
cmp
xchg
xchg
out
mov
dec
lret
inc
jns,pn
xor
gs
mov
test
ja
cld
or
or
add
movsb
addr16
cmc
lods
mov
js
mov
jg
inc
xor
dec
or
add
into
dec
loopne
pop
sub
nop
adc
inc
cmpsb
mov
jne
jno
dec
cs
sbb
inc
pusha
cli
jp
ret
pop
and
lds
add
and
cmp
cmpsb
movsl
jg
pop
je
push
mov
fwait
pop
mov
mov
push
enter
imul
fsubrs
imul
roll
test
decb
inc
jg
cli
pop
jno
cmp
lret
sub
or
pop
mov
mov
mov
sbbl
jmp
pop
cmp
aad
outsl
lock
leave
leave
push
push
mov
lds
push
mov
sbb
mov
mov
cmpb
shll
ror
jecxz
sti
lahf
gs
add
and
int3
xchg
xor
mov
in
cmpsl
mov
cltd
sbb
cmpsl
out
jge
or
gs
repnz
rorl
test
dec
xchg
or
pop
rorl
adc
mov
orb
je
leave
add
std
pop
lods
sbb
arpl
stos
or
in
pop
xor
cmpl
movsl
and
leave
add
xor
popf
cmc
bound
rorl
and
cltd
xlat
lret
mov
daa
mov
leave
lds
icebp
andl
xchg
es
and
sbb
imul
and
xchg
jb
roll
or
push
movsb
pop
lods
xor
and
lret
or
leave
movsl
mov
popa
cmp
aas
cmpsl
inc
cli
sub
sahf
mov
je
cltd
fstps
add
pop
movsb
jbe
cmp
dec
push
inc
mov
loop
push
jmp
lahf
push
icebp
adc
ret
jne
imul
sahf
and
xor
push
sub
xor
adc
jnp
wbinvd
les
xor
add
xchg
lods
push
in
add
adc
xchg
xor
test
in
out
lea
cmpsl
repz
stc
jp
es
aad
into
and
inc
mov
in
sub
fs
sbb
and
mov
out
test
pop
pop
pop
loope
cmp
mov
or
clc
mov
clc
stos
test
popa
imul
jne
ljmp
out
xchg
stc
push
loope
cwtl
out
xor
ss
or
aas
pop
enter
pop
iret
sbb
inc
push
inc
fists
addl
hlt
ret
cli
mov
test
jmp
movsb
cmc
int
test
and
out
or
idivb
test
xchg
xor
sbb
adc
movsl
xchg
add
aaa
xor
lods
fcmovu
int
and
fs
xchg
icebp
rclb
loope
std
cld
cwtl
cmc
push
xorl
arpl
mov
ret
test
and
lcall
and
add
sub
mov
xor
push
imul
les
cmp
sbb
faddl
lds
test
and
mov
cvtdq2ps
dec
mov
outsb
pop
repz
xchg
cmp
pop
pop
cmp
or
fistl
pop
and
mov
xlat
push
push
ret
mov
es
push
add
loope
cmc
sarl
shlb
lea
jge
loopne
lcall
jmp
addb
or
adc
xchg
or
cli
outsl
inc
xchg
imul
jbe
push
scas
mov
test
push
inc
mov
je
outsb
add
dec
testb
jns
addb
orl
loope
testb
jns
loop
sbb
ds
pop
jmp
out
mov
xchg
push
sbb
sbb
mov
ret
in
mov
mov
out
mov
sbb
xor
xchg
fdivrs
xor
add
jecxz
dec
pushf
dec
mov
ja
cltd
sub
xchg
lahf
pop
push
and
mov
lret
mov
sub
adc
test
cmp
jo
gs
int
xchg
insl
inc
mov
mov
imul
xchg
xor
and
scas
daa
test
scas
push
cwtl
xor
test
sub
shrl
add
std
sahf
push
mov
rcrb
cmpb
loopne
aam
inc
ja
adc
fcomps
xor
fwait
ret
mulb
and
fistpll
lret
test
add
outsl
iret
out
rorb
hlt
pushf
das
lcall
adc
jo
mov
or
cmp
jecxz
imul
dec
and
mov
mov
and
jbe
xchg
lret
addr16
subl
stos
in
mov
ss
mov
mov
fsubs
add
mov
cmpsl
inc
add
shlb
std
add
sub
add
leave
or
into
out
and
sbb
adc
mov
test
lods
or
cmp
imul
mov
and
dec
sahf
jecxz
add
pop
outsb
inc
movsl
in
sub
sahf
enter
xor
and
sbb
adc
outsl
and
inc
inc
sti
scas
mov
shrb
mov
repnz
pop
mov
mov
rcr
mov
jae
fmul
aam
and
enter
ficoml
icebp
loopne
push
aas
push
outsb
cmp
adc
or
mov
clc
test
lock
shlb
cmp
stos
and
std
mov
std
aas
dec
insl
sub
out
lods
jmp
shll
jo
push
and
icebp
shlb
mov
loop
arpl
cmp
mov
fs
adc
mov
mov
mov
pop
xlat
sti
outsl
stos
mov
xchg
insl
and
test
icebp
xor
lds
ja
jb
test
arpl
and
pop
lret
es
lods
test
mov
addl
in
mov
pop
daa
divl
jae
cmp
stos
mov
pop
test
out
jle
pop
in
jle
jne
ja
mov
mov
mov
pop
sbb
fwait
xor
add
jns
and
pop
out
mov
arpl
repz
aam
push
xlat
out
push
lods
sub
xchg
daa
cmpsl
mov
mov
test
es
or
mov
sub
fsubp
or
mov
mov
mov
inc
xchg
sub
sbb
xchg
xchg
mov
imul
dec
add
out
int3
cltd
push
dec
adc
inc
push
sbb
loope
push
inc
gs
out
adc
pop
mov
mov
inc
cltd
dec
xchg
jne
jb
loope
mov
aaa
shrl
xchg
jb
mov
fdivr
mov
mov
sub
stc
xchg
mov
sti
xor
jne,pt
out
mov
push
outsb
data16
push
in
lahf
scas
shlb
sti
inc
movsl
xchg
mov
test
scas
jns
sub
lock
fcom
push
mov
push
sub
test
mov
fiaddl
push
mov
inc
sub
dec
jle
add
std
jle
ror
mov
imul
mov
fsubrs
fwait
cs
push
fs
xchg
sbb
or
inc
mov
sbb
mov
outsl
cmp
fwait
dec
and
mov
jnp
stos
push
fnstenv
lods
sbb
mov
ds
pop
dec
pop
xchg
mov
jl
pushf
cbtw
xor
push
mov
mov
adc
in
and
aas
jne
mov
mov
jg
jne
lods
dec
std
inc
clc
cmp
jbe
std
cmp
mov
jle
aam
sub
out
cmpsl
add
fidivrl
mov
repz
mov
mov
xor
aas
cmp
jno
test
mov
movl
sbb
cmp
imul
lods
pop
sbb
int
lods
push
test
mov
dec
or
in
inc
aam
mov
cmc
mov
inc
lods
sahf
out
shr
imul
fidivl
pop
test
add
outsb
adc
lahf
add
sarb
dec
sub
sbb
fcomp
push
and
inc
fwait
int3
adc
in
loop
div
jmp
sub
mov
loope
imul
in
dec
sbbb
movsl
jns
cmp
dec
fstl
test
cmpsl
jle
ja
sbb
xchg
outsb
xchg
int3
adc
xor
ret
imul
insb
cmp
es
pushf
fwait
jno
sbb
xchg
ja
sti
mov
jmp
test
sub
jo
aam
xchg
cmc
les
jle
cwtl
inc
shl
mov
adc
lahf
repnz
insb
and
cmpsb
pushf
jbe
inc
aam
lret
pop
mov
lcall
dec
push
arpl
std
flds
sti
shrb
xor
jae
mov
dec
movl
fcmovne
adc
das
add
out
jae
sbb
je
insl
pop
cmpsl
jmp
adc
mov
movsl
imul
pop
stos
stc
jle
out
push
pushf
jno
pop
push
fwait
mov
int3
xor
and
cwtl
arpl
dec
inc
fdivs
out
mov
insb
adc
or
loop
adc
stos
mov
or
mov
dec
insl
push
jb
mov
outsl
push
popf
dec
or
insb
cli
gs
pop
inc
insl
xor
lock
jo
add
mov
sub
scas
mov
mov
les
sbb
xchg
adc
dec
sbb
loop
std
mov
enter
dec
pop
pop
jl
into
lods
lods
cmp
adc
jbe
filds
bound
int3
iret
stos
jle
xor
arpl
inc
icebp
jno
pusha
scas
jae
lahf
in
xchg
sti
inc
out
mov
imul
mov
scas
cmp
out
sbb
fsubs
std
push
stos
xchg
lret
mov
or
or
addl
jge
jge
fiadds
or
test
inc
mov
fwait
inc
sub
push
sarl
in
xor
xcrypt-cfb
cmpsl
es
call
insb
sub
dec
imul
test
jb
dec
lret
out
dec
cltd
jg
out
out
in
decl
xchg
roll
clc
cmpsl
add
jg
repz
or
pop
push
mov
and
jns
or
push
mov
cmp
pop
out
test
out
hlt
and
cld
int
je
rorl
popf
fwait
cmpsb
das
pop
popa
aaa
pop
or
dec
push
sbb
jne
stos
sub
push
or
push
mov
lret
enter
lods
jge
mov
das
adc
xor
pop
mov
adc
leave
sub
nop
neg
loope
mov
jo
out
push
jle
iret
std
loopne
js
clc
mov
andb
inc
out
jb
lock
mov
fcompl
jecxz
mov
mov
push
push
pop
cmp
mov
pop
dec
mov
dec
or
xchg
decb
push
xchg
imul
dec
jns
jae
ficoml
adc
lea
cld
jo
mov
xor
adc
mov
adc
sbb
pop
aas
cld
outsb
cmc
insb
jnp
ret
pop
pop
clc
test
inc
stos
es
pop
inc
sub
mov
xchg
enter
adc
pop
das
push
push
inc
inc
stos
mov
cltd
xchg
push
mov
movsl
sub
mov
and
sub
outsl
cmp
jge
mov
aad
cmp
out
negl
add
jle
xchg
xlat
xchg
outsl
pop
push
stos
out
push
testl
jmp
popf
iret
mov
jmp
mov
add
les
pusha
cmpsl
mov
pop
sub
dec
daa
add
fstl
ljmp
shrb
imul
pop
sub
inc
fcoms
roll
adc
std
push
cmc
ja
inc
loop
push
pop
mov
jo
adc
inc
loope
std
adc
faddl
xlat
push
fcompl
mov
mov
push
or
xchg
mov
dec
test
cmp
mov
jno
shll
scas
int
punpckhdq
icebp
cmp
adc
xchg
xchg
xorb
aas
push
insl
mov
sbb
in
xchg
adc
fs
iret
stos
jp
fwait
inc
negl
repnz
mov
outsl
loopne
mov
adc
lods
imul
sub
mov
push
nop
fldt
lock
ret
sub
cmp
cwtl
push
ds
jmp
add
test
adc
mov
sub
fildl
pusha
add
sub
pop
cmpsb
mov
xor
icebp
push
test
dec
stos
dec
cwtl
jo
iret
push
cld
mov
push
xor
je
fnsave
repnz
fidivl
or
sub
add
mov
test
outsl
mov
or
mov
or
mov
fstl
pushf
dec
dec
mov
xchg
mov
aas
mov
pop
sub
sti
or
loope
cli
cwtl
or
fisubs
pop
dec
push
into
aaa
je
imul
jbe
mov
testl
dec
inc
loop
mul
xchg
mov
inc
icebp
lret
mov
cmp
xor
js
xor
lea
mov
pop
sbb
out
arpl
or
mov
jae,pt
mov
jbe
stc
jnp
adc
pop
mov
cltd
repnz
mov
mov
xor
adc
inc
arpl
push
data16
or
jge
dec
dec
push
pop
leave
or
int
sbb
sbb
shrb
sub
ret
and
adc
cwtl
xor
jno
and
std
xchg
sub
dec
jno
lahf
insb
push
sarl
je
mov
aaa
push
xchg
sub
jg
push
push
adc
int3
xchg
out
push
cmp
les
sub
in
adc
jmp
jle
sub
in
pusha
bt
inc
andl
xor
cld
push
sbb
movsb
mov
xchg
inc
sarl
jne
test
sub
and
sub
lds
clc
lea
sbb
cli
adc
push
cmp
lret
je
pop
push
movsl
lds
xchg
jne
arpl
sub
es
inc
jmp
inc
and
ljmp
imul
xchg
sti
pop
push
lahf
fucomip
icebp
or
sti
outsb
ret
xchg
push
fcmove
sub
push
scas
sbb
or
jle
inc
bound
xchg
xlat
movsb
cld
adc
hlt
mov
or
lcall
mov
sbbl
add
push
lods
xor
decb
add
cmp
shrb
addl
loope
mov
sarb
or
sub
loop
jne
ret
push
mov
xchg
jmp
push
or
sub
mov
sub
aas
test
fadds
jae
arpl
xchg
sbb
sub
pop
ret
dec
repz
push
xor
inc
enter
call
mov
mov
dec
repz
push
and
inc
mov
xchg
sbb
and
pop
fimull
jno
mov
jl
insb
mov
fcoms
jae
jecxz
xchg
out
mov
movsb
and
or
sbb
loop
or
or
subl
outsb
lea
dec
lods
push
std
push
in
sbb
into
sub
sahf
jge
sbb
outsb
lods
pop
mov
push
int
mov
testl
xchg
dec
out
add
fidivrs
mov
inc
mov
xchg
sbb
mov
pop
popa
dec
mov
sahf
xchg
aaa
xlat
jg
in
and
inc
mov
adc
addr16
xchg
pop
scas
mov
cmp
inc
frstor
fdivrl
push
push
cld
icebp
pusha
add
or
push
sub
fisttpl
sub
xchg
or
ret
and
std
ror
push
cmp
sbb
inc
pop
scas
and
cmc
bound
imul
xor
or
push
outsb
cs
jns
or
jne
insl
jle
test
pop
jp
lods
mov
int3
loope
push
adc
fisttpll
mov
sub
pop
inc
sbb
sbbl
jge
push
std
push
imul
mov
mov
in
sbb
inc
lods
push
in
icebp
ss
xchg
dec
mov
int
enter
mov
jle
add
sub
mov
mov
xchg
pop
dec
mov
mov
jle
adc
add
fmuls
lret
inc
subl
orb
cmpsb
dec
idivb
scas
dec
sahf
jge
insl
jle
outsb
lea
dec
lods
int
std
push
in
sbb
into
sub
sahf
jge
insl
jle
outsb
lea
dec
lods
int
std
push
in
sbb
mov
outsb
pushf
and
pop
pop
cs
fistl
lds
pusha
adc
add
pop
sbb
data16
aam
mov
loopne
and
and
or
jge
mov
fs
xor
movsl
add
or
outsb
out
jg
loope
popa
xor
imul
orb
std
mov
jg
fstpt
pop
sbb
mov
add
outsl
iret
jg
pop
dec
push
cmpsl
mov
sbb
sbb
jbe
dec
adc
push
or
xor
clc
adc
lock
adc
cmp
outsl
mov
xor
int3
xchg
or
push
sbb
cli
outsl
inc
movsb
push
adc
add
xor
popa
sbb
and
sarl
sbb
pop
add
imul
iret
inc
mov
cli
aam
jp
adc
clc
rcll
jle
add
inc
mov
sub
mov
sub
movsl
es
push
push
push
insl
and
jp
sub
mov
xor
aad
pop
fucomi
cmp
stc
jp
push
test
dec
mov
xchg
jmp
cmp
in
imull
movsb
adc
push
es
and
mov
pop
cmp
test
imul
ss
pusha
mov
sub
insb
ss
sarb
in
xor
ljmp
stc
sbb
cmp
idivb
adc
mov
lret
xchg
in
and
aaa
sbb
int3
jns
inc
jns
push
out
adc
jle
xor
mov
or
lods
pop
push
jmp
mov
fstp
jae
xchg
dec
js
pop
jne
imul
lahf
mov
mov
mov
inc
jg
mov
fmull
sbb
and
stos
imul
lcall
add
mov
cmp
popf
dec
pop
and
mov
pop
inc
dec
adc
jge
push
imul
add
jne
sub
outsb
add
ljmp
dec
loop
sbb
cmp
xchg
cwtl
in
push
nop
ja
das
xchg
shld
adc
aas
push
sub
pop
aad
icebp
sbb
jge
cltd
and
stos
xorl
movsb
repnz
xor
arpl
cmpsb
aas
jno
xchg
and
in
add
xchg
jne
sahf
add
mov
enter
cli
cmp
call
inc
jb
sub
loopne
fsubrs
mov
sub
lock
pop
push
aas
jmp
insl
sub
sahf
add
movb
pop
scas
hlt
test
adc
add
gs
mov
cltd
shlb
sub
sbb
aam
xchg
xchg
cltd
cmp
inc
aad
loope
dec
in
cmp
mov
sbb
sbb
insl
ja
ja
or
sarl
in
ss
sahf
out
mov
inc
jmp
cltd
pop
adc
lret
ja
paddusb
sbb
mov
test
pop
xchg
lods
in
dec
test
push
inc
sbb
addr16
push
push
pop
jae
mov
dec
into
add
loope
or
loop
jb
or
jo
call
sbb
mov
jb
cmp
ja
fnstenv
xchg
movsl
push
bound
cmp
xor
mov
mov
mov
shl
mov
xor
push
fimull
cmpsb
jg
aas
nop
cmp
sbb
or
mov
shlb
es
dec
popf
ret
out
fdivrp
scas
cs
jmp
std
test
in
push
das
dec
mov
sbb
sub
push
jnp
and
lds
lods
add
inc
cmpsl
cli
jae
dec
imul
aaa
xor
push
mov
lods
inc
rcrb
loopne
out
xor
adc
leave
inc
insb
jp
jne
dec
mov
adc
add
lea
mov
out
lahf
rcl
dec
repnz
cmc
ds
das
subb
adc
mov
pusha
pop
jl
adc
sub
lcall
cmpsl
mov
push
and
lods
lods
and
jmp
ret
adc
xchg
xor
sbb
sbb
push
pop
mov
lcall
dec
out
pop
mov
sub
adc
fiaddl
cmpsl
inc
cld
lahf
adc
leave
in
jp
scas
mov
mov
out
out
and
incb
mov
movsl
fisttpl
lock
adc
pop
fstl
pop
test
dec
testl
dec
sbb
add
mov
dec
cmp
test
jne
inc
or
xor
and
push
sub
shrl
lret
mov
aaa
add
pop
push
negb
mov
and
pusha
pop
mov
xchg
and
fwait
dec
mov
sub
dec
cwtl
sub
ds
into
stos
xchg
dec
pop
test
in
pop
ljmp
imull
add
mov
sbb
stos
cmp
jae
and
cmpsb
xchg
cwtl
std
pop
movsb
leave
enter
jae
push
sbb
dec
dec
cmp
or
mov
insl
hlt
fiadds
es
xor
test
int3
pop
pop
cltd
insl
sbb
pop
sbb
loop
cmp
cmpsb
cmp
hlt
add
or
test
ror
sub
test
or
outsb
jp
es
mov
pushf
sti
xor
xchg
in
sbb
in
pop
mov
out
xor
mov
call
aad
cmc
rorl
push
xchg
negb
hlt
es
pop
scas
sbb
mov
outsl
bound
xchg
add
jb
jne
adc
mov
pop
mov
mov
fiadds
or
outsb
adc
scas
les
es
addb
scas
push
lahf
push
movsl
je
inc
mov
mov
repz
jns
xchg
ret
les
mov
lds
cld
mov
mov
jo
sub
mull
ljmp
and
orb
lahf
test
out
cltd
pop
sbb
in
fdivr
loop
inc
enter
mov
outsl
mov
movsb
jmp
push
jbe
sub
push
xor
cs
adc
out
add
ret
int3
push
fs
shrb
inc
pop
into
adc
xchg
pop
addr16
fwait
adc
popa
sbb
xchg
jns
sbb
je
cmpsl
movsl
loope
jb
dec
and
dec
mov
inc
xor
xor
mov
test
repz
pop
cmpsb
scas
into
adcl
mov
mov
pop
fistpl
mov
xchg
sub
jae
into
mov
adc
inc
pop
aam
nop
xchg
fwait
push
cld
repz
fsubs
fidivl
or
sti
mov
out
jae
call
fisttpl
push
xchg
jmp
les
mov
pop
xor
push
ljmp
xor
mov
lock
loope
or
scas
sub
cmp
and
outsb
sub
xor
push
cli
fldcw
add
arpl
lods
daa
cmp
push
mov
xchg
and
fnstcw
test
cmp
cwtl
mov
dec
cmpb
sbb
loopne
icebp
leave
xchg
push
js
and
aaa
fldt
cmpsl
dec
aam
and
mov
sahf
ja
pop
push
push
roll
add
push
movsb
nop
mov
push
fwait
xchg
scas
push
and
cmp
mov
fmuls
testl
or
pusha
adc
mov
cmc
fwait
out
ss
ret
lock
clc
dec
popa
stc
imul
cmp
dec
insl
rcrb
mov
pop
les
not
fcoml
jl
je
bound
sbb
pop
sbb
pop
jecxz
push
push
lret
dec
dec
add
sbb
mov
inc
mov
xor
pop
jecxz
outsb
repz
mov
jl
scas
in
cmpb
push
mov
mov
call
xchg
sbb
aaa
cmp
nop
pminsw
in
in
mov
into
scas
xchg
loope
fwait
loope
dec
movsl
cmp
inc
outsl
mov
jo
pop
jae
mov
cmp
mov
les
jle
mov
or
or
pop
stos
mov
cmpsb
stc
idiv
push
sub
leave
in
out
int3
popf
or
cmp
adc
or
popa
cmp
les
dec
jg
and
imul
sub
add
jnp
mov
inc
lret
jbe
repz
cmpb
xchg
push
arpl
adc
push
sahf
stc
cwtl
push
repnz
jae
push
in
mov
fwait
mov
dec
dec
cmpsb
scas
int3
enter
xchg
or
inc
je
mov
add
inc
insl
dec
repz
iret
nop
xor
lock
inc
push
ljmp
and
sbbl
pop
push
insl
mov
sahf
out
sub
cli
fs
fidivl
icebp
cmp
aam
icebp
aad
and
cmovns
test
fcomi
rcrb
mov
fsts
mov
push
nop
rcll
iret
jns
leave
sbb
imul
xor
cmp
mov
xor
jg
into
mov
and
movaps
je
int3
mov
sub
test
lods
sti
rcrb
add
or
sub
out
pop
mov
cs
enter
test
sbb
mov
mov
aaa
inc
mov
mov
shl
sti
adc
lret
mov
imul
push
adc
jp
out
and
andb
imull
aaa
cld
lock
mov
clc
out
bound
or
lret
xor
lret
jge
adc
mov
cmp
cmc
aaa
movsb
cmc
jae
mov
test
test
je
outsl
int
in
xor
adcb
sub
mov
sbbb
adc
stos
adc
aam
popa
cmp
leave
out
hlt
cmp
clc
popa
inc
and
out
repnz
roll
jb
sbb
sbb
xchg
mov
sbb
push
test
imul
cwtl
pop
pop
lods
mov
subb
dec
roll
sbb
mov
pop
mov
pop
xchg
xor
mov
leave
mov
xchg
jns
mov
fidivs
sahf
or
andb
in
test
push
push
cmp
push
inc
je
lahf
mov
inc
inc
push
movsl
dec
cltd
push
arpl
mov
lds
xchg
scas
inc
sub
sbb
push
scas
pushf
cmpsb
imul
push
pop
cwtl
mov
call
stos
pushf
movsl
xchg
ss
cltd
cmpsl
loopne
push
aaa
ret
imul
push
push
ret
hlt
movsl
int3
shrl
jle
sbb
xchg
das
add
sub
sar
and
loopne
dec
ret
xor
ljmp
rolb
inc
out
dec
or
inc
imul
jl
lds
int3
fldl
or
jne
outsb
stos
sbb
mov
pop
pop
pusha
insl
jae
inc
mov
stos
mov
ljmp
dec
addr16
inc
gs
xor
fcmovne
sbb
adc
cmp
cmp
ficoms
mov
popf
data16
adc
clc
push
ret
jno
jae
or
fsubl
jne
sub
lahf
aaa
cmc
ret
test
inc
sbb
fimuls
cmp
jmp
sub
mov
or
call
mov
lret
cs
fdivrp
and
cli
mov
mov
mov
cmp
mov
jno
xchg
cmp
mov
cmc
test
add
or
loopew
iret
jge
push
jb
loope
jmp
les
lods
cmp
lret
shr
push
dec
adc
pop
in
das
mov
sub
adc
fwait
cmp
cmp
inc
sub
es
cltd
leave
cmpsl
cs
sub
sbb
sbb
pop
jp
mov
pop
pop
jne
push
rcr
sahf
fs
push
add
aas
inc
xchg
enter
cmp
xchg
mov
hlt
jne
jns
inc
daa
cmp
loop
maskmovq
testl
shlb
add
push
jmp
pop
out
test
mov
jne
std
push
in
and
lock
es
pop
cld
and
inc
inc
pop
mov
sub
testl
cli
pop
pop
insl
loop
jno
add
addl
aas
ja
add
xor
ss
dec
daa
sub
into
mov
andl
div
repnz
xchg
stos
stc
mov
xor
jmp
adc
aad
lcall
faddl
and
rcrb
lcall
cmp
addl
mov
into
push
nop
pop
aaa
and
mov
lahf
xor
cmp
icebp
lret
and
jae
ficomps
push
and
or
enter
ljmp
adc
imul
mov
test
adc
mov
cmp
xor
jecxz
into
mov
and
push
mov
rcr
or
xor
out
hlt
push
xor
repz
push
xor
mov
clc
stos
mov
jae
pop
sbb
and
mov
and
jle
test
add
hlt
jbe
mov
sbb
imul
mov
ljmp
sarb
cmp
add
int
icebp
std
addr16
sbb
popf
or
push
xchg
and
in
repnz
mov
jbe
dec
add
push
sub
hlt
add
ds
rcl
ljmp
sbb
and
test
lods
scas
push
xchg
or
or
cmp
popa
mov
ds
mov
mov
in
mov
lcall
cmpsl
and
xchg
add
leave
xchg
je
mov
mov
test
fiadds
insl
fistpll
adc
mov
int
or
dec
xor
test
jle
inc
test
loopne
and
out
cmp
mov
cmp
xor
mov
inc
sub
fdiv
psubsw
sbb
rorl
jno
loopne
lods
aad
jle
movsl
mov
push
xchg
js
xchg
xchg
test
cli
in
jle
mov
jbe
sbb
insl
inc
stos
inc
sahf
push
xor
rcrb
les
push
movsb
lods
xchg
enter
mov
push
fsubl
shlb
mov
incb
mov
lock
mov
push
lods
xchg
xchg
pop
lds
inc
cli
ljmp
loope
scas
xlat
scas
adc
mov
aad
sbb
shlb
add
jb
lods
push
mov
inc
mov
leave
lea
mov
cld
cmp
sbb
mov
jbe
test
add
pop
xor
sub
jns
dec
xchg
xor
loope
and
inc
std
xor
pop
imul
dec
sub
insb
dec
bound
pop
xchg
les
movsb
cmpsb
and
imul
jle
push
sub
fiadds
xchg
movsb
dec
rorl
mov
inc
mov
aad
dec
out
sub
mov
sbb
inc
add
and
pop
add
jp
in
pop
ret
lret
inc
lret
cmp
ljmp
std
fs
in
inc
subb
jge
or
pop
push
cmpsl
insb
or
push
test
ret
mov
and
bound
and
sbb
cmc
mov
fldenv
mov
mov
push
sbb
filds
mov
inc
adcl
or
jno
cmp
std
dec
aas
lods
sar
inc
flds
xlat
pop
sti
mov
in
rdpmc
pop
and
repz
les
movsb
inc
pusha
inc
xchg
jp
cld
out
xchg
pop
insl
out
or
adc
subl
arpl
lea
pop
stos
mov
adc
xchg
sbb
enter
sbb
dec
cmp
sbb
or
jnp
pop
xor
pop
stos
pushf
xor
insl
mov
sub
or
jp
or
sub
gs
sbb
mov
fadd
les
loopne
jle
adc
cmpsl
fsubl
stos
ja
mov
cmp
arpl
stc
and
adc
out
popa
imul
daa
pop
adc
in
sub
cmc
arpl
iret
jbe
xchg
push
jne
mov
sub
cmp
je
addr16
outsl
stos
xor
add
add
mov
cmp
test
fs
add
mov
in
xchg
out
out
add
mov
repz
pop
call
int3
cmp
loop
mov
xchg
test
test
leave
lea
lahf
add
adc
dec
add
insb
dec
dec
jmp
mov
subl
call
push
pop
jmp
fstpt
sub
sbb
fidivrl
mov
test
jb
das
and
mov
mov
rcrl
add
cwtl
cltd
push
xor
cmc
or
idivb
ds
sbb
xchg
dec
pop
mov
mov
repz
ficomps
int3
ds
sub
out
pop
orb
add
sub
ds
lock
in
testl
push
adc
jbe
mov
jp
pop
je
cmp
jmp
mov
jb
les
movsb
cwtl
hlt
data16
jnp
xchg
gs
fwait
test
ror
iret
mov
femms
stos
or
mov
mov
xor
dec
lock
sub
sub
fsubp
mov
pop
mov
mov
inc
and
inc
and
xchg
add
xor
add
adc
push
lret
les
xor
add
rcrb
push
and
fnstcw
imul
xchg
push
xchg
fisubs
sbb
xchg
sbb
mov
xor
pop
mov
mov
add
lret
lcall
into
cmpsl
xor
cltd
xchg
cs
dec
mov
jmp
pop
int3
rorl
aad
xlat
or
sub
or
sbb
xchg
jne
in
les
into
push
or
push
test
shlb
xor
pop
dec
push
push
dec
cld
inc
enter
cmc
fildl
mov
shlb
pop
sub
mov
add
and
out
movl
xchg
das
orb
adc
or
jo
fcoml
sarl
aam
icebp
sub
addl
pushf
push
mov
pop
sbb
or
sub
pop
xchg
ret
sbb
les
je
ds
dec
test
in
mov
or
fildll
push
mov
fimuls
mov
mov
daa
fs
arpl
pop
push
push
dec
fnstsw
fbld
pop
mov
cmp
pop
jge
pop
inc
mov
jne
sbb
push
and
pop
popa
or
inc
mov
ret
dec
arpl
mov
or
push
addr16
or
cmovno
push
dec
mov
rep
push
bound
pop
inc
hlt
xchg
mov
mov
outsb
sbb
addr16
pop
pop
jecxz
cmp
fadds
daa
mov
mov
xchg
stos
or
mov
cs
leave
adc
fyl2xp1
ljmp
icebp
push
xchg
je
mov
xor
fisttps
sbb
cmp
mov
lcall
xchg
and
popf
iret
bound
clc
enter
ret
fsubs
rclb
aam
not
mov
inc
jo
lahf
add
in
jmp
inc
test
pop
js
jge
movb
pop
mov
pop
jecxz
cmp
push
xchg
jne
divl
aaa
ljmp
out
mov
inc
dec
cmp
enter
xchg
or
pushf
rclb
jmp
daa
das
mov
or
movsl
mov
add
in
stos
pop
loop
nop
mov
cmc
jbe
int3
loopne
push
loopne
adc
int
repz
mov
jp
push
shlb
xchg
in
enter
xlat
sbb
push
data16
fdiv
mov
insb
outsb
cs
sub
push
push
cmpsl
popf
mov
cmp
push
cmp
mov
addb
cmpsl
sub
test
aad
insb
xchg
mov
xchg
adc
ds
xchg
add
ljmp
inc
jne
jnp
arpl
or
pop
roll
jbe,pt
dec
sub
das
mov
cmc
pop
imul
inc
js
push
aam
inc
jns
fbld
lahf
mov
out
fdivrp
mov
and
stos
out
push
ret
loopne
push
mov
and
daa
pop
cmp
clc
inc
mov
addb
icebp
cs
and
mov
mov
xchg
mov
insb
mov
scas
mov
test
push
add
rolb
sbb
inc
mov
cwtl
gs
xor
loopne
add
mov
jno
ficoms
mov
orps
lock
fucom
iret
mov
sbb
push
and
outsb
push
fidivrs
in
out
inc
xchg
aad
pop
hlt
rcll
sarl
and
jne
and
arpl
mov
or
jl
push
lock
mov
jge
insl
jle
outsb
lea
dec
lods
int
std
push
in
sbb
into
sub
sahf
jge
insl
jle
outsb
lea
dec
lods
int
std
push
in
sbb
into
sub
sahf
jge
insl
jle
outsb
lea
dec
lods
int
fisttpll
fistpll
scas
dec
push
std
push
insl
andl
fimull
cmpsb
xor
add
adc
inc
fdivs
gs
fmuls
das
mov
cmc
push
test
mov
movsl
cmp
inc
fdivs
gs
adc
test
fst
dec
lds
imul
sbb
enter
call
add
mov
cltd
or
ljmp
test
test
mov
mov
stos
fnstsw
jl
and
roll
mov
enter
jne
cwtl
add
xor
pop
inc
cmpsl
or
test
nop
sub
fmuls
jb
adc
sahf
lds
mov
dec
xchg
pop
cmc
outsb
and
and
movsl
movsl
hlt
push
inc
inc
int
std
gs
xor
and
cmpsl
or
pop
nop
cmp
pop
lcall
stc
pusha
mov
jo
cwtl
js
pop
jp
in
movsb
fsubrs
push
out
lock
notl
mov
dec
xor
xchg
sbb
dec
lock
fdivs
gs
adc
test
mov
cmc
push
test
mov
movsl
jle
enter
test
ja
push
int
int3
aad
mov
or
jecxz
xor
fwait
adc
pushl
mov
xchg
sub
pmulhw
xchg
insl
jmp
insb
xor
or
xor
dec
lds
push
test
mov
movsl
cmp
inc
fdivs
gs
adc
test
mov
cmc
push
test
mov
movsl
cmp
pusha
lock
jge
sbb
call
pop
mov
sbb
scas
adc
jae
xchg
scas
xchg
sbb
pop
into
jne
lret
rcrl
stos
push
jbe
es
push
out
xor
lcall
pop
sbb
movl
jbe
mov
movsl
pop
ja
mov
andl
daa
mov
push
popl
add
stc
or
aad
sbb
stc
push
lcall
pop
inc
inc
add
movsb
orl
and
imul
mov
and
stos
jp
not
ss
dec
cmpsl
xchg
add
xor
loopne
mov
mov
and
cmp
test
jbe
add
lods
mov
out
sbb
in
ds
sub
mov
push
pop
add
push
dec
outsl
imul
aaa
js
sbb
into
fcmovb
sbb
dec
fyl2xp1
mov
sbb
xchg
outsb
stos
or
mov
xchg
mov
lret
stos
subl
fsubrs
mov
lock
aaa
pop
mov
lret
mov
pop
push
shl
xchg
cmp
push
lea
adc
rorl
pop
pop
fisttpll
lea
push
and
fs
add
cmp
mov
aad
lods
insl
adc
xchg
push
xchg
mov
dec
xchg
nop
testl
in
cli
sbb
rcrb
or
inc
add
testb
into
fdivl
aas
push
orl
mov
mov
jo
leave
insl
mov
xor
mov
or
mov
out
ret
notl
mov
test
cmpl
rcll
sbb
pusha
sub
xor
cli
lds
aaa
sbb
and
je
sbbl
stos
rorl
inc
push
push
outsl
pushl
mov
xor
fcompl
pop
add
jp
adc
pop
jne
jnp
movsl
mov
aaa
jbe
aad
les
orl
jb
nop
adc
add
push
out
xchg
outsb
or
mov
xor
and
or
mov
adc
mov
jecxz
scas
mov
inc
push
lea
add
fstl
mov
mov
mov
insb
repz
ds
jmp
and
or
mov
leave
in
cltd
ret
mov
jmp
scas
cmpsb
loope
dec
in
or
mov
aam
fucom
ror
and
push
ss
jp
push
dec
call
jle
aam
add
jmp
or
mov
mov
jmp
hlt
xor
in
mov
push
pusha
movsb
or
cli
in
out
lcall
outsl
add
in
movsb
jnp
lock
lods
stc
fstps
cld
addl
cmp
test
lods
jnp
mov
ret
iret
rsqrtps
xchg
push
fisubl
cmp
and
sub
sti
lahf
test
and
aam
fsubrs
inc
aas
aaa
fidivl
sub
inc
cmp
fs
enter
movsl
lret
xchg
mov
mov
pop
adc
push
mov
repnz
cmp
jmp
mov
aad
inc
fnstcw
sub
js
scas
test
popa
movsl
lret
adc
and
outsl
lds
mov
and
cld
mov
inc
jmp
sbb
in
cmp
hlt
push
in
aas
dec
adc
imul
aas
or
sub
stc
push
fidivs
pop
or
jae
loope
dec
jbe
mov
xorl
nop
mov
in
bnd
inc
aas
push
and
pop
or
push
test
jo
enter
mov
mov
fst
pop
repz
and
icebp
mov
inc
fldl
sub
jg
mov
sbb
sub
scas
jne
pop
fmuls
xchg
add
inc
push
xor
pop
inc
les
shll
push
mov
ss
adc
out
jg
lcall
in
jge
lods
fwait
mov
xor
in
loop
rol
int
push
iret
leave
popf
cwtl
mov
cmp
cmp
xadd
pop
mov
xor
xor
js
xchg
fstpl
sahf
mov
popa
cmpsb
jle
fs
cmp
andnps
fwait
in
lea
mov
insw
mov
mov
jae
lret
add
adc
arpl
mov
fildll
pop
leave
ss
inc
or
xchg
mov
shll
sub
test
pushf
pop
jno
mov
sbb
js
push
xor
xchg
pop
jns
xchg
pop
or
inc
or
mov
mov
add
cli
sbb
mov
fisttpl
mov
push
xor
push
pop
shl
jne
jo
repnz
subb
xor
sbb
jg
cmc
add
loop
out
cmp
cwtl
push
inc
jo
adc
mov
sbb
popf
push
push
fnstcw
fstpt
push
in
ret
rcr
fistps
cli
xor
mov
mov
sbb
rorl
fisubrl
mov
jne
dec
movsb
dec
xchg
loope
ss
pusha
mov
push
mov
bound
or
jg
jno
ss
and
sbb
rclb
fidivl
dec
xor
xchg
scas
jmp
push
mov
cmp
test
arpl
rcrb
test
pop
and
mov
in
in
stos
xor
sub
xchg
or
mov
lret
xchg
repz
mov
or
xchg
lds
jno
pop
adc
push
push
and
xor
mov
xchg
xchg
aam
sbbl
das
test
das
jne
push
fisubl
shl
mov
addb
jmp
xor
cmp
mov
push
test
cmp
loop
test
xchg
cltd
das
in
adc
loop
mov
aas
cmp
je
pop
sub
insb
mov
cmpsb
ja
mov
xchg
addr16
lods
dec
xor
out
insl
icebp
outsl
mov
sub
int3
iret
sub
pop
or
out
xchg
xchg
mov
rclb
shrb
hlt
sub
lret
push
sub
pop
xchg
gs
mov
out
cmc
xchg
ss
mov
divb
or
fdivl
lahf
clc
in
fists
pop
gs
repz
rclb
add
addr16
das
rorl
cwtl
push
hlt
sub
mov
sbb
cltd
mov
add
sub
std
cli
rcrb
inc
inc
or
or
sub
ret
cmp
loop
push
pop
push
or
nop
shlb
sti
jmp
xchg
sbb
subl
jmp
xchg
xchg
inc
fmul
ret
nop
movsb
je
lock
xchg
loope
stos
push
ds
repnz
daa
jnp
mov
push
xor
push
lret
inc
sbb
divl
incb
mov
fcmovne
push
std
pop
mov
push
mov
sub
scas
adc
clc
js
cmp
ja
xchg
loope
mov
std
and
paddusb
xchg
add
mov
movsl
and
clc
mov
and
div
aad
pusha
pop
sbb
push
inc
outsl
movsl
je
cmpsl
jecxz
push
jg
jbe
inc
cli
popa
in
leave
enter
push
adc
xlat
into
pop
mov
sahf
cmpsb
in
xor
xchg
sbb
fwait
dec
xchg
stos
movsl
mov
jp
out
dec
daa
and
cmpsl
dec
fistpll
jl
insb
jp
mov
sarl
push
or
cmp
test
or
xor
fisubrl
inc
xchg
repnz
mov
out
stos
add
test
jle
xchg
push
mov
lahf
xor
test
imul
jl
dec
mov
lret
gs
int3
mov
and
mov
cmp
stc
outsb
sub
and
imul
cltd
jp
in
fsubr
aaa
lea
lret
out
cmc
mov
jmp
push
pop
lahf
dec
xchg
push
pop
int
call
jno
pavgb
mov
scas
add
test
daa
jns
pop
push
and
cmp
aad
aaa
lock
mov
jo
icebp
andb
out
inc
add
push
add
dec
pop
cmp
loope
shlb
jo
mov
fwait
enter
int3
inc
sub
imul
mov
jo
cwtl
xor
cmp
fadd
das
add
add
fsubrl
or
sti
mov
pop
cmp
mov
nop
add
jno
cmp
jo
xor
sti
inc
fidivrl
out
and
or
jecxz
jl
mov
insl
sub
shlb
dec
popa
mov
xchg
aad
cmp
adc
ret
or
movsb
xchg
imul
add
das
loopne
or
inc
in
stos
dec
and
leave
lds
jo
jo
insl
mov
cli
ret
mov
add
pop
mov
jb
mov
addr16
mov
sub
pop
stos
xor
inc
in
push
mov
or
push
jmp
mov
xor
mov
pop
xor
addb
mov
stos
mov
xchg
jae
mov
sub
sahf
subb
lret
cmp
mov
xor
div
push
sarb
cmp
mov
out
dec
inc
and
mov
rol
mov
jp
idivl
jae
sub
inc
std
les
outsl
inc
or
jno
test
mov
pop
ret
mov
mov
add
xchg
xlat
std
xor
pushw
adcb
gs
aad
sbb
pop
dec
fisubrl
or
mov
pop
inc
adc
pop
mov
mov
push
lcall
inc
or
lcall
sub
out
push
pop
inc
xchg
sti
push
xchg
into
in
fbstp
xchg
pop
jae
lahf
cmc
add
adc
test
sub
imul
jg
xor
pusha
loopne
dec
or
mov
cwtl
rorb
into
mov
pop
cmpsb
pushf
mov
xchg
mov
aas
push
cmp
push
or
xchg
es
fsubrs
add
and
xchg
or
ja
fsubrl
in
mov
jb
dec
mov
fistl
cwtl
adc
icebp
dec
push
shl
xchg
int3
inc
popf
out
sub
cmp
sbb
push
sub
outsl
sub
pop
add
int
add
fs
in
fildll
sub
inc
insb
fisttps
mov
adc
inc
imul
mov
xor
push
flds
inc
sti
mov
pop
and
inc
or
sub
lret
sub
push
adc
xchg
mov
popa
aam
mov
add
xchg
inc
xor
aad
sub
mov
pusha
out
stos
xchg
iret
mov
push
push
popa
repnz
aas
lahf
out
dec
xor
divl
cld
out
fucomi
and
sti
xchg
push
pushf
ja
adc
mov
xor
addl
inc
into
xor
inc
ret
or
aad
icebp
add
mov
fstl
cmc
push
jb
sub
ja
loope
dec
mov
inc
or
jle,pn
pop
call
lods
out
push
xor
mov
add
push
mov
fimull
nop
jge
popf
xlat
lahf
popf
cmp
je
in
add
stos
adcl
cld
or
jno
pop
push
lods
popa
jbe
add
punpckldq
xchg
xchg
add
out
dec
xor
popf
daa
aas
int
decl
daa
lods
cs
xor
lock
sub
add
rcll
mov
cmpsb
or
icebp
xchg
xor
outsl
mov
imul
gs
pop
dec
shrl
pusha
jnp
fidivl
loope
aaa
sbb
scas
jl
orb
popf
mov
test
loop
test
cmp
fstl
dec
sti
pop
jmp
adc
and
xorb
sub
mov
sbbl
into
dec
xchg
into
lods
in
xchg
xor
out
repz
xchg
out
jnp
mov
stc
scas
fmull
xchg
clc
cwtl
mov
jg
loopne
cltd
rcrl
sub
add
movsb
mov
aam
jl
jae
neg
fs
mov
pop
insl
ret
mov
inc
pushf
inc
push
movsl
sahf
notl
jg
or
xchg
mov
fsubp
xor
stos
jno
jb
je
test
add
les
lret
cmp
pop
xchg
push
stos
sbb
popf
repz
sub
or
outsb
mov
dec
fs
shr
mov
pusha
xchg
ja
fsubl
push
inc
lea
addr16
jg
pop
dec
push
test
push
xchg
push
xchg
mov
shl
pop
and
add
aam
mov
dec
cmp
fldenv
lcall
out
push
sub
or
dec
sar
jb
jmp
dec
test
xor
fstpl
mov
out
inc
dec
sub
jae
dec
fwait
in
insb
arpl
xor
xor
jns
mov
adc
aaa
or
inc
idivb
aad
out
dec
mov
adc
int
xlat
mov
pusha
fidivl
push
jmp
scas
movsb
push
xchg
mov
adcl
iret
xlat
mov
jg
sub
sbb
pop
fsub
inc
push
ss
ret
sahf
ret
adc
push
imul
and
imul
or
pop
cmc
stos
xor
je
mov
and
jb
aaa
ret
aam
jg
imul
push
roll
icebp
sub
adc
add
dec
push
cwtl
cmp
outsl
and
out
sbb
lds
inc
clc
sbb
divl
and
dec
idivb
jo
mov
sub
aas
aad
popa
test
pop
cltd
cmp
jnp
sub
fimuls
aam
mov
test
loope
push
push
jg
mov
sub
adc
cmp
and
add
xchg
add
xor
je
sbb
imul
test
fwait
gs
mov
ret
scas
daa
roll
les
or
movsb
imul
mov
push
sub
mov
or
dec
cs
fcoml
lahf
into
data16
add
repz
orb
ret
sub
lods
push
sbb
popa
lock
cmc
je
push
ja
adc
outsl
lea
dec
shll
mov
iret
sub
in
pop
push
out
call
fyl2x
lahf
add
add
movb
cmp
and
mov
addr16
adcb
mov
andl
je
or
xor
popf
frstor
jge
shr
rorb
lds
nop
cmpsb
daa
mov
mov
shll
pusha
dec
iret
aam
xlat
cld
xor
imulb
add
sbb
dec
movsb
sbb
push
mov
jae
sahf
rclb
mov
mov
xor
ret
out
mov
enter
test
into
add
pop
push
sbb
cmp
add
gs
jle
or
jbe
sbb
adc
movsb
ret
jae
or
nop
dec
jb
in
test
lds
adc
shll
mov
dec
movl
cmp
dec
orb
jns
push
jecxz
sbb
mov
sbb
aad
mov
push
dec
mov
imul
add
ds
push
xor
jae
test
les
popf
test
cmp
mov
jp
jle
xchg
cmp
pushf
mov
cmpsl
mov
xchg
dec
or
dec
or
or
imul
jae
dec
int3
sub
subb
and
mov
bound
pop
roll
out
sbb
popf
push
pop
inc
mov
jp
test
jo
sub
mov
push
scas
push
aas
fidivrs
sbb
fisubrs
xchg
repz
call
inc
add
and
adc
roll
xor
dec
lret
mov
jae
xchg
xchg
mov
int3
test
aaa
loopne
imul
je
fcomip
adc
sbb
or
and
dec
movsb
ror
lahf
test
sub
adc
outsb
add
mov
test
out
fmul
cltd
mov
idiv
dec
faddl
jns
movl
addr16
int3
aaa
cmpsl
dec
xor
inc
aam
mov
inc
stos
jmp
jae
or
inc
lret
mov
sbb
ja
dec
pcmpgtd
cltd
sbb
xor
dec
scas
imul
cmp
enter
push
or
ret
adc
add
outsb
mov
sbb
sub
mov
cmp
sbb
push
pop
xor
sbb
cmp
pop
jmp
in
sti
fnstsw
cmp
sub
sub
inc
xchg
in
pop
jnp
and
mov
mov
inc
mov
jmp
lods
mov
ret
jecxz
pop
adc
cmp
roll
cmp
rcll
stos
pusha
xchg
inc
or
hlt
push
xchg
sbbb
cmpsb
push
je
dec
inc
sbb
cmp
jmp
pop
and
mov
mov
test
stc
mov
mov
adc
into
inc
cmp
jmp
jp
or
movsb
fidivrs
xchg
ja
and
push
or
clc
scas
adc
mov
ja
aad
aaa
mov
dec
popa
xor
sbb
add
or
rorb
ja
push
mov
push
std
jo
lods
adc
jl
jmp
sub
sub
outsl
stc
cmpsb
push
mov
fs
inc
mov
or
or
leave
jns
mov
hlt
adc
or
or
int
push
daa
jno
or
shl
mov
xchg
adc
imul
mov
divl
les
add
loopne
bswap
ret
daa
jno
pushf
dec
mov
ds
xchg
push
jl
ret
pushf
add
and
stc
rcl
pop
test
adc
popf
test
cmp
add
inc
xchg
xlat
lret
pop
pop
stc
xor
xor
es
inc
add
mov
testb
in
repnz
xor
mov
test
cmp
mov
sbb
adc
int3
popf
mov
pop
cmp
adc
dec
push
loop
cld
mov
or
outsb
jg
mov
inc
pushf
mov
nop
dec
fdivl
dec
ss
sbb
mov
jns
or
nop
sub
pusha
aam
mul
cmpl
sub
inc
fdivp
and
pop
add
xor
stos
mov
push
jle
add
mov
cld
outsb
fisttps
out
shll
clc
add
push
mov
xchg
mov
push
ds
pop
inc
sarl
lds
inc
fnstcw
xor
insb
js
movsl
ja
xchg
lods
insl
movsb
pop
inc
dec
sbb
sub
stos
lods
in
fwait
subb
imul
xchg
pop
cmp
int
xchg
xchg
pop
mov
in
mov
dec
loop
lea
in
push
push
mov
outsl
mov
xlat
mov
outsb
out
es
loope
jecxz
push
loop
xchg
xor
inc
lret
fmul
push
in
mov
push
adc
iret
or
lcall
in
add
jbe
lea
and
mul
fldl
scas
push
movsl
movsl
and
cmp
adc
lea
popa
cmp
or
or
adc
movb
test
stos
inc
push
mov
pop
jne
jno
adc
pop
in
mov
add
cmc
fdivl
sub
xchg
and
cmp
popaw
push
xor
lret
cmpsb
or
std
inc
lcall
repz
mov
cmp
xor
in
popa
jno
cltd
cmpsb
push
imul
incl
or
cmpsb
stc
das
or
and
roll
notb
and
shl
add
and
xlat
arpl
xchg
cmp
mov
add
jne
and
imul
mov
shrd
shlb
lcall
mov
rcrl
cmp
fsubs
sti
test
push
and
mov
xchg
rorl
or
pop
ljmp
fisttps
jecxz
vpor
sbb
xrelease
mov
out
cwtl
push
mov
and
test
scas
jae
test
push
and
shrd
inc
and
ljmp
pop
mov
shl
mov
mov
xor
pop
loop
popa
or
mov
sub
inc
lock
into
pop
iret
xchg
and
mov
stc
lret
loope
fdivs
clc
adc
test
mov
cmc
push
test
mov
movsl
cmp
inc
fdivs
gs
adc
test
mov
cmc
push
test
mov
movsl
cmp
call
add
mov
cmc
push
test
mov
movsl
cmp
inc
fdivs
gs
adc
test
js
dec
vmaxss
pmulhw
aad
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
mov
sub
cmp
add
cmp
dec
and
mov
mov
mov
shr
clc
xor
and
adc
add
jo
pusha
pop
push
push
mov
mov
shr
sar
or
sbb
sub
cmp
pusha
pop
push
push
mov
fsts
xchg
push
pop
inc
push
cmp
push
jae
xor
in
lahf
popa
rol
cld
lea
arpl
gs
lods
nop
gs
mov
fisubl
jb
cld
pop
addr16
mov
pop
adc
call
and
je
ljmp
fdivp
adc
dec
frstor
fcoms
test
dec
and
add
outsl
jo
dec
pop
mov
inc
xchg
sub
pop
adc
mov
shl
stc
int
fisttps
js
mov
shrb
add
fdivs
aam
push
cmpb
aas
push
enter
lcall
nop
test
xchg
in
or
mov
call
and
adc
add
jo
pusha
pop
push
push
mov
mov
shr
rclb
sub
xor
and
cltd
dec
in
test
mov
outsl
insl
arpl
dec
dec
cmp
add
sbb
ret
int
call
cmpsb
xchg
flds
dec
push
push
jae
and
pushaw
pop
push
push
mov
mov
shr
sar
or
sbb
sub
cmp
pusha
pop
push
push
mov
mov
shr
sar
or
cli
add
mov
out
cmp
call
mov
into
push
fs
sbb
pushf
xchg
ret
les
cmp
testl
test
cmp
lods
cmpb
cltd
pop
fwait
int3
lcall
or
add
scas
add
ficoms
insl
pop
jmp
lods
rolb
test
jg
cltd
pop
lret
addl
and
in
push
inc
push
fadds
and
jo
pushf
add
test
xor
xor
xor
adc
enter
fisttpl
pop
and
into
enter
mov
rcr
inc
stc
ret
cmc
add
xor
daa
xorb
jmp
sti
pop
cmp
lret
or
pop
adc
rorb
ss
mov
repz
mov
xchg
or
and
mov
enter
repz
inc
les
data16
outsl
aam
adc
xchg
lods
cmp
jae
sti
mov
jne
xchg
xchg
jo
jns
orl
mov
adc
jp
add
cmp
jb
and
and
and
sti
mov
xchg
daa
popa
frstor
lcall
inc
jl
jno
xor
pop
outsl
test
jmp
lret
jge
aas
xor
scas
in
orb
push
mov
sub
xchg
mov
xchg
je
je
loop
and
rcr
loopne
lods
dec
cs
subb
mov
fnstenv
sbb
rcrb
decb
imul
les
add
mov
test
fldl
lret
and
xor
data16
lahf
movsb
or
outsl
sbb
xor
add
dec
push
push
into
pop
xchg
jbe
int3
pop
and
cmpsl
jl
and
inc
sub
cmp
xchg
sar
pop
cmp
dec
int3
jl
push
pop
mov
pop
cmpsl
sub
in
and
add
lret
test
loopne
mov
pop
jge
js
jae
sti
push
fldl2e
aam
dec
push
loopne
adc
push
sub
push
dec
mov
call
cmp
aaa
adc
dec
imulw
shll
out
jno
inc
aam
lock
mov
mov
mull
push
push
frstpm(287
xor
and
and
jle
mov
sbb
jbe
cmp
pop
lcall
cld
inc
mov
adc
jnp
nop
mov
std
sub
jmp
jle
fs
clc
lds
or
push
cli
add
add
inc
sub
movsb
out
out
outsl
mov
test
popa
adc
mov
in
jnp
mov
sarl
sar
cmp
cli
fwait
lods
adc
aas
pop
or
pop
xchg
xor
mov
mov
hlt
cmp
enter
xchg
pop
pop
and
mov
frstor
shll
dec
adc
fiaddl
sahf
jnp
push
push
out
mov
mov
ss
cmc
and
add
dec
shll
outsb
gs
fcmove
inc
add
popa
scas
lock
call
js
sbb
sbb
repz
ljmp
add
sbb
cltd
push
pop
in
nop
cmp
insl
js
sar
ss
inc
sub
pop
imul
loop
sub
mov
xor
xchg
mov
pop
pop
in
in
shrb
lret
sub
xchg
mov
aad
aas
mov
nop
jae
mov
sbb
add
mov
stos
add
ds
scas
mov
in
fdivrl
sbb
pop
mov
mov
fistpll
pop
hlt
std
jbe
mov
cmpsb
icebp
push
cmp
imul
mov
and
jmp
pextrw
or
jp
int3
data16
push
lret
jecxz
cmp
mov
push
or
and
xchg
enter
stos
ljmp
ret
xchg
sbb
stos
mov
cmp
mov
mov
fldlg2
ljmp
repz
or
js
cmp
sbb
jmp
xor
push
fisubrl
and
push
test
mov
jae
dec
scas
sbb
dec
rorb
scas
cltd
sbb
jo
dec
or
ret
cmpl
out
push
or
std
mov
pop
out
mov
fs
nop
shrl
mov
mov
jg
insb
dec
fisubl
int3
push
xor
xchg
jmp
test
rorl
aam
mov
cmpsl
fwait
fs
mov
fidivl
jmp
dec
cmp
cmc
and
inc
repz
jge
in
jl
dec
xor
gs
roll
mov
cmpsb
adc
ret
shrl
les
jnp
je
pop
mov
pop
jecxz
mov
sub
int
rol
jp
in
aas
cmp
fs
idivb
cmp
repz
test
push
loopne
sub
jl
cld
add
mov
mov
les
cld
xchg
xchg
mov
loopne
arpl
jecxz
stos
or
add
clc
mov
je
out
popa
movsb
test
inc
sub
cwtl
mov
ja
push
push
movsb
scas
sub
dec
aaa
jle
test
ret
es
push
lods
push
insb
pop
shll
pop
loop
insb
pop
jmp
inc
adcl
subl
sub
pop
push
inc
sub
xchg
es
adc
jns
mov
lods
mov
fadds
adc
add
cmp
or
fmuls
push
loop
or
ds
loop
dec
data16
int
lret
sbb
push
jle
xchg
bound
aas
fsts
mov
adc
mov
rolb
lret
push
mov
std
cli
cmpl
loopne
or
inc
xor
insl
test
leave
sbb
xchg
xchg
mov
icebp
and
shlb
in
daa
cmc
inc
jmp
dec
pavgb
mov
xor
jns
push
xor
xor
mov
scas
lret
shrl
mov
push
jg
and
mov
pop
add
jae
imul
cmpsl
push
in
pop
lods
ret
push
mov
add
mov
rclb
mov
pop
adc
loopne
or
aaa
push
pop
add
das
popa
dec
push
cmp
jbe
push
push
mov
add
repz
int
les
jbe
adc
xchg
cli
movsl
cli
jmp
subl
divb
andb
add
or
stc
pushf
xchg
mov
int
or
out
jno
rcr
jmp
mov
pop
mov
pop
int3
ret
shlb
mov
data16
rcpps
out
out
rcrl
addr16
lret
dec
negl
cmp
cmp
inc
lods
inc
int3
movsb
xlat
or
lds
addr16
pop
es
xchg
insb
sbb
or
imul
fsubs
add
scas
adc
aam
cmpsb
mov
pop
in
std
imul
jmp
mov
jo
rolb
divb
sub
pop
in
xchg
cs
push
adc
push
or
lods
pushf
inc
jns
mov
stos
test
sbb
push
xor
mov
lods
test
mov
orl
mov
jbe
pop
mov
adc
pop
out
mov
dec
jno
sbb
cmpsb
fdivs
sub
sbb
jge
fwait
test
xorl
dec
call
adc
push
sti
adc
inc
fstpt
fs
orb
mov
inc
out
das
mov
pop
jne
or
pop
pop
push
push
inc
jne
xchg
pop
mov
mov
push
es
adc
test
mov
mov
loopne
enter
or
sub
xor
out
mov
jo
mov
or
pop
jmp
addl
sub
dec
stos
mov
push
mov
testl
into
sbb
push
cli
dec
loope
mov
sbb
subb
mov
mov
outsl
mov
xchg
inc
inc
push
xor
push
sbb
push
leave
aaa
test
mov
or
daa
or
mov
loopne
fstpl
insl
xchg
inc
push
and
mov
xchg
mov
xchg
in
and
xor
mov
mov
outsl
mov
push
ljmp
mov
test
enter
jo
aam
enter
or
mov
rcrl
inc
xor
fidivrs
sub
test
mov
rclb
push
jo
rcll
ds
mov
mov
stos
cmpsl
lea
dec
cli
int
lret
insl
push
dec
sbb
push
adc
stc
insb
push
lret
pop
scas
outsb
cmp
iret
jbe
or
fsubs
mov
into
push
es
dec
divb
xchg
pop
dec
pop
lcall
jbe
hlt
jge
mov
sub
cmp
mov
wbinvd
lods
cwtl
sbb
dec
fstl
test
jmp
sub
pop
mov
xor
into
sbb
sub
je
jne
cmc
vhaddpd
loop
or
cmc
xchg
mov
adc
sti
dec
addr16
bound
inc
or
mov
shrb
insb
gs
testl
imul
loope
mov
cmp
fs
int
test
mov
dec
sub
dec
or
fistps
clc
push
imul
mov
sub
das
aam
mov
idivb
movsb
mov
or
test
loope
push
or
test
loop
push
sti
cld
movl
add
fisubl
xchg
mov
fisttps
in
xor
inc
arpl
out
push
pop
jmp
inc
cmpsb
push
pop
mov
xchg
stc
mov
jge
jno
push
sub
cmp
cmp
inc
mov
sbb
jae
dec
js
push
adc
adc
out
dec
gs
cmp
sbb
insb
lcall
hlt
addl
or
mov
decl
je
xchg
adc
mov
pop
dec
es
mov
jecxz
cmc
and
fwait
cmpsb
jo
fists
xor
adc
push
inc
lods
and
push
daa
push
jg
jg
outsb
sub
inc
leave
cmp
imul
add
fdivrl
out
movsb
xlat
push
fcoms
mov
mov
ljmp
fdivrp
push
rcl
or
out
ds
push
sbb
ret
mulps
mov
nop
cmp
pop
out
cld
push
das
or
dec
mov
xchg
pop
mov
add
sbb
add
pop
es
mov
mov
inc
popa
rcrl
movsb
add
dec
dec
add
xchg
aas
xor
mov
bswap
push
cld
pop
add
lret
aaa
jno
pushf
lcall
out
imul
xchg
cmp
push
outsl
xor
test
lea
mov
lods
fisttps
jb
arpl
fcompl
fwait
cmpsl
push
sahf
and
iret
pusha
fstpt
popf
xlat
aad
shl
scas
movsl
sbb
mov
jno
pop
ljmp
mov
inc
dec
inc
push
and
daa
inc
stc
pop
aas
fcomps
jno
jns
ret
xchg
cld
repz
mov
cmpsb
sti
nop
pop
test
inc
popf
loop
rcll
mov
pop
or
sbb
les
mov
jecxz
push
sub
adc
mov
int
dec
xchg
sbb
ja
sub
inc
jnp
push
or
stc
fsubl
dec
stos
or
xor
push
adc
inc
adc
push
sub
xlat
shrl
sub
mov
shlb
xchg
and
loop
fistl
add
xchg
cli
fldenv
out
imul
jmp
scas
mov
add
mov
sub
sbb
out
dec
scas
dec
mov
cmp
pop
fidivl
or
add
or
out
outsl
pop
dec
test
ficoml
fbld
sbb
adc
lret
call
repz
adc
ja
cs
push
test
in
push
out
xchg
xlat
xchg
jno
mov
mov
mov
cmp
hlt
and
lcall
dec
sbb
and
inc
ljmp
push
dec
ja
sub
pop
je
add
fstl
inc
or
addr16
and
mov
das
loop
sub
mov
push
cltd
mov
sti
add
add
xchg
sub
push
das
cmpb
pop
into
or
mov
outsl
cmpb
xlat
je
mov
sub
mov
ljmp
out
xor
scas
ret
jp
and
mov
cs
mov
lods
out
cmp
push
loopne
les
add
xchg
mov
push
add
cwtl
ret
outsl
fld
mov
aam
out
xlat
push
sbb
pop
ds
in
js
add
cmp
or
cmp
lods
add
or
sbb
ret
fwait
leave
dec
sbb
mov
mov
sub
gs
test
jge
test
out
and
orl
mov
adc
stos
std
jg
scas
add
mov
push
push
inc
lock
and
pop
ljmp
and
shll
mov
in
mov
or
sahf
fisubl
loop
mov
mov
push
rolb
js
pop
dec
sbb
xchg
add
nop
push
and
inc
cmp
dec
aas
dec
mov
mov
jge
and
shl
lret
popf
mov
pop
and
push
ja
mov
cwtl
jl
dec
ror
repz
sti
jecxz
stc
fwait
xchg
repz
cmpsb
loop
push
lret
and
jmp
dec
or
incl
js
mov
lcall
movsl
add
push
sbb
cmp
lret
iret
mov
dec
rcrl
jae
xorl
scas
fwait
jb
add
mov
jle
mov
es
xor
das
jl
leave
vsubpd
xor
and
shll
inc
pop
push
mov
cld
and
or
adc
lea
out
jle
loop
clc
xor
mov
push
mov
xor
and
popa
out
dec
lahf
xchg
fmuls
add
std
and
neg
ds
xor
mov
dec
adc
push
dec
push
cli
clc
pushf
idivl
int3
mov
dec
mov
mov
lods
rorb
push
sbb
or
add
lock
cmp
out
xlat
lods
fistps
cmp
xchg
int3
xlat
xchg
mov
adc
cwtl
mov
xor
xchg
cmp
mov
shll
fwait
xchg
push
in
dec
and
rcrb
fmul
mov
add
jae
test
push
fists
xchg
or
push
sti
cli
push
xor
push
cwtl
mov
mov
mov
in
fildll
lcall
add
mov
aam
mov
pop
xchg
or
or
xor
mov
lcall
jge
add
cs
mov
xchg
mov
push
cmpb
add
pop
cmp
movsb
sbbl
loop
push
call
aas
ret
sbb
shrl
inc
jbe
adc
loope
jne
sub
testb
pop
and
rolb
repz
push
mov
mov
cmp
xchg
adc
scas
cs
fnstcw
mov
es
sbb
scas
fistpll
dec
push
rorb
jae
movsl
movsl
out
mov
sub
xchg
jmp
js
jnp
add
xchg
or
mov
cmp
imul
or
mov
sub
icebp
loopne
inc
jnp
iret
inc
pop
adcl
fsubrl
lcall
inc
jae
xor
add
and
mov
xor
and
scas
xor
xor
call
cmp
jge
lahf
shrl
dec
add
push
lods
enter
xor
aaa
adc
mov
divb
dec
mov
add
insl
fldcw
adc
mov
sub
pop
sub
inc
sbb
aad
jb
das
bound
pop
cmp
aam
or
adc
push
and
dec
arpl
scas
mov
pop
test
test
push
or
push
je
jne
cld
inc
in
sbb
bound
sbb
push
dec
dec
push
test
push
push
dec
cld
mov
repz
cmp
adc
push
jo
push
loop
cmp
inc
dec
mov
mov
xchg
insl
je
shll
outsl
inc
icebp
cwtl
lock
cmp
or
sti
inc
mov
pop
mov
bound
inc
mov
outsl
clc
sahf
loope
mov
lcall
mov
pop
lret
mov
sub
pop
cwtl
mov
jb
test
pop
js
fdivrl
rcrl
xor
mov
cmpsb
xsave
or
or
fnstenv
xchg
out
inc
ljmp
and
into
sub
popf
or
push
gs
aaa
sub
jg
idivl
mov
out
fadd
mov
lods
in
arpl
xchg
mov
adc
ret
push
in
cmpb
pop
rcrb
jns
jae
pop
xchg
nop
enter
cmpsb
neg
push
enter
aad
mov
and
imul
dec
pop
leave
xchg
jle
add
ja
adc
fstpt
insb
das
test
add
mov
flds
test
jb
je,pt
sahf
push
call
jo
mov
loop
pop
inc
xor
sub
cmpsl
ds
dec
and
inc
xchg
dec
mov
mov
shlb
fistpll
in
mov
dec
aas
xor
inc
pusha
imul
rol
mov
sbb
add
add
stos
aaa
stc
popa
int
imul
push
adc
stos
mov
mov
mov
es
mov
push
add
leave
sub
adc
aad
add
mov
rcr
adc
cs
lods
test
adc
jge
and
xchg
inc
cmpsb
lds
pop
push
sbb
jge
push
xchg
dec
out
je
sti
cltd
or
repz
push
test
shlb
data16
inc
jns
inc
mov
add
mov
jmp
add
shrb
adc
sub
mov
mov
jg
push
andl
push
mov
mov
lods
push
ja
sbb
pop
out
insb
movsb
addl
loop
ret
mov
fisttpll
xor
lds
xor
in
aas
rep
test
and
jo
mov
sbb
or
je
adc
ss
jp
inc
mov
push
dec
sahf
pop
pop
sub
loopne
xchg
popf
xlat
jge
pop
sbb
sarb
pop
mov
mov
shl
inc
add
shlb
movl
jno
xchg
loop
dec
dec
gs
or
pop
adc
shll
xor
pop
cltd
mov
sbbb
pop
cmc
inc
fwait
das
mov
add
or
sbb
test
sbb
xorb
dec
cli
dec
aaa
mov
pop
mov
pop
add
mov
mov
dec
pushf
fnstsw
mov
addb
cs
int
das
add
daa
repnz
jmp
push
cmp
adc
es
pop
mov
stos
xchg
sbb
add
sbb
mov
stc
inc
sarb
das
push
fwait
cmp
js
add
outsb
adc
js
out
lret
sub
xchg
arpl
adc
xchg
loop
jnp
call
ret
pop
outsb
sbb
and
hlt
cmp
or
pushl
shll
sub
std
cli
sub
xchg
mov
test
mov
insl
dec
jp
sti
daa
dec
iret
jb
mov
das
mov
lcall
das
xchg
popa
leave
out
loop
pop
mov
inc
popf
rcrl
dec
pop
cwtl
inc
sbb
lret
pop
cmc
arpl
or
test
mov
out
rcr
rcrb
jno
repz
pusha
adc
add
movsl
xor
call
cmp
mov
jno
xor
sub
mov
rorb
pushf
push
push
enter
add
lods
pop
pusha
jle
roll
sbb
push
aad
mov
je
pop
and
movsl
xchg
fidivs
cmp
cltd
add
mov
ss
mov
mov
mov
bound
outsb
lock
sar
jmp
mov
pop
into
loop
ficoms
xchg
jb
aam
mov
mov
xor
cmpsb
shrl
cmp
daa
or
inc
cmpsb
push
out
push
add
mov
pop
shl
xor
sub
dec
andb
daa
add
jle
adc
and
sbb
sub
cmp
pusha
pop
push
push
mov
mov
shr
sar
or
sbb
sub
cmp
pusha
pop
push
push
mov
mov
shr
sar
or
sbb
sub
cmp
pusha
pop
push
push
mov
mov
shr
sar
or
sbb
sub
cmp
pusha
pop
push
push
mov
iret
xchg
daa
das
pop
aas
pop
dec
aaa
pop
fsubrs
jnp
add
out
mov
jmp
sti
jp
or
cmp
pop
fsubrs
jnp
or
cmp
lahf
dec
sti
js
imul
dec
rcrl
imul
loope
xchg
sbb
lret
stos
sbb
clc
jbe
jle
cmp
enter
pushf
or
sbb
sarb
add
and
add
mov
aam
arpl
xchg
out
sahf
pusha
testb
lahf
data16
int
cmp
js
js
lea
jne
aaa
rcrb
mov
pushf
push
fimuls
cwtl
push
push
lret
int
cwtl
adc
xchg
std
sub
adc
into
jnp
push
cwtl
pop
fcomps
test
pop
aad
push
inc
lret
sbb
cmpsl
data16
xchg
repz
mov
das
cmp
pop
inc
sbb
clc
cmp
sti
sub
cltd
xchg
dec
sub
cmp
fwait
xor
mov
jns
xchg
mov
fwait
dec
mov
adc
push
stos
xlat
shrl
adc
clc
jnp
or
cmp
jmp
sti
popa
mov
fwait
bts
mov
fmuls
jmp
push
testb
aad
and
and
gs
out
sub
push
dec
mov
fdivrs
cwtl
push
std
dec
sti
ja
sub
cmp
scas
xor
cmp
jp
ja
inc
mov
mov
or
sbb
lret
dec
fistpl
push
fwait
sbb
enter
call
sbb
lret
dec
fistpl
push
fwait
sbb
enter
leave
pop
jmp
mov
std
xchg
adc
push
mov
loop
je
jb
xor
and
or
clc
and
fdivr
jne
add
je
mov
shrb
jp
adc
aaa
mov
out
int3
xchg
out
dec
bound
add
jno
jp
inc
lret
xor
sub
fisubrs
dec
mov
mov
inc
pop
out
pusha
push
fistps
mov
in
and
add
jge
push
sbb
shll
pop
es
or
fildl
iret
xchg
mov
cmpsl
adc
fcompl
or
cld
add
pop
inc
outsl
mov
pop
jmp
adc
mov
mov
outsl
inc
add
in
push
das
inc
push
pushf
sbb
decl
sub
xchg
test
into
mov
dec
mov
xchg
iret
repnz
mov
push
daa
orl
rol
mov
push
iret
ret
inc
cmp
in
push
test
push
leave
mov
jns
fiadds
cmp
xor
push
lods
aad
mov
leave
lock
adc
popl
je
push
xchg
cmc
inc
enter
dec
dec
gs
ficoml
mov
mov
xchg
std
jbe
sub
add
sti
mov
rorl
cmp
and
xor
sarb
dec
test
popf
lret
iret
loop
mov
testb
jno
aaa
stos
inc
jbe
sarb
je
push
andb
cmp
xchg
out
mov
mov
add
cmp
jbe
popa
mov
sub
push
xchg
ljmp
stos
adc
dec
nop
jp
clc
int3
aas
add
in
cli
rorb
xor
xchg
data16
roll
nop
ljmp
sbbb
cltd
je
arpl
je
in
call
jle
adc
ror
push
shl
in
cmpb
adc
adc
jmp
popf
aas
sub
or
mov
nop
stc
clc
sub
mov
cmpsl
or
shll
loop
and
mov
scas
mov
repz
negb
sbb
mov
iret
inc
jle
push
lea
pop
lods
dec
inc
shl
pop
loop
lret
inc
js
out
mov
push
push
and
jo
xchg
mov
pushw
outsl
jo
cld
movsb
cs
jecxz
cmpl
loope
mov
cmp
inc
inc
push
jns
xchg
data16
and
leave
adc
sbb
scas
jle
fmul
mov
mov
pop
jle
push
imul
mov
out
dec
adc
and
dec
cmpsl
outsb
fwait
repz
stos
daa
mov
sbb
aam
iret
mov
pop
or
std
outsb
mov
push
sbb
fwait
ss
or
imul
test
push
fwait
sar
mov
cmc
push
sbb
dec
in
push
aam
fdivrp
lock
ds
mov
scas
sahf
out
or
mov
fwait
xor
sbb
subl
push
rcll
jne
popf
sbb
in
imul
lods
js
test
cmpsl
lret
xchg
outsb
insl
pop
jnp
fistps
ret
push
movsl
mov
lret
lock
ss
jmp
arpl
sbb
stos
cmpl
pop
ret
mov
lds
xchg
sub
ja
jns
inc
hlt
cltd
addr16
or
cmpsb
in
jnp
sti
incb
mov
xchg
jb
cmc
iret
mov
es
cmpsl
jb
jns
lods
ret
test
fsubrl
inc
pop
movsl
adc
mov
jae
push
scas
enter
outsb
lahf
pop
gs
in
jmp
cmp
xor
jbe
xchg
adc
out
imul
sbb
jp
jae
xlat
imul
and
xor
inc
les
push
je
pop
mov
dec
add
test
fisttps
dec
or
test
dec
das
adc
lahf
inc
sub
fisttpl
fidivrs
pop
jnp
jge
ficompl
sbb
mov
ret
cld
sbb
dec
fsubs
testl
jg
je
inc
pop
cmpsb
lock
ret
cmp
xchg
mov
mov
jge
mov
sub
push
adc
xchg
mov
mov
push
addl
test
push
or
mov
pop
inc
inc
pop
xchg
sbb
pop
hlt
ja
cs
add
aam
push
inc
cli
mov
lock
sbb
sub
stos
fwait
push
aaa
int
sbb
cs
sbb
cwtl
insb
push
and
jbe
rorl
mov
cmp
pop
mov
xchg
add
xor
adc
ret
mov
imul
push
sbb
clc
mov
ds
pop
cli
sub
lcall
lds
inc
enter
in
shr
cmp
outsb
push
push
pop
jae
aad
jno
inc
daa
cmp
je
negb
xchg
inc
js
jnp
pushf
dec
cmp
push
jno
push
les
add
scas
loopne
adc
adc
test
lods
mov
xchg
rorl
xchg
push
add
fsubrs
pop
out
iret
mov
mov
clc
ja
dec
adc
idivb
and
dec
rcll
or
pop
fcompl
xchg
fisttpll
pop
push
sub
mov
and
push
push
fcoml
pop
adc
stc
popa
cwtl
or
push
mov
rolb
rcr
addb
or
nop
or
push
outsb
xor
mov
or
jns
test
aam
sbb
add
pop
scas
test
xchg
jb
pop
lods
aam
pop
xchg
mov
mov
repz
xchg
div
out
cltd
mov
ret
in
add
cmp
lcall
fstps
scas
cmp
aas
jmp
hlt
loopne
pop
xlat
out
pop
push
ljmp
push
pop
test
push
dec
dec
add
or
or
and
pop
mov
xor
pop
add
adc
mov
pusha
aas
data16
xor
pop
sahf
dec
daa
xchg
mov
pushl
mov
cmp
cmpsl
outsb
jae
push
ror
fucomip
out
in
fldenv
mov
adc
bound
mov
sub
addl
jno
stc
push
xor
and
fbstp
push
test
sbb
cmp
lds
insl
notl
pop
std
in
sub
ret
sti
fsub
adc
mov
popf
mov
xchg
sbb
push
lea
mov
daa
push
lret
ljmp
xlat
pusha
scas
shrl
dec
popa
add
cltd
pop
clc
stos
stos
icebp
stc
mov
fstpl
push
pushf
xchg
push
push
sub
pop
mov
adc
xlat
pusha
sete
fcompl
cld
outsl
jno
sub
pushf
xchg
push
das
adc
mov
jnp
adc
ret
shl
mov
out
mov
int
jg
ds
seta
pop
xchg
mov
inc
inc
and
aad
rol
inc
test
and
test
dec
mov
push
pop
stos
mov
xchg
sub
mov
in
sar
or
mov
jae
lods
mov
push
cmp
mov
jge
jge
nop
int
lret
jnp
fs
testl
pop
xor
dec
sub
cmp
and
gs
jne
jl
fildl
jnp
das
mov
je
jmp
add
xor
inc
negl
out
lock
pop
sub
sahf
les
cmpsl
das
jmp
stc
fistpl
inc
xor
sti
ret
sub
or
mov
cwtl
popl
xchg
out
ljmp
cmp
imul
loope
cmp
movsl
addb
nop
and
cs
mov
les
add
loop
sub
daa
sbb
mov
push
xchg
xchg
jg
xor
bnd
jecxz
jecxz
call
adc
stos
ds
movsl
cli
jb
adc
fbstp
mov
inc
popf
mov
ficoml
into
xor
repz
loope
inc
inc
or
dec
mov
xchg
mov
mov
add
lea
scas
xor
out
cmp
mov
xchg
cmpsb
xor
sbb
test
int3
push
inc
mov
arpl
jae
hlt
jns
and
lock
outsl
test
int
stos
sbb
mov
clc
push
cmpsl
das
lahf
aaa
loopne
xchg
fisttpl
pop
mov
shl
incb
or
jns
pop
add
xchg
add
imul
push
pop
out
andb
mov
ja
sahf
sub
push
add
xchg
scas
repnz
cltd
pop
mov
sub
ds
and
add
ret
inc
inc
mov
aad
ficoms
stos
cmpsl
lock
testl
pop
mov
nop
mov
sub
gs
mov
pop
push
movsl
clc
sub
and
imul
fs
test
stc
or
add
cmp
adc
push
push
inc
ljmp
cmp
cmp
or
pop
shrb
mov
mov
sbb
ja
in
vmread
loopne
iret
jl
aas
sti
stos
in
xchg
popa
in
in
sub
sub
clc
pop
aas
testl
adc
jg
gs
xor
rcr
stc
icebp
sub
jecxz
add
nop
pop
jg
rcrl
dec
mov
jb
test
adc
jle
fnstsw
stos
add
dec
aam
pop
add
pop
jns
leave
jmp
jo
pop
pop
cs
leave
lret
xchg
adc
ret
sbb
push
stos
xchg
es
push
fistl
div
iret
int3
subb
inc
das
adc
or
outsl
lds
aas
pop
pop
push
ds
xchg
inc
cmp
lock
fdivrl
mov
int
arpl
mov
out
sbb
into
add
cmp
push
loop
push
sarl
adc
mov
cmp
movsl
cmp
repz
jnp
movsb
adc
aam
je
loope
pusha
mov
mov
xchg
hlt
pop
push
xor
push
cmp
inc
adc
pushf
rcrl
pushf
sbb
sub
insb
lock
rol
lahf
cmp
outsb
rorl
mov
cltd
adc
dec
cli
outsb
or
adc
ja
dec
pop
push
xadd
shr
dec
add
stc
fucomip
xor
or
ss
lret
leave
xor
dec
mov
add
popa
mov
mov
fstpt
sub
xchg
inc
dec
stc
mov
pop
fisttpll
inc
das
std
lcall
add
and
push
push
jle
jns
pushf
stos
aam
xor
clc
jae
insb
fsincos
inc
imul
outsb
xor
outsb
or
mov
jnp
aas
mov
jne
mov
mov
std
mov
repnz
stos
xchg
fcomps
fldenv
fcompl
xchg
sbb
dec
push
cmpsb
and
into
test
cwtl
enter
lock
cmp
sbb
cmp
inc
cmp
test
je
jmp
cmc
aas
dec
mov
aas
cmp
std
add
pop
xor
les
mov
cmpsl
dec
pop
fldl
xor
leave
mov
mov
push
xchg
mov
roll
pop
dec
insb
mov
in
int3
into
int
lret
ftst
scas
push
dec
es
lret
outsb
and
and
and
fisubs
ret
scas
std
inc
jb
mov
loope
mov
shrl
mov
js
fidivrl
nop
dec
sub
sbb
mov
loope
add
pop
inc
add
les
orb
lock
jns
sbb
adc
dec
outsl
std
adc
cmp
ja
jne
cli
sub
imul
arpl
in
lcall
hlt
push
test
sbb
mov
dec
icebp
ret
test
jbe
hlt
test
lret
pop
mov
insb
pop
ret
jge
test
repnz
pop
pusha
mov
pop
cmpsb
cli
mov
outsb
xor
sbb
mov
lret
pop
mov
dec
lcall
into
addr16
jno
test
movsl
jno
mov
or
or
imul
sub
add
dec
leave
pop
lcall
loop
add
subb
adc
iret
xor
or
sbb
movsl
ret
inc
in
lret
push
or
or
out
test
clc
imul
iret
cmp
pop
fidivrs
push
sbb
int3
jle
mov
ret
cmpsb
inc
sahf
les
call
into
loope
arpl
rclb
push
sti
jge
mov
jno
mov
fwait
xchg
loopne
xchg
inc
mov
ret
inc
push
lahf
aas
jp
jp
mov
movsb
dec
xchg
loopne
adc
jecxz
hlt
inc
scas
jge
fadds
cmpsl
setno
pop
out
repz
jo
and
cmc
jb
out
out
call
cld
fxch
rorb
arpl
add
jo
pushl
cwtl
ds
sbbb
hlt
mov
mov
xor
inc
mulb
mov
nop
cli
scas
sbb
mov
or
adc
stos
sub
mov
inc
movsb
ret
adc
int3
insb
not
fsubrs
out
adc
shlb
xchg
shll
and
int
jne
fwait
cmp
cwtl
add
jne
enter
rorl
pop
xor
insl
adc
push
lret
cli
cltd
shl
add
sub
jle
neg
sti
jae
sbb
cmp
jns
mov
dec
imul
pop
mov
lock
inc
mov
push
out
dec
lods
mov
xchg
dec
icebp
in
sbb
lds
dec
cmp
mov
daa
sbb
test
pop
and
dec
and
push
cmp
lea
mov
sub
fsubs
and
push
or
push
dec
cmpb
pop
sub
rcrl
mov
rcll
out
and
fdivl
ds
pop
cmpsl
inc
imull
into
popa
cmp
jmp
and
or
lock
push
mov
in
inc
sub
mov
cmpsb
dec
or
inc
sbb
mov
dec
pushf
cmpsl
ret
push
mov
cmpsb
inc
or
inc
inc
mov
fs
push
dec
mov
shlb
out
repz
push
push
add
inc
mov
sbb
int
movsb
rcl
xchg
and
andb
frstor
push
movsl
push
adc
das
jbe
cltd
popf
stos
push
inc
insl
es
jl
fs
or
mov
or
lahf
cld
ret
loop
test
icebp
pop
rcrl
add
add
cli
lret
dec
lcall
lret
jne
lods
enter
pusha
mov
outsl
stc
mov
mov
pop
arpl
dec
sbb
jb
jo
icebp
jge
sti
jecxz
aad
ds
dec
movsl
arpl
ja
ljmp
movsl
xor
add
jge
mov
push
addr16
mov
adc
jno
data16
ljmp
xchg
push
cmp
adc
adc
aam
fwait
and
sbbb
add
mov
lods
push
ljmp
mov
adc
add
in
out
daa
out
xchg
adc
xor
in
cmp
xchg
addr16
scas
and
pop
hlt
aas
cmp
test
fsubrp
call
pop
rorl
sbb
pushfw
cmpsb
stc
xchg
jbe
mov
filds
xchg
cmp
jnp
push
addr16
lret
add
sub
nop
clc
adc
pop
sbb
pop
leave
pop
bound
popf
lods
mov
or
add
mov
push
xchg
scas
and
mov
add
and
aam
outsb
popf
pop
inc
jo
mov
lods
xchg
fwait
lret
movb
jo
mov
ficoms
ret
sub
in
test
fcoms
call
adc
pop
out
in
out
adc
sbb
and
fidivrs
adc
push
stc
mov
lcall
aad
push
cmp
stos
mov
or
xor
push
jae
jmp
fmuls
cmc
sub
adc
adc
fwait
push
and
sbb
fdivrs
jg
pop
cli
pusha
push
or
in
sbb
mov
xchg
pop
dec
sbbl
aad
xchg
cmpsb
loope
imul
decb
arpl
adc
add
add
push
lds
add
mov
rclb
mov
into
xchg
pop
pushf
mov
dec
mov
sub
cmp
mov
das
lahf
add
or
lea
xchg
in
dec
outsb
mov
push
lahf
int3
cli
cmp
lods
mov
dec
mov
jnp
dec
mov
pushf
loop
int
aas
shll
push
dec
sub
bnd
lea
inc
jbe
mov
mov
cli
lds
jl
cmpsl
jns
cmp
rol
cmp
pop
ja
into
push
arpl
sub
sbb
xchg
sbb
icebp
sub
test
sub
or
lods
add
pop
push
dec
mov
push
mov
mov
mov
movl
mov
xor
pop
lods
out
aas
mov
push
push
mov
pop
fnstsw
insb
jl
repz
cmpsl
daa
mov
nop
mov
cli
hlt
pop
pop
dec
insb
cmp
push
enter
movsb
leave
mov
lcall
ljmp
je
sti
loopne
in
xor
stc
sbb
push
dec
pop
mov
es
jg
mov
mov
push
add
push
bound
lock
sub
adc
adc
clc
sarb
or
pop
stos
aaa
out
add
mov
cmc
fistpll
adc
nop
out
in
adc
repz
jle
outsb
push
shll
push
xorl
imul
clc
aaa
imul
xlat
dec
mov
rclb
xor
lret
inc
or
dec
mov
fldl
push
mov
mov
lods
jns
dec
mov
and
mov
jae
sub
inc
les
inc
mov
pushf
aad
repnz
mov
cmp
push
sbb
mov
or
and
stos
dec
fadd
or
cmc
fisubs
xchg
fidivrl
into
or
mov
mov
mov
push
jo
jns
xorl
out
mov
mov
inc
mov
pop
jl
jo
je
sarl
mov
sub
xchg
rorl
inc
add
inc
fildll
ds
aaa
pop
dec
xor
out
mov
xchg
or
je
mov
imul
test
push
ret
out
xchg
filds
test
pusha
pop
popa
call
and
cli
jp
out
mov
xchg
les
call
popa
imull
sbb
xchg
cld
jae
adc
incl
sbb
inc
dec
loop
aam
test
sub
mov
or
xchg
xchg
xchg
idivb
xorb
out
xor
vpmulhw
mov
add
loop
loope
filds
cmp
mov
into
lret
sbb
inc
dec
and
mov
or
cmp
push
aam
push
call
lock
push
in
jnp
push
push
shrb
popf
jae
cmp
stos
mov
mov
call
sti
leave
jge
loope
adc
mov
lret
stc
sbb
incb
jae
inc
ret
add
adc
dec
out
ljmp
jle
dec
mov
daa
inc
jmp
fbstp
pop
push
inc
cwtl
xchg
sahf
and
pusha
push
out
sti
add
fbstp
sbb
stos
stos
aad
daa
push
pop
lods
imul
push
and
cli
lods
fdivl
cmp
sbb
ret
leavew
add
jno
movsl
mov
push
inc
push
xor
sub
xchg
xchg
xor
mov
adc
loopne
int3
jp
adc
in
xchg
mov
sti
push
and
cmp
fisttpll
push
jns
fs
pop
sti
popf
add
mov
addr16
mov
iret
arpl
sbb
popa
push
and
and
pop
and
icebp
test
js
or
testl
mov
cmpsb
std
out
cli
mov
ret
fdivl
popf
cmp
lahf
xchg
sub
imul
push
xchg
fldl
addb
mov
adc
mov
mov
sub
pushf
and
mov
int3
push
dec
icebp
inc
pusha
sti
add
jl
inc
mov
sub
and
push
pop
sbb
cli
scas
dec
mov
je
jae
subb
in
xor
mov
xchg
jl
nop
jae
xchg
jmp
mov
aaa
rorl
add
sub
aam
and
pop
sub
add
inc
mov
lods
inc
mov
and
push
push
inc
xor
mov
xor
cli
push
dec
sbb
je
xchg
hlt
inc
xchg
mov
loopne
loopne
sub
fcmovu
pop
mov
mov
mov
lea
inc
push
dec
adc
lods
cmp
ret
stos
out
movsl
adc
mov
jnp
or
cmp
jmp
sti
js
or
cmp
pop
fsubrs
jnp
or
cmp
jmp
sti
js
or
cmp
pop
fsubrs
jnp
or
cmp
jmp
sti
jns
or
cmp
pop
fsubrs
jnp
or
cmp
inc
push
adc
push
xlat
inc
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
adc
xor
sti
mov
nop
and
mov
add
push
pop
add
add
add
add
add
inc
add
add
add
add
cld
add
add
add
in
add
add
or
out
add
int3
add
aaa
add
add
lds
insb
add
ret
add
sbb
int3
add
sbb
jo
inc
add
add
add
add
add
add
jo
jge
jge
inc
add
add
add
add
add
add
add
add
add
and
cmp
sbb
sbb
push
mov
add
add
add
add
lds
add
add
add
jg
or
add
inc
add
add
nop
add
add
out
xchg
add
dec
add
add
add
add
add
add
add
add
aaa
add
add
add
int3
add
add
add
add
push
add
add
add
popf
add
add
mov
mov
lcall
add
mov
mov
add
add
pop
int3
add
add
add
add
mov
mov
add
int3
add
add
xchg
add
mov
inc
add
adc
sbb
aaa
add
add
add
add
aam
add
push
add
add
xor
mov
add
add
cmpsl
add
add
add
add
add
add
add
sbb
cmpsb
add
add
add
add
cmp
sbb
ret
add
add
arpl
addb
add
add
pop
add
add
add
and
movl
sub
dec
add
imul
cld
add
add
add
add
add
add
add
dec
add
add
cmp
pop
add
add
add
add
add
add
add
dec
add
inc
add
add
add
add
bound
jne
ret
add
add
add
add
add
push
aad
mov
inc
add
add
add
add
add
add
add
movl
adc
add
ja
cmpsl
add
add
add
add
add
popa
add
mov
dec
add
add
add
add
int3
add
add
pop
nop
add
add
add
add
add
add
adc
add
push
add
add
add
arpl
in
add
pop
add
add
inc
add
pop
add
scas
add
add
jnp
addl
mov
add
add
or
out
add
mov
add
add
add
push
add
add
add
mov
arpl
faddl
cs
add
add
add
push
add
mov
add
add
xlat
add
add
adc
add
add
add
add
add
add
add
add
adc
push
add
add
add
lds
add
sbb
add
add
add
add
xlat
add
add
inc
add
add
add
add
add
lds
int3
add
jns
add
or
add
add
stos
add
lds
add
sbb
add
iret
add
add
add
add
mov
adc
aad
add
inc
popf
fmul
stos
lcall
sub
cwtl
mov
push
lahf
outsb
fistl
or
nop
mov
loopne
stos
jne
andb
dec
add
jmp
xor
repnz
jg
rol
cmp
test
lock
mov
inc
jo
sahf
jmp
cli
push
icebp
aad
fstl
cmc
add
int
jne
sbb
sub
or
cmp
mov
jbe
pop
inc
sub
stc
sahf
jmp
jo
push
ror
jae
mov
push
adc
aad
mov
ret
imul
pop
sbb
add
xor
pop
sub
mov
insl
pusha
aas
xor
and
or
inc
in
inc
cmp
push
mov
je
xlat
mov
jl
movsb
sub
xor
and
in
inc
test
enter
pop
mov
repnz
rcrb
stos
mov
add
out
out
aam
mov
arpl
push
xchg
xchg
and
data16
or
adcb
xchg
mov
mov
push
stc
inc
sysexit
call
pop
loopne
les
xor
push
mov
inc
xor
fnstsw
and
sahf
sarb
mov
enter
sti
sub
in
lret
and
mov
xorb
filds
cmp
xor
and
gs
fsub
adc
push
inc
or
jecxz
jmp
outsl
stos
sub
mov
cmp
test
mov
or
xchg
aam
imul
div
sbb
int
dec
insb
js
push
std
add
xor
mov
ret
imul
test
testl
jne
das
xor
inc
enter
lea
pop
aam
test
or
lock
aam
loope
inc
lods
loopne
pop
nop
jne
movlps
mov
stos
or
movsb
cltd
cmp
sub
lods
add
adc
std
dec
iret
mov
or
or
sbb
adc
andb
shlb
subb
iret
fimuls
cmc
and
mov
ret
cmp
aam
sbb
mov
dec
sub
jecxz
rcr
movsl
pop
mov
jmp
rcrb
ss
pusha
lock
mov
pop
int3
enter
test
sbb
xor
stos
fstpl
push
mov
xor
dec
mov
mov
adcl
pop
xchg
xorl
sbb
dec
xchg
mov
aaa
adc
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
