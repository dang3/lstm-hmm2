call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
and
adc
bound
jl
out
dec
push
push
cmpb
loop
repnz
cmp
cmp
xor
outsb
ljmp
inc
stos
push
mov
jecxz
xchg
jp
imul
cmp
repnz
xchg
adc
test
idivl
dec
xorb
cmp
mov
sahf
jnp
data16
cwtl
xor
jnp
roll
cmpsl
loope
es
popa
into
xchg
into
fwait
andb
dec
add
fs
and
xor
mov
jp
jp
scas
dec
ret
ja
xor
add
stos
fdivl
lcall
mov
xchg
xchg
push
sbb
cmp
lcall
popf
stos
jb
mov
sbb
test
mov
aas
cmp
adc
cli
leavew
cli
fnstcw
subb
jp
faddp
ffree
scas
cmp
ljmp
mov
dec
mov
or
push
pop
mov
sub
fs
cli
adc
xchg
hlt
mov
hlt
jae
arpl
sub
pop
dec
scas
inc
fidivl
push
or
push
xlat
mov
aas
notl
stos
sub
fidivl
jae
or
pop
test
into
pop
lds
loopne
sbbb
cmp
inc
xchg
pop
dec
mov
arpl
jb
inc
stos
push
mov
subb
loop
repnz
sub
cmp
lret
add
adc
bound
push
mov
subb
loop
repnz
sub
cmp
lret
ror
jmp
sub
lock
lret
faddl
loope
mov
xor
pop
je
pop
jno
sub
adc
lahf
dec
test
push
aaa
inc
and
mov
inc
and
das
inc
push
ret
leave
sub
pop
add
cmp
mov
push
adc
mov
cmpsb
popf
ljmp
ret
dec
xchg
ficoml
dec
jb
or
lahf
andl
jle
mov
std
les
mov
lock
in
lock
fiaddl
mov
xchg
test
pop
xor
add
sbb
bound
push
rorb
js
das
jg
cli
sub
or
sub
negb
mov
fiadds
jmp
int
daa
fbstp
out
xchg
lahf
popf
dec
mov
lret
sbb
fxch
gs
jecxz
push
or
adc
mov
mov
scas
push
aam
mov
jb
sarb
sub
stos
test
jbe
cmp
in
aaa
in
or
mov
fstps
lcall
lret
pop
jno
pop
mov
dec
pop
xor
stos
enter
in
adc
push
fcmovne
fstpl
push
xchg
fiadds
stc
js
repz
inc
inc
dec
pushf
test
xor
dec
xchg
xchg
cmp
repnz
in
jge
jecxz
scas
sarl
les
adc
int
mov
int
mov
sbb
loopne
ljmp
cmpsb
fmuls
mov
xchg
push
fcompp
push
mov
cmp
cmc
cmc
movsl
es
cltd
xchg
imul
test
mov
pop
xor
bound
pusha
ljmp
imul
pop
pop
fwait
lahf
loopne
shrb
std
popf
sub
flds
fmull
loope
pop
sub
pop
lods
add
inc
xor
jae
out
inc
jg
pop
mov
push
pushf
push
pop
insl
lret
in
outsl
xor
hlt
pop
dec
rcrl
push
mov
mov
aas
cli
and
mov
insb
xor
sahf
lods
jns
sbb
mov
xchg
loope
std
jle
mov
call
mov
outsl
std
pop
push
cmp
inc
mov
in
cmc
jge
mov
aaa
mov
xchg
or
pop
idivl
push
mov
cmpsb
sub
and
mov
out
jne
sbb
call
cmpsb
jge
je
dec
ljmp
popf
inc
leave
dec
xchg
repnz
fwait
sub
arpl
addl
push
lods
divl
push
jae
into
in
ljmp
mov
and
add
mov
shlb
dec
les
ja
gs
cmp
mov
jb
aas
mov
cmpsb
lods
mov
push
xor
sbb
mov
inc
xor
lcall
aas
xor
in
inc
jnp
aaa
fnstcw
xchg
jp
push
add
cmpsb
jl
cmc
cmpsb
jns
shlb
in
cmp
in
mov
mov
xor
stos
fwait
int
sti
rorb
push
dec
fs
addb
imul
xchg
cli
sub
ss
add
test
popf
std
iret
clc
cmp
add
sti
clc
inc
add
adc
mov
lds
mov
pop
test
aad
outsb
pop
add
pusha
movsb
in
or
daa
mov
sbb
inc
sti
mov
push
xchg
push
lods
lcall
mov
ljmp
jp
inc
enter
fmull
nopl
leave
mov
cmpsb
and
inc
mov
cs
xchg
mov
popa
out
or
pushf
imul
jl
cmp
popa
xchg
stos
sbb
fisubrl
jp
sub
inc
push
inc
pop
and
fists
inc
push
fs
xchg
add
push
pop
int3
lea
sub
xchg
daa
mov
test
jp
idivb
ret
add
fucomi
outsb
cltd
aad
aad
fisubrs
xor
push
enter
and
xchg
jl
movsb
sub
dec
cs
imull
fistpl
push
add
and
or
sbb
cld
jg
call
add
sbb
jg
fsubrs
pop
mov
rclb
dec
gs
out
int
sbb
xor
sbb
ds
or
sbb
add
and
lods
mov
into
mov
std
outsb
mov
lock
adc
mov
loop
adc
mov
and
std
push
xchg
dec
fsubr
or
sub
or
test
sbb
push
dec
jp
in
or
iret
or
mov
and
cmp
mov
xchg
xchg
ficompl
add
xchg
loopne
stc
aaa
into
mov
outsl
cmp
push
subb
addr16
out
and
icebp
mov
push
add
lods
cld
jp
add
test
xor
or
add
rcrl
adc
or
in
insb
lods
push
loop
push
or
push
xchg
outsl
jo
in
mov
pop
inc
scas
and
adc
sahf
fsubs
lahf
xor
test
dec
fdivrs
in
sbb
xor
fwait
test
mov
jbe
or
jbe
lret
adc
push
mov
mov
xchg
ret
mov
push
rcr
jae
xor
adc
andl
jne
insl
add
push
or
jl
xor
adcl
rcpps
pusha
fisttpll
adc
popa
stos
in
notb
add
rcrl
mov
mov
pop
pusha
dec
popf
loop
dec
push
fldln2
add
mov
cmpsb
xchg
mov
jp
ret
stos
push
pop
jns
push
test
xchg
ss
adc
xchg
push
and
mov
jge
xchg
mov
add
cmpsb
loop
push
psraw
ja
mov
dec
mov
cmp
sbb
sub
or
sub
cmpsb
or
shrb
pop
daa
mov
jecxz
or
mov
repz
sbb
lods
and
pop
mov
jno
push
mov
test
jle
out
sarl
jp
fcmovbe
jg
shlb
add
push
aad
xchg
je
stc
add
fdivl
inc
pop
sub
pop
ret
das
adc
sbb
clc
sarb
pusha
in
push
pushf
pop
sbb
test
inc
rcll
lcall
bound
imul
or
and
ja
pop
pop
mov
addb
in
inc
sbb
add
sbb
sbb
or
push
mov
xchg
iret
int
std
dec
lret
sahf
jb
or
cmp
popf
mov
dec
mov
fildll
xor
mov
cmp
outsb
rorl
ficoml
add
les
jo
int
cmp
int3
jl
and
jae
or
lods
cld
insb
in
add
sub
test
outsb
or
pop
ret
icebp
dec
jl
js
arpl
or
mov
int3
popa
or
pusha
fidivl
imul
scas
rcrb
decl
andb
dec
jle
addb
jge
les
cli
jecxz
sub
jmp
cld
push
adc
mov
add
aas
xchg
and
inc
sbb
movsl
ret
pop
bound
int
inc
cmp
jno
sub
adc
orb
xor
jns
ds
shrb
mov
jne
mov
adc
stos
std
xchg
mov
je
out
loopne
mov
lcall
xor
mov
imul
xchg
pop
jp
sbb
sub
arpl
push
das
and
std
pushw
call
in
les
pop
add
xchg
xchg
out
add
popf
test
jbe
aaa
sti
pop
xchg
pop
int
ds
adc
inc
or
js
ljmp
out
jnp
negb
out
push
lods
or
adc
adc
test
and
or
push
addl
sub
loope
xlat
orb
ljmp
stc
addr16
adc
nop
movsl
cmc
mov
sub
adc
in
and
sub
inc
pop
scas
mov
cmp
stos
cmpsb
sti
add
in
mov
mov
jmp
mov
inc
mov
gs
out
ret
xor
das
push
mov
xchg
and
pop
mov
adc
dec
jnp
jnp
popf
lock
out
es
sbb
mov
cmp
int3
mov
std
push
ret
adc
xchg
mov
scas
inc
dec
outsb
mov
and
sub
jg
xlat
jne
jnp
stos
push
lods
pop
lock
mov
movsb
xor
pusha
pop
cmp
dec
mov
inc
or
xchg
dec
inc
fsubl
sbb
mull
rorl
lea
insb
lret
out
push
lods
xor
jecxz
aas
cmpb
imull
enter
subl
fildll
ljmp
out
sub
push
pop
out
rolb
xor
arpl
pop
fldpi
scas
pop
or
aaa
aas
pop
push
inc
xor
xchg
scas
mov
lret
insb
jno
out
loop
shr
pop
call
push
push
adc
or
addl
ret
imul
clc
daa
mov
and
les
dec
aad
inc
pop
mov
sbb
cltd
inc
test
stos
xor
lahf
sbb
jnp
aaa
mov
shll
xor
lahf
jbe
sbb
or
cli
fldenv
xor
xchg
lret
dec
mov
pop
push
jbe
dec
add
xchg
shlb
fnsave
pop
std
shld
pop
add
int
jb
add
fimuls
daa
mov
lds
call
mov
pop
pop
and
pop
ds
stos
jae
in
gs
insl
xor
mov
insl
pop
inc
mov
dec
push
pushf
xchg
sub
in
in
sub
lret
xor
bound
mov
call
push
pop
outsl
stos
outsl
xor
pop
pop
cmp
dec
stc
mov
lcall
inc
pop
loopne
mov
dec
xor
push
jbe
push
jnp
jbe
xchg
inc
fbld
cmp
outsb
mov
icebp
out
sub
or
call
mov
fwait
mov
sti
mov
add
sbb
sarl
lahf
subb
xchg
test
shlb
call
jns
fisubl
dec
notb
xchg
cmpb
xchg
lcall
scas
aad
xchg
shrb
lds
push
adc
dec
testb
add
shrb
pop
inc
xor
push
shrl
sarb
and
dec
pop
mov
cmp
push
push
lea
pusha
sub
fiaddl
xchg
stos
mov
rorl
das
cli
pop
in
mov
lcall
lods
icebp
cmovbe
add
cmp
cmpsl
sbb
add
or
lods
cmp
add
andl
push
popf
fldcw
mov
repz
scas
pushl
inc
dec
xor
jge
jnp
xchg
add
cmpsl
rolb
adc
cmp
jno
mov
inc
faddl
push
out
add
cli
icebp
and
stos
cmp
icebp
dec
mov
jb
sub
mov
mov
std
aad
ffree
or
sbb
dec
sbb
ds
pop
out
mov
pop
xchg
pop
lods
and
mov
fcomi
int
and
sub
aaa
insb
in
lock
cmp
ret
ret
pusha
ficomps
loope
xchg
int
rcl
lds
mov
repz
int
lcall
jge
inc
out
cltd
mov
inc
loopne
mov
arpl
shrb
test
push
or
mov
out
popa
lods
pop
cmp
adc
scas
pushf
add
ja
imul
jb
sub
cwtl
repnz
subb
inc
push
outsb
and
or
incb
cmp
movsl
xor
mov
sub
loop
mov
hlt
and
mov
sbb
jb
add
outsb
mov
or
jo
fisttpl
pusha
out
jecxz
xor
inc
mov
xor
cmp
jbe
cmp
mov
xchg
call
jns
icebp
rcrb
jle
sbb
and
mov
test
cmp
mov
adcl
in
xlat
dec
out
push
call
xchg
out
js
fsubl
cmp
pop
adc
cmp
subl
pop
imul
sarb
cmp
flds
sub
cltd
pop
pushf
cli
add
add
roll
sbb
stos
or
dec
mov
inc
aad
jl
int
add
push
xchg
shrl
lret
test
sub
divb
negb
out
cld
and
and
sbb
jecxz
arpl
loope
lods
cmp
dec
xor
repnz
loope
cld
addr16
je
sub
jns
bound
dec
inc
push
mov
adcb
bound
mov
shlb
or
jno
outsl
dec
jnp
lea
cmp
xchg
notb
push
xlat
mov
lds
cwtl
testb
jnp
push
adc
stc
ret
out
scas
subb
jle
mov
jns
jg
mov
cmp
or
push
outsb
imul
enter
lods
dec
int3
icebp
int
lret
lods
leave
cmp
jge
insl
imull
sbb
mov
cmp
xlat
pop
push
cltd
add
inc
cmpsb
cmc
scas
push
xor
out
mov
dec
dec
and
movsb
pop
imul
or
inc
jbe
test
insb
jb
repnz
jno
pop
cmp
push
cmc
xor
lods
jns
imul
adc
insl
les
cltd
shrb
fimuls
jb
mov
aaa
jmp
mov
lods
pop
dec
gs
pop
mov
mov
jge
add
dec
and
xchg
dec
xchg
pop
lods
fsts
out
xor
pop
xlat
sub
xchg
cmc
adc
mov
xor
hlt
inc
mov
add
jge
call
adcb
sub
sub
ja
inc
mov
adc
std
daa
mov
test
xchg
mov
add
sub
sahf
push
inc
lret
rcrl
scas
mov
inc
adc
mov
or
leave
std
jbe
adc
pop
or
dec
cmp
xchg
mov
enter
incb
cmp
mov
lock
and
mov
xor
pushf
xor
mov
or
jmp
lods
push
jnp
xor
loope
mov
jns
lds
movsb
bound
mov
and
in
fnstsw
pop
imul
movsb
add
push
iret
adc
imul
jmp
xor
mov
or
inc
out
fcoms
out
or
rolb
shll
mov
out
pop
scas
pop
in
test
std
lea
stc
push
jo
jo
xchg
push
xchg
jmp
sbb
or
shlb
inc
inc
mov
insb
mov
leave
lret
dec
clc
ljmp
dec
movsb
aaa
mov
test
xchg
jmp
or
shr
rcrb
lods
mov
movsb
jmp
fcomps
push
repz
pop
imul
xchg
and
out
jbe
push
dec
loope
fcomp
test
adc
aam
xchg
in
mov
mov
push
push
push
inc
cmc
shrl
pop
dec
jg
inc
xchg
push
leave
sbb
xchg
in
mov
mov
cmpsl
inc
cmc
sub
icebp
push
add
mov
test
fcomip
ljmp
xchg
dec
js
sub
adc
and
or
stc
mov
lock
arpl
xor
mov
push
xchg
pop
fists
fwait
psrad
xchg
pop
jno
mov
adc
sbb
enter
scas
jbe
lods
and
push
xchg
cmp
dec
pop
sub
push
movsb
jno
xchg
loopne
jmp
fidivrl
push
inc
cmp
ljmp
roll
mov
cmp
in
jp
jge
cpuid
cmp
movsl
xor
sub
movsl
push
leave
inc
adc
xchg
push
mov
jns
in
sub
inc
xor
loope
pop
mov
cltd
inc
movsb
push
jl,pn
lret
incl
les
or
dec
pop
push
popf
lds
pop
popf
mov
les
push
mov
jge
cld
jg
pop
dec
dec
cmp
test
mov
mov
mov
pusha
das
cmp
ret
pusha
imul
loop
and
sub
out
dec
fidivrs
andb
gs
negl
adc
mov
mov
jne
jle
mov
repnz
pop
jne
das
test
dec
or
pop
xlat
push
cwtl
orl
xor
cmpsb
jge
inc
ljmp
ss
in
popf
inc
jns
pushl
mov
ljmp
outsl
ljmp
mov
mov
mov
mov
pushf
lahf
or
pop
and
aad
jl
xchg
mov
loop
jo
fidivrs
mov
lret
mov
inc
ja
add
mov
icebp
xlat
adc
inc
daa
leave
mov
incb
pop
add
cmp
je
adc
popf
rcll
rorb
adc
pop
push
add
aaa
xor
mov
push
nop
repnz
pop
jl
std
cmp
test
jmp
addr16
and
ja
add
ds
popa
rorl
mov
add
lods
mov
out
adc
jne
cmp
out
xor
js
xchg
mov
imul
imul
popa
inc
ss
rcrb
and
arpl
add
int
push
scas
dec
cmp
xorb
xor
es
dec
inc
sbb
xor
fs
ds
push
cwtl
andl
lret
sub
out
sbb
cmp
pop
imul
mov
in
popa
jl
or
xchg
sti
dec
imul
xor
jp
and
test
sbb
ds
pop
das
shll
leave
shr
sbb
jmp
enter
push
sahf
js
scas
sub
xor
lret
daa
pop
xchg
shll
lret
push
inc
add
xchg
aad
jmp
cmp
adc
dec
repnz
mov
cmp
icebp
daa
and
and
jbe
pop
aaa
in
cmpsb
loop
repnz
out
add
insl
or
cmp
push
in
add
pusha
test
jecxz
fldl
lahf
sahf
adc
lock
ret
clc
mov
lret
mov
jg
jmp
lahf
les
aas
sbb
sbb
inc
shlb
xchg
and
cmpsb
mov
xor
xchg
ficoms
jo
jmp
lods
fs
xchg
mov
std
xchg
mov
sbb
pop
sbb
ret
dec
insb
addr16
push
enter
pop
push
outsl
out
mov
lret
push
clc
lock
out
mov
shll
sub
insb
jbe
fwait
mov
inc
scas
dec
dec
ljmp
sbb
add
fcoml
in
into
pop
xchg
xlat
adc
out
mov
cwtl
jmp
adc
stc
lahf
popa
inc
testb
idivb
fisubrs
mov
inc
jp
sahf
push
fsubrl
rcr
xchg
sbb
aas
add
movsb
cli
ja
xor
jge
pop
stos
adc
scas
lods
mov
sbb
and
push
or
pop
aas
dec
dec
mov
pop
pop
fcoms
js
xchg
fstpt
stos
fs
lahf
pop
xchg
add
je
or
jecxz
cmp
ret
les
lcall
rclb
pop
mov
test
mov
xlat
jl
xchg
mov
adcb
cmpsl
sbb
daa
lret
pop
push
push
jbe
sbb
mov
out
mov
nop
jnp
stos
fstps
in
movsb
mov
pop
adcl
nop
cli
loopne
imul
outsl
adc
fistpll
ret
sub
loop
add
or
cmp
sbb
cmp
or
jo
data16
pop
fwait
dec
pop
leave
mov
rcll
fsubrl
cld
mov
outsb
imul
lret
add
in
push
add
cli
or
stc
int3
cmpsl
stos
cltd
mov
les
aad
cmp
cli
insb
jge
jmp
or
enter
in
mov
out
cmp
cltd
nop
add
cmpsb
mov
push
test
jp
and
faddl
mov
dec
iret
jmp
fmull
lods
in
xchg
mov
repnz
mov
sub
lahf
aas
bound
xchg
push
insb
test
repz
fdivl
mov
outsl
decb
jne
subl
out
xor
insb
xchg
xor
jmp
sbb
cwtl
or
test
mov
fs
push
repz
arpl
or
stc
pop
stos
enter
subl
lahf
add
es
imul
out
cmp
and
popa
add
or
push
test
sarb
or
adc
add
jb
inc
stos
push
mov
subb
loop
repnz
sub
cmp
lret
add
adc
bound
push
mov
subb
loop
repnz
sub
cmp
lret
ljmp
inc
stos
xchg
mov
jb
xchg
jnp
or
sbb
sub
cmp
lret
pop
ljmp
inc
stos
sarb
sub
or
cmp
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
mov
push
rcr
loope
icebp
mov
ljmp
push
pop
popa
dec
jno
add
push
push
and
xor
shr
fsubp
into
icebp
mov
mov
outsb
push
jo
dec
jno
add
push
and
xor
outsb
rcrl
or
scas
and
mov
jg
or
push
push
jb
imul
lcall
push
lcall
add
popa
lds
in
imul
stos
aas
clc
repnz
mov
push
out
jns
outsb
mov
or
mov
sarl
scas
aam
pop
ficoms
dec
popf
ss
fistps
ljmp
scas
mov
add
xor
loopne
in
adcb
dec
mov
imul
dec
lahf
mov
mov
sub
or
icebp
adc
adc
inc
subl
push
mov
leave
cs
dec
and
jnp
out
sub
loopne
test
dec
push
xchg
sbb
xor
mov
dec
jno
cs
xor
xor
shr
fsubp
mov
xchg
sahf
mov
cld
push
xchg
jno
add
adc
and
mov
mov
out
fcmovnbe
out
rcrl
das
cmp
comiss
push
insb
inc
push
incb
add
mov
inc
add
cmp
dec
outsb
dec
jle
push
dec
pop
mov
popl
sahf
mov
outsb
push
pop
popa
dec
jno
add
adc
and
xor
shr
fsubp
into
icebp
mov
mov
outsb
push
pop
popa
dec
jno
add
adc
and
xor
shrl
jbe
xchg
and
inc
roll
pop
fists
stos
das
mov
lcall
adc
mov
popl
xchg
pop
insb
lcall
pushf
mov
push
push
imul
test
sbb
and
jle
push
sub
loopne
push
jae
sbb
add
pop
adc
push
hlt
push
xchg
repnz
jmp
popf
push
mov
pop
scas
push
cld
xchg
cltd
push
mov
cs
data16
mov
iret
xchg
test
pop
jle
or
pop
pop
imul
out
loopne
xor
incb
sub
add
aaa
je
mov
adc
cmp
cmpb
outsb
cmpsl
cltd
arpl
xchg
and
into
add
push
or
and
data16
aad
pop
mov
fcomps
add
lcall
outsl
arpl
mov
jo
cmp
jecxz
xor
mov
jge
mov
sub
rorb
adc
or
inc
mov
fmul
push
outsb
dec
out
inc
ljmp
dec
sub
sub
sbb
dec
ljmp
aas
daa
push
adc
repz
std
je
or
rolb
add
xor
pop
ficoml
xchg
sbb
scas
sbb
ljmp
push
das
shlb
mov
push
outsl
movsl
pop
sub
aaa
cmp
pop
notb
lcall
enter
or
in
in
icebp
inc
pusha
jns
and
dec
pop
test
mov
sbb
push
rcl
xchg
pop
push
ds
mov
sub
mov
push
adcb
std
aaa
rcrb
sbbb
xchg
and
mov
lods
and
push
pmulhw
loope
sarl
sub
lret
cwtl
inc
sbb
rcr
mov
jb
mov
xchg
aad
out
dec
iret
sub
jne
xor
outsl
jne
mov
arpl
mov
sub
ss
mov
and
in
mov
cwtl
scas
xchg
daa
aas
mov
fiaddl
sarl
push
push
add
fs
test
push
cmc
outsl
test
popa
add
add
loope
mov
dec
sbb
sahf
lcall
repz
mov
jnp
paddusw
into
or
pop
push
xchg
jmp
jmp
sub
int3
nop
push
add
fimuls
in
lret
jecxz
dec
je
icebp
mov
jb
lret
dec
lretw
adc
pop
dec
mov
pop
cmp
sbb
pop
aas
push
mov
sbb
push
data16
je
loope
pusha
jbe
cwtl
in
inc
jnp
push
xor
lahf
sub
pop
or
xchg
int3
int
mov
mov
leave
je
sar
inc
jg
sub
stos
sbb
push
fdivrs
add
mov
mov
or
pop
mov
scas
popf
dec
sub
cmc
movlps
subl
aad
mov
lds
and
aas
cmp
xor
mov
in
lret
hlt
mov
pop
out
push
cmc
les
lret
mov
into
xor
mov
outsb
sub
lea
adc
loope
andl
mov
adc
or
aaa
jecxz
faddl
hlt
inc
aas
push
xchg
js
rcll
test
pop
adc
sbb
inc
dec
and
enter
xchg
ret
fdivs
mov
inc
xor
dec
dec
cltd
jne
pusha
sbb
int3
lea
ficoml
mov
mov
jle
lcall
add
fistl
push
mov
ret
or
std
pushf
fistl
out
xor
ja
test
push
notl
cmp
jnp
ja
or
xchg
outsb
push
cmovle
cs
aam
sub
mov
out
push
add
lods
cs
mov
div
pop
lcall
jnp
stos
nop
test
mov
pop
sahf
out
sahf
jae
arpl
cmp
cmp
sub
lods
stos
xchg
in
add
lret
push
dec
jg
adc
std
pop
and
mov
or
sub
dec
imull
sub
lods
lds
rorl
ss
or
cmp
jbe
mov
cltd
cmp
loopne
sbb
enter
jecxz
jne
xor
js
stos
push
in
dec
and
sbb
mov
xorb
jle
pop
cmp
inc
xorb
pop
loopne
sub
int
adc
cli
stos
inc
inc
xchg
enter
arpl
sub
scas
xor
xchg
push
inc
les
fs
sbbb
loop
fsubr
add
stos
stos
sbb
imul
fstpt
pusha
mov
push
fmull
add
sub
inc
out
mov
cvtps2pd
or
mov
xchg
push
lahf
xchg
repnz
cld
sbb
mov
xchg
pop
imul
idivl
inc
push
out
adc
icebp
repz
or
inc
mov
add
pop
cs
add
xchg
dec
call
arpl
mov
mov
mov
test
stos
cmp
jns
ja
adc
sbb
ret
sti
dec
cmp
int3
push
lock
inc
mov
xchg
ss
push
adc
test
sbb
jmp
xlat
dec
loopne
jmp
and
and
xor
xlat
outsl
repnz
jmp
xlat
dec
das
add
movsl
xchg
ss
adc
cltd
movsl
jae
push
push
mov
outsb
lods
jbe
into
lock
imul
ficompl
sti
mov
testb
lea
or
dec
sbb
pop
hlt
call
or
lahf
in
add
push
int
jp
cld
fnsave
aaa
mov
jo
xor
adc
sbb
push
stos
jb
clc
daa
pop
and
std
sbb
and
jmp
mov
jns
out
jmp
lock
inc
xchg
mov
dec
sbb
xchg
stc
xor
stos
inc
loop
push
icebp
pop
or
pop
cld
or
cld
jno
mov
xchg
in
les
sbb
call
lock
adc
scas
cli
adc
push
mov
fsubr
lods
jo
mov
fbld
ss
cmpb
lret
loope
cmpb
ss
je
push
lcall
inc
leave
dec
push
cmp
jge
scas
sub
shll
cmpl
mov
sbb
out
cli
inc
test
gs
dec
fldl
movsb
hlt
bound
stos
push
lds
fisttpll
test
or
push
sub
cld
lea
add
fstpt
adc
pop
adc
movsl
in
xchg
jo
out
sub
cwtl
mov
and
inc
dec
mov
inc
and
shl
and
je
xor
sarb
adc
mov
sahf
pushl
popl
loop
jne
pop
pusha
insb
mov
clc
xchg
sbb
ja
cmp
xchg
add
sub
into
pop
int3
mov
adc
pop
adc
inc
idivb
les
std
gs
adc
bswap
push
jp
cwtl
lea
movsb
outsb
insb
inc
mov
cmp
mov
rolb
int
mov
pop
addb
not
and
dec
fwait
mov
arpl
test
sbb
shlb
adc
jecxz
test
sbb
push
lods
and
cwtl
mov
bound
clc
mov
sbb
pusha
cli
pusha
fwait
pop
das
xchg
adc
lret
fs
xchg
mov
mov
in
leave
je
mov
das
rolb
or
lret
sbb
movl
dec
mov
xchg
ljmp
ret
mov
andl
adc
es
add
test
mov
rol
pop
mov
out
leave
jmp
xchg
mov
mov
pop
std
xor
loope
stos
aam
mov
ljmp
pop
mov
adc
imul
pop
movsb
std
loopne
inc
cltd
cmpsb
add
dec
rorl
cmpsl
xlat
jp
clc
cmp
pop
mov
jmp
inc
dec
push
js
jecxz
and
lahf
std
sub
lods
and
ja
mov
pushl
cmpsb
push
sub
dec
pop
mov
movsb
adc
sahf
arpl
ret
in
adc
add
es
call
cmp
mulb
roll
xchg
lods
sbb
sbb
mov
mov
sbb
shll
and
stc
jno
fs
ljmp
add
fcmovnbe
jmp
shl
fldcw
jmp
or
xchg
mov
nop
jle
sbb
ljmp
jp
addl
and
stc
add
aas
fisttpl
cmp
mov
jp
pop
loop
cwtl
mov
addr16
and
or
mov
jnp
mov
jle
sahf
lret
and
scas
lds
ljmp
sarb
and
inc
dec
dec
vprotq
imul
test
js
es
scas
int3
in
xor
pop
xchg
loopne
repnz
and
xchg
mov
movl
std
xchg
cmc
xchg
pop
stos
push
stc
sbb
stos
imul
call
repnz
xchg
addr16
and
lds
jno
or
cmp
jae
sbb
jecxz
adc
jmp
sub
std
insl
adc
jle
adc
sbb
inc
repnz
mov
add
mov
test
pop
test
out
xor
add
clc
aaa
cltd
stos
pop
aad
hlt
mov
jmp
and
cmp
icebp
clc
jb
and
aas
push
lds
mov
ret
push
pop
fistps
cltd
cmp
scas
hlt
fwait
clc
imul
jae
jmp
mov
pop
rcl
dec
or
icebp
mov
dec
mov
loope
add
cmp
xor
ljmp
dec
pop
inc
jo
mov
rcrl
lods
xchg
loope
mov
nop
mov
push
and
insb
nopl
in
dec
jno
stc
xor
push
test
mov
inc
xor
mov
push
cmp
data16
fistpll
adc
popl
idivb
sbb
test
xor
inc
into
and
mov
jmp
cmc
push
gs
cmpsb
fs
bound
popf
push
enter
and
fldcw
cmc
jge
test
loope
mov
and
les
jae
fsts
cltd
lret
adc
cs
mov
and
test
dec
imul
loopne
pop
movsb
push
pushf
pop
push
out
adc
mov
aam
or
adc
aad
lds
jns
mov
dec
xor
xchg
ss
fdivrs
das
ds
xchg
push
adc
les
fsts
cmp
jg
test
std
stc
xchg
push
adc
ja
mov
pop
loopne
xchg
mov
jle
int
and
sub
cmp
adc
outsl
pop
and
sub
xchg
push
movsb
bound
imul
fiaddl
adc
sahf
shrl
push
loopne
xchg
mov
jne
sub
cltd
lock
mov
mov
ret
scas
jle
nop
jmp
and
sub
lods
add
mov
mov
push
mov
or
push
adc
xchg
jle
ljmp
fmull
pop
sub
es
inc
adc
lods
daa
jbe
dec
cltd
add
inc
and
cli
xchg
sub
push
pop
jne
stos
fimuls
lret
cwtl
sub
mov
in
jnp
mov
push
loop
sbb
test
adc
cmp
cmc
mov
in
outsb
fs
not
pop
mov
xlat
mov
add
dec
out
cmp
push
addl
movsl
sub
mov
test
lcall
imul
cmc
mov
sub
imul
xchg
loopne
fldcw
and
pop
repz
int3
lods
aas
lods
jnp
push
xor
fists
mov
scas
jo
adc
adc
clc
es
movsb
sbb
std
sub
cmp
pop
mov
sbb
iret
cmpsb
lret
fsubl
and
xchg
call
aas
sub
lods
out
pop
adc
fidivs
test
pop
repz
or
out
scas
test
inc
test
jne
mov
daa
popf
gs
lock
fnsave
fdivl
xchg
push
xlat
add
adc
mov
mov
std
mov
push
sbb
and
dec
mov
in
bound
push
out
fmull
sti
mov
xchg
scas
out
mov
dec
push
mov
fsubrl
dec
jae
mov
dec
mov
cwtl
pusha
cmp
dec
roll
mov
sbb
push
nop
xchg
push
sti
arpl
leave
cmp
push
or
xchg
and
xchg
call
xor
sub
xor
mov
repnz
sbb
and
xchg
dec
test
and
out
lahf
mov
pop
push
lret
loope
outsl
jbe
mov
and
mov
pusha
cmp
mov
jge
stos
jno
fnsave
test
and
add
in
ljmp
inc
adc
int3
outsl
insb
scas
or
lea
cli
out
pop
in
jecxz
out
int3
scas
jp
mov
scas
xchg
push
sti
fnstsw
mov
imul
sub
pusha
out
dec
js
add
dec
subl
cmc
or
enter
push
adc
sub
inc
add
aas
jp
loopne
lea
scas
push
pop
repz
aam
decb
inc
stos
and
xchg
rclb
jnp
movsl
add
adc
and
add
daa
push
sbb
pop
cmc
dec
mov
cmp
repnz
std
cwtl
adcl
push
cmp
mov
jecxz
fs
xor
inc
pushf
push
mov
xor
pop
mov
pop
je
xor
lret
leave
adc
out
int
ja
xchg
cltd
adc
dec
ja
pop
push
add
xchg
movsl
jge
mov
outsb
cmpl
pusha
jl
push
push
imul
rorl
insl
popf
mov
mov
push
es
shrb
jne
cmp
neg
push
jnp
das
xchg
lock
push
fmul
add
mov
inc
iret
pushf
xchg
enter
inc
cmpsl
pop
xor
loop
mov
mov
and
push
dec
xor
xchg
or
dec
xchg
ds
jecxz
dec
adc
pop
sub
pop
jmp
jae
sbb
lret
aaa
clc
mov
jns
pop
pop
adc
add
addb
insb
sub
mov
icebp
mov
push
jg
daa
inc
dec
xor
data16
xchg
mov
fs
ds
mov
lcall
or
je
mov
fisttpll
jbe
out
sub
lea
data16
and
and
cmp
pop
fnstcw
iret
imul
out
out
add
fadd
or
xor
jl
push
push
pop
mov
mov
or
cmp
jle
inc
push
jb
jl
shrb
jmp
scas
mov
arpl
aad
lret
das
out
xorb
inc
hlt
insb
push
push
jle
cmp
enter
xor
adc
lock
dec
scas
insb
xor
rorb
cld
inc
aaa
mov
sbbb
pop
sbbb
imul
mov
lret
cld
bound
repz
stc
mov
or
std
push
dec
dec
fisubl
ret
adc
mov
jmp
mov
mov
mov
mov
mov
jns
pop
lahf
add
push
in
repz
add
jmp
int
int
pusha
outsl
ljmp
and
leave
sub
cmp
les
adc
mov
jmp
jle
sub
mov
xchg
jo
cli
stos
push
mov
or
repz
pop
dec
call
lret
shl
in
pop
xchg
addr16
mov
pop
or
int3
dec
into
sub
cltd
dec
test
adc
xchg
in
sbb
xchg
hlt
pop
enter
faddp
sub
in
loope
cmp
out
aas
bound
lods
movsl
mov
fdivrl
mov
sbb
push
lea
outsl
daa
push
jne
int
out
xor
testl
rorl
sbb
rorl
dec
inc
lcall
ror
dec
outsl
jb
outsl
mov
xchg
rcll
and
push
inc
mov
jmp
repnz
and
adc
cltd
insl
jecxz
mov
add
jno
mov
or
out
mov
in
or
js
mov
cmpsb
aam
in
dec
pop
in
ds
pushaw
sbb
leave
testb
sub
bound
lret
mov
inc
into
mov
stc
and
adc
xchg
adc
adc
and
out
pop
pop
pop
push
loopne
pop
adcl
pop
arpl
fistpll
fucomi
lods
loop
sbb
dec
out
cltd
or
jns
xchg
sahf
add
cmp
nop
or
add
cmpsb
fnstsw
mov
cli
mov
idivl
subb
decl
loope
jne
lret
adc
pause
dec
mov
mov
cmp
mov
and
fsubrl
lea
int
out
sub
pop
pop
iret
imul
fdivs
ret
loop
or
std
rcrb
ror
ss
lea
sti
aam
adc
out
jb
mov
pop
add
popf
sub
mov
fldenv
shl
mov
inc
daa
decl
leave
adc
cmc
aad
out
test
dec
mov
xchg
add
cltd
neg
lods
icebp
push
aad
stc
insb
push
adcb
in
or
push
std
xchg
and
ds
orl
pop
sub
faddl
jno
lock
push
outsb
push
hlt
cmp
repz
jmp
adc
cs
cmp
jae
jbe
pop
cmp
mov
sbb
push
cmp
adc
or
xchg
test
jp
jle
fidivrs
aad
xlat
sub
and
jge
xchg
and
sbb
pop
mov
pop
xor
repnz
loope
rorb
iret
shlb
and
out
mov
add
inc
sbb
xlat
in
xor
add
add
popf
pop
mov
insb
jae
adc
aas
or
mov
ficoml
lea
adc
jecxz
subb
lcall
loope
jb
out
movsl
mov
dec
out
inc
pop
jns
shrb
icebp
popa
push
inc
mov
mov
cmp
bound
pop
add
jecxz
push
out
dec
and
mov
popl
call
cmp
nop
pop
popf
testl
add
fcmovbe
subb
lret
stos
push
jecxz
into
mov
add
cmp
push
or
leave
jl
or
test
iret
aaa
adc
ret
xor
fsubs
xchg
dec
adc
inc
subl
lcall
and
pop
daa
pop
mov
das
and
mov
enter
add
dec
xor
push
cmp
leave
add
or
mov
mov
stos
xlat
push
inc
dec
add
xchg
lock
mov
or
outsb
das
sbb
jg
adc
je
adc
add
pusha
insl
scas
das
pop
das
pop
popa
push
repz
cmpsl
pop
adc
mov
mov
cmpsb
sbb
and
cmp
mov
lds
mov
xor
cmpsb
cld
arpl
outsb
push
inc
cmpb
sub
shlb
mov
inc
jnp
pop
push
iret
inc
stc
jp
push
dec
lret
shlb
ja
clc
adc
fldenv
push
add
sbb
insl
ret
ret
js
push
lods
je
sbb
dec
mov
or
scas
jp
sbb
sub
push
xchg
pop
sub
cmpsl
ja
and
and
aam
pusha
push
out
inc
push
mov
shll
repnz
or
jl
int3
popa
inc
mov
dec
inc
and
mov
xchg
inc
dec
inc
clc
loop
sbb
mov
pushf
mov
mov
push
ret
and
sub
lds
out
fbstp
sbb
shl
xchg
mov
jb
adc
in
inc
outsb
stos
jmp
cld
mov
cmp
cmc
add
popa
sub
jp
and
imul
mov
dec
das
add
pop
out
stc
testl
xor
push
jb
mov
or
popa
xchg
pop
loope
outsb
xor
jo
pusha
ret
cli
iret
imul
fmuls
mov
dec
lcall
arpl
xor
adc
jecxz
out
sbb
adc
push
imul
sub
cmpl
xor
add
addl
or
jge
leave
mov
sahf
xchg
das
xchg
xor
in
xchg
loope
shl
mov
mov
outsb
push
pop
popa
dec
jno
add
adc
and
xor
shr
fsubp
into
icebp
mov
mov
outsb
push
pop
popa
dec
jno
add
adc
and
xor
vpsrlw
loope
lock
mov
outsb
push
push
popa
dec
jno
add
adc
and
xor
rol
push
loope
cmc
mov
and
dec
jle
xchg
sti
hlt
popa
dec
push
dec
mov
into
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
aam
sahf
repnz
ret
ror
lods
mov
push
jb
inc
push
push
dec
and
mov
add
cltd
loop
repnz
ret
into
mov
xchg
add
push
adc
cld
push
dec
and
outsb
inc
jle
xchg
loop
repnz
cmpsb
rcl
mov
jmp
jb
es
push
popa
adc
jo
adc
loop
lods
loop
rolb
fstpl
xchg
cmc
cld
out
out
rcl
cmp
mov
rorb
movsb
scas
sub
push
test
rol
mov
roll
fcomip
push
or
adcb
add
jl
subb
arpl
ret
or
loope
jle
shrl
std
mov
jno
push
xor
mov
or
jbe
cs
or
lahf
outsb
add
testl
cmpsl
xchg
out
adc
sahf
loope
cmp
pop
into
jecxz
xchg
loope
xor
jae
push
aas
push
not
jb
pop
loope
rcll
push
mov
dec
cmc
mov
jle
dec
loop
repnz
ret
fisubs
out
pop
bound
jb
inc
daa
push
push
and
outsb
add
std
sti
repnz
stos
fidivrl
in
int3
xchg
ret
push
push
pop
sub
and
inc
or
sbb
loop
lock
ret
mov
cmc
mov
pop
imul
cmp
push
addr16
out
lods
mov
mov
fidivs
push
bound
jb
inc
ds
dec
and
outsb
add
mov
sahf
repnz
ret
into
mov
xchg
push
bound
jb
inc
ds
dec
and
outsb
add
mov
pop
mov
loope
repnz
push
cld
cmpsb
push
and
or
arpl
push
push
xchg
adc
xor
sub
jp
sub
jp
jmp
and
add
inc
mov
js
xchg
jnp
mov
inc
test
xchg
adc
jbe
xchg
cmc
dec
mov
adc
aas
in
sub
or
add
and
mov
pusha
loope
push
in
mov
sbb
dec
cmp
inc
and
inc
insl
sbb
stos
leave
pop
adc
lods
mov
xchg
add
outsb
movl
push
cmp
sub
or
cmp
into
lods
jg
mov
cmp
jp
jge
xsha256
cmpsb
adc
mov
dec
fisttpll
xor
jg
mov
xor
jecxz
loop
fisubs
pusha
rep
mov
add
jge
push
data16
add
retw
subl
sub
sub
testl
addr16
ret
cmpsl
adc
inc
mov
push
inc
mov
jns
shlb
in
inc
out
subb
shlb
aad
and
jmp
pop
fcompl
clc
mov
adc
xchg
xchg
mov
mov
lds
fimuls
xchg
or
push
jo
aam
mov
xor
rorb
hlt
out
xchg
in
mul
enter
orb
sbbb
push
cmpl
pop
icebp
sti
out
xchg
lock
xchg
xchg
xchg
lds
jb
push
pop
loop
xchg
subl
movsl
jno
out
loope
or
xor
daa
cld
or
int
jae
xchg
mov
mov
adc
cmpb
popf
adc
test
sbb
notb
mov
mov
rcrb
fistl
leave
cmp
ja,pt
movsl
aam
mov
rclb
mov
lock
out
push
loope
orb
pop
hlt
jo
inc
sbb
add
mov
insb
mov
ds
mov
or
sahf
mov
jnp
or
pop
xor
ja
jo
pop
into
push
mov
pop
xchg
bound
xchg
rol
clc
nop
js
leave
pop
dec
icebp
pmuludq
inc
pushf
pop
dec
jns
pushf
out
fisubrs
sub
jg
subb
ret
mov
mov
out
sahf
lods
and
pop
mov
dec
pop
mov
outsl
pop
cld
lods
std
inc
movsl
rcll
fadd
outsb
pushf
ret
lahf
jo
bound
das
jae
cs
mov
js
jb,pt
add
inc
fsubl
jmp
in
sbb
jg
movsb
add
out
js
jb
ss
popf
or
jno
leave
xor
int3
jmp
pop
cmp
scas
inc
setle
sub
aaa
pusha
je
js
in
rcll
or
jle
into
lcall
mov
sub
sub
pop
adc
jns
js
adc
sar
sub
jne
dec
pop
jg
xor
and
cmp
push
dec
shll
mov
ds
jg
xchg
add
mov
mov
loop
aad
jno
aaa
stc
cs
ss
dec
loopne
orl
sub
ja
pop
dec
std
fisubrs
jne
fsubs
fcompl
and
jne
push
inc
add
mov
scas
in
imul
shlb
jnp
dec
inc
mov
enter
std
shlb
outsb
rcl
adc
jns
lret
xchg
fs
mov
gs
in
sub
add
daa
insl
lds
cli
les
xor
mov
add
cli
xchg
cltd
jge
ror
inc
in
lea
leave
pop
aaa
addr16
xchg
fs
lcall
inc
adcl
mov
jo
jb
lcall
adc
sub
in
pop
mov
fs
push
inc
mov
sarl
das
mov
rcr
clc
pop
cs
imul
xor
ret
push
jo
add
jle
dec
push
push
ret
dec
xchg
mov
dec
scas
icebp
movsl
sub
scas
movsb
xchg
lahf
stos
mull
clc
cltd
in
jno
mov
mov
cmc
inc
and
fs
fwait
jae
inc
pop
push
cmp
in
dec
test
mov
in
add
push
pop
mov
dec
jae
pop
pop
and
mov
push
scas
mov
movsl
jmp
aaa
addr16
jmp
fstpt
in
lods
pop
imul
fcoms
into
cmpsb
xchg
cld
andb
dec
push
sti
and
mov
xor
cmpb
nop
cmp
fmull
add
movsl
xchg
test
and
das
cmpb
dec
or
addr16
cmp
fsubrl
je
add
fwait
and
pop
sbb
ds
push
scas
jb
fldenv
aad
adc
xor
movsb
fs
je
mov
pop
push
ljmp
insb
push
cli
into
or
dec
addr16
dec
fmull
repnz
ss
xchg
lret
popa
dec
mov
lock
int
sarl
setb
jne
dec
in
xchg
out
repz
in
pusha
mov
out
jle
dec
das
cmp
pushf
add
es
push
cmp
std
std
dec
lahf
pop
jmp
lock
insb
mov
sbb
mov
rcl
push
enter
adc
mov
repnz
lds
popf
iret
xchg
aad
sub
icebp
adc
aaa
in
xchg
mov
push
out
pop
out
aad
scas
lock
lock
nop
cmp
cmc
jg
add
in
pop
jno
mov
pop
add
out
xlat
or
or
and
mov
add
faddl
clc
xchg
popa
inc
nop
push
icebp
addr16
xlat
pop
push
mov
popf
jg
mov
stos
in
aaa
or
dec
pop
shl
pop
int3
and
bound
jge
sbb
out
jecxz
pop
out
aaa
test
push
mov
adc
jmp
inc
mov
out
push
push
xor
enter
test
test
push
dec
pop
sub
sub
or
jne
push
sub
popa
mov
jmp
inc
in
cli
mov
cli
jle
test
or
pop
rorl
lcall
ret
addr16
js
ret
push
or
jns
je
mov
adc
roll
rcrb
jp
shlb
mov
sub
fnstcw
dec
pop
in
scas
sub
or
aam
mov
lret
inc
lods
sub
cld
lahf
lds
mov
out
push
js
mov
shlb
shlb
loope
inc
pop
push
mov
dec
insl
out
mov
test
adc
jp
sti
adc
pop
or
pusha
fisttps
push
cs
rcll
sahf
aam
push
mov
sbb
pop
cmp
and
fisttpl
rep
mov
inc
in
add
int3
cs
and
pop
adc
inc
in
test
dec
sahf
in
inc
lret
mov
cld
mov
jns
test
bound
sbb
arpl
mov
pop
int3
fcomps
data16
dec
jo
lods
movsl
cmp
cwtl
push
mov
icebp
push
add
negl
xchg
clc
jg
adc
mov
addr16
inc
dec
sub
sbb
mov
pop
sbb
fldenv
cmpsl
fisubrl
fwait
in
in
xchg
lcall
not
dec
sbb
xor
and
cmp
mov
cmpsl
mov
push
or
xchg
xchg
hlt
rcr
in
jmp
and
or
inc
mov
xchg
and
adc
fnstsw
jp
mov
bound
cmp
pop
lahf
mov
xchg
ret
or
test
cmc
bound
jne
scas
jg
mov
xlat
jns
aaa
jmp
xor
cmc
inc
sub
jo
adc
jb
and
nop
push
jmp
xchg
and
push
jno
in
test
adc
or
dec
repnz
lcall
xor
jecxz
stc
cmc
sub
scas
mov
lret
popf
mov
in
mov
mov
hlt
icebp
daa
push
add
fsubs
jne
scas
inc
lret
mov
repz
aam
add
pop
inc
outsb
jl
fs
repnz
mov
shl
repz
mov
mov
mov
pop
lea
xor
mov
mov
mov
stos
jae
lahf
xor
pop
out
aam
movsb
push
or
dec
push
cmp
push
fs
stc
mov
xor
xor
xor
sbb
sbb
push
clc
sbb
and
popa
popf
mov
mov
push
sbb
in
push
les
aad
ficoms
iret
or
es
xchg
sbb
test
mov
lods
movsb
dec
push
mov
sub
stos
jno
or
std
jge
and
mov
cmpb
inc
mov
jb
jno
push
scas
aam
push
mov
out
fucomip
sub
std
jmp
jle
insb
and
jo
lods
pushf
push
jno
loop
test
xchg
pusha
in
jp
push
mov
out
out
mov
pusha
andb
fsubl
icebp
int
jmp
adc
rcl
dec
or
dec
xor
arpl
sti
mov
inc
shlb
push
insb
push
mov
fcoml
pop
sti
je
sub
movsl
push
ja
ja
popf
jge
push
sbb
jg
addr16
aaa
jmp
mov
insb
sbb
xorb
fwait
pop
add
mov
jmp
loop
insb
cmc
adc
mov
ret
adc
xor
out
push
xor
push
loope
mov
and
push
push
xlat
mov
fisubrs
repnz
push
fldcw
stc
ss
add
ret
popf
arpl
jne
pusha
js
adc
cmc
mov
jae
xor
and
push
outsb
adc
test
jge
in
sahf
mov
repnz
and
addr16
inc
dec
shlb
jle
add
push
sbb
fldt
mov
jg
test
insl
sti
pop
jo
repnz
arpl
lret
inc
pushf
dec
sbb
stos
and
pop
mov
cmp
adc
push
pop
leave
lret
aad
mov
icebp
xchg
sbb
add
xlat
jb
pop
mov
lods
lock
pop
pop
adc
mov
ret
mov
minps
xchg
in
adc
jnp
dec
stos
jp
push
xor
cmp
dec
pop
xchg
test
lock
aam
imul
jge
dec
inc
and
rclb
mov
sub
hlt
mov
icebp
xor
outsl
pop
cmpsl
mov
outsb
and
test
push
insb
xchg
xchg
cmpsb
stos
jo
mov
and
loope
pop
cmc
mov
test
xor
movsl
mov
imul
sub
mov
lahf
or
stc
pop
xchg
lcall
test
xorl
or
fwait
outsb
test
rcrb
sub
scas
in
adc
mov
push
movsb
pop
imul
mov
lds
test
push
pop
push
movups
jno
push
out
or
adcl
iret
pop
add
fdivrp
pop
pop
and
mov
clc
cmp
push
call
pop
cmc
rclb
sub
in
stos
sti
and
inc
jno
lahf
mov
pop
push
jecxz
fstpl
fs
xorl
imul
adc
nop
in
add
cmpsb
mov
xchg
fsubp
mov
add
pop
dec
or
push
dec
push
scas
lahf
neg
xchg
popa
popf
sbb
push
das
test
sub
sti
push
and
pop
adc
sbb
cmpsl
push
inc
lcall
std
int
ljmp
jb
fisttpl
cld
mov
xlat
mov
pop
and
loopne
fmull
aaa
dec
inc
mov
pushw
test
pop
mov
jge
and
sub
xlat
push
xlat
xchg
insb
mov
mov
ficompl
pop
mov
fwait
jnp
int3
rcrb
cmp
les
in
test
pop
mov
or
push
jl
movsl
lock
or
mov
jae
inc
xor
inc
fidivrs
int3
and
popf
mov
outsb
dec
out
pusha
loopne
stos
repz
and
xor
push
ficomps
pop
lret
or
in
into
mov
jmp
sbbb
aam
fwait
or
inc
xchg
cmp
sti
mov
sarl
out
lret
jnp
pop
into
js
xlat
mov
aad
aam
fsubrl
xchg
fwait
mov
mov
std
lods
enter
imul
mov
in
ljmp
adc
sbb
dec
out
repnz
ds
push
cltd
js
mov
shll
flds
jae
push
pop
dec
lret
out
xor
mov
inc
fidivrs
loope
sub
mov
dec
into
in
and
sub
xchg
or
sti
daa
loop
mov
fldenv
gs
sti
pop
sti
aam
cmp
lcall
loope
and
es
inc
mov
mov
sti
in
sahf
pop
bound
ret
adc
sub
xchg
mov
mov
jmp
rcll
rclb
pop
pop
in
pop
pop
fbld
xor
push
cmc
lods
pop
ret
sahf
add
xchg
push
roll
rcll
cli
movsl
sahf
inc
repnz
jmp
mov
xor
fmulp
sbb
and
cltd
xchg
mov
xor
rcl
lds
mov
add
xor
test
jmp
xchg
pop
jno
and
out
jo
test
or
cmp
mov
mov
mov
pop
xor
sub
subb
les
adc
sti
add
dec
inc
outsl
mov
sub
sbb
imul
stos
neg
add
aad
imul
addr16
mov
jle
mov
push
mov
xchg
mov
loope
mov
jle
popf
dec
fwait
js
inc
xchg
push
je
push
sbbb
dec
pop
incl
int
vunpcklps
dec
cwtl
lahf
jns
popa
and
mov
nop
add
inc
fldcw
sbb
es
push
cmp
shlb
pushf
and
repnz
das
in
pop
xchg
fstps
sub
jp
cmpsb
inc
in
push
fiadds
sbb
je
mov
xor
punpckldq
rcl
jae
cmpsl
popa
sbb
jge
mov
mov
push
subb
mov
arpl
mov
test
pop
shrl
pop
fcoms
xlat
xor
cmpsl
xchg
mov
imul
sbb
pop
bswap
jmp
dec
inc
cmp
cs
call
stos
pop
notl
pop
add
into
ret
daa
cmpsb
pop
call
loop
jmp
jns
cltd
adc
lret
dec
and
mov
sbbb
dec
push
inc
fisubs
xchg
or
sub
jo
popa
push
xor
inc
pop
mov
out
adc
mov
or
jne
jle
jmp
lds
ret
sahf
inc
stos
cmp
inc
and
int
fldt
pop
or
dec
jae
arpl
jge
das
int3
aad
add
and
jmp
mov
ljmp
ds
in
jl
push
push
imul
lret
in
cwtl
or
jae
data16
inc
push
sbb
jg
and
sbb
mov
xchg
mov
xchg
and
lea
mov
adc
cmp
ret
mov
pop
fldl
jmp
pop
orl
fildl
xchg
incb
lods
out
dec
jns
jge
insb
scas
sbb
data16
cmp
es
aas
cmpsb
dec
inc
arpl
sbb
sub
fidivs
adc
ffree
jp
lea
fstpl
mov
dec
xchg
lcall
xchg
data16
daa
pop
jp
jo
leave
std
xor
movb
pop
dec
cmp
fwait
filds
jo
cmp
jb
popf
xchg
pusha
mov
xor
dec
nop
je
cli
aaa
cmp
sbb
shll
and
mov
xchg
gs
lods
call
lret
xchg
xor
shlb
push
stc
pop
jmp
sarb
adcl
fisubl
outsl
xor
push
repnz
out
push
call
inc
lcall
cmpsl
pop
adc
nop
sbb
pushf
push
in
xchg
into
cmp
inc
out
mov
jg
cmp
push
cmp
xchg
call
push
cmp
jmp
imul
mov
pushf
pop
mov
add
add
xor
stc
inc
cmp
sbb
out
cmp
lods
inc
xor
jns
ret
add
imul
cmp
sti
ffreep
mov
xchg
xlat
into
js
pop
xchg
add
cmp
lea
lods
mov
fcoml
jns
add
popa
xchg
scas
popa
pushf
mulb
clc
popa
mov
inc
sub
dec
jmp
mov
xor
or
mov
lea
push
jg
mov
scas
xor
cmp
int3
clc
jb
inc
clc
movsb
addl
mov
xchg
fs
outsl
pop
xorl
aaa
scas
stos
or
or
sub
jmp
push
ljmp
insl
sub
or
or
in
mov
mov
adc
mov
aam
jae
push
fldl
lcall
loope
das
adc
or
loopne
add
aam
xchg
dec
aas
mov
push
push
cli
jge
shr
and
xor
ljmp
in
iret
xor
popa
test
test
push
ja
xor
pop
xor
lret
mov
jae
insl
sbb
addr16
mov
insb
mov
dec
mov
loop
xor
pop
xor
add
inc
cmc
and
pop
pop
inc
loope
loop
loope
push
sbb
jne
push
add
adc
push
pop
data16
cmp
mov
xchg
xchg
cmp
cmp
pop
hlt
lcall
jp
adc
daa
mov
dec
cmp
sub
push
jle
inc
sbb
push
sbb
push
outsl
adc
cmp
and
test
rcrl
rsm
add
in
mov
mov
mov
mov
mov
xor
ret
ds
in
push
mov
stos
push
aas
iret
push
enter
mov
adc
jo
sub
mov
jg
jle
mov
aaa
cmc
jp
jns
pop
pop
push
sbb
cmp
sub
das
popf
xchg
ret
bnd
or
mov
dec
inc
out
or
test
adcb
ja
mov
hlt
aaa
xorb
push
ja
xchg
sub
xchg
xchg
int3
push
movsl
inc
fisttps
cmp
cmp
cld
xchg
xor
jecxz
stos
js
push
pop
sub
push
stc
lea
call
push
lret
rcl
jbe
cmc
add
push
or
inc
inc
stos
icebp
mov
push
repz
cli
pop
hlt
jg
pop
in
pushf
dec
out
add
int
adc
adc
aas
add
or
mov
jnp
sub
leave
pop
test
inc
lcall
or
les
mov
movsl
mov
and
mov
inc
fisubrl
repz
in
test
outsb
cmp
adc
call
mov
xchg
mov
inc
pop
xor
addl
out
xor
push
push
mov
out
iret
push
in
inc
push
mov
ret
es
movsb
fists
push
test
iret
js
adc
add
mov
imul
inc
cmp
lock
ss
mov
xchg
js
jno
fcomp
lods
add
sbbb
adc
mov
and
add
push
hlt
jb
mov
lcall
flds
movsb
adc
aaa
inc
orl
jae
jae
mov
jo
lahf
mov
sti
loope
outsl
dec
pop
fnstenv
mov
jl
mov
mov
inc
aam
call
jp
xor
clc
imul
pop
fadds
out
xchg
xor
aad
push
sbb
and
das
push
add
hlt
push
movsl
pop
cmp
inc
or
add
pop
das
pop
imul
cmpsl
fsubrl
inc
jle
inc
add
inc
and
loop
lret
cmp
ret
dec
xchg
cmp
aad
push
jecxz
fdivrs
daa
int3
mov
inc
inc
shll
pop
push
sti
inc
scas
cltd
stos
mov
ret
ficoms
lods
test
or
inc
scas
mov
stos
mov
mov
in
insl
sub
pop
xorl
dec
cli
ror
popf
pop
jmp
sbb
hlt
mov
dec
je
pop
or
add
out
outsl
pusha
push
je
cmp
cs
pop
and
pop
xlat
or
in
dec
pushf
mov
xor
mov
add
adc
dec
das
outsl
add
mov
inc
xchg
or
call
repnz
ret
into
mov
xchg
push
bound
jb
inc
ds
dec
and
outsb
add
mov
sahf
repnz
ret
into
mov
xchg
push
bound
jb
inc
ds
dec
and
outsb
add
mov
sahf
jb
inc
mov
xor
cmp
push
loop
jb
inc
ds
dec
and
outsb
add
mov
ret
into
mov
jle
icebp
fadds
int
std
sub
rclb
rol
cmc
mov
pusha
sub
inc
add
jo
pusha
adc
inc
lock
mov
mov
mov
movsb
jo
pusha
and
inc
add
adc
popa
adc
inc
lock
mov
mov
mov
shll
add
je
outsl
pop
aaa
inc
cmp
mov
ret
lock
mov
les
dec
adc
clc
xor
mov
mov
sti
dec
or
loope
insb
fwait
pop
jbe
xchg
dec
out
lds
popa
xor
adc
mov
dec
inc
out
mov
outsb
add
or
scas
pop
sub
nop
mov
lea
test
mov
mov
outsb
fld1
and
jo
fst
data16
popa
dec
adcl
jno
pop
mov
jp
push
xchg
addb
inc
out
leave
add
cmp
mov
das
and
outsl
pop
or
xor
and
or
and
adc
mov
rclb
mov
shll
and
inc
add
jno
popa
adc
pop
mov
mov
mov
movsl
rcr
jmp
mov
inc
cmp
inc
sub
push
add
push
and
fstl
loop
mov
movsb
nop
xchg
push
adc
push
push
adc
mull
add
mov
ret
mov
shll
and
inc
add
jno
popa
adc
inc
lock
mov
mov
mov
shll
and
inc
add
jno
popa
adc
inc
lock
mov
in
push
or
sub
pop
aas
ret
mov
ljmp
out
pop
jl
imul
mov
sub
cltd
imul
jg
mov
push
rol
cmpl
add
xchg
in
cltd
mov
bound
dec
xor
push
fcmovb
jge
dec
outsl
add
arpl
shrl
inc
in
cmc
nop
push
inc
pop
and
mov
xor
sahf
and
cld
sub
cmp
mov
mov
jle
mov
je
push
adc
pop
jg
fwait
push
test
xchg
cmp
repnz
mov
cld
xlat
outsb
sti
xlat
gs
xchg
movsb
fidivs
jo
cmp
push
push
cmpsl
lock
cltd
aaa
ret
jl
scas
jge
push
add
fwait
fwait
leave
mov
jmp
scas
pop
xlat
sbb
pop
adc
jle
sub
cmp
and
enter
mov
cmp
sti
sahf
movl
sub
xchg
sbb
cmc
jge
shll
ljmp
daa
pop
sub
sbb
cmp
enter
popa
popf
lds
cmpsl
movsl
dec
inc
jg
push
out
rorb
fildll
xor
push
pop
je
pushf
test
dec
mov
btr
mov
adc
xlat
leave
fsubrs
mov
xchg
ret
leave
sbbb
fwait
jno
fcmovne
sub
ja
and
jle
enter
mov
pop
add
lods
xchg
sub
iret
in
push
scas
xchg
jne
dec
test
add
xor
adc
sbb
push
ss
push
icebp
jno
mov
mov
test
clc
xchg
loope
sbb
ss
scas
push
std
add
ljmp
dec
xor
aaa
mov
sub
sbb
cmp
fcoml
ja
jo
test
orb
sub
sbb
loop
call
xor
cmp
jmp
lret
inc
pop
cmpb
xor
sti
stos
cmp
mov
push
mov
and
dec
sub
jp
scas
gs
cmpsb
icebp
xlat
push
loope
ds
inc
fcmovb
adc
les
ret
xor
or
inc
cli
mov
in
xor
xchg
xor
ret
mov
jecxz
shlb
inc
and
jmp
mov
fsubl
mov
ret
cmpsb
xchg
jecxz
cmpsl
inc
jmp
lods
andl
mov
gs
test
or
and
mov
lret
dec
lahf
aam
pop
mov
cli
and
cli
push
popf
sbbb
hlt
in
mov
sarb
call
inc
pop
sbb
imul
mov
pop
test
push
cmp
and
sub
outsl
cli
ss
xor
cs
xor
insb
xchg
aas
jl
xchg
jae
hlt
out
or
jge
cmpsb
push
sbb
mov
push
cltd
shrb
inc
inc
xchg
pop
outsb
and
mov
mov
ja
mov
je
add
mov
mov
push
stc
cmp
xlat
cmpsl
in
sbb
cwtl
push
lock
mov
cmp
pop
add
dec
std
cwtl
adc
repz
cs
ja
fidivrs
test
push
orl
inc
add
outsb
adc
mov
xchg
outsl
out
movsl
cmc
adc
cmp
add
xchg
xchg
leave
xchg
insl
mov
mov
jp
push
popa
ja
push
push
bound
enter
xor
cmp
das
cmp
jno
dec
xchg
or
xchg
popa
popf
jbe
xor
scas
mov
mov
scas
icebp
jp
movl
arpl
cmp
in
pop
pusha
pop
call
cwtl
pop
and
loope
push
sub
xchg
mov
arpl
mov
out
daa
lea
xchg
lds
std
inc
shr
aaa
cmp
push
and
pushf
ds
or
out
or
shll
daa
cmpsb
mov
fs
enter
push
in
jne
jae
jmp
xor
xor
out
lcall
and
stc
cmpsl
cmc
jae
and
lcall
cmp
lcall
loope
leave
mov
das
cs
push
mov
and
add
adc
adc
clc
jo
andl
ret
add
test
jo
add
shlb
pushf
stc
adc
lret
das
inc
adcb
mov
dec
jo
push
lds
in
imul
pop
outsl
pop
pop
jbe
mov
out
pop
iret
inc
mov
aam
pop
pop
fimull
fsqrt
stc
mov
jecxz
pop
lcall
jp
repz
and
out
cmp
test
call
stos
inc
push
cmpsl
or
mov
inc
out
xor
aaa
add
mov
mov
ret
int
lcall
mov
filds
pop
cmp
mov
adc
mov
jns
mov
pop
push
das
pop
dec
fiadds
add
stos
cmp
shll
pusha
sub
fs
lcall
imul
jo
roll
mov
shll
mov
xchg
pop
xor
xor
xor
xchg
adc
stos
pop
mov
xchg
in
rcrl
pop
inc
or
hlt
and
ret
or
clc
sub
inc
pop
mov
push
jno
nop
imul
out
js
cs
add
or
out
int3
push
mov
cmp
add
or
das
into
mov
dec
jae
push
out
mov
add
mov
jmp
sub
pop
clc
ficomps
out
mov
fsubrs
push
pop
leave
idivl
lea
mov
sbb
xorb
jo
stc
mov
cwtl
in
xor
dec
push
aas
fimull
sub
vmovaps
notl
out
mov
imul
pop
push
stos
mov
sbb
int
ja
pop
push
mov
sbbl
ja
pushf
mov
or
sub
xor
jp
iret
pop
cmp
mov
push
mov
leave
daa
xor
mov
or
scas
icebp
out
in
xchg
adc
inc
hlt
outsl
xor
loopne
rcll
pop
and
lds
sub
or
out
mov
and
push
repnz
sub
push
test
mov
addb
jge
in
fwait
and
stos
std
iret
iret
cmc
ret
or
pop
outsl
hlt
mov
scas
cli
or
mov
lods
sti
push
jp
clc
inc
aaa
mov
jb
pop
lea
sbb
adc
jns
adc
fsubl
or
mov
clc
std
in
and
nop
fs
es
jne
enter
add
mov
sahf
push
lock
lret
mov
dec
daa
jo
jmp
sub
mov
test
jge
sbb
ret
iret
sbb
scas
push
pop
pop
sub
outsb
ret
xchg
jg
jae
imul
cwtl
clc
mov
fst
loop
sub
outsb
xchg
pop
mov
cmp
jnp
xor
shrl
adc
cmc
jns
sbb
add
jp
add
test
insb
dec
fists
les
fnstcw
test
icebp
and
lock
mov
lcall
pop
sub
mov
push
and
cli
or
lret
sarb
mov
out
pop
mov
lods
adc
clc
pop
xchg
xchg
jecxz
insl
cmp
inc
ret
push
push
sbb
inc
lods
and
add
rcrb
xlat
leave
je
xchg
and
and
push
mov
aas
jb
xor
sarl
in
jne
aad
mov
xchg
movsb
popa
mov
pop
arpl
adc
and
fcoms
in
ljmp
pop
pop
cmp
dec
fbld
xor
and
mov
ss
sbb
lahf
add
testb
xor
leave
xchg
xchg
jmp
dec
inc
cmp
adc
subb
add
adcb
dec
or
repz
jg
and
mov
and
adc
aas
popf
sub
sbb
xchg
pusha
jne
sub
lret
imul
sub
imul
cmpsb
leave
or
inc
and
int3
fistps
mov
icebp
ja
mov
call
push
out
idivl
insl
clc
adc
repnz
pop
lods
add
push
jo
mov
push
inc
push
xchg
les
bound
fcoms
mov
cmp
pop
in
out
cmp
pop
cld
cmp
lods
outsl
jge
inc
cmpsb
jo
mov
jns
push
ja
test
fwait
cmp
sbb
cmp
and
cmp
scas
imul
dec
mov
inc
insl
add
and
sbb
xor
mov
ret
mov
or
xchg
or
mov
xor
adc
ja
cmp
pusha
int3
pop
mov
and
inc
mov
push
xchg
mov
sbbb
jns
cmp
dec
adc
loope
test
ffreep
push
movsl
into
or
out
jno
ja
pushf
sarb
popf
mulb
addr16
jo
fstl
sub
subb
push
and
dec
and
mov
ret
daa
popa
mov
mov
test
sbbl
jbe
aaa
jae
or
outsb
ret
xor
mov
push
sahf
imul
test
lea
adc
or
insb
lds
sti
gs
imul
mov
mov
mov
push
pop
mov
bound
mov
cmpsb
data16
insl
data16
ret
nop
mov
loope
pop
dec
loop
test
jg
xor
sbb
shl
scas
push
repnz
mov
push
sbb
bndstx
add
push
pop
jp
and
gs
jmp
outsb
and
imul
and
mov
iret
adc
dec
cmp
sbb
loope
test
stos
out
or
push
push
fs
fnsave
loope
addr16
mov
pop
sub
sbb
test
ja
push
jae
popa
fiadds
lock
push
jae
imulb
mov
outsb
cmp
or
stos
int
add
mov
add
mov
push
cmp
xchg
pushf
ds
xorl
pop
add
mov
add
xlat
mov
mov
lret
mov
sub
test
pop
xchg
call
and
flds
hlt
adc
xor
in
es
push
stos
pop
lods
xor
mov
test
dec
jle
sahf
jnp
or
lods
aaa
decb
cmp
sbb
das
adc
vmovntps
and
dec
jle
ja
jne
jno
inc
ret
jns
loopne
popf
fcoms
int
imul
jns
pop
jb
mov
ljmp
pushf
mov
fld
push
add
mov
pop
inc
and
push
and
jg
mov
scas
pop
cwtl
cmp
in
xchg
aas
push
hlt
call
adc
imul
or
mov
ljmp
pop
inc
xorb
movsb
adc
pushf
and
cs
sub
or
inc
sbb
mov
fistl
sub
lret
fs
jp
dec
rorl
pushf
push
fisubrs
dec
mov
enter
mov
or
push
call
push
pop
dec
dec
fldt
adc
cmpsl
ds
pop
or
jg
sub
xchg
sbb
or
dec
inc
in
insl
xor
inc
lods
aad
inc
ret
sbb
inc
sbb
cmp
insb
sahf
mov
shl
jb
push
sbb
push
mov
and
movsl
lret
popa
lret
jno
ds
dec
push
and
shlb
jbe
icebp
jbe
loop
cmp
aam
fs
sub
gs
push
hlt
fnstcw
sub
dec
fnstcw
test
add
sbb
push
dec
inc
stc
jl
std
jg
fstps
cmpsb
aam
mov
sbb
push
les
mov
ret
aad
sub
int
add
cmp
dec
into
ret
movsb
test
out
lods
sbb
or
notb
repnz
sub
pop
lods
jnp
imul
push
js
push
mov
dec
sbb
jbe
add
mov
aaa
or
outsb
jne
js
shrl
sub
ja
jnp
jmp
rorl
add
push
pushl
lahf
push
dec
mov
cmp
push
add
mov
lret
flds
pusha
cli
int
out
shrl
loopne
arpl
test
lahf
sbb
mov
dec
pop
inc
and
stos
xchg
int
push
pop
mov
lds
jp
shl
rorl
stc
fcomps
xor
in
jmp
or
sarb
popa
push
bound
or
fwait
adc
sub
sbb
lods
ret
pop
dec
scas
ljmp
or
movl
popf
repz
push
fxch
arpl
pop
lods
outsb
out
das
mov
adc
lods
adc
cli
mov
inc
pop
fnsave
add
sbb
les
push
aam
es
mov
sbb
pop
pop
nop
mov
push
shlb
dec
cltd
xchg
call
notb
jecxz
jno
push
cli
ret
inc
inc
mov
icebp
gs
cmp
push
xlat
out
mov
mov
add
enter
iret
xor
xor
in
xor
xchg
loopne
xor
fldcw
xor
sub
cli
cmpsl
push
aad
lcall
adc
repnz
ljmp
mov
repnz
push
jae
andb
and
xlat
pop
push
sub
sub
adc
jae
rcll
pop
add
imul
jg
mov
mov
add
fcoms
test
add
mov
dec
pop
mov
cli
lahf
or
cmp
lods
sub
pop
bound
xchg
push
xchg
push
ds
scas
push
mov
mov
insb
lcall
nop
jno
push
mov
loopne
int
loopne
add
daa
mov
pop
pushf
mov
xchg
daa
lea
xchg
push
mov
int
and
mov
add
subb
mov
outsb
out
dec
and
ss
test
ret
add
xchg
xor
pop
test
xchg
outsl
add
shll
push
dec
push
push
shll
add
cmp
xchg
sub
sbbl
mov
sarb
mov
int
and
fldt
imul
and
adc
adc
sbb
push
es
xor
ja
inc
in
push
call
ror
mov
mov
stc
jb
xor
sub
adc
fdivrl
cmp
lret
adc
adc
stos
pop
jl
int
push
lea
sbb
mov
push
xorb
iret
cwtl
popf
aam
dec
data16
lods
and
aad
xor
dec
mov
add
popf
js
pop
leave
mov
insb
out
iret
nop
fistpl
cmpsb
ret
push
int
subb
sbb
les
fwait
movsl
xchg
lcall
mov
je
cmpl
gs
ret
jae
mul
dec
push
mov
push
outsl
int3
and
sub
xor
sub
xlat
push
mov
pop
push
pop
sbb
test
pop
xor
out
add
add
sbb
pop
movsb
insl
mov
ss
fbstp
xchg
inc
outsb
aam
inc
mov
jbe
xor
xchg
shlb
lahf
mov
jecxz
sub
sbb
pop
mov
call
add
sub
sbb
test
pop
mov
aam
popf
pop
or
cmp
and
cmc
xchg
and
repnz
adc
mov
push
loope
scas
jb
or
adc
adc
or
stc
loopne
ret
call
test
nop
push
mov
pop
mov
adc
rcrl
push
fcoms
test
loop
cli
cwtl
mov
idivl
int
mov
or
hlt
shrl
xor
or
cltd
sbb
sbb
js
inc
xchg
xchg
pop
fdivl
aad
repnz
sub
imul
pop
cmpsl
mov
mov
lcall
and
daa
repz
xor
dec
sub
cmc
loop
pop
movsl
test
and
cmp
cmp
jbe
cmp
pop
mov
cmp
or
out
nop
ja
push
inc
xchg
sub
cwtl
lahf
jg
dec
push
or
sahf
pop
and
outsb
push
mov
cmpsl
jmp
inc
outsl
xchg
in
push
lea
push
cli
cmpl
das
xchg
into
add
test
and
xchg
xor
dec
cmp
add
pushf
in
rclb
ret
lods
add
dec
adc
out
xchg
push
mov
test
cld
mov
push
je
call
popa
xor
xlat
dec
bound
out
dec
xor
push
dec
fwait
xor
and
push
into
fwait
lods
add
sub
xor
or
mov
jb
sub
mov
ds
clc
stos
das
mov
sbb
aaa
push
rorb
out
inc
push
sbbl
scas
mov
popf
das
insb
push
fdivs
add
rolb
inc
pop
xchg
dec
mov
xor
jmp
leave
fnsave
out
pop
stos
fisubl
mov
cltd
cli
sarl
xor
lods
ljmp
test
es
daa
ds
dec
or
pop
mov
sti
sbb
pop
cmpl
fisttpll
rcl
mov
test
aaa
pop
imul
lea
cmc
cwtl
fisttpl
popa
push
je
rorl
mov
pop
rcrl
aaa
push
repnz
pop
hlt
int3
movsl
das
mov
in
mov
mov
or
dec
imul
call
stos
jmp
sbb
cmp
lods
sti
xor
push
xor
pop
push
add
jno
cmp
dec
jns
xor
cmp
and
gs
mov
adc
jp
or
lea
int
jp
jmp
xchg
push
pop
sti
call
pop
xor
and
repz
xor
stos
sbb
jecxz
movsl
add
inc
aaa
aas
sub
xor
rol
push
pop
inc
shll
sub
call
jne,pn
leave
pop
aad
aam
lea
jge
lret
push
inc
jecxz
mov
dec
mov
xor
cmp
jbe
pop
cmpb
xor
inc
xor
orl
push
cmpsl
mov
lods
inc
cmpsl
jl
int3
mov
cs
outsb
decb
adc
mov
loope
cmp
cmpsl
fwait
pop
push
mov
mov
dec
insl
xor
xor
jb
test
lods
aam
jg
push
lret
jle
mov
push
cmp
sbb
pop
mov
adc
inc
pop
sbb
and
jbe
lds
pop
pop
fidivl
insl
xor
test
dec
jae
inc
fisttpll
or
sti
pop
push
lret
call
push
enter
mov
pop
pop
pop
test
mul
outsb
lcall
lock
test
add
lods
mov
push
sbb
or
fisttpl
xchg
dec
ffreep
xchg
cs
inc
outsb
or
mov
out
pop
push
add
lods
lret
cmc
scas
fisubrs
aam
shrl
cs
xor
fdiv
dec
imul
test
fsubs
ret
inc
std
add
xchg
sub
push
ja
outsb
add
jne
or
dec
testl
fmulp
imul
popa
scas
nop
jmp
add
nop
fbstp
xchg
push
pop
fs
js
mov
fnstenv
add
mov
dec
sti
jo
pop
sbb
dec
xchg
mov
adc
jb
ret
mov
out
mov
pop
push
add
arpl
movsl
repz
or
out
fistpll
ja
test
push
push
adc
cltd
cmp
fs
dec
dec
lods
cmp
std
fadds
in
jns
dec
adc
dec
or
cmp
sahf
xchg
inc
sbb
jle
cmc
pop
pop
adc
lods
jge
mov
mov
xor
int
sub
das
inc
cmpsb
inc
pusha
jge
or
xchg
or
adc
mov
xchg
hlt
fwait
jg
or
add
sahf
sub
push
shll
add
loopne
dec
fcom
mov
adc
leave
pop
push
ffree
ljmp
aad
popf
ret
stos
int
jno
jbe
jnp
and
arpl
add
mov
adc
loop
or
mov
inc
mov
lods
xchg
cmp
outsb
fisttpl
sbb
jmp
lahf
add
adc
test
fnstenv
sub
stc
jns
ljmp
in
xchg
adc
cmp
inc
dec
jge
pop
push
and
sbb
adc
dec
xor
adc
rcrl
int3
dec
inc
xor
jnp
dec
mov
mov
mov
shll
and
inc
add
jno
popa
adc
inc
lock
mov
mov
mov
shll
and
inc
add
jno
popa
adc
inc
lock
mov
mov
mov
shll
and
inc
add
jno
popa
adc
inc
lock
mov
mov
mov
add
pusha
mov
adc
inc
stc
test
out
scas
mov
ret
into
outsl
repz
cwtl
push
jae
inc
ficoms
and
adc
ret
dec
mov
push
xchg
jp
jb
inc
ficoms
loop
xor
loop
repnz
ret
dec
mov
lock
push
bound
push
lea
adcl
ja
jl
mov
sub
movsl
mov
push
add
mov
mov
ja
push
fistl
shrb
add
repnz
aas
mov
jl
outsl
dec
lahf
fcomi
mov
fnstsw
lahf
add
inc
cmpsl
pusha
sub
push
or
imul
inc
jb
dec
scas
addr16
adc
test
shl
test
cmpsl
inc
pop
in
icebp
out
add
mov
fnstsw
daa
fstpl
or
mov
add
xlat
push
mov
das
into
jno
int
push
adc
mov
pop
je
jns
lods
divps
xchg
mov
xchg
or
jle
sahf
ret
inc
mov
les
sub
push
xchg
xchg
xor
sahf
adc
mov
sbb
rolb
nop
imul
stos
inc
stos
sub
popa
fists
cmp
imul
shlb
and
and
pop
loop
jmp
xchg
repnz
pop
mov
sbbb
push
jb
inc
ficoms
and
adc
ret
dec
mov
push
xchg
push
jb
inc
ficoms
and
adc
pop
std
std
bound
or
adc
mov
inc
mov
jno
bts
mov
cmp
mov
jp
or
fwait
shrl
fsts
pushf
add
jl
mov
je
push
pushf
pop
popf
pop
imul
clc
movsl
mov
fst
aaa
sub
jbe
cmp
shlb
and
add
adc
xchg
jne
mov
jbe
cs
stos
add
leave
iret
inc
add
dec
lock
jns
xchg
enter
push
add
xor
or
and
iret
add
out
pop
rcll
push
jge
dec
and
xchg
arpl
mov
enter
jl
push
mov
pop
xor
ret
or
xchg
jbe
cmp
push
lods
fs
outsb
jnp
cltd
iret
dec
outsl
idivb
cmpsb
xchg
in
hlt
jl,pn
jnp
inc
push
push
rcrl
add
lret
cltd
fcmovb
push
dec
mov
sarl
mov
pop
push
mov
fidivs
gs
arpl
pop
testb
fdivrl
push
decl
sub
fstpl
push
adc
push
mov
daa
pushf
xlat
inc
in
mov
out
xchg
and
cmp
jns
xor
adcl
or
jmp
or
stc
or
mov
repnz
pushf
sahf
mov
adc
jmp
int3
inc
and
mov
and
mov
inc
jns
es
or
pop
test
inc
repz
int
fistpl
jns
ret
xor
ret
icebp
js
ret
pushf
cmp
nop
or
out
repz
fmul
push
pop
pop
movl
enter
stos
ljmp
jmp
push
fstl
imul
mov
lret
adc
movzbl
out
xor
fcoms
sub
rorl
dec
mov
shll
ficompl
jecxz
pop
push
lods
xor
std
or
cmp
cmpsl
and
jb
fistl
mov
mov
andl
xor
mov
mov
jl
sbb
and
sarl
add
push
jne
lds
dec
shlb
out
jne
and
int3
xlat
sbb
fiaddl
pop
pushf
sub
lods
dec
std
mov
lods
cmc
or
movl
xchg
inc
loop
pop
sarl
in
iret
pop
sarb
enter
pusha
mov
push
sub
inc
lock
cmp
jmp
popa
inc
sbb
inc
fistpll
sti
lea
mov
dec
mov
lea
divb
xor
adc
std
out
jl
cmp
iret
mov
scas
clc
mov
and
sahf
movsl
or
dec
cmp
lret
mov
mov
repz
mov
sbb
xlat
fwait
xchg
jbe
loop
repnz
xchg
mov
subl
js
lock
call
xchg
rcr
push
cmp
std
cwtl
xchg
and
aad
shll
push
mov
ss
mov
push
std
xchg
ret
mov
into
or
push
fnstcw
popl
rorb
jo
ret
cmpsb
sbb
xchg
push
je
jb
jecxz
orb
sbb
push
clc
mov
mov
repz
stos
shlb
jo
mov
pushf
xorb
gs
ds
xor
xor
mov
imul
mov
scas
dec
arpl
xchg
idivb
lods
pop
mov
cmp
jno
sarb
sub
setnp
jnp
pop
int
arpl
xor
movsl
je
popa
jae
push
adc
dec
and
ljmp
cmp
in
push
mov
jbe
cmpb
ljmp
addr16
mov
pop
fsubs
test
jbe
cmpsl
mov
mov
in
stc
js
das
enter
xchg
insl
ljmp
movsl
xor
xchg
add
pop
cli
mov
insb
jp
andb
mov
jmp
pop
adc
out
add
stos
sub
xlat
inc
test
mov
xor
cmpsb
and
stos
sbb
jl
add
cs
xchg
aad
fstl
fwait
mov
sbb
idiv
sbb
dec
in
into
jge
dec
test
sahf
fbld
jge
loopne
pop
dec
mov
push
mov
insb
lret
sbb
mov
cs
mov
andb
cmp
int3
cld
mov
pop
and
push
stc
mov
repz
lds
pop
addl
inc
rcrb
pop
cwtl
loope
pushf
mov
jp
ret
inc
mov
aam
lods
inc
adc
push
lret
xor
adc
out
lock
sbb
pop
sbb
jno
jmp
inc
test
loope
bound
mov
stc
scas
mov
sbb
hlt
add
ljmp
jl
push
pop
stos
jbe
push
mov
mov
paddsb
lock
pop
out
jmp
leave
loopne
pop
inc
es
jmp
cmp
add
inc
lods
jb
and
ret
mov
pusha
out
push
cmp
ret
sbb
and
cmc
xor
xchg
int
mov
mov
addr16
push
lcall
nop
jecxz
into
add
mov
dec
int3
js
sarb
movsl
ror
push
mov
fldcw
adc
mov
xor
push
mov
frstor
ficompl
push
test
fdivr
rol
stos
sbb
mov
movsb
push
and
in
push
arpl
aaa
shlb
js
test
mov
or
inc
sbb
push
scas
jge
xor
inc
jmp
cmp
cs
push
mov
xchg
inc
mov
xchg
lock
xchg
insb
add
push
pop
add
cmp
lock
test
or
addb
movsb
and
in
pushf
mov
sub
jae
fs
mov
test
pop
ljmp
test
jae
push
clc
jg
sub
daa
mov
xor
mov
jge
lea
pop
mov
xchg
mov
mov
outsl
xor
rolb
pop
jmp
jo
and
xchg
imul
in
jne
sub
sub
cmp
jg
mov
addl
mov
call
sbb
sub
movsb
enter
cmp
dec
and
and
push
add
push
roll
mov
mov
or
mov
outsb
jl
xchg
or
out
rclb
imul
pusha
jle
shrb
cmpl
xorb
xor
or
sbb
sbb
sub
xor
mov
sub
push
jge
dec
push
dec
inc
pop
adc
push
push
ret
push
mov
cmp
mov
in
adc
add
sub
setne
std
in
adc
cld
pop
mov
scas
ja
xchg
in
pop
xchg
xchg
sub
or
adc
lret
js
into
in
ja
stos
fs
dec
jns
or
shl
xchg
lds
hlt
insl
sti
fucomi
das
push
movsl
fldt
pusha
loop
cmc
inc
andb
loop
xor
mov
push
jl
jmp
popf
pusha
pusha
or
inc
ja
jle
or
pop
mov
aaa
punpckhbw
stos
sbb
pop
jle
xchg
mov
add
das
test
sub
xchg
out
lret
mov
fwait
xchg
std
daa
stos
mov
sub
xchg
add
cmp
cmp
out
adc
stos
shrl
popf
mov
cltd
sub
pop
ret
xor
cld
xchg
pop
dec
sub
ficomps
inc
inc
mov
leave
push
leave
inc
inc
inc
xchg
aaa
stc
mov
xchg
fdivrs
pop
xor
xor
leave
mov
jle
cltd
pop
lret
xor
adc
jge
mov
jecxz
pop
lods
popf
lret
push
aam
xchg
packuswb
inc
clc
jo
mov
mov
nop
jne
sub
xchg
pop
fwait
jmp
fdivl
sbb
gs
xchg
xchg
cmp
xchg
shr
sbb
aad
and
sub
sub
dec
popf
sahf
and
add
lret
rcl
jns
push
ret
pop
jno
ret
test
cmp
insb
push
cli
sahf
loope
movsb
daa
dec
xchg
sete
or
dec
mov
sub
add
insl
xchg
dec
std
popa
and
mov
fists
mov
inc
mov
cs
ss
dec
cwtl
jmp
dec
jbe
sub
add
test
loop
call
rcrb
stos
fdivrs
xchg
xor
fisttps
ret
ds
push
int3
dec
cmpsl
xor
addr16
repnz
push
xor
dec
push
mov
mov
inc
sarl
test
add
dec
mov
rcrb
jmp
jmp
xchg
pop
xchg
xchg
mov
fmuls
je
jne
mov
popf
dec
xor
rcrb
decb
shl
arpl
fidivrs
dec
decl
xlat
cmp
pushf
or
and
cmp
ss
aas
int
mov
add
and
push
xchg
add
mov
jo
xor
lret
lods
cmc
lods
and
rorl
mov
sub
lcall
xchg
inc
and
or
push
iret
stos
stc
ret
cltd
inc
pop
pop
cmp
je
adc
or
mov
push
mov
fiaddl
pop
sbb
mov
daa
and
cli
clc
pop
pop
test
rolb
aam
call
loop
push
mov
aaa
repnz
loop
push
aaa
loope
negl
nop
pop
out
dec
cmp
xlat
sub
cwtl
and
cwtl
xchg
sbb
jge
mov
daa
pop
pushf
hlt
mov
in
loop
mov
rolb
lods
pop
adcb
xchg
inc
mov
xchg
lret
ret
mov
cmpsb
jnp
xlat
jne
pusha
jmp
jp
nop
sbb
dec
sbb
push
fldcw
or
test
mov
sahf
inc
push
es
fnstcw
inc
jnp
into
pop
lds
sbb
mov
inc
sub
popa
push
fistps
popf
mov
and
xchg
enter
inc
mov
les
cs
cli
pop
rolb
in
aaa
push
or
fsubrs
xor
mov
adc
mov
nop
divps
test
sbb
and
cmc
dec
fucomip
sahf
shr
out
xchg
sub
addr16
xchg
fcmovb
js
jae
sbb
fildll
mov
pop
and
sbb
xchg
pop
pop
mov
lret
shll
fnstcw
pop
int3
jecxz
mov
jno
fildll
jl
xor
dec
scas
jns
aad
sbb
jns
add
or
sbb
std
loope
push
icebp
mov
xchg
addr16
cmp
fidivrs
mov
cmc
xchg
fstpl
xor
imul
mov
mov
test
das
sub
cwtl
mov
stos
cmp
neg
pop
mov
dec
sahf
dec
cli
mov
sahf
and
sub
mov
into
clc
add
lods
pop
mov
xor
mov
jns
mov
roll
fldt
add
push
pop
inc
loopne
xchg
push
jns
or
mov
pop
scas
mov
dec
push
mov
test
es
stos
xchg
dec
ljmp
sahf
inc
imul
je
jbe
mull
xorb
mov
pop
mov
mov
and
jne
or
mov
dec
js
aaa
sahf
and
movsl
sub
test
xchg
mov
xchg
lcall
ret
ja
inc
ret
scas
icebp
fldt
stc
mov
pop
push
xchg
aas
jecxz
hlt
xor
ja
gs
push
cli
lock
cmp
insl
mov
dec
xchg
ja
xchg
push
push
and
xor
or
test
xor
enter
mov
inc
adc
push
xchg
adc
add
jno
inc
xor
aad
and
jmp
xor
movsl
lods
fistl
xor
jae
push
mov
in
jg
pop
or
mov
pop
jecxz
sub
gs
adc
hlt
xchg
subb
and
mov
mov
and
scas
fcoml
mov
arpl
or
cmp
mov
sarl
jb
push
enter
out
ss
pop
div
xchg
push
cmp
inc
cmp
mov
mov
divl
iret
leave
jae
xlat
and
popf
pop
cmpsl
add
sub
and
les
mov
sub
push
and
inc
hlt
mov
or
jnp
sub
mov
lods
popa
jae
dec
and
add
or
in
test
jno
nop
xchg
push
mov
push
sbb
push
sbb
sub
mov
shll
push
mov
pop
sbb
negl
sub
repnz
iret
sub
cmp
inc
jmp
fldl
into
xor
rorl
sbb
lea
dec
es
and
lods
inc
loopne
cmpsl
add
out
out
bound
pop
mov
xor
sbb
lahf
fsqrt
sbb
clc
out
jecxz
add
stc
inc
ret
push
add
shrl
sub
mov
sub
inc
mov
jne
in
add
push
pop
push
inc
popf
mov
inc
movsb
or
loope
sub
mov
cld
lret
pop
mov
fwait
sbb
bound
fs
pop
jl,pt
mov
jb
aaa
test
pop
rorb
insl
adc
loopne
insb
push
fcoms
outsl
mov
xchg
push
sarw
test
ret
push
push
into
mov
dec
cmpsl
lret
xor
ljmp
popa
mov
xchg
mov
inc
ror
mov
sub
mov
xchg
es
sbb
mov
call
fsts
fcomps
jo
adc
pusha
mov
insb
push
xchg
dec
sub
lret
add
dec
or
sub
inc
mov
paddb
jo
jge
mov
lea
adc
rcr
cmp
or
loopne
jl
adc
rorl
mov
mov
out
and
xor
cmp
jge
and
mov
test
sar
pop
repnz
xor
or
lods
je
jno
xchg
jl
in
les
jl
popa
mov
push
jnp
adc
repnz
lahf
push
mov
testb
adcl
cmpsl
pop
push
call
ss
sti
or
rclb
mov
ss
fs
in
daa
aam
insl
pusha
xor
insb
inc
jbe
jecxz
xchg
cmp
sahf
adc
bound
addr16
aas
ret
cwtl
cmp
nop
sti
adcb
mov
loope
mov
add
dec
test
mov
mov
shrl
or
pop
stos
fnstcw
pop
dec
jge
sbb
sti
sbb
ljmp
add
fiadds
mov
das
and
and
aaa
mov
push
push
loop
stos
lcall
enter
sbb
and
dec
stc
push
std
stos
push
push
scas
int
rcrl
int
imul
gs
mov
mov
dec
inc
negb
out
jns
cltd
lods
jno
push
pop
mov
xchg
cmp
repnz
sub
shrl
cmc
jecxz
out
lods
add
adc
pop
inc
sahf
adc
aad
cmp
inc
in
pop
leave
or
in
into
pop
mov
movsl
pop
mov
mov
pop
sub
push
ret
mov
daa
or
movsl
or
sub
jp
pop
xor
lea
mov
shrl
fistl
mov
cmp
cmpsl
imul
dec
dec
jae
popf
ret
outsb
mov
inc
mov
push
call
icebp
or
sub
lret
fs
cli
out
shl
cmp
jp
adc
mov
pop
dec
lahf
mov
jb
lock
mov
push
js
mov
and
adc
out
inc
test
cltd
jmp
lcall
pop
cmp
xchg
in
sbb
push
cmp
rcrl
push
hlt
mov
inc
pop
or
fimuls
mov
xchg
add
stos
repnz
imul
push
sub
loopne
xchg
xor
dec
add
cmpsb
es
lods
roll
inc
movsl
scas
test
mov
movsl
mov
movsb
pop
scas
loope
loope
insb
daa
push
pop
mov
ljmp
push
or
xchg
push
adc
cld
add
xchg
fs
aad
xor
jge
or
movsl
push
cltd
mov
aas
mov
inc
pop
dec
outsb
and
cli
or
ror
test
dec
dec
pop
pop
xchg
stos
or
pop
mov
lods
call
imul
dec
pop
or
xor
push
dec
add
pop
enter
xor
cmpsl
popf
pop
mov
ret
push
stc
shll
mov
insb
cmpsl
and
push
pop
mov
xor
outsb
jno
sub
insl
mov
and
lods
mov
test
mov
insl
lds
pop
mov
mov
sub
mov
inc
cmp
push
ret
popa
clc
or
sbbl
jnp
mov
mov
mov
stos
in
inc
jl
sar
mov
xor
xor
lods
xchg
jge
pusha
inc
fneni(8087
enter
mov
les
cmp
mov
hlt
mov
xor
or
daa
cmp
fdivl
out
aas
cli
pusha
xor
mov
jo
mov
das
popf
cmp
and
push
and
movsb
pop
ret
sub
cltd
in
add
dec
ficompl
mov
push
arpl
push
test
inc
test
aam
mov
insl
xchg
mov
mov
mov
imul
sub
inc
pop
mov
mov
dec
mov
out
lcall
sahf
add
adc
iret
gs
les
dec
push
ljmp
ficompl
fsts
bsr
inc
cmp
repnz
mov
std
xchg
ljmp
jle
and
aad
lds
ds
cmp
or
icebp
or
lahf
fbld
inc
mov
dec
inc
xchg
arpl
jns
mov
or
data16
stc
and
adc
clc
push
push
stos
xor
or
push
jo
aam
adc
fnstcw
bound
xchg
lods
jl
push
clc
mov
sub
cwtl
xorl
pop
fdivs
xor
push
in
and
rcrb
inc
mov
je
adcb
cmp
in
cmpb
adc
fildl
cmpsb
mov
out
and
andl
jecxz
fnstenv
xor
gs
jae
rolb
adcl
mov
mov
xchg
xor
mov
sub
pop
dec
or
fwait
mov
jbe
stos
xchg
gs
emms
mov
stc
addr16
xchg
addb
fisttpl
pushf
test
frstor
sbb
mov
movsb
adc
outsl
insl
jno
cmp
pushl
sub
ret
sbb
shlb
mov
sbb
inc
sub
cwtl
daa
fwait
cmp
repz
dec
pop
dec
jno
add
insl
mov
sbb
inc
mov
movsb
jp
mov
pop
cld
jb
lcall
mov
movsl
icebp
pop
ficoml
push
movsb
adc
dec
movsl
clc
iret
int
and
mov
in
into
cmovb
movsl
loop
push
dec
lds
inc
pusha
ret
ljmp
adc
push
pop
repz
aas
arpl
pop
push
adc
and
fldt
push
inc
push
aad
lods
xor
shl
or
inc
fstpt
mov
mov
aaa
dec
mov
les
in
mov
xor
mov
sub
scas
push
add
or
imul
pop
push
xchg
xchg
adcl
pushf
sub
jb
stos
mov
shrb
add
insb
mov
clc
pop
ret
test
mov
cltd
ret
lea
loop
dec
mov
mov
push
loopne
lea
ret
pop
arpl
adc
mov
sub
jge
decb
fists
sbb
inc
jae
pop
push
push
cs
cltd
mov
jl
jecxz
cli
cmp
out
leave
dec
les
lods
daa
jmp
ss
dec
js
shrb
or
test
mov
lock
test
scas
mov
pop
mov
pusha
or
lcall
xchg
cmp
out
test
jb
loop
adc
push
mov
lret
dec
push
pop
jnp
cmpl
push
xor
imul
sub
pop
shrb
jnp
stc
scas
mov
cmp
test
xor
test
xorb
sub
add
mov
into
js
add
mov
sbb
jae
movsb
insl
and
mov
cltd
iret
jp
addl
test
fists
add
mov
xor
dec
mov
push
xchg
push
jb
inc
ficoms
and
adc
ret
dec
mov
push
xchg
push
jb
inc
ficoms
and
adc
inc
rorb
ds
sbbb
push
bound
jb
inc
ficoms
and
adc
ret
dec
mov
sahf
xchg
push
bound
jb
call
ss
push
jb
bound
or
ds
outsl
cmpb
dec
lret
dec
and
mov
push
out
inc
mov
cmpsl
push
xchg
xchg
testl
push
aaa
mov
sahf
pop
cmpsb
pop
mov
push
out
inc
mov
cmpsl
fcoms
jle
push
xlat
fs
dec
aaa
mov
ja
adc
adc
cs
out
pop
clc
inc
mov
cmp
dec
mov
sbb
push
in
sarb
or
jp
negl
aad
xchg
das
orl
add
mov
data16
std
ja
into
mov
sahf
cwtl
and
pop
scas
addb
in
and
cmp
mov
sbbb
sub
outsb
mov
stos
jle
push
clc
mov
scas
adc
and
and
adc
jp
or
pop
sub
das
leave
lcall
lret
test
inc
jae
icebp
pop
loope
pop
js
faddl
insb
lods
jae
xlat
jg
frstor
out
insl
aam
cmpsb
xor
nop
add
je
cmpsl
ds
pop
xchg
testl
in
aaa
mov
ss
lods
pop
xorb
xor
inc
int3
rorb
les
inc
rcll
mov
mov
int
out
or
icebp
mov
mov
lcall
hlt
pop
push
xchg
sbb
or
pop
orb
inc
jmp
cld
pop
mov
mov
roll
push
mov
out
xlat
outsb
jle
mov
sahf
pop
scas
pop
mov
push
out
inc
mov
cmpsl
push
xchg
xchg
testl
jle
mov
sahf
pop
scas
pop
mov
push
out
inc
mov
dec
or
shlb
sub
inc
test
hlt
in
aas
push
pop
sub
imul
aam
push
jns
sahf
pop
sub
pop
jge
sti
mov
sbb
movsb
mov
loop
in
icebp
dec
insl
and
jge
jbe
xchg
hlt
ret
outsb
mov
out
sti
mov
sbb
out
xchg
enter
xor
call
push
fdiv
xchg
iret
and
lds
iret
aaa
cs
push
xchg
cmp
adc
test
repz
test
scas
push
adc
sub
inc
add
mov
popa
mov
mov
inc
dec
xor
mov
out
js
mov
es
fdivrs
sbb
pop
insb
jmp
inc
sub
outsl
cmp
outsl
les
insl
mov
push
cli
in
das
add
dec
sub
std
sbb
xchg
loopne
stos
pop
lock
xchg
mov
rcrb
mov
divb
mov
mov
add
xchg
test
inc
jnp
push
pop
inc
test
xchg
jg
aam
dec
xor
add
add
adc
push
ljmp
dec
xor
dec
add
cli
cld
loopne
mov
jmp
bound
fisubs
or
add
pop
out
aas
cmpsb
outsl
repz
pop
and
dec
and
mov
or
push
inc
repnz
and
movsl
in
sbb
ss
hlt
lods
mov
and
rolb
lret
inc
ffree
incl
popa
mov
pop
or
jb
pop
inc
pop
inc
mov
sub
mov
inc
mov
and
sub
inc
pop
sbb
lea
mov
inc
sbb
mov
shll
test
sub
imul
cs
mov
xchg
push
or
addl
mov
cmp
and
mov
inc
xchg
fidivs
or
xlat
pop
xor
jp
lret
push
int3
sbb
xor
pop
aaa
sbb
pop
loop
mov
push
rolb
das
or
imul
push
pop
rcrl
fldenv
lea
shl
fildl
arpl
or
and
cli
addr16
lcall
cs
in
jl
fsubl
cmp
fcoml
jg
ds
sbb
out
xor
imul
mov
jno
push
inc
adc
in
jb
in
xor
mov
ljmp
ret
fldcw
andb
xor
fwait
push
outsl
and
out
jmp
inc
mov
imul
pop
sub
sbb
test
out
mov
mov
stos
pop
xchg
iret
sbbl
insb
cwtl
pop
out
ja
mov
xor
in
push
mov
xor
mov
adc
sub
and
shlb
std
mov
xor
sbbb
inc
test
sbb
out
clc
adc
push
sub
sbb
out
xchg
jns,pn
lods
je
adc
inc
mov
adc
sbb
mov
and
sbbl
pusha
lcall
xchg
mov
push
in
adc
je
sbb
cmp
push
add
add
fwait
inc
stos
lods
fs
outsb
pop
inc
cmp
fs
mov
das
mov
dec
sub
das
mov
xor
subb
or
sub
bound
push
je
dec
xor
fcom
fstpt
add
xor
sub
mov
cmpsl
fsubr
lods
cli
clc
mov
add
mov
dec
mov
out
iret
pop
add
inc
sbb
lcall
sbb
test
imul
frstor
ret
in
sub
jge
mov
into
mov
mov
inc
rcl
xor
iret
push
nop
icebp
notb
xchg
mov
sbb
outsl
outsl
idivl
mov
cwtl
js
jg
scas
int3
or
dec
jmp
inc
sub
push
ret
aas
mov
ljmp
xchg
scas
stos
lret
pop
andb
adc
scas
dec
add
xor
loop
pop
jp
jle
scas
inc
ss
or
or
sbb
push
sahf
push
inc
out
sub
xlat
imul
sbbb
shrb
or
cmpsl
dec
movsl
push
inc
pushf
lcall
aaa
adc
loop
ljmp
push
cmp
popa
imul
sbb
inc
out
fisubs
xchg
dec
dec
mov
xchg
xchg
es
jnp
lock
dec
mov
ret
xchg
mov
add
push
jmp
and
add
xor
sbb
cli
lods
jmp
dec
push
sar
push
xchg
es
mov
and
add
xor
addr16
xchg
lcall
push
xchg
sub
pop
js
or
stos
or
dec
cmp
jmp
mov
test
and
ret
lds
pusha
dec
insb
mov
cli
mov
and
mov
test
xor
jbe
push
addr16
je
int
push
or
xchg
leave
add
in
fisttpll
hlt
gs
or
stos
mov
mov
or
mov
lods
out
mov
jl
daa
jns
or
stos
mov
xor
push
push
daa
jae
dec
lods
rep
pop
cwtl
dec
push
imull
sub
sbb
adc
fidivl
jb
push
adc
das
test
jns
mov
loopne
jl
pop
scas
fxch
popf
add
mov
inc
xchg
fwait
call
sbb
push
enter
insl
push
aad
dec
xchg
and
jbe
sbb
and
mov
test
xor
into
push
mov
mov
fldenv
cld
push
shll
loop
sub
std
cmc
mov
mov
fnstsw
sbb
outsl
push
sbb
mov
sub
insl
or
sbb
jmp
xchg
or
das
add
mov
inc
xor
sub
inc
inc
xor
adc
jge
out
dec
fistps
stc
dec
jno
jbe
popa
cmp
mov
cmp
ficompl
and
sbb
jae
insl
cli
call
or
lahf
mov
cmpsb
fstpt
mov
xchg
dec
lea
sbb
repnz
lods
and
aam
incl
adc
test
test
jp
into
and
mov
xchg
xchg
out
outsl
insl
mov
dec
add
gs
enter
stos
mov
add
jo
scas
stos
sbb
push
ljmp
adc
sbb
pop
or
adc
pop
andb
dec
or
leave
pop
push
leave
imul
insb
inc
push
ss
jmp
stc
pusha
into
cmp
and
mov
jp
movzbl
mov
inc
fs
test
jge
sbb
movsl
ds
loop
or
bound
icebp
addl
adc
mov
xor
mov
pop
push
scas
xchg
movsb
or
push
lea
add
je
mov
push
out
jbe
lods
inc
pop
mov
popl
sbbb
mov
addb
fs
cwtl
sbb
sub
roll
test
adc
adc
adc
mov
add
test
or
jae
lret
loop,pn
jnp
push
push
mov
push
sarb
inc
pushf
pop
clc
pop
and
test
pop
loopne
pop
dec
divb
lods
sub
ret
fisttps
lcall
jecxz
les
into
lods
psubb
sbb
jne
out
scas
rolb
pop
pop
outsl
mov
xchg
dec
cmp
add
mov
xchg
pop
adc
fdecstp
pushf
out
sub
cmp
mov
jl
sub
int3
xor
cli
jmp
mov
movsb
cmp
and
int3
xor
jg
jl
mov
cli
adc
ja
mov
add
xor
lret
imul
call
dec
iret
vmread
fbld
imul
sub
pop
dec
cmpsl
xchg
pop
adc
repz
lret
scas
sbbb
jns
daa
cli
or
adc
mov
mov
jno
movsb
mov
ss
sub
mov
push
fwait
test
fwait
xor
rorl
xchg
and
push
frstor
rcrl
mov
or
mov
lea
add
adc
pop
nop
xlat
int
cs
adc
iret
loope
and
jl
arpl
outsl
inc
add
xchg
movsl
sub
ret
aas
adc
into
lds
movsb
cmpsb
xor
xor
sbb
jnp
jno
xchg
add
out
movsl
js
out
sahf
push
andb
ds
call
cmp
cmc
iret
movsl
or
or
gs
push
push
lret
insl
or
jnp
rcll
xchg
mov
aam
and
pop
outsb
lcall
and
lods
sub
dec
out
or
sti
sbb
loop
insb
lcall
fiadds
fsts
sbb
add
pop
lret
push
or
mov
jae
inc
jmp
mov
dec
sbb
dec
loop
scas
pop
es
inc
into
daa
mov
xor
push
cmpsw
or
pop
imul
mov
cmp
dec
lcall
add
dec
pop
xor
and
xor
outsl
imul
push
data16
sbb
loope
mov
cmp
enter
pop
iret
dec
jmp
sub
mov
addr16
push
fbstp
clc
push
test
clc
jno
sub
adc
xor
ja
test
cwtl
rcr
add
xor
iret
in
adc
dec
add
jno
xor
sbb
adc
fwait
mov
xchg
ret
in
in
aad
mov
push
cltd
xchg
mov
cmc
outsb
les
ret
std
pop
mov
pop
jge
mov
xor
dec
pop
xor
inc
imul
mov
mov
dec
out
fwait
test
aaa
pop
mov
pop
in
movsl
dec
lea
loopne
cmp
push
lahf
mov
jb
rcrl
jge
cmp
scas
fstl
das
mov
mov
int
pushf
enter
push
testl
adc
or
jae
leave
sti
sbb
xchg
js
xchg
out
in
loopne
mov
pop
pop
adc
mov
decb
add
xor
in
xchg
lock
fwait
mov
xor
push
jnp
adc
std
in
stc
aaa
or
cmp
test
repz
mov
loop
movsl
lds
sub
and
jmp
loopne
mov
cmpb
fcomps
imul
xor
mov
andb
in
loopne
mov
pop
mov
in
das
pusha
out
pop
lds
subl
popl
repnz
inc
outsl
lock
test
mov
mov
xor
push
mov
dec
fs
sub
cs
ljmp
shrb
adc
mov
xor
add
jge
std
bound
push
iret
adc
repnz
sub
cmp
imul
icebp
push
and
jle
stos
jo
lods
pop
mov
mov
loopne
in
mov
or
pop
push
subb
xchg
xchg
xchg
out
mov
iret
or
jg
mov
jae
sub
sahf
pop
push
ljmp
test
sub
xchg
push
pop
bound
or
fadd
sbb
add
inc
jg
push
ret
fs
jge
inc
cld
rol
mov
sub
shlb
sbb
lret
imul
repz
pop
clc
aaa
popa
loope
test
sbb
cmpsb
push
adc
mov
jbe
je
out
dec
mov
ja
ss
fldenv
lock
inc
out
out
addr16
push
out
rclb
fisttps
xor
pop
das
outsl
sbb
xor
mov
mov
jl
ret
and
lretw
std
sar
xchg
iret
out
adc
arpl
into
sub
add
xchg
jbe
xchg
adc
into
pop
inc
jbe
cmpsb
pop
push
hlt
into
cmp
jns
rorb
jge
adc
iret
and
mov
xchg
mov
arpl
sbb
std
shlb
les
push
andl
lahf
pop
mov
ja
inc
das
dec
subb
std
pop
stos
sbb
lahf
pop
in
out
loopne
lods
pop
sbb
xchg
neg
rolb
pop
pushf
scas
ljmp
push
notb
lcall
rclb
std
sub
add
mov
sahf
inc
and
mov
xchg
dec
cmpb
in
mov
dec
insb
sub
inc
in
jnp
fisttpl
sbb
xchg
dec
mulb
subb
jbe
ss
sub
ret
and
push
sub
jmp
into
or
and
shl
gs
data16
xchg
jno
jecxz
lcall
gs
cwtl
inc
push
push
ja
pop
sahf
mov
in
cmp
jle
iret
pop
in
ja
xchg
fisubs
and
in
mov
push
lahf
xor
imul
lds
std
push
lods
int3
xchg
xchg
sub
fists
scas
inc
orb
cmc
lahf
mov
pop
cmp
push
jge
cli
cli
mov
cld
cwtl
inc
jecxz
shrb
push
pop
xor
push
cmpsb
lock
cmovo
jmp
push
lahf
dec
sar
mov
lock
jno
popf
dec
fwait
lret
mov
inc
stos
mov
es
subb
mov
add
mov
fcompl
scas
loopne
out
mov
dec
sbb
dec
ffreep
sub
ja
push
arpl
insb
aam
std
push
or
pop
xor
and
cmovnp
and
ror
jns
pushf
cmpsb
sub
lods
imul
mov
icebp
jge
es
fsubp
orl
int3
clc
rclb
mov
mulb
es
jo
jg
xor
lods
pop
dec
add
scas
mov
cmp
sahf
jb
pop
test
rolb
mov
hlt
arpl
out
fisubs
xor
and
mov
scas
pusha
ss
gs
pop
push
test
jb
outsb
or
pop
fiaddl
negb
and
push
mov
in
in
jnp,pn
mov
pop
int3
sub
lea
jge
or
js
jmp
test
mov
mov
pop
mov
dec
in
or
loop
inc
pop
stos
adc
jne
pop
mov
pop
xor
aaa
xchg
cmp
bound
mov
mov
fisubs
jg
cli
cmpsl
add
hlt
orb
add
stos
mov
stos
dec
ret
jecxz
aaa
mov
mov
addl
std
out
and
push
mov
outsl
pop
cli
mov
pop
inc
sub
push
hlt
jb
stos
imul
adc
inc
repnz
cmpl
mov
aas
ficompl
out
sbb
lods
xchg
sbb
sahf
adc
ljmp
imul
daa
xor
adc
test
and
repnz
push
sarb
lds
xchg
jnp
adc
lods
pusha
test
outsl
je
rorl
jle
ds
xor
cmp
xchg
pop
scas
mov
cvtdq2ps
lock
jno
sub
outsl
sbb
ljmp
mov
orb
ror
scas
cmp
mov
jb
les
cmp
inc
adc
pop
adc
rcrb
loope
xchg
pop
imulb
cmp
aam
in
shlb
jl
arpl
cltd
mov
push
es
pusha
scas
test
lret
jl
pop
cmc
adc
shl
inc
out
cmp
popa
xlat
adc
addr16
ljmp
cmp
mov
arpl
xor
cmc
inc
lds
push
les
mov
dec
cmp
mov
fsubp
sbb
bound
hlt
jo
ret
sbb
adc
pop
cwtl
xchg
imul
sub
daa
cld
fisubrs
sbb
movsl
call
cmpsl
scas
add
mov
fildll
sbb
out
sbb
mov
in
mov
andb
popa
push
dec
mov
lods
sub
push
sub
inc
pop
jle
in
xchg
push
pop
inc
sub
cwtl
call
out
ja
jns
cs
xchg
stc
loop
sbb
push
pop
mov
xor
cmpsb
mov
push
sub
jo
ret
es
and
ret
push
popa
cmp
push
sub
mov
dec
xor
pop
push
mov
in
push
xor
cli
notl
mov
stos
pusha
adc
lcall
test
inc
sahf
imul
push
dec
addr16
inc
cmpsb
sub
mov
xor
fdivrs
xchg
or
xchg
in
sarl
outsb
mov
dec
test
ds
cmp
mov
or
ds
daa
xchg
jne
lcall
mov
les
mov
adc
icebp
xorl
add
fldl
out
dec
pop
lea
cli
mov
cmp
icebp
aam
mov
push
out
aas
shl
int
ret
outsb
inc
mov
add
lret
lret
into
jle
dec
addr16
pop
jno
shll
loopne
jae
cmpsl
mov
add
dec
nop
cltd
mov
mov
xchg
mov
mov
dec
push
lret
int
pop
xchg
in
mov
dec
lret
sbb
ja
lods
and
xor
mov
xchg
fs
pop
mov
ss
les
add
jb
xchg
outsl
xchg
int
pop
pop
mov
jo
push
jne
mov
mov
ljmp
pop
sbb
fiadds
ret
stc
or
or
add
xchg
jecxz
outsb
xchg
pop
push
movsl
cmp
adc
cmp
pop
dec
pusha
lods
sub
sub
imul
jno
mov
fwait
rcr
addr16
fstl
lcall
loop
movsl
pop
sti
mov
jle
pop
imul
cmp
and
lds
mov
xor
jl
mov
in
push
mov
leave
or
movsb
aas
mov
add
sub
mov
es
test
dec
aaa
lods
jmp
insl
cmp
sbb
aam
pusha
hlt
jmp
nop
or
hlt
fs
inc
out
cld
fbstp
ljmp
mov
xchg
sbb
jp
or
dec
cld
inc
jbe
frstor
ja
dec
pop
sub
jl
lret
mov
mov
add
pop
int3
stos
xor
sub
call
mov
rcr
mov
outsb
or
in
add
fldt
mov
mov
push
sahf
sahf
cmp
push
les
xchg
test
xor
rclb
aas
inc
mov
or
mov
adc
loop
pop
fwait
inc
xor
push
imul
aas
ja
inc
adc
pop
cli
out
mov
pop
test
pop
loopne
rolb
inc
ss
pop
mov
cmp
pop
or
aaa
dec
adc
lret
hlt
mov
les
xor
stc
mov
ds
sbb
into
or
stc
loope
or
ret
mov
sarl
movsb
xchg
sub
adc
mov
jg
dec
into
das
mov
xlat
in
add
retw
push
inc
aaa
iret
add
cmpsb
leave
int
sub
sub
jnp
and
and
adc
repnz
lods
lcall
repnz
sub
lcall
outsb
xor
dec
mov
lods
lods
jge
pop
aam
mov
int3
sbb
sub
push
loope
test
pop
mov
aas
and
adc
sbb
inc
mov
ret
repnz
loope
stos
jae
xchg
lret
sbb
psubw
adc
int
std
sbb
cltd
shll
jl
test
cmp
arpl
sub
dec
mov
or
push
xor
outsb
cmpsb
adc
jns,pt
insb
xlat
out
ja
pop
lahf
xor
test
cs
test
mov
sbb
pop
fwait
inc
sahf
mov
xor
out
nop
lods
xor
inc
adc
jno
xchg
insl
mov
iret
shll
mov
nop
push
cmpsl
int
aam
jmp
pop
out
out
adcl
cwtl
push
ds
lds
push
jne
pusha
mov
stos
cld
jmp
sub
pop
sbb
movsl
xor
daa
xor
divl
push
pop
je
les
cmpsb
jo
out
or
fcompl
lret
outsb
jmp
pop
cmp
add
xchg
popa
jp
inc
out
mov
testb
pop
xchg
inc
imul
and
xor
inc
jge
mov
xor
outsb
sti
insl
dec
sarl
aaa
xchg
jmp
jb
sti
cltd
repz
or
mov
scas
aam
popf
jl
mov
adc
push
jp
aam
dec
inc
adc
push
xor
sub
push
insb
dec
neg
loopne
inc
cmpsl
or
dec
jnp
cwtl
dec
sub
xchg
sti
daa
stos
xchg
mov
adc
stc
ret
and
push
into
push
xchg
sahf
xor
nopl
mov
pop
adcl
sbb
adc
fidivl
xor
sbb
mov
fwait
es
lods
jmp
mov
outsb
jp
sub
mov
jecxz
push
popa
divl
push
out
gs
aas
mov
pop
mov
jnp
push
push
test
xchg
testl
jle
mov
sahf
pop
scas
pop
mov
push
out
inc
mov
cmpsl
push
xchg
xchg
testl
jle
mov
sahf
pop
scas
pop
mov
push
out
inc
mov
cmpsl
adc
dec
out
xlat
push
jle
daa
lcall
ficoms
inc
sbb
lret
testl
mov
mov
mov
cmpsb
scas
xchg
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
popf
fimuls
out
imul
loopne
sbb
or
jle
push
dec
subl
into
mov
sahf
int
std
mov
or
outsb
pop
insb
jge
jge
insl
cs
xchg
xlat
movsl
out
test
aad
in
in
mov
pop
cs
bound
push
sbb
and
dec
cmp
xchg
loop
mov
push
int
cmp
sub
test
add
dec
test
fidivs
vmovsd
int
js
js
cwtl
mov
rcll
jge
xchg
bound
movsl
dec
int
mov
adc
sub
dec
add
mov
insl
imul
mov
add
in
sub
adc
mov
shrl
pop
add
xor
dec
lcall
sbb
mov
xchg
xlat
movsl
sbb
push
subb
jne
insl
mov
and
sub
mov
andb
jge
sbb
push
out
jge
insl
sub
fidivrs
sahf
fisttpll
add
adc
ja
push
push
push
addr16
das
icebp
fsubrp
mov
scas
pushf
stos
out
mov
in
lret
sbb
jp
or
sub
push
add
mov
cmpsl
rorb
int
std
lret
pop
sub
cmp
outsb
es
or
pop
clc
fsubp
into
rcrl
int
std
mov
or
outsb
pop
push
dec
push
jge
insl
cs
fimuls
out
fstpl
in
scas
sbb
jle
outsb
pop
push
dec
push
jge
insl
cs
fisubs
in
mov
scas
adc
jo
mov
dec
mov
data16
cmpsb
out
sbb
xor
adc
add
call
jge,pn
arpl
dec
lret
fldcw
aas
cmc
pop
test
mov
sahf
ja
lcall
je
sbb
daa
arpl
adc
xchg
add
sub
insb
jl
inc
or
sub
push
ss
aad
cmp
mov
jbe
lahf
movsb
and
jns
jae
int3
js
and
jbe
inc
imul
scas
jmp
jne
out
jl
lds
and
scas
dec
loop
insl
jno
mov
ljmp
insb
adc
fwait
xchg
das
repz
outsl
rcrl
jl
add
test
mov
aaa
xor
sbb
cmpsb
or
cld
mov
inc
and
iret
aad
mov
sub
lods
ljmp
dec
stc
sub
bound
sub
xchg
stos
push
mov
mov
cli
and
or
pop
filds
mov
jnp
js
int3
scas
or
pushf
dec
xor
dec
andb
pop
fwait
aad
shrb
pop
sub
loopne
or
ljmp
add
imulb
in
mov
test
lret
push
mov
adc
xor
mov
jae
lsl
and
dec
lret
inc
jge
mov
les
sahf
xchg
jno
rcll
int3
into
js
xchg
mov
test
pushfw
push
lcall
sbb
fwait
lret
sahf
std
sbb
and
test
test
fsubs
jbe
jle
pop
push
scas
js,pt
pop
push
jl
les
aad
sahf
pop
pop
cmp
and
cmp
jg
jmp
sub
mov
jae
adc
pop
stc
sub
sbbl
mov
cmpsb
rol
mov
push
adc
inc
jge
and
test
cmpsl
imul
leave
xchg
cmpsb
xorb
mov
inc
jecxz
out
loope
pop
es
adcl
clc
xchg
nop
cmc
stc
and
pop
or
insl
sbb
test
xchg
popa
in
add
mov
pop
rorb
adc
push
jb
enter
xchg
jbe
int
outsb
daa
hlt
lahf
shlb
mov
or
sbb
fdivrp
es
dec
and
fnsave
mov
cmp
xor
hlt
cltd
test
shll
sub
fbstp
jle
xchg
dec
push
test
inc
mov
addr16
xchg
xor
test
and
push
jmp
add
arpl
fildl
mov
lret
xor
cmpb
mov
jmp
mov
xor
xchg
pop
lds
push
imul
stos
popa
outsb
mov
sbb
mov
outsb
insl
lret
int3
lea
aaa
pop
push
sub
out
pop
pop
adc
adc
adc
ds
popf
out
inc
and
dec
mov
imul
inc
pusha
cli
or
adc
sahf
into
pop
sar
xor
mov
xchg
dec
mov
mov
enter
stos
mull
ret
sbb
in
aam
shrb
cmp
enter
xchg
ds
iret
sti
mov
loope
stos
mov
or
lea
mov
movsb
dec
add
dec
inc
mov
jbe
push
out
mov
mov
cmp
stos
dec
sbb
ja
adc
adcl
int3
out
orl
jge
and
cld
pop
mov
or
pop
or
xlat
test
popf
adc
popa
adc
cltd
cwtl
cmp
add
iret
adc
mov
mov
inc
es
aam
jecxz
sbb
cli
ret
fdivl
jb
mov
push
push
pushf
shlb
xchg
mov
push
inc
dec
leave
add
std
mov
pop
dec
rorb
and
pusha
mov
xchg
mov
adc
mov
xchg
pop
and
sub
mov
jmp
sub
sbb
std
idiv
add
imul
aas
popf
mov
sub
ret
adc
sbb
sahf
pop
inc
mov
divl
scas
inc
inc
xor
in
dec
addl
outsb
mov
loop
mov
lret
fs
pop
inc
adc
fninit
enter
jns
mov
xchg
mov
loope
mov
rcll
stos
adc
sti
add
mov
popf
or
pop
lret
lahf
and
sub
les
outsl
push
insl
pop
jmp
cmp
and
mov
jp
dec
je
push
out
mov
loopne
loope
lret
shll
cli
movsb
imul
add
mov
mov
int3
push
dec
add
pop
dec
mov
or
test
inc
das
jmp
jl
dec
mov
add
in
gs
xor
lds
xchg
fs
dec
jge
and
push
dec
arpl
loope
cltd
dec
mov
das
mov
fdivrs
mov
push
sarl
mov
mov
jge
inc
xchg
jb
nop
test
jle
cmp
fwait
lea
sahf
jecxz
dec
mov
out
test
inc
add
js
dec
cld
int
mov
sub
jae
lea
xchg
xchg
add
es
sub
jne
mov
inc
pop
sbb
xor
add
ret
xchg
push
jnp
ret
popf
xchg
jmp
fsubrs
insl
sub
xor
cmp
pop
pop
loopne
xchg
into
inc
insb
inc
xor
sar
sbb
sbb
fsubrl
shll
nop
push
sub
jnp
adc
cmp
xor
cmpsb
fsubs
gs
rorb
push
ret
sub
push
sbb
iret
sub
jecxz
sub
pop
shlb
sbb
insl
xchg
and
js
push
clc
push
adc
sbb
jnp
cli
add
xor
push
push
xchg
adc
mov
popa
enter
aaa
mov
and
ljmp
xor
lret
out
hlt
js
xchg
mov
sbb
addr16
mov
popf
mov
hlt
fistl
push
push
mov
pop
xor
xchg
syscall
xchg
outsb
scas
jge
sub
xor
addb
out
loop
dec
cmpsb
sarl
outsl
adc
mov
mov
mull
test
inc
xchg
xor
fildl
aas
jns
xor
adcb
push
ljmp
loopne
inc
popa
push
aas
mov
adc
sub
xchg
fdivrs
xchg
push
lcall
push
idivl
mov
and
lea
mov
mov
pop
sbb
or
loop
filds
cwtl
sbb
fmull
mov
and
lods
jne
push
ret
push
repnz
out
cltd
loope
add
leave
lretw
or
fldcw
push
iret
cmp
jae
fbld
popf
fstps
push
xor
cmc
jne
xorb
outsb
outsl
jne
lods
repnz
in
bound
jae
push
ss
mov
mov
adc
sub
lock
divb
sub
in
sahf
dec
icebp
jnp
sbb
fisttpll
inc
mov
inc
aad
inc
pop
pop
xchg
lcall
xchg
push
sub
sar
pop
mov
pop
xor
jnp
repz
divl
test
mov
pop
cmpsl
xor
cmp
call
or
leave
sarb
xchg
mov
mov
jae
es
push
inc
sub
pop
rcrb
xchg
mov
jbe
repnz
scas
mov
cmpsb
mov
fdivs
push
aam
xor
xor
and
cwtl
add
testl
pusha
adc
pop
sti
subb
fiadds
xor
ret
into
mov
lods
add
inc
and
orb
jnp
cmpl
lods
mov
pop
xchg
mov
ljmp
mov
sti
into
jg
jnp
or
dec
bound
cmp
out
mov
push
das
push
mov
mov
lea
test
jns
xchg
in
mov
and
or
repnz
nop
imul
mulb
movsb
sub
out
or
or
and
sbb
nop
movsl
or
repnz
mov
dec
sub
lret
mov
addr16
add
sub
iret
or
push
ficoms
and
ret
cmc
data16
mov
jne
stc
stos
mov
mov
jns
daa
sub
pop
pop
dec
call
mov
jo
les
outsb
negb
inc
test
sbb
add
pop
jmp
jne
pmullw
into
mov
lcall
in
into
je
jp
cmp
nop
lods
sbb
dec
push
jne
fistpl
and
inc
addr16
mov
jge
jb
out
pop
fsts
mov
mov
mov
pop
pushf
pop
adc
movsb
lea
jnp
pop
push
fnstsw
xchg
lods
rcrl
jne
scas
mov
jp
fcompl
and
pop
les
dec
scas
insb
jb
mov
imull
pushl
xchg
gs
lock
and
mov
dec
lcall
lret
out
in
outsl
lea
lret
sub
das
lret
xor
stos
loopne
or
cli
pop
push
xor
adc
xchg
jae
lods
fstpl
popf
jle
push
ret
xor
arpl
or
loopne
movsl
or
mov
dec
or
mov
mov
out
sbb
in
inc
mov
pop
int
jae
je
addb
xor
lods
mull
xchg
int
cmp
adc
hlt
repz
xor
shrb
adc
cmpsl
jp
push
and
hlt
in
sbb
jp
jae
and
push
and
or
fadd
jmp
dec
sbb
insb
addr16
mov
adc
adc
outsb
out
dec
pop
ja
dec
add
pop
push
xor
push
add
daa
mov
or
std
bound
or
mov
and
sbb
ffree
xor
adc
mov
test
cs
jle
cmpsl
incl
xchg
shll
jecxz
add
fcmovne
add
jecxz
pop
daa
aas
jecxz
cmc
mov
loope
mov
dec
mov
push
popf
or
cmpl
inc
inc
push
pop
xchg
and
xchg
insb
data16
mov
push
imul
push
push
mov
outsl
mov
jle
or
mulb
fs
pop
inc
lret
cwtl
rep
icebp
jmp
mov
notb
test
aad
call
dec
repnz
mov
test
mov
mov
sbb
outsb
outsl
xlat
mov
or
incl
lahf
dec
mov
sbb
or
add
dec
repnz
lea
sbb
xchg
add
ret
fidivrs
jecxz
add
mov
xchg
jecxz
ret
imul
fucomip
out
out
sub
jmp
outsb
cmp
add
shlb
mov
outsl
fwait
nop
js
mov
pop
iret
push
mov
out
pop
mov
dec
pop
ss
out
movsl
push
mov
stos
lods
and
lea
inc
sbb
jae
jns
into
mov
pusha
in
mov
mov
ret
inc
in
inc
sbb
xor
adc
mov
ss
ret
pushf
sbb
sub
popa
fucomi
jl
cmp
aaa
inc
push
xlat
push
jns
inc
pop
int3
push
add
andb
pop
sarl
dec
mov
dec
fildl
mov
add
sub
adc
ds
mov
jne
mov
imulb
cmpsl
in
pop
in
sub
mov
lock
adc
lds
mov
mov
add
ljmp
insb
add
int
sub
mov
mov
jnp
mov
loope
lds
mov
xchg
aas
jb
shl
lahf
cli
xor
aad
and
mov
outsb
sti
adc
jp
mov
push
pop
fwait
xchg
loop
mov
arpl
jecxz
ja
xchg
lods
repz
lcall
and
dec
mov
cs
stos
add
push
mov
fidivrs
add
and
jae
sub
push
inc
jmp
and
mov
fisubrl
cmp
push
inc
rcll
out
push
in
mov
adc
jno
mov
out
imul
pop
xadd
shll
mov
mov
in
sub
dec
jmp
dec
cmpsb
add
fidivrs
jp
mov
sbb
test
and
push
pop
xchg
cs
out
dec
xor
dec
popa
arpl
lods
pop
repnz
inc
jbe
mov
push
add
xchg
fxch
cwtl
ja
jns
pop
insl
je
pop
adc
xor
in
in
in
sub
out
addb
dec
jle
adc
dec
gs
mov
call
stos
sub
ss
ret
cmp
pop
icebp
mov
push
mov
insl
sti
xor
xchg
inc
daa
lahf
push
jge
pushf
mulb
push
bound
lret
in
ljmp
outsb
sub
sbb
mov
fsubrl
ss
rorl
ljmp
mov
movsb
sub
mov
sub
xor
jns,pt
xor
inc
imul
fcoms
aam
stos
fcmovnb
ds
decb
mov
pop
pushf
ja
ljmp
pop
repz
or
in
add
sbb
pop
rcll
mov
sbb
cwtl
ljmp
jecxz
pop
adc
out
sub
inc
lahf
jl
sbb
adc
out
int3
xchg
inc
xchg
shll
push
mov
sarb
scas
iret
cmp
dec
lock
clc
mov
jp
gs
les
cmp
mov
jnp
aam
mov
sbb
sub
sbb
jl
stos
jns
enter
jecxz
and
or
push
pop
inc
xchg
push
xchg
dec
mov
sbb
test
mov
xor
inc
out
es
sub
push
cltd
shll
jl
fcoms
leave
jns
or
sub
dec
lret
sub
dec
jg
out
mov
lds
stos
ja
pop
orb
inc
stos
mov
and
cmc
pop
sub
mov
fildll
mov
push
jecxz
push
shlb
or
mov
std
add
popa
les
lock
pop
ljmp
add
ret
imul
mov
out
gs
cmpsb
xchg
sbb
mov
test
jg
cmc
stos
enter
push
and
fistpl
xchg
mov
mov
mov
add
jge
cld
shrl
cmp
add
pusha
iret
sub
push
adc
dec
mov
and
shll
or
xchg
jp
repz
cmpb
push
shlb
outsl
loopne
sub
sbb
das
das
pop
xorb
js
out
add
test
pop
pop
cwtl
in
jmp
fs
mov
sub
int3
cmp
mov
jecxz
jns
mov
adc
push
shr
cmp
pop
pop
mull
xorl
mov
xchg
ds
mov
scas
mov
inc
and
addb
imul
mov
mov
out
nop
jmp
xchg
xchg
ja
push
lods
fwait
cmp
sbb
dec
pusha
stc
loopne
pop
push
fbstp
fildl
jmp
jmp
mov
into
or
mov
es
inc
add
fsubrl
push
adc
dec
jg
mov
enter
fnstenv
xchg
push
or
push
or
add
jg
out
cmc
mov
call
cmpsl
lods
imul
adc
daa
mov
mov
leave
sbb
jecxz
lea
leave
std
imul
sub
call
ljmp
in
xchg
xor
loopne
fldenv
scas
mov
inc
movsb
sbbb
inc
movsb
mov
leave
jbe
cmp
mov
mov
into
daa
dec
leave
orb
or
xchg
pushf
add
clc
dec
fidivs
mov
pop
and
and
mov
das
xchg
popf
adc
dec
mov
mov
jp
insl
sub
mov
mov
jbe
insl
popf
daa
jl
add
shll
cmpsb
hlt
pop
fwait
mov
or
aam
push
ss
inc
xchg
add
pusha
enter
adc
test
mov
filds
shr
cmc
xor
or
xchg
ficoms
bt
fimuls
imul
push
cltd
mov
push
jmp
xor
pop
xchg
sbb
iret
and
std
mov
ret
into
fnsave
ret
push
push
jmp
inc
push
fwait
lahf
mov
adc
xchg
mov
test
test
lods
or
xchg
inc
addr16
xor
scas
call
pushf
jae
cmpsl
cmpsl
sbb
add
mov
sti
fmuls
add
inc
adc
sbb
cs
cmp
data16
mov
push
sub
lods
out
jp
loopne
sub
imul
jmp
cmp
inc
int3
test
push
mov
lock
in
in
sbb
adc
xchg
lock
pop
insl
js
push
pop
mov
dec
jl
mov
xor
dec
xor
leave
jge
mov
lret
sub
daa
ljmp
fadd
adc
ret
cmpsl
lds
dec
sub
jg
dec
mov
ljmp
add
inc
dec
mov
jne
xor
es
test
loop
ret
out
pop
xor
cld
jg
push
mov
xchg
in
xchg
mov
movsb
xchg
cmp
repnz
push
mov
outsl
mov
jp
sbb
mov
pop
adc
fisubs
repz
ja
mov
add
in
jns
call
cmp
xchg
jno
les
iret
inc
ret
mov
dec
xlat
mov
mov
mov
xchg
leave
mov
and
aad
inc
fmul
outsb
filds
lea
idivb
mov
xchg
jle
jno
push
add
loope
testl
es
loope
leave
pop
roll
rol
stos
dec
adc
mov
add
inc
icebp
xchg
cmp
test
xchg
test
jg
push
sbb
in
xor
mov
jl
sub
sbb
sbb
ror
add
add
adc
pushl
fwait
and
xor
or
stos
out
sbb
sub
addr16
push
out
mov
cmp
mov
pop
iret
cmp
int3
adc
lahf
faddl
fdivrs
js
adc
and
push
add
insl
mov
fsub
pushf
aaa
int
fmulp
repz
stos
movsb
movsl
pop
dec
mov
sarb
in
inc
mov
mulb
mov
pop
rcll
add
out
aaa
mov
adc
fildll
cld
and
js
pop
xor
enter
les
pop
into
sub
shl
pop
mov
mov
push
jecxz
test
pop
lods
outsl
out
movsl
sbb
mov
or
and
xor
push
xor
jb
mov
lods
mov
fistpll
push
lock
xchg
add
push
sub
push
adc
arpl
das
out
dec
push
mov
mov
pop
push
pop
filds
jmp
scas
ljmp
jge
push
push
mov
xor
sbb
or
jne
xchg
icebp
imul
mov
test
sarl
xor
ret
jmp
in
ljmp
sahf
cmp
enter
and
xchg
adc
fwait
dec
fsubrs
clc
imul
pop
mov
jae
fldcw
repz
out
sub
xor
mov
pop
mov
subl
sub
fwait
jge
inc
sub
test
sti
sarb
test
jae
xchg
in
pop
push
sti
popf
xchg
jne
sub
dec
xchg
adc
push
lods
sbb
aas
fistpll
and
lods
xchg
mov
mov
mov
aaa
fistps
out
loop
jecxz
in
or
cmp
fisttpl
add
movsb
mov
xor
sbb
lods
aas
negb
xchg
dec
push
outsl
adc
adcl
pop
int3
push
and
jmp
push
outsb
push
dec
rorb
outsl
sbb
pushf
push
jns
jecxz
int
push
adc
js
mov
andl
icebp
pop
shl
inc
push
sbbb
lcall
call
adc
ret
jecxz
out
xchg
lds
sub
mov
inc
mov
fisttpll
sbb
imul
pop
lahf
stos
sub
js
pop
mov
aas
jne
push
mov
cli
idivl
repnz
jg
cmp
and
clc
imul
sbb
in
lret
jg
inc
pop
sbb
movsl
add
mov
iret
int
add
adc
pop
ret
mov
lods
out
fstpl
in
scas
sbb
jle
outsb
pop
push
dec
push
jge
insl
cs
fimuls
out
fstpl
in
scas
sbb
jle
outsb
pop
push
dec
push
jge
insl
cs
fimuls
out
fstpl
in
scas
sbb
jle
push
push
dec
push
jge
outsl
sub
cli
lods
out
fistps
insl
outsb
loop
repnz
jle
sbb
xchg
lds
inc
xchg
push
inc
pop
ret
psllq
jecxz
sub
mov
outsl
push
roll
jb
arpl
and
and
rcrl
ret
pslld
jecxz
xchg
pop
orl
mov
adc
add
xor
and
rcrl
ret
psllq
jecxz
xchg
pop
orl
mov
lods
adc
push
into
jo
push
adc
ret
inc
mov
jg
dec
dec
hlt
nop
in
jl
cli
jl
xor
pop
lcall
xchg
xchg
stos
xchg
pop
mov
cmp
gs
jo
stos
out
lret
out
push
cmp
fstpt
cld
push
subb
push
or
cmp
add
lret
mov
push
adc
ret
sub
pop
vmread
adc
test
cmp
xor
cmc
sub
imul
outsl
mulb
mov
mov
ret
and
stos
inc
mov
mov
fcoml
sub
outsw
jae
dec
xchg
sub
out
mov
xor
and
mov
ret
psllq
jecxz
xchg
pop
orl
mov
jae
arpl
xor
and
lahf
aas
lods
das
sarb
out
hlt
cmp
cmp
out
mov
pop
dec
stos
pop
xchg
mov
push
pop
stos
das
divb
out
mov
fisttpl
add
testb
push
lret
jo
arpl
in
inc
nop
dec
ret
dec
shlb
dec
mov
mov
jae
arpl
xor
and
rcrl
ret
psllq
jecxz
xchg
pop
orl
mov
jae
arpl
xor
and
rcrl
addr16
mov
loopne
mov
inc
jbe
adc
ds
push
dec
sub
or
sbb
pop
ds
jmp
mov
xchg
lcall
sahf
mov
arpl
bound
stos
mov
mov
dec
inc
and
adc
ret
faddl
movsl
push
jmp
scas
cmc
lcall
out
rclb
aaa
outsl
xlat
pushf
jno
jl
push
mov
sbb
push
outsl
xchg
xorl
fsts
insl
pop
fsubrp
mov
mov
mov
cmpsl
push
push
xlat
jp
and
pop
jg
adc
fdivrl
mov
addr16
inc
add
cmp
mov
fcomps
jp
jle
fisttps
jne
lods
or
inc
je
movsl
int3
sbb
aas
xchg
clc
xor
mov
cmp
cmpsl
test
xor
pop
cmc
pop
fwait
xor
lea
frstor
pop
stc
sbb
mov
pop
jle
mov
lods
fs
push
xlat
or
pop
mov
and
pop
lcall
mov
adc
inc
xchg
aaa
jge
sub
cld
mov
pop
popf
in
mov
mov
popf
jae
mov
mov
xchg
mov
pop
out
jp
inc
shrl
jmp
pop
mov
incb
neg
dec
shr
hlt
jmp
cld
mov
outsl
fs
push
dec
sub
repz
push
andl
sbb
mov
mov
popf
aad
fiadds
out
inc
sub
out
dec
lcall
fidivl
push
lahf
fisttpll
and
cmp
mov
push
or
dec
jne
mov
cli
add
dec
mov
push
mov
fabs
mov
int
pop
cmp
loop
mov
pop
mov
into
push
shl
dec
mov
loope
or
clc
adc
mov
xor
sti
pop
add
sub
dec
and
inc
inc
movl
push
adcl
push
repz
inc
fcomps
fistl
repz
mov
cmp
and
jae
jge
or
and
std
shll
mov
repz
inc
inc
loope
push
mov
add
sbb
inc
fwait
jecxz
orb
ja
jns
iret
mov
lcall
repz
add
leave
xchg
mov
dec
xchg
insl
ret
sbb
mov
call
mov
xchg
add
pushl
rorl
xor
mov
adc
insb
nop
lret
cmpsl
or
jecxz
iret
push
imul
xor
jmp
pop
in
mov
xor
pop
test
or
xchg
fs
xchg
je
lahf
inc
imul
add
mov
add
or
shrl
nop
and
xchg
aad
push
in
es
and
add
ljmp
mov
decl
mov
and
jo
pop
mov
ret
data16
sub
and
cmp
add
bound
mov
loopne
hlt
ljmp
sbb
movsb
insb
jo
out
orl
sbb
mov
sbb
lret
insb
out
sbb
fwait
push
xchg
cmpsl
mov
jg
aas
mov
push
rclb
pop
or
adc
adc
xchg
mov
mov
adc
fcompl
ds
in
enter
ljmp
mov
out
mov
mov
pop
cmp
call
sub
and
mov
pop
test
mov
and
inc
repnz
loopne
lahf
sarl
das
cmp
jbe
sub
std
cltd
movsb
or
adc
and
mov
das
andb
leave
outsb
icebp
out
mov
sbb
pop
std
fwait
add
mov
fimuls
fcompl
cvtdq2ps
or
jo
pop
fs
out
cmp
fcoml
out
ss
jnp
int
dec
stos
sbb
adc
mov
sbb
dec
inc
xchg
cmp
jmp
subb
xor
mov
movsb
je
fidivl
push
repz
jb
adc
sbbb
xor
add
pop
mov
inc
out
push
pop
in
pushf
mov
aaa
mov
or
fisubl
insb
pop
sub
cli
aad
lods
cmp
loop
nop
jl
idiv
adc
push
sbbb
or
mov
or
rorl
repz
movsb
pop
negl
jno
fwait
dec
outsl
and
jo
pop
addr16
push
xchg
lds
mov
fistpl
sub
dec
cmp
ds
mov
fisubs
popf
cmc
push
mov
dec
and
jne
mov
mov
lret
sub
sub
leave
inc
adc
push
cmp
jg
mov
cmp
int
into
out
and
and
dec
xor
in
sbb
sti
dec
ljmp
clc
fs
lahf
lahf
pop
sbb
in
pop
mov
bound
inc
and
mov
or
mov
div
mov
cmp
and
mov
mov
sub
test
int
pop
repz
dec
das
outsl
jmp
inc
ljmp
inc
cmp
popa
push
mov
stos
nop
insl
dec
sbb
jecxz
adc
inc
stc
mov
mov
push
ret
notl
pop
loopne
imul
mov
das
dec
inc
inc
mov
adc
xchg
jle
fildl
push
out
mov
pop
lcall
test
rcrb
and
jno
mov
jmp
mov
push
pop
jb
cmc
cmp
push
mov
js
sub
loope
pop
out
in
out
xchg
fists
loop
mov
cli
sar
in
cmpsl
addl
adc
ljmp
xor
fwait
xchg
int3
sub
mov
pop
and
mov
xor
sarl
in
add
add
mov
push
mov
or
xchg
mov
sbb
mov
negb
inc
fsubrl
dec
push
repz
xor
push
and
scas
jecxz
push
arpl
inc
test
mov
outsl
daa
dec
add
rolb
test
cld
addb
jmp
pop
push
adc
cmpsl
inc
mov
je
test
push
xorb
add
insl
dec
inc
cwtl
inc
lock
pop
mov
xchg
adc
xor
cmp
and
fwait
xor
daa
sub
add
adc
pop
cltd
sbb
test
cld
mov
sbb
decl
sarl
test
je
out
lret
mov
lock
pop
dec
fmull
aaa
je
jg
aaa
cmp
subl
call
dec
pop
dec
loope
ficoml
nop
out
jecxz
or
int3
add
aas
push
insb
and
dec
inc
add
lock
sub
xor
mov
rorb
in
push
movups
lea
or
or
insb
or
cld
loope
or
insl
ss
xor
lods
lret
cmp
and
xor
push
xchg
loop
iret
sarb
add
sbb
in
loopne
mov
lea
mov
insl
or
and
add
bound
aam
cmp
test
in
fcmovnb
mov
sbb
neg
aas
aam
sbb
dec
xchg
cmpsb
stos
fistl
int3
or
cltd
pusha
test
daa
int
imul
test
scas
test
bound
int3
xchg
aas
adc
mov
movsl
add
lock
call
pop
mov
leave
pop
pop
insb
inc
outsl
pop
jge
cs
jecxz
sub
pop
jo
pop
xor
cmc
ret
repz
lods
inc
call
dec
or
ret
add
repnz
loop
mov
inc
xor
rclb
mov
xchg
bound
lds
push
mov
inc
ds
cmp
jmp
and
lahf
fcoms
mov
lds
dec
dec
xchg
dec
push
imul
leave
sbb
xchg
xlat
xor
fists
ljmp
out
test
cmp
nop
mov
lea
cmp
mov
dec
sbb
addr16
repz
adcl
flds
sbb
adc
adc
jae
loope
jo
dec
pop
xchg
daa
addb
jne
push
cmc
dec
mov
mov
xchg
add
and
popf
lret
pop
data16
sti
dec
push
nop
sub
ret
call
leave
pop
sbb
sub
in
lret
xchg
mov
cmp
aas
xchg
lock
movsl
mull
mov
mov
push
dec
loopne
test
mov
mov
mov
xlat
filds
out
out
xchg
add
inc
inc
fld
nop
push
xor
dec
arpl
xor
jns
stc
or
in
mov
push
fisttps
test
xor
push
jb
adc
jo
je
pusha
push
gs
xchg
mov
inc
dec
xchg
jp
cltd
je
fsts
inc
dec
jge
and
ret
gs
hlt
mov
xchg
adc
xor
inc
pop
mov
push
inc
loope
cltd
push
adc
stos
xchg
jecxz
js
gs
stos
jg
je
mov
testl
aaa
cmp
jnp
sbb
xchg
rcll
xchg
push
or
clc
in
fs
add
mov
push
bound
mov
jp
dec
loope
fucomip
cld
ljmp
push
or
jge
push
push
mov
in
stos
repz
add
jae
pop
stos
lock
push
insb
imul
adcb
mov
aam
mov
out
sub
aad
imul
sbb
mov
dec
leave
push
mov
lahf
stos
cli
xchg
add
jbe
push
jg
mov
adcb
mov
mov
cmp
test
gs
lret
lret
popf
xchg
pop
ret
and
lds
dec
push
out
in
outsb
pusha
sub
mov
or
or
mov
adcl
dec
xchg
inc
mov
pusha
push
jnp
loop
dec
xor
lods
repnz
arpl
sub
loope
adc
das
in
loop
pushf
jmp
push
daa
inc
sub
loop
arpl
movsl
loop
xchg
scas
add
jecxz
mov
sub
cmp
bound
jae
rclb
popf
and
int3
fstps
add
jno
out
sbb
ror
dec
mov
pusha
cmp
addl
test
int3
es
mov
frstor
pop
fsub
sahf
pop
ljmp
bound
or
adcl
testb
or
pop
jl
sub
push
adc
je
stc
xchg
mov
mov
mov
ss
testl
add
add
xor
or
sbb
daa
adc
fcom
mov
sbb
movsb
movsl
les
sbb
fists
sbb
add
inc
xchg
test
pop
test
mov
in
xchg
in
js
cmpsb
push
push
inc
addr16
mov
je
adc
xor
fwait
call
sub
cmp
xor
jg
jo
push
imul
rorl
clc
push
push
imul
pop
pop
cwtl
fisttpl
iret
arpl
push
out
sub
mov
cmpsb
pop
lea
dec
add
repz
sub
bound
data16
xchg
cmp
adcb
pop
pop
out
xchg
call
lea
sbb
cwtl
cmp
je
and
sbb
int3
icebp
push
shll
je
jno
js
addb
xchg
and
loop
push
loopne
adc
cmc
les
mov
sbb
shl
arpl
aad
add
xchg
rcll
lcall
pop
fs
push
xor
inc
and
and
fildl
xor
pop
sub
lea
cmp
push
inc
xchg
mov
incb
mov
mov
fmull
mov
or
and
addr16
inc
stc
or
cmc
popf
pop
mov
pop
mov
sbb
add
dec
and
sub
aad
jno
lret
cmp
dec
mov
dec
or
xlat
test
adc
loope
or
xor
rclb
pop
xlat
cmp
rolb
repnz
and
sti
sub
mov
ja
loopne
inc
jp
or
sub
int
scas
and
sub
in
cmpl
fstps
xchg
jp
add
push
mov
mov
push
addb
dec
sub
sbb
jp
adc
inc
xlat
cld
xor
inc
testl
and
dec
rcrl
dec
icebp
imul
pop
adc
add
ss
or
xchg
cmp
xor
int3
mov
xchg
aas
loop
stos
arpl
add
movsb
pop
add
lods
dec
sub
pop
xor
adc
adc
jl
stos
jno
iret
shlb
mov
sbb
es
neg
insl
notb
nop
and
mov
dec
mulb
sar
sub
hlt
jne
aas
or
adc
sub
imul
or
mov
cmp
repnz
dec
cld
negl
shll
inc
mov
mov
push
sub
lods
clc
xor
fcomip
sar
and
shlb
je
and
popf
stos
push
pop
outsl
push
mov
sarl
imul
mov
negl
in
push
inc
mov
test
imull
jl
gs
ret
data16
mov
dec
or
lds
lods
add
loope
mov
sti
sbb
mov
cmp
pushf
test
jle
jno
out
sub
inc
lret
jmp
incb
jp
sub
pop
enter
mov
xor
fldt
js
fdivrl
sub
add
fcomps
jne
xchg
ljmp
pop
es
rcll
mov
xchg
repz
in
jbe
and
mov
je
fstps
push
mov
mov
mov
repnz
mov
out
sbb
or
das
leave
pop
push
aam
cmpl
adc
cs
xchg
mov
fisubs
xorl
and
cmpl
jecxz
icebp
mov
adc
jg
inc
bound
arpl
mov
lcall
lret
mov
movsl
test
insb
imul
xchg
fdivp
ficoml
adc
or
pop
fs
pop
jbe
ljmp
adc
jno
and
mov
mov
jnp
sub
lock
lods
divb
mov
loope
dec
cmp
aad
test
hlt
push
jp
mov
sbb
orb
addl
shlb
inc
lock
fcoml
bound
adc
and
iret
aam
pop
push
je
inc
jp
jbe
or
cs
or
out
ss
jo
shl
fs
nop
es
mov
sti
jns
mov
mov
repnz
xchg
orl
mov
cmc
int3
mov
ja
loopne
cmpsb
mov
sub
jecxz
push
in
insl
fdivrl
jp
or
popf
inc
imul
dec
dec
insb
mov
out
or
cmc
int
test
sbb
jb
mov
sbb
lock
adc
xchg
cwtl
repnz
fistpll
in
mov
and
cmpsb
shrl
subb
adcl
enter
dec
movb
jge
xor
mov
sub
jl
sub
or
pushf
pop
push
dec
insb
cmpsb
and
xor
or
jnp
sub
inc
add
inc
pop
negb
mov
lcall
mov
scas
sar
scas
je
adc
xor
addr16
push
inc
les
leave
fsubrs
outsb
rorl
cmp
ss
ds
movsb
xor
cmp
fisubrl
sbb
xchg
in
xor
mov
jle
leave
sbb
bts
gs
add
movsb
xchg
add
bound
dec
and
push
hlt
fstl
xlat
andb
lods
mov
mov
sbb
pop
or
push
insb
pop
xor
je
jns
nop
pop
jno
lret
jmp
pop
pop
sbb
loopne
pop
lock
adc
add
shll
sbb
add
les
ret
lods
inc
adc
fcomps
xchg
dec
stos
ds
add
sbb
mov
push
fisttps
push
ret
xor
dec
pop
or
dec
cmp
mov
aaa
mov
mov
pop
inc
cmp
mov
add
movl
mov
inc
jg
testl
add
dec
test
cmpsb
add
adc
cmc
inc
or
xlat
shl
loop
sbb
cli
cs
push
push
pop
mov
add
lahf
jae
popa
jl
pop
mov
movsb
shlb
jb
xchg
mov
jb
rcrb
inc
bswap
xor
rcr
loopne
aad
jecxz
xlat
xor
insb
pop
adc
arpl
insb
mov
fisubs
xchg
mov
cmc
out
rcll
ret
inc
mov
pop
aam
inc
js
fwait
loop
mov
fs
push
and
push
fwait
push
aad
movsl
and
cmc
jo
sbb
mov
nop
orb
shl
jg
lods
xchg
pop
jmp
test
das
fisubrl
mov
outsl
mov
mov
dec
pop
jp
popl
stos
dec
mov
or
push
mov
mov
xor
add
bound
xor
sbb
and
stc
push
insl
and
test
mov
inc
jnp
fwait
subl
sub
cmp
and
add
fistpll
mov
mov
shlb
jae
js
or
aaa
jmp
mov
repnz
xchg
jnp
lods
jge
lods
sahf
nop
loopne
stos
jb
pop
xor
cmc
pusha
lea
ret
jb
cltd
xor
loopne
push
pop
lods
in
lahf
xor
xchg
inc
xchg
es
pusha
out
cmp
cmpsb
gs
out
stc
sub
aam
xchg
jle
lock
notb
js
cwtl
mov
pop
nop
xlat
cmp
imul
rcrb
push
dec
cmp
inc
push
mov
out
ret
dec
dec
cmp
xchg
xor
je
xor
xchg
incl
pop
mov
add
xchg
insb
orl
mov
xchg
cvtps2pi
gs
dec
subb
xchg
sti
imul
sbb
mov
pop
or
xchg
lods
lods
adc
sub
scas
push
mov
cs
scas
push
int3
inc
dec
sub
jne
and
xchg
sub
aaa
pop
mov
or
fidivrs
fcompl
mov
mov
xlat
xchg
inc
dec
cmpsl
je
jmp
cmp
in
push
dec
pop
add
test
test
js
mov
std
imul
ret
divl
ds
fwait
push
int
das
out
jae
int
fimuls
popl
inc
int
in
cmp
pop
imul
sti
add
mov
cli
add
mov
lock
sahf
cmp
adc
fimull
mov
sub
xor
sbb
fs
dec
cmp
and
push
lods
pop
pop
sub
gs
pushf
out
jbe
mov
or
mov
sub
mov
out
and
in
jbe
adc
sub
jmp
xchg
pop
cmp
enter
decl
pop
std
fwait
loop
insb
in
test
jge
xor
rclb
ja
data16
loope
mov
inc
mov
jno
sub
or
push
adc
mov
hlt
cltd
out
xchg
stc
xchg
cmp
outsl
bound
mov
fcomi
jbe
test
out
lock
insl
inc
lods
dec
xchg
cmc
xchg
mov
outsb
cmpsl
loopne
aad
cld
shlb
iret
dec
jl
mov
mov
dec
fsubs
movsb
dec
jae
and
test
ds
ss
repz
int3
cmp
aas
or
loopne
insl
ror
sti
sbb
ja
fs
nop
xor
inc
bound
pop
sub
jbe
or
les
xor
rorb
loopne
jbe
xchg
int
stc
cltd
jle
sbb
adc
inc
out
mov
movsb
jge
sahf
add
vmwrite
or
push
jle
loop
push
fs
js
les
mov
repz
stc
cmpsl
imul
xchg
pop
stc
imul
out
or
outsl
push
mov
sbb
xchg
movsb
test
and
add
mov
in
inc
sub
mov
std
mov
pop
ja
shl
pop
and
aad
mov
addr16
rcll
inc
leave
cmc
out
inc
icebp
pop
insb
pop
jle
and
jnp
sbbl
jmp
pop
jnp
pop
aam
dec
xchg
cmp
adc
jp
mov
mov
stc
dec
push
popf
ss
jl
sub
push
and
push
bswap
aas
jecxz
xchg
pop
orl
mov
jae
arpl
xor
and
rcrl
ret
psllq
jecxz
xchg
pop
orl
mov
jae
arpl
xor
and
rcrl
ret
psllq
jecxz
xchg
pop
orl
mov
jae
arpl
xor
and
rcrb
ret
aas
jecxz
xchg
pop
orl
mov
and
fs
mov
int3
add
adc
in
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
decb
mov
push
xlat
mov
in
add
or
pop
push
add
add
add
sub
sub
sbb
mov
pop
add
add
add
xor
dec
or
add
add
dec
add
add
xor
add
dec
add
add
add
add
add
or
dec
add
add
dec
add
or
add
dec
or
add
je
xchg
add
addb
pop
cmp
mov
sti
add
add
add
add
add
add
add
adc
jne
arpl
push
add
add
add
add
add
add
push
add
add
add
add
xor
add
sti
add
add
add
add
add
cmp
in
add
lea
pop
add
dec
add
fiadds
mov
les
dec
add
add
add
add
add
inc
add
mov
add
ret
add
add
mov
add
addl
lret
add
and
cs
add
add
add
add
add
lret
add
add
and
out
push
or
ret
add
add
add
fadds
push
add
add
sbb
add
add
insb
add
dec
add
add
pop
add
add
add
add
push
add
add
or
add
add
mov
dec
or
add
insb
add
add
add
add
mov
add
sub
or
add
add
add
add
add
add
add
dec
add
add
add
add
sbb
jne
add
les
push
or
add
xchg
add
add
add
mov
push
or
addb
add
add
add
imul
add
add
add
add
add
add
add
sbb
sbb
call
add
add
add
add
add
add
add
dec
add
enter
push
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
lea
xchg
add
add
add
fiadds
mov
stc
or
dec
add
lret
add
add
add
or
add
add
xchg
add
add
add
dec
add
dec
or
add
lret
add
push
add
add
add
add
add
add
add
add
add
pop
jl
xor
loope
pop
add
jg
arpl
arpl
lods
pop
jl
lea
sbb
sbb
rolb
pushf
add
add
inc
add
mov
add
add
add
dec
add
add
mov
add
add
add
ja
mov
add
add
add
add
add
add
add
sub
fiadds
faddl
mov
scas
add
add
add
xor
xchg
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
and
imul
add
add
add
add
stc
cmp
add
and
pop
mov
mov
loop
js
adc
mov
jge
mov
mov
push
pop
js
push
aaa
xchg
das
pop
lods
js
push
xor
test
divl
rcrl
ficoms
dec
mov
lods
mov
fisttps
adc
ret
adc
pop
cmp
push
hlt
outsb
in
lret
andb
rcll
cmp
xor
lcall
mov
jno
jmp
loop
dec
xor
jmp
mov
aas
dec
movsl
lods
lea
xor
sub
push
sbb
aas
lods
sti
xchg
inc
incl
and
jge
add
loop
jmp
inc
std
pusha
lods
movsb
add
xchg
fildl
lcall
xor
mov
test
adc
loope
iret
sbb
imul
jne
out
jae
xchg
mov
push
es
std
mov
loop
mov
mov
ficoml
in
sti
call
shll
fisttpll
test
stos
xchg
inc
stc
sarl
push
clc
daa
xchg
lds
scas
lret
mov
aad
jmp
mov
std
xlat
or
mov
jo
lcall
popf
or
dec
lods
test
dec
popf
leave
inc
push
repz
xor
dec
jbe
jae
outsb
sbb
sub
or
push
xlat
adc
push
inc
xor
sti
xchg
lcall
testl
ds
or
push
mov
popf
adc
mov
pop
jne
jg
sti
mov
scas
xchg
push
cmp
push
fs
daa
ljmp
and
pop
fs
ljmp
jecxz
add
pusha
adc
popf
aaa
loop
mov
loopne
xor
test
mov
scas
negb
call
pop
mov
std
push
popa
ljmp
leavew
or
xor
pop
push
stc
xor
daa
aad
movsl
lret
pop
test
xchg
mov
jno
pop
cmp
subb
adc
cmp
xlat
add
mov
and
mov
je
jmp
insl
andl
es
dec
shr
fwait
jge
dec
test
enter
loopne
jne
stos
leave
pop
xchg
sti
sbb
clc
adc
push
addl
push
data16
sbb
fldt
daa
popa
inc
xchg
cmp
arpl
pop
push
dec
mov
add
inc
push
scas
lret
push
insb
cmovno
jge
addr16
data16
push
jae
sub
jnp
jle
sub
inc
popa
incb
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
