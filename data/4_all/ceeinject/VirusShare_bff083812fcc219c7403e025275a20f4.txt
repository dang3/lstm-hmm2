call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
bound
pop
push
popa
add
pop
cmp
adc
loope
std
rcrl
mov
xchg
fists
cmovno
push
outsl
and
dec
add
jmp
mov
shr
ret
iret
sbb
jno
pop
cmp
sub
cmpsl
or
mov
ror
loopne
fistpll
popa
pop
sbb
push
call
pushf
push
jp
lds
xor
mov
lret
push
lods
aas
stos
or
mov
cltd
sub
sbb
je
push
outsb
in
adcl
nopl
xor
jne
std
out
fs
xor
popa
push
adc
adcb
inc
dec
popa
outsb
add
out
mov
and
or
sti
stos
pop
ret
mov
cld
int
push
pop
adc
out
icebp
jo
pushf
rcrl
cmp
subl
lcall
cmpsb
pushf
push
loopne
in
aam
shrl
les
popa
aas
sqrtpd
outsl
and
xor
out
pop
stc
sub
enter
cmpsb
iret
cmpl
push
add
pop
pop
insl
jl,pt
mov
mov
xchg
mov
mov
sbb
push
push
push
push
add
gs
xchg
cwtl
nop
ljmp
fidivrs
and
jg
pop
and
dec
jg
dec
add
scas
loope
icebp
pop
lahf
shr
mov
fists
cmovno
push
outsl
and
dec
add
scas
loope
icebp
pop
lahf
shr
mov
fists
cmpsl
pusha
inc
inc
and
push
das
mov
push
lcall
insb
cwtl
mov
repnz
xlat
and
fwait
mov
push
pop
shlb
ds
frstor
test
or
daa
rep
lods
jns
push
popf
jne
filds
jne
imul
cmp
inc
insl
jle
push
not
sbb
cmpsb
jo
popa
jns
lea
push
mov
xor
pop
repz
mov
mov
lock
cmp
sbb
lods
push
xor
int3
cmp
cwtl
mov
insl
mov
jns
jb
mov
cmpsl
ret
roll
adc
lahf
insb
mov
test
inc
call
out
xchg
das
lret
sbb
jae
dec
test
shlb
icebp
xor
pop
jg
enter
bound
add
xchg
jg
insl
lea
stc
icebp
out
and
rdmsr
out
dec
sti
cs
dec
xchg
outsb
std
push
jne
imul
jecxz
add
xchg
sbb
cmp
fsubr
gs
mov
pusha
mov
dec
xchg
cmp
mov
shll
lcall
nop
je
push
scas
dec
xchg
and
pop
sbb
cmpsb
scas
add
scas
mov
ss
and
in
mov
jp
rolb
mov
cwtl
fdivp
and
sbbl
lahf
test
xor
out
pop
pop
mov
pop
pop
jl
test
sub
jecxz
add
stos
push
sbb
movsl
negl
or
push
mov
faddl
xchg
or
out
mov
cmpl
cltd
inc
lcall
sbb
jo
lock
add
push
xor
fbld
rcrb
add
xchg
test
shrl
mov
aam
int
push
dec
aad
push
or
xchg
je
mov
imul
ret
jmp
xchg
dec
xor
adc
sub
mov
loop
lock
cld
fwait
xor
or
and
push
fs
add
pop
jno
sub
push
push
jae
out
popf
and
scas
ds
idivl
xchg
inc
dec
scas
test
pop
out
mov
jo
lret
sbb
jmp
out
sahf
and
push
mov
test
xor
mov
lcall
cmpsb
mov
mov
daa
and
imul
or
aam
outsb
lahf
cmpsl
mov
rorl
faddl
lock
shrb
lods
std
loopne
mov
add
fdivl
enter
das
imul
xor
insb
js
stc
add
shl
lret
jno
jnp
fidivs
pop
xchg
movsl
les
xchg
insl
cmp
sti
aas
stos
rcrl
les
pusha
rclb
pop
mov
mov
pushf
out
pop
xor
lods
sub
xchg
jg
add
outsb
mov
mov
ss
pushf
mov
fisubl
sbb
sbb
xor
or
jge
shl
add
std
jne
mov
jbe
call
mov
pop
pushf
fidivl
xchg
fistpl
shlb
fistpl
test
push
jnp
mov
inc
pop
lahf
cmpsb
aas
dec
iret
push
aas
mov
and
pusha
int3
mov
adc
cmpsb
dec
sub
pop
dec
repnz
xlat
jecxz
movsl
enter
inc
jg
ss
pop
movsl
dec
inc
cmp
mov
push
and
sub
dec
mov
lock
cmp
add
and
adc
outsl
pop
xor
sbb
es
jo
popa
mov
testb
add
mov
jbe
jb
add
sub
and
pushf
adc
xor
dec
xor
mov
xchg
adc
dec
mov
es
jp
and
sahf
inc
lret
xchg
loope
xchg
add
movsl
jp
mov
out
mov
push
in
lret
in
sub
cwtl
lea
lahf
js
mov
in
and
decb
mov
cmc
or
out
aad
movsl
adcb
cwtl
pop
jne
mov
mov
inc
js
sub
out
icebp
pop
aas
sub
push
mov
sub
or
adc
cltd
orl
es
adc
rclb
lds
mov
mov
or
inc
jp
push
clc
out
mov
inc
push
notb
cmp
ds
jne
xor
inc
sbb
pop
out
pop
sbb
pop
and
int
jo
mov
loope
adc
popa
and
in
jns
icebp
out
fimuls
fcomip
movsl
les
lahf
cmp
in
push
mov
outsl
imul
sub
inc
adc
mov
pop
mov
and
or
into
test
int
arpl
cmpsl
outsb
or
cli
in
or
pop
dec
sub
add
hlt
xchg
adc
mov
rcr
mov
orb
int3
sub
jl
sbb
in
pop
push
inc
pushf
insl
inc
mov
and
outsl
mov
dec
sahf
dec
shlb
fwait
scas
fnsave
xchg
xor
mov
push
iret
cmp
mov
jae
xchg
sbbb
inc
scas
pushf
pop
sti
stos
lcall
out
mov
jmp
mov
stc
inc
iret
andl
test
ret
decb
cmp
or
rolb
insl
sub
scas
mov
pop
mov
out
mov
cli
test
mull
mov
cmp
test
cmpsl
add
jnp
dec
mov
addr16
shlb
and
pop
mov
adc
imul
sub
lret
aas
pop
fcoms
in
push
cld
push
mov
je
bound
lahf
ret
rcl
stos
in
sbb
push
outsb
push
roll
fs
lcall
xacquire
js
popa
xor
bound
mov
enter
popf
scas
xchg
xchg
movsb
mov
sbb
or
cltd
ror
pusha
cmp
push
add
cmpsb
sbb
cwtl
cmp
dec
rcr
adc
adc
pop
data16
jp
and
stc
jle
xchg
xlat
push
fistpl
or
movsl
mov
add
lahf
ret
mov
stos
fs
dec
btr
mov
call
mov
cmp
dec
leave
xor
lret
push
in
dec
or
mov
mov
push
std
cmp
or
stos
jg
sub
adc
jmp
addb
popa
andl
cli
lea
cwtl
xchg
push
arpl
movsb
sarl
cmp
lcall
xlat
movsb
arpl
push
addr16
xor
mov
mov
fdivs
hlt
gs
push
mov
push
repz
push
dec
pop
push
dec
ds
fdivl
lret
xchg
out
stos
xchg
clc
mov
fimull
inc
pop
popf
cltd
cmp
faddl
imul
dec
je
mov
into
inc
fdivp
je
in
mov
popf
rclb
or
jno
xchg
sub
dec
out
sahf
rorl
inc
sbb
and
call
fs
dec
mov
or
shl
xchg
jle
ljmp
dec
filds
mov
jle
mov
fstps
jne
and
mov
data16
lret
inc
out
jno
jl
leave
cmpsl
out
sahf
test
pop
lret
xor
fdiv
adc
push
jb
aad
mov
mov
mov
js
into
rclb
adc
divb
xor
int
dec
or
mov
iret
mov
iret
cltd
mov
mov
mov
repz
dec
aad
xchg
cmc
aaa
xchg
push
mov
and
xchg
cs
scas
push
pop
jno
adc
sub
lods
jmp
ficoms
fdivrl
mov
sbb
sar
push
stos
pop
adc
adcb
push
repnz
push
repnz
adc
inc
sahf
sahf
pushf
or
mov
int3
mov
lret
mov
in
mov
sbb
xor
jno
pop
push
pop
int
in
push
pushf
mov
sbb
and
xor
sub
pop
scas
lret
xor
and
add
inc
push
scas
cmpsb
shlb
add
mov
pop
cld
xlat
cld
push
dec
push
icebp
cmp
into
mov
jne
pop
jge
fisubrs
nop
push
int3
mov
fcompl
rcrl
shl
add
lahf
push
mov
mov
sub
js
add
clc
lods
xchg
xchg
cmpsl
xchg
pop
ljmp
lahf
cmp
inc
and
ja
xchg
jno
pop
shll
ret
cwtl
jb
ja
leave
les
xchg
ja
lret
mov
mov
fists
ds
inc
insb
movsl
mov
push
pop
or
lahf
ret
lods
mov
aas
mov
xor
imul
inc
shll
ss
pop
fcomi
sbb
mov
imul
sub
lahf
daa
xchg
inc
leave
and
cmp
pop
add
push
mov
cmp
dec
jecxz
clc
jg
ss
inc
fadds
leave
push
lods
testb
dec
inc
xorb
push
scas
sbb
adc
push
adc
jl
add
data16
movsb
cmc
xchg
pop
xchg
mov
enter
jle
data16
inc
bound
dec
fwait
xchg
ss
std
aam
xchg
dec
repnz
nop
push
inc
and
notl
sahf
and
gs
les
mov
or
fidivl
add
pop
mov
pusha
sbb
cwtl
cli
scas
fsubrs
pop
fadds
clc
outsb
xchg
push
rorl
cwtl
out
mov
adc
data16
pop
xlat
push
inc
mov
les
or
hlt
mov
mov
adc
outsb
inc
inc
mov
adc
mov
mov
xor
push
fisttpl
popf
inc
mov
xor
push
mov
mov
iret
test
add
pop
sub
test
sbb
push
or
sub
adcb
sbb
push
push
xchg
out
sub
pop
in
sub
sbb
or
inc
leave
xor
leave
jp
es
jae
push
and
rorl
imul
mov
in
push
sub
xor
mov
jae
test
cmpb
stos
iret
sbb
sub
or
push
mov
xchg
popa
mov
dec
mov
test
inc
cwtl
jae
sbb
bound
mov
ret
sbb
jg
jmp
int3
lret
icebp
mov
ljmp
fwait
insb
or
arpl
lcall
aas
xlat
dec
lods
mov
mov
aam
jp
je
adc
call
inc
fs
xlat
pop
mov
sbb
sbb
lods
sti
inc
loope
cwtl
pop
and
cmp
push
cltd
aas
mov
jecxz
js
xchg
out
mov
into
and
mov
out
sbb
jl
pop
lds
repz
sub
outsl
into
movsl
mov
cmp
pop
cmp
jmp
mov
jp
jnp
sbb
jp
nop
inc
mov
pop
cmpsb
dec
rorl
aas
adc
in
jnp
js
push
jne
jmp
ss
loopne
jge
test
je
stos
shl
cmp
xchg
inc
or
lock
adc
jl
sti
jae
jo
int
lods
push
mov
pusha
dec
xor
out
mov
ss
lret
dec
xor
sub
jl
in
xor
repz
ljmp
iret
xor
leave
dec
aam
adc
cs
cmp
sbb
pop
push
das
pop
addb
repnz
cmpsb
xor
push
addr16
adc
ret
enter
mov
movsb
dec
sahf
inc
and
mov
or
ret
sub
roll
adc
ds
and
out
push
in
hlt
out
lret
mov
int3
push
mov
test
mov
jmp
pop
adc
jg
movl
xchg
fidivl
in
push
mov
ficoms
xchg
mov
mov
int
add
adc
xchg
inc
inc
mov
das
pop
and
and
enter
popa
xlat
lods
adc
scas
add
or
pop
push
pop
fadds
js
xchg
xchg
cmc
dec
or
cmp
leave
enter
mov
jb
or
xchg
repnz
cmpsl
sub
sub
xchg
and
xchg
rclb
push
in
fsubrl
adc
lahf
mov
ret
and
sub
add
add
pop
inc
mov
push
fs
mov
xchg
int3
andl
add
push
sbb
cmp
sbb
ljmp
and
je
mov
sbb
scas
lods
fwait
pushf
aas
cmp
popf
pop
fisubrl
or
xor
sarb
mov
and
popf
movsb
inc
xchg
out
mov
pop
loop
push
repz
pop
mov
jne
mov
imul
fcoms
jb
add
dec
jns
aad
filds
sti
inc
dec
adc
inc
pushf
test
mov
stos
movsl
or
popa
push
inc
sahf
add
fdecstp
adc
loope
call
push
sub
push
das
add
cmp
mov
fsubr
mov
and
push
sub
push
sbb
inc
cmp
dec
ss
adc
xor
insl
adc
adc
pop
add
adc
popa
outsl
stos
call
mov
xor
jp
cli
leave
scas
add
xor
mov
outsl
jnp
mov
call
outsl
cmpsl
stos
pop
cmp
imul
lock
push
jl
adc
outsl
inc
adc
test
jge
push
or
lret
jp
outsl
inc
and
mov
or
lret
adc
ror
sahf
bound
pop
cmpsl
push
out
nop
jecxz
je
mull
daa
lret
mov
push
xchg
and
insb
daa
adcl
dec
cmpsl
addr16
dec
inc
adc
pop
loop
scas
xor
sbb
mov
or
dec
int3
pop
add
pop
mov
in
jp
clc
rclb
sub
cmp
pop
xor
and
adc
add
push
mov
enter
mov
in
leave
sub
divb
sahf
iret
inc
sub
cld
mov
enter
stos
vshufps
test
dec
lcall
add
pop
stos
and
lahf
shr
lods
sbb
ljmp
mov
or
add
mov
std
or
ret
xchg
loop
sbb
nop
mov
mov
idivl
push
jbe
imul
xchg
pop
dec
xor
addb
cmp
xchg
push
test
inc
and
mov
popf
or
jne
fdivl
and
mov
jae
push
push
inc
lea
movlps
les
addr16
jne
pushf
jo
outsl
mov
pop
jmp
sub
arpl
or
dec
push
inc
fstpl
test
sub
sub
xor
sub
insb
frstor
pusha
sub
dec
xchg
dec
mov
and
mov
xchg
lret
sub
xor
jbe
push
outsb
mov
mov
add
sub
cmc
pop
adc
push
mov
in
stos
or
pop
sub
dec
loope
jb
rorl
mov
ss
lock
ret
shlb
pusha
xchg
outsb
adc
outsl
sub
fcmovnu
add
notb
or
cmpsb
inc
pop
sbb
in
clc
clc
sub
jne
in
pop
insb
movsl
out
jmp
inc
xchg
xor
sub
sub
pop
push
in
movsl
mov
aaa
jbe
mov
jae
dec
push
gs
jmp
mov
jnp
hlt
push
outsl
addb
or
addr16
clc
scas
out
inc
xchg
pop
notl
enter
add
mov
nop
imul
out
in
xor
mov
fcmovnu
js
inc
xor
or
jg
push
movsb
inc
outsw
xlat
cmp
mov
mov
lret
popf
push
and
sub
pop
sub
jge
mov
sub
add
adc
push
sub
stos
push
pop
pop
or
ss
sbb
nop
jno
and
fsts
mov
call
in
mov
adc
jb
or
pop
hlt
mov
test
js
or
pop
roll
inc
mov
mov
xchg
std
xor
pusha
cmovl
pop
and
test
adc
ret
inc
mov
cs
or
repz
fcomi
popf
sarl
jno
push
xorb
sub
mov
dec
mov
or
jbe
test
jno
inc
jle
jp
movsb
add
mov
inc
pop
scas
aad
out
cs
cs
out
scas
pop
add
shlb
loope
rcll
push
sub
mov
imul
sub
prefetch
in
xlat
aad
adc
sbb
xor
out
lock
inc
cmp
adc
add
shl
sub
mov
mov
ljmp
sbb
and
xor
xchg
add
mov
arpl
jmp
mov
lea
cmp
ljmp
test
inc
insl
and
in
lock
add
scas
mov
inc
add
and
push
jbe
pop
lea
xchg
cmp
inc
mov
inc
mov
pusha
fldcw
insl
int3
lea
or
jg
mov
pop
rcrl
roll
sub
or
js
bound
dec
clc
or
test
add
jp
popa
mov
andb
and
cmp
mov
xor
mov
enter
fisttps
pop
lret
cmp
inc
xchg
dec
roll
sbb
repnz
pop
lret
mov
fcmove
sub
pop
or
insl
lret
in
xor
les
cmp
fidivrl
inc
in
fsts
sbb
fdivr
mov
fwait
adc
fbstp
repz
cmp
add
dec
add
das
adc
outsb
xor
divl
mov
negb
aas
push
pop
insl
insl
test
lods
cmp
cmp
add
psubd
mov
test
das
cmp
cmp
sub
push
dec
sbb
iret
lea
lcall
xor
shlb
ffree
push
xlat
lea
or
dec
shll
mov
scas
xchg
ss
out
addr16
jns
cli
stos
jne
push
jbe
xchg
shrb
lods
pop
and
clc
sbb
sub
and
jp
pop
outsb
jns
ja
test
clc
xor
push
inc
jle
jmp
stos
mov
mov
aas
add
testb
aad
sbb
lods
mov
leave
aaa
mov
pop
or
pop
ljmp
push
nop
sahf
pop
mov
cltd
cld
mov
xchg
pushf
lahf
or
es
cmp
dec
mov
xor
subl
lds
sub
pop
mov
xchg
cmpsl
jno
mov
jb
inc
mov
adc
sbb
add
sub
lea
mov
xor
int3
cmp
out
xchg
cwtl
sub
push
mov
fbstp
jl
xchg
adc
repnz
xchg
insb
fcmovne
mov
or
sbb
movsb
or
jge
adc
in
mov
mov
adc
in
cmp
leave
mov
xor
mov
scas
inc
mov
xor
stos
dec
cwtl
jb
daa
jbe
or
outsl
and
mov
cltd
xchg
in
test
ja
sub
cmpsl
test
mov
lret
stos
stc
xor
sub
out
mov
movsb
andl
cmp
imul
test
je
cmp
push
xchg
inc
push
xchg
test
cmp
or
mov
testb
test
loopne
mov
lods
mov
sbb
lcall
mov
scas
lahf
mov
jecxz
cmp
mov
lcall
sbb
fnsave
or
dec
sub
mov
out
rclb
jmp
inc
jg
mov
fwait
lods
jl
adc
dec
dec
sahf
cmp
xchg
fs
dec
mov
sbb
sub
pop
sub
sbb
jb
or
pop
xor
dec
sub
add
mov
leave
sbb
xor
es
pop
xchg
fistpll
lods
ret
call
adc
test
lcall
push
cmpsb
mov
xchg
and
cltd
insl
xlat
in
inc
jg
call
pop
daa
aaa
and
enter
outsb
inc
nop
dec
adc
rorb
ret
pusha
jl
stc
add
pop
addb
inc
out
cmp
inc
aaa
pop
mov
fnstcw
xchg
pop
lods
mov
xlat
sbb
push
mov
xor
dec
lea
sub
or
fiadds
mov
xor
repz
pop
jno
imul
cli
test
cmp
mov
jae
mov
repnz
mov
push
xchg
rolb
mov
or
dec
pop
les
das
movsl
mov
addr16
jge
out
loope
loope
test
sbb
mov
and
dec
int3
lea
repnz
bound
aaa
jno
scas
add
and
dec
add
scas
loope
icebp
pop
lahf
shr
mov
fists
cmovno
push
outsl
and
dec
add
scas
loope
icebp
pop
lahf
shr
mov
fists
pop
inc
pop
push
outsb
and
dec
add
stos
loope
icebp
xchg
fwait
shr
mov
out
xchg
aaa
popa
adc
inc
aaa
push
outsl
and
dec
add
adc
rcrl
xor
outsb
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
jae
arpl
xchg
push
fcomip
popa
jecxz
rorl
ret
pop
mov
mov
pop
jae
arpl
xor
and
adc
add
rorl
int
mov
xchg
jg
dec
sbbl
jp
dec
pop
lahf
sub
cmp
or
add
ljmp
jle
cmp
sub
and
sub
fmull
push
out
lahf
pusha
iret
and
rolb
jne
sbb
fwait
addr16
les
aaa
sub
lcall
sbb
and
xchg
aad
pop
lret
sbb
mov
dec
jl
mov
add
jg
cmp
mov
dec
dec
mov
pop
jg
lret
jb
jae
lcall
in
movsl
add
js
loop
out
cmp
dec
outsl
mov
pop
and
out
out
mov
jbe
movsl
repz
shlb
sbb
mov
mov
adc
mov
aaa
loopne
or
scas
notl
sub
dec
orl
jp
push
popl
and
xor
adc
sbb
ljmp
pop
stos
outsl
mov
ss
stos
push
ss
aaa
lahf
inc
mov
pop
mov
mov
push
mov
sub
sbb
ss
adc
add
cmp
xor
adc
xchg
pop
cmpb
enter
out
push
jmp
idivl
std
sub
jnp
and
adc
add
repz
jecxz
rorl
ret
pop
mov
mov
pop
jae
arpl
xor
and
adc
add
repz
jecxz
rorl
ret
pop
mov
mov
pop
jae
dec
xlat
in
bound
pop
pop
fwait
inc
adc
inc
popf
rol
mov
jp
mov
std
fcomi
in
shl
adc
das
push
adc
add
or
xchg
lea
and
les
mov
aad
xchg
mov
cmp
aam
pop
bound
loopne
fiaddl
jmp
cmp
push
adc
and
add
sub
push
test
push
fisttpll
popa
dec
es
in
idivb
data16
sbb
out
shrl
cli
aas
lahf
stc
loope
and
test
mov
sub
das
xlat
popa
ljmp
cmp
and
pop
popf
push
or
mov
add
shl
jne
clc
inc
sub
mov
cli
xor
and
jp
dec
out
loopne
push
mov
and
jge
adc
lahf
std
sar
mov
mov
and
jecxz
add
sub
mov
xchg
mov
inc
pop
add
mov
add
movsb
mov
sbb
cld
push
xor
mov
fsubs
incb
testb
mov
pop
cmovno
mov
cmp
pop
data16
mov
push
sbb
xchg
mov
mov
pop
insb
cmp
fbstp
or
into
out
idivb
dec
mov
ret
mov
inc
fildl
fimull
xor
inc
jecxz
jecxz
fbld
dec
pusha
inc
push
mov
aas
pextrw
xchg
mov
outsb
pusha
or
xor
jle
into
rolb
hlt
gs
rcrl
mov
mov
or
pop
imul
mov
xor
and
test
push
addr16
inc
rcr
das
sbb
mov
lret
push
or
movsl
out
inc
scas
out
popf
aaa
popa
mov
and
call
xchg
add
call
add
div
cmp
mov
add
aam
test
fs
aam
add
dec
clc
dec
push
sbb
rcll
jmp
push
dec
mov
int
mov
stos
or
cmp
lret
mov
lock
push
lods
sub
dec
popf
cmpsb
shll
fcomps
nop
call
cmp
sbbb
xor
jmp
pop
aam
aas
add
pop
adc
ror
in
shll
ljmp
arpl
into
cltd
int3
xchg
lea
push
add
imul
das
lods
push
pop
jnp
jbe
xchg
rolb
cmc
cmp
nop
aam
mov
sti
mulb
fiadds
sti
in
mov
sub
lret
or
pop
and
jno
adc
push
insl
out
xchg
sub
lret
jmp
test
test
dec
ror
jne
cmp
add
push
inc
xor
aaa
xlat
sbb
aam
adc
adc
or
outsb
sub
arpl
mov
loop
mov
inc
and
mov
xchg
call
rorl
enter
push
shll
data16
mov
and
lahf
push
dec
test
leave
andl
adc
xor
xor
add
adc
flds
in
repnz
movb
loop
push
fbld
lods
mov
xor
push
sub
pop
adc
mov
and
mov
jp
pop
push
dec
in
sti
push
aaa
fimull
rcr
sub
out
and
imul
jmp
push
jns
lods
imul
cmp
pusha
mov
jmp
insl
aam
ret
stos
push
repnz
or
inc
in
dec
mov
or
dec
fdivr
into
test
das
outsl
cmp
repnz
shr
sub
add
jp
push
push
out
xchg
and
mov
sub
hlt
jp
lret
jmp
mov
rcrb
popa
dec
dec
pop
popf
adc
pop
mov
dec
or
mov
jg
pop
or
dec
ret
ds
mov
nop
jno
pop
jo
jne
outsl
add
mov
lods
lcall
sub
push
jge
insl
xor
out
bnd
push
inc
out
lock
inc
xchg
add
fdivrs
adc
test
fs
mov
outsl
push
flds
mov
ret
mov
add
jge
ljmp
leave
jl
push
mov
push
fmulp
xchg
jge
enter
cltd
in
mov
outsb
pop
imul
pusha
cmp
mov
or
adc
movsl
stos
and
mov
push
mov
in
mov
je
pop
mov
je
and
in
inc
cs
lahf
pop
cmpsb
jbe
pop
pop
test
pop
pop
push
mov
enter
adc
add
dec
and
cmp
dec
and
pop
das
setle
lret
insb
dec
ljmp
push
std
aam
dec
add
enter
lret
cmp
push
out
push
lret
dec
in
and
mov
data16
xchg
rolb
adc
cmp
lods
lds
test
mov
movsl
mov
leave
push
dec
fs
lea
sub
shll
adc
xor
xchg
xchg
or
insl
dec
push
jp
jo
les
loopne
pop
xchg
mov
xor
sub
xor
cmp
cmp
or
scas
aas
pusha
aas
cmc
xchg
xchg
sub
test
daa
pushf
push
and
daa
mov
push
out
adcl
pusha
dec
lods
dec
rolb
sub
inc
push
fs
mov
mov
fwait
push
push
daa
pop
or
scas
ret
adc
fbld
pop
fidivs
jno
inc
xor
jns
mov
addr16
pop
call
cwtl
das
fildl
pop
push
and
in
outsb
pop
mov
xor
sub
aam
xchg
stc
push
sahf
rcl
mov
lods
loopne
pop
xchg
push
repnz
in
push
add
je
scas
pop
int
sbb
outsb
mov
stos
inc
stos
in
movsb
insb
mov
push
ror
pop
jae
jns
xchg
pop
les
jecxz
enter
inc
repz
mov
xchg
or
addb
mov
adc
ret
pushf
lods
dec
cwtl
sub
dec
imul
loope,pt
nop
pop
nop
lret
subb
inc
sub
jmp
adc
push
cmpsb
fdivl
mov
xchg
jo
lods
test
test
add
mov
mov
xor
test
hlt
xor
mov
mov
mov
push
and
insb
jecxz
shll
jle
dec
xchg
push
aam
popa
std
scas
rorb
or
sahf
pushf
lea
in
push
aas
xchg
lret
adc
mov
pop
lods
shlb
mov
pop
loop
add
daa
push
adc
mov
enter
push
mov
xor
adc
push
in
mov
scas
pop
fs
add
mov
cmp
das
mov
sti
loope
loop
loope,pn
dec
fbstp
fprem
xchg
lcall
test
test
pusha
das
jno
cli
add
leave
and
sbb
rcrl
mov
stos
mov
sub
pushf
cltd
xor
sub
test
les
mov
loope
jns
xchg
cmpsl
out
push
loope
cmpsl
call
iret
js
test
adc
jns
xor
pop
lods
cmp
cmp
cli
aad
jo
in
in
xor
outsl
add
jecxz
mov
ja
sub
add
test
lock
aam
xlat
fs
mov
iret
push
cmp
lods
mov
add
movsb
int
sbb
pop
movl
nop
rcll
fs
imul
add
xchg
jecxz
test
nop
push
pop
add
xchg
jbe
jl
dec
xor
mov
xor
and
sbb
jno
sbb
mov
mov
inc
aam
in
insb
xchg
sub
mulb
inc
sbbl
pop
cmp
pop
or
mov
data16
inc
dec
rcr
cmc
dec
int3
mov
fdivs
out
jbe
out
and
test
push
jb
and
aam
pop
incl
pop
push
push
stc
jnp
shl
adc
cli
mov
call
shll
cld
cmp
ja
sub
xor
add
mov
dec
pop
jae
dec
clc
add
aaa
or
dec
shrl
lock
dec
lcall
imul
loop
out
rcr
insb
ret
pop
les
lsl
jge
insl
xor
mov
or
cmpsb
jmp
push
jno
mov
fiaddl
xlat
xchg
push
sbb
lds
push
dec
hlt
cmp
ficomps
jbe
fisttpll
inc
in
les
daa
repnz
movsb
cmc
xor
sbb
xchg
ss
scas
out
cmpl
push
aad
ljmp
mov
cmp
add
pop
sahf
ss
push
lahf
dec
xchg
pusha
std
jno
mov
negb
push
cmpsb
adc
roll
imul
leave
jnp
decl
mov
dec
mov
or
sbb
cwtl
dec
test
jae
and
sbb
ss
mov
dec
adc
add
mov
cmp
ret
push
inc
lret
mov
xor
jnp
cmpsb
fnstsw
and
ss
sbb
pop
mov
inc
cli
or
bound
out
lret
jbe
xor
adc
sahf
shll
add
call
fsubl
cltd
adc
adc
addl
daa
imul
mov
xor
jae
popa
xor
mov
insl
icebp
rcl
push
and
fnsave
cmp
sti
inc
mov
pop
gs
loop
lret
mov
sbb
or
sbb
add
or
inc
in
shl
lret
scas
sub
iret
bound
pop
loope
xchg
js
ret
pushf
pushaw
std
cmp
push
xchg
mov
cmpl
lock
mov
std
mov
aam
jmp
mov
test
int3
push
add
push
push
rclb
pop
mov
inc
movsl
lcall
mov
dec
push
or
enter
mov
pop
jl
sbb
stos
adc
popf
push
add
pop
mov
inc
popf
lret
cmp
or
or
fadds
ja
mov
add
jmp
out
mov
or
pusha
adc
inc
add
dec
jb
dec
inc
mov
cmp
cmc
loope
jl
icebp
or
cmp
push
jmp
xor
jbe
ja
add
jne
and
lds
es
mov
imul
or
pop
push
add
mov
or
cmp
out
aad
inc
push
nop
sbb
ret
movsl
out
mov
dec
inc
int
jno
dec
hlt
mov
les
dec
xor
in
pop
pop
jae
pop
xchg
mov
xchg
adc
and
cmp
dec
ss
das
mov
or
push
sbb
lcall
adc
pop
fiadds
jge
fmuls
loopne
push
pop
mov
sbb
push
xor
pop
cwtl
and
or
sbb
hlt
xchg
cmp
jp
sbb
test
mov
test
loop
and
imul
adc
push
mov
aaa
fnstenv
pop
sbb
add
clc
jb
mov
jae
cmpsl
sti
sti
ja
jle
and
mov
pop
cmp
test
mov
xlat
mov
mov
cmpsl
jns
insl
scas
pushw
pop
jmp
mov
in
xorb
xchg
dec
pop
mov
push
ljmp
xor
gs
insl
jecxz
out
negl
addl
and
and
inc
fstp
pop
lret
aam
nop
xchg
push
rcll
cmp
movsl
mov
lcall
mov
test
in
push
xor
inc
inc
sbbl
xchg
jl
xchg
pop
cmp
add
loope
xchg
sub
int
jno
movsl
jne
fsubrl
inc
xchg
orb
mov
xchg
adc
je
and
in
scas
xchg
adc
jno
dec
mov
fcomps
xchg
push
inc
cs
pop
jae
cltd
sarb
sahf
pusha
add
lock
mov
inc
push
add
pop
mov
and
bound
xchg
stos
test
push
sub
inc
xor
aad
in
ss
not
das
rorl
cld
rorl
addr16
sbb
jae
outsl
jecxz
ljmp
sbb
jb
rorl
pop
xor
leave
add
jecxz
aas
int
inc
sub
test
inc
movsl
loop
ja
sub
fidivrl
cmp
jg
insb
test
ud0
adc
mov
or
dec
iret
push
jb
test
sbb
add
test
jl
popf
add
xor
mov
mov
cmp
in
and
repnz
jnp
dec
adc
aas
lds
cld
and
mov
lret
mov
cmp
gs
fcoml
call
fisttps
mov
xlat
iret
pop
fwait
lods
cmp
xchg
jl
outsb
fs
dec
arpl
and
jmp
cltd
push
inc
addl
lock
inc
push
fldenv
mov
int
add
mov
test
jecxz
inc
mov
cmc
and
stos
les
mov
mov
and
jne
roll
sub
fsts
sbb
add
clc
popf
mov
mov
mov
jmp
xchg
or
inc
add
int3
daa
pop
jg
js
or
dec
cmp
xchg
jge
inc
jno
or
or
sar
sbb
aam
xchg
adc
leave
mov
cmpsl
fisttpl
ds
push
and
js
push
mov
dec
aad
divb
jns
negl
xchg
cmp
test
push
jne
cmp
mov
jbe
cmpl
outsb
sub
inc
sti
imul
sbb
adcb
pop
lock
mov
ret
cmp
mov
dec
mov
ljmp
xlat
cmpsb
stos
in
jae
cmp
mov
xor
add
pop
adc
dec
aad
xlat
cmp
pop
mov
mov
or
cmp
mov
sbb
in
cwtl
out
adc
lahf
out
cltd
pop
adc
dec
rcr
sbb
adc
xchg
mov
jbe
xchg
lahf
sbb
stos
push
and
addr16
cmp
out
sub
cwtl
or
call
test
setne
vunpckhpd
cmp
xor
jl,pn
lret
and
int
cmp
movsb
je
neg
jae
fcompl
loop
bound
repz
rolb
mov
divb
cltd
pop
shlb
sub
orb
add
inc
stc
pop
and
push
in
jecxz
mov
mov
bound
pop
and
or
sub
fcompl
fldenv
xorb
repnz
mov
jbe
setbe
clc
stc
pop
jno
je
push
pop
mov
imul
add
push
insl
jge
sbb
enter
inc
pop
or
fdivl
push
lock
orl
mov
xor
mov
dec
gs
mov
adc
out
into
push
test
adc
outsb
inc
scas
insl
inc
test
or
xchg
pop
jg
int
out
clc
stc
xchg
movsl
push
sbb
xor
jp
add
loopne
add
pop
pop
dec
or
jle
add
cmp
cld
inc
xchg
lea
xchg
mov
cmc
push
or
bound
xlat
pop
jb
call
les
xchg
sub
cltd
push
add
inc
mov
inc
inc
cltd
ja
popa
dec
lret
je
in
and
sbb
jb
mov
pop
mov
ljmp
cs
loop
inc
shlb
in
xor
cld
inc
add
xchg
test
jg
cmp
dec
aam
xchg
les
xchg
jmp
ja
push
push
lret
icebp
in
test
sub
sub
dec
xor
and
pop
data16
push
dec
mov
fnstenv
pop
jge
dec
clc
loopne
inc
cltd
pop
inc
out
int
repnz
mov
or
or
cmpsl
cmp
jl
mov
shlw
addr16
enter
leave
add
xchg
test
sbb
inc
cld
inc
mov
fsts
cmc
mov
mov
dec
mov
mov
sti
imul
cmp
sub
adc
xor
adcl
lret
test
ds
cwtl
hlt
sub
mov
cmp
hlt
xor
rclb
lcall
push
pop
inc
lds
add
mov
gs
sub
xor
rorb
mov
mov
jb
insb
dec
daa
rcll
sbb
sub
cmp
or
hlt
pop
ja
aad
mov
jne
imul
or
popa
movsl
push
sbbb
cmp
jmp
lea
ljmp
neg
xor
pop
aam
faddl
addb
popa
jno
mov
dec
es
pop
mov
movsb
pop
cld
not
cmp
cmc
jl
mov
or
ds
fnstcw
loop
into
cli
data16
int3
shlb
adc
les
outsl
xchg
or
xchg
aaa
dec
cmp
mov
mov
xor
out
loop
mov
insb
sahf
xchg
xchg
leave
mov
lods
jmp
add
mov
mov
dec
icebp
gs
mov
push
jne
lods
rep
adc
lretw
pop
push
fbstp
jp
into
or
xchg
rol
add
pop
or
fiaddl
cmp
fwait
or
inc
sub
fadd
das
es
cmp
shlb
xlat
pusha
mov
loopne
lods
jl
popf
scas
push
pop
das
ror
fwait
mov
rep
lret
jecxz
pop
and
cwtl
into
aas
iret
cmp
rclb
mov
lds
outsl
sti
sub
ror
mov
data16
orl
pop
xor
push
lret
sahf
sub
je
sahf
dec
sub
imul
pop
sub
jmp
clc
push
mov
lea
jo
pop
add
cmp
shl
adc
adc
inc
xor
add
xchg
bound
jp
enter
loope
push
fwait
dec
xchg
lods
inc
mov
stc
push
out
cli
mov
push
cmpl
jmp
dec
fxch
xor
int
push
jle
movsl
lret
cltd
lret
pop
aaa
mov
jno
mov
fcmovne
aas
mov
add
leave
mov
rolb
movsb
add
dec
sub
ds
push
adc
xchg
xlat
cwtl
clc
les
dec
enter
and
repnz
mov
or
mov
aam
enter
jg
xor
dec
pusha
mov
icebp
inc
rolb
insl
pop
fnstcw
dec
xchg
sub
sarb
xchg
sub
jae
andb
out
fisubs
sub
cmp
xor
xchg
pop
test
ret
or
fistps
hlt
mov
cld
fidivrs
mov
or
xor
test
hlt
movb
mov
movsl
clc
fwait
xor
in
scas
jl
mov
add
pop
cmp
fcmovnbe
mov
jne
lcall
push
into
and
sarl
insb
or
xchg
ficoml
leave
jno
ja
inc
stc
sub
addr16
xchg
outsb
sub
stos
sub
mov
pop
ja
repnz
call
add
xlat
jb
pop
push
mov
leave
and
aam
jne
inc
add
es
xlat
les
and
lds
push
lds
cmp
adc
imul
scas
and
imul
in
icebp
inc
or
clc
aad
rorb
outsl
testb
push
jbe
cmp
adc
xor
in
sbb
add
fsts
push
xchg
push
cmpsl
std
clc
ds
mov
outsl
int
push
mov
pop
lret
rcrl
cmp
bound
pop
jmp
addb
repz
pop
lret
xor
mov
push
push
push
sbb
push
mov
lds
pushf
subl
mov
into
dec
mov
push
jecxz
leave
xchg
daa
pop
sub
out
xor
lcall
pop
repnz
shrb
ds
mov
add
sahf
fmul
sub
cltd
outsl
sbb
cmp
cld
ljmp
in
xor
xchg
rorb
cmc
popf
lret
lret
push
cmp
int
cli
pop
inc
clc
mov
dec
mov
mov
inc
push
shrb
dec
and
inc
aas
push
jp
add
cmc
loopne
in
shr
mov
mov
fimull
rcl
cmpsb
mov
mov
ljmp
in
xlat
out
xorl
push
js
pop
popl
xor
and
adc
add
repz
jecxz
rorl
ret
pop
mov
mov
pop
jae
arpl
xor
and
adc
add
repz
jecxz
rorl
ret
pop
mov
mov
pop
jae
arpl
xor
and
adc
add
repz
jecxz
rorl
ret
pop
mov
mov
pop
jae
popa
mov
xor
and
xchg
iret
sbb
das
sbb
jns
ret
push
insb
mov
mov
inc
or
adc
add
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
sub
test
cwtl
push
mov
inc
outsl
enter
lods
pop
cmp
sub
out
imul
mov
push
mov
clc
outsb
call
cmp
scas
sub
js
push
fidivrs
push
mov
clc
outsb
call
pop
cmp
insl
lock
daa
test
aam
fdivrs
aam
xchg
and
pop
mov
aad
aad
addr16
mov
xor
sbb
cs
xchg
stc
jle
repz
mov
inc
inc
jno
mov
jbe
cmp
fsubr
frndint
and
push
xchg
mov
mov
adc
adc
test
mov
outsl
les
inc
enter
out
inc
sbb
sbb
mov
push
ror
popf
adc
in
xchg
fcomps
enter
pop
stos
dec
jno
sahf
sub
mov
inc
ja
sub
mov
push
sbb
and
and
push
xlat
scas
mov
or
push
and
cs
cwtl
push
mov
clc
outsb
call
pop
cmp
or
pop
into
dec
cwtl
int3
cs
inc
hlt
dec
pop
mov
sub
cmpsl
ja
insb
out
or
and
xor
inc
jmp
in
inc
sarb
mov
fcomps
mov
push
inc
int3
pusha
jmp
sbb
stos
push
mov
outsl
xchg
imul
fmuls
pop
cmp
or
pop
into
dec
fidivrs
push
mov
clc
outsb
call
pop
cmp
or
pop
into
dec
fidivrs
popa
fcmovu
mov
cmp
das
mov
push
dec
jns
aas
xchg
inc
jne
shl
loopne
movsb
sbb
testl
ss
sbb
out
pushf
xchg
into
cmp
jp
xor
cmpsb
out
jnp
and
sub
cvtps2pi
cmp
sub
sti
in
and
pop
into
scas
sti
jnp
cmp
divb
sbb
std
ret
mov
rcrl
and
mov
and
out
adc
test
pop
sbbb
add
sbb
and
jb
jecxz
jmp
add
add
mov
jnp
push
mov
outsl
and
or
or
mov
push
or
push
sub
loop
sbb
ss
lods
inc
mov
dec
negb
test
movsb
mov
and
push
sbb
ret
sub
pop
inc
sub
jg
je
and
pop
pop
mov
sti
in
cmp
cli
repz
jle
add
mov
and
outsb
cwtl
cmp
bound
out
adc
or
imul
jmp
andl
stos
and
add
or
andb
fabs
cmp
cli
push
rorl
out
test
lods
or
fisubrs
adc
rorb
popf
xchg
add
scas
jno
addl
pushf
or
add
and
sub
daa
das
add
or
jne
scas
mov
fnstenv
dec
rorb
mov
add
fcoms
push
into
adc
shll
shll
ss
pop
and
lahf
cld
fdivr
insb
lds
pop
cli
cltd
movsb
jae
ja
enter
xor
mov
inc
jb,pt
inc
push
lret
cmc
mov
test
ss
scas
xor
addl
add
sbb
int
pop
inc
lcall
or
lahf
test
divl
aad
dec
dec
dec
add
xor
and
aad
shl
push
cmp
push
test
stos
mov
mov
fs
cmp
js
cmp
sub
outsb
push
pop
inc
jp
icebp
and
repz
mov
add
sbb
xchg
xor
adc
in
pop
add
cmp
xchg
pop
cmpsb
mov
mov
jbe
xchg
inc
int3
adc
stos
sbb
jle
lock
mov
push
lret
or
mov
mov
popl
and
push
jp
test
cmpsl
cmp
in
mov
das
xchg
aaa
lods
jp
dec
or
fs
cmp
lods
sahf
push
and
sbb
or
xor
pop
loope
adc
iret
imul
lock
jmp
int3
popl
dec
or
jecxz
loop
mov
pop
mov
jecxz
fidivs
fsubrp
xchg
push
mov
sub
ljmp
int3
mov
add
xchg
pop
ljmp
pusha
shlb
cmp
adc
stos
or
cmp
in
add
ds
sbb
int3
jmp
mov
mov
fstpt
mov
movsl
mov
cld
sub
jge
daa
out
mov
and
in
insb
int
push
or
push
adc
cmpl
jnp
je
mov
sub
lahf
iret
movsl
or
dec
xchg
adc
jg
dec
xor
sbb
outsl
aam
lahf
jp
loopne
cwtl
in
shll
das
in
xchg
int
mov
cltd
dec
or
xchg
jno
or
sti
ds
es
inc
xchg
gs
js
addl
xor
pusha
and
cmp
test
shll
rorb
sbb
fistps
fists
sbb
iret
jge
mov
out
enter
out
and
popf
sub
adc
mov
std
cmp
popa
imulb
aas
xor
xor
xchg
adc
clc
jno
repz
sbb
xor
jp
lock
subl
xor
dec
jo
and
ja
adc
jmp
mov
sbb
inc
testb
bound
pop
or
adc
hlt
or
push
cmpsb
sub
mov
jbe
add
jl
shll
sub
mov
imul
mov
xchg
push
mov
xchg
xor
jnp,pn
fistps
or
insl
les
cwtl
test
js
mov
cmp
cmp
repz
call
fimuls
mov
mov
scas
xor
ficomps
add
divb
into
add
or
shrl
xchg
push
inc
mov
rcrb
jl
push
xchg
mov
imul
xchg
cmp
iret
scas
imul
mov
ljmp
sbb
mov
out
fsubrs
scas
add
adcl
lock
adc
mov
pop
sub
loopne
ficompl
sbb
push
int3
cmp
add
adc
frstor
hlt
xor
out
mov
add
jo
leave
fisubrl
mov
push
mov
cmp
scas
push
xor
sub
add
iret
pop
cmp
sbb
in
roll
out
jl
mov
sbb
lahf
mov
cmp
sub
xor
push
or
testb
call
sbb
xor
pop
cld
push
cli
push
enter
cmp
jecxz
popa
pop
xor
xor
std
lcall
pop
scas
ljmp
inc
int
rorl
jbe
mov
jmp
xchg
dec
mov
aas
ja
add
add
mov
test
adc
pop
mov
mov
pop
popa
cwtl
int
mov
push
fildll
jno
push
js
enter
nop
in
fs
jle
lcall
shlb
aaa
sbbl
faddl
dec
inc
dec
lcall
inc
ret
xchg
bound
cld
insl
mov
cmpl
jb
mov
xorb
cld
call
out
and
lret
jge
dec
mov
aaa
xlat
xchg
movsb
lahf
push
loopne
js
push
mov
xor
scas
mov
scas
mov
test
mov
cmp
dec
and
xor
data16
lcall
push
imul
xor
adc
sub
outsb
mov
out
xor
mov
adc
mov
adc
iret
jns
jp
cmp
sub
push
xchg
mov
pop
pusha
idivb
adc
dec
dec
push
scas
dec
pop
add
ja
push
pop
push
jo
in
into
rcl
lret
inc
pop
fwait
and
or
adc
pop
aad
fldenv
int3
cmpsl
push
mov
mov
xchg
and
push
leave
iret
xor
push
scas
sub
lds
pop
pop
mov
movsl
fcmovne
or
adc
mov
pop
jbe
xchg
or
push
cld
sbb
in
repz
mov
insb
stos
bound
mov
push
ret
add
pop
cmpsb
push
shll
add
fsubs
cltd
lcall
sbb
and
in
and
jp
shll
hlt
dec
push
or
fwait
mov
xor
mov
imul
mov
pusha
inc
xlat
sbbl
rolb
les
xchg
ret
negb
fnstenv
xor
mov
popf
loop
lret
roll
std
aaa
jge
add
std
sub
es
insb
sbb
jo
push
mov
and
mov
dec
stos
cmp
stos
cli
mov
das
fwait
fwait
xor
ja
jecxz
sbb
push
int3
imul
push
push
sbb
and
xor
int
movsb
jae
fidivs
loope
ss
pop
mov
out
xchg
aas
jle
mov
call
fnstcw
sbb
rcrb
movb
in
add
add
test
dec
sbb
inc
lahf
cmpsb
inc
mov
stos
or
push
adc
int3
jbe
jge
mov
mov
aaa
jb
jae
ret
push
sbb
adc
ret
cmp
shlb
leave
cmp
sbb
cmp
push
ret
dec
jg
pusha
rcrb
sbb
out
das
adc
add
push
inc
mov
and
pop
and
cmpsb
lret
fistpll
xchg
xchg
popf
fldl
xor
lret
fldt
dec
xchg
in
jbe
cmp
fwait
mov
cltd
test
jmp
xchg
or
fldenv
fs
mov
jns
in
mov
subb
lods
inc
or
jl
sub
pop
xlat
pop
dec
fwait
inc
mov
jmp
pop
push
test
push
notl
xchg
pop
cmp
mov
mov
add
aad
xor
ret
push
ja
mov
inc
push
and
dec
pop
push
test
pop
mov
cmp
lods
test
xchg
mov
shr
and
sub
push
push
sub
iret
lahf
repnz
push
xchg
jl
xchg
icebp
scas
mov
xor
imul
adc
jbe
inc
or
and
push
mov
push
fidivrl
fadds
cltd
mov
popa
inc
outsb
push
mov
mov
ds
orb
and
mov
xlat
sbb
mov
and
sbb
jno
imul
mov
push
pop
in
in
je
push
dec
ljmp
fmull
jns
inc
inc
jae
or
and
fisubs
mov
xor
ret
sbb
dec
jo
push
mov
or
xchg
mov
dec
xlat
jmp
nop
and
adc
sub
dec
xor
flds
inc
inc
cmc
jl
jo
dec
not
popa
or
jg
enter
cmpsb
jle
in
mov
cmpsb
sub
mov
xor
adc
cmc
sarb
xchg
jne
in
sahf
mov
ret
fcomps
pop
mov
xchg
insl
out
fiaddl
imul
aaa
or
pop
or
xchg
sub
mov
in
push
and
sub
and
cmpsl
push
out
or
mov
adc
dec
fdivr
pop
cmp
mov
clc
loop
int
jl
mov
mov
sahf
push
adc
test
out
mov
mov
or
adc
outsl
inc
mov
sahf
outsl
mov
mov
cltd
loopne
out
or
jg
jne
popf
sbb
pop
out
push
sub
xchg
mov
idiv
lods
and
mov
repz
gs
data16
filds
fcoml
std
sbb
ret
xchg
mov
mov
push
xchg
add
mov
sahf
leave
adc
and
jnp
imul
icebp
push
popf
push
mov
push
sar
dec
popf
not
inc
fidivrs
outsl
addr16
xchg
or
pop
inc
add
pop
add
adc
or
es
std
add
repnz
enter
mov
out
cld
packuswb
and
add
stc
or
push
mov
jp
or
pop
mov
xchg
fsub
xchg
mov
movsl
pop
mov
hlt
inc
fmuls
test
out
lock
inc
and
push
sub
sbb
pop
aaa
mov
mov
xchg
mov
ss
jle
cmp
push
fldcw
ds
out
psubsb
inc
jl
pop
xor
pop
cwtl
xor
call
xchg
aaa
sbb
aam
mov
cltd
aad
rcrb
sbb
and
mov
pop
mov
sub
orl
stc
repz
or
mov
cmc
js
dec
out
sbb
nop
cli
sbb
cmp
lds
and
sub
hlt
sbb
fsubl
outsb
jecxz
xor
mov
icebp
adc
xchg
aas
push
shl
rcl
or
jge
scas
pop
mov
sub
leave
adc
stos
aaa
sbb
stos
ds
cwtl
pop
shlb
arpl
adc
pop
cli
xor
in
mov
cmpb
subb
push
loop
xchg
jno
cmpsl
negl
mov
dec
pop
jne
mov
mov
or
add
add
cltd
dec
inc
xor
orb
lods
sbb
sub
sbbl
js
or
push
mov
aad
subl
pop
xchg
fs
aaa
pop
out
add
or
mov
inc
loopne
inc
jmp
in
ss
or
test
mov
pop
adc
cmpsb
imul
pop
push
jne
mov
orl
sbb
clc
sarl
sub
repnz
mov
add
xchg
push
xchg
int
push
adc
int3
clc
lea
pop
dec
xchg
mov
xchg
xchg
hlt
dec
int
sahf
and
aad
add
and
mov
pushl
mov
mov
mov
loop
jecxz
xor
mov
lock
xor
repz
mov
in
pop
test
xor
pushf
lods
shlb
or
daa
jp
andb
cmp
mov
push
clc
or
nop
jge
add
cmpsl
lret
push
and
and
xchg
lahf
pop
mov
sub
repz
ljmp
bound
mov
stc
ret
andb
mov
sbb
xlat
pop
pop
out
push
mov
mov
adc
js
sbb
inc
aaa
lret
xchg
aaa
out
scas
nop
mov
xor
mov
cmp
pushf
jge
in
xchg
lock
jno
lea
pop
jb
push
mov
sbb
push
xchg
mov
jae
out
add
push
ljmp
stos
testb
shl
add
push
cmp
pop
sbb
mov
rcrl
enter
stos
inc
in
ret
push
cmp
inc
mov
xchg
cmp
jecxz
into
and
jns
out
push
adc
sti
fisubl
sbb
out
ret
bound
or
push
or
adc
mov
sahf
ret
int
mov
add
ja
inc
in
xchg
jno
idivl
popa
mov
adc
mov
into
sbb
cmpsb
js
fldl
popa
cmc
xchg
add
dec
push
xchg
mov
xor
lods
lret
xor
rcr
inc
xor
fidivrl
add
mov
jo
mov
pop
mov
mov
add
icebp
out
cmp
jne
push
aaa
adc
mov
dec
jmp
imul
cmp
inc
jge
nop
into
sub
leave
call
mov
das
fdivrl
clc
mov
aam
xchg
and
ret
stos
dec
inc
cld
int
sbbb
inc
mov
mov
lods
sti
jbe
and
sbb
xchg
jle
pop
cmp
cli
lret
cltd
pop
loope
mov
nop
add
push
jg
call
rol
pop
roll
xchg
mov
lods
inc
loopne
into
sbb
pop
fwait
inc
add
mov
outsl
test
push
sar
jae
dec
rorb
lods
cmp
inc
fisttpl
lcall
iret
incl
movsb
sarl
xchg
push
loop
dec
mov
fsts
sub
add
jge
icebp
mov
sbb
xchg
jnp
jecxz
fs
movsb
ret
hlt
cmp
xchg
ja
add
outsb
arpl
mov
in
cli
dec
jne
add
ror
pop
movsl
repnz
dec
adc
pop
xor
in
cmpsb
sub
mov
stos
ja
inc
xchg
pop
adc
inc
clc
jae
stc
std
roll
mov
sbb
cmpsl
push
aaa
xor
jb,pt
js
maskmovq
and
repnz
inc
mov
sub
add
shlb
shlb
xor
scas
fadd
scas
cwtl
shll
mov
int3
push
fcmovne
pop
cvtps2pi
xchg
push
xor
movsb
mov
sub
enter
fcomps
jbe
lret
cltd
or
into
or
mov
cmp
inc
ljmp
in
dec
fsqrt
push
inc
in
xchg
pop
test
adc
and
push
ret
lds
mov
imul
xchg
imul
mov
sahf
pop
insl
or
mov
arpl
mov
lret
stos
js
or
mov
pop
or
inc
jbe
in
or
loopne
lods
loop
fwait
js
and
insl
xchg
pop
pop
push
add
clc
nop
inc
adc
xor
shrb
jb
popf
imul
test
push
jmp
inc
dec
xor
leave
lret
jp
mov
mov
sbb
push
jb
imul
loop
jnp
clc
sub
add
pop
fucomip
fists
imul
pop
and
cmpl
loopne
and
cmpsb
jbe
push
cmp
push
movb
fsub
inc
sbb
lds
jecxz
mov
push
fldl
mov
pop
jmp
push
push
cmp
insl
dec
sbb
push
sbb
ror
sub
popf
repz
jmp
lahf
jecxz
pop
std
jg
repnz
aad
xchg
mov
mov
mov
and
fsub
es
xchg
clc
sub
jae
push
stos
xor
lahf
test
bound
sub
lea
adc
rcrl
bound
mov
in
icebp
scas
pop
fidivrs
mov
lods
movsb
adc
inc
lahf
pop
inc
into
xchg
pop
xor
aad
out
inc
and
push
rcr
mov
mov
xor
adc
xor
fidivrs
sbb
mov
aam
and
notl
mov
jp
jb
or
jnp
inc
xor
adc
clc
xchg
mov
lea
mov
imul
dec
aad
mov
scas
divl
mov
sbb
push
or
mov
out
pop
loope
ret
jmp
push
rcr
push
push
sub
jge
dec
ficomps
cld
pop
pusha
in
mov
nop
sahf
out
xchg
cmp
mov
pushf
mov
xor
movsl
cld
mov
inc
push
push
sbb
jge
cmp
push
ror
and
fsub
and
adc
enter
cmp
adc
xchg
sbb
adc
out
or
pop
lea
inc
sbb
push
xchg
pop
ds
pop
icebp
pop
test
or
jb
xchg
jb
lea
add
into
addr16
sarb
fs
adc
les
push
pop
addr16
xchg
cmpsb
push
fdivrl
aam
and
sub
icebp
stos
movsl
and
movsl
popa
jnp
mov
inc
cwtl
mov
add
aas
roll
insl
imul
or
adc
ret
mov
cmpsl
jno
sbbb
sub
xchg
subl
iret
gs
pushf
lret
add
push
int3
dec
inc
jge
or
sub
adc
repz
cwtl
sub
fdivrp
or
cmp
cmp
xor
mov
int3
fisttps
jno
outsb
stc
das
push
mov
sahf
cmp
lock
xlat
and
insb
push
scas
push
ret
mov
cld
or
int3
lcall
dec
fs
adc
adc
push
xlat
rcl
or
sarb
dec
xor
decl
insb
gs
dec
mov
pop
out
sub
stc
das
sti
mov
icebp
xchg
jae
rol
repz
dec
neg
jl
or
mov
xchg
inc
in
mov
mov
sbb
mov
pop
jae
les
out
cwtl
add
rcr
fadds
inc
or
jl
add
sbb
daa
sub
xchg
imul
mov
mov
setg
push
rcrb
mov
add
fmull
adc
lahf
sbb
and
aam
mov
jnp
jp
adc
pop
push
loop
fmuls
dec
leave
xor
call
test
adc
and
hlt
int3
and
push
push
push
and
dec
out
xorl
ficompl
fcoms
mov
or
jecxz
movsl
mov
and
xor
stc
repz
aad
sti
popa
aaa
pop
mov
scas
inc
push
mov
xchg
or
dec
into
mov
xor
scas
stc
cmp
pop
add
jl
repnz
filds
les
loope
repnz
test
pushf
jbe
mov
dec
in
push
inc
inc
orl
ret
fdivr
mov
pop
pop
les
add
loopnew
mov
in
loope
orb
in
cmp
and
aad
and
cmpb
push
add
cs
or
cmpsb
xchg
or
sub
sub
arpl
into
xchg
xlat
dec
scas
pop
or
rclb
pop
lods
ret
jp
dec
sub
pop
mov
cmpsb
pop
imull
mov
fbstp
inc
jg
add
or
mov
imul
ror
add
cmp
push
clc
outsb
call
pop
cmp
or
pop
into
dec
fidivrs
push
mov
clc
outsb
call
pop
cmp
or
pop
into
dec
fidivrs
push
mov
clc
outsb
call
pop
cmp
or
pop
into
dec
fidivrs
push
mov
clc
outsb
call
sahf
cmp
or
pcmpgtd
add
loope
icebp
out
sar
xor
rcr
xchg
dec
popa
pop
jno
inc
jle
push
and
jno
add
adc
loope
icebp
out
sar
mov
mov
jno
inc
jle
push
and
xor
add
adc
loope
icebp
out
sar
mov
mov
sub
data16
push
pusha
fs
adc
movsl
mov
and
jge
and
inc
sub
jmp
inc
jmp
jae
movsb
pop
sbb
lea
mov
inc
sti
push
icebp
loope
mov
ss
push
daa
es
shl
cmp
xchg
dec
mov
adc
scas
and
adc
sarb
mov
rorl
fs
pop
scas
lock
popa
cs
cmp
xor
test
sub
mov
mov
jo
mov
sbb
into
add
inc
xor
test
push
mov
dec
xor
pusha
xchg
inc
cmp
ficomps
lds
adc
adc
sar
mov
mov
jno
inc
jle
push
and
xor
add
push
mov
xchg
loop
xlat
lock
in
loope
or
adc
imul
subl
mov
fwait
xchg
repnz
scas
out
mov
sbb
imul
pop
je
jg
mov
test
int
mov
cmpl
push
push
and
xor
add
adc
loope
icebp
out
sar
mov
mov
jno
inc
jle
push
and
xor
add
adc
loope
in
xor
add
cmpsl
pop
mov
mov
sbb
xchg
scas
arpl
lock
jg
pop
and
mov
and
jbe
mov
aam
or
push
push
movsl
out
xchg
jae
jmp
push
fisttpll
lret
push
mov
push
jne
adc
xor
data16
roll
push
in
cmpsl
mov
in
ss
movsl
cmp
icebp
sub
jae
cmp
xchg
push
movsb
aam
fwait
lds
xchg
movsl
fstpl
clc
lret
insb
cli
sub
stc
sub
sbb
add
dec
popa
jl
cmc
clc
sarl
outsb
outsl
mov
fldl
mov
loope
les
push
scas
push
inc
addb
mov
inc
mov
mov
or
repz
adc
xor
add
aas
icebp
imulb
repz
dec
add
xlat
adc
mov
sub
loop
hlt
shll
mov
push
arpl
mov
stos
xor
test
lea
insl
gs
mov
xchg
xlat
int3
pusha
lret
mov
fwait
js
and
push
fistpll
pop
push
pop
mov
inc
cmovbe
sub
shll
cmpsl
push
push
mov
pop
inc
lcall
push
push
jmp
jl
pop
dec
aad
shll
jno
stc
inc
daa
xchg
jecxz
stc
out
push
or
sbb
aad
mov
mulb
int
jle
hlt
xchg
mov
sub
shlb
xchg
movsb
xchg
pop
add
fs
aam
mov
xchg
int3
test
push
cs
arpl
stos
or
add
pop
sub
aad
shll
shll
jg
movl
jl
test
or
and
jae
inc
dec
push
push
and
cli
fildll
mov
mov
loop
int
lea
sbb
test
inc
mov
es
shrl
jno
fs
sti
mov
lods
or
mov
negb
mov
xchg
jmp
sub
inc
out
loopne
push
cmp
sbbb
push
leave
mov
cld
jae
jle
pop
in
rol
mov
ret
or
test
popf
push
pop
cmp
and
mov
or
ret
scas
dec
shlb
sbbl
popa
popa
or
out
jmp
dec
sbb
out
mov
out
mov
sbbb
mov
loop
test
push
xchg
fs
enter
cwtl
push
mov
jge
pusha
mov
xor
lds
stos
mov
in
mov
xchg
xchg
mov
out
jns
or
mov
shrb
jge
cs
loopne
xchg
shlb
cwtl
mov
add
lea
lea
jbe
xor
fildll
ljmp
xchg
cmpsb
xor
fistpl
inc
stos
mov
shrb
stos
mov
cmp
inc
sbb
je
sub
mov
stc
cs
addr16
xchg
in
lret
lods
test
int3
cmp
popf
sbb
xor
add
sub
mov
and
or
add
push
push
out
jl
aaa
jns
inc
cmp
jno
push
icebp
rcll
rorb
xchg
cmp
movsl
loope
fsubs
call
mov
or
add
pop
pop
cli
xchg
add
push
push
filds
adc
loop
mov
popa
mov
daa
cmp
aas
cmc
xchg
adcl
cmp
scas
mov
push
scas
repz
push
sbb
rolb
loope
ljmp
mov
fdivrs
jo
pop
pop
add
test
mov
out
lds
aam
or
jne
mov
mov
jp
add
jg
or
mov
push
jno
insb
clc
lods
push
push
dec
or
and
stc
pop
in
mov
insl
sbb
cmp
pop
sub
int
fdivrl
jl
push
push
js
int
or
pop
into
ljmp
neg
popa
push
aad
subl
lcall
pop
xchg
inc
push
or
fisubl
add
xor
popf
push
dec
scas
rclb
addr16
xchg
mov
dec
pop
movb
jmp
ficomps
mov
cmova
fldcw
add
fstp
mov
out
lcall
idivl
inc
int
mov
sarb
ljmp
hlt
dec
fdivrs
and
mov
adc
aam
add
mov
pop
dec
scas
clc
mov
adc
jp
test
jle,pn
ljmp
fildll
push
int
xor
jae
fcompl
inc
dec
xor
outsb
mov
xchg
pusha
sbb
pop
mov
push
andl
rolb
xor
lods
scas
fst
dec
xchg
bound
cmpsb
cld
mov
dec
dec
jg
fs
ja
cmp
andl
test
orb
cmpsb
push
push
out
mov
dec
cmp
xor
sti
push
mov
xchg
aad
fbstp
mov
fnstcw
lret
and
in
test
in
sbb
testb
jecxz
push
test
xchg
adc
in
fidivs
add
mov
scas
cltd
lret
and
inc
jb
or
popf
sub
jmp
pop
or
mov
mov
mov
dec
cmpl
sbb
jno
cmpsb
mov
or
pop
fldt
sbb
mov
nop
js
jbe
sub
xchg
imul
cld
pop
adc
in
lds
add
pop
pop
sub
out
adc
inc
push
icebp
mov
xor
es
and
mov
hlt
or
mov
mov
mov
out
fbld
loop
inc
and
jge
out
push
xor
das
cli
sub
mov
movsb
push
shrb
and
out
insb
loop
add
lcall
popf
ja
jge
xor
and
dec
fs
cld
mov
in
inc
sub
movsl
sbb
add
fisubl
lahf
push
mov
ljmp
xor
insl
xchg
gs
cmp
ret
sub
mov
dec
jmp
and
jbe
mov
jb
and
shll
adc
push
add
lahf
and
mov
ljmp
ss
scas
mov
dec
jo
aad
out
dec
leave
jg
mov
push
push
aad
and
inc
or
test
add
and
test
inc
xor
std
push
dec
lret
rcr
mov
mov
stc
ret
mov
jns
jmp
adc
pop
mov
push
ljmp
dec
xor
cmp
add
mov
cmp
lea
inc
sbb
aam
cli
inc
xchg
mov
inc
test
cld
sbb
dec
xor
jnp
and
loopne
popf
adc
push
pop
fs
mov
add
dec
dec
fnstsw
arpl
jo
test
cmpsb
cmp
cmc
cmc
bnd
mov
dec
fmull
leave
inc
int3
jne
ret
popl
xor
aam
cmpsl
xor
ljmp
jno
rcrl
mov
cltd
adc
add
out
add
xchg
ljmp
gs
pop
sbb
push
sbb
or
popl
pop
das
sarl
pop
mov
int
loop
jmp
rclb
or
sahf
roll
dec
mov
xchg
fwait
out
or
cltd
cmp
data16
inc
push
mov
adc
jle
jo
and
iret
cmpb
dec
fucom
dec
out
push
lods
nop
pusha
in
push
cmp
xchg
push
or
xchg
rclb
leave
mov
xchg
and
into
inc
and
fsubp
xchg
movsl
mov
loopne
movsb
test
popf
or
es
mov
test
negl
mov
mov
and
xchg
mov
cltd
data16
xchg
add
adc
dec
xchg
sub
rorb
fsubl
xchg
push
mov
mov
fmul
mov
mov
cmp
pop
dec
xor
enter
xor
in
jmp
inc
mov
push
lds
sub
jp
ja
xor
xchg
cmp
xor
jle
lock
pop
xorl
mov
or
push
je
or
lcall
shll
mov
cmp
jo
jae
pop
adc
test
pcmpeqd
or
dec
mov
cwtl
mov
mov
adc
and
sub
xlat
sbb
inc
negb
adc
jmp
adc
and
pop
insl
inc
int3
xchg
xchg
sahf
pusha
adc
into
and
fsubs
subb
mov
popf
mov
sub
icebp
mov
pop
dec
roll
dec
cmp
mulb
mov
scas
jnp
or
lock
or
aas
call
or
ret
pop
inc
or
sub
cltd
fstps
cwtl
outsb
add
call
mov
lret
nop
icebp
mov
stos
push
dec
fidivs
shrb
not
nop
lcall
movsb
pop
out
loopne
ss
dec
pop
lea
enter
inc
push
xor
cmp
cmp
push
mov
leave
test
pop
movsl
lds
aaa
xor
mov
aam
sub
jb
lds
xor
xchg
inc
addr16
jo
xor
jns
hlt
adc
dec
iret
jg
arpl
ret
jne
das
rol
fs
mov
lock
dec
fsub
dec
cmp
outsl
push
jmp
dec
ss
sub
aas
jbe
addr16
xchg
dec
fdivs
add
sub
imul
cltd
cmpsl
or
pop
inc
loopne
push
lods
mov
fldcw
orl
out
dec
movsb
jne
sub
test
add
dec
negl
mov
fsubr
arpl
lret
pop
lret
cmc
in
fcomps
outsl
inc
mov
loopne
pop
arpl
imul
mov
inc
adc
cmpsb
mov
loope
add
xor
insb
push
add
jl
cmp
out
lds
rol
or
dec
roll
and
or
jne
das
ljmp
in
and
cmpsb
lret
add
mov
dec
and
jecxz
cmpsb
xchg
jb
cwtl
add
dec
int
cmp
lods
inc
and
sbb
dec
rclb
rclb
fdivr
stos
ds
cmc
loope
mov
push
adc
add
iret
ficoml
imul
sub
and
inc
mov
les
xor
or
adc
rorl
aam
scas
mov
or
push
fsubrl
push
push
call
imul
cwtl
xor
dec
mov
push
mov
dec
stos
mov
adc
data16
rcrb
mov
add
sti
outsl
mov
mov
and
adc
dec
std
stc
add
push
jns
adcb
pop
pop
and
add
cmp
fimuls
mov
adc
stc
add
fadds
adc
fucomp
inc
mov
sub
sbb
fidivrs
adc
add
test
xorl
add
into
cltd
pop
xchg
daa
pop
and
xor
sub
mov
jge
iret
rolb
jae
shlb
fcmovnu
sarb
sub
data16
repnz
and
pop
shr
shlb
dec
inc
inc
or
xor
cmpsb
mov
ja
xor
dec
repz
sbbb
loopne
cmpsl
stc
in
repz
cli
add
pop
mov
inc
mov
dec
popf
jl
insl
inc
cmc
cmp
rcll
dec
loope
mov
mov
les
loop
fmull
sahf
dec
sbb
dec
popf
xchg
push
jbe
xchg
mov
jo
dec
and
or
xor
sub
mov
js
testb
neg
jbe
inc
sahf
ret
sarb
test
xchg
movsl
jbe
xor
das
xchg
dec
or
mov
jnp
je
mul
cmpsl
xchg
out
cmp
push
rcl
xor
popa
int3
loopne
add
aas
push
cli
in
jp
pop
dec
lock
stc
cli
fildl
cmp
and
pop
in
push
pop
xchg
test
sbb
dec
mov
jmp
in
cltd
lahf
fdiv
lock
lret
sahf
lcall
dec
das
sti
pop
inc
dec
and
push
into
shrb
addr16
jnp
ss
cmp
ljmp
mov
outsl
mov
mov
or
les
psubusw
in
das
enter
push
sub
movhps
xchg
lea
stos
movsb
cltd
fstl
xor
movsb
bound
es
sub
push
xchg
inc
dec
loope
je
dec
pop
pop
mov
or
mov
sti
jbe
stc
iret
and
jg
inc
pop
outsb
js
cmp
adc
adc
adc
lock
mov
inc
aad
jnp
pushf
mov
imul
pop
fdivrl
sbb
xor
fisubrl
jb
push
fimull
out
ljmp
push
into
sahf
or
push
bound
sub
add
movsb
pop
mov
pop
lcall
add
iret
jg
ret
call
out
push
push
ljmp
jnp
mov
jne,pn
lods
xor
jecxz,pn
sbbl
lea
push
into
fcmovne
and
cli
nop
scas
mov
xchg
dec
or
sbb
and
mov
push
mov
rcr
mov
mov
pop
test
int3
push
inc
adc
and
pop
pop
sbb
iret
mov
inc
hlt
cld
aad
adc
dec
and
cs
mov
mov
jl
shll
jg
cwtl
cmc
cltd
shrb
mov
and
insb
mov
pop
iret
sub
lcall
stos
jmp
bnd
repnz
push
mov
or
mov
push
int
in
in
nop
cmc
ljmp
fwait
iret
xor
imul
pop
push
test
das
mov
xchg
movsl
mov
and
mov
test
adc
mov
mov
mov
mov
mov
mov
mov
xchg
xor
sub
lret
mov
mov
xchg
xchg
inc
xchg
push
or
ds
in
mov
jo
push
jmp
js
mov
testb
fs
sarl
cmpsl
cmp
test
adc
sti
les
sub
scas
and
or
cli
movsb
iret
shll
icebp
mov
leave
xchg
mov
sub
in
xor
mov
insl
aas
loope
push
pop
ffree
cli
lods
stos
add
repz
jmp
cmp
ror
fildll
adc
mov
xchg
lret
adc
jae
pop
call
cmpsl
and
jle
ficoms
push
or
arpl
adc
inc
lea
pop
add
mov
push
aaa
cmp
push
movsl
shll
shlb
leave
xchg
inc
fimuls
in
mov
cltd
jo
loop
bound
dec
ljmp
cs
pop
or
inc
loope
pop
test
pop
and
loop
xchg
test
repnz
mov
daa
xor
xchg
je
addr16
dec
aad
iret
sbb
mov
pushl
dec
inc
pop
jmp
mov
xchg
mov
cmc
fmull
arpl
imul
clc
out
mov
xor
repz
adc
das
xchg
inc
in
iret
pop
lock
daa
mov
je
lds
cs
cmp
push
lds
sub
icebp
inc
stos
or
dec
js
pop
mov
jge
test
mov
fsubrs
lock
and
cmp
add
cs
js
pusha
jnp
mov
ljmp
sub
rorl
xor
scas
mov
mov
push
mov
daa
lea
inc
pop
icebp
outsl
adc
pop
jmp
fsubl
jb
mov
movsb
and
arpl
scas
cs
inc
shlb
sti
jbe
inc
out
in
pop
mov
das
mov
cld
cmpb
lds
and
addb
std
cmp
imul
jns
fisubl
lret
jmp
xor
xchg
mov
loope
xorl
loop
mov
jg
mov
xchg
xor
sbb
inc
and
mov
or
test
add
xor
shlb
out
jg
sub
add
les
rcrl
bound
in
popf
popa
ret
mov
notl
jno
sub
icebp
arpl
sbb
roll
jmp
fadds
insl
movsl
dec
dec
or
jp
jnp
pop
or
xchg
or
lcall
mov
push
sbb
sub
or
iret
dec
cmp
mov
mov
mov
fcmovbe
sbb
mov
pop
jp
inc
ljmp
shl
cmp
sub
pop
test
mov
cmc
addr16
pop
fidivrs
or
imul
fsubs
jge
and
mov
sbb
mov
mov
loop
ja
inc
leave
ds
adc
std
int
pop
daa
insb
push
fs
fidivrl
xchg
inc
mov
lcall
xlat
jl
sub
fnstcw
imul
inc
sbb
movl
ror
je
rclb
outsl
lret
loop
arpl
mov
push
sub
fadds
ja
pop
repz
fbld
movsb
fsts
push
adc
dec
xchg
xorl
lods
mov
fsubrs
jle
int
xchg
or
fists
mov
xor
sub
fsts
icebp
sahf
pop
sti
cmp
sbb
mov
cwtl
insl
mov
test
push
std
or
add
inc
leave
adc
add
int3
cmpsb
je
cmpsl
sbb
push
lea
movsl
xchg
andb
mov
hlt
mov
leave
jns
mov
cltd
loop
jns
fistpll
and
subl
mov
in
dec
xchg
dec
or
ror
jl
out
jmp
xor
les
ja
adc
xchg
push
xor
jne
jne
lahf
inc
enter
sbb
sub
xor
push
add
push
fsubl
loope
fsubrs
mov
test
pushf
mov
aam
lods
or
mov
add
stos
jne
subb
inc
insl
xchg
xchg
iret
int3
out
sub
enter
pop
adc
pop
mov
faddp
adc
pusha
pop
and
packsswb
or
cld
jg
leave
mov
xlat
int
pushf
inc
test
push
sarb
sub
jnp
lea
int
dec
lods
lret
dec
adc
lods
xor
cmp
repz
jae
xchg
push
shl
pop
ljmp
iret
cld
sub
and
pop
cmc
test
rorb
es
dec
xor
ret
rclb
fs
lods
das
cmp
ds
and
xlat
pop
ss
lods
lcall
mov
sbb
daa
in
sti
imul
fldenv
pusha
xor
sbb
sbb
mov
and
icebp
adc
lock
dec
cld
not
hlt
sub
mov
in
frstor
loope
xor
fmuls
push
flds
mov
dec
dec
inc
xchg
fadd
mov
pop
xchg
sbb
push
pop
leave
lods
clc
in
and
popa
mov
fildll
int
out
cmc
cmp
das
aam
pop
stc
or
cmp
lret
pop
jg
test
pop
test
push
add
in
cwtl
inc
data16
or
andl
add
popl
jge
rcr
fildl
int3
push
xchg
mov
jmp
je
push
imul
int3
rcrl
into
cmpsl
xor
scas
rcrb
sub
mov
pop
cmp
push
idiv
mov
lock
xlat
dec
cli
hlt
mov
mov
mov
lock
jb,pt
jb
gs
jb
popa
ljmp
icebp
sbb
mov
dec
mov
dec
and
sub
jo
lret
loope
out
mov
push
std
push
adc
stos
fiaddl
sub
jge
ja
push
adc
cld
mov
push
jns
jmp
and
imul
outsl
imul
mov
mov
add
aad
push
into
adc
daa
jnp
cmp
testl
cmp
ja
and
and
dec
mov
jae
daa
rolb
cmp
mov
sub
cmp
mov
popf
or
push
mov
negl
mov
leave
aas
and
xchg
push
jg
je
loopne
aaa
sti
jecxz
and
xchg
lcall
scas
or
mov
fucomp
sbb
jle
mov
add
mov
mov
lds
and
pop
mov
mov
cwtl
pop
cmp
cmp
jle
daa
mov
cmp
movsb
jne
int
xor
fdivrl
and
dec
call
pop
xchg
ds
jo
rorl
cmpl
push
push
and
xor
add
adc
loope
icebp
out
sar
mov
mov
jno
inc
jle
push
and
xor
add
adc
in
icebp
out
sar
mov
mov
jo
inc
jle
push
and
xor
add
adc
loope
icebp
out
sar
mov
mov
fcmovnb
inc
jle
jns
xchg
into
sar
shr
push
cmp
and
popf
push
sub
cmp
or
sbb
insb
clc
jle
dec
enter
cmp
in
js
dec
int3
pop
test
sub
sbb
or
sbb
add
jl
or
pop
nop
ds
and
sahf
jbe
sbb
push
and
int3
repz
pop
loopne
std
outsl
cmpl
adc
inc
lods
je
or
jno
insb
fstpt
xchg
shlb
out
das
mov
lods
nop
clc
icebp
int3
or
add
daa
les
inc
in
clc
add
mov
sahf
pop
or
insb
or
insl
movsb
mov
lods
jge
jge
push
mov
mov
imul
mov
xchg
clc
dec
mov
dec
hlt
insb
push
lods
in
pushf
hlt
and
in
js
mov
pop
and
cmp
pop
insl
clc
or
fmuls
xlat
mov
test
xchg
enter
rcr
mov
sub
lret
fstpl
pop
aam
xlat
insb
movsl
add
popf
out
xchg
stos
xchg
jg
mov
fwait
sub
push
add
insb
add
insl
stos
or
fcmovnu
jae
outsb
dec
or
sbb
dec
push
pop
outsb
stos
and
sbb
push
mov
dec
fdivs
inc
decb
jl
pusha
mov
cwtl
push
xchg
cmp
pop
mov
in
js
jne
add
cmp
jp
jns
add
or
push
imul
xor
cli
push
sti
imul
js
dec
int3
pop
fsubrl
or
sbb
insb
clc
jl
dec
fcomps
cmp
in
js
dec
int3
pop
fsubrl
or
sbb
insb
clc
jl
dec
fcomps
sahf
imul
fdivs
es
cli
xchg
shr
push
jmp
mov
jne
sbb
adc
jle
sub
mov
ret
push
ja
fdivr
jno
mov
dec
adc
lahf
aaa
push
mov
out
ret
rcrl
fcomi
jno
push
scas
push
jne
pop
orb
cmp
orl
push
xchg
or
mov
jmp
imul
and
fucom
mov
mov
test
stc
cli
nop
in
mov
jae
stc
ret
mov
inc
imul
mov
outsb
fcoml
mov
je
pop
lahf
dec
xchg
jecxz
push
test
jp
xchg
jo
push
xchg
mov
mov
les
sub
push
rclb
std
sub
hlt
enter
jmp
scas
mov
jns
jmp
and
adc
mov
inc
shrb
or
cwtl
or
insb
mov
push
out
popa
lcall
cmp
in
fstps
cld
fcompl
pop
incl
fcom
iret
punpcklbw
pop
sbb
jle
dec
sub
pop
out
leave
and
add
mov
lods
or
jbe
popf
push
ja
adc
roll
sti
adc
andb
out
push
dec
iret
add
insb
xor
xor
mov
call
xchg
sti
insl
mov
push
push
mov
jae
mov
mov
sbb
xchg
dec
xor
and
mov
fisubrs
in
or
imul
or
push
sub
cld
lock
in
lret
xor
cmp
pop
das
shlb
insb
or
xchg
and
test
ret
mov
xchg
imul
cmp
cs
out
insb
outsb
xchg
xchg
sub
sbb
popl
inc
push
xchg
sbb
aam
push
popa
or
adc
int
movsb
iret
mov
or
dec
jl
inc
push
cmp
xor
or
adc
xchg
dec
testb
jl
mov
and
orl
arpl
lods
xchg
xchg
std
lock
loope
dec
shll
pop
nop
or
and
push
lds
pop
icebp
cld
push
in
int3
sub
int3
das
rorl
push
stos
fdivrl
cmp
cwtl
outsl
push
dec
mov
enter
sub
andl
mov
stc
push
cmp
push
mov
ficoml
inc
or
popw
add
rcll
cmp
mov
into
mov
jmp
push
jmp
push
test
cmovg
ret
sti
mov
xor
or
repz
mov
cmp
sbb
fmull
push
lret
cld
xchg
adc
inc
out
xchg
add
jns
xor
mov
push
nopl
out
orb
test
ljmp
jae
lods
xlat
and
inc
lcall
loope
and
dec
and
xor
push
ror
aas
les
cmp
fists
frstor
addr16
push
push
cmovae
add
mov
fmul
stc
sub
jae
jno
pop
jge
leavew
mov
cmp
add
push
push
stos
insl
shl
testb
xchg
mov
shl
aas
add
mov
pop
test
sbb
push
ret
mov
push
cmc
out
xchg
sub
pop
arpl
aad
xchg
mov
outsb
mov
aam
insl
xlat
or
jb
sub
into
and
push
test
rolb
movsl
xchg
mov
push
pop
arpl
or
loope
cmp
jle
lret
in
sbb
enter
push
lahf
cltd
lea
xor
cmp
push
xchg
xlat
insb
in
fcomps
ret
cmp
jp
sbb
movlps
cmp
dec
lods
sbb
xor
roll
popf
dec
sbb
insb
cli
cmc
pop
rcrb
jle
in
push
pop
shr
aas
out
or
outsb
mov
sbb
mov
and
xchg
std
jo
lret
push
fs
test
xchg
xchg
out
mov
adc
dec
ss
mov
inc
cmp
xchg
sbb
loop
fnstsw
cmp
fbld
sbb
jbe
inc
lret
xlat
insl
aam
sub
jnp
pop
sti
dec
mov
js
out
cmp
data16
out
dec
mov
sahf
mov
repnz
mov
subl
adc
xor
sub
mov
loope
out
cmp
or
dec
sub
fdivrl
imul
sbb
mov
inc
push
pop
jge
jmp
repnz
loopne
ja
sarl
imul
add
add
je
mov
je
jne
into
jne
andl
cwtl
mov
adc
sbb
js
sub
pslld
jnp
xchg
xchg
loopne
sub
adc
ss
popf
lcall
xchg
dec
adc
rorl
push
mov
js
jecxz
push
pop
out
mov
inc
jge
inc
rclb
push
push
inc
pop
push
ss
pop
mov
cwtl
and
mov
test
mov
or
in
mov
out
ss
icebp
sbb
in
cltd
inc
fsubrs
xchg
mov
and
fldcw
test
sub
xor
xchg
addr16
xlat
sbb
mov
or
jns
lret
cltd
stos
and
test
or
pushf
ljmp
and
pop
pop
inc
mov
in
fnsave
pushf
push
xchg
jmp
ja
sbb
sbb
sahf
mov
mov
movsl
movsl
nop
mov
dec
jns
xor
jo
sub
jo
sti
sahf
movsl
xchg
mov
into
push
sar
sar
xchg
xor
mov
push
nop
xor
adc
ljmp
sbb
cmp
fbld
imul
data16
repnz
hlt
fs
outsl
fsubrl
notl
leave
test
aam
mov
push
xlat
unpckhps
sub
add
xor
mov
dec
addr16
pop
sbb
sbb
jnp
sbb
and
ss
jmp
or
getsec
jmp
testb
outsb
cli
push
nop
pop
mov
aaa
cltd
jmp
fisubl
lods
mov
fnstenv
xor
and
xor
inc
or
or
mov
daa
mov
xor
sub
sub
inc
add
in
mov
or
mov
popf
ljmp
test
mov
push
rolb
pop
nop
aas
jo
sub
and
cmp
xchg
jl
bnd
repz
loopne
cmp
aam
mov
inc
cli
xor
jl
jmp
push
pop
adc
xor
fs
lds
fists
cmp
mov
inc
call
mov
rolb
sub
mov
mov
lret
inc
dec
or
fisubl
or
mov
pop
sbb
push
add
sub
dec
push
jns
idiv
roll
popa
jb
jno,pn
jecxz
stos
xor
outsb
mov
adc
xor
cli
movsb
xor
add
fsts
mov
adc
adc
enter
fisubrs
aas
call
jb
ds
sbbb
lret
xor
movsl
sbb
hlt
mov
fidivrl
enter
lret
xchg
insb
mov
jnp
cmp
mov
aaa
xchg
hlt
mov
lcall
push
jg
pop
pop
dec
into
pop
test
push
ret
ss
xchg
cwtl
jnp
xlat
mov
repnz
pop
jge
and
xchg
mov
push
cs
and
and
push
dec
and
push
dec
mov
cli
imul
idivb
mov
push
mov
mov
mov
xlat
fsubp
mov
inc
push
out
mov
or
lods
mov
add
std
in
lods
ret
scas
scas
aaa
ss
add
pop
mov
mov
movb
mov
sub
mov
cli
icebp
idivl
inc
pop
or
dec
adc
cmpsl
or
pop
sbb
in
mov
out
inc
les
insl
sbb
js
mov
scas
push
icebp
fs
lcall
icebp
cld
enter
mov
or
mov
iret
dec
call
int
sub
push
pop
movsl
je
loop
rorb
cltd
sub
popa
sbb
mov
push
add
and
or
mov
push
jp
lcall
test
fs
mov
adc
popa
mov
pop
sahf
int3
cmp
cld
in
bound
testl
sahf
pop
push
imul
into
clc
jbe
jmp
and
xchg
outsl
fcomps
js
xor
xor
out
stc
adc
dec
xchg
mov
call
mov
xlat
test
int
cmp
lea
in
add
cmp
cmp
push
jl
iret
sbb
js
xchg
push
mov
and
stos
sub
call
iret
std
or
pop
out
fucomi
dec
push
negb
scas
insb
popa
sti
mov
leave
popl
and
push
fmull
jecxz
inc
movsb
jbe
call
inc
bound
stos
xchg
jmp
mov
sahf
dec
inc
movsl
jb
sub
jb
xchg
pop
cmpsb
cmpsb
adc
nop
insb
rorb
loop
js
lret
jl
stos
pushl
int
jno
inc
pop
jg
cwtl
or
pop
fisttpl
jl
inc
decl
mov
inc
ss
push
xchg
movsl
int3
pop
jecxz
imulb
cmpsb
sbb
andb
jae
or
pop
add
data16
lcall
sub
add
lea
jl
add
mov
push
pop
mov
fadds
or
fadds
ljmp
lcall
cwtl
jbe
icebp
xlat
dec
sarl
mov
add
jl
icebp
mov
xchg
pop
pop
and
xchg
dec
xor
mov
or
inc
and
fists
addr16
sbb
mov
in
inc
cmpsl
jne
outsb
and
icebp
ljmp
mov
jno
jmp
in
add
push
jns
lcall
dec
loopne
sub
scas
fmuls
mov
lock
int
fwait
data16
jecxz
js
xchg
in
adc
sbb
inc
mov
sbb
xor
xor
hlt
repnz
cmpsl
lahf
lret
adc
jo
rcll
jg
aas
rorl
mov
fildl
pusha
push
adc
inc
cmp
and
pop
cld
out
imul
clc
mov
jo
add
xor
insb
adc
sbb
out
mov
adc
js
mov
in
popa
dec
dec
inc
or
mov
xchg
inc
sbb
or
aaa
ret
scas
mov
clc
insb
cmp
sbb
xchg
aaa
aad
pop
dec
xchg
push
mov
outsb
es
out
pop
cltd
and
test
pop
test
and
xchg
pop
mov
je
or
adc
push
inc
xchg
stc
xor
mov
cmp
into
or
pop
or
jmp
xchg
xchg
inc
aad
sbb
or
movsb
bswap
dec
aad
and
xchg
mov
in
out
movsl
or
push
fbstp
divl
clc
aaa
cltd
sbbl
dec
out
or
mov
inc
stos
mov
loopne
ret
popf
rolb
das
das
push
adc
ljmp
addr16
push
sub
push
popa
fcomps
repnz
mov
pop
ret
mov
subb
dec
push
addr16
out
mov
push
out
fstpt
mov
aam
and
popf
xchg
push
sub
cmp
data16
add
aaa
das
pop
es
jnp
xchg
daa
loopne
push
push
shlb
mov
jns
js
dec
dec
pop
or
lea
jo
pop
popf
mov
jo
xchg
sbb
lock
mov
adcb
cmp
in
pop
call
out
dec
js
sbb
cmc
push
movl
js
cwtl
adc
inc
pop
xchg
hlt
fbstp
je
xor
repnz
adc
movsb
pop
pop
in
outsb
addw
inc
jp
xor
lahf
mov
jns
push
loop
and
in
xor
adc
popf
adc
inc
pop
aad
es
orb
out
lcall
jns
int3
push
xlat
sbb
popa
pop
insl
mov
ljmp
imul
fbstp
pop
or
aaa
mov
jge
fs
int3
mov
jmp
adc
bound
out
jl
mov
in
mov
daa
rorb
mov
mov
loop
lcall
cmpsb
sbb
loope
mov
xchg
push
push
pusha
sbb
xchg
pavgb
mov
cltd
sbb
cwtl
in
cmpsl
xchg
mov
cltd
mov
sub
sbb
lret
fistpl
xorl
and
mov
test
push
inc
cld
cmpsb
insl
ds
cltd
je
mov
jnp
sub
les
dec
sti
or
or
call
mov
or
pop
in
test
dec
mov
fidivs
adc
js
sti
adc
pop
push
fstps
jb
sahf
push
sbb
cltd
aaa
pop
inc
pop
pop
or
push
js
xlat
jge
jp
push
lods
repnz
stos
mov
loopne
dec
out
push
repnz
repnz
push
sbb
les
jecxz
sub
enter
aas
gs
mov
dec
mov
adc
sub
ficomps
out
aas
mov
xor
dec
repnz
ljmp
aaa
cmpsb
pop
adc
gs
popa
add
sub
lods
sbbb
mov
addb
pop
mov
mov
lret
or
outsl
and
xor
cltd
movsl
xchg
pop
xor
inc
xor
out
dec
jge
pop
pop
movsl
dec
xor
mov
cli
lods
rolb
and
pop
mov
and
cld
rorb
movsl
in
test
cmp
xchg
jmp
ficoml
fidivrl
scas
cld
and
fs
sahf
xchg
dec
fbstp
call
addr16
jl
or
fsub
pop
and
push
sbb
and
dec
xchg
cli
cmp
jae
cmpsb
insb
gs
test
add
mov
sbb
sbb
es
pusha
mov
lcall
sub
push
dec
inc
pop
adc
sbb
cmp
xchg
or
mov
mov
pop
and
dec
xchg
outsb
lcall
adc
add
lods
stc
das
in
fs
test
push
inc
fldt
ja
xor
neg
mov
aam
sub
mov
adc
jecxz
test
outsl
fisubl
adc
std
adc
fs
jbe
push
jle
inc
shlb
push
mov
and
cmp
fs
push
dec
cs
scas
lds
int3
stos
pop
mov
sti
rcrl
dec
icebp
sti
sti
dec
test
jno
mov
mov
pop
push
inc
aaa
repz
cmp
mov
in
fdivrs
in
test
mov
cltd
and
jb
daa
mov
dec
ret
sub
lock
cmp
xchg
cmp
addr16
xor
adc
data16
stc
std
lcall
mov
loop
leave
cs
and
xorb
dec
or
lds
jl
iret
jne
and
cmp
mov
ja
sti
jl
mov
lds
cwtl
jne
or
add
repz
add
push
xchg
test
mov
mov
lds
popf
jnp
or
cmp
std
inc
jbe
sbb
xor
adc
cmp
and
ljmp
dec
sub
sti
and
mov
adc
repnz
test
arpl
push
add
inc
dec
lock
add
not
repnz
inc
sbb
sbb
aam
ja
test
mov
stc
jb
sub
sbb
addl
cwtl
loopne
jne
scas
push
cs
sbb
dec
out
adc
xlat
int3
inc
add
xlat
sbb
lds
hlt
push
sub
hlt
jo
insw
push
mov
mov
cltd
pop
mov
sahf
adc
mov
sub
push
inc
aad
mov
int3
mov
jo
or
lods
or
jmp
bound
stc
mov
sbbl
movsb
dec
out
rcl
jns
sub
jle
push
icebp
outsl
call
das
fs
int
insl
and
sti
ja
sub
add
in
cld
test
dec
jl
scas
xlat
fildll
insb
sub
mov
sub
scas
sbbl
sbb
mov
sahf
loopne
xlat
test
mov
xlat
xlat
mov
inc
fstl
aaa
ficoms
stos
xchg
jg
jns
xor
rorb
imulb
or
hlt
or
xchg
inc
xor
sbb
pop
and
outsb
out
jo
in
and
add
js
ja
int
cmp
adc
in
xor
cli
addr16
sub
rcrb
xchg
push
in
dec
aaa
cld
mov
ljmp
or
lcall
jmp
mov
inc
push
gs
mov
dec
xor
out
fnstenv
cmc
aaa
mov
xor
cltd
std
dec
aaa
jecxz
push
leave
sub
jecxz
rcrl
mov
lret
mov
roll
sub
leave
adc
loop
pop
out
loope
pop
pop
sub
pop
jle
subb
pop
mov
jne
repz
sub
aam
loope
jg
fst
bound
call
pop
out
fdivrs
js
cmp
icebp
and
les
stos
adc
scas
add
into
add
push
mov
push
scas
dec
add
iret
popf
xchg
clc
fadds
lods
xchg
sbb
pop
jne
fisubl
mov
inc
iret
push
movsb
cmpsl
hlt
sub
fcoms
mov
testl
leave
test
ljmp
or
movl
dec
ss
xchg
sahf
jnp
sub
mov
xchg
push
cmp
aad
fsubrs
sbb
jmp
sbb
mov
dec
sub
cs
imul
stos
cli
stos
or
push
loope
inc
xchg
push
or
call
xor
adc
daa
fidivrs
push
sbb
mov
mov
jmp
sbb
xchg
xor
adc
lcall
dec
mov
dec
sub
leavew
ljmp
sub
loopne
push
inc
inc
lcall
xchg
insl
pop
dec
inc
ror
lea
das
mov
das
jge
jbe
pop
divb
sbb
dec
jmp
jns
push
imul
jge
jo
cmpsl
mov
xor
ja
sub
mov
or
int3
daa
leave
ss
into
adcl
xor
sub
test
stc
shrb
outsb
fistl
dec
push
lods
or
daa
add
sbb
outsl
inc
cmp
pop
or
std
fistl
push
cmp
xchg
cmpsl
lds
mov
aas
fsqrt
gs
call
insb
loop
sub
les
dec
in
lret
leave
sub
dec
insb
rclb
lds
adc
ret
sarb
mov
aas
int
inc
sub
icebp
imul
sub
mov
lcall
pusha
movsb
jecxz
xor
jle
ds
mov
push
inc
and
adc
repz
mov
dec
inc
les
fcomps
rcll
adc
nop
movsb
mov
cmp
lea
imul
adc
push
jecxz
add
and
push
adc
imul
mov
push
dec
inc
js
cwtl
or
dec
adc
out
repnz
xor
mov
sbb
jnp
sti
xchg
sbb
push
mov
pusha
icebp
stc
insb
cmp
or
movsl
nop
jno
movsl
fs
mov
in
dec
sub
andb
loopne
mull
add
or
rorb
push
xchg
cmc
xorb
fcoml
cmp
xchg
jnp
stos
push
push
mov
xchg
nop
and
ljmp
mov
jecxz
mov
add
lret
gs
inc
shrl
adc
sahf
ja
push
jb
cmc
xchg
lret
cmpsl
mov
add
mov
sub
ss
push
mov
loopne
in
inc
je
cltd
add
jge
sar
push
imul
popa
and
pop
test
dec
ljmp
aam
les
std
aam
cmc
push
inc
rcr
and
pop
push
test
out
inc
and
xchg
dec
sbb
xlat
out
cmp
lcall
out
stos
hlt
clc
cmp
pushf
push
int3
pop
fsubrl
or
sbb
insb
clc
jl
dec
fcomps
cmp
in
js
dec
int3
pop
fsubrl
or
sbb
insb
clc
jl
dec
fcomps
or
push
in
js
dec
int3
cwtl
fsubrl
or
sbb
insb
call
pop
cmp
fs
push
dec
fcomp
test
inc
xchg
and
imul
daa
mov
and
and
adcb
add
pusha
sar
loopne
lock
add
xor
pusha
shlb
sub
xor
adc
jb
inc
lock
add
xor
pusha
fdivs
andb
adc
jns
shrb
add
xor
shlb
pop
testl
cli
pop
jge
add
adc
hlt
sub
fwait
cmp
sarb
lea
jge
adc
out
aas
add
cs
jge
push
cmp
mov
iret
lret
imul
andb
xor
lds
adc
dec
jg
ret
loopnew
loopne
mov
push
or
ficompl
arpl
lock
sarb
sbb
push
test
enter
fadd
iret
and
bound
pusha
mov
icebp
aad
pop
out
sbb
shll
dec
pusha
pop
pop
lcall
nop
movsl
inc
jo
int3
mov
mov
inc
loopne
lock
shlb
and
or
js
push
inc
mov
pop
cmc
inc
loop
xchg
add
jb
orb
mov
add
mov
gs
jne
inc
repz
incl
adc
loop
push
rcll
mov
rcll
jo
daa
test
in
aad
rcll
pusha
shlb
and
adc
pusha
shlb
inc
lock
add
xor
pusha
shlb
and
adc
pusha
shlb
inc
lock
add
pop
xchg
mov
push
xchg
idivl
mov
xchg
mov
jae
push
mov
mov
imul
mul
sbb
fdivrp
clc
sub
dec
leave
mov
fistl
jle
add
dec
aad
inc
adc
xlat
inc
lea
subl
push
pop
sub
loop
test
sbb
jmp
inc
out
div
scas
outsb
daa
push
push
adc
xchg
sbb
pop
lret
jecxz
and
leave
repz
or
push
in
jecxz
push
gs
push
add
mov
bound
add
cltd
inc
dec
sub
sbb
lret
repnz
dec
cwtl
mov
std
out
ret
dec
push
mov
fs
mov
xlat
or
jne
movsl
pop
mov
cmpsl
roll
fdivs
mov
in
psubsw
pop
cld
jb
mov
in
add
sub
dec
inc
or
inc
aad
shr
pop
jmp
repnz
jb
cltd
ret
pop
push
sub
scas
push
push
mov
push
adc
xlat
push
xor
xor
cli
mov
jbe
dec
in
scas
gs
jl
push
add
push
lds
shll
xchg
sub
adc
push
dec
pusha
xchg
pusha
pop
xchg
rcrb
call
rorl
fadds
sbb
int
mov
lcall
out
bound
push
adc
data16
nop
into
fcmovnb
mov
into
mov
adc
push
outsb
movsl
pop
sarl
adc
js
mov
push
mov
leave
xor
mov
inc
push
in
lods
push
pop
mov
outsb
sub
cmp
sbb
es
scas
pop
in
cmp
xor
xchg
mov
pop
sub
push
out
pop
notb
or
dec
mov
aad
cmp
inc
and
leave
cwtl
mov
nop
imul
xorl
pop
sbb
loopne
jae
addb
dec
mov
dec
xor
leave
loop
mov
in
pushf
inc
push
unpcklps
cwtl
das
push
fisubrs
dec
pop
xor
shlb
xchg
dec
xchg
mov
rcrl
aas
and
push
mov
pop
push
fdivrl
or
jns
in
sti
jo
mov
outsl
outsl
add
ja
pop
add
fcompl
shll
push
lods
cmp
repnz
std
or
in
lods
adc
push
jne
cmp
jge,pn
jle
js
xor
dec
xor
xor
jb
cli
add
push
test
pop
cwtl
sbb
dec
cli
shl
addl
lods
adc
js
cmp
cmp
inc
daa
aas
imul
pop
push
sub
sub
roll
fstl
test
loope
jle
bswap
rclb
pop
shlb
out
sub
jns
loop
inc
push
movsl
shlb
les
jns
sub
mov
sub
ja
mov
icebp
in
cmpsl
cltd
mov
xor
fstl
cmp
inc
inc
jbe
sbb
xchg
jo
dec
in
jnp
aaa
mov
test
mov
lods
dec
pop
ljmp
dec
test
push
cli
pop
test
push
in
jbe
sub
hlt
in
adc
lods
xor
fsubs
xchg
imul
mov
xchg
push
dec
test
dec
mov
sar
int3
sbb
xchg
mov
rcl
test
sub
mov
inc
mov
sbb
jle
and
jecxz
faddp
sub
ss
cmp
jg
das
mov
das
push
imul
int
sub
sbb
bound
jge
enter
stos
or
outsl
or
jnp
loopne
lea
test
xor
push
sbb
push
jl
mov
faddp
jae
ficomps
daa
mov
enter
pop
in
or
pop
aaa
xchg
jo
lret
sub
mov
jge
insl
negb
shll
sub
push
mov
sbb
movsb
cmc
xchg
push
add
cmp
pop
or
mov
inc
lret
rcrl
add
ret
xchg
daa
jg
stos
and
lods
cmp
cmc
idivl
stc
subl
cltd
in
or
dec
mov
aaa
ficoml
andl
xchg
push
movl
movsl
xchg
aaa
push
mov
mov
lds
in
ret
add
fwait
jge
aam
shl
xchg
cmp
inc
in
outsw
ret
jno
lea
or
aam
clc
push
cltd
lahf
adcb
pop
nop
jae
mov
dec
fistpll
incl
adc
loop
fsubl
les
jp
dec
call
xchg
add
mov
push
je
mov
adc
imul
leave
mov
jmp
test
jbe
pop
fwait
out
pop
inc
mov
cltd
mov
outsl
push
sub
jnp
or
ficompl
adcb
cmp
mov
cmp
push
std
xor
es
shll
push
mov
sti
shrl
ljmp
pop
jmp
mov
add
inc
leave
sbb
das
mov
iret
inc
dec
cmp
xor
xlat
add
movsb
lcall
ja
cs
scas
push
iret
mov
jno
mov
test
add
or
mov
inc
mov
int3
pop
data16
das
push
inc
stos
in
jb
rcrb
mov
leave
loop
push
dec
pop
push
test
adc
push
pushf
subl
xor
add
and
mov
mov
dec
rcl
bound
aaa
aam
mov
xchg
fisubl
ficoms
fidivrs
mov
shll
js
jp
or
shlb
xor
fistpl
adc
test
cmp
lret
hlt
ret
cld
inc
ja
repnz
inc
jns
ret
jb
cmpsb
lds
js
mov
mov
into
gs
sub
push
inc
mov
sbb
mov
add
in
cli
pop
push
mov
mov
inc
lock
mov
push
in
shll
jo
xor
or
cli
fistpl
adc
in
sti
sahf
jmp
mov
lock
and
pushf
das
mov
xor
sti
fdivl
aad
mov
sbb
push
inc
mull
cli
pusha
push
pushl
cmp
aaa
xchg
loopne
push
cmp
adc
je
and
movzwl
fdivrs
mov
loope
pop
clc
mov
lds
mov
inc
sarb
int3
xchg
xlat
inc
dec
sub
jge
cmp
mov
nop
stos
cmp
jmp
push
fcomps
pusha
pop
fdivs
or
jmp
jnp
mov
movsl
mov
fisttpll
cmp
test
ss
mov
sbb
sbb
sbb
bound
mov
inc
aas
int
pop
insl
mov
dec
std
inc
std
fsubrl
ret
sti
bound
mov
std
push
pusha
sub
loopne
neg
into
int
adc
divb
adc
jecxz
xor
std
or
popf
ja
leave
in
xor
and
stos
add
pop
mov
pop
inc
cmp
sub
pop
adc
in
push
jae
adc
pop
dec
iret
xchg
mov
mov
mov
cmp
sub
daa
xchg
and
cmp
jns
sub
andb
mov
sub
mov
jmp
ss
pop
dec
push
pop
adc
test
xor
or
mov
out
push
cmp
sub
mov
cltd
mov
and
add
add
dec
fwait
cmp
test
rcrb
scas
push
inc
jnp
int
push
rcl
das
fcmove
push
jmp
inc
loop
cmc
ret
call
xor
pop
adcl
push
hlt
loope
lea
pop
div
ss
xor
push
xor
lods
inc
std
cmp
test
and
dec
dec
xlat
cltd
or
and
mov
inc
cmp
jmp
and
mov
and
enter
sub
push
outsb
outsl
in
loopne
xchg
outsl
cmp
mov
mov
cmp
add
clc
cli
lods
cwtl
leave
cmpsb
jne
ja
fistl
out
outsl
out
mov
and
test
mov
xor
icebp
rcl
sub
sub
clc
push
push
dec
or
inc
test
cmp
push
repnz
pop
jecxz
repnz
and
jb,pn
adc
inc
jecxz
fnsave
xor
in
cmpsb
push
aam
hlt
je
pop
and
faddl
insl
inc
mov
imul
inc
adc
mov
inc
inc
or
ljmp
mov
int3
fnstsw
or
ljmp
insb
ljmp
fldenv
push
js
into
cmp
scas
pop
inc
mov
dec
or
adc
popa
ja
gs
repz
lret
mov
xchg
mov
jns,pn
mov
push
aad
dec
enter
push
xchg
pop
stos
leave
mov
mov
shll
je
sbb
repz
fs
je
icebp
jo
xchg
cwtl
jb
dec
out
inc
lock
shld
std
adc
in
push
imul
mov
xor
inc
wbinvd
lahf
or
jmp
loopne
jns
out
sbb
or
pushf
les
push
pusha
cmp
cmc
jne
mov
int
out
xlat
dec
pop
out
jmp
fisttps
or
loopne
loop
orl
add
mov
adc
xor
scas
pop
jmp
mov
adc
inc
jno
test
movsb
enter
push
sahf
push
arpl
pop
ljmp
cmpsb
mov
push
mov
xchg
fistpl
orb
shrl
ds
mov
add
sbbb
stc
mov
in
shrl
lcall
lcall
cmpsb
mov
xchg
adcl
lret
cmp
jge
sub
sbb
push
sub
sarb
add
mov
negl
rcrb
xor
imull
adc
xchg
js
mov
rcll
mov
xlat
push
sar
in
scas
sub
iret
push
sbb
adc
sub
jbe
mov
hlt
pop
dec
adc
ja
jnp
xor
test
mov
xchg
gs
enter
xchg
xor
mov
fsub
xor
sbb
xor
enter
mov
push
aam
mov
arpl
mov
into
push
in
sbb
jno
lds
loop
mov
sub
dec
movsb
xchg
shlb
and
lea
sahf
shrb
shrb
mov
orl
adc
fldt
mov
sbb
icebp
or
mov
dec
mov
add
sub
mulb
pop
dec
in
mov
inc
sti
push
dec
mov
lret
inc
dec
jp
xchg
lds
mov
mov
adc
test
sbb
xchg
cmp
loopne
pop
mov
je
push
add
ret
xor
lds
jo
mov
imul
popf
cmp
les
aad
incb
adc
pusha
mov
adc
and
or
and
mov
ret
xor
mov
in
fidivs
jnp
push
mov
inc
xchg
or
stc
inc
sarl
test
xchg
sub
xchg
and
xchg
dec
pushl
mov
fmull
into
ss
mov
adc
aam
aaa
mov
insb
mov
mov
mov
int3
icebp
rcl
pop
cmp
je
scas
test
cmp
pop
dec
pop
push
jne
cmp
jmp
hlt
xlat
jmp
data16
shl
psllq
inc
popa
sbb
les
adc
mov
push
mov
jmp
and
sub
jae
div
pop
cmp
push
incl
jmp
pop
or
lods
fs
inc
add
cli
xor
dec
push
dec
or
and
dec
cltd
scas
xlat
add
test
roll
dec
sub
cmp
lret
in
adcl
out
in
pop
jnp
xchg
inc
scas
decb
fs
xor
incb
enter
sbb
js
add
aaa
and
cmp
add
repnz
mov
cmp
sbb
ds
push
aad
loopne
test
add
imul
iret
add
jmp
inc
mov
add
push
cmpsl
in
jge
xchg
jbe
dec
inc
jo
sub
adc
jae
ret
pop
xor
or
fwait
pop
aas
fisttps
add
pop
and
adc
mov
nop
jnp
cld
cmpsb
in
icebp
test
rcrl
pop
add
into
imul
icebp
cmp
pop
push
cli
sti
xor
in
popf
sbbb
mov
pop
pop
dec
push
pusha
lahf
sub
adc
or
call
xor
imul
int
dec
and
xchg
repz
lahf
dec
jo
pop
jmp
out
sarl
or
nop
hlt
xchg
jno
cmp
out
pop
in
sbb
sub
lea
adc
or
test
mov
call
jnp
inc
mov
xor
mov
push
add
inc
dec
mov
jne
sysexit
inc
lret
loopne
cld
lret
movsl
jmp
sub
and
push
adc
and
mov
cmp
jp
xor
js
or
xchg
pop
cmc
mov
push
ljmp
fwait
cmp
and
rclb
lock
push
repz
stos
or
das
jp
push
clc
cmp
or
push
cmp
push
rcrb
ficompl
subb
jb
mov
in
lret
shlb
cvtps2pi
popa
sub
adc
es
outsl
insb
movsb
in
rcl
mov
loope
inc
adc
push
lea
dec
jne
in
jnp
mov
mov
mov
shlb
mov
xor
ret
insb
xchg
jmp
adc
cmp
or
pusha
push
xor
ljmp
cmp
jbe
cmp
add
add
xchg
fs
and
mov
daa
push
inc
rclb
out
cmp
ja
in
repnz
ja
add
inc
sbb
push
repz
loopne
and
iret
dec
mov
out
mov
rorb
add
fdivrs
adc
test
fwait
xchg
popl
mov
insb
and
xchg
test
stos
pop
xchg
pop
jecxz
in
test
sti
mov
jno
xchg
add
dec
push
fcomps
mov
shll
push
bound
mov
mov
mov
mov
fcomp
cmp
push
inc
jecxz
dec
mov
adc
fidivs
push
aaa
mov
pop
sbb
repnz
js
mov
push
xor
jecxz
adc
sub
jbe
mov
push
push
insl
aaa
pop
je
imul
pushf
testl
fxch
rcrl
mov
mov
nop
mov
or
loopne
xlat
pop
cli
ret
sarb
xlat
cmp
sbb
dec
push
mov
int3
sbb
es
push
pop
hlt
or
in
fsubrs
popf
jb,pn
dec
sbb
scas
mov
push
pusha
ljmp
pop
out
addr16
dec
cmp
ss
aaa
lahf
loope
mov
and
push
pop
adc
push
mov
xchg
or
or
fstl
into
push
lock
ret
cmp
dec
in
mov
jmp
cwtl
lahf
xor
imull
lret
icebp
fmul
ss
or
rcrb
add
jne
xchg
aaa
imul
dec
ror
dec
mov
std
cmp
sar
out
mov
cmc
mov
cwtl
cmp
nop
pushf
mov
adc
iret
daa
push
mov
stc
xor
add
push
sbb
dec
jl
push
pop
ja
xor
dec
xchg
loope
add
add
enter
pop
sub
push
dec
push
lahf
imul
sub
lahf
mov
dec
sub
or
arpl
mov
cmp
popf
xchg
cwtl
scas
iret
sub
xlat
sbb
jne
ja
sub
push
js
cltd
add
cmp
cmpsb
cli
inc
mov
inc
inc
push
incl
dec
iret
out
sti
mov
xor
cltd
imul
iret
pop
push
lock
sub
insb
or
ja
push
jb
imul
mov
jecxz
mov
movsl
fldt
mov
aam
cmc
jle
lods
sub
and
pop
das
jmp
mov
xchg
xor
xor
jbe
std
dec
and
out
jmp
nop
mov
dec
lds
loopne
mov
cmc
stc
test
out
sub
push
and
test
inc
aam
jmp
add
fsubrl
push
lds
in
mov
cmpb
mov
sub
xor
jge
sub
negb
push
aaa
xor
aad
inc
fstpt
mov
loope
cmp
dec
sbb
clc
lods
pop
pop
or
lods
mov
sbb
push
insl
shr
jmp
cmp
test
int3
mov
mov
lea
int3
mov
cmc
jo
mov
dec
mov
xchg
mov
fadds
aam
sar
adc
adc
mov
add
jmp
movsl
jmp
fwait
mov
lock
mov
mov
inc
and
addr16
sbb
xor
andb
data16
ljmp
data16
jne
movb
insl
stos
jne
jb
aaa
in
sub
add
jge
jo
cmc
lea
jle
sahf
adc
add
cmpsl
daa
scas
cmp
in
repz
dec
mov
jle
fsubr
xchg
pop
mov
mov
cli
adc
adc
pop
mov
mov
jecxz
out
push
mov
jmp
or
fisttpl
xor
pop
movsb
adc
cmpl
mov
movsl
cmpsb
push
push
xor
mov
fwait
ljmp
adc
out
dec
cmp
jmp
sbb
ja
ljmp
out
aas
inc
fdivrs
cmp
in
addr16
sbb
jbe
push
icebp
out
shl
imul
cwtl
adc
aam
fwait
test
gs
mov
in
mov
fidivrl
jg
sub
loopne
fcmovbe
and
or
loope
jns
push
mov
cmp
and
sub
jp
out
divl
fs
pop
or
push
icebp
gs
jo
and
in
in
and
dec
inc
cmp
sahf
dec
adc
popf
jno
jl
inc
inc
test
ds
daa
xchg
sti
add
mov
loope
es
in
jmp
fstps
mov
insb
test
sub
mov
shr
adc
pop
loop
std
in
mov
mov
inc
sub
frstor
and
push
xlat
adc
and
jo
mov
or
nop
cmp
test
pushf
mov
and
lret
fldl
loop
in
dec
add
mov
mov
rclb
add
les
adc
add
sbbl
popa
int
adc
popa
jle
xchg
mov
std
int
inc
in
push
les
pop
inc
mov
pop
icebp
inc
sbb
push
ret
aaa
enter
xchg
out
in
inc
push
or
mov
xchg
adc
jle
jp
inc
sbb
ret
push
jbe
mov
cld
ss
mov
testl
stos
xor
mov
gs
int
push
push
or
mov
mov
cld
or
jl
xchg
xor
push
pop
movsb
mov
and
dec
jo
sub
mov
shrl
ja
insl
mov
pusha
add
loop
fimull
mov
js
addr16
cmc
mov
add
xor
push
movsb
scas
jo
pop
sbb
sbb
mov
adc
pop
or
leave
cmpsl
sarb
out
sbb
jns
fcoml
xor
fbld
lods
push
iret
aas
xchg
cmpsb
and
dec
mov
dec
push
adc
stc
inc
xchg
push
aad
inc
imull
and
xchg
jl
xor
push
outsb
xchg
subl
mov
out
jnp
arpl
test
stc
or
out
aam
sub
popa
in
arpl
xorb
outsl
jle
jb
ja
fsubs
mov
test
or
pop
out
outsb
jp
push
in
inc
mov
iret
test
fstl
outsb
or
lea
mov
and
lahf
cwtl
inc
cmpsb
xlat
cmp
inc
push
fidivl
aas
pushf
cli
lret
fistl
into
or
pop
cmp
es
dec
iret
fdivrl
loope
mov
popa
imul
mov
cwtl
mov
mov
pop
stc
and
test
cmpsb
adc
stos
addr16
mov
mov
adc
xchg
push
aad
xchg
lds
jmp
inc
push
lret
das
xchg
and
add
outsl
shrb
in
fcomip
sub
test
js
sbb
sub
loop
jns
sbb
sub
test
cld
roll
or
lods
push
push
sub
leave
mov
and
push
lock
shlb
and
adc
pusha
shlb
inc
lock
add
xor
pusha
shlb
and
adc
pusha
shlb
inc
lock
add
xor
pusha
shl
andb
xor
pusha
shlb
inc
lock
add
nop
inc
loopne
lock
shlb
and
addr16
mov
das
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
neg
out
sti
jmp
repz
fwait
mov
push
jnp
imul
mov
cmp
sub
lret
sti
jmp
fwait
cmpsb
mov
pop
sub
inc
imul
daa
or
jns
sub
lret
sti
jmp
fwait
cmpsb
mov
repz
dec
es
and
pop
push
fs
dec
outsl
sub
xchg
scas
mov
jge
or
inc
pop
cs
out
mov
xor
sbb
cmp
sbb
jmp
mov
mov
jp
out
outsb
es
imul
orl
push
je
pop
sti
flds
cmpsb
jae
inc
mov
lods
lret
xchg
les
mov
adc
lcall
xchg
mov
hlt
out
les
xor
jle
adc
lcall
ja
outsb
sbb
test
stos
or
cmpsb
lret
xor
popf
cmp
popf
out
sub
dec
xor
and
imul
push
jne
shrl
add
xor
sti
jmp
fwait
cmpsb
mov
pop
dec
push
jnp
imul
or
cmp
inc
xchg
mov
lret
nop
xchg
addb
cmc
add
push
add
and
jp
js
cmp
sbb
leave
mov
xchg
ror
ret
stos
add
add
sub
inc
add
js
pusha
jg
insb
jnp
xchg
out
nop
xchg
mov
mov
pop
dec
push
jnp
imul
or
cmp
sub
lret
sti
jmp
fwait
cmpsb
mov
pop
dec
push
jnp
imul
or
cmp
sub
fildl
lods
push
push
aaa
mov
insl
lds
sub
sub
add
setne
cmp
jmp
adc
cld
daa
sub
jnp
mov
fidivrl
inc
push
jb
in
mov
mov
test
popl
pop
nop
aas
popa
jae
out
lret
es
rorl
cmp
pop
sbb
cmpsl
js
xchg
fimull
ja
adc
mov
pop
xchg
xchg
loope
fs
imul
push
dec
shl
inc
push
jecxz
sub
out
inc
push
in
insb
dec
ss
es
pop
jmp
dec
arpl
insl
xor
dec
dec
stos
mov
adc
sub
jl
adc
ret
add
addr16
add
jg
lea
call
or
leave
test
mov
shll
or
fiaddl
or
fcoml
adc
popa
call
popa
xchg
dec
roll
test
adc
rcrl
sahf
dec
scas
sub
lahf
stos
mov
sub
out
js
inc
push
mov
add
stos
je
js
in
test
xchg
imul
or
add
repz
ret
xlat
loopne
sbb
repz
inc
nop
lcall
jo
daa
jno
cmpsl
push
jno
fnsave
fbstp
jo
insb
and
hlt
and
outsb
addr16
pop
fstpt
pop
xorb
mov
pop
mov
xlat
adc
xchg
dec
push
xor
xchg
ret
inc
andl
sub
sti
push
imul
lcall
pop
and
adc
xlat
sub
pop
sbb
push
jp
into
mov
and
mov
add
cwtl
adc
xchg
nop
mov
or
ret
sbb
fimull
push
rorl
mov
mov
rorl
sub
popa
fiaddl
mov
mov
push
lock
sbb
fwait
mov
ds
sbb
int3
push
cmp
dec
imul
mov
inc
inc
pop
add
mov
mov
xchg
pusha
cs
adc
out
out
add
and
push
mov
push
inc
sub
push
aas
es
xlat
popa
fstps
xchg
jbe
cmp
sbb
sahf
push
hlt
lock
inc
imul
push
and
xchg
movl
pop
xchg
ljmp
stos
insb
lea
lods
push
decb
rolb
sub
std
into
out
dec
pop
call
in
adc
inc
mov
inc
enter
xchg
pop
in
mov
xor
mov
hlt
pop
sbb
sbb
addr16
mov
ljmp
push
or
xchg
in
aas
sub
lods
sub
dec
stos
xchg
mov
xchg
idivb
fidivrs
ret
dec
xor
xor
stos
inc
loopne
popa
dec
dec
dec
jo
fsubrp
push
xor
js
cmpsb
push
movsb
bound
aaa
push
fnstcw
sti
leave
lahf
sub
mov
nop
mov
jae
nop
xor
pop
shll
xlat
cmp
sbb
fidivrs
mov
jle
movsl
js
scas
add
dec
push
inc
mov
sbb
ret
cmp
imul
leave
popa
xchg
mov
in
sub
mov
xchg
scas
hlt
shlb
addb
xchg
push
mov
testl
scas
fcompl
push
pop
aaa
mov
stos
xorl
jp
adc
or
iret
daa
bound
add
enter
push
call
jno
or
mov
jbe
pop
dec
in
or
fwait
add
fs
mov
lock
jne
pop
pushf
imul
push
int3
mov
lea
jae
imul
pop
scas
xchg
mov
lret
mov
add
movsb
add
call
data16
sar
or
push
cmp
mov
arpl
rorl
arpl
aad
int3
mov
push
sub
and
sbb
push
mov
xor
lret
add
mov
repz
cmp
into
insl
xor
push
aad
iret
insl
cld
dec
mov
mov
pop
jno
incb
mov
push
lock
loope
inc
jmp
shrb
xchg
movsl
cmp
cmp
pop
stos
jne
int
aam
add
xchg
sub
fidivl
mov
push
movsb
xchg
jno
jmp
loopne
cld
mov
xorl
popa
aaa
mov
les
mov
mov
xor
push
mov
cmpsb
or
pop
push
mov
pushf
cmp
popa
cmpsl
push
cwtl
leave
xor
jne
sbbb
test
pusha
rolb
xchg
ja
stc
lock
scas
insl
dec
stos
mov
in
mov
cmpsb
in
pop
fisttpl
test
std
jecxz
pop
dec
stos
cmc
pushf
mov
mov
lahf
lcall
out
inc
or
mov
iret
imul
loopne
push
out
cmp
sbb
sar
xor
mov
dec
leave
call
and
jmp
mov
and
sbb
sbb
in
js
xchg
repz
xchg
out
ret
pop
pop
push
std
adc
cmpsb
jecxz
in
jno
jae
mov
cmpsb
jns
gs
mov
adc
sbb
into
inc
inc
xchg
andl
fnstenv
adcb
lret
ds
lret
sub
insb
add
inc
cld
loopne
xor
ret
cmc
insb
mov
add
push
mov
inc
fs
mov
adc
mov
stc
out
xor
mov
jno
xor
testl
pusha
xor
lea
xor
neg
adc
ljmp
jp
mov
or
mov
push
out
hlt
cmp
adc
movsl
mov
add
out
push
std
adc
or
cmp
lcall
dec
adc
jb
add
push
mov
aad
push
mov
fistps
cmc
jp
sub
inc
aas
mov
adc
mov
or
imull
pop
roll
out
cmp
and
mov
loope
stos
shlb
dec
sbb
mov
fmul
outsl
les
push
aas
mov
pop
cmpsl
jnp
pop
add
rorb
dec
imul
mov
dec
push
push
fcmovnu
mov
stc
cmp
repz
insb
loopne
ja
add
xchg
fsubs
sub
mov
xchg
xchg
push
insl
sub
mov
dec
das
stos
xor
xorl
jmp
loop
push
add
addb
add
jbe
cmp
adc
add
pushf
test
test
call
les
aaa
push
jnp
xor
sarb
and
mov
dec
out
jbe
ret
push
push
mov
mov
jg
out
outsb
sbbl
les
fistpll
or
xchg
hlt
lea
xlat
jno
xorl
mov
push
shlb
cmpsl
stos
xchg
add
mov
test
in
mov
cmpsb
dec
sbb
out
mov
add
inc
lret
fsts
nop
push
cmp
sbb
add
sbb
push
insb
and
push
cmc
fidivl
bswap
and
mov
fwait
dec
push
mov
cmpsl
aas
pop
jbe
into
jp
sub
or
cltd
sub
test
sub
js
inc
xor
jb
jbe
pop
in
adc
xor
cmp
aam
cmpsl
mov
adcb
xchg
cltd
xchg
add
sbb
lock
aas
jae
mov
hlt
out
outsb
fucomp
push
xchg
dec
mov
push
mov
sub
inc
sti
in
sahf
lret
inc
lea
mov
jp
jae
in
jnp
or
movsb
pop
sbb
jae
sub
xor
sbb
sbb
mov
call
stc
filds
cmp
pop
jne
outsb
push
dec
rol
scas
sbb
jp
fs
ret
mov
push
cmp
out
lahf
insl
insl
jmp
pop
lret
mov
xchg
pop
jbe
insl
mov
push
xchg
add
das
xor
mov
pop
stos
push
sub
xchg
mov
test
sbb
xor
leave
adc
add
sub
fstpl
xchg
test
cli
mov
aam
add
data16
cmpsl
scas
cmpsl
pushf
loopne
les
in
insl
dec
movsb
pop
je
pop
mov
bound
add
push
push
and
in
xor
xchg
fistpl
in
stc
sahf
sbb
sub
mov
cli
mov
sbb
stos
int
mov
call
xchg
mov
cmpsl
roll
inc
lds
lret
jae
lods
jge
mov
sbb
and
pop
mov
mov
or
out
shlb
sti
stos
ljmp
mov
lahf
mov
test
xor
cmp
icebp
addl
jb
pop
adc
loopne
mov
pop
or
out
add
lahf
mov
sahf
repnz
fistpll
in
pop
in
cs
jno
out
cmpsb
pop
clc
and
inc
sub
cmpsl
fisubrs
inc
mov
or
lcall
dec
pop
cmp
imul
inc
dec
outsl
enter
pop
mov
or
push
movsl
lock
lock
mov
decb
cmp
ja
mov
das
mov
push
incb
arpl
sub
cld
and
imul
fwait
and
ljmp
xor
imul
pop
xor
xor
mov
insl
cmp
inc
addr16
mov
out
mov
sbb
das
sbb
cmp
pop
aas
jge
or
pop
sahf
push
mov
sti
dec
mov
movsb
xor
cs
lret
jmp
sub
insl
push
xor
push
xor
shll
cmp
mov
arpl
out
mov
cltd
jb
inc
pop
in
nop
dec
test
int
out
add
bound
in
sbb
bound
add
xor
sbb
bound
inc
sbb
pushf
xor
rcrb
inc
outsb
imul
xchg
and
xor
pop
pop
mov
loopne
test
fbld
loope
mov
lcall
push
sub
pop
add
scas
out
jne
das
jnp
sti
into
and
mov
mov
fisubs
out
and
sbb
scas
cmpsl
jmp
shlw
ljmp
test
lods
lret
fildl
in
pop
mov
or
ret
cmp
sbb
loope
sbb
and
mov
lock
jle
jnp
inc
aam
mov
push
stos
fwait
push
out
daa
xor
gs
fstl
out
cmp
sub
xor
mov
cmpsb
pop
out
call
pop
lods
or
mov
or
fs
in
or
lcall
xchg
or
mov
ret
sub
rolb
adc
lock
mov
or
mov
negb
add
or
imul
cs
inc
dec
push
and
loop
cli
inc
inc
out
fsubrp
pushf
mov
sub
mov
aaa
lcall
sbb
sub
stos
jmp
pop
mov
cmp
popf
add
mov
cmp
loop
mov
scas
rolb
inc
and
xor
inc
out
mov
hlt
lods
js
leave
ljmp
loopne
adc
into
mov
addr16
mov
jge
test
mov
mov
add
mov
out
cmp
arpl
and
lods
push
pusha
ja
push
shrl
insl
sub
xor
fs
jns
add
in
push
cmp
jno
test
mov
jle
lcall
pop
movsb
cltd
sarb
jb
sub
xchg
push
int
jne
add
icebp
or
sbb
push
loop
pop
jp
xchg
xor
push
idivl
mov
insl
add
mov
and
adc
xor
data16
in
imul
add
pusha
imul
sub
jo
inc
push
xchg
cwtl
sub
mov
je
adc
lret
into
xchg
js
adc
es
push
dec
les
mov
xchg
ljmp
fdivrl
dec
inc
dec
mov
xor
sub
jg
push
fiaddl
xchg
int
pusha
jne
sahf
aaa
sbb
add
mov
lods
xor
push
xchg
bound
jp
sbb
fidivs
fidivl
mov
dec
push
ret
outsl
fwait
xchg
push
adc
cmp
mov
and
iret
mov
add
mov
jle
xchg
or
scas
ljmp
repz
or
or
and
sbb
das
stc
dec
add
mov
cld
repz
shll
push
mov
jnp
xor
sar
jmp
mov
mov
add
addl
out
jp
adc
mov
jecxz
mov
dec
ficoms
xchg
andb
lods
push
and
ret
xchg
scas
xchg
jge
mov
push
push
mov
fbld
mov
push
pop
pop
insl
mov
dec
mov
repnz
jae
push
test
xchg
cmp
jne
popa
jae
jl
hlt
adc
push
ja
adc
cmpsb
or
mov
jp
ja
aad
jecxz
dec
dec
sub
push
leave
xor
mov
test
mov
ret
test
sbb
mov
arpl
jae
aad
fadd
xorb
push
jl
ljmp
xchg
or
icebp
mov
or
push
inc
xchg
jge
cmp
insb
fimull
pushf
lcall
rcrb
jne
adc
ret
lcall
pop
rcrl
ss
mov
xadd
dec
mov
popa
and
fmuls
and
mov
dec
cmpsl
mov
mov
data16
icebp
or
jmp
jecxz
inc
add
cmpsb
dec
jbe
sbb
push
mov
jg
or
push
fadd
dec
mov
call
arpl
insb
mov
into
jbe
adc
xchg
aad
std
in
adc
xchg
sbb
adc
add
xor
setno
jge
adc
fstps
xchg
xorl
dec
sub
fimull
jae
imul
lcall
out
imul
enter
faddl
outsl
call
movsl
add
sbb
pop
xor
xchg
cmpsl
push
lock
jle
gs
std
jne
stc
popf
ds
mov
imul
decb
js
push
das
mov
lods
jmp
or
xor
aad
stc
xor
jno
gs
jns
xlat
push
int3
and
aad
shrb
mov
push
fwait
bound
ljmp
and
shlb
aas
subb
xchg
rorb
add
in
daa
inc
lods
fiadds
movsb
dec
sbb
out
fwait
push
dec
add
push
add
shll
test
jmp
push
mul
movl
dec
imul
add
adc
enter
decl
jge
jns
mov
add
jae
mov
pop
xor
pop
in
jno
add
jne
push
insl
fnstsw
mov
or
push
xlat
sbbl
xor
outsl
les
mov
rclb
push
movsb
loop
rclb
fsubr
cmp
popf
pop
ret
imul
ja
jne
aaa
dec
push
adc
xor
iret
shlb
xchg
adc
pop
sahf
inc
push
push
add
cmp
cltd
jmp
ja
call
aaa
aad
test
cmpsl
test
sub
shll
mov
fdivl
sub
out
je
sbb
inc
cs
adc
movsb
sub
clc
jae
adc
jae
mov
test
mov
xchg
jns
ficompl
mov
sub
inc
mov
cmp
leave
dec
adc
ljmp
and
jmp
mov
out
inc
dec
loope
xorl
mov
jae
cld
xchg
and
daa
divb
mov
xchg
sbb
xchg
or
and
rclb
cmc
jae
ljmp
add
mov
pop
inc
inc
shrl
inc
cwtl
repnz
stos
push
loop
sbb
pop
cmpsb
rcl
fidivrl
mov
jg
gs
jge
or
jo
test
pop
add
testl
xchg
shlb
shrb
and
adcl
jmp
int
pop
stos
ffree
aam
sub
inc
cmpsl
loope
xor
add
and
fs
int
push
pop
adc
and
roll
jle
dec
call
xor
jnp
dec
xchg
jnp
push
test
popa
repnz
insl
sub
aas
aas
inc
jecxz
cld
adc
movsl
movsl
aad
stos
and
jo
inc
xor
fisubs
mov
cmp
mov
lret
add
or
and
and
xchg
xchg
pop
cmp
ret
mov
movsl
inc
cmp
pushf
xchg
xor
add
sbb
mov
fmuls
ret
or
cli
fcoms
sub
int
xor
jecxz
mov
dec
or
rcrl
or
jo
mov
push
nop
inc
adc
ss
push
mov
push
stos
dec
jp
xlat
jg
mov
stos
mov
inc
dec
inc
sub
mov
out
xor
stc
sub
add
pushf
xchg
in
and
mov
mov
push
ficomps
int
mov
cmp
mov
pushf
or
xor
or
mov
popa
aad
and
mov
cmp
sbb
iret
cmc
adc
xor
and
out
icebp
pushaw
xor
pop
or
mov
ljmp
xor
inc
mov
mov
cmc
dec
rcr
dec
adc
out
sub
js
mov
add
push
mov
cmp
bound
add
insb
xchg
arpl
push
dec
cmp
inc
pop
add
mov
sbb
rclb
or
sub
inc
fsubrs
mov
xchg
pop
stos
and
dec
rorb
test
aam
mov
leave
push
outsl
aam
aaa
ja
mov
aaa
fisubrs
pop
push
sbb
lods
xchg
jne
pusha
jno
insl
mov
xchg
stos
lock
mov
xor
ret
sti
jno
xchg
dec
dec
call
jmp
pop
sar
in
rorb
inc
pop
xchg
jae
mov
push
mov
mov
mov
scas
test
sub
jle
pop
and
xor
dec
mov
pop
pushl
add
mov
popf
insl
dec
cld
and
inc
call
push
jle
xchg
ret
subb
mov
addr16
js
inc
cmpl
push
iret
mov
dec
jo
xchg
or
pop
test
push
inc
xor
ret
jnp
aam
cmp
dec
aas
add
inc
jb
notb
mov
push
mov
insb
je
jae
or
test
icebp
mov
adc
scas
scas
mov
std
mov
scas
cmc
and
call
xlat
test
test
push
shlb
xchg
je
ss
dec
push
and
pop
shr
scas
mov
insl
roll
fdivrl
sti
dec
into
popa
jg
add
sti
jno
insb
mov
sub
cli
push
xchg
stc
lock
test
xchg
stc
sub
loopne
push
adc
enter
pop
in
xchg
mov
jg
xchg
push
hlt
sub
jl
sbb
lods
adc
addr16
mov
pop
xchg
cmp
mov
sahf
sub
inc
xlat
cwtl
push
pop
arpl
and
sbb
pusha
xchg
pop
rcl
mov
mov
adc
sub
xlat
adc
or
lret
icebp
push
mov
xchg
insb
outsb
stos
mov
lcall
cmp
jb
ret
sub
shlb
mov
inc
pop
mov
or
imul
cmp
inc
in
lea
sti
in
add
mov
aam
jge
fwait
movsb
mov
hlt
xchg
out
lods
std
cmp
sbbl
out
sub
std
push
cmpsl
lds
mov
imul
adc
jmp
pop
stos
xor
sub
xchg
inc
push
cli
adc
jle
sub
cmp
mov
filds
mov
mov
lret
rorb
out
into
nop
fimuls
ror
cmpsl
inc
jns
stos
fs
das
push
insb
push
out
std
inc
mov
bound
call
das
sub
ret
pop
xor
mov
sbb
pop
lret
jmp
fwait
cmpsb
mov
pop
dec
push
jnp
imul
or
cmp
sub
lret
sti
jmp
fwait
cmpsb
mov
pop
dec
push
jnp
imul
or
cmp
sub
dec
jnp
jmp
fwait
cmpsl
or
push
jnp
imul
or
cmp
sub
lret
sti
jmp
fwait
cmpsb
mov
mov
cltd
loope
jnp
sbb
xchg
scas
hlt
out
aam
xor
push
add
jno
cmpsl
jne
stos
shlb
or
rcll
and
push
add
jno
popa
add
outsl
call
cltd
adc
adc
sarl
out
mov
cmp
sub
pop
add
subb
incl
adc
pusha
push
inc
cmp
sub
cwtl
xor
jmp
sbb
or
sarl
push
sub
mov
popf
mov
jmp
inc
gs
in
int
repnz
fstpt
cmp
in
mov
out
pop
jb
or
icebp
insb
popf
xor
loopne
or
jg
add
sbb
mov
bound
mov
gs
push
ljmp
inc
ret
andb
loope
ret
mov
sbb
es
jb
repnz
adc
or
jno
fwait
mov
jb
jb
or
ds
inc
sbb
inc
shr
bound
xchg
stos
mov
gs
add
jno
popa
add
sar
mov
or
xchg
lret
mov
or
repz
pop
dec
daa
jge
insl
inc
aam
or
and
push
xchg
repnz
mov
mov
movsl
imull
daa
bound
push
and
cmp
loopne
repnz
ret
cmpsl
mov
mov
xchg
mov
inc
inc
shll
push
insl
pop
cmp
adc
mov
mov
mov
rcll
and
push
add
jno
popa
add
inc
loop
repnz
mov
rcll
ja
insb
cmp
or
clc
dec
jle
incb
adc
sub
clc
jle
pop
push
ret
les
jl
shll
mov
repnz
jecxz
xor
fsubl
je
mov
mov
stos
jbe
fdivl
xchg
lods
outsb
rcll
jns
gs
lret
aam
cmp
xorl
xchg
jl
mov
xor
js
sub
lds
pop
xor
and
lods
pusha
or
mov
scas
dec
out
addr16
adc
and
movsl
cmp
repz
jbe
enter
adc
fcmovnu
cli
adc
es
mov
cmc
jbe
sub
adc
xor
ret
or
mov
xchg
int3
fcomps
fldcw
or
ljmp
icebp
mov
sub
dec
jne
scas
adc
shll
aas
jnp
stc
push
sub
movsb
or
daa
sti
data16
pop
int
scas
movsl
dec
push
ret
fisubl
fs
jge
jle
mov
cmp
movsl
jl
insb
insl
or
or
ja
xchg
ss
pop
add
test
xor
iret
nop
jne
enter
lock
mov
gs
inc
out
scas
cmp
test
lcall
and
daa
stos
cmpb
cmp
mov
out
loop
jle
mov
cmp
sub
sbb
sub
cmpsl
mov
jl
jno
pop
imul
test
outsb
push
lock
mov
and
lahf
adc
xor
loop
dec
fcmove
and
ret
push
dec
iret
sbbl
push
pop
cwtl
add
and
movsl
xor
xchg
xchg
outsb
andl
cltd
xchg
clc
sub
fsubs
xchg
in
fistpl
push
data16
xorl
sub
stos
mov
mov
mov
nopl
arpl
pusha
push
xorl
and
lcall
adc
dec
cld
pop
mul
or
icebp
push
repnz
mov
mov
pop
push
cld
movsb
stos
cmp
add
xchg
and
fbld
pop
js
cmp
mov
sbb
cli
xchg
dec
daa
cwtl
mov
lret
mov
push
or
add
jne
inc
and
or
mov
addr16
dec
rclb
mov
in
adc
jbe
imul
or
gs
dec
sub
mov
push
push
push
sbb
jne
repnz
inc
xlat
loope
push
add
jo
sahf
je
les
sbb
cmp
loope
test
mov
pop
aam
fistl
adc
or
push
iret
sub
inc
jl
notb
loop
movsl
mov
popa
jecxz
inc
xchg
push
mov
inc
mov
mov
pusha
cs
push
adc
fs
pop
jne
loope
xor
or
mov
mov
cmc
mov
sbb
popf
sti
mov
push
push
std
aaa
lea
push
mov
xchg
int
loope
popf
stos
sarb
adc
addl
push
cmp
ss
mov
push
mov
setns
jge
sti
jl
xor
adc
ja
mov
sahf
sahf
xchg
jmp
add
mov
lods
ja
mov
xor
cmp
test
movsl
lods
jp
mov
add
cli
jnp
outsb
or
ret
sahf
cld
je
lret
inc
adc
jge
adc
xor
les
mov
fadds
cld
lock
push
xor
jmp
xlat
cvtpi2ps
imul
js
aas
xchg
mov
push
ret
rorl
dec
dec
jecxz
sub
jl
jle
mov
add
jne
jge
in
rcll
in
testl
sbb
into
cmpsl
ss
clc
movsb
mov
icebp
loope
pop
pop
pop
out
loopne
fnstenv
in
push
clc
jne
es
and
mov
cmpsb
mov
push
jle
loopne
loope
andb
mov
loop
fstpl
push
cs
lods
mov
clc
ljmp
mov
call
mov
arpl
push
sbb
add
mov
add
fcmove
sbb
mov
test
shr
cli
cmpsb
cli
pop
cli
jns
jbe
sub
push
xchg
or
loop
push
out
clc
mov
mov
fistl
inc
adcl
fildl
aaa
int3
jl
aam
sbb
lahf
sbb
rorb
pop
rcll
and
gs
dec
mov
or
repz
cmpsl
xchg
imul
mov
dec
fwait
jl
inc
int3
popa
jb
test
sub
lods
pop
stc
scas
fwait
xchg
cmp
dec
jmp
test
mov
push
jle
push
lods
scas
mov
inc
push
and
ds
pusha
out
jb
lahf
pop
mov
lock
push
xchg
adc
xor
mov
jmp
push
in
call
icebp
push
mov
jns
inc
or
jae
or
jmp
jbe
or
mov
dec
push
test
xor
xchg
pushf
adc
inc
bound
add
mov
mov
sar
sub
dec
mov
dec
les
xchg
lods
std
movsb
xchg
cmpsl
push
lcall
mov
shlb
sbb
fidivl
cmp
push
insl
stos
push
sub
and
int
nop
fwait
scas
adc
arpl
shll
aas
adc
subl
nop
cmp
in
into
ret
stc
repz
inc
cmpl
fld
mov
ret
inc
out
cmp
xlat
push
out
cmp
cmp
mov
ret
ljmp
inc
stos
test
pop
mov
aas
mov
fdivrl
mov
int3
cmp
or
das
jns
mov
dec
fbld
sub
and
push
push
push
inc
in
lret
jo
xor
shrb
fwait
ds
inc
lods
sub
daa
mov
cltd
fisubl
pop
inc
fidivrl
sbb
push
scas
xorps
pushw
nop
loop
shll
test
in
xchg
xchg
sub
push
mov
test
mov
cmc
shr
arpl
xchg
xor
in
cmpsb
fsqrt
arpl
les
mov
and
sar
lahf
and
cmc
pushf
mov
lcallw
inc
adc
mov
jle
push
pop
add
ret
movsb
mov
out
add
lret
bound
ljmp
sar
and
out
inc
jp
jne
or
stc
lock
pop
inc
mov
ss
in
xchg
adc
insl
jno
jae
xchg
movswl
sub
dec
cli
dec
sbb
test
mov
insl
mov
mov
fisttps
pusha
sarb
sbb
pop
add
jo
pop
ja
jnp
mov
sub
test
dec
out
dec
adc
test
xor
push
dec
xchg
daa
test
jge
push
pop
dec
jmp
mov
mov
mov
insl
insb
cs
xchg
and
fimuls
pop
test
jle
shll
pop
inc
shrl
or
in
jbe
int3
push
les
cmp
pushl
cld
jne
mov
mov
and
pop
sti
frstor
int3
push
fdivrs
inc
push
mov
inc
jns
push
js
inc
add
shll
or
lea
push
xor
or
jg
add
inc
repz
int3
or
add
sub
or
lretw
push
shlb
ss
jmp
iret
sti
repz
xor
mov
je
push
cmpsl
adc
cmc
loopne
sub
sbb
mov
lock
test
leave
bnd
adc
cmp
cmp
sbb
in
shll
sbb
in
lcall
cmpsl
aas
stos
stc
test
stc
outsb
test
cmc
cmp
int3
stos
mov
icebp
lock
pop
add
xchg
or
call
adc
aas
ret
lock
mov
scas
add
adc
add
cmp
int3
and
adc
dec
es
or
mov
mov
jbe
pop
dec
pushf
rclb
jae
rol
imul
mov
mov
lret
or
loop
or
icebp
jmp
pop
pop
mov
push
mov
faddp
mov
fwait
sarb
jmp
test
jecxz
orl
dec
shlb
dec
stos
lods
adc
ss
mov
xchg
adc
js
xor
sub
ret
repnz
lcall
rorb
fcom
inc
jno
cld
xchg
dec
add
mov
jbe
stos
adc
mov
inc
movsl
fcompl
lahf
and
or
ret
sub
arpl
movsl
stos
xor
lea
and
inc
add
jecxz
sub
mov
arpl
pop
jb
xchg
sbb
mov
leave
stos
or
sarl
lock
mov
add
xchg
and
or
mov
mov
jno
adc
inc
cmp
mov
call
in
mov
lcall
mov
mov
xchg
add
dec
fcompl
repz
mov
ret
add
in
pop
sbb
call
push
enter
mov
movsb
inc
mov
pop
movsb
sbb
leave
xlat
xchg
push
sbb
mov
pop
test
xchg
fdivl
aas
cltd
cmc
cli
lods
push
push
in
movsb
xor
jg
xor
dec
cltd
shrl
and
pusha
sub
mov
mov
lds
cmp
xlat
rcrb
add
in
lret
imul
jo
sub
hlt
jecxz
ljmp
sub
sub
loop
outsl
mov
ljmp
xor
out
sub
mov
xchg
and
pop
or
xchg
js
popa
iret
or
fnstsw
ds
int
out
xor
pop
into
fwait
mov
mov
sub
out
in
lahf
loope
aaa
fnstcw
test
in
or
mov
hlt
sub
mov
sahf
data16
push
notl
cmp
or
rclb
insb
mov
mov
das
addr16
fidivrl
das
mov
fcomi
and
mov
mov
xor
lahf
int3
cmova
mov
jecxz
mov
icebp
dec
enter
and
xchg
cmp
iret
lahf
mov
cli
xchg
mov
xchg
mov
test
dec
mov
and
mov
testl
mov
cmp
xchg
sahf
cmp
aaa
mov
sbb
lcall
xchg
sub
jg
mov
je
mov
sbb
shrl
mov
int
mov
lds
les
imul
add
mov
loopne
adc
mov
pop
sub
pop
dec
inc
fbstp
xlat
pop
xchg
xchg
shrb
int3
sub
push
jae
or
mov
imul
testb
push
test
or
mov
push
adc
shrl
lods
test
idivb
jbe
subb
or
pop
inc
popf
sti
adc
mov
push
in
jl
mov
mov
in
cmpsl
sub
pop
inc
jno
mov
gs
jae
push
test
sahf
lds
inc
insl
sahf
mov
and
clc
mov
adc
pop
sub
dec
cmpsb
xlat
scas
pop
cmpsb
mov
mov
dec
cmpsb
out
xor
ja
loopne
add
lret
mov
xchg
fdivs
subb
bswap
subl
cmpl
lret
jecxz
mov
test
outsl
jo
mov
imul
add
aam
cs
mov
mov
outsb
pop
xorl
pop
pop
lcall
mov
inc
jae
sub
bound
std
scas
push
gs
adc
xor
fsubrs
mov
fbstp
mov
lods
cmp
jb
lret
movsl
dec
imull
cmp
sbb
loope
fisttps
fadd
addr16
xchg
xchg
sbb
adc
push
jae
lea
jge
sbb
and
cld
sub
mov
cli
jecxz
mov
jae
mov
or
mov
push
add
jle
repnz
adc
out
mov
sbb
mov
fadds
mov
or
and
cmp
mov
dec
loope
and
scas
int3
xor
cmp
loop
or
ficoms
xchg
mov
jb
inc
fistpl
in
adc
sub
mov
rorb
adc
lods
std
mov
xchg
outsl
jmp
imul
inc
fdivrs
add
in
ret
outsb
std
jae
jns
inc
mov
jbe
cwtl
adc
rcrb
fidivl
mov
insb
jb
push
movsb
jecxz
cld
mov
push
xchg
mov
adc
xchg
lea
push
jp
add
hlt
mov
fwait
loope
pop
mov
cld
sbb
or
hlt
mov
fcomps
jne
adc
in
pop
jno
xor
mov
mov
sbbb
sbb
pop
pop
dec
out
xchg
xor
xlat
dec
lods
jle
sahf
xor
iret
fmuls
lahf
jne
xor
lret
cmp
mov
lods
test
mov
lcall
mov
cmp
adc
outsl
loope
pusha
je
xchg
repnz
push
subb
cli
mov
stos
stos
int
call
stos
lahf
cmpl
or
sbb
dec
mov
mov
inc
test
sti
mov
loop
fistpl
mov
adc
xchg
stc
fdivrl
jns
adc
call
pop
adc
mov
inc
xor
fstpt
nop
ret
imul
push
enter
push
negb
pushf
lret
dec
push
lret
mov
addr16
mov
push
jae
in
int3
mov
push
jmp
dec
scas
mov
aam
mov
adc
cltd
xchg
xchg
push
faddl
rcrb
sbb
int3
ljmp
aad
aad
mov
stc
out
jp
fabs
fsub
inc
cs
sub
sbb
xchg
or
iret
cs
mov
jnp
dec
xchg
fcoml
mov
sti
in
out
pushf
repnz
push
add
pop
std
cltd
pop
test
push
cmp
xlat
pushf
aad
in
ret
adc
push
sub
lds
data16
mov
pop
push
add
cmpsb
test
inc
cmpsb
jae
pop
dec
ret
clc
adc
pop
std
lock
stos
mov
add
xchg
or
inc
mov
adc
mov
mov
dec
mov
push
sub
imul
fsubp
add
adc
lcall
mov
add
xor
cltd
repz
addl
fnsave
dec
jg
xchg
push
xor
jp
shl
loop
rcll
inc
aam
and
jmp
js
dec
sbb
sbb
dec
mov
xchg
jbe
jecxz
dec
pop
out
in
mov
lock
js
or
sti
add
mov
push
pop
sbb
jne
push
scas
std
enter
xor
dec
sti
fistps
cmp
pop
dec
and
jp
popf
cmp
aaa
or
mov
adc
ss
or
sub
pop
sbb
fidivl
mov
nop
popf
xor
scas
add
fdivrs
cmpsb
movsl
in
mov
popf
roll
cmp
repnz
sbb
jecxz
jmp
stos
mov
sbb
adc
jp
dec
leave
clc
daa
dec
adc
out
push
mov
repz
push
out
sti
jo
scas
push
sarb
jmp
aam
sbb
mov
mov
jo
mov
cltd
mov
mov
xchg
arpl
mov
pop
adc
clc
ja
stos
adc
testl
gs
idivb
in
mov
dec
push
int3
sahf
pop
out
addr16
aam
mov
dec
nop
push
fnstsw
in
pusha
iret
jmp
ret
mov
dec
mov
cmpsb
imul
mov
cmp
in
pop
mov
aas
bound
out
pop
dec
stc
out
imul
mov
jbe
imul
ret
mov
cmp
jmp
push
cli
fmull
push
add
adc
sub
mov
movsl
push
adc
mov
inc
je
push
jmp
shrl
and
jnp
add
pmuludq
inc
sub
adc
enter
dec
cmp
mov
fildll
loopne
sahf
jnp
into
mov
stos
xchg
and
jno
lods
mov
push
out
pop
mov
iret
mov
jae
inc
xorb
xor
nop
in
dec
and
imul
fbstp
pop
roll
cld
jo
lods
adc
push
xor
decl
out
lret
sub
xor
sbb
mov
jle
push
add
fldenv
push
jno
inc
mov
cwtl
xchg
leave
aas
mov
and
mov
add
insb
mov
jl
xchg
fmuls
ja
pushf
inc
leave
icebp
lret
mov
dec
sti
stos
imul
push
ds
pavgb
ret
cwtl
fsubs
adcb
pushf
jg
mov
xchg
cmc
lock
loop
lcall
xor
inc
adc
negl
sub
cmp
cld
cld
mov
and
adc
mov
les
push
or
dec
ljmp
cmp
ss
out
adc
iret
lahf
inc
adc
jbe
in
dec
sub
jae
add
sbb
add
mov
dec
and
pop
sbb
push
sbb
shl
and
jne
fsts
shlb
scas
mov
cmp
loop
add
roll
repz
in
sarl
mov
scas
das
fstl
cmp
push
loop
xchg
sbb
sub
out
inc
jnp
fiadds
loopne
fistl
mov
ds
orl
repz
xchg
push
dec
dec
ja
out
scas
sbb
in
stos
es
movsb
sub
pop
mov
pop
add
icebp
dec
aad
outsl
jl
or
aad
inc
adc
lss
pusha
leave
pop
mov
aam
dec
inc
push
xchg
mov
pop
xchg
jns
sbb
ss
sub
dec
aaa
aaa
mov
aaa
lods
rorb
jae
lret
mov
lret
jno
add
sbb
shll
clc
mov
js
aam
hlt
pop
out
cmp
mov
sbb
je
dec
mov
and
cmp
popa
aaa
into
rcrb
and
jmp
sbb
mov
scas
inc
test
xchg
adc
ljmp
dec
mov
repz
jg
add
mov
pop
fsubs
js
jle
sub
stc
stos
aam
test
jbe
push
mov
mov
inc
aam
ja
outsl
cld
test
sbb
aaa
jl
xchg
lea
fcomp
jns
in
mov
int3
xchg
cmpsb
or
pop
mov
dec
or
icebp
dec
je
push
loop
cmp
add
pop
and
sub
mov
lods
enter
mov
cwtl
loopne
cld
sbb
and
loop
ds
xchg
aad
loopne
sbb
cmp
xchg
mov
pop
push
cmp
jg
stos
outsl
lea
daa
jnp
lea
popf
gs
movsl
pop
fwait
in
or
lea
ret
leave
mov
js
in
mov
add
inc
enter
mov
mov
clc
sahf
mov
jnp
call
mov
ja
push
push
cmp
sub
out
fsts
inc
mov
adc
sti
shll
push
sbb
mov
call
xor
movsl
sar
jne
and
and
push
test
and
repnz
orl
andl
out
std
sub
pushf
mov
push
sub
xor
loop
out
jae
and
jbe
or
cmp
jp
xchg
in
sahf
push
sarl
sbb
fcompl
adc
dec
cmp
and
xchg
lret
orl
scas
xor
adc
out
popf
sub
mov
imul
hlt
popf
xorb
mov
cli
sbb
out
push
aad
js
fnstenv
insb
sbb
ret
les
stc
pop
movsb
movsb
xor
inc
mov
or
push
call
ja
test
lahf
in
or
rcrl
rcrb
dec
lods
mov
inc
mov
add
faddl
lods
idivb
cwtl
xchg
push
lds
js
cwtl
jnp
fsts
add
jno
popa
add
inc
loop
repnz
mov
rcll
and
push
add
jno
popa
add
inc
loop
repnz
mov
rcll
das
inc
or
and
or
push
adc
mov
movsl
xchg
rorb
sbb
and
je
push
inc
and
popa
adc
sbbl
mov
cltd
jge
insl
mov
in
adc
inc
lock
add
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
das
arpl
pop
cmp
out
aam
or
add
add
push
or
add
add
add
mov
add
jno
jmp
hlt
add
jbe
leave
add
add
add
leave
add
add
add
aam
insl
add
add
add
rolb
add
pushf
add
add
xor
adc
add
add
addb
add
add
add
add
add
xchg
sub
pop
add
add
imul
add
add
add
add
add
jo
fadds
cmp
sub
add
add
add
add
add
jl
add
add
verr
add
add
add
push
popf
add
cmc
add
in
add
add
add
add
add
sub
imul
in
add
cmp
rolb
and
aam
das
add
add
add
add
add
addb
add
out
add
add
add
add
add
add
imul
lahf
add
add
add
push
add
in
add
and
jbe
leave
add
add
add
add
add
add
out
add
testb
js
outsl
add
add
add
add
add
add
add
add
add
sub
faddl
push
add
cmp
add
adc
out
add
add
add
add
add
add
add
add
les
cmp
add
add
add
add
add
add
add
add
add
add
out
push
add
add
add
add
add
test
add
int3
add
bound
fadds
popf
add
add
add
add
add
add
add
add
add
out
add
add
add
add
xor
xor
fildl
out
outsb
add
add
in
push
add
add
add
add
add
add
add
or
cmp
movsb
add
test
fwait
add
aam
popa
add
add
add
rolb
add
add
add
add
popl
pop
add
add
add
add
or
add
add
add
sbb
and
mov
movsb
add
add
add
add
add
sbb
cmp
xor
jno
mov
add
add
add
insl
add
add
add
add
add
jbe
xor
add
add
add
add
mov
add
add
add
add
add
add
and
jne
jnp
or
jbe
jl
insl
add
add
add
add
add
add
ja
fwait
add
movsb
add
add
add
add
and
aad
and
cmp
sub
add
add
add
add
add
cs
add
cmp
jb
filds
sbb
adc
add
add
add
push
add
add
pop
add
add
add
add
sub
mov
cmp
cmp
dec
add
add
add
add
sub
cld
add
add
add
add
add
add
add
add
cltd
add
add
addb
add
and
pop
add
add
add
push
dec
les
jge
cmp
popa
mov
jmp
push
sarl
mov
test
sbb
ja
vpshufhw
jmp
pop
mov
out
dec
or
mov
pop
scas
xchg
cs
and
test
leave
icebp
inc
scas
mov
xor
jne
insl
fcmovb
orl
mov
aam
xor
add
mov
in
ret
aad
test
fcomp
mov
jae
sahf
lcall
icebp
cli
push
fwait
dec
dec
xchg
xchg
stos
fmuls
or
cmp
xlat
jle
in
fsts
cmp
stos
cmp
movsb
pushf
cwtl
pop
out
fstpl
dec
imul
or
dec
and
sbb
test
sub
push
mov
ds
arpl
movsb
sub
insb
pop
sub
fisttpl
and
mov
int
stos
movsb
or
jge
fldl
adcb
jge
mov
sti
sbb
out
jge
inc
movb
push
add
out
fldl2e
outsl
and
pusha
mov
pop
test
dec
mov
hlt
js
repz
std
add
inc
or
xchg
jmp
lds
dec
or
push
inc
mov
sbb
dec
imul
or
and
sub
int
inc
pop
cmp
data16
mov
jl
mov
test
xchg
incb
add
sub
inc
jae
xor
pop
xchg
xchg
add
and
sbb
mov
mov
push
jne
mov
jg
cmp
fucom
mov
mov
mov
outsb
dec
out
push
mov
inc
stos
push
pop
jmp
jbe
xor
cs
pushf
sahf
mov
xor
out
fdivrs
ja
inc
stc
jge
mov
xor
and
xor
mov
mov
pushf
sub
dec
ja
adc
adc
sub
and
in
addr16
mov
jle
fldenv
cmc
mov
jbe
pop
dec
adc
xor
add
dec
mov
jns
mov
push
cltd
test
push
cmpsb
xchg
or
movsb
insl
pop
push
cmp
test
xor
ret
xchg
sub
fcmovnbe
push
lahf
sbb
in
mov
imul
imul
pop
sbbl
or
roll
loope
xchg
push
sbb
pop
imul
adc
lods
idivl
dec
fadd
jle
mov
lods
xor
hlt
bound
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
