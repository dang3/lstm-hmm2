call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
cld
in
in
add
xor
and
cmp
arpl
outsb
pop
mov
sub
sbb
or
cld
adc
add
xor
and
mov
xchg
insb
sbbl
cmp
sub
jecxz
or
add
sub
cmp
mov
jo
mov
cmp
pop
lods
pop
movsl
gs
adc
test
mov
pop
mov
push
mov
cmc
mov
cmpsl
push
cmovnp
and
lods
mov
rclb
imul
sub
dec
repz
scas
add
xchg
add
rorl
dec
bswap
es
or
lret
add
xor
adc
jae
add
mov
push
mov
insb
subb
jns
mov
int3
xor
inc
jae
mov
jge
fs
mov
jecxz
or
rcrb
out
xor
xchg
imul
out
cmp
es
cmpb
or
repz
adc
adc
and
cmp
mov
mov
stos
dec
mov
sbb
or
cltd
jbe
add
add
or
or
or
das
out
int3
mov
repz
mov
add
and
jno
pop
leave
femms
ljmp
lret
mov
data16
push
test
inc
pushf
jae
arpl
sbbl
cmp
sub
sbb
or
cld
adc
add
xor
and
mov
xchg
insb
sbbl
cmp
sub
sbb
or
cld
adc
xor
es
iret
adc
arpl
and
and
mov
scas
xchg
cltd
mov
mov
mov
push
add
pop
dec
int3
fs
out
flds
fldl
fdivr
sti
or
dec
sbb
fisttpll
or
sub
fs
sub
or
jne
xchg
int
xor
sub
mov
addr16
cmpsb
je
sub
and
and
shlb
dec
fadd
jne
data16
je
ja
sub
popa
lret
mov
pop
mov
rorl
ss
sub
mov
fldt
cli
xchg
xchg
das
mov
inc
loope
xchg
in
mov
sbb
out
sbb
lods
lods
xor
mov
hlt
ljmp
or
cwtl
push
cmp
mov
popa
jle
out
scas
adc
fwait
push
aas
cs
xchg
imul
test
xchg
inc
mov
pop
xchg
mov
and
mov
sbb
popf
aas
jp
mov
push
sub
sbb
shr
aad
xorl
mov
int3
repz
das
imull
stc
nop
xchg
jmp
fistl
push
and
mov
mov
leave
xor
mov
inc
push
and
cmp
push
out
fldenv
fisubrl
repnz
fcoms
andl
add
lods
imul
sub
mov
push
jp
cs
dec
lret
cli
mov
sub
push
mov
mov
mov
jne
push
mov
aas
pop
aaa
stos
icebp
push
stc
mov
repz
lret
test
push
arpl
push
aad
test
out
nop
mov
mov
inc
test
subb
and
mov
jne
repnz
push
aad
xor
cltd
ja
mov
jns
adc
shr
pushfw
mov
ret
roll
or
repnz
adc
xor
fsubl
sbb
mov
jge
rclb
dec
lret
lea
movsl
and
adc
and
push
adc
xchg
cld
scas
jns
mov
ja
pop
mov
jns
lods
aas
imul
cltd
lds
daa
mov
scas
insb
cmp
nop
int3
out
xor
mov
fistps
jo
aas
mov
imul
sub
imulb
rclb
mov
add
ret
pop
pop
sbb
pop
sahf
cli
and
inc
pop
mov
fistl
aas
jl
stos
arpl
pop
cs
cmp
mov
or
mov
test
pop
mov
adc
cltd
leave
popf
fcomps
mov
dec
cli
and
push
xchg
js
hlt
push
mov
icebp
push
dec
notb
jnp
sub
ror
flds
pop
cs
rcl
adc
cmp
repnz
xchg
push
call
add
sub
into
out
shrl
pop
mov
xchg
fdivs
pop
out
xor
or
fcomp
aaa
adc
mov
adc
cmc
push
pop
rcrl
out
gs
lods
enter
inc
mov
js
outsb
sub
mov
fsubrs
out
pop
test
cmp
data16
mov
jo
dec
pop
addr16
shlb
push
inc
iret
xchg
mov
out
cmp
mov
and
jae
mov
dec
mov
mov
je
xchg
loopne
pusha
push
push
inc
mov
cmc
inc
jae
cmp
xchg
xor
cmc
jne
or
icebp
icebp
jo
sbb
push
sahf
lock
mov
dec
insb
or
mov
dec
cmpsl
aaa
ret
std
inc
xor
cli
insl
mov
arpl
adc
imul
rcll
inc
mov
outsb
pushf
cmp
lods
notl
xchg
push
jp
fldl
push
xor
daa
stos
in
inc
lahf
xchg
clc
fsubr
pop
push
push
roll
out
cmp
mov
loope
pusha
cmp
adc
lods
xor
and
in
pop
scas
addr16
cs
scas
std
fadd
loop
mov
mov
pop
cmp
scas
cmpsl
xor
pop
mov
adcb
aaa
testb
mov
jge
mov
jae
addl
test
lods
sbb
add
cmp
movsb
inc
push
subb
push
mov
fdivrs
push
sub
sbb
in
or
mov
cmp
mov
aas
test
arpl
jmp
in
jo
jnp
cmp
pop
mov
xchg
mov
fnstsw
imul
xchg
adc
bound
dec
and
sub
push
dec
testl
mov
jae
out
cmpsb
shll
mov
stos
sbb
xchg
mov
xor
lods
dec
add
repz
shlb
sbb
xor
fcoml
movb
add
arpl
sbb
iret
push
adc
mov
push
es
add
push
out
pushf
dec
clc
test
jl
insb
mov
fucomi
cmp
lods
jbe
aaa
xchg
push
or
sbb
push
sbb
sbb
or
mov
mov
outsl
repnz
stc
sub
std
in
in
push
jno
jae
push
jo
jl
add
iret
jae
ret
stos
xchg
pop
mov
jnp
imul
test
lock
jge
js
fdivrs
xor
xlat
xor
frstor
and
and
mov
push
lea
lret
sub
inc
push
rcrl
fs
jp
fsubs
mov
xchg
arpl
add
aas
in
add
test
push
dec
das
xor
push
push
fidivl
cmp
std
inc
jno
and
mov
negb
iret
add
cld
arpl
jl
jecxz
dec
lret
pop
push
in
lcall
push
adc
xchg
inc
cmpsb
push
push
fwait
sub
push
stos
into
mov
insl
xchg
pusha
mov
xor
xchg
xor
inc
xor
std
cmp
dec
mov
mov
mov
pop
sub
rcl
movb
jle
hlt
aas
cwtl
push
fbstp
add
or
pusha
hlt
out
sahf
xchg
outsl
out
cmp
fdivl
pop
inc
imul
pop
bound
outsb
mov
and
dec
out
mov
lret
insl
cmpb
jbe
ret
out
lds
andl
mov
cld
jmp
sahf
pushf
sub
jno
out
jbe
add
and
add
cmc
gs
cltd
in
xchg
ficoms
add
inc
fadds
ret
mov
lea
mov
jo
push
push
and
sub
ja
loopne
mov
xchg
cmp
jmp
cltd
scas
add
test
dec
jmp
out
jmp
xchg
or
mov
icebp
mulb
std
xchg
adc
sbb
outsb
daa
movsl
popl
sub
push
xor
mov
cmp
scas
aas
dec
jne
jecxz
lahf
jmp
dec
cli
sbb
sub
mov
jg
sti
push
shlb
test
and
out
stos
or
or
pushf
xor
push
shlb
scas
adc
hlt
inc
add
pop
cs
push
test
xlat
jo
dec
xor
test
inc
gs
aaa
dec
ret
xor
sbb
xor
inc
jns
clc
cmp
pop
add
mov
test
sbb
es
sbb
cmc
pop
in
sbb
jo
mov
pusha
cmp
lods
xor
into
jg
orl
orb
mov
jnp
sarl
fistl
or
movsb
icebp
aam
pop
icebp
adc
inc
nop
ret
sub
out
inc
mov
fimuls
cmp
test
les
push
jl
xor
cltd
sub
mov
loopne
notb
push
test
ljmp
add
outsl
ret
fsubrl
xor
call
push
xchg
stc
daa
sbb
mov
daa
xchg
lock
popf
and
loopne
mov
ljmp
fs
push
arpl
xchg
jnp
pusha
dec
add
xchg
cmp
sbb
scas
jg
loope
imull
or
adc
mov
divb
sbb
jge
dec
push
inc
mov
pop
dec
inc
cld
popf
pop
sub
aad
lock
mov
add
out
test
daa
mov
mov
sbb
sub
jb
mov
push
enter
aam
movsb
test
or
movsl
mov
sub
xor
mov
cmpsb
mov
aas
int3
jecxz
mov
dec
or
inc
pop
aad
test
dec
js
out
ficoms
jecxz
iret
dec
ljmp
push
mov
mov
rcl
js
push
cmp
mov
call
aam
pushf
xor
mov
push
jns
dec
or
xchg
xor
je
and
fidivs
lret
push
and
cmp
add
data16
lea
mov
sbb
mov
shlb
jge
mov
sahf
sub
imul
je
stc
icebp
xor
pop
pushf
pop
mov
stc
pop
push
cli
dec
xor
jbe
mov
aad
inc
mov
int
jg
mov
scas
nop
xor
xchg
and
test
xor
jg
xor
mov
sahf
push
dec
cmpsl
pop
mov
imul
xchg
daa
mov
sub
mov
bound
pop
imul
mov
dec
fistps
push
movsl
stos
dec
lret
push
imul
imul
cmpsb
mov
sbb
ss
dec
stos
lcall
or
jne
fdiv
out
xchg
add
push
sbb
mov
loopne
out
mov
mov
js
in
gs
sub
cmp
pop
in
sub
out
xchg
xor
stos
cmp
adc
and
mov
lret
mov
ljmp
hlt
ja
daa
test
cwtl
adc
add
add
js
dec
and
ret
push
mov
cs
lahf
out
daa
fbstp
movsl
rorl
sahf
pop
enter
nop
sbb
sahf
rorb
pop
popl
cmc
cmp
nop
sarb
aam
test
jns
gs
insb
negb
insl
push
push
ficomps
pop
fdivl
push
aad
xor
ljmp
aad
dec
fucom
gs
fcomps
stos
stc
xlat
xor
jnp
iret
jp
mov
lods
aam
mov
add
mov
sub
mov
mov
xor
imul
sub
test
sub
sub
pop
mov
bound
add
jp
or
pop
lret
cmp
mov
mov
mov
rolb
mov
add
out
mov
jp
data16
out
sti
imul
lock
dec
mov
pop
cmp
mov
adc
mov
in
adc
stos
xorb
gs
xor
xchg
adc
andl
pop
sub
pop
outsb
ljmp
pusha
and
imul
imul
stos
into
sbb
leave
pop
shr
ds
stos
cld
jae
xor
mov
mov
popf
cltd
rol
jno
fsubl
dec
in
mov
lods
std
je
push
addr16
sub
xchg
and
inc
cmpsb
push
add
pop
mov
push
test
test
repz
mov
dec
pop
iret
and
mov
jg
test
xor
sahf
inc
data16
pop
pop
cmp
fistps
es
popa
push
sub
push
lock
sub
rcrb
lret
lret
and
inc
in
mov
mov
out
cmpsb
loope
scas
rcll
mov
inc
mov
adc
arpl
mov
cwtl
add
iret
sbb
push
xchg
gs
test
cwtl
pop
test
mov
mov
add
jmp
frstor
ret
outsb
push
pop
insb
inc
and
insl
xor
jae
mov
push
andl
cs
into
push
daa
mov
sbb
xchg
mov
stos
imul
lret
aad
pusha
jmp
imul
rolb
scas
lods
ds
fsubrl
rcll
ficoml
pop
jecxz
xchg
push
sbb
pop
fwait
sahf
add
cmpsb
xlat
add
or
push
fdivl
leave
enter
pop
pop
fstpt
nop
or
jbe
inc
sbb
adc
aas
push
call
lcall
mov
lods
rcll
or
vpextrw
lds
mov
out
mov
jg
jno
add
std
mov
jecxz
dec
push
xchg
inc
je
sub
stos
std
cmp
jmp
jb
cmp
xlat
adcb
push
push
loope
scas
call
mov
push
mov
pop
jbe
cmc
iret
imul
add
add
jns
push
push
pop
scas
xchg
icebp
in
xor
subl
les
inc
sbb
je
lcall
test
clc
loopne
xor
leave
jp
insl
cltd
mov
pop
mov
push
shl
or
mov
mov
sub
xchg
mov
stos
std
fnstcw
or
inc
and
pop
out
sub
or
mov
push
pop
or
sub
test
imul
sub
push
leave
mov
loop
jne
mov
das
push
adc
in
inc
shll
rolb
imul
adc
test
xchg
lods
outsb
fists
cmp
out
add
fldenv
fs
mov
adc
loope
dec
imul
jle
inc
loop
push
add
adcl
xchg
mov
insl
cwtl
loopne
lea
daa
or
xchg
cld
out
out
xlat
xor
mov
lret
orl
fwait
xor
fs
rcll
test
fdivrl
xchg
movsb
mov
xchg
rcll
ret
arpl
std
std
sbb
inc
dec
add
cmp
jmp
adc
pushf
in
leave
mov
cmp
pop
shrl
ds
addr16
adc
shll
adc
adc
movsb
rcl
mov
pop
pop
push
ja
call
adc
sbb
test
cltd
xor
push
in
inc
nop
ret
dec
inc
sti
ret
daa
pop
sub
int
jge
jge
scas
push
aad
lahf
gs
dec
or
leave
mov
xor
xor
push
push
mov
dec
or
loopne
xchg
push
icebp
cmp
outsl
aad
inc
adc
aas
adc
loopne
ficompl
andb
add
int3
xor
adc
or
cmp
shrl
or
xor
jns
or
daa
fsubrs
nop
add
ret
xor
xchg
mov
aaa
pop
dec
pushf
shl
cs
and
cmpl
repz
movsl
sub
ret
push
scas
ja
mov
lods
push
jecxz
sbb
mov
xor
data16
in
aas
subl
popa
stos
inc
adc
pop
cmp
fwait
adc
add
fwait
into
sbb
pop
jmp
dec
fists
mov
cmp
cmp
mov
movsb
pop
ja
inc
inc
sbb
out
fnstcw
mov
scas
inc
or
pop
add
jnp
test
sbb
ja
test
out
jp
jge
arpl
push
sub
ljmp
jae
xchg
pop
ljmp
test
adc
pop
or
shlb
and
fs
shlb
jge
lret
ret
pusha
mov
sub
xchg
cmp
push
test
pop
pusha
bound
inc
jo
jmp
jge
push
frstor
lret
das
xor
inc
jmp
dec
insl
add
loopne
sbb
mov
sbb
imul
mov
or
outsb
mov
cmp
cwtl
jnp
jp
cld
and
ja
arpl
leave
and
pop
cmc
rclb
add
fimull
mull
and
push
sub
xchg
adc
scas
push
pusha
mov
and
outsl
mov
mov
lahf
scas
mov
popa
sub
fwait
pop
aas
test
jno
xor
popa
out
mov
imull
test
inc
out
jbe
or
rolb
sbbl
bnd
adc
pusha
adc
inc
dec
mov
mov
push
shlb
pushf
dec
jp
inc
imul
jg
popa
stos
fwait
test
out
xlat
test
fiadds
loop
xor
movsb
jo
dec
mov
test
shrl
jle
fcmovnu
movsb
dec
jae
or
outsb
movsl
mov
aam
sub
outsb
lods
pop
aas
and
cs
xor
adc
xchg
daa
jg
and
addr16
mov
push
adc
ret
push
add
fscale
cs
jnp
or
test
fmull
xchg
pop
in
jmp
or
mov
adc
jl
jmp
jge
outsb
mov
shll
enter
ret
mov
xchg
mov
fmuls
add
hlt
out
cmp
push
sbb
jmp
push
push
jge
jecxz
aad
mov
int3
cmpps
cmp
pop
lcall
aas
test
mov
jns
push
push
jmp
rep
jp
cltd
ret
inc
aas
jle
and
sbb
je
aas
and
sub
jns
lcall
iret
sub
inc
and
sbb
out
clc
mov
popa
std
dec
les
jne
iret
mov
push
mov
xor
adc
push
addr16
test
dec
jns
sbb
js
mov
notl
pop
andl
xor
testb
adc
in
or
fmuls
jle
pop
inc
inc
dec
pop
daa
mov
out
int
daa
fcompl
stos
sahf
out
jg
or
adc
mov
mov
and
imul
xchg
lock
mov
sets
mov
xchg
ljmp
iret
mov
bswap
jo
ficompl
mov
dec
adc
jnp
mov
or
cmc
mov
repz
mov
in
pop
cmpsl
cmp
inc
je
ret
xor
mov
xlat
in
ja
imul
daa
out
fisubl
subb
out
iret
jecxz
push
insb
adcb
jl
cmp
std
push
pop
inc
out
cmp
shll
pop
ljmp
aam
andl
addb
mov
enter
pop
movsb
aas
out
jno
mov
add
add
imul
jb
in
ret
stos
mov
xchg
pop
inc
scas
dec
and
sar
ljmp
fwait
es
adc
jp
loopne
cmp
into
icebp
dec
dec
aam
or
pop
adc
mov
ds
adc
test
sub
jns
jae
lahf
fldcw
in
push
sti
fisttpl
int3
sbb
out
mov
jl
mov
aas
dec
mov
data16
adc
xchg
clc
sbb
mov
mov
pop
add
in
jp
ficompl
loop
cmc
pop
rcrb
add
imul
cmpl
mov
adc
sub
dec
or
test
xchg
adc
cld
repz
gs
scas
sti
cmp
inc
outsl
iret
jecxz
lahf
nop
mov
lret
add
fdivrs
mov
inc
cmpsb
push
dec
rclb
xchg
cmp
das
sbbb
fsubl
cmp
sub
mov
lea
push
mov
or
push
stc
xchg
shrb
mov
sbb
sub
loope
dec
cmpb
rcl
fwait
outsb
call
vphaddudq
orl
fwait
mov
push
movsl
into
insl
mov
jge
push
xchg
das
push
lahf
les
mulb
push
fcomi
ret
add
dec
mov
sbb
ret
lcall
out
pop
adc
test
into
data16
mov
xchg
xchg
jmp
ja
comiss
shll
cmp
jae
or
fwait
xor
mov
subb
mov
lcall
in
xor
inc
mov
fldt
jl
loop
xor
fcmovne
lcall
insl
push
shll
inc
in
nop
out
test
dec
inc
dec
in
xchg
outsb
push
rorl
jg
sub
int3
idivb
clc
pop
mov
pop
insl
insl
enter
pop
xchg
rolb
dec
pushf
sub
and
or
lods
mov
cmpsl
arpl
mov
pop
jae
pushf
sub
ficoml
pushf
mov
xor
call
lea
xor
pop
test
or
lods
cmp
dec
movsb
lds
lcall
outsb
in
and
jg
fdivrs
add
imul
pop
sub
cmpsl
test
pop
xchg
xchg
and
cmp
fdivp
cld
push
mov
call
int
into
lahf
jmp
mov
push
nop
xor
loope
mov
lret
in
cli
sbb
dec
sti
icebp
jl
aaa
xchg
xor
pushf
addr16
cmp
notb
sbb
dec
insb
arpl
scas
jnp
cmc
mov
movsl
jp
sar
adc
into
pop
shll
pop
xchg
lret
lods
xchg
imul
and
fisubrs
jl
pop
mov
fidivrs
in
mov
fstl
push
sar
sbb
mov
or
call
or
shlb
cmp
dec
jle
js
cld
shrl
fnstenv
arpl
mov
pop
enter
add
je
sub
mov
jmp
pop
mov
mov
cmp
ss
inc
xchg
gs
inc
movsl
rclb
and
mov
xchg
insb
sbbl
cmp
sub
sbb
or
cld
adc
add
xor
and
mov
xchg
insb
sbbl
cmp
sub
sbb
or
cld
adc
add
xor
and
mov
xchg
insb
sbbl
cmp
sub
sbb
adc
add
xor
and
or
adcl
aam
pop
movsb
cmp
or
sbb
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
add
jge
dec
xor
popa
and
sub
xchg
std
mov
lods
sarl
add
jge
dec
xor
sub
jae
sub
std
mov
rcl
jecxz
repz
add
jge
dec
xor
sub
jae
sub
fmulp
mov
mov
out
pop
push
ja
and
fdivrs
push
push
pop
mov
add
movsl
xchg
xchg
lods
mov
test
jg
int3
fdivrs
mov
jle
push
add
mov
mov
jle
push
insl
sbb
daa
inc
pop
enter
call
mov
jae
xchg
mov
repz
dec
xor
mov
out
jae
push
adc
add
fnstcw
pusha
xchg
pushf
cld
sbb
sub
sbb
ss
es
fsts
repnz
call
mov
cmc
out
add
arpl
xchg
lods
pop
out
cmpsb
lea
iret
insl
adc
dec
xor
sub
jae
sub
std
mov
lods
sarl
inc
imul
inc
dec
and
jno
adcl
ret
fadds
or
inc
sub
inc
inc
push
jno
and
cmpsb
ret
sahf
mov
ret
mov
sub
xor
lsl
arpl
xchg
std
mov
lods
sarl
add
jge
dec
xor
sub
jae
sub
std
mov
lods
sarl
add
adc
mov
addb
lea
aas
xor
clc
ret
jp
mov
xchg
pop
mov
arpl
cmpsl
mov
push
cld
scas
mov
ret
sub
pop
inc
mov
scas
mov
addl
loope
dec
inc
fsts
or
push
out
ror
mov
lret
insb
fisubs
ror
mov
and
push
add
inc
std
mov
jge
fiadds
cmp
pop
pushl
lret
and
xor
add
js
mov
cwtl
sub
int3
fcomps
out
mov
pusha
insb
iret
rcrb
mov
xchg
mov
xor
push
ja
sub
dec
rcrl
pushf
leave
mov
mov
adc
cmp
mov
sbb
sbb
shll
ss
or
xor
loop
pusha
leave
lret
add
jp
jmp
push
fwait
pop
xchg
es
out
mov
or
xchg
inc
lods
add
mov
pop
push
xchg
aam
pop
inc
pop
nop
and
xchg
enter
mov
fcoml
loop
mov
push
loopne
and
mov
xor
xor
mov
bound
aad
jl
mov
fmuls
pop
and
mov
inc
mov
repz
add
insl
pop
leave
mov
imul
fistpl
fsubl
xor
or
mov
mov
cmp
pushf
and
inc
xor
xlat
push
jnp
inc
push
xor
inc
loopne
jno
jle
push
mov
outsb
sarl
add
wrmsr
cmp
sti
sub
scas
push
inc
in
jle
dec
mov
pop
insl
leave
daa
xchg
mov
push
jne
addr16
jge
xor
add
lret
pop
popf
ss
sub
js
ja
loop
sub
mov
cltd
dec
aad
repz
in
jbe
mov
sti
sub
sub
sub
leave
leave
ret
scas
stos
push
es
inc
xchg
std
and
pop
and
scas
pop
xchg
add
into
push
xor
mov
stos
in
sbb
or
fsubs
out
jmp
das
sub
sub
lods
int3
daa
je
stc
push
scas
fbld
ja
in
test
pop
test
lea
das
ds
xchg
jns
cmp
sbbb
xchg
mov
jo
add
mov
popl
or
cmpsl
stos
jae
pop
into
push
and
sub
and
and
push
mov
dec
push
mov
out
pop
sub
and
and
jge
sub
push
push
and
enter
mov
aaa
or
mov
mov
pop
cmpsb
ret
addr16
popw
aam
jb
inc
inc
add
sarl
pop
push
sbb
fisttps
movsl
shll
pop
sub
lea
xorl
mov
enter
pop
fadds
in
cltd
mov
gs
xchg
mov
hlt
push
jne
add
ds
fidivrl
xchg
pop
addl
fmuls
sti
movsb
mov
in
roll
inc
insl
push
jge
mov
mov
lods
repnz
lret
enter
add
push
sub
pushf
test
leave
xchg
sahf
ja
in
inc
push
leave
div
es
inc
mov
pop
jge
out
jl
mov
js
and
cwtl
ja
popa
push
lds
dec
clc
add
push
mov
and
xchg
pop
jo
outsb
sub
test
mov
and
sub
mov
xchg
ja
idivb
xchg
in
mov
hlt
mov
cs
sbb
std
dec
and
fldenv
lds
push
mov
dec
xchg
cld
xchg
ret
pop
ja
or
pop
push
push
fs
add
jle
or
push
loopne
pop
push
movsl
data16
dec
cltd
inc
stos
fcoml
and
lcall
dec
cld
ficoml
xor
mov
ret
lock
cmp
add
sub
fadds
dec
stos
xor
xchg
jmp
subb
xchg
push
mov
mov
sbb
cmc
fsubrs
notrack
mov
xor
popa
nop
adc
outsb
mov
sub
jle
subb
stc
pop
cmc
lea
cmp
rclb
sub
test
rep
xor
in
pop
movsl
jecxz
std
inc
cmc
xchg
push
cmp
mov
nop
adc
mov
push
mov
add
pop
fbld
mov
sbb
das
add
and
xor
mov
stc
outsb
inc
adc
repnz
push
sub
mov
adc
sarb
sbb
arpl
cmp
inc
inc
and
popf
pop
mulb
je
xchg
testb
adc
and
hlt
adc
int
mov
adcl
xchg
sub
inc
xchg
loope
js
inc
scas
cmp
jmp
aas
or
pop
jno
add
push
mov
ret
fwait
sbb
int3
cmp
pop
cmp
lock
addl
nop
cli
pop
add
cmp
sbb
jge
xor
rorb
xchg
out
xchg
imul
xor
imull
loope
shr
jmp
jecxz
pop
enter
mov
push
xor
jb
jecxz
stos
mov
mov
jmp
pop
sbbl
fs
lods
dec
xlat
mov
aaa
call
cltd
fcoml
subb
je
push
add
or
mov
stc
lods
aaa
data16
mov
les
mov
jmp
mov
xor
rolb
sub
push
dec
add
push
rcl
andl
ljmp
mov
mov
movsb
pop
in
gs
sbb
inc
jae
sub
adc
jecxz
test
sub
shrb
dec
or
lods
pop
lds
sbb
sti
es
dec
adc
into
lods
cwtl
mov
inc
out
push
dec
jl
add
push
iret
or
mov
lds
insl
adc
verw
std
inc
sub
and
lret
cmovs
and
mov
jmp
sti
popl
testl
in
dec
dec
test
add
std
jl
clc
rorl
inc
adc
jg
scas
add
mov
movsl
inc
push
adcl
clc
mov
int3
cmp
add
sarl
dec
cmp
out
pop
sbb
jl
orb
test
in
cmp
jbe
sub
arpl
push
mov
xor
lret
sbb
push
fsts
pop
push
insb
push
jg
ss
movsbl
sbb
jmp
xchg
pop
inc
sbb
pop
jle
adc
mov
lret
addr16
outsl
mov
aam
mov
pusha
sbb
xor
add
movsl
pop
mov
sbb
mov
jmp
adc
mov
jnp
les
lods
jle
fdivl
dec
mov
aaa
lock
push
stc
add
lret
repz
jb
push
cmc
sub
dec
push
or
lret
and
sub
jns
sti
dec
cmp
ss
cltd
xchg
dec
pusha
or
mov
test
pop
xor
shrl
and
jb
xchg
sbb
xchg
inc
adc
das
pusha
iret
dec
inc
inc
cmc
dec
adc
push
int
xchg
rclb
jno
das
xchg
xor
push
imul
and
inc
inc
aam
test
idivl
cmpsb
pushf
jecxz
in
in
dec
mov
out
cmp
jl
mov
pop
fmull
push
addr16
add
icebp
adc
fcoms
mov
push
sub
adc
sbb
pop
add
wrmsr
push
addb
cmc
mov
mov
mov
iret
push
xchg
mov
mov
xchg
cmp
std
mov
cmp
push
out
xor
fidivrs
iret
fbstp
movsl
or
mulb
mov
adc
push
fdiv
mov
shrl
int3
mov
mov
test
out
int
push
add
mov
fs
cmp
add
cwtl
fdivs
push
sti
and
shll
or
mov
xor
pop
ss
adc
cwtl
fnstenv
fnstcw
rorl
sub
js
and
jge
movsl
cmc
mov
and
add
mov
fstps
jmp
aad
inc
cltd
jle
out
jne
add
fdiv
clc
push
cwtl
stos
sub
repnz
cmp
add
jge
in
lock
sbb
das
inc
shll
pop
mov
ja
jne
inc
pop
hlt
push
pusha
inc
popf
adc
lcall
iret
add
xchg
xor
push
sub
sub
xchg
dec
inc
add
jecxz
test
xchg
inc
aas
mov
arpl
adc
mov
lret
pop
scas
or
adc
jg
push
pop
mov
sbb
iret
adc
insb
call
push
xor
mov
mov
adc
or
jnp
sub
call
adcl
fists
push
xlat
fistl
in
jnp
out
xchg
cmp
xlat
stc
std
jg
arpl
push
daa
shlb
xchg
int
imul
and
gs
nop
and
and
rol
enter
adc
orl
jmp
imul
insb
aad
mov
add
in
aas
aas
fldl2t
lret
in
xchg
shlb
push
jo
icebp
add
cmp
dec
xor
out
repz
test
shld
rolb
and
sbb
lcall
and
mov
pop
out
call
faddp
push
jl
add
mov
psadbw
inc
xor
jo
lods
add
nop
inc
mov
ljmp
xor
xor
out
jecxz
fidivrl
sbb
push
fistpll
fnstcw
inc
ret
leave
xor
out
stc
sahf
imulb
out
xchg
popa
cltd
dec
and
nop
adc
sbb
shr
out
arpl
hlt
and
pop
push
rcrl
dec
pop
xor
in
popa
mov
repz
jo
dec
out
pop
fwait
int3
insl
ljmp
jbe
dec
mov
insb
ss
xchg
dec
jne
aad
xor
xchg
mov
jecxz
or
adcb
mov
stos
mov
jo
lock
sahf
clc
pop
mov
dec
lods
mov
sub
outsl
insl
sbb
mov
ja
stos
in
add
mov
cmp
add
sub
add
mov
pop
out
and
pusha
push
fiadds
sbb
imul
aad
push
insb
adc
les
ss
inc
lock
aaa
xor
sub
inc
icebp
sbb
ss
daa
dec
test
push
mov
inc
lds
cmpsb
sahf
mov
pusha
stc
jbe,pn
pop
add
repnz
ja
sub
jge
in
mov
jnp
es
add
jg
push
jg
inc
push
hlt
orb
setb
and
pop
fstps
movsl
fstpl
push
dec
inc
mov
pop
cwtl
and
pop
dec
push
iret
mov
and
lcall
or
sbb
mov
sbbl
fsubr
adc
push
jnp
ja
mov
cmp
jge
push
or
sarb
mov
push
loopne
int
push
pop
lcall
push
sbb
je
xchg
mov
ret
hlt
push
push
loope
jne
xchg
out
xchg
jp
cmc
les
add
jl
add
xchg
fildll
stc
stos
mov
jb
sbb
lcall
inc
shlb
push
xor
adc
cltd
dec
xchg
mov
cmp
dec
dec
fwait
add
sub
or
das
jo
lods
mov
pusha
mov
jecxz
adc
insb
arpl
dec
fsubr
inc
pop
adc
rorl
in
into
orl
adc
pop
and
call
inc
lock
and
pop
fldl
mov
jnp
ret
das
adc
cli
je
push
mov
push
inc
andb
add
push
xchg
lahf
lcall
popf
in
inc
sbb
jno
cmp
inc
lret
or
jg
push
and
inc
stos
int3
dec
lahf
pop
jb
xor
fsubrs
fcomp
or
lret
xchg
lcall
and
xchg
in
mov
pop
jmp
push
sub
lcall
pop
mov
jns
in
lcall
push
adc
into
push
cmp
jnp
sbb
sbb
call
sub
jge
repnz
mov
dec
fnsave
adc
cwtl
nop
pop
repnz
es
inc
sbbl
inc
in
out
mov
cmp
pop
pusha
out
fcompl
outsb
dec
insb
xor
fs
icebp
scas
dec
xchg
add
pop
imulb
data16
in
mov
add
push
dec
je
inc
xchg
sub
sub
fsubrl
add
xor
in
jge
jecxz
lock
xchg
inc
add
sahf
shrl
outsl
ljmp
mov
add
in
jg
bswap
xor
jle
pop
int
test
lock
xchg
add
inc
jnp
pop
popa
sbb
sub
push
fildll
sar
sbb
jno
std
xor
fwait
add
add
cmp
jbe
rcrl
mov
pop
jae
repz
into
push
js
loope
aas
rcrb
or
lock
xor
dec
jb
movsl
ja
std
fyl2xp1
inc
pop
sub
xchg
push
jne
mov
cmp
cmpb
scas
fstpt
shlb
sti
jmp
dec
rorb
cmp
out
stc
loop
adc
and
cmp
xchg
rcrl
loopne
xor
mov
notb
add
push
cli
test
jne
ja
ret
and
cvttps2pi
add
lahf
and
shll
aad
mov
add
testl
imul
insb
outsl
inc
xchg
mov
jp
inc
jge
adcl
add
popa
xchg
push
sbb
iret
adc
movl
sbb
pop
mov
xor
sub
fbstp
dec
enter
jmp
xor
lds
sub
pmuludq
insb
pop
out
mov
int
lods
out
dec
and
mov
lea
xchg
divb
xor
jne,pn
cmp
gs
push
inc
sub
push
repz
std
mov
push
cmp
jns
xlat
mov
or
loopne
les
xchg
jbe
lret
sub
arpl
mov
int
adc
hlt
sbb
pop
ret
jns
mov
fwait
dec
inc
test
aam
mov
and
mov
mov
and
mov
call
ss
xchg
pop
xchg
outsl
fldl
inc
add
mov
adc
lret
call
mov
push
add
add
in
mov
js
xor
ss
sbb
cmp
lret
xlat
rcl
jg
test
aad
cld
sbb
add
cmp
push
pop
enter
imul
xor
xchg
jne
mov
mov
xor
jle
jecxz
push
add
jne
adc
orb
call
or
add
add
mov
lods
cli
inc
cmp
cmp
test
or
or
or
addb
stos
jl
xchg
xchg
cmp
mov
xor
test
arpl
and
xchg
mov
jmp
mov
mov
sbbl
lret
int
mov
and
mov
push
rcr
out
insl
add
bnd
std
mov
fnstcw
adc
pop
xchg
pop
push
andl
sbb
cmp
mov
jmp
arpl
pop
mov
inc
cld
nop
and
insb
roll
xor
adc
pop
push
loopne
enter
add
sbb
sarb
push
mov
and
sub
or
adc
insl
dec
iret
push
lcall
aam
pop
iret
mov
lahf
sub
jmp
mov
or
lcall
negb
inc
or
adc
pop
adc
or
cmp
xor
dec
adc
and
mov
push
jo
push
jno
insb
push
mov
xchg
leave
xchg
mov
call
cmp
inc
dec
dec
fwait
mov
add
push
pusha
pop
dec
jb
outsb
iret
pop
mov
out
loope
mov
xchg
pop
cmp
mov
cmp
loope
mov
push
mov
sbb
xchg
int3
les
rcrb
adc
inc
sub
mov
movsl
cltd
sub
xor
loop
jg
sahf
movsb
int
into
es
mov
mov
int3
jp
inc
sbb
sarl
or
test
out
test
pop
jmp
pop
fsubl
in
inc
icebp
xchg
je
jle
stos
jecxz
sbb
test
add
out
push
andl
adc
push
dec
int3
xchg
inc
leave
xlat
sub
jge
iret
notb
jb
push
sub
inc
std
mov
xchg
xor
pop
out
pop
jnp
mov
rorb
xor
fsubl
add
or
inc
sub
insb
orb
out
fisttps
push
sub
dec
js
imul
mov
mov
jne
mov
sub
jae
adc
push
ret
adc
dec
xor
imul
mov
inc
shrl
jbe
cwtl
dec
pop
int3
je
adc
cltd
sub
adc
push
jno
icebp
ror
cmp
mov
xor
das
xchg
insb
arpl
int
into
pop
jle
testl
or
into
jg
mov
and
pop
call
mov
jl
imul
pop
scas
movsl
insl
adc
push
push
lods
lahf
orb
adc
jp
push
mov
push
fdivr
in
mov
repz
cmpsb
cmp
mov
mov
pop
sbb
insb
dec
cmpsl
mov
es
sbb
add
and
sbb
adc
sbb
out
adc
add
sahf
pop
jns
subb
out
sub
mov
xor
or
add
inc
inc
adc
jbe
sbb
mov
mov
inc
push
cmp
aam
pop
setp
imul
test
dec
loop
sbb
repnz
lods
jne
outsb
add
sbb
sbb
fsubr
cmp
push
push
rorb
jmp
inc
cld
dec
mov
arpl
gs
data16
push
push
test
js
pop
dec
push
pop
fwait
jb
xchg
add
cld
xchg
repnz
push
xchg
pushf
mov
push
sub
mov
push
test
fmull
xor
sbb
ret
movsl
into
cmp
pop
xlat
adc
imul
add
adc
imul
je
and
cmp
xchg
lcall
and
aas
or
int3
push
adc
fmulp
insl
test
iret
outsb
mov
jae
lea
jne
or
mov
repnz
or
xchg
and
lea
rorl
pop
mov
out
sbb
sub
sbb
fs
push
xchg
mov
scas
push
jl
icebp
mov
bound
mov
or
cli
mov
xchg
inc
clc
mov
and
jmp
in
cli
jge,pt
xor
inc
mov
out
adc
fisttps
xchg
cmpl
pushw
xor
dec
pop
mov
aad
sahf
rcrl
adc
stc
jb
xor
out
in
pop
or
push
cwtl
repnz
inc
or
bt
xchg
data16
pop
std
lahf
xchg
test
fiadds
cmp
fisubs
aaa
dec
jne
mov
ja
ret
sbb
inc
mov
rorl
xchg
xlat
sub
mov
rcll
xor
mov
cmp
mov
xchg
clc
shr
xor
movsl
jae
daa
test
and
cmc
and
xchg
push
enter
pushf
xor
aaa
cld
push
pusha
icebp
into
inc
outsb
jg
dec
inc
jp
push
xor
sti
dec
aaa
std
dec
xor
ds
cwtl
adc
mov
sbbb
sti
cmp
pop
mov
stos
mov
in
and
pop
mov
in
xor
rorl
fmull
mov
push
ret
scas
mov
xchg
xchg
ljmp
loopne
mov
shll
mov
or
cmc
lahf
cmp
cld
cmpsb
cmpsb
js
mov
fwait
inc
mov
xlat
sbb
pop
clc
adc
and
inc
loop
mov
add
imul
push
and
out
stos
add
mov
push
add
shr
inc
stos
leave
and
std
push
mov
xchg
mov
sbb
push
and
pop
push
jl
xchg
int3
stos
and
mov
lods
mov
cltd
jnp
xchg
loop
div
mov
lahf
pop
mov
stos
push
aas
adc
cwtl
das
dec
clc
cli
pop
xor
ss
jge
dec
xor
sub
jae
sub
std
mov
lods
sarl
add
jge
dec
xor
sub
jae
sub
std
mov
lods
sarl
add
jge
dec
xor
sub
repz
mov
lods
sarl
add
jge
dec
xor
sub
jae
sub
push
or
mov
mov
mov
bound
in
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
add
adc
inc
lahf
and
inc
mov
jb
mov
cmp
ret
loop
loop
data16
adc
dec
fidivs
into
inc
mov
jb
cmpb
ret
push
mov
adcb
loop,pn
repnz
mov
inc
ljmp
xchg
jb
out
mov
lret
cmp
insl
mov
push
mov
pop
stos
inc
mov
push
mov
cmc
mov
movsl
xchg
shlb
out
testb
out
sub
insb
stos
shlb
je
out
daa
mov
mov
xchg
or
mov
xchg
mov
push
push
inc
aad
jg
jle
pop
mov
ror
xchg
shrb
lret
fdivrp
jp
fcmovu
into
mov
pop
jb
cmp
mov
mov
shlb
std
sub
adc
and
scas
jmp
pop
adc
mov
push
sarb
sbb
cmp
adc
stos
int3
push
mov
out
inc
mov
xchg
sub
subl
jb
into
and
sub
inc
jle
aam
xorb
fadd
rolb
repnz
pusha
adcl
cmp
push
jmp
leave
cmpb
sub
mov
addr16
mov
push
mov
xchg
mull
mov
mov
jno
mov
jge
lea
inc
mov
mov
bound
xchg
outsb
mov
shrb
loop
repnz
add
adc
and
xor
inc
mov
jb
cmpb
mov
shrb
loop
repnz
add
mov
loopne
repnz
aaa
shlb
ror
ficompl
ss
cmp
outsb
cmp
fisttps
and
push
jne
arpl
xchg
xchg
clc
fstl
out
filds
ss
aas
sbb
xor
stos
nop
mov
inc
cli
and
sub
test
out
or
out
sbb
mov
push
xor
push
xchg
push
or
push
and
movsl
mov
jmp
jmp
lods
ficomps
hlt
inc
lods
in
mov
cmp
aad
sbb
xchg
jno
sub
aad
sbb
xchg
inc
adc
in
mov
cmp
sub
sbb
and
xchg
addr16
xchg
mov
or
int3
pop
sub
pop
push
mov
push
add
xor
dec
in
rclb
pop
jle
loopne
gs
aad
int3
xor
jne
mov
pop
shrb
adcl
xor
xor
adc
sbbl
cmp
ret
fisubrl
push
scas
add
pop
jno
push
std
ljmp
and
out
or
sahf
inc
call
cmp
test
clc
sub
xor
ss
aad
mov
jnp
out
push
icebp
outsl
inc
outsb
sbb
cmp
xchg
mov
adc
adc
push
push
inc
rolb
lods
mov
adc
mov
ss
orl
sub
out
or
fsts
inc
fdivs
lea
stos
insb
out
sub
js
lods
inc
ljmp
push
das
mov
gs
inc
lea
mov
xorb
ret
jmp
xchg
adc
and
stos
int3
int
jmp
andl
cmovs
jle
mov
and
and
mov
sti
cmp
or
lretw
xchg
movsl
jnp
jecxz
mov
mov
repnz
add
mov
dec
mov
loope
stc
or
or
rclb
std
jge
sub
lcall
ret
add
mov
cld
fistl
jg
dec
xor
pop
jo
fucomip
or
mov
jecxz
test
sbb
pop
rcrb
sbb
inc
int3
xlat
mov
mov
sub
popf
or
add
add
shrb
xlat
jb
push
mov
cmpsl
jb
lea
je
div
dec
out
loope
lea
mov
aam
jge
dec
shlb
mov
mov
or
imulb
stos
mov
pop
stos
mov
mov
dec
hlt
out
cmpsl
ret
pushf
ss
lret
or
scas
rorb
or
and
sub
xchg
sti
push
cmp
pop
movzwl
push
jne,pn
ja
test
pop
dec
pop
aad
rolb
and
pop
fmul
or
loop
and
push
mov
jecxz
data16
sub
into
clc
fstpt
jns
insl
outsl
mov
outsb
test
ficomps
push
rcrl
xchg
xor
ret
adc
push
mov
xchg
leave
icebp
imul
ds
shlb
add
les
mov
mov
push
xchg
pusha
sub
xchg
add
add
mov
jns
inc
cs
cmp
lahf
mov
adc
mov
mov
xor
outsb
mov
dec
sbb
ja
jle
aas
xchg
gs
and
rol
fwait
dec
ret
cs
loopne
test
pop
mov
jmp
add
jp
add
pop
leave
invd
push
call
fildll
adc
mov
sub
cwtl
loop
test
xor
and
push
push
add
sbb
lahf
xchg
pop
imul
les
ds
mov
xchg
push
mov
and
inc
test
test
jmp
xchg
sbb
in
cmp
mov
rorl
mov
push
xor
xlat
mov
in
dec
push
jle
inc
add
mov
add
mov
hlt
stos
loope
loop
in
pop
push
in
int
push
bound
stos
arpl
mov
xchg
sbb
add
fucomp
loopne
mov
dec
aas
sbb
das
push
push
mov
pop
add
pop
icebp
pop
or
scas
pop
cmp
rcl
fs
aad
out
mov
aad
inc
sahf
inc
call
mov
jecxz
inc
loopne
push
leave
inc
sahf
xor
sbb
cld
test
rcr
dec
xor
lea
sarl
pop
push
push
inc
add
out
dec
and
fcmove
in
pop
subb
dec
pop
ror
jb
or
pop
arpl
sub
imul
pop
dec
pop
mov
add
mov
xor
mov
xorb
push
adc
insl
stc
loop
jo
cmpsl
sub
jae,pn
pop
mov
call
ss
iret
push
int
loop
mov
fcomps
daa
aas
sbb
cmp
mov
xor
adcl
pusha
dec
dec
sub
cmp
sub
adcb
fwait
xor
push
enter
icebp
movsb
loopne
dec
cmp
aaa
pusha
sub
inc
inc
cmpsl
inc
ror
iret
aaa
inc
addr16
test
icebp
popf
les
mov
stos
cltd
rolb
add
xchg
loopne
sbb
mov
sti
sbb
push
and
aas
mov
mov
xchg
leave
sbb
add
xchg
ljmp
scas
stos
xor
pop
stos
pop
mov
and
movsl
pop
in
jecxz
cmp
jl
xchg
fldt
jmp
lods
fcmovu
push
sahf
lods
and
xorb
push
cmpsb
cmp
outsl
sar
jns
xchg
iret
add
xchg
jmp
or
fcoml
lcall
xor
xor
push
push
or
in
cli
adc
sbb
adc
clc
xorl
cmp
std
mov
call
lahf
dec
jecxz
push
ja
lock
fs
loopne
xchg
sbb
mov
scas
xchg
roll
mov
fdivl
xlat
or
jo
nop
mov
xor
fwait
cmp
cwtl
fdivs
insb
dec
pop
pop
push
xor
les
idivb
out
and
cld
test
rcrb
pop
mov
pop
out
xchg
inc
cs
push
mov
sbb
imul
sub
les
xchg
adc
add
pop
lret
pushl
int3
mov
gs
push
mov
test
je
clc
pop
fldt
rorb
lods
mov
lcall
jae
mov
add
mov
iret
jno
mov
sbb
pop
dec
repz
cmova
daa
push
mov
jo
adc
pop
inc
xchg
jle
cwtl
push
movsl
adc
mov
inc
lods
je
dec
push
adc
mov
outsl
sub
into
js
mov
daa
jle
repnz
das
hlt
xor
dec
mov
ret
xchg
jne
test
cmc
orb
arpl
out
mov
sti
xchg
mov
jl
scas
mov
mov
mov
cwtl
out
xchg
push
loopne
cmp
inc
xchg
lahf
fcomps
dec
andb
mov
lcall
mov
pop
cmp
lret
xchg
dec
insb
add
adc
stos
inc
icebp
ja
out
add
lahf
mov
aaa
dec
mov
cmc
inc
cltd
xlat
ss
push
mov
scas
sub
subb
out
push
adc
jge
imul
push
out
jmp
jecxz
xlat
pop
movl
push
xchg
scas
xor
inc
inc
dec
popf
xchg
fs
sbb
adc
cmp
sahf
xchg
inc
sbb
stos
je
icebp
push
sbb
divb
fistl
push
decl
xchg
inc
sbb
inc
cmpl
mov
out
test
into
sbb
sbb
pop
mov
inc
pop
push
adc
inc
mov
or
dec
jle
cwtl
jg
faddl
mov
push
add
hlt
dec
push
jmp
add
xchg
mov
xchg
xor
jne
dec
push
out
mov
xchg
and
clc
lcall
sub
xchg
xchg
mov
orb
push
enter
push
sub
mov
sub
dec
cmc
fwait
mov
fstpt
inc
aas
push
add
movsl
and
nop
iret
loope
popf
mov
xchg
mov
jnp
push
xchg
faddp
jmp
icebp
sbb
out
sub
stc
mov
jne
xor
mov
in
cmpsl
sub
repnz
cmp
arpl
jecxz
in
push
sbb
fstps
jge
mov
mov
pop
aaa
cmc
add
incl
push
add
inc
pop
mov
pop
mov
pop
lret
test
mov
and
lahf
cmp
mov
ret
sbb
rorb
sub
xchg
dec
xor
mov
or
jle
scas
cmc
adc
loope
or
sbb
movsb
add
cmp
mov
lea
test
mov
pop
nop
lock
push
fildll
sti
jg
xchg
mov
test
inc
cli
fcompl
cmp
cmp
push
push
xchg
js
mov
mov
xor
xchg
or
jbe
and
les
lea
xchg
icebp
jo
pop
mov
insb
fdivs
and
inc
es
bound
loopne
arpl
shlb
negb
add
push
es
sub
in
incl
sub
jmp
pop
add
mov
ret
jmp
mov
xchg
sbb
ljmp
push
jp
std
stos
jle
cwtl
lret
sti
mov
es
in
ffree
cltd
ss
inc
sti
fdivp
xchg
mov
test
addr16
fstl
dec
lds
test
movsl
test
repnz
mov
enter
mov
xor
gs
xchg
xchg
fstps
in
icebp
lods
add
push
xchg
mov
repnz
pop
pop
jb
jmp
imul
mov
lock
test
adc
popa
cmp
out
dec
stc
adc
cmp
push
loopne
leave
dec
or
mov
cli
sub
xchg
lcall
add
jecxz
add
test
jge
dec
dec
adc
ret
adc
mov
jb
xor
int
js
pop
ret
shrl
scas
xor
adc
inc
push
jae
pop
mov
pushf
mov
cwtl
push
add
sahf
cmp
sub
jg
xorb
xorl
les
lods
bound
sbb
daa
mov
lcall
adc
mov
push
and
or
pop
push
iret
clc
push
popf
lret
push
mov
sub
mov
int3
mov
push
or
or
lods
mov
sbb
sub
xor
xchg
mov
pop
out
add
imul
shrb
mov
mov
jne
pop
mov
dec
sub
jl
pop
jmp
fstpl
lock
xlat
icebp
mov
insb
bound
xchg
jne
add
fcomps
scas
dec
sub
push
push
jmp
mov
out
xchg
imulb
lret
js
test
addl
aad
add
push
dec
fisubrl
sub
pop
sub
repz
sub
and
pusha
in
sbb
jb
mov
mov
sub
push
lods
sbb
jae
pop
jecxz
pop
push
jnp
lds
test
xor
pop
nop
es
addb
gs
cmp
push
out
rorl
fwait
mov
jae
sti
pop
mov
jno
push
pop
push
icebp
adc
test
lcall
adc
and
insl
movsb
sahf
jo
bound
mov
dec
nop
pop
shr
pop
bound
cld
mov
lcall
mov
lret
test
cltd
lret
mov
sbb
pop
jmp
in
dec
pop
mov
sahf
iret
cmpsb
mov
inc
cwtl
sbb
andb
fs
cmpl
or
and
pop
cmp
pop
out
adcl
sub
xor
fimull
out
jnp
sub
pusha
notb
pop
icebp
or
mov
je
dec
mov
testl
leave
push
cld
mov
pusha
or
mov
pop
cmp
pushf
cmpsb
test
adcl
sti
aas
jecxz
mov
ds
subl
jne
aaa
scas
mov
lret
fists
fstpt
mov
mov
jb
cmpsl
and
aaa
xchg
push
mov
out
enter
cmp
xor
popa
lret
dec
add
fcom
ds
mov
in
shl
cmp
int
jg
dec
orb
add
jg
jle
push
push
and
out
scas
lock
mov
mov
lahf
pop
cmc
aad
cmp
fwait
rolb
scas
insb
stos
push
mov
push
lods
testl
adc
cltd
pop
mov
mov
xchg
faddl
mov
clc
icebp
fidivrs
jbe
daa
pop
push
shll
rclb
xor
or
jnp
inc
mov
xchg
push
imul
es
lret
rcr
sbb
adc
cmp
test
push
les
xchg
pop
in
ror
fwait
sar
or
xor
xor
mov
add
pop
pop
pop
push
nop
dec
adc
push
mov
push
les
test
mov
pop
adc
cmp
orb
or
shrb
xchg
jo
pop
pop
push
popf
jns
adc
scas
loope
xlat
das
iret
push
or
aam
adc
in
pop
cld
adc
dec
cmpsb
sub
fnstsw
mov
sub
push
andb
push
movsb
std
test
std
in
out
popf
xor
mov
push
mov
leave
sbb
subl
mov
pop
push
mov
popa
fisubrl
test
xor
cmp
jnp
fimuls
xchg
and
lods
dec
retw
aad
dec
adc
gs
xchg
aam
pop
mov
jne
xchg
jecxz
call
inc
insl
mov
movntq
lods
cld
inc
xlat
addr16
xchg
adcl
jno
sbb
in
mov
xchg
push
jle
cs
sahf
jne
and
mov
add
rclb
jns
xor
or
aaa
fcom
iret
leave
and
aaa
mov
outsl
cwtl
lcall
ds
jmp
inc
pop
cld
add
pop
stos
mov
cmp
or
and
push
add
or
push
mov
cmp
xchg
stc
scas
daa
xor
aam
cmp
leave
scas
test
je
adcl
dec
jmp
xor
jp
aad
mov
outsl
mov
cmc
into
pop
pop
mov
scas
ds
xchg
pop
xor
mov
dec
xlat
xlat
mov
into
orb
jo
ljmp
in
xor
mov
repz
mov
push
mov
out
int
push
test
pop
or
out
std
in
inc
aaa
pusha
int3
and
imul
push
sbb
aad
push
je
fcompl
push
test
push
in
popf
push
loope
pop
or
and
inc
sbb
cmpsb
shrb
outsl
addr16
cli
outsb
fwait
xchg
inc
stc
xchg
out
in
mov
add
shrb
mov
imul
mov
cld
cld
mov
xor
cld
inc
or
mov
or
push
es
hlt
lahf
lea
mov
jmp
adc
mov
and
sub
subb
xor
movb
idivb
jo
sbb
pop
iret
and
mov
dec
push
push
dec
jbe
inc
sub
cmp
cltd
mov
jl
pop
int3
sbb
lret
and
ror
push
outsl
sbb
sbb
pop
fcmovb
call
dec
sbb
pop
scas
jo
call
test
dec
cmp
pusha
imul
lret
cmp
out
loope
mov
add
scas
jle
adc
movl
xchg
pop
aaa
int
jo
hlt
push
push
and
lds
popf
outsl
test
inc
push
sub
js
sbb
pop
pusha
add
adc
js
loop
in
add
mov
xchg
gs
pop
lahf
jae
xchg
xor
pop
dec
les
test
push
pop
and
push
sbb
jmp
popa
into
push
and
xor
mov
inc
in
inc
iret
mov
cmp
pop
pushf
cli
mov
lea
or
filds
in
cmp
pop
call
inc
js
dec
mov
outsb
pop
xorb
and
mov
push
jecxz
cmp
jb
mov
add
cs
sbb
cmpsb
xor
sub
jecxz
xchg
inc
fisubrs
jno
jne
pop
pop
and
out
out
dec
lahf
push
dec
dec
jbe
sahf
or
jecxz
addr16
jo
cltd
cmp
je
lea
lds
cs
and
xor
mov
lods
xchg
cmp
scas
in
jge
dec
pusha
stos
mov
cli
js
xchg
push
dec
jmp
dec
adc
jno
outsb
orl
insl
cmpsb
ja
xchg
out
test
pushf
xor
out
xlat
ja
test
gs
pop
sbbb
iret
fs
jne
clc
leave
repz
out
adc
jg
lds
dec
mov
xchg
leave
repz
gs
mov
xchg
fsubl
frstor
push
adc
pop
popf
not
sub
adc
mov
lret
jle
lds
mov
mov
or
push
add
aad
lds
cmp
mov
dec
push
test
imul
imul
push
sar
imul
rcrb
mov
leave
repnz
push
jbe
lret
pop
lret
aas
std
mov
pusha
jl
and
inc
ficompl
enter
jb
pusha
cmpsl
fwait
xor
push
jp
and
cmpsl
adc
and
ljmp
mov
pop
dec
mov
sub
fisubrl
xchg
mov
jg
mov
movsl
popa
cs
jns
and
in
sahf
push
jae
dec
sti
pop
mov
sbb
lock
loopne
shrl
mov
lret
stos
lods
xor
sub
fwait
test
mov
push
adc
addr16
pushf
cwtl
loopne
ja
inc
mov
in
insl
xor
push
pop
adc
in
add
ljmp
outsl
xchg
mov
hlt
orb
andl
scas
xchg
jae
jno
enter
les
sti
insl
jb
test
iret
xchg
negb
andl
jno
or
mov
cltd
out
pop
xchg
test
ss
dec
jno
imul
aam
mov
or
pop
in
cli
gs
mov
adcb
out
pcmpgtw
inc
pushf
add
or
js
adc
pusha
stc
sub
add
pop
pop
arpl
lods
add
mov
aas
sub
shrb
pop
cmp
fistpll
cmpb
loope
dec
xlat
cmpsb
outsb
xchg
inc
in
jmp
ds
fs
gs
cwtl
jns
adc
xor
test
mov
data16
mov
stos
aam
pop
jb
jl
mov
mov
out
jg
dec
adc
push
xchg
inc
in
mov
sbbb
push
inc
dec
sub
push
imul
in
add
mov
cmpsb
adc
mov
or
add
sub
dec
out
into
addr16
ja
sub
dec
out
xorb
jl
sub
mov
xchg
lea
shr
movsl
inc
and
xchg
sub
sub
lret
lea
push
arpl
and
inc
dec
jo
scas
pop
ds
inc
ror
lret
cs
lods
adc
loopne
xchg
add
jno
push
sarb
fsubrs
and
xchg
push
aad
fisubs
cltd
test
push
mov
cli
iret
cmp
shrl
in
pop
arpl
jbe
push
add
mov
mov
push
ret
xchg
pop
inc
pop
decb
pusha
dec
int3
insb
xchg
push
pop
std
call
fisubl
xor
cltd
pop
pop
or
mov
mov
mov
mov
dec
and
pop
test
pop
pop
push
or
lods
dec
stos
or
adc
push
mov
pop
das
jge
lahf
push
and
loope
or
insl
mov
aas
ss
add
sbb
out
scas
mov
ret
add
xor
loopne
and
pop
les
inc
dec
sub
rclb
mov
xchg
add
jmp
pushf
fists
push
jmp
aad
repnz
out
pusha
mov
repnz
or
xchg
inc
fcmovu
test
ret
dec
clc
pusha
jo
out
cmp
sbb
adc
lahf
ds
push
sub
sbb
mov
pop
in
cmp
or
int3
in
sbb
xor
inc
leave
pop
push
shr
push
in
push
pop
sub
sbb
dec
sbb
push
cmp
xchg
and
mov
push
into
inc
mov
jb
cmpb
mov
shrb
loop
repnz
add
adc
and
xor
inc
mov
jb
cmpb
mov
shrb
loop
repnz
add
and
inc
xor
sarb
mov
cmpb
push
pop
mov
ret
loop,pn
sbb
push
sbb
js
adc
bound
repnz
addb
cmp
or
clc
lock
sbb
nop
hlt
mov
jo
inc
dec
push
pop
and
xor
loopne
lock
mov
cwtl
nop
cld
pusha
je
push
and
sub
sbb
or
loope
icebp
rol
shlb
adcb
and
xor
pop
and
addr16
mov
cwtl
mov
nop
imul
jae
dec
pop
add
shlb
clc
jge
mov
xchg
cwtl
mov
addr16
adc
or
mov
pop
iret
jbe
call
icebp
or
mov
movsb
xor
orl
in
pusha
js
push
sahf
popf
lock
sbbl
dec
daa
cmpsb
lock
loopne
cmp
mov
in
nop
or
inc
cmpsl
mov
lods
adc
sbb
sbb
daa
lds
nop
nop
loopne
test
icebp
jae
pop
cmp
pop
lock
dec
and
inc
xor
js
push
fcomps
cmpsl
fnsave
add
adc
mov
rcl
mov
cwtl
nop
xchg
pusha
js
jo
inc
push
push
and
xor
add
adc
xchg
clc
mov
lods
mov
aad
hlt
cmc
in
or
ret
pop
xor
push
pop
jl
insl
ja
fs
stos
cwtl
cmpsl
lds
call
or
imul
push
jg
jl
clc
fsubrp
mov
mov
mov
jo
inc
pop
push
dec
and
xor
add
adc
loopne
lock
mov
cwtl
nop
mov
jo
inc
pop
push
dec
and
xor
add
adc
loopne
cmc
sti
dec
pop
or
xor
xchg
ja
sub
leave
addr16
push
mov
or
and
sbb
js
sub
inc
xchg
repz
mov
push
jne
xor
sbbl
mov
add
adc
xor
fisttpll
popl
pop
lock
shlb
lds
stos
sub
cld
dec
mov
int3
inc
sbb
mov
inc
sbb
test
arpl
xor
dec
imul
adc
dec
mov
xor
sbb
call
sarl
loopne
les
roll
cmc
sbb
add
cmpsl
inc
mov
lcall
arpl
pop
iret
mov
jecxz
mov
jmp
xchg
adcb
mov
mov
mov
test
scas
jmp
or
sbb
or
mov
xchg
hlt
cmp
movsl
cmp
addr16
cmp
mulb
scas
inc
mull
std
and
pop
inc
dec
lcall
dec
fisubs
pop
xor
mov
mov
outsl
shlb
dec
xlat
or
push
push
mov
out
sub
mull
inc
shll
xor
inc
out
pop
popa
sete
shll
push
jmp
jno
loopne
add
sti
in
rep
js
cmp
sbb
push
adcb
push
mov
push
xor
mov
adc
xor
outsb
stos
adc
imul
out
adc
insl
nop
xlat
pushf
in
pop
adc
cmp
jb
outsb
mov
xchg
mov
in
inc
outsl
pop
sub
scas
imul
mov
xor
imul
adc
test
subl
jle
sub
fildl
add
loopne
pusha
push
push
jmp
lea
adc
in
jae
sub
ret
std
jns
push
ds
out
clc
jb
sbb
mov
sbbl
or
jno
cmp
xchg
movsb
xor
dec
mov
xchg
dec
call
insb
or
es
mov
cmc
adc
dec
xor
loope
xchg
cmpsb
mov
xor
mov
mov
push
inc
mov
add
cwtl
lret
push
dec
jg
lret
xchg
das
jg
or
jbe
sub
xchg
andb
push
pop
sbb
mov
push
mov
test
mov
dec
pop
dec
imul
mov
dec
addr16
or
stc
dec
pop
ljmpw
fcomip
cmpsl
sbb
sahf
lods
or
imul
inc
push
or
nop
adc
mov
push
gs
in
int3
out
and
fstpl
adc
jg
inc
stos
ljmp
add
cld
sub
xchg
push
arpl
pop
rcrl
into
inc
hlt
aas
jb
xor
jb
in
adc
dec
gs
sbb
outsb
test
fwait
sub
lods
xor
dec
icebp
stc
test
int
out
xchg
mov
mov
insb
and
mov
pop
data16
jo
sbb
lods
push
sti
test
adc
les
in
mov
movsb
and
sbbl
and
aaa
sti
sub
shlb
js
out
hlt
hlt
repnz
or
push
xchg
stos
insb
adc
sub
into
xchg
decb
mov
addb
sbb
outsl
adc
sbb
out
movsl
jno
ss
rclb
rcll
stos
cmpsl
mov
lock
push
push
mov
mulb
push
pop
shl
cwtl
jle
xor
mov
and
inc
stos
shrb
inc
sub
popf
cmp
xlat
ljmp
int
push
dec
sub
xlat
inc
xchg
scas
dec
inc
and
mov
imul
hlt
xlat
xor
fwait
inc
pushf
or
inc
sbb
out
sbb
mov
sbb
xchg
mov
jecxz
imul
mov
rcll
push
xor
imul
dec
pop
popa
adc
lcall
xor
push
sti
push
xor
sbb
hlt
and
int
sbb
add
sub
push
cmp
rclb
pop
adc
add
adc
jb
push
fsubs
mov
sarb
adc
movsl
adc
mov
fwait
loopne
test
pop
adc
or
mov
cmp
cmp
rorl
pop
xor
inc
add
iret
les
lahf
mov
dec
cmpsb
or
outsb
pop
repz
inc
push
mov
orb
bound
mov
adc
movsb
and
imul
push
ljmp
insb
mov
ret
inc
shll
ss
cmp
ds
mov
xor
push
cmpsl
mov
mov
pop
xorl
inc
gs
mov
rdmsr
xchg
cli
fdivr
fucomip
ds
pop
sub
aas
dec
ret
sbb
mov
jge
cmc
push
inc
jecxz
inc
hlt
or
inc
adc
fnstenv
xchg
les
shll
adc
je
ds
push
or
adc
dec
into
mov
push
xlat
rorl
jb
push
push
xor
add
jp
push
call
xor
mov
loopne
stos
iret
dec
adc
int
push
pushf
sti
push
bound
pop
aam
or
test
dec
bound
cmp
xchg
mov
fwait
data16
xor
mov
and
and
lahf
lds
fs
lret
mov
mov
pop
rorl
mov
mov
int
ret
mov
jge
out
int3
mov
push
mov
cli
and
xor
test
stc
mov
and
cmovle
test
jmp
mov
jp
xor
sub
shll
aas
jbe
mov
fistl
ss
inc
ljmp
pop
mov
and
mov
aam
aaa
xor
jo
dec
in
push
cmp
fcom
or
push
mov
dec
push
jl
movsl
lds
ljmp
xchg
fisubrs
mov
pop
xor
and
sub
jle
inc
jmpw
pop
inc
loope
ss
sbb
enter
sub
mov
sub
push
mov
add
dec
sahf
bound
testb
xchg
xchg
leave
shrl
fimull
mov
adc
in
out
cmc
mov
out
ror
and
movl
ss
lcall
scas
mov
push
insl
lcall
sbb
push
insl
fsubrs
aad
xor
jbe
sub
rorb
in
push
xor
bound
imul
hlt
sub
mov
xor
insb
and
repz
inc
aaa
in
lret
add
jae
jle
push
shlb
outsl
jecxz
jecxz
pusha
lcall
xchg
ret
xchg
xchg
xchg
sysexit
mov
push
mov
shl
pop
call
pop
pop
ret
or
dec
scas
mov
sahf
filds
out
and
clc
jg
dec
add
mov
movsb
aad
int
es
lea
push
xchg
mov
dec
jge
mov
jmp
shlb
xchg
loopne
xor
out
repz
lcall
enter
mov
push
popa
mov
and
cmc
lcall
dec
xchg
mov
les
shl
inc
mov
add
cmp
sbbb
jecxz
sbb
inc
sahf
aam
jg
stc
xchg
sarl
or
fwait
cmpsl
in
movsl
arpl
addl
shl
in
lock
xchg
das
sbb
jge
or
xor
loop
push
outsb
rorb
loop
mov
inc
cltd
dec
add
icebp
fs
pop
loope
and
jbe
cmc
add
pop
fsubs
and
fwait
jno
add
adc
mov
icebp
popa
cmp
ret
mov
test
xchg
sub
lcall
sub
pop
and
sbb
ja
test
push
mov
inc
dec
repnz
or
sub
and
cmc
or
sub
mov
repz
subl
enter
add
clc
js
cmpsl
dec
ret
int
loopne
jle
inc
fnsave
xchg
and
and
std
je
and
inc
inc
adc
add
gs
jae
leave
cmp
cmp
sbb
jne
int3
push
lods
push
ds
push
adc
lret
inc
adc
sub
cmp
lods
cld
xor
xor
inc
mov
pop
ja
mov
imul
test
push
rolb
jnp
fmuls
and
gs
push
int3
cmp
dec
and
xchg
mov
add
mov
cltd
dec
jno
filds
loope
cmpsl
fs
aad
xchg
in
int3
adc
jmp
cli
sbb
xor
add
dec
xor
sahf
hlt
adc
cmp
daa
xchg
test
divps
mov
mov
add
add
rorb
push
rcll
inc
insb
jbe
sub
xor
je
xor
lock
add
hlt
adc
lret
pop
scas
mov
les
pop
sub
xchg
push
repnz
in
sub
cmpsb
or
shll
xchg
mov
test
mov
loop
sbb
pop
mov
insl
inc
push
mov
sub
mov
clc
sbb
pop
adc
jno
bound
mov
sarl
sub
fildl
push
lock
movsb
mov
sbb
std
sbb
out
scas
sbb
sbb
sub
and
rclb
mov
insl
gs
jnp
mov
orl
adc
fld1
mov
cmpsl
incw
arpl
aam
cmp
mov
lret
mov
pop
insl
stc
adc
clc
pop
data16
std
xor
insl
imul
mov
fsubs
daa
out
mov
pushl
cltd
mov
test
lock
push
lds
adc
xor
in
das
push
shr
mov
sub
nopl
cli
pop
movsb
cmp
push
xlat
imul
ds
fdivrl
push
out
sbb
adc
pushf
sub
sub
es
push
arpl
daa
cmp
sub
inc
pushf
insl
jo
push
pop
and
std
mov
adc
mov
cwtl
and
add
mov
mov
cvtps2pd
fcmovnbe
mov
xor
hlt
aad
addr16
pop
inc
or
adc
inc
gs
outsw
cmp
dec
pop
pop
dec
outsl
dec
sub
data16
ss
inc
mov
frstor
insl
xchg
ljmp
dec
js
cli
xchg
nop
pop
dec
loopne
dec
push
push
lea
lock
fiadds
clc
addr16
dec
jbe
les
mov
xchg
push
out
popf
jecxz
rcrl
ja
cmp
loopne
es
lahf
rcll
cmp
and
sahf
repnz
adc
jecxz
outsl
push
dec
bound
mov
xchg
int3
push
insb
rolb
int
jp
shll
and
inc
addl
mov
jg
adc
mov
jnp
arpl
shl
dec
int
cmp
push
loop
and
add
aad
and
mov
inc
inc
push
lods
push
jnp
sbb
or
pop
cmp
lock
test
test
loope
mov
mov
es
jns
dec
sub
mov
mov
test
xor
test
dec
out
cmp
bound
int
aaa
xor
add
adc
arpl
xchg
mov
movsl
gs
mov
mov
orb
or
push
sbb
lds
cmpsb
sti
adc
mov
sub
pop
das
and
dec
and
xor
xchg
lret
dec
push
adc
stc
xchg
and
and
jle
jg
cwtl
sub
roll
cmp
cmp
adc
or
stos
and
or
sbb
rolb
pop
mov
fs
mov
decl
out
jo
pop
sti
enter
clc
push
aaa
out
xorb
rcll
les
or
mov
fincstp
push
js
pop
es
jge
ljmp
subb
std
mull
dec
lret
test
and
fsubl
fwait
and
lret
sbb
pop
xor
mov
rorl
dec
jp
xor
push
rorb
cmp
cmp
mov
dec
dec
adc
jns
pop
ds
cmp
jae
fimull
addl
fimuls
imull
mov
jbe
mov
clc
roll
int
xchg
mov
mov
imulb
out
jle
arpl
add
pop
mov
nop
aad
dec
add
test
dec
jb
or
jo
sahf
ds
dec
pop
mov
xor
imul
sub
out
xor
jecxz
xorb
out
test
cmp
jecxz
xchg
mov
push
xchg
cmpsl
aad
lock
stos
adc
dec
hlt
je
or
or
inc
inc
fcompl
sub
testl
lods
jmp
adc
daa
dec
imul
mov
decb
mov
mov
js
notl
adc
sub
and
lahf
xchg
jae
mov
call
cli
in
sub
inc
pop
icebp
xor
mov
cld
pop
pop
aad
jno
jnp
jl
pop
leave
fdivrl
sbb
adc
cld
movsl
fcompl
xchg
and
aad
inc
jecxz
ljmp
jge
jbe
dec
ljmp
fwait
cmp
fldenv
jle
outsl
inc
xchg
lds
adc
mov
imul
xchg
mov
repz
xchg
and
sub
mov
icebp
test
xor
lahf
mov
and
sti
sub
pop
ret
pop
repnz
mov
mov
adc
lahf
jecxz
jle
and
cmp
adc
into
or
enter
loope
and
lcall
or
jnp
mov
pop
andb
mov
lret
dec
into
sub
cmp
jmp
dec
push
mov
add
pushf
enter
icebp
js
mov
imul
mov
out
inc
adc
lods
xchg
inc
mov
mov
inc
pop
adc
pop
pop
sub
fstl
inc
int
fstpt
mov
jmp
cmc
mov
xor
insl
insl
lods
pop
ljmp
clc
push
jb
pop
adc
lahf
mov
out
das
inc
jle
add
mov
adc
imul
add
ficompl
dec
mov
iret
popa
or
sarl
shlb
mov
loop
jns
jb
cmp
faddp
test
lods
mov
pushf
fistl
addr16
scas
cmc
in
xchg
mov
int3
adcl
movsl
cmp
loop
dec
out
jle
dec
daa
bound
adc
addr16
loop
lret
lret
xchg
imul
dec
in
addb
mov
inc
stos
xlat
frstor
ss
int3
xor
imul
repnz
cmp
daa
push
ja
outsl
cmpsl
in
inc
rclb
jbe
sub
int3
fcoml
outsl
out
jb
fmuls
dec
dec
dec
aas
loop
lods
mov
xchg
mov
hlt
and
rorl
sbb
push
mov
stos
cmpb
adc
test
lods
out
mov
jbe
fsubrs
sbb
loope
scas
xchg
add
jne
ljmp
cmp
pop
mov
into
mov
out
push
push
jmp
js
arpl
sti
xchg
cmp
inc
pushf
sahf
xchg
je
mov
xor
xchg
pop
loop
xchg
aaa
fdiv
stos
sub
std
add
jo
fimull
int
fs
sbb
out
out
in
push
iret
mov
clc
stc
pop
popf
dec
loope
fnsave
xor
shlb
push
es
rcrl
jmp
pop
xchg
scas
scas
in
pop
mov
cmp
subb
sar
test
subl
repz
cmp
lods
sub
inc
dec
cmp
mov
lea
divb
mov
lahf
sbb
stos
xor
les
and
xchg
or
adc
das
sbb
mov
xor
mov
dec
push
mov
lock
inc
mov
int
cld
mov
add
fidivrs
test
jo
xchg
mov
mov
xchg
jmp
fdivrp
fildll
jmp
cmp
push
das
dec
imulb
arpl
aas
loop
insb
cmc
cmpsb
mov
rcrl
xor
inc
adc
iret
dec
cli
lock
iret
dec
push
or
sti
fbld
call
test
pop
jnp
iret
jecxz
or
stos
in
add
mov
mov
sbb
push
mov
xor
aam
push
bound
inc
mov
test
xchg
push
dec
pushf
mov
adc
jle
pop
xchg
sbb
shlb
cmp
ljmp
int
das
jb
mov
hlt
cwtl
out
outsb
pop
dec
xchg
xchg
mov
iret
cltd
popf
les
int3
jnp
leave
jb
outsl
stc
aam
daa
int3
iret
insl
or
ret
push
mov
dec
lret
shlb
mov
xchg
lods
out
bound
mov
push
outsb
out
mov
mov
hlt
mov
mov
int3
xor
lock
xchg
mov
mov
xor
sbb
inc
gs
in
mov
je
mov
pop
std
fmulp
mov
dec
data16
xor
mov
adc
pop
adc
stos
pusha
hlt
mov
fadds
data16
ffreep
add
sub
xor
outsb
mov
imull
fisttps
add
or
mov
xor
fimull
fdivrs
push
nop
les
jns
ja
sar
lea
and
js
mov
hlt
dec
sub
or
mov
stos
push
dec
nop
lcall
push
les
mov
dec
test
in
adc
pop
and
xchg
lahf
mov
lods
lods
int
bnd
jp
xor
fcmove
dec
dec
lret
push
sub
ret
push
push
out
sub
in
jbe
imulb
mov
add
sub
sti
leave
push
add
mov
movsl
push
jg
jne
jo
mull
dec
inc
add
pusha
add
aam
lock
icebp
xchg
sbb
sbb
push
xor
loop
sub
outsb
aam
jne
mov
mov
cltd
cmp
and
clc
stos
cmpsb
push
mov
aam
dec
mov
xchg
mov
xchg
dec
leave
cwtl
xchg
sbb
sub
and
dec
jo
jl
mov
pop
mov
mov
mov
sub
mov
jae
jmp
sub
dec
dec
sub
or
pop
mov
dec
lahf
cmpb
lea
pop
xchg
and
out
lock
push
enter
lahf
test
jmp
lea
orl
push
rcrb
call
mov
aad
test
inc
push
das
xor
cwtl
sbbb
fwait
leave
xchg
rcrl
cmc
js
stos
xchg
dec
mov
lret
mov
fsubp
mov
in
ja
ret
nop
jmp
cmpb
in
iret
js
jne
out
stc
ret
sbb
mov
arpl
insb
cltd
jp
fcmovnbe
xor
mov
mov
jl
mov
xor
fchs
lock
xor
sarb
sti
cwtl
shlb
adc
push
cmp
cli
or
repnz
lret
jecxz
and
xchg
pushf
aam
mov
dec
stos
jnp
imul
in
mov
test
push
and
lret
mov
add
jg
xchg
daa
bound
adc
mov
sub
pusha
cmp
mov
out
in
cmp
fsubl
lret
xchg
sub
sbb
jo
negl
dec
pop
or
cmpsl
pop
and
data16
cs
pop
inc
jmp
mov
iret
mov
pop
xor
mov
xchg
cmp
add
jge
adc
mov
or
ficoml
in
xor
and
daa
cli
loop
cmpsb
fistps
inc
lret
xchg
stc
push
into
dec
lods
aam
repz
mov
mov
inc
ja
mov
stos
roll
ds
shrl
jmp
ficompl
addr16
and
ljmp
inc
jns
mov
int
jecxz
stos
idiv
push
mov
add
fiadds
sbb
nop
mov
mov
xor
jp
cs
divb
dec
mov
xchg
int3
push
loopne
or
xchg
xor
lahf
decb
div
push
ja
cs
fidivl
movsl
fcom
enter
test
cwtl
nop
mov
jo
inc
pop
push
dec
and
xor
add
adc
loopne
lock
mov
cwtl
nop
mov
jo
inc
pop
push
dec
and
xor
add
adc
loopne
lock
mov
cwtl
nop
mov
jo
inc
pop
push
dec
and
xor
add
or
cld
icebp
in
rcr
enter
test
cwtl
nop
dec
pusha
js
ret
push
aas
push
mov
push
jmp
ja
adc
sti
jae
arpl
data16
adc
dec
fwait
xchg
imul
icebp
dec
ret
pop
xchg
sub
cmp
jmp
sti
inc
lret
arpl
adc
and
fldcw
pop
xchg
dec
and
inc
cmpb
dec
mov
sti
imul
or
xor
shll
sub
lret
jmp
xchg
aas
mov
pushl
add
cmp
cmp
jg
mov
pusha
into
ljmp
cld
inc
ret
lret
ljmp
and
dec
das
sub
clc
pop
or
xchg
fsubrp
inc
cmp
mov
andl
cmp
shl
cmp
mov
or
cmp
lret
or
fucomi
arpl
stos
push
rcr
jo
fs
stos
sub
jle
cmpsl
push
sub
repz
dec
mov
mov
pop
inc
pop
and
cmp
out
jecxz
cmp
cmp
sbb
mov
inc
inc
cmp
out
loope
in
mov
ror
or
imul
mov
inc
push
sub
lahf
xchg
jmp
or
je
add
cmp
lret
mov
mov
fwait
ret
mov
mov
sti
push
mov
cmc
ja
outsb
aam
loop
cmpsl
sub
lea
incl
dec
jp
scas
inc
mov
les
pop
in
not
push
ret
sub
idivb
ja
push
jo
mov
arpl
xor
ret
jnp
dec
jecxz
xchg
sub
sbb
inc
sti
jae
arpl
adc
and
repz
jecxz
xchg
sub
sbb
subb
or
cmp
das
cwtl
mov
jnp
std
stos
mov
or
dec
xor
mov
hlt
gs
outsl
inc
sbb
mov
aad
mov
ljmp
jp
and
out
rcrb
cmc
popa
sbb
pop
jns
or
fwait
inc
loope
cmp
cmpsb
imul
clc
mov
push
je
add
mov
nop
xor
push
add
hlt
cmp
pop
or
adc
mov
movsl
and
ss
xor
icebp
mov
loope
test
in
out
fisubrl
fnstcw
test
mov
jg
iret
mov
push
loopne
jle
gs
sbb
iret
es
jns
loope
mov
push
adc
mov
inc
int
test
shrb
sbb
jno
jmp
xor
mov
insl
in
mov
sub
cwtl
and
test
cld
loopne
iret
mov
push
dec
aam
xor
lods
mov
pop
sub
mov
xchg
pop
lret
xor
pop
loope
cli
mov
adc
cld
push
popa
cmp
popf
inc
mov
insb
inc
xchg
cli
xor
sbb
jmp
xor
outsb
fldt
cmp
inc
xchg
ja
in
push
or
inc
dec
push
stos
mov
dec
sbbl
icebp
std
pop
andl
dec
mov
dec
xchg
or
push
and
lret
rolb
push
xor
add
aaa
cmpsb
pop
ror
adc
sub
popf
dec
and
or
cmc
inc
pop
jmp
in
inc
jl
cmpsl
rcl
ret
frstor
sbb
loop
cs
and
add
push
and
sbb
pop
adc
pop
negl
out
push
inc
mov
dec
mov
or
ljmp
sub
jecxz
push
or
push
mov
mov
pop
xor
daa
adc
out
in
mov
sbb
popl
jp
mov
xor
test
xor
dec
sahf
push
imul
clc
fcomi
addr16
pusha
call
sbb
mov
add
pop
cwtl
sbb
testl
out
push
fwait
imul
mov
jecxz
incl
sub
mov
mov
and
sub
cld
push
stos
add
xor
jnp
jns
in
iret
jge
cmpsl
mov
jle
jp
out
mov
in
push
mov
aad
jno
inc
mov
jecxz
add
insb
sub
push
lea
lods
and
fimull
dec
inc
arpl
mov
cmp
jno
ret
xchg
xor
jns
pop
ret
sti
add
mov
mov
mov
shll
pop
pop
mov
icebp
insb
insb
adc
scas
dec
jb
loopne
mov
gs
mov
mov
popa
leave
push
mov
xchg
pusha
or
fwait
or
push
push
pop
rol
and
mov
mov
mov
jg
ljmp
out
fs
mov
jno
sub
fistpll
dec
into
sub
in
xlat
outsb
and
pop
aaa
or
lea
test
push
gs
leave
or
mov
stos
jg
jns
cmc
hlt
les
shrb
andb
mov
rolb
mov
jno
enter
xchg
pusha
clc
cmp
sbb
lahf
insb
add
pushf
sub
stos
xorl
pop
mov
movsb
fimull
pop
mov
dec
inc
xabort
xor
gs
loopne
lea
cmp
lods
inc
or
fisubrs
adc
loop
mov
js
fsubs
pop
inc
push
sti
out
or
sar
mov
bound
dec
stos
jecxz
pop
into
dec
mov
pop
sub
mov
sub
mov
and
insb
or
xchg
mov
push
and
icebp
shr
jle
loop
in
lods
mov
jl
jge
xorb
in
imul
pop
inc
jnp
shll
shl
mov
mov
xchg
arpl
and
add
orb
sbb
enter
mov
cmp
sar
cld
ret
adc
fstl
adc
icebp
fsts
pop
and
mov
and
stos
add
jmp
mov
pop
dec
stos
xor
sub
sub
lds
jecxz
jns
jge
dec
sahf
adc
arpl
mov
xor
xchg
inc
cmp
adc
leave
mov
mov
xor
sbb
aaa
sub
movsb
in
add
push
xlat
xchg
mov
xchg
ja
out
xor
aam
subl
movsl
fwait
and
push
sub
mov
popa
xor
dec
inc
jbe
jne
mov
cmp
mov
mov
test
inc
jecxz
mov
enter
test
mov
out
xor
jmp
dec
push
push
mov
push
push
cmp
push
pop
iret
push
rolb
addr16
sti
adc
scas
enter
push
aad
test
lcall
ljmp
push
dec
in
imul
xchg
xchg
or
xor
mov
cmpsb
stos
jno
ds
cmp
loope
addr16
mov
mov
inc
jle
jecxz
sbb
cmp
mov
sbb
test
xor
jp
inc
ficompl
mov
ss
sub
imul
jns
gs
ret
mov
cmp
mov
sbb
enter
in
test
je
add
bswap
test
jp
cmp
jl
pop
rcrb
sub
scas
jae
xor
xor
jae
dec
add
ja
andb
lcall
repz
repnz
pop
in
jo
gs
movsl
pusha
lods
and
rcr
ds
and
xor
sbb
jmp
push
dec
xor
cwtl
call
scas
dec
cs
lds
js
idiv
jb
pop
sbb
add
sub
pop
or
imul
xchg
inc
js
xchg
adc
adcl
cmpsl
mov
enter
or
pop
stos
sbb
enter
pop
sub
pop
inc
test
sbb
jns
loopne
test
inc
and
inc
and
orl
mov
or
push
in
fdivl
inc
pop
lods
js,pt
mov
or
adc
jmp
push
in
pop
pop
push
es
or
cmp
xchg
pop
aad
inc
les
shlb
xchg
subw
mov
jnp
xor
dec
cmp
inc
xor
popf
bound
loope
inc
jnp
setne
push
xchg
adcb
dec
add
shll
xor
and
mov
pop
sarl
inc
dec
push
push
xchg
inc
jle
adc
hlt
dec
inc
cmp
cmp
inc
test
jmp
je
xor
and
movsl
cmpsl
adc
mov
push
rolb
les
icebp
mov
inc
lods
pop
mov
lds
and
enter
mov
orl
pop
popf
push
imul
popa
xchg
addb
ret
inc
pop
mov
cltd
ret
push
xchg
and
or
sbb
xor
lods
sbb
enter
in
rclb
and
sub
push
jge
inc
ret
jge
xor
jns
aaa
aam
movsb
jg
add
dec
loop
test
push
fldl
int
mov
imul
cs
fcomps
mov
fimull
cs
mov
push
lcall
xchg
lcall
sub
ret
stos
inc
push
test
loopne
push
fcomi
inc
sti
add
scas
movups
inc
sub
lods
sbbl
stc
test
daa
push
das
adc
aas
orl
cld
inc
sbb
pop
sub
cltd
and
jp
jp
int3
test
push
dec
pop
and
cmpb
pop
lds
pop
sub
mov
aas
adc
bound
loopne
mov
adc
pop
jp
les
push
in
shl
adc
sub
mov
fiaddl
and
sbbb
sub
sahf
movsl
cmp
icebp
jg
or
and
or
ds
xor
ds
fiaddl
inc
testl
frstor
mov
or
jmp
rcl
add
xor
ret
imul
cmc
push
int3
lret
imul
add
loopne
mov
jno
add
cmpsb
pop
push
or
aad
or
aas
stc
push
aas
in
lret
xor
shrl
jle
or
xlat
popf
jmp
sti
repz
arpl
jbe
shrb
push
mov
in
add
mov
mov
repnz
xchg
push
jg
mov
test
jb
lret
push
ja
lods
ret
sbb
fnstsw
cmc
test
add
punpckhbw
adc
in
mov
int
and
dec
or
dec
fcomps
sbb
scas
fsubrs
fdiv
push
dec
jbe
jne
jge
cmp
xchg
jne
popa
ret
insl
push
adc
fwait
lcall
dec
adc
xor
popf
push
mov
push
add
or
jbe
arpl
mov
repz
and
es
iret
das
popa
fwait
pop
in
xchg
orb
jo
jns
jbe
mov
pop
push
xor
testl
mov
ficoms
mov
or
inc
jl
push
lds
loop
mov
inc
cli
inc
push
pop
arpl
jnp
cmpsl
mov
jge
test
fiadds
xchg
fistl
data16
stos
sahf
jg
xchg
stc
inc
insl
adc
shrl
pusha
sub
dec
mov
out
xchg
ljmp
in
js
add
fidivl
add
iret
push
xchg
dec
fcoml
addr16
mov
push
jmp
test
add
and
insb
or
adc
popa
xchg
push
sahf
push
insl
call
lds
or
mov
dec
popf
pusha
sbbl
jp
pop
lcall
ficoml
or
int
cmp
mov
lret
or
test
mov
push
cmpl
push
out
shlb
mov
mov
fdivp
and
lea
dec
pop
pop
aad
xchg
nop
insb
sub
or
push
mov
int3
shl
je
fdivs
or
jle
pop
loop
mov
jg
hlt
loope
mov
mov
push
pop
outsl
iret
inc
out
ret
add
add
ljmp
xchg
and
xor
fwait
or
cmp
jecxz
add
xchg
mov
add
mov
sahf
arpl
sub
push
aas
mov
sbb
mov
adc
mov
xchg
adcb
lcall
mov
lcall
inc
and
ljmp
fmul
scas
rcrb
repnz
jmp
sbb
push
aam
jae
xchg
mov
adc
pop
xchg
mov
retw
mov
arpl
shlb
pop
xor
stos
mov
test
ljmp
das
sub
call
mov
mov
ficomps
sbb
pop
and
sub
outsb
int
movsb
sbb
idivb
popa
pop
pushf
or
jmp
push
int
xchg
xchg
dec
inc
mov
aad
and
mov
fstpl
cmp
fiadds
arpl
mov
cmp
sub
mov
mull
mov
pusha
stos
xchg
mov
cs
adc
or
xor
hlt
aaa
int3
lcall
les
das
jne
arpl
push
add
fcoml
or
adc
push
int3
das
lods
xchg
repnz
cmp
ja
lret
push
out
cmp
adc
stos
add
int
jo
loopne
pop
in
scas
mov
mov
push
icebp
add
or
lea
lea
cmpsb
andb
rol
lret
sbb
cli
out
dec
loope
int
fcmovne
inc
mov
mov
in
das
xchg
loope
add
or
int3
js
mov
imull
cmp
fldenv
push
mov
clc
mov
jg
in
rcrl
mov
fildll
inc
jnp
in
enter
add
and
call
or
sti
insb
jne
iret
sbb
sbb
jns
scas
sub
jnp
dec
pop
push
fists
and
adc
sub
popa
xchg
cmp
popf
movsb
js
ja
icebp
fdivrp
push
mull
hlt
cmp
mov
push
rolb
dec
inc
lret
clc
loope
or
idiv
mov
pop
inc
cwtl
ljmp
stc
rolb
test
rclb
inc
lahf
test
std
or
mov
lea
andl
jb
sub
mov
inc
leave
aas
and
enter
jno
mov
sub
call
adc
dec
jge
lock
mov
cmpb
or
jne
sub
jp
iret
sub
cmpsl
imul
pushf
mov
sbb
add
test
in
loop
mov
aas
cmp
cmpsb
and
xchg
into
mull
aad
xor
pushf
push
xor
mov
mov
mov
push
xchg
mov
insb
mov
ret
lahf
std
ss
jns
or
push
cmp
shr
pop
xchg
ret
dec
push
fs
cmp
aas
stos
xchg
divl
mov
cmp
pop
loopne
aad
lcall
cmp
cld
sub
stc
lcall
cmp
fsubs
rol
repz
adc
pop
sahf
xor
out
in
stc
jae
jnp
jae
mov
fstpl
call
mov
punpckhbw
push
nop
mov
push
aam
dec
nop
push
and
jmp
adc
stos
divl
jecxz
sarb
mov
inc
xor
jle
push
jo
pop
leave
jmp
inc
js
or
push
xchg
jnp
lret
fwait
pusha
mov
iret
cs
in
lods
int
ja
jle
mov
mov
push
sbbl
add
pop
xor
insb
insb
cmc
jle
les
mov
ljmp
faddl
jno
ljmp
mov
jb
pop
ds
fidivrl
cmpb
or
pop
or
xorl
xor
ret
dec
jp
xor
mov
arpl
pop
shrl
imul
sbb
xor
mov
repz
in
mov
push
dec
out
xor
dec
add
hlt
sub
jo
iret
rol
pop
pushf
mov
int3
dec
loope
leave
inc
push
aad
imul
lahf
or
or
push
add
ss
xor
add
sahf
pop
ja
in
pop
mov
and
testb
pop
mov
lods
leave
fnstcw
je
int3
xchg
inc
add
jne
add
mov
daa
mov
pushf
jle
fs
push
jno
mov
add
shlb
out
lcall
mov
jp
mov
lret
xchg
cld
lods
mov
jne
lcall
dec
ret
icebp
scas
inc
arpl
mov
movsl
retw
mov
pushf
cmc
les
jl
out
push
push
add
inc
and
js
lahf
test
into
mov
pusha
and
into
cli
or
push
adcl
and
dec
insb
inc
lahf
adc
mov
cmp
jne
aad
stos
jne
ds
pop
mov
clc
gs
out
push
pop
dec
add
mov
jae
cmp
out
xchg
jg
mov
pop
pop
pop
and
add
icebp
push
clc
push
mov
mov
loop
popa
int
ja
mov
dec
and
aas
sbb
cltd
dec
push
test
mov
sbbl
xlat
inc
mov
nop
pop
push
out
jp
cld
clc
clc
faddl
jecxz
and
xchg
mov
push
xorb
and
cmp
sti
scas
das
sbb
xlat
lahf
movsl
subl
mov
cmp
and
and
cld
sbb
loopne
or
aam
jecxz
arpl
hlt
lahf
mov
and
test
jp
adc
dec
xchg
fmul
call
xchg
pop
repz
dec
xor
movl
rorb
add
icebp
and
mov
pop
dec
lahf
jb
sub
in
fnstcw
or
iret
cli
iret
rcll
std
int
mov
loop
jae
mov
test
sbb
lds
add
shll
push
and
xor
and
fsubp
popf
inc
push
outsl
test
inc
dec
clc
jo
or
xchg
into
popf
data16
insl
outsl
xor
dec
stc
jg
cmpsb
out
cmp
into
fadds
dec
push
jne
cmp
aam
mov
je
fstps
add
mov
mov
repnz
dec
dec
mov
cld
and
std
jmp
in
xchg
xchg
loopne
fcmovb
pop
ror
in
and
mov
jg
mov
sub
aad
ret
jmp
int3
dec
mov
inc
jle
ret
push
movsl
adc
pop
loop
icebp
lods
sub
outsl
popf
dec
jmp
and
sbb
xor
jae
test
dec
fadd
mov
cmc
mov
cmc
dec
fdivl
incb
daa
ljmp
fdivrs
cli
jno
mov
out
xor
jbe
inc
sti
scas
fwait
xchg
repz
or
dec
lret
and
xor
mov
push
sub
xlat
iret
mov
mov
mov
mov
mov
arpl
mov
adc
flds
ret
scas
adc
cwtl
pop
jl
pop
std
jecxz
icebp
test
aaa
test
aas
mov
repnz
push
jae
int3
lret
cld
or
xchg
inc
mov
fadds
xchg
mov
sahf
inc
push
push
push
jp
fbstp
cli
mov
xor
mov
shll
outsl
jno
loopne
mov
les
adc
jecxz
imul
and
mov
shr
shr
in
or
jmp
mov
dec
pop
jo
insb
jmp
and
icebp
and
in
sub
push
lcall
inc
cltd
sti
in
xchg
popf
xchg
addr16
mov
les
mov
das
adc
xor
hlt
fisttps
fs
fs
sub
pop
jle
inc
sub
loop
mov
ja
cmc
mov
popa
ja
adcl
jns
ret
out
fs
mulb
or
xor
mov
mov
lea
mov
fildl
leave
enter
push
mov
xor
in
rolb
lock
xor
mov
mov
cmpsb
es
out
into
cmp
pusha
stos
inc
lahf
loope
dec
mov
sub
jle
add
aad
xor
pop
es
sbb
std
cmpsl
jbe
imul
mull
cmpsb
or
data16
mov
pop
xorb
stos
lcall
sbb
jb
cmp
popa
xchg
imul
add
iret
sarl
push
inc
pop
stos
dec
cmc
jns
jle
ljmp
cmp
arpl
add
add
sub
aaa
xchg
int3
mov
ja
pop
incb
test
push
cli
insb
int
and
out
js
sti
test
fists
dec
pusha
jae
sahf
in
dec
ret
dec
js
div
mov
std
dec
pop
jecxz
dec
movsb
push
insb
mov
mov
jb
fistps
lea
sub
std
int
jne
in
xchg
push
movsl
ljmp
mov
jno
cmc
leave
clc
sub
and
leave
push
mov
jnp
mov
fstpl
daa
stc
sbb
add
lea
into
test
out
xor
fcmovnu
or
xor
es
xchg
lfs
adc
mov
shr
sbb
inc
push
mov
into
sub
mov
fwait
xor
sub
daa
idivb
jg
setns
hlt
or
jbe
mov
xchg
jne
xchg
insb
push
cmp
dec
jecxz
xchg
jmp
aas
or
lds
mov
pusha
lea
sahf
pusha
pop
in
adc
jns
call
adc
cmpsb
xchg
in
fidivrl
cmp
fidivs
bnd
xchg
bnd
xor
mov
stos
ftst
mov
xchg
lods
xor
jge
in
xor
divl
mov
inc
jb
incl
ljmp
mov
jne
insb
pop
jg
in
lds
cld
gs
cs
jns
cs
cld
sub
sub
fbld
ds
imul
jne
fwait
clc
dec
add
and
dec
imul
js
add
add
dec
movsb
push
out
jne
ret
out
nop
mov
sti
fisubl
add
shrl
jnp
dec
jecxz
xchg
sub
sbb
inc
sti
jae
arpl
adc
and
repz
jecxz
xchg
sub
sbb
inc
mov
mov
fistl
stos
add
xor
ret
jnp
dec
jecxz
xchg
sub
sbb
ja
inc
lret
arpl
adc
mov
rcrl
jecxz
in
or
dec
hlt
pop
in
xor
rolb
in
cmc
inc
pusha
mov
movsl
inc
xchg
push
test
cmc
xor
loopne
lock
mov
push
nop
inc
pusha
mov
movsl
xor
push
test
cmc
xor
add
adc
loopne
lock
mov
push
nop
inc
pusha
mov
xor
jle
dec
cmpsl
push
orl
lock
mov
mov
movsb
or
cmpsb
mov
xchg
add
stos
repnz
imul
cli
mov
dec
xchg
or
int
aad
fbstp
out
cmp
and
or
pop
imul
push
jle
pusha
jne
pop
mov
cmc
mov
les
adc
adc
mov
pusha
mov
imul
cmpsb
pop
mov
sub
in
test
fldcw
jne
lcall
mov
cmp
add
fldl
mov
sbb
xor
mov
xchg
adc
adc
sarb
xor
rolb
adcb
pusha
mov
movsl
inc
xchg
push
test
cmc
xor
add
adc
movsl
push
mov
int3
sbb
and
xor
xor
and
cmp
inc
cwtl
pop
pushf
inc
push
inc
mov
nop
adc
fmull
cmp
leave
add
adc
mov
adc
test
sbb
inc
pusha
mov
movsl
inc
xchg
push
test
cmc
xor
add
adc
loopne
lock
mov
push
nop
inc
pusha
mov
movsl
inc
xchg
push
test
cmc
xor
add
adc
loopne
push
xor
hlt
aam
mov
jae
add
popa
ror
add
test
and
adc
inc
int3
repnz
sahf
roll
lea
test
cltd
mov
add
and
or
stc
mov
push
dec
pushf
out
int
xor
lods
sub
jg
into
enter
das
sbb
test
pushf
bnd
push
rclb
ret
sbb
lret
mov
lret
push
xor
repnz
jge
xchg
mov
push
and
dec
ret
sub
imul
outsb
test
add
mov
insl
mov
xor
frstor
push
fidivrs
push
out
fwait
aas
sbb
aas
adc
mov
xlat
test
xchg
mov
jmp
push
lea
dec
pop
jg
pop
and
push
repnz
mov
or
jnp
test
sbb
fucomp
jecxz
in
mov
pop
jl
jmp
jmp
mov
sbb
ret
xchg
adc
nop
iret
loopne
push
push
in
jecxz
sub
or
inc
mov
mov
aam
lods
xchg
std
hlt
cmp
mov
xchg
pop
addr16
push
sbb
das
scas
ljmp
xchg
lret
and
int3
inc
nop
and
je
outsb
bound
mov
in
out
in
sub
mov
adc
in
inc
les
mov
scas
lea
and
cli
mov
je
pop
push
test
sbb
stc
or
gs
daa
push
push
push
and
sti
adc
subb
ret
fucomip
ret
lret
notl
andl
pop
sbb
cld
loope
add
sbb
and
mov
iret
test
and
mov
mov
std
int
dec
sub
xchg
testl
arpl
xor
sti
pop
scas
aam
outsb
lds
pop
and
aaa
lock
insl
and
mov
cmp
shrb
sbb
inc
jg
mov
inc
mov
xchg
andl
inc
jnp
jecxz
adc
xchg
lahf
mov
insl
adc
inc
insl
iret
sub
jmp
ja
cltd
js
mov
bound
xor
movsb
out
aas
loope
rorl
mov
pop
push
test
lret
leave
jns
pop
decb
test
fdivrs
mov
lods
rcll
inc
pop
jl
ret
lcall
mov
ret
inc
fscale
xor
xchg
jl
out
dec
stos
mov
rolb
pop
scas
outsb
mov
inc
jo
xchg
xchg
inc
adc
push
push
lahf
rorl
cmp
lods
push
fidivrs
cmp
add
pop
lods
lods
repz
and
xchg
inc
mov
aaa
xor
jle
cmc
mov
std
mov
xlat
cltd
push
jns
jge
clc
outsb
inc
mov
mov
loopne
jo
cmpsl
ja
mov
loopne
outsb
nop
and
pop
in
push
shll
fcmovnb
mov
adc
lds
orl
xchg
pop
adc
xchg
iret
lods
lret
add
test
sub
sbb
test
dec
jns
dec
xor
xchg
les
and
iret
and
maxps
push
or
adc
stc
cwtl
dec
or
sbb
rclb
test
sbb
shrb
inc
mov
pusha
aad
je
mov
sbb
dec
xor
arpl
testl
ror
mov
push
aas
inc
mov
int3
dec
daa
sub
mov
fidivrl
or
mov
popf
inc
xor
inc
sbb
push
loope
fisubrs
dec
jae
insw
shrl
fiaddl
out
rcll
add
xchg
int3
and
jbe
xorb
xor
fsubl
adc
xchg
add
das
dec
adc
gs
push
call
jle
sbb
mov
mov
lret
dec
test
mov
ret
xchg
out
pop
clc
cmc
jecxz
mov
cld
mov
cmpsb
aas
jg
mov
cmp
ss
test
fs
or
movsl
ret
aad
sub
rcl
or
aaa
or
mov
xor
adc
sub
xor
add
mov
xor
xlat
push
jb
sbb
loopne
or
sub
ljmp
dec
pushf
sub
xor
inc
push
adc
push
dec
punpckhbw
bound
jge
push
jo
in
push
imull
sub
popf
inc
mov
es
inc
divl
jo
and
lea
pop
sbb
arpl
cld
and
das
inc
inc
mov
inc
sbb
pusha
push
sti
fwait
aad
jmp
and
outsl
inc
push
dec
pop
shll
jecxz
jo
movsb
adc
inc
ljmp
add
and
int
jle
sub
fldenv
daa
cld
push
dec
push
out
sub
add
add
dec
jns
add
push
mov
xchg
fdivr
dec
test
not
push
bound
lock
pop
mov
push
rclb
add
sbb
mov
das
inc
inc
or
in
sbb
adc
jle
pop
cmp
mov
push
cmpsl
lds
push
in
mov
pop
leave
xor
orb
dec
pusha
outsb
nop
fstpt
or
cmp
pop
movsb
and
lods
mov
sbb
shrl
cwtl
cmp
cmp
aad
and
cmp
mov
out
xlat
mov
cmp
test
fsubrl
hlt
inc
pop
fwait
repz
push
mov
sbb
rorl
sahf
xor
xchg
push
movsl
jmp
aaa
jno
lds
sti
adc
lahf
lret
inc
dec
sbb
xor
dec
mov
and
add
test
sarb
insl
pusha
imul
jnp
mov
or
lock
inc
repnz
into
mov
and
es
mov
cmpsl
rcll
or
test
clc
icebp
push
dec
mov
dec
stos
into
push
push
ja
jo
cmp
pusha
stc
movl
icebp
cmp
shll
out
inc
push
addr16
sbb
iret
xor
gs
adc
ret
mov
jae
lcall
cwtl
clc
lret
and
sahf
sbb
and
jnp
cmp
push
push
dec
adc
xchg
dec
xor
sub
adc
in
cmp
adc
xchg
test
pop
jno
and
inc
push
mov
push
xchg
sbb
test
add
dec
xchg
outsb
inc
push
out
das
and
addr16
sahf
stc
iret
mov
outsl
jnp
filds
push
aas
sub
imul
gs
test
loop
sti
les
push
out
shl
es
pusha
xor
mov
daa
rolb
shlb
lret
mov
sub
test
push
into
enter
movsb
ss
dec
pop
enter
mov
or
fucomi
scas
inc
jmp
dec
dec
jl
push
jbe
insl
push
test
push
in
xor
jae
fstps
push
clc
jns
dec
shrb
push
jle
fimuls
jno
in
mov
xchg
push
mov
add
aam
fisttpl
aad
jno
negb
mov
inc
inc
mov
add
lods
in
test
daa
dec
dec
sbb
and
dec
dec
test
lds
sbb
aam
cs
hlt
fldl
add
adc
shlb
int3
js
push
test
sbb
pop
cmp
mov
xlat
jmp
mov
les
jle
xor
test
repz
sbb
in
pop
sub
mov
or
jne
pushf
cmpsb
popa
xor
stos
aas
pushl
outsl
xlat
std
rcrl
pop
in
jbe
vprotw
sbb
adc
mov
fnstsw
aas
mov
sub
or
js
xor
mov
push
mov
out
pop
and
push
sbb
iret
aam
push
addl
jno
sub
and
test
outsl
lock
fmuls
pop
xor
sub
cli
cld
jecxz
gs
out
xchg
mov
test
or
push
cmp
cli
jge
mov
lret
or
adcb
pop
scas
arpl
cmpsl
and
or
lock
jmp
stos
or
imul
xchg
out
mov
sub
lahf
rorl
mov
push
or
mov
sub
popf
movsl
mov
adc
cmpsl
in
rcll
andnps
add
cmp
push
xchg
inc
mov
daa
or
push
test
arpl
ret
insb
pop
cmpsl
cltd
add
lcall
sbb
pop
inc
je
cmp
aas
xor
imul
cmp
pop
jp
sub
aam
sbb
imul
cmpsb
ljmp
mov
in
inc
imul
fdivrl
das
push
mov
decb
daa
ljmp
cli
loop
rorl
inc
jb
jle
outsl
xlat
in
mov
jns
es
cli
push
mov
ja
sbb
out
xor
in
mov
pop
push
test
mov
pusha
addb
sub
mov
inc
sbbb
fs
mov
shlb
loopne
repnz
jge
mov
push
xchg
loope
add
mov
dec
pushf
fs
adc
das
xchg
cwtl
add
ret
xlat
or
cmpsb
xchg
jmp
sti
scas
fbld
xchg
outsb
repz
mov
cmp
ret
jg
mov
push
ljmp
mov
sbb
jp
leave
sahf
ja
les
cpuid
and
enter
in
lret
push
stos
xor
pusha
fisttps
inc
xor
popl
xchg
insl
mov
or
mov
mov
or
mov
pop
out
pusha
pop
sahf
add
dec
int
in
or
std
nop
std
dec
in
adc
or
sub
adc
sbb
insl
cltd
cmp
popf
add
clc
pop
dec
outsl
and
xchg
loope
xchg
xor
jb
cmp
cmpsl
scas
sahf
mov
and
clc
cmp
or
cmp
int3
mov
mov
mov
lea
sbb
xor
popf
aas
ja
les
jno
xchg
mov
nop
push
cmp
cmp
pop
adc
adc
sub
adc
fwait
pop
jmp
xorl
jl
dec
lea
inc
setae
loop
push
push
inc
jb
lea
xchg
out
iret
and
and
fmuls
jo
dec
insl
jmp
jnp
shrb
lds
add
dec
jb
push
scas
and
frstor
ja
scas
repz
push
inc
int
leave
push
inc
sbb
outsl
sbb
mov
dec
mov
sahf
sub
ljmp
push
sub
sbb
test
jmp
adc
shlb
inc
hlt
push
outsb
xorl
aas
insl
push
ds
inc
imul
pop
xor
inc
aad
out
xor
test
es
movsl
insl
sub
mov
mov
pusha
rcl
lds
xchg
mov
dec
sub
push
cmp
test
movsl
je
mov
and
mov
lds
and
in
inc
icebp
xchg
mov
arpl
inc
and
mov
or
aas
sbb
push
push
jnp
mov
adc
push
mov
rcrb
push
daa
movsl
sub
fnstsw
or
push
sub
arpl
mov
pushf
dec
mov
and
std
orb
rcl
faddl
jno
and
ficoml
mov
or
jno
cltd
test
lahf
and
pop
push
sahf
test
sbb
sahf
adc
jl
js
sbb
inc
pushf
fistpll
movsl
enter
inc
xchg
aam
lahf
insl
xor
das
push
clc
pop
stc
dec
lods
insb
push
inc
xor
mov
xchg
dec
jmp
pmuludq
cmp
fsubrl
fcmovne
ss
in
into
jbe
hlt
js
push
sbb
adc
mov
std
aad
daa
decb
and
jb
jno
or
mov
loopne
add
push
les
dec
push
cld
xlat
popf
enter
cmp
cmp
xchg
sub
notl
iret
mov
imul
xchg
push
mov
faddp
inc
popf
mov
insb
shlb
jmp
ret
jae,pt
imul
mov
inc
push
outsl
add
mov
sbb
scas
add
sbb
pop
mov
sub
lcall
jmp
jne
dec
mov
mov
dec
jbe
sub
sbb
shlb
pop
imul
mov
add
imul
out
inc
sub
test
cmp
fimull
idiv
push
ljmp
ret
adc
or
popa
push
fwait
mov
sub
lods
push
es
push
and
loopne
jbe
pop
xor
ss
jo
xchg
push
gs
mov
adc
imul
jns
or
add
jmp
punpcklwd
mov
jp
lods
call
and
bound
or
es
and
inc
mov
loop
xor
test
shl
jnp
aam
popf
dec
sbb
loope
sub
mov
fs
shlb
sbb
sbb
or
add
inc
jcxz
loopne
pop
mov
cmc
test
pop
adc
int
imul
xchg
mov
pusha
stc
cld
test
das
lahf
ret
sbb
mov
aas
xchg
icebp
mov
fimuls
mov
fisubrl
les
mov
lret
dec
cmc
mov
jb
mov
pop
jnp
test
lea
add
mov
and
cmp
cmpsb
insb
dec
sub
dec
xchg
xor
jl
lods
dec
mov
lock
test
dec
out
xchg
rcll
sub
pop
sbb
fnsave
fisttpll
mov
xchg
push
and
dec
aaa
jmp
lea
inc
loope
jnp
imul
push
jmp
adc
jecxz
mov
outsb
adc
out
push
lock
shr
out
out
aad
push
loop
shlb
popa
in
sti
scas
dec
push
push
dec
cwtl
std
sbb
in
push
pop
fdivrl
jne
push
pop
sbb
pop
mov
rcll
cltd
cwtl
jle
dec
lahf
cmpsl
pushf
pop
xchg
jge
add
xor
lret
jmp
stc
mov
mov
dec
std
jg
rcll
pusha
inc
in
rdtsc
lcall
jecxz
adc
movsl
jmp
in
sbb
push
arpl
sub
lods
outsb
push
les
xlat
ret
jno
daa
xchg
leave
sbb
std
lcall
jae
inc
cmc
sub
pop
ja
fcompl
or
adc
jle
rcrb
pop
mov
shll
or
inc
aad
arpl
lds
mov
sub
in
fwait
cwtl
incb
fistpll
cmp
jecxz
jae
jno
das
xchg
adc
fisttps
sub
lods
dec
int3
xchg
sub
push
cmp
mov
cmp
mov
push
inc
lock
stos
and
and
xor
sarb
add
icebp
xor
xlat
lahf
add
lahf
mov
outsb
xor
popa
or
adc
ret
inc
sbb
arpl
adc
aaa
int3
mov
xchg
fidivl
cld
pop
pop
or
sbb
xor
loop
out
jo
add
mov
cltd
cmpsb
scas
jae
aam
pop
xchg
iret
rolb
movsl
mov
pop
mov
lods
jmp
dec
mov
push
add
stc
arpl
aad
sub
testb
aas
int3
cld
xchg
mov
dec
mov
imul
jno
mov
and
jmp
mov
stos
lock
jne,pt
dec
adc
dec
mov
xchg
mov
jnp
add
adcb
and
push
inc
lret
bound
call
lahf
mov
or
icebp
insb
or
and
loop
add
call
xor
lds
pop
aaa
xchg
jmp
pop
sub
outsl
pop
inc
lods
fisttpl
test
inc
and
inc
adc
pop
daa
aaa
jge
rcl
or
sbb
test
subl
push
push
loop
push
stc
or
fisubl
repnz
xor
or
jl
js
dec
bound
pop
outsb
inc
mov
inc
daa
mov
sbb
push
shrb
ljmp
sbb
jle
test
sub
and
sub
sub
pop
fistpl
je
in
sarl
xchg
into
adc
and
cli
adc
orl
jge
xlat
cmpl
xlat
je
cmp
mov
xlat
pop
pop
cmp
cld
loope
pop
add
rclb
mov
in
cmc
stos
in
cwtl
dec
jecxz
dec
xor
pop
cmp
pop
sbb
sub
or
mov
lcall
call
js
dec
pop
pop
xchg
cs
sbb
bound
push
mov
xchg
jno
mov
shrl
add
inc
fsubs
jne
ss
inc
push
jle
arpl
fstpt
inc
enter
jmp
jp
outsl
mov
outsl
addl
sub
clc
or
ja
leave
jno
gs
sbb
pop
jae
mov
xchg
xor
lret
icebp
pop
stos
das
push
cli
pusha
pop
std
cli
arpl
adc
into
insb
cmpsb
stos
repnz
into
xlat
jnp
sbb
test
cld
testl
jmp
push
lea
stos
scas
loop
mov
sub
and
fisttpll
mov
sub
ficomps
mov
lret
mov
test
fbstp
sti
hlt
xor
shrb
fs
adc
inc
ja
mov
iret
bound
mov
cld
es
loop
adc
sbb
add
jp
decl
and
adc
repz
mov
enter
inc
push
xor
repz
aad
mov
mov
fimuls
jae
stos
stos
cmc
xor
add
inc
mov
testb
jno
dec
es
mov
mov
xchg
and
mov
pop
sahf
adc
out
jle
sbb
rol
gs
hlt
mov
test
lret
and
ss
enter
out
dec
dec
sahf
sub
jmp
adc
and
test
arpl
jne
ret
add
aam
in
es
aad
jne
inc
push
pop
test
adc
js
ds
jl
shl
imul
and
sbb
lds
les
jns
cwtl
aad
add
dec
sub
add
jne
in
mov
cmp
test
icebp
xchg
ret
push
xor
out
out
rclb
lret
lea
add
leave
pop
mov
pop
sbb
adc
dec
cld
gs
pushf
adc
jl
sbb
dec
adc
mov
push
cltd
imul
mov
or
loopne
dec
imul
mov
sbb
mov
push
dec
mov
xor
sbb
ds
jns
xorl
fdivl
sbb
movsl
xlat
stc
stos
jg
dec
dec
sub
bound
lahf
mov
es
cltd
jnp
jno
mov
lods
pop
jb
adc
in
cli
call
subb
fidivrs
rcrb
cli
test
cmp
mov
cld
xchg
push
push
add
ljmp
ret
aas
in
sbb
ud1
and
notl
sbb
mov
aad
lahf
fs
lods
pop
pop
bound
mov
lcall
mov
loop
add
dec
xchg
mov
cmp
mov
pop
or
xlat
gs
fs
mov
mov
xchg
dec
sub
xchg
stc
notb
nop
aas
enter
inc
jns
jb
dec
inc
imul
fisttpl
popa
pop
inc
jmp
cmc
das
pop
pusha
pop
pop
testb
mov
dec
lret
cmpb
adc
pushf
cmp
inc
push
lods
dec
es
lods
dec
push
pop
out
xlat
cld
push
xchg
lea
pop
cmc
mov
mov
sub
add
test
jb
insl
insb
rorl
cmp
mov
xchg
add
pop
aaa
sbb
push
seto
fwait
stos
mov
push
mov
mov
lea
mov
out
arpl
js
pop
jnp
push
cwtl
clc
js
cltd
dec
or
and
fmuls
dec
fists
lahf
rol
push
cmp
mov
xlat
pop
in
mov
sub
sub
push
push
or
cli
scas
push
sahf
shrb
mov
pop
xchg
out
jecxz
fidivl
cmp
ret
enter
pop
cmp
mov
mov
sbb
inc
aad
popa
outsw
mov
push
ljmp
sbb
pushf
inc
aam
arpl
mov
rcll
sbbl
push
xor
hlt
andb
add
mov
mov
cli
clc
pop
push
sub
frstor
data16
push
push
sbb
out
jo
mov
inc
mov
xchg
mov
ja
test
mov
fists
push
cwtl
mov
cld
movsl
mov
out
push
js
outsb
jp
dec
adc
ss
add
adcb
pusha
mov
movsl
inc
xchg
push
test
cmc
xor
add
adc
loopne
lock
mov
push
nop
inc
pusha
mov
movsl
inc
xchg
push
test
cmc
xor
add
adc
loopne
lock
mov
push
nop
inc
pusha
mov
movsb
inc
xchg
push
test
hlt
xor
add
adc
loopne
lock
mov
aad
mov
ljmp
sbb
sub
cmp
in
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
mov
mov
mov
lods
rol
jecxz
adc
add
xor
and
insl
dec
jae
arpl
mov
mov
fcomip
iret
jecxz
adc
arpl
xor
and
pop
inc
pop
xor
cmpsb
xchg
mov
xchg
test
es
ja
jg
add
add
arpl
xchg
rcr
fdivr
repnz
adc
and
sub
out
aam
xchg
push
cmpsb
ja
outsb
enter
mov
out
xor
out
cmp
cmc
pop
mov
jecxz
icebp
scas
das
es
pop
and
xchg
insb
inc
leave
iret
cmp
imul
mov
punpckhbw
sar
daa
repz
push
xchg
sbbl
ljmp
stos
mov
and
mov
outsl
sub
lock
cmp
aam
dec
out
out
jae
jl
outsl
pop
add
not
xchg
out
pusha
aas
out
jmp
jecxz
inc
outsl
mov
push
add
jo
add
movl
bound
pop
and
inc
cmp
pop
addr16
bound
mov
lahf
mov
mov
fcomip
jecxz
adc
add
xor
and
ja
inc
jae
or
cld
lret
lret
mov
xchg
mov
inc
ja
pop
imul
or
sub
xchg
into
xor
fwait
out
cmpsl
filds
jbe
push
dec
dec
jg
add
sub
sub
fcmovu
ret
shl
mov
out
ret
fcomip
iret
jecxz
adc
add
xor
and
outsl
inc
pop
jae
arpl
mov
mov
fcomip
iret
jecxz
adc
add
xor
and
outsl
inc
pop
jae
arpl
add
in
pop
lea
lea
and
rep
adc
test
and
int
into
cmp
dec
xchg
cmpb
stc
sbb
xor
movsl
stc
jg
roll
arpl
inc
sbb
lcall
or
pushf
rol
in
push
aas
fbstp
sbb
rcrl
stc
jle
adc
mov
mov
jge
jmp
negl
mov
dec
cmc
popf
xor
fdivp
lock
fs
cltd
adc
lods
inc
adc
ja
test
lds
into
mov
mov
jge
mov
sbb
cld
test
pop
xchg
jl
shrb
sub
pop
aad
mov
mov
inc
pushf
test
ds
sub
or
lds
sahf
es
xor
and
stc
rcrb
test
adcl
stos
ror
test
shll
lock
mov
xor
mov
in
incl
rol
icebp
mov
cmpsl
pusha
push
jno
aas
xchg
xor
pusha
mov
in
out
xor
test
jle
inc
mov
cmp
sbb
lods
or
adc
jge
push
mov
das
mov
ja
in
int3
inc
filds
add
fwait
push
imul
add
mov
stos
mov
cmc
jno
rolb
sbb
sub
dec
stos
jb
dec
cli
les
fidivrs
xchg
cmpb
xor
push
gs
mov
sub
adc
xor
lret
mov
mov
jne
dec
dec
jnp
or
fnsave
ficoms
rorb
pop
and
outsb
fnstsw
lea
or
arpl
inc
repz
fwait
imul
rclb
push
sub
popf
popa
and
test
sarl
mov
jbe
xor
xor
mov
inc
push
ds
push
mov
lds
cmp
pusha
xlat
out
sub
push
or
mov
pop
jg
rcl
imul
ret
ds
and
pushf
inc
and
mov
ss
insb
jbe
sub
adc
sub
cvtpd2pi
dec
xchg
xchg
div
mov
andb
jp
jno
test
mov
xchg
out
lret
mov
std
cmpsl
push
add
fidivl
xchg
lods
orl
sub
cld
jl
lods
sbb
pop
cmpsb
adc
push
nop
mov
and
into
sub
xchg
jno
push
rolb
data16
pop
and
jo
lock
xchg
sbb
mov
sbb
stos
popf
mov
push
out
adc
imul
xchg
test
test
mov
in
dec
daa
sub
inc
dec
popf
jle
out
and
cli
push
adc
pop
adc
lock
fdivr
mov
xor
stos
sub
shrl
in
pop
mov
dec
fstpt
pop
lcall
mov
dec
adc
push
mov
sub
notl
jb
jecxz
inc
aam
or
dec
mov
mov
push
push
fcomps
jae
scas
xchg
loopne
pop
cld
into
cs
loop
and
adc
fwait
or
cmp
xor
leave
push
aam
scas
dec
lods
xor
js
mov
dec
pop
pusha
mov
add
popf
movsl
stos
pop
rcrb
sub
mov
dec
into
cwtl
stos
jno
and
negb
dec
xchg
mov
pop
inc
or
sbb
pushf
or
pop
test
fsubp
insb
add
outsb
push
mov
adc
xchg
inc
js
cmpsl
orb
adc
popa
outsb
sbb
xchg
mov
addb
and
sub
ret
xchg
gs
mov
loopne
jl
adc
cmc
and
mov
scas
sahf
lcall
mov
jbe
mov
lcall
cmovg
cmp
mov
mov
pop
outsb
pop
roll
jo
in
ja
aam
inc
orl
out
fdivp
stos
jo
xor
fbstp
xchg
data16
in
jnp
push
push
push
push
call
inc
test
fstpl
jg
out
inc
dec
cmp
fcompl
lods
jbe
loop
push
mov
cmpsb
add
xchg
and
into
xor
aas
test
js
mov
or
leave
int
mov
jle
fldt
xchg
lcall
cs
cmp
outsl
mov
in
lahf
sub
mov
pop
shrl
outsb
add
shrl
movl
inc
mov
in
pop
jnp
cmpsl
leave
dec
les
cmp
shld
mov
out
push
jmp
xchg
and
sbb
inc
adc
jno
xor
push
xchg
addb
xor
mov
inc
jae
aad
dec
inc
lahf
jb
js
insb
lods
loop
outsb
dec
dec
mov
jmp
imul
mov
out
shll
sahf
lock
fucomip
daa
xchg
mov
xchg
jp
out
dec
loopne
clc
adc
dec
jns
xchg
push
pop
and
pop
in
scas
and
pop
sti
sarb
cli
add
in
and
shrl
sub
cli
jl
call
dec
lods
in
adc
fldenv
aad
addr16
xchg
or
scas
mov
dec
inc
in
xor
push
repnz
and
mov
into
mov
cmp
loop
ljmp
test
cltd
loop
mov
insl
add
push
daa
scas
sub
and
test
popf
pop
mov
popf
mov
jmp
cmp
push
add
insl
jns
adc
loop
sub
jp
mov
enter
data16
mov
dec
mov
add
scas
stos
jge
push
fidivrl
sbb
mov
cld
daa
jnp
int
sbbl
movsb
adc
fistpl
jmp
or
mov
add
cld
lcall
fimull
js
imul
jne
aas
fiaddl
adcl
mov
addl
fnstenv
inc
aam
mov
dec
je
sarl
adc
sbb
outsl
test
pop
xchg
int3
in
mov
nop
bound
and
jg
stc
pop
sbb
hlt
scas
fcompl
sbb
xchg
cwtl
loope
mov
push
idivb
outsb
je
nop
mov
jo
dec
xor
and
dec
in
adc
mov
pop
mov
and
in
push
les
sub
ss
shl
arpl
repnz
mov
mov
pop
bound
call
adc
sahf
mov
jne
mov
outsb
aaa
mov
rorl
lcall
call
stc
ret
leave
xchg
cmp
rol
ret
rorb
pop
sbb
cltd
imul
ds
ss
sub
out
pop
imul
jbe
test
pop
leave
sub
aaa
into
ss
cmpb
shrb
mov
fistpl
daa
insl
setge
mov
imul
jp
pop
pop
shll
aad
push
jl
and
mov
dec
outsb
ds
sbb
jle
jns
mov
xchg
rclb
pushf
cld
dec
in
repnz
mov
int
fsub
sbb
push
shll
mov
lcall
jbe
lahf
add
mov
mov
push
jnp
lock
mov
add
adc
leave
mov
sub
push
outsl
mov
xchg
nop
sub
mov
add
sub
and
xchg
imul
pop
cmpsb
es
std
cmpsb
imul
mov
adc
cmp
xor
dec
into
lea
fiaddl
andl
addr16
rol
push
lods
or
imul
mov
lcall
jecxz
inc
cmpsb
es
and
out
xchg
rcll
cmp
psubd
add
in
ja
mov
or
out
cs
mov
movsl
dec
jbe
faddl
cmp
in
pop
add
sub
int
pop
rclb
jns
push
or
mov
pop
jecxz
fidivrl
ret
in
daa
rcr
mov
mov
sub
adc
rcr
cmp
les
xchg
stc
test
push
fcoml
out
jnp
int3
shlb
sub
xchg
xchg
push
je
add
sub
inc
push
das
es
addr16
stos
inc
rorl
and
and
outsl
arpl
cli
pop
mov
sti
scas
xchg
jnp
dec
mov
repz
fisttpl
stos
stos
pop
xchg
rorb
iret
sub
nop
fdivs
push
dec
mov
or
xchg
push
fdivrs
pop
cli
xor
and
cmp
stos
loopne
mov
jnp
fcompl
stos
scas
pop
cmpsb
mov
xor
xor
jg
inc
mov
mov
and
lea
adc
inc
cmpl
pop
fcomps
test
dec
xchg
test
xchg
or
mov
mov
mov
nop
mov
pop
sub
mov
mov
shlb
lahf
mov
and
and
outsl
test
ret
ret
lret
or
add
add
aad
adc
pushf
es
into
lcall
inc
mov
inc
rolb
sub
arpl
inc
sbb
or
inc
mov
adc
sbb
sbb
push
cmpsb
bound
clc
jl
scas
movsl
and
cmp
cmp
ret
aaa
lods
jnp
adc
push
sbb
pop
xor
insl
pop
scas
les
pop
out
ss
push
and
mov
mov
filds
sub
sub
mov
pop
imul
jmp
pop
xchg
mov
xlat
cmp
shlb
sub
gs
jl
cmp
fcoml
dec
outsl
push
scas
push
or
imul
ljmp
icebp
pusha
mov
dec
pushf
out
icebp
ficomps
sbb
je
mov
es
push
fdiv
loop
pop
out
loop
jecxz
xchg
repnz
negl
adc
out
pop
leave
int
or
data16
mov
cwtl
insb
dec
stos
arpl
push
push
leave
ja
push
idivb
jle
and
pushf
or
out
inc
mulb
cmp
ljmp
insl
adc
dec
js
push
lods
cmc
aas
movl
jg
push
mov
scas
mov
xchg
sub
push
int3
cmp
popl
xor
in
inc
aam
mov
fmuls
mov
or
arpl
xchg
push
xchg
or
ja
cmpsl
cmpsl
dec
sbb
push
repnz
mov
add
ror
xor
je
fldt
test
ss
enter
sahf
gs
cmc
sbbb
lods
cmpsl
mov
adc
jo
pop
sarb
xchg
ja
outsb
je
pop
flds
push
rcrl
jo
push
pushf
imul
dec
or
and
mov
addr16
roll
out
sbb
cmpsb
jnp
mov
gs
or
bound
cwtl
loopne
mov
sub
enter
xchg
rcrb
addr16
add
or
lods
adc
aaa
stc
adc
dec
daa
scas
pop
js
pop
hlt
mov
mov
lcall
mov
lret
cmovne
pop
idivb
and
jge
mov
pop
icebp
push
jecxz
ss
and
cmp
mov
inc
pushl
les
lcall
les
stos
in
mov
int3
xor
mov
int
decb
shll
lods
out
ficompl
jno
imul
sbb
das
arpl
jnp
push
push
jle
aad
outsl
cmp
push
aad
mov
jbe
hlt
jnp
shrb
xor
icebp
mov
jle
stos
test
and
xchg
sub
std
or
in
inc
outsb
aaa
loop
cmp
icebp
push
std
sti
dec
das
mov
push
ret
addl
and
cmp
mov
imul
mov
jbe
push
enter
insl
pop
sbb
cwtl
mov
cmp
push
and
jp
popf
push
jae
mov
cmpsl
in
xor
aad
data16
jne
and
and
aad
sub
xchg
fwait
and
cwtl
out
jg
mov
jbe
push
xor
xor
dec
inc
sarl
jp
popf
cmp
jbe
stos
xchg
xchg
add
ret
inc
pop
fimull
cmpsb
clc
loopne
ret
mov
add
inc
pop
mov
and
fisttpll
insb
test
js
call
shlb
nop
mov
jne
mov
sbb
data16
add
sub
cmc
scas
icebp
lds
mov
clc
fwait
pop
clc
pop
push
test
push
fcmovu
adc
jnp
shr
cmp
iret
enter
push
arpl
bnd
insb
pop
mov
dec
dec
inc
lods
fnstcw
and
mov
mov
mov
clc
loope
sbb
stc
loopne
insb
daa
jns
cmp
aaa
add
dec
in
sub
ds
pop
ljmp
pop
divps
ds
ficompl
popf
sub
sbb
jmp
pusha
xchg
mov
push
mov
repz
fdivr
adc
jbe
repz
sbb
xor
test
or
cmp
inc
repz
aad
push
lret
xchg
sub
sti
add
fnstsw
jno
mov
lods
xchg
in
xchg
xorb
orl
sahf
jg
enter
sbb
int3
jns
out
lret
cmpsb
loopne
lahf
mov
add
sbb
add
sub
daa
mov
test
and
mov
mov
cmp
bound
ret
divl
movsl
jnp
sbb
xor
nop
leave
cwtl
push
fstps
jle
jge
jmp
push
ds
insl
pop
mov
lcall
cmp
or
test
rcll
lcall
xor
inc
mov
bound
pop
data16
adc
pop
pop
cmc
xchg
shll
cmp
out
push
pop
adc
stos
repnz
adc
adc
shlb
mov
mov
push
xlat
iret
or
dec
cmp
dec
pop
out
cmpsl
cmp
stc
mov
loopne
cmp
push
js
call
test
xor
out
jnp
mov
pop
jge
dec
xchg
push
fxch
shlb
jo
icebp
test
xchg
call
fcmovnb
loope
jnp
ljmp
popa
negl
out
fiaddl
xchg
dec
movsb
in
outsl
push
jae
add
mov
adc
imul
pop
inc
jne
fiaddl
hlt
subb
mov
cmpsb
pop
pop
pusha
sbb
push
and
out
jne
xchg
dec
enter
sub
dec
or
jp
push
movsb
and
sub
add
orb
enter
pop
in
xchg
add
mov
dec
push
jo
jl
xchg
xor
cmp
mov
mov
or
inc
jne
mov
pop
cmp
in
push
movsl
push
mov
rcrb
push
mov
std
and
test
or
mov
and
sbb
rorl
mov
and
popa
jnp
xchg
adc
xor
sub
adc
push
fldcw
mov
popf
lods
mov
lea
cwtl
popf
jae
pop
mov
ffree
lret
dec
shl
data16
mov
enter
sbb
cmp
sub
hlt
sub
xchg
rorb
lds
sti
test
or
xor
into
mull
hlt
stc
push
mov
lret
adc
and
dec
les
add
jne
or
sbb
xor
rcll
xchg
jbe
add
inc
or
pusha
incb
sbb
fwait
inc
push
insl
mov
aad
xchg
cmpsb
call
jo
pop
jo
in
das
sbb
sbb
pop
inc
sbb
push
mov
adc
dec
mov
sub
jo
out
bound
cmp
mov
add
cmpsl
and
and
fbstp
loop
push
cmpb
test
jmp
into
gs
and
pop
int3
cmpsb
jno
pop
in
aam
add
test
or
dec
dec
aaa
imul
xorb
push
in
outsb
icebp
pop
push
ljmp
mov
inc
ljmp
outsl
fbld
nop
shrb
aad
es
cmp
xor
loopne
xchg
xchg
mov
rcrb
popa
rorl
xchg
mov
inc
sub
sub
aas
sub
inc
cld
daa
leave
xchg
sbb
test
in
dec
pop
inc
inc
lods
jb
cmp
imul
push
stos
imul
out
push
xchg
pop
push
insl
shlb
cmp
sbb
stc
push
inc
mov
dec
subb
inc
mov
push
bnd
adc
xchg
stos
adc
inc
fisubs
adc
sbb
ja
sbb
fildll
fnsave
mov
hlt
popf
subb
mov
dec
ja
sbb
testl
mov
push
mov
jbe
xchg
jle
sub
outsb
or
lods
imul
xor
pusha
mov
mov
mov
cld
pushf
loop
adc
pop
outsb
and
mov
xchg
adcl
push
or
mov
call
inc
sub
mov
mov
jns
mov
mov
add
scas
adc
inc
cmp
xchg
test
in
in
mov
lods
or
les
push
mov
bound
mov
clc
sti
push
jne
mov
orl
lds
xchg
pop
out
cld
daa
push
inc
loopne
mov
movsl
leave
pop
and
rclb
mov
test
cmp
test
stos
mov
fisttps
mov
cmp
jns
cmp
push
cmpsb
imul
call
sbb
inc
sub
add
arpl
push
rolb
adc
ljmp
icebp
mov
or
push
push
adc
mov
mov
loop
lret
notl
cltd
shr
mov
jge
jns
leave
or
or
popf
inc
xor
lret
test
daa
inc
jge
call
das
cmp
or
in
shlb
and
and
jbe
or
lret
cmpsl
mov
cmpsl
jne
cmpsb
xchg
gs
fdivr
ljmp
lock
js
in
ret
sbb
mov
cwtl
mov
lahf
into
fs
adc
push
sub
cwtl
test
cmp
pop
pop
notb
jns
leave
lcall
scas
das
js
bound
fbstp
pusha
ss
sub
movsb
fidivl
fucom
mov
push
adc
popa
push
adc
sbb
cltd
mov
stc
mov
push
and
inc
popf
fldcw
inc
or
test
push
mov
pop
cmpsb
xorl
aaa
fmuls
push
cmp
imul
mov
jle
mov
push
mov
adc
or
adc
sbb
mov
pop
jo
push
hlt
test
int
ret
cmpsl
imull
mov
push
jnp
movsb
faddl
lods
arpl
mov
lock
and
dec
subl
and
mov
dec
mov
inc
in
gs
outsl
xchg
pop
imul
adc
nop
int3
frstor
pop
pop
subl
or
jnp
lret
push
or
nop
decb
loop
adc
mov
xchg
mov
inc
adc
pusha
xchg
mov
scas
sbb
mov
jge
lahf
lea
out
sub
jmp
and
clc
and
adc
sbb
push
jle
dec
out
sub
js
dec
icebp
mov
lahf
scas
sbb
pop
sub
mov
stc
add
mov
mov
pushf
fstpl
and
cmp
inc
mov
mov
jg
sbb
fmul
push
jmp
jecxz
hlt
fistps
dec
scas
imul
cld
xchg
mov
pop
fstpt
pop
xor
leave
daa
adc
xchg
inc
inc
adc
scas
arpl
fstl
fildll
inc
dec
into
mov
fiaddl
cmp
mov
daa
popa
inc
or
lods
adcb
jbe
xchg
outsl
mov
test
xchg
cli
lret
add
inc
jae
lock
jae
imul
mov
out
and
enter
ret
jo
in
cmp
enter
out
mov
inc
mov
sbb
test
test
adc
in
scas
jbe
jge
mov
pop
jmp
call
adc
mov
cwtl
sbbl
dec
ret
jae
pop
pop
icebp
test
xor
lret
dec
pop
xor
scas
out
xor
jbe
dec
stos
sub
imul
cld
inc
sti
dec
stos
pushl
sub
scas
mov
mov
add
sub
faddl
gs
sbb
push
mov
dec
mov
bound
cmp
out
outsl
ret
movsl
sbb
out
or
adcl
out
ret
fcomip
iret
jecxz
adc
add
xor
and
outsl
inc
pop
jae
arpl
mov
mov
fcomip
iret
jecxz
adc
add
xor
and
outsl
inc
pop
jae
arpl
xor
inc
fcomip
iret
jecxz
xchg
das
add
xor
and
outsb
inc
pop
jae
arpl
mov
mov
pop
repz
jecxz
adc
test
or
out
mov
ja
addr16
push
addl
jns
pop
popa
dec
and
adc
add
je
popa
cmpsb
push
xchg
mov
push
addl
pop
shll
and
aas
add
jno
add
xchg
and
push
inc
inc
loope
test
pop
xor
dec
les
pusha
test
es
lock
and
movsb
enter
add
je
sbb
mov
rclb
jo
mov
cmp
push
stos
cli
lahf
inc
lea
sub
shl
cmpsl
lock
shrb
int3
loope
mov
xchg
test
cmpb
jmp
jno
fsubp
out
sar
cmp
sbb
dec
hlt
cli
fnstenv
inc
aam
lock
daa
rcrb
ret
out
or
add
incb
cmpsl
arpl
loop
xchg
pop
cwtl
outsb
test
dec
push
mov
mov
icebp
or
out
sub
movl
mov
dec
jl
sbb
neg
jecxz
mov
popa
notl
push
js
ja
addr16
push
in
inc
icebp
aaa
movsl
daa
rcll
jns
ret
divl
adc
and
push
aad
out
push
lahf
jo
push
ret
jae
xchg
inc
test
sbb
pavgb
sbb
or
pop
dec
and
je
bound
xchg
pusha
xchg
je
insl
xchg
add
add
and
add
ret
ss
xor
xor
aas
mov
loope
rcll
roll
mull
out
xlat
add
jno
popa
cmpsl
push
xchg
inc
xchg
push
addl
pop
roll
mull
out
xlat
add
jno
popa
cmpsl
push
xchg
inc
xchg
cmp
cmpb
movsl
jecxz
out
stc
movsl
ficoms
in
repnz
ds
sbb
lahf
movb
call
pop
outsl
mov
shlb
jnp
sbb
add
cmpsl
sbb
xor
lods
xchg
sub
repnz
fcompp
push
fxam
ret
lahf
icebp
sub
movsl
nop
jg
mov
bound
jl
enter
add
pop
or
sahf
or
cmp
push
sub
scas
sarb
aaa
push
fs
leave
hlt
pop
cmp
stos
inc
dec
arpl
mov
loopne
mov
fists
outsb
subl
fistps
test
shll
cmp
xchg
sbb
rcrl
jb
sti
and
sub
mov
adc
pop
out
lock
hlt
call
push
ficoml
xchg
pop
fsubr
ret
cwtl
adc
out
outsb
sti
mov
inc
push
out
fwait
aam
inc
mov
movsb
jg
cmpsb
enter
nop
ljmp
push
test
dec
das
popa
js
imul
fisttps
out
fimuls
or
shr
fistl
pop
scas
adc
aaa
inc
push
ja
mov
or
lods
xchg
cwtl
fsubrs
mov
push
pop
pop
sbbb
dec
test
xchg
pop
push
jb
imul
push
lret
hlt
or
jp
mov
inc
fidivl
push
sti
loope
xor
icebp
fcompl
xchg
xlat
movsl
lcall
insb
pop
jle
mov
mov
cmp
mov
inc
nop
loope
aaa
arpl
enter
sub
outsb
mov
xchg
loope
push
stc
and
fprem
or
loope
lret
outsb
jo
pop
adc
icebp
pop
push
xor
mov
add
dec
cmc
lahf
adc
push
adc
rorb
xchg
adc
daa
stos
call
and
fwait
aad
jb
test
lcall
data16
cmp
inc
inc
or
adc
mov
es
jecxz
adc
les
je
outsb
xchg
mov
shll
cmp
test
mov
add
shr
pop
notl
xlat
jo
pop
in
and
int3
iret
sub
out
cmp
jl
push
sub
fstpl
loop
insb
or
mov
cmc
icebp
std
rcl
push
jae
inc
bound
cmpsl
pop
popa
xor
sbb
sub
negl
xchg
iret
and
dec
pusha
cmp
nop
aam
not
fdivr
fildl
inc
jp
iret
pop
test
push
inc
push
loopne
mov
cmpsb
loope
js
out
lods
test
pushf
fcomp
stos
sbb
lods
jo
js
jno
icebp
lret
mov
dec
push
dec
test
mov
bound
jnp
inc
mov
call
mov
aam
mov
pop
inc
xchg
adc
pop
lret
mov
sub
out
stos
inc
jb
dec
ss
pop
cld
data16
jns
idiv
inc
fsubrs
filds
push
inc
inc
mov
and
outsl
xor
aaa
cli
cmp
aaa
inc
sub
add
lret
out
imul
or
xchg
push
adc
mov
int
and
jb
outsl
mov
cmp
mov
push
push
jp
push
pop
fdivrp
stos
push
loop
push
jecxz
cmp
jecxz
repnz
flds
sbb
addb
lahf
cs
mov
sub
sbb
movsb
mov
push
jo
jl
push
mov
shr
jbe
push
jecxz
in
or
or
pop
cmpsb
mov
push
mov
jae
and
sarl
push
mov
daa
or
dec
jne
stos
fucompp
jmp
or
push
and
pusha
lea
fs
mov
into
loopne
fidivs
pop
pop
in
jecxz
pop
xchg
push
lock
jbe
insl
in
or
scas
dec
sub
pop
lcall
stc
dec
cmp
or
movsb
js
lcall
stos
faddl
sub
push
mov
daa
mov
xchg
mov
ja
lea
cmp
jle
push
adc
pop
in
and
push
movsl
in
rcr
sti
sbbl
out
adc
movb
cmpl
out
lcall
sbb
inc
fstpt
das
mov
flds
lret
mov
ss
or
pop
arpl
test
stc
shl
inc
cmpsl
lcall
imul
pminub
fwait
dec
dec
test
mov
sub
mov
shrb
call
icebp
arpl
mov
iret
arpl
arpl
cld
cmpsb
push
addr16
mov
adc
cmp
cmpl
and
lret
adc
inc
push
data16
push
fwait
lret
bound
jb
sarb
jbe
push
jp
addr16
xor
es
movsl
aas
mov
rol
mov
loope
adc
imul
test
aad
subl
push
ss
je
faddl
out
arpl
or
xchg
daa
dec
mov
sub
and
cs
lahf
insb
push
mov
aas
popf
mov
jns
xor
adc
xor
es
sbb
mov
es
cs
lds
jecxz
or
std
xchg
add
and
and
cmp
mov
les
ret
jns
jo
and
adc
in
mov
or
mov
fld1
ja
mov
adc
fcmovnu
cld
xchg
enter
movsb
ljmp
repnz
fisttpl
dec
test
mov
or
push
out
cmp
mov
jl
movb
fimull
xor
and
filds
stos
orb
mov
or
cwtl
and
sarb
insb
xchg
mov
lcall
dec
arpl
add
aaa
aaa
cmpsb
dec
push
pop
mulb
xchg
test
or
divb
sub
xchg
leave
shl
sbb
jg
outsl
mov
add
mov
pop
bsf
rcrl
and
jns
mov
xchg
jno,pn
push
or
push
outsb
push
enter
out
leave
test
jo
cmp
lret
in
push
test
addr16
fwait
sbb
xor
loope
xchg
cmpsl
lret
lahf
lods
or
aam
mov
and
fisubrl
adc
dec
mov
add
icebp
sbb
and
dec
aas
or
jmp
clc
sahf
scas
dec
lock
mov
dec
sbb
dec
dec
pop
out
sbb
or
inc
rorl
loope
jmp
mov
nop
das
fcmovnbe
mul
cld
adc
inc
fldenv
or
mov
sub
lods
or
popf
xchg
push
xchg
outsb
inc
push
lea
in
mov
push
push
jg
jle
lods
mov
inc
mov
insl
xchg
cmp
rcrb
bound
push
into
loope
js
lahf
push
mov
test
add
xchg
leave
test
inc
das
aaa
ljmp
dec
sbb
xor
mull
pop
aaa
sub
test
ja
imulb
in
push
push
push
icebp
cld
cmc
lret
sub
pop
mov
lret
mov
pop
das
es
xchg
addr16
stos
cmpl
ret
lea
add
push
pop
sub
fs
das
jno
adc
sbb
ds
roll
lcall
xchg
cmp
push
mov
jnp
notb
cmp
fists
addr16
or
push
bound
mov
sbb
iret
or
dec
scas
cmp
movsl
inc
jp
fs
and
cmpb
dec
imul
mov
xchg
mov
test
ret
hlt
scas
jb
add
insb
sub
mov
mov
cld
add
rorb
fucomp
push
scas
arpl
dec
inc
mov
mov
inc
push
mov
leave
clc
cmp
sbb
cmp
les
sbb
fwait
inc
not
mov
ss
fs
xchg
idivb
and
test
in
jae
mov
cmc
ret
jmp
push
cmc
test
pop
js
lret
popf
adc
je
call
jb
mov
ds
lock
sbb
add
cmpsl
loope
repnz
cltd
loope
sahf
pop
cli
push
pop
jle
push
and
cmpsl
gs
jmp
loope
jbe
lcall
lock
test
fstpl
popa
or
mov
sbb
enter
or
es
or
gs
xorb
push
enter
mov
add
dec
xchg
jecxz
in
jmp
push
sub
xchg
adcl
adc
lret
mov
xchg
or
sub
sbb
scas
sub
and
dec
addl
cmp
cltd
sub
insl
sbb
pusha
test
mov
pusha
aam
sahf
push
mov
rcrb
ds
pop
fbstp
dec
add
push
cmp
movsb
mov
es
sub
fs
pop
in
adc
xchg
sti
mov
sbb
push
pop
cmc
add
into
int
out
cmpsl
faddl
out
mov
xchg
mov
repz
mov
std
bound
mov
shll
bound
cs
jb
or
pop
xchg
enter
adc
jmp
call
xchg
es
mov
cmp
inc
out
orl
sbb
lcall
bound
add
lods
ret
pushf
pusha
std
and
popa
shlb
int3
pushf
outsb
xchg
sbb
dec
mov
ret
push
push
or
mov
lods
stc
lret
jmp
ja
push
call
or
adc
mov
ljmp
and
lods
push
adc
aad
and
notb
ret
jle
stos
ret
addr16
pop
ja
ja
and
fwait
aas
and
xchg
add
mov
adcb
adc
es
stos
push
mov
leave
lret
testb
dec
pop
and
lods
sbb
in
mov
out
push
mov
out
push
jns
mov
push
dec
ret
fcomps
addb
roll
lahf
lock
dec
sub
arpl
dec
cs
mov
xchg
fwait
or
sub
mulb
adc
data16
adc
lcall
ficompl
pop
lret
sub
mov
fdivs
jb
sbbb
jnp
inc
fldenv
mov
sbb
pop
inc
sahf
cmp
push
in
aad
les
sbb
xor
mov
lds
cld
dec
and
mov
stc
scas
mov
loopne
mov
aas
mov
adc
cli
mov
mov
mov
loop
jnp
sahf
mov
fnsave
lock
xchg
add
inc
std
leave
lea
sbb
imul
cmp
ret
jnp
xchg
cli
loope
jbe
mov
lods
fnstcw
clc
jno
sbb
sbb
std
lcall
pushf
jmp
hlt
add
out
cmpsl
fimuls
cmp
dec
push
and
push
loope
sbb
popf
xchg
loopne
test
inc
lds
sub
jo
out
lret
push
inc
lcall
adc
cmp
xchg
push
pop
pop
outsb
push
cltd
xchg
jbe
pop
and
xor
inc
cmp
add
xlat
loop
orl
imul
and
lahf
popa
lock
pop
sub
mov
adc
cmpsl
pusha
sbb
cmp
inc
inc
pop
imul
inc
popf
inc
rcl
pop
lcall
sub
aaa
adc
int3
add
addr16
sub
pop
push
push
movsb
jae
dec
pop
xlat
cli
and
cmpsl
adc
or
ss
scas
pop
bound
bound
xor
movsb
and
xchg
xor
inc
lahf
ret
or
das
mov
or
pop
mov
pushf
stos
push
int
cmp
jae
inc
jmp
or
mov
icebp
rcl
and
fistl
cmp
out
mov
mov
push
push
mov
rol
lock
and
int3
inc
or
stos
xchg
ljmp
mov
xor
mov
add
or
int3
scas
scas
sbb
xor
int
ret
je
mov
icebp
push
sub
cwtl
inc
cmp
fdivs
fcoms
lahf
and
int
imul
rcrl
outsl
outsb
stos
into
push
dec
aam
sub
cmp
jnp
fsubrs
es
addr16
sti
movsb
inc
xchg
jnp
xchg
cs
hlt
lcall
jg
mov
repnz
xchg
xchg
iret
xor
test
mov
xor
mov
sbb
nop
test
data16
push
icebp
add
pop
daa
stos
icebp
in
sbb
adc
cmp
push
das
add
shll
add
cmpsb
push
and
pop
add
and
xchg
shr
enter
stos
clc
lcall
iret
scas
int3
shrb
xchg
xor
cmpsl
xor
cwtl
pop
leave
mov
clc
xor
stos
xor
and
sbb
fisttps
es
rclb
hlt
inc
mov
jge
and
js
mull
cli
sarl
mov
lret
cmp
adc
add
ret
pop
pop
add
imul
or
inc
lret
insb
xor
mov
fiaddl
aaa
fld
enter
xchg
test
popf
fsubp
jne
dec
lea
stos
aam
out
movsl
mov
lods
nop
adc
push
push
jb
shll
pop
xor
mov
mov
nop
xor
or
sub
ds
xchg
out
jo
imul
flds
xchg
addr16
loope
adc
add
cmc
cmp
shlb
test
mov
clc
mov
jl
mov
mov
jo
xchg
mov
jp
pop
and
loope
outsl
iret
sub
cmp
xchg
notb
mov
jecxz
ret
enter
test
push
lds
xlat
xor
scas
or
xor
divl
popf
and
or
push
cltd
cmc
jbe
ds
sbb
or
lea
shll
jmp
xor
loopne
enter
imul
inc
adc
movsl
jae
jne
cs
xlat
cmp
mov
adc
mov
decl
xor
repz
mov
jmp
xchg
xchg
mov
fprem
ret
bound
incl
mov
scas
popf
stos
mov
pop
add
orl
mov
cmp
mov
stos
xor
or
adc
std
and
xor
or
ljmp
sub
rclb
iret
pop
clc
icebp
cmpsb
int3
xor
std
inc
dec
xor
aad
xchg
push
jne
push
insl
cmpsl
mov
gs
cli
mov
xlat
jmp
push
sarb
and
aad
loop
or
stos
insb
mov
adc
and
or
je
jno
xor
outsb
fnstcw
lahf
or
loopne
add
gs
ret
and
cmp
jle
hlt
pop
leave
mov
sub
inc
imul
stc
cmp
fs
and
leave
mov
cmp
ja
mov
and
and
outsb
imul
sub
push
add
es
pop
sarl
pop
aam
cwtl
xorl
ret
cmp
jl
lods
inc
fisubrs
sbb
and
adc
pop
fcoms
lea
jmp
pop
insb
mov
pop
xlat
outsb
adc
adc
enter
adc
shll
mov
out
sarb
adc
cmpsl
or
insl
pusha
in
mov
into
ror
and
rcr
sub
fists
pusha
orb
add
sarb
repnz
cs
testb
mov
fisubrl
ljmp
or
dec
fstps
xchg
imul
pop
xchg
xchg
outsb
mov
pushf
mov
pop
hlt
dec
int3
jg
test
outsb
fcomp
lahf
cmp
xchg
xchg
pop
jp
adc
in
xchg
adc
cld
cmp
hlt
das
stos
dec
jne
mov
mov
pusha
orb
mov
push
jmp
repnz
test
or
int
xor
shl
inc
lods
insl
cmp
add
and
jb
popa
push
add
in
pop
std
into
mov
das
outsl
dec
call
in
xchg
cmp
dec
popf
jle
gs
jg
sbb
and
mov
or
adc
dec
mov
xor
cmpsb
sbbl
jmp
ret
addr16
pop
aas
popf
adc
cli
xlat
inc
xchg
pop
outsb
jecxz
mov
hlt
dec
jl
test
cmp
jmp
js
fs
push
mov
mov
fadd
dec
aad
sbb
pop
test
sub
or
and
inc
push
xchg
out
mov
xlat
outsl
imul
enter
cmpsb
repz
push
jecxz
cmp
lds
push
sti
pop
imul
lods
imul
mov
or
scas
leave
outsl
mov
jge
jl
ret
arpl
xchg
in
aaa
mov
cltd
mov
cmp
jno
dec
or
lcall
adc
mov
lds
dec
mov
int
xor
or
mov
jge
scas
je
adc
das
adc
push
mov
lods
fimuls
das
inc
xabort
stos
push
mov
out
movsl
shl
insb
mov
bound
out
inc
sbb
stos
push
xor
cmpb
ja
and
cmp
lea
sahf
ret
sub
push
stc
dec
cwtl
cli
mov
lret
pop
in
andl
xor
jnp
xor
pop
sub
addr16
cmp
loope
das
in
les
and
jecxz
mov
out
cmp
adc
mov
daa
pop
xor
js
adc
mov
inc
push
jecxz
enter
jecxz
or
cmpsl
cld
cmpsb
xchg
pop
add
dec
stos
shlb
or
mov
jne
ljmp
dec
fnstcw
jnp
mov
pop
rcr
out
loopne
cmp
mov
lcall
push
cwtl
in
leave
xchg
and
or
push
sti
xor
jne
dec
pusha
cmpsb
ja
cmpsl
dec
inc
lock
inc
and
popf
jge
dec
jbe
gs
je
sbb
lret
nop
or
push
inc
sub
pop
sub
test
push
push
div
dec
mov
push
adc
je
mov
loopne
stc
pop
sub
clc
push
cmp
addr16
xor
flds
xchg
push
clc
or
pop
mov
fldl
test
fidivrl
adc
push
mov
ss
mov
nop
aaa
jp
lods
pop
xchg
xor
xchg
cmp
sbb
mov
push
push
push
pop
mov
mov
xor
sub
les
jl
int
adc
out
movsl
loope
jmp
xor
stc
fbstp
or
xchg
cmp
movsb
enter
mov
loope
sbb
inc
orl
es
sti
mov
and
cmp
out
sbb
mov
xchg
daa
xor
xchg
movsb
insl
icebp
adcl
xchg
pop
ja
popf
jns
cmp
jb
push
loopne
mov
stos
sub
sbb
sub
mov
into
xor
stos
in
sub
int3
rorl
add
pop
dec
adc
movsl
ds
clc
pop
in
js
sbbl
rorb
jecxz
pop
dec
or
jns
sbbl
xchg
sub
fldenv
xchg
sti
cmp
out
enter
jbe
out
push
mov
shlb
xchg
cwtl
mov
sub
mov
cmpsb
loop
js
fwait
pop
xchg
test
or
icebp
iret
xor
scas
js
jl
stos
arpl
jnp
and
sub
jl
fbld
add
imul
lahf
int
sbb
scas
push
aaa
gs
push
imul
test
and
insb
in
cmc
jbe
add
or
arpl
ja
push
pop
cmpsb
out
cmp
addr16
mov
into
in
dec
pop
push
das
jnp
cmp
pop
push
jae
das
cmp
aaa
add
mov
mov
lods
sub
cmp
fstl
pushf
cmpsb
or
add
xchg
jmp
sar
sbb
sti
out
arpl
hlt
push
cmp
mov
mov
insb
pop
inc
jmp
or
sub
sbb
cmp
loopne
xlat
jae
inc
lock
repz
je
dec
test
add
lea
ret
inc
icebp
aaa
loope
rcll
roll
mull
out
xlat
add
jno
popa
cmpsl
push
xchg
inc
xchg
push
addl
pop
roll
mull
out
xlat
add
jno
popa
cmpsl
push
xchg
inc
xchg
push
addl
pop
rolb
mull
out
xlat
add
cmpsl
push
xchg
jno
test
push
test
daa
rcll
inc
xor
fimuls
xlat
add
scas
push
in
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
mov
loop
push
mov
jge
out
cmp
pop
add
add
add
add
and
or
or
sub
ds
add
add
add
and
sahf
add
add
add
add
adc
add
jp
inc
add
add
add
add
add
sahf
add
inc
add
add
add
add
loop
push
add
push
inc
add
add
pop
add
add
add
outsb
add
dec
add
add
add
add
add
addr16
add
add
add
lcall
add
add
add
jp
lcall
add
sahf
add
test
lcall
add
add
stos
add
add
add
add
sbb
add
pop
add
add
sbb
pop
add
add
add
add
add
add
add
add
mov
add
add
jne
data16
jne
pushf
add
inc
add
push
add
add
mov
add
add
add
inc
add
add
add
cwtl
add
mov
aam
data16
add
add
add
add
adc
data16
add
add
add
add
xor
sub
mov
inc
add
add
add
push
add
sub
add
outsb
add
add
add
add
add
add
add
add
add
push
add
add
sub
add
inc
add
xor
test
lcall
add
add
add
add
mov
add
add
add
loop
dec
add
stos
add
mov
xor
push
add
add
test
movsb
add
add
xchg
scas
add
add
inc
add
xor
pop
add
mov
push
add
add
add
add
add
push
add
data16
add
sub
adc
jbe
mov
add
add
cmp
pop
add
add
add
jmp
push
add
inc
add
add
add
dec
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
stos
add
add
add
add
add
add
dec
add
mov
outsl
add
clc
add
add
adc
stos
add
jnp
iret
add
add
adc
stos
add
sub
mov
pop
add
iret
add
add
add
mov
imul
lods
add
add
mov
add
lods
add
add
mov
add
add
mov
add
rolb
int3
add
or
dec
add
add
add
add
dec
add
add
add
and
mov
add
add
add
add
add
add
add
mov
mov
add
inc
add
rolb
je
inc
add
push
add
add
add
add
add
rolb
rolb
mov
add
add
add
add
add
fmuls
out
repnz
and
ficoms
jne
mov
dec
lds
lcall
lods
mov
outsb
movsl
test
xor
mov
mov
ja
xor
cmpsb
adc
lret
je
out
in
jbe
movsb
in
mov
int
test
out
stos
dec
lods
js
push
xor
mov
shll
mov
and
enter
mov
pop
stos
daa
clc
nop
inc
iret
mov
in
clc
dec
imul
jmp
fstpt
in
incl
jle
lahf
test
lcall
nop
sbbl
fs
xchg
adc
test
idivl
fnstcw
cmp
je
or
push
mov
inc
out
imul
cltd
mov
jns
mov
mov
outsb
push
inc
cmp
push
in
inc
dec
jo
arpl
and
rcrl
movsb
inc
pop
mov
cmp
fsubl
mov
mov
push
xchg
xlat
push
jnp
cltd
pop
call
mov
es
xchg
into
mov
push
and
dec
push
sbb
dec
mov
inc
xchg
inc
or
push
popf
or
in
dec
je
ja
add
cmp
loope
loope
push
adc
mov
mov
cmp
mov
pushf
call
jg
test
cmp
test
mov
cld
gs
adc
mov
jecxz
aaa
js
mov
stos
clc
pop
push
jo
jo
das
insb
stc
outsb
cmp
test
push
loopne
inc
cltd
add
or
arpl
sub
sbb
jo
insb
iret
fst
in
test
ret
popa
or
inc
divb
sub
inc
jg
sub
mov
fidivrl
and
mov
adc
jns
xchg
cmovs
xchg
add
ret
fsubs
add
xchg
ja
fucomi
pusha
jnp
hlt
mov
xchg
ljmp
mov
add
pushf
pop
fsubl
lods
into
hlt
xor
add
rolb
inc
je
dec
xchg
andl
repz
inc
inc
sub
divl
inc
cmp
and
mov
jmp
lods
js
enter
inc
scas
sub
pushf
jecxz
xchg
xor
je
push
sbb
test
fs
leave
jae
jno
dec
in
daa
dec
loope
sub
push
jge
xor
call
or
sub
test
insb
mov
push
dec
add
movsl
cmpsl
adcb
in
into
cli
ret
and
jp
fistps
cmp
and
cli
push
push
mov
push
adcb
into
sub
push
pop
xchg
sbb
enter
mov
and
jb
mov
dec
in
push
arpl
or
pop
cmc
bnd
mov
mov
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
