call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
mov
add
xor
and
push
lods
sbbb
fs
sub
mov
mov
movsb
dec
aad
lds
jle
mov
add
xor
and
push
fiadds
incb
push
xchg
push
test
mov
movsb
mov
jle
mov
add
xor
and
push
fiadds
fs
xchg
cmp
lret
xor
rcrl
je
rolb
out
push
stos
in
push
popa
outsl
pop
sarl
out
out
or
mov
or
adc
adc
pop
inc
test
adc
add
repz
mov
les
cmp
fiadds
les
sbb
cmpsl
push
xchg
dec
test
mov
pop
push
sub
clc
or
sub
and
inc
imul
push
push
and
orl
dec
lret
inc
sub
and
dec
xchg
stos
dec
inc
movsb
sbb
pushf
jg
jae
popa
adc
xor
iret
arpl
in
pop
xchg
out
adc
push
pop
push
sub
sbb
sahf
add
xor
and
push
fiadds
fs
xchg
push
test
mov
movsb
dec
aam
les
jle
iret
adc
jge
jne
gs
adc
push
in
popf
cs
aam
mov
cmp
lret
jl
inc
into
pop
fwait
add
icebp
dec
imulb
testb
push
add
sahf
push
rcll
andb
out
je
fs
xchg
push
test
mov
movsb
dec
aam
les
jle
mov
add
xor
and
push
fiadds
fs
xchg
push
test
mov
movsb
dec
aam
les
jle
mov
sub
pop
xchg
jecxz
mov
or
sub
mov
scas
mov
jp
xlat
sbb
jl
mov
mov
push
jno
xchg
pushf
rcll
jnp
and
insl
out
das
sub
in
push
lock
sbb
ss
jle
mov
inc
ljmp
lahf
addr16
scas
push
in
jp
mov
mov
stos
dec
movsb
and
xchg
pop
jle
jg
call
jne
xlat
dec
sti
mov
jmp
push
out
pop
int
jg
test
je
bnd
jecxz
stos
lea
fnsave
in
cmp
mov
lea
scas
jb
jbe
ljmp
or
jns
subb
mov
mov
iret
aas
adc
mov
roll
mov
rcll
jg
out
stos
push
mov
sarb
jmp
adc
nop
xchg
xchg
mov
dec
push
xor
roll
or
fxch
dec
pop
mov
scas
movsl
flds
jp
loope
push
cmp
sbb
cmp
fisubrs
and
mov
adc
cmpsl
cmp
jg
ljmp
sbb
xor
jg
rcrb
cmp
jl
adc
bound
stc
lods
imul
lock
sub
dec
fildll
pop
cld
jae
push
addr16
lea
dec
out
out
pushf
nop
clc
adc
jae
popf
aad
jnp
mov
std
iret
leave
jo
shll
jge
aad
mov
inc
mov
mov
xchg
orb
ds
cmp
sub
xchg
adc
add
inc
jle
inc
push
mov
jns
mov
cs
in
pop
sbb
sub
andl
lods
mov
dec
jge
and
ficompl
jge
or
in
and
aad
inc
mov
mov
inc
inc
outsw
in
cmp
fstps
daa
ds
add
mov
xor
mov
pop
xchg
icebp
pusha
ret
stos
clc
pop
pop
sbb
add
sahf
inc
stc
xchg
push
lahf
pop
iret
outsb
xchg
lret
and
inc
cmc
mov
xchg
sub
lcall
xchg
jl
dec
dec
aam
push
ret
ljmp
push
imul
sbb
cmp
inc
mov
cld
jl
dec
add
imul
test
cld
mov
aam
sbb
lret
push
sbb
dec
aam
xor
mov
push
mov
sahf
xchg
push
hlt
pop
pop
adc
imul
ret
mov
cmp
cs
int
xchg
popa
in
or
icebp
lea
negb
add
cwtl
fdivl
jns
mov
push
std
jl
lret
repnz
jnp
push
xchg
fsts
cwtl
leave
rorl
inc
xchg
push
imul
adc
adc
into
jl
int3
mov
mov
adc
push
sahf
jle
pushf
xchg
jmp
xor
dec
fnstenv
sub
daa
and
jp
fadd
aad
sbb
cmp
push
xor
lock
mov
push
inc
imul
mov
pop
jmp
jmp
mov
push
xchg
idiv
inc
mov
into
pop
xchg
repz
sub
mov
and
lods
mov
loope
cs
aaa
cmpsl
xchg
pop
jle
dec
mul
xchg
iret
sub
sub
sub
call
jbe
lods
pop
das
shrb
ror
jmp
mov
mov
inc
scas
mov
push
mov
lea
test
pop
push
ss
pop
outsl
jne
maxps
fldcw
add
sbb
fisubl
mov
pop
pop
or
out
adc
out
inc
cmp
rcrl
jecxz
aaa
ret
testb
inc
decb
xchg
or
jle
popa
rorl
xchg
push
arpl
xor
pusha
sub
pop
stos
or
daa
inc
add
xor
call
js
daa
fwait
repnz
mov
orl
jo
test
pop
int
ljmp
dec
sub
das
and
rcll
adc
movsb
insb
lret
shlb
pop
lahf
icebp
cli
xor
xchg
mov
xchg
push
arpl
cmp
out
icebp
outsb
scas
fnstenv
mov
in
inc
xor
mov
ret
aam
ja
stos
popf
mov
jmp
sub
xchg
pop
mov
push
pop
cli
jg
push
fs
inc
mov
je
aas
aam
pusha
mull
jl
daa
rorl
in
mov
cwtl
push
shll
xchg
inc
jns
adc
fwait
stos
mul
xor
aam
pop
cs
iret
adc
fucomp
and
mov
add
int
test
enter
add
dec
fsubr
ret
and
loopne
clc
sub
mov
dec
lret
mov
xchg
sbb
jmp
xchg
add
sbb
pop
popf
fistps
and
cmc
in
ret
xlat
fidivs
das
adc
pop
sahf
js
sub
hlt
sbb
cli
in
jo
adc
cmc
mov
add
in
mov
or
mov
or
outsb
adc
add
mov
jl
xor
xor
xchg
cld
add
lcall
add
pop
mov
cli
push
inc
sbb
mov
and
mov
lcall
cmp
or
inc
dec
sbb
sbb
subb
push
mov
ds
sub
lods
push
out
sbb
cld
mov
andl
pop
arpl
aas
sub
pop
and
jb
in
pop
push
lahf
outsl
sbb
test
dec
inc
jecxz
mov
aad
daa
stos
pop
pop
or
hlt
lea
insb
jle
in
dec
jg
jl
cmp
outsb
adc
cmp
clc
imul
mov
fidivrl
pop
cld
or
ds
pop
or
cwtl
mov
subl
xlat
mov
xchg
rolb
xchg
in
pop
mov
or
inc
mov
call
xor
adc
adc
mov
xor
in
in
arpl
imul
js
cmp
jb
lea
adc
fldenv
sbb
add
or
stos
in
stos
mov
mov
mov
add
mov
div
mov
cmpb
out
xchg
adc
dec
out
cmp
aam
inc
dec
sbb
inc
in
mov
stc
jo
outsb
sti
sbb
rol
push
stos
movsb
cmp
pusha
adc
or
push
cmpsb
dec
mov
push
sub
pushf
aaa
and
fdivl
in
mov
push
aas
mov
insb
outsl
and
std
leave
ds
icebp
cli
mov
dec
cld
out
out
and
jbe
push
mov
sub
and
sub
cmp
rcrl
fwait
inc
cmp
fildl
lock
mov
fmuls
lock
test
push
sbb
adc
adc
jp
mov
call
movsb
mov
mov
aas
mov
repnz
repnz
pop
sarb
mov
insb
push
fcompl
xor
cwtl
mov
sub
or
xchg
adc
cmc
mov
jns,pt
loope
shll
inc
movsl
xor
cmp
pop
popa
push
movsb
jae
pop
mov
pusha
ljmp
movsl
push
cmp
jae
movsl
repz
push
jb
pop
cmp
imul
into
jp
or
push
lea
adc
jmp
push
xor
push
insb
iret
cltd
lret
and
jno
dec
sub
xlat
or
fisttpll
lock
and
xor
sub
mov
negb
push
imulb
dec
stos
fcoms
pop
jmp
mov
test
pop
cwtd
push
loop
add
dec
outsb
xchg
mov
cs
push
mov
cmc
push
adcl
dec
cmp
cmpb
mov
out
xor
ds
mov
cli
cs
push
push
mov
xchg
scas
add
fsubl
sbb
test
cmp
jecxz
pop
int3
test
sti
int
xchg
imul
push
stc
lea
jno
xor
daa
jb
arpl
cltd
jmp
sub
in
rclb
jecxz
cld
and
sbb
movsl
orl
into
dec
mov
push
jmp
sbb
xlat
jp
jbe
fadds
mov
xchg
push
push
mov
xchg
jge
enter
sub
ds
dec
sub
mov
icebp
dec
pop
push
outsl
sti
inc
lea
int3
cmp
outsb
xchg
fimull
in
in
movsl
js
lods
mov
sti
push
jnp
jae
mull
std
push
inc
pop
push
dec
inc
fninit
mov
mov
data16
imul
or
cmp
sub
in
cmp
xchg
push
fidivs
adc
and
stos
lea
pop
or
repz
jb
cwtl
sub
xchg
shl
jecxz
and
out
pop
cli
push
shrb
sub
cld
pop
lods
pop
or
es
adc
out
sub
fstl
xchg
dec
xor
rclb
nop
mov
push
inc
sarl
xchg
lcall
gs
cwtl
leave
imul
cmpsl
adc
ret
sbb
jne
flds
pop
cmp
arpl
inc
mov
in
lods
push
pop
aad
push
push
pop
lock
jbe
jo
hlt
inc
or
mov
or
inc
push
sarb
movaps
fwait
and
cmp
fs
mov
scas
imul
xor
pop
fwait
loop
fstl
mov
roll
or
add
jmp
jnp
cmp
cwtl
outsl
push
sbb
dec
pop
push
cmp
jp
and
scas
add
mov
ret
pop
mov
std
imul
loope
cs
xchg
cltd
or
and
or
imul
adc
cmp
lcall
mov
pop
xchg
xchg
inc
xchg
mov
inc
mov
jmp
xchg
mov
stos
fisubs
mov
cmp
es
lods
repz
ret
or
inc
gs
shrl
sbb
dec
cwtl
loope
jb
ljmp
pop
sub
adc
test
adc
outsb
dec
das
and
imul
popa
sbb
mov
jg
stos
in
pop
sti
xor
aas
ret
sub
mov
jno
shrl
mov
cmpsl
stos
xchg
push
sarb
scas
leave
outsb
push
out
mov
mov
mov
fmul
jmp
aad
movsl
mov
inc
mov
add
int
sbb
insl
scas
jns
loope
sbb
sbb
sub
xor
loop
xor
adc
icebp
mov
shrd
leave
jmp
jge
pop
aas
aas
cmp
pushl
xchg
jle
cld
in
or
xor
push
fs
mov
sub
jno
mov
mov
sbb
mov
dec
add
lcall
xchg
daa
xchg
jle,pt
jp
jle
enter
adc
add
mov
and
adc
add
mov
fcmovne
mov
mov
fidivrs
jnp
cmc
cmpsl
mov
or
cmpsl
dec
scas
inc
out
loope
mov
shlb
fwait
cwtl
lret
fwait
imul
mov
inc
sti
push
pop
outsb
ljmp
mov
dec
cmp
inc
shll
scas
aas
pop
adc
and
rclb
jp
lret
mov
movsl
in
dec
mov
flds
dec
scas
movsb
rorl
mov
aad
sbb
cmp
push
lock
xchg
aaa
aad
mov
or
dec
out
in
popf
lds
repnz
ret
mov
xchg
iret
cmpsb
lcall
or
or
push
and
adc
pop
and
mov
adc
mov
jge
sub
adc
xchg
mov
cmp
adc
jnp
nop
in
and
lcall
mov
mov
daa
enter
xchg
loopew
add
mov
mov
mov
sbb
aaa
out
mov
pushf
jle
pop
std
xchg
jno
ficoml
sbb
add
orl
push
inc
dec
popa
jne
inc
lret
mov
pushf
jle
jno
aas
push
sub
insb
mov
insl
in
repz
cmp
mov
dec
sbb
dec
xchg
les
les
pusha
repz
shrb
xchg
dec
scas
push
setnp
fdiv
sti
mov
repnz
in
xor
cmpsb
xor
daa
gs
subb
inc
mov
inc
imul
adc
add
mov
dec
pushf
add
sbb
stc
in
testl
mov
xchg
scas
fistps
imul
adc
into
sub
in
cmpl
adc
jecxz
add
dec
xchg
enter
mov
aad
jmp
loopne
pop
nop
loopne
mov
xchg
test
push
idivl
adc
xlat
enter
cs
mov
cli
leave
and
dec
jbe
loop
loope
enter
nop
insb
sub
push
adc
push
aaa
jl
cmp
adc
hlt
cmp
dec
pop
jg
jb
mov
add
into
mov
xlat
sbb
xchg
pusha
cmc
ret
sbb
sub
push
ret
pop
in
cmp
lahf
insb
inc
lea
push
iret
das
mov
pusha
fsubl
sbb
xor
mov
leave
push
pop
and
add
jge
add
fs
inc
sub
or
push
xor
repnz
sub
xchg
in
loope
fwait
clc
adc
dec
dec
mov
and
adc
les
push
fs
stc
movsb
mov
sbb
dec
jb
push
inc
fistps
jg
inc
cld
fdivrp
js
inc
stc
push
jnp
ret
imul
arpl
mov
xor
ror
cld
dec
or
xor
adc
and
mov
jae
inc
mov
mov
mov
jl
popa
add
or
pop
insb
rorb
insb
scas
lahf
mov
insl
icebp
xor
es
jecxz
into
and
sub
fldl
in
xchg
add
aaa
aam
scas
inc
sbb
inc
jge
mov
push
mov
mov
sahf
push
fisttpll
jnp
aas
sub
lcall
mov
mov
mov
fstps
mov
aaa
xor
enter
cmp
sub
mov
lret
pushf
push
cltd
lods
add
cmpsl
push
or
dec
and
out
ss
imul
test
and
fisubrl
sub
dec
sub
cltd
push
fxtract
dec
xor
dec
dec
lods
fnstenv
test
outsl
fstps
xchg
daa
idivl
out
mov
mov
stc
adc
call
movsb
out
sbbl
and
or
lret
cs
hlt
lock
xor
dec
xor
jne
in
cld
push
loop
and
inc
xchg
lret
test
mulb
faddp
test
xor
jne
sub
lret
pop
add
test
xor
mov
and
cwtl
cmpl
jl
test
mov
jl
and
hlt
into
or
mov
dec
pushf
sbb
imul
stos
sbb
mov
lods
jmp
subb
and
jmp
out
ss
int3
iret
fldcw
mov
and
push
out
popa
push
iret
pop
push
add
js
stos
sbb
sub
mov
jnp
adc
pop
movsl
pop
in
pop
mov
stos
jecxz
fwait
push
out
pop
cmp
xor
jae
call
stc
imul
in
sbb
and
fs
mov
idiv
aaa
lret
loopne
sbb
mov
fcoms
inc
js
call
and
mov
movsl
dec
call
faddl
mov
repnz
or
xchg
push
scas
xor
mov
mov
insb
push
jge
jbe
add
int
push
clc
and
push
pusha
sub
jle
jns
inc
or
cmc
cmpsl
daa
cmpsb
clc
rorl
sub
pop
mov
mov
loopne
in
stc
xchg
loop
ret
pop
clc
call
lds
push
iret
lahf
loopne
adc
scas
loop
loop
jg
mov
addl
negb
mov
hlt
out
fmull
xor
cmp
mov
mov
mov
mov
nop
ja
cmpsb
add
cmp
into
pop
pop
jb
mov
insl
mov
cs
sbb
push
negl
scas
mov
hlt
mov
xlat
popa
unpcklps
aaa
ds
pop
mov
out
fists
movsl
adc
dec
add
fistps
push
mov
fidivs
stos
idiv
inc
cmp
inc
jb
pop
xchg
mov
mov
mov
jp
mov
inc
xchg
jmp
push
in
rcr
sti
cmp
jne
sahf
or
les
imul
test
or
jbe
shrl
icebp
insb
xchg
aam
loopne
sahf
sub
xchg
arpl
jnp
mov
adc
sub
mov
testl
out
jg,pn
mov
push
or
int
popa
daa
xchg
scas
pop
jle
lods
mov
je
lahf
mov
fdivrs
js
rcl
pusha
ja
cmpsb
cmp
arpl
decb
test
arpl
jl
dec
dec
movsb
das
test
leave
and
xor
dec
mov
inc
inc
jb
adc
rcr
imul
jne
dec
or
cmp
mov
jge
sub
pop
testl
mov
mov
aaa
pop
xchg
pop
jne
xchg
sbbl
inc
xchg
pop
roll
adc
push
push
aam
pop
lcall
lods
push
inc
jb
nop
rolb
pop
and
adc
pop
pop
jo
rorl
mov
divb
in
ret
aad
adc
stos
repnz
popa
xchg
jae
pop
fs
fsubs
mov
aam
push
enter
ljmp
cli
cmp
fidivrl
sub
jp
pop
mov
cli
jne
mov
inc
sub
jmp
jne
push
jmp
sub
ja
push
std
ret
jno
lods
popa
push
jbe
mov
dec
jno
fists
xchg
push
mov
xchg
scas
ljmp
cmp
inc
sbb
int
pop
inc
jae
dec
push
es
int
sbb
sub
test
mov
inc
rorl
pushf
fisttps
std
add
leave
adc
or
push
arpl
mov
add
int
add
minps
fcompl
std
mov
mov
jg
and
xchg
jb
rcrb
jnp
push
lock
sub
mov
insb
fildl
aam
lods
inc
fnsave
and
push
icebp
lret
lret
jo
mov
xor
mulb
pop
movsb
mov
lods
adc
pushf
jmp
ficompl
in
or
adc
mov
call
jp
lock
aad
adcb
dec
stos
scas
imul
inc
adc
int
xor
aad
punpckhwd
mov
out
shl
adc
lahf
cs
mov
jae
sbb
lock
mov
xchg
jle
mov
mov
pop
nop
jnp
mov
push
or
lods
mov
fxch
in
sbb
addw
add
imul
roll
rorl
je
insl
jo
fmuls
insb
push
inc
testl
outsl
and
jnp
push
inc
pop
lcall
sar
push
ret
cmc
mov
hlt
cmp
je
mov
push
dec
fimull
and
adcb
push
and
in
loope
add
pop
adc
xor
or
ds
pop
mov
mov
jle
shl
xchg
xchg
xchg
out
dec
cmp
lods
data16
adc
mov
push
std
inc
sbb
cli
xor
in
shrb
stos
or
rep
fmuls
sub
push
mov
xchg
mul
movsb
pop
jecxz
jns
stc
pop
divl
rcrl
test
xor
jge
dec
mov
movsb
cmp
push
sub
push
mov
and
push
or
adc
into
into
pop
dec
aaa
or
cmp
mov
daa
mov
or
inc
push
and
mov
push
mov
roll
add
mov
je
mov
jbe
mov
in
in
sub
or
mov
leave
dec
in
cltd
movsb
dec
pop
xchg
call
test
mov
js
pop
adc
call
xchg
lods
pop
and
lahf
iret
cmp
std
sti
aad
decb
xchg
loopne
bound
lock
imul
push
js
add
xor
and
push
fiadds
fs
xchg
push
test
mov
movsb
dec
aam
les
jle
mov
add
xor
and
push
fiadds
fs
xchg
push
test
mov
movsb
dec
aam
les
jle
mov
add
xor
and
push
fiadds
jle
push
xchg
push
test
mov
movsb
dec
aam
les
jle
mov
add
xor
and
push
fiadds
movsb
push
xchg
push
test
cmp
or
sbb
in
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
dec
adc
js
mov
into
xor
jp
dec
clc
pop
mov
lcall
ljmp
or
cmp
fsubrs
pop
call
inc
test
test
mov
cli
jo
pusha
fcoms
xchg
add
shll
subb
jge
push
hlt
jle
sbb
ljmp
pop
popf
sbb
jmp
imul
sbb
dec
mov
cmpsl
jmp
nop
les
stos
sbb
lret
dec
dec
icebp
sub
push
dec
fsubrs
mov
test
inc
xchg
mov
movsb
lcall
stc
pushf
andb
daa
call
jne
mov
cmp
sub
mov
stos
sbb
xlat
jno
gs
xchg
fldcw
fnstsw
cmpsb
ja
cwtl
lds
loop
dec
sbb
aad
in
cwtl
pop
testl
push
push
lea
pop
jo
cwtl
cmp
test
mov
fildl
cmp
lret
aaa
push
adc
sub
lds
ljmp
pop
stos
or
shr
sarb
add
or
cli
or
fidivrs
gs
dec
sub
aas
fwait
ds
xor
dec
aad
daa
scas
cmp
lds
mov
in
testb
mov
jbe
imul
sub
lcall
sub
fdivrs
dec
clc
pop
mov
cwtl
cmp
ljmp
or
cmp
call
sub
sbb
ja
xlat
imul
cltd
sub
std
shr
stos
cwtl
adc
in
jae
int3
sub
sahf
test
or
sub
push
js
sbb
negb
push
and
lods
lea
dec
xor
xchg
icebp
inc
sahf
fidivrs
ds
fldt
stos
ret
pop
nop
cli
mov
jae
shr
icebp
add
xchg
xor
push
jae
push
mov
dec
xchg
gs
jno
xchg
mov
fnstcw
push
push
and
push
mov
or
scas
pop
xlat
cmpsb
or
jno
stos
pusha
aam
sbb
add
xchg
mov
jmp
mov
jmp
test
mov
cmpb
repz
leave
mov
adc
mov
lahf
fstpt
es
cmc
dec
adc
pushf
aad
imul
cmpsb
nop
jae
rolb
mov
popl
loope
and
xchg
mov
or
push
jno
ds
sbb
pop
int3
aaa
ds
push
shr
enter
ljmp
sbb
out
mov
mov
mov
push
testl
jle
rcrb
loopne
je
jmp
jo
out
outsb
lods
xchg
mov
add
pop
add
dec
mov
xchg
test
mov
stos
dec
sub
inc
mov
in
mov
cvtps2pi
xchg
cld
jb
jmp
mov
mov
cmp
mov
cltd
adc
aam
je
xchg
shrl
inc
stos
movsb
mov
cmovne
mov
adc
subb
addr16
xchg
xor
std
iret
sbb
movsb
push
pop
sbb
cmc
shr
ds
pop
gs
aad
loop
addr16
pop
lock
sub
imull
inc
stos
outsb
sahf
mov
cmp
lahf
xchg
sbb
int3
push
sbb
mov
sbb
push
andl
pop
hlt
loopne
test
and
out
sti
mov
sub
imul
jg
lcall
cs
mov
sbb
sbb
mov
cmp
fildl
mov
cmp
add
movl
xor
loopne
in
mov
cmp
xchg
loopne
cmp
or
xchg
push
mov
inc
subb
aad
arpl
insl
adc
pushf
je
push
mull
stc
lahf
mov
jb
cmp
mov
add
clc
sub
fsubrs
or
pop
dec
mov
fsts
pushf
mov
mov
mov
pusha
pop
jmp
sub
int3
in
xor
jae
sbb
shll
int
adc
dec
in
shll
bswap
cvtpi2ps
push
sub
inc
outsb
in
xchg
das
in
push
ret
sbb
int
pushf
jecxz
das
sbb
mov
and
jl
lret
fcmovu
sbb
adc
or
scas
mov
insl
ret
call
sti
int3
or
xchg
sbb
dec
insb
adcl
push
sbb
out
in
push
inc
jae
lods
xchg
and
mov
push
jns
push
inc
push
das
insb
xchg
xchg
cmpsb
mov
arpl
in
movsl
mov
and
out
add
sti
push
ja
and
adc
adc
cld
stc
adc
dec
push
mov
ja
imull
pop
jne
filds
sub
add
push
es
mov
shll
sbb
inc
fsub
push
orl
or
stc
inc
or
scas
cmp
or
mov
pop
rcll
xchg
test
in
xchg
test
sub
lds
fisttpll
or
int3
jp
pavgb
dec
sub
in
test
lock
cmc
xor
sub
xchg
arpl
xchg
mov
fmull
pop
pop
ret
cmp
xchg
and
cld
jno
inc
in
stos
lods
cmp
lahf
mov
inc
push
mov
pop
test
xchg
into
je,pt
stc
jp
mov
sbb
push
pushf
inc
in
push
mov
ljmp
out
sub
jecxz
shll
mov
jl
fcomps
cmc
sub
sub
jae
test
or
push
in
or
and
jp
sbb
jp
loop
pop
enter
and
inc
dec
out
pop
out
fwait
into
loopne,pn
adc
pop
scas
shrb
sub
jg
xor
es
jle
mov
xor
test
lods
ret
mov
mov
and
out
adcl
jecxz
roll
cmp
xchg
das
inc
into
push
mov
add
add
mov
sbbl
dec
aas
fidivrl
sti
jecxz
fs
je
sbb
repnz
ret
sub
xchg
mov
in
jmp
std
ss
pusha
imul
enter
add
mov
stos
jns
adc
sbb
mov
jnp
test
mov
inc
lea
mov
lret
xchg
in
ret
pushf
fs
in
and
mov
clc
dec
mov
or
and
dec
and
or
fldenv
imul
push
add
pop
pushf
xchg
cld
stos
test
int3
add
cmpsb
ret
mov
rcl
cmc
inc
lret
xor
mov
aam
pop
cmc
mov
ds
mov
sub
jge
xchg
gs
fists
repnz
xor
xchg
nop
popf
and
and
pop
sbb
adc
outsb
out
sub
aas
sbb
mov
inc
mull
pop
sti
das
cld
add
add
add
jns
push
mov
jne
sti
fwait
sbb
xor
jmp
mov
or
pushf
inc
jo
mul
jno
aam
xor
fdivr
in
repnz
xlat
in
push
rcl
insb
int3
dec
rcrb
imul
jb
repnz
sub
mov
mov
cmp
mov
bound
add
cltd
je
and
icebp
out
sbb
and
adc
sbb
xchg
push
rorb
shrb
mov
cmp
mov
jb
in
and
add
mov
sarl
lea
jb
xchg
test
out
lds
aas
cli
push
xor
jb
or
jno
add
loope
test
adc
mov
in
stc
mov
xchg
aaa
sbb
test
mov
fcoms
das
lds
xlat
ss
nop
out
sub
iret
leave
adc
and
fs
inc
call
mov
in
xor
and
imul
jb
dec
insb
subl
pop
sub
stc
rorl
lods
mov
stos
xlat
sbb
sub
pop
ss
movsl
xchg
lock
rclb
dec
fistpll
shrl
enter
test
les
repnz
test
push
jle
sub
mov
cmp
push
pop
cmpsl
adc
inc
repnz
ss
add
lret
and
cmp
inc
add
pop
push
frstor
sub
dec
mov
repz
cli
sbb
push
pop
rcrl
cmpsb
xchg
pop
arpl
rcrl
inc
fwait
push
push
imul
sahf
pop
mov
pop
mov
add
jl
and
je
insl
jl
inc
cmpsb
test
lea
add
jge
sti
sub
int3
in
fs
jo
jno
push
and
out
dec
pop
pushf
mov
jecxz
mov
dec
push
test
dec
or
adc
aaa
out
adc
sbb
push
pop
shl
mov
mov
xchg
or
jmp
lods
mov
sub
scas
scas
add
adc
popf
repnz
and
push
sahf
in
mov
xor
mov
pop
push
xchg
mov
in
sub
arpl
loop
adc
mov
cmp
popf
cmpsb
lret
cmp
pop
jno
adc
pushf
push
cmpsl
insb
mov
jge
jbe
jmp
aad
call
jo
jle
movsb
dec
mov
xor
cmp
sub
int
scas
daa
dec
test
and
ficoms
pop
cwtl
pushf
movsb
test
clc
push
ja
mov
push
add
sub
xor
jl
adc
aaa
add
fwait
cli
jecxz
jae
push
aaa
lea
and
xchg
jmp
fs
xorb
aaa
xchg
adc
pop
mov
mov
cmp
aad
int
or
mov
xlat
aaa
in
cmp
or
cltd
repz
pop
ljmp
and
lods
insb
inc
push
and
pusha
loopne
cmpsb
xor
push
outsb
dec
adc
repz
xor
mov
mov
mov
sbb
arpl
lods
push
and
clc
jecxz
cmpsb
test
cmpl
jns
jne
sbb
jge
pop
pusha
lods
subl
pop
mov
loop
mov
ficoml
push
xchg
in
mov
dec
andl
sbb
pop
sbb
push
mov
pop
or
inc
inc
mov
xchg
aam
push
jb
mov
repnz
mov
push
int
insl
fistpll
lret
push
add
jnp
and
add
jl
mov
pop
mov
xor
sbb
sub
xchg
loopne
pop
jmp
inc
xor
ljmp
mov
cmc
nop
add
cwtl
fucomi
add
stos
sub
sub
and
xor
loope
fadds
jae
adc
les
mov
sbb
insl
ja
jp
mov
mov
and
mov
mov
jle
shl
mov
lahf
int
inc
inc
xor
mov
cli
pop
sub
push
push
jno
fwait
rorb
cmp
mov
icebp
cmpsb
cmpsb
mov
mov
lds
ljmp
jns
test
mov
xchg
ficomps
pop
and
rcrb
pop
or
push
lock
sahf
imul
int
outsl
je
cld
mov
test
pop
cmp
sub
push
lret
push
int3
ficoms
test
jge
std
pop
lret
mov
mov
mov
ret
dec
mov
inc
das
xor
and
sahf
ficompl
push
push
mov
fnstsw
bound
or
movsb
pop
mov
or
ret
inc
shlb
test
outsl
ret
dec
dec
aaa
push
cmpsl
xorl
mov
pop
dec
scas
cmp
and
fcomi
ficoml
push
mov
mov
push
sub
push
lea
and
loopne
sbb
in
lods
shll
rol
shlw
int3
sti
lcall
or
fisttps
mov
in
mov
mov
pop
jbe
arpl
xchg
sub
je
lret
rol
xor
out
jae
in
xor
pop
jbe
sbb
aad
movsb
insl
ljmp
dec
or
sub
xor
or
mov
mov
std
je
pop
sub
mov
clc
rorb
cmp
or
repnz
jmp
pop
lea
mov
pop
sahf
pusha
add
jmp
loope
xchg
push
or
mov
push
cmpsb
in
push
int
mov
jnp
lret
xor
adc
dec
dec
inc
arpl
popa
cmpl
icebp
decb
hlt
shll
push
es
clc
movsb
dec
decb
in
call
loop
xlat
in
out
lds
jp
adc
inc
jge
sbb
sahf
test
outsb
sub
jmp
cmp
imulb
shr
sub
lret
and
xchg
loope
mov
bound
lcall
pop
mov
and
add
scas
mov
popa
in
repz
add
sub
enter
dec
push
jmp
scas
jecxz
lret
and
icebp
pop
pop
push
scas
push
or
lock
scas
sub
into
sbb
imul
sub
clc
es
mov
mov
daa
popa
xchg
shl
popa
cmp
push
imul
ds
cmp
mov
popa
cmp
mov
call
push
ljmp
mov
es
out
or
bound
out
stos
xlat
lcall
fcoms
sbb
adc
data16
bound
imul
xchg
test
lods
or
out
jmp
fimull
add
sbb
jno
sbb
idivb
inc
push
cli
push
and
dec
pop
dec
cmp
xor
mov
xchg
sahf
jo
aam
xor
lahf
repnz
push
mov
jnp
mov
mov
out
add
xchg
shll
push
push
xor
xor
xchg
inc
scas
dec
ds
fdivrp
stc
push
mov
jmp
lret
out
cmp
sbb
push
adcl
sbb
ljmp
jg
xchg
clc
daa
xchg
rclb
pop
addr16
jbe
test
mov
mov
mov
sub
add
aad
mov
sbb
enter
ds
sbb
lods
mov
inc
add
sbb
ja
and
inc
pop
shlb
mulb
stc
orl
je
mov
jb
sbb
pop
insb
jecxz
push
xor
jno
jo
lea
cld
and
and
int3
and
movsl
mov
xchg
inc
ljmp
mov
out
pop
rcrl
xchg
cmp
nop
in
or
push
or
mov
pop
jae
iret
scas
xchg
int3
call
adcl
fisttpll
sbb
or
test
cmpsl
adc
xorb
dec
jg
xlat
dec
sbb
pop
or
sbb
pop
js
cmc
icebp
cwtl
out
test
pop
fbstp
dec
ds
or
mov
rolb
cld
pop
fstps
inc
pushf
out
std
std
popa
dec
push
pop
adcl
sub
xchg
and
dec
mov
test
cmpsb
sub
lcall
pop
loop
ds
push
nop
call
xor
sti
lods
push
push
sbb
ja
mov
andl
or
out
stos
pusha
mov
incb
sti
dec
and
sbb
xor
xchg
push
fsub
in
cld
adc
push
dec
call
notb
mov
je
dec
insl
push
and
lcall
idivb
ret
es
and
scas
mov
fidivs
in
sub
outsb
mov
scas
jge
in
xchg
jae
icebp
daa
or
jns
inc
xchg
mov
rorl
mov
add
xchg
mov
jp
mov
fstpl
mov
or
lcall
sub
loopne
sub
scas
aaa
push
test
adc
mov
jnp
xor
sbb
mov
test
cmp
push
and
add
jp
cwtl
jo
cmp
pusha
shrb
out
cmp
daa
lds
pushw
ret
jle
lahf
jo
cmpsb
popa
xchg
ret
cld
pusha
inc
mov
mov
popa
push
or
lahf
orl
sub
pop
pushf
xlat
cmpsl
iret
mov
cltd
dec
sbb
addr16
push
pop
add
and
adc
adc
cmpsl
cmp
jg
add
movsl
out
jo
in
sbb
ds
inc
add
out
lret
sub
mov
dec
in
or
adc
decl
push
add
dec
mov
enter
out
xchg
sub
sbb
pop
lea
bound
dec
add
fists
sub
jns
mov
add
nop
jg
mov
mov
lret
or
mov
or
outsl
sub
push
popf
fstl
inc
out
adc
aam
pusha
cmp
lret
pop
in
pop
enter
add
adc
add
mov
add
cmp
add
sbb
and
leave
push
dec
cmp
push
bound
xchg
pop
add
sub
popa
in
ret
and
pop
cmp
fsubp
gs
mov
add
mov
xor
mov
pusha
fisttpl
mov
fcoms
int3
jnp
scas
and
sbb
imul
loopne
pop
xor
adc
fwait
in
adc
xor
pop
inc
adc
xchg
pop
or
divl
xchg
rorb
add
xchg
aam
jne
pop
push
add
movsl
push
pop
mov
repz
mov
std
xchg
data16
icebp
jmp
int
xor
cmp
inc
fildl
xlat
jbe
sub
sub
jo
shlb
mov
cltd
and
mov
dec
adc
fildl
or
pop
inc
and
stos
aam
ljmp
pop
sar
clc
xor
mov
mov
mov
pop
movq
xor
push
shrb
cmpb
rcll
xchg
test
test
add
addr16
fidivs
das
sub
frndint
cmp
or
into
jb
and
fisttps
dec
imul
add
call
push
sub
fwait
loope
mov
xor
loop
repz
out
ds
push
lret
inc
insl
ficomps
cmpl
lods
sbbl
sub
sbb
inc
stos
mov
or
lock
adc
in
inc
sbb
and
lods
ss
fidivrl
and
mov
cmp
mov
mov
jb
xlat
stos
stc
outsl
cmp
fisttpl
mov
mov
test
ljmp
mov
test
lret
cmpsl
dec
inc
add
nop
mov
adc
mov
adc
sub
ret
fldenv
ss
add
sbb
repnz
xchg
xor
imul
ret
addr16
adc
push
xchg
jb
icebp
ja
je
aad
sbb
insl
mov
aas
pop
sub
pop
jge
mov
jae
into
test
lret
jl
lds
adc
inc
lds
mov
add
mov
pop
es
icebp
dec
fnclex
dec
call
icebp
bound
and
push
inc
mov
lock
jmp
stc
aam
bswap
dec
in
cvtps2pd
fs
fsubrp
cmp
xchg
jmp
mov
shll
jbe
dec
push
cwtl
movsl
daa
fisubl
aas
mov
and
in
sbb
push
dec
mov
adc
mov
lds
add
jbe
ficompl
daa
je
outsl
movsl
fmull
mov
inc
mov
dec
insb
dec
mulb
mov
pop
mov
inc
push
ret
popa
pop
ret
sbb
insb
mov
ss
sub
or
dec
fidivs
sbb
arpl
mov
mov
pusha
xor
sub
cmp
jle
mov
popa
je
cli
dec
pop
or
sub
push
stos
push
call
pushf
int
call
jns
cmp
mull
cli
and
popf
jg
lahf
jle
mov
das
fildl
lret
mov
lock
sub
xchg
notl
sub
push
mov
jge
decl
loop
jge
mov
clc
call
hlt
mov
rorb
insl
inc
sub
cmp
mov
sub
cmp
ja
hlt
add
fwait
jg
fsubl
nop
jnp
ja
xchg
xor
in
mov
rorb
mov
cli
lea
cmpsl
popa
mov
fldl
stc
sbb
adc
jl
jl
rorl
adc
fimuls
xor
push
inc
aaa
and
lds
test
push
push
loope
out
push
pop
jmp
mov
cmp
stc
jg
add
sbb
adc
test
fmulp
loopne
mov
push
shlb
mov
cmp
popl
sbb
cmpsl
push
ret
inc
les
fninit
pxor
mov
movsb
pop
jo
sub
xchg
sbb
pop
jo
adc
insl
out
jnp
leave
and
cmc
sub
jl
dec
mov
std
out
and
mov
push
test
mov
pop
xor
stos
ret
jecxz
mov
rcll
imul
xlat
cmp
adc
nop
adc
cltd
pusha
imul
imul
cmpsb
je
lea
inc
mov
sbb
fcmovnb
movsb
ja
sbb
loop
call
sub
mov
das
mov
sub
mov
mov
das
push
es
test
scas
lahf
dec
mov
push
pop
inc
ds
dec
mov
pop
mov
test
push
fistps
sub
xchg
dec
push
push
and
mov
int
cwtl
cmp
int3
xchg
outsb
leave
aaa
aad
hlt
mov
pop
push
es
in
xlat
loopne
jecxz
inc
mov
push
subl
imul
add
fbstp
adcl
out
test
scas
push
rorb
mov
xor
xor
jno
adc
adc
out
pushf
inc
add
sub
dec
xor
and
sub
js
or
cmp
call
sub
sbb
pop
cli
push
stos
sbb
enter
call
sub
sbb
pop
mov
mov
fimull
stos
sbb
sub
fdivrs
dec
clc
pop
mov
cltd
cmp
ljmp
or
mov
rolb
clc
sub
push
cmc
inc
in
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
movaps
jl
or
sbb
dec
cmp
mov
mov
mov
fists
out
int3
fmull
sub
cmp
or
sbb
insb
pop
jl
dec
jg
lods
lahf
mov
iret
ret
out
int3
fmull
mov
cli
das
xchg
aas
push
pop
pop
xor
inc
jg
lods
mov
out
iret
mov
xchg
mov
das
pop
push
jns
arpl
test
mov
movsl
into
mov
lock
xor
call
js
jecxz
jns
notl
push
adc
jae
int3
cwtl
stc
fbld
lock
jne
inc
push
jbe
sbb
and
xor
cmp
pop
push
add
sbb
sub
cmp
or
sbb
js
dec
mov
jg
adc
inc
popf
lahf
stc
fbstp
xor
cli
lcall
pop
jg
xchg
hlt
mov
and
lahf
xchg
adc
out
adc
and
lret
cmp
pop
enter
pop
pop
aad
sub
mov
mov
aas
sbb
insb
pop
jl
dec
jg
lods
lahf
adc
mov
adc
aam
out
push
jl
imul
adc
cmp
sbb
out
cli
int3
fsubrl
cli
decl
sahf
xchg
mov
imul
jle
sub
adc
sub
clc
leave
rcr
mov
cld
xchg
pop
fsubrl
pop
jo
and
outsl
dec
jg
lods
lahf
mov
iret
in
out
int3
fmull
sub
cmp
or
sbb
insb
pop
jl
dec
jg
lods
lahf
mov
iret
in
out
int3
fmull
sub
push
jno
repnz
or
arpl
dec
nop
sbb
out
inc
rcll
adc
dec
pop
mov
out
xor
xchg
rorb
call
subb
mov
mov
out
cmpsl
clc
cld
add
jle
bound
out
test
add
pushf
fwait
jnp
mov
push
mov
mov
xchg
loope
mov
cmp
jmp
or
inc
data16
shlb
cmp
bound
aas
push
loopne
cli
into
push
and
jle
into
inc
cld
or
sub
sarb
int3
dec
jbe
std
jg
inc
or
adc
mov
sbb
lock
pop
or
sbb
into
frstor
mov
into
pop
stc
lahf
test
xchg
sbb
fidivrl
gs
mov
cmp
mov
jge
leave
sub
pop
daa
shlb
cld
dec
mov
pop
std
ja
pop
es
mov
int3
and
jnp
push
pop
mull
adc
pushf
cmp
ret
mov
jnp
daa
cmp
int
enter
push
and
lahf
jg
or
inc
sub
les
cwtl
xchg
bound
mov
mov
lods
negl
inc
stos
jmp
push
mov
push
jmp
pop
jns
movsb
or
test
sti
rcrb
sub
cld
aam
ss
fwait
sbb
mov
movsl
inc
mov
sbb
mov
fldenv
adc
push
test
xor
sahf
add
test
adc
pop
push
jbe
sarl
jecxz
xor
push
sahf
sub
mov
test
mov
mov
xchg
sahf
inc
push
lret
popf
aam
or
mov
push
loopne
adc
xchg
bswap
shrb
jb
adc
insb
mov
sub
push
mov
and
movsl
jnp
mov
shll
mov
fdivrl
cmp
cmp
fstpl
hlt
lea
gs
push
je
dec
jge
inc
cmpsb
loop
mull
andl
fsubl
cmp
or
push
dec
add
flds
data16
and
les
lods
xchg
cmpb
mov
cmp
and
fcompl
adc
mov
out
cmp
loop
out
jle
jns
cmpsl
dec
aad
push
mov
ds
nop
loop
mov
mov
shlb
xchg
addr16
jns
data16
add
std
bound
inc
cmp
push
int3
arpl
stc
fabs
in
sbb
and
pop
and
cmp
loope
add
sti
clc
inc
dec
arpl
das
jle
pop
and
or
in
jp
xchg
mov
push
xlat
lock
lcall
xchg
arpl
lret
faddl
jns
mov
xchg
jge
out
ret
ljmp
pop
pop
aaa
mov
xchg
movaps
or
jmp
outsl
into
xor
inc
fisubrl
outsb
pop
int
inc
add
popa
add
dec
sarb
push
test
fs
push
add
pushf
daa
cli
pushf
outsl
test
loop
mov
mov
repnz
mov
fcoms
out
add
mov
mov
outsb
push
sbb
loopne
sub
rol
pop
clc
ret
adc
adc
les
push
push
sub
or
add
sbb
xlat
inc
mov
aas
fs
cmp
dec
xchg
inc
scas
adc
mov
cmpsb
inc
sahf
aam
orl
dec
add
movsb
xchg
test
inc
jno
push
ss
cmp
and
shl
sbb
test
andb
mov
stc
dec
jp
mov
in
jg
cmp
mov
adcb
jbe
mov
scas
xor
xor
sub
js
jp
das
rcl
xchg
ret
pop
pop
sbb
dec
pop
adc
lock
lret
jg
adc
sub
push
in
lds
inc
shll
in
rclb
pushf
lret
sbb
jo
pop
pushf
cmp
fisubrs
and
push
rcrl
or
orl
inc
cmp
push
stc
mov
aad
pop
mov
cli
add
dec
pop
iret
enter
je
repnz
mov
aaa
fcoms
lock
mov
cltd
sbb
cmc
and
das
adc
outsb
stos
mov
lea
dec
rcrl
push
loopne
cld
inc
das
mov
arpl
lea
or
sti
inc
or
cli
andl
out
stos
pop
clc
popf
fs
lock
insb
jbe
repnz
add
mov
add
inc
repnz
dec
les
xor
or
dec
inc
dec
pusha
xor
lods
in
cmp
dec
imul
xchg
push
int3
sbb
sub
into
and
xchg
jg
xchg
cmp
int
sub
fdivl
or
sbb
lds
and
rorl
or
inc
incl
mov
cmpsb
shll
cs
shlb
mov
dec
rcrb
sub
aaa
dec
xchg
lea
aaa
dec
inc
pusha
jle
or
push
sub
aad
mov
xor
cmp
shlb
in
ljmp
sbb
scas
mov
jmp
mov
jns
pop
add
pop
push
mov
push
in
push
mov
dec
sub
test
fstpt
das
push
jg
test
pop
lea
outsb
inc
mov
sbbl
lret
jg
and
mov
rolb
inc
cmp
inc
mov
mov
mov
and
pop
loop
leave
xchg
fstl
xchg
or
flds
fildll
out
xchg
js
nop
pop
lods
lods
pop
out
daa
sub
in
cmp
dec
pusha
enter
lret
mov
inc
xchg
ljmp
xchg
test
mov
xor
sbb
test
or
sbb
pop
mov
push
jno
hlt
push
mov
dec
xchg
in
mov
adc
sub
cli
outsb
pop
fstpl
or
xor
adc
jbe
mov
cmp
and
les
lods
xlat
push
je
std
push
sahf
fdivrs
mov
adc
push
lahf
pop
jnp
lret
mov
loop
mov
jae
jle
mov
xchg
cmpsl
sub
sub
jge
ja
int3
imul
mov
andb
mov
mov
add
shll
aad
shrb
gs
jle
mov
mov
mov
iret
inc
pusha
sbb
nop
xchg
pop
and
sub
sub
sbb
cli
xchg
fidivrs
daa
or
clc
es
mov
shll
pop
inc
aad
sub
inc
mov
jl
inc
fildll
and
mov
pop
inc
push
pop
mov
inc
adc
push
jb
jp
inc
push
push
dec
fimuls
inc
mov
rcrl
sbb
outsb
or
cs
mov
xor
sbb
push
lahf
dec
dec
dec
dec
mov
jg
fldenv
fs
test
lcall
ret
fs
cmp
out
sub
stos
fs
add
inc
out
fisubrs
dec
dec
inc
sbbl
inc
lcall
notb
jne
mov
add
dec
ror
loop
loopne
pop
cmpl
mov
xor
and
sti
push
jbe
roll
je
out
cs
loopne
xchg
xor
jge
ss
out
rorb
or
push
notb
in
cmpsl
xor
or
cmpl
movl
lods
sub
cmpsl
cmp
jg
imul
arpl
out
mov
movsb
outsl
out
or
mov
shrl
jmp
mov
add
sub
scas
out
jnp
or
or
sarl
xchg
repz
mov
mov
ljmp
push
sbb
mov
mov
inc
fiaddl
sbb
and
sbb
rcrl
iret
enter
pop
ja
sub
aam
add
call
in
inc
in
cmpsb
dec
dec
pslld
cwtl
dec
push
cld
loope
loopne
cs
out
js
push
pusha
and
stos
repnz
pop
mov
or
dec
mov
sub
je
jae
in
gs
leave
xor
pop
loop
in
fnstenv
xchg
enter
cmp
push
mov
in
mov
test
or
cmp
lahf
adc
mov
mov
fwait
test
xor
adc
insl
cwtl
out
cwtl
mov
jmp
daa
in
xchg
das
xchg
pop
jecxz
scas
in
jl
call
shll
shr
in
loope
je
cs
inc
fisubrs
xchg
arpl
in
mov
xor
mov
and
aad
fistl
push
aad
mov
js
or
aad
vprotb
inc
cwtl
adcl
push
ficoms
fdivl
adc
xchg
pop
and
mov
mov
push
xchg
in
in
mov
in
push
lea
adc
sbb
xchg
xor
jl
mov
or
mov
add
ja
mov
or
pushf
les
mov
sbb
ret
sub
push
pop
dec
les
xor
cmp
sub
stc
dec
sub
lcall
fidivrs
dec
lea
in
mov
mov
jno
test
ds
xlat
push
rcrl
icebp
inc
xor
scas
xor
ljmp
outsb
hlt
leave
pushf
sub
pop
xchg
into
ret
loop
addr16
push
xorb
xchg
insb
mov
add
cld
xorl
data16
pop
test
sbb
rol
rcll
je
sub
sub
xor
xchg
push
repz
jno
xchg
test
call
inc
push
addl
leave
and
push
push
insl
cmp
adc
test
jno
xor
or
repz
fs
push
ja
pop
jnp
or
xor
and
loop
outsl
outsl
fmul
mov
jb
xchg
mov
xchg
inc
lds
ficomps
mov
fcmovbe
scas
xchg
push
stos
pop
stos
mov
jg
loopne
push
jl
sbb
lahf
inc
xchg
je
repz
arpl
or
lods
ror
and
xchg
fisttpll
jno
pop
cmp
addr16
scas
mov
mov
testl
das
add
clc
xchg
nop
pusha
xor
xchg
adc
popa
lea
test
stc
out
or
push
push
mov
sbb
test
rorl
mov
mov
inc
pop
call
call
sbb
adc
mov
stc
sub
sbbl
call
shlb
lds
add
push
push
jp
mov
xchg
lea
pop
or
push
das
sub
shlb
jecxz
pop
es
pop
pop
in
sub
mov
mov
cmp
movsb
push
les
mov
xchg
pushf
cmp
cmc
mov
jg
call
inc
lret
jns
rolb
pop
add
add
inc
sbb
cltd
pop
xchg
pop
sti
mov
inc
inc
lret
cwtl
mov
in
jbe
mov
mov
addb
xorb
into
sub
xor
adc
cmpsb
daa
sti
jmp
mov
aam
push
cmp
adc
fs
inc
ret
xchg
cmp
sub
push
rcl
mov
movsl
cmpsl
dec
fwait
sbbb
iret
inc
add
in
cld
out
into
and
cmpsl
stos
fnstsw
push
data16
in
stos
bound
mov
inc
jl
dec
iret
dec
stos
roll
inc
mov
sub
sti
mov
inc
fwait
lds
jbe
outsb
sti
mov
outsl
gs
shlb
sarl
mov
repz
stos
dec
fistpll
aam
sub
adc
sub
jno
fadd
int
and
jmp
mov
pop
xchg
cmp
sarb
push
mov
cmp
iret
inc
in
clc
xchg
jb
xlat
adc
pop
and
xor
xchg
and
add
cmp
nop
addr16
sub
dec
scas
enter
fnstsw
imul
dec
enter
mov
sbb
or
cmp
sbb
cld
repz
stc
or
sarb
lahf
push
push
loop
mov
push
push
dec
leave
and
ja
push
andl
xor
xor
lret
lcall
pop
dec
mov
aaa
loopne
xchg
call
lods
add
sbb
or
mov
push
inc
cmp
fwait
jle
int
in
enter
pop
mov
fsubrl
pop
dec
stos
pop
daa
jno
pop
loopne
in
xchg
imul
insl
mov
jno
sbb
lods
in
push
je
xchg
ror
insb
fdivrs
mov
mov
adc
sti
rclb
scas
mov
fidivl
out
cwtl
jle
outsb
fs
aas
aam
push
xchg
std
pop
call
cld
in
sub
stos
aad
adc
sti
dec
cltd
and
xor
out
adcl
add
sbb
mov
in
in
push
jg
aas
ss
xchg
addps
shl
repnz
insb
xor
jecxz
inc
mov
fcmovnb
repz
xchg
sub
cmpsb
pop
aas
sub
jmp
xor
sbb
adc
xor
add
mov
mov
mov
shlb
push
mov
lods
ljmp
add
pusha
and
in
cwtl
jl
lds
dec
mov
cmp
adc
test
pusha
out
adcl
or
mov
adc
mov
sub
dec
sub
fnclex
sub
jmp
pop
xchg
stos
pop
jecxz
aaa
push
popa
ljmp
and
add
into
pushf
std
sahf
jle
add
mov
jns
dec
rcrl
in
push
ljmp
mov
inc
std
popf
cmpsl
andl
xchg
inc
clc
dec
mulb
pop
jecxz
push
call
adc
push
push
arpl
mov
pop
pushf
movsl
xor
pop
int3
int3
sub
jae
adc
xchg
std
inc
adc
dec
fidivrl
aaa
lods
adc
add
mov
sub
jle
imul
movsb
adc
outsl
adc
push
dec
fimuls
into
addr16
inc
push
call
mov
xor
test
loope
add
nop
mov
push
enter
sbb
shlb
add
or
sub
leave
test
call
dec
or
repnz
in
mov
mov
das
daa
mov
popa
add
repnz
subl
mov
cwtl
xchg
test
cs
mov
shll
shl
lahf
xchg
or
ror
xor
mov
jbe
lret
cwtl
and
pushf
jmp
orl
popl
int3
jbe
jno
sbb
arpl
popa
das
mull
sahf
dec
repnz
xchg
outsl
aad
stos
test
xchg
xchg
ja
pop
sub
add
mov
jne
lcall
fs
call
add
lea
cmpsl
xchg
cmp
adc
jo
push
mov
push
inc
jno
xor
mov
shll
and
sub
adc
pop
int3
sub
push
lock
push
inc
into
int3
cli
ffreep
dec
mov
movsl
test
icebp
adc
inc
mov
dec
mov
pop
insl
inc
inc
push
daa
jecxz
loopne
adc
fcomip
sub
add
ljmp
lods
daa
inc
repnz
push
aam
sahf
ds
lods
fidivl
adc
sbb
and
inc
xchg
sub
jae
jecxz
push
mov
cmc
jns
lcall
sub
push
add
mov
mov
mov
div
push
cs
push
mov
inc
jnp
and
mov
mul
lods
cmpsb
inc
xchg
jmp
ret
adc
cmpl
mov
push
xchg
mov
int3
xchg
and
mov
insb
sub
push
es
fwait
sbb
or
into
or
je
add
cwtl
pop
mov
and
lret
sbb
negl
jg
jne
test
cli
add
popa
fnstenv
mov
dec
movsl
or
out
out
std
dec
cld
fwait
jecxz
push
dec
loope
popf
add
cs
jb
pop
jb
lods
aad
lock
scas
or
out
into
jmp
out
jno
aas
dec
and
arpl
outsb
js
push
push
leave
cli
push
inc
daa
rolb
iretw
repz
dec
mov
loope
push
clc
pushaw
adc
repnz
xchg
push
fiadds
sub
inc
nop
dec
jns
sahf
xor
fs
mov
mov
clc
je
add
imul
sbb
cmc
mov
add
mov
lcall
test
jp
sub
lods
flds
mov
cld
inc
mov
bound
push
jbe
mov
das
scas
sahf
icebp
adc
lock
ljmp
aam
test
jge
push
sahf
or
pop
jns
enter
jl
sbb
jns
sub
mov
adc
mov
insl
push
sbb
arpl
mov
pop
push
test
pop
inc
aaa
mov
push
jp
pop
popf
ds
stos
mov
mov
inc
fcompl
dec
xchg
pop
std
popf
adc
xor
movsl
sbb
inc
int
leave
scas
lea
cmpsb
add
fscale
push
sbb
sbb
aaa
cs
imul
push
outsb
call
mov
mov
hlt
push
pop
or
jb
pop
mov
dec
and
push
shlb
inc
xorl
jecxz
add
push
cli
icebp
mov
cli
imul
push
mov
mov
fs
rorb
jns
repz
xchg
test
cmpl
shrb
push
jae
ja
sub
cmp
sbb
or
into
mov
stos
and
mov
es
mov
xchg
sbb
popl
cmpsl
pop
addr16
repnz
pop
scas
add
sub
fistpll
int3
mov
or
aam
mov
loopne
cmp
scas
sub
movsl
in
xor
outsl
icebp
lods
out
ret
mov
mov
sbb
jnp
dec
xor
mov
mulb
lds
cmp
push
cmp
stc
dec
sub
pusha
add
and
push
aas
or
push
push
enter
cmp
lahf
sub
dec
out
and
add
cmp
and
int
leave
mov
pop
test
jmp
mov
out
cmp
mov
jle
rolb
jmp
pop
jns
sub
cltd
leave
mov
add
mov
lea
mov
and
lcall
push
sub
leave
pop
lods
lods
mov
shll
nop
inc
data16
xchg
and
pop
push
mov
icebp
pop
pop
add
andl
dec
sub
or
fstl
fdivs
fwait
cmc
movsb
mov
inc
out
jge
mov
into
jmp
sarl
outsl
inc
mov
loope
mov
mov
or
inc
inc
sar
mov
mov
call
push
sbb
adc
xor
cmp
add
sbb
pop
loop
mov
aas
inc
jne
mov
pusha
into
aaa
or
out
pop
aam
lea
mov
push
in
call
dec
inc
cs
stos
popf
sub
lahf
add
mov
popl
shlb
test
pop
and
mov
popa
xor
outsb
jl
js
sbb
xor
popa
ljmp
test
jg
pusha
fidivrl
cmp
data16
ds
jl
inc
into
and
scas
cmpsb
pop
mov
inc
imul
mov
push
lods
pop
pop
ss
outsb
int3
sub
int3
pop
mov
add
adc
mov
mov
xchg
push
xchg
push
mov
je
movhlps
jb
clc
hlt
lock
ret
push
enter
xchg
popa
lds
and
int
xor
iretw
ret
shlb
out
sub
ret
rclb
inc
add
das
iret
inc
jecxz
mov
mov
and
add
push
scas
ljmp
cmpxchg
pop
arpl
jo
sub
cmp
dec
rorb
loop
js
jnp
test
insb
scas
adc
mov
push
aaa
jmp
insl
scas
std
dec
adc
mov
shrl
xor
ret
push
sbb
inc
gs
pusha
roll
ret
add
inc
fistps
bound
mov
sbb
cmp
in
xchg
inc
add
in
test
mov
je
jae
adc
ds
jo
js
aas
push
fwait
push
inc
pop
adc
push
dec
lcall
iret
mov
push
cwtl
sbb
or
lds
out
ret
lock
dec
int3
xor
popa
cmpsl
filds
and
xor
xchg
push
jle
jns
pop
into
mov
push
xor
enter
ret
ds
adcb
lea
ljmp
out
mov
mov
dec
jnp
adc
sub
clc
dec
mov
das
xchg
jecxz
test
lods
ret
sub
lcall
sbb
insb
pop
jl
dec
jg
lods
lahf
mov
iret
in
out
int3
fmull
sub
cmp
or
sbb
insb
pop
jl
dec
jg
lods
lahf
mov
iret
in
out
int3
fmull
sub
xor
adc
sbb
pop
pop
outsl
dec
jg
mov
mov
cld
out
bswap
pop
fsubrs
call
pop
jl
int3
lcall
mov
test
mov
movsb
mov
mov
or
xor
or
mulb
test
cwtl
add
push
fadds
mov
mov
or
js
push
xor
add
push
fadds
mov
mov
or
js
push
xor
cs
push
mov
mov
jecxz
repnz
sarl
ret
repnz
cli
fstp
push
push
lock
mov
add
gs
or
in
fistl
inc
int3
push
push
popf
lea
and
mov
and
scas
jo
call
xor
dec
and
shr
jmp
jo
jge
or
xor
pop
lock
imul
inc
xor
sbb
push
push
rolb
dec
dec
aam
cli
dec
mov
loope
xor
push
add
mov
stos
call
dec
mov
pusha
dec
or
mov
pusha
test
inc
popf
dec
clc
popa
mov
out
cmp
or
js
push
xor
add
push
fadds
idivb
imul
sbb
sbbl
std
insb
cld
adc
mov
rorb
jge
or
xor
sub
repz
push
lret
inc
in
adc
mov
fnstcw
stc
push
insl
lock
loopne
rcrb
dec
xor
add
push
fadds
mov
mov
or
js
push
xor
add
push
fadds
mov
add
lret
dec
xchg
fisttps
pop
push
push
xor
shrl
fnstcw
popa
out
cltd
sub
iret
leave
pop
and
mov
enter
mov
inc
jg
mov
ficomps
jae
rcrl
cs
pop
dec
pop
fistpl
divl
lods
pusha
ja
sbb
adc
in
in
dec
cltd
xor
lahf
xor
dec
or
inc
dec
adc
push
inc
js
mov
mov
push
mov
cmpsb
lret
sbb
jl
push
test
dec
mov
push
mov
scas
inc
je
arpl
inc
push
jmp
cs
pop
and
fdivrl
or
adc
aas
cltd
pop
mov
add
rdtsc
rcl
sub
cmp
insl
xchg
cmp
mov
mov
lods
stc
or
sbb
inc
cmp
not
std
fisttpl
out
xor
inc
push
inc
test
call
cmp
mov
xchg
push
fistl
fdivl
les
enter
dec
cwtl
cltd
push
or
mov
pop
mov
cmp
cmp
mov
lahf
and
jo
test
stos
pop
mov
insb
inc
add
out
sahf
add
pushf
sbb
dec
lods
int3
and
scas
nop
or
adc
pop
jb
test
sub
scas
std
shll
movsb
dec
push
xchg
mov
push
fnstsw
notl
das
push
loop
inc
hlt
cmp
mov
adc
add
add
cmpsb
mov
xchg
xchg
std
mov
and
scas
sbb
mov
xchg
or
mov
sarl
sub
scas
dec
sbb
and
push
popa
sub
rclb
dec
fisubs
mov
adc
pop
mov
mov
mov
insb
fistps
mov
scas
mov
push
aad
lret
aas
jmp
sbb
dec
lcall
cld
sub
test
jmp
jmp
jbe
or
cmpsl
push
arpl
xchg
push
mov
fsubl
or
aaa
dec
bound
push
outsb
jl
imul
mov
sarl
daa
fsubrs
push
bound
lods
mov
gs
pop
xchg
insb
lret
stos
or
pop
cltd
xor
pop
and
xor
mov
pushf
test
dec
jg
arpl
pop
jge
es
add
jo
mov
jns
jg
mov
push
ds
push
test
or
fsubs
xor
sbb
inc
rcrb
inc
push
sbbb
push
xor
and
xlat
daa
leave
or
sub
xchg
lods
aaa
adc
pop
stos
jp
lods
mov
dec
push
testb
repz
xchg
and
xlat
and
fmulp
inc
and
sub
into
mov
xchg
adc
pop
pop
notl
mov
pusha
push
push
std
or
aam
out
call
xchg
cmp
jns
dec
cmpsl
sbbl
push
rcrl
divl
add
popa
aas
dec
pop
sub
pop
pop
fisubs
subb
in
loopne
stc
in
lods
das
movsl
test
xor
cmp
dec
cmp
mov
mov
das
arpl
push
push
into
jno
rorl
mov
fisubrl
rcll
std
fsubr
pop
mov
es
push
mov
sbb
xorb
mov
xchg
iret
int
sbb
shrb
mov
pop
xchg
fistps
loope
cmp
loop
xor
sub
push
or
enter
ret
inc
jae
icebp
stos
and
mov
cmp
push
push
xadd
mov
adc
xchg
mov
int
sbb
push
lcall
lret
stos
lcall
jl
sbb
lds
loopne
jecxz
xchg
shlb
xchg
cli
mov
mov
pop
ret
and
or
push
fists
je
or
mov
outsb
mov
popa
les
insb
enter
in
mov
inc
je
inc
sub
ret
xor
jae
xor
sub
int3
call
enter
inc
adc
inc
movb
mov
cmpl
jg
ss
arpl
inc
loopne
push
mov
and
ljmp
sub
push
loope
xlat
push
xchg
into
or
xlat
and
adc
xchg
cltd
fsubrl
in
pop
cmp
shrb
mov
arpl
dec
cltd
mov
jmp
cmp
mov
out
cs
push
jb
and
imul
jae
test
add
stc
inc
and
mov
cmp
push
adc
adc
gs
popf
dec
mov
inc
cmp
push
into
add
push
inc
push
dec
into
pusha
and
lock
adc
ja
cmpsl
popf
das
sbb
mov
fs
rorl
jp
out
pop
decb
push
pop
dec
add
in
adc
pop
shr
or
sar
xchg
not
ror
repnz
xchg
dec
movsb
dec
fadds
jp
insl
jmp
ret
js
pop
loop
pop
mov
jecxz
or
es
mov
xor
movsb
add
outsl
into
in
out
dec
faddl
jmp
sub
les
scas
mov
pop
sbb
xchg
pop
into
out
test
push
aas
sub
jae
fisttpll
inc
cmp
in
and
xchg
mov
dec
xor
cmp
imul
movsb
mov
add
push
add
inc
mov
or
jbe
shlb
lods
mov
fldl2t
xorb
frstpm(287
incl
les
test
jmp
inc
sbb
nop
out
rcrl
and
or
push
dec
inc
sbb
lds
push
add
insl
adc
fmull
sub
push
xchg
mov
and
roll
pop
fnstcw
stc
ret
sub
ljmp
mov
cmp
lcall
insl
or
dec
imul
loopne
out
cmpsb
fistpll
pushf
mov
lahf
push
jns
stos
mov
test
mov
outsb
push
lret
jne
stos
lods
call
in
pop
ja
adc
lock
sub
cmp
lods
insb
xchg
mov
mov
pop
adc
mov
mov
insl
push
sbb
mov
sub
or
call
adc
sahf
mov
push
jo
ret
pop
jg
add
mov
out
dec
mov
adc
stc
dec
cmpsl
scas
jp
jmp
out
mov
jp
sub
mov
fwait
xor
inc
pop
inc
cmpsl
ror
icebp
test
pop
and
fbstp
fmul
or
jp
je
int
pop
sub
sbb
gs
ret
into
jge
mov
hlt
jb
inc
adc
push
adc
mov
add
imul
fistpll
mov
sub
add
in
fstps
pop
aas
jae
negb
lock
test
and
cmp
outsl
js
loope
fs
in
pushf
lcall
xchg
cmc
sbb
aam
add
imul
and
push
call
stos
sbb
insl
repnz
imul
in
add
stos
dec
mov
je
and
dec
inc
mov
roll
lcall
cmc
mov
cmc
fstpt
xor
push
iret
fsubp
shlb
out
rclb
out
push
inc
pop
sbb
push
inc
call
dec
cmpsl
xchg
cmc
out
enter
jns
inc
push
push
cmpb
pushf
movsb
iret
enter
adc
or
mov
add
sbb
jecxz
sbb
fsub
add
pushf
sub
shl
mov
xchg
pop
dec
jecxz
enter
aaa
push
add
xchg
lock
push
fcmovnb
mov
ret
popa
cmp
add
jo
fwait
inc
leave
lds
repnz
fidivrl
mov
movsl
adc
fs
aaa
sbb
xchg
mov
aam
imul
sbb
out
clc
adc
bound
lods
pusha
or
mov
ljmp
xor
cld
testb
fisubl
dec
adc
mull
jmp
pop
xchg
add
outsb
gs
xchg
test
arpl
aas
cltd
mov
xor
xor
js
xor
sub
int
push
mov
sbb
sub
pop
pop
mov
scas
push
jp
imul
aam
mov
arpl
imul
cmp
cmp
fcmovne
xchg
pop
xor
mov
xchg
popa
int3
mov
pop
and
jae
ret
push
bound
fdivl
in
adc
lds
lret
xlat
lcall
lock
jmp
push
mov
inc
js
fadd
fs
cmc
add
and
push
jp
add
mov
popa
lods
mov
cmc
shrb
sti
adc
test
xor
rcrb
rcrl
test
sahf
lods
repnz
and
clc
addr16
movsl
and
mov
xor
stos
int
cmp
or
jl
dec
jns
inc
cmp
mov
xchg
mov
shll
stos
or
inc
outsl
adc
gs
or
setp
xchg
and
dec
bound
test
addb
mov
xchg
jg
mov
sub
mov
dec
fnstcw
lcall
cmp
scas
xchg
lret
fmull
pop
cmp
push
sub
iret
jbe
fcmovnbe
ds
test
ss
mov
ss
or
mov
xchg
inc
xchg
scas
sarl
clc
fwait
pop
mov
popf
test
jae
add
fadds
sbb
sub
gs
lea
mov
adc
dec
insb
gs
xor
and
loop
jae
rorb
inc
xchg
cs
push
push
lea
sbb
pop
ds
xor
or
aas
mov
in
lds
push
mov
js
repnz
mov
lcall
call
lea
dec
push
loop
mov
or
or
adc
jb
fs
push
divb
inc
mov
pop
mov
jl
mov
mov
push
lret
mov
mov
sbb
jmp
push
loope
dec
in
inc
mov
dec
addl
iret
idivl
pop
out
pop
add
aad
xchg
pusha
inc
aaa
jbe
fs
or
lahf
jne
vcvtdq2ps
ficoms
sub
jo
xor
mov
and
push
test
scas
dec
or
jno
adc
push
ffree
lret
mov
pop
mov
xchg
ret
shlb
sbb
inc
adc
aas
dec
mov
xor
xor
dec
subb
mov
loopne
adc
lods
sahf
jnp
xor
gs
push
or
dec
add
repnz
cmpsl
push
sti
cmp
out
adc
pop
mov
mov
mov
and
push
push
sub
add
or
xor
jno
add
mov
in
cli
sbb
decl
test
dec
mov
xchg
inc
cs
fs
push
xchg
sti
pop
aas
jbe
mov
imul
or
stos
out
mov
lods
stc
fcmovu
cli
fnsave
cmpsl
jno
scas
clc
xchg
daa
jno
sub
dec
xchg
dec
popf
arpl
mov
je
mov
jg
jne
cmpsb
pop
mov
data16
xor
pop
rcrb
cli
or
das
notl
inc
mov
xor
xchg
int3
je
lods
inc
adc
repz
mov
sub
sahf
cs
pop
mov
mov
inc
xchg
arpl
xchg
cmp
shlb
jbe
lretw
sahf
fisubs
cmpl
inc
insl
int
out
and
mov
sub
in
inc
leave
inc
outsb
pop
pop
xor
out
ret
movsl
cmp
bound
fsubrs
sbb
aaa
and
addb
in
testl
shrb
loopne
xchg
div
in
enter
pusha
sub
out
popa
sbb
jp
in
mov
cmp
in
jl
push
outsl
imul
mov
sbb
call
mov
insb
adc
icebp
nop
add
addr16
jnp
stos
iret
ja
movsb
insb
pop
sbb
jne
call
inc
mov
mov
clc
popa
adc
arpl
lods
sbb
fdivl
sub
xchg
inc
jp
lods
pop
into
sub
jecxz
jp
fwait
insb
mov
or
aad
xchg
or
cltd
jns
dec
and
shl
jb
dec
hlt
insb
push
ljmp
inc
dec
int
sahf
push
dec
incb
mov
and
gs
jl
pop
mov
in
cmp
jecxz
push
cld
ss
addb
aas
add
outsb
in
xchg
push
jno
sub
fnstcw
fidivrs
adc
push
lret
jmp
dec
aad
fwait
incl
stos
sarl
lret
testb
inc
fistl
lret
movsb
incb
int
cltd
inc
lods
mov
nop
dec
xchg
repz
xchg
mov
jnp
cmp
lods
lret
pop
dec
sub
lods
leave
repz
lret
or
out
cmp
dec
aas
ficoms
adc
jle
sub
xor
jo
ret
icebp
jnp
dec
inc
pop
adc
sub
fcompl
lea
jg
ss
ret
push
xor
sub
sub
xor
aad
or
adc
loope
or
fwait
out
ss
cmp
dec
cmp
xor
out
or
push
imul
aaa
scas
dec
mov
leave
mov
lds
out
data16
test
in
xor
dec
loope
adc
daa
dec
xor
mov
fcmovb
dec
and
cltd
pop
pop
test
negb
movsb
repnz
push
and
insb
jns
imul
mov
movl
fistpl
cli
mov
inc
movsb
pop
adc
mov
mov
pop
ds
sarl
sahf
mov
mov
add
dec
lea
or
cmp
subl
xchg
sub
popa
jp
in
fwait
jg
aaa
jg,pt
jecxz
push
stos
pop
jo
aad
hlt
bound
imul
loope
adc
fmull
xor
mov
push
fwait
inc
mov
iret
stos
es
ljmp
jns
push
imul
mov
xor
and
pop
and
sub
pop
sub
mov
or
mov
mov
test
push
ss
pushf
pushf
dec
mov
sub
loopne
es
subb
push
cmc
dec
movsb
ss
mov
fnsave
outsl
cmpl
scas
jnp
cmp
imul
cmp
out
xor
rcll
rorl
nop
xchg
adc
lahf
movl
mov
negb
mov
mov
fucomp
lods
outsb
into
push
jnp
test
icebp
or
and
sub
mov
mov
xor
inc
iret
cmpsl
test
mov
jns
mov
stos
sti
ret
mov
stos
jb
add
les
push
jbe
cmp
loope
inc
pop
jns
stos
popa
loop
scas
push
sbb
jne
ds
std
pop
int3
aad
adc
loope
shlw
shll
js,pt
andl
inc
fs
popa
ret
cmpl
mov
add
xchg
mov
cmp
adc
inc
or
and
and
ret
push
sbb
loope
add
mov
jae
sti
addr16
add
popl
sti
mul
dec
fistpll
stos
call
cmc
daa
fldt
leave
xor
je
mov
rcr
or
sbbb
mov
mov
mov
je
pop
xor
ljmp
pushf
jae
and
cld
loopne
push
mov
pop
and
pop
cmp
in
jecxz
xlat
mov
or
jle
xchg
jb
pop
sub
add
mov
fstpt
arpl
jb
insl
push
lret
push
xchg
fimull
or
add
lret
loopne
jns
mov
ret
movsb
lret
les
adc
aad
adc
aad
scas
ret
fs
adc
add
mov
cmpsl
shrb
es
jae
jecxz
aad
dec
mov
cs
pop
je
pop
ret
test
pushf
cmpsb
or
push
sub
in
dec
adc
nop
pop
cmp
adc
aas
lahf
dec
fbld
inc
test
scas
test
mov
xchg
pop
adc
insb
pop
mov
arpl
sbb
ja
andb
std
and
jmp
mov
int3
arpl
add
in
jne
sub
ja
adc
or
jle
out
add
sbb
lea
rcr
and
dec
push
lods
lods
jno
xor
add
stos
and
aaa
outsl
and
aaa
fucomp
or
sub
lret
sub
pop
push
cmp
mov
test
jmp
add
push
pushf
and
scas
sbb
inc
dec
pusha
pop
shrl
test
clc
or
arpl
int
or
scas
insb
mov
jns
jmp
clc
repz
add
in
pop
out
adc
mov
divb
cmp
mov
push
push
flds
mulb
movsb
rorl
jno
andb
push
mov
jmp
out
lods
repz
repz
test
mov
dec
inc
xchg
sub
addr16
mov
fisubrs
rolb
jmp
jmp
std
push
lock
popf
lods
dec
mov
in
sbb
jl
es
jmp
js
js
push
push
xchg
je
mov
mov
shr
dec
add
scas
nop
outsl
jecxz
loop
aas
xor
adc
or
daa
test
mov
cmp
jbe
cmp
xchg
mov
movsl
dec
dec
aaa
adc
cli
ja
je
pop
ror
mov
loop
cwtl
fdivp
pusha
out
cmp
adcl
jp
aas
mov
xor
sub
stos
sub
cmpb
or
inc
pop
pushf
call
mov
push
cmp
inc
sbb
mov
jmp
stc
arpl
mov
movsb
pushf
in
jle
mov
pusha
mov
add
popf
xor
gs
insb
xor
test
xchg
icebp
push
and
push
popa
and
int3
sub
hlt
ret
pop
cmp
xchg
xor
push
jl
mov
mov
push
shlb
rolb
mov
sbb
mov
mov
lods
sbb
jp
sbb
cmpsl
mov
jbe
lods
add
roll
mov
jns
or
bound
lds
ret
or
jmp
push
imul
pop
call
out
ja
xchg
js
rcl
xor
adc
in
or
inc
cli
inc
xor
aam
jg
sti
mov
dec
inc
shlb
in
lahf
fisubs
popa
dec
dec
xchg
sub
cmp
test
xor
in
jmp
add
push
dec
xor
lret
sbb
out
mov
push
xchg
inc
push
add
movsb
outsl
pop
pushf
cmpsb
and
xchg
jle
dec
inc
loopne
xchg
or
xchg
inc
gs
inc
and
pop
and
dec
jb
fcmovb
hlt
pop
xchg
aaa
sahf
mov
fs
adc
add
dec
aas
icebp
xor
iret
inc
int3
js
adc
push
iret
cmp
pop
jae
jle
xchg
mov
inc
jae
cs
call
fsubr
mov
sahf
push
xchg
jae
scas
mov
mov
jnp
lods
dec
enter
ja
outsb
fldenv
mov
addr16
pop
pushl
dec
inc
xchg
nop
xlat
mov
adc
push
sahf
out
fsts
and
outsl
aam
adc
repnz
imul
pop
inc
sbb
or
insl
lret
dec
mov
cmp
cmp
cmpsl
jg
fdivrp
sbbb
dec
push
pop
push
adc
inc
aaa
or
dec
xlat
icebp
jno
xor
sarb
out
adcl
aas
xchg
sub
cmpsl
fs
decb
les
andl
stc
rol
sahf
adc
pop
or
push
sbb
cmc
and
or
mov
imul
xor
gs
sbb
xor
pop
add
outsb
xchg
inc
mov
jne
fidivrs
insb
pop
dec
shlb
cs
idivb
mov
jb
jmp
or
xchg
fadds
mov
outsl
addr16
push
and
jmp
sub
adc
cmp
pushl
xor
iret
fstl
and
test
push
cmpsb
sbb
faddl
ffreep
or
or
jbe
pop
adc
test
sub
jae
mov
scas
fnsave
les
in
or
adc
lcall
mov
in
adc
push
mov
pop
stos
rdtsc
inc
rorl
jo
mov
insb
sti
pop
sbb
mulb
fidivs
mov
roll
push
push
inc
imul
lock
push
mov
inc
rolb
sub
sbb
push
xor
add
push
fadds
mov
mov
or
js
push
xor
add
push
fadds
mov
mov
or
js
push
xor
add
push
fadds
mov
mov
or
js
push
xor
add
pop
jo
pop
scas
daa
mov
xchg
arpl
adc
ret
or
daa
ret
and
mov
mov
xchg
arpl
xor
and
fsts
and
xchg
xor
xchg
mov
mov
xchg
jnp
or
sbb
sub
xor
shl
enter
xchg
daa
mov
and
and
aas
ret
or
push
add
sub
jno
mov
lods
cmp
lret
jae
jae
aam
cld
cmp
jge
outsl
sbb
out
daa
das
rcl
adc
cs
push
mov
and
cmp
mov
inc
movb
fs
xchg
notl
pop
fldt
stos
clc
repz
mov
mov
mov
mov
inc
inc
test
out
lcall
cmp
or
ja
cwtl
mov
inc
addr16
out
insb
scas
in
mov
ror
or
push
cmp
or
loop
push
add
xor
mov
nop
jae
je
add
sbb
xor
cmp
lret
pop
jmp
cli
mov
push
mov
mov
xchg
mov
cmpsb
ja
outsb
test
cmpsl
jle
jg
bound
adc
ja
or
inc
xchg
popa
mov
pop
xchg
mov
outsb
ret
data16
xchg
mulb
mov
loop
arpl
imul
out
pop
ret
pop
repz
jecxz
xchg
push
addl
mov
xchg
arpl
xor
and
rcll
ret
pop
repz
jecxz
xchg
push
addl
mov
add
xchg
or
dec
jnp
std
xorl
outsb
mov
fimuls
pop
push
pop
repnz
mov
xor
fsubs
sbbb
or
mov
push
jno
sbb
loop
adcl
xchg
mov
clc
mov
mov
xchg
push
sbb
or
cmc
xor
movsb
cmpsl
or
iret
scas
ds
push
mov
push
test
jecxz
jg
mov
sbb
xchg
test
out
pop
cmp
cmpl
loope
stos
add
pop
repnz
ljmp
inc
subl
fisubrl
loopne
pop
pushf
push
sub
icebp
mov
mov
hlt
jo
addl
xchg
dec
or
icebp
xor
xor
adc
inc
jmp
mov
cs
rcll
or
int3
daa
mov
ud2
dec
and
mov
and
xor
jl
insb
rcll
jge
mov
cmpsl
sub
icebp
fidivrs
add
test
adc
dec
jmp
push
test
fs
mov
lret
fists
leave
sub
xor
std
jecxz
and
mov
lcall
jge,pn
out
cld
test
pop
or
dec
das
fldt
imul
pop
add
frstor
dec
mov
out
popf
xor
add
mov
xchg
inc
pop
push
test
add
mov
add
mov
push
mov
xor
in
in
outsl
stos
and
int
lahf
mov
outsb
je
mov
mov
push
rorl
test
mov
icebp
xchg
int3
inc
daa
cs
mov
movsl
in
push
mov
mov
push
orl
mov
jle
scas
add
outsl
loop
aas
sbb
cmp
sahf
fmull
lds
lock
popa
sub
mov
cli
sti
jle
add
cmp
adc
ret
inc
jb
xchg
xor
punpcklwd
outsb
movsl
add
mov
inc
adcb
xchg
lret
jmp
pop
cmp
push
mov
das
inc
dec
mov
call
rolb
addr16
iret
aam
sub
movb
cmp
insl
ss
xchg
out
mov
pop
jb
or
out
jge
lea
xor
test
jnp
jae
jecxz
adc
adc
mov
or
mov
pop
push
rorl
inc
inc
popa
cld
aam
mov
and
sub
push
or
dec
dec
sub
loope
out
and
test
rorl
jge
or
adc
mov
xchg
fisttpll
lcall
scas
call
leave
pop
in
jns
xor
mov
orb
pop
xchg
decb
jno,pn
ja
cltd
push
das
jb
iret
sbb
mov
mov
loope
pushf
push
and
cmp
push
xor
and
outsl
mov
add
cmp
sub
cmc
push
scas
or
test
inc
aad
add
nop
cmp
cmpb
mov
jl
mov
sbb
mov
push
cmc
or
flds
lods
or
pop
jecxz
and
repnz
clc
icebp
test
jne
or
xchg
cmp
or
or
or
addr16
out
cmpsl
popl
daa
popl
popa
fadds
pop
lock
push
adcl
or
and
in
fdivrs
xchg
add
mov
enter
push
adc
sub
push
out
mov
and
out
adc
fisttps
out
int
pop
hlt
ss
fsts
imul
pushf
mov
icebp
jmp
jb
sbb
popa
xchg
imul
aas
dec
or
adc
adc
fidivrs
mov
or
fnstsw
ljmp
cmp
out
pop
arpl
dec
push
push
aas
movsb
gs
xor
mov
test
test
mov
cltd
imul
loope
xchg
fs
mov
mov
adcb
push
dec
mov
pop
insb
rcrb
int3
mov
xchg
dec
mov
lds
sub
push
fsubr
mov
cmp
mov
notl
icebp
sub
and
jne
push
ja
push
es
lea
push
popa
cmp
pop
hlt
adc
cmp
or
loope
sti
test
cltd
lret
lods
lcall
sbb
pop
cld
arpl
pop
bound
push
sub
pusha
std
inc
stc
into
arpl
and
sub
dec
insb
lods
aam
lods
scas
inc
hlt
addr16
test
popa
push
mov
sbb
or
cltd
cmp
xor
cwtl
mov
icebp
cmpsb
bound
xchg
fs
push
imul
push
jnp
mov
mov
rcr
outsl
mov
lods
cmp
insb
mov
fsubs
fs
pushf
cmp
adc
jecxz
out
js
or
mov
sub
xchg
sbb
shrl
in
loop
ljmp
jmp
cltd
cmc
decl
ljmp
sbb
in
xchg
mov
push
mov
lods
pop
es
cmpsb
dec
rcll
cmp
lahf
mov
mov
out
cli
js
or
mov
mov
push
push
icebp
inc
lea
gs
mov
inc
pop
fdivl
dec
xor
pop
jp
sti
insl
mov
icebp
fwait
sbb
roll
add
movsb
mov
sbb
fwait
sbb
pop
sbb
fstpt
and
ss
jne
ret
cwtl
cltd
in
mov
inc
fsubp
adcl
mov
cmpsl
sbb
jp
xchg
cmpsl
loope
adc
bound
dec
inc
lods
xchg
daa
adc
test
ficomps
xor
clc
push
jg
sti
mov
sti
inc
outsl
mov
xchg
cmp
outsl
in
cld
xor
sbb
out
mov
out
xchg
frstor
add
and
jae
clc
ret
or
push
inc
movsb
pop
jle
add
mov
xchg
sti
dec
xchg
fidivs
mov
adc
xor
jb
outsl
mov
andb
inc
ret
aad
mov
clc
fwait
cmpsb
js
daa
loopne
sub
push
mov
dec
add
ljmp
loopne
jbe
pop
inc
xchg
dec
xchg
mov
jns
dec
mov
mov
popf
enter
aam
pop
or
jl
push
dec
loop
jmp
out
mov
xor
pop
outsb
mov
aam
pop
sbb
or
sub
pop
push
xchg
ja
adc
dec
push
jp
in
sub
push
adc
incb
pop
xchg
inc
stos
sti
aaa
mov
outsb
push
xchg
ret
dec
in
gs
das
cmpsl
and
out
inc
fsub
mov
lret
pop
jnp
cmp
pop
push
ret
fstl
adc
aad
in
dec
fisttpll
subl
and
fnstenv
xchg
jnp
cli
sahf
lret
shrl
xchg
outsb
sbb
stos
xlat
push
hlt
imul
inc
cmp
adc
cs
loopne
mov
je
sub
add
mov
fists
or
pop
aas
daa
and
mov
cld
inc
clc
xor
jae
sti
jbe,pt
das
call
dec
add
out
cld
dec
jne
dec
bound
stos
popf
sbb
xchg
fucomi
ds
cmp
jns
lret
push
add
mov
mov
lods
sub
ret
into
push
and
xchg
jp
mov
cli
fwait
sbb
sub
inc
xchg
pop
pop
fildl
adc
mov
mov
push
jmp
inc
lods
or
test
fs
daa
pop
dec
hlt
adc
jmp
enter
outsl
in
or
cltd
xor
cmp
add
sub
lock
out
inc
cmp
adc
dec
shll
push
dec
push
cmp
stos
cmpl
es
mov
jmp
fsts
add
aad
xchg
cld
lahf
inc
xor
sub
cs
or
jl
pop
xorl
push
push
and
pushf
cs
xchg
lds
push
enter
xor
jae
push
sbb
rorl
mov
aas
scas
xor
cmpsb
pusha
adc
mov
jmp
shll
movq
mov
xchg
out
cld
lods
cmp
stos
mov
xor
mov
mov
dec
dec
cltd
xchg
cmpsl
aad
ret
fcmove
aas
pop
movsl
mull
adc
adc
pop
mov
aam
sti
inc
test
sahf
mov
lds
repnz
mov
ss
sbbb
lret
lcall
jle
cltd
std
push
stc
fstpl
subl
dec
mov
mov
les
lods
aad
je
or
jmp
or
jbe
shl
jbe
out
xchg
mov
je
and
xor
aas
leave
fimuls
in
les
ftst
cmpb
movsl
pop
push
lret
mov
rcl
sub
dec
lret
adc
mov
inc
stos
inc
mov
lods
sbb
or
mov
loop
inc
sti
jae
outsl
es
pop
dec
bound
fcomps
cmp
pop
lods
repz
outsb
adc
sbb
test
xchg
lahf
repnz
or
dec
push
stos
or
in
cltd
jno
xchg
ret
sub
cmp
or
lods
xchg
fs
or
cmp
sahf
fisttpll
jmp
sahf
dec
int
mov
push
lcall
jecxz
add
cmp
pusha
pop
lods
cmp
or
insl
and
lcall
fcom
outsb
outsl
push
mov
rcr
add
daa
push
sbb
sahf
lcall
fwait
or
cmp
inc
cmpsb
xchg
aas
mov
ljmp
int3
mov
sub
fmul
mov
xor
xchg
xor
xchg
push
pop
outsb
sbb
mov
mov
cmp
movsl
addr16
mov
les
sbb
scas
scas
cmpsb
hlt
pushf
lods
cmc
jbe
data16
hlt
sbb
and
repz
mov
inc
int
and
outsb
call
or
cmp
sbb
fmull
dec
lcall
xor
jge
es
stc
dec
lock
sbbl
and
pop
in
jb
mov
dec
mov
xchg
xchg
jbe
push
scas
es
into
ret
scas
stos
fcmovb
negb
bound
dec
pop
inc
sbb
inc
aaa
rorl
stos
fistps
xlat
in
lods
jb
push
or
push
xor
fmuls
lret
mov
mov
mov
in
lea
add
or
lods
mov
mov
imul
ud2
lahf
mov
jge
icebp
int
mov
ret
lock
push
add
adc
into
mov
lock
stos
out
in
xor
test
mov
gs
cld
sbb
push
lret
ja
and
or
rolb
jmp
pop
fwait
lahf
sbb
xchg
mov
jne
dec
outsl
sub
push
xor
jl
movntq
pusha
cmpsl
xchg
out
jl
or
jo
pop
sbb
lods
aad
add
mov
push
mov
cmpsl
clc
insl
inc
sub
xor
out
into
sub
dec
std
or
imul
test
ljmp
mov
in
adc
clc
jl
outsb
jno
mov
mov
imul
jl
push
hlt
mov
pusha
mov
jnp
cmp
jg
addr16
fldl
insl
lock
scas
mov
adc
sarl
lret
incl
sub
push
lahf
loop
jg
jp
xchg
scas
xor
cmp
pop
rcrl
hlt
aam
rcrl
mov
or
ja
mov
gs
popl
push
or
lret
pop
test
jecxz
jg
inc
mov
xor
jge
adc
incb
inc
stos
cmp
mov
es
cmp
sub
mov
jae
and
mov
rcll
xlat
jne
push
inc
lea
mov
out
inc
sub
sbb
adc
mov
inc
mov
popf
movsl
popf
daa
xchg
mov
mov
and
loop
xchg
adc
and
ds
jno
call
and
out
mov
mov
cli
icebp
mov
jo
mov
inc
mov
mov
insb
out
or
push
sub
popl
imul
loop
jmp
iret
cmpsb
add
jecxz
popa
push
xchg
jbe
xor
mov
mov
leave
add
push
inc
or
dec
enter
lods
mov
shll
cld
xlat
int3
add
sub
lds
inc
addw
add
or
dec
pop
dec
iret
dec
cmp
pop
mov
stos
adc
cmp
adc
sbb
je
cmp
lock
dec
push
fs
clc
imul
xchg
nop
push
adc
das
cli
mov
sbb
rcll
mov
xor
neg
in
insb
cltd
mov
test
fimull
xor
or
sbb
fmulp
dec
mov
inc
enter
xchg
imul
lret
rclb
hlt
imul
gs
xchg
rcl
fisttpl
adc
test
pop
cmpb
jae
sbb
pop
pop
cli
push
es
pushf
push
pushf
dec
push
adc
add
out
es
cmp
adc
imulb
or
mov
xchg
jbe
cmp
jmp
in
sub
xchg
scas
mov
mov
mov
out
jl
pushf
jmp
scas
jnp
xchg
push
sbb
adc
and
and
mov
insb
loope
push
push
jno
inc
dec
arpl
adc
outsl
je
and
or
dec
test
int3
jg
adc
cmpl
and
hlt
mov
std
cmp
jno
sbb
push
gs
mov
or
jg
inc
cmp
sti
in
das
lret
add
jns
adc
and
pop
ficompl
add
adc
push
mov
les
outsb
mov
inc
pop
xor
jecxz
sub
adc
mov
popf
cmp
cmc
pop
into
cs
loopne
adc
mov
push
ret
repz
adc
pop
nop
out
sbb
mov
ds
dec
mov
out
xor
lea
imul
lds
xor
pop
popa
push
in
push
dec
cmpsb
das
push
test
inc
adc
xchg
push
out
sbb
inc
dec
ds
sar
shrb
jns
xchg
jecxz
or
add
push
sub
xchg
inc
dec
cltd
outsb
hlt
push
jb
mov
fisubrs
in
and
fisubrs
in
movsl
jg
xchg
aad
dec
adc
or
icebp
xor
in
sub
jns
cmp
insl
fcompl
xor
pusha
aad
rol
lds
add
cmpsb
negl
js
jg
subb
jecxz
sahf
lea
leave
sub
arpl
cmp
shrl
pushf
inc
mov
mov
mov
imul
lea
orb
scas
mov
inc
adc
mov
je
sbb
aaa
pop
stc
or
or
sbb
mov
sub
in
lcall
add
jecxz
negb
clc
ja
lahf
jp
xor
popf
jge
push
mov
aaa
aad
pop
pop
sub
rcr
xchg
rcrb
jmp
fimull
mov
pop
ljmp
fsts
outsb
jo
aam
js
dec
push
xlat
dec
sbb
sub
xchg
jge
flds
call
mov
repnz
repnz
or
push
call
mov
aas
cmpsl
lds
mov
mov
fbstp
dec
shll
xor
movsb
mov
push
lret
sbb
pop
adc
repz
xor
and
sub
jge
push
stc
sbb
xchg
push
adc
bound
sub
push
popf
xor
inc
jle
mov
outsl
dec
cld
hlt
adc
rcrb
movb
xor
iret
pusha
out
ficoms
jl
dec
xor
mov
xor
push
push
shl
jmp
stos
in
enter
es
mov
les
jns
mov
dec
mov
in
add
cmp
inc
pusha
sub
inc
mov
in
push
iret
iret
push
or
push
cmp
cmp
jo
sub
out
pushf
sarb
xchg
imul
xchg
cli
push
outsb
popa
inc
mov
shrb
xor
sbb
stos
repz
fisttps
or
push
push
cmpsb
bound
fs
inc
push
xchg
dec
or
jle
jnp
xorl
xor
xchg
jb
repnz
jae
add
mov
adc
cltd
insb
ss
nop
pop
add
outsl
outsb
inc
rcrl
xchg
jb
push
fwait
int
dec
pusha
cmpsl
fdivp
jle
push
gs
xor
das
std
and
xchg
mov
stc
and
jne
jl
call
int3
xlat
cltd
push
repz
andl
sub
add
dec
sub
pop
imul
jg
and
jmp
insb
movsl
movsb
add
pop
jge
inc
xlat
fidivrs
out
js
ret
push
cld
in
popa
xor
or
clc
lock
cld
rcrb
push
cltd
aas
adc
push
andb
add
into
xorb
mov
fwait
pop
mul
aad
divb
test
or
sbb
jbe
sarl
les
cmp
out
clc
sbb
shl
rcl
dec
push
aad
add
loop
mov
out
add
pop
cmp
sub
pushf
ret
xor
les
cwtl
subl
scas
push
push
out
clc
js
gs
sbb
push
cwtl
pop
adc
repz
jb
test
add
cmpb
bnd
cmpsl
xor
ds
sub
cmp
sub
into
cmpsb
repz
fisubl
outsb
dec
dec
pop
pop
xchg
jo
mov
fs
cmp
adc
xor
cld
imul
cmp
dec
pop
xchg
cwtl
xlat
mov
push
jmp
cmp
xchg
int
sbb
scas
xlat
rcl
loope
xor
xchg
rcll
xchg
out
inc
sub
xor
lcall
or
jecxz,pt
dec
fcmovnb
lods
out
dec
rcr
imul
stos
push
xchg
ret
adc
adc
les
in
call
dec
ljmp
enter
xchg
out
inc
mov
sbb
lahf
and
pop
dec
push
sub
add
cmpsl
jae
clts
adc
bound
dec
adc
lods
push
scas
popa
outsl
data16
mov
sti
call
bound
stos
iret
cmp
std
insl
adc
icebp
jne
jge
jne
test
or
fptan
mov
mov
aaa
xchg
popf
add
fisttps
stos
mov
adc
int
out
mov
sbb
sbb
hlt
mov
filds
mov
hlt
add
daa
roll
sti
dec
pusha
decb
jp
aam
es
in
inc
xchg
outsb
jns
fcoms
cmp
inc
xor
sbb
pop
sti
daa
insl
andl
clc
arpl
dec
push
inc
jge
jp
fmull
in
scas
pop
lret
aad
rclb
mov
and
adcl
and
pop
mov
push
adc
jge
mov
inc
xchg
sbb
inc
cwtl
loopne
ret
sbb
int
ja
cwtl
jge
repz
add
adc
mov
xor
clc
fbld
loop
in
clc
sti
sub
loope
dec
cmp
jb
call
push
popa
insl
cwtl
fistps
xor
test
dec
ja
lret
and
out
subl
push
shlb
hlt
or
pop
out
fsts
push
int3
enter
insb
pop
mov
mov
and
movsb
sbb
mov
and
mov
les
dec
inc
pop
sbb
js
mov
push
iret
sbb
inc
xchg
push
loopne
sbb
or
roll
add
shrl
mov
pop
jmp
cmc
mov
cmp
xor
shll
jl
iret
pop
lcall
das
fisttpll
repnz
insb
add
fsubl
xor
cmpsl
add
mov
xchg
aad
and
addr16
clc
stos
push
repnz
push
in
jae
fldenv
out
movsl
pusha
mov
xchg
mov
and
icebp
lahf
jnp
or
out
dec
roll
mov
orl
mov
xchg
jne
xchg
enter
pop
jg
lret
mov
dec
jbe
pop
out
or
in
jp
fdivp
in
cmp
lea
cmpsl
adc
add
xor
and
rcll
ret
pop
repz
jecxz
xchg
push
addl
mov
xchg
arpl
xor
and
rcll
ret
pop
repz
jecxz
xchg
push
addl
mov
xchg
arpl
xor
and
rcll
ret
pop
divl
jecxz
xchg
push
xchg
jbe
addr16
ja
inc
mov
cmpsl
adc
add
mov
mov
lods
pop
aaa
jecxz
in
or
mov
movsb
or
xchg
es
pop
ljmp
mov
fs
push
stc
push
jmp
clc
cmp
aam
les
cltd
and
jne
add
xor
fs
push
mov
push
or
cmp
pop
test
jns
imul
popa
test
add
call
js
sahf
in
push
mov
pop
orl
fs
push
icebp
inc
sub
pop
mov
add
fcmovu
fs
jg
sub
jno
jbe
mov
cmp
dec
inc
loope
loope
xchg
inc
cmp
cmp
test
and
add
push
fsubs
or
int3
mov
push
dec
sub
les
nop
inc
cli
stc
mov
inc
fs
stc
test
or
pop
pop
insb
dec
ljmp
inc
imul
push
dec
fs
cmp
xchg
pop
jp
or
mov
in
and
stc
int3
aaa
push
push
in
inc
call
xchg
cmp
aam
bound
cltd
mov
test
data16
inc
sbb
or
push
cld
inc
fwait
xor
les
xor
ja
jno
popa
out
push
mov
and
out
in
popf
adc
imul
jl
or
pushf
add
pop
cmc
push
xlat
dec
cmpsl
pop
in
aam
les
cltd
and
adc
add
je
fs
push
stc
inc
jmp
xchg
cmp
aam
les
cltd
and
adc
add
je
fs
push
stc
inc
jmp
push
mov
xchg
or
mov
jnp
xlat
ja
das
insb
jmp
loop
and
dec
mov
stos
push
adc
mov
aam
mov
arpl
mov
inc
sub
adc
es
rcrl
dec
dec
hlt
fcomip
jne
dec
outsb
mov
pop
adc
sbb
sbb
dec
cli
int
lret
icebp
mov
je
popa
scas
sbb
sub
mov
aas
mov
mov
shlb
test
push
dec
cmp
xor
push
cmpsb
fadds
mov
mov
xchg
lcall
adc
adc
inc
fnsave
dec
adc
jnp
lcall
lret
les
icebp
test
xor
sbb
pop
aam
dec
jae
or
xchg
mov
out
and
repnz
imulb
rorb
mov
push
sub
sbbl
dec
inc
xorb
out
push
movaps
mov
pop
sub
mov
adc
scas
jp
adc
iret
ds
mov
xchg
sbb
aam
das
xor
lret
inc
mov
fnsave
stos
popa
daa
pushf
add
fdivs
push
imul
into
sub
shll
notl
sbb
in
std
scas
add
outsb
sbbl
lock
mov
cli
lods
mov
pop
in
sbb
mov
fcmovu
pop
lock
gs
jge
test
cmp
add
fadd
mov
push
inc
ds
xor
add
mov
imul
add
insl
lahf
je
rol
pop
imulb
jmp
stos
ljmp
inc
and
icebp
inc
cmp
pop
clc
ret
jp
mov
lea
inc
daa
ja
mov
sbb
dec
jae
inc
xlat
mov
outsl
fistps
outsb
jns
ja
scas
pop
sbb
lcall
dec
xor
stos
out
pop
insb
jl
out
push
out
mov
rclb
lock
cld
inc
xchg
cmp
pop
imul
xor
bnd
inc
into
and
les
cs
mov
xchg
clc
enter
dec
jo,pt
sahf
jne
mov
cmc
and
dec
movsl
movl
pop
cmp
xor
lret
inc
xchg
mov
aaa
sbb
sub
mov
adc
rorl
add
into
or
inc
pop
mov
pop
ret
sub
mov
fisubrl
sahf
out
mov
push
pop
sbb
enter
mov
mov
pop
sub
mov
mov
xchg
lcall
lret
insl
aaa
and
mov
mov
lds
popa
leave
dec
mov
sbb
jns
sub
push
pop
inc
enter
faddl
or
fwait
cmp
ja
jns
mov
dec
xchg
clc
outsl
rolb
nop
pop
lods
mov
adc
stos
inc
adc
pop
repnz
in
pop
cmp
inc
sbb
cli
fldenv
inc
bound
std
pop
inc
or
jne
aam
push
xchg
cmp
test
popf
movsl
out
push
jg
cmp
or
jns
jns
mov
mov
in
push
nop
xchg
xchg
adc
xor
lods
aas
jb
hlt
mov
dec
daa
daa
adc
in
lods
ljmp
and
loopne
dec
decl
xor
jg
test
lock
add
lods
out
test
in
pop
or
fsubp
fidivrs
xchg
jmp
mov
sbb
mov
or
jmp
sub
mov
std
mov
push
adc
shlb
aaa
cmp
inc
inc
pop
cwtl
das
inc
pop
mov
and
push
lcall
add
xlat
test
fidivs
xor
jns
mov
pop
in
popf
sbb
outsl
sub
xor
lock
jle
pop
repnz
pushf
sub
push
adc
or
or
xor
mov
outsb
fcoml
dec
es
mov
push
hlt
rclb
adc
hlt
fs
lcall
sub
dec
jb
ret
cmpsl
movsb
fwait
xchg
in
lds
pop
mov
jle
jmp
lcall
jno
mov
mov
sub
dec
imul
call
cmp
cmp
cmc
test
cmp
jmp
pop
in
xchg
and
jle
pop
lods
dec
out
pusha
and
mov
out
cmc
aaa
mov
pop
fdivl
dec
incl
jge
jp
in
arpl
insb
push
push
test
hlt
jno
lods
idivl
out
pop
insl
js
sar
shl
les
fcmovnbe
mov
push
push
fs
xchg
sbb
fmuls
mov
and
push
mov
clc
rol
icebp
bound
pop
cwtl
jo
adc
stos
sub
push
aam
sub
or
testb
pop
mov
movsl
push
xor
mov
shl
push
mov
clc
pusha
lret
mov
icebp
sahf
mov
dec
or
xchg
movsl
mov
lcall
inc
jl
push
lds
sbb
pop
mov
push
into
pop
cwtl
out
fdivrs
inc
cltd
push
test
push
cmc
scas
push
adc
test
and
xchg
lret
and
sbb
push
loopne
inc
inc
fsubl
repnz
lds
cmp
lods
pop
lcallw
insb
lock
add
sub
lods
push
adc
xchg
sbb
cmpsb
sub
mov
or
sub
data16
dec
sbb
mov
inc
imul
add
pushf
clc
fld
mov
in
ljmp
mov
enter
loop
aas
idivl
mov
scas
xchg
sbb
and
mov
fsubl
je
mov
push
popf
mov
cmp
mov
pop
out
shll
and
pop
mov
orb
iret
insb
mov
push
cmp
jne
or
pop
ret
sahf
xchg
adc
enter
inc
push
xchg
testl
fs
stc
loop
xor
jle
popf
test
popa
or
cs
or
pop
and
aas
aaa
pop
inc
fcomps
out
dec
popa
lea
in
leave
in
cmp
push
xor
mov
ss
or
imul
lock
cmp
jno
mov
and
gs
or
xchg
insb
xor
lret
and
fisubrl
push
test
mov
leave
mov
rcrb
sub
xor
fists
shl
jb
push
push
sbb
std
cli
insb
fsts
lds
in
or
out
imul
lods
mov
cli
shlb
sub
pop
sbb
out
pop
sbb
dec
mov
and
push
sbb
lea
mov
jb
push
gs
cmp
jb
or
test
arpl
loopne
xchg
dec
and
fs
push
xchg
mov
mov
iret
push
repz
fprem
inc
sti
int
xor
jno
pop
jo
lcall
lods
jmp
dec
pop
neg
in
inc
mov
rorl
pop
adc
adc
push
pop
sub
mov
sub
sub
test
mov
rcrl
adcl
in
cmp
out
pop
popf
sub
or
shlb
sbb
sbb
adc
ljmp
sti
push
xor
mov
movsb
xor
xor
sbb
mov
add
cmp
or
rol
push
mov
push
sbb
sub
jecxz
inc
dec
sar
mov
push
mov
cs
pusha
sub
lds
syscall
sbb
jmp
jo
in
popf
xchg
stos
mov
dec
adc
scas
or
add
sub
lret
test
ljmp
add
dec
or
aas
aam
xor
out
or
stc
jle
ss
pop
pusha
jg
xchg
mov
in
sub
ret
jo
xchg
rorl
int
add
cmp
sarl
push
jle
sbb
adc
dec
push
lret
add
cld
xor
or
add
push
es
jnp
das
adc
shl
bound
sbb
dec
lock
mov
hlt
fistps
fmull
lcall
lods
incb
sti
push
fdivrl
fs
mov
aad
lods
popf
inc
inc
fists
into
cmp
xchg
mov
mov
stos
repnz
fs
cmp
pop
or
rclb
sbb
inc
test
pop
mov
sub
popf
inc
aaa
ds
add
and
push
push
sbb
push
ja
fnstcw
movsl
dec
push
mov
sbb
ror
xchg
out
fidivrl
push
ljmp
mov
cmp
mov
lods
mov
pop
mov
cld
imul
jae,pt
outsl
out
fistpll
repnz
or
pop
repz
cmp
test
addl
xor
cmp
mull
sub
aas
jl
mov
push
sub
movsb
mov
jl
movsl
movsb
enter
mov
stos
test
loop
inc
xchg
adc
xchg
fs
daa
sub
and
fmul
jmp
and
imul
sub
mov
inc
repz
cmpsl
js
xor
call
test
pop
js
mov
in
pop
gs
nop
or
mov
or
sub
sarb
jl
jnp
aas
outsb
fmulp
sbb
mov
xchg
push
call
push
ror
je
xlat
lahf
add
dec
jle
dec
xchg
cmc
xor
shlb
ds
jg
out
push
sbbl
loope
pop
lock
mov
stc
fisttpll
sbb
shlb
cmp
es
sub
cmpsl
cmp
clc
sub
ret
test
dec
mov
mov
mov
data16
sbb
incl
cmp
call
or
adc
and
inc
loope
mov
and
subl
inc
data16
shlb
mov
xlat
cmc
shlb
cmp
add
adc
icebp
fs
test
rorb
adc
push
pop
cwtl
push
and
or
cmp
loopne
sbb
add
gs
push
dec
in
pop
movsl
dec
xchg
push
push
add
in
loope
in
mov
and
cs
inc
das
mov
imul
dec
xchg
xor
add
je
sub
fs
out
mov
or
jo
mov
sub
add
and
inc
aas
repz
xor
push
sti
mov
mov
daa
outsl
cltd
lret
enter
pop
fwait
sbb
mov
popf
or
xchg
dec
dec
mov
mov
sub
sub
ret
jae
aaa
add
cwtl
mov
shr
sub
mov
in
push
xchg
sub
xchg
push
sbb
mov
jecxz
cmp
ret
ficoml
jge
jns
or
sub
pop
push
jbe
mov
cmpsb
mov
mov
loope
in
jns
inc
fwait
inc
lock
and
rol
into
sbb
inc
test
dec
push
mov
add
lods
mov
out
xchg
out
outsb
call
cwtl
js
mov
mov
mov
into
mov
pop
mov
fwait
rcrl
repz
mov
stc
mov
xor
es
mov
lret
cld
subl
test
pop
imul
call
push
sti
repnz
push
xor
pop
inc
mov
mov
ljmp
adc
pusha
arpl
sub
and
aaa
mov
sbb
pop
sbb
pushf
lcall
mov
mov
out
dec
and
mov
scas
xchg
xor
fsub
in
ljmp
out
sbb
shlb
mov
xchg
bound
push
cmp
xor
jg
movsl
addr16
lods
les
push
pop
pop
test
fldpi
jnp
add
inc
aam
aas
add
dec
fucomp
mov
int3
fwait
test
pop
inc
rclb
div
leave
jl
xchg
cmp
mov
sub
mov
pop
pop
cmp
out
pusha
gs
add
enter
repnz
cmp
cld
dec
bound
mov
pop
movsl
popf
pop
mov
movsb
outsb
pusha
andb
insb
out
fadds
add
hlt
and
jae
outsb
and
popa
fmuls
mov
insl
lret
push
dec
add
sbb
fst
jge
lahf
nop
adc
sub
cmpsl
in
ficomps
jl
pusha
xlat
xor
ficomps
icebp
adcl
sub
jns
push
ljmp
sahf
jp
fwait
push
enter
ds
jns
push
pop
adc
cmp
cli
cmp
stc
mov
mov
movsl
ja
loop
cmp
dec
sub
jmp
arpl
cs
xlat
pop
repz
pop
adc
popa
mov
insb
mov
movsl
stos
pop
pop
jge
adc
incb
aaa
hlt
pop
lock
xor
xchg
popa
pop
xchg
push
test
movsb
je
add
mov
dec
add
xlat
sub
or
or
pop
mov
mov
pop
jne
vmovapd
addl
mov
add
mov
mov
cmpsb
jne
mov
test
mov
std
cmpsb
cmp
gs
fdivs
leave
inc
mov
add
not
mov
or
jb
xchg
jg
das
pusha
repz
mov
push
aaa
mov
xchg
jecxz
mov
push
dec
push
clc
push
push
arpl
jo
xchg
add
inc
mov
sbb
bound
jnp
es
and
cmpb
inc
rcrb
icebp
les
ja
and
scas
test
addb
in
xchg
lahf
mov
cmpsb
bound
inc
in
repz
ret
pop
pop
mov
adc
pop
lds
mov
std
jbe
fdivr
sub
aam
cld
stos
sbb
push
std
and
pop
pop
shlb
imul
test
int3
inc
sub
arpl
pop
lods
icebp
out
inc
sub
jnp
cmp
es
push
or
aas
cmpsb
xlat
movsl
sub
stos
std
mov
scas
add
in
and
lods
aad
xchg
lret
pop
out
sahf
fsubrs
cmovle
les
xor
mov
mov
ljmp
xor
icebp
ss
sub
mov
sbb
mov
add
jmp
inc
or
idivl
je
xor
xor
add
addr16
sub
rep
adc
jbe
ja
jnp
xor
cmp
mov
mov
loop
push
dec
divb
push
mov
dec
adc
push
pusha
cmp
sub
sbb
xchg
mov
sbb
jle
inc
xchg
lea
push
bound
pop
sub
cmp
dec
mov
jns
sbb
js,pn
push
push
dec
pop
fldenv
scas
arpl
push
cwtl
mov
scas
movsl
test
loop
jge
pop
imul
mov
add
dec
ror
mov
insl
movsb
mov
push
shlb
cmp
lea
cltd
sti
rorl
loop
jne
xchg
insl
arpl
cmp
lea
adcb
pop
arpl
into
ret
lock
aas
ljmp
jmp
jns
xor
cmp
loope
fistps
xor
test
jg
push
out
xchg
insl
or
push
pop
jae
sub
aam
push
subb
js
or
mov
ja
mov
lcall
push
rcll
cs
xchg
loop
cmp
and
xor
lret
pop
sub
mov
in
mov
dec
xor
sbb
int
outsb
inc
mov
cmpl
shrl
ss
je
cmpsb
lods
loopne
xor
sbb
call
adc
ds
add
rclb
pop
adc
inc
mov
js
pusha
mov
shlb
stc
and
out
es
hlt
xchg
divl
and
shl
sbb
or
iret
and
or
js
mov
xchg
dec
push
pop
rorb
cmp
out
dec
std
xor
nop
jne
scas
test
jmp
fldenv
test
and
pop
sbb
push
mov
scas
jae
outsl
popa
pop
xor
sbb
stc
mov
adc
rol
jae
mov
fs
les
pusha
pop
ljmp
fistpl
orb
pusha
mov
inc
mov
inc
push
add
pop
in
adc
out
dec
cwtl
mov
add
xchg
or
call
lahf
xchg
inc
fs
outsl
insb
mov
incb
adc
ljmp
lret
cmp
stos
add
cld
stos
cmc
clc
push
mov
lcall
pop
mov
movsl
lods
nop
mov
call
mov
jecxz
stos
lock
xchg
pushl
xor
neg
xlat
ja
daa
sub
andb
dec
jb
add
mov
test
sahf
add
and
les
outsb
push
sub
mov
jle
xchg
call
test
jno
das
sbb
popa
ljmp
scas
js
in
push
ret
aas
lds
push
mov
cmp
add
into
cwtl
repnz
stos
sbbb
stc
and
cmpsb
cld
cmp
scas
jmp
enter
lock
pop
jmp
cs
and
imul
inc
imul
mov
sub
adc
push
sbb
xchg
jge
jp
int
test
icebp
mov
xchg
insb
pushf
fstl
or
jmp
cld
add
or
jl
movsb
scas
mov
movsb
rcrb
mov
cmp
jp
or
adc
inc
sub
clc
fisubrl
jg
inc
ds
add
popl
daa
fwait
sti
push
sub
push
xor
fisubrl
xor
aam
push
inc
lahf
das
inc
pop
mov
cmp
inc
lods
push
push
addr16
shlb
push
cwtl
inc
and
mov
push
aam
adc
or
test
jne
mov
cmp
pop
scas
push
or
and
cs
lret
pop
ret
mov
jl
lret
xor
ljmp
cmpsl
mov
xor
mov
mov
movsl
lods
les
rolb
mov
or
push
or
aad
loopne
std
push
adc
js
ret
mov
pop
fiadds
repnz
icebp
pushf
xchg
adc
fsubl
fptan
out
push
fwait
arpl
je
mov
inc
xchg
jecxz
xchg
decl
pusha
ds
inc
repnz
push
int
xor
movsb
dec
jmp
popf
xor
shlb
les
sub
repnz
ret
xor
gs
movsl
movsb
sbb
inc
ret
fcmovne
clc
jb
and
call
push
or
inc
enter
or
sbb
shld
jp
push
push
push
test
add
lods
or
insl
push
xchg
add
xchg
es
add
lock
mov
xchg
aam
pop
jnp
pusha
jmp
cmp
pushf
add
jae
out
mov
incb
push
or
push
lahf
aad
jl
mov
sbb
xchg
sti
pop
sub
dec
adc
mov
stos
sbb
ljmp
cmp
dec
xor
pop
sub
mov
nop
push
sub
insl
jl
popa
mov
mov
sub
mov
push
lret
pop
xchg
inc
je
fwait
cld
decl
adcb
mov
popf
push
jo
jnp
jmp
mov
lods
cmp
adc
mov
je
mov
mov
arpl
stos
in
xchg
lods
bound
xor
ss
push
addr16
adc
cld
cmp
push
test
mov
cmp
or
jnp
out
mov
lret
push
jne
hlt
pop
icebp
in
jns
insl
int
dec
leave
sbb
fwait
xchg
or
aam
sub
jmp
dec
xchg
cmp
sub
adc
add
fldl
push
sbb
pshufw
repnz
aaa
and
pop
xchg
les
cmp
lcall
inc
divb
dec
sbb
movsl
sub
sbb
mov
push
add
fsubs
in
xchg
clc
cmpsb
pop
in
mov
mov
lock
ret
fldenv
pop
inc
push
dec
iret
mov
adc
addl
jns
pushf
test
lds
xchg
es
lea
lret
imul
xchg
xchg
cmp
fdivrs
insl
inc
jge
mov
dec
cmp
jo
lods
in
and
inc
js
push
xor
fldl
mov
sbb
and
loop
cmpsb
inc
movsb
lret
movsl
cmpsl
sahf
mov
lods
inc
sbb
jmp
cmp
and
push
inc
xor
mov
cmp
aam
les
cltd
and
adc
add
je
fs
push
stc
inc
jmp
xchg
cmp
aam
les
cltd
and
adc
add
je
fs
push
stc
inc
jmp
hlt
mov
in
aam
add
xor
and
in
add
je
je
push
stc
lods
jmp
into
cmp
aam
inc
imul
add
add
ss
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
ret
push
jb
bound
test
and
push
and
ret
mov
cmpsb
xchg
addl
push
inc
push
jae
bound
adc
inc
xor
data16
loop
xchg
add
mulb
push
jb
bound
adc
inc
xor
data16
xchg
xchg
xchg
int
and
inc
jb
push
xor
cltd
nop
and
push
mov
sar
mov
icebp
sahf
rcll
push
in
sub
pop
push
iret
inc
pop
daa
and
adc
push
outsb
cmpsl
sub
cmpsl
outsl
push
jge
mov
add
jge
add
add
out
push
xchg
js
mov
data16
inc
cmc
xor
out
xchg
jmp
mov
adc
push
rcrb
add
repz
or
test
xchg
mov
mov
push
or
mov
dec
loop
rcrl
xorl
pop
mov
xchg
inc
clc
aaa
out
repnz
lret
mov
adc
xchg
xorb
jecxz
out
push
inc
push
jb
bound
adc
inc
xor
data16
loop
xchg
add
mulb
aad
jo
pusha
push
cmp
jne
inc
push
mov
fadds
mov
or
sub
xor
xor
pop
data16
ljmp
icebp
test
and
insb
jb
inc
inc
push
push
cmp
inc
xor
data16
loop
xchg
add
mulb
push
jb
bound
adc
inc
xor
data16
loop
xchg
add
mulb
adc
les
mull
or
and
sbb
fwait
inc
jno
mov
xchg
lods
pop
push
fs
mov
out
mov
or
cli
pop
sahf
in
cwtl
sub
add
or
dec
fsubrl
call
test
pusha
flds
push
mov
sbbl
dec
pop
dec
adc
decb
mov
mov
inc
les
pop
pop
dec
insl
sbb
xor
pop
cld
insb
inc
jmp
jle
inc
xor
jp
add
cmp
inc
outsb
inc
adc
fisttpll
test
cld
adc
push
mov
or
stos
xchg
in
xor
stc
rcl
and
pop
fucomip
push
movsb
scas
pusha
add
shrb
inc
add
cmp
sub
and
test
jg
and
xor
inc
cltd
out
loopne
es
inc
xchg
pop
mov
imul
lods
shrl
adc
jp
jns
sbb
inc
mov
bound
xchg
subb
mov
aam
int3
xor
dec
ss
lds
mov
jb
cld
and
inc
sti
jbe
lret
test
int3
xchg
gs
sub
pop
jmp
insb
push
fs
mov
dec
xor
std
inc
mov
and
ljmp
mov
rorb
or
adc
xchg
inc
mov
push
cmp
push
aas
fdivrs
xor
cwtl
pushf
xchg
das
push
sub
ljmp
adc
rorl
aas
rorl
lds
loop
cmp
sub
and
insb
roll
pop
mov
and
js
shrw
gs
push
mov
cmpsb
inc
jns
std
stos
jns
add
push
xchg
sub
xchg
mov
shlb
fistpl
sub
jl
daa
and
sub
sbb
mov
xchg
adc
iret
pusha
xor
add
and
rcrl
push
jnp
add
loope
negb
frstor
stos
shll
movsl
pop
ljmp
out
hlt
mov
insl
mov
ds
dec
test
inc
fwait
ljmp
or
ret
xchg
repz
sbb
icebp
mov
jp
inc
mov
mov
dec
pop
pop
enter
call
cmpsl
add
jns
repz
or
scas
divl
repz
jl
push
dec
cmp
clc
data16
imulb
fsubs
gs
adc
sbb
mov
adc
gs
adcl
jae
daa
mov
stos
cmp
insb
xchg
movsl
cmp
call
pop
mov
imul
enter
cmp
pusha
in
sub
out
fsubr
movsb
push
push
adc
mov
into
xor
sub
daa
aad
jbe
xchg
and
loop
cmp
push
and
xchg
ljmp
jle
xchg
inc
cmpsl
and
rolb
call
pop
push
xchg
xor
scas
jmp
mov
daa
add
lods
mov
imul
enter
mov
scas
sbb
inc
jb
inc
mov
mov
addb
fnstenv
test
xchg
stc
std
or
leave
cmpsb
dec
int
js
pop
pusha
mov
lods
xchg
mov
push
hlt
lahf
mov
loopne
jl
test
add
mov
mov
mov
pop
testb
and
mov
dec
fnstsw
cwtl
filds
fsubl
out
orb
mov
test
jb
mov
inc
int3
std
fcoms
outsl
addl
mov
es
xor
pop
pushf
sub
mov
repnz
or
cmc
mov
lock
fs
js
push
cmp
mov
ljmp
dec
cmp
into
iret
ss
int
stos
mov
push
sbb
sahf
xor
mov
xor
pop
xchg
out
xchg
xchg
or
or
pop
xchg
inc
mov
mov
mov
je
add
repz
jmp
jne
aaa
mov
mov
or
ds
sbb
or
inc
lret
mov
push
pop
sub
orl
shr
sbb
jne
aaa
das
mov
int
iret
pop
xchg
mov
push
sbb
inc
inc
or
aaa
xchg
sbb
add
lret
adc
push
repnz
iret
enter
insl
scas
push
es
es
stos
jl
sbbb
test
and
in
out
xor
mov
xchg
inc
fmuls
xchg
cmpsl
dec
mov
scas
in
xchg
and
pop
pop
or
jnp
mov
gs
cmpsl
xchg
mov
mov
pop
in
sti
xor
adc
cmpsl
inc
ret
jne
faddl
imul
and
repnz
enter
es
cmp
into
rcl
ret
jnp
bound
xchg
adc
sbb
testl
sbb
pop
pop
sub
scas
add
in
or
stc
in
mov
ss
jle
mov
pop
fnstsw
stos
mov
cmc
aam
xchg
xor
popa
popf
inc
loopne
andb
mov
popa
and
pop
sarb
ret
gs
pop
jnp
lds
enter
cmpsb
jge
mov
imul
shl
xchg
mov
scas
pop
mov
cld
push
fcmovnu
and
imul
mov
rcl
insl
pop
mov
pop
in
repz
xchg
xchg
cmp
sub
or
test
mov
outsb
or
pop
mov
push
lcall
pop
jle
jnp
sbb
mov
push
aas
cmp
icebp
push
inc
bound
fisubs
mov
mov
fwait
jo
dec
push
ret
xchg
mov
mov
lds
imul
pop
in
subb
pop
stos
or
push
lods
pusha
cmpsb
aaa
movsb
mov
push
mov
pop
add
jnp
pop
inc
in
test
sarl
mov
nop
outsl
mov
call
aaa
mov
test
xchg
sbb
out
mov
inc
outsl
inc
dec
les
adc
adc
xchg
loopne
and
jne
jg
jp,pt
fnstsw
push
mov
lea
push
in
xchg
enter
int3
mov
mov
aad
les
xchg
cmp
arpl
pop
iret
mov
add
dec
sub
inc
sbb
imul
sti
int3
xchg
jns
sbb
sahf
int3
imul
test
hlt
dec
mov
aam
ss
or
mov
xorl
insl
add
xor
outsl
pusha
ror
xchg
jle
cmpsl
or
imul
insb
mov
dec
or
cmpsl
jecxz
xor
ljmp
pop
fildll
inc
sub
pop
xchg
jne
push
and
inc
or
cmp
ljmp
sub
sbb
mov
push
rclb
and
dec
jl
les
or
mov
movsb
push
mov
sub
push
sbb
aas
scas
or
inc
and
and
js
fists
inc
into
mov
std
rorl
or
adcl
pushf
pop
mov
pop
movsb
rolb
xchg
test
mov
fsts
adc
lret
imul
or
test
cmpsb
loope
jmp
dec
cmp
lods
nop
cmpsl
and
loope
inc
xchg
inc
ret
jg
and
pop
repz
das
xor
inc
push
stc
inc
lea
ja
int
pop
jne
lahf
data16
addr16
jl
xchg
or
sbb
mov
wbinvd
ret
sbb
fistps
jno
xchg
hlt
pusha
or
xchg
add
add
and
push
cli
cmc
push
add
pop
mov
push
xchg
filds
enter
cmc
adc
jnp,pn
and
popf
jmp
shlb
lods
dec
push
push
sahf
mov
hlt
cmp
rolb
int3
jns
ret
fiadds
addr16
sub
in
jns
fadd
stos
je
add
dec
shl
adcl
push
outsl
mov
arpl
invd
ds
cmc
fnstsw
push
fadds
pop
ds
cli
ror
iret
aas
int3
mov
sarb
ja
je
popa
sub
jecxz
sarb
mov
out
and
loopne
jne
scas
dec
fnstsw
sub
mov
xchg
cmp
in
nop
sub
inc
repz
fwait
outsl
arpl
test
push
lods
xor
enter
adc
ljmp
cld
or
push
jmp
in
test
lods
lea
jmp
hlt
adc
sti
roll
push
out
push
arpl
gs
outsb
sub
jp
fistpll
daa
inc
icebp
stos
cmp
lock
aaa
xchg
sub
aam
std
xchg
or
push
xchg
les
mov
cwtl
fs
fs
outsb
cs
loope
mov
mov
iret
fs
xor
lds
imul
popf
jmp
jge
imul
and
mov
cmpsb
adc
jp
sarb
mov
fisubrl
fbld
imul
adc
cmp
xchg
jnp
mov
lret
ret
nop
mov
sub
fcmovbe
mov
icebp
loope
out
xlat
push
std
add
mov
aam
inc
xlat
out
adc
add
cmp
pop
sbb
insb
js
pop
adc
adc
inc
repz
fildl
pushf
sti
push
bound
lods
xor
dec
inc
enter
push
or
mov
cmp
push
sarl
out
adc
mov
push
out
jle
pop
mov
adc
dec
ret
dec
cmp
pop
push
push
cmpsb
mov
jae
push
es
pop
out
add
es
jae
or
clc
fists
xchg
jl
add
cmpsl
fwait
jo
xchg
rol
pop
push
cwtl
insl
cmp
pop
pop
fwait
lock
stc
or
pop
repz
aaa
jae
cmpsb
cmp
js
aad
shrl
out
xchg
push
pop
add
popa
dec
push
xchg
sub
decb
stos
add
adc
stos
push
inc
mov
fimull
sub
adc
sub
push
lods
lret
add
lret
mov
popa
aaa
mov
scas
call
leave
call
and
push
inc
mov
xor
lods
adc
mov
arpl
sub
sbb
jno
mov
lcall
fwait
scas
addr16
xchg
push
mov
push
jae
fisubs
or
xchg
push
mov
cwtl
sbb
push
jmp
or
xor
mov
mov
mov
mov
xchg
adc
mov
les
sar
xchg
pop
fists
dec
and
rclb
mov
inc
xchg
or
xor
out
cli
jecxz
and
ja
inc
inc
jge
gs
mov
lret
pop
leave
pop
sbb
loopne
and
pop
cmp
fld
cs
inc
das
or
iret
or
shrb
pop
xchg
xchg
inc
mov
cmp
call
loope
xor
or
xchg
mov
out
fcompl
sbb
push
popa
shlb
push
stc
inc
push
mov
clc
orl
lds
out
std
sub
mov
and
data16
aaa
ror
call
popf
insl
lea
loop
lret
adc
xor
icebp
xchg
lods
rcll
dec
mov
dec
pop
dec
jne
movsl
stc
push
or
imul
pop
cmp
jnp
fmuls
and
sti
mov
xor
adc
in
dec
push
mov
fstl
jae
fidivrl
frstpm(287
inc
pop
imul
push
and
imul
ss
push
pusha
fidivs
in
cld
mov
or
jg
dec
lret
jle
xchg
mov
loope
jg
imul
jecxz
and
arpl
inc
data16
es
jae
push
or
fistpll
xchg
pop
lret
xor
lret
add
jnp
adc
aam
ret
test
fsubrl
pop
or
sbb
movsb
sbb
push
sarb
cmpsb
cltd
mov
int3
fistpl
stos
pop
jl
xchg
mov
push
add
sbb
test
mov
popl
sbb
out
adc
or
inc
lahf
mov
mov
daa
and
sub
subl
mov
or
push
push
and
jae
dec
cmpsl
imul
out
in
in
and
mov
test
inc
mov
jo
mov
sub
pusha
jle
mov
int
dec
mov
mov
mov
loop
imul
xchg
test
add
inc
push
jns
pop
insl
in
inc
out
popl
imull
sub
shll
adc
dec
cli
xor
fwait
addr16
adc
cmp
xor
mov
xor
pop
lock
rorl
mov
negb
imul
lret
shl
add
sub
idivl
fcoml
sbb
lret
in
xchg
mov
cmpsb
fcompp
push
cs
pop
cmpsb
add
xchg
add
jl
cltd
fwait
pushf
sub
mov
mov
fists
or
jne
jle
cwtl
movsl
mov
pop
cld
ljmp
or
lds
sbb
test
inc
jmp
cmpsb
cmpl
arpl
add
cmc
js
in
dec
jle
mov
xor
add
inc
int3
pop
push
dec
mov
xchg
dec
je
clc
fcomps
push
fs
nop
xchg
xchg
mov
cmp
pop
mov
scas
es
sbb
daa
bound
vmread
adc
cmpsl
incb
cmp
push
sub
push
cwtl
into
fsubrl
push
dec
pop
fs
pushw
xchg
pop
xchg
hlt
pop
mov
cmp
mov
jno
push
jge
adc
cld
push
and
popa
mov
dec
jb
xchg
push
je
jmp
sahf
and
adc
xchg
inc
or
lock
js
outsb
ja
mov
mov
bound
jno
jne
dec
xchg
or
pop
sti
mov
lcall
sbb
mov
cld
push
add
push
mov
add
cmovb
sub
cs
mov
mov
sub
mov
push
dec
cmpsl
push
add
mov
push
mov
jmp
add
pop
push
jmp
adc
in
cmp
and
hlt
dec
add
test
sbb
push
xor
mov
cld
daa
jo
mov
inc
push
sbb
leave
mov
rorb
mov
movb
push
out
insb
xor
and
push
stc
xchg
push
test
test
or
mov
enter
das
dec
into
sbb
sbb
xchg
jnp
add
mov
inc
mov
dec
subb
out
cwtl
mov
arpl
outsl
popf
sbb
rcl
aad
loop
or
into
lcall
fsubl
or
mov
push
stos
js
and
mov
int3
and
into
test
xchg
pop
incb
mov
jp
loop
scas
icebp
jmp
lcall
iret
sub
pop
ljmp
inc
sbb
test
push
push
mov
push
fimuls
lock
or
lcall
adc
orl
lea
jecxz
xchg
ret
aam
adc
in
fwait
mov
sub
mull
ds
cmp
dec
jne
pop
pop
sub
xor
pop
jl
pop
cmpl
jg
jecxz
and
xchg
mov
or
and
lcall
and
xacquire
add
aaa
sbb
sub
pop
sbb
dec
fildll
jo
or
push
pop
push
les
aam
push
popa
pop
sbb
out
popa
sahf
and
xchg
jae
cwtl
adcl
mov
xor
mov
sub
pushf
add
push
in
std
scas
sub
jge
cli
inc
jns
test
pop
scas
jo,pt
xchg
dec
cmpsb
int3
or
stos
mov
sub
ljmp
out
into
cmp
jle
movsb
mov
movsl
and
das
push
and
dec
or
idivb
adc
mov
inc
or
int3
or
data16
and
and
xchg
push
insl
gs
push
inc
insb
fsubrl
call
stos
pop
inc
and
and
pop
add
adc
mov
stc
push
lcall
xchg
xor
dec
jnp
test
cwtl
mov
inc
imulb
or
sahf
jae
push
aam
jo
scas
lods
push
call
fwait
cmp
inc
int
add
mov
xlat
fiadds
lcall
movswl
std
jnp
adc
aam
jg
test
fsubrs
sub
pop
movsb
xor
js
repnz
in
push
jp
jne
mov
mov
pop
sbbl
test
inc
out
and
adc
out
int
nop
js
pop
cmp
out
cmp
pushf
sub
inc
push
lock
xchg
sbb
call
pusha
inc
inc
stc
cmc
leave
aam
jo
lods
or
adc
in
pop
mov
aad
in
out
adc
stc
add
push
fldt
leave
imull
shlb
add
mov
jno
inc
sbb
xchg
out
or
movsb
mov
sbb
scas
dec
scas
and
add
repz
lock
aas
adc
loopne
xchg
xchg
cltd
daa
sbb
sbb
mov
test
and
pusha
mov
frstor
popa
cs
dec
in
push
shll
ret
sub
jmp
popa
push
push
push
bound
mov
inc
push
push
pop
pop
add
data16
and
mov
xor
inc
mov
push
in
and
repnz
or
insl
dec
inc
sbb
xor
xchg
out
mov
mov
pop
shll
sbbb
mull
psubsb
and
lea
sahf
jmp
sbb
lcall
outsl
xchg
pop
je
int3
popf
mov
into
loope
test
mov
loop
mov
jle
xchg
sahf
pop
fnsave
scas
push
outsl
and
test
in
xchg
cld
lret
or
push
data16
and
aas
jns
ds
jle
cmp
xchg
mov
hlt
fsubl
xlat
push
and
and
xchg
sub
js
popa
mov
negb
sarb
cli
mov
sub
or
leave
outsb
inc
pop
push
leave
sub
pop
fistl
push
lock
sti
push
cmp
popa
add
mov
add
dec
xlat
popf
mov
adc
mov
pop
mov
mov
adc
or
fdivl
xor
cmp
dec
push
jmp
movsb
dec
shrb
add
mov
es
jmp
orl
mov
ljmp
mov
lahf
stc
testl
cmp
add
out
and
cmp
add
into
mov
dec
cmp
jnp
mov
mov
jl
inc
push
sbb
repz
xchg
dec
sub
pop
inc
inc
repz
inc
inc
sahf
test
sbb
dec
icebp
sbb
roll
cmp
imul
das
bound
push
or
decb
and
sbb
int3
inc
orb
cmp
sbb
inc
pop
outsb
inc
or
cmp
inc
les
mov
jno
lea
mov
jg
mov
sahf
jb
sub
sbb
sub
sbb
and
mov
push
push
je
inc
ret
sbb
cld
cmp
jmp
sub
cmovb
inc
sbb
sub
pop
sbb
clc
mov
icebp
fs
push
ja
insb
clc
call
and
mov
cmc
imul
mov
rorl
ljmp
push
adc
xchg
call
xchg
dec
mov
notb
xchg
loopne
push
pop
jno
scas
xor
and
icebp
dec
mov
arpl
xor
fidivs
adc
mov
or
shll
arpl
in
mov
dec
int3
stos
in
mov
mov
pop
pop
xor
jb
mov
xchg
lret
test
or
jae
cmp
pop
test
pop
xchg
les
lcall
xor
popf
and
inc
out
pop
dec
movsl
push
jnp
dec
adc
jmp
fadds
jl
loopne
adc
inc
inc
cmp
mov
je
push
cmp
sbb
mov
imul
nop
scas
inc
xchg
xchg
inc
stc
rcr
fistps
jle,pn
push
dec
xchg
fiaddl
sbb
pop
sarb
inc
sbb
or
pop
out
and
push
and
mov
mov
xor
fs
fisubrs
sti
push
pop
adc
add
or
imull
repz
dec
fistl
sub
int3
mov
jl
imul
pop
sbb
xlat
mov
mov
jecxz
sbbb
jecxz
and
cmp
xor
mov
or
push
pop
pop
xor
sbb
mov
sub
dec
shlb
movsb
out
mov
aaa
bound
adc
inc
xor
data16
loop
xchg
add
mulb
push
jb
bound
adc
inc
xor
data16
loop
xchg
add
mulb
push
jb
bound
adc
inc
xor
data16
loop
xchg
xlat
add
mulb
push
jae
bound
adc
xor
and
pop
mov
shl
pop
or
dec
or
std
adc
add
jmp
movsb
sbb
adcb
add
push
repz
jecxz
adc
and
push
loopne
shlb
pop
pusha
lahf
and
jo
add
push
repz
jecxz
or
sbb
sub
loopne
test
cld
imul
xor
popa
push
pushf
cmp
daa
xorl
jae
push
testl
ret
mov
dec
and
pop
mov
mov
adc
adc
mov
and
mov
mov
insb
fnstsw
jecxz
pop
cmc
mov
popf
roll
int
loopne
mov
nop
add
jl
fcoms
jo,pt
filds
jbe
jp
repz
cmpsb
cmc
dec
fdivr
in
int3
aad
icebp
push
pop
push
roll
ret
jae
jge
dec
ljmp
std
out
bound
or
repz
int3
inc
push
setae
xchg
jnp
or
outsl
jo
out
dec
add
adc
roll
mov
mov
test
push
jb
xor
sti
fsubr
adc
cmc
sti
pusha
and
add
adc
push
movsb
inc
shlb
jp
xchg
mov
enter
adc
jle
push
jmp
jno
push
out
inc
sahf
push
xchg
and
pop
mov
addl
sbb
pop
mov
sub
inc
dec
dec
cltd
push
orl
jne
insb
mov
and
adc
data16
loopne
shlb
arpl
xchg
and
jo
pusha
ret
push
repz
jecxz
adc
and
push
loopne
shlb
arpl
xchg
and
jo
pusha
ret
push
repz
jecxz
adc
mov
and
movsb
jl
or
hlt
in
repz
mov
sahf
adc
test
subl
addr16
dec
push
push
cmpsb
jno
movsl
fpatan
fucomp
inc
cmpsb
cmp
jle
sbbb
ljmp
outsl
int
gs
aaa
dec
jno
or
jge
rorl
dec
repz
mov
test
js
aaa
rcl
aaa
je
xchg
add
adc
sub
push
out
cs
adc
fnstsw
bswap
arpl
and
int
std
fsubl
std
or
pop
mov
int3
aad
mov
mov
scas
rcl
adc
sbb
jne
movsl
int
ret
adc
pop
sub
inc
fs
pop
xchg
jmp
and
jno
mov
push
outsb
lcall
push
pop
ds
pop
xchg
arpl
stos
fstl
leave
in
and
cmp
pop
sbb
cltd
stc
adc
iret
push
adc
mov
aaa
andl
sbb
and
lcall
sub
mov
nop
lahf
push
into
lods
std
mov
out
pop
or
aam
fwait
ret
mov
push
hlt
std
xchg
xor
aad
loop
or
push
lret
jno
das
cwtl
dec
jg
dec
xchg
loop
cld
aas
lods
bound
in
add
aam
repnz
les
in
mov
xchg
mov
xorb
movsb
adc
cwtl
mov
lods
cmp
in
cli
pop
aad
ds
test
fbld
jg
dec
mov
out
je
cmp
out
and
hlt
test
rcrl
dec
ret
cltd
jne
mov
clc
clc
int
dec
test
xchg
icebp
xor
push
mov
sub
gs
test
movsl
mov
gs
out
push
dec
dec
sbb
sbb
out
les
in
rolb
imul
or
sahf
mov
jle
xor
cmp
stc
dec
add
or
mov
sbb
outsl
mov
ret
jl
in
mov
arpl
xchg
fwait
mov
cltd
outsb
and
dec
rcrb
leave
inc
jne
cli
gs
ret
cmpl
in
mov
fimull
repz
clc
and
in
mov
out
xchg
push
idivb
cmp
mov
jmp
sub
fistps
mov
sbb
ss
int
or
std
sbb
mov
in
fwait
stc
sbb
cmp
sti
outsb
sbb
arpl
mov
add
imul
lahf
inc
das
test
mov
sbb
inc
dec
movsl
xor
enter
or
pop
ss
cmp
push
adc
repnz
cld
sar
xchg
aas
test
xor
sbb
sbb
mov
les
cmp
xorb
lcall
push
jae
dec
scas
imul
decl
jp
mov
jno
test
cmp
push
int
mov
cld
jb
inc
aaa
or
fmull
mov
mov
mov
or
pop
add
pop
add
enter
imul
pop
mov
add
daa
fs
in
pop
rcll
pop
dec
out
test
push
sub
add
sbb
sbb
xchg
out
jp
aaa
movsb
imul
es
pop
div
adc
push
roll
shrb
repnz
xchg
push
jns
jb
bound
inc
std
and
or
adc
mov
insb
lods
pop
gs
arpl
cli
ret
outsb
int
popf
arpl
fwait
xchg
sahf
inc
xchg
sub
nop
int3
inc
jb,pt
mov
xor
outsl
or
sub
out
addl
sub
dec
dec
or
and
add
jp
aam
mov
je
cs
ret
add
mov
repz
lock
mov
scas
cmp
sti
dec
jge
faddl
xchg
jp
mov
sti
insl
nop
pop
shr
pop
testl
ficomps
or
inc
in
hlt
dec
test
inc
negl
daa
push
adc
xor
in
or
stos
xchg
fidivl
and
mov
sub
mov
scas
cwtl
jne
daa
xor
addr16
adc
mov
xlat
cmc
call
out
ja
cmp
andl
mov
pop
pop
mov
out
xor
xor
rolb
fwait
scas
aas
out
aas
mov
testb
rclb
push
or
sub
and
pop
arpl
mov
xor
pop
mov
aas
int
loope
out
mov
add
mov
or
mov
push
xchg
imul
sbb
call
cltd
pop
int
xchg
outsb
popa
sub
call
xchg
adc
adc
icebp
cmp
dec
int3
jnp
sub
pushf
sbb
dec
fnstcw
lods
mov
leave
cmc
sahf
adc
mov
rcrl
inc
mov
push
sbb
in
jmp
nop
std
mov
sbb
imul
leave
pop
stos
push
pop
or
sbb
add
add
ja
mov
out
cmpsl
stos
in
mov
into
into
sti
sahf
rol
inc
mov
xchg
faddp
push
mov
out
push
mov
dec
daa
das
mov
loopne
mov
movsb
mov
addb
jnp
pop
mov
mov
imul
icebp
or
lods
adc
test
iret
dec
jle
add
inc
and
jmp
push
test
cmp
xchg
inc
rcrl
test
or
sub
and
ficoml
xchg
inc
pop
test
fmull
mov
xchg
push
or
push
ret
scas
ljmp
scas
sbb
pop
sahf
add
out
dec
arpl
sbb
pop
add
dec
mov
scas
cmp
mov
in
pop
imull
loop
ret
or
mov
out
adc
cmp
rcr
int
insl
adc
push
add
sub
cmp
iret
mov
cs
cmpsb
push
mov
and
inc
lahf
lods
data16
stos
cld
arpl
push
xchg
jmp
mov
push
fstpt
jmp
and
mov
mov
test
div
mov
and
lcall
popa
xchg
repz
mov
xchg
sub
test
sub
mov
adc
inc
hlt
call
inc
jae
adc
sub
cmc
xlat
ds
adc
imul
lock
cmpsb
lods
jne
xor
mov
dec
mov
lcall
mov
cmp
or
add
and
insb
jle
shll
push
mov
add
xchg
inc
test
mov
cmc
out
and
das
mov
push
inc
adc
sub
sbb
aad
imul
xlat
gs
jl
and
out
movsb
mov
xchg
cmpl
xchg
mov
imul
sbb
stos
outsl
mov
or
sahf
jb
push
jno
cli
mov
cltd
lock
pop
dec
push
rcrl
xor
or
gs
inc
arpl
inc
aam
push
add
sahf
pop
lret
vhaddpd
or
xor
sub
inc
inc
xchg
loopne
stc
xchg
jnp
int3
mov
adc
add
daa
lahf
push
push
sub
or
movsb
cmpsb
and
lret
inc
add
cmp
xchg
das
aas
cmc
lret
mov
and
push
lahf
push
aam
jno
jae
sbb
test
fidivl
cwtl
push
movsl
xchg
push
mov
sbb
fsts
arpl
aam
push
add
sub
xchg
jle
add
sub
cmp
test
and
lea
cmc
lret
mov
push
ss
mov
jno
jle
dec
in
mov
mov
enter
add
lret
pusha
mov
xchg
pop
and
cmp
pop
std
add
sbb
popf
outsl
iret
lods
cmp
jecxz
jb
push
or
daa
call
or
pushf
pop
jae
es
inc
adc
aas
cwtl
lret
std
adc
or
push
sub
add
lods
jle
scas
sbb
xchg
rcr
mov
ret
stos
jb
xchg
fstpt
addl
add
fidivs
pop
in
push
call
fsubrs
nop
sbb
test
pusha
add
push
mov
aaa
jl
int3
std
stc
inc
les
ror
ss
lds
sub
mov
aam
adc
rcrl
and
inc
mov
je
mov
test
jo
mov
dec
add
lret
fnsave
test
pop
or
gs
out
jnp
mov
in
jns
es
imul
js
into
mov
stos
aad
xchg
add
xchg
arpl
fldcw
hlt
jg
movsl
and
fwait
insl
xchg
cli
sbb
xchg
or
xchg
popa
sarb
mov
add
jmp
xchg
iret
repnz
sub
jmp
popa
pop
cmp
sub
shll
and
sbb
cmp
and
inc
adc
dec
mov
mov
in
push
cmp
fisubrl
and
dec
sbb
add
dec
fs
pop
imul
int
aaa
mov
mov
or
sbb
pop
xchg
popa
outsl
aas
dec
sbb
cmp
add
mov
mov
adc
sti
insl
ret
push
inc
enter
adc
sub
sbb
push
rcll
xchg
dec
popf
mov
sub
jb
aam
orb
inc
mov
test
mov
icebp
lcall
push
ja
jmp
dec
jmp
pop
cmp
jg
sub
cld
ja
fistpl
sbb
aaa
and
add
mov
push
jecxz
xchg
mov
dec
les
enter
mov
insl
push
and
aad
shl
mov
and
sbb
cmpsb
push
fdivs
popf
cli
ljmp
pop
xlat
cmp
xor
enter
mov
outsl
xor
add
int3
nop
cmc
out
push
adc
jl
or
inc
ljmp
pushf
out
add
or
jp
push
add
pop
ja
ds
push
jge
notb
sub
movsl
in
add
js
out
mov
cmpsl
jge
mov
lret
cmp
sahf
or
pop
and
mov
pop
hlt
sarb
ret
cltd
scas
xchg
jne
int3
push
lock
into
test
pop
cmpsl
ja
or
pushl
js
dec
mov
scas
call
push
xchg
fwait
dec
lds
out
add
push
add
dec
fidivrl
xor
sti
insb
and
cmp
jnp
enter
pusha
je
cmpsl
dec
lret
je
xorl
xor
insl
neg
xchg
jnp
pop
cmp
mov
cltd
rcrl
mov
mov
int
leave
shll
jle
outsl
xchg
dec
mov
cmp
imul
mov
loop
aad
add
pop
or
adc
ja
jl
rcrl
cmp
inc
loope
sub
jo
aam
dec
stos
je
mov
je
or
push
jo
adc
jge
pop
sub
cmp
in
cmp
sbbl
sbb
shr
adc
or
cs
in
dec
jb
or
int
push
stos
sbb
cltd
mov
fwait
xchg
push
lcall
aas
inc
or
mov
add
insb
inc
inc
cs
test
push
xor
stos
sbb
out
mov
imul
sub
fnstsw
in
cmpsb
lcall
jae
mov
dec
sub
in
leave
xchg
push
loop
pop
popa
sbb
jbe
xchg
lock
pop
ds
mov
mov
lahf
add
stc
outsb
fcmovnbe
and
cmp
lahf
mov
xor
insl
icebp
jg
inc
decb
fsts
push
fsub
cltd
cmp
icebp
mov
movsb
dec
out
mov
lahf
cmp
lds
sub
xlat
sub
das
lods
adc
call
rcl
pop
outsb
adc
mov
add
push
jb
mov
xchg
out
cmp
mov
add
add
rcrl
leave
sbb
dec
dec
and
sub
ljmp
push
dec
out
movsl
xor
mov
into
loopne
iret
ljmp
rcll
jae
mov
ds
cmc
mov
mov
or
pop
push
sbb
jg
push
sub
push
in
inc
lock
repz
dec
incb
mov
pop
sub
dec
test
lods
clc
and
rolb
icebp
mov
push
xchg
and
mov
fcmovbe
mov
push
sbbb
mov
push
sub
test
add
sub
popf
dec
roll
outsl
push
pop
loop
mov
jmp
mov
lods
mov
orb
in
xchg
lock
cmc
mov
push
inc
mov
lret
call
sarl
lds
xchg
sbb
mov
mov
jbe
loop
cmpsl
mov
mov
int
imul
fsubl
decb
xlat
out
ret
sbb
inc
dec
jmp
jbe
xor
and
and
push
shr
sbb
or
les
scas
mov
mov
imul
ja
shrl
mov
sub
push
inc
cmp
daa
and
sub
out
orb
push
sti
movsl
sbb
or
inc
leave
ror
pop
mov
lea
xlat
lods
push
jae
or
test
jnp
shlb
aad
negb
cltd
cwtl
insl
dec
outsl
sub
jbe
cmp
jmp
jle
mov
pop
mov
subb
fnstcw
gs
call
fisttpll
adc
dec
iret
push
cmpsl
fldl
ficompl
xor
cmp
es
adc
loopne
fildl
rcr
adc
addr16
mov
jne
daa
mov
xchg
push
mov
lock
int3
bound
in
fcmovb
shrb
mov
add
out
push
dec
sub
and
loopne
lret
movsl
test
cmp
jge
mov
adc
add
je
repnz
hlt
pop
int3
xchg
cmpsl
sahf
cmp
mov
ret
and
cmp
xor
xchg
jg
push
jl
mov
popa
pop
dec
mov
fldenv
je
inc
xor
fwait
lods
jle
cltd
stos
push
fcomps
stc
mov
adc
inc
cmc
jo
add
shll
rcrl
adc
rolb
loope,pn
in
dec
pop
mov
xor
pop
xorb
adc
inc
xor
dec
gs
jp
rol
mov
xchg
dec
imul
fcoms
jle
movsl
subl
rorl
jle
mov
adc
es
sub
xchg
into
mov
fistl
xchg
stos
imul
and
fisubrl
xor
jle
or
or
aad
dec
push
pop
clc
mov
xchg
adc
mov
clc
mov
je
jb
js
hlt
push
mov
and
adc
arpl
call
fists
notl
add
shll
inc
lahf
popf
mov
sub
loop
in
es
sbb
loope
into
pop
mov
xor
fnsave
shlb
xor
jbe
mov
popa
andb
mov
cld
into
inc
lods
rclb
out
add
loopne
push
clc
jecxz
xchg
shr
cmpsb
mov
lds
mov
add
leave
push
xor
jl
fistps
fsubrp
mov
mov
push
sub
fldcw
mov
lret
push
popa
jmp
or
gs
adc
repnz
les
xor
push
mov
push
push
clc
test
xlat
scas
add
mov
loop
mov
cmc
std
inc
add
test
xchg
in
cld
fnstenv
mov
ja
sbb
fidivrs
popa
jne
adc
es
mov
stos
test
xchg
push
jnp
test
xchg
fstps
mov
xchg
push
inc
mov
xor
sahf
repnz
fst
pop
sti
mov
sti
mov
push
push
negb
div
scas
inc
push
out
pop
into
jle
push
add
mov
push
push
mov
das
arpl
gs
jmp
xchg
and
dec
mov
mov
in
push
cmp
lods
lahf
inc
shlb
dec
sbb
subb
mov
mov
mov
jbe
aam
lds
pop
scas
mov
jne
push
ret
nop
call
andl
fcompl
xor
mov
mov
adc
int3
mov
mov
cli
out
outsw
dec
in
pop
daa
add
xor
sub
mov
scas
push
adc
mov
mov
lods
pop
es
dec
and
push
pushf
xorb
dec
lods
push
cmpsl
add
ss
call
aas
sub
mov
pop
je
test
leave
dec
xchg
push
stos
pop
mov
mov
outsb
cwtl
jns
fsubrl
call
pusha
out
adc
arpl
sub
mov
das
pop
mov
popf
push
sbb
fcmovb
aas
pop
fcoml
cmp
inc
xor
imul
jge
jns
lret
imul
loop
mov
das
sbb
sub
hlt
push
shll
pop
lret
mov
inc
int3
aam
cmpsb
push
leave
fsubrs
jg
ret
inc
sbbl
movsl
out
mov
insl
inc
jl
dec
jmp
ret
test
mov
add
repnz
fildl
movsb
test
hlt
mov
andb
or
sti
inc
inc
push
or
cmp
je
imul
test
xchg
dec
sbb
jmp
aas
push
sarl
in
push
out
out
xor
loopne
and
testl
xchg
es
mov
xorb
or
xor
jl
xchg
xchg
adc
fstpt
mov
mov
add
xor
imul
xchg
add
sbb
scas
js
repz
jl
nop
and
push
movsb
xchg
push
cmp
mov
in
push
pusha
ja
add
insl
fsubp
jg
sbb
out
inc
ret
popf
shlb
ja
mov
aas
lcall
ficoml
pop
iret
stos
mov
ljmp
push
xchg
pop
iret
sahf
sub
ss
pop
xorl
dec
or
dec
jnp
add
out
xor
jecxz
ja
pop
rclb
out
sub
out
aad
push
gs
pop
test
and
xchg
pushf
test
sahf
adc
mov
sbb
cmp
mov
push
mov
sbb
and
testl
mov
test
rcl
popa
mov
and
popf
bound
into
lcall
aam
mov
adc
shll
scas
push
sub
xchg
mov
sub
aas
add
packssdw
xchg
inc
mov
lods
jae
dec
sahf
sbb
adc
mov
pop
add
enter
iret
mov
and
add
mov
in
ja
pop
lods
mulb
test
pop
sub
fisubrs
xorl
cmc
cmpsb
mov
xor
fisubl
test
jmp
gs
mov
cmc
cmpsb
jno
sub
fwait
add
lods
fldl
jp
inc
imul
jo
cs
dec
jno
out
ss
or
aaa
mov
mov
and
orb
jns
pop
in
enter
outsl
or
push
iret
xchg
and
xchg
aam
add
xchg
jp
in
ss
xor
sbb
inc
in
mov
or
mov
lods
data16
push
daa
hlt
mov
and
cmc
mov
xlat
ficompl
inc
sub
mov
mov
das
enter
adc
in
sbb
xchg
add
leave
or
loop
inc
not
es
loopne
fwait
mov
inc
shl
or
push
xorl
cmp
adc
sbb
pop
dec
add
test
lcall
aad
xlat
setge
xor
mov
aas
fistpll
es
mov
popf
int3
sbb
cli
loop
mov
scas
cmp
in
xor
jae
or
stos
pop
stc
out
fisubrl
popa
aam
dec
xchg
pop
xor
mov
dec
rclb
mov
add
adc
sbb
std
adcb
or
pop
sbb
adc
xchg
inc
xchg
pop
push
shl
hlt
fidivrs
jmp
aaa
lahf
enter
xorb
dec
into
daa
ss
aad
andl
jp
scas
pop
xchg
inc
jbe
pop
jge
adc
adc
xor
scas
cmpsb
sti
lret
or
fdivs
pushf
and
push
loopne
shlb
arpl
xchg
and
jo
pusha
ret
push
repz
jecxz
adc
and
push
loopne
shlb
arpl
xchg
and
jo
pusha
ret
push
repz
jecxz
adc
and
push
in
shlb
arpl
and
jo
jns
push
divl
test
mov
sbb
test
lock
lock
shlb
mov
mov
pop
call
pushf
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
mov
push
mov
dec
or
out
sbb
or
add
add
add
add
adc
jo
inc
add
xchg
add
or
xor
arpl
fwait
add
add
jo
out
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
out
add
add
add
add
add
insb
add
add
add
add
add
add
add
add
or
jl
dec
add
add
push
add
add
add
add
add
add
add
mov
add
add
add
push
add
test
and
xchg
and
cmp
push
add
dec
add
pop
add
out
add
add
add
add
movl
dec
add
add
cltd
add
add
add
add
add
add
add
add
add
jp
sbb
add
add
add
pop
add
add
add
add
add
sbb
out
add
add
add
enter
add
xor
add
add
adc
add
add
add
fwait
add
add
add
add
add
mov
or
add
push
add
add
add
add
add
add
add
add
push
add
add
push
add
adc
jo
jne
jp
mov
add
add
add
add
add
add
inc
add
add
add
add
jp
sub
add
faddl
fiaddl
sub
push
add
outsb
add
cltd
add
add
add
and
add
add
mov
add
add
mov
add
add
pop
add
add
add
add
dec
add
inc
add
push
addb
add
add
bound
rolb
mov
add
add
add
add
or
jne
jp
enter
xor
add
insb
add
aaa
add
sub
test
mov
push
scas
add
add
xlat
add
add
add
add
add
add
dec
add
add
inc
add
pop
add
add
add
or
add
insb
add
add
add
add
add
add
add
or
add
add
or
and
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
ret
add
add
add
add
xchg
add
add
add
add
fwait
add
add
add
add
add
add
inc
add
pushf
add
add
add
add
push
add
je
mov
add
add
add
add
add
add
sub
out
add
add
add
add
add
ljmp
add
add
lret
add
sub
cmp
pop
add
add
add
add
cmp
cmp
or
jp
jp
bound
leave
add
add
add
add
add
or
pop
add
add
add
mov
add
add
xor
test
testb
add
popl
add
add
add
fdivrs
lret
and
mov
xchg
push
sbb
insl
sub
lea
add
lods
or
outsl
movsl
sbb
push
fsub
sbb
sti
sub
mov
push
lret
insb
sbb
les
cmp
adc
repnz
mov
pop
mov
xchg
xor
popa
addl
std
sbb
stos
daa
dec
shl
jg
arpl
popa
pop
fisttpl
stos
lahf
insb
sbb
adc
mov
cmpsl
movsl
arpl
leave
xchg
int
pop
or
in
sbb
and
cmp
adc
mov
in
xchg
fstps
add
pop
mov
mov
sbb
fwait
jecxz
sub
nop
push
push
hlt
dec
mov
dec
pop
dec
test
cmpsb
pop
fsubp
loopne
cltd
shufps
hlt
or
xor
push
jo
cmpsb
sbb
inc
fwait
xchg
and
roll
jno
pop
lock
leave
pop
das
stos
xor
mov
xor
mov
es
scas
cmp
jecxz
inc
and
sarb
cmp
jle
enter
xchg
push
sbb
sub
adc
dec
movsl
and
push
imul
out
testl
jo
cmp
fcmovbe
sub
sbb
add
aam
stos
aam
jns
icebp
cs
mov
mov
aam
jno
mov
data16
movsb
fcomps
std
xchg
mov
jne
cltd
mov
bound
aas
ficomps
mov
leave
shlb
mov
mov
popa
repnz
ret
rcrl
mov
cmp
push
mov
sub
push
cmpsl
xor
jmp
lret
into
add
mov
fsubrl
cmpl
mov
jb
mov
loope
pop
fcoms
mov
sub
adc
fisubrl
icebp
scas
hlt
add
daa
sbb
sub
mov
add
sbb
call
iret
fwait
cmc
mov
aas
add
xor
mov
adc
in
cmovbe
jns
add
leave
jmp
nop
inc
pop
and
cmpsl
push
cmp
sub
adc
jns
sub
cmp
jne
jbe
iret
test
xor
addb
call
outsb
imul
cmp
popf
imul
push
lcall
pop
pop
or
pmaxsw
inc
add
jns
sbb
jg
ja
loope
adc
mov
jb
ficoms
ror
cld
aas
inc
shrb
add
mov
fwait
sub
mov
or
ljmp
pop
or
sub
mov
xchg
popf
xor
shll
inc
std
xchg
test
xchg
cmpsl
jns
xchg
lcall
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
