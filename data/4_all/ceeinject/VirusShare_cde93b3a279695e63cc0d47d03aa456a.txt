call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
push
in
inc
cld
jne
fcompl
sub
dec
in
xchg
sub
movsl
sbb
in
inc
cld
jne
fcoml
mov
jl
dec
in
xchg
dec
test
in
inc
cld
jne
fcoml
mov
pop
test
xorb
push
pusha
imulb
imul
and
jne
or
sbb
push
push
fimuls
out
cmp
loop
sbb
loop
mov
cmpsb
cwtl
push
adc
add
push
imul
ret
jcxz
hlt
dec
stos
cld
das
cmp
push
sub
inc
loope
jb
push
jp
imul
dec
pusha
mov
andl
mov
cli
mov
and
mov
fld
cmp
fmull
cs
sub
add
xor
push
leave
imul
add
cld
imul
mov
xchg
push
xor
js
cmp
insb
jb
cmpsl
jecxz
in
inc
cld
jne
fcoml
mov
jl
dec
in
xchg
sub
cmp
or
pop
xor
test
lea
popf
jo
push
pop
jmp
mov
sub
pop
les
jle
jns
xorb
push
test
jo
dec
stc
jo
pusha
mov
or
push
bound
stos
fsubrl
dec
xor
add
mov
jl
dec
in
xchg
sub
cmp
or
sbb
in
inc
cld
jne
fcoml
mov
jl
dec
in
xchg
sub
cmp
or
sbb
in
and
call
pop
idivl
fstpt
lret
mov
adc
adcb
andl
inc
lods
dec
sahf
or
push
sub
roll
pop
nop
loope
jns
sbb
fisubs
jno
sti
cld
jle
adc
aad
int
in
mov
xor
jg
in
push
leave
xlat
push
outsb
mov
maxps
adc
fsubr
push
dec
leave
cwtl
mov
testl
lret
mov
xchg
cmpsl
and
punpckhdq
cwtl
loop
int3
pop
addr16
addr16
ljmp
int
cmp
or
daa
pop
dec
jle
cs
stc
jle
insb
jne
testl
imul
rcrl
scas
sbb
lea
test
inc
test
jg
xchg
mov
in
push
lock
mov
or
pop
and
inc
xchg
pop
mov
jge
cs
jg
ror
adc
aad
push
push
jge
jnp
aas
pushf
sbbb
sub
pop
cmpsb
out
cmpsl
jno
mov
out
aad
jp
stos
add
add
dec
fidivrl
inc
loopne
jbe
push
ljmp
popf
mov
inc
aas
fwait
inc
jbe
das
cmpsb
mov
into
or
push
aad
cmp
fwait
mov
rcl
in
outsb
xor
std
sti
rcll
dec
xor
inc
shll
dec
fisttpl
push
pop
aas
and
insl
divl
push
mov
pushf
aaa
popf
cmpsb
push
mov
and
hlt
adc
jns
repnz
aaa
gs
sbb
or
pushf
pop
aam
mov
lahf
in
xor
mov
jns
pop
mov
adc
jle
mov
out
lea
or
popa
jnp
cmpsb
enter
daa
and
mov
mov
popf
ret
into
adcl
or
inc
call
fwait
inc
fisttps
loope
cmpsb
dec
std
movups
rcrl
ds
cs
aad
adc
cmpsb
fistl
rorb
jno
fs
std
nop
and
in
lods
repnz
cmp
push
cmp
push
cld
or
sub
xchg
push
lahf
pop
into
pop
inc
dec
fcomps
lds
add
pop
leave
push
xchg
jne
ljmp
mov
fildl
in
pxor
lock
mov
xor
inc
jmp
jbe
movsb
cmp
mov
psrld
jg
dec
xchg
arpl
dec
iret
stos
and
imul
and
mov
pop
and
adc
adc
add
fwait
lods
sti
cmpsb
xor
inc
dec
out
xchg
sarb
xchg
stos
es
cmpl
out
shrl
add
mov
mov
sub
sarl
dec
push
sbb
and
pop
loope
addr16
pop
gs
and
or
jl
pop
pop
or
jnp
pusha
inc
sub
push
dec
sub
and
dec
mov
adc
mov
or
inc
cmp
lods
or
fcmovb
sub
push
mov
jl
test
xor
dec
mov
mov
mov
sub
loope
and
lret
sahf
bound
cmpsl
je
add
lret
pushf
xchg
pop
fbstp
cmp
cltd
push
xchg
xor
mov
push
ja
mov
in
stos
adc
pop
pop
imul
or
mov
repnz
lock
jl
insl
sbb
mov
out
fsubs
jmp
jbe
mov
jmp
push
adc
stos
push
mov
out
shll
inc
lock
out
daa
inc
dec
dec
mov
addr16
cmpsl
iret
mov
push
sbb
subps
shrl
int
shll
dec
add
jns
xor
cmp
mov
insb
mov
daa
stos
roll
pop
pop
popa
pop
aas
mov
dec
xor
dec
and
xchg
mov
cli
rol
mov
int
push
dec
sbb
cli
add
loopne
ja
push
call
repz
movsb
mov
cmp
cmp
movsb
pusha
loope
push
inc
xor
stos
addl
bound
test
xchg
xchg
rclb
mov
fstps
cld
arpl
lods
push
jmp
shll
in
cmpsb
das
cld
push
sub
out
xchg
scas
cmp
push
and
pusha
inc
fs
inc
aad
add
cmpsl
push
or
ds
inc
lret
repnz
ljmp
push
aas
lret
xlat
loope
outsl
scas
loopne
out
add
xchg
movsb
test
mov
out
adcl
leave
mov
fists
fdivl
shrl
cmp
cmp
add
cmpsl
inc
dec
cmp
xchg
mov
mov
into
adc
insb
jl
andb
mov
inc
or
fisttpl
mov
jbe
stos
ss
cmc
jb
mov
dec
sub
pop
stos
inc
xchg
push
xor
mov
sbb
and
scas
call
scas
mov
adc
out
fisubrs
in
aam
test
sub
fwait
int
xchg
xchg
sbb
daa
and
and
adc
add
iret
fmull
stos
lock
je
test
scas
or
xchg
cmc
dec
mov
mov
jle
fwait
mov
mov
arpl
ds
push
inc
add
imul
xchg
add
adc
adc
aas
or
lret
jle
jp
stos
out
subb
fcomps
jp
idivl
hlt
pop
push
sub
lcall
stos
inc
aaa
cli
sbb
push
xchg
push
lock
dec
mov
pushf
pop
fs
rorb
shrl
lret
jmp
adc
sarl
sti
pusha
pop
cmpsl
sar
int3
call
push
push
out
daa
add
sub
dec
mov
pop
aas
dec
pop
cltd
add
jne
aad
sub
pop
roll
dec
jo
and
inc
pop
mov
jo
daa
out
ljmp
pop
outsb
push
mov
add
jle
rorl
mov
inc
nop
jle
pop
inc
in
xchg
jecxz
add
sbb
stos
add
add
mov
jnp
movsl
loop
inc
mov
push
lods
ljmp
pop
jno
and
sti
sub
add
out
test
call
jns
mov
movsb
fistpl
adc
icebp
decl
pop
inc
repz
stc
or
loope
add
je
jb
cmp
mov
cltd
and
or
xchg
fldl
pop
arpl
bound
sti
jge
adc
xchg
xchg
cmp
mov
jnp
inc
lds
int
ja
sub
cld
sub
adc
mov
xchg
and
xor
shrb
mov
push
xor
ja
fdivr
enter
jae
sti
gs
lock
inc
popl
push
or
repnz
aam
call
mov
xchg
or
out
cwtl
inc
gs
enter
and
or
push
and
jae
leave
mov
bnd
mov
push
scas
jae
mov
dec
in
cmc
jge
push
fdivs
jnp
lret
inc
adc
add
sti
loopne
inc
clc
xchg
push
xchg
and
push
cli
out
shr
mov
adc
in
dec
jmp
pop
lret
nop
adc
adc
out
cld
and
push
mov
pop
cmp
adc
nop
fisttpl
aad
adc
cmc
orb
int3
mov
sarl
jbe
sbb
jno
pop
push
aaa
xor
push
or
sub
gs
xor
push
cmpsl
repnz
ljmp
or
jle
lock
and
lret
push
sti
cmp
jbe
adc
sub
jle
mov
push
imul
dec
xor
fdivl
pop
loop
dec
pop
call
aam
jge
das
cmp
push
jno
mov
aam
mov
sbb
adc
nop
cmp
mov
xchg
inc
sbb
movl
xchg
repz
mov
arpl
add
test
mov
imulb
out
jle
add
mov
cmp
std
jmp
pop
dec
push
icebp
jge
outsb
mov
test
and
aaa
push
cs
hlt
or
mov
or
es
outsb
and
dec
cmp
sarl
pop
pop
adc
cmp
out
mov
jo
push
sahf
scas
sub
inc
or
xor
jae
sarw
pop
adc
fisubrs
das
int
repnz
lods
sbb
xor
and
dec
imul
mov
cmp
pop
cmpsb
pop
and
xor
inc
adc
jg
leave
int
faddl
inc
mov
int3
testb
sbb
inc
dec
or
xchg
pop
adc
popa
mov
add
jns
push
stos
sbb
stos
mov
cmp
dec
pushf
xchg
mov
xchg
push
or
cmpb
ljmp
sti
xchg
or
lock
xchg
cwtl
push
leave
add
or
or
in
imul
jne
cwtl
and
lock
jmp
pop
fsubs
jecxz
and
dec
mov
dec
xchg
add
push
in
jge
jno
out
stc
mov
test
push
push
lea
rolb
ficoms
insb
sarl
bound
xchg
mov
dec
test
and
mov
jmp
lcall
mov
push
mov
push
call
pop
and
cld
les
add
lods
rorb
test
hlt
mov
adcb
rcll
out
xor
test
pop
fmulp
push
mov
jecxz
fldcw
fisttpll
stos
aaa
mov
or
test
push
leave
push
and
adc
xor
or
and
adc
iret
and
js
imul
sub
ds
inc
ret
jbe
sub
ret
cmpsb
jno
xor
pop
lock
add
mov
aam
ss
or
outsb
aad
nop
ja
dec
or
jge
pop
push
popa
and
scas
pop
daa
ds
mov
mov
xchg
inc
sbb
rcll
rsqrtps
lahf
push
cmp
add
push
scas
xchg
movsb
movsb
into
imul
dec
mov
int
cmp
inc
xor
mov
ret
stos
ljmp
mov
hlt
jbe
jg
inc
jns
mov
push
xchg
adc
mov
sub
xlat
movsb
pop
mov
shlb
pop
inc
pusha
dec
es
rcrb
out
or
dec
rcrb
test
and
outsb
lahf
cs
mov
mov
mov
shl
rclb
adcl
jno
mov
jae
lods
push
cmp
cmpb
daa
fisubrs
sarl
mov
jae
mov
and
pushf
stos
or
sub
dec
fmull
jnp
jmp
sarb
dec
popl
cmp
addb
mov
xlat
jmp
mov
adc
cmpl
cli
dec
test
mov
mov
sbb
sti
loope
lock
scas
shr
xchg
and
xor
add
jg
lock
je
and
cmp
dec
xchg
mov
mov
xor
cmp
dec
ret
or
jmp
fs
mov
mov
inc
lcall
jl
push
loop
loopne
test
add
mov
es
cmp
xchg
mov
xchg
sbb
push
cmp
jo
out
leave
sbb
stc
xchg
outsb
cmp
jecxz
in
fdecstp
lcall
jbe
sbb
fdivs
mov
mov
xchg
test
js
aas
iret
gs
mov
aas
mov
inc
cld
out
jecxz
insb
dec
dec
ds
or
jl
sub
jge
lods
ret
js
adc
out
mov
ss
and
sub
pop
xchg
mov
add
jnp
lret
jnp
hlt
dec
adc
or
mov
mov
dec
xchg
sub
daa
dec
and
roll
fbld
xchg
pop
cltd
adc
das
outsb
xor
sbb
fmuls
enter
cld
sbb
cmp
sub
jmp
mov
push
inc
ret
lahf
in
push
inc
rolb
xchg
cmpsb
fstl
test
xor
fs
pushf
sbb
and
enter
inc
adc
add
or
stos
leave
sub
dec
xor
test
leave
cmpsb
push
sbb
or
shlb
pop
push
test
dec
popa
sub
in
popa
sbb
js
shll
mov
les
dec
sub
cmp
fldt
xor
xchg
push
cmp
pop
adc
mov
cld
push
inc
je
lcall
scas
jb
cmp
ja
pusha
lea
fisubrl
mov
mov
das
dec
dec
or
xor
fidivs
stc
sub
les
aaa
insb
rcrl
lahf
mov
push
test
fisubs
sub
punpcklwd
call
outsb
call
mov
sub
mov
dec
dec
shrl
lret
mov
jp
xchg
adc
mov
push
mov
cltd
xor
adc
lea
jmp
sbb
ljmp
and
movsb
fcom
mov
cmp
jmp
insb
fnsave
cmp
test
jl
js
xchg
add
push
rcrl
pushf
dec
fstpt
pop
lods
jo
sti
pop
add
bound
int
push
ret
aam
xchg
movb
les
jnp
push
jae
enter
lahf
movsl
jmp
enter
cmp
jae
or
inc
arpl
mov
int3
shr
lret
cmp
data16
fistl
test
xor
ss
jg
stos
xchg
ret
xchg
push
mov
fldl2t
push
inc
out
dec
mov
hlt
mov
xchg
mov
dec
in
aam
dec
jnp
mov
leave
push
cmp
mov
or
mov
fnsave
lahf
movsl
insl
xor
loop
pop
fildll
bound
mov
andb
adc
push
mov
repnz
stos
xor
xchg
xlat
outsb
arpl
imul
lea
sbb
hlt
jns
clc
outsl
push
and
cmp
pop
inc
or
pop
lock
stos
cmp
pop
xor
cmpps
or
sbb
insl
cwtl
repz
in
pop
inc
or
movsl
das
inc
adc
cwtl
insb
jecxz
fsubl
cmp
sub
stc
sub
sub
push
int
inc
daa
das
mov
jo
jl
jmp
cld
mov
or
cmp
aam
push
and
lock
out
xor
lcall
imul
rcll
mov
and
push
inc
ror
add
push
push
icebp
fists
mov
mov
inc
sub
mov
call
aas
bound
jbe
in
incb
inc
inc
push
mov
or
xchg
aad
cmpsl
push
xor
call
lret
sbb
or
inc
fwait
mov
sub
xchg
and
shlb
out
lcall
xchg
xchg
jne
mov
mov
mov
int3
test
adc
mulb
and
subb
push
or
nop
sbb
lods
jl
mov
add
fistps
mov
int3
pop
in
inc
xchg
scas
cmp
xchg
xchg
cmp
lods
sti
stc
not
xchg
sbb
ficoml
or
outsb
aaa
adc
jmp
inc
ret
stos
add
jns
sub
push
loope
cli
jmp
mov
shrl
hlt
jecxz
out
loope
push
sub
or
lea
cltd
sahf
and
push
cmpl
les
push
dec
int
inc
mov
mov
in
mov
in
mov
arpl
xchg
mov
lods
into
or
adc
cmp
cmp
sub
ficoms
xchg
rcrl
data16
or
or
xor
dec
mov
cmp
outsb
adc
les
mov
jmp
repnz
ja
pop
popf
mov
jmp
and
insb
repnz
and
notl
imul
test
stos
xor
mov
daa
or
mov
xor
cld
leave
ds
imul
and
and
push
das
jns
out
in
mov
dec
scas
pushf
mov
inc
xchg
mov
or
lret
or
mov
addb
arpl
mov
dec
notb
mov
fists
cmpsb
adc
mov
inc
inc
flds
test
push
jb
dec
enter
sub
aad
ljmp
jbe
mov
movsl
adc
or
adc
aad
testb
sar
dec
out
cmp
stos
jecxz
jns
jmp
lods
test
mov
cli
sbb
inc
mov
lcall
add
out
outsb
add
and
jecxz
lods
sub
sbb
movsb
mov
adc
stc
popf
adc
pusha
pop
fildll
or
mov
sub
push
push
lock
xchg
stos
sbb
pop
fldcw
stos
js
jae
bound
test
std
inc
xchg
inc
enter
mov
shlb
dec
adc
push
gs
sbb
xor
jg
or
dec
test
xchg
adc
pop
jl
rcrl
stc
inc
leave
aas
lock
push
cmpsb
pop
mov
in
cltd
mov
icebp
shll
lods
jp
xor
inc
mov
add
mov
popf
xchg
clc
pop
repz
ds
in
mov
mov
push
mov
jle
xchg
sbb
das
sets
je
fistl
cmpsl
aad
or
fsubl
push
popf
sbb
xlat
je
out
test
jmp
jecxz
leave
out
cld
outsb
test
sbb
mov
lock
jae
cwtl
pop
aas
mulb
push
cmpsb
les
shl
les
xchg
fsubrp
aad
jl
fisttps
ljmp
lea
test
test
cmp
jnp
aas
movsl
addr16
pop
shlb
dec
lods
das
popf
call
add
mov
pusha
pop
or
ret
sbb
mov
nop
xchg
shrl
loopne
fwait
out
and
xchg
js
and
jne
outsb
adc
jecxz
mov
dec
inc
jno
int
pop
mov
inc
lret
outsb
inc
mov
dec
imul
cmc
fdivl
jge
mov
icebp
inc
cli
fdivs
mov
mov
ss
int
mov
jbe
ds
jle
jno
mov
xor
or
jno
iret
dec
lods
pop
mov
sbb
popa
push
test
or
fnstsw
ret
hlt
lcall
pop
stc
imul
dec
pop
inc
lcall
loopne
cmp
or
pop
dec
inc
pushf
jne
mov
jne
aas
add
dec
lods
adc
sub
in
dec
xchg
sbb
jp
pop
clc
int3
enter
xchg
je
cmp
dec
sbb
repnz
ljmp
sbb
sub
push
int3
scas
inc
xchg
and
pusha
jo
fidivs
repz
adc
fisubl
add
jl
sbb
xchg
adc
and
fucomip
clc
push
push
mov
add
xor
imul
xchg
adc
xor
popa
mov
fidivrl
out
sbb
jnp
mov
xor
xchg
ljmp
nop
sub
out
and
sub
repz
rcrb
jmp
add
stc
push
xchg
mov
je
cld
cmpl
push
or
aas
cvtps2pi
inc
adc
bound
add
sarl
stc
cs
aaa
cmpsb
clc
sbb
js
int3
add
loope
cmp
shl
push
sub
xor
loop
sysexit
xchg
push
shrl
mov
jnp
sub
aaa
pusha
add
pop
cmpl
jecxz
fdivs
push
int3
jmp
adc
dec
push
mov
or
fistpll
popa
sub
push
enter
adc
clc
mov
inc
and
push
sbb
sub
dec
cmc
jo
gs
aas
add
fldcw
cltd
pop
lea
mov
add
sub
or
xorb
push
inc
cmp
insb
dec
int3
adc
dec
xchg
jl
lret
int
lods
movsl
pop
test
hlt
push
pop
repnz
cwtl
adc
mov
test
jge
jmp
paddsb
popf
stos
cmp
repz
les
xchg
push
lahf
mov
icebp
into
adc
mov
ss
dec
fimull
add
movsl
push
mov
lea
gs
jno
mov
lret
mov
push
lret
mov
rorb
or
cmp
xlat
push
fcoml
fdivrl
movsb
dec
add
pop
shll
adc
adc
fcomps
inc
push
loopne
jnp
push
in
jecxz
xor
leave
sub
pop
jl
pop
adc
daa
enter
add
rclb
mov
loop
mov
push
jnp
arpl
pop
fists
out
add
pop
int3
imul
sbb
insb
jg
cmp
fs
popa
fidivl
out
bound
pop
dec
sbb
cld
dec
int3
fcoml
mov
jl
dec
in
xchg
sub
cmp
or
sbb
in
inc
cld
jne
fcoml
mov
jl
dec
in
xchg
sub
cmp
or
sbb
in
inc
cld
jne
fcoml
mov
jl
dec
in
xchg
sub
cmp
or
sbb
in
inc
cld
jne
fcoml
mov
pop
dec
in
loop
or
jecxz
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
fidivl
and
adc
add
int3
sti
or
subl
imul
cmp
mov
adc
add
je
je
push
test
movsb
sbb
out
aam
les
cmp
xchg
jl
dec
test
xchg
in
or
jb
jnp
insl
cmpsb
jne
mov
test
andb
mov
push
outsb
jp
es
in
pop
or
outsl
cmp
xor
scas
jns
insb
push
mov
or
scas
dec
cmp
jnp
xchg
push
mov
daa
test
dec
mov
lcall
dec
dec
mov
lcall
imul
aam
addl
je
je
and
pop
std
imul
cmp
sub
es
fcmovnu
jmp
jo
mov
adc
pop
and
dec
lret
insb
sub
pop
testb
roll
push
clc
in
pop
mov
pusha
roll
adc
fmull
lock
cmp
sub
andb
xor
or
icebp
fs
mov
mov
push
in
add
or
sub
mov
mov
popa
divb
add
pop
fistpl
movsb
sbb
or
imul
test
pop
lods
dec
mov
imul
in
sub
jbe
rcrb
jns
adc
push
mov
mov
xor
and
jo
inc
lret
fs
mov
movsb
jns
imul
xor
and
adc
add
je
fs
mov
movsb
jns
imul
xor
aaa
cmp
popa
cli
xlat
lcall
sbb
daa
loopne
xor
in
jg
out
into
xor
cmp
cld
mov
xchg
jne
cwtl
pop
fdivl
decl
js
sub
push
push
arpl
cs
subl
inc
xchg
std
push
mov
jbe
inc
scas
add
fucomip
jo
loope
test
cmpsl
mov
popa
dec
test
lods
push
andl
adc
jecxz
mov
add
mov
test
jle
loope
fstpt
jmp
divl
xchg
rol
lgdtl
cs
pop
or
pop
mov
push
push
mov
xchg
jnp
pop
mov
xchg
push
xor
push
lea
pop
rorb
movsb
iret
gs
or
jnp
xor
mov
or
ficoml
leave
ds
aam
in
stos
jmp
jmp
dec
adc
aaa
das
lods
sbb
movsl
test
mov
push
xor
dec
stos
pop
jmp
mov
lret
xchg
and
in
movsl
mov
inc
adc
xchg
mov
mov
mov
outsl
or
sub
pushf
mov
mov
cmpsb
fcomi
dec
pop
loop
adc
mov
iret
push
push
and
pop
sti
or
add
jge
cli
xor
daa
or
and
sub
adc
rorb
inc
pop
stos
int3
push
sbb
into
adc
xor
inc
sub
lcall
and
ret
out
inc
add
pop
sbb
xchg
jns
jb
ja
arpl
jle
pop
or
jbe
push
push
enter
mov
dec
cmp
inc
icebp
mov
aaa
push
aaa
fnstcw
ja
pushf
subb
pop
xchg
aaa
inc
loopne
fisubs
shrb
jo
or
jecxz
mov
enter
xor
mov
xchg
out
xor
imul
call
jecxz
fldt
lahf
test
mov
push
lret
adc
hlt
pop
mov
bound
xor
hlt
subb
xchg
dec
out
add
xchg
xchg
adc
cmp
jb
aam
mov
mov
push
popf
inc
sub
testl
add
rol
lret
dec
sbb
pop
dec
jbe
int3
aaa
push
dec
sbb
pushf
sub
jmp
xlat
hlt
jne
fs
andl
lahf
dec
les
xor
and
cmp
shl
or
sbbl
push
sub
pop
sub
sbb
jo
push
fs
xchg
sub
sub
out
inc
fimull
or
pop
aaa
or
mov
fildl
scas
jne
sbbb
pop
jns
inc
dec
mov
mov
pop
mov
rclb
imul
sbbb
in
andl
lea
repnz
out
divb
pop
mov
or
cmpsl
nop
inc
pop
push
sub
xor
lahf
xor
aam
jnp
mov
frstor
adc
aas
stos
add
mov
cmp
mov
mov
neg
xorl
adc
sbb
cmpsb
enter
insl
mov
sub
add
in
inc
jg
rolb
fwait
mov
push
mov
and
sbb
sbb
in
jnp
aad
adc
inc
test
pushf
or
scas
add
mov
cltd
outsb
test
pop
inc
repnz
jb
mov
scas
stos
dec
inc
mov
pop
fldcw
aad
stos
jle
imul
insb
mov
icebp
movsl
bound
jb
dec
cmc
adc
pop
addl
cwtl
xchg
sbb
dec
mov
and
mov
movsb
pop
add
push
dec
bound
enter
mov
jnp
shlb
cwtl
fprem
lret
mov
and
cmp
xlat
ds
fwait
sbb
cmp
dec
lahf
inc
mov
jnp
arpl
testb
imul
pop
xchg
ljmp
jne
xor
lods
sahf
mov
in
dec
test
int
mov
pop
nop
movsl
jno
pop
setns
leave
xchg
shrb
into
dec
adc
cld
jo
inc
jbe
cmpb
inc
push
xor
mov
sbb
and
inc
cmc
xor
mov
pushf
lods
shl
pop
clc
inc
adc
mov
enter
mov
aas
aaa
xlat
jmp
movsl
mov
cmp
ret
lds
mov
rclb
aam
cli
or
xor
gs
adc
sbb
rcrb
sbb
adc
add
dec
dec
out
cmpsl
jle
xor
xchg
imul
jb
fildll
jge
cmp
jecxz
cmp
scas
testb
xchg
jecxz
xor
xor
out
xor
jne
insl
idivl
and
loope
mov
pushf
adc
mov
inc
cmc
inc
xor
push
mov
inc
mov
jge
mov
jnp
in
test
mov
arpl
mov
pop
jne
mov
subb
push
mov
xchg
push
daa
add
add
es
movsb
mov
stc
adcb
aad
xchg
shrb
push
and
insl
mov
xchg
bound
jp
cmp
or
test
pop
inc
cwtl
ljmp
jl
sub
jg
mov
aam
pushf
sub
xor
xchg
lods
out
addr16
xchg
jge
iret
inc
lret
iret
pop
in
pop
cmp
aam
in
cmpsl
xchg
in
mov
xchg
mov
xchg
imul
divb
jo
cmpsb
das
pop
mov
leave
dec
mov
jno
add
mov
iret
test
cs
das
dec
adc
xchg
jne
mov
inc
jo
es
jecxz
test
ficompl
lods
andb
cmpsb
mov
or
loopne
push
dec
or
jl
sbb
mov
cmpsb
lds
adc
inc
ljmp
mov
mov
dec
outsl
arpl
cltd
push
hlt
mov
pop
aad
cmpsl
es
cmp
jo
aaa
filds
cmp
ds
loope
stc
adc
je
jb
aas
int
jbe
cltd
or
mov
test
xchg
mov
sub
mov
loop
das
out
sub
push
mov
mov
sahf
add
fwait
jp
mov
rol
fdivrp
loope
sbb
jmp
cmpl
sar
outsb
ret
mov
mov
aam
pop
movsl
imul
sbb
ss
es
fsub
inc
stos
and
aaa
xor
cs
cld
pop
mov
add
and
int
pushl
bound
sbb
mov
push
mov
xchg
mov
adc
xchg
or
sbb
stc
adcb
int3
scas
out
adc
jbe
and
cld
push
xchg
stos
sub
cmp
cmp
xchg
dec
movsl
bound
int
inc
mov
ja
mov
fs
les
std
adcl
ja
outsb
xlat
adc
mov
sahf
or
xchg
lret
data16
stos
shlb
dec
ret
and
out
sbb
js
repnz
enter
cmp
hlt
insb
das
sbb
mov
addw
add
cltd
xchg
or
jbe
idivl
loope
push
sahf
ds
pusha
adc
js
in
pop
lret
flds
test
cltd
add
sbb
rcr
icebp
sbb
jecxz
or
movups
jg
sahf
sbb
popf
push
test
inc
pop
push
cmc
and
mov
sub
bound
cltd
mov
ljmp
cli
sahf
xor
negl
push
clc
pop
pop
jmp
mov
cmpsb
insb
rorb
jmp
jp
inc
xor
and
or
push
add
iret
sub
xchg
adc
or
cmp
lds
lcall
ret
pop
ljmp
inc
dec
ret
mov
xchg
pop
mov
cmp
insb
popf
ret
jl
insl
push
mov
push
shr
xor
daa
push
cmp
add
pop
and
jbe
push
pop
sbb
mov
add
rcll
rorb
gs
xchg
stos
sbb
pop
repnz
rorb
jns
inc
leave
inc
stos
add
dec
add
insl
xor
mov
andl
enter
push
push
pop
dec
mov
lods
cmp
adc
jae
dec
sbb
sbb
aas
pusha
sbb
add
cmp
arpl
mov
loopne
out
add
cmpsb
test
mov
call
xchg
jo
divb
sub
xchg
jne
sti
push
setl
mov
cmp
add
out
dec
push
ljmp
das
adc
adc
nop
loop
pop
pushf
mov
sub
in
les
mov
adc
popf
insb
outsb
subl
addr16
xchg
jb
push
mov
inc
mov
mov
inc
sarl
inc
push
mov
popa
repz
xchg
mov
movsb
add
xchg
aad
jnp
gs
int
ljmp
leave
and
push
inc
es
mov
push
xor
jge
test
mov
fcmovu
aam
mov
add
dec
inc
ja
and
iret
mov
das
sbb
pop
sbbb
fs
sbb
jno
hlt
clc
inc
jle
inc
sub
jecxz
xlat
outsl
push
fdivs
and
hlt
stos
pop
or
xlat
lock
jne
rclb
dec
dec
mov
leave
mov
test
loopne
adc
in
mov
inc
xor
or
cmp
and
mov
faddl
push
nop
push
cmp
scas
ret
popf
cmp
js
pop
movsl
shrb
std
xlat
stos
popl
int
sbb
push
int3
pop
xchg
pop
mov
icebp
pop
pop
mov
mov
lahf
cmp
test
inc
hlt
xor
cltd
ficoml
and
pusha
push
xchg
mov
xchg
dec
ja
jo
sub
push
pop
lods
loop
add
in
mov
cmpsl
inc
mov
mov
inc
mov
in
loope
aas
mov
dec
das
subb
xor
xchg
aaa
pop
lcall
js
add
push
adc
push
fnstcw
cmpsb
or
outsl
mov
das
sub
icebp
rcll
jbe
mov
aad
push
mov
jmp
imul
jo
and
les
xchg
push
insb
int
sarb
aas
arpl
sti
call
mov
or
out
outsl
mov
push
pop
or
in
and
in
pop
xchg
jbe
lock
fwait
lds
jne
add
mov
mov
cltd
jb
jecxz
lahf
ret
xchg
add
sbb
into
je
lods
pop
and
fstps
sub
cmp
jg
jns
jno
mov
pop
pop
pop
pop
inc
pop
imul
mov
mov
lcall
fidivrs
pop
scas
int3
stc
imull
mov
jmp
sbb
mov
int3
jns
mov
adc
pcmpgtd
mov
dec
ret
and
xor
mov
adc
ds
sbb
push
cmpsb
cmpsl
ds
push
pop
imul
pop
mov
in
inc
ret
fsts
js
push
push
test
pop
addr16
mov
mov
push
psrlq
pop
fdivrs
mov
lea
adc
or
dec
rorb
adc
pop
cvtps2pd
je
jo
into
push
push
cmp
jecxz
push
cmp
pop
or
sub
jg
xor
jecxz
int3
xchg
jmp
push
push
jmp
loope
scas
and
addl
push
movsb
xchg
dec
add
lods
dec
xlat
scas
push
xchg
test
dec
ficoml
add
or
ljmp
test
xor
ss
xor
xchg
or
xchg
dec
sub
cltd
mov
sub
pop
jge
cmpsl
dec
adc
push
inc
aam
adc
push
insb
add
mov
imul
lret
lods
xchg
aas
xchg
push
xlat
aam
out
sub
lock
ret
or
mov
mov
jmp
lock
jbe
nop
inc
out
mov
inc
xchg
inc
cmpsb
hlt
shl
pop
mov
xchg
mov
lcall
inc
lcall
lret
jecxz
in
cmp
mov
mov
loopne
push
lock
fists
leave
sbb
pop
or
xchg
lcall
xor
dec
int
je
aas
mov
cmp
jecxz
sub
aas
stos
test
in
jb
lea
push
cmp
loope
out
adc
cltd
in
push
or
and
icebp
mov
pop
jae
xchg
pusha
je
stc
inc
in
shld
test
cmp
xchg
adc
push
jns
nop
addr16
fwait
pop
mov
mov
leave
mov
pop
xchg
sub
fmull
add
shll
mov
or
jge
ds
stc
into
rcrl
xchg
addr16
test
mov
stc
push
mov
xor
cmpsl
fcmovu
inc
inc
js
movb
leave
mov
cmp
inc
xor
or
out
les
cmpl
or
xchg
pop
cmp
test
jmp
jmp
add
out
daa
loopne
test
sbb
loopne
shlb
insl
and
sti
add
pop
scas
push
mov
inc
jb
inc
or
pop
imul
in
xor
xorb
inc
add
sub
lret
mov
stc
outsb
sti
add
leave
fbld
cld
jns
mov
or
bound
sub
fidivrl
movsl
pop
add
stos
lods
mov
ljmp
stos
bound
cmpsl
xchg
jno
iret
idivl
xor
sub
add
mov
test
out
iret
push
xchg
or
jno
inc
pushf
lock
test
xchg
imul
push
clc
shll
or
mov
mov
or
jnp
xchg
dec
cmp
pop
test
xchg
sbb
add
fdiv
xlat
fnstenv
insb
or
filds
pop
jbe
jecxz
stos
ja
insb
insl
push
inc
adc
mov
and
push
and
shlb
or
sbb
roll
sub
fmul
mov
mov
mov
clc
shlb
inc
out
inc
cmp
sub
imul
mov
and
or
es
outsl
jne
mov
adc
ror
inc
inc
ds
sahf
fldl
inc
inc
mov
lret
add
shrb
sar
movsb
mov
enter
lock
sbb
inc
pop
popf
test
xchg
dec
xor
outsb
popf
fdivl
aaa
jl
mov
scas
icebp
stc
ljmp
fidivl
jnp
cltd
xor
cld
mov
xchg
sub
hlt
ret
pop
jnp
sub
dec
icebp
sub
imulb
pop
test
scas
xchg
pushf
mov
jae
aam
sbb
or
mov
int
cli
sbb
test
fsubrl
in
mov
loopne
pop
add
lahf
dec
xchg
jb
cmp
adc
loop
and
fdivs
xor
xor
sbb
int3
inc
cmpsb
loopne
xchg
mov
inc
or
pop
aas
sarl
cmpsl
mov
ret
pop
shrb
pop
mov
ja
jo
mov
dec
pop
jge
lret
jne
lods
scas
call
inc
jp
push
stos
int
mov
xchg
dec
mov
add
addr16
rol
ret
jnp
lods
push
mov
ss
mov
sbb
xchg
fsubs
xor
hlt
lcall
js
nop
or
xor
adc
xchg
and
popf
mov
sbb
nop
add
test
sti
mov
in
clc
pop
inc
enter
and
sub
fistpl
loopne
sbb
call
or
xor
outsl
add
sbb
loope
mov
jne
scas
sbb
jnp
in
leave
mov
adc
iret
std
push
in
stos
mov
mov
mov
int3
jge
mov
ljmp
icebp
or
movsl
mov
repnz
fwait
add
sbb
and
sub
dec
fcoms
cmp
adc
push
jae
aam
lretw
negl
push
ds
in
imul
xor
or
adc
or
lret
or
xchg
push
int
dec
xor
mov
fidivrs
mov
cmp
lods
dec
pop
mov
hlt
pop
out
hlt
mov
rolb
mov
ljmp
cld
insl
in
sub
or
in
leave
pop
xchg
cmp
jmp
and
ss
or
fwait
jp
lock
or
shr
mov
xor
in
sahf
ljmp
stc
std
or
cmp
int
subl
push
lret
outsb
sahf
stos
adc
cs
stc
std
test
pop
xor
scas
pop
dec
or
fcomp
stos
push
sub
rolb
pop
pop
lahf
push
adc
cli
pop
negb
dec
add
mov
sbb
mov
xlat
mov
xlat
dec
test
sbb
jns
addr16
xor
mov
pop
fcompl
xor
cmpsb
outsl
jo
fcomps
inc
fisttpll
and
xchg
jae
cmp
mov
cmpb
mov
and
loope
mov
dec
addl
adc
and
mov
jae
test
cmc
add
jl
push
test
std
adc
popa
mov
rorl
pop
sbb
add
or
loopne
call
in
test
mov
adc
sub
mov
mov
aaa
adc
ret
ret
ss
sbb
inc
jmp
mov
lock
sub
xchg
mov
ljmp
fcompl
test
xchg
test
or
sbb
outsb
adc
lods
cld
xchg
mov
push
inc
dec
jne
pop
lahf
push
xchg
mov
and
pop
cmc
mov
ss
movsb
std
dec
lods
insl
inc
fstpl
es
mov
scas
or
or
mov
sub
add
mov
and
loop
movsb
add
stos
test
scas
push
push
popf
cmp
rolb
mov
cmpsl
mov
mov
pop
jbe
nop
test
jns
ja
and
mov
and
xchg
xchg
std
jmp
addl
cmp
mov
mov
int3
adc
cmpl
test
lahf
push
dec
sub
in
sub
or
into
stos
addr16
mov
lret
int
dec
loopne
popf
in
and
cmc
dec
pop
clc
lods
cmp
stos
sbb
aad
mov
test
adc
mov
mov
rcll
ret
lcall
jne
or
push
jp
popf
mov
loopne
sbb
sti
out
add
add
lret
xchg
jo
mov
std
jae
adc
stos
das
enter
or
mov
outsb
shrb
sahf
popa
sub
jg
mov
imul
lods
fwait
mov
test
fisttpll
inc
push
lretw
pop
leave
inc
data16
std
pusha
push
or
mov
movsl
inc
scas
dec
xchg
fsubl
sub
pushf
out
jl
test
dec
pushf
call
mov
test
pop
sti
push
bound
rolb
mov
loope
enter
nop
dec
setae
dec
mov
stos
sbb
inc
xor
inc
inc
sbb
sub
je
pop
mov
xor
icebp
stc
cmpsb
xor
mov
out
mov
ss
ja
mov
fwait
sti
aaa
jns
mov
jae
xor
jle
movsb
inc
pop
lcall
les
and
and
fbstp
cmpsb
in
lret
insb
mov
lea
and
imul
xchg
sbb
hlt
jg
lret
jno
popa
inc
imul
clc
and
sub
mov
mov
outsb
nop
sahf
ds
shrl
push
jle
push
out
rcrb
fistpl
das
int3
adc
pop
lods
mov
adc
sahf
ljmp
adc
dec
xchg
popa
jo
push
xor
imul
fidivrl
aad
loope
and
or
mov
mov
test
movsb
aam
stos
adc
pop
inc
mov
push
rolb
std
and
push
andl
fistps
mov
inc
stos
insl
cmp
ljmp
add
xor
test
addr16
or
cmpsl
mov
sub
inc
loopne
add
and
test
je
rep
movsl
dec
mov
imul
pusha
push
dec
mov
sahf
add
jo
lods
data16
dec
cmpsl
dec
pop
rolb
loopne
inc
subb
xor
mov
xor
in
sub
rclb
xor
hlt
out
push
add
sub
sub
loopne
shr
cmp
in
adc
or
push
mov
add
je
fs
mov
movsb
jns
imul
xor
and
adc
add
je
fs
mov
movsb
jns
imul
xor
and
adc
add
je
fs
mov
movsb
mov
in
rol
ror
xchg
and
je
fs
mov
push
rcll
fwait
stos
mov
inc
or
adc
add
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
mov
cmpsb
pushf
xchg
lods
xchg
int3
int3
cld
ss
daa
sbb
sub
cmp
dec
pop
push
insb
inc
jl
mov
mov
in
movb
push
cmp
and
push
insb
inc
jl
mov
mov
in
cld
ss
aas
jp
push
pop
jbe
or
and
sub
jmp
ljmp
addr16
out
jmp
inc
xor
and
inc
and
fildll
cmp
int3
out
sub
cmp
lret
js
jecxz
cmp
pop
mov
add
out
scas
xchg
xchg
repz
pop
pop
cwtl
test
push
jne
insb
es
sbb
inc
les
test
fstl
movb
repz
fmull
data16
dec
clc
inc
int3
jbe
jns
scas
inc
out
push
xchg
push
xchg
sarl
and
insb
inc
orb
adc
or
adc
in
mov
jmp
dec
jmp
adc
jp
cmpsb
pushf
xchg
lods
xchg
in
cld
ss
sbb
sub
cmp
dec
pop
push
insb
inc
adc
ljmp
mov
stos
les
push
dec
jle
ja
cmp
jmp
ljmp
test
adc
push
pop
ja
or
cmp
adc
enter
fsubrp
fnstcw
in
cld
ss
sbb
sub
cmp
dec
pop
push
insb
inc
jl
mov
mov
in
cld
ss
sbb
sub
cmp
dec
pop
push
insb
inc
jl
mov
jle
mov
xor
adc
xchg
pop
fiadds
push
add
mov
in
fstpl
arpl
add
insl
in
std
dec
adcl
cli
sbb
inc
sti
div
jb
and
inc
jle
jmp
fdivr
sbb
xchg
adc
and
js
mov
sub
push
popl
ret
fcompl
mov
orl
push
ficoms
and
or
xchg
xchg
rcrl
mov
movsl
and
enter
stos
cmp
rcll
add
mov
sbb
sbb
rorb
sarb
pop
das
stc
cmp
fsubrl
add
rorl
std
outsb
pushf
popf
push
xorl
in
mov
mov
daa
andb
add
mov
mov
dec
push
imul
mov
sti
jmp
jmp
adc
ret
int
push
lahf
sub
adc
add
loop
pop
cltd
movl
dec
pop
push
iret
jae
xor
dec
xchg
pushf
loope
fldl2e
dec
lods
fsub
idiv
or
dec
sbb
and
jns
mov
inc
mov
mov
xchg
leave
xor
sbb
jns
loopne
pop
and
adc
insl
xlat
or
les
sti
out
xchg
jae
fnstsw
dec
adcl
fcmovnu
push
popf
jnp
ja
push
icebp
mov
inc
or
jmp
movsb
and
push
out
outsl
xchg
sub
dec
cli
pop
jle
test
leave
mov
lahf
movsb
mov
or
xchg
add
dec
or
sub
mov
ret
flds
inc
stos
pop
jmp
mov
sahf
std
add
test
jbe
mov
pop
lret
je
pusha
sub
jecxz
aad
shlb
jmp
mov
push
dec
enter
sbb
shlb
movsl
sbb
or
mov
dec
mov
inc
loop
ret
and
ficompl
push
pop
cmp
mov
imul
pop
rorl
clc
shlb
dec
cmp
cli
sub
inc
cmpsb
fldl
jb
and
loopne
cmp
mov
jp
inc
lock
add
sbb
xchg
cmp
pop
or
fs
hlt
jo
movsl
mov
cld
ret
fbld
cmp
test
les
push
push
nop
dec
stos
jge
addl
icebp
sar
in
adc
jns
jno
jge
pop
out
adc
pushf
call
fcmovb
sub
add
sar
xlat
fsubl
mov
fs
daa
jg
frstor
adc
adc
popf
xchg
cmc
mov
xchg
adc
push
add
dec
jns
jns
pop
lods
or
int3
push
into
stos
in
fldcw
loope
shlb
aad
cmp
insl
push
jmp
adc
sbbb
pop
subl
add
aaa
imulb
repnz
fwait
pop
adc
adc
clc
dec
mov
stos
sti
xor
dec
fimuls
pop
xchg
mov
adc
push
fs
mov
jmp
dec
sbb
ret
fs
ficoml
fs
mov
xchg
add
fistpll
daa
xor
daa
inc
add
cmp
pop
sarl
lahf
adc
andl
loope
push
test
and
cs
pop
lea
leave
pop
push
xchg
jae
xor
push
mov
xchg
cmp
test
add
xor
sub
or
push
mov
inc
std
lds
ret
jae
inc
popf
das
add
mov
out
data16
mov
jle
push
xchg
es
imul
aad
shlb
jp
movsb
adc
and
outsl
sarb
and
fdivrl
arpl
push
dec
cmpb
jns
enter
add
int3
lahf
hlt
inc
imul
mov
or
movsl
inc
data16
cmp
andl
loop
push
push
mov
shll
subb
ds
fwait
jno
ficoms
mov
incl
mov
mov
jbe
sbb
in
inc
adc
mov
je
xor
lock
cmp
xchg
adc
mov
loop
pop
inc
mov
hlt
clc
mov
enter
and
repz
mov
lock
mov
cmp
rcrl
sub
adc
mov
stos
xchg
mov
dec
push
mov
pusha
imul
pop
mov
dec
outsb
mov
jecxz
loopne
sub
arpl
xchg
inc
loopne
push
outsb
xchg
xor
xorl
test
adc
xchg
add
dec
aad
xlat
lds
je
pop
mov
inc
inc
push
aaa
subb
add
divl
cltd
mov
cmpb
aam
fcmovu
adc
adc
add
cld
test
addr16
adc
jno
sub
addb
push
jge
push
sbb
pop
jo
add
cmc
inc
xchg
sahf
sahf
pop
or
das
test
cmp
cwtl
sbb
roll
or
inc
or
idiv
mov
call
mul
push
pop
sub
cmp
out
mov
lcall
in
sub
or
pusha
das
test
outsb
or
in
stos
push
mov
ljmp
lods
jle
fwait
cltd
or
pop
mov
push
mulb
jle
dec
fstps
mov
sub
jb
and
test
scas
je
xor
jp
fwait
inc
mov
fs
mov
cltd
cmc
pop
fs
les
cmp
pmulhw
push
insl
fiaddl
xchg
mov
inc
es
sarl
jbe
xor
dec
fwait
adc
mov
xchg
sbb
sahf
ret
mov
push
dec
pop
push
lods
movsl
divl
cwtl
mov
andb
enter
jnp
push
les
or
cmc
pop
cmp
xchg
mov
lods
jb
jns
push
mov
adc
imul
mov
fwait
nop
in
push
repnz
insl
insb
movsl
cwtl
xchg
sarl
mov
popf
std
in
test
in
push
icebp
sub
or
mov
lods
loopne
adc
test
pusha
movsl
mov
mov
in
inc
fsts
scas
test
push
in
lods
dec
adc
inc
insl
sbb
mov
xor
int3
ret
mov
out
mov
cmp
rclb
jmp
mov
push
xor
and
cltd
ljmp
lret
sbb
test
sub
inc
jle
inc
push
cs
sub
outsb
mov
test
add
mov
ljmp
popf
cltd
inc
xor
lock
notb
mulb
cltd
je
lahf
int
jge
sbb
pusha
mov
iret
scas
je
or
fnstcw
shlb
lahf
sbb
add
das
mov
enter
push
jne
push
scas
sahf
notb
and
ret
push
adcb
out
pop
mov
jge
je
inc
pop
sub
sbb
cli
xor
sahf
test
fdivrl
adc
mov
mov
lods
and
inc
enter
dec
movsl
mov
mov
mov
das
dec
es
add
inc
jmp
inc
inc
sub
leave
inc
mov
nop
nop
shlb
mov
mov
nop
add
outsl
pusha
xor
jnp
and
insb
ret
xchg
daa
add
adc
ja
test
xchg
adc
aad
inc
jge
mov
push
pop
ja
sub
sub
dec
inc
or
icebp
sub
lret
sub
shlb
xlat
ret
cmp
cmpsl
xchg
insl
xchg
aaa
cld
dec
fsubrs
aaa
dec
mov
push
or
pop
jnp
orb
test
jp
adc
repz
iret
repnz
push
adc
xor
rcll
sar
iret
cmp
in
sbbl
pop
dec
adc
inc
std
insl
xchg
push
fldcw
cmp
or
out
fstps
sti
cli
out
push
in
mov
shll
mov
inc
sub
jmp
addb
and
mov
sbb
repz
outsl
bound
mov
push
dec
sbb
jmp
mov
push
into
scas
adc
lahf
push
ror
adc
clc
movsb
in
test
movsl
lret
jno
cmpsb
mov
out
jno
dec
jb
mov
xchg
adc
arpl
xor
es
ljmp
in
mov
xorb
icebp
mov
test
sub
fidivl
fnstcw
test
lods
hlt
mov
rcrl
push
lods
test
jmp
popf
mov
add
sub
rcll
test
stos
xorl
or
lcall
movsl
ss
mov
jp
jbe
pushf
insl
repz
outsl
pop
pop
mov
or
popa
push
enter
call
sbb
test
les
pop
or
jp
dec
outsl
or
in
fwait
in
jp
loopne
ja
cs
cmpsb
cmp
lea
adc
sbb
aam
lds
daa
push
jne
sbb
mov
inc
push
aas
mov
ss
clc
jne
cmp
sub
lods
lret
icebp
out
sub
cs
dec
xlat
call
adc
push
mov
xchg
xchg
or
jle
cmp
xchg
adc
xchg
fwait
mov
int3
fs
testb
call
push
sbb
stos
mov
sbb
jno
and
inc
dec
ljmp
cmp
gs
les
push
or
pop
lret
enter
pop
cmpsb
pop
mov
inc
mov
movsl
mov
dec
addb
mov
cmp
add
sbb
aad
test
dec
add
cltd
sub
nop
ds
int
aaa
imul
cltd
mov
mov
jb
arpl
inc
lcall
add
or
rorb
addr16
gs
pop
push
or
mov
scas
popa
push
in
ss
insl
outsl
or
cmc
shll
ret
mov
shl
subb
xchg
adc
inc
insb
int3
loopne
cmp
rorb
and
mov
lds
mov
xchg
lods
imul
divb
ret
leave
ficoml
daa
pop
pop
daa
adc
add
scas
inc
adc
jns
xlat
or
dec
andl
shlb
fucom
aad
or
xchg
out
stos
je
sti
sbb
testl
adc
pop
outsb
dec
jne
test
das
xlat
jo
lds
sbb
pop
mov
fisttpl
or
movsl
pop
aad
sbb
xchg
rcll
mov
jno
fisubs
data16
push
inc
sbb
cmp
add
popf
sbb
movsl
jne
and
mov
cvtdq2ps
gs
inc
out
pop
dec
fcomps
cli
add
ror
imul
mov
or
mov
xorl
push
fwait
leave
add
es
and
inc
sub
xor
int3
cmp
and
gs
int3
push
push
and
stos
add
mul
mov
inc
mov
cmc
mov
jae
push
xchg
imul
mov
fabs
fadds
xchg
lahf
les
cmp
ds
inc
call
pop
insb
add
rcr
xchg
rcl
jecxz
andl
inc
dec
push
mov
lcall
pop
sti
and
gs
jmp
xchg
es
sub
inc
aaa
lcall
mov
ja
adc
pop
xchg
mov
bound
cmpsl
out
lds
inc
stc
popf
add
push
orb
and
cmpsb
sarb
push
dec
cmp
xor
bnd
stos
lods
jp
jp
jle
adc
xchg
rol
inc
adc
mov
and
clc
mov
sbb
out
jo
scas
int
dec
nop
out
cwtl
cli
popa
push
or
inc
mov
jmp
push
dec
add
mov
cmp
scas
jo
push
andb
jmp
jmp
mov
inc
lret
mov
mov
cmpb
lock
rcl
xlat
test
xor
sub
jle
sti
aas
add
negl
jns
fbld
mov
push
dec
or
mov
push
pop
xor
imul
xor
sbb
sbb
jnp
test
mov
adc
shrb
add
xor
jb
mov
sbbb
shr
add
pop
stc
out
pop
cli
sahf
fsubs
movsl
mov
test
pop
cmp
ret
mov
in
mov
lea
push
xor
cmp
cmpsb
lds
lock
mov
cmp
push
scas
jge
cmp
pusha
mov
pop
push
mov
hlt
notb
outsb
mov
out
jae
sub
test
mov
test
mov
jmp
cmp
dec
push
pop
jecxz
hlt
movsl
stos
mov
int
add
adc
inc
cmpsl
shlb
dec
or
outsl
dec
out
jnp
push
mov
aad
inc
movsl
insb
test
ljmp
popf
push
out
xor
rorb
xor
lds
movsb
and
insb
pop
mov
jp
lahf
pop
out
std
jno
jmp
imul
pop
push
or
inc
add
rol
and
mov
stos
iret
in
xor
fldenv
sbb
mov
arpl
movl
jno
mov
pushf
xor
icebp
out
pop
adc
in
pop
adc
je
xchg
mov
sahf
nop
lcall
push
adc
rcl
jmp
cmp
and
dec
jle
hlt
dec
mov
inc
xor
les
lods
xor
mov
push
xor
aaa
sub
insb
insb
sub
rcll
int
mov
mov
mov
test
out
mov
or
xchg
fs
nop
lock
jno
iret
or
repz
das
cmp
lea
ret
mov
mov
jmp
sbb
fcomps
mov
shrl
fisubs
cmp
mov
or
out
cs
sub
sbb
dec
ljmp
cmp
mov
mov
push
cmp
sub
jb
sub
jg
fsubrs
xor
xchg
jecxz
das
push
sbb
inc
les
sub
cmpsl
faddp
loop
adc
ds
enter
ss
mov
repz
xchg
testb
int
jo
test
aas
add
mov
xchg
pop
adc
ss
js
call
clc
out
pop
in
jae
inc
mov
inc
clc
xchg
in
int
jg
nop
mov
cmp
and
cmpsb
mov
xchg
movsb
insb
pop
fdivrs
fs
push
incb
stos
add
adc
lods
dec
pop
pop
sbb
dec
add
icebp
sbb
in
mov
out
cmp
fisttpl
xchg
out
repnz
pop
adc
jge
cmc
gs
mov
mov
je
jmp
arpl
fmul
sti
jg
and
dec
cwtl
mov
cmp
xchg
or
and
jle
mov
push
loop
aas
fwait
call
testb
cmp
setle
add
sbb
sbb
pop
xchg
dec
inc
fnstsw
daa
insb
test
push
movsb
rcll
lock
and
jnp
outsb
inc
xchg
cmp
mul
loopne
dec
add
cltd
les
cmpsl
sahf
xchg
cwtl
xchg
jge
cmc
jbe
xchg
js
and
xor
repz
popf
fabs
fs
arpl
adc
mov
cltd
cmp
or
push
fwait
sub
stc
scas
xchg
test
sahf
stos
mov
je
sbb
psubw
mov
cld
jge
adc
popa
and
mov
sahf
jg
outsb
in
sub
dec
push
inc
push
mov
dec
adc
pop
aam
add
jne
mov
push
adc
pop
inc
mov
add
adc
sub
add
push
sbb
lds
fsubl
and
js
stc
mov
sub
jg
pop
jg
adc
push
inc
push
sbb
repnz
hlt
mov
push
sahf
sub
iret
mov
adc
push
js
cmp
idiv
shll
insl
in
adc
scas
mov
xchg
pop
movsb
mov
and
ss
in
add
ljmp
into
sub
push
and
das
add
sahf
rorb
push
fisttps
test
in
add
inc
add
sub
es
lret
adc
outsb
mov
sub
adc
in
fsubs
in
mov
movsl
pusha
movsl
out
popf
mov
data16
add
fimuls
lret
xchg
bound
fdivr
push
shl
and
and
sub
movsl
out
lds
movsl
cs
and
pop
loopne
arpl
jmp
pop
inc
movsb
iret
mov
push
shrl
pop
xchg
dec
inc
inc
test
or
mov
inc
push
adc
pop
xchg
in
pop
mov
shll
jbe
jecxz
adc
and
mov
push
mov
inc
flds
mov
sbb
scas
cmpsb
shlb
sbb
lret
push
aam
dec
push
ss
pusha
je
adc
and
mov
stos
and
imul
daa
add
cs
sub
ja
in
add
rcrl
cmp
or
in
mov
mov
xchg
js
push
xchg
andl
sbbb
pusha
fdivrp
mov
addr16
movsb
inc
dec
pop
ror
hlt
out
and
push
mov
imul
imul
xchg
jno
add
inc
cs
adc
adc
daa
ret
inc
cmpsl
and
imul
jbe
js
xchg
fcos
xchg
jne
add
orps
in
int3
push
adc
mov
scas
aam
or
shl
out
pop
pop
sti
jmp
jb
and
dec
pusha
or
decl
dec
sbb
sub
mov
mov
shrl
cli
add
push
mov
gs
repnz
les
add
mov
or
aad
sub
pop
shlb
xchg
jnp
divb
cmp
xor
aad
cmpsl
xor
mov
movsl
outsb
out
push
xchg
push
mov
nop
lcall
rorl
ljmp
jno
sub
enter
inc
jp
aas
scas
fadds
pop
mov
xchg
adcb
pop
dec
rclb
sbb
dec
pop
jmp
mov
xor
mov
mov
std
sub
mov
std
and
jle
test
insl
stos
inc
lds
fnstsw
nop
mov
jne
sbb
repz
jg
mov
dec
mov
mov
mov
cmpsb
out
imul
inc
out
push
jb
outsl
incb
out
sub
or
daa
adc
dec
stos
sarl
inc
jae
and
xlat
repnz
loope
lcall
mov
and
or
rorb
sub
mov
fldlg2
roll
dec
test
push
sub
xor
stos
sub
scas
icebp
rcl
scas
adc
mov
xchg
jmp
mov
add
cmc
loopne
xlat
adc
dec
gs
add
xor
cmc
xchg
jno
pop
mov
insl
inc
pop
cld
dec
or
push
push
xchg
jno
stos
cmp
sarb
add
xlat
out
and
or
mov
push
je
movsb
pop
orb
insb
cmc
pop
pop
push
or
and
jl
add
imul
push
pop
cmpsb
int3
imul
outsb
or
ja
pop
push
sbbb
xchg
loop
and
popa
ret
or
mov
push
fildl
iret
movsb
or
cmp
stos
sbb
mov
push
mull
pop
loop
scas
rorl
xor
insb
pop
pop
inc
sub
mov
mov
cmp
loope
ret
fstps
jns
push
dec
sub
pushf
test
nop
and
ss
xchg
pop
dec
or
inc
call
inc
push
inc
jge
imul
inc
fstps
ja
test
jge
mov
and
aad
pushf
stos
ja
xchg
fcoms
lods
rolb
lcall
jmp
jb
inc
mov
ficompl
push
mov
pop
mov
pop
jecxz
jbe
xor
jecxz
lret
mov
lcall
jge
jmp
clc
mov
lock
rorb
cli
clc
cmpl
push
stos
inc
loop
out
push
and
dec
and
into
fnstcw
mov
inc
mov
and
lahf
push
pop
in
cmp
lock
sbb
test
out
and
mov
scas
scas
loop
ss
scas
sbb
fisttps
cld
mov
hlt
outsl
daa
aas
sahf
cmpsl
sbb
test
dec
push
rol
sub
sbb
xlat
adc
xor
push
and
dec
adc
add
mov
sbb
or
mov
fisubs
call
adc
xchg
sub
adc
lock
shll
jecxz
add
icebp
pop
ret
pop
or
jo
xor
add
xor
mov
in
cld
ss
sbb
sub
cmp
dec
pop
push
insb
inc
jl
mov
mov
in
cld
ss
sbb
sub
cmp
dec
pop
push
insb
inc
jl
mov
pushf
push
lods
xchg
in
inc
cld
ss
sbb
sub
cmp
dec
pop
push
insb
inc
jl
mov
mov
in
cld
ss
mov
sub
dec
push
les
mov
scas
in
dec
add
xor
and
cmp
arpl
xchg
jae
inc
mov
xor
add
adc
jmp
repz
xor
and
jae
arpl
xchg
jae
insl
xchg
push
mov
add
adc
cmp
jae
inc
sub
pop
scas
imul
jo
mov
add
pusha
jecxz
adc
push
inc
movsb
test
mov
nop
mov
dec
mov
cmc
clc
cmp
inc
mov
out
dec
movsb
inc
sti
mov
dec
mov
out
mov
mov
mov
scas
mov
jecxz
ret
insb
push
inc
sub
stos
and
mov
shrd
fadd
mov
jecxz
inc
mov
mov
jae
addl
and
lods
pop
scas
xorb
push
jns
mov
push
loop
int3
adc
pop
jae
mov
mov
notb
sarb
data16
sbb
jecxz
xor
imul
fwait
xchg
mov
cmpsb
xorb
inc
or
repz
repz
and
inc
subl
xchg
mov
fwait
fwait
stos
dec
mov
add
ja
xchg
jbe
add
add
repnz
add
xor
adc
xor
dec
mov
push
mov
imul
inc
sbb
lret
jno
pop
loopne
pop
ljmp
push
mov
push
xchg
push
xchg
push
out
mov
xorl
arpl
push
mov
add
adc
jecxz
repz
xor
and
jae
arpl
jae
inc
mov
mov
add
adc
jecxz
aaa
test
mov
out
outsb
fsubl
jecxz
testl
mov
mov
xor
and
jmp
adc
aaa
insb
xchg
push
in
cmpsl
loope
out
sarl
sub
pop
ja
ds
pop
cmp
leave
sbb
into
jb
push
and
jno
nop
aam
sub
shr
dec
mov
xor
shrb
and
xchg
xchg
ret
jecxz
pop
lret
lcall
loopew
pop
cmp
cmc
repnz
jp
push
adc
out
out
push
shl
cmovbe
ljmp
fistps
clc
mov
andb
mov
leave
and
call
pop
insb
out
lods
enter
in
movsl
out
ret
pop
lods
ja
inc
mov
push
inc
fcoml
stos
mov
dec
jns
jae
repnz
pusha
call
test
fildl
mov
jnp
adc
pushf
data16
mov
xor
movb
or
add
xchg
test
orl
std
enter
ret
adc
dec
es
pop
push
stc
xchg
sub
leave
scas
repnz
pop
aam
popf
fldcw
push
mov
mov
cld
pop
sub
fimull
cld
jns
out
sbb
jnp
out
adc
sti
aaa
aas
into
pop
cmc
xor
dec
xor
dec
rcrl
lea
jno
enter
xor
mov
xchg
and
push
add
int
push
mov
shrb
add
push
shl
and
fdivr
pop
aam
aaa
jnp
mov
sti
mov
or
mov
adc
shl
adcl
fs
aaa
xor
incl
mov
icebp
stc
push
push
aam
pop
jnp
and
pop
push
mov
sub
dec
push
js
das
movsl
cwtl
ss
add
call
cs
aas
popa
push
cld
mov
mov
fstpl
or
xor
pop
sbb
mov
pop
into
jecxz
dec
fwait
aam
loopne
out
pushf
call
mov
ds
int
xor
cmp
imul
cld
stos
in
and
sbb
mov
jne
add
in
sub
leave
push
xor
insl
xor
cmp
or
jns
lret
xchg
test
mov
push
push
mov
dec
mov
insb
cltd
mov
or
dec
adc
push
xchg
std
pop
xchg
out
sub
aam
pop
outsb
fstps
popf
xlat
aam
js
mov
cmp
daa
xchg
mov
in
pop
ss
xor
mov
imul
pop
xchg
cmp
jmp
lods
pop
mov
fdiv
cwtl
fidivs
aaa
int
repz
pusha
push
es
jg
jp
icebp
jp
pop
mov
test
aaa
sbb
sbb
lea
lock
sub
xchg
or
hlt
stos
rcr
mov
sbb
fisttpll
adc
sub
pop
inc
gs
sbb
add
imul
stos
mov
negb
pushf
lods
adc
in
scas
jle
jno,pn
jno
ret
jecxz
fidivrs
fiaddl
jl
inc
iret
and
lea
ret
icebp
inc
cmp
lahf
bound
popf
je
loope
mov
cmp
loopne
outsb
cmc
jge
lea
mov
in
fldenv
xor
in
push
lcall
cwtl
jae
add
stos
out
add
fidivs
push
daa
push
xor
xor
xchg
lock
ja
sti
add
int
hlt
popf
and
mov
ficoms
inc
mov
stos
jo
sbb
insl
loopne
dec
sub
adc
mov
push
jbe
outsl
adc
push
or
cmp
cs
rorb
adcl
jne
dec
mov
xlat
xchg
jns
testb
loope
pop
rcrb
add
repz
push
pop
mov
insl
enter
push
cmp
mov
jl
xor
daa
jmp
mov
dec
sub
hlt
mov
adc
cmpsl
rorb
addb
push
xor
mov
sub
or
inc
cmpsb
sbbb
clc
std
and
xor
jg
out
ret
notb
sub
imul
add
mov
and
push
imul
idivb
lret
and
pop
mov
pop
sub
dec
pushf
xchg
or
xorl
sbb
js
jl
out
jle
jmp
mov
mov
out
icebp
fsubrl
aam
pop
in
xchg
out
stos
pop
or
es
and
lea
js
xchg
loop
inc
jo
push
or
dec
push
mov
cmp
in
jae
mov
aam
pop
jecxz
lea
inc
adc
ljmp
shufps
test
xchg
inc
pop
and
jno
xchg
xlat
daa
pop
adcl
stos
cwtl
dec
xor
push
sahf
in
and
cwtl
and
add
cld
js
push
push
lahf
aas
ror
lock
and
jge
stos
or
fcoms
pop
jo
pushf
out
inc
push
xchg
negl
inc
or
lahf
stos
std
mov
mov
pop
call
sbb
cwtl
jns
mov
pop
sub
ret
sub
mov
xlat
and
clc
dec
push
icebp
mov
pop
imul
lods
je
pop
lods
cmp
pop
fisttpl
test
cld
dec
pop
xor
mov
and
in
rcll
mov
hlt
push
nop
jecxz
xor
mov
mov
and
jg
nop
outsl
stc
adc
inc
pop
and
mov
dec
iret
filds
inc
jmp
mov
scas
out
in
lea
or
testb
out
dec
das
pop
ret
enter
xchg
add
out
inc
cli
mov
sbb
popa
mov
popa
frstor
xchg
mov
stc
out
xchg
jbe
adc
xor
pop
movb
dec
or
daa
loopew
sti
ljmp
add
out
decl
leave
push
std
out
jno
out
add
mov
xor
aaa
insb
xchg
and
xchg
and
inc
cmc
shll
cmp
or
jne
sub
cmpsb
in
or
push
icebp
mov
ret
sbb
call
xlat
push
xor
mulb
xlat
fs
pop
lcall
sar
mov
in
cmp
jo
ss
jl
mov
adc
push
lock
and
insl
icebp
loopne
ljmp
mov
imul
cmpsb
fnstcw
xor
cmp
add
fadds
mov
fisubrl
ficomps
outsb
cld
sub
inc
jae
popf
mov
dec
and
in
in
ss
imul
pop
or
mov
and
repz
or
hlt
inc
test
idivl
dec
ror
hlt
mov
xchg
int
mov
sbb
cmp
push
jno
jmp
into
push
loopne
icebp
or
rorb
mov
or
aam
push
jge
jecxz
lcall
icebp
nop
inc
xorb
xor
scas
clc
mov
mov
pop
aam
inc
adc
cld
or
mov
test
leave
inc
inc
jp
loop
insb
test
sub
mov
sub
mov
lock
push
or
sub
int3
sbb
std
mov
xchg
scas
ljmp
jno
or
stos
mov
sbb
cli
inc
dec
mov
int3
pop
cmp
cmp
movsb
int3
jmp
xchg
adc
call
jle
adc
mov
add
popf
push
repz
sub
gs
fistpll
movsb
pop
xchg
test
mull
sub
imul
outsl
push
sub
movsb
out
clc
ja
mov
ret
mov
add
cli
push
hlt
lock
cmp
out
in
and
shrl
mov
pop
fs
mov
iret
fimull
test
mov
cmp
inc
sbb
xor
repz
sub
add
int
jmp
lods
push
mov
mov
ret
and
imul
test
scas
or
gs
adc
sbb
cmpsl
cmp
xchg
sbb
js
movsb
ss
rcll
std
loope
sbb
int3
fistpll
adcb
andb
jno
xor
pop
loop
cmp
and
sub
daa
inc
cmp
mov
gs
stc
or
xchg
scas
insb
pusha
mov
or
test
pushf
leave
insl
xor
pop
rolb
xor
movsb
xlat
into
or
push
mov
jl
add
ja
or
and
rorb
push
and
sahf
jg
sub
enter
stc
je
xorl
pop
into
and
testb
inc
pop
cmpsb
std
mov
into
add
add
cmpsl
imulb
in
cltd
in
fisubl
fisttpll
xchg
sbb
and
hlt
pusha
in
daa
push
mov
mov
out
outsb
fldt
xor
mov
inc
sbb
cmp
dec
push
mov
mov
push
push
arpl
fbstp
mov
mov
lahf
mov
pop
hlt
and
xlat
push
push
inc
outsb
xchg
sbb
fs
lcall
sti
mov
aad
int3
adc
jne
push
pop
cmp
sbb
rorb
lret
sub
pop
jnp
sub
or
sub
push
or
daa
cmp
test
cmp
mov
or
ds
jmp
pop
push
pop
dec
add
cwtl
ret
sbb
xchg
bound
xor
dec
dec
lcall
repnz
add
lcall
adc
sbb
inc
pop
inc
or
xchg
lret
mov
cmp
int3
mov
insl
pop
sub
add
dec
arpl
pushf
add
or
sbb
mov
pop
cwtl
aaa
sub
adc
inc
int3
aam
cmp
je
xchg
aad
shl
jecxz
add
and
push
pop
out
jmp
ror
xor
mov
in
xchg
pop
cmc
in
shl
popf
xor
les
cld
pop
pop
int
push
sbb
push
test
je
push
mov
mov
sbbb
movsb
dec
push
gs
sbbl
add
or
int3
stos
or
addl
loope
inc
pop
insl
cmp
pop
nop
jecxz
outsb
dec
and
inc
mov
push
pop
sub
incb
sahf
push
jmp
or
leave
loope
scas
scas
hlt
sbb
cli
ficompl
jbe
fsubl
add
xchg
jb
cwtl
std
sbb
mov
or
xchg
pop
popf
sbb
aas
sbb
inc
lods
rclb
fmull
mov
rorl
mov
add
cmp
outsb
sub
push
pop
adc
pusha
xchg
xor
in
cld
xor
fiaddl
outsb
mov
enter
and
inc
popa
scas
inc
add
push
xor
xor
aaa
rcrl
aas
jle
insl
inc
cltd
jne
pop
mov
adc
lcall
les
xor
fdecstp
mov
std
ret
and
clc
cld
data16
das
cmovo
test
sbb
adc
sub
push
sbb
aam
sbb
imul
push
and
xor
sub
push
out
add
mov
out
pop
push
scas
es
sbb
cmp
js
and
or
add
aas
cwtl
xchg
movsl
inc
xchg
push
cs
dec
mov
jle
int3
pushf
repz
daa
ret
mov
xorb
fs
lret
cwtl
insb
xchg
mov
xor
mov
outsb
pop
les
out
into
or
cwtl
xor
push
test
je
and
shrl
std
push
inc
test
mov
in
dec
out
iret
cwtl
and
loop
aam
arpl
push
scas
mov
sbb
xor
add
cmpsb
mov
jg
scas
mov
mov
and
push
adc
mov
jecxz
cmp
push
mov
push
gs
adcl
ja
adc
inc
push
jnp
pop
dec
rol
jl
ss
dec
push
push
out
rolb
xchg
aaa
js
inc
gs
in
cltd
ss
sub
jns
adc
in
incb
add
cmp
jge
stc
push
mov
mov
rorl
loope
xor
inc
es
inc
movsl
out
xchg
shlb
pop
cmp
add
psrad
and
xor
scas
push
cmp
xor
sahf
ja
das
mov
and
test
rorb
shll
fcmovne
xor
mov
jge
cmp
add
nop
insl
lods
rcr
cmp
cmc
int
pop
dec
nop
dec
pop
insl
scas
fcoml
mov
pop
mov
fdivrs
mov
hlt
das
jge
jb
dec
dec
jne
mov
sub
push
fidivrl
inc
xchg
popf
add
sub
cmp
mov
popa
add
movsb
dec
fld
scas
adc
jg
push
pop
jne
pop
fbld
sub
roll
mov
js
cld
cli
jecxz
std
mov
and
aas
xor
shrb
push
mov
iret
mov
in
jno
notb
lcall
movsl
pop
push
mov
xchg
aaa
jae
stos
in
ficoml
movsl
mov
sub
std
addr16
jmp
xchg
adc
jns
or
int3
cmpsl
push
jp
inc
je
push
cli
mov
outsl
hlt
inc
pop
inc
mov
cmp
test
mov
xchg
add
sbb
xchg
sub
lret
inc
insl
jne
andl
push
scas
cmp
push
jle
in
dec
dec
jb
mov
cmp
adcb
cmp
adc
lret
mov
pushf
xchg
sbb
xor
or
and
pop
out
fwait
les
xchg
mov
arpl
ds
scas
mov
cmp
shll
push
cmpsl
lret
fs
xor
push
popa
push
pop
negb
mov
mov
jg
sbb
adc
cmp
out
das
xor
int
clc
mov
ror
xchg
push
pop
and
mov
mov
push
pop
stos
mov
popa
ja
pop
nop
mov
mov
ret
inc
je
sbb
mov
push
ss
jb
dec
test
lock
in
cmp
jns
pop
pop
mov
pop
xor
test
and
jmp
popf
pop
je
cmp
mov
inc
inc
mov
dec
xor
add
scas
movsb
fprem1
ret
jnp
sahf
das
hlt
jmp
jb
mov
cld
inc
test
es
iret
adc
sub
ja
dec
ret
inc
pop
xor
lods
xchg
aas
loop
xchg
mov
int
bound
dec
jmp
or
inc
sbb
mov
lods
push
mov
dec
stos
fisubrs
cmp
mov
hlt
sar
add
jnp
bnd
dec
xchg
mov
push
jno
mov
xor
inc
fidivrs
pop
jl
js
cs
xor
test
hlt
neg
sub
and
repnz
xlat
cmp
enter
ja
stos
outsl
xchg
mov
inc
flds
cmp
xor
stos
adc
mov
xor
mov
data16
push
sahf
fwait
negb
or
fidivrs
add
cmp
adc
pop
push
inc
inc
lock
mov
cmp
dec
adc
dec
or
sbb
jg
mov
pop
xchg
out
sub
or
pop
mov
ss
ret
mov
out
js
pop
loopne
mov
mov
add
int
aaa
call
fwait
or
cmpsb
jge
gs
outsl
jbe
scas
sbb
dec
xor
ss
loopne
xor
out
push
popa
jns
jge
add
inc
in
push
and
pop
sub
cmp
test
dec
das
adc
mov
xchg
mov
cmp
lds
test
js
push
fld
std
loop
icebp
mov
ljmp
clc
xchg
sub
gs
cmc
repnz
stc
or
jnp
enter
mov
js
mov
dec
xlat
mov
or
mov
fcomi
mov
in
mov
or
sbb
push
and
mov
adc
in
xchg
inc
sahf
cmp
mov
mov
loope
iret
ljmp
mov
jg,pt
or
mov
inc
pop
push
xor
inc
mov
fiaddl
popa
pop
les
and
mov
push
loop
call
stos
ror
icebp
push
les
push
out
xor
popf
ja
or
push
test
std
adc
scas
inc
or
sbb
enter
push
std
scas
xchg
xchg
adc
jle
sbb
mov
sahf
nop
aas
ja
pop
mov
lret
dec
push
mov
addb
mov
enter
lods
inc
inc
adc
test
fstp
and
test
dec
mov
jmp
sbb
test
adc
xchg
inc
mov
inc
and
and
cmp
xor
rorb
repnz
leave
rcll
loope
fadd
push
cmp
bound
push
arpl
add
mov
adc
sbb
stos
cs
xor
outsb
mov
inc
pop
jnp
cmp
cmp
push
int
jmp
inc
rorb
insb
cmp
jecxz
repz
sbb
out
lret
fs
lods
into
xor
enter
shr
aaa
iret
cmp
addb
push
sbb
cmpsl
scas
jo
aam
xchg
imul
fidivrl
add
call
mov
pop
fcomp
rolb
xchg
dec
arpl
scas
cmp
leave
jg
data16
rcrb
rcrl
push
sub
fwait
scas
cmpsl
sub
and
out
fnstcw
pop
fs
inc
int
rcrl
xchg
pop
or
mov
aaa
push
lcall
movsb
jae
xchg
sti
xchg
mov
jp
mov
int3
jne
in
idivb
xchg
popl
mov
fcompl
ss
adc
adc
cmp
pop
pop
popa
fcompl
mov
in
cmp
das
cmp
mov
adc
in
mov
es
jle
sbb
push
bound
pop
push
arpl
popa
xchg
cli
inc
imul
xchg
mov
gs
stos
dec
cmp
ds
daa
loopne
popa
jno
jecxz
sbb
cmc
add
push
loope
lret
rep
adc
ret
sti
cmp
mov
xchg
pop
out
inc
pop
std
jecxz
daa
jo
outsb
shrl
test
call
pop
orb
xchg
jo
ja
je
jecxz
push
std
scas
jae
inc
data16
dec
sti
sub
add
sti
sbb
shlb
lds
fimull
aaa
insb
sub
nop
aaa
and
sub
in
push
fisubs
scas
movsl
and
cmp
ret
push
xlat
outsb
in
rcrb
jne
sub
pop
inc
js
and
fwait
and
xor
xchg
xchg
push
sbb
shl
lock
stos
pop
jg
jno
mov
std
mov
adc
mov
pop
add
rorl
fsin
pop
mov
imul
pop
fldcw
std
cmp
addr16
push
rclb
repnz
repnz
clc
and
sub
mov
loop
mov
pop
insl
nop
sbb
push
addr16
sbb
icebp
cmp
jns
xchg
inc
mov
fwait
sarl
inc
or
xor
xor
push
ret
cmp
pop
test
aam
scas
fistps
xchg
push
lret
sbb
nop
adc
cmp
mov
mov
or
jl
fcoms
or
mov
jle
insl
pop
lret
add
cmp
rcrb
inc
dec
mov
into
inc
inc
lret
dec
in
lcall
daa
scas
sti
inc
scas
sti
outsb
xchg
push
aaa
cltd
test
in
adc
mov
xchg
cmp
xchg
leave
repz
push
or
ja
out
int
cmc
mov
in
mov
ja
shlb
inc
sbb
pushf
cmpsb
clc
outsb
sbbb
mov
fst
lods
push
pushf
push
cvtdq2ps
add
hlt
xor
fcoml
in
add
pop
jb
xchg
inc
mov
fadds
ret
nop
sub
xchg
int
in
push
sbb
mov
push
test
aas
scas
mov
inc
sub
enter
pushf
dec
mov
or
int3
inc
add
aas
imul
sub
clc
pop
xchg
dec
int
adcl
jo
and
popa
mov
cmc
and
sub
cwtl
mov
and
mov
jns
sub
mov
int3
lock
pop
jbe
pop
jmp
push
jle
mov
mov
cs
addl
xchg
dec
icebp
add
cmpsl
ficomps
in
xor
ret
je
mov
std
and
add
cwtl
inc
iret
and
loope
add
mov
jne
lret
xchg
cmpsl
push
add
sub
xor
ss
xchg
mov
push
add
sub
adcb
jae
pop
cmp
sub
shlb
xor
loop
cmp
mov
or
and
dec
dec
ror
sub
push
fstl
aas
lahf
pop
mov
or
push
subb
push
lea
stos
andl
fistpl
or
fdiv
test
mov
mov
leave
add
cld
push
mov
mov
jnp
jg
push
pop
sbb
mov
cld
dec
mov
scas
xchg
cmpsb
fistpl
sbb
push
mov
dec
out
movsb
pop
add
fmul
and
jae
arpl
jae
inc
mov
mov
add
adc
jecxz
repz
xor
and
jae
arpl
jae
inc
mov
mov
add
adc
jecxz
lock
xor
and
jae
arpl
jae
dec
mov
mov
pop
repnz
sti
adc
add
sti
and
jae
arpl
mov
jmp
pop
mov
sbb
sarb
popf
out
mov
or
or
jns
dec
int
or
stc
icebp
leave
dec
fldcw
sub
sbb
dec
lea
test
movsl
cltd
pop
jmp
mov
cmp
jp
aaa
out
add
aaa
fucom
sub
jmp
test
push
and
rorl
loop
imul
cmpsb
add
mov
ret
pop
fisttps
pushf
lea
int3
cmpsl
push
push
sub
cmp
adc
mov
call
sub
push
cmp
add
leave
int
std
sub
cltd
int
in
mov
movsl
jmp
mov
mov
test
adc
dec
and
int
jecxz
mov
cmp
inc
fcomps
inc
lods
sbb
popf
in
jnp
test
in
addl
ss
push
aad
jb
test
js
dec
int
pop
imull
cltd
pop
jmp
xchg
sub
cmp
popf
sbb
imul
pop
mov
jg
cmp
test
mov
lods
and
cmp
cmp
hlt
or
adc
stos
push
cld
cmp
and
xor
jmp
call
sub
mov
jnp
jp
pop
cwtl
jle
or
jge
dec
fstps
lods
cmp
imul
pop
or
stc
jge
dec
fstps
lods
cmp
imul
pop
scas
mov
pop
jo
push
inc
insl
dec
aad
jmp
aaa
loopne
enter
shrb
and
ret
mov
cmp
and
out
mov
dec
addr16
in
lods
add
pop
add
push
mov
sub
or
xchg
pop
jge
popa
popf
adc
mov
mov
orb
mov
jmp
into
ret
cmpsl
push
lret
pop
sbb
sbb
idiv
sub
xorb
cmp
imul
adc
sbb
cld
or
mov
fistps
rcrb
out
dec
scas
fxch
fmuls
push
xchg
jno
and
or
mov
lret
lcall
mov
xchg
outsl
adc
insb
sahf
sub
mov
adc
mov
call
das
cmp
shlb
inc
add
push
cmpb
mov
nop
bound
imul
pop
adc
call
mov
jnp
push
adc
mov
xorb
or
aad
xchg
ljmp
sbb
and
pop
mov
or
cmpsb
sbb
push
and
in
les
ret
repnz
lahf
push
pushf
xor
lcall
shrb
js
shrl
sar
adc
aas
jecxz
fistl
clc
xchg
push
movsl
inc
cmp
sbb
mov
mov
fwait
dec
cmc
adc
scas
mov
lahf
lds
push
jmp
xchg
fidivrl
xor
js
sbb
xchg
sbb
xchg
jle
and
pop
and
mov
pusha
inc
and
mov
push
mov
add
sarl
add
xor
inc
in
and
xchg
dec
adc
xchg
xor
lret
or
popf
stos
ds
and
sti
clc
lret
fimuls
mov
xchg
loope
and
pushf
movsl
mov
jmp
aas
xor
or
and
stc
xchg
mov
sub
fcomi
ret
pusha
addb
inc
sub
mov
mov
mov
xchg
mov
in
sub
arpl
mov
lods
les
mov
es
and
mov
lahf
mov
lock
shlb
and
aad
pushf
aaa
stos
mov
adcb
repnz
test
add
js
pop
sub
adc
movsl
in
add
mov
cmp
xor
int3
mov
and
outsb
cmp
movsl
sbbl
dec
jmp
imul
jnp
or
sbbl
insb
filds
cmp
ja
cmp
outsb
jg
out
xchg
xchg
mov
sbb
dec
cltd
das
xchg
xlat
jmp
pop
add
add
lea
dec
sub
out
or
or
mov
jb
pusha
popf
loop
loop
std
in
imul
sub
add
jg
addb
jecxz
mov
inc
pop
enter
jmp
mov
xor
jl
xor
movsb
cld
dec
inc
mov
mov
pop
test
cmp
sbb
data16
xchg
sub
pop
mov
lods
jns
pop
je
out
or
scas
xchg
inc
addr16
mov
jnp
out
mov
cmp
shl
xchg
test
into
hlt
push
pushf
icebp
jecxz
out
lods
adc
sbb
xchg
adc
call
adc
mov
ss
cmp
fwait
jecxz
leave
mov
leave
aas
movsb
push
data16
mov
fcoms
xor
stos
repz
add
xor
xchg
mov
popf
into
pushf
mov
orb
mov
out
insb
test
ljmp
aas
std
adc
adc
jae
popa
les
cli
lahf
imul
pop
mov
int3
jmp
pop
test
lds
into
xchg
ss
cmp
ja
sti
mov
fisttps
mov
movsl
xchg
push
lock
xor
dec
mov
cltd
out
sub
mov
xchg
pop
push
andl
int3
lods
cmp
test
fs
xor
dec
fwait
loopne
test
lcall
jmp
test
cmp
pushf
mov
adc
in
xchg
inc
subl
add
cs
in
pushf
inc
or
lods
push
xchg
add
cmc
mov
mov
cmovbe
pop
clc
push
fsubrl
ret
mov
push
jo
xlat
dec
cltd
mov
lret
adc
xchg
stc
xchg
sbb
mov
enter
sub
daa
icebp
push
xchg
in
je
test
fists
inc
andl
pop
rcrb
cmc
cmp
ljmp
dec
jmp
mov
mov
outsl
js
sbb
fsubs
mov
loopne
inc
inc
sbb
fsub
pop
mov
mov
jle
aas
hlt
jmp
sahf
sahf
les
lods
pop
leave
ss
mov
popf
and
dec
andl
mov
pop
scas
inc
aad
mov
mov
adc
movsb
and
in
nop
jp
rcrb
out
sbb
cmpl
dec
gs
cld
ja
pop
int
add
pop
orb
outsb
dec
add
pop
adc
sbb
pop
xchg
jmp
ljmp
out
popf
xchg
jge
fldz
dec
nop
mov
xchg
add
mov
sahf
sbb
jle
ret
lods
push
int
scas
jae
inc
shrl
mov
rol
pusha
add
les
pushf
and
das
push
cwtl
popa
fmuls
sub
mov
out
repz
ljmp
mov
shl
push
or
xchg
cwtl
sti
ja
push
inc
lock
rcll
xor
pop
data16
nop
sub
popa
adc
lods
and
scas
pop
dec
mov
cmp
add
xchg
jp
pop
mov
add
dec
add
sti
mov
iret
jmp
xchg
jmp
mov
sti
push
gs
js
dec
dec
int3
dec
gs
out
imul
out
leave
jns
mov
inc
rorl
mov
scas
mov
jmp
xchg
imul
xchg
sbb
mov
sti
push
adc
in
ljmp
inc
repnz
add
ss
jecxz
jmp
pusha
js
sub
jg
rcll
cmp
adc
mov
aad
xchg
shr
sub
std
jmp
leave
mov
and
js
dec
jge
mov
push
adc
mov
ret
outsb
lea
mov
push
mov
clc
cmc
std
add
outsl
cs
or
daa
loope
mov
xchg
popf
mov
mov
xchg
in
test
into
lods
sbb
icebp
sub
or
fdivr
daa
push
fs
xor
clc
adc
fs
mov
cmp
ja
xchg
sbb
popa
push
jbe
add
jne
mov
adc
in
lods
or
mov
sbb
xchg
mov
xchg
add
xchg
pop
setbe
ljmp
jo
enter
fidivrl
hlt
mov
rorb
clc
jp
pusha
sbb
and
lock
sub
loope
inc
into
add
mov
cmpsl
movsl
add
pop
inc
push
xchg
hlt
das
sub
xchg
nop
sub
roll
jnp
sbb
inc
int
sbb
cmpsb
mov
jmp
dec
test
shrl
cmp
jb
shlb
jae
mov
dec
pop
pop
aam
adc
adc
xchg
scas
cld
cmp
mov
sub
adc
cwtl
jle
or
mov
sbb
lods
mov
hlt
cmp
pop
mov
aam
cmpsl
or
mov
stc
xor
std
jo
xchg
cwtl
jmp
pop
je
ss
ss
add
push
jg
jno
add
push
data16
jle
xlat
outsb
or
add
test
mov
mov
jg
xchg
int
dec
into
or
call
xchg
mov
sub
dec
adc
and
iret
add
jns
loop
mov
sub
inc
mov
imul
loop
push
cmp
xchg
jge
fsubl
sbb
mov
sub
stc
stc
scas
flds
push
aas
push
inc
xchg
addr16
adc
es
mov
cwtl
push
popa
mov
dec
push
and
test
xchg
out
in
lea
and
lods
push
add
dec
sbb
int
cmpsl
pop
sub
mov
dec
lret
and
dec
lds
hlt
fbld
and
cmp
pushf
ds
push
repnz
cmp
adc
pop
inc
pop
add
aam
cmpsb
sbb
scas
cmp
movl
cmc
push
jg
pop
addr16
push
mov
out
xchg
mov
push
xor
imul
push
ret
jg
mov
jnp
mov
add
fbld
xchg
aam
lcall
dec
fcoms
mov
mov
pop
hlt
aam
mov
ljmp
jge
lods
sub
lret
test
in
sbb
xor
popa
jmp
in
subl
clc
xchg
fsubrp
or
push
ror
jb
cltd
into
loope
inc
xchg
mov
cs
stos
std
xchg
in
or
outsb
xchg
jne
loop
test
pop
jae
lret
fstps
aaa
adc
push
int3
stc
cwtl
mov
jo
sbb
imul
push
test
xchg
lret
sub
cmpb
psllw
mov
dec
push
or
cmpsb
cmp
lock
push
popf
and
dec
les
and
mov
pop
out
in
sbb
sbbb
test
inc
clc
testl
inc
test
out
or
arpl
xchg
mov
add
in
mov
mov
xchg
mov
cmp
xchg
push
std
cmc
movsl
xor
push
test
xor
test
repnz
call
fcomps
mov
mov
pop
out
leave
jb
xchg
pop
rcrl
jge
adc
cmc
cmpsb
shlb
add
jge
das
test
mov
rcr
jg
mov
push
sti
lea
add
xlat
and
stos
out
lock
cmp
repnz
jbe
hlt
in
push
adc
stos
dec
jbe
cltd
loopne
sub
stos
int
mov
lods
add
jb
push
cmp
mov
out
or
lahf
out
mov
sbb
xchg
repz
hlt
stc
in
loop
and
jo
jecxz
jns
rcll
leave
hlt
lds
in
repnz
nop
jns
js
js
sub
nop
push
sub
cmp
adc
xchg
imul
sbbl
dec
push
mov
sub
dec
js
loop
fs
jnp
and
and
rclb
xchg
jno
sbb
dec
gs
scas
pop
jns
fcmovu
ljmp
sti
arpl
in
push
scas
jne
flds
sub
pop
cmp
push
push
jle
cwtl
pop
enter
or
test
sbb
shrl
inc
cli
lock
push
mov
outsl
jne
aad
sbb
aas
ficoml
and
sti
loope
imul
cmpsb
loopne
aad
sub
push
int3
daa
xchg
xchg
fldt
xor
and
jae
data16
movsb
xlat
add
or
imul
in
jl
cmp
mov
xor
ja
pushf
pop
mov
push
ljmp
hlt
mov
jae
lock
lahf
xchg
lods
ds
inc
mov
loop
shrb
into
adc
call
dec
in
ret
push
jmp
movsl
push
sti
inc
sbbb
jo
jmp
int3
xchg
adc
fisttpll
push
jb
jno
inc
sbb
stc
sbb
in
sub
test
aas
incl
fsubrl
popf
je
xchg
js
sti
adc
push
push
adc
or
mov
dec
sbb
scas
add
mov
xchg
xorl
lcall
adc
pushf
mov
and
adc
ja
cmpsl
rcrl
ja
add
ret
aaa
out
sub
je
std
jae
cmp
iret
xchg
or
push
insb
and
flds
add
cmp
mov
xor
clc
mul
inc
data16
aas
adc
addr16
frstor
mov
xor
pop
rclb
xor
push
pusha
mov
fstpt
and
xor
shrb
jmp
ljmp
pop
jecxz
xor
xor
mov
or
sub
xor
add
cmpl
jge
popf
aaa
call
mov
pop
shll
push
ret
push
mov
sti
mov
push
pop
ret
nop
jge
ds
inc
clc
and
sbb
dec
call
icebp
pop
sbb
sub
xchg
jp
push
jge
es
popa
xor
gs
iret
fcmovbe
jnp
js
push
jp
iret
cld
stos
mov
jmp
cmp
fldcw
push
ljmp
loop
and
ljmp
fsubrp
cmpsl
gs
jecxz
dec
sbb
in
push
pop
mov
cmpsl
adc
adc
iret
sti
lock
cmp
fldz
add
loop
push
mov
enter
nop
adc
int3
mov
add
pand
stc
push
fs
xchg
xor
or
test
xor
inc
lods
movsl
adc
pop
imul
iret
pusha
loope
out
test
push
scas
xchg
mov
dec
rol
out
xor
add
in
scas
push
pushf
push
push
das
test
lea
xchg
repnz
bound
filds
movsb
das
add
lcall
iret
xlat
dec
andl
nop
dec
xchg
adc
adc
mov
or
stos
xor
cld
es
test
ljmp
adc
inc
ret
aaa
pop
jg
test
pop
dec
js
lods
dec
xlat
ja
push
sbb
lds
sarb
stos
jmp
fisubl
fdivrl
jge
insl
mov
push
cmp
test
jmp
and
test
cmp
jecxz
jl
daa
xchg
xchg
lret
or
in
iret
and
mov
jmp
das
andb
adc
mov
insl
pop
dec
cld
loopne
adc
push
mov
jge
test
dec
pop
call
aad
lods
push
fiaddl
in
and
orb
sbb
roll
std
dec
iret
push
cmp
pop
int
inc
repz
aad
dec
mov
xchg
out
aam
xchg
xor
in
ss
cmpsl
xchg
stos
dec
test
mov
test
inc
fdivrs
js
das
or
fldt
lea
cld
dec
jns
rcrb
sub
out
repnz
inc
adc
in
cmp
inc
jne
xchg
push
je
mov
and
mov
fwait
inc
js
dec
xchg
cli
out
and
mov
enter
or
sub
fisubrl
xor
mov
es
loop
inc
rclb
pop
push
sbb
dec
unpckhps
jne
cmp
adc
testb
cmpsb
rcll
dec
xchg
jl
inc
jo
insl
fxch
sbb
sub
mov
xchg
pop
mov
fwait
add
enter
inc
mov
shrb
jo
gs
inc
or
sub
and
test
inc
fidivrs
aam
mov
jns
inc
fbld
xchg
je
dec
xchg
dec
lock
sub
lahf
dec
mov
test
rorb
push
cmovae
mov
cmpsl
mov
mov
loop
add
call
scas
loope
mov
dec
sub
sbb
repnz
movsb
test
mov
fistpl
mov
movsl
cmc
dec
push
xchg
pop
cmp
sub
fcompl
and
out
sbb
push
mov
xor
gs
iret
inc
out
jmp
aaa
rorb
mov
adc
cld
enter
pop
and
pop
cmpsl
ret
jge
jecxz
pop
enter
or
mov
sar
scas
mov
jne
push
push
rcll
js
cs
jge
iret
cmp
jb
jmp
jae
mov
inc
in
and
pop
jmp
dec
or
cltd
dec
fiaddl
mov
inc
lock
dec
sub
arpl
push
in
pop
pusha
enter
xchg
cmpsb
sbb
adc
dec
mov
add
je
cmp
and
ss
test
stos
pop
lock
pop
shrb
lret
ljmp
int
xchg
repz
enter
dec
rcrb
sub
int
mov
scas
jbe
hlt
jno
cmp
scas
mov
divl
adc
pop
push
call
sbb
xchg
cld
inc
mov
pop
sub
mov
ficompl
dec
push
daa
popf
and
push
pop
sub
push
mov
bound
cld
out
sbb
xchg
test
repz
cwtl
mov
sahf
mov
pushf
iret
sbb
dec
xbegin
push
sub
les
decl
mov
dec
xchg
out
xchg
and
jno
push
daa
dec
pop
xorl
lock
fcompl
outsl
xchg
pop
or
sub
filds
lahf
jae
hlt
jo
fdiv
xchg
mov
pop
and
add
inc
jmp
xchg
popf
aam
cmp
in
js
mov
repnz
or
mov
and
icebp
psubusb
xchg
cmp
fdivrl
fnstcw
int3
loope
jg
shll
push
pop
mov
add
adc
ss
in
imul
movsb
dec
repnz
jbe
scas
ret
cwtl
jno
sbb
push
mov
test
out
inc
loop
ljmp
and
xacquire
cmp
dec
dec
push
lock
das
push
das
pop
mov
jae
sbb
push
out
or
cs
dec
jp
sbb
fisttps
test
test
dec
push
jo
push
push
xchg
lret
mov
mov
xor
test
fwait
jb
mov
and
mov
inc
jg
andps
sbb
or
mov
or
ja
cld
fmuls
js
testl
cmp
ficoms
movsb
and
mov
mov
test
xor
mov
imul
stos
into
xor
xor
cmpsb
js
lahf
adc
ficoms
push
xor
fsub
icebp
mov
jmp
mov
in
lock
cltd
in
xchg
mov
jbe
xor
call
pop
in
int
imul
call
icebp
sti
jne
jle
aad
iret
jg
or
xchg
insl
add
stc
push
mov
aam
and
adc
lods
cli
filds
cmp
flds
out
add
loope
dec
pop
dec
shrl
jl
mov
test
es
movsb
pop
jp
movsb
jmpw
jns
pushf
sbb
dec
dec
nop
gs
in
jno
dec
sub
nop
andb
fidivrs
mov
das
xchg
adc
sub
xor
pop
jno
or
mov
aas
lods
out
les
out
icebp
sub
in
sahf
cld
jo
shrl
mov
push
mov
mov
out
xchg
subb
xchg
mov
jb
nop
xchg
dec
aaa
and
mov
inc
add
adcl
sbb
mov
fwait
xor
sarb
pop
adc
lods
mov
sub
call
sar
sub
add
add
push
lods
mov
add
cmp
std
inc
jne
js
push
imul
aad
out
lahf
insb
cmp
mov
pop
mov
sarb
call
xchg
rcr
lcall
dec
in
and
insb
jo
pop
jl
add
lods
lret
incb
push
mov
xchg
test
inc
push
add
mov
stos
xrelease
cmp
push
cltd
es
pop
cwtl
jmp
jg
mov
mov
mov
or
sbb
cmp
inc
xor
or
mov
mov
sti
ret
cwtl
mov
std
sahf
cmp
andl
inc
xchg
sub
std
stos
fidivrl
add
cwtl
xlat
mov
pop
mov
xchg
nop
xchg
aam
dec
or
or
push
xor
push
outsb
lret
sub
jnp
xor
lahf
and
sub
fwait
lret
and
jg
popf
sti
testl
push
imul
mov
and
fdivl
lcall
push
sti
dec
incl
adc
adc
dec
aad
pop
stos
sub
popf
popa
jecxz
rolb
xchg
rorb
int
push
mov
jl
jo
andb
pop
dec
cmc
add
cmp
cmp
jmp
dec
fstps
lods
cmp
imul
pop
or
stc
jge
dec
fstps
lods
cmp
imul
pop
jne
sbb
leave
dec
fstps
jne
mov
imul
pop
or
stc
jge
int
pop
sub
pop
mov
gs
add
cmp
fimuls
cld
push
xchg
dec
outsl
mov
pop
lea
std
cmp
push
fstpl
int
cmp
fimuls
mov
dec
jle
jle
dec
popf
push
lea
std
push
in
push
fstpl
int
cmp
or
xchg
pop
sahf
dec
ja
pop
icebp
adc
lea
scas
push
mov
dec
int
cmp
test
std
mov
pop
scas
call
popf
push
fisubl
cli
aas
xor
outsl
xor
xchg
or
inc
jmp
push
int
popf
mov
pushw
fucom
xor
sub
sti
cmp
sub
out
pop
pop
int3
cmp
push
jbe
rorl
std
ret
and
int3
out
ret
pop
sbb
sbb
mov
sbb
jnp
mov
mov
mov
lret
ds
jge
xchg
ret
mov
mov
mov
icebp
fmull
popf
push
mov
and
mov
outsb
jge
xchg
enter
mov
imul
sbb
enter
cmp
fimuls
mov
dec
ja
lods
push
popf
inc
lea
std
es
adc
push
mov
pop
stos
dec
fstl
fsubrs
cmp
les
nop
pop
xchg
jl
jae
cmpl
ret
inc
mov
int
sub
lret
pop
loope
xchg
push
cmpb
mov
mov
adc
dec
outsb
mov
pop
lea
std
ds
push
fstpl
int
cmp
fimuls
mov
dec
outsb
mov
pop
lea
std
ds
push
fstpl
int
cmp
lods
fadd
mov
pop
xor
imul
sub
call
into
sub
sahf
mov
cld
push
addr16
int
mov
pushf
sbb
cmp
sbb
jb
or
add
sti
inc
or
clc
inc
inc
fisubl
scas
jl
cld
bound
or
mov
mov
stos
mov
push
leave
pop
imul
rcrb
pusha
mov
or
push
lea
mov
rcrb
adc
jno
adc
iret
bound
sub
mov
jae
adc
fxtract
pop
int
add
mov
add
xor
test
in
mov
pop
in
cmp
popf
push
jg
shrl
jb
ss
es
ret
out
cmp
icebp
les
imul
mov
imul
mov
int3
sbb
int
cmpsb
shll
int
inc
daa
sub
mov
ficompl
sbb
xor
rorl
inc
pop
hlt
and
add
repz
loope
cmpsb
lret
lcall
addr16
jge
fxch
sub
push
jbe
cmpsb
in
mov
in
mov
cmp
dec
icebp
add
clc
and
add
xor
fsub
movb
xor
fwait
mov
in
jg
dec
add
orl
les
or
adcb
bound
dec
jbe
jecxz
subl
inc
and
sub
shll
ss
add
and
jns
jmp
cmp
and
adc
pop
cmp
add
outsl
xchg
fwait
sub
xlat
in
add
repnz
and
mov
into
lods
xor
cmp
arpl
dec
cmp
mov
jo
fwait
popa
mul
and
push
insb
push
jb
test
mov
mov
sub
sbb
inc
dec
leave
mov
insl
xchg
call
mov
cltd
jg
lahf
mov
out
das
jle
cltd
aam
ss
out
sbbl
mov
inc
jb
jnp
lock
std
jl
xchg
or
xchg
enter
sbb
std
sub
popl
pop
xchg
bound
pop
psrlq
test
cld
mov
xor
popa
insl
addr16
fistl
out
mov
xor
test
out
lods
pop
pop
cmp
mov
lcall
xchg
into
xor
xchg
add
push
push
adc
gs
mov
mov
das
arpl
andb
push
out
jge
pushf
repz
mov
sahf
jmp
sub
and
pop
mov
adc
in
cld
out
gs
push
pop
lods
jae
gs
ret
repnz
mov
dec
pop
mov
jne
faddp
std
sahf
sbb
dec
fisubrl
in
sub
test
rolb
js
movsl
imulb
inc
aas
jnp
outsb
cmp
ret
orl
adc
into
inc
daa
dec
cmp
pop
xchg
sbb
pop
loopne
movsl
std
outsb
in
das
popf
sbb
imul
aad
push
mov
dec
inc
fwait
lds
dec
add
cmpsb
xor
in
push
adc
popl
jns
cmpsb
adc
stos
insb
insl
push
xor
sbb
jbe
pop
fcomi
pop
jnp
repnz
enter
add
clc
adc
cli
test
lahf
adc
ds
sbb
push
pop
rclb
dec
push
cmp
mov
pop
mov
jecxz
pop
in
push
loope
cs
hlt
movb
data16
xor
jo
xchg
jge
sub
cmp
lods
test
aad
pop
mov
leave
sub
xchg
sahf
aad
aaa
fisttpl
mov
int
jbe
inc
jne
loopne
stc
out
and
jae
fcmove
and
adc
dec
sbb
pusha
and
cmp
jg
insl
ja
xor
int
out
sbb
jns
ret
xor
les
aaa
mov
mov
lret
pop
push
outsl
leave
rolb
mov
je
int3
mov
hlt
mov
xchg
push
out
lods
repz
push
push
popa
jl
aam
int
dec
adc
ja
cmp
xchg
sbb
jae
pop
aam
mov
mov
sbb
and
rcll
pop
in
insb
js
jge
sahf
mov
adc
mov
adc
xchg
sbb
lret
sbb
stos
mov
mov
sub
adc
clc
xchg
xchg
mov
loop
mov
rcrb
cmp
call
shlb
lea
and
ljmp
xor
lcall
mov
repnz
inc
sbb
mov
test
mov
inc
dec
int3
outsl
push
or
push
sti
sub
in
fwait
iret
cmp
aam
push
imul
xor
sbb
or
pop
mov
cmp
mov
cwtl
push
aad
adc
mov
sbb
test
int
cmpsb
repnz
ret
push
cmp
jnp
jp
imul
addr16
xor
mov
js
add
pop
mov
or
dec
aam
mov
or
xor
add
add
mov
bound
test
sbb
repz
mov
cwtl
or
jl
stos
je
sbb
mov
ds
inc
inc
mov
mov
fcmovu
daa
push
insl
arpl
insl
sti
aas
aam
sarb
pop
test
push
mov
push
xor
dec
xchg
lock
cltd
mov
and
push
loopne
cmp
je
inc
xacquire
mov
fs
shrb
mov
fsub
stos
outsb
aam
lret
ficomps
arpl
jae
shl
xchg
idivb
jecxz
andb
xlat
and
shrd
xor
outsl
xor
jo
in
adc
rcll
cmpsl
jg
jp
jnp
js
cmc
inc
bt
mov
push
cld
mov
cmp
jge
in
jo
enter
outsl
mov
xchg
repz
inc
ss
or
dec
xchg
int
mov
or
xchg
sub
sbb
push
push
xor
addb
push
ljmp
mov
push
mov
cmc
push
mov
mov
add
adc
and
inc
or
push
inc
sub
call
pop
mov
je
mov
lcall
ss
mov
xchg
jge
mov
movsb
xchg
add
dec
js
fcmovnbe
cli
cli
add
addb
in
call
and
gs
mov
test
xor
adcb
scas
nop
dec
mov
stos
inc
cmp
fs
popa
jno
daa
mov
into
or
ja
pop
cmp
mov
sub
stos
nop
shlb
mov
imul
adc
rcrl
loopne
xor
ret
test
cltd
idivb
xchg
mov
lahf
icebp
movsl
xor
and
cmpsl
mov
adc
clc
lods
lcall
xchg
mov
fdivrl
mov
sub
rcrb
dec
sbb
std
test
cmp
jp
inc
cwtl
hlt
mov
dec
push
push
jmp
scas
loope
mov
gs
cmp
and
sbb
or
pop
sbb
fidivs
fisubs
cmpsl
cmp
xchg
inc
xor
push
loopne
mov
jb
or
pop
cltd
sbb
mov
push
and
mov
jg
jle
ljmp
leave
imul
mov
cs
lods
push
xchg
pop
and
mov
add
ss
fbstp
jns
mov
call
lea
sarb
sub
std
xchg
pop
ljmp
iret
cs
nop
shrl
push
sub
in
xor
fists
cli
test
arpl
xor
mov
das
fsubs
jle
mov
mov
cmp
js
pop
cmp
test
addr16
loope
clc
adc
fchs
fsubs
daa
mov
push
test
dec
mov
xlat
add
and
inc
push
push
repz
push
gs
pop
icebp
outsl
jle
popf
pop
movsb
in
ret
stos
add
inc
cli
sbbl
stc
push
pop
pop
and
mov
ret
movsb
xchg
xchg
dec
popf
mov
cwtl
icebp
mov
arpl
jecxz
iret
out
popa
scas
sub
fisttps
mov
iret
jmp
ljmp
in
sti
xor
shll
cmp
lods
jmp
add
aas
inc
cmp
xchg
es
mov
mov
or
mov
mov
imul
mov
rcll
or
hlt
mov
push
fwait
mov
jle
mov
mov
arpl
sbb
rcl
sub
fs
ficoml
ds
adc
mov
xchg
jo
clc
sub
xor
adcl
dec
in
into
jle
inc
scas
jo
mov
xchg
add
movsb
xor
mov
sbb
fstps
out
mov
insb
and
cmp
lret
mov
out
ljmp
shl
repnz
mov
add
jbe
int
fcmovnu
sbb
sahf
pusha
xor
pop
dec
cmp
pop
add
push
lods
push
push
or
aad
aas
mov
sbb
shrb
mov
push
cmpsb
push
fsubrs
sub
jo
xor
icebp
leave
cwtl
enter
adc
xor
insl
addr16
fucomp
cmpsb
xchg
scas
out
repz
jbe
mov
or
shll
and
mov
pop
dec
les
out
cs
lret
xor
cmp
xchg
fstpl
jecxz
repz
dec
mov
pusha
pop
jno
lahf
and
pop
sti
test
jg
xchg
aas
dec
outsb
jg
rclb
filds
xor
lea
mov
out
pop
sarb
jp
popa
ja
adc
add
ficomps
inc
mov
and
pop
aad
shll
mov
adc
mov
pop
das
adc
fisubs
cmp
int3
call
pop
fidivs
frstor
je
test
aas
test
aad
pop
les
add
dec
cmp
jne
adc
out
mov
inc
xor
in
xor
push
lahf
inc
ror
add
loop
adcl
or
stos
cltd
xor
aas
xchg
data16
aaa
nop
cmp
out
daa
jecxz
adc
ror
fisubrl
in
bound
andb
mov
add
fsubs
xor
xchg
vmovapd
pop
into
cmp
or
in
push
rcll
test
pop
sub
stos
lret
or
mov
dec
ret
pop
insl
mov
mov
mov
in
xchg
mov
xor
hlt
pop
ret
pushf
jnp
or
pop
cltd
mov
lret
fwait
dec
arpl
lret
jle
push
popf
dec
adc
clc
mov
sti
mov
call
jp
jge
pop
in
or
ficomps
addr16
daa
dec
pusha
push
adc
mov
cmp
imul
cmp
cmp
sub
fldenv
scas
inc
fwait
ds
mov
add
dec
inc
mov
out
andl
jae
sub
imul
int
push
push
fcoml
adcl
xchg
std
pop
clc
shll
push
cltd
mov
mov
lds
popf
push
mov
into
lahf
mov
jecxz
out
dec
ljmp
adc
cld
pushf
mov
fnstcw
aad
jmp
mov
xor
repnz
mov
cltd
imul
xor
inc
xorb
int3
sub
dec
lods
sahf
dec
mov
enter
aam
sbbb
repnz
sbb
inc
inc
std
push
mov
int3
mov
sysret
stos
fs
ja
cmp
aam
clc
dec
lahf
dec
mov
pop
mov
outsl
repnz
push
scas
std
lea
or
shlb
pop
xchg
stos
xlat
xor
lods
loopne
sub
movsb
shrb
enter
pop
xlat
mov
jmp
cmpl
cltd
push
xchg
comiss
outsb
cltd
sbb
sub
and
icebp
int
adc
push
jle,pn
ds
inc
ds
int3
out
sub
inc
xchg
mov
or
movsl
adc
mov
notl
cltd
xor
and
lods
lods
in
and
pop
lods
xchg
cmp
leave
pop
ret
sbb
mov
mov
fiaddl
outsb
outsl
loope
aas
push
daa
mov
and
mov
icebp
xchg
es
shlb
push
pop
clc
enter
addl
lcall
jbe
dec
sub
mov
fnstsw
mov
lret
mov
test
dec
mov
pushf
adc
ljmp
sahf
ss
ja
and
inc
cmp
test
push
mov
xchg
push
aas
inc
ret
mov
inc
loopne
lret
pop
cmp
cltd
ret
dec
and
pop
mov
adc
pop
sub
push
mov
jg
movsb
fstps
sbbl
jmp
das
sbb
or
repnz
je
jno
push
push
jb
mov
addl
jno
cmp
cmp
fstpt
push
or
call
js
mov
pop
and
adc
mov
dec
inc
or
or
adc
and
shlb
jl
adc
xor
push
cmpsb
icebp
addb
cmpsl
movsl
pushf
in
jne
pusha
mov
jge
mov
pop
add
or
ja
in
arpl
dec
out
insb
jno
or
rclb
mov
out
xchg
icebp
or
mov
fcmove
in
nop
mov
insl
adc
push
mov
inc
mov
mov
test
scas
stc
nop
mov
movsb
sbb
insl
fisttps
push
fimull
dec
mov
in
mov
and
xor
sti
orb
movsb
ds
mov
inc
adc
shl
mov
lods
out
adc
xlat
or
stos
incl
out
lock
insl
adc
xor
loopne
in
cltd
or
in
dec
call
sti
inc
jmp
xchg
mov
arpl
mov
mov
pop
pop
bound
stos
int3
mov
xor
mov
js
lahf
pop
movsl
push
int3
shll
xadd
nop
or
loopne
pop
xor
es
icebp
leave
or
leave
dec
xor
jg
mov
lcall
xor
inc
inc
or
leave
mov
out
inc
inc
add
adc
dec
gs
cmp
sub
call
enter
fsts
and
ds
ret
dec
jle
ja
mov
aad
outsl
into
daa
or
dec
movsb
pushf
pop
es
out
jo
mov
dec
mov
daa
sbb
push
dec
jg
or
push
cmp
dec
inc
xchg
sbb
push
pop
push
neg
outsb
sub
outsl
lcall
xchg
mov
mov
ret
cmpsb
ds
mov
and
popa
fmul
and
jmp
movsl
bound
sub
out
xchg
sbb
adc
scas
dec
pushf
xchg
mov
shl
mov
jl
test
xor
cmp
add
mov
iret
jge
adc
loope
pop
ss
inc
sbb
xor
or
mov
xchg
pop
xchg
gs
enter
icebp
push
push
sti
aam
inc
jns
mov
nop
mov
aas
pop
inc
sbb
xchg
xchg
xchg
xchg
and
xlat
sti
gs
in
rol
outsl
mov
mov
jns
mov
dec
mov
and
loope
jbe
cmp
roll
pop
jnp
sbb
add
repz
inc
jno
outsl
shrl
dec
popf
push
pop
outsb
test
fnstenv
aas
lea
test
add
jnp
push
mov
xor
push
pop
cmc
push
jns
push
sbb
in
mov
xor
jmp
push
icebp
iret
mov
fisubrs
adc
imul
pop
orb
jle
and
in
adc
sahf
enter
ds
stos
and
dec
adc
shufps
insl
sub
adc
mov
stos
stc
in
clc
and
ljmp
mov
aaa
lcall
push
inc
int
pop
push
add
leave
pop
aas
das
bound
insl
mov
enter
jb
daa
xchg
shr
push
ljmp
sub
xor
data16
inc
inc
xor
inc
inc
out
pop
lods
inc
fstpt
ljmp
sub
ret
xorb
mov
mov
lock
sub
fnstcw
cltd
rcll
xchg
fbld
xchg
xorl
ret
mov
inc
es
das
nop
test
movsb
mov
rorb
mov
dec
aas
shll
dec
lods
xchg
imul
dec
das
xchg
or
call
or
nop
cmpsb
mov
xchg
cmp
mov
ds
mov
xchg
in
sbb
in
ss
mov
lahf
sub
mov
movswl
push
daa
test
add
jmp
xchg
stos
data16
fnstenv
testb
dec
push
fwait
xchg
es
mov
mov
or
ds
inc
pop
xchg
aaa
sbb
loop
icebp
pop
push
repnz
xchg
rclb
mov
mov
and
push
scas
out
cmpsl
js
lahf
push
aad
sbbl
xor
fbstp
adc
push
addr16
sub
insb
aas
out
sti
out
pushf
fiaddl
mov
jl
adc
call
outsl
push
out
xor
outsb
cld
sbb
std
pop
stc
cmp
cli
mov
cmpsb
aad
icebp
jbe
push
add
push
mov
cld
lea
dec
les
addb
push
sbbl
cwtl
mov
or
xchg
dec
cli
jg
pop
ja
mov
push
push
shll
mov
or
sbb
sbb
xchg
imul
mov
and
push
and
mov
clc
or
rcll
sti
xlat
out
add
add
xchg
mov
push
mov
mov
push
les
ficomps
jne
xchg
cmp
cli
xchg
fwait
or
std
fiadds
jbe
shlb
or
add
cs
pop
jo
in
mov
mov
mov
rcrl
push
cmpsl
xchg
mov
lcallw
gs
mov
out
pop
int3
fwait
jnp
mov
sub
nop
nop
push
and
pop
das
in
inc
sub
mov
sub
mov
push
xlat
aad
ret
jg
dec
dec
mov
out
lahf
lcall
mov
sbb
sti
addr16
mov
fs
mov
mov
ja
rcrb
jbe
mov
repnz
cmp
int3
pop
xor
lcall
dec
push
push
in
mov
incl
xor
cmp
lods
pop
mov
pop
adc
inc
pop
in
out
cld
add
xchg
int3
scas
xor
add
pop
repnz
movsb
lret
nop
pop
inc
fucom
sbb
or
das
xchg
cld
lock
adc
jns
and
shlb
jp
dec
or
mov
cmc
out
mov
xchg
sbb
adc
lret
sahf
nop
mov
dec
cmp
mov
hlt
mov
outsl
cmpb
mov
mov
pmuludq
sub
popl
lods
sub
iret
out
lea
inc
mov
jns
add
push
insl
adc
adc
repz
cmp
shll
inc
test
nop
or
imul
aaa
xor
cltd
mov
xor
aas
lods
mov
adcl
aas
xchg
cs
data16
out
mov
aam
cmpsb
in
test
cwtl
mov
sarb
inc
bnd
xchg
xchg
in
sbb
cli
jecxz
sub
pusha
pop
adc
int3
or
sub
jge
cltd
mov
loopne
ss
in
and
mov
daa
and
xor
cmp
ss
pop
rolb
xchg
sbb
out
arpl
push
cmp
xchg
lods
mov
xor
push
pop
xchg
addr16
daa
lcall
fdivs
mov
imul
jg
cli
leave
dec
add
push
fldenv
mov
shrb
mov
leave
in
inc
arpl
xchg
ds
lcall
inc
push
push
dec
cmpsl
mov
cmp
jmp
sbbl
rcrl
repnz
push
insb
call
push
mov
adcb
rep
into
sbb
jns
mov
adc
cmp
pop
das
or
xorl
call
in
mov
sbb
cs
pop
lods
mov
stc
in
push
and
adc
fimull
sarb
cltd
xchg
mov
lret
testb
xchg
sbb
jns
dec
fcmove
xchg
ret
and
adc
jcxz
loop
loop
cmpsb
es
pop
lock
int
dec
lret
mov
testl
mov
add
icebp
and
scas
jge
insl
mov
dec
outsb
mov
pop
lea
std
ds
push
fstpl
int
cmp
fimuls
mov
dec
outsb
mov
pop
lea
std
ds
push
fstpl
int
cmp
sub
scas
jge
insl
mov
outsb
mov
pop
lea
cld
aas
in
push
fstpl
iret
sbb
mov
mov
inc
addl
pop
jne
adc
and
xor
in
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
and
mov
dec
ffreep
enter
xchg
ja
adc
inc
jb
bound
mov
mov
repz
cmpsl
rcll
and
jb
add
aaa
arpl
push
push
inc
pop
mov
mov
repz
cmpsl
rcll
and
xor
adc
dec
jae
sub
ret
mull
xchg
js
ret
inc
sub
xorl
push
ret
imull
mov
ret
xor
pop
pop
xchg
mov
inc
lahf
fcompl
mov
lret
pop
inc
mov
cmc
pushf
and
stos
idivl
imul
mov
inc
xchg
cld
mov
shr
push
mov
fs
outsl
repz
cmpsl
xor
ret
js
lods
in
adc
xor
inc
call
pop
sbb
push
xchg
cmp
mov
mov
add
pop
mov
inc
test
xchg
daa
or
call
mov
ds
sub
sub
add
addr16
mov
and
push
add
in
mull
repz
cmpsl
rcll
and
push
add
aaa
arpl
push
pop
inc
outsb
cwtl
out
mov
xchg
pop
adc
add
push
das
push
ds
loopne
out
lret
mov
incl
xchg
dec
adc
data16
push
adc
pop
push
lds
mov
cmpsl
rcll
and
push
add
aaa
arpl
push
pop
inc
pop
mov
mov
repz
cmpsl
rcll
and
push
add
aaa
arpl
push
pop
inc
pop
mov
cmpsb
scas
push
roll
mov
xchg
jp
nop
into
pop
xorb
and
out
fmuls
cmp
clc
test
movsl
fwait
xchg
sbb
mov
test
int
xchg
scas
jmp
fcmove
xchg
sub
xor
or
sahf
inc
inc
xchg
adc
das
decl
shll
cwtl
cmp
and
xor
xchg
cltd
scas
add
repz
dec
repnz
jne
fnstsw
push
fs
dec
ljmp
sbb
xchg
div
std
out
dec
lret
sahf
insl
js
das
xlat
test
cmp
jbe
js
neg
mov
bound
push
outsl
scas
push
mov
mov
pop
push
pusha
pop
lods
dec
sbb
andb
pushf
test
cmc
scas
les
xor
push
lods
push
les
push
lods
pmulhw
cmp
sarb
jecxz
jae
and
pop
push
sbb
mov
scas
movsl
sti
and
push
test
rclb
arpl
add
lret
fildl
xchg
mov
pop
fsubrp
inc
sub
jo
jg
clc
insl
jg
mulb
sbbl
inc
xor
jle
inc
push
subb
pop
cld
out
mov
pop
mov
mov
adc
or
insb
enter
lret
loop
aam
shl
mov
insb
push
je
cmp
std
jp
push
inc
cs
xchg
shlb
lret
mov
add
xchg
lea
imul
insb
fnstenv
imul
mov
outsb
ljmp
fidivrl
pop
mov
sti
or
pushf
xlat
sub
pop
fdiv
sbb
sub
xchg
dec
rolb
inc
jo
loopne
ja
xor
dec
inc
ja
sbb
ljmp
mov
es
outsl
cld
idiv
and
daa
cli
mov
imul
add
fs
adc
jmp
xor
fiadds
mov
push
outsb
inc
mov
sub
insb
ret
ds
pop
xchg
or
out
daa
add
dec
sub
lds
mov
flds
xor
test
or
xchg
push
add
lea
popf
add
sub
div
loop
and
aam
jno
push
test
orb
jg
fldt
shlb
loope
in
iret
ss
mov
lcall
mov
in
inc
sub
sub
or
jp
xchg
fucomp
xchg
stos
repnz
adc
pop
inc
cli
lods
push
sub
mov
sti
repnz
cwtl
in
dec
mov
sti
mov
ds
insl
aaa
dec
or
idivb
cmpsb
das
dec
int
mov
jns
lahf
fwait
ljmp
dec
sbb
fists
das
push
cwtl
shrb
sti
lods
cmp
push
test
add
cmp
push
inc
mov
mov
hlt
push
dec
outsl
popf
sbb
mov
ret
fisubrs
imul
popf
out
mov
xchg
mov
or
fnstsw
or
mov
pusha
loope
sub
mov
loop
jg
jg
mov
loop
inc
mov
dec
fcompl
sbb
arpl
add
mov
shlb
call
fwait
and
imul
sbb
fldenv
fdivs
adc
push
pop
sbb
pusha
push
inc
mov
dec
or
and
xchg
aam
ds
inc
arpl
test
call
mov
stc
inc
push
aas
adc
js
inc
test
or
xchg
faddl
stos
leave
bound
xor
or
dec
xchg
mov
inc
test
daa
pop
and
or
bound
bound
push
fisttpll
stos
stc
lret
jecxz
push
iret
dec
inc
sysenter
inc
mov
and
xchg
rorb
int3
cs
pop
loope
mov
testb
mov
call
pop
jns
fistpl
imul
add
adc
cmp
nop
pushf
inc
xchg
xchg
pop
imul
movsb
iret
jmp
lret
popa
out
push
pop
fwait
and
imul
mov
shl
daa
shrb
dec
lock
in
push
mov
les
add
and
push
sbb
sti
adc
xor
je
test
dec
mov
sub
ret
pop
hlt
push
ljmp
pop
sub
push
pop
mov
mov
aaa
cmpb
push
cli
mov
jecxz
jnp
nop
leave
dec
mov
adc
cmp
xchg
and
mov
sub
gs
and
outsl
ljmp
fiadds
movsl
aad
popa
pop
jp
jge
les
mov
sbb
sub
jbe
out
pop
bound
pop
or
mov
cmp
in
inc
lret
daa
in
push
xor
cmpsl
mov
pop
mov
dec
adc
mov
lahf
xchg
arpl
mov
fmuls
jne
sub
fs
in
shrl
cmp
cmp
inc
pop
test
mov
mov
sti
push
mov
popf
xor
ret
cmpsl
aaa
add
jecxz
mov
xchg
dec
js
xor
ss
mov
stos
jp
xchg
pop
mov
dec
xor
adc
cld
cmp
xchg
je
jae
pop
pop
mov
fldcw
test
lods
inc
insl
sbb
or
shr
inc
nop
and
incb
ds
jb
aad
mov
icebp
out
cs
ret
xchg
gs
xor
and
popf
int
lods
adc
clc
xchg
dec
mov
jae
jmp
xor
inc
aad
push
ret
push
mov
test
xchg
or
test
mov
jl
jbe
arpl
push
fsubs
pop
add
addr16
sahf
stc
fadd
subl
int
out
faddl
jge
shlb
aam
into
fnstcw
out
cmc
ret
pop
push
jo
fld
psllw
insb
jge
rcrb
sbb
adc
jmp
imul
xchg
in
xor
xchg
jle
rcrl
adc
add
orb
scas
cli
xchg
xchg
mov
mov
stos
frstor
push
dec
xchg
xchg
xor
add
or
sub
lods
pushf
push
adc
hlt
cmp
aaa
loope
in
mov
xor
pop
xor
outsb
push
iret
cmpsl
mov
push
cwtl
int3
movsl
mov
ja
addr16
mov
repnz
and
loopne
and
push
add
pop
jl
or
mov
cld
js
ljmp
inc
add
xor
or
cmp
imulb
shl
inc
mov
ret
xor
add
shlb
test
jl
mov
jbe
sahf
outsb
and
xor
das
repnz
ffree
or
xchg
repz
pop
or
dec
cmc
cmp
push
adc
in
sbb
dec
mov
ljmp
mov
pop
push
sub
test
dec
sarb
mov
mov
out
inc
dec
or
adc
cmp
lahf
ljmp
daa
arpl
stc
add
push
mov
mov
cmp
xor
es
inc
sub
xor
sub
xchg
loopne
cwtl
inc
sbb
cltd
into
dec
movb
inc
sti
icebp
sbb
jnp
imul
pushl
adc
add
fldt
and
push
jl
shrb
pop
outsb
push
adc
scas
cmpsb
push
xchg
nop
mov
inc
cmp
leave
sub
xchg
aam
jb
cs
lods
int
sbb
ljmp
cwtl
dec
or
xor
stos
push
filds
mov
cmp
push
cmpsb
cmc
mov
add
mov
jle
aam
or
xlat
mov
fwait
pushf
add
and
test
fstpt
jae
pop
mov
pop
iret
sbb
fmul
sahf
inc
lcall
ret
sahf
mov
in
cmp
in
fstl
pop
inc
xlat
aaa
ficoml
add
punpckhbw
sbbb
lds
mov
mov
xor
mov
push
pop
repnz
adc
cli
fstps
or
jle
dec
mov
sbb
or
out
ficoml
xchg
stos
lret
push
pusha
pop
fadd
lock
sub
imul
ret
jb
out
jmp
lods
dec
fstl
lahf
pminub
pop
test
dec
cmp
negb
ss
jmp
cmp
inc
shrl
mov
sbb
xor
imul
pop
repnz
xor
mov
sti
xor
out
xchg
mov
stc
lret
push
sarb
sbb
sbb
test
insb
int3
in
pop
jno
cs
imul
xchg
jne
xchg
sub
push
lock
iret
adc
xorb
sub
mov
xchg
sbb
sti
pop
cli
addb
es
mov
sub
add
dec
movsb
sub
mov
adcb
repnz
sti
lret
adc
mov
daa
cmc
mov
mov
movl
loopne
arpl
inc
xor
dec
test
adc
dec
adc
int
and
push
cmp
gs
insl
pop
les
jb
aaa
xor
fmuls
in
out
mov
lret
rolb
adc
divl
adc
cmp
xlat
xchg
mov
pushf
sub
movsb
lcall
cmp
out
test
xchg
pop
jae
gs
fbstp
out
mov
cmp
lock
not
scas
and
subb
pop
xchg
fidivl
push
jno
lahf
mov
fbstp
jmp
or
inc
xor
dec
movsb
push
jp
or
cmc
sub
pop
test
cmpsl
ja
out
mov
sbb
dec
pop
push
jmp
lahf
pop
sbb
push
in
mov
xchg
xchg
pop
inc
stc
xchg
shlb
outsb
mov
mov
in
fsubr
inc
inc
sbb
inc
mov
jno
add
das
push
popf
mov
les
mov
jg
popa
or
cmp
xchg
cmc
call
inc
jmp
into
pop
jno
pop
cmpsb
enter
out
jnp
lods
inc
adcb
sub
sahf
jb
xchg
mov
repnz
icebp
std
push
add
mov
sbb
adc
sti
and
addr16
ud0
dec
pop
add
jp
adc
jae
xchg
fsubl
adc
enter
jle
push
mov
jbe
sbb
scas
pushf
bound
js
xor
adc
xchg
cld
push
push
mov
test
aam
leave
jp
mov
push
hlt
push
xor
loop
out
dec
in
sti
cmp
cmp
movsl
pushf
mov
inc
sbb
dec
mov
hlt
xor
in
mov
movsb
and
sub
test
movsl
xchg
and
push
arpl
out
add
sbb
or
cmp
mov
mov
sbbb
or
pusha
ret
and
repnz
sbb
scas
inc
inc
stos
sub
pop
or
dec
sbb
test
es
mov
ja
add
sbb
loop
enter
pop
xchg
popf
rorb
in
js
push
inc
pop
ljmp
jecxz
cld
adc
inc
cmp
xchg
in
cmc
mov
cs
cmp
and
fwait
lock
ret
jecxz
aas
add
sbb
pop
pop
fidivrs
jge
outsl
sbb
aam
and
dec
add
xchg
add
mov
lods
xchg
jae
sub
push
push
sub
cmp
ljmp
das
fwait
xchg
adc
cmp
dec
ja
or
or
outsb
mov
and
or
rcl
icebp
aas
faddl
or
push
stos
xchg
aaa
jecxz
sbb
inc
adc
stos
test
outsl
lea
lods
add
sub
sub
pop
mov
cmp
pop
dec
repnz
dec
mov
imul
mov
aad
scas
std
mov
loop
sti
mov
cmp
in
cmp
cmpsb
nop
lahf
mov
std
xchg
mov
sbb
shl
hlt
sub
pop
xchg
sub
jnp
adc
xlat
shlb
arpl
sahf
xchg
push
add
push
mov
xchg
mov
xor
xchg
xchg
lds
enter
jns
ret
divb
inc
pop
fcomps
test
jne
xchg
push
mov
ss
dec
sub
or
mulb
sub
inc
jg
pop
cltd
sbb
mov
or
stc
inc
mov
mov
stos
pop
push
or
and
lock
adcl
mov
pop
mov
jle
mov
xor
mov
jg
push
xchg
push
gs
pusha
adc
pop
ljmp
xor
lret
int3
xchg
addr16
js
dec
loopne
mov
test
mov
add
std
jp
nop
into
jle
jge
sbb
mov
add
fs
movsl
in
cmp
ja
mov
push
shrl
test
imul
add
adc
repnz
ss
mov
inc
into
lcall
or
xlat
hlt
inc
sub
inc
addr16
in
aad
cs
daa
das
fbstp
fwait
push
negl
xchg
das
cmpsb
data16
mov
cmp
push
or
add
roll
mov
push
ja
mov
mov
movsl
xor
sarb
mov
movsb
cmpl
int
pop
add
sbb
inc
push
into
pusha
mov
sub
aad
cmp
fisttpll
pop
rcrl
pop
xor
jmp
mov
pushf
mov
xor
cmp
xchg
dec
or
cmp
lds
in
ljmp
enter
dec
adc
rcl
loopne
cltd
sbb
lea
push
inc
ret
dec
mov
jge
out
repnz
inc
popa
out
neg
and
ljmp
jg
dec
pop
push
or
cmp
pop
inc
adc
mov
push
jne
das
mov
mov
adc
outsb
adc
pop
cmp
shrl
sbb
xor
sub
mov
fsubp
mov
sub
or
mov
xchg
lret
fwait
test
cmpsb
pop
outsb
and
add
dec
int3
push
fsubl
ret
enter
repz
sbb
xchg
mov
sarl
adc
outsb
pusha
push
or
mov
cld
and
push
pop
mov
jb
jp
or
lds
fimuls
sbb
sahf
jp
inc
lea
adc
outsb
push
pop
out
repnz
mov
xchg
mov
cmp
pop
dec
mov
notb
lcall
push
or
adcl
push
or
add
fdivl
aam
ficoml
jo
inc
mov
xor
in
icebp
push
lcall
dec
jno
cmp
inc
mov
sub
repz
or
adc
dec
mov
xor
xor
repz
lret
hlt
cmpl
aas
scas
or
add
jmp
adc
ret
pop
jae
subsd
in
stos
enter
xorb
adc
jno
jle
adc
mov
mov
jmp
jle
add
pop
jmp
cmp
cli
movaps
lret
call
or
pop
test
pop
mov
lods
cmpsb
movsb
add
mov
pop
xor
xor
imul
mov
mov
inc
mov
inc
mov
pop
mov
push
aad
sbb
or
je
and
mov
sub
pop
jb
stc
icebp
sbb
fmull
xchg
adc
fwait
aas
leave
sti
xchg
stos
cmp
push
mov
rorb
fisttps
sti
addb
rolb
dec
enter
inc
sub
mov
out
in
or
shl
fmuls
jp
pop
mov
lods
sbb
xor
scas
imul
jbe
pusha
ja
push
sub
shl
les
in
mov
jg
pushf
pop
icebp
out
jge
add
leave
mov
inc
dec
cmp
test
sti
out
rcrb
cli
sub
inc
mov
imul
add
arpl
movsb
daa
add
cld
xchg
pop
outsb
js
mov
dec
lcall
xchg
cs
dec
and
jg
jnp
loop
sbb
jmp
cwtl
add
or
cmpsb
sti
push
aad
shl
inc
inc
sub
fwait
loope
mov
push
mov
adc
adc
cmpsl
int
add
jmp
insl
dec
sub
xor
ret
xor
and
icebp
xchg
add
fmulp
ds
and
aaa
out
or
mov
lret
cmpsb
pushf
call
les
gs
push
pushl
rolb
sbb
bound
js
xor
cmpb
imul
stc
xchg
sub
cmp
dec
int3
pushf
aad
addl
imul
push
mov
lret
fstpl
and
dec
pop
ret
cmp
mov
pop
inc
jnp
xor
cmp
lahf
mov
aad
inc
hlt
addr16
add
shrb
sub
xor
cmp
mov
mov
fbstp
pop
add
jge
dec
imull
ss
adc
xchg
sbb
std
stos
into
aam
push
sub
dec
aas
mov
fstpl
jle
cmp
lea
or
fbstp
sbb
xlat
and
out
cwtl
test
xchg
inc
and
add
or
shrl
popf
stc
add
mov
gs
out
push
cwtl
xchg
jle
cmp
hlt
aas
inc
sahf
mov
and
aaa
pop
mov
cs
cmp
jne
std
cmpsl
or
pop
fistl
test
in
ss
mov
pop
sub
scas
mov
sti
hlt
xchg
pop
in
in
fwait
sahf
jo
faddl
dec
bound
jnp
fwait
ja
insl
jae
fwait
lcall
xchg
loope
clc
xchg
out
into
jle
ret
std
in
cmp
sub
std
out
inc
sub
aaa
dec
mulb
sub
sbb
mov
cmpsb
mov
in
mov
xor
ret
mov
push
pusha
and
xchg
fwait
into
jmp
or
sub
mov
repnz
sub
aaa
ja
mov
xor
fwait
or
enter
call
sti
repnz
cmp
das
outsb
xchg
push
lcall
mov
sub
push
dec
jp
pop
sbb
dec
outsb
mov
xchg
arpl
in
xchg
and
add
enter
cmp
jp
mov
test
push
sbb
adc
out
in
leave
push
mov
pop
sbb
hlt
mov
cmp
js
pop
fs
outsb
jmp
sub
stc
adc
cmp
scas
gs
jo
insb
sub
out
outsl
cmp
sarl
decb
inc
rorl
mov
mov
inc
fildll
jmp
repnz
sbb
loope
jo
jne
inc
decl
fstps
shrb
xlat
decl
fxch
aam
movsl
mov
popa
mov
fimull
push
les
fsubs
mov
aaa
mov
lock
cmp
je
cmovp
cs
test
repz
dec
jnp
pop
cli
into
push
outsb
or
push
inc
sahf
lds
jp
pop
in
push
aaa
jae
insl
ja
dec
cli
mov
cmc
xor
popf
and
pushf
cmp
aaa
mov
jge
fs
push
pop
xor
or
mov
cmc
push
rcll
inc
pop
cmp
in
or
orl
in
adc
jbe
pusha
test
inc
call
ds
ljmp
jno
jb
rorl
push
xor
push
clc
push
sub
mov
mov
pop
aam
imul
lods
movsb
popa
xor
cli
jecxz
roll
loope
mov
or
fstpl
add
stos
push
out
lret
stos
loop
daa
shll
mov
movsb
fwait
dec
add
insl
mov
lcall
and
test
mov
leave
dec
mov
and
test
iret
add
js
cwtl
xchg
inc
xor
push
dec
jmp
cmp
lea
or
or
xlat
inc
mov
adcb
fs
clc
and
inc
push
outsb
rorb
ret
cmpsl
dec
movsl
mov
jo
shrb
ja
mov
inc
loope
cmp
loopne
fs
inc
in
sbb
in
cmpsl
aas
mov
lahf
cmp
js
sub
mov
xchg
test
sub
in
fistpll
add
jns
lods
sahf
push
pop
fadd
shrl
ret
jge
push
sbb
push
cmp
popf
sti
jae
rcrl
sub
jnp
xchg
cmp
pop
jbe
xchg
push
sub
cmp
jecxz
and
xor
stos
or
sub
fimull
inc
mov
inc
xchg
push
adc
in
xchg
adc
jge
xchg
popa
imul
and
mov
rcrl
or
xchg
in
outsl
aam
adc
sub
icebp
push
lahf
out
xlat
add
mov
cmpsl
rcll
and
push
add
aaa
arpl
push
pop
inc
pop
mov
mov
repz
cmpsl
rcll
and
push
add
aaa
arpl
push
pop
inc
pop
mov
mov
repz
daa
rcll
and
push
add
aaa
arpl
push
pop
inc
pop
mov
mov
repz
cmpsl
rcll
and
mov
mov
mov
push
fbld
iret
xor
inc
loopne
cmp
lcall
outsl
cmp
loope
icebp
call
and
xor
popa
pop
jne
outsl
xchg
cmp
rcrl
loope
icebp
out
not
mov
mov
xchg
inc
jg
fs
sarb
adc
xchg
popl
push
xchg
jb
push
mov
push
test
loop
mov
or
pop
dec
sbb
fstl
push
add
fists
into
js
push
fisubrl
inc
mov
pop
inc
loope
aam
mov
push
mov
xchg
js
shl
scas
test
xchg
xchg
sub
nop
orl
xor
mov
enter
call
aas
and
mov
cld
dec
add
jno
pop
adc
pop
push
out
pop
xlat
adc
xchg
mov
push
mov
nop
dec
inc
dec
inc
xchg
stos
les
out
out
nop
push
inc
loope
push
and
jg
movsb
jo
rclb
test
setnp
out
xor
push
fdivs
scas
inc
mov
lahf
popa
xchg
jecxz
xorl
daa
std
aaa
aas
pop
stc
push
ret
mov
mov
dec
stos
pop
fnsetpm(287
ret
adc
ss
outsl
loope
add
rclb
dec
mov
incl
push
mov
adc
add
or
inc
jge
outsl
in
repz
outsl
test
adcb
iret
pop
or
jno
subl
aas
shrl
pop
loope
icebp
incl
out
adc
and
xor
popa
jno
subl
aas
shrl
pop
loope
icebp
incl
sub
xchg
nop
sbbl
xlat
dec
push
into
sbb
mov
daa
lahf
push
mov
adcb
dec
pop
loop
cli
mov
loopne
ret
loop
push
fsubs
cmp
jne
cmp
rcrl
iret
or
clc
mov
mov
fdivrs
add
test
sbb
pop
push
stc
lods
popf
rclb
mov
mov
fdivr
and
clc
push
pop
stos
mov
dec
push
mov
hlt
loopne
mov
fisubrs
and
mov
pop
dec
arpl
pop
pop
sbb
sub
add
test
dec
dec
rcr
mov
adcb
lods
movsl
cld
lahf
push
je
rcrb
mov
dec
sbb
xorb
in
dec
scas
nop
hlt
pop
enter
mov
in
mov
inc
dec
jno
inc
mov
push
jb
jns
xchg
pusha
aas
dec
push
push
adc
jmp
xlat
and
or
adc
popa
mov
cmp
add
mov
fnstenv
sbb
hlt
and
les
push
push
inc
test
xchg
add
mov
mov
stc
test
cmp
cmc
gs
pop
inc
scas
negl
imul
cmp
cmp
test
lods
add
cmp
adc
dec
xlat
out
daa
popf
loop
sbb
pop
pop
sub
je
std
mov
movsl
bound
out
imul
push
xchg
dec
sub
adc
mov
sub
aaa
rorb
sub
inc
dec
repnz
pop
inc
into
xor
rolb
inc
loope
xchg
xor
rorl
xchg
sub
pop
mov
popl
out
ror
push
test
mov
pop
enter
call
leave
popa
lock
pop
fadd
sti
cmpsl
lret
test
mov
ret
push
and
jmp
ljmp
xchg
and
les
jecxz,pn
aaa
mov
lahf
mov
add
addr16
mov
xorb
cmpl
adc
add
push
cmp
in
test
outsl
pushf
sub
fcmove
jecxz
fsub
dec
adc
rcrl
or
stc
fcmovnbe
and
lds
and
rolb
push
jno
jg
xor
addr16
jg
stc
dec
jle
mov
cmp
jp
or
movsb
or
out
mov
addr16
mov
mov
mov
jne
call
orl
xor
xor
notb
imul
push
mov
adc
popf
mov
fimull
cmp
add
cli
pushf
or
outsl
mov
pop
das
jno
loop
jnp
stos
and
sbb
cltd
es
pusha
inc
xchg
jae
arpl
in
push
adcl
xchg
ja
xlat
xchg
pop
ds
insb
int
fsub
test
ret
cmp
jns
lods
add
pop
xchg
jae
jl
sub
jae
stos
lds
pushf
and
adc
and
loopne
jmp
sbb
pusha
push
gs
sbb
fistl
cmp
cmpsb
scas
cli
xlat
xchg
jnp
out
sbb
test
xchg
or
dec
mov
rorl
or
rol
mov
xor
lds
inc
sbb
mov
jp
sub
and
aas
cwtl
loop
gs
jp
loope
lods
popa
dec
inc
inc
insb
out
pop
push
popf
out
testl
push
out
scas
jnp
cmpb
mov
mov
fildl
inc
arpl
inc
cmp
cwtl
hlt
subl
imul
ljmp
sub
icebp
hlt
ljmp
lds
or
sbb
or
inc
push
out
and
testb
fwait
push
inc
adc
je
loop
gs
push
mov
inc
sbb
test
outsl
jmp
cld
xchg
mov
xchg
mov
loopne
into
inc
stc
jmp
push
jae
cmp
lcall
mov
outsb
ret
fwait
adcl
cmp
push
add
popf
push
xchg
push
mul
push
jge
inc
pmaxub
lock
sarb
test
mov
cmpsl
mov
sbb
loopne
jbe
lods
mov
jno
push
lods
push
scas
add
bound
aaa
lods
inc
pop
pop
movl
decl
nop
adc
fwait
leave
dec
loopne
data16
xchg
popa
xchg
testl
adc
mov
ret
lods
inc
or
mov
mov
pop
repz
jne
sti
jo
lret
dec
loop
pop
out
xor
ds
adc
xchg
std
negl
xor
push
lods
cmp
adc
dec
leave
sub
sbb
mov
in
jns
dec
lock
mov
rcr
pop
xchg
fcmovne
lods
sbb
out
sti
xchg
mov
pop
dec
sub
mov
sbb
pop
xorb
add
xor
movsl
ljmp
test
pop
xor
cmp
call
mov
pop
cmp
jg
or
pop
insl
mov
loopne
jo
mov
jmp
sub
call
sub
das
dec
and
jo
mov
mov
stos
or
out
or
sbb
xor
mov
xchg
std
imul
or
cmp
jno
scas
popf
out
test
fcmovb
idivb
inc
pop
aam
andl
mov
test
rorl
scas
lock
roll
push
jg
jl
dec
xchg
inc
mov
mov
pop
fwait
enter
cmp
cs
mov
cwtl
sbb
push
lea
inc
cmp
push
dec
cmp
pop
cmpsl
jne
push
or
das
pop
in
jmp
pop
adc
inc
inc
fildl
pusha
iret
sbb
push
inc
lock
fisttps
cmp
jl
inc
xor
mov
xchg
test
sub
or
cmc
lahf
outsl
sahf
movsb
in
lea
bound
testb
jbe
xchg
or
or
push
pop
jle
in
repnz
aam
fbstp
outsb
jbe
test
roll
idiv
mov
dec
std
rcl
adc
repnz
test
cmp
xrelease
jp
inc
shrl
pop
dec
push
divl
test
sti
pop
push
gs
out
jne
mov
std
das
sar
mov
inc
cmpsb
addr16
pop
sbb
mov
cmpsb
push
int
clc
scas
and
mov
inc
mov
es
scas
xchg
movsb
cmpsl
pop
cs
je
pop
loop
mov
aaa
pop
mov
push
clc
je
pop
cmc
xchg
clc
mov
sahf
inc
mov
mov
pop
sub
cmc
aam
outsb
mov
pop
and
xchg
sbb
jmp
mov
jge
fprem
or
inc
mov
sub
imul
and
test
fcmovnbe
push
inc
jl
iret
addr16
hlt
gs
cs
add
mov
mov
jo
iret
cmp
pop
jmp
or
shlb
add
fwait
sub
adc
cli
sub
scas
xor
ljmp
mov
mov
and
out
insl
outsb
shr
xor
shrl
nop
mov
in
arpl
in
scas
or
lods
or
das
cli
jg
xchg
xor
into
shll
into
and
outsb
or
loope
movsl
aas
cmp
jb
jecxz
cmp
cmp
xchg
pop
or
pop
jb
push
jbe
fwait
jb
push
adc
cmpsl
mov
out
sub
enter
loope
sub
push
sub
das
cmp
lods
fs
test
xchg
hlt
sub
cmp
pop
popa
fsubrs
sti
insb
sbbl
dec
inc
push
in
out
add
lahf
jbe
enter
sub
sarb
inc
pusha
shlb
or
mov
out
fs
aam
insb
dec
stos
lret
push
sbb
cmp
aad
leave
fcmovu
mov
pop
dec
add
push
pop
sub
push
jge
ss
add
daa
jnp
imul
rorl
in
aam
mov
inc
mov
pop
push
fnstcw
decl
stc
loope
inc
mov
je
sbb
lahf
or
ja
xor
jae
std
adcl
test
dec
bound
stos
repz
add
movsl
popa
aam
nop
jl
dec
loopne
mov
movhps
mov
sahf
sbb
mov
popa
adc
ljmp
and
add
lds
dec
aaa
jmp
or
scas
pop
cmc
push
adc
pop
inc
sbb
loop
push
shr
mov
cld
inc
aad
ljmp
xchg
mov
out
jp
mov
ret
mov
ss
test
xchg
sbb
cmp
inc
or
addr16
mov
outsb
dec
roll
negl
mov
xor
adc
adc
inc
enter
aas
jns
xor
push
icebp
sub
xchg
addr16
lahf
dec
imul
divl
or
call
add
gs
push
dec
lret
inc
sbb
std
clc
pop
gs
and
pop
popf
inc
in
xchg
and
cmp
aam
or
and
fisubl
arpl
mov
test
dec
push
inc
mov
ljmp
bound
jne
push
pop
adc
in
fcomps
inc
adc
ficoml
test
arpl
movsl
cmp
jbe
scas
aas
add
movsl
dec
shll
je
push
aad
aam
sti
jecxz
mov
adc
mov
mov
jecxz
icebp
mov
int
adc
dec
add
and
aam
fsubs
and
imul
and
inc
add
arpl
add
in
add
in
lock
mov
mov
xlat
ficoms
test
push
jg
mov
add
scas
into
test
mov
mov
cmp
xor
push
cmc
in
mov
dec
movsb
jge
or
adc
aam
into
loop
jle
jp
ja
out
xor
mov
jo
mov
int3
clc
ss
inc
sbb
and
sbb
sbb
and
movsb
dec
push
in
cmp
leave
mov
cmp
test
ficompl
push
das
iret
add
xor
or
pop
iret
jbe
popa
mov
xlat
push
xor
hlt
out
inc
lods
mov
jle
lea
xchg
mov
sbb
mov
jecxz
sub
push
aaa
mov
push
lcall
xor
push
mov
dec
and
xchg
pushf
cmpsb
push
ljmp
xor
push
popf
mov
aas
lea
lods
xchg
jno
and
inc
popa
xchg
mov
and
out
fbld
outsb
or
loope
test
push
int3
scas
mov
mov
sub
fdivp
cmpsb
adc
xchg
add
icebp
movsb
and
iret
inc
add
mov
inc
sbb
mov
sub
cli
sbb
push
and
dec
pop
ss
jge
inc
sbb
add
imul
dec
aas
jne
mov
cmp
cmpsl
fcomp
mov
pushf
repz
add
test
push
adc
inc
mov
and
cs
mov
mov
push
sub
sbb
push
test
inc
addr16
es
xchg
aad
sub
mov
dec
nop
or
jb
xorl
mov
popa
pop
je
std
inc
mov
push
adc
cs
sbb
xchg
mov
or
shr
xchg
pop
sub
or
int
mov
mov
out
or
fimull
aam
rcrl
mov
sbb
out
cmpsl
mov
mov
jle
movsb
push
into
cmpb
mov
and
pop
test
xorl
xor
lcall
js
pop
inc
xchg
push
jae
push
push
cs
and
mov
fldl
aaa
test
inc
mov
or
pop
aaa
jecxz
in
adc
rcll
mov
movsl
into
cmp
mov
test
aam
cltd
cmpl
adc
stos
inc
mov
das
cld
fstl
dec
decl
jecxz
into
sbb
push
inc
inc
outsl
cmc
mov
imul
data16
mov
push
ds
scas
xchg
jno
add
xor
mov
xchg
icebp
xor
jno
jge
pop
dec
int
imul
mov
pop
sub
lods
fdiv
inc
push
push
cmp
lock
aam
jmp
imul
mov
lock
adc
nop
mov
lods
push
int
fldl
movsl
loop
push
pushf
cld
fdivs
fistl
xor
leave
aas
insb
aam
push
cwtl
or
inc
and
das
cwtl
dec
notl
repz
push
sbb
jb
repnz
push
in
fistpll
and
push
outsl
fs
mov
into
lods
mov
repz
aam
lods
lds
lods
mov
inc
shll
sahf
xchg
xchg
cmpsb
nop
cmp
daa
xor
lods
leave
push
dec
test
aad
ja
scas
es
xchg
in
rorb
xchg
push
mov
std
adc
lret
daa
test
aas
mov
sbb
jno
test
shll
js
jbe
jmp
insl
std
call
jb
or
mov
mov
adc
add
xchg
std
dec
mov
dec
jnp
test
adc
sub
lods
fldpi
incb
or
add
sub
xor
ret
imul
dec
cli
mov
adc
pop
sti
stc
lcall
data16
inc
stos
cmp
cli
pop
fsubrl
sbb
sti
in
mov
mov
in
icebp
mov
mov
adc
mov
gs
jge
jno
push
sbb
js
xchg
pop
push
pop
mov
fsts
loope
xor
stc
push
push
test
xor
mov
inc
inc
and
inc
mov
xor
jns
mov
sub
sbbl
mov
cmp
inc
enter
jbe
inc
jbe
lods
mov
push
cmpsb
mov
nop
icebp
and
sbb
mov
fs
push
f2xm1
rcl
inc
call
sub
or
add
pusha
les
pop
or
push
jg
sbb
into
popf
add
xlat
arpl
inc
adc
imulb
aad
pop
int3
scas
ret
cs
mov
xchg
mov
cmc
loope
mov
stc
insb
cmp
sub
out
adc
adc
cmpsl
push
push
scas
cli
dec
adc
jmp
xor
adc
push
jg
enter
mov
lea
add
lcall
ret
mov
jbe
fidivrl
add
in
and
mov
pop
mov
fs
pop
bound
push
hlt
push
mov
mov
sub
add
test
in
cltd
mov
cmc
jl
dec
inc
mov
nop
jmp
pop
mov
add
nop
xorb
lret
jp
push
pop
fcmovb
ret
jge
std
lcall
pop
jno
pop
pop
arpl
testb
shlb
mov
adcb
test
lret
popf
add
inc
adc
jne
mov
pop
or
xchg
fwait
mov
pop
dec
xor
fcmovbe
cmp
test
mov
lods
inc
xor
daa
mov
mov
adc
xchg
or
scas
test
stos
sbb
fdivrs
test
clc
sub
lds
repnz
sbb
dec
mov
cltd
pop
inc
fsubl
cmp
negb
lock
aaa
or
aas
mov
mov
mov
push
pusha
mov
out
insb
enter
mov
and
lahf
mov
out
or
add
push
cwtl
loop
adc
mov
clc
in
lret
test
aam
cmp
je
sahf
pop
jne
jmp
sbb
inc
adc
ss
push
int
mov
lods
test
je
ljmp
pop
sub
adc
cld
out
enter
gs
add
sub
push
add
cli
je
das
sub
mov
cmp
adc
cmpsl
cmp
dec
pop
lea
repz
add
xor
hlt
lods
sarb
adc
outsl
andb
fwait
xchg
in
movsb
inc
imul
nop
ret
repnz
sahf
test
js
clc
fisttps
or
ljmp
imul
mov
clc
dec
dec
div
dec
insl
pop
push
jp
cs
mov
ror
sahf
or
sub
mov
mov
loope
lea
jl
mov
test
inc
stc
sbb
test
cwtl
lock
cli
sub
push
cmp
lods
clc
pushw
int3
mov
out
adc
inc
outsb
insl
jnp
jecxz
testb
xchg
and
mov
xor
push
leave
cltd
push
or
mov
sub
jg
jmp
cmpsl
mov
cmp
jge
mov
lcall
cmp
int
ror
push
insl
aam
cmpsl
sbb
jae
outsl
daa
xchg
lods
int
xlat
xor
mov
mov
sbb
and
xor
adc
mov
inc
xchg
mov
mov
xor
dec
inc
roll
jge
stos
and
pop
xor
xchg
mov
jmp
mov
shrb
dec
or
rol
pop
dec
inc
mov
xchg
mov
sub
jns
or
pop
adc
jle
sbb
pop
inc
inc
jge
fcmovbe
push
out
addr16
ja
sbb
inc
xor
imul
push
mov
or
fnstcw
cmp
stos
stos
mov
test
mov
jp
or
mov
test
test
and
addr16
xor
xor
notb
inc
and
arpl
enter
out
pop
ror
lret
inc
pushf
fidivrs
pop
movsl
out
push
xchg
xlat
stos
jo
popf
shll
lret
dec
cwtl
insb
xor
inc
loop
or
jae
add
xor
js
pop
xchg
sub
idiv
sub
sub
pop
pushl
jnp
shlb
outsb
filds
mov
adc
sbb
cmc
xchg
cmp
pop
bound
or
std
mov
jp
aam
xchg
aas
push
push
loop
test
cs
push
add
test
add
ret
outsl
xchg
push
mov
ljmp
lcall
std
jb
xor
movsl
iret
outsl
add
ret
insb
mov
push
lcall
sbb
jl
div
fadds
repz
mov
jns
lahf
or
leave
push
pop
bound
cmp
divb
aam
inc
test
add
stc
mov
xchg
jnp
pushf
inc
push
xchg
inc
in
or
xchg
int3
dec
cli
dec
and
mov
cmp
mov
jb
jo
ss
daa
jge
add
inc
lds
pop
and
and
std
sub
inc
cwtl
sbb
xchg
jg
xor
aad
mov
idivb
jp
inc
sbb
sahf
push
sarb
js
hlt
adc
push
push
lahf
in
sbb
add
sahf
sbb
sub
or
xchg
aaa
addr16
sbb
xor
push
imul
pop
inc
xchg
hlt
lea
je
loope
mov
es
adc
add
mov
les
in
aas
add
ret
cmp
sub
and
lods
inc
fisubl
fdivl
dec
cmpsl
sub
jl
and
push
not
sub
sub
jbe
push
aaa
call
sub
cmp
icebp
gs
ja
jbe
mov
jp
inc
push
test
sbb
in
mov
xchg
pop
fdivr
movsl
pop
xchg
mov
or
adc
or
cmp
adc
addb
mov
mov
lcall
ss
dec
mov
jl
and
xchg
clc
and
ret
jg
xchg
pop
pop
dec
sbb
jne
xchg
testl
in
mov
push
mov
mov
inc
jecxz
test
loopne,pt
push
push
movsl
fucomi
loope,pt
aad
push
sbb
outsb
mov
das
rcrb
out
outsl
sbb
sbb
or
pop
sbb
add
dec
adc
gs
mov
scas
mov
xchg
sahf
sub
mov
and
jp
pop
xchg
add
pusha
sahf
inc
and
adc
movsl
std
scas
repz
hlt
aad
cmp
dec
add
jno
push
test
jl
xor
push
shrl
push
adc
jo
lock
sahf
mov
popf
lcall
lcall
inc
iret
insb
sbb
mov
lock
jns
imul
lock
ss
xchg
pushf
mov
mov
mov
dec
sbb
lcall
sub
pop
js
pop
push
adcb
mov
nop
sub
ret
bound
xor
adcb
mov
rolb
sub
aaa
outsl
sub
ljmp
xor
cs
imul
cmp
sub
xchg
ret
push
cli
xchg
mov
add
test
dec
test
sti
adc
iret
xor
popa
jno
subl
aas
shrl
pop
loope
icebp
incl
out
adc
and
xor
popa
jno
subl
aas
shrl
pop
loope
icebp
incl
iret
xor
lahf
gs
jno
subb
mov
sub
pop
call
fcomi
jmp
inc
scas
push
pop
loope
mov
jle
cmp
mov
cmpsl
test
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
jecxz
mov
fucomp
push
mov
cmp
xor
add
pop
add
or
add
add
add
add
add
jnp
out
adc
dec
add
test
and
cmp
cmc
add
add
add
add
add
add
add
add
add
xchg
add
and
insl
add
add
add
es
add
add
add
pop
add
filds
movsb
add
mov
stos
add
add
add
flds
orb
add
add
add
add
ja
dec
add
mov
int3
add
add
add
add
or
or
jmp
enter
test
lds
add
sbb
int3
add
add
add
add
add
add
add
add
add
add
add
add
add
cwtl
add
sbb
and
es
add
add
add
add
faddl
int
and
inc
add
add
pop
add
in
sti
add
int
add
pop
add
adc
pop
add
add
add
add
add
add
add
pop
add
add
dec
add
add
add
add
add
add
add
push
pop
add
add
add
add
add
add
pop
add
faddl
adc
add
and
aam
or
mov
dec
add
rolb
add
add
add
add
add
inc
add
add
add
sub
add
add
add
inc
add
add
add
add
add
add
add
add
add
or
or
sub
add
add
add
xchg
add
stc
add
add
into
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
jge
in
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
or
xor
sub
add
add
add
add
add
add
in
add
add
add
add
add
mov
cmc
add
add
add
add
or
out
and
mov
add
cmp
add
add
add
add
lcall
add
add
add
add
add
add
add
add
add
add
add
movsl
add
add
add
push
es
add
add
add
add
add
or
xor
sbb
outsb
add
sub
flds
mov
xchg
push
add
add
add
add
add
add
add
mov
adc
cmp
movsl
add
add
add
jmp
cmc
add
add
add
add
add
add
add
or
and
testl
movsl
add
add
add
popf
add
add
add
add
add
sub
mov
add
sub
fildl
push
add
add
push
add
popf
add
add
add
ja
add
add
add
mov
mov
add
add
add
sbb
mov
add
or
icebp
add
or
bound
dec
add
add
add
add
adc
faddl
xchg
add
and
push
add
add
mov
repz
adc
jecxz
sbb
cld
lret
jo
mov
mov
cmp
sti
dec
jmp
shrl
rol
rcr
aam
lods
cs
je
orb
cmpl
jmp
inc
mov
sti
loope
xchg
icebp
and
push
mov
push
sbb
lcall
add
jnp
mov
xchg
sbb
lods
call
push
and
es
mov
in
pop
test
decb
xchg
push
adc
add
ss
jns
andl
push
aam
cmc
jbe
stc
sbb
pop
cmp
out
lds
stc
hlt
js
mov
cwtl
jbe
lock
pop
out
dec
call
add
aad
hlt
cmp
insb
jno
mov
pushw
xchg
inc
inc
mov
mov
cmpsb
mov
pop
or
sbb
sub
inc
sbbb
lret
push
loop
cmp
scas
push
testl
xor
arpl
movsl
icebp
dec
mov
in
lahf
mov
xlat
sarb
lock
popf
add
movsb
xchg
and
cwtl
cmpsb
imul
mov
mov
push
fisubrl
mov
jl
movsb
sahf
mov
xor
mov
jo
sbb
mov
test
mov
aam
xor
mov
pushf
xchg
dec
mov
fmull
leave
jle
dec
xchg
hlt
orl
call
testb
cmpsb
jmp
fnstcw
lret
pop
pusha
xchg
leave
sbb
mov
fxch
jne
xor
adc
dec
inc
in
mov
dec
xor
jnp
jmp
in
cmp
das
mov
orb
xchg
fs
aad
inc
repz
mov
test
or
mov
aad
add
jae
in
push
mov
xchg
jecxz
arpl
adc
iret
lods
add
jne
and
aaa
das
xor
push
cltd
popf
mov
sbb
inc
and
xchg
pop
ljmp
les
mov
and
jmp
adc
aaa
cltd
jno
insl
and
cld
pusha
mov
pop
test
jl
add
sub
mov
roll
daa
inc
test
addb
cmp
mov
cs
mov
cwtl
cmpsl
test
mov
add
jp
negl
subb
push
cwtl
dec
jne
and
lock
sahf
nop
sbb
sbb
divb
dec
clc
sar
jne
add
lods
cwtl
inc
das
in
test
dec
dec
loopne
shrl
test
jle
xor
repnz
mov
jae
push
sub
pop
test
je
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
