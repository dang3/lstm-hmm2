call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
into
pop
sub
js
push
xchg
push
sahf
sub
adc
and
xor
inc
cwtl
push
pop
arpl
xchg
dec
mov
sbb
sbb
cmp
pop
push
aam
enter
call
arpl
adc
pusha
jne
roll
fwait
adc
and
xor
fdivrs
inc
adcl
adc
add
ret
cmp
sbb
xchg
leave
out
lock
xor
adc
cwtl
pusha
push
add
inc
inc
rorl
jno
cmp
ja
xchg
out
fsubrl
ret
dec
push
rol
andl
dec
xor
dec
xchg
mov
jne
fsubr
enter
pop
mov
mov
jmp
fiadds
sub
loop
icebp
lods
push
cmp
xor
int3
gs
movsb
push
or
push
pop
xchg
cmp
push
jge
xor
aaa
faddl
xor
lcall
push
cmpsl
xchg
cmp
adcb
dec
xchg
sub
sti
mov
mov
mov
push
mov
xchg
pop
mov
sbb
xor
fadds
icebp
and
pop
test
out
fisttpll
lock
xchg
dec
bound
push
lea
std
cmp
les
or
stos
sbb
sbb
lods
push
lods
inc
popf
pop
ljmp
xor
icebp
pop
mov
sub
jecxz
repz
fcoms
enter
call
arpl
xchg
dec
mov
sbb
or
cmp
sub
fcoms
enter
call
arpl
push
pop
or
in
push
xchg
mov
aaa
inc
inc
mov
mov
or
rorb
loope
insb
mov
mov
mov
sbb
inc
mov
mov
mov
aaa
push
sub
dec
inc
out
cmp
jecxz
cmp
or
xor
int3
repz
cli
rclb
xchg
shr
push
repnz
pop
mov
sub
fists
pop
not
inc
add
lret
lods
xor
xchg
or
inc
pushf
sbb
mov
adc
or
aas
cmp
sub
sub
push
gs
test
lahf
sub
lods
fists
xchg
push
add
je
dec
sbb
out
imul
or
sbb
icebp
imull
scas
cltd
inc
aas
jecxz
incl
cmp
inc
jb
mov
std
rorb
out
pop
loope
pop
hlt
in
adc
in
or
cmp
pushf
mov
dec
and
cli
xor
mov
mov
pop
adcl
cmp
mov
call
repz
cmp
xlat
xchg
sub
or
cmp
push
das
mov
sbb
xchg
and
xor
add
ja
add
push
negb
loop
pop
inc
dec
mov
and
not
xchg
repz
push
sub
pop
aam
adc
loope
xlat
mov
roll
mov
ret
in
sbb
ret
mov
call
xor
push
iret
push
add
push
iret
push
jo
in
sbb
dec
aam
dec
push
sbb
xor
mov
pop
enter
dec
aam
dec
in
inc
es
fisttps
inc
inc
xchg
repz
in
adc
cmc
sbb
xchg
clc
xchg
movsb
mov
push
push
data16
mov
and
sub
dec
adc
dec
outsb
mov
and
adcl
mov
mov
test
dec
jge
gs
std
in
ret
sbb
jge
add
xchg
js
mov
popa
jns
clc
xchg
sbb
inc
adc
xchg
mov
mov
test
icebp
sub
xor
push
mov
aaa
xchg
pushf
adc
inc
cmp
xor
mov
dec
pop
hlt
rcpps
mov
or
cmp
xchg
ret
outsl
push
or
mov
flds
subb
sarl
mov
insb
sbb
ss
out
dec
jmp
dec
pop
out
retw
xor
inc
pop
lods
insb
lock
push
in
cmpsb
arpl
les
dec
inc
mov
in
loopne
sbb
in
push
cmp
pop
lock
mov
fistpll
pop
faddl
mov
out
divb
inc
mov
adc
stos
sti
fucom
sar
xchg
cltd
add
leave
cli
xlat
out
insl
mov
xlat
sbbb
pushf
pop
ljmp
add
mov
cmp
int3
das
mov
mov
cltd
add
mov
js
xchg
pop
jge
and
lret
mov
rcll
mov
adc
adc
add
mov
pop
or
jecxz
mov
xchg
or
jp
int3
lods
add
push
fbld
inc
adc
pushf
test
repnz
or
inc
push
inc
mov
mov
xchg
inc
or
jmp
repz
loopne
jle
aaa
mov
dec
mov
or
je
lds
dec
xchg
repnz
lret
jmp
decb
into
push
mov
pop
pop
arpl
xor
stos
leave
ficomps
ljmp
decb
enter
ljmp
outsb
adc
xchg
stc
push
testl
mov
push
movsb
or
enter
outsb
clc
outsb
pushf
sbbl
pop
xor
ret
and
aaa
lret
add
mov
mulb
pushf
cwtl
adc
pop
push
push
xchg
stos
pop
stos
out
pop
pop
jl
pop
xchg
rolb
inc
adc
lret
jecxz
dec
lods
jmp
les
repnz
and
stos
mov
lret
xor
insl
sub
jb
in
pushf
out
inc
jl
sbb
push
jnp
movsb
push
aaa
sub
add
push
and
pop
lods
add
repz
xchg
fbstp
push
xor
sarl
lods
mov
pop
jmp
sbb
in
sbb
mov
xor
inc
cmpl
xor
pop
gs
bnd
and
xchg
cltd
outsl
arpl
into
jne
inc
fcompl
in
pop
movsb
fidivs
mov
jo
cmpsb
pop
mov
cmp
popa
cld
lcall
rcrb
scas
lcall
repnz
lods
jmp
mov
mov
xor
xlat
scas
add
mov
xor
fisttpl
push
in
inc
sbb
inc
jo
lods
push
add
aaa
icebp
icebp
add
out
cltd
xchg
scas
and
xchg
sub
lcall
mov
pushf
mov
scas
mov
test
popa
mov
inc
loop
dec
or
push
push
xchg
adc
xchg
xor
or
and
out
repnz
ficoml
rclb
je
mov
js
adc
mov
and
sti
mov
repnz
xchg
dec
inc
adc
jle
clc
js
xor
aad
pop
xor
int
sahf
jae
out
cld
cwtl
in
sahf
scas
sahf
mov
sbb
repnz
out
les
inc
jo
out
cmp
popa
mov
push
jmp
cwtl
mov
fs
imul
mov
dec
into
aam
mov
aam
cmp
mov
sbb
gs
in
push
pop
jae
mov
jae
xchg
push
dec
bound
popa
mov
cmp
jle
test
mov
mov
or
aaa
hlt
mov
loopne
sarl
add
cmpsb
das
scas
movb
nop
xchg
pop
fs
and
inc
pop
fistl
mov
ret
fwait
jle
fimull
rolb
test
aad
fnstenv
dec
int
jp
fsub
repz
insl
mov
jnp
iret
out
mov
aas
inc
jmp
iret
out
adc
sub
sahf
hlt
mov
stos
rcll
cmp
xchg
outsl
daa
lret
push
push
push
dec
jne
lret
inc
mov
xchg
rorl
in
data16
std
adc
add
and
pop
add
jae
ljmp
loope
mov
test
sbb
ret
mov
icebp
jp
xor
xchg
imul
fs
jbe
mov
push
adc
pop
mov
jo
in
stos
daa
movsl
std
pop
or
test
ret
mov
pushf
into
dec
sbb
adc
fidivrs
cli
lret
in
adc
int3
fwait
outsb
daa
fadds
jecxz
clc
aaa
lods
popf
mov
mov
test
loopne
divb
insb
enter
pop
push
sarb
xor
rclb
add
dec
fsubrl
add
scas
fldl
cltd
subl
inc
test
adc
and
jbe
inc
dec
ss
add
inc
iret
jl
adc
scas
mov
xor
sub
pop
mov
or
mov
pop
cmp
inc
mov
imul
aam
or
icebp
dec
add
mov
add
adc
push
mov
sub
mov
ds
adc
test
push
xor
sarb
sub
aad
push
lock
mov
sub
into
cld
adc
fs
data16
pop
cs
push
dec
mov
cmp
dec
cmc
sbb
fcoms
lret
sbb
sahf
aas
stos
xchg
lock
imul
jae
pop
aaa
mov
jle
pop
fnstcw
std
adc
dec
cld
jg
out
add
ds
ffree
sarb
lea
adc
jle
xchg
in
pop
iret
sbb
sub
sahf
sarl
mov
adc
int
cwtl
pop
scas
mov
push
and
add
shll
push
cltd
mov
scas
lods
lcall
push
movsb
mov
daa
and
fwait
mov
popa
cmp
in
pop
xchg
out
pusha
cmp
rorl
gs
dec
jle
push
lock
lahf
sahf
add
or
sti
push
jo
decl
dec
mov
int3
add
test
jns
out
addr16
jmp
mov
fnstenv
lods
leave
sbb
ret
mov
sub
xor
mov
dec
movswl
and
ret
mov
nop
iret
outsb
imul
scas
aas
sbb
mov
mov
std
or
jne
cmpsl
fistps
dec
out
das
inc
adc
pop
movsb
mov
mov
or
es
out
mov
push
xor
test
adc
mov
aaa
cld
mov
add
popa
pop
sub
ror
addr16
xchg
inc
add
loop
and
roll
mov
fsubl
inc
mov
cmpb
mov
scas
movsl
add
xchg
pop
mov
scas
ljmp
dec
in
in
lcall
xchg
iret
push
les
pop
cld
sub
sbb
scas
loop
cmp
lahf
inc
in
leave
loope
inc
adc
inc
sub
add
mov
mov
jle
scas
lret
stos
fidivrs
stc
push
mov
in
and
xor
jl
repnz
fst
addr16
jns
pop
rcrl
mov
jns
cmp
int3
or
jae
push
adc
jl
cmpsl
and
enter
xor
hlt
jae
mov
shlb
scas
dec
and
xchg
xor
imul
sbb
jl
scas
add
lods
sbb
test
pop
push
and
shlb
aaa
testb
pop
jbe
dec
xchg
sub
popa
jb
inc
shl
adc
adc
cmp
cmp
jnp
pop
insl
popa
fwait
sti
xor
in
mov
xor
std
loop
lea
push
xchg
stos
cmpsl
jne
push
dec
mov
stos
sub
adc
adc
dec
insb
add
out
imul
jmp
lods
sub
or
or
mov
out
jo
loopne
mov
sbb
mov
jmp
shl
in
adc
xor
mov
imul
aaa
jae
jns
push
and
xchg
jnp
hlt
roll
movl
inc
mov
fstpl
jp
jl
pop
fidivrs
sbb
nop
add
lods
inc
push
and
jle
aas
lods
xchg
adc
pop
test
in
or
cmp
rorb
stos
add
stos
ret
loop
jle
xchg
stos
xchg
jo
jge
jae
inc
out
pop
andl
push
sub
fistps
scas
pop
inc
xchg
add
xchg
jmp
adc
and
sub
mov
add
andb
xchg
inc
idivl
in
jae
cmp
fimuls
xor
inc
es
sub
call
in
add
fadd
lock
xor
xchg
cmpsl
xchg
adc
dec
push
jne
pop
outsl
pop
gs
mov
xor
jmp
or
lods
and
out
add
xchg
jb
lock
mov
push
fcomps
sbb
add
jbe
mov
outsb
xchg
pop
cs
mov
fcmovu
xor
pop
inc
xchg
call
movb
push
pop
stos
or
xor
mov
sar
cmp
and
aad
cmp
rcl
call
ljmp
js
jns
jecxz
push
inc
loopne
mov
loope
pop
jmp
xor
loop
aad
inc
pusha
fcoms
into
jle
and
or
mov
push
adc
pop
mov
sub
mov
cmp
test
push
sbb
jb
dec
call
xor
hlt
add
insl
mov
xor
pop
mov
out
addr16
adc
cmp
outsl
inc
cmc
mov
jl
mov
imul
int3
mov
nop
addr16
fbstp
mov
lods
jne
shlb
fwait
into
xor
xchg
mov
mov
clc
pop
mov
inc
aad
pop
pop
and
into
push
pushf
push
mov
hlt
pop
sbb
ret
test
addb
and
scas
ljmp
sbb
xor
pop
scas
outsl
xor
or
push
lea
std
mov
sub
xchg
aam
xchg
sbb
mov
push
push
jl
sti
pop
test
mov
inc
add
pop
movsb
js
or
cmpsb
mov
fxch
add
pop
aam
mov
dec
test
add
jmp
adc
sbb
inc
mov
push
mov
fsubrl
mov
or
lret
push
xchg
mov
sti
fdivl
enter
xchg
jmp
stos
xor
pushf
xchg
pop
call
in
fidivl
sbb
mov
decl
dec
ja
ljmp
ss
int3
in
test
mov
js
cs
xchg
aas
outsb
orb
jbe
fs
jbe
pop
scas
les
arpl
in
test
into
int
pop
jb
mov
call
and
gs
xor
mov
stc
repz
mov
push
mov
push
aad
cmp
inc
stos
insb
not
shrl
iret
pop
into
cmpsb
mov
icebp
pop
cs
dec
shll
lods
lret
sbb
xor
lahf
ss
ret
mov
fiaddl
or
cmpsl
push
loopne
pop
es
mov
mov
vmread
and
mov
addl
divl
or
call
dec
clc
shll
pop
test
aam
int
cld
push
pop
jnp
arpl
es
dec
outsb
aas
jle
mov
in
pop
push
push
gs
out
imul
mov
adc
or
and
and
xchg
inc
pop
pop
jg
or
mov
jl
mov
adc
fwait
inc
mov
jns
in
mov
xorl
cli
in
pop
fldpi
cmp
pop
push
pop
roll
pusha
and
pop
dec
repz
inc
adc
push
push
mov
adcl
inc
and
mov
adc
lahf
adc
jno
xchg
adc
xor
pop
rorb
test
enter
mov
sbb
loopne
lock
mov
fwait
or
or
jno
iret
scas
inc
outsl
lds
cmp
adc
gs
mov
pop
test
sub
cltd
push
dec
ljmp
sbb
sbb
fsave
in
push
pushf
pop
sub
es
xor
pop
jge
inc
insl
add
cmp
aas
jnp
add
movsl
jmp
push
cmpsb
xor
mov
mov
push
stos
add
add
sbb
popf
sbb
fs
cmp
in
sub
call
cmc
les
sbb
pop
das
cmp
and
dec
lahf
popf
mov
fcoml
jg
stos
xor
out
in
mov
jecxz
aad
xchg
jae
hlt
stos
adc
sbb
pop
adcl
add
pushf
test
and
cmp
or
cs
inc
or
sti
xchg
mov
pusha
fistpl
dec
mov
in
cmp
adc
mov
push
adc
xchg
pop
popa
jmp
sub
dec
insb
stos
lret
cs
xor
cmpsb
cmpsb
sub
adc
adc
dec
aad
jns
outsb
jge
inc
scas
movsb
pop
ret
inc
out
arpl
ret
jle
jno
and
or
cmpl
shl
cmp
mov
lret
imul
xor
mov
jns
xor
mov
shrb
inc
push
adc
jnp
mov
shll
rcrl
stc
movsb
jmp
stc
daa
mov
jge
lret
movsb
leave
in
sbb
inc
add
ret
lods
add
push
or
neg
or
xor
pop
sub
dec
mov
xchg
scas
sub
stc
add
in
mov
sbb
mov
pop
aad
lcall
ja
jecxz
or
cli
mov
push
adc
sub
push
into
std
nop
xor
dec
hlt
fstps
mov
rolb
mov
and
or
or
enter
testl
add
lods
jb
int
rclb
cmpsl
dec
test
ret
je
and
ljmp
test
push
xor
xor
jl
jge
js
cmp
mov
std
sub
mov
fs
in
int
cmp
mov
xchg
outsl
out
leave
clc
push
jp
dec
xchg
stc
sub
lods
add
pop
cli
dec
and
hlt
cli
pop
mov
cmc
andb
push
test
ja
les
insb
lahf
cmpsb
cmp
sbb
pop
ret
cmp
xchg
mov
into
add
mov
or
push
aas
or
add
mov
cld
adc
mov
cmc
and
dec
mov
iret
pop
fldt
xor
xor
movsb
mull
js
xor
push
repz
adc
cmp
imul
sbb
fbld
push
mov
incl
cmc
xor
pop
dec
cmp
xor
gs
jb
adc
sbb
mov
dec
adc
pop
mov
pop
inc
test
ja
or
mov
in
xchg
test
dec
push
vmwrite
jnp
sub
mov
das
outsb
daa
bound
mov
xlat
sbb
push
mov
popa
pop
xor
lahf
std
ficoml
push
sbb
lods
mov
inc
add
out
sub
gs
xor
mov
andb
add
mov
xor
push
xchg
cmp
dec
stos
dec
addr16
dec
cmp
inc
jno
loopne
les
xchg
cmp
clc
imul
sub
jg
decl
hlt
ret
ret
rcll
mov
loope
jle
cwtl
cwtl
scas
sub
in
xchg
mov
jl
inc
mov
jb
adc
adc
dec
dec
jbe
ja
push
push
cmpsl
inc
and
dec
cltd
or
aaa
sti
lods
sub
loope
mov
jb
js
jl
xchg
push
dec
iret
add
mull
cltd
cmp
and
add
test
clc
mov
mov
mov
and
add
push
jl
mov
inc
insb
and
xor
jmp
test
xchg
push
jbe
or
mov
adc
leave
and
ds
jno
xor
nop
pop
jmp
xchg
hlt
cmp
sbb
in
leave
nop
inc
jne
mov
lock
cwtl
out
test
aas
cmp
testl
cmp
mov
inc
pop
inc
jecxz
mov
mov
cwtl
enter
xchg
cmp
lods
or
into
divb
sti
mov
inc
xchg
ret
inc
arpl
push
lea
xor
sti
or
sub
repnz
mov
pop
hlt
push
push
dec
inc
mov
jmp
mov
jle
jg
dec
sti
cltd
push
xchg
sbb
push
hlt
sahf
push
andb
xchg
call
xlat
fmull
into
cmp
add
lcall
push
add
js
mov
mov
sbb
or
or
xlat
loopne
hlt
mov
imul
inc
jle
jg
or
stc
xchg
jo
cmp
popa
fldcw
jae
es
loope
lret
aas
or
fcoml
xchg
push
push
push
jge
sub
add
leave
xlat
pop
lahf
inc
xchg
mov
daa
lret
inc
decb
jae
add
pop
and
and
jns
cmpsb
or
std
or
mov
mov
pop
gs
sub
jne
in
or
rcrb
push
dec
dec
nop
stos
div
mov
add
adc
iret
sub
outsb
cmp
push
aaa
and
fstl
pmullw
sub
insb
jno
loop
sti
loopne
add
xchg
dec
jmp
loope
sahf
xlat
or
scas
test
pop
nop
push
lods
icebp
push
or
xor
lcall
iret
or
jne
in
sbb
icebp
sub
frstor
outsl
loop
mov
and
loop
add
push
fstl
mov
aaa
out
pop
je
ljmp
xor
fidivs
fnstenv
mov
shr
sub
call
aaa
xchg
jge
ss
mov
adc
push
int3
outsb
mov
sbb
rcll
xor
test
sti
cmpsl
outsb
movsb
es
push
mov
adc
aad
in
mov
and
cmp
insl
inc
dec
aam
scas
sbb
shl
pusha
out
mov
pop
cmpsl
inc
stos
lds
sub
jb
and
jecxz
mov
fidivrs
and
mov
shl
or
lret
push
leave
jo
repnz
xchg
inc
test
push
mov
imulb
lcall
scas
adc
sub
cmpb
ret
sbb
or
cmp
sub
fcoms
enter
call
arpl
xchg
dec
mov
sbb
or
cmp
sub
fcoms
enter
call
arpl
nop
dec
mov
mov
ret
or
cmp
sub
fcoms
enter
in
inc
cwtl
dec
mov
inc
lods
fwait
pop
mov
push
jecxz
jae
add
in
bound
adc
negl
in
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
divl
test
aad
stc
hlt
les
data16
adc
add
je
fs
push
pop
inc
divl
test
aam
mov
push
adc
add
sbb
fs
push
pop
inc
divl
test
aam
les
inc
pop
cmp
gs
and
bound
imul
xlat
cld
stos
test
sub
pushf
pop
jg
push
xlat
test
xchg
bound
add
mov
enter
hlt
cmpsl
popa
imul
loop
test
mov
lods
inc
push
mov
sar
mov
cmp
shlb
fsts
push
dec
xchg
pop
fs
pop
cld
div
out
mov
push
mov
adc
loop
test
je
lcall
pop
hlt
aaa
les
or
jl
insl
adc
ret
lret
xor
jmp
add
fs
push
push
mov
adc
dec
les
push
sub
faddl
ja
in
outsl
adc
stos
aaa
push
push
xchg
mov
movsb
xlat
xchg
movl
xor
and
adc
add
je
fs
push
pop
sub
mov
xchg
aad
repz
test
push
jno
jo
aaa
daa
add
or
icebp
stos
test
mov
ss
push
inc
inc
popa
sbb
jnp
jb
xchg
lock
mov
fisubl
les
addr16
adc
add
je
fs
push
pop
inc
divl
test
aam
les
addr16
adc
add
je
fs
push
pop
inc
divl
inc
dec
andb
add
push
mov
mov
push
out
out
or
add
cmpsb
sbb
fisttps
fisttpll
mov
mov
mov
shrl
call
jecxz
mov
push
out
cmpsl
mov
xlat
pusha
adc
ds
andb
hlt
out
xchg
mov
sbb
xor
ss
jbe
std
cmpsl
and
and
add
out
and
test
mov
sub
in
outsb
divb
sub
daa
and
orl
ss
jg
cmp
test
leave
out
or
push
xchg
sub
out
xchg
push
imul
cmp
mov
stos
jb
dec
and
cmpsl
push
scas
fdivs
mov
lcall
aas
cmc
das
adc
mov
pop
pop
pop
jl
lds
in
mov
jle
push
mov
mov
lea
insb
cmp
lea
lods
nop
adc
sbb
push
jg
jmp
sbb
sub
jp
mov
mov
loope
pop
xor
push
adc
inc
adc
push
shrl
jmp
adc
cmp
cmp
cmp
xchg
pop
mov
mov
or
in
mov
inc
jo
fs
fldcw
inc
push
sti
outsb
sbb
mov
imul
mov
push
mov
inc
xchg
mov
fildl
xchg
sarb
mov
push
push
cmp
adcl
and
cmp
jne
subb
jnp
std
decl
or
arpl
mov
in
in
fbld
jnp
fs
push
sub
or
jae
ljmp
je
loop
out
cli
xor
or
das
ds
push
jg
jns
mov
outsl
aam
pop
inc
cmp
or
jne
dec
stc
sbb
pop
sbb
cltd
aas
out
or
mov
mov
jg
add
lret
mov
orb
fwait
insb
cld
outsb
outsb
gs
xchg
in
scas
iret
icebp
mov
xchg
cmp
sbb
insl
push
jle
cmc
movsl
popa
cld
xlat
jle
mov
ljmp
arpl
and
mov
mov
test
lock
adc
or
in
inc
dec
ljmp
or
orl
stos
add
push
jmp
in
gs
mov
enter
lods
rcrl
outsl
or
mov
xchg
xchg
or
cmp
sub
push
and
dec
push
xchg
aad
aaa
xchg
test
cmp
out
jl
fldcw
mov
mov
fdivs
pop
dec
cmp
sbb
repnz
rorl
outsl
mov
jo
cmpsb
xchg
pop
mov
rcrl
xchg
xor
xchg
mov
cmpsb
cmpsl
clc
iret
rol
adc
xchg
and
push
lcall
das
into
sbb
stc
jb
mov
jecxz
push
outsl
pop
loopne
addr16
fsubrl
fbstp
out
push
getsec
dec
add
xchg
fwait
mov
cmpsl
xor
mov
cwtl
iret
jl
sub
stc
lods
sbb
outsb
pop
loope
jge
lret
rcr
aad
push
push
orl
cwtl
pop
sarl
push
mov
fs
sbb
jle
push
nop
sub
aas
pushf
fsubrl
xlat
nop
scas
push
push
inc
jmp
bound
testl
mov
mov
sub
push
hlt
dec
and
pusha
rcrl
shll
movsl
ret
mov
adcb
push
outsl
lcall
pop
mov
push
ja
push
pop
xlat
xchg
pushf
and
push
pop
fldcw
xor
test
sbb
ret
inc
call
jno
hlt
adc
mov
faddp
or
mulb
fwait
mov
or
pop
fstpt
sbb
xor
aam
lret
lods
xchg
fbstp
out
fs
jl
mov
lods
leave
xchg
adc
test
adc
outsb
lds
dec
outsl
and
and
adc
mov
insl
add
mov
cmp
jns
ret
int3
cli
sub
imul
repz
sbb
movsb
mov
clc
pop
jo
xchg
sarl
xchg
xor
xchg
mov
or
mov
inc
daa
add
fstpl
gs
jnp
arpl
outsb
cmc
fisubrs
pop
cmpsb
adc
inc
insb
add
dec
mov
dec
sub
mov
push
mov
jecxz
and
mov
out
xor
nop
lods
fcmovnb
cmp
inc
mov
adc
fcmovnu
aad
mov
mov
push
arpl
mov
mov
inc
dec
pop
add
lcall
mov
inc
inc
loop
lret
jne
mov
push
xchg
pop
rclb
scas
je
popf
mov
subb
or
dec
idivl
sub
iret
dec
sub
or
dec
sarb
mov
stos
addr16
jne
mov
dec
jo
inc
jle
jae
jecxz
push
mov
dec
adc
rorb
rolb
outsb
cmpsb
insb
sub
lods
clc
jno
or
lods
in
pop
or
xchg
orl
iret
and
xchg
test
jb
std
scas
adc
daa
jae
icebp
arpl
lock
sti
shll
sub
ja
movsb
ljmp
out
cld
hlt
sub
sub
mov
xchg
les
leave
inc
aaa
mov
cwtl
mov
jl
dec
out
fsubrl
inc
dec
popf
add
fistl
inc
dec
ret
xchg
cli
mov
ret
outsl
ja
call
cmpsb
add
mov
mov
mov
aam
push
mov
cmp
stos
dec
xor
scas
sub
push
adc
test
add
xchg
dec
sub
rolb
ja
mov
dec
aam
and
push
push
iret
push
and
push
aaa
aam
ljmp
lcall
or
insb
cwtl
inc
xor
adc
dec
nop
notb
adc
aad
cmpsl
test
adc
hlt
in
test
fwait
int3
ret
scas
dec
pop
insl
dec
out
adc
lods
fidivrl
jno
loopne
add
dec
xlat
xchg
pusha
xchg
je
sbbb
mov
inc
sub
cmp
loope
out
lods
lods
ljmp
subl
int3
int
out
pop
mov
stos
cwtl
lea
jb
mov
data16
ds
loopne
mov
mov
xchg
adc
and
jbe
popa
push
rorb
loope
xor
mov
dec
repz
sti
xor
jb
inc
jl
adc
sub
rol
pushf
jecxz
aad
and
push
sbb
stos
cmp
in
lcall
xorb
push
cmc
iret
mov
pop
int
adc
orb
xchg
data16
pop
xor
or
sub
cli
in
push
push
ljmp
test
lock
sbb
clc
insl
rcrl
xchg
stos
orb
cmpl
dec
lods
mov
push
inc
add
inc
jmp
xor
inc
jae
or
call
test
sbb
pop
cmpsl
mov
div
das
xchg
stc
iret
push
xchg
xor
xchg
fisttpl
cmp
sbb
xor
jg
insl
jb
stos
cmp
jmp
inc
mov
inc
sbb
aaa
call
or
sti
inc
xor
dec
fsubr
lahf
js
push
test
cmc
cmpsb
cmp
dec
or
xorl
daa
sti
jno
shrl
jo
pop
pushf
sahf
cmp
and
shl
push
shl
sbb
lods
mov
aas
dec
sub
push
inc
xor
mov
jg
lret
mov
sahf
movsl
inc
leave
mov
sbb
mov
call
dec
jge
stos
mov
jbe
setle
sub
inc
movsb
push
inc
add
arpl
dec
jle
mov
lea
jp
popf
jne
jmp
push
les
out
jmp
adc
mov
pop
sahf
xor
fs
jb
fnsetpm(287
mov
movsl
lea
sbb
jg
jle
push
xchg
lret
std
leave
je
jns
jo
clc
adc
imul
xor
or
rcll
jns
fs
xchg
leave
in
pop
sub
cmp
aam
out
sbb
add
stos
adc
dec
add
pop
outsb
xchg
jbe
inc
aas
mov
push
fld
incb
sub
adc
adc
dec
adc
push
cli
out
add
mov
testb
or
pop
mov
outsb
push
sbb
leave
faddl
arpl
imul
inc
adc
aas
shlb
sbb
mov
js
cltd
cmp
cmp
sbb
fcompl
rolb
xchg
sub
insb
dec
incl
sub
int3
push
les
aam
loope
or
jmp
popf
jp
sti
push
cmpsl
mov
sti
fisttps
andb
adc
sub
ret
mov
dec
sbb
mov
stos
sbb
inc
mov
dec
add
out
inc
das
xor
mov
mov
mov
push
push
mov
mov
xchg
jae
clc
pusha
cmp
iret
jns
imul
cmpsl
div
popa
insl
dec
dec
aaa
adc
hlt
int3
mov
stos
push
addb
das
mov
xchg
pop
push
lods
repnz
bound
xchg
into
cmp
lret
mov
add
rolb
jp
fiadds
popf
shl
fld
sub
xor
cmp
insb
sbb
jbe
mov
fiadds
sbb
xchg
sbb
cli
pop
into
fsubs
mov
mov
popf
cmp
ficomps
sarl
ds
fwait
pop
into
mov
jnp
std
aas
adc
cltd
lret
adc
jno
out
cmpl
orl
mov
cmpsl
xchg
xchg
xchg
cld
mov
or
or
aaa
or
mov
movsl
pop
int3
pop
repnz
and
loopne
shlb
xchg
mov
out
adc
cmp
fnstenv
lods
adc
loopne
js
nop
sti
dec
push
lcall
ret
mov
add
mov
clc
push
lds
inc
push
pop
mov
icebp
or
pop
jecxz
or
subl
mov
mov
dec
mov
iret
push
sti
sbb
push
jo
ffree
loop
pushf
jge
or
pop
and
mov
inc
jge
or
divb
sub
cmp
cmp
insl
icebp
lret
mov
hlt
jp
cmp
ja
pop
pusha
sbb
imul
or
mov
call
sub
fwait
jbe
mov
cmp
add
faddl
adc
inc
xchg
mov
and
jnp
pop
fmulp
inc
int3
push
mov
roll
pushf
rorl
cmc
jl
and
in
lcall
xchg
addr16
enter
adc
cld
negb
gs
cmp
out
adc
push
insl
stos
pushf
js
xor
ret
fmul
sub
pop
jl
cld
xor
lds
es
mov
cmpsb
xor
pop
ljmp
add
aas
jno
inc
adc
rol
mov
sbb
les
jo
mov
jns
jg
xchg
pop
jmp
lock
lock
sub
push
mov
repz
mov
xor
fisubl
cmpsl
push
sub
push
lds
movsb
cmp
nop
outsl
les
jp
mov
mov
xor
test
jle
mov
and
lods
sbb
mov
popf
aas
int3
xor
push
pop
push
push
push
neg
xchg
sub
or
xor
mov
push
dec
nop
std
push
pop
dec
daa
jmp
dec
pop
mov
ret
push
sub
ja
cmpsw
jmp
pop
sub
mov
imul
shrb
cmpsb
out
shrl
icebp
int3
jp
stos
loope
mov
inc
rcrl
xlat
stos
push
insb
mov
sub
mov
hlt
and
xlat
and
in
push
mov
stos
cmp
mov
mov
or
nop
or
out
mov
xor
push
iret
setns
mov
inc
or
mov
shrd
dec
sbb
pop
imul
stos
pop
cmp
enter
fistps
into
and
lret
adc
push
sub
rclb
pop
adc
movsb
mov
inc
lds
jne
pop
pusha
cmp
leave
jno
xor
int
leave
out
and
fsts
jb
bound
fisubrl
ret
push
clc
in
mov
sbb
enter
push
push
or
pop
add
push
test
bound
and
mov
and
bound
loope
dec
push
in
jno
retw
fsub
xor
xor
mov
sbb
and
imul
loop
xor
movsb
sbb
pushf
lods
inc
or
or
addr16
cwtl
idivl
jne
testb
xorl
inc
pushl
xchg
mov
fsubs
scas
adc
fistpll
adc
mov
aas
dec
inc
jg
repnz
iret
add
popa
push
mov
mov
mov
xchg
sti
fldenv
dec
pop
jno
inc
xlat
fs
mov
mov
or
pop
dec
push
lret
gs
in
xchg
jge
call
add
daa
cmp
pop
xchg
dec
sti
mov
pop
or
mov
mov
int3
aad
std
and
ss
mov
adc
jmp
or
hlt
pop
xor
push
sbb
mov
test
mov
inc
mov
sti
outsb
mov
pop
out
jmp
stos
xchg
lret
outsb
nop
subb
cli
jge
sbb
jecxz
and
pop
gs
lods
pop
test
mov
arpl
into
aaa
or
gs
mov
jle
leave
or
int3
xabort
icebp
dec
mov
outsl
fsubp
adc
jl
cmpsb
and
mov
mov
push
divb
push
out
push
test
aaa
fadds
xchg
jmp
data16
fsubr
jecxz
push
jo
fnstsw
fcomip
dec
aad
xor
xchg
das
dec
dec
cmp
xchg
or
pop
out
push
sbb
sbb
int
test
mov
std
movsb
leave
jmp
in
mov
xor
jecxz
cwtl
dec
xchg
lret
xlat
cwtl
in
jns
adc
jnp
fstpt
rcll
sbb
fstl
mov
dec
dec
test
push
mov
sub
adc
sub
xor
call
gs
mov
dec
mov
les
jl
mov
push
insb
jo
or
inc
push
and
in
cmp
fsubp
or
xchg
jg
push
lret
test
jne
inc
lods
ror
push
add
dec
test
mov
mov
mov
add
cmpsl
dec
sub
xchg
xchg
xor
sbb
or
cmc
cmc
in
jmp
pop
pusha
lock
push
jne
loop
call
movups
inc
bswap
sbb
jg
mov
pop
daa
out
aam
pop
and
sahf
add
sub
cld
cld
frstor
ret
mov
push
aad
mov
jmp
aas
lret
add
push
mov
outsl
fcmovb
push
icebp
sub
std
adc
push
in
cmc
add
pop
rorl
xchg
sbb
push
add
test
xor
jbe
pop
cmp
xchg
inc
jnp
adc
mov
push
rolb
ss
push
sbb
ficoml
fstps
mov
call
mov
dec
imul
leave
dec
dec
mov
mov
and
xchg
mov
or
ret
and
into
out
mov
cmp
into
push
xchg
jp
leave
xor
fwait
out
sti
pop
ljmp
mov
pop
push
in
das
push
adc
push
jnp
andb
cmc
mov
and
mov
jnp
loop
adc
sbb
xchg
sbb
pusha
cmp
dec
xchg
pop
push
fdivl
and
mov
mov
and
fmul
lea
and
dec
push
and
jp
cmp
inc
cmp
or
js
mov
repz
dec
and
cmp
xchg
push
icebp
lret
cmp
notb
movsl
pop
mov
adc
xchg
loop
inc
outsb
cli
pushf
push
scas
repnz
int
cmp
pop
pop
sar
cli
xchg
in
sub
add
jno
push
cmc
lea
leave
jo
inc
iret
push
sub
push
test
testl
rclb
das
sub
dec
xor
push
fcompl
inc
es
inc
xchg
lret
insb
nop
stos
push
dec
lcall
subl
mov
js
add
mov
or
mov
add
pop
mov
xchg
xchg
insb
insl
repz
je
stos
ret
cli
cltd
push
fildll
fiaddl
mov
xor
stc
pusha
add
pop
mov
les
fcompl
mov
add
loope
lock
mov
sbb
loopne
scas
ret
adc
aad
sub
dec
fst
fldl
cmpsb
sbb
inc
jno
sarb
pop
xchg
imul
xchg
pop
scas
scas
fidivl
mov
fnstcw
xchg
test
out
jp
pop
xor
cmp
cmp
xrelease
cmp
jg
out
jo
lret
jo
sbb
inc
sahf
sbb
jae
aaa
pop
ss
jle
mov
pop
dec
fdivp
scas
jne
cmpsb
inc
dec
jmp
push
jmp
jp
out
ret
inc
rolb
popa
xor
les
ljmp
adc
fcmovnb
mov
mov
sub
sub
jns
or
xor
dec
nop
and
sbb
or
jb
fwait
pop
xor
aaa
push
test
lods
fists
sti
mov
cs
repz
mov
fsubl
jno
loopne
and
dec
cmp
sub
call
sbb
dec
popa
test
xchg
cmp
fistpl
jecxz
lret
push
mov
or
mov
push
xchg
jmp
stos
add
orl
aad
mov
sarb
stos
and
and
xchg
xchg
test
int
sarb
dec
sub
fisttpll
scas
pop
dec
sbb
xchg
test
xor
enter
fnstenv
sahf
jle
sbb
jmp
xchg
dec
xlat
ret
inc
adc
cmp
cli
iret
push
lock
mov
sti
cld
das
push
arpl
ret
sbbb
fs
cmp
ret
add
mov
add
xchg
jg
aad
lahf
mov
push
inc
push
mov
dec
sub
or
and
xchg
loope
addr16
jp
pop
pop
mov
sbb
into
push
popf
xchg
jle
add
in
or
rol
cmpsl
or
cmpsb
fdivrl
nop
fsts
push
xchg
fcoms
dec
xchg
shlb
mov
in
jnp
test
test
mov
js
loopne
sbb
fists
sbb
outsb
mov
aas
cmp
and
dec
push
inc
xchg
divb
loope
mov
loope
andl
pop
movsb
outsl
lods
jo
cli
sbb
lods
in
inc
pop
add
pushf
xor
out
test
shr
pop
mov
movsb
lret
fnsave
aad
sub
and
loopne
cmpsl
dec
shlb
cmp
dec
shrl
std
pop
mov
pop
ljmp
xchg
jnp
gs
mov
out
xchg
jbe
jno
ror
or
test
xor
fidivrl
jmp
xchg
cmp
jg
fcmovbe
sub
rcrl
js
out
fs
mov
inc
xor
jno
sub
addr16
rorl
dec
mov
push
dec
in
xchg
je
sub
sub
in
add
push
scas
les
pusha
add
dec
test
lods
pop
xchg
add
xchg
mov
mov
aas
lret
pushf
adc
mov
out
daa
xchg
fisubrs
inc
cmp
fisubl
adc
push
inc
sbb
lods
push
fists
lea
push
jmp
xor
push
lods
mov
out
mov
ret
nop
and
push
lods
mov
out
aad
out
dec
sub
shrl
fidivs
adc
pop
into
shrl
gs
mov
cmpsl
mov
pop
xchg
push
mov
jno
fsubl
frstor
xor
cltd
cmp
aas
jnp
out
add
lea
cmpsb
fnsave
outsb
xor
mov
dec
cs
js
push
lret
cmp
jns,pt
or
imul
mov
idiv
clc
arpl
jecxz
xchg
shrb
les
lahf
inc
mov
sbb
and
jne
mov
aad
cmp
add
leave
iret
ss
cmp
insl
mov
ds
xchg
std
out
ja
subb
int3
iret
mov
sub
jae
test
inc
test
jg
pop
ret
jl
leave
out
add
enter
stos
aaa
xchg
les
adc
or
lret
xchg
add
adc
push
dec
jg
shll
movsb
xchg
movl
xor
and
adc
add
je
fs
push
pop
inc
divl
test
aam
les
addr16
adc
add
je
fs
push
pop
inc
divl
test
hlt
cmpsl
in
aam
les
addr16
adc
add
je
fs
push
pop
inc
divl
test
aam
les
addr16
adc
jae
cld
push
fwait
stos
ja
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
add
adc
and
xor
dec
xor
and
pop
jns
xchg
lods
dec
in
hlt
in
add
adc
and
xor
inc
pop
push
dec
fs
insb
test
lods
int3
in
hlt
in
add
adc
and
xor
inc
pop
push
dec
fs
insb
test
mov
fcom
lods
les
popf
in
jo
jne
and
pop
jge
fwait
add
dec
add
sub
pop
inc
or
mov
call
pop
leave
roll
mov
jp
sub
je
jae
mov
aam
mov
movsl
mov
dec
lret
jge
adc
xchg
cmp
jae
jl
push
vmaxpd
add
gs
xor
sub
stos
dec
cmp
inc
sbb
inc
inc
dec
cld
xchg
mov
xor
jg
push
cld
xchg
repz
pop
je
cwtl
imul
fldt
inc
aas
insb
xchg
int3
push
xor
add
popa
cmp
lret
aad
sub
rol
fs
jmp
fisubrs
and
imul
sbb
or
cmp
sub
pop
push
dec
fs
insb
test
lods
int3
in
hlt
test
ja
bound
inc
and
cmp
lock
stc
icebp
clc
xlat
aam
ljmp
test
inc
cmp
pop
and
sub
or
insb
mul
repz
mov
xor
sahf
mov
bound
add
fs
insb
test
lods
int3
in
hlt
in
add
adc
and
xor
inc
pop
push
dec
fs
insb
test
lods
int3
in
hlt
in
add
jne
mov
nop
cmpsb
lock
jmp
aaa
jle
rcrb
das
in
fmuls
push
ja
std
int
mov
xor
or
sbb
mov
out
mov
sahf
or
and
xor
lods
enter
push
jne
lcall
nop
push
add
add
rolb
mov
mov
aaa
mov
xchg
dec
daa
xor
mov
push
pusha
loopne
mov
ret
movsb
sahf
cmpsb
mov
dec
sub
jge
loope
jns
mov
and
int3
pop
mov
bound
add
clc
lods
sbb
jl
pop
fidivrs
sbb
dec
call
cmp
into
jmp
pop
jecxz
clc
or
xchg
pop
ret
les
gs
adc
jge
cmp
ret
xor
aam
repz
lret
cvtps2pd
daa
in
imul
in
xchg
pop
jp
std
dec
nop
jne,pn
testb
gs
adcb
mov
dec
in
jae
or
vdivpd
in
imul
push
pusha
pop
into
cmpsl
out
movsb
scas
in
mov
cmpl
rorl
aad
frstor
push
or
cld
fisubrs
in
pop
push
and
jmp
aam
cld
stos
mov
jno
mov
stos
add
stos
movsl
push
push
inc
out
lret
lds
test
cmc
neg
ja
movsb
mov
repz
and
ja
mov
icebp
idiv
jmp
dec
fidivs
fists
sub
xchg
lods
daa
fsincos
mov
sub
mov
stos
pop
sub
filds
pop
loope
lcall
xlat
push
mov
das
xchg
in
fisttpl
xor
push
dec
pusha
jecxz
ja
aaa
popa
aas
mov
movsb
ja
sbb
dec
adc
mov
xchg
ljmp
lods
test
xabort
adc
cld
outsl
outsb
aas
add
stos
dec
add
cli
fsubrl
sbb
add
pusha
test
repz
movsb
jno
dec
sbb
inc
bound
cmp
xchg
std
adc
mov
jecxz
sti
jmp
or
xor
fwait
inc
loop
aaa
jns
push
xor
xchg
cmp
mov
sbb
cmpsl
adc
call
subl
sbb
imul
push
pusha
fcomps
adc
jp
or
rcrb
shrb
or
or
mov
mov
les
or
dec
dec
or
xchg
xchg
pop
and
mov
repz
xchg
add
push
mov
push
lock
cli
sub
enter
add
clc
and
push
mov
adc
aaa
push
fidivl
pop
shrb
icebp
cmp
jae
out
or
jbe
movl
lods
jl
out
cmp
mov
cmp
addr16
mov
push
xchg
dec
mov
cmp
dec
cmp
bound
mov
adc
fdivl
lea
inc
inc
daa
mov
sub
pusha
repnz
inc
repz
cmp
stos
inc
add
jae
stc
fadds
stc
mov
and
shr
xlat
dec
js
mov
sub
adc
push
xchg
loope
sbb
push
dec
xor
lahf
test
mov
ljmp
int3
push
push
add
movsb
iret
insl
iret
jnp
mov
jnp
push
dec
movlps
pushf
bound
aas
inc
aas
mov
cli
mov
test
stos
mov
pop
in
mov
es
lahf
nop
outsb
aaa
cmc
mov
int
pop
das
dec
in
or
cltd
dec
and
in
jne
adc
xchg
inc
pusha
daa
clc
rcrl
in
rolb
mov
pop
popa
test
mov
idivb
adc
cld
aaa
jecxz
add
fdecstp
jne
call
ret
adc
add
add
and
es
fs
inc
ss
pushf
pop
jmp
inc
movsl
mov
inc
shlb
adc
xchg
into
and
xchg
and
pop
and
push
xchg
xchg
inc
jg
cli
inc
jle
dec
icebp
dec
jnp
jne
int3
int3
aas
xchg
repz
and
cltd
dec
fs
sbb
insl
add
jno
sbb
lods
xlat
xor
push
pop
adc
push
arpl
push
or
dec
outsl
aaa
mov
ss
mov
push
repnz
cltd
mov
aaa
add
fnstenv
popf
adc
nop
mov
mov
push
pop
orb
std
fdivl
xchg
sbb
lahf
cwtl
mov
mov
pop
lea
lods
mov
jae
loope
lods
sti
cmp
jle
xchg
out
fdivrl
mov
ss
out
add
inc
das
mov
add
pop
add
cmovbe
mov
stos
mov
shrl
dec
push
push
pop
aad
mov
dec
mov
add
push
cmp
movsb
lret
jno
shll
fs
ljmp
dec
sub
dec
nop
stc
mov
ret
loop
fistpll
mov
test
jmp
aam
fimuls
mov
push
icebp
pop
xchg
fs
sbb
xchg
lret
fs
push
cmp
mov
push
mov
mov
sub
inc
xchg
mov
ret
or
mov
std
ljmp
pop
gs
jno
stc
sbb
xchg
es
pop
ret
push
aaa
std
dec
lods
push
mov
sbb
adc
jmp
ja
pop
jmp
and
repnz
dec
movsb
mov
adc
sub
test
mov
pop
jnp
and
mov
cld
stos
insb
lds
jle
pop
fs
and
ds
nop
lret
inc
addr16
ja
jns
sbb
cmpsb
test
jns
sbb
and
push
scas
rol
or
mov
push
pop
out
mov
lahf
pop
out
xchg
out
sub
test
aad
jle
pushf
outsl
data16
repz
test
xor
xchg
jns
xor
add
sbb
pop
ror
add
and
xchg
mov
mov
test
cmp
cltd
xor
js
test
fmuls
iret
scas
inc
fwait
sub
cmp
aaa
and
paddd
fsubs
mov
sbb
jne
push
shl
jle
xchg
sub
out
jo
sbb
push
cld
dec
push
pop
repnz
inc
arpl
les
pop
xchg
call
push
xor
push
jns
clc
orb
sub
cltd
xor
inc
dec
cmp
repnz
int
pop
es
stos
adcb
lods
out
inc
mov
push
repnz
js
dec
jno
enter
sbb
test
xor
aaa
ror
out
xchg
pusha
sbb
les
fs
inc
jmp
xchg
cmp
mov
ds
popa
js
fsubl
scas
lahf
test
movsl
clc
jmp
dec
and
pop
scas
or
iret
aam
sub
inc
out
sbb
adc
aam
sub
pop
push
lahf
ljmp
add
xchg
xlat
mov
imul
add
mov
rclb
mov
aaa
jmp
sbb
mov
lods
cmp
fs
jg
ror
sub
inc
filds
out
das
inc
mov
das
and
addr16
push
ljmp
leave
sub
adc
mov
daa
sub
push
push
fimull
out
push
xchg
fsts
mov
xlat
pop
jecxz
cmp
ret
ret
divl
push
xorl
jbe
add
cltd
pop
cmp
lock
jb
fnsave
add
and
adc
push
and
xchg
jmp
push
or
push
ret
mov
fcoms
test
aam
sub
jmp
pop
pop
fistpll
rolb
imul
mov
mov
test
xorb
push
sahf
arpl
jns
rcrl
popf
movsb
and
clc
mov
cmp
add
or
inc
ds
sub
test
ret
je
inc
scas
push
xchg
and
aas
mov
js
mov
insl
std
inc
push
insl
push
cmpb
movsl
enter
cmp
and
push
xchg
mov
popa
fs
mov
or
int
inc
dec
pop
sbb
or
movsb
mov
fldcw
fincstp
icebp
and
mov
mov
cmp
ret
xchg
sbb
pop
scas
into
mov
cltd
jp
jnp,pt
in
hlt
jnp
clc
push
stos
repnz
push
xchg
jmp
sbb
aaa
popa
das
xor
ja
insb
xchg
cmp
std
dec
nop
inc
add
pop
sti
rcrb
repnz
cli
int
mov
aam
and
inc
ret
popl
call
sti
pop
arpl
cmc
std
mov
je
xchg
fistpll
outsb
roll
or
or
sbb
cld
addr16
insl
shlb
pop
mov
cmpsl
popa
sbb
stos
push
sbb
add
imul
jl
xor
fldl
data16
test
jp
bound
and
pop
sti
sub
arpl
ss
cmc
push
lret
pop
sub
lock
mov
out
mov
pusha
aas
or
nop
adc
xchg
stos
dec
popa
cli
sbb
sbb
insb
das
loope
mov
fldl
mov
jns
ret
icebp
sbbb
mov
test
add
mov
aas
xchg
push
scas
stos
lock
push
clc
push
arpl
jno
js
jno
add
sbb
lea
jb
or
adc
mov
and
xchg
mov
and
ret
leave
inc
scas
insl
int3
xchg
cmp
dec
test
mov
mov
xchg
sbb
in
and
lret
loop
push
data16
xchg
fdivs
jmp
in
sub
idivl
repz
mov
xor
dec
lret
into
repz
fsubr
scas
jle
out
lods
jb
adc
push
mov
xor
out
rorb
jo
int
jl
shl
rorb
xor
aad
int3
out
mov
push
mov
sbb
mov
int
mov
jbe
xchg
mov
insl
sbb
test
sbb
xor
fwait
rcll
dec
mov
sar
cmp
insb
test
jbe
xchg
adc
or
popa
dec
int
mov
cmp
xlat
ret
cmpsb
and
ja
mov
dec
lds
sbb
lock
stc
jmp
push
xor
stc
xchg
mov
in
mov
jo
mov
sti
sub
adcl
jge
testl
clc
and
mov
ds
pusha
nop
sub
xchg
jne
mov
cld
into
jecxz
test
xchg
mov
push
mov
scas
adcb
jle
mov
xchg
ret
mov
jb
sbb
outsb
movl
neg
add
pop
or
push
out
and
jns
stos
pop
cmpb
pushf
jp
mov
mov
movsl
ret
jb
push
incl
popa
repnz
pushf
pop
push
popa
jbe
inc
lcall
mov
mov
dec
js
push
nop
jp
testl
iret
dec
test
push
pop
lahf
pushf
or
push
das
and
into
aam
xchg
mov
or
lcall
lods
pop
pop
mov
inc
or
in
js
pmulhuw
mov
ja
cs
xor
movsb
xchg
jbe
push
jb
int
ret
mov
test
push
inc
inc
jge
jmp
fbld
cli
scas
pop
js
and
jp
pop
pop
dec
jl
inc
int
add
sbb
cmp
mov
lea
loope
adc
ret
popa
decl
loop
or
and
jns
cltd
int
jae
jle
pop
outsl
test
cmpsl
mov
negb
in
sbb
sarl
imul
jb
pop
inc
push
mov
aas
xchg
push
loop
shrb
xchg
rcrl
vpcmpgtw
scas
mov
lea
je
insb
aaa
popa
xchg
mov
push
pop
stos
int
jge
sub
jecxz
pop
cmp
test
inc
jge
sub
or
adc
inc
xor
adc
fdivs
aad
mov
xor
out
pop
or
or
movsl
push
push
sbb
int3
sahf
lock
cmp
pop
push
pusha
adc
lods
rclb
sub
loop
push
mov
rclb
xchg
xor
inc
pop
ja
mov
jae
jp
jno
mov
mov
data16
sbb
cmovbe
xchg
dec
sub
mov
cwtl
dec
icebp
jp
daa
xor
int3
xchg
dec
aas
dec
or
insl
or
adc
xchg
inc
push
nop
bnd
mov
push
cmpsl
push
mov
mov
outsb
mov
push
adc
and
js
out
add
mov
xlat
xor
adc
rcl
pusha
es
pop
lret
sub
lods
pop
inc
dec
or
push
pop
mov
xor
xchg
xor
cmp
push
jns
dec
mov
mov
pop
cmc
dec
sti
add
add
mov
bound
leave
xor
mov
jl
sub
adc
pop
dec
mov
dec
xor
jg
xchg
cli
jmp
out
test
xor
sub
jmp
loope
push
data16
mov
lds
scas
jbe
xchg
xchg
andps
pop
in
mov
sub
or
inc
or
xchg
xlat
push
sbb
imul
add
insb
loopne
push
inc
es
shlb
shll
pop
loop
int3
out
jp
mov
and
fwait
adc
pop
or
dec
inc
sbb
cmpsb
sbb
cwtl
lahf
mov
push
mov
mov
in
imul
mov
and
mov
cmc
xchg
loope
mov
dec
scas
cmpsl
mov
xorl
mov
xor
xor
mov
rcll
scas
mov
shrb
or
push
xor
clc
jne
leave
lods
lahf
cmpsl
mov
inc
icebp
adc
xor
aas
pop
or
mov
in
cmp
sub
std
psrad
xchg
into
sahf
movsb
shl
xchg
lahf
mov
inc
repnz
int3
mov
adc
dec
rcll
sub
sub
sbb
mov
jl
fsubs
les
cmp
ds
xor
in
shll
cld
mov
sub
inc
and
push
add
mov
cmp
push
inc
pushf
shll
cmp
int
add
pop
cld
xchg
xchg
notb
repnz
adc
xchg
lea
inc
jnp
xor
test
std
xor
loop
arpl
mov
cmpsb
pop
sbb
cmp
movsb
ret
stos
decb
rclb
mov
les
nop
shrl
popf
jle
daa
iret
mov
lock
jbe
pushf
incb
mov
lahf
pop
in
push
test
andl
mov
dec
add
test
sub
jo
sbb
pop
push
inc
ret
out
push
xor
and
jge
cwtl
sub
enter
mov
jmp
fstps
sub
dec
and
mov
shrl
jne
pop
pop
pop
subb
sbb
stc
mov
cmp
jnp
xchg
loope
les
push
cmp
fmull
ds
in
stc
mov
push
sbb
push
pop
lds
imul
mov
xlat
pop
sub
lcall
and
ret
xchg
aaa
jns
mov
lret
pop
xchg
xchg
dec
push
push
mov
push
jne
push
pop
fiaddl
pop
out
cmp
jne
bound
je
mov
sbb
sbb
xlat
mov
dec
jbe
or
mov
mov
mov
cmp
imul
xor
mov
sbb
push
ljmp
leave
cli
shr
add
enter
lds
ss
in
shll
sub
inc
cmpsb
jno
ljmp
fildl
add
insl
mov
movsl
fisubrl
dec
mov
or
jmp
inc
mov
xor
hlt
push
cwtl
jnp
in
cltd
bound
push
nop
mov
movsb
sub
lahf
sbb
inc
hlt
out
mov
test
jp
sbb
xchg
sub
xor
mov
push
ficoms
pusha
and
pop
xlat
fwait
cmp
mov
movb
push
js
aam
repnz
fsubs
mov
mov
or
mov
and
mov
fdivs
out
rol
xor
push
cmp
mov
cmp
xchg
leave
in
cltd
cmp
jecxz
adc
loope
sub
pop
xor
push
inc
xchg
and
shll
call
jo
mov
inc
leave
or
ds
mov
sahf
iret
jo
pop
test
shl
rcr
lock
fstp
pop
mov
mov
push
bound
inc
mov
shlb
negb
dec
movsl
or
shl
dec
jl
push
pusha
pop
in
cmp
xor
mov
xchg
pop
outsb
adc
jnp
fs
daa
ret
mov
xlat
xchg
sbb
jp
push
mov
clc
dec
cwtl
std
mov
sbb
test
jge
mov
jno
jns
in
xchg
xlat
bound
fisubrl
xchg
xchg
out
cmc
icebp
sbb
out
fnstenv
fdivrs
lea
xor
lret
int
mov
pop
enter
lock
insb
test
pop
xor
mov
mov
lcall
cmpsb
push
pop
xor
pop
fnstsw
jg
push
shlb
in
sub
adcb
mov
daa
cld
add
lea
scas
addb
pop
int
ss
call
gs
bound
mov
sti
mov
repz
sub
xchg
and
jb
lds
adc
pop
jne
mov
xor
push
push
or
pop
test
or
movsb
rcr
mov
inc
repz
adc
loope
fwait
clc
ret
xchg
xchg
shll
subl
push
jle
cwtl
test
xor
jmp
fsubr
in
jae
add
push
outsb
adc
xchg
jbe
jge
insl
mov
pushf
add
fistpl
sar
and
jno
sub
lods
mov
pop
sbb
xor
in
nop
mov
push
sub
mov
xchg
int3
jbe
bound
shll
mov
mov
and
cltd
sbbb
cmp
negl
hlt
pop
pop
je
inc
lcall
pop
lret
sbb
int3
nop
add
adc
or
shr
rcl
sub
push
loop
mov
cltd
shlb
lock
adc
mov
sub
cmpl
and
aaa
int3
adc
mov
mov
out
mov
jl
nop
xchg
push
popa
pop
aaa
outsl
xor
fidivrl
cmpsl
mov
movsb
subl
aam
cli
sub
out
roll
pushf
ljmp
pop
or
adc
lea
nop
jns
loopne
push
cmpsb
nop
test
or
ljmp
jno
push
loop
add
out
mov
mov
mov
cmp
sbb
mov
xchg
shr
sub
lods
mov
pop
push
cld
jne
aad
jbe
pop
stos
jns
push
jns
cmp
fs
adc
inc
fsubs
xlat
lahf
sbbb
imul
jno
adc
repnz
cltd
adcl
jb
jecxz
push
or
jno
pop
add
lret
jge
stos
lds
in
iret
insl
add
ret
cmp
xchg
les
cmpsb
xchg
or
xchg
sarl
ret
mov
lahf
enter
add
incl
mov
mov
sti
lahf
jno
dec
daa
stos
stos
fistps
shlb
ret
mov
pop
fsubrs
xchg
pop
das
jno
inc
scas
in
push
insl
push
xlat
cli
push
outsl
mov
pop
in
xchg
add
loopne
and
xchg
and
mov
push
jae
sti
mov
xchg
ret
mov
pop
int3
frndint
pop
and
ret
scas
mov
push
dec
mov
jmp
pop
bound
pop
shlb
inc
add
jle
nop
mov
xlat
mov
out
clc
dec
shll
push
or
in
cmp
push
pushf
shll
fs
dec
pop
arpl
rcl
cld
stc
lret
out
push
int
mov
pop
fcmovu
int3
mov
cmpsb
nop
xchg
in
popf
movsb
loopne
or
adc
add
mov
lahf
and
add
in
out
jg
test
add
pop
stos
rorb
rorl
out
and
push
movsb
jmp
rcll
arpl
adc
int3
ss
jns
push
cmc
push
out
xchg
push
notl
add
adc
mov
sti
adc
es
mov
mov
sub
cmp
mov
dec
cwtl
mov
mov
xchg
mov
xchg
push
insb
mov
les
pusha
cwtl
inc
dec
jns
mov
mov
in
jb
insl
inc
and
movsb
aam
orl
pop
aaa
mov
xchg
arpl
frstor
test
cmc
call
in
hlt
or
cld
fwait
adc
xchg
dec
mov
shlb
sahf
in
imul
mov
and
sbb
sub
xchg
add
cmpsl
sbb
dec
add
or
push
push
cmp
sub
pop
push
dec
fs
insb
test
lods
int3
in
hlt
in
add
adc
and
xor
inc
pop
push
dec
fs
insb
test
lods
int3
in
hlt
in
add
adc
and
xor
inc
pop
push
int3
fs
insb
test
mov
aam
in
hlt
in
add
adc
and
xor
inc
pop
push
dec
in
hlt
insb
jnp
imul
mov
pop
xor
or
mov
cmpsb
jle
dec
xchg
setbe
inc
mov
repnz
fiadds
fdivl
mov
inc
sahf
mov
cmpsb
jle
dec
xchg
cs
push
push
ss
es
out
push
fidivs
data16
push
mov
mov
cmpsb
jle
push
xchg
aaa
out
push
movb
les
sub
push
out
add
sahf
ljmp
pop
in
hlt
aad
shl
pop
nop
cmp
jne
lret
std
inc
jbe
lds
or
fldl
push
fiadds
jmp
mov
stc
pop
adc
cmp
jp
repnz
insb
pop
mov
xchg
loopne
pop
outsb
testb
sub
loope
mov
and
mov
push
inc
push
add
hlt
dec
push
rcrb
dec
push
in
ret
pop
es
incb
mov
xor
popa
sahf
sahf
rorl
xchg
push
adc
fildll
xor
xchg
out
dec
ljmp
addr16
push
jno
mov
outsb
cmpsb
imul
pop
movb
mulb
out
xlat
push
jbe
test
inc
cli
lock
jle
dec
jecxz
lcall
jae
xchg
xchg
push
adc
paddsw
mov
repz
aam
jecxz,pt
mov
mov
push
jb
xchg
and
push
mov
xor
and
inc
sti
fildll
ret
das
xchg
testb
push
push
ss
es
push
into
push
fidivs
mov
inc
sahf
mov
cmpsb
jle
dec
xchg
cs
push
push
ss
es
push
into
push
fidivs
mov
inc
sahf
mov
add
sub
adc
outsl
mov
negb
push
xchg
test
call
xlat
xchg
xchg
mov
pop
dec
pop
pop
call
call
inc
push
clc
mov
fwait
pop
xor
jne
mov
ffreep
sbb
cmp
rcrl
rclb
mov
inc
add
sbb
cmpsl
imul
movl
push
inc
mull
mov
cmp
in
jecxz
scas
add
push
in
xor
inc
cmp
sub
cmp
movsb
out
cmp
cwtl
cmp
aam
adc
daa
mov
jb
or
lcall
lret
cmp
sbb
sbb
lret
push
jnp
pop
std
call
fnsave
sarb
lods
push
lds
into
into
insl
sarb
ds
mov
mov
shll
outsl
mov
jmp
pushl
add
hlt
call
pop
inc
sbbl
lcall
js
fwait
jne
or
mov
dec
add
xchg
adc
jmp
lods
int
clc
jb
sub
xchg
sub
and
jmp
add
bnd
dec
add
aaa
cld
push
lret
fcomip
les
les
mov
xchg
push
pop
sbb
in
jns
fwait
fs
clc
adc
push
sarb
cmpsl
aam
adcb
pop
call
add
in
mov
jmp
insb
js
lret
call
mov
jle
hlt
inc
dec
sbb
sahf
jecxz
in
daa
xchg
push
cmpsl
mov
adc
cmp
cmc
jg
push
push
je
xchg
shlb
mov
cmp
sub
subb
aaa
push
aam
pop
inc
pop
insl
xlat
mov
cs
stos
sub
xor
imul
add
xor
bound
lods
inc
nop
sbb
arpl
xchg
lret
jmp
test
mov
scas
lds
jo
out
jl
pop
xchg
jmp
xchg
pop
int3
movb
push
imulb
push
inc
sbb
dec
mov
jmp
icebp
stc
arpl
or
in
mov
inc
adc
push
inc
insl
mov
xchg
loop
xchg
dec
pop
dec
pop
cmpsb
outsb
adc
pop
lds
pop
out
mov
shll
bound
shrb
or
outsb
pop
lock
or
repz
stos
jg
iret
fucomi
ss
and
in
roll
lahf
aam
fldenv
js
push
mov
int3
fs
mov
adc
inc
imul
icebp
mov
clc
inc
adc
mov
out
and
push
jmp
in
aad
adc
inc
pop
push
mov
or
or
xchg
hlt
test
inc
leave
sbbb
stos
xchg
sahf
push
sarb
inc
xor
sti
cmp
push
jne
cmp
mov
pop
jmp
inc
sahf
jae
dec
push
test
fidivl
jecxz
mov
dec
stos
movsl
jl
lods
loop
cld
xchg
and
dec
add
push
scas
or
lret
push
or
xor
out
jmp
inc
xchg
jnp
pcmpgtd
push
test
add
xchg
dec
shrb
jmp
add
sbb
repz
es
jno
movsl
into
and
scas
ljmp
test
gs
xor
add
stos
lret
int3
sub
sbb
test
lret
outsb
inc
sub
inc
cmp
jge
push
adc
out
mov
fidivrl
gs
out
std
sub
icebp
aaa
cmp
cmp
mov
push
daa
scas
inc
lds
fmull
out
je
stos
sbb
cmp
mov
sbb
jge
dec
sub
xchg
dec
inc
das
popf
and
inc
data16
enter
mov
shrl
add
repnz
data16
push
mov
repnz
sbb
mov
push
sahf
jne
leave
mov
cmp
ret
rorb
push
sti
cltd
sub
outsl
mov
dec
adc
mov
or
lds
cmp
flds
dec
inc
mov
mov
cmp
sbb
ds
stc
sbb
ja
divb
pop
inc
aaa
xchg
jmp
rorb
bound
outsb
test
js
mov
in
bound
xor
cmc
popa
mov
sbb
dec
ss
out
sbbl
xchg
jg
xchg
mull
faddl
and
lret
mov
xchg
fdivrs
sub
aaa
mov
movsb
jne
cmc
popf
and
lret
xrelease
lea
cmp
test
dec
and
mov
nop
loopne
fptan
dec
adcl
clc
jno
and
cld
shll
test
inc
push
shll
jmp
adc
sub
sbb
stos
orb
xorl
and
cld
test
mov
xor
je
mov
and
dec
cmp
out
add
ret
aaa
add
mov
adc
push
push
push
xlat
enter
push
sub
movsb
hlt
jp
loopne
rorl
lods
leave
mov
icebp
cld
sub
xchg
test
mov
dec
xchg
push
sub
leave
cmp
pop
fdivr
out
pop
fcmove
shlb
nop
addr16
xor
test
mov
cwtl
cmp
outsb
lret
daa
cmovae
inc
cmp
xchg
pusha
outsb
push
stos
pop
insl
dec
jle
xchg
in
mov
scas
inc
shrb
dec
cmpsl
repnz
ss
xlat
repz
into
cmp
call
push
sbb
fldcw
sbb
pop
lock
pop
mov
leave
lock
fsubrs
sub
sub
fsub
lea
sti
and
bound
mov
inc
cs
lret
out
and
xchg
cmp
inc
mov
cltd
inc
mov
push
lcall
ret
sbb
mov
outsb
in
jo
fnstcw
xchg
jne
mulps
and
or
shlb
push
jae
push
loopne
sarl
jno
pop
pop
hlt
ret
jl
cmpsl
fidivl
subb
pushf
stos
movsl
nop
adc
or
mov
and
aam
and
mov
insb
test
add
jmp
lock
jns
xor
mov
fs
pusha
cmp
lock
mov
mov
or
push
mov
inc
call
mov
inc
mov
rclb
dec
loopne
xor
lods
pop
fidivl
mov
sub
scas
and
xchg
jmp
ja
lods
in
fyl2xp1
stos
out
or
adc
loop
xchg
scas
jle
mov
lea
insl
inc
xchg
xchg
or
js
cmpl
push
addr16
dec
scas
data16
xchg
mov
adc
stc
dec
xchg
inc
out
dec
sbb
pop
cwtl
mov
xrelease
xchg
bound
mov
add
push
notl
imul
dec
cmp
pop
push
xchg
insl
notb
in
push
cmpsb
les
insl
or
mov
sbb
bound
pop
add
jecxz
je
or
int3
xchg
mov
or
ss
cli
out
xchg
push
mov
adc
lock
sub
orb
dec
cmc
mov
jnp
adc
out
cmp
and
clc
mov
loope
adcl
mov
in
pop
lret
jb
cmc
xorl
shl
in
rcrb
mov
sub
pop
es
mov
out
sub
jo
xchg
int
es
mov
js
and
pop
int3
or
push
shrl
pop
pop
mov
pop
fldl2t
mov
lods
sub
mov
mov
ss
cmpsl
inc
sub
dec
in
jbe
mov
fidivl
fidivrl
ds
lcall
adcb
and
and
es
push
or
popa
in
nop
loopne
std
or
mov
mov
xlat
cmp
sub
cmc
negl
xor
add
jne
inc
dec
add
ljmp
or
mov
mov
ds
nop
rorb
xor
sbb
jne
test
sbb
les
lock
arpl
xor
imul
adc
jle
jbe
sbb
dec
mov
aad
inc
ficomps
add
je
aas
mov
ds
sbb
aad
pushf
mov
shl
jp
add
add
mov
push
cs
loope
aaa
fiaddl
lret
sarl
mov
jb
push
fwait
push
mov
inc
mov
mov
jmp
xor
inc
out
xlat
cli
movsb
inc
les
mov
push
fidivrl
ja
inc
outsl
pusha
or
cmp
inc
lods
insb
sahf
packuswb
sahf
out
push
sub
stc
mov
inc
out
cmpsb
repnz
sub
or
mov
aam
and
pusha
sbb
fs
cmpsl
cli
dec
lret
je
push
js
shl
negb
add
hlt
jg
ss
fsubrl
std
mov
mov
pop
xlat
rcrl
test
pop
cli
ret
cmp
cmp
rcl
mov
fwait
pusha
imul
mov
pop
icebp
dec
add
jno
mov
mov
jp
mov
xchg
jne
call
pop
sarb
ret
add
fs
jne
test
mov
pop
jmp
dec
scas
lock
sbb
es
jl
aas
and
int3
mov
add
cli
xchg
les
iret
rcr
sahf
jbe
jl
push
add
adc
push
inc
xor
xor
lahf
push
imul
jmp
insl
fdivl
loopne
or
outsb
cmpsl
fisubl
cmpb
push
sbb
xor
aas
jae
nop
pop
mov
bound
lahf
jecxz
push
push
sbb
pusha
and
data16
jo
negb
inc
dec
and
out
push
cmp
test
cmp
or
repz
jmp
sbb
sub
mov
lock
add
cmc
xor
insl
mov
test
pop
xchg
cmp
mov
sbb
mov
test
cs
aaa
ficoml
push
cmp
or
aaa
fucom
popfw
mov
mov
or
sbb
and
insl
inc
or
pop
inc
inc
aam
loope
pop
std
pop
and
sub
into
mov
xor
ds
sti
xchg
imul
push
out
adc
testb
sub
out
cmp
dec
dec
ss
pop
push
out
pushf
mov
mov
sub
fldt
test
pop
sbb
push
adc
cmpb
xor
and
sbb
test
mov
jo
dec
or
lds
fwait
adc
sub
aaa
jge
push
push
int
sbbb
out
pop
incb
adc
psrlq
or
cmc
stc
mov
cmp
inc
movsl
inc
jne
int
enter
in
shrb
insb
pop
les
addr16
push
je
addl
pop
push
sub
fldcw
pop
xchg
and
cld
inc
imul
adc
testb
pop
and
jo
outsl
sub
cli
push
pop
sti
push
adcl
jle
shll
ljmp
bound
fisubrs
lods
sbb
bound
push
dec
mov
lds
pop
mov
and
xchg
sub
enter
mov
dec
scas
or
ret
insb
les
rcrl
inc
popf
pop
arpl
pop
in
fnsave
cli
jb
aas
jne
xchg
cmovp
mov
imul
ja
ret
mov
push
aas
sbb
jb,pt
push
nop
aad
shl
lods
push
insb
outsl
call
dec
aad
rclb
dec
cmpb
mov
xor
and
shll
leave
xchg
fcmovne
push
mov
pop
pop
ret
sub
out
mov
hlt
cmp
push
insb
mov
jle
mov
jns
shrb
out
jp
rclb
arpl
int3
iret
mov
sub
adc
fnstcw
aaa
mov
xchg
cmp
push
fdivs
xor
add
inc
push
xor
lods
mov
lods
dec
imul
sbb
mov
aas
icebp
mov
movl
mov
je
pop
sahf
fnsave
fistpll
into
pop
adc
dec
mov
sti
hlt
and
jg
xchg
or
test
jg
call
push
or
xchg
mov
and
jle
sub
mov
mov
scas
xchg
subl
and
insb
arpl
pop
mov
sti
addl
imulb
cmpsb
mov
adc
mov
jmp
fadds
out
lea
jg
sbb
jnp
in
cmpsl
xor
jp
flds
movsl
adc
in
xchg
out
and
xchg
add
ds
sub
pop
adc
sub
loope
outsb
cmp
jbe
sahf
sahf
inc
ja
pop
adc
jecxz
push
imul
fucomip
arpl
pop
cltd
xor
nop
arpl
add
dec
mov
aad
xchg
imul
test
pop
jge
pop
mov
sbb
xor
cli
in
ljmp
notl
adc
pop
push
cmpsb
xor
jb
cmp
fucomip
loope
mov
pop
aas
lret
xor
sbb
in
xchg
lock
rorb
fdivs
rcrl
arpl
jle
sub
xchg
push
lret
popf
divl
and
jmp
shlb
cmp
scas
adc
push
mov
stos
sub
fidivs
dec
add
repnz
sbb
xchg
cs
lret
jle
outsb
aas
pop
sub
into
pop
sbb
dec
sub
out
aam
mov
test
xchg
pushf
mov
repnz
stc
sbb
mov
mov
adc
rorl
xor
xchg
test
je
popa
leave
shrb
mov
xlat
xor
xchg
sbb
jg
lds
in
stos
mov
aam
sub
push
aas
and
data16
lret
pop
int
stos
push
shlb
xor
cwtl
adcb
aas
mov
pop
push
in
pop
jnp
fs
loop
scas
and
incl
fsubs
loopne
add
push
and
or
cmpsb
arpl
movsb
xlat
bound
xchg
xor
insl
fnstcw
std
test
aaa
push
xchg
xchg
dec
add
fidivrl
adc
in
icebp
sub
mov
repnz
ss
lods
loop
sbb
mov
mov
imul
stos
sub
je
clc
lds
mov
xor
lds
or
dec
cs
ja
outsb
enter
adc
notw
fidivl
xor
jl
push
dec
mov
out
cli
jno
das
repnz
mov
mov
mov
lea
sub
sbb
cmc
or
inc
xor
add
jns
mov
cmpxchg
jae
sub
in
scas
dec
xchg
or
mov
adc
xchg
cli
mov
jl
sbb
dec
rorl
pop
fstpl
pop
cmp
push
fwait
xchg
stc
scas
mov
filds
outsb
cmp
jp
int3
mov
inc
cld
xchg
adc
push
data16
mov
scas
jmp
bound
pop
sbb
aas
push
fbstp
movsb
mov
stc
repz
dec
or
mov
test
jmp
insb
pop
add
jbe
mov
sbb
jg
jo
rcrb
rcl
mov
cmp
dec
fisttps
hlt
fldl2t
je
movsl
push
imul
jp
mov
sbb
jae
popa
shl
shlb
dec
mov
daa
insb
cmp
outsl
pop
les
jp
sahf
popa
or
mov
sbb
or
jne
add
or
popa
movsl
test
sub
daa
jb
aas
push
lds
sub
sub
sbb
clc
adc
push
mov
out
dec
fdiv
mov
cmp
push
push
jge
data16
popa
inc
sahf
mov
sbb
stos
jle
jnp
jno
jle
call
jnp
and
loop
xchg
sub
sbb
fwait
pop
mov
jmp
or
pop
sbb
icebp
mov
add
test
adc
sarb
sbb
nop
mov
dec
mov
std
mov
push
or
les
pop
test
cltd
cmp
jo
add
icebp
add
cmp
inc
add
fisubs
out
add
inc
push
pop
shrb
bound
int
fxch
das
push
scas
or
or
lods
and
pop
push
sbb
push
sahf
pop
and
in
push
sub
loopne
or
in
pop
dec
mov
and
jbe
movsl
orl
jno
sub
out
jge
imul
jbe
fadds
cmc
sbb
inc
cmp
jp
shrl
push
hlt
icebp
pop
mov
aaa
pop
mov
aad
lods
out
sarl
pop
jg
out
xchg
mov
jmp
xor
clc
test
cli
rolb
test
inc
outsl
push
add
inc
and
mov
xchg
ja
nop
mov
push
shrb
pop
stos
testl
addr16
mov
xchg
dec
and
movsl
and
adc
dec
ror
or
and
pop
je
hlt
sbb
jae
lock
pop
ret
rcrb
mov
ljmp
mov
inc
xchg
cmp
lret
dec
int3
lods
push
pop
cmc
mov
pop
mov
mov
in
inc
pop
jae
mov
mov
cmp
mov
inc
dec
mov
loope
jge
dec
arpl
popa
mov
pop
js
adc
loope
mov
jo
je
and
dec
mov
shlb
adc
and
fiadds
xorl
cltd
or
adc
in
cmpsl
jne
inc
mov
jg
pushl
inc
in
cmpsl
jecxz
fbld
dec
or
push
push
mov
mov
stos
pop
vpmullw
mov
enter
nop
jmp
repz
add
lods
out
mov
and
lahf
jecxz
sarl
push
mov
jp
ja
xchg
jae
in
push
test
int
cmp
aaa
aas
fldenv
jae
pop
jl
mov
xchg
shll
mov
mov
cmp
test
sti
notl
gs
int3
das
clc
fsub
mov
lds
decl
cld
pop
push
aaa
xor
sbb
sbb
adc
das
dec
jle
mov
fwait
mov
and
xor
adc
test
sub
jae
fcoml
pop
push
out
notb
add
xor
push
push
cmp
and
fwait
and
sub
and
pop
dec
pop
pop
movsl
mov
orl
js
dec
movsb
adc
std
xchg
inc
mov
jbe
adc
sbb
inc
shrl
aam
mov
inc
ret
xor
sbb
lods
int3
pop
sahf
mov
dec
cmpsl
adc
mov
push
and
test
fidivl
inc
out
xchg
sub
lods
sbb
test
cwtl
arpl
sbb
push
jb
or
subb
sbb
or
cmc
popa
stos
push
lcall
daa
sub
mov
pop
cmp
mov
inc
or
jb
fisttpl
lea
inc
out
push
test
jns
push
mov
xchg
out
or
mov
mov
insl
add
std
or
inc
sar
and
lods
stos
jmp
add
hlt
ret
mov
sbb
cltd
shlb
or
pop
mov
adc
in
pop
les
movsb
jp
pop
fbstp
add
mov
pop
pop
cmp
adc
es
jno
xor
adc
in
sbb
xor
cltd
lret
cmpsb
jg
push
and
loop
jbe
movhps
add
push
bound
stos
cmpsb
mov
mov
pop
je
xor
ror
jne
ret
pop
imul
rorb
xchg
andb
mov
push
xchg
xlat
stc
imul
inc
push
xchg
sub
dec
popa
push
dec
testl
aam
add
adc
jp
out
outsl
sub
inc
andb
sbbb
addr16
ja
lret
lock
pop
inc
test
or
int3
sbb
pop
or
ljmp
or
inc
and
pop
cmp
in
mov
cmp
sbb
or
push
ja
adcb
orb
cwtl
subb
out
mov
sub
cmp
into
push
aad
mov
adc
xchg
xchg
jle
jmp
dec
lret
in
cmp
pushf
jp
jns
flds
neg
fcoms
jne
pop
cwtl
gs
jecxz
xor
outsl
cwtl
popa
aaa
inc
and
insb
lret
imul
subb
mov
sub
pop
sti
ljmp
std
mov
out
push
push
ss
es
push
into
push
fidivs
mov
inc
sahf
mov
cmpsb
jle
dec
xchg
cs
push
push
ss
es
push
into
push
fidivs
mov
inc
sahf
mov
cmpsb
jle
dec
xchg
cs
push
push
ss
es
push
into
push
fbstp
mov
inc
sahf
mov
cmpsb
jle
dec
xchg
cs
push
push
ss
es
mov
es
inc
test
inc
in
aad
lds
add
xor
dec
mov
je
ficoml
inc
lock
mov
mov
inc
in
aad
lds
add
push
shlb
loope
lock
mov
cld
push
int
fnsave
add
xor
repz
dec
int3
dec
lds
pushf
or
and
xor
call
xor
fdivrl
and
int
xor
je
sbb
or
lahf
adc
mov
test
nop
xor
loope
push
sbb
jbe
and
push
sti
inc
repz
lcall
jg
lods
adc
int
inc
sbb
loope
dec
add
cmp
das
pusha
es
jo
aad
mov
subb
lahf
and
fdivs
xor
mov
lock
and
push
sbb
fidivrs
js
dec
cmpsl
fwait
data16
lea
sub
jbe
adc
inc
cld
push
aad
lds
add
xor
rorb
pop
lock
mov
subb
and
fadds
inc
jne
or
es
xorb
push
cmp
sub
push
xchg
ja
push
movsl
add
xor
lds
nop
add
or
xor
xor
rclb
inc
lock
mov
in
aad
lds
add
xor
rclb
inc
lock
mov
lret
movzbl
xchg
ja
aam
shlb
daa
into
jecxz
sti
pop
sbb
sbb
ds
in
int3
add
aam
std
shr
inc
xchg
xchg
push
jo
mov
xchg
jb
into
leave
jno
dec
dec
popa
out
mov
ja
inc
mov
inc
test
add
shll
and
insb
mov
enter
or
in
add
lret
xchg
arpl
fisubrs
sub
sub
repz
inc
mov
pop
in
cmp
add
dec
jae
daa
jl
pop
inc
dec
sub
xchg
adc
xchg
push
sub
mov
mov
das
pop
sub
lahf
sahf
aas
lret
fs
insb
jecxz
lret
dec
jecxz
jns
sbb
jbe
aam
sbb
mov
sbb
stos
push
stos
insl
sub
jno
lret
clc
mov
jns
pop
cmp
data16
dec
cli
shlb
inc
stos
es
mov
mov
push
sbb
cmp
sub
in
jmp
mov
xchg
sysret
idivl
or
push
inc
daa
movsl
mov
lret
push
cmc
arpl
push
adc
jbe
clc
push
cmp
jmp
lret
or
mov
xchg
stc
stc
jle
ljmp
or
dec
fistpll
pop
out
cmpsl
repnz
mov
jle
xlat
movsl
into
sbb
or
lret
sbb
dec
stc
cltd
loope
push
add
jae
psrlq
andl
inc
or
bound
jle
or
out
sbb
call
lahf
in
andl
add
jo
pop
mov
jg
xchg
orl
mov
mov
push
sbb
xchg
pop
dec
dec
icebp
sub
sub
jl
sbbl
lea
lret
push
jb
adc
sbb
scas
das
pop
add
stc
xor
bound
sub
mov
push
jno
xor
sbb
inc
push
rcl
in
fwait
pop
test
ljmp
sub
push
addr16
cmp
xchg
mov
add
pushl
push
test
xchg
xchg
rcrb
jp
cwtl
test
dec
or
mov
out
push
sbb
sbbb
jne
insb
mov
xchg
adc
mov
icebp
fcmovnbe
inc
stos
js
xlat
aad
dec
xor
fdivl
nop
test
or
jmp
rol
push
sahf
fistl
mov
clc
adc
cmc
clc
jecxz
xchg
mov
xchg
ds
in
dec
cmpsb
dec
call
or
aas
pop
fistpll
addr16
lret
out
push
and
mov
or
xor
scas
jnp
sbb
fildl
clc
adc
aaa
inc
testl
sbb
mov
popa
or
dec
lds
mov
and
sbb
pusha
mov
mov
in
movsl
out
pop
cmp
mov
or
lret
xchg
jg
mov
leave
hlt
xor
js
sub
mov
push
lcall
xor
push
sub
pop
push
xchg
mov
pop
pop
mov
inc
adc
xchg
mov
cmp
push
jae
fwait
and
sub
dec
ret
stos
inc
pop
ds
outsl
mov
test
and
push
int
xchg
pop
lods
mov
xor
xor
adc
mov
adc
popf
jno
mov
mov
pushf
push
shlb
iret
add
dec
push
popf
pop
lods
pop
daa
or
lea
into
or
cwtl
push
sti
orl
xchg
clc
dec
out
jge
inc
data16
xchg
inc
sub
pop
mov
movsb
std
lret
syscall
fucomip
mov
add
in
mov
adc
cs
mov
xor
sub
mov
xchg
aaa
jae
insl
ficoml
cmp
jns
popa
ret
cmpsl
aas
jb
inc
sub
and
jecxz
cli
mov
or
add
lret
add
xor
lea
add
fsubrp
pop
test
sbb
mov
sbb
rolb
pop
mov
cltd
xchg
movsb
rolb
adc
mov
cmp
aam
pop
cmp
pop
jb
das
cltd
cmp
inc
and
xchg
mov
lods
push
xor
lods
adc
add
jecxz
add
push
aaa
loop
mov
xor
mov
xchg
dec
inc
outsl
jp
mov
sahf
dec
cmp
std
aas
test
loopne
in
push
inc
leave
push
jns
stos
imul
and
lock
add
adc
lods
mov
sub
mov
js
andl
mov
cmpsb
inc
loop
bound
test
into
dec
jnp
cmp
mov
popa
push
or
or
xchg
jmp
movsb
in
cmpsl
sarl
jge
ja
out
int
js
lahf
cmp
js
rcrl
inc
cld
leave
popa
out
pop
cmc
iret
dec
jmp
ror
pop
lock
cmc
xlat
inc
ss
stc
push
popa
adc
popf
ds
es
popa
rolb
addb
dec
stos
dec
enter
xor
in
imulb
aaa
pop
sub
xchg
adc
fimull
jb
inc
dec
fstps
or
cli
fldl
push
mov
xor
mov
in
xchg
in
pop
int3
push
mov
dec
sub
popf
sar
aas
scas
or
ficomps
ret
xlat
fsubs
cmpsl
je
cs
adc
imul
mov
sub
ss
popf
iret
sub
hlt
mov
into
inc
dec
out
popf
push
sub
xor
inc
in
xor
test
push
pop
ds
sub
mov
push
rolb
push
bound
push
out
mov
mov
inc
add
dec
movsl
dec
mov
dec
insb
mov
ja
jmp
loope
mov
cltd
cmc
gs
aaa
loope
jne
mov
mov
mov
add
and
push
dec
sub
scas
iretw
je
jecxz
jo
inc
clc
sub
dec
mov
negl
pop
out
imul
mov
ret
xchg
fcmovbe
aam
mov
imul
mulb
or
lock
out
mov
imul
add
jle
jae
sub
xlat
or
xor
leave
cs
dec
inc
out
mov
adc
push
cmp
push
jae
pop
push
and
or
es
or
mov
push
jl
push
in
sbb
mov
repnz
inc
xchg
lds
adc
imul
adcb
cwtl
mov
jp
scas
add
mov
add
push
arpl
xchg
or
cmpsl
in
dec
sub
outsb
push
icebp
nop
mov
mov
rcrl
mov
cmpsl
jecxz
data16
fwait
mov
lahf
dec
push
je
ret
sub
cltd
int
cli
sbb
mov
xchg
xor
int3
cli
push
leave
lds
data16
sbb
rcll
xor
mov
inc
int
stos
xor
pop
mov
mov
and
dec
jmp
and
fisubrs
aas
push
pop
pop
xchg
hlt
mov
bndldx
or
mov
mov
add
xor
mov
test
cmp
xchg
jne
push
xor
adc
xor
sbb
fxch
push
test
xor
sub
shlb
add
adc
movsl
xor
and
mov
enter
cmovo
out
test
mov
dec
ret
sbb
adc
mov
les
jmp
add
and
js
jle
push
mov
pop
test
inc
sub
inc
insb
in
push
dec
pop
adc
cmp
sub
push
pop
or
orl
mov
fsubrl
fsubl
shlb
xchg
dec
sbb
sub
mov
xor
in
shlb
shl
and
test
rcr
mov
outsl
fimull
in
mov
or
push
pushf
das
mov
sar
bound
jae
aam
mov
imul
xorb
outsb
sub
mov
mov
mov
shrb
push
pop
mov
dec
ds
cmp
imul
push
or
das
push
mov
ljmp
push
inc
push
mov
xchg
jecxz
imul
push
mov
lcall
jbe
lcall
movsb
push
mov
add
mov
sub
xor
jmp
test
repz
cmp
push
or
sub
decb
in
lock
mov
les
adc
rorl
std
pop
pop
mov
jbe
jae
pop
test
orb
xor
pop
dec
and
cmp
aaa
int3
sub
stos
push
in
movups
imul
push
into
imul
xor
or
sbb
loopne
ds
push
jecxz
add
xor
inc
cli
mov
test
and
cmp
in
fiadds
clc
aas
cltd
xchg
stos
mov
dec
icebp
cwtl
cmpsl
pushf
push
outsl
dec
add
mov
adc
js
adc
or
into
hlt
mov
into
jb
imul
push
xor
sub
xchg
sub
stos
mov
rolb
test
into
or
push
jo
cmovae
movsl
mov
mov
repnz
scas
jae
mov
clc
or
jecxz
dec
loopne
ficompl
iret
sub
jne
jecxz
jbe
nop
lret
xor
pop
rcr
sub
sbb
xor
fldl
popl
pop
mov
push
xchg
fsts
popf
add
stos
lock
push
mov
outsl
cltd
xchg
pusha
ficoml
popf
lock
or
jmp
lahf
movsb
fcoml
adc
mov
xchg
sub
cmpsl
add
or
inc
cld
out
imul
jle
es
push
cmpb
adc
ficomps
push
out
xlat
inc
xchg
adc
fs
adc
xor
jle
or
rorb
scas
adcl
sbb
mov
push
es
sbb
icebp
push
or
popa
testl
dec
cmp
mov
pushf
xorb
faddl
push
mov
xchg
cmp
sbb
mov
fs
push
push
movb
test
mov
cld
inc
ret
cs
mov
mov
dec
xor
outsl
jle
das
movsl
shl
adc
adc
pop
sub
push
mov
jg
pop
ss
xchg
or
or
pop
mov
xor
pop
sbbl
incb
dec
xchg
push
mov
inc
inc
call
inc
insl
into
jbe
push
iret
loope
leave
cmpsb
jg
in
in
ds
mov
sbbl
mov
fnsave
pop
adc
dec
or
add
jns
mov
xor
fcom
mov
lods
or
rorl
or
dec
hlt
mov
fldenv
pop
mov
add
inc
sub
inc
loop
add
outsl
repnz
dec
test
nop
in
jg
dec
lgs
mov
or
in
rcl
inc
in
xchg
cltd
inc
shll
testb
add
mov
mov
jbe
mov
pushf
fwait
mov
enter
jmp
xchg
fdivrl
dec
push
scas
and
mov
test
cs
ss
dec
arpl
sub
mov
and
roll
xchg
push
push
pop
lds
outsb
popa
dec
lock
push
nop
in
push
xchg
cmc
add
cli
mov
inc
repnz
aas
mov
sbb
clc
jne
imul
inc
daa
sysenter
mov
lds
xchg
or
push
fildll
sbb
or
adcl
xchg
mov
push
das
adc
mov
adc
sbb
jno
or
mov
add
cmp
rcll
int
jne
clc
fildl
daa
inc
dec
add
ret
jnp
loopne
sbb
cmc
movsl
bound
jns
in
inc
aad
push
push
lods
aas
or
fs
cltd
add
test
loop
xor
dec
mov
dec
fstl
and
arpl
push
test
test
sbb
inc
aas
shll
mov
mov
lcall
push
shrb
in
out
mov
and
pop
mov
cmpsb
ja
pop
rcll
mov
pop
test
nop
aad
ficoms
push
sahf
add
jbe
and
leave
mov
mov
mov
sbb
inc
inc
and
pop
push
aaa
in
xchg
xchg
data16
inc
push
lods
xchg
stc
lea
cltd
das
test
inc
or
jae
mov
ret
jl
aaa
pop
inc
sbb
pushf
xlat
idiv
enter
les
push
xor
xchg
sahf
out
hlt
and
pop
icebp
into
sub
sysret
jne
popa
insb
orl
mov
fdivrl
jge
and
scas
cltd
dec
sbb
fxch
rcr
stc
shrl
inc
push
mov
into
mov
mov
mov
push
test
add
jle
or
test
imul
jno
jb
pop
es
popf
les
ja
inc
push
sarb
pop
fnstcw
out
pop
lret
sub
mov
xor
cmpsl
leave
inc
outsb
push
icebp
sub
xor
mov
add
orl
mov
xchg
jge
pop
or
ljmp
out
mov
aaa
leave
sbb
dec
xor
pop
sar
push
out
test
outsb
jp
ret
dec
rolb
inc
iret
add
inc
and
out
jle
jg
mov
sub
xor
sub
mov
pop
mov
pop
cmp
or
add
pop
jl
sub
lfs
jp
fstp
dec
scas
rol
sub
test
inc
leave
ret
out
gs
shrb
hlt
je
mov
movsb
xchg
dec
add
mov
scas
dec
inc
fisubrs
in
in
out
jp
inc
in
movsb
gs
add
sbb
mov
aad
inc
dec
sub
jbe
in
outsb
cmp
stos
dec
pop
mov
hlt
xchg
fists
das
into
cmp
cld
rolb
xor
push
adc
add
adcb
popf
xchg
int
add
ss
int
leave
ja
out
andl
popa
inc
xor
mov
clc
add
push
imul
ret
stos
lahf
ret
movsl
cwtl
imul
cmp
push
and
insl
test
cmpb
mov
in
js
repnz
sbb
stos
lds
jno
or
add
pop
mov
jge
ss
es
fdivr
iret
jmp
cmp
outsb
icebp
iret
int
xor
lahf
mov
push
adc
push
inc
dec
inc
xchg
add
lret
in
adc
adc
mov
into
mov
dec
xlat
sub
aaa
cwtl
pusha
jb
ret
shlb
fs
loop
divl
mov
test
cmpsb
cwtl
les
inc
mov
out
int
and
cli
mov
outsb
push
xchg
pop
cwtl
test
xchg
jno
cmp
inc
pushf
jecxz
cmp
inc
xchg
arpl
adc
cs
cwtl
fnstcw
das
cmp
mov
push
jmp
and
stc
push
fimull
mov
mov
mov
push
push
xchg
mov
mov
shrl
sbb
mov
out
pop
data16
test
cld
data16
xchg
or
push
and
movsb
pop
xor
lock
lock
mov
inc
or
out
cmp
xor
push
xchg
test
pop
adc
roll
push
push
or
arpl
adc
loop
pop
dec
test
lcall
cmp
mov
jae
jno
xchg
inc
imul
repz
shrl
insl
jg
push
lods
dec
jae
pop
and
adc
sti
lret
fdivl
lock
add
jnp
data16
sbb
push
sub
ljmp
fwait
test
add
or
ljmp
call
scas
sub
xor
pusha
pop
push
inc
sub
nop
dec
popf
jnp
jns
fwait
dec
shll
aaa
fiadds
dec
mov
fisttpll
outsl
mov
je
mov
aad
xor
mov
ret
dec
or
popa
pop
sti
pushl
add
jns
lods
xor
inc
inc
cmp
lcall
mov
icebp
inc
sub
jbe
cmpsl
in
testb
push
test
insl
pusha
mov
movsl
and
mov
shlb
pop
mov
lahf
outsl
iret
imul
mov
pop
sbb
push
inc
and
xchg
loopne
sub
add
cwtl
or
dec
rolb
cld
iret
adc
stc
popa
jne
push
inc
adc
jne
jl
mov
stc
testl
inc
mov
sahf
and
in
push
pop
aaa
mov
sti
movsl
scas
cmp
jg
cmp
rol
aam
cmpsb
outsb
push
rcl
outsb
fisubl
cmpb
add
jecxz
ja
outsb
out
stos
push
push
daa
js
in
xor
nop
inc
push
mov
sbb
vmread
loop
sbb
mov
mov
mov
inc
jbe
mov
popf
inc
clc
daa
add
xchg
or
and
and
push
data16
fnsave
push
test
in
sbb
push
mov
data16
sbb
imul
or
add
dec
pop
push
flds
jle
std
push
xlat
jle
or
mov
paddusw
sbb
jno
sbb
mov
xchg
cmp
or
and
mov
jno
push
adc
mov
xor
sub
adc
mov
adc
mov
iret
orb
mov
test
xor
in
pop
dec
fwait
inc
or
dec
adc
add
pusha
xlat
pop
shlb
nop
enter
inc
mov
rolb
push
push
lods
gs
jp
push
push
or
in
cmc
idiv
dec
frstor
mov
add
jns
add
xchg
mov
imul
mov
mulb
mov
and
mov
mov
mov
rcrb
sbb
mov
xchg
fptan
dec
lret
fwait
cltd
cwtl
je
lcall
add
cmpsl
repz
fucom
lods
int
cmpsl
dec
cmp
and
cmp
or
xchg
cwtl
bound
lret
movsl
icebp
cs
movsb
mov
xor
xor
mov
mov
dec
enter
insl
dec
lahf
cwtl
mov
mov
out
sbb
xchg
test
mov
stc
aam
cltd
mov
mov
push
aad
hlt
fistl
mov
dec
and
aas
cli
in
jle
cmp
cmp
adc
pop
xor
sti
mov
mov
lods
sbb
xchg
inc
pop
mov
dec
cltd
mov
xor
repz
sbb
jb
mov
cmpsb
inc
mov
popf
pop
and
ret
jnp
xor
mov
scas
stos
adc
and
movsl
in
insb
js
pop
pop
and
mov
fldcw
aam
jnp
add
cli
and
sbb
add
stos
fiaddl
repnz
xchg
aam
xchg
into
inc
les
sbb
loopne
cld
or
loopne
adc
in
sub
or
or
xchg
sbb
xor
xchg
mov
or
mov
xor
les
gs
mov
adc
inc
dec
mov
push
xor
mov
jnp
lcall
dec
jle
movsb
test
sbb
outsl
inc
xor
cmp
sqrtps
dec
or
divl
jno
jmp
mov
fdivs
cmpl
dec
std
daa
popf
test
pop
frstor
add
lods
push
dec
gs
or
mov
mov
add
push
pop
jne
dec
add
mov
jge
push
fnstenv
mov
add
rolb
dec
xchg
pop
inc
pop
pop
test
lret
sbb
mov
imul
dec
cli
or
mov
scas
dec
repz
add
shlb
icebp
inc
in
push
test
movsb
mov
mov
xchg
xlat
push
out
es
push
sub
mov
icebp
pop
mov
jne
jns
adc
ss
sub
stc
add
xchg
insb
inc
mov
pop
push
mov
pop
mov
iret
add
xchg
lods
imul
sbb
inc
les
mov
addr16
cltd
adc
pop
lcall
push
mov
jl
mov
push
enter
mov
xor
cld
pop
mov
in
arpl
orl
inc
sahf
jg
cs
adc
fistpll
cmp
push
or
outsb
add
test
int3
pop
dec
shll
pushf
sbbb
pop
jmp
sbb
lahf
cmp
and
mov
xchg
loopne
sbb
cld
adc
loop
xchg
cli
lret
rcll
pusha
lds
add
xor
rclb
inc
lock
mov
in
aad
lds
add
xor
rclb
inc
lock
mov
in
aad
lds
add
xor
rclb
inc
lock
mov
out
aam
lds
add
lock
lcall
or
dec
mov
dec
cli
movb
mov
out
xlat
push
ja
movsl
inc
xchg
inc
xchg
push
xchg
aaa
out
pop
jae
mull
ja
push
jbe
cmpsw
push
xlat
inc
xchg
incl
sbb
stc
pop
sub
test
arpl
jecxz
xchg
ja
or
and
adc
lods
sub
hlt
and
xchg
repnz
ror
cld
sub
or
jmp
inc
inc
rcr
mov
mov
cltd
fs
xchg
mov
bound
fs
pop
pop
mov
mov
jp
bound
stc
dec
enter
aad
add
mov
push
divb
lret
in
xabort
or
mov
loop
cmp
jg
aam
bound
lds
ret
out
pop
movb
movsb
push
testl
push
cmpsb
roll
cmpsb
ficompl
add
jo
movsb
cs
add
leave
div
arpl
mov
add
inc
add
ja
xchg
xchg
roll
daa
int
xchg
jno
and
movl
pop
push
xchg
inc
jmp
cli
adc
imul
mov
mov
add
sub
cmp
xor
jmp
ss
bound
jns
imul
outsb
mov
mov
push
negb
shlb
and
pop
cmpsb
and
push
out
pop
movb
mull
out
xlat
push
jbe
cmpsw
push
xchg
inc
xchg
push
xchg
aaa
out
pop
movb
mull
out
xlat
push
jbe
cmpsw
push
xchg
inc
xchg
hlt
aam
test
xor
jg
xchg
mov
insl
ja
xor
aad
loop
xor
mov
les
jo
and
inc
and
xor
xor
gs
push
mov
xchg
lds
outsb
inc
aaa
sub
lea
aam
add
cmp
pop
iret
mov
out
mov
push
mov
push
xor
movsl
loop
fsubrp
stc
add
mov
push
mov
ds
enter
repnz
and
mov
mov
arpl
sbb
ret
les
jo
adc
and
cmovnp
andb
adc
dec
pop
pushf
shlb
ljmp
sub
pop
sub
fistps
mov
subl
mov
cmp
pop
dec
mov
jns
push
jp
add
and
mov
loopne
push
push
insb
and
mov
flds
scas
xchg
call
mov
dec
mov
inc
leave
cltd
movsl
push
mov
aaa
dec
jmp
lods
stos
icebp
jmp
orb
sub
fnstsw
sub
xchg
mov
idivl
jnp
shrl
jp
xchg
gs
add
nop
adc
mov
fldt
adc
mov
adc
mov
das
mov
sbb
jns
roll
sbb
xchg
sub
add
or
push
push
jmp
push
inc
add
cmp
imul
test
inc
sub
jge
jo
hlt
sbb
gs
jmp
icebp
ja
out
test
xchg
jne
pop
mov
in
dec
sub
and
jp
xchg
pop
lds
mov
xchg
and
xor
hlt
cli
pop
xchg
push
mov
and
mov
pop
jns
or
aas
sbbb
shlb
adc
fldcw
and
sbb
xchg
mov
cli
and
inc
adc
inc
add
lret
dec
shll
pop
or
cs
jb
mov
hlt
mov
adc
sarl
add
ja
xchg
iret
sti
xchg
push
cltd
cltd
enter
std
cmpsb
test
push
cmpsb
aad
cmpsl
cmpsb
push
lods
sub
xchg
or
inc
push
pop
fildl
cmp
sti
mov
pop
in
cs
and
leave
push
sub
setne
mov
imul
andl
lahf
movsl
mov
jb
outsb
adc
adc
test
xor
cld
mov
lods
mov
jno
dec
mov
or
fcompl
in
and
incl
inc
push
imul
addr16
movsb
cmp
les
addl
stos
xchg
rorl
fnsave
sti
movsb
and
lahf
sub
mov
movsl
push
into
inc
lock
ror
inc
lods
sahf
cmp
out
rorl
push
sbb
int3
loopne
push
dec
pop
push
cmc
add
jbe
inc
cmp
push
arpl
icebp
lea
fistpll
fcompl
sub
lds
sbb
mov
scas
sar
out
orl
gs
mov
cmp
popa
movsb
add
ja
push
fs
loopne
test
int3
add
xchg
ss
push
imul
xor
aam
cwtl
cmp
add
cs
mov
push
or
mov
arpl
inc
pushl
pop
adc
cmp
stos
xlat
shlb
sub
lahf
xor
fnstenv
xor
cld
fdivrl
add
mov
in
inc
mov
hlt
lahf
outsb
popa
loopne
mov
inc
lds
sbb
and
xlat
jecxz
xchg
fidivs
jle
pop
in
and
es
mov
xor
mov
inc
fildl
inc
xchg
pop
lods
lds
or
mov
test
gs
cmpb
mov
dec
push
cmpsl
push
mov
sbb
adc
xor
sti
rcl
or
mov
pusha
rorb
xor
jge
mulb
pop
jge,pn
out
sbbb
mov
push
roll
mov
loope
movsl
or
xchg
push
ret
sbb
stc
into
add
push
roll
jno
outsb
ss
nop
jmp
icebp
cmp
jne
xchg
dec
mov
jns
out
jbe
test
xor
xor
in
icebp
mov
sub
add
jmp
xchg
scas
push
sbbl
rcr
enter
test
cs
roll
jb
fisubl
push
ja
pop
and
dec
lods
xorb
js
ljmp
int
mov
xor
insb
xor
xor
mov
jno
insl
stos
add
jmp
lret
rcl
jne
pop
faddl
xor
sbb
or
lcall
ds
adc
jmp
popa
or
pop
lock
ret
sub
cltd
arpl
outsb
sbb
call
ja
cwtl
dec
sub
push
jmp
and
ds
loope
jno
sub
lret
es
xchg
adc
pop
mov
fstpl
mov
mov
roll
testl
dec
push
add
and
iret
sti
popa
fisubrs
aas
adc
in
in
mov
cmpsl
push
repz
sbb
or
bound
jmp
popf
or
lcall
loope
mov
xchg
cmp
cld
xor
les
into
hlt
out
or
and
inc
jne
ret
jmp
or
and
pop
sub
je
sbb
dec
ficoml
pusha
int3
ss
push
neg
add
mov
jns
repz
cmc
pop
mov
mov
mov
pop
clc
rcll
jns
cmp
inc
push
push
and
cltd
repnz
stos
pop
mov
sub
jnp
icebp
test
jne
ret
loop,pt
push
aad
inc
mov
pop
add
sub
stc
subb
jmp
fisubrs
pop
add
add
gs
and
pop
scas
adc
and
cmp
lret
mov
xchg
dec
mov
pop
xchg
or
test
bound
sar
daa
ds
lods
std
negb
mov
inc
test
lea
pop
rolb
or
pop
hlt
dec
dec
mov
sbb
mov
push
jae
xchg
arpl
fcomps
jne
jle
fildll
fs
stos
fstpt
hlt
push
cli
jae
cmc
mov
int
nop
jno
sub
jmp
dec
popa
dec
bound
jmp
add
inc
fwait
out
sub
repnz
pop
shrb
aam
repnz
or
add
or
cmp
sahf
or
push
inc
loopne
loop
jo
sahf
ljmp
clc
jo
cmp
cwtl
dec
nop
loope
mov
les
insb
imul
fnstenv
fisubs
and
scas
push
scas
mov
xor
adc
call
test
lods
insl
inc
nop
xor
and
or
imul
push
xor
inc
sbb
dec
aam
push
mov
test
jecxz
pop
and
bound
fidivs
pop
push
int3
scas
ret
fs
mov
loop
xchg
xchg
ficompl
and
jb
pop
fwait
cltd
int
jne
test
push
push
inc
mov
mov
daa
aaa
pop
ret
pop
int
data16
mov
stos
insl
sub
cld
test
push
pushf
leave
adc
in
test
das
xchg
add
fnsave
das
pop
leave
adc
inc
sub
adc
call
push
xor
enter
ret
dec
cmpsl
sbb
pop
or
lods
xchg
in
je
add
xchg
sbb
sbb
mov
jp
jge
test
pop
bound
mov
pushf
or
jle
xchg
testb
outsb
inc
mov
xchg
and
adc
adc
push
dec
xchg
mov
push
xchg
xchg
sub
push
out
aad
das
lea
mov
dec
xchg
dec
mov
scas
incb
sbb
bound
or
add
inc
stos
xchg
lods
imul
in
cs
adc
lods
jle
out
mov
mov
mov
repz
sbb
stc
out
mov
daa
ss
add
dec
lret
push
sti
xchg
int
rclb
inc
or
xchg
inc
push
call
in
mov
push
dec
roll
ss
imul
das
fwait
cmp
out
and
dec
movsb
call
xchg
leave
push
sub
mov
fadds
out
sbb
mov
pop
jnp
sbb
imulb
mov
inc
loop
fcmove
mov
and
lods
xorb
sbb
sbb
mov
cmp
fst
lods
dec
cmpsl
xchg
xor
nop
sub
call
loop
setbe
and
mov
aas
outsl
mov
addr16
adc
in
dec
testl
push
rorl
mov
lahf
mov
iret
clc
int3
adc
clc
cmp
movsl
cmp
aad
cmpsl
cmp
mov
pop
adc
ja
cmp
inc
mov
cmp
pop
pop
cwtl
out
pop
ja
loopne
push
xchg
inc
xchg
jp
xor
jle
pop
sbb
sbb
mov
sbb
test
in
dec
xor
int
add
mov
and
mov
stc
sahf
inc
adc
or
mov
int
fnsave
inc
dec
cmp
fs
out
and
push
inc
inc
mov
add
inc
sub
push
inc
mov
xor
cld
jg
mov
movsb
cmp
std
stos
dec
jl
push
bound
xor
or
icebp
or
and
and
imul
int
dec
add
divb
pop
adc
ja
or
ss
jmp
outsb
xchg
push
push
cmp
mov
inc
nop
inc
sahf
sti
jle
dec
in
in
dec
jae
xor
sbb
mov
inc
sub
orb
mov
fsts
adc
loopne
int3
pop
fstpt
jg
mov
jnp
mov
movsb
lahf
popf
pop
fmull
xchg
xchg
adc
movsb
or
xor
pop
add
pop
xchg
push
dec
lds
mov
cmpsb
push
loopne,pn
leave
push
rorl
mov
aad
xor
mov
inc
mov
lods
sbb
jmp
ja
xor
mov
mov
pop
mov
test
dec
adc
jne
mov
adc
jnp
inc
lods
and
cmp
push
test
mov
cltd
sub
pop
adc
nop
or
stos
scas
add
psubusw
jmp
or
xor
adcl
or
in
cwtl
test
xor
lods
and
push
pop
jg
test
arpl
fistpl
clc
leave
push
test
sarl
pmaddwd
push
mov
incb
stc
cmp
xchg
in
sub
mov
aas
mov
sti
push
mov
xor
xchg
test
stc
and
xchg
outsl
push
jl
pop
mov
sub
push
mov
imul
mov
enter
or
nop
ds
lcall
shl
and
aam
xor
movd
push
jg
add
jae
pop
into
aam
cmp
rcrl
jmp
loop
mov
ljmp
push
push
mov
ficoml
aam
cmp
test
dec
mov
inc
rorl
jmp
inc
call
imul
or
lea
and
sub
sti
iret
ficoms
and
ret
add
pushf
or
mov
into
inc
pop
lea
xlat
push
sbb
iret
inc
or
mov
aas
aad
push
fldl
sub
sub
in
mov
lahf
mov
test
js
push
out
push
cld
out
dec
rclb
das
movl
cltd
adc
mov
pop
test
mov
lcall
out
popa
inc
mov
jnp
mov
mov
lahf
cwtl
xchg
xchg
push
jbe
inc
daa
push
cmc
lcall
adc
in
in
or
pop
xor
aas
jb
stos
out
cmpsl
and
cmp
popa
shll
mov
inc
loope
shrl
mov
aam
adc
push
scas
xlat
aaa
jp
pop
call
and
aad
sub
jmp
add
mov
lods
or
xor
repz
xchg
dec
lds
inc
jg
repnz
add
pmulhuw
es
and
mov
cwtl
jo
insb
push
add
sub
stos
in
or
pop
dec
fnstcw
out
std
popa
push
ss
pushf
fmuls
xlat
test
xor
jo
push
cmp
pop
xchg
orl
les
lret
sarb
call
push
imul
sbb
test
pop
popf
mov
push
lock
jmp
push
popa
movsb
adc
js
xchg
xor
mov
add
sbb
push
jnp
adc
outsl
sbb
adc
mov
mov
push
cmp
sbb
dec
nop
dec
pop
xlat
and
fs
test
adc
sub
adcl
icebp
mov
sbb
popf
leave
mov
cmp
outsl
pushf
insl
pop
add
pop
xorb
mov
xor
mov
jle
in
addl
mov
push
add
dec
pop
mov
pop
pop
inc
test
shrb
and
mov
mov
inc
aas
sbb
jl
rcrb
repz
pop
daa
add
mov
adc
xor
stos
xchg
rol
push
jb
cmp
pop
cwtl
mov
nop
pop
in
xchg
mov
mov
dec
lds
sti
pusha
hlt
insl
sub
cmp
ljmp
aas
sbb
sbb
cld
pop
mov
push
les
xchg
jo
cmp
cmp
mov
xlat
mov
scas
dec
adcl
pop
jo
push
and
dec
pop
add
mov
cmp
add
pusha
mov
in
jno
data16
pop
call
ds
insl
lcall
out
hlt
and
nop
jge
jmp
test
sbb
cmp
mov
mov
movsb
sub
js
insb
mov
sbb
enter
pop
cmp
add
pop
iret
test
xor
cmp
mov
test
pop
xchg
out
nop
inc
repz
mov
call
jno
push
lods
mov
cmp
adc
stc
mov
lcall
adc
ret
inc
adc
fmuls
clc
pop
inc
add
stos
test
movsb
and
push
out
sbb
in
mov
mov
popf
sub
les
pop
in
xorb
xlat
jg
jge
mov
scas
or
cs
xor
les
inc
xchg
adc
jp
adc
inc
sbb
xor
mov
aad
dec
push
xchg
xchg
cmp
dec
add
jb
in
adc
xor
add
stc
mov
mov
jbe
pop
pop
jmp
or
sbb
jno
mov
out
mov
dec
mov
insb
repz
aad
dec
sarl
sbb
push
lea
jle
out
pop
mov
cld
negb
push
add
mull
cmpsb
rorl
jns
fstp
out
sbb
dec
iret
push
mov
inc
xchg
cmp
or
mov
loopne
dec
in
scas
and
insl
mov
jne
mov
out
push
jo
enter
stos
jecxz
or
in
or
pop
popf
xchg
and
into
cmp
out
sahf
inc
jmp
ror
cmpl
out
xor
sub
cmc
or
out
or
outsb
hlt
push
ss
and
out
mov
jno
jae
imul
push
add
mov
rcrl
lcall
int
xchg
xchg
aam
dec
mov
ret
stos
pop
pushf
es
xlat
int3
clc
gs
jle
bswap
cs
pop
pushf
mov
in
xchg
js
adc
inc
mov
aam
sub
or
adc
or
ror
out
cld
cli
js
jnp
mov
dec
jl
add
or
adc
jne
jbe
pop
scas
fnstcw
jmp
clc
jp
xor
into
or
sbb
pop
adc
sub
into
xchg
out
pop
cmpsl
cmp
sub
adc
jl
clc
ljmp
sahf
testl
mov
loope
outsb
cmp
and
adc
push
mov
xor
xor
inc
pop
cmp
rclb
mov
jno
cmp
ret
dec
ficompl
aam
aad
call
rorb
ljmp
sub
pop
inc
cld
movsl
add
mov
loope
cmpsb
and
in
ret
cmpsb
jb
xchg
xor
pop
add
sub
add
xchg
setnp
mov
dec
fxch
push
xor
cmc
sbbb
jmp
push
in
shr
pop
push
or
outsl
mov
cmpsb
jg
ret
addr16
mov
jp
inc
aad
push
lcall
out
mov
cmp
int3
stos
pushf
and
xchg
movsl
mov
and
insl
cmp
sub
je
and
pop
push
jp
mov
and
mov
add
jge
movsb
sahf
lods
sub
sarl
pop
popf
sbb
xor
sbb
xor
jns
cmpsb
sbb
xchg
xchg
mov
or
inc
fwait
or
adc
bound
mov
stos
int
js
xchg
outsb
fstpt
cli
mov
sub
xchg
jge
xchg
jecxz
sub
xor
jp
outsl
in
sbb
mov
cwtl
setp
adc
add
mull
xchg
adc
das
adc
popa
jno
mov
pop
std
insb
pop
out
adc
popf
push
repz
popf
pop
mov
push
movsb
xchg
and
fsubrs
cmp
push
test
mov
inc
jle
out
mov
sub
andl
dec
and
fwait
es
ds
out
sti
ret
pusha
insl
enter
scas
cmp
mov
ficomps
and
mov
jecxz
idivb
mov
icebp
loope
adc
or
mov
test
mov
dec
insl
cmpsb
xor
clc
adc
in
adc
lock
and
push
add
rorl
mov
pop
pop
int3
shll
lea
and
pop
xchg
xor
stos
fistl
mov
repz
js
aam
pop
cmp
or
add
je
pusha
scas
sarb
and
dec
addb
shrl
jbe
push
ljmp
les
sub
add
pop
bound
push
mov
mov
lds
data16
and
adc
mov
iret
xlat
in
int3
mov
cwtl
loop
test
adc
call
jns
test
sbb
mov
bound
insl
fld
mov
xchg
repz
mov
mov
pop
sub
cli
inc
les
neg
orl
cmp
sarl
ja
arpl
and
xchg
rorb
sub
push
dec
pop
sbb
and
xchg
xchg
sub
dec
ja
cmp
jmp
std
inc
pop
gs
jp
lods
xor
es
adc
out
push
imul
data16
inc
xchg
push
xchg
adc
js
rolb
sbb
or
mov
lods
stc
mov
je
daa
and
pop
sub
push
cli
mov
and
imul
dec
push
pop
mov
fistpl
je
xchg
and
lcall
mov
pop
es
sbb
scas
mov
idivb
in
or
cltd
pop
das
mov
adc
or
rclb
sub
jmp
inc
out
xorl
and
add
add
push
or
cmp
pop
filds
insb
push
leave
xchg
ljmp
mov
les
pop
xchg
and
adc
mov
push
mov
mov
cwtl
inc
xor
adc
mov
lods
push
std
movsb
xor
add
push
or
xchg
sbb
sbb
arpl
pop
sbb
xchg
jb
and
mov
xor
mov
jb
test
fdivl
sub
insb
cmp
loope
out
les
movb
mov
mov
xchg
inc
sub
data16
cmp
lret
push
and
pop
mov
jns
leave
test
mov
mov
add
xchg
aaa
out
pop
movb
mull
out
xlat
push
jbe
cmpsw
push
xchg
inc
xchg
push
xchg
aaa
out
pop
movb
mull
out
xlat
push
jbe
cmpsw
push
xchg
inc
xchg
das
xchg
aaa
out
pop
movb
das
es
xlat
push
jbe
cmpsw
push
mov
xchg
push
xchg
aaa
out
xchg
movb
or
dec
mov
aas
out
pop
test
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
scas
cmp
les
mov
jmp
xor
lea
add
jecxz
in
in
les
xchg
pop
test
mov
xchg
adc
add
in
cmp
fmull
mov
dec
je
outsl
icebp
cmp
xor
addr16
in
cwtl
jns
loope
mov
jge
mov
test
inc
cli
fdivs
hlt
xor
aam
jae
pop
xchg
fs
dec
inc
mov
popf
dec
mov
fisttpll
sti
popf
ljmp
xchg
int3
jbe
fwait
push
add
mov
fidivrs
ret
xor
dec
sbb
mov
sbb
push
arpl
jb
scas
ja
push
and
in
adc
sbb
lret
mov
in
fs
test
fwait
lods
inc
popa
inc
mov
cltd
fdivr
popf
adc
in
fwait
sbb
js
mov
outsb
je
scas
enter
mov
hlt
add
hlt
enter
cmp
rorl
xchg
pop
popf
dec
insl
mov
pop
lea
sbb
mov
mov
sub
cmp
cmp
es
pop
nop
inc
xchg
jno
popa
test
jl
addr16
pop
rcrb
inc
clc
xor
dec
jbe
rcll
xor
push
xchg
push
andb
popf
insl
pop
mov
les
adc
je
lods
push
popf
inc
lea
add
hlt
cmp
les
xchg
pop
test
mov
inc
lea
add
hlt
cmp
lods
fcompl
or
xor
pop
imul
sub
xorb
or
lret
jae
sbb
out
jne
pop
fildll
mov
inc
cmpb
cmpsb
nop
ljmp
xchg
nop
or
xchg
sti
mov
testb
xor
mov
mov
fsts
test
int3
and
cmpl
or
fisttpl
enter
xchg
jne
fldenv
cmpsl
aaa
sbbl
das
jne
mov
jo
or
repz
icebp
mov
lods
xor
fidivrs
mov
test
xchg
das
add
xlat
mov
inc
adc
mov
dec
mov
incl
cmp
mov
decb
pop
sub
in
shlb
xchg
push
ljmp
roll
xchg
push
xchg
repz
push
add
inc
inc
inc
push
xchg
lds
mov
mov
sbb
xchg
dec
xchg
mov
cld
shl
add
out
icebp
xchg
and
or
add
xor
push
neg
xchg
inc
mov
test
or
shr
adc
pop
sti
xchg
xor
add
ret
ss
jnp
sbb
rcrb
rolb
repnz
lods
aas
data16
pop
push
movsb
xor
and
insl
xchg
in
push
mov
out
popa
aaa
push
fs
stos
and
mov
sbb
out
lcall
mov
fstpt
outsb
mov
lcall
popa
ret
sub
test
inc
mov
lea
in
dec
dec
fwait
mov
iret
mov
xor
mov
jo
mov
lret
out
jnp
shlb
push
cmp
xor
cmp
mov
js
mov
adc
add
cmc
fs
out
mov
sbb
imul
lods
adc
mov
movsb
cmp
mov
push
ja
loopne
fucomp
ljmp
jmp
mov
repnz
hlt
xor
xchg
popf
cmp
lock
or
pop
hlt
sbb
cmp
xorb
xchg
imul
iret
pop
movsl
sbb
std
jb
push
aaa
sbb
pop
jle
gs
in
pusha
sbbl
aaa
pop
into
ljmp
shll
mov
lods
daa
and
fstpl
in
or
call
rcrl
ja
sub
popf
pop
inc
flds
inc
out
stc
jl
cltd
mov
fwait
push
add
sbb
pop
insb
out
xchg
ja
or
std
sbbw
rorb
add
add
sbb
pop
mov
enter
inc
and
data16
stc
xlat
push
aam
sbb
std
bound
repz
xchg
xchg
fwait
xchg
mov
movsl
push
inc
sarb
lahf
es
fsts
push
dec
mov
sbb
aad
inc
dec
jp
call
xor
arpl
xchg
mov
imul
add
mov
lcall
jge
outsb
in
fsub
jbe
test
imul
push
movb
pop
push
rcrl
shl
loopne
sbb
mov
sbb
jb
mov
in
pop
mov
imul
jns
bnd
addl
sub
shr
imul
xor
scas
scas
cmpsb
xchg
pushf
push
mov
ja
jmp
inc
dec
adc
lret
fwait
rcrb
xchg
in
mov
inc
push
loop
or
or
out
ja
rclb
xchg
cltd
mov
jge
ljmp
push
stc
mov
sbb
pop
pop
into
dec
xor
xlat
adc
dec
adc
and
shl
testb
pop
mov
or
outsl
lea
aad
jl
dec
std
mov
mov
lret
xorb
mov
mov
xchg
cs
mov
pushf
xchg
mov
aaa
aad
hlt
pop
insl
daa
or
cmp
cmc
mov
mov
repnz
add
sub
inc
and
push
lea
fxch
mov
jb
and
xor
jne
fsubrs
jnp
cld
fcmovnb
fdivrl
es
xchg
inc
adc
cmp
sbb
xchg
shlb
add
test
insb
cmp
fistps
call
push
jl
pop
cmp
fcoml
cmp
sbb
jecxz
data16
fmull
jnp
pop
and
aam
pop
mov
lret
ljmp
push
and
pop
aaa
sti
push
lcall
js
sub
lret
lret
leave
fstl
sub
inc
mov
shll
mov
xchg
inc
adc
jbe
fdiv
sub
outsl
sub
repz
nop
add
mov
add
stc
scas
test
rcll
dec
cmp
mov
pop
fcmovu
dec
out
mov
jge
dec
cli
ja
sbb
sarb
pop
or
jmp
inc
movsb
or
push
xchg
std
jecxz,pt
call
cmc
mov
mov
xchg
bound
aam
push
aad
out
and
xor
sbb
sbb
mov
mov
cmp
push
outsl
fildl
push
cmp
mov
mov
andl
pushf
sub
das
lahf
xchg
sbb
iret
jae
jae
mov
mov
and
sbb
jge
push
mov
mov
xchg
mov
push
daa
lahf
inc
adc
pop
or
out
enter
orb
push
mov
lock
outsl
xchg
out
outsb
pop
dec
loope
ljmp
fldcw
pop
les
int
pop
pop
xor
inc
ljmp
inc
xchg
adc
jp
inc
xchg
sbb
into
or
clc
out
jl
dec
sub
sbb
outsl
and
dec
in
inc
scas
lret
xchg
neg
pop
movsb
js,pn
mov
xor
mov
jg
cmc
mov
int3
outsl
jge
mov
nop
mov
and
test
push
push
inc
pusha
psubsb
push
out
mov
mov
pop
sub
xlat
adc
int3
leave
push
jo
push
aaa
das
dec
push
fistps
push
xchg
cwtl
mov
and
push
pop
or
pusha
mov
xchg
sub
jg
jmp
mov
push
cmpsl
ret
fistpl
aaa
out
inc
dec
fsts
mov
mov
xchg
inc
mov
out
ret
jb
adc
pop
int3
mov
in
pop
icebp
sbbl
or
push
hlt
das
mulb
jnp
outsb
cmp
orl
repnz
push
or
xchg
ljmp
into
push
xor
push
test
push
add
aad
push
in
jbe
jp
lock
imul
mov
sahf
pop
mov
fiaddl
movsl
jo
or
push
xor
imul
xchg
or
int3
loop
xchg
pop
dec
mov
cmp
in
xor
jno
inc
add
orl
xor
js
ljmp
fsubl
fiaddl
mov
mov
push
dec
push
stc
add
hlt
push
adcl
inc
pop
jecxz
in
cmc
sahf
inc
adc
std
push
in
lods
lods
xchg
sahf
repnz
sbb
mov
repz
aaa
cwtl
jb
push
cmp
std
nop
movl
aaa
cwtl
fdivp
sub
mov
data16
js
sbb
jmp
jp
dec
adc
popf
xchg
pop
jge
repz
xor
jl
jge
sub
push
cmpb
sub
and
sub
call
aad
sbbl
mov
push
loope
popf
popa
and
xchg
call
insl
in
ret
leave
mov
pop
ljmp
inc
insl
call
mov
das
cmp
push
push
scas
or
stos
test
mov
icebp
arpl
aas
push
xchg
arpl
pusha
pop
jl
lret
push
pop
cld
in
mov
push
enter
inc
push
scas
out
dec
adc
add
sub
in
push
jl
pop
sub
add
insb
mov
mov
icebp
pop
pop
push
xor
ljmp
notb
movsb
lods
out
add
mov
pop
mov
ja
lock
adc
insl
idivb
mov
mov
inc
mov
dec
jo
or
push
in
stc
setg
fwait
xor
jge
dec
add
sub
mov
xor
icebp
adc
loop
enter
cs
cmp
icebp
jp
xchg
sub
pop
cs
pop
popf
mov
push
nop
aaa
mov
ret
lret
out
lods
jae
add
mov
stos
lods
xchg
fcoms
mov
and
dec
inc
push
pop
fisttps
pop
sbb
test
icebp
jle
outsl
adc
test
sub
shrb
flds
mov
mov
jg
jb
and
daa
xchg
mov
scas
daa
and
add
lcall
cmp
sbb
jnp
stc
sti
insb
or
or
xchg
sub
cmp
or
xchg
jmp
xor
lret
push
ljmp
sbb
pop
repz
mov
cmpsb
inc
or
dec
mov
std
je
aas
lret
xor
jmp
ret
mov
stos
mov
fidivrl
jns
clc
bound
outsb
cmp
popa
fs
inc
in
iret
adc
sub
push
in
lea
or
test
mov
mov
fwait
test
aas
sarb
ret
adc
dec
inc
jne
push
sub
xchg
pop
jmp
std
fdivrs
pop
in
xchg
sti
jmp
cmp
xor
add
jb
cmp
jmp
mov
adc
mov
sbb
adc
js
stc
jge
adc
inc
xor
push
mov
adcl
gs
out
addb
dec
insb
or
std
push
mov
xlat
mov
mov
loop
mov
xchg
mov
scas
in
mov
gs
jp
push
pop
xor
jno
or
lods
push
jns
outsl
or
dec
add
jmp
add
pop
or
sahf
sub
xor
sub
inc
mov
or
mov
pop
sub
fimull
pop
call
pop
sbb
scas
enter
sbb
test
sbb
or
out
push
jmp
add
dec
inc
mov
dec
movsb
outsl
gs
aad
cmp
xor
cmc
mov
test
push
mov
inc
loop
scas
sub
pop
mov
repz
scas
fidivl
ficompl
inc
pop
outsl
shl
mov
loopne
call
aas
pop
xor
fs
jae
inc
popa
mov
dec
lcall
sub
pop
loopne
and
jnp
adc
insb
push
shlb
cld
rolb
mov
sub
loope
cmpsl
icebp
pop
add
inc
stos
or
rol
dec
out
stos
and
out
xor
mov
adc
arpl
outsb
and
adc
adc
dec
movsb
mov
xchg
jno
mov
test
pop
stos
mov
ret
and
inc
loop
sub
sub
hlt
mov
fisttpll
fildl
mov
fs
xor
inc
add
mov
test
ret
clc
cmp
test
or
dec
inc
mov
pop
daa
stos
cltd
pop
aas
push
cli
movsb
testb
ret
push
lcall
cs
xor
data16
mov
push
test
cmpb
loope
pop
push
lret
push
xor
add
and
data16
loop
lcall
cmp
inc
aam
xchg
and
mov
sbb
jge
sub
out
lds
aad
mov
loop
lcall
dec
sub
mov
test
mov
out
sti
or
out
push
mov
bound
outsl
xor
adc
jns
add
push
push
incb
adc
xor
into
dec
cwtl
leave
adc
jno
bound
jmp
int3
adc
out
pop
pop
shl
xor
cmpl
sub
shr
iret
loop
adc
pop
es
cmp
test
cld
int3
xchg
roll
cmpsl
or
mov
loope
add
pop
xor
cli
add
add
in
fscale
sbb
arpl
sbb
cwtl
or
cmpl
icebp
mov
mov
inc
dec
dec
and
push
pop
repz
cmc
add
int3
lods
ret
jo
dec
loop
ficomps
lret
inc
jg
lret
and
out
outsl
shrl
imul
pop
test
bound
andl
lcall
mov
gs
mov
nop
popf
adc
in
mov
jle
scas
dec
dec
inc
ss
stc
ror
inc
sub
enter
unpcklps
sub
pop
inc
lods
xor
mov
push
sub
push
mov
loop
loope
xor
push
dec
adc
dec
lods
and
mov
int3
sbb
dec
cmp
aad
popa
cmp
shlb
aaa
leave
out
add
push
es
inc
stc
loopne
outsl
outsb
loop
test
push
adc
inc
mov
xor
push
jne
inc
loope
arpl
sub
pop
jmp
jle
scas
stc
pop
mov
leave
mov
add
pusha
insb
leave
pop
add
arpl
fsubl
ss
cmpsl
aam
in
in
add
in
xchg
out
xor
cmp
adc
pop
mov
test
divb
adc
adc
pop
adc
jo
jmp
add
aas
or
pop
scas
leave
dec
rorb
out
mov
jge
jle
shrl
stos
fs
cmpsb
jmp
pop
jl
mov
sub
iret
sub
repnz
call
jo
pop
gs
and
fs
or
std
mov
jo
xchg
fidivrs
pushf
outsl
jns
sti
mov
ss
add
insb
cmpsb
ss
adc
dec
in
jae
imul
rolb
mov
in
and
xor
std
test
dec
push
cli
cmp
js
js
loopne
and
push
add
pop
mov
sub
cmp
jl
push
hlt
out
sbb
fsub
mov
inc
or
jle
js
push
xor
hlt
scas
inc
xor
rcl
je
shll
addr16
cli
jno
cmp
adc
and
test
xchg
sarl
stc
test
orl
in
fsubs
shll
lret
xchg
shl
pop
icebp
lods
sbb
lods
jl
in
sbbb
mov
and
mov
rcrl
arpl
xor
shrb
pop
pop
lock
insl
call
jge
dec
test
int3
clc
rclb
es
xor
lds
push
dec
out
les
scas
stc
adc
sub
mov
xchg
and
mov
hlt
cld
data16
or
jge
mov
dec
nop
call
cld
das
and
adc
jns
loop
aam
fdivp
cmc
adc
fs
movsl
adc
jg
arpl
pop
mov
rclb
imul
into
test
xchg
and
or
inc
or
pop
pop
nop
in
dec
cmp
push
xor
lea
out
xor
ret
dec
dec
cli
xchg
jns
mov
fwait
leave
test
add
adc
std
jg
mov
addr16
pop
and
sti
add
push
mov
mov
and
icebp
icebp
nop
leave
jmp
stc
ficoml
inc
sbb
fwait
loope
add
jge
hlt
jle
int
negl
push
or
aas
jmp
push
mov
ds
add
jl
or
xchg
cld
adc
pusha
or
cmp
mov
xchg
js
gs
mov
adcb
lret
out
int3
ret
adc
leave
cltd
sub
cwtl
xchg
push
out
xor
pop
mov
mov
xlat
stos
sbbl
js
pop
int3
outsb
out
push
jnp
mov
iret
or
xor
and
into
xchg
fcomps
jo
mov
gs
mov
xor
or
notl
dec
mov
in
pop
je
insb
pushf
mov
pusha
inc
inc
bound
sub
ficoml
adc
es
mov
inc
jne
rcr
xchg
fs
sub
push
sub
and
mov
shl
mov
arpl
push
cmp
pop
fstl
or
adc
test
sbb
inc
adc
sbb
xchg
cmpsl
dec
and
int
dec
lds
call
adc
stos
aaa
repnz
sbbb
xchg
inc
mov
in
lock
mov
and
lea
int
and
xchg
lea
fbld
cltd
add
adc
fwait
mov
leave
popa
lea
mov
sti
cld
sahf
aas
stos
jnp
mov
fidivs
pop
jns
stos
aas
inc
sub
inc
add
lods
sub
outsb
add
inc
fbstp
out
mull
sub
fisubs
sub
sub
mov
and
or
mov
pop
out
sbbb
mov
lret
outsl
test
fildl
addl
divl
ds
mov
sub
jg
shll
test
cmpsl
and
stc
fsubl
dec
movsb
mov
push
cli
jno
lret
mov
cmpl
outsb
movb
pop
push
pop
fbld
add
jle
jle
dec
lcall
outsl
rorl
dec
push
or
insl
call
lods
mov
insb
iret
and
aad
ror
inc
pop
je
cli
xchg
mov
fwait
mov
repz
push
mov
lret
jo
fwait
inc
xor
cmp
movsl
call
sub
lret
clc
add
sahf
fdiv
jp
add
dec
xchg
into
mov
sub
sub
push
repnz
jecxz
fsubrl
out
je
dec
cmp
adc
add
pop
mov
cmp
pop
insb
ja
lret
or
jp
and
push
mov
sub
addr16
mov
aaa
pusha
jnp
std
out
test
sbb
xorb
sub
fs
into
aaa
pop
mov
jecxz
mov
sub
or
or
pop
push
stos
les
scas
mov
hlt
fcomps
imul
out
cmc
push
xorb
hlt
leave
fiaddl
push
pop
add
leave
icebp
lock
push
ficompl
xor
jns
out
dec
test
cwtl
out
test
pop
xchg
gs
pop
jmp
stos
lret
mov
cmp
sub
nop
rcll
mov
inc
mov
pop
mov
popa
shrl
inc
cld
push
loopne
sbb
lcall
into
add
js
push
cwtl
mov
mov
out
and
loope
aam
sbb
into
ss
dec
mov
cmpb
and
jns
andl
jg
xor
xlat
out
in
fs
sub
jmp
aaa
ret
daa
mov
addr16
inc
cmpsl
fs
mov
insl
cmp
iret
mov
icebp
mov
mov
or
xor
sbb
mov
in
jl
xor
jmp
sub
pop
loope
fyl2x
addr16
stc
out
je
push
rolb
adc
lcall
mov
jl
and
mov
jle
es
pop
pusha
call
mov
mov
inc
mov
addl
fistpl
cmpsl
pop
lds
push
dec
sub
sarb
movsl
in
cmp
nop
xor
mov
insb
jp
mov
lret
arpl
mov
mov
xchg
fistl
and
cmp
add
daa
fdivr
lea
cmp
jno
cmpsb
mov
in
mov
hlt
add
rclb
mov
dec
sub
or
xor
sbb
hlt
int3
xchg
dec
aaa
cs
imul
movsb
push
push
pop
incb
mulb
sub
outsb
mov
and
sub
and
inc
mov
push
jnp
jbe
xchg
outsl
cmpl
das
push
jb
cmp
loop
je
mov
rcr
pop
pushf
jne
testl
mov
push
out
push
push
arpl
nop
std
jbe
cmp
cltd
mov
dec
jno
cld
dec
cmp
pop
faddl
insl
fdivl
or
test
lea
xor
xor
mov
out
sub
cmpsb
js
mov
stos
jp
repz
sbb
pop
mov
mov
not
and
and
inc
and
sub
mov
out
mov
ret
pop
sub
dec
sbbb
mov
stos
shlb
cmp
repz
jb
and
mov
xchg
pop
sub
sub
push
xchg
mov
arpl
dec
mov
or
adc
jns
iret
dec
in
jmp
push
imul
enter
xchg
and
ret
lods
repz
fisubrl
orb
rorb
dec
orb
xchg
repnz
and
out
les
xchg
pop
test
mov
inc
lea
add
hlt
cmp
les
xchg
pop
test
mov
inc
lea
add
hlt
cmp
sub
mov
movsb
insl
xchg
pop
test
mov
inc
lea
and
adc
xor
sub
mov
movsb
in
adc
add
mov
pop
popf
inc
cli
inc
jne
adc
and
xor
roll
repz
ret
jp
jno
push
jae
arpl
push
add
xlat
loope
icebp
inc
adc
mov
ret
mov
jb
add
packsswb
push
add
or
aaa
add
cmpsl
in
xchg
cmp
mov
mov
jnp
and
jb
push
pop
jae
jne
movsl
out
mov
xchg
ljmp
add
push
je
adc
ss
arpl
pop
loop
xor
mov
fnsave
outsb
lds
incl
mov
outsb
push
mov
out
xchg
and
dec
mov
lret
and
inc
add
fwait
aad
outsl
loope
icebp
jbe
outsl
rorl
ret
sbb
in
xchg
xchg
mov
arpl
aaa
scas
or
cmp
setb
pop
inc
dec
insl
adc
adc
arpl
push
dec
pushf
dec
push
ds
xchg
mov
add
or
icebp
notb
lcall
je
in
inc
jnp
insl
cmc
rcll
mov
gs
popa
mov
insl
cmp
inc
and
loope
sahf
out
sti
mov
cmpsl
hlt
ret
xor
jo
jbe
data16
or
jne
js
cmpsl
mov
mov
mov
es
jno
adc
jnp
or
xor
add
xchg
iret
adc
lods
sarb
roll
and
inc
add
and
push
add
mov
mov
shl
mov
ret
xchg
xor
jno
inc
add
and
push
add
mov
add
aas
cmp
or
pop
rorb
jo
sub
out
movl
fsubl
xchg
mov
ss
fwait
cmp
pop
mov
mov
inc
mov
rcrl
popf
or
sti
orl
adc
les
dec
fists
pop
jg
aas
xchg
xor
jnp
adc
inc
mov
int3
out
cmp
mov
push
dec
fcomps
pop
cmp
sub
ret
shll
loope
rcrl
in
addl
sub
mov
add
jae
addr16
insl
int3
adc
or
into
icebp
jl
sbbb
dec
sbb
fld
shll
imul
push
lods
push
dec
lret
pop
mov
scas
mov
jmp
and
push
inc
xrelease
ret
push
lcall
ss
mov
inc
mov
push
or
xchg
cmp
mov
enter
call
and
hlt
cltd
push
jb
inc
mov
mov
or
inc
and
mov
das
das
jnp
sbb
adc
sub
fmuls
mov
sub
pop
xor
sbb
fs
jbe
jo
or
arpl
fs
fadds
fadd
inc
inc
jp
add
inc
jns
lods
add
mov
push
inc
and
adc
mov
mov
inc
test
xchg
mov
sub
sub
add
iret
inc
lret
ret
sub
ret
mov
and
push
inc
xorl
mov
xchg
inc
fdivrs
in
adc
or
daa
mov
test
cwtl
mov
enter
cltd
pusha
xor
push
inc
jo
sbb
push
popa
bound
insb
jecxz
add
mov
shll
push
sti
aad
std
or
call
or
pop
mov
int
std
dec
fld
push
push
pop
jp
aaa
push
js
rclb
test
sarl
sbb
call
push
adc
xchg
and
pop
mov
scas
cmp
xchg
pop
sbb
pushl
imul
push
and
je
inc
mov
xor
push
out
rol
stos
and
stos
ret
rorb
popa
sar
enter
mov
test
scas
mov
jge
pop
insb
cld
cs
push
clc
fdiv
xchg
shrl
inc
sub
ret
fs
out
cli
adc
xor
inc
imul
adc
jbe
cmp
gs
add
loop
icebp
mov
mov
out
sub
cs
ss
inc
adc
pop
jge
hlt
fs
xchg
aas
lds
sub
pop
inc
xchg
in
fs
mov
push
lret
cmpsb
cmp
aad
mov
in
jnp
cmpsb
dec
clc
jbe
push
test
push
in
and
xlat
clc
rorl
jb
orl
xchg
cmp
or
inc
and
stos
dec
lahf
fnsave
cwtl
repnz
push
adc
or
in
and
subb
loope
inc
int
push
inc
xchg
idivb
lahf
mov
stos
jge
dec
push
xor
jne
push
sahf
sub
ljmp
xchg
xchg
pop
mov
fnstcw
pop
mov
fisubs
push
jb
add
push
xor
cwtl
ret
mov
add
jp
sub
insl
mov
inc
incl
cs
arpl
andl
aam
pop
and
or
sbb
les
jbe
fwait
in
fwait
push
addl
out
push
je
dec
and
pop
jecxz
add
pop
jmp
xchg
stos
dec
mov
mov
mov
out
sbb
mov
xchg
jge
mov
or
or
xchg
and
sub
mov
xor
aas
cmpsb
cltd
add
jae
aaa
mov
and
mov
cmpsb
lea
pushf
push
lret
adc
jle
loope
nop
jno
inc
dec
ds
xchg
nop
ja
sub
xor
cltd
jp
test
or
add
in
jge
push
cmp
lcall
adc
mov
mov
jl
out
inc
dec
xchg
and
sahf
mov
and
adc
pushf
aas
call
mov
ja
sub
mov
push
and
inc
insl
add
xchg
imul
mov
cli
mov
ss
add
mov
inc
iret
and
pop
in
sub
mov
sbb
into
cld
sub
test
rol
rcrl
push
sahf
nop
mov
int
add
sti
sbb
push
jbe
xor
pop
shrl
ret
mov
inc
loopne
inc
mov
dec
add
pslld
negl
and
jg
clc
outsb
ds
mov
push
xchg
xchg
frstor
rcrl
out
std
ret
xchg
jmp
xchg
push
sub
in
clc
push
push
outsb
psubusb
fwait
pop
sub
movsl
ret
push
or
or
pop
push
mov
hlt
jne
jno
jbe
jbe
outsl
sbbb
std
add
and
insb
or
push
push
in
push
das
stos
jo,pt
std
mov
imul
inc
mov
jmp
sar
jmp
and
inc
mov
enter
cmc
repz
out
mov
int
int
sbb
inc
xchg
lock
ret
xchg
dec
push
and
pop
sbb
bound
mov
jecxz
jns
fmuls
or
cmc
out
movsl
xor
or
jbe
xchg
cmpsl
mov
xor
xorl
fisubl
dec
sub
in
jp
sub
push
cmp
mov
arpl
adc
mov
cmp
and
cmpsl
ja
sub
mov
lret
xchg
or
fidivl
add
popf
adc
pop
dec
cmp
test
mov
jnp
add
fsin
mov
adc
ljmp
and
outsl
sub
xchg
adc
push
pop
sub
xor
sbb
cmpsl
cmp
movsb
xlat
repz
movsb
jg
scas
adc
gs
sbb
imul
test
pop
sbb
arpl
fisubs
mov
loopne
lods
mov
push
aam
sbb
push
pop
rcrl
lahf
mov
pop
ss
add
mov
pop
pushl
pop
movsb
sahf
mov
sub
jbe
mov
cmp
leave
pop
and
sti
imul
inc
ja
cmp
shll
out
xchg
ljmp
stc
data16
or
pop
mov
and
loope
cmpb
adc
adc
in
xchg
add
mov
imul
xor
in
xor
outsb
shll
xchg
mov
inc
mov
sub
orb
fs
lods
push
les
arpl
dec
pop
sub
pcmpgtb
pop
jmp
leave
out
pop
mov
pop
test
mov
inc
fwait
loope
push
loope
sub
dec
lret
in
push
aas
and
mov
or
mov
mov
mov
xchg
push
bnd
outsl
and
mov
iret
mov
xchg
or
xlat
outsl
aam
ljmp
aas
xchg
divl
jge
aas
fsts
jmp
and
mov
adc
out
aas
pop
sarb
inc
sub
or
fstl
jb
mov
loop
mov
in
nop
mov
imul
ljmp
add
test
jp
shll
into
js
popa
cli
test
add
jmp
push
mov
pop
adc
mov
stc
fstpt
je
pushf
lea
movsl
mov
jge
inc
idiv
sahf
cmc
into
mov
jp
sbb
fsubrl
xchg
push
push
jnp
ljmp
and
mov
jae
fists
mov
xor
fs
dec
lds
push
push
rcll
out
dec
shl
add
lcall
cltd
test
repz
js
iret
fucomi
xchg
push
push
cli
popa
mov
dec
idivb
andl
dec
ffree
out
aad
push
mov
mov
fbstp
jae
push
mov
xchg
fnsave
dec
repz
jg
sub
sub
inc
add
xor
popf
add
stc
popf
loopne
shr
inc
pop
add
insb
cmpsb
mov
pop
insl
xchg
popl
cmp
fiadds
bound
aam
xor
inc
or
mov
mov
mov
imul
push
ljmp
mov
cmp
addr16
jle
pop
xchg
mov
repz
sbb
add
outsb
cmc
push
stc
or
mov
add
pop
inc
push
inc
out
cmpsb
inc
add
mov
and
out
cmp
fdivl
ror
dec
mov
std
jecxz
push
outsb
je
or
add
in
pop
mov
mov
test
sti
stc
push
mov
inc
cmc
dec
lea
cmp
jnp
jne
xchg
hlt
jge
mov
push
mov
cld
pop
dec
loope
add
mov
fwait
sbb
das
iret
sbbb
sub
xor
pop
and
sub
sbb
push
std
xor
mov
in
pop
imul
and
fnsave
inc
push
sub
jnp
ljmp
popa
xor
mov
mov
loopne
dec
jmp
jnp
das
sbb
rcrl
je
mov
shll
mov
out
mov
aas
pop
xchg
and
jecxz
pop
icebp
mov
jl
adc
lretw
icebp
xlat
adc
daa
stos
xor
mov
pop
or
lret
cs
xor
aaa
pop
adc
adc
out
insb
imul
mov
jno
in
xchg
mov
mov
xchg
lods
fildll
jne
inc
xchg
mov
dec
mov
jp
dec
int
into
icebp
inc
rcr
ret
lcall
push
xchg
jmp
inc
and
xchg
xchg
icebp
mov
sbbb
in
jmp
xor
scas
jno
sbb
mov
ljmp
xchg
adc
cmpsl
hlt
daa
push
xchg
pop
dec
sub
pop
sub
enter
outsb
mov
mov
pop
lahf
push
cld
xchg
fldl
pop
cmp
cltd
push
sub
push
inc
pusha
pushf
xor
popf
mov
adc
or
mov
imul
jl
mov
sub
mov
cmp
mov
lods
sub
add
xchg
dec
sbb
cwtl
ss
cmp
loope
sbb
mov
insl
push
idivl
push
sar
sub
adc
sbb
pop
iret
out
mov
push
xor
cmpsl
push
inc
in
pop
push
sub
mov
daa
pop
dec
xor
sbb
xor
and
mov
mov
loop
out
xor
hlt
jl
leave
pop
scas
repnz
arpl
push
lods
out
out
scas
xchg
push
bswap
pop
mov
mov
repnz
cli
aad
je
xchg
sub
or
sbb
call
insb
js
in
mov
xor
leave
sub
aam
jo
roll
nop
aas
js
cli
adc
xchg
int
cltd
mov
adc
fisttpl
cmp
push
mov
and
mov
mov
ret
cmpsl
rcrb
sbbb
pushf
pusha
pop
jp
adc
sub
pop
sarb
in
aad
or
mov
daa
xchg
dec
mov
daa
loopne
call
mov
ret
mov
lret
xchg
test
cmp
out
repz
lds
xor
cmp
add
mov
and
js
and
out
sarb
jnp
lds
call
int3
cmpl
jae
cmpsl
mov
mov
jno
mov
mov
lret
sbb
add
repz
adc
cmp
jge
movsb
lahf
aam
adc
sarb
ja
mov
lahf
adc
test
jecxz
fisttpl
inc
and
fiadds
cmp
stos
in
pusha
xor
jbe
je
scas
test
out
dec
mov
jne
mov
fcmovbe
and
push
push
push
push
stos
cmp
stos
jb
mov
imul
mov
jb
bound
or
pop
mov
push
xor
mov
mov
sahf
ljmp
fs
sbb
cli
cmp
dec
mov
add
push
lret
inc
jge
imul
in
loope
xor
mov
inc
dec
xchg
mov
pop
imul
out
daa
mov
mov
lds
les
pushf
movsl
cmp
pusha
mov
pop
loopne
jl
outsl
cs
outsb
mov
jl
call
and
test
inc
cmp
aaa
repz
fmuls
xchg
xchg
pop
in
pop
add
stos
hlt
hlt
ret
shrb
repnz
test
jnp
shll
cmp
xchg
repz
enter
ror
push
fistps
xlat
out
lahf
push
subb
loop
cli
dec
aaa
imul
outsl
loop
cmp
mov
inc
lea
push
or
mov
aam
and
jo
mov
fs
push
adc
mov
repnz
mov
gs
test
imul
ds
lods
jmp
adc
fisubs
dec
pushf
rol
jmp
push
fists
sbb
leave
imul
xchg
jmp
cs
fisttpll
mov
stos
testb
gs
push
mov
lret
push
movsl
and
fs
pop
test
es
and
idivb
xchg
xchg
into
jle
shlb
inc
jbe
ret
lods
nop
jno
adc
gs
mov
outsb
stc
sti
adc
sbb
fidivl
ret
ret
sub
mov
adc
sbb
sub
loopne
out
out
rcl
xor
jp
jmp
cwtl
adc
mov
push
movsb
jbe
pop
icebp
xor
ss
mov
or
mov
push
pop
nop
fisubrl
cmp
adc
imul
loop
icebp
shrl
outsb
dec
jmp
loope
lods
popa
sbb
lock
pop
data16
pop
pop
jg
mov
mov
insb
mov
ljmp
sub
or
add
mov
mov
ds
stc
adc
xchg
add
popa
xor
ret
inc
sbb
pop
pop
push
xchg
push
xor
mov
popa
sbb
pop
add
scas
xchg
lods
fcmovnu
mov
insb
sbb
mov
out
mov
rorl
out
xchg
sti
lock
lret
add
cmp
dec
inc
add
cmc
out
enter
cmp
popf
mov
sahf
pop
loopne
scas
adc
xor
sub
stos
mov
aad
add
das
ja
cmpsl
jo
cmp
rclb
loopne
dec
repnz
mov
push
jmp
into
cld
lds
mov
sti
clc
mov
xchg
pop
daa
sarb
and
adc
out
xchg
cmp
xchg
xchg
ljmp
test
xchg
repnz
iret
lea
xor
sub
pop
or
jl
adc
pusha
call
xchg
sub
enter
imul
in
mov
push
mov
xchg
dec
fisubrl
fbld
push
sub
and
rorb
arpl
jecxz
lret
pop
mov
push
lock
and
jge
or
stos
xchg
fdivr
std
es
out
stos
mov
pop
vpmaskmovd
mov
mov
into
popf
dec
mov
shll
test
pushf
pusha
sbb
jo
cli
dec
pop
enter
test
fildl
xchg
ret
push
adc
fst
mov
mov
jecxz
je
push
push
das
jbe
insl
aas
fs
dec
xchg
jno
xor
cmp
cmp
xchg
cld
imul
data16
mov
sub
mov
cli
std
mov
stos
insl
cli
je
icebp
sbb
adc
jbe
int
lcall
or
dec
jne
mov
cmp
mov
dec
aaa
daa
mov
subl
mov
pop
jns
cmp
mov
and
out
sub
orl
push
push
mov
jp
mov
pop
dec
insl
ljmp
imul
rcrb
int3
mov
pusha
mov
mov
mov
imul
repz
xchg
and
gs
push
mov
and
data16
jbe
fsts
push
sbb
inc
xchg
pushf
jbe
jge
mov
movsb
cmp
rcll
jmp
sub
adc
sub
cmp
iret
dec
push
cld
inc
inc
repnz
push
negl
add
fcmovb
movsl
sbb
aam
rclb
ds
loop
mov
insl
pushf
aaa
cmp
xor
push
mov
add
add
push
push
mov
push
dec
jp
ss
scas
fidivs
mov
orl
cmp
mov
stos
pop
insb
aas
dec
mov
mov
out
hlt
fwait
pop
jae
sbb
ss
fwait
dec
xor
cmp
mov
dec
mov
mov
insb
aam
sti
popa
xlat
out
adc
or
push
xor
pop
scas
xchg
xchg
inc
sub
sbb
pop
lods
jnp
jbe
out
aaa
cwtl
mov
inc
pop
lcall
sub
rcl
cmp
lcall
cltd
sti
js
stos
mov
sbb
hlt
sub
lcall
rclb
inc
lahf
dec
inc
inc
jg
xchg
fstpt
rcl
cmpsb
cmc
lret
test
mov
add
or
xchg
xorl
push
call
les
call
leave
push
in
insl
enter
jg
mov
test
push
ret
xchg
push
and
bound
bound
sahf
lcall
jg
je
test
jp
lods
jno
xor
hlt
adc
int
stc
adc
sbb
and
push
cmpsb
inc
mov
std
jno
jo
data16
shlb
jae
adc
call
add
into
dec
call
cmpb
loopne
pop
pusha
mov
or
fmuls
sahf
or
loopne
xor
jo
fsubr
mov
fimuls
mov
xchg
mov
out
push
repz
mov
loop
push
cld
cmc
and
push
ds
out
fidivl
xlat
jle
dec
add
in
pop
fwait
testl
and
adc
sub
push
sub
stos
lock
int
js
add
xor
iret
rorb
jo
icebp
mov
mov
sbb
mov
mov
dec
sbb
outsl
push
jae
in
dec
aam
jg
xor
data16
fldenv
pop
push
ret
and
push
int3
adc
loop
movsl
fstpt
in
fdivl
jg
or
push
xchg
lock
jmp
jle
and
xchg
push
add
xor
jmp
out
or
fidivs
stc
or
jle
xchg
add
std
adc
xor
imul
push
xor
outsl
aas
aas
jb
xor
out
mov
int3
push
cmp
cld
je
jge
ror
pop
call
adc
adcl
sbb
stos
xchg
lret
jbe
adc
sub
sbb
dec
adc
inc
add
scas
push
xor
or
pushf
sub
lea
jmp
insb
mov
inc
in
pop
push
leave
lcall
out
mov
push
and
sub
addb
sbb
push
sub
pop
fidivrl
and
imul
roll
ficoml
push
pop
scas
mov
mov
sub
pop
xor
mov
stos
imul
arpl
subl
in
enter
sbb
ja
add
aam
jno
or
mov
bound
pushf
mov
fmuls
fbld
jle
in
pop
fisttps
dec
pop
and
cld
push
or
aam
mov
cmp
mov
popa
cli
andb
daa
adc
dec
nop
shl
pop
pop
push
sbb
cwtl
fadds
inc
inc
xchg
adcl
sbb
inc
push
push
dec
sub
fmuls
in
dec
push
sbb
rorb
decl
orb
bound
std
faddl
leave
ficomps
mov
addb
imulb
clc
push
cmp
ja
or
jbe
inc
or
ret
jg
inc
mov
xrelease
popl
dec
or
push
sbb
mov
aam
dec
inc
cmpsl
sarb
sti
mov
mov
cli
stos
push
adc
push
adc
hlt
adc
or
sub
sbb
jno
test
fwait
int
pusha
pop
negl
jle
stos
aas
movsl
pop
add
add
je
scas
inc
rcl
imul
repz
ret
xchg
xor
jno
inc
add
and
push
add
mov
mov
shl
mov
ret
xchg
xor
jno
inc
add
and
push
add
mov
xchg
push
flds
fcmovbe
test
xchg
xor
jne
inc
add
and
stos
cmc
cmpsl
add
mov
mov
add
xor
add
add
jmp
lods
jns
imul
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
xor
mov
lock
jmp
arpl
adc
pop
push
add
add
add
add
add
add
add
add
add
cmp
js
add
sub
aad
je
or
mov
add
ja
sub
lcall
add
add
push
add
bound
lcall
add
add
add
add
add
add
flds
mov
pop
add
adc
and
add
add
add
jbe
aad
xchg
add
inc
add
add
dec
add
add
sti
add
imul
push
add
add
jns
je
fiaddl
lahf
add
add
jg
pop
add
inc
add
xor
cmp
mov
dec
add
add
imul
add
add
into
add
add
add
fiadds
fldl
sbb
add
add
add
add
fiadds
flds
cmp
xor
add
pop
add
mov
add
add
add
add
aad
or
or
cwtl
add
add
movsl
add
add
add
push
add
or
clc
add
add
add
add
and
daa
add
add
add
add
sub
or
pop
add
add
add
and
das
pop
lcall
add
add
add
add
add
inc
add
add
insb
add
pop
add
add
add
adc
add
add
add
out
add
add
add
das
pop
push
add
add
inc
add
gs
add
add
add
add
fldl
je
inc
add
add
add
add
add
add
add
fiadds
or
or
sahf
add
add
pop
add
add
add
add
aaa
add
add
add
add
in
add
add
add
jns
xor
sbb
dec
add
dec
add
popl
lds
push
add
cmp
in
mov
add
add
add
fiaddl
add
add
sub
add
pop
jl
sub
cmp
add
into
add
add
add
ja
jo
inc
add
add
add
scas
add
add
add
ret
add
add
cmp
add
or
in
lret
add
add
add
add
add
add
add
add
flds
inc
add
add
xchg
add
add
add
add
jo
sub
push
add
outsb
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
flds
sbb
add
add
inc
add
add
fiadds
pop
add
add
sub
add
add
insl
add
add
add
add
adc
or
lods
add
add
mov
add
add
inc
add
add
add
add
add
adc
popl
lds
push
add
pop
add
add
add
inc
add
add
or
pop
add
add
jmp
add
mov
add
test
add
pop
add
sbb
test
or
add
add
pop
add
iret
add
add
add
jg
xor
in
or
aas
inc
outsb
jge
xorl
popl
push
mov
repz
pop
add
push
adc
mov
shrb
mov
rorl
xor
bound
dec
and
notb
adc
mov
loopne
pop
test
scas
jnp
sbb
add
xlat
shrb
xchg
out
icebp
or
repz
sub
xchg
notl
outsl
mov
push
daa
dec
jno
aad
adc
mov
int3
push
inc
sbb
shll
inc
ljmp
xchg
cltd
imul
into
adc
push
mov
mul
jbe
nop
pop
movsb
inc
mov
push
mov
cmp
add
push
sub
cmpsb
xorw
fstps
and
rorb
jne
jo
jl
out
in
dec
jge
bound
xor
mov
pop
imul
pop
addr16
and
sbb
sbbl
test
sub
cmp
aaa
loopne
std
ret
xor
mov
cmp
sub
sti
ds
xor
xor
xor
insb
shll
push
cmp
insl
es
push
xchg
fs
cmp
mov
or
dec
ror
les
jecxz
mov
arpl
xor
lock
jno
xlat
lock
popa
xlat
dec
mov
cwtl
das
jno
jae
jo
ds
jmp
adc
imul
lret
in
add
mov
ror
clc
add
cwtl
fldenv
adc
push
push
inc
int3
sbb
js
enter
and
sub
pusha
dec
stos
popl
test
call
aas
xlat
xlat
test
inc
sbb
aad
and
inc
xchg
enter
adc
cmp
movsl
lret
jg
mov
loope
inc
dec
inc
xchg
push
mov
jb
js
and
dec
scas
cmpsb
sub
sarl
push
mov
mov
lock
pop
into
jl
loope
jg
mov
jne
mov
das
mov
cs
add
mov
and
stc
jg
xchg
fs
cmc
aaa
add
xchg
cld
jae
js
mov
inc
outsb
push
mov
int3
and
bound
xor
cwtl
clc
lods
lods
jnp
out
jae
pop
pop
iret
std
outsb
add
pop
stos
je
mov
nop
jne
adc
ja
aad
add
stc
lods
adc
push
test
dec
hlt
out
pop
mov
xchg
scas
daa
push
pop
or
incl
adc
das
adc
sarb
hlt
iret
mov
xor
gs
ret
sti
mov
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
