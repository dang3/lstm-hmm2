loopne
decl
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
xor
fs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
aam
push
jno
inc
je
mov
dec
push
adc
loope
std
in
hlt
roll
xchg
mov
inc
popa
push
jno
inc
je
add
adc
and
xor
test
hlt
roll
mov
inc
js
jno
pop
je
add
adc
and
xor
les
aam
test
filds
push
sbb
xor
xor
fistps
xlat
jp
lds
repz
lret
fnstenv
adc
xor
iret
scas
mov
mov
sub
mov
and
in
orl
push
adc
xor
test
mov
or
push
mov
jg
xchg
xorl
jno
inc
cwtl
popa
add
cmp
les
out
aam
adc
in
sbb
fs
dec
mov
mov
nop
aaa
mov
sbb
and
xor
lods
insb
mov
rcl
leave
cld
cmp
orl
out
inc
icebp
lcall
repnz
cmp
add
xchg
aam
shl
xchg
les
popa
push
fs
je
add
adc
and
xor
stc
aam
in
hlt
enter
cmpsb
movsb
xorl
inc
ja
pop
arpl
jl
mov
mov
loop
add
jno
xor
popa
push
jo
and
dec
jge
cwtl
mov
xchg
iret
shl
fdivp
in
stos
hlt
xor
jp
pop
and
dec
adc
and
xor
in
hlt
roll
mov
inc
popa
push
jno
inc
je
add
adc
and
xor
in
hlt
roll
mov
inc
popa
push
imul
pusha
es
ja
pop
push
push
mov
lea
test
ret
cwtl
mov
inc
xor
cwtl
cltd
xchg
add
cmc
pop
hlt
inc
or
popl
jle
mov
stos
adc
rolb
add
push
xor
cld
cli
and
lods
int
repnz
push
sub
test
sarl
cmp
pop
mov
mov
pop
int3
pop
sub
jl
dec
sbb
call
ljmp
out
xor
sbb
imul
sbb
mov
fwait
mov
jns
stc
jo
sbb
adc
sbb
aaa
mov
jb
lahf
inc
sahf
mov
mov
lahf
es
in
test
pop
stos
inc
inc
xlat
add
shlb
cmp
fists
cmp
outsb
adcb
jno
repz
or
sbb
or
dec
sahf
stos
roll
pop
dec
cmpsb
ds
or
xor
xor
dec
jecxz
fs
data16
mov
incb
cltd
das
sbb
ljmp
add
push
repz
test
mov
or
add
mov
mov
popf
jg
or
loopnew
popf
movsb
dec
xor
mov
push
je
fmuls
push
lcall
mov
sbb
gs
xchg
stc
cmc
mov
lret
jl
loop
lea
repnz
fistpl
fcompl
mov
cmp
push
fcmovnb
lods
push
sahf
test
sub
jp
loopne
inc
outsb
jno
stos
test
inc
sahf
push
inc
mov
dec
xadd
or
popf
popf
push
jge
insl
test
push
ss
mov
outsb
mov
dec
gs
mov
xchg
dec
cmpl
pop
loop
mov
fidivs
sbb
pop
pop
mov
or
xchg
xor
in
jg
insl
call
pop
fsubl
cmc
jecxz
dec
das
stos
in
pusha
xchg
add
pusha
sbb
push
jle
popf
stc
cmp
out
sbb
enter
aaa
int3
xchg
mov
imul
dec
call
test
sbb
addr16
cmpsl
sbb
cmovb
add
addr16
adc
add
and
das
pop
or
ja
cmc
dec
in
add
mov
sub
call
stc
cwtl
cmp
mov
pusha
lcall
icebp
sti
fnstenv
sahf
cmp
lret
mov
pop
xchg
xchg
fstp
xchg
push
shlb
lea
push
aad
dec
in
pop
outsb
add
xor
dec
push
jo
shrb
xchg
gs
bound
or
rcll
cwtl
or
cmp
dec
sub
add
insl
jae
in
popf
mov
adc
ja
sahf
icebp
mov
lods
dec
std
cmp
sarb
cmp
out
mov
les
in
mov
jno
aaa
jae
leave
dec
inc
pop
xor
js
push
adc
dec
test
mov
dec
lret
inc
dec
jb
out
xor
add
adc
inc
fwait
scas
subb
cli
sbb
imul
dec
cmp
inc
icebp
mov
outsb
or
mov
dec
jo
inc
cmpsb
iret
dec
fptan
cmp
jne
iret
push
and
add
mov
mov
and
jno
push
icebp
push
jecxz
jmp
adc
adc
cs
popa
mov
dec
push
or
jne
jb
push
sahf
enter
cmp
push
lods
mov
andl
push
aaa
fcoms
or
cs
jg
xor
dec
fucompp
sbb
stos
and
xchg
test
inc
lcall
mov
andb
jle
gs
or
loopne
jae
ret
mov
jle
mov
adc
jmp
xchg
je
ffreep
or
adc
loopne
mov
mov
repz
cmp
out
repz
xor
cmp
pop
leave
fwait
xchg
mov
cmpsb
mov
mov
repz
xor
cmp
daa
inc
add
outsb
pop
mov
adc
push
push
test
fsubr
loope
mov
insl
cli
loop
or
sbb
dec
pop
adc
push
and
sbb
jns
jl
mov
mov
add
loopne
mov
push
fisttps
mov
xor
sbb
dec
cmp
mov
dec
sub
enter
adc
mov
int
jg
sti
in
mov
sbb
pusha
jo
inc
dec
xor
cld
cmp
jmp
mov
stos
out
cmp
adc
push
sahf
dec
and
lds
mov
or
fnstenv
push
or
push
inc
arpl
cltd
lds
mov
pop
and
fwait
repnz
js
jns
ss
aaa
xor
inc
inc
or
frstor
inc
mov
pushf
aam
out
fwait
push
aas
loope
es
enter
hlt
aam
xor
insl
adc
lods
sahf
jae
mov
test
push
cmp
fcomi
les
mov
ret
clc
mov
adc
test
sbb
or
or
dec
cld
insb
loopne
scas
xor
or
idivl
insl
push
sbb
add
cmp
mov
fs
repnz
and
jae
sub
gs
inc
inc
sub
mov
clc
cwtl
jmp
xchg
sbb
insl
movsl
add
cmc
stos
sub
bound
lret
add
or
pushf
lret
adcl
xchg
dec
into
inc
mov
mov
enter
sub
int
outsl
fcompl
lds
pop
iret
mov
add
and
pop
addr16
jne
mov
mov
mov
mov
and
cmp
fs
mov
xchg
pop
mov
pop
popf
orb
sbb
dec
inc
cmp
xor
idivb
adcb
mov
pop
cmpsl
mov
xor
pop
stos
mov
xchg
lret
je
hlt
pop
je
out
mov
dec
aad
jl
bound
movsb
sbb
inc
sub
adc
mov
sbb
ss
ds
dec
push
aam
sub
mov
roll
xlat
ret
daa
imul
pop
data16
cli
fsubs
or
in
jnp
inc
cmpsb
cli
fsubs
ret
jnp
mov
call
mov
dec
push
scas
sbb
out
fldt
inc
mov
xor
mov
dec
or
jb
shrl
cmp
inc
popa
push
and
sub
pop
out
cmp
adc
aad
loope
adc
xor
mov
pushf
fwait
sbb
pop
scas
cmp
jmp
lods
ficompl
popa
jmp
in
add
mov
pop
fstl
inc
mov
lock
std
xchg
adc
fldcw
jle
gs
or
inc
adc
ja
aad
loop
cmc
sub
in
inc
insb
insb
cmp
loope
insl
mov
mov
cmp
imull
pop
or
ljmp
fnstsw
lret
popf
push
jb
pop
outsl
scas
mov
dec
jno
int
push
pushf
test
in
iret
sub
sbb
cmp
test
mov
inc
adc
jns
loope
mov
jmp
cmpl
shlb
mov
xor
jno
jnp
cmp
jb
mov
fildll
mov
mov
faddl
xor
jo
jl
push
add
push
mov
fcoml
clc
jl
arpl
cmp
adc
pand
sub
xor
data16
adc
out
jbe
jae
dec
loope
jp
xor
fistpll
sub
push
popf
stos
inc
mov
mov
xchg
xchg
sbb
or
loopne
repz
inc
pop
push
stos
nop
sbb
std
iret
in
scas
test
mov
push
dec
ret
push
scas
leave
in
mov
inc
call
jne
fs
xchg
sub
push
dec
std
xor
mov
fcomps
mov
imul
cmp
and
add
dec
dec
ds
ds
add
fs
mov
rclb
ficoms
outsb
xchg
xchg
lods
ret
inc
inc
outsb
push
mov
push
dec
jp
cli
or
iret
clc
icebp
cld
mov
iret
and
hlt
mov
out
orl
adc
jbe
cmp
mov
ret
lret
test
xchg
lcall
mov
or
insl
fcmovnbe
popf
stos
pusha
bound
pop
xor
cli
or
pop
xor
dec
xor
push
adc
push
jne
daa
xchg
push
imul
sahf
rcrl
int3
aas
adc
lcall
pop
jnp
jnp
cmpsb
lea
xor
inc
jo
inc
fwait
dec
rolb
iret
lcall
xor
jl
cmp
inc
imul
imul
cs
and
ficomps
or
cmpl
aaa
dec
sub
popa
cmc
jae
xor
jmp
adc
or
int3
frstor
add
les
mov
mov
push
sbb
shrb
add
sbb
mov
in
add
jno
mov
add
mov
cld
jbe
sub
jg
push
ds
sbb
mov
fisttps
aad
jno
jo
mov
mov
fcom
xchg
xchg
push
mov
pop
push
popf
inc
out
xor
lret
mov
sahf
add
pop
jle
mov
mov
sbb
out
ljmp
cmpsb
or
lds
mov
xchg
loop
or
xchg
add
or
arpl
subl
push
push
cmp
and
daa
data16
pop
cmp
add
test
shlb
stos
push
rcrb
ljmp
sbb
xor
xchg
mov
stos
or
inc
inc
inc
mov
fstpt
in
inc
test
fwait
insl
lahf
mov
push
add
or
dec
int
fdivr
mov
dec
dec
imul
cmp
xchg
popa
insl
cli
jecxz
and
cmp
test
test
pop
add
push
lds
mov
jg
pop
lds
inc
sub
nop
pop
out
pushf
xor
push
test
shrl
xor
int3
rorb
enter
cmp
fsubr
pop
xchg
pop
cmp
and
push
popa
dec
push
xorb
mov
cmp
je
cwtl
or
jle
mov
xchg
mov
jecxz
lcall
jmp
aas
push
lret
out
cld
test
mov
or
adc
int3
inc
mov
clc
jp
arpl
ficomps
pop
ds
hlt
idiv
pop
xlat
xchg
mov
add
mov
xor
data16
jb
cmc
sbb
push
mov
xchg
pop
mov
mov
jnp,pt
in
into
push
sarl
dec
dec
inc
rorl
dec
cmp
inc
cwtl
xchg
mov
xchg
shll
imul
es
dec
mov
cmp
push
lock
pop
mov
and
mov
pop
cwtl
pop
repnz
jp
adc
xchg
sbb
sub
pop
xchg
cmc
adc
arpl
dec
and
mov
jne
stos
xor
enter
movsl
dec
jb
lret
lret
in
cmp
and
ss
add
call
fisttpll
jecxz
fbld
aaa
lock
in
sti
aas
aaa
dec
stc
inc
repnz
jbe
xchg
mov
and
dec
inc
mov
sub
jecxz
fwait
mov
iret
in
mov
jmp
sbb
mov
adc
jecxz
add
and
jle
lcall
mov
and
mov
inc
push
push
in
xchg
add
xorl
jmp
insl
xchg
inc
arpl
and
sbb
inc
divl
sub
in
push
lret
out
pop
cmc
lods
mov
into
add
xchg
pop
inc
jl
jb
call
loope
inc
lea
or
mov
out
jp
in
imull
xor
fsubrl
loopne
mov
out
inc
js
in
or
icebp
push
or
fadd
or
add
cmp
cmp
sahf
jecxz
push
push
andl
and
push
cmc
stos
push
imul
dec
inc
jnp
jnp
loope
in
cmp
add
rcrl
mov
xchg
inc
pop
mov
cltd
push
cmp
jge
adc
je
dec
pop
insb
xchg
inc
dec
inc
inc
popf
in
lret
mov
lods
push
cwtl
push
inc
cmp
lds
jmp
mov
or
fidivl
xchg
and
rclb
insb
stc
ja
jb
xor
xchg
push
pop
stos
inc
shl
push
sahf
dec
gs
sub
push
sub
mov
and
in
xchg
je
cli
xchg
ret
das
xor
mov
repnz
mov
mov
lds
sub
movsb
stos
mov
test
out
ret
rcl
cmp
lock
cltd
sbb
mov
push
xchg
mov
dec
sub
call
or
scas
test
adc
jg
in
outsl
add
js
xchg
lods
push
pop
movsl
mov
sbbb
int3
pop
in
sbb
pop
mov
inc
bound
mov
mov
adc
mov
sub
cwtl
repz
mov
push
mov
inc
test
std
out
and
stos
add
push
jmp
repnz
mov
mov
jg
jns
rorl
xchg
sub
push
sbb
dec
movsl
arpl
test
arpl
out
rclb
lds
pop
shll
mov
je
sbb
loopne
scas
out
mov
imul
cmp
popa
lret
aad
repz
leave
dec
or
fidivl
mov
sbb
inc
popa
andl
xchg
je
int3
push
cmp
rolb
icebp
mov
cmp
inc
loope
popa
cmp
mov
addr16
push
adcl
stc
inc
adc
mov
fwait
lret
jl
or
add
xor
or
mov
push
lret
bound
dec
outsb
mov
lret
and
add
or
insl
mov
bound
adc
clc
adc
xor
shrl
lods
ljmp
lret
push
cmp
pop
pop
lods
sti
aas
mov
and
xchg
mov
icebp
push
loope,pt
cld
jmp
and
nop
push
mov
aam
cmp
int3
push
cmp
push
movsb
stc
lret
cwtl
lret
jnp
mov
adc
loop
mov
aam
fistps
in
out
mov
aaa
mov
pusha
mov
mov
jno
jno
popf
push
mov
or
ffree
inc
in
cmp
cmp
add
fsubrl
sbb
inc
and
or
mov
xor
fs
jmp
es
sbb
stos
movsb
dec
sub
movsl
jg
into
insl
and
pop
mov
sub
fistpl
xchg
sbb
call
lahf
cmp
fsubr
mov
repnz
mov
jne
pushf
pop
or
int3
mov
pop
sahf
dec
push
andl
sbb
push
cmp
dec
and
roll
sti
repnz
int
fbstp
cmp
dec
lcall
mov
xchg
fnstsw
cmp
sbb
repz
inc
or
cmp
add
mov
push
mov
jp
xchg
lods
lret
fwait
int
xchg
cmp
xorb
repz
xchg
insl
lret
and
cwtl
in
add
mov
cli
xchg
sbb
test
gs
in
fs
xor
sub
xor
imul
jecxz
cltd
cmp
into
pop
in
movsl
pop
add
and
fistpl
cmp
rol
mov
push
rclb
ret
sbb
insl
mov
movsl
shr
sbb
sahf
mov
aas
mov
cltd
test
push
lcall
outsb
in
jne
icebp
mov
lret
jp
pop
push
ljmp
imul
hlt
test
es
iret
jecxz
dec
mov
jl
add
sbb
mov
ds
mov
data16
push
mov
data16
ja
inc
mov
inc
or
push
mov
loope
and
and
xchg
push
in
jle
cmp
cmp
mov
mov
push
or
sub
adc
mov
sbb
mov
and
scas
or
jl
sbb
mov
xlat
pop
repnz
xor
mov
jne
daa
xchg
jbe
or
push
fwait
aad
mov
fsubr
jbe
push
add
pop
subl
jne
rcrb
hlt
aaa
jp
frstor
xchg
bound
inc
mull
insl
mov
lahf
add
sub
add
stc
lcall
sbb
mov
shl
scas
inc
orb
and
dec
xchg
mov
and
xor
mov
fidivs
jmp
and
sbb
xor
negl
cmp
pop
ficoms
sbb
adc
ja
or
mov
mov
push
aam
loop
inc
sahf
pop
or
outsb
mov
and
push
ss
mov
mov
push
and
jns
mov
insl
or
or
xor
xchg
mov
test
fimuls
aam
aad
mov
andb
insb
into
rcr
lea
testl
out
sbb
and
mov
aas
or
enter
int
jp
adc
and
aad
and
lods
push
andl
leave
rorb
jge
push
popa
fucom
add
fxtract
daa
test
clc
das
inc
sahf
fs
or
xchg
xor
aas
mov
cs
sahf
adc
push
je
cs
xorl
push
jno
inc
push
int3
dec
mov
stc
mov
cli
xor
jb
push
hlt
push
push
jmp
mov
sahf
sub
xchg
out
xchg
adc
mov
pop
sbb
mov
xchg
mov
xchg
shll
pop
lcall
push
imul
push
outsb
mov
out
pop
nop
pop
bound
inc
pusha
std
fwait
sbb
push
lods
cmpsl
mov
test
dec
jbe
popa
pop
and
xor
inc
clc
jae
fs
lods
int3
iret
test
in
and
lds
pushfw
out
ljmp
lock
fists
mov
push
push
pop
lea
xchg
or
mov
imull
in
add
jne
dec
stos
nop
adc
fnstcw
dec
or
rcl
movsb
inc
icebp
jle
xchg
in
outsb
pop
jge
push
sbb
lahf
push
repz
js
dec
psrlw
push
cltd
les
inc
loope
inc
add
sarl
ret
lds
sbb
iret
jl
xor
in
mov
add
push
fdivs
xor
xchg
cwtl
in
in
sbb
or
lock
test
mov
push
and
pop
call
sbb
dec
dec
mov
sbb
pop
sti
in
mov
sbb
pushf
push
cmp
cmpsb
icebp
pop
ficoms
jmp
cmp
push
arpl
xlat
adc
mov
ret
call
fnstenv
fwait
cmc
push
pop
jbe
and
js
mov
aad
inc
dec
dec
scas
stos
ret
shll
js
sub
jb
and
adc
cmp
iret
xor
sbb
pop
push
ret
pop
dec
push
dec
test
mov
repz
mov
jmp
js
xchg
or
mov
and
out
sub
pop
add
in
fstl
jmp
aaa
mov
jbe
pop
cwtl
mov
sub
xor
test
mov
popf
imull
xor
ds
and
nop
cmp
jle
dec
mov
pop
inc
xchg
pusha
adc
jmp
push
and
sarb
jbe
sbb
sub
add
mov
mov
mov
iret
xor
dec
icebp
sbb
sub
fcomps
jb
push
clc
push
outsl
xchg
mov
push
scas
jecxz
sub
out
jl
dec
jmp
insb
xor
or
mov
xor
push
jno
pop
mov
xor
mov
daa
daa
arpl
pop
movsl
xor
shr
int
movsl
sarl
orl
xor
mov
mov
out
sub
scas
lds
movsl
mov
lahf
xchg
mov
sti
push
mov
out
cmpsl
jg
inc
inc
loop
je
sbb
in
rcll
in
pop
test
das
lock
rolb
sbb
jno
scas
je
add
adc
and
xor
in
hlt
roll
mov
inc
popa
push
jno
inc
je
add
adc
and
xor
in
hlt
roll
mov
inc
popa
push
jno
inc
je
add
adc
and
xor
in
hlt
rolb
mov
inc
popa
push
jno
inc
je
add
adc
and
xor
dec
shl
repz
pop
jle
outsb
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
mov
mov
jmp
mov
fldenv
leave
adc
add
jae
popa
mov
inc
test
xchg
jns
imul
cmp
pop
and
and
adc
or
mov
inc
test
mov
fwait
imul
sti
xor
sub
add
jae
or
bswap
adc
ficompl
daa
xchg
or
cmp
jecxz,pn
adc
fdivs
cmp
jnp
bound
cld
jb
xor
pop
pop
jmp
aas
aad
sbb
cmc
push
jns
imul
std
stc
and
mov
dec
pusha
arpl
inc
xor
xor
add
sub
jae
lahf
mov
inc
mov
pop
imul
mov
int3
cld
adc
fcoms
cli
jecxz
mov
or
sti
dec
sahf
xor
sub
mov
fsts
ds
lods
test
push
pop
cltd
inc
hlt
aam
jl
or
loope
and
aad
fldcw
icebp
ss
xor
mov
mov
arpl
sbb
or
jecxz
test
or
sbb
dec
mov
dec
idivb
testl
push
ret
dec
xor
xorb
std
and
cs
or
sbb
dec
lahf
jbe
cmp
push
nop
inc
jo
inc
lahf
adc
lds
bswap
push
ljmp
jmp
mov
cmp
sub
fldenv
leave
adc
add
jae
arpl
mov
mov
imul
cmp
sub
fldenv
leave
adc
add
jae
arpl
mov
mov
lahf
addb
adc
arpl
mov
aaa
cltd
sbb
push
adc
pushf
in
cwtl
cmp
jecxz
negl
jg
and
ficoml
xlat
addr16
stos
jmp
sbb
mov
imul
push
push
adc
leave
push
inc
dec
stos
rclb
movsb
pop
or
mov
shll
and
add
and
loop
scas
scas
ret
loope
inc
inc
jne
mov
mov
push
inc
and
add
adc
lcall
sbb
pop
outsb
xchg
aam
imul
push
add
fisubrl
push
mov
lret
and
adc
xchg
cmc
xchg
xchg
pushf
push
and
fisubl
aaa
sub
cmp
jne
cs
inc
cmp
push
arpl
and
xchg
iret
pop
sub
outsb
insb
pop
and
and
cld
add
xchg
je
aas
add
pop
or
dec
cmp
push
xchg
jle
adc
out
pop
dec
sbb
pop
sarl
mov
adc
andl
adc
mov
xchg
jmp
cmp
push
inc
lods
call
aam
sbb
xor
sbb
mov
pop
in
movsl
xor
cmpsb
lods
stos
test
popa
jp
jp
mov
popa
cmp
or
sarb
push
dec
ficoml
fildl
xchg
pop
jns
push
and
and
or
dec
inc
ds
mov
push
xor
out
fucomp
mov
or
dec
add
negb
andb
int
jle
or
out
es
mov
mov
insb
fs
cmp
lret
pop
mov
sub
outsl
inc
es
adc
cmc
inc
jae
mov
cltd
dec
and
leave
jne
and
lcall
repnz
enter
addr16
push
insb
sbb
mov
cmpsb
jmp
xchg
pusha
cmp
jl
dec
jns
sbb
add
mov
sti
stc
outsb
or
inc
pop
jge
add
pop
push
insb
aam
sbb
dec
outsl
adc
loopne
lret
cmpsb
div
sub
and
fisubs
push
lds
lods
mov
insb
leave
mov
jmp
and
dec
sbb
scas
mov
stos
cwtl
cmp
fiaddl
sub
push
inc
decl
dec
lods
in
lock
cmp
xchg
aas
ja
enter
movsl
loopne
jb
pop
in
adc
cmp
xchg
inc
cltd
mov
mov
jne
push
subb
sbb
xchg
les
dec
dec
stos
dec
hlt
in
cmp
loopne
inc
stc
je
sub
loope
xor
in
mov
test
arpl
call
inc
and
pop
adc
repz
jns
and
push
dec
es
xor
sbb
ljmp
aad
sahf
jp
pop
lcall
inc
ret
sub
push
je
popa
sbb
jnp
add
jp
xor
cltd
jl
jecxz
jmp
mov
jno
xlat
push
ljmp
dec
pop
pop
ds
jnp
xor
sarb
xor
rcll
push
mov
lahf
out
jb
fstps
jge
push
mov
xor
cmp
adc
ret
lahf
adc
pop
inc
jno
popa
addr16
and
push
xchg
mov
mov
xor
shrb
das
sbb
or
out
leave
pop
stos
adc
pop
jmp
in
jge
xchg
pop
shlb
insl
cmpsl
mov
enter
lods
sub
mov
adc
movl
mov
and
jle
test
out
daa
divl
enter
dec
loop
push
ja
lahf
out
mov
les
subb
pop
enter
arpl
lods
in
mov
sbb
ret
dec
push
into
fstpl
adc
test
or
xchg
xchg
shrl
clc
or
mov
out
mov
xor
mov
jmp
sbb
dec
pushl
push
mov
fnstcw
sti
mov
movsb
sbb
cli
rolb
inc
jae
add
cmp
testb
fildl
push
add
outsl
mov
adc
out
popa
sub
aad
popf
fwait
xchg
xorb
xor
inc
in
dec
out
es
sub
ret
jnp
sub
shl
leave
test
das
cli
or
jae
in
imul
mov
dec
lods
mulb
mov
jle
fidivl
add
call
push
mov
loope
adc
sbb
aas
dec
fstpl
dec
mov
popf
fcoml
push
std
daa
jge
mov
test
das
pop
pop
stc
pop
xchg
pop
dec
xchg
lret
jne
jle
add
rol
mov
mov
enter
jae
fisubrs
xchg
mov
lods
mov
mov
lcall
mov
xchg
fmuls
hlt
mov
push
lcall
std
adc
cld
or
cmp
cs
out
les
mov
nop
hlt
cmp
dec
mov
loop
sbb
sbb
adc
insl
sbb
lods
xorb
jns
adcb
popa
sbb
xor
xor
fnsave
std
je
mov
cmc
lcall
lahf
popf
out
and
fsub
arpl
mov
shl
scas
in
pop
hlt
cmovae
xchg
add
mov
addr16
loope
ret
pop
outsl
lds
lods
fwait
jae
and
push
cmp
xlat
adc
dec
lret
sbb
push
mov
es
cmp
or
lret
arpl
in
repz
dec
pusha
sub
nop
ret
ljmp
sub
testb
inc
inc
lods
pop
call
or
sbbb
dec
jo
ss
jle
sbb
out
inc
adc
dec
sarb
add
addr16
adc
ror
mov
ds
inc
aaa
xchg
mov
out
mov
xchg
cld
pop
les
daa
push
das
fsts
mov
popa
aad
aas
add
es
iret
hlt
fld
jbe
movsl
cmp
pushf
insb
cltd
inc
shr
push
dec
fcmovnu
sub
cmp
jle
cmpl
or
test
jb
add
sti
imul
orb
push
les
adc
out
ficompl
cmp
loopne
sbb
dec
mov
push
sub
dec
bound
mov
out
mov
xchg
jae
lods
jmp
or
cmp
and
shll
lret
mov
lahf
xor
imul
xor
loopne
clc
movsl
in
mov
inc
xor
pop
lcall
mov
or
add
cld
mov
mov
shlb
cltd
inc
lahf
ja
dec
cmp
pop
cmp
sbb
int
mov
pop
shll
in
inc
in
ljmp
jge
sub
xor
fsubs
mov
dec
es
cmp
es
jno
cmpsl
rorl
gs
mov
aas
jge
fstpt
push
div
mov
pop
cmpsl
adc
pop
add
stc
in
hlt
dec
imul
xchg
and
lcall
sub
icebp
or
test
in
xor
push
jno
fcomps
or
lods
cmp
in
ret
xor
dec
jecxz
sub
push
mov
sbb
shrb
scas
mov
push
sub
in
enter
and
movsb
lock
insl
std
sbb
pop
test
fs
aam
or
ret
sub
push
dec
inc
mov
lods
aad
jns
stos
lcall
inc
fwait
xchg
addr16
out
mov
push
enter
icebp
test
cmp
insl
dec
loopne
ds
imul
repz
jb
jp
pop
lahf
clc
inc
movsb
sbb
inc
pop
fs
testb
mov
sub
test
inc
int
imul
mov
aaa
mov
mov
jnp
pop
test
repnz
xchg
lret
cmp
sub
push
lcall
sub
popa
mov
lahf
mov
dec
mov
or
sbb
jo
cmp
cmp
push
cmp
dec
cmp
push
sbb
hlt
xchg
sbb
sbb
push
cmc
pop
sbb
leave
aas
lock
xchg
mov
xor
cld
sub
int
xor
inc
xor
loop
sbb
push
jg
and
xchg
add
aas
pop
jo
popf
fdivs
ret
cmpsl
jae
pusha
xor
push
cmpsb
inc
xor
sbb
mov
outsb
mov
or
sub
in
sub
mov
ffree
push
fwait
and
push
daa
sub
and
lods
jne
repnz
mov
push
repz
sbb
push
and
mov
outsl
cmc
pusha
fildll
jae
xor
jae
inc
fisubrs
aam
xor
fdivrs
jg
push
adc
sarb
ja
push
loop
out
push
lock
lea
lret
rcl
and
lcall
mov
rclb
inc
pop
shll
jbe
dec
pushf
adc
jp
fs
pop
mov
xchg
jo
js
mov
xchg
jge
ret
movsl
sub
loop
pop
xchg
sbb
aad
sti
into
fwait
push
mov
insb
dec
imul
repnz
cs
scas
es
mov
dec
pop
sub
pop
lcall
jne
shrb
loope
mov
add
mov
rcrl
test
pop
xor
insl
dec
in
and
arpl
pop
imul
cli
mov
xchg
jmp
lahf
pop
mov
in
dec
cltd
nopl
fisubrs
sbb
or
jns
lods
mov
cld
rcr
jl
push
mov
mov
enter
dec
fcoms
leave
mull
adc
je
sarl
push
js
je
jmp
lock
ficoml
daa
dec
test
pop
cwtl
sahf
lea
pop
pop
data16
aad
imul
xor
xchg
xchg
ljmp
leave
lea
dec
or
and
jae
notl
incb
stc
ljmp
in
cmp
pop
sarb
pop
add
fs
mov
mov
ja
push
mov
dec
test
hlt
rorl
fwait
scas
loope
outsb
fwait
or
push
in
xchg
les
push
mov
lret
imul
dec
dec
lret
jno
jmp
rorb
xor
inc
lret
fadd
cvtpi2ps
mov
mov
not
mov
sbb
or
add
lret
mov
fisttps
setl
add
mov
or
movsl
stos
and
adc
and
aas
jle
stc
pmulhw
hlt
jo
mov
jne
push
pushf
push
sahf
mov
xchg
and
cli
je
aam
mov
fnstenv
js
push
lds
jae
outsl
or
loope
mov
cmp
popf
int
int
je
push
pop
bound
movsb
add
add
sahf
sub
add
pop
ljmp
mov
imul
adc
xlat
sub
or
fsubs
stc
outsb
outsb
icebp
fldenv
incl
ficoms
iret
mov
dec
fbstp
test
xchg
lock
fs
push
dec
inc
enter
mov
out
fxrstor
arpl
aad
dec
pusha
sbb
out
cmp
into
lock
mov
aaa
sbb
divl
mov
mov
xchg
mov
xchg
sahf
das
xchg
scas
jl
jo
test
addb
cwtl
stc
icebp
dec
push
and
ret
or
imul
pop
dec
sbb
xchg
fwait
insl
aas
lahf
mov
stos
xchg
xor
fwait
bound
and
add
sub
lock
leave
inc
aad
sub
fwait
dec
dec
jp
dec
test
ja
mov
inc
mov
nop
data16
sti
push
xchg
push
fcmovnbe
xor
in
pop
data16
shrb
jmp
clc
jmp
ret
jecxz
pop
nop
inc
hlt
aas
out
rol
imul
mov
sar
mov
je
cmc
icebp
or
mov
add
inc
pop
xchg
sbb
imul
hlt
ljmp
iret
repnz
add
pop
cmp
push
repz
jl
mov
sub
xchg
cltd
out
popa
icebp
mov
outsl
das
aaa
adc
jnp
fisubl
jns
lea
adc
xchg
mov
hlt
or
mov
add
dec
push
in
fimull
lea
bt
lock
hlt
fmul
cmp
test
int
adc
test
test
inc
mov
sbb
test
insb
sbb
sub
mov
jo
ret
stos
out
cwtl
das
cli
insb
addl
push
andl
add
sarl
ds
push
pusha
or
jnp
mov
nop
fcompl
imul
repnz
mov
fldcw
flds
mov
inc
aaa
dec
mov
xor
cmp
xor
or
mov
fisttpll
or
aad
adc
adc
shll
mov
push
stc
jp
fidivrl
and
jmp
add
popa
lods
andb
mov
je
inc
imul
or
addr16
add
and
rcrl
and
int3
push
pop
popa
fwait
js
scas
mov
jmp
mov
mov
cmpsb
and
xor
adc
mov
nop
sbb
xor
pop
lahf
dec
xor
xor
push
mov
jmp
adc
sar
jp
int3
xchg
loope
mov
add
pusha
test
and
scas
xchg
push
pop
fisubrl
sub
adc
mov
jl
hlt
sbb
jb
lods
inc
inc
lds
and
mov
jmp
cltd
shrb
cmp
jg
push
pop
mov
insl
adc
pop
push
sub
inc
lahf
mov
cmpl
pusha
leave
pop
ret
push
cli
mov
mov
imul
ds
clc
mov
or
jge
stc
scas
jbe
les
xor
pushf
mov
push
cmp
ja
adc
in
jecxz
add
adc
cwtl
xor
adc
sti
push
mov
lock
push
lea
sub
lcall
sbb
outsb
ds
sub
cmc
pusha
pusha
cmp
sbb
sub
pop
lcall
test
dec
and
dec
in
sbb
int
cmpsb
or
mov
dec
imul
mov
cmp
xchg
sub
adcb
push
daa
out
gs
lret
push
stc
mov
cmpsl
xor
lcall
adc
jbe
or
xorl
mov
insl
push
shl
mov
popa
mov
fisubl
cmp
cmp
out
ror
aam
sub
fnstsw
mov
mov
lods
lret
mov
es
enter
pop
fdivl
and
popa
dec
add
jne
mov
fs
mov
dec
fimuls
out
and
mov
mov
jmp
pop
mov
push
movaps
mov
aad
cltd
push
cmpb
cli
mov
outsb
lods
test
daa
gs
lock
sub
stos
dec
or
lahf
mov
insl
push
fimuls
out
cmp
cmp
add
add
mov
xchg
mov
inc
into
or
test
xchg
xlat
jp
or
or
sbb
clc
fnsave
or
sub
xor
cltd
push
and
mov
lcall
sar
xchg
pop
loopne
cli
icebp
aaa
pop
inc
jecxz
ljmp
mov
out
and
add
out
push
and
add
sbb
aam
sbb
in
cmp
xchg
push
pop
xchg
push
adc
pop
inc
and
push
push
push
push
push
outsl
into
pop
xor
in
xor
addl
sbb
mull
xchg
iret
mov
insl
fbstp
jnp
dec
mov
push
xchg
xlat
mul
fmuls
ljmp
xchg
cltd
xchg
shlb
jmp
sub
icebp
pop
aam
pop
inc
fldt
repnz
sbb
je
aad
cmp
jae
fldt
test
mov
loop
popl
xor
push
call
jo
aaa
stos
lcall
mov
push
xlat
mov
jecxz
sbb
pop
aas
sti
mov
mov
fildll
jo
test
push
jae
fcmovne
adc
mov
inc
jmp
push
test
pop
mov
fmull
or
pinsrw
ss
lret
push
adc
inc
add
adc
into
lea
enter
pop
push
lock
scas
sar
loope
ret
push
pop
or
ss
pusha
stc
ja
ds
jge
push
outsb
mov
xchg
sahf
pop
sub
jae
rcrb
adc
call
enter
mov
push
ficomps
lock
sub
cmp
jbe
lods
adcb
pop
iret
cld
jo
rcrb
fisubrl
xchg
sub
or
outsl
adc
fwait
punpckhwd
inc
xor
inc
dec
mov
stos
fimuls
mov
rclb
in
rsm
enter
sub
jb
stc
sub
jp
jne
or
add
fmuls
pop
fildll
or
pop
cs
pop
xchg
mov
movsl
fwait
adc
filds
xchg
inc
adc
or
pop
xchg
sub
and
test
push
mov
cmp
cmp
mov
jmp
add
movsl
pop
pop
pop
push
cltd
mov
cmc
jl
jp
andb
ret
inc
inc
aas
rcrb
mov
arpl
adcl
mov
cmp
nop
arpl
adc
cwtl
aad
roll
sarb
jb
inc
call
into
dec
mov
pop
std
rorl
pop
sbb
loopne
scas
shrb
pop
test
push
adc
dec
adc
jg
pop
sahf
pushl
daa
mov
sti
xchg
dec
out
imul
loope
xchg
dec
push
pop
inc
popa
aad
lea
sub
adc
ficomps
or
jnp
mov
or
aad
cmpsl
lods
pop
insb
and
mov
hlt
xchg
jl
mov
ss
mov
mov
inc
iret
in
lods
rcll
into
popa
xchg
jl
xchg
jecxz
lret
jb
popf
icebp
sub
mov
out
addl
imul
int
mov
sub
inc
and
jmp
orl
scas
sbb
ljmp
mov
neg
fiaddl
sub
jns
xor
rcrl
push
inc
fildl
push
mov
fwait
cmp
outsl
mov
xor
pop
push
jp
mov
jl
test
push
and
rorl
hlt
mov
scas
ret
sbb
ja
cwtl
sar
fs
aas
fimuls
in
push
fildl
test
dec
rorl
pop
call
xchg
loop
sbb
pop
sub
mov
subl
push
sar
pop
mov
mov
out
xorb
jmp
xorb
adc
mov
loopne
xchg
outsl
dec
test
inc
xor
pushf
out
dec
dec
js
lcall
dec
aaa
movsl
mov
dec
mov
mov
out
rcr
into
or
test
sbb
sahf
cmpsb
sub
cmp
or
mov
test
incl
popf
add
dec
lea
cmp
xor
jns
daa
mov
popa
jecxz
ret
jge
add
adc
hlt
cwtl
sti
adc
je
test
sub
xor
iret
push
sbb
pop
xor
subl
xchg
mov
dec
clc
daa
sub
mov
or
sahf
lahf
fsts
cs
pop
xchg
xchg
mov
sarl
dec
xor
into
mov
jnp
sub
scas
aaa
scas
in
dec
sbb
mov
xor
nop
loop
xchg
decl
insl
dec
jno
scas
or
push
repz
ljmp
imul
xor
jmp
xchg
xchg
in
shl
xchg
insb
sbbb
push
fucomip
ucomiss
push
rclb
pop
xchg
cmp
or
je
inc
mov
je
cmp
cld
xor
aas
xchg
adc
add
lock
and
lret
xor
jl
or
cs
imul
pusha
loop
push
or
sbb
stos
je
jo
popf
shrl
mov
adc
fmull
or
adc
pop
insb
push
pop
push
and
mov
and
mov
mov
pop
pop
mov
addl
sahf
xchg
loopne
jns
subl
mov
movsl
into
gs
mov
mov
movsb
aam
adc
inc
push
rcl
leave
mov
sahf
jns
repnz
cltd
adc
jecxz
sarl
ret
sub
fldenv
leave
adc
add
jae
arpl
mov
mov
imul
cmp
sub
fldenv
leave
adc
add
jae
arpl
mov
mov
imul
cmp
sub
add
leave
adc
add
jae
bound
mov
mov
push
push
mov
fsubl
stc
add
lods
inc
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
inc
push
cmpsb
push
cs
dec
aaa
jle
add
jle
xor
mov
out
incb
push
push
push
cs
dec
pop
pop
outsb
outsb
jle
fimuls
mov
fsubrp
out
aam
sahf
push
test
clc
ds
dec
push
pop
inc
outsb
xchg
mov
mov
out
mov
mov
outsb
push
dec
pop
mov
insl
jge
mov
cmc
xor
stos
stos
adc
cmp
push
dec
push
push
inc
mov
push
pop
mov
hlt
or
push
stos
dec
fimuls
outsl
push
jae
pop
push
push
fisubrs
cld
mov
nop
sbb
popa
lahf
push
test
inc
xor
push
loop
arpl
or
imul
mov
sahf
fwait
jb
popa
mov
ds
fwait
add
mov
jecxz
rcl
xor
aas
ss
jno
mov
mov
into
mov
push
push
or
nop
fwait
ss
add
divl
lcallw
dec
mov
push
push
push
cs
ds
dec
sbb
outsb
jle
mov
jbe
mov
fsubrp
out
lcall
outsl
push
jg
or
sub
pop
or
filds
cmpsl
mov
mov
jb
data16
pop
daa
or
or
in
lret
leave
shr
mov
mov
dec
pop
dec
jg
or
outsb
outsb
jle
mov
mov
fsubrp
out
decb
push
push
push
cs
dec
pop
pop
outsb
outsb
jle
mov
mov
fsubrp
out
decb
push
fidivl
xchg
stc
add
sbb
mov
popa
imul
dec
xor
lret
data16
pop
fisttpl
cmp
cmp
lock
lods
ds
xor
xchg
push
dec
xor
repnz
cmp
lods
cs
push
fcom
and
repz
pop
pop
mov
mov
ret
jae
jae
dec
shlb
dec
jns
repz
ja
push
push
cmp
jg
notb
sahf
adc
sub
xlat
popa
ret
testb
das
filds
fnstcw
cld
jg
adc
mov
pop
lret
gs
scas
adcb
lds
push
add
jo
gs
push
imul
aam
xor
in
xchg
push
imul
mov
cs
enter
insb
or
sahf
mov
aaa
push
fcmovbe
outsl
push
cmp
sub
or
shl
stos
fidivrs
mov
paddusb
inc
loop
sbb
test
in
lret
es
jbe
push
pop
mov
mov
rclb
push
sarb
pop
insb
push
xor
mov
adc
and
fptan
ret
xchg
and
je
add
les
aad
fcoml
orb
cli
insb
ret
add
test
pusha
xchg
call
push
push
fdiv
pusha
arpl
fs
mov
jmp
int
loope
nop
in
inc
inc
fcomps
pop
and
jnp
mov
sti
push
iret
sahf
cli
adcb
adc
lret
stos
xchg
lret
and
jg
inc
sub
dec
mov
push
jb
sbb
xchg
shr
cmpsb
sub
xchg
mov
inc
pusha
aad
cltd
icebp
addr16
xchg
lods
test
jl
add
lcall
fbstp
mov
into
or
or
and
mov
out
mov
lcall
xor
dec
je
add
mov
gs
add
aas
mov
jp
lea
sbb
sub
loope
sub
pop
push
pushf
sbb
jecxz
repz
scas
repz
lea
xlat
imull
nop
xchg
sbb
xchg
cli
jg
add
std
in
fsubrl
into
sbb
mov
push
inc
pop
inc
aad
xlat
cltd
xor
mov
bound
scas
pop
gs
dec
cmp
push
sahf
or
in
mov
repz
negl
cmp
mov
and
mov
negb
push
data16
xor
jge
mov
not
sbb
adc
stos
test
push
inc
pop
ffreep
sbb
xchg
pushf
lret
cmc
cld
scas
xchg
xor
adc
loope
pushl
lret
daa
inc
shlb
outsl
insb
scas
xlat
popf
adc
dec
test
push
push
pop
sub
orl
and
pop
cli
repnz
cmpsb
sbb
movsb
xor
ret
fwait
fs
sub
mov
loop
lods
enter
imul
sti
mov
inc
cmp
inc
out
mov
jno
xor
lret
push
mov
inc
in
pop
xor
xor
insb
mov
addb
es
mov
fidivs
and
and
fdivrl
lcall
ljmp
je
movsl
fdivl
out
mov
sub
pop
pushf
adc
sub
xor
adc
inc
push
iret
pop
push
shr
pop
sbb
sti
push
add
xor
mov
xchg
sub
jg
mov
enter
xchg
and
pop
mov
hlt
out
sbbb
jecxz
in
rorl
ret
pusha
mov
imul
pop
lret
xor
xchg
mov
cmc
cld
dec
inc
ret
mov
repz
dec
in
aaa
add
test
sbb
and
lahf
insl
lock
mov
sub
rcrb
and
das
hlt
jb
jp
push
adc
out
les
fdivl
movsb
sub
jge
lds
lea
pop
adc
loopne
jnp
or
gs
divb
inc
push
ds
pop
sbb
xchg
mov
xchg
lock
xchg
movsl
stos
ret
jl
sub
cmp
mov
mov
jae
test
push
mov
imul
push
leave
inc
icebp
add
jb
lock
bound
data16
addr16
pop
daa
pop
pop
lret
loop
sbb
fbstp
loopne
int3
aad
cmp
push
test
push
xchg
sub
xchg
test
xchg
add
mov
and
rorb
xchg
or
sbb
scas
cld
add
mov
push
add
or
hlt
and
xor
mov
push
gs
jae
lock
mov
lea
imul
inc
loop
ss
adc
negb
bound
xchg
jecxz
imul
lods
test
ret
aaa
or
push
les
fcoms
sbb
out
test
and
lds
cvtps2pi
inc
mov
jno
mov
xchg
repnz
jae
jmp
xlat
ret
mov
fistl
mov
add
adc
stc
mov
or
ja
pop
imul
jbe
popa
leave
dec
and
das
fsubl
pusha
lcall
insl
sub
mov
aam
ljmp
int3
mov
xor
push
cmpsb
call
daa
xchg
addl
or
int
sub
mov
fwait
lods
cmp
stos
xor
mov
push
or
add
addr16
xor
enter
mov
clc
sbbl
into
mov
rcr
jg
push
das
out
mov
inc
out
fisubrl
es
imul
cmp
setnp
iret
add
and
push
repz
pop
jmp
sbb
mov
aaa
jg
cli
push
jecxz
sub
adc
dec
insb
pop
push
cmp
jbe
cmpl
fildll
jo
jp
js
cld
shrb
add
sub
es
jle
movsb
cmpsb
imul
inc
dec
and
adc
inc
fmul
mov
inc
jg
push
data16
jmp
sub
cmp
pop
roll
cmpsb
test
push
add
cmpb
orl
sbb
lret
mov
shrb
popa
std
dec
enter
or
mov
cld
xchg
or
rcl
adc
pop
mov
push
loop
xchg
cmp
mov
cwtl
aam
adc
sub
fsts
xchg
mov
movsl
pop
inc
fidivl
push
loope
pop
push
loope
sub
dec
sahf
push
add
sub
je
mov
inc
int
mov
fmuls
mov
out
pushf
or
jns
sub
imul
mov
dec
sbb
icebp
daa
lods
sti
push
icebp
icebp
sub
inc
or
pop
aas
jecxz
ret
inc
pop
call
daa
vphaddubq
inc
daa
lock
repz
xchg
shlb
int3
lret
jl
hlt
out
sub
jae
adc
gs
aam
mov
and
fwait
sub
cwtl
pop
mov
mov
in
cmp
mov
jbe
out
fwait
mov
inc
pop
and
ret
das
lcall
xchg
xor
pop
in
pop
insl
dec
xlat
enter
cwtl
lods
pop
adc
add
xchg
test
das
add
or
lods
sti
xor
adc
fwait
hlt
mov
imul
inc
test
jmp
sbb
pop
lock
mov
pop
movsb
popa
xor
pop
add
lret
xchg
movsl
mov
sub
gs
dec
jnp
stos
xor
aas
int
iret
jmp
push
call
popf
jnp
mov
frstors
adc
loope
stos
dec
pop
push
jns
inc
inc
xchg
inc
out
enter
pusha
sub
dec
inc
or
in
ret
xchg
cmp
or
add
shll
fwait
movsl
mov
sub
fmull
pop
push
push
mov
shll
pop
dec
and
cmp
adc
add
scas
shl
jo
shr
xor
inc
mov
or
adc
ficoml
add
or
mov
push
inc
mov
or
mov
pop
loopne
xor
jb
jne
xor
stos
mov
loope
nop
sbb
xor
sbb
dec
jl
inc
pop
stos
ds
xchg
stc
fistps
repnz
aam
subb
mov
mov
xor
xlat
lret
xchg
cmp
fadd
xor
ljmp
cltd
jb
push
outsb
js
lret
mov
cltd
fsts
rcr
notb
pop
in
insb
lret
in
call
pushl
inc
movsb
adc
adcl
in
inc
or
cmp
sub
and
fucomp
adc
enter
insl
in
lcall
fwait
inc
jbe
pusha
cltd
inc
in
jo
and
cmp
icebp
add
or
addl
out
dec
icebp
dec
adc
mov
fidivl
push
fidivl
sub
and
cmc
mov
stos
fs
clc
pop
sub
xchg
sbb
addl
dec
cltd
cltd
pop
adc
js
loope
test
fstl
xchg
daa
xchg
pop
and
xchg
fsubrs
and
mov
and
sub
jl
lahf
push
int3
pusha
fstpl
icebp
adc
or
cmp
push
fs
inc
xchg
and
mov
adc
jno
pop
addr16
sarl
pop
pop
cwtl
inc
stos
mov
dec
daa
push
mov
inc
pop
pop
sahf
out
sahf
add
or
out
xchg
jg
roll
mov
daa
test
popa
loopne
popa
xchg
sub
lods
xchg
mov
or
push
in
and
out
push
in
fwait
ret
mov
pop
out
push
or
mov
shrl
xchg
mov
fwait
sub
or
sbb
mov
mov
push
test
or
or
dec
xor
pop
lret
lahf
lahf
jnp
add
adc
and
add
mov
movsl
mov
je
xchg
sbb
pop
adc
out
adc
jmp
jecxz
jae
repz
repnz
imul
cmpb
add
jp
mov
pop
inc
arpl
pop
adc
inc
xchg
mov
lds
xchg
test
cmpsb
sbb
jge
loopne
xor
adc
xlat
cltd
adc
mov
test
aam
movsb
sub
notl
push
pop
push
dec
std
loope
adc
aad
ss
cmp
scas
cmp
sti
lret
mov
mov
sbb
mov
sub
xor
jns
xchg
xchg
and
xor
mov
je
inc
xchg
mov
mov
ja
ss
xchg
inc
sarl
jecxz
fwait
insl
jae
dec
sbb
mov
push
xchg
lods
mov
mov
insl
jmp
mov
or
xor
ret
mov
mov
in
cmpsl
out
xchg
stos
add
cwtl
add
repnz
pop
and
pop
orl
test
and
ss
push
inc
lods
dec
outsl
rcrl
lds
inc
mov
mov
scas
cltd
inc
adc
fidivrs
jne
rorb
dec
jnp
repz
xor
cli
in
push
push
setbe
push
mov
add
push
or
xor
mov
orb
sub
cli
push
fistps
inc
sub
pop
faddl
mov
sub
pop
sbb
push
pop
dec
cmp
into
sub
int3
or
add
in
pop
jecxz
xchg
jne
inc
mov
sti
or
shrb
mov
imul
stc
or
movsb
xchg
mov
cmpsb
cmp
cmpsb
aas
in
rclb
mov
leave
add
jne
mov
push
dec
fwait
sarl
push
aaa
mov
movsl
mov
sbb
xchg
pushf
jo
lds
test
in
test
adc
mov
jle
pcmpgtd
neg
mov
mov
jp
rol
sbb
and
mov
cmp
aam
mov
das
in
ficomps
cs
je
push
nop
pop
je
push
mov
adc
lods
aad
fdivrl
xchg
mov
loopne
mov
into
lock
call
fnclex
cmp
std
popa
mov
add
aam
jo
insl
push
push
shll
aas
sti
dec
ret
mov
mov
dec
cmp
push
roll
pop
es
mov
cmpsl
cmpb
mov
out
xchg
inc
cmpsl
pop
loop
xchg
ss
ds
jb
sub
aas
fisttps
dec
cmp
into
mov
dec
or
jle
cltd
shrl
and
and
js
leave
xor
addb
push
arpl
adc
divl
mov
fdivrl
add
dec
or
xor
fs
mov
or
push
mov
mov
adc
iret
sbb
adc
push
xorl
fsubrs
sbb
into
scas
push
divb
pusha
xor
jb
xlat
mov
aam
lahf
mov
js
push
dec
xor
sub
mov
cs
dec
xchg
add
fdivs
fcomip
loope
push
das
je
cmp
inc
and
and
adc
push
jbe
fbstp
push
data16
jmp
xor
fmulp
popa
and
adc
xor
and
mov
cmc
pop
or
cmpsb
mov
pop
mov
shlb
mov
mov
pop
and
adc
jle
xchg
bnd
dec
inc
mov
scas
pop
in
clc
inc
mov
xchg
inc
push
and
inc
cmp
or
dec
jle
cmp
outsl
mov
mov
sbb
inc
push
push
mull
std
out
jle
adc
adc
bound
jmp
push
pop
sub
mov
rcrl
push
xchg
mov
ret
mov
icebp
and
aam
xor
mov
lock
mov
inc
in
out
push
daa
ljmp
mov
cmp
aaa
adc
inc
cltd
imul
sub
ja
popf
cltd
call
push
test
jmp
out
and
pusha
mov
sbb
adc
test
shll
push
shrl
adc
pop
mov
xor
cmp
outsb
cvtpi2ps
and
adc
cltd
pop
cmp
push
outsb
xorl
outsb
mov
mov
das
inc
sub
mov
mov
and
pop
enter
dec
cmpsb
add
pop
jno
popf
lret
dec
mov
mov
fistpll
cmp
sub
scas
fildl
lods
adc
jnp
add
arpl
or
popa
stc
mov
add
inc
aas
mov
inc
rcrb
stos
mov
sbb
mov
mov
mov
xchg
imul
and
xchg
push
mov
add
lea
inc
and
or
std
mov
jb
shr
in
shll
iret
cmp
xchg
adcb
test
leave
fcmovb
pop
test
xor
fisubrs
fdivs
push
lret
out
push
lds
sub
hlt
or
push
repnz
out
or
aas
dec
mov
cmp
daa
push
add
pusha
push
loop
xor
dec
mov
je
push
mov
lcall
pop
bound
jo
pop
inc
mov
jmp
arpl
push
test
adc
stc
sub
and
fsubl
pop
inc
das
das
cmp
push
jp
fldt
adc
or
or
push
insb
cmp
jle
scas
push
xlat
dec
push
jge
pop
inc
push
scas
push
mov
mov
push
inc
add
orb
and
jb
xorl
jnp
je
notl
push
inc
or
icebp
fstps
sub
sub
inc
adc
sub
add
lea
in
sub
dec
xor
dec
dec
jl
or
fldl
jge
xchg
pop
or
push
mov
adc
push
call
xchg
mov
add
push
xorb
js
add
push
add
xor
adc
mov
dec
xor
jo
dec
add
inc
lea
xchg
fst
sti
push
pop
cli
xchg
push
or
outsl
and
lods
mov
xchg
hlt
arpl
push
div
lret
dec
jmp
movsl
cmp
dec
scas
andb
sub
push
sbb
stos
inc
sbb
std
cmp
jle
cmp
stos
ret
sbb
in
jno
insl
xor
jne
pop
pop
and
popa
stos
and
mov
dec
enter
pushf
adc
sub
xchg
add
adc
ret
subb
xchg
lods
cmpsl
and
mov
jbe
scas
and
bound
xchg
xor
in
sarl
icebp
movsb
jns
or
jmp
xor
jp
leave
out
and
xchg
cltd
fldenv
cmp
mov
pop
loopne
aam
push
or
les
cmpl
mov
xorl
sti
mov
aaa
sbb
insb
and
pop
pusha
loope
adc
fiadds
xor
lods
outsb
xor
fnstenv
lock
push
insb
sub
ja
add
std
push
dec
cld
loop
pop
dec
dec
insl
loopne
cmp
xor
cld
add
repz
loope
mov
jg
fsub
out
mov
cmpsb
sbb
push
lds
lcall
jmp
and
je
jnp
cmpsl
and
mov
mov
std
mov
mov
insl
popa
in
jge
inc
sbb
add
and
cmpsb
js
nop
ljmp
xor
mov
aad
add
mov
mov
xchg
sti
pop
add
data16
mov
mov
push
mov
imul
dec
and
mov
cmp
xor
mov
adc
mov
sahf
or
daa
mov
or
xchg
push
cmp
out
mov
les
imul
mov
cmp
xlat
insl
mov
pushf
cwtl
out
jmp
fisubl
cwtl
xchg
jns
add
xchg
jno
mov
outsb
rorw
and
mov
insb
into
or
leave
shrb
repz
mov
call
inc
ret
jl
sbb
push
inc
in
pop
xchg
pop
sub
gs
jl
inc
mov
mov
data16
rolb
jb
sbb
std
outsl
rcrl
inc
inc
imul
mov
sub
jle
cmc
aas
je
cmp
scas
dec
insl
call
lcall
add
rorb
scas
mov
jno
aaa
sbb
int3
mov
adc
jl
mov
push
addr16
ja
dec
jle
xor
aas
out
jge
rolb
pop
inc
mov
out
adc
daa
sub
ljmp
add
repz
mov
mov
outsb
pop
jbe
ljmp
cmpsb
call
js
sub
rorl
out
cmpsb
and
and
xor
mov
mov
or
xor
out
rorb
xchg
xor
xor
setns
fcompl
add
push
pop
pop
xor
adc
pop
xchg
cmp
lods
mov
in
bound
ss
mov
sbb
push
movsb
push
out
inc
fistps
mov
pop
sbb
fisubl
jns
or
inc
sub
mov
pop
sbb
or
cli
testb
or
jb
aad
push
pop
sahf
enter
je
sbb
mov
fs
hlt
mov
fwait
sbb
mov
jns
inc
cmpsl
or
cmpsb
stos
es
cltd
cmp
test
mov
test
divl
jns
inc
fs
and
inc
add
aaa
mov
or
sub
jae
fldt
fldt
fisttps
pusha
adc
icebp
dec
dec
mov
fdiv
stc
and
loope
mov
mov
push
mov
cmpsb
das
cmp
dec
pop
mov
pop
leave
mov
and
dec
or
push
jae
lahf
mov
ja
inc
sti
inc
inc
inc
aad
inc
mov
or
push
jmp
inc
fbstp
mov
xchg
xlat
pop
or
pushl
lcall
or
fsubl
pop
mov
and
adc
clc
sub
insb
imul
dec
pop
dec
sub
mov
ljmp
sub
fidivrl
cmp
sub
outsb
xchg
inc
clc
pop
push
inc
pop
icebp
xor
inc
mov
fnstsw
mov
push
xorl
xchg
in
sbb
xchg
dec
dec
jns
push
mov
sbbb
mov
das
xchg
jp
aad
jae
sub
movsl
cmc
les
stos
inc
faddl
push
mov
sbb
std
mov
cmp
xchg
or
pop
movsb
mov
pushf
testl
aaa
dec
push
and
lret
push
or
pop
or
mov
loop
pop
cmpb
hlt
fstps
cli
int
sub
int3
ljmp
push
sub
pop
and
das
pop
mov
into
aam
jbe
and
dec
dec
pop
pop
outsb
outsb
jle
mov
mov
fsubrp
out
decb
push
push
push
cs
dec
pop
pop
outsb
outsb
jle
mov
mov
fsubrp
out
decb
push
sbb
ds
dec
pop
pop
outsb
outsb
jg
mov
mov
fsubrp
out
into
push
push
xor
cmpsb
cs
ds
dec
dec
pop
outsb
outsb
mov
add
mov
and
adc
add
pop
clc
push
shrb
test
cwtl
enter
call
sub
sbb
pop
clc
push
test
mov
enter
pushf
dec
clc
pop
mov
cwtl
cmp
call
js
or
cmp
fwait
sub
pop
loopne
sti
push
out
sbb
call
or
mov
testb
and
mov
ret
mov
cmc
daa
and
pushf
inc
and
testb
pop
aam
pop
inc
dec
mov
shr
mov
and
je
xchg
mov
pop
mov
clc
int
js
or
add
fmuls
test
push
addr16
gs
or
lock
test
mov
pop
add
daa
mov
adc
fcoms
cwtl
add
imull
pop
das
scas
cwtl
and
fstp
xor
cwtl
sbb
mov
ljmp
call
js
or
cmp
call
sub
jno
xchg
clc
or
les
dec
jns
mov
xchg
push
in
dec
icebp
dec
in
or
pop
dec
call
sbb
fsubrl
cmp
test
dec
int3
push
fisubrl
dec
and
jns
or
cmp
call
sub
sbb
pop
clc
push
test
mov
enter
call
sub
sbb
std
mov
jp
lahf
shlb
xchg
mulb
pop
mov
shrl
cmp
mov
or
movsl
orb
mov
roll
iret
cmp
sub
mov
out
jmp
shr
cmp
add
dec
mov
arpl
hlt
daa
mov
adc
test
xor
jecxz
cli
fmull
sahf
or
mov
cltd
stc
add
jmp
inc
xor
add
clc
sbb
add
dec
or
jle
jae
or
xlat
lret
cwtl
test
push
dec
jle
in
out
out
push
push
test
stc
dec
fdivl
fdivp
mov
addb
push
add
push
push
add
aas
loope
mov
xchg
fidivs
jno
jle
das
loope
icebp
mov
sbb
sub
cmp
movl
aaa
mov
mov
and
push
lret
popf
movsl
or
gs
stos
gs
push
or
test
in
xchg
inc
js
and
mov
or
xchg
adc
insb
adc
mov
into
testl
pop
iret
xchg
and
mov
daa
pop
add
or
movsb
add
stc
cs
cmc
lods
repnz
mov
push
dec
sbb
inc
popa
adcb
and
lcall
xlat
fistps
daa
sti
ljmp
push
daa
enter
ss
movsb
aam
xchg
jp
ret
clc
jo
into
and
mov
das
lea
sbb
enter
mov
in
mov
sub
xor
push
pop
adc
call
mov
sahf
lcall
push
jl
out
dec
js
push
gs
idivl
pop
lahf
jbe
xor
add
inc
loop
ds
push
roll
out
or
mov
xchg
rcll
data16
sbb
mov
dec
mov
sbb
dec
jns
jbe
daa
out
mov
test
sti
pop
dec
pop
ss
jo
jbe
popf
adc
jmp
mov
in
cwtl
and
inc
lock
divps
cmpsl
jg
lret
mov
cltd
and
xchg
mov
rcll
and
arpl
adc
adc
jnp
popa
mov
cltd
sub
inc
add
sub
cmc
xchg
popf
imul
movb
mov
cs
inc
push
sbb
popa
out
pop
mov
mov
jnp
inc
mov
inc
adc
dec
cmp
iret
icebp
shlb
push
ret
sahf
push
xchg
fstp
adc
loop
pusha
lods
mov
push
hlt
in
cmp
outsl
add
and
inc
cmc
mov
xor
movsb
dec
js
jg
push
dec
xor
in
daa
fbld
pop
pop
jle
jnp
insb
or
rcr
scas
adc
call
dec
lock
sbb
mov
out
mov
sbbl
mov
push
xchg
cmp
cmp
cmp
push
xchg
push
dec
pop
fs
mov
jl
clc
leave
add
xchg
mov
icebp
int
jne
mov
das
or
and
into
lret
sti
dec
aad
mov
cmpsl
sbb
jecxz
ja
iret
cmp
stos
or
popa
sub
movsb
sub
xlat
or
jecxz
repz
push
pop
inc
addl
add
stc
mov
fcoml
mov
xchg
and
mov
fwait
pop
xor
fisttpll
add
cmpsl
pushf
lea
mov
popa
lods
cmc
aad
enter
lods
shl
sub
dec
repz
pop
pop
mov
adc
pop
jle
in
mov
sbb
jmp
arpl
lea
loop
and
nop
or
sbb
data16
repnz
dec
push
jno
fs
loop
sbb
adc
in
dec
out
jmp
mov
push
jo
cmpsl
push
aam
sbb
clc
xor
loop
and
in
cmp
inc
loop
fildll
mov
mov
in
stc
lea
cli
adc
cmpsl
movsl
insb
int3
cmpsl
push
cmp
xchg
test
jno
add
aaa
dec
stc
add
xor
fildl
pop
mov
push
dec
inc
xchg
push
das
mov
xchg
mov
xor
cltd
repz
out
test
inc
stc
shr
sub
mov
orb
push
rcrb
inc
rorb
push
ret
int3
mov
ficomps
adc
cmp
outsl
sar
std
xor
mov
mov
inc
mov
ss
mulps
dec
ljmp
and
push
ss
clc
es
adcl
jne
fld
dec
inc
push
adc
cwtl
inc
sbb
adc
mov
je
adc
jg
lods
mov
mov
fiadds
cmp
mov
or
hlt
outsb
pop
jmp
dec
gs
jecxz
nop
inc
shll
add
mov
into
gs
shl
dec
enter
sbb
dec
add
push
sti
das
push
outsb
pushf
xchg
adc
mov
add
and
mov
cmp
xor
jg
push
iret
adc
sahf
loope
pop
pop
test
push
jae
mull
jbe
cmp
lock
pushf
cli
mov
cmc
addr16
add
outsb
jae
movsl
sbb
stos
jbe
jecxz
adc
push
or
mov
dec
gs
mov
in
les
ss
hlt
mov
push
push
add
mov
js
push
sbb
xchg
fildll
bound
mov
sub
and
xchg
mov
test
ror
cmp
sbb
test
dec
mov
imul
stc
daa
aas
aaa
iret
adc
frstor
shrb
add
fs
lcall
pop
leave
daa
mov
mov
mov
jns
xor
lea
ds
mov
add
daa
leave
fsubs
inc
lods
jb
aad
mov
xor
lock
out
pop
in
movsl
sub
mov
mov
cwtl
scas
mov
mov
inc
stc
outsl
add
pop
idivl
into
mov
xor
mov
test
dec
mov
hlt
mov
jmp
jge
sub
inc
or
stos
pop
pop
stc
mov
aas
jno
addr16
test
dec
mov
ja
incl
nop
add
rcll
jo
cwtl
sub
setb
or
arpl
push
stos
jmp
pop
dec
icebp
ret
fcmovnu
and
int
adc
dec
stos
das
and
cltd
pop
dec
xchg
lret
loop
shlb
push
inc
jecxz
inc
inc
repnz
call
jnp
pop
stc
out
inc
stos
sarl
cmp
or
push
sahf
iret
hlt
and
sarl
dec
and
add
insb
push
dec
jl
push
sar
ss
pop
rcl
iret
out
xchg
pop
xor
push
push
push
jmp
add
stos
sahf
jbe
xorl
outsl
iret
scas
stos
sbb
jb
call
pop
outsb
iret
cli
ja
cmpsl
cmp
push
loope
ret
stc
roll
and
lret
jns
loope
ret
fldenv
outsb
mov
in
fcomps
cwtl
mov
lret
es
add
cmc
mov
xchg
ret
call
aad
dec
inc
mov
sub
clc
jb
les
and
push
pushf
inc
dec
les
and
lea
mov
repnz
fnsave
lods
aas
mov
addb
ret
adc
movsb
cwtl
stos
mov
das
mov
ret
pop
cmpsl
loope
aad
or
lcall
cmc
jbe
mov
imul
mov
mov
adc
push
mov
mov
jp
outsb
push
pop
push
fmuls
les
jne
inc
das
call
rcrl
dec
rorb
aas
pop
cld
sahf
push
cld
sub
lds
mov
fwait
fwait
push
adc
shl
stos
push
add
add
xor
aas
push
fs
adc
sbb
cmpsl
cmp
jmp
sbb
loope
sbbl
das
add
addl
dec
pop
aad
sbb
stos
in
lods
mov
enter
aad
and
mov
sbb
pusha
xor
adc
lcall
or
sbb
mov
pop
mov
push
jl
test
adc
icebp
stc
imul
es
outsb
test
xor
xor
out
cmc
xchg
add
addr16
push
scas
pop
ljmp
jmp
lods
jae
ret
dec
ds
lcall
lods
jno
mov
fistpll
mov
mov
jmp
popa
adc
test
imul
rep
cmp
add
les
push
jno
adc
mov
dec
inc
or
out
inc
mov
jge
inc
and
push
or
fstps
sahf
and
aad
xchg
fs
adc
or
cmp
repnz
pop
pop
addr16
shrl
movsb
lods
fs
insl
cmp
pop
in
pop
cmp
push
jns
push
icebp
inc
shrb
hlt
mov
fidivl
mov
cmp
pop
push
or
cmpsb
and
movsl
fistps
lret
sub
test
push
imul
in
mov
push
sub
pop
and
shrb
lea
jb
inc
cmpsl
push
pushf
nop
mov
repz
jbe
or
ds
and
andb
jbe
vpmacsswd
sbb
mov
pop
jle
inc
and
cmp
hlt
xor
gs
ss
xor
add
mov
cmpsl
dec
xchg
cmc
sbb
cltd
in
call
pop
pop
sub
rclb
cli
sbbl
jl
inc
pop
push
lods
and
cmp
xchg
push
and
pcmpgtd
test
mul
mov
jle
cli
insl
jmp
fwait
lahf
out
push
add
icebp
pop
jge
dec
mov
mov
or
push
repnz
sub
dec
ljmp
scas
rcrb
mov
test
sbb
dec
pushf
mov
orb
mov
addr16
cltd
sub
cmp
push
push
or
stos
hlt
loopne
fcoms
das
and
lea
imul
hlt
scas
into
fstpl
pop
sbb
jge
movsb
cmp
inc
aaa
shll
jge
lds
nop
sbb
les
shl
aam
pop
cld
test
stos
or
adc
leave
or
add
add
push
jb,pt
push
cwtl
dec
xchg
flds
jns
jle
stos
cltd
pop
jge
mov
shrb
jle
pop
sub
mov
inc
mov
mov
enter
rcr
dec
dec
dec
das
ficomps
or
sbb
outsb
sub
jnp
bound
sub
mov
adc
test
mov
cltd
push
mov
mov
loop
xor
fisubrl
outsl
std
xchg
pop
jmp
jl
mov
push
test
int
inc
dec
out
sti
pushw
aas
fldenv
lret
fsubl
dec
mull
adc
cld
xchg
mov
popf
cwtl
iret
les
push
div
inc
in
and
add
es
xor
loope
sbb
aas
inc
jle
loop
jns
lods
sbb
clc
repnz
pop
out
in
xor
test
mov
jnp
test
lods
inc
ss
in
adc
es
enter
pop
xchg
push
movsb
outsl
sub
in
aam
into
sbb
das
adc
je
mov
pop
mov
sub
lcall
and
cld
mov
push
test
loopne
das
pop
inc
pop
jnp
bound
repz
xchg
fwait
loopne
lods
mov
dec
jle
out
jno
mov
loopne
mov
fndisi(8087
loop
jo
js
sahf
inc
or
mov
mov
jne
pop
xchg
xchg
mov
xchg
jne
orl
mov
push
mov
mov
int
mov
mov
insb
inc
aas
pop
add
xor
mov
shl
jbe
aaa
lds
and
inc
lock
push
push
sub
or
out
mov
repnz
js
aas
mov
dec
sbb
test
push
aam
mov
icebp
sti
clc
cmp
dec
jg,pn
mov
ljmp
mov
jmp
js
push
dec
jp
fwait
shrl
or
push
in
or
ret
ljmp
add
cmpl
inc
imul
mov
mov
das
lret
aaa
jns
mov
sub
xchg
in
fmuls
mov
or
lea
add
out
mov
xor
sbbb
mov
aad
xor
adc
cmc
push
lds
pop
cmpsb
cmc
or
sub
mov
push
lock
jno
lock
ja
pop
pop
mov
sarb
jp
fisubrl
jbe
adc
jno
mov
iret
sub
arpl
inc
xchg
ja
mov
mov
mov
or
push
scas
jbe
adc
cmpsl
sbb
pop
insl
gs
push
sub
cmp
fldl
testb
hlt
dec
ss
outsb
xchg
mov
shrl
xor
filds
lock
jmp
jnp
push
or
out
roll
mov
dec
push
test
xchg
fsubrp
aam
imul
mov
add
jmp
jns
push
popa
cmp
mov
add
jbe
out
insl
jne
out
mov
push
mov
roll
fisubrs
popa
in
loopne
arpl
clc
rcll
jo
call
bound
dec
inc
sub
movsl
sub
iret
ret
ljmp
sbb
sbb
fwait
nop
sub
movsl
divb
pop
aam
nop
cli
xchg
nop
leave
movsl
hlt
or
or
adc
aad
filds
je
push
into
out
lock
loop
xchg
dec
mov
test
aas
addr16
mov
cmc
adcb
xchg
mov
das
push
adc
inc
popa
jp
inc
push
mul
jmp
mov
fisttpll
xchg
out
jbe
aam
jae
dec
push
insl
in
sbb
and
xchg
lock
arpl
xorl
adc
movsl
xor
pop
sub
xor
outsb
sbb
enter
fsubs
data16
ds
test
sbb
mov
lods
sti
or
std
cmp
jns
les
insb
shll
imul
rclb
xor
inc
insb
imul
add
shll
push
sbb
inc
mov
loope
pushw
jp
fidivrl
dec
movsl
loopne
in
or
mov
loop
in
lds
test
into
cmp
pushf
in
add
push
fisttpll
xchg
test
push
popa
xchg
mov
pop
cmp
jl
push
fsubl
insl
cmpsb
fsubrs
loope
mov
insb
fsubl
push
jbe
add
les
movsb
and
cld
or
psubw
sub
or
inc
insb
cmp
lahf
xchg
mov
adc
jbe
addr16
push
call
data16
loopne
imul
ficoml
ret
jno
xchg
inc
adc
sti
mov
in
push
adcl
pop
and
and
add
shlb
mov
cmp
mov
movlhps
test
adc
push
clc
add
fs
sub
leave
int3
fdivrl
pop
in
stos
add
ret
nop
mov
cmp
imul
stos
jno
ljmp
xor
and
push
loopne
pop
pop
push
imul
out
lret
inc
sti
aad
data16
cltd
fistpll
mov
mov
test
stos
dec
imul
dec
cmp
aas
fistpl
leave
lret
mov
js
pop
cmp
inc
fcoms
test
add
movsl
ret
inc
add
leave
add
lods
rcl
notl
mov
insb
loope
cwtl
pop
shll
bound
aaa
sarl
jb
mov
mov
je
cmp
sub
mov
dec
je
test
sbb
in
inc
xchg
fwait
in
outsl
xchg
sbbl
mov
outsl
push
and
jg
test
cmp
fisubrs
xorl
mov
cmp
add
imul
xchg
bound
xor
aad
inc
cmpsb
pusha
int3
test
cmpsb
xchg
lahf
mov
xor
lahf
mov
inc
cmp
cwtl
mov
jle
imul
mov
stos
pushf
push
mov
dec
lret
adc
pop
dec
xor
xor
xor
pushf
outsl
adc
addr16
mov
and
out
cmpsb
ds
imul
hlt
imul
adc
xor
stos
fidivrl
cmp
lret
sub
cmc
movsb
pop
iret
inc
inc
call
loope
pushf
and
nop
shl
outsl
loop
int3
pop
ret
sahf
adc
lods
clc
mov
or
mov
or
sbb
or
aaa
shll
mov
xchg
adc
out
cmp
into
out
push
push
push
push
shll
xchg
aad
sub
andb
mov
ret
push
mov
mov
push
adc
scas
addr16
xor
leave
sbb
xorl
insb
mov
push
in
cli
rclb
iret
lods
xchg
and
inc
add
out
insb
iret
stos
ss
add
xchg
sub
lods
mov
test
enter
xchg
sbb
dec
cmpsb
call
xor
out
pushf
push
inc
scas
add
xor
xor
ret
inc
push
push
popa
flds
std
mov
movb
pop
cld
lock
sti
fcmovne
pusha
fldcw
mov
mov
push
jae
jb
cmp
cld
out
jbe
in
dec
movsb
xchg
xor
mov
jge
dec
pop
jns
xchg
in
scas
xor
or
rclb
loopne
jl
mov
ret
sub
outsb
movsb
add
push
push
cmpb
out
ljmp
jb
mov
jbe
sbb
or
addr16
sbb
fisubrl
mov
cltd
push
and
ficoms
mov
xlat
aam
loope
loop
std
cmp
mov
push
popf
add
repz
mov
mov
adc
pushf
mov
add
mov
testb
and
or
cmpl
dec
mov
cs
cmp
xchg
lods
not
rcr
sub
mov
int3
repnz
imul
popa
adc
pop
lcall
mov
mov
cmpsb
rclb
mov
cwtl
lods
iret
int3
je
call
xchg
sub
stc
movsb
and
shrl
imul
cmp
test
mov
lods
lahf
das
xchg
out
add
jb
pop
mov
or
sbb
dec
jae
cmp
dec
or
jne
adc
cmpb
insb
test
repnz
es
repnz
icebp
nop
fimuls
push
push
insl
fmuls
cmpsb
add
add
stos
loop
cmpsl
push
and
mov
gs
ss
enter
mov
mov
ljmp
mov
cmp
pushf
nop
imul
lock
xchg
hlt
outsl
cltd
je
mov
xor
imul
mov
bound
rcl
rcll
sbb
lahf
adc
hlt
subl
leave
lret
add
addr16
outsb
mov
xchg
xor
fdivrs
int3
push
inc
xchg
lock
cmp
dec
cli
pop
push
gs
and
sahf
fmuls
in
das
movsb
cli
cs
setl
lcall
fwait
xor
subl
mov
xchg
and
cwtl
push
test
lret
stos
int
jo
and
pop
ja
sub
dec
cwtl
mov
in
je
mov
clc
icebp
popf
fnstsw
adc
pushf
or
js
pop
fisubrs
sbb
shlb
rol
icebp
xchg
bound
mov
enter
lret
cmp
mov
mov
iret
mov
cmc
outsl
sbb
cmp
call
fisubrs
sbb
std
sahf
mov
rcll
mov
mov
out
push
cs
or
mov
icebp
pop
xor
enter
outsl
icebp
test
xchg
imul
ret
pop
aaa
mov
loopne
test
push
ss
daa
lret
punpcklbw
js
jle
adc
adc
dec
out
sbb
jo
dec
out
pop
jle
in
outsl
mov
fisttps
out
lret
lahf
dec
jg
push
in
cmp
jb
sub
es
cmp
arpl
fdiv
test
xor
jg
mov
dec
mov
stc
imul
mov
pop
mov
pop
mov
mov
adc
std
xor
clc
test
js
or
cmp
call
sub
sbb
pop
clc
push
test
mov
enter
call
sub
sbb
pop
js
dec
js
or
cmp
call
sub
sbb
pop
clc
push
test
mov
enter
inc
dec
clc
das
jmp
inc
out
icebp
sbb
xchg
mov
stos
gs
enter
add
sub
cmp
dec
mov
movsl
push
jp
mov
gs
pop
mov
and
or
and
dec
cmp
push
jp
mov
inc
xor
aaa
lret
inc
lahf
addr16
popa
push
mov
movsb
sub
rcrl
addb
lcall
lahf
sub
notb
cmp
push
jp
mov
cltd
push
stos
inc
adc
mov
popf
adc
pop
das
pop
loope
and
mov
stos
push
jp
lcall
ret
sbb
inc
sarl
lds
dec
xchg
out
push
jp
pop
lock
test
inc
xor
ljmp
lret
cmp
xchg
jmp
push
int3
xor
mov
mov
pop
and
mov
or
sbb
mov
test
out
jp
frstor
push
push
adcl
scas
stc
jp
jns
lds
mov
pop
movsl
push
jp
mov
int
push
mov
lret
ljmp
mov
push
test
push
loopne
ret
call
lret
jb
dec
mov
insb
outsl
mov
mov
dec
out
notl
cld
sub
test
mov
and
outsl
xchg
add
push
stc
pop
movsl
push
jp
mov
gs
push
mov
and
or
sbb
sub
cmp
dec
mov
movsl
push
jp
mov
gs
push
mov
and
or
aas
mov
test
sub
lea
test
shrl
mov
cmpsl
adc
mov
add
mov
lock
xchg
and
jl
shr
mov
dec
insb
popf
pop
dec
sarl
clc
fcompl
xchg
lods
jae
xchg
push
inc
ss
sbb
clc
add
mov
js
push
mov
sbb
or
add
rdpmc
add
pusha
adc
fs
pop
sub
mov
cmp
shl
iret
sarb
push
rolb
mov
insb
test
push
lahf
movsl
imul
mov
push
push
mov
into
inc
je
adc
push
out
dec
jae
and
lahf
sub
jge
mov
mov
push
out
sbb
mov
imul
mov
jg
mov
jbe
les
ljmp
mov
movsl
fnstenv
and
lcall
cmp
leave
insl
fcoml
dec
mov
mov
xchg
sbb
push
lods
inc
fs
add
enter
fwait
jb
mov
xchg
pop
mov
sbb
add
mov
stc
cmp
and
mov
sti
xchg
movsb
stc
and
cmpsb
mov
pop
mov
xchg
add
push
repz
xchg
movsl
sub
mov
mov
mov
jg
ljmp
inc
jbe
movsl
mov
rclb
sbb
clc
inc
pop
lods
and
add
sbb
mov
mov
mov
adc
xchg
out
pop
test
jmp
xchg
stos
mov
ljmp
les
pop
inc
test
mov
mov
push
rep
pop
push
pop
and
leave
inc
jbe
arpl
out
popf
sub
mov
sub
fdivr
shlb
jl
pop
jecxz
lahf
aaa
jo
and
ficompl
test
leave
and
divb
xchg
lods
xor
imulb
fcoml
ds
inc
mov
test
fistpl
shrb
in
es
mov
cwtl
dec
popf
gs
movsl
mov
arpl
and
jnp
pushf
clc
nop
jo
cmp
adc
and
pop
popf
je
lock
mov
inc
adcl
jnp
push
add
sub
mov
sbb
push
mov
add
inc
xor
and
cmp
lea
pop
in
andb
aaa
stc
dec
dec
xor
fwait
xorb
mull
pop
sub
push
stos
fs
jmp
inc
push
enter
xchg
pop
mov
data16
mov
sbb
hlt
out
cwtl
orb
imul
sub
mov
xor
es
push
inc
in
mov
clc
ret
xor
cmp
jnp
push
iret
xchg
outsb
xchg
cmpsb
sub
mov
fwait
or
lods
insl
mov
xor
jge
xchg
jae
push
outsb
and
sbb
and
sarb
call
mov
dec
arpl
pop
ss
sub
mov
inc
fcompl
pushf
jmp
clc
shl
ljmp
inc
shll
push
int
sub
push
sahf
add
push
push
adcl
xor
mov
es
sbb
add
cmovno
mov
sbb
mov
movsl
loope
jno
mov
push
ljmp
int3
cmpsb
mov
jmp
mov
xor
gs
push
push
mov
pop
incl
divl
pop
mov
cmp
xor
stos
sbb
xor
xchg
mov
xorb
stc
pop
push
push
mov
pop
jle
sub
mov
shlb
or
cmp
shll
shl
push
add
scas
xchg
fwait
xor
addl
jg
adc
cli
xor
sub
push
mov
imul
and
cmp
repz
mov
aaa
incl
aas
nop
gs
add
cmp
add
cmp
lret
aas
push
fs
iret
in
cmp
out
test
minps
pop
gs
adc
mov
sub
sub
mov
pop
cmp
dec
lds
jb
or
cmpxchg
jl
mov
faddp
cmpsb
sub
and
loop
fidivrs
addr16
popa
neg
movsb
pop
xchg
adc
inc
stc
xor
fstpl
mov
dec
push
cwtl
test
sbb
push
inc
repz
pop
xchg
mov
stc
repnz
xor
xlat
lods
mov
stos
xor
in
push
mov
adc
fdivrp
mov
andl
xchg
int
push
outsb
movsl
mov
and
fwait
jp
lret
lods
mov
pop
fisttpl
adc
or
inc
sub
popa
outsb
sti
inc
rcr
into
sub
aaa
mov
xor
cmp
xchg
aas
pusha
cmp
hlt
dec
outsb
or
mov
enter
sub
mov
push
cmpl
mov
mov
sbb
xchg
mov
lods
jle
inc
push
jecxz
and
mov
div
jb
push
and
subl
xchg
pop
popa
insl
sub
cmpsb
shl
or
arpl
adc
push
dec
je
mov
out
gs
and
push
je
mov
lret
iret
nop
jmp
add
dec
ret
inc
add
aad
andb
add
repz
sti
aad
fisubl
imul
lahf
ret
aad
inc
movsb
inc
pop
addl
pop
xchg
xchg
jbe
mov
mov
outsb
cld
jp
sahf
aaa
mov
adc
rcrl
loopne
ljmp
xchg
in
stos
mov
sub
stos
repnz
mov
mov
sub
test
gs
inc
mov
ret
inc
cmp
add
and
fnstcw
xor
repnz
scas
jns
jns
and
xchg
jbe
cld
add
stos
into
sbb
xor
mov
sti
lock
inc
frstor
mov
aas
cmpsb
out
jae
jl
add
cmpsb
lcall
dec
shl
sbb
sti
mov
mov
cmp
incl
adc
mov
test
arpl
xchg
insb
jecxz
shl
fwait
push
rol
lahf
fstpt
cmc
dec
sahf
pop
mov
dec
cmp
cmp
jns
and
nop
or
jmp
test
and
pushf
cmpl
mov
jno
dec
imul
test
lea
xchg
pushf
aad
aad
jl
mov
push
and
mov
dec
xchg
lret
stos
and
mov
jbe
es
inc
cli
mov
cmpsb
sub
movsb
adc
lret
mulb
cmpsl
mov
push
sti
inc
in
xchg
stos
sarl
inc
imul
stos
sub
ds
and
pop
lret
or
out
loope
dec
mov
arpl
fdivrs
pusha
push
in
adc
mov
sbb
add
cli
pop
sub
imul
and
cmpsb
and
ljmp
mov
and
fwait
sub
add
fsub
mov
xchg
fcompp
fbstp
xlat
xlat
inc
jmp
jne
dec
arpl
jmp
adc
jbe
cmp
repz
das
pop
in
and
lcall
cmp
enter
movsl
fisubrl
and
aas
repnz
lret
imulb
repnz
cwtl
ja
sub
jo
dec
and
jg
ret
xchg
in
inc
jb
sarb
xchg
rclb
test
int
adc
push
movsl
fs
fs
ret
mov
sub
pop
popa
sub
xchg
mov
pop
addr16
push
pop
pop
scas
mov
xchg
enter
stc
add
pop
and
daa
popa
and
loopne
lea
aam
sub
rorl
cs
repnz
pop
pop
mov
aaa
lret
lods
adc
mov
bound
repnz
out
or
rcr
mov
xchg
xor
fwait
jge
adc
adc
sbb
ljmp
in
add
mov
dec
aaa
sbb
fisubrl
dec
outsl
and
jae
xchg
cmp
xchg
or
inc
jg
pusha
push
sbbb
lret
adc
sarl
sub
lret
push
sbb
inc
or
in
enter
dec
mov
pop
add
mov
mov
mov
jp
enter
imul
push
and
movsb
or
xchg
fs
and
pop
or
sbb
xchg
cli
test
leave
mov
mov
mov
call
cwtl
inc
sbb
inc
clc
push
addb
jb
cmp
dec
ljmp
sbb
test
cs
in
inc
mov
iret
stc
mov
sar
push
sub
xor
ds
int3
int3
gs
sbb
js
ret
pushf
lcall
mov
push
adc
imull
mov
lahf
push
ficoml
xchg
xchg
bound
mov
cmp
sahf
sub
fidivrl
mov
pop
dec
sbb
xor
mov
fs
xlat
xor
mov
jb
push
xchg
jo
adc
and
cwtl
jecxz
lret
jl
mov
aam
ss
loop
pop
jg
dec
lea
mov
test
push
cli
xchg
jns
jnp
das
fld
lea
rcr
cwtl
jl
shlb
adc
sub
xor
mov
ret
xor
ljmp
out
mov
adcl
adc
sub
mov
pop
pop
sbb
stc
push
call
cld
rclb
int3
or
xchg
addb
cs
repnz
sbb
inc
cltd
pop
lret
ret
inc
jb
ds
stc
xchg
popa
bound
adc
adc
addr16
movsl
cmp
xor
ds
fsubl
dec
pop
lds
inc
cmc
dec
fsubs
lret
mov
pop
sahf
xchg
adc
sti
xchg
cmp
rcl
adc
inc
cmpsb
dec
mov
inc
out
fldenv
dec
inc
mov
pop
scas
int
fs
jle
aam
add
cmpsl
dec
clc
arpl
lds
mov
into
mov
fs
cmpsl
jnp
jnp
push
fisubl
push
scas
pop
sbb
popf
push
gs
push
idivb
cmp
add
outsb
add
sahf
lcall
pop
or
cld
lcall
mov
mov
jns
dec
mov
push
add
xor
arpl
xor
adc
mov
or
lods
push
jp
sbb
jmp
test
pop
jg
jbe
push
movsl
sbb
bound
pop
push
mov
inc
ja
lock
jmp
scas
fwait
pop
jo
mov
push
rol
xor
lods
jl
aas
incl
int
gs
cmc
jmp
mov
xchg
sub
pop
push
mov
hlt
test
xchg
mov
test
and
or
scas
push
sti
mov
or
add
les
add
sbb
push
jge
mov
in
jns
push
pop
pushf
lcall
cmc
sbb
ds
xor
icebp
dec
rcll
cmc
ja
dec
sbbl
mov
mov
cld
or
loopne
ret
out
or
iret
xchg
dec
aaa
add
jge
sub
cmp
cld
int3
subl
ror
out
xchg
jnp
jmp
xorb
inc
xchg
js
lret
xchg
data16
adc
xchg
xchg
loop
jne
pop
je
sbb
sbb
ljmp
ss
int
es
andb
aaa
push
adc
movsb
pop
sbb
or
xor
std
jne
push
add
or
sbb
loope
fwait
xchg
dec
pop
cli
xlat
xchg
mov
test
fstpt
jnp
cmc
add
push
sbb
sbb
cmpl
stos
cmpsl
jmp
pop
xor
xor
adc
jae
ljmp
sbb
ja
jmp
mov
push
inc
pop
inc
or
mov
mov
js
jne
xchg
xchg
xchg
int
or
mov
jns
push
cli
jp
push
rorb
dec
ja
dec
adc
fwait
lods
sbb
aas
out
add
stc
fcoml
clc
push
cld
mov
pushf
xor
lock
mov
lds
std
aad
xchg
mov
inc
aaa
js,pn
sbb
mov
cli
xor
pushf
or
cmp
faddl
mov
jl
push
cli
sbb
sub
pushf
mov
jle
and
xchg
shll
mov
jmp
js
cmp
xchg
add
leave
loopne
pushf
pop
dec
inc
pop
decb
mov
pop
daa
jb
adc
jb
sahf
out
frstor
push
xchg
dec
aam
frstpm(287
icebp
js
add
mov
jns
mov
bound
out
stos
daa
icebp
ljmp
jne
cwtl
into
enter
jg
inc
movsb
inc
mov
pop
adc
mov
js
pushl
adc
mov
rolb
rorl
inc
sbb
jp
out
arpl
fcmovu
movsb
or
cmp
lret
imul
cmpsl
in
mov
loopne
xlat
pop
jg
aam
mov
bound
and
bound
xlat
addr16
xchg
cltd
push
mov
sub
inc
mov
dec
cltd
mov
push
addl
dec
cmp
or
inc
mov
xor
jb
sub
outsl
fmulp
clc
dec
fimull
xchg
and
iret
jmp
ja
dec
pop
inc
fcoml
mov
stc
xor
xor
add
adc
pop
pop
or
loopne
lea
inc
call
sub
ljmp
rclb
jae
fwait
cs
in
dec
fcoms
jle
mov
int3
add
movsl
lods
ja
data16
insb
fcmovnb
adc
push
mov
mov
arpl
sbbl
mov
jno
addr16
adc
cmp
rcl
mov
xchg
cmpsl
pop
aad
xchg
push
xchg
fwait
adc
and
test
clc
arpl
jmp
or
stos
stc
add
jge
repnz
push
pop
pushf
dec
dec
dec
sub
push
js
stos
and
mov
jae
mov
jae
movsb
xchg
sub
rorb
out
jge
adc
lret
out
jp
push
cmp
xchg
mov
das
mov
push
in
jge
call
xchg
adcl
jmp
dec
je
lea
fdivrp
sub
xchg
cmpsb
icebp
xor
orb
mov
ficomps
insb
fldt
lahf
pop
fucomi
add
dec
xchg
fildl
orb
cmc
pop
out
rclb
test
cwtl
cli
xor
repnz
xlat
jg
in
sbb
lock
xor
in
out
iret
xchg
aam
int
mov
lea
xchg
lods
and
adc
lea
xor
insl
ds
push
rcrb
push
neg
and
jno
sub
fcomps
aaa
mov
xchg
or
pop
xor
adc
in
dec
mov
adc
call
test
dec
cmp
xor
or
jo
mov
or
xor
das
icebp
fsubr
xchg
leave
popf
mov
xchg
mov
pushf
stos
gs
loopne
sahf
cmp
or
gs
cli
lods
idiv
pop
iret
adc
cmp
dec
cld
std
movsb
mov
pop
sub
jns
or
adc
cltd
lahf
dec
xor
or
sub
pop
rcrl
dec
and
lcall
inc
sahf
movsl
jb
leave
lcall
sbb
push
add
cmp
lods
scas
cwtl
jnp
in
mov
bnd
mov
jnp
mov
or
mov
test
dec
xor
ror
adcl
cmp
xor
xchg
fiadds
loopne
jae
flds
cmp
dec
cmp
in
ja
push
mov
filds
add
das
dec
imul
fisubl
mov
in
arpl
xchg
xchg
jae
test
mov
mov
lcall
mov
push
sbbb
movsl
adc
lcall
fildl
push
xchg
mov
addb
and
shrb
jne
inc
in
jae
push
je
xchg
push
mov
cmpl
hlt
aad
hlt
xchg
arpl
cmpsb
testl
xor
inc
les
icebp
and
addl
fisubs
mov
addr16
or
mov
inc
loope
xchg
jae
push
outsb
dec
subb
sbbb
xor
jge
dec
dec
adc
pop
xchg
xlat
mov
lret
push
lock
sarb
add
add
lcall
addb
ret
inc
push
mov
push
enter
jp
cmp
xor
inc
inc
sahf
cmc
xor
mov
daa
xchg
mov
arpl
data16
leave
jmp
push
adc
sbb
popf
pop
je
dec
popf
lods
sbbl
faddl
in
scas
inc
push
pop
and
mov
cld
scas
rorl
mov
xor
std
sub
call
gs
mov
cltd
jae
imul
iret
xchg
jns
addl
mov
aam
rcr
rclb
shlb
and
adc
in
popf
pop
and
pop
xchg
push
or
movsl
hlt
pop
jnp
repz
loopne
fcompl
or
xchg
xchg
push
sub
xor
cmp
mov
xchg
jp
push
incb
push
les
mov
jnp
scas
outsl
adc
dec
pop
sub
pushf
nop
xchg
faddl
dec
cmp
and
xor
sbb
push
jae
stc
stc
lea
cltd
push
xchg
int
push
stc
add
lock
sub
mov
inc
dec
test
mov
nop
jp
js
popa
js
fsubl
sbb
sarl
jno
repz
mov
mov
ds
sqrtps
addr16
insb
xchg
div
frstor
jmp
push
imul
inc
stos
ds
mov
mov
loopne
and
mov
push
mov
pusha
cmp
jne
mov
mov
aam
jmp
fwait
in
sub
data16
shll
ljmp
cltd
lret
lahf
out
shr
dec
leave
xor
lods
rcrb
fwait
imul
lods
mov
aad
enter
dec
xchg
pop
xor
fs
test
or
push
sbb
push
or
fwait
push
pop
lahf
push
sbb
sub
pusha
popa
xchg
mov
cmpsl
fmuls
mov
pop
test
mov
push
testb
add
cmp
nop
fwait
test
icebp
adc
jne
sar
cmpsl
xor
dec
jge
int
mov
adc
cmp
aam
inc
inc
inc
pop
mov
sbb
js
aas
cli
or
pop
jl,pn
mov
xchg
mov
sbb
jmp
mov
cli
ret
xorl
xchg
mov
pop
mov
pop
xor
sbb
sbb
dec
addl
xorl
inc
push
sti
adc
sub
or
popa
aam
fmull
daa
lods
sar
mov
lods
and
gs
add
pop
rol
arpl
inc
pop
jl
mov
fisttpll
scas
icebp
add
mov
sti
cmp
cltd
sbbl
push
pop
gs
addb
jnp
cli
push
repnz
rcrb
or
xorl
jecxz
pop
mov
lock
xchg
imul
push
xchg
bound
out
movsl
es
ret
pop
mov
popw
dec
mov
jg
sbb
push
ret
push
push
sub
jns
xlat
clc
adc
cmp
das
fucomip
leave
rcll
jo
ds
mov
xchg
test
imul
lret
xchg
data16
arpl
cld
cmp
js
out
je
test
lret
call
xchg
mov
aas
enter
pop
test
cwtl
pop
aas
adc
outsb
inc
jno
sub
ljmp
in
mov
xor
jae
addr16
sub
xchg
sub
movsl
jg
dec
mov
dec
add
cmp
jo
inc
xchg
call
test
and
inc
test
mov
sbb
add
insl
mov
ror
cld
push
push
das
popa
mov
adc
add
into
sbb
scas
and
test
call
push
ljmp
ret
cld
fisttps
push
pop
jne
jae
xor
jle
aas
stos
jge
mov
popa
mov
mov
loop
push
cmp
or
dec
scas
in
pop
hlt
and
test
xchg
dec
and
gs
lret
mov
adcb
or
inc
scas
fstps
inc
mov
int3
lret
ret
add
add
ljmp
mov
outsl
in
xor
lret
ret
test
das
dec
mov
mov
data16
jp
aad
mov
out
lea
xor
adc
arpl
andb
imul
psubw
xor
cmp
dec
mov
movsl
push
jp
mov
gs
push
mov
and
or
sbb
sub
cmp
dec
mov
movsl
push
jp
mov
gs
push
mov
and
or
lcall
mov
into
push
cli
test
push
mov
and
or
sbb
sub
cmp
push
jp
mov
mov
pop
lcall
addr16
push
test
xchg
dec
cmc
jle
pop
jns
vunpckhps
add
sub
push
xchg
ja
addr16
push
test
aaa
in
aad
lds
sti
and
xor
xchg
inc
xchg
dec
pop
pop
jmp
test
lret
pextrw
sbb
jge
pusha
mov
clc
pop
roll
in
call
xchg
xor
and
jmp
out
hlt
out
call
dec
rorl
sub
push
pop
in
adc
inc
gs
call
push
sbb
xlat
cmp
push
addr16
or
fs
sbb
movsb
or
and
pop
arpl
and
cmp
and
popf
xchg
jns
imul
imul
arpl
xorb
sbb
mov
push
push
test
mov
sbb
or
insl
push
pop
pop
dec
outsl
adc
das
inc
jle
mov
mov
les
dec
mov
adc
or
sub
lock
push
lahf
and
clc
lahf
ss
push
xchg
inc
sub
dec
test
aaa
popf
daa
aad
arpl
repz
fidivrs
lea
fdivl
adc
lcall
bound
shll
pop
rorb
movsl
cmp
and
clc
push
rorb
and
sub
nop
xor
adc
or
fnstenv
addr16
xor
add
pop
lds
xor
xlat
add
cmpsl
push
xchg
inc
xchg
push
test
aaa
in
aad
lds
xor
xlat
add
cmpsl
push
xchg
inc
xchg
rolb
cmp
sbb
sbb
cs
call
sub
sub
mov
scas
jb
push
lret
and
dec
xchg
xchg
jmp
pop
xacquire
jg
fwait
push
or
inc
adc
ret
mov
mov
pop
jg
mov
push
stos
daa
push
mov
sbb
arpl
push
fists
cmp
outsb
fistpl
in
push
daa
or
roll
jmp
inc
mov
xchg
pop
xchg
rorl
inc
testb
and
pop
data16
jo
dec
add
das
stos
mov
js
pop
mulb
out
xlat
ret
adc
pushf
dec
xlat
stos
scas
cmp
out
mov
sti
mov
sub
popf
adc
inc
fnstsw
push
mov
fucomip
jnp
push
pop
pop
xchg
push
push
das
test
mov
daa
lret
cmp
mov
aad
inc
xchg
push
loop
lods
cwtl
pop
ljmp
push
sbb
adcl
testl
adc
in
cs
ror
arpl
mov
add
faddl
push
out
mov
xor
in
cld
insb
and
sub
jne
inc
repnz
sbb
std
notl
repnz
mov
sahf
adc
nop
inc
scas
aam
pop
sbb
xlat
pop
jo
sub
pop
adc
cltd
sbb
in
mov
inc
call
sbb
jns
xchg
cli
lcall
or
daa
dec
xor
pop
cmpsb
sbb
lgs
repz
and
lods
je
inc
loope
mulb
push
mov
cmp
dec
loop
add
jmp
subb
mov
fld
pop
mov
out
mov
mov
add
dec
pusha
mov
and
mov
into
mov
lds
sub
jbe
pop
xchg
inc
popf
jecxz
xlat
aaa
ljmp
sub
push
pop
add
int3
push
jg
jmp
sbb
jl
hlt
dec
pop
fisubl
xor
test
add
dec
ret
sbbb
xor
xor
sub
lods
insl
or
inc
repnz
cmp
mov
in
insl
leave
sub
mov
lods
sbb
xchg
jl
je
push
ret
and
inc
fdivrl
lcall
pop
mov
subl
pusha
pop
pop
ljmp
dec
xchg
js
push
stos
adc
rcll
mov
cmpsb
das
gs
sub
pop
or
inc
mov
adc
mov
mov
add
mov
in
aas
xchg
xchg
mov
hlt
jb
cmp
push
pop
pop
and
rcl
leave
inc
cmpb
bound
pop
adc
out
sub
movsb
sbbl
les
pop
cmp
add
test
rcll
fwait
scas
fbld
jge
clc
std
imul
fisttpll
sub
jae
stos
in
ficoml
jae
dec
addr16
shll
inc
ds
dec
pop
cmp
mov
sub
ficoms
dec
or
imul
push
arpl
and
pushf
pop
dec
rcrl
dec
outsl
xchg
jge
fsubr
out
or
add
adc
std
dec
loop,pt
sbb
push
mov
sarl
jae
in
scas
rcrl
nop
sub
xchg
push
lock
cmp
sub
pop
sbb
cmp
negb
add
jbe
mov
mov
call
mov
nop
js
andb
adc
icebp
jp
movsb
xchg
pop
outsb
xchg
jae
adc
push
stc
lds
and
scas
int
in
xchg
lcall
adc
pop
push
jl
pop
rcrb
out
roll
push
fsub
mov
xchg
inc
lret
scas
push
push
xor
enter
push
pop
dec
adc
ror
and
insl
sub
fcomps
push
mov
cmc
push
mov
orb
xor
dec
pop
xor
dec
inc
sub
fisubl
mov
and
mov
shlb
es
je
pop
cli
mov
push
pop
pop
ds
mov
imul
aaa
aaa
jnp
lods
xchg
fbstp
cmp
xlat
imul
pop
faddp
pop
dec
jle
sbb
xchg
lds
idiv
push
push
xchg
mov
dec
out
popf
mov
je
mov
fs
fcomip
enter
rorb
inc
sub
dec
dec
ja
clc
cld
jnp
jae
inc
jmp
jb
add
mov
xchg
fsubrs
adc
sahf
and
jo
mov
scas
mov
xor
pop
mov
jno
or
into
out
in
cmc
pushf
mov
aaa
shll
sub
cmpsb
sbb
pushf
in
loopne
jne
es
mov
push
mov
pop
push
push
dec
out
mov
sub
mov
sti
push
lret
cmc
dec
aam
rcrb
movb
adc
pusha
xor
cmp
test
negl
push
jae
sub
pop
pop
pop
xor
jl
fstpl
call
cmp
mov
cwtl
cmp
je
test
mov
dec
mov
jae
out
add
sub
mov
push
pop
add
addr16
pop
rcll
into
or
shll
jle
aad
mov
add
in
push
pop
in
push
das
jb
das
mov
pop
out
pop
cli
jmp
push
jl
sbb
loopne
arpl
push
das
jae
push
out
xor
rcrb
sbb
push
test
test
mov
push
add
jp
sbb
cmpsb
sbb
sahf
pop
pop
outsb
arpl
lock
fsts
rcrb
cwtl
decl
sbb
jnp
decb
sub
pusha
mov
les
call
loope
dec
fdivl
icebp
mov
jl
sahf
or
je
fstpt
push
arpl
ficoms
mov
mov
and
pop
jl
icebp
jge
mov
pop
dec
out
int3
and
cltd
mov
mov
cmp
aaa
fistl
jo
lea
push
xchg
shl
imul
insb
mov
or
inc
out
xor
jne
fneni(8087
xchg
pop
ja
jmp
ds
xlat
sub
lcall
sub
adc
nop
inc
jae
sbb
leave
loope
mov
mov
mov
negb
clc
std
or
mov
xor
dec
idivb
test
cmp
mov
lahf
mov
jbe
dec
mov
push
rorb
mov
xchg
movsb
add
inc
out
andnps
jge
mov
push
xchg
fiadds
hlt
jns
and
dec
jae
mov
mov
fdivs
cmpsb
jb
in
leave
xchg
jb
push
arpl
imul
inc
inc
mov
add
stos
push
jb
imul
jnp
fdivrl
fisttpl
or
xchg
push
sub
mov
filds
and
pop
jae,pn
mov
test
stc
add
mov
pop
jns
pushf
cmc
sarl
xchg
push
adc
adc
push
push
sbb
shlb
mov
add
mov
dec
add
cmp
push
mov
subl
sahf
mov
loopne
out
adc
or
and
dec
in
sbb
jbe
jo
sbb
adc
fs
popf
jbe
aam
or
mov
hlt
sbb
sub
xor
or
push
in
imull
imul
sbb
jbe
push
movsb
xor
inc
insb
inc
stos
or
jae
dec
xchg
std
sbb
mov
and
aad
out
jge
mov
outsl
sbbb
out
pop
jno
int3
dec
lds
and
stos
pop
mov
je
or
adc
jnp
negl
mov
push
insb
inc
pushf
fistpl
mov
fbld
fwait
or
sbb
and
insb
and
sub
leave
flds
mov
lcall
repz
mov
push
imul
cli
int
test
aad
in
mov
rolb
sub
pop
fsts
push
outsl
subb
xor
mov
shrb
sub
mov
inc
xor
cwtl
pop
jno
push
push
adc
and
ss
popf
popa
mov
push
xor
cmp
add
inc
imul
int3
int
notl
roll
push
push
outsl
stc
adcb
jmp
pop
aas
push
dec
sub
cmp
xchg
pop
or
cmp
incb
jl
movsl
and
pop
push
sub
movsl
cwtl
push
ret
cmp
jae
movsb
pop
dec
incl
loop
rorl
add
pop
push
or
daa
aaa
sbb
xchg
or
pop
rorl
loope
jge
arpl
iret
mov
js
mov
enter
adc
jns
jb
jns
jge
rorb
aad
adc
test
sbb
lret
inc
xorl
sub
stos
dec
movsl
pop
push
or
inc
sahf
fisttpl
xor
aaa
ds
mov
testb
sub
push
fwait
pop
mov
sub
aam
and
or
push
cmp
adc
jp
bound
and
fwait
clc
pop
mov
scas
sbb
inc
jns
adc
xchg
ror
and
sub
daa
or
jns
dec
shl
lock
or
xchg
and
out
jmp
push
push
aad
cmpsl
movsb
pop
icebp
pop
ljmp
insl
add
imul
mov
sub
frstor
jle
dec
add
add
int3
or
adc
pushf
and
fnstcw
pop
pop
sbb
pop
xchg
add
lcall
iret
xchg
test
aam
jb
push
fs
sub
fmull
add
orl
jecxz
cmp
mov
cmp
or
push
ja
sahf
and
cmc
loopne
je
mov
jne
sub
dec
jo
stos
or
insb
repnz
das
push
inc
call
lcall
push
sub
pusha
adc
xlat
push
addr16
or
pop
cmp
mov
scas
pop
rorb
ss
mov
cwtl
or
sbb
xlat
js
pop
js
push
cmp
jae
jg
sbb
cmp
popa
scas
sbb
jo
fnstenv
dec
or
jnp
push
and
push
aam
pop
enter
inc
push
inc
std
cmp
mov
mov
jp
push
sub
or
adc
cmp
xchg
xchg
jnp
repnz
mov
fldt
inc
pusha
stc
sbb
mov
adc
push
popa
adc
out
out
jl
jge
ss
sbb
movsb
sarl
mov
test
add
cmp
fsts
inc
lcall
sub
in
cld
cmpsb
adc
jb
pop
mov
sbb
lret
bound
jle
imul
and
and
or
jg
call
inc
test
lods
adc
bound
dec
popf
add
sbb
cltd
shr
adc
sbb
inc
or
pop
sti
ja
and
mov
xchg
loopne
push
pop
sbb
cmp
push
xchg
enter
jmp
cmp
mov
push
jle
and
mov
push
aad
rcrb
in
aas
imul
jp
in
leave
mov
cli
cmp
hlt
jg
sub
pop
ja
shrb
les
les
das
xchg
ss
cltd
outsb
and
push
inc
adc
fnstcw
repz
int
pop
cmp
pop
xchg
dec
and
popf
xor
xchg
push
cli
js
into
movsb
sbb
cli
cmp
fwait
addb
or
mov
out
mov
cmp
jae
out
cmp
lods
loopne
lods
push
and
loop
jecxz
js
fst
cbtw
repz
imulb
xlat
aad
xchg
insb
mov
adcb
push
jge
push
mov
mov
xchg
push
les
and
cltd
cmp
jmp
mov
dec
adc
enter
pop
mov
cltd
mov
roll
xchg
ss
add
shufps
xor
fcoms
pop
popf
xor
pusha
cmp
sbb
popa
aad
inc
push
sti
add
push
inc
adc
fmulp
lahf
xchg
cmc
fisubrl
fs
lock
jge
daa
das
adc
aaa
mov
cltd
pop
pop
aaa
xchg
lahf
gs
iret
inc
pop
and
jle
nop
leave
mov
or
ret
mov
mov
xchg
add
dec
mov
in
orl
mov
clc
movsl
or
push
add
fbld
lea
out
fdivr
push
mov
mov
and
pushf
rorb
sbb
lret
shlb
mov
pop
xchg
mov
cmp
mov
mov
xchg
movl
mov
rorl
pushf
mov
dec
iret
imul
xor
loopne
lods
fcmovnbe
xorl
rorl
adc
outsb
cmp
mov
test
jp
pop
icebp
stos
ret
pop
mov
pop
movsl
jg
mov
add
cli
bound
popf
das
jle
mov
mov
pop
mov
popl
inc
inc
fnstsw
dec
fadds
test
jb
sub
mov
xor
add
cld
push
lds
sahf
daa
je
pop
test
mov
mov
sbb
int
inc
negl
inc
adc
enter
and
cmp
mov
push
lods
mov
or
out
xor
sub
jns
xor
rclb
jp
in
fldenv
jl
clc
push
rol
pop
adc
notb
push
xor
lret
xor
iret
jae
out
inc
cmp
mov
mov
loop
popf
push
inc
xor
sub
pop
aaa
std
sub
jo
aas
pushf
jp
popa
lods
lahf
xchg
cmp
sbb
adcb
rorb
aam
cs
dec
jecxz
inc
and
fst
addr16
dec
xchg
mov
and
rol
in
fcomip
out
xchg
inc
popf
mov
sub
xchg
add
inc
clc
or
add
fiaddl
in
pop
aam
aas
xor
fneni(8087
mov
stos
faddl
xorl
pushf
dec
jns
lret
sarb
mov
xor
nop
test
pop
inc
sbb
jb
cld
xor
cmp
negb
sbb
pop
test
pop
cmpsl
jg
addr16
popa
jb
ss
jp
test
mov
or
inc
mov
lahf
pop
rol
jp
stos
inc
test
cmpb
lcall
mov
mov
pop
xor
outsl
sbbl
testl
subb
pop
jmp
dec
push
lea
mov
out
fcomi
lods
sbbl
dec
push
and
adc
shll
mov
adc
jne
enter
push
clc
inc
mov
push
xor
pushf
push
popa
int
ljmp
test
dec
outsl
dec
lods
dec
sbb
mov
mov
out
xchg
imul
adc
nop
popa
loopne
sub
dec
sbb
jno
inc
cmc
shll
pop
xchg
lsl
stos
xor
jb
mov
ljmp
jae
adc
pop
mov
out
push
push
ja
js
clc
or
sub
outsb
insb
sti
push
loopne
cmp
adc
xor
mov
xor
sub
popl
clc
push
cmc
lods
jnp
icebp
mov
andb
adc
push
push
mov
lcall
movsb
jmp
pusha
add
rcrl
lea
aam
pop
test
xchg
lock
inc
repz
std
push
lcall
std
inc
aas
outsb
or
lods
mov
jecxz
in
insl
mov
mov
lahf
into
mov
mov
jb
pop
jmp
andb
cmp
rcrb
xor
sahf
pusha
jnp
adc
xchg
pop
inc
decl
jg
mov
movsl
and
mov
xchg
inc
xor
mov
xchg
dec
pop
mov
stos
jo
lcall
repz
sbb
aas
jnp
bound
inc
xlat
sbb
fwait
aam
mov
mov
fs
fs
sbb
fwait
jecxz
or
pushf
int3
or
shrl
sbb
imul
xchg
jge
je
addr16
pop
mov
test
divb
dec
out
xchg
jmp
idivb
mov
and
inc
jo
imul
xor
add
sbb
dec
hlt
and
and
and
fisubs
mov
jecxz
test
dec
pop
dec
shlb
dec
std
repz
aad
dec
push
cmpsl
ss
movsb
pop
test
in
cmp
imul
insl
push
insl
stos
std
test
dec
daa
outsl
ret
xor
cltd
popa
mov
and
cli
jne
or
add
and
inc
fistps
dec
je
or
shl
sub
cmp
ret
fwait
subl
and
imul
pop
inc
fwait
and
xor
or
rcl
xlat
mov
lahf
fwait
push
repnz
or
ret
lcall
js
divb
push
out
mov
dec
divb
push
add
fsubl
push
ljmp
mov
mov
sahf
jns
mov
fucomp
inc
addl
incl
scas
pop
popf
xchg
cmp
jns
clc
push
lret
mov
xor
outsl
in
adc
pop
push
xor
movsb
out
dec
mov
inc
adc
les
sbb
lea
and
test
sahf
or
mov
pop
mov
push
cmp
ds
mov
outsb
std
cltd
sub
enter
rorl
mov
sub
pop
dec
int3
mov
add
adc
cmp
pop
in
sarl
ret
dec
ficompl
les
lock
lcall
mov
jg
leave
sbb
scas
push
lahf
mov
daa
scas
jmp
sub
stc
adc
in
xor
lds
push
pusha
xor
and
lcall
imul
cmc
or
cmc
popa
dec
fisttpll
sbb
enter
fs
cld
sub
jns
jae
and
cli
test
cmp
aas
sbb
jbe
test
or
fcoml
repnz
ret
or
jmp
imull
repnz
sti
or
insl
jge
fmull
arpl
jo
jbe
mov
int3
sarb
test
test
jmp
jmp
sbb
sahf
subl
adcb
jecxz
mov
add
jecxz
faddl
mov
add
stos
dec
out
inc
mov
js
push
sbb
shll
adc
movsb
lret
cmpsb
adc
nop
add
jle
push
sbb
test
pop
in
sub
fsubrs
popa
or
jle
sbb
xchg
xorb
rcr
jno
aaa
aad
fisttpl
jg
mov
xor
std
sub
mov
cwtl
pushf
adc
arpl
mov
daa
imul
or
pushf
lahf
mov
cmp
jl
add
div
je
xchg
adc
push
adc
push
mov
fdivrl
add
aas
jnp
in
inc
bound
fcomi
test
adc
out
inc
je
test
clc
in
dec
fneni(8087
fwait
testb
pop
dec
cmp
fidivl
dec
idivb
shll
xlat
cmp
mov
xor
js
or
jo
pusha
in
push
js
jns
loopne
mull
push
subb
ret
push
xchg
pop
add
outsl
dec
push
call
sbb
stc
sbb
addr16
pop
sub
and
mov
in
fs
rcr
fsubrp
push
out
repz
jo
push
in
sub
ja
push
add
out
or
mov
dec
loope
sub
das
repz
and
icebp
and
movsl
fwait
cmpsb
dec
fidivrl
daa
lds
pop
lods
hlt
rolb
mov
mov
push
imul
out
bound
and
adc
loope
dec
mov
push
add
stos
dec
icebp
fwait
stc
ljmp
pop
sbb
shr
mov
dec
cmp
xchg
and
aam
jecxz
inc
arpl
lock
and
push
pop
pusha
cmp
sbb
push
push
lret
cmp
mov
test
sbb
push
pusha
lret
mov
sahf
sbb
sbb
or
lods
dec
out
sti
loop
xor
mov
bound
mov
dec
push
xor
jle
cmpsl
mov
sbb
and
mov
jbe
adc
mov
and
icebp
sub
add
neg
adc
ret
movsb
sub
jge
into
cltd
inc
xor
mov
cmpsl
cli
adc
insb
inc
cmpsb
mov
jg
out
jbe
or
cmp
pop
mov
out
mov
push
int
lods
in
jnp
stos
popf
cmpsl
dec
sbb
dec
xor
xchg
mov
out
and
inc
xchg
dec
lahf
xchg
in
jb
sub
xchg
push
jmp
cmp
push
push
ljmp
sahf
dec
and
mov
xchg
inc
ret
inc
sarl
cltd
shll
inc
cmc
aaa
in
aad
lds
xor
xlat
add
cmpsl
push
xchg
inc
xchg
push
test
aaa
in
aad
lds
xor
xlat
add
cmpsl
push
xchg
inc
xchg
push
test
aaa
in
aad
add
out
xlat
add
cmpsl
push
xchg
lods
andl
movsl
inc
cmc
aaa
cmc
daa
aad
inc
xor
xlat
add
fsubrs
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
push
mov
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
in
cmc
outsl
lds
dec
lods
imul
lock
cwtl
pcmpgtd
ja
inc
fists
and
lahf
adc
outsl
lds
dec
movsl
aas
mov
test
xchg
pcmpgtw
jne
inc
fists
and
lahf
adc
outsl
lds
dec
movsl
aas
mov
test
xchg
pcmpgtw
push
mov
scas
xor
and
cli
jl
xchg
jg
sbb
cmp
outsb
sbb
in
lods
jecxz
mov
test
mov
inc
or
das
cmp
mov
mov
jns
jge
flds
mov
jg
and
lahf
inc
jae
push
mov
lock
lret
aas
pusha
adc
rorb
and
mov
mov
adc
push
pop
rcrb
ds
aas
fdiv
xchg
pop
xchg
int3
clc
cli
movsb
and
std
popa
sahf
scas
mov
jo
inc
mov
mov
aas
xchg
sarb
push
pop
fs
fdivrp
jne
mov
cli
sahf
adc
xchg
lcall
cmp
aam
mov
add
mov
aas
iret
roll
ret
es
outsl
lds
dec
movsl
aas
mov
test
xchg
pcmpgtw
jne
inc
fists
and
lahf
adc
mov
rclb
ljmp
xchg
mov
mov
pusha
sbb
andl
shlb
pop
mov
push
mov
insb
ljmp
subl
cmp
push
mov
test
xchg
pcmpgtw
jne
inc
fists
and
lahf
adc
outsl
lds
dec
movsl
aas
mov
test
xchg
pcmpgtw
jne
inc
fists
and
lahf
adc
jp
lods
stos
sahf
jne
inc
cmp
dec
or
out
sub
cmp
cmp
pop
dec
test
aam
xchg
pop
int
test
inc
jmp
movsl
fbstp
sub
cmpps
xchg
shrb
push
xchg
mov
mov
push
mov
adc
cmp
lea
loop
or
mov
rcr
stos
inc
stos
sub
adc
xor
and
cmovns
push
lods
cwtl
pop
shr
cs
mov
lea
pop
dec
dec
mov
out
cltd
pop
mov
std
mov
fwait
int
icebp
mov
lds
pushf
in
js
in
mov
sbb
push
add
mov
add
mov
das
repz
gs
mov
adc
js
lea
xchg
int3
pop
xor
mov
jl
fwait
mov
sti
jmp
in
insb
cmpsl
scas
adc
lahf
out
loope
movsl
dec
push
sub
inc
push
mov
out
fadds
push
jno
pop
xchg
xor
sbb
inc
mov
lret
inc
sub
cmp
xor
leave
inc
jnp
dec
adcb
stos
andb
aad
xchg
es
int3
fidivrl
jae
or
pop
mov
ljmp
push
subl
movsl
cmc
ficompl
stos
mov
call
push
sti
or
xor
push
xorb
sbb
ret
fadds
es
xchg
popa
xlat
or
xor
out
adc
mov
in
pop
xchg
pop
xlat
in
mov
aad
adc
fisttps
xchg
adc
pusha
add
pop
hlt
jmp
add
aam
mov
sub
and
lahf
pop
fiadds
out
int
or
in
mov
and
shll
pop
jecxz
cmp
fists
out
aaa
std
sbb
sbb
loop
hlt
mov
int
dec
iret
stos
stc
test
mov
pop
ljmp
fwait
sti
sub
mov
std
or
sub
cwtl
add
cmp
roll
insl
out
xchg
and
mov
cmc
xlat
into
shlb
mov
ret
pop
fidivrs
outsb
mov
leave
xchg
lcall
jnp
cmp
fidivrs
push
xchg
adc
mov
cmp
sbb
jb
enter
rclb
mov
and
stc
push
fbstp
jge
mov
es
or
mov
or
clc
jle
dec
and
mov
inc
int
dec
inc
shlb
lret
xor
mov
push
test
call
dec
xchg
imul
loopne
scas
xlat
lahf
pop
cmpl
movsl
push
xlat
rclb
push
or
jge
xlat
leave
addr16
xchg
mov
sub
jmp
sub
insb
or
mov
and
movsl
or
cmp
xor
inc
fcmovb
scas
mov
int
cmp
pop
shll
xchg
jle
adc
in
adc
clc
data16
lahf
stc
push
inc
arpl
add
cmp
inc
mov
mov
sbb
jbe
dec
push
sub
loop
add
mov
add
out
mov
mov
inc
fiadds
sub
fadds
popf
and
jb
out
jnp
pop
and
mov
xor
pop
mov
flds
xchg
js
sub
push
inc
mov
frstor
pop
jae
out
xchg
cmpps
repz
xchg
pusha
sbb
add
dec
or
popf
lea
sub
mov
fwait
push
sbb
inc
outsb
lret
dec
cwtl
dec
in
adc
push
or
jge
mov
pop
adc
xchg
dec
iret
popa
adc
cmp
enter
mov
loopne
push
push
xchg
jb
adc
cwtl
jg
jge
mov
cld
inc
push
je
or
jbe
xchg
push
mov
mov
jmp
icebp
in
xchg
sbb
stos
sbb
xchg
adc
push
cs
mov
push
push
arpl
mov
aad
push
sahf
sbb
fmull
sub
pop
rorl
sub
shlb
sti
imulb
popf
je
pop
sbb
and
movsb
and
rcll
mov
sbb
xor
and
lock
lea
mov
ja
scas
repnz
or
jne
add
fcomip
mov
repz
push
mov
mov
fisttps
sub
bound
lods
or
notb
add
sbb
out
jecxz
addb
ret
mov
jb
jae
shlb
ret
jnp
add
xlat
and
or
xor
daa
scas
aas
mov
lods
or
shl
div
xor
adc
push
xchg
sbb
jbe
popa
idivl
push
mov
repz
scas
cmovae
jg
adc
lods
js
and
inc
xor
fcomi
mov
cmc
cmp
mov
ret
aaa
inc
fisttpll
dec
movsb
mov
rolb
add
xchg
push
loopne
cmp
int
das
sub
lock
dec
cmpb
out
sti
mov
jnp
xchg
jmp
adc
mov
sub
imul
or
insl
xor
sbb
idiv
mov
enter
repnz
mov
data16
and
dec
sub
aam
cmp
out
mov
add
sbb
or
add
push
js
inc
jo
jb
xlat
push
test
jle
loope
shlb
aaa
in
fistl
ror
push
adc
int3
xchg
inc
aam
mov
add
arpl
dec
mov
mov
mov
add
dec
or
xor
or
jnp
mov
cmc
movsb
into
pop
cmc
dec
mov
sub
mov
cmp
adc
movsl
jb
jle
int
lock
inc
or
push
test
or
add
lret
in
add
add
xchg
ficompl
les
mov
jnp
jns
or
pop
add
das
and
into
fsubp
dec
leave
stc
sarl
fsts
loopne
fnstenv
mov
push
mov
addr16
lods
jle
jp
jnp
cmp
mov
cwtl
push
xchg
cli
cmpsb
lods
inc
test
mov
xchg
adc
fwait
mov
fucompp
shlb
repnz
lea
lret
cmp
lcall
inc
lcall
shrl
pop
adc
movsl
push
std
pop
mov
sbb
dec
pop
inc
loop
fimuls
and
mov
push
sbb
add
inc
mov
in
add
or
sbb
mov
andl
idivl
test
lret
pop
dec
push
cmp
xor
pop
fldt
xchg
aam
aad
repz
clc
or
insl
cli
sub
mov
lcall
add
dec
jge
adc
cmp
mov
imul
test
push
push
push
sub
shrb
test
cmp
cli
addr16
int3
sub
lock
lock
mov
or
movsb
dec
popf
xchg
pushf
cmp
ds
and
in
add
cmp
mov
push
iret
iret
mov
pop
inc
sbbb
out
xchg
mov
repnz
sub
sbb
incb
ret
mov
test
xor
inc
je
addr16
fsubrl
out
jl
movq
mov
push
adc
push
lea
inc
pusha
sub
das
in
sub
xor
add
jns
iret
popa
jo
lods
jp
inc
shlb
sbb
inc
enter
outsb
pop
stc
aaa
stc
movsb
int
and
mov
push
andl
stc
ja
jl
jb
sahf
cvtpi2ps
out
push
push
ror
xchg
aam
or
jg
lret
mov
pop
or
leave
dec
addl
mov
test
adc
enter
jns
cld
jl
test
stos
pop
rcrl
ja
and
lahf
test
jo
sbb
fucom
xor
pop
movsb
xor
push
jae
dec
adc
or
cmp
popa
vphaddubd
push
outsb
les
cmpsl
xor
mov
xchg
lea
into
sti
in
mov
stos
jnp
in
sti
cs
and
xchg
jg
scas
in
mov
xchg
mov
inc
pop
jl
push
mov
je
sub
cs
cmp
dec
xchg
ret
je
sbb
mov
divb
inc
mov
or
jo
adc
mov
inc
inc
mov
mov
jb
movsl
adc
sbbl
bound
sbb
mov
sub
pop
or
adc
pop
xchg
shlb
setge
mov
xchg
in
mov
xchg
shlb
push
and
loopne
jg
fnsave
ja
loop
adc
mov
push
xchg
test
inc
pop
jno
fbld
insb
mov
or
je
adc
es
jno
rorb
sub
jnp
push
loopne
xchg
icebp
cmpsl
inc
ss
loope
pminsw
mov
sbb
pusha
mov
shld
jae
adcl
sbbb
sub
movsl
jne
ret
cmp
xchg
inc
enter
std
xor
inc
sbb
mov
gs
push
add
push
lret
push
push
or
nop
mov
jnp
mov
jg
jbe
jb
xor
mov
dec
mov
dec
js
imul
cs
leave
sbb
es
js
fs
or
adc
pop
movsb
sbb
daa
sarb
out
xchg
movsl
pop
jae
mov
inc
pop
in
test
js
lds
outsl
push
push
je
dec
mov
or
and
leave
cwtl
pop
jmp
enter
aaa
mov
sub
loopne
add
push
push
aaa
sbb
out
dec
rclb
push
ljmp
mov
jnp
mov
ds
data16
lods
push
repnz
insw
nop
or
mov
movsl
xchg
push
fbstp
lahf
dec
in
out
outsb
scas
mov
mov
push
aad
cmp
ljmp
cmc
add
adc
aad
test
lea
cli
sbb
push
pop
mov
test
mov
fwait
sbb
mov
mov
ss
xor
cmpsb
xor
add
std
xor
ror
scas
inc
outsl
jge
movsb
xchg
mov
stc
cmpsl
icebp
inc
roll
cmpb
popa
jb
loope
sub
jle
jb
popf
fwait
std
cld
pop
cmpsb
pop
mov
add
push
sbb
in
stos
imul
aam
cmpsb
push
jle
adc
dec
aam
push
xchg
or
mov
mov
shrb
pop
mov
mov
jp
addr16
ds
mov
jno
scas
jnp
adc
or
cli
adc
lcall
or
mov
add
das
push
jne
mov
popa
enter
dec
loopne
mov
lahf
add
lods
or
jo
or
and
mov
out
imul
int3
dec
pop
setp
aas
or
push
clc
mov
push
movsb
mov
push
js
pusha
mov
jg
xlat
sahf
xchg
push
inc
cmpsl
lret
loop
or
push
xchg
bnd
aad
mov
pop
xchg
mov
push
in
in
mov
or
inc
xchg
push
sti
cli
mov
mov
push
sbb
cld
add
out
fs
xchg
rcl
mov
test
mov
pop
cmp
out
adc
or
xor
mov
repz
sub
sub
and
rcrl
btc
decb
movsb
pop
push
js
dec
push
in
cmpsl
jl
and
iret
out
mov
out
inc
dec
cli
and
cmc
scas
repnz
insl
mov
xchg
sbb
cld
fwait
sbb
gs
dec
pop
add
and
push
or
mov
enter
jg
test
pop
scas
lret
push
and
inc
scas
loop
rorb
pusha
push
cwtl
xchg
adc
xor
test
sti
fdiv
jbe
in
jg
xchg
inc
mov
mov
mov
mov
mov
cmpsl
jnp
mov
sbb
push
lret
jo
add
xor
call
ss
sbbl
jle
aad
aaa
shlb
je
mov
xor
nop
les
imul
push
inc
jo
subl
call
adc
jmp
cwtl
or
sub
test
pop
adc
push
push
mov
push
inc
xor
insl
cmpl
xchg
inc
inc
sbb
mov
pop
sbb
hlt
cmpsb
push
daa
mov
in
jns
mov
mov
inc
je
aas
fs
popf
add
lock
js
adc
jg
jbe
and
bound
imul
js
aas
ror
fucomi
mov
push
das
adc
add
jg
pop
jge
lret
jbe
add
pop
pop
jmp
scas
push
sbb
or
add
inc
xor
fadd
or
or
sbb
stc
shr
lods
xor
jmp
movsb
pusha
cs
das
mov
test
shll
dec
sbb
sar
pop
and
outsl
mov
dec
and
sbb
jl
addr16
and
adc
sub
jo
mov
add
gs
mov
dec
jbe
int3
jge
pop
sbb
sbb
pop
dec
or
sub
fs
insl
sbb
push
sbb
aaa
repnz
sub
ret
inc
and
dec
cmp
xor
gs
pop
or
fnsave
jb
dec
pop
push
pushl
in
jbe
mov
push
xchg
jmp
in
mov
lret
lds
pop
stos
jmp
repnz
mov
push
mov
pop
test
stc
negl
adc
push
inc
add
mov
and
adc
pop
inc
fldcw
push
cmc
and
stos
imul
es
push
add
adcb
jecxz
mov
jmp
add
pushf
add
jb
push
lds
mov
scas
into
loopne
jmp
mov
jg
jne
mov
or
jp
mov
push
pusha
or
daa
test
test
or
mov
sarb
sub
xor
cwtl
pextrw
test
inc
cmp
pusha
mull
ja
cmp
pop
mov
jae
in
dec
jmp
pop
mov
xchg
testl
dec
xor
jecxz
or
gs
push
jp
xchg
xchg
or
pop
mov
js
in
sbb
call
sarb
xor
push
lahf
leave
adc
pop
mov
inc
jbe
push
pop
jg
jg
fs
push
dec
adc
daa
jns
add
cmpsl
cmp
inc
ret
inc
rclb
les
mov
and
sbb
jno
and
mov
inc
stos
sti
push
xchg
ret
jecxz
adc
mov
loopne
mov
sbb
int
jne
in
popa
xchg
push
dec
cmpsb
or
loop
sub
stc
loopne
loopne
inc
aas
adc
es
xor
cmp
bound
in
lods
cltd
dec
mov
cs
sahf
mov
mov
aam
sub
test
jbe
imul
or
std
in
add
pop
icebp
lcall
xchg
test
out
lds
js
add
cmp
mov
in
jns
in
std
mov
test
jmp
je
ret
icebp
repnz
test
dec
dec
lahf
mov
xlat
popf
inc
pop
xchg
mov
out
jo
ret
jnp
add
imul
push
ljmp
data16
and
cltd
test
cwtl
sbb
inc
jne
lahf
mov
ja
inc
mulb
add
insb
ret
sbb
ds
icebp
filds
push
loop
push
mov
mov
ja
bound
xchg
rol
scas
xchg
pop
shll
push
imul
dec
dec
gs
mov
lcall
xor
sbb
inc
aam
pushf
pushf
jmp
pusha
sbb
enter
mov
mov
fimuls
sahf
jecxz
outsb
mov
push
jl
push
jnp
or
mov
stos
cwtl
mov
adc
bound
outsb
mov
inc
mov
out
das
loop
scas
or
cmpsl
add
jns
pop
xor
mov
jmp
sarb
movsl
dec
add
mov
loop
mov
jae
sbb
mov
push
jmp
gs
adcb
push
loopne
xchg
inc
push
jb
xor
mov
mov
sahf
and
mov
adc
pusha
and
outsb
imul
jo
inc
mov
pop
in
arpl
rcll
pop
pop
inc
mov
imul
lods
sub
ror
into
dec
jae
jno
test
and
or
xchg
push
jae
jge
ljmp
fs
cmpsl
adc
inc
mov
push
jmp
test
mov
fadds
into
mov
sbb
cmp
lds
out
adc
das
outsl
test
sbb
mov
cwtl
mov
cmc
or
out
dec
fisubrl
test
test
je
jp
sti
andb
ss
or
sbb
ss
stos
ficoms
sti
mov
scas
inc
leave
dec
pop
outsl
adcb
faddp
loope
pusha
out
fs
scas
fildll
sub
jge
cmp
out
inc
mov
bound
push
aad
dec
int3
sub
icebp
pop
pushf
dec
in
sub
sahf
jo
fdivrs
mov
add
adc
push
std
adc
addr16
sub
inc
pop
mov
sbb
ret
sub
aam
rcrb
test
fdivr
inc
pop
mov
fcomp
cltd
aam
mov
in
data16
sbb
pop
imul
jns
mov
mov
int
push
mov
je
movsl
or
and
or
mov
hlt
jecxz
cltd
pop
enter
in
and
stos
xor
mov
clc
mov
jecxz
in
inc
pop
repnz
testl
sbb
shr
sub
je
and
dec
pop
and
sub
push
cmc
mov
xchg
dec
and
lahf
or
add
aad
mov
rol
cwtl
in
aad
dec
lahf
ss
pop
ja
cmpsb
popa
pop
gs
jle
xchg
hlt
mov
pop
imul
clc
inc
ss
xorl
adc
xor
icebp
decl
dec
fistpl
outsl
in
pop
xor
push
sub
sub
mov
jg
idivl
or
fwait
mov
xor
data16
pusha
in
xor
cmc
lcall
mov
or
out
js
test
dec
repz
or
lods
aad
jg
imul
mov
ds
sbb
push
scas
imul
xchg
inc
loop
mov
or
xlat
pop
mov
cmp
dec
xchg
and
iret
fbstp
jp
in
or
or
mov
movsb
hlt
mov
insl
loop
js
addr16
pop
adc
xchg
push
mov
inc
stc
icebp
ja
aad
inc
inc
mov
jmp
push
inc
add
lret
pop
daa
push
and
inc
das
jae
dec
movsl
in
stc
sub
int
lods
dec
dec
shll
xchg
jbe
cmp
jle
in
test
jge
pop
hlt
adc
cmpsb
pop
pop
sub
cmp
ja
dec
pop
jge
dec
mov
fs
repz
sbb
popa
and
shrl
out
mov
push
das
jl
and
cld
jl
adc
addl
icebp
addb
xchg
and
mov
push
add
sbbl
mov
sub
enter
mov
xchg
pop
sub
jl
subl
fcoms
xlat
dec
adc
jl
negb
mov
shll
add
mov
pop
inc
fmuls
lahf
and
imul
hlt
std
jp
in
push
fcomi
dec
xchg
mov
fsubl
ret
mov
xchg
dec
xorl
ss
fcoml
fwait
pop
xchg
div
aad
imul
push
sbb
call
std
mov
fisubrs
shrl
jl
xchg
jg
pop
sub
hlt
jecxz
inc
xchg
sub
sbb
inc
popa
rcrl
mov
cld
fiadds
into
jo
sti
or
loope
dec
shr
dec
repnz
sub
gs
mov
cwtl
jmp
loop
cmp
inc
outsl
rorb
push
adc
or
cmp
jns
adc
mov
or
xchg
das
pop
mov
scas
xor
rorb
inc
push
fists
mov
push
cmp
int
xchg
aad
sbb
scas
dec
jb
push
hlt
insb
in
fnstsw
push
mov
hlt
int
out
sbb
call
xlat
sbb
dec
out
cli
xor
push
shlb
add
or
or
sub
fcomi
dec
sub
dec
fldenv
repnz
push
cli
leave
fndisi(8087
jb
push
cmovle
sub
inc
je
out
xchg
jae
add
jne
rolb
sbb
push
jle
and
fiadds
jmp
cli
pop
aad
movsl
aas
mov
test
xchg
pcmpgtw
jne
inc
fists
and
lahf
adc
outsl
lds
dec
movsl
aas
mov
test
xchg
pcmpgtw
jne
inc
fists
and
lahf
adc
outsl
lds
dec
movsl
aas
mov
test
xchg
pcmpgtb
jne
inc
fists
mov
adc
outsl
lds
dec
movsl
aas
mov
add
add
mov
std
pusha
in
jo
and
xor
add
adc
sub
push
inc
ljmp
inc
in
hlt
les
xchg
and
xor
add
adc
shlb
repnz
movsb
adc
mov
les
fwait
and
xor
add
adc
fs
je
inc
in
add
cmc
insl
mov
mov
repnz
xchg
jge
insb
fcoml
inc
jno,pn
iret
or
stc
inc
ljmp
mov
jge
xorb
mov
fs
pop
lret
shr
dec
fstl
add
test
and
cmp
outsb
jo
mov
lock
add
repnz
cmp
int
mov
inc
mov
push
popa
adcb
sub
inc
out
jne
cs
ss
jp
and
outsb
je
in
or
into
fwait
aad
push
insl
fs
push
cltd
xchg
in
adc
repnz
or
clc
aaa
jnp
nop
call
les
mov
jg
pop
mov
std
mov
out
jl
addl
and
xor
add
adc
fs
jmp
sbb
xchg
pop
in
hlt
les
icebp
and
jne
add
adc
add
add
adc
cmpsl
ss
pop
mov
xchg
push
popa
mov
mov
mov
xor
out
adc
xlat
inc
icebp
daa
mov
cmc
adc
mov
jno
dec
shlb
repnz
add
xchg
inc
in
hlt
les
andb
mov
shlb
repnz
add
xchg
inc
in
hlt
les
andb
sti
jmp
fwait
pop
lret
stos
push
sub
popa
das
fadd
add
jbe
jle
inc
lods
xchg
cmpb
mov
add
gs
pop
je
mov
lret
dec
mov
add
fwait
cmpsl
bound
repz
pop
icebp
dec
mov
sub
jmp
lods
xor
stos
sbb
push
mov
shl
faddl
jo
test
jmp
sub
insl
push
push
cmpsb
sub
mov
xchg
mov
movsl
push
repnz
xchg
jns
cmpsb
test
pusha
inc
jnp
adc
out
aas
lds
inc
sub
ds
scas
cmp
pop
pop
adc
push
rcrl
out
push
cmp
lods
stos
cmc
data16
addb
mov
in
insb
test
inc
pop
mov
add
cmp
leave
ret
inc
add
or
sub
test
adc
jnp
dec
addl
int3
jno
outsb
xchg
imul
inc
mov
sub
inc
cmp
fldcw
shrl
or
out
mov
pop
xor
mov
pop
out
stc
sarl
and
cmpsl
jae
mov
mov
scas
push
lea
aaa
add
cmp
enter
dec
insl
in
xor
test
xchg
jg
les
lret
jbe
pop
lods
add
jmp
lret
mov
xor
or
dec
xchg
mov
and
fcmovnb
and
pop
das
das
dec
iret
jmp
fistps
xor
int3
lret
out
sbb
xchg
sbb
jecxz
mov
xor
push
sub
imul
jns
pop
or
stos
inc
xor
push
pusha
sarb
sub
mov
rorl
in
sbb
mov
jns
sub
pop
cmp
in
cmp
je
adc
shlb
xchg
test
ss
push
push
adc
out
pop
mov
loop
mov
inc
mov
and
xchg
lods
cltd
lahf
ds
add
jnp
out
and
pop
sub
mov
sahf
inc
fsub
sarl
push
add
add
movsb
icebp
mov
xchg
inc
js
and
adc
sti
jbe
lahf
mov
sub
xor
cmp
vandnpd
stc
xor
jns
pop
sub
jl
push
test
mov
loopne
fistl
rcrb
leave
imul
int
and
icebp
sarl
int
mov
scas
inc
xchg
add
xchg
lods
lock
mov
pusha
pop
inc
cli
fdivs
mov
mov
mov
repz
cmp
call
mov
imul
stos
jne
adc
sahf
fsts
insl
daa
lcall
xchg
jns
aaa
and
pushf
inc
sbb
leave
outsb
les
test
dec
nop
add
inc
scas
fisttpll
xor
out
into
nop
or
mov
imul
lahf
imul
dec
adc
cmp
rcr
mov
das
push
fmul
cwtl
push
add
inc
cltd
rolb
sub
movsl
jno
mov
mov
ss
or
pop
test
pop
fcmovnb
xchg
insb
xor
cmpl
cmp
inc
dec
mov
sub
repz
jno
inc
fdivl
fdivs
fdivl
fcomip
aaa
daa
sbb
rcrl
dec
sbb
inc
sub
hlt
add
icebp
add
shlb
add
mov
add
pop
jns
cwtl
js
sub
cs
loop
movsb
inc
or
test
add
xchg
and
bound
mov
popf
push
nop
push
or
add
loope
mov
nop
adc
inc
xor
jmp
hlt
mov
xor
vpunpckhqdq
jle
xor
std
mov
dec
xchg
ljmp
arpl
addr16
je
sbb
ret
sub
jae
and
jb
leave
or
mov
lret
push
sub
mov
mov
push
cli
ret
jmp
fadds
repz
mov
push
mov
test
call
dec
fucom
xchg
lahf
stc
push
mov
dec
lds
cli
pushf
inc
jl
fdivl
adc
add
add
repnz
movsb
add
in
jns
xor
cmp
mov
jp
lea
cmp
dec
push
hlt
adc
or
add
mov
mov
xchg
xchg
pusha
cwtl
cmpsb
lahf
ret
je
aam
xor
push
fdivp
cli
add
dec
pop
mov
sti
and
inc
in
into
xchg
or
les
sub
incb
inc
scas
jo
in
test
cmp
arpl
pop
sub
jnp
loop
inc
aas
xor
inc
cmp
xchg
xchg
mov
mov
xchg
pop
dec
jge
add
lods
sarb
notl
push
in
movsb
ja
arpl
cli
pop
push
rcll
xchg
pop
jb
mov
jp
repz
ret
and
inc
sbb
jae
push
jge
xchg
loop
push
jp
xor
mov
out
push
push
lret
inc
cltd
repz
dec
test
sbb
pop
sub
arpl
into
xchg
push
push
pop
push
sub
test
cwtl
push
outsb
out
out
and
and
ljmp
xchg
cwtl
fistpll
daa
jmp
xor
or
adc
jo
sub
xor
xlat
jmp
nop
cs
push
mov
pop
xchg
sub
rorl
shrb
rolb
out
sub
sbb
lea
enter
inc
xlat
push
push
jb,pn
popa
iret
push
rcll
aaa
jae
leave
lock
shrl
xlat
mov
jns
sti
ja
push
sbb
stos
std
aad
xchg
or
sti
add
push
sarl
xor
pop
pusha
ds
pop
sarb
loop
or
sahf
add
xor
xchg
cwtl
dec
cmp
mov
inc
xor
cli
mov
mov
dec
add
inc
add
mov
mov
imul
in
mov
sbbb
inc
enter
pop
xchg
orb
scas
lcall
xchg
arpl
leave
and
dec
lods
pop
arpl
outsb
enter
scas
dec
add
pop
ss
or
sbb
adc
js
inc
fucomp
out
push
cmpsb
jmp
jbe
out
push
xchg
int
push
ret
ljmp
fdiv
fmul
sbb
rolb
cld
lods
jne
mov
inc
xlat
stc
xchg
incl
clc
xchg
jns
pop
lods
sub
xchg
jne
loope
mov
js
lret
sub
adc
push
pop
ror
mov
cltd
icebp
mov
mov
add
movl
loope
jns
sti
pop
xchg
xor
out
fidivrl
cmc
in
pop
add
lds
adc
dec
data16
dec
add
jle
cmc
aam
andb
std
xor
or
int3
arpl
insl
mov
or
and
xchg
xor
in
stos
add
test
adc
stos
inc
loop
xor
out
lea
adc
inc
mov
pushf
fsubr
stc
fwait
cmp
xchg
cwtl
test
jb
ds
bound
fwait
mov
add
pop
jnp
and
arpl
lods
out
mov
ret
iret
add
push
and
mov
sub
xchg
shlb
adc
inc
decl
jle
adc
pop
add
jecxz
shlb
dec
push
jno
fisubl
dec
ret
xor
sbb
out
test
or
mov
subps
mov
nop
add
loop
inc
enter
jmp
inc
stos
and
sub
xchg
jl
inc
inc
test
ret
adc
fiaddl
dec
out
mov
les
mov
mov
cmp
inc
push
sbb
mov
sbb
call
xchg
add
add
mov
push
and
mov
inc
mov
scas
mov
push
sbb
and
jo
test
jno
icebp
jmp
sbb
mov
pop
pop
jp
mov
sbb
stos
jbe
xchg
fildll
out
inc
add
dec
gs
and
inc
inc
xchg
shlb
testb
adcl
jge
psraw
xor
mov
hlt
add
push
push
push
mov
ljmp
jg
pop
add
popaw
ss
cwtl
xor
imul
adc
lret
jns
sub
sahf
push
jge
jle
arpl
and
push
xchg
sub
repz
and
mov
inc
fcoms
in
inc
pop
xorb
jle
mov
mov
push
fidivl
pop
push
jo
mov
lds
add
push
jp,pn
repnz
fists
imul
gs
std
inc
inc
mov
pop
ja
bound
and
icebp
mov
pop
push
into
push
adc
or
adc
pop
lret
out
pop
stos
imul
fdivl
pop
jne
jbe
pop
jmp
daa
in
xor
cmp
jno
xor
and
xchg
lods
out
movsl
and
xor
repnz
arpl
nop
push
jle
and
inc
sbb
shll
stc
sahf
in
xchg
jecxz
test
jnp
jne
jns
push
pop
pushf
xor
pusha
or
mov
bound
mov
jno
hlt
stos
icebp
adc
sbb
js
xor
and
cmp
sub
dec
sbb
fwait
cltd
cld
sub
call
rorb
or
cli
fldenv
cmc
xchg
frstor
mov
cmp
call
into
es
add
pushf
add
or
cmpsb
cmc
push
mov
insl
adc
push
xchg
cwtl
cwtl
jns
or
leave
ret
push
mov
sub
mov
ja
mov
ja
outsl
pusha
and
movsl
cli
rcr
sbbl
hlt
lods
in
xchg
fisttpl
aaa
loopne
adc
fidivl
loope
pop
leave
je
out
pop
sarb
inc
in
loopne
cmpsb
sbb
cmpb
sarb
xchg
sti
pop
aad
pop
loop
jb
jecxz
xchg
aad
ret
or
jle
sbb
pop
fidivrl
adc
pop
out
jmp
xlat
aam
lea
loope
repz
sbb
imull
or
xchg
popa
dec
enter
loop
add
ja
addr16
lcall
mov
and
adc
cmpsl
mov
cmc
out
ljmp
pop
pop
sub
int3
jmp
int3
hlt
mov
inc
or
cmc
mov
add
mov
mov
in
and
fucomp
frstor
push
and
pop
push
nop
push
cli
bound
mov
test
in
stos
mov
mov
sbb
mov
movsl
ss
ja
push
imul
rcl
mov
movsb
xlat
loopne
cmp
aad
or
mov
sbb
leave
mov
mov
mov
int3
xlat
cwtl
adc
daa
jp
xchg
cld
and
ret
inc
cmp
ret
mov
sub
and
push
or
outsl
lods
cmp
imul
sbb
aaa
testb
roll
cmp
sub
ret
imul
jmp
xchg
mov
xchg
lret
jae
and
dec
sub
adc
mov
lret
inc
mov
jns
mov
pop
loopne
in
dec
ja
jbe
fwait
dec
xchg
jne
aas
cltd
jg
inc
push
xchg
sbb
push
add
insl
stos
shll
jno
pop
push
xlat
dec
mov
roll
and
add
push
test
ret
adc
mov
inc
imul
cmp
aaa
lods
dec
cwtl
jmp
or
sbb
sub
adc
sub
test
push
imul
mov
mov
pop
adc
lret
popf
cmp
and
dec
outsb
push
sar
pop
pusha
add
rdpmc
push
pop
and
dec
pop
mov
data16
jns
and
pop
cmc
sbb
mov
movsb
cmp
cli
or
outsl
mov
push
lods
ja
pop
out
fcmovnb
pusha
mov
push
push
mov
fmuls
ss
repz
int3
mov
cmp
sub
scas
mov
push
push
xor
data16
sbb
fisttpll
inc
scas
fdiv
jo
xchg
mov
clc
and
repz
imul
jo
mov
test
scas
repz
stos
lds
xchg
jne
enter
mov
addr16
fnstsw
push
and
in
dec
jmp
movsb
loopne
cmpsl
cmpl
xor
fwait
sub
sub
stc
lea
jo
jno
inc
mov
mov
les
fcoml
mov
or
out
xor
add
jns
inc
inc
sub
je
subl
movsl
inc
into
xor
push
xor
dec
and
sbbb
push
pop
clc
sub
and
mov
jl
ror
lock
sub
ret
mov
je
jbe
fucom
andb
sar
call
pcmpeqb
mov
aaa
add
orb
jp
jg
popf
mov
adcl
sbb
add
ja
dec
int3
subl
or
jp
daa
mov
imul
out
movsb
jns
xorb
xchg
pop
out
data16
dec
pop
cmp
stos
jge
movsb
sub
jmp
jne
outsb
jecxz
inc
in
rorb
xchg
cmp
cmc
mov
in
ljmp
xchg
fs
cmp
in
les
jg
in
dec
dec
mov
mov
adc
xor
sbbl
pop
ja
cld
adc
and
add
mov
inc
push
sbb
loope
sub
jecxz
lcall
loope
cmp
sahf
mov
push
shll
enter
jb
xchg
and
or
xor
in
jbe
ds
cmp
nop
cmpsb
stos
test
xor
or
sbb
stos
push
leave
sub
pop
aas
sbb
iret
jo
in
in
xchg
popa
xchg
pop
cwtl
lret
loop
shll
cld
mov
aas
sti
les
cmp
test
sub
inc
mov
in
sub
insb
mov
mull
loopne
lcall
jae
fildl
cld
lahf
into
pop
mov
int3
adc
add
xchg
nop
and
add
xchg
bound
into
dec
cwtl
les
xchg
inc
les
insb
arpl
xchg
mov
push
addl
inc
cmp
test
stc
jmp
xchg
lret
loope
or
pop
jecxz
es
sub
ds
in
nop
or
xor
and
pop
ss
push
cmp
xor
adcb
inc
out
popf
fs
lock
out
mov
pop
mov
pop
loopnew
mov
mov
lcall
cmpsb
jne
mov
call
sarb
xor
outsb
sub
dec
test
sarl
sarb
and
sub
push
mov
notb
icebp
fimull
and
pusha
cmp
int3
scas
and
fisubrs
cmp
clc
scas
dec
adc
lods
hlt
mov
mov
add
cmpsb
lods
jmp
lods
xor
inc
cmp
mov
and
ret
and
add
mov
addr16
dec
jmp
addr16
jg
jno
testl
dec
jecxz
fxam
ljmp
inc
mov
std
mov
and
clc
sub
fwait
and
mov
mov
push
fcomp
in
push
fcoms
lock
push
fs
cltd
sub
testl
push
add
pushf
mov
and
xor
pop
call
add
stos
jmp
in
lods
jle
pusha
jmp
inc
ret
inc
mov
cmp
dec
jnp
pusha
mov
ss
push
jbe
cli
mul
sti
mov
mov
ljmp
mov
dec
push
pop
xchg
pusha
int
pop
add
xchg
xchg
dec
push
movsb
xor
insb
sub
pop
xchg
scas
push
std
xchg
xor
jo
mov
lret
arpl
mov
ret
jno
mov
cli
jns
mov
sbb
cs
mov
xchg
push
xlat
dec
mov
adc
jo
adc
mov
jo
adc
xchg
dec
sbb
cmp
push
das
ss
fsubrl
loope
call
adc
out
jg
repnz
pop
pop
pusha
pusha
out
imul
rol
push
fs
mov
xor
and
mov
decb
aad
xor
popa
aas
jge
xchg
sbb
pop
adc
dec
mov
rcl
lods
or
adc
push
xchg
jecxz
add
push
xchg
adc
jae
push
es
dec
sbb
dec
or
shll
sbb
ret
inc
jb
mov
lcall
mov
call
sti
rclb
jne
loopne
adc
adcb
push
sti
loop
dec
sarb
push
das
popf
sbb
inc
pop
adc
test
adc
or
subl
test
push
mov
jl
stos
xchg
dec
xor
xor
lds
mov
mov
adc
add
adc
xor
mov
dec
pop
popa
call
add
xchg
int3
fwait
add
icebp
addl
xchg
inc
int3
mov
cld
xor
mov
sti
push
mov
mov
ja
dec
cmp
sahf
cwtl
sub
faddl
and
sub
arpl
call
dec
lods
xor
xlat
jl
sbb
pop
xchg
aas
adc
or
xchg
or
icebp
cmp
jns
insb
cmp
add
adcl
fidivrs
inc
ret
xor
sub
lods
hlt
in
in
dec
push
xor
sbb
pop
push
and
lea
aam
add
or
xchg
mov
stc
xchg
add
mov
sti
ja
lahf
pop
repnz
mov
dec
loopne
mov
inc
into
push
lcall
mov
sahf
iret
jmp
enter
mov
dec
inc
popf
inc
rcll
sahf
inc
mov
xor
into
dec
in
mov
cmpsl
or
cld
lret
outsb
scas
bound
nop
call
or
sbb
mov
mov
shrl
pop
fildll
push
loope
mov
fsubrl
fidivrs
ret
and
test
cmp
loop
xchg
xor
testl
arpl
dec
test
xor
jmp
mov
sub
pop
fisubs
cltd
hlt
movsb
data16
mov
cmp
lods
cs
cmpsl
test
inc
cmp
push
int3
mov
out
shrl
push
jno
xchg
in
ret
imul
in
cmp
mov
sbb
aad
movsl
adc
xchg
jnp
jbe
stc
movsb
fxch
jl
nop
sub
xor
bound
pop
cmp
jl
insl
xor
out
call
sub
mov
push
in
add
push
decl
mov
add
sbb
imul
pmulhw
ja
dec
call
mov
dec
fcomps
mov
stc
pop
incb
push
out
push
lret
sub
roll
pop
mov
mov
das
cld
push
jp
and
jnp
jg
in
push
stos
jae
mov
test
inc
mov
xorb
jnp
loop
test
and
or
mov
or
shrl
push
cmp
mov
dec
jo
push
mov
ljmp
dec
mov
rol
sbb
sbb
xchg
mov
shrl
test
xor
popa
push
push
mov
xchg
pop
jnp
push
mov
xor
divb
iret
push
cmovl
xchg
xor
xor
adc
je
mov
pop
lods
cli
push
push
and
data16
arpl
xlat
push
testb
sub
rorl
push
mov
outsb
into
xchg
add
enter
stos
out
ja
test
adc
jl
sub
pop
inc
pop
push
fisubl
in
mov
and
or
in
add
xor
pop
push
lock
jo
and
and
pop
push
fwait
sbb
enter
sbb
gs
jecxz
jbe
js
addl
xchg
xchg
stos
mov
xchg
sahf
pop
jo
sub
lret
lret
in
lods
inc
sub
test
aaa
shrl
clc
inc
pand
jge
cmp
shl
adc
pop
lods
popf
sbbb
jl
mov
stos
fwait
mov
sbb
xchg
adcb
xchg
mov
imul
ds
hlt
std
mov
jle
jne
pop
pop
push
loop
loopne
dec
adc
cmpsl
dec
mov
ret
lock
enter
fwait
dec
sbb
sub
or
cmp
daa
xor
xlat
or
outsb
js
into
cwtl
and
pop
sub
pop
sbb
mov
clc
push
movsl
adc
xchg
push
push
loop
push
pushf
test
pop
mov
punpcklbw
sbb
sbb
adc
shlb
repnz
add
xchg
inc
in
hlt
les
andb
mov
shlb
repnz
add
xchg
inc
in
hlt
les
andb
mov
shlb
repnz
add
xchg
inc
in
hlt
les
mov
cmpsb
xor
add
adc
shlb
jb
std
movsb
in
push
mov
or
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
push
addl
mov
or
push
insb
jno
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
adc
mov
lods
add
add
add
add
add
add
add
pop
add
add
and
add
mov
dec
add
incl
faddl
je
roll
add
push
jl
sbb
add
add
add
or
xchg
pop
add
add
add
add
add
ljmp
add
add
add
inc
add
lock
lea
mov
sub
xor
insl
add
add
add
add
add
add
dec
add
daa
add
add
add
pop
add
and
faddl
adc
dec
add
add
add
add
add
in
add
push
add
add
add
insb
add
add
add
add
insl
add
add
add
adc
add
add
add
add
add
jge
pushf
add
cmp
mov
xor
popa
add
add
addl
ret
add
cmp
pop
add
add
insl
add
mov
pop
add
add
add
dec
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
jae
dec
add
add
add
add
add
add
add
dec
add
dec
add
add
add
insl
add
add
aad
faddl
dec
add
add
pop
add
add
add
add
add
adc
add
add
add
add
lret
add
add
insl
add
sbb
les
outsl
add
add
aaa
add
add
add
cltd
add
add
aad
int3
add
add
mov
pushf
add
add
add
add
add
pop
add
sub
add
cmp
in
add
add
push
add
addl
add
add
add
add
out
add
add
push
add
mov
pop
add
add
add
lock
add
add
add
add
add
or
out
add
add
push
add
add
add
add
insl
add
sub
repz
add
mov
jno
sub
insl
add
add
add
insl
add
sub
add
add
add
add
mov
inc
add
push
add
adc
movsb
add
add
add
add
add
add
add
in
add
add
dec
add
add
add
add
add
insl
add
add
add
jne
in
add
add
add
lock
add
add
dec
add
adc
add
add
aad
mov
adc
push
add
add
add
add
add
add
add
jno
xor
xor
add
add
insl
add
push
add
push
add
add
add
jl
mov
add
add
add
push
push
add
add
mov
add
pop
or
dec
stc
and
scas
insb
popa
aas
call
nop
xchg
shlb
push
and
cld
aaa
call
xchg
ret
sub
icebp
shlb
lods
sahf
sub
jns
popf
cmpsb
cmp
movsl
pop
loop
or
rolb
insb
cmpsb
push
movsl
jae
adc
jecxz
ja
xchg
out
sar
fs
pop
cmp
ret
xchg
sub
pop
addl
in
popf
inc
dec
xchg
das
inc
or
loope
fisubl
loope
out
mov
mov
jecxz
shll
test
dec
mov
inc
dec
xchg
lds
mov
insl
inc
add
stc
sbb
sbb
dec
incl
dec
mov
push
test
adc
sub
test
mov
fistps
or
inc
imul
incb
pusha
sbb
xchg
popf
hlt
cli
ret
hlt
insl
std
aam
lret
sarb
or
call
cs
fsubp
outsl
jae
lret
or
out
movsl
imull
scas
ret
cmp
pop
cmp
and
enter
sti
sti
test
dec
pushf
lret
in
inc
lea
js
iret
jl
jp
sbb
rolb
in
loopne
cs
std
or
out
popa
in
mov
loope
adc
sbb
add
add
mov
jne
ljmp
cmp
jo
popa
or
fdivs
fsubs
mov
loope
jl
test
dec
movsb
pop
arpl
push
add
and
sbb
adc
xchg
bound
lds
fdivs
call
fcoms
xlat
call
scas
fcomip
mov
ljmp
jns
sub
int3
xchg
subl
lahf
testb
fdivs
or
inc
fnsave
push
fldt
sub
adc
std
push
data16
push
mov
sub
lds
aad
aad
inc
inc
sub
mov
out
jge
ret
xor
mov
sti
cs
xor
cmp
data16
stos
popf
pop
dec
or
mov
aad
add
xchg
or
loope
dec
mov
jno
jno
sub
push
jp
xor
std
mov
lret
add
dec
mov
jne
pop
test
mov
adc
icebp
jmp
outsl
lods
sbb
xchg
shrb
test
jno
xor
adc
mov
pop
cwtl
sub
cld
add
dec
mov
mov
pop
stos
daa
cmc
hlt
and
push
mov
in
std
pop
pushf
add
rcll
inc
popa
pushf
stos
fcmovb
sti
insb
mov
lret
inc
push
insl
xchg
jno
mov
push
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xor
add
pop
hlt
add
xor
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
push
add
in
hlt
add
in
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
sbb
add
and
add
sub
add
inc
cmc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
cmc
add
add
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
push
testb
pop
testb
testb
insb
testb
je
add
jl
add
test
add
xchg
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
add
mov
testb
fdiv
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
adc
add
cmp
add
pusha
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
add
int3
clc
add
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
clc
clc
add
add
add
or
add
and
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cwtl
stc
add
mov
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
pop
cli
add
fs
add
ja
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
nop
cli
add
cwtl
cli
add
test
add
mov
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
