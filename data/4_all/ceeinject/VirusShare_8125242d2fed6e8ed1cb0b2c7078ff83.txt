call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
push
jns
dec
pop
xlat
sub
aaa
mov
mov
fsts
and
pop
or
pop
xlat
sub
sbb
test
fsts
or
pop
roll
xor
pop
andl
lea
push
mov
je
push
fnsave
jae
mov
xor
roll
push
scas
in
lret
add
mov
pop
test
test
mov
sub
mov
cmp
js
push
dec
mov
in
mov
scas
cmp
dec
daa
loopne
js
add
int3
mov
inc
fldcw
inc
shll
imull
cmp
call
mov
mov
imul
les
aad
mov
addb
leave
inc
jp
leave
cmpsl
pushf
cmpsl
in
dec
mov
lcall
cmpsl
pop
call
sub
fidivl
cmp
mov
lcall
mov
xlat
int
inc
mov
xchg
fistpll
sbb
and
cmp
add
jge
sbb
jmp
loop
xor
pusha
xlat
pop
loopne
cld
jle
mov
cmp
cld
out
dec
movsb
mov
stos
add
adc
aaa
loopne
fsubs
adc
mov
or
stc
ja
inc
fsts
daa
mov
pop
imul
pop
xlat
sub
sbb
leave
inc
fsts
daa
mov
pop
imul
cltd
cmp
rcl
addr16
or
xor
pop
mov
aas
jmp
or
cwtl
cld
lret
and
jb
sbb
aam
das
jo
pop
mov
push
jecxz
rol
ljmp
xor
mov
push
push
sub
mov
je
and
rorb
sti
jle
add
or
pop
or
and
test
out
fbld
and
add
inc
mov
stc
xor
fs
sbb
daa
daa
into
pop
push
sbb
pop
pop
ss
out
int
dec
mov
xchg
xor
iret
sub
je
test
xchg
imul
js
xor
adcl
or
mov
adcl
add
mov
std
add
aas
int3
adc
jmp
cld
cmp
add
aas
inc
xor
cld
lret
mov
inc
call
or
sub
clc
rorb
dec
jne
mov
inc
inc
mov
fiadds
loopne
dec
dec
out
int3
inc
popf
popf
mov
fbld
push
aaa
test
pop
xchg
enter
cli
mov
dec
inc
jl
inc
jge
sub
inc
jb
cmc
mov
push
movsb
icebp
and
fmulp
mov
out
mov
ja
outsl
mov
std
cmp
test
pop
mov
rcr
sub
cmp
movsl
sarl
je
jl
inc
imul
sbb
scas
sub
lret
mov
dec
adc
in
cmp
push
adc
xor
out
ficomps
in
out
pop
aas
stos
pop
or
aas
stc
mov
jae
xchg
call
or
es
lret
inc
lods
cli
jno
jo
lods
dec
sarl
mov
xorl
stos
icebp
int3
ljmp
pop
pop
dec
sbb
jmp
or
cli
jbe
pusha
int3
lcall
jne
fwait
push
lret
fwait
mov
outsl
loopne
ret
lret
jg
lahf
lock
push
fistl
sbb
cmp
cmpsb
pop
push
fists
data16
ljmp
iret
movsl
xor
out
out
dec
mov
mov
hlt
push
out
inc
cmp
fisubl
stc
sub
cmp
in
fldl
lret
scas
stos
pushf
xchg
out
mov
push
pop
and
popa
inc
mov
fistpll
ja
or
ds
mov
mov
mov
cld
jmp
in
loop
mov
fidivs
and
fs
cmpsb
add
in
pop
loope
sbb
inc
lcall
test
popf
into
sahf
call
nop
xchg
fdivp
aad
into
jne
fnstenv
adc
mov
adcl
mov
clc
call
scas
pop
mov
outsl
pop
fwait
xchg
sub
popf
lods
pop
mov
movsl
inc
js
in
add
mov
hlt
mov
jle
mov
out
push
loopne
push
sahf
push
push
leave
insl
leave
mov
cmpsl
bound
filds
pop
sub
mov
cmp
imul
cmp
jne
push
sub
inc
mov
inc
gs
jno
hlt
sub
jp
pop
adc
bound
popa
and
clc
push
addb
test
xchg
add
cmp
xlat
xchg
xchg
rorb
ss
stos
xor
jno
mov
pushf
push
je
dec
push
mov
dec
cmpsb
ja
ret
std
sbb
pop
data16
sub
dec
cwtl
add
cmp
ss
bound
sub
loope
enter
stc
lods
jp
pushf
pop
mov
dec
cmp
mov
movsb
push
dec
sub
mov
xlat
jnp
ret
mov
sbb
sbb
into
scas
xchg
mov
or
out
xchg
add
hlt
add
iret
sbbl
dec
addb
cmpsb
sahf
lods
and
push
lret
adc
inc
fisttpl
les
or
push
push
outsl
out
xor
mov
adc
inc
pop
loop
dec
shl
adc
cmp
sub
out
popf
icebp
rorb
fbld
push
xchg
lea
movsb
popa
int3
pop
mov
movsb
mov
pop
add
xor
aad
pop
sub
push
test
stos
aam
jae
sub
outsl
xchg
cmp
sbb
inc
adc
test
data16
lcall
mov
jmp
adc
pop
pushf
daa
icebp
dec
xor
add
sbb
repnz
lahf
xchg
fistps
cmp
jmp
dec
cwtl
std
cld
iret
jle
inc
inc
mov
fadd
js
mov
mov
in
pop
sub
jmp
mov
idivb
dec
mov
push
jbe
push
cld
fucompp
adc
jb
and
mov
fdivs
inc
daa
test
xchg
pop
push
enter
mov
sbb
xchg
sub
xor
adc
jb
ja
outsl
inc
xor
je
push
sbb
bnd
icebp
outsl
xchg
cmp
xor
test
sarb
pop
sar
hlt
sub
push
popl
in
fiaddl
jmp
js
cltd
or
cmp
fcoms
and
mov
xor
and
push
inc
mov
sarb
arpl
ret
inc
pop
add
pop
test
nop
mov
sub
mov
incb
and
jae
and
mov
xchg
outsl
lea
pop
arpl
pop
ret
icebp
lods
jle
fld
fdivrs
pusha
lcall
or
dec
bound
add
imul
mov
pop
sub
ficompl
xor
or
jp
stos
pop
pop
push
xchg
xchg
rolb
jle
mov
loop
sub
xor
fldenv
ret
mov
and
jb
pop
pop
lret
fs
mov
sub
mov
add
mov
pop
adc
push
sahf
pop
ja
sub
cmp
inc
sarl
xchg
sbb
xor
push
xchg
jp
jmp
popf
bound
pop
sbb
push
sub
or
push
mov
push
jns
pop
movl
jp
xlat
in
cmc
fwait
push
mov
enter
rclb
loopne
sbb
add
pop
mov
test
jns
and
lret
insb
hlt
push
shll
ret
cltd
push
add
test
cmp
jb
xor
push
add
decl
or
dec
or
xchg
fmull
mov
aam
call
push
sbb
push
jae
dec
jge
xor
lods
and
mov
test
adc
test
xchg
jle
cmp
je
inc
mov
xlat
rcll
cmp
cmp
popf
lock
bnd
jge
daa
xchg
vpackuswb
lods
icebp
adc
stos
mov
mov
inc
mov
clc
cmpsb
nop
fildl
rcrl
in
cs
sub
fcoml
mov
cli
inc
jnp
and
pop
or
sub
xchg
mov
jb
data16
rcr
cmc
sub
aam
repz
fwait
mov
jmp
push
dec
cmc
imul
lds
shl
test
cld
lea
jecxz
stos
pop
addr16
xchg
add
scas
sub
loop
jb
xchg
out
add
into
jne
shr
cmp
int3
scas
jbe
cli
pop
xchg
xor
inc
out
adc
lret
adc
adcb
push
sgdtl
xor
outsl
lods
cmc
les
and
dec
sub
pop
jns,pn
pop
fwait
mov
popa
dec
xchg
shll
cmc
and
shlb
push
test
int
mulb
outsl
jnp
add
cmp
cwtl
into
adc
lods
nop
jle
dec
mov
push
lret
scas
es
inc
inc
xor
and
mov
out
scas
orl
adc
pop
xchg
pop
push
mov
xchg
bswap
pop
inc
sub
push
fcoms
out
pushf
jl
mov
xchg
cmp
and
iret
mov
fucom
xlat
ret
int3
arpl
or
mov
ficoml
xor
loopne
ljmp
loop
pop
pop
aaa
sbb
andb
xchg
pusha
pusha
aaa
sahf
repz
jbe
adc
inc
mov
jl
dec
mov
scas
cmc
out
sub
push
mov
fwait
stos
hlt
xchg
aam
inc
push
adc
lahf
shl
adc
mov
or
stos
cli
pop
test
mov
icebp
lea
call
xchg
or
stc
xchg
or
xor
out
sarb
popf
mov
sub
data16
xorb
sub
lret
paddsb
fwait
dec
xchg
lret
mov
ds
aad
out
orl
vpunpckhbw
loopne
cld
mov
push
jecxz
adc
scas
popf
lods
xorb
xchg
in
jmp
cltd
mov
inc
js
test
cmp
mov
xlat
mov
add
mov
sarb
cmpl
xchg
aaa
movsl
pop
hlt
sub
cmpsl
pop
fmul
and
xor
int3
leave
and
mov
fwait
ja
rolb
jno
add
in
enter
rol
jle
std
xchg
xchg
cwtl
jmp
xor
adc
push
adc
push
mov
fistpl
fildl
hlt
add
adc
adc
aam
imul
or
mov
push
stos
sbb
inc
or
ja
pusha
adc
std
stc
out
dec
test
inc
xorb
ja
add
cmp
inc
scas
sahf
mov
fstl
xchg
xor
mov
and
lods
push
xor
fldenv
xlat
orl
int3
rcrl
sbb
jns
xchg
mov
dec
rcr
sub
cltd
xchg
stc
loope
mov
imul
cmpsl
outsb
bswap
pop
ljmp
jg
mov
pop
pop
xor
jno
std
arpl
cwtl
xor
lahf
inc
stos
rcrl
pop
hlt
pop
pop
cmp
push
add
pop
push
xlat
sub
jns
push
mov
movsb
movsl
mov
pop
dec
push
mov
cmp
pop
dec
pop
out
fildll
inc
stos
jnp
mov
imul
jnp
aas
int
mov
xchg
jg
bound
repnz
data16
div
mov
daa
aam
cs
dec
out
sub
xchg
les
push
clc
mov
out
sbb
pop
xor
repnz
fdivs
cltd
push
push
out
addr16
repz
fisttpl
vldmxcsr
mov
add
inc
mull
jo
pmaddwd
insb
int3
sar
push
shrb
mov
addr16
and
movb
or
dec
lock
dec
cmp
xacquire
mov
jae
sub
stos
and
adc
pop
test
in
jae
icebp
rcll
rcr
xchg
pop
xchg
pop
or
subl
pop
addr16
lret
jno
adc
pop
pop
lret
sbb
bnd
test
dec
or
xor
jbe,pn
cmp
adc
cmpsb
mov
cltd
and
xchg
sbb
mov
jae
negb
push
sbb
imul
inc
and
sub
scas
adc
andb
aad
sarb
fcmovne
cmp
mulps
adc
lods
jg
and
sbb
cmp
mov
xchg
imul
dec
mov
jns
cmpsl
jle
rolb
inc
outsl
les
rolb
sbb
cmpsl
in
push
rcrl
cmp
out
and
mov
pop
mov
incl
cmpsb
movb
sub
aad
movsb
xchg
fstpl
das
push
dec
sub
cld
fistpll
loop
xchg
sarl
mov
adc
fidivrl
loopne
lock
test
rcrl
dec
push
xchg
sbb
leave
and
xchg
lea
lcall
adc
nop
cmp
mov
and
mov
imul
mov
or
in
scas
pop
push
pop
shll
mov
in
lds
push
fnsave
icebp
push
lds
lods
inc
outsb
mov
adc
xlat
jp
or
test
out
test
not
cwtl
test
dec
sarl
xchg
sub
inc
or
stos
adcb
push
and
cmp
mov
repz
or
pop
mov
ret
arpl
pop
xor
bound
out
and
add
pushf
jmp
sti
inc
icebp
jecxz
and
in
mov
scas
adc
pushf
hlt
push
loope
cltd
cmp
arpl
lods
fiadds
icebp
jb
add
adc
push
andnps
enter
leave
adcl
inc
ret
add
mov
in
cs
lret
movlhps
cld
loopne
daa
jno
push
jl
mov
repz
mov
daa
in
push
inc
jo
sbb
or
ja
sub
xchg
std
test
out
test
xchg
xchg
jbe
jl
and
out
push
or
movsl
data16
call
mov
fwait
cmp
fstpt
ret
push
leave
xor
or
inc
test
mov
adc
lret
inc
mov
fnsave
dec
jp
adc
jecxz
mov
pop
movsl
out
aaa
mov
imul
push
jb
mov
sub
outsl
scas
rcrl
in
xchg
leave
jle
dec
xchg
sub
and
pop
pop
xchg
pop
push
addb
dec
inc
pop
jb
and
dec
mov
dec
loop
mov
test
filds
xchg
xlat
imul
inc
adc
dec
dec
adc
pop
push
pop
pop
mov
and
testb
stc
lods
jae
repz
fdivl
pop
push
cmp
in
inc
sub
mov
jne
pushf
or
adc
sbb
mov
inc
mov
aas
adc
fidivs
mov
ficoml
das
call
out
aad
pop
xor
ret
sbb
outsb
aam
rolb
pop
pop
lcall
addr16
mov
pop
push
or
sbb
xchg
sub
dec
inc
testb
ret
mov
xchg
pop
xor
inc
fmull
xchg
adc
notl
stc
test
and
or
loopne
lock
pop
push
out
adc
repz
lods
mov
push
pushf
mov
call
pop
ss
inc
pop
adc
add
and
pop
sbb
insb
xchg
lahf
xchg
xor
jo
rolb
aad
jmp
pop
cmc
icebp
mov
mov
faddl
pushf
or
fdivrl
push
mov
xchg
pop
dec
lock
push
add
push
std
sti
mov
sub
jns
movl
popf
repnz
inc
jecxz
insb
jbe
addr16
jecxz
mov
test
loopne
stos
roll
fnstenv
xor
daa
jecxz
add
cltd
mov
jnp
or
out
pusha
rcrl
jns
xor
mov
sahf
addr16
out
scas
inc
loope
fisubrl
je
jns
jp
sahf
inc
xchg
and
adc
mov
pop
arpl
das
pop
mov
leave
xor
ror
adc
das
mov
sbb
rcl
inc
jecxz
mov
sti
xchg
sub
aas
dec
int3
stos
jg
mov
add
movl
jmp
pop
fstp
lds
out
insb
mov
data16
imul
mov
jb
popf
cmp
data16
pop
fdivrl
repz
dec
xchg
lds
pop
xor
sbb
dec
in
push
mov
jmp
cmc
push
lods
outsl
add
sbb
mov
mov
ljmp
cwtl
daa
fnstenv
in
jnp
or
test
push
idivl
subb
enter
add
ret
inc
sub
incl
jae
mov
or
loopne
leave
aad
ljmp
xchg
sub
divb
insb
fs
lcall
adc
lcall
cmc
add
mov
dec
xor
pop
push
adc
mov
outsl
jno
mov
adc
das
adc
out
rcll
xchg
pusha
ret
xchg
jl
xor
adc
cmp
aaa
mov
aam
int3
add
cmc
pop
pop
xchg
adcb
mov
dec
or
pusha
clc
test
stos
lret
sub
clc
xor
jl
jns
mov
jae
push
jbe
test
jae
aas
or
shrb
ss
outsb
les
icebp
scas
lret
or
push
cmp
dec
in
adc
xlat
mov
dec
adc
loope
inc
adc
fists
mov
mov
xchg
andb
push
jmp
push
add
jge
int
fsubs
pop
mov
mov
dec
leave
add
aam
push
jmp
ret
push
sbb
repz
shrb
into
insl
popa
iret
or
adc
push
and
jo
push
lods
movsl
rolb
push
inc
jecxz
mov
dec
stos
jnp
push
fmull
xchg
or
or
cli
mull
out
or
xchg
sbb
outsl
inc
lahf
adc
lcall
mov
inc
pop
fdivrs
les
popa
mov
cmp
pop
adc
pop
inc
pop
lock
adc
adcb
addr16
scas
mov
lods
rcll
insb
aas
push
mov
je
xlat
movsb
mov
and
fdiv
pop
cld
popf
insl
adc
dec
sbb
lods
jp
cmpsl
divb
lcall
sbb
mov
jnp
add
xchg
pusha
paddb
mov
in
mov
in
push
jns
jbe
push
push
adc
sub
cli
add
addl
cs
jmp
dec
mov
loope
jecxz
das
push
js
mov
adc
and
lds
inc
adc
jl
cltd
jo
outsb
or
and
ja
xchg
out
data16
xchg
inc
je
mov
pusha
sub
leave
jns
stos
call
xor
int3
out
cmp
push
pop
mov
pop
inc
out
sbb
push
pusha
xchg
mov
shll
adc
jbe
sbb
inc
adc
or
mov
insl
cmp
pop
mov
movsl
push
cmpsl
mov
test
push
and
imul
mov
test
dec
stos
xchg
mov
movsl
xor
idivl
ret
ljmp
movsl
out
jl
pop
pop
rcll
lret
stos
mov
stos
ret
sbb
popf
and
mov
mov
insb
loop
mov
and
adc
inc
add
pop
pop
jnp
outsb
in
mov
jg
imull
in
mov
xchg
in
movsb
cmp
push
scas
scas
pop
insl
xchg
jl
movsb
in
fs
and
int
cmp
pop
mov
test
dec
mov
mov
jl
jmp
add
adc
scas
fcompl
mov
dec
orl
fs
cmc
fs
mov
aas
pop
cmp
loop
out
arpl
xor
mov
enter
lret
add
sub
sub
xor
loopne
repz
inc
insl
mov
pop
sbb
fnstenv
pusha
sbb
subl
push
in
fists
mov
jge
inc
imulb
xor
enter
jae
inc
cmp
push
add
pop
sbb
repz
lea
scas
and
arpl
xchg
sub
dec
in
add
lds
add
sti
fwait
sbb
into
xchg
cmp
cltd
adc
adc
mov
pop
mov
sbb
test
xchg
sub
adc
movsb
fwait
pop
pop
inc
mov
pop
fistpll
xor
bndstx
inc
mov
fistpl
inc
ds
add
icebp
inc
sub
dec
pop
movsl
fisubrs
les
fwait
mov
int3
and
sbb
mov
bound
daa
push
jns
mov
xchg
push
add
std
or
iret
into
sbb
mov
add
mov
dec
call
sub
repz
pop
mov
dec
mov
cmp
je
push
fildll
and
xchg
insl
jl
inc
mov
fbld
cmp
int3
adc
cmpsb
jne
insb
xlat
test
cmp
fisubrs
cli
xor
and
adc
dec
arpl
mov
neg
bound
enter
inc
push
push
sub
clc
dec
jo
lahf
pmullw
dec
jae
fbstp
or
adc
inc
pop
inc
in
mov
dec
push
mov
mov
fidivrs
push
xor
scas
je
xchg
add
xor
jg
iret
inc
pop
and
mov
mov
xchg
xchg
sahf
push
int3
cmp
aam
cltd
mov
cs
pop
push
iret
cmc
xlat
pop
iret
sub
jne
mov
cmpsb
paddq
sbb
adc
in
and
mov
icebp
movsl
insb
or
pop
mov
mov
sbb
and
push
dec
mov
push
out
mov
dec
mov
repnz
mov
push
fisubs
out
jo
cmp
and
loop
push
leave
cmp
sbb
xlat
mov
mov
fsub
xchg
push
lock
js
mov
push
mov
pushf
clc
push
push
sti
dec
pop
test
aaa
xorl
fsubp
shll
mov
stos
sub
pop
dec
int
testl
cmpsl
cmp
jmp
inc
fsts
daa
mov
pop
imul
pop
xlat
sub
sbb
leave
inc
fsts
daa
mov
pop
imul
pop
sarl
sbb
jmp
inc
fstps
and
repz
and
xchg
sub
cltd
push
jmp
inc
fldenv
ficomps
dec
jbe
outsw
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
setbe
xchg
mov
cmpsb
inc
mov
sbb
push
lahf
push
scas
ss
ret
out
jbe
data16
xchg
mov
cmpsb
dec
pop
outsl
idivb
push
lahf
data16
mov
inc
out
xor
data16
xchg
mov
cmpsb
dec
pop
outsl
idivb
mov
xchg
cmpsl
adc
inc
xchg
pop
fstps
testl
sub
loop
mov
addr16
mov
bound
movsb
test
mov
pop
gs
fstpt
lock
and
cmp
out
add
test
mov
adc
pop
adc
cmc
stc
push
not
fldt
push
xchg
sbbl
pop
jp
cmpsb
dec
xlat
dec
xchg
jns
sbb
leave
cltd
jbe
cmp
mov
lock
jns
xor
pop
hlt
xlat
push
shrl
jle
lahf
ljmp
inc
inc
fnstsw
lock
jns
rcr
pop
mov
sahf
dec
nop
xor
fbld
push
push
es
daa
repz
fiadds
push
xchg
pop
xchg
mov
cmpsb
dec
pop
outsl
idivb
push
lahf
push
scas
ss
inc
out
jbe
cmovns
jbe
dec
fistps
and
ds
jae
jb
pop
shll
aaa
mov
stos
je
daa
or
insl
test
pop
aam
sahf
xor
ljmp
dec
stos
xor
pushl
data16
inc
fidivrs
ret
dec
pop
outsl
idivb
push
lahf
push
scas
ss
inc
out
jbe
data16
xchg
mov
cmpsb
dec
pop
outsl
idivb
push
lahf
push
scas
ss
inc
out
jbe
data16
loope
sbb
jp
mov
out
call
jecxz
movsl
outsb
inc
add
inc
push
clc
dec
pop
jae
arpl
outsl
pop
mov
xor
pop
pop
lock
jns
sub
mov
in
jo
or
pop
push
insl
packuswb
pusha
test
fsubl
popa
or
das
jge
xor
fnsave
arpl
jb
dec
and
pop
notb
or
call
es
fmulp
jb
das
sub
test
xchg
push
fdivrp
es
popa
popf
mov
lea
movsb
jle
imul
hlt
inc
cld
xorb
jge
lahf
cli
dec
test
sbbl
dec
jbe
fldenv
rorl
xchg
subb
inc
test
dec
adc
adc
ret
push
cmp
cmp
insl
jecxz
das
add
mov
push
movsl
cmp
int3
cmpsb
aaa
fnsave
push
adc
insl
push
push
cmpsl
clc
add
call
pop
lcall
jns
fiadds
cld
repz
out
iret
sub
cld
lcall
mov
or
mov
lods
xchg
or
jae
insl
sbb
je
mov
es
jp
pop
bnd
enter
flds
mov
jp
inc
mov
daa
or
add
scas
imul
es
lret
push
sbb
data16
jle
jno
push
outsb
push
jp
mull
push
lahf
or
aas
lret
mov
mov
xor
in
push
jp
aaa
in
mov
jg
cmpsl
or
cmc
lods
ret
sbb
arpl
xchg
mov
in
mov
in
lret
fildll
sub
mov
clc
dec
jbe
push
push
testl
enter
adc
aas
cmpsb
push
mov
insl
enter
mov
std
loop
and
or
mov
lock
mov
fisubrl
rcl
xchg
sub
fs
cltd
test
jle
push
or
and
lcall
mov
scas
stos
or
add
je
test
out
stc
cs
mov
add
rol
lea
icebp
in
mov
mov
sbb
xor
xor
add
mov
out
mov
cltd
push
imul
sub
dec
rcr
or
daa
push
sbb
and
scas
fists
push
imul
in
scas
leave
mov
inc
xlat
lcall
sub
lds
sbb
roll
mov
mov
cmp
sbb
inc
scas
sbb
cmp
cmp
imul
test
pop
sti
rcrl
cmp
add
push
mov
scas
xchg
lcall
pushl
xchg
loope
mov
repz
fdivs
cmc
subl
cmp
sbb
and
imul
jnp
jle
or
dec
mov
sbb
mov
data16
xlat
mov
or
mov
push
mov
push
ds
push
dec
sub
subb
inc
or
and
arpl
jae
add
cmp
adc
rcll
pop
cld
mov
mov
add
les
lods
je
test
mov
push
lahf
or
scas
mov
mov
testl
paddd
jecxz
mov
pop
shll
and
scas
dec
dec
fs
iret
and
dec
or
pop
cs
jne
inc
scas
xor
cld
push
push
mov
and
pop
cmc
clc
aas
ljmp
and
out
loop
lcall
into
add
rorb
inc
lret
cs
mov
push
jae
mov
and
dec
push
out
js
std
cmp
nop
popf
cmp
sub
xor
xchg
sbb
iret
xlat
dec
fdivrl
xor
outsl
lods
and
arpl
sbb
pop
sub
test
test
xorb
mov
xchg
mov
pop
push
ljmp
xor
mov
stos
sub
cmpsb
pop
outsb
jp
push
into
ret
fwait
repz
xor
jno
cmp
adc
push
jg
mov
mov
test
cmp
add
add
dec
mov
aam
lods
pop
push
dec
sbbl
sub
lret
sarb
add
dec
idiv
sbb
inc
and
add
outsb
xor
xor
loope
aad
push
sbbb
add
mov
cmovne
cmp
and
call
ja
mov
mov
inc
loope
inc
sub
arpl
xchg
icebp
cmp
adc
cmc
push
stos
sbb
pusha
mov
mov
adc
sbb
ja
fsubs
inc
cmpsl
les
aas
in
frstor
cmc
mov
dec
lock
push
popf
imul
dec
mov
sbb
pop
rcr
fnsave
mov
aas
push
xor
outsb
fdivrs
cld
aas
pop
loop
ret
je
sub
adc
int
cltd
dec
sti
movsl
sbb
dec
int3
cld
mov
push
jmp
iret
int
xchg
mov
ja
fwait
clc
lahf
mov
lods
adc
sahf
pop
jg
sbb
bound
fistps
push
inc
mov
arpl
in
aas
movsb
xor
out
stos
cltd
flds
shl
push
addb
cmp
jnp
inc
adc
xchg
loop
rolb
inc
je
lret
and
fbstp
sbb
adc
leave
xchg
insl
int
rcrb
pop
xor
mov
push
xchg
imul
test
scas
clc
pop
dec
mov
jb
sbb
mov
ss
aas
dec
add
xchg
mov
les
xor
mov
and
add
xor
xchg
mov
pop
filds
in
addr16
int3
push
pop
js
dec
aas
pop
cs
mov
out
adc
and
fcoms
and
es
mov
mov
cmp
shld
dec
jbe
loopne
mov
loope
mov
add
add
dec
test
scas
bound
dec
fcmovnbe
jge
je
push
push
insl
imul
adc
push
sahf
push
test
pop
push
adc
in
call
xor
cmp
cmp
arpl
cwtl
fisubrs
nop
shll
loop
sbb
imul
cmpl
gs
mov
out
popa
push
push
adc
add
je
pop
push
jbe
or
push
jle
fs
inc
daa
stc
push
fwait
lcall
aaa
rclb
xchg
aaa
pop
mov
xor
out
aam
pop
adc
ljmp
movsl
rep
push
inc
mov
xchg
mov
add
xchg
jns
mov
cltd
adc
das
jmp
iret
enter
sub
xchg
sbb
mov
inc
adc
cli
push
clc
xchg
test
jle
xor
movups
push
loopne
xchg
jno
xor
and
repz
je
stos
mov
and
pop
fmull
or
push
aaa
sub
push
pushf
cld
lret
and
addb
sub
xchg
pop
lods
cs
dec
cld
loop
sbb
dec
mov
pop
fsubs
mov
aad
clc
mov
cmc
dec
or
pop
inc
push
repz
enter
add
dec
ret
shrb
dec
repz
cmp
enter
xchg
vmovd
xchg
xchg
adc
out
mov
outsl
sub
lock
inc
aam
jae
push
mull
jmp
or
sub
std
pop
cltd
cltd
test
into
lahf
test
data16
sbb
dec
ds
add
cmp
sti
mov
int
jmp
rcr
push
cli
inc
inc
inc
fs
push
aam
and
jp
das
inc
ja
add
stos
fcmovnb
in
in
xor
adc
and
mov
or
in
push
sbb
jp
xor
stos
jbe
cmp
sub
mov
xchg
in
repnz
sub
cld
out
sub
pop
test
mov
xchg
je
daa
leave
aaa
stc
aad
dec
les
hlt
ficomps
les
ja
xchg
mov
test
loope
inc
in
mov
xchg
aad
jecxz
and
xchg
movsb
lods
pop
call
mov
jg
jmp
pusha
xchg
push
push
outsb
aam
fcmovu
jns
sbb
jmp
dec
in
push
pop
insl
jp
mov
inc
shll
inc
cmp
xor
popa
outsl
fcoms
loope
jge
mov
jnp
repnz
xchg
movb
fisttpl
cmp
mov
cmp
sub
insb
ret
inc
xchg
push
add
arpl
inc
inc
jg
outsb
sbb
fs
das
xchg
fstpt
dec
dec
and
test
neg
insl
lds
scas
lret
call
jns
dec
gs
cmp
mov
jae
cmp
mov
pop
or
pop
jns
or
insb
sti
cltd
movhps
divl
mov
push
das
mov
adc
dec
push
mov
das
adc
iret
mov
mov
lock
and
or
mov
inc
es
add
pop
dec
lock
sbb
adc
stc
sbb
jbe
or
and
jae
lret
push
cli
inc
push
out
sbb
jo
js
mov
xchg
shrb
jbe
dec
pxor
push
sbb
cmp
pop
enter
cli
aam
xor
mov
xor
mov
sbb
mov
shrb
sub
ret
shll
mov
cmp
xchg
lock
in
dec
jle
mov
cmp
inc
xor
sbb
jle
mov
repz
push
mov
aas
mov
andl
fistpll
or
test
mov
mov
insl
sub
stos
add
jbe
cmpsb
clc
popf
ficoml
addl
jae
xor
outsb
xchg
or
into
mov
je
push
es
loop
add
mov
or
pusha
rol
inc
test
rclb
clc
bound
enter
std
jb
pop
dec
inc
out
das
mov
cwtl
add
in
fdivr
movsl
mov
fsubs
jmp
adc
bound
fld
and
test
and
leave
paddsw
mov
cmp
ja
cmp
ret
scas
inc
mov
jge
insb
out
push
and
iret
dec
jo
loop
inc
fldcw
xor
data16
aad
inc
adc
jg
or
mov
aad
or
das
lock
xchg
push
fwait
dec
sub
bnd
rcr
mov
lret
jecxz
stc
ja
cmp
xor
dec
jae
cltd
mov
jmp
fdivrs
adc
js
add
outsl
stos
fucomp
insl
sbbb
push
loop
sbb
out
daa
xchg
mov
mov
ficompl
cmp
and
dec
or
jbe
pop
push
xor
cmp
or
dec
pusha
pop
jge
mov
bound
and
cmp
stos
xor
ds
cld
iret
push
inc
pop
fwait
mov
data16
fldl
stos
sbb
mov
aam
cmp
and
ds
loope
cmp
sbbl
rolb
sbb
mov
push
jg
mov
fistpll
sbb
int
cmp
cmp
xor
lret
dec
js
xchg
add
inc
jae
in
testb
jno
add
sbb
dec
cmp
jns
jbe
out
out
into
popf
out
out
dec
add
out
inc
add
mov
mov
jmp
cli
fadds
hlt
cmpsl
or
jle
adc
rclb
insl
orb
add
out
call
sbb
int
mov
int
loop
dec
mov
scas
mov
add
insb
addr16
xor
sbb
repz
enter
or
out
xor
mov
mov
int
push
pop
or
insl
stos
xchg
jo
or
pop
jl
cwtl
pusha
mov
adc
xchg
in
jp
iret
sub
stos
ret
aam
xchg
push
outsl
xlat
jbe
fistpll
lock
jl
loop
xchg
or
add
inc
aad
mov
incl
fincstp
bound
dec
lret
movd
mov
nop
je
sbb
cmpsl
pop
nop
shrb
ja
sub
stc
cmp
xchg
cmp
ss
out
fsubs
jo
movsb
or
add
pop
dec
imul
push
fsubr
ljmp
dec
mov
inc
mov
cltd
pop
mov
loop
mov
mov
dec
dec
pop
mov
outsb
popf
popf
cmp
or
jge
cmp
jae
inc
adc
outsb
dec
jne
xchg
cmp
pop
fdivl
int
mov
adc
jbe
jns
in
xchg
clc
push
mov
cmc
lcall
push
sub
add
loop
mov
inc
xlat
push
inc
adc
scas
out
pusha
addb
imul
roll
fidivrl
adc
jecxz
cmpsb
mov
sahf
ficomps
orb
fcomp
mov
aas
pop
cli
sbb
fs
popf
cmp
mov
pusha
xor
out
decl
stc
pop
push
cmp
mov
sahf
fs
frstor
shlb
fucomip
bnd
test
jmp
or
hlt
and
stc
lret
add
pop
inc
sub
push
jle
cmpsb
jo
je
clc
aam
xor
mov
cwtl
mov
inc
shl
rol
insl
adc
push
nop
pop
in
bound
test
loopne
sub
mov
pusha
xchg
out
cmpsl
mov
mov
push
sarl
stc
shl
dec
lods
insl
fs
out
xor
aaa
adc
inc
and
aaa
mov
dec
in
pop
jp
jp
inc
das
add
iret
sbb
je
xchg
js
inc
in
mov
test
fwait
and
push
add
push
into
rol
insl
push
jge
mov
dec
and
sbb
aad
in
or
jnp
xor
movb
jmp
sbb
xchg
outsb
mov
sbb
push
loopne
inc
xor
mov
fstl
xor
js
js
adc
sbb
addr16
fildll
or
mov
add
xchg
loop
ja
mov
inc
xchg
rorl
mov
in
add
push
mov
movsl
emms
inc
jge
pop
movsl
mov
lods
add
push
stos
insl
dec
jle
ja
jmp
pop
mov
inc
aam
sbb
mov
fldenv
push
mov
pop
jne
jmp
addb
cli
clc
jnp
adc
cwtl
and
dec
pop
inc
rcll
shl
lds
xchg
hlt
push
sbb
push
mov
aaa
mov
ficoml
cmp
sub
push
jge
sub
mov
loopne
sti
cmpsl
repnz
rcr
insb
cmp
xchg
cmc
or
cmp
and
or
cmp
mov
icebp
mov
shrl
das
lcall
mov
ret
outsl
nop
repz
loope
lods
test
pop
pop
xor
into
rcrl
cs
sbb
cmp
xor
add
mov
fdivr
stos
cmc
popf
xorb
int
loopne
fnstsw
xchg
mov
or
inc
jg
mov
lahf
push
mov
xlat
xchg
cld
out
sub
mov
test
cs
ljmp
push
xor
std
mov
mov
out
call
rorl
aas
cmpsl
push
mov
push
xchg
or
inc
aaa
jnp
leave
aam
mov
neg
add
mov
subb
mov
jg
fstp
push
shl
lret
mov
add
adc
cli
ficoms
jg
adc
jl
das
fldenv
adc
scas
push
in
or
je
fs
in
gs
dec
xchg
xor
test
adc
inc
mov
xchg
loopne
nop
ja
leave
cmpsb
cltd
adc
ss
fdivl
jne
popa
addr16
sbb
xor
insb
sub
pop
hlt
sbbl
ret
sbb
xor
pop
subb
in
jb
mov
push
sarl
shll
fdivrs
hlt
fstp
cmp
in
fistpl
dec
and
out
scas
imul
jbe
clc
adc
js
outsl
out
xchg
xchg
mov
xor
andb
popf
sub
and
mov
inc
lea
popf
inc
fdivrl
filds
lret
out
aad
sbb
wbinvd
add
out
adc
pop
dec
fstpt
incb
mov
mov
mov
xchg
ja,pt
jae
xchg
sbb
sahf
insb
mov
pop
sub
xchg
dec
mov
lods
mov
jns
inc
jno
dec
lret
inc
ret
imull
fstl
add
inc
mov
mov
dec
into
insl
test
insb
repz
xchg
jb
pop
xor
push
rclb
xchg
add
pop
addl
add
rclb
and
in
xor
push
or
jecxz
sbb
push
aaa
add
xchg
or
shlb
rcll
jb
stos
push
inc
sub
push
int
cmpsl
and
mov
xchg
push
adc
movsb
mov
movsb
pop
jg
add
push
ret
pop
xchg
or
jae
fst
cmc
inc
es
aaa
jmp
je
out
push
mov
inc
mov
sub
outsb
adc
adc
scas
push
and
mov
sbb
push
out
hlt
xor
out
xchg
fld1
xor
inc
or
int3
dec
dec
sub
negb
cltd
test
scas
insb
jns
add
pop
xchg
adc
negb
xor
es
ds
sbb
inc
dec
and
test
idiv
mov
inc
mov
cmp
int
sahf
lock
loop,pn
inc
les
cmpsl
hlt
jmp
loope
xchg
adc
add
dec
out
or
sbb
fcmovu
ss
push
out
loopne
dec
imul
stos
sbb
xchg
test
jg
test
out
push
add
xor
jp
pop
or
mov
stos
in
xor
imul
pushf
test
out
lcall
and
ror
cld
sahf
adc
ss
inc
jl
in
repnz
hlt
test
adc
movsl
fsts
xor
push
xor
pop
lods
xor
iret
popf
dec
inc
jle
aam
das
imul
jge
rcrb
xchg
adc
push
dec
xchg
cmp
aaa
lahf
push
faddl
fstl
push
dec
movsl
cltd
and
aad
pop
les
dec
rorl
mov
mov
adc
arpl
or
jnp
fidivl
cmpsb
in
sub
jns
negb
xor
lcall
jge
fs
mov
inc
mov
pop
popf
mov
scas
adc
dec
orb
dec
in
decb
fisubrs
mov
imul
xchg
cmp
xor
negl
addr16
cmp
test
mov
das
sub
insl
mov
loope
push
mov
loope
cmp
std
popf
mov
jo
paddq
mov
mov
aam
dec
inc
lods
repz
pop
jnp
daa
popf
popa
push
aam
lds
fbld
xor
or
xchg
jae
jnp
or
xchg
aad
outsb
jl
add
xchg
dec
pop
icebp
out
xchg
xchg
bound
sahf
into
lret
push
or
jmp
cld
dec
push
jbe
xchg
inc
shr
outsb
or
scas
aaa
and
imul
bound
add
aam
mov
rol
mov
sti
jmp
push
mov
je
and
ljmp
sub
sub
rorb
lcall
mov
std
mov
and
out
xchg
cmp
cmp
xchg
das
pop
les
dec
out
cmc
aad
sti
cld
imul
adc
or
xchg
aad
sbb
and
mov
hlt
cmc
popa
mov
ja
mov
mov
and
xor
and
enter
mov
mov
sbb
sub
sbb
fstl
add
inc
pop
loop
out
outsl
cmc
push
pop
fnstcw
cltd
lods
fwait
insl
loop
scas
aam
fnsave
fldenv
push
test
popf
call
xor
shll
dec
jl
mov
neg
add
xorl
das
push
sbb
xchg
push
in
sahf
mov
loopne
in
xor
mov
sahf
and
fs
sub
fidivl
cs
mov
int3
fists
int
cmp
sahf
les
stos
pop
push
lock
aas
and
leave
aam
mov
in
adc
pop
xchg
loopne
adc
adc
mov
mov
push
bound
add
leave
ja
sbb
lods
cmp
push
xor
std
mul
pop
pop
xchg
into
dec
pop
push
call
ret
xchg
out
pop
loopne
mov
mov
jl
mov
in
mov
dec
shlb
sbb
or
inc
dec
rcll
inc
xchg
stc
pusha
addr16
add
add
sbb
scas
and
outsl
mov
mov
cmpsb
dec
pop
outsl
idivb
push
lahf
push
scas
ss
inc
out
jbe
data16
xchg
mov
cmpsb
dec
pop
outsl
idivb
push
lahf
push
scas
ss
inc
out
jbe
data16
push
das
ss
cmpsb
dec
pop
inc
outsl
idivb
xchg
lahf
push
scas
ss
inc
out
jbe
data16
xchg
mov
cmpsb
dec
pop
outsl
idivb
push
lahf
lods
add
ficoms
adc
in
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
iret
jae
arpl
addr16
aad
mov
push
repz
ret
push
mov
jecxz
xchg
addl
movsl
inc
aad
lds
cmc
adc
add
repz
ret
push
mov
mov
mov
arpl
xor
and
adc
add
mov
or
push
testb
jae
pop
stc
aaa
lret
scas
cmp
adc
out
out
std
mov
ror
xchg
and
dec
xchg
jnp
and
lret
cmp
add
dec
cli
or
sub
jmp
xchg
call
mov
movsb
addr16
fwait
les
pop
xor
sbb
stos
mov
nop
fildll
inc
mov
push
lock
xor
shrb
sub
push
repz
out
jp
in
test
mov
in
cmc
push
sbb
das
and
out
xchg
popf
shll
test
push
fmul
xchg
or
repnz
ret
xchg
dec
push
push
xchg
xchg
push
jae
arpl
xor
and
adc
add
sbb
ret
dec
mov
mov
out
loopne
rclb
test
divl
jae
lahf
add
lods
cmp
and
adc
add
xchg
xor
adc
push
stos
or
pop
mov
jo
push
scas
xor
ss
add
and
aaa
lods
pop
lds
cmc
adc
add
shll
mov
xchg
jae
arpl
xor
and
adc
add
shll
mov
xchg
jae
jbe
mov
jmp
jge
ljmp
jmp
enter
rclb
out
mov
sbb
mov
scas
scas
notb
fsubl
cmp
mov
leave
add
adc
cli
dec
jno
mov
mov
pop
mov
mov
pusha
push
xchg
jno
loope
jecxz
and
in
test
std
mov
inc
push
add
mov
mov
out
popa
jbe
fs
push
icebp
cltd
out
push
pop
iret
push
out
add
scas
xlat
mov
sub
fists
xchg
push
ss
cmp
rcrb
adc
mov
out
and
sub
repz
xchg
inc
mov
sbb
mov
mov
ret
dec
call
pop
subb
jmp
sub
xor
and
fnstenv
push
or
sbb
and
xor
in
mov
adc
pop
sbb
lods
sbb
pop
loop
rorl
mov
xlat
jl
out
jecxz
sub
inc
xchg
pop
inc
insb
sbb
lods
pop
or
or
mov
mov
pop
cmc
jbe
stc
or
or
lcall
adc
ret
int3
sahf
jo
iret
addr16
cmpsb
cltd
push
cmp
mov
andl
or
out
mov
dec
fdivrs
mov
outsl
and
jmp
stos
jno
imulb
xchg
xor
cwtl
jbe
fadds
ljmp
fisubl
fstpt
cmpb
push
push
stos
dec
jge
dec
bts
jmp
lods
outsl
jg
pushf
loope
pop
shlb
mov
or
bound
cmp
cmp
sarb
daa
cmp
ss
clc
sbb
into
xor
outsl
loope
mov
push
add
loopne
mov
test
test
xchg
push
mov
mov
pop
call
pop
aad
adc
call
push
push
or
xchg
mov
outsb
jecxz
mov
mov
adc
test
pop
or
cmc
cld
into
std
mov
dec
int3
bound
ficoms
push
aad
push
dec
adc
enter
shrl
or
cmp
test
cwtl
jne
ljmp
out
aad
nop
insl
adc
std
push
jno
add
or
les
dec
adc
hlt
mov
sub
lds
cmp
call
orb
add
adc
fmul
loope
inc
out
test
xchg
inc
test
loope
fnstsw
xchg
imul
adc
cmp
sub
mov
inc
jmp
push
inc
ret
iret
lea
jle
or
mov
sub
mov
lahf
adc
das
sub
fcmovne
mov
fcoml
pop
pop
dec
rcrl
sahf
xor
adc
test
sbb
insl
movsl
repz
fwait
lret
xchg
adc
cwtl
xor
mov
xchg
sbb
jae
lods
xchg
iret
or
push
jne
sbb
push
pop
fisttpll
scas
cmp
sub
xor
outsl
xlat
lret
loopne
outsl
fidivs
cmpsl
pushf
mov
add
push
push
pop
lret
push
rcll
jne
jno
int3
mov
xchg
sub
push
in
fwait
inc
add
sbb
push
cmp
adc
aas
mulb
cmpsb
inc
gs
mov
lds
in
in
and
sbb
data16
pop
test
loop
pop
arpl
daa
and
rcl
jmp
and
ds
int3
pop
inc
push
mov
add
stos
push
loopne
cmp
es
xchg
pushf
pushf
dec
in
push
mov
push
cli
int3
int3
jge
out
daa
xor
jge
add
jl
mov
rclb
popa
mov
int3
pop
inc
loop
out
lods
cmc
push
mov
out
out
scas
and
push
xchg
mov
push
pop
nop
in
sbb
loop
sub
filds
mov
and
es
inc
lcall
push
mov
mov
loope
xchg
aas
ljmp
cmpsl
das
jg
jg
jns
or
mov
lock
sarb
aaa
call
cmp
scas
mov
fwait
xor
inc
out
repz
xor
les
push
cmpsb
cmp
popf
sbb
mov
out
push
jp
jecxz
xchg
repnz
bound
inc
pop
mov
cmp
jg
stos
and
push
rcrb
lcall
dec
out
jae
sbb
dec
pop
push
andl
js
cwtl
push
sar
push
mov
jle
js
ljmp
jl
test
add
ret
lods
xor
fwait
dec
jmp
add
mov
xchg
cwtl
es
fcomip
inc
add
sbbl
xchg
rorb
cltd
mov
dec
xor
les
imul
or
andl
fistl
popf
sarl
mov
ret
outsb
xor
xor
cs
aas
inc
jno
cwtl
xchg
adc
push
mov
push
aam
jo
mov
into
mov
popf
push
xchg
cmp
mov
inc
jnp
sahf
sub
aad
das
mov
mov
pop
int
jmp
xchg
inc
imul
xor
sbb
pop
jnp
lahf
sub
cmpb
stos
rcrl
inc
ljmp
in
jne
jo
dec
or
daa
lahf
sub
out
outsb
and
pushf
out
jge
test
sbb
sub
data16
push
dec
je
jbe
rclb
cmpsl
pop
lods
test
sarb
pop
scas
sbb
outsl
dec
sub
mov
stos
or
cmp
xor
pop
fcoms
cmp
xchg
sarb
inc
xlat
and
repnz
adc
popl
cmpsl
cs
outsb
and
pop
push
push
insl
pop
xor
sbb
lods
inc
jbe
imul
stos
movsb
mov
hlt
xchg
sbb
ret
pop
fnstcw
pop
stos
inc
movsl
loop
or
negl
inc
pop
sarb
loop
aam
mov
mov
add
lret
or
dec
inc
jno
out
dec
xor
jp
ds
add
rolb
mov
rorl
scas
mov
push
adc
dec
scas
cmpsb
inc
aam
ret
cmpsb
cmp
fistpl
arpl
mov
lods
js
cmc
into
fists
into
loopne
pop
xchg
ds
ret
mov
pop
lcall
lods
ret
xchg
shl
dec
scas
mov
adc
les
lahf
pop
aam
imul
pop
inc
adc
jnp
mov
repz
leave
movsb
jnp
xor
cmp
sbb
hlt
or
movl
aaa
add
mov
dec
insb
xchg
sahf
adc
inc
adc
add
sub
mov
iret
jbe,pt
and
ja
adc
or
das
movsl
push
inc
psubd
xor
or
mov
dec
aas
call
je
pop
or
mov
push
mov
into
xchg
push
sub
xlat
pushf
popl
add
or
or
es
pop
call
push
cmpsb
mov
adc
movsb
pop
bound
inc
and
test
dec
clc
orb
mov
ljmp
jno
cmpsl
into
push
mov
and
fsubrl
fiaddl
ss
out
xor
std
jnp
sub
mov
arpl
jecxz
gs
or
int3
jmp
mov
jge
mov
push
fidivs
daa
cmpsl
call
call
idiv
sub
sub
rcll
dec
push
push
cld
add
mov
aad
sub
or
lcall
push
cld
cmpsl
les
mov
stos
fildll
repnz
pop
adc
xlat
pop
pop
outsb
cmc
xchg
lret
imulb
jae
nop
or
inc
and
xlat
xchg
add
cmp
mov
mov
int3
test
push
int3
push
pop
mov
dec
aaa
in
jp
in
popa
sub
rcrb
inc
sti
fdivl
adc
rol
mov
push
lret
mov
out
lcall
sbb
xor
lods
popa
popa
push
mov
mov
cld
xchg
dec
dec
mov
adc
rcrb
sub
push
mulb
lods
pmulhuw
rcll
repnz
sbb
xchg
fstps
je
addr16
cmp
loopne
test
arpl
pop
loop
int
xchg
xchg
repz
sub
out
jbe
xor
fsts
pusha
fstpt
pop
sbb
lods
sub
pop
mov
push
xor
insb
pop
mov
or
test
jnp
ds
inc
cwtl
jbe
jnp
arpl
imul
sub
jnp
jo
mov
shlb
jg
pop
adc
ljmp
mov
leave
xchg
cmp
push
push
or
push
adcb
dec
aas
js
mov
fucomip
cld
push
sub
lds
fs
fistpll
in
add
push
pop
inc
pop
jmp
xor
sbb
push
rcl
lcall
push
stc
adc
push
insl
lret
aas
fsubrs
cmp
mov
ret
testb
push
idivb
cmp
xor
lock
pop
push
and
adc
repnz
xor
sar
jecxz
push
sub
je
rcr
dec
sbb
push
stos
jp
push
cmpsl
mov
lds
ffreep
jl
adc
cs
repnz
les
sbb
int3
cli
es
fucomi
sub
and
icebp
fwait
push
push
dec
jge
movsl
mov
aaa
scas
add
cmpsb
mov
push
test
rcrl
dec
ja
stos
loopne
xchg
push
mov
std
and
inc
sub
rcrb
out
fcmovnbe
movsl
inc
clc
jns
add
rorb
pop
mov
jp
test
ljmp
daa
gs
out
insl
mov
inc
lods
sbb
imul
pop
dec
sub
xlat
xchg
adc
cmp
mov
push
pop
dec
stc
mov
jnp
cs
pop
pop
je
stos
iret
rorb
scas
in
pop
stos
pop
stos
ja
arpl
jl
jb
mov
pop
fwait
insl
xchg
sbb
movsb
lcall
mov
adc
rorl
movsb
pop
sub
int3
mov
cs
ror
aam
pop
sbbb
movsl
push
pushf
mov
aad
xchg
aam
fdivs
sub
fs
aad
fwait
sbb
aam
sbb
and
pop
mov
ljmp
lret
pop
aad
fcompl
popa
inc
neg
lods
xchg
jle
jne
jge
std
frstor
adc
setbe
cmpsb
jbe
jg
aaa
sub
rclb
stc
mov
cmp
mov
movsl
mov
loop
out
loop
add
mov
inc
lds
xor
jne
lods
jecxz
dec
xchg
and
dec
mov
jge
add
imul
mov
sbb
add
insb
stos
shll
or
and
into
sub
test
dec
in
inc
add
das
fildll
push
jle
jns
cmc
and
loopne
inc
fmuls
fildll
fs
push
in
popf
pop
push
stc
in
test
into
test
mov
adc
test
repz
in
adc
or
fistl
mov
mov
jae
aas
loop
into
iret
jl
std
xchg
pop
mov
jle
fcomps
jg
jne
sub
mov
or
sbb
test
xor
dec
mov
cmp
jae
mov
scas
push
cmp
outsl
div
push
cmp
scas
outsb
sbb
adc
jp
lods
lret
jo
xchg
push
cmp
xchg
int
loope
pop
xchg
pop
movsb
jp
mov
fisubs
sbb
loop
mov
shll
cwtl
cwtl
mov
mov
mov
jb
mov
xchg
mov
push
push
push
sub
ja
cmp
jge
jno
loopne
jo
xlat
xchg
int
pop
outsb
mull
sub
shlb
jae
and
xchg
pop
or
pop
add
fdivrs
test
sub
pop
subl
icebp
jo
inc
pop
pusha
shl
pop
push
cwtl
mov
stc
mov
shll
out
fsubs
leave
ficoml
aam
ja
jae
or
push
call
inc
xor
dec
lahf
aaa
lret
dec
sub
outsl
and
imul
ds
or
adc
dec
cmpsb
sbb
sub
orl
loope
fbstp
in
into
lahf
jae
addr16
add
cltd
inc
inc
subl
aam
test
push
add
mov
xchg
fsts
add
inc
cmc
adc
sub
fildll
adc
or
enter
sahf
xchg
xor
pusha
imul
push
add
pop
jge
insl
arpl
jecxz
ret
mov
inc
inc
xor
andl
xor
mov
mov
cli
jmp
sbb
inc
pop
cmpsb
sbb
push
and
mov
mov
stos
stos
inc
cli
cmpsb
xchg
ljmp
out
and
in
xor
sbb
repnz
in
movl
cmp
rcll
pop
adc
or
fdivrl
cli
push
mull
adc
inc
inc
push
push
dec
fiadds
and
js
cmp
je
test
popf
iret
dec
test
and
push
fwait
dec
fs
loop
imul
mov
das
pushf
sub
rol
mov
cmp
push
int
mov
insb
push
xchg
fdivs
rcll
cmp
dec
mov
mov
fdivs
mov
jns
or
inc
mov
mov
mov
cmpb
mov
sub
mov
pop
out
mov
inc
sahf
cmp
push
js
aad
mov
in
fmulp
sbb
pusha
je
add
sbbb
data16
mov
shr
outsb
enter
pop
fcoms
jmp
je
inc
xlat
mov
xchg
or
lds
mov
lock
rorl
mov
shl
sub
cmp
mov
sbb
sub
mov
fcmovnbe
push
xor
flds
bswap
mov
pusha
addr16
lret
gs
repnz
push
sarb
dec
xchg
int
hlt
cmc
jg
sub
and
adc
call
adc
aam
das
push
push
faddp
jnp
xor
add
mov
cmp
seto
out
cmp
outsl
loope
jae
imul
in
sub
popf
mov
xor
sub
movsl
repz
mov
cmpsl
ud2
jp
inc
jp
test
out
movsb
mov
xchg
mov
xor
imul
pop
mov
filds
cli
lret
enter
inc
addb
ret
cmpsb
pop
mov
stc
xor
or
dec
xlat
loope
imull
push
je
in
and
mov
out
pop
outsl
mov
test
mov
imul
in
test
ljmp
scas
mov
sbb
mov
lahf
cmp
sub
in
rcl
cwtl
inc
lahf
pop
scas
mov
in
aam
nop
pop
dec
xor
fwait
push
mov
jle
inc
fcmovb
adcl
mov
scas
adc
mov
xor
push
mov
mov
pop
mov
stos
xchg
loope
cmc
xor
pop
pop
ja
das
test
adc
jle
into
aam
imul
or
in
push
rorl
adc
pop
cmp
andb
add
ficoml
mov
or
or
adc
addr16
mov
inc
in
pop
adc
xchg
sub
jecxz
fidivrs
mov
adc
pop
loopne
dec
add
repz
mov
jmp
jno
out
es
mov
mov
sub
inc
in
cmpsb
rolb
jecxz
bound
cmc
test
imul
shll
push
fiadds
mov
fiaddl
xchg
in
shll
arpl
mov
dec
imul
cmp
test
mov
jmp
movsb
pop
cmc
shr
sbbb
jl
inc
push
mov
das
adc
movsb
inc
or
sub
add
ret
pop
add
test
sub
cmp
call
inc
cwtl
ss
int3
xor
xchg
ficoml
cwtl
mov
es
mov
lcall
int
arpl
les
adc
and
jg
pop
icebp
mov
push
aaa
shl
iret
mov
out
cli
popa
ja
cld
mov
xchg
cmp
popf
mov
stos
jne
popf
add
jne
lret
dec
push
sbb
and
int3
inc
pop
sbb
or
andb
xorb
sbb
das
xchg
cmp
loopne
iret
jb
ds
xor
out
add
inc
movsl
shl
or
cwtl
mov
cmpb
mov
out
xor
loopne
ret
out
cltd
sub
addr16
les
fisttpll
cld
and
js
mov
xchg
lock
dec
push
rcrl
cmp
or
dec
rol
call
aam
pop
and
jg
pushf
mov
inc
lcall
popa
adc
xor
popf
jno
sub
push
decl
data16
inc
sub
sbb
cli
movsl
fstl
mov
popf
insb
xor
inc
mov
testl
inc
inc
inc
mov
cmp
xchg
mov
lcall
jl
xchg
mov
das
push
hlt
insl
xorb
xchg
test
push
out
in
out
and
sbb
adc
aaa
out
push
mov
aas
popf
or
pop
xor
leave
repz
in
faddl
arpl
inc
hlt
fwait
in
or
push
lret
dec
outsl
inc
inc
clc
mov
bound
aaa
push
add
add
mov
loopne
or
mov
jmp
les
mov
pop
popl
dec
dec
scas
xchg
mov
xchg
xor
fwait
inc
outsl
adc
xor
pop
pop
mov
cltd
in
xor
cli
out
mov
and
loopne
and
aad
dec
aas
and
xor
mov
mov
lods
push
aam
int
push
fs
int3
dec
bound
shll
sbb
loope
in
ja
jecxz
movsl
inc
mov
xchg
cmpsb
sub
fisttps
scas
loope
dec
jmp
arpl
jmp
lods
jg
cmpsb
daa
xchg
mov
data16
jae
lock
loop
in
std
enter
lret
cmc
sbb
xor
mov
mov
fldl
and
outsb
aam
js
mov
movsb
jle
daa
loopne
dec
dec
rolb
adc
pop
sub
or
add
cmpsl
and
lahf
cmp
mov
inc
xchg
sub
pusha
insb
fwait
pop
and
jge
jbe
cmp
call
jns
dec
lahf
clc
insb
or
mov
adc
jp
dec
in
in
ljmp
lret
sub
pop
or
jno
lcall
rdpmc
call
stc
cltd
xor
mov
inc
movsb
cmp
pop
cmc
add
jo
mov
mov
inc
cltd
icebp
adc
adc
out
hlt
fsubrp
mov
cmc
cmp
cmc
int3
fldt
adc
inc
shl
nop
jne
aas
out
xchg
aam
rcll
ret
mov
fsubrs
cmpsb
sub
mov
mov
mov
sub
leave
pop
repnz
cmp
mov
jp
sbb
pop
pop
sbb
roll
fists
lahf
call
inc
xlat
mov
data16
sti
push
add
shrl
add
push
movsl
clc
incb
out
and
push
mov
test
aad
push
stc
inc
les
std
fists
and
sub
sub
mov
movsb
mov
xchg
popa
add
jns
jp
shl
ret
inc
and
lods
jnp
jg
insl
fisttpl
out
lcall
das
stos
cs
xchg
loope
mov
sbb
mov
cltd
inc
xchg
ja
dec
jmp
dec
dec
mov
lahf
aas
addr16
sahf
inc
ja
jnp
push
pop
aam
mov
test
call
rcrb
xchg
pop
outsl
stc
add
inc
clc
jns
cld
outsl
mov
lret
pop
jno
mov
dec
mov
inc
inc
in
dec
inc
loop
lahf
sub
bound
out
xchg
adc
icebp
mov
repnz
push
aad
adc
cltd
adc
xor
out
mov
ljmp
push
out
hlt
xor
xchg
lds
xorb
jne
cwtl
xor
inc
es
mov
add
stos
mov
adc
xorl
dec
pushf
rcrb
inc
xor
adc
fists
imul
orl
cmp
scas
adc
mov
jns
add
fmuls
icebp
cmp
movb
in
psrld
arpl
xor
and
adc
add
shll
mov
xchg
jae
arpl
xor
and
adc
add
shll
mov
xchg
ja
arpl
xor
and
adc
add
shll
mov
mov
push
movsl
inc
aad
lds
ljmp
mov
cmp
pop
mov
lea
mov
push
cwtl
inc
lock
push
out
imulb
cmpsb
pop
mov
xchg
lea
jbe
inc
mov
mov
or
cmp
mov
jge
hlt
popf
jbe
out
mov
or
call
ds
pop
cltd
pop
movsl
dec
icebp
fildll
repnz
stc
data16
sbb
adc
into
dec
daa
add
xchg
rcrb
test
cmp
popa
in
bound
sbb
ljmp
adc
cmpsb
shrl
pop
jne
xchg
jb
divl
pop
hlt
js
jne
push
daa
mov
or
dec
mov
mov
inc
jge
lea
mov
pop
mov
std
jmp
int3
repz
cmpsl
pop
dec
xchg
outsb
test
jae
sahf
sub
std
jae
push
jbe
or
adc
sbb
xchg
jge
mov
gs
xchg
push
inc
insb
out
push
mov
inc
in
ljmp
push
into
test
xchg
dec
popfw
xchg
fnsave
in
fdivr
xchg
or
cmp
dec
insl
xchg
call
add
mov
subb
jge
js
pop
mov
mov
or
or
aaa
into
daa
cld
jae
dec
xchg
add
jg
jp
push
mov
cmp
add
pop
std
ljmp
xor
in
push
std
push
or
cmp
mov
xchg
lea
jbe
inc
mov
ss
push
std
push
or
cmp
mov
xchg
lea
mov
sbb
pop
bound
es
sahf
adc
insb
cmpsb
push
adc
roll
popa
mov
lcall
sub
fwait
roll
es
loope
daa
int3
mov
and
xlat
push
inc
xor
in
xor
sarl
push
inc
call
jne
mov
push
mov
mov
add
jg
jecxz
mov
pop
dec
lea
push
jecxz
add
es
or
movsb
pop
lods
lahf
dec
cmp
mov
movsb
sbb
dec
das
adc
cmc
stc
imul
push
shll
jp
cmp
fwait
mov
aaa
fcmovbe
imul
rolb
mov
xchg
lcall
ljmp
sbb
or
or
mov
loopne
loope
xlat
mov
insb
sub
ljmp
das
scas
and
xchg
mov
cs
xor
inc
fs
mov
icebp
add
push
jmp
adc
xchg
gs
imul
test
mov
shlb
xlat
dec
fsubr
cld
or
sbb
out
daa
add
adcl
push
ljmp
not
pop
loope
jmp
daa
inc
scas
xchg
scas
mov
add
sub
mov
mov
dec
imul
xor
pop
popa
arpl
xchg
orb
push
cmp
aad
movl
imul
imul
jns
xchg
lret
sub
nop
imul
mov
rolb
mov
inc
jg
dec
inc
add
jecxz
push
ljmp
jae
or
fcomp
cmp
aaa
nop
mov
outsb
cltd
jp
clc
fsubl
lds
xor
inc
jg
in
and
jb
stos
shr
in
mov
iret
outsb
daa
and
inc
dec
or
push
sarb
loopne
push
pop
add
out
add
mov
xlat
push
scas
ja
xor
mov
popf
ja
lcall
inc
in
js
sbb
je
add
jp
adc
cld
push
movsl
daa
xor
jae
dec
pushf
pop
pushf
add
pop
sbb
or
das
sbb
jecxz
adc
pushf
fldcw
aas
outsl
inc
iret
repz
ja
xchg
shl
cmp
push
jge
fwait
dec
scas
mov
xchg
inc
sbb
cwtl
inc
mov
cwtl
ja
xchg
xchg
fistl
dec
sbb
fstpl
test
mov
pop
cmpsl
lcall
jecxz
fwait
in
sub
xchg
addr16
loope
repnz
inc
sbb
decb
shlb
xchg
sub
lods
ja
stos
dec
decl
inc
lods
cmp
and
dec
es
out
sub
fwait
pushf
scas
sbb
pushf
out
loop
bound
data16
aas
or
inc
dec
sbb
shrb
sub
pop
lcall
or
test
sub
mov
loop
add
push
cli
xor
sbb
sar
xor
adc
fwait
pop
fstl
or
pop
and
clc
roll
out
out
lcall
and
pop
out
add
cmp
cli
inc
jg
or
and
push
fcomp
jmp
xchg
loopne
push
sbb
jmp
mov
or
lods
cvtdq2ps
mov
or
pop
faddl
cli
cmp
mov
ror
loop
pop
fdiv
inc
or
daa
pushf
hlt
inc
or
inc
jnp
ficompl
and
sub
push
scas
addb
repz
lret
dec
inc
stos
adc
jecxz
jns
dec
jmp
movsb
lahf
out
dec
or
int
mov
sub
or
addb
jge
adc
daa
sbb
inc
insl
nop
ja
lret
lds
lods
aas
testb
sub
shlb
sbb
push
pop
mov
stos
popf
outsl
cmp
in
movsb
xchg
std
sbbb
out
push
stos
push
adc
movsb
cmpsl
loopne
rorb
mov
mov
aaa
aam
pushf
insl
cmp
sahf
dec
clc
inc
hlt
add
popf
xor
sbb
lcall
cmp
mov
xchg
sub
push
call
shrb
loope
lahf
fisubrl
ss
je
xchg
ja
ss
xor
mov
push
adc
jg
data16
mov
push
lock
outsb
jg
clc
frstor
mov
insb
aam
mov
pop
push
add
cmc
mov
inc
rcr
inc
pop
pop
ljmp
addb
call
or
jmp
ss
iret
mov
cs
mov
adc
adc
adc
gs
inc
popf
jnp
xlat
loope
loopne
shrl
cld
inc
testb
jne
dec
mov
pushf
sub
cmp
jp
xchg
adc
inc
sahf
sti
scas
repnz
push
push
sbb
loopne
lcall
jb
inc
xor
ljmp
add
nop
inc
lret
gs
aad
mov
dec
aaa
insb
cmp
aam
out
xchg
js
arpl
xchg
nop
ret
jns
mov
cmp
pop
ret
cmp
dec
lea
lea
fwait
sub
jo
jp
push
pop
lret
pop
mov
xor
mov
fisttps
sbb
push
ljmp
xor
xchg
jns
mov
out
mov
rclb
jno
sahf
dec
fistps
and
dec
pop
mov
mov
jno
xlat
ds
add
roll
adc
leave
jae
cli
dec
loope
ret
cmp
hlt
push
shlb
mov
fdivs
test
sub
mov
inc
insl
bound
pushf
dec
pop
jg
das
movsb
iret
jge
lock
push
xchg
adc
rcl
and
cmpsb
and
or
daa
add
repz
sbb
lahf
loop
ja
aad
lret
sbb
add
in
test
ljmp
dec
aaa
rcrb
lock
xorl
dec
insb
inc
orb
add
in
loopne
pop
inc
mov
dec
add
shrl
cmp
cltd
pop
je
xchg
pop
and
lock
std
ss
out
mov
mov
push
jl
xor
sbb
aas
rcl
mov
inc
repnz
and
xchg
gs
push
in
inc
adc
sbb
mov
dec
subl
cmp
pop
clc
jle
hlt
fwait
or
scas
cs
mov
pop
xchg
into
push
out
push
int
mov
stos
cltd
or
push
jnp
stc
cmp
pop
ja
xor
movsl
ret
mov
xchg
pop
xchg
inc
sbb
adc
test
movsl
sub
jbe
sti
sbb
pop
popf
pop
rol
push
or
test
loop
stos
sbb
aas
popf
int3
cmp
pop
fimull
adc
mov
jb
in
push
fs
call
push
mov
insl
mov
enter
icebp
mov
insl
test
daa
mov
dec
loope
inc
orb
fadds
fidivl
xchg
add
xchg
adc
lods
sub
sti
lock
adc
test
mov
pop
aas
notb
xchg
mov
push
or
cmp
mov
pop
ljmp
inc
mov
push
pop
mov
push
enter
out
sti
push
jb
mov
jge
pushf
jle
lock
or
xrelease
sbb
xchg
xorl
stc
mov
adc
and
scas
and
xchg
loop
push
outsb
rorl
mov
test
mov
clc
leave
xchg
xor
mov
jnp
and
add
push
lods
fwait
xchg
jl
std
nop
dec
fistpll
dec
or
mov
mov
mov
stc
dec
push
push
es
jbe
push
mov
xchg
out
outsl
pop
cmp
shrl
cmp
cmp
push
pop
inc
sbb
jmp
out
fwait
loopne
subl
stos
pop
insl
xchg
xor
in
push
inc
add
fisttpll
and
pusha
or
imul
xchg
mov
xor
orl
fildll
xchg
outsb
push
and
movsb
pop
push
scas
and
mov
in
and
xchg
lret
xchg
and
push
mov
xchg
mov
mov
or
hlt
repnz
scas
lock
cmp
sbb
loopne
jns
adc
cs
rcr
mov
int3
dec
rcr
mov
and
enter
test
inc
inc
xchg
cmp
ss
mov
jmp
sbb
inc
fmull
ds
jns
mov
sub
push
loopne
ja
stos
call
push
mov
popa
sub
or
fdivrl
xchg
adc
pop
jb
js
cltd
dec
cmp
roll
les
jo
or
popa
je
xor
mov
ja
aad
sti
sti
dec
lahf
sbb
in
cltd
mov
adc
add
xor
rcrb
ja
out
dec
xor
adc
adc
aas
or
aas
dec
test
adc
sbb
imul
movsl
rclb
mov
push
jp
imul
repz
mov
test
out
gs
sbb
pop
lcall
loopne
fnstcw
adc
cmp
add
xor
mov
mov
gs
popf
jecxz
cmpsb
xchg
imul
ja
shlb
imul
test
stos
loop
aam
push
mov
jecxz
mov
call
add
je
xchg
add
jne
mov
test
pop
xchg
push
or
xchg
shl
jns
lods
push
lret
pop
arpl
cs
pop
adc
jb
out
push
mov
jl
xor
xchg
adc
leave
shlb
cmpl
xor
fs
adc
mov
popl
push
jmp
mov
lret
inc
sub
incl
mov
fwait
xor
into
add
xlat
std
push
js
mov
pop
stos
mov
lret
xchg
pop
xchg
pop
mov
xor
call
mov
mov
movsb
mov
fwait
loopne
jbe
cwtl
lret
fldcw
jl
repnz
inc
fimuls
push
fildll
loopne
test
mov
gs
pushf
lret
or
inc
outsl
adc
mov
pop
mov
jle
mov
xchg
sahf
lods
inc
pop
cmp
cld
inc
adc
pop
clc
or
test
and
fisubrs
stos
test
xchg
leave
test
aaa
imul
mov
imull
fadds
je
ljmp
or
mov
aad
mov
in
lcall
push
fmull
jg
ljmp
jns
push
clc
das
jns
imul
add
sbb
negl
mov
inc
popf
lock
mov
cwtl
lcall
mov
jbe
xor
into
aas
and
cmp
mov
pop
test
pop
je
loope
lock
push
cmp
in
iret
xlat
jmp
mov
inc
adc
push
push
adc
lcall
xchg
fwait
xchg
dec
adc
or
adc
xor
arpl
xchg
push
cmp
sbb
inc
fdivl
sahf
inc
mov
cmp
scas
loope
hlt
adc
int3
pop
inc
mov
lret
push
stos
add
icebp
popl
lds
lods
and
push
jge
sbb
test
xchg
pop
pusha
cmp
jp
in
pusha
add
add
mulb
test
or
jno
inc
sahf
daa
sub
jp
or
out
insl
xchg
jp
or
std
pop
shlb
leave
ret
popa
cmp
mov
mov
or
mov
mov
sbb
add
pop
dec
lret
lock
pop
dec
lods
shrl
fistpll
shl
dec
imull
inc
push
sti
or
ret
push
jge
stos
push
sub
sbb
loopne
clc
arpl
test
rclb
out
gs
mov
stos
icebp
pop
jno
pop
bound
ja
insl
sub
in
in
pop
ljmp
adc
imul
movsb
stos
adc
cld
insl
enter
add
xlat
xchg
test
nop
sub
adc
hlt
push
scas
loopne
cmp
call
mov
dec
and
or
xchg
sti
mov
sub
inc
popf
fwait
sahf
popf
js
cmpsl
insb
mov
inc
push
inc
cmp
mov
stc
mov
xlat
sbb
ds
jb
mov
and
cs
loop
ja
pop
jmp
sub
sub
insl
sub
les
test
aad
xor
adc
int3
mov
dec
clc
out
mov
scas
mov
mov
pop
test
movsl
pop
aaa
sub
sub
lods
popa
add
inc
out
push
xchg
jae
sbb
les
add
lea
movsl
cmc
insb
jmp
push
iret
test
loopne
cwtl
xor
std
icebp
push
sahf
lds
cmp
hlt
jp
or
or
loope
notl
repnz
sahf
adc
push
and
test
adc
fmul
or
ss
mov
jnp
push
jl
das
jb
ret
sbb
mov
push
insb
andb
orl
int
scas
cmp
push
add
in
ljmp
fstpl
outsl
aaa
leave
les
roll
ret
jp
cmpsb
andb
and
mov
xor
push
push
push
in
cmpsb
lcall
mov
adc
mov
xor
inc
insb
and
ja
shlb
dec
xor
in
xorb
movlps
ss
jne,pt
jge
loope
loopne
insl
imul
int
adc
and
cmp
mov
negb
jmp
dec
hlt
xor
movsb
lcall
push
fwait
pusha
out
lret
xchg
xor
mov
mov
nop
fwait
js
aad
pop
arpl
lods
test
inc
adc
rorl
jne
dec
mov
push
ss
lock
outsl
cmp
cmp
shll
pop
pop
cmp
add
dec
cmc
or
mov
loop
shr
movsb
cmp
enter
loop
cli
hlt
ret
push
mov
inc
sti
xorl
insl
jl
stos
xor
roll
loop
mov
mov
inc
fadd
daa
sbb
mov
push
push
xchg
sbb
sub
nop
jne
adc
add
mov
test
fs
xchg
inc
adc
pop
loope
lea
nop
stos
or
mov
mov
aam
out
sarl
pop
mov
mov
jg
fisubl
fsubr
imul
fmull
rorb
dec
push
push
aas
fsubs
pop
ficomps
cltd
inc
and
xor
jno
std
cmp
rclb
xchg
jl
and
mov
inc
cmp
xor
dec
push
jns
stc
or
leave
sub
cmp
sub
dec
shl
icebp
fnsave
push
sti
aaa
jl
fdivs
iret
and
shrl
addl
test
cmp
add
cmp
pop
ljmp
out
xor
outsl
mov
fnstenv
adc
int
mov
lret
ficoms
pushf
dec
lcall
add
imul
notl
fbld
dec
cmc
jo
sarb
fiaddl
mov
xchg
jne
imul
mov
movsb
sub
outsb
andl
push
jecxz
push
sub
roll
inc
inc
test
xchg
mov
jmp
xlat
or
in
pop
xor
jne
xchg
ret
scas
sbb
test
xor
dec
mov
ja
add
ret
pop
and
out
pop
daa
fs
jle
push
push
xorl
out
std
xor
jmp
mov
fidivrl
jae
popf
and
mov
scas
ds
sub
test
cmp
ljmp
test
clc
sub
or
inc
stos
lods
inc
lret
inc
adc
sahf
dec
jb
repnz
jecxz
scas
loopne
lods
push
sahf
sahf
and
jne
mov
je
cmp
ficoml
ret
int3
dec
and
jmp
mov
imul
outsb
sub
lods
sub
sub
pop
loope
push
mov
scas
inc
sti
add
push
pusha
je
pushf
mov
leave
adc
xchg
gs
mov
notl
adc
loop
lret
sub
sbb
pop
jnp
loop
dec
mov
lret
lahf
sbb
jg
push
out
sbb
loope
and
in
bound
fcoms
fimull
lea
xor
je
lock
or
cmp
popf
mov
cmp
repnz
cmpsl
xor
out
inc
push
mov
inc
les
inc
jl
cmpsb
or
mov
mov
inc
arpl
adc
int3
hlt
ljmp
and
pop
incb
out
fdivl
sarb
jmp
aaa
add
mov
push
sub
cmp
push
mov
pop
and
sahf
or
sbb
stos
jo
ficompl
cmp
or
jb
rcr
pushf
aaa
cmp
jmp
pop
jnp
pop
jge
jmp
xchg
imul
push
imul
cmp
lret
pop
lea
adc
lds
stc
dec
xor
inc
mov
rolb
mov
lret
adc
xchg
test
pushf
insb
stos
clc
jo
push
lea
aas
cmp
xchg
inc
xor
and
dec
iret
mov
aas
mov
push
jb
and
testl
xchg
movsb
ja
and
je
push
push
xor
jecxz
aam
sub
das
cmp
arpl
push
ljmp
and
les
mov
mov
ret
mov
push
pop
test
pop
jge
and
std
in
xchg
popa
xor
pushl
out
ds
cli
and
fs
mov
dec
arpl
adc
movsl
cmc
es
dec
xlat
ret
imul
fwait
add
scas
popf
das
movsl
mov
jno
sbb
jge
arpl
dec
cmp
into
aam
pop
xor
in
lods
and
dec
in
insl
enter
dec
mov
inc
sub
ret
push
mov
pushf
icebp
lods
lea
js
pop
icebp
fmuls
cmp
pop
mov
cmp
pop
mov
cmp
aas
repz
pop
or
sbb
cld
xor
xor
and
les
pop
pop
pop
repz
out
or
mov
cld
shrb
outsb
negl
mov
xor
sbb
dec
and
xor
call
cmpsl
cmp
adc
sbb
clc
cmpsl
shl
push
and
sti
mov
mov
scas
mov
pop
nop
add
mov
mov
call
out
repnz
sub
js
dec
cmp
dec
push
cmp
lret
rorb
or
mov
or
mov
sbb
sahf
xchg
mov
cmpsl
push
mov
jl
fwait
roll
mov
nop
mov
xor
mov
add
loope
mov
push
leave
ror
jno
imul
pop
or
imul
adc
xor
inc
ds
sub
aas
push
sbb
jecxz
sti
inc
or
adc
clc
pop
xchg
dec
xchg
push
or
xchg
cmp
jb
rcrb
dec
adc
add
sub
lret
sbb
hlt
ss
repnz
cmp
push
sarl
stos
pop
outsb
out
or
jp
std
fmul
dec
inc
mov
gs
xor
lret
fs
shll
cltd
adc
adc
jmp
or
aam
cwtl
add
ror
push
lcall
pop
xchg
jg
shl
adc
gs
ret
pop
dec
cli
lea
aas
mov
push
adc
es
jl,pn
pop
into
incl
xor
inc
and
push
push
lds
ret
or
cltd
loop
in
cmp
inc
push
dec
je
cli
inc
fxch
cmp
ljmp
loopne
jle
ss
or
dec
add
fidivs
add
adcl
cmp
test
lea
lods
ss
dec
in
mov
call
cmp
sbb
les
loopne
idivb
roll
lahf
cmp
addb
jp
je
lret
dec
sbbb
aad
jmp
sub
stc
cmp
dec
scas
aad
add
jo
adc
cltd
sub
mov
clc
orb
xor
mov
pop
jne
out
add
testb
data16
ja
sub
out
dec
jb
cli
mov
pop
out
out
imul
cmp
stc
lahf
dec
lock
push
jne
inc
andb
sbb
jo,pn
dec
jecxz
pop
std
in
sbb
pop
add
in
xor
and
sti
nop
adc
pop
xchg
push
pop
data16
mov
iret
sbb
frstor
and
push
jno
jns
aas
mov
adc
daa
mov
xor
mov
cmpsw
out
pop
gs
or
cltd
inc
leave
movsl
sub
jae
add
xorl
fnsave
in
push
std
push
or
cmp
mov
xchg
lea
jbe
inc
mov
ss
push
std
push
or
cmp
mov
xchg
lea
lods
ds
sahf
in
push
std
push
or
sbb
dec
cmpsb
pop
mov
cmpsb
jge
lea
jbe
inc
mov
ss
xchg
repnz
pop
xchg
cmp
dec
xchg
jns
imul
xor
and
ljmp
mov
mov
dec
sti
repnz
loop
adc
add
xor
and
pop
push
imul
fwait
sahf
fwait
subb
jmp
jmp
sti
loop
or
sbb
sub
cmp
inc
pop
jae
jnp
xchg
xchg
mov
xlat
lret
popf
mov
mov
lods
lea
je
sub
inc
sbb
mov
iret
and
fimull
or
in
push
cmp
mov
out
popf
push
insl
mov
push
loop
pop
fwait
mov
pushf
jmp
add
hlt
mov
imul
imul
xchg
adcb
daa
jnp
repnz
cmpsl
or
loop
pop
jno
push
pop
push
xchg
push
jp
add
jl
dec
inc
das
xor
fildl
or
xchg
std
cmpsb
int
push
mov
inc
aaa
es
or
dec
dec
sbb
rcr
rclb
jmp
jecxz
sti
jbe
lret
mov
pop
out
jae
xor
call
mov
mov
jmp
sti
in
add
cmp
pop
push
dec
inc
imul
xchg
xchg
sbbl
lret
icebp
call
jle
dec
push
dec
inc
cmp
and
push
jnp
mov
testl
cltd
popf
xchg
mov
imul
daa
push
pop
or
push
sub
out
out
xlat
cli
mov
popf
xchg
lahf
xchg
outsb
adc
inc
push
push
add
inc
imul
mov
mov
ret
sti
loop
adc
add
xor
and
pop
inc
imul
mov
mov
ret
sti
loop
adc
xchg
mov
and
fnstcw
fsubrl
mov
jle
stos
cmpsb
cmc
xor
popl
mov
dec
hlt
sahf
jmp
cmc
out
aaa
cs
push
mov
and
imul
repnz
test
xorl
scas
jge
mov
jae
xlat
jb
repz
cmpsb
jl
cmp
push
add
rclb
mov
insl
cmpsb
push
inc
movsb
mov
xchg
mov
and
mov
data16
mov
iretw
jno
push
aas
int
fs
and
or
and
pop
inc
lahf
sbb
int3
stos
ret
dec
mov
popf
mov
mov
jo
loopne
inc
mov
lahf
adc
fdivrl
in
and
mov
gs
cmp
pop
and
jno
lods
mov
test
mov
xchg
iret
inc
adc
andb
pop
sbb
stos
mov
push
scas
mov
jl
lret
in
js
mov
movsb
push
cmc
pcmpeqw
cld
insb
cltd
push
in
push
in
sbb
cmp
xlat
fcoml
icebp
push
icebp
jg
rcll
mov
sub
push
xor
stos
int
and
roll
sbb
stos
sbb
scas
xor
loope
test
push
mov
jae
sbb
inc
jl
and
fdivr
hlt
in
push
or
xor
das
test
adc
or
mov
repnz
in
mov
add
insl
out
jge
fimuls
je
or
sub
inc
or
aad
push
jecxz
or
add
les
cmp
into
xor
sub
sahf
test
mov
test
push
xor
bndstx
cmp
jne
out
sbb
adc
inc
int3
pop
lcall
addr16
push
hlt
lds
sub
pop
lret
pop
pop
pop
imul
mov
and
popf
push
adc
stc
sbb
cmp
lret
fwait
dec
mov
add
inc
out
shrb
cs
jb
popa
mov
bnd
std
es
test
lea
mov
int3
cmp
fwait
out
jmp
addb
xchg
mov
inc
lods
loopne
int3
andl
sub
push
into
fprem1
dec
ss
jno
addr16
shlb
cmp
and
mov
in
mov
movsl
jl
lods
cmp
scas
and
pop
bound
mov
movsl
call
imul
cmp
in
jecxz
pop
fs
xor
mov
xchg
or
jge
pop
push
add
loopne
mov
insl
loop
jmp
int3
daa
ds
ret
mov
mov
int3
adc
xchg
mov
lret
jbe
insl
jl
jae
pushf
lret
cmp
inc
jle
arpl
repnz
loop
inc
outsl
rcrb
in
dec
pop
mov
movsl
aam
dec
ja
mov
stos
sub
sbb
sbb
rep
pop
ljmp
add
mov
xor
imul
ret
adc
sub
fsubrl
pop
mov
in
ficomps
jb
ret
push
int
sbb
pusha
mov
ljmp
test
mov
mov
push
gs
loope
mov
inc
push
loope
inc
pop
mov
xlat
add
jo
fisubs
pop
aaa
into
aaa
sti
mov
shrl
arpl
test
cmp
cmp
js
rcrb
push
and
add
xchg
and
dec
dec
enter
sub
outsl
call
pop
add
push
push
cmc
add
cmp
adc
mov
cmp
jns
push
or
pop
inc
mov
inc
aaa
loope
inc
and
jns
clc
xor
movsb
lods
fcomip
mov
jo
dec
adc
dec
jbe
and
movaps
in
pop
fsub
pop
mov
int
sbb
and
sbb
lret
insb
pop
scas
ret
stos
ret
stc
ja
pusha
movl
xchg
fs
or
inc
xchg
out
dec
push
cmp
incl
popf
int
cmpsl
push
mov
js
stc
sbb
pop
insb
add
lea
pusha
enter
andb
push
xchg
adc
les
push
movsb
or
push
dec
movsb
pop
aas
or
xchg
test
imul
mov
pop
pop
pop
jge
pop
fists
mov
call
data16
sarl
jbe
and
mov
xchg
scas
jo
adc
pushf
hlt
mov
sbb
flds
cmp
xchg
addr16
cmp
mov
out
xor
push
int3
mov
push
stos
jae
xchg
mov
mov
jg
dec
mov
inc
inc
jb
cli
ds
ret
inc
cwtl
ljmp
and
cld
push
hlt
insl
cmp
loope
dec
mov
in
out
pop
jae
jbe
fimull
loop
push
mov
fstpl
adc
jno
push
hlt
push
shrb
iret
outsl
jecxz
shl
and
sub
into
inc
jmp
lods
mov
in
mov
sub
inc
push
pop
cli
les
jl
push
shll
subb
cmpsb
xor
je
push
inc
shll
sbb
jns
push
testb
xchg
xchg
rcll
mov
add
in
das
dec
mov
imul
cmp
inc
adc
lea
sar
mov
test
sbb
jmp
out
cmpsb
fwait
cltd
push
movsb
stos
and
sub
adc
outsb
add
ret
xor
in
addr16
imul
mov
lods
int
and
jae
mov
push
lret
add
sarl
adc
pop
and
dec
push
mov
or
add
out
shll
pop
mov
mov
cltd
push
test
clc
lds
mov
or
fstl
ret
pop
or
das
mov
jne
sub
adc
in
outsl
xor
pop
or
subb
xacquire
xchg
lahf
mov
pop
popa
cmp
jbe
mov
pusha
jns
sub
stos
inc
xchg
or
mov
pop
xchg
in
fldenv
xor
mov
sti
scas
pop
pop
sarb
or
adc
mov
pop
jb
mov
int3
ficoml
xor
mov
divb
cmpsb
imul
push
lret
jbe
outsl
jmp
mov
and
stos
adc
clc
push
push
clc
adc
add
xor
stos
ret
xor
jl
shll
adc
pop
ret
or
pop
arpl
and
lds
and
push
in
dec
das
imul
push
fiadds
mov
sbbl
pop
ljmp
jne
push
movsl
sbb
jp
frstor
test
cmp
push
push
pop
mov
sub
xchg
nop
jbe
mov
push
adc
jns
rcl
or
adc
in
or
cltd
cmc
cli
cmp
shr
lods
mull
cmp
or
cmp
leave
jle
iret
stc
add
xchg
ja
movhps
lret
jbe
stos
cmp
and
or
maxps
pop
cmpsb
cmp
fsubrs
repz
sbb
lods
xchg
lret
stos
push
push
jne
xchg
dec
cmpb
mov
xchg
movaps
xor
sub
imul
pop
loope
sti
jnp
push
push
aam
repz
sub
jnp
unpcklps
jnp
and
das
sub
imul
enter
ja
xchg
arpl
push
stos
mov
push
ss
fnsave
mov
cmpsb
xor
xor
int
fistps
lea
pop
mov
xor
inc
xor
adc
pop
inc
dec
xor
es
sbb
and
out
adc
stos
or
rclb
or
lods
fisttpl
pop
jl
sbb
add
xor
out
ret
fwait
push
es
in
pop
aad
nop
jbe
cmpsl
imul
xchg
xor
pop
cli
ret
push
pop
inc
lret
add
bound
sbb
movsb
fisubl
pop
in
cmp
add
push
jne
mov
loope
mov
pushf
inc
in
rclb
lret
inc
ds
aad
jns
loopnew
mov
mov
pop
and
or
or
and
mov
call
lret
insb
je
je
xrelease
je
fcomip
dec
push
loop
pop
cvttps2pi
xchg
je
in
jecxz
xchg
pop
in
mov
cmpl
lret
cli
rcrb
fcmovu
outsb
adc
sahf
adc
andb
movsl
and
int
gs
in
scas
out
stos
in
sub
clc
mov
adc
iret
lods
rcll
jge
cwtl
sbb
hlt
dec
lret
dec
loopne
inc
arpl
decl
and
clc
mov
inc
jno
movl
push
cmp
dec
inc
dec
pop
jo
or
xor
xor
push
faddl
fs
popf
stc
inc
and
dec
dec
jmp
adc
xor
push
add
repnz
js
pushf
mov
movsb
and
inc
sahf
mov
repz
int3
jbe
mov
insb
xchg
inc
jno
and
xchg
dec
gs
dec
cld
adc
fmuls
pusha
cs
shll
into
push
sbb
push
lock
mov
outsl
jbe
pop
mov
ret
mov
sbb
pop
cwtl
neg
or
fdivrl
inc
cmp
stos
int
mov
std
inc
outsl
mov
sahf
xor
mov
in
dec
jo
mov
fdivrl
popf
sub
ss
xchg
jl
mov
sub
jmp
and
mov
push
nop
lret
sbb
xchg
sbb
aas
pop
sub
idivb
jbe
push
cmp
rep
out
or
cmp
icebp
or
lahf
push
jp
jns
sbb
jo
pop
jmp
gs
or
aad
jg
cmp
lret
sbb
cwtl
sbb
enter
lret
mov
sbb
cmp
in
cs
lock
mov
xchg
pop
add
mov
jle
lock
call
and
out
cmp
mov
test
outsl
pop
mov
or
mov
lock
mov
divl
jo
fcomip
shll
pop
out
imul
sub
xchg
xchg
repz
xchg
test
pop
mov
hlt
stc
ja
insl
cmpsb
loope
push
cmp
scas
xchg
mov
js
cmp
xchg
arpl
sbb
xchg
mov
loope
hlt
push
stos
jge
sub
lahf
mov
je
sub
insb
sub
or
sbbl
arpl
mov
stc
pop
test
and
enter
xchg
cmp
insb
xorl
push
pop
out
pop
bound
jne
mov
out
imul
xor
push
aas
clc
sarb
mov
ret
pusha
xor
jne
ss
push
cmc
dec
ds
adc
es
pop
mov
xchg
fstl
pop
mov
push
mov
lods
adc
or
mov
adc
aad
movsb
and
xchg
jne
outsl
imul
and
test
mov
test
iret
or
and
out
ja
mov
lods
fstpt
sub
mov
mov
push
mov
negb
and
or
into
dec
out
nop
adc
fcom
cs
pop
push
orl
jl
aad
lret
scas
xor
mov
push
loope
sbb
xor
push
push
adc
enter
jno
sbb
lods
xorb
xchg
and
aad
repz
sbb
mov
mov
add
xchg
in
sbb
ss
pop
inc
jnp
pop
xchg
xchg
jmp
loope
repnz
add
out
mov
inc
bound
and
imul
inc
lea
out
stc
loope
mov
xor
jl
pop
mov
xchg
mov
std
dec
outsl
je
mov
outsl
pop
lock
jle
popfw
fisubrs
push
mov
lods
dec
outsb
sarl
out
sub
ljmp
push
loope
jo
cmpb
frstor
and
xor
push
fsubrs
stos
dec
adc
imul
adc
fldt
xor
xchg
enter
addr16
sahf
shl
adc
jns
mov
or
cmpsb
inc
imul
dec
push
lock
cmp
and
xchg
inc
out
loopne
cltd
cli
and
iret
pop
out
adc
xchg
ret
lret
test
mov
mov
mov
fsts
fisttps
mov
push
push
xor
mov
cmc
fistpl
outsl
jge
mov
xchg
js
xor
mov
dec
mov
xchg
pop
mov
out
xchg
lahf
push
and
sub
popf
mov
mov
add
jo
jmp
std
xchg
ja
xchg
iret
dec
fs
mov
fiadds
cmpsl
fcomps
popf
xor
push
cmp
jmp
nop
mov
mov
jmp
push
add
cwtl
or
andl
push
mov
pop
push
push
jne
mov
pop
stos
mull
lds
data16
mov
jg
mov
inc
cmpsl
dec
push
das
xlat
loop
rclb
rcrb
dec
imul
inc
enter
or
lea
mov
cmp
hlt
out
out
adc
leave
add
fstps
fldt
adc
aam
pop
sbb
xchg
pop
or
cmp
in
mov
dec
xchg
mov
dec
btr
inc
in
stc
stc
hlt
or
xor
bnd
out
movsl
or
in
mov
shrl
mov
ss
xor
push
and
xchg
aaa
add
ljmp
xchg
mov
fistpl
sbb
mov
gs
pop
sarl
or
or
push
test
movsl
add
jmp
ljmp
adc
inc
insl
xchg
xor
sub
or
inc
mov
out
into
xor
arpl
lods
mov
mov
jg
lock
cmp
fwait
jg
popa
sbb
shr
and
adc
push
fidivrl
pop
pop
movsb
push
shlb
aas
mov
inc
aad
fs
sub
das
xchg
sbb
dec
add
inc
mov
dec
pop
xchg
shl
ret
mov
mov
into
ds
jmp
sti
scas
les
cmp
js
add
mov
scas
or
mov
push
or
flds
imul
nop
cwtl
lret
pusha
fnstenv
or
aam
mov
out
pop
popa
jecxz
testl
and
test
or
or
jno
lret
rol
inc
jl
jg
mov
stos
decl
pop
xchg
repz
in
stc
adc
cmp
scas
shll
push
xchg
aad
sbb
jp
and
outsl
rcrb
push
leave
sub
or
sahf
loop
inc
jno
fsubp
jl
cmp
jbe
add
fimull
cmp
pop
mov
fs
scas
mov
imul
dec
fsubs
fsubrs
add
lret
rcll
pop
lock
inc
lea
inc
inc
idiv
xor
stc
dec
adc
sbb
mov
or
pushf
ficoml
adc
fadds
xor
in
cltd
fnstsw
mov
jb
mov
jae
inc
cmpl
inc
pusha
data16
jecxz
inc
mov
dec
xor
int3
call
jecxz
repnz
rolb
shrl
push
fstpt
sbbb
push
pop
cmpl
adcl
ficoms
pusha
sub
ja
mov
fwait
cltd
ret
notl
jle
ds
add
test
sbb
dec
loop
lret
adc
enter
repnz
mov
push
daa
test
addr16
inc
pop
in
mov
jp
jns
push
mov
inc
aam
mov
enter
loop
fldt
je
insb
mov
ss
sub
loop
jb
mov
icebp
inc
jge
mov
lea
jmp
push
ds
cwtl
jb
into
adc
pop
sub
cld
lcall
mov
gs
lds
dec
cmp
dec
jmp
lcall
xor
pop
popf
xchg
dec
test
add
test
or
jns
test
in
xor
dec
push
adc
scas
mov
mov
je
popf
inc
stos
out
add
sar
test
shl
pop
inc
sbb
inc
push
pop
mov
cmp
mov
je
mov
es
fs
fdivrl
lods
movsb
xor
inc
xor
jno
jbe
sbb
xor
mov
cltd
subl
adc
mov
out
xchg
push
lock
stos
rcr
dec
fwait
push
sbb
out
jle
cmpsl
xchg
or
mov
lahf
mov
mov
sbb
ljmp
mov
jne
mov
cmp
int
mov
and
popa
mov
out
sub
xadd
dec
push
sbb
stos
loope
es
xchg
dec
cltd
push
sbb
mov
mov
mov
xchg
sbb
sub
add
jmp
dec
jb
int
movsb
xchg
jl
xlat
fs
push
in
jns
jne
xchg
mov
push
aam
insb
scas
dec
dec
dec
bound
sbb
jne
test
xchg
stos
inc
push
fmulp
fstps
stc
iret
icebp
push
idivl
sbb
jecxz
movsl
mov
sub
sub
jnp
stos
das
dec
adc
dec
arpl
jle
mov
mov
add
nop
mov
test
mov
pop
pop
pop
add
add
push
push
sub
xor
es
jno
addr16
stos
sub
sbb
andb
repz
mov
and
xchg
xchg
test
out
inc
lahf
fwait
or
add
lock
push
push
ss
xchg
hlt
cmp
cs
cmp
fbld
in
push
mov
ficomps
mov
push
xchg
mov
add
sub
lret
inc
push
mov
inc
jnp
sbb
xor
shll
push
xchg
in
xor
shlb
xor
dec
sbb
mov
aaa
mov
std
stos
push
gs
push
pop
adc
or
mov
and
jle
sub
mov
push
cmp
js
out
idivb
shlb
clc
js
and
es
leave
stc
repz
aas
add
out
inc
aaa
in
idivb
loope
mov
mov
cmp
and
out
int
into
or
pop
inc
clc
jp
pushf
pop
dec
out
jecxz
inc
pop
mov
ja
sub
pop
mov
daa
leave
dec
xlat
imul
je
int
fs
mov
fstpl
cwtl
inc
xchg
ret
sub
mov
loope
aaa
dec
mov
push
cmp
fnstcw
dec
fiadds
adc
sbb
mov
shrb
nop
mov
pop
fiaddl
aam
das
inc
out
fcoms
sub
iret
ljmp
mov
mov
daa
cli
jl
jp
mov
dec
idiv
int
sub
dec
xlat
push
push
not
lods
fstpl
movsl
std
mov
inc
scas
cmp
les
push
setl
imul
cs
outsl
add
stos
pop
add
mov
bnd
jp
jle
out
mov
cmpsl
or
cmpsl
adc
xchg
push
cmp
xchg
cmpsb
into
mov
mov
shl
fsubr
pop
int
push
ret
jne
add
mov
cld
or
mov
jg
xor
ffree
sbb
adcl
and
into
sti
jbe
jne
mov
pop
xchg
and
mov
pop
sbb
cmp
stos
je
popa
and
add
repz
sbb
mov
fwait
sbb
push
fs
pop
xlat
shrl
and
push
xor
xlat
inc
enter
sbbl
inc
or
int3
incl
adc
adc
ret
sbb
icebp
pushf
or
mov
fsubr
adc
and
imul
push
sbb
push
jp
jecxz
adc
lcall
mov
inc
fstpt
cmp
jns
or
adc
xchg
adc
fistps
push
loopne
inc
dec
aad
dec
sbb
fildl
sbb
lods
imul
or
cld
in
lds
push
pop
cmpsb
dec
int
in
push
sbb
jbe
cmp
cmp
xchg
or
pushf
cmp
mov
movsb
scas
inc
add
inc
adc
orb
popf
repz
adc
pushf
inc
dec
sbb
rcll
dec
xchg
fisubrl
aaa
ficompl
pop
jp
add
inc
fistpl
inc
add
adc
xor
test
into
dec
lods
lods
jge
pop
es
mov
repz
stos
ficomps
shlb
sahf
add
ret
push
mov
pop
pop
xchg
je
and
cmp
dec
push
pop
inc
imul
mov
mov
ret
sti
loop
adc
add
xor
and
pop
inc
imul
mov
mov
ret
sti
loop
adc
add
xor
and
pop
inc
imul
mov
mov
ret
stc
out
push
sbb
sub
cmp
dec
push
pop
inc
jmp
sti
mov
add
push
mov
daa
adc
add
xor
and
push
pop
bound
mov
mov
repnz
loop
adc
add
xor
and
ja
inc
jb
sbb
mov
mov
repnz
loop
adc
add
xor
and
ja
inc
jb
bound
rclb
mov
mov
dec
pop
pop
jnp
scas
jb
inc
dec
stc
scas
jmp
push
jnp
fisubl
jns
mov
pop
outsb
call
mov
out
jge
cmpsl
push
or
adc
ltr
and
pop
add
int3
orl
ja
mov
mov
push
aaa
es
sbb
jne
icebp
bound
sbb
sub
jge
ss
inc
sbb
mov
inc
clc
loop
fsubs
push
out
call
lret
les
adc
insl
loope
add
cmpsb
mov
or
xchg
repnz
sbb
xchg
enter
pushf
bound
jp
daa
lock
dec
mov
xchg
xor
imul
adc
add
xor
and
ja
inc
jb
bound
mov
mov
repnz
mov
inc
inc
outsb
xor
addr16
add
cmpsl
jmp
addl
mull
inc
ja
bound
and
xor
aas
sbb
sti
test
xchg
out
cltd
ret
stos
movsb
mov
dec
push
jl
inc
inc
jb
bound
mov
mov
repnz
loop
adc
add
xor
and
ja
inc
jb
bound
mov
mov
repnz
loop
adc
push
fistpll
loopne
es
lods
std
mov
sbb
xchg
dec
fcoml
scas
mov
ud1
sub
dec
xchg
aaa
pop
mov
mov
lods
movsb
push
lahf
aas
inc
adc
adc
je
xchg
sbb
into
lret
mov
aas
mov
sbb
sarl
add
dec
cmp
int3
aam
aas
stos
pop
sbb
jl
jge
pop
push
mov
sbb
das
je
ljmp
repnz
sub
aas
mov
cmp
out
shrb
push
adc
pusha
xchg
push
inc
je
xor
jge
jne
and
pop
fnsave
push
push
xchg
in
fdivr
movsb
mov
cwtl
dec
ljmp
and
ret
jnp
out
aas
hlt
push
lahf
sbbl
inc
xor
out
push
jecxz
xchg
aam
and
add
jecxz
push
push
push
insb
inc
push
jg
movsl
sbb
mov
out
stc
xor
lahf
push
ror
cs
xor
cmp
std
aaa
jg
xchg
lea
icebp
mov
inc
cltd
and
fucom
inc
pop
movsb
push
mov
je
aaa
xchg
sub
fisubrl
sarl
ret
out
xor
xor
fldenvs
xchg
inc
xchg
shr
fwait
addb
jge
mov
mov
xor
les
into
fstps
adcl
inc
insl
cmp
mov
mov
jecxz
mov
pop
lret
pusha
pop
outsl
cmovg
xchg
leave
lcall
dec
jecxz
out
and
inc
xor
lock
cmp
pop
bound
sbb
mov
bound
pop
push
xor
int
sahf
push
mov
movsb
test
icebp
jbe
sub
arpl
sub
dec
insl
repnz
jbe
mov
outsb
outsl
aas
scas
popa
jl
and
mov
aam
or
shl
xor
push
stc
push
or
inc
mov
shl
lods
aaa
mov
loopne
mov
mov
inc
sahf
sbb
insl
and
mov
xchg
inc
xchg
and
jne
out
xchg
mov
pusha
or
repnz
mov
repnz
or
pop
cmp
aaa
jo
jns
add
inc
inc
jmp
jle
rorl
out
lods
inc
sbb
pop
rolb
dec
push
ds
mov
and
fdivr
fcompl
repz
cmpsl
bound
pop
jle
jbe
push
push
dec
cli
ljmp
stos
loope
jns
cmp
clc
stos
add
jg
repnz
inc
mov
insb
lds
out
and
loope
nop
xorb
pushf
dec
xor
jae
cmp
in
lock
mov
add
lcall
pop
mov
adc
lock
sbb
mov
ds
div
shrd
push
rcrb
cmp
dec
aas
das
pop
cs
add
scas
or
pop
bound
adc
and
push
pusha
add
pop
cmpsl
jne
adc
mov
mov
xor
test
mov
push
jle,pt
sbb
xor
mov
mov
cld
movsl
mov
mov
push
inc
inc
add
sub
mov
jns
nop
sub
pop
fisubrl
dec
outsl
mov
cmp
ss
test
mov
leave
leave
push
jmp
push
lods
je
dec
dec
aam
or
inc
pop
out
push
js
in
outsl
stc
lock
jb
lods
push
pop
mov
push
push
orb
pushf
sbb
sub
stc
aam
cmp
iret
add
cmp
push
sar
mov
je
fstps
push
aas
test
mov
pushf
mov
fcmove
dec
jne
push
xchg
mov
subl
fidivs
adc
faddl
in
insb
fucom
sbb
imul
out
stos
fwait
jae
out
gs
cmp
add
mov
jecxz
jbe
testb
dec
bound
call
aaa
adc
cld
sub
mov
mov
or
and
imul
pop
dec
imul
imul
adc
inc
jno
imul
repnz
mov
ja
loopne
das
movb
fldcw
and
adc
pop
jmp
hlt
adcl
cli
loope
fisubrs
and
dec
les
outsb
ljmp
mov
mov
fsubr
out
dec
repz
lea
icebp
inc
test
sbb
fcmovu
lahf
mov
fiaddl
dec
sub
jo
sub
add
sub
mov
sbb
daa
daa
adc
pop
mov
shrb
mov
mov
div
mov
ret
ja
inc
cmp
setge
jmp
mov
and
push
pop
inc
test
lods
fstps
mov
stc
pop
ljmp
pop
test
mov
pop
daa
add
or
cmpsb
xchg
shrb
movd
cld
xor
xlat
pop
js
jbe
xor
mov
into
jmp
in
ds
jge
dec
pop
pop
and
inc
test
mov
test
xchg
aas
xor
ljmp
out
negl
movsl
test
imul
outsl
xchg
inc
xchg
inc
adc
pop
test
jmp
push
push
sbb
jmp
insl
sbb
stc
xlat
jecxz
arpl
cmp
mov
out
pop
fxch
int
popf
arpl
xchg
mov
pop
jo
mov
sbb
cmp
jecxz
pop
lock
xor
mov
push
push
xor
cwtl
push
lods
cmpsb
add
push
or
ret
cwtl
mov
in
test
clc
les
mov
xchg
cltd
stos
mov
mov
pushf
jg
push
xchg
adc
xor
jg
and
sub
loopne
jmp
sbb
imul
data16
sub
hlt
pop
jo
test
pop
pop
inc
inc
ds
and
subl
inc
inc
jl
fldt
outsb
out
sahf
lods
out
icebp
aas
ret
in
dec
shll
int
xchg
test
bound
incl
aam
fs
dec
cmpsb
jae
jne
push
rolb
lahf
mov
cltd
inc
in
test
adcb
cli
mov
jnp
gs
decl
stos
sub
push
ds
rcrl
ljmp
insb
fcmovnbe
sub
inc
test
or
and
mov
jmp
cmp
push
inc
cmp
lret
outsl
in
adc
insb
repnz
push
cld
loope
pusha
unpcklps
push
pop
jnp
inc
and
ds
pusha
decl
add
dec
or
aam
loop
and
movsl
das
xor
nop
gs
fbld
and
hlt
das
test
loop
jge
aas
adc
push
in
subl
sahf
movaps
cmp
es
fisttps
jge
xor
aaa
xor
and
mov
mov
in
cmp
aas
jns
pop
or
push
popf
add
xor
std
fs
mov
adc
adc
adc
or
dec
movsl
ljmp
xchg
iret
incb
add
adc
sarl
mov
jns
out
cltd
fisttps
divl
aas
xlat
pop
mov
jg
rorl
stc
frstor
fdivs
ja
cltd
repnz
call
mov
lret
push
shlb
add
rorb
mov
test
mov
sbb
cs
rcll
xchg
out
cmp
aaa
inc
call
cmpb
ja
add
xchg
mov
mov
inc
jmp
out
mov
pop
jbe
int
icebp
popf
pop
rcrb
loope
std
out
call
mov
cmp
and
push
and
daa
test
bnd
pop
and
mov
sbb
lods
sbb
addr16
data16
loopne
jbe
pop
in
fwait
inc
inc
push
inc
das
cmp
add
pop
xchg
or
inc
jg
or
fsubl
or
dec
xchg
adc
xchg
jo
inc
loope
mov
loope
movsb
push
lock
xor
sbb
jnp
add
mov
adc
mov
loopne
sub
xchg
in
es
cmp
jne
rorb
dec
jae
jno
xchg
push
sahf
cmc
or
ja
or
push
push
incl
cltd
aas
mov
ds
and
and
ret
inc
lahf
inc
test
and
inc
adc
push
dec
xor
enter
test
pop
xchg
leave
jg
cmp
sahf
addl
pop
cli
out
cs
cltd
pushf
in
adc
lahf
rorb
movsl
or
fxch
icebp
cmpsl
je
sbb
push
fidivs
addr16
dec
xor
std
jns
cmp
mov
and
and
ds
ret
or
fdivs
sub
lock
xor
std
pop
and
rol
into
cld
pop
pop
fwait
rorl
pop
dec
aam
insb
push
adc
add
dec
imul
inc
ja
cli
icebp
out
adc
gs
fists
mov
and
aam
add
mov
mov
fs
sahf
incb
xchg
inc
loopne
dec
jmp
sbb
mulb
imul
dec
mov
pushf
xlat
jecxz
test
pop
fdivrs
or
mov
adc
pop
lahf
push
shlb
nop
insl
hlt
sbb
cmpsb
jmp
cmc
out
sub
pop
adc
sub
andl
and
dec
negb
lret
aam
imul
fisubs
jb
push
lods
push
jne
pushf
jl
pop
jns
and
sub
sti
cli
fidivrs
hlt
xchg
push
mov
sbb
in
jae
aaa
je
addl
mov
cld
fwait
loope
mov
out
loop
add
adc
bound
push
fdivrl
cmp
mov
sarb
icebp
sbb
repnz
pop
insl
js
ds
in
mov
pop
or
jmp
mov
addr16
jp
mov
jge
dec
mov
adc
pop
and
jecxz
adc
popf
in
lods
fwait
inc
and
out
imul
in
xor
pop
inc
or
xorb
mov
push
pop
add
add
in
cmp
dec
int3
push
adc
cmpsl
jp
pop
xchg
sub
push
push
stos
pop
or
jecxz
jo
inc
cmp
pusha
pop
xchg
arpl
add
test
hlt
xor
xchg
into
add
inc
in
sub
and
cmp
xchg
mov
mov
add
mov
popa
sti
jl
xlat
pusha
stos
pop
jecxz
xchg
dec
call
mov
std
mov
stos
mov
cmp
leave
pop
mov
cmp
sbb
repz
shl
xor
or
fwait
add
jbe
les
pop
jle
fldl
and
mov
jmp
lret
dec
push
mov
loope
pushf
and
push
roll
ja
inc
add
rclb
js
insb
out
sbb
mov
push
arpl
loop
in
in
mov
jp
adc
push
xchg
sub
ret
cmp
lret
xchg
xorb
dec
inc
lods
add
mov
xor
loop
fldl2t
in
add
pop
shrb
pop
sbb
cmp
std
gs
xor
or
adc
xor
movsb
mov
cmp
test
jne
in
adc
mov
int
shlb
add
xorl
es
aad
or
mov
insb
mov
lahf
arpl
xchg
jns
sti
pop
scas
test
aad
pop
fcmovnb
mov
push
std
es
jmp
add
jne
inc
pop
mov
les
inc
jnp
inc
mov
fdivrl
scas
fnstcw
push
lcall
sub
adc
je
shrl
or
sub
ljmp
add
add
pop
jg
cmp
and
lahf
or
mov
popf
add
pop
imul
push
imul
je
es
ds
mov
inc
inc
add
add
pusha
sti
aaa
rorb
dec
stc
in
fldenv
push
movsl
jbe
and
fdivl
and
pop
lods
dec
shrb
xor
adc
inc
out
sbb
lea
sti
and
inc
pop
cmpsl
jae
jns
imul
pop
push
jp
sbb
fsubrs
jle
call
pop
stc
push
inc
adc
cmp
adc
into
inc
insb
sti
sub
jb
lods
jmp
sbb
insl
xchg
adc
std
jbe
or
icebp
adc
cmpsb
xor
repz
mov
es
lcall
call
out
lods
fstpt
clc
adc
leave
mov
add
stos
stc
or
std
imull
cmp
and
or
dec
popa
cmc
jno
or
xchg
sbb
arpl
shrb
mov
pop
sub
dec
fcmovu
scas
pushf
xchg
imul
jae
ss
adc
push
mov
adc
jp
notb
movups
scas
notl
cli
inc
cmp
pop
ljmp
mov
clc
iret
inc
leave
xchg
jno
stos
mov
ret
push
aam
les
loope
imul
push
fs
cmp
inc
gs
dec
in
or
inc
test
push
insb
lahf
enter
jle
dec
idivb
int
cmp
fdivrl
dec
test
gs
mov
push
rcr
add
push
lock
fisubrs
xlat
inc
negb
xchg
out
jne
push
mov
cli
sub
push
inc
mov
repnz
add
mov
jb
inc
inc
mov
lods
mov
xor
pop
mov
icebp
jl
sahf
ds
inc
hlt
aas
or
fnstsw
xchg
adc
pop
inc
add
jns
pop
aad
xor
mov
mov
nop
cld
mov
and
movsl
pop
mov
dec
xor
mov
test
cmpl
scas
movsb
rorl
add
pop
xor
rol
sahf
inc
xor
inc
subl
pop
sub
cs
lea
scas
mov
out
fldcw
lock
sub
in
xchg
xor
push
fisttpll
fnstenv
pop
movsl
enter
inc
insl
popf
push
adc
adcb
mov
mov
mov
mov
dec
clc
aaa
ljmp
jg
loopne
shrl
xchg
mov
fs
pop
cmp
cli
ja
add
das
dec
les
sahf
fsubrs
cmp
stc
pop
xchg
movb
pop
jno
or
stc
std
hlt
mov
sub
mov
sbb
dec
and
ret
adc
into
adc
mul
ds
add
inc
jns
and
xlat
call
das
jbe
orl
and
shll
mov
out
cmpsl
push
xchg
or
repz
movsb
jo
les
loope
sbb
jmp
movsb
cmc
jl
adc
repnz
xor
cwtl
in
hlt
jne
cmp
mov
test
outsl
pusha
jbe
stos
aad
pop
add
popa
loope
add
mov
insl
sahf
jns
lock
xor
je
stc
adc
movsl
sub
daa
dec
mov
aas
xchg
dec
or
std
xchg
pop
xchg
mov
ja
sarl
mov
pop
data16
enter
dec
dec
pop
add
fadds
fadds
jl
adc
mov
lahf
pop
cmp
das
cli
iret
call
add
imul
repz
push
and
xor
cwtl
dec
mov
push
insb
dec
leave
stos
sbb
dec
and
ss
dec
dec
call
jns,pn
push
mov
stos
sbb
sub
fwait
add
pop
pop
lods
pop
in
daa
sub
stos
test
jp
mov
movsl
shlb
mov
xchg
or
sbb
adc
jb
bound
sub
pusha
out
das
test
in
jnp
repz
mov
test
cmp
push
dec
sub
add
dec
dec
loope
xlat
jmp
lret
sbb
adc
pop
lahf
dec
daa
or
fstpt
fsubl
test
pop
and
repnz
sbbb
sbb
jbe
or
push
fsubl
sub
repnz
test
sbb
push
cmp
push
adc
jl
lahf
ja
sub
out
inc
fwait
or
mov
cmp
jle
pop
sbb
cs
imul
gs
outsb
xor
hlt
repz
push
xchg
jecxz
popw
lret
shr
lret
xor
and
popf
das
lods
jp
test
mov
and
and
lock
add
out
sub
push
lods
push
cmpxchg
lcall
xlat
and
and
sub
cmp
xor
loop
push
mov
out
enter
aaa
js
mov
xchg
js
sti
inc
repnz
cmp
sbb
add
dec
rcrl
jge
cmp
add
sbb
fcomps
sub
jmp
test
imulb
clc
je
in
dec
les
dec
add
lods
sbbb
push
movsl
inc
outsb
sbb
jno
std
mov
mov
fcmovnb
ds
loop
and
fisttpll
push
jbe
adc
mov
bound
das
and
mov
loopne
jge
out
xor
in
scas
inc
sahf
nop
fcoms
popf
aam
sub
cmp
pop
adc
jb
js
and
ja
jb
mov
popf
mov
xor
iret
inc
mov
adc
cmp
inc
hlt
xchg
scas
cmc
icebp
xchg
push
inc
push
pop
dec
mov
daa
ds
enter
mov
mov
fistpl
mov
push
mov
sahf
stos
dec
adc
xlat
and
es
sbb
pop
mov
fstl
bts
ret
test
test
mov
int3
mov
std
loop
xor
add
sbbl
in
xchg
ret
cs
pop
inc
rcrl
test
sub
in
out
jo
icebp
in
into
xchg
scas
pop
mov
pop
jns
push
cmp
insl
add
pop
adc
adc
call
jp
dec
jb
mov
push
loop
or
ljmp
inc
xor
mov
sbb
mov
and
mov
or
sbb
add
mov
push
inc
sub
dec
and
pop
cli
sti
xor
sbb
sub
xor
pop
shl
aad
pop
iret
sti
scas
shll
addl
mov
add
repnz
jno
sub
jb
inc
pop
aam
mov
or
cwtl
ds
in
mov
out
xchg
cmp
arpl
sahf
sub
cs
ret
mov
push
mov
pop
movsb
xor
fdivl
jl
lea
mov
rclb
sbbl
jecxz
dec
shr
lahf
imul
mov
stc
inc
pushf
jle
in
fbld
mov
int
mov
dec
jnp
mov
mov
push
in
jge
loop
mov
push
jae
shll
rorb
push
cmpsb
mov
in
inc
add
xchg
and
movsl
jnp
int3
cltd
repz
dec
and
or
inc
cmp
lret
dec
pop
jne
mov
je
push
outsb
es
je
dec
out
jbe
scas
xor
into
push
sbb
and
xor
pop
sbb
cmp
cmp
push
pop
sbb
push
mov
inc
and
out
mov
mov
insb
in
rorl
sub
push
inc
jg
add
jae
idivb
jp
mov
mov
mov
lock
out
leave
outsb
dec
nop
jl
inc
fisttpl
or
xor
rcll
pop
xor
movsl
movsl
pushf
imul
into
pop
addl
data16
xchg
popa
xchg
jno
insb
out
adc
lahf
and
jmp
lea
bound
push
les
mov
enter
and
mov
xchg
add
pop
loopne
out
add
loopne
icebp
insb
dec
nop
in
pop
inc
and
mov
jnp
dec
pop
out
out
inc
ret
jne
and
sub
stc
lds
pop
sbb
test
aaa
xor
mov
cltd
loop
mov
inc
xchg
arpl
xchg
mov
scas
test
int3
aad
in
movb
addr16
jge
clc
aam
cmpb
adc
mov
sbb
xlat
insl
xor
sub
xchg
or
mov
decb
mov
push
sbb
cltd
xchg
push
and
mov
xor
add
jae
pop
scas
mov
mov
push
in
inc
cld
and
test
push
jno
push
xor
ljmp
imul
push
stos
xchg
and
adc
xchg
sahf
mov
outsl
and
mov
test
jbe
adc
cmp
int
pushf
mulb
outsb
aam
jmp
lds
roll
inc
enter
xchg
inc
fisubl
mov
scas
mov
push
xor
and
ja
inc
jb
bound
mov
mov
repnz
loop
adc
add
xor
and
ja
inc
jb
bound
mov
mov
repnz
loop
adc
and
push
ja
inc
jb
bound
mov
mov
repnz
loop
adc
add
xor
and
ja
inc
jb
bound
mov
aad
pop
xchg
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
pop
cmp
aam
in
hlt
xor
fidivs
je
jbe
add
adc
xor
xor
fcmovbe
jmp
cli
hlt
mov
mov
inc
pop
push
or
or
les
and
xor
fstp
aam
cld
cli
in
mov
mov
outsb
or
pop
je
inc
jae
or
xor
fidivrl
add
dec
push
cmp
fbld
sub
push
out
mov
jge
mov
lahf
cltd
push
xchg
lahf
insb
mov
push
cs
cmp
les
je
and
jns
cmp
push
in
fwait
nop
mov
adc
rorl
cmp
test
mov
ficoml
fidivrl
or
in
les
cld
mov
stos
imul
cmp
and
adc
movsb
xchg
push
and
das
push
cmp
jp
pop
insb
jb
scas
and
lret
xor
fidivl
in
aas
push
push
jne
sahf
jl
mov
mov
jno
fs
sbb
fstpt
and
fcmovb
ljmp
xchg
stos
mov
pop
dec
push
jp
or
add
and
push
mov
in
cmc
leave
sar
cli
in
enter
sub
push
sbb
push
inc
inc
and
pop
xchg
mov
mov
out
idiv
cmpsb
stos
rol
sbb
pop
aaa
inc
jbe
jnp
dec
and
mov
test
or
movsb
mov
push
push
jp
or
adc
and
xor
fcmovbe
ljmp
xchg
stos
movsb
mov
push
push
jp
or
adc
and
xor
fists
lds
icebp
fcomps
dec
pop
pop
rolb
aas
jmp
jle
cmp
stc
sub
aas
mov
lret
test
xchg
insl
movsb
push
jnp
mov
shll
sbb
add
mov
cmpsb
and
arpl
add
inc
xchg
aam
jle
pop
xor
jg
xlat
movsl
sahf
mov
imul
mov
mov
mov
sbb
insl
jle
mov
add
push
or
pop
pop
iret
xchg
insl
jns
pop
orb
mov
sub
nop
jns
mov
mov
addr16
mov
or
aad
mov
lods
mov
jmp
loopne
jle
test
sbb
std
mov
jmp
sbb
adc
and
add
loope
addr16
jbe
enter
dec
stos
fwait
stos
scas
xor
imul
in
sub
xchg
stc
and
jmp
stos
xor
lret
test
adc
out
mov
sbb
xchg
pop
push
incl
cli
jle
cmp
xchg
aam
push
pushf
call
imul
mov
xor
cmp
nop
jmp
cli
imul
clc
mov
mov
mov
dec
popf
popa
js
pop
lods
hlt
push
lret
sbb
cltd
sub
adc
fld
cmpb
add
inc
inc
dec
or
mov
and
rcll
repnz
or
mov
repz
push
popa
pop
aaa
imul
out
push
pop
jnp
shr
fisttps
call
testb
sub
popa
jb
int
out
ja
cmp
lea
in
lods
mov
mov
aad
lea
mov
sti
dec
xchg
lds
jo
es
mov
insl
iret
jle
xchg
call
ret
xor
push
mov
scas
outsl
mov
cmp
sbb
dec
outsl
int3
push
lods
test
xor
or
jnp
test
nop
outsl
repz
xchg
mov
lret
sbb
out
lds
mov
into
int
jns
adc
stos
dec
jge
fwait
lea
sub
outsl
mov
push
data16
mov
push
or
pop
in
pop
test
xchg
sub
jecxz
in
outsl
inc
dec
rcrb
push
arpl
push
or
push
or
dec
jmp
arpl
push
sbb
shlb
insl
hlt
fs
test
cmp
inc
cmpps
xor
mov
cmp
xchg
mov
shrl
cmp
lcall
mov
cmp
inc
fsubl
mov
aas
lret
sbb
test
mov
jp
fs
adc
push
mov
push
outsb
repnz
scas
pusha
ret
clc
inc
mov
not
add
mov
jge
sub
xchg
dec
dec
push
jmp
or
mov
bnd
in
inc
les
andl
es
popa
or
mov
cmp
or
subb
aaa
js
inc
in
cmp
pop
mov
adc
push
repz
pushf
and
cmp
mov
cmp
fnstcw
addl
ja
mov
or
ss
loope
mov
shr
bound
out
push
int
outsl
sub
leave
ja
pop
jecxz
fistps
icebp
test
and
mov
dec
outsl
pop
fisttpl
push
adc
hlt
push
aas
and
cmc
insl
rcr
dec
inc
and
cmp
sbb
fiadds
fs
add
jp
cmp
pop
pusha
cmc
push
lcall
jle
xor
fdivl
sahf
push
dec
inc
and
int3
cmp
rolb
adc
addr16
cmp
jp
dec
xor
mov
icebp
sti
sub
ja
je
sub
ds
inc
imul
std
xchg
sti
or
into
or
sbb
mov
popa
xor
sahf
add
cmp
or
popf
xchg
dec
inc
clc
mov
or
pop
fidivrl
mov
fcmovne
leave
aam
aas
cmp
adcl
push
push
inc
imul
pop
sub
enter
add
imul
cmp
jne
adc
imul
scas
mov
add
je
outsl
clc
insl
loope
fld
ret
jns
rcl
negb
xchg
shlb
nop
jne
divl
and
mov
lock
addl
in
pusha
into
lods
js
scas
cmp
rclb
xorb
dec
adc
xchg
dec
ror
fwait
daa
sbb
mov
inc
call
or
rcrb
int3
sbb
lock
add
mov
rolb
push
popf
dec
in
sbb
push
mov
lods
into
aad
jnp
mov
cmp
mov
jne
sub
lcall
pusha
xchg
out
js
lret
fimull
ss
int
jle
ja
out
xlat
aad
lahf
stc
fs
pop
inc
test
rcll
pusha
adc
mov
jge
xchg
fs
and
mov
push
push
push
mov
push
cmc
addr16
int3
mov
repnz
cmpsl
aad
das
pop
fldenv
pop
repnz
shlb
and
nopl
jns
cmc
inc
cmp
jno
push
pop
adc
data16
cwtl
jb
test
inc
inc
mul
dec
icebp
ljmp
mov
outsl
lret
sahf
roll
xchg
push
loop
push
fadd
sub
aaa
sarb
lret
orb
daa
pop
xor
jmp
adc
dec
mov
jle
pop
outsb
testb
push
repz
push
je
add
add
cmp
pop
test
or
and
adc
pop
xchg
cmp
sub
gs
fisubrs
xor
in
xchg
arpl
pop
scas
xchg
jp
cwtl
and
shrb
inc
loop
movsl
push
ret
jecxz
xor
dec
gs
out
rorl
orb
or
bound
push
fdivs
push
loope
jl
pop
std
xor
test
loop
mov
fstl
lds
pop
and
shlb
out
push
push
lcall
call
add
cmc
into
and
mov
aam
hlt
std
inc
scas
push
jp
cli
data16
aam
add
out
in
dec
push
sbb
scas
push
je
and
or
mov
aas
dec
cmp
pushf
xor
shl
data16
cltd
jecxz
lret
push
or
mov
sbb
in
jmp
adc
ss
cmpsb
out
mov
or
cmp
mov
icebp
into
pop
pop
jne
mov
in
and
dec
adc
repnz
gs
std
cltd
cmovo
mov
mov
dec
mov
aas
sbb
xchg
mov
dec
mov
add
or
lret
pop
mov
xor
xchg
jo
inc
jbe
or
jg
insl
xchg
orl
push
int3
inc
mov
mov
and
mov
mov
iret
mulb
clc
shr
mov
xor
dec
sahf
jae
dec
or
jp
and
imul
orps
pop
pop
jne
sbb
setne
cli
adc
cli
or
inc
lds
incb
pop
lds
push
ret
sti
das
in
mov
dec
js
inc
sub
jb
add
call
cmp
or
enter
sbb
out
pop
inc
pop
and
or
push
pop
dec
dec
mov
inc
imul
pop
jmp
jge
sub
inc
mov
adc
adc
test
repz
int
gs
cmc
push
sti
jbe
mov
adcb
aam
out
jge
aas
leave
dec
lret
repz
push
pop
sbb
pop
push
addr16
loope
mov
decl
adc
xchg
inc
push
jl
mul
lret
ljmp
and
mov
cli
sbb
add
add
shrb
jecxz
sbb
sbb
bound
jmp
push
or
fadds
mov
mov
je
sti
dec
sub
sub
xchg
sbb
sbb
inc
jg
roll
and
inc
adc
sub
sub
sarl
dec
hlt
clc
xchg
mov
mov
jecxz
add
outsb
push
mov
and
push
aas
jge
mov
mov
stc
add
mov
out
test
mov
cs
leave
clc
cmp
cs
push
rcr
pop
jo
sbbl
insb
mov
jl
jmp
aas
jmp
pop
bound
inc
cmc
sbb
fbld
mov
ss
xor
dec
scas
and
adc
loopne
mov
inc
mov
mov
mov
adc
repz
sbb
cmp
out
test
in
stos
cmp
pop
imul
adc
cli
imulb
mov
pop
pop
or
inc
xchg
stos
dec
or
das
dec
mov
ret
je
ret
rclb
and
xor
icebp
pushf
mov
cmp
sub
imull
aas
mov
je
ds
or
and
lods
orb
lret
inc
cmc
movsl
inc
xor
adc
adc
mov
add
cmp
push
jnp
cmp
jae
jmp
or
sub
stos
sub
outsl
dec
aad
int
aas
xchg
int3
je
divl
hlt
movsl
pop
loopne
leave
xchg
into
mov
fwait
bound
mov
rclb
cld
rol
aas
into
shrb
xchg
add
inc
sub
lock
icebp
andb
adc
ret
push
mov
jle
mov
stc
xchg
mov
or
adc
mov
push
mov
repnz
cmpsl
outsl
leave
xor
cs
fwait
icebp
ss
test
mov
push
lahf
rclb
jmp
scas
fmuls
jne
push
subl
mov
cld
jbe
cs
jo
mov
enter
sub
or
push
popf
cmp
jg
enter
xor
jns
cs
sahf
mov
aad
leave
push
loopne
mov
out
mov
dec
mov
add
in
xor
mov
out
mov
iret
fnstsw
in
xor
ss
loope
cmc
leave
xor
mov
jbe
jb
xchg
and
xchg
pop
jae
mov
inc
and
jae
xlat
jp
xorl
in
and
rolb
inc
xchg
add
adc
xchg
mov
ss
sub
and
out
dec
test
dec
xchg
sti
sub
orb
cli
mov
and
xchg
push
push
das
push
lret
mov
xchg
mov
inc
xor
mov
sbb
cmp
and
pop
clc
mov
sbbl
popa
imul
dec
xor
sbb
jne
pop
dec
mulb
repnz
popa
aad
repnz
mov
pusha
push
pushf
pop
cmovns
jno
jp
pop
jle
out
addr16
fstl
xchg
adc
outsl
mov
out
push
jae
loop
ror
jo
movsb
stos
dec
xorb
cmpsb
and
fcmovb
jno
cmp
test
shlb
loope
dec
in
aam
add
test
inc
pusha
into
pop
imul
cmpsl
pop
lds
shl
adc
enter
xchg
mov
leave
jbe
jg
xchg
jecxz
les
and
outsb
popf
push
fisubrl
or
clc
push
jge
scas
aas
outsb
fistpl
adc
test
mov
jns
cmpsb
sarb
sbb
ror
push
mov
push
rcl
inc
dec
cltd
jge
repnz
pushf
fcomip
sub
cmp
xor
fadd
insl
negl
mov
gs
add
out
push
push
sub
orb
fsubl
mov
sub
pop
into
xchg
hlt
aas
std
xor
lea
sarb
clc
push
mov
test
add
ret
and
pop
divb
xor
jle
xor
mov
outsl
xlat
fadd
js
sub
pop
loopne
add
jmp
je
jle
addr16
adc
icebp
fwait
div
push
sbb
push
sarb
in
aas
or
std
mov
adc
push
test
jp
lret
xchg
mov
adc
lahf
push
ds
ffreep
ljmp
orb
pop
inc
sub
fld
sub
jge
sti
popa
xor
insl
pop
mov
imul
dec
hlt
pop
dec
loop
test
std
sbb
cmp
fwait
bound
das
int3
repnz
call
sub
jbe
xchg
xchg
mov
stos
xor
outsl
pop
xor
inc
loopne
push
cmpsb
test
add
cwtl
mov
addb
push
xchg
mov
jne
cli
dec
push
hlt
shll
xor
lcall
dec
xchg
lret
mov
sbb
jp
icebp
mov
mov
je
sub
xor
aam
mov
xlat
pop
push
jle
xchg
and
dec
jne
lock
scas
decl
mov
xchg
out
fwait
adc
in
pop
cwtl
jmp
jl
cwtl
nop
sub
fistpl
je
out
xchg
xchg
aas
xchg
in
movsl
lret
xorb
mov
movsl
orb
testb
or
fnstenv
push
xorl
inc
cli
fbstp
xlat
cmpsb
jl
adc
adc
fisubrl
cmp
push
gs
dec
mov
fiadds
aas
ljmp
stos
imul
out
adc
inc
aam
adc
fidivrs
adc
pop
rorb
pusha
enter
in
not
shlb
pop
and
ljmp
cmp
int
dec
push
add
outsl
scas
les
lods
stos
add
lret
push
cmp
mov
mov
add
loop
test
cmp
dec
sti
adc
or
andb
sbb
or
add
mov
bound
add
mull
pop
mov
int3
push
popa
mov
icebp
daa
cs
divl
fists
cmc
cltd
cs
sbb
fcmovb
pop
iret
add
daa
ds
add
push
push
or
jg
cltd
insl
jne
push
in
popa
push
adc
inc
addl
rorl
xor
jbe
sub
xor
xor
xchg
loopne
insl
sub
pop
cmp
movsl
clc
aad
daa
jo
lds
fs
mov
rcr
fs
enter
adc
push
pop
sub
scas
repnz
mov
stos
adc
sub
dec
movsl
inc
push
cmp
lret
jne
hlt
pop
mov
cmp
sarb
rcll
pushf
sub
xchg
clc
adc
add
xchg
mov
leave
xchg
jecxz
lahf
shl
mov
cmp
xchg
xor
lahf
ret
fadds
shll
mov
insl
je
cmc
sub
addr16
rclb
out
loope
push
xchg
jge
popf
mov
and
ret
cmovno
orb
and
add
adc
lods
push
jne
or
mov
mov
js
sbb
ret
mov
mov
cwtl
and
dec
cmpsb
fisttpl
pop
fcmovnu
lock
mov
jnp
xor
inc
mov
popl
add
ret
adc
xchg
inc
test
pop
cmpsl
jmp
aaa
mov
aam
ja
add
scas
push
mov
xchg
fdivrl
mov
pop
cmp
inc
xor
int
out
inc
out
aaa
in
or
fldcw
pop
movsl
pop
arpl
inc
mov
push
notb
sarl
mov
std
sub
push
push
out
in
mov
xchg
xor
out
mov
add
cmp
lods
clc
ss
push
sbb
cmpsl
sbb
add
mov
pop
jecxz
xor
push
xor
xchg
mov
fists
xor
mov
inc
or
mov
outsb
fmulp
mov
add
mov
nop
jnp
adc
pop
mov
leave
sbb
mov
arpl
mov
or
and
sahf
sub
jle
sahf
rcll
add
push
out
aam
jb
push
test
fidivrs
cmp
mov
fstps
cmp
inc
pusha
jns
mov
popl
push
pop
fcom
pop
or
jp
add
cmp
das
cs
dec
iret
jecxz
dec
jb
int
je
mov
out
dec
inc
and
outsb
mov
jo
push
out
call
xor
xor
lret
into
cwtl
inc
and
push
dec
stc
sbb
mov
sti
fwait
shl
popf
or
adc
xor
insl
push
leave
xchg
mov
imull
xchg
out
adc
jle
adc
fcomp
push
mov
jns
mov
call
rclb
xchg
stos
idivl
xor
jb
push
pop
push
push
out
and
mov
mov
sarl
jno
int
jnp
popa
mov
dec
int
out
jnp
jb
pop
and
xor
sahf
movsl
scas
scas
sbb
cmpsl
jmp
mov
add
aam
in
add
testl
mov
filds
cmpsl
ret
lods
add
push
push
jl
and
add
sub
loopne
subb
push
inc
lret
jns
or
sbb
call
add
sub
cmp
lahf
mov
outsw
sbb
add
xor
iret
out
dec
push
jnp
mov
or
push
jecxz
das
lods
loope
pop
cmc
mov
out
stc
test
in
add
sub
insb
inc
adc
xchg
sub
es
mov
sub
sub
add
mov
sub
in
lods
push
lock
stos
es
xchg
or
sti
push
call
or
aam
mov
fdivr
mov
iret
add
outsb
sbbl
inc
cmp
sub
adc
dec
insl
leave
stos
fcmovb
and
aad
add
adc
fisubl
xchg
push
push
enter
cltd
lcall
es
jmp
mov
mov
shl
js
or
cvttps2pi
popa
jg
inc
fsubrl
icebp
add
aam
lret
filds
or
dec
hlt
or
dec
orl
decl
test
std
dec
sub
push
dec
int
sbb
lds
mov
push
sti
cmpsl
inc
hlt
xor
jl
addl
pusha
pshufw
pop
std
popf
cmc
cs
mov
xor
dec
aam
ds
hlt
in
inc
inc
sbb
pushf
rcrl
cmc
jle
mov
xchg
addr16
cmp
aad
mov
jnp
fwait
sub
rcll
dec
add
popa
push
ja
inc
test
in
fs
cmp
shr
imul
sub
sub
inc
std
jbe
adc
adc
test
jns
ds
adc
and
xchg
cmpb
mov
xchg
aad
jns
push
mov
or
and
sub
jne
cmp
out
sub
pop
mov
xchg
and
rcrb
and
cmc
push
inc
jecxz
jbe
aam
or
jp
test
iret
cmp
jl
jl
popa
outsb
xchg
lock
test
cmpsl
std
mov
pusha
andb
lahf
inc
sub
sbbl
dec
mov
js
fdivrp
popa
call
movsb
jbe
sub
xor
stos
fistl
mov
xor
mov
lret
mov
in
enter
add
popf
push
pop
mov
push
dec
enter
js
jb
lea
mov
jae
jo
pop
mov
shl
imul
sub
jb
inc
call
xor
sub
lret
inc
mov
inc
xchg
shlb
rol
call
xor
loopne
xlat
stc
lock
popf
sbb
pushf
into
inc
mov
fwait
xchg
insl
push
out
ret
loope
push
hlt
add
dec
sti
mov
jnp
neg
push
inc
mov
repnz
xor
push
loope
xor
leave
pop
sbb
add
stos
adc
inc
adc
xor
pop
rolb
pop
cmp
jge
xchg
jp
mov
test
sbb
mov
add
fcomps
int
stc
mov
xlat
and
jge
xor
dec
inc
cwtl
mov
mov
cltd
inc
cld
rcll
push
scas
shlb
fmul
fimull
pop
shl
cwtl
or
or
xchg
icebp
xlat
dec
push
inc
fs
ja
icebp
push
push
popa
sti
sbb
cmp
sti
lds
xchg
push
xor
cmp
rcl
cltd
push
loope
std
xlat
fistpll
hlt
mov
pop
ret
pop
sbb
divps
adc
inc
lds
lds
xor
cwtl
or
or
add
adc
mov
push
jb
pop
xchg
mov
add
aad
mov
daa
inc
fwait
sub
divb
in
test
lret
inc
mov
mov
dec
outsb
test
rorb
push
les
or
add
pop
add
mov
out
jl
insb
jmp
mov
and
mov
int3
xor
mov
fisttpl
cli
hlt
mov
mov
inc
pop
push
push
jp
or
adc
and
xor
fcmovbe
ljmp
xchg
stos
movsb
mov
push
push
jp
or
adc
and
xor
fcmovbe
ljmp
xchg
stos
movsb
mov
push
push
jp
or
adc
and
fcmovnbe
jmp
cli
hlt
mov
mov
inc
pop
inc
fs
jge
xchg
jmp
fcmovnb
lret
in
cmp
sub
jnp
dec
mov
mov
mov
gs
jo
inc
lret
test
mov
sbbb
or
jp
push
pop
shrb
jo
xor
pusha
lahf
adc
inc
ficoml
jp
xor
push
sbb
lock
push
pop
sub
mov
jno
inc
mov
and
les
outsl
imul
test
pop
rorl
cmp
push
xadd
lahf
add
cmp
cmp
push
out
rclb
stos
int
jmp
lahf
in
loope
shll
lock
int
aaa
andl
pushf
out
jne
add
clts
in
enter
lds
punpckhdq
push
shrb
adc
in
ljmp
and
in
pop
pop
icebp
jae
test
cwtl
dec
loopne
pusha
mov
xchg
test
and
cmp
movsb
xor
loope
shrb
ret
fdivrs
adc
jmp
mov
xchg
cmp
or
jp
push
pop
push
stos
fcomps
outsb
ljmp
push
les
dec
mov
mov
inc
lret
push
leave
jno
or
pop
scas
mov
push
pop
imul
fbstp
gs
jl
adc
adc
lock
jb
dec
lock
pop
rorb
mov
adc
inc
ficoml
mov
sbb
push
pop
rorb
mov
adc
inc
ficoml
mov
jne
int
lahf
jmp
arpl
iret
pop
hlt
cltd
jecxz
das
popa
jecxz
and
and
arpl
in
dec
stos
pop
mov
repz
loop
xor
imul
ljmp
xchg
push
mov
test
nop
pop
std
xchg
sbb
or
mov
sub
rol
into
inc
lahf
add
dec
rcpps
mov
dec
jnp
lods
fs
cmp
mov
in
aam
mov
lods
rcl
out
mov
cmpsb
mov
push
fnstsw
push
leave
ss
xchg
mov
push
rcll
pushf
jp
mov
mov
roll
adc
or
jge
hlt
fdivs
sbb
jb
cmc
jecxz
add
mov
and
je
insb
xchg
dec
leave
cltd
fsubrl
in
aam
shll
jb
imul
inc
out
jae
gs
mov
xor
mov
jb
aas
inc
push
mov
or
push
mov
dec
push
icebp
xchg
cli
dec
std
addr16
rcr
fs
dec
mov
xchg
add
and
or
clc
jae
adc
inc
jmp
iret
adc
arpl
mov
inc
fs
dec
sbb
sub
mov
push
pop
mov
fwait
rcrb
subl
pop
mov
cmpsb
jmp
pop
insb
push
push
sahf
add
mov
add
jge
pop
aas
int
subl
cmp
and
sarb
sbb
pop
mov
stos
out
in
push
scas
bnd
pop
pop
jge
andb
adc
rcll
addr16
jns
inc
jb
stos
imull
into
fidivrs
inc
idivl
push
push
mulb
dec
xchg
xchg
pop
adc
jg
incl
mov
repnz
or
das
arpl
mov
push
nop
mov
sbb
lret
pop
les
test
es
aas
incb
sahf
sti
lcall
out
sar
sub
mov
pop
lcall
add
aad
fwait
xchg
pop
adc
jp
inc
jns
sub
push
cmp
jno
jmp
xlat
ds
scas
enter
movsl
loopne
sbb
dec
or
call
jne
xchg
sub
inc
push
jb
xor
push
sub
dec
mov
imul
lret
mov
sub
ja
pop
push
add
subb
jb
inc
add
aas
pop
push
lret
imul
or
mov
jl
rorb
add
dec
fs
pop
aam
daa
or
push
or
cli
sub
fidivrl
inc
inc
push
push
sub
pop
leave
stc
mov
push
and
insb
pop
cmc
add
adc
mov
inc
mov
sti
cmp
adc
mov
int3
ret
sub
mov
sub
jl
jnp
insb
lea
negb
jl
and
xorl
push
push
or
cmc
repnz
mov
icebp
inc
pop
fdivr
imul
lret
xchg
divb
and
jb
iret
out
mov
dec
dec
pop
imul
cmp
test
mov
hlt
mov
movsl
cld
push
std
lods
imul
xchg
xchg
jg
mov
push
xchg
stos
sub
stos
stc
xor
jb
dec
mov
jbe
dec
loop
cmpsb
lret
jne
imul
fdivrl
and
inc
add
ss
les
ret
cmp
je
test
lahf
cmpb
std
inc
sbb
repnz
jle
outsl
mov
xchg
dec
std
clc
add
shlb
cs
addr16
dec
ja
inc
xorb
adc
sbbb
lret
shrb
in
push
push
mov
and
push
lock
ret
jp
movsb
dec
cwtl
mov
jmp
mov
and
pop
xchg
mov
lds
mov
je
sub
clc
jge
mov
mov
sub
push
aaa
push
mov
mov
xor
imulb
jmp
mov
in
jb
sahf
fs
push
push
stos
sub
dec
in
xlat
push
mov
in
dec
dec
test
pop
cltd
add
dec
outsb
mov
mov
mov
and
out
push
mov
andb
pop
call
out
aad
xchg
xor
pop
sbb
dec
jmp
sti
sbb
xor
dec
pusha
pop
data16
inc
stos
sub
jl
add
cmp
aam
mov
dec
sar
or
mov
inc
pop
mov
xor
ret
fs
jno
xor
push
out
out
daa
and
xor
mov
pop
movsl
xor
xchg
jno
out
shl
sti
fistpll
test
jo
mov
pop
loop
push
xchg
ds
sbb
subl
outsl
inc
sbb
cmpsl
cld
aas
scas
push
fdiv
sbb
mov
cmc
addb
mov
fdivr
out
imul
incl
adc
test
lcall
and
xchg
jl
lods
ret
and
jecxz
mov
jae
mov
in
rcrb
add
pop
pop
push
stos
adc
pop
xchg
sbb
ljmp
flds
idivb
jae
out
xchg
dec
cs
mov
cmp
xchg
lods
pop
mov
pop
push
inc
loopne
cmp
cmp
lret
mov
pop
in
xor
adc
push
mov
xor
xchg
mov
fistps
jne
dec
inc
sbb
movsl
fbld
scas
cmp
aaa
inc
imulb
test
enter
pusha
adc
fstpl
pop
addr16
pop
push
xlat
filds
or
call
sahf
dec
sub
mov
xchg
mov
mov
mov
gs
call
in
xorl
adc
std
dec
sub
stos
pusha
jl
mov
and
lea
sbb
sub
push
out
inc
mov
enter
fisttpll
pushf
dec
mov
pushf
dec
data16
push
push
xor
xchg
popf
lret
ljmp
pushf
add
sub
lds
ljmp
popf
mov
or
cmp
dec
sub
clc
push
sub
ljmp
and
xchg
jmp
lods
add
xlat
xchg
popf
dec
outsb
ss
xchg
xchg
jl
mov
push
add
les
sub
lods
push
inc
in
push
mov
or
movsb
cs
rorl
sti
adc
mov
subb
jno
inc
jbe
jl
cwtl
pop
jne
pusha
inc
cli
popf
inc
mov
cmp
mov
out
insl
cmp
cmc
sbb
imul
xchg
test
fsubrl
xchg
loop
adc
lret
sub
pop
hlt
aaa
das
lcall
fldl
js
dec
xchg
ret
lret
imul
testl
into
xchg
sub
ja
sub
push
in
pop
movl
into
icebp
jns
and
sub
sti
dec
push
push
jbe
bswap
push
adc
stos
in
cmp
imul
aad
out
cmpsl
leave
test
dec
push
cmp
cli
mov
stos
mov
fsubrl
or
outsl
aad
xchg
pop
cwtl
sahf
mov
stc
dec
dec
test
mov
mov
push
addr16
scas
sbb
scas
add
bound
sub
sub
repz
out
cs
repnz
int
ja
cmp
jg
les
fcom
hlt
sub
jne
imul
inc
imul
flds
les
mov
in
std
into
into
jbe
test
add
mov
lods
lcall
movsb
fsubrl
out
loop
scas
mov
ds
jo
mov
movsb
pop
inc
push
insb
fs
popf
popf
jecxz
add
adc
add
adc
lcall
mov
mov
fcmovu
cltd
mov
cmp
ret
in
enter
lds
test
inc
ret
movsl
lahf
pop
pusha
ljmp
inc
fs
jmp
jp
pop
adc
xor
repnz
sahf
xor
jb
int
out
xchg
cmpsb
and
sub
sub
xchg
xor
pop
push
in
mov
dec
jge
sub
push
mov
push
test
lds
out
sub
int
es
out
xor
call
aad
cmp
ss
aam
jle
sub
ret
cmp
in
mov
fisubs
pusha
outsb
mov
jbe
push
sahf
mov
fadd
or
mov
cmp
sbb
xchg
enter
xor
fs
jne
cltd
int
xor
in
movsl
fwait
lods
jecxz
iret
push
and
jg
sbb
dec
dec
out
mov
push
jp
sbb
je
and
out
or
lock
adc
imul
adc
pop
adc
test
and
sti
fisubrl
xor
mov
repz
jge
add
add
jg
pop
sub
cmc
sbb
dec
sub
sub
sub
add
lcall
jns
jmp
ret
fdivrl
pop
pop
dec
lret
int
call
jl
data16
int3
pop
jl
hlt
push
sub
stos
les
sbb
jns
sbb
fisubl
push
adc
pushf
mov
jecxz
pushfw
mov
push
mov
xchg
pop
inc
pop
mov
scas
mov
sbb
gs
outsl
fdiv
cltd
iret
push
jmp
cmp
std
sbb
adc
enter
cmc
lret
mov
jno
popl
in
lret
sbbl
sub
imul
pusha
dec
xchg
aaa
cmp
add
mov
shll
data16
xchg
inc
jae
xor
je
jmp
xchg
leave
xchg
push
mov
shlb
xlat
sbb
lea
cmp
xor
xor
mov
inc
xchg
shl
cs
xchg
sbb
pop
inc
adc
add
cmpsl
adc
sahf
pop
ret
fists
cmp
push
out
sbb
pop
sbb
cs
fidivrl
or
xchg
pop
xchg
jge
adc
inc
mov
pop
dec
adc
cld
mov
aad
and
or
aam
loope
mov
and
mov
xchg
ja
cmp
xor
in
aam
inc
gs
popf
rcll
adc
hlt
imul
pop
loopne
dec
inc
sbb
movsl
mov
data16
sub
push
push
test
xor
and
fidivrl
or
icebp
shll
arpl
rcrb
xchg
into
popf
lret
cmpsl
andl
push
cs
out
inc
mov
mov
ret
mov
iret
sub
repnz
movsl
pushf
popf
or
adc
push
repnz
push
pop
aaa
cmp
push
or
shll
dec
mov
cld
inc
lahf
movb
inc
sbb
push
in
or
jbe
inc
add
mov
add
xor
inc
mov
or
push
test
mov
jne
xor
pop
mov
into
fucomip
ss
fwait
ret
mov
test
jp
subl
push
mov
sahf
insl
popa
inc
pop
repz
or
scas
aad
aam
lods
cmp
imul
sti
mov
xchg
add
insl
std
loop
outsb
scas
rorl
dec
lea
pop
int
jl
jbe
in
andl
adc
mov
cli
mov
xor
push
mov
lcall
adc
xor
mov
pop
rol
dec
cltd
lock
jnp
scas
in
sbb
stc
popa
jne
lahf
imul
push
rcrb
jo
mov
lcall
inc
sbb
sbb
es
call
loop
push
xor
mov
lahf
icebp
pop
repnz
out
ret
xor
cmp
adc
ja
mov
lret
ret
xchg
repnz
xchg
pop
movsl
mov
cmp
leave
rcrb
fsubr
sub
mov
clc
pusha
sub
repz
or
pop
addr16
lret
inc
mov
sbb
or
mov
cmpsb
xchg
rorl
inc
jmp
scas
mov
in
adc
push
leave
imul
pop
add
lret
out
cs
bound
add
cmp
ljmp
jbe
jnp
inc
sbb
cli
mov
adc
sub
xlat
adc
or
add
in
divl
adc
cli
dec
mov
sbb
std
jne
push
aam
cmp
shl
int
add
xchg
fistpll
sbb
mov
xchg
inc
repz
addr16
rclb
or
push
cmp
fcmove
adc
in
mov
dec
sub
popf
test
aad
shlb
add
xlat
cmp
movsl
stos
sahf
jmp
add
lret
std
add
jmp
push
dec
jmp
dec
cmpb
call
xchg
in
inc
arpl
and
inc
sub
pusha
lahf
fcoms
repz
movsb
pop
jbe
mov
pop
shlb
and
decb
mov
adc
ljmp
jl
ljmp
mov
xchg
aaa
jmp
add
push
jl
aad
rolb
or
push
stc
fisubrs
dec
lahf
in
push
aas
popf
std
mov
mov
or
scas
fildll
sti
mov
and
repnz
and
push
adc
inc
test
adc
push
fmuls
sub
cs
in
test
adc
sub
adc
inc
sub
jno
push
cmp
mov
inc
clc
inc
popf
rclb
xor
lods
sbb
adc
fidivs
mov
test
mov
mov
fnstsw
loope
or
cmp
aam
leave
lret
mov
int
or
aas
sub
cmc
inc
cmc
cmp
sbb
push
jno
sbb
addb
pop
insl
scas
in
pop
jbe
sbb
mov
adc
movsl
test
enter
mov
adc
inc
and
jl
jecxz
dec
lret
mov
mov
aas
lret
sub
and
and
sub
sarl
fucomi
in
adc
fcoms
dec
adc
xchg
fcmovbe
cltd
add
adc
das
inc
popa
pop
mov
call
dec
loopne
aas
pushf
or
and
sbbl
xchg
mov
cmc
outsl
fwait
pop
sbb
lods
jecxz
inc
dec
mov
jge
adc
loope
fbstp
subl
ret
decl
xlat
popa
adc
aad
test
jo
int3
ja
popf
inc
clc
push
je
test
outsl
pop
xor
add
mov
mov
js
enter
pop
xor
jae
jecxz
inc
adc
lahf
dec
inc
popf
and
fldl2e
and
std
jle
mov
xchg
call
mov
pop
xor
push
push
xchg
jg
mov
push
push
ror
mov
loope
aam
icebp
dec
dec
pusha
inc
push
pop
push
dec
nop
xchg
jmp
popf
mov
xor
call
fs
movsb
push
cmp
in
xchg
sub
mov
repz
lods
mov
shl
movsb
adc
sub
sub
out
shlb
cmp
aad
mov
jno
adc
cmp
jno
fldl
mov
icebp
mov
out
shl
pop
daa
mov
arpl
inc
or
stos
push
xor
sub
test
adc
sarb
pop
dec
pop
jl
mov
and
inc
jp
jg
push
jnp
adc
jne
jp
cs
rorb
xor
popf
aam
jge
fdivrl
push
int3
add
push
sbb
mov
dec
pop
mov
dec
mov
in
cmpsl
mov
shl
mov
lods
stos
rcrb
jle
xchg
jge
lock
es
dec
sbb
mov
push
iret
xorb
loope
cmp
and
xor
mov
add
jno
push
notl
cmp
orl
xor
fdivs
jmp
popf
and
dec
cs
iret
adc
dec
int
pop
mov
mov
sbb
mov
js
movsb
pushf
in
idiv
fildl
mov
fisubl
lea
cwtl
pop
sbb
jl
rcrb
daa
push
dec
test
ss
les
and
sub
pop
or
xchg
dec
scas
push
or
xchg
ret
jb
aam
adc
bound
xchg
mov
add
test
repnz
inc
inc
fwait
daa
fildl
lock
adc
adc
fs
dec
sub
jp
jmp
mov
pusha
jno
outsb
movsl
push
fmul
cmpsl
ret
pop
fisttpll
pushf
push
jae
in
dec
movl
js
fsubs
shll
cmp
lock
cs
loope
stc
fcmovnbe
bound
push
call
outsb
xor
dec
add
push
mov
stos
sub
stos
xchg
sub
cmpsb
fnstsw
mov
test
nop
mov
push
fidivs
stos
mov
and
fnstsw
add
addl
and
shlb
fadds
push
pop
adc
cmpsl
and
ret
mov
scas
mov
xchg
sub
cmc
imul
aad
xor
rcrl
mov
or
mov
daa
xor
pop
jnp
adcb
es
dec
push
or
mov
or
or
sti
dec
pop
mov
popa
ret
aas
xor
icebp
loope
es
loope
cmp
leave
sbb
es
repnz
xchg
clc
adc
xchg
ds
inc
inc
sub
out
push
xchg
jg
xchg
push
and
lods
adc
shr
repz
aaa
jecxz
push
add
push
jb
and
cltd
mov
add
mov
and
lret
outsl
xchg
push
cmc
jmp
mov
push
in
mov
pop
xchg
xchg
in
add
jg
mov
cmp
lret
push
or
stos
pop
dec
jle
cmp
add
xchg
xor
test
dec
insl
movsb
adc
push
push
sub
xor
imul
push
jns
std
sbb
xchg
icebp
adc
sub
ret
call
xchg
sub
cs
int
sahf
or
scas
int3
cmp
pop
mov
iret
movsl
ret
adc
dec
or
ds
clc
or
rorb
fistl
lods
inc
jne
jge
push
jle
mov
sbb
hlt
pop
sub
test
sub
decl
push
rorb
mov
fildl
mov
add
inc
and
or
sub
cltd
add
xor
outsb
xchg
sub
xor
or
stos
sub
pop
mov
mov
sahf
mov
add
clc
jno
mov
mov
rcr
loopne
push
mov
pop
out
or
testl
call
mov
jno
pop
add
iret
scas
ror
mov
daa
test
rorb
xchg
cmp
into
sub
sti
call
out
mov
jns
xchg
std
add
xchg
lds
arpl
out
inc
xchg
fiadds
sub
mov
mov
cmp
adcl
inc
call
xchg
inc
lret
jle
adc
or
call
cmp
xchg
popa
pushl
dec
pop
aaa
pop
push
sahf
dec
imul
mov
sbb
sbb
sub
imul
lret
mov
mov
pop
jbe
mov
rcl
addr16
jl
enter
mov
into
aas
lret
rcll
fildl
lods
push
popa
inc
push
mov
popa
mov
fistl
into
test
loope
cwtl
push
out
sahf
xorl
in
or
jp
inc
aad
out
lcall
jns
adc
addr16
push
sti
aas
and
or
dec
dec
in
adc
push
imul
jo
mov
push
iret
xor
inc
jp
mov
jg
cmp
loop
popf
add
cmp
std
cmp
lds
pusha
inc
lcall
mov
orb
jbe
inc
mov
movsb
push
aam
hlt
sub
mov
out
lret
rorb
cwtl
ret
sahf
lea
arpl
push
hlt
cmpsb
aas
test
xchg
mov
mov
into
call
pop
dec
mov
iret
xchg
cmp
out
jns
sub
xor
mov
mov
addb
inc
sbb
mov
push
iret
add
inc
lret
sbb
inc
sub
xchg
cmp
mov
add
popa
add
pop
adc
jl
and
jmp
push
dec
icebp
jns
cwtl
pop
in
outsl
lods
mov
push
out
js
pop
dec
lret
insl
jne
push
mov
pop
push
sti
lahf
inc
or
orl
mov
lods
inc
into
int3
mov
jb
adc
add
pop
ss
cld
dec
test
sub
mov
lahf
mov
dec
or
mov
icebp
in
dec
and
push
xorl
ja
imul
clc
xor
pop
cmp
xchg
sub
sub
lods
mov
jae
and
mov
xor
scas
lea
popf
js
sub
mov
loopne
lock
pop
rorb
mov
adc
inc
ficoml
mov
sbb
push
pop
rorb
mov
adc
inc
ficoml
mov
sbb
push
pop
rorl
mov
adc
pusha
cli
imul
mov
sbb
push
pop
push
mov
mov
adc
pop
jb
adc
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
mov
push
mov
out
sbb
sbb
jge
or
pop
add
add
or
add
add
and
insl
add
popl
add
add
inc
add
and
adc
rolb
add
add
pusha
add
rolb
add
jno
jbe
rolb
and
sbb
jno
pop
add
add
and
xchg
add
add
sub
add
jno
add
push
add
jno
push
add
add
xchg
add
add
add
add
lahf
add
add
add
add
add
popl
add
lods
add
add
sub
add
xor
add
push
add
sub
add
sbb
inc
add
pusha
add
add
add
add
pop
add
add
add
add
add
add
inc
add
add
add
add
lret
add
add
inc
add
add
inc
or
add
jbe
popf
add
addl
imul
add
fildl
test
push
add
add
roll
jno
sbb
into
add
add
add
rolb
add
pop
add
inc
add
add
popf
add
jo
pop
add
add
leave
add
mov
inc
add
add
add
add
leave
add
add
add
add
add
jb
and
lcall
add
add
add
add
sub
add
add
add
add
add
add
inc
add
dec
add
icebp
add
add
add
add
add
add
add
sub
add
add
inc
add
add
add
xor
pop
add
mov
loope
daa
add
cmc
add
push
add
add
add
iret
add
popl
add
pushf
add
add
add
add
add
add
add
add
add
lods
add
lret
add
add
inc
add
xor
inc
add
sbb
lds
jbe
add
push
add
popl
jns
pushf
add
add
add
or
and
cwtl
add
add
dec
add
add
push
add
add
add
pop
add
inc
add
add
jo
sbb
jno
dec
add
add
add
add
xchg
add
popl
push
add
rolb
add
add
outsb
add
add
inc
add
jno
inc
add
add
add
add
add
add
add
add
add
dec
add
add
add
cmp
pop
add
add
add
popf
add
add
mov
pop
add
add
add
out
add
sub
add
inc
add
add
sub
and
popl
pop
add
out
add
inc
add
adc
or
fildl
sbb
and
add
add
add
add
add
add
pusha
add
adc
adc
cmp
mov
adc
adc
lods
add
add
in
add
add
add
add
add
add
add
add
ret
add
add
add
add
movsb
add
jo
push
add
roll
inc
add
add
push
mov
inc
insb
cltd
push
les
xchg
mov
cs
inc
adc
adc
pop
cmp
pop
sub
int
mov
mov
lret
inc
sarl
lret
sub
pop
int
lock
mov
push
pop
and
lds
mov
daa
mov
dec
jbe
cmp
cmp
aaa
pop
inc
sbb
jnp
add
bound
out
dec
sbb
incb
push
insl
xor
adc
lahf
dec
stc
sub
jp
loope
add
push
push
sbb
out
aas
jp
lahf
mov
push
scas
add
sub
dec
cmp
fdivr
push
lock
outsb
jb
mov
sub
mov
xlat
sti
aas
dec
cmpsl
int
or
or
loopne,pt
cmpsb
cmc
push
push
call
and
add
cmpsl
ss
enter
mov
lea
mov
push
out
call
sbb
nop
or
out
jb
stc
jne
mov
pop
mov
push
pushf
mov
mov
dec
cmpsl
loopne
add
and
ret
and
cmp
in
xor
lock
cmp
lret
aaa
cmpsl
ljmp
imul
shlb
das
repnz
ret
pushl
imul
pop
in
shll
pop
dec
or
orl
mov
jge
sbb
xor
ja
push
xlat
push
fldenv
push
mov
pop
adc
xchg
out
test
in
push
outsl
lods
test
push
xlat
xchg
lods
ss
xchg
cmpsb
bound
sub
insb
nop
xor
sarl
jmp
mov
out
lret
jp
es
pop
pop
cmpb
out
imul
fistl
mov
test
push
popl
add
or
in
push
cmp
jle
xor
je
add
xor
pop
ret
mov
push
movsb
imull
loope
jns
es
aas
sub
cmpsl
lret
testl
pusha
and
and
xor
dec
cmp
and
pop
cmp
and
addl
stc
movsb
adc
lock
test
jmp
or
jo
aas
xchg
fsubrp
cs
gs
adc
int
ret
fisubl
ficoms
popl
loope
lds
mov
cmp
int
into
pop
sti
pop
shl
mov
mov
ss
mov
dec
mov
fisubl
xor
ljmp
test
xor
xchg
enter
jae
test
in
notl
and
dec
mov
mov
cmc
push
lock
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
