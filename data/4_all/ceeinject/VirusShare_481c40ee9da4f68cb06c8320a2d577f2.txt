adc
decl
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
imul
gs
xor
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
push
push
push
push
call
push
lea
push
push
call
add
leave
ret
jl
insb
xor
icebp
or
push
push
cld
movsl
in
mov
test
xchg
mov
lds
pop
add
sub
sbb
or
cld
movsl
in
aad
test
xchg
jl
lods
cmc
pushf
xchg
pop
add
sub
sbb
or
cld
or
int3
xchg
mov
mov
aad
and
and
cmpsl
xchg
pop
lahf
hlt
push
popf
cmp
mov
clc
and
jle
int
pop
xor
out
add
ljmp
icebp
adc
and
sbb
xchg
add
repnz
call
push
mov
faddl
push
stc
cmp
ss
dec
adc
cltd
lret
jno
imul
inc
in
or
cmp
lret
mov
gs
lahf
push
dec
adc
mov
push
out
cmc
push
or
cmp
lret
in
adc
clc
xchg
xor
and
and
or
mov
insb
xor
cmp
sub
sbb
or
cld
movsl
in
mov
test
xchg
mov
lds
xor
or
js
push
add
fsubr
mov
mov
lret
and
and
sub
pop
push
cltd
fnstsw
cli
mov
mov
insb
xor
jo
gs
sbb
or
cld
movsl
in
mov
test
xchg
mov
lds
pop
add
sub
sbb
or
cld
movsl
in
mov
test
xchg
mov
lds
shll
leave
idivl
sti
xchg
mov
jmp
sbb
push
cmp
dec
mov
sbb
jno
and
iret
and
mov
sbb
inc
ret
shr
stos
enter
pop
nop
cmp
movsl
xrelease
mov
adc
fcmovb
adc
mov
mov
sub
stc
cmp
rorb
leave
pusha
sahf
push
mov
shlb
mov
movsb
test
hlt
jmp
out
push
sbb
pop
pop
inc
inc
xchg
sub
lret
ret
movsl
imul
jp
mov
repnz
dec
lock
jg
pop
icebp
and
imul
shlb
fists
shl
fidivrs
mov
nop
push
mov
aad
xchg
inc
aam
mov
dec
dec
mov
sub
aaa
cmp
pop
je
mov
stc
adc
les
push
and
fdivr
test
inc
add
pop
fsubl
cli
pop
aaa
out
and
out
rcll
pusha
pop
enter
dec
nop
lret
push
aaa
sub
xchg
push
lahf
lahf
aas
dec
xchg
jbe
pop
dec
xchg
loopne
lock
lret
mov
std
scas
cmp
pusha
adc
movsl
pop
repz
mov
out
addr16
stos
cmp
das
push
divb
xor
adc
arpl
or
popa
push
cltd
std
mov
xor
pop
addr16
jno
scas
popa
arpl
popa
punpcklwd
sub
push
insb
scas
mov
test
xchg
mov
xchg
mov
jmp
jb
lods
sub
ja
fldpi
dec
frstor
icebp
les
mov
test
not
je
xchg
xor
jns
inc
pop
adc
hlt
cmp
adc
sbb
inc
sub
push
mov
lds
mov
mov
or
jge
pop
outsl
mov
jns
mov
add
loope
stos
into
lret
dec
gs
jecxz
jmp
fcmovbe
adc
gs
dec
in
pop
repnz
fbld
gs
adc
xor
add
shrl
stc
pop
imul
imul
xor
mov
dec
mov
pop
and
std
push
and
add
in
fdivrp
notl
stos
in
mov
push
or
pop
fbstp
push
push
push
xor
pop
pop
or
lods
push
xorl
sbb
jge
aam
push
mov
mov
adc
sub
pushf
outsb
jns
push
jnp
jg
jmp
in
dec
in
jnp
daa
mov
mov
sub
mov
push
mov
lahf
mov
push
and
add
sbb
mov
testl
xor
test
cld
adc
fadds
cmp
mov
decl
in
mov
dec
std
adc
in
insw
jl
pop
adc
mov
cmp
stos
push
or
inc
icebp
test
rcr
fists
pop
xchg
bound
mov
sub
pusha
int
inc
insl
btr
mov
subl
push
ss
cs
clc
popf
cli
mov
repnz
sub
es
mov
and
sub
dec
pushf
shll
cmp
xor
add
jne
cmp
mov
and
sti
xchg
dec
loopne
pop
pop
mov
lods
scas
lea
push
push
aam
hlt
std
xor
xor
mov
iret
jge
xor
push
aam
cmpsb
ja
add
iret
xchg
jg
dec
mov
lea
hlt
mov
push
dec
xchg
outsb
in
mov
adc
cmc
das
mov
cmpsb
fwait
push
fsubrs
iret
outsl
adc
cmp
call
outsl
mov
sub
push
dec
push
jmp
fs
xor
mov
scas
mov
imul
arpl
inc
push
gs
xchg
dec
xchg
lock
fstpl
add
fwait
popf
cmovo
repnz
test
insb
insl
cmova
cltd
gs
mov
idiv
hlt
mov
inc
mov
enter
repz
repz
addr16
sbb
xchg
rcrl
scas
hlt
lret
mov
dec
pop
mov
cmp
pop
push
mov
inc
pop
jnp
fidivrs
adc
push
lcall
inc
jge
push
pushf
outsl
mov
mov
cmp
mov
lods
ds
jo
aam
fadds
hlt
int3
or
fcoms
or
push
push
aaa
pop
mov
shrb
inc
pop
xchg
xor
push
mov
ja
mov
inc
inc
pop
ret
sbb
xchg
mov
in
les
movsb
dec
mov
push
sub
lahf
push
ret
xchg
arpl
icebp
dec
inc
add
jae
mov
stos
or
stos
mov
lds
mov
popa
mov
cmp
jno
jne
sub
test
out
testb
nop
xorl
test
push
inc
adc
std
xchg
stos
stos
je
add
divl
gs
pop
addl
mov
pop
or
mov
lcall
sbbl
cld
icebp
sbb
roll
mov
pop
cwtl
jge
xchg
inc
sbb
mov
repnz
insb
cmpsl
jbe
cld
call
cmp
jp
adc
xlat
inc
sub
hlt
inc
sbb
in
push
mov
sbb
fdivs
jb
lea
and
aaa
add
out
pusha
out
mov
cmpsl
leave
and
ret
and
mov
fs
jns
addl
dec
sub
adc
pop
fs
inc
ljmp
pop
gs
lcall
enter
icebp
xorl
cli
sarb
movsl
mov
lret
mov
fisubrs
leave
adc
imul
movsb
sbb
push
inc
mov
jo
cmp
and
mov
cli
aad
cmc
push
mov
int3
jmp
sub
xor
scas
mov
mov
mov
sub
mov
pop
xchg
mov
pushf
test
dec
nop
das
aas
movsb
fbstp
sub
icebp
mov
xchg
cwtl
pop
daa
imul
cmpsb
cmpl
iret
scas
push
ss
push
dec
jle
or
mov
lcall
jp
mov
or
icebp
mov
aas
fcoms
inc
addr16
and
adc
bound
sbb
in
lahf
cltd
fsubrs
lods
xchg
jno
cmpsb
sbb
mov
int
pop
xchg
push
scas
inc
ss
sti
js
xchg
mov
fisttpll
add
imul
jmp
cltd
sbb
pop
sub
sub
arpl
lods
mov
mov
inc
cmc
and
cmp
pusha
pop
pop
cmp
shlb
dec
or
mov
pop
jl
xchg
sub
testb
test
sti
push
psubw
adc
sti
dec
push
mov
lds
sbb
shl
sub
xor
push
mov
in
sar
pop
ficoms
sbb
aam
fsub
xor
test
xor
les
xchg
lds
test
sbb
jns
push
frstor
xor
das
mov
scas
aas
jle
push
insl
sbb
pop
ret
arpl
mov
push
test
fstps
aas
mov
lods
mov
mov
into
stos
xor
test
push
popa
inc
dec
jg
pop
xor
dec
aas
outsb
xchg
shlb
adc
cmp
dec
inc
lock
push
dec
sbb
jmp
fcmovu
out
cmc
push
cld
sti
leave
fdiv
mov
stos
and
adc
fisubl
lds
sub
lret
and
push
mov
sbb
inc
jns
mov
mov
pop
ds
mov
insl
iret
cmp
into
xchg
clc
lock
ss
add
jge
adcl
pop
jbe
jg
fdivp
mov
pop
xchg
negb
mov
test
lea
mov
jge
xor
and
in
inc
icebp
arpl
sub
push
jg
inc
or
lret
stc
jge
jb
adc
mov
mov
inc
mov
and
movsl
xchg
add
mov
xor
and
jp
leave
out
fildll
mov
lret
inc
aam
ds
fldcw
fisttpl
leave
lret
adc
sbb
or
add
repnz
push
popf
fstps
lods
lret
add
xchg
sub
enter
add
arpl
pop
scas
ret
push
sub
lods
inc
jnp
push
es
or
dec
pop
inc
sbb
sar
add
aad
vmovdqu
push
pushf
popa
or
cmp
mov
or
lret
jns
sub
loope
popa
xchg
fsts
xchg
shl
mov
cmpsl
inc
jge
scas
jno
sbb
jge
loop
loopne
push
in
pop
mov
or
xchg
mov
fwait
jbe
imul
pop
or
sti
add
sarl
cmpsb
inc
daa
js
and
rorl
jo
mov
sub
xchg
pop
mov
mov
shl
fsubrl
popa
call
sbb
pop
mov
adcl
das
andb
xor
fs
cs
std
lret
sub
fcoml
lods
jecxz
sub
push
stc
popf
mov
mov
mov
sbb
push
xchg
sbb
jbe
pop
xor
mov
sahf
mov
lock
fucom
xchg
sbbb
adc
jecxz
test
mov
xor
in
xchg
xor
in
mov
xchg
sbb
inc
jne
xchg
sub
cld
dec
pop
push
mov
fsubrl
shlb
add
mov
test
imul
xchg
xor
shrb
insl
push
rcrb
xor
jmp
cwtl
stos
pusha
mov
or
popf
jp
call
pushf
push
jecxz
mov
dec
out
ljmp
mov
dec
loope
shlb
fwait
out
dec
outsl
gs
in
push
leave
mov
pop
mov
jp
rorl
sti
hlt
scas
jnp
dec
mov
out
sbb
or
icebp
repnz
fnstcw
jne
mov
mov
out
add
jl
out
and
xor
arpl
or
cmp
pop
and
ret
push
push
out
cmp
jl
cmp
cmc
xor
jbe
push
in
ja
stos
insb
push
inc
mov
xor
out
dec
adc
ss
mov
cltd
leave
jl
fcomi
pusha
sbb
mov
lods
cmp
adc
clc
and
into
aaa
lahf
cmp
ret
shl
or
jae
lds
ds
daa
jecxz
push
xor
das
mov
and
push
or
push
jnp
mov
cmp
and
xlat
mov
clc
clc
jg
push
mov
sar
cmp
cmpsb
mov
cmc
pop
mov
aad
loopne
fcmovb
test
test
sbb
gs
lret
jg
fs
and
cmp
jbe
data16
pop
addl
addr16
popf
cli
repnz
mov
pop
xorl
mov
mov
inc
aam
push
mov
jb
jle
and
fisttpl
roll
lea
outsl
dec
dec
scas
loop
mov
lret
es
xlat
xorl
cmp
es
adc
push
nop
jle
push
xor
or
inc
js
orl
stos
adc
loopne
mov
sahf
adc
stos
xchg
jbe
inc
sarb
cmp
and
dec
pusha
jmp
and
jbe
xor
pop
xor
mov
mov
mov
leave
pop
insl
adc
dec
mov
jmp
idiv
fstl
cli
rclb
out
in
xchg
adc
sarl
pop
dec
js
in
add
decb
out
mov
je
es
bound
fld
divb
sbbl
pop
in
aaa
xchg
push
mov
add
stos
inc
ds
stos
imull
cwtl
rorl
sub
dec
mov
jb
test
inc
mov
cs
imul
cwtl
xor
mov
adc
data16
movsl
pop
dec
adc
inc
jbe
add
jbe
repnz
mov
mov
push
mov
and
loope
aaa
stos
inc
rcrl
arpl
sub
adc
mov
in
int
pop
cmp
jecxz
insl
or
lea
inc
adc
inc
pop
sahf
inc
pop
dec
inc
push
lcall
aad
pop
sub
jp
dec
aaa
fcompl
pushf
mov
ljmp
adc
mov
pop
cmc
or
loope
adc
aad
pop
shll
pop
outsb
test
jns
ffree
ja
test
xchg
adc
ja
mov
popa
xchg
xchg
subl
push
fwait
mov
fdivrs
fisubs
ret
rcrb
pop
daa
lcall
int3
repz
insl
sub
push
mov
sbb
in
outsb
dec
jp
loop
mov
or
or
pop
iret
jl
loope
lret
movb
xchg
out
lcall
push
mov
pop
stos
jge
dec
test
cmc
dec
jnp
ficomps
jbe
movsl
pop
cmc
adc
popa
fdiv
inc
ret
cs
rorb
mov
shll
test
and
lret
mov
pop
inc
stos
sbb
pop
ret
jb
sahf
xchg
cmp
aad
xor
insl
mov
in
jecxz
rclb
iret
jge
mov
or
pop
fwait
xchg
out
or
cwtl
mov
popa
ret
icebp
cmp
loopne
push
pushl
rclb
xchg
setp
stos
movsb
inc
addr16
movsl
pusha
loope
or
sub
dec
dec
dec
inc
fwait
out
loopne,pt
mov
xor
mov
mov
aaa
mov
shr
push
repnz
push
inc
sub
ss
pop
jmp
in
lcall
je
jno
xor
dec
ljmp
test
mov
call
push
inc
xchg
sbb
jle
ss
fstpl
adcl
pushf
push
jg
pop
jmp
sbb
and
mov
hlt
xlat
imul
xchg
or
xor
mov
fcmovbe
xlat
fmuls
mov
cmp
pop
pop
mov
idiv
fstpl
adcb
mov
jp
movsb
sub
inc
in
jg
mov
push
mov
popa
lea
xchg
in
ds
aaa
add
sub
jno
in
mov
pop
ficoml
repz
out
lods
inc
cmp
in
in
and
pop
call
inc
sbb
fidivl
popf
mov
dec
test
push
sbb
mov
xchg
xchg
xor
aad
jmp
aad
popf
dec
inc
push
jne
mov
lods
xchg
sbb
or
ret
cld
and
and
and
mov
inc
cmc
inc
mov
rcl
cmp
loop
clc
das
gs
xchg
hlt
pop
sti
lods
adc
rolb
gs
push
lock
jecxz
imul
mov
shll
cmp
xchg
fucomp
adcl
mov
test
add
inc
gs
int
mov
outsb
mov
sbbl
mov
inc
fwait
mov
cld
mov
or
inc
sub
lods
push
rclb
pushf
dec
enter
shrb
xchg
je
pop
out
mov
push
out
mov
mov
enter
mov
mull
scas
mov
outsl
cmp
cli
add
repnz
xor
sarl
pop
ret
sbb
insb
ret
dec
and
xchg
sbb
ja
lcall
aam
jne
mov
or
or
cmpsb
xor
xchg
cmc
pop
mov
lcall
jmp
dec
shr
pop
test
stos
icebp
cmp
shl
orb
or
loop
jbe
pusha
dec
lods
push
js
push
leave
lds
pop
or
lahf
jns
fcmovb
xchg
sahf
jmp
insb
cmpsl
sub
mov
movsl
movlps
dec
ds
cmp
fwait
mov
inc
lret
pop
cmp
sbb
aam
out
xchg
xchg
mov
dec
jmp
pop
adc
push
dec
xlat
cmp
sub
cltd
roll
jae
dec
xchg
and
or
xchg
dec
test
iret
out
jo
out
insl
fstl
and
mov
mov
sbb
mov
ljmp
cmp
lret
push
mov
pop
inc
int
punpcklbw
bound
mov
mov
cli
std
dec
cmp
xchg
mov
sahf
mov
mov
mov
leave
adc
mov
push
mov
leave
or
sub
rolb
push
testl
insb
or
sarl
add
orl
sbb
inc
iret
fsubrs
ds
dec
jge
pop
mov
testl
jne
dec
sub
lahf
into
push
pop
adc
rcr
lret
mov
pop
sbb
lret
mov
xchg
loope
outsl
inc
lock
mov
insl
test
add
or
sbb
jns
or
das
jno
cmp
fs
clc
hlt
int3
leave
xchg
cmp
ljmp
call
push
dec
lds
lds
pop
push
sbb
mov
pushf
jbe
push
jmp
inc
cltd
inc
or
sub
xor
movsb
ss
jno
jg
mov
push
dec
sub
jbe
or
test
nop
addr16
in
jne
mov
ret
xchg
inc
fimuls
sub
pop
cmp
xchg
pxor
lds
jo
cmp
popf
shll
adc
lea
addr16
sub
mov
push
test
popf
xor
fs
ret
mov
mov
adc
mov
loopne
lods
jnp
xchg
adc
inc
mov
push
mov
rorb
sub
ds
or
pop
mov
test
aaa
into
mov
xor
aaa
xor
jecxz
sub
add
iret
sub
mov
sub
pusha
mulb
mov
cld
sub
shl
pusha
mov
cmp
ja
inc
pop
and
push
mov
clc
gs
jg
imul
lret
jb
nop
xchg
push
ret
test
dec
sub
negb
loop
dec
test
push
ret
sbbl
pop
fwait
and
andl
fidivrl
pop
mov
sub
mov
xor
mov
jmp
adc
and
pop
xor
rcl
outsb
out
mov
push
lods
orb
fs
cltd
insl
add
jg
mov
lods
pop
inc
sbb
or
inc
push
iret
les
cmp
push
xchg
test
loop
pop
jl
push
pop
pop
inc
add
or
adc
xor
and
push
adc
add
mov
push
inc
in
jecxz
mov
cwtl
xor
jmp
xchg
ss
dec
je
mov
fwait
insl
add
movsl
cltd
rcll
stc
mov
xchg
xchg
out
call
addr16
or
pop
dec
incb
insl
jmp
fs
fwait
jne
lods
ds
jmp
or
or
pop
inc
loop
pop
and
jmp
mov
push
data16
push
in
roll
mov
mov
fnstsw
mov
sub
jmp
mov
std
leave
inc
movb
ret
cmp
xchg
mov
ss
pop
or
ret
ja
dec
and
lea
jg
call
arpl
popf
pop
ror
cwtl
rep
addr16
add
pop
hlt
pop
in
cmp
shlb
add
scas
mov
jnp
fs
mov
jns
shll
sti
or
popf
jge
xchg
mov
shr
cmp
mov
pop
mov
pop
call
fsubrs
sbb
jge
pop
add
inc
push
or
aaa
test
jbe
xchg
ds
mov
loope
in
mov
mov
jb
xchg
scas
pop
mov
or
enter
test
adc
dec
cmp
push
je
cmp
push
in
push
xchg
dec
adc
rol
cmp
add
out
gs
shlb
test
lea
out
rcrb
fcmovnu
fs
jmp
mov
cltd
mov
xlat
cmp
xor
mov
lret
dec
mov
and
arpl
int3
push
inc
add
pop
cmp
out
mov
sti
xchg
cmp
subb
xchg
dec
push
in
dec
or
jmp
sbb
xchg
aaa
inc
in
cmpsb
xor
and
xor
nop
sub
adc
and
stos
adc
xchg
push
or
push
and
daa
pop
xor
ret
lods
sarl
lret
inc
fcmovb
xor
push
mov
mov
outsl
outsb
mov
xchg
jmp
imul
inc
adcl
xchg
xchg
jo
sti
mov
add
pusha
lods
dec
lcall
mov
push
adc
inc
sbb
cmp
push
enter
dec
stos
jne
mov
fidivrl
adc
aad
push
int
dec
dec
dec
out
mov
or
into
rep
shrb
cmp
mov
xor
cmp
sub
sbb
or
cld
movsl
in
mov
test
xchg
mov
lds
pop
add
sub
sbb
or
cld
movsl
in
mov
test
xchg
mov
lds
faddl
sub
sbb
mov
and
int3
xchg
mov
lds
pop
add
sub
sbb
or
cld
movsl
in
pop
jbe
int3
loop
insl
fmull
in
cmp
sub
in
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
mov
xchg
xchg
stos
out
xlat
cmp
aaa
sbb
or
jns
imul
dec
push
mov
xchg
neg
leave
scas
sub
sub
sbb
pop
pop
jns
pop
ja
inc
dec
push
mov
xchg
test
daa
or
jne
jbe
xor
and
aam
cltd
out
call
sbb
mov
into
push
outsl
jno
push
or
hlt
push
aas
loope
xor
jb
iret
pop
fnstsw
divl
addr16
pop
inc
mov
inc
cmpsl
push
mov
cmp
insl
ja
xor
subb
mov
jns
xchg
ja
ret
mov
scas
lods
rolb
call
sub
xor
xchg
mov
dec
dec
push
jmp
xlat
imul
xchg
lods
cmp
cmp
out
jnp
clc
stc
adc
inc
pop
test
ficoms
jmp
sub
rcll
lcall
cmp
cmp
inc
dec
inc
jo
mov
cltd
xchg
neg
rcl
and
xor
add
adc
popa
addr16
inc
inc
dec
ds
int3
idiv
xchg
xchg
mov
leave
cmpl
inc
ss
insl
arpl
or
sub
and
ret
mul
stc
xchg
xchg
mov
mov
jp
dec
dec
sbb
jns
add
adc
push
cmc
loope
mov
jmp
xlat
cmp
sub
sbb
or
jns
imul
cmpsl
test
xchg
stc
out
neg
leave
xlat
cmp
sub
sbb
or
jns
imul
cmpsl
xchg
es
push
xchg
xchg
mov
fisttpl
xchg
sbb
imul
std
daa
andb
xchg
dec
jo
xchg
gs
push
out
sti
cltd
inc
scas
cmp
xor
jne
in
insl
movsb
aad
std
pop
sbb
sub
sub
pop
jb
les
addr16
mov
push
test
fimull
sub
xchg
adc
jmp
mov
std
add
pushf
roll
push
mov
daa
mov
stos
pop
mov
jae
and
or
inc
push
mov
leave
pop
lret
sti
js
mov
call
leave
push
nop
inc
fsub
cmc
push
or
fwait
hlt
inc
xchg
mov
lret
pop
imul
ljmp
xchg
icebp
lods
repz
jmp
adc
scas
fidivrl
lods
int3
or
fisubrs
addr16
popl
jnp
mov
mov
outsl
loop
out
ljmp
dec
jecxz
mov
push
test
iret
jb,pn
ror
cmp
outsl
push
mov
faddp
push
and
inc
clc
jns
adc
cli
inc
push
insl
jmp
out
add
int
fisttpll
adc
addr16
call
lahf
jle
push
loopne
mov
fs
in
adc
out
jae
imul
sbb
or
jb
in
cmc
fldenv
adc
or
push
pushf
sbb
pop
stc
push
repz
mov
sbb
popf
inc
dec
out
in
stc
xchg
outsb
mov
mov
xchg
mov
or
scas
push
jbe
scas
xchg
xchg
test
ret
push
dec
or
out
mov
repz
jb
outsb
add
ljmp
fwait
push
lret
call
adc
lods
push
add
mov
inc
and
sbb
rcll
push
and
enter
add
ds
adc
mov
jb
ret
xor
mov
add
gs
xchg
inc
fadds
jbe
pushf
mov
fcompl
pop
pop
inc
stos
adc
mov
xor
or
jbe
outsl
aaa
dec
add
in
push
shl
sub
repnz
clc
dec
xor
test
fmuls
std
fsubs
leave
out
out
out
jno
mov
mov
dec
inc
jae
in
std
ret
xchg
stos
pusha
lds
xchg
inc
aaa
lret
nop
call
adc
fs
and
shlb
jbe
sbb
mov
in
pop
addb
out
jge
mov
pop
repnz
aaa
divb
xchg
rcrb
insl
push
int
lods
out
sahf
fsts
call
fisttpl
xor
gs
jecxz
repnz
mov
insl
or
into
sbb
subb
pop
fisubl
mov
sahf
fcmove
jbe
clc
lret
mov
jg
push
shl
sbb
inc
test
dec
pop
ds
shrb
inc
push
repnz
adc
jno
shr
cli
es
push
sti
cmp
pushf
push
adc
mov
les
ret
fmull
repz
js
shl
aam
pop
in
push
std
nop
popa
jns
lahf
mov
notl
and
and
addr16
sbb
push
mov
mov
lcall
xor
inc
gs
dec
lcall
out
lods
inc
fstps
mov
xchg
mov
aad
sbb
mov
leave
fs
adc
lds
lods
dec
mov
sbb
sbb
add
jge
mov
pop
fs
sub
xchg
cmp
addr16
arpl
mov
ja
stos
or
test
mov
inc
out
arpl
adc
pop
mov
fdivr
mov
mov
sub
out
and
int3
xor
mov
pushf
cmp
out
pop
jbe
leave
jge
sbb
lahf
inc
insb
xor
inc
icebp
int
lods
out
mov
cmpsl
pop
jp
jnp
mov
xlat
xor
imul
lret
add
popa
push
data16
cld
gs
pop
arpl
jecxz
dec
xor
xorb
mov
xor
clc
jg
ss
test
or
int3
imul
mov
adc
cmpsb
push
jns
loope
shrl
adcb
ljmp
mov
pop
mov
cwtl
cs
mov
test
lods
jnp
cli
xchg
lss
mov
fwait
xchg
dec
imul
hlt
loopne
xor
xorl
adc
enter
xchg
mov
pop
gs
cmpsb
cmpsl
insb
jo
inc
roll
cmp
stos
dec
mov
movsl
mov
or
dec
stos
daa
jae
and
adc
jno
mov
lods
cwtl
jmp
mov
xor
xchg
pop
cmpsl
rcr
mov
fdiv
stos
adc
cmp
sbb
push
pop
jo
push
js
add
mov
dec
mov
push
push
mov
push
shrl
ret
and
jmp
add
jb
cmp
mov
mov
mov
loope
gs
mov
inc
daa
addr16
push
in
jecxz
das
into
cmp
adcb
dec
mov
test
push
lods
cmp
inc
lea
inc
jae
lahf
js
dec
xchg
lock
xlat
inc
js
outsb
iret
aam
stos
mov
add
daa
lahf
cmp
in
pop
loope
in
js
cld
cmp
jbe
mov
movsb
xor
pop
jmp
jno
dec
test
jb
shl
cmpsl
sbb
mov
test
clc
push
fidivrl
inc
mov
push
lock
imul
xchg
xor
mov
jl
aam
mov
jg
movsl
out
jmp
sbb
repnz
inc
xchg
inc
dec
mov
inc
jno
and
xchg
insb
ds
stos
test
ss
clc
out
enter
lcall
std
mov
out
cmp
scas
add
jmp
int3
sub
sub
lods
repnz
das
inc
and
in
jl
xchg
sbb
call
mov
ret
jns
add
in
jo
pop
lock
jae
mov
imul
lahf
mov
jae
jg
iret
or
int
lods
mov
pop
clc
rorb
popf
xchg
inc
or
pop
pop
fs
lret
lret
jp
lcall
xor
loop
or
iret
pop
iret
push
and
dec
push
pop
adc
test
test
jne
mov
xor
cmp
sub
adc
ds
pop
xor
lahf
inc
push
out
push
fdivl
test
addr16
ss
out
roll
adc
stos
out
mov
cltd
in
popf
icebp
inc
cs
xor
enter
repz
cmp
pop
or
aas
cmp
rcll
out
cs
cld
mov
popf
dec
in
in
mov
and
icebp
hlt
mov
dec
cld
pop
cltd
ds
mov
cltd
fisttps
mov
sub
sbb
rcll
repnz
sbb
ret
and
jecxz
lahf
push
clc
fcoms
sub
cltd
icebp
rclb
mov
inc
xchg
jae
imul
xchg
es
fbld
fisubrs
daa
ficompl
jg
push
inc
or
test
lret
xor
add
lock
pop
jg
mov
or
pop
cmc
push
cmpsl
jle
adc
pop
xlat
add
and
ljmp
mov
or
inc
cmp
adc
adc
dec
insl
mov
xchg
and
rorb
ss
add
sbb
sbb
test
lock
imul
test
mov
xchg
mov
push
jecxz
mov
xor
mov
xchg
pop
sub
fnsave
and
ss
js
push
ds
flds
adc
fidivrl
jbe
dec
out
push
insl
stos
shlb
aad
ja
bound
dec
inc
push
xchg
adc
or
jae
aad
jmp
xchg
iret
and
sbbl
sbb
inc
mov
pop
pop
mov
xor
gs
dec
or
mov
cmp
fisttpll
add
inc
ss
xchg
and
and
add
jno
and
stos
movsl
push
pop
mov
cmp
repnz
sbb
movsb
xchg
or
dec
fs
dec
dec
test
sbb
inc
mov
pop
xchg
je
pushf
aad
add
rcl
xor
lahf
push
or
or
ret
scas
pop
jg
arpl
dec
iret
push
mov
cmp
in
xorb
ficoml
dec
sub
mov
jl
iret
inc
arpl
mov
sbb
xlat
sbb
add
mov
cmpsl
aad
mov
xchg
ss
das
nop
xchg
push
and
cli
mulps
cmp
adc
mov
mov
cmpl
faddl
into
add
pop
and
push
inc
cwtl
sbb
jle
scas
clc
xor
inc
jno
jp
pusha
sbb
popa
mov
and
mov
div
subl
jmp
mov
mov
inc
add
lcall
sbb
es
pop
test
stos
fcmove
adc
lods
stc
sbb
xchg
call
mov
je
jb
jecxz
mov
arpl
arpl
push
push
hlt
ljmp
mov
xor
jge
cmp
fs
aad
xchg
test
popa
sbb
xchg
xchg
sbb
int3
mov
mov
cmp
inc
je
sahf
addl
xchg
popa
cmp
push
adc
fwait
adc
add
rcr
jne
inc
addb
cmpsb
cs
cmc
push
mov
sbb
adcl
sbb
js
outsl
lods
rolb
or
bound
sbb
test
mov
out
cmpsl
inc
jle
dec
cmpl
inc
ffreep
mov
mov
cmpsb
out
push
pop
std
loope
lea
lods
dec
imul
xchg
hlt
mov
hlt
adc
lds
xchg
pop
inc
mov
or
into
cmp
adc
lret
mov
adc
fstpt
jg
pop
xlat
pop
inc
xor
das
mov
jl
xchg
loope
push
xor
dec
in
or
lret
lea
adc
add
xchg
mov
adc
inc
or
cmp
xor
or
in
mov
mov
sub
bound
test
gs
dec
or
adcb
or
jo
mov
cmc
mov
fs
jle
pop
mov
lea
repnz
outsb
add
xchg
ror
sti
lods
pop
xor
jge
nop
push
xlat
adc
insl
insl
cmp
jbe
xchg
lods
and
and
aad
in
clc
adc
jmp
lcall
adc
mov
sysexit
add
cmp
mov
lret
or
xchg
imul
push
pop
sub
int3
push
lret
dec
hlt
or
jg
bound
xor
mov
das
lcall
dec
mov
push
inc
mov
push
int3
pushf
pop
and
and
popf
cmc
xor
loopne
icebp
loopne
push
nop
ljmp
mov
cld
cmpsl
test
out
mov
pop
jo
jno
cmpsb
fadds
addr16
lock
shl
and
jmp
sub
es
into
dec
imul
jo
scas
push
adc
frstor
in
out
in
in
add
inc
sub
adc
or
cld
scas
pushf
jnp
fs
mov
adc
jbe
into
jae
push
jecxz
xchg
lods
or
mov
cmp
jle
sub
stos
popf
fcompl
sub
xlat
push
andb
cmp
cmp
fwait
xchg
fcmovnb
cld
aad
scas
jnp
outsb
rcll
mov
aam
inc
push
and
fs
mov
sub
inc
rcrl
or
imul
pop
cld
jp
dec
je
inc
xlat
add
xor
dec
add
cmp
xor
jmp
scas
xchg
sbb
in
cwtl
in
scas
push
and
pop
jnp
jbe
or
rorb
add
jb
pop
push
adc
xlat
sub
adc
pop
pusha
add
clc
push
shlb
mov
daa
pop
test
andl
and
xchg
or
dec
push
mov
cmp
sbb
sub
movsl
jno
aad
dec
xor
iret
rol
push
fwait
mov
jnp
nop
push
inc
adc
dec
mov
xor
rorl
ret
repz
ja
sbb
xchg
add
pop
ljmp
xor
sub
out
enter
xorl
out
gs
inc
in
shll
popa
add
cld
dec
xchg
cmpsl
dec
sub
mov
add
jbe
scas
mov
out
insl
cmpb
shll
xchg
dec
push
cmp
or
xlat
pop
push
repz
mov
jb
mov
mov
sbb
push
push
mov
in
dec
and
shrl
push
sub
push
popf
out
std
jp
mov
jmp
xor
dec
adc
ficoml
inc
rcll
add
lret
push
xchg
sbb
sub
dec
hlt
rcrb
aaa
es
pop
cmpsl
push
or
add
std
addr16
push
outsl
pop
lret
shl
hlt
pop
cmp
mov
fists
sbb
xchg
lahf
mov
xor
inc
lods
mov
andl
xchg
jo
and
imul
lods
data16
push
pop
sbbb
xchg
lock
xor
pop
inc
mov
mov
jnp
ds
jns
loop
push
adc
into
out
pop
mov
enter
xor
and
popf
xlat
fdivrs
inc
cwtl
mov
mov
insb
scas
mov
lret
inc
popf
lahf
cmpsl
roll
add
addr16
jp
mov
mov
mov
cmp
dec
adc
aas
daa
pop
mov
repnz
mov
cli
test
es
jp
les
or
dec
xor
xor
fldl
sbb
xchg
loop
ss
loop
stos
jmp
sbb
push
imul
inc
jmp
sub
js
mov
int3
xor
mov
jbe
sub
inc
xchg
dec
call
xchg
adc
add
mov
sbb
xchg
mov
int3
out
jb
pop
cmc
out
adc
adc
cmpsl
int
outsl
sbb
sbb
mov
ja
pop
mov
dec
mov
test
dec
aad
loopne
push
push
and
add
sbb
outsb
sub
inc
inc
mov
sub
ret
inc
pop
fsts
jg
or
mov
mov
daa
inc
xchg
repz
cwtl
stos
shl
push
gs
xorl
loope
fdivr
add
inc
dec
addb
fsubr
loop
stos
outsl
jno
shlb
mov
cmpsb
cmp
or
in
jnp
lret
and
idivl
xor
dec
lea
adc
jge
xchg
lret
scas
roll
mov
je
sbb
inc
add
jns
mov
pop
mov
cmp
mov
mov
mov
fwait
xchg
mov
jmp
cmpsb
clc
nop
fldcw
mov
jb
jge
cmp
push
pop
and
mov
sbb
cs
ret
mov
jo
es
repz
adc
dec
and
mov
enter
sbb
xchg
inc
pusha
notb
out
jbe
shrl
and
and
stos
stos
int3
cmc
or
movsb
mov
or
xchg
cld
mov
pop
sub
mov
xor
xchg
push
xchg
sbb
and
outsl
movb
inc
or
mov
fs
add
loope
push
stos
jp
pop
xor
bound
jmp
gs
xor
imul
lret
ret
mov
cli
scas
adc
test
sbb
aad
pop
call
push
jbe
xor
jge
xor
add
sbb
flds
stc
or
mov
pushf
int3
es
pop
add
jl
inc
lahf
xor
and
int3
je
stos
and
push
jle
inc
sbb
mov
insl
pop
push
mov
and
es
subb
pop
into
jno
iret
add
aad
cmpsb
lret
push
jns
push
orb
and
jmp
in
jp
dec
jnp
lock
mov
out
movsb
es
aad
push
dec
in
jmp
dec
sbb
lret
imulb
mov
ja
or
dec
lods
pop
arpl
test
cli
mov
xchg
sbb
out
outsl
add
mov
mov
icebp
xchg
or
push
xor
cmpsb
inc
xchg
ss
push
lcall
pop
push
int3
mov
movsl
shl
jmp
sti
clc
mov
ljmp
pop
cmpsl
jmp
in
pop
add
jmp
clc
test
mov
outsb
aad
jno
xor
icebp
xchg
rcrl
imul
jmp
aam
pop
ret
int3
inc
gs
jle
icebp
add
imul
std
xor
push
int
aad
jbe
xchg
lods
push
aaa
jge
xor
inc
pushf
inc
ja
lods
fdiv
cs
imulb
mov
and
jo
test
int
je
imul
push
mov
mov
loop
push
jmp
iret
sbb
repnz
out
aas
push
lds
pop
xchg
and
push
mov
dec
mov
xchg
mov
mov
inc
ljmp
shlb
xor
jmp
jno
roll
add
xor
cmpsl
dec
add
js
addr16
mov
jl
shll
xor
mov
lahf
cmc
mov
rcrb
andb
mov
pop
and
push
push
test
inc
and
daa
or
fidivl
popf
cmpb
fdivr
inc
ja
out
lret
or
ret
jne
mov
stos
dec
jl
or
jle
jle
fidivrl
mov
xchg
in
mov
jmp
mov
xor
insl
loop
dec
sbb
pop
ds
outsl
mov
dec
imull
pop
and
test
xlat
mov
or
xor
cmpsw
inc
or
xor
dec
xor
xor
cmp
es
or
add
mov
insb
jl
pop
stc
add
jo
jbe
mov
inc
in
jmp
xchg
jmp
sbb
cmp
insl
das
test
xor
inc
iret
or
scas
testb
fs
test
xor
test
filds
ret
scas
std
ss
fnstenv
push
jne
xor
test
lods
enter
scas
mov
jae
sub
lods
popa
push
xchg
or
xlat
dec
roll
mov
push
enter
and
decl
sub
mov
xor
shl
xchg
fstpl
xchg
mov
in
cmp
in
insb
mov
push
sub
sbb
leave
inc
dec
mov
add
setne
push
push
add
add
add
adc
mov
push
fsubl
fists
shlb
xor
push
ljmp
nop
test
subl
pop
mov
sub
rclb
fbld
cmp
xlat
inc
or
inc
out
inc
pop
cmc
cmc
out
pop
mov
mov
mov
sbb
fs
jg
ret
dec
jecxz,pn
cld
ss
cld
jecxz
outsb
pop
push
sbb
mov
xor
xchg
xor
sbb
pop
ret
movl
sarl
or
pop
loopne
out
xor
push
xor
push
lods
mov
lods
lret
sub
loop
ret
gs
lahf
dec
xchg
inc
add
in
xor
imul
sahf
bound
repnz
and
ds
cltd
shll
aaa
mov
lds
lods
mov
jno
scas
jp
insl
hlt
movlps
add
fwait
insl
mov
enter
sub
cmc
test
xchg
shll
pop
mov
testl
lods
test
outsb
adcb
leave
fwait
movsb
loopne
adc
andb
fidivrs
fidivrs
jns
pop
sbb
push
sub
adc
adc
enter
push
test
pop
xor
add
pop
xor
pop
je
jae
sub
mov
cld
push
pop
hlt
cmp
pop
mov
icebp
push
push
imul
sub
xor
fs
es
jp
cmp
or
int
cltd
pop
femms
push
pop
lods
das
cwtl
dec
hlt
insl
push
sub
cltd
lcall
imul
mov
out
add
rclb
jno
sbb
jnp
test
imull
mov
xchg
into
aas
xor
in
test
sbb
adc
mov
jmp
sub
sub
stos
fisubrs
adc
push
xchg
sub
lods
test
xor
jne
gs
add
sbb
mov
ljmp
loop
mov
and
in
fisubrs
mov
pop
mov
adc
out
lahf
and
push
or
jge
clc
popa
add
out
push
mov
lret
test
cmp
mov
or
in
test
pusha
mov
jns
outsl
pop
fwait
daa
popa
push
mov
xchg
neg
leave
xlat
cmp
sub
sbb
or
jns
imul
cmpsl
test
xchg
stc
out
neg
leave
xlat
cmp
sub
sbb
or
jns
imul
cmpsl
test
xchg
stc
out
neg
leave
xlat
cmp
sub
sbb
or
jns
push
push
mov
xchg
negl
dec
xlat
daa
popf
mov
or
out
loope
cmpsb
mov
in
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
data16
loope
xchg
movb
icebp
loop
jbe
data16
inc
add
je
mov
push
push
inc
divb
movb
roll
and
sbb
ss
es
push
push
push
inc
notb
out
or
divl
fildl
add
jo
jae
and
and
xchg
out
lcall
sbb
mov
idivl
pop
ljmp
lea
mov
in
jle
in
push
cs
cltd
fisttpll
out
lret
push
lret
fnstcw
push
or
clc
fxch
cmpsl
jno
sbb
repz
mov
popf
xchg
test
xor
sub
jbe
xchg
mov
add
fs
push
scas
or
or
pop
test
pop
ret
xchg
adc
jbe
icebp
inc
icebp
sbb
xchg
add
int3
push
dec
out
pop
in
push
push
mov
inc
rorb
lret
imul
and
mov
out
in
xorl
xor
push
adc
ss
es
push
dec
push
jae
mov
into
mov
push
ret
mov
movsb
jecxz
push
jb
push
cmp
push
jnp
jb
test
loop
in
shll
repnz
or
and
jge
push
popa
inc
xor
xor
std
out
idivl
xchg
jbe
and
inc
add
jno
popa
push
push
push
inc
divb
movb
roll
and
inc
add
jno
popa
push
push
push
inc
divb
xchg
outsl
lds
jb
popa
jle
pop
aad
sbb
or
mov
insb
not
add
jp
pop
aad
sahf
sbb
jle
movsb
jbe
imul
or
and
or
sub
sbb
cmp
bound
cmp
mov
jne
cmc
lahf
cli
cld
push
cmp
pop
outsl
add
rcrl
enter
scas
icebp
ds
jl
lret
and
jp
out
pop
jecxz
jle
rclb
mov
jmp
push
xchg
shrb
add
xchg
add
adc
addr16
push
jl
push
xor
cmp
sbbw
cmc
lcall
rol
pop
mov
scas
je
dec
fldt
ljmp
lds
es
cmp
ror
cmp
lods
mov
daa
dec
ud0
in
daa
sbb
sbb
out
push
jo
and
fs
push
xor
jmp
jmp
hlt
fsubrs
in
mov
cmpsb
icebp
and
rcrl
insl
ljmp
and
pop
or
sti
out
es
bound
pop
stos
imul
ljmp
outsl
lcall
cltd
xchg
dec
adc
add
shrl
stos
test
mov
fs
xchg
cltd
or
gs
push
cmc
mov
gs
cmp
add
rolb
hlt
mov
jns
outsl
pop
ds
decb
pop
or
push
sti
mov
inc
inc
cmp
inc
xchg
cmpb
mov
loope
aaa
jg
inc
cs
loope
scas
mov
xlat
test
pop
jge
pushl
jmp
or
in
or
mov
jg
sbb
cltd
bound
mov
dec
or
inc
mov
sub
adc
xchg
ljmp
lods
pushl
loopne
lds
out
xchg
movsl
imul
sbb
sbb
in
popf
sti
scas
push
pop
int3
pop
movsl
sti
fildl
xlat
arpl
nop
call
data16
repz
xchg
and
subl
les
cmpsb
clc
jp
and
jbe
inc
lret
add
rcrl
xchg
sahf
sub
and
jbe
stos
push
mov
popa
adc
pop
and
fbstp
out
dec
ret
add
idiv
jb
jecxz
push
pop
and
imul
xchg
mov
jl
pop
adcl
mov
stos
mov
ds
iret
dec
jg
add
out
fistl
fucomi
testb
sub
sbb
add
push
sub
jl
sahf
jbe
dec
ficompl
mov
imul
mov
xchg
sub
ja
xor
mov
pop
pop
icebp
adc
std
dec
add
ret
rcrl
jno
jbe
xchg
cmc
or
add
sbb
push
jp
insb
inc
scas
pushl
rcl
jnp
mov
push
or
leave
out
ja
mov
cmc
pop
xor
mov
mov
scas
fcmovnb
sti
pop
or
xchg
loop
inc
insl
sahf
jo
pop
mov
bswap
xor
in
movsl
or
dec
clc
xlat
fisubrl
andl
pushf
loopne
xchg
and
aam
sub
mov
insb
or
lds
pop
add
inc
or
outsb
lahf
mov
shlb
testb
mov
aaa
xor
mov
inc
xor
inc
dec
mov
and
inc
lods
dec
adc
aaa
dec
aas
xor
lahf
es
dec
jge
std
jne
popf
cmpsl
mov
outsb
shr
push
mov
lret
xchg
std
pop
push
cmp
shrb
add
sti
enter
jmp
cli
mov
adc
xor
imul
or
fs
sbb
es
mov
clc
mov
and
jnp
sbb
jg
mov
mov
mov
mov
fwait
int
fdivrl
push
fwait
out
push
shl
sbb
fs
imul
mov
pop
movsb
mov
mov
call
iret
dec
in
xchg
dec
outsl
and
ss
inc
movsb
mov
out
jl
push
or
pop
lahf
and
mov
and
fmul
pop
fcmovnbe
lea
imul
cltd
lock
mov
filds
iret
mov
jecxz
lock
lods
and
int3
movsl
call
or
inc
and
jno
movsb
shlb
adc
imul
test
dec
dec
push
int3
out
ret
jae
push
pop
jp
mov
push
pop
call
shlb
push
pushf
rcrb
add
add
test
shlb
sbb
add
jbe
mov
push
movsb
lahf
jo
out
xor
pop
rcrb
cmp
in
lods
mov
fdivl
clc
pop
xchg
outsl
loopne
lea
pop
or
cld
or
data16
or
xor
or
jecxz
leave
and
xor
in
nop
adc
ficompl
dec
dec
xor
loopne
dec
jp
rorb
mov
test
insl
sbb
jbe
dec
push
nop
daa
lret
jge
sbb
add
test
popl
loop
aas
rorl
fcomip
popf
xchg
mov
add
std
jmp
sub
cld
std
pusha
cmp
adc
cmp
arpl
lea
xlat
and
sar
push
cli
rcrl
sbb
pushf
insb
nop
lea
lret
cmp
sub
aaa
repnz
rcr
fildl
popa
test
or
jmp
test
xchg
fs
out
loopne
mov
mov
or
pop
insb
xchg
xor
negb
mov
test
loope
mov
in
enter
push
dec
fmull
xchg
mov
cmpsb
push
xchg
sub
pop
inc
aaa
dec
mov
stc
cmp
clc
jle
jge
lcall
sub
adc
lahf
leave
mov
rclb
adc
inc
xchg
adc
inc
cmpl
cmp
mov
dec
insl
jle
dec
sbb
mov
mov
shlb
pop
or
testl
lcall
cltd
push
and
jge
lods
adc
testl
push
repz
push
xchg
inc
test
mov
lds
mov
cmpsb
jne
insb
popf
outsl
sub
nop
push
cmp
mov
push
mov
cltd
sahf
mov
xchg
jecxz
sbb
fucomp
xchg
imull
xor
jmp
dec
nop
mov
rcll
xchg
leave
push
inc
out
cli
loop
mov
mov
jns
cli
testb
roll
sbb
out
sub
rcr
sub
dec
or
mov
adc
push
xchg
es
leave
stos
orb
push
or
dec
mov
sbb
scas
push
mov
ljmp
adc
test
mov
mov
adc
ret
and
inc
xchg
jp
daa
clc
cmpsb
adc
in
bound
pop
ror
mov
popf
loope
push
aam
stos
adc
and
add
pop
outsl
aas
repnz
xchg
cmp
imul
pop
xchg
mov
xchg
outsb
popf
push
mov
inc
std
and
ds
es
dec
pop
data16
mov
jl
push
add
lret
xchg
xor
fcomps
imull
xorb
push
adc
pop
in
nop
jmp
push
popf
ret
mov
inc
or
xor
dec
mov
out
xchg
adc
mov
imul
sbb
xchg
xchg
sar
shr
xor
and
ret
inc
xor
fs
in
xchg
push
popf
stc
mov
bound
xor
pop
mov
ret
push
insb
dec
fldcw
jnp
dec
cmp
int
and
xor
test
add
inc
jo
sub
icebp
int3
cmp
add
jbe
aam
shll
mov
xor
mov
dec
fidivrl
in
adcl
out
fcoms
jmp
lods
or
in
faddl
pop
or
gs
xchg
jae
int
xor
jo
insb
pmullw
mov
push
lahf
push
icebp
outsb
cmp
add
test
jg
lret
jp,pn
in
push
add
inc
cmp
icebp
sub
leave
jne
push
jbe
xor
mov
push
mov
or
xchg
pusha
mov
mov
push
mov
dec
xor
adc
inc
adc
xorb
ficomps
add
in
mov
fdiv
scas
pop
mov
push
inc
pop
push
cwtl
lret
and
mov
inc
and
add
sbb
js
out
mov
mov
nop
ret
rcr
fsubp
push
rorb
adc
les
jb
or
scas
movsb
mov
movsl
and
aam
outsb
add
cs
cvtdq2ps
xlat
inc
xchg
enter
outsl
lahf
pop
cmc
xor
fisttps
pop
fs
loop
jns
int3
adc
rcrb
adc
leave
sbb
adc
adc
loope
inc
pop
xor
and
lahf
add
dec
outsl
inc
icebp
ja
iret
lds
dec
xchg
inc
pop
cmpsl
pop
push
lods
andb
or
mov
sti
ljmp
xchg
call
and
movsl
pop
lret
jecxz
sbb
mov
popa
xchg
and
mov
push
mov
push
and
dec
mov
cmp
mov
pop
mov
mov
jl
lret
negl
sub
jns
xor
fbstp
addl
cmp
enter
push
mov
in
inc
rorb
and
xchg
jge
stos
pop
mov
inc
add
jno
jnp
pop
push
mov
loopne
adc
push
push
push
in
outsl
mov
std
fcoml
mov
shr
jne
dec
jo
call
adc
dec
scas
push
adc
aam
mov
sub
xor
movntq
out
pop
into
xchg
std
cli
arpl
cmp
in
out
scas
repz
lcall
sti
fistps
and
mov
jae
and
adc
xor
jbe
insb
mov
out
jl
insl
xor
xor
fdivr
and
push
ja
fmull
ds
adc
addr16
or
jnp
jb
fisubl
sub
das
jge
mov
and
pusha
dec
inc
hlt
rclb
in
xor
fdivrl
stos
in
inc
ja
sub
ret
imul
leave
lea
dec
imul
andl
out
fnsave
movb
jno
and
roll
fistpll
inc
mov
sub
test
xor
pop
cltd
jecxz
cmc
mov
mov
outsl
pop
fs
sub
movsb
adc
outsl
rcrb
jno
ret
sub
jge
jle
mov
lret
in
aaa
popf
stc
mov
inc
sahf
out
sahf
pop
mov
sub
les
pop
pop
out
rol
loop
or
and
test
mov
inc
push
mov
sub
adc
outsl
outsb
fsts
xchg
addb
push
mov
push
sbb
pop
int
cmpsb
mov
pop
cs
sbb
arpl
dec
sub
xchg
jo
push
rorb
call
cmpb
enter
jg
push
scas
pop
xor
fsubl
or
sub
leave
out
movl
dec
fmull
mov
mov
je
add
loopne,pt
popa
jl
pop
pushf
cltd
sub
add
xor
test
mov
hlt
dec
fs
call
sbb
sbb
push
mov
pop
xchg
mov
mov
das
sub
and
scas
sub
aad
sbb
cmp
sub
xor
lods
sbb
cmp
fwait
lods
sbb
or
jns
add
or
iret
call
js
pop
push
xor
xchg
push
jbe
ret
inc
push
xorl
pop
mov
in
loope
push
ret
mov
sbb
mov
lahf
jns
cmpb
iret
cmp
in
stos
jl
ret
fimull
fs
lods
mov
mov
stc
mov
cmpsl
outsl
mov
aad
in
xchg
aaa
out
adc
stos
mov
notl
stos
add
rorb
xchg
jnp
pop
xchg
xor
push
dec
ret
outsl
push
divw
sbb
imul
mov
xor
arpl
stos
mov
fiadds
add
and
and
sub
int3
bound
jbe
fwait
out
aaa
push
subl
fidivs
sub
adc
out
mov
in
test
call
xor
rol
stos
nop
decb
push
jge
inc
push
insl
adc
subb
inc
mov
and
hlt
cmp
int3
test
scas
or
gs
orb
xchg
jae
fmul
decl
push
lret
loopne
xchg
add
mov
jp
scas
in
mov
jno
sbb
xchg
ljmp
and
xchg
dec
xor
idivl
or
test
push
cmc
test
dec
sbb
and
lock
xor
test
lock
jns
lahf
sbb
xor
aaa
enter
lahf
push
mov
movsb
inc
cwtl
in
pop
xchg
int3
js
stos
out
or
xor
dec
xlat
xchg
pop
mov
in
movsb
mov
das
aaa
pop
and
les
jg
pop
lret
pop
xor
xchg
stc
dec
in
shrb
pop
sbbb
lcall
insb
sub
cmp
fstps
sets
sbb
nop
pop
cwtl
ljmp
imul
es
negb
push
mov
inc
jmp
mov
shrb
aad
rcrl
fwait
sbb
push
mov
jmp
and
xchg
push
mov
in
jae
test
add
xchg
in
add
mov
outsl
test
jmp
pop
scas
jb
aad
fs
outsb
popl
pusha
popf
fidivl
popf
pop
dec
and
jecxz
mov
push
xchg
inc
jnp
pop
xlat
rcll
repnz
adc
or
dec
mov
lock
into
mov
movsb
push
test
mov
out
xlat
test
sub
mov
push
push
dec
mov
push
sub
dec
in
int3
jg
xchg
push
shlb
stos
cli
sahf
fbld
inc
sbb
ljmp
frstor
loope
shlb
mov
push
xor
and
sbbl
sub
enter
sub
or
dec
inc
imul
int3
and
dec
movsb
jns
inc
ret
sbb
mov
dec
mov
repnz
adc
jno
std
add
mov
lcall
add
imul
iret
out
mov
lea
mov
cwtl
mov
push
pop
or
jl
icebp
es
popa
ret
jae
fmuls
cmp
adc
push
sub
push
add
mov
push
mov
pop
shlb
and
les
cmpsb
jl
jns
enter
adc
aad
and
sub
pop
shlb
or
aaa
gs
aam
push
sub
clc
clc
pop
jae
pop
mov
pop
mov
flds
sub
push
add
mov
shl
adc
sbb
mov
and
mov
cmpl
outsb
sub
imulb
fwait
in
jo
lds
ds
dec
sbb
imul
adcb
insl
fadds
les
cmp
jnp
loopne
dec
inc
pop
cli
outsb
popa
aad
rcll
xor
mov
ds
movsl
testb
and
mov
lcall
sbb
test
fildll
inc
iret
loopne
repz
rolb
pop
cmp
enter
sbb
call
pop
sub
mov
mov
cmp
insl
dec
inc
xchg
xchg
or
out
inc
rolb
testl
mov
insb
sub
xchg
in
stos
data16
cld
sub
xchg
dec
or
sub
inc
xchg
scas
xor
push
xchg
or
cli
jmp
mov
pop
add
push
ja
cltd
jl
inc
out
dec
cmp
imul
cmpsb
jl
lcall
pusha
or
add
loopne
les
adc
pop
cmp
push
inc
pushf
cmp
fiadds
mov
mov
fdivrs
daa
cmpsb
xchg
imul
std
addl
cmp
lret
das
sub
cmp
inc
cmp
xor
sbb
rol
mov
xor
lea
push
popa
mov
sbb
inc
test
into
out
aaa
or
test
jno
add
divl
js
jae
and
adcl
dec
imul
data16
imul
out
loope
insl
cwtl
sub
imul
loopne
sub
insb
js
popf
enter
xor
aas
mov
push
fs
stos
dec
dec
mov
xchg
add
lea
mov
push
dec
or
sub
enter
jnp
movsl
cmp
js
jns
jae
int
test
xchg
push
jb
pop
cmp
or
push
push
adc
dec
loopne
nop
adc
fs
cmc
jle
and
jl
sbb
and
lock
mov
shlb
xchg
dec
js
mov
insb
add
jnp
add
arpl
insl
jne
or
mov
sub
es
jb
xorb
enter
andb
lret
ret
ret
dec
movswl
sub
pop
xor
mov
or
cwtl
cs
cmp
aam
arpl
out
sahf
das
pop
mov
imul
fwait
xor
add
and
stc
int
cmp
inc
inc
cmp
xchg
je
jae
insl
stos
fstl
mov
and
push
popl
js
or
pop
ja
loop
jb
or
pop
push
cli
fbld
mov
push
pusha
and
sub
in
fnstsw
jns
and
lods
in
cmpsl
loopne
enter
in
cmp
icebp
leave
mov
lock
pop
jge,pn
inc
iret
adc
std
jmp
mov
addl
mov
cli
imul
dec
repz
sub
jnp
add
cmp
das
jae
pop
jae
sub
stos
sbb
sub
xchg
add
pop
lret
cli
mov
mov
xor
pop
aas
add
jo
xchg
push
je
cmp
push
cld
pop
test
or
imul
mov
jle
lds
add
dec
shlb
popl
lcall
push
hlt
add
fisttpll
mov
dec
lret
mov
push
das
push
jns
lds
cmpsl
stos
and
leave
cmp
pop
nop
ret
std
pop
cs
fisttps
rcrb
push
aaa
jns
pop
mov
push
pop
push
dec
divb
fadd
add
test
pushf
pop
inc
leave
xchg
jmp
ss
loopne
xchg
add
pushf
xchg
icebp
mov
pop
int
mov
mov
fldt
mov
or
sub
das
pop
movsl
jo
lcall
outsl
aaa
into
dec
test
push
sbb
fdiv
inc
test
push
sub
mov
sub
rcrb
add
and
cli
cmc
pop
aas
pusha
fdivs
stos
test
mov
test
div
inc
xor
mov
push
data16
pushf
in
insl
fistl
cmp
dec
sahf
ret
nop
das
rclb
mov
push
xchg
arpl
push
stos
sbb
push
call
xor
pop
mov
xchg
jl
scas
jge
sbb
sub
out
scas
push
jl
cmp
rclb
pusha
out
pop
cmp
pop
sti
xor
dec
mov
xchg
and
jno
test
pop
cmc
nop
mov
stc
adc
les
sub
shrb
cltd
pop
push
dec
inc
ds
dec
fildll
loopne
cmp
insb
lret
das
xbegin
loop
cld
or
mov
in
movsb
test
mov
lods
add
xlat
cmp
dec
inc
loopne
iret
stos
mov
mov
jecxz
pushf
sub
add
shll
dec
stos
xchg
mov
jno
dec
xchg
lods
rorb
and
mov
cmp
cwtl
dec
xchg
cmpsl
inc
add
jmp
inc
outsb
shll
dec
add
jns
add
xchg
scas
ret
pop
adc
dec
orl
fmuls
xchg
and
fbld
aad
idivb
pop
xchg
or
jbe
pushf
dec
cmp
cmpsb
or
and
daa
xor
sub
adc
cmp
mov
fidivrs
or
test
or
or
mov
dec
and
mov
fimull
cld
aam
stos
int3
sarb
jne
mov
mov
adc
movsl
sbb
repz
lods
mov
cmp
mov
cmpsb
loope
roll
and
inc
add
jno
popa
push
push
push
inc
divb
movb
roll
and
inc
add
jno
popa
push
push
push
inc
divb
movb
aad
shll
and
ss
popa
push
pop
pop
movsl
notl
inc
xlat
jne
shll
xchg
jbe
mov
adc
inc
or
cmp
loopne
shl
shl
xchg
mov
enter
clc
pusha
pop
push
inc
jbe
pop
and
adc
add
lock
loopne
shl
shl
xchg
shll
pusha
push
and
inc
jbe
arpl
push
adc
add
lock
loopne
shl
shl
xchg
mov
inc
pusha
jne
add
pop
inc
inc
dec
pop
inc
outsb
inc
mov
mov
xchg
lock
jns
movsl
jnp
mov
mov
cmp
popf
flds
jnp
pop
and
xchg
and
fwait
jbe,pn
xchg
test
iret
push
xor
addr16
imul
xor
xor
lret
mov
in
jge
jne
inc
or
pusha
sub
jne
sar
dec
loope
cmpsb
repz
mov
outsb
scas
call
test
into
push
dec
notb
push
add
clts
xchg
sub
or
xorl
mov
dec
adc
rclb
popa
sbb
and
push
test
add
inc
adc
push
shl
shl
xchg
mov
inc
pusha
push
push
inc
jbe
push
and
adc
add
mov
fadd
jmp
ret
fs
xor
dec
push
push
push
push
push
rep
xchg
mov
test
rcll
and
adc
add
andb
bound
add
mov
mov
mov
inc
pusha
push
push
inc
jbe
push
and
adc
add
lock
loopne
shl
shl
xchg
mov
inc
pusha
push
push
inc
jbe
push
and
adc
add
lock
mov
xor
or
sub
lahf
push
sbb
dec
ret
mov
rcrl
sub
popf
add
insb
fsubrs
push
lret
scas
jbe
or
test
inc
lret
or
fidivrl
cmpsb
cmpb
lds
andb
shrl
movl
push
sbb
bound
xor
mov
dec
adc
xchg
jno
in
pop
cmpsl
mov
sub
adc
lds
ret
scas
scas
data16
int3
inc
mov
cli
fsubr
dec
add
adc
repz
xchg
or
outsl
mov
push
daa
ds
jmp
aad
push
mov
out
ficoms
test
aad
xchg
hlt
dec
movsb
adc
jecxz
xchg
mov
push
mov
mov
enter
jo
fwait
push
xor
pop
cmp
pop
pop
dec
and
mov
cmp
sbb
push
mov
xor
and
es
mov
jl
jge
in
lods
les
or
xchg
xchg
or
loop
pop
cs
and
pop
inc
mov
cmpsl
imul
ret
xor
pusha
sub
aam
cmp
sub
inc
sbb
and
and
sahf
xchg
add
dec
xlat
movsl
test
xchg
cs
test
push
cmpsb
mov
test
fisubl
lcall
in
test
mov
dec
loop
dec
and
fistl
icebp
pushf
stc
inc
movsb
mov
lock
xrelease
fcmovnb
xchg
lcall
pop
xor
sub
loopne
and
sti
call
in
mov
cli
or
mov
xchg
fsubs
call
ficoms
into
sub
pop
clc
jp
mov
jge
pop
or
ret
es
enter
cld
sub
es
sar
rorl
sbb
sbb
mov
dec
test
sarb
jo
add
out
fwait
aam
pop
sub
stos
loop
mov
push
out
loope
fimuls
cmp
mov
pusha
cmp
pop
ficomps
or
mov
movsb
stos
ja
cld
mov
icebp
xor
push
add
pop
and
dec
repnz
shll
subb
fisubs
out
push
mov
xchg
and
arpl
fimull
pop
xchg
push
cmp
dec
in
adc
adc
rcrl
jbe
in
push
mov
add
or
call
sbb
fwait
sub
rcrl
in
or
sbb
hlt
mov
push
push
jg
aad
dec
enter
push
xchg
sbb
adcb
push
fidivs
hlt
imul
jo
dec
mov
test
mov
movsb
and
xchg
dec
cmc
out
iret
lods
mov
roll
les
aas
jns
push
push
add
mov
pop
pop
out
sbb
pop
xchg
xor
push
xchg
mov
xor
pop
push
xchg
inc
popa
sar
lods
mov
cld
pop
pop
jecxz
movsl
adc
scas
mov
je
jge
mov
add
inc
loop
rolb
insl
xor
jb
mov
xor
pop
pop
xchg
out
sbb
push
je
iret
fdivs
mov
or
adc
jnp,pt
xchg
and
push
push
mov
mov
cs
lret
or
sbb
out
xor
add
movl
cwtl
stc
jo
imul
aas
cmp
nop
or
lods
insl
pop
mov
in
mov
mov
pop
scas
mov
mov
mov
scas
ljmp
inc
cmpsl
fdiv
inc
in
or
loopne
cltd
mov
in
lret
rcr
aad
pop
test
lds
out
push
push
movsb
mov
pop
iret
xchg
addr16
mov
int
lret
xor
mov
aam
mov
sbbl
mov
cmp
mov
scas
inc
pushf
add
mov
fs
pushf
adc
xor
mov
mov
std
es
data16
in
mov
xor
sub
sbb
push
sti
lahf
lds
or
dec
pop
sbb
mov
jbe
jnp
es
ss
adc
push
or
ret
stos
adc
pop
xlat
fwait
addr16
cmp
test
int
daa
push
pop
and
lock
mov
jo
xlat
outsl
inc
sahf
sbb
fimuls
adc
dec
xor
add
xchg
mov
mov
and
adc
cwtl
jbe
cmp
cmp
subb
out
sub
mov
mov
sub
dec
ljmp
add
push
sbbb
clc
xor
mov
out
or
dec
scas
bound
mov
sbb
push
outsb
and
add
push
loop
stos
xorl
hlt
and
push
inc
loope
or
cld
mov
pusha
jp
sub
add
mov
test
fdivs
dec
sahf
stos
pop
repz
adc
mov
jno
add
std
mov
inc
mov
pop
mov
in
mov
dec
push
sub
scas
and
out
mov
sbb
dec
ja
mov
pop
popf
cli
imull
pop
and
les
mov
inc
jno
mov
push
jge
mov
pushf
mov
inc
lods
fbstp
jnp
mov
das
and
std
adc
pop
test
xchg
sahf
dec
add
and
jl
add
push
shl
loopne
dec
in
stos
sub
popa
or
stos
jb
addl
xor
das
repnz
xor
cld
adc
mov
out
dec
scas
mov
jns
iret
push
mov
or
lret
das
mov
pop
fcmove
mov
or
dec
imul
mov
and
loopne
xchg
iret
mov
les
and
jo
jmp
lods
in
cmp
and
mov
mov
insl
mov
call
scas
mov
shlb
pop
and
lea
pop
and
add
jnp
in
inc
cmp
mov
cmp
repnz
sahf
mov
es
sub
fcompl
pop
inc
test
scas
mov
xchg
xor
xchg
cmp
cmp
mov
sarl
mov
scas
cmovb
das
cltd
adc
dec
inc
aaa
rcl
sbb
fsubrl
ret
jmp
imul
pop
pop
fnsave
inc
popf
inc
mov
cld
add
mov
jno
jnp
pop
mov
popf
stos
add
lret
cmp
scas
add
outsl
jl
ds
sbbl
or
fstp
xchg
stos
adc
iret
notl
push
sub
sbb
dec
xor
sub
lea
cmc
rolb
and
jo
loopne
rorb
cmp
imul
sbb
pop
xchg
jnp
or
and
arpl
repnz
jns
jne
in
or
mov
addr16
cmp
insb
or
out
popf
shll
je
fdivs
mov
push
in
xchg
sub
sub
jb
sahf
adc
dec
lea
loopne
jmp
xor
and
out
sbb
xchg
insb
fs
and
xor
lret
and
inc
js
imul
add
xor
into
and
lcall
js
loopne
mov
leave
insb
popf
or
inc
sub
jl
fs
push
jo
outsb
sub
sbb
decl
lgs
rcll
xor
push
jns
add
int
scas
cmp
mov
cmp
hlt
pop
dec
xor
add
push
add
pop
pop
repz
jo
pop
rorb
jb
or
jge
ja
xchg
sbb
cmp
inc
push
ja
rclb
mov
ja
dec
push
ret
push
mov
jo
pop
push
in
jmp
jne
jge
pcmpgtb
aaa
cmp
jecxz
ficomps
shrb
mov
and
mov
int
dec
jle
mov
aam
sub
pusha
mov
nop
or
rcrb
mov
push
mov
sahf
mov
push
jb
sti
and
call
jo
fadds
pop
dec
outsb
loop
imul
xchg
cmpl
xchg
jns
aad
fwait
repz
mov
adc
fwait
sub
notb
mov
insl
dec
sahf
jne
push
cltd
xchg
sbb
xor
test
and
xchg
sub
push
imul
lcall
outsl
jl
push
pop
sbb
popa
pushf
cmp
je
repnz
stc
adc
dec
jbe
imul
inc
cs
and
test
orl
orb
gs
jo
inc
adc
hlt
inc
and
or
lock
xor
and
pop
pop
cs
inc
lea
fnstenv
cmc
imul
cltd
jnp
cmpb
push
ret
aas
in
cli
cmp
mov
sub
loope
sub
pop
or
jae
pushl
push
mov
jecxz
out
ds
fiaddl
and
sub
lods
popf
hlt
imul
or
in
stos
cmp
or
sahf
cmp
xor
lock
add
push
pushf
and
bound
sbb
fistpll
stos
or
jno
mov
pop
and
dec
sub
xchg
popa
pop
in
push
lds
mov
push
scas
add
mov
jmp
or
ds
std
popl
movsl
or
mov
sub
test
bound
ret
lahf
sahf
sub
mov
loope
mov
in
dec
hlt
movsb
mov
jmp
or
in
pop
popa
lcall
push
lahf
leave
test
mov
dec
lcall
xchg
sbb
call
mov
push
dec
inc
mov
mov
sbbl
fisubrl
mov
adc
inc
out
pop
mov
inc
cmp
inc
repz
cld
mov
aad
cs
lock
mov
pop
mov
mov
push
enter
lods
dec
outsb
push
cmpsl
inc
cli
sub
push
inc
repz
cli
mov
lods
mov
aam
push
ja
ljmp
mov
or
cmc
push
cld
ror
mov
xchg
lods
sahf
int
adc
stos
sti
ror
sub
mov
scas
jmp
sub
cmpsl
cmpsl
inc
adc
call
repnz
mov
push
jl
iret
cltd
cmp
daa
add
sbb
movsb
sub
aas
xor
pop
xor
lock
pop
or
fldcw
mov
aad
add
shll
push
ja
loop
mov
sub
adc
pop
and
in
js
mov
mov
aam
insl
decb
sub
and
imul
mov
jle
sbb
mov
mov
std
loopne
xchg
inc
mov
mov
fnsave
pop
mov
mov
sarb
xchg
adc
adc
addr16
add
pop
mov
enter
jae
clc
dec
imul
and
inc
inc
mov
jno
mov
movsl
les
lds
loopne
jge
push
data16
mov
mov
std
sbb
out
in
xor
inc
xchg
shrl
out
mov
jae
out
repz
jns,pt
mov
jo
aam
mov
mov
add
mov
sub
test
xor
mov
movsl
jl
inc
and
and
rcrb
int
hlt
cmp
push
stc
jo
xchg
addl
imul
xchg
loop
jne
pop
lds
dec
or
stc
int3
mov
push
imul
mov
push
mov
ljmp
ret
inc
jmp
or
and
lcall
xchg
aad
lret
jge
gs
add
or
xor
ss
cmp
push
push
mov
mov
rorl
and
sahf
fnstsw
loop
inc
addl
and
cmpl
ficoml
pop
add
jae
mov
imul
popa
aam
xor
stos
sahf
adc
pop
pop
loop
shrb
popa
repnz
int3
pop
pop
imul
cwtl
jge
add
lds
lahf
add
rorb
sub
fcmovnb
mov
pop
inc
stos
mov
or
or
lock
lea
shlb
stc
lock
or
jo
outsb
or
xor
jmp
movsl
mov
popf
aas
aaa
lcall
pop
iret
xchg
pop
ret
dec
adc
cld
rcrb
jl
shrl
popf
imul
cmp
dec
mov
pop
psubb
or
std
and
sarl
movsl
sbb
sub
jns
out
xchg
xor
flds
cmp
dec
lea
leave
cmpsb
decb
mov
cmpsb
mov
jne
scas
pusha
jge
sbb
cld
arpl
imul
sub
fs
outsb
push
imul
jge
pop
pop
mov
das
ret
mov
xor
imul
jmp
jle
dec
shll
data16
jae
push
cltd
stos
xor
xor
ret
loope
pop
push
jno
or
cmp
sub
fdiv
out
movsb
subb
mov
push
mov
add
test
int
xor
cmc
adc
xchg
adc
sbb
dec
arpl
mov
xchg
loope
sub
clc
lods
mov
ud0
cli
inc
mov
mov
jle
mov
pusha
pushf
xor
xor
push
sub
push
outsb
mov
mov
xchg
adc
popf
shrl
push
cwtl
jne
push
cmp
ficomps
out
ret
aaa
jp
sub
mov
lcall
punpckhdq
repnz
mov
iret
pop
sbb
xor
mov
inc
loop
scas
fists
sti
outsb
cli
test
mov
push
outsb
jbe
mov
lods
pop
mov
mov
call
fistpll
aas
sub
sub
mov
or
push
pop
push
lock
jno
push
jge
mov
sahf
lahf
aaa
add
cld
in
or
mov
pop
mov
pop
push
sbb
or
sbb
push
ficompl
pop
pop
sbb
repnz
out
repz
fldcw
mov
jb
lret
jo
fnsave
je
rcll
xchg
add
jle
mov
push
ret
push
push
ret
mov
mov
ret
bound
int
push
stos
push
and
xor
add
out
and
pop
mov
xor
pop
inc
adc
jle
icebp
cmp
add
aas
mov
fwait
inc
iret
inc
shlb
out
jmp
aad
enter
mov
cltd
and
test
cmp
push
xchg
sub
xor
aas
mov
push
add
aad
push
sbb
mov
jg
ljmp
int3
sbb
sahf
mov
add
cld
pop
stos
popa
out
inc
add
test
aaa
push
sub
dec
aam
inc
inc
jb
pusha
cwtl
fimuls
iret
cmp
inc
ja
and
xor
in
pop
push
sti
fwait
rorl
test
clc
pop
loope
lret
add
mov
sub
mov
pop
test
fidivrs
aam
mov
movsb
xchg
shrl
in
or
mov
mov
in
out
push
insl
out
mov
add
lds
cs
sbb
inc
push
and
sub
loope
shll
cli
test
call
sbb
push
jbe
enter
test
sbb
rcl
push
stos
out
cwtl
pop
popf
sub
sbb
lods
pop
xor
add
xor
fisttpl
xlat
add
subb
ret
icebp
add
addb
fwait
lods
xchg
test
mov
mov
push
ljmp
inc
fldl
nop
jle
xor
cmp
testb
fwait
loope
adc
js
jns
adc
int
adc
test
cmc
push
and
shll
movsl
pop
jnp
leave
and
cmpsb
jecxz
test
pop
into
and
jecxz
int
sarl
xor
imul
rcrb
push
popa
dec
xchg
inc
jbe
jo
es
jns
push
iret
adc
mov
sub
stos
das
movq
in
ss
into
and
dec
pop
cs
bound
arpl
loope
pop
out
das
jb
xor
enter
call
ljmp
imul
or
stos
sbb
outsl
push
and
sub
aaa
mov
and
and
sbb
ret
mov
push
xor
push
jo
idiv
lea
rcll
pop
aam
sahf
insl
sbb
jmp
dec
jno
pop
cld
aas
jle
mov
fucomi
insb
lea
lret
stos
xchg
push
js
ss
inc
pop
loopne
mov
bound
in
xchg
decl
pop
pop
mov
or
fdivr
adc
pop
mov
fwait
sbb
mov
aaa
inc
sbb
add
mov
addr16
insl
je
in
jo
push
ret
lods
xchg
mov
scas
loopne
add
fwait
pop
push
lahf
inc
dec
rcl
lret
repnz
addr16
xchg
dec
pop
shrl
sbb
out
sar
repz
mov
lret
or
pop
in
outsb
adc
and
ds
bndldx
sub
in
dec
or
insb
adc
xor
daa
xchg
fs
test
in
jmp
jmp
hlt
mov
test
mov
push
cmp
lahf
in
pop
dec
imul
jns
jae
scas
inc
loopne
icebp
xchg
mov
cs
xchg
mov
dec
sahf
jae
std
add
adc
in
add
xchg
test
inc
es
aaa
xchg
into
jl
push
movsb
test
jo
cmp
xor
jg
idiv
scas
gs
cmp
or
mov
pusha
push
lret
xor
xrelease
push
cmp
mov
into
jle
stos
cmc
scas
push
pop
cmp
enter
or
and
mov
xchg
ficomps
push
fldt
sbb
clc
sbb
xor
loopne
pop
add
int3
inc
sub
sub
pop
arpl
stos
ret
inc
out
lcall
push
adcl
ret
ja
xorb
in
push
lret
rcrl
jp
push
add
push
cmc
jle
mov
fsubs
je
cmp
gs
push
les
xor
std
ret
outsl
sarb
sub
lahf
xlat
sti
int
jnp
movsl
inc
hlt
inc
pop
std
out
dec
add
xlat
pop
lcall
js
loope
xchg
hlt
dec
push
lea
popf
sti
cmpsl
repnz
adc
negb
mov
jo
cmp
popf
push
mov
xchg
inc
sub
negb
fs
xchg
leave
mov
jno
push
or
rclb
daa
xlat
push
xor
mov
push
insl
es
outsb
push
rcll
inc
mov
or
lods
pushf
sbb
arpl
rcll
insl
xchg
lock
mov
lock
pop
nop
out
pop
mov
in
test
jmp
push
in
xor
and
xor
out
scas
loope
dec
xchg
push
mov
inc
dec
es
pop
cmp
out
and
ljmp
mulb
in
pop
dec
outsb
adc
and
dec
inc
ret
cwtl
cmp
and
cld
adc
neg
stos
out
jg
aam
repz
mov
mov
cltd
call
pop
ret
hlt
cmp
call
jb
pop
jo
xchg
cmp
in
stc
mov
and
leave
fucomip
ret
xchg
xchg
xchg
daa
sub
out
repz
js
cmp
xor
inc
addr16
adc
andb
add
bound
inc
es
loop
pusha
xchg
push
icebp
jne
shrb
leave
mov
xchg
jmp
fidivl
pushf
adc
test
sbb
add
sahf
xlat
cmp
orl
icebp
roll
push
mov
dec
mov
outsb
pop
pushf
pop
mov
push
cmpsb
pop
sbb
outsb
mov
in
sub
aas
ds
ss
and
push
scas
inc
jb
clc
push
mov
clc
sbb
sub
inc
adc
lea
xlat
or
jb
xchg
jp
push
idivb
or
cmpsl
shl
lods
popf
daa
mov
push
push
test
clc
popf
sub
lcall
xchg
add
inc
and
jp
int3
sbb
inc
adc
mov
lods
mov
mov
popf
fwait
mov
adc
addr16
xor
and
addl
sbb
aad
dec
fcom
jge
insl
imul
sub
adc
orb
sti
insl
cmpsl
mov
inc
pop
pop
cwtl
pop
es
ljmp
sbb
ret
xor
dec
fimull
xchg
in
sbb
mov
sbb
mov
insl
sbb
xchg
push
push
sbb
sub
inc
dec
xchg
out
and
xchg
push
fwait
icebp
mov
xchg
mov
inc
pusha
push
push
inc
jbe
push
and
adc
add
lock
loopne
shl
shl
xchg
mov
inc
pusha
push
push
inc
jbe
push
and
adc
add
lock
loopne
shl
shl
xchg
mov
inc
pusha
push
push
inc
jbe
push
and
adc
add
lock
loopne
shl
shl
xchg
jbe
inc
pusha
cld
cli
inc
add
test
out
fcos
leave
jl
outsl
into
pop
decb
aas
push
pop
out
aas
cli
and
fistpll
outsb
mov
ds
cs
outsl
into
xor
dec
out
aas
sahf
das
add
mov
out
outsb
mov
jno
push
lahf
jle
cs
dec
popf
into
int
xchg
in
and
movzbl
and
addr16
dec
shrl
adc
and
cmp
and
mov
mov
scas
sbbl
xchg
movsb
lret
lahf
scas
jb
incb
push
pop
push
xor
pop
repz
aas
jo
sbb
pop
shl
outsb
mov
sbb
lret
jecxz
ds
push
pop
fidivrs
sahf
das
out
inc
sqrtps
mov
xor
sahf
jge
lret
bound
jg
shrb
mov
test
fistpll
scas
packuswb
adc
push
bnd
out
mov
rcr
or
int3
pop
jmp
push
cmpl
icebp
lahf
mov
pop
jp
in
sahf
push
mov
fs
mov
xor
inc
push
mov
rclb
loope
xlat
bswap
lcall
mov
pop
int
sarl
ljmp
lahf
cs
push
icebp
dec
mov
cwtl
cmp
or
dec
rolb
into
inc
adc
sbb
insb
cli
das
mov
mov
out
dec
fistpll
outsb
mov
ds
jg,pn
outsl
into
pop
decb
aas
sahf
das
mov
mov
out
dec
fistpll
outsb
mov
ds
jg,pn
leave
sbb
pop
lods
jno
lods
in
sahf
sbb
mov
jl
push
inc
stos
sub
imul
dec
sbb
fidivs
adc
lds
xchg
std
incb
adc
mov
movsl
mov
arpl
cmp
mov
insl
jmp
stc
and
xchg
icebp
mov
dec
inc
add
pop
mov
lret
add
adc
mov
add
sbb
int
data16
jmp
cwtl
leave
stos
add
sahf
pop
push
mov
cmpsb
inc
scas
push
mov
jns
scas
fwait
lods
or
jnp
mov
jg
mov
jmp
adc
leave
xor
mov
bound
sbb
push
aas
rcll
sub
imul
fidivl
xor
in
popf
inc
and
xor
sbb
test
in
dec
int
dec
sbb
adc
adc
inc
xchg
lock
jae
ret
addr16
imulb
aaa
sub
jnp
and
enter
hlt
and
loop
add
mov
es
sub
js
push
xor
push
or
push
aam
call
arpl
arpl
ret
jae
add
jne
add
push
jecxz
outsb
jno
test
mov
mov
or
sub
lods
imul
sub
mov
call
or
mov
imul
sahf
hlt
imul
jle
sahf
lret
ljmp
lods
dec
adc
dec
mov
push
shll
pop
sbb
mov
mov
mov
faddl
aad
lods
pop
adc
mul
jae
push
fs
sub
mov
out
ficoml
dec
mov
inc
jecxz
pop
daa
push
jns
js
pop
fmul
orb
inc
test
push
push
mov
fnstenv
icebp
les
lcall
imul
sbb
ret
jae
dec
sahf
and
nop
or
pushf
mov
test
ret
adc
and
inc
inc
pop
out
clc
test
pop
iret
lea
inc
stos
shlb
push
addb
je
fisubs
adc
or
adc
popa
and
jae
clc
rcr
in
push
sub
fwait
cmp
les
loop
out
xor
and
repnz
and
jp
cmp
sbb
and
sbb
cmpsb
jmp
mov
stc
fucomp
jb
inc
shlb
gs
scas
push
mov
sub
add
mov
cmp
add
add
mov
notb
sbb
mov
iret
sbb
lods
int
shrb
jne
mov
or
or
lods
or
in
xchg
pop
repnz
pushf
imul
hlt
cmp
sarb
insl
and
pushf
lods
mov
sub
js,pt
xchg
filds
test
jns
mov
jle
sbb
sbb
add
out
lods
cmp
into
mov
bound
mov
adc
mov
push
sbb
push
lea
test
mov
mov
test
out
xchg
push
out
mov
into
loop
andl
sub
ja
push
jbe
sbb
push
push
sub
es
out
dec
ret
out
pop
mov
cmp
lahf
pop
js
jp
push
out
jo
aaa
mov
mov
shrb
mov
ja
dec
xchg
pop
mov
mov
arpl
sarl
int3
lds
dec
sub
repnz
test
inc
rcrl
in
sbb
lea
loopne
inc
orl
sbbb
daa
pop
xor
adc
xor
xchg
jmp
sarl
mov
flds
xor
sahf
xor
test
scas
fwait
lock
stc
dec
repnz
outsl
pop
flds
clc
mov
add
mov
inc
jno
pop
ljmp
pushf
repnz
cmpsb
xlat
icebp
arpl
and
jl
push
cmp
movsb
inc
pop
adc
push
addl
icebp
mov
scas
mov
dec
sahf
xchg
hlt
push
faddl
push
mov
outsl
dec
push
lahf
jae
add
stos
loop
test
pop
pop
inc
loope
and
xor
xchg
icebp
push
loope
insb
add
jge
push
sub
add
fwait
mov
jl
inc
std
outsl
xchg
pop
jmp
sub
lock
outsl
sbbl
dec
shll
dec
and
fcoml
xchg
dec
mov
jb
pop
add
mov
filds
ja
push
std
jg
cmp
inc
inc
inc
notl
cmp
mov
xor
add
jno
pop
push
and
and
popa
xchg
cmp
inc
inc
std
in
mov
jmp
stos
or
jmp
in
add
xor
push
jg
rcll
push
das
sub
and
in
jmp
add
lods
push
repz
jns
ret
shrl
iret
ss
add
cmp
std
xchg
shll
int
push
inc
addb
adc
in
idivl
xchg
dec
jae
mov
out
xchg
call
pop
or
inc
sub
adc
movsb
cmp
arpl
out
mov
push
or
xor
idivl
clc
inc
jns
push
gs
xor
add
sarb
push
lds
sub
hlt
add
xchg
enter
sub
scas
pop
dec
es
lret
ja
stc
adc
pop
in
push
cmp
je
cmp
push
aam
jns
jnp
hlt
adc
sub
es
adc
pop
add
or
xchg
enter
xchg
movhlps
in
repnz
pop
test
cmpsl
mov
icebp
scas
xchg
aam
mov
pop
ret
inc
fidivl
jl
adc
push
mov
fstpl
push
rcll
or
xor
dec
aam
and
mov
cmp
xchg
out
popa
cmp
in
push
add
mov
icebp
call
xchg
mov
push
add
push
cmp
movsl
jo
ds
xchg
ljmp
stc
test
test
movsb
in
inc
stos
in
loop
das
inc
pop
lret
add
cmp
lock
sub
lods
adc
cld
stc
push
push
loope
test
pop
in
jecxz
push
mov
and
fsts
push
ret
mov
mov
into
int
xor
or
cli
test
pushf
or
add
cli
cmp
mov
jnp
add
sub
daa
push
pushf
je
sub
repz
push
mov
outsl
push
push
pop
push
xchg
mov
sub
mov
out
adc
add
scas
add
sbb
ljmp
sub
test
cli
sub
mov
aad
lahf
aad
cwtl
inc
mov
rcr
or
arpl
xor
fisubs
mov
xchg
lahf
les
in
sbb
dec
loop
and
scas
hlt
xchg
fs
std
or
or
pop
jge
pop
mov
pop
sbb
inc
adc
rcrb
ret
les
jge
jnp
bound
sbb
pop
push
mov
rclb
lods
in
insl
fstpl
and
fdivl
rcll
pushf
jnp
js
jl
test
cmp
push
xchg
stos
push
push
mov
mov
mov
fnclex
out
jl
jo
and
sarb
xor
adc
inc
jl
and
lds
mov
jne
lret
insb
xlat
hlt
mov
leave
xor
sub
or
mov
lods
mov
icebp
inc
daa
xchg
into
lea
insl
in
imul
shlb
clc
imul
je
jne
dec
add
mov
xchg
jne
out
mov
dec
jmp
inc
pop
gs
aas
je
subb
xchg
cmp
enter
xor
xor
or
xor
pop
loop
aaa
dec
cwtl
or
mov
fneni(8087
mov
sbb
ds
sti
sti
push
mov
inc
std
push
sbb
lret
push
mov
dec
sbb
lds
cmp
push
lcall
dec
divb
xor
lods
and
pop
cmp
mov
and
xchg
pop
xor
push
pusha
cwtl
adc
repz
push
shl
add
add
jae
xchg
lock
or
xor
fs
stos
hlt
test
push
sub
je
out
in
and
push
je
mov
push
mov
ss
mov
loop
adc
nop
adc
inc
das
jae
pop
pop
sub
lea
aaa
repz
xchg
and
stos
cwtl
hlt
jns
fucomi
pop
mov
mov
mov
pop
test
cmp
pop
pop
add
push
loopne
sub
pop
mov
ret
xchg
cmovbe
das
icebp
xor
pop
ret
sahf
pop
rol
pushf
stos
data16
aam
pop
pusha
cmpsb
pusha
push
hlt
call
mov
test
dec
dec
push
sub
mov
hlt
test
lret
and
in
popa
jb
or
outsl
cld
outsb
push
jecxz
fisttpl
pop
stos
test
xchg
xor
mov
mov
sahf
mov
jmp
jb
push
nop
xor
pop
cltd
popf
shrl
mov
rolb
mov
inc
fbstp
repnz
movsl
xlat
add
or
xor
in
dec
inc
pop
lods
notb
pop
push
adc
mov
movsb
pop
add
es
test
xor
dec
int
sbb
xor
push
repnz
xchg
idivl
xor
ret
sti
pushf
or
or
pop
shll
subb
mov
mov
push
ficomps
push
aad
fucompp
mov
dec
push
lock
test
inc
lret
std
dec
xor
imul
je
add
add
popf
xchg
pop
in
inc
xchg
inc
fstl
pop
shll
imul
mov
sub
ja
jbe
insl
aas
push
push
dec
dec
imul
cld
sbb
mov
js
mov
fcoml
sbb
cmp
lret
pop
ljmp
leave
lcall
mov
mov
xchg
push
stos
xlat
pop
mov
popa
repz
aam
mov
add
sbb
adc
push
out
bound
inc
add
fldl2t
je
dec
pusha
addr16
xchg
xchg
outsb
out
sub
fs
add
jne
nop
inc
or
imul
popf
mov
pop
pop
sbb
jl
lcall
mov
push
stc
jge
jns
mov
mov
enter
xor
dec
xlat
into
cmp
push
add
cmp
test
fs
jnp
lods
addr16
push
sbb
and
mov
jl
outsb
test
rclb
repz
outsb
push
cmp
enter
jecxz
sarl
insb
add
movsl
mov
lahf
mov
mov
fiaddl
mov
sub
cli
mov
ret
jbe
sub
xchg
arpl
pusha
imulb
clc
adc
nop
out
mov
loope
mov
add
orb
jae
mov
repnz
cli
jg
pop
call
and
out
adc
jg
add
scas
mov
and
ds
out
outsl
stos
stc
outsl
jae
fimuls
jge
test
jecxz
mov
pop
cmp
push
inc
sbb
lods
cmpsl
dec
daa
xor
sbb
scas
gs
xbegin
mov
arpl
stos
fisttpl
daa
into
roll
in
fbstp
clc
scas
push
adc
and
sub
icebp
mov
add
sti
adcb
into
push
or
sti
lahf
test
lret
std
or
aaa
stos
js
es
mov
add
xor
clc
movsl
mov
jp
jnp
sbb
insl
mov
aas
sub
aad
xor
into
mov
in
xchg
in
mov
je
bound
shrb
sub
das
jo
mov
sub
icebp
out
iret
inc
lods
rorl
mov
sub
mov
fxch
std
test
call
popa
lods
or
cwtl
clc
push
cmp
movsb
push
sti
mov
jl
loopne
pop
shrb
sbb
clc
loope
add
cmp
dec
pusha
mov
stc
inc
loop
push
cmp
cli
lock
jo
int
fimuls
push
fwait
orl
je
movsb
or
sbb
sub
lahf
inc
jo
xor
rcrl
sarl
je
xchg
jecxz
adc
xchg
les
cltd
and
js
push
loop
aam
xchg
loope
enter
cmp
aas
cld
or
dec
shlb
mov
and
cwtl
push
es
cmpsb
lret
bound
xorl
jl
jecxz
mov
xlat
iret
lock
inc
loopne
mov
xchg
ds
mov
pop
out
inc
sub
in
test
jb
aaa
cmp
iret
xor
xchg
int3
lods
movsl
push
iret
pop
add
fdivs
les
jne
xor
loop
subl
outsl
jle
mov
and
pop
mov
add
jp
in
sbb
push
and
or
jge
adcl
mov
out
adc
loop
ficompl
test
cmp
cmp
ret
int
sbb
aam
repz
jle
mov
xchg
std
dec
fisubrs
pushw
nop
push
sub
stos
sbb
push
adc
and
pop
xor
cmp
mov
hlt
sub
cmp
bound
mov
push
fdivrs
aaa
lods
pop
or
xchg
inc
push
outsl
pop
in
sub
pop
dec
xchg
jmp
mov
jge
adc
cmp
xchg
shlb
and
mov
cli
xchg
jp
pop
push
xchg
gs
xor
ds
push
jl
jae
push
and
mull
jmp
or
xchg
jae
fldl
hlt
jge
pop
mov
orb
inc
jle
xor
call
mov
xchg
or
mov
fs
push
fsts
and
fistps
cvtps2pd
loope
push
cmovnp
add
xor
xor
inc
aaa
mulb
ret
dec
pop
pop
cltd
xchg
out
adc
adc
xchg
mov
mov
mov
insl
sub
mov
push
inc
stos
mov
cmp
and
lret
sbb
cld
icebp
cli
xchg
pusha
jne
movsl
cmp
xor
adc
hlt
push
cmp
out
mov
jp
inc
sub
xchg
data16
add
es
lret
sbb
push
das
push
adc
jns
std
push
mov
ret
in
sbb
push
adc
fbld
cmp
adc
inc
std
neg
sbb
lock
add
xchg
int3
in
sarl
out
or
fsubs
jne
lret
xchg
xchg
iret
lds
pop
ljmp
xchg
daa
ja
fsubs
aaa
mov
mov
push
lds
cs
popa
sbb
mov
mov
sahf
push
pop
mov
test
add
fwait
inc
imul
cltd
sub
xor
jne
fsubr
test
mov
pop
xchg
and
cmp
dec
pop
fs
outsb
fistpl
jg
cwtl
das
mov
mov
je
push
fstps
mov
leave
dec
mov
dec
in
mov
int3
in
stos
test
aaa
lret
ficompl
pusha
and
jb
in
sbb
pop
mov
inc
cmp
adc
sub
sbb
fwait
xchg
push
push
and
lock
and
mov
imul
jge
push
mov
sbb
jmp
aad
scas
lds
pusha
mov
lods
movsl
loopne
push
cld
mov
mov
xchg
inc
inc
in
mov
movsl
push
xor
jo
or
jb
in
mov
or
adc
push
and
push
and
add
pop
jae
mov
mov
xchg
sbb
cs
or
imul
mov
movsb
std
fucomp
mov
inc
movsb
and
nop
nop
xor
aad
int
lods
rorb
push
pop
ret
hlt
add
xlat
arpl
lcall
enter
inc
dec
clc
xor
pop
add
mov
rcll
dec
and
lods
es
call
cmp
std
shlb
out
imul
jo
jl
mov
push
aaa
cmp
out
dec
pop
sbbb
dec
lock
push
mov
add
and
mov
arpl
sub
sbb
xchg
std
outsl
pushf
mov
rcr
mov
push
xor
roll
add
xor
pop
inc
cmp
loope
sbb
push
jae
andl
dec
xlat
int
or
xlat
aam
leave
insb
pop
mov
xchg
jge
sti
xor
cmp
mov
nop
scas
add
fmuls
xchg
les
mov
push
mov
in
or
jno
mov
and
and
sbb
dec
insl
scas
add
dec
leave
rsm
das
test
adc
and
cmp
outsb
push
pop
sbb
outsb
jo
in
out
dec
addl
lea
mov
fs
sub
es
push
fstp
jne
cmpsl
adc
pop
stos
insb
cltd
dec
lret
mov
int
fmuls
jp
or
mov
dec
scas
lea
repnz
popf
push
add
and
push
cmpsl
int
loopne
daa
aas
sbb
outsl
jns
push
bound
test
dec
repz
test
dec
xchg
inc
in
sub
mov
mov
mov
mov
das
dec
rcrl
addl
out
lret
mov
adc
cltd
int
pusha
rcrl
insb
rorb
cmpb
mov
push
jb
in
fbstp
decb
mul
popl
das
fistps
xlat
data16
std
sbb
xor
or
imul
lds
cltd
add
stc
jae
push
aas
popa
xchg
sahf
inc
and
pop
add
outsb
rcr
iret
mov
or
mov
insl
fisttps
or
inc
mov
push
mov
leave
push
sbb
mov
xchg
call
std
aad
test
out
jmp
adc
sub
cs
test
inc
mov
sbb
int
cmp
mov
or
jecxz
sarl
adc
cld
cld
pop
std
jno
aad
mov
dec
and
add
imul
rcrb
mov
add
lret
hlt
sub
dec
inc
movsb
add
cmp
inc
mov
mov
adc
adc
or
cwtl
xor
sbb
lahf
add
fcomps
xchg
push
push
sub
cmp
rorl
mov
daa
filds
jno
fisubl
addr16
es
xchg
cltd
pop
sti
inc
les
lock
hlt
mov
or
jns
shrl
xor
mov
xchg
shrb
int
pop
mov
out
imul
sbb
push
shlb
push
jge
ror
scas
push
stos
dec
cmp
fcompl
jle
in
xor
sub
pop
cmpsl
cmp
test
pop
movsl
std
mov
sub
sub
jmp
lea
add
jp
mov
in
and
sub
loope
xor
shll
mov
or
loope
test
mov
fsubr
insb
push
push
pop
push
repnz
fldenv
subb
js
sahf
jbe
pop
and
push
mov
out
sub
lock
cwtl
lcall
xor
repz
fildll
out
push
pusha
out
aas
out
clc
ret
rorl
xor
adc
inc
pop
push
pop
in
scas
pop
jmp
pop
dec
mov
or
inc
loope
mov
jecxz
pop
sub
movsl
lock
inc
cmp
mov
or
dec
std
roll
mov
rclb
dec
loope
jb
sub
outsl
pop
out
out
or
inc
adc
push
pop
jbe
aad
test
mov
shrb
jmp
clc
xlat
pop
jl
cmp
fnstcw
ljmp
jb
add
pop
aaa
fcmove
push
gs
aad
push
js
mov
mov
mov
cs
mov
push
xchg
mov
mov
inc
jns
ljmp
sbb
jge
dec
das
mov
div
ja
push
cmp
xor
inc
mov
and
out
adc
and
mov
mov
dec
jp
inc
push
mov
sub
pop
jnp
cwtl
hlt
fs
xchg
xor
cmp
mov
enter
jo
fdivl
xchg
xchg
xchg
xchg
add
push
adc
or
icebp
mov
jg
sub
mov
xor
dec
dec
adc
jmp
repnz
pop
jg
or
insl
adc
cmpsl
sub
and
sbb
sbb
das
mov
mov
out
dec
fistpll
outsb
mov
ds
jg,pn
outsl
into
pop
decb
aas
sahf
das
mov
mov
out
dec
fistpll
outsb
mov
ds
jg,pn
pop
xchg
xchg
scas
sahf
das
es
mov
out
dec
das
jle
outsb
mov
push
addr16
into
add
sahf
aas
mov
ds
scas
jmp
iret
sbb
xchg
daa
icebp
pusha
shll
rcll
pusha
or
sbb
dec
arpl
add
pop
pop
test
sahf
sub
cld
mov
sub
cmp
or
sbb
insb
adc
xor
sarb
xchg
sub
int3
mov
pop
xor
push
cmp
rorb
mov
test
lcall
sub
push
xchg
or
leave
popf
cmp
sub
sub
insb
shrb
fnstsw
test
out
adc
stc
aam
sub
push
pop
pushf
std
pushf
cmp
test
int
push
mov
dec
cmp
jl
cmp
mov
sub
jl
xor
sbb
aad
or
ja
nop
jl
cmp
or
sub
dec
add
mov
loopne
lods
arpl
inc
pop
mov
adc
fnstsw
repz
push
dec
rolb
enter
cmc
leave
lock
sub
and
or
xlat
mov
jbe
sarl
lods
das
test
cltd
icebp
mov
orb
sub
sub
addr16
adc
and
inc
fnstenv
test
int3
test
cmp
or
jge
and
pop
xor
sahf
repz
xor
mov
push
push
cmp
jl
sbb
dec
dec
sub
ret
frstor
sahf
jecxz
shlb
bound
insl
jo
js
adc
xor
sarb
in
nop
cld
mov
sub
cmp
or
sbb
insb
adc
xor
sarb
in
nop
cld
mov
sub
mov
das
push
cmp
lahf
lock
xlat
push
push
nop
cmp
and
lods
loope
pop
movsb
jb
xchg
mov
or
lea
cmp
xchg
bound
dec
mov
addl
jp
add
int3
fildll
lret
sub
ja
mov
push
hlt
mov
negl
in
fucomp
inc
inc
mov
sti
push
pop
fnstsw
roll
mov
popf
test
adc
pop
ja
int3
adc
and
pop
pop
movsb
cs
sbb
fnstsw
cmpsb
push
mov
or
jecxz
lret
mov
jmp
fildl
xor
inc
mov
mov
mov
adc
xchg
inc
cmpsl
inc
inc
jbe
mov
push
roll
mov
push
add
movsl
jecxz
les
pop
in
push
push
jnp
xchg
insb
dec
dec
lcall
xchg
xor
jbe
lods
insb
sarb
jle
sbb
lds
lods
insb
sti
mov
mov
loop
lods
jo
cmp
or
mov
test
push
mov
push
dec
inc
cmp
das
cmp
stos
sbb
or
xor
pop
and
dec
cmp
mov
fcmovnb
adc
jbe
adc
out
push
cmp
imul
jg
mov
out
push
fisttpl
mov
fisubl
pop
mov
jp
mov
pop
imul
adc
mov
cmpl
sub
outsl
mov
aas
mov
mov
xor
adc
sub
rclb
idivl
mov
dec
jb
sarl
inc
adc
out
adc
fsub
mov
popa
and
in
nop
push
pop
into
add
jle
loop
cltd
nop
jae
cmp
in
rorb
jmp
rolb
das
ss
jmp
test
out
iret
leave
push
jae
pop
test
sub
add
movsb
push
popa
fsubl
inc
fimull
sbb
mov
imul
cmpsb
aad
mov
inc
loop
aad
mov
mov
or
repz
into
mov
es
and
push
out
fistl
out
lods
mov
xchg
jmp
pop
mov
insl
xchg
shlb
repnz
loope
pop
xchg
mov
mov
pop
jmp
nop
mov
call
or
jno
sbb
sti
pop
shlb
xor
lock
push
sbb
mov
nop
xor
imul
int
out
shrb
or
xor
data16
mov
add
mov
dec
imul
adc
jle
inc
std
scas
xor
loop
sbb
movsb
pop
cld
mov
inc
lret
inc
imul
inc
aaa
fidivl
rcrb
jg
into
std
rclb
aad
jmp
scas
outsb
lcall
leave
inc
inc
cld
add
add
fwait
jle
mov
addb
jno
dec
js
cmc
gs
lods
lea
and
jb
cmp
inc
mov
sbb
mov
ror
sahf
movsl
inc
scas
adc
sbb
xorl
mov
or
ja
sub
xchg
jne
addl
lret
mul
repz
ret
mov
jns
maskmovq
testl
or
addr16
pop
cmpsl
mov
testb
or
movsl
cltd
cmp
mov
lds
lret
push
in
mov
in
mov
lds
cmp
inc
xor
xchg
sar
lea
out
dec
aas
sub
push
push
or
lock
push
adc
dec
std
xor
jo
dec
rorb
xchg
cmp
sbb
inc
pop
fs
daa
cwtl
push
lds
jno
mov
aam
dec
out
xchg
jno
add
jo
in
adc
or
cmp
popf
mov
adc
cmp
xchg
enter
test
xchg
mov
inc
xchg
push
xor
push
fbstp
scas
in
insb
pop
jo
cmp
ret
rolb
inc
inc
jnp
xchg
cmp
lods
fwait
cmp
inc
mov
jo
mov
jno
mov
cli
test
fidivrs
cmp
mov
test
add
out
jb
jmp
xlat
icebp
sahf
mov
inc
rclb
out
mov
dec
dec
repnz
dec
out
pop
addr16
aaa
push
stos
jno
call
rcrl
dec
push
add
push
xchg
repz
jb
pop
dec
insb
push
jl
mov
inc
adc
sub
add
popf
movsb
std
xchg
jmp
call
divl
rorl
sahf
and
mov
faddl
aaa
push
sub
cmpsl
jnp
lcall
mov
leave
and
adc
mov
inc
imul
test
push
mov
xchg
sub
and
aad
sbb
xor
push
jb
adc
out
loop
fneni(8087
cmpb
imul
in
mov
jmp
scas
fisttpll
dec
ds
jecxz
xchg
inc
inc
pop
cwtl
push
int3
fadds
movsl
push
js
xor
mov
lcall
cmp
push
jno
jecxz
jecxz
jae
cmp
jl
fbstp
outsl
loope
mov
int3
adc
popa
andl
jo
aad
sahf
xchg
sbbb
mov
push
xchg
jle
scas
or
gs
lock
fs
lods
lret
xorb
and
xchg
cmp
testl
callw
jecxz
sahf
ret
outsl
mov
mov
jns
add
outsl
arpl
pop
push
dec
icebp
push
ds
jae
add
andb
addr16
fadds
rolb
fiaddl
fistpll
test
add
andl
jbe
cmc
test
xchg
mov
dec
pusha
xor
add
movsl
push
cmp
inc
sbb
cmp
into
in
cmp
mov
fnstenv
icebp
pop
cmpsb
add
mov
dec
int
jnp
or
jb
test
mov
add
cwtl
pop
mov
rorb
or
in
movsl
leave
shlb
sbb
imul
xchg
test
ja
sub
pop
push
and
dec
jbe
cs
add
std
pop
lea
adc
pop
add
fisttpl
pop
sub
mov
mov
into
mov
lock
je
bound
mov
sbb
pop
ljmp
jecxz
fstl
shll
int
ljmp
sub
mov
mov
mov
mov
int
add
je
lret
jb
inc
lods
adc
stos
pop
push
loop
fmull
enter
or
add
and
sub
sbb
pop
ljmp
cltd
xchg
loop
ret
or
push
hlt
or
push
fwait
sub
inc
dec
cmc
ret
mov
or
lret
out
mov
imul
imull
sub
pop
inc
mov
inc
cmc
sti
popf
jmp
jae
push
dec
or
jl
xchg
les
int
xor
cmp
addr16
mull
mov
mov
jp
push
jne
insb
jne
dec
sub
ds
cmpsb
add
shr
adc
rclb
inc
insb
push
push
xor
cmpsl
push
out
cmpsl
in
test
in
out
push
jmp
std
lea
mov
enter
addl
pop
inc
mov
mov
sbb
outsb
xor
xchg
fwait
pusha
xor
push
mov
xorb
incb
loop
pop
push
stos
cmpb
dec
inc
stos
mov
bnd
add
jmp
pushf
sbb
and
lcall
push
inc
fbstp
loope
mov
xor
adc
das
aaa
mov
imul
mov
pop
pop
out
pop
xchg
xor
sub
xor
pop
addr16
fdivrp
loop
pop
and
cmp
test
push
shlb
fcom
xor
pushf
pop
push
popa
pop
or
sub
mulb
mov
dec
sub
jns
adc
repnz
cmc
sub
push
xlat
fcompl
xchg
outsb
jmp
lock
mov
jns
mov
xchg
jo
imul
shlb
adc
pop
push
sbbl
pop
femms
pop
aaa
fsubr
inc
cs
fnstcw
add
xchg
cvtps2pd
xchg
inc
fwait
call
fdiv
dec
cmpsl
test
mov
xor
cld
jnp
pop
mov
xlat
test
xchg
push
vpaddb
in
sbb
daa
cwtl
insb
in
push
rcll
jp
mov
arpl
scas
aam
fsubl
pop
cwtl
nop
mov
jno
mov
and
jnp
pushf
or
mov
popf
mov
pusha
push
incb
dec
cmp
xchg
shl
adc
les
lret
jno
cmp
mov
movsl
aam
or
xchg
int3
and
add
in
jle
movsb
je
push
lds
aas
icebp
outsb
cmc
pop
flds
push
sub
test
pop
xchg
cld
mov
movsl
inc
mov
inc
int3
fucomip
or
pop
loope
sbb
leave
outsb
adc
fnstsw
shll
mov
dec
shll
xchg
mov
lds
mov
out
loope
or
mov
popa
fdivrs
test
fcomps
jge
lahf
or
sbbl
fidivrl
inc
in
push
mov
out
imul
and
adc
jg
sub
imul
adc
inc
xchg
jo
stos
hlt
sub
push
push
mov
mov
aas
jl
popf
inc
push
add
push
lcall
and
inc
or
adc
xor
pusha
or
cmc
push
dec
fnstcw
roll
dec
ljmp
das
jnp
dec
pop
mov
in
popf
idivb
pop
push
pushf
or
int3
enter
add
out
test
mov
inc
sbb
cwtl
jge
cmp
fcomp
push
test
and
xchg
call
loop
test
int
into
add
into
sub
popfw
jne
test
out
test
mov
daa
loop
inc
roll
cwtd
addr16
jmp
or
out
jae
cld
push
mov
outsl
inc
into
inc
mov
je
lret
mov
and
in
vandps
mov
xchg
xchg
mov
xchg
push
testb
xor
xchg
mov
push
push
int3
mov
inc
arpl
lock
ljmp
pop
mov
push
inc
sbb
leave
sbb
sti
icebp
cli
cmp
cmp
push
add
pop
je
ljmp
or
pop
lret
flds
push
jmp
imul
push
xor
jp
stos
push
shll
out
cld
loope
popa
clc
loopne
sti
jnp
fwait
fwait
xchg
or
push
mov
inc
insl
and
ret
pmaddwd
jmp
sub
in
sbb
inc
repz
loope
dec
in
push
and
xchg
test
xor
fdivrl
fnstsw
push
and
xor
ds
dec
xlat
lahf
push
mov
cmp
fcoml
sbb
or
enter
push
and
pop
popf
ror
test
aad
into
or
add
dec
inc
xchg
sub
dec
jns
xor
movsb
mov
aad
stos
mov
aam
clc
icebp
inc
push
push
jo
and
mov
not
movsb
sub
jnp
scas
ret
inc
in
call
mov
out
cmp
xor
lahf
push
shll
fiadds
and
stos
enter
cmc
push
mov
imul
popf
aas
shl
stc
or
xor
loope
in
jo
mov
test
mov
xchg
pop
jb
inc
sbb
roll
call
lods
add
dec
cmc
jmp
out
fsub
nop
push
icebp
loopne
jp
mov
ret
and
mov
dec
push
pop
add
aam
aad
sbb
cmp
nopl
addr16
or
out
xchg
mov
jmp
mov
test
dec
add
sub
test
inc
sub
mov
dec
xchg
es
jns
popa
aam
xchg
daa
out
sbb
mov
mov
mov
mov
sbb
and
out
ret
pop
int
mov
sbb
test
das
cmp
mov
inc
fs
lret
fwait
xchg
outsl
leave
shrb
push
and
sbbb
push
push
and
xchg
jbe
push
cmp
sub
pushf
std
mov
jp
and
jmp
shrb
push
insb
xor
cmp
fsts
in
and
in
rol
jmp
bound
aad
jmp
dec
les
xchg
iret
sbb
dec
sub
add
decl
mov
ja
dec
push
and
mov
add
push
daa
or
das
xchg
lods
push
pop
movsb
inc
in
or
sub
or
pop
mov
imul
je
fidivrs
or
out
insb
pusha
pushf
nop
sub
adc
dec
mov
mov
popf
push
inc
xlat
xchg
repnz
sub
subl
andl
lret
les
dec
outsb
xchg
fsubrl
jg
cmc
rcrl
clc
xchg
jmp
jb
lcall
sub
or
and
jge
out
dec
or
loopne
push
push
in
xor
sahf
dec
mov
or
pop
xchg
mov
pop
xor
xor
int3
jge
xchg
notl
mov
mov
pushw
cwtl
and
hlt
adc
jge
mov
loop
vpsrad
arpl
or
sbb
xchg
sub
les
test
movsw
loope
pop
fidivrl
in
push
sbb
ret
jle
sub
and
sub
icebp
mov
andb
ja
mov
fimull
dec
ficoms
mov
in
mov
cld
stos
adc
test
imul
cmovge
inc
add
jb
stos
fcmovnbe
dec
cli
cmp
and
mov
pop
pop
jnp
test
shr
lcall
out
testb
mov
cltd
test
daa
mov
lds
mov
inc
js
stos
jns
or
sbb
or
out
push
test
stos
and
mov
std
negl
sbb
and
pop
lret
fistpll
sti
lahf
xchg
cld
mov
add
arpl
test
outsb
rcll
outsl
jl
sub
movsl
xchg
rorl
rol
scas
push
daa
notrack
nop
popf
push
std
dec
scas
cmp
cmp
es
adc
unpckhps
stos
in
jmp
xchg
mov
loop
push
leave
sti
dec
mov
inc
xchg
xchg
in
faddl
sbb
xor
push
push
stos
jl
fdivl
daa
aas
xchg
or
lods
or
dec
ret
sub
test
push
cltd
aaa
test
fmull
gs
xchg
mov
mulb
cmpsb
insl
jb
mov
mov
in
xor
push
insb
repnz
fimull
jp
sub
adc
lcall
sbb
jge
pop
cmp
outsl
scas
mov
decb
push
ljmp
mov
ds
data16
dec
adc
pop
cmpsl
pusha
psubusb
ret
jmp
sti
mov
xchg
iret
lods
enter
adc
sub
xchg
jo
sub
cli
adc
cmp
jns
loop
inc
cmpsb
in
sbb
clc
sbb
mov
or
sbb
jb
data16
cmpsb
dec
repz
pop
push
adc
jl
in
xor
adc
jo
test
cmp
fst
mov
xor
cmp
in
es
shrb
inc
mov
aaa
fs
insb
dec
inc
test
sub
add
push
sbb
fstpt
jp
xor
inc
rcl
sub
das
jns
xchg
fildll
cmp
jno
jnp
dec
or
inc
sub
mov
das
pop
push
jno
inc
idivl
and
add
xchg
mov
mov
arpl
jg
push
test
sti
or
out
popf
or
filds
and
arpl
add
stos
push
inc
ret
add
jae
out
mov
in
mov
scas
daa
pop
push
inc
adc
sub
bound
into
mov
mov
inc
movsb
push
enter
imul
cmpsb
mov
cmp
fmul
mov
jp
cmp
jmp
mov
sbb
sbb
into
xor
cmpsl
add
inc
clc
dec
xlat
sbb
sbbl
ds
adc
adc
lret
out
jg
fadds
push
adc
cmp
mov
pop
xor
divb
sbb
rorb
fnstenv
mov
jnp
xchg
pop
adc
add
icebp
clc
das
xorps
sbb
addl
inc
cs
jmp
repz
mov
lahf
lds
cmpsb
mulb
mov
lds
jg
sbb
ds
orb
ja
xchg
jns
scas
imul
sbb
cmc
push
or
insb
loope
iret
mov
push
shll
or
jns
das
dec
pop
enter
sarl
ja
fnstsw
cmp
xor
mov
popf
mov
frstor
cli
pop
pop
mov
inc
dec
adc
add
or
xchg
push
adc
push
and
and
mov
push
push
xor
lds
push
ret
cmp
sbb
xchg
fisttpll
enter
ret
fucom
or
sti
sub
mov
push
ret
imul
add
or
jg
test
mov
xchg
pop
sub
or
sbb
lock
lds
popf
out
in
arpl
xchg
test
stos
cmp
je
sbb
cltd
ret
das
jnp
imul
push
pop
jo
int
lea
push
inc
leave
sbb
add
lds
jle
lods
je
leave
mov
lds
pop
jle
js
jp
leave
xchg
and
xchg
das
leave
and
xchg
fistpl
icebp
adc
xchg
les
adc
cmp
mov
mov
or
test
mov
out
enter
dec
jno
add
sbb
and
rcll
fisubrl
dec
dec
or
lahf
out
iret
xchg
and
dec
data16
sub
cmp
cmp
pop
mov
imul
push
mov
jno
pop
into
cwtl
lods
xchg
ror
cmc
push
cld
ds
in
xchg
jecxz
push
lock
jl
sbb
xor
leave
call
mov
lahf
enter
and
clc
movsb
addr16
sub
mov
and
adc
out
sbb
push
xchg
cmp
loopne
enter
jge
call
adc
ja
pop
dec
in
add
mov
push
inc
imul
lea
nop
icebp
or
loope
sub
jns
lret
repz
jg
and
jo
inc
popl
dec
push
imull
mov
lahf
mov
jg
mov
pop
or
or
inc
mov
jl
jg
add
popa
pusha
test
mov
or
adc
jmp
into
out
adc
hlt
sbb
inc
sub
adc
push
dec
aas
mov
fldt
xlat
adc
jae
outsl
test
fldl
dec
fisubl
stos
roll
mov
sbb
lcall
jl
sub
cli
ja
loop
nop
or
int
and
xor
xchg
cmpsl
aaa
test
and
stos
jo
stc
loop
or
push
mov
pop
and
rorb
fstl
mov
cmp
lds
rcrb
add
aad
mov
mov
clc
pushf
in
push
push
lds
pop
dec
out
enter
call
xchg
or
out
imul
mov
call
dec
leave
cmc
mov
jl
add
xchg
pop
xor
shl
or
je
sub
xor
cmp
pop
xchg
lret
adc
fdivrl
cmc
loopne
xchg
push
enter
mov
mov
mov
psubusb
mov
or
in
inc
adc
jns
cmp
cld
stos
inc
jo
gs
pop
addr16
sbb
and
jecxz
or
sbb
sbb
outsl
pop
xor
mov
dec
pop
ja
pop
add
inc
and
mov
sub
mov
out
sub
jb
push
outsl
dec
fildll
cltd
push
push
pop
arpl
das
jl
dec
add
xchg
sub
mov
push
pop
cs
addr16
or
sbb
cmp
xor
cltd
es
pop
jo
or
push
sbb
xor
lds
xor
fisttpl
cli
mov
pop
imul
jbe
repz
jg
fildl
jnp
jecxz
jp
andb
push
xchg
fists
fsub
aad
fistpll
cmp
sub
mov
movsl
push
pop
jecxz
push
sarb
mov
mov
into
ljmp
dec
cmovne
dec
imul
jecxz
sbb
insb
adc
xor
sarb
in
nop
cld
mov
sub
cmp
or
sbb
insb
adc
xor
sarb
in
nop
cld
mov
sub
cmp
or
sbb
insb
adc
xor
sarb
in
xchg
cld
mov
sub
cmp
or
sbb
insb
adc
mov
aas
lods
das
push
dec
mov
jmp
sbb
pop
xor
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
int3
outsb
fdivrl
dec
cld
pop
test
push
fstps
push
dec
out
pop
insb
into
jl
or
sbb
sub
cmp
int3
outsb
fdivrl
dec
cld
pop
mov
pushf
lods
push
mov
insb
into
jl
or
sbb
sahf
int3
outsb
fdivrl
dec
cld
pop
mov
pushf
lods
push
mov
mov
or
outsl
fisubrl
push
sahf
mov
sub
incl
aaa
std
test
ja
data16
jnp
subl
and
adc
mov
push
add
push
rcrl
pop
outsb
sbb
jp
insl
bound
jnp
test
mov
dec
mov
or
lahf
repnz
add
push
or
jno
lahf
int3
xchg
sti
jg
dec
sti
dec
in
arpl
cmc
out
dec
mov
xor
out
aam
mov
lahf
repz
subb
mov
push
icebp
aaa
dec
dec
stos
push
jmp
xor
in
pop
pushfw
sti
rorl
and
dec
add
cmpsl
in
cmp
or
sbb
pushf
lret
call
fwait
ds
movd
jle
dec
cld
pop
mov
pushf
lods
push
mov
insb
into
jl
or
sbb
sub
cmp
test
or
jg
imul
cmp
cmp
mov
pop
dec
or
sti
mov
dec
mov
adc
popa
stc
push
ds
cmp
sti
sarl
sti
push
lock
fmull
stos
cmp
lods
push
mov
insb
into
jl
or
sbb
sub
cmp
int3
outsb
fdivrl
dec
cld
pop
mov
pushf
lods
push
mov
insb
into
jl
or
sbb
sub
cmp
int3
outsb
mov
pop
jmp
sub
pop
and
testl
in
adc
pop
lret
ficoms
cmp
pop
in
push
pop
pop
cltd
dec
push
imul
jno
and
jns
lahf
stos
xchg
stos
push
out
mov
fsubl
repnz
adc
lahf
xor
test
xor
fisubrs
jmp
add
movsb
jmp
aaa
insl
jmp
cmpsl
push
cmpsl
mov
mov
cld
int
mov
insb
lret
cld
fs
nop
mov
or
pop
sbb
xchg
aas
and
js
push
pop
enter
les
add
jbe
and
add
cwtl
or
pop
rcl
lods
pop
sub
push
ds
bsr
sahf
jg
test
push
movsl
push
dec
mov
lret
test
mov
movsl
fcoms
sbb
sbb
mov
repnz
pop
mov
inc
aad
jne
lock
mov
aad
adc
fwait
out
shlb
iret
shll
int3
inc
rclb
push
jo
data16
cmp
push
push
leave
scas
ficompl
lahf
js
add
in
fstpt
mov
inc
mov
or
faddl
jb
pop
pusha
ds
fs
lea
lock
dec
jbe
jl
icebp
jge
insb
iret
outsb
ja
dec
cmc
sbbb
pop
mov
cmp
shlb
insb
cmp
sbb
fstps
ja
mov
int3
adc
mov
testb
or
pop
dec
inc
popa
jns
xchg
aaa
mov
sbb
shll
mov
sub
jo
fwait
rorl
dec
sbb
sbb
adc
lret
sub
cmpsb
dec
pop
or
punpckhbw
nop
loope
in
sbbb
mov
outsb
push
inc
adc
inc
cmp
xchg
pop
shll
cwtl
and
or
or
add
cld
aaa
in
popf
push
stos
mov
push
repz
cwtl
sti
mov
rcrb
in
clc
jne
shlb
xor
mov
jne
aaa
insb
insl
rcrl
mov
jb
sti
mov
jns
cld
mov
push
xchg
xchg
push
cmc
push
pop
hlt
mov
outsl
cmpsb
cld
daa
mov
add
movsl
fs
cmpsl
flds
pop
imul
leave
icebp
leave
xchg
fnclex
fisubs
mov
pop
int
aam
push
pop
sbb
nop
outsb
cs
cmpsb
cs
pop
ret
outsl
shll
mov
cmp
xorb
mov
jnp
or
dec
xchg
in
aaa
mov
sbb
xor
outsb
mov
pop
mov
dec
ljmp
andb
add
push
jle
inc
and
xchg
cmp
dec
sbb
jecxz
sub
stos
push
pop
pop
or
insl
push
cmpsb
xchg
and
in
adc
inc
xor
jne
jecxz
sub
lret
insb
jmp
repz
cmp
jno
out
pop
lock
aad
mov
cmpb
mov
out
xchg
mov
lock
lret
cmp
ds
mov
cmpsl
pop
lcall
ja
cmp
jne
scas
shll
jns
jl
sbb
test
mov
aas
fistps
leave
scas
mov
and
dec
push
mov
loopne
aaa
jnp
cmp
sub
or
cld
and
insb
sbbb
cwtl
push
ljmp
insl
pop
test
out
inc
add
jle
imul
sbb
leave
mov
iret
push
sub
ljmp
sbb
sbb
mov
stos
lods
push
push
adc
jmp
and
lahf
call
or
ljmp
xchg
mov
push
push
orb
shlb
pop
nop
jmp
sahf
cmovs
ja
mov
cmp
loopne
add
ljmp
push
jae
stc
dec
pop
stos
or
and
push
fs
in
xchg
xchg
loop
xor
mov
xor
mov
and
repz
jl
int
int
mov
push
and
dec
ficoms
mov
adc
adc
mov
test
or
iret
imul
loopne
xchg
scas
test
mov
mov
push
jl
xchg
pop
sti
addr16
jo
pushf
pop
and
mov
or
sbb
add
xor
cmp
jg
cmp
fcmovne
imul
lret
into
add
shlb
push
xchg
adcb
lahf
fs
repnz
mov
pop
mov
mov
mov
nop
xchg
es
dec
xchg
lcall
dec
jp
push
dec
dec
ja
inc
in
call
mov
stc
xchg
mov
mov
cmp
xchg
pop
xor
shll
cltd
stos
bound
fistpll
int
push
inc
or
test
popa
sarb
movsb
fidivrl
shl
insl
or
idivl
mov
cwtl
stos
ret
or
les
mov
movsb
cmp
xor
xchg
add
imull
jnp
ja
and
sub
xchg
sub
repz
pop
cmp
test
jno,pt
cmp
xchg
icebp
sub
xor
daa
xchg
fwait
mov
dec
xchg
movsb
test
jmp
jbe
frstor
incb
lret
xchg
shl
dec
in
add
adc
movsb
sarb
or
fs
mov
xchg
sbb
mov
addr16
scas
adc
push
cld
cmp
mov
imul
rcrl
jle
cld
jecxz
in
inc
dec
add
xchg
decl
sbbl
inc
inc
sub
dec
rcll
cmp
imul
push
int3
add
les
fwait
mov
loop
mov
popa
arpl
dec
jne
adc
mov
sub
push
mov
insb
in
fisttps
mov
aad
mov
xchg
fdivs
loope
repz
sbb
lea
jg
les
inc
mov
mov
pop
and
sarl
cld
inc
mov
sbb
inc
pop
je
sub
push
jno
lahf
push
inc
pusha
adc
rcrb
ds
cltd
lahf
out
xchg
mov
in
jle
push
inc
nop
cmp
sub
push
jnp
mov
repnz
pop
cld
mov
jnp
fisttps
sub
bound
into
or
push
call
pop
popf
or
cmp
enter
pop
inc
leave
mov
movsb
sahf
push
enter
pop
in
ds
aaa
stos
shlb
es
imul
sub
pop
sar
xchg
loope
mov
dec
jl
mov
clc
sbb
push
in
push
ror
loopne
pop
ret
mov
add
push
adc
add
mov
push
xchg
repnz
out
pusha
fmul
movsb
push
or
cmc
dec
mov
mov
inc
je
hlt
bound
sub
lahf
popa
cmp
addr16
fdiv
ds
cmp
data16
mov
mov
imul
ja
and
mov
ja
pop
notl
into
out
mov
dec
outsl
pop
lcall
mov
loopne
pushf
lods
jb
rorl
addr16
cmp
dec
cmp
rorb
sbb
dec
fldenv
mov
mov
dec
dec
dec
jmp
mov
mov
inc
rolb
sub
out
rcll
jne
add
mov
pop
mov
enter
out
movsl
xchg
js
imul
cli
pop
test
pop
int3
popa
fnstsw
or
ja
sub
pusha
cmp
outsl
nop
jmp
sbb
and
pop
nop
js
daa
mov
nop
xchg
xchg
mov
lret
subl
mov
int
mov
and
lret
add
inc
rcr
sub
ja
imul
dec
ficompl
andl
movsb
lods
pop
pop
push
shr
xor
xorb
adc
inc
test
test
shl
fs
sbb
lds
outsb
mov
push
mov
cli
sti
arpl
xchg
fisttpl
adc
sub
fiadds
lea
fadd
adc
inc
jbe
popf
das
js
fstpt
push
clc
iret
hlt
inc
xor
aaa
fstpt
jne
bound
jae
in
std
add
cltd
rcr
inc
or
mov
mov
sbb
jo
rcrb
fsubrp
ret
add
sub
mov
or
pop
dec
lods
das
cmp
xor
and
imul
mov
adc
cmp
and
dec
dec
push
push
cmp
cmp
or
lcall
adc
dec
movsb
xchg
pop
mov
lock
inc
nop
cli
dec
push
mov
jae
ds
add
jo
push
fs
jg
cmp
jbe
mov
jns
mov
lcall
mov
mov
or
aam
scas
fwait
insb
sbb
in
addr16
movl
arpl
jo
scas
lea
mov
inc
add
in
mov
stos
stos
xor
scas
cmpsl
jb
out
pop
sub
push
sbbb
shll
decb
in
decb
icebp
or
movl
sub
and
push
cmpsl
enter
aaa
stc
dec
jb
dec
and
setno
jp
and
push
out
repz
enter
insb
dec
and
in
mov
and
rorb
lcall
cmp
and
sbb
pop
inc
in
ja
xchg
and
sahf
xchg
popf
pop
add
mov
fadds
orl
fs
movsb
push
mov
xchg
js
daa
xor
mov
mov
dec
inc
stos
mov
popa
call
ljmp
or
bswap
mov
mov
cmpsb
fstl
xchg
iret
int
rcrl
cmp
mov
cmpsl
leave
loopne
shl
in
cmpsb
hlt
mov
stos
imul
xor
int
insb
lea
adc
push
adcl
mov
insb
xchg
mov
nop
and
pop
inc
lahf
mov
cltd
cmp
jp
insb
mov
jl
mov
inc
loopne
dec
aad
adc
jmp
adc
sub
jbe
mov
and
cltd
in
std
mov
xchg
push
out
adc
fidivs
pop
xchg
jae
or
push
inc
out
ud0
dec
fwait
iret
test
stos
push
dec
xchg
mov
inc
sahf
add
push
rorl
and
xchg
jge
frstpm(287
and
or
daa
adc
mov
cs
jae
inc
push
arpl
or
and
inc
push
adc
inc
cmc
pop
enter
clc
mov
mull
ror
jg
ja
adc
lds
xor
xchg
scas
stos
dec
scas
cmp
lea
sub
rorl
and
add
xor
pop
add
push
adc
push
shrb
shll
shlb
in
push
cmovnp
adc
and
lods
cmpsb
addl
rorl
loope
dec
dec
pop
sub
mov
sub
in
scas
hlt
add
and
ljmp
inc
scas
dec
cwtl
mov
sbbb
lret
or
inc
mov
ficoml
movsl
in
sub
hlt
enter
mov
mov
jo
cmp
xor
inc
dec
pop
pop
mov
jnp
test
out
dec
xchg
sbb
js
adc
arpl
shr
enter
cmp
mov
sbb
int3
pop
mov
pop
sahf
filds
dec
imul
pop
cmp
fnsave
mov
mov
pop
mov
fsubrl
out
sub
gs
jl
daa
sti
mov
popa
adcl
fists
adc
int
mov
inc
push
and
stos
int
aaa
or
sahf
rolb
fsubs
daa
fstps
icebp
or
mov
xlat
stos
icebp
or
popa
rorb
aad
pop
mov
enter
inc
andl
std
adc
mov
jmp
into
inc
inc
push
sbb
jns
and
xchg
ljmp
sbb
inc
es
xchg
cmpsl
inc
pop
pop
sub
and
mov
arpl
dec
test
pop
add
fidivrl
aam
daa
mov
xchg
lds
and
das
inc
sbb
insl
dec
lods
stos
inc
inc
and
movsl
cmp
cmp
xor
mov
out
or
xchg
sbb
cmp
sbb
dec
mov
add
movsb
adc
cmpsl
and
cltd
mov
stos
stc
lahf
dec
cltd
adc
pop
js
mov
inc
mov
out
cwtl
cltd
sbb
mov
or
insb
inc
in
shl
scas
in
fwait
cmpsl
and
rcll
mov
lds
mov
adc
rorl
jle
clc
rcrl
lods
add
sub
xchg
xchg
stc
lds
xchg
sub
ret
sbb
int
mov
inc
dec
mov
cmp
push
mov
icebp
adc
mov
shll
dec
inc
pusha
cli
out
jns
arpl
or
sub
mov
xchg
mov
in
cwtl
mov
dec
and
cmp
lods
addr16
loopne
jb
add
cmp
mov
mov
popf
add
cmp
popa
jmp
dec
add
mov
enter
pop
inc
loope
pushl
out
loope
and
mov
mov
loope
inc
shll
xlat
hlt
adc
popa
outsb
xlat
mov
je
dec
fwait
cmp
leave
cltd
mov
lret
push
jg
lahf
sti
add
push
in
mov
aam
or
cmp
insb
and
cli
jp
pushf
xor
filds
mov
and
jg
mov
dec
aas
dec
cmp
xor
push
xor
cmp
leave
inc
jmp
test
stc
push
xchg
dec
arpl
mov
xchg
fcmovnb
shlb
xor
cmpsb
mov
xchg
addr16
sub
out
ja
jne
cli
cwtl
fisttpl
insb
or
add
sub
clc
adc
push
mov
icebp
cmpsl
fisttpl
call
cs
sahf
cmp
jmp
pop
cmc
aas
cmp
call
pop
out
lock
add
gs
sub
add
roll
inc
cld
pushf
je
popa
imulb
loope
inc
movb
jl
in
idivb
inc
test
sbb
xor
and
int3
push
dec
mov
jecxz
and
out
outsl
fcompl
addr16
cli
hlt
inc
jnp
test
or
cmpsb
jmp
ror
cmp
sub
ret
sbb
loopne
lret
into
lahf
in
int
sub
mov
test
cmpsb
mov
inc
and
add
adc
pop
test
mov
mov
insb
xchg
push
push
add
jge
mov
jbe
rcr
push
fwait
imul
push
mov
data16
arpl
cld
cmc
pop
sub
pop
ret
mov
ret
loope
pop
jne
dec
jb
jae
ljmp
insl
sub
cwtl
imull
add
xchg
pop
lahf
or
aaa
aaa
inc
jne
push
jb
mov
hlt
lods
roll
andb
out
aam
pop
repz
bnd
push
scas
loop
leave
jl
pcmpgtd
pop
xor
jne
jge
adc
js
iret
and
and
mov
push
xor
adc
push
pop
lret
jbe
pop
movsl
test
fildll
pop
pop
mov
fistl
push
mov
addr16
jne
ret
xor
clc
add
cmpsb
inc
icebp
fildl
dec
push
lcall
push
fdivrs
inc
aad
add
pusha
pop
out
cmp
cmp
mov
mov
ljmp
mov
ss
and
pop
es
jp
xchg
pop
les
rorb
adc
sbb
cmpsb
pop
xchg
sub
dec
arpl
fldt
shl
fstpt
sub
cmp
rcrl
jbe
cld
adc
cmp
jg
sbb
imul
dec
loope
xchg
ret
out
pusha
dec
mov
adc
sub
xchg
outsb
inc
ret
mov
shll
lds
ret
sbb
shll
jnp
or
nop
push
call
adc
or
pop
xchg
loopne
dec
jno
xor
cld
adc
rolb
ja
lds
inc
add
pusha
ret
or
xlat
adc
sub
das
and
dec
pop
add
sub
add
lret
cmpsl
push
ret
sbb
mov
lds
fisttps
push
and
xchg
repz
pushf
mov
jbe
mov
aaa
dec
cmp
orb
test
xor
cs
das
addl
xchg
mov
xor
jge
orb
in
xor
mov
test
xchg
push
stos
daa
scas
mov
in
pusha
cli
adc
push
add
mov
add
add
push
sub
rol
inc
stos
roll
repz
sti
add
insl
ss
aas
mov
ds
aaa
sub
outsl
mov
fisubs
movsb
insl
mov
xchg
sar
jp
or
shll
imul
push
sub
in
sub
scas
bts
or
fdivrl
mov
adc
fiadds
lock
fcmovb
ds
push
rorl
add
je
mov
pop
lret
lea
sti
push
pop
pusha
sbb
stos
adc
dec
mov
ficomps
aad
js
stc
ret
ror
lret
jmp
subl
xor
push
pop
adc
icebp
jecxz
xor
or
push
js
into
cld
movsb
and
pop
fst
sbb
pop
mov
push
dec
adcl
fiaddl
add
sub
add
lahf
ss
cld
nop
sbb
and
xchg
decb
js
pop
pushf
mov
arpl
dec
jnp
cs
push
les
ljmp
xchg
push
popa
and
push
push
mov
outsb
add
xlat
xorb
lds
lock
push
xchg
push
rcr
pusha
push
dec
add
in
mov
popa
lds
std
push
arpl
dec
test
clc
enter
adc
adc
sub
adc
xor
push
lea
out
fdivrs
xor
xor
fwait
jmp
imul
cli
int
push
jbe
data16
mov
dec
mov
pop
jae
dec
push
icebp
push
jae
jnp
jb
pop
jbe
ret
add
pop
and
pop
lds
xor
ficompl
mov
cli
dec
fucomp
pop
xchg
movsb
testl
xor
jns
mov
add
xchg
call
lret
and
aas
lret
push
mov
pop
stos
mov
mov
int3
push
inc
les
cmp
js
scas
out
xor
mov
outsb
fstps
sbb
pusha
push
ljmp
mov
push
mov
xchg
fildll
pop
jae
inc
pop
push
jb
lret
popf
repz
cmp
and
test
ljmp
mov
in
shrl
loopne
ret
mov
jmp
inc
sbb
insb
out
pusha
mov
mov
sbb
pushf
addl
int
gs
scas
out
mov
jmp
add
or
sarb
inc
ja
sbb
cmpsb
sbb
bound
pushf
cmpsl
push
imul
mov
rcrl
mov
rcll
out
sub
out
mov
xor
xor
inc
test
cmp
cmp
test
or
inc
lods
fstl
mov
lea
pop
fs
mov
pop
push
jg
cltd
fisubl
push
inc
cli
divb
ret
test
hlt
loopne
and
cmp
pop
dec
dec
movsl
fiadds
adc
cmc
mov
cmp
dec
mov
insl
lret
dec
and
js
pop
testl
ret
enter
xlat
jns
das
out
adc
outsl
or
mov
daa
dec
int
rclb
clc
dec
lret
cmpsl
rcll
adc
flds
enter
mov
negb
push
cmc
mov
mov
mov
add
inc
sbb
xchg
out
jmp
dec
inc
inc
add
fstpl
mov
in
negl
out
aaa
cmp
inc
mov
cli
jle
jle
and
insb
xor
inc
cmp
call
xchg
dec
cmp
inc
mov
ds
push
rclb
mov
shrb
icebp
out
lods
fbld
addr16
std
hlt
lods
sbb
adc
in
imul
mov
xor
fimull
jle
dec
cld
pop
mov
pushf
lods
push
mov
insb
into
jl
or
sbb
sub
cmp
int3
outsb
fdivrl
dec
cld
pop
mov
pushf
lods
push
mov
insb
into
jl
or
sbb
sub
cmp
int3
push
jle
dec
cld
pop
mov
popf
lods
bsf
dec
out
pop
ljmp
fimuls
sbb
sub
outsb
fdivrl
dec
cld
pop
mov
pushf
mov
mov
mov
test
aam
les
stc
std
jmp
sbb
insb
les
dec
mov
dec
in
nop
cmp
or
inc
jmp
adc
cltd
and
imul
dec
loope
mov
movsl
or
shll
sbb
test
cmp
jbe
pop
ret
data16
gs
xor
push
out
and
pop
outsb
dec
dec
rol
lock
jo
stc
adc
shr
cltd
inc
leave
cli
pop
push
mov
xchg
or
push
mov
pop
adc
xor
sub
add
ljmp
inc
stos
sbb
imul
pushf
or
adc
xor
xor
daa
or
cltd
xchg
xchg
in
sbb
sbb
pop
sbb
jl
push
mov
movsl
mov
jno
insl
loope
test
lock
mov
push
inc
popf
mov
rolb
std
or
cwtl
sub
cmpsb
in
adc
test
lock
stc
jne
or
adc
cltd
popf
nop
daa
jns
jno
inc
sti
push
cmc
and
or
stc
xor
jnp
jo
es
inc
in
mov
test
pop
test
pop
jmp
shll
push
nop
int
xor
fs
in
push
mov
nop
cmp
dec
out
loopne
sarb
daa
stc
jbe
add
mov
mov
jns
imul
cmp
or
inc
jmp
adc
cltd
and
imul
cmp
or
cmp
pop
xor
push
push
inc
xchg
xchg
loopne
xchg
rolb
push
add
push
ljmp
adc
fcompl
push
jno
mov
jb
pop
or
mov
and
cmp
dec
or
je
push
mov
cmpsb
es
cmp
rorl
mov
push
test
lods
mov
adc
push
arpl
pop
dec
sbbl
dec
push
dec
inc
mov
push
add
ds
jge
fiaddl
mov
fs
arpl
xchg
xor
imul
cwtl
or
out
push
pop
fidivl
insl
xchg
and
xchg
inc
xor
mov
mov
add
ljmp
sub
inc
push
xchg
inc
ljmp
pop
xlat
adc
icebp
and
xchg
or
jle
inc
movsb
sub
test
idivb
adcl
out
cmp
ss
push
inc
fwait
add
mov
cmpl
imul
test
push
cmpsl
add
call
and
sbb
pop
andb
cmp
test
cmp
add
push
aas
rcr
out
sbb
mov
mov
jp
sub
add
stos
int
cmp
fs
xchg
jb
cmpsl
iret
in
pop
fisttpl
xor
jge
fldt
jl
fs
test
cld
data16
ret
push
in
dec
xor
sub
cmpsl
gs
andb
mov
dec
movl
sbb
daa
mov
clc
xor
xor
lss
fnstenv
and
lahf
clc
fbld
dec
jns
add
mov
sahf
lock
add
imull
mov
pop
lock
imul
add
add
divl
testl
push
gs
outsl
out
ret
inc
inc
rcrb
aam
mov
xor
test
push
cmp
mov
movsl
pusha
mov
sub
sub
jle
push
mov
fisubs
lods
lret
leave
test
movsb
insl
rolb
sti
aad
data16
imul
mov
adc
ds
repnz
push
push
sub
test
aam
cmp
mov
mov
xor
or
mov
xor
sbb
fisttps
adc
das
jae
adc
aaa
and
jmp
mov
fimull
scas
sub
xor
push
xchg
loope
popf
int3
mov
cli
xchg
movl
inc
xchg
and
adc
add
mov
inc
lahf
jnp
push
stos
or
inc
mov
lea
xchg
movsb
jecxz
mov
sbb
pop
adc
aad
stos
cmp
adc
imul
testb
nop
pop
les
rorl
fwait
mov
inc
mov
cmp
je
lea
imul
data16
jecxz
sbb
clc
push
lds
sarl
mov
sahf
int3
in
dec
mov
xor
sti
test
jecxz
jp
movsb
cmp
in
jmp
jae
loopne
loop
pop
mov
sub
and
ss
xchg
or
scas
mov
mov
mov
or
jnp
and
push
sub
inc
mov
cmpsl
pop
inc
pop
inc
mov
jb
sbb
mov
xchg
mov
xchg
or
insb
sbb
xor
jle
call
aad
mov
lds
cmpsl
dec
int3
inc
stc
adc
subl
inc
dec
mov
ss
fdivrl
aad
cmc
jmp
cmp
sahf
sbb
fwait
popf
call
std
push
mov
and
fisttps
inc
jbe
xor
push
push
lock
push
ljmp
inc
popa
iret
sbb
cmpsb
lcall
push
jb
jb
fs
add
loope
add
jg
pop
pop
lahf
std
inc
add
arpl
xchg
push
fiadds
punpckhdq
test
jb
dec
ret
push
push
adc
movl
jecxz
sub
and
sbb
jns
mov
xor
xor
loopne
mov
xchg
repnz
sub
jg
test
mov
jbe
repz
cwtl
xchg
push
js
in
pmaxsw
jmp
ficompl
cmp
in
mov
lods
into
outsb
adc
js
xor
imul
xor
add
push
cmp
hlt
xchg
sbb
ret
addl
add
es
xchg
jbe
fdiv
ret
cmpsl
push
sahf
jnp
mov
add
fimuls
push
jge
cmpsl
std
and
xor
push
imul
jle
adc
mov
add
bound
loop
xchg
rcll
je
lea
data16
inc
test
or
add
or
jmp
out
enter
gs
int3
mov
sbb
pop
lods
jge
aad
xchg
mov
ljmp
andb
out
push
inc
or
or
leave
loop
jno
or
dec
sub
das
outsb
lret
inc
mov
lret
popf
sub
push
push
mov
add
icebp
cmpsb
mov
fstl
in
sbb
adcl
mov
inc
add
push
aam
mov
repnz
fisttps
addl
lcall
aam
adc
out
pop
or
movsl
push
mov
xor
rcr
fsubr
rorb
lods
xchg
iret
and
and
cli
ficomps
jb
bound
movsl
test
scas
movsl
inc
push
pop
addb
movsl
pop
cltd
cmp
aaa
int
loop
jl
lock
movsl
in
jg
xchg
mov
mov
mov
adc
xchg
subb
jae
inc
es
pop
xor
sub
jns
rcrl
or
addr16
or
jnp
cs
mov
fimuls
fsubs
push
imul
pop
aaa
aas
loop
fidivl
sub
in
aam
pop
lcall
push
mov
cmp
jl
lahf
push
pop
mov
aas
lea
sbb
mov
loopne
xor
xchg
push
sbb
fisttps
cmpsb
andl
test
cmp
fcomip
sbb
lret
pop
mov
push
das
mov
dec
and
xor
push
adc
jnp
popf
sbb
xor
ficoml
xchg
lret
adc
sbb
pop
push
xchg
dec
xchg
mov
std
sti
orb
sub
popa
inc
lcall
push
addr16
add
inc
pop
inc
stos
mov
mov
inc
adc
dec
mov
cmp
or
fsts
sub
and
add
push
aaa
and
in
xchg
or
pop
xchg
mov
cli
lods
fst
jge
add
sahf
cmp
and
test
jns
mov
inc
cmpsb
mov
loop
jg
xlat
and
adc
jnp
in
mov
pop
movsb
mov
nop
push
mov
xchg
jg
dec
cmp
sub
and
xchg
xor
ja
xor
mov
outsb
cmpsl
or
test
xor
imul
lds
and
out
test
mov
js
iret
cmp
mov
jmp
fucomp
lcall
in
jmp
lods
stc
ja
jae
lea
xchg
addr16
jne
pop
pop
xor
jnp
lahf
das
pop
cltd
les
mov
lahf
xchg
ds
stos
mov
dec
sbb
and
fidivl
aaa
sbb
push
xchg
insb
aaa
push
cmpsl
ret
mov
dec
aaa
adc
out
sub
pop
mov
loopne
xor
mov
shl
fmull
data16
cmpsb
mov
and
xchg
rcll
out
push
xor
sub
stos
push
test
inc
sub
shll
xchg
sbb
stos
rcrb
sbb
aam
push
sub
ss
xorb
and
add
xor
cmp
or
out
jne
fwait
xchg
daa
jmp
push
sarl
insl
sbb
rcl
pop
xchg
fcoms
xor
push
cmp
daa
pop
out
lcall
out
aam
and
icebp
xchg
mov
adc
rcrl
scas
ljmp
mov
sbb
fiaddl
add
push
sar
pop
xchg
ljmp
pop
push
sti
sub
inc
add
subb
in
xor
xchg
test
hlt
lock
out
fwait
sbb
sub
sbb
and
adc
cmp
mov
arpl
push
mov
and
jle
dec
mov
xchg
jb
ret
aas
dec
mul
jae
inc
xor
mov
ret
push
das
xor
outsl
pusha
lahf
or
xor
inc
sti
inc
pusha
push
dec
adc
negl
cltd
jb
adc
dec
mov
jge
lret
add
popa
in
push
fisubs
push
jmp
pop
loop
fmul
mov
out
pop
mov
mov
test
arpl
adc
shll
add
push
inc
mov
jae
and
clc
pop
aaa
jmp
xor
cmp
xor
jo
inc
bound
lcall
cmp
jecxz
lods
mov
xchg
je
loope
mov
jno
addl
sub
fwait
and
jg
aas
push
iret
mov
ss
push
dec
nop
hlt
pusha
sbb
cld
mov
stc
lods
dec
cmp
idiv
jl
call
and
dec
popf
ret
lock
sub
dec
int
mov
inc
inc
dec
lret
inc
fidivs
mov
mov
sub
mulb
and
xor
sub
dec
loope
in
in
jle
jo
or
fdivrl
es
dec
lret
mov
std
pop
mov
cmpsl
aas
ret
fs
xchg
int
dec
dec
icebp
pop
fisubrl
stos
pop
hlt
repz
inc
and
jg
mov
jo
jmp
into
lahf
sti
add
ds
xchg
out
test
out
push
xchg
sarl
jno
mov
stos
insl
orl
push
loop
arpl
dec
jno
and
mov
dec
rcrl
pop
and
aam
jg
sbb
stc
dec
jp
fldcw
aam
std
bound
loopne
pop
fcmovbe
mov
dec
dec
sub
mov
pusha
enter
gs
mov
lret
mov
test
sarl
nop
lret
xchg
sti
pop
mov
aaa
stos
xchg
call
inc
or
or
lret
adc
stos
jecxz
sub
sahf
inc
and
xor
jmp
mov
cmpsl
xchg
cmp
rcrb
cmc
arpl
mov
mov
outsl
add
leave
or
cmc
cmpsl
in
arpl
or
fists
arpl
mov
sahf
xchg
fsub
jb
mov
add
popf
out
imul
insb
cmp
stc
ds
icebp
arpl
jb
lahf
fstpl
popa
call
aas
push
push
rorl
cmpl
mov
loop
int
mov
cs
movsl
loopne
cmp
outsl
roll
aam
add
and
dec
cmp
in
xor
aaa
jle
jo
pusha
out
loopne
gs
fwait
sbb
js
mov
inc
addl
int
adc
jp
fwait
jg
jne
adc
nop
scas
xchg
test
fldenv
inc
int3
ss
dec
lods
cmc
mov
mov
sbb
lret
mov
test
xor
addr16
push
imul
push
xor
xchg
pop
sbb
add
fldenv
mov
mov
cwtl
je
scas
dec
rcrl
popa
gs
jbe
xor
out
inc
adc
xchg
jl
jo
xlat
cmc
fldenv
addb
mov
or
and
pop
loop
xor
or
cmpsl
or
bnd
pop
xor
out
repnz
mov
or
cmp
xchg
adc
out
and
cmp
and
inc
pop
rcr
es
mov
faddl
jmp
inc
jae
addr16
cld
pop
punpckhbw
sbb
xchg
xor
sbb
icebp
pop
xor
inc
xchg
or
shlb
mov
mov
clc
push
dec
mov
pusha
jno
loope
pop
repnz
jb
lods
cmp
sbb
pop
jp
fidivs
push
shlb
jg
xor
cmp
push
add
cmc
frstor
xchg
jb
test
test
xchg
mov
sub
add
in
cwtl
sbb
add
roll
pop
mov
aaa
cmp
outsl
mov
xchg
jp
push
call
mov
mov
roll
cmp
adcb
mov
ret
xor
xchg
cltd
xor
push
inc
or
mov
push
mov
pop
inc
ja
iret
dec
inc
clc
pop
push
xor
xchg
aad
mov
in
test
data16
ja
or
or
adc
or
mov
pop
push
xchg
sbb
add
ss
out
mov
cwtl
sbb
xchg
or
pop
mov
repnz
out
mov
xchg
jb
xor
shrb
xchg
aad
loop
inc
mov
ficoms
test
test
data16
ss
jl
sub
lcall
push
les
subb
pop
mov
xchg
loop
hlt
jns
mov
adc
cltd
pop
fs
mov
out
addb
sub
jmp
pop
add
scas
fsubl
movsl
fisttps
gs
xor
xchg
cmc
pop
xchg
lret
xchg
enter
dec
lcall
loope
fstpl
jge
inc
sub
cmpsl
iret
mov
adc
dec
lret
cli
pusha
cmp
movsb
pop
adc
stc
inc
xor
fistpl
mov
fwait
mov
fnsave
outsb
jge
adc
dec
inc
pop
enter
mov
xchg
aad
xor
sbb
cmp
incl
ja
cmp
lret
push
jne
rclb
and
inc
inc
jb
push
sub
fists
fdiv
or
sbb
mov
outsl
inc
fiadds
or
push
jg
inc
dec
insb
sahf
pop
mov
pop
int3
pop
cmp
dec
stos
lret
lods
push
pop
xchg
xchg
inc
jbe
or
fwait
popa
hlt
lods
sbb
or
addr16
push
gs
fisttps
add
and
jo
ss
imul
or
add
or
fisttpl
andl
xorb
and
rorl
fidivs
jecxz
repnz
cli
aas
test
mov
jne
cmp
sub
scas
test
out
dec
sub
xor
xchg
mov
hlt
pop
mov
push
in
cld
mov
mov
in
popa
in
push
in
std
and
jno
add
aas
movsl
cmp
dec
jle
sbb
pop
fstl
mov
in
xor
cmp
add
cmp
sti
push
pop
jno
push
leave
jnp
mov
inc
dec
lret
mov
into
push
rolb
scas
lcall
push
pop
sub
popf
push
mov
fcmovnb
xor
push
cs
sbb
arpl
sub
loop
mov
inc
or
lcall
loopne
fmull
dec
rcrl
cltd
and
sbb
mov
stos
mov
dec
dec
out
or
in
lods
jb
fldt
xchg
shl
data16
div
int
mov
push
cmp
andb
inc
cmc
imul
loop
test
dec
sbb
pushf
loop
cmp
add
add
xchg
outsl
mov
rcll
push
pop
insb
aas
lock
xchg
or
lcall
data16
lods
rorb
push
mov
jb
adc
vfmaddsubpd
sub
mov
imul
xchg
and
fstl
push
and
jae
dec
inc
ss
sbb
lret
xor
push
adc
mov
pusha
nop
popa
xor
cwtd
add
mov
cmp
test
popa
jns
test
std
jp
in
or
mov
xchg
mov
dec
jno
bound
jp
xor
insb
jnp
adcb
mov
popa
and
js
jnp
jp
cmp
je
mov
pop
in
push
xor
jbe
imul
sub
insb
stc
scas
pop
fcmovbe
mov
mov
ror
js
xor
movsl
pop
sbb
bound
faddl
jb
dec
or
enter
mov
sahf
dec
and
xchg
lahf
xchg
test
mov
pop
adc
into
addr16
jmp
in
mov
popf
lods
test
inc
adc
adc
dec
push
mov
mov
int
in
stos
aad
jl
in
dec
and
mov
add
dec
push
mov
loopne
pushf
jmp
out
stos
mov
cmp
popa
loope
ljmp
jg
pop
push
dec
sub
mov
out
or
test
sub
xchg
sahf
ret
cmp
cmp
mov
push
inc
jp
ror
sahf
ss
daa
jecxz
xchg
adc
or
iret
loopne
xor
push
mov
pop
clc
in
rol
call
ss
adc
mov
xchg
pop
aaa
cs
cmp
or
push
aas
mov
sbb
dec
in
insb
push
mov
cmp
fistps
mov
mov
sbbl
or
sub
ljmp
aaa
and
ret
xchg
or
iret
cmp
addl
mov
push
xchg
jae
lret
jb
mov
fcmove
or
push
mov
jns
add
push
jecxz
shl
rcl
int
inc
mov
fcompl
shl
das
lcall
movb
xor
xor
jge
mov
add
incl
jns
sahf
ljmp
dec
sahf
xchg
sbb
jbe
xor
jbe
shlb
xor
cli
jecxz
out
ds
movsb
inc
dec
jge
mov
stos
int3
notb
imul
push
out
pop
xor
dec
xchg
fwait
addr16
jge
xchg
sti
iret
stos
or
and
iret
pop
jmp
and
adc
dec
mov
cmpsl
and
out
es
jne
and
cwtl
push
cmpsb
dec
aaa
flds
aad
das
lock
cmpsl
cmpsb
mov
mov
cmp
andl
push
scas
pop
dec
xor
ficompl
sbb
or
out
or
inc
xchg
dec
movsl
out
add
or
xchg
xchg
fstl
pushf
inc
sar
pop
cmp
mov
out
xchg
xor
lea
mov
mov
loope
xchg
jo,pt
cmp
movsl
lock
cwtl
cld
sbb
cmp
inc
dec
mov
sub
adc
pop
mov
jle
inc
jns
imul
stc
pop
pop
daa
push
fwait
sbb
out
hlt
dec
xchg
cmp
dec
jo
dec
icebp
xchg
dec
inc
inc
daa
jne
push
mov
jno
mov
mov
jge
mov
ret
ss
sahf
push
lods
lods
mov
shll
jp
jno
cmp
daa
int
fcomps
sub
xchg
mov
inc
pusha
pusha
lods
inc
mov
into
push
out
mov
and
ljmp
lods
dec
adc
test
or
jmp
pop
loopne
movb
jb
insb
out
addr16
roll
jmp
jecxz
jbe
mov
test
cmp
or
mov
out
cwtl
mov
mov
out
xchg
xchg
mov
ror
sbb
pop
mov
dec
insb
pop
add
push
lcall
fwait
pop
jge
jp
inc
and
inc
es
in
and
mov
push
cmpsb
cli
out
pop
xchg
cmc
int
mov
rol
lods
or
xlat
int
jmp
xchg
jb
mov
ret
pop
or
and
jne
push
mov
cmp
ret
data16
cmp
cmp
lcall
pop
sbb
and
and
jnp
inc
xchg
sub
cmp
adc
fstpt
or
imul
ljmp
pop
stc
mov
insl
ret
cmp
and
push
test
inc
popf
push
imul
inc
mov
mov
and
push
fst
mov
in
cmp
mov
sbb
cwtl
xor
lods
jnp
inc
aad
shlb
jl
jb
or
sub
std
test
mov
mov
mov
loopne
rclb
shlb
push
stos
div
dec
repnz
stos
mov
fnstcw
and
imul
iret
mov
stos
adc
outsb
xchg
lods
adc
scas
outsl
mov
aad
mov
dec
sbb
pop
pop
scas
mov
sub
int3
xorb
adc
inc
add
mov
and
push
in
adcb
inc
mov
loopne
dec
or
xchg
outsl
mov
pop
xchg
cli
push
mov
sti
mov
mov
inc
sar
dec
xor
sbb
fadd
js
repz
mov
clc
and
fnstcw
adc
cltd
and
imul
cmp
or
inc
jmp
adc
cltd
and
imul
cmp
or
inc
jmp
adc
add
sarl
imul
cmp
dec
std
imul
adc
cltd
movsl
dec
aad
cmp
pop
pop
in
loop
or
jbe
inc
hlt
repz
lret
lock
lods
shlb
pusha
sub
push
add
or
add
add
adc
sbb
sbb
int
adc
add
add
loope
ja
xor
push
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
adc
push
add
add
add
add
add
and
push
add
add
test
aaa
add
add
add
push
add
add
leave
add
add
add
add
pop
mov
add
add
test
inc
add
insl
add
add
add
add
movsl
add
add
add
add
sbb
and
xor
jl
fldl
lods
add
test
repnz
xlat
add
add
add
add
add
add
add
add
add
sbb
popa
add
push
add
add
add
add
push
jbe
sub
mov
or
add
xor
xchg
add
add
add
add
add
sub
cmp
mov
add
add
push
add
add
add
add
sub
dec
add
add
add
lods
add
push
imul
add
jns
pop
add
mov
test
test
pop
add
add
movb
push
add
add
in
and
sub
add
sbb
mov
add
test
popf
add
add
add
loope
call
add
add
cmp
add
add
add
add
add
xor
inc
add
mov
add
add
add
add
add
add
add
add
lods
add
add
loopne
xor
cmp
sub
fadds
sub
dec
add
add
add
add
add
push
add
out
add
add
add
add
dec
add
add
add
add
test
loopne
add
add
dec
add
add
les
xchg
add
add
push
add
add
add
add
add
fadds
leave
add
add
insl
add
popa
add
cltd
add
add
add
add
add
add
add
dec
add
add
add
add
add
jbe
mov
add
add
add
sub
pop
add
push
popa
add
add
add
daa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
movsb
add
add
push
add
add
add
add
add
jl
outsb
add
jl
fadds
or
mov
mov
mov
add
add
add
add
add
rolb
mov
add
pop
add
add
add
add
add
cwtl
add
pop
add
add
lea
movsl
add
dec
add
sbb
xor
mov
inc
add
jae
sbb
pop
add
add
dec
add
add
add
add
add
add
cwtl
add
add
add
inc
add
dec
add
add
cmp
ds
add
add
add
lret
sbb
fldl
mov
sub
and
pop
pushf
jmp
cmpsl
cltd
mov
and
dec
cltd
cld
or
pushf
or
adcl
pusha
xchg
dec
or
lcall
xlat
push
std
jmp
fldpi
mov
xor
pop
popa
mov
mov
cmpsb
lods
js
aaa
and
or
cmp
and
mov
pop
or
addb
test
aas
leave
mov
sbbb
pop
mov
test
bound
sub
dec
insb
push
mov
push
mov
jne
loope
add
rclb
mov
add
push
inc
sbb
xor
inc
mov
add
xor
xchg
mov
daa
lods
fwait
popa
xchg
mov
jnp
xor
pop
adc
in
lea
jno
shlb
mov
mov
and
sbb
or
jae
mov
imul
add
outsl
pop
push
cmp
in
notl
mov
mulb
xor
mov
mov
andw
fadds
arpl
aas
std
aaa
jb
mov
lcall
lret
leave
fsubrl
sahf
jle
dec
testl
lods
xchg
xchg
xor
push
xchg
pop
mov
adc
add
pop
bound
dec
jg
push
mov
test
outsl
sub
cmp
dec
movsl
mov
scas
test
mov
inc
sub
cwtl
aad
cmp
mov
insl
jle
in
mov
ret
shlb
outsl
inc
into
pushf
mov
sub
outsl
and
and
and
ja
jne
std
ds
xchg
fldl2t
jae
pop
aam
push
push
mov
xchg
dec
add
addb
pop
xor
cltd
cmpsl
mov
mov
pop
out
sarl
int
out
out
in
aam
and
decb
xor
jns
imul
in
pop
xchg
ficompl
add
sarb
ja
lea
mov
popf
inc
ljmp
cmp
in
sub
data16
fwait
stc
mov
mov
movsl
movsb
movsl
sbb
lock
push
mov
pushf
movsl
xchg
cmpl
dec
push
scas
sub
inc
repz
das
and
push
push
test
add
insb
test
xor
test
fucomp
loop
cs
cmp
lret
jno
mov
fstl
ljmp
dec
cmpsb
das
xor
cmp
arpl
ljmp
inc
lret
std
sbb
mov
inc
dec
jmp
gs
push
xlat
xchg
mov
imul
dec
push
sub
ljmp
or
in
pop
inc
cmp
in
cmpsb
push
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xor
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
dec
clc
add
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
or
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
clc
add
jl
add
nop
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
or
add
sub
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
movsb
stc
add
lods
stc
add
mov
add
mov
stc
add
int3
stc
add
aam
add
out
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
add
add
or
add
sbb
add
sub
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
