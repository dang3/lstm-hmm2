call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
test
insl
or
inc
dec
jle
or
test
std
clc
call
mov
sbb
jge
or
dec
inc
mov
in
mov
stc
loope
popf
fldcw
sub
insl
or
or
dec
cmp
clc
lahf
in
pushf
lcall
into
dec
sub
sub
jp
cmp
stos
test
and
test
enter
es
loop
push
movsb
aad
xor
js
cbtw
shll
push
and
clc
add
add
push
push
shrl
sub
pop
push
popf
rcr
cmp
mov
mov
lods
inc
cwtl
sub
decb
sub
inc
in
jns
inc
sbb
inc
dec
ret
test
imul
leave
cmpsl
ret
mov
dec
cmp
popa
xchg
pop
inc
dec
sbb
leave
adc
popf
pop
lods
ss
ror
rclb
or
aad
and
jg
in
adc
jmp
test
dec
sub
insl
or
or
dec
cmp
cltd
in
mov
stc
jmp
aam
dec
insl
sbb
insl
inc
jge
push
sub
shll
mov
aam
repz
insl
or
sbb
or
pop
jmp
les
jecxz
pushf
mov
rorb
pop
adc
cmp
imul
cltd
in
mov
stc
jmp
mov
sbb
jge
or
dec
cmp
cltd
in
mov
stc
jmp
mov
xchg
sbbb
jns
repnz
lock
sbb
mov
notl
outsl
xor
xchg
inc
mov
mov
les
or
mov
cltd
test
mov
call
or
sti
fdivl
add
aas
push
add
cmp
cmp
push
les
push
jns
out
add
leave
mov
je
or
je
dec
push
repz
inc
jmp
lcall
fsubr
je
dec
cmc
jecxz
ret
ss
addr16
fwait
pop
aaa
out
test
adc
ficompl
dec
stos
repnz
sti
inc
push
push
mov
jb
jae
arpl
in
cwtl
popf
xchg
xchg
shrb
lds
jo
or
xchg
mov
cli
aad
xchg
sub
data16
lea
xchg
push
lcall
xchg
xchg
insl
pop
push
push
xchg
fdivl
cmp
sub
cmp
insb
mov
xchg
sarb
in
test
popa
loop
and
ss
mov
mov
and
jno
sbb
pop
xchg
popa
adc
xor
push
subb
mov
mov
cmc
sub
mov
add
sbb
sub
sbb
pusha
scas
cmp
pop
out
fcmovnb
cwtl
adc
jns
pusha
stc
pusha
stos
enter
xor
subl
fldz
xor
imul
lret
insl
adc
pusha
int3
mov
es
inc
and
inc
dec
roll
out
outsb
in
pop
arpl
jecxz
fstpl
xchg
bswap
jns
sbb
pop
rolb
test
push
mov
mov
xchg
xchg
adc
out
loope
fmuls
in
repnz
clc
dec
mov
jnp
iret
and
add
negb
xor
mov
pop
adc
loop
pop
push
dec
add
push
add
mov
inc
aam
or
mov
and
es
mov
dec
fistpll
lahf
std
daa
sbb
fs
aaa
loope
aaa
into
arpl
push
lock
cmovne
xchg
testb
mov
cmp
xchg
adc
outsb
hlt
stos
in
mov
outsb
xchg
imul
cmpsl
push
gs
fsts
mov
jecxz
sbb
test
or
roll
out
jbe
rclb
mov
sub
dec
nop
jp
mov
or
dec
jge
popf
fildll
dec
jecxz
dec
xor
lea
shrb
fwait
xchg
push
or
mov
push
sbb
fstps
ss
stos
aas
out
inc
dec
mov
add
sbb
xchg
sbb
push
lods
mov
jno
shlb
ret
fadds
imul
addr16
pop
nop
leave
xor
mov
clc
sar
and
aad
cmc
dec
mov
cmpsb
push
test
insb
pop
mov
push
sub
mov
xor
xorl
addl
jo
pop
cmp
add
pop
out
cltd
jnp
dec
filds
push
ficoml
imul
bound
aas
std
movsl
push
loope
mov
push
popa
mov
xchg
loop
pusha
mov
inc
mov
pop
mov
insb
mov
stos
sahf
out
push
dec
dec
movntq
and
sbb
jnp
push
ljmp
test
das
mov
cli
and
aas
cld
cmp
mov
adc
mov
insl
jmp
hlt
jl
rcrl
stos
or
jno
sbb
outsb
and
rcrl
mov
addr16
dec
inc
insl
mov
inc
gs
fwait
jge
jne
xor
mov
xchg
jl
mov
add
or
jae
inc
dec
pop
loop
movsb
fisubrl
push
clc
sbb
stos
inc
lds
inc
inc
jb
xor
mov
sbb
xchg
mov
scas
xor
pop
and
push
mov
and
add
mov
adc
mov
fistps
call
fsubl
imul
cli
mov
xchg
jmp
or
mov
dec
lret
in
fisubs
jecxz
dec
mov
xor
pop
pop
sbb
xor
add
push
outsb
nop
outsl
das
js
inc
add
mov
mov
fwait
mov
push
cwtl
imul
and
dec
mov
repnz
bound
std
fsubp
nop
or
test
int3
fwait
js
cmp
pop
stos
cmp
jns
jae
adc
daa
mov
add
loopne
add
sahf
cmp
cli
mov
mov
test
jno
lret
or
inc
dec
cmp
mov
and
jge
jge
jge
xor
ret
repnz
ret
mov
pushf
jecxz
jne
xor
or
xchg
sbb
xchg
push
rorb
mov
rcrb
pop
lea
ret
mov
add
bnd
rcr
jecxz
sub
jne
sarb
dec
mov
mov
popf
pmulhw
shl
dec
sub
jbe
ja
test
movsb
popa
pop
sub
mov
pop
xor
and
aad
xor
push
push
stc
sbb
xchg
testb
cmp
nop
pop
or
push
int3
xlat
add
data16
or
aas
loop
pop
sub
ljmp
mov
dec
les
push
pop
push
xchg
pop
mov
dec
test
inc
push
add
fwait
inc
lcall
lret
cltd
sbb
cld
jne
out
push
out
popf
push
sbb
jl
adc
mov
int
sbb
mov
xor
pop
lret
fidivl
inc
inc
sbb
pop
mov
lods
push
mov
cld
mov
test
pushl
jno
xor
ror
ret
lret
jl
shrl
lds
push
add
cmp
xor
add
cmp
inc
xor
mov
add
inc
lret
sbb
sarl
mov
addr16
sbb
jmp
hlt
mov
add
push
and
pushf
mov
mov
test
imul
enter
xchg
enter
mov
adc
inc
dec
test
lds
cmpsb
js
jb
imul
cli
jns
out
mov
cmp
add
add
inc
cwtl
wrmsr
pop
mov
cmc
push
xor
sub
sahf
inc
xlat
xchg
ficoml
inc
jb
and
adcl
aam
cmp
das
int
dec
imul
fsubl
and
bound
fcompl
mov
mov
mov
inc
jnp
repnz
xchg
imul
mov
mov
jbe
loope
cmp
icebp
mov
jg
and
out
push
jae
repnz
les
iret
sub
dec
sbb
add
or
add
movsl
call
ljmp
push
repz
jle
std
inc
jl
and
stos
subb
sbb
daa
pop
sti
xor
fmuls
movsl
push
cltd
scas
rcrl
andnps
xchg
sub
in
in
ds
imul
adc
jg
mov
push
mov
adc
push
and
and
add
adc
pushl
cmp
fwait
push
dec
inc
xchg
fs
xchg
mov
shlb
jbe
arpl
mov
adc
leave
push
mov
add
pusha
xchg
sbb
inc
pop
jmp
xchg
sub
jg
cmp
or
push
fsubr
int
pop
jle
push
xor
or
enter
test
and
mov
aam
and
mov
fisttpll
cli
xor
cmpsl
mov
jo
aas
and
gs
cmc
je
into
cmp
mov
imul
sahf
or
mov
pop
in
js
or
out
sub
push
clc
jp
push
inc
jnp
cmpsl
cmp
sub
inc
push
adc
jno
sbb
mov
imul
jns
in
inc
repz
outsl
push
mov
int
jecxz
dec
pusha
jg
push
fincstp
adc
sbb
enter
sti
movsl
and
int3
ja
fistpl
shl
cmpsl
fiaddl
cmp
mov
push
fnstsw
ljmp
sarl
cmp
lods
ss
cmc
and
pop
lret
and
js
jb,pt
lea
stos
sbb
fwait
mov
int3
pop
adc
jnp
xor
int
ljmp
cld
rorl
fimuls
mov
mov
pushf
frstor
je
pop
mov
adc
adc
hlt
sti
adc
sbb
fistps
loopne
sbb
in
int
enter
pop
pop
mov
in
popf
je
dec
mov
in
pushf
lret
xor
loope
aad
hlt
xchg
pop
xchg
jecxz
fdiv
jg
push
xorl
cld
push
cwtl
mov
call
dec
out
sbb
and
mov
xchg
repz
xor
out
cmp
push
pop
adc
arpl
call
icebp
xchg
aam
inc
jecxz
ftst
xchg
mov
mov
and
dec
push
in
pop
jmp
cmp
add
stc
or
pop
push
jb
or
cli
stos
push
enter
mov
sub
xchg
repz
fwait
sbb
popl
aad
push
mov
test
clc
jge
and
dec
and
movsb
in
xchg
rolb
sti
xor
push
lcall
pop
cs
xor
mov
push
pushaw
movb
fcmovb
out
lcall
jp
aas
shrb
mov
lahf
lahf
pushf
jne
push
pop
popa
sbb
jno
pop
cs
jno
sbb
in
mov
fimull
test
sub
jecxz
dec
ret
int
dec
mov
nop
adcl
jmp
mov
in
fsubl
int
and
sub
jb
mov
or
sbb
ret
mov
fs
daa
cmc
push
pop
pop
lods
fidivs
mov
pop
dec
mov
inc
jecxz
lcall
repnz
cmp
add
or
out
std
push
sub
in
dec
lret
or
sbb
or
lcall
push
shlb
scas
cld
movsl
out
stos
in
add
push
sub
pop
adc
jle
ss
nop
enter
and
jno
inc
add
daa
push
xchg
pop
inc
xchg
dec
and
out
dec
xchg
cmp
shll
js
mov
adc
les
hlt
or
in
sub
lcall
push
jecxz
out
out
stos
fcom
inc
add
scas
adc
ss
and
mov
movsl
out
mov
cmp
pop
add
fwait
in
or
fmuls
push
incb
or
xchg
mov
dec
push
pop
clc
mov
jg
mov
ffreep
loop
pop
inc
inc
lods
incb
inc
enter
popf
mov
into
fidivs
push
gs
push
xor
clc
pop
xchg
idivb
cld
adc
mov
iret
sub
xchg
jno
cmpsb
add
push
cld
cmp
enter
mov
in
jge
jp
add
mov
dec
inc
pop
movlps
test
xchg
mov
popf
ficoml
inc
fists
jb
xorl
fists
inc
push
rclb
flds
jb
pop
stos
scas
cmpsl
dec
scas
hlt
jo
sbb
dec
in
in
dec
xor
insb
mov
mov
aaa
dec
xchg
insl
or
in
stos
inc
pop
dec
pop
movsb
pop
pusha
or
adcb
mov
repz
sti
cmp
adc
scas
in
inc
test
outsl
or
dec
int3
and
fnstcw
or
iret
cmpsl
push
insl
shrb
insb
xor
loope
imul
rol
xor
repnz
xor
ja
clc
and
and
insl
jg
inc
fldl
jno
mov
cmp
and
lods
sbbl
call
lcall
cmp
push
sbb
aaa
sti
fdivrl
cmpsb
loopne
outsb
dec
add
clc
fistl
js
xlat
mov
mov
cmp
push
out
es
push
cmp
imul
imul
xchg
mov
mov
inc
repnz
aam
pop
aaa
pushf
in
inc
aam
lret
ss
scas
pop
lahf
xor
leave
mov
xchg
xchg
jecxz
stos
sbb
mov
lret
test
rcrb
mov
sbb
cs
mov
xor
add
pop
mov
mulb
add
hlt
int3
outsb
xor
adc
mov
push
inc
xchg
mov
in
lret
and
shr
mov
adc
push
cmc
mov
push
inc
mov
stc
cmp
je
cmpsb
sbb
shr
xchg
mov
push
popa
loopne
pop
int
leave
mov
and
test
adc
and
push
jecxz
sbb
gs
sbb
or
xor
in
mov
daa
test
cmp
outsl
mov
fisubrl
stos
mov
xchg
mov
sbb
loope
insb
sbb
adc
hlt
scas
iret
jge
pop
sar
inc
add
push
adc
inc
pop
add
sbb
outsb
mov
pop
cmpsl
adc
out
loope
jmp
xchg
add
mov
in
iret
dec
pop
lret
xor
testl
inc
jp
xorb
addr16
pop
arpl
xchg
xlat
jle
aaa
imul
inc
fmul
mov
add
sbb
jb
lds
sub
mov
outsl
push
pop
xor
cmp
imul
fs
mov
xchg
sub
daa
std
cld
push
mov
int
and
pop
or
xor
sub
ja
xor
loope
jo
push
addr16
arpl
pop
inc
cwtl
daa
mov
mov
int
icebp
nop
lods
sti
fidivl
and
testl
pop
jg
inc
cmp
cwtl
push
push
dec
jp
test
popf
dec
mov
or
movb
dec
adc
jae
jge
scas
cs
loop
ret
mov
clc
jle
lcall
xchg
aaa
movsb
push
mov
sbb
sbb
inc
xor
shrb
sbbl
cld
test
int
push
jmp
lret
int3
add
or
mov
xlat
add
dec
dec
adc
pop
or
inc
add
popa
dec
adc
xor
mov
sbbl
mov
jmp
rorb
fwait
cmp
dec
push
out
pop
dec
cli
xlat
testl
mul
xchg
fistl
mov
out
xor
arpl
fsubp
pop
fcomps
nop
ss
add
inc
stos
cmp
in
and
cld
pusha
dec
imul
add
xor
add
mov
std
jle
dec
mov
xor
mov
and
cmp
stc
inc
cmp
cs
and
mov
push
pop
jo
adc
xchg
addb
cmpsb
movsb
push
leave
sti
cli
pop
mov
push
mov
movsb
adc
lret
mov
lret
push
adc
inc
arpl
test
mov
or
xlat
dec
mov
imul
mov
andb
and
push
jp
hlt
sub
je
scas
and
cmp
and
lods
lcall
sbb
lock
fucomi
mov
jne
xchg
rolb
and
mov
or
push
test
das
pop
dec
pop
test
adc
mov
sub
sub
imul
repz
push
xchg
stc
inc
mov
sub
jnp
aad
ret
or
pop
inc
cmc
bound
decb
fistpll
pop
outsb
dec
fstl
cmpsb
jge
rclb
ljmp
sub
sbb
ficoml
icebp
popf
shrl
sub
xor
xchg
add
push
aam
lods
push
shl
push
fnstsw
mov
int
leave
xor
cmpsb
test
popf
dec
popa
sbb
call
pop
out
xor
stos
aas
pop
xchg
mov
fisubrl
push
insb
daa
sub
cmp
cmp
repnz
fsubp
int3
add
stos
call
jno
inc
and
mov
lds
mov
jg
mov
and
cmp
add
cmp
mov
int
dec
cli
push
push
mov
pop
push
inc
push
push
movsb
sbbl
sbb
sbb
mov
cmp
in
lods
out
dec
inc
adc
sub
insb
fisubrl
mov
into
mov
ja
mov
jne
js
lds
mov
cmc
std
mov
jle
adc
mov
out
test
push
out
fiadds
lcall
cs
pusha
xchg
adc
and
imul
xchg
and
fisubrl
ficomps
cld
aam
xchg
jnp
jle
pop
sub
cmp
xchg
cld
inc
jle
xchg
mov
cmpsb
or
ss
lret
cmp
cmp
or
aaa
lods
pop
movsl
aas
insl
push
sbb
mov
movsb
rcll
lret
clc
push
mov
in
inc
arpl
lock
push
outsl
ret
ja
cmp
rcrl
or
imul
pop
repnz
add
movsl
addr16
in
cmp
fnstsw
cli
dec
or
inc
repz
notl
cmp
outsl
imul
mov
jne
jmp
sub
shll
xlat
dec
clc
inc
xchg
jle
aad
sbb
jp
repnz
pop
xchg
and
jnp
call
pop
cwtl
lret
das
fs
mov
xchg
adc
lcall
and
xchg
addr16
fidivrs
inc
jg
incb
xchg
fmulp
and
les
dec
and
mov
pop
push
daa
xchg
pushf
mov
test
cmp
mov
mov
xchg
cpuid
sbb
mov
mov
sbb
dec
pop
pop
mov
jp
lds
leave
jg
xchg
push
pushf
push
in
mov
into
or
sbb
in
outsb
ss
dec
sbbl
lahf
iret
inc
xor
inc
ret
iret
cmovb
imul
mov
ljmp
or
sarb
inc
fistpll
mov
mov
sbb
mov
jl
or
sub
jne
lods
dec
sub
lret
dec
and
orb
fisttpl
out
outsb
cmp
lods
jle
add
or
inc
ss
dec
or
jmp
mov
and
lods
inc
jg
mov
loopne
pop
mov
in
lret
imul
pop
or
loope
arpl
adc
gs
sub
xchg
ret
outsb
jp
pop
cli
push
push
popf
mov
enter
cli
pop
icebp
pop
dec
fcmovne
insl
int3
sahf
clc
cmp
out
sbb
dec
jle
pop
mov
stos
clc
lds
ret
movsl
in
int3
cmpsl
aaa
push
rolb
cltd
push
das
adc
sbb
jmp
clc
sub
inc
notb
inc
ds
inc
subl
and
lcall
dec
je
in
or
mov
mov
cmp
ja
ret
mov
insb
or
lret
mov
jns
pop
stc
hlt
jp
mov
sar
inc
std
push
clc
fistl
lods
pop
jo
mov
cmc
xchg
mov
dec
leave
andl
or
dec
iret
mov
inc
ficomps
mov
jnp
repnz
outsb
into
mov
mov
into
jb
push
cwtl
data16
leave
cmpsl
xchg
jp
sbb
loopne
sbb
mov
push
adcl
lret
dec
das
dec
jp
iret
xor
jl
testl
pop
jne
sbb
sub
leave
mov
stos
mov
xchg
dec
push
adc
sbb
push
ljmp
fnsave
popa
jne
sbb
lret
sbb
or
cmp
mov
xchg
dec
iret
xor
push
scas
adc
cld
mov
leavew
xchg
mov
sbb
xor
dec
sbb
xchg
ds
or
dec
dec
xchg
xorl
test
int
jecxz
js
and
mov
movsb
aas
mov
push
mull
inc
sbb
or
pop
dec
push
aaa
lret
decl
lea
push
popa
sub
cmc
sti
nop
lods
mov
dec
mov
int
push
out
cli
aam
enter
inc
push
push
loope
cmpsl
imul
and
inc
mov
test
adc
jmp
xchg
fs
xlat
arpl
enter
outsb
mov
jg
xor
movb
mov
call
sub
add
ss
push
in
pop
push
cmpb
rcrl
cmp
inc
adc
mov
stc
dec
stc
mov
sub
add
cmpsb
dec
jae
jp
cli
jl
and
out
fistpll
cltd
mov
shr
and
xchg
int3
std
pop
sahf
sub
cmp
mov
stos
adc
bndldx
test
mov
or
dec
lods
scas
push
mov
dec
push
cli
and
addr16
hlt
pushf
imul
push
mov
subl
jg
sbbb
stos
push
aam
sbb
out
xor
adc
cli
jae
xlat
adc
jge
or
dec
cmp
cltd
in
mov
stc
jmp
mov
sbb
jge
or
dec
cmp
cltd
in
mov
stc
jmp
mov
sbb
jge
or
dec
cmp
cltd
in
mov
stc
jmp
mov
sbb
jge
or
dec
cmp
xor
mov
es
ss
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
push
jecxz
repz
arpl
adc
jno
adc
and
inc
jecxz
xchg
and
adc
jecxz
repz
ret
arpl
adc
and
xchg
inc
jecxz
shll
xorl
inc
mov
repz
mov
mov
andl
mov
loopne
fwait
daa
xchg
data16
pop
out
call
cmp
lods
or
jmp
std
lock
push
outsb
in
mov
mov
movsl
out
cmp
test
mov
pop
fisubrs
fbstp
mov
jne
fisubrl
inc
bound
ret
adc
sahf
ret
mov
and
andl
repz
lahf
lcall
shr
mov
and
ret
pop
ja
sbb
int3
mov
mov
or
inc
sub
mov
test
repz
inc
and
mov
or
cld
scas
sahf
lods
jne
or
movsl
popf
sub
ljmp
push
jae
push
pop
push
push
ss
mov
mov
repz
arpl
mull
test
test
push
mov
addl
xor
pop
stos
sbb
inc
int
ret
roll
nop
pop
xchg
sub
inc
fiaddl
push
push
jecxz
icebp
add
add
hlt
jbe
mov
xchg
push
repz
pop
fisubl
inc
aas
stos
das
mov
inc
mov
and
repz
jecxz
xchg
and
adc
inc
repz
arpl
adc
and
repz
jecxz
xchg
and
adc
in
mov
mov
minps
adcl
fcmove
xchg
push
shlb
push
add
adc
xor
loop
adc
nop
jne
cs
jl
hlt
cmp
mov
fiadds
xor
inc
and
and
cmp
lds
lcall
mov
adc
add
int
mov
scas
cs
lahf
xor
ds
int
inc
add
xor
add
in
dec
scas
or
inc
int
or
movsl
add
inc
sbb
xorb
mov
rcl
sbb
ljmp
inc
lock
imul
mov
fsubs
pop
das
push
std
push
vmwrite
mov
xor
or
ds
lock
aad
aas
or
stos
sub
mov
loope
add
aas
xchg
push
loope
je
and
sbb
mov
or
je
cmp
hlt
stos
jbe
push
push
clc
ret
mov
or
xor
mov
pop
cltd
pop
dec
pop
fwait
out
fwait
push
sub
iret
mov
xchg
ret
push
mov
sbb
lds
pusha
cwtl
insw
int3
rcr
lret
push
push
in
mov
rolb
lock
jg
xchg
cwtl
add
inc
mov
pop
enter
xor
cmp
mov
jp
adcb
jo
adc
mov
insl
pop
js
jle
push
push
pop
js
jle
xchg
jp
out
mov
mov
fs
mov
jno
clc
lcall
sub
xchg
fmuls
adc
jmp
stos
addr16
icebp
hlt
jp
jo
imul
inc
ss
jno
xor
decb
or
aas
xchg
rclb
jbe
mov
cs
pop
stos
ret
push
jb
into
bound
fsubp
add
pop
cmp
xor
lea
cmp
nop
sub
movsl
sar
repz
loop
or
movsb
jno
es
jno
out
sbb
mov
xchg
sub
rcrb
xlat
int3
lock
and
sbb
inc
sbb
add
mov
data16
jno,pt
outsl
shlb
ret
dec
inc
sbb
fsubrp
pop
mov
mov
call
fucomi
jae
xchg
in
push
stos
add
mov
popa
in
mov
mov
into
mov
jo
shll
notl
add
shr
push
sbb
mov
add
push
xchg
mov
jno
add
mov
ret
adc
mov
dec
mov
sbbl
mov
cmc
out
arpl
icebp
jg
sbb
pop
push
js
fcmovnb
cmp
xor
adc
mov
out
inc
jns
popa
ret
rorb
stos
repz
aas
rclb
ds
pop
cmc
or
jmp
add
xor
xchg
and
dec
jo
lret
movsl
mov
mov
or
pop
jle
vphadddq
call
arpl
mov
jmp
filds
adc
insl
leave
mov
cmpsb
mov
jmp
data16
jge
inc
add
mov
hlt
insb
dec
ret
lret
lret
test
pop
sbb
mov
mov
je
imull
das
or
dec
shrl
push
lea
imul
cmpsl
dec
mov
jb
mov
js
mov
sti
sbb
call
scas
lock
lods
pop
test
mov
push
repz
and
pop
sub
xchg
sbb
adc
ljmp
mov
leave
aaa
or
mov
shrl
push
pop
cmpsl
mov
scas
fcoms
cmp
pop
mov
add
loop
hlt
ja
mov
sahf
xor
mov
jne
add
scas
ret
sub
sub
xor
xchg
mov
loop
xchg
roll
mov
fwait
jg
in
movsl
add
jl
ret
inc
mov
std
shrl
stos
jae
in
dec
add
ljmp
pushf
cmp
imul
xor
adc
add
loope
aaa
and
sub
cmpsb
xor
notb
stos
imul
cmc
sbb
int
push
jnp
adc
mov
fdivrl
sbb
mov
loop
lds
xchg
test
dec
xchg
pop
rcr
repnz
sub
imul
pop
out
and
cmc
icebp
add
int
adcb
test
or
adc
sbb
shrb
sub
cmc
imul
cmp
jp
xchg
xorb
push
hlt
je
mov
bound
push
or
adc
mov
stos
cmc
lcall
xor
outsl
jnp
add
mov
stc
arpl
sub
adc
inc
mov
gs
jno
mov
fwait
pop
test
mov
pop
sub
fnsave
pop
es
call
shl
arpl
pushl
xchg
fs
rclb
je
rcll
xor
xor
lret
and
and
lret
dec
jbe
in
jg
pop
cmpsl
mov
pop
inc
add
lret
popf
mov
test
je
lcall
fwait
mov
and
inc
test
repnz
sti
sbb
xor
out
decb
cmp
ret
in
and
or
pop
in
or
shlb
push
dec
test
pop
notl
mov
jp
outsb
jno
je
pusha
out
out
lods
pop
les
push
jg
movsl
jmp
jle
mov
sub
lods
jle
pop
and
or
outsl
pop
mov
pop
push
lret
imul
enter
add
fnstsw
arpl
ret
mov
ja,pt
aad
mov
flds
push
in
repnz
cwtl
out
loop
leave
fs
sar
inc
fnstsw
sahf
jge
fimull
inc
pop
inc
fimull
adc
mov
xchg
jp
mov
sbbb
mov
adc
clc
into
inc
ret
stos
loop
add
out
sahf
lcall
jno
dec
in
fs
mov
dec
js
or
sbb
dec
imulb
mov
out
movsb
jmp
sub
lods
test
ret
jle
mov
aad
std
and
pcmpeqb
out
lea
mov
xchg
cmp
mov
push
jmp
xor
add
add
mov
mov
icebp
inc
leave
fmull
gs
sbb
movsl
adc
aaa
movsb
sub
jp
mov
sub
fs
inc
subl
fidivl
jo
and
push
jge
arpl
mov
mov
jl
push
leave
inc
icebp
adc
out
sub
jg
mov
insb
aaa
inc
jne
or
xor
xchg
adc
cld
push
icebp
into
rcrl
and
pop
mov
dec
pop
shl
cmpsl
xorl
das
fnstenv
mov
ss
sahf
cli
aas
in
test
int
call
or
push
and
mov
ja
pop
dec
scas
jae
out
mov
sub
add
sub
push
and
inc
xor
mov
inc
test
push
call
out
mov
xchg
imul
and
cmp
outsb
cmp
push
mov
pop
sbb
mov
loop
and
imul
movsb
data16
adc
shll
mov
mov
test
fs
mov
sbb
arpl
and
mov
ds
hlt
xor
out
ret
nop
mov
fsubrs
cmpl
jbe
or
adc
pop
or
mov
lds
shrl
cmpsl
push
add
jle
test
xor
ficoml
jnp
mov
sarb
bound
nop
inc
stos
icebp
inc
xchg
iret
sbb
cmp
pusha
sub
lock
dec
xchg
enter
mov
jp
dec
push
and
outsb
aaa
lahf
fadd
push
jg
sub
popl
mov
pop
jg
cmpsl
mov
sbb
dec
inc
fndisi(8087
jne
repz
daa
movsb
jo
sub
test
xchg
lret
push
dec
stc
jae
jg
mov
xchg
xchg
sbb
jp
xchg
ret
lcall
enter
pusha
out
repnz
sti
push
scas
mov
xor
cmp
cmp
cli
cmc
test
inc
iret
hlt
sbbl
mov
fsubr
add
jecxz
ss
jecxz
fldt
stos
mov
cmp
int3
cld
mov
out
dec
stos
cs
push
inc
sbb
pop
ret
repnz
adc
or
test
sbb
outsb
fadds
pop
insb
sbb
cmp
mov
jecxz
xor
fsubrs
int
mov
dec
push
cmp
cmp
into
loope
or
cmp
dec
xorb
mov
mov
jg
out
push
loopne
dec
cmpsb
jno
ljmp
mov
sub
add
call
xor
add
movsb
dec
aaa
cmp
imul
lods
sub
shll
mov
aas
ds
jns
cmp
jle
xchg
lods
sbb
daa
test
fistpll
out
jo
and
dec
iret
xor
pop
or
dec
sub
lret
aad
sub
push
out
popa
mov
loope
cmc
js
jb
adc
sbb
mov
nop
out
lock
mov
add
cmc
jmp
add
xchg
cmpsl
dec
mov
cmp
sbb
es
mov
insl
adc
adc
mov
adc
adc
je
shlb
lret
loop
jl
clts
in
cwtl
loop
push
dec
cs
xchg
ljmp
xor
push
jecxz
xchg
lea
insl
cmp
push
aas
sub
or
add
jo
iret
repz
fldcw
xchg
xor
lods
in
mov
jmp
negl
sbb
sbb
adc
pusha
pop
rorl
imul
or
fnsave
addr16
xor
adc
jl
inc
es
andl
mov
loope
lds
repnz
jmp
fidivrs
fisttpl
sbb
das
xor
scas
cmp
fcoml
push
jmp
stc
fisubrs
call
cmp
mov
mov
add
push
inc
lcall
jb
addl
lahf
jbe
mov
jecxz
mov
push
mov
adc
lcall
mov
sbb
xchg
xchg
fsubl
mov
test
jecxz
push
std
les
inc
sub
pop
aad
addr16
or
jg
add
lea
vcvtsi2sd
test
ror
idivl
enter
mov
ss
push
aam
sti
mov
fldln2
dec
gs
dec
loopne
nop
and
mov
jmp
pusha
int
or
jae
sub
xchg
aas
sub
pop
push
dec
cmp
dec
sbb
mov
pushf
addr16
pop
cmp
test
xor
cmovl
jnp
lods
lret
add
adcl
jp
popa
adc
or
les
cmp
mov
leave
sub
test
data16
lds
imul
sub
xor
sub
cmpsb
dec
icebp
pop
jecxz
adc
inc
sub
sub
enter
and
sub
mov
ja
xchg
cmpsl
imul
cld
or
fs
push
mov
nop
loope
sbb
loope
mov
or
sahf
xchg
sub
mov
movsb
js
ss
adc
js
imul
shlb
dec
dec
ret
je
xchg
pop
stc
test
xor
out
xchg
sahf
add
xchg
jle
xlat
add
push
out
incb
or
adc
dec
add
lock
pop
test
pop
and
in
mov
cwtl
mov
inc
cmp
and
inc
push
sbb
mov
shrb
pushf
loopne
jg
std
call
push
cli
dec
leave
mov
cmc
divl
push
cmpsb
lcall
sbb
cltd
lret
mov
jecxz
push
mov
test
pop
test
mov
fstpl
mov
dec
mov
hlt
aaa
mov
int
inc
add
lods
adc
sub
lds
jmp
outsb
hlt
mov
outsl
add
test
sahf
sbb
and
inc
adc
inc
dec
decl
jl
xor
rorb
add
jecxz
push
sbb
xchg
push
mov
or
or
pop
dec
xor
in
jo
lahf
fsubrs
mov
fisttps
nop
divl
or
int
or
repnz
sbb
sbb
mov
cmp
cli
adc
sub
enter
lahf
insb
cmp
adc
push
out
nop
cli
movl
scas
ja,pn
dec
ljmp
movsl
cmp
pop
fistpll
push
movlps
jp
cltd
dec
in
push
gs
outsb
and
xchg
add
subl
xchg
and
repz
aad
frstor
pop
les
or
xor
xor
cmpsl
mov
inc
sub
pop
adc
mov
mov
pop
adcb
fistl
fdivl
leave
sbb
xorb
push
cmpsb
aaa
roll
stos
std
jae
push
mov
push
dec
and
int3
pushf
add
orl
test
pop
icebp
inc
jbe
cmp
roll
andb
testb
jp
icebp
sub
mov
lock
mov
arpl
das
mov
in
std
cmc
js
cmpsl
mov
fs
rorl
mov
cmp
icebp
ret
xor
dec
push
aaa
enter
add
lds
pop
push
test
xorb
cmc
sub
mov
cld
add
xchg
inc
xchg
loope
inc
xchg
and
movl
les
lods
adc
cmpsb
insl
sbb
repz
hlt
loop
jp
adc
or
and
out
mov
ret
test
neg
shrb
push
mov
adc
adc
mov
xlat
cmc
pop
out
cmc
cmp
dec
dec
lret
aad
pop
mov
push
mov
jg
addr16
add
lds
cs
fistpll
es
lret
insl
jb
int3
xor
push
gs
int
fdivs
insl
push
jno
cmp
and
pop
clc
sbb
cmp
mov
jae
mov
fisubl
add
inc
rcrl
in
sub
adc
fcomps
es
icebp
mov
movsb
sbb
mov
leave
pop
mov
jecxz
inc
or
dec
in
jle
dec
rorb
mov
sbb
push
stos
pop
mov
or
lods
xor
call
mull
jbe
pop
movsb
dec
scas
push
xchg
das
shl
out
inc
cmp
cmp
not
fwait
xchg
xchg
mov
or
sbb
fdivrl
es
iret
int
mov
push
aam
and
cmc
insl
imul
je
xor
sbb
rcrb
jnp
mov
pop
shl
jg
sub
sub
aas
mov
sub
sbb
mov
les
addr16
push
mov
repnz
pop
divb
ljmp
mov
rolb
mov
push
jle
dec
test
rorb
lcall
jo
inc
add
jp
jmp
cmpsb
movsl
lods
mov
dec
pop
sbb
xor
xor
ljmp
movsb
push
adc
mov
jmp
add
fwait
mov
and
pop
mov
lret
cli
nop
and
sbb
or
mov
popa
ret
jp
jo
dec
pop
push
stos
pop
and
inc
inc
sub
orl
pushf
add
call
inc
cmp
cmpsl
mov
dec
mov
shll
mov
mov
lahf
sub
inc
cli
cmp
mov
out
lret
jl
cmpsb
leave
jl
jg
cmc
and
out
int
andl
iret
adc
cwtl
inc
cmp
movsl
outsl
inc
push
fldt
cmc
loopne
into
xchg
mov
lds
sub
xor
pop
je
outsb
or
inc
out
dec
sahf
adc
je
ret
inc
test
sti
push
fisttpl
aad
cwtl
ret
icebp
push
fwait
push
inc
xor
aad
orl
or
mov
lahf
scas
enter
cld
xor
outsl
iret
lods
cmp
cmp
push
dec
pop
enter
leave
pop
cltd
sbb
int3
popa
jns
inc
stos
int
mov
clc
cmp
cltd
mov
mov
aaa
sar
jg
pop
imul
adc
inc
cmp
je
inc
cmp
cmpsb
shlb
cmc
fcoml
xorl
mov
push
imul
lahf
jne
push
sub
or
loope
push
jge
sub
mov
inc
push
and
pushf
xchg
std
out
idivb
mov
jle
mov
dec
ljmp
jmp
push
and
pop
and
into
aam
lods
sbb
jle
into
pushf
loope
add
jmp
adcb
adc
shll
sbb
mov
sbb
and
cld
inc
push
int
xchg
cltd
mov
divl
add
jmp
mov
arpl
mov
shrl
sub
jmp
lahf
inc
pop
adc
sub
jne
push
xchg
add
mov
into
dec
jecxz
gs
mov
pop
jb
push
je
and
xchg
cmp
xchg
sub
add
sub
ss
pop
jne
or
pop
mov
dec
and
dec
sbb
int
sar
imul
and
mov
mov
and
stos
daa
popl
fwait
ja
lcall
fldenv
and
inc
fisubs
lcall
cmpsb
movsl
pop
gs
adc
xchg
movsl
enter
jge
and
xchg
shll
test
xor
mov
adc
lods
insl
insl
sub
daa
mov
shr
xor
push
dec
imul
mov
aas
cmp
leave
lock
cwtl
mov
rolb
mov
inc
insb
push
sbb
pop
mov
rolb
out
xchg
jmp
test
push
mov
movsb
out
dec
or
mov
add
insl
mov
jae
fidivs
sub
xor
shl
push
fisubrs
push
push
xchg
popf
out
push
inc
sub
cmp
mov
xchg
sbb
mov
sbb
xor
xor
andb
inc
ds
jno
push
ja
cmp
cmpb
push
cmp
enter
nop
mov
dec
mov
dec
bound
and
pop
push
int
out
pop
pushf
dec
lock
jge
push
mov
leave
mov
out
adcl
pop
out
bound
stc
jne
rcrb
or
fcomps
out
mov
dec
fcompl
aas
pop
or
sub
dec
jp
js
push
leave
xchg
sub
xchg
jno
sti
int
mov
adc
lret
mov
add
mov
and
or
jbe
movsb
loope
push
addr16
dec
popf
xchg
int
push
lcall
imul
jecxz
cli
or
cwtl
test
sbb
adc
fistl
cld
pop
adc
push
xchg
mov
lds
adc
nop
sbb
xchg
int
and
outsl
std
and
pop
subl
mov
add
pop
add
adc
in
mov
je
xchg
push
push
daa
mov
mov
pop
roll
fwait
icebp
mov
mov
hlt
and
sub
pop
xchg
fmul
popf
push
adcl
fisttps
pushf
sti
and
xchg
sub
mov
daa
clc
loopne
call
jno
push
xchg
inc
cmp
jns
shlb
aas
pop
call
mov
cmp
arpl
mov
mov
adc
and
gs
adc
push
popaw
outsl
mov
jbe
cmp
and
inc
mov
enter
mov
jp
inc
lahf
cmp
mov
push
fsubl
adcl
rcr
fsubrs
cltd
movsl
rclb
sub
sub
cmpsl
add
xor
lret
hlt
int3
loopne
add
push
cltd
clc
sarl
lahf
sub
xchg
xchg
fldl
inc
jp
cli
idiv
mov
inc
adc
je
sbb
sbb
push
cltd
mov
sub
jno
popf
or
cld
jns
push
clc
fs
pop
sbbb
fcoms
xchg
aaa
lea
jo
scas
cmpsl
mov
decb
mov
jmp
rcll
mov
and
repz
jecxz
xchg
and
adc
inc
repz
arpl
adc
and
repz
jecxz
xchg
and
adc
jae
adc
roll
and
shl
ret
jae
inc
jecxz
xchg
and
adc
pop
repz
inc
rcll
mov
mov
fstps
jecxz
in
or
dec
cld
pop
in
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
loop
pop
push
popa
lahf
jno
and
xor
aas
fisttpll
icebp
pop
repz
jg
dec
mov
mov
inc
mov
jno
add
adc
and
xor
aas
shll
rcrl
outsl
loop
inc
dec
mov
aas
push
or
push
jecxz
daa
sub
and
imul
mov
inc
lahf
cmp
adc
mov
lock
cmp
add
xchg
cmpsl
mov
cmp
mov
jmp
add
in
pop
mov
lock
hlt
icebp
ljmp
cld
mov
pop
adc
mov
inc
rclb
pop
loope
nop
xchg
repnz
mov
adc
push
repnz
lret
and
ror
jns
into
cmp
loopne
loop
jge
pop
sub
mov
sahf
pop
xchg
adc
jl
mov
xor
dec
outsl
shl
movsb
sbb
pushf
jmp
sub
dec
mov
mov
dec
sbb
mov
push
hlt
pop
loope
sarb
or
mov
jno
imul
mov
sub
fldcw
call
dec
mov
leave
push
lret
pusha
icebp
jo
push
mov
dec
mov
test
push
in
adc
cmp
aaa
push
enter
xchg
and
mov
jae
sbb
sbb
cmp
push
aam
add
stos
insl
call
iret
and
xor
sarl
psraw
icebp
outsl
cmpl
scas
inc
mov
jno
add
adc
and
xor
sarl
psraw
icebp
outsl
cmpl
scas
inc
jnp
daa
inc
shlb
nop
je
popf
mov
mov
sti
sti
in
mov
leave
mov
cmp
push
addr16
lods
loopne
aam
or
cmpsl
leave
or
sub
mov
nop
jbe
mov
sbb
mov
push
push
sarl
clc
jg
stos
push
mov
or
mov
cmp
sub
pop
scas
scas
inc
outsb
push
scas
inc
shl
adc
int
ss
mov
mov
inc
push
mov
adc
jns
in
mov
jns
scas
xlat
cmp
rorl
cld
jge
pop
fistpll
gs
cmpsb
popa
jle
das
daa
xchg
push
sub
xor
pop
jbe
shll
jge
mov
xorl
inc
cmp
out
mov
xor
ret
lcall
icebp
adc
mov
nop
sub
mov
or
dec
iret
int3
enter
jge
mov
adc
sub
push
mov
push
mov
sub
scas
jl
cltd
lret
test
xor
aam
lahf
loope
xchg
roll
sub
jge
insb
les
push
and
es
shlb
xlat
ds
pop
push
pop
xchg
daa
mov
jmp
je
mov
icebp
popa
cmp
xor
dec
cld
inc
loop
inc
lods
jb
adc
cwtl
mov
cmp
aam
adc
aaa
jp
rcll
adc
mov
lods
movsl
inc
add
aad
enter
sbb
scas
push
sbb
les
mov
mov
mov
adc
or
addr16
mov
and
push
mov
jg
aaa
mov
mov
jg
mov
cmp
out
adc
and
decb
or
pop
call
mov
xor
push
jns
test
stos
daa
insl
data16
cmp
adc
xor
sub
cmp
and
sub
add
or
and
es
sub
xor
and
out
in
jmp
pop
in
xchg
xchg
or
or
dec
jns
bound
pop
sub
jae
mov
bound
sub
sbb
test
mov
mov
jmp
or
orb
adc
lret
lahf
cmp
stos
fistl
ja
stos
mov
cwtl
pop
jl
add
movl
mov
imul
inc
sbbl
sti
mov
lahf
iret
xor
adc
push
rep
out
and
ret
in
push
lret
inc
sbb
jg
int3
into
and
mov
xchg
out
push
inc
in
fprem
push
ljmp
shlb
ljmp
push
mov
xchg
testl
lods
cmp
out
mov
clc
mov
add
add
bound
cmp
cwtl
nop
jne
repnz
xchg
outsb
sub
popf
push
scas
mov
and
mov
jnp
dec
rclb
add
out
aad
cli
sbb
test
hlt
dec
out
fsub
push
mov
mov
xchg
aad
xchg
xor
and
xor
fimull
addr16
mov
fisubs
xor
xchg
jne
test
cli
loop
cltd
inc
push
repnz
cmp
pop
jecxz
inc
loopne
sarl
fistpll
mov
lods
mov
push
out
xchg
xchg
ja
test
or
loop
or
push
dec
lret
loopne
xchg
adc
test
cmc
adc
adc
stos
xor
fisubs
iret
push
mov
dec
mov
mov
cmp
addr16
push
movsb
inc
sub
add
cld
pop
pop
jne
sub
test
inc
xchg
repz
cli
xor
sbb
cs
repz
xchg
std
sahf
push
jmp
mov
mov
sub
js
jno
popa
lahf
fdivrs
jo
daa
aad
in
push
mov
sar
mov
nop
mov
mov
mov
sub
bound
pop
lds
jecxz
rorb
pushf
sar
nop
orl
mov
aas
mov
ljmp
inc
out
js
adc
mov
mov
lahf
sti
xchg
mov
push
sbb
pop
lods
xor
pop
jge
cmpsb
sbb
popa
pop
les
test
mov
js
test
in
mov
sub
adc
aaa
test
pop
and
mov
lods
xorl
mov
push
push
loop
dec
std
and
js
inc
daa
sbb
vmwrite
sbb
sbb
xchg
mov
push
pop
jmp
xchg
out
add
shll
in
sbb
inc
sbb
dec
flds
xor
mov
stc
xchg
inc
aad
push
mov
jecxz
ror
adc
shlb
fcom
xchg
push
jl
out
pop
sbb
stos
dec
ret
xchg
stos
shll
sbb
push
jg
pop
outsb
lods
pop
jno
push
add
jecxz
out
xchg
push
ss
les
jb
int3
inc
ss
stos
mov
cmc
lret
push
mov
jecxz
loopne
pusha
cs
add
insb
scas
mov
ja
shr
adc
ss
mov
sbb
popa
out
jge
sbb
sbbb
cmp
jns
inc
aaa
mov
dec
cmp
inc
adc
mov
fsts
mov
adc
or
daa
ss
or
pushf
stos
push
outsb
dec
sub
xchg
cmp
sbb
arpl
cmp
std
lcall
lret
adcl
mov
inc
xor
outsl
pop
in
jge
mov
scas
jmp
in
inc
jp
sub
stos
loope
xchg
dec
sbb
aad
ljmp
rorl
aaa
fsubs
jb
fildl
jb
imul
js
pop
ss
mov
int3
jecxz
mov
outsl
push
inc
arpl
data16
and
cs
ret
stos
dec
stos
add
push
je
cmp
mov
jo
lret
arpl
jb
adc
jb
repnz
and
dec
sahf
xor
das
mov
dec
ljmp
shlb
pop
lea
jmp
or
mov
xlat
iret
add
mov
inc
mov
cwtl
aad
mov
or
adc
arpl
add
jg
adc
mul
test
jno
pop
jle
hlt
jmp
pop
sub
sbb
out
xlat
movsl
mov
lea
fwait
inc
lock
rclb
sbb
pop
sahf
mov
jmp
in
cltd
adc
sbb
push
ja
call
xor
and
test
je
cmc
adc
roll
imul
and
cmp
xchg
stos
sub
cmp
add
jbe
mov
push
loopne
or
daa
movsb
push
push
mov
mov
sbb
mov
and
lds
ret
and
sarl
xor
xlat
cmp
jge
aam
addb
sbb
sbb
cmpsl
scas
cld
mov
mov
add
pop
rcrl
xchg
dec
loop
mov
mov
loop
mov
jl
sub
int
mov
cli
test
push
leave
orl
mov
xor
sarl
xlat
and
xchg
push
sbb
fwait
pop
push
jmp
shll
call
dec
das
mov
fstl
sub
sbb
mov
add
jg
fwait
in
in
pop
addr16
xchg
mov
repnz
cmp
fsub
loop
mov
arpl
pop
aas
or
sub
mov
or
insl
loope
jge
mov
xor
sub
test
les
mov
push
mov
push
leave
lahf
aam
xor
lods
movsb
or
cmp
add
and
cmpsl
add
lods
bound
aaa
sub
and
jbe
add
lds
pop
nop
adc
xorl
scas
cld
pusha
mov
adc
or
mov
or
imul
cmpsb
push
adc
lea
lock
repnz
sbb
mov
stos
leave
jp
xchg
out
je
mov
shll
xchg
mov
push
cs
std
clc
xchg
mov
sub
cmp
mov
das
loop
jno
inc
mov
dec
sbb
mov
mov
dec
sbb
je
pushf
xor
push
fistpll
cld
mov
add
daa
insl
sub
mov
sarb
faddl
loop
and
or
xchg
inc
subb
mov
mov
sahf
cmp
loop
sarb
les
and
inc
pop
dec
loop
or
mov
sbb
mov
daa
in
repnz
insl
push
ljmp
mov
fadds
pushl
adc
iret
adc
xor
push
sub
sti
cmp
add
pop
sbb
dec
inc
push
test
or
stos
iret
xchg
fstps
addr16
xchg
dec
mov
mov
mov
ret
jmp
sub
fs
adc
jb
inc
addl
sarl
popa
fcmove
cli
cmp
xor
std
mov
mov
lds
pop
int
scas
inc
xchg
aaa
fidivl
inc
mov
andb
pop
imul
loope
out
leave
outsl
and
pop
test
cmp
adc
stos
sbb
sub
dec
test
push
push
pop
test
sub
shlb
icebp
jp
cmp
lods
xchg
xchg
adc
pop
pop
out
cs
xor
arpl
aas
mov
push
sub
ljmp
jo
out
popa
daa
out
jge
out
outsb
out
nop
mov
sbb
in
mov
nopl
pop
pop
fwait
sub
test
sub
adc
stc
ret
loope
popa
dec
insb
bound
outsb
enter
mov
dec
and
ds
dec
sbb
dec
xchg
nop
in
xchg
lods
neg
lods
jnp
jb
out
dec
pushf
push
adc
shll
push
pop
pop
pop
ret
mov
cmc
mov
lcall
pop
nop
xchg
or
sahf
add
out
inc
mov
cmc
testl
jecxz
hlt
sub
cmp
jnp
dec
fsubl
pop
inc
ficompl
and
xchg
sahf
das
mov
int
cmp
insl
ror
ret
cmc
or
in
aam
repnz
aad
xchg
iret
mov
nop
js
jno
loopne
stc
popf
imul
or
push
adc
nop
lock
invd
fsubl
fistl
xchg
sbb
pop
popa
xor
lods
mov
or
out
adc
pop
lods
test
cmpsl
dec
cmpsl
xchg
or
pushf
and
mov
stos
sub
scas
pushf
pushf
sti
loop
lret
idivl
fwait
inc
std
push
add
push
fs
lret
pop
or
shrd
cmpl
inc
cmp
pop
inc
or
jno
lcall
movsl
pop
pop
out
and
cmp
mov
cltd
or
xchg
popl
icebp
mov
sub
imul
testb
jge
ror
shlb
cmp
cld
cmp
bound
adc
add
xor
clc
sti
es
loope
aaa
repz
mov
in
jmp
mov
lods
xor
mov
sti
insb
insb
xchg
sahf
mov
popl
ficomps
and
imul
mov
stc
imul
xor
xchg
pop
mov
pop
adc
cmovp
add
sub
std
clc
xor
xor
ret
js
pop
clc
ficoms
loopne
js
lods
insl
mov
mov
pop
popf
xchg
jnp
mov
push
js
add
pop
fidivrl
dec
pusha
mov
rclb
sar
loop
ljmp
inc
sbb
mov
cmc
sub
rclb
and
lret
xchg
shlb
jb
outsb
outsl
add
lahf
ret
pop
xchg
shll
stos
sub
cmc
or
in
push
sbb
stc
xchg
lret
mov
pop
imul
aad
leave
inc
adc
arpl
sahf
out
mov
scas
lds
adc
int3
test
aam
inc
ljmp
jle
lahf
push
or
rclb
mov
adc
popf
aas
sub
cmc
xor
fcmovnb
sub
adc
inc
data16
repnz
or
push
and
xor
adc
jge
jle
ror
je
adcb
mov
cld
pop
cld
xor
lods
popf
xor
iret
push
adc
scas
adc
je
in
xor
test
call
push
call
cs
mov
lgs
mov
sub
dec
mov
dec
mov
int3
aas
mov
and
inc
and
fdivrl
push
les
lcall
sti
jmp
lahf
std
stos
inc
mov
cmp
pop
f2xm1
rcrl
jns
fcmovbe
push
adc
jg
ss
dec
aad
cmp
sub
imul
xor
outsb
ret
inc
aad
sbb
fcom
lods
test
test
imul
and
push
jmp
imul
mov
or
mov
pop
clc
sbb
dec
stc
lahf
aas
cwtl
sub
sub
nop
mov
call
lds
jne
jecxz
fwait
out
in
aaa
dec
xor
popa
xor
mov
adc
andl
adc
jl
push
lods
pop
xchg
sbb
addr16
and
bound
fs
sub
xchg
sar
sbb
push
imul
movsb
addb
xchg
lahf
mov
add
sub
lock
int
jl
jnp
sub
mov
mov
fstl
push
notb
cltd
into
fcoml
nop
les
stos
ljmp
inc
notb
repz
push
popa
mov
sub
mov
loopne
scas
push
sub
rolb
in
loop
cmp
pop
cmpsb
cmc
and
xchg
and
shlb
and
movsl
bound
add
scas
inc
and
pop
stos
push
dec
repnz
dec
clc
arpl
xor
xchg
or
sbb
xchg
xchg
and
dec
iret
aad
sar
js
xchg
nop
lea
mov
mov
mov
xchg
out
xchg
scas
pop
and
pop
jns
jbe
mov
pop
test
loopne
cmp
add
aas
sti
cmpsl
pushf
xor
add
jmp
daa
lahf
xor
inc
je
add
cmp
xchg
xor
fucom
push
mov
xchg
push
test
test
add
sub
push
icebp
enter
out
pop
insl
lock
insl
xchg
and
test
sub
push
sub
push
pop
sub
and
clc
mov
add
push
leave
popa
or
adc
ret
mov
jbe
mov
jo
fwait
pop
pop
adc
insb
dec
sbbb
sub
sub
andb
cmc
das
pop
mov
sub
cmp
jns
push
cmp
insb
and
add
and
cltd
adc
jg
lods
fmul
push
xchg
arpl
push
lds
add
or
pop
call
xor
outsb
out
xchg
xchg
jne
jne
dec
jae
push
sarl
int3
and
jp
in
sbb
sub
cltd
xchg
inc
jmp
dec
hlt
cmp
out
cmp
dec
mov
rorl
pop
pop
scas
adc
bound
mov
push
pop
add
xor
or
adc
sbb
mull
cmp
and
push
and
sub
push
je
dec
je
popa
xchg
cltd
sti
jno
fistl
fs
adc
pop
enter
enter
dec
pop
jne
pop
mov
xchg
dec
or
or
jmp
rcrl
shlb
push
jg
ret
push
sub
or
sbb
aaa
jne
sub
dec
mov
xchg
lcall
ja
mov
in
imul
xchg
fiaddl
leave
jne
mov
outsl
mov
outsl
or
aam
mov
xlat
mov
out
or
in
ret
stc
jecxz
inc
jno
out
add
test
xchg
mov
popf
cmpsb
adc
pushf
dec
add
and
sti
sbb
daa
fcoms
out
lock
xchg
sbb
stos
add
int
mov
xor
push
js
adc
cwtl
dec
mov
lea
and
mov
fsubp
pop
or
inc
push
shrl
lds
mov
jae
mov
shrb
mov
pop
fnsave
mov
test
fcomp
sub
jnp
or
and
aaa
jbe
jno
out
sbb
mov
lcall
loop
lret
and
or
or
dec
fimull
fwait
lods
cmpsb
push
rol
ljmp
in
in
mull
cmp
aaa
inc
add
cmp
pushf
gs
adc
outsl
cmp
fiaddl
jo
mov
xchg
mov
xor
or
ficompl
ja
repz
sub
aas
mov
pop
std
ret
sub
jge
fnsave
andb
inc
jne
push
daa
add
xor
jl
out
adcl
imulb
psraw
xor
xorb
adc
cmp
sub
int3
pop
in
stos
xor
rol
lea
in
push
insl
bound
pop
rorb
ds
mov
mov
push
pop
xchg
sarb
sbb
inc
xor
pushf
pushf
mov
and
jmp
imul
stos
out
enter
and
xchg
ficomps
in
sbb
fisttpll
push
jle
cmp
push
push
iret
jmp
inc
jns
out
fsts
int3
popf
adc
sbb
inc
pop
out
pop
iret
cmc
loopne
adc
mov
aam
sbb
jmp
xor
mov
xlat
arpl
je
adc
pop
lods
scas
sti
pop
lds
xor
jecxz
dec
xor
mov
mov
mov
push
fcomps
icebp
imul
dec
jp
loopne
or
into
nop
mov
pusha
cmp
pusha
dec
mov
add
push
push
in
adc
push
ss
cmp
pop
or
jmp
inc
jge
shl
popf
inc
andl
sub
mov
sub
xchg
or
xor
push
sub
les
outsb
aas
pop
or
jp
inc
or
mov
je
iret
scas
jmp
push
test
cld
or
addl
push
ret
ja
divl
mov
movsb
mov
dec
push
cmp
xchg
or
lods
rorl
add
and
test
xor
cmp
repz
aaa
mov
and
add
and
popf
cmp
rorl
movsl
push
jne
pop
jle
xchg
ficoml
mov
cmp
jl
lods
dec
and
mov
aam
add
cmpsb
repnz
dec
mov
into
sbb
nop
push
mov
clc
inc
adc
sti
outsb
push
push
fbstp
stc
repnz
je
out
or
pusha
mov
pop
lret
xor
push
movb
clc
lds
pop
lods
add
in
aam
test
jno
sub
testl
imul
dec
mov
mulb
xchg
in
inc
mov
push
adc
js
xor
mov
cwtl
cmp
jmp
in
mov
cmc
pop
fs
and
andl
filds
cmpsb
cltd
pop
sub
cltd
scas
push
lds
cmp
addps
push
cmc
sub
pop
in
sbb
dec
imul
or
aam
dec
sbb
mov
dec
jbe
mov
inc
adc
or
pop
jbe
pushf
arpl
popa
call
out
adc
arpl
pop
mov
cmpsb
mov
jae
add
fdivl
pop
mov
into
test
mov
add
fwait
cmpsb
leave
inc
inc
lods
adc
test
push
lea
movsb
aas
cld
mov
mov
xor
fstpl
xchg
or
fsubp
jb,pn
pop
mov
dec
pop
cld
in
pop
mov
incb
das
or
or
jl
and
aam
sub
sbb
mov
into
push
jle
ja
lcall
mov
leave
outsb
xor
dec
push
lods
mov
jbe
or
jl
jns
add
addb
sahf
mov
xchg
stos
cmp
adc
add
jle
test
dec
dec
insl
mov
or
fnclex
inc
add
add
in
ja
lock
movb
jle
push
mov
dec
jmp
sub
insb
jmpw
out
dec
cli
loopne
enter
pop
orb
mov
std
dec
outsb
mov
jmp
std
or
dec
fcoml
pop
jle
bound
add
mov
add
mov
and
stos
sbb
jp
xchg
inc
push
push
mov
adc
and
xor
sarl
psraw
icebp
outsl
cmpl
scas
inc
mov
jno
add
adc
and
xor
sarl
psraw
icebp
outsl
cmpl
scas
inc
mov
jno
add
adc
and
xor
sarl
push
loope
lock
andl
mov
xchg
push
pop
popa
mov
out
add
adc
and
das
rol
movsl
loope
xchg
or
outsb
mov
mov
out
rcr
rorb
ror
cmc
frstpm(287
jo
pusha
outsl
push
pop
inc
dec
xor
and
lock
out
rcr
ror
mov
cmp
jg
dec
and
inc
dec
xor
das
adc
insl
loopne
shlb
int
andl
jo
pusha
or
add
pop
push
outsb
ud1
loopne
mov
mov
push
mov
mov
btc
xor
jnp
pop
and
mov
jbe
xchg
aas
fnsave
lds
ds
orb
imul
lds
out
in
mov
in
cmp
jo
or
scas
shrb
ret
test
pop
mov
loope
cmpsb
iret
inc
ja
mov
call
aas
mov
ds
rclb
testl
pop
mov
fwait
stos
ljmp
pushf
jg
cwtl
leave
dec
mov
push
adc
push
xchg
into
and
dec
clc
popa
sub
fisttps
jae
jg
pop
test
add
rclb
pop
push
pop
rcrb
lds
inc
orb
stc
pusha
test
xor
and
adc
add
lods
mov
mov
movsl
loope
lret
jmp
ljmp
sub
push
push
dec
pop
push
pop
push
outsb
repz
movsl
ljmp
and
sbb
adc
add
arpl
add
test
mov
mov
jo
pusha
outsl
push
pop
inc
dec
xor
and
adc
add
lock
out
rcr
ror
mov
orb
pop
inc
dec
xor
and
adc
add
lock
imul
es
sub
lahf
les
mov
adc
mov
mov
lea
rcll
pop
cmpsl
inc
or
inc
jnp
sarl
stos
mov
jno
in
xchg
loopne
add
test
xor
jmp
jle
scas
xor
sbb
repz
stc
lock
stos
pop
or
ljmp
int3
rorl
mov
sbb
test
clc
insb
push
shll
sub
xlat
jg
and
nop
mov
cmp
or
pop
pop
cltd
mov
and
jecxz
mov
pop
mov
fmuls
les
mov
pop
pushf
jmp
psllq
xorl
lock
inc
loope
jmp
out
push
sbb
xchg
fsubs
push
loope
pusha
lea
sbb
dec
scas
mov
and
add
je
out
aaa
mov
adc
xchg
inc
mov
fadd
adc
jle
in
andl
ja
sub
sbb
add
addr16
jmp
jle,pt
inc
shlb
je
jb
add
gs
inc
jp
aaa
les
cmp
adc
sahf
adc
xor
or
sub
fildll
inc
js
into
lds
jmp
imul
jecxz
sti
jmp
add
mov
pop
sbb
loope
repz
xchg
lahf
add
lcall
xorl
mov
mov
push
fs
jecxz
jno
mov
dec
inc
ror
fwait
stos
arpl
out
mov
loope
xchg
push
lds
in
or
jl
mov
outsb
mov
outsb
mov
outsl
mov
aam
xchg
pushl
hlt
loop
push
xor
pop
cmp
dec
rorl
push
in
fs
sub
in
mov
movsl
cmpsb
stos
jbe
testl
aam
hlt
mov
test
ret
aaa
jo
cmpsb
arpl
lret
ret
xorb
xor
jo
jp
lods
ljmp
push
sub
ret
shll
clc
cmp
cmc
pop
push
std
sub
jecxz
or
xor
out
out
imul
add
scas
fists
jg
loope
dec
fsubrs
stos
cwtl
sahf
aas
and
jge
test
cli
sbb
in
push
xor
call
cmp
call
sub
push
int3
xchg
sahf
mov
lret
xlat
fistpll
mov
out
push
xchg
sahf
imul
mov
mov
and
cmp
les
gs
icebp
sti
jne
decb
mov
sub
adc
xor
jb
das
dec
repnz
cmpb
daa
adc
jae
mov
shlb
lods
dec
or
inc
jp
cmp
pop
ljmp
mov
inc
insl
jmp
inc
lock
sub
xchg
dec
fs
jo
out
roll
daa
leave
popa
dec
jle
daa
adc
sub
xchg
mov
iret
shll
and
cmp
mov
cmpsl
fs
cmp
dec
adc
or
loop
pop
xchg
outsb
std
lods
or
xor
inc
inc
cld
pop
sub
sbb
fsubl
js
dec
aas
int3
cli
test
or
pop
mov
pop
jne
ljmp
jae
fs
mov
sarl
xchg
pop
inc
cwtl
adc
lea
pop
mov
loopne
cld
or
jg
andb
jo
nop
sub
dec
jg
movsl
mov
fiadds
and
sbb
and
sahf
xchg
mov
lcall
dec
jne
rorb
push
jl
popa
push
stos
push
xchg
bound
je
loopne
xchg
call
fistpl
push
ret
ja
adc
lea
loope
fnstenv
leave
mov
push
xchg
in
pop
data16
mov
iret
inc
ja
or
mov
sbb
add
lcall
push
lret
das
stc
hlt
cltd
orb
and
mov
push
sub
movsb
push
popa
lret
mov
shlb
inc
xchg
and
cmc
mov
ss
cltd
sub
popa
add
adc
or
lret
rorl
into
shrb
push
dec
push
sbb
adc
nop
jb
mov
ffreep
mov
mov
mov
addr16
roll
jecxz
cwtl
inc
xchg
adc
dec
mov
pop
stos
insb
jge
shrl
xor
add
repnz
add
shlb
rcrb
js
jp
bound
addb
leave
arpl
aam
cmc
mov
in
push
xchg
lds
sahf
daa
test
mov
aaa
out
cmpsb
nop
pop
nop
mov
aaa
jbe
stos
jb
mov
fwait
mov
xchg
fwait
dec
jge
pop
test
mov
out
pop
mov
push
xchg
sub
mov
mov
or
clc
dec
xor
mov
cmc
jne
dec
loop
subb
jmp
movsb
push
dec
xor
shrl
stc
xchg
ficoms
bound
cmp
mov
imul
rorl
mov
jg
lcall
cmp
or
out
sahf
test
scas
xor
stc
and
out
pop
push
les
ja
sbb
pop
jmp
out
jmp
ds
inc
sub
add
mov
pop
inc
leave
jle
sub
pop
push
cmp
mov
xchg
pop
xor
outsb
push
rolb
int
pop
xor
fcomip
enter
dec
xorb
clc
daa
xchg
clc
xor
mov
stc
sbb
roll
js
ret
out
jecxz
adc
xchg
loope
mov
push
sbb
call
lock
sahf
js
jb
fistpll
push
dec
sbb
dec
das
adc
adc
or
adc
stos
xchg
sbb
loopw
sub
pop
inc
xchg
fldl
cld
dec
fistps
inc
popf
aas
xchg
nop
ja
lret
inc
add
js
sti
fisubl
xchg
pusha
rcrl
inc
and
jb
aad
sbb
jmp
test
out
push
sub
int3
mov
dec
aaa
out
std
shlb
inc
sub
adc
or
adcl
sahf
testl
xor
es
cli
into
movsb
movsl
add
jbe
mov
xor
add
xor
push
inc
arpl
dec
pop
dec
icebp
mov
pusha
mov
lock
inc
add
or
dec
pop
fdivrs
jl
push
out
xchg
xor
fmuls
xchg
adc
xchg
dec
pop
push
xchg
in
scas
sub
rcl
std
cmp
cmp
popf
adc
xor
push
imul
outsb
pop
fwait
das
sbb
loop
xchg
pop
adc
stc
inc
loope
adc
test
jb
sti
and
adc
idiv
push
inc
scas
xchg
imul
mov
or
jns
mov
xchg
jge
cltd
insl
movsl
mov
ds
negl
cmpsl
xchg
mov
adc
jae
and
xchg
cltd
dec
cmp
ret
outsb
mov
cmpsl
icebp
push
jno
add
adc
cld
cmpsl
xlat
adc
inc
call
push
fmuls
push
push
jp
lahf
jg
xchg
jmp
sbb
pushf
shlb
mov
movsb
pop
xchg
or
stc
cmp
and
int
push
xor
mov
sub
leave
ja
daa
sti
fsubs
pop
imul
pop
rclb
xor
ret
cmpsb
fdivl
dec
push
nop
jno
jae
es
adc
sub
push
push
aam
insl
imul
pop
jbe
xchg
data16
inc
xchg
cmp
enter
push
push
fistpll
push
xor
inc
decl
xchg
pushf
dec
mov
pop
sbb
and
xor
xor
jp
in
sbb
in
stos
add
inc
test
cltd
and
and
push
mov
cmp
xchg
dec
in
mov
in
icebp
ficomps
leave
movsl
push
lret
out
jl
or
cltd
xor
and
mov
sub
ja
push
fistpl
sarb
mov
jbe
pop
orb
mov
out
into
ficoms
push
sahf
test
adc
xchg
jns
test
sbb
ds
aaa
stc
gs
push
cwtl
xor
lcall
mov
sub
add
push
es
mov
push
inc
fbstp
bswap
sar
jecxz
bound
mov
sbb
and
ja
cmc
cmc
mov
push
cmc
out
fbstp
in
and
cmp
mov
out
ljmp
ret
test
adc
lods
push
and
jno
lods
mov
xchg
in
push
pop
lret
push
cmp
data16
and
pop
in
fidivrl
and
fsub
mov
insl
mov
jg
push
rol
xor
daa
call
sub
insl
cli
jp
fwait
aaa
addl
mov
hlt
subl
pop
dec
push
subb
dec
mov
sub
mul
pop
push
loope
or
repnz
jb
mov
xor
movsb
pop
mov
lods
aam
and
mov
in
iret
inc
xchg
xor
ss
loope
mov
ret
dec
sbb
mov
add
ja
test
rcll
mov
adc
mov
enter
scas
mov
add
call
scas
cmp
and
cltd
lods
inc
pop
loop
idivb
dec
fwait
xchg
ficomps
rorl
jnp
adc
bound
mov
inc
das
enter
sub
sub
pushf
xchg
lcall
in
xlat
cltd
pop
xor
or
jp
push
testb
inc
sbb
pop
and
ljmp
add
cltd
btsl
adc
ja
addb
icebp
loopne
adc
sub
and
xchg
test
fldt
xor
seto
or
popf
mov
sti
xor
sarl
in
enterw
jg
xchg
inc
aaa
xor
sub
jo
mulb
xor
push
mov
iret
cmp
pop
pop
mov
rol
push
jno
lret
push
mov
jbe
sbb
sub
lcall
or
mov
and
push
aam
outsl
cli
add
rclb
and
mov
mov
dec
jb
and
adcb
int
lds
imul
xchg
popf
xor
jno
cmc
mov
push
fldcw
push
dec
xchg
mov
xchg
shrl
mov
mov
pop
sub
test
enter
aaa
add
out
ret
dec
adc
xor
fldl
or
mov
jbe
shrb
int
pusha
jnp
jae
dec
adc
push
sub
mov
jmp
hlt
lock
popa
cld
icebp
js
mov
pushf
cmp
push
leave
ljmp
std
testl
lods
clc
sbb
into
xlat
jmp
dec
xlat
fsubrl
fs
test
jg
cmp
pop
sub
stos
mov
xchg
fs
xor
xchg
insl
pop
lock
jnp
and
mov
sbb
dec
gs
sub
sbb
jo
and
ja
xchg
jge
add
fs
mov
mov
arpl
inc
sub
movsb
outsb
mov
jno
outsl
icebp
iret
jo
pusha
jns
out
pop
or
inc
mov
pop
xor
fisubrl
inc
xchg
test
fs
loop
jecxz
lret
stos
fsub
jbe
and
gs
xor
sub
add
jo
pop
js
call
addr16
bound
inc
pop
or
call
cmpsl
push
inc
nop
sbb
std
js
lds
inc
fadds
xor
push
cs
pop
dec
inc
movsl
add
or
sbb
inc
lcall
int3
pop
scas
jb
push
in
pop
pop
das
pusha
jns
ja
aaa
lret
push
pop
xchg
test
push
xchg
aas
dec
stos
mov
sbb
pushl
fs
lds
xor
jp
ds
sbb
call
insb
call
xchg
std
push
or
xor
cld
aas
and
outsb
xchg
mov
decb
sbb
hlt
and
movsb
jg
bound
loop
jnp
jae
lret
pusha
sahf
jns
stos
nop
dec
icebp
mov
mov
arpl
and
jecxz
add
mov
and
jmp
imull
inc
jae
jmp
movsl
out
or
xor
aam
aaa
push
and
xor
adc
xor
outsl
jae
add
sub
in
push
in
mov
ds
mov
aam
inc
call
icebp
inc
or
mov
adc
jne
mov
pusha
test
jb
adc
repnz
rcll
and
jno
scas
sub
aas
or
clc
jge
fildll
stos
fsubs
outsl
and
jmp
out
mov
mov
loop
mov
lock
decl
cmp
insb
pop
in
xchg
adc
aam
mov
mov
outsl
jmp
inc
inc
sub
ljmp
out
sti
lock
test
mov
addr16
xchg
inc
mov
mov
mov
scas
adc
loopne
gs
xchg
xor
repnz
mov
adcb
adc
ret
imul
add
pop
in
jns
inc
push
mov
test
jecxz
movsb
adc
fcoml
stos
popf
sbb
ja
insl
out
sahf
xor
ret
movsl
or
xchg
fsts
lahf
fidivl
in
jecxz
xchg
xchg
inc
push
mov
adc
jnp
add
scas
dec
enter
imul
dec
mov
push
jmp
out
push
add
jbe
cltd
sbb
and
dec
call
and
jp
paddusb
dec
test
push
test
adc
out
inc
cmp
loopne
xor
arpl
pop
cmp
push
add
test
leave
mov
call
std
jnp
xor
dec
fsub
bound
mov
mov
mov
or
in
inc
call
or
push
and
dec
fs
orl
out
lret
fnstsw
and
loope
mov
je
fldenv
popa
mov
popa
jmp
mov
js
nop
inc
test
push
or
pop
push
pop
push
inc
mov
sbb
iret
mov
mov
jb
pushf
stos
pop
xor
cmpsb
dec
fsubrl
xchg
jl
lahf
scas
xchg
jo
cmp
push
repnz
xorl
pop
shll
das
lret
iret
sub
roll
rcrb
or
mov
gs
scas
inc
cld
cld
dec
cs
mov
cmp
movsb
mov
jg
push
in
test
lods
popf
jp
cmp
test
mov
mov
iret
jns
sbb
or
ljmp
adc
cmpl
shr
pop
jle
push
cmp
or
int
nop
pop
mov
sbb
jne
jnp
sbb
imul
jmp
into
pusha
cs
out
insb
add
clc
inc
xchg
fisttpll
loop
mov
inc
xor
xchg
mov
jae
sub
mov
inc
ljmp
xchg
clc
mov
std
cmpsl
pop
push
or
sub
dec
push
inc
movsl
xchg
icebp
add
push
jbe
add
xchg
fwait
stos
xor
testl
lds
enter
xchg
ds
push
push
jecxz
into
cmp
cli
cld
out
pop
mov
pop
cmp
xchg
punpckldq
ret
sbb
divb
fs
ja
bound
loope
pop
test
rcrb
jge
addr16
stc
mov
push
mov
lret
js
cmp
ja
add
or
lock
fsub
arpl
int
shlb
mov
gs
faddl
add
adc
rorl
dec
cld
sub
or
sbb
add
in
test
push
in
lods
xchg
outsl
fs
cld
lock
bswap
sahf
cmp
inc
loopne
or
cltd
hlt
fbld
ficompl
shrb
adc
jmp
xor
mov
pop
cmp
outsl
imul
dec
push
testb
jp
loop
mov
sub
adc
jge
pop
loop
sbb
cli
arpl
and
fstps
mov
out
mov
dec
mov
push
decb
sbb
or
sbb
cmc
jp
sbb
outsl
test
xor
adc
sub
sub
push
and
xor
stc
js
imul
outsl
clc
les
push
inc
mov
into
fdivl
repz
mov
jl
hlt
push
scas
jecxz
and
mov
xchg
push
cltd
pushf
adc
jecxz
xor
sbb
iret
xchg
pop
push
mov
mov
or
std
push
xor
in
fwait
add
jmp
mov
fldt
iret
cld
sahf
test
leave
enter
pop
sti
mov
pushf
loop
lods
push
jecxz
lds
sbb
sub
and
fdivrl
cmpsb
fadds
cmp
stc
add
cmp
mov
mov
mov
dec
fsubrs
xchg
and
dec
fstpl
rcrb
mov
stos
and
lds
jae
testb
lret
mov
push
js
int
repnz
cmpsl
xor
jge
sub
hlt
loope
adc
int
inc
incb
rcll
xchg
jbe
mov
imul
cmpsl
push
mov
jns
add
mov
push
add
xchg
jne
aad
daa
ds
jne
pop
test
adc
inc
sub
xchg
jb
push
and
mov
pop
test
or
mov
jne
cld
inc
jnp
and
sbb
jo
dec
cmpsb
mov
repz
mov
inc
push
xor
orb
jecxz
inc
aaa
and
movsl
jne
imul
sub
gs
jns
lret
enter
pop
dec
dec
sub
xlat
out
mov
mov
mov
lds
xchg
mov
pop
sub
mov
cli
inc
sub
push
adc
mov
popf
mov
jle
adc
pusha
rolb
mov
aam
aam
mov
ss
bound
add
scas
cmp
push
cmp
test
push
in
sahf
sbb
jl
inc
xchg
add
int
addr16
loopne
in
scas
rclb
js
jecxz
mov
outsb
mov
inc
repnz
leave
pop
addr16
imul
jmp
jge
jge
daa
pusha
sbb
jne
xor
sub
fnstcw
mov
roll
dec
lcall
mov
rorb
dec
and
out
push
push
out
sub
jmp
jo
cld
pop
inc
xchg
mov
sbb
cmp
jle
cmpsb
fdivrs
lock
lfs
loope
cli
push
mov
sub
cmp
movsb
jo
or
popa
imul
sub
pop
outsb
icebp
xorb
adc
divb
or
pop
aaa
sbb
sbb
out
aad
jb
pusha
lods
cmp
ret
add
in
adc
dec
dec
bound
enter
ret
daa
pop
dec
lea
fidivrl
jge
adc
rorl
cmp
lods
cmc
mov
fcomi
and
mov
inc
movsl
dec
sub
xor
jle
xor
jne
lds
in
popf
cs
mov
stos
test
movsl
mov
fcoms
xor
popa
insb
das
xor
ja
jmp
test
cwtl
xor
movsl
dec
cmp
cs
fcmovnbe
mov
mov
sub
std
dec
xchg
pusha
push
xor
add
repnz
sbb
mov
stos
and
dec
cld
or
pop
sbb
das
jmp
fucomip
test
add
or
pop
loopne
dec
mov
adc
sub
xor
cld
sub
fisttpl
loop
loope
jae
je
pop
xor
jnp
inc
jle
pop
outsb
enter
mov
xlat
cmpsb
movsl
sbb
sahf
std
movsl
add
ja
daa
fidivl
pop
push
lds
cmp
loope
pop
jns
mov
mov
enter
inc
fwait
sbbb
xor
add
xchg
pop
popa
and
inc
imul
mov
ds
lcall
int
loope
fisttps
mov
shrl
mov
mov
mov
cmpsb
scas
dec
inc
inc
mov
add
dec
dec
es
push
mov
scas
fisttpll
xchg
fistl
mov
fsub
fsubl
cmp
push
mov
imul
mov
pushf
cmp
pop
in
inc
mov
xor
or
roll
mov
push
std
lret
inc
nop
push
mov
lds
je
test
les
addr16
mov
add
das
xchg
addb
jo
stos
pop
js
xorb
lcall
sub
fs
out
inc
rolb
xor
ror
mov
orb
pop
inc
dec
xor
and
adc
add
lock
out
rcr
ror
mov
orb
pop
inc
dec
xor
and
adc
add
lock
cmpsl
shlb
mov
jo
pusha
outsl
push
pop
inc
dec
xor
and
adc
add
lock
out
rcr
ror
mov
orb
pop
inc
cmp
test
out
loopne
lock
push
fildl
jmp
sti
bound
xor
arpl
adc
leave
imul
loop
xchg
sbb
mov
mov
jmp
sti
bound
xor
ret
jne
or
mov
repz
orl
mov
loope
xchg
add
ja
insb
mov
and
sti
push
jl
int
mov
or
dec
sbb
dec
push
and
xchg
push
inc
popf
mov
int
sub
test
sub
out
xor
daa
sbb
sub
sti
and
jnp
sbb
movsb
rclb
negb
popa
out
sub
gs
inc
and
bound
xor
scas
rclb
pop
or
sbb
mov
test
data16
sbb
out
dec
fimuls
popf
xchg
push
mov
repz
sbb
and
add
je
cltd
icebp
pop
inc
mov
mov
xchg
push
and
mov
dec
sub
enter
jmp
sti
bound
mov
push
lock
ficoms
scas
add
cmp
mov
push
clc
mov
outsl
out
mov
mov
push
pop
orl
push
lret
movsb
adc
add
add
push
stos
pop
call
mov
mov
jo
pop
xlat
pop
shrl
push
xchg
push
ret
pop
fwait
add
rcrb
imul
loop
xchg
sbb
lret
push
fildl
jb
bound
xor
ret
jnp
or
cmp
push
js
or
popf
sbb
lock
cmp
push
sti
fwait
add
imull
jl,pn
stos
pop
push
sbb
sbb
stos
and
cmp
xor
sarl
sysenter
test
pop
jmp
into
popf
hlt
rcll
jp
mov
sub
test
adc
cmp
and
sbb
add
fwait
insl
subb
shlb
jp
out
jo
pusha
sbb
arpl
cmp
sbbl
cmp
sub
push
mov
mov
mov
inc
jecxz
jbe
mov
stc
push
mov
xchg
ret
inc
pop
adc
jbe
mov
adc
stos
mull
xorl
aaa
dec
insb
int
adc
js
sub
lea
out
dec
jp
pushf
pop
push
jno
push
fnsave
push
sub
dec
jne
xchg
mov
fildll
fbstp
mov
mov
inc
cmp
faddp
arpl
inc
xchg
sub
mov
imul
les
mov
push
lds
fldt
xlat
int
dec
adc
gs
jecxz
push
add
movsb
sbb
ja
dec
adc
sub
cmpsb
mov
js
adc
mov
test
mov
xor
mov
out
push
add
pusha
jl
mov
cmp
push
lock
adc
jo
repnz
or
mov
jno
xchg
sub
mov
pop
in
mov
xchg
mov
lods
pop
pop
roll
pop
sub
mov
scas
ret
inc
loope
scas
clc
pop
cmc
into
add
dec
fcoms
add
jb
shll
xchg
lret
mov
mov
push
xchg
mov
lcall
mov
js
add
cmp
testl
jp
mov
pop
xchg
insl
aas
mov
jmp
outsb
sbb
inc
addr16
daa
jle
mov
mov
add
or
out
popa
cmp
fnstsw
sbb
cmp
sbb
in
test
sbb
sbb
outsb
push
mov
ja
xchg
rorb
in
lods
pop
jp
xchg
stos
xor
dec
mov
paddb
push
xchg
js
movsb
aas
pop
inc
cmc
stos
imul
mov
adc
pop
cltd
inc
scas
inc
mov
das
shll
pop
imul
das
sub
adc
cmp
inc
mov
sub
cmp
ss
subl
and
push
rclb
mov
mov
lret
cmp
mov
pop
fs
mov
cwtl
push
out
adc
jmp
jmp
sbb
push
mov
and
cmc
push
mov
sti
sbb
lret
mov
push
data16
adc
jg
push
inc
pop
xchg
nop
daa
outsl
sub
out
imulb
test
rcrb
pop
push
jle
imul
cltd
iret
sarl
loopne
inc
pop
cmpsl
cmc
jge
jo
cmp
cli
scas
fwait
out
addl
sbb
movb
xchg
jno
test
xorl
ja
jmp
lret
pop
mov
shll
pushf
cmp
dec
enter
fists
xor
mov
mov
cmpsl
insb
je
dec
popa
cmp
jge
pop
mov
xlat
les
cltd
mov
mov
pop
into
std
mov
sbb
hlt
aad
mov
jl
gs
adc
mov
and
cli
popa
jp
mov
out
in
cltd
loope
mov
aam
push
lcall
xchg
in
or
dec
or
loope
jbe
sub
cmp
sub
xor
popf
sti
pop
imul
pop
imul
out
inc
jbe
mov
xchg
test
cmp
and
or
pop
jne
int3
clc
mov
scas
out
mov
mov
and
cmpsb
cld
and
cmc
das
aaa
push
enter
fcmovnu
mov
and
cmp
aad
adc
mov
dec
pop
das
or
out
xorb
push
std
and
lret
pop
packuswb
jecxz
rol
mov
insl
xor
cmpsl
cli
pushf
ja
cs
out
loope
movl
push
xor
popa
pop
insl
xor
sub
int
jnp
mov
dec
nop
cmp
and
sbb
pop
ds
cmp
jl
adc
sub
cmc
inc
mov
jo
xchg
xorl
pop
mov
sub
shrl
mov
mov
jcxz
or
sbb
ljmp
jb
out
and
jmp
test
arpl
cli
cltd
xor
out
lds
iret
mov
sub
dec
addb
rclb
sbb
adc
cmpsl
mov
add
in
and
jbe
xor
pusha
pop
inc
and
cmp
mov
dec
lret
insb
movsl
mov
daa
lea
aaa
xchg
mov
adc
push
mov
iret
jl
rcll
push
mov
adc
xor
and
shlb
cld
mov
cli
xor
loop
fistl
test
add
jle
mov
cwtl
adc
xor
push
pusha
lret
sbb
lods
mov
sub
inc
inc
sbb
in
push
stos
lcall
imul
les
sbb
jne
mov
repnz
data16
push
pop
sbb
inc
jno
das
mov
adc
dec
cwtl
fs
sbb
je
icebp
repnz
cmp
out
push
aas
ljmp
loope
cmp
aaa
lods
push
js
pop
fwait
std
mov
adc
add
push
lcall
test
cmpsb
push
dec
test
cmp
cli
push
iret
mov
or
rclb
add
scas
jae
mov
jl
ds
popa
test
fldl
shll
ljmp
cmp
outsb
adc
xlat
push
sub
fsubl
xchg
push
popl
inc
xchg
ficomps
insb
sub
mov
xchg
pushf
push
aas
mov
sbb
add
mov
out
mov
loopne
in
adc
dec
inc
loop,pn
jns
les
mov
mov
ds
cmpsb
adc
and
shlb
xchg
mov
jo
adc
mov
cld
xor
cmp
jg
stc
sti
push
or
and
es
clc
fstpt
cmpsb
aam
push
pop
push
push
shl
xchg
xor
mov
jge
pop
insl
cld
push
sub
push
adc
aam
arpl
dec
mov
dec
inc
into
ret
inc
mov
fdivrs
add
insb
cmovge
out
jmp
xor
add
subl
cmp
popf
pop
bound
divl
pusha
int3
shrb
mov
insb
mov
fstl
cmp
es
push
stos
cmp
lret
outsl
jp
repnz
mov
add
repz
scas
jo
push
dec
sub
xchg
jmp
jb
sahf
adc
push
repz
jb
xchg
in
scas
push
fstpl
in
std
push
jne
outsl
cmpsb
mov
cmp
push
adc
mov
add
jb
sub
sub
cmp
sbb
and
jnp
mov
test
push
ds
insb
push
hlt
xchg
popf
sbb
clc
or
jp
xchg
cli
jmp
push
adc
cmp
inc
mov
jno
negl
or
mov
mov
inc
ret
xchg
mov
and
inc
xchg
mov
push
int3
aam
inc
paddusb
nop
jnp
xlat
mov
lret
xchg
stc
jmp
arpl
inc
push
xchg
adc
inc
push
arpl
or
addl
dec
ret
into
testl
mov
push
or
jecxz
dec
inc
push
not
mov
outsl
or
cmp
mov
add
pop
or
inc
push
out
int3
mov
pop
testb
outsl
push
adc
or
cmp
aaa
sbb
in
in
dec
dec
movb
mov
cmc
fisubl
mov
xchg
mov
sbb
add
aad
sbb
dec
mov
jne
mov
leave
dec
cwtl
sbb
push
sarl
pop
xchg
adc
sub
scas
fdivrs
inc
adc
adc
outsb
push
lds
adc
aas
jb
popa
movsl
sub
test
gs
pop
mov
in
cs
ss
mov
test
mov
mov
js
clc
pop
sub
fs
mov
mov
xor
sahf
inc
in
push
lcall
push
dec
enter
fstpl
or
adc
lret
ret
out
mov
mov
pop
in
movb
pop
mov
imul
ret
sbb
jp
lea
loopne
negb
xchg
mov
pop
lods
jl
push
mov
or
lds
adcb
lods
movsl
fdivrl
cmc
cmp
pusha
jo
xor
push
or
in
and
mov
fcom
les
sub
push
mov
sbb
jae
jge
fs
sub
lock
int3
jbe
mov
xor
inc
jnp
add
jne
insb
arpl
iret
sbb
jmp
push
cmp
pop
popa
dec
aaa
push
loope
outsb
aam
fdivl
jp
mov
sub
hlt
sti
add
push
jne
fsubrs
fistps
lret
je
push
jo
imulb
jae
or
pushf
push
data16
adc
rol
pop
frstor
in
cli
push
xchg
cs
xchg
addr16
dec
repz
rolb
sub
or
movl
sahf
outsb
push
sub
aaa
push
stos
or
ljmp
jl
dec
sub
aas
ret
mov
testl
xorl
push
mov
sbb
or
fisttpll
mov
loop
test
lds
movsl
mov
mov
dec
add
push
or
sub
xor
pop
push
in
popa
outsl
cmc
shr
xchg
cmp
pop
xor
push
xchg
mov
inc
mov
repnz
aam
jbe
cmpsl
inc
gs
jae
sbb
cmp
mov
mov
adc
mov
mov
jp
and
or
push
push
leave
jp
jae
push
ret
xchg
out
ret
push
push
xchg
popa
ljmp
cmp
mov
xor
js
negl
jle
cmpb
push
fiadds
dec
inc
cmp
fistpl
jp
orb
push
imull
in
or
loopne
inc
mov
jo
jo
out
les
out
inc
pop
mov
sbb
sahf
mov
rcrl
sbb
fstl
cmp
and
fwait
std
aas
sub
or
mov
xchg
inc
int
pop
push
jbe
jg
into
sbb
repnz
push
fs
adc
popw
mov
jp
and
push
add
adc
testb
inc
pop
cmp
dec
xchg
adc
sub
cmp
cmp
sbb
jecxz
lock
stos
jne
adc
icebp
std
dec
cltd
mov
jne
loop
loop
and
sarl
xchg
into
mov
and
and
sbb
cmp
fwait
push
jns
xorb
add
sahf
add
xor
xchg
std
push
dec
inc
lcall
add
jle
repnz
ret
scas
and
imul
inc
in
icebp
test
roll
minps
stos
jle
mov
add
call
mov
jp
inc
in
pop
jp
mov
push
mov
icebp
ds
xor
xor
add
mov
in
xchg
or
mov
fildl
int
and
add
push
or
call
dec
in
ret
lds
push
das
lds
cmpl
iret
notb
jle
jge
jo
mov
xchg
sub
ds
adc
xor
sub
sbb
dec
loopne
cs
daa
nop
movsl
xchg
xlat
xor
xchg
jp
mov
lret
outsb
fsubs
push
adc
scas
dec
jne
sub
mov
or
arpl
jmp
mov
fabs
mov
pop
xchg
inc
xor
popf
mov
enter
movsb
ss
add
mov
push
cmp
ds
adc
cmp
inc
inc
insl
adc
loope
test
xor
fcoml
cwtl
inc
jnp
aam
push
push
lods
xchg
and
mov
data16
mov
jmp
mov
and
testb
lods
sub
subl
jae
dec
lea
jbe
cs
lods
sbb
in
icebp
mov
cld
jecxz
mov
inc
pop
dec
xorl
xchg
movsl
adc
push
dec
decl
ret
pop
jle
jg
push
sbb
push
jnp
dec
jb
mov
pop
sbb
jb
mov
movsb
lock
cwtl
ror
jle
add
stc
push
aas
xchg
cs
sahf
mov
outsb
sahf
and
int
sub
add
add
imul
call
out
repnz
lods
dec
in
ja
test
add
sub
addr16
xor
adc
jne
addr16
negl
inc
scas
dec
aam
xchg
stos
bound
jecxz
cmp
dec
push
mov
test
stos
mov
gs
mov
das
xor
inc
invd
add
repz
mov
gs
xorl
push
push
repnz
or
aam
jne
pop
mov
test
push
xchg
fdivl
mov
je
dec
ja
rcll
jbe
jae
jnp
aaa
insb
add
mov
inc
mov
adc
lcall
pop
cmp
sub
hlt
repz
add
add
pop
or
sbb
addl
adc
mov
and
mov
test
mov
icebp
stos
pop
push
and
ret
icebp
jo
pop
jne
jo
dec
test
fbld
in
jl
js
inc
test
sub
and
fsub
cmpl
repz
mov
or
push
pop
mov
dec
xorb
sub
mov
mov
mov
push
xor
fwait
and
push
ret
or
cmpsl
dec
jns
int3
fwait
sbb
js
jmp
shr
dec
pop
dec
mov
adc
inc
inc
repnz
jb
cli
lahf
push
daa
push
fstl
add
jl
push
orl
mov
jb
push
sbb
xchg
and
inc
int
mov
fstps
movsb
adc
sub
loope
dec
dec
out
jno
outsb
aaa
scas
aad
adc
adc
adc
sti
jge
aad
aas
scas
mov
out
cltd
hlt
add
cmc
cmc
shlb
enter
icebp
inc
and
sbb
pop
jbe
fs
mov
push
daa
adc
hlt
pop
push
ret
jmp
pushf
jb
sbb
test
mov
push
cltd
mov
mov
sbb
pop
ret
imulb
dec
jnp
nop
clc
push
adc
mov
inc
bound
test
jmp
inc
repz
and
jb
rcll
loopne
mov
push
mov
lea
jns
jb
loope
cmc
imul
mov
add
inc
icebp
push
jne
int
xchg
adcl
dec
std
fs
push
sub
pop
mov
pusha
fmull
outsb
jle
imul
sarb
imul
jno
cli
mov
mov
test
test
ret
ljmp
ljmp
pop
mov
jge
mov
pushf
jg
jecxz
jno
push
and
scas
jae
cs
scas
sub
pop
mov
xor
ds
jns
mov
movsb
jmp
addr16
insb
cwtl
and
jno
sbb
mov
addl
push
or
leave
fsts
cwtl
fsubs
pop
hlt
iret
mov
cli
test
xor
dec
inc
sub
sbb
xor
xor
push
mov
xor
push
outsl
mov
shll
inc
inc
icebp
and
dec
ss
into
or
dec
aad
loope
sar
push
clc
movd
push
lahf
test
pop
lret
mov
mov
jle
repnz
orl
out
loop
push
popf
rolb
inc
xor
ja
or
jae
xchg
cmpsb
ljmp
mov
push
outsb
inc
pop
jg
inc
pop
clc
adc
jbe
icebp
roll
xorb
dec
mov
sbbl
xchg
in
fadd
mov
stos
dec
outsb
aad
subl
dec
jbe
sbb
cmpsb
inc
mov
sarb
xchg
cmp
mov
outsl
adcl
pop
js
fstps
jl
outsl
daa
add
repz
xor
push
xchg
cwtl
and
mov
shll
dec
pop
cmp
push
pop
push
es
pop
sbb
jecxz
lea
adc
je
push
dec
adc
aas
push
jo
roll
inc
sub
mov
dec
mov
and
push
jmp
ficoms
imull
inc
movl
and
adc
insb
jbe
adc
push
add
sub
or
sti
into
push
sbb
out
imul
inc
push
sti
test
mov
repnz
and
sub
loop
out
xlat
imul
jbe
inc
mov
ds
lods
ds
cwtl
lods
or
xor
fdivl
outsl
mov
jb
pushf
mov
ss
dec
jnp
jecxz
lds
mov
push
rcrl
imul
pop
daa
test
push
mov
pop
push
adc
stos
inc
sub
push
adc
cld
loope
insb
ljmp
cmp
loop
cmp
jns
add
dec
adc
stos
push
lods
aam
cmc
xor
mov
cwtl
movsb
les
notb
cld
out
xchg
jb
inc
mov
pop
jbe
inc
push
outsl
data16
repz
xor
mov
jmp
ret
jns
and
fidivrs
and
mov
lds
or
add
shl
add
rcrb
dec
or
lret
xlat
sahf
repz
adc
jo
test
out
add
mov
pop
pop
rolb
sbb
es
insl
popl
push
insb
into
incl
in
xchg
sahf
and
cmp
scas
or
pop
cld
and
dec
or
pop
pusha
das
xor
outsb
out
cs
popa
ficoms
inc
cltd
cli
repz
int3
xchg
addr16
int
sbb
mov
push
pop
jne
sub
mov
stos
sbb
dec
jle
outsb
sub
cmpsl
xchg
and
cmpsl
out
daa
mov
jmp
sarl
sahf
mov
pusha
mov
test
pop
divb
fsubrs
leave
mov
adc
mov
xlat
push
mov
jno
daa
add
pop
bound
jbe
loope
clc
shll
sub
xchg
pushl
inc
xchg
sbbl
inc
js
push
lods
in
jbe
adc
es
push
insb
add
jae
jmp
fs
call
pop
cmp
push
lcall
repz
jg
sbb
lea
lea
in
pop
mov
push
sbb
addl
fwait
cmc
jns
pop
outsl
idivl
push
xor
test
repnz
push
pop
adc
sahf
ret
inc
and
push
or
and
int
lods
jmp
cmpsl
cmp
nop
into
add
dec
arpl
rolb
lock
jmp
push
jp
adc
jne
int3
movl
in
pop
pop
insl
sub
ljmp
inc
xlat
pop
lret
pop
loopne
nop
inc
dec
sub
jg
mov
push
inc
xchg
dec
xorb
dec
shrb
adc
adc
inc
xlat
xchg
imul
jp
ds
and
icebp
das
mov
hlt
jbe
in
arpl
mov
inc
cmp
jp
and
jb
lret
out
cwtl
bound
popf
jo
push
jno
test
add
push
mov
ret
roll
sbb
jae
jl
fadd
pop
dec
mov
and
mov
mov
mov
dec
xor
cmpsl
jg
inc
pcmpeqb
out
lods
inc
pop
push
cmpsl
push
cld
int
mov
gs
pop
cmpb
lret
pop
add
sub
inc
inc
jl
or
push
shll
sbb
test
xchg
int3
sbb
mov
dec
js
data16
mov
mov
pop
cmp
jl
mov
mov
mov
arpl
in
rclb
sub
mov
popf
sti
mov
push
stc
leave
sbb
and
push
in
hlt
daa
mov
mov
or
inc
ret
imul
out
arpl
cmpsb
mov
std
int3
out
push
bound
addl
add
pushf
sub
ja
mov
jle
xchg
aaa
sbb
mov
inc
loope
sti
bound
xor
ret
jnp
or
cmp
jmp
sti
bound
xor
ret
jnp
or
cmp
jmp
sti
mov
fwait
imul
bnd
or
cmp
mov
cmpsb
ljmp
add
mov
loop
sub
jnp
jl
xchg
cli
aam
fidivl
xchg
cmpsl
test
xor
add
jb
bound
push
inc
push
mov
mov
xchg
repnz
not
mov
xor
and
adc
add
jb
arpl
inc
inc
push
mov
mov
xchg
repnz
not
mov
xor
add
jb
adc
adc
sub
ljmp
std
pop
mov
cmp
dec
sar
movsl
or
sbb
pop
out
jmp
xchg
pop
cmpsb
pop
cmpsb
insl
in
jg
repnz
jnp
dec
sub
scas
leave
in
stc
std
add
adc
dec
mov
jbe
push
lret
push
cmpsl
stos
xor
sbb
aaa
aaa
add
xchg
jae
jmp
lcall
test
lcall
ss
leave
repz
and
xchg
stos
xor
push
loope
daa
dec
pop
jns
fwait
or
xchg
dec
xor
sub
lahf
stc
mov
and
inc
mov
lcall
test
jge
fldcw
rcrb
es
jae
jmp
xchg
inc
inc
test
xchg
xchg
not
mov
xor
and
adc
add
jb
bound
inc
inc
adc
cmpsb
ror
mov
cmpb
inc
das
popa
push
inc
data16
adc
xor
xor
xor
lret
icebp
into
ret
cmc
xchg
movsl
test
clc
inc
inc
inc
inc
outsl
popa
add
pop
loopne
and
add
out
in
jecxz
out
mov
loop
rol
ret
and
adc
add
jb
bound
inc
inc
push
mov
mov
xchg
repnz
not
mov
xor
and
adc
add
jb
bound
inc
inc
push
mov
ret
sahf
psubsw
push
and
adc
xchg
pop
xor
je
rcrl
sbb
jnp
pop
frstor
inc
dec
out
pop
sarb
and
aas
out
test
dec
mov
les
ja
inc
lock
push
adc
xlat
inc
add
daa
push
lret
js
das
add
mov
pop
xor
or
cmp
pop
add
pop
mov
cltd
lds
jne
ljmp
sti
jp
pminub
add
mov
sbb
and
bound
out
lds
inc
shlb
lods
jno
jmp
push
sti
xchg
and
add
dec
in
mov
xchg
sbb
jmp
fs
pop
jo
mov
adc
or
and
jecxz
sub
not
inc
ss
clc
fisttps
dec
leave
loop
add
sbb
xor
lcall
mov
sbb
mov
inc
pop
sbb
push
dec
into
cld
scas
lahf
dec
aaa
inc
insl
loopne
mov
jmp
sbb
pop
ds
ljmp
js
lahf
iret
outsb
jbe
hlt
add
mov
test
and
leave
sti
lods
mov
cmc
je
test
inc
hlt
fcompl
sub
or
inc
das
sub
rcrl
sub
icebp
jbe
mov
in
push
jg
and
lock
mov
xor
clc
jmp
das
mov
gs
imul
adc
xchg
or
cmpsb
dec
into
ficoml
mov
lahf
cld
hlt
lahf
loopne
iret
hlt
int3
outsl
mov
cs
mov
mov
and
jecxz
pmaxub
clc
cmp
cwtl
or
cltd
movsb
lods
inc
out
cld
mov
rolb
imul
cmp
inc
and
popa
xchg
lods
fsubp
leave
mov
jb
inc
xchg
enter
push
das
mov
sbb
pop
aas
cli
inc
inc
gs
mov
punpckhwd
stos
adc
pop
idivb
aam
and
repz
aas
push
js
loop
jmp
mov
cs
mov
xchg
popl
aam
shll
idivl
out
jg
aam
addb
dec
and
lret
jp
pop
mov
adcl
sbb
popf
and
sub
js
mov
sti
push
cld
pop
push
lock
sbb
mov
aam
cmp
push
inc
push
imulb
push
mov
sbb
mov
push
sbb
add
inc
inc
out
mov
roll
xor
mov
cltd
xchg
cwtl
xor
pop
jle
out
fwait
sar
xor
movl
inc
mov
aad
addl
cs
adc
mov
and
add
aam
lret
clc
sub
sbb
test
nop
in
add
vcmppd
pop
in
int3
jmp
jb
mov
cld
cmc
roll
sbbb
lcall
and
gs
xlat
fnstsw
ficoml
push
sbb
rep
icebp
daa
shrb
pop
imul
rcrb
imul
dec
push
es
xor
cwtl
test
stos
les
leave
pop
ret
repz
adc
xchg
sub
jge
push
dec
xor
push
mov
mov
mov
pop
mov
daa
mov
adc
aaa
push
and
cmp
ret
jns
mov
imul
repz
mov
int3
jo
es
arpl
lahf
mov
jno
mov
cmp
into
dec
push
dec
pop
xor
mov
std
loop
cmp
adc
inc
mov
add
test
mov
cmc
ja
fsubl
in
pushf
mov
cmp
in
push
aaa
pop
je
mov
jmp
loope
cmpsb
out
mov
adc
insl
mov
imul
cmp
outsl
lock
sub
jle
popa
xchg
cmp
or
mov
fwait
push
out
ds
gs
cld
cmp
imul
repz
filds
mov
push
xor
daa
sub
jecxz
xchg
jg
iret
cld
mov
push
sub
cwtl
lret
es
js
or
popf
xor
pusha
rclb
jmp
mov
mov
sbb
mov
sub
mov
dec
test
ss
mov
cmp
out
mov
sarb
mov
inc
add
sub
jp
xchg
stos
addr16
and
mov
mov
inc
mov
xchg
aad
lret
neg
repnz
mov
mov
jb
and
inc
xor
aad
jle
in
mov
jecxz
outsb
adc
insl
test
inc
pop
add
add
sub
shrl
movsb
addr16
or
repnz
popa
dec
js
push
or
mov
xchg
mov
rcll
xchg
std
cmp
add
push
scas
mov
adc
fwait
add
xchg
sbb
dec
mov
push
jg
sbb
lret
test
les
ja
icebp
pop
xor
lret
popa
lock
dec
movsl
sub
or
sub
mulb
jp
pushf
dec
push
pop
scas
int
jg
test
mov
xchg
jle
sahf
ficompl
in
fsubrp
mov
inc
imul
or
fwait
sahf
fxch
xchg
cmp
loopne
rcll
fdivl
xchg
pop
loop
mov
jo
xchg
inc
mov
sub
inc
mov
and
lods
xor
add
pusha
test
shll
mov
sbb
push
sub
out
jo
mov
xchg
scas
xchg
fwait
in
jnp
jmp
fisttps
dec
stc
jecxz
dec
xor
out
adc
mov
push
pop
mov
test
sti
sub
jmp
add
add
push
stos
add
jge
sbb
stos
pop
gs
push
outsb
es
or
mov
data16
pop
mov
push
xchg
pop
jno
daa
daa
aam
inc
mov
jle
sahf
mov
mov
push
xor
adc
ss
out
lret
out
loope
xchg
js
std
mov
pop
sbb
jno
sub
and
fwait
lcall
lock
mov
ret
mov
xlat
imul
push
es
inc
inc
inc
mov
mov
xor
aaa
push
mov
push
in
or
or
pop
lea
mov
repnz
aad
push
jge
std
out
js
sbb
fistps
repnz
inc
sbb
push
in
inc
xchg
xchg
jae
cmp
ret
dec
mov
lds
push
lock
and
push
push
pusha
add
pop
cmp
cmpsl
jmp
mov
mov
push
popf
inc
std
mov
push
ficomps
xorl
or
add
scas
and
xchg
jg
pop
shrl
test
mov
lods
xchg
lret
adc
sbb
pop
push
sbb
push
mov
in
cmpsb
js
dec
cltd
iret
popf
mov
add
movsb
mov
cmp
mov
enter
xor
jmp
inc
movsl
loopne
xchg
cwtl
cmp
outsl
notl
out
mov
pop
cmpsb
mov
js
xchg
xchg
pop
lcall
icebp
push
adc
pop
cmp
fdiv
push
sbb
adc
xor
or
cli
xor
or
ja
incl
sub
pop
outsb
push
and
sub
mov
jp
jg
jnp
sarl
jge
lea
and
popf
rolb
cmpsb
lret
mov
daa
mov
movsb
jge
adc
cmpsb
xor
jecxz
push
cli
and
in
shlb
pop
or
or
shrl
jl
push
xor
or
pop
leave
icebp
add
adc
or
cmp
in
loop
mov
mov
xor
pushf
mov
ja
fdivrp
mov
jnp
adc
mulb
jecxz
mov
out
jecxz
rcrb
outsb
cld
adcl
cld
push
xor
fsubrl
sbbl
subb
push
dec
lret
rolb
inc
xchg
pop
jo
div
jmp
aas
pop
hlt
andl
dec
push
daa
dec
aas
jmp
inc
inc
ljmp
aas
shll
pop
ret
lahf
jge
int
pop
out
out
push
fwait
mov
scas
cmp
or
dec
mov
daa
and
sahf
inc
lods
cs
loope
inc
in
and
sbb
inc
sti
fs
aas
and
sub
push
jg
push
cwtl
add
mov
subb
movsl
das
shlb
adc
ljmp
lret
je
or
loope
mov
fdivr
out
addr16
rcrb
lea
ret
sbbl
cs
loopne
test
cmp
mov
gs
xchg
jp
les
add
or
adc
out
fnstcw
scas
ret
dec
cwtl
or
sbb
xchg
mov
or
rorb
xor
mov
in
xlat
mov
mov
jge
outsb
inc
or
sbb
mov
loope
xor
mov
and
je
pop
clc
pop
dec
outsl
xor
xchg
add
loop
lret
cmc
pop
inc
dec
or
jecxz
inc
or
and
pop
out
loopne
xlat
jecxz
out
lock
sbb
dec
or
push
mov
dec
mov
adc
fidivs
sbb
push
stos
sub
mov
xlat
xor
aam
adcl
mov
cld
mov
rorl
cmovo
sahf
push
cli
insb
add
clc
nop
test
pusha
imul
repz
mov
test
push
xor
jle
pop
insl
aas
jge
xchg
sub
jge
or
mov
mov
inc
loope
dec
jp
es
int3
mov
jnp
lods
mov
cmp
shll
mov
xor
jnp
aas
adc
mov
test
ja
test
xor
daa
lahf
int
dec
xchg
mov
xor
mov
mov
repnz
mov
daa
push
fmulp
xchg
mov
add
sbb
popl
or
jg
and
iret
cmovle
sarl
outsl
adc
xor
or
adc
fstpt
in
xchg
call
stc
das
rorb
sbb
mov
or
stos
adc
sbb
push
dec
je
lcall
in
cmpl
or
xor
push
mov
in
push
push
pop
mov
mov
dec
add
iret
push
add
inc
push
add
aaa
inc
cltd
xor
or
add
icebp
sbb
add
fsubrs
and
rorb
dec
jbe
and
push
data16
cmpsl
pavgw
xchg
cmp
ret
jo
faddl
push
cmp
cmp
jnp
xchg
aaa
shlb
mov
shll
and
mov
sub
mov
pop
movsb
cli
sub
mov
ja
int
mov
cmpsl
jmp
sub
dec
test
fiadds
icebp
xor
idivl
outsl
mov
pop
int3
mulb
xor
mov
cmp
or
scas
imul
cmpsb
pop
hlt
and
test
push
rcrl
outsb
insb
jae
jns
xlat
ret
pop
pop
mov
sbb
push
call
sub
out
jne,pt
mov
inc
xchg
hlt
or
inc
adc
test
int3
add
jp
and
sbb
mov
jle
sahf
incb
sub
in
int3
add
add
outsl
iret
fwait
pop
loop
icebp
jg
clc
orl
movsl
ret
shll
dec
jl
aas
jmp
push
aam
lcall
rclb
sub
stc
inc
push
call
mov
sahf
fs
leave
es
cmp
aas
out
out
shrl
inc
enter
idivb
dec
les
in
sti
xchg
movsb
imul
push
and
xchg
aas
cs
jbe
mov
sub
in
ds
or
movsb
imul
daa
pop
mov
lea
in
sahf
adc
cld
movsb
xchg
dec
clc
mov
daa
rcl
in
jnp
xchg
rcrl
rcl
dec
sub
pop
inc
xchg
mov
mov
imul
xor
repnz
inc
je
pop
cmp
aas
in
jns
fwait
pop
mov
int3
repnz
imul
cmpsb
insb
push
test
xchg
cmc
imull
xchg
dec
inc
adc
inc
fistps
jne
sbb
or
in
daa
mov
and
xchg
jg
dec
int
pop
ss
loopne
loopne
arpl
dec
add
rorl
fnstenv
ret
pop
or
ds
fadds
xchg
mov
push
push
mov
or
mov
outsl
sbb
rcr
cmpsl
jmp
sub
ret
jge
les
popf
pop
daa
dec
imulb
mov
subb
fisttpll
adc
mov
mov
mov
stc
in
in
ljmp
clc
and
xor
loopne
push
notb
icebp
pop
mov
inc
cmp
ret
pop
aam
jl
push
inc
ret
mov
jp
aaa
imul
std
push
fbld
mov
mov
and
in
mov
sub
and
test
jnp
mov
imul
pop
movsl
dec
mov
int3
enter
or
arpl
hlt
push
cltd
dec
push
add
pushf
or
ror
dec
out
cmp
jp
push
jno
hlt
jno
mov
outsb
mov
xlat
loope
int
popf
jns
push
jnp
jecxz
xchg
xchg
pop
cmp
jae
mov
int3
mov
icebp
dec
aaa
inc
pushf
imul
fsubs
bound
roll
mov
aas
aam
fs
xor
hlt
test
outsb
dec
popf
mov
xor
test
pop
cs
lods
std
inc
or
fistl
xor
pop
out
push
nop
xor
or
and
mov
jns
shl
xor
fildll
cmp
mov
inc
popf
cld
outsl
imul
stos
loop
ss
outsl
lret
sbb
pushf
or
push
cmp
fimull
sbb
aam
add
push
loop
mov
out
jp
pop
jl
mov
add
notb
push
pusha
or
sub
shrl
cmpsl
ds
xchg
pop
insb
push
insl
repnz
cmp
mov
scas
mov
iret
stos
xchg
fstps
sub
mov
or
mov
push
sub
cmp
fwait
lock
call
push
loop
rcrl
mov
movsb
cmp
fistpl
push
mov
cli
xor
imul
mov
mov
das
jo
ljmp
pop
and
daa
movsl
sarb
ljmp
push
pushf
mov
mov
cli
pop
push
push
mov
jle
daa
push
jns
inc
lea
loop
mov
pusha
dec
pop
sahf
cmp
adc
mov
mov
fstl
dec
push
stc
xchg
push
mov
imul
or
out
adc
mov
jne
push
jge
ja
pop
pop
xchg
cmp
test
mulb
insb
scas
push
adc
add
mov
jo
mov
mov
cli
jmp
cmp
cmc
xchg
in
pop
shrl
cli
lahf
jmp
pop
dec
sbb
imul
push
shl
jmp
mov
mov
les
repz
push
jo
xor
scas
test
pop
test
fs
pop
test
popf
adc
lcall
cmpsb
adc
pop
mov
call
mov
stc
addl
sahf
fs
fidivrl
adc
xchg
pop
subl
adc
fabs
mov
iret
mov
mov
fimuls
pushf
aam
out
inc
push
test
movsb
shrl
sti
addb
das
idivl
ss
aas
repz
ret
xchg
fisttpll
out
loopne
mov
ljmp
loop
fnsave
jl
mov
lret
lds
in
lret
sub
xchg
nop
loope
movsb
xchg
and
jbe
mov
aad
dec
jg
jno
daa
lods
mov
aam
mov
xchg
inc
inc
mov
lret
adc
pop
out
bound
popa
fadds
fldt
mov
fcoms
lock
lahf
add
ret
pop
icebp
inc
jmp
inc
bound
pop
add
lods
rcl
repz
insb
jb,pn
les
push
push
add
lods
mov
lds
repnz
dec
mov
aam
in
xor
cmpsb
push
lahf
shrb
jl
iret
cmpsl
mov
sti
insb
lods
xor
cmp
push
jl
loope
fiaddl
ds
iret
xchg
xor
loop
jo
sbb
into
test
enter
dec
push
stc
in
and
pop
adc
movsl
rol
inc
repz
pushf
data16
or
aaa
addl
push
mov
lret
mov
dec
cmc
mov
add
mov
fildll
aad
adc
cltd
popf
adc
or
inc
fisttpl
mov
je
frstor
sub
mov
pop
push
mov
push
popa
cmpb
push
mov
out
fmuls
sbb
in
lret
jne
pop
pop
and
mov
jae
pop
repz
adc
ret
mov
mov
leave
sub
xlat
xor
mov
jns
loop
insb
loope
sbb
push
pop
movb
sub
lahf
mov
nop
push
aad
adc
or
mov
cmp
or
jp
pop
into
xor
and
loopne
incb
cmp
pop
pop
outsb
push
inc
ljmp
pop
xlat
mov
mov
jecxz
inc
mov
movsl
sti
aaa
gs
lahf
push
jno
push
jb
jge
sbbl
test
dec
xchg
xor
lods
fmull
mov
fldcw
push
xchg
aad
and
test
in
pop
aam
gs
outsb
and
push
mov
cmpsl
lock
mov
scas
pushl
push
orl
mov
andb
mov
loop
push
popf
pushf
xchg
dec
adc
mov
dec
mov
pop
mov
test
cmp
ret
push
repnz
arpl
or
hlt
outsb
ret
imul
ror
add
ljmp
jb
scas
jmp
mov
adcl
add
pop
sub
mov
lcall
pop
sbb
shlb
xorb
cmp
mov
mov
arpl
mov
mov
mov
jmp
xor
adc
rcl
movsb
jo
lea
or
and
inc
sahf
pop
or
int3
fwait
jecxz
and
mov
mov
scas
or
sbb
mov
push
add
clc
aad
cmp
sbb
ret
pop
mov
leave
lret
pusha
int
ret
pop
cld
ds
je
mov
int
xor
jge
bound
xchg
aam
cmp
movsb
adc
jb
ljmp
push
jne
ljmp
out
xchg
ljmp
jne
ljmp
in
or
mov
and
lods
mov
imul
aam
or
xlat
push
loop
shr
dec
sub
fs
xor
lds
sti
int3
in
mov
stos
mov
sbb
lcall
stc
addr16
mov
jle
lds
sti
lock
lods
test
in
aam
shrl
loope
je
fwait
movsl
sub
inc
mov
fs
insb
and
jmp
pop
cmp
imul
fldcw
popa
je
sbb
rcr
add
shr
mov
js
and
mov
xchg
sub
and
xchg
ja
mov
mov
enter
repnz
mov
mov
clc
inc
out
adc
and
jbe
loope
pop
jae
mov
pop
xchg
sub
push
pop
popa
mov
and
add
psllq
ja
into
pushw
movsb
pop
scas
js
aaa
cmp
subb
adc
mov
cmp
pop
mov
xchg
ja
inc
cli
pop
in
sbb
xor
cmp
bound
aam
std
scas
fdivrs
mov
popa
fists
lcall
arpl
and
xchg
mov
and
mov
dec
mov
xchg
sub
jbe
pop
and
adc
jnp
out
nop
jno
adc
sbbl
imul
or
fcompl
lret
xor
popa
arpl
push
fs
xlat
test
inc
stc
insb
push
mov
jns
jne
and
rorl
and
scas
and
xor
jmp
rorl
out
dec
scas
xor
retw
pop
mov
ss
fadds
and
jge
imul
cmpsb
cmp
mov
decl
push
xor
sarb
xor
leave
mov
or
iret
stos
in
push
test
xchg
sub
mov
mov
push
fwait
pop
rcrb
jecxz
fldl
mulb
aam
push
inc
mov
ss
xchg
or
loope
adc
jo
dec
mov
fistpll
cwtl
push
leave
sub
xor
or
add
and
lods
xchg
not
mov
xor
and
adc
add
jb
bound
inc
inc
push
mov
mov
xchg
repnz
not
mov
xor
and
adc
add
jb
bound
inc
inc
push
mov
mov
xchg
repnz
not
mov
xor
and
adc
add
jb
bound
inc
inc
push
mov
mov
xchg
repnz
notb
inc
push
int
fstpl
out
ljmp
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
inc
adc
sub
pop
es
test
aad
test
cmc
ljmp
xor
dec
inc
jp
push
nop
xchg
mov
fcmovbe
lret
ljmp
xor
push
inc
bound
gs
movsl
cmc
xchg
in
adc
inc
leave
push
xchg
mov
dec
jbe
xchg
jb
jae
inc
repnz
shlb
sbb
sbb
cmp
popf
lods
mov
mov
insl
push
sub
inc
mov
movsb
adc
push
cmc
sbb
shll
call
into
push
push
jne
ljmp
notb
sub
add
xor
xor
pop
push
xchg
pushf
push
scas
cmpsb
loop
mov
xchg
cli
mov
stc
arpl
pop
fmuls
push
mov
xchg
shlb
scas
dec
stos
xchg
jo
lret
xorb
mov
nop
or
jne
cmpsl
push
out
roll
inc
loopne
push
xchg
inc
mov
movsl
sbb
fidivl
sbb
ljmp
xor
push
inc
jp
jae
adcl
movsl
ret
repz
pop
jae
arpl
cmp
add
adc
adc
enter
mov
scas
mov
sbb
pop
xor
and
push
sbb
gs
rorb
leave
mov
sub
jae
cmp
inc
sub
cmp
jp
push
lcall
movsl
fcmovbe
lret
cmc
ljmp
xor
dec
inc
jp
push
lcall
movsl
fcmovbe
lret
cmc
ljmp
movl
lds
xor
mov
stc
inc
inc
out
popf
jecxz
sti
jp
testl
cld
xor
xor
push
aam
adc
dec
pop
xor
movsl
push
xchg
push
sub
gs
mov
movsbl
mov
jnp
push
lods
fxch
sub
inc
das
out
movsl
cli
pop
stc
fdivl
arpl
sbb
push
pop
lock
mov
push
jns
push
cmp
xor
xchg
inc
xor
lret
fnstenv
xchg
jl
subl
int3
add
xor
stc
xchg
mov
add
mov
push
pop
in
arpl
sub
and
sahf
mulb
mov
push
rorb
dec
mov
pusha
test
data16
xchg
add
mov
test
mov
ficomps
leave
lds
shl
loop
sub
xchg
arpl
adc
or
push
popf
or
mov
sti
es
jp
and
mov
adcb
repnz
movsl
or
jecxz
adc
dec
lahf
cmpsl
rorb
xor
dec
inc
aas
flds
push
mov
imul
stos
loop
hlt
jns
cmp
loop
pop
jecxz
inc
lea
mov
aaa
leave
scas
cmp
sub
push
gs
dec
test
or
sti
sub
jne
add
sub
xchg
pop
pop
xorl
xchg
ja,pn
inc
mov
aad
je
or
int
sub
dec
inc
mov
and
movsb
mov
push
loope
pop
outsb
pop
push
or
loope
pop
xor
mov
dec
mov
push
xchg
aaa
and
mov
xor
cmp
ja
js
push
lret
pop
out
mov
cmpsb
add
adc
popa
ja
pop
xchg
sub
testb
adc
jmp
mov
jecxz
test
dec
pop
es
fsubrl
or
dec
js
mov
adc
push
dec
imul
outsb
dec
sbb
sbb
fdivrp
cltd
mov
fdivl
push
sbb
mov
push
inc
xor
mov
lock
loopne
js
adc
fists
lret
dec
iret
fcomi
push
lds
enter
loop
mov
pop
int
cltd
mov
inc
jbe
mull
push
push
fwait
xchg
xlat
incb
stos
sahf
test
aas
jmp
lds
repnz
repz
inc
clc
push
mov
ss
xchg
sbb
dec
call
mov
imul
lds
in
loop
inc
inc
jo
sub
mov
inc
jns
xor
sbbl
jae
dec
jp
lret
mov
lcall
out
insb
dec
rolb
inc
scas
sbb
pop
inc
mov
sub
cmpl
in
sub
out
jnp
mov
fnstenv
stos
mov
jne
jle
aad
sub
iret
sub
sbb
negl
loopne
sub
mov
aas
pusha
or
ss
mov
mov
loope
mov
lahf
jmp
mov
hlt
jge
sub
pop
adc
cmp
test
add
or
mov
addr16
arpl
mov
add
int
pop
aas
outsb
addr16
repz
jmp
jnp
daa
push
and
push
inc
lret
push
pop
jbe
imulb
jge
out
push
neg
stos
lcall
push
test
jge
inc
negb
inc
rclb
xchg
fcomi
fcmovbe
call
in
ljmp
sbb
pop
dec
mov
adc
fildl
jl
fistl
test
push
mov
insl
aas
addr16
mov
movsl
add
add
out
cli
and
fildll
arpl
call
pop
std
shll
test
xor
mov
or
bnd
push
xor
pop
loopw
data16
mov
xchg
fucomi
or
add
iret
jmp
sub
push
mov
call
dec
imul
in
mov
xchg
jne
mov
cmp
adc
rol
jmpw
out
sub
mov
test
popf
mov
call
and
or
xchg
cmp
push
clc
ss
hlt
xorl
or
dec
push
xor
sub
ljmp
inc
xor
xorl
push
scas
aaa
and
sub
fstp
cmpsb
fdivs
fcomps
cwtl
imul
into
adc
lret
je
adc
inc
sub
fnstenv
mov
pop
insb
gs
mov
push
mov
lock
in
pop
in
test
sub
pop
mov
sub
xor
lds
dec
lods
out
cmpsb
daa
pop
mov
cs
inc
and
shl
out
aas
cmpsl
subb
shlb
lock
jmp
ffreep
lahf
jns
std
sub
fcmovbe
fs
pop
jmp
or
mov
add
fnstsw
clts
fsubs
stos
or
rorb
or
gs
or
pushf
cltd
push
add
aas
inc
leave
and
inc
sahf
inc
rol
js
in
clc
rorb
imul
jecxz
bound
in
rorb
cmp
and
int3
jecxz
push
pop
bound
stos
movsl
out
and
sbb
lret
loopne
inc
int
mov
rep
scas
mov
insl
mov
push
sub
cltd
cmp
sahf
jecxz
leave
and
inc
movsbl
and
scas
sub
ja
xchg
test
repz
lock
fcoms
popf
mov
inc
out
hlt
mov
inc
xlat
sub
std
add
mov
add
stos
pop
inc
mov
call
xor
dec
adc
out
mov
pushf
cltd
mov
cwtl
imul
mov
test
jns
xchg
nop
sub
pusha
les
push
dec
loopne
addr16
mov
aaa
pop
pop
std
mov
mov
test
movsl
xor
mov
or
popa
adc
pop
movb
mov
ret
push
or
pushf
cmp
mov
mov
out
and
outsl
test
out
push
and
xor
mov
adc
lret
jmp
loope
popf
lds
inc
movb
js
loop
shrl
lret
jne
aad
std
dec
aam
out
subl
sbb
dec
popa
popa
cmp
imul
std
jne
pop
dec
andl
cmovns
fisubs
xor
or
inc
xlat
fwait
icebp
insb
pop
sarb
inc
addr16
mov
push
push
xor
mov
orb
pop
or
outsb
lret
pop
xchg
jp
cmpb
cs
fs
inc
aas
les
fwait
cmp
pop
xchg
cmpsb
notl
faddp
jae
push
push
sbb
add
cmc
fisttpll
js
inc
mov
lret
jg
test
jne
adc
add
rcrl
inc
rorl
push
pop
je
rorl
pop
mov
and
add
and
loop
adc
cmp
sub
sbb
or
repnz
repz
mov
fs
xchg
jb
sbb
add
xchg
ret
aaa
pop
popf
xlat
movl
or
or
out
mov
cmp
push
xchg
out
jl
adc
xchg
ss
jb
insb
pop
adc
fwait
ja
and
testl
push
xchg
pop
rorl
fstl
lock
mov
adc
shrl
inc
jl
mov
pop
test
xor
lods
pop
xlat
inc
movl
mov
fildll
data16
frstpm(287
int
xchg
add
pop
ljmp
inc
arpl
fldcw
xchg
nop
outsl
and
andb
dec
insl
add
out
out
int
cmp
in
stc
sahf
cmp
jo
aad
mov
add
sbb
notb
stos
lahf
aas
cmp
notl
cmp
jge
mov
or
mov
sub
ss
das
cmp
sbb
xorl
icebp
sbb
loope
ja
divl
fisubl
push
xchg
mov
xor
popl
jns
inc
cmp
jecxz
in
pop
lods
es
mov
sub
call
fdivs
sub
in
repz
outsb
leave
or
sbb
mov
sbb
mov
sar
enter
mov
ljmp
xchg
add
sub
test
mov
imul
outsb
leave
xchg
xor
sbb
jecxz
fmuls
repnz
leave
pushf
fs
clc
loope
cltd
cs
jg
sahf
cmp
xchg
push
sub
mov
cmp
test
or
cli
jle
lods
push
mov
pcmpgtd
mov
sub
fdivrs
pop
mov
inc
mov
push
in
popa
cli
inc
pop
xchg
pop
shlb
popf
pop
test
outsb
aad
adc
in
mov
or
mov
mov
ja
pop
mov
insb
add
cltd
sbb
mov
inc
push
jecxz
mov
mov
mov
int
push
mov
xor
xchg
insl
and
lcall
pop
mov
int
sbb
mov
fcoms
scas
les
sub
inc
cpuid
mov
or
int3
mov
adc
ret
mov
sub
or
fcom
aad
fs
aam
pop
nop
call
shll
or
jbe
ret
inc
das
nop
or
mov
push
fs
sbbb
pop
lcall
push
adc
fnstcw
cmpsb
xchg
mov
icebp
stos
cli
jo
sbb
rclb
adc
cltd
das
popa
add
jle
aas
arpl
je
aam
dec
cs
stos
adc
popf
xchg
ljmp
mov
sub
cli
out
sub
jmp
int3
lahf
or
mov
and
xor
cmp
xchg
mov
aam
xor
dec
mov
mov
iret
mov
dec
pushf
dec
je
lcall
add
push
jmp
push
ds
addr16
movsl
sub
pop
les
jp
popf
inc
aaa
adc
jmp
iret
inc
into
cmp
mov
cmp
jo
jle
mov
leave
or
or
cmp
scas
idivb
jmp
pop
dec
stos
sti
inc
mov
cld
push
mov
and
pusha
jo
vpcomq
jbe
xor
xchg
call
movsl
sub
testl
rclb
outsl
sbbl
add
jp
mov
add
inc
mov
popa
je
inc
push
bound
xchg
jnp
inc
mov
or
or
and
inc
push
dec
inc
add
leave
mov
mov
shll
pop
add
pop
pop
in
test
outsl
mov
rclb
push
xor
and
or
mov
pushaw
jmp
push
mov
loope
lea
enter
pop
dec
inc
leave
mov
jns
cmpsl
xchg
adc
mov
daa
out
inc
sub
test
push
cmp
or
add
xor
das
jmp
jmp
xor
jae
data16
xchg
push
int3
cmp
inc
jge
inc
mov
sti
frstor
daa
bound
dec
lods
in
mov
testb
shll
add
pushf
mov
shrl
mov
push
or
loope
jno
push
fstps
mov
fidivs
mov
cwtl
pop
dec
pushf
mov
xchg
test
incb
adc
push
jg
xchg
sbb
iret
fnstcw
test
fwait
mov
stos
subb
inc
push
mov
addr16
mulb
stos
dec
and
jnp
rorl
stos
lods
jecxz
mov
cltd
repnz
push
xor
loop
adc
xchg
push
shrl
and
fiaddl
cmp
iret
cli
mov
sub
lret
jge
xor
push
cld
outsb
aaa
cmpsl
incl
pop
stc
icebp
divl
lret
cwtl
adcl
lea
cmp
mov
or
fiaddl
or
xchg
call
sahf
mov
pushf
mov
inc
mov
sarb
ss
mov
fwait
adc
fdivrs
pop
out
push
mov
out
daa
lahf
rolb
inc
jnp
fdivrl
sub
aam
filds
xor
adc
jnp
shll
jae
fsubl
loop
nop
mov
sub
aaa
test
arpl
rol
jnp
add
sbb
and
sbb
xor
xchg
add
mov
jg
adc
lods
in
push
imul
jo
jle
daa
mov
dec
or
movsb
pop
mov
cld
dec
sbb
pop
stos
push
jp
popa
js
icebp
sub
ret
jno
es
pop
sub
cmp
les
adcb
or
int
sub
out
xchg
adc
jae
ret
in
cmp
mov
adc
rclb
jbe
inc
sbb
cmc
add
test
repz
std
into
adc
dec
insl
mov
pop
pop
out
imul
sub
sbbb
pushf
std
bound
into
mov
repnz
loopne
mov
add
pop
lock
ret
sbb
lds
push
push
sbb
push
inc
add
and
cmc
push
out
mov
jns
or
mov
cwtl
mov
jae
js
mov
cmpsl
jl
pop
clc
int3
fistpll
cli
cmp
sub
aam
add
lret
add
or
jb
cmp
or
enter
inc
lret
add
sub
jno
push
rorb
mov
dec
aad
xchg
je
adc
ljmp
pop
sti
das
add
push
mov
adc
cmp
orb
cmp
out
subb
cli
popa
xor
jb
jg
cmp
inc
cmp
sbb
test
mov
lret
xchg
jl
fisubrl
ret
pop
push
into
out
dec
inc
repz
jle
mov
jbe
pushf
inc
xor
sbb
mov
pop
mov
add
add
stos
ja
int
test
loopne
ret
clc
shrb
mov
lods
sub
ror
mov
shlb
dec
jle
pop
and
shl
lock
movsl
add
sbb
outsl
das
add
sbb
daa
mov
out
cmpsb
dec
cmpsl
imul
clc
out
jg
xchg
inc
imul
mov
cli
mov
cld
mov
dec
push
mov
dec
rorb
ss
push
lds
jge
imul
mov
bound
std
mov
mov
or
stos
ss
stc
lret
jae
lods
popl
loop
int
lds
rorb
sbb
jnp
lret
xchg
test
movsl
xchg
nop
jns
xchg
cmp
outsl
mov
sbb
movsl
fs
pushf
idiv
pop
sti
pop
sub
mov
pop
addb
scas
subb
mov
xchg
fs
cwtl
leave
sub
cmp
jo
in
stc
stc
mov
pop
sbb
mov
stos
shll
add
push
fwait
and
sbb
adc
aaa
sahf
inc
mov
jno
xorb
imul
inc
jmp
sub
in
jge
fsubl
ss
and
fsubs
cmpsl
xor
pop
ljmp
pop
das
bound
iret
or
dec
rcrl
loope
cmp
mov
fisttps
fldln2
adc
in
and
push
pop
mov
cld
pop
add
or
sahf
out
sahf
lds
sub
repz
pop
add
pop
dec
add
dec
push
push
cs
xorl
or
dec
mov
jb
fidivl
lret
scas
into
or
repz
add
stos
xchg
test
aaa
sbb
dec
imul
mov
mov
pusha
leave
jge
outsl
daa
ret
push
lahf
ja
sub
xor
ja
shlb
aas
cmp
or
and
jp
jecxz
pusha
mov
cmp
movsb
sbb
cmc
adc
test
arpl
shrb
pop
add
mov
movb
xchg
and
jo
mov
push
fdivs
movl
aaa
dec
mov
sbb
sbb
push
pushf
mov
mov
xchg
jecxz
shll
pop
call
and
hlt
in
pop
js
push
clc
cwtl
int3
mov
jo
xor
jg
and
in
sbb
test
jl
push
mov
jo
jge
mov
sbb
add
popf
jno
mov
nop
mov
mov
add
in
adc
call
xor
rcl
xchg
in
daa
repz
aad
mov
pushf
pop
loope
or
arpl
or
mov
lds
jmp
push
xorl
in
call
xchg
arpl
inc
add
cmp
pop
sub
bound
ds
pop
sti
mov
cmp
popa
mov
cmp
dec
call
adc
sub
mov
fs
push
inc
dec
icebp
lret
in
mov
mov
cmpsb
lds
push
dec
dec
adc
xchg
add
mov
dec
and
fnstcw
scas
pop
add
xchg
sbb
cmp
jb
pop
xor
int3
pop
push
push
and
test
dec
fldenv
xor
xchg
sbb
mov
dec
fadds
cld
sub
imul
push
fwait
repz
push
test
es
arpl
mov
js
ret
pop
mov
nop
adc
pop
jle
std
inc
into
mov
xor
mov
fmuls
data16
lods
mov
clc
sahf
mov
jne
jnp
testl
sub
into
repz
jg
sub
or
data16
pop
ret
mov
pop
ljmp
add
popa
mov
ss
cmp
add
xor
addr16
ret
fwait
icebp
xor
adc
les
mov
ljmp
add
addr16
lods
out
adc
mov
lds
jns
push
in
daa
jg
fldl
and
jne
xor
adc
fisubrs
and
jecxz
mov
mov
and
cmc
adcl
aad
movsb
or
shll
mov
pop
mov
fbld
mov
xchg
addb
sbb
mov
jne
fs
inc
loop
icebp
icebp
mov
rol
push
jg
loopne
adc
cwtl
push
dec
in
ret
ficomps
push
lret
sub
mov
and
mov
push
aam
xlat
jp
sbb
or
lcall
js
pop
pop
push
in
movsl
fsubrs
daa
add
and
bound
jl
fcomps
cwtl
cmovo
adc
lds
adc
icebp
add
cli
in
mov
jmp
mov
xor
fmul
popf
jne
out
cmp
sub
je
mov
sti
and
jge
mov
mov
push
xchg
pop
pop
mov
repnz
loop
movsl
lahf
fldt
mov
or
xchg
mulb
in
dec
call
sbb
mov
mov
aaa
cs
cmp
stos
test
sahf
xor
inc
addr16
or
ret
pop
mov
push
test
inc
cmp
icebp
push
jg
js
pop
jnp
nop
arpl
mov
add
aam
sub
xor
inc
dec
stc
mov
data16
pop
repz
sub
aas
outsb
imul
or
xchg
sub
jae
movsl
jge
mov
into
std
adc
imul
jmp
mov
subl
pushf
cmp
arpl
outsl
daa
sub
add
test
mov
cmpsl
xlat
mov
add
jle
pop
pusha
out
pop
sbb
and
push
or
test
or
int
sub
aas
jl
repnz
jbe
jns
movsb
loopne
arpl
les
mov
pop
xor
ljmp
add
sbb
xchg
pop
es
mov
sbb
cmp
adc
fcmovbe
aam
sarl
push
cwtl
shr
aam
cmp
dec
ja,pt
popf
cmpsb
pop
mov
xchg
rcrb
inc
mov
sub
jb
add
mov
add
lock
sahf
push
add
cmpsl
mov
lret
xchg
sbb
incb
loope
cs
sub
cmp
push
dec
pop
ja
std
or
xchg
jmp
jp
lret
ja
cmp
dec
addr16
mov
add
jb
out
leave
push
mov
hlt
into
fdivrs
add
adc
stos
lea
inc
outsl
ror
jmp
in
pop
xchg
mov
inc
adcl
in
cwtl
mov
jne
xchg
sub
in
xchg
cmp
mov
xchg
or
adc
das
xchg
push
cmp
or
shrl
xchg
lret
xor
push
cmpsl
pop
adcb
and
inc
inc
sahf
or
pop
in
popa
pop
ror
mov
adc
adc
shll
fisubrl
loop
mov
xor
lds
mov
pop
dec
sub
sub
and
lret
add
pop
push
dec
inc
jp
push
lcall
movsl
fcmovbe
lret
cmc
ljmp
xor
dec
inc
jp
push
lcall
movsl
fcmovbe
lret
cmc
ljmp
xor
dec
inc
jp
push
lcall
movsl
fcmovbe
into
frstpm(287
cs
sub
pop
push
dec
ljmp
mov
shrb
or
jmp
fildl
lret
mov
repnz
mov
dec
sbbl
sbb
or
sti
and
adc
add
jo
pusha
mov
mov
mov
dec
xor
sub
sbb
or
loop
repnz
add
jo
pusha
mov
addl
jnp
dec
cld
and
pop
movsl
imul
lods
mov
js
shll
inc
dec
mov
movsl
mov
js
stos
popa
dec
sar
fwait
lret
pusha
pop
scas
fs
xchg
outsl
or
cvtdq2ps
jne
jmp
repz
sub
jne
sti
xor
mov
hlt
imul
popf
xchg
mov
rorb
and
and
cwtl
push
mov
inc
push
cmp
movsb
ljmp
in
sbb
jle
adc
and
mov
rcll
notb
cmp
cmp
add
lahf
shll
mov
xor
adc
outsl
movsb
test
mov
sbb
cld
in
and
adc
add
jo
pusha
stos
push
fwait
inc
xchg
mov
mov
push
lock
xor
add
or
push
cltd
jns
imul
mov
lds
pop
clc
cs
pop
loopne
mov
xchg
xchg
inc
xorb
movsb
jo
and
mov
xchg
orb
mov
mov
sti
and
jg
insb
mov
pusha
stos
push
fwait
inc
mov
pop
orb
loopne
rcrb
rorb
sti
and
adc
add
jo
pusha
stos
push
fwait
inc
mov
pop
orb
loopne
rcrb
rorb
sti
add
leave
mov
bound
loop
xchg
xchg
inc
mov
call
dec
jecxz
rcll
inc
lods
outsl
enter
add
cmp
pop
mov
add
jnp
enter
testb
stos
stos
lret
mov
inc
and
lret
sbb
pop
push
mov
in
xchg
xor
sub
pop
pop
cmp
xchg
fldl
les
fisubl
jbe
pop
and
sub
shlb
je
mov
addr16
mov
add
rcr
inc
jnp
popa
xor
scas
lea
hlt
loopne
and
sbb
rcll
iret
xchg
sbb
jl
xor
loop
cltd
xchg
jge
aas
das
xorl
outsb
test
jge
cmp
popf
aas
add
out
jl
cmp
mov
mov
in
inc
iret
ret
lcall
xchg
mov
inc
xor
inc
xchg
mov
jae
and
pop
mov
cmp
pop
push
ss
lods
or
add
or
cmpl
push
lods
inc
scas
add
lahf
xor
push
pop
push
dec
out
jae
test
add
roll
js
pop
dec
add
and
dec
orb
aam
mov
sarl
mov
stos
test
sub
icebp
out
sbb
jecxz
mov
movsb
imul
cmpsb
jecxz
nop
repnz
inc
js
ss
or
outsb
ds
inc
jns
popa
movsl
mov
jnp
xor
or
mov
xchg
xchg
out
mov
and
fcoms
adc
sub
das
jno
stos
sbb
sub
push
popf
leave
ret
cmp
jno
mov
outsb
mov
jg
or
test
in
rcll
outsb
push
inc
xchg
inc
push
sbb
adc
cmpsb
js
lret
js
js
and
dec
out
pop
es
lea
pop
adc
test
ret
add
cmp
xchg
lods
xchg
andl
jnp
xchg
mov
mov
and
insb
and
inc
pop
movsl
sub
jbe
inc
pop
popa
loop
push
roll
jns
add
mulb
icebp
and
je
xor
push
sub
and
outsb
jp
orl
sub
dec
fstpt
sub
add
xchg
sub
insl
or
pop
xor
leave
sub
xor
js
loopne
inc
push
push
adcb
ret
imul
mov
cmp
fisttpl
jmp
xchg
out
cmp
jns
inc
std
pushf
xlat
xchg
bound
fisubrl
loopne
jmp
loop
mov
test
lock
mov
mov
xchg
sti
sbb
adc
mov
cmp
jnp
add
leave
loop
jmp
xor
cld
mov
scas
or
and
and
push
fimull
pop
push
jb
sahf
add
push
pop
jl
je
fsts
fnstcw
jb
out
pushf
leave
cmp
aaa
enter
dec
push
scas
jmp
fwait
cld
and
xor
dec
in
loope
jae
pop
xchg
push
loope
add
xchg
out
and
fiaddl
pop
pop
dec
dec
daa
mov
or
jmp
cmp
mov
dec
mov
dec
in
cld
xlat
enter
push
daa
add
xchg
shlb
sti
mov
je
loop
sub
adc
jno
xchg
or
fnsave
imul
sbb
sub
iret
popf
mov
decb
or
pop
pop
mov
iret
mov
or
lds
mov
idivb
xchg
data16
push
dec
es
mov
imul
scas
pop
push
imul
mov
fstpl
and
pop
xlat
pusha
ss
xchg
pop
outsl
or
dec
cmpsl
xchg
int
icebp
xchg
dec
inc
out
stc
repz
pop
ja
mov
out
pop
push
bound
xchg
and
fnstcw
fnstcw
dec
add
mov
or
dec
mov
xchg
call
imul
stos
jno
xor
jae
mov
jne
test
cli
sub
repz
cld
pop
lds
and
data16
xchg
push
shrl
leave
orb
pushf
jnp
mov
push
call
adc
or
inc
ss
out
ja
stc
loop
fstpt
push
jae
inc
rol
inc
cmp
or
aas
sub
pop
cld
jl
mov
push
inc
mov
scas
sti
mov
cli
lock
xor
dec
jmp
xor
pop
jmp
mov
mov
dec
xchg
mov
pop
lcall
imull
push
fisttps
cwtl
sbb
enter
pop
mov
add
clc
std
mov
fistps
cli
cmp
inc
aad
push
xchg
test
nop
push
adc
repz
clc
jae
inc
icebp
sub
call
stos
pop
pop
jbe
xor
outsl
lcall
sti
inc
cwtl
pop
sub
in
inc
sbb
sub
inc
pushf
and
mov
loop
sub
push
gs
nop
mov
sbb
shrb
test
pop
stos
pop
add
add
cmc
test
mov
fsubrs
sub
pop
mov
loopne
jbe
jge
fs
sarb
adc
mov
lea
sub
jecxz
idivb
ljmp
sbb
enter
insb
lahf
jge
lea
pop
minps
adc
inc
aam
arpl
mov
jecxz
repz
das
cmpsl
shlb
or
jnp
addr16
mov
add
cli
or
mov
aaa
outsb
xchg
xchg
xor
out
cmp
sbb
mov
ret
stos
les
inc
mov
add
and
icebp
rcrl
fcomps
imul
add
stc
mov
movb
lahf
mov
xchg
sub
mov
movsl
xchg
mov
cmp
mov
mov
and
stc
cltd
lahf
test
aam
and
and
mov
aad
popf
dec
popa
insb
lea
lret
dec
inc
mov
mov
mov
push
test
clc
cmp
stc
out
sub
xlat
cld
movsb
inc
pop
ficompl
sub
mov
out
scas
gs
cs
int3
mov
pop
testl
in
in
dec
ds
push
sbb
hlt
mov
sub
pop
push
push
into
lock
or
lcall
addb
push
mov
dec
xchg
mov
and
scas
mov
gs
xor
pop
je
jle
sahf
in
incb
sbb
out
pop
dec
fiaddl
inc
dec
cmp
or
sbb
repz
imul
cmp
mov
add
in
mov
int
inc
and
fimuls
sbb
push
cmpsb
add
mov
scas
add
xor
mov
div
add
mov
jg
jbe
mov
lods
inc
aas
cmp
pop
lea
outsl
movsb
popa
mov
inc
xchg
sub
push
pop
mov
ds
mov
lea
mov
fsubp
xor
pop
add
pop
mov
sahf
ljmp
int3
jo
shr
mov
dec
mov
inc
push
lds
dec
lock
jns
mov
pop
lret
push
mov
rol
cli
jb
lret
outsb
inc
sub
idivl
lock
in
or
imul
popf
adc
mov
int
in
inc
cs
loop
xor
adc
push
jo
lret
dec
movsb
or
mov
push
xchg
aad
das
mov
and
sbb
pop
jno
lret
dec
inc
sbb
fimuls
ja
push
sub
lock
insl
mov
add
testb
stc
push
mov
cmc
stos
or
add
aaa
cli
sbb
jo
out
rolb
mov
mov
jge
xor
push
sub
rcrl
insl
cltd
add
test
pop
pop
lahf
and
push
mov
xlat
or
and
add
adc
aaa
sbbw
xorb
clc
mov
add
jp
cwtl
scas
cmp
ljmp
leave
out
add
and
sub
pop
push
jl
add
lods
insl
lret
adc
or
sahf
nop
lcall
sbbl
int
lahf
cwtl
xlat
push
jge
lods
mov
fsubrs
inc
das
das
xchg
out
pop
pop
xchg
jl
xor
lods
sahf
arpl
xor
fbld
call
xchg
mov
loop
test
shll
sub
pop
mov
xchg
mov
push
pop
sub
adc
jnp
flds
movsl
sub
ret
dec
sbb
push
ljmp
inc
push
and
insb
out
loopne
mov
pop
out
popf
jle
pop
sbb
mov
popf
pop
sbb
js
mov
and
mov
mov
mov
daa
out
shll
xor
cmp
lcall
insl
fsincos
pop
stc
loope
xor
call
out
jmp
mov
pop
jne
mov
dec
cs
mov
flds
clc
lds
insb
jno
mov
iret
cmp
ss
test
popf
mov
sbb
nop
dec
push
push
lret
adc
jg
jmp
pop
and
and
inc
jns
adc
mov
faddl
add
jle
xchg
add
sbb
xor
fisubrs
mov
mov
test
lods
adc
adc
pop
cmp
dec
ret
das
adc
imul
leave
pusha
test
or
leave
xchg
or
lahf
ffree
mov
dec
fdivrs
xchg
inc
cmp
in
and
and
daa
into
jle
inc
xor
jne
xor
inc
sbb
popf
add
inc
xchg
fwait
sbb
sti
daa
les
add
or
bound
and
push
pop
in
push
lahf
mov
jne
out
xchg
outsb
mov
sbb
fmull
fiaddl
leave
push
mov
mov
mov
sub
insb
sub
fdivrl
lock
icebp
sbb
dec
push
push
imul
sub
cmp
sub
dec
pop
mov
pop
pop
mov
inc
mov
je
pushf
mov
jp
xchg
pop
adc
and
mov
lret
or
test
jecxz
mov
lahf
xchg
dec
xchg
test
or
test
std
icebp
lcall
mov
xchg
xchg
addr16
andb
fwait
lcall
inc
push
das
push
pop
xor
shrb
pop
mov
leave
xor
jg
addr16
adc
xchg
flds
sbb
adcl
cmp
sti
xchg
pop
lods
mov
ret
inc
imul
push
or
cwtl
push
and
ljmp
push
je
shr
aad
or
dec
scas
sub
jmp
cmc
roll
in
inc
ret
addr16
cmp
aad
inc
mov
xlat
in
ds
lods
jl
xlat
mov
sbb
dec
test
popf
fstl
hlt
push
shll
and
cwtl
lds
or
or
mov
inc
ror
cmc
sbb
into
test
mov
cmp
mov
jb
orb
stos
ror
rcl
pop
push
loopne
pusha
or
dec
insb
jbe
mov
inc
mov
push
icebp
imul
mov
push
jmp
jg
sbb
cli
adc
mov
ret
cmp
dec
or
cmp
aas
lret
mov
out
lods
bound
popf
pushf
idivl
iret
scas
xor
test
lcall
jl
aaa
gs
pop
rclb
insb
jns
cmp
idivl
test
inc
cs
je
xor
jmp
std
add
pop
aaa
cmpsl
div
xchg
xor
mov
gs
sbb
int3
jge
shll
push
mov
xchg
sbb
adc
out
xor
ss
push
addr16
mov
mov
cmp
test
mov
inc
stos
je
aam
lret
daa
in
pop
sahf
clc
push
jmp
aas
jp
in
sbbb
out
je
xchg
ret
lock
mov
xchg
or
pushf
dec
sub
ficoms
sbb
mov
inc
mov
sarb
sarb
cmp
mov
xor
andb
icebp
in
pop
pushf
fidivl
inc
clc
mov
jno
xor
aaa
punpckldq
pushf
mov
fwait
sarb
fadds
and
dec
sbb
xchg
or
jecxz
push
les
cmp
movsl
mov
mov
clc
iret
pop
dec
fnstenv
adc
test
negl
mov
push
inc
pop
pop
outsb
and
in
dec
cmpsl
mov
mov
flds
aad
ljmp
pushf
mov
cmp
leave
in
insl
and
xor
out
xchg
mov
xor
ja
mov
sub
sub
adc
aam
fstpt
and
jl
push
jnp
aaa
pop
insl
sbb
shrl
mov
imul
cmp
stos
scas
xor
mov
mov
dec
test
out
js
push
ret
push
pusha
inc
or
insl
add
ds
mov
add
sbb
jo
dec
sbb
stc
fldt
lods
stos
test
pop
popa
xchg
inc
pusha
pop
gs
pushf
adc
dec
lahf
arpl
adc
cmp
lea
mov
push
xlat
cmc
cmp
sbb
add
nop
pop
les
sub
xor
lods
push
movsl
out
jmp
sbb
adc
or
mov
sbb
in
inc
sub
rol
aam
hlt
into
jne
mov
cmc
outsb
pop
jg
orb
mov
out
sbb
divb
int3
mov
lods
and
arpl
adc
mov
push
dec
pop
pop
test
xor
fiadds
pop
inc
or
pushf
sub
push
inc
rsqrtps
sub
lret
cmp
mov
and
test
inc
add
xchg
mov
arpl
add
pop
mov
xchg
push
js
cmpb
movsl
inc
pop
fimuls
mov
jbe
xchg
shlb
sbb
adc
mov
cmp
pusha
add
dec
popa
shrb
cli
sbb
pop
mov
adc
ja
popfw
stc
pop
fs
adc
in
push
push
sbb
cmp
lcall
jno
in
xchg
mov
xor
leave
mov
sub
stos
popa
rorl
dec
xor
xor
in
mov
jg
cmp
mov
add
mov
sarl
push
add
cmpl
lds
pop
lods
pop
stc
test
repz
arpl
in
push
and
rcr
pop
sbb
add
jmp
ja
add
inc
pop
data16
and
jge
push
test
pusha
mov
ret
shll
cmp
out
fstl
nop
jl
xor
push
sbb
js
cmp
fcoms
pop
or
bts
sbb
cli
cmp
aas
ret
mov
xchg
push
xor
fsubrp
je
daa
mov
ds
int
out
or
adc
pop
xchg
in
mov
iret
stc
mov
or
dec
lods
cld
mov
pop
fstpt
mov
imul
ljmp
loop
mov
ret
sub
xchg
mov
sub
cmc
push
or
xor
adc
movsb
mov
movsl
inc
cmp
adc
sub
addb
out
mov
fcmovb
insb
fistps
mov
sbb
rcrl
test
xchg
popf
and
mov
scas
pop
mov
and
xchg
or
dec
and
mov
lret
xchg
leave
xchg
fstpl
adc
jae
cli
popa
xor
cmpb
cmp
pop
insl
std
sbb
addb
aas
call
cmp
inc
mov
mov
call
sbb
push
or
out
mul
stc
rcl
je
sbbb
sub
inc
std
aas
pusha
pop
mov
push
push
or
test
popa
xor
jno
dec
insb
or
pop
rep
xlat
jmp
adc
adc
xchg
cmpsb
adc
jg
or
imul
lahf
mov
mov
dec
push
add
xor
into
mov
mov
sub
cmpsl
mov
shl
mov
cmp
arpl
outsl
mov
aad
cmp
xor
les
or
aaa
std
xchg
inc
fisttpll
mov
cwtl
movsb
xchg
fucom
inc
mov
dec
inc
es
sbb
push
hlt
les
mov
lods
mov
and
push
scas
dec
rcll
lods
andl
adc
es
arpl
imul
outsb
inc
mov
jge
lahf
in
cltd
push
sbb
test
rcrb
movsb
shl
sub
pop
roll
jle
fisubrs
xchg
jge
insl
xchg
dec
in
loop
xor
push
adc
std
lret
sub
sub
pop
arpl
out
stos
ret
std
insb
ret
repnz
call
pop
adc
inc
pop
scas
xor
add
aam
cmp
and
loop
cmp
push
aas
daa
mov
inc
ret
xor
jmp
mov
or
xor
in
adc
sarl
outsb
mov
sub
faddl
mov
and
or
mov
mov
mov
inc
lods
repz
lret
jl
pop
mov
sbb
sahf
xchg
out
arpl
lahf
pop
data16
push
xchg
jbe,pt
sbb
loopne
mov
loopne
cmc
and
xchg
push
push
icebp
or
mov
shll
jg
pop
mov
fs
negb
insl
or
cwtl
fcomp
jbe
daa
cmp
loop
jb
je
pop
popf
dec
mov
add
in
mov
pop
dec
adc
mov
out
mov
push
dec
mov
outsl
in
fs
and
dec
movsb
adc
stos
fildll
push
pop
int3
adc
xchg
inc
cwtl
aaa
mov
lret
dec
adc
lock
lods
fcmove
xor
push
and
sub
pop
ret
cmp
iret
xchg
pop
rolb
and
cld
push
fiaddl
sbb
rorl
rol
out
test
addr16
lret
orl
cs
lahf
lds
add
clc
popa
ret
repnz
cmp
adc
cmp
pop
into
movsb
shrb
push
pusha
xchg
xchg
daa
cli
lret
lret
repnz
mov
and
bnd
jno
imul
sarb
sbb
push
cld
sub
pop
fwait
mov
call
pop
adc
mull
ret
cmp
pop
jo
cmp
daa
ss
add
repz
hlt
jno
and
push
sbbl
pop
push
lods
in
stos
pop
mov
mov
mulb
lret
sahf
dec
cltd
sbb
sbb
in
cmp
lock
test
in
sbb
cmp
add
popf
and
and
imul
scas
ss
pop
sub
popf
aad
cltd
out
fisubrl
es
out
test
adc
pop
mov
pop
xor
mov
in
mov
xchg
xor
andb
mov
jbe
imul
rep
js
imul
xor
mov
in
int
insl
sub
cwtl
push
and
pushf
and
cld
test
ss
scas
lahf
pushf
pop
mov
cs
or
sbb
push
mov
cwtl
xchg
mov
xor
jbe
push
into
loope
ret
sub
pop
mov
les
push
rorl
in
fcoml
mov
iret
jg,pn
fsts
xchg
jmp
push
pop
add
add
pop
rcr
jno
loope
into
mov
jb
out
sub
das
push
and
mov
les
icebp
adc
cld
and
xchg
popf
lods
inc
outsb
xchg
enter
jo
adc
rorl
out
insl
dec
cld
repnz
adc
repnz
lahf
jbe
stos
jmp
pop
arpl
mov
lods
mov
mov
pop
lock
push
push
jmp
les
in
push
stc
mov
jg
add
mov
iret
inc
mov
test
jg
mov
bound
imul
pop
imul
xchg
stc
stc
fcomi
pop
outsl
popf
popa
std
and
test
pusha
dec
mov
add
push
inc
fdivrl
arpl
xchg
rol
enter
bound
lret
pop
js
ror
add
cmp
lcall
jge
movsb
outsl
inc
inc
insl
incl
lds
call
gs
cltd
jns
mov
xchg
idivl
loopne
inc
js
dec
push
mov
in
fisubrs
add
sbb
test
adc
or
pop
adcb
bound
mov
frstor
mov
shr
out
add
pop
cmpl
test
add
cmpsb
aaa
imul
xor
enter
inc
cltd
adc
and
gs
jmp
fildl
lret
jo
pusha
stos
push
fwait
inc
mov
pop
orb
loopne
rcrb
rorb
sti
and
adc
add
jo
pusha
stos
push
fwait
inc
mov
pop
orb
loopne
rcrb
rorb
sti
mov
lret
lock
rorb
pop
orb
loopne
rcrb
rorb
jmp
out
adc
add
jo
pusha
stos
push
fwait
inc
dec
mov
mov
cmp
mov
push
mov
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
scas
sbb
repz
into
mov
pop
repnz
inc
repz
sbb
add
add
add
push
add
pop
add
flds
xor
fwait
add
add
sbb
scas
add
xchg
add
add
add
add
add
add
add
add
add
add
add
cmp
and
cmpsl
add
ret
add
add
fildl
xchg
add
add
add
ret
add
push
add
push
add
add
add
add
outsb
add
adc
cmpsl
add
pop
add
add
dec
add
pop
add
lods
add
stos
add
add
dec
add
sbb
testl
mov
pop
add
add
add
add
or
mov
pop
scas
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
dec
add
add
push
add
add
add
add
ret
add
add
add
add
add
xor
or
add
add
dec
add
orb
add
add
add
pusha
add
add
add
addb
add
add
popa
add
add
addb
jne
daa
add
add
add
add
add
add
add
dec
add
add
pop
add
add
add
add
add
push
inc
add
pop
add
add
add
add
dec
add
mov
and
fiadds
js
mov
pop
add
add
add
add
add
add
add
inc
add
add
add
add
mov
jo
dec
add
add
adc
pop
add
add
xor
dec
add
push
mov
add
add
add
add
add
lds
push
add
add
add
dec
add
add
add
add
add
rolb
dec
add
inc
add
add
add
add
add
add
add
add
ret
add
add
dec
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
ret
add
add
add
add
add
add
cmp
or
popl
adc
add
cmpsl
add
add
or
add
add
add
add
inc
add
add
add
pop
add
add
add
add
add
add
inc
add
rolb
dec
add
add
add
add
mov
dec
add
je
and
test
jge
pop
add
cmp
or
outsl
add
add
lea
pop
add
add
add
add
in
add
xor
movsl
add
add
outsl
add
add
xchg
add
add
add
xchg
add
add
xchg
add
add
add
add
add
add
add
add
in
add
add
sbb
cwtl
add
and
lods
add
add
add
xchg
aad
mov
test
lret
jecxz
pop
xchg
aad
out
xchg
dec
repz
mov
mov
in
jno
popa
jmp
inc
sti
sahf
push
or
clc
rcrl
or
or
test
lods
xchg
pop
movsl
scas
fdiv
cltd
repnz
inc
xor
push
in
dec
jns
mov
push
lahf
aam
mov
loop
stc
or
pusha
clc
mov
push
mov
and
dec
mov
push
inc
xchg
loopne
scas
test
mov
jbe
dec
inc
fidivs
xchg
rorl
sbb
int3
lods
cld
fstpl
lcall
stc
into
mov
outsl
cmp
mov
je
lret
mov
xor
mov
cld
xor
lods
mov
call
xchg
pop
mov
pop
jo
pop
cmp
loop
out
addr16
and
adc
call
lret
dec
stos
test
xchg
fbld
add
mov
jl
inc
jecxz
sbb
mov
enter
stos
pop
in
outsl
adc
bound
add
ret
pushf
fldcw
sbb
inc
fndisi(8087
inc
iret
sub
std
sbb
std
cmc
fcmovne
shlb
imul
add
mov
xchg
scas
and
xor
dec
jo
and
sub
stc
dec
push
pop
incb
popf
pushf
cwtl
aam
repz
inc
xor
clc
fsubrs
cmp
pusha
inc
pop
and
ret
mov
rcr
scas
test
inc
outsl
cmpsl
mov
stos
or
adc
mov
inc
bound
std
les
mov
cmpb
cmpl
lret
push
pop
insl
cmp
ja
das
sbb
fld
add
aaa
shlb
mov
or
lret
xor
int3
mov
mov
popa
inc
xchg
jl
cmp
xor
push
xchg
cmpsb
mov
mov
outsl
out
sahf
stos
and
sub
mov
orl
int
xchg
adc
jge
loopne
inc
lds
or
dec
push
or
setns
push
cmpl
jnp
push
xor
inc
mov
add
sbb
inc
cmpsl
jge
mov
push
jbe
xor
jecxz
pusha
and
shl
or
lret
mov
add
xchg
jg
int3
js
push
cmp
clc
in
cld
test
cmp
sub
mov
cli
dec
mov
adc
or
mov
cld
loopne
xchg
push
arpl
mov
jns
sub
mov
push
mov
push
or
aas
xlat
mov
dec
lds
test
repnz
ret
xchg
addr16
jle
test
insb
aam
pusha
scas
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
