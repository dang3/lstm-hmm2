call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
in
ficoml
inc
cli
stos
add
mov
aam
lds
or
jne
ficoml
cli
xor
stos
add
pop
mov
lds
imul
ficoml
inc
jecxz
xchg
and
mov
mov
mov
je
jl
cmp
sahf
adc
inc
out
xor
jnp
shl
fisubrl
sub
loope
es
popa
and
add
xor
sub
jo
or
mov
jp
jp
pop
dec
popf
sub
lock
and
xor
scas
lcall
mov
adc
decl
sbb
push
aam
cmp
ljmp
cmc
repnz
movsl
aam
sub
in
mov
lcall
stos
sub
mov
test
lds
int
adc
jp
lds
fucomip
shlb
mov
jnp
nop
ret
aaa
or
dec
mov
pop
movsl
outsl
xchg
aad
sub
lret
push
cli
inc
loopne
mov
mov
aad
lds
adc
pop
add
or
jbe
inc
hlt
push
pusha
xlat
popf
and
mov
addr16
push
sub
or
test
into
jge
cmpsl
xor
cmp
js
jne
inc
lcall
mov
je
and
mov
aad
lds
or
cmp
ficoml
inc
cli
xor
stos
add
pop
aad
lds
or
cmp
pusha
pop
fmul
pop
jmp
addr16
icebp
push
loop
mov
jbe
jo
xor
sbb
stc
inc
push
or
aam
fidivrl
cmp
aas
dec
in
push
fists
das
clc
or
out
xchg
mov
test
subl
clc
lahf
fs
cs
jne
jge
in
mov
mov
test
jge
test
adc
inc
loope
jbe
roll
bound
in
add
inc
xchg
test
or
iret
push
in
out
clc
sub
adc
mov
cmp
push
outsl
mov
scas
push
lret
dec
jge
push
cld
xchg
cli
mov
outsl
test
inc
pop
inc
and
sub
inc
jmp
test
dec
test
pop
aaa
jno
pop
adc
pop
cs
mov
cmp
xchg
out
xchg
cs
inc
push
mov
scas
dec
pop
ret
lahf
addl
mov
sbb
pop
push
xchg
xchg
inc
inc
push
ja
movsl
data16
popa
mov
sbbl
lret
pop
jle
pop
cs
and
sub
mov
add
shrb
push
mov
mov
cmp
data16
or
clc
loopne
push
shlb
test
addr16
lock
addr16
jmp
or
lods
xchg
mov
inc
insb
mov
loop
insb
mov
fsubl
dec
mov
cli
cmpsl
rclb
inc
sbb
hlt
test
lret
sbb
stos
inc
jecxz
inc
ret
sub
test
mov
cltd
mov
jmp
stc
fadd
int
test
enter
xchg
pop
dec
cmp
pushf
sbb
lret
cmp
sbb
jg
test
int
or
mov
cmp
jmp
shlb
imul
int3
push
loope
xchg
fwait
pushf
subl
or
dec
mov
ret
add
ret
fisubrs
inc
xchg
lret
xor
push
loop
cmp
jno
fwait
inc
cld
arpl
mov
sti
xor
out
negl
leave
push
movsl
cmp
jl
dec
push
test
inc
sub
repz
out
cmpsl
xor
sbb
jge
inc
jge
dec
mov
push
loope
xlat
xchg
jno
hlt
and
mov
sbb
jo
aaa
in
es
jbe
xchg
adc
xchg
or
and
lret
add
cmp
inc
mov
es
xchg
std
out
in
cmp
int3
shr
fsub
ljmp
pushf
fsubrs
jp
and
into
jmp
popa
push
insb
or
repnz
xchg
sub
push
cmp
fcomps
movsl
repnz
mov
push
test
daa
jmp
mov
inc
xor
movsb
inc
pop
pop
push
movl
lods
test
jmp
sbb
mov
mov
sbb
ror
mov
dec
daa
mov
xchg
push
test
lret
xor
dec
mov
test
es
adc
mov
test
bound
popa
iret
filds
insb
dec
pop
xorl
loope
mov
push
push
inc
dec
pop
fistl
es
mov
xchg
pop
xor
into
icebp
int
ds
bound
or
jl
push
jp
jl
xor
rcll
dec
lods
movsb
loopne
push
push
push
cmp
loop
mov
sub
lret
movsb
fs
mov
jo
pusha
je
leave
orl
and
inc
shll
and
fwait
cmp
into
inc
adc
adc
xchg
inc
test
or
mov
push
inc
ret
repnz
stc
lds
jg
mov
sub
enter
jecxz
popf
loop
fnstcw
sti
pop
sahf
in
aaa
fcoml
jmp
adc
ss
lock
stos
cmp
mov
mov
add
sub
mov
sbb
and
or
rcrl
sub
mov
push
inc
xchg
push
stos
add
pop
jge
mov
pop
daa
stos
xchg
push
scas
push
mov
pop
outsb
movsl
sbb
fs
sbb
shlb
aam
pop
or
xor
fistpl
mov
and
insb
fcmovu
das
xlat
cmp
and
pop
mov
lods
mov
mov
mov
jecxz
popa
loop
movsl
inc
mov
sbb
or
jae
dec
dec
dec
dec
xchg
xchg
push
push
scas
xchg
pop
ljmp
je
jle
out
lock
mov
xlat
cmp
xchg
mov
mov
adc
mov
push
or
mov
lahf
xor
mov
bound
push
mov
ret
loopne
cmp
push
pop
push
fdivl
lret
add
jbe
cmpsb
push
push
out
push
out
test
imul
push
test
or
cmp
insb
push
xchg
icebp
jp,pn
js
scas
sbb
sub
loop
out
pop
cmpsl
pop
and
sar
mov
jbe
jmp
aas
and
test
inc
jge
loopne
scas
gs
push
xchg
mov
fimull
cli
xor
adc
xlat
mov
mov
inc
xor
aam
inc
frstor
addr16
ret
out
inc
cmp
clc
data16
popf
orl
lret
mov
push
inc
xor
lods
out
jmp
mov
and
jb
in
gs
dec
mov
scas
lret
test
push
dec
adc
movsl
or
adc
imull
test
int
out
fsubrp
lds
fwait
sub
mov
in
gs
dec
push
enter
xor
jle
jl
ret
movsl
popf
lcall
and
inc
dec
ret
lret
add
data16
inc
and
mov
add
push
jmp
inc
mov
outsl
mov
repnz
sbb
sbb
outsb
movsl
jae
movb
xor
and
mov
imul
xlat
les
in
push
movsl
sbb
cmp
xchg
push
dec
mov
jmp
pop
and
fisubrl
mov
mov
jnp
jmp
das
and
inc
push
push
arpl
xsha256
cmpsb
push
lods
mov
xchg
fistpll
add
out
adc
notl
xchg
and
in
pop
leave
shll
arpl
cmp
jb
mov
data16
jae
dec
sub
out
lret
dec
jecxz
push
xor
and
push
stc
fadds
lcall
insb
jbe
xchg
jb
and
jae
daa
popa
xchg
fbld
xchg
mov
sub
pusha
stos
push
jmp
xor
jle
mov
scas
push
stc
into
sarl
imul
mov
jecxz
and
adc
orl
sub
test
push
mov
mov
addb
mov
mov
add
lods
or
rcrb
lcall
nop
pushf
cmp
cmc
or
ficoml
and
incl
hlt
dec
sti
test
mov
mov
adc
lock
stc
jbe
ljmp
mov
xchg
inc
sbb
addl
push
enter
cltd
adc
or
ret
fldl
cmp
lds
pop
jne
jl
roll
mov
ss
bound
popa
pop
fcomp
dec
fldenv
cwtl
aaa
pusha
scas
mov
mov
xor
pop
jge
jge
push
inc
nop
movsl
push
clc
xlat
fistl
js
or
data16
xlat
dec
or
cmp
pop
lea
mov
lods
cmc
fadd
fimull
fwait
cmp
add
lcall
jmp
push
out
test
les
mov
mov
push
sbb
ds
icebp
sub
bound
push
inc
call
pop
jmp
sub
jecxz
sub
mov
enter
mov
fsubl
sub
mov
pop
pusha
test
stc
dec
mov
movsb
dec
mov
or
cmpsl
aam
cmp
fsts
int3
cmp
mov
dec
jmp
mov
icebp
pop
nop
in
in
lret
leave
aad
jmp
test
xor
inc
and
js
jmp
mov
sub
push
xlat
sub
xchg
jl
xchg
jle
jae
test
cmp
pop
xchg
sbb
leave
fdivl
pop
mov
test
mov
jg
adc
and
add
adc
and
and
dec
int3
imul
in
in
ds
loope
xchg
mov
lret
lods
fwait
dec
jno
cli
sbb
cmp
scas
push
adc
jg
sbb
jo
shr
rol
test
popf
in
dec
mov
inc
mov
lods
outsl
popa
cltd
xchg
jo
mov
psubsb
int3
sub
xor
and
stos
push
jmp
sahf
das
adc
sub
in
inc
nop
lahf
mov
call
imul
lcall
jmp
ds
dec
mov
ds
add
rolb
lods
mov
insb
pop
push
jl
ds
movsl
add
out
dec
out
cmpb
add
or
repz
leave
out
xchg
stos
push
pop
test
push
xlat
mov
aad
jo
push
jo
jl
int3
jae
xchg
inc
adc
ret
push
push
and
adc
cmp
jnp
fidivrl
pop
and
lock
test
pushf
sbbb
jne
pop
out
sub
push
dec
mov
insl
mov
push
loopne
movsb
adc
jno
jno
pusha
fisttpll
jne
fstp
mov
pop
out
jne
xchg
jno
inc
pop
iret
subb
sub
jp
out
sahf
in
ljmp
test
shll
sub
lock
icebp
stc
lret
sub
jle
icebp
mov
sub
or
sub
fs
or
ret
shl
enter
and
and
and
push
mov
mov
addr16
mov
aaa
xlat
pop
mov
mov
push
cmp
dec
sub
jl
clc
stc
pushw
popa
stos
add
or
imul
pop
push
push
mov
loop
leave
pop
rorb
mov
xor
pop
fldcw
pop
xchg
mov
aaa
mov
loop
sub
in
je
jb
ds
add
mov
jecxz
pop
pop
add
add
imul
or
or
stos
popa
loopne
fldl
jns
mov
js
frstor
fsubrl
mov
push
rcrl
loope
sub
pusha
push
jl
hlt
dec
fdivrs
mov
loop
aaa
cmc
push
outsl
dec
push
repnz
leave
sbb
cmp
loope
aad
test
xchg
icebp
ss
jbe
inc
xlat
dec
add
and
mov
popf
mov
cmpl
es
lods
cmp
xchg
push
sbb
dec
arpl
mov
pop
mov
sti
scas
sbb
js
je
adc
sbb
lret
cmp
lret
lds
mov
gs
stos
cltd
push
cltd
inc
mov
scas
add
jecxz
cli
cmp
out
pop
xchg
dec
andb
data16
fwait
psllq
cs
mov
sub
and
hlt
sbb
movsl
sbb
cmp
cmp
lds
movsl
sbb
mov
std
xor
mov
dec
test
cmpsb
dec
sarl
rorl
mov
dec
pop
popa
push
lea
addr16
inc
push
mov
pusha
clc
ficompl
out
adc
xor
lret
enter
sbbb
mulb
ja
popa
inc
out
ljmp
add
outsl
cmp
push
adc
fiadds
mov
mov
add
mov
btl
xchg
jl
out
xor
nop
jp
mov
sti
jne
sti
mov
call
inc
std
fcmovnu
fcomps
jns
repnz
andl
mov
add
shll
int3
lea
rcl
xchg
xor
sbb
stc
subl
loopne
out
and
icebp
adc
inc
cmp
dec
and
cwtl
fwait
mov
mov
add
sub
dec
vpshad
sbb
xchg
data16
fstpt
repz
jp
adc
fsubs
add
inc
cmp
push
jbe
dec
xchg
sbb
jmp
adc
jns
int3
add
add
daa
sbb
les
test
pop
push
inc
out
and
or
jmp
jmp
pop
je
dec
leave
or
mov
add
add
and
rol
xchg
fmul
scas
xchg
lcall
xor
xchg
push
jg
dec
fsts
cmc
fisubs
lahf
inc
bound
or
int3
adc
jae
aam
inc
cmp
add
cmp
imul
add
inc
cwtl
pop
cli
fsubrs
sarb
or
and
cmc
mov
push
out
xchg
mov
xchg
lret
add
mov
jmp
repnz
push
cmpl
fdivs
ret
sub
pop
jb
out
dec
outsl
pop
mov
out
pop
pop
mov
sbbb
mov
fdivrl
jle
or
adc
dec
in
lret
sbbl
les
sbb
hlt
cmp
dec
xchg
xor
jno
jns
shrb
cltd
ret
ljmp
dec
stos
jne
add
imul
cli
scas
jp
popaw
cmpsl
cmp
xlat
cmp
outsl
icebp
push
mov
mov
outsb
and
cmpsb
sub
daa
push
cli
in
mov
mov
rolb
jmp
pop
bound
mov
shll
inc
addb
cs
sbb
jmp
mov
cmp
push
in
xchg
adc
push
jne,pt
aad
addl
ficomps
sub
stc
lock
inc
push
aas
je
jae
cmp
lret
mov
xchg
cs
mov
xor
jecxz
sbb
iret
adc
mov
jl
daa
sbb
mov
jmp
add
rorl
sub
out
aaa
mov
mov
sub
fadds
pop
add
ljmp
jo
mov
inc
dec
or
jecxz
out
movsb
scas
inc
sbb
stos
iret
loopne
jl
ror
mov
fsubr
or
sub
scas
push
stos
pop
int
or
sbb
mov
pusha
stos
fwait
push
test
jnp
sbb
js
hlt
adc
outsl
out
pop
cmp
f2xm1
add
sub
popf
pusha
push
sbb
sbb
sub
inc
lret
or
les
test
mov
mov
sbb
pusha
in
imul
inc
adc
xchg
xchg
stc
in
nop
push
ljmp
ficoms
and
cmp
inc
add
sbb
sbb
xchg
jne
dec
addr16
sub
push
shll
pop
sarl
mov
mov
pop
loope
pop
jae
nop
into
in
jo
lcall
mov
xchg
js
std
inc
aas
stos
sub
stos
inc
rcl
stos
aas
xor
imul
xchg
cmp
push
push
xor
jno
cwtl
aas
jge
jns
fs
subb
xchg
jnp
pop
xor
sahf
inc
out
adc
popa
insb
mov
iret
pop
addb
pop
dec
adc
mov
imul
or
push
movsl
mov
jno
push
shlb
pop
mov
or
data16
sahf
jecxz
push
dec
jb
in
addl
and
xchg
and
lods
pop
ret
sahf
push
add
es
xor
mov
pop
lcall
fdivp
stos
or
addr16
push
bound
mov
clc
popa
dec
cs
shlb
jle
cmp
mov
fmul
fstl
mov
fidivl
leave
cmpb
scas
mov
clc
push
mov
shl
stos
subl
pop
cmpsl
inc
scas
mov
out
or
pop
sub
jecxz,pt
in
mov
adc
mov
add
adc
fs
xor
in
sub
dec
push
pop
xchg
bound
fildll
test
jno
in
femms
sbb
mov
int
dec
mov
pushl
sbb
ret
inc
outsb
int
aam
push
shl
iret
mov
lea
sub
dec
jbe
inc
xchg
fildll
std
push
sahf
out
push
clc
adc
sub
pop
mov
jae
mov
incb
sub
cwtl
dec
icebp
mov
mov
push
mov
into
add
jecxz
pop
or
test
mov
ljmp
cmp
arpl
add
pop
loope
aam
cs
pop
scas
adc
leave
sahf
push
dec
cmp
cmp
cmp
mov
arpl
jge
xchg
mov
jecxz
cmp
xor
cli
xchg
mov
cmp
sti
mov
ret
shl
je
and
fwait
mov
xchg
mov
jge
dec
clc
int
xchg
ja
pop
out
js
xor
adc
int3
push
inc
lret
mov
and
and
pop
std
jp
xchg
mov
pop
jl
pushf
das
pushf
cmpb
and
pop
sub
inc
loope
xchg
xor
test
cmp
or
ds
or
int3
dec
insl
cli
mov
test
sub
aad
mov
cs
movsl
dec
mov
push
out
mov
cmp
int3
sarl
jecxz
pop
mov
dec
repnz
inc
jp
or
into
pop
in
pop
shrl
out
rcrl
jg
fmuls
or
xor
imul
pusha
adc
lret
out
push
arpl
sbb
call
jb
sub
movsl
fcmove
and
das
mov
mov
adc
mov
pop
test
jp
and
pop
lret
push
pop
arpl
imul
fimuls
mov
mov
fsub
xchg
rcrl
and
jns
dec
in
add
add
adc
pop
shlb
pop
pop
sub
mov
popf
in
adc
xor
adc
push
adc
sti
push
iret
adc
das
mov
fists
outsl
xchg
fidivrs
adc
xchg
ret
pop
cmpl
hlt
push
lods
sbb
cmp
stos
jb
jge
mov
outsl
iretw
pop
loopne
outsb
outsl
jne
repz
and
and
inc
adc
lock
outsb
pop
or
lret
jl
test
and
movsb
ror
mov
sub
in
rcr
jbe
out
xchg
mov
ss
sbb
lods
mov
aad
cmpsb
stos
mov
mov
rolb
push
mov
cmp
std
inc
jo
xor
xor
pop
imul
inc
cs
lock
sub
sub
sahf
dec
test
adc
inc
add
xchg
inc
outsb
mov
lahf
rorl
mov
out
jno
pop
test
fstps
lahf
xor
bound
dec
lods
cltd
jl
cmpsl
shrb
add
popf
mov
cld
cmp
push
shl
mov
or
popa
pushf
imul
mov
jmp
loopne
xor
call
iret
ret
push
xor
jnp
test
divb
jle
pop
dec
ret
mov
inc
jne
jge
add
pop
jne
popf
cmp
sub
sbb
fsubrl
xlat
jg
js
pop
jge
mov
roll
xlat
iret
enter
ret
sub
dec
mov
les
and
std
xor
pop
adc
push
fisttps
popf
movsb
and
out
cwtl
test
notl
je
sahf
xchg
aas
sub
lret
adc
dec
cmpsb
pop
shll
loope
cmc
aad
mov
sbb
fmuls
daa
lods
cwtl
mov
push
pop
aad
fdiv
rorl
decb
ja
js
pop
inc
jle
cmpsb
inc
daa
xchg
mov
fsubrs
mov
adc
cltd
insb
shr
add
xchg
cmp
inc
dec
push
xchg
xor
xacquire
add
loope
jge
pop
icebp
inc
movsl
arpl
inc
xor
jmp
loopne
pushl
das
jg
add
fmulp
inc
das
cwtl
out
inc
xchg
and
push
mov
shll
das
mov
jb
dec
in
aaa
xor
das
sbb
jb
sbb
push
inc
into
pop
mov
add
cltd
and
dec
cs
out
mov
jne
xchg
loop
xchg
mov
jns
popa
out
shrb
mov
inc
mov
sbb
popf
add
xchg
icebp
sti
mov
sarb
push
sti
outsb
subb
or
dec
orb
mov
les
mov
jle
push
pop
adc
int
sbb
pop
test
aaa
enter
or
dec
sbb
leave
push
sbb
outsl
sar
xchg
bound
scas
shll
jns
jae
jmp
lds
ror
jnp
pushf
mov
xlat
cwtl
subl
push
and
fs
mov
leave
outsb
inc
dec
movsb
pop
lret
clc
xor
mov
repnz
lret
pop
ret
loope
ljmp
pop
ret
mov
push
pop
xor
fisubl
inc
cli
xor
stos
add
pop
aad
lds
or
cmp
ficoml
inc
cli
xor
stos
add
pop
aad
lds
or
cmp
ficoml
inc
cli
xor
stos
add
pop
aad
lds
or
cmp
ficoml
cli
xor
stos
add
lock
lds
push
jp
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
icebp
data16
sarl
shrl
jno
pusha
or
inc
sub
pop
and
jns
imul
mov
mov
popf
jno
popa
sub
inc
sub
and
cmp
imul
adc
stos
mov
mov
icebp
jno
inc
push
inc
pop
xor
dec
and
imul
out
sub
in
xor
sbb
imul
add
cwtl
jecxz
adc
outsl
mov
in
scas
push
mov
mov
mov
mov
mov
aam
sbb
bound
xor
movsb
popa
jns
dec
je
add
pop
loope
mov
fnstenv
cld
out
pop
scas
or
aad
pop
popa
mov
xchg
xor
push
mov
popa
xor
ds
std
mov
jmp
aam
cmp
bound
fimuls
push
push
xor
test
xchg
jae
push
dec
sbb
adcl
popa
pop
lods
mov
jns
in
cmp
cmp
mov
imul
inc
popa
xor
mov
jns
pop
mov
xchg
mov
lods
shll
jno
add
push
dec
cmp
and
xchg
faddl
mov
in
jmp
jl
pop
push
pop
inc
dec
xor
dec
add
xchg
iret
loope
mov
mov
sub
push
cmp
xor
dec
adc
imul
mov
mov
jmp
push
cmp
xor
dec
adc
imul
sbb
test
mov
mov
push
pop
js
mov
push
pop
shr
jnp
xchg
addr16
fistl
adc
adc
insb
jp
pop
dec
jl
in
add
into
leave
push
jnp
repz
cmc
mov
aam
bound
lods
fsubrs
mov
ljmp
or
push
xor
or
mov
test
loop
lret
add
das
ljmp
jbe
shl
sarb
insl
sbbb
mov
mov
mov
pop
mov
lcall
neg
movl
inc
pop
test
xor
push
adc
sub
sub
daa
icebp
push
pop
pop
adc
mov
xchg
fnstcw
data16
xchg
fwait
fwait
xchg
push
in
aaa
push
lret
gs
ja
ret
add
adc
push
xor
iret
jnp
aam
inc
inc
lahf
xor
cli
inc
xlat
out
dec
adc
and
loop
mov
xchg
cmp
xchg
push
inc
fwait
inc
xor
push
sbbl
sbb
lahf
ss
add
and
outsb
out
xor
mov
mov
iret
mov
xor
aaa
gs
xchg
mov
cmpsl
stc
repnz
aas
ror
sbb
and
and
inc
inc
rolb
pushf
cmpsb
cmp
jge
and
sbb
mov
push
bound
adcl
push
pushf
mov
inc
mull
sub
loope
int
lret
inc
scas
repnz
call
mov
movsb
fwait
xchg
push
in
in
xorb
or
mov
test
lock
mov
mov
imul
xchg
mov
xchg
adc
push
mov
test
cmpsl
cld
aad
sub
subl
sub
push
fwait
mov
add
cmp
mov
repnz
add
nop
mov
cmp
xchg
pushf
out
test
fmuls
negl
and
in
xlat
ret
outsb
or
push
aaa
jle
inc
xchg
lahf
xor
xor
mov
jne
mov
mov
imul
adc
addl
add
mov
sub
int3
sbb
and
sub
sti
push
mov
ljmp
pusha
and
adc
orb
push
test
inc
roll
sub
cmpsl
test
jae
dec
fsubs
sub
aas
push
leave
mov
sarb
ljmp
aam
fwait
aad
mull
push
cmpb
imul
and
lcall
and
xor
sbb
daa
xor
mov
adc
dec
push
insl
es
out
xor
leave
mov
dec
idivl
inc
cmc
popf
shll
push
fcmovnbe
fstps
mov
jl
pop
mov
test
pop
inc
mov
hlt
xchg
ret
fwait
mov
shrl
xor
inc
push
pop
std
pop
scas
cld
cmp
mov
cmp
cmp
jp
xor
mov
xlat
inc
mov
sbbl
sbb
add
jae
jmp
xor
pop
xor
std
xor
movb
xchg
xchg
insb
jecxz
mov
mov
push
mov
ss
popa
in
or
cmp
pop
pop
mov
lds
pop
aaa
sub
roll
ret
mov
mov
lret
jmp
test
daa
xor
cmp
xor
insl
into
push
int
outsl
mov
mov
std
sub
mov
sub
xchg
rol
sti
pop
es
nop
ja
test
jge
and
inc
les
les
push
mov
push
jge
inc
sbb
jecxz
adcl
xchg
fidivl
mov
callw
jl
test
mov
inc
mov
dec
shll
xchg
sbb
sbb
push
fs
pop
push
jmp
imul
lods
rcrb
sub
mov
adc
js
pop
adc
push
pop
and
dec
shr
jns
movsb
cmp
cltd
mov
sahf
mov
loopne
mov
scas
sub
mov
dec
mov
data16
mov
clc
js
cmc
daa
imul
sub
adc
fisubl
in
push
aas
sub
push
mov
dec
xchg
dec
ds
insl
mov
lret
lret
daa
inc
outsl
mov
jp
pop
ror
add
sub
or
pop
cwtl
pop
std
popl
lret
mov
loop
clc
and
lcall
fdivl
push
sbb
push
sbb
and
xchg
mov
ss
push
push
mov
and
mov
imul
lods
xchg
ljmp
ja
xchg
adc
mov
and
and
insb
mov
movsb
and
dec
sub
fdivs
mov
add
fucomip
clc
addr16
lcall
mov
jl
filds
ret
sbb
push
andb
out
sbb
push
adc
stos
jno
push
unpckhps
imul
leave
call
pushl
xor
loopne
outsl
jmp
icebp
out
pop
dec
addb
cmp
das
shrl
icebp
inc
in
mov
jbe
ljmp
out
mov
aas
sti
rclb
push
sbb
js
cltd
adc
hlt
loopne
mov
sti
cmp
inc
outsl
lcall
cwtl
pop
xchg
push
add
and
fiaddl
inc
push
inc
push
push
pop
jo
inc
es
sbb
arpl
jp
pop
in
adc
inc
pop
pop
sbb
jle
jne
decl
in
jae
dec
sbb
mov
testl
mov
pop
cld
lret
add
in
test
lret
pop
and
repnz
loope
out
je
jne
or
in
mov
cmp
cwtl
movsl
inc
loopne
subb
cmpsb
dec
or
or
and
push
push
mov
jo
xchg
cltd
bound
mov
sub
mov
imul
lock
dec
movlps
pop
or
js
mov
sub
bound
jecxz
popf
xor
call
pop
enter
adc
inc
xchg
outsl
jbe
xlat
mov
call
std
ret
mov
nop
lret
jae
xchg
stos
repz
notl
add
out
shrl
pushf
mov
cmp
xor
sbb
jp
fisttps
icebp
sbb
xchg
mov
testl
out
or
xchg
test
mov
testl
rorl
mov
lcall
inc
pop
cmp
add
insb
cmp
sbb
lods
jbe
mov
jbe
insl
xor
lea
add
lea
data16
out
push
and
xchg
sub
inc
pop
pop
in
jle
sbb
imul
jns
mov
popf
loope
in
pop
in
in
test
mov
cmp
lds
loop
push
cmp
adc
mov
in
shlb
xchg
hlt
ret
and
pop
adcb
inc
inc
out
xchg
cmp
inc
xchg
negl
fwait
aaa
dec
test
daa
ljmp
xchg
xchg
mov
mov
aam
daa
push
push
mulb
fwait
and
push
inc
stos
ds
fadds
icebp
dec
stc
addr16
mov
cmpsl
sbb
frstor
scas
imul
mov
xchg
in
icebp
fsubs
mov
in
es
adc
push
adc
clc
or
and
roll
call
xchg
push
xchg
aas
mov
mov
shlb
jae
out
mov
lods
fadd
cwtl
stos
ljmp
and
mov
push
jo
xor
mov
lods
xchg
push
sahf
mov
mov
or
xchg
fcomps
fnstenv
sarb
push
adc
sarb
or
dec
adc
std
daa
sub
pop
jecxz
xor
jecxz
mov
xchg
inc
and
das
lds
mov
inc
cmp
push
test
xor
out
adc
shlb
mov
push
or
mov
out
lret
leave
insl
sbb
lods
xchg
pop
cltd
arpl
lcall
fsubl
mov
sahf
insb
xor
test
orl
jb
sbb
int3
mov
jmp
dec
mov
and
aad
mov
out
pop
mov
mov
mov
cmpsl
cmp
call
mov
int3
pop
adc
push
les
pop
jp
inc
pop
inc
negb
sub
mov
jo
mov
jno
mov
fistpl
ret
cmp
xchg
test
fcompl
ficomps
icebp
cmp
lahf
inc
add
loopne
xchg
mov
in
inc
daa
sbb
repnz
addl
push
pop
jbe
inc
fildll
in
rorl
or
add
pop
nop
mov
add
into
insl
pop
pop
lock
add
popf
notb
aam
dec
enter
inc
inc
out
mov
mov
add
pop
dec
imul
sysexit
sarb
out
inc
pop
xorl
jge
xor
jno
cmp
dec
dec
arpl
and
pop
ss
xchg
adc
cwtl
and
fwait
mov
lds
sbb
sbb
movsl
mov
cmp
iret
mov
pusha
mov
stc
cmpsl
test
stos
xchg
add
jle
and
shll
mov
or
inc
decb
cs
mov
adc
enter
mov
out
or
adc
subl
mov
xchg
or
push
push
mov
cmp
xadd
movsb
icebp
pop
xor
andb
in
cmpsl
adc
xchg
ds
mov
cmp
fbstp
pop
lcall
stc
xchg
dec
xchg
movsl
addr16
popf
jns
xor
push
inc
add
pop
pop
add
and
sub
pop
dec
pop
push
mov
mov
inc
jo
fcomps
inc
ljmp
sbb
rolb
jno
fwait
jnp
sbb
lods
imul
iret
add
popf
cmpsl
inc
daa
jnp
jno
inc
lahf
test
mov
adc
neg
adc
inc
insb
arpl
xor
in
bound
das
inc
clc
bound
push
lret
and
mov
pop
push
ret
pop
push
mov
ljmp
xchg
mov
nop
mov
mov
les
cmpsb
xchg
sub
dec
push
xchg
sbb
ja
jbe
adc
cmpsb
inc
test
outsl
xor
xor
jg
xor
stc
xor
push
in
xor
or
dec
lcall
test
jecxz
mov
mov
out
dec
stos
fdivrl
cmp
mov
clc
mov
pop
push
jo
out
or
cs
sbb
cmpsb
inc
int
in
leave
xchg
push
add
aas
rcr
cmp
shlb
fadd
imul
aaa
xchg
daa
nop
inc
cli
xorb
and
pop
jp
daa
popa
loopne
mov
idivl
arpl
js
arpl
int3
jb
jge
stos
cltd
ja
push
jnp
pop
xor
adc
push
leave
clc
inc
rcrb
in
ret
das
dec
leave
pusha
lock
out
insb
mov
mov
sub
popa
out
hlt
mov
sub
sub
xchg
pushf
pop
jnp
lcall
testb
call
and
outsl
out
xor
push
pop
mov
xor
jo
sbb
imul
imul
cmp
mov
adc
iret
popa
pop
pusha
jle
test
jmp
xchg
mov
arpl
push
pavgw
push
add
add
pop
xchg
out
push
insl
mov
andb
pop
cmp
adcl
pop
mov
or
mov
inc
imul
mov
rol
loope
mov
daa
pop
add
xchg
lcall
push
cmc
loope
cmp
and
sti
adc
lret
or
or
jo
lods
and
and
mov
jmp
call
xchg
lcall
add
mov
or
movsl
adc
inc
je
push
inc
mov
ret
aas
cmp
or
pop
sub
push
imul
aam
imul
cmp
and
cwtl
out
dec
pop
and
add
stos
add
cmpsb
mov
in
addr16
add
cmp
inc
mov
mov
mov
enter
xor
addl
aad
aam
lret
mov
cli
imull
cwtl
mov
or
outsl
push
xchg
sub
push
push
scas
add
or
jl
icebp
fcomip
dec
cwtl
inc
cvttps2pi
xchg
jae
cmpsb
or
js
insb
addl
push
mov
imul
pop
hlt
ret
mov
adc
push
fcomip
pop
jae
lea
es
movsl
lods
mov
jo
ficomps
inc
mov
mov
sub
sub
and
stos
mov
ja
addl
xchg
dec
cmp
loop
jmp
mov
mov
sbb
add
sub
mov
dec
loop
clc
scas
es
stc
in
adc
lods
shlb
xor
and
adc
test
mov
and
jbe
lret
daa
add
clc
loopne
fwait
test
push
mov
test
sbb
sub
jb
or
mov
dec
cmp
sbb
cmp
sti
pop
jmp
lcall
jae
adc
into
mov
lds
call
and
mov
aam
push
lahf
iret
sti
xchg
mov
dec
pop
mov
lret
insl
data16
pop
sahf
jecxz
push
xor
shlb
jge
sbb
push
dec
iret
out
and
outsl
mov
outsl
or
call
xor
xor
adc
stos
adc
xor
ffree
jecxz
xchg
addr16
mov
repnz
das
pop
subl
in
cli
pop
lock
js
xchg
pop
movsl
cvtpi2ps
ret
jg
dec
cmpsl
leave
adc
pop
cmpsl
fiadds
push
mov
sub
or
outsb
popa
testl
xchg
popa
les
mov
sub
fneni(8087
mov
cmp
pop
ss
pop
mov
jp
fstpl
dec
adc
mulb
push
push
pop
jns
out
xchg
adc
fcomps
inc
or
pop
mov
dec
xchg
out
jns
inc
cmpl
adc
sub
orl
dec
cmp
fmul
imul
inc
lds
clc
or
push
in
test
testl
test
inc
movsl
sbb
add
push
or
cmpsl
loopne
jns
dec
leave
or
cld
push
xchg
imul
jmp
xchg
xchg
jnp
lcall
mov
jo
fisubl
push
jns
out
imul
idivl
xor
dec
add
lods
in
iret
jo
sub
mov
xchg
inc
pop
lret
cmpsb
sbb
test
adc
cwtl
cwtl
sub
push
std
push
je
cmp
in
inc
ret
mov
scas
pop
in
xlat
pop
or
in
push
mov
push
mov
jmp
inc
inc
push
mov
pushf
jle
jp
call
adc
inc
mov
sti
sahf
in
xchg
mov
sti
push
stos
sub
jbe
sbb
mov
test
mov
push
aaa
cmp
xor
push
inc
adc
push
inc
xor
loop
or
insb
add
lods
int
fstpt
push
mov
mov
cmp
sbb
fsubrp
or
loopne
mov
jo
cmp
aas
sbb
fisttps
fcmovnu
jecxz
cld
sti
mov
testl
mov
sub
insb
arpl
addr16
insl
das
mov
mov
push
xchg
pop
mov
ljmp
or
bound
jae
outsb
popa
pop
sbb
int3
inc
or
aad
jns
xchg
jae
sti
xchg
add
stos
pop
ja
repnz
pop
repz
sub
add
loopne
or
xor
fwait
stc
std
arpl
pop
mov
and
xor
adc
ficoms
out
sbb
lahf
push
cld
sbb
push
adc
jnp
pop
outsl
hlt
loope
test
es
cmp
xchg
cmp
xchg
daa
mov
repnz
mov
outsl
xchg
aaa
inc
mov
cwtl
pop
mov
sti
leave
dec
jo
pop
sub
cltd
cmp
outsb
dec
mov
fadds
jb
mov
mov
mov
mov
push
outsl
fnstenv
jl
mov
testl
push
mov
pop
movsl
scas
dec
pop
cmc
insb
adc
and
pop
pushf
test
data16
jo
stc
lret
test
es
sti
xchg
inc
lret
xor
arpl
es
push
fstl
push
and
imul
std
inc
sub
pop
inc
pop
mov
stos
mov
out
or
into
adc
loopne
aaa
cltd
xor
pop
jmp
ret
sub
loopne
pop
mov
adc
insl
lea
pop
es
in
lret
aad
and
negb
xchg
sub
rcrl
test
mov
add
adc
nop
jnp
xchg
lret
inc
mov
mov
jecxz
in
pop
sub
int3
mov
xchg
out
stc
ficompl
dec
sbb
cmc
cmp
pop
mov
xchg
es
cwtl
ret
push
fcmove
daa
je
mov
es
dec
pop
nopl
jb
sub
add
jecxz
fbstp
or
push
cmp
jns
sub
das
popf
lcall
inc
mov
sbb
pop
mov
xchg
mov
jecxz
mov
adc
and
or
jecxz
jg
push
loop
jmp
jno
leave
cmp
jmp
xor
jno
pop
lcall
add
out
xchg
mov
aad
xchg
sbb
aaa
adc
mov
xchg
insb
push
hlt
mov
scas
lret
xor
add
adc
loop
push
ret
push
inc
loopne
mov
fcompl
push
adc
repz
sbb
push
pop
lea
jmp
mov
stos
xor
lret
cld
lret
shrb
sbb
mov
dec
outsb
sahf
bts
jb
dec
mov
lret
xchg
push
jmp
shl
sti
enter
mov
shlb
movsb
jnp
cmp
jbe
inc
cld
mov
js
xor
ds
aam
pop
mov
sub
test
mov
rorb
test
push
jae
inc
lcall
mov
dec
cltd
mov
in
shrb
jnp
jp
and
cmpsl
int3
pop
or
out
adc
sub
dec
jg
sti
cli
fnsave
push
pop
pop
jmp
push
stos
cltd
mov
jmp
cwtl
scas
dec
pushf
jne,pn
inc
and
addr16
int3
mov
packssdw
push
and
rcrb
leave
sbb
aaa
in
addb
inc
pusha
mov
or
lods
dec
mov
das
test
jne
inc
negb
mov
lods
imul
mov
scas
sbb
sub
or
and
ss
popaw
and
jp
push
out
cmp
inc
mov
xor
in
sbb
add
ret
xor
daa
dec
aam
and
and
aam
inc
shrl
jns
out
loop
lahf
pop
int3
aaa
jle
inc
call
adc
std
ret
jge
xchg
sbb
mov
rcl
adcl
int
mov
xchg
sbb
adc
adc
aam
test
push
cli
in
sbbb
mov
inc
mov
xchg
mov
pop
xchg
jmp
jle
inc
inc
mov
sti
mov
jno
popl
mov
aam
lock
mov
mov
adc
andl
ret
cmp
sbb
mov
pop
push
cmc
push
pop
outsb
mov
cwtl
xor
xor
push
xchg
scas
outsl
int3
xchg
xchg
xchg
push
sbb
pop
cmc
adc
lods
hlt
pusha
xchg
cmp
mov
js
ficoml
call
rcrl
insl
mov
int
sub
pop
xorb
adc
and
leave
xchg
push
add
loop
jne
outsb
out
xor
imul
sbb
or
loopne
jbe
bound
divl
fwait
sahf
cmp
add
pop
sub
rcl
idivl
fiaddl
scas
cld
test
mov
and
insl
jnp
pop
lcall
fwait
out
and
mov
insl
jo
out
mov
inc
lods
cli
xor
sub
jnp
ret
pusha
adc
mov
xchg
xchg
jbe
xchg
jbe
popa
add
dec
add
movsl
jle
cmp
std
fmulp
jmp
sbb
jg
iret
mov
icebp
mov
aad
test
xchg
stc
sub
push
cmp
xor
dec
adc
imul
mov
mov
jmp
push
cmp
xor
dec
adc
imul
rol
xor
mov
jmp
push
cmp
xor
dec
adc
imul
mov
mov
jmp
sti
cmp
inc
rcll
popa
xchg
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
xor
dec
adc
outsb
cmpsb
or
and
cs
mov
repz
loope
ret
mov
and
jle
outsb
jae
arpl
push
ds
pop
mov
decb
mov
mov
cmp
sbb
pop
jnp
dec
es
xor
fiadds
fwait
repz
pop
adc
sbb
and
arpl
xchg
fldl
sbb
fucomi
sti
data16
or
xlat
mov
fadd
imul
pop
outsb
arpl
rcl
and
adc
dec
cmp
int3
ret
loopne
inc
xor
or
pop
into
stos
xchg
push
adc
cmp
aaa
sarl
xor
mov
bound
lods
dec
inc
stos
cmp
mov
arpl
jecxz
pop
inc
ret
mov
sahf
and
jnp
ss
mov
xor
pushf
jecxz
sub
shrl
cld
in
xchg
popa
stos
mov
mov
movsb
out
add
adc
mov
cmp
add
push
jae
push
ds
aaa
stos
fidivrs
imul
xchg
xchg
leave
movsb
ret
scas
pop
pop
inc
cmp
sbb
add
dec
mov
iret
into
loopne
out
repz
xchg
aaa
inc
daa
jl
jae
pop
push
arpl
dec
adc
stos
stos
xchg
fwait
ret
out
mov
push
pop
dec
dec
jg
imul
sub
inc
cs
mov
out
repz
jecxz
sarl
and
jle
outsb
jae
arpl
push
ds
cs
mov
out
repz
jecxz
sarl
or
lods
stc
jo
pop
xchg
add
xchg
inc
jecxz
jg
sahf
mov
fwait
rep
add
jnp
jge
mov
or
gs
dec
fs
pop
in
adc
xchg
or
test
cmc
inc
loop
and
xchg
repz
mov
test
inc
sbb
rorb
jb
mov
mov
mov
clc
sbb
inc
js
sbb
push
dec
mov
test
out
inc
adc
mov
or
cmp
mov
arpl
shll
mov
rcl
mov
mov
pushf
push
inc
sub
mov
lret
sti
jns
ds
adc
jp
test
and
incb
dec
xchg
lea
cs
xchg
xchg
sub
mov
push
xor
filds
es
xor
mov
data16
negl
and
js
cmp
in
pop
push
sbb
pop
std
andl
aas
xor
aaa
fbstp
mov
icebp
int3
and
imul
jl
pop
push
or
mov
sub
fstps
repnz
call
xchg
dec
inc
sbb
es
cmp
inc
or
sar
adc
popa
shrl
xorl
lds
cmovnp
arpl
jae
icebp
mov
pop
test
pop
and
lcall
add
sub
push
or
adc
cmpsb
outsb
xor
sub
pop
inc
sbb
test
mov
jmp
pop
mov
jo
int
inc
sti
and
mov
fidivs
jmp
xor
xor
jbe
or
fisttpll
sub
scas
mov
dec
add
scas
lds
into
ret
sbb
fwait
mov
call
in
mov
int
shlb
dec
divl
mov
lds
ret
xchg
stos
and
mov
sbb
jecxz
loopne
sub
pop
or
aaa
scas
out
adc
dec
sahf
pop
es
sub
fisttpll
mov
in
cmp
adc
bound
adc
add
mov
pop
das
push
insl
mov
movsl
jns
int
gs
lods
out
jmp
aas
jecxz
divb
add
out
pop
sarl
pop
push
arpl
push
es
cmp
adc
outsb
inc
jo
pop
std
scas
push
test
in
and
xor
inc
out
addr16
push
sahf
mov
xor
dec
xlat
push
jle
and
test
mov
adc
iret
sbb
mov
je,pn
jae
and
and
and
dec
sbb
ret
aaa
jp
push
out
xor
sahf
jns
or
or
lods
mov
jg
aaa
ljmp
sbb
add
mov
call
push
repz
mov
push
and
mov
ficoms
add
jae
shrl
xchg
scas
data16
dec
frndint
push
xorl
jae
dec
xchg
push
jge
xchg
mov
fwait
and
cmp
lret
and
fwait
aad
imul
popf
iret
mov
movsl
pop
lods
fistl
loope
adc
mov
dec
push
sahf
pop
push
decb
mov
in
data16
out
lcall
imul
loopne
push
rcrb
in
into
leave
cmpsb
push
dec
mov
mov
movsl
imul
jbe
jne
xor
mov
ss
outsb
lds
jne
mov
pop
stos
pop
es
mov
dec
add
mov
iret
jp
outsb
lock
in
push
sub
fwait
cmc
jg
jle
stos
jg
push
insl
ljmp
cwtl
stos
mov
push
ret
cmc
idivl
push
cld
inc
jo
scas
js
pop
repnz
incl
sbb
loope
lock
add
lock
jns
movsb
mov
ljmp
bound
pop
lahf
iret
dec
push
jae
jb
orl
push
mov
xchg
es
shr
mov
pusha
mov
inc
and
push
xchg
sahf
fidivrl
ljmp
sub
xor
movsb
add
push
and
sub
mull
outsb
xchg
mov
shr
sub
push
inc
sub
scas
lgdtl
cmp
xlat
ljmp
lret
outsl
cwtl
shl
mov
lret
xchg
imul
jg
xchg
ja
dec
out
jge
fimull
xchg
xchg
pop
out
das
cltd
push
sahf
jl
jae
add
cmp
fs
pop
std
mov
sub
rolb
mov
cmp
pop
sbb
inc
daa
cmp
out
and
fildll
test
addr16
stos
repnz
sbb
in
push
test
fcmovnb
add
enter
push
sub
mov
jnp
test
push
pop
icebp
pop
imul
iret
loop
mov
popf
testl
cmc
pushf
jle
mov
addr16
mov
movsl
fld
cmp
fmul
pop
jae
or
test
out
or
adc
mov
pushf
and
int
adc
cmp
jno
push
stos
sub
push
add
stos
cld
and
jecxz
mov
jmp
push
dec
and
xor
mov
insl
push
outsl
push
mov
push
repnz
fisttpl
xor
push
sbb
push
mov
xor
jbe
adc
arpl
insb
lods
in
mov
cmp
push
es
sub
mov
jg
push
popf
repnz
or
out
inc
and
xchg
pushf
fs
stos
pop
pop
clc
shl
cmp
mov
jp
cmp
xchg
mov
mov
shrl
cmpsl
roll
or
insl
cmp
mov
jb
ret
xorl
sub
push
into
lcall
ficoms
cmpsb
popf
call
jnp
test
ja
pop
cs
nop
jb
lock
sub
cmc
negb
cmp
or
int
or
imul
int3
div
dec
jo
enter
and
setp
jbe
pusha
fldl
iret
sub
pop
mov
rclb
in
jle
adc
xor
dec
push
outsb
andb
nopl
xchg
mov
mov
cmp
cmp
push
mov
sbb
push
sti
loopne
or
mov
mov
inc
fcomps
add
jmp
mov
rcl
or
out
push
dec
test
cmp
test
pop
fxtract
push
cmp
pop
mov
push
cmp
imul
aad
loop
add
imul
cmp
dec
mov
in
outsl
cmp
sbb
mov
mov
jmp
cmp
xchg
dec
sarl
lret
xor
mov
repz
xor
sub
loop
fisttpll
mov
mov
imul
adc
insb
rolb
imul
xor
inc
sub
cmp
xchg
inc
mov
adc
sub
fwait
sbb
mov
inc
jbe
test
out
arpl
jae
add
lds
jge
push
push
cmpsl
inc
sbb
and
je
mov
push
and
push
adc
mov
push
inc
jne
mov
sti
rolb
leave
and
sub
lcall
mov
push
std
rol
fdivs
movl
pop
or
fisttpll
jle
je
enter
sub
sbb
imul
pop
xchg
mov
in
mov
or
cltd
fadds
mov
mov
call
mov
add
sub
cs
imul
mov
or
daa
adc
nop
out
push
cmpsl
repz
pusha
mov
mov
sarl
push
and
or
stos
push
sahf
pop
js
mov
stos
test
icebp
mov
aas
or
mov
fstps
mov
inc
sub
out
popf
sub
adc
ficompl
inc
dec
pop
mov
ljmp
cs
adc
inc
iret
mov
jl
inc
insl
fdivrs
pop
pop
and
xor
push
xor
rcr
mov
je
pop
cmc
cmp
aam
std
fsubrs
mov
add
movb
add
jl
in
ljmp
xchg
incb
inc
fsubl
jno
cmpsl
mov
lret
or
inc
lods
inc
loope
or
gs
enter
imul
mov
inc
cmp
lods
pop
icebp
outsl
sub
adc
jo
sbb
or
movsl
jmp
movsl
mov
cmp
fisttps
ja
fsubl
dec
sti
xor
or
sbb
cli
sbb
or
lret
inc
imul
or
inc
lea
or
call
push
cwtl
fbstp
fld
paddusb
jne
pop
in
sub
mov
out
push
aad
xchg
xor
pop
inc
pop
paddb
scas
cld
repz
pop
mov
push
std
jmp
mov
push
inc
inc
pop
shl
cwtl
lds
push
addr16
pushf
stos
pop
xlat
and
mov
xor
in
adc
daa
fcoml
jp
inc
sbb
and
add
sub
hlt
leave
sti
push
dec
add
or
sahf
daa
sbb
nop
cwtl
mov
aas
mov
hlt
dec
call
jbe
xor
lods
and
sbb
mov
and
daa
in
popf
mov
mov
mov
xor
stos
es
scas
dec
loop
jge
sbb
dec
outsl
test
sahf
into
test
xchg
fsubr
adc
xor
mov
mov
in
push
mov
sahf
daa
pushf
mov
mov
mov
fprem1
shll
add
jnp
cmp
mov
aas
out
fld1
push
cmp
pop
adcl
fcmovne
push
adc
cmpsl
or
arpl
add
mov
dec
fbld
jecxz
jp
sbb
xchg
cs
xor
push
jp
jb
xor
jbe
in
or
push
ficoml
mov
incl
imull
jl
rep
mov
mov
and
sbb
push
les
pop
popa
lock
repz
inc
out
inc
std
enter
int
fcmovnbe
and
dec
arpl
into
sbb
mov
adc
movsl
jae
cmc
mov
hlt
loope
pop
pop
repnz
and
call
or
mov
pop
pop
inc
sub
jp
dec
out
add
jbe
pushf
cli
out
faddl
inc
inc
xchg
inc
sbb
in
aas
adc
cwtl
push
sub
and
sahf
push
sub
lcall
inc
ffree
fstpt
mov
xchg
cltd
jecxz
sbb
les
inc
mov
adc
lret
negb
xchg
dec
sub
leave
sbb
je
inc
and
add
xchg
sti
into
mov
rcrb
repz
push
or
xchg
mov
adc
jmp
cmpsl
lcall
mov
mov
cmp
adc
cmp
inc
xchg
divb
dec
addr16
je
or
sbbl
add
or
xor
cmp
clc
out
pusha
mov
movsl
xchg
push
jae
fldpi
lods
add
pop
into
cmc
jo
movsb
pop
mov
shll
test
repnz
jge
shl
sbb
sahf
nop
pop
mov
rcrb
xor
xchg
jl
inc
cmp
in
cmpsl
bound
jns
pop
mov
xor
adc
dec
cmp
pop
stos
pop
dec
in
cmc
scas
cwtl
and
fisubs
out
sub
or
popf
shrl
in
mov
cmp
adc
push
fidivrs
gs
jle
jge
imul
mov
push
test
push
adc
push
rcr
fcmove
xchg
je
fnsave
psubusw
fdiv
jbe
fdiv
cs
lcall
repnz
pop
xchg
dec
sahf
adc
cltd
push
iret
jle
lods
jp
jp
jle
jnp
shlb
roll
cmovs
cmp
es
outsb
push
cmp
data16
gs
cmpsb
dec
es
adcl
movl
je
data16
negl
mov
js
cs
mov
lea
mov
popf
adc
and
cmpsl
fmulp
mov
lds
iret
in
cmpsb
sub
dec
outsb
jl
mov
insb
inc
cmp
outsb
icebp
cmp
mov
call
lods
mov
cmpsl
mov
scas
xchg
xor
in
lods
dec
xor
insl
dec
bound
out
mov
pop
xchg
iret
loopne
aam
mov
sysenter
shlb
sti
mov
cmpsb
mov
xchg
adc
in
or
rol
shlb
imul
loope
jne
inc
fdivr
jmp
addr16
push
aad
hlt
sti
xor
sbb
popf
mov
mov
mov
rcrl
sbb
inc
les
or
cs
jbe
mov
mov
lods
sbb
mov
dec
daa
sub
loope
shl
mov
clc
jmp
adc
inc
dec
es
push
adc
cmc
dec
sbb
jne
loope
fucom
pushl
xchg
or
cli
mov
mov
adc
jmp
int
mov
mov
xor
mov
mov
pop
ret
fldl
dec
movsb
fsubrl
jle
mov
outsl
xchg
aam
mov
adc
and
pop
xchg
and
mov
int3
cli
sbb
mov
imulb
fisubrs
pop
jp
add
fdiv
dec
mov
mov
inc
out
and
xchg
sbbb
fiaddl
shl
sub
or
sub
push
xchg
sahf
sbb
and
sti
inc
xchg
dec
mov
xlat
mov
dec
mov
xchg
xchg
imul
sbb
pop
fisubrs
xchg
cmp
pop
dec
mov
push
push
sti
xchg
loope
cmp
cmpsb
out
cld
mov
ljmp
adc
push
cmpsl
ljmp
inc
lock
dec
sbb
sbb
dec
clc
lods
xchg
push
imul
mov
inc
jmp
sub
fdivs
dec
xchg
xor
pop
jle
mov
jns
ja
jl
test
xor
hlt
fisubs
jns,pt
mov
pop
mov
pop
out
mov
sbb
mov
jb
inc
call
lahf
loope
mov
fiaddl
pusha
jecxz
inc
addr16
aam
xchg
outsl
sub
adc
xchg
test
adc
xchg
adc
pop
push
mov
dec
ret
cmp
or
outsl
cld
add
dec
mov
jo
adc
push
xchg
mov
sub
pop
pop
cmp
xor
mov
daa
mov
lahf
insb
lahf
dec
jbe
sbb
adc
add
pushf
xchg
xchg
pop
add
inc
add
push
push
lds
std
cmpsl
xchg
sahf
xchg
jbe
int3
cmp
xor
pop
fs
mov
mov
sbb
movsl
jno
insl
and
pop
add
cmp
pop
xchg
insl
sahf
cmpsb
mov
push
nop
push
mov
mov
pop
inc
xor
push
jecxz
lahf
imul
pop
mov
movsl
sub
movsl
cwtl
xlat
adc
cmp
mov
shrl
je
or
iret
xlat
jb
jne
add
pop
push
jp
cmp
xor
mov
cmp
daa
mov
cwtl
jp
fwait
pop
pop
inc
in
fstl
dec
jmp
dec
lods
movsl
in
xchg
repz
adc
ret
movsl
sub
dec
xor
insb
ret
ds
es
cmp
loope
mov
add
mov
pop
clc
int
add
icebp
pop
ficoms
mov
jb
incl
out
arpl
add
sub
mov
adc
ss
xlat
div
mov
jmp
mov
fstps
add
rorl
mov
fidivs
pusha
sub
mov
clc
test
push
or
lcall
lret
cmp
outsl
sti
fsubr
jne
xchg
pextrw
mov
add
mov
pop
js
cmpsl
aam
inc
idivl
pop
sahf
push
iret
mov
xchg
les
repnz
es
loope
mov
dec
loope
xchg
ljmp
fldt
cmc
movsl
out
leave
push
fidivrs
insl
in
fisubrs
in
mov
pop
cmpsl
sbb
sbb
ljmp
test
pushf
dec
push
rorl
jmp
lret
loop
push
out
cmp
sbb
loope
mov
dec
add
push
roll
pop
or
mov
sbb
lret
pop
ljmp
sar
add
dec
sub
xchg
and
int3
jecxz
adc
add
shlb
cmp
nop
add
rolb
xchg
std
add
dec
xor
sub
das
jge,pt
fsts
jmp
fs
js
sub
push
jge
inc
imul
mov
sub
aam
fildll
imul
pop
ja
mov
testl
je
fwait
or
aam
rcl
packuswb
ja
jmp
mov
sbb
shrb
pop
out
lods
ficoml
cmp
rorl
imul
in
jo
in
sbb
shl
sar
jae
imul
orb
lods
mov
pop
push
lds
jg
cmp
or
fstpt
int
rcrb
mov
jp
cmp
fimull
arpl
cmc
push
popa
cvtps2pi
addr16
mov
imul
xor
jl
xchg
subb
xchg
lcall
iret
jbe
pop
insb
movsb
mov
jmp
ds
mov
sub
imull
aad
jp
and
sub
loope
outsb
fisttpl
xor
cmpsb
outsl
mov
mov
test
icebp
push
movsl
mov
sub
sbb
inc
test
mov
outsb
test
fldcw
ss
out
jge
mov
or
xchg
stos
sbb
mov
movsl
add
or
sbb
fdiv
push
movsb
inc
mov
or
add
fsubrp
pop
movsl
dec
mov
xchg
popa
orb
arpl
cmp
in
scas
leave
jl
inc
fdivrp
mov
outsb
xchg
or
mov
sbb
dec
cmp
data16
pop
mov
push
and
fcomps
mov
cmpsb
sub
icebp
enter
xchg
movsb
fsubl
rcrb
into
or
inc
cld
aam
push
popf
dec
cmp
test
lods
dec
test
test
sub
lret
fsts
or
mov
xchg
les
mov
addb
lds
les
cmp
jbe
data16
mov
clc
mov
clc
mov
jo
push
leave
ret
call
jmp
xchg
push
nop
sarb
mov
lahf
dec
mov
popf
sbb
inc
add
push
fnsave
popf
pop
push
pop
movsl
fsubs
ret
in
inc
push
subb
ror
sub
mov
dec
cltd
test
jp
mul
fmulp
enter
mov
xor
popf
lcall
or
out
pop
cmc
rorl
or
clc
popa
sbb
sub
adc
in
pop
jecxz
jbe
int3
pop
ret
jnp
fisttpll
and
das
push
xchg
jae
or
cmp
jbe
pop
mov
mov
bound
xchg
inc
jle
movsb
popf
sti
sbb
mov
js
cmp
popa
pop
xor
mov
add
pop
imul
aaa
clc
ret
dec
aad
jl
mov
dec
push
lods
int
sahf
cmpsl
movsb
xor
jp
mov
movsl
fnsave
je
add
lret
gs
adc
imul
mulb
adc
lcall
bound
lock
push
test
pop
mov
cwtl
push
sysexit
sbb
jae
fdivrs
or
daa
inc
cmp
hlt
or
leave
sub
inc
cltd
or
adc
cmc
xchg
in
lea
sub
test
leave
jl
enter
test
add
test
pop
bnd
insb
stc
xchg
dec
sahf
jnp
loop
add
mov
test
shl
cltd
mov
icebp
sub
jne
mov
or
scas
cltd
sbb
inc
cltd
xchg
sbb
mov
push
movsb
ret
ds
loopne
push
adc
and
jae
mov
pop
loopne
dec
sbb
in
lcall
idivb
sbb
mov
dec
pop
repnz
jg
cmp
ret
movsl
push
fsubrs
jns
fistpll
repz
pop
xlat
ret
jmp
sbb
adc
dec
scas
xchg
mov
aaa
nop
mov
push
in
stc
sti
repnz
fidivs
cli
jno
ret
mov
mov
mov
rorl
out
push
hlt
std
push
xchg
adc
test
sub
xor
xchg
sti
pop
push
xchg
ret
dec
sbb
outsb
jae
arpl
push
ds
cs
mov
out
repz
jecxz
sarl
and
jle
outsb
jae
arpl
push
ds
cs
mov
out
repz
jecxz
sarl
and
jle
outsb
jae
arpl
push
ds
cs
mov
ljmp
shrl
jp
outsb
jno
arpl
sarl
ret
out
dec
ficomps
incb
icebp
sub
cmp
aam
xor
xlat
mov
test
dec
sub
cmp
or
sbb
cmp
imul
mov
sti
stc
lret
jmp
cmp
or
sbb
sub
pop
inc
stos
or
leave
jmp
sti
aad
adc
sbb
dec
sbb
adc
pop
fsubrs
fidivs
sub
ljmp
or
mov
xchg
mov
and
ss
insl
rcrl
or
sbb
stos
fdiv
clc
dec
in
leave
mov
sub
push
mov
rcrl
jmp
xlat
mov
pop
fcoml
les
ss
and
mov
pop
cs
in
cmp
insb
mov
jp
ss
inc
pop
imul
xor
fldcw
cmp
imull
sub
dec
sbb
sbb
mov
mov
push
and
clc
jl
adc
aam
sub
movaps
fcoml
pop
stos
stos
mov
fldpi
sti
stc
lret
push
fucomi
sub
sbb
imul
dec
or
push
mov
mov
stos
js
dec
push
imul
add
ljmp
mov
test
xchg
movsb
lcall
pop
inc
ja
add
adc
sub
leave
call
sti
stc
lret
jmp
cmp
or
sbb
dec
jnp
dec
imul
mov
sti
stc
lret
jmp
cmp
or
sbb
dec
jnp
dec
imul
jns
dec
xchg
cmpsb
in
cltd
pushf
lea
push
push
negb
inc
fisubrl
push
mov
mov
inc
sti
jmp
pop
sahf
xchg
push
ljmp
pop
popf
push
mov
stc
xchg
cmpsl
mov
pop
xchg
xor
int3
lods
incl
mov
jl
sub
bound
jbe
cmp
push
xor
mov
sub
and
cmp
dec
js
loop
mov
mov
in
fisttpl
xchg
in
xor
mov
movsl
xchg
sahf
pop
or
repnz
enter
add
push
sub
pop
xor
inc
in
cwtl
push
mov
xor
pop
xor
jge
lahf
cmp
and
jmp
pop
lds
jp
mov
loopne
pusha
stc
dec
xchg
push
lret
xchg
mov
sbb
xor
ljmp
push
cmc
aaa
outsb
aas
jns
sub
repnz
out
sub
ds
add
mov
test
jb
insl
fadds
call
repnz
ret
push
das
mov
out
sti
loopne
js,pt
dec
sub
push
cltd
sbb
pop
aas
leave
clc
pushf
push
mov
xchg
nop
jmp
mov
sarl
push
fs
cmp
pushw
ja
mov
cs
add
call
std
xchg
test
movsl
xchg
pushl
jge
gs
pop
fimuls
je
add
scas
aaa
pop
gs
adc
gs
xor
sbb
lret
divb
push
jmp
or
add
sbb
iret
adc
fidivrs
pushf
or
pop
xchg
push
push
movsb
mov
aaa
loope
rorl
es
push
cmp
fcoms
iret
rcrl
xlat
push
into
cmp
jge
push
fdivrs
and
fistps
enter
lods
inc
inc
pop
cmp
shlb
mov
xor
imul
sarb
sbb
dec
in
cmp
shll
hlt
push
enter
out
andl
int3
rol
ljmp
ret
fdiv
and
and
pop
inc
imulb
shlb
cli
cs
popf
xchg
mov
pushf
out
and
movsb
icebp
std
sti
cs
inc
dec
pop
pop
push
add
mov
pop
gs
mov
jb
hlt
loope
mov
lds
lret
fdivr
movsb
jge
pop
xor
out
sub
jo
jp
jmp
mov
sti
out
pushf
loopne
pop
pop
xchg
adc
sub
test
push
in
fidivrs
jge
ss
dec
jl
ds
mov
mov
xchg
insb
stc
ss
sti
push
imul
sub
and
cld
dec
outsb
shl
mov
mov
and
cwtl
mov
call
dec
ror
das
stos
jg
push
cmpsl
sbb
imul
out
and
sti
cmpsl
call
mov
dec
xor
inc
scas
mov
jo
xor
cwtl
mov
lods
push
xchg
je
aas
nop
movsb
adc
data16
in
jmp
push
out
lahf
scas
mov
out
push
into
mov
les
cwtl
pop
jmp
mov
jle
fs
aas
es
cmp
xlat
std
mov
cmp
in
sub
stos
push
adc
xor
aam
xor
in
out
push
mov
and
dec
mov
dec
out
inc
cmp
stos
mov
mov
mov
adc
add
jae
mov
loop
ficompl
xchg
mov
jecxz
xchg
repnz
aam
pop
js
jg
sahf
mov
fsubp
pusha
cmp
ret
mov
jmp
mov
lahf
pop
fistps
leave
hlt
mov
jnp
xlat
addb
pop
push
mov
xchg
cmp
loope
lea
dec
dec
mov
jb
sub
jecxz
dec
imul
adc
pop
fldt
fisubs
xor
iret
outsb
lcall
sbb
push
inc
inc
es
dec
mov
add
or
sbb
adc
sahf
call
es
lret
inc
cwtl
sub
xor
and
cmpsb
mov
insl
adc
insl
out
nop
mov
jl
loopne
sbb
data16
or
push
mov
mov
xchg
out
outsl
les
lahf
jae
rorl
xchg
mov
into
or
mov
stos
insb
dec
imul
cld
xchg
pop
jnp
notb
adc
es
xchg
shlb
cmp
xor
ss
daa
xchg
cmp
push
pop
pushf
insl
jge
dec
fdivrl
out
mov
pop
cmpsb
sbb
sahf
cli
imul
dec
cltd
mov
addr16
push
das
add
aas
xchg
push
xor
cmp
cmpsl
lahf
cwtl
nop
cmpsb
lretw
mov
dec
testl
and
mov
xchg
cmp
nop
mov
mov
adc
lret
jb
mov
sbb
mov
lahf
push
dec
push
imul
test
out
sub
cltd
or
lahf
inc
add
xchg
stos
insl
jnp
push
and
cmp
mov
fisubrl
in
xor
neg
xchg
imul
in
pop
lahf
lea
xchg
dec
test
mov
sub
insl
cltd
mov
cmp
fisttps
jge
push
enter
xchg
mov
jne
dec
lahf
in
adc
push
mov
ja
mov
repz
ss
scas
jns
ja
cmp
fistpl
gs
sarl
into
or
enter
pop
test
sbb
xor
push
cmp
cmp
xchg
cwtl
mov
fisttpll
push
ret
fdivr
jne
mov
dec
mov
sbb
jns
repz
std
jecxz
jle
mov
cmpsb
jns
sub
movsb
adc
jns
movsl
fcmovnb
pop
lret
push
xchg
jo
xlat
test
int3
xchg
xchg
or
fiadds
xchg
test
std
shlb
shll
lcall
scas
mov
inc
dec
and
inc
rclb
mov
jg
sub
mov
pop
and
test
gs
push
in
cmp
pushf
push
ret
mov
pop
inc
mov
xlat
inc
mov
jb
and
outsb
lods
push
xor
addl
movsb
hlt
stos
ret
rclb
pop
and
inc
punpckldq
dec
je
xor
mov
push
out
clc
adc
pop
mov
mov
test
in
jecxz
in
sub
cld
mov
jne
addr16
scas
jecxz
jp
lods
push
mov
cltd
stos
or
jg
imul
test
lcall
fbstp
lret
sbb
add
xor
mov
pop
push
bound
pop
dec
xor
dec
cmp
mov
sbb
add
hlt
shlb
mov
fsubrs
popf
pop
lret
dec
push
je
cmp
shl
lds
scas
or
sbb
push
sub
push
rclb
lret
sti
out
mov
aam
in
jnp
test
idiv
xchg
das
rorl
inc
std
xor
mov
inc
xchg
int
sbb
mov
xchg
addr16
cmpsb
or
push
or
push
std
mov
in
fldt
test
sub
cmp
mov
xchg
xchg
xchg
push
xchg
adc
and
out
lahf
lds
aad
movsl
iret
loopne
cli
out
mov
push
bound
mov
jns
iret
iret
jno
push
js
jo
clc
clc
mov
mov
jp
in
add
cmp
cmpsl
imul
out
and
stc
mov
call
ror
cmp
jmp
jge
pop
mov
arpl
std
cltd
add
jns
mov
sbbb
xchg
or
push
fimull
lahf
and
mov
aam
pop
das
jae,pt
xchg
decl
ja
repnz
add
jg
in
xchg
adc
fmull
sarl
pop
repnz
dec
xor
xchg
and
add
js
push
sub
hlt
mov
mov
cmp
movsb
mov
mov
lock
mov
xor
pop
in
cwtl
or
and
mov
pushf
and
lret
mov
loope
pop
dec
mov
mov
in
enter
mov
cmp
daa
jne
test
fsubp
imul
sbb
xor
mov
in
jmp
add
dec
push
xchg
xchg
push
or
enter
imul
lea
repz
add
sahf
or
mov
popf
jmp
mov
ljmp
repz
push
xchg
add
sbb
data16
repnz
or
scas
ret
stos
cmp
test
push
xchg
adc
mov
imul
test
or
in
mov
loop
test
int
jb
sbb
adcb
in
cmp
add
mov
pop
mov
push
mov
lock
hlt
mov
cmp
push
or
mov
in
ds
std
loop
or
cli
mov
jno
arpl
mov
les
jg
gs
out
adcb
inc
leave
fistl
out
int
mov
ficompl
cmpsb
les
dec
inc
dec
jbe
jnp
adc
jne
mov
mov
mov
outsb
mov
leave
bound
ret
add
xor
mov
sbb
mov
dec
inc
addb
pop
in
ret
xor
xchg
inc
ficoml
shll
mov
cmp
lds
mov
sub
in
idivb
pop
mov
aam
insb
icebp
sbb
or
sti
out
push
mov
push
neg
pushf
sbb
adc
jno
clc
push
ret
jge
jae
cmp
outsl
lods
dec
mov
push
add
aam
loope
fisttps
movsl
imul
jno
jbe
dec
dec
cmp
int
dec
pop
arpl
jno
inc
inc
push
dec
inc
sbb
rclw
andl
psubusb
mov
imull
stos
mov
leave
jae
xlat
mov
ja
out
mov
inc
inc
jp
mov
in
pushf
out
push
xchg
ss
mov
ja
jo
shll
dec
mov
and
pop
fdivl
sbb
imul
mov
sbbl
add
sub
test
jns
push
out
xchg
mov
loop
loope
mov
dec
orl
lret
gs
jg
dec
cmp
cmp
ret
out
shll
mov
mov
imul
addps
dec
jg
insl
sbb
push
mov
xchg
fsubl
jo
jno
dec
dec
stos
loop
repz
jmp
addb
shr
xor
scas
adc
shlb
ss
pop
dec
test
dec
in
mov
arpl
lret
sbb
daa
adc
xchg
test
ja
jle
sub
pop
scas
into
inc
test
mov
pop
stos
xchg
mov
sbb
dec
xor
aas
sbb
jmp
mov
push
sbb
adc
testl
stc
mov
aas
sub
mov
or
mov
fstpl
dec
push
push
xor
xchg
inc
dec
cmpsl
jg
pusha
stc
daa
xchg
call
stc
bound
and
sti
push
xchg
dec
sbb
outsb
mov
loop
sub
add
push
push
pop
repnz
mov
mov
aaa
scas
inc
inc
addr16
out
sub
aaa
add
call
jo
test
lahf
push
mov
pop
out
mov
or
sbbl
xor
loope
sub
jg
popa
out
pop
mov
arpl
fs
and
lods
and
pusha
pushf
stos
jno
xchg
dec
adc
cmp
push
outsl
dec
scas
jle
popf
stos
fldl
inc
cmpsl
lret
movsl
or
sub
mov
xchg
add
testl
adc
sub
fldcw
popf
pop
scas
mov
data16
pop
sbb
adc
or
cs
xlat
cmp
test
pop
xchg
or
add
cmc
add
in
shrb
maxps
jae
mov
in
jp
js
in
repnz
push
or
or
lret
aam
or
sbb
push
pop
pop
cmp
mov
xchg
or
add
cltd
adc
sub
pop
add
jle
imul
cmp
lock
fimuls
outsl
sbb
cli
push
lea
js
adcl
sub
xchg
mov
nop
inc
repnz
pushf
fwait
sbb
dec
mov
jmp
call
rcr
ljmp
xor
stos
imul
jmp
adc
int
push
adc
push
movsb
push
mov
lods
in
cmp
mov
aad
pop
add
cmp
js
arpl
inc
push
int3
test
clc
xchg
jl
lea
xor
cwtl
jo
ja
and
mov
push
adc
add
jle
dec
xor
adc
sub
add
xor
addr16
addb
pop
jno
or
and
mov
call
or
aaa
idiv
xchg
incl
lcall
cmp
push
in
mov
add
jno
mov
insl
scas
sbb
scas
rcr
addr16
inc
imul
popf
jle
insl
push
adc
sbb
mov
popf
mov
fwait
or
or
mov
bound
outsb
push
popa
cli
and
jmp
je
jg
jns
insl
js
cmc
dec
fwait
add
into
inc
jge
xor
dec
and
frstor
shlb
jg
add
loopne
stos
pop
add
es
in
mov
lahf
pusha
nop
push
sti
loope
dec
cmpsl
pop
sti
inc
js
fnstenv
mov
repz
xor
rorl
add
in
dec
cs
sbb
rolb
popa
in
pop
nop
fldcw
push
insl
dec
mov
pop
test
add
insl
jbe
push
test
mov
jne
rorb
rol
call
xchg
mov
xchg
adc
pop
xor
xchg
add
outsl
rolb
jmp
xchg
sbb
pop
mov
fbstp
test
movsb
xor
jp
mov
je
cmp
sub
push
outsb
imull
jbe
cmp
pop
test
jb
adc
fists
adc
sub
xchg
jecxz
repnz
lcall
fs
push
adc
out
or
scas
lods
sbb
rorl
pop
add
pop
cmp
das
sbb
pop
cmp
shrl
imul
push
add
insb
ret
out
movsb
shl
call
sti
lods
push
push
out
mov
out
out
fbstp
movsb
into
pop
mov
or
xchg
insb
inc
sub
or
and
pop
dec
inc
sub
jl
test
fmull
cld
gs
xchg
ss
imul
fs
xor
stos
push
inc
andb
int3
ljmp
dec
dec
jg
out
inc
outsl
out
hlt
movsb
js
je
ret
fcompl
jnp
loope
dec
nop
sub
push
push
mov
imul
cs
and
xor
mov
cs
outsb
push
sti
mov
mov
jl
mov
lods
in
xchg
in
in
lock
rol
lahf
pop
jecxz
mov
popl
xchg
adc
aad
push
cmp
xchg
sub
cs
fstps
mov
mov
inc
push
mov
mov
adc
out
rcll
dec
dec
mov
out
pop
mov
cmp
or
shll
mov
aas
nop
aam
pushf
outsb
push
inc
and
cmp
cmp
orb
xbegin
lods
or
push
imul
cmp
inc
aaa
dec
mov
test
pop
pop
and
stos
sbb
ljmp
ret
sarb
mov
mov
cmp
jae
mov
dec
mov
lahf
push
sbb
outsl
xchg
je
mov
adc
iret
cltd
mov
in
inc
imul
adc
mov
adc
xlat
mov
jmp
xchg
outsb
ja
sbb
in
popl
loopne
add
pop
movsb
push
add
out
xchg
fwait
pop
enter
and
and
pop
adc
mov
popw
je
sarb
sbb
lods
and
cmp
fadds
es
sbb
ja
and
jle
ret
xchg
popf
jb
ret
or
mov
xor
sbb
lea
jne
pushf
mov
ds
mov
pop
inc
mov
adcl
pushf
or
sbb
scas
mov
call
mov
xchg
and
inc
mov
jmp
xorl
loop
and
dec
sahf
fidivl
pop
popf
dec
ljmp
jge
sti
mov
mov
or
daa
mov
inc
xlat
pop
jmp
xchg
mov
sub
add
std
ret
sub
outsl
shlb
inc
pusha
sbb
nop
jg
mov
idivw
sub
xlat
add
sub
pop
adc
jge
fwait
add
cltd
sahf
sub
or
xchg
xor
inc
inc
test
mov
std
pop
iret
mov
repz
stc
mov
sub
shrl
push
sbb
jecxz
add
repz
inc
xchg
sbb
xor
mov
jmp
adc
xor
movb
fdivrs
jo
jmp
and
xlat
add
cmp
popf
jl
adc
nop
std
push
das
bound
add
jl
sbb
push
jecxz
lret
les
mov
pushf
outsb
iret
push
sbb
clc
push
loop
daa
dec
cmc
and
cmp
lock
orl
std
insl
cld
add
mov
stc
dec
adc
xor
jae
lahf
xor
lock
aas
sub
mov
mov
fisttps
jne
das
push
lcall
pusha
or
cmpsl
add
pop
jg
loopne
dec
int
xchg
inc
aas
mov
mov
mov
stos
mov
push
mov
xor
cmp
xchg
test
shl
xor
sbbl
call
repnz
div
fdivrp
and
and
mov
das
mov
sti
daa
and
and
movsb
sbb
int
fs
inc
or
and
xor
fcompl
cmc
stc
push
in
push
addr16
movsb
mov
in
mov
pop
sti
fwait
xlat
lea
xor
je
xor
jno
inc
sbb
lcall
pop
cmp
mov
dec
dec
xlat
mov
out
fs
mov
cmp
jbe
cmpl
aam
add
daa
jo
pop
jae
jg
or
pop
ja
xchg
addb
outsb
mov
xchg
sub
lds
cmp
bound
fwait
test
jmp
push
xor
daa
xor
cmp
leave
fistpl
xor
pusha
mov
inc
lret
daa
add
in
imul
mov
cmp
add
pop
xor
sbb
clc
cmp
jmp
insb
jno
pop
mov
rcrl
push
lahf
pop
outsl
movsb
xor
xor
mov
adc
jne
fsubr
iret
icebp
mov
mov
dec
loopne
jne
dec
push
out
movsb
insb
jb
lds
insl
fidivl
and
in
cltd
mov
cmp
sbb
out
adc
push
or
das
inc
mov
pop
outsl
cld
mov
and
popa
stos
mov
push
sbb
dec
pusha
les
clc
sbb
lahf
cltd
mov
add
sub
fistl
mov
fbstp
mov
jo
imul
push
mov
dec
mov
jb
cltd
xor
and
jo
inc
fwait
pop
imul
in
add
test
xor
mov
inc
inc
inc
fisttps
mov
ss
hlt
arpl
scas
jl
sbb
mov
mov
inc
outsb
pop
dec
mov
decb
xchg
mov
push
lds
lea
sti
xor
inc
popa
cmpsl
lds
ret
xlat
mov
or
sbb
int3
push
pop
fidivrs
rorb
xor
pusha
push
inc
imul
jle
cmp
pop
jl
jg
mov
push
push
cmp
bound
adc
sbb
sub
hlt
lds
adc
clc
xchg
sub
xorl
push
loopne
mov
or
or
adc
mov
sub
fdivrl
and
stos
decb
push
cli
ret
imul
xchg
mov
fcmovu
pop
sahf
xchg
test
push
and
mov
pop
mov
inc
sub
adc
out
push
nop
jo
pop
cld
xor
xchg
stos
out
insl
popaw
pop
dec
rep
ljmp
pop
push
loop
mov
aaa
add
jl
sbb
iret
xor
pusha
call
sbb
xor
addb
inc
stos
push
cwtl
dec
jnp
push
lea
sub
dec
loope
popf
lock
jo
sbb
stc
cli
jl
add
mov
push
cmp
add
sub
adc
movsb
and
mov
sbb
mov
outsb
mov
pusha
outsb
int3
xchg
aad
les
stos
jae
dec
das
inc
mov
dec
and
in
cwtl
push
je
sub
sbb
mov
cmp
mov
lcall
in
inc
imull
mov
fldpi
leave
sti
stc
lret
jmp
cmp
or
sbb
dec
jnp
dec
imul
mov
sti
stc
lret
jmp
cmp
or
sbb
dec
jnp
dec
imul
mov
sti
stc
lret
sbb
or
jnp
dec
pop
pop
subl
fnstcw
dec
imul
or
insb
jecxz,pn
test
xor
and
adc
add
sbb
or
je
inc
pop
mov
movsb
jl
insb
test
or
cmp
sub
fdivl
and
adc
add
je
fs
mov
les
test
or
fdivl
and
adc
add
je
fs
sbb
movsb
or
or
cmpsb
inc
les
jnp
push
xchg
mov
xchg
daa
inc
xchg
sub
jbe
imul
xor
push
xor
movsb
add
sti
pushf
testl
adcb
or
jge
and
xchg
jecxz
push
jbe
repz
dec
pop
pop
insb
push
jmp
and
sub
aas
fsubr
add
jne
fs
lods
mov
popf
imul
les
cmpsl
dec
aam
fstpt
adc
arpl
jno
inc
daa
pop
dec
inc
repz
imul
dec
in
sbb
sub
loopne
xor
jb
std
mov
pop
jmp
sbb
or
loope
and
shrb
pop
xor
and
adc
add
je
fs
mov
movsb
jl
insb
test
or
cmp
sub
mov
jge
insl
stc
sbb
rcrl
sub
shrl
rorb
cld
sub
lcall
test
adc
jbe
cmp
add
and
inc
cs
sub
add
insb
jmp
xchg
imul
mov
je
fs
mov
movsb
jl
insb
test
or
cmp
sub
fdivl
and
adc
add
je
fs
mov
movsb
jl
insb
test
or
cmp
sub
fdivl
inc
dec
mov
xor
inc
or
cmp
and
pop
data16
pushf
sub
popf
xchg
sbb
popf
icebp
mov
adc
ret
jle
xchg
fildl
cmp
pop
bound
cmp
or
push
frstor
jns
adc
jle
and
cmpsb
cltd
xor
mov
and
inc
in
or
js
gs
mov
sub
stos
dec
add
cmpsb
cmpsl
js
in
inc
test
push
iret
adc
into
in
pop
jle
mov
dec
popa
bound
xchg
daa
lret
jmp
je
cmp
add
adc
pop
and
add
cmp
jns
sub
scas
test
dec
fisubrs
or
mov
repz
add
les
pop
mov
hlt
mov
and
int3
adc
mov
inc
in
loope
loop
js
cli
push
outsl
andl
cmpsb
xor
or
jae
test
fwait
sbb
test
test
scas
pop
aaa
dec
xchg
data16
lahf
and
cmp
add
mov
dec
movsl
scas
out
leave
test
jno
sbb
arpl
xchg
xchg
dec
jo
cmp
clc
sbb
popa
and
jnp
ja
xchg
aad
repz
cs
into
fidivrl
fnstenv
ss
sub
aad
jne
test
in
mov
popf
xor
icebp
mov
sbb
fdivr
inc
in
outsb
jmp
lahf
jns
rolb
test
or
je
xor
mov
inc
pop
clc
push
push
fcmove
fldcw
ljmp
mov
aam
rol
rcll
shl
test
jmp
incb
cwtl
sahf
test
movsl
add
shlb
mov
repz
out
out
xchg
inc
lods
call
in
repnz
add
adc
mov
pop
sub
in
ss
jb
adc
pop
or
stos
cmp
xor
out
lock
and
add
jne
xchg
pop
mov
xchg
push
sub
rcll
in
out
clc
and
push
mov
sub
pop
mov
xorl
sub
lret
loope
pop
add
aam
adc
adc
lods
mov
sbb
sbb
or
mov
push
xor
pop
or
ret
in
mov
cwtl
loop
push
xor
int3
mov
les
cmpsl
xor
inc
lods
cs
out
sbb
cmc
sbb
mov
sahf
loopne
aas
or
xor
pop
push
filds
insb
je
insb
xchg
out
ljmp
push
push
test
jecxz
test
cmpsb
das
insb
adc
or
lcall
push
and
pop
testl
adc
jg
and
add
or
cltd
pop
andl
repnz
shrb
sbbl
pop
xchg
pop
out
data16
cmp
les
bound
pop
inc
xchg
xchg
nop
fnstsw
sub
ljmp
cld
in
faddl
adc
int
inc
iret
mov
pop
mov
sub
cld
xor
test
mov
push
push
xchg
cwtl
pop
mov
movsl
es
pop
mov
jl
dec
dec
add
scas
pop
xor
in
jns
pop
repz
mov
pusha
icebp
in
rolb
lahf
lods
loopne
ds
mov
rcll
std
jle
stc
test
or
das
mov
or
inc
push
inc
jbe
pusha
mov
gs
inc
mov
arpl
and
push
gs
sub
adc
rcrl
add
jp
sub
testb
push
shrl
in
rclb
lds
cmp
outsl
sarb
adc
add
mov
pop
xlat
dec
gs
out
dec
fsubr
repz
iret
out
mov
sub
lods
mov
cmp
loopne
jo
scas
sbb
dec
movsb
les
es
fstl
push
imul
aas
push
cmpb
cmp
lea
idivl
out
lods
int
xor
fistpl
mov
add
mov
fcomps
les
in
mov
popa
outsl
pushf
dec
fimull
ret
loope
ss
and
or
movups
loop
idiv
xchg
sbb
mov
in
lods
outsb
pushf
in
jle
test
rorb
jo
je
cmp
xchg
fwait
rclb
ljmp
push
jo
aad
and
xchg
push
and
cmc
fs
lods
outsl
pushf
push
pop
push
pop
repnz
fwait
cld
test
ret
loope
mov
inc
js
insl
inc
icebp
xchg
test
fldl
aas
fcomp
inc
sti
lods
std
std
or
jmp
test
dec
rorb
lcall
subb
test
or
loopne
and
sbb
dec
lods
fsubs
inc
jae
mov
dec
ja
jae
jnp
push
aad
mov
push
imul
es
js
cmp
xor
and
fidivl
ds
sub
ds
mov
popf
aaa
lds
addr16
xor
push
lahf
out
push
orb
cmp
lods
cld
mov
fwait
leave
and
nop
pop
cmp
pusha
or
pop
pop
mov
aad
aam
lahf
das
fstpl
aad
fimull
push
mov
jg
add
mov
jg
fcmovnu
xchg
dec
mov
ficompl
stos
and
daa
jns
ss
roll
lret
mov
adcb
xor
dec
inc
std
xlat
mov
jge
push
loopne
popa
push
imul
mov
scas
addb
ret
movsb
and
xor
rorl
inc
scas
dec
repz
aad
bound
pop
mov
cmpb
pop
add
push
enter
sbb
pop
notl
test
shlb
imulb
in
insl
lahf
ljmp
addr16
adc
cmp
push
test
jge
mov
mov
sub
sbb
push
jmp
outsl
imul
mov
sbb
in
out
mov
jns
lret
xor
jbe
sbb
add
and
outsb
mov
es
call
daa
jbe
arpl
pop
lock
sbb
push
and
insl
cmp
lds
inc
dec
movsb
add
inc
mov
jge
xor
dec
dec
lret
pop
pop
cli
mov
test
pavgb
insb
stos
mov
rcr
lcall
pop
sub
xchg
mov
mov
adc
aas
jg
sub
cmpsl
lcall
xlat
sbb
shr
cmpsb
subl
cli
cmp
cmpsb
and
mov
sbb
mov
leave
cmp
stos
mov
mov
addl
dec
jmp
fwait
push
add
loopne
xor
pop
pop
cmc
push
add
idivl
les
test
mov
xor
test
mov
lcall
jb
cwtl
xor
pop
xor
pusha
ret
scas
outsb
and
pop
xlat
aam
xor
inc
inc
rorl
xor
movsb
inc
mov
pop
or
sub
adc
add
sbb
ja
scas
rcr
daa
mov
dec
and
add
cli
lcall
push
aam
shll
and
jno
fsts
sub
sub
xor
inc
mov
jbe
popf
rcrl
fcoms
add
enter
in
xchg
fnstsw
jns
push
cmpsb
sub
cs
pop
adc
rcrb
pushf
dec
cmp
aas
fwait
clc
jl
mov
aaa
mov
ficompl
data16
xor
xlat
pop
jno
test
lock
loopne
push
test
sub
pop
push
add
subb
push
add
jb
xor
data16
and
fwait
adc
js
add
aad
aam
adc
inc
divb
xor
and
adc
cmp
adc
iret
js
imul
jp
pop
mov
out
xlat
scas
loope
mov
add
shrb
add
aad
xchg
outsl
orb
lret
in
mov
test
or
js
test
adc
pusha
sbb
jg
iret
jae
or
rorl
loopne
cmpsb
pop
jno
in
sub
adc
inc
stos
sbb
dec
ss
mov
jo
dec
jne
mov
outsb
lret
gs
addr16
xor
int
fldt
xchg
mov
jp
fs
mov
dec
sub
stos
add
decb
cmp
xchg
addl
and
pop
ljmp
hlt
daa
jb
mov
jle
cltd
sbb
ds
push
mov
and
jo
fsin
cld
add
pop
add
ljmp
xor
loop
mov
lds
xchg
or
rcll
xchg
push
int
inc
adc
sahf
mov
fidivrl
adcb
stc
mov
xlat
sti
jmp
jmp
fsubl
popf
arpl
xchg
iret
cmpl
pop
mov
ljmp
inc
stc
test
stc
add
rcr
pop
ret
mov
movsl
mov
es
rol
inc
jo
test
in
pop
or
fucomp
push
adc
xchg
ret
push
mov
int3
mov
or
inc
pusha
fucomi
mov
cmp
mov
popa
imul
xor
cmp
push
lods
jns
fs
ss
test
or
and
imul
dec
sub
ret
push
mov
psubusb
fcompl
xchg
xchg
sahf
cmp
ror
jno
mov
dec
insb
xchg
test
loopne
out
je
add
movsl
iret
lret
mov
int
dec
inc
fstps
sbb
adcl
pusha
sahf
repz
aas
fwait
popl
enter
roll
push
jne
adc
repz
push
dec
int
pop
mov
lahf
imul
add
mov
stc
mov
ja
jbe
lds
cmp
mov
mov
out
lock
aam
xchg
fmuls
mov
call
cmp
pop
xchg
inc
jnp
mov
data16
mov
cmp
inc
jp
aas
cltd
push
fnsave
les
or
mov
mov
push
jnp
in
xor
xchg
push
xchg
sbb
adc
ja
aad
bound
out
push
inc
pop
std
movsl
or
push
dec
rorb
mov
out
movsl
test
mov
insb
cli
lock
dec
jae
ror
cwtl
test
fdivr
aam
cli
fsubl
xor
popf
mov
imul
outsl
mov
mov
xchg
and
test
je
adc
or
cld
das
fists
mov
sbb
daa
pop
subb
in
hlt
icebp
fidivrl
enter
dec
stc
leave
repz
fnsave
xchg
adc
mov
push
pop
and
xchg
mov
jle
inc
cmp
imul
adc
and
fisttpll
mov
jg
dec
imul
enter
ret
mov
movsb
adc
inc
or
xor
out
adc
inc
mov
loop
cld
mov
mov
stos
or
std
loope
pop
int
cmp
push
cmc
in
adc
fmull
inc
loopne
cmp
pop
lret
push
xchg
push
sub
stos
adc
xchg
movsb
pop
mov
or
mov
mov
mov
mov
jns
lret
fildll
bnd
repnz
clc
jne
pop
es
divb
or
xchg
rorb
cltd
pop
out
dec
inc
icebp
loopne
or
fsubrl
push
nop
fdiv
mov
mov
push
mov
mov
insb
ja
and
std
repz
stos
mov
dec
xchg
lods
jns
jp
xchg
into
mov
fwait
lret
ret
jo
sbb
jmp
outsb
push
push
popf
rol
adc
jl
push
sbb
loope
sub
push
pop
sbb
jle
je
ljmp
addr16
rcrb
int3
movsb
xchg
adc
pop
inc
mov
cmc
jmp
inc
mov
sub
imul
mov
add
aaa
xchg
cmp
test
lret
fistpll
fsubrl
xchg
xchg
leave
popa
mov
push
imul
das
dec
jge
xchg
out
jno
xor
adc
mov
aas
cmp
push
or
jnp
in
xchg
mov
pushf
icebp
das
jmp
push
xlat
in
push
icebp
cmpsl
inc
cmpsl
xchg
xchg
inc
xor
pop
and
and
jl
mov
stos
sbb
pop
inc
mov
or
out
les
mov
iret
into
push
jb
cmpsb
repnz
add
lahf
mov
insl
in
dec
fildll
filds
fnstenv
dec
rep
sti
jb
jl
lock
jmp
sbb
repnz
jb
shrl
loope
addr16
xor
lock
or
add
in
add
jp
out
cmp
push
mov
xchg
jae
dec
imul
mov
aaa
arpl
lods
cli
icebp
sbb
cmp
cmpsl
sbb
cmp
xchg
sub
aad
xchg
push
mov
mov
rcrb
pop
pop
lret
push
push
mov
arpl
sub
pop
or
sbb
lcall
inc
push
out
xchg
popl
sbb
popf
xor
notb
ds
add
xchg
sub
pop
and
pop
aam
adc
cmp
xchg
inc
in
adc
ljmp
in
test
pop
mov
jmp
cmpsb
rclb
cmpsl
xchg
in
xor
mov
iret
movsl
push
xor
add
jnp
sarb
rorb
repnz
in
ds
push
repnz
dec
push
cmp
pop
jae
and
insb
cmp
or
cmp
xor
mov
les
or
addl
stos
jle
aad
inc
lahf
pop
insl
ret
mov
out
dec
andl
into
dec
subl
aas
xchg
and
outsl
mov
xor
jmp
pushf
notb
xlat
jmp
cmpsl
rcll
mov
mov
cmp
test
popf
inc
into
or
pop
xor
or
into
enter
ss
mov
inc
xchg
std
mov
and
repnz
push
dec
add
sbb
jmp
nop
js
add
or
les
or
push
dec
mov
mov
andl
sbb
dec
xchg
jns
rcrb
or
ret
dec
cli
mov
mov
push
mov
stos
xor
movsb
icebp
adc
cmp
lock
stos
mov
mov
lret
push
push
orb
xor
mov
adc
pop
pop
adc
outsl
inc
insb
and
xchg
pop
xlat
xchg
cwtl
inc
mov
mov
add
xchg
add
sub
push
jns
cli
mov
call
fidivl
mov
jbe
ljmp
ljmp
imul
pop
push
ret
iret
fwait
adc
push
fcmovnb
mov
jns
aam
in
jnp
lret
push
es
test
mov
das
jecxz
movsb
lcall
or
or
and
pop
xchg
lahf
ss
ljmp
fbld
xchg
das
roll
pop
cwtl
bound
in
rol
add
das
fisubrs
lea
div
sbb
roll
jle
add
jno
repnz
insb
mov
and
pop
xor
inc
adc
sbb
scas
mov
mov
ljmp
je
dec
jo
repnz
adcb
inc
mov
ljmp
fdivl
cmpsb
sti
mov
sub
adc
sbb
add
inc
pop
pop
fcmovnb
xchg
push
fs
repnz
insl
xchg
aas
lea
sub
les
pop
testb
or
and
fdivrl
les
movsl
sti
int
dec
test
adc
dec
mov
mov
les
xchg
cmp
js
sbb
scas
mov
outsl
divl
pop
fidivrl
icebp
addb
lods
ljmp
pop
sub
cs
add
cmpsb
push
push
enter
mov
insl
addr16
outsb
jo
jnp
ficomps
sbb
sbb
icebp
pop
aaa
outsb
rol
or
or
push
mov
sub
aam
mov
fstl
sahf
push
adc
jecxz
sub
insb
xor
insw
flds
lcall
je
jo
fldl
cltd
nop
mov
icebp
jl
std
cmp
call
std
mov
dec
sbb
call
sbb
adc
pop
lret
rorl
shrl
inc
lahf
out
aas
sub
sbb
inc
inc
test
dec
lahf
les
ljmp
inc
mov
xor
aaa
mov
icebp
pop
sbbl
xor
dec
in
or
arpl
cmp
push
gs
mov
push
add
mov
pop
and
pop
cld
mov
cmp
pop
mov
cmp
mov
push
add
sbb
and
js
mov
enter
cmp
rcrl
pop
pusha
sub
out
xor
push
sub
push
insl
adc
rorl
xchg
mov
push
push
dec
xchg
hlt
pop
popa
rorl
pop
xlat
lock
cmpsl
daa
push
mov
add
sti
pushf
xchg
pop
sub
test
movsl
push
cli
ds
cmpsl
repnz
sub
cmp
loope
hlt
jl
ss
cwtl
push
cmpsl
imul
repz
pop
push
push
push
xsavec
sbb
adc
nop
xor
aaa
cli
pusha
in
and
pop
pop
std
adc
mov
roll
les
sahf
scas
xchg
filds
mov
out
mov
imul
sbb
dec
pop
pop
lret
lock
xor
fidivs
aam
pop
js
push
lds
test
push
insb
cmp
and
aad
js
pusha
mov
ret
call
xchg
pop
dec
push
dec
push
dec
test
cmp
arpl
outsl
subl
mov
cmpsl
loope
scas
je
xchg
adc
jae
and
xor
jo
mov
cwtl
cmp
push
andl
inc
lcall
ljmp
aaa
jno
or
frstor
fstps
nop
and
dec
mov
fndisi(8087
xchg
stos
inc
adc
stos
aam
push
sti
leave
push
decl
push
push
xchg
bound
hlt
jae
into
xchg
xor
cmp
cmpsb
sbb
dec
xchg
outsb
xchg
jae
and
inc
mov
lret
mov
jge
lahf
add
and
orl
lcall
mov
and
test
les
lods
and
cmp
aas
icebp
ret
mov
sarl
loopne
or
int3
jle
push
jle
push
jns
adc
xor
int3
roll
cmp
jl
rcr
ss
incb
pop
nop
push
jns
mov
dec
jg
call
out
mov
dec
clc
pop
cs
mov
int
jmp
push
mov
dec
in
in
lods
inc
in
cmpsb
push
jge
faddl
aad
rorb
sub
fistl
std
addl
cmpsl
jne
pop
cmpsl
hlt
loope
adc
je
int
bound
loope
or
iret
inc
pop
fiadds
add
clc
ds
icebp
push
xchg
sbb
mov
push
fisubrs
movsl
mov
outsb
fs
mov
stos
mov
xchg
fnsave
adc
repz
sub
mov
cld
jg
and
cmc
dec
arpl
iret
outsl
pop
inc
push
or
mov
push
test
inc
icebp
jae
mov
into
lahf
filds
fldl
sub
adc
cmpb
and
ret
fistpl
or
push
ds
scas
out
mov
pop
in
push
cli
sub
repz
push
mov
fdivs
fsubrl
repz
icebp
mov
sub
test
cmp
pop
cwtl
loopne
cltd
repnz
dec
orb
das
jno
clc
insl
add
pop
mov
cmpsl
lods
fdivrs
fwait
cltd
mov
mov
dec
lret
adc
xchg
xor
gs
hlt
add
adc
mov
sbb
and
gs
and
push
or
or
push
sar
jae
cli
mov
mov
sub
sub
lods
fistl
ret
imul
mov
ljmp
stos
xor
imul
mov
das
fwait
inc
xor
push
inc
mov
popf
lret
xchg
fbstp
inc
fwait
es
lock
jmp
add
fsubr
xor
pop
fldcw
into
out
test
pop
ljmp
int
aaa
xchg
test
or
sti
test
jbe
sub
loop
jge
cmp
inc
ret
idiv
and
das
push
leave
loop
in
loopne
xor
cmp
dec
dec
loop
add
and
adc
add
je
fs
mov
movsb
jl
insb
test
or
cmp
sub
fdivl
and
adc
add
je
fs
mov
movsb
jl
insb
test
or
cmp
sub
fdivl
movsb
cld
xchg
in
add
je
in
push
lods
inc
pop
xor
movsb
jl
insl
test
or
cmp
xor
and
adc
add
je
fs
sub
mov
xchg
insb
repz
sub
cmp
cmp
or
sbb
sbb
push
jle
outsb
mov
lcall
fcmovu
sub
cmp
or
sbb
push
jp
dec
dec
pop
je
stos
mov
lcall
fcmovu
sub
insb
push
jp
dec
inc
pop
push
stc
jmp
call
test
cmp
pop
push
add
mov
inc
inc
enter
xor
testb
xchg
mov
jle
in
jg
icebp
inc
mov
movsl
pop
push
xchg
inc
pop
jne
lret
out
movsl
lret
inc
and
rolb
arpl
push
xchg
ljmp
mov
stos
stos
shrb
dec
sbb
scas
push
sbb
jl
fwait
sbb
push
mov
xor
stos
das
stos
pop
pop
jne
fwait
adc
xchg
ja
xor
dec
pusha
mull
in
pop
jno
dec
mov
mov
push
push
cmp
sub
add
dec
jg
lret
mov
pop
cli
stc
shr
jb
fcomip
cmp
lret
mov
cmpsb
cmp
or
sbb
jp
dec
dec
pop
enter
adc
cli
adc
rcr
call
outsl
data16
push
iret
xor
das
aas
sbb
jmp
lods
xchg
xchg
mov
dec
jl
jns
jbe
cmp
sub
pop
imul
fcomp
stos
movsl
scas
cli
mov
pop
pop
fisubl
sbb
es
dec
dec
pop
pop
stos
stos
mov
lcall
fcmovu
sub
cmp
or
sbb
push
jp
dec
dec
pop
pop
stos
stos
mov
lcall
fcmovu
sub
lahf
insb
mov
ds
mov
jae
jecxz
gs
in
rcrb
enter
dec
inc
or
inc
cmpsb
hlt
add
cltd
sahf
stos
popf
in
and
andl
aam
cmpsb
idivb
inc
fidivrl
pop
cmp
inc
inc
adc
sarb
jmp
xor
adc
je
mov
mov
sbb
adc
push
int
pusha
or
or
pop
mov
test
loop
and
jae
or
in
arpl
ret
mov
xchg
or
xchg
test
jmp
loopne
adcl
icebp
adc
int3
movsb
sub
mov
and
push
imul
push
push
fldt
xchg
das
mov
inc
lahf
add
cmc
pop
mov
or
xor
in
jp
mov
mov
mov
cli
and
test
lods
scas
mov
lock
sbb
xchg
repnz
call
mov
stos
fadds
and
sahf
fwait
cmp
sarl
ficoml
scas
pop
jae
sub
fdivrl
sbb
or
stos
leave
and
lret
pop
loopne
in
popa
jbe
leave
cmp
and
cs
rorl
out
shrb
insb
pop
dec
mov
jp
jmp
lahf
cmp
fs
sbb
xlat
xchg
aaa
push
aaa
call
dec
in
sarl
pusha
loopne
repz
dec
loope
sbb
cld
sbb
push
bound
jne
jge
pop
jg
push
popf
sub
and
pop
repnz
jne,pn
sbb
cmp
aas
cmp
mov
les
lret
inc
scas
test
shrb
enter
stc
add
insl
mov
cmp
xchg
sbb
iret
in
mov
cltd
inc
push
lds
ss
imul
jl
loopne
adc
cmc
cmp
cmp
popa
xchg
in
jle
cmp
jp,pt
dec
insl
aad
sti
and
jns
add
subl
lock
jge
push
mov
and
mov
or
jae
mov
out
ja
lods
add
or
pushf
scas
jns
add
adc
pop
movsb
je
or
lcall
mov
rolb
sbb
xchg
and
and
fwait
repnz
cmp
loop
dec
pop
dec
push
int3
popa
mov
xchg
dec
jno
xor
and
mov
mov
cltd
mov
and
dec
mov
hlt
push
test
dec
or
xchg
sbb
lock
sbb
nop
or
mov
shrl
add
adc
or
ds
mov
lret
sub
push
sub
pop
xchg
add
cmpsl
mov
xor
xchg
loopne
pop
rcl
aam
add
insb
inc
xchg
sahf
hlt
sub
push
jo
mov
flds
int
cmp
or
in
mov
cli
mov
cmp
frstor
push
jbe
sbbb
push
jg
rol
mov
push
sub
mov
and
lea
mov
sbb
or
enter
sbb
dec
rcrl
addl
jb
pushf
push
cmp
mov
push
push
and
sbb
xchg
cmp
add
ja
jmp
jmp
sbb
sub
mov
mov
pop
xor
call
cli
mov
loop
sbb
lcall
and
xorps
test
enter
call
fcmovnb
pop
mov
inc
stc
out
xchg
adc
mov
sub
or
or
pop
push
inc
xor
nop
jno
ret
xor
mov
fsubl
shr
mov
sub
fdivrl
inc
scas
psrld
xor
mov
aam
lods
movsl
mov
sub
cmp
inc
int3
ljmp
out
das
outsb
dec
and
inc
es
jns
and
pushf
mov
inc
subl
or
sbb
into
imul
rclb
mov
pop
pop
pop
lret
fwait
push
inc
dec
iret
shll
xor
clc
fistpll
adc
cmp
xor
xchg
jbe
dec
push
or
repz
xchg
mov
add
dec
pop
scas
jg
mov
adc
loop
mov
dec
adc
inc
into
mov
lcall
je
inc
pop
mov
test
js
aas
dec
sub
cld
inc
jp
movsb
cmp
shlb
aam
push
dec
les
jbe
pop
rcrb
mov
rcrl
gs
jne
cs
add
clc
cltd
mov
or
aas
dec
sub
push
ret
lea
fwait
adc
cs
insb
sbb
aaa
sbb
jno
add
je
daa
cwtl
mov
into
loop
cmp
divb
fld
lea
ja
inc
sti
lahf
fs
lret
sbb
cmp
or
add
pop
dec
arpl
ljmp
sbb
mov
add
push
mov
arpl
mov
aad
adc
int
dec
jnp
shlb
dec
int
int3
cld
jp
push
inc
shr
loopne
add
fsubrp
sbb
lea
aad
arpl
mov
hlt
lock
movsb
fidivrl
imul
loope
scas
mov
scas
pop
fnsave
les
or
bound
cwtl
pop
dec
mov
dec
dec
or
pop
xchg
insb
mov
push
mov
mov
jp
jl
js
movsl
mov
xor
enter
pop
mov
push
mov
mov
test
mov
out
in
test
mov
stos
je
add
lcall
mov
das
mov
cwtl
mov
cmpl
imul
push
jnp
add
insl
shrb
loope
aaa
cmp
xor
imul
sub
mov
inc
mov
xlat
xchg
and
sub
jae
xchg
mov
scas
call
mov
ljmp
rorb
cltd
ljmp
leave
les
cmpsb
sub
jmp
repz
push
push
xchg
test
adc
repz
jne
lahf
or
enter
outsl
mov
test
movsl
test
xchg
sub
loopne
in
aas
mov
adc
outsb
mov
xchg
bound
mov
adc
xchg
push
xor
ljmp
nop
fstpl
xlat
hlt
clc
test
pop
sub
inc
or
test
add
rol
or
sub
mov
sbbl
gs
xor
cmp
dec
pop
cmp
mov
pop
divl
mov
outsl
cld
adc
pop
int3
jo
mov
ss
pop
nop
cmp
enter
shlb
mov
pusha
jg
in
rorl
shrl
inc
test
xchg
and
mov
ret
mov
lea
testl
mov
mov
inc
aaa
cmp
idivl
stos
inc
jmp
dec
dec
jno
cmp
sub
push
adc
dec
outsl
mov
mov
push
or
sar
sbb
stc
xchg
fnstsw
dec
pusha
je
inc
xor
mov
xor
and
push
lods
loop
loop
xchg
jno
jnp
outsb
ret
insl
orb
movsl
adc
sub
imul
xchg
repz
jge
push
js
outsl
pop
xchg
pushf
sbb
test
dec
xchg
or
popf
fsubs
sub
inc
sbb
xor
mov
pop
mov
jnp
mov
push
rclb
jae
xchg
sahf
pop
roll
and
stos
sti
cs
in
pop
cmp
mov
sub
in
or
mov
aad
test
fwait
sub
std
xchg
and
pop
dec
iret
fwait
cwtl
push
adc
fsts
stc
ja
sbb
dec
jecxz,pn
cmp
stc
add
pop
out
mov
sbb
repnz
mov
xor
adc
sbb
lahf
fstpt
sbb
lock
lds
and
adc
mov
je
adc
dec
jne
or
cmp
fcoml
je
nop
jb
jae
pop
add
das
and
in
xlat
pop
jmp
call
mov
mov
add
leave
lcall
or
cmp
sbb
repnz
jb
push
sbb
jbe
xchg
gs
roll
or
lds
jbe
mov
inc
sbb
outsl
into
aad
and
cs
adcl
mov
dec
xchg
push
in
leave
je
ss
std
lahf
aad
sub
xor
pushl
fisubs
outsb
shlb
push
outsb
loop
add
or
push
sbb
mov
sbb
inc
jb
and
inc
les
jge
mov
sub
jg
out
lret
popa
inc
push
pop
mov
movsl
add
jmp
aaa
ficoml
fmuls
sbb
ret
sub
mov
pushf
push
incb
inc
sub
adc
push
mov
jae
pop
or
mov
dec
cld
stos
out
lcall
orl
jp
push
inc
push
cmp
icebp
sub
repnz
push
push
mov
call
push
pop
push
aam
xor
mov
cmp
inc
xor
xor
jg
test
addr16
mov
cs
jle
mov
fimull
rcll
idivl
mov
mov
das
jnp
jg
mov
cmp
xchg
inc
rcl
jns
std
or
popf
mov
mov
rorb
jle
inc
in
sub
mov
pop
add
inc
imul
xor
aad
add
popa
loop
jecxz
cmpsb
mov
in
cmp
pop
es
mov
xor
dec
test
mov
mov
iret
cmpsl
pop
or
mov
je
push
or
loope
pop
fs
fucomp
subl
fwait
out
shll
inc
cmpsb
adc
loope
stos
shlb
pushf
cmp
in
nop
xchg
cmp
xor
sbb
mov
arpl
mov
sbb
mov
pop
cmp
xchg
out
mov
mov
pop
cmp
push
mov
mov
inc
adc
bnd
test
xlat
vcvtpd2dqx
ss
jg
push
movsl
in
popa
clc
and
pusha
xchg
lock
outsl
in
rcr
jo
int3
enter
sbb
jmp
aaa
xchg
push
pop
inc
or
xchg
scas
sbb
add
cmc
adc
das
pop
xchg
jo
ja
xchg
mov
push
les
lret
and
pop
sub
fsts
and
std
inc
out
fsubr
sti
jnp
lret
adc
test
pop
ljmp
or
dec
adc
xor
dec
mov
push
xor
bound
mul
mov
adc
and
fs
cwtl
sarb
and
adc
loopne
push
aas
dec
jns
std
jnp
les
std
cld
into
xor
mov
cmpb
js
inc
out
in
lods
shlb
fisttps
push
mov
or
cltd
aad
cmc
mov
in
adc
push
xchg
or
jp
jnp
inc
call
enter
push
fistl
adc
mov
mov
inc
dec
dec
insl
sbbl
or
push
pop
mov
outsb
jo
pop
stc
pop
mov
aas
fists
fisttps
sub
push
fstpl
les
sub
outsl
cmp
cmc
test
mov
sbb
lods
hlt
mov
pushf
jno
ja
mov
mov
xor
rcl
jge
pop
cltd
popa
negl
pop
mov
stos
pop
jo
fstps
push
mov
popa
jne
testl
pop
std
ret
push
adc
dec
into
mov
sbb
jne
mov
and
cmp
push
mov
in
or
mov
cmp
jb
fsts
mov
mov
pop
cmpsl
lods
repnz
test
mov
cmpsl
fstps
popa
pop
inc
add
push
inc
jmp
popa
iret
xor
lret
jae
sbb
cmp
imul
mov
add
popf
rcrl
fsub
mov
es
cmpsb
push
jp
fstpl
adc
sahf
push
mov
int3
xabort
lods
adc
xchg
jge
mov
ds
nop
dec
pop
daa
fidivl
jnp
lea
lahf
xchg
fiadds
xor
pushf
jno
scas
cmpsb
fimuls
push
adc
push
cli
insb
dec
cwtl
loop
xlat
into
and
lcall
sbb
imul
cmpsl
repnz
add
mov
call
pop
xor
sbb
insb
mov
fsubp
jbe
xor
imul
stc
in
mov
cld
or
lods
jbe
jl
ficompl
aam
cmpsb
ficoms
xchg
fsubl
xlat
push
out
mov
idivb
add
scas
jb
sti
adc
adc
arpl
xor
clc
mov
mov
cmp
jae,pn
sub
mov
or
loop
or
adc
cmpsl
dec
xchg
cmpsl
jo
js
int3
or
sub
xor
lods
cmp
loopne
mov
xchg
repz
jb
push
ret
mov
std
push
mov
jns
loope
cltd
push
call
cmc
fstpt
jb
push
adc
adc
sbb
dec
xor
add
stos
negl
nop
dec
xor
fisubl
pop
sub
stc
subl
dec
cli
imull
rol
or
push
inc
arpl
push
lods
lods
nop
xlat
icebp
xor
xor
mov
jl
sub
mov
out
dec
pop
cmp
add
jle
popf
jg
add
stos
sub
divl
sbb
push
cli
jne
xchg
fs
roll
in
jb
stc
dec
mov
cmc
lea
xor
pop
xor
pushl
mov
pop
mov
or
pop
bnd
sbb
aam
loope
inc
jo
cmp
sti
mov
push
arpl
out
inc
leave
outsb
cmp
cld
leave
std
xchg
dec
aad
mov
aaa
arpl
mov
scas
movsl
sti
mov
pop
lahf
pop
and
cmpsl
pop
fwait
xor
test
mov
dec
jle
popa
int
ljmp
xlat
push
into
cld
fildll
inc
jnp
fidivrs
jb
jg
mov
lods
mov
je
leave
jmp
sub
jp
cmp
jno
std
icebp
in
mov
push
out
mov
in
dec
out
leave
pop
push
orl
xchg
dec
push
test
add
lds
in
mov
popf
adc
fmull
call
adc
mov
xchg
mov
mov
rolb
dec
sub
dec
sub
stc
adc
into
fisubl
mov
push
cli
popf
add
lds
or
jno
xor
mov
divb
push
ret
test
inc
xchg
pop
jnp
ret
inc
cli
pop
mov
mov
lahf
aam
xchg
mov
loop
mov
popa
xor
push
dec
xlat
int3
add
mov
scas
subl
push
bound
enter
xchg
inc
and
daa
add
repnz
out
jmp
xor
sbb
xchg
xchg
sahf
xor
in
jns
fisttpl
push
or
xchg
cmpsl
js
mov
in
mov
inc
lahf
test
mov
adc
sbb
jg
repz
add
in
arpl
xchg
std
jge
int
mov
fwait
and
mov
ret
xor
scas
sbb
xor
pop
add
xchg
dec
andb
xchg
hlt
and
test
sbb
cmpsb
fwait
mov
ss
adcb
xchg
jp
or
cmp
ja
xchg
cli
xor
cmpsb
movsl
jg
cmp
call
inc
xor
jge
shrl
pop
sub
jae
mov
xor
into
sub
stos
mov
add
cmp
xor
xor
lcall
add
xor
or
test
dec
imull
pop
sub
call
lcall
xchg
mov
lods
push
daa
add
loop
fistps
inc
std
sbb
xor
scas
mov
push
scas
test
and
mov
iret
push
inc
push
fnstsw
jnp
ss
dec
in
push
icebp
movsl
addb
test
pop
mov
mov
inc
cwtl
xchg
pop
popa
dec
cmpb
cmp
mov
dec
mov
dec
or
mov
mov
ja
jo
mov
jbe
xchg
movsl
cmpsb
les
xor
adc
sti
scas
icebp
dec
pusha
cli
pop
dec
xchg
je
jo
mov
push
daa
ja
movsb
cltd
not
das
fldt
arpl
or
or
dec
dec
xorb
and
lahf
xchg
xor
pushf
mov
push
cmc
stos
je
sbb
pushf
sbb
push
pop
fsubs
and
jmp
mov
xor
imul
mov
add
mov
icebp
push
jecxz
loope
push
es
std
loop
int
cld
lret
popa
xlat
std
jno
fcoml
pop
in
fisubrs
jmp
pop
xor
inc
sub
mov
push
loopne
movsl
and
cltd
popf
in
loopne
inc
mov
adc
mov
mov
jae
fsubr
outsb
shl
fstps
arpl
jb
test
jnp
push
rcll
sti
push
jno
cltd
lcall
cwtl
xchg
xchg
jecxz
sti
dec
sarl
das
data16
out
outsb
dec
int3
xchg
sub
xor
pop
add
into
inc
mull
xchg
jl
ss
and
lods
fistl
lods
mov
and
jl
cmpsb
sub
and
mov
jb
iret
jne
push
cld
into
mov
fs
or
pop
cs
lods
cmp
les
loop
xchg
cmp
jns
jg
cmc
pushf
je
mov
outsl
mov
push
add
pop
insl
pop
mov
inc
popf
adc
mov
pop
cmp
xchg
rol
fdivl
mov
pop
xor
jmp
jg
pop
jno
in
push
inc
out
or
in
icebp
xor
jbe
cmpl
imul
mov
xchg
shl
dec
pushf
dec
aad
ds
mov
lods
lret
cmc
mov
sub
xchg
cmpsl
fsubl
lcall
add
add
rcrl
add
xchg
test
lret
add
es
ds
and
push
loopw
test
in
rorb
popf
faddl
or
bound
dec
sub
pop
jbe
inc
dec
scas
movsl
add
mov
cmp
cmp
fbstp
mov
jbe
add
ret
je
mov
push
xorl
addr16
pop
sub
lea
xor
push
daa
ret
mov
cmp
mov
int3
jbe
dec
loopne
movsl
mov
jp
test
xor
testb
sahf
add
xor
pop
mov
iret
and
xchg
jne
dec
pop
cmp
cld
bound
shlb
shrb
mov
inc
push
je
mov
nop
inc
testl
in
mov
inc
popf
push
sbb
push
shl
or
out
andb
lret
jl
fbstp
xor
orb
xchg
dec
lock
dec
xchg
push
mov
mov
fbld
jle
inc
xchg
mov
dec
xchg
or
xor
mul
sbb
pop
sbb
xchg
repnz
imul
imul
jb
sbb
imul
data16
fwait
imul
xchg
inc
pop
xor
clc
xchg
out
popa
pcmpgtb
popa
mov
sbb
fdivrs
cmp
cmpl
jns
push
sub
and
std
out
mov
enter
fstpt
mov
jecxz
pop
rolb
lea
mov
cltd
out
xchg
cmpsl
out
dec
clc
mov
addr16
dec
sti
es
test
sti
lea
mov
idiv
sub
mov
orb
xchg
xchg
lret
or
js
shrl
add
sbb
mov
pop
cltd
sbbw
adc
lcall
fwait
mov
jbe
mov
nop
loopne
or
cld
sub
fwait
sbb
movl
mov
nop
aas
hlt
hlt
push
lcall
int
movsb
sahf
inc
mov
cmpsl
rcrl
xor
adc
sbb
and
loope
es
lret
loop
in
inc
xor
push
lcall
ret
fisubrl
daa
mov
dec
movsb
pop
xchg
mov
cmp
cld
mov
dec
out
rcrl
lods
out
jp
je
stos
pushf
dec
test
push
pusha
mov
mov
cmpsl
sbbb
call
mov
loope
pop
inc
je
xor
mov
xchg
fdivrl
mov
iret
fidivl
xor
mov
jmp
bndldx
push
jp
dec
dec
pop
pop
stos
stos
mov
lcall
fcmovu
sub
cmp
or
sbb
push
jp
dec
dec
pop
pop
stos
stos
mov
lcall
fcmovu
sub
cmp
adc
push
push
jp
dec
dec
pop
pop
stos
stos
mov
xchg
ljmp
ds
cmp
or
sbb
push
jp
lret
stos
push
mov
in
popf
xchg
jb
xor
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
iret
adc
add
xor
and
xchg
bound
fdivrl
or
sbb
sub
sub
test
faddl
xorb
and
mov
orb
sbb
sub
cmp
je
add
and
xchg
push
cld
inc
mov
mov
mov
xchg
js
pusha
xchg
mov
pop
xchg
and
stc
xchg
jmp
xor
fimull
sbb
sub
mov
insb
outsb
jns
mov
jp
push
jmp
rolb
sub
ret
mov
adc
and
pop
ffree
movsb
orl
repnz
pop
ret
add
push
mov
or
adc
icebp
pushf
inc
push
sbb
call
rcrb
sub
rclw
bound
jo
adc
daa
sbb
inc
insb
insl
insb
dec
cmp
aam
xor
xchg
inc
in
and
bound
jne
push
jp
daa
jg
pop
shl
dec
mov
sub
aas
notl
xor
and
in
lods
jb
bound
mov
mov
push
repnz
movsl
push
scas
inc
cwtl
xor
fdivs
ss
jmp
orl
sbb
jle
jb
inc
mov
xorl
and
ds
push
pop
sbb
push
sub
push
sti
insb
loope
jne
jae
inc
movsb
jge
mov
inc
scas
inc
fistpll
lods
jb
bound
subb
or
sbb
sub
cmp
int3
adc
add
xor
and
mov
subb
or
sbb
sub
cmp
int3
adc
fistpll
inc
es
ret
and
repnz
xchg
or
inc
cmc
dec
lcall
loope
stos
cltd
xchg
pop
test
xchg
addr16
and
dec
mov
adc
mov
mov
pop
xchg
mov
mov
fs
out
cmp
add
pop
imul
popa
pop
jp
sbb
jl
xchg
std
roll
divb
and
xorb
mov
addr16
lock
out
cmp
mov
fwait
test
imul
mov
add
jo
cltd
mov
sub
jne
jmp
or
cmp
and
js
dec
fiadds
adc
mov
add
hlt
lcall
add
lcall
ret
xor
dec
test
lods
outsl
out
pop
bound
fs
add
loop
jp
movsl
cwtl
ss
dec
or
jno
loopne
ret
daa
dec
lds
pop
mov
or
push
push
fidivs
stos
dec
cld
push
aad
call
jp
repnz
mov
mov
orb
pop
add
xor
ds
push
mov
repnz
jae
sbb
xor
push
mov
inc
iret
add
mov
jno
xor
push
sbb
sbb
lret
rclb
sbb
mov
cmp
repnz
mov
add
cmp
push
into
mov
adc
add
jmp
aas
mov
and
fistpl
popa
mov
sbb
cmp
dec
xchg
xor
sbbb
fstpl
xchg
cwtl
clc
mov
dec
cmpsb
rcrb
fisubs
jl
xchg
add
in
loopne
cltd
loopne
and
push
movsb
test
cmp
loop
cmp
sbb
mov
hlt
add
jb
cmc
insb
pop
adc
mov
dec
jl
cmp
lahf
jle
outsl
mov
adc
aam
mov
sub
daa
mov
mov
popa
clc
testb
outsl
jl
cmp
add
inc
ret
xchg
add
xor
sbb
push
adc
out
pop
or
aad
ret
xor
cmp
aam
or
pop
jo
test
xchg
cli
mov
jbe
cwtl
cmp
adcb
and
and
cli
aam
and
shll
mov
sub
xor
stc
add
loop
int3
fwait
daa
add
in
icebp
mov
idivb
push
pop
add
and
or
iret
in
cmpsl
cltd
andl
or
xor
outsl
lea
lock
cmp
lret
sarl
aas
fs
cmp
mov
mov
sbb
jne
xchg
popa
pop
lret
xchg
gs
sub
fcompl
adcl
fiadds
mov
js
das
mov
cwtl
into
ret
jg
sub
outsl
ret
cwtl
mov
xor
push
push
push
notl
jne
sbb
enter
bound
mov
neg
sub
in
popa
inc
pop
aam
mov
movsl
sub
out
push
adc
inc
add
sub
test
pop
lret
mov
inc
stc
sbb
cmp
push
ficoms
mov
inc
mov
imul
aam
pop
sub
gs
icebp
aam
pop
scas
or
mov
cmp
leave
lret
adc
mov
nop
enter
repnz
out
push
push
mov
cmpsb
push
sti
add
pop
push
add
and
inc
xchg
xchg
jge
cld
int3
jl
push
pop
in
leave
jb
or
sbb
ficompl
sbb
cmp
dec
sub
arpl
testl
pop
fadds
jns
ss
mov
mov
fisttpll
pusha
loope
jle
xchg
repz
iret
mov
inc
xor
mov
xor
ja
addr16
mov
mov
or
daa
and
imul
xchg
mov
pusha
aaa
mov
enter
aad
inc
loope
sbb
mov
mov
test
in
in
inc
xor
in
fists
sbb
not
mov
sub
in
gs
add
push
stc
inc
int3
and
sbb
fsubs
fiadds
negl
cmp
bound
stos
push
das
inc
xchg
mov
je
push
mov
jb
xchg
stc
mov
cmpsb
jge
aam
fs
mov
jbe
movsl
or
scas
dec
lret
out
or
dec
movb
lea
mov
stos
mov
inc
out
push
mov
jno
sub
sub
rol
decb
adc
xchg
jae
out
loope
inc
rcr
xor
jp
mov
ja
in
xchg
pop
jns
push
imul
mov
fldt
lds
ja
popa
and
insb
fnstenv
inc
out
aas
mov
aad
rcll
lods
gs
adc
xchg
int
pop
pop
and
sbb
mov
arpl
cmp
out
inc
imul
cmpb
pop
pushf
dec
lock
jae
fsubl
fnstsw
mov
pop
loop
fdivrl
sub
jb
push
jp
xchg
push
add
das
addr16
cmp
mov
pop
inc
inc
arpl
in
lahf
xor
repnz
jae
in
xor
push
push
cwtl
mov
inc
pop
push
push
jg
sbb
sti
xchg
adc
daa
lret
jo
mov
jg
cs
cmp
sbb
scas
sub
jbe
mov
push
leave
sbb
stos
sti
in
movsb
ds
pop
fxtract
sbb
cmp
std
sub
test
in
test
lahf
and
lea
arpl
xchg
jno
imul
and
in
pop
jnp
icebp
test
jmp
push
hlt
rol
mov
sbb
lds
or
dec
adc
push
data16
aas
inc
adc
pop
jns
mov
mov
mov
mov
pop
outsb
daa
mov
jl
fisubl
js
hlt
dec
idivl
mov
or
push
or
les
inc
inc
mov
pop
lret
cwtl
aas
outsb
jg
cmpl
cmpsl
ret
cmp
cwtl
das
scas
mov
or
mov
xor
call
pop
adc
inc
and
adc
inc
repnz
sti
outsb
scas
stos
mov
jb
lcall
add
mov
int3
insb
test
ret
xchg
lds
push
insl
push
jae
pusha
into
jmp
inc
jp
ffreep
pop
xor
cs
jmp
mov
push
andl
push
filds
and
adc
xor
nop
int
orl
pop
pop
pop
ret
icebp
sbb
mov
xor
sti
jp
push
xor
mov
cmpsl
enter
sub
sbbl
mov
xchg
lds
push
pop
fs
add
daa
addl
lahf
addr16
les
jno
dec
mov
mov
push
fsubrl
subb
test
aaa
cs
xor
push
xor
stos
pop
cmp
xorl
shrb
outsb
push
push
push
push
popl
in
cld
popa
in
mov
push
sbb
aas
fdivs
ds
adc
lea
and
adc
testl
fcoml
scas
pop
and
cmc
lahf
frstor
push
or
ja
outsl
sahf
mov
push
fistl
cmp
stos
add
mov
xor
mov
cmpsl
mov
push
push
in
dec
mov
sarb
outsb
cmp
xor
add
mov
cmpsl
rcr
in
and
jecxz
sub
cmp
fsubl
jnp
bound
ret
mov
pop
ret
addr16
and
adc
dec
xchg
addr16
jg
outsl
dec
push
jns
add
adc
arpl
aas
mov
fldenv
inc
aam
sahf
jo
mov
sahf
lea
movsl
cmpl
hlt
xchg
js
jle
testb
push
xchg
push
cmovge
sbb
je
xchg
outsl
rorw
out
push
sarl
lcall
pop
inc
lods
sub
negl
inc
test
in
mov
in
addr16
int3
jb
mov
xlat
test
sbb
ja
fsub
lock
nop
aam
aam
pop
push
mov
mov
sahf
out
nop
icebp
int
mov
jge
pop
repz
adcl
cmp
sub
fwait
test
lret
aas
out
inc
ret
divl
popa
cmp
sub
and
sbb
or
iret
inc
or
pop
enter
insb
mov
mov
add
lods
fnstsw
fildl
jg
xor
mov
adc
adc
mov
imul
lods
fdivrp
mov
jle
das
xchg
clc
xor
into
adc
lcall
pushf
mov
and
ljmp
adc
shr
adc
sbb
push
mov
add
xchg
pusha
nop
and
cli
sub
jmp
pop
leave
addb
adcb
mov
bound
cltd
rclb
test
mov
mov
testb
mov
and
test
xchg
mov
out
adc
push
inc
push
gs
mov
add
xor
icebp
cmp
lods
into
mov
push
push
xorl
mov
pusha
push
xchg
xor
jge
movsl
mov
push
push
sbb
clc
fsubrs
pop
adc
or
mov
and
fs
jl
xor
ss
into
jno
sub
lea
out
iret
lahf
adc
repnz
aaa
in
in
out
js
fldcw
dec
pusha
mov
push
sti
sub
loope
add
shl
and
lret
outsb
pop
repz
sbb
fwait
outsb
add
jo
js
mov
inc
stos
ret
mov
jnp
lcall
push
add
mov
rol
lea
mov
inc
in
or
mov
orl
xor
les
mov
fiadds
insb
xchg
or
adc
and
stc
daa
pusha
or
mov
into
ret
mov
xor
ret
stos
shll
xchg
xor
test
sub
pop
cmc
add
sub
out
mov
mov
push
dec
dec
jl
jne
add
fildll
cmp
mov
dec
cld
in
out
push
stos
cmp
mov
jl
das
jle,pt
sbb
sbb
sub
cltd
orl
xor
jp
sub
adc
cltd
gs
ret
xor
dec
pushf
xor
cmp
shl
mov
sbb
mov
fisubrs
or
scas
xchg
cmp
lcall
in
jno
jne,pn
push
int3
and
popf
or
cmp
sbb
enter
pop
cmp
notb
or
into
mov
sub
test
cmpsl
jecxz
inc
lret
imul
iret
and
shl
add
mov
xlat
mov
cmp
dec
sub
ja
sbb
and
xor
and
jg
jae
andb
loopne
rol
inc
inc
fimuls
add
and
or
mov
jnp
cmpsb
cmp
jo
cli
mov
push
mov
fs
cs
xchg
fistl
fbld
and
inc
lods
mov
dec
lcall
inc
lds
push
filds
xor
lock
lret
sbb
dec
in
or
mov
popf
mov
cmp
or
pop
dec
loope
out
push
out
push
inc
enter
or
sub
loop
scas
jbe
mov
cmp
sti
es
jae
mov
aaa
cld
sub
in
push
fldl
rclb
test
sbb
dec
fimuls
jnp
ljmp
lds
fstps
iret
rorl
fdivrl
push
cltd
mov
imul
pop
jne
pop
adc
insl
aas
mov
mov
and
stc
fidivrs
mov
jge
pusha
pusha
pushf
test
mov
ret
rcrl
insl
dec
repnz
and
push
in
mov
inc
mov
pusha
pop
clc
jne
lock
xor
inc
mov
cmp
sub
shrb
cmp
adcb
aam
pop
mov
sub
push
adc
mov
fidivl
sbb
int3
outsb
int3
pop
xchg
add
in
mov
cmpsl
pop
mov
lds
dec
xchg
push
cmpsl
jb
addr16
jp
pop
arpl
mov
popa
insl
fs
subl
fldcw
pop
std
lods
out
xor
loop
rcrl
inc
movsl
mov
mov
sbb
addl
in
sbb
push
jl
jne
icebp
mov
aaa
or
xchg
js
mov
push
je
inc
push
jae
jns
and
cmp
mov
in
shlb
sbb
pop
dec
jg
jg
ds
iret
jp
in
mov
mov
sub
das
xchg
xchg
mov
sub
mov
lret
xchg
mov
xor
push
jl
dec
es
lea
inc
jns
jne
mov
ret
ret
pop
sub
divb
jae
xchg
add
pop
inc
popa
je
js
xor
mov
ret
add
out
clc
sbbl
dec
pop
adc
icebp
sbb
mov
aas
out
lret
adc
repnz
or
incb
mov
jp
adc
std
icebp
icebp
sbb
movsl
enter
add
icebp
fiadds
mov
xor
lea
scas
and
andb
ja
std
xor
das
sbb
or
mov
mov
rorb
pop
pop
adc
stc
pop
xchg
sub
ret
sbb
jns
pop
push
dec
mov
mov
sbb
popf
scas
mov
in
cwtl
push
sbb
add
jne
fs
xor
xor
jl
pcmpeqb
in
push
or
aas
dec
in
test
loopne
jecxz
das
jg
pusha
mov
loop
cltd
push
adc
or
insb
clc
cmp
aad
lret
sbb
icebp
fldl
sbb
movsb
fwait
adc
sbb
jne
in
insb
add
les
fs
pop
xlat
jns
int3
mov
push
negb
stos
mov
rol
dec
jnp
out
cmp
pop
leave
ja
pusha
inc
icebp
mov
pop
arpl
inc
lea
push
sbb
sbb
in
int
sub
cmc
lock
or
fdivs
dec
fldcw
sub
sbb
js
add
sbbl
lret
add
mov
lea
pop
orb
and
lcall
lods
fwait
sbb
push
sbb
mov
les
insb
adc
mov
call
mov
stos
xor
cmp
es
pop
stos
daa
fmul
subb
rcll
xor
loope
cmp
and
jl
fisttpll
xor
add
mov
pop
les
rcrb
sub
sarl
pop
and
jno
push
inc
cmpxchg
fstpt
mov
or
xor
dec
add
sahf
sti
lock
notl
dec
out
fcompl
into
roll
xchg
sub
xlat
ss
int3
mov
enter
in
je
cwtl
fwait
push
xchg
dec
sarl
mov
mov
mov
aas
push
jb
add
push
mov
and
adc
inc
dec
aad
mov
cltd
inc
bound
in
push
out
jb
mov
push
and
out
mov
scas
sahf
mov
xchg
mov
data16
popf
pop
pusha
mov
pop
iret
pop
xchg
xor
mov
jle
sbb
stos
fcmovnbe
sbb
jnp
jmp
pop
xor
test
aad
pop
ret
xchg
jge
pop
sti
pop
push
sbb
xor
imul
or
add
or
in
je
xor
in
rcrl
fimull
jae
cmp
stos
push
push
inc
pop
fstl
mov
fidivl
das
add
mov
faddl
push
cmp
ds
or
lcall
pop
mov
out
push
hlt
and
pop
iret
pushf
mov
test
out
lds
pop
fmuls
icebp
adc
orb
loope
inc
stos
notb
add
adc
xchg
dec
dec
mov
dec
shl
lahf
pop
jbe
in
cs
mov
mov
and
ret
dec
inc
fimuls
xchg
xorl
lcall
xchg
mov
push
xor
jle
jmp
lock
iret
in
add
cmp
orb
sub
jge
les
insl
push
sub
pop
loop
adc
inc
and
les
inc
xor
ljmp
mov
push
push
jo
leave
notb
dec
mov
pop
sub
xor
scas
sbb
push
cli
push
subl
sbb
mov
imul
dec
pushf
xchg
pop
push
insl
jmp
mov
fstpt
xchg
lods
shlb
sbb
loop
inc
add
jnp
call
mov
aaa
inc
mov
sub
cmpxchg
repnz
cltd
loope
lds
mov
adc
xor
cmp
clc
sub
mov
in
mov
dec
cli
scas
arpl
shrl
imul
cmp
mov
jo
lret
in
cmp
dec
cmp
inc
cmpsl
lahf
icebp
test
sbb
mfence
arpl
dec
fcoms
and
mov
cs
bound
xchg
aad
negl
out
mov
cwtl
stc
xchg
cmp
flds
daa
scas
rep
mov
aam
or
mov
or
or
mov
cmp
stos
orb
mov
push
pop
stos
imul
xor
lods
scas
sub
cmp
pop
imul
mov
fwait
dec
mov
popf
inc
andb
stc
dec
fsubrl
push
push
fisubl
leave
mov
movsb
or
cmp
test
lcall
addr16
test
loope
aaa
lret
lret
push
push
mov
int
push
fdivs
jecxz
outsl
lea
jb
sub
mov
js
push
dec
pop
das
pushf
add
in
push
pop
cmpsb
movsb
out
pop
in
fcomip
test
out
pushf
arpl
dec
add
fwait
cli
mov
mov
mov
mov
aaa
mov
and
xor
loop
add
cmp
iret
cmp
and
mov
fnsave
je
mov
xor
sub
mov
cmpsl
int3
inc
xlat
jmp
jae
lods
pop
rep
dec
insl
xchg
arpl
icebp
push
les
je
xchg
cli
cltd
adc
das
and
scas
mov
pop
adc
scas
xchg
mov
outsl
mov
cltd
hlt
push
ret
jecxz
adc
sbb
mov
call
inc
cmc
pop
je
and
hlt
jg
xchg
jle
mov
cmp
add
mov
xor
mov
ds
sti
popf
imul
lods
add
mov
pop
aam
test
fcmovnb
cmp
xlat
add
ret
pop
cwtl
jne
mov
jmp
sub
dec
stos
roll
bound
lock
push
adc
ljmp
xor
push
push
push
fstps
ds
add
dec
adc
mov
dec
stos
xor
xchg
push
ja
mov
sbb
pusha
pop
and
mov
push
mov
rorb
into
arpl
movsb
xor
mov
jb
mov
fcoms
repnz
repnz
xor
aaa
xchg
pop
lret
pop
xchg
pop
dec
or
push
mov
mov
cmp
and
and
rcll
pop
pop
mov
push
insb
dec
push
adc
push
add
add
rorl
xchg
pop
or
enter
sbb
push
add
decb
divb
jge
push
out
stos
fdivl
xchg
daa
adc
daa
inc
sub
pop
push
mov
adc
out
add
push
sbbb
rcr
call
pop
inc
and
xor
sub
pop
out
dec
popf
imul
sbb
fwait
jb
pop
stos
outsb
mov
mov
das
es
lcall
insb
out
mov
jp
testl
sub
xchg
cmp
je
mov
xchg
aas
clc
aad
mov
xor
sub
cwtl
dec
lds
adc
mov
fdivrl
add
adc
jecxz
mov
mov
hlt
push
ficoml
test
jle
pop
stos
scas
xor
add
adc
mov
cmpsb
adc
mov
xor
push
push
mov
pop
or
lods
sbb
push
jno
lods
int
pushf
movsb
pushl
sti
xchg
inc
jmp
lea
cwtl
movsb
add
push
pushf
inc
lods
jb
bound
subb
or
sbb
sub
cmp
int3
adc
add
xor
and
mov
subb
or
sbb
sub
cmp
int3
adc
add
pushf
inc
lods
jb
bound
sbbb
ret
aam
fcoms
addb
xor
and
cmp
dec
xchg
mov
aad
pop
xchg
cmp
mov
rcl
sarl
incb
inc
push
jno
and
jno
add
adc
div
icebp
loope
rcl
shll
xchg
in
jno
popa
and
push
xor
add
adc
clc
icebp
call
sarl
xchg
sub
ja
jge
je
jbe
mov
mov
dec
mov
push
popf
mov
mov
push
or
push
vpsllw
mov
dec
sub
sbb
test
mov
popf
and
in
test
icebp
and
cld
mov
xchg
dec
mov
jno
pusha
adc
mov
stos
pushf
int
jl
hlt
and
pop
xchg
test
xchg
popa
push
lea
sahf
inc
xchg
or
roll
add
xor
push
cwtl
movsl
int3
icebp
cmp
xchg
rolb
push
scas
push
inc
mov
xor
icebp
testl
sbb
gs
and
jno
adc
and
icebp
loope
rol
shll
mov
pop
push
dec
inc
cmp
sub
add
or
icebp
xchg
cwtl
movsb
nop
mov
aad
hlt
cld
cmc
adc
add
xor
push
data16
popf
icebp
lea
in
aam
arpl
adc
and
inc
push
inc
mov
je
push
mov
sarl
adcl
push
inc
and
xor
add
adc
loope
icebp
loope
rcl
shll
xchg
andl
push
inc
and
xor
add
adc
loope
xor
cwtl
mov
popf
and
leave
gs
popa
add
and
popf
push
orl
mov
add
dec
pop
mov
push
jae
sbb
popf
notb
or
fs
fildll
es
or
and
lds
or
addr16
dec
sub
ret
jbe
in
xor
rcll
sbb
sbb
outsl
sub
leave
mov
cmp
sub
inc
pop
jecxz
add
mov
scas
mov
inc
adc
jo
stos
and
bound
icebp
jno
pop
call
jne
lret
aad
lea
icebp
ss
push
rorl
xchg
mov
pop
js
lret
mov
test
sbb
pop
xchg
jno
add
xchg
cmpb
mov
mov
cmpsl
mov
outsl
notl
test
or
pop
mov
sub
pop
daa
cmc
in
cmc
cltd
nop
in
fcomps
jge
mov
addr16
loop
adc
xchg
jl
jecxz
inc
xor
xor
fldenv
xchg
mov
add
cmp
stos
cli
jnp
shl
jp
mov
push
jge
adc
mov
or
mov
pop
lcall
popf
lret
test
adc
inc
lret
jle
sub
or
or
jnp
jmp
stos
mov
nop
out
jg
movb
loope
mov
xor
lret
sub
bswap
mov
lcall
das
xchg
mov
sti
dec
push
jne
out
push
mov
jo
lret
fnstsw
mov
mov
call
push
push
in
sbb
ljmp
pop
lahf
in
adc
pop
test
icebp
sbbl
ds
ljmp
dec
cmp
insl
add
js
xor
arpl
shlb
mov
xchg
inc
xchg
or
insb
loope
pop
cltd
pop
sbb
aam
jge
inc
adc
js
imul
les
mov
or
fs
adc
cwtl
or
add
insb
lock
push
paddusw
sbb
cmp
sbb
add
lock
pop
dec
andb
sbb
loope
dec
jb
shll
add
xchg
lcall
pop
shlb
add
hlt
fidivrl
ret
dec
pop
mov
sbb
pop
adc
scas
testb
fists
iret
stos
xchg
xor
mov
lds
xlat
les
adc
scas
mov
cmp
lods
fdivl
rcpps
loop
xchg
push
xor
push
repz
insl
stos
inc
xlat
das
imul
psadbw
movb
xlat
push
push
jbe
and
xchg
dec
subb
xor
rcr
pop
fisubs
gs
push
aas
daa
loope
insb
loopne
cmp
fimuls
inc
mov
mov
sub
and
hlt
nop
imul
mov
push
cmpsl
rorb
in
andb
inc
and
add
push
mov
repnz
adc
movsl
pop
cmpsb
loopne
jge
xchg
inc
mov
daa
mov
push
insb
fs
xchg
rcr
inc
and
dec
push
loope
mov
in
das
push
jmp
jmp
or
jns
push
mov
mov
adc
insl
xor
in
in
arpl
cmp
and
call
cli
pop
cmp
pop
ss
and
ret
shlb
jo
in
insb
ficompl
loopne
mov
aam
scas
pop
movsb
xor
dec
mov
xchg
xor
inc
mov
add
dec
fmuls
ficoml
and
dec
adc
xchg
test
jne
pop
xchg
xor
sub
inc
stc
outsb
int
pushf
mov
xor
mov
icebp
out
xor
mov
lds
notb
cwtl
xchg
adcl
sbbb
pop
cmp
xchg
jno
or
sub
mov
js
sbb
testb
dec
stos
and
mull
push
xchg
sub
ljmp
inc
pop
scas
ficoms
fbstp
pop
gs
inc
lea
mov
fcmovu
jl
icebp
sti
push
mov
mov
or
pushf
xchg
mov
hlt
loope
ljmp
xor
or
mov
inc
xlat
or
dec
rorb
aaa
nop
pop
inc
lods
sub
outsl
mov
or
sahf
mov
jmp
std
inc
in
es
or
loop
sub
scas
fnsave
popa
loopne
dec
mov
push
xor
mov
bound
enter
sub
cmp
push
stos
into
les
sti
daa
mov
je
aad
aam
out
pop
dec
or
mov
in
mov
cwtl
repz
cmp
icebp
bnd
arpl
stos
pusha
push
xor
test
fs
pop
insl
dec
mov
popa
ret
adc
push
scas
inc
jbe
push
xor
shlb
jo
test
jp
sub
push
dec
in
cmpsb
push
cmp
xor
adc
push
jg
outsl
fildll
out
inc
or
test
getsec
xchg
inc
cmp
jg
in
mov
lcall
stos
clc
lret
gs
pop
scas
cmp
xchg
push
sub
or
mov
aad
enter
movsl
js
xlat
out
push
loope
jo
stos
insb
insl
lea
mulb
mov
xchg
dec
push
loop
and
push
push
stos
and
adc
insb
mov
iret
fsubrl
stos
pushf
std
or
push
mov
mov
mov
and
sub
adc
sti
xchg
in
mov
in
cwtl
adc
dec
loope
push
lods
or
mov
std
shlb
ja
out
sbb
addr16
sbb
xchg
ds
popa
xchg
data16
je
fisttps
fists
sub
shlb
mov
daa
insl
dec
lret
outsb
and
cmpb
push
bound
mov
fldt
mov
jns
cmp
into
clc
pop
sbb
aaa
int
bswap
cs
jb
add
addl
insl
jg
test
mov
mov
outsb
push
pop
sbb
mulb
mov
pop
or
xchg
cmp
add
xchg
arpl
dec
daa
pop
stos
push
fcomps
or
sub
xchg
mov
stos
push
push
pop
mov
testl
sahf
jle
clc
xor
xchg
mov
inc
adc
orb
je
cmp
sub
xor
mov
adc
mov
lcall
ret
das
mov
mov
mov
cltd
sub
mov
jmp
test
sti
das
pop
push
insb
ficomps
loop
cld
outsb
jl
sahf
push
repnz
push
aaa
mov
cmpsl
inc
xchg
cmp
push
cmc
mov
aas
pop
mov
sahf
mov
loope
mov
inc
cmp
mov
xor
jbe
mov
ficompl
clc
inc
ret
nop
mov
add
pop
mov
insl
and
mov
dec
in
mov
subb
jnp
jge
imul
loop
or
out
adcl
sub
push
fs
jmp
pop
xchg
stc
or
lea
scas
sub
pusha
mov
inc
jmp
sahf
scas
sbb
bound
data16
cmp
mov
adc
mov
jae
sahf
insb
jg
mov
scas
xchg
jae,pn
imull
loope
push
inc
cmp
and
mov
imul
sub
mov
push
nop
inc
in
or
ljmp
movsb
vaddsd
dec
push
xor
mov
stos
in
pushf
je
cli
mov
frstor
sbb
lret
fs
orb
mov
ret
test
xor
xor
or
mov
mov
call
lret
std
or
fcomps
sub
xor
shrb
movsb
xchg
mov
pop
aad
sbb
cmp
push
jne
fisubrs
rcll
lock
into
cmp
ficoms
popa
mov
and
and
inc
popa
enter
xchg
int3
jp
sub
es
sub
mov
push
push
mov
jle
outsl
pop
outsl
out
xchg
dec
rcrb
hlt
and
mov
mov
subl
shr
pushf
lods
lret
mov
mov
fists
in
mov
cltd
xchg
lea
ror
nop
hlt
push
cmp
jae
js
adc
scas
sub
test
in
shl
repz
mov
jns
js
mov
and
rol
xlat
aaa
adc
jg
inc
push
fidivs
fisttps
inc
jbe
nop
mov
jb
cmpsl
int3
mov
adc
mov
dec
aad
dec
imul
out
xlat
addl
outsl
shrl
lods
movsb
neg
add
inc
mov
or
in
sbb
outsl
sbb
or
mov
xor
stos
mov
inc
scas
cmp
inc
and
and
divb
in
lret
mov
push
hlt
mov
pop
in
lret
lea
mov
sub
dec
xchg
adc
ds
cltd
mov
clc
mul
or
andl
mov
daa
xchg
aaa
xchg
xchg
sub
add
jb
mov
and
push
sub
push
popf
xchg
push
xchg
mov
mov
cmp
cli
out
mov
in
push
aam
sbb
xchg
push
movsb
inc
int3
imulb
aam
cmpsb
in
xchg
jae
sahf
sub
or
xchg
jo
ds
in
mov
jp
aas
adcl
pop
mov
into
pop
fisubrs
push
jae
aaa
je
and
rclb
inc
dec
out
push
inc
jl
jb
mov
repz
shll
mov
aas
into
insb
mov
pop
sub
lock
out
pop
push
xor
mov
push
jne
aas
fildll
mov
ret
cmp
ret
mov
fcoml
adc
dec
decl
andl
lea
and
fdivs
aad
out
mov
add
xor
mov
mov
jno
stos
mov
or
call
inc
std
push
and
pop
in
incl
mov
shl
lds
lret
imul
or
and
adc
push
loope
stc
icebp
and
jmp
and
lahf
pop
cmp
add
or
push
push
flds
std
ljmp
repnz
mov
mov
pushl
imul
push
imul
adc
sub
xchg
add
lods
cmp
push
mov
ret
jae
add
jo
or
test
mov
sbb
insl
pop
cmp
je
pop
sbb
xchg
sbb
dec
into
mov
jl
dec
in
adc
and
test
ss
dec
xor
and
movq
nop
mov
imul
pop
cmp
fsubrs
pop
outsb
aad
add
in
xchg
mov
out
add
mov
in
rorb
ja
out
sub
and
xchg
jne
ljmp
push
rep
daa
dec
cltd
jnp
fwait
xchg
lret
fcoml
jp
fdiv
arpl
popa
out
pusha
cmp
pop
sbb
mov
adc
testl
mov
pop
pop
add
or
or
test
xor
mov
sbb
adc
insb
in
or
int3
in
les
mov
insl
out
js
ds
cmc
pushf
cmp
or
movsb
das
and
sbb
or
jle
repnz
out
pop
jg
fldl
leave
and
sbb
aam
clc
push
inc
mov
or
push
pusha
mov
xchg
jae
sti
xchg
pop
push
cmp
adc
test
inc
lea
jne
sub
cmp
cmp
mov
cmpsb
je
loope
sbb
insb
fcoms
jecxz
out
xchg
mov
rol
sbb
cmp
mov
dec
das
xor
insl
cmp
and
cmp
fcom
inc
and
pop
scas
sub
loope
pop
clc
mov
out
fimuls
pop
mov
insb
push
add
sbb
aad
jmp
lods
fistl
mull
pop
stc
jmp
dec
cs
aad
dec
pop
arpl
inc
pop
inc
xchg
sub
repz
daa
add
mov
mov
cmova
sub
ss
lds
cmp
outsl
add
cmp
mov
and
enter
aas
jg
push
popf
adc
jno
xor
cltd
test
cmp
or
cmpsl
jo
cmp
test
and
sbb
rcrl
popa
mov
int
add
daa
cmp
dec
fdivp
pop
mov
push
sbb
mov
mov
cmp
aas
cltd
xchg
cs
add
popa
jno
je
rcll
lods
jle
daa
lods
pop
and
jne
call
into
fdivrs
leave
or
ljmp
mov
lods
repz
push
mov
dec
xor
jge
mov
loop
data16
inc
mov
or
push
test
or
outsl
sarb
adc
clc
pop
arpl
lea
cltd
out
push
push
out
or
iret
sub
scas
mov
js
movsb
sub
lods
sbb
iret
jg
je
lods
mov
jmp
dec
mov
cli
cmp
orb
sbb
inc
mov
ss
xchg
pop
pop
push
mov
je
jecxz
aas
mov
adc
lds
mov
mov
pop
imul
sbb
shr
lock
adc
enter
xor
in
and
mov
xor
push
call
mov
sbb
add
clc
cltd
and
dec
mov
cli
int3
cmp
or
addr16
push
dec
into
xchg
add
pushf
outsb
aas
sti
iret
ss
sub
mov
mov
sbb
dec
clc
testl
jne
adc
cli
cmp
cmp
into
jmp
push
popf
xchg
fucomip
add
or
fidivrs
aaa
add
sub
cmp
sub
aad
sub
in
xchg
sbb
adc
jo
xor
enter
and
jno
mov
mov
xor
mov
out
mov
sahf
and
push
not
sbb
sbb
pop
scas
into
fimull
pushf
cmp
jne
mov
mov
xchg
adc
mov
lds
xor
and
lret
push
outsl
pop
cmovnp
and
dec
fldl
or
adc
cmpb
loope
push
or
cmpsb
push
movups
push
cmpsb
sub
pop
jl
rcr
inc
orl
int3
lret
push
std
adc
xor
push
xchg
sbb
and
call
mov
xchg
shll
mov
push
mov
ds
or
pop
jmp
scas
mov
sub
ja
push
nop
push
idivb
cmpsb
jmp
popf
sti
add
push
adc
xchg
pop
insl
xor
cld
add
out
push
js
stos
pop
ds
push
bnd
mov
fcmovne
cltd
fs
adc
inc
jg
mov
shll
add
cmp
push
sbbl
stos
pop
pop
cwtl
inc
add
in
imul
adc
in
cmp
push
cmp
repz
cmp
jmp
push
xor
jns
shll
sarl
xchg
test
xor
les
ds
lods
xchg
cmp
aam
lret
push
jb
clc
mov
xchg
lds
push
mov
push
lods
cltd
inc
push
stos
push
pop
add
push
mov
or
insl
enter
fwait
jbe
xchg
clc
mov
jns
xchg
cld
out
xchg
and
addr16
popa
push
jbe
or
pop
sbb
ret
dec
jb
sub
or
mov
pop
cmc
sbb
dec
push
rorl
shlb
xchg
push
xchg
dec
cmp
rclb
int
sub
lea
nop
mov
call
mov
inc
in
in
cmp
js
enter
dec
adc
jb
sbb
xchg
push
rcll
cmc
and
arpl
loope
xchg
das
push
out
repz
mov
cmp
mov
mov
sbb
rolb
mov
jmp
lds
or
xor
xchg
ss
adc
aas
outsl
xlat
mov
mov
shlb
cmp
pop
loop
ljmp
sbb
daa
ljmp
sbb
iret
dec
push
loop
iret
cmpsl
js
or
stos
rol
arpl
cmp
mov
fisttpll
cld
sarb
sub
rcr
jbe
cmp
movsl
xchg
mov
pop
jp
scas
mov
jg
fisubrs
cmp
call
pop
test
pop
dec
sbb
lret
jne
ja
sbb
xchg
or
test
lds
cmp
data16
pop
sbb
js
test
daa
out
dec
mov
in
mov
js
int
test
das
pop
int3
in
gs
push
push
pop
push
jb
mov
fsubl
out
or
fidivs
lods
movsl
jl
test
scas
dec
mov
cmp
push
mov
repnz
fistpl
xor
dec
pop
cmp
adc
cwtl
ds
js
or
lock
mov
imul
dec
bound
mov
dec
fadds
xchg
scas
inc
sbbl
bound
sub
dec
loopne
or
insb
cwtl
dec
je
rorb
xchg
cltd
ret
shl
mov
iret
arpl
pop
mov
push
jno
dec
pop
and
push
rcrb
ret
imul
jge
pusha
adcb
les
mov
jns
into
add
stc
mov
scas
sbb
adc
mov
scas
int3
xor
stos
xor
in
into
xor
inc
cmp
movsb
hlt
xor
nop
xchg
pushf
inc
add
jae
cwtl
cmpsl
popf
call
push
addl
lahf
adc
in
xchg
xchg
fisubrs
jle
sub
mov
sub
sbb
ret
cli
in
inc
lahf
sbb
bound
mov
ds
xchg
data16
fs
inc
sub
iret
fsubs
clc
enter
addr16
in
lods
clc
mov
sbb
pop
mov
mov
es
stc
mov
sbb
mov
fisubrs
mov
xor
inc
repnz
jle
sbb
lds
repnz
loope
push
xchg
sbb
dec
scas
lret
jnp
popf
aam
fsubs
nop
ret
or
mov
lds
or
jns
je
subl
or
nop
arpl
mov
cmpsb
sub
and
jmp
lahf
jmp
cmp
pop
add
lcall
jge
in
xchg
adc
lret
jecxz
clc
iret
or
ret
dec
mov
jmp
inc
inc
int
int3
ret
aam
xlat
xchg
dec
call
mov
jno
int
sbb
ss
nop
test
mov
push
sub
xchg
in
addr16
push
jge
loope
popf
mov
pop
xor
ds
ljmp
ror
xor
les
cmp
pushf
std
inc
or
psraw
mov
xchg
xor
xor
pop
loope
std
xchg
call
loopne
xchg
lcall
xor
jecxz
loope
mov
cmpsb
xchg
mov
adc
aas
xchg
pop
outsb
out
pop
cmc
xor
mov
insb
inc
das
in
test
and
sbb
test
add
iret
add
push
test
jnp
ss
iret
jl
push
xchg
mov
sbb
test
mov
push
and
dec
mov
test
dec
mov
rep
inc
sbb
inc
jne
xor
hlt
mov
xchg
and
mov
outsl
pop
and
sahf
lods
inc
jge
jle
int3
shrb
dec
stos
add
jle
dec
mov
je
xchg
aad
loope
scas
lods
mov
push
adc
adc
and
aam
xchg
lds
cmc
insl
jmp
fsubs
or
jb
fdivl
mov
popa
mov
add
or
jle
mov
push
out
into
rcl
icebp
outsl
fisttpll
nop
out
mov
push
outsl
test
movsb
or
jl
xor
sub
cmp
and
dec
fcom
cld
dec
addr16
push
movsl
lcall
inc
or
js
sub
clc
mov
lcall
test
in
inc
imul
sbb
adc
pop
lods
sub
pop
sbb
adc
inc
ret
movb
cmp
mov
insl
cmp
aas
cmp
lods
test
adc
xor
or
xchg
ds
lcall
stos
pusha
sub
inc
scas
dec
sahf
leave
mov
push
mov
dec
push
mov
sbb
cmp
out
clc
ret
xchg
cmp
jecxz
out
cs
jnp
pop
push
jnp
push
scas
movsb
je
out
dec
add
out
cmc
xor
inc
inc
pop
cld
mov
jno
mov
adcl
shll
xchg
andl
push
inc
and
xor
add
adc
loope
icebp
loope
rcl
shll
xchg
andl
push
inc
and
xor
add
adc
loope
icebp
loope
rcl
shll
xchg
andl
push
inc
and
xor
add
icebp
vmaskmovdqu
rol
mov
xchg
adc
jno
lret
jmp
push
ss
mov
out
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
cltd
loopne
sub
ss
and
sbb
or
push
pop
add
pop
add
add
addb
add
add
add
fldl
add
add
add
add
add
add
xchg
add
and
mov
add
add
add
add
add
imul
add
add
out
mov
push
pop
add
add
add
add
pusha
add
add
add
mov
add
enter
out
cmp
sub
add
xchg
jle
inc
add
xchg
sub
cltd
add
add
add
add
add
add
add
add
add
add
fwait
add
add
and
sbb
add
ret
add
add
fwait
add
add
add
add
add
adc
nop
add
add
mov
add
add
add
add
add
jle
cmp
add
add
add
xchg
add
add
inc
add
jle
xor
push
add
add
fiadds
adc
add
add
add
add
mov
add
inc
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
jl
imul
inc
add
add
flds
add
add
add
add
add
pusha
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
fwait
add
add
add
cltd
add
add
sbb
inc
add
add
jbe
flds
xchg
add
dec
add
add
add
inc
add
add
xor
popf
add
add
inc
add
add
push
add
sub
mov
pop
add
add
popa
add
or
add
push
add
add
add
add
add
jecxz
mov
add
add
add
add
and
adc
add
inc
add
add
add
jbe
flds
pusha
add
add
add
add
add
jl
add
push
add
fiadds
adc
add
inc
add
pop
add
add
add
sbb
and
add
add
add
jl
test
add
add
add
add
add
add
add
movb
add
add
add
add
sbb
add
add
add
add
add
mov
add
cwtl
add
add
add
jge
jl
flds
sbb
cwtl
add
add
add
add
flds
mov
add
adc
mov
add
das
add
add
and
xchg
add
add
add
jb
pop
add
flds
cwtl
add
add
add
add
add
add
pop
add
flds
flds
stos
add
mov
imul
and
pop
add
add
movb
add
imul
xchg
pop
add
add
add
data16
flds
add
adc
add
push
test
es
jmp
cltd
cmpsb
fimull
jmp
pop
loope
ficoms
xor
pop
cmp
xchg
addb
rcll
mov
mov
and
pop
jecxz
push
pushf
mov
es
addl
es
mov
je
inc
sbb
add
rcrl
outsb
sbb
add
mov
mov
shlb
jle,pn
sbb
scas
dec
jae
lods
daa
xor
scas
aam
and
xlat
in
jno
cmp
mov
iret
lret
cmc
pop
mov
sub
and
and
sbb
xchg
push
mov
sbb
testb
mov
rolb
mov
lret
movsb
ja
jmp
sub
cmp
lock
cmpsb
sahf
xor
lahf
inc
and
ds
mov
movups
xor
sub
adc
fdivrl
cmpsb
repnz
mov
xor
out
ret
out
mov
std
int3
xor
xor
mov
cmp
and
inc
jecxz
mov
fldenv
xchg
xor
push
jmp
leave
mov
adc
test
pop
testb
sbb
test
lea
add
mov
scas
das
repz
mov
mov
adc
ret
fsubl
sahf
xlat
loope
jle
imul
das
scas
fists
insl
loope
les
cwtl
out
dec
or
dec
mov
psllw
fmul
inc
pop
sbb
call
mov
cmpsb
nop
lods
inc
xchg
ret
ds
repnz
adc
pop
stc
psrlw
addr16
addr16
pop
ds
xchg
mov
cmpsb
or
jae
pop
mov
push
and
icebp
in
test
inc
and
data16
in
mov
std
int3
andb
call
rorl
jge
mov
ljmp
mov
xchg
jmp
push
icebp
stc
pop
push
es
aad
leave
jnp
mov
faddp
push
push
int
ja
cmp
lahf
je,pt
aas
add
pop
lds
sti
loope
cmc
cmp
lods
push
mov
lea
stos
lret
mov
push
inc
push
jle
movsl
int3
lcall
andb
pop
mov
lcall
out
and
les
pop
clc
sub
pusha
insb
lods
cmp
add
data16
pop
ljmp
sub
dec
sbb
cmovs
sahf
jns
jo
xchg
pop
mov
pop
add
pop
xchg
imul
adc
insl
sarl
mov
imul
sbb
cmp
push
push
or
mov
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
