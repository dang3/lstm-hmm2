call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
fisttpl
lret
out
jmp
xchg
jnp
into
xchg
dec
data16
imul
or
push
sub
fcomi
lret
out
jmp
fwait
mov
sub
jbe
inc
orps
sbb
cmp
push
sti
jle
les
js
sahf
pop
test
inc
xor
jne
inc
push
xchg
test
mov
mov
cltd
jne
fdivl
lret
mov
imul
ja
push
mov
mov
cvtps2pd
push
gs
out
push
in
push
in
pop
aad
and
inc
jecxz
int3
arpl
sahf
xor
pop
sti
and
test
add
mov
jmp
sahf
ss
push
fwait
mov
into
inc
insl
ret
jns
mov
mulb
mov
cmp
sub
jecxz
push
xchg
test
inc
and
stos
xchg
mov
imul
daa
fildl
ds
and
repz
mov
icebp
dec
and
or
push
subl
fnstcw
push
inc
addb
jmp
fwait
mov
cmpsb
mov
lock
mov
sbb
or
cmp
sub
movsb
mov
call
fdivrp
ljmp
and
das
jle
bound
push
jg
fdivs
mov
fstp
out
mov
adc
cmp
and
pop
push
ja
insl
mov
scas
mov
fwait
rorb
xchg
dec
data16
imul
or
cmp
sub
fcomi
lret
out
jmp
fwait
mov
cmpsb
mov
jbe
data16
imul
or
cmp
sub
fcomi
outsb
xor
iret
ljmp
mov
xor
cmp
xchg
push
mov
data16
adc
cmpsb
pop
mov
adc
sub
pop
or
xchg
repz
and
or
xchg
adc
pop
push
and
fcom
push
lods
scas
mov
cmp
dec
adc
jmp
call
repz
sti
xchg
push
adc
adc
xor
iret
or
arpl
out
push
pop
jl
pop
dec
mov
cmpsb
pop
xchg
xchg
and
sbb
imul
ljmp
cmp
or
into
mov
fs
jo
cmp
xchg
sti
xor
mov
push
std
lock
sar
push
cwtl
lods
mov
jmp
push
out
fisubrs
mov
lds
adcl
xchg
rclb
data16
or
aaa
nop
xor
fwait
lock
dec
and
nop
cmp
xchg
sar
dec
cmpsb
sbb
xor
and
dec
jbe
in
stc
in
cltd
push
loope
or
leave
xlat
hlt
inc
ficoml
cli
out
add
mov
push
mov
mov
push
push
add
fadds
mov
outsb
or
mov
jno
out
test
cmp
lret
mov
dec
outsl
fsubr
arpl
or
jl
das
insb
jle
daa
fxtract
xchg
mov
mov
lods
and
push
test
sub
dec
and
jb
jae
and
sub
das
enter
mov
and
lret
pop
push
lahf
and
divl
dec
loope
inc
ds
sub
pop
push
aad
mov
pop
cld
and
mov
enter
mov
push
sub
int
sbbb
int
ja
aam
cmp
pop
dec
out
hlt
mov
lcall
pop
pop
ret
insl
xchg
xchg
pop
sbb
addl
mov
jnp
lock
pop
out
sbb
mov
shrb
iret
add
leave
adc
lds
shrb
inc
out
sub
or
xor
ja
in
dec
push
scas
jne
out
jae
pop
mov
dec
adc
insl
and
out
dec
pop
into
fcomps
or
inc
in
mov
sahf
mov
fmuls
daa
xor
adc
in
or
divl
test
and
movsb
cld
movsb
into
sbb
lock
mov
inc
or
and
pop
mov
add
aaa
les
data16
arpl
mov
sub
push
jo
outsb
icebp
mov
lods
lea
aad
movsl
sbb
daa
insl
pop
stos
jmp
mov
xchg
imul
pop
fst
cli
dec
or
std
jecxz
lcall
fisubs
out
test
push
test
cmp
mov
pop
mov
jb
jmp
loope
xchg
push
adc
pusha
decb
add
daa
mov
shl
sti
imul
pop
push
fiaddl
mov
outsb
and
xor
sub
cmp
push
sbb
dec
jnp
or
adc
repz
rclb
mov
cld
cli
ret
outsl
add
sbb
and
jns
cli
xchg
dec
jecxz
dec
aad
popa
roll
clc
mov
mov
sub
ret
mov
pop
inc
faddl
test
cltd
fbld
dec
arpl
pop
bound
sbb
cmpsb
xchg
dec
cltd
dec
or
cmp
fisttpll
call
xor
and
fsubl
xchg
cmp
sbbl
push
mov
iret
outsl
test
xor
mov
addr16
mov
sbb
outsb
mov
sti
mov
dec
cwtl
adc
pop
in
mov
jp
lods
ljmp
jnp
adc
sar
or
cmpsb
cmp
es
lods
incb
out
test
xchg
add
fwait
std
nop
jbe
sbb
sbb
rorl
mov
rcr
xor
push
jno
test
ljmp
push
loopne
out
in
notl
test
das
and
popf
pusha
adc
inc
adc
dec
xchg
les
into
xor
std
popf
mov
fcmovb
cmp
jge
push
cmp
push
icebp
stos
fs
cmpsl
xor
into
xchg
mov
fisubs
call
lea
mov
fldenv
jge
popa
jae
rcll
mov
and
in
xchg
inc
in
cmp
cwtl
sbb
in
lods
cmp
mov
sahf
sbb
lret
dec
popa
adcl
pop
pusha
stc
push
cmp
cmpsb
gs
dec
lds
mov
lock
std
int
ficompl
ds
pop
cli
add
mulb
ljmp
inc
pop
mov
fnstcw
inc
pusha
cli
repz
lret
push
clc
pop
leave
lret
lods
push
mov
push
sub
adc
adc
mov
pop
fwait
stos
enter
cltd
or
cmp
jb
cmpsb
push
xlat
adc
add
inc
arpl
mov
dec
cmp
mov
dec
push
mov
repnz
notb
cmp
es
adc
cli
outsl
bound
mov
adc
inc
jl
sbb
pop
daa
adc
mulb
xchg
flds
adc
cmp
and
cmp
sbb
das
lds
inc
jge
jno
jo
push
push
outsb
adc
call
or
das
mov
mov
jnp
jmp
fstps
mov
and
xor
add
push
push
and
pushf
xor
pop
std
into
push
rol
pop
xchg
je
sbb
inc
inc
es
fs
sbb
test
jmp
nop
mov
push
adc
cmpsb
enter
into
push
mov
jle
repnz
or
adc
fcmovnu
je
fs
ljmp
test
hlt
dec
les
push
pop
inc
enter
mov
push
and
test
jle
push
dec
xor
push
xchg
xchg
xor
and
xor
rclb
dec
sti
shll
inc
sbb
aaa
insl
push
orb
cmp
mov
mov
dec
add
xlat
shlb
scas
dec
inc
cli
leave
ja
push
jns
out
test
clc
gs
lcall
sub
inc
int3
popa
pop
xor
mov
cs
jmp
inc
and
push
int3
push
cld
push
out
pop
mov
sbb
minps
or
jge
aaa
lea
repnz
mov
or
jns
lock
pop
jne
and
pop
or
add
and
jbe
aad
jne
and
push
sub
movl
popa
xchg
lds
cmc
fwait
add
jns
lahf
imul
mov
iret
pop
or
sahf
or
test
jbe
jo
adc
mov
repnz
add
cmp
add
jo
out
jmp
iret
out
insb
jno
sub
mov
pop
cld
mov
push
test
pop
inc
das
mov
push
push
paddusw
push
nop
xchg
mov
inc
and
add
ffree
add
es
loopne
jp
imul
pusha
inc
test
out
ds
enter
cmp
xor
fiadds
push
scas
mov
imul
sub
insl
or
mov
mov
mov
fimuls
scas
push
jnp
dec
insb
pop
mov
leave
lds
ffreep
cmp
dec
sbb
iret
xor
out
jecxz
mov
xlat
imul
icebp
add
inc
es
inc
mov
cmp
jb
xlat
sbb
out
jns
in
inc
ljmp
cmp
sti
cmp
dec
sbb
sbb
scas
push
sub
mov
sub
adc
jo
lret
pop
sarb
xlat
fs
jb
jge
mov
mov
in
in
shll
pop
xchg
cltd
cmp
dec
inc
stos
nop
js
icebp
aad
enter
push
cmpsl
mov
outsl
jecxz
je
jnp
lds
movsl
add
test
push
mov
test
cmp
and
pop
lods
dec
jmp
sahf
push
push
test
imul
les
lret
xchg
xchg
out
test
fcomps
dec
jno
dec
repz
nop
hlt
lret
push
jne
pop
cwtl
push
insl
sub
mov
add
divb
filds
stos
movsl
movsb
loopne
mov
andl
jg
movsb
xor
mov
stos
cmp
and
popa
fbstp
adc
or
lret
and
push
push
pop
jne
add
mov
popa
pop
xor
daa
ljmp
ds
stos
add
xchg
lea
xchg
pop
mov
pop
sbbl
ss
cmpsb
jge
pop
mov
pop
xchg
sub
mov
fsubrl
fldt
adc
divb
aad
jne
out
mov
pushf
cltd
push
sbb
adc
mov
iret
es
dec
jne
dec
shl
jl
stc
repz
xchg
cld
jmp
or
push
push
dec
in
pop
xor
popf
cmc
jg
dec
cs
or
jg
stc
shlb
add
or
push
pop
sahf
sub
sub
pusha
arpl
lods
gs
xor
sub
dec
add
pop
xchg
xor
shll
fsubs
or
sbb
push
lds
xchg
xchg
dec
add
dec
adc
sbb
pop
popf
adcb
test
push
push
adc
fldt
mov
lods
out
out
or
cld
jnp
inc
stos
xchg
cmp
das
inc
je
pushf
lock
xor
mov
enter
or
test
adc
sbb
sbb
or
cli
or
and
fiadds
paddq
jp
jle
and
pop
or
push
mov
jae
orb
jb
jge
pushf
lret
fwait
dec
mov
daa
xchg
inc
xchg
jae
pop
push
sub
push
fsubrs
xchg
lds
pop
pusha
sahf
stc
xor
scas
mov
sbb
lods
es
and
and
adc
aad
and
lahf
je
pop
mov
pop
mov
mov
mov
ljmp
mull
sahf
ret
pop
cmp
sbb
fidivs
andl
and
adc
or
aas
jge
insl
imul
mov
imul
push
push
sahf
xchg
push
xlat
jmp
daa
adc
cmp
in
dec
out
xchg
xor
call
fnstenv
xor
xchg
push
lds
orb
jmp
aaa
pusha
xchg
mov
sub
mov
mov
outsb
add
mov
cmp
mov
daa
test
aad
int3
pop
cmpb
dec
repz
and
jno
test
hlt
mov
arpl
or
xchg
scas
dec
enter
mov
ret
add
lcall
loop
lea
pushf
xor
sub
xor
insl
cmpsb
jne
mov
mov
push
add
xlat
inc
add
jge
jge
test
dec
cmp
out
popw
xchg
adc
ljmp
push
push
sub
push
cltd
out
rclb
push
mov
inc
in
fdivl
adc
jns
mov
push
inc
and
cmp
flds
inc
sbb
xchg
int
fnstcw
test
test
mov
test
cmpsl
inc
shrb
daa
out
push
stos
mov
mov
xchg
inc
sbb
mov
and
es
mov
or
inc
pop
jno
stc
out
or
and
inc
mov
inc
or
dec
jns
inc
aas
jmp
daa
jecxz
aas
push
and
and
cld
push
or
push
xlat
cmp
mov
mov
mov
rclb
js
cmp
outsb
loope
pusha
push
xorb
xchg
test
jecxz
pop
ficompl
clc
mov
call
and
clc
je
pushf
and
enter
jno
and
add
adc
cmp
inc
xor
jns
shr
jnp
inc
lock
lret
lods
jbe
aad
cwtl
xor
movsb
daa
mov
jg
cs
mov
roll
push
lret
add
lock
mov
and
mov
jg
cmp
and
rcl
scas
lock
xchg
mov
dec
imul
scas
idivl
jno
and
test
pushf
pop
mov
enter
hlt
cwtl
in
outsl
loop
push
lods
sub
xor
nop
xchg
lods
mov
xor
dec
iret
cmp
lret
add
inc
aas
stc
cmove
sub
jecxz
add
ds
xchg
pop
pusha
lea
orl
shrl
dec
insl
addr16
mov
pop
sbb
arpl
mov
insb
fs
sahf
inc
add
out
or
div
add
push
das
xchg
fsubrs
xchg
or
xchg
test
xor
lcall
fimuls
add
dec
ss
push
push
imul
pop
repz
mov
mov
pop
and
pop
jae
sbb
xor
aam
dec
sub
jle
mov
repz
or
push
and
decb
std
pop
loopne
mov
push
movlps
popf
ror
outsb
sahf
mov
mov
mov
dec
cmp
scas
ja
inc
imul
add
lahf
push
orl
imul
aaa
jne
sbb
test
add
sub
scas
or
push
pop
sub
in
inc
or
std
pusha
pop
shl
rorb
cmp
jp
imul
std
in
dec
jbe
sbb
jns
mov
test
rcrl
test
lods
mov
mov
stos
fs
mov
mov
fnstcw
enter
les
add
test
rclb
nop
push
orl
xlat
sarb
mov
mov
out
mov
jno
cmp
scas
add
push
rcll
test
outsl
test
push
push
push
lds
adc
mov
mov
mov
and
dec
popf
out
and
aas
out
in
mov
stos
int3
xchg
pmaddwd
ds
insb
test
fsts
out
dec
mov
cmp
cmp
iret
pop
pop
push
lods
or
pop
mov
test
pop
push
cmp
xor
add
loopne
je
xor
add
and
sbb
pop
sti
shll
fwait
mov
jne
pcmpeqb
xchg
adc
dec
sub
divl
addr16
call
lahf
mov
sbb
mov
int
jmp
cmp
in
or
add
call
cmpsb
scas
inc
or
das
sub
cmp
stos
cmp
add
lea
movb
jg
and
mov
in
cli
cs
pushf
sbbl
and
mov
insl
scas
fistpl
je
sarb
lret
gs
mov
push
test
push
orl
daa
sbb
mov
dec
jne
cwtl
pop
int3
mov
test
push
repz
dec
mov
inc
scas
into
mov
ds
pushf
lret
and
scas
sahf
inc
add
subb
sbb
jg
xor
popf
pop
xchg
jno
and
loope
xchg
test
cmp
shll
dec
mov
inc
sbb
jmp
stos
pushf
int
stos
iret
outsb
jo
movsb
addr16
ja
imul
adc
mov
xlat
cli
lock
sub
mov
lahf
inc
jbe
ss
push
dec
pop
xor
adc
mov
push
movsl
sub
mov
test
popa
dec
inc
cwtl
cmpb
les
xchg
mov
jle
sti
les
jo
leave
adc
int3
shlb
mov
pop
pop
xchg
ljmp
pop
rclb
pushl
lock
sbb
cld
stos
loop
bound
jmp
mov
push
in
ja
add
inc
lods
scas
cwtl
or
arpl
xchg
test
sub
inc
push
jp
dec
fidivs
out
addr16
sub
fwait
add
or
stc
adc
sub
mov
fmul
dec
mov
clc
lcall
xor
inc
jb
push
decb
negl
jge
push
adc
imul
push
pop
inc
jl
inc
pop
nop
jno
test
push
repnz
outsb
cltd
dec
iret
out
int3
lods
xchg
scas
dec
stc
std
sub
sub
out
fimull
popf
adc
sub
cld
and
aaa
sub
sub
mov
dec
aam
shll
mov
adc
xor
xchg
test
js
pop
cmp
mov
xchg
jge
test
enter
imul
sbbb
shrl
rclb
xchg
fcmovbe
loope
inc
and
adc
sbb
sub
enter
pop
sub
dec
jae
cmp
and
mov
addr16
bound
enter
mov
into
int3
add
mov
outsb
sbb
cmc
mov
adc
and
and
data16
jb
sbb
test
aam
out
or
clc
pop
and
adc
mov
sti
bnd
pop
xchg
mov
out
xor
sub
cmp
add
mov
xor
or
xor
sbbb
jl
popa
sub
and
and
pop
popa
jle
push
sub
pushf
xlat
ljmp
shl
pop
mov
call
jge
js
fmuls
push
rol
xor
mov
loop
adc
sbb
roll
push
sub
icebp
sti
and
ljmp
fwait
data16
into
aas
jecxz
push
movsl
jmp
fcompp
ret
loop
lret
pop
sbb
pop
loope
xchg
hlt
fisubrs
cmpsb
pop
fnstsw
paddq
sbb
pusha
xchg
mov
dec
mov
sbb
fwait
cmp
push
pop
push
mov
inc
mov
xlat
push
popf
push
add
xchg
das
xchg
test
sub
sbb
test
dec
and
negb
adc
inc
sub
int3
loopne
aas
mov
pop
adc
mov
mov
jg
jmp
xchg
xorl
or
mov
push
fs
lock
adc
loop
mov
sub
scas
repnz
xchg
xor
cmp
mov
inc
aaa
pusha
ret
fistpll
sbb
mov
sbb
add
in
inc
dec
movsl
mov
popf
ja
scas
rcr
mov
xchg
jp
movsb
pop
fistps
and
pop
sar
sbb
mov
cmp
lahf
enter
in
sar
in
fst
cwtl
mov
gs
ret
pushf
xorb
mov
cwtd
dec
and
push
std
sbb
clc
adc
cmc
stos
cmp
daa
or
dec
jle
cmp
xlat
cltd
mov
pushf
mov
sbb
test
cltd
xlat
clc
cmp
jne
mov
push
pushf
push
aad
cmc
orb
les
jp
push
negb
jnp
insl
imul
xchg
pushf
bound
insb
mov
into
sarb
push
inc
mov
push
pop
mov
cmp
or
and
jae
cmp
addr16
dec
push
mov
jo
aas
int3
push
mov
outsb
push
aaa
mov
mov
add
movsb
test
and
jne
sub
jmp
push
xor
xor
mov
insb
ja
fdivs
int3
pop
jecxz
pminub
xchg
sti
sarl
fbstp
adc
jb
jae
push
or
mov
add
fnstsw
daa
ja
xorl
add
jmp
push
in
adc
pop
int3
stos
inc
mov
mov
xor
xchg
push
adc
jl
aaa
or
inc
mov
xor
mov
sub
cmpsb
and
and
cmpsb
mov
mov
or
ret
outsl
and
inc
mov
adc
rolb
mov
or
push
or
iret
mov
mov
inc
loope
and
fstpl
and
jo
aaa
pop
pop
cmp
fucomp
aaa
and
aad
push
sti
cs
out
test
jb
jecxz
arpl
jmp
fs
leave
push
addl
loopne
jle
sti
aam
clc
cwtl
rorl
mov
sub
popa
or
icebp
fstps
aaa
pop
sub
mov
sarb
mov
bound
mov
jne
or
or
jp
push
and
lods
fs
mov
xor
sub
mov
out
leavew
add
je
mov
jae
fwait
mov
and
push
clc
sub
out
outsb
cmc
bound
jl
jno
sub
outsb
mov
pop
ss
in
stos
push
test
cmp
fmul
out
jmp
mov
or
cmp
sarl
jb
or
xor
flds
shll
jns
mov
adc
movups
sti
nop
mov
aas
inc
mov
lret
dec
pop
add
mov
mov
aaa
or
ficomps
shll
mov
jmp
mov
mov
pop
jbe
data16
imul
or
cmp
sub
fcomi
lret
out
jmp
fwait
mov
cmpsb
mov
jbe
data16
imul
or
cmp
sub
fcomi
lret
scas
sti
scas
jmp
fwait
mov
push
mov
scas
dec
data16
imul
or
cmp
sub
fcomi
lret
out
jmp
fwait
mov
cmpsb
mov
mov
rcll
xor
fld
jmp
in
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
xor
movsl
out
aad
lds
mov
mov
outsl
gs
or
pop
enter
add
out
aad
lds
xchg
mov
gs
pop
jg
bndstx
das
adc
pop
and
cmp
sbbl
inc
or
aaa
das
inc
inc
pop
addr16
popa
mov
mov
stos
push
mov
lcall
pop
sub
push
dec
ret
testb
fbld
cmp
mov
adc
scas
sahf
mov
lahf
popf
iret
mov
pop
pop
out
pop
fimuls
je
jne
push
cmpl
mov
cmpsl
in
shrl
xchg
scas
push
mov
test
addb
test
ljmp
adc
aas
cmp
sbb
jmp
idivl
push
rdmsr
nop
mov
mov
pop
pop
xor
dec
mov
fistps
adc
addr16
sub
inc
test
cmpl
pop
pop
pusha
push
das
outsl
cld
jns
xchg
lds
xchg
pop
pop
mov
push
popa
jns
or
lret
das
or
test
test
mov
ss
adc
data16
dec
pop
popa
js
iret
mov
mov
out
test
adc
adc
pop
adc
jp
and
mov
mov
lahf
movsl
scas
xchg
mov
outsl
push
jg
sysexit
pop
and
iret
cmc
out
aad
lds
xchg
mov
outsl
push
jg
sysexit
pop
and
iret
cmc
sbb
ret
shl
lods
iret
cmp
mov
dec
les
sahf
inc
dec
mov
ljmp
lea
pop
adc
push
dec
or
xchg
xchg
sbb
or
pop
cmp
dec
xor
xchg
js
dec
or
xor
cmp
push
dec
dec
shrl
mov
hlt
push
jbe
mov
pop
jle
bound
lret
call
sub
js
cmc
sbb
lods
sbb
aas
mov
inc
or
adc
addl
cmp
comiss
ja
js
and
adc
mov
es
popf
movb
cmp
std
jns
xor
fisubs
jno
lahf
xorl
insb
pop
pop
and
cmpl
sub
sbb
testl
inc
sub
lahf
sahf
test
xor
lret
outsb
test
push
xchg
pop
into
pop
mov
cmp
loop
das
stos
adc
pop
jno
jle
sarb
cmp
and
pop
fwait
mov
hlt
lods
data16
xchg
mov
push
push
push
bound
and
adc
dec
dec
jg
xchg
xor
xor
outsb
mov
mov
dec
test
lcall
cli
and
inc
adc
cmpsb
push
stos
xor
dec
dec
out
hlt
jb
iret
ja
rorb
test
call
push
xchg
and
sbb
sub
outsl
scas
arpl
jb
add
inc
ret
dec
cmp
or
xor
add
add
push
pop
sub
fcmovnu
cs
xchg
cs
xlat
cmpsb
xor
sub
push
pop
roll
cmc
xchg
pop
pop
stc
daa
cli
sub
gs
ss
mov
ret
mov
sti
inc
or
adc
jns
out
xchg
daa
addl
or
ja
cs
pop
js
fstl
xor
divl
or
fists
insb
movsl
and
and
pop
mov
data16
mov
test
sub
push
pop
pop
jno
mov
jbe
xor
and
jae
mov
fsubs
loop
inc
clc
adc
out
cmp
fdivp
stc
faddl
cmpsl
dec
rcl
inc
shlb
jle
push
test
cmpb
cltd
les
int
test
mov
and
push
movsl
js
lcall
xchg
popf
addr16
outsl
pop
popf
and
leave
ljmp
inc
shrl
js
pop
cmp
and
test
inc
lds
pop
add
push
mov
je
mov
mov
inc
outsb
neg
xlat
adc
jns
aam
push
rcrl
hlt
mov
mov
mov
rorl
ljmp
and
pop
lret
lret
insl
jb
aad
stos
adc
daa
andb
mov
fwait
gs
ret
xchg
cwtl
mov
sbb
aas
fwait
in
stos
repz
add
and
xchg
mov
enter
xchg
fsts
addl
mov
lret
in
loop
in
and
aad
sbb
clc
jo
add
lret
movsb
adc
sbb
test
clc
test
and
jle
pop
sbb
push
cld
inc
cmp
fimuls
push
add
sbbl
xor
shlb
mov
push
xor
imul
cli
pop
out
mov
lahf
cmp
adc
push
lcall
stos
frstor
divb
jl
std
and
xchg
xchg
pop
sub
in
and
mov
jp
repz
sub
std
pop
scas
stc
pushf
xchg
and
xchg
mov
pusha
fdivl
movsb
cmp
pop
or
xchg
lahf
das
cmp
cwtl
jae
mov
sub
aas
mov
out
mov
fistpl
out
sbb
loope
cmp
add
test
fstpl
in
stc
mov
and
sub
in
fiaddl
pop
or
dec
jecxz
mov
mov
lret
adc
mov
fcomps
cmp
mov
push
aas
int
test
imul
out
int3
addr16
es
push
sub
push
cmp
push
push
push
pop
push
dec
xchg
into
test
cmp
sbb
xor
fcoml
xor
mov
adcl
repz
bound
xor
push
mov
out
cltd
shrl
call
out
fistps
out
sub
ds
outsl
sahf
stos
aad
pusha
jns
lcall
dec
mov
ss
inc
cmc
pop
ret
cmc
inc
outsb
and
int3
jae
mov
cs
ss
cmp
dec
dec
outsl
stos
loop
ficomps
sub
pushf
jns
gs
dec
ds
or
inc
pop
sub
xchg
int3
hlt
je
flds
and
or
inc
adc
jb
aam
push
push
sar
sbb
add
in
xchg
or
or
popa
jo
daa
jge
iret
loopne
inc
fnstsw
mov
xchg
lahf
jo
insl
push
sub
push
add
mull
pop
sarb
fs
jns
cmpsl
mov
and
mov
pop
jns
scas
mov
add
or
jb
jae
adc
mov
das
lds
xor
jle
mov
push
mov
data16
icebp
fnstenv
add
pop
mov
dec
dec
dec
pop
cmc
dec
xchg
outsl
xor
pop
jno
js
lea
and
leave
loopne
js
outsb
add
or
xchg
and
call
push
add
int
jo
mov
xchg
out
xchg
in
jecxz
es
iret
shl
xor
mov
test
shl
jne
fimull
loop
jl
push
fnsave
cmp
cmp
mov
mov
insl
iret
aas
sub
out
mov
cwtl
js
xlat
ss
jb
pop
ss
filds
add
jmp
xor
mov
inc
pop
ja
xor
aaa
add
mov
mov
arpl
push
mov
je
in
nop
das
test
int
sub
add
jbe
cltd
mov
jg
inc
adc
and
pushw
mov
or
pop
cmp
scas
es
int3
shrl
xchg
repz
dec
fmull
jb
daa
fmulp
lahf
xacquire
rorl
jp
pushf
push
imul
data16
fists
ret
aaa
jmp
inc
or
pop
push
loop
jecxz
cmpsb
jns
lods
push
movsl
mov
pop
jecxz
movsl
enter
popf
les
dec
mov
mov
sahf
ficoms
mov
mov
xchg
xchg
sub
xchg
stos
pop
sub
je
lods
jp
in
idiv
cmp
sbb
ret
mov
arpl
jae
cmp
fmul
cmc
pop
push
xor
xchg
and
dec
in
and
fisubs
xlat
cmp
xor
test
loopne
popa
aad
dec
out
cltd
mov
in
cmp
xchg
nop
xor
and
add
cmc
movsl
call
shlb
xchg
fisttpll
and
dec
stc
lret
sbb
push
fwait
dec
mov
aad
fildll
mov
jg
lock
repnz
jmp
lret
add
in
pop
cld
scas
rcr
mov
gs
mov
mov
movsl
dec
push
repz
out
in
je
xchg
bound
outsb
mov
jae
xchg
cmpsl
or
fidivs
xchg
dec
adc
repz
xchg
mov
fldcw
fwait
das
or
pop
and
inc
pop
mov
out
dec
int3
leave
inc
mov
sahf
idivl
inc
aas
push
inc
adc
jecxz
clc
lret
movsl
inc
lcall
xchg
testl
mov
jns,pn
mov
stc
imul
test
add
or
negb
test
imul
adc
push
in
mov
or
movsl
adc
movl
pop
push
insb
stos
ret
mov
sub
xchg
out
aad
shlb
sbb
or
call
int
fwait
std
int3
inc
lret
mov
mov
stc
mov
idivl
or
and
outsb
mov
lea
jg
out
pop
pop
cltd
dec
popfw
push
sub
stos
or
xor
movlps
xlat
adc
xor
movsl
movsb
in
sub
out
cmc
fists
add
mov
mov
add
shrl
push
xchg
addb
stc
shrb
jg
or
rorb
jle
inc
pop
pushf
ds
mov
add
sahf
mov
das
adc
cmp
in
jno
cmc
pop
fdivrl
out
mov
fnstsw
in
pop
xor
add
addr16
push
xchg
aam
testl
and
incl
sti
mov
fstpl
imul
pusha
das
mov
mov
cli
inc
orb
jl
lods
js
test
movsl
fsubr
jno
adc
xchg
xchg
fidivl
xor
into
arpl
inc
xchg
xchg
jno
repz
pop
daa
pop
outsl
imul
gs
pop
ficoms
bound
xchg
cs
popf
cld
push
mov
out
pop
mov
adc
add
mov
push
push
fisttpl
popf
xchg
pop
fiadds
xchg
lds
push
xchg
push
shll
aam
popf
rcrb
cmp
mov
add
jg
pop
gs
subl
jae
cltd
jbe
into
mov
xor
mov
cs
xor
adc
popa
cmp
imul
cmp
jg
pop
push
loop
xor
push
outsl
mov
test
mov
sub
fidivl
mov
stc
out
adcl
ds
dec
mov
jle
mov
in
enter
nop
fcmovnu
daa
dec
and
sub
xor
jge
mov
push
cld
mov
xor
push
lahf
inc
xor
test
and
sub
mov
pop
push
add
int
ja
dec
lods
adc
dec
popa
dec
fwait
mov
lods
shlb
push
js
mov
push
enter
mov
xor
push
movsl
dec
ss
lea
adc
dec
mov
and
mov
jbe
dec
lea
jne
stc
or
push
js
xchg
push
lahf
movsl
push
dec
into
fimuls
sahf
cmp
out
sub
je
mov
in
repz
arpl
pop
xchg
rcll
jae
jge
divl
push
dec
inc
xlat
lds
fstl
jl
test
ljmp
aad
cmpsl
lahf
push
jbe
push
inc
lods
cli
cld
cmp
cltd
push
bound
cmc
pop
cmp
mov
mov
sbbb
cmp
into
repnz
cwtl
jecxz
mov
sub
scas
clc
test
cltd
iret
jge
cmpl
xchg
iret
inc
sti
xor
push
sub
shll
aam
cs
or
sub
stos
mov
sub
loop
mov
lret
dec
ja
fs
xor
movsl
jb
dec
xchg
js
push
lock
std
jae
ret
xor
fs
lods
push
add
jo
mov
insl
repz
inc
mov
xlat
cmp
insl
imul
mov
sub
dec
mov
mov
mov
popa
mov
sub
idiv
hlt
xchg
aad
adc
das
xor
inc
push
aaa
or
pushf
push
jmp
xor
popf
push
mov
stos
or
cs
push
aam
lret
dec
jb
into
cmpsl
imul
cmpsl
ret
leave
mov
add
out
xor
xchg
adc
xchg
inc
xor
out
out
adc
pop
push
inc
mov
sub
out
mov
push
xchg
andl
or
arpl
jbe
xor
testl
fsts
scas
scas
mov
jo,pn
ret
cmp
dec
mov
addr16
mov
mov
std
dec
jns
popa
ja
pop
cmpsl
jg
adc
subb
jne
shl
gs
cmp
fnstcw
inc
jns
add
mov
repz
in
jle
rcrl
mov
sbb
dec
and
hlt
call
sbb
sub
fwait
das
push
ret
decl
sar
adc
mov
cmpsl
aaa
aam
ret
pop
test
sbb
mov
bound
xor
loop
mov
and
in
sub
int
jns
lods
or
cltd
lea
rol
loope
addb
outsb
gs
xchg
negl
sub
sub
pop
push
aad
fwait
dec
scas
out
lcall
mov
rorb
outsl
insb
inc
add
fistps
xor
es
cmp
or
sbb
sbb
lret
dec
fcomi
inc
xor
mov
sbb
stc
fs
in
lods
sbb
mov
lahf
or
fistpll
mov
insb
test
xor
dec
cli
imul
movsb
mov
pop
mov
cs
add
aam
in
hlt
xchg
dec
and
xchg
add
cli
dec
cs
mov
lods
stc
xor
pop
ja
xor
mov
and
dec
or
incl
sbb
fstl
repz
cmp
fisubrl
cmc
jb
in
add
pop
dec
xor
movsb
pop
scas
lahf
inc
adc
imul
inc
fsubrl
std
sbb
cmc
mov
inc
push
jle
mov
mov
movsb
sbbb
pop
repz
and
jno
sbb
movsw
mov
pop
leave
stc
dec
cli
jnp
mov
mov
add
push
pop
das
mov
daa
xor
mov
subl
clc
ret
push
pop
bound
xchg
iret
sbb
stos
push
fmull
push
mov
xlat
fidivs
int3
xchg
pop
lds
scas
mov
xchg
mov
pop
sahf
popf
xchg
push
int
mov
cmp
ljmp
dec
push
jg
mov
stos
cmp
pop
test
cmc
xchg
insl
mov
push
repnz
lahf
or
mov
sbb
xor
mov
das
mov
push
xor
lret
fidivrl
scas
fistps
xchg
or
mov
mov
cmpsl
xor
jns
inc
dec
shrb
iret
inc
pop
sub
jge
rorl
pop
out
insb
mov
mov
mov
pop
ret
fcmove
jle
dec
inc
pop
ljmp
lods
push
call
add
inc
xlat
test
lea
psubsw
jbe
sbb
push
lret
pop
cwtl
xchg
inc
popa
xchg
cltd
ss
jp
and
add
inc
std
add
int
cmp
enter
push
dec
dec
jmp
into
sub
adc
fisttpll
add
clc
add
jne
jmp
and
icebp
ja
push
dec
ss
inc
jecxz
lcall
cli
dec
aaa
sub
out
pop
cwtl
mov
cmc
jo
push
clc
outsb
inc
in
movsl
out
push
jno
cli
mov
loopne
aaa
sbb
jmp
ss
inc
adc
jle
cmovo
sbb
out
pusha
fld
or
fstpl
mov
neg
inc
and
inc
push
xor
ljmp
dec
inc
cmp
cmp
add
loop
or
movsb
add
or
cmp
aas
sbb
cli
push
ljmp
adc
xchg
out
add
test
punpcklbw
xchg
out
dec
inc
adc
mov
int
dec
jge
inc
jne
adc
call
mov
jge
inc
jae
xor
inc
lcall
pushf
mov
cmpb
ret
imul
addr16
sbb
cltd
jne
cmp
ret
push
and
in
out
addl
insl
xor
cmp
jbe
sub
aaa
or
addr16
neg
dec
lret
cmp
insl
inc
out
jl
sbb
pop
inc
inc
bound
aaa
subb
and
dec
push
lret
dec
ds
or
sub
xor
pop
inc
inc
adc
xor
dec
jns
mov
fcoms
idivb
cmp
arpl
imul
inc
int
mov
dec
mov
fwait
inc
sub
fdiv
and
adcl
pop
insb
jns
or
xchg
loopne
filds
xor
in
sbb
cmp
out
add
cltd
sti
mov
push
mov
dec
and
xor
sbb
pop
aam
fcompl
mov
jo
addl
repnz
and
add
addl
sbb
or
cmp
rcrl
cwtl
lcall
movsb
mov
pop
dec
and
enter
sub
lea
repnz
pop
dec
add
and
pop
je
repz
cmp
hlt
adc
push
mov
lcall
push
arpl
adcb
loope
ja
lahf
ds
pusha
test
xor
lea
or
and
xor
push
and
lahf
mov
ret
add
lods
imul
sahf
sbb
mov
adc
mov
scas
push
mov
test
or
inc
or
mov
add
incb
out
loopne
cli
sahf
fcoml
into
mov
scas
cmc
ss
je
mov
xchg
cmp
add
clc
inc
dec
fisttpll
xor
xchg
inc
jge
cltd
cwtl
das
dec
push
shlb
cmp
outsb
sbb
mov
ss
sbb
lahf
push
push
aaa
push
fsubs
jmp
scas
das
lahf
mov
push
jmp
jbe
xchg
dec
mov
scas
addr16
jae
pop
mov
insl
pop
inc
sbb
cmp
sbb
cmp
fsubrs
and
mov
and
adc
xlat
cmpsl
sbb
ret
mov
aaa
inc
push
mov
mov
inc
scas
mov
cmp
aas
mov
cmc
xchg
and
mov
outsl
lods
jnp
out
cmp
sub
andl
int
mov
ja
and
xchg
bound
out
jo
lock
stos
sbb
pusha
mov
inc
jl
test
imul
and
pop
aad
dec
enter
mov
mov
data16
jecxz
jmp
jns
adc
adc
jne
push
loopne
or
inc
push
sub
dec
sbb
std
xchg
lahf
adc
push
ss
cs
mov
xchg
dec
xorb
lods
js
dec
into
es
fildll
int3
in
out
adcl
mov
cmp
mov
movl
jecxz
cmpsb
and
mov
and
xchg
imul
sub
inc
mov
mov
lret
mov
in
orb
daa
inc
loope
mov
mov
idiv
in
imul
je
xchg
sbbl
rcrb
ds
aad
sbb
ja
mov
mov
icebp
pop
adc
stos
je
push
push
jmp
mov
xchg
add
mov
push
cmpsb
mov
mov
and
mov
outsb
adc
inc
pop
push
mov
bound
xchg
cmpsb
andps
adc
cwtl
dec
mov
cmp
mov
and
push
xchg
mov
pop
imul
mov
add
jecxz
repnz
sbb
jge
lods
dec
or
mov
sub
mov
mov
xor
push
inc
mov
aam
add
push
stc
mov
dec
aad
sbb
loope
mov
xlat
or
dec
push
popa
scas
and
mov
rolb
fmul
ja
fcmovu
pop
lcall
jge
cmp
popl
lea
cwtl
mov
pop
adc
or
movsl
cld
sub
test
mov
xchg
xchg
pop
ja
cs
pop
ja
not
push
add
mov
inc
sub
cmp
insl
pop
add
icebp
jnp
push
daa
push
imull
inc
sahf
stc
jo
jae
ror
add
add
daa
xchg
stc
sub
out
xchg
xchg
andl
mov
jae
stos
stos
mov
les
ljmp
gs
adc
out
jmp
je
or
mov
mov
xor
mov
je
xchg
fucomi
repnz
add
repnz
sarb
dec
cwtl
jnp
ss
mov
test
inc
dec
sbb
leave
jmp
ret
add
mov
and
mov
movsl
lods
and
sbb
rorl
cmc
movsb
lcall
cmp
mov
inc
cmc
jmp
outsl
mov
das
rcr
cmp
mov
push
gs
push
lret
adc
mov
out
mov
stos
rcl
or
sub
or
mov
loop
orl
loope
mov
or
bound
gs
test
jo
rcrl
adc
and
xchg
outsl
nop
fs
aaa
scas
insl
dec
shll
cmp
push
dec
jecxz
pop
adc
cmp
xor
repnz
mov
cmpsl
adc
jp
pop
xor
mov
int3
ds
mov
jo
cmp
pop
sbb
push
or
fisttpll
shlb
scas
dec
nop
mov
lcall
aaa
dec
jle
mov
mov
add
xchg
push
test
repnz
mov
sub
mov
shlb
pop
lcall
outsb
or
or
pop
mov
push
notb
inc
jo
pop
dec
enter
rclb
and
jecxz
mov
movsl
scas
xchg
mov
outsl
push
jg
sysexit
pop
and
iret
cmc
out
aad
lds
xchg
mov
outsl
push
jg
sysexit
pop
and
iret
icebp
fsubr
dec
inc
mov
mov
popa
push
jnp
rdtsc
push
and
xlat
adc
add
xlat
test
adc
mov
xor
xchg
pop
shrb
jge
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
movsl
out
jb
inc
iret
push
mov
push
loopne
cmp
outsl
repnz
ret
aas
mov
setb
out
jb
inc
iret
push
mov
add
repnz
sarb
mov
setb
divb
inc
xlat
push
cmpsb
and
adc
fs
xor
insb
out
xchg
out
push
xchg
mov
rep
add
test
xchg
cmpsl
xchg
ret
dec
movsl
shrl
or
pop
ljmp
xor
push
fildll
outsl
push
inc
sbb
ret
andl
repz
xchg
mov
ds
jne
mov
jge
nop
or
mov
shlb
xchg
das
popf
pushl
inc
inc
inc
lcall
inc
dec
roll
out
cmp
sub
pop
jl
mov
call
mov
and
std
lahf
inc
ja
nop
repz
ds
loope
push
notl
out
mov
jmp
movsb
xchg
sbbb
sar
pop
aas
inc
call
out
jb
inc
fcoms
and
adc
ja
inc
ret
daa
mov
push
aam
jp
adc
dec
ret
loopw
or
and
add
jmp
out
cmp
inc
rcrl
lret
cmpsl
outsl
sahf
sbb
paddb
ss
es
dec
scas
xor
loop
repnz
ret
aas
mov
setb
out
jb
inc
iret
push
mov
add
repnz
ret
aas
mov
setb
bound
xchg
andl
xlat
insb
push
sti
sbb
mov
mov
push
ud0
push
fsts
xchg
jge
mov
lods
hlt
ss
dec
cmp
add
mov
jb
sub
cmp
data16
pop
dec
sub
movsl
push
mov
mov
fwait
aas
fldt
addr16
sbb
pop
dec
ds
sub
loop
repz
jg
imul
out
mov
jne
int
addr16
push
fsubrs
xor
repz
movsb
jb
lcall
stos
mov
inc
insl
pop
daa
jmp
xchg
out
clc
adc
inc
dec
push
dec
es
ljmp
ss
call
jbe
sub
add
mov
ljmp
out
dec
test
mov
rcr
mov
in
or
mov
jbe
xor
push
les
xor
mov
adc
negl
addb
push
clc
outsl
pop
test
dec
lcall
loopne
dec
lds
sbb
orb
ja
jle
fists
lds
fwait
pop
test
in
pop
nop
adc
xor
imul
je
movb
js,pt
jge
push
push
mov
rcrb
fcoml
daa
popa
fwait
xchg
cltd
idivl
push
ljmp
jl
xchg
pushf
xchg
xchg
call
mov
dec
gs
enter
cwtl
lods
stos
adc
sbb
and
push
jmp
adc
jae
push
or
sahf
cld
setg
mov
xchg
mov
dec
jno
sub
ret
mov
shlb
icebp
xchg
push
lahf
inc
jbe
sbb
test
loop
and
and
ret
adc
mulb
jns
add
repnz
jge
mov
pop
loop
mov
cltd
add
filds
inc
pop
jp
mov
jecxz
mulb
fwait
push
in
enter
pop
shll
shll
cmp
shll
je
movsl
in
mov
mov
or
in
sbb
nop
repz
sub
add
jo
xchg
adc
aaa
sub
lea
pop
icebp
dec
pop
aaa
push
stos
shll
mov
push
gs
mov
mov
into
jecxz
mov
xchg
add
push
sbb
btc
lds
xor
cmpsl
enter
or
sbb
dec
xchg
xchg
cwtl
aas
shl
dec
jbe
adc
inc
ror
push
scas
fwait
je
jns
cmp
add
jg
jecxz
in
cmp
stos
adc
incl
xchg
repnz
std
adc
popa
push
in
xchg
mov
fdivrp
fidivrl
and
iret
rcl
add
cli
stos
adc
mov
std
stc
pop
mov
imul
sbb
sub
cmc
popa
lret
mov
mov
fildl
in
mov
bswap
lock
mov
xchg
xor
sbb
xchg
imul
jno
adc
cmpl
mov
sub
test
jo
prefetcht0
dec
or
daa
loope
inc
inc
call
dec
ljmp
test
lods
testb
inc
mov
inc
fidivl
in
dec
xchg
test
fdivr
jmp
imul
enter
test
add
push
test
imul
rolb
lret
jo
mov
push
lods
aam
add
subb
jg
adc
and
jecxz
test
stos
or
test
mov
adc
roll
orb
dec
cmc
imul
rcr
pop
jne
addr16
mov
iret
dec
jle
mov
popf
add
adc
clc
mov
scas
outsl
call
pop
adc
lahf
cmp
in
ficomps
rol
sbb
ficompl
test
out
cmpb
mov
ljmp
mov
jmp
push
push
sbb
xchg
adc
pop
inc
xchg
dec
push
data16
int3
and
int3
and
dec
jnp
stos
pop
sub
jne
adc
idivb
imul
rcrb
test
enter
sbb
or
pop
mov
cmp
jbe
pop
in
xchg
jecxz
jp
in
pushf
mov
sub
lods
mov
imulb
fistps
add
xchg
ja
xlat
lret
test
int3
adcl
pop
inc
sti
repnz
pushf
popa
imul
add
leave
mov
ret
xchg
loope
les
lcall
mov
stos
ret
jbe
mov
sub
and
or
adc
dec
out
inc
in
shll
cmc
scas
out
mov
add
in
pop
pop
fistpl
pop
cmp
pushf
cmp
fstl
out
ss
movsl
sub
loope
ret
insb
mov
xchg
mov
jmp
and
pop
mov
fdivrs
sbb
push
xchg
or
push
xor
and
loopne
push
stc
jo
mov
mov
cmp
pushf
aaa
mov
mov
adc
sahf
imul
inc
mov
scas
dec
stos
xchg
ljmp
cmp
movl
jp
sub
mov
xchg
and
fstl
add
pop
inc
jge
flds
mov
mov
or
scas
lock
dec
push
sbb
stos
test
lds
bound
scas
adc
mov
cwtl
add
in
aad
dec
mov
xchg
shll
sahf
pop
dec
inc
pop
outsl
or
mov
xchg
push
push
cltd
mov
ret
hlt
sbb
add
scas
pop
and
fisttps
mov
outsb
in
sub
jns
pop
hlt
fwait
mov
lret
repnz
pop
xor
xor
in
fldt
pop
push
shlb
js
fwait
jl
iret
out
mov
and
xor
jmp
lock
ret
pop
fcoms
fsubrs
push
loope
pop
cmovne
out
repz
dec
xor
mov
sti
cmp
inc
in
aam
jae
into
and
into
push
jge
sbb
dec
mov
cmp
or
ss
test
sbb
insl
xchg
inc
clc
mov
push
dec
lret
dec
sbb
pop
adc
mov
cmp
out
inc
outsl
and
mov
arpl
push
jb
xorl
adc
in
fcoml
test
pop
cwtl
and
in
add
je
lahf
sbb
dec
cmpsb
jo
bound
ret
test
fnstsw
scas
mov
lahf
test
shlb
call
sub
aam
divl
cmp
pushf
scas
loopne
or
inc
mov
jbe
lea
cltd
inc
lods
dec
scas
cmp
fbstp
cmp
rorb
push
jae
aam
loop
pop
into
imulb
aad
mov
test
or
outsl
cmp
leave
xor
icebp
sbb
ja
nop
mov
adc
xchg
add
add
shl
aaa
xchg
cltd
mov
push
xchg
jbe
push
jnp
or
in
mov
cmp
jb
cmp
out
lock
clc
test
adc
lahf
lahf
mov
push
inc
xlat
and
notb
clc
jno
mov
xchg
pop
mov
lret
mov
loopne
dec
cmpsb
fnsave
hlt
dec
repz
push
add
lcall
push
dec
out
sahf
out
and
in
movsb
xchg
sub
call
sahf
fcmovne
adc
addl
xor
push
jno
jo,pn
xlat
or
push
mov
xchg
inc
sub
mov
sbb
fistps
rolb
mov
or
dec
pop
iret
andl
outsb
loop
lods
call
test
loop
in
xchg
das
insl
xor
dec
cmp
jbe
repz
lahf
enter
mov
mov
mov
in
jmp
lock
ja
dec
jmp
sti
shrl
insl
ret
xchg
pop
cmp
sbb
dec
cmp
xlat
pop
les
inc
outsb
jbe
mov
loop
repnz
inc
pop
mov
inc
xor
push
nop
mov
and
adc
jne
push
std
xor
cld
or
sub
jge
cli
xor
pop
cmp
jae
lcall
inc
and
aad
daa
xchg
rol
pop
xorl
fcmovnbe
cmc
shrb
mov
scas
mulb
inc
cmp
insb
xor
add
add
xor
cmp
mov
rcrb
loopne
mov
or
bound
cmc
aad
bound
jle
pop
and
sti
repz
cwtl
fs
jno
dec
inc
jl
push
xchg
scas
sbb
xchg
cmp
fisttpll
les
cmp
pushf
subb
fmuls
lcall
pusha
scas
loop
std
and
jo
dec
mov
sbbl
jb
repnz
adc
popf
sarl
scas
iret
movsb
xlat
or
testl
cmc
lret
xor
pop
popf
stos
xchg
aas
xchg
push
inc
repz
sahf
cwtl
out
pop
and
insl
out
lods
outsb
mov
les
and
mov
test
lods
in
mov
sbb
sub
mov
adcl
lret
jne
pop
push
pop
mov
lcall
sbb
xor
test
cmp
imul
dec
mov
enter
xchg
adc
in
push
adc
dec
adc
cmp
movsl
push
mov
jmp
dec
inc
loop
jg
in
and
sbb
jecxz
pop
or
or
int3
add
sbb
je
xchg
dec
inc
pusha
cld
shll
xchg
gs
fidivl
popf
and
xchg
or
sahf
cmp
mov
inc
sbb
mov
pushf
mov
pop
insb
xchg
insb
dec
sti
test
lret
in
mov
dec
mov
popf
shll
rcrl
or
lea
push
add
mov
lods
daa
clc
es
push
mov
jae
pop
pop
pop
cs
imul
lahf
test
mov
test
icebp
imul
popa
ret
add
mov
and
fisttps
sub
out
xchg
cmpsl
jae
lret
in
jnp
arpl
xchg
jno
addr16
push
or
addps
mov
je
je
lods
sub
loopne
imul
mov
or
mov
mov
jbe
cmp
and
cmp
dec
mov
mov
mov
les
jae
ret
jo
out
lcall
fidivrl
mov
in
enter
movsb
mov
xchg
dec
mov
fwait
shl
out
adc
inc
out
sub
fiaddl
mov
in
nop
adc
jne
jae
jo
aad
cld
aaa
es
add
fbstp
mov
pusha
mov
mov
and
aaa
fiadds
aas
xor
mov
mov
cltd
cmp
cmpsb
lea
in
push
scas
insl
and
xchg
pop
addl
and
pusha
pop
ret
loopne
ljmp
divb
xchg
mov
push
sub
xchg
lds
and
aas
mov
test
cmp
jmp
jne,pt
inc
aaa
add
out
lret
jp
or
add
mov
outsl
cmpsb
daa
test
xor
xorb
int3
aad
nop
popf
ja
mov
into
sub
inc
cmp
xchg
out
fisubl
add
push
sbbl
insb
shlb
push
in
inc
mov
jo
inc
out
jb
xchg
sbb
mov
xor
lock
dec
jno
loope
das
pop
sbb
sbb
mov
pop
and
cmp
ja
adc
lock
mov
out
hlt
adc
push
jmp
cmpsl
in
icebp
mov
or
push
loop
popf
cmc
imul
jno
mov
setbe
ja
jg
pop
fadd
add
fmuls
inc
pop
mov
cld
and
mov
out
mov
scas
or
nop
in
fwait
sahf
mov
add
aas
pop
clc
pop
test
roll
movsl
mov
and
sarl
stos
addr16
orb
fadds
push
mov
jge
int3
mov
js
add
jg
pop
shll
jl
mov
pop
ret
cs
jecxz
imull
pop
das
xlat
jo
cli
inc
jg
cli
add
sub
bound
into
sub
pop
int
pop
dec
xchg
mov
pop
shlb
out
jg
cs
dec
lods
pop
in
xchg
push
sbb
test
sbb
or
mov
in
jmp
fldl
cmpsl
pusha
or
cmp
mov
jno
mov
scas
cld
idivb
cwtl
xchg
nop
cld
jno
repnz
mov
int3
inc
mov
pop
popa
repz
mov
enter
pop
pop
adc
call
in
jns
sbb
jb
cmp
shrb
xor
cwtl
push
push
inc
insl
inc
pop
mov
cmp
cmc
and
call
int3
mov
les
or
xchg
testb
roll
fwait
pop
cltd
pop
pop
xchg
mov
int3
call
sbb
push
cmp
dec
or
cmp
inc
shr
lods
pop
inc
lock
subl
mov
jp
jns
scas
movsl
cwtl
inc
mov
sbb
lcall
or
cmp
testb
pop
test
pop
dec
jg
les
xor
lds
sbb
jb
jo
push
das
sar
in
or
popf
mov
daa
sbb
fnstcw
jbe
cld
and
add
into
adcl
dec
pop
lea
ret
xor
mov
sub
aaa
fists
gs
pushl
outsb
test
dec
pop
cmpsb
xor
and
xor
add
and
dec
push
mov
out
scas
popa
adc
xchg
sarb
fstp
xchg
scas
in
xchg
repnz
std
movsb
xchg
pop
loop
addb
add
fs
jbe
lahf
xchg
adc
and
pop
in
push
inc
push
jne
pop
xchg
andb
icebp
mov
inc
cmpsl
fisttpll
fistl
sub
ljmp
nop
hlt
push
sbb
mov
enter
push
mov
gs
dec
push
in
xor
out
jp
mov
loope
jg
enter
xchg
cmpsl
jo
cld
mov
out
lret
sub
push
or
mov
xlat
xor
jne
jle
mov
jb
and
jg
out
fidivrs
in
stc
push
xor
cmp
sbb
mov
and
jp
mov
or
jge
lret
sti
and
sahf
sub
mov
or
inc
lea
das
mov
lds
shlb
inc
int3
add
sbb
scas
cmp
mov
jae
std
dec
xor
xchg
sub
fdivs
pcmpeqw
je
push
sbb
xor
call
shlb
into
dec
mov
popa
inc
jnp
xchg
jo
xor
mov
mov
and
jno
mov
idivl
push
mov
test
cmp
xor
push
mov
ja
push
and
xchg
sub
fdivr
stos
inc
dec
out
test
mov
sbb
jo
push
shll
jg
stos
lret
sub
xor
pop
sbb
in
jmp
sub
gs
cmp
fs
jle
xlat
sti
inc
dec
or
cmp
push
sbb
dec
popa
cmp
ret
inc
cmpsl
mov
jbe
xchg
jnp
mov
scas
push
sub
outsb
xor
test
pop
lahf
dec
ret
xor
mov
or
pop
jb
and
mov
pop
shll
pop
dec
outsb
push
adc
aam
ds
adc
gs
push
sub
repnz
xchg
incb
and
cltd
xorl
loope
out
sub
and
mov
scas
ja
cmp
inc
leave
arpl
jl
xlat
popf
adc
cmp
push
mov
cmp
add
dec
add
jo
test
jmp
pop
loope
arpl
mov
jge
sub
icebp
fistl
mov
aam
mov
frstor
mov
dec
test
sbb
dec
fistpll
ret
jmp
cs
cmc
out
outsb
gs
dec
aam
add
sbb
sbb
cs
aaa
in
adc
or
in
fcmovnbe
sti
out
fldl
out
fdivl
pushf
xchg
or
sbb
lcall
call
shll
sbb
mov
pop
cmp
icebp
xor
aas
sbb
sbb
xor
push
push
inc
ret
jne
push
addl
pop
bound
cltd
lea
arpl
push
pop
in
fstpl
popl
xor
les
stos
and
mov
sti
mov
aam
lcall
mov
cmpsl
jecxz
pusha
and
jne
xor
pop
arpl
jb
dec
loop
lock
out
mov
sub
iret
aas
inc
fcmovnb
jb
out
pop
mov
mov
out
inc
push
xor
movsb
test
mov
aad
testb
push
lret
dec
sti
add
popa
and
dec
sub
cltd
lea
push
cwtl
andb
push
push
or
sub
mov
mov
mov
xchg
and
js
mov
sbb
cmp
adc
cmc
mov
jae
mov
pop
test
adc
sub
adc
xchg
shl
add
cmc
jae
or
fmuls
sbb
and
xor
aas
xor
push
pop
xor
mov
popf
out
adc
mov
or
dec
mov
sbb
push
inc
add
xor
mov
es
adcl
je
js
pop
imul
pushf
inc
sbb
cmp
sbb
addr16
adc
je
popf
cmp
jle
jae
aam
scas
cli
es
aas
xlat
aaa
loopne
dec
and
sbb
or
fcom
and
sbb
pop
adc
mov
enter
in
ljmp
outsl
push
cmp
jb
adc
and
in
cmp
mov
fxch
int3
jne
push
bswap
out
les
lret
add
xor
popa
xchg
mov
jne
mov
pop
loop
push
test
cmp
cs
int
dec
fistpll
pop
jp
lcall
test
out
add
push
or
cmpsb
test
out
pop
mov
and
js
stc
inc
orl
mov
lock
in
mov
mov
sbb
jg
imul
mov
sub
lret
mov
or
pop
daa
lret
lock
fistpl
sbb
lret
adc
into
xor
adc
std
pop
nop
cmp
adc
dec
dec
add
cmp
sbb
jae
fimull
add
ljmp
bnd
mov
hlt
lahf
sbb
pop
pop
adc
in
ljmp
cltd
mov
aad
ja
or
or
jl
negb
push
addb
jnp
out
xlat
sti
sbb
call
dec
sbb
fldenv
jp
xor
fmull
or
sub
or
movsb
pop
dec
out
lahf
das
push
xlat
xor
pushf
xor
mov
push
outsl
push
push
push
std
lds
dec
cmp
inc
popf
pushf
lcall
xchg
mov
cltd
int
inc
call
inc
cs
cmp
lea
iret
dec
mov
imulb
and
mov
arpl
inc
aam
jns
movsb
dec
add
xchg
insl
mov
out
xor
ja
jl
or
jae
rolb
mov
mov
mov
fnsave
loope
jp
xlat
push
jg
ds
mov
dec
add
pop
fldt
leave
push
lret
cli
inc
aaa
xchg
popf
outsl
sbb
pushf
mov
jmp
inc
pop
ret
hlt
nop
mov
jne
movsl
mov
adc
sub
mov
rcll
ret
mov
and
push
jnp
out
sub
and
dec
call
xor
callw
xor
mov
xchg
and
inc
jno
xchg
rolb
aad
mov
aaa
lret
dec
jmp
scas
hlt
adc
adc
dec
mov
jecxz
inc
lods
lds
ds
mov
mov
cmp
orl
loopne
lahf
imul
mov
adcb
ja
xchg
xorb
jp
cld
jo
test
std
lcall
adc
aaa
add
xor
cmp
cwtl
pop
popa
inc
lahf
stos
fidivl
mov
je
push
fidivrs
sbb
cmpsb
push
push
xchg
lods
jns
ds
fistps
aad
cmp
push
push
adc
jnp
out
out
enter
mov
shl
and
adc
or
mov
sbb
nop
mov
jo
fiaddl
fisubl
mov
sub
jmp
mov
cli
test
xor
xor
cmp
popa
jns
repnz
jns
inc
sahf
daa
inc
rolb
adc
cs
jb
inc
iret
push
mov
add
repnz
ret
aas
mov
setb
out
jb
inc
iret
push
mov
add
repnz
ret
aas
mov
setb
out
jb
inc
iret
push
mov
add
repz
ret
aas
mov
ds
lret
inc
iret
push
mov
orb
sbbb
movsl
dec
sub
insl
mov
mov
inc
aas
pop
nop
dec
mov
repz
adc
add
jb
bound
push
xchg
inc
xorl
addb
loop
rclb
ret
repz
mov
bound
mov
mov
inc
repnz
and
adc
add
pop
add
jle
add
jb
or
sub
cmp
cmp
adc
hlt
imul
push
insl
in
jmp
xchg
inc
ss
sub
fwait
inc
inc
cli
and
jge
or
adc
cmpsl
sbb
sar
dec
arpl
ret
iret
shl
sub
das
jns
xchg
repnz
push
pushf
out
xor
jbe
adc
ret
mov
arpl
insb
inc
or
lahf
addb
mull
push
pushf
ret
sub
xchg
fldenv
pop
shrl
dec
xchg
inc
pushf
jb
jge
stos
xor
ss
push
xchg
xchg
sub
add
mov
inc
push
dec
in
pushf
push
xor
adc
gs
jecxz
ret
sub
and
ret
jae
arpl
xor
and
adc
add
repz
adc
add
jb
bound
repz
arpl
cmp
sub
pop
nop
and
xchg
inc
xchg
adc
shlb
xchg
add
xlat
jae
popa
notl
xor
jnp
inc
stos
fs
add
jae
adc
or
divb
rcl
cmp
es
adc
add
repz
adc
add
jb
bound
mov
mov
inc
repnz
and
adc
add
repz
adc
add
jb
bound
mov
xchg
psraw
lahf
cmp
lds
adc
testb
and
cli
mov
cli
std
cltd
jmp
jle
or
adc
push
stc
cmpb
xchg
push
imul
dec
fwait
movsl
xor
lret
sub
pop
daa
sub
std
push
pop
push
into
loope
mov
push
pop
or
push
dec
jbe
sub
fst
pop
pop
jle
add
xchg
add
jo
scas
mov
adc
xor
pop
mov
imull
cltd
push
cmp
inc
test
imul
lret
shll
cmp
lods
sbb
mov
cld
sub
dec
mov
mov
mov
cmp
push
sahf
fdivr
sti
idivb
pushf
cld
push
pop
inc
jmp
push
sub
insl
pop
rcrb
lahf
push
gs
loop
and
call
cmp
jmp
aas
adc
push
sbb
movsb
out
push
push
pop
insl
les
ficoms
mov
cmp
add
sbbb
dec
out
sahf
jno
int3
push
imul
inc
pop
fstpt
xchg
sbb
push
add
xchg
mov
call
or
dec
daa
in
adc
jo
arpl
inc
rorb
test
ret
xor
pop
inc
xor
lock
push
ljmp
fsubrs
rcrb
es
enter
dec
xchg
test
mov
jmp
les
jge
cmp
mov
adc
add
and
jb
mov
mov
sbb
jae
fnstsw
stos
or
cld
dec
jecxz
mov
lock
dec
mov
sub
mov
sub
es
dec
jle,pn
rcpps
cs
cwtl
xchg
mov
ss
lcall
movsb
pop
in
or
cmpl
icebp
inc
mov
mov
test
cmp
sti
pop
or
fsts
sar
test
in
imul
cmpsl
subl
popf
loopne
xor
inc
loope
sbb
mov
dec
jmp
cmp
ja
fcoml
adc
frstor
dec
xor
inc
mov
push
mov
pop
in
mov
sub
cs
lret
repnz
sbb
std
decl
and
adc
repnz
inc
adc
adc
pushf
inc
jb
sti
test
lock
fisttps
nop
lods
dec
sbb
sub
xor
aad
stos
and
ja
repnz
xchg
notb
popf
inc
out
push
sbb
mov
push
mov
mov
mov
pop
mov
int
add
fnsave
lods
clc
arpl
cld
pop
mov
xlat
adc
in
xchg
adc
push
inc
mov
jle
mov
jbe
pop
pop
cld
sar
mov
fldcw
mov
mov
sbb
mov
cli
dec
in
xor
cltd
xor
adc
in
add
add
lock
inc
adc
add
pop
jne
xchg
sub
fs
cmp
add
test
outsb
push
mov
push
mov
push
scas
fsubrl
in
mov
enter
cltd
in
daa
inc
sub
loopne
jmp
and
mov
add
test
ljmp
inc
imul
pop
int3
es
cmpl
mov
aad
mov
mov
hlt
popf
jo
xchg
test
fistpll
add
imul
int3
adcb
jmp
cld
xor
test
aam
inc
mov
rcl
fwait
or
dec
sub
pop
dec
outsl
subl
sbb
mov
test
orb
scas
push
cs
xchg
xchg
test
jl
cld
mov
repz
xor
popf
inc
cmp
mov
jne
imul
rolb
add
repz
inc
or
pop
stos
hlt
ror
cmpsb
xchg
and
cwtl
pop
popa
nop
xchg
cmpsl
int3
sub
mov
pop
lods
mov
jo
add
bound
subl
cmp
mov
pushf
mov
inc
fiaddl
int
mov
xor
lret
fadds
cmc
sbb
xor
loope
lods
pop
and
push
in
ljmp
daa
add
pop
xor
jbe
popa
add
mov
test
jae
cltd
dec
addr16
ds
dec
pop
inc
xchg
jmp
out
stos
xchg
or
test
sbb
testl
lods
jb
xorb
xchg
pusha
add
mov
inc
mov
push
dec
mov
pop
push
xchg
insb
mov
xlat
sti
mov
pop
and
test
inc
jne
je
sbbl
iret
xor
out
mov
fistpl
pop
ja
mov
out
jle
adc
inc
addr16
divb
aaa
lahf
xchg
notb
ss
fisttps
push
pop
lret
nop
out
pop
add
mov
leave
mov
cmp
lea
adc
daa
inc
mov
das
pop
pop
lods
fadds
sahf
mov
sbb
fimuls
adc
sub
shrb
mov
out
lret
adc
sbb
mov
fiaddl
fldt
jo
ficomps
loopne
cld
sbb
ss
push
roll
js
mov
cld
and
adc
addl
pop
sub
aaa
ss
cmp
scas
mov
jecxz
adc
out
and
push
sbb
xor
xor
and
jge
mov
mov
push
mov
test
xor
outsb
dec
pop
inc
sbb
sub
out
pop
mov
jp
mov
pop
and
pop
call
mov
dec
insb
loopne
in
les
sbb
mov
fidivs
lds
imul
or
in
xchg
test
push
sub
mov
idivb
jl
adc
mov
loopne
sti
sahf
sti
xor
lcall
sub
ds
lods
rclb
out
lds
int3
or
adc
rclb
mov
call
push
mov
fcmovbe
mov
cmp
xor
dec
xchg
cmpsl
lods
in
push
push
mov
jle
lahf
pusha
sub
in
sub
ljmp
int
mov
aaa
or
add
xchg
js
push
mov
inc
sarb
shll
jb
mov
xorl
adc
mov
adc
dec
mov
adc
add
rorl
dec
ret
jge
push
js
inc
rorb
je
mov
inc
cltd
adc
daa
jo
jg
and
lahf
in
in
jle
cmp
sub
ss
rcl
rcrl
cmp
xchg
xor
cmp
sub
hlt
cwtl
stos
fsubrp
jns
xor
cmp
push
sub
xor
shr
pop
dec
js
bound
repz
inc
inc
push
jne
outsb
in
pop
shr
es
lock
push
test
xor
dec
jmp
repz
sbb
adc
mov
mov
lock
lea
mov
ret
adc
mov
inc
pushf
out
mov
or
aam
mov
sbb
mov
jle
dec
das
fs
push
cmp
adc
sbb
lods
in
call
into
lret
xchg
jo
adc
fisubrs
mov
add
or
int
fwait
xor
push
fs
jge
sub
andb
fisubs
or
sub
mov
shll
cmpsb
jecxz
inc
test
out
shlb
push
push
jmp
movsl
ret
rol
or
lahf
loopne
cmp
sub
ss
and
cltd
stos
ds
fnstenv
cmp
bound
sub
jbe
fdivr
or
enter
xor
or
pop
jp
iret
pop
mov
lea
out
lods
int
stos
pop
outsl
and
xor
lods
xchg
and
cli
lods
test
hlt
xor
shl
and
dec
push
adc
mov
pop
lods
out
xchg
add
fwait
xchg
inc
test
mov
mov
enter
pop
adc
sub
sbb
jle
aaa
push
call
mov
test
and
outsl
pop
jecxz
cmpsl
lahf
aaa
sbb
stos
or
jb
jnp
sub
xchg
sub
hlt
fbstp
adc
inc
push
or
xor
pop
xchg
xchg
pop
and
scas
adc
sbb
jg
aad
ja
sbb
mov
add
in
aad
lock
mov
push
mov
addb
jb
sub
pusha
xchg
push
fldenv
loope
xchg
cmp
pushf
std
dec
push
ds
xlat
push
sti
sbb
xchg
mov
lahf
adc
out
insl
jo
cld
xchg
fcoms
mov
adc
std
xchg
xchg
fs
cmp
and
aad
mov
mov
test
dec
insb
inc
jb
xchg
jbe
or
dec
or
mov
ret
dec
and
inc
cmp
add
into
cmc
adc
in
jbe
push
insl
cltd
sbb
sub
or
sbb
call
insb
push
xor
loopne
jns
adc
pop
sbb
nop
ds
lcall
and
pop
hlt
pop
pop
sub
or
shrl
jbe
push
xor
jns
jge
dec
call
rorl
push
lret
and
add
and
or
pop
movaps
and
fiadds
add
cs
movsb
repnz
das
jl
cmp
pusha
and
sbb
sahf
out
xor
jge
push
arpl
add
push
dec
xchg
sub
test
in
lods
rorl
outsl
adc
or
ljmp
xchg
std
popa
mov
mov
rclb
lret
adc
jp
or
mov
jge
mov
pop
mov
fisubrs
xchg
xlat
hlt
mov
fcompl
sub
js
mov
add
insl
es
pop
aaa
or
fcmovnu
fistpl
bswap
dec
loop
lea
int
cli
out
mov
sub
adc
fdivrl
cmpsl
aad
cmp
and
push
mov
call
mov
cmpsl
dec
fidivrl
inc
roll
addr16
and
ljmp
mov
dec
adc
ss
cmp
lods
add
and
jo
loop
mov
fnstsw
je
xchg
sarb
rcr
movsb
or
aam
scas
lods
insb
push
test
xchg
sbb
sti
hlt
sbb
scas
call
mov
repnz
mov
in
push
in
cwtl
add
out
xchg
adc
and
clc
cli
dec
cmp
push
push
lahf
nop
addr16
mov
js
mov
cmpsb
das
inc
mov
pop
push
xor
push
and
cmp
neg
or
pop
inc
mov
lock
pop
inc
dec
ljmp
mov
shl
or
arpl
jns
imul
je
xor
mov
xlat
sbb
cmpsl
cmpl
mov
jae
push
jle
loop
test
and
scas
cmp
aaa
xchg
mov
stc
sbb
sahf
xor
loopne
pop
out
pusha
push
adc
fcoms
imul
and
fcmovnbe
dec
stos
test
std
dec
and
lock
pop
fsubl
icebp
xlat
scas
sub
xchg
sbb
stc
cmc
pop
xor
jmp
inc
in
lods
repz
xchg
outsl
icebp
sub
push
dec
fstl
adc
out
enter
xchg
mov
lret
pop
mov
cltd
iret
add
cmc
cmovle
mov
dec
repz
sbb
imul
pop
test
out
push
addr16
rcl
outsl
test
xchg
mov
call
xchg
inc
lods
pop
ja
cmovae
mov
sbb
outsb
xor
rcrl
fldlg2
mov
enter
mov
sub
shlb
xchg
jge
hlt
int
and
and
sbb
mov
ret
mov
stos
dec
fcmovne
out
sbb
subb
add
dec
das
mov
inc
jbe
or
pop
cs
lcall
sbb
aaa
insb
or
aas
fisubrs
std
jmp
rorb
shlb
fdivrs
lea
inc
cltd
stc
es
inc
xchg
xor
or
mov
int3
ficompl
jae
cli
sti
adcb
xor
fwait
mov
jle
push
int
and
int
enter
and
jnp
cmp
jmp
sub
sbb
test
out
sub
or
enter
aas
push
and
pop
or
ret
into
push
mov
push
lds
cli
jae
call
xchg
push
daa
pop
jne
gs
imul
cmpsb
or
in
add
sub
sbb
add
pop
andl
je
mov
mov
data16
lock
mov
xchg
pop
add
testb
cli
repz
stos
pop
add
popf
jne
or
cmp
sbbl
jle
jbe
ret
shl
imul
sbb
loop
cmpsl
lret
xchg
add
les
cmc
repnz
into
orl
cwtd
lret
rcl
call
adc
stos
mov
ret
cmp
shll
clc
out
out
push
xor
jne
test
add
aam
fnstenv
xlat
and
fdivl
or
in
adc
movsl
xor
sub
mov
push
les
or
or
xor
and
sbb
xchg
push
daa
pushf
imul
in
xor
int3
bnd
loop
mov
dec
xchg
mov
sbb
cltd
loopne
sbb
push
mov
stos
cs
mov
pop
mov
sub
or
rcl
inc
xchg
or
out
dec
inc
shlb
xchg
xor
mov
sbb
bound
loopne
add
inc
loop
mov
stos
mov
mov
mov
repnz
pushf
ja
xchg
mov
mov
filds
rolb
aam
adc
and
inc
xchg
xchg
or
jp
mov
lret
sti
jmp
cmp
inc
sbb
dec
adc
sti
or
clc
sub
jb
aam
xor
inc
shrl
push
mov
enter
push
xor
jne,pn
jge
mov
jp
fucomp
stc
sbb
sbb
sti
cmp
cmp
repnz
adc
or
push
sti
and
popa
pop
int
xor
lea
mov
call
jecxz
mov
test
pop
cmc
jmp
rorb
out
dec
les
xchg
clc
mov
fimull
mov
mov
insb
test
pusha
out
cmp
adc
lret
mov
sbb
sbb
leave
and
push
and
add
popl
mov
mov
ljmp
push
dec
mov
cmp
sub
pop
loopne
dec
add
jmp
jb
inc
repz
mov
mov
mov
sarb
mov
cmp
lods
adcb
adc
mov
lea
bound
and
ret
mov
jg
lret
negb
aaa
xor
mov
into
data16
cld
mov
or
out
sub
mulps
push
ss
aas
mov
push
xor
cmpsl
pop
sbb
imul
sub
mov
imul
sar
mov
test
pop
repnz
push
dec
adc
int
sbb
cwtl
adc
or
lahf
mov
mov
cltd
add
add
sub
dec
std
cwtl
mov
mov
dec
jno
stc
dec
pusha
mov
xor
and
or
jl
loopne
lds
adcb
loop
adc
cltd
add
mov
mov
loopne
cmpsl
pop
fsubrs
mov
and
subl
xchg
das
es
loop
fimuls
and
sub
cmp
lahf
cmp
dec
cmpsb
int
ljmp
aad
jae
pop
or
lret
dec
fidivrl
lea
es
test
lret
dec
mov
mov
test
mov
rsm
dec
andl
fldt
sub
adc
es
cld
xchg
mov
and
jge
cs
scas
sti
fs
push
out
mov
push
cmp
inc
or
sbb
mov
fxtract
and
inc
fsts
sub
outsb
push
imul
sub
daa
jne
push
mov
cmp
inc
movsl
push
xchg
faddl
pop
sub
into
push
sub
mov
inc
mov
aam
adc
mov
into
std
push
inc
cmp
or
lahf
hlt
jns
lods
xchg
push
xor
push
fsub
out
jl
push
push
push
in
shl
inc
mov
in
mov
dec
push
out
movntps
xor
iret
inc
sbb
push
popa
adc
nop
fbstp
jae
lds
fs
icebp
add
stos
push
loope
pop
or
loopne
arpl
repnz
push
ss
mov
mov
daa
test
into
lock
std
shl
fcomi
test
dec
mov
jp
xchg
jecxz
rsqrtps
loop
sub
mov
or
cwtl
mov
jecxz
cwtl
aam
xchg
pop
mov
movsl
push
sbbl
bound
faddl
jmp
lea
inc
out
cmpb
mov
jp
sar
xchg
or
ss
rorb
add
pushf
add
js
lea
lret
xor
int3
sahf
cwtl
push
mov
dec
or
cmp
adc
dec
cmp
int
sahf
jecxz
adc
ret
xchg
push
stc
adc
mov
outsl
shrb
leave
mov
pop
push
jecxz
not
pushf
movsb
cmp
mov
lods
jp
pop
icebp
addb
inc
or
sar
cmp
daa
add
add
cltd
dec
add
sbb
inc
sub
and
mov
call
fsubrp
cmpsb
mov
in
sub
cli
dec
jno
loop
out
jbe
fidivrs
fidivrl
add
add
hlt
std
cmpsl
fsts
xchg
push
push
fld
js
std
icebp
push
or
fsubp
jbe
pop
sub
jnp
mov
mov
sub
cmp
dec
jl
int
insb
adc
add
and
xor
push
sbb
pop
rcll
sub
mov
stos
push
daa
cwtl
arpl
in
mov
stos
cmp
push
int
ds
and
int3
push
mov
movsl
inc
out
sarl
clc
xor
adcb
fucom
pop
adc
push
cs
sbb
pop
in
lods
sbb
xchg
pop
rclb
push
pop
stos
jnp
rclb
repnz
sbb
sbb
filds
mov
xchg
push
or
add
les
mov
dec
pop
xchg
into
sbb
or
ljmp
mov
iret
inc
push
scas
jp
push
dec
adc
inc
inc
imul
fldl
cmp
cmpsb
popf
jne
sub
or
xlat
mov
insb
daa
sbbb
subl
cmc
test
loop
cmp
in
fdivs
inc
add
jle
jnp
mov
inc
lods
arpl
mov
xchg
addr16
ret
nop
sarl
arpl
pop
out
sub
mov
fiaddl
lods
les
pop
inc
pop
mov
das
cmpsb
sahf
sbb
vpunpckhwd
xor
lahf
xchg
rolw
xchg
stos
in
xor
sub
pop
rcll
sbbb
mov
jne
popf
mov
adc
adc
xor
jo
cmp
fldl
sti
fnstenv
pop
test
jbe
mov
dec
repnz
sub
ret
mov
pusha
pushf
sub
jae
movsl
lea
push
mov
lcall
gs
xchg
push
stc
add
xor
movl
and
rcrl
inc
xchg
lret
out
and
les
cmp
ss
repnz
jmp
mov
fidivs
fimuls
into
mov
leave
out
or
test
jbe
test
jg
sar
sbb
insb
fdivrl
mov
xor
into
cmp
test
arpl
sbb
add
mov
movntps
xor
je
out
push
adc
sbb
and
jnp
mov
and
int
out
sbb
cmp
repnz
push
pop
test
rorl
je
jmp
cltd
pop
xchg
pop
pop
mov
les
lods
dec
xchg
scas
mov
pop
jle
fildll
imul
test
adc
outsb
push
repnz
cmp
sbb
pop
pop
and
mov
xlat
pop
ret
je
jns
bound
mov
sub
adcb
loope
or
cs
leave
cmp
and
adc
into
aam
ss
xor
hlt
mov
jbe
push
jb
jge
lret
push
addb
loop
rclb
ret
repz
adc
add
jb
bound
mov
mov
inc
repnz
and
adc
add
repz
adc
add
jb
bound
mov
and
adc
addb
loop
rclb
inc
add
jae
jecxz
roll
ret
jb
bound
mov
mov
inc
repnz
and
adc
add
repz
roll
mov
cmp
pop
and
icebp
and
iret
sar
ret
mov
lods
scas
ds
addb
inc
insl
xor
and
adc
adc
xchg
iret
mov
lahf
mov
scas
jb
bound
pop
inc
outsl
jb
and
adc
add
dec
adc
inc
out
imulb
xorb
or
outsl
pop
pop
push
popa
inc
imul
rorb
mov
outsb
xor
jnp
cmp
and
push
ret
push
je
sbbb
push
ja
adc
test
push
cmpsl
xlat
outsl
mov
pop
adc
std
bound
cmpsl
dec
cmpsl
mov
jecxz
lcall
popl
inc
ljmp
ds
cs
ljmp
fisttps
mov
push
jae
bound
int
and
adc
out
repnz
dec
mov
or
push
cmp
outsl
ja
and
or
cmp
dec
movsl
dec
outsb
insl
test
pop
fldt
jg
dec
jno
adc
add
test
out
ret
lahf
fimull
mov
clc
push
and
jb
jp
sub
and
add
mov
mov
loope
roll
aaa
aaa
sub
add
dec
pop
jnp
addr16
mov
mov
mov
adc
or
sub
insl
dec
pusha
jnp
inc
dec
sahf
sahf
mov
loope
mov
scas
jb
bound
jg
outsl
xor
and
adc
add
repnz
iret
sar
ret
lahf
mov
scas
jb
bound
jg
outsl
xor
and
adc
add
repnz
fiadds
cld
jge
dec
ljmp
xchg
and
cmc
imul
adc
xor
les
loop
out
push
ss
pushf
mov
in
jns
imul
add
jecxz
mov
cmpsl
lods
jecxz
sbb
fidivrs
das
lea
mov
pop
mov
in
xor
mov
shlb
add
mov
jns
mov
repz
push
or
cld
cwtl
adcl
out
and
pop
jmp
mov
push
cld
clc
test
mov
add
test
icebp
lcall
mov
lds
mov
jo
test
add
xchg
pop
into
pop
sbb
push
mov
adc
das
jl
aam
jp
arpl
mov
call
les
out
mov
push
subb
fsubrp
sub
and
inc
lods
stc
dec
cmc
cmp
aam
inc
lds
jmp
jo
pop
stos
pop
sub
leave
bnd
repnz
cs
jne
push
sbbl
xchg
mov
mov
mov
out
std
mov
mov
mov
xor
out
arpl
loope
add
insb
sbb
ret
mov
inc
mov
out
not
dec
testb
or
lahf
lahf
mov
xchg
add
sbb
scas
jo
mov
xor
lds
add
adc
sub
clc
pusha
lahf
xchg
add
dec
inc
je
jno
mov
xchg
aas
cmp
movsb
mov
jle
sbb
icebp
sarl
jns,pn
xorb
out
std
adc
add
out
dec
mov
sub
sbb
ret
lcall
jecxz
call
ja
daa
mov
pop
xor
mov
mov
add
ja
mov
mov
lods
add
pusha
mov
push
cmp
dec
mov
jo
ja
dec
mov
or
out
and
mov
fimull
sbb
icebp
xchg
push
dec
mul
aas
sbb
sahf
xchg
rcrl
iret
mov
cltd
push
sub
xor
cwtl
lahf
arpl
loopne
dec
cmp
repnz
aam
xchg
dec
xchg
lods
lock
dec
push
sub
adc
jnp
ficomps
bound
mov
loope
movups
inc
nop
dec
fnstenv
dec
lret
and
pop
loopne
bound
aam
push
xor
mov
shll
or
les
mov
add
push
sbbl
add
rorl
std
xchg
mov
mov
ret
iret
mov
pop
ds
mov
xchg
aaa
cmp
mov
xor
stc
push
out
or
push
pop
lret
mov
sub
jae
aas
out
xor
jge
insl
int3
jmp
jmp
pop
sbb
or
mov
sub
lods
xor
daa
gs
lods
xchg
pop
push
inc
xchg
js
mov
dec
mov
lahf
addr16
ret
dec
in
jbe
cmpl
pop
push
or
lea
fnstsw
mov
cmp
std
into
jl
pop
mulb
adc
ss
mov
cmpsb
dec
sub
iret
fcmovbe
mov
in
and
outsb
fmull
fdiv
dec
sbb
pushf
sbb
pop
mov
js
fsubp
mov
outsb
addl
scas
das
dec
rcrb
mov
pop
mov
std
repnz
popf
xor
mov
push
fwait
add
insb
xchg
xchg
cmp
rorl
jae
xlat
add
rcll
adc
test
lcall
ret
and
call
cmc
sbb
push
push
inc
mov
negb
fistps
or
fcomps
mov
inc
push
fldl
xchg
add
xchg
cmp
shll
leave
repz
sub
mull
or
int
and
sbb
xor
aaa
popa
sbb
ss
mov
sbb
add
inc
or
dec
push
rorb
lret
stc
scas
call
sbb
imul
nopl
mov
ljmp
sbb
cmp
mov
outsl
out
rorb
and
cmp
mov
xchg
or
mulb
inc
mov
inc
and
pusha
aaa
xchg
add
and
sub
mov
mov
cmp
mov
push
testb
js
jae
fbld
xchg
test
push
xchg
mov
adc
insl
fwait
mov
sbb
dec
lods
mov
scas
pushf
insb
lret
dec
insl
and
inc
cmp
iret
mov
adc
dec
scas
sub
jmp
mov
mov
fistps
adc
pop
dec
jmp
sahf
xor
inc
hlt
rcrb
cmp
dec
xlat
fiaddl
stos
icebp
mov
pusha
loopne
pusha
mov
test
pusha
not
dec
xchg
addb
dec
bsf
adc
dec
jae
lret
or
push
xchg
cmpsl
loopne
enter
rep
pop
pop
pop
iret
xlat
fs
and
sub
insb
or
pop
rorb
out
imul
cmpsl
cmp
sub
in
xchg
lods
push
xchg
pop
dec
stc
xchg
or
xchg
xchg
aam
pop
mov
mov
orb
sbb
stc
xor
push
mov
mov
sbb
cmpsb
cld
fisttps
enter
or
pop
or
adc
xchg
fldt
push
subb
sub
cltd
inc
ret
push
xchg
sarb
in
jbe
adc
push
loop
xchg
push
pop
repnz
mov
aad
ffree
or
mov
jg
aas
sbb
push
cmp
push
ljmp
mov
jns
cmp
aas
sti
dec
mov
lock
sbbb
test
push
leave
inc
add
mov
inc
push
adc
xchg
xchg
dec
out
outsb
mov
movsl
int3
cs
leave
aaa
adc
aas
fcoms
inc
adc
push
in
repnz
mov
in
movsb
jns
insl
mov
push
xor
pop
filds
add
mov
push
mov
mov
add
fimull
cmpsb
outsb
jbe
je
loopne
aad
fs
push
pop
inc
scas
xor
psubsb
gs
jb
and
mov
in
repnz
adc
jl
mov
pop
jp
loop
in
xor
lock
sbb
push
dec
insb
or
out
mov
xorl
xchg
mov
xor
mov
shl
jecxz
push
sub
adc
ljmp
arpl
mov
lods
mov
shll
lock
mov
arpl
mov
gs
mov
adc
stc
pushf
ds
outsl
dec
cwtl
xchg
mov
mov
hlt
mov
xchg
stc
mov
aam
imul
jge
xor
decl
sbb
xor
stos
fs
xor
mov
test
inc
xchg
roll
outsl
mov
lahf
xchg
roll
dec
addr16
xor
adc
cmp
add
or
scas
nop
inc
cld
rolb
jbe
inc
xchg
repz
std
push
inc
and
dec
sbb
mov
mulps
pop
xor
xchg
jge
ds
sub
dec
adc
stos
outsb
push
sub
sar
or
data16
outsl
insb
loop
lock
dec
mov
icebp
mov
ss
push
insb
mov
mov
push
lahf
jg
stos
jo
sub
add
sub
push
adc
sti
imul
adc
sbb
sti
stc
int3
cli
scas
fs
hlt
fs
fdivl
cmp
inc
sbb
pop
cmpl
repz
or
pop
xchg
push
stc
cmp
arpl
mov
adc
in
and
xor
dec
stc
addr16
cltd
xchg
push
fnstcw
pop
lods
inc
jb
sbb
cmp
icebp
lret
ret
cmpsb
fdivs
dec
push
or
aam
mov
mov
adc
daa
addr16
mov
ljmp
negb
or
or
in
mov
std
loopne
imul
inc
mov
jno
adc
jb
out
out
push
push
push
jmp
jb
iret
cmpb
fsubrp
insl
in
inc
fcmovne
inc
movsb
popa
ja
aam
adc
fwait
cmp
aam
pop
insl
pop
int3
movsl
gs
daa
add
xlat
push
push
shrb
push
cmp
jmp
or
orb
sbbl
jmp
xor
gs
add
adc
xor
mov
push
pop
icebp
jnp
or
gs
ja
cmpsb
in
adc
gs
jno
int3
imul
outsl
call
in
push
dec
push
pop
shr
xchg
pusha
cs
hlt
aam
xchg
or
or
push
das
into
cmpsb
int3
leave
xchg
das
rcrb
xchg
pop
ret
add
data16
push
shl
iret
rorl
insl
scas
xchg
pop
dec
mov
lret
push
push
jnp
adc
xchg
mov
dec
test
andb
mov
scas
leave
ja
sbbb
cmp
insb
sti
je
imul
addr16
cmp
inc
and
dec
mov
outsb
aas
pop
fnstcw
pop
pop
loop
aad
xchg
pop
outsl
aaa
lds
aad
lods
pextrw
imul
cli
adc
xchg
or
xchg
mov
pop
pop
mov
jmp
cltd
in
hlt
sbb
push
cmc
and
dec
push
sbb
mov
cmp
mov
push
dec
lea
in
lock
cmp
mov
lock
scas
inc
inc
mov
ja
test
inc
fisubrl
pop
in
pop
jmp
lahf
mov
push
sub
mov
or
xchg
xor
ds
jbe
jp
ljmp
and
orl
aam
inc
sbb
sub
sub
scas
mov
or
lods
adc
sub
sbb
fadd
mov
pop
test
pop
fadds
lock
inc
into
jne
mov
xor
or
sarb
mov
inc
xor
insb
adc
outsb
xor
sti
push
dec
push
mov
mov
or
out
lahf
stos
pushf
mov
push
add
cmp
sbb
imul
clc
jle
xchg
mov
inc
fs
sub
inc
xor
or
pop
push
outsl
pop
sbb
cmp
jmp
into
imul
xor
pop
mov
test
xchg
and
push
aam
sbbl
push
leave
mov
shll
mov
fdiv
iret
jne
stos
xor
jmp
add
lods
push
out
out
pop
mov
sbb
inc
fiaddl
test
sbb
movb
add
push
mov
stos
jns
loope
cmp
dec
pop
scas
shlb
xchg
sti
icebp
stos
test
mov
orl
fimull
jl
inc
lret
pop
sub
sub
imul
ss
std
xchg
sbb
lock
pop
jg
inc
mov
xchg
or
xchg
push
xchg
addr16
fbstp
idivb
jno
cmp
dec
std
dec
popa
adc
jle
cmp
push
fdivl
or
pop
aas
imul
mov
push
dec
scas
sub
sub
push
xlat
popa
int3
icebp
popa
push
inc
in
ljmp
rol
pop
xor
outsl
xchg
add
or
push
add
stos
dec
add
add
mov
clc
std
xchg
xchg
or
jmp
mov
or
mov
inc
ljmp
push
sti
icebp
mov
popf
ss
icebp
int
cltd
push
scas
jnp
mov
sbb
stc
push
lea
test
push
cmc
int3
hlt
lcall
adc
and
jp
jne
push
leave
pop
mov
dec
imul
adc
xor
sbb
mov
add
push
inc
arpl
ficompl
jae
stc
out
int
sbb
add
sbb
les
dec
jo
andl
push
test
pop
dec
dec
rcr
and
cmp
mov
loopne
push
xchg
add
and
outsl
xchg
mov
xchg
cmp
ja
push
repnz
lods
fmul
dec
cmp
mov
daa
ja
fsubp
es
cmp
xchg
in
rolb
loope
pusha
xchg
mov
push
or
rol
mov
fwait
loop
ret
push
dec
and
xchg
pop
inc
sbb
mov
shll
mov
in
add
cmc
mov
xchg
sub
ja
push
das
popl
pusha
push
adc
push
ret
jne
mov
add
mov
sbb
fisttpll
out
insb
fcompl
inc
cmp
test
test
push
pop
push
or
push
pusha
pop
push
js
sub
and
in
and
jmp
mov
push
inc
mov
cmpsl
aam
pop
jb
frstor
hlt
push
gs
std
lds
inc
sbb
and
fdivr
inc
mov
dec
or
icebp
xchg
jg
xchg
out
vpunpckhwd
jle,pn
xor
les
cmp
lcall
andb
push
ret
add
addr16
out
push
push
fs
mov
in
frstor
hlt
mov
lahf
rcll
inc
jo
fs
pop
mov
js
imul
mov
imul
push
mov
pop
pop
ljmp
push
push
bound
and
mov
sarl
adc
adc
xchg
push
xchg
push
lahf
cld
jmp
push
cmp
adc
test
push
xchg
adc
mov
mov
mov
aaa
mov
aas
lret
dec
mov
inc
std
in
cmp
xchg
ds
sub
xor
sbb
xor
adc
mov
mov
fwait
pop
addl
movq
out
inc
inc
adc
or
lods
xchg
pop
mov
dec
sti
mov
lods
outsl
fistpl
shrb
jp
dec
jbe
mov
push
sub
fs
pop
data16
rolb
inc
popf
push
jp
xchg
in
mov
inc
jnp
push
cmpsl
jns
lds
sahf
xor
aas
mov
cmc
mov
add
imulb
pop
mov
addr16
inc
jne
insl
xor
aad
jle
fstl
lods
lret
repnz
sub
and
push
dec
sti
mov
jnp
mov
mov
dec
mov
sahf
fwait
mov
sbbl
js
in
ret
leave
add
sub
lret
jg
or
inc
test
dec
stos
rcr
fnstenv
push
pop
cmc
outsb
fsubl
sbb
testl
add
push
adc
outsb
fsubr
jl
movsw
fmull
ljmp
movb
in
pop
imul
dec
xor
pop
and
sub
in
cmp
lret
pop
jle
cmp
hlt
jmp
fcomi
ja
add
ja
pusha
xchg
xorl
fisttpll
mov
mov
int3
mov
or
xchg
cmp
adcb
sbb
dec
adc
stc
cmp
out
ja
and
sbb
jle
cs
lret
arpl
cwtl
stos
mov
cmp
out
sbb
mov
dec
out
test
cmp
inc
ret
mov
lds
pushf
scas
into
ret
jae
mov
fs
test
leave
int
cmp
mov
xchg
mov
je
inc
mov
dec
cmp
push
mov
cmp
or
test
mov
inc
dec
mov
stos
movsb
aas
dec
adc
jno
inc
or
inc
pop
or
and
mov
rolb
inc
dec
sub
in
pop
and
or
xchg
jg
std
jbe
pop
mov
mov
iret
adc
sub
pushf
and
aam
push
jbe
mov
pop
iret
push
add
cmpsb
leave
xchg
pop
xor
sub
shlb
add
ja
add
bound
outsl
jno
mov
inc
fnstsw
add
arpl
stos
mov
jmp
dec
push
mov
punpcklbw
adc
inc
out
lret
test
inc
insl
adc
and
inc
sbb
dec
stc
push
rorb
in
push
shlb
enter
div
push
jge
fnstcw
ja
mov
lods
mov
out
sub
movb
add
jp
jbe
test
scas
or
sbb
sti
addb
sahf
cmpsl
and
mov
inc
ss
xor
lahf
dec
dec
xchg
jnp
adc
daa
movsl
out
mov
jp
jl
xor
xchg
dec
xchg
and
or
adc
jmp
es
pop
pop
pop
cltd
ret
stc
inc
outsw
les
ud0
enter
js
mov
push
dec
movsb
xchg
test
cltd
call
nop
int3
push
add
fadds
scas
and
pop
jecxz
iret
jno
pop
jno
scas
popa
sbb
loopne
fwait
adc
or
pop
lods
sbb
test
scas
in
jle
pop
and
fisubl
xor
cli
inc
pop
xchg
mov
mov
mov
or
ss
mov
xchg
adc
lock
xchg
cmp
lds
daa
jns
movsb
and
sub
dec
jmp
add
in
xchg
inc
push
pop
xor
inc
in
fwait
dec
and
push
shl
test
insl
jne
scas
cltd
enter
jecxz
js
cli
or
pop
adc
dec
ja
pop
inc
test
mov
dec
insl
iret
cmp
sbb
bound
scas
loopne
and
cmp
mov
sti
stos
fwait
inc
loope
or
adc
idivb
idivl
pop
mov
cmpsl
lea
inc
sub
lret
and
outsb
mov
orb
adc
inc
jmp
mov
mov
sti
push
les
ret
pop
lds
adc
mov
adcl
adc
xchg
and
ja
testl
inc
xchg
test
cmp
in
repz
adc
iret
popf
sbbl
fnsave
repnz
jmp
adc
xchg
mov
mov
inc
pop
push
add
xlat
cmp
inc
jle
in
or
es
mov
addr16
add
cmp
test
push
adc
shlb
sub
pop
cmpsl
addr16
jb
mov
dec
pop
xor
add
addr16
mull
dec
movsl
mov
faddl
sahf
inc
pop
push
decb
sahf
lret
mov
js
adc
imul
xchg
jns
into
sub
pop
aad
mov
mov
fstpl
push
repz
mov
mov
dec
es
cmp
mov
pushf
ja
add
mov
ja
scas
pushf
hlt
cmpsl
vandps
pop
lods
fdivrs
xchg
lods
jmp
int
push
push
fcoms
mov
mov
int
aad
jp
pop
jecxz
andb
aas
addr16
sbb
fnstsw
out
movb
lock
mov
test
inc
scas
mov
loop
cmp
sub
push
xchg
fistps
xchg
push
add
or
imul
xor
dec
or
mov
popf
dec
cmp
cltd
in
fnsave
dec
icebp
mov
mov
jae
mov
lcall
cltd
leave
test
nop
cltd
aam
cwtl
jae
movsl
jmp
sub
mov
stc
jbe
push
lea
xlat
inc
movsb
ja
sub
or
fs
cmpsl
out
adc
push
xchg
and
pop
bound
ret
insl
xchg
xor
inc
jmp
repnz
mov
orl
rorb
sub
sub
adc
xor
cmc
push
mov
inc
ret
push
or
js
lret
cld
clc
pop
add
cmp
ja
add
xchg
cmc
adc
xorb
ljmp
ljmp
lret
mov
xor
test
pop
loope
int3
jbe
popf
mov
mov
pop
cli
loop
cwtl
push
cmpsb
cmp
lods
sti
lods
inc
and
es
lea
jnp
mov
push
arpl
and
movsb
bound
addr16
rolb
add
mov
push
sbb
push
dec
xchg
jmp
fldl
stos
clc
stos
cltd
outsl
add
aaa
in
nop
xorb
dec
jl
sub
call
lret
inc
enter
ja
scas
in
dec
movsb
pop
mov
int
push
ljmp
add
pop
adc
rcrl
xor
rclb
inc
ss
dec
jns
cmp
push
mov
mov
ret
cmc
rcr
or
test
xchg
lds
inc
add
pushf
mov
rcrb
cmpl
mov
fsubrl
stc
mov
dec
push
cwtl
push
mov
jp
pushl
sbb
stc
fists
jmp
inc
outsl
adc
xchg
adc
out
mov
mov
scas
jb
bound
jg
outsl
xor
and
adc
add
repnz
iret
sar
ret
lahf
mov
scas
jb
bound
jg
outsl
xor
and
adc
add
repnz
iret
mov
ret
lahf
mov
scas
jb
bound
jg
outsb
xor
xor
adc
ljmp
jmp
out
mov
mov
xchg
mov
popf
in
jg
sbb
stos
lock
sar
ljmp
add
aas
xchg
inc
imul
pop
subl
rcrl
ljmp
add
push
lcall
nop
pop
subl
rcrl
shr
cli
and
adc
add
push
lcall
hlt
aas
out
sub
jae
sahf
jge
push
lret
movsl
lret
in
mov
adc
push
pop
inc
lret
cmpsl
js
xchg
loop
pop
add
xor
popa
mov
lret
mov
movsl
xchg
jge
cmp
adc
ret
xchg
cmp
scas
inc
mov
adc
outsl
mov
sub
mov
mov
ljmp
push
ret
popa
rcrl
mov
stos
push
movsl
add
loope
add
movsb
xchg
sarl
daa
or
cli
lcall
dec
jb
outsb
roll
cmc
mov
add
lock
and
ljmp
aas
movsl
mov
loopne
mov
rcrl
sub
cli
and
adc
add
push
lcall
xchg
pop
subl
rcrl
xchg
push
pushf
inc
iret
ss
in
push
xor
cmp
pop
icebp
lods
test
outsl
mov
mov
pop
fwait
iret
xor
and
push
fildll
aam
shll
negb
fstl
xchg
lea
jb
je
jns
inc
mov
inc
push
jp
dec
xchg
pop
subl
rcrl
shr
cli
and
adc
add
push
lcall
xchg
pop
subl
rcrl
shr
fwait
or
movsl
jp
dec
loop
push
add
mov
add
stos
int3
jmp
jns
ret
mov
out
gs
xor
insl
ret
into
mov
pop
lea
repnz
in
data16
and
adc
out
adc
imul
lods
xchg
ss
mov
pop
jp
rol
cld
jg
mov
xchg
or
rorb
jns
sbb
into
std
jg
add
lods
insl
pop
in
cmpb
ds
pop
mov
pusha
sti
xchg
subb
rolb
xchg
add
and
rcll
imul
push
out
out
inc
or
imul
mov
iret
lea
xor
fwait
lahf
hlt
push
int3
rclb
xchg
std
push
aam
xchg
mov
aad
xchg
aaa
ljmp
cmpsb
mov
ret
xor
jns
mov
scas
loopne
sub
ja
jo
les
pop
mov
push
repz
punpckhdq
int
cmp
sbb
mov
js
das
lds
xchg
jne,pn
add
xchg
jnp
popa
dec
fcomi
jmp
dec
fs
mov
andb
incl
add
arpl
mov
add
push
test
lahf
ret
mov
addb
jl
mov
lock
jb
data16
movsb
les
testl
xchg
cld
mov
repnz
les
dec
fistpll
fs
adc
jecxz
or
pop
nop
call
lock
push
ds
mov
notl
pop
roll
dec
xchg
sarl
out
push
enter
cmpsl
jmp
inc
pop
arpl
negb
pop
cmp
push
adc
or
inc
movsl
or
rep
mov
sbb
push
jae
push
fidivrs
test
mov
sbb
cwtl
push
imul
xchg
hlt
nop
out
jl
push
insl
push
shrl
arpl
scas
addr16
sbb
sahf
popa
dec
adc
dec
incl
pop
dec
loop
test
scas
xchg
dec
and
and
cmp
movsb
jp
or
cmpsl
movsl
into
repnz
push
and
sbb
sub
clc
ljmp
jmp
sbb
inc
sub
inc
pop
xor
fmul
scas
cld
push
aam
mov
pushf
cli
inc
push
xor
lods
scas
pop
mov
lret
shrb
aas
mov
mov
xor
add
pop
cmp
lahf
pop
jl
push
xor
int3
pop
pop
xchg
cli
push
stos
cli
test
jecxz
mov
and
ss
test
jg,pn
push
ret
jecxz
scas
lret
out
jl
xchg
xor
mov
or
push
sbb
enter
shl
adc
js
lock
sbb
cmp
aas
cs
mov
mov
mov
ja
jp,pt
lcall
cmpl
mov
dec
mov
cwtl
imul
jbe
mov
lret
ss
or
mov
dec
inc
aas
jle
mov
adc
decl
mov
jge
mov
jnp
adc
xchg
sub
in
inc
add
mov
fidivs
push
xchg
subl
xchg
lret
pop
jp
mov
out
dec
aad
mov
sub
xor
add
xchg
outsb
enter
call
mov
testb
daa
pop
dec
hlt
cli
mov
inc
dec
pop
lock
jmp
push
scas
jne
movsb
jmp
fnstenv
add
sub
inc
hlt
lock
test
shll
cmp
inc
push
fcmovnbe
push
pop
addr16
jae
push
push
andb
sbb
adc
mov
mov
cli
pop
fcompl
bound
mov
icebp
mov
xor
leave
mov
addr16
sub
jo
ret
add
lds
clc
sub
cmp
outsl
cmpsb
imul
add
sbb
jmp
pop
sahf
lahf
mov
es
lret
mov
mov
cli
test
movsl
push
out
stc
xor
push
sub
sub
dec
cltd
pop
jae
aam
mov
iret
sbb
mov
pop
inc
pop
call
daa
sbbb
fs
dec
sub
xor
out
pop
dec
pop
outsl
fcmovne
dec
lods
push
out
cwtl
dec
call
leave
fstl
adc
ja
scas
out
and
out
push
inc
inc
cmp
stos
ljmp
ret
xchg
and
jbe
sahf
lret
pop
dec
mov
daa
sub
int3
xchg
iret
movsb
loopne
call
push
aas
sub
mov
cmp
dec
xchg
outsb
mov
enter
and
sub
jb
out
sti
jg
adc
leave
dec
sbb
call
stc
cmc
cs
push
aam
push
inc
mov
xchg
int
js
mov
push
lahf
and
mov
cmp
push
mov
int3
jb
xlat
clc
fwait
loop
inc
add
lret
mov
movsl
jge
cli
jmp
dec
das
cmpsl
in
push
arpl
sbb
xchg
scas
gs
jb
lods
pop
in
inc
pop
xchg
pop
jge
mov
xchg
push
repnz
push
hlt
pop
cld
fstpt
movsb
addr16
mov
xchg
sbb
push
pushf
cmp
xor
inc
mov
hlt
testl
dec
js
data16
cltd
loope
mov
insb
hlt
test
jl
xchg
test
sbb
imul
mov
std
pushf
addl
int
jns
jmp
mov
cmpsl
stos
mov
xor
call
mov
int3
push
outsl
pop
xchg
mov
jle
push
jae
fsubr
pusha
mov
out
xchg
jae
sub
pop
pusha
imul
sbb
lahf
jp
or
xor
adc
pop
mov
loop
lret
icebp
scas
mov
fstl
push
repz
sbb
pop
aam
aaa
jns
mov
outsb
mov
test
shl
lea
aad
mov
xchg
push
sbb
sbb
punpcklwd
xor
mov
fwait
xor
sub
xchg
loope,pn
fmuls
adc
and
ficomps
mov
imulb
into
out
mov
shlb
out
dec
shl
mov
jmp
incb
mov
pop
add
cmc
loopne
sti
dec
mov
dec
dec
dec
repz
cmpsl
push
push
jecxz
fcoms
imul
dec
jmp
xor
add
repz
sti
mov
ss
jg
jmp
out
bound
push
aaa
rolb
test
and
xlat
sbb
jne
xchg
inc
loope
jge
daa
pop
inc
mov
cli
sub
cmp
lods
jb
ljmp
jo
andb
adc
mov
lds
or
iret
nop
test
nop
andb
inc
jae
lahf
mov
xor
xor
test
inc
fcompl
cmp
and
sbb
adc
xlat
mov
enter
outsl
jp
dec
insb
das
mov
rcll
stos
mov
fisttpl
push
cmc
adc
jbe
in
int3
push
iret
mov
je
addr16
cmp
mov
dec
lods
jmp
data16
int3
push
mov
out
jbe
sbb
xor
jno
test
mov
dec
xchg
push
sti
xchg
xchg
clc
jns
lods
mov
pop
push
add
mov
adc
adc
mov
adc
lea
arpl
sti
aas
imul
mov
push
and
jle
popf
repz
and
fldcw
inc
sub
scas
add
iret
insb
pop
clc
jg
inc
addb
mov
and
jbe
data16
shlb
sti
inc
out
fldcw
fucomp
loope
js
mov
push
mov
insb
rclb
fs
inc
cmc
loopne
out
ficomps
xchg
mov
or
pop
lods
fisttpl
inc
stos
nop
xor
add
insl
jo
sbb
lcall
inc
sbb
inc
test
push
arpl
add
mov
mov
pop
ret
cmp
jl
push
je
adc
sub
mov
push
sbb
in
dec
adc
repz
stos
call
add
adc
or
add
cltd
add
push
xlat
cmp
es
in
add
sub
aam
mov
pop
push
int3
dec
movsl
fcomps
push
les
and
pop
rcr
jnp
push
mull
fiaddl
mov
negb
xor
pop
jb
sahf
arpl
pop
lea
dec
pop
inc
stos
out
mov
push
movsb
mov
lret
ja
aaa
jbe
dec
adc
mov
inc
adc
pop
mov
negb
jbe
je
rclb
push
ljmp
sti
push
mov
xchg
dec
jne
shll
mov
lcall
jmp
ret
out
dec
call
mov
fstp
imul
mov
in
int3
mov
movsl
sahf
enter
pop
mov
inc
fs
mov
scas
aas
push
lea
pop
arpl
push
into
test
sti
or
inc
xor
xor
popa
add
inc
jnp
mov
sbb
fisttpl
cmc
das
push
mov
and
subb
pop
push
loope
out
scas
out
lds
mov
mov
push
loope
loop
pop
mov
or
lds
pop
cmpsb
jo
idivl
inc
bound
pop
push
daa
and
xor
lcall
sub
sbb
cmp
pop
sub
hlt
fcoml
add
mov
rol
loopne
jmp
shl
xor
stos
clc
mov
cmpsb
or
dec
jne
mov
imul
dec
sub
bound
divl
pop
call
jmp
std
mov
or
jg
in
jbe
mov
sbb
jg
jne
ljmp
loopne
adc
orb
push
cpuid
bound
mov
cmp
negl
lret
in
and
cmpsb
mov
std
lods
mov
insb
push
mov
and
xchg
rorl
fcomp
gs
test
mov
jno
test
inc
popa
ss
into
stos
test
pop
push
mov
inc
fcmovnb
inc
adc
jae
add
mov
into
xchg
adc
mov
je
gs
ljmp
push
xlat
jg
mov
cmp
or
dec
in
fiaddl
outsb
cmc
jg
mov
mov
cltd
and
add
mov
push
lea
rclb
xor
popf
int
retw
push
jmp
sub
mov
mov
insb
es
int3
rcll
sub
out
xor
into
xor
js
arpl
xchg
push
xor
test
jae
sbb
mov
push
in
rol
push
sbb
mov
xor
sbb
sar
andl
xchg
xor
ja
pop
in
mov
push
outsl
rcr
and
push
and
adc
out
enter
xor
fmuls
popa
leave
test
xchg
arpl
jl
mov
mov
push
rcrl
ljmp
outsl
adc
popa
cmpsl
pop
jae
adc
mov
insl
roll
or
dec
adc
inc
push
rorl
ror
and
dec
in
gs
pushf
or
int
arpl
sahf
dec
push
iret
pop
push
xor
xor
mov
jae
push
mov
loopne
scas
jbe
xchg
enter
adc
addr16
xchg
rolb
or
push
add
push
movsl
iret
stos
push
cltd
lret
and
add
inc
pop
or
pop
out
mov
sub
sbb
addr16
mov
enter
test
scas
repnz
jns
and
and
lea
sbb
aas
dec
loopne
xor
insl
push
jmp
push
cltd
pop
add
cmp
cld
inc
mov
test
mov
iret
insl
inc
jg
cmpsl
and
jmp
ljmp
jge
das
pop
inc
test
call
shll
mov
add
mov
mov
in
pop
sub
pop
mov
mov
frstor
sahf
shrb
xchg
or
lock
push
cmp
mov
jbe
cmp
cmc
adc
xchg
imul
and
js
or
into
mov
cmpsl
aam
cmp
jge
out
cmp
jecxz
inc
aam
dec
xchg
or
push
add
sbb
xchg
lea
iret
sbb
xor
mov
adc
lods
movsl
in
lock
ret
scas
adc
jmp
push
adc
mov
test
ret
add
rorb
cld
push
test
pop
mov
outsb
sub
stos
lock
fcoms
mov
outsb
repnz
cld
dec
push
adc
jo
lcall
nop
lret
xchg
jo
adc
jl
nop
push
sbb
jbe
ja
adc
mov
pop
cmp
das
push
and
xor
xor
fistl
pop
push
xlat
pop
add
xchg
mov
aad
rcll
xor
je
mov
pop
outsl
jnp
data16
adc
es
adc
lods
mov
pop
jp
sti
or
dec
sub
mov
dec
or
jle
in
aam
mov
dec
dec
popa
pop
cmp
push
jmp
imul
and
cmpsl
add
sbb
addr16
into
and
mov
fs
outsb
aas
mov
fcmovnb
movsl
mov
daa
les
pop
pop
call
lock
push
inc
or
pop
jp
and
ja
sarb
xchg
ret
aas
enter
or
or
pop
sbb
xchg
cmpsl
mov
imul
neg
cmp
mov
lods
cltd
insl
inc
push
data16
adc
icebp
out
repz
adc
xchg
loop
sti
or
movsb
dec
nop/reserved
jge
cmp
sbb
fimuls
adc
xlat
xchg
pop
inc
cmpl
out
aam
pop
fs
push
sub
lret
mov
xorl
ljmp
ret
sahf
xchg
out
lea
and
dec
testb
int
rclb
in
jne
stc
out
cli
pop
cmp
out
push
cmpsl
cmc
adc
pop
stc
insl
ret
outsb
adc
pusha
in
fldl
pop
push
pop
dec
mov
je
repnz
cmpsl
dec
mov
mov
test
loopne
sahf
and
popf
aam
and
cs
adc
rolb
call
mov
call
daa
mov
push
repnz
lret
subb
push
adc
pop
out
fs
push
cltd
mov
test
sbb
sbb
inc
aam
mov
mov
fldl2t
stos
stc
fcom
inc
jno
setno
lcall
add
ret
jae
popa
rcrl
hlt
jnp
mov
jno
adc
pop
int3
pushf
push
in
push
xor
mov
icebp
dec
divb
cld
push
rcrl
movsb
xor
jmp
jae
and
ljmp
add
add
dec
dec
mov
jecxz
loope
mov
faddl
dec
push
fs
es
scas
nop
stos
in
call
imul
in
icebp
lods
or
push
adc
xchg
or
adc
xor
iret
cmpsl
test
sbb
add
orb
das
xor
and
hlt
insb
jmp
push
aad
mov
ret
sbb
sbb
push
jae
mov
or
andl
push
scas
pushf
test
xor
xor
xlat
mov
mov
push
pop
pop
xchg
jno
mov
xchg
jl
jmp
enter
sbb
xchg
push
filds
test
addr16
int3
push
push
rcr
in
mov
inc
dec
jge
jecxz
mov
das
fdivrl
cli
sbbb
js
and
cli
jns
jg
nop
push
and
cmp
sahf
lock
stos
pusha
insl
iret
addb
jb
xchg
dec
xor
ljmp
out
xchg
jns
int
scas
xchg
inc
sbb
out
out
test
sbb
nop
orl
jbe
pushf
mov
add
in
adc
cmpsb
cmp
xchg
pop
push
fcoml
xchg
cmp
adc
fcomps
arpl
cmp
jo
add
cmp
dec
stos
je
sahf
mov
xchg
pop
pop
add
jp
adc
mov
ljmp
into
push
popf
and
stos
mov
xor
sub
mov
or
sarl
or
jl
add
dec
mov
xor
jge
push
push
js
pop
dec
std
gs
sahf
mov
sti
daa
cltd
mov
xchg
jmp
push
lret
or
jae
adc
inc
subl
pop
dec
jae
push
xchg
sub
jbe
iret
xor
adc
jb
pushf
int3
adcb
movsl
rcrl
jae
shll
fdivl
into
loopne
and
lahf
movsb
or
xchg
cmp
xchg
into
mov
or
inc
mov
inc
or
in
jle
sub
and
push
push
push
outsl
or
xor
mov
mov
sbb
pop
xorl
jne
mov
cmpsl
mov
dec
inc
xor
insl
xchg
cld
jb
ficoml
xchg
call
jle
jge
pop
mov
jp
xchg
mov
adc
mull
cld
divl
nop
les
push
sahf
mov
lock
loop
jmp
in
pop
pop
or
jne
cli
ror
mov
inc
scas
fidivl
cli
sbb
cmp
cmp
mov
fsubrl
fistl
xchg
xor
insb
cmp
ja
insl
jle
stos
fcomps
divl
pop
dec
mov
jno
xor
push
hlt
jnp
adc
in
loope
xor
push
or
icebp
pop
enter
lahf
fldcw
dec
in
and
xor
add
jle
insl
jl
push
filds
pop
loop
inc
adc
insb
sbb
cmc
mov
pop
xor
jno
scas
sbb
add
shlb
or
lock
mov
mov
outsl
cli
push
and
adc
shl
mov
nop
mov
sub
mov
icebp
sbb
push
sahf
out
mov
stos
jp
xchg
sub
addr16
and
xchg
orl
shlb
out
test
lahf
mov
push
pop
add
sub
scas
pushf
loope
sbb
sub
movsb
push
ret
je
rorl
fdivrl
push
push
or
andl
fistps
mov
xor
pop
inc
pop
xor
cbtw
adc
sbb
lret
lahf
je
xchg
cmp
loopne
mov
sbb
xor
pop
sarl
dec
scas
bound
push
pop
lods
mov
les
or
pop
xchg
cmp
loopne
cld
in
lret
jnp
sbb
ja
loope
roll
push
xlat
jle
in
jmp
xchg
inc
and
inc
in
addr16
xlat
cmp
js
jne
out
sub
inc
sbbb
cmpsb
dec
cmpsb
in
push
xchg
daa
mov
push
push
xor
mov
sbb
test
xchg
xchg
lret
pop
dec
ret
shl
fldcw
mov
pop
pushl
sub
mov
inc
or
dec
dec
add
jge
mov
jae
cli
jl
jmp
cmpsl
popa
mov
mov
or
mov
adc
sbb
cmp
dec
pop
jnp
inc
ja
movsl
mov
ss
jp
sub
mov
or
lret
xchg
inc
mov
adc
clc
cmp
out
sbb
lods
fs
dec
jmp
add
cmp
imul
xor
dec
dec
cmp
sti
ret
rcrl
or
and
inc
push
sbb
imul
test
sbb
inc
movsl
mov
push
pop
mov
je
call
lret
mov
adc
mov
fnsave
stos
repnz
js
test
push
js
and
nop
in
or
mov
test
mov
sub
sub
xor
lret
sbb
add
fisubrl
inc
test
stos
sbb
pushf
fwait
pop
adc
divl
out
sub
out
sub
pushf
push
mov
mov
repnz
xchg
add
insl
inc
or
lret
fisubrl
adc
inc
pop
sub
sub
addr16
sbb
inc
sub
lcall
cmp
sbb
hlt
adc
mov
jle
in
push
rcrl
cmp
push
aam
test
loope
popl
add
mov
jae
mov
in
lock
lds
pop
jbe
mov
xlat
adc
popa
mov
cmp
in
push
aas
lcall
jp
popa
repnz
into
add
mov
mov
dec
daa
push
in
insb
lret
mov
pop
es
aas
test
sbbb
adc
add
push
lcall
xchg
pop
subl
rcrl
shr
cli
and
adc
add
push
lcall
xchg
pop
subl
rcrl
shr
cli
and
adc
add
push
lcall
xchg
pop
subl
rcrl
shr
cli
and
adc
add
push
sbb
loopne
pop
negb
mov
repnz
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
in
push
std
inc
int
frstor
pop
shlb
adc
rorb
loopne
nop
aas
sbbb
std
inc
int
frstor
adc
pop
jge
jge
dec
lock
loopne
cld
or
mov
aad
lds
adc
and
jecxz
andb
push
fimuls
test
xchg
or
sbb
add
jmp
xchg
and
cmp
insb
add
enter
in
adc
sub
movsb
push
aas
mov
mov
dec
or
push
add
sbb
addb
pop
jne
xchg
mov
test
orb
in
fs
stc
aaa
push
mov
add
pushf
fsubp
das
jl
js
mov
jle
mov
jo
inc
and
mov
pop
insl
add
mov
in
ret
cmp
pop
add
pusha
and
push
adc
gs
shl
xor
or
rorl
push
in
int
frstor
adc
and
rclb
loopne
nop
and
leave
adcl
fidivs
imul
test
cmp
leave
jo
xorb
pusha
sarl
pop
into
inc
cs
sbb
sub
out
iret
mov
or
ds
and
jge
dec
lock
loopne
nop
cmp
mov
int
frstor
adc
and
jge
dec
lock
loopne
nop
cmp
mov
jb
scas
mov
mov
cmp
test
dec
imul
nop
xchg
inc
jp
dec
xorl
imull
test
xchg
stos
sub
jmp
fnstsw
inc
fiaddl
lds
push
pushf
ja
pop
aaa
inc
mov
mov
stc
jns
popl
add
push
sub
push
loopne
or
out
sub
jne
aam
into
ret
stos
dec
cmp
push
pop
push
xchg
call
aad
jb
movsl
fidivrs
inc
dec
mov
shl
and
mov
dec
ja
mov
repz
fisttpll
fnstenv
adc
lods
fs
dec
mov
xor
push
mov
shlb
pop
je
int3
aas
mov
out
jne
pop
xchg
jl
jle
xchg
cmp
fxch
mulb
shrl
add
cmp
leave
movsl
xchg
lret
xor
fstpt
sbb
xor
addr16
lock
cmp
xchg
adc
inc
jne
aad
adc
jo
lods
mov
push
lods
movsl
inc
outsb
clc
int
out
pop
mov
add
outsb
test
stos
xor
jno
inc
xchg
cmp
iret
test
pop
repnz
push
bound
dec
in
or
fdivrs
jecxz
mov
inc
cli
out
jle
pop
aam
fisttpl
xor
dec
movsb
jge
cmc
gs
cmp
loope
jnp
pop
addr16
mov
xchg
sbb
sub
cmpb
orb
dec
sbb
jecxz
jle
out
push
cmp
mov
cli
insb
and
mov
and
xlat
pop
jb
push
rol
or
adc
and
test
cmpsb
int
sarb
xchg
jbe
je
and
ror
jg
jecxz
lcall
cmp
fdivs
push
jmp
pushf
push
cmp
aaa
pushf
xchg
xchg
insb
or
mov
mov
push
and
xchg
scas
in
jb
jb
or
icebp
mov
std
fsubl
insb
or
lock
jmp
fists
cmp
push
inc
aaa
mov
cmp
pusha
xor
sub
push
mov
xchg
std
stos
or
outsb
jg
jns
divb
pop
sbb
sub
sbb
jmp
dec
pop
pop
adc
pusha
xor
or
movsb
pop
int
xor
and
std
call
or
dec
stos
inc
pop
push
push
and
dec
outsl
push
dec
dec
xor
jle
subl
stc
lods
fldt
jno
dec
sub
inc
add
cmp
popa
xchg
sbbl
mov
lds
ret
call
test
push
in
and
js
divl
pop
mov
adc
pusha
add
dec
pusha
dec
mov
fsubs
cmp
pop
mov
testl
sub
cmp
je
jecxz
sti
mov
jp
mov
mov
imul
xchg
sbb
and
push
xor
stos
repnz
call
pop
arpl
add
stos
movsl
xchg
cli
jo
jo
in
jl
inc
mov
scas
and
jae
mov
xchg
sbb
push
mov
and
jbe
outsb
out
mov
mov
push
or
int3
inc
sub
repnz
rorl
ret
add
int
xchg
stos
in
lahf
lret
iret
sbb
cmp
add
push
jp
sti
stc
mov
dec
jns
pop
add
adc
dec
inc
sbb
clc
and
popa
les
dec
jns,pt
aaa
mov
inc
call
addr16
push
mov
lods
aas
insl
repz
or
pop
xor
fcoms
adc
js
jb
out
mov
sahf
mov
dec
mov
cmp
inc
out
lods
lods
sahf
jge
push
xor
call
pop
movsb
push
imul
mov
pop
mov
sub
dec
fstpl
or
sbb
mov
push
dec
push
add
bound
push
pop
mov
xorb
mov
dec
xor
mov
repz
jns
stos
mov
mov
aad
dec
pop
cmp
insl
mov
test
xor
clc
cmpsl
xor
pop
loope
outsb
outsb
inc
movsb
add
dec
aas
or
inc
jle
leave
andl
jb
pushf
pop
push
loope
and
std
jcxz
dec
pop
repz
loopne
je
addl
add
inc
push
sub
and
xchg
xor
rcll
inc
in
push
sbb
jns
xchg
frstor
cld
inc
lock
ds
push
jno
lret
incb
inc
mov
fcomps
inc
xchg
sbb
out
jo
add
jnp
cwtl
add
stos
test
xchg
fwait
xor
xor
mov
roll
xor
in
in
push
inc
fs
pop
inc
loopne
dec
push
cmp
pusha
hlt
ja
int
dec
lods
mov
adc
popw
roll
nop
xchg
mov
jecxz
dec
pop
mov
arpl
or
ss
jno
cmc
sbb
jge
cmpb
xor
add
call
sub
fimuls
dec
xchg
adc
mov
push
sbb
push
movsb
scas
cmp
lds
push
pop
cmp
nop
aam
xchg
fs
xlat
dec
mov
mov
cli
cmp
aas
loope
add
jnp
into
sub
adc
scas
cwtl
xorb
lods
jnp
int
dec
outsb
mov
mov
lret
pop
jecxz
push
cltd
fcoml
in
push
sbbl
rcrb
loope
cltd
or
xchg
sub
or
subl
adc
pop
scas
xchg
in
cmpsl
pop
jp
inc
cmpsb
xor
pushf
and
lahf
xchg
sub
mov
jo
dec
outsb
cmp
mov
lds
and
pop
push
cmp
scas
stc
lock
add
add
in
movsb
repz
imul
lcall
add
addb
rorb
sbb
push
loop
andb
pop
push
push
mov
cmp
push
mov
dec
fld
jmp
jno
mov
aad
ficomps
mov
movups
dec
dec
lcall
mov
jns
jo
test
iret
nop
jmp
pop
out
es
fwait
fwait
pop
add
mov
mov
or
xchg
xor
sbb
jbe
jns
mov
outsb
mov
push
out
jg
mov
jmp
pop
arpl
mov
daa
and
test
xor
pop
or
cmp
sarb
lahf
fsubrs
jo
fstl
loopne
inc
sbb
mov
popa
pop
mov
sub
xchg
adc
mov
sub
lock
ja
mov
and
xchg
pop
ljmp
lahf
cmp
jae
inc
stc
ss
jge
push
je
rol
xor
xor
lret
jbe
lcall
add
lret
ret
push
mov
add
adc
dec
dec
int
int
sbb
pop
lret
out
push
sbb
mov
push
or
shl
fdivrl
mov
mov
in
dec
mov
and
icebp
push
aam
adc
cmpsl
mov
pop
mov
mov
scas
xchg
xor
in
jnp
pusha
xor
xlat
int3
push
adc
inc
rcrb
js
xor
lret
mov
mov
stos
iret
movsl
xchg
test
pop
adc
testl
orb
dec
mov
or
out
es
hlt
popf
fadd
rolb
xor
enter
fs
xchg
lds
jp
jb
vpshufd
add
ret
vpacksswb
xchg
pop
push
movsb
jp
add
addr16
in
loopne
jle
xlat
mov
jne
mov
and
or
mov
sarl
xchg
pushf
adc
movsl
inc
fildll
and
sbb
inc
fcomp
xchg
or
dec
mov
stos
je
push
cltd
cmc
fistl
mov
call
mov
cmp
mov
rcrl
and
sbb
push
fbld
adc
andps
xor
or
pop
pop
lds
dec
test
cmp
dec
jle
fnstcw
push
aas
loope
outsl
cld
inc
in
push
lcall
insl
movsl
push
sub
xchg
test
int
imul
cmpsl
stc
cmp
jecxz
jns
sbb
and
repz
dec
insb
ds
cmc
test
out
dec
call
lods
es
mov
sti
xchg
push
mov
inc
aaa
mov
cmp
lret
gs
and
pop
jecxz
add
fdivrs
stos
add
fcoml
jae
xor
pop
xchg
dec
ret
mov
inc
scas
pusha
ljmp
bound
mov
adc
mov
push
sub
cli
ret
adc
inc
or
mov
jo
sub
clc
xchg
dec
fwait
xor
inc
adc
push
cwtl
out
and
shl
mov
mov
dec
bound
ret
jbe
setb
add
adcb
inc
jmp
push
xchg
push
lds
push
cmc
fisubrl
mov
push
lds
mov
cld
hlt
addr16
cmp
sti
jge
pop
cmp
mov
or
je
imul
and
lods
add
jnp
add
inc
mov
xchg
pop
adc
and
out
push
cmp
int
adc
inc
push
push
inc
cltd
sbb
int
jne
xchg
out
jle
cmp
xchg
lcall
or
js
jecxz
jmp
pushf
inc
icebp
stos
fs
or
mov
call
fistl
out
addr16
in
ficoms
mov
fs
push
shlb
jg
or
add
add
mov
es
fnstenv
fistpl
rorb
sub
dec
sub
frstor
and
sbb
sbb
mov
add
in
and
in
movsb
mov
and
inc
shll
push
or
push
into
dec
fdivrl
sbb
cmp
add
xor
cwtl
in
dec
xchg
adc
inc
inc
mov
pop
adc
rcrb
outsb
test
push
dec
jae
xchg
ss
clc
push
jno
call
adc
dec
jb
and
pop
mov
and
jle
or
js
out
push
mov
add
inc
popf
mov
aam
sub
add
adc
sbb
test
inc
out
subb
outsl
cmp
test
fwait
lock
adc
in
mov
cmp
incb
aas
push
xchg
sbb
outsb
jbe
mov
aas
movsl
xchg
pop
mov
out
nop
jo
push
std
lahf
enter
arpl
leave
push
rorl
xchg
dec
sub
imul
imul
sti
in
nop
sbb
bnd
les
jle
pop
rcrl
dec
push
and
fsubrs
add
or
jnp
fimull
mov
sub
push
xor
xorl
sub
outsb
ss
nop
lods
or
mov
pop
mov
in
ret
lock
inc
filds
popf
test
es
or
int3
ja
mov
cld
and
ja
divb
stos
in
decb
int3
movsb
push
movnti
das
push
xlat
or
adc
xor
xchg
mov
jmp
leave
mov
lds
push
push
std
loope
out
cltd
mov
mov
js
jne
outsl
shrb
leave
addb
sbb
mov
inc
loop
or
push
cmp
lea
jmp
sbb
dec
outsl
std
cmpsb
test
dec
leave
xor
push
mov
mov
cld
xlat
lea
sub
mov
jb
add
popa
js
xor
push
inc
fwait
xor
ljmp
lret
add
push
adc
addr16
add
xor
test
inc
mov
sub
push
adc
cmp
jecxz
or
or
das
push
adc
xchg
pop
and
jne
mov
stos
mov
add
add
movsl
decl
js
and
mov
pop
ficoml
adc
jg
jo
jne
ret
sub
cmp
cmpsl
idivl
hlt
mov
xchg
mov
cmp
xchg
orb
inc
ja
test
push
mov
sub
jmp
in
add
les
push
aam
imul
jns
rolb
out
push
movsl
popa
aas
jl
mov
int3
sahf
mov
dec
cmp
in
mov
out
xchg
mov
in
ret
lea
jl
loopne
sahf
push
mov
pusha
mov
mov
aaa
jno
cld
int3
cmp
cmp
pop
or
jg
dec
sahf
lea
push
sbb
popa
add
cmpb
jmp
mov
inc
jp
mov
mov
jo
scas
jp
movsl
pop
sti
sub
lock
inc
inc
daa
lds
lcall
push
adc
and
jne
imul
shlb
add
fidivs
rorl
or
sbb
pushf
mov
pop
jmp
js
shrb
rorb
fldt
mov
ficompl
mov
movsb
imulb
mov
sbb
mov
into
lods
popf
mov
inc
push
btr
push
sarb
fwait
idivl
lahf
test
and
enter
mov
dec
rorb
loop
movsl
jl
jne
push
pushf
or
add
std
repnz
out
imul
mov
mov
adc
jb
cmp
sub
sbb
sbbl
cli
push
push
jb
test
popf
js
xor
hlt
pusha
cmp
test
adc
dec
or
cltd
adc
aas
addl
imul
jg
and
mov
xchg
cmc
je
repz
mov
jbe
dec
sub
jmp
jbe
cli
or
test
push
hlt
dec
mov
mov
cmp
push
outsl
xchg
sub
cmp
in
lret
repz
add
dec
jo
inc
push
pop
dec
sub
imul
xor
inc
enter
sbb
cmp
add
and
sbb
sbb
xor
mov
pop
xchg
cli
cmp
or
pop
mov
xor
inc
jle
lea
imul
jne
push
jnp
js
or
out
jge
adcl
movsl
add
pop
xor
or
in
icebp
sub
mov
mov
mov
mov
in
push
sti
and
pop
mov
lret
mov
xchg
addr16
pusha
xchg
mov
or
movsl
scas
and
aad
fsincos
insb
push
and
and
outsl
push
sbb
push
pop
sahf
std
js
cli
in
mov
add
and
and
or
lret
notl
movsl
inc
xchg
and
xor
test
daa
xchg
mov
pop
pop
lahf
pop
pop
test
lret
pop
mov
es
data16
clc
jecxz
mov
fwait
cmp
cmc
insb
add
and
iret
sbb
pop
mov
loope
sahf
add
stos
loopne
mov
lahf
push
loopne
pop
pop
rolb
bound
lahf
dec
scas
mov
push
int
mov
jnp
in
sbb
push
pop
sub
imul
idiv
mov
xchg
rolb
loope
cli
sarl
xchg
mov
cmp
incb
adc
ret
push
lcall
arpl
sbb
xchg
and
std
xchg
sarl
ret
mov
repz
popf
hlt
out
incl
in
xchg
dec
mov
cmp
push
and
faddl
lahf
jns
push
push
mov
icebp
hlt
push
pop
mov
scas
out
jo
dec
or
xor
mov
adc
xor
outsb
mov
popa
imul
mov
pop
outsl
imul
adc
dec
xchg
call
mov
nop
push
add
shlb
fmuls
inc
inc
loopne
push
test
add
adc
mov
rcl
frstor
pop
pusha
inc
repnz
iret
cmp
fwait
mov
test
cli
xor
stos
insb
cmp
xchg
arpl
rclb
fs
shll
push
aam
lret
and
inc
xlat
xor
pop
xchg
or
sti
mov
pop
mov
mov
aam
jae
loope
out
test
ret
or
out
xchg
pusha
jo
inc
mov
leave
out
sbb
bound
inc
mov
dec
fnstenv
es
mov
dec
fnstenv
pop
fwait
jo
shrb
mov
xchg
lods
rcl
popf
mov
adc
jae
stos
xlat
push
pop
je
sbb
sbb
xchg
out
mov
je
out
xchg
and
jp
dec
mov
mul
cmp
clc
adc
imul
movsl
clc
xchg
sarb
xchg
insb
mov
jg
adc
outsl
bound
adc
mov
jnp
lock
mov
ds
outsb
outsb
xlat
sub
pusha
daa
fwait
and
add
push
pop
adc
lea
sbb
sbb
ror
jmp
pop
pop
jb
and
adc
mov
jbe
out
mov
insb
push
xor
push
adc
ss
in
repnz
gs
jp
push
popa
fbstp
inc
aas
pop
mov
mov
repnz
in
dec
push
inc
imul
dec
push
cmpsb
or
pusha
sbb
jge
fcmovnb
adc
cmp
mov
mulb
cvtps2pi
imul
inc
mov
pop
push
mov
aaa
aas
jns
out
mov
or
and
je
lock
push
out
xchg
jl
lahf
insb
xor
insl
adc
fdivs
inc
adc
out
les
pop
jmp
add
push
pavgw
jbe
cmp
rorb
pop
jg
adc
das
mov
push
cli
repnz
mov
mov
mov
lahf
fstp
in
adc
inc
push
xchg
sti
push
lea
sbb
add
xchg
bound
and
pop
adc
movsl
test
and
movsl
in
loopne
fcoml
xor
jle
add
lea
add
sti
mov
repnz
test
or
pop
outsb
test
pop
and
pushf
jbe
add
jle
pop
mov
sbb
mov
cmpb
xor
mov
jp
pop
addr16
mov
jle
enter
push
sti
adc
iret
push
inc
std
es
cmp
cmp
mov
xchg
cld
stos
jns
push
or
sysexit
push
sbb
out
inc
frstor
stc
mov
les
or
push
add
push
mov
in
dec
push
scas
adc
push
daa
inc
ds
cli
dec
push
dec
fpatan
ret
push
fimull
fistl
jle
push
hlt
mov
pop
add
pop
sub
mov
sbb
dec
adc
sbb
lahf
sti
bound
in
cltd
loop
mov
cmp
or
xchg
lret
fwait
xchg
sub
cmp
xlat
shrl
popa
mov
fdivl
adc
rorb
lods
xor
inc
sub
push
mov
mov
xchg
jecxz
jo
lea
rcrb
pusha
scas
outsb
mov
pop
dec
xor
ja
fsubs
and
sbb
loop
in
es
pop
sahf
mov
iret
div
mov
je
dec
fldt
loop
or
out
push
jae
mov
lods
in
inc
data16
sbb
mov
out
mov
mov
lret
mov
push
mov
testb
outsl
mov
std
inc
and
xor
cmp
and
lods
jne
sbb
add
fnstenv
dec
xchg
add
movsb
xchg
sbb
jge
and
dec
sbb
and
jne
shrl
mov
sahf
fsubrl
jno
push
imul
xor
lahf
jbe
loope
xchg
gs
imul
aad
pusha
adc
imul
mov
test
nop
clc
push
bound
fwait
xchg
push
dec
fs
pop
sub
xor
xchg
jns
cmp
lods
call
xchg
fwait
rorl
mov
jo
into
jae
orb
lret
inc
stos
jae
and
push
mov
clc
cmp
lret
ret
adc
rol
adc
ret
dec
xchg
ret
dec
sbb
filds
and
mov
add
fisttpl
mov
inc
ficomps
aas
imulb
fidivrs
ds
in
inc
cmpb
sbb
push
std
xchg
aaa
jns
jbe
fimuls
in
inc
lods
lods
sbb
xor
in
push
insb
gs
mov
bound
fildl
xchg
loope
fisubs
adcl
test
cwtl
add
mov
out
xlat
xlat
mov
ds
aaa
mov
shll
js
inc
aad
imul
cmp
scas
test
lds
lods
mov
xor
dec
jge
cmc
sarb
sti
repz
xchg
mov
out
add
mov
dec
pop
add
aas
daa
shll
fisttpl
pop
adc
lea
pop
adc
pop
aas
aas
inc
jb
scas
push
stos
sub
and
sub
mov
arpl
inc
fcmovnu
pop
in
xchg
js
pop
popf
roll
xchg
cmp
test
sub
jge
lret
push
mov
push
push
xchg
mov
inc
jo
pusha
lods
adc
and
jge
dec
lock
loopne
nop
cmp
mov
int
frstor
adc
and
jge
dec
lock
loopne
nop
cmp
mov
int
frstor
adc
and
jge
dec
lock
loopne
nop
cmp
or
push
incl
jo
pusha
scas
adc
and
lock
xchg
pop
sbb
pop
shrb
cmp
or
sbb
aam
adc
push
pop
rcrb
mov
int3
mov
inc
sub
cmp
or
sbb
insb
adc
xor
shlb
pushf
sbbb
faddl
push
and
add
and
shrb
jecxz
stc
mov
pusha
push
dec
sub
and
movsb
xor
inc
jbe
icebp
out
mov
ja
xor
movsl
adc
add
pop
mov
mov
mov
test
dec
and
mov
push
outsl
aas
adc
out
push
stos
jg
add
lods
cmpb
push
inc
and
cmc
cltd
xchg
ret
inc
repz
dec
add
sarb
fnop
dec
push
inc
loope
sbb
pusha
rol
jns
xor
ret
xor
gs
and
test
movsl
inc
mov
lock
and
rcll
ljmp
dec
testb
push
xchg
jae
arpl
les
ficompl
cmp
pusha
adc
adc
xor
lods
shlb
hlt
nop
in
mov
xor
adc
or
jns,pt
outsb
jne
and
test
bound
mov
dec
mov
adc
jg
jae
insb
je
and
dec
outsb
xchg
fdivrs
sahf
lret
pushf
jecxz
lock
scas
test
sub
cmp
push
adc
xor
sarb
in
nop
cld
mov
sub
cmp
or
sbb
insb
adc
xor
sarb
in
nop
cld
mov
sub
das
in
mov
push
jae
sbb
push
add
xlat
xor
lods
lret
sbbl
fisubl
ljmp
jl
out
and
js
mov
stc
mov
je
loope
shrl
fidivrl
dec
popf
roll
ds
repz
mov
adc
mov
subb
jp
jge
cld
test
dec
mov
jb
into
lcall
push
push
pusha
movsl
cmp
inc
idivb
dec
xlat
jp
ljmp
psubb
push
sbb
ja
xchg
mov
jmp
mov
rep
mov
and
pop
in
push
xor
movsb
pop
sbb
xor
sub
movsl
leave
fisttpll
inc
mov
shll
xchg
mov
xor
pop
sbb
pop
xor
sti
mov
cmp
inc
lret
std
sub
orl
push
js
fldenv
or
jle
dec
jbe
jns
adc
daa
jnp
movsb
jp
mov
aaa
pushf
pop
pop
mov
jne
dec
pop
divl
ret
mov
jb
mov
inc
notb
push
fdivr
lock
and
or
ja
push
dec
mov
sbb
sti
lcall
mov
hlt
xchg
inc
and
fsubs
aaa
dec
mov
int3
lock
arpl
lea
popf
jl
daa
add
push
subl
stos
mov
popa
ja
je
push
les
lret
mov
imul
insb
xchg
push
aad
fistpll
inc
sub
adcl
test
xchg
mov
std
aam
popf
sti
cs
pop
testb
hlt
rcrb
insl
lods
push
and
sbb
push
jl
and
ret
jp
pop
push
jle
aam
scas
sub
xorl
mov
inc
dec
in
js
inc
aad
dec
cld
or
pushf
fdiv
add
das
or
stc
je
jmp
xchg
ret
pop
mov
adc
ret
rcl
dec
xor
or
add
or
jno
das
movsb
pop
testb
out
fisttps
pop
sbb
sbb
xchg
es
repz
xorb
and
jae
aaa
mov
sbb
xorl
push
push
sub
out
gs
mov
or
inc
test
sub
jecxz
xchg
and
mov
cmp
mov
sbb
mov
das
xor
int
jle
daa
inc
mov
xor
pushf
pop
stc
jg
adc
imul
xchg
sub
shrl
and
movsb
test
mov
aas
pop
inc
or
aam
rcrl
push
mov
es
mov
inc
mov
jno
or
cld
hlt
cmp
push
rclb
push
call
loopne
inc
inc
dec
ret
mov
dec
mov
cmp
movsl
bound
stc
xor
xor
push
mov
jno
add
sub
pop
inc
xchg
mov
in
lcall
xchg
mov
mov
pop
sarl
dec
add
jo
fimuls
loopne
sub
mov
imul
xchg
mov
push
inc
dec
in
inc
cwtl
or
xchg
test
ret
pop
cmp
mov
mov
hlt
mov
sbb
xchg
movhps
xchg
pop
jo
sar
outsl
loope
mov
arpl
shlb
xchg
fcom
lock
aam
outsb
xor
movsl
xor
and
orb
or
rcl
cmpb
mov
dec
outsl
xor
cmp
inc
sub
sbb
es
jg
shrl
push
dec
test
cmp
add
movsb
dec
adc
nop
test
add
cmp
sbb
mov
sub
add
idivl
stc
add
icebp
and
je
imul
cwtl
in
out
sti
cmp
jo
ss
dec
iret
loop
repz
xchg
in
aaa
dec
dec
aas
push
sbb
pop
mov
adc
adc
inc
mov
cmp
scas
cli
ror
aad
jns
imul
mov
inc
add
xor
outsb
lret
ss
sub
imul
mov
add
dec
inc
mov
sbbl
and
or
mov
movsb
adcl
arpl
jp
repnz
ficoml
scas
js
dec
es
sub
mov
jp
cmp
jne
jns
in
cli
jl
lret
sub
nop
adc
jge
dec
push
fstpl
nop
jb
lods
xor
push
arpl
mov
jle
ret
and
add
push
dec
mov
clc
adc
fcoml
xor
pop
or
and
rcll
inc
jp
aas
shll
fidivl
sbb
gs
jo
cltd
dec
adc
pop
ja
cmp
dec
gs
cmp
data16
cmpsb
and
and
cmpsl
xchg
add
pop
pop
jmp
mov
ret
xor
jnp
inc
in
mov
mov
ja
jg
cmp
mov
jmp
aad
out
xchg
lret
nop
dec
dec
cmp
push
stos
jmp
shll
addr16
pop
cmpsb
inc
jmp
lcall
insb
adc
xor
xchg
jae
lods
mov
cmp
daa
mov
icebp
adc
insb
mov
jo
sbb
adc
mov
cmpsb
jg
sub
pusha
jb
daa
and
or
mov
out
imull
mov
cmpsl
cmp
sbb
icebp
std
fdivl
movsb
push
aaa
hlt
inc
xor
cmove
pop
xchg
push
sub
mov
hlt
xchg
mov
rcll
mov
clc
inc
push
sbb
lret
movsl
fidivrs
imul
add
andb
inc
rol
xchg
mov
outsb
inc
jge
xchg
jge
jb
imul
sbb
add
mov
ss
pop
rorb
adc
push
xor
pop
in
addb
dec
insl
or
or
outsl
mov
rorl
sti
xchg
add
or
pop
hlt
dec
push
jno
addr16
xchg
jmp
jae
ret
cmpsb
xlat
adc
insl
dec
cld
repnz
out
pop
adc
filds
fs
mov
in
insb
lea
ret
mov
adc
pop
mov
dec
sti
sub
aaa
push
mov
push
dec
lock
pop
cwtl
dec
mov
repnz
iret
lods
je
adc
aam
mov
insl
mov
std
fimuls
inc
pop
shrb
lock
bnd
inc
cltd
insl
jp
or
sub
aad
push
into
std
scas
sbb
jp
or
inc
xchg
jno
hlt
insl
xchg
movsb
out
lea
insl
xchg
leave
mov
sbb
jle
adc
bound
fwait
dec
stos
daa
test
push
push
cwtl
jo
sbb
add
mov
sub
jb
popa
mov
sub
int3
inc
and
dec
out
sub
mov
dec
inc
cwtl
rorb
lcall
cmp
fcomps
xor
lea
std
stc
add
imul
pop
pop
cwtl
mov
enter
or
dec
lcall
dec
cmc
or
or
xchg
or
mov
jge
sub
pop
and
or
adc
test
adc
pop
jbe
mov
stos
pushf
push
mov
or
pop
mov
in
dec
mov
push
adc
stos
sub
xchg
out
ret
xchg
push
sbb
sbb
aaa
lret
aaa
lods
add
sub
shlb
aas
nop
clc
fdivl
xor
push
out
mov
jns
sub
orl
stos
test
ffree
das
dec
ret
mov
mov
xchg
mov
add
stos
add
iret
aad
push
xlat
add
fidivl
out
jle
mov
pop
dec
cltd
jo
lcall
pushf
pop
das
movsb
sub
pusha
out
sar
pop
cmpsl
in
push
test
jne
mov
rorl
daa
lods
nopl
lea
xchg
les
repnz
dec
popf
icebp
pop
push
inc
sbb
and
sub
orl
mov
out
popf
lea
cmp
add
pusha
jl
jae
fwait
adc
add
sub
mov
inc
jbe
pop
hlt
ja
mov
frstor
insb
lret
dec
les
or
decb
push
mov
sbb
cmp
jle
push
mov
lahf
and
adc
mov
out
xor
lock
in
sbb
daa
xor
notb
cmp
lahf
mov
sub
in
nop
dec
pop
dec
iret
push
inc
iret
adc
fucomp
ret
jg
cmpsl
cmp
jno
ficoms
xlat
dec
mov
adc
inc
push
xchg
sbb
jo
mov
adc
add
enter
in
repz
inc
mov
es
xor
pop
mov
cmp
xchg
jge
pushf
stc
cli
lock
mov
mov
dec
mov
push
fcoms
iret
out
mov
pusha
push
insb
in
pop
push
mov
pushf
xor
filds
test
out
imul
cmp
jae
data16
scas
mov
fildl
push
outsl
stos
xchg
cmc
ret
out
mov
std
ret
inc
imul
cmpsb
insb
mov
xor
icebp
sub
xor
or
mov
push
mov
test
xor
insb
pop
adc
rclb
data16
adc
pop
xchg
xlat
sub
sub
es
cmc
sti
jns
jle
aad
cmpl
inc
cmp
mov
jmp
xorl
imul
notb
mov
rcrl
jno
aad
add
in
fistps
adc
or
enter
sbb
cmp
shr
es
sub
outsl
stc
or
pushf
repz
cmp
cltd
push
call
int
test
pop
idivb
adc
inc
pop
ljmp
sbb
sub
xor
lds
mov
push
mov
push
jge
push
cld
mov
sbb
jnp
std
rcll
sbb
mov
cmc
xor
div
jg
push
sub
or
xchg
movsb
ja
adc
pop
push
cmp
pop
mov
out
push
adc
or
xor
dec
add
xor
or
mov
je
sub
sbb
sub
test
push
cs
mov
lret
stos
jno
fisttps
adc
xchg
sub
jg
mov
inc
pop
js
sbb
imul
pop
pop
sub
not
inc
cmp
shlb
push
push
mov
mov
or
ljmp
mov
pop
dec
test
pop
rol
imulb
push
dec
pop
and
jge
or
adc
push
out
shll
hlt
cmp
jo
push
fwait
test
jnp
mov
xchg
ss
or
into
xchg
or
rcrb
mov
jge
dec
mov
daa
int
push
in
jns
addr16
xor
loop
adc
ret
fisubrl
test
inc
imul
ja
push
ljmp
das
mov
mov
frstor
ret
sbb
call
xlat
and
xor
mov
inc
pop
rclb
rorl
jnp
and
lock
insl
push
pop
dec
adc
sbb
sahf
enter
lods
es
ds
call
fdivl
push
fld
or
dec
imul
les
push
fwait
lahf
jecxz
jo
mov
jne
clc
mov
xchg
pop
jae
mov
or
dec
lahf
and
stos
mov
dec
fwait
clc
sub
mov
push
mov
fists
pusha
out
pop
xchg
cmp
mov
pusha
inc
andl
xor
scas
mov
adc
adc
push
outsl
adc
or
cmp
xor
dec
sub
popa
mov
push
pop
jg
sahf
push
movsl
pop
push
dec
push
cmp
cmp
lds
sbb
or
pop
push
xchg
fwait
pop
or
cmp
or
hlt
push
jg
jmp
xchg
xchg
iret
xorl
outsb
pop
fs
inc
repz
adc
test
cltd
es
xchg
mov
aas
mov
fwait
xchg
jb
dec
addl
xorb
hlt
movsl
mov
push
lods
cmp
lcall
lret
jne
call
mov
sbb
dec
adcl
xor
mov
scas
test
mov
xlat
xchg
jg
sti
add
pop
or
test
mov
mov
jnp
int
adc
test
mov
ret
dec
pop
ret
movsl
pushf
les
icebp
into
lret
in
jge
mov
fmul
xor
jbe
add
fsubrp
and
sbb
lods
xor
int3
jb
push
jge
push
fistl
and
push
or
popf
in
lret
jnp
dec
daa
xchg
xchg
dec
sbb
add
into
rcr
jle
mov
mov
mov
mov
loopne
pop
testl
fcmovnu
sub
hlt
mov
pop
dec
sub
into
mov
and
mov
mov
or
xor
mov
jns
pop
shr
mov
cwtl
call
xchg
insl
xchg
sub
pop
mov
int3
xchg
xchg
jo
push
push
add
cmp
hlt
loop
push
sti
dec
jnp
mov
inc
or
inc
testb
push
mov
sbb
push
ds
sub
insb
inc
adc
add
xchg
aad
mov
outsb
fisubrs
leave
insb
divb
adc
jp
outsb
sti
and
jle
sbb
pushf
mov
aaa
lods
cmp
imul
outsl
mov
jp
mov
cmpsl
push
shrb
jge
mov
dec
fwait
mov
push
scas
sti
mov
sbb
jle
and
mov
add
fnsave
cld
lock
jns
sub
mov
xchg
divl
ror
jge
dec
fsub
jae
and
xchg
icebp
and
mov
hlt
push
mov
rorl
jp
mov
stos
rcl
or
lea
fld
rcr
ret
test
in
xchg
cli
sti
push
xchg
and
ss
pop
cwtl
shrl
out
shr
dec
cmp
scas
sbb
jg
and
adc
iret
mov
add
mov
sti
js
jg
mov
push
cmp
mov
icebp
pop
arpl
xlat
mov
jb
xchg
pop
mov
adc
mov
gs
pop
dec
xor
lea
lahf
xorb
subb
lahf
addr16
aam
lcall
int
adc
adc
mov
mov
das
movsb
add
jb
out
outsb
or
insb
fmulp
xchg
notl
lret
add
ret
test
lret
hlt
fstp
inc
jmp
sahf
stos
mov
pop
inc
dec
shll
or
and
lds
das
sub
pushf
adc
ficompl
add
pop
outsl
mov
or
loop
and
ja
insl
push
jg
test
sbb
out
insl
ljmp
sub
rorl
leave
call
adc
shrl
xchg
pop
adc
cli
mov
and
rcrb
test
imulb
into
pop
mov
add
push
int
in
add
loope
push
fisttpl
rcll
sbb
or
dec
cmp
sbb
outsb
or
sub
cmp
mov
andb
enter
mov
mov
enterw
jnp
inc
std
jno
cwtl
xchg
push
test
les
adc
in
pushf
xchg
and
inc
pop
lock
aam
pop
out
push
lea
and
cmp
dec
mov
clc
push
cmp
cmpsb
out
add
fs
xchg
repz
lret
sbb
or
inc
sub
mov
dec
stos
inc
inc
call
push
xchg
addr16
mov
loopne
jg
xchg
scas
cltd
dec
inc
imul
push
cmc
mov
rcrb
sbb
lods
loopne
hlt
stc
inc
nop
cmpsl
jmp
into
aaa
in
test
js
cwtl
mov
or
mov
push
jo
mov
sbb
fldcw
out
psubusw
subps
loop
dec
out
cmp
xchg
psubw
push
xorb
inc
push
or
test
sub
rcrb
add
int
lock
out
insl
lock
mov
repz
jnp
clc
inc
in
addr16
jns
dec
mov
add
push
mov
and
icebp
fs
lock
popl
cld
dec
repnz
movl
push
lds
dec
les
pop
sub
push
out
inc
push
mov
call
xchg
lds
shrl
pop
push
dec
push
xor
pop
cltd
adc
pusha
jo
pusha
fwait
push
sub
int3
ljmp
jbe
iret
js
fists
popf
or
insb
addb
mov
xor
inc
test
xchg
inc
cmp
sbb
outsb
and
adc
mov
test
cmc
pop
sub
lods
fmull
lods
mov
mov
adc
jle
clc
das
jge
fstps
cmp
mov
mov
mov
xor
push
addl
add
jle
jnp
jmp
xchg
lock
cmpsb
and
xchg
sar
mov
mov
push
movsb
or
mov
scas
es
sbb
lret
notb
test
sub
in
pop
pusha
icebp
inc
sbb
pop
jae
cs
mov
in
xchg
jns
stc
ja
inc
scas
inc
pop
xchg
mov
inc
sub
jl
ss
mov
inc
out
sbbb
out
sbb
sub
add
pop
and
push
daa
adc
in
push
mov
fwait
dec
icebp
jl
div
sbb
or
lods
cmp
xor
xor
cmp
lcall
push
rolb
mov
cmpsb
mov
inc
insl
repnz
push
les
insb
jnp
aam
xor
in
insl
adc
f2xm1
pusha
push
sbb
out
in
dec
pop
add
ret
rorl
pop
dec
stos
xchg
xor
shlb
add
xchg
dec
pop
adc
out
je
jle
add
je
aad
mov
cmpsl
or
inc
inc
mov
cltd
xor
out
mov
scas
addl
gs
jns
or
aaa
int
mov
inc
int3
jb
mov
shr
add
or
rorl
clc
mov
out
jae
out
pop
mov
je
movsb
or
adc
push
mov
mov
pop
sub
dec
shll
inc
andl
insl
mov
cmp
js
sbb
imul
nop
adc
mov
jbe
test
jne
sub
icebp
lret
xchg
mov
jns
or
in
mov
push
adc
sbb
dec
or
ljmp
popf
mov
in
aad
or
lds
mov
gs
pop
cmpsl
sti
popf
or
or
lds
lahf
std
dec
sahf
sub
cmp
sahf
movsl
or
sub
rorl
xchg
data16
arpl
sahf
std
jbe
stos
push
loop
test
xor
arpl
hlt
test
mov
jle
sub
or
jne
mov
ds
pop
fsubr
jg
jnp
aas
adc
mov
dec
mov
xchg
fstpt
and
push
sbb
inc
mov
mov
push
add
fwait
icebp
sbb
jae
cli
imul
jbe
sub
cs
sub
mov
ljmp
push
fstl
mov
out
mov
enter
clc
add
jb
pop
mov
sbb
sti
les
sbb
leave
pop
aaa
scas
and
loopne
xchg
pop
mov
sbb
cmp
inc
push
imul
push
clc
test
je
cmp
sbb
mov
ja,pn
push
lcall
push
inc
shlb
sbb
jbe
repz
fs
add
test
sub
and
lds
push
push
scas
push
mov
sub
mov
out
xchg
jne
add
xchg
sub
ret
and
mov
movl
ja
lods
mov
sbb
sbb
icebp
xor
xor
lods
pop
lcall
lods
or
mov
sbb
repz
push
sbb
dec
mov
inc
mov
mov
xor
pop
dec
lods
jg
lcall
lods
into
mov
or
lahf
nop
std
or
arpl
pop
pop
mov
push
sub
add
jl
push
or
fldt
insl
sti
in
jbe
arpl
sub
rcrb
mov
pop
rclb
mov
inc
xchg
out
in
pop
popf
cmovns
and
shrl
add
aad
pushf
mov
mov
lret
sbb
lcall
sub
inc
lret
mov
popa
xlat
fwait
inc
cltd
mov
pop
cmp
adc
scas
test
loopne
jae
jae
or
ret
fdivl
mov
cltd
fsubl
inc
cli
add
int3
push
xor
push
push
dec
enter
xchg
mov
mov
dec
or
fwait
xchg
es
stos
push
lods
dec
jmp
xor
jne
pushf
xor
sbb
insb
adc
xor
sarb
in
nop
cld
mov
sub
cmp
or
sbb
insb
adc
xor
sarb
in
nop
cld
mov
sub
cmp
or
sbb
insb
adc
xor
sarb
in
nop
cld
mov
sub
popa
or
add
and
shrb
mull
pop
mov
mov
in
adc
inc
lock
add
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
iret
incb
imul
in
mov
and
insb
jl
add
add
or
pop
add
sbb
addb
add
add
clc
add
add
and
call
add
add
and
loopne
adc
add
add
outsb
add
clc
add
add
lret
add
rolb
sbb
add
add
add
add
add
xchg
add
flds
adc
add
pop
add
add
call
add
pop
add
add
add
add
inc
add
imul
add
add
add
mov
lea
xchg
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
push
add
add
flds
pop
add
add
add
outsl
add
add
add
cmp
addl
popa
add
add
add
add
add
sbb
ds
add
add
add
add
add
outsb
add
arpl
or
jnp
mov
aad
and
add
add
xor
push
add
add
add
add
arpl
inc
add
mov
add
sub
add
add
cwtl
add
add
add
add
add
add
outsb
add
add
add
add
addb
add
add
add
add
push
add
push
rolb
inc
add
lret
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
mov
cmp
imul
add
sub
je
add
add
add
add
add
flds
flds
mov
inc
add
addl
xchg
incl
add
mov
flds
mov
js
mov
add
and
clc
add
add
add
add
add
outsb
add
add
mov
add
add
add
add
xchg
add
add
add
push
adc
add
add
mov
cmp
lods
add
add
add
add
add
add
dec
add
dec
add
add
add
add
add
add
add
and
inc
add
add
test
rolb
clc
add
add
and
add
mov
add
add
mov
xchg
add
add
add
sub
dec
add
add
add
add
add
push
add
sub
mov
push
or
add
add
push
add
add
add
test
add
add
xchg
add
inc
add
add
flds
clc
add
add
add
add
add
add
add
sub
inc
add
sbb
arpl
ljmp
add
add
add
add
inc
add
add
sub
inc
add
add
xchg
add
add
add
add
add
add
sbb
test
add
add
faddl
dec
add
add
add
add
dec
add
faddl
or
add
add
add
add
add
lcall
idiv
jg
fcmovnb
fbld
jae
mov
iret
lret
and
inc
sub
or
cmp
int
lds
popl
xchg
popl
fbld
bound
lds
pusha
mov
repz
mov
xor
dec
dec
dec
lea
pop
sbb
das
lret
and
call
sbb
jne
inc
push
call
mov
mov
lcall
and
or
rcrl
xchg
andb
xchg
cmpsb
data16
xchg
adc
jns
jnp
mov
pop
sti
inc
sbb
in
ljmp
sub
add
imul
push
sub
push
lock
pusha
adc
icebp
pushf
aad
xchg
xor
lods
push
pop
cmp
aas
xchg
mov
cwtl
inc
add
jp
mov
adc
iret
xchg
dec
cli
cltd
cmp
dec
inc
mov
pop
xchg
loope
cmp
cmpsb
ss
clc
imul
push
mov
mov
pushf
sahf
loopne
xchg
push
lcall
mov
xchg
dec
cld
dec
push
pop
inc
mov
movsl
ja
sbb
mov
and
lahf
scas
inc
loope
inc
out
adc
xor
cmpsl
mov
cmpsb
mov
lea
insl
bound
mov
divl
ljmp
outsb
mov
test
jp
scas
ljmp
jge
dec
gs
pop
xchg
mov
mov
aas
xor
sbb
add
mov
hlt
xchg
orl
ss
pop
rol
mov
int
xchg
outsl
shll
push
loopne
fsubrs
pushf
ss
int
das
out
scas
js
out
fwait
hlt
loopne
es
stos
movsb
adc
xchg
nop
add
mov
push
adc
dec
add
dec
lods
sbb
xchg
icebp
and
add
mov
inc
xor
rcrb
int
mov
or
jecxz
fnsave
dec
lret
pminsw
jmp
mov
jmp
mov
rcll
xchg
adc
loopne
mull
add
cmp
and
fwait
mov
jo
inc
stos
add
cmpsb
outsl
jmp
adc
inc
je
imul
gs
or
sbb
pop
xorb
jbe
jb
cmc
sbb
divl
mov
xchg
xor
push
imul
mov
js
jae
sub
and
sbb
sub
outsb
adc
or
ret
pop
push
repnz
inc
dec
inc
xor
sahf
repz
lret
shrl
addr16
pop
pop
and
inc
fcmovnb
pop
jle
inc
push
or
mov
testl
bound
jno
mov
gs
loope
iret
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
