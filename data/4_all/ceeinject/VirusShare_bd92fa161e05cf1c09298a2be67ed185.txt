call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
lock
cmp
or
fwait
mov
rcrl
mov
lods
pop
aas
stos
cmpl
jmp
stc
adc
adc
xchg
sub
cmp
imul
jae
arpl
jae
and
adc
adc
inc
mov
ret
inc
lea
inc
fdivrs
aam
call
inc
mov
scas
push
sarl
dec
mov
mov
xorl
add
into
and
mov
test
mov
inc
cmpsl
popf
push
xchg
or
sbb
jecxz
mov
ljmp
or
adc
xor
fwait
in
mov
and
push
inc
push
and
data16
fisttpl
aas
lret
das
jmp
sub
sbb
mov
insb
mov
movsb
jb
arpl
xlat
mov
and
and
mov
out
shl
pop
pop
sahf
dec
dec
sub
sbb
pop
push
clc
loopne
push
dec
push
fwait
jbe
and
jmp
or
jle
rcrb
cmp
clc
insb
or
rcr
je
cmpl
add
sub
adc
fstpt
xchg
and
jge
fwait
jae
jnp
sub
and
add
cmpsl
dec
mov
adc
and
jmp
repnz
test
jp
mov
xchg
push
fiaddl
dec
and
adc
xor
push
out
cmp
dec
mov
inc
mov
jge
jl
pop
nop
js
bt
dec
sbbl
arpl
xor
and
adc
add
repz
cmp
or
sbb
dec
sbbl
arpl
xor
and
adc
add
repz
adc
dec
pop
std
adc
nop
shll
in
push
jmp
pop
movsl
nop
or
add
into
movsl
lret
push
dec
fcompl
push
push
das
inc
xor
and
and
sub
repnz
sbb
cltd
mov
mov
mov
jl
fildll
mov
mov
add
mov
xor
jg
cmpsl
inc
sub
sahf
lea
pop
jle
fs
outsb
pop
fwait
adc
mov
bswap
mov
mov
mov
cltd
push
mov
shlb
pop
sub
mov
aas
dec
js
outsl
in
dec
xchg
gs
inc
adc
or
mov
fcompl
cltd
outsb
push
jg
cs
jno
enter
cld
ret
mov
cld
cli
mov
or
out
in
push
ror
sub
xchg
subl
push
rorl
adc
xchg
outsl
sub
lock
data16
mov
push
xchg
dec
cmp
ljmp
fisubrl
in
fwait
scas
and
ja
shll
and
inc
jmp
sarb
fstp
aas
jp
inc
cli
mov
and
enter
or
call
mov
mov
inc
or
jge
mov
xor
xchg
inc
repz
aad
cs
jmp
popf
xchg
fadds
push
lods
bound
outsb
sbbb
mov
jns
push
outsb
sub
dec
inc
decl
cs
mov
dec
mov
inc
inc
jbe
sub
or
pop
addb
lds
mov
rcrb
dec
mov
inc
popa
enter
cltd
fmuls
add
cmp
jnp
lret
pop
pop
and
push
bound
loopne
stos
adc
stos
js
xchg
push
add
jo
pop
jae
js
cs
out
lret
xchg
lock
in
ficomps
cmpsl
pop
xchg
and
pop
inc
mov
pop
icebp
mov
into
fnstcw
cmp
ret
sub
dec
shlb
aas
dec
mov
push
or
hlt
call
dec
lods
jmp
and
xchg
push
push
stc
outsb
xor
pop
sahf
mov
mov
jno
cwtl
gs
mov
add
xchg
adc
lahf
stc
sub
int3
out
sub
mov
push
sub
rol
iret
int
push
jmp
mov
adc
xchg
vpsllw
fcompl
push
pop
inc
pop
and
or
xlat
xor
sbb
outsb
pop
xchg
xchg
iret
negb
in
lods
fadds
orb
push
xor
mov
cmp
mov
cmp
sbb
jg
pop
adc
cmp
mov
jns
outsl
addr16
cltd
xor
xchg
repz
or
ret
int3
std
lea
int3
fiadds
test
in
push
std
ja
xor
jnp
outsb
aaa
sar
mov
loop
scas
insb
popa
aaa
scas
std
mov
mov
daa
ds
or
clc
daa
jecxz
jo
les
hlt
or
movsl
mov
or
hlt
jle
out
shll
sbb
inc
int3
adc
cmp
and
sbb
fiadds
pop
movsl
jl
add
push
aad
inc
enter
sar
add
push
cmp
add
sbbb
jbe
xchg
lods
fwait
xchg
mov
push
stos
les
fidivl
mov
sbb
pop
dec
dec
ret
dec
rclb
add
ror
push
aaa
nop
adc
push
add
inc
inc
ret
outsl
push
mov
sar
dec
adc
inc
lock
xchg
call
negl
xchg
repnz
or
fld
call
roll
out
int
jge
sbb
and
jmp
cmp
lods
jg
les
push
dec
jmp
xchg
out
or
add
insl
pushf
leave
sub
mov
xchg
sub
pop
xchg
movsl
fisubs
adc
js
push
jo
test
jb
pop
idivl
xor
mov
mov
fsubrs
fimull
push
addr16
dec
sub
ficoms
jle
push
ret
int3
sub
jo
movswl
iret
or
aad
iret
mov
insl
popa
lea
aas
leave
or
jbe
outsb
int3
lahf
cmp
jl
ror
xchg
lods
push
cmpsl
lahf
xchg
out
xchg
sbbl
mov
jno
cmpsl
push
pop
cld
push
cld
lret
mov
mov
jmp
arpl
ret
push
pop
ret
sub
pop
imulb
xor
mov
aaa
push
add
inc
jg
add
mov
mov
push
popf
add
loope
inc
dec
cmp
push
lcall
pop
das
xor
and
mov
jnp
es
or
cltd
lcall
scas
repz
sub
lods
sub
outsl
push
mov
mov
and
push
cmp
jmp
test
int3
mov
leave
push
mov
pop
clc
xchg
ss
pop
pushf
nop
inc
mov
push
add
sahf
xlat
loop
repz
mov
test
mov
les
sbb
jnp
dec
push
daa
test
lahf
or
xchg
xchg
clc
sbb
push
gs
fcoml
or
aaa
imul
mov
or
adc
dec
and
pop
lds
adc
jmp
mov
rorb
sbb
ds
jo
jo
mov
ret
dec
pop
aaa
loope
sbb
dec
aas
js
push
int
and
sub
jno
sbb
adc
cmp
ja
push
sub
xchg
push
pop
sbb
scas
cmp
mov
xchg
pop
sbbl
add
fsubrs
test
mov
repnz
adc
dec
fiaddl
sbb
insl
push
mov
cmp
loopne
sarb
fwait
testb
daa
fcomp
mov
mov
outsb
repz
outsl
inc
mov
push
sub
sub
add
mov
push
sub
aas
les
pop
push
jle
push
idiv
les
ret
frstor
in
mov
push
mov
push
mov
mov
stos
xchg
add
fdivrs
xorb
add
mov
push
xor
dec
loop
faddp
add
pusha
push
js
sbb
adc
stc
bswap
jmp
xchg
movsl
or
jl
xor
imull
dec
test
and
jns
sarb
dec
mov
add
xchg
cmp
xor
inc
addb
dec
mov
xor
add
frstor
imul
cltd
mov
push
icebp
ja
popa
push
scas
add
aas
cli
xlat
or
mov
sub
rclb
pop
das
mov
add
das
ljmp
insl
jle
lods
cmpsb
setae
movsb
out
mov
int3
adc
pop
and
test
scas
std
and
test
push
rclb
in
es
outsl
aad
jg
mov
iret
inc
add
adc
clc
mov
inc
sbb
xor
mov
hlt
rorl
jbe
xchg
push
jns
cld
mov
jg
jmp
ror
mov
pop
stos
call
pop
push
imul
jno
jle
pop
sub
imul
push
push
loopne
pop
movsl
jbe
mov
aas
xor
xchg
cmp
lret
int
pop
sbb
cmp
mov
inc
lods
ja
xlat
and
stc
dec
bound
popa
and
pop
addr16
int
fcoms
push
inc
xor
bound
dec
sbb
cs
aas
ret
lds
xchg
mov
iret
pop
inc
xor
sub
aad
pop
outsl
jne
sub
cld
mov
repnz
popa
dec
fidivrs
lods
enter
loopne
sbb
shr
jmp
test
aad
jge
lods
fs
pushf
push
imul
dec
es
flds
rep
jecxz
test
xor
std
das
inc
mov
dec
icebp
pusha
into
ret
push
or
sbb
mov
inc
setno
adc
enter
xchg
inc
xor
mov
mov
loop
lea
add
in
filds
fs
shll
ret
fs
adc
js
pop
mov
je
and
fiadds
xchg
sbb
movsb
les
insb
inc
push
hlt
pop
add
fisttpl
inc
push
std
cld
or
std
loope
nop
fninit
pop
inc
xor
out
sbb
pop
or
sti
adc
xchg
jbe
sbb
push
dec
sahf
add
dec
or
push
mov
mov
mov
dec
stos
jae
arpl
clc
push
add
lds
sub
aaa
push
adc
fwait
mov
imul
daa
pushf
or
pop
test
insb
das
test
mov
ljmp
out
pusha
pusha
sub
adc
mov
test
jae
adc
mov
rcrl
int3
mov
aas
adc
pop
shr
mov
or
nop
xchg
xchg
loopne
xor
cmp
vmaxpd
ss
test
movsl
icebp
daa
inc
adc
cmpsb
pop
lds
loop
or
fs
popa
aaa
mov
inc
jno
sbb
push
loop
or
gs
pop
ds
out
fwait
out
outsb
fisttpll
inc
outsl
stos
in
mov
inc
dec
aaa
cltd
iret
insb
dec
cmp
push
std
or
cmp
enter
stc
and
push
push
data16
scas
nop
dec
pop
hlt
std
jne
je
repz
push
loop
or
or
shlb
pop
shrb
inc
push
jb
fimull
sbb
gs
adc
mov
lret
jp
fstpt
pop
inc
pop
mov
js
insl
lea
mov
mov
sbb
adc
pop
add
mov
jno
inc
or
jle
cmp
mov
movsl
lret
add
inc
lcall
ret
jle
dec
test
mov
loop
lret
out
outsl
ljmp
movzwl
mov
les
adc
sahf
roll
scas
mov
push
dec
sbb
add
adc
fcoml
xor
nop
jns
push
mov
jb
xor
push
xor
mov
or
fisubs
sub
inc
sub
mov
mov
jge
jno
or
dec
cli
data16
insb
jmp
or
jns
sti
fisubs
sub
es
lods
sub
js
mov
adc
push
repnz
aad
and
cs
lret
or
lahf
push
sub
xchg
adc
jecxz
fbld
or
push
mov
jne
aaa
jo
je
inc
xlat
retw
jp
sub
jmp
outsl
in
mov
dec
push
popf
xor
adc
movsb
cmpl
in
aam
sbb
jne
shr
shl
fwait
cmp
stos
jg
iret
pop
sarb
in
add
in
loopne
mov
ret
add
mov
adc
pop
or
lahf
pop
add
add
dec
dec
pop
mov
nop
and
and
ljmp
das
adc
inc
push
cmp
mov
in
cmp
shr
cmp
test
loopne
fildll
sbb
fwait
cmc
repnz
sti
push
ljmp
mov
xchg
adc
aas
push
out
lods
adc
sbb
insl
cmp
imul
enter
lea
divl
jnp
dec
cwtl
add
fs
test
repnz
push
fs
stc
lcall
idivl
or
mov
sub
into
ret
dec
xchg
xchg
das
mov
sbb
faddl
xchg
jbe
xchg
inc
les
and
mov
dec
lcall
adc
jno
call
or
push
loopne
sub
decb
jg
testb
mov
xor
dec
inc
int3
xchg
sub
jnp
mov
add
mov
and
adc
test
or
pop
outsb
int
xchg
jne
dec
jecxz
and
in
and
js
sti
out
sub
push
int
xchg
mov
rolb
arpl
and
fsubr
jb
xor
insl
in
out
mov
in
xchg
xchg
or
pop
add
rorb
scas
sarl
dec
out
add
pop
mov
or
loop
inc
or
bound
mov
pop
dec
dec
pop
cmp
sti
dec
mov
imul
dec
icebp
mov
lods
mov
sub
jp
cmp
bound
sarl
add
cld
test
cmpsl
stc
dec
cmpsb
push
mov
push
andl
mov
hlt
aam
cmp
and
bswap
push
and
cmp
push
pop
xor
lds
xchg
mov
adc
add
push
jp
fwait
mov
mov
jae
std
pop
xchg
dec
mov
xchg
xor
push
in
lcall
outsb
jp
rol
sub
cmc
adc
aad
push
cwtl
std
mov
stos
jl
mov
jecxz
inc
or
cli
imul
mov
xor
jg
mov
dec
test
sbb
outsb
mov
and
aas
pusha
jmp
call
xor
push
scas
xchg
dec
imul
cltd
and
cmp
test
sub
push
pop
cmp
and
decb
sub
push
jg
cmp
into
jbe
popa
pop
xchg
test
aas
data16
ret
test
adc
scas
or
in
add
loope
cmpsb
sub
testb
decb
mov
enter
and
fcompl
test
or
cwtl
daa
pushf
xchg
enter
sub
pop
xchg
data16
xchg
scas
in
dec
jno
jnp
jmp
fisttpl
mov
cmp
in
arpl
mov
int3
pop
mov
ljmp
or
pop
xchg
mov
in
loop
push
inc
outsb
cmp
mov
xchg
xor
fwait
push
icebp
add
sti
adcl
mov
jg
fistpl
pop
inc
negb
test
das
mov
jmp
sub
icebp
cmpsl
push
lods
das
lret
js
in
dec
pop
push
out
push
enter
pusha
push
mov
inc
pop
jle
inc
jns
xor
xor
cmp
in
das
out
enter
mov
repnz
cmp
mov
filds
ja
cmp
into
lods
movb
fisubrs
xchg
add
and
int3
adc
or
sub
xor
push
cmp
xchg
xor
jbe
add
xchg
loopne
repz
rcll
insl
sbb
jo
daa
xchg
mov
popa
ret
iret
scas
jae
imul
mov
aam
jae
push
mov
ja
sub
jo
aam
push
adc
clc
xchg
xor
pop
mov
sbb
mov
mov
inc
es
nop
lcall
ficoms
and
jp
lds
cmpsw
jl
movsl
hlt
ljmp
sub
dec
daa
cltd
cltd
xchg
lods
mov
daa
sbb
sbbb
sbb
js
andb
pop
inc
ret
jmp
push
pushf
mov
jmp
jbe
outsl
push
pusha
out
xorb
lret
pop
mov
mov
cmp
cmpsb
icebp
andl
jg
dec
into
xor
add
cltd
dec
hlt
mov
repnz
push
sbb
push
ds
icebp
xor
rolb
jmp
and
sub
jmp
into
push
mov
scas
xrelease
cmp
mov
je
pop
xchg
out
mov
cmc
mov
or
push
add
mov
cmc
je
out
popf
add
mov
push
or
push
push
mov
mov
pop
bound
popa
jmp
sahf
icebp
mov
adc
adc
divb
dec
mov
int3
cmpsl
xchg
push
out
rorb
idivb
mov
test
xorb
and
into
shll
fadd
movsb
in
xchg
push
pop
leave
rcl
jp
int3
out
mov
adc
or
sub
sarb
jo
fxam
scas
sbb
int
mov
sbb
stos
pop
push
pop
dec
filds
cmp
mov
adc
dec
push
je
jp
int
inc
dec
mov
pop
out
cli
clc
pop
popa
cltd
nop
stc
xor
or
mov
andb
or
scas
dec
cli
test
adc
mov
or
loope
loope
or
add
push
stc
and
cmp
sub
sahf
lahf
cltd
adc
jle
sahf
icebp
or
or
ret
cmpl
out
add
idivl
inc
sbb
ljmp
jl
push
scas
scas
scas
addb
push
ret
mov
lods
cwtl
in
data16
das
lcall
adcb
icebp
inc
pop
push
mov
dec
xchg
in
xorl
insl
sub
or
xchg
xchg
sbb
inc
sub
cltd
mov
out
mov
adc
fisttps
jg
addr16
or
sti
push
pop
add
notb
adc
and
and
stos
push
jl
xor
pop
lods
inc
fdivr
cmp
jle
push
fiadds
mov
pop
push
mov
mov
adc
xor
fisttpll
pop
int3
ja
xor
sub
stos
gs
movsl
divl
ror
lahf
jno
scas
jle
lods
inc
mov
je
xchg
inc
pop
test
movsl
ret
int
js
and
enter
mov
pop
hlt
and
stc
inc
inc
data16
sbb
jns
mov
jo
push
scas
aam
mov
xchg
fnstenv
fimuls
lock
cmp
int
push
call
adcb
sub
cmp
jge
pop
es
lret
cmpsb
stc
insl
ds
inc
or
das
xor
jmp
ljmp
roll
enter
cltd
pop
leave
sbb
cmc
ss
or
or
cmp
mov
inc
dec
lahf
inc
out
xchg
outsl
fwait
in
inc
sti
cmpsb
sub
mov
lahf
cld
test
data16
or
dec
bound
xchg
xchg
fsts
movsb
in
cmp
adc
mov
cwtl
mov
scas
mov
and
data16
push
mov
mov
fcmovnb
xchg
popa
rcll
fmuls
pop
mov
jno
push
inc
inc
xchg
cmp
sbb
stos
add
dec
xor
orb
jbe
fwait
scas
test
inc
add
stos
xchg
loop
fwait
std
adc
mov
jl
mov
cwtl
inc
cld
pop
adc
cmc
enter
and
stc
lret
les
fs
add
push
cwtl
test
clc
std
stos
mov
idiv
nop
not
cmpl
ljmp
pop
js
in
pop
mov
adc
add
mov
dec
push
xchg
shr
mov
push
sub
xchg
xchg
fstl
jg
js
test
test
jle
mov
into
ljmp
jb
leave
mov
xor
push
add
pop
sti
and
xchg
shlb
pop
in
mov
subl
cli
xor
sar
in
add
jmp
xor
popf
mov
cmc
sub
clc
cmp
xor
ret
inc
pop
or
adc
dec
in
mov
dec
mov
pop
sub
inc
into
sub
cmpsb
add
push
je
loopne
mov
lret
sub
and
sbb
and
ss
inc
repnz
xlat
jnp
cmp
mov
pop
push
pop
icebp
mov
repnz
movsb
sbb
ds
inc
sbb
mov
and
dec
popa
lods
addl
imull
lods
jnp
in
push
xor
xchg
mov
jmp
movsl
mov
cmp
push
sar
lcall
fdivl
ds
fbld
mov
outsl
pmuludq
or
pop
mov
add
inc
jp
and
and
cmp
mov
push
mov
jecxz
sbb
xchg
sti
imul
into
and
ljmp
and
fimull
or
jl
pop
mov
sub
scas
xchg
out
dec
iret
rcrl
dec
das
idiv
xor
mov
lret
call
test
into
push
out
mov
lds
out
mov
xchg
sarl
push
insl
sahf
or
dec
ffree
push
cmp
rcll
jge
in
iret
and
pop
jge
xor
dec
push
js
rcl
lcall
sub
pop
into
test
push
cmp
shr
gs
mov
xchg
lret
inc
mov
jg
jns
roll
add
inc
dec
movsb
pop
popf
and
xor
jbe
repnz
pop
dec
aam
and
push
adc
push
jmp
dec
cmp
xor
fcmovu
jmp
pop
out
dec
jae
out
aad
push
mov
adc
and
dec
xor
ljmp
or
lods
icebp
sbb
loop
nop
call
fstpl
mov
daa
xchg
sar
mov
cs
fiadds
enter
loopne
mov
leave
mov
xchg
dec
stos
pop
cmp
mov
pop
jae
arpl
xor
and
adc
add
repz
cmp
or
sbb
dec
sbbl
arpl
xor
and
adc
add
repz
jae
jae
sbb
imul
jae
arpl
xor
xor
adc
jmp
out
mov
sbb
lret
add
push
pushf
adc
mov
inc
arpl
and
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
faddp
into
sar
loope
icebp
push
cmp
ror
movsb
mov
decl
jle
outsl
jno
add
adc
xor
xor
ror
loope
icebp
sahf
orl
push
jle
outsb
jno
fs
adc
and
xor
ror
loope
icebp
sahf
orl
jb
add
pop
push
inc
popa
dec
dec
inc
inc
inc
orl
add
mov
ret
idivl
scas
cmp
dec
outsl
fisubrs
cmc
xchg
roll
mov
jl
xchg
mov
sub
mov
sahf
xchg
fs
cmovp
mov
adc
xor
pop
xor
inc
sbb
scas
mov
jae
pop
lods
cs
fimuls
xchg
hlt
out
cmpsl
mov
test
lret
scas
andb
icebp
mov
add
cs
push
adc
or
mov
mov
adc
push
icebp
add
das
shll
cwtl
xor
cmp
into
jl
xor
scas
cmp
inc
mov
mov
addl
scas
into
adc
into
sar
loope
icebp
sahf
orl
push
jle
outsb
jno
add
adc
and
ja
sarl
sahf
cld
in
les
jle
push
add
jne
push
pop
push
push
mov
sahf
ret
idiv
lahf
cmp
and
and
fs
xchg
pop
gs
test
xchg
mov
inc
dec
push
jle
outsb
jno
add
adc
and
xor
ror
loope
icebp
sahf
orl
push
jle
outsb
jno
add
adc
and
xor
shr
arpl
mov
push
negb
sub
dec
jge
push
cmpsb
lcall
push
xor
cltd
js
sbb
popa
stos
movsl
shl
and
sbb
shlb
inc
cmp
and
stos
or
call
je
or
adc
loope
inc
icebp
aad
sbb
clc
mov
repnz
icebp
arpl
movsb
dec
popf
out
xlat
sbb
lcall
dec
push
and
cli
arpl
dec
adc
adc
sub
ss
sbb
test
dec
mov
dec
add
lock
pushf
cmp
sahf
xchg
jns
cmp
sbb
xchg
sbb
mov
mull
movsl
outsb
mov
push
mov
les
or
ds
pop
xor
lahf
ljmp
adc
xor
imull
mov
dec
in
mov
or
push
fs
fistl
mov
jno
addr16
popa
std
icebp
inc
add
data16
sbbl
xor
sbb
mov
aaa
or
scas
in
test
pop
scas
popa
iret
cltd
ljmp
sbb
push
adc
cmp
and
call
test
xor
or
test
aam
out
int
jmp
pop
push
xor
cmc
push
dec
adc
in
pop
push
mov
or
inc
cmpsb
daa
mov
es
out
lcall
pop
std
mov
cmpsb
gs
push
call
ficoml
insl
sub
cld
decl
mov
mov
adcb
inc
xor
enter
dec
das
rcrl
xchg
ja
push
mov
mov
ja
xchg
repnz
out
jecxz
je
paddb
xchg
xor
jno
jo
cli
sub
js
gs
dec
loope
mov
mov
lds
fcomps
daa
jae
sub
jge
cmp
call
outsl
xor
adc
rorl
and
negl
fcomps
fildll
out
xchg
push
mov
enter
mov
mov
stc
jns
jle
pop
subb
xchg
sub
popa
push
xchg
stc
cli
inc
fmul
sahf
lods
mov
popf
sub
adc
add
nop
add
repnz
mov
xorl
sahf
or
jmp
add
mov
jns
jb
xchg
ljmp
adc
cmp
mov
mov
mov
sbb
jbe
popa
mov
fsubs
cmp
enter
pop
dec
clc
inc
out
roll
inc
pusha
rorb
cmpsl
or
fiadds
pusha
pusha
fimull
lea
pop
jno
cltd
ret
jl
jae
pop
mulb
xchg
stos
sbb
pushf
repnz
sub
es
notb
mov
cli
lods
jmp
dec
in
in
jp
xor
std
cmp
movsl
rcrb
incb
pop
jmp
lods
fimull
inc
cmp
rcrb
push
mov
push
mov
daa
adc
fnstcw
out
hlt
dec
cmp
jle
push
nop
fcoms
in
xchg
leave
sbb
xchg
mov
lea
mov
dec
fs
pop
adc
or
pusha
movsb
mov
adc
lret
test
shrl
mov
dec
jmp
ss
loop
inc
pop
adc
push
cmp
bound
push
lcall
sbbl
push
cli
dec
es
je
sbb
jmp
loope
mov
icebp
inc
mov
mov
call
xchg
xchg
xor
in
xchg
arpl
xchg
jbe
cmp
fs
repz
push
pop
mov
sub
sbb
addb
inc
test
das
in
in
out
dec
mov
or
clc
and
add
je
xor
push
sbb
scas
sbb
jbe
loope
sub
push
fs
inc
or
xchg
xchg
mov
insb
pop
inc
fnstsw
sarl
int3
xor
mov
xor
pop
vmovlpd
adc
push
lods
lahf
push
xor
or
pop
inc
fwait
xlat
fdivp
sub
out
imul
leave
leave
mov
insl
dec
repz
adc
sti
out
mov
sub
cltd
shll
in
fwait
fs
clc
orl
aas
inc
sbb
es
sarb
xor
inc
adc
and
movsl
ffreep
adc
pop
fwait
mov
addb
arpl
add
imul
cmp
pop
xchg
pop
xor
cli
pop
pusha
push
mov
dec
cmpl
test
pop
in
mov
push
mov
test
mov
jns
call
dec
das
nop
inc
or
pushf
mov
jne
cmp
adc
sbb
xchg
cmpl
mov
jmp
lock
mov
sbb
in
pop
xchg
push
movsb
mov
cmp
aaa
popa
outsb
ja
adc
pop
inc
xor
faddl
adc
jecxz
rol
pop
mov
mov
xchg
lods
popf
mov
cmpsb
mov
lret
leave
sbb
shll
push
xchg
lods
inc
jne
cmp
cli
cmp
rcl
jo
stos
popa
sbb
and
pop
and
imul
les
add
aas
hlt
cmpl
test
mov
jge
add
add
or
shr
testb
inc
fimuls
int3
cmp
cmp
pop
xor
mov
cwtl
mov
and
xor
pop
xor
imul
jne
add
leave
sbb
sub
arpl
imul
push
cld
pop
adc
xchg
dec
mov
push
mov
jecxz
cmc
js,pt
inc
push
testl
popa
xchg
repz
sbb
cmp
cltd
pop
fnstsw
repnz
pop
mov
sub
xchg
jecxz
in
es
in
mov
dec
rcll
xchg
or
or
push
lods
jo
mov
sti
cmc
cli
mov
cmp
cmp
cltd
xor
or
push
inc
in
xor
jns
push
jp
test
popa
cmpsl
subb
ret
cmpsb
test
sbb
xchg
std
push
icebp
sbb
pusha
inc
es
shll
sub
inc
in
lcall
mov
rcrl
cmp
inc
or
mov
pushf
les
lods
adc
ror
dec
dec
loopne
mov
sub
mov
dec
rcr
cltd
push
ljmp
adc
add
aas
mov
pop
cmpsb
xchg
xlat
jp
shll
jbe
inc
dec
jmp
call
inc
or
lret
cltd
scas
pop
xor
clc
rolb
ja
imul
shl
mov
data16
dec
jl
push
loop
xchg
pop
cwtl
mov
push
aas
mov
cltd
sub
in
movsl
ds
cltd
xor
mov
iret
cld
popf
push
jb
push
dec
js,pn
cmp
add
jb
mov
or
inc
xor
mov
in
cli
dec
gs
andb
mov
dec
hlt
cmp
xchg
idivb
or
and
xor
cmp
mov
jo
push
fs
movsl
mov
cmc
repz
xor
xor
mov
stos
xor
sub
ret
inc
push
or
mov
int3
dec
or
pop
je
and
and
fcoms
mov
ret
leave
jmp
fstpt
jo
xchg
push
sbb
sub
xor
mov
test
fwait
roll
pusha
popf
push
xchg
mov
std
sub
push
into
xchg
adc
jbe
jmp
inc
outsb
inc
inc
cwtl
sub
dec
rcl
push
cwtl
sub
inc
ds
mov
mov
dec
cwtl
fbstp
cwtl
pop
add
movsl
cmp
push
sub
pop
rcrl
dec
xor
aas
inc
sbb
xchg
mov
xchg
fs
fidivs
mov
mov
xor
mov
pop
adc
test
push
xor
sbb
sub
adcl
aaa
mov
sbb
jnp
in
dec
insb
adc
popl
aam
add
jb
inc
mov
inc
scas
dec
mov
mov
fbld
jl
pop
call
mov
lret
out
inc
xchg
or
cmp
addr16
xchg
cmp
and
loopne
xor
cmpsl
mov
sub
inc
xor
subb
rol
sub
js
mov
aad
nop
mov
int3
adc
mov
mov
xchg
in
sbb
pop
and
push
and
mov
sarb
cmp
pusha
fwait
popf
pop
cltd
xchg
pop
aaa
inc
fistps
mov
xchg
adc
das
mov
pop
lahf
pusha
xchg
pop
mov
clc
mov
jbe
loope
jns
mov
es
subb
mov
xchg
stc
xchg
pop
cmp
aaa
mov
push
repz
pop
jmp
jge
push
xorl
jno
into
mov
pop
repz
fwait
adc
aaa
cltd
insl
pop
add
pop
enter
loope
daa
or
out
andl
lods
fcompl
jg
pop
push
shrl
stos
jbe
and
ljmp
push
dec
mov
mov
xchg
xchg
cltd
das
pop
pop
repnz
mov
ss
mov
test
fdivl
popa
adc
in
sbb
mov
lock
cmp
cmp
push
jne
arpl
pop
mov
insb
bound
sub
xor
decl
mov
mov
cmpsb
xor
pop
push
jns
mov
jne
in
or
jae
pop
sahf
std
adc
iret
scas
sub
mov
xlat
pop
sub
fbstp
dec
jb
xorl
jle
movsl
push
push
jg
rcll
or
addr16
leave
dec
cmp
add
adc
xor
arpl
add
fcmovnu
xchg
push
shll
cwtl
or
in
shlb
dec
ror
mov
data16
cld
aas
jne
cmp
les
popa
add
fildll
loope
xchg
sub
daa
inc
fcoml
cmc
push
ret
xchg
ret
jl
mov
rcr
push
sti
push
rcr
add
imulb
pop
mov
adc
test
lcall
ljmp
leave
rcr
pop
call
or
sub
and
lret
bound
into
loopne
push
push
fs
mov
mov
jo
sub
out
ds
lods
enter
mov
jmp
icebp
inc
dec
add
ror
sar
pop
andl
dec
lods
ficoml
adc
inc
inc
stos
dec
scas
shr
cli
sbb
pop
jne
subb
jno
iret
shll
cmp
or
push
mov
fs
popa
pop
sub
add
js
sub
sarl
adc
filds
jne
mov
push
cld
test
aam
pop
cmp
test
dec
push
lcall
cmp
fsubp
dec
inc
add
push
ret
and
fs
inc
pusha
jge
loope
sahf
scas
and
lods
ja
dec
push
add
in
add
fwait
inc
call
lret
push
cs
popa
sbb
cmp
and
jne
fcomi
addr16
jp
cmpl
mov
sbb
mov
pop
pushf
out
sahf
jp
mov
mov
out
nop
push
cmp
in
scas
jae
pop
mov
sbb
dec
pop
into
in
sbbb
lods
lods
xchg
sub
push
jo
jb
xchg
or
pop
sub
fidivs
sub
jo
sti
jns
sbb
call
insl
les
ds
pop
repnz
sbb
xchg
push
loopne
xchg
daa
sub
fwait
scas
dec
aaa
xchg
popf
dec
popf
into
jle
adc
stc
inc
pop
lahf
mov
jae
pop
dec
xlat
cmp
cwtl
out
lods
into
mov
pop
jbe
icebp
aaa
lea
mov
aaa
mov
jae
stc
jnp
dec
push
cmp
mov
mov
fcmovnbe
dec
and
dec
lret
cmp
dec
pop
test
insl
arpl
inc
jnp
pop
push
fisttps
push
sbb
in
sti
or
mov
pop
xchg
insb
sbb
popf
leave
addb
clc
adc
xchg
subb
enter
outsl
xorb
pop
jae
in
imul
sub
aaa
mov
mov
mov
jne
mov
jge
out
addr16
outsb
sbb
loope
icebp
repz
jge
orb
daa
imul
push
sub
stos
insl
popa
jp
dec
fwait
in
dec
xchg
push
push
dec
dec
in
loope
out
test
pop
inc
fadd
icebp
xchg
mov
psrlq
jb
call
out
jmp
andb
movsb
call
aad
movsb
out
cmpsb
push
mov
out
mov
and
mov
jmp
iret
lock
andl
xor
xor
mov
mov
sbb
ja
sti
jae
call
lahf
mov
dec
jne
mov
adc
inc
mov
or
aam
mov
fwait
ja
cmpsl
mov
jl
adc
mov
popa
test
push
imul
push
call
pop
int
ja
and
inc
mov
rcl
loop
push
push
push
mov
cmp
mov
xlat
imul
jl
aad
push
movsb
insl
jns
lret
les
sub
imull
push
hlt
call
cld
int
and
and
inc
jge
cmc
or
clc
test
movsl
ljmp
sub
dec
outsl
add
sbbb
clc
test
jle
xor
xchg
dec
aas
and
mov
aaa
jne
ds
push
dec
jne
orl
fistl
cmp
inc
aam
dec
push
clc
es
fsubs
je
pop
cs
gs
in
int
xchg
push
pop
mov
cltd
mov
das
jae
pop
pop
adc
popa
mov
fists
jne
sbb
out
xchg
lea
out
cmp
mov
dec
sub
stos
fdivrs
xorl
in
xor
push
stos
test
addl
push
aas
add
hlt
mov
push
cmc
xchg
popa
test
add
sbb
push
fiadds
pop
jg
popa
mov
scas
adc
insb
jbe
xor
test
push
stc
dec
mov
mov
test
mov
cmp
movsl
mov
lea
mov
outsb
int3
lret
in
cwtl
stos
sub
nop
cmp
inc
fs
jg
js
add
fildl
imul
pop
mov
pop
imul
push
js
push
clc
xchg
rolb
or
jne
inc
lret
or
shrb
pop
imul
fstps
sbb
adc
pop
int
and
sub
xchg
mov
jae
pop
lcall
adc
dec
loop
shll
or
js
jbe
and
popl
popl
je
xlat
stos
mov
xchg
mov
sbb
je
fiadds
push
cld
inc
fwait
push
cmp
or
in
or
mov
out
arpl
mov
call
subl
in
sarl
jne
out
or
out
jae
jo
movsl
mov
xchg
es
sub
mov
mov
int
or
cmpsb
pop
out
and
mov
test
mov
xor
out
push
nop
push
xor
paddw
sahf
out
lret
lcall
sub
jp
add
leave
imul
shll
testl
or
test
push
mov
xor
mov
shrl
stos
xor
mov
cmpsl
jle
arpl
mov
push
repz
jecxz
insl
cmp
test
enter
sub
sahf
dec
push
movsb
sbb
add
pushf
dec
dec
adc
outsb
inc
jl
xchg
mov
jb
inc
and
insb
in
dec
push
out
daa
lds
cmpsb
cld
je
or
daa
adc
mov
or
rolb
insl
mov
stos
jb
lods
xor
inc
rclb
rorl
and
js
rcr
lea
dec
jle
mov
jp
fiadds
lock
xor
cli
out
or
adc
inc
into
jl
in
and
mov
testb
jae
scas
sub
inc
mov
dec
cmp
rcr
fwait
and
mov
cmp
push
pop
mov
in
mov
jp
xor
insb
and
adc
push
inc
mov
mov
xchg
movsb
pop
repnz
mov
sbb
int
aam
loop
xor
add
mov
xor
pop
and
cmp
and
adc
stc
mov
stos
or
mov
jl
dec
lret
popf
add
sub
lock
sub
push
xchg
push
mov
and
inc
testl
cmp
lahf
sar
and
cld
jl
jb
es
sub
fistl
pop
sbb
ret
mov
les
add
inc
or
sub
cmp
cld
fptan
jge
cmp
jo
out
jp
lea
jg
fsubrp
shr
dec
add
loopne
or
push
outsl
insb
lock
jae
push
dec
pop
fidivs
data16
push
and
addb
and
inc
push
jmp
rcrl
xchg
dec
sbb
inc
xchg
adc
das
cmpb
pusha
and
xor
and
hlt
xor
mov
jae
lret
xlat
aas
mov
or
icebp
cmp
mov
scas
sti
loop
sti
outsb
inc
jmp
inc
inc
cli
inc
aas
aas
rol
mov
cmp
lock
push
push
mov
int
fwait
es
fdiv
mov
into
sahf
cmp
popa
ficoml
mov
iret
std
orb
hlt
mov
call
subb
push
xchg
inc
sahf
sub
cmpl
inc
int3
pop
mov
pop
jae
sub
xchg
lcall
nop
cs
push
xor
jae
inc
mov
sub
mov
jns
cmc
pop
pop
mov
scas
test
jecxz
sbb
lock
repz
mov
stc
mov
movsl
je
dec
xchg
push
stos
and
aaa
push
mov
add
dec
sti
cmp
insb
xor
sahf
js
loopne
sbb
fcomps
pop
mov
pop
dec
inc
add
add
dec
ret
out
add
lods
cmc
and
mov
cmpsb
or
cli
mov
mov
inc
stos
rcrb
lret
aad
rcrl
sub
push
out
adcl
xchg
mov
les
les
imul
lods
mov
call
mov
mov
jmp
push
lea
xor
mov
sti
push
in
arpl
inc
cmp
adc
jle
scas
mov
jo
aad
packssdw
adc
inc
push
das
pop
jg
es
sub
popl
test
jb
sbb
test
jo
mov
jl
push
xor
adc
mov
adc
call
rclb
cli
push
add
jle
stos
xor
sbb
fldt
or
push
xor
mov
repz
inc
ret
mov
in
sub
push
cwtl
jbe
pop
sahf
xor
test
repnz
scas
lds
mov
jb
cmp
or
mov
mov
cmp
ret
jge
push
scas
cmp
xchg
arpl
push
adc
insl
ret
pop
out
jl
pop
rol
jno
bswap
lcall
pop
ljmp
inc
out
mov
je
in
jmp
cmp
inc
lods
js
inc
in
jle
cmp
aas
jecxz
cmp
aad
xor
ds
pop
and
popf
pop
pop
xor
cmp
popf
adc
mov
jmp
mov
sbb
xchg
aaa
mov
lret
jmp
mov
imul
test
sbb
ds
jbe
xchg
pop
lahf
mov
mov
inc
int
in
ficoms
std
lcall
add
data16
xor
inc
cmp
imul
nop
adc
jne
iret
shll
jecxz
cs
jb
loop
add
jge
xor
pop
cmp
nop
aas
xor
cmp
adc
aaa
xor
jnp
mov
pop
cmp
pop
loope
mov
pop
aaa
pop
xchg
mov
out
jns
mov
push
bound
shll
enter
insb
xor
sahf
hlt
adc
mov
cld
xchg
clc
push
es
daa
add
cmp
std
push
aam
cmpsl
push
push
pop
push
roll
adc
cmp
jecxz
add
add
data16
jae
xor
and
movsw
mov
roll
shrb
addr16
dec
mov
push
icebp
sahf
orl
push
jle
outsb
jno
add
adc
and
xor
ror
loope
icebp
sahf
orl
push
jle
outsb
jno
add
adc
and
xor
rorl
loope
icebp
push
orl
push
jle
outsb
jno
add
adc
and
xor
ror
loope
icebp
sahf
orl
sti
aam
outsb
push
outsb
mov
dec
ficomps
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
jnp
imul
loopne
lock
int3
inc
repz
lret
jo
add
xor
imul
loopne
lock
or
jmp
jmp
jo
insb
fwait
adc
shlb
loopne
lock
or
test
mov
mov
dec
faddl
mov
cltd
pop
mov
xchg
fisubrl
int3
cmp
adc
mov
stos
add
mov
pop
and
adc
jle
ret
jne
adc
add
popa
test
xchg
mov
in
push
adc
jecxz
inc
and
movsl
mov
xchg
enter
and
xchg
in
or
mov
xor
inc
add
xor
mov
adc
stos
jge
or
sbb
sti
nop
sti
mov
cmp
stos
adc
into
xchg
inc
mov
lock
les
add
add
add
add
inc
fwait
and
rcrb
dec
lock
cmp
loop
repz
ret
pusha
shlb
add
pop
pop
les
xchg
loopne,pt
lock
in
stc
push
out
in
cmp
add
inc
into
jne
pop
out
adc
or
push
in
sub
sbb
pop
aam
or
adc
in
jbe
pop
push
test
cwtl
aaa
xchg
and
sbb
jmp
jo
add
xor
imul
loopne
lock
or
jo
add
xor
inc
mov
push
hlt
dec
jg
das
into
repnz
adc
rcrl
in
pushf
int
xchg
imul
imul
xchg
popa
mov
jg
xchg
clc
mov
leave
mov
sahf
pop
jns
nop
aas
xchg
xor
fstpt
xor
pop
cmpsb
out
mulb
xchg
mov
push
inc
inc
das
call
cs
lret
movsl
push
ss
cmc
mov
int
lahf
push
lods
mov
push
mov
push
push
ds
outsl
std
fchs
cwtl
push
ja
xlat
push
mov
sub
nop
mov
jmp
xchg
inc
xchg
movsb
sub
mov
aas
push
loope
out
sub
sti
push
adc
sbb
mov
shrb
jge
icebp
lock
add
rcr
loop
xchg
mov
gs
ret
aas
jno
in
add
mov
jle
xor
push
inc
shlb
adc
mov
sbb
inc
mov
popa
daa
out
add
cwtl
push
jae
adc
scas
and
leave
jae
fisttpll
enter
inc
sti
xchg
mov
and
loopne
and
push
aam
push
mov
jno
data16
jo
shl
pop
mov
cmp
push
js
mov
hlt
pop
fmull
adc
loop
pusha
mov
pop
bswap
pop
xchg
cs
into
add
cmp
and
les
mov
inc
imul
xchg
movsb
jg
sub
xchg
or
inc
push
dec
outsb
mov
add
jnp
push
xchg
xchg
jp
jno
xor
cmpsl
out
cmp
jle
fimull
imul
out
pusha
add
popa
bswap
mov
push
insl
in
ret
jbe
cmp
gs
mov
jmp
lahf
je
je
or
pop
sub
ret
cmp
pusha
ljmp
sub
jb
sbb
or
mov
dec
jmp
push
inc
lds
test
xor
shrl
cld
push
sbb
data16
call
mov
dec
adc
push
or
bswap
loope
push
sbb
dec
ret
add
inc
sub
rcll
lds
xchg
pop
daa
outsl
mov
xchg
in
sub
mov
and
xchg
jns
iret
sbb
mov
jecxz
sub
lret
ficoml
and
mov
jmp
sub
or
or
lock
sub
pop
or
sarl
mov
in
loope
and
lret
out
sarl
rcrl
push
jg
or
add
jae
pop
ret
sahf
dec
xchg
mov
movsb
outsl
jl
dec
sbb
push
sbb
jg
or
out
iret
inc
test
pop
pop
sbb
push
call
inc
jecxz
sbb
fiaddl
mov
mov
lcall
out
ret
fmull
jge
dec
dec
xchg
cmpsb
xchg
jae
lret
jle
leave
xlat
xorl
jno
push
mov
mov
js
jmp
ret
adc
nop
lret
sbb
filds
push
insl
pop
push
mov
mov
hlt
or
pop
imul
jge
inc
mov
jmp
shlb
cmp
fnstsw
fimuls
std
pop
out
popa
sub
es
arpl
sub
sub
outsb
movsb
inc
push
outsb
and
and
hlt
out
cmp
sbb
cltd
add
jne
leave
imul
lahf
mov
xor
and
out
fwait
mov
mov
mov
pop
sbb
andl
jae
jle
addb
cli
hlt
adc
mov
out
cs
add
popa
mov
dec
scas
pop
lea
adc
in
lods
out
stos
xchg
pop
or
inc
cwtl
and
pop
and
and
adc
fs
sub
pop
mov
imul
addl
divl
pop
mov
add
or
lds
out
sbb
adc
xchg
inc
add
insl
pop
hlt
dec
lret
cmpsl
mov
adc
insl
and
out
push
clc
shll
lea
push
mov
movsb
outsl
aad
mov
cmp
fistpl
push
jle
mov
icebp
mov
stc
mov
stos
out
in
xchg
inc
sub
or
jecxz
lods
inc
xor
and
lea
jnp
push
sbb
jbe
roll
xchg
add
pop
int
das
jns
fs
mov
fistl
mov
mov
pushf
shll
add
sti
insl
int
sbb
pop
jbe
mov
mov
aad
cltd
outsb
outsb
and
jne
cmp
outsl
jne
add
sbb
jge
xor
out
cltd
lret
fisubl
push
cmp
repnz
and
arpl
cmp
aaa
and
mov
xchg
and
cld
pop
iret
push
call
mov
aas
jge
mov
adc
adc
cmpsb
jl
nop
push
icebp
inc
lods
xchg
addb
paddsb
inc
sahf
cs
lahf
push
das
lret
xlat
jne
cs
aas
test
js
xor
sahf
pop
mov
mov
pop
and
sahf
inc
rolb
lock
dec
lcall
ljmp
add
mov
das
cmp
cmp
int
sahf
sti
movsb
stc
rolb
jecxz
jmp
sub
and
or
movsl
in
outsl
insb
js
push
rcl
call
loope
jl
jbe
sbbl
loopne
dec
lcall
inc
pushl
add
mov
insb
sbb
mov
mov
imul
add
add
pop
fcompl
rcr
loopne
cmp
aas
mov
rorl
iret
arpl
leave
or
out
mov
cld
aad
out
push
add
pop
mov
cmp
xchg
fsub
push
jmp
cmp
pop
or
popf
das
xor
add
sti
lret
jmp
mov
out
sti
stc
add
sti
cmpsl
cld
xchg
imul
ss
aam
aam
push
sub
rcr
bound
pop
popa
shl
into
sbb
mov
sbb
clc
push
mov
aam
and
outsb
inc
fldt
ja
cmp
and
inc
and
push
ret
mov
test
xchg
push
sbb
xlat
cmp
cmp
mov
pop
jl
xchg
hlt
shll
in
std
cmc
pushf
sub
push
leave
clc
in
pop
bound
cmp
xor
mov
fwait
lods
dec
mov
inc
mov
idivl
mov
ja
out
cmp
and
jg
out
cmp
xor
cmp
sbb
loopne
and
ljmp
jo
cmp
sub
jne
add
and
cmp
test
xchg
bound
sub
in
fs
pop
mov
test
mov
fucomi
fsubrl
imull
aad
popf
or
bound
leave
leave
jecxz
mov
add
out
fstl
ss
mov
jp
jbe
into
ds
or
pop
mov
mov
xor
fdiv
xchg
adc
xchg
bound
test
test
lods
mov
jmp
sbb
add
fimuls
cmp
cmc
mov
jp
cli
push
hlt
sub
mov
sbb
icebp
push
enter
adc
fdivs
pop
sub
popf
jno
mov
outsl
jl
je
pop
jne
sub
in
cmp
data16
cltd
cltd
sbb
icebp
das
loope
das
stc
mov
enter
mov
pop
loop
fisubrs
ret
push
rclb
pushf
mov
jge
std
mov
add
scas
push
lds
xchg
pop
pushf
inc
out
hlt
js
bound
adc
js
sbb
mov
and
fwait
scas
in
adc
ja
and
lock
ljmp
add
or
pop
and
mov
mov
xchg
loop
xor
hlt
popa
xchg
pushf
std
es
mov
bound
mov
dec
dec
and
in
rclb
sbbb
ss
jmp
push
inc
adc
xor
xorl
mov
jmp
mov
mov
xchg
and
cmp
stos
jp
pop
xchg
adc
jae
sahf
xchg
out
cmpsl
pop
mov
pop
call
pop
lds
sarl
add
push
push
cmc
fbld
add
adc
rol
xchg
pop
add
mov
flds
mov
sub
jnp
or
cmp
pop
push
xor
aaa
bnd
add
push
dec
cwtl
fxch
subl
jmp
xchg
cmp
lcall
push
mov
sub
fs
pusha
jbe
xchg
outsb
loope
push
xchg
data16
pusha
pop
out
push
dec
push
jmp
mov
clc
sti
pop
mov
insl
cmpsl
inc
sub
icebp
mov
pop
inc
loope
and
inc
ret
cmp
adc
data16
psubusb
push
jb
pusha
test
int
repz
add
mov
imul
cmp
inc
enter
jo
add
into
loope
xchg
cmp
xchg
inc
hlt
cmp
ss
push
pop
mov
sahf
lods
mov
scas
push
ss
or
ja
out
mov
sub
ret
push
add
xor
mulb
decb
adcb
jecxz
push
xchg
ret
add
sbb
push
cmc
movsb
cmp
addr16
pop
xchg
arpl
xlat
jecxz
xchg
rcrb
frstpm(287
push
or
inc
mov
push
adc
push
rolb
in
int
jno
ret
lcall
push
insb
dec
jle
hlt
lds
sbb
sbb
jg
or
mov
cmp
call
fs
insl
add
loop
cmp
in
lret
jle
lahf
xor
xor
cmp
gs
adc
mov
dec
seto
jle
std
xor
fiaddl
repnz
lret
ret
loopne
inc
es
sarb
in
adc
push
sub
inc
movsl
out
dec
outsw
inc
sbb
sbb
pop
dec
and
aam
xchg
icebp
cmpsb
adc
dec
or
mov
sbb
sbb
adc
lcall
add
ds
rcrl
pop
dec
scas
das
sti
fbld
fsubs
jno
mov
push
nop
popa
cmp
pop
repnz
push
push
and
push
inc
loop
enter
cs
rorl
lahf
cmp
out
mov
rolb
ret
push
repnz
add
ficomps
jnp
xchg
add
popf
loop
add
or
push
addr16
pop
push
cmp
shl
hlt
movsl
add
xchg
xchg
enter
inc
jle
cmp
mov
push
dec
rolb
jno
fistpl
negb
mov
je
mov
add
mov
sbb
sub
xor
lret
pop
pushf
cmp
mov
test
sub
pushf
aas
mov
add
into
fcmovne
dec
out
xchg
stc
mov
pop
lret
mov
insl
in
pop
stos
sub
and
lea
jne
adc
inc
xor
dec
andl
test
insb
cmp
and
jge
jbe
cli
jae
insl
xor
cmp
orl
and
add
jp
daa
pop
scas
outsl
pusha
push
cmp
cmp
js
jno
push
data16
ss
cltd
jp
xor
fidivs
cwtl
rolb
repnz
sub
sbb
popa
outsl
dec
in
xor
adc
imul
lea
outsb
sub
jne
dec
mov
loope
jne
add
or
loopne
jmp
inc
dec
push
into
push
xor
adcl
cmp
mov
scas
push
mov
sbb
shll
mov
push
push
out
sbb
xchg
stc
jne
sbb
je
repz
mov
mov
mov
roll
insl
cs
push
mov
sub
mov
add
jl
pop
shll
inc
cmp
bound
mov
and
pop
pop
jg
out
fstpt
mov
dec
int3
stos
push
xlat
inc
or
push
mov
jae
or
stos
imul
xchg
pop
rclb
addr16
ret
shll
sub
jo
dec
or
jne
xlat
xor
call
dec
mov
jmp
filds
mov
lret
xchg
xchg
iret
movsb
mov
pop
cmp
push
je
jecxz
or
insl
lahf
inc
inc
mov
mov
xchg
sub
leave
sbb
sarl
and
mov
out
mov
cmp
cmpsb
hlt
lret
mov
pop
lahf
and
mov
cmp
addr16
sbb
jmp
xor
cmpsl
push
aam
mov
lods
out
and
or
into
pop
or
mov
push
loop
push
jno
fldl
inc
mov
cmp
test
out
int
push
sti
cmc
pop
sub
imull
xchg
sbb
shr
dec
and
mov
mov
fildll
bound
inc
push
xadd
sbb
jno
test
cwtl
mov
push
xchg
add
or
outsl
movsl
sahf
into
mov
jnp
xchg
outsl
outsb
jl
fcmovb
lret
add
arpl
scas
mov
leave
in
fdivp
pop
das
pop
inc
mov
jmp
or
test
lods
sub
sbbl
adc
pop
jo
nop
inc
dec
mov
pop
mov
mov
pop
xor
adc
cld
push
mov
aas
add
xor
xor
rcrb
push
adc
push
jp
in
subb
mov
mov
push
and
psubusb
adc
sbb
ret
sti
sub
sub
add
dec
sbb
ljmp
ljmp
scas
mov
gs
fnstenv
mov
pop
or
ret
ds
loopne
pop
inc
xor
leave
jg
mov
int
cmp
lcall
sahf
push
xchg
gs
in
sub
and
jp
inc
addr16
adc
rcl
inc
pop
or
rclb
sub
nop
ret
dec
mov
push
lcall
jbe
fsubr
jnp
sub
lret
je
jns
lods
push
push
pusha
testb
lahf
add
add
fsubs
daa
aam
enter
cmp
lea
sbb
inc
push
cltd
andb
push
aaa
mov
jmp
loope
fwait
lcall
out
ds
and
rorb
inc
cwtl
xor
pop
imul
inc
fst
jne
imul
jecxz
pop
dec
leave
jecxz
jne
and
add
out
testl
mov
out
mov
jl
xor
inc
mov
int3
lcall
sbbl
and
outsl
jo
xor
popf
ss
clc
stos
xchg
cltd
leave
lods
dec
adc
sub
movsb
cmp
lods
cmp
outsl
out
sub
pop
push
xchg
add
push
pop
and
dec
jbe
movsb
sub
push
mov
jo
pop
mov
roll
xor
push
decb
inc
scas
decl
jno
in
mov
mov
lds
or
movsb
mul
addr16
ja
orl
jg
ljmp
jno
cmpsb
rcl
jge
pop
std
or
mov
mov
test
sbb
cwtl
clc
jns
sub
push
xchg
lods
pop
xchg
cmp
cmp
int
lret
cmp
popf
in
lahf
arpl
out
push
popa
sahf
inc
sbb
in
mov
in
add
sub
fimuls
cmp
cmc
jae
bound
lea
dec
das
outsl
enter
cmp
out
iret
xchg
adc
cwtl
pop
mov
lret
negl
mov
gs
dec
lea
push
int
sbb
add
dec
mov
xorl
add
arpl
pushf
mov
lret
lock
cmpsb
or
jnp
sbb
daa
push
rorl
pushf
loop
pop
into
sub
add
test
push
mov
sbb
pop
pushf
xchg
inc
push
pop
cmp
adc
mov
push
mov
imul
sarb
aas
mov
sbb
mov
push
cmp
xlat
xor
add
icebp
cmp
daa
sbb
fistl
ret
or
push
mov
and
das
in
mov
addr16
push
stos
cmp
jbe
icebp
pop
outsb
adc
jmp
or
sub
cmpsl
inc
push
mov
jmp
push
gs
fildl
or
add
call
push
jg
ds
insb
pop
and
xor
pop
jb
pop
scas
repnz
add
call
jb
out
cltd
or
xchg
xor
aam
xor
loopne
cmp
jg
mov
xchg
arpl
mov
je
xchg
mov
push
and
jb
xor
movsb
mov
xchg
fwait
scas
pop
scas
repz
outsl
adc
push
xor
adc
mull
lcall
es
outsb
aad
adc
cld
cmpb
mov
les
push
and
scas
mov
enter
mov
data16
push
push
das
push
push
jb
mov
sti
mov
mov
sahf
inc
insb
sahf
sub
mov
lcall
mov
out
lret
imul
and
mov
lret
xchg
push
outsl
dec
mov
mov
jecxz
xchg
mov
jp
sbb
pop
cmp
jo
fsts
sub
add
subb
add
xchg
jno
mov
shrb
stos
mov
fcomi
pop
lret
sbb
add
jae
enter
out
insb
xchg
das
das
out
mov
or
addr16
imul
mov
cmpsl
cmc
ss
adc
sbb
dec
insl
movsl
sti
movsb
push
les
jnp
shlb
mov
iret
shlb
mov
insl
mov
jnp
sub
fcomip
and
xor
cmpb
aam
stos
ljmp
push
push
in
mov
mov
push
jle
cmp
cmp
cmp
in
xor
sub
test
in
outsb
cmp
insb
cmpsb
sub
sub
xor
imul
inc
cmp
push
das
push
jnp
test
lret
movb
insb
int
add
jns
sbb
dec
mov
xchg
addr16
aad
mov
cmp
mov
cld
adc
mov
aam
outsb
bound
cli
in
mov
lea
lods
dec
adc
loopne
mov
fwait
imul
xor
mov
insb
outsl
in
pop
push
ljmp
xchg
lock
pop
xor
cmp
pop
and
movsb
subl
pop
movsl
inc
daa
cmp
call
jp
test
fisttpll
push
out
and
cmp
fnstcw
mov
icebp
xor
stos
icebp
cmp
push
lret
jge
lret
push
int3
lret
fwait
outsb
addr16
cld
sbb
or
pop
repz
notl
fidivs
cltd
inc
ror
ja
mov
cltd
leave
sbb
mov
add
cmpsb
adc
dec
not
jg
clc
fsts
jnp
shr
sub
pop
shr
loopne
mov
call
xor
xor
and
popf
jnp
movsb
jg
jnp
jecxz
pop
push
xchg
cld
ret
rorb
inc
mov
adc
mov
inc
or
adc
addl
push
or
arpl
ja
lds
std
cmc
sbb
xchg
mov
add
ja
cmp
icebp
js
cld
out
jg,pt
adc
stos
cwtl
sbb
out
js
testl
sub
adcb
and
pop
push
or
shlb
iret
fiadds
dec
dec
clc
aaa
sbb
not
pop
push
ja
rclb
sti
popf
dec
mov
pop
orb
dec
mov
lcall
and
leave
push
std
rcll
fistpll
sub
cs
outsl
xchg
test
inc
sub
add
inc
mov
mov
in
sbb
test
mov
fdivl
xchg
cs
xor
les
rolb
cmpl
jle,pt
inc
sub
loopne
mov
add
aaa
jmp
dec
pop
adc
sub
lods
fwait
mov
and
xchg
mov
stc
inc
lock
popf
or
sti
jg
pop
push
cmovae
or
cltd
pop
iret
xlat
jle
jns
xchg
cwtl
pop
pop
cld
add
ret
stc
xchg
mov
dec
scas
push
xchg
jmp
sbb
mov
jno
out
dec
fisttpl
movsl
mov
jb
in
sbb
add
icebp
add
jg
rclb
dec
lock
or
jo
add
xor
imul
loopne
lock
or
jo
add
xor
imul
loopne
lock
or
jo
add
xor
imul
cmp
mov
jno
lret
pop
int3
mov
out
fbstp
mul
out
xlat
ffreep
enter
xchg
addr16
push
inc
inc
xor
pop
add
out
xlat
mov
cmpsl
xchg
xchg
test
push
push
inc
inc
xor
push
add
out
xlat
mov
cmpsl
xchg
xchg
test
and
jb
dec
push
gs
pop
xor
lods
xchg
mov
dec
push
cmpl
inc
ret
scas
lods
std
pop
inc
lds
mov
cmp
mov
movsl
pop
imul
mov
lret
inc
inc
push
push
or
mov
pop
xlat
fisubrl
mov
inc
xchg
sarb
call
ret
sbb
fnsave
test
lods
call
pop
gs
and
mov
push
cmp
dec
mov
mov
orb
je
insl
xor
test
xchg
movsl
fucomi
call
sbb
ds
ret
xor
xchg
xor
and
inc
das
inc
shll
jbe
rolb
pop
push
ss
out
xlat
mov
cmpsl
xchg
xchg
test
push
push
inc
inc
xor
pop
add
out
mov
lret
flds
xlat
add
aas
add
mov
fs
jo
jne
xor
in
xlat
test
shl
rolb
ss
sub
push
inc
dec
jl
outsl
push
xchg
mov
mov
cmpsl
xchg
xchg
test
push
push
inc
inc
xor
pop
add
out
xlat
mov
cmpsl
xchg
xchg
test
push
push
inc
inc
xor
pop
add
scas
dec
gs
sbb
jmp
mov
push
sub
sub
pop
orb
ret
inc
cwtl
xor
mov
xor
lods
addb
arpl
sbb
lods
sub
fcom
jno
xor
jo
mov
sar
jp
adc
fbstp
jl
inc
sbb
pop
or
inc
and
lret
sbb
test
jbe
xchg
mov
int3
insb
lods
ret
sbb
add
stc
cmpsl
test
jl
pop
mov
xor
dec
push
in
cmpsb
and
ljmp
mov
cwtl
data16
and
dec
js
ss
adc
cmpsb
pop
repz
adc
test
mov
aaa
test
ret
sub
adc
mov
xchg
mov
xorb
inc
scas
rclb
cmp
test
adc
xchg
push
movsl
and
sbb
jo
fs
mov
inc
push
test
imul
jg
lea
cmpb
cmp
sub
sub
cmp
cli
jne
leave
shrl
mov
cmpsb
jbe
cmpsb
fldcw
xor
or
mov
loope
adc
pop
test
xor
test
cmp
jmp
cmp
dec
mov
fwait
aas
xchg
jne
aaa
add
idivb
or
push
decl
orb
xchg
pop
scas
fimull
push
repz
mov
lock
push
loop
stos
dec
imul
push
push
cli
fwait
outsb
data16
gs
fisttps
or
nop
ret
push
pop
or
adc
sbb
outsb
jno
lods
mov
cmp
std
lods
js
idivl
and
xor
mov
mov
xchg
test
or
cmpsl
movsb
pop
adc
push
popa
outsl
inc
mov
stc
add
bound
mov
jne
mov
ret
jb
jne
and
and
fisttpl
push
pop
jae
mov
cmp
sub
test
std
xchg
inc
mov
lcall
leavew
or
sbb
inc
sbb
mov
std
adc
daa
test
das
int3
dec
bound
ja,pt
lret
ret
inc
test
mov
and
mov
mov
inc
pop
and
loopne
xor
aas
in
imul
xchg
stc
cmp
pop
ss
cmp
rcll
jb
int
rolb
pop
and
andl
sub
inc
in
pusha
mulb
enter
dec
hlt
ljmp
jecxz
pop
mov
adc
sahf
decb
inc
jns
mov
sti
sahf
adcb
shll
fcom
xor
xchg
aaa
adc
test
sahf
mov
movsl
sahf
in
lock
idivb
mov
pop
negl
mov
rcl
clc
js
jnp
xchg
mov
pushf
cli
xchg
test
int
mov
inc
inc
adc
les
lods
sbb
pop
sbb
or
mov
les
jecxz
outsl
jne
repz
jnp
ret
adc
push
sub
push
inc
js
data16
xchg
adc
in
mov
les
out
cwtl
mov
das
leave
ret
sbb
fildl
xchg
mov
repz
pop
push
and
divl
icebp
mov
or
fnstenv
push
bound
shrb
adc
or
ljmp
adc
lahf
push
idivb
sbbl
xor
cmc
xor
mov
addb
repz
pusha
jne
icebp
jnp
xor
data16
jnp
movsl
pop
add
sbb
push
pusha
inc
icebp
es
ss
cmp
adc
xrelease
inc
je
ja
inc
std
stos
mov
stos
bnd
inc
js
jb
popf
cmpsb
sub
xchg
push
jle
repnz
mov
mov
jge
mov
aaa
mov
mov
dec
fcompl
fsub
adc
add
dec
mov
and
out
sahf
sbb
xlat
lods
jg
shl
xchg
mov
mov
leave
adc
data16
add
pop
mov
idiv
cwtl
lock
mov
push
icebp
out
cwtl
mov
and
fistpl
sub
xchg
orl
test
xorl
pop
and
out
shr
xchg
mov
mov
pop
pop
out
lret
dec
mov
loop
pop
adc
out
and
rcr
ficoml
sub
ljmp
mov
cmpsb
lret
mov
pop
pop
sub
lcall
lea
call
out
pop
shl
dec
loope
mov
mov
push
jle
mov
sub
insb
lods
sub
test
inc
jo
pusha
sbb
test
sub
pop
sub
push
push
shr
mov
sbb
jle
stc
push
je
aas
xchg
sbbb
xor
addb
adc
mov
inc
xor
out
in
xor
xchg
fcmovu
imul
mov
mov
jp
pop
rcl
es
cmpsl
pop
xchg
stos
lret
jecxz
dec
cmp
cli
mov
xchg
cmpsl
add
iret
mov
scas
adc
out
imul
inc
mov
xor
rcr
dec
gs
xchg
iret
int
mov
out
test
add
lds
or
icebp
in
jnp
popa
notb
shlb
mov
js
cli
pop
rorl
aaa
cmp
dec
aas
insl
mov
add
sub
cmp
push
jmp
xchg
dec
and
aam
cmp
pop
add
mul
inc
xor
mov
stc
mov
pushf
mov
lret
mov
jns
out
jae
mov
push
jle
sbb
in
push
icebp
out
inc
sub
add
pushf
sbb
jmp
int3
enter
xchg
sub
fdivs
pop
pop
mov
clc
int
cmp
sbb
mov
pop
mov
pushf
addb
repnz
add
adc
shll
mov
xlat
int3
vcomiss
inc
pushl
loope
push
dec
lea
mov
hlt
jp
add
insl
inc
fistpl
out
pop
std
cmp
aaa
cmpsl
cltd
ja
xorb
into
sti
mov
push
or
arpl
cmc
fucompp
cmp
jmp
pop
adc
daa
cli
int
push
aad
fucomip
cmp
sarb
loop
pop
xor
mov
cmp
jne
fcmovnb
test
sbb
imul
mov
mov
stc
cwtl
jle
xor
jo
add
mov
push
mov
push
cmpsb
pop
ficoml
das
je
icebp
cwtl
adc
popa
outsl
xchg
daa
divl
nop
mov
add
sti
jno
jb
xchg
int3
int3
xchg
adc
stos
popa
jge
cmpsb
cmp
fwait
lahf
shrb
pop
pusha
cltd
push
add
test
shll
es
leave
xchg
xchg
mov
xchg
add
jmp
and
jmp
test
sbb
sti
outsb
dec
mov
cmp
outsb
pop
leave
adc
mov
mov
dec
sahf
lret
or
test
cld
jo
mov
and
inc
or
ljmp
or
or
test
iret
scas
addr16
fs
dec
loopne
insb
insl
imul
push
inc
enter
cmpsb
push
or
xchg
fidivrs
dec
testl
xchg
mov
dec
mov
pop
sub
jnp
addl
std
mov
mov
mov
xor
add
push
adc
cmc
jecxz
sbb
lret
and
repz
xchg
push
push
xor
jbe
insl
jae
push
movsb
leave
bound
dec
dec
mov
shlb
jno
lds
pop
mov
dec
xchg
jp
mov
add
stos
cli
in
sbb
jmp
cmc
scas
push
or
inc
pop
adc
test
xlat
inc
loope
rolb
cmp
out
and
cld
push
or
sbb
and
bound
jb
pop
add
cld
dec
xor
pop
std
rcrb
shl
pop
ljmp
mov
insl
mov
les
enter
cwtl
add
das
cwtl
mov
jnp
jecxz
or
test
shr
adcl
aas
addb
jp
fnstenv
ss
mov
test
inc
movsl
lret
dec
cld
cwtl
bound
outsl
sbb
fbstp
jg
fs
mov
imul
dec
push
stos
mov
adc
mov
cmp
je
insl
stc
stos
movsb
rol
cwtl
jne
enter
pop
mov
mov
cld
mov
negb
sbb
testb
inc
mov
push
jp
cmp
add
outsb
test
lods
add
mov
test
data16
xor
nop
sbb
sub
jae
mov
push
sarb
jl
popf
loop
inc
stos
in
arpl
das
pop
sub
or
pop
sbb
mov
mov
lcall
jmp
frndint
dec
pop
loope
push
shrl
movsb
sti
pushw
movsl
in
pop
out
pusha
lcall
mov
mov
sub
out
je
cltd
mov
cmc
loop
add
daa
shlb
or
stos
clc
mov
xchg
dec
xor
cmp
fs
xor
mov
bound
pop
cmp
dec
cmp
mov
jge
adc
xor
movsl
xor
int
fisttpll
jp
mov
xchg
stos
leave
movsl
xchg
pop
lds
jmp
icebp
clc
rcr
imul
test
js
or
mov
out
call
mov
je
push
jnp
imul
adc
jns
iret
gs
pop
call
rolb
xchg
lahf
fsts
outsl
jnp
pop
outsb
sbb
pop
add
call
packsswb
cmp
fldcw
pop
mov
aas
jns
dec
orl
call
and
jp
xchg
test
loop
lahf
fstp
sub
add
and
pop
pop
fsub
sbb
mov
out
stos
pop
pop
push
or
cmpl
orb
xchg
divb
dec
insl
sub
fldl
icebp
out
jp
jmp
adc
push
bound
in
xor
xor
push
sub
and
arpl
push
add
add
mov
jae
mov
fwait
pop
jp
xchg
lahf
jns
ret
and
stos
out
mov
jecxz
fcompl
pop
aas
out
out
mov
adc
xorb
inc
lcall
adc
mov
mov
movsl
xchg
fldenv
lret
in
test
fwait
mov
jl
or
mov
pop
addb
cli
outsl
int3
pushf
push
aas
cmc
lahf
mov
or
insl
lea
insb
aaa
movsb
sub
nop
adc
jl
or
add
gs
inc
pushf
ret
pushf
pop
aas
sbb
xchg
and
jns
fwait
ljmp
sub
dec
test
test
icebp
xor
push
test
mov
dec
mov
cmp
in
fdecstp
fxch
test
aaa
and
xchg
repnz
push
push
into
pop
dec
jle
jle
lods
iret
lea
in
in
aas
sbb
cmpb
or
jne
stos
inc
mov
aas
pop
inc
sbb
lods
xor
gs
pop
push
outsl
sbb
jno
jmp
lods
jp
jge
aas
jns
pushf
sbb
pop
mov
les
add
fidivrs
pop
shl
sbb
sbbl
cmpsl
or
xchg
outsl
in
movsb
mov
fisubrl
mov
bound
loope
call
xor
mov
pop
mov
cmp
push
push
out
xchg
test
jno
xchg
dec
push
mov
pop
mov
push
movsl
xor
pop
sbb
jae
mov
in
sbb
dec
adc
sbb
cltd
pop
jecxz
lods
imul
ljmp
out
add
cmp
fstpt
sbb
pop
add
test
pusha
adc
das
xor
fsubrl
mov
mov
rorb
rolb
or
cmpsl
outsl
dec
je
adc
pop
hlt
mov
cltd
lea
push
popa
jl
daa
push
jne
sbb
mov
mov
mov
mov
dec
push
jg
jno
lret
movsl
jno
sbb
mov
and
out
lret
out
inc
mov
or
in
mov
fisttpl
push
push
fdiv
push
pop
mov
test
iret
mov
push
mov
mov
cmp
mov
push
les
in
orl
jnp
sbb
pop
lds
cld
sahf
outsl
jnp
inc
push
mov
sbb
ficoms
push
jle
add
add
popa
ja
stos
movsl
std
sbb
jb
movsb
fnstsw
xchg
cmc
call
les
mov
mov
sar
nop
fsts
das
push
mov
dec
xchg
pop
jl
sbb
iret
inc
xchg
or
pop
xchg
cmc
andb
jbe
scas
xor
out
movsb
idivl
sbb
addb
mov
jae
mov
xchg
lds
adc
aaa
or
mov
pop
repz
xchg
dec
ficompl
xchg
lods
loopne
lcall
cld
sahf
sub
cltd
clc
cltd
in
push
test
mov
cld
mov
fldt
cld
push
pop
into
repnz
mov
dec
in
mov
jnp
rorl
clc
popf
xorb
and
xchg
fstl
cmc
dec
cmpsl
outsl
sub
inc
adc
lea
insl
mov
pusha
test
loope
pop
int3
jbe
cli
pop
dec
adc
adc
stos
mov
je
jb
movsl
xor
daa
out
popf
jns
xchg
xor
rcrl
add
fstpt
popa
shll
scas
inc
cltd
adc
adc
pop
out
ror
sub
add
mov
js
cmp
or
sub
movsb
popa
mov
mov
rcll
adc
push
pushf
imul
jo
inc
mov
test
out
xchg
mov
imul
cmp
loopne
loop
icebp
pop
xor
cmp
iret
xor
inc
xchg
test
cmp
push
push
push
push
dec
icebp
loope
and
sub
aaa
fs
mov
pop
push
les
decl
stos
mov
sbb
daa
gs
scas
in
cmpsl
jnp
mov
insl
jbe
xlat
pushf
sbb
push
lds
jge
popf
xlat
xlat
leave
pop
push
push
inc
xlat
stc
pushf
cmp
ja
daa
imul
inc
lods
cmp
pop
dec
stos
inc
and
movsl
out
jle
bound
imul
dec
loope
into
sub
out
jb
push
sub
lds
mov
mov
adc
xlat
lock
pop
imul
es
shll
jle
jnp
cmc
out
jmp
push
fistpl
sbb
and
mov
jbe
or
ret
mov
jmp
subl
pop
cmp
lds
aam
push
push
negb
mov
nop
cwtl
jae
addr16
lock
push
shrl
jo
pop
dec
jp
movsb
pop
pushf
xchg
cwtl
xchg
mov
in
mov
push
in
dec
jbe
movsb
adc
xor
imul
popa
iret
mov
fwait
lock
add
and
mov
and
push
js
pop
jmp
jle
aad
subl
rcl
icebp
imul
add
mov
xchg
fcoml
mov
in
adc
scas
arpl
add
rolb
test
lahf
je
out
pushf
or
repz
push
adc
dec
adc
pop
mov
inc
jno
xor
sbb
inc
in
call
sub
add
mov
xor
mov
jnp
clc
outsl
jo
loop
push
add
or
cli
and
xchg
mov
sbb
dec
adc
sub
js
pop
stc
cmp
outsb
sub
xor
lcall
pop
lahf
lock
sub
jns
lret
mov
sbb
fisubrl
dec
pushl
and
shlb
sub
cmc
lods
popf
fsub
aas
xchg
movsl
repnz
leave
and
or
jl
mov
fstpl
mov
xor
mov
or
inc
jae
jne
mov
or
scas
cmpsl
ret
xchg
std
lcall
jno
mov
sar
out
jg
stos
mov
xchg
push
cmp
cmpsl
outsl
adc
add
jp
add
mov
clc
cmp
gs
cmpsl
int
into
aaa
pusha
push
cmc
mov
or
jne
mov
pop
divb
hlt
lahf
jp
cmp
pop
jb
rcrb
cltd
jmp
sbb
sti
mov
int
movsl
jge
xchg
dec
pop
mov
adc
lret
insl
pop
push
add
imul
sub
adc
jg
repz
std
mov
adc
add
push
push
imul
les
mov
push
aaa
iret
inc
dec
jp
sub
xor
xchg
cld
cmp
subb
fwait
pop
in
frstor
addb
pop
scas
loopne
jne
pop
shll
xor
sub
xchg
push
jne
in
push
imul
push
pusha
rol
popa
ja
mov
jmp
add
mov
aam
cmc
aas
ret
in
lret
jmp
pop
and
jp
mov
mov
pop
hlt
pop
cwtl
scas
jecxz
stc
push
add
cmp
pusha
adc
int3
scas
dec
mov
and
incb
inc
cmp
mov
pusha
rclb
inc
xor
repz
push
enter
xor
mov
jno
repnz
add
push
shr
mov
aad
add
cli
xchg
or
test
arpl
test
jg
xchg
call
jne
mov
aas
lods
pop
shrb
in
sbb
xchg
dec
les
xchg
out
jp
xor
adc
stos
rcl
sub
or
test
cmp
fcompl
cmpsl
sbb
adc
jmp
xor
pop
rcrb
int
pop
dec
xchg
lea
lcall
cmp
into
lret
inc
push
ret
sbb
and
mov
int3
mov
es
in
sqrtps
aaa
sub
lods
rcrb
cmpsb
mov
clc
mov
xor
repz
jb
ret
nop
mov
xchg
pop
fdivs
push
aad
sbb
aaa
loopne
js
cli
shrb
jp
pop
sbb
mov
stos
sahf
iret
adc
std
and
icebp
pusha
imul
stos
inc
aas
dec
ss
push
pop
push
fdivrs
sbb
jo
clc
xchg
add
and
insb
jecxz
push
data16
push
mov
clc
scas
cmp
push
scas
inc
inc
orb
cmp
pop
pop
lret
pushf
mov
repnz
rcrl
mov
cmp
loopne
dec
cltd
rep
fcomip
add
and
out
mov
inc
xchg
mov
insb
cwtl
js
and
pop
pushf
stc
rolb
adc
fisttpll
jno
lods
in
xchg
mov
mov
ljmp
sahf
inc
mov
mov
sbb
in
xchg
and
in
bound
ficomps
pop
fimull
loope
in
and
xchg
out
insb
ret
jns
pop
or
cwtl
ljmp
out
cmp
fdivs
lods
adc
testl
inc
ret
xchg
pop
stos
mov
int3
scas
jmp
int
addr16
aas
lds
sub
inc
dec
idivl
out
xchg
inc
dec
popf
jno
test
inc
xlat
mov
aaa
xchg
inc
mov
pusha
shll
imul
xchg
fadds
jno
pushf
pop
ja
ss
ljmp
inc
xchg
mov
or
push
or
adc
cmp
cwtl
mov
sub
adc
dec
iret
and
std
into
aas
cmp
stos
imulb
hlt
out
cmp
add
xor
and
and
add
push
xor
adc
lock
jb
clc
adc
mov
mov
pop
outsb
jnp
int
insl
clc
or
sub
inc
pop
and
cmp
test
js
cmp
push
scas
fimull
out
mov
icebp
cld
pop
mov
ret
xor
cmc
shlb
mov
xor
adc
sbb
enter
cmp
dec
leave
sbb
ja
adc
mov
cwtl
out
ja
sar
push
test
insl
mov
cmp
enter
jnp
aam
in
dec
add
pop
in
xchg
xor
loopne
lods
add
fcoml
clc
mov
or
xchg
pop
mov
in
jb
fmuls
mov
jno
fnstsw
mov
jp
inc
mov
lahf
rol
or
out
add
sbb
std
xchg
call
or
adc
in
pop
in
inc
push
push
ret
pusha
or
sbb
push
inc
adc
outsl
pop
cltd
out
jecxz
jo
or
addb
mov
movsl
cmpsl
xchg
xchg
test
push
push
inc
inc
xor
pop
add
out
xlat
mov
cmpsl
xchg
xchg
test
push
push
inc
inc
xor
pop
add
addr16
mov
daa
xchg
xchg
test
push
push
inc
inc
xor
pop
add
out
xlat
mov
cmpsl
adc
ja
int
push
inc
xor
lods
fsubr
call
fistpl
push
mov
cmp
pop
fsubrs
jnp
or
cmp
ljmp
sbb
enter
call
sbb
lret
dec
fistpl
push
fwait
sbb
negb
or
jb
or
push
mov
cmpsl
or
xchg
add
mov
fcmovne
aam
lea
scas
pop
popl
and
sbb
lock
out
and
xor
jne
mov
testb
and
fimull
pop
adc
dec
or
es
mov
stos
test
jle
or
fistpl
imul
or
mov
int
push
xchg
pop
jmp
dec
enter
cltd
ss
movsb
mov
or
outsb
and
jnp
pop
inc
jae
scas
test
imul
sbb
jge
mov
leave
push
in
idiv
jg
sbb
cmp
jmp
sti
js
or
cmp
pop
fsubrs
jnp
or
cmp
mov
cs
enter
in
dec
fimuls
movsb
jmp
xchg
jg
push
loope
sub
xchg
or
das
out
insl
pushl
stos
inc
ret
cmp
lea
mov
mov
push
mov
sbb
or
fs
sbb
enter
call
sbb
lret
dec
fistpl
push
fwait
sbb
enter
call
sbb
lret
dec
fimuls
lcall
fnstcw
inc
pop
roll
sbb
mov
mov
xor
stos
sbbl
or
mov
movsb
int3
hlt
dec
push
jge
jno
xor
push
test
scas
fs
mov
add
add
and
mov
cmpsb
mov
mov
daa
add
jne
les
lcall
pop
cmc
pop
stos
add
shlb
mov
test
mov
lret
add
sbbb
pop
repz
ds
jno
outsb
sbb
into
sub
popa
rorb
mov
lods
jmp
push
add
cld
aas
sub
int3
into
cmc
std
push
in
cmp
movsb
sar
mov
sub
xchg
bound
les
rcrb
xchg
xor
in
sbb
fistps
mov
jle
mov
hlt
scas
xchg
jge
push
imul
inc
loop
or
je
enter
les
inc
inc
out
enter
and
jo
add
cld
jno
mov
xlat
push
pop
fmul
in
fwait
cmp
add
adc
pushf
mov
rclb
mov
mov
push
out
dec
in
es
call
xlat
pop
adc
rclb
repz
mov
inc
lds
or
andb
sub
jge
mov
jge
mov
push
mov
and
mov
xor
xchg
fildl
cmp
xchg
pop
cltd
xchg
jo
test
xchg
das
jge
shlb
out
scas
loopne
xchg
dec
movsb
mov
pop
dec
ret
jmp
cltd
jno
inc
cmpb
sbb
lret
lret
fidivs
loope
jbe
xor
scas
lea
sbb
xchg
out
inc
inc
outsb
add
mov
xchg
inc
imul
sbb
push
mov
mov
xor
push
insb
jg
int
mov
and
sub
inc
aaa
mov
push
movsb
sbb
mov
leave
or
pop
or
int3
pop
add
movsb
inc
add
jp
mov
pop
les
repnz
pusha
test
sbb
inc
adc
push
mov
in
popa
fildll
push
subb
sub
and
scas
xchg
or
sbb
movsb
fs
clc
push
mov
popf
lret
les
mov
xchg
shll
rolb
add
roll
inc
sbb
and
imul
sarl
pop
inc
leave
pop
test
mov
sbbl
out
and
pop
mov
pop
fmuls
icebp
cmp
jge
pop
lea
jae
pop
mov
push
pushf
test
pop
add
shrb
mov
jge
push
push
stos
fsts
inc
imul
test
push
or
or
mov
lcall
jnp
scas
add
jne
repnz
xchg
xchg
jg
xchg
adc
and
aam
add
fwait
add
or
andb
sbb
push
leave
xchg
fcomps
cld
bound
xchg
sub
sub
mov
push
nop
scas
mov
xchg
xor
mov
xor
lahf
xchg
test
cmp
xor
push
mov
fstps
hlt
jae
sub
sub
xor
lret
in
ja
icebp
aad
cmpl
jge
mov
shlb
mov
dec
ret
jb
cmp
cmp
add
adc
sbb
stc
sub
in
shrb
into
jne
leave
pop
inc
dec
jle
lcall
rcl
insl
jl
fildl
dec
int
push
pop
out
data16
jbe
repnz
daa
arpl
push
sbb
mov
lds
repnz
xor
aam
fistl
out
sub
or
sub
rol
or
cmpsl
jns
pusha
mov
into
pop
fnstcw
xor
push
mov
in
push
fwait
mov
cmpsl
imul
mov
add
jl
jg
sub
mov
mov
pop
push
mov
rclb
movsl
int
out
add
or
sub
xchg
or
jp
pminsw
cld
mov
pop
sub
xor
loopne
outsl
arpl
xchg
andl
nop
in
outsl
lock
add
fsubl
pop
inc
mov
jp
sbb
xchg
cli
sti
sbb
jmp
push
mov
sub
subb
add
pop
xor
push
sbb
xchg
iret
and
das
hlt
rdpmc
in
fistpl
es
cmp
les
and
icebp
mov
jns
adc
cmpsb
xchg
add
xor
hlt
mov
jle
mov
xchg
aas
cmpl
stos
pop
jnp
les
add
dec
ret
pop
pop
add
jae
inc
jmp
ret
fwait
or
not
fisttps
jp
lods
js
push
jge
cmpsb
dec
or
add
sahf
mov
xchg
in
cmp
jg
roll
cmpsl
or
and
test
insb
dec
sbb
test
pop
mov
adc
lcall
in
or
stos
test
aad
cmp
cwtl
pushf
leave
fidivrl
std
loopne
push
mov
mov
pop
cmpsb
in
adc
dec
aad
and
nop
push
or
sub
adc
xlat
cmpb
xor
jmp
xchg
lret
in
sub
xchg
xor
rorb
out
inc
jecxz
and
mov
add
fsub
aad
lea
xchg
mov
add
push
push
js
inc
popa
out
aas
insb
jg
pop
mov
popa
popf
pop
jmp
stc
fistps
adc
mov
mov
out
adc
push
mov
jp
gs
dec
hlt
mov
xchg
push
adc
fwait
call
sti
out
jg
shlb
ds
lcall
test
mov
or
rcll
mov
push
cmpsl
sbbb
out
add
stos
cmpb
sub
jecxz
icebp
xchg
stos
pusha
mov
mov
out
sub
mov
cmpsl
mov
add
mov
mov
dec
fistl
push
sbb
imul
inc
xor
bound
xchg
mov
sbb
add
and
mov
fwait
stos
es
mov
sub
loope
popf
xchg
test
je
jae
mov
addb
das
out
jno
sbb
push
outsl
jae
pop
ret
push
out
mov
and
negb
lahf
scas
cli
xor
cmpsb
dec
push
dec
push
jns
dec
scas
push
dec
push
aaa
cmp
ja
shrl
push
adc
xor
dec
ret
pop
popa
bound
call
mov
jge
or
out
add
inc
jno
flds
hlt
les
negb
inc
pusha
imul
inc
repz
into
push
or
jl
lret
sub
scas
dec
mov
aaa
shl
gs
fdivrs
xor
xchg
or
push
add
insl
jb
xchg
mov
dec
mov
mov
loopne
int
lock
cmp
in
jmp
in
rorl
lret
or
or
mov
data16
add
insb
cmp
push
pushf
and
inc
lret
lea
imul
shrb
xchg
shll
push
or
sbb
test
popa
dec
addb
jl
fwait
addr16
sbb
das
sbb
sbb
cs
jle
xchg
dec
adc
je
fs
leave
pop
lock
call
xchg
jp
lret
cmpsl
fwait
leave
outsl
lret
sahf
inc
xchg
sbb
pop
adc
clc
ss
inc
lcall
mov
jae
and
scas
pusha
loop
cmp
mov
out
adc
outsl
fadd
mov
enter
sbb
lods
inc
and
adc
push
ja
movsb
push
data16
nop
mov
inc
xorb
insl
xchg
or
or
sbb
push
and
shr
jb
dec
das
jb
push
add
ficoml
xchg
lds
add
mov
and
push
mov
xchg
push
push
repz
sarb
mov
adc
mov
xchg
inc
out
and
lahf
pop
inc
jae
sbb
bound
stos
cld
jge
jg
pop
test
fimuls
jl
add
insl
ja
test
pop
in
incl
adc
fnstcw
mov
in
xlat
imul
ss
add
mov
adc
push
pusha
rcll
cmp
and
fsub
pop
in
cmp
jp
inc
or
mov
adcb
insl
sub
cwtl
ss
addr16
xor
mov
dec
mov
mov
ljmp
cmp
outsb
adc
int
mov
out
push
outsl
daa
push
test
jp
pop
xchg
and
push
mov
je
arpl
jns
xchg
addl
add
sarl
lock
and
xchg
push
lods
mov
mov
sbb
aam
mov
cmp
pop
in
sbb
adc
pop
imul
and
dec
mov
pushf
sbb
pop
push
cmp
je
shrb
pop
lods
push
sbb
pop
pop
mov
testb
mulb
and
push
push
loope
jno
sbb
cmp
mov
push
iret
mov
sub
inc
testl
out
fisubs
push
lods
ror
pop
pop
dec
mov
mov
mov
cmc
stos
fdivl
push
or
je
mov
dec
cmp
out
mov
pop
shl
popa
sub
test
pop
les
push
xchg
repnz
push
mov
mov
sub
addr16
mov
bound
pop
ds
push
push
inc
outsb
add
jmp
push
mov
pop
inc
lret
and
and
add
movsb
cmp
jp
popf
rorl
test
insb
minps
lock
in
rorl
mov
sub
xchg
pop
xor
inc
mov
pop
or
and
cmp
xchg
addb
in
lahf
xchg
aam
cmp
fwait
cld
scas
mov
xor
cld
pop
jge
push
pop
ss
fldenv
mov
adc
cld
dec
popa
jecxz
xlat
sbb
adc
nop
mov
aas
pop
andb
adc
cmpsb
add
mov
arpl
popf
mov
add
stos
push
jns
je
insb
fyl2x
shrl
and
mov
popa
jns
push
jmp
dec
inc
inc
dec
imul
or
test
xor
and
ljmp
push
shlb
mov
push
lcall
mov
xchg
lret
mov
lods
mov
fwait
test
fldcw
xor
pop
daa
cmp
jl
cmc
nop
pop
inc
adc
test
daa
popa
loope
enter
mov
gs
aad
jne
mov
test
and
shrb
sub
ds
and
lods
pushf
rorb
mov
sub
or
jnp
adc
jge
xchg
aam
jb
inc
jecxz
popf
dec
fldln2
inc
mov
mov
mov
add
pop
test
enter
in
lock
and
sbb
ret
pusha
xchg
scas
cmp
sti
dec
xchg
into
fildll
dec
in
int
mov
adc
imul
cmp
mov
add
insl
repnz
in
movsl
imul
lock
and
xor
wrmsr
cmp
add
mov
add
sbb
pop
cltd
rolb
nop
pop
out
ret
in
stc
clc
dec
imul
sub
cmpsl
in
hlt
lret
fwait
push
out
test
pop
jl
mov
scas
mov
cmp
lcall
enter
dec
push
outsb
or
sub
inc
repnz
xchg
push
adc
leave
jmp
std
xchg
adc
sub
inc
lahf
cltd
mov
idivl
jmp
sbb
inc
fcoml
xchg
insl
add
pop
clc
addr16
in
mov
sahf
rcr
setb
cmp
jg
mov
mov
dec
inc
imul
fld
lods
sbb
imul
inc
sub
movsb
movl
or
cwtl
and
rol
cmp
add
push
xchg
push
or
sbb
and
jp
insb
filds
test
fwait
orl
push
mov
inc
mov
lret
stc
jmp
loope
cmpsb
mov
popa
xchg
xor
sbb
test
aad
int
movsl
clc
dec
fcoml
adc
shrl
pop
xchg
out
outsb
xlat
fs
dec
scas
mov
les
sbb
loopne
mov
add
sbb
add
push
leave
adc
gs
push
sbb
aas
fldcw
rcrl
int
adc
ljmp
jno
xchg
cmc
ret
lahf
icebp
sbb
repnz
push
cmp
ficompl
aam
call
mov
mov
inc
cmp
test
lds
xor
outsb
sub
pop
pusha
hlt
add
xchg
test
leave
jns
jo
push
cmpsl
push
push
sbb
test
add
fistl
sbb
pop
or
cld
lds
and
mov
pop
add
mov
leave
pop
sub
idivb
cli
scas
push
sti
scas
test
mov
ss
iret
mov
cmc
test
or
dec
and
imul
scas
or
cmp
arpl
scas
xchg
insb
add
aaa
test
ror
notb
pop
jnp
or
adc
jbe
gs
stos
add
add
repnz
cli
cmpsb
insl
leave
fwait
jle
out
lods
push
neg
ret
cmc
rorb
xchg
js
outsb
xor
test
imul
lds
movl
pushf
mov
jns
je
pop
div
xchg
enter
add
pop
in
adc
fdivl
scas
push
in
movsb
ja
inc
pop
pop
and
push
mov
sub
and
test
jmp
push
dec
cltd
sbb
scas
pushf
jae
mov
xor
ljmp
inc
or
call
cli
dec
and
test
push
filds
adc
int
ret
dec
xor
jno
pop
idiv
call
xchg
cld
notl
adc
fs
mov
icebp
cmc
movsl
push
pop
add
pop
or
dec
or
fistps
xchg
adc
inc
arpl
dec
outsl
jle
sti
pop
mov
shlb
lods
aad
fnstsw
pop
push
stc
mov
lcall
lret
es
aas
repnz
rclb
push
or
push
sbb
ds
ror
jbe
inc
icebp
adc
jo
cmpsb
addr16
imul
and
pop
mov
dec
jle
jnp
pop
dec
sti
ja
jns
fbld
xchg
add
mov
jge
fxam
jge
cli
mov
fwait
push
or
test
stos
pushf
js
sbb
and
add
sub
push
push
adc
mov
mov
shl
aam
frstor
clc
jp
pop
pop
stc
add
cs
addr16
xor
mov
dec
xchg
std
inc
les
imul
addr16
jno
rorl
mov
mov
push
cmp
stos
mov
fadd
or
pop
inc
dec
sbb
gs
mov
jmp
pop
mov
into
jb
and
scas
popw
incb
negb
inc
in
mov
or
psadbw
jns
mov
ret
or
lds
jnp
lret
jle
notl
movsl
mov
out
fsubrl
in
and
push
bound
sbb
icebp
ds
pop
js
add
xchg
bound
into
rclb
jp
xchg
rolb
mov
in
push
mov
pop
adc
dec
xor
mov
xchg
mov
mov
popf
inc
les
mov
dec
inc
mov
mov
inc
out
ja
mov
and
and
out
adc
pop
push
fs
stos
push
pusha
mov
pusha
mov
jge
mov
and
sti
outsl
sub
lcall
leave
add
cmp
cmpsb
push
mov
xchg
lock
mov
in
mov
scas
scas
inc
aam
dec
les
fisttps
mov
xor
leave
imul
pushf
add
adc
mov
arpl
in
sahf
lods
jmp
sbb
outsl
inc
out
pusha
clc
fdivl
addr16
movsl
scas
popa
lods
test
xchg
daa
push
or
mov
pushf
lds
jae
and
lock
stos
fstpl
mov
and
jnp
cs
add
in
xor
jae
inc
lahf
xchg
dec
mov
cmpb
mov
cwtl
push
jg
jns
scas
xor
popa
cmc
jne
shl
ja
sar
ljmp
ret
pop
fs
mov
pop
clc
jp
rcrb
in
inc
cs
or
jg
jo
dec
and
test
clc
jmp
ret
push
dec
inc
adc
inc
rcrl
mov
test
mov
sbb
int
dec
jmp
outsl
dec
scas
add
cmpsl
scas
ds
sbb
mov
xor
jbe
addr16
mov
pop
jle
cmp
in
or
or
sub
jl
je
dec
lret
pop
adc
stc
mov
in
scas
notl
push
fst
lcall
xchg
out
adc
push
mov
push
mov
ret
and
jl
imul
lahf
ja
mov
sbb
sub
ds
out
inc
add
scas
inc
je
fcoml
lods
fstl
fdivl
add
push
jmp
mov
push
dec
iret
sub
les
dec
addr16
insb
xchg
je
jmp
pop
mov
or
jmp
int
xchg
mov
adc
rcr
lock
inc
push
sub
jo
stos
lret
sbb
loope
dec
imul
test
push
aam
push
andb
aam
outsl
lds
stos
outsb
cmp
test
pop
hlt
rcrb
sbb
xchg
or
or
and
xchg
pop
es
jg
sub
jl
jl
sub
aam
dec
shrl
ret
jae
inc
mov
and
jge
mov
sahf
addl
lods
mov
dec
int3
cmpsl
mov
sub
add
add
pop
int3
mov
das
cmpl
xchg
or
mov
mov
mov
outsl
fists
add
loop
mov
xchg
xor
mov
push
aam
stos
add
lods
mov
inc
std
leave
nop
and
push
icebp
jnp
fwait
mov
movsl
or
test
xchg
cli
xor
xor
xor
push
push
inc
jl
mov
mov
movsb
dec
mov
loope
sbb
pushf
out
sbb
mov
sti
pop
loopne
das
inc
push
ret
adc
or
xor
out
jae
and
test
lahf
in
dec
das
clc
xor
out
mov
xor
dec
adc
inc
pop
repz
xor
pop
pop
push
add
mov
dec
and
jle
adc
mov
mov
popf
xchg
jae
shll
pop
stc
or
cmp
dec
fcmovne
add
test
xor
adc
psubw
lods
js
jecxz
cmp
sub
mov
lahf
pop
cmp
dec
in
aad
stc
add
sbb
paddq
in
stos
pop
or
xchg
jno
insb
flds
mov
das
lcall
sarb
loope
enter
imul
xor
cmc
sbb
in
pop
xor
out
cmp
xchg
daa
stos
fimull
les
repnz
mov
mov
mov
mov
adc
fdivl
fiaddl
loopne
iret
pop
lock
aaa
mov
jmp
inc
loope
repnz
mov
or
mov
xor
mov
pusha
push
dec
out
js
enter
shl
add
jo
push
mov
js
mov
push
int3
jno
into
xchg
cmp
push
jg
jbe
pusha
icebp
in
cmp
lret
loop
cld
pop
adc
shlb
add
push
mov
inc
frstor
in
mov
scas
lds
lret
lret
mov
hlt
data16
adc
lods
hlt
sub
fldlg2
xchg
loopne
std
lds
fadd
sub
xor
mov
mov
aas
hlt
jae
mov
arpl
in
fmull
mov
mov
sub
mov
ds
jmp
sub
or
scas
mov
outsl
outsb
sbb
les
call
pop
stos
cmpsb
data16
push
je
cmp
mov
insl
mov
pop
shrb
adc
inc
cltd
cmc
vprotq
aad
cmp
adc
add
les
in
mov
adc
lret
jmp
and
aad
mov
mul
add
jge
mov
cli
les
fdivl
xchg
enter
xor
xor
dec
and
out
push
imul
or
js
or
cmp
pop
fsubrs
jnp
or
cmp
jmp
sti
js
or
cmp
pop
fsubrs
jnp
or
cmp
jmp
sti
jns
or
cmp
pop
fldcw
jnp
or
cmp
ljmp
cwtl
stos
test
dec
aaa
pop
jb
call
xchg
addr16
les
xchg
lret
mov
jle
mov
cmp
jp
dec
xor
das
inc
cmp
or
jbe
xchg
xchg
lret
mov
mov
cmpb
jp
fs
sub
push
or
jbe
lahf
jp
dec
mov
repnz
cmpsb
in
push
push
xor
or
data16
imul
mov
lods
shll
push
call
mov
jns
inc
and
xor
dec
cltd
sub
out
lods
sbb
scas
push
out
mov
and
out
stc
xchg
mov
mov
scas
es
or
sbb
std
lret
jmp
aad
stos
sub
test
mov
movsb
leave
aad
mov
stc
inc
xor
pop
in
movb
xchg
cwtl
jae
out
call
cmpsl
jp
rcrl
cltd
in
outsl
add
imul
out
rcrb
mov
pop
flds
pop
xor
cli
loop
pop
jg
daa
dec
inc
jae
out
cmpsb
xchg
outsb
cmpb
leave
scas
outsb
cmp
fsts
mov
stos
mov
and
cwtl
push
call
das
dec
pop
and
or
cwtl
xchg
iret
mov
mov
xchg
or
push
sbb
cmp
and
or
ljmp
fld
fistpl
push
jb
jae
inc
ss
ss
push
jg
pop
add
ret
out
cmc
mov
imulb
jp
dec
es
sub
push
or
jbe
xchg
xchg
lret
mov
mov
imulb
jp
dec
es
sub
push
or
jbe
xchg
test
test
sub
jmp
insl
test
mov
xchg
sub
out
fcoml
pusha
jne
dec
ret
lock
sahf
mov
jmp
xor
pop
sub
lds
xchg
stos
adcl
hlt
xchg
cmp
jb
aas
inc
and
cld
shll
aas
pop
lret
dec
mov
mov
sti
es
lret
cmp
lret
and
jmp
fildl
xchg
repnz
ret
ror
and
neg
cmpsb
mov
out
pop
stc
cmp
jno
insl
mov
scas
add
movsl
jg
dec
or
mov
mov
and
pop
lods
leave
popf
in
inc
movsl
xchg
pop
push
add
dec
aad
jae
in
mov
iret
xor
in
push
xchg
adc
stos
lds
shll
inc
sub
mov
iret
ret
mov
jne
mov
cmpsl
xchg
fisttpll
push
mov
rclb
xchg
cmp
aam
jbe
popa
and
add
jg
adc
cmp
int3
dec
testl
push
and
clc
jne
xor
in
add
scas
fisubrs
and
push
dec
push
or
mov
add
pushf
adc
push
lea
sub
and
lods
hlt
ljmp
push
push
hlt
jno
push
sub
imull
int
mov
mov
andl
mov
and
mov
dec
fs
inc
jb
cmp
sbb
or
xor
and
xor
jno
or
xchg
rorl
or
mov
fwait
xor
ds
in
mov
or
mov
push
insb
xor
cmp
std
inc
sub
mov
xchg
pop
pop
jmp
sub
mov
lcall
data16
add
sub
popf
ljmp
mov
sbb
xlat
cmp
mov
les
push
das
cmp
pop
inc
cli
xlat
jbe
dec
adc
das
icebp
mov
cmp
outsl
inc
sub
xor
xorl
cs
in
cmp
lahf
mov
icebp
loopne
stc
add
mov
fisubs
xchg
pop
inc
dec
std
scas
sbb
lock
pusha
xchg
mov
mov
subb
mov
pop
lret
mov
dec
xchg
pop
mov
loop
out
lea
or
inc
xor
mov
mov
iret
outsl
cmp
and
push
or
and
mov
mov
cwtl
push
sub
cld
xor
pop
pop
repz
icebp
adcl
je
rorl
sub
push
add
xor
mov
cld
cvtdq2ps
push
std
fildl
ss
lods
mov
push
dec
sbb
stos
mov
loopne
ficoms
pop
lahf
cmp
mov
mov
mov
adc
or
ficompl
add
xlat
xchg
ds
mov
adc
cmpl
icebp
and
and
jl
push
adc
push
fistps
xchg
mov
push
pop
jbe
pusha
and
and
mulb
mov
jecxz
cmp
pop
sub
daa
icebp
or
xor
fcompl
in
adc
xor
arpl
push
push
je
and
repz
xor
sahf
and
jne
or
test
and
dec
push
or
scas
lcall
jnp
add
jecxz
lret
sub
sti
sub
and
xchg
xchg
jl
push
and
mov
popl
sub
and
dec
sarl
ja
aam
push
jne
inc
jbe
sahf
push
push
inc
loopne
xor
mov
mov
shr
inc
add
insl
mov
jb
push
sti
cmp
mov
xorl
xorl
nop
pop
ret
shll
jnp
jle
test
es
cmp
inc
pop
outsb
mov
nop
push
add
xor
push
cltd
sahf
sarl
test
push
and
push
adc
popa
jae
jecxz
fdivr
xor
pop
arpl
popa
inc
std
cwtl
out
imul
cs
shrb
shrl
mov
dec
pop
mov
jecxz
cmp
jo
fs
scas
fstl
andl
subb
pushl
mov
xchg
xchg
pushf
insb
test
or
mov
and
imul
test
add
ss
xchg
inc
sti
scas
xchg
mov
dec
xor
iret
dec
jecxz
bound
sbb
dec
mov
lahf
and
cld
xchg
cli
xor
es
sub
push
arpl
mov
sbb
sub
in
outsl
in
jo
repz
movsb
aas
push
jne
fisubrs
mov
xchg
xor
flds
jmp
mov
repnz
xor
test
add
dec
sahf
cmpsb
dec
dec
popa
decl
ret
lcall
stc
cmpsl
loopne
aam
cmpsl
xor
xchg
maxps
lock
push
sub
mov
out
pop
sbb
xchg
fnstcw
and
cmp
into
clc
insl
lock
out
int
inc
fcomps
in
cmp
addr16
push
pop
sbb
popa
lods
push
dec
loopne
pop
push
sbb
mov
or
jl
int
sti
sub
pop
mov
xchg
xor
and
mull
cmpsb
xor
fs
dec
cmpsb
out
dec
in
sbb
js
sub
sub
insb
adc
inc
mov
shll
call
lret
jns
into
mov
fildl
out
push
push
pushf
mov
in
aaa
popa
jmp
cltd
mov
imul
nop
divb
popa
notb
ljmp
jmp
push
adc
arpl
in
push
mov
shl
cmp
data16
or
into
mov
jae
and
push
aas
pop
adc
fcomp
jecxz
jnp
pop
cmp
iret
mov
inc
mov
dec
push
lds
push
pusha
addr16
into
scas
sub
imul
rcll
and
and
repz
dec
or
xchg
stos
mov
shr
adc
and
sbb
test
mov
mov
mov
shlb
mov
aad
and
push
pop
fsubr
sub
adc
fs
sti
call
cmp
or
add
dec
pop
dec
xchg
push
cmp
movsl
dec
mov
ret
fwait
clc
jae
outsl
repnz
push
mulb
xor
push
mov
in
xchg
outsb
xchg
rclb
fnstcw
push
jl
add
outsb
scas
lock
cmpsl
sbb
inc
xlat
in
add
les
jecxz
mov
inc
add
push
fwait
add
xor
sbb
mov
and
in
mov
pop
adc
cld
dec
nop
imul
sti
lcall
dec
cmc
je
dec
cmp
add
repnz
cmp
stos
fwait
xchg
xlat
adc
je
fadds
sar
pop
push
xor
shl
lahf
dec
mov
jno
loopne
add
jae
data16
inc
or
xor
mov
nop
aaa
subb
test
repnz
imul
into
xchg
and
andl
xor
xchg
ficoms
fimuls
mov
imul
js
push
sbb
inc
ds
lock
dec
xor
add
lret
movsb
pusha
mov
test
repz
cld
pop
sub
mov
pop
mov
mov
cmpsl
test
adc
mov
movsl
rcrl
scas
loopne
mov
sti
jecxz
xchg
xor
xchg
add
popf
rclb
mov
loopne
movsl
lea
mov
cmp
popf
fucomp
rcrb
sub
push
out
xchg
xchg
dec
inc
cmp
add
pop
fldenv
pushf
int
out
pusha
mov
mov
add
inc
or
inc
xchg
sub
add
int3
mov
ljmp
xor
fadd
cmp
test
into
std
js
xor
clc
stos
les
or
add
lods
sbb
in
addr16
inc
lock
cld
ficompl
sbb
insl
mov
rcl
lods
cli
cmp
in
push
div
scas
mov
add
sub
int3
add
dec
lahf
add
and
dec
dec
int3
mov
xor
add
loopne
repz
jo
pop
icebp
xchg
daa
jmp
xor
add
sub
pusha
test
mov
pop
inc
lret
std
les
sub
fld
inc
insl
push
mov
or
ljmp
xchg
decl
test
das
outsb
mov
test
rcll
xchg
imul
leave
fdivrs
shl
repnz
stos
add
ret
xchg
and
enter
punpcklwd
fldt
sbb
outsl
cmp
jns
repz
mov
jno
dec
xor
lea
insl
jae
push
cmpsl
out
pop
mov
cmp
movsb
pop
and
xor
sub
inc
hlt
nop
sbbl
xor
shll
mov
pushl
sub
dec
mov
xchg
jecxz
scas
dec
sahf
movsb
inc
in
cmp
mov
add
xor
lods
adc
mov
mov
cs
mov
mov
dec
rcrb
movsb
test
gs
pop
test
ficomps
lahf
fcmovbe
leave
repz
mov
sbb
push
faddp
jb
dec
cli
cmp
xchg
cmp
xor
dec
call
fsubrp
jae
movsl
gs
stos
repnz
mov
pop
bndldx
pop
jl
mov
cmpsb
cmpsb
cmp
invd
sarb
adc
outsl
xchg
cli
mull
push
ficoml
cmpsl
and
push
pop
adc
inc
lret
stos
xchg
xchg
out
daa
dec
fwait
adc
js
sub
add
int3
xchg
sti
mov
inc
jg
leave
in
out
mul
xor
adcb
pop
dec
cmp
int3
fs
cmp
pop
out
mov
fcoml
mov
mov
inc
xor
mov
cmc
rorl
jnp
mov
cmp
jmp
aaa
or
gs
and
sbb
jns
sbb
adcb
orl
loop
subb
mov
pop
sub
daa
push
mov
push
addl
int3
jae
es
jp,pt
insl
cmpsb
cmc
mov
xor
xchg
leave
aas
or
pop
xchg
mov
push
ss
mov
add
loope
fstps
sbb
push
add
cmp
adc
out
lods
stc
cmp
jecxz
sub
dec
dec
adc
test
sub
and
imulb
xchg
lret
sbb
clc
jmp
add
out
dec
sbb
enter
xchg
sbb
test
mov
inc
je
lods
mov
cs
xchg
cs
shlb
mov
or
lret
loope
jne
leave
xchg
push
mov
fcomps
shlb
aas
push
jle
xchg
inc
mov
jecxz
sbb
je
xchg
lahf
stos
repnz
data16
aaa
rcl
cmp
lahf
mov
or
stos
lret
adc
mov
das
mov
shlb
mov
movsb
xchg
ja
jb
out
imul
mov
test
mov
push
jmp
sub
cmp
cmpsb
jp
push
mov
mov
mov
add
in
lock
dec
cmp
and
mov
ljmp
xchg
xor
pusha
in
das
sbb
jle
add
mov
repnz
mov
push
ljmp
enter
ret
mov
pusha
fadds
cmp
or
add
sub
xchg
xchg
sub
lret
inc
xchg
mov
xchg
sbb
pop
scas
mov
stos
push
jecxz
out
into
popa
shll
sub
cld
mov
mov
das
or
lds
push
out
pop
mov
sub
enter
adc
cmc
push
je
push
into
mov
fnstenv
xor
mov
sahf
scas
mov
ljmp
nop
inc
push
mov
push
inc
sbbl
sahf
inc
sarb
popw
and
push
dec
and
loope
dec
dec
ret
ss
add
inc
out
mov
xchg
daa
imul
nopl
jg
mov
mov
mov
push
or
xlat
ret
insl
cmc
lret
mov
stc
in
mov
inc
lret
sti
sbb
fmuls
jge
and
aad
mov
cmp
and
data16
or
subb
scas
push
stos
push
xchg
jno
mov
lret
fcoml
hlt
pusha
aaa
inc
stos
inc
sub
mov
push
sub
pop
bound
out
xor
mov
iret
js
rcrl
pop
xor
lods
lea
int
insb
lods
sub
cmp
dec
mov
enter
cmpsb
outsb
mov
leave
add
or
mov
repnz
ds
and
iret
push
dec
adc
subl
adc
inc
call
xor
push
sub
push
xchg
ljmp
or
mov
sub
jne
push
push
xchg
and
dec
and
jno
or
pop
push
add
test
pop
dec
xrelease
cltd
mov
popf
test
pop
cmp
stos
pop
sub
stc
jp
mov
xor
div
xor
clc
loopne
jb
stos
aas
lods
cli
sbb
out
ficomps
mov
cwtl
not
or
or
iret
mov
fcoml
outsl
es
fs
mov
push
in
push
lds
mov
mov
dec
enter
or
je
mov
mov
mov
push
mov
cli
int3
xchg
ret
lahf
push
pop
and
addr16
inc
imul
es
pop
je
imul
jmp
dec
fbld
adc
add
ljmp
cmc
loope
mov
jg
pop
lock
mov
inc
pushf
lret
lret
addr16
popa
adc
push
orl
testb
mov
test
or
pusha
push
int3
sub
ret
cmp
sub
jb
dec
or
in
mov
jno
inc
pusha
stc
mov
adc
ret
jge
fisttpll
pusha
in
mov
dec
rcrb
dec
mov
stos
jns
push
pop
dec
sahf
sbb
jbe
jns
vmovlps
mov
stos
jl
mov
or
dec
adc
movsl
cli
pop
mov
scas
stos
cltd
shlb
push
adc
sbb
adc
scas
mov
xchg
mov
hlt
add
jge
jecxz
aam
dec
lret
lock
cmp
cmp
insb
movsb
push
mov
ljmp
push
call
jg
lahf
xor
insl
push
cmp
push
mov
ds
adc
pop
sbb
jno
jg
iret
test
lock
leave
dec
scas
push
loope
mov
in
cmc
mov
test
sbb
popf
ljmp
shll
push
out
add
fcmove
jno
adc
jmp
test
push
stos
sbb
lock
mov
xor
incb
out
je
xchg
pop
xor
xchg
cs
jle
add
cs
aaa
or
dec
inc
cmp
fadds
ss
adc
ss
xchg
sub
add
nop
pop
jle
in
jl
cmp
mov
jl
adc
dec
pop
das
das
sbb
sbb
pop
or
in
fiaddl
adc
out
aad
aad
inc
mov
xor
cmp
insl
sbbb
test
movsl
addr16
sbb
dec
adc
or
jns
mov
mov
rorb
push
dec
aam
daa
sti
xchg
mov
and
cmp
xor
in
sub
xlat
xchg
xchg
adc
in
aaa
jb
fidivl
fdivrs
out
movsb
loopne
test
arpl
xchg
and
lret
inc
jecxz
ficomps
push
gs
mov
rolb
pusha
mov
mov
nop
test
fs
sub
push
xchg
ret
jne
jb
pop
clc
pusha
loop
lret
stc
mov
pop
lock
mov
ss
xchg
push
out
pop
loopne
push
jl
ror
das
inc
lea
data16
adc
addr16
das
arpl
and
movsb
cld
fldenv
lods
mov
outsl
jecxz
push
pop
inc
push
pop
mov
lock
repnz
inc
in
je
scas
push
lods
jle
dec
pop
mov
stos
int
iret
out
push
xor
fwait
inc
fstl
das
xor
les
add
ret
cld
cli
cmp
and
jmp
into
int3
lock
iret
cmp
shll
imul
push
aam
push
pop
cwtl
mov
xchg
gs
xor
push
repz
shl
add
sti
jb
ficoms
pusha
sub
ret
orb
mov
nop
lock
cs
jmp
roll
jne
out
movsl
add
int
out
data16
lcall
add
loope
xchg
aam
test
push
stos
int
in
or
lret
mov
sub
call
mov
xor
jns
andb
sub
shl
outsl
push
outsl
mov
fldl2t
andl
negl
mov
mov
hlt
add
push
add
mov
ss
test
aam
cwtl
push
mov
jbe
pop
lahf
dec
popa
inc
or
movsb
xchg
xor
in
dec
pusha
xchg
addr16
mov
mov
mov
loope
test
cvtpi2ps
push
lahf
clc
mov
lahf
inc
test
lods
stos
push
xlat
call
mov
push
daa
push
into
jno
mov
cmpsb
daa
add
lea
sub
cmp
fs
lret
jo
fstps
stc
adc
push
jle
addr16
leave
fnsave
sbbl
das
data16
std
leave
mov
xchg
add
icebp
inc
clc
cmp
jae
sbb
ret
push
sub
xor
adc
repnz
mov
pop
mov
lcall
gs
xchg
xchg
xchg
inc
loop
pop
in
cmp
or
js
fimull
popa
add
push
shll
xchg
xchg
xlat
dec
add
mov
in
filds
xor
ss
test
std
ret
sub
mov
inc
and
and
add
mov
push
pop
cld
xor
mov
mov
mov
je
mov
jnp
aas
sub
imul
hlt
xchg
js
mov
push
test
je
loopne
lods
and
sbb
push
popf
and
lea
mov
dec
jge
lea
out
ret
xor
jecxz
outsb
mov
add
jbe
fstpl
inc
pop
mov
data16
xor
and
insl
mov
jg
pop
ret
and
imul
jle
aad
stos
lahf
pop
je
jo
fucom
mov
mov
call
push
outsb
loop
jno
mov
out
push
or
subl
xchg
cmp
xchg
cmp
fwait
gs
inc
cmc
int3
cli
repnz
adc
sbb
pop
fwait
jle
cmpsb
jne
mov
ret
lea
add
mov
in
sbb
dec
inc
cmp
jns
sub
push
ja
scas
mov
jno
icebp
mov
loopne
shlb
inc
enter
jl
loope
cmp
mov
and
xchg
adc
sbb
pop
int
mov
add
ficoms
cmp
fsubr
xchg
aad
ret
add
dec
in
aas
leave
and
mov
xchg
or
ds
cmp
mov
and
mov
add
sar
ljmp
out
or
jae
pop
mov
sbb
cmp
push
dec
sub
jmp
cmp
mov
rorb
mov
or
cmpsl
in
jp
mov
data16
repz
mov
jge
lahf
inc
ss
dec
inc
fiadds
push
xchg
aas
ljmp
jns
mov
clc
fcomp
mov
das
outsb
mov
xchg
aaa
push
dec
lret
test
cmp
xchg
popf
mov
mov
loop
inc
push
push
mov
jo
je
rorl
int3
iret
jo
push
lods
sbb
lcall
mov
bound
adc
inc
dec
lock
bound
and
iret
into
scas
pusha
rcrl
lret
mov
mov
stos
int3
popf
mov
xor
das
dec
sarb
ret
aad
xor
movsb
add
dec
push
call
cmp
mov
cmpsl
imul
cmpb
insb
shlb
push
fdivrl
push
repz
scas
inc
gs
gs
sbb
icebp
fadds
sub
sbb
push
inc
sti
jae
mov
adc
jb
shrl
fwait
inc
or
mov
mov
dec
movsb
cmpsb
mov
testl
pusha
and
cli
jne
jns
pop
or
and
cmpsb
add
fists
stos
mov
imulb
jp
dec
es
sub
push
or
jbe
xchg
xchg
lret
mov
mov
imulb
jp
dec
es
sub
push
or
jbe
xchg
xchg
fisubl
mov
imulb
jp
inc
es
xor
inc
and
bound
jb
adc
inc
mov
stos
mov
sbb
push
test
into
mov
cmc
sbb
or
in
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
pusha
cs
sbb
or
gs
out
jp
and
dec
cwtl
popa
stos
arpl
adc
and
icebp
or
jp
push
pop
mov
mov
push
dec
popa
cli
jb
rcr
xor
and
enter
jmp
jae
inc
test
mov
popa
aad
cmpsl
outsl
test
shrl
test
test
jle
pop
imul
push
lret
data16
mov
push
cmp
cmp
sbb
stos
cmp
test
inc
xchg
mov
insb
mov
sub
scas
enter
imul
aam
or
add
and
cmpl
rcrl
jg
mov
dec
pop
mov
ret
xchg
sahf
jg
mov
dec
fucompp
aad
inc
push
jle
sub
pop
mov
xor
popa
push
jns
mov
xor
fcmovu
sub
push
icebp
xchg
stos
loope
mov
push
push
push
gs
inc
cli
je
into
lret
shrl
sbb
sbb
sbbl
mov
subb
loop
repnz
fidivl
roll
mov
sarl
loopne
movl
int3
into
cmp
push
xchg
jl
push
mov
test
or
push
loop
mov
aad
int
sub
and
pop
lret
nop
sbb
std
push
pop
mov
mov
lcall
add
xor
and
shrl
rcrl
or
jp
push
pop
mov
mov
lcall
add
xor
and
shr
inc
inc
shlb
push
lods
inc
in
or
fldcw
fs
mov
sub
sbb
stc
sbb
aam
inc
pop
popa
stos
xor
inc
stc
cs
popa
mov
notb
push
or
sbb
addr16
stos
movsb
movsb
push
adc
jp
and
cmpsb
std
in
leave
ret
xor
and
sbb
or
shll
out
dec
or
shlb
push
xor
dec
xchg
inc
jo
repnz
jns
loop
out
mov
ljmp
and
out
mov
pop
push
cmp
stos
push
sub
insl
adcl
and
xorb
std
ds
jae
xchg
movsb
sub
xchg
test
les
cmp
out
xor
mov
notl
es
iret
or
xchg
ret
in
sbb
loop
pop
or
movsl
addl
inc
aam
add
lods
in
xchg
mov
ja
adc
in
mov
ljmp
xchg
ret
dec
lcall
mov
rcrl
lahf
xor
icebp
xlat
push
sbb
test
fcomps
dec
es
lds
gs
hlt
pop
push
pop
lret
xchg
dec
add
xlat
out
leave
arpl
inc
jl
mov
ljmp
pop
lods
in
jg
xor
add
mov
lahf
inc
out
cwtl
jp
popf
mov
subb
pop
popa
pusha
es
fcmove
pop
rorb
iret
ret
fdivrs
mov
mov
pushf
popf
call
xor
repz
cmpl
stc
jg
mov
cmp
bound
push
negb
mov
fwait
pop
adc
inc
int3
push
out
xchg
lahf
loope
out
test
fcomps
lock
out
pop
in
adc
jmp
loope
clc
lods
ja
int3
mov
test
fnsave
pop
stc
dec
iret
dec
mov
xchg
lods
add
xor
addb
push
mov
pop
mov
lods
adc
mov
xor
mov
int
fcom
or
xor
aaa
cli
push
mov
add
inc
mov
dec
test
or
pop
scas
fildll
mov
fnstcw
subl
mov
mov
lahf
sub
lret
sbb
arpl
hlt
cs
aas
xchg
into
arpl
cli
imul
out
sti
mov
loope
shl
or
xchg
or
cmp
std
in
stos
je
and
xor
fcoms
aam
jle
imul
jl
fiaddl
outsb
inc
sub
inc
mov
addl
mov
lea
cmp
inc
inc
aam
mov
dec
push
test
sbb
mov
push
subl
push
ja
lods
fstps
xor
fdivrp
mov
scas
loopne
test
mov
sub
sti
jg
xlat
out
rcl
leave
ret
xor
call
fcmove
sarb
call
jnp
inc
lods
ljmp
push
cmc
and
insl
scas
or
sbb
faddp
divb
jbe
pushf
lret
lds
mov
adc
inc
adc
lret
or
add
call
inc
ret
ret
fnstsw
pop
xchg
ds
pop
lds
outsl
inc
or
xlat
add
pop
outsl
dec
stos
pop
dec
shr
bound
cmpsb
idivb
cli
loop
insb
out
push
rorb
cli
cmp
xor
xchg
inc
mov
movsb
dec
outsl
clc
mov
ds
arpl
std
xor
add
repnz
mov
jns
ret
mov
out
popa
xor
outsl
sbb
fistl
imul
cmp
add
movsb
lret
xor
cmpsb
mov
ljmp
popf
ret
xorb
jo
and
test
cmpsl
mov
add
stc
inc
fnsave
test
cmpsl
lcall
lods
add
adc
mov
test
pop
loopne,pt
jg
aaa
xor
leave
mov
jecxz
mov
pop
push
pop
xor
repz
cmpsb
out
mov
cmp
mov
or
mov
sub
out
test
sub
test
pop
adc
sub
out
xor
push
sub
lods
add
or
mov
push
pop
mov
add
out
xor
xchg
push
mov
js
int3
in
push
subl
movsb
pop
and
les
ret
add
cmp
pop
cli
in
shll
lret
pushf
xor
mov
add
mov
lcall
nop
jnp
push
mov
testb
push
mov
lcall
pop
mov
arpl
mov
adc
and
imulw
ja
pop
andb
lock
jae
repnz
call
inc
lock
outsl
inc
add
jae
sbb
test
push
mov
adc
cmp
push
sarl
push
dec
dec
clc
fdecstp
imul
jp
clc
dec
adc
pop
repnz
push
lret
cmp
addl
dec
push
mov
dec
in
inc
insb
aam
test
sbb
xor
mov
or
mov
add
fidivs
cmpsb
add
xchg
add
pop
ljmp
fldenv
mov
mov
mov
mov
ds
cli
push
sub
lea
inc
imul
fldenv
fsubp
fisubl
insb
mov
xchg
mov
fmull
mov
xor
fidivl
pop
sbb
or
out
sub
lods
sbb
or
jne
lcall
or
cmp
and
mov
icebp
mov
mov
into
pushf
mov
sbb
push
sahf
out
xor
push
pop
dec
xor
cli
mov
jo
and
or
inc
push
xchg
cmp
or
xor
xor
sub
xchg
sbb
sbb
sbb
jmp
mov
push
mov
aaa
push
pushf
jmp
aas
bound
scas
je
xchg
stos
inc
xor
in
xor
adc
xor
xor
out
dec
pop
out
nop
int3
sti
pop
orl
jne
xor
clc
jb
cmp
add
inc
push
movsl
std
pushf
sub
jmp
lds
rorl
mov
cwtl
inc
cwtl
rorl
or
add
rclb
fidivrs
jns
pop
inc
sti
frstor
push
js
mov
mov
push
lret
sub
push
mov
insb
loopne
std
scas
cmp
mov
pop
push
out
xchg
xchg
aad
inc
sbb
orw
test
mov
std
inc
and
xor
dec
in
mov
clc
fnstcw
jle
fcomps
inc
pusha
ss
push
inc
xor
les
xchg
imul
jecxz
xchg
sub
jno
and
jmp
cmp
outsl
adc
mov
or
dec
fisubrl
movsb
lock
jno
test
lods
inc
mov
mov
jp
fsubrs
pop
inc
push
iret
stc
hlt
icebp
xchg
roll
leave
mov
or
pop
push
push
sbb
cwtl
jnp
sub
adc
add
insl
jp
iret
or
iret
fistps
popf
push
or
sbb
test
shlb
sbb
xchg
sbb
xchg
xchg
inc
mov
push
clc
ret
enter
mov
xchg
add
push
popf
inc
and
and
xor
out
daa
aam
cwtl
push
pop
ficoml
orb
in
fdivp
aaa
dec
insl
xchg
pop
and
ret
lds
inc
pop
pusha
inc
mov
aaa
jb
add
cmpsl
ret
xorl
xor
fcompl
out
lcall
xor
in
inc
ficompl
mov
mov
out
test
sahf
pop
scas
stos
lcall
sbb
daa
in
dec
mov
pop
add
push
sub
adc
ret
test
xlat
loope
add
sti
out
jg
fisubrl
int
test
sti
cmp
rorl
pop
jge
jb
popf
lret
mov
xchg
cmp
xchg
pop
xor
adc
dec
mov
xchg
rorl
xchg
sti
sbb
idivl
push
add
dec
push
jmp
sub
mov
mov
mov
mov
push
jl
or
inc
lcall
cmpsb
sbb
and
mov
push
into
shlb
scas
icebp
cmp
mov
inc
sahf
mov
imul
sub
cld
cmp
cmp
mov
int
sbb
jge
stc
mov
pop
mov
repz
pop
cmp
sbb
push
aaa
mov
jb
inc
sbb
push
ret
sbb
mov
pop
imul
enter
aam
dec
enter
and
push
in
mov
sahf
movsb
and
leave
adc
jle
inc
out
in
into
xorb
leave
int
jo
pop
add
cmc
jecxz
xchg
ja
mov
fisttpll
pop
shlb
and
pop
xor
add
loop
adc
stc
sbb
negl
call
pop
xor
shll
adc
sub
ret
imul
movsb
aas
dec
mov
std
lods
sahf
inc
xchg
sti
fwait
dec
jns
loopne
jnp
in
dec
mov
pop
icebp
pop
sbb
lahf
loop
pop
in
cmc
es
inc
xchg
pop
mov
fs
jge
mov
adcl
push
mov
jne
mov
mov
and
add
stc
insb
sahf
rol
mov
cmp
out
into
xor
jbe
test
loop
xchg
mov
xchg
jno
ljmp
ss
test
fcompl
bound
addr16
test
sarb
xorb
imul
ret
lds
mov
das
outsb
addr16
xchg
mov
pop
adc
mov
push
fildll
int
push
xchg
and
cmp
fisubrs
test
in
data16
fisubrl
lret
mov
dec
mov
imul
stos
stos
movsl
lcall
mov
jge
pushf
js
xchg
jmp
lock
pusha
pop
xchg
push
out
dec
pop
mov
mov
add
pop
adc
mov
and
in
and
jecxz
imul
mov
jecxz
jg
xchg
mov
add
mov
push
xchg
pop
hlt
cmp
pop
jno
mov
cmp
iret
sbb
arpl
es
icebp
not
dec
pop
arpl
popf
lahf
lds
adc
add
mov
fldl
prefetch
inc
jge
incb
cmpl
movsb
fcmovnbe
shrl
fmul
gs
jne
push
addr16
pop
jne
pop
add
in
or
or
cmp
mov
testb
ret
ror
sub
rcll
test
aas
aaa
push
ss
in
inc
les
movsl
adc
inc
fsubs
les
insb
xchg
lret
pop
xchg
fisttpll
cmp
inc
lea
jp
push
popa
push
movsb
jecxz
add
add
repz
scas
push
mov
jbe
cmp
mov
cmc
es
xchg
pop
xchg
adc
out
push
mov
mov
int
test
cmpsb
inc
addr16
loopne
pop
insl
push
pop
mov
inc
push
mov
push
and
adc
push
push
scas
push
dec
mov
rcll
cmp
mov
mov
jp
dec
inc
dec
pusha
xor
push
incl
pusha
xchg
and
lret
movsb
sub
call
push
dec
sbb
fwait
xor
and
pusha
xchg
jmp
inc
or
lods
testb
inc
test
pushf
mov
stos
ds
jnp
sub
in
pop
mov
pop
aam
cmp
xor
mov
xchg
xor
mov
in
pop
insb
subl
add
and
pop
addr16
int
das
xlat
jb
adc
sub
push
sbb
push
jp
xchg
mov
mov
out
sub
icebp
cltd
fimuls
push
mov
sub
stos
push
cmp
fst
ffreep
aas
mov
cwtl
inc
jecxz
out
push
adc
and
std
xor
jbe
or
pop
jecxz
inc
mov
int3
add
enter
data16
sub
fbld
gs
fwait
mov
bound
or
xchg
mov
inc
pop
enter
or
pop
jbe
push
mov
sbb
dec
cmp
stc
lcall
jmp
xchg
pusha
mov
aas
int3
pop
ljmp
sub
into
in
dec
push
push
lock
jae
pop
jmp
pop
jno
sub
ret
int
mov
jae
test
xchg
dec
jle
pop
pop
popa
es
mov
fcoms
xchg
lahf
xor
sbbb
dec
lcall
fstl
mov
lods
pusha
test
test
jo
in
test
push
pushf
lds
fistpl
mov
insl
out
jns
scas
xchg
push
push
bound
mov
sti
and
lds
scas
ljmp
inc
cmp
test
jbe
cs
sbb
outsb
inc
inc
cld
mov
xchg
sbb
popf
sub
jae
xchg
xchg
push
cmpsb
loope
into
out
jg
cmc
fistps
lock
scas
out
lods
dec
fmull
rclb
xchg
nop
test
mov
mov
pop
test
out
pop
cmp
jmp
loopne
shr
test
int3
aaa
sbb
jle
mov
repz
add
add
push
pop
sbb
into
aam
inc
adc
inc
add
add
or
push
movsl
cmp
test
insb
fcoms
pop
sar
xchg
test
and
testl
nop
adc
pop
jnp
cmpsl
dec
or
cmc
int
shlb
mov
pop
mov
dec
and
in
or
dec
xchg
movsb
add
insl
lods
pusha
jl
xor
adc
stos
dec
and
push
iret
cmp
jle
out
loop
adc
mov
rorb
xchg
andl
adc
inc
std
xchg
mov
aam
adc
jmp
cmc
addr16
lods
dec
mov
fwait
pop
lahf
adc
mov
das
stos
scas
mov
leave
call
lahf
shl
inc
pop
sahf
push
nop
mov
adc
shr
rorl
insb
int3
ljmp
lea
mov
cli
cmp
in
scas
mov
push
jle
and
in
aas
dec
pop
dec
adc
add
dec
in
push
jnp
mov
shll
push
faddl
rclb
jbe
sti
xlat
mov
xor
gs
mov
les
pop
xchg
scas
fs
call
test
push
fnsave
pop
in
movsl
roll
mov
movsb
bound
popa
lcall
push
sbb
sbb
pop
cmp
mov
pop
in
cmp
repz
and
in
jmp
rorl
dec
cli
cmp
fidivl
jge
adc
aad
icebp
cmpsl
scas
insl
mov
pushf
adc
inc
mov
in
inc
enter
and
std
cmp
add
sbb
daa
notl
or
or
popf
test
or
jno
out
sbb
push
push
mov
add
xchg
sbb
dec
scas
test
or
push
mov
cmc
ss
js
xsha256
cmpsb
push
pop
fdivs
dec
bound
xor
xor
mov
arpl
inc
enter
ror
movsb
in
dec
scas
add
push
fs
movsb
divl
inc
loope
xchg
jo
or
cmp
mull
jecxz
mov
jle
jecxz
xchg
sub
jno
dec
and
xchg
mov
lods
imul
push
push
cmpsb
pop
add
fld
shl
test
aad
test
or
mov
stc
adc
inc
mov
pop
mov
es
ret
ja
sbb
ds
cmpsb
xchg
arpl
cmp
sbb
loopne
test
clc
lods
inc
movsb
lods
xor
jno
push
inc
push
add
fmul
in
js
insl
fstps
fstpl
loope
mov
cmp
mov
add
jo
add
pusha
imul
ds
dec
push
fst
cwtl
xchg
in
std
inc
pop
push
jne
sbb
ret
loope
and
xchg
aaa
out
hlt
stos
mov
fucomp
leave
add
cmp
mov
bnd
add
jb
push
mov
mov
sub
push
mov
ficompl
mov
pop
or
xchg
inc
test
mov
in
mov
ficompl
loope
je
xchg
jmp
sarb
mov
repz
movsl
push
mov
push
lods
jmp
push
addl
mov
push
iret
mov
sbb
fwait
sub
or
setno
les
mov
push
bnd
add
sbb
jl
inc
mov
adc
dec
mov
sbb
fwait
ljmp
or
push
in
jl
fcmove
pop
add
jae
jno
or
aam
mov
scas
push
mov
and
lods
or
add
xor
outsl
scas
or
adcl
adc
mov
adc
lret
mov
jmp
push
sbb
je
jnp
int3
adc
add
push
and
fsubs
xchg
pop
lock
cltd
outsl
repnz
jb
cmp
add
xor
in
fs
add
or
pop
pop
jle
fldt
mov
mov
push
dec
sbb
inc
adc
or
lods
in
dec
jmp
lods
sbb
lret
js
fisttps
sbb
gs
xchg
jae
mov
icebp
push
xor
jne,pn
das
jne
repz
mov
aad
icebp
cmp
jl
dec
cmp
lods
movsl
or
pop
into
inc
cmpl
adc
add
xchg
cmp
xchg
fcomi
imul
mov
push
sbb
aaa
push
mov
stc
cld
jno
imul
pop
flds
jns
xchg
add
sbb
iret
repz
nop
sbb
mov
pusha
and
stos
sub
mov
out
test
or
adc
sub
aas
sbb
xor
outsl
mov
jno
adc
jbe
rorl
hlt
insb
jo
and
add
enter
mov
xchg
add
movsl
aas
insl
jb
dec
out
dec
xor
repnz
cmpsl
movsb
xchg
ret
or
fs
testl
cmc
add
leave
or
mov
jbe
mov
test
sbb
mov
rcrb
inc
je
sbb
jge
sbb
inc
xor
in
jae
sub
or
stos
inc
scas
mov
leave
ljmp
repnz
mov
fnsave
shr
mov
out
fldl
inc
popa
push
in
jnp
mov
out
loop
arpl
aaa
push
jl
dec
sub
and
pushf
movsb
jle
and
fdivrs
aad
xor
jo
testb
les
insb
xor
call
ljmp
dec
or
je
xchg
std
push
popl
cmc
push
test
pop
into
jbe
icebp
mov
add
jb
add
notl
fs
mov
sub
pop
jb
bound
pop
fs
jns
push
subl
inc
imul
test
inc
add
push
dec
xlat
fsubrs
jae
stc
sbb
popa
push
gs
sbb
test
js
mov
pusha
aas
mov
cmpsl
std
clc
pop
out
sbb
cmp
push
push
fstps
mov
out
cmpsb
sbb
sub
repnz
rcr
mov
dec
int
xchg
lea
rcrb
sbbb
hlt
gs
add
es
fidivrs
sub
lret
jle
inc
cwtl
xchg
subb
xor
mov
ret
xor
inc
inc
mov
jle
mov
mov
mov
andl
dec
sub
pop
pop
mov
hlt
cmp
jg
sti
or
mov
push
ja
mov
mov
dec
pop
cs
ret
test
fimull
outsb
aam
inc
shll
cmp
in
mov
pop
jecxz
sub
jle
dec
dec
sbb
dec
pop
push
movsl
push
test
cltd
hlt
sub
stc
int3
pop
cs
mov
movb
fistps
ljmp
std
les
mov
popa
mov
xchg
notb
jle
xor
jp
jle
pop
mov
xchg
mov
push
or
push
ret
adc
sub
fsub
mov
rcr
xor
mov
lret
add
inc
mov
mov
ss
popa
mov
or
mov
mov
jno
inc
shlb
pop
out
cmpsb
stos
lea
lahf
xor
loop
push
stos
jne
add
mov
push
idivl
inc
push
loopne
sbb
jnp
ret
dec
fs
pop
dec
fisttps
lods
mov
test
and
or
inc
dec
sbb
xor
enter
pop
cmpsl
loope
and
dec
xor
dec
popl
xor
sbb
xor
iret
dec
and
call
ljmp
icebp
dec
inc
adc
and
lds
dec
xchg
mov
pop
mov
push
ret
push
or
jp
push
pop
mov
mov
lcall
add
xor
and
shrl
rcrl
or
jp
push
pop
mov
mov
lcall
add
xor
and
shrl
rcrl
or
jp
push
pop
mov
mov
sahf
jno
pusha
cli
adc
add
xor
and
rcrl
shrl
loope
xchg
push
fidivl
push
jmp
jno
push
lea
xor
or
jns
imul
or
xchg
leave
sub
pushf
loop
sarb
and
jns
imul
inc
pop
mov
mov
jmp
sarb
and
jb
bound
xor
mov
mov
fwait
lcall
int
sbb
jo
xor
lock
js
pop
mov
repnz
and
pop
sahf
mov
or
out
pop
mov
inc
mov
or
xor
lret
adc
and
lock
leave
lods
jb
fmul
fldcw
call
jne
insl
add
pop
and
jge
imul
sub
push
movsb
call
rolb
aad
push
mov
test
xchg
leave
sub
push
clc
inc
aad
cli
pop
sahf
sbbb
sbb
loopne
xor
xlat
and
cmpsb
sbb
mov
cli
lods
dec
leave
sub
mov
cltd
push
movl
insb
aad
imul
sbb
push
cmp
mov
mov
aad
movsl
loop
shlb
dec
es
addr16
aaa
dec
add
lcall
xchg
fimuls
shlb
push
cmovb
addr16
push
push
inc
sbb
mov
fsts
fadd
ficompl
inc
test
jb
bound
push
cmp
mov
mov
jmp
sarb
and
jns
imul
inc
sub
stc
sub
cltd
loop
sarb
xchg
test
jle
add
nop
pop
push
fistl
sarb
jg
xor
loope
sbb
jecxz
mov
scas
xor
into
jp
lcall
pop
adc
jne
ljmp
incl
stos
fisttpl
subl
in
ss
stc
fs
std
adc
and
in
sbb
imul
cmp
lea
mov
dec
bound
lea
xor
jp
jg
inc
cmp
repz
pop
pop
leave
and
and
xchg
push
mov
inc
in
ret
scas
xor
cmpsb
test
mov
insb
aaa
stos
lea
xchg
fdivrs
sbb
movsl
add
add
mov
mov
nopw
push
push
outsb
sti
jbe
push
stos
sbb
push
shlb
or
leave
xor
insb
into
mov
imul
dec
cmp
jbe
shlb
and
jp
inc
mov
pushf
add
cmpsl
aaa
std
out
mov
imul
cmc
and
es
in
dec
aad
testb
iret
je
rcll
xchg
dec
pop
shlb
xor
adcb
cli
inc
jns
jb
adc
in
sub
cmp
pop
in
push
mov
and
loope
popa
aam
out
jp
js
nop
pop
sbb
int3
and
fnstsw
clc
int3
mov
rolb
mov
daa
out
test
jl
cmp
insl
mov
sbb
push
jno
insl
push
out
divb
rclb
cmp
or
out
mov
mov
cld
cmp
inc
test
in
in
mov
dec
or
inc
push
pop
or
mov
out
je
and
cs
xor
lahf
mov
mov
sarb
pop
push
sub
sub
pop
mov
jnp
mov
aam
push
cwtl
dec
lds
push
xchg
push
xchg
jle
xchg
repnz
or
jns
mov
pusha
and
int
mov
ss
add
testl
loope
and
pop
cs
cmc
jp
repz
jae
in
push
ficompl
mov
jae
mov
decl
add
mov
rcll
xor
insl
ss
push
xlat
mov
outsb
dec
inc
dec
movsb
jge
mov
push
lret
cmp
cs
repnz
fwait
xor
xchg
sahf
add
add
daa
xchg
push
jmp
xchg
jo
push
inc
and
sub
mov
push
mov
inc
add
sbb
xchg
shl
sbb
movsb
pop
cmp
adc
decb
lds
jae
and
xor
sbbb
mov
jo
into
mov
cmc
inc
cltd
and
mov
in
gs
std
or
icebp
sbb
std
and
sahf
lcall
out
cmc
push
or
test
movb
mov
loopne
mov
adc
dec
mov
pop
icebp
int
stos
mull
adc
fbld
jmp
mov
les
cld
mov
sub
adc
ret
add
cmp
test
or
je
insb
mov
xchg
test
jb
xchg
bound
xor
jae
jae
iret
cmp
mov
dec
pop
ds
loope
jns
nop
mov
test
mov
int3
jnp
jle
inc
pop
inc
xor
shlb
jge
cmp
push
lcall
ja
pop
push
inc
lcall
jp
xchg
ss
ror
and
test
subl
cli
dec
or
add
fstp
in
sbbb
stc
test
loope
push
adc
jp
push
adc
jp
outsb
cli
sub
pop
js
push
mov
ljmp
jo
mov
ja
orb
cli
ret
xlat
add
divl
mov
mov
btr
sub
sub
add
cmp
add
repnz
mov
and
data16
fistpll
sub
and
mov
loope
dec
adc
out
cmc
add
in
push
sbb
add
fisttpl
inc
mov
add
decl
xor
insb
push
jb
mov
cmp
cwtl
dec
pop
adc
mov
lock
pop
call
stc
loop
add
jo
adc
data16
imul
push
aaa
rclb
pop
xchg
negl
inc
pop
in
cli
sub
ja
sbb
fldt
nop
outsb
adc
and
imul
into
subl
jne
lss
push
fwait
cwtl
mov
xchg
mov
ret
add
xor
int3
jne
jg
pop
pop
jecxz
jo
sub
fimuls
outsb
jg
inc
std
mov
jge
sub
push
xchg
movsb
pop
loopne
mov
and
mov
repnz
test
adc
je
scas
mov
push
das
imul
inc
testl
dec
iret
aaa
js
push
fiaddl
ja
sbbb
lret
xchg
mov
out
mov
xlat
push
push
outsb
adc
icebp
xchg
arpl
add
negb
xor
xlat
mov
aad
push
jp
cmpl
insl
mov
xchg
cli
stos
fsts
pop
stos
or
inc
mov
jmp
or
xorl
pop
ret
cmp
lcall
lret
outsb
sbb
daa
test
ja
inc
adc
lea
or
fists
in
pop
mov
mov
jb
sub
xor
sub
in
xor
xlat
inc
or
mov
fsubs
add
insb
cmc
lret
and
inc
ret
add
pop
sub
pop
sbb
scas
or
push
mov
jle
ds
idivb
lahf
add
dec
notb
in
inc
adc
insl
outsb
cs
cmc
add
inc
in
lahf
js
adc
pushf
iret
out
mov
sti
mov
xor
adc
int3
stc
or
pop
js
adc
mov
sub
loopne
incb
lcall
dec
pop
sbb
xchg
jmp
flds
ss
or
and
pop
and
inc
mov
data16
iret
or
lcall
lea
aam
cmp
movsb
xor
adc
xor
pop
cmpsb
hlt
mov
mov
movsl
push
pop
adc
and
adc
ret
dec
jecxz
out
jne
lahf
insb
iret
add
fsts
les
xchg
and
add
sahf
lret
push
fs
sbb
insl
lahf
cmpb
cltd
add
cmpsl
test
scas
mov
push
shlb
nop
dec
and
stc
ds
pop
jno
jb
lock
imul
adc
gs
icebp
and
repz
jg
and
pop
adc
jno
hlt
or
xor
mov
pop
cs
add
push
sub
int
aad
clc
aas
repz
lds
jne
lahf
mov
inc
xchg
dec
fcomps
das
cltd
loope
or
jle
adc
aaa
dec
js
je
mov
cmpsb
in
cwtd
adc
data16
xchg
incl
repz
js
shr
pop
loope
dec
push
hlt
dec
cltd
das
pop
mov
inc
sarb
sahf
sbb
mov
ljmp
push
sbbl
mov
into
mov
cmp
lahf
xorb
scas
or
add
pushf
pop
adc
sub
or
out
push
testb
pushf
xchg
dec
arpl
push
pop
adc
lds
push
ret
jno
cmp
in
cltd
dec
mov
mov
enter
mov
jmp
cmp
pop
rclb
inc
xor
add
push
dec
lea
mov
mov
js
rcr
mov
mov
aad
add
jb
das
jo
test
mov
fidivrs
fisubrs
aam
fldt
sbb
cmc
test
lret
cmp
ficomps
clc
aad
iret
lret
rcl
fwait
insb
jnp
ja
test
out
cmpsb
int
or
sbb
sub
lret
inc
int
push
inc
jl
push
sbb
popf
data16
out
dec
cmpsl
rorb
dec
xchg
daa
nop
jne
popl
idivl
fcoms
push
cmp
fsubrs
mov
aas
cmp
xlat
sub
jne
dec
in
push
repz
mov
cmpsl
mov
scas
mov
in
loope
and
or
jl
or
popa
xchg
inc
jbe
mov
dec
cld
mov
dec
pop
scas
mov
cmc
add
inc
das
fdivrl
mul
sbb
mov
frstor
dec
cmp
mov
cmp
push
das
stc
addr16
jmp
imul
orl
push
adc
stos
cmp
aas
mov
mov
inc
xchg
cmp
xchg
mov
rorb
push
iret
lods
rcrl
popa
lods
pop
adc
int
xchg
push
scas
add
rcl
shlb
hlt
clc
minps
popf
mov
sbb
out
mov
call
mov
leave
xchg
popa
daa
cmp
push
outsl
cmc
lods
mov
and
lds
lock
test
outsb
pop
sub
push
mov
mov
in
inc
and
dec
adc
push
inc
and
fldt
adc
dec
add
cwtl
shll
inc
dec
cmp
lea
add
or
dec
adc
push
in
nop
test
and
inc
movsl
inc
rolb
jnp
push
xor
dec
push
mov
rcll
and
xchg
faddl
mov
sbb
xlat
rol
pop
nop
hlt
imul
mov
mov
xchg
mov
cmp
lret
jle
sbb
not
xchg
pop
fistl
jb,pn
shrb
push
add
in
jg
loope
pusha
mov
dec
jmp
cltd
cmpsl
sahf
stos
mov
dec
test
cltd
mov
jl
ds
mov
sub
mov
mov
sub
stos
inc
daa
xor
insl
sbb
mov
aad
adc
and
lahf
dec
test
leave
sbb
add
cld
sbb
cs
cmp
xchg
fsubr
into
xor
add
rdtsc
pop
cmc
rcrl
xchg
int
xor
jmp
pop
cmp
cltd
cmc
adc
fistpl
outsb
loop
mov
add
in
aaa
adc
lahf
xchg
or
push
and
push
in
mov
ja
into
enter
xchg
inc
fisubl
inc
dec
pop
jo
or
mov
stos
or
mov
mov
jbe
cwtl
dec
shlb
stos
repz
outsl
sbb
xor
mov
mov
daa
sbb
mov
pop
mov
pop
xchg
inc
adc
mov
xlat
xor
pop
rcll
adc
mov
iret
pop
mov
pop
and
mov
xchg
andl
jnp
lcall
pushf
pop
xchg
ja
push
add
ds
dec
xchg
add
cli
mov
mov
call
cmp
push
pop
xor
inc
add
fsubrs
jnp
and
loop
nop
push
fildll
cltd
loop
repz
push
lods
inc
inc
aad
sbb
mov
pop
inc
gs
push
inc
pop
mov
xor
ljmp
stos
decl
mov
sub
adc
xor
pop
sbb
push
lods
rorl
test
inc
lea
aaa
cmp
data16
xchg
fnstcw
xor
xlat
scas
repnz
add
dec
add
out
inc
ss
adc
mov
cs
fcmovne
push
inc
in
and
shlb
mov
sub
xchg
adc
stos
mov
jnp
cmpsl
popf
jle
out
mov
repz
imul
or
adc
pop
jno
xor
icebp
adcl
push
sbb
pop
jno
xor
jae
test
push
enter
pop
mov
gs
cmpsl
ds
aad
mov
nop
in
imul
pop
xchg
out
mov
jmp
sti
and
rcll
lcall
stos
pushf
xor
and
je
cmpsl
mov
mov
jmp
clc
scas
iret
xlat
jno
and
xchg
lret
or
mov
movaps
cld
shll
js
xorb
and
add
fs
jbe
and
pop
mov
dec
sbb
mov
out
mov
roll
movsl
imul
jecxz
mov
mov
xorb
jmp
xor
push
sub
out
xor
or
inc
jb
mov
or
iret
jge
sub
add
dec
cs
sbb
imul
mov
iret
aaa
popa
sti
cltd
stos
add
in
pop
mov
fstps
mov
dec
and
xor
cmp
das
push
sahf
leave
ljmp
out
mov
stos
out
lret
or
stos
bound
arpl
xlat
cmp
in
fwait
push
out
aam
mov
dec
sbb
loop
je
xchg
pop
dec
aaa
jbe
push
xchg
aam
and
cmc
push
orb
dec
inc
out
cmpb
cwtl
push
xchg
dec
mov
add
int3
movsl
scas
and
mov
jg
push
adc
xchg
das
andnps
xor
repz
ss
movsb
out
lods
dec
mov
jne
sbb
mov
movq
xlat
int
pop
push
jge
cli
push
imulb
sar
adc
xchg
or
outsl
sbb
mov
ja
dec
in
in
call
dec
push
mov
xor
iret
mov
or
nop
out
rolb
inc
inc
cwtl
shrl
jl
and
js
pop
cmp
jge
cmp
outsl
leave
jne
sub
pop
dec
movsl
fwait
inc
mov
pop
nop
cmp
pushf
repz
repz
xchg
or
gs
xor
adc
jecxz
in
add
fcmovbe
je
sub
pop
lahf
lock
or
mov
push
xor
lret
push
mov
loope
push
dec
cwtl
xchg
jg
xchg
push
aaa
mov
jle
movsl
cmc
cmp
cmp
push
mov
bound
lahf
cwtl
je
fcompl
push
das
dec
and
jne
mov
xchg
scas
jns
mov
jo
addl
xchg
mov
nop
fnsave
push
xchg
push
jle
test
pop
cmp
out
jb
cmpsl
js
and
adc
pop
test
fld
and
mov
push
in
inc
push
sbb
add
xchg
orb
xchg
mov
xchg
mov
sub
aam
mov
pop
pop
sbb
nop
rcll
push
cld
pop
mov
sub
insb
lea
fwait
aad
jae
mov
aas
mov
aad
xor
and
fwait
adc
sbb
jno
and
movsl
dec
stos
fwait
icebp
cmp
mov
sub
push
ret
jne
popf
std
scas
dec
fnstsw
adc
test
pushf
filds
sbbb
aaa
nop
xor
scas
jnp
jne
jecxz
or
adcl
mov
cld
lahf
push
push
cmpsl
bswap
lret
fs
dec
insb
jb
test
leave
fdivrs
jmp
cs
push
mov
insl
inc
stos
leave
sbbl
jno
out
outsb
xor
stos
jecxz
and
add
adc
mov
int
rcl
mov
jns
lea
aam
jecxz
add
sub
lods
shl
ds
dec
pusha
sub
xchg
lods
ret
sub
cltd
ds
or
cmpsl
sub
sub
scas
aaa
stc
mov
sbb
icebp
or
lds
add
add
adc
push
faddl
mov
dec
jae
xchg
test
test
or
inc
dec
andl
fistps
movsl
mov
mov
hlt
lods
xchg
inc
or
hlt
clc
mov
aam
clc
icebp
cmp
mov
leave
aad
lea
dec
rcl
sbb
bound
lret
xchg
mov
lcall
mov
mov
pop
mov
popf
inc
das
mov
or
or
pop
inc
xchg
or
dec
mov
pusha
add
dec
lods
lods
ficoml
lret
cmovl
out
mov
adc
out
adc
lock
xchg
inc
sub
idivl
mov
pop
sbb
je
aad
addr16
jg
daa
pop
mov
sbb
ret
out
mov
cmp
lret
mov
push
mov
jle
dec
gs
push
fwait
and
test
xor
adc
jno
dec
cmp
lock
out
dec
lock
mov
and
adc
jl
sub
xor
pop
and
and
adc
test
adc
or
push
jle
rcl
pop
gs
xor
cmp
cmp
fisubl
adc
inc
ror
pop
in
pop
or
out
in
imul
or
dec
lahf
mov
mov
xor
and
cmpsl
popa
shlb
sti
xlat
and
sbb
lcall
pop
jnp
cmp
push
pop
sbb
or
cmp
jle
jbe
dec
push
or
out
ret
xchg
hlt
push
cmpsl
jns
icebp
mov
or
daa
clc
sbb
push
cs
or
shrl
jbe
insl
lahf
add
imul
lds
bound
push
ret
or
add
jbe
imul
popf
add
cmp
repz
shl
into
mov
js
jo
ds
test
mov
std
lret
inc
sub
mov
inc
cmpl
xor
arpl
sub
add
mov
pop
data16
fcmovnb
jecxz
mov
push
add
je
insb
aad
aas
jo
adcb
pop
jp
ja
repz
and
jnp
xor
pop
jno
mov
ss
sub
xor
movsb
ret
enter
movsl
cltd
jmp
push
les
mov
pop
mov
int3
inc
pop
inc
pop
cltd
popf
pushf
in
imul
scas
andb
enter
jne
jmp
xchg
adc
icebp
sub
jb
loope
enter
mov
loop
jmp
cli
or
xchg
fldenv
test
cmp
add
pushf
movsl
lret
xor
push
push
xchg
jle
mov
mov
repz
sub
mov
leave
fisubrs
rcrb
jne
sti
mov
lock
mov
sti
leave
pusha
push
xchg
xchg
cli
repz
inc
sbb
sub
xor
ror
or
and
sbb
and
movsl
cld
dec
sub
ret
es
rcr
or
and
push
pushf
sub
add
and
into
mov
push
sub
scas
sarb
fwait
adc
mov
call
lret
xchg
push
es
xchg
pop
pushf
mov
ss
sahf
jns
inc
stos
and
shll
inc
and
rol
cltd
mov
add
jb
mov
cmp
push
daa
std
addb
out
das
shr
and
xchg
inc
mov
jl
negl
push
pop
popa
xor
inc
mov
mov
das
ds
fcoms
jb
out
mov
loope
call
mov
sbb
scas
adc
xchg
mov
pop
mov
scas
andb
and
xchg
mov
iret
in
pop
xor
push
ljmp
add
lret
add
xchg
test
ja
movsl
push
pushf
sub
mov
jno
stc
cmp
into
sub
ds
les
pop
cmc
add
xchg
pminsw
and
in
lahf
cmp
mov
andps
les
stos
ja
decb
je
pop
xor
repnz
shl
sbb
xchg
insl
sbb
sbb
popf
sbb
or
sbb
adc
jne
dec
and
sbb
dec
xor
ds
js
jne
subl
lock
rol
sub
push
adc
push
movsl
popf
sbb
cltd
fwait
and
xlat
icebp
lret
mov
aas
clc
adc
pop
xchg
mov
mov
inc
push
mov
data16
pop
test
enter
or
or
dec
add
fists
test
or
sbb
aad
cmp
adcl
arpl
out
in
fs
cli
inc
sarb
jbe
mov
xlat
inc
test
inc
mov
cmpsb
loop
add
insl
test
mov
mov
pop
cld
test
popf
add
sbb
pop
insb
cmc
add
push
je
adc
aas
mov
jle
inc
rcll
dec
lods
inc
mov
fnstcw
xor
push
sub
push
or
and
push
mov
stos
das
insl
add
and
shll
cltd
subb
xchg
fs
xchg
loop
mov
jb
bound
push
cmp
mov
mov
jmp
sarb
and
jns
imul
inc
sub
stc
sub
cltd
loop
sarb
and
popa
add
sbb
push
cmp
mov
loopne
popf
loop
shlb
and
jb
bound
push
mov
mov
sahf
test
push
sub
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
ljmp
fsts
lret
lret
daa
faddl
push
pop
add
add
push
add
add
add
add
add
add
add
add
add
lods
add
add
add
add
add
add
add
add
add
add
add
mov
add
xchg
add
js
rolb
add
add
add
cmpsb
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
inc
add
and
jne
pop
add
add
cmp
push
add
add
jbe
js
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popf
add
add
add
add
add
add
add
add
add
add
bound
push
add
add
xor
add
add
test
add
test
sbb
out
flds
sti
add
add
add
add
inc
add
add
aad
push
add
add
add
add
add
sbb
push
add
add
pusha
add
fldl
addl
push
add
add
add
add
jp
jecxz
mov
add
addl
fadds
add
add
add
add
and
sbb
lea
inc
add
add
add
or
movb
add
and
mov
cmc
add
add
add
add
add
add
xor
pop
add
call
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jae
fldl
fiaddl
xchg
incl
js
mov
sbb
mov
add
mov
add
add
add
rolb
add
add
add
add
jbe
insb
add
enter
dec
add
add
add
add
xor
mov
add
or
add
add
call
add
add
add
fldl
add
fldl
add
add
add
add
aaa
add
add
add
pop
add
add
add
add
add
testb
add
add
fadds
leave
add
add
faddl
xchg
add
add
add
add
add
jg
dec
add
lret
add
add
adc
mov
mov
add
js
add
add
add
add
js
aad
sahf
add
add
add
lods
add
add
add
dec
add
add
add
add
add
test
push
add
add
add
add
xchg
add
add
add
add
add
inc
add
push
add
add
add
add
or
rolb
dec
add
mov
sub
stos
add
add
xchg
add
add
add
jbe
js
push
add
add
add
jbe
aam
add
add
add
add
add
add
adc
flds
add
xor
add
insb
add
add
add
mov
add
int3
add
addl
pop
add
mov
add
mov
pop
jle
push
aad
dec
push
rorl
imul
jge
pop
pop
shlb
insb
dec
add
xor
pop
lds
fstpl
lods
mov
outsl
jecxz
or
pop
sbb
mov
dec
dec
les
inc
pusha
inc
test
mov
fistps
insb
repnz
testb
clc
add
dec
push
sub
mov
jge
lock
roll
or
in
sub
add
xchg
ljmp
incb
push
sub
pop
mov
inc
push
sub
outsb
pop
insl
pop
je
lods
adc
add
lret
fistpll
lods
lret
stos
pop
add
int3
sub
int3
mov
je
mov
mov
pop
pop
mov
adc
push
aas
fstpl
lcall
outsl
enter
pop
lea
push
xor
or
jb
mov
ja
push
add
ret
test
testl
out
jle
shl
inc
dec
out
call
sub
xlat
fyl2xp1
popf
cmpl
pop
jo
stos
jp
aas
mov
mov
ljmp
lret
aam
jle
fwait
cltd
sbb
rcrl
xchg
sbb
std
mov
push
xor
dec
mov
jae
cld
rorb
repz
push
cs
jnp
sbb
mov
leave
inc
scas
add
sbb
sub
mov
subl
push
push
aaa
fadds
imul
lods
int3
jl
dec
cmp
je
fs
ja
dec
cmp
insl
lods
scas
out
mov
adc
mov
das
adc
es
cmp
push
xor
dec
cmp
mov
mov
jne
mov
cmp
in
sarl
cs
and
cs
lret
stc
das
jle
popa
mov
insl
fcmovnbe
jns
sbb
icebp
sbb
add
xor
test
mov
sti
divb
ds
pushf
push
hlt
and
sbb
jbe
pop
dec
ficompl
aad
or
and
test
xchg
sbb
pop
mov
sub
mov
or
cld
dec
in
test
inc
ds
fiaddl
les
sar
fwait
push
ficoml
xchg
inc
sbb
setbe
xlat
pop
and
adc
fnstenv
aam
mov
cltd
fcoml
lock
mov
push
add
add
inc
ficompl
cmc
sub
jmp
loope
dec
lahf
jp
flds
mov
jle
lahf
dec
icebp
inc
js
pop
stos
push
fwait
push
pop
int
push
dec
test
int3
jae
scas
dec
mov
into
jge
frstor
inc
pop
mov
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
