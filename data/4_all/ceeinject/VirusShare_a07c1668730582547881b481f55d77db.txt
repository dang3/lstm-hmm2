call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
inc
mov
cmpsb
fs
je
or
mov
daa
in
hlt
push
test
jmp
inc
mov
cmpsb
fs
je
add
adc
and
xor
les
aam
in
hlt
push
test
inc
inc
scas
push
mov
add
adc
and
xor
les
testl
out
xor
xor
loope
ds
daa
iret
xor
ljmp
adc
add
dec
test
stos
sub
lahf
mov
add
adc
fsubrs
fdivrl
js
pop
fcomps
inc
or
rcll
xchg
cmp
cmpsb
in
mov
movsl
cmp
int
in
fwait
jp
shll
jl
stc
test
pop
fbld
push
mov
inc
call
jae
insb
imul
idivb
xor
xor
pop
fadds
dec
xchg
jecxz
test
rcrl
imul
scas
fldcw
jg
aam
adc
pop
add
lods
rcrb
mov
jl
inc
adc
xchg
sbbl
adc
sahf
stc
pusha
pop
movl
fs
je
add
adc
and
xor
les
aam
in
hlt
pop
test
jle
dec
mov
and
xor
popa
hlt
jnp
dec
mov
mov
xchg
adc
sarl
sub
fbld
iret
pop
in
jmp
popa
mov
mov
cltd
jae
add
push
icebp
data16
fidivs
and
adc
inc
lds
and
xor
les
aam
in
hlt
push
test
data16
push
mov
inc
mov
cmpsb
fs
je
add
adc
and
xor
les
aam
in
hlt
push
test
data16
push
mov
inc
mov
mov
adc
test
jge
js
sbb
fcmovu
push
cltd
push
lods
xchg
inc
lods
xchg
jae
adc
std
shrb
inc
push
leave
jae
sub
imul
out
pop
jbe
int3
mov
inc
xchg
mov
aas
lret
enter
mov
popf
lahf
cmp
xchg
mov
and
shlb
mov
loop
out
push
cmp
push
mov
cmp
adc
jl
and
mov
test
xchg
fs
pop
idivb
negl
sbb
or
loope
call
bound
jmp
popf
aaa
cwtl
adc
idivb
sbb
outsl
mov
lret
pop
and
leave
xchg
ds
dec
lea
or
rcrb
cmc
iret
inc
dec
lds
jmp
mov
fwait
sub
mov
sub
data16
insl
sahf
xor
leave
fsubrs
pop
out
scas
xlat
add
aam
push
cli
dec
pop
dec
xor
jae
push
mov
and
out
rclb
adc
jg
arpl
mov
or
ja
add
sahf
xor
and
cmpsl
icebp
cwtl
dec
mov
jp
lret
push
jmp
mov
dec
add
aaa
lahf
fnstsw
push
out
outsl
imul
lcall
jle
stc
insl
mov
stos
gs
add
adc
in
popa
mov
sbb
sub
jb
aaa
lret
lock
in
or
aaa
mov
ljmp
xor
pop
xchg
ret
int
inc
shr
mov
sub
stc
fsubrl
mov
das
push
roll
or
mov
sbb
mov
lods
and
pop
mov
cmp
cld
orl
jmp
insl
nop
pop
cmc
mov
xchg
lods
add
std
xchg
cmp
shrl
inc
imul
pop
ja
in
lret
rcr
int3
mov
into
or
mov
mov
push
jg
sub
loop
and
sti
pop
mov
cltd
rorb
fisttpl
jnp
xchg
mov
jnp
mulb
dec
add
dec
fiaddl
lods
stos
leave
mov
mov
push
mov
sbb
and
adc
shrb
cmp
mov
cltd
stos
add
or
cmp
and
stos
pop
push
in
inc
xchg
lahf
push
mov
cmp
sbb
mov
scas
cmpsb
imul
ljmp
pop
push
push
xor
jbe
adc
push
or
lods
out
arpl
pop
mov
jg
xorl
fwait
push
in
hlt
out
out
push
fsubrs
stos
ljmp
ja
adc
pop
lea
cmpsl
jae
or
aad
das
mov
cs
ficoml
xchg
mov
les
cmp
inc
add
xchg
addr16
inc
add
mov
push
dec
or
fs
pop
ret
in
xor
inc
jg
jmp
loopne
mov
lcall
mov
lcall
das
imul
rol
add
add
test
add
or
ljmp
pop
jp
inc
jecxz
pushf
mov
sub
cs
aam
jp
or
cli
sub
cmp
add
je
mov
mov
push
or
xor
fyl2xp1
in
jne
mov
icebp
lea
or
mov
sub
pusha
pop
scas
in
cltd
mov
mov
xchg
mov
pusha
mov
rclb
rcrl
jo
lock
jns
adc
add
ss
cmpsl
fldenv
stos
sub
xor
ret
adc
pushf
push
or
frstor
sbb
das
cwtl
sbb
jb
or
jne
movsb
push
sub
shl
dec
test
sub
push
and
push
cld
mov
dec
ret
icebp
pop
push
jmp
scas
leave
insb
fidivl
outsb
inc
je
daa
sbb
or
mov
inc
pop
pop
cwtl
scas
test
and
push
ljmp
idiv
xchg
push
dec
icebp
jecxz
imul
mov
sbb
js
sub
iret
push
jbe
sub
sub
push
push
pop
bound
test
loopne
fwait
lds
aaa
shll
mov
aad
scas
xchg
lock
subl
popf
sahf
imul
out
lret
cmpsl
add
daa
dec
aam
xor
lds
inc
xor
lock
or
push
or
pushf
sbb
test
xchg
or
in
pop
mov
daa
jo
jnp
or
xchg
fs
xchg
insl
mov
inc
dec
mov
cmp
cmp
push
movsl
xchg
fmull
rcll
xchg
sub
cltd
jbe
outsb
bound
or
lea
add
cmc
and
cmp
and
out
das
leave
sbb
jg
sahf
jbe
dec
pushf
mov
ss
imul
sarl
cli
push
std
addl
or
in
jae
loopne
push
fstps
sub
test
pop
lds
mov
stos
aaa
popa
stc
sbbl
js
shll
std
push
mov
pop
inc
testl
loope
adc
xchg
daa
lret
sub
bound
icebp
ss
movl
sub
dec
imul
pop
rorb
jl
ds
ficompl
cwtl
aas
arpl
mov
inc
mov
movb
push
sahf
cmp
jge
int3
mov
push
mov
jecxz
push
mov
rcr
push
or
test
dec
mov
cwtl
xchg
jnp
enter
mov
jle
xchg
rorb
les
icebp
mov
mov
hlt
js
jae
mov
add
lods
dec
xchg
xchg
mov
cmpl
push
lea
data16
es
push
xlat
stos
xor
jmp
loopnew
add
lds
out
rcrb
dec
dec
push
testl
jno
pop
enter
push
inc
fildl
mov
inc
pop
fwait
mov
adc
cld
or
xorb
test
imul
dec
in
cmp
jp
aad
stos
pushf
pop
xlat
incl
xor
lret
test
aam
movsl
inc
or
loop
lods
push
mov
jle
push
add
mov
out
xchg
dec
pusha
hlt
enter
xchg
mov
push
je
inc
add
jg
fisttps
ljmp
dec
jge
test
addr16
pop
dec
or
jge
in
lret
icebp
cmp
shll
dec
xchg
aas
das
iret
enter
or
pop
adc
cwtl
cmp
loopne
adc
xor
fwait
cmp
sbb
or
xchg
pop
insl
jmp
pop
jbe
xchg
mov
ret
pop
outsl
jle
pop
lcall
dec
scas
imulb
hlt
pop
mov
mov
mov
mov
and
dec
jmp
pop
jmp
subb
addb
cli
pop
pop
jmp
stos
lea
or
sarb
lret
daa
xor
jo
fdivrs
xchg
lret
xchg
add
inc
xchg
adc
fwait
mov
inc
test
jmp
add
data16
sbb
mov
idivl
mov
cmpsb
xlat
add
push
cli
adc
xchg
dec
sbb
les
pop
bound
jl
sbb
mov
in
call
std
or
sub
mov
js
es
add
mov
gs
xchg
stos
imul
push
xor
adc
out
mov
push
pop
xor
and
or
dec
inc
sbb
popf
sub
stc
xchg
inc
xorl
lods
outsl
adc
xchg
sbb
jnp
inc
push
sbb
or
aam
sub
dec
stc
jl
lea
jg
push
sbbb
sti
fnstsw
out
push
fadds
divl
mov
pop
pop
out
xchg
or
jbe
mov
xchg
fstl
je
push
stos
loope
pop
xor
mov
aaa
idiv
mov
mov
sub
cli
or
jle
loope
popa
xor
dec
push
ljmp
sti
imul
or
mov
mov
or
mov
ljmp
stos
and
pusha
sbb
pop
mov
testl
cmpsl
rolb
sub
adc
adc
adc
xor
aas
dec
push
aas
out
daa
sub
jp
loope
mov
jge
adc
call
scas
lods
cltd
dec
shrb
fiaddl
cmp
dec
outsl
fbld
cld
das
in
mov
popf
cmp
jo
cmp
cld
mov
es
push
sub
scas
and
fwait
jo
pop
cli
and
pop
sub
sbbb
test
mov
push
or
shll
inc
inc
icebp
mov
cld
insb
test
sarl
push
cltd
and
push
mov
dec
fadds
ret
rolb
adc
jo
jl
cmpsb
dec
cltd
adc
fiadds
add
sarb
sub
add
or
push
jge
fwait
jmp
pop
popf
es
jmp
xor
and
repnz
ja
rcrb
cli
xchg
mov
xor
mov
or
jle
into
popa
push
and
dec
mov
or
test
imul
enter
push
sub
dec
fsts
cmpsl
xor
mov
mov
inc
mov
mov
lret
insb
movsl
mov
std
pop
pop
mov
repz
xor
outsb
cmpb
lock
cmp
pop
jp
xchg
sub
mov
lds
inc
inc
sbb
in
sbb
push
imul
sbb
xor
scas
loop
das
int3
int3
mov
cmc
adc
sub
xchg
mov
xchg
rolb
roll
shlb
xor
sbb
mov
imul
sti
fdivrp
xchg
inc
std
pushf
fs
mov
rcl
pop
cmpl
lret
pop
mov
sub
jmp
cmp
movb
adc
lds
movsl
push
sbb
xor
xor
and
jb
out
adc
popa
dec
in
or
dec
or
pushf
sbb
pop
dec
pop
and
dec
push
jo
stos
testl
mov
add
sti
in
jns
jmp
pop
scas
fcoml
add
or
aas
addr16
or
adc
dec
test
test
mov
xor
clc
dec
scas
addl
fcmovnb
jge
fldt
cltd
in
or
hlt
xor
push
movsb
es
mov
faddl
push
dec
mov
push
popa
lret
and
mov
or
arpl
push
sbb
dec
nop
cmp
mov
add
fsubp
gs
fs
loopne
popa
sub
cltd
sub
mov
fisttps
push
outsl
sbb
dec
push
mov
nop
test
dec
fstps
dec
xchg
push
cmp
mov
jl
jnp
inc
jno
lods
pop
or
lret
jl
and
sti
inc
pop
adcl
xor
jae
aam
movsl
or
imul
cmp
inc
mov
xchg
aas
cmp
mov
cmp
ja
jmp
inc
je
pop
dec
inc
cs
jmp
out
xchg
mov
scas
add
popf
jmp
cmp
repz
and
mov
cld
jno
mov
mov
xchg
insb
test
jnp
sbb
cli
ja
xchg
xlat
fsubl
push
pop
sub
adc
jmp
xchg
xorb
jle
xchg
out
push
out
andb
imul
outsl
sub
jb
fsubrp
ja
sahf
cmc
mov
cmp
dec
jae
push
xor
xchg
mov
fwait
aam
fidivs
scas
fisubrs
sub
stos
test
daa
add
int3
dec
pushl
cmp
or
ror
add
imul
std
inc
mov
lret
in
add
inc
sub
into
cmpsl
sbb
stos
cmpsl
popa
mov
push
cld
pop
pop
arpl
push
mov
mov
sbb
pop
push
hlt
lahf
cmp
lods
in
push
movzbl
ja
or
fstps
pop
sub
pop
shlb
lea
hlt
dec
mov
jle
inc
in
jg
add
out
out
fistpl
mov
fcmovbe
loopne
cs
dec
pcmpgtw
pop
sub
pusha
jge
movsb
dec
push
imul
mov
outsb
mov
xchg
mov
xlat
outsl
stos
lds
pushf
pop
in
aaa
cltd
mov
enter
jb
mov
leave
ds
lock
and
pusha
mov
mov
pop
fistps
xchg
filds
jnp
pusha
or
adc
jae
add
mov
cmpsb
movsl
test
imul
popf
push
mov
jns
insb
icebp
pushf
lahf
popf
push
enter
das
mov
in
out
dec
xchg
stos
sbb
iret
clc
outsl
mov
adc
push
test
les
xorl
ds
lods
cmc
out
mov
jg
pop
icebp
jp
les
repnz
ret
add
xor
mov
imul
in
rcr
and
cld
pushf
ss
aad
jno
fisttpll
sbb
ret
fwait
mov
outsl
sarb
int3
sarl
cwtl
jae
cmp
cmp
jle
jb
dec
jmp
addb
popa
and
lock
insb
xchg
test
cs
fcomps
loope
int3
sarl
or
test
fs
dec
aad
stos
xchg
js
or
int
jnp
in
sbb
stos
mov
sub
mov
mov
and
mov
cltd
aam
mov
in
inc
cmp
outsl
in
add
iret
push
loopne
pop
adc
add
xchg
or
int
pop
dec
dec
outsl
mov
js
divl
sbbb
je
jecxz
loope
nop
loope
cmp
jae
cltd
aad
pop
stos
cmpl
loope
sub
lret
dec
je
mov
jecxz
xor
stos
sbb
outsl
cmp
outsb
dec
outsl
pop
adc
cmp
test
ljmp
adc
testl
arpl
push
shlb
loop
int
mov
dec
rorb
cmp
mov
or
dec
mov
add
roll
adc
loope
inc
bound
das
sub
adc
cmp
aas
ds
aam
out
inc
enter
xchg
push
lret
lret
xchg
mov
es
mov
in
mov
mov
in
mov
mov
pop
mov
out
cli
pop
rclb
cmp
sbb
in
push
fidivs
ficoml
dec
lods
pop
cmp
adc
arpl
pop
jbe
std
test
mov
pop
sti
data16
cmpsl
sub
xor
adc
sbb
sarl
mov
out
sbb
popf
jne
adc
add
decl
das
mov
mov
popa
inc
inc
clc
rcl
pop
imulb
roll
adc
add
pop
arpl
mov
sbb
sbb
inc
ficomps
aas
loope
pop
scas
jp
xchg
dec
sti
pop
test
mov
or
adc
test
mov
dec
fcomi
or
cmc
clc
outsb
fildl
loop
or
mov
or
or
scas
push
faddp
xlat
ficompl
int
dec
das
call
xor
bound
pop
and
cmp
sub
mov
mov
imul
xchg
adc
stos
sub
xor
repnz
mov
push
cmp
fwait
mov
sarl
int
cmpsb
jb
jne
scas
add
in
ja
adc
cmpsb
aam
mov
adc
std
and
pop
testb
in
pop
cli
xchg
fisttpl
ret
ds
test
sub
gs
cmp
mov
popa
pop
je
lods
mov
jb
push
xor
push
pushf
aas
lahf
or
xor
sub
pop
cli
push
or
dec
in
dec
mov
jecxz
inc
add
call
xchg
jnp
aad
inc
mov
jmp
mov
lcall
push
adc
stos
push
cmp
lahf
in
jle
add
push
adc
aam
adc
sbb
loop
xchg
dec
sbbb
fistpl
loopne
bound
out
fwait
mov
pop
cmc
shll
mov
outsl
out
cmp
push
push
cmp
fxch
jo
push
mov
shll
repz
pop
and
mov
daa
sub
loopne
rclb
xlat
lods
scas
adc
cmp
decb
lcall
pop
mov
bound
mov
mov
jmp
pop
xlat
mov
mov
jne
popa
inc
pop
push
pop
lret
jne
jge
jmp
adc
test
movsb
arpl
or
jmp
mov
int3
push
inc
mov
sbb
sbb
lock
popf
jne
adcl
jnp
bound
std
mov
sbb
bound
testl
mov
jo
loopne
es
mov
out
sub
imul
mov
out
xchg
fcomp
mov
jmp
lahf
addr16
icebp
repz
mov
arpl
sahf
and
mov
cli
push
stos
jns
pushf
sub
in
sbb
sbb
cmp
sub
enter
je
mov
orb
pop
jg
mov
or
inc
iret
fistps
sub
sub
enter
adc
repz
insb
and
push
addr16
lea
movsl
insl
or
xor
pop
sbb
stos
loopne
je
sti
call
lea
mov
xchg
xor
bound
repnz
lods
cmp
dec
mov
jg
mov
mov
sbb
pop
out
fstl
or
cli
pop
mov
push
push
jb
mov
shll
test
out
xor
push
adc
out
cltd
aam
repz
insb
push
mov
insb
and
adc
and
sarb
in
pop
iret
mov
and
adc
xchg
adc
popa
lret
jle
xchg
into
cs
push
mov
int3
imul
cmc
dec
push
jns
sbb
cmp
imul
cmp
push
push
test
mull
ficomps
or
test
pop
push
cmp
inc
jg
cltd
mov
aam
pop
in
and
or
fbld
lahf
pop
hlt
cltd
fistl
jl
adc
fcmovbe
pop
and
push
mov
jbe
lcall
insl
fcmovnu
mov
lret
lea
adc
xor
ret
shll
cmpsl
ds
adc
mov
dec
pushf
testl
and
dec
popf
ljmp
sub
mov
or
jp
incb
mov
lret
mov
or
or
cltd
out
lea
add
xchg
add
sahf
negl
mov
int3
cmp
add
adc
push
sbb
scas
jnp
inc
xchg
jbe
mov
dec
or
les
xor
jns
or
stc
sub
or
mov
adc
jne
inc
sbbl
rcrl
mov
lds
lret
or
adc
xchg
dec
and
je
lret
fnop
sub
adc
fidivrs
movsb
es
mov
pop
dec
loop
push
les
sarl
je,pn
dec
add
mov
xor
mov
mov
push
add
inc
jle
test
ret
pop
aam
dec
subb
xchg
les
jae
xchg
adc
mov
pop
fldenv
push
in
pop
sub
add
add
rorb
jae
jns
cmpsb
adc
xchg
add
nop
xor
shl
pushf
sbb
repnz
or
repz
add
or
pop
je
out
mov
mov
lds
or
jb
js
bound
dec
jge
lret
mov
sbb
pop
adc
and
repz
and
loope
loop
popl
pushf
pop
in
adc
mov
imul
adc
insb
mov
adc
sub
xor
jl
lret
out
xlat
loope
mov
cld
in
mov
cmpsb
xchg
sarb
inc
in
jecxz
add
mov
fmuls
cmp
push
push
in
jo
ret
mov
xchg
dec
pop
inc
aam
inc
pop
mov
sbb
lcall
enter
iret
mov
pop
daa
cli
inc
jg
cmp
xchg
popa
mov
test
mov
sub
aad
push
xchg
fsqrt
call
mov
pusha
in
adc
lcall
js
aaa
movsl
stc
cs
data16
cmp
add
adc
and
xor
les
aam
in
hlt
push
test
data16
push
mov
inc
mov
cmpsb
fs
je
add
adc
and
xor
les
aam
in
hlt
push
test
data16
push
mov
inc
mov
cmpsb
fs
je
add
adc
mov
aam
in
cmc
add
mov
inc
mov
mov
add
adc
movsb
mov
cmp
sub
sbb
pop
sub
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
cli
je
fisubrl
fdivrs
jp
imul
sub
cmp
pop
sbb
jnp
mov
fisubrl
stos
push
lcall
cmp
dec
cmp
and
pop
sbb
or
sbb
fiaddl
lret
imull
jecxz
aam
js
je
dec
cmp
jnp
mov
out
jae
and
divl
sbb
movsl
mov
jle
outsl
dec
cs
and
xchg
xor
daa
fs
ja
xchg
out
dec
movsl
inc
mov
lds
cwtl
dec
push
imulb
mov
xchg
xor
aam
jp
ds
pop
cmpsb
mov
jg
or
dec
ljmp
lret
mov
add
hlt
out
dec
movsb
push
and
lds
movsb
cltd
cmpl
add
clc
xor
sahf
sbb
iret
sti
xchg
pop
cmp
fucomip
aaa
cmp
aad
dec
jp
test
dec
adc
cmpl
mov
sub
aam
and
cmpsl
movsb
pop
imul
fisubrl
lret
lret
stos
fistpl
lea
pop
cmp
cmp
mov
mov
call
fdivs
dec
divps
xor
and
das
jns
dec
sbb
lret
mov
test
xchg
pop
outsb
cmp
dec
dec
pop
cmp
inc
pop
jbe
jg
lahf
fucomp
fdivl
scas
stos
fistpl
or
pop
sub
cmp
pop
sbb
jnp
mov
fisubrl
stos
fistpl
or
pop
sub
cmp
pop
sbb
jnp
mov
dec
inc
or
xchg
inc
push
test
jno
jge
or
dec
jae
mov
incl
cmp
aam
cmp
pop
movsl
sbb
inc
cld
ja
in
jbe
xchg
sbb
cmpsl
arpl
mov
dec
insb
mov
lock
call
cltd
xchg
dec
push
pusha
mov
dec
adc
mov
scas
divb
ljmp
imul
fistl
and
pop
adc
sub
sbb
imull
adc
inc
mov
stos
popf
jp
or
add
icebp
leave
and
repnz
pop
pop
out
mov
jb
and
dec
and
std
out
sbb
fsubrl
add
or
push
mov
std
out
cs
lods
lods
insl
fmull
imul
stos
xchg
push
popf
addr16
fistpl
jg
and
xchg
lods
inc
adc
jnp
fildl
ja
add
add
sbb
xor
push
jg
mul
sbb
lcallw
adc
mov
dec
ss
xor
daa
cwtl
cli
dec
int3
lds
cmpsl
cli
mov
xor
testl
push
imulb
cmp
lcall
adc
add
ss
arpl
sbb
testl
push
movsl
push
jle
shrl
sub
jnp
and
xchg
dec
add
dec
push
cld
mov
and
xor
ss
adc
addr16
xchg
fs
addr16
inc
fidivrs
pop
sub
mov
push
addb
inc
test
int
out
mov
xor
divl
cmp
lock
push
inc
push
bound
pop
jns
mov
jecxz
cmpsl
lock
xlat
pop
out
add
mov
fisubrs
aaa
les
sti
cwtl
dec
mov
pop
insl
imul
push
mov
dec
or
sti
jae
cmpsb
rorl
and
gs
int
dec
lret
mov
and
fstpt
mov
cmp
push
lcall
xchg
pop
sahf
je
or
jb
outsb
imul
and
inc
jp
fbld
imul
out
fs
lods
sub
xchg
add
sub
cmpsl
es
adc
sub
in
push
fwait
xor
dec
rol
pusha
mov
xchg
out
ljmp
jle
jg
or
stc
lea
in
mov
fnstenv
add
movsb
sub
out
xchg
cmp
cltd
sub
or
xorb
lahf
add
mov
rol
fdivrl
test
outsb
fisttps
popf
inc
jbe
hlt
push
adc
clc
dec
imul
cmpsl
lcall
cmp
sub
nop
paddusw
or
xchg
or
shll
jg
fucomp
sub
jb
in
dec
and
cmp
scas
pop
sbbb
fstl
adc
nop
insl
test
sti
xchg
sarl
jmp
stc
xor
push
mov
lret
xor
fldcw
arpl
and
pushl
daa
adc
mov
xor
loop
lods
or
jbe
push
sub
and
cmp
cmp
pop
and
enter
inc
dec
adc
inc
jne
lcall
nop
push
or
mov
pop
ret
sub
lret
mov
add
dec
adc
lods
pop
lods
pop
and
shlb
adc
addr16
xor
mov
dec
loope
xor
dec
xchg
cmp
xchg
cmpsb
mov
outsb
iret
xchg
pop
lds
inc
mov
cmp
adc
aam
pop
or
cmp
scas
fwait
loop
push
int3
js
in
cld
hlt
sbb
push
imul
cmp
xor
xor
push
dec
xor
cmp
daa
aas
mov
push
outsl
out
je
dec
div
xchg
and
rorb
les
test
sarl
das
mov
in
addr16
fisubrl
enter
fwait
cmp
dec
add
jmp
pop
mov
or
das
xchg
popa
aam
xchg
mov
movsb
push
insl
mov
dec
aam
adc
test
pop
add
pusha
test
sub
mov
sub
sub
nop
loope
pop
jbe
add
movsb
scas
loope
jae
ds
add
loopne
inc
in
and
or
push
leave
popf
mov
arpl
hlt
push
cmp
push
xchg
add
mov
xlat
pop
hlt
in
loopne
arpl
pushf
movsl
int
sbb
cmc
lods
sbb
aaa
scas
imul
pop
sub
sbb
sbb
fsubrs
xchg
jle
pop
rcrb
fs
test
aam
int3
lcall
je
xor
jle
pop
lret
jo
in
test
test
hlt
xchg
scas
xor
out
mov
and
mov
inc
mov
in
jo
loop
add
clc
sbb
or
scas
push
sbb
addr16
daa
mov
sub
cli
fwait
lods
mov
mov
adc
xchg
test
jmp
mov
and
les
out
push
pop
and
and
and
mov
jmp
cmp
jmp
jno
dec
test
movsl
mov
push
pop
xchg
add
jl,pt
push
test
rcll
xor
sub
sar
mov
jne,pn
arpl
js
jl
jmp
out
pusha
inc
aas
sbb
scas
add
dec
sbb
pop
lret
jecxz
int
xchg
sub
cmp
mov
pusha
jbe
sbb
aad
pop
popf
dec
popa
mov
pop
mov
test
mov
mov
mov
pop
adc
loopne
dec
shrb
xchg
jbe
mov
das
cmpsb
stos
sti
dec
mov
int
imul
movsl
lock
lahf
inc
mov
aad
mov
push
mov
out
xchg
mov
xchg
xchg
stos
movb
cmp
ss
stc
and
sahf
sub
or
jg
ficomps
xchg
mov
ds
mov
xor
cld
aad
into
cmpsb
sbb
stos
mov
push
add
gs
xchg
test
scas
jae
mov
jle
push
xchg
mov
cli
adc
xor
pushf
dec
dec
mov
sub
mov
mov
pusha
movsb
push
mov
lret
hlt
add
fldl
into
cmp
mov
std
jo
cmpsb
sub
adc
cmc
inc
stos
fstps
mov
lret
sub
inc
mov
or
test
scas
hlt
call
push
lret
xor
xor
out
cltd
mov
scas
idiv
cld
mov
nop
mov
out
mov
pop
movsb
cmpxchg
push
jg
mov
cwtl
mov
adc
add
mulb
outsb
add
into
add
ret
gs
daa
mov
push
test
scas
movsl
add
sbb
sub
and
jbe
in
jp
xchg
xchg
xchg
aas
jmp
pop
xchg
cmc
and
sti
sub
mov
mov
roll
iret
stc
movsb
ret
adc
ss
lods
mov
lret
jl
cli
xchg
dec
xor
enter
sbb
jno
jo
sahf
cld
xchg
pop
or
push
hlt
adc
pop
mov
in
inc
mov
gs
loop
sbb
cmc
pop
cwtl
fcompl
pop
pop
and
pusha
cld
stos
pop
mov
mov
ljmp
jmp
sub
shlb
mov
jnp
adc
xchg
movsl
mov
xchg
xor
hlt
fprem
cmp
aas
xor
jl
cld
or
nop
dec
xor
xchg
mov
cwtl
xchg
repz
fwait
gs
int
mov
aaa
mov
mov
test
int
and
jmp
cmp
addr16
xchg
sahf
scas
fnstenv
nop
jmp
xchg
sbb
call
iret
arpl
into
dec
lods
movsl
inc
sub
andb
mov
ss
insl
out
xchg
xlat
xorb
sub
test
xor
stos
push
pop
push
push
mov
mov
cmc
dec
mov
add
push
nop
sub
cld
cltd
ss
dec
das
dec
push
pushf
cs
out
or
cmp
in
adc
shll
push
mov
cmpsb
imul
lea
pusha
outsb
mov
dec
xchg
daa
fincstp
shlb
stos
cmp
ja
or
popl
movsb
es
jecxz
mov
fdivrs
mov
fnstsw
fwait
mov
add
xchg
mov
imul
insl
sbb
sub
fwait
jle
movl
imul
xlat
adc
aad
cs
sarl
hlt
xchg
dec
xchg
fsubs
push
aad
mov
repz
dec
push
divl
mov
xor
xor
fmul
and
push
pop
test
jae
roll
and
lds
call
loop
cmpsl
dec
dec
sbb
push
or
rclb
mov
lret
stos
dec
jo
addr16
push
sbb
outsl
jnp
call
or
das
ss
scas
call
gs
inc
int3
push
push
push
lods
sbb
xor
in
cmp
stos
sbb
sub
enter
xor
insb
cli
push
push
dec
sbb
inc
in
in
std
insb
inc
jbe
jp
fnstsw
sbb
sub
mov
sbb
mov
pop
int3
shrb
jp
inc
or
xchg
fcmovbe
mov
dec
pop
adc
pop
inc
js
cli
adc
jnp
mov
jmp
ds
test
ja
adc
mov
cltd
add
pushf
pop
cmp
cwtl
lods
inc
jb
cmpsb
lcall
xchg
pop
xchg
adc
lret
push
test
negl
idivl
pop
lock
outsl
out
jmp
mov
popf
jae
incb
sbb
mov
nop
testl
jge
loop
int
enter
stc
sbb
jns
sbb
pop
lahf
push
push
iret
jns
orb
addr16
mov
test
cmp
sahf
jle
lcall
adc
mov
clc
jg
leave
add
test
ss
fistpll
idivb
loop
inc
repz
dec
dec
sub
je
repnz
mov
movsb
mov
push
xor
inc
mov
mov
aam
cmp
fidivrs
sbb
add
lret
cs
das
xor
push
cmpsl
pop
and
fwait
mov
scas
jae
mov
pop
mov
lods
or
test
mov
adc
pop
incl
cs
inc
nop
mov
mov
mov
movsb
add
ss
movsl
dec
into
es
jp
xchg
xor
stos
xchg
jecxz
cmp
xchg
dec
and
mov
bound
test
ljmp
xchg
mov
jo
mov
cmp
pop
sub
aaa
incb
or
push
xchg
push
dec
js
das
decl
test
insl
push
enter
push
in
pop
movsl
sub
or
pushf
and
test
push
and
push
and
rclb
push
out
test
iret
dec
addb
orb
mov
add
pop
add
sbb
ss
xchg
sub
loop
pop
dec
nop
fmuls
js
mov
scas
pop
cmc
dec
sbb
xor
test
pop
mov
loope
insb
jb
iret
test
call
fsubrs
das
int3
mov
or
or
cmp
adc
xor
sarb
clc
imul
mov
nop
popa
lcallw
mov
xor
mov
and
cmp
inc
mov
mov
mov
movsl
inc
and
jae
aam
push
or
jo
mov
adc
cmpl
inc
pop
fstpl
mov
sub
cmpsb
loope
xchg
cmp
out
inc
mov
out
gs
or
addr16
test
jmp
jmp
xor
adc
les
nop
jmp
mov
mov
shlb
icebp
lods
push
jnp
gs
inc
js
fisttps
fbstp
pushf
fisttps
test
ljmp
xchg
cwtl
out
movsb
divb
dec
mov
sub
push
aaa
pushf
scas
xchg
sbb
mov
shlb
mov
and
mov
jno
mov
int
jno
repz
mov
lods
push
lret
data16
xor
mov
jnp
pop
ja
data16
cmc
and
outsb
data16
aad
jns
mov
push
adc
or
mov
mov
data16
sub
push
mov
iret
inc
jle
in
mov
lea
in
les
in
pop
aam
push
rol
faddl
mov
jp
and
sbb
ja
push
sti
adc
mov
sbb
bound
mov
cmp
mov
xchg
bound
xchg
inc
pavgb
stc
aam
mov
repz
dec
pushf
lcall
ljmp
repz
inc
adc
cmpsl
ja
mov
lahf
mov
mov
lahf
pop
shrl
jae
mov
xchg
add
xor
mov
cmpsl
inc
mov
mov
xchg
sbb
adc
arpl
cmp
sbb
bnd
lods
pop
jnp
scas
inc
test
or
jno
nop
ja
mov
adc
push
and
xor
daa
out
das
in
jns
subb
in
push
sahf
or
inc
pop
packsswb
movl
shll
in
add
int
adc
cmpsl
pop
jne
mov
xchg
xchg
mov
and
fisubrl
jne
add
mov
mov
or
lock
leave
ds
cmpsb
jbe
cmp
push
out
test
adc
int3
iret
xchg
fdivp
xchg
stos
jecxz
jo
add
popf
mov
jmp
xor
sub
xchg
mov
push
testl
aad
in
sbb
fldt
cmpsl
jnp
nop
push
cmpsl
clc
jl
xchg
ficomps
jns
mov
pop
xchg
sbb
dec
call
push
and
xor
lret
push
mov
adc
insb
mov
adc
ficoms
adc
lahf
jg
cmp
lfs
outsl
mov
cmp
dec
mov
fs
lcall
out
sbb
push
sub
add
aam
loopne
mov
inc
cmpsb
test
divl
adc
dec
dec
dec
bound
shrb
mov
adc
popa
pop
sarl
in
popf
dec
or
jle
movsl
shlb
cmp
shlb
jnp
xchg
hlt
inc
mov
gs
ss
mov
mov
push
cmpsl
pop
mov
clc
jns
jbe
fistpl
bswap
sbbb
xchg
and
mov
cmp
cld
sti
fsubrs
xor
mov
pop
sub
inc
sub
xlat
dec
leave
out
out
rcl
or
add
jl
addl
mov
lahf
ret
lods
pop
insl
or
loopne
dec
xor
and
testb
mov
pop
stos
mov
sahf
outsb
jg
cmc
sarb
fstps
mov
mov
stc
out
lea
aam
into
orl
xor
xchg
jnp
test
push
xchg
addl
repnz
imul
pop
mov
pop
sbb
lods
loopne
lock
clc
mov
mov
xor
adc
sbb
movsl
pop
add
in
test
ljmp
decb
clc
scas
jnp
and
lods
fistpl
and
mov
leave
inc
adc
gs
mov
inc
sbb
mov
or
mov
push
push
fiadds
and
lcall
sbb
lret
out
outsl
or
sub
mov
add
xchg
and
mov
mov
and
sbb
xchg
mul
xor
mov
test
fsubrs
rcl
sub
popf
fldenv
dec
test
mov
call
jp
xor
lds
add
dec
shll
adc
and
test
lods
addr16
les
aad
pop
inc
subb
in
clc
test
dec
push
inc
rorl
fcomi
loop
pop
addr16
pop
ljmp
iret
add
imul
mov
icebp
pop
push
xor
jae
push
lcall
mov
lahf
mov
jle
dec
das
popf
mov
out
fbstp
sub
adc
gs
mov
lea
push
xchg
pop
add
mov
sub
mov
jns
lods
call
test
das
cmp
sub
sbb
xor
popa
inc
jno
shr
push
sub
sti
lcall
cltd
cmp
daa
xchg
sub
mov
push
pop
xor
sub
jecxz
add
fimuls
arpl
mov
divl
push
jmp
outsl
sbb
sub
fs
lods
pop
mov
add
sub
mov
sub
mov
adc
in
pusha
xchg
mov
xchg
and
leave
sub
adcl
jno
cmp
cmc
and
scas
testb
jl
push
hlt
lds
cwtl
mov
lds
xchg
lret
popa
movsl
sbb
mov
leave
and
xchg
xor
dec
dec
inc
jl
cmpl
jmp
jbe
adc
jns
fnstenv
sbb
mov
mov
xchg
in
push
out
sarl
mov
out
sub
sbb
sbb
push
jg
pop
lods
lods
cmp
dec
outsb
sub
fwait
cwtl
testb
imul
push
rolb
lods
cmp
pushf
inc
incl
dec
lds
lcall
xchg
cs
cmc
inc
push
xchg
imul
sub
icebp
mov
jmp
fisttps
xchg
adc
mov
cmp
aas
push
movsb
or
push
jne
leave
inc
int
fld
lock
popf
mov
add
and
inc
mov
arpl
ja
mov
cs
movsl
pushf
mov
aam
and
pop
jecxz
push
in
test
inc
out
out
ss
inc
sub
fs
fwait
sub
xor
xchg
aas
jge
scas
outsb
cltd
dec
out
mov
nop
int
hlt
aas
cwtl
enter
pushf
jnp
xchg
or
jns
cmpsl
pusha
adc
adc
sbbb
enter
pop
roll
ds
jns
jne
loope
and
or
ds
xchg
mov
data16
ljmp
and
fstl
mov
shll
push
and
pop
out
out
mov
sub
xor
mov
outsl
movsb
loopne
scas
or
mov
add
mov
sub
or
pusha
adc
jnp
arpl
sub
sti
xor
jl
adc
movsb
or
fs
xchg
leave
pop
movsl
pop
das
arpl
xchg
dec
jl
clc
rep
cwtl
jbe
out
incb
mov
jns
dec
pop
mov
adc
inc
pop
pop
xchg
aam
sub
cmp
xor
add
es
sub
ja
outsb
movl
imul
std
nop
dec
lea
inc
push
cmp
sar
or
xchg
xor
dec
xchg
mov
xor
cmpsb
jnp
aaa
cmp
nop
xchg
jb
je
push
call
adc
jg
int
cmpsl
mov
call
in
mov
cmpsl
je
testb
mov
or
das
addr16
jb
and
movsl
xor
xor
jae
xor
lods
repz
mov
dec
sub
and
js
or
xchg
fdivr
subl
xor
xor
in
add
stc
clc
cmc
sub
mov
or
lds
aam
shrl
push
stos
jbe
push
pop
int3
and
mov
mov
lret
pop
add
add
arpl
pop
sub
in
pand
int3
jo
mov
popf
repz
fmulp
fnstenv
jb
jl
pop
fwait
aam
dec
jbe
testb
repz
mov
rol
add
jnp
shll
insl
dec
dec
aam
push
and
pop
xor
test
xor
in
sub
inc
mov
jg
cli
mov
push
addr16
sbb
sub
mov
fidivs
in
adc
ret
es
mov
in
sub
mov
push
sbb
test
adcl
pop
outsb
mov
lret
cmp
mov
cltd
jno
jmp
dec
mov
loope
ja
xlat
sbb
adc
xchg
pop
mov
jge
dec
jmp
in
insb
cmp
mov
xor
shl
jne
outsb
test
pusha
out
mov
jle
push
aaa
aaa
jnp
mov
cmpsb
push
sub
lods
pop
insb
fistps
cmp
sti
add
cmpsb
imul
lahf
lods
xchg
cmp
push
adc
mov
pop
ror
lea
jmp
dec
mov
adc
adc
test
cs
loope
icebp
mov
cmp
sti
adc
std
inc
gs
adc
sbb
cmc
inc
nop
inc
push
lsl
roll
fcmovnb
lret
lret
stos
fistpl
or
pop
sub
cmp
pop
sbb
jnp
mov
fisubrl
stos
fistpl
or
pop
sub
cmp
pop
sbb
jnp
mov
pop
ror
mov
lcall
sbb
dec
cmp
dec
sub
dec
or
mov
fisubrl
stos
fistpl
hlt
push
lock
dec
ret
pop
movsb
push
jp
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
cmp
or
js
out
pop
dec
pop
cwtl
aaa
mov
clc
push
call
addr16
xchg
sub
js
push
out
pop
test
stc
aaa
mov
mov
xor
fiaddl
data16
or
inc
testl
lock
in
daa
xchg
adc
addr16
xchg
fcomps
fsubs
jl
push
jecxz
mov
mov
fdivrl
movsl
aam
aam
cwtl
rorl
cmp
icebp
lds
sbb
and
iret
insl
xchg
insl
inc
push
lret
mov
sub
push
mov
or
ljmp
call
mov
out
in
inc
add
jnp
cmpsl
xchg
push
sbb
enter
cmp
enter
and
pop
test
loopne
shl
ret
fs
jmp
push
cwtl
enter
inc
call
ljmp
negb
mov
jge
mov
pop
adc
jl
jne
mov
data16
or
pop
imul
out
pop
xor
out
aaa
mov
inc
ljmp
xchg
into
pop
mov
dec
mov
jb
jae
pop
in
popa
mov
xchg
jne
es
dec
test
imul
lods
sbbb
cwtl
push
lock
xorl
aaa
push
fiadds
fistps
sub
push
out
pop
test
cwtl
aaa
mov
clc
push
call
cmp
sbb
push
out
pop
test
cwtl
aaa
mov
clc
push
call
cmp
fiaddl
cmpb
ljmp
scas
mov
inc
add
outsb
int
scas
jns
pop
dec
std
insl
lcall
adc
fstl
cmpsl
repnz
or
pushf
inc
jl
mov
jecxz
ss
jbe
in
mov
mov
or
arpl
jns
imul
hlt
xorl
dec
leave
sarb
lods
hlt
xchg
pop
fucomp
mov
les
call
das
cmp
lcall
mov
push
test
mov
scas
inc
outsb
jno
rcrb
sbb
adc
sahf
loopne
xorl
popf
mov
xchg
aaa
jge
adc
pop
push
pop
inc
mov
movsl
inc
jmp
and
lret
ficomps
es
fs
xchg
xchg
lods
push
dec
es
xchg
push
out
lahf
addr16
cmp
xlat
arpl
inc
or
xchg
ljmp
je
adc
cmc
adc
es
shlb
leave
and
fs
leave
jae
mov
lret
hlt
xor
scas
cld
mov
and
jg
or
adc
subb
loopne
jecxz
cmc
lcall
stos
add
bound
sbb
mov
bound
stc
jle
adc
std
in
and
addr16
nop
sarl
add
nop
pushf
mov
jp
pop
fnstenv
cmp
xchg
add
cmp
popl
sbb
mov
insl
adcl
mov
sub
lock
sarl
mov
pop
inc
das
scas
aam
cwtl
rcrb
mov
pop
popf
pop
ret
mov
loopne
inc
dec
fsubl
pop
test
rcr
fstps
rcrb
in
roll
mov
push
and
fwait
insb
loop
or
stos
and
in
mov
fninit
jg
inc
sbb
sub
sahf
and
mov
add
lds
cmp
in
fwait
rcrb
lahf
mov
xchg
fwait
xor
pop
lret
pop
fldt
nop
xlat
pop
push
mov
shlb
or
and
sub
add
jecxz
adc
stos
test
movsb
xchg
xchg
mov
loop
add
scas
test
sbb
lock
mov
jmp
push
pcmpeqw
inc
or
xchg
push
aam
pop
xor
dec
push
icebp
jge
lds
cltd
aad
rcl
pop
enter
add
sbb
clc
or
bound
mov
push
push
jns
dec
cwtl
xor
xchg
sub
inc
out
and
inc
test
pop
fistpl
scas
pop
add
dec
ficoms
iret
pop
pop
push
enter
cs
arpl
int
cmp
xchg
or
xchg
fcmove
mov
or
inc
sbb
cmpsl
mov
mov
adc
pop
cmc
out
mov
pop
int3
jns
mov
imul
out
pop
jp
mov
cs
popf
push
pop
jle
addr16
jle
push
rorb
cli
shlb
lret
ljmp
dec
daa
daa
push
push
dec
lret
dec
push
mov
ja
cmp
pop
adc
and
and
mov
arpl
inc
negl
adc
lret
lods
in
and
stos
imul
divl
cs
je
cld
xor
dec
lods
ljmp
mov
daa
jmp
fldt
adc
cmp
call
or
jns
in
pop
push
and
es
mov
inc
cmc
call
repz
arpl
jmp
popa
adc
jbe
add
pop
xchg
data16
out
xchg
jbe
clc
ret
mov
in
sub
mov
jl
mov
adc
ss
inc
mov
les
pop
iret
outsb
xchg
add
movsb
jp
cmp
fsubs
push
data16
adc
jge,pt
gs
fstpt
pushf
cwtl
adc
lds
jl
cmp
std
pop
loop
ret
repnz
fildl
aad
jle
sub
xor
sti
xlat
aam
insb
and
xor
mov
pop
mov
inc
shll
lahf
xlat
dec
arpl
dec
lock
fildl
mov
push
add
loopne
add
jae
push
jmp
cmpsb
leave
movsl
xchg
imul
pop
inc
add
arpl
pcmpeqw
jle
xlat
out
dec
lds
jge
add
cmpsl
and
and
jl,pn
dec
push
add
jae
xchg
add
adc
jp
pop
les
out
aaa
push
fiaddl
fldcw
xchg
insb
divl
sbbl
fwait
jmp
mov
fdivrs
or
test
ds
and
add
sar
fwait
and
leave
jecxz
add
sbbl
call
mov
cwtl
fcoms
or
out
mov
dec
mov
mov
xchg
daa
mov
jno
add
lods
movb
mov
cmp
test
fcoms
bound
ljmp
jno
pop
mov
inc
xchg
faddl
es
inc
xchg
mov
loope
in
xchg
movsb
ret
cmp
or
mov
mov
dec
cld
inc
mov
scas
fidivl
nop
mov
mov
stos
sbb
mov
mov
mov
push
in
movsb
jo
jne
xor
inc
es
xor
test
lahf
dec
scas
inc
inc
xchg
jae
iret
cmp
lret
cli
ss
stc
push
jge
ret
pop
push
nop
out
dec
lock
arpl
jge
and
dec
and
push
add
sub
fistpll
add
sbb
jb
incl
movsl
js
sbb
xorb
jp
push
mov
in
aad
sbb
leave
idivb
mov
jb
mov
cld
pop
in
das
lods
out
in
push
or
ret
inc
dec
jnp
xchg
fs
mov
pop
jnp
add
mov
cs
dec
push
mov
and
cmp
shrb
jle
in
imul
mov
pop
pop
pop
lods
pop
stc
sub
insl
rcr
test
in
stos
push
xchg
cmp
lgdtl
push
and
stos
cmpsl
mov
in
icebp
and
js
adc
daa
repz
testl
mov
lods
rol
lds
clc
cmp
int
aad
cwtl
pop
fs
sbb
dec
aam
mov
or
in
outsl
xor
pop
jb
jmp
xchg
enter
clc
add
aad
push
mov
and
popa
pop
test
pop
cmp
sbb
push
mov
push
dec
aad
adc
out
aas
xchg
out
subb
jo
push
mull
das
scas
or
push
fwait
std
nop
rclb
shrb
dec
cmpsb
pusha
sub
rcl
aad
lret
stos
js
mov
mov
sti
xor
enter
dec
add
mov
adc
pusha
xchg
pop
movb
inc
in
mov
lods
sub
and
subb
and
jae
mov
inc
pop
push
inc
bound
inc
aaa
mov
cs
xor
leave
jbe
sbb
dec
jmp
jbe
pop
pop
pop
outsb
push
shll
mov
cmp
nop
add
jmp
cmp
jecxz
sahf
dec
mov
mov
jae
movl
fcoms
inc
clc
mov
cmp
test
mov
fpatan
and
xor
fdivl
pop
arpl
outsl
lea
push
mov
mov
inc
mov
sbb
xchg
nop
lcall
add
add
jb
adcl
das
lret
js
mov
jne
imul
shrl
and
or
mov
or
dec
sbb
xchg
movsl
fistpl
sti
mov
dec
test
fsubrl
jnp
push
sbb
in
mov
cmp
add
mov
aam
insb
into
ljmp
aam
mov
ret
cwtl
je
adc
out
add
scas
and
xchg
push
js
inc
sub
ret
adc
cmc
call
daa
mov
into
popa
xchg
dec
cmp
push
push
add
mov
xor
hlt
sarl
inc
in
std
insb
lret
jb
icebp
pop
sbb
xchg
xchg
xchg
js
lret
out
jbe
add
mov
mov
sti
test
and
scas
sub
mov
jns
fiaddl
je
jne
aaa
cmp
jns
aam
fyl2x
adc
imul
or
pop
mov
popf
cmp
add
mov
and
add
mov
mov
movsb
pop
addr16
mov
arpl
push
xchg
push
inc
xchg
mov
imul
xchg
add
jo
lods
or
adcl
sub
cmp
add
dec
mov
das
jae
mov
lds
test
adc
dec
fsts
mov
dec
xchg
push
sub
outsl
ljmp
sti
adc
cmpsb
adc
cmp
lock
enter
mov
mov
cmpsl
std
mov
jg
fwait
shll
mov
push
leave
sub
fisubs
in
les
jnp
mov
sub
clc
push
jg
mov
test
lea
pop
sub
daa
popf
imul
sbb
push
fadds
jp
sub
jecxz
push
jmp
outsb
cmc
jnp
fwait
mov
in
lret
push
mov
and
push
fidivl
sub
push
imul
xlat
pop
insl
xchg
aas
sar
push
or
rcll
pop
js
aaa
sub
and
pop
xlat
popf
mov
or
add
add
ds
cmp
fmuls
mov
xor
sub
dec
and
xorb
repnz
lods
adc
inc
and
out
xchg
mov
mov
subl
add
mov
fmull
out
repz
mov
dec
pop
adc
push
mov
push
jns
dec
add
loopne
jmp
in
adc
adc
cmp
jle
loope
sarb
add
scas
push
push
ja
sarl
and
es
xor
add
rolb
inc
iret
xchg
pop
insl
inc
pop
and
push
sysret
ja
test
in
cmp
cmp
pop
sbb
lock
orb
xor
ss
cwtl
mov
fstpl
sub
add
dec
lock
scas
adc
test
addl
xchg
inc
cmp
inc
gs
mov
movb
mov
mov
and
add
rcl
push
movsl
cmc
loop
lock
inc
cmp
les
adc
insb
ret
sub
out
adc
jl
xchg
pusha
mov
pop
movb
pop
push
push
pop
sub
dec
or
xchg
push
popa
arpl
mov
cmpsb
movsb
and
mov
test
lods
cmp
in
stos
insl
inc
stos
cmp
lods
or
repz
xor
push
dec
je
mov
dec
push
push
xchg
inc
loopne
sbb
pop
test
shrb
cmp
movsl
xchg
subb
push
adc
lea
or
cmpsl
scas
jmp
call
fbstp
sub
mov
cwtl
mov
int3
movsl
sahf
enter
lcall
inc
jae
in
add
stos
xchg
aaa
jp
sub
inc
das
inc
push
xchg
scas
jno
fidivrl
jns
mov
cmp
cmp
xor
movsl
lcall
inc
pop
jae
loope
test
cmp
push
aad
mov
mov
fstpt
sub
mov
nop
mov
pushf
push
mov
jle
mov
sbb
sbb
nop
pop
mov
daa
add
jo
adcl
add
mov
mov
push
sbb
ret
jbe
stc
push
fmull
jl
aaa
cmp
and
pop
dec
adc
and
lods
in
movsb
out
adc
pushf
inc
pop
mov
cmp
jle
mov
and
fcmovne
shlb
mov
push
fimull
dec
cltd
cltd
in
dec
sub
sarl
inc
mov
sub
push
push
mov
es
repz
stos
sbb
mov
jmp
int
fistpl
cmp
sbb
and
mov
xchg
js
xor
xlat
inc
inc
ds
pusha
pop
mov
add
movsl
push
jns
insl
out
sbb
cmc
movsl
je
fcmovu
ret
or
cmc
insl
out
push
mov
sbb
and
fisubrl
ja
flds
push
lock
mov
out
xor
sub
gs
inc
jo
inc
movzwl
inc
cmpb
mov
lret
inc
outsb
jb
jns
jge
daa
add
insl
and
jbe
adc
ret
or
popa
push
dec
pop
push
lds
pop
test
orb
mov
xor
mov
sbb
push
shrl
mov
adc
aaa
pop
xchg
mov
push
jae
loop
push
jg
and
xchg
dec
dec
sarb
mov
lods
clc
std
sbb
scas
jmp
inc
and
adc
sbb
push
fstp
leave
cmp
adc
lds
lcall
sub
push
lds
and
mov
jle
insl
push
push
insl
paddsb
jge
out
in
add
cmp
leave
cmp
int
adc
das
push
fisttpll
out
outsl
mov
pop
into
aam
or
jo
jg
pop
push
pop
mov
mov
pop
jp
aad
push
and
mov
lret
and
aas
repz
mov
xchg
je
xchg
mov
std
rcll
xchg
icebp
and
push
add
dec
test
xchg
and
mov
jo
loopne
jne
dec
ljmp
pop
imul
loop
aaa
inc
xchg
ja
add
sahf
lods
popf
js
fnstsw
pop
arpl
imul
outsb
adcb
sub
lods
push
hlt
shlb
mov
je
and
push
repz
jno
cmp
scas
jo
xchg
cmp
shl
outsl
xchg
shrb
leave
and
push
vmovlps
add
mov
push
and
lret
out
sbb
cmp
pop
sub
dec
sbb
lcall
loop
mov
adc
sub
jae
rorl
imul
push
js
in
pop
mov
out
jp
sbb
fcmovnb
cmpsl
mov
mov
push
jp
ja
pop
clc
ret
fmul
cli
ret
inc
fadds
jb
insb
outsl
movsl
pop
jb
pop
xor
jg
push
ljmp
jo
lret
out
sahf
add
dec
data16
dec
imul
sbb
inc
mov
mov
mov
jno
pushf
pop
repz
adcl
int3
bound
mov
test
mov
xchg
sbb
test
xchg
and
xchg
repz
cmp
shrb
rol
repnz
jmp
mov
mov
fisttpll
int3
xor
inc
loopne
stos
dec
add
push
and
mov
jge
pop
cmpsl
jae
fstpl
mov
push
dec
xchg
jnp
xor
lods
stos
cmp
jl
arpl
mov
aas
push
movsb
roll
jno
inc
pop
adc
int
mov
arpl
push
negl
sbb
or
push
into
jl
enter
ret
ret
add
in
daa
jo
push
mov
jb
or
mov
push
mov
fst
pop
push
dec
jno
adc
aam
jp,pt
stc
out
das
sbb
sub
rorl
pop
pop
daa
insl
call
orb
mov
mov
mov
sarl
cmp
lret
sbb
jg
pop
mov
cmp
jg
cmc
int3
in
aam
imulb
jbe
ret
inc
pop
adc
jge
pop
xlat
xor
bound
push
cmp
add
inc
xor
jmp
sub
pop
pushf
push
fcmovne
xchg
fmuls
les
lods
sub
scas
mov
cs
add
imul
sbb
bnd
jmp
out
js
test
dec
and
sub
movl
xchg
sbb
push
pop
negb
inc
cmp
cld
lret
push
or
insb
adc
pop
or
in
adc
sbbb
jge
fbld
jno
ja
std
ret
scas
adc
ds
mov
leave
cmpsl
jns
and
adc
add
sbb
or
mov
mov
in
mov
ficoml
out
dec
dec
lahf
mov
inc
bound
dec
lea
mov
sub
shll
or
adc
call
cmp
pop
imul
aad
mov
and
sbb
test
cmp
dec
rorl
push
popl
lds
sub
cmp
imul
sbb
aas
xchg
out
mov
imul
or
fidivrl
cld
push
sub
scas
or
pop
pop
fidivl
in
loopne
rorl
sub
jne
lret
or
add
and
out
sbb
jb
adc
rcll
lahf
cmpsl
jnp
jg
out
aad
pop
lret
jae
lret
orb
ret
xor
cmp
inc
cmp
sbb
scas
and
push
and
scas
inc
lock
sub
sub
into
fcmovnbe
dec
adc
jmp
mov
adc
mov
xor
cmp
mov
sbb
adc
adc
out
adc
std
push
mov
pop
xor
dec
pop
dec
mov
or
sub
sub
enter
xchg
fs
inc
xchg
jge
fmull
in
pop
nop
popf
in
imul
mov
out
mov
outsl
lret
sbb
imulb
cli
cli
adc
mov
imul
and
pop
fucomp
or
pop
rcll
jmp
or
insb
pop
es
scas
hlt
out
xchg
into
sti
and
mov
dec
rcrb
xlat
call
or
addb
jae
xchg
sub
add
push
testb
sbb
ljmp
dec
in
add
pop
dec
outsl
push
repz
imul
arpl
fisubs
mov
loop
push
xchg
imul
mov
faddl
insl
push
add
je
xor
js
pusha
xlat
stc
xchg
in
cmpsb
into
push
dec
inc
push
in
mov
shll
mov
mov
cmp
loope
adc
push
ret
pop
mov
pop
mov
popf
pop
in
pop
jecxz
cmp
jge
pop
add
iret
test
mov
or
lods
leave
hlt
push
jnp
push
es
lds
dec
dec
inc
jae
test
testb
sbb
pop
out
dec
popa
frndint
popf
lret
lcall
fs
cmp
pop
fsubl
cltd
xchg
sbb
lods
test
mov
sub
add
mov
in
sub
cli
leave
fsubl
outsb
dec
cmp
inc
and
stc
push
mov
in
popa
es
js
push
or
xor
stos
jne
inc
ficoms
scas
add
cli
xor
mov
cmpsb
pop
mov
insl
mov
and
add
cmp
cs
sub
rorb
jo
cmpb
and
mov
sbb
shrb
xor
jge
aas
repnz
into
arpl
in
dec
adc
mov
stos
jp
dec
imulb
add
sahf
pop
call
dec
mov
loopne
sahf
lock
push
cmp
ret
xchg
das
inc
dec
mov
mov
shlb
daa
inc
jl
mov
xor
jg
pop
inc
movsb
stos
addr16
out
cmp
and
lcall
cltd
lahf
imul
sbb
mov
push
adc
in
sbbb
aas
cmpsl
push
lods
sbb
push
rcl
adc
notb
addr16
scas
cmp
aam
cltd
adc
cmp
testb
xor
aad
in
arpl
scas
rcll
loope
rorl
sbb
shrb
pop
rcrb
imul
ret
and
push
fnsave
inc
xchg
lcall
inc
imul
xchg
cmc
pop
ret
mov
push
mov
sub
xor
jb
leave
int3
aaa
push
xor
mov
xchg
int3
bound
fcomps
or
inc
rcll
mov
xchg
addr16
stos
aas
movsb
ret
int
jl
cmp
lahf
insl
mov
adc
mov
xlat
cmp
jb
test
sbb
or
daa
or
mov
push
jecxz
sysenter
jno
push
rcrb
lock
add
insb
pop
into
cmc
lds
mov
sbb
loop
or
out
sti
imul
inc
xchg
mov
and
arpl
xchg
adc
call
ret
adc
pop
pop
mov
inc
xor
cmpsl
int
andl
inc
daa
push
mov
dec
and
xor
iret
push
mov
call
pop
mov
push
ficoms
push
cmp
leave
xchg
or
pop
testl
cwtl
aaa
mov
clc
push
call
cmp
sbb
push
out
pop
test
cwtl
aaa
mov
clc
push
call
cmp
js
or
pop
testl
daa
clc
push
clc
inc
fdivs
addr16
je
inc
mov
cmpsl
js
js
pop
test
lods
xor
mov
fbld
daa
mov
cwtl
loope
icebp
mov
scas
mov
hlt
jno
inc
or
and
cmp
dec
adc
stos
icebp
mov
mov
lret
xchg
jno
xor
imul
add
pop
loope
icebp
mov
mov
lret
xchg
jno
xor
sbb
push
pop
dec
jg,pn
test
icebp
iret
mov
mov
cmp
enter
aaa
stos
outsb
mov
add
and
push
dec
sti
xor
pop
mov
xor
rcll
or
sbb
stos
and
add
cmpsl
sbb
pop
idiv
mov
jg
popa
jmp
lds
imul
movsb
push
lock
mov
and
mov
popa
cs
cmc
ja
fistpll
pop
sub
mov
jp
test
pop
jmp
add
xor
lea
lea
push
neg
sub
add
push
cs
inc
xchg
jo
jle
sbb
aam
sub
xchg
xor
mov
mov
fwait
mov
lret
xchg
jno
inc
or
and
jnp
dec
adc
movsb
int
test
mov
and
push
and
jne
push
pop
add
inc
loop,pt
xor
mov
andl
ja
add
adc
adc
test
shr
mov
lret
xchg
jno
inc
or
and
jnp
dec
adc
stos
icebp
mov
mov
lret
xchg
jno
inc
or
and
jnp
dec
adc
stos
push
scas
jp
cmc
dec
jnp
sbb
movsl
or
push
call
push
add
inc
subb
mov
fstp
iret
ja
je
mov
or
fxch
aam
sub
sub
je
jecxz
mov
mov
cmp
aam
int3
sbb
xchg
ljmp
leave
xor
out
mov
ficoms
inc
sub
out
add
xchg
push
daa
aam
xor
push
bound
add
out
es
call
and
push
lret
inc
push
out
enter
push
in
lahf
mov
jb
pushf
aaa
sub
and
mov
out
mov
add
jge
je
sahf
shlb
loop
sti
push
pop
push
push
shlb
leave
pop
mov
pop
or
push
cmp
sub
clc
bound
mov
adcb
push
xchg
jge
or
fidivrs
ficoml
push
jl
inc
lods
test
or
xchg
nop
lret
sbb
dec
pushf
in
cmc
lods
jnp
push
popa
daa
mov
mov
jb
push
data16
out
jmp
mov
adc
into
sbb
negl
jo
rol
scas
imul
addl
ss
mov
icebp
xor
je
xchg
sbb
xchg
pop
jb
dec
jp
cmpsl
xchg
or
dec
loopne
inc
mov
mov
in
sub
jle
test
addr16
gs
sub
push
or
outsl
bound
and
aam
aam
and
pop
adc
push
mov
leave
push
mov
pop
mov
mov
dec
arpl
push
ret
pop
adc
cmp
ljmp
sbb
insb
xor
andl
decl
xor
je
cmpsl
sbb
rorb
jecxz
inc
sub
sbbb
adc
jbe
sub
les
rorl
mov
jl
in
stc
imul
xchg
xor
cmpsl
xor
jg
mov
lret
mov
sub
fidivrs
dec
shlb
ljmp
xchg
gs
push
and
cmp
popa
sbb
inc
mov
lea
jbe
mov
push
pop
fs
rcrl
adc
xchg
jbe
pop
pop
scas
outsl
mov
out
fstp
mov
cwtl
cmpsb
or
fldt
cltd
mov
push
inc
pop
popa
iret
aaa
pushf
rorb
or
movsl
mov
mov
ljmp
xchg
fiaddl
in
pop
add
mov
and
push
pop
add
xor
fcmovb
mov
mov
sbb
mov
add
fs
fsubrs
rcl
push
mov
cmpsb
inc
or
addb
lret
xor
mov
jnp
test
repnz
popa
fimull
call
push
and
push
push
gs
mov
out
out
cmpsb
dec
dec
xchg
fiadds
icebp
imul
add
fidivs
mov
dec
mov
fs
mov
dec
cmpb
xor
mov
jnp
add
rcrl
outsb
xchg
in
sahf
outsb
mov
cmpl
pop
mov
push
inc
jns
inc
mov
inc
jno
iret
xchg
pop
push
xor
or
cmpsl
adc
dec
idiv
jge
jmp
push
in
push
std
push
lock
add
sbb
jecxz
xor
xchg
fdiv
out
aam
dec
mov
and
mov
call
js
fcmovu
icebp
dec
sarb
jne
and
pop
in
jbe
xchg
in
xor
sbb
aas
arpl
lods
lock
call
dec
pushf
mov
push
sub
adc
stc
mov
sub
sub
notb
test
into
dec
adc
test
mov
sahf
in
inc
or
or
bound
paddsw
data16
jp
popf
xor
outsl
xrelease
mov
xor
pop
sbb
jle
in
mov
add
xor
xchg
insb
pusha
in
pop
stos
jno
gs
ss
test
sbb
sti
out
mov
pop
push
jl
and
notl
enter
mov
push
jle
push
or
cli
inc
shl
sub
fnstenv
test
pop
xorl
lods
mov
jbe
sbb
push
add
push
out
or
sub
mov
cs
and
jl
pop
test
cld
ret
test
inc
subb
roll
shlb
add
cmpsb
sahf
dec
lea
xchg
lds
dec
sub
loope
or
add
idiv
mov
or
je
jae
pop
or
jmp
mov
xchg
mov
rorb
jge
sti
add
push
pusha
out
cs
stos
dec
pop
mov
push
in
test
aam
stos
pushf
dec
jno
mov
out
pop
inc
rcll
iret
nop
xchg
push
fnsave
sub
dec
movsb
repz
loope
mov
inc
pop
jns
sub
in
xchg
sbb
cmpsl
idivl
je
hlt
or
jge
shlb
mov
or
in
adc
mov
je
dec
je
jnp
jo
outsb
insl
xor
push
andl
mov
push
cmp
inc
xchg
out
xor
out
ficomps
aaa
shrb
push
jbe
lock
flds
mov
lcall
or
outsb
mov
mov
pop
and
test
cmc
jecxz
xor
push
sub
in
xchg
imul
daa
mov
mov
std
cmp
dec
rolb
out
sbb
lcall
xlat
jo
cltd
cld
lret
aad
push
imul
xchg
popf
clc
mov
lods
jb
cmc
scas
push
int3
pop
mov
scas
xchg
lods
pop
cmp
repz
mov
nop
or
mov
cmpsb
cwtl
dec
mov
xor
dec
mov
mov
jl
loopne
jmp
rcll
pop
adc
jno
ret
fisttpll
push
adcb
fs
inc
pusha
push
daa
divl
daa
popa
insl
add
and
call
fs
xchg
mov
pop
xchg
xor
and
popa
mov
sub
pop
int3
int3
mov
jo
pop
push
inc
ja
mov
fiadds
mov
pushf
pop
testb
jno
cmp
push
stc
dec
sbb
cmpsl
adc
aas
loope
mov
dec
sbb
in
sahf
lcall
out
ja
test
and
lds
inc
pop
imul
push
ret
cmp
sbb
fisubl
mov
xchg
cld
add
test
push
xchg
int3
and
add
inc
lods
into
xchg
add
cmp
mov
inc
dec
sbb
jmp
inc
lock
in
push
les
mov
stos
mov
push
stc
hlt
xchg
jg
sbb
out
pop
jmp
xchg
mov
mov
push
mov
dec
jno
ds
lods
push
sbb
clc
adc
mov
push
int3
repnz
push
ret
push
daa
adc
popa
iret
je
fwait
mov
mov
test
mov
out
das
aad
ret
inc
outsl
outsb
mov
jl
jb
cs
mov
test
add
xchg
cmpsb
into
outsb
push
insb
rolb
sub
inc
mulb
aam
mov
stc
push
iret
sbb
adc
mov
ret
mov
or
lahf
mov
xchg
fisttps
pop
mov
mov
es
enter
into
push
je
jg
mov
cwtl
xchg
inc
lods
cltd
aam
pop
or
subl
xchg
repz
cwtl
cmpsl
xchg
je
pop
ja
xchg
in
mov
pop
jecxz
lods
add
clc
ficompl
dec
dec
out
push
push
out
mov
pop
pop
jo
pop
fistpll
int
nop
mov
push
cmp
gs
xchg
es
xchg
mov
ds
sbb
mov
fisttpll
loopne
jmp
sbb
sbb
dec
pop
sti
lcall
pop
xor
lret
fldl
jge
je
dec
rcrb
pop
push
jmp
mov
adc
pop
enter
push
sbb
sub
inc
sahf
fisubl
jbe
mov
popa
mov
push
sahf
mov
push
mov
mov
xchg
sbb
mov
sub
sub
and
or
cli
fnsave
iret
insl
pusha
inc
gs
fidivrs
stos
mov
pop
mov
inc
cmp
sub
inc
push
loope
cmc
in
xchg
xchg
lods
lahf
lahf
mov
mov
dec
push
mov
or
sahf
cld
repnz
jb
pushf
add
sbb
lahf
and
add
jb
mov
push
add
clc
cli
pop
cmc
and
fimull
mov
xchg
dec
inc
mov
enter
andl
mov
xor
bound
and
add
push
test
decl
aaa
cld
jbe
mov
test
lds
pop
hlt
jg
ljmp
jns
lret
mov
out
ret
mov
lret
cmpsb
jo
cmpsb
jno
dec
fs
repnz
roll
cmc
subl
cmp
enter
dec
popa
cli
pop
mov
mov
lods
fst
dec
fs
xchg
shrb
add
ret
cld
popf
and
out
std
call
add
fs
xchg
mov
into
dec
mov
stc
sbbb
insb
pop
mov
jae
nop
or
sub
cltd
mov
lds
lcall
mov
divl
xchg
push
dec
shr
push
leave
gs
dec
mov
loop
push
ret
outsl
add
scas
outsb
dec
pusha
aad
add
and
jbe
mov
cmp
push
stos
cwtl
test
popf
mov
cmpsb
sub
xchg
aad
sbb
mov
mov
divl
push
adc
add
test
loope
loope
sbb
les
sarb
and
adc
xchg
ret
mov
xchg
push
lock
pop
xchg
std
enter
add
jecxz
inc
in
sarb
lock
dec
mov
mov
fcmovbe
pop
repz
faddp
jnp
mov
das
sarl
aad
in
popa
imul
ds
iret
lcall
test
pop
sti
into
stc
jbe
or
sub
xchg
cmp
nop
popa
dec
dec
fld
inc
ret
clc
inc
out
mov
lock
jno
xor
out
sbb
xor
pop
mov
dec
leave
adc
sbb
mov
adc
cmp
out
jl
add
cs
fs
jbe
in
into
cmpsl
and
lahf
mov
out
dec
testb
sbb
fisubrs
hlt
mov
std
xchg
pop
stc
jno
push
pop
jnp
sbb
jecxz
mov
or
and
and
sub
lock
inc
test
jge
lret
lret
push
aaa
rcll
mov
pop
paddw
mov
mov
pop
repnz
test
mov
inc
cmp
and
in
loopne
roll
xor
outsl
test
sbb
sbb
stos
addb
cmpsl
jl
mov
cmpsb
test
mov
xchg
dec
popf
stos
stos
sub
jmp
jg
aaa
or
notb
and
add
sub
pop
push
mov
enter
shrb
sbb
inc
sbb
ret
out
in
das
movsl
aaa
stc
pop
mov
jmp
jle
dec
jno
dec
clc
jbe
jmp
mov
dec
sbb
adc
rorb
icebp
sarb
fdiv
jge
repnz
dec
xchg
add
pop
push
or
cltd
out
cmpsl
mov
adcl
sbb
jb
mov
mov
add
dec
dec
pop
cmpsb
dec
fmull
in
add
sbb
outsb
outsb
mov
test
mov
fisttpll
fisubrl
mov
cli
mov
adc
movsb
push
cmpb
add
subb
lret
cmp
push
inc
cmc
mov
xor
xchg
dec
sub
mov
dec
mov
leave
push
pushf
sbb
pop
cs
xchg
push
sar
lret
adc
jg
rcll
bound
and
push
hlt
or
xchg
xor
stos
xor
xchg
aam
int
ret
push
lea
sahf
jbe
in
cld
jnp
lahf
cmp
mov
cmp
and
fs
std
add
clc
ret
xor
add
in
test
or
mov
loope
popf
cmp
or
lods
loop
cmpsb
sbb
clc
sbb
mov
movsl
xlat
rorb
xchg
cli
je
cmp
adc
aas
xor
cmc
and
push
pop
loope
dec
xor
push
je
int3
cltd
frstor
cmp
add
jb
aad
std
ficompl
aad
imul
bnd
push
pop
subb
outsl
cmp
inc
fldl
pop
movsb
push
push
add
negl
lods
inc
push
add
in
inc
ret
lret
push
xlat
insb
cmp
clc
out
out
ss
mov
repnz
xlat
inc
xchg
imul
mov
stc
sub
jae
iret
lods
lods
rclb
rolb
out
jecxz
outsl
adcb
jg
int3
divps
pop
movsl
leave
sar
lahf
cld
sub
or
xchg
sub
das
or
lods
mov
and
je
jecxz
sbb
cld
sub
rcl
push
cmpsb
out
xor
les
cmp
xor
mov
sbb
inc
aam
sqrtps
xchg
mov
or
imul
repnz
roll
mov
pop
pop
lods
add
test
sbb
xchg
std
test
xor
and
xor
fadd
rorl
outsb
or
bound
mov
loop
jnp
cmp
outsl
push
or
sub
scas
inc
sub
or
mov
push
outsb
nop
orb
sub
xchg
xchg
subb
mov
pusha
push
pop
bound
mov
pop
in
aas
insb
in
inc
inc
push
cmp
mov
loop
cld
mov
mov
xchg
add
or
mov
hlt
pop
fiaddl
insb
and
sbb
dec
mov
mov
es
pop
jb
push
and
xchg
dec
stos
sbb
loop
imul
cld
push
mov
loop
push
push
shlb
ret
xchg
adc
shlb
inc
fldcw
xchg
sub
mov
dec
sub
sub
jle
cmp
outsb
dec
enter
ss
imul
xchg
xchg
mov
mov
mov
xor
xor
xchg
popa
xchg
adc
pop
gs
daa
insb
adc
cltd
bound
mov
repnz
adc
add
pop
lahf
mov
ja
fwait
or
cltd
add
lret
cld
push
jmp
and
repnz
or
mov
shrb
sub
inc
jmp
jae
cmp
inc
out
add
popf
nop
movb
in
fimuls
inc
rol
das
cli
outsl
inc
aas
inc
movsb
xor
sub
into
mov
sub
mov
mov
add
mov
add
cmp
mov
mov
ljmp
or
imul
mov
pop
call
and
adc
xor
cmp
inc
in
inc
dec
jl
push
in
dec
shlb
jns
lret
pop
inc
mov
ret
and
outsl
ret
xchg
lahf
loope
push
inc
sub
lahf
mov
push
js
push
xor
test
out
ss
movsb
pop
stos
xchg
add
lds
std
mov
cmp
mull
and
es
jmp
sub
or
cmpsb
adc
cltd
add
mov
push
addr16
test
cmp
cli
ficompl
cmp
lods
inc
stos
mov
fnstcw
stos
adc
mov
inc
jae
sub
xor
data16
xchg
cli
movups
out
loop
popf
mov
cmc
sub
pop
xchg
mov
inc
and
mov
sti
ja
aas
inc
lods
dec
test
hlt
pop
push
add
aaa
rcrb
sub
jmp
fidivrl
rcl
repz
jno
fisubl
jno
pop
ret
pushf
sub
cltd
out
push
inc
pop
fcmovne
jp
repnz
sti
clc
test
push
adc
jnp
or
jmp
fimull
mov
xchg
add
cmpsb
stos
adc
sub
fwait
test
push
jnp
rcrb
push
test
or
lods
add
popf
adc
lcall
mov
pop
stos
movsb
cld
ja
test
popl
mov
test
pop
inc
dec
iret
cmpsb
or
cld
jecxz
jecxz
pop
jno
ret
fidivrl
xor
aas
xor
addb
jg
or
mov
out
scas
pop
xor
test
lds
into
xchg
push
push
sub
sub
inc
and
adc
in
mov
jp
pop
mov
inc
ss
inc
repnz
sub
xor
add
push
out
push
push
icebp
xchg
sub
xor
jecxz
dec
jo
adc
or
lret
cli
sub
mov
push
fadds
aad
loop
dec
pop
mov
jp
insb
mov
mov
out
imul
mov
lods
pop
dec
nop
scas
ret
inc
mov
xchg
add
dec
lods
and
pop
inc
and
inc
mov
outsl
pop
ljmp
lret
and
add
cmp
ret
mov
lods
test
hlt
pop
out
jge
fadds
jl
daa
mov
shll
pusha
sub
daa
std
mov
lahf
fcoms
mov
add
insl
mulb
repz
dec
sarl
sbb
test
dec
outsb
lock
movsb
xchg
arpl
mov
lods
ds
adc
aas
test
subl
xor
ret
lods
pop
jge
sbb
pop
cvtdq2ps
divl
cmp
dec
rorl
icebp
push
jge
add
popa
mov
jg
mov
sarl
popa
imul
sub
xor
pop
lods
pusha
insl
mov
mov
mov
xchg
stc
jg
xor
ret
dec
and
fstl
ret
aad
inc
mov
bound
pop
mov
aam
pushf
idivb
push
inc
push
jp
jae
into
cmpsb
cmp
in
enter
adc
adc
stos
lds
cs
fadds
dec
in
decb
mov
aaa
sbb
call
and
xchg
xor
ret
and
sti
pop
pop
pop
adc
jle
mov
xor
mov
jle
xor
cmp
insl
dec
xchg
mov
cmp
and
add
jecxz
mov
pushf
xchg
das
es
adc
ja
test
pop
ret
mov
or
and
jp
stos
mov
sub
xlat
out
call
fstl
je
shrl
pop
cmpsl
mov
push
xor
dec
pushf
orb
and
mov
xor
jecxz
mov
outsl
hlt
outsb
shl
xor
aaa
imul
push
xorb
into
jo
std
adc
pop
rol
lea
jl
arpl
pop
daa
pop
jne
dec
ficoml
xchg
mov
mov
scas
lods
jns
int3
in
mov
ss
xor
dec
pop
jnp
fcmovnb
test
lock
insl
stos
sti
push
jae
imul
test
sub
add
andl
into
rcr
sbbl
cld
mov
bound
negb
mov
fcompl
sub
mov
loop
pop
test
push
mov
pop
cld
fdivl
and
sub
sbb
sbb
stos
js
loop
push
subb
scas
xchg
add
test
sbb
popa
mov
mov
mov
fstps
mov
and
js
pusha
mov
jg
aam
and
test
cmp
adc
lods
dec
stos
and
shrb
mov
gs
iret
pop
sbb
sub
daa
sbb
mov
inc
pop
outsb
scas
rep
nop
cmc
sub
ret
pop
push
push
xchg
shl
in
push
hlt
sub
push
lret
aad
push
jb
add
insl
test
addr16
pop
xchg
in
cltd
push
lret
incb
fsubrl
loop
imulb
push
mov
push
popa
jnp
repnz
fs
outsl
sbb
fbstp
dec
imul
dec
jno
mov
mov
aas
push
push
pushf
ss
jae
sub
cmpsl
dec
xchg
jo
push
pop
incl
ljmp
inc
imul
push
jl
pop
stos
or
in
mov
xchg
lcall
ss
in
in
mov
movsl
jl
addr16
into
ljmp
repz
cmpsb
test
push
mov
imul
testl
sub
xchg
jge
mov
inc
lret
push
xchg
dec
ljmp
sub
aaa
sub
xchg
adc
adc
pop
dec
cld
addr16
xchg
fcoms
xor
xor
outsl
mov
stc
mov
pusha
sbb
push
mov
mov
lret
xchg
jno
inc
or
and
jnp
dec
adc
stos
icebp
mov
mov
lret
xchg
jno
inc
or
and
jnp
dec
adc
scas
icebp
mov
mov
lret
popa
sub
inc
or
and
jnp
dec
adc
stos
icebp
mov
mov
dec
xchg
and
aam
xchg
jmp
push
insb
push
jecxz
test
mov
movsb
and
roll
rclb
jge
je
mov
xor
and
cltd
popa
popa
xchg
jns
dec
mov
mov
or
sbb
xor
and
jno
popa
mov
stc
or
shll
and
adc
dec
mov
in
adc
push
sub
pop
icebp
or
imul
sbb
ficoml
push
push
fdivr
xor
mov
xchg
jno
shrb
rol
and
imul
ss
xor
inc
sub
or
adc
cmp
fldenv
pushf
dec
sub
and
aaa
daa
ficoms
xor
jp
lods
sub
add
rol
rorl
sbb
cld
in
stos
fincstp
movsb
and
mov
popa
in
push
test
dec
cltd
lods
pop
mov
loope
out
test
and
mov
sub
paddb
mov
push
enter
sub
mov
sahf
pop
xchg
jns
dec
mov
mov
or
mov
add
xor
and
push
cmpsl
inc
mov
daa
sbb
aaa
loopne
xchg
dec
mov
xchg
js
mov
sbb
and
fiadds
std
icebp
in
push
stc
xchg
ret
pop
test
push
shll
lods
push
mov
fidivl
xlat
cld
adc
xor
cmp
sbb
insb
jecxz
rorl
sbb
jmp
xor
and
jno
popa
imul
cmp
or
sbb
jmp
xor
and
jno
popa
imul
push
inc
imul
push
idivb
lret
pop
mov
lods
rcrl
or
sub
lcall
lcall
sbb
adc
pop
mov
jle
push
fsubr
cwtl
inc
sub
aad
add
ljmp
jle
sbb
pop
pop
stos
and
and
adc
add
mov
push
xlat
scas
sbb
mov
or
xchg
arpl
inc
jae
aad
add
scas
pusha
mov
inc
inc
mov
and
inc
loopne
mov
add
mov
or
je
mov
sbb
lcall
mov
ret
fimuls
or
out
fsubs
in
shl
or
push
es
in
cli
mov
jbe
cs
mov
push
add
mov
cmc
mov
mov
test
in
pop
int3
out
movsb
jmp
leave
jb
cmpsl
xchg
adc
cmp
dec
pop
iret
push
xchg
lahf
nop
mov
push
or
test
cmp
ret
cmp
sarl
push
flds
stos
xchg
loopne
outsl
xchg
ja
jmp
and
ds
and
sub
or
adc
leave
mov
push
mov
ret
xor
rcl
int
dec
jno
mov
inc
dec
sub
sti
jge
pop
dec
mov
imul
or
loopne
or
pusha
jo
lret
xchg
sbb
cmpl
mov
sub
out
dec
aas
sbbl
xchg
or
mov
movsb
sti
inc
mov
mov
sbb
cmp
mov
cmc
dec
jmp
dec
add
ljmp
add
pop
int3
or
movntps
in
or
ds
bound
xor
mov
dec
call
lcall
lods
sti
lret
push
cmp
or
cltd
push
adc
cmpsl
adc
cmp
sub
imul
add
imul
xchg
imul
push
push
cwtl
jmp
pop
roll
xor
inc
dec
mov
ret
nop
addl
cltd
fwait
popf
add
outsl
fildll
mov
iret
xor
or
mov
imul
leave
das
scas
add
stos
stc
dec
neg
jle
insl
arpl
and
popl
adc
in
fcoml
mov
enter
mov
pop
sub
std
fsubrs
push
pop
mov
leave
dec
sbb
xchg
lret
adc
push
das
push
inc
push
cmc
dec
inc
or
iret
cld
push
xor
mov
movsl
mov
sub
inc
sbb
in
lea
xor
loop
lods
out
shrb
leave
jle
out
arpl
and
mov
mov
testb
pop
bsr
mov
mov
rclb
or
into
insb
jne
in
iret
scas
sub
xchg
pop
outsb
insb
pop
add
movsl
hlt
push
xor
xor
sbb
mov
sub
cmp
add
mov
add
push
or
or
aam
negl
je
jnp
sbbl
add
dec
and
popa
popf
pop
mov
pop
std
orb
inc
cmp
les
out
push
aam
adc
push
into
movsl
add
mov
mov
lcall
xor
fiaddl
cs
rcll
xchg
scas
rclb
call
adcl
shlb
add
add
js
leave
sbb
or
flds
xchg
jmp
popf
popf
and
mov
imul
xor
mov
pop
mov
aaa
push
ret
popa
inc
jo
dec
mov
and
dec
js
cmp
mul
leave
pop
test
mov
ret
sub
jge
xchg
fistl
mov
xchg
outsl
cmp
mov
add
outsb
bound
adcl
push
dec
xchg
fadds
faddp
sub
lea
jo
scas
popf
repnz
daa
adc
cltd
fiadds
cmp
daa
shrb
das
icebp
fucomip
fmuls
sub
mov
in
pop
and
sub
and
stos
iret
push
or
xchg
xchg
lahf
repz
jmp
pushf
ficompl
xchg
inc
aaa
lds
stc
pop
xor
add
xchg
cmp
sbb
pop
xchg
push
inc
ljmp
fcmovnbe
test
fnstcw
out
jmp
jb
lock
dec
mov
xchg
imul
not
cmp
jnp
push
ret
sahf
push
mov
mov
inc
ss
push
mov
mov
sti
enter
xchg
xchg
daa
popa
arpl
dec
rol
push
idivl
xchg
adcb
mov
push
jne
in
insb
cwtl
dec
imul
into
scas
cld
push
mov
aas
lods
pop
cli
push
mov
dec
adc
out
xor
in
inc
mov
xchg
pop
sar
arpl
sbb
test
ja
inc
xlat
stos
je
pop
out
insl
cs
fists
mov
mov
mov
mov
dec
mov
push
stc
cmp
addr16
dec
nop
mov
in
ret
pop
ffreep
test
cmc
fstpl
fcmovb
fcmovu
mov
rcrb
sbb
shrl
fbstp
jmp
pushf
and
or
sbb
cmpsl
dec
xchg
addr16
iret
ret
and
lcall
xchg
pmuludq
inc
dec
sbb
js
lret
lcall
add
in
mov
sahf
in
add
sub
adc
push
mov
je
popf
jge
negb
or
xor
dec
icebp
in
inc
mov
sahf
inc
in
aaa
push
pop
cli
mov
rcrl
leave
gs
cmpsl
loopne
flds
repnz
enter
dec
jmp
pop
es
pushf
outsb
jnp
aaa
hlt
inc
movsb
loopne
push
in
call
and
enter
jmp
dec
sti
mov
sbbb
mov
ds
pop
je
mov
xchg
dec
pop
adc
cmp
aam
into
ds
imul
dec
std
xchg
jo
popa
scas
sub
imul
sbb
push
mov
out
test
iret
add
test
outsl
mov
mov
add
popa
imul
mov
xchg
xor
testb
sbb
lea
ja
cld
jp
mov
jmp
xlat
mov
mov
sti
jns,pt
add
stc
pop
mov
insl
in
inc
imulb
jp
cli
inc
adc
fstpl
pop
jns
dec
hlt
pop
aad
push
dec
out
sahf
dec
fcoml
mov
adc
push
loopne
imul
add
imul
icebp
add
int3
dec
dec
inc
sti
test
movsb
cli
sbb
fs
inc
aas
hlt
cmp
add
jge
mov
cltd
and
jns
inc
std
sbb
loopne
test
pop
cmp
and
iret
pop
cld
test
and
sub
inc
and
push
jne
stos
push
and
lahf
jo
loop
push
push
popa
js
sub
shlb
jns
sub
pop
adc
inc
mov
into
pop
outsl
mov
adc
loop
cld
sub
mov
and
and
or
outsb
inc
test
pop
bound
push
sti
test
or
fcoml
jle
rclb
mov
in
pop
pop
inc
mov
fdivrl
sub
xchg
jo
bound
inc
aaa
jns
adcb
ret
jnp
inc
cmpsl
cmp
rorl
add
sahf
sbb
sub
lods
xor
sbb
shlb
sbb
ret
sub
fsubrl
mov
inc
das
cmc
iret
ret
xchg
cli
sbbl
cmp
cmc
test
fs
lds
push
sub
pop
sahf
push
cli
mov
dec
xchg
and
mov
ldmxcsr
xor
cmp
aaa
das
ss
lods
enter
jns
mov
sbb
pop
cltd
es
aam
pop
ret
shrb
iret
jno
loopne
mov
xchg
add
add
mov
das
aad
mov
dec
inc
jp
lea
int3
dec
pusha
insl
pop
movsl
arpl
cs
les
adc
mov
mov
rep
mov
imul
push
arpl
jnp
aas
daa
imul
pop
cmp
inc
adc
sbb
jecxz
fildl
nop
dec
xchg
or
mov
nop
pusha
rclb
mov
sahf
loopne
cwtl
stc
iret
icebp
adc
mov
mov
add
xor
xchg
and
jb
gs
out
enter
stos
nopl
push
push
in
outsl
ret
and
inc
lret
jg
or
cmp
out
sbb
sub
in
and
mov
inc
pop
mov
xchg
pushfw
leave
sub
stos
pop
setns
stos
mov
inc
movsb
mov
fidivs
sub
lock
cmp
xchg
rcl
js
mov
dec
cmp
cmpsb
jl
inc
out
dec
testb
test
xchg
lods
int
inc
mov
cmp
inc
cmpsl
movb
mov
rcrb
push
je
enter
notb
mov
and
mov
fwait
sbb
shrl
scas
adc
adc
or
or
and
ja
hlt
lock
adc
xchg
loopne
push
jno
inc
fistpl
cmp
push
jecxz
ret
mov
mov
jno
daa
jge
push
fcomip
adc
dec
lahf
or
aaa
cmp
iret
std
out
out
xor
fcmovnu
out
mov
leave
leave
pop
dec
cli
push
call
std
or
lock
push
cmc
pop
scas
push
and
mov
lahf
mov
int
popa
and
jne
in
adc
push
pop
pop
dec
xchg
cs
pop
mov
dec
mov
clc
push
mov
sbb
ret
add
or
jge
fadd
cltd
out
js
push
jl
push
mov
inc
cli
je
lock
test
je
sahf
mov
pop
aas
mov
xor
scas
add
out
into
or
daa
bound
jno
adc
dec
and
or
call
icebp
fsubrl
dec
in
mov
xlat
sti
jp
or
jbe
repz
fimuls
pop
out
xchg
pop
push
add
mov
mov
push
add
fimuls
push
pop
dec
xchg
fldenv
arpl
out
pusha
mov
ficoms
jno
repz
roll
popa
ret
popa
inc
and
popf
lea
clc
adc
repz
mov
sbbl
adc
dec
int3
push
jbe
xchg
adc
test
sub
add
inc
outsb
sub
sub
sbb
int
mov
jnp
sub
in
cmc
ret
cmc
loope
mov
dec
daa
jnp
sub
mov
ja
sub
rclb
rcrb
mov
jl
push
add
insb
adc
aam
stos
dec
cli
cmp
mov
test
xchg
adc
lea
xchg
cld
call
inc
dec
sub
xor
test
inc
pop
inc
iret
sbb
flds
decb
inc
push
or
xor
cmpb
dec
add
sti
mov
push
inc
into
jmp
add
fisubrl
ret
ret
and
inc
movsb
sbb
or
orl
cli
dec
or
cmc
jbe
sti
mov
mov
in
test
jo
dec
adc
mov
xchg
xchg
nopl
pop
adcb
bound
loopne
hlt
int3
roll
push
jns
jae,pt
test
icebp
xor
xchg
fld
push
mov
adc
push
stos
aam
popa
pop
push
loopne
jo
xchg
bound
dec
mov
mov
jp
dec
mov
mov
push
or
pop
mov
mov
sbb
add
and
jo
cld
pusha
iret
pop
pop
aaa
mov
inc
aaa
repnz
aaa
cmp
push
mov
lea
aas
aam
cmp
jns
lods
mov
je
jl
xor
sub
addr16
imul
outsb
dec
call
das
adc
fiadds
push
test
jl
xor
in
xchg
mov
jae
dec
jae
in
mov
inc
insl
mov
jl
push
sub
int3
imul
faddl
sbbl
and
mov
mov
scas
mov
sbb
inc
lods
xchg
sbb
inc
lds
sub
sub
xchg
in
mov
sbb
int
jne
mov
and
cs
push
jge
mov
ds
mov
push
mov
or
or
mov
negb
sti
xchg
adc
in
pop
shll
cltd
out
push
ret
in
xor
cs
sub
rolb
inc
and
nop
mov
add
aam
stos
cmc
push
pop
sub
arpl
mov
cmc
cmp
push
cmp
sub
cmpsb
and
mov
fstps
add
lods
or
imul
sbb
inc
add
mov
push
pushl
xchg
movb
rol
xor
les
pop
imul
inc
fwait
lock
push
cmp
pushf
cwtl
ljmp
jns
mov
popa
insb
mov
aad
addb
mov
nop
cli
adc
xor
cmpb
push
xchg
mov
adc
fmull
mov
sbb
loopne
xchg
push
xor
cwtl
pop
push
mov
aaa
mov
or
in
pop
add
push
hlt
in
sbb
lret
mov
fwait
sahf
imul
adc
and
pop
cmp
les
add
popa
insl
shr
xchg
mov
pusha
mov
cs
arpl
sbb
loop
xor
add
pop
push
push
and
out
dec
inc
arpl
int3
cmc
arpl
lock
and
jge
pop
jl
lods
test
fdivs
int3
fbld
add
mov
xor
dec
int3
int3
ret
into
and
stos
mov
pop
cmpl
mov
testb
lods
lret
xchg
pop
fldcw
and
cld
in
and
lahf
sbbl
cli
or
shrl
lret
inc
aad
ficompl
in
xor
or
fs
gs
xchg
icebp
icebp
rcrb
pop
jle
and
dec
xor
popa
out
push
adc
jne
or
loope
mov
xchg
aaa
cmp
add
add
pop
pop
mov
lret
inc
xlat
fiaddl
xchg
pusha
lods
pop
in
add
aam
and
push
jmp
inc
cmp
push
ja
out
loopne
imull
xlat
iret
outsl
loopne
shll
icebp
dec
test
sub
push
mov
call
xchg
adc
test
jg
in
xchg
andl
jnp
inc
imull
cli
push
cmp
push
inc
jnp
insb
daa
cmpl
mov
lods
sbb
sub
xchg
pop
jns
xlat
add
xchg
das
mov
pop
subl
jmp
inc
ret
mov
adc
sahf
mov
cmc
sete
test
or
dec
push
mov
cld
push
inc
out
outsl
xchg
pop
orl
adc
push
lahf
mov
xor
pop
repz
jmp
out
pop
inc
pop
mov
inc
pop
or
add
and
sub
cld
xor
adc
pop
iret
cmc
cmpsb
scas
add
pop
fcoml
cmpsl
popf
jbe
push
aad
fisubrs
lahf
push
dec
sbb
lea
mov
jb
out
loope
dec
in
aas
scas
mov
test
inc
es
stos
mov
xor
pop
sahf
adc
pushf
jno
sti
and
jae
xor
ret
add
push
push
mov
ljmp
or
jbe
mov
pop
cmp
push
adc
test
mov
fistpl
add
cmc
frstor
push
push
pop
lock
xor
cmpsb
mov
imul
xchg
mov
imul
pop
mov
ret
mov
data16
faddl
pop
mov
stos
call
cli
sub
je
push
pop
dec
nop
outsb
pop
rcl
adc
ficoms
dec
cmp
xor
jns
add
stos
aas
mov
scas
mov
pop
lods
add
out
sbbb
push
push
push
lods
mov
outsb
scas
stos
out
test
into
adc
xchg
inc
mov
dec
stos
sarl
cli
cli
cmpsl
or
jb
mov
sahf
mov
cmp
test
decb
pop
jmp
lea
cmp
cmc
mov
cmpsl
jnp
push
push
and
outsl
rcrl
out
jnp
inc
xor
fidivrl
std
sbb
aam
pop
clc
rcll
push
cmp
lea
addb
fnsave
and
mov
push
enter
test
rcll
cmp
ja
inc
push
xchg
sub
and
jo
cmp
xlat
dec
add
add
xor
lea
inc
or
add
xor
push
rorb
xchg
aas
add
shlb
loopne
push
movsb
pop
lds
pop
aaa
daa
sbb
js
js
in
push
mov
leave
mov
ret
push
imul
cmp
outsl
xchg
stc
int
js
cmpsl
or
cmp
in
sbb
push
loope
repz
bound
sub
test
pop
rcrl
popf
loope
stos
xor
pop
mov
cli
inc
fcmove
jecxz
mov
adc
jge
stos
js
sahf
jnp
jge
cwtl
cmp
addb
or
leave
push
imul
daa
mov
and
pop
xchg
xorb
or
mov
movsb
stc
into
shrl
insb
fdivrs
adcb
cmp
mov
push
jmp
sahf
js
xchg
nop
push
add
mov
mov
mov
adc
push
je
adc
pop
mov
fbld
push
jle
das
divl
pop
out
cmpsl
test
adc
add
clc
fs
add
push
imul
loopne
pop
inc
fistpl
and
mov
imul
mov
repz
in
add
fistpll
mov
ds
test
out
aad
jge
dec
xchg
add
jne
pop
xchg
or
push
out
mov
repnz
divb
pop
enter
int
xor
icebp
jbe
mov
add
mov
adc
lret
add
outsl
lods
test
stc
or
cmp
cltd
inc
andb
xor
in
movsb
or
xchg
cmp
sub
sub
adc
push
iret
sbb
loop
adc
enter
xchg
rcr
jns
inc
sbb
jge
fdivrl
dec
addr16
cmpsb
sbb
mov
pop
add
and
push
jecxz
xor
add
aaa
push
out
pop
inc
test
lret
and
cmp
jl
or
rcll
add
mov
dec
jne
rol
sti
fcomp
pop
jecxz
pop
adc
in
insb
add
cwtl
mov
pushf
mov
push
or
test
icebp
lods
jb
outsb
adc
stos
dec
jno
pusha
xchg
ficoml
out
lea
mov
sbb
mov
xor
test
jl
or
jmp
daa
loop
outsl
shrb
insb
or
and
scas
aaa
push
pop
and
xor
mov
mov
or
sbb
scas
or
xor
pop
or
xor
testl
jae
fs
xor
push
imul
inc
adc
and
repnz
sub
push
outsl
pop
xchg
mov
pop
dec
es
dec
jne
sub
jge
and
arpl
in
in
xor
ljmp
mov
lock
jno
stos
mov
and
xchg
cmp
jnp
lods
pop
leave
jns
cmp
jb
xor
xor
adc
mov
shrb
int
inc
pop
addr16
and
inc
push
xor
pushf
push
std
mov
lcall
out
add
mov
jae
loope
cli
add
fcoml
xor
ret
xchg
xchg
xchg
sbb
push
sub
in
cmp
dec
push
scas
ljmp
ss
sub
jl
mov
inc
sub
shlb
in
movsl
inc
aam
and
js
adc
cld
mov
push
pushf
aam
lock
add
jno
xlat
sub
sbb
sahf
fdivs
adc
lret
stos
cltd
inc
xchg
pop
xor
mov
stos
jb
shll
jg
scas
ret
enter
mov
sti
mov
sub
pop
pusha
pop
lret
fstps
cltd
jmp
push
bound
test
dec
xor
xchg
repnz
stos
enter
imulb
sahf
pop
pop
cmp
pop
orl
popa
or
clc
xchg
xor
pop
roll
fadd
incb
mov
pop
mov
push
pop
add
push
adc
test
out
mov
adc
or
cmp
or
sbb
jmp
xor
and
jno
popa
imul
cmp
or
sbb
jmp
xor
and
jno
popa
imul
cmp
loope
adc
add
xor
and
jno
popa
jno
push
add
shrl
rorl
cltd
and
adc
stos
arpl
fsts
fnstenv
mov
in
hlt
cmp
or
sbb
dec
fistl
testb
pop
gs
mov
cwtl
push
lcall
adc
in
hlt
cmp
or
sbb
xchg
pop
je
je
inc
test
cwtl
and
add
add
adc
std
xor
cmp
adc
add
push
xchg
inc
jge
push
sbbb
sub
and
pop
xchg
pop
sahf
inc
fmuls
jl
xchg
testl
xor
mov
sub
xor
andl
jns
subb
jecxz
xchg
ret
loope
pop
push
mov
insl
and
add
jmp
sbb
or
xor
cmp
mov
sub
fstps
add
adc
in
in
or
dec
mov
jnp
xchg
cmpsl
out
clc
jne
jno
stos
fstpt
popl
mov
adc
dec
divl
pop
dec
lods
test
sbb
and
movsb
cwtl
faddl
add
or
adc
orl
rcrl
mov
ja
pushf
aad
test
add
popa
mov
adc
sub
sbb
add
push
lea
mov
mov
cmp
sub
push
enter
dec
xchg
cmp
rclb
leave
and
xor
aaa
fnsave
mull
jns
mov
cmp
sbb
daa
rcll
flds
pop
xchg
jb
jo
subl
insl
in
add
js
dec
xchg
pop
fs
mov
and
xor
add
adc
in
hlt
cmp
or
sbb
xchg
pop
fs
mov
and
xor
add
adc
in
fstpt
enter
xchg
push
mov
ds
test
dec
xchg
fists
jp
loop
cmc
aam
je
mov
xchg
loopne
aad
cltd
inc
lea
or
adc
loope
sub
jo
and
or
int3
inc
in
loop
je
mov
jne
adc
and
cld
cld
shl
in
loop
push
rcrl
dec
mov
lea
sbb
push
adc
mov
iret
jp
cmc
stos
mov
pushf
inc
xor
push
jp
add
jecxz,pt
testl
mov
xchg
xchg
lods
dec
sub
and
xchg
fnsetpm(287
lods
dec
out
pop
adc
xchg
pop
cmp
cltd
sbb
stos
subl
inc
dec
into
icebp
fwait
sub
xchg
push
xor
or
jmp
add
fidivrs
test
inc
loope
xor
mov
pop
jecxz
push
cmp
fucomi
pop
rclb
test
cmp
xorb
lret
xchg
filds
mov
lcall
mov
pop
lahf
sbb
xchg
mov
mov
aam
cmp
notl
dec
shl
mov
scas
lock
inc
adc
jg
pop
cli
test
test
add
inc
xorb
cmp
fdivp
ds
and
xor
loopne
ja
mov
je
sbb
js
leave
push
inc
xor
mov
leave
xor
rorl
leave
push
or
dec
mov
mov
push
add
das
insb
push
mov
sbb
cmpb
cmc
scas
push
sub
fwait
inc
pop
mov
daa
sbb
js
xchg
push
out
out
xchg
dec
aad
sbb
clc
ss
out
ljmp
test
sub
aad
mov
cmpsl
outsl
iret
and
je
xor
mov
cmpsl
and
inc
adc
test
sbb
insl
decl
arpl
test
jle
mov
xchg
sahf
mov
dec
rcrb
cmp
mov
shl
and
loopne
mov
popa
jp
push
push
push
push
imul
bound
xor
lods
dec
fimull
das
jg
add
jnp
dec
dec
fbstp
imull
cmp
int
add
inc
sub
inc
mov
outsb
and
sub
scas
test
test
sti
cwtl
dec
jnp
ret
xchg
mov
sbb
or
sbb
adc
sahf
mov
xchg
dec
xchg
das
dec
loop
je
sub
in
lods
dec
xor
idivb
mov
fsubrs
xchg
leave
scas
adc
vmwrite
addb
push
sbb
push
mov
call
sub
or
dec
xchg
sub
sub
je
sub
fildll
push
push
mov
stos
es
mov
xor
aaa
and
cli
sbb
dec
fcmovne
adc
jmp
ret
and
imul
mov
add
mov
sub
pop
add
ret
ret
mov
pop
jae
test
xor
and
sbb
and
sbb
and
inc
fistpll
lea
xchg
mov
mov
xor
fmulp
xor
inc
dec
repz
cmpsb
jl
dec
pop
pop
lret
jno
inc
and
mov
fldt
xor
or
fcmovne
adc
inc
subb
loopne
adc
add
mov
test
xor
sti
scas
jle
fwait
push
aas
xorl
outsl
sbb
jmp
mov
inc
mov
out
jmp
icebp
xchg
js
push
inc
mov
fwait
test
scas
adcb
inc
orl
movsl
sub
inc
mov
push
push
sbb
adcl
fdivl
test
cmp
push
lahf
ds
repz
dec
pop
clc
bnd
cmp
or
mov
movsb
pop
mov
mov
jo
insb
scas
adc
popf
xchg
dec
roll
dec
jb
mov
xor
pop
mov
cltd
jp
aaa
call
cs
push
add
dec
adc
js
inc
push
cs
aam
push
gs
jns
movsb
imul
out
push
addr16
sub
xor
jns
mov
pop
orb
or
enter
jle
sbb
shll
test
in
mov
hlt
sub
loope
int
sbb
lret
popf
js
add
push
xchg
repnz
mov
sbb
mov
pushf
subb
rorl
jne
push
pop
pop
lret
xor
imul
mov
xlat
xchg
and
jns
js
sub
in
insl
pop
aam
aas
imul
pop
pusha
sub
cmpsl
movsb
jnp
jp
nop
and
repnz
mov
xchg
into
mov
cld
fstp
jbe
xchg
sbb
pop
pop
mov
stos
jns
les
enter
mov
jae
pop
cld
sbb
es
out
aam
testb
lahf
lds
cltd
cs
pop
cmp
out
scas
shlb
loope
andb
leave
add
lret
xlat
in
add
outsb
fstpl
popf
inc
sti
jbe
dec
lcall
push
rorl
jge
jmp
lahf
dec
dec
ss
fidivs
mov
enter
lds
jle
xor
mov
sub
enter
daa
fwait
sbb
adc
add
lds
jb
fisubrs
adc
out
mov
mov
pushf
in
mov
test
aam
outsb
or
hlt
xchg
jecxz
test
insb
sbb
push
adc
popf
xchg
dec
jl
pop
pop
arpl
mov
mov
lret
icebp
mov
push
pop
addb
sbb
lea
and
addr16
mov
mov
enter
jo
and
imul
bnd
cmp
cmp
xchg
mov
or
vpmacsdqh
push
pop
mov
mov
and
inc
movsl
xchg
loopne
mov
arpl
notl
imul
jge
movsb
lahf
shlb
or
pushf
bound
or
sub
mov
iret
mov
pop
push
dec
fnstsw
leave
fiaddl
jb
inc
xchg
jnp
push
dec
inc
xchg
dec
cmp
jecxz
lret
pop
sub
insb
push
inc
outsl
xlat
idivl
outsb
mov
stos
adc
inc
rol
mov
cmp
clc
pop
jno
into
rcll
xchg
les
sub
lcall
insb
fldl
lahf
adc
push
jne
adc
mov
jbe
xchg
iret
repz
iret
jp
cmp
push
cmc
dec
sbb
nop
sub
fidivs
lahf
cmp
adc
cmp
repz
into
icebp
pop
mov
pop
aam
jns
scas
sbb
jnp
les
stc
xchg
dec
mov
dec
aam
sub
ja
mov
push
scas
sahf
rsm
or
leave
repz
or
out
cmpsl
pop
aaa
or
mov
stc
sbb
mov
jno
lods
xchg
fldcw
inc
mov
out
mov
popf
call
adc
and
adc
bound
add
in
push
lods
sbb
cmp
movsb
mov
ret
jb
punpckhdq
scas
xor
scas
jecxz
push
sbb
mov
repnz
lds
bound
inc
mov
ret
dec
aaa
scas
mov
dec
xchg
in
aam
cmp
xor
mov
out
imul
dec
push
inc
cmpsl
out
push
cmpl
adc
push
add
inc
in
aas
mov
xchg
mov
push
lock
and
xor
xor
lea
mov
push
mov
in
sub
call
fwait
pop
sbb
lods
bound
push
adc
popl
ljmp
xor
std
and
mov
xchg
pop
dec
and
add
xchg
dec
pop
xchg
imul
jns
push
push
lea
fisttpll
hlt
push
cmp
sub
aam
in
shrb
mov
outsb
test
mov
sbb
mov
mov
cmp
setb
test
inc
push
jg
jle
cmp
int
lcall
leave
in
mov
out
mov
adc
xor
loop
jns
inc
dec
jp
movsl
sub
inc
js
in
adc
mov
inc
repnz
je
fistps
rcr
or
les
lock
jb
cwtl
jp
sub
mov
mov
cmp
test
fwait
dec
mov
lods
jno
cmp
loopne
mov
in
sbb
mov
xchg
ret
adc
adc
xor
hlt
hlt
sahf
lcall
mov
mov
outsl
push
in
out
jge
inc
cs
fnstenv
sbb
mov
and
jecxz
cmp
xchg
inc
adc
jecxz
cmp
adc
mov
add
sbb
insl
sbb
pushf
adc
inc
xor
jecxz
jecxz
push
jp
jle
pushl
pop
nop
imul
mov
inc
jmp
sahf
out
scas
pop
cmpsl
ss
xor
mov
outsb
adcl
cmp
pop
xchg
clc
hlt
push
xchg
lahf
pop
ds
ljmp
mov
push
in
push
pop
mov
sub
push
fildll
inc
mov
or
inc
and
or
cld
mov
dec
push
into
aaa
out
loop
adc
sbb
fucomip
and
das
out
pop
inc
pop
movb
xor
nop
fs
jmp
outsb
sub
into
jb
shr
mov
pop
mov
xchg
and
cmp
imul
ja
mov
add
mov
loopne
add
daa
sub
into
xor
ljmp
out
lret
pop
push
pop
xchg
popa
out
add
stos
xchg
outsl
inc
xor
test
ret
inc
jmp
out
mov
movsl
imul
and
jge
test
jmp
ss
pop
daa
lahf
adc
mov
fcmovnb
stos
xor
cmp
xchg
test
stc
jno
sbb
mov
pop
pop
jo
cmpsb
decl
cmp
adc
test
out
mov
cmpsb
iret
fisttps
out
mov
fwait
or
push
imul
stc
jle
mov
mov
ljmp
fldenv
inc
jns
fnstsw
clc
dec
data16
pop
push
push
and
push
lahf
mov
adcb
ds
xchg
and
stos
loop
pop
lods
repz
lcall
pmaxub
mov
in
sbb
xor
mov
dec
inc
dec
or
or
fbld
mov
mov
fs
test
xor
int3
and
test
pop
cmove
out
push
arpl
and
pop
dec
or
in
sub
std
cmpsl
mov
icebp
fs
xor
xlat
jge
xor
mov
jl
inc
in
xchg
imul
sub
or
mov
cld
fcmovbe
jnp
adc
popa
testl
jo
loopne
js
out
insb
xor
lock
icebp
pop
into
pop
dec
mov
add
movsb
push
hlt
popa
push
add
xor
out
dec
outsl
mov
jmp
inc
jno
mov
cmp
shll
mov
lret
in
dec
cmp
dec
insl
mov
dec
inc
pop
inc
ret
movsb
dec
fisubrl
vmread
out
mov
mov
iret
xchg
cmpsl
icebp
cmp
dec
jmp
cwtl
loop
lods
push
shrb
inc
cmp
xchg
pushf
syscall
loopne
jl
push
mov
addb
mov
adc
sub
or
sub
sbb
or
push
dec
cwtl
or
and
dec
stos
sahf
mov
lret
imul
sarb
out
mov
out
push
mov
aaa
fnstcw
or
out
adc
mov
cli
jae
iret
jnp
jno
inc
push
and
out
xor
scas
xchg
cmp
les
dec
fcoml
lods
pop
push
sub
jne
call
xchg
jmp
push
mov
je
push
shll
or
int3
or
loope
mov
lret
sub
or
sbb
pop
pop
sub
cmpsl
das
fwait
jmp
movsb
das
inc
sbb
dec
popa
icebp
xchg
sbb
jno
xor
pushf
rcl
ljmp
mov
dec
stos
fstl
outsl
push
jl
mov
cli
pop
lods
mov
adc
es
or
cmpsl
xchg
pop
movl
lods
adc
adc
dec
or
fsubrl
jae
les
test
test
push
jp
daa
pop
shll
or
or
rorb
xor
ds
andb
aad
mov
fildl
scas
add
shrb
xchg
and
xchg
leave
push
jge
mov
adc
and
pop
pushf
imul
leave
xor
jmp
inc
mov
jo
loopne
xchg
shl
cwtl
insb
push
add
pop
mov
cltd
pop
pop
cmp
adc
cmpsb
pop
outsl
xor
adc
mov
lret
andb
loopne
mov
xlat
negl
daa
sub
push
int
lret
mov
hlt
insl
lret
cmp
xor
or
pop
sahf
jbe
add
outsl
ss
dec
faddl
fs
ds
jns
sbb
or
xchg
pop
xchg
cmp
xor
dec
ljmp
dec
xchg
mov
xor
dec
or
xor
jle
sahf
into
or
sbb
dec
xor
dec
jle
add
mov
cmp
fldenv
fucompp
cmp
stos
aaa
add
mov
ficoml
mov
arpl
aad
pop
stc
fwait
ret
leave
jnp
ret
inc
mov
jae
mov
sar
divb
dec
xor
xchg
inc
mov
repz
sub
stos
mov
cmc
jge
inc
lds
cltd
xchg
adc
xor
inc
jmp
loopne
lock
shrl
rcrl
or
or
or
mov
fstpt
pushf
push
popa
test
imul
mov
mov
xchg
dec
roll
xor
jns
mov
sbb
jb
cmpsb
xlat
data16
nop
pop
push
in
push
push
xchg
xchg
cmp
cmp
xchg
lcall
cld
pop
xor
or
xchg
push
jg
in
ss
out
xchg
js
push
sub
pop
fimuls
add
mov
push
stos
gs
aas
lock
dec
mov
mov
push
ja
xor
stc
lcall
fs
fildll
and
mov
jl
out
mov
and
enter
sub
fs
sarl
jb
mov
pusha
out
pop
ja
out
scas
and
xor
jmp
xchg
cld
mov
lods
xor
inc
repz
clc
sti
xor
sbb
and
cltd
negb
insb
std
inc
push
outsl
and
xor
xor
ret
orb
bound
pop
push
push
xchg
repz
scas
movsb
int
or
adc
add
lahf
repz
push
pop
push
loop
adc
test
xor
bound
dec
int3
lea
mov
repz
xlat
int
jne
push
xchg
cmp
mov
maskmovq
idivl
push
xchg
mov
push
dec
fldcw
in
dec
cmp
or
test
lcall
inc
push
cmp
pop
xor
divl
cmpsl
shrb
jle
and
repz
mov
pop
and
push
and
popf
stos
push
xchg
jns
cmp
xchg
push
pop
jle
shlb
cmp
push
ret
fwait
stos
lock
jge
mov
pushf
bound
mov
mov
pop
shlb
stos
push
push
xor
std
jne
mov
fidivrl
test
mov
mov
jge
push
jg
cs
aaa
in
out
stos
fs
int3
mov
aaa
dec
sub
aas
cli
jbe
pop
ja
sub
mov
in
jp
mov
mov
mov
cld
mov
daa
mov
mov
inc
cld
mov
mov
imul
repnz
test
pusha
mov
cld
ds
pop
rcrb
jg
lret
push
mov
adc
in
inc
mov
mov
xchg
jl
scas
or
mov
and
int3
mov
dec
jg
push
jno
shr
or
mov
lds
sub
mov
push
je
cmp
push
aaa
push
add
jns
mov
push
cmpl
scas
inc
jecxz
cmp
mov
shll
movsb
arpl
jmp
sub
mov
jle
movl
mov
pop
mov
xchg
lret
pop
push
push
les
xor
xorb
cmpl
sub
aam
mov
xchg
mov
xchg
aas
push
mov
mov
fwait
add
jmp
mov
cli
or
sub
cld
ret
add
sbb
int3
out
push
xlat
sub
test
clc
inc
push
jg
icebp
sub
cmpb
or
add
jo
std
aaa
sbb
mov
xor
lret
fs
mov
adc
xchg
aas
mov
shll
aad
lock
js
push
pop
pushf
stc
push
pop
dec
mov
js
xchg
sbb
mov
cltd
pop
pusha
mov
xchg
xchg
or
inc
dec
xor
ja
testb
pop
cmpsl
outsb
mov
inc
cld
mov
js
out
test
ja
and
lcall
and
pop
mov
jp
add
ret
fbstp
loope
mov
addl
cmp
ljmp
adc
pop
mov
mov
sub
jno
adc
lods
idivl
push
lcall
mov
xor
mov
out
add
ss
adc
aaa
xchg
cs
jbe
sbb
or
mov
popf
test
jmp
les
inc
or
in
dec
dec
nop
fildl
inc
das
movsl
movl
or
in
cmovne
popa
sub
out
outsl
sub
mov
lods
sti
inc
or
loopne
xchg
push
cmp
mov
sbb
gs
fchs
in
and
fsubl
xchg
dec
movsb
cmpb
fs
mov
or
push
mov
sarl
lret
pop
aad
ljmp
movsb
mov
pushf
movsl
push
cmpsb
mov
rclb
hlt
sti
insb
addl
test
adc
cmc
je
pushf
nop
mov
mov
enter
shl
leave
es
in
sarl
cli
cmp
outsb
fwait
push
push
jmp
lock
mov
dec
mov
or
lock
sbb
mov
xor
popf
jmp
pop
and
movsb
ret
in
pop
imulb
mov
inc
orb
jmp
ret
outsl
outsl
push
and
movsb
dec
out
add
outsl
xor
cmp
fwait
and
movsb
dec
ds
outsb
subl
inc
ret
pop
pop
cwtl
mov
pop
mov
sbb
add
sti
pop
cld
sub
sub
std
movsb
imulb
mov
and
xchg
jmp
dec
aam
adc
cmpsb
movsb
lret
mov
movsl
scas
shlb
pop
dec
imul
jne
push
fcompl
gs
gs
mov
std
stc
insb
pop
ret
or
pusha
push
daa
addb
dec
data16
aas
shlb
lcall
mov
and
loopne
and
mov
out
rolb
push
iret
add
cmc
cmc
xchg
mov
test
cmpsl
daa
mov
push
jl
out
movsb
ja
jnp
inc
mov
in
xchg
ja
or
sub
inc
sbbl
out
pop
scas
out
mov
imul
std
es
pop
les
imul
cmpsl
pop
sbb
and
jno
add
cmc
gs
adc
test
stc
pushf
push
arpl
movsw
dec
dec
dec
outsl
out
hlt
push
fnsave
popa
aaa
mov
push
or
add
sarl
lods
xor
push
mov
adc
shll
pop
out
mov
push
mov
or
push
into
jge
clc
lret
loope
andb
lret
and
jo
into
add
adc
aam
or
xor
sub
pop
inc
lods
push
fsubl
jg
scas
xchg
pop
cltd
sub
add
in
jmp
cmp
add
test
mov
mov
mov
add
jne
js
scas
arpl
pop
pop
and
or
xor
mov
pop
out
mov
scas
pop
jmp
lahf
xchg
je
sub
ficoms
or
gs
cmp
cmp
aad
iret
add
out
xor
jmp
push
and
push
into
sar
cmc
in
insl
mov
dec
sbb
lahf
sub
gs
sub
ja
aaa
cli
sarb
mov
or
dec
fmuls
daa
sbb
mov
insl
push
inc
outsb
inc
or
pushf
jmp
imul
or
pop
lock
cmp
out
sbb
xchg
pop
fs
mov
and
xor
add
adc
in
hlt
cmp
or
sbb
xchg
pop
fs
mov
and
xor
add
adc
in
hlt
cmp
or
sbb
xchg
pop
fs
mov
and
xor
fsub
sub
cmp
or
sbb
dec
adc
fwait
test
adc
mov
pusha
mov
daa
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
loopne
stos
loopne
nop
mov
cli
lock
in
hlt
sub
sbb
sub
jp
sub
lods
mov
mov
cli
lock
xor
and
enter
imul
dec
inc
mov
or
test
fcmovu
repnz
and
jbe
jle
push
and
push
sub
and
hlt
stos
loope
ret
in
bnd
sbb
push
xor
sarl
jmp
test
insb
push
scas
inc
or
in
jg
in
imul
add
repz
aad
in
pop
push
gs
or
ror
dec
jo
sbb
sbb
and
fwait
cmp
aad
dec
adc
incb
test
mov
call
xor
lret
mov
rcrb
push
add
gs
sbb
push
pop
ret
insl
jg
ret
sub
lret
cmp
adc
ja
lock
rcrb
imul
mov
pop
dec
stos
pop
aad
pop
push
inc
mov
loope
lds
jo
or
sbb
mov
cmp
sbbb
lock
rcl
push
and
xor
bound
pop
dec
push
jb
mov
iret
cld
out
in
sahf
push
xchg
dec
jae
push
push
aaa
push
and
sub
jecxz
in
mov
repz
push
pop
inc
jg
pop
aas
sbb
xor
cwtl
inc
cld
mov
cmpb
cmp
sub
sbb
or
jp
push
pop
push
dec
inc
mov
nop
mov
fcmovbe
lret
xor
and
adc
add
push
pop
push
dec
inc
mov
in
loop
aad
jmp
adc
pop
pop
in
cmp
fistl
out
sbb
jmp
push
imul
mov
test
js
shrl
inc
rclb
dec
pop
dec
jmp
sbb
sar
lock
xchg
cmp
jbe
movsl
jg
pop
mov
je
pop
lcall
push
dec
push
fistl
jmp
mov
xor
inc
in
or
xchg
adc
jae
pop
mov
cmp
or
mov
arpl
lret
je
cmp
jle
mov
dec
mov
scas
mov
mov
cmp
fstpl
xchg
lahf
cmpsl
mov
add
xor
mov
xchg
aas
xor
dec
pop
fiaddl
hlt
icebp
push
insl
xchg
jo
pop
adc
daa
or
xor
xchg
mov
stc
arpl
push
icebp
sub
int3
loope
gs
mov
sahf
cmp
shl
aaa
sub
xchg
adc
mov
adc
add
leave
bnd
ror
and
inc
pop
inc
mov
xchg
mov
mov
sbb
jp
pusha
push
fldt
insl
sub
mov
xlat
in
fisubs
or
cmpsb
mov
lods
cmp
push
dec
repnz
push
add
mov
xchg
aas
and
jae
xlat
shrb
sbb
into
adc
cmp
and
xor
push
inc
jl
dec
jne
push
ret
out
mov
lods
jae
jecxz
inc
mov
xchg
enter
hlt
sub
scas
test
inc
int3
lahf
mov
xchg
popa
mov
jno
lret
aaa
aaa
pop
cs
and
scas
pushf
xchg
fmull
cmp
push
mov
pushf
jle
je
sbb
lahf
push
cmc
jae
ja
lods
pop
mov
imul
sbb
out
clc
adc
fsubs
call
sub
repnz
jge
pop
repz
jmp
out
push
inc
fndisi(8087
push
in
dec
mov
imul
lds
mov
test
data16
xlat
or
push
mov
cltd
mov
pop
add
push
nop
push
pop
jmp
ljmp
push
xorb
aam
add
or
adc
shl
aaa
and
adc
push
out
into
les
pop
or
scas
scas
ja
pop
dec
mov
inc
es
out
mov
push
push
arpl
scas
les
lcall
mov
and
and
jle
sub
push
lods
xor
mov
jge
pop
mov
add
lret
pop
xchg
in
xor
push
ds
xchg
xor
or
cmp
inc
stos
add
mov
daa
out
push
sar
adc
js
imull
dec
fbstp
and
iret
xchg
cmp
mov
cmp
mov
jne
xor
or
jae
dec
jle
orl
add
rsm
adc
fmull
cli
into
inc
mov
xchg
int3
sti
xchg
mov
push
adc
lret
cld
out
into
inc
mov
idivb
ss
dec
inc
popf
stos
cmp
imul
mov
clc
xchg
das
add
int
xor
sub
cli
enter
sub
mov
mov
pop
inc
xor
xor
repz
cmpsl
js
orb
dec
outsl
addr16
aad
fprem
sbb
add
popa
or
push
rolb
loopne
sub
push
xchg
pusha
mov
and
add
mov
cmp
fsubs
fildll
out
mov
pop
sbb
sub
add
fildl
push
or
rcll
aam
dec
lret
daa
mov
jne
and
test
and
cmpsl
mov
sbb
shl
mov
sbb
iret
xchg
jge
xor
dec
fs
mov
dec
cmp
iret
pushf
movsl
add
sbb
mov
fisttpl
enter
mov
icebp
popf
lret
sarl
pop
xor
mov
lock
filds
mov
test
jne
mov
dec
scas
stc
movsl
cmpsl
rcr
stos
je
xor
jae
dec
jge
and
pop
cmpsl
rcr
repnz
imul
sbb
lods
sbb
in
xchg
movsb
cmp
xor
movsl
xchg
pop
stos
adc
mov
sub
stos
adc
mov
jmp
andb
inc
int3
pop
test
faddl
das
add
mov
sbb
js
mov
jmp
and
cmpsb
ret
punpcklwd
mov
xor
movb
or
mov
aam
xchg
push
loope
js
jecxz
push
lea
mov
xor
mov
push
lcall
xchg
jge
dec
test
or
rolb
mov
leave
cwtl
xchg
lea
outsl
lcall
scas
jle
jno
inc
cwtl
push
fsubrs
pop
add
in
divb
cmp
stos
sub
insb
xor
aam
dec
mov
xor
xchg
mov
jmp
jecxz
jb
pop
mov
pop
loop
cmp
mov
push
daa
push
and
popa
lods
js
addl
jbe
sbb
pop
enter
stos
movsl
cmpsb
cmp
mov
mov
push
xor
dec
cs
stc
int3
scas
mov
aam
jmp
outsb
jecxz
scas
hlt
out
je
mov
and
pop
stc
lea
inc
or
inc
jbe
xchg
or
xchg
into
mov
add
cmp
and
cmp
or
pop
or
cli
bound
xchg
stos
nop
mov
out
stos
cmp
mov
adc
or
mov
xor
out
push
xor
rolb
out
dec
push
xchg
pop
and
push
inc
loopne
mov
and
lods
cmpsl
sbb
push
out
sbb
aam
jmp
negb
inc
cmpsb
xor
loopne
xor
mov
xor
in
xor
dec
adc
iret
lock
test
lret
out
add
fnsaves
xor
divl
xchg
push
cld
cmc
mov
js
lods
cmp
xorb
push
ja
in
xor
xorl
test
push
jns
pop
xchg
addr16
push
inc
mov
in
sub
gs
pcmpgtb
js
push
out
sti
sub
jns
jg
outsl
or
scas
ja
sbb
push
add
mov
xor
xor
lret
cmc
push
mov
out
lcall
and
pop
jge
out
or
adc
mov
push
popf
sahf
xchg
popa
sbb
inc
jmp
sbbl
lahf
mov
imul
mov
sarb
mov
xchg
negl
scas
cmpsl
pop
sub
daa
cmp
sbb
lea
das
push
pop
mov
xchg
inc
sahf
out
cs
sti
notb
and
and
nop
lock
call
xor
jl
in
push
subl
push
xchg
out
scas
ja
pop
clc
mov
and
sbb
les
ss
mov
mov
orb
mov
repz
call
adc
pop
mov
mov
lods
inc
mov
aaa
shrl
push
arpl
sub
out
xchg
test
xlat
pop
das
rolb
cmp
cli
les
aaa
int3
aam
push
jo
and
jg
call
mov
lods
iret
inc
pop
imul
lock
adc
insl
fadd
jg
inc
fcomip
std
sub
mov
mov
sub
jmp
mov
mov
loopne
test
lret
popa
push
xchg
mov
inc
sbb
int3
push
lret
shlb
push
aas
mov
in
pop
cmc
dec
add
pop
mov
sub
xchg
in
xor
outsl
mov
aas
into
adc
adc
outsl
mov
aam
push
sub
shrl
gs
popa
fsubrs
nop
sub
leave
mov
test
inc
rcl
push
or
jo
loop
pop
frstor
mov
adc
pop
insl
bound
jle
adc
cmp
inc
nop
mov
imul
cmp
adc
jg
xchg
inc
mov
mov
xchg
add
test
adc
sub
jp
xchg
js
adc
leave
adc
cmc
mov
xchg
divb
sbb
add
jle
dec
adc
cmp
out
es
pop
push
out
adc
in
jmp
or
and
inc
or
addr16
and
pop
inc
mov
scas
mov
clc
in
mov
push
insb
imul
mov
mov
sbb
into
clc
jns
jge
sub
cmp
into
aaa
xchg
jecxz
or
dec
xor
jae
jle
sub
aaa
out
push
insb
cmpsl
subl
xchg
test
lcall
push
cmp
push
mov
sarb
sub
sbb
pop
pop
mov
dec
in
dec
push
shrb
or
test
mov
out
fmull
and
or
mov
fnstcw
cmpsb
shll
out
fdivr
sbb
jecxz
mov
ret
or
lret
in
fldenv
mov
fisubl
mov
std
aaa
xchg
xchg
int
xor
ret
sub
icebp
push
loopne
mov
cmp
adc
mov
ljmp
lret
call
cli
push
xor
xor
call
outsb
iret
arpl
call
push
pop
pushf
shll
repz
jle
pop
lock
shlb
sbb
out
lods
pushf
pop
out
test
add
lods
pushf
jns
or
hlt
xchg
sti
sbb
in
adc
jl
data16
repnz
sub
out
and
dec
jne
rcrl
add
push
fcompl
and
pop
cld
ret
cmc
aam
clc
bound
jno
pop
lcall
mov
sahf
mov
push
xchg
push
sub
addr16
push
out
ret
add
push
pop
or
push
addr16
inc
sub
clts
test
pop
xchg
cmpsb
adc
xor
mov
dec
jl
xor
cmpsw
xchg
mov
mov
adc
mov
sbb
mov
aaa
dec
mov
fnsave
out
sub
mov
cmp
sub
mov
mov
addr16
mov
mov
sahf
jmp
lahf
cmp
mov
jl
div
insl
sarb
mov
xchg
mov
outsl
jne
in
mov
lahf
daa
rcrb
push
and
addr16
jae
sub
aad
mov
shl
rorb
push
inc
inc
lret
add
xchg
xor
push
dec
andl
cmpsb
std
pop
js
add
sub
cmp
sbb
in
faddl
cmp
rclb
fnstcw
cli
mov
xor
or
in
fs
pop
int
dec
loop
roll
std
add
test
inc
mov
cmp
lret
clc
mov
stos
popf
adc
pushf
lea
pusha
imul
jno
dec
push
xchg
daa
inc
cwtl
popf
or
xchg
lds
imul
add
rcrl
in
cltd
push
test
dec
and
push
xor
mov
das
outsl
aad
clc
lcall
imul
out
mov
test
push
movsb
ret
sub
cmpsb
xchg
aaa
mov
lcall
and
mov
inc
sbb
and
xor
jns
std
test
fdivrp
arpl
shr
outsb
cmpsb
mov
dec
sti
sahf
dec
mov
sbb
aam
nop
fldl
jbe
xlat
dec
inc
inc
jmp
xchg
xchg
dec
or
push
call
add
pusha
xor
cmpsl
xchg
jo
pusha
fsubrl
pop
cmpsb
pop
leave
push
jg
aad
mov
roll
jae
mov
cltd
xchg
loope
mov
lcall
cmc
aad
loope
add
xchg
pop
outsb
push
jmp
pop
or
enter
xchg
rcrl
add
test
xor
jbe
push
shrb
sub
sub
jecxz
mov
fs
xchg
lret
rclb
subl
mov
cld
inc
nop
adc
or
cli
sbb
pop
adc
sti
inc
mov
into
xchg
jl
dec
sti
jno
fucom
push
xchg
out
adc
scas
xor
hlt
xchg
insb
lret
jns
hlt
roll
icebp
into
pop
aam
mov
mov
jecxz
cwtl
imul
xor
fisttps
fwait
push
pop
rcr
pop
mov
sbb
inc
jae
in
in
shll
test
or
mov
mov
xor
jo
xchg
adc
fwait
arpl
xor
es
mov
popa
imul
dec
arpl
sbb
nop
subl
jmp
pusha
push
mov
mov
sub
dec
cmp
xchg
ja
stos
arpl
dec
fsubr
inc
lret
addr16
imul
sbb
cld
ret
xchg
fs
xlat
cmp
or
gs
gs
add
call
rcrl
iret
xchg
sub
mov
sarb
nop
filds
xchg
xchg
outsb
out
call
pop
jge
xor
push
inc
cs
loop
out
test
add
subb
xor
nop
dec
repnz
dec
mov
jge
pop
adc
std
mov
std
cmp
dec
or
cmp
add
adc
mov
dec
inc
rcll
xor
cmp
scas
mov
adc
or
mov
int3
pushl
test
adc
mov
outsb
dec
std
jb
push
xchg
cmp
sbbb
movsb
inc
fistpll
push
mov
xorl
pusha
test
pusha
out
enter
and
ret
xor
mov
ret
add
mov
cmp
lods
out
mov
jbe
cwtl
cmp
or
cld
sarb
push
xchg
mov
nop
sahf
arpl
notb
mov
aam
out
js
ljmp
paddw
jg
iret
arpl
lods
push
or
ret
mov
add
sbb
sub
xor
hlt
dec
mov
or
lds
dec
sbb
push
sbb
pop
lret
int
insl
xchg
pop
and
jno
xchg
pop
and
push
gs
lods
cmp
cmc
jno
in
mov
add
push
push
jge
cmp
lcall
pushl
xchg
mov
xor
outsb
repz
mov
push
les
andb
add
adc
test
pop
and
inc
add
outsl
arpl
fidivl
jle
pop
clc
pop
sbb
cmp
movsl
sbb
arpl
das
xor
push
fcmove
inc
xor
sbb
in
test
lea
mov
pop
data16
push
mov
test
addr16
ss
dec
cwtl
pop
xchg
sub
ret
sbb
or
wbinvd
xlat
je
mov
pop
mov
push
jg
scas
jp
and
xchg
bound
rep
addl
mov
pop
imul
mov
or
arpl
scas
push
cmp
fidivs
push
test
add
outsb
jb
mov
popa
lret
xchg
test
adc
aaa
insl
roll
mov
daa
cmpl
push
fistpll
fadd
int3
cltd
xor
push
addb
std
lock
mov
pop
inc
rcrb
fsubrl
or
arpl
mov
enter
xor
jecxz
xchg
and
mov
push
pushl
and
lods
adc
pop
sbb
cs
cmp
mov
lock
push
or
jno
xchg
push
push
mov
call
cmpsl
sub
and
or
mov
cmpsb
lahf
rcll
or
lock
adcb
xor
jle
outsl
fwait
mov
pop
clc
add
inc
push
sbb
ja
sbb
and
cmp
aam
inc
add
sub
and
inc
mov
mov
xchg
mov
in
sti
dec
daa
ja
shll
mov
cwtl
mov
nop
pop
xchg
dec
xchg
push
xchg
xchg
das
rclb
cltd
les
hlt
test
cmpsl
fstps
insl
loop
sbb
inc
stos
test
xor
nop
sbb
pop
or
sbb
xor
mov
sarb
xor
mov
or
bound
push
mov
cmp
gs
stos
ds
lods
mov
ds
mov
mov
popf
outsl
cmp
inc
jb
sub
xchg
test
push
add
pop
fmuls
loop
or
in
or
sub
fisttpll
cmp
loopne
mov
cmp
push
loope
cmp
imul
push
push
adc
lods
jmp
mov
das
push
sub
arpl
jno
jnp,pt
jae
inc
and
inc
push
and
mov
gs
movsb
test
cmp
popa
xchg
inc
mov
out
xor
push
popa
cwtl
js
imul
test
lock
add
cli
xchg
dec
dec
sbb
in
cmpsb
inc
push
pop
leave
test
fistl
pushf
scas
jl
jle
cmc
into
ror
scas
addr16
incl
cmp
push
mov
lods
sub
std
push
cmp
add
pop
mov
and
xor
sub
fisubl
xchg
pop
repz
and
call
push
insb
das
out
jbe
sbb
mov
xlat
stos
lret
enter
xchg
sub
out
cmp
loope
repnz
fsubr
jecxz
aad
push
loopne
test
sub
test
vpsrlw
pushl
inc
push
iret
out
dec
xchg
lds
cwtl
add
jne
pop
dec
insl
movntps
popl
add
cmp
daa
mov
xor
nop
lds
push
pop
repz
test
shl
xchg
ljmp
movsb
push
adc
cli
mov
addb
ja
in
outsl
rcrl
pop
fldl
ret
jne
pop
ret
je
sub
xchg
iret
push
lret
and
ret
inc
ss
mov
lret
mov
es
out
mov
insb
cmp
stos
push
add
sarb
sub
push
push
aaa
lret
arpl
lea
xchg
jmp
jo
mov
outsb
sbb
inc
mov
icebp
ror
pop
loopne
push
ret
testb
mov
or
jg
and
lfs
sub
push
in
add
xchg
or
les
subb
add
adc
cld
iret
adc
mov
dec
cmp
test
test
fbld
jle
adcl
das
sub
cmc
pop
add
xlat
mov
xchg
shll
das
dec
fwait
or
pop
mov
push
inc
fs
scas
pusha
cli
adc
adc
adc
lret
inc
lcall
xchg
rclb
je
jp
out
xchg
add
push
ljmp
call
les
aam
jnp
stc
pusha
mov
mov
push
aad
add
mov
in
cmp
or
out
and
int
out
sub
daa
call
mov
ret
xchg
addr16
and
xchg
stos
ds
jle
mov
repnz
imul
dec
ret
subb
pop
mov
sub
jmp
iret
arpl
adc
loop
mov
mov
fiadds
xorb
and
out
push
outsb
subb
xor
mov
mov
divb
test
pop
in
xchg
cmp
dec
outsl
in
test
into
cmpsb
pop
push
inc
lret
mov
cs
movsl
lods
ljmp
ja
sti
leave
addl
add
push
rcrl
mov
pop
inc
dec
fmulp
xchg
popl
adc
xchg
in
mov
mov
xor
or
cmp
popf
mov
js
mov
xor
mov
stos
lds
push
test
dec
je
out
dec
mov
add
ret
insb
dec
lahf
stos
test
adc
addr16
cmp
addl
lcall
jns
std
adc
pop
test
popf
adc
dec
lods
aas
sub
popa
cmc
inc
test
pop
rolb
pavgw
loope
aam
push
sub
push
std
call
cmpsb
dec
ret
vdivss
add
test
mov
data16
cmp
data16
sbb
leave
jg
icebp
mov
jno
cmpsl
pop
push
xor
cs
hlt
clc
jle
xchg
addr16
stos
jge
push
icebp
rorl
icebp
mov
push
mov
mov
pop
aad
js
and
pop
push
sub
lahf
jg
lcall
jge
or
int
clc
inc
mov
and
jmp
or
sub
adc
rorl
aad
gs
mov
mov
lcall
xchg
ljmp
js
push
mov
inc
add
loopne
inc
or
cmpsb
movsb
iret
mov
jg
in
fs
pop
jmp
jnp
sub
fcoms
mov
push
adc
xor
shlb
arpl
cli
lock
xor
and
adc
add
push
pop
push
dec
inc
mov
nop
mov
fcmovbe
lret
xor
and
adc
add
push
pop
push
dec
inc
mov
mov
mov
aam
sarb
sub
adc
or
outsb
pusha
pop
pop
jnp
mov
lods
je
sar
ljmp
iret
aad
mov
or
or
sbb
aas
mov
cmovnp
rorl
movsl
dec
xor
and
jo
pusha
out
inc
filds
mov
mov
psllw
outsl
rcrl
aaa
xor
add
push
filds
mov
mov
psllw
outsl
rcrl
dec
xor
fs
adc
cs
fnsave
pop
shrl
repnz
push
push
idivl
cmc
incl
push
lret
insb
sub
in
rorb
push
mov
inc
lret
ficoms
mov
pop
fistpll
and
ja
out
pop
lods
mov
xor
jno
inc
ljmp
jbe
mov
pop
icebp
fmul
outsb
xor
out
adc
jmp
adc
dec
into
dec
dec
pop
jg
dec
xchg
sbbb
jmp
outsl
pop
inc
push
jecxz
pusha
add
aam
mov
mov
adc
cmpsl
sub
or
scas
idiv
mov
popa
mov
out
aas
mov
psllw
outsl
rcrl
dec
xor
add
push
filds
lds
in
std
pop
iret
lss
test
xchg
sbb
jle
gs
add
cmpsb
xor
dec
in
leave
sete
test
shll
mov
imul
adc
add
repnz
mov
outsl
rcrl
dec
xor
add
push
filds
mov
mov
psllw
outsl
rcrl
dec
xor
add
push
filds
mov
movsb
inc
sbb
ror
orb
andb
js
xchg
fistps
and
insl
dec
gs
sbb
stos
xor
inc
xchg
rcl
xchg
je
add
or
xchg
lock
xor
adc
mov
inc
and
in
sbb
pop
mov
or
xchg
adc
jno
and
adc
xchg
xchg
jg
jo
iret
inc
jl
scas
mov
roll
std
mov
push
outsl
pop
loop
jo
jo
jns
movsb
scas
lods
dec
dec
cmp
inc
popa
adc
inc
lret
xor
je
mov
in
xchg
adc
out
outsb
cmp
fistpll
xor
push
fmuls
mov
cs
pop
mov
lahf
mul
mov
jle
jge
jne
cmpsb
call
mov
pop
push
mov
dec
and
test
pop
lods
je
dec
sahf
je
in
jo
hlt
push
hlt
int
outsl
mov
pop
rorl
das
rcl
lock
mov
arpl
sub
jmp
xchg
sbb
inc
repz
push
inc
push
mov
insl
rcll
cli
dec
inc
lds
mov
cmp
cmp
dec
xchg
jmp
rolb
nop
cmc
mov
pop
outsl
int3
push
rorb
repnz
int3
loope
pop
xor
in
adc
sti
pop
jmp
add
jne
clc
scas
push
rol
mulb
mov
aad
decl
stos
adc
lods
fistpll
jb
or
test
ja
mov
jb
test
jle
icebp
sarl
dec
sub
push
loop
ja
jb
int3
shll
mov
lods
cmpsl
mov
int
adc
xor
mov
bound
sub
int3
int
mov
popf
stc
aam
jo
mov
out
adc
in
xchg
hlt
mov
scas
mov
fisubrs
mov
lahf
repz
cli
sub
scas
popf
fstpt
inc
ret
aam
ret
and
loope
jns
das
out
and
std
lcall
or
arpl
icebp
pop
mov
jp
arpl
insb
imul
shrb
push
ss
mov
popf
jp
cmp
push
cmp
sbb
inc
mov
lods
jb
popa
negl
and
push
dec
std
addr16
pop
popf
rolb
sub
sub
js
scas
mov
popf
and
xchg
push
adc
adc
add
sbbb
and
adc
mov
cli
loope
scas
pop
aam
jmp
or
push
inc
inc
pop
bound
subl
jns
test
push
xor
int3
ss
sub
popa
sbb
mov
sar
fimull
cmp
jmp
jle
imul
dec
xor
pop
push
imul
inc
push
add
aaa
sub
sub
pop
mov
inc
push
sub
and
and
or
mov
arpl
lcall
std
jno
cmp
loope
sti
dec
std
mov
int3
int3
mov
sbb
lret
dec
subl
lcall
cmp
cli
jg
push
inc
xorb
jle
lret
jmp
out
aaa
addr16
mov
scas
lret
adc
push
pop
out
inc
in
hlt
and
scas
jmp
mov
pushf
testl
xor
lods
negl
clc
imul
in
data16
fsubrl
aad
add
jne
xor
jo
or
xchg
mov
shlb
xor
test
cmc
fistpll
xchg
jge
dec
xchg
push
xchg
and
pminub
jmp
int
push
bound
push
sbb
jp
shl
lcall
jl
mov
sub
pop
outsl
ret
jno
mov
das
and
fwait
nopl
lahf
add
ja
inc
pop
mov
das
orl
int
cmp
adc
xchg
les
xchg
repz
sbb
adc
mov
aam
fisttpll
mov
decl
add
pop
jecxz
imulb
js
add
repnz
movsl
add
loope
pop
cmp
add
mov
jno
sbb
xchg
out
movl
lds
sbb
add
icebp
cmp
imul
jno
sub
fsubrs
cltd
mov
push
aam
push
cld
pop
adc
push
dec
push
ret
lcall
outsl
pop
dec
push
jnp
shrl
les
sbb
cmp
xlat
ja
or
lret
sbb
xor
add
ret
adc
repnz
lea
dec
add
mov
stos
popf
push
add
pusha
scas
hlt
dec
mov
mov
mov
lods
or
and
sahf
into
lea
and
leave
adcl
js
mov
sbb
xor
or
jmp
dec
int3
pushf
aam
and
scas
jbe
pop
mov
je
mov
sub
jmp
add
lret
jns
bound
pop
insb
icebp
lea
xchg
and
leave
sub
inc
mov
jnp
imul
pop
mov
lcall
aas
in
push
pop
loop
add
add
popf
arpl
xchg
sub
loopne
adc
pop
lods
out
repz
sub
gs
push
popa
mov
xchg
fstl
scas
push
fmul
xchg
push
push
push
icebp
jge
popl
ret
adc
xor
fs
sub
outsl
stc
pop
imul
sti
insb
daa
pop
push
in
mov
iret
sub
ja
push
mov
daa
mov
mov
jp
outsl
add
clc
lock
xchg
xor
jle
jge
daa
data16
mov
pop
cmp
fs
ret
xor
outsl
xor
inc
lcall
jb
movsl
je
jge
jle
lods
pop
vpmaddwd
sub
cmc
fisubrl
push
pop
mov
inc
pop
xor
ja
jmp
xchg
frstor
inc
lcall
jnp
add
cltd
push
repz
cmp
gs
xor
lahf
cmc
mov
orl
mov
jns
push
jb
shrl
pushl
into
and
pop
call
dec
mov
mov
movsl
push
add
xchg
rorl
cmp
loope
xchg
leave
and
xor
cmp
or
and
hlt
ja
mov
pop
sub
repnz
adc
lock
jne
and
sub
idivb
jne
sub
aaa
and
sahf
fsubrl
sbb
int
out
mov
inc
nop
dec
inc
push
and
syscall
push
inc
sbb
push
dec
jle
fs
in
fldl
ljmp
inc
add
sub
in
dec
into
inc
cmp
stos
pop
outsl
stc
idivb
add
inc
and
xlat
push
ljmp
fwait
jmp
sbb
pop
shrb
add
scas
push
sbb
jp
xchg
inc
in
xchg
cld
aaa
cmc
popa
cs
adc
repnz
jecxz
xchg
push
jecxz
cmp
call
imul
jl
and
push
inc
aas
fs
aas
lcall
sti
push
or
jb
daa
xchg
outsl
or
insl
clc
jae
fdiv
xchg
or
or
lret
pop
sbb
mov
pop
sub
sub
xchg
inc
push
int3
in
inc
mov
mov
dec
pop
pop
lret
lea
push
adc
clc
mov
fldcw
push
lret
xchg
loope
adc
xor
dec
jge
xchg
call
xor
stos
movsl
scas
fwait
mov
imul
out
sbb
push
in
lahf
in
daa
mov
call
stos
xchg
lods
mov
jne
inc
mov
cmp
cmc
and
scas
xorb
aaa
jbe
rclb
les
ret
hlt
sti
insl
and
cltd
mov
enter
mov
fbstp
fidivl
sbb
fs
add
movb
mov
mov
cmp
shl
outsb
ficomps
sbb
push
jp
cmp
and
out
cltd
loopne
ret
movsl
adc
mov
jb
pop
enter
mov
js
mov
xlat
lock
xchg
dec
in
pop
shl
and
inc
clc
cmpl
adc
jae
fisttps
lds
sbb
mov
arpl
seta
es
ljmp
jmp
es
mov
int
and
pop
sti
and
cltd
lds
cs
insl
repnz
cmp
das
pop
clc
in
lret
repz
inc
xchg
icebp
insb
mov
xlat
dec
inc
dec
mov
jne
mov
xor
jmp
inc
dec
lret
cmpsl
xor
divl
or
in
xchg
rorb
mov
pop
xchg
and
pop
or
jg
pop
nop
xor
popa
jae
ret
mov
adc
clc
push
xchg
ljmp
or
fidivs
sbb
pop
loopne
pop
push
pop
cmp
mov
push
js
rcrl
sarl
xor
xor
jno
sarb
mov
sti
pop
outsb
mov
mov
mov
movsb
adc
xor
test
adc
or
xor
fisubl
pop
inc
mov
ss
cmp
xchg
pusha
int
mov
in
inc
lcall
dec
outsl
inc
pop
sbb
mov
adcb
xor
filds
insb
cmc
and
mov
sub
add
mov
sbb
cmp
jo
and
jns
sub
mov
xor
jo
add
inc
je
aad
sub
mov
test
mov
out
cltd
or
jp
insl
in
es
cmp
scas
int
outsb
or
xchg
inc
add
out
mov
jae
test
cli
mov
out
insb
pop
xchg
enter
sahf
sub
sub
in
pop
add
pop
cli
arpl
out
cli
int
sub
dec
cmc
jp
std
dec
fistpl
sbb
subb
cwtl
push
add
add
and
iret
cmpsb
sub
jle
xchg
popa
ficoml
sbb
adc
sub
shlb
les
jnp
sti
lea
and
loope
dec
mov
add
iret
insb
xchg
dec
cltd
les
rclb
cmp
mov
hlt
insl
and
inc
xchg
add
sbb
push
mov
and
pushf
das
repz
push
sbb
xchg
add
ja
or
cmp
pusha
popa
jmp
stos
xor
mov
push
iret
add
jo
cmp
add
jecxz
lods
add
lret
sbb
mov
inc
das
xor
xor
sbb
ss
js
sub
or
cmp
insl
dec
ljmp
mov
and
mov
mov
lret
inc
mov
and
scas
push
cmp
in
xchg
lock
add
std
mov
xchg
repz
cmp
das
sub
jno
and
inc
dec
jl
scas
mov
mov
mov
jno
push
and
dec
dec
int3
xchg
adc
insl
xor
jns
jl
sahf
xor
add
addr16
in
add
xchg
out
nop
sub
fs
arpl
adc
mov
jo
test
clc
cmp
mov
lcall
cwtl
sbb
xchg
data16
mov
lcall
test
jo
nop
jnp
mov
dec
add
ror
inc
in
dec
cli
push
adc
xor
movsl
jecxz
and
mov
inc
mov
and
cmp
pushw
jge
mov
mov
mov
jg
pop
jne
adcb
sbb
pop
pop
cmpsb
cmp
or
fistps
popa
outsb
test
pop
sbb
pop
jge
dec
xlat
movsl
mov
and
cmpsb
mov
cmp
xor
ljmp
jecxz
enter
xchg
add
cmp
push
pop
cmp
shll
pop
sarl
js
inc
movsb
sar
stc
lods
pusha
pushl
lret
scas
lahf
negl
cmp
fdivrl
xor
int3
ds
lds
idivl
loope
mov
mov
xchg
xchg
inc
fcompl
pop
daa
std
rcrb
xchg
call
cmp
and
leave
jp
leave
jae
cmp
aam
mov
or
push
in
mov
cltd
dec
adc
pop
std
pop
enter
push
mov
je
popf
lods
mov
clc
xor
ret
xor
xchg
mov
sbb
or
clc
int
jnp
jecxz
dec
inc
add
insl
xor
or
and
enter
mov
movsl
cwtl
insb
pop
push
aas
repz
ficomps
scas
sbb
adc
pushl
out
add
pop
mov
inc
xchg
ss
xchg
jge
pop
movsb
xchg
pop
xor
std
shll
sbb
jmp
push
icebp
and
ret
add
test
mov
loope
mov
shl
into
lret
addr16
mov
iret
mov
movb
aam
push
and
add
pop
sub
les
and
dec
and
loopne
mov
pusha
jne
sar
add
dec
xor
xor
adc
jp
fidivs
cmp
test
pop
stos
pushf
stos
sbb
idivl
add
jb
mov
push
lock
mov
outsl
jne
xor
cld
negl
pop
xor
fwait
adc
sbb
cld
addr16
nop
cmp
pop
lcall
in
inc
dec
jg
inc
cmp
cli
ljmp
push
push
pusha
sti
cld
int3
dec
rclb
cmc
loope
pop
pop
mov
dec
mov
incl
test
pop
mov
outsl
lea
daa
adc
xlat
inc
leave
gs
inc
scas
dec
jmp
sahf
fstl
cltd
sub
lock
and
test
add
lock
jne
vpaddsb
xor
mov
scas
stos
push
pop
lret
dec
shrl
loop
iret
lock
std
pop
lea
jg
leave
jo
inc
mov
orb
sar
loope
sub
ret
rol
and
jae
jns
push
push
xchg
push
mov
cmp
add
fnstenv
inc
and
add
loope
cmp
inc
clc
cmp
lds
imul
push
enter
pusha
jae
dec
xor
jg
xchg
lods
lds
fwait
dec
hlt
in
jl
xchg
clc
icebp
sub
stc
hlt
xor
xchg
rolb
mov
stos
fadd
xchg
in
mov
movsb
imul
les
adc
mov
bound
inc
jmp
ror
jae
aas
dec
lds
aam
into
push
push
sub
and
push
jbe
int3
test
cs
cmp
xchg
iret
and
cmpsl
fdivl
and
or
and
inc
dec
fwait
jo
pop
push
inc
andb
je
rcr
xchg
lcall
pop
push
pmaddwd
pop
cmpsl
and
inc
or
mov
mov
stc
js
and
pop
mov
jno
int
jg
mov
adc
std
ja
mov
sub
push
int3
sbb
das
xchg
mov
xor
loopne
pushf
fldcw
cmp
lds
daa
jb
loope
aaa
ds
mov
loope
scas
lea
cmp
stos
mov
add
inc
mov
aaa
inc
xor
or
imul
pop
rcr
xlat
ss
xchg
adc
xchg
push
out
or
mov
fbstp
outsb
adc
add
sahf
lahf
fwait
scas
js
cld
insl
les
inc
les
fcoms
out
stc
mov
leave
jae
lock
movmskps
loop
xchg
sbb
loope
fisttpl
and
cmp
negl
mov
insl
push
sbb
jecxz
es
div
xor
ss
and
sub
mov
out
push
add
popa
nop
scas
cli
push
push
gs
shrl
add
mov
ficompl
jb
rclb
push
popf
xchg
and
outsb
cltd
sub
out
mov
xlat
bound
pop
mov
mov
mov
mov
sub
sub
aaa
pop
dec
loop
pop
adc
dec
jnp
cwtl
and
push
loop
mov
cmpsb
cmpsl
push
call
cmp
insl
pop
je
adc
outsb
stos
mov
daa
cmc
cmp
ljmp
xchg
sbb
dec
int3
mov
push
iret
stos
sub
stos
mov
fsubl
daa
mov
add
sbb
jbe
repnz
sub
xor
jle
out
cmp
and
xlat
mov
stc
repz
lret
mov
adc
insl
icebp
xor
lahf
icebp
testl
adc
enter
push
fnstsw
or
pop
lcall
push
lret
sbb
cli
mov
jg
shll
das
mov
pop
jecxz
pavgb
add
cli
out
sbb
xchg
into
add
into
pushf
xchg
sahf
mov
push
mov
or
lea
mov
mov
push
dec
ljmp
pop
imul
test
xor
decl
cli
push
in
push
lock
fistl
mov
sti
in
or
or
xchg
in
xchg
push
jnp
loope
jbe
dec
mov
inc
jmp
jnp
aas
rcrb
pop
xchg
call
insl
pop
dec
rcrb
imull
adc
loopne
out
in
lea
adc
cli
inc
xchg
cmp
jne
scas
dec
insl
mov
cmp
enter
add
shl
cmpsb
sub
push
cmp
mov
mov
popa
pop
jb
cli
bound
push
cmp
cmp
stos
jns
cmc
sub
cmp
dec
xchg
jl
and
mov
hlt
leave
fcomip
test
inc
lahf
push
ljmp
aaa
dec
mov
xchg
or
mov
mov
and
in
xlat
xchg
repz
pop
and
notl
mov
xchg
or
mov
mov
adc
dec
lahf
aaa
gs
data16
sahf
lods
icebp
scas
add
rorb
mov
out
fsubs
scas
jle
sbb
cli
int3
sub
jge
jl
push
sbb
aad
fidivl
scas
dec
adc
ret
in
or
sub
ret
cmpsl
cmp
xor
jg
aaa
cmp
pop
sbb
dec
xchg
inc
mov
pop
dec
test
mov
add
and
mov
repz
sbb
pop
xchg
in
fstl
jne,pn
out
mov
rcl
and
pop
ret
cmp
bound
lods
pop
popa
mov
stos
pop
or
mov
jbe
xor
flds
mov
or
mov
jecxz
mov
adc
adc
arpl
and
push
jecxz
xchg
sub
addr16
in
aam
lods
dec
add
fs
outsb
push
rclb
mov
jne
call
test
ret
lods
call
sbb
pushf
inc
adc
scas
dec
mov
and
mov
sar
cltd
xor
ja
jae
mov
jns
add
cltd
mov
push
hlt
cli
mov
add
lea
pop
inc
add
ret
dec
xchg
out
int
fcomp
xchg
int3
mov
test
int
push
data16
xchg
stos
add
push
cli
sbb
mov
xchg
call
or
aad
stos
ret
and
xlat
push
xchg
insl
es
push
xor
pop
popa
mov
xor
enter
fcomps
inc
push
dec
frstor
je
jecxz
push
mov
lods
pop
jmp
icebp
movsb
pop
loope
daa
insb
leave
mov
aaa
into
xchg
push
pop
sarl
lahf
or
mov
xlat
fsubrl
xor
rcrl
inc
xchg
pushf
push
aas
pop
call
and
mov
jecxz
mov
pop
mov
sub
lock
cs
das
sub
mov
in
insb
pop
or
std
jle
imul
std
fildl
out
pop
push
imul
jb
xor
cmp
cltd
add
loopne
and
into
sbb
fwait
add
aas
xchg
mov
mov
adc
pop
decl
lret
add
jnp
sub
and
push
jecxz
ret
rol
mov
jmp
cmp
leave
stc
aaa
jnp
add
adc
inc
sbb
inc
xchg
xor
fnstcw
dec
ror
or
mov
in
cmpsb
repz
stos
dec
bswap
push
in
mov
out
xchg
xchg
arpl
pop
test
jmp
test
loopne
push
or
mov
xor
mov
xchg
xchg
ljmp
stc
filds
mov
sti
sbb
sbb
mov
jnp
or
sti
arpl
int
lret
xchg
and
add
push
clc
xor
jno
or
push
cld
aad
adc
stos
jnp
mov
push
test
aas
sbb
jecxz
cmp
and
je
mov
mov
neg
addb
cli
jmp
idivb
sbb
jns
aaa
or
jmp
add
sbb
cli
fsubrs
scas
dec
movaps
mov
cmp
or
mov
out
or
mov
ret
mov
mov
xchg
mov
or
pop
cmp
gs
cmc
negl
pushf
push
es
mov
jbe
push
jecxz
mov
in
xorb
ret
je
cmp
pushf
rolb
sbb
xchg
out
or
mov
push
das
cmp
outsb
and
andl
or
mov
decl
push
popf
das
ret
inc
incl
pop
sbbl
das
xor
psllw
outsl
rcrl
dec
xor
add
push
filds
mov
mov
psllw
outsl
rcrl
dec
xor
add
push
filds
mov
mov
psllw
outsl
rcrl
dec
xor
add
push
filds
mov
mov
psllw
outsl
rcrl
dec
xor
add
push
ja
adc
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
imul
fwait
xor
and
or
push
add
pop
add
add
add
add
pop
add
push
add
add
add
add
add
nop
add
sbb
add
add
add
add
test
xchg
add
add
pusha
add
dec
add
add
add
add
add
add
inc
add
nop
add
je
xor
add
add
add
add
add
add
sub
sbb
push
add
sbb
add
cmpsl
add
mov
add
add
add
mov
mov
test
add
out
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
and
mov
add
add
add
add
add
scas
add
add
add
add
add
add
add
add
add
add
filds
cld
add
add
add
add
jge
cmpsl
add
rolb
jno
xor
inc
add
add
add
and
dec
add
add
or
xchg
add
add
lret
add
add
add
add
add
add
add
scas
add
add
sub
and
sbb
dec
add
add
add
add
add
add
add
add
mov
sub
sub
dec
add
add
add
movl
loopne
fiaddl
pusha
add
and
adc
add
add
add
add
add
add
sbb
inc
add
add
xchg
add
add
add
add
add
add
add
add
mov
imul
add
add
adc
cmp
mov
cmp
adc
add
add
add
add
add
js
or
aaa
add
add
add
add
addb
add
add
add
add
add
add
mov
fadds
cmp
mov
jmp
add
add
add
addb
enter
adc
leave
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
test
nop
add
add
add
add
add
add
add
add
add
add
add
sub
jo
xchg
add
add
add
and
xor
sub
sub
jo
xchg
add
add
cmp
mov
push
add
add
sti
add
add
add
add
add
add
add
add
add
add
add
add
lret
add
mov
mov
add
add
add
add
add
add
add
or
mov
add
add
add
jbe
sub
add
add
mov
add
mov
mov
mov
push
add
add
add
xor
jge
push
add
add
inc
add
add
add
add
mov
sub
xchg
add
add
add
add
add
imul
add
add
add
add
pop
aam
iret
mov
mov
std
push
les
mov
aas
int3
mov
xchg
mov
stc
add
les
rcrl
jge
inc
movsl
pop
lcall
call
dec
adc
roll
stos
cmpsl
jg
lahf
xor
andl
ljmp
imul
pop
adc
xlat
dec
fiaddl
mov
sbb
test
fldcw
shrl
in
filds
leave
cwtl
cli
call
push
pop
sub
sub
and
dec
fstl
call
adc
adcb
add
mov
cli
pushw
or
mov
mov
mov
lret
shlb
mov
push
loopne
or
dec
stos
sub
dec
mov
in
dec
jb
sti
cmp
mov
and
stos
loop
lea
call
xchg
testl
mov
jg
sub
xor
and
ret
insl
xchg
jbe
je
in
xchg
cmpsb
xchg
cmpsb
sub
js
jo
or
cmp
jmp
cmp
mov
push
stos
leave
out
dec
xor
push
aad
mov
and
xchg
jp
pop
dec
sbb
rorb
inc
aad
test
add
aaa
loop
insb
sar
push
out
cli
pop
xchg
sbb
je
add
jbe
cli
repz
push
mov
inc
cli
mov
addr16
mov
fimuls
ljmp
xor
sub
dec
dec
popf
cmc
xor
dec
mov
sub
jno
cmpsl
fisubrs
out
pop
jno
dec
add
enter
fcmovbe
lahf
pop
lret
inc
cld
into
mov
roll
push
inc
push
jmp
adc
push
in
cli
mov
xchg
sarb
out
stos
mov
out
and
rcr
xor
ret
sub
cmpsb
inc
ficoml
or
mov
cmc
xchg
sarl
lea
pop
not
scas
adc
cmp
movsb
jl
das
sti
aam
popa
mov
and
repz
inc
leave
scas
sub
and
movsb
mov
push
inc
test
xchg
lret
jne
dec
lods
mov
sbb
in
lds
xor
repz
daa
adc
loop
sub
notl
jle
mov
jmp
mov
lcall
jmp
push
sbb
cld
and
sti
pop
sti
outsl
daa
call
add
inc
call
pushf
dec
mov
add
inc
icebp
dec
pusha
sub
mov
mov
and
cltd
add
jg
push
add
jmp
xor
push
int3
arpl
adc
imul
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
