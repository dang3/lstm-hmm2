call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
testb
xchg
movb
pushf
mov
jbe
addr16
push
add
ss
arpl
inc
push
inc
divb
movb
roll
and
inc
add
adc
mov
push
push
inc
imulb
lcall
xchg
jbe
inc
sbb
inc
add
xor
arpl
or
out
or
sub
add
mov
xchg
cwtl
arpl
scas
add
mov
sbb
jg
js
sbb
mov
mov
ss
push
mov
cmpsb
dec
out
and
int3
mov
cmp
cmpsl
fsubrs
jbe
xor
push
scas
xchg
jae
push
inc
mul
out
mov
shll
cmp
arpl
fsubrl
and
xchg
fnstenv
sub
mov
inc
ss
cmp
shll
ret
xor
rcll
add
fldz
inc
push
pop
mov
adc
leave
push
add
jmp
xchg
aaa
test
and
push
cmp
cltd
mov
cmpsb
jecxz
lret
jbe
cmp
inc
sbb
imul
push
push
push
daa
mov
xchg
mov
mov
aam
repnz
add
inc
ds
aaa
push
xor
inc
cs
lret
andl
and
out
mov
scas
adc
inc
push
addr16
inc
aaa
add
jp
jae
xchg
repnz
mov
lahf
cmpsb
jecxz
roll
and
inc
add
jae
arpl
push
push
inc
divb
movb
roll
and
inc
add
jae
arpl
push
push
inc
divb
jmp
xchg
jno
add
jg
mov
push
dec
jle
int
movsl
mov
lods
pushf
in
out
add
insb
adc
mov
call
aad
fistl
hlt
sbb
sar
es
mov
mov
aad
stos
push
push
push
fildl
notb
jbe
xchg
loopne
mov
std
test
cli
and
popf
fs
cmp
and
enter
mov
adc
lcall
repnz
inc
lods
fists
push
mov
sbb
sub
xchg
rcll
bndstx
inc
rorb
scas
popa
test
pusha
dec
lret
jns
or
je
xchg
mov
fldt
push
fcomp
push
sti
push
add
push
in
ja
push
imul
or
xor
dec
mov
mov
inc
sti
inc
xchg
sahf
mov
enter
dec
out
das
aam
fadds
sti
and
jl
mov
pusha
ljmp
add
stos
inc
sarl
cmp
mov
inc
and
and
or
push
shll
in
test
aaa
fisubrs
adc
int
aaa
test
push
lea
lea
jns
xlat
push
scas
add
cmc
movl
cmpsl
pop
and
imul
sti
cwtl
ds
xchg
adc
pop
das
out
pop
pop
repnz
into
div
xor
push
inc
jo
xchg
push
xor
fwait
cmp
xor
lret
push
xor
jo
pop
clc
or
test
push
mov
or
scas
dec
daa
aad
inc
push
xor
pop
mov
aaa
nop
xchg
lock
iret
fwait
mov
adc
xor
mov
fsubrp
xchg
add
add
lock
xchg
jle
enter
roll
and
xorl
notb
jnp
or
pop
mov
test
fistpl
out
mov
pop
movsb
xchg
xchg
hlt
into
or
jbe
addr16
jae
inc
add
aam
xor
sbb
int3
cs
ds
lods
daa
xchg
stos
jge
push
cmpsb
sbb
fisttpl
packssdw
fnstsw
jno
daa
in
loopne
jp
fcmovnu
cmpsb
fcomi
daa
fwait
outsl
test
cmpsb
sbb
lock
mov
int
ja
sarl
mov
bound
stc
test
pop
sti
les
pop
test
pop
insl
jnp
xor
jp
add
das
mov
mov
out
inc
and
aaa
add
aad
lock
xor
sub
sbb
xchg
insl
mov
les
cmp
inc
cmp
das
insl
pop
push
inc
xchg
add
sar
cmp
push
test
mov
xchg
sub
pop
inc
push
cwtl
cltd
aad
rcrb
mov
mov
icebp
dec
scas
dec
mov
iret
xor
es
out
xchg
hlt
xor
shlb
inc
sbb
dec
push
sbb
and
pushl
or
dec
ja
dec
lcall
pop
in
push
dec
rclb
sbb
dec
out
test
in
xchg
mov
notb
fs
jmp
jae
push
mov
push
shl
inc
inc
aad
inc
xor
gs
pop
test
aad
stc
pushf
inc
test
or
or
pop
lock
stc
pop
incl
divb
sub
lahf
lcall
jl
xchg
jb
dec
aaa
and
into
fldenv
adc
mov
add
fldt
jbe
mov
push
mov
fadds
or
cmp
pop
popf
fldenv
pop
mov
push
push
xchg
dec
repz
sbb
out
outsb
fcmove
jne
cmp
push
leave
fwait
jnp
push
stos
push
cs
insl
adc
test
cmpsl
std
fwait
mov
cltd
mov
xlat
fs
jb
out
mov
push
ror
addr16
xchg
sbb
add
lods
mov
lock
les
adc
mov
or
adc
stos
fildl
fnstcw
orb
push
stos
jle
testl
cmp
js
aaa
pusha
mov
sahf
inc
sbb
fbld
mov
pop
fs
pop
test
pop
add
test
repz
add
repnz
jg
imul
mov
xchg
adc
xchg
divb
popf
add
jnp
inc
leave
push
sub
pop
push
inc
lods
fisttpll
mov
lock
andl
lods
jmp
xchg
inc
cmpsl
subb
jle
mov
out
movsb
mov
fwait
in
jns
add
xchg
into
cmp
inc
cmc
push
cld
lods
dec
mov
lea
movsb
sahf
xor
mov
cmp
fs
xor
in
jnp
testl
call
dec
push
dec
rorb
mov
lahf
mov
cmp
add
bound
mov
pop
loope
loope
insl
xor
and
add
pop
adc
ja
repnz
push
sbb
add
daa
sahf
ret
push
mov
dec
pop
xor
cmp
mov
imul
push
mov
cmpsb
xchg
push
js
adc
pop
daa
mov
nop
cli
cld
adc
les
mov
sti
mov
mov
xor
mov
and
dec
lea
cltd
ret
repz
insb
shr
sbb
push
adc
sub
inc
xchg
sbb
cmc
inc
fidivl
xchg
xchg
lods
mov
out
int
bound
mov
push
mov
inc
inc
add
repnz
push
xchg
scas
sti
mov
jns
inc
int3
mov
loope
stos
lock
sti
clc
int
push
dec
xchg
mov
xor
mov
outsb
mov
sub
bound
test
pop
or
test
dec
push
jb
and
repz
das
repz
popa
call
int
cltd
cmp
clc
ss
cli
mov
cmp
fsubs
sbb
add
dec
divl
and
cmp
rorb
xchg
dec
xchg
add
aam
mov
mov
xlat
push
scas
je
rolb
cmp
inc
dec
repnz
shrb
movsb
mov
cld
jmp
or
jnp
popf
push
rcrl
adc
cwtl
inc
add
fisubrl
aad
negl
icebp
clc
nop
clc
lahf
pop
rorl
enter
lret
add
mov
xchg
mov
sub
aaa
adc
fldenv
imul
sbb
sahf
xchg
cmp
fistps
imul
iret
mul
pop
sub
fsubs
ret
cltd
xor
sbb
je
rclb
insb
lods
push
ficoms
insl
icebp
add
push
push
jge
jns
insl
xorb
loop
shll
ret
fisubs
fs
clc
xorb
and
inc
mov
in
out
ret
mov
and
fadd
mov
jae
arpl
mov
sarb
jg
test
adcb
arpl
mov
fidivrl
sbb
leave
popa
in
loopne
mov
adc
mov
test
in
ss
dec
xchg
xchg
pop
inc
inc
insl
push
mov
inc
pop
xchg
mov
iret
nopl
pop
adc
shrl
filds
jge
insl
xchg
xor
jp
add
arpl
pop
out
xchg
lret
jae
in
aam
mov
scas
adc
out
dec
mov
xchg
sub
inc
lahf
shl
lahf
xchg
pop
es
xchg
arpl
es
je
push
pop
cmc
cwtl
xor
pop
pop
sub
fmuls
popf
pop
mov
mov
int
mov
xor
inc
int
sbb
fidivl
xor
ja
imul
es
mov
sub
xchg
icebp
sbb
add
push
inc
sbb
mov
mov
arpl
push
or
lret
cmp
inc
dec
mov
test
imul
arpl
cmp
into
cmpb
xlat
cmp
loop
pop
rcrb
adc
cmpsb
inc
push
sti
jecxz
and
fdivr
cmpsl
aad
int3
mov
popf
test
sub
je
fidivl
es
push
dec
stos
jp
rcrl
inc
outsb
dec
ret
cs
outsl
inc
loope
imul
sbb
xchg
repnz
mov
je
mov
pop
fistpl
adc
xor
out
pusha
xor
add
sbb
imul
movsl
mov
popa
pop
pop
addr16
sub
fsubrs
push
mov
pop
xlat
or
mov
sbb
mov
add
inc
cld
out
fwait
push
fwait
jp
add
sbb
out
dec
int3
loop
lods
cltd
aas
icebp
js
add
and
dec
bnd
mov
push
ftst
sub
aad
push
les
xlat
push
shr
push
mov
lahf
jo
pop
push
jo
int3
inc
idiv
je
jge
addb
xchg
lods
das
push
jg
daa
mov
mov
lods
fwait
cmp
rcr
sub
mov
inc
clc
or
js
fbstp
push
repz
ljmp
mov
lock
arpl
outsl
ja
mov
push
sbb
cmp
leave
mov
push
and
sahf
add
jnp
sub
inc
inc
pop
pop
lret
push
jo
bound
sahf
int3
shrl
sbbl
inc
call
mov
imul
xor
stos
and
cli
or
cmc
xor
or
adc
adc
es
inc
jg
aad
mov
orl
add
cld
sub
adcl
popf
mov
shrb
stos
cmpsl
or
sub
sbb
xchg
lret
or
pop
es
iret
pop
inc
xchg
or
cmpsb
int
ds
mov
std
adcb
bswap
in
in
lret
pop
cwtl
pop
mov
aad
mov
cltd
mov
xlat
gs
test
jo
xlat
fs
aaa
xchg
mov
imul
popf
xor
inc
cmp
je
popf
insl
mov
dec
xor
lods
xchg
cmp
scas
rcr
xchg
mov
mov
sub
jp
jae
jae
mov
sub
test
adc
pop
ss
pop
hlt
jb
out
jmp
add
fadds
cld
xor
movsl
xor
aas
int3
inc
xchg
jae
and
push
sbb
sbb
pushf
mov
lea
mov
jecxz
push
jl
loope
insb
cmp
scas
push
mov
cmp
pop
out
clc
leave
fwait
mov
sbb
xlat
imul
std
push
movb
mov
lods
mov
add
cltd
aam
imul
adc
mov
dec
or
push
inc
dec
xchg
gs
dec
movsb
add
mov
addr16
pop
data16
icebp
add
hlt
ret
ficoms
imul
test
fcmovnbe
clc
jl
imul
test
jecxz
test
or
inc
shlb
pop
insb
test
aam
sub
xor
xor
pop
das
test
sbb
pop
mov
ds
sub
sbb
pop
ja
aam
mov
mov
xlat
jno
jns
mov
mov
icebp
pop
test
in
es
lahf
gs
lods
pop
daa
les
test
lds
rcr
loopne
jecxz
pusha
in
or
ret
mov
sub
inc
jg
sbb
or
xchg
or
jge
inc
mov
nop
adc
push
std
lret
les
les
jl
addr16
mov
loope
negl
scas
movsb
adc
cmp
orb
pop
cmpsl
mov
jae
adc
gs
jmp
fisubrl
sub
adc
gs
and
aam
and
push
pusha
ds
and
mov
xor
mov
je
jecxz
gs
mov
dec
fwait
push
stc
testb
mov
cld
pop
cltd
add
sub
push
call
push
into
xor
xor
jle
lods
jge
sbb
jno
int3
add
push
mov
and
mov
xor
rcr
push
repnz
jmp
mov
enter
add
xchg
ja
ss
mov
daa
push
ret
fmuls
sbb
arpl
and
sub
cmc
xchg
and
lods
sub
adc
mov
xchg
call
xchg
adc
xor
and
inc
inc
inc
adc
stos
mov
mov
int
clc
push
mov
in
ja
fldl
pop
pop
and
ficompl
dec
je
jnp
out
xchg
pop
add
add
aaa
es
or
dec
pop
imul
into
mov
sub
insl
fiaddl
jl
in
jp
nop
movsl
shl
push
xchg
ljmp
js
arpl
push
call
xor
mov
push
add
inc
jns
or
and
cld
out
das
mov
jecxz
inc
mov
fwait
jge
scas
leave
add
mov
cltd
mov
aas
pop
aas
pop
stos
xchg
push
jns
rorl
mov
sbb
inc
jnp
xlat
jbe
mov
dec
lods
andb
push
stc
jns
rorb
idivb
addr16
jnp
dec
and
sbb
mov
icebp
cmpsb
lds
push
cltd
and
jae
ret
dec
shrb
pop
icebp
xchg
mov
lock
mov
in
mov
mov
aam
dec
ja
and
das
mov
push
push
and
sub
mov
mov
das
ljmp
and
dec
cmpsl
in
adc
cmp
add
adc
cmpsw
sbb
pop
inc
jno
rorl
push
insb
popa
dec
and
push
cs
sub
or
jo
cltd
sub
inc
cli
test
call
loop
push
sbb
js
or
pop
pop
lods
inc
and
fisttps
cld
jl
xchg
jmp
testb
sahf
jnp
dec
cmp
test
dec
movsl
scas
imul
sub
popf
xor
add
push
mov
out
lds
mov
scas
pop
add
call
test
mov
fmulp
cmpsl
sbb
mov
outsb
clc
gs
push
js
mov
pop
xor
jne
xchg
mov
bound
mov
andl
pop
inc
pop
mov
orb
popf
inc
mov
ficoml
inc
mov
in
decl
inc
jno
cltd
jmp
movsl
mov
push
xchg
mov
and
enter
test
jnp
addb
leave
and
xchg
mov
jge
sub
ret
aam
dec
add
into
pop
sbb
jmp
push
inc
scas
test
fildll
jae
sbb
pop
mov
inc
pusha
push
int
add
xor
dec
jae
lea
repnz
lahf
test
fdivrl
xchg
pop
jp
mov
cs
inc
fstpt
fildl
dec
xchg
cld
xchg
jge
divb
hlt
mov
imul
nop
cmc
outsl
out
jns
xchg
loop
jmp
flds
jg
iret
dec
sti
fldl
in
dec
arpl
inc
ds
ds
pop
lods
lcall
sbb
sbb
push
pop
jnp
add
gs
shrl
test
ljmp
test
lods
adc
pop
mov
stc
xchg
xchg
sub
shrb
shll
das
daa
cmp
inc
orb
fsubrl
sbb
mov
mov
mov
lea
adc
xor
mov
je
inc
mov
pop
or
and
xor
mov
adcb
sub
mov
es
push
mov
dec
add
pop
aam
in
cmp
into
dec
pushf
add
add
sar
sub
pop
mov
sarb
push
mov
cmc
repz
inc
cltd
mov
fadds
fimuls
jmp
add
repnz
in
mov
or
mov
push
xchg
jno
inc
lret
xchg
mov
std
mov
and
nop
rclb
or
in
xor
pop
and
and
and
cmc
cmpsb
cmp
mov
imul
jp
stos
xlat
js
mov
or
lods
in
dec
mov
insl
cmc
out
push
or
adc
pop
mov
scas
fisubrl
cmp
shlb
mov
jle
cmp
push
and
xor
outsb
and
js
mov
into
repz
es
cmp
adc
imul
repz
adc
inc
xor
test
xor
dec
fidivs
and
push
and
fsubr
fildll
pop
pop
and
dec
or
ja
ja
mov
rorb
nop
dec
mov
add
icebp
fstpt
cmp
fs
sbb
movsl
cmp
ds
sbb
icebp
nop
push
jmp
nop
insb
dec
hlt
ja
hlt
adc
sub
es
inc
int3
mov
gs
daa
xchg
xor
fsts
rorl
in
sub
pop
cmpl
pop
jnp
sahf
push
hlt
stos
mov
sbb
shl
mov
cmpsb
pop
mov
pop
data16
push
std
in
aam
push
mov
pushf
inc
jnp
cmp
sub
test
xchg
int
aam
ret
add
jmp
sahf
and
jle
push
test
lret
js
xchg
push
and
mov
push
es
mov
and
imul
inc
aas
dec
icebp
push
jns
decb
into
imulb
jg
mulb
xchg
push
in
aam
xchg
outsb
popf
sbb
clc
fcoms
pop
movsb
sub
inc
xchg
dec
mov
pop
mov
js
push
fnstenv
and
xchg
cli
mov
mov
movsb
xchg
daa
pop
insb
xchg
int3
jmp
add
pop
cmp
or
add
popa
sbb
mov
jns
scas
cvtps2pd
xchg
xchg
stc
pop
xor
mov
mov
sub
daa
cmpsl
push
cltd
aam
shl
mov
sbb
sbb
or
add
push
or
sbb
nop
dec
add
xchg
mov
and
xchg
mov
push
dec
lret
push
test
lcall
loop
and
jmp
scas
xchg
push
dec
mov
out
testl
jmp
outsb
pop
sbb
or
xchg
sbb
in
cs
in
clc
push
jp
js
add
outsl
cmpsb
cltd
sbb
dec
and
xchg
add
sbb
repnz
jge
aaa
notl
mov
mov
jb
mov
ror
lahf
repnz
sbb
add
ja
lods
lahf
fists
scas
stc
mov
in
out
jl
xchg
out
cmp
cmc
les
dec
scas
sub
mov
inc
dec
push
lds
and
test
cli
lock
out
icebp
cmpsb
sbb
and
inc
dec
or
inc
fstpl
and
repnz
adc
repz
mov
xchg
and
outsb
jb
pop
test
jle
inc
pusha
or
bound
add
sub
push
loop
ljmp
push
or
dec
adc
lcall
ret
cmpsb
pop
mov
sub
inc
lds
out
or
not
shrb
pop
leave
js
or
in
mov
ja
mov
mov
mov
shr
fistl
imul
cmp
aad
jmp
jmp
mov
jns
xor
je
xor
fbstp
pop
fsubp
mov
xchg
popf
or
cmp
cmp
cmpsb
out
mov
ret
pop
mov
rcrb
push
jle
ret
pop
adc
lret
dec
out
mov
lret
push
das
int3
mov
cs
insb
or
insl
adc
sub
add
mov
jb
js
loop
cmp
dec
out
out
xor
cmp
addr16
rclb
bound
push
hlt
in
jmp
xlat
movsb
js
mov
shrl
aad
jmp
and
inc
jg
pop
inc
xchg
push
add
stc
cmp
cltd
stos
mov
sub
out
or
popf
or
adc
scas
jecxz
mov
sarl
pop
inc
gs
inc
jb
push
inc
fxch
int3
xor
outsl
in
mov
ja
mov
lcall
xchg
popf
repnz
mov
loope
mov
arpl
dec
push
shlb
push
mov
ja
fwait
push
mov
add
flds
xor
outsb
xchg
ja
or
lret
cmp
push
adc
lea
movsl
push
mov
cmpsl
inc
cmc
dec
movsb
cld
pushf
fiadds
xor
xor
and
mov
xchg
movsl
or
roll
pop
inc
outsb
repz
repnz
das
mov
pop
daa
fs
mov
cmp
dec
or
pop
sbb
or
mov
mov
icebp
mov
shll
jae
dec
mov
jge
gs
xor
aam
out
bnd
xchg
iret
xchg
sahf
rcrl
cmpsl
das
or
mov
mov
pop
repz
add
fmull
jle
mov
push
andb
loop
imul
popa
pop
and
daa
cwtl
adcl
mov
push
add
pushf
sub
xorl
xchg
jbe
and
inc
add
jae
arpl
push
push
inc
divb
movb
roll
and
inc
add
jae
arpl
push
push
inc
divb
movb
roll
ret
jbe
and
inc
add
jae
arpl
push
push
inc
divb
movb
roll
mov
adc
inc
sti
push
pushf
data16
jbe
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
mov
jl
insb
dec
movsb
xchg
push
les
jmp
or
jns
imul
mov
test
insb
stc
sbb
sbb
cmp
pop
sub
sub
sbb
pop
in
jns
pop
mov
dec
lods
mov
fs
je
add
leave
ss
or
inc
test
jns
push
clc
add
adc
cmp
sbb
or
fisttps
ret
mov
clc
push
out
jno
push
aad
pop
push
loope
xor
lcall
sarl
notl
sub
jns
pop
dec
mov
inc
rclb
dec
iret
xor
xchg
insl
daa
push
wbinvd
jno
int3
and
xchg
xor
mov
subl
es
enter
sub
sub
mulb
mov
dec
mov
adc
imul
xchg
xor
inc
cmp
out
xor
add
push
sbbl
dec
cmp
test
push
xchg
jmp
sub
movsb
cmpsb
add
cmp
cmp
dec
stos
jo
mov
cltd
mov
stc
or
cmp
xor
add
adc
popa
test
inc
cmpsb
dec
lods
aad
int3
ds
sbb
or
push
leave
dec
cmp
insl
mov
or
sub
and
xor
stc
add
dec
lcall
cltd
dec
out
jns
add
pop
lds
loope
mov
jmp
sub
fsubrl
int3
sbb
or
jns
imul
jl
insb
stc
sbb
or
cmp
sub
fsubrl
int3
sbb
or
jns
imul
sti
cli
outsb
xchg
xchg
mov
sbb
xor
in
mov
adc
daa
mov
in
out
pusha
dec
pop
inc
push
and
add
dec
jno
fwait
in
sbb
nop
jmp
mov
mov
jb
into
lea
lret
pop
and
jecxz
loopne
pop
sbb
popa
inc
dec
sbb
or
fwait
lcall
cmp
scas
mov
jns
out
sub
mov
daa
jecxz
ds
xchg
aaa
sahf
addr16
mov
dec
push
and
dec
pop
arpl
xor
daa
push
cmp
xchg
int
daa
enter
xchg
jno
sbb
dec
fldl2e
in
icebp
repnz
xor
inc
jbe
shll
sub
cmp
negl
push
mov
sub
mov
xor
mov
data16
mov
fsubr
push
jae
xchg
int
leave
rcrl
inc
movsb
lods
cmc
ss
push
and
pop
adc
pop
cmp
in
stos
jne
mov
xor
mov
lock
loopne
loop
test
xchg
lahf
sub
pop
dec
and
packssdw
mov
pop
rcll
and
das
repnz
ret
jle
outsl
cli
fistl
jle
or
sbb
mov
pop
pop
neg
adc
jae
push
jnp
cmc
dec
ljmp
ljmp
out
sub
fldl
shll
dec
dec
add
fcmovnb
inc
popf
ljmp
pop
sbb
jnp
mov
stc
sub
imul
push
jo
pop
or
test
fsubrl
into
ret
jo
es
insb
add
imul
dec
mov
jle
movsb
mov
lock
clc
xor
in
adc
inc
cmp
lds
shlb
push
lcall
xchg
push
mov
sbb
aad
adc
push
ds
push
iret
dec
and
jnp
mov
and
icebp
stos
ret
push
int
shlb
outsb
scas
clc
jg
jmp
xchg
mov
je
sbbb
les
xor
fstpl
or
sbb
lcall
push
cmpsl
fmul
lds
cwtl
xchg
dec
int
jns
jnp
xor
mov
push
das
sbb
mov
inc
dec
mov
xor
mov
mov
sbb
sub
jecxz
jmp
fldcw
lahf
or
and
bound
push
pop
mov
pop
mov
jo
adc
mov
out
movsl
cwtl
push
cld
sbb
test
cmpsl
mov
and
mov
push
sbbb
push
gs
or
mov
pop
adc
addr16
loope
rclb
ljmp
sub
call
and
out
fcomps
jle
mov
push
push
imulb
outsl
or
adc
test
sub
or
out
add
push
out
pop
and
xchg
mov
in
sub
xchg
jmp
shlb
inc
scas
mov
rcrb
jno
incb
pop
test
mov
movsl
addr16
std
xchg
es
and
mov
cmp
pop
ret
outsl
mov
push
inc
cwtl
mov
or
cmp
add
or
xchg
frstor
sub
cmp
mov
sub
out
mov
mov
pop
mov
mov
mov
cld
pop
inc
mov
call
dec
clc
test
push
sub
sbb
push
fsubl
cmc
and
insb
int
sub
push
inc
xchg
adc
lods
pusha
divb
or
and
out
out
xlat
lea
push
sti
cmpsl
pop
test
jns
pop
inc
clc
sbbb
dec
add
push
shrb
imul
xlat
xor
insb
imul
in
adc
repz
int3
shll
pop
xor
mov
outsb
icebp
cmp
adcb
xor
lods
and
loopne
movsl
mov
push
movsl
jbe
xchg
dec
pushw
clc
addb
lods
xchg
mov
lods
stos
mov
sbb
jno
ss
or
sub
frstor
repz
pop
pop
add
add
fimuls
mov
push
je
xor
sub
data16
sbb
mov
stos
pop
das
mov
push
in
push
add
int3
sbb
mov
inc
mov
aad
loop
mov
sub
les
push
sub
adc
inc
lcall
add
das
xchg
sarl
push
ljmp
les
shlb
insb
or
stos
rclb
data16
ljmp
mov
lds
inc
ficoms
out
mov
pop
mov
bound
cmp
popf
pop
adc
inc
aaa
aad
aam
xchg
shl
adc
and
lcall
clc
movl
xor
inc
lds
xchg
fadds
add
test
loopne
mov
nop
ja
mov
fisubs
mov
jnp
lahf
pop
scas
je
jp
clc
into
mov
dec
ret
outsb
jae
pushf
sti
loope
shl
push
aaa
sbb
mov
cmp
cltd
dec
divb
push
or
cmp
daa
je
sub
imul
mov
leave
cmpsl
sub
shll
lods
xchg
add
or
lret
inc
lret
xor
jb
jle
adc
sub
insb
pop
arpl
dec
imul
fwait
pop
insb
sub
loopne
pop
or
mov
int
xor
mov
xchg
mov
xor
test
jo
pusha
outsl
aaa
das
lret
fsub
das
notb
in
push
rcrb
xor
js
xchg
iret
xor
sbb
cmc
adc
das
jl
xchg
out
leave
enter
dec
jne
ret
shll
pusha
cmp
inc
dec
fidivrl
push
xchg
adc
insb
jbe
jp
out
pop
sub
jge
stos
shlb
sub
xchg
insb
fld
or
sbb
xchg
aaa
xchg
repnz
ret
stos
ss
mov
xchg
pop
daa
sahf
cmp
popa
xchg
jae
jns
mov
jnp,pn
jae
push
mov
pop
xchg
testl
and
lea
divb
dec
cmp
scas
xchg
jge
inc
sub
lret
add
iret
jae
int3
sbb
push
aad
rcll
inc
mov
sub
outsl
xor
idivb
decl
xor
cmp
xchg
cmpsl
arpl
and
jns
and
xor
xor
add
inc
insl
pop
mov
inc
and
fucomp
jbe
fmull
loopne
outsb
adc
ret
shrb
stos
dec
pop
lret
shrl
push
sbb
addr16
sub
or
outsb
xor
mov
test
es
fwait
push
enter
das
cmp
sarl
xchg
xor
fidivl
fisttps
adc
aaa
or
sub
fcomi
icebp
push
lods
dec
jno
rorb
pop
push
push
loopne
fldln2
das
and
and
fcompl
in
mov
lock
stos
adc
xchg
insl
popf
sbb
mov
pusha
int
mov
lds
dec
jns
add
or
cmpsl
sbb
in
int3
ljmp
fimuls
data16
cld
inc
ficoms
pop
sarl
lahf
insl
xor
inc
lods
int
or
add
or
shlb
mov
call
jae
pop
loope
mov
ds
fidivs
cmc
adc
mov
fstps
cwtl
xchg
and
je
cmpsl
aad
test
ficomps
les
sub
jo
ficompl
add
enter
mov
pop
dec
sbb
pop
ss
rcr
dec
add
out
mov
xchg
mov
fisttpll
inc
mov
cmp
and
add
sbb
adc
pop
rorb
imul
jae
sub
jmp
fwait
sbb
adc
xchg
aad
icebp
sub
jecxz
or
sti
je
shll
lcall
dec
sub
adc
adc
jns
data16
mov
xor
testl
inc
cli
lcall
push
fidivrs
notl
enter
cmp
sub
mov
ror
cmovnp
dec
frstor
or
cwtl
std
pop
adc
mov
stos
push
adc
push
out
mov
fnstcw
incb
pop
push
inc
mov
dec
pop
fidivs
mov
mov
cwtl
dec
or
mov
inc
xchg
dec
mov
repnz
movsl
andl
mov
imul
std
and
test
sahf
push
lock
cmp
push
lret
mov
cmp
repnz
dec
adc
and
inc
shll
cmp
fisttpll
cmp
add
sbb
lds
nop
cmc
pop
add
jle
sub
dec
repz
fisubrl
jmp
mov
aas
or
xchg
push
dec
push
lods
mov
jo
and
sbb
mov
bound
dec
es
lret
aaa
mov
leave
xchg
pop
shr
dec
cwtl
mov
dec
pop
out
popa
cli
cmp
jnp
fwait
adc
jne
dec
jbe
pop
push
shr
dec
hlt
push
push
inc
arpl
orl
xchg
cmp
push
mov
mov
add
inc
sbb
push
loop
std
movsb
push
mov
imul
or
scas
xor
mov
sub
and
and
sarb
outsb
push
xor
stos
adc
xor
fstpl
xor
sahf
cmp
add
arpl
xor
sbb
fnsave
jp
lret
shll
fisttps
or
and
inc
roll
mov
push
cmpsb
fs
mov
movsl
repnz
rorl
imul
xlat
jbe
or
rcr
mov
xor
mov
mov
enter
adc
pop
pop
pop
adc
cwtl
popa
ss
cmp
mov
imul
push
xor
shl
int
jne
pop
sti
cmp
pushf
int3
lods
and
or
push
stos
mov
hlt
andl
loope
or
sub
pop
out
cld
sub
movlps
or
outsl
jae
xchg
adc
xchg
cld
je
dec
out
pop
lds
xchg
push
xchg
and
or
insb
pop
test
inc
add
mov
sbb
aad
mov
negl
test
fnstsw
mov
sbb
dec
cmc
adc
gs
lds
mov
mov
jg
lret
cmp
sub
cltd
push
cmp
std
sub
ljmp
jg
sub
sbb
pop
scas
aam
or
xchg
cltd
jg
mov
fninit
imul
jb
pop
stc
dec
mov
sbb
sbb
adc
repz
pop
and
es
xchg
imul
add
sub
xchg
cmc
out
jno
push
bound
jmp
sub
or
icebp
dec
jb
add
imulb
adc
push
arpl
movsb
shrl
stos
cli
xchg
inc
pop
push
xchg
xlat
movsb
dec
int3
shr
cmp
ljmp
xor
outsb
int
push
jb
mov
frstor
cs
in
push
fldl2e
stos
sub
pop
repnz
push
xchg
cwtl
cmp
dec
push
push
in
mov
sarb
inc
add
sub
aam
or
mov
ret
jne
mov
mov
mov
rcll
adc
pop
sbb
jge
movsb
sbb
lods
fnsave
sbb
ror
jecxz
cmp
inc
addr16
cli
orl
outsl
cltd
add
xor
call
mov
test
dec
mov
imul
iret
scas
pop
push
adc
cld
sbb
movsl
inc
inc
repnz
jle
insl
test
in
xchg
mov
sbb
loope
pmaxub
inc
adc
or
dec
pusha
adc
ds
test
mov
sahf
call
mov
xchg
xchg
int3
cltd
fiadds
add
stos
mov
insl
rorl
popl
push
sub
mov
js
mov
int
iret
cld
cmp
pop
lods
jg
movsb
hlt
fdivrs
push
adc
ds
aaa
ret
xor
cs
mov
mov
inc
and
cmpsb
mov
pop
jns
dec
dec
movsb
cld
outsl
mov
cwtl
fwait
xlat
jbe
out
sar
and
push
sub
fisttpl
das
sahf
ja
cmc
and
jl
in
jmp
push
rcll
test
sub
roll
dec
pop
mov
mov
call
into
push
leave
iret
loop
std
inc
les
cmp
popf
outsb
int
in
fwait
movl
pop
mov
ret
mov
inc
xchg
call
out
xchg
mov
and
pop
push
and
loopne
adc
hlt
xchg
xchg
sub
ds
adc
lods
pextrw
mov
divb
cmpsl
jo
addr16
jle
cmp
dec
push
jae
mov
popa
aam
push
lock
iret
pop
icebp
mov
xchg
mov
xchg
bound
mov
ficompl
stos
mov
out
xchg
rclb
cltd
xchg
test
mov
sub
cmp
sbb
shl
ret
mov
jl
call
adc
aas
test
push
in
or
mov
rclb
xchg
add
pop
subl
das
and
dec
js
pop
and
icebp
cltd
in
xor
minps
jnp
scas
aaa
xchg
mov
lret
xor
push
mov
ja
add
cld
and
sarb
lret
outsb
lea
mov
loope
cwtl
sbb
lds
lret
daa
repz
xchg
stc
lcall
jmp
mov
imul
xor
dec
cli
xchg
inc
mov
sti
push
js
daa
lret
mov
scas
sbb
cmc
cwtl
mov
or
xchg
rolb
sub
push
mov
dec
xor
data16
dec
mov
out
call
cmp
dec
in
fstp
nop
xchg
adc
inc
adc
arpl
push
push
push
or
call
sti
sbb
daa
add
dec
jmp
mov
imul
inc
repnz
inc
cmpsl
pop
es
add
xchg
cmc
xchg
lcall
xchg
mov
xchg
stos
or
pop
push
movsb
in
into
loop
je
adc
sub
mov
mov
test
pop
xor
std
fnstcw
lock
add
dec
fnstcw
in
xor
adc
sbb
push
lods
mov
xchg
jmp
inc
sbb
mov
insl
scas
out
sbb
sahf
add
xchg
mov
imul
push
stos
jns
mov
jbe
rcrl
das
aad
add
mov
call
into
dec
mov
ljmp
pusha
rorl
sbb
sbb
sub
jbe
jb
jle
pop
int3
jecxz,pt
mov
mov
ss
jbe
mov
xchg
ss
push
adc
jo
xor
push
cwtl
fsub
push
mov
ljmp
jb
mov
and
jp
je
dec
mov
cmp
mull
daa
pop
arpl
jp
in
or
mov
and
sub
xchg
lret
ljmp
jno
repnz
mov
outsl
mov
outsl
xchg
sub
jp
or
mov
mov
stos
dec
mov
shr
iret
mov
mov
inc
imul
lods
mov
dec
xor
jnp
push
aad
cmpb
movsl
enter
and
add
stos
push
neg
ret
clc
daa
jmp
mov
shl
cli
mov
jecxz
pop
repnz
stc
cmp
fsts
cmp
cmp
xchg
rorl
xchg
pusha
xchg
push
lret
test
lea
and
movsb
out
xchg
enter
mov
mov
mov
jle
in
adc
jge
ror
push
imul
std
lret
or
pusha
jecxz
call
push
and
mov
je
mov
cmp
repnz
jns
push
test
lock
jg
loopne
addr16
cld
imul
lods
cmpsb
mov
cmp
mov
xor
iret
hlt
pop
xchg
pop
add
xchg
adc
ljmp
cmp
outsb
pop
fs
mov
xlat
jbe
and
or
out
sub
inc
loop
inc
iret
stos
and
xchg
popf
popa
xchg
xchg
insb
xchg
lret
add
mov
jbe
clc
js
pushf
mov
adc
push
pop
dec
jbe
div
imul
sub
call
movsb
popa
jns
sub
rcr
mov
jp
push
pop
push
push
mov
sbb
test
xchg
je
arpl
and
orl
movsl
mov
hlt
mov
shl
mov
ret
outsb
pop
xchg
xchg
pop
pop
jmp
stos
cmp
jg
in
cwtl
xor
cvtpi2ps
pusha
add
loope
jp
sahf
mov
mov
leave
stos
xchg
out
cs
rorb
shrb
sub
ret
test
xchg
mov
push
test
mov
lahf
ficoms
lds
or
mov
aas
imul
out
das
sub
cli
jg
mov
shrb
sub
cmpsb
into
push
sub
pop
jb
inc
gs
repnz
cmp
adc
mov
adc
inc
adc
stos
jns
test
adc
outsl
add
add
mov
daa
aad
xchg
or
push
aas
aad
jne
adc
imul
and
ja
jl
or
sub
pop
sub
mov
fnstenv
adc
fisttps
fwait
cltd
leave
shll
hlt
and
aaa
pop
cmp
mov
inc
inc
sub
enter
jo
or
sub
push
pusha
cmp
fwait
push
sub
mov
pop
push
jp
arpl
mov
jp
mov
repz
and
popf
lods
jb
or
add
mov
push
mov
and
les
mov
roll
out
stos
test
pop
jbe
adc
mov
pop
bound
ja
xor
cmpsb
dec
inc
mov
add
nop
dec
xchg
pop
ret
push
mov
nop
cli
les
fstpl
daa
inc
dec
add
xchg
mov
mov
int
in
stc
in
setnp
add
or
dec
leave
dec
inc
sbb
test
fldenv
or
imul
jo
das
imul
pop
hlt
scas
clc
rorb
loope
cmp
add
mov
pop
inc
lds
fidivs
out
mov
into
add
test
out
sbb
cmp
jmp
add
cwtl
ljmp
adc
shrl
shrb
dec
inc
push
lret
sarb
sub
jmp
das
mov
mov
xchg
sbbl
dec
cmp
dec
mov
sbb
push
inc
jns
daa
adc
cmp
cltd
mov
dec
mov
inc
jmp
add
repz
cmp
xor
inc
inc
adc
push
enter
hlt
sbb
and
inc
jbe
sbb
pop
inc
pop
fwait
iret
int
pop
in
xchg
in
sub
mov
int
not
ds
mov
das
fdivrl
adcl
xchg
ret
cmp
and
fwait
and
movsb
rolb
aaa
jb
add
cwtl
or
orl
inc
add
pop
in
lods
test
into
popa
in
pop
xchg
inc
arpl
cwtl
cs
and
outsl
dec
out
push
rcrl
dec
rcr
adc
mov
cli
imul
aam
stos
mov
addr16
insl
cld
sbb
int
xchg
sub
and
enter
xor
cmp
jns
mov
inc
ficoml
mov
shr
add
ljmp
into
arpl
sub
push
add
hlt
mov
xor
call
push
sub
adc
movsl
add
xor
lds
push
pop
add
or
mov
mov
gs
addr16
out
daa
xchg
ljmp
fdivs
mov
sti
popf
addl
pop
cmp
fistpl
push
popa
and
cltd
sbb
xlat
enter
stc
pop
cmp
pusha
mov
jb
mov
repnz
sti
inc
imul
fwait
outsb
jbe
jmp
or
fdivl
push
mov
add
jnp
pop
daa
pop
inc
pushf
pop
xchg
xchg
xorb
xchg
xor
mov
add
cmc
es
adc
hlt
les
ds
cwtl
pop
dec
push
sahf
sahf
jp
pop
adc
push
sahf
stos
inc
mov
adc
aad
clc
notl
sub
and
mov
lock
pop
xchg
cmp
sbb
add
push
push
inc
push
xchg
sub
pop
iret
mov
shll
pop
cmp
mov
shll
or
jl
test
popa
pop
mov
mov
jmp
sub
fsubrl
int3
sbb
or
jns
imul
jl
insb
stc
sbb
or
cmp
sub
fsubrl
int3
sbb
or
jns
imul
jl
insb
stc
sbb
or
cmp
sub
fsubrl
int3
sbb
or
jns
push
test
pop
stos
dec
cwtl
js
insb
sti
sbb
or
cmp
in
data16
or
cmpsb
ret
mov
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
xchg
aas
xchg
mov
cmpsl
jo
dec
mov
xchg
in
mov
inc
pop
push
aaa
pusha
daa
jo
add
ja
xor
shlb
add
mull
pop
jo
pusha
daa
jo
outsl
inc
adc
xor
shlb
mov
out
pop
lahf
pop
xor
add
push
and
cmp
faddp
xchg
xchg
mov
sbb
push
jmp
push
popf
cli
gs
outsb
sbb
cmp
inc
mov
inc
insb
cld
loopne
repnz
sub
mov
add
jbe
cltd
mov
jg
das
fimuls
push
or
pop
int
aad
in
dec
std
mull
into
adc
loopne
and
add
dec
xlat
adc
or
dec
pop
mov
add
enter
aad
cmp
mov
jne
movsb
int3
aad
test
mov
adc
inc
daa
cmpsl
scas
jo
push
inc
adc
add
lret
push
adc
loopne
dec
inc
inc
insl
cmp
lahf
bound
add
ja
leave
rolb
xlat
add
idivl
xor
movb
aaa
jo
cmp
inc
call
rcll
ret
hlt
mov
xchg
leave
cmpsb
aad
push
add
xor
xor
push
xchg
test
xchg
out
ret
out
stos
mov
jb
add
pop
xor
pop
add
xchg
jecxz
fidivs
nop
mull
pop
push
aaa
pusha
daa
jo
add
ja
xor
shlb
add
mull
pop
push
aaa
pusha
daa
jo
add
ja
xor
pop
or
sbb
sbb
dec
clc
sti
jle
jo
movsl
push
jne
fisubs
add
add
cs
nop
xchg
decl
inc
cmp
pusha
sti
xchg
outsl
pusha
call
push
jno
inc
xor
mov
dec
dec
cwtl
push
std
dec
ljmp
ret
clc
lods
out
adc
loope
scas
popa
roll
loope
cmp
dec
dec
cs
iret
insb
mov
call
sub
sbb
rcrl
xor
dec
xchg
cmc
push
insl
add
adc
enter
sbb
xchg
push
mov
mov
pusha
sbb
fs
rcrl
negl
scas
movaps
cld
ret
cmp
imul
mov
jne
insl
ret
fidivrl
push
sbb
push
xchg
push
dec
dec
push
inc
push
jecxz
or
mov
sub
push
mov
mov
inc
sbb
pop
adc
mov
pop
jl
sahf
pop
movzbl
dec
imul
lods
xchg
cmp
jmp
lods
and
aam
xchg
ds
lods
pop
fsubrs
inc
nop
pop
pushf
sbb
jbe
xchg
xchg
xchg
adc
scas
pop
rcrb
adc
sbb
push
lcall
mov
lock
cld
les
negl
inc
cmp
or
xor
clc
mov
cmp
test
sti
mov
mov
call
xchg
out
jns
mov
pop
xor
adc
call
push
jb
push
adc
decl
cwtl
int
sti
fbstp
insl
sbb
dec
sbb
push
xchg
aad
sbb
push
call
dec
lea
cmp
adc
daa
ss
test
push
push
bound
insb
inc
in
jge
pop
adc
mov
cmp
clc
inc
addr16
scas
sub
gs
mov
cli
cmp
add
aam
sti
inc
ljmp
jmp
sub
mov
aad
ljmp
adc
mov
je
adc
mov
test
inc
jecxz
lods
orl
pop
fs
pusha
push
inc
inc
sbbb
adc
dec
fisttps
loop
in
cmp
cmp
rclb
mov
adc
enter
lock
cltd
xchg
cmp
stos
mov
daa
cmp
iret
xorl
mov
insb
cmp
mov
fistl
ljmp
stc
test
mul
pop
add
xor
push
js
and
mov
cmp
imul
mov
icebp
lea
push
stos
shlb
mov
push
mul
cli
sbb
test
sbb
xor
int
rolb
pusha
and
dec
stos
or
jle
movsb
nop
push
mov
test
sub
mov
ret
mov
decb
jl
xchg
lret
hlt
mov
jle
les
ret
and
jno
sub
fnop
out
sbb
in
mov
std
bound
sub
sbb
xchg
mov
pop
mov
jg
mov
into
loopne
ljmp
jge
pop
mov
mov
stc
pmulhw
test
frstor
mov
mov
xchg
in
ds
lret
outsb
fistl
cmp
push
hlt
test
cmpsl
int
or
pop
inc
dec
insb
clc
je
mov
sbbw
sahf
push
movsb
ret
push
xorb
leave
test
leave
mul
notb
mov
repz
push
out
andb
jge
push
add
pushf
xor
jecxz
negb
sbb
add
mov
xchg
add
pop
cs
into
jmp
shll
pusha
sub
daa
out
repz
add
ljmp
cmpsl
push
dec
fstl
xchg
xchg
sub
lcall
rcrl
mov
xor
mov
loopne
inc
jp
jo
imul
pop
push
jae
add
pop
lds
push
mov
leavew
mov
leave
push
push
cmp
sub
test
ss
ljmp
leave
lods
push
sub
stos
lcall
and
or
aaa
scas
pushfw
xor
xchg
xor
clc
jmp
sub
pop
pop
pop
mov
cli
xchg
mov
jl
jle
aaa
inc
shll
xchg
pop
inc
sbb
xor
add
movsb
and
sub
in
mov
mov
mov
jle
lret
cmp
pop
cli
push
std
mov
clc
mov
outsb
jge
aas
jle
adc
and
aam
mov
fwait
pushf
pushl
fldl
fs
push
mov
out
lahf
dec
and
fdivrs
sti
inc
xor
cltd
leave
mov
adc
mov
sbb
push
outsl
test
mov
inc
pop
jno
jge
test
mov
stos
push
es
push
fistpll
sti
icebp
aaa
push
aad
aas
ss
fbld
push
repnz
mov
loop
ret
ret
jae
mov
loopne
add
out
nop
mov
jno
cld
test
pop
enter
jle
cwtl
movsl
cld
xchg
in
pushl
dec
and
push
aas
insb
xor
fiaddl
sbb
subl
add
pop
enter
out
jbe
lods
stc
outsb
scas
hlt
xchg
ljmp
lret
cmc
sub
sub
sub
xor
cltd
push
push
push
push
jp
xchg
shrb
mov
fs
jg
jecxz
push
popf
into
mov
mov
or
xchg
repz
adc
into
mov
xlat
push
add
jae
shl
scas
jb
into
popf
jmp
cmc
mov
sbb
dec
dec
jo
enter
fs
cmp
sub
xor
inc
movsl
xorl
mov
or
fbld
pop
lock
addr16
sub
inc
repnz
inc
int
ret
xor
jae
stc
data16
mov
scas
cs
mov
mov
inc
push
imul
scas
test
in
sbb
push
cmpsb
stc
dec
and
stos
push
sub
mov
mov
iret
dec
aad
xor
movlps
mov
cs
in
sub
out
inc
out
int
pop
test
out
xor
inc
call
or
lcall
dec
lea
inc
imul
sub
sbb
jg
or
imul
ret
and
mov
xorps
out
xor
mov
aad
jge
aaa
arpl
mov
mov
andl
out
mov
xor
je
add
pusha
test
dec
aas
je
pop
push
xlat
arpl
dec
inc
cli
pop
lds
jge
outsb
sahf
pop
pop
dec
xor
bound
loopew
sub
aam
xor
xchg
pusha
arpl
and
or
or
xchg
mov
push
aad
int3
sti
add
push
push
popf
cmp
mov
test
adcb
sub
mov
dec
lret
js
pop
stos
ficoml
push
int3
aas
andl
mov
int3
pop
xchg
mov
push
and
dec
push
dec
js
mov
mov
iret
cmpsb
jp
jae
into
ds
icebp
mov
aaa
jl
or
rorl
addl
xor
lcall
push
adcl
stos
in
cmpsl
lds
cmp
loope
jae
fmull
or
adc
int
dec
test
stos
jge
inc
cltd
mov
sub
pop
aam
sarb
imul
push
loopne
sbb
xor
and
test
add
btc
mov
cmp
shll
je
out
jp
jae
mov
cmp
jge
dec
aaa
fldenv
test
inc
push
shlb
mov
inc
jns
js
in
or
negl
adc
out
popf
and
pop
mov
sahf
sarb
sar
aas
jae
inc
mov
insl
roll
idiv
out
les
icebp
and
lret
test
icebp
rclb
push
loop
mov
stc
movsb
mov
into
xchg
or
lock
rcll
loope
std
jbe
push
push
add
jae
push
in
stos
jnp
and
enter
sub
pop
mov
outsb
jno
repz
xor
add
jbe
inc
imul
mov
es
iret
mov
add
cmp
enter
sbb
lret
dec
sbb
pop
test
jno
rcrl
out
pop
xchg
sub
push
sbb
in
and
mov
xchg
ret
ja
cmpsl
inc
cmp
push
imul
push
mulb
out
repz
aaa
mov
loope
ret
scas
popa
cmp
loope
cmc
inc
or
cld
pop
mov
sub
mov
mov
ljmp
in
xor
or
int3
out
pop
inc
dec
or
push
mov
push
xor
divl
sbb
dec
xchg
or
jns
xchg
outsl
cmc
idivl
or
cmp
fisttpll
imul
lea
mov
cmc
aas
and
dec
inc
mov
adc
stos
shlb
sbb
icebp
pop
xor
mov
add
jmp
xorl
dec
pusha
sbb
mov
leave
int3
mov
mov
loopne
loopne
ret
addb
enter
xor
cltd
mov
mov
xor
inc
mov
call
inc
sbb
aam
mov
arpl
and
inc
xor
inc
fidivrl
out
icebp
mov
mov
cmp
divl
cmp
rorb
or
sub
adc
mov
je
jbe
xchg
lods
sub
loope
in
testl
dec
cmpsb
in
enter
cmp
mov
cs
xchg
push
sub
sbb
ljmp
or
xor
gs
cmc
add
push
pop
aam
dec
pop
adc
jg
and
hlt
shlb
or
dec
shlb
mov
or
pop
pop
shr
add
dec
dec
rolb
cmp
adc
stc
jp
and
repnz
xchg
hlt
dec
dec
or
jo
jnp
arpl
pop
dec
cli
and
into
call
cmp
shrb
jg
add
or
shll
cmp
mov
pop
xor
pop
in
out
out
in
or
stos
pop
movsb
push
push
mov
and
cmp
stos
sub
add
inc
pop
in
or
test
pop
mul
clts
ljmp
mov
or
jecxz
insl
lds
push
sub
mov
movsl
mov
scas
sub
jg
icebp
movsb
sbb
lret
es
mov
xor
sbb
bound
lret
loop
jnp
xlat
sub
mov
inc
xor
stos
mov
mov
psrlq
xchg
movsl
sar
mov
xor
leave
sub
iret
cmp
shll
adc
fiadds
xchg
pop
mov
mov
push
lods
sub
into
cmpl
adc
mov
loope
clc
jb
mov
es
xor
push
int
cwtl
adc
jns
mov
xor
je
adc
subl
rolb
jl
orb
mov
cmp
sub
scas
mov
sar
push
and
xchg
lret
sahf
mov
dec
xor
test
pop
fnstcw
mov
int
lods
inc
cmp
add
clc
lock
pop
xchg
mov
lea
lret
sub
sbb
mov
jns
outsl
or
cmpsl
xor
pop
out
mov
adc
orl
clc
popa
sbb
mov
mov
ljmp
jecxz
sarl
jg
jle
mov
and
dec
pop
bnd
loop
push
pop
aad
fdiv
add
insl
xchg
inc
addr16
and
ret
xor
shrb
out
mov
pop
outsl
mov
test
add
add
das
stos
enter
loop,pt
popf
add
lock
lcall
mov
push
lods
arpl
inc
inc
cwtl
stos
cld
lds
stos
out
push
xchg
call
cs
jp
adc
cmp
sbb
inc
notl
mov
ja
inc
xchg
jmp
sbb
mov
mov
dec
inc
mov
call
cmpsl
pushf
dec
mov
scas
les
cmc
adc
or
out
jb
scas
fwait
jnp
and
gs
stos
mov
xchg
daa
shrl
js
add
test
or
mov
ja
int
xchg
cmp
aas
xchg
jp
mov
jge
fmuls
lahf
out
push
lcallw
fistps
push
sti
roll
push
lds
xlat
mov
xchg
adc
mov
mov
mov
cli
aad
push
xchg
cli
add
lret
fwait
pusha
jecxz,pt
xchg
int3
cmp
sub
xor
sti
mov
mov
shl
and
sbb
and
push
xor
movsb
imul
dec
mov
inc
sub
cwtl
push
pop
fnstcw
not
int
iret
xchg
in
js
adc
ss
ret
sub
fmuls
ljmp
add
jns
into
or
fldt
mov
outsb
movsl
ss
push
fsts
jnp
dec
js
cmp
pop
mov
cmp
pop
stos
mov
ja
mov
and
bound
inc
iret
jecxz
dec
sub
pop
xor
inc
in
mulb
iret
adc
fisttpll
mov
ljmp
repz
cs
mov
mov
mov
cmpsb
xchg
sarl
test
and
cmp
and
xor
mov
insl
daa
cmp
ret
cmp
ret
push
xchg
ret
add
stos
add
aaa
xor
rcr
inc
ficoms
mov
xchg
adc
jnp
sti
cmpsl
jo
out
and
je
fisttps
call
add
xchg
and
mov
ss
jns
pop
add
xchg
push
push
outsb
stos
adc
push
xchg
xor
mov
lea
mov
jmp
fistps
jae
repnz
es
jno
mov
jo
movsl
shrb
pop
cmpsb
xor
fmull
mull
jno
ficoml
pop
dec
dec
jl
ds
sbb
sar
jno
sti
and
fdivr
add
fs
cmp
sbb
adc
movsb
mull
and
inc
inc
jl
sub
add
stos
adc
mov
scas
jae
jmp
icebp
inc
pop
jge
xor
or
in
cwtl
push
jno
aad
or
mov
fisubrs
sbb
daa
mov
cld
fwait
test
subb
push
lds
arpl
fstl
sbb
jg
sbb
xor
mov
adc
lds
dec
fdivrl
sub
push
fisubl
jne
in
in
aad
cmpl
out
shll
lods
jle
cmc
scas
xchg
xchg
or
mov
les
sub
adc
loope
pop
stc
pop
lcall
cmp
fstl
cmp
jnp
push
xlat
jmpw
inc
mov
mov
jmp
mov
mov
icebp
jecxz
mov
dec
ret
xchg
inc
aad
pop
stos
fstl
sub
jle
outsb
mov
jno
or
xchg
in
sarl
push
test
sbb
aas
test
out
aad
pop
or
cmc
cld
jge
add
add
mov
mov
fnstcw
xchg
test
comiss
mov
idivl
fsubrs
jns
cmp
mov
movsb
fidivrl
movl
pop
int
iret
roll
mov
icebp
mov
lock
popf
mov
fildl
sbb
imul
add
cmpsl
andb
mov
ljmp
push
mov
mov
leave
sbb
cmp
subl
pop
mov
dec
pop
mov
js
imul
push
mov
push
add
push
sti
sub
loop
out
ret
adc
fs
fisttps
ljmp
xchg
cltd
int3
cmp
test
push
inc
or
pushf
insl
cltd
xchg
xor
nop
mov
jnp
mov
popa
jl
mov
xor
dec
push
jl
in
pusha
hlt
xlat
adc
nop
in
lret
pop
push
pop
fsubr
ja
in
dec
enter
push
mov
das
push
or
mov
adc
int
dec
mov
mov
fcomps
loop
xor
inc
into
pop
fcomps
ja
inc
dec
out
fisubrl
xchg
fdivl
ss
add
sbb
insb
push
dec
js
fwait
and
mov
stc
orl
push
cli
fwait
std
xor
adc
es
cmp
popf
ds
fisubl
jbe
mov
pop
jbe
ret
cmpsb
pop
jbe
int3
pop
gs
mov
cmp
shl
sub
lds
jecxz
lret
cltd
mull
xchg
cmp
cmp
sbb
test
inc
adc
pop
cmpsl
dec
and
mov
movl
aad
add
icebp
sbb
repz
dec
icebp
xlat
lock
mov
mov
push
scas
dec
mov
jle
jnp
jl
loopne
subl
cmpsb
and
loopne
mov
fisttps
gs
jbe
outsb
dec
dec
jl
out
lock
push
xchg
or
xor
inc
and
les
pop
mov
test
ficompl
xor
rorl
in
sub
subb
lahf
lret
mov
das
mov
ret
inc
push
cld
cld
mov
dec
push
mov
movsb
xchg
decb
push
adc
xor
adc
add
popa
push
and
es
mov
mov
mov
xchg
sbb
les
jle
mov
pop
push
fiaddl
xchg
popa
out
lods
pop
inc
inc
mov
fidivs
movsb
out
popa
scas
pop
repnz
add
push
dec
je
xor
out
mov
fistps
pop
iret
lret
add
leave
icebp
shrl
outsb
lods
add
insl
stos
movsb
or
sarl
xchg
pop
scas
outsl
add
cli
jl
popf
add
dec
xchg
hlt
mov
jno
test
cwtl
inc
pop
adc
mov
or
ror
in
hlt
in
mov
lahf
and
and
adc
cmp
in
and
pop
sbb
xor
loop
push
sub
leave
jecxz
adc
cmp
adc
aad
dec
enter
shlb
jmp
fcmovb
pop
or
xor
xlat
ret
outsb
aad
mov
add
jecxz
repz
imul
xchg
jae
dec
cmp
mov
jnp
cmp
into
mov
ret
add
mov
or
sbb
jne
aas
jmp
cmp
fnsave
jo
pop
mov
aad
push
pop
fidivrs
aam
mov
or
pushf
push
dec
fnstenv
idivl
lahf
sbb
jg
cmp
push
ja
scas
dec
mov
xchg
in
cmp
cwtl
mov
fnstsw
xchg
js
pop
into
push
push
inc
add
fs
jmp
arpl
out
adc
test
cmp
dec
mov
les
dec
lcall
push
rcrb
inc
fisubrl
cmpsb
inc
ss
andl
ret
jle
add
lds
inc
sbb
mov
push
inc
aam
hlt
jne
cmp
notb
mov
ja
int3
sub
mov
pop
mov
stc
xor
mov
or
mov
jmp
mov
inc
mov
xor
cmp
test
lret
lds
movd
sbb
xlat
xchg
mov
pop
in
orl
push
cmp
ss
push
imul
out
mov
not
cwtl
enter
std
push
or
push
or
cltd
ror
and
or
jmp
std
xlat
int
push
je
pop
lret
imul
stos
xor
mov
cltd
xor
fcmovnb
in
push
insl
and
sbb
dec
cmpl
incb
jecxz
sti
ret
pushf
in
jl
lods
sarl
fidivrl
imul
pop
xchg
jmp
pop
or
sbb
sahf
movl
xor
lret
xor
repz
outsb
mov
xchg
push
test
mov
iret
push
loope
aad
insl
ffreep
xchg
or
push
and
sbb
jle
push
jg
xchg
scas
lock
roll
mov
lret
inc
ficomps
clc
inc
pushf
ds
or
push
lods
inc
aas
sub
scas
push
xchg
dec
fwait
je
pusha
arpl
push
add
aaa
pop
jae
or
cmp
pop
push
pop
jne
sti
mov
jbe
xor
xor
jmp
push
icebp
push
or
fsubrl
xor
imul
inc
fimuls
dec
dec
icebp
cmp
add
xchg
mov
mov
in
fcomps
pop
push
sub
jnp
les
inc
fwait
cmpsl
inc
dec
insb
mov
xchg
mov
push
cs
lock
rcll
andl
shrb
push
leave
out
mov
pop
test
dec
ljmp
ja
xchg
mov
pop
daa
mov
andl
sub
jno
dec
mov
test
pop
test
std
cmp
rorb
add
mull
pop
push
aaa
pusha
daa
jo
add
ja
xor
shlb
add
mull
pop
push
aaa
pusha
daa
jo
add
ja
xor
cwtl
mov
cmpsl
lock
add
mull
pop
push
aaa
pusha
daa
jo
add
ja
xor
shlb
add
mull
out
pop
mov
daa
pop
and
cwtl
iret
mov
cltd
push
test
add
mov
movsb
sbb
dec
out
imul
cltd
push
test
data16
inc
stc
mov
cmpsb
sbb
dec
out
imul
cltd
push
test
data16
inc
stc
mov
test
pop
jecxz
negb
xchg
cmp
inc
mov
push
int
push
jns
xor
mov
adc
subl
loop
mov
sbb
inc
jbe
data16
in
icebp
or
cmp
imul
aad
sahf
mov
pushf
out
sbb
leave
mov
xchg
stc
testl
js
jbe
cwtl
aad
add
sldt
inc
cmp
or
xlat
jns
cmpsb
sbb
or
xchg
dec
pop
gs
gs
jg
inc
mov
inc
es
push
int
mov
scas
sbb
aad
or
push
fisubs
test
int3
pop
add
and
icebp
mul
or
in
cmp
mov
lods
adc
cmc
mov
cltd
push
test
data16
inc
stc
mov
cmpsb
sbb
dec
out
imul
dec
push
out
inc
call
cmpsb
or
gs
jo
inc
ret
push
jo
cmpsl
and
enter
test
sub
stc
les
jmp
xchg
xorl
sbb
pop
push
fldenv
in
push
frstor
xor
inc
stc
mov
cmpsb
sbb
dec
out
imul
cltd
push
test
data16
inc
stc
mov
cmpsb
sbb
dec
out
imul
mov
or
iret
push
mov
jne
test
xlat
or
cwtl
ja
pop
mov
xor
or
ljmp
and
jb
leave
orb
outsl
adc
nop
pop
imul
in
pop
or
shr
data16
out
test
adc
push
dec
cmp
cmp
push
lds
mov
ret
mov
aam
xchg
mov
cmp
js
stos
sbb
or
jle
xchg
push
jb
jae
xor
adc
mov
leave
mov
and
lret
mov
adc
andl
ds
lahf
or
outsl
xchg
adc
push
pusha
inc
aam
cwtl
xchg
mov
sti
cmp
in
cmp
inc
addr16
jo
xchg
adc
cmp
dec
es
mov
pusha
dec
fmuls
and
int
rclb
aam
mov
int
aad
xlat
dec
sbb
mov
xchg
jns
jbe
pusha
pop
adc
sbb
jbe
xchg
xchg
cltd
xchg
repnz
imul
test
stos
mov
dec
lods
lds
mov
adc
cmp
xchg
xchg
mov
and
jge
or
fildl
push
jns
mov
mov
stc
adc
sahf
fstps
pop
sub
jbe
cmpl
pusha
mov
mulb
pop
push
into
push
femms
or
fidivrs
mov
subl
test
adc
clc
scas
test
sub
mov
jle
pusha
push
frstor
jno
inc
test
jl
leave
mov
jns
imul
dec
jns
cmp
mov
js
out
push
lret
jl
ret
test
outsb
rcll
dec
pusha
in
aaa
loope
out
lret
dec
mov
jge
mov
mov
jb
dec
xlat
cmp
inc
sbb
sub
je
shll
sbbl
outsl
mov
sahf
cmp
shll
sbb
pop
adc
inc
add
xchg
stos
std
sti
jp
fildll
dec
lahf
adc
sbb
lds
aas
scas
xor
jno
inc
inc
fmul
cs
fsubrl
mov
cmp
inc
dec
inc
adc
adc
mov
lret
adc
inc
stc
and
mov
aas
lret
jge
push
inc
adc
sub
bound
test
and
mov
pop
cltd
xchg
testb
sub
popa
push
push
cmpl
mov
xor
fidivl
cltd
mov
or
jno
sbb
es
call
dec
std
enter
je
jae
adc
push
lret
loopne
sbb
adcl
insl
adc
sub
bound
mov
xchg
mov
enter
ret
sbb
lods
or
xchg
sub
inc
mov
bound
mov
adc
nop
xchg
inc
cmp
inc
pop
movsl
imul
inc
pop
jno
push
and
push
jae
fistps
mov
add
cmp
je
in
mov
lds
lcall
mov
pop
or
pop
cmp
and
nop
push
xchg
popa
jge
out
xor
adc
sbb
fisttps
sbb
xor
icebp
xlat
cwtl
jo
test
aas
repnz
repnz
int3
and
clc
aas
inc
push
xchg
mov
cs
adc
fsubrs
popa
jp
sbbl
int3
and
hlt
addb
cmc
xchg
test
sub
icebp
into
pusha
aad
mov
repnz
mov
pop
push
jnp
mov
adc
push
cmp
cli
sub
lahf
push
test
fwait
xor
aam
sub
push
adc
pop
scas
lcall
fidivrs
inc
shl
cmp
adc
insl
and
cmp
push
mov
add
bound
lods
add
mov
inc
xchg
fcmovne
adc
sbb
repz
push
sub
cmpsl
mov
movsl
mov
inc
sub
mov
cmp
dec
mov
movsb
pushf
fldl
loopne
jp
lcall
sbbl
push
icebp
inc
hlt
in
hlt
pop
das
mov
js
and
sub
mov
out
mov
push
adc
mov
dec
movsl
xchg
cs
and
and
push
fnstcw
sub
lret
push
dec
or
test
mov
push
cmp
mov
into
mov
inc
mov
test
pop
ret
and
lret
xor
sub
jb
sub
or
mov
iret
jae
sti
movsb
jb
jae
mov
mov
inc
nop
add
imul
fcmovnbe
mov
mov
lock
sbb
cmpsb
movsb
lahf
int
inc
dec
mov
shlb
fcomp
mov
sbb
sub
mov
sbb
fwait
test
in
jecxz
xor
dec
xlat
add
dec
push
jecxz
cli
and
jno
add
sti
or
int3
sub
sbb
flds
bound
stc
jns
push
jg
push
mov
dec
adc
push
mov
push
add
xchg
dec
cli
cmp
sbb
cmp
sbbb
ss
xchg
or
out
lods
pop
ljmp
test
ror
mov
jns
cmp
out
test
test
clc
jb
fcompl
mov
dec
out
fildl
push
frstor
jno
adcb
and
scas
mov
push
shl
lods
xor
mov
mov
push
fiadds
inc
sub
mov
rclb
test
dec
cmpsb
lods
ret
sbb
shll
xchg
test
inc
or
sbb
or
imulb
scas
and
outsb
add
and
dec
movsl
mov
sahf
add
sti
sarl
jae
leave
lock
and
loope
mov
test
sub
movsb
mov
or
jp
xor
push
push
imul
push
dec
push
and
add
pop
scas
aam
xchg
ret
mov
in
pop
jne
push
movl
fldl
adc
jmp
dec
dec
jge
and
pop
xor
out
imul
dec
int3
push
mov
mov
into
jg
dec
xor
inc
movsl
repz
lahf
inc
sbb
add
jno
push
int3
daa
push
notl
and
arpl
and
inc
pop
xchg
aas
mov
and
pusha
dec
mov
addr16
cmp
sbbl
xchg
data16
pop
and
pop
dec
in
sub
cld
sahf
sbb
shlb
inc
mov
push
int3
aam
icebp
scas
inc
push
sbb
test
xor
add
lcall
notb
dec
sub
test
outsb
mov
sbb
sbbl
scas
stos
icebp
sbb
es
call
sbb
ret
aas
jbe
or
pop
pop
adc
mov
loope
nop
sub
sub
std
fsts
jne
out
jecxz
push
mov
stos
pop
lret
adc
add
mov
cs
adc
mov
int
mov
cmpsl
pop
xchg
aas
ret
imul
mov
mov
mov
clc
lock
idiv
mov
xor
lods
mov
add
xchg
cmp
test
out
pop
out
hlt
jns
adc
icebp
shlb
lahf
dec
mov
iret
sbb
int3
dec
popl
jle
cmp
lret
cmp
push
jns
inc
xchg
xor
jne
pop
cmp
inc
mov
mov
sbb
cmp
jb
test
push
add
inc
scas
inc
int3
xchg
int
xchg
gs
addb
adcl
and
cmp
inc
mov
or
xchg
es
xchg
xor
cmpsb
mov
sub
insl
sub
aam
sub
mov
out
dec
insb
xchg
addr16
xchg
fdivl
mov
js
xchg
or
add
pop
xor
push
mov
mov
icebp
test
inc
out
and
loop
dec
dec
js
and
mov
test
mov
push
inc
popa
ror
jo
sub
enter
add
stc
les
cs
and
add
les
lods
jl
out
std
sbb
jecxz
iret
rorl
dec
lahf
inc
xlat
xor
mov
fs
movsl
fadds
xchg
ffree
popf
inc
call
xchg
cmp
and
cmpsl
xchg
add
out
adc
adc
xor
xor
sbb
pop
popa
push
pop
mov
or
add
lds
push
xchg
fdivrs
sub
push
cli
cmp
push
mov
mov
xor
movsb
jecxz
mov
dec
flds
dec
and
orl
imul
cli
adcl
leave
and
mov
sbb
into
cmpsl
mov
rolb
jo
mov
popa
int
into
aam
fcmove
leave
in
mov
arpl
jmp
mov
sti
loop
in
pop
pop
lcall
inc
scas
pop
fwait
sbb
mov
cmpsb
lock
inc
pop
nop
push
ret
push
negb
mov
cmpsb
into
jp
push
inc
in
mov
xchg
pop
popa
push
xor
lea
repz
cmp
fs
lods
dec
and
shr
repz
leave
pop
and
out
cmp
push
outsb
es
cwtl
into
lea
into
sbbl
add
in
jae
stos
mov
loopne
mov
mov
in
repnz
dec
adc
test
mov
lock
roll
pop
fstpl
jo
push
popa
dec
int3
fmull
sahf
xlat
adc
and
lock
inc
out
jo
ljmp
out
xchg
xchg
mov
rolb
mov
inc
flds
dec
pop
cld
xchg
sbb
mov
das
mov
inc
insb
cld
add
sbb
jns
sub
pushf
mov
rcrb
std
call
pop
cmp
sub
or
jbe
mov
sti
lret
xor
xchg
fildll
push
sbb
cmp
push
jno
or
dec
pop
loope
jae
out
insl
scas
inc
adc
xchg
adc
cmc
jg
dec
out
jns
scas
leave
dec
inc
ljmp
pusha
mulb
sub
xchg
mov
jle
xchg
dec
adc
mov
in
xor
pop
cmp
popa
pushl
add
or
and
fs
mov
jle
jmp
jo
gs
jp
mov
roll
enter
fsqrt
loop
into
lret
cmc
inc
push
cmpsb
pop
mov
test
xchg
lret
bound
mov
add
pop
mov
aaa
test
into
xchg
out
cltd
lea
sub
iret
pop
sbb
jle
dec
jle
fdiv
push
lahf
stos
xchg
inc
ret
loopne
loopew
xorl
jp
xor
pop
inc
push
xor
pop
mov
sbb
sbbb
into
and
cld
xchg
ret
andb
and
insb
mov
lods
mov
fcompl
out
js
mov
mov
jl
jecxz
dec
mov
ret
push
or
fldcw
nop
jbe,pn
sbb
jmp
jns
or
pusha
mov
daa
xor
cmpb
and
or
cmc
nop
popf
sti
fdivr
jmp
push
je
test
jg
inc
push
movsb
dec
xchg
dec
inc
mov
sahf
sub
inc
cmc
sub
iret
push
inc
push
jo
bound
jg
insl
lret
mov
clc
xchg
xchg
fsincos
sbb
ret
mov
insl
lock
xchg
jae
insl
xchg
mov
adc
imul
jno
mov
aaa
shlb
int3
or
aaa
sti
aad
les
and
stos
push
sbb
cli
dec
push
imul
fistpl
idivb
fs
push
or
ljmp
daa
repnz
cmp
jne
and
and
mov
stos
xor
xchg
dec
and
jnp
or
push
add
into
mov
xchg
mov
out
adc
cmp
rsm
inc
inc
aas
jne
cmc
pop
mov
xor
aas
push
adc
pushf
mov
dec
sub
in
mov
sub
loop
addb
cmpsb
add
js
inc
mov
fcoml
pop
or
shl
leave
pop
outsl
imul
adcl
cmp
cld
jmp
movsl
jp
sub
push
cltd
cs
jae
dec
xor
xchg
jle
fnstenv
jp
test
push
push
sub
mov
ss
cltd
xor
repz
mov
sti
das
repnz
push
sub
adc
loop
fmuls
and
out
mov
xor
dec
aaa
xchg
sbb
cmc
test
add
enter
out
insb
out
or
popa
leave
stos
data16
fiadds
adc
cmp
jbe
dec
movsl
insb
cmc
inc
sbb
pop
sbb
stc
pushf
in
mov
rcl
pushf
decb
dec
cmp
mov
aam
mov
movsl
ljmp
mov
sbb
pop
add
sarl
adc
pop
inc
out
mov
push
mov
es
mov
add
scas
insb
jno
fs
pop
mov
mov
insb
test
inc
mov
lods
xor
fsubl
xchg
insb
jo
cltd
lahf
mov
xor
pop
ret
adc
shlb
in
cmc
push
jmp
or
and
ret
mov
lea
into
leave
mov
cmp
mov
xchg
mov
aas
adc
mov
dec
xchg
sarb
adc
subb
sub
push
push
pop
push
das
inc
imul
xchg
adc
shrb
aam
sti
mov
adcl
loop
push
sub
mov
std
shr
sub
or
dec
mov
add
push
mov
sub
into
std
test
cmp
test
pop
push
test
clc
adc
inc
xchg
and
stos
das
ja
arpl
dec
and
dec
pusha
sub
xor
xchg
dec
out
mov
or
sbb
pop
mov
roll
sub
mov
mov
jno
cs
xchg
pop
jo
shll
cli
sbb
scas
dec
add
sbb
inc
pop
mov
push
xorl
or
rcll
adc
mov
xor
dec
cmc
js
leave
sub
subb
inc
push
ret
fsubrl
mov
jecxz
ret
lods
adc
jae
loopne
jnp
pop
lods
fdiv
mov
fs
test
xor
out
int
xor
jmp
subl
fadds
and
push
das
cmp
push
lret
sub
and
loope
fdivr
clc
xchg
add
cld
xor
add
mov
stos
pop
add
into
les
ret
flds
in
int3
fnstsw
sbbl
xchg
data16
sbb
sub
dec
jg
mov
push
cmc
xchg
sub
and
cld
iret
cmp
cmp
mov
enter
sbb
leave
pop
jg
lcall
xor
sahf
mov
int
dec
dec
sbb
adc
jge
inc
fisttpll
popf
outsl
xchg
enter
stos
mov
dec
inc
scas
icebp
add
loopne
aam
inc
xor
jne
es
fsubrs
push
add
stos
or
xchg
mov
sbb
ljmp
ja
sbb
cmpsb
ret
fwait
sub
xor
popa
faddp
jns
fiadds
mov
aad
push
xchg
and
or
outsl
testl
push
lcall
xor
daa
add
adc
scas
in
in
test
lods
sub
out
mov
rolb
cld
stos
mov
dec
lods
add
sub
xchg
fdivs
inc
insb
rcrl
pop
pop
xchg
int3
cmp
cli
mov
and
cld
leave
imul
pop
out
sbb
add
movsb
jmp
cmp
ja
dec
jmp
shl
fiaddl
pushf
cmpsb
sub
imul
or
mov
jns
mov
cmc
outsl
or
mov
pop
idivb
mov
jp
imul
insl
xchg
jno
xlat
pushf
dec
je
mov
int3
ret
push
aaa
into
and
sub
inc
xlat
cmc
ficoml
mov
lods
pop
aad
imul
xchg
fcoml
andl
and
js
shl
lods
push
push
and
scas
adc
imul
add
and
xchg
push
cmpb
pusha
loop
scas
and
cmp
nop
mov
mov
xor
ds
call
popa
mov
xchg
push
outsl
xchg
lds
jae
cmp
shll
cltd
les
icebp
loopne
repnz
add
xor
mov
adc
js
das
in
or
sbbb
and
cs
pop
dec
shrl
cld
xchg
sbb
adc
jg
mov
mov
push
ljmp
inc
cmpb
es
scas
icebp
dec
and
cmc
mov
push
das
leave
xchg
and
in
pop
xchg
pop
inc
xchg
inc
es
gs
cli
fisttpl
sub
ds
out
clc
aam
xchg
or
pop
clc
dec
test
es
mov
push
push
push
je
scas
and
sti
adc
push
mov
out
push
ret
pushf
mov
jmp
or
clc
rclb
dec
daa
pop
pop
jmp
andl
mov
daa
push
inc
push
mov
call
pop
fiadds
jl
jb
jmp
outsb
insb
cmp
stos
sub
mov
icebp
cmc
push
insb
cmpsb
push
cmp
ds
add
push
into
or
inc
shrl
xorb
or
xchg
xchg
stos
cmpsl
jb
jae
in
jecxz
sbb
cld
xchg
sti
test
rcr
lcall
xor
pop
pop
jnp
test
fldcw
loop
mov
fsubrl
inc
scas
test
inc
push
aas
cwtl
mov
mov
cli
push
pop
arpl
inc
or
loope
push
int3
jnp
mov
cld
inc
scas
xor
mov
stos
stos
dec
lcall
xor
add
hlt
aaa
clc
mov
jge
jp
ret
dec
leave
dec
cmpsb
mov
fs
sbbb
out
sub
cmc
mov
or
enter
enter
cmp
pusha
outsb
mov
out
inc
mov
clc
dec
xorb
sbbl
movsl
and
shlb
cld
mov
outsl
pusha
mov
ss
jecxz
dec
js
movb
ret
aas
jecxz
lods
frstor
iret
jp
outsb
clc
and
sbb
sub
lcall
test
xchg
cmp
repz
dec
insl
dec
out
inc
dec
addr16
orl
mov
mov
icebp
sbbl
mov
push
loop
xchg
sub
sbb
loope
push
and
into
call
xorl
jns
nop
scas
dec
out
lods
fiaddl
and
push
aad
test
les
out
pop
or
out
shlb
sti
mov
out
scas
mov
push
les
mov
jno
fmull
jb
stos
out
je
xor
mov
dec
ljmp
addr16
mov
shll
mov
mov
jge
stc
call
dec
call
icebp
xor
and
pop
testb
rcll
ret
iret
mov
xchg
lahf
mov
subl
imul
mov
lds
jmp
dec
in
dec
adc
xorb
sub
sub
sbb
pop
mov
dec
mov
mov
ss
mov
or
lcall
pusha
mov
pop
pushf
inc
mov
ret
mov
pop
cmc
sub
dec
ret
rcrb
xor
mov
pop
bound
xor
sub
fcoml
stc
cmp
js
sub
mov
xchg
mov
push
movsl
sbb
sbb
aaa
fisubrl
pcmpeqw
jbe
sbb
pop
iret
pop
fdiv
shr
faddl
rcll
stos
lret
sarl
faddl
hlt
aad
in
loopne
inc
shrb
inc
dec
lock
push
adc
test
js
cmp
mov
loop
cmp
aad
js
mov
mov
das
popf
ds
mov
sub
shr
xchg
xor
mov
test
cmc
jmp
aam
mov
insb
mov
sbb
std
je
aas
jbe
mov
int
mov
jmp
fbstp
mov
leave
sbb
cs
sbb
pop
xchg
dec
icebp
cmpsb
inc
pusha
stos
lds
or
mov
mov
and
and
jge
xor
xor
scas
sahf
dec
jmp
jnp
jae
and
pmaxsw
je
mov
cmp
js
or
xchg
loopne
jge
loop
out
in
clc
inc
mov
push
mov
clc
sub
dec
insl
mov
inc
mov
outsl
mov
addr16
cs
mov
std
cmp
xor
pop
ret
sub
xchg
test
subl
cltd
sub
data16
inc
stc
mov
cmpsb
sbb
dec
out
imul
cltd
push
test
data16
inc
stc
mov
cmpsb
sbb
dec
out
imul
cltd
push
test
fsts
inc
stc
mov
cmpsb
sbb
dec
out
xlat
imul
cltd
push
test
pop
imul
mov
sub
cmpsb
cs
ds
rorb
ret
mov
into
xorb
pusha
or
adc
insl
xor
loopne
lock
in
aad
inc
or
jo
gs
adc
insl
xor
mov
les
cli
mov
inc
push
jae
add
add
add
in
mov
xchg
aad
xor
mov
cmc
lods
hlt
cmp
cmp
mov
hlt
popf
rolb
mov
nop
xor
aam
repnz
ret
gs
sbb
cwtl
loopne
adc
lea
hlt
xor
xchg
int
pop
out
jnp
jae
inc
repnz
insl
data16
xlat
lods
stos
cld
dec
dec
popf
lds
cmpsb
clc
sbb
push
sub
cmc
fcoms
push
lock
add
in
fscale
lea
or
mov
mov
sub
add
dec
xchg
sarb
repnz
and
pusha
iret
inc
sbb
inc
repnz
ret
popf
adc
popf
and
pop
rorb
int
xlat
nop
std
mov
adc
jo
add
jge
je
out
shr
fsubs
mov
les
or
add
je
push
sbb
push
popf
lods
lea
ret
mov
sahf
pop
and
pop
and
gs
cmpl
nop
std
mov
or
jo
add
jge
insl
xor
loopne
lock
in
mov
inc
or
jo
add
jge
insl
xor
pop
aaa
bnd
adc
mov
xor
dec
ret
adc
cmpsl
loope
std
jnp
fwait
rclb
scas
in
jb
icebp
mov
mov
insl
mov
bound
in
je
mov
call
push
push
pushf
testl
xchg
inc
out
xor
adc
jnp
ja
pop
sbb
pop
pop
lret
xchg
bound
sbb
int3
jb
lea
sbb
mov
add
push
push
cmp
mov
callw
dec
dec
test
cmp
rolb
fcompl
leave
mov
sub
dec
sbb
sub
adc
inc
jnp
rclb
fdiv
xor
push
lods
pop
pop
xchg
lret
sub
sbb
pop
addr16
shr
cmpsl
jmp
or
stos
or
mov
lods
cmp
jge
dec
sbb
std
das
fisttpl
cwtl
insl
mov
mov
push
dec
pop
sbb
in
inc
icebp
int3
in
pop
pushf
stos
cmc
or
pop
and
add
inc
xchg
aam
cmp
rclb
fmull
add
loope
daa
movsb
imul
mov
push
push
xchg
ss
imul
pop
pushf
push
and
test
loope
xchg
ds
ds
rep
and
inc
fistl
xchg
push
imul
stos
sbb
push
outsb
mov
lret
cli
stc
enter
fnstsw
dec
mov
stos
mov
or
xor
lods
inc
repnz
mov
nop
lcall
xchg
ret
adc
jecxz
lods
pop
loope
adc
mov
mov
xor
into
push
jl
lods
or
mov
sti
push
fnstenv
call
loop
jl
xor
inc
xor
jmp
cwtl
or
jle
xchg
xchg
jg
push
clc
cmpsb
popf
test
mov
xor
lret
push
sbb
arpl
cmpl
mov
push
inc
and
loopne
gs
je
mov
push
clc
sub
dec
fucom
cmpsb
adc
pop
add
aam
icebp
lahf
push
add
dec
inc
cmp
xchg
mov
mov
popf
mov
pop
arpl
jl
cmp
popa
xchg
enter
sbb
ljmp
inc
mov
pusha
sti
xchg
iret
stos
pop
bswap
xchg
pop
inc
int
iret
add
sbb
inc
stos
test
add
pop
inc
gs
sbb
dec
std
test
jno
ss
nop
rcll
push
cmp
dec
filds
cli
dec
daa
add
cmp
or
divb
adc
or
lock
jns
and
sbb
out
testl
lds
std
rcrb
je
and
pop
inc
test
fdivs
or
sbb
sub
out
xchg
fcomps
hlt
push
cmp
inc
sub
daa
shl
dec
out
cwtl
add
sub
cmp
sub
sub
mov
jns
push
call
mov
ret
pushl
jo
mov
imul
mov
les
jg
pop
mov
mov
adcl
pop
mov
or
or
dec
es
in
jnp
arpl
bnd
frstor
and
sahf
ljmp
mov
xor
sbb
pop
cli
fcmovnb
mov
or
jno
mov
fidivs
cmp
enter
jle
popa
fdivrs
imul
roll
and
lahf
in
jg
push
adc
pop
pop
cmp
mov
inc
inc
sbb
jae
mov
dec
out
rclb
jl
daa
cmp
and
movsl
test
inc
js
out
mov
pushf
hlt
ret
ret
inc
aam
xor
mov
imul
adc
cmovno
call
lods
push
pop
mov
in
mov
mov
fstl
jbe
mov
mov
enter
adc
outsb
fs
adcb
mov
cwtl
lret
jae
shll
popf
or
roll
pop
lahf
push
or
inc
fnstsw
pusha
add
sbb
adc
dec
fldenv
cmpsb
jl
adc
enter
out
fisubs
pop
or
mov
push
fadds
sbb
bound
dec
cmp
ret
xor
sahf
fmulp
xchg
mov
nop
fadds
daa
hlt
lods
int
push
sbb
jno
pop
push
and
daa
add
mov
popa
add
mov
pop
mov
jmp
dec
daa
into
push
jle
addb
inc
movsb
jns
sbb
xchg
pusha
xchg
clc
popf
inc
mov
jge
movsb
roll
in
xorb
movsl
and
imul
dec
daa
nop
and
xchg
fcoml
fcomps
in
add
fs
rorb
or
ror
sub
xrelease
hlt
mov
out
mov
fsubrl
movsl
or
push
clc
pop
lods
imul
mov
popa
and
push
cld
test
leave
add
pusha
std
mov
jnp
or
movsb
insl
add
xor
shll
xchg
xor
ss
xchg
sbb
mov
dec
cmp
mov
sub
inc
les
rol
push
popa
fstpl
mov
mov
jle
and
outsb
shr
push
outsb
xor
and
das
xor
mov
pop
xorb
int3
cmp
loopne
and
mov
ret
testb
pop
xchg
push
jmp
insb
outsl
outsl
sub
push
xchg
jo
xor
xor
insl
mov
popf
mov
sub
mov
mov
fists
stos
jb
and
movb
imul
cld
jl
mulps
inc
outsl
push
lock
adc
ja
add
add
fidivl
dec
cmpsl
in
fdivrs
pop
adc
adc
pop
add
adc
lods
sub
mov
jp
loope
loope
xor
jecxz
jge
movsb
inc
rcrb
xchg
je
mov
add
mov
in
cld
cmc
jne
mov
sbb
scas
lods
sbb
loopne
mov
dec
dec
xor
or
and
flds
jns
push
dec
iret
imul
inc
iret
outsl
iret
in
cmp
pop
pop
cld
addb
jo
xchg
dec
lds
lret
jle
fwait
mov
out
call
movsb
lods
out
ja
clc
sahf
rcrb
dec
lock
mov
xor
out
fdivrs
cmpsl
rolb
ret
dec
out
sub
push
sti
int
ret
fsubrp
pop
lds
and
and
sub
in
mov
mov
aad
pop
push
aad
mov
daa
xchg
lret
xor
ret
jbe
notl
add
adc
lds
in
in
popf
jecxz
cmp
scas
repz
mov
fcmovu
nop
nop
jo
jns
jl
add
mov
loope
push
test
inc
movsb
mov
orb
add
dec
or
hlt
in
icebp
add
jo
pushf
and
call
cld
mov
mov
jle
lods
test
fdivrs
pop
ficompl
in
outsl
stc
ds
in
daa
inc
repz
orb
fs
cmp
mov
fisubrs
repnz
loope
int3
dec
xchg
rcll
int3
jge
mov
mov
add
xchg
jmp
popf
cmpsl
and
add
or
stc
insl
shlb
arpl
mov
xlat
mov
aas
aam
addr16
add
add
mov
je
jge
xchg
sub
add
inc
int
push
jmp
jle
popf
ret
pop
mov
xor
xlat
rcr
add
cs
and
xor
xchg
or
push
pushf
inc
jmp
shrb
cltd
add
iret
cs
jbe
mov
loop
icebp
dec
fstpt
loope
scas
sub
inc
lcall
pop
cmc
add
mov
or
movsb
lods
loop
mov
ficomps
add
fnsave
movsb
add
fistl
mov
push
add
pop
mov
adc
mov
xor
dec
in
adc
dec
test
sub
test
rcrb
stc
jg
or
push
out
in
jnp
popf
aaa
andb
adc
fdivrs
fiaddl
mov
dec
add
test
sub
xlat
popa
pop
jno
aas
imul
and
cs
mov
cmc
or
sbb
into
shll
pusha
dec
dec
xlat
outsb
das
lea
test
clc
int3
inc
rclb
movsb
ficompl
pop
pop
jne
inc
popa
xor
or
jl
subb
dec
daa
test
inc
dec
inc
jae
cltd
inc
lahf
cmp
xor
pop
pop
out
mov
outsl
nop
mov
add
iret
jae
test
jmp
mov
xchg
jge
mov
out
push
xor
ss
daa
lret
or
lret
dec
inc
inc
or
test
sub
pop
jp
imul
dec
or
imul
xor
int3
mov
adc
xchg
jge
adc
out
arpl
ret
subps
nop
push
adc
mov
push
adc
sbb
int3
sbb
arpl
test
ret
icebp
dec
out
lock
in
les
fdivl
jnp
dec
psrlq
jg
and
fcom
pop
sub
jmp
test
xor
adc
adc
js
pop
ja
cmp
mov
pop
mov
repnz
sbb
adc
xchg
rorl
push
shlb
shrb
mov
mov
int3
push
pop
in
sti
add
cmp
cwtl
pop
in
mov
aas
out
imul
inc
mov
clc
insb
push
lods
pop
data16
imul
jnp
pop
mov
sbb
lds
sub
or
bound
mov
mov
cmp
add
js
fnstcw
mov
add
outsb
insb
pop
out
sti
sub
mov
inc
movsb
push
mov
js
stos
mov
sub
mov
cmpsl
loop
push
pop
hlt
fadd
cmp
xor
dec
push
xor
mov
int
sub
mov
fcmove
mov
arpl
xchg
jae
js
dec
xor
add
fisubl
adc
loopne
or
iret
jne
test
out
push
sub
xor
and
push
rcrb
or
nop
add
je
dec
xchg
sbb
ja
xchg
aaa
xchg
aam
cs
arpl
xor
mov
aad
je
sarb
lods
push
or
jno
adc
xchg
shr
dec
pop
xchg
negl
lret
call
xor
cs
push
repz
test
cltd
insb
out
jmp
pop
mov
xchg
xor
je
mov
dec
out
sbb
sbb
loop
jmp
clc
lds
pushf
cmp
sbb
xor
hlt
and
mov
jp
orl
je
xchg
push
adc
pusha
js
das
sbb
pop
popa
cmp
mov
or
mov
sub
xor
add
push
add
xchg
push
pop
inc
stc
or
mov
push
cmpsb
lds
sbb
mov
loop
jb
or
call
fisttps
pop
cmp
pushf
sub
lods
jbe
clc
push
loopne
jo
xchg
and
cmovne
test
pop
add
or
cmpsb
lods
movb
cli
push
insb
sub
mov
popa
lcall
ret
xchg
fwait
sbb
mov
push
add
pop
jl
clc
pop
mov
je
xchg
int
aas
cmp
aam
shl
or
push
mov
fldl
ja
fcmovne
cltd
imul
into
inc
and
out
xor
es
lret
push
fldcw
shrb
shll
or
mov
mov
push
and
push
imulb
mov
mov
into
pop
lret
jno
sbb
cwtl
mov
jo
std
xor
cmp
jbe
or
sbb
sub
add
pop
lret
fwait
sbb
xor
xchg
push
sbb
pop
xor
jecxz
into
into
test
xor
ja
pop
stos
bound
push
lret
shlb
inc
jno
call
ficomps
or
leave
insl
cs
jb
or
jbe
lcall
iret
add
jle
sub
pop
mov
xor
or
outsl
xchg
sbb
cmp
out
fidivs
and
xorl
mov
xor
scas
fidivs
pop
mov
dec
dec
mov
push
mov
dec
pop
mov
and
pop
push
ja
pushf
bound
lcall
add
ds
negb
push
ljmp
pop
sbb
aaa
in
loope
shl
dec
shr
movsb
xor
inc
and
dec
mov
test
dec
push
fldcw
pop
lods
sbb
dec
xchg
jno
repnz
popa
pop
sahf
idivb
out
mov
inc
cmp
ja
cmp
in
mov
jne
popf
adc
pop
push
adc
mov
into
xor
mov
push
ds
loopne
and
push
cmp
rcrb
mov
in
add
or
insl
out
push
fdiv
add
gs
dec
mov
cmp
aad
jg
xor
repz
test
push
fsub
hlt
cs
pop
mov
or
fiaddl
pop
push
push
mov
cmp
inc
mov
and
mov
xor
jle
int
lods
sub
test
aaa
and
dec
mov
nop
inc
sbb
roll
pop
out
mov
or
inc
jecxz
add
sbb
leave
scas
cwtl
sbb
jl
sbb
add
add
push
xchg
call
adcl
cmp
sub
aad
push
sbb
add
mov
push
sbb
add
idivl
and
xchg
aaa
pusha
xchg
lret
sbb
movsb
pop
or
jb
les
and
sahf
int
loopne
cmc
decb
pusha
mov
sub
aad
int3
fimuls
loopne
jg
out
or
mov
cmpsb
push
jmp
test
dec
cmc
jno
aas
dec
adc
in
loop
ja
mov
into
lret
mov
mov
int3
hlt
push
repnz
ss
out
sbb
inc
add
and
cmp
pop
xchg
mov
insl
rcll
jle
xlat
sub
push
xchg
fsubl
inc
push
repnz
push
xor
or
add
push
pop
sub
add
or
inc
in
test
out
sub
dec
jne
fs
xchg
scas
xchg
and
pop
sub
fisttpl
sarl
sbb
and
mov
popa
scas
dec
cmp
sub
push
decb
xor
sub
xor
mov
aas
test
cmpsb
lock
es
cltd
cmp
ljmp
in
push
xlat
addr16
popf
lret
xorl
out
cltd
or
test
or
mov
lea
and
xchg
xchg
pop
jb
pusha
sbb
xchg
mov
in
sbb
rorb
lods
leave
dec
movsl
mov
mov
cmp
movsb
mov
xchg
test
push
leave
test
jo
aas
mov
cmp
sbb
inc
pop
mov
xchg
mov
xlat
pop
negb
idiv
mov
in
ret
jmp
sub
or
sub
dec
fwait
push
iret
or
cli
test
inc
xor
mov
cmp
adc
dec
xor
add
icebp
adcl
stos
out
nop
jl
fsubs
dec
push
mov
xor
and
ljmp
push
cld
ds
maskmovq
xchg
pop
sar
dec
in
mov
jmp
in
inc
fcompl
pop
push
add
inc
mov
cmc
or
ds
mov
aad
sub
jnp
jmp
inc
testb
stos
xchg
xor
add
push
fsubrl
mov
mov
mov
in
or
decb
or
inc
or
leave
mov
jns
xchg
xchg
imulb
xchg
mov
xchg
out
cmp
add
xchg
mov
mov
mov
jae
aaa
fists
pop
jle
aam
cmpl
lea
push
lods
fistps
lcall
std
stos
icebp
xor
in
cmp
test
mov
mov
lret
outsb
call
mov
push
mulb
jnp
aam
jmp
sbb
sub
les
xchg
pop
add
loopne
cs
mov
in
lret
lret
dec
adc
jmp
mov
ja
jne
mov
jo
jo
repnz
mov
jp
jge
dec
out
js
ret
data16
cli
icebp
jmp
movups
pop
inc
stos
xchg
pop
jae
test
add
int3
ljmp
cmp
jmp
jp
push
in
jge
jge
daa
jnp
cmp
xchg
out
push
test
int3
testb
push
mov
adc
pusha
and
jnp
xchg
fbstp
js
popf
adc
sbb
xor
ret
hlt
imull
lods
xchg
in
add
imul
inc
add
ja
push
cmc
push
add
xchg
fstl
sti
mov
call
cld
repnz
lahf
test
jle
insl
notl
add
jg
mov
cmp
jecxz
in
call
out
enter
and
jg
dec
sar
mov
push
pop
xchg
lret
repnz
inc
test
mov
pop
mov
inc
mov
dec
dec
das
cltd
xchg
inc
sbb
test
movsb
add
enter
aas
insb
adcb
sbb
mov
xchg
dec
sbbl
daa
fsubr
repz
mov
in
mov
dec
pop
xchg
aas
mov
dec
push
and
pop
arpl
scas
enter
add
mov
addr16
js
into
rolb
dec
jo
icebp
dec
pop
mov
cmp
mov
lret
fs
xor
es
loope
xor
or
shll
sahf
adc
in
mov
pop
pop
mov
fs
movsb
xchg
mov
jo
in
mov
scas
inc
popa
rorb
pop
adc
shll
dec
and
iret
xchg
sbb
xchg
dec
dec
movsb
imul
lret
sub
jmp
in
and
or
adc
jmp
mov
cmp
jbe
ss
and
into
movsl
ret
add
sub
cs
sbb
sub
pop
jl
out
mov
mov
int
push
adc
dec
mov
adc
test
and
xor
sub
push
out
rcll
js
sbb
cltd
mov
ret
dec
xor
loop
aam
int3
xor
adc
mov
iret
negl
dec
dec
xor
adc
ss
jb
aaa
movsb
test
mov
cwtl
lahf
push
into
sub
fnstsw
sub
out
imulb
mov
test
inc
add
jle
sbb
mov
xor
and
lds
jge
mov
jno
imull
loope
adc
stc
nop
imul
push
stos
mov
ljmp
mov
cmpsl
inc
sub
in
or
movsl
xor
cmp
fadd
jns
aad
imul
inc
sbb
cmp
ficoms
cld
mov
ror
or
sbb
shrl
push
inc
loopne
cmpsl
mov
ficoms
adc
divb
dec
fisubs
in
aad
test
and
aam
jbe
pop
push
ja
pop
lcall
xchg
mov
xchg
popl
in
jno
aam
xorb
and
mov
mov
aas
movsb
aam
and
cld
xchg
sti
mov
adc
insl
stc
shll
cmpsl
lock
xchg
out
stc
lcall
jle
aas
imul
enter
dec
xor
adc
push
sbb
hlt
imul
and
xlat
xchg
jns
mov
rolb
into
sbb
xchg
jge
mov
sbb
js
pop
cmp
fwait
or
dec
and
das
jg
xchg
movsb
xchg
lea
mov
lret
sub
aam
movsl
sub
stc
cltd
push
xor
or
xor
jmp
sub
push
pop
cltd
scas
jae
sti
cld
mulb
xlat
mov
test
adc
insb
xchg
push
add
push
insl
int
cmc
outsb
cs
and
and
jbe
adc
mov
inc
ja
mov
xor
inc
bound
ss
adc
loop
and
movsb
in
loop
imul
cmp
inc
push
inc
push
stc
movsl
insl
iret
pushf
dec
mov
js
push
sub
idivb
jbe
fcoml
xchg
sbb
into
xor
xor
push
mov
lock
in
mov
inc
or
jo
add
jge
insl
xor
loopne
lock
in
mov
inc
or
jo
add
jge
insl
xor
loopne
lock
in
mov
inc
or
jo
add
jge
pop
xor
loopne
lock
insl
jo
inc
repnz
xchg
pusha
sub
out
sbb
iret
icebp
push
adc
pushf
mov
repnz
test
mov
xchg
or
jns
insb
inc
pop
testb
lods
push
pushf
mov
cld
push
in
inc
fdivl
data16
xchg
sub
xor
or
pop
mov
out
push
sub
sbb
dec
es
push
movsb
inc
lock
data16
inc
xchg
insl
cmpsb
pop
xchg
xor
std
push
mov
pop
sti
ja
xchg
test
bound
or
mov
jecxz
and
jge
mov
sti
xchg
adc
mov
mov
sub
mov
shll
rorl
fistpl
mov
jns
jbe
pop
adc
push
scas
or
outsl
stc
add
test
cli
fldenv
std
push
adc
stc
into
cltd
sub
ljmp
outsb
cmp
mov
cmp
push
stc
arpl
outsl
push
cwtl
arpl
jecxz
pcmpgtd
or
imul
lods
stc
arpl
fbstp
adc
pop
add
xchg
ret
insb
add
loop
out
push
lods
push
pushf
ss
cld
push
test
fdivl
data16
xchg
mov
cmpsb
sbb
jb
pop
imulb
into
jns
push
fcomps
dec
xchg
cmp
ss
rep
repnz
fisubrs
adc
hlt
or
inc
push
xchg
push
lea
mov
mov
repz
pusha
leave
lgs
lods
sub
lahf
push
in
pop
int
mov
jbe
data16
sub
sbb
or
jl
insb
pop
testb
lods
push
pushf
mov
cld
push
in
inc
fdivl
data16
sub
sbb
or
jl
insb
pop
testb
push
popa
mov
cmp
or
fdivrs
das
shll
and
ljmp
pop
mov
jbe
daa
pop
sub
adc
lcall
sahf
out
clc
out
stos
shl
into
fldenv
out
mov
mov
adc
inc
adc
rcrb
mov
mov
pop
push
adc
push
mov
hlt
jno
sub
ret
nop
movl
repz
call
leave
cli
jecxz
dec
xchg
jmp
clc
or
or
cmpsl
and
sub
pop
add
out
imul
mov
bound
adc
mov
mov
cld
mov
push
js
jno
iret
xorl
call
and
inc
lahf
cmp
adc
jne
mov
fs
pop
movsb
mov
add
adc
dec
leave
in
mov
stos
dec
dec
dec
shlb
pop
cmp
push
and
cmp
stos
add
fstpl
pop
lods
fbstp
dec
jbe
test
fnstcw
ss
push
push
repnz
jp
cmc
push
and
jp
jb
pop
and
lods
rcrl
int
out
ds
jp
or
in
lcall
pop
scas
lahf
and
mov
arpl
pushf
pop
pop
xor
leave
and
sbb
dec
jae
movsl
push
popf
test
jnp
neg
cli
pop
mov
fimull
jl
inc
adc
pop
add
lahf
add
test
mov
cmpsb
or
subb
scas
testl
arpl
insl
sar
jnp
cmp
sub
xchg
out
push
xchg
pop
adc
fisubrs
loop
push
xchg
inc
push
fsubl
mov
call
mov
mov
stc
stos
ret
dec
pop
xor
mov
inc
scas
dec
inc
sbb
int3
jle
mov
inc
roll
in
sbb
jno
sub
imul
jae
jne
fsts
mov
leave
inc
or
jl
icebp
in
mov
je
inc
mov
jl
cmp
arpl
and
mov
xchg
sub
lahf
nop
mov
pop
cmpsl
std
mov
dec
cld
cmpsl
call
jl
movsb
xor
mov
pop
repz
lods
xchg
insb
aas
in
stc
mov
jno
push
jne
sub
sub
mov
sbb
mov
popf
dec
add
xor
jp
xchg
sbb
jbe
pop
sub
lds
sbb
pushf
stos
leave
mov
adc
xchg
pop
lret
mov
jp
ret
loopne
cmp
jb
sub
jne
cmp
fnstsw
rolb
lods
sub
mov
sub
jne
fldcw
pop
inc
cli
test
hlt
or
mov
in
push
jl
fstl
inc
int3
jmp
pop
lock
insb
fwait
mov
jmp
clc
jb
ljmp
jp
sub
xchg
dec
mulb
mov
aas
xchg
mov
push
sarl
imul
inc
outsl
inc
xchg
xor
insl
mov
inc
sbb
jae
cmp
ret
movsl
js
mov
std
inc
add
pop
call
sub
out
adc
bound
stos
xorl
cmpsl
add
and
mov
adc
mov
ds
imul
xchg
decl
sbb
mov
mov
aaa
xchg
cmpb
xchg
int
xchg
lret
jns
sub
ja
js
and
int
sbb
jg
mov
sub
dec
pop
push
pop
loop
mov
adc
lret
cwtl
jge
jbe
jg
and
scas
xchg
mov
pop
leave
adc
mov
aad
repz
or
flds
jns
mov
dec
sub
adc
pop
or
xor
inc
cwtl
xchg
jl
mov
push
mov
in
xor
add
sbb
pop
dec
and
push
jno
inc
jp
xor
sbb
xorb
or
ljmp
cmp
mov
out
aad
push
cmc
mov
jns
add
ss
mov
fildll
sub
cltd
shlb
fwait
jl
xchg
push
jg
adc
dec
in
and
hlt
in
test
stos
fldl
or
enter
fldt
rol
test
out
push
loope
mov
mov
mov
aam
mov
inc
shl
mov
pop
pop
xchg
push
shlb
iret
xorl
pop
mov
stos
cmc
rorb
inc
std
mov
int3
lock
mov
push
lock
mov
pushf
jbe
ret
jge
sbb
out
out
adc
stc
mov
xor
sbb
jns,pn
cmp
pushf
mov
cmc
xor
mov
cmp
sub
sub
adc
test
std
and
and
fwait
dec
stc
sbb
lds
and
test
pop
jg
popa
jl
pop
in
jns
pushf
mov
jmp
sahf
inc
adc
jmp
mulb
jge
shlb
pop
lds
cmp
dec
push
adc
or
popf
shr
imul
sti
jmp
inc
fdivrp
lods
adc
xor
lcall
fs
fidivs
adc
pushf
shll
mov
push
mov
pop
iret
mov
mov
push
jle
inc
and
and
int
sbb
jb
mov
out
dec
aas
add
sbb
fdiv
imul
pop
push
es
popf
lds
mov
cmp
lock
fstl
adc
insb
sub
dec
mov
push
mov
iret
mov
and
das
xor
pop
repnz
adc
or
mov
push
inc
ljmp
mov
mov
ret
loope
ret
xor
lcall
add
stos
jnp
subb
imul
cwtl
push
jo
pop
or
add
in
aam
pusha
data16
das
sub
jb
std
push
stos
ja
je
lds
adc
or
div
push
sahf
rolb
cwtl
cli
in
mov
pop
or
je
push
cld
push
push
leave
shrl
pop
jns
pop
stos
std
pusha
sbb
xchg
add
inc
sbb
or
in
pusha
test
xlat
push
lods
sahf
sub
add
or
adc
imul
fcoml
and
movsl
lcall
mov
popf
out
sbb
add
xchg
jns
xchg
dec
cmp
jmp
xchg
push
sti
jecxz
sbb
push
lods
cli
pop
push
jecxz
mov
adc
mov
fsubl
pop
jmp
fdivp
push
insb
aad
dec
cmp
pop
cmp
adc
icebp
cmp
jge
xlat
adc
push
mov
std
pusha
int3
xorl
jg
adc
cmpsb
fdivrl
xlat
sub
mov
mov
int3
sub
cmp
jb
cmc
nop
xchg
adc
insb
movsl
inc
fisubs
shrl
sbb
cmp
mov
xchg
int3
lds
mov
xchg
and
sbb
mov
fsubp
mov
ss
mov
shll
push
mov
rorl
push
mul
dec
adc
mov
sub
cmp
sub
sarl
inc
out
dec
or
or
mov
adc
mov
scas
test
icebp
das
int3
lds
xchg
pop
loop
dec
mov
ss
scas
mov
aas
cmpsl
mov
test
add
fisubl
adc
mov
lahf
fxch
outsl
mov
push
imul
or
cltd
push
cs
loope
sub
inc
fs
xchg
mov
cmp
mov
pop
loop
xchg
rol
sarb
lea
into
xchg
and
xor
decl
adcb
inc
pop
test
jbe
mov
and
lret
fs
shlb
fcompl
mov
insb
inc
sub
ljmp
push
mov
dec
cmp
fiaddl
push
sbb
ret
loope
das
cmp
sbb
popa
mov
lcall
push
jge
jle
aad
pushf
cs
cmpsb
ficomps
jecxz
cmp
or
outsb
mov
or
arpl
pop
pusha
sub
adc
rclb
loope
sub
mov
jbe
sub
cmc
mov
test
jno
shrl
ss
out
pop
out
adc
mov
or
and
xchg
mov
lods
das
out
mov
mov
pop
dec
gs
fdivrp
or
cmpl
stos
aam
inc
sarl
test
jne
jg
xlat
xchg
dec
mov
fld
mov
sub
lret
or
icebp
inc
or
cltd
cmp
mov
mov
out
inc
mov
aas
shld
in
jl
outsl
xor
cmpsl
fs
mov
xchg
fs
cmp
adc
cmp
push
push
pop
push
int3
movsb
in
mov
xchg
xor
or
in
mov
add
int3
rcll
xor
ja
mov
jge
mov
jbe
jne
add
adc
xchg
cmp
mov
stos
push
or
lahf
imul
test
mulps
or
stos
pop
or
shll
pop
cmp
fs
inc
pop
cmp
adc
xorb
mov
fiadds
lods
or
pushf
sub
push
loopne
push
imul
and
iret
es
lods
push
adc
mov
jmp
add
cwtl
sub
loop
adc
pop
dec
inc
pop
mov
lret
scas
push
in
ds
push
add
and
jp
pop
push
jne
mov
xor
ss
imul
insb
out
bnd
mov
mov
push
mov
sbbb
or
inc
aad
push
adc
mov
push
loope
mov
shll
fiadds
sbb
mov
je,pt
movsb
aaa
xchg
subb
and
cmp
je
jns
cld
es
jp
dec
dec
sbb
lahf
out
fsts
ljmp
xchg
jecxz
mov
sub
add
sub
push
push
shl
rorb
mov
loopne
pop
push
stos
jg
idivl
mov
adc
jns
shlb
ret
scas
push
dec
push
lock
mov
mov
cmp
call
shlb
mov
fstp
jns
addl
inc
xchg
imul
in
inc
dec
mov
jo
jae
je
mov
fnstenv
push
andl
mov
loope
int3
testl
mov
xor
loope
imul
xor
xchg
sub
xor
test
xor
lret
mov
arpl
jb
std
and
push
jbe
in
int
loope
sub
out
clc
in
movsl
int
loope
cmc
mov
gs
in
movsl
mov
ret
sub
adc
pop
push
scas
rorb
jmp
nop
push
pop
xchg
jle
cmp
aas
rcr
dec
pop
pusha
xlat
into
pop
pop
rolb
pop
les
in
mov
pop
lods
loop
ljmp
jecxz
mov
int
nop
dec
xor
clc
dec
push
mov
push
mov
cmp
aas
test
xor
jno
dec
sub
shll
cmp
mov
adc
mov
pop
leave
mov
pop
cld
test
jp,pn
push
pop
mov
repnz
mov
adc
sub
mov
push
sbb
ret
sbb
movsl
dec
fadd
inc
mov
push
mov
sub
mov
mov
or
mov
pop
or
inc
sbb
cwtl
pop
pusha
add
mov
pop
pop
jo
stc
sub
dec
jnp
cmpsb
cmp
or
subb
stc
sbb
sbb
mov
dec
fistps
pop
sub
jecxz
subl
pusha
pop
mov
mov
dec
into
add
stc
or
cmp
scas
lret
add
sub
mov
mov
insl
gs
dec
loop
leave
sti
loope
pop
add
stos
dec
test
sbb
and
sbb
lea
push
mov
cmp
lds
sbb
cmp
cmp
xor
add
dec
aaa
and
adc
fsubl
xor
stos
js
not
cmc
sub
and
and
push
stc
scas
inc
cmp
sbb
and
inc
pushf
jno
mov
popa
lock
mov
cmc
or
xchg
test
mov
repnz
mov
inc
mov
test
cmp
fdivrs
mov
sub
inc
add
push
sub
and
nop
es
ljmp
jo
inc
adc
push
pop
iret
rorl
fimuls
outsb
and
dec
mov
rorl
in
xor
repz
loop
mov
in
loop
je
rorl
iret
pop
pusha
inc
or
lds
adcl
cmp
mov
rcr
mov
push
addl
push
pop
leave
stos
stos
repz
xlat
pop
dec
sahf
xor
fstpt
mov
cmp
cmc
in
out
add
add
push
jle
lret
xchg
andb
je
xor
xchg
cmp
in
xor
dec
sbb
fnsave
or
add
mov
xchg
adc
sbb
add
push
icebp
cwtl
ljmp
repnz
push
in
mov
mov
movsl
gs
fmuls
cmp
lret
bound
cmpl
cmp
xor
es
mov
jb
adc
add
stos
fmulp
nop
in
aas
xchg
xchg
aad
add
out
push
jecxz
fnsave
imul
inc
test
xor
test
push
sbb
dec
push
mov
add
mov
addr16
icebp
and
insb
out
adc
adc
mov
mov
sbb
jno
and
push
imul
xor
add
mov
mov
mov
mov
mov
push
repz
mov
loop
pop
rcll
push
or
adc
add
inc
aam
xchg
or
add
cwtl
pop
iret
push
clc
mov
cmp
call
push
shlb
sub
jle
cld
and
push
js
add
ret
nop
mov
cmp
stc
leave
pop
sub
pop
push
cltd
push
cmp
fdivs
pop
outsl
sbb
ret
std
cmp
movzbl
dec
mov
and
sbb
mov
sub
int3
mov
outsl
lods
mov
ljmp
aaa
or
and
mov
inc
adc
loope
data16
sbb
out
dec
and
sti
pop
push
stos
jl
sbb
mov
mov
es
jecxz
jne
ja
cs
mov
in
stos
fs
adc
pop
insb
dec
aas
mov
test
cmp
xor
pop
ret
cld
xchg
xlat
mov
adc
xlat
movl
stos
loope
adc
push
sub
add
sbb
sti
sbbb
cmp
jns
jb
fbstp
mov
cmp
push
lret
adcb
pop
stos
mov
repz
adc
xlat
mov
movsl
xor
mov
sarb
push
mov
rcll
aas
dec
gs
out
mov
push
pop
outsl
add
or
movsb
aam
xchg
xlat
arpl
cmp
push
sub
pop
stos
dec
cmp
xchg
dec
filds
jbe
add
addr16
push
sbb
dec
iret
fwait
adc
and
stos
mov
and
cmc
jo
test
xor
test
mov
inc
repnz
push
aas
fcomi
push
push
nop
jae
movsl
jnp
imul
outsl
lahf
xchg
sbb
fimull
into
ljmp
inc
scas
jge
mov
mov
ljmp
fdivrl
pushf
inc
adc
adc
addl
jo
mov
adcl
sbb
sbb
movsl
dec
shll
sub
fists
mov
lcall
mov
pusha
mov
adc
jge
sub
mov
sub
cmp
lds
and
in
xchg
or
jae
xor
out
adc
inc
rcrl
hlt
push
ljmp
sub
mov
std
add
cmc
jns
xchg
or
or
stos
mov
dec
push
sti
xor
dec
in
sbb
dec
loope
mov
das
pop
popa
xor
push
push
clc
andb
mov
loope
jl
mov
leave
mov
pop
roll
adc
pop
ds
xchg
fwait
mov
imul
stos
jnp
repz
mov
adc
in
inc
inc
aad
pop
imul
js
fstpt
test
mov
xchg
xchg
xor
fmul
xchg
lds
lock
insb
cmp
mov
inc
test
dec
pop
in
cld
pop
adc
and
scas
jns
add
dec
add
cmc
iret
cmp
adcb
data16
jo
xchg
gs
sub
mov
insb
xchg
push
xor
adcl
loope
das
jno
test
mov
dec
push
or
pop
dec
cltd
in
adc
hlt
and
aad
xchg
lods
cmp
pop
inc
mov
mov
cs
mov
push
adc
aas
mov
xchg
lods
leave
scas
enter
and
dec
push
popa
dec
cmpsb
push
out
imul
push
jne
in
sbb
mov
addb
adc
dec
inc
clc
aaa
sub
fcmovu
inc
jle
mov
pop
insb
sti
outsl
and
pop
js
or
movb
test
data16
mov
mov
arpl
adc
or
dec
pop
call
dec
cli
aaa
add
xlat
pop
movsb
cmp
loopne
cmp
dec
pop
jne
test
into
out
fcoms
and
or
ret
shll
jmp
xchg
imul
scas
enter
mov
xchg
xchg
jb
push
jmp
aad
cmp
rolb
mov
dec
hlt
xchg
add
cwtl
jmp
in
push
mov
rcll
dec
jo
push
lahf
rcr
mov
or
mov
inc
cmp
in
xchg
clc
sbb
out
scas
stos
bound
shl
inc
lods
jno
pop
pop
push
adc
pop
repz
push
push
imul
inc
outsl
push
mov
mov
sub
jno
call
lcall
sub
lock
push
test
or
mov
in
movsl
mov
adc
nop
idivl
addr16
pop
mov
add
das
add
loope
jae
pop
ljmp
adc
mov
pop
mov
adc
cltd
outsl
mov
fwait
sub
push
ret
cld
outsl
adc
aad
push
or
mov
sub
imul
or
movsb
nop
leave
or
lods
jo
test
popa
cltd
or
cli
insb
pop
jle
adc
stc
push
sarl
pushf
loop
push
mov
es
xorb
xchg
jl
push
sub
dec
xlat
popf
sbb
push
cmp
inc
xchg
pop
xchg
xchg
sarl
push
jns
jo
push
mov
aad
push
pop
add
adc
imul
cmpsl
bound
xor
sub
lods
cmp
js
dec
push
fidivrs
lods
rorb
inc
push
jo
scas
jge
sbb
jp
pop
sarl
insl
imul
jne
les
dec
repnz
movsl
mov
gs
push
sub
pop
test
enter
adc
pop
inc
jnp
leave
push
leave
ljmp
fidivs
jg
jbe
or
fimull
push
pushf
mov
cmpsb
pop
jmp
or
lret
jl
pop
pop
out
mov
push
pusha
add
jbe
jne
pop
xor
inc
sbb
out
mov
adc
pop
popf
lods
adc
jle
call
mov
push
mov
in
bound
in
ret
sbb
adc
ja
pusha
jb
insb
jp
out
mov
push
in
push
mov
xlat
clc
pop
mov
mov
ljmp
or
mov
sbb
add
cs
pop
cmp
cltd
incb
fists
stos
sti
jns
loop
xchg
mov
mov
pop
or
sub
mov
in
addb
push
pop
cmp
mul
or
adc
mov
popf
cltd
ljmp
aaa
and
jmp
cmp
ret
les
cmp
popa
or
xor
lcall
mov
mov
mov
sbbb
shll
pusha
sti
inc
pop
lock
mov
sahf
adcb
outsb
inc
pop
jmp
jle
frstor
dec
jl
cmc
jg
adc
add
ret
sub
inc
lea
push
es
movsl
ss
es
push
in
inc
fdivl
data16
sub
sbb
or
jl
insb
pop
testb
lods
push
pushf
mov
cld
push
in
inc
fdivl
data16
sub
sbb
or
jl
insb
pop
testb
scas
xchg
call
data16
sub
adc
jne
pop
idivb
push
addb
movsb
es
push
cld
inc
fdivl
data16
shrl
mov
rorl
pop
in
mov
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
jnp
imul
int
mov
cmp
jmp
fisttpl
cmp
fwait
sbb
imul
lods
sub
sti
insl
jmp
fisttpl
jge
sub
mov
pop
imul
dec
mov
sbb
enter
stos
push
out
pop
cld
dec
cmc
push
clc
xchg
or
dec
mov
nop
cmpsb
cmpb
pop
sahf
add
shlb
adc
aam
sub
jecxz
pop
dec
into
xchg
cmp
add
into
mov
ret
bound
jnp
data16
fisttpl
xor
stos
xchg
call
insl
dec
orb
scas
push
xor
test
jae
sbb
cwtl
lods
sub
cmc
jl
insl
adc
pop
mov
ret
push
sbb
or
cmp
or
inc
mov
mov
pop
add
cmpsl
pop
and
iret
js
sub
jne
jo
fmull
or
inc
jecxz
adc
mov
mov
jle
sbb
jnp
imul
int
pop
cmp
sub
sti
imul
sub
jge
jne
daa
stos
das
fwait
or
sub
pop
ret
inc
jmp
cmpb
cmp
inc
into
je
push
push
scas
lods
dec
aam
enter
fsubrs
mov
xchg
pop
mov
stos
je
dec
in
aas
andl
out
adc
lea
jge
insl
jmp
fisttpl
cmp
fwait
or
imul
int
mov
sbb
jmp
fisttpl
cmp
fwait
or
add
mov
mov
inc
repz
das
dec
adc
sahf
jo
fwait
data16
mov
and
push
dec
int3
jl
imul
xchg
js
arpl
xchg
adc
push
xor
les
jp
ror
rcrl
aad
xchg
sbb
sbb
imulb
inc
clc
stc
adc
loope
and
lret
popa
ljmp
dec
push
lret
fidivs
pop
rcr
inc
fdivrs
int
ficoms
std
jae
movsl
mov
ja
mov
jns
jl,pt
sbb
dec
xchg
or
jmp
icebp
or
or
cmc
mov
scas
stc
push
push
ret
ret
in
dec
pop
push
or
xor
out
vrcpss
insb
adc
sbb
xchg
inc
adc
dec
mov
jle
insl
jne
and
xor
mov
push
popa
lea
cmp
sub
xchg
push
sub
movb
inc
dec
es
push
adc
mov
jbe
pop
jo
icebp
jo
and
lock
mov
xor
adc
xchg
sub
push
out
jo
out
push
popf
not
jbe
mov
pop
xor
ds
push
clc
insl
and
ret
fidivrl
xchg
xchg
jge
fst
das
dec
int
stos
cli
sub
adc
mov
xchg
mov
mov
cld
mov
lcall
cmc
push
mov
jecxz
jge
inc
or
push
pop
out
xchg
inc
fists
jmp
mov
jne
dec
lret
fnstcw
shl
je
sarl
int
sbb
add
jg
adc
pop
xor
xlat
adc
push
out
in
cltd
dec
pop
pop
add
inc
cwtl
adc
imul
push
add
xor
and
data16
inc
or
pop
dec
les
cmpb
ret
cmp
mov
push
pop
lret
sub
jge
mov
jno
adc
cmp
mov
jle
mov
into
dec
xchg
cmp
jnp
jae
sbb
inc
ss
hlt
jns
lret
pop
jns
mov
out
sub
mov
pop
divl
add
sahf
mov
je
xor
pop
jp
adc
push
mov
in
rorb
insb
sub
jbe
leave
mov
mov
pop
and
adc
mov
clc
mov
pop
pusha
or
dec
mov
shlb
imul
xorb
mov
ret
or
xchg
das
xor
jge
scas
mov
pop
adc
sub
push
push
test
jne
inc
cmp
aas
xchg
pushf
add
xorb
jmp
xor
ja
adc
mov
sbb
ret
inc
hlt
xchg
aaa
data16
data16
push
orl
stos
inc
adc
in
faddl
je
shlb
cs
ljmp
mov
fwait
aas
inc
ja
fcomi
sarb
sti
fs
in
dec
popf
sbb
xorl
sbb
int3
xchg
rcrl
add
ficomps
adc
fldcw
push
adc
lods
xchg
shll
mov
popa
aad
sub
xor
repnz
push
out
in
push
and
loop
push
aas
add
xchg
je
fisttpll
divb
sarb
mov
leave
mov
and
jb
negl
jnp
xor
movsl
push
mov
and
test
in
movsb
push
inc
lock
inc
lods
into
shll
dec
int3
icebp
and
pop
lcall
inc
pop
flds
popf
inc
into
in
fadd
incl
adc
xor
loopne
lea
mov
ja
shl
js
dec
inc
std
stc
push
insl
jg
push
int
xchg
jecxz
xor
cmp
loopne
jbe
test
push
lods
xchg
ds
aaa
enter
dec
adc
mov
jno
sbb
add
dec
inc
jge
outsb
filds
push
push
testl
into
sbb
popf
loop
dec
test
sti
xor
scas
mov
add
jbe
rcrb
leave
inc
out
mov
dec
jb
je
jmp
xchg
imul
je
aam
add
dec
jl
iret
mov
js
xchg
add
mov
sbb
pop
bound
nop
out
lock
mov
xchg
sahf
mov
inc
test
pop
or
cltd
or
shll
out
mov
pop
je
mov
lret
jp
jmp
or
sbb
fs
ja
sbbb
pop
adc
stos
mov
loop
dec
sti
imulb
push
movsl
inc
stos
or
pop
into
in
hlt
mov
push
sbb
adc
cs
mov
nop
fsubrp
push
idivl
pop
jnp
rol
push
or
sbb
ret
js
aas
mov
jmp
fisubs
movsb
and
dec
iret
inc
clc
das
fidivl
ret
int
arpl
and
jno
mov
jns
adc
pop
push
mov
xchg
pop
xor
pop
insb
mov
or
rcrb
xchg
and
jp
fnsave
fidivl
nop
jne
and
dec
pop
stc
cmp
es
cmpsb
test
dec
dec
mov
dec
xchg
push
mov
sarl
xor
sbb
jmp
rorb
popa
mov
jmp
outsb
stos
push
add
gs
pop
inc
nop
add
aam
fsubl
sub
inc
sbb
mov
out
icebp
fidivrl
bnd
push
shlb
sub
mov
aas
test
daa
lds
add
push
lods
fldl
xchg
jge
arpl
and
mov
pop
aaa
inc
add
sub
xchg
mov
int3
inc
jle
loopne
insl
xor
mov
sbbb
pushf
fdivs
imul
and
mov
push
test
mov
rcll
shll
dec
pusha
jmp
cltd
sbb
lock
and
cld
mov
mov
lock
mov
add
sub
add
out
movsl
push
ds
ds
clc
add
jns
inc
or
cmp
hlt
xchg
mov
insl
cmp
and
movsl
je
test
and
cli
and
inc
and
add
fwait
sbbl
ret
jmp
xchg
popf
rcll
nop
mov
test
pop
jns
cmp
scas
je
jne
add
dec
jmp
mov
mov
xor
rcrb
ret
notl
xchg
ljmp
les
mov
cmp
mov
xchg
loopne
test
jge
adc
je
loope
cmp
in
repnz
mov
mov
scas
push
pop
mov
cmpb
inc
dec
cs
loopne
sub
jge
jne
inc
pop
and
test
xor
and
jg
xchg
imul
xchg
sub
aam
in
stos
addr16
push
xchg
jae
xchg
xor
addl
jnp
mov
sbb
push
pop
adc
pop
mov
shll
pop
fcmovnb
push
sbb
es
lock
iret
std
pusha
and
test
sbb
sbb
cmp
ret
push
clc
in
shrb
hlt
xor
inc
jnp
mov
mov
dec
add
adc
ficompl
rolb
loop
or
pop
jne
in
jne
mov
mov
fldt
das
ret
sbb
es
mov
sub
inc
adc
xchg
dec
clc
or
and
in
mov
jb
in
ljmp
sti
ljmp
sub
insb
stos
mov
out
dec
jge
xor
ja
inc
xchg
das
pop
repnz
inc
dec
data16
mov
or
ljmp
mov
je
sahf
mov
jne
js
or
fidivrl
mov
je
mov
xchg
fs
add
repz
xchg
sub
pop
push
cmc
call
cmpsb
mov
inc
fcomip
xor
jg
or
ret
fwait
stos
inc
dec
jb
fsubs
into
icebp
bound
loope
movsb
and
sub
mov
sbb
push
hlt
pop
or
enter
push
iret
mov
fisubs
cli
xchg
sbb
push
push
cmp
shl
push
pop
mov
in
jg
mov
ljmp
cmp
dec
rclb
int
pop
xor
gs
dec
and
push
xor
repz
test
insb
cmp
repnz
inc
testl
jg
insl
fidivs
add
pop
fldl
popa
imul
adc
mov
pop
popf
pusha
lahf
jb
adc
mov
lods
and
jne
test
cmp
mov
movsl
xchg
data16
ss
jg
dec
pushf
adc
xorl
jg
in
hlt
jmp
or
add
sub
cltd
cltd
xlat
loopne
sbb
jnp
jb
addr16
iret
int3
lcall
pop
sbb
rorl
add
inc
mov
int3
testl
xchg
in
icebp
mov
repnz
arpl
cwtl
out
pop
sub
push
jo
mov
fisubs
xchg
repz
jmp
push
jnp
sbb
iret
popa
scas
inc
cmpsl
xchg
xchg
cltd
push
daa
sbb
mov
and
fbstp
cmp
cmpsb
xchg
jae
ret
mov
mov
das
push
lret
and
ret
sarl
jns
pop
and
pop
aaa
sub
sbb
xchg
mov
in
jnp
xor
dec
aad
sub
inc
hlt
xor
lret
mov
mov
push
jge
xor
iret
jns
add
out
dec
cli
imul
pop
movsb
lods
ss
loope
sbb
ja
and
xor
xor
jle
js
cmp
mov
pop
repz
inc
aad
adc
adc
push
mov
cltd
sbb
jae
mov
stc
cmc
mov
xchg
je
adcl
push
xchg
mov
pop
adc
sub
imul
mov
fidivrl
outsb
jae
arpl
pop
imul
inc
jo
notb
test
or
fs
add
adc
test
arpl
cltd
inc
insl
es
xrelease
push
pop
loopne
mov
mulps
xchg
lods
xor
jg
mov
sbb
pop
cmp
jne
and
cs
jo
push
sub
stc
cmp
pop
dec
aaa
imul
sahf
cmpsb
mov
in
dec
je
xor
xchg
inc
sbbb
sahf
mov
jbe
fcomi
and
mov
mov
inc
outsl
cmp
stos
dec
mov
xchg
adc
test
inc
ret
jmp
outsl
push
push
dec
scas
dec
or
je
call
adc
es
sub
orb
scas
cli
jno
mov
fiaddl
pusha
adc
imul
out
push
pop
cmp
clc
mov
mov
cli
mov
xchg
loop
inc
mov
adc
push
mov
jo
cmpsl
add
inc
outsb
inc
xor
out
xor
pop
jp
mov
cli
mov
loopne
xor
cli
and
xor
pop
shrl
es
sub
mov
lock
jbe
xchg
outsl
jl
and
push
pop
mov
cwtl
mov
add
lods
sub
pop
dec
xor
and
aaa
mov
or
dec
xlat
mov
pop
lods
loope
js
inc
jg
xchg
jge
stos
fstp
test
stos
ljmp
add
push
fs
xor
cs
push
sbb
and
fidivl
and
cmp
mov
and
or
sbb
mov
out
in
cltd
loope
rorl
mov
cmp
inc
push
push
dec
hlt
pop
data16
cmpsb
test
mov
xchg
mov
pop
or
das
mov
push
lds
jb
xchg
out
addr16
mov
xchg
dec
push
pop
cmp
movsl
and
repz
adc
mov
xlat
xor
rcll
imul
lret
mov
xchg
rcll
mov
dec
and
fwait
sub
adc
out
or
push
scas
sub
dec
adc
push
push
sub
data16
dec
scas
jle
inc
js
clc
mov
stos
mov
ja
inc
or
aaa
cmpsl
push
add
aam
pusha
sub
test
aam
mov
sub
or
es
inc
leave
sbb
sbb
and
pop
ss
sbbl
mov
cmp
push
addb
xor
xchg
in
jp
addr16
insb
std
sub
jge
and
adc
inc
inc
clc
repnz
roll
mov
addr16
je
push
push
inc
pop
imulb
jmp
sub
subb
out
cmp
fs
ds
lods
fisttpll
push
in
jae
cmp
adc
or
sbb
sbb
mov
mov
mov
push
jge
scas
outsb
enter
jecxz
or
xor
and
faddp
mov
or
vphaddubw
jecxz
push
repz
mov
mov
mov
sub
mov
cmp
inc
push
jmp
mov
pop
shr
fnstenv
cmp
loope
movsb
lea
add
and
fcmovb
jp
pop
icebp
cld
dec
sbbb
aad
ljmp
movsb
mov
mov
push
cmp
mulb
fmul
inc
scas
and
jle
jge
into
cmp
pop
addb
fnclex
stc
es
lahf
add
pop
and
lods
aas
loope
out
mov
sub
and
dec
inc
mov
mov
mov
mov
fbld
inc
add
rcr
add
jmp
and
movb
and
jno
sbb
arpl
dec
vpmaxub
stc
arpl
fbstp
in
jnp
enter
into
jmp
cwtl
ret
in
js
xor
xorb
loope
test
scas
sahf
sbb
pop
fcompl
xchg
leave
psrlq
lahf
push
dec
add
or
movsl
lcall
popf
out
test
pusha
inc
popf
in
push
xchg
pop
push
inc
push
test
js
cmp
mov
pop
inc
clc
mov
cmp
jae
sarl
adc
hlt
push
push
mov
fists
xchg
iret
cmp
mov
xchg
fsts
dec
xchg
dec
dec
lock
loope
sar
jecxz
and
push
mov
fbstp
shlb
clc
insb
xor
aas
jae
pop
insb
adc
push
xor
subl
in
mov
aad
dec
and
add
loop
sbb
ss
pop
fnstenv
mov
stc
mov
out
mov
pop
rcr
xor
or
mov
out
jo
popf
jnp
cmpsl
sub
or
pop
xor
test
sarl
mov
cltd
mov
add
test
nop
dec
addl
sar
in
loop
dec
pushf
out
xchg
xor
ret
push
jae
arpl
xor
mov
pop
lods
cmp
fstcw
add
int
scas
dec
dec
sbb
test
out
lcall
sub
test
mov
xchg
cld
cmp
sbb
jg
out
xchg
in
lock
mov
jp
pusha
jne
xorb
dec
inc
and
xor
push
popf
mov
pop
xchg
mov
dec
data16
mov
lods
lea
jg
add
dec
sub
add
insl
loopne
movsb
and
test
add
cmp
imul
dec
stc
push
cmp
pop
loop
iret
mull
sarb
xchg
xor
pop
fadd
es
ja
pop
das
pop
cltd
bnd
rorb
lret
cs
inc
and
icebp
fistpll
push
inc
sub
mov
xchg
out
xchg
jnp,pt
cmp
leave
adc
push
or
xchg
cwtl
ret
test
sbb
cmpl
dec
stos
ret
ds
ret
bound
faddl
or
adc
cmp
push
repnz
scas
enter
jp
pop
subb
push
aad
add
sub
add
or
mov
dec
inc
out
dec
popf
scas
jnp
jp
negb
push
mov
and
inc
jmp
and
push
mov
xor
jmp
imul
fcom
dec
daa
mov
xchg
or
push
pop
ljmp
ret
mov
mov
movsb
jbe
mov
pop
dec
pop
jb
jb
daa
mov
sbb
mov
cltd
push
add
inc
xorb
idiv
jb
lcall
inc
mov
adc
pop
hlt
jno
and
test
fnstenv
fstpl
in
jmp
dec
imul
repnz
mov
or
sbb
es
mov
stos
push
lea
adc
jp
lcall
sub
scas
out
xor
jl
pop
addl
inc
jb
or
jle
in
cltd
and
pop
or
xchg
test
popf
mov
jo
sub
call
and
dec
loopne
lods
cmpl
inc
js
cmpsl
mov
dec
add
cltd
add
dec
add
mov
rcl
cmpsl
out
push
mov
pop
loope
sub
or
or
ret
das
scas
sub
and
inc
xor
pop
fdivrl
pop
int
adc
cmpl
out
mov
stc
adc
sahf
and
xor
ficomps
inc
pop
mov
adc
and
mov
dec
add
xchg
leave
dec
popf
mov
push
lods
outsl
rcll
jnp
sub
shr
dec
das
dec
stos
mov
jg
fs
fdivrs
mov
pop
adc
push
cmp
inc
cwtl
fmull
scas
or
jg
pop
adc
sti
jmp
pslld
and
add
loopne,pt
std
dec
imull
xchg
cmp
lret
scas
leave
sbb
iret
xor
push
push
gs
xorb
and
and
sbb
outsb
out
mov
adc
popf
add
mov
fsubl
sub
jbe
sbb
ljmp
dec
fldenv
or
xor
push
mov
xchg
sub
testb
dec
and
in
pop
push
inc
data16
testb
andb
loope
mov
xchg
or
lea
inc
rcr
or
mov
test
pop
gs
lar
shll
add
push
lcall
mov
out
call
popa
and
lds
test
testl
mov
cmc
ret
cltd
mov
mov
std
push
sbb
or
outsb
xchg
xchg
sbb
inc
das
add
shlb
dec
out
cmp
dec
dec
int
pushf
aam
outsb
cli
rorb
adc
xchg
idiv
mov
xchg
and
mov
xchg
lahf
pop
cmc
std
jnp
add
pusha
cmp
mov
rclb
sub
fs
and
mov
lods
sbb
mov
call
lods
sub
outsb
dec
mov
repnz
mov
leave
jle
pusha
sti
add
loop
decb
jo
stc
cld
sbb
ret
xchg
add
repz
sbb
pop
push
leave
call
xor
ret
pop
jp
sti
sbb
fisubs
fimull
xchg
in
fs
dec
pop
sbb
sub
lret
xchg
xor
call
push
push
scas
sub
or
push
xor
adc
outsb
push
fisubl
inc
fldl2t
shlb
sbb
adc
xor
and
mov
dec
out
pop
into
cltd
mov
cmpsb
sahf
mov
pop
daa
jbe
fld
aad
jmp
negl
das
outsb
adc
cli
push
out
mov
pop
in
add
dec
mov
scas
cmp
ljmp
xchg
movsl
out
adc
xchg
mov
add
in
mov
dec
inc
out
arpl
xchg
cmp
shrb
pop
aam
inc
mov
push
pusha
jmp
insb
aam
xor
iret
mov
fucomip
rcll
add
movsb
pushf
cmp
rorl
pop
stos
addr16
or
pop
push
or
jmp
jp
loopne
fidivrl
pop
ret
jo
xlat
es
jecxz
add
xchg
inc
fisubs
and
pop
push
je
test
loopne
lods
jae
jecxz
push
xchg
add
xchg
test
sub
adc
or
and
cmc
and
pop
cmc
mov
cmp
call
insl
notb
aas
stos
into
xchg
add
pusha
sahf
sbbl
scas
mov
leave
or
push
xchg
daa
shl
in
lods
and
outsl
jbe
lods
subl
cmp
rclb
and
xchg
es
dec
mov
dec
xchg
icebp
jbe
or
mov
xor
pop
cmp
adc
outsb
bound
adc
data16
cmp
add
jbe
mov
into
mov
push
pop
pop
mov
dec
jne
mov
int
inc
mov
jno
imul
lods
sub
sti
insl
jmp
fisttpl
cmp
fwait
or
imul
int
mov
sbb
jmp
fisttpl
cmp
fwait
or
imul
lods
sub
sti
insl
jmp
fisttpl
cmp
fwait
in
jmp
pop
in
dec
mov
sbb
inc
neg
dec
mov
loop
bnd
int3
inc
cwtl
jae
arpl
test
mov
rorl
js
or
mov
fdivs
arpl
adc
and
xchg
pusha
jecxz
xchg
sbbl
sub
push
jae
arpl
xor
ret
jnp
or
jle
pop
int3
pop
and
popf
cwtl
xchg
popa
enter
push
ret
shlb
rclb
adc
xlat
sub
lret
into
sbb
pushf
and
adc
push
inc
cmpsb
mov
movsb
stos
xchg
outsb
sub
jl
mov
mov
add
pop
mov
pop
push
jecxz
dec
xchg
dec
movsl
imul
xor
out
xchg
enter
in
clc
adc
xor
repnz
or
sbb
test
and
sti
mov
and
mov
mov
jmp
ss
mov
aaa
inc
daa
stc
popf
out
repz
lret
imul
in
sub
adc
adc
pusha
sbbl
mov
clc
jae
arpl
adc
and
rorl
lock
inc
xchg
xor
divb
enter
test
cmc
je
inc
mov
int
sbb
dec
iret
ja
pop
xlat
push
or
add
jbe
addr16
pop
mov
cmp
sbb
dec
mov
cmp
test
push
les
cwtl
xor
ret
pop
repz
sbbl
sub
fdivs
arpl
adc
and
repz
sbbl
sub
mov
xchg
xor
pusha
out
or
les
lcall
out
aam
lods
jo
adc
push
ds
cmp
cmp
xor
arpl
ljmp
sub
sub
into
adc
dec
mov
scas
sub
xchg
iret
fnstcw
mov
pop
jnp
aaa
subb
int
mov
in
push
sub
mov
pop
mov
adc
and
mov
pop
cmp
adc
lahf
lods
pop
mov
outsl
dec
cltd
push
xor
xchg
xchg
lahf
mov
pop
dec
pushf
test
fildl
xchg
push
leave
xchg
and
in
cltd
and
dec
mov
fsub
pushf
rorl
add
lret
mov
rcl
loopne
dec
dec
mov
and
and
push
add
sbb
adc
mov
mov
push
mov
gs
add
loop
mov
mov
mov
orb
gs
lcall
push
adc
inc
adcb
call
lods
cmp
nop
scas
and
test
sub
add
shl
lcall
mov
or
ret
or
sub
stos
inc
out
fwait
mov
xchg
movsb
orl
test
test
xchg
push
cmp
mov
scas
push
repnz
mov
call
popf
add
stc
xor
adc
mov
lcall
iret
mov
xor
data16
adc
adc
or
mov
jno
jbe
clc
imul
fdivrl
fcomps
pop
mov
jb
imul
out
mov
pop
mov
daa
lcall
call
sub
test
mov
clc
in
sub
pop
mov
inc
insb
out
and
ret
sub
and
inc
add
dec
daa
mov
mov
pop
or
loopnew
jp
sbb
test
lock
xor
cwtl
mov
sbb
femms
in
outsl
rcrb
lea
fs
and
popw
mov
push
into
pop
jmp
cli
loopne,pt
cmp
xor
loop
lods
xor
jmp
movsb
xchg
lcall
mov
push
int
add
dec
lcall
sub
mov
pop
notl
fld
and
into
jl
sbb
sub
test
rcl
fcompl
jmp
jl
push
jne
testl
lea
pavgb
js
xlat
fcompl
repz
fldl
lahf
inc
aam
fistl
js
call
mov
lea
shr
mov
pop
jp
lret
push
hlt
roll
scas
and
xchg
jb
sbb
fcoms
dec
inc
xorb
sahf
and
outsb
in
bound
push
cmp
int3
fcomi
or
shll
popf
shr
insl
and
xchg
fwait
andb
scas
sbb
xlat
inc
ret
ftst
pop
das
out
repz
mov
cwtl
sahf
iret
xlat
xor
movsb
in
cmp
jns
or
xchg
test
out
add
mull
movsb
sbb
mov
outsb
add
clc
xchg
inc
rclb
dec
shlb
aaa
mov
call
xchg
or
lahf
and
push
and
jns
cmp
test
mov
les
jbe
add
in
add
daa
mov
inc
push
jp
test
mov
xor
xlat
jle
and
sti
sbb
mov
lods
jns
cmc
rcl
pop
nop
xchg
ret
lea
sub
je
ficoml
mov
scas
call
call
mov
jmp
addr16
inc
xchg
xor
mov
and
xchg
cli
mov
dec
imul
out
push
jne
push
fcmovne
inc
jae
dec
pop
push
daa
in
or
sbbl
cld
stc
lret
cmp
sbb
lret
rol
test
loopne
push
int3
add
push
jns
mov
pop
push
in
out
xor
fnstcw
test
add
mov
les
arpl
mov
dec
sar
xor
add
out
out
xchg
pusha
rcr
pushf
mov
pop
dec
jae
imul
leave
ja
enter
or
rcrb
cs
fldenv
sbb
adc
mov
stos
fwait
repnz
scas
fucomi
sti
jbe
push
loopne
sbb
pop
sbb
aaa
or
cmpb
adc
inc
call
int
stos
stc
xchg
ljmp
leave
bound
fucomp
imul
fcmovu
shll
pop
push
daa
xor
push
test
mov
lods
int3
repnz
xor
imul
push
mov
aad
call
out
std
popa
and
mov
sahf
mov
test
mov
popa
sub
lea
add
or
push
cmp
cmpsl
mov
daa
add
jns
add
fs
sub
dec
push
add
out
push
ljmp
sub
ds
cld
cld
je,pt
pop
add
sub
into
xor
pusha
push
dec
and
sub
notb
scas
les
xor
cld
mov
sub
pop
loopne
push
aaa
cmp
jle,pt
add
cmp
or
push
icebp
pop
cmpb
sbb
imul
mov
sbb
adc
aam
xchg
mov
xor
adcb
or
jmp
or
xor
cld
xor
pusha
and
pop
call
das
pop
ret
aad
fwait
imul
and
cmp
xchg
mov
in
sbb
xorl
add
ret
mov
cmpsl
inc
in
jmp
push
fsts
data16
jge
sbb
in
mov
in
push
pop
aaa
out
xchg
jae
fimuls
push
dec
and
add
shll
sub
notl
dec
jl
subl
and
outsb
mov
and
dec
bound
loop
lods
insb
jne
aas
or
inc
adc
fwait
jp
loope
dec
jns
bnd
pop
stos
jecxz
shrb
fwait
bound
mov
and
scas
repnz
sbb
push
pop
adc
xor
ret
stc
add
mov
andb
lds
adc
pop
inc
or
pop
fnsave
testb
cmp
loop
jb
xchg
sti
js
das
mov
xor
rolb
or
sbb
or
push
mov
lods
stos
sbb
xor
sbb
lea
fsubp
jnp
cmp
xlat
lods
pop
jb
mov
addr16
jge
mov
fmull
inc
lods
cli
sarl
xor
pop
mov
int3
pop
insb
sub
mov
cmp
xchg
jge
inc
outsl
je,pt
stc
fisubrs
jle
stc
cmpsb
insl
mov
fisttps
andl
mov
aam
pop
inc
mov
sub
mov
fwait
jmp
sbbl
mov
loope
ljmp
fistps
outsl
mov
dec
cwtl
dec
loop
shll
mov
cmp
mov
mov
jmp
and
imul
mov
xchg
pop
enter
pop
mov
mov
sub
adc
push
repnz
addr16
in
adcb
jns
lret
rorb
int3
cmp
jo
inc
data16
cs
dec
sarb
mov
int
adc
jg
xlat
cmp
in
mov
sub
mull
or
mov
insb
inc
mov
inc
loope
sub
fidivl
das
or
shl
icebp
fadd
push
fsubrl
mov
shll
pop
mov
sarb
mov
jmp
mov
mov
pop
xchg
jae
sahf
push
sub
adc
or
add
fidivs
push
adc
icebp
add
gs
pop
lock
mov
lods
out
js
loope
cmp
jp
mov
sub
dec
xchg
xchg
and
push
sub
inc
js
xchg
fsts
sub
mov
mov
inc
stc
and
sub
push
std
pop
adc
inc
or
repnz
adc
or
icebp
insl
push
rorb
bound
stos
sub
pop
inc
data16
cmc
adc
sbb
lret
inc
pop
sub
lret
mov
or
or
push
and
test
sbb
adc
mov
stos
cld
int
pop
mov
fwait
addr16
pop
mov
add
mov
outsb
mov
outsl
add
mov
pop
or
cmp
cmpsl
pop
mov
or
mov
fs
outsl
and
or
push
mov
pop
loop
xchg
stos
roll
or
movb
sti
jnp
and
sarb
xor
popa
adc
dec
out
mov
dec
sub
lret
mov
shll
inc
jge
ss
sbbl
xchg
xor
sbbb
icebp
int
movsb
add
das
insb
in
sub
loope
cmpl
in
pop
out
dec
adc
dec
sub
add
xchg
mov
mov
sbb
test
push
xor
negl
test
mov
das
pop
pop
mov
mul
xchg
out
jl
into
sbb
repz
clc
add
adc
pop
or
xchg
adcl
loopne
iret
fwait
and
mov
add
xchg
push
lods
cs
cld
insl
push
aam
test
adc
xchg
daa
push
or
mov
mov
ds
add
ja
rcrl
jo
mov
hlt
mov
add
push
mov
add
loopne
inc
js
subl
mov
bound
ja
test
clc
in
push
in
repnz
lock
bound
jb
gs
xor
rcl
or
cld
sbb
icebp
shl
fs
and
inc
mov
insb
push
shlb
and
mov
je
push
or
scas
pop
mov
test
pop
inc
std
jnp
adc
test
or
aam
inc
lods
out
jb
js
frstor
inc
inc
fdivrs
test
cld
cmp
cld
lock
xchg
xlat
into
push
dec
dec
dec
or
sbbb
test
sahf
lahf
push
iret
sbb
or
insl
pop
out
add
cmp
cs
pop
fnstenv
int3
fisttps
rolb
imul
adc
push
movsb
cmp
and
push
adc
xchg
adcl
popa
in
and
ja
mov
cltd
pop
xor
ss
out
aaa
sub
repz
add
inc
das
add
test
and
js
fldcw
lcall
pop
add
das
jae
stc
out
sarb
pushf
jnp
aaa
pop
pop
cmp
cmp
ja
inc
sti
aas
and
orl
cmpsl
dec
sub
add
cld
jb
mov
and
insl
or
add
shrb
loop
das
sti
sbb
sub
pop
cmp
clc
jo
out
jg
inc
out
add
pop
sbb
rcll
jg
jle
jmp
xor
popa
rclb
cmp
cmpsb
fwait
cmpsb
dec
mov
and
lcall
add
sub
or
add
mov
jns
scas
and
cmp
cmp
dec
cs
mov
dec
in
mov
mull
sbbb
cmp
fcoms
mov
lds
jo
call
sbb
and
mov
shll
pusha
push
mov
dec
lahf
cwtl
fstpt
in
scas
push
adc
test
jl
and
fs
jmp
or
sub
or
jns
jb
jl
js
popa
rclb
loop
gs
mov
push
imul
jno
and
arpl
sarl
les
loope
into
cmp
dec
cmpsl
jbe
outsl
xchg
insb
jnp
pop
lret
mov
adc
push
in
jae
imul
in
stc
hlt
push
mov
push
xchg
aad
ds
aad
xchg
push
hlt
jae
inc
gs
and
add
outsb
mov
out
or
fld1
movl
stc
sub
mov
inc
popa
push
test
jecxz
inc
hlt
dec
xchg
sbb
sub
aam
scas
pop
imul
xchg
adc
mov
sbb
sbb
call
jbe
shr
leave
mov
add
frstor
push
into
fucomip
mov
dec
xor
sti
xor
daa
mov
jp
xor
sub
addb
mov
fwait
andb
adc
pop
repz
pop
out
test
push
fs
jmp
mov
jb
lret
adc
mov
cwtl
popf
dec
stos
or
mov
lret
pop
movb
and
fwait
gs
test
push
fwait
nop
hlt
stc
test
mov
cmp
sbb
stos
fdivrl
aam
dec
aam
js
lahf
hlt
and
jno
mov
push
jle
ror
rcr
sbb
jge
add
or
xor
inc
mov
sub
push
mov
push
dec
test
int3
cmp
jmp
push
inc
int
inc
mov
repz
psllw
movsl
testb
stc
mov
jae
adc
dec
insb
imul
ret
test
cmp
xchg
cmpsl
sbb
lods
lods
cmpsb
idiv
xchg
movl
pop
add
xchg
mov
into
xlat
jmp
mov
test
lss
mov
push
xor
jae
fists
sbb
push
mov
push
cvtpi2ps
movl
xchg
sub
adc
add
cld
mov
sbb
in
push
cmp
push
int
xor
inc
ja
mov
adc
out
shrl
mov
mov
adc
jne
rcrl
jle
data16
sbb
roll
lods
stc
xor
leave
xchg
leave
sti
mov
incl
sub
daa
cmp
int
ret
sbb
cmpsb
mov
js
test
insb
mov
out
sub
push
int
outsb
push
fs
inc
jno
data16
dec
jge
stos
dec
dec
push
cmp
in
push
orl
mov
mov
inc
mov
push
push
outsl
loop
rolb
movsl
cmpsl
notl
cmp
dec
popa
mov
push
fdivl
loope
cwtl
sbb
xor
inc
inc
lret
mov
bnd
pmuludq
jb
cmp
out
cmc
push
dec
xchg
jbe
or
call
jae
add
test
sub
popa
xchg
adc
jp
hlt
ror
notb
dec
mov
xchg
and
ret
sbb
repnz
mov
inc
jbe
leave
in
sub
imul
ljmp
or
sub
into
xchg
lock
shlb
es
adc
in
out
add
mov
xchg
mov
sub
dec
sar
adc
fs
aad
cmp
fldl
or
xor
inc
mov
xchg
decl
push
mov
in
mov
stc
leave
gs
jno
gs
sbb
dec
add
addl
adc
mov
push
iret
sarb
xor
es
stos
in
jns
pop
aas
or
dec
nop
sti
mov
add
cmpsb
test
xchg
in
out
pop
cli
popa
jmp
mov
pushf
xor
test
mov
pop
ds
lcall
lods
bts
sub
sub
dec
and
adc
dec
mov
cmpb
xor
je
xchg
xlat
daa
xchg
mov
jle
call
daa
pop
inc
int3
icebp
sbb
addb
cmpsl
shl
fmuls
cmp
aad
jg
xchg
dec
push
dec
aas
jb
hlt
pop
fisttps
ja
jmp
lods
xchg
pop
lods
xor
cmpsl
inc
lcall
jge
lods
repz
bound
notb
push
lcall
push
pop
in
mov
jb
shll
test
xchg
out
adc
sbb
cmp
imull
aad
jge
cs
cmp
adc
and
sub
and
cld
sbb
rcrb
call
jae
adc
fidivrl
sbbl
push
inc
jecxz
mov
lcall
dec
cmc
xor
xchg
insb
les
jp
inc
lea
cmpsl
add
pushf
arpl
or
sarl
addr16
sbb
int3
rcrl
sahf
inc
out
test
push
hlt
add
iret
and
jbe
adc
addr16
leavew
cmpsl
xor
movsb
xor
inc
pop
sub
jl
clc
lock
adc
sbb
xor
mov
int
adc
lcall
cs
in
sahf
clc
jmp
cmp
and
fcoml
subl
out
mov
pop
loopne
out
pusha
cs
xchg
push
popf
mov
add
je
push
jbe
lds
cli
divb
hlt
mov
and
fs
fsts
mov
xchg
adc
push
mov
mov
mov
dec
lods
pop
lods
or
mov
or
or
stos
arpl
rcrb
stos
mull
sbb
js
add
xchg
imul
orl
xorl
jnp
movsb
mov
sbb
jg
mov
xor
xor
out
or
adc
pushf
dec
jp
test
lret
add
sbb
dec
push
cmp
mov
arpl
push
ljmp
push
and
push
inc
rcrb
push
inc
xor
sub
neg
push
enter
fists
mov
lret
mov
xchg
mov
mov
jg
rolb
repnz
imul
dec
sbb
pop
in
orl
into
jbe
cmp
cmpl
xchg
xlat
sub
mov
xchg
outsb
les
and
jp
insl
or
or
out
jp
pop
insb
add
pushf
sarb
icebp
xchg
add
xchg
and
and
xor
lods
int3
pop
stc
cli
fs
and
andb
pop
dec
xchg
fnsetpm(287
push
jo
cs
rcrb
cmp
repz
iret
repnz
adc
dec
fcompl
jge
insb
push
xchg
xchg
push
ss
ja
aad
je
mov
mov
test
test
dec
adc
js
sbb
es
leave
sbb
or
push
adcb
inc
outsl
in
in
inc
sti
aaa
fsub
jmp
rorl
jge
and
fsubl
cmc
pop
push
into
dec
pop
repnz
nop
les
and
push
out
cli
subl
lret
cmp
add
dec
pop
es
dec
adc
sub
or
icebp
loope
pop
inc
loop
out
fwait
sbb
jle
insl
andb
cmp
pop
movsl
adc
xor
xchg
push
imul
into
out
pushf
cs
rcr
jmp
sarl
jge
push
fiadds
push
xor
mov
insl
xorl
notb
les
cmpsb
pushf
inc
in
loop
mov
cmp
pop
repnz
adc
je
jb
sbb
fwait
add
movsl
push
inc
push
xchg
mov
sbb
imul
fimull
jno
fcoms
out
mov
das
mov
fwait
daa
or
test
sbb
inc
inc
outsb
pop
lahf
movsl
aam
adc
mov
ror
push
test
pusha
in
mull
or
mov
jle
inc
push
pop
push
ss
repz
push
inc
cli
pop
fwait
pop
xor
lea
mov
scas
xchg
add
sub
popf
push
jbe
jle
xor
lds
push
int3
jnp,pn
sahf
dec
xor
daa
cmpsl
mov
subl
xor
pop
ret
mov
mov
mov
adc
push
in
and
ret
ret
lods
out
imul
mov
dec
xchg
icebp
ret
cmp
inc
out
add
imul
pop
shl
push
int3
mov
call
fsincos
icebp
repnz
fcoms
fcomps
xor
faddl
dec
push
clc
xorb
push
jne
add
or
sbb
lock
jb
mov
and
push
movsl
pop
mov
mov
add
clc
inc
inc
or
inc
push
sbb
andl
push
lods
xchg
pop
imulb
test
loope
ja
mov
adc
iret
add
cmp
or
pop
scas
and
adc
pop
cltd
sbb
xchg
dec
stos
fs
scas
xchg
mov
push
push
into
add
test
gs
xlat
xlat
xlat
pop
mov
inc
mov
hlt
bnd
pop
std
push
mov
adc
je
add
sbb
sbb
pop
les
cltd
xchg
fcomps
mov
cwtl
xor
ret
pop
repz
sbbl
sub
fdivs
arpl
adc
and
repz
sbbl
sub
jae
arpl
adc
and
repz
sbbl
and
cmp
or
mov
xor
and
mov
repnz
push
or
push
pop
inc
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
mov
mov
lret
mov
or
pop
add
or
add
push
into
add
or
add
add
sbb
dec
add
add
xchg
sti
add
add
or
pop
add
adc
stos
add
add
add
xchg
jge
add
insb
add
add
add
add
add
add
add
cwtl
add
add
add
add
add
insb
add
add
add
rolb
add
add
add
add
add
pop
add
add
add
xchg
add
add
add
pop
add
add
add
cmp
dec
add
push
add
jne
nop
add
add
in
pop
add
add
add
insb
add
xchg
inc
add
add
add
fadds
push
add
add
add
add
add
add
push
add
add
add
xor
add
add
in
add
add
addl
sub
pop
add
add
add
add
add
and
add
add
add
add
sti
add
add
add
lret
add
add
mov
dec
add
add
add
add
or
lcall
add
sub
or
add
add
add
add
or
movsb
add
push
add
dec
add
imul
bound
mov
add
addl
add
add
pop
add
add
add
push
add
add
push
mov
push
add
add
pop
sbb
jno
adc
add
add
add
add
add
add
popa
add
add
dec
add
add
add
add
add
add
add
cwtl
add
add
add
push
add
loope
mov
jnp
mov
add
push
add
add
mov
dec
add
add
lea
inc
add
sbb
add
add
nop
add
add
add
add
cmp
popa
add
add
add
add
add
adc
add
add
add
add
add
add
push
add
dec
add
stos
add
add
add
inc
add
add
insb
add
xor
add
cwtl
add
adc
rolb
sti
add
add
add
add
add
add
add
add
in
str
add
pop
add
sahf
add
add
add
add
add
insb
add
cmp
add
fadds
sbb
cmp
popf
add
add
sbb
add
mov
push
add
add
dec
add
insb
add
add
add
add
add
add
lret
add
add
add
add
inc
add
add
pop
add
add
push
add
or
add
add
daa
add
add
add
push
add
xor
push
add
pushf
add
mov
dec
add
add
add
add
or
cmp
in
dec
add
dec
add
add
dec
add
and
mov
and
add
add
xor
add
add
add
add
push
mov
mov
setbe
cmc
mov
push
mov
pushf
adc
xchg
rcll
imul
iret
cltd
push
andl
fs
mov
stc
adc
aam
arpl
lds
fists
mov
nop
and
sbbb
fst
sbb
pusha
movsb
into
mov
sti
insb
sub
sub
lcall
inc
aad
sub
pop
inc
dec
mov
adc
inc
sarl
leave
mov
push
icebp
mov
out
push
pop
jbe
enter
and
lret
push
scas
lcall
sahf
cmp
sbb
aaa
inc
inc
cmp
aam
outsb
inc
fs
mov
mov
mov
out
mov
lret
insb
sub
add
movsb
gs
mov
js
adc
and
inc
adc
rclb
cwtl
ds
dec
or
jmp
or
aaa
aad
adc
mov
jge
movsb
ret
mov
lret
ficompl
or
xchg
xchg
scas
adc
pop
call
inc
movsb
pop
notl
ss
pop
add
mov
loope
xlat
jge
mov
cld
fstpl
xor
mov
test
push
lods
lods
push
xor
inc
cwtl
mov
shl
mov
pushf
fsts
cmp
inc
push
sarb
cld
fdiv
stos
repz
cmp
cmp
aad
cmp
mov
hlt
mov
lcall
cmpsb
or
pushf
scas
mov
dec
push
mov
sub
test
xor
jg
aas
in
idivl
sbb
lret
sti
inc
insl
sub
in
inc
cmp
in
gs
adc
cmc
or
test
stos
adc
sbb
xlat
jb
mov
lods
jne
mov
xchg
mov
or
in
mov
xchg
push
push
push
lahf
xchg
mov
rolb
add
loop
mov
xchg
xchg
scas
mov
cmp
sbb
call
xchg
fdivl
psrld
mov
jmp
jp
add
std
mov
fdiv
cmp
mov
push
das
inc
pop
xlat
scas
mov
das
fldl
sbb
push
sbb
popf
fsts
fdivl
test
pop
shr
popf
ret
data16
jns
cmpsl
std
repz
loop
pop
subb
pop
cmp
jbe
xchg
mov
popa
jb
pop
fldt
pop
xor
push
out
cmp
add
jg
jnp
push
cmp
sub
dec
cmpsb
sub
and
lcall
and
loop
imul
inc
sbb
jg
je
xor
pop
xchg
jae
in
push
hlt
inc
adc
adc
or
outsl
dec
cld
inc
in
or
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
