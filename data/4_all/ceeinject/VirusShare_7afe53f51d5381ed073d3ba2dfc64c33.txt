call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
xor
aam
les
and
fs
push
test
in
aad
lds
aam
les
movsb
push
xchg
inc
cld
mov
movsl
fs
push
test
in
aad
lds
aam
les
movsb
push
xchg
inc
test
es
cmc
pusha
xchg
jae
jp
ja
xchg
mov
xor
jge
mov
lahf
popf
cmpb
outsb
xor
lahf
sbbb
fisubrl
clc
inc
jne
and
add
fwait
imul
mov
adc
push
lret
jmp
and
rorl
and
adc
and
push
xchg
lds
cld
add
or
inc
jp
mov
fwait
je
jp
movsl
xor
fisubrl
andb
mov
movsb
mov
lods
sub
stos
push
inc
movsl
addr16
adc
cli
or
imul
mov
insb
icebp
pushf
push
shl
loopne
lods
out
push
adc
ja
adc
adc
hlt
and
les
movsb
push
xchg
inc
test
push
test
in
aad
lds
lock
movsl
push
aam
les
rorl
int
rol
rol
or
shlb
ja
inc
mov
mov
inc
xchg
push
xorl
cs
aas
ret
pop
test
add
and
push
mov
lods
push
cmpsb
pusha
mov
push
xchg
inc
test
push
test
in
aad
lds
aam
les
movsb
push
xchg
inc
test
push
test
in
aad
lds
cmp
movsl
rclb
push
popf
jbe
stos
adc
and
ljmp
fs
cmp
cwtl
repz
adc
cmp
mov
inc
pop
jl
xor
sbb
xchg
stos
mov
enter
dec
fstps
lods
push
inc
mov
cmpsl
jns
popa
inc
mov
push
adc
fwait
mov
or
sub
jo
fucomp
call
cld
adc
cli
lahf
test
mov
mov
fstp
cs
outsl
mov
das
ret
sub
adc
push
lock
add
sub
pop
daa
add
mov
and
aam
aas
je
rcrl
sti
add
mov
js
das
dec
inc
pop
inc
aad
mov
fistpl
in
jno
jno
push
jno
and
cmp
es
jmp
xchg
jb
mov
cmpsl
loope
movsl
cmpsl
jbe
mov
sub
frndint
popf
aaa
cmp
xchg
mov
sbb
mov
jae
cmpsl
jmp
lahf
popw
lret
mov
popl
movsb
cmp
hlt
xchg
js
cmp
jmp
clc
xchg
in
pop
add
adc
push
sub
mov
push
popf
subb
stos
and
mov
pushw
fwait
sbb
cltd
cli
mov
iret
adc
es
jmp
mov
push
out
mov
test
lcall
inc
mov
faddl
fsubl
out
push
mov
jno
cmp
movsl
cmpsl
xchg
out
xchg
xchg
add
das
loope
out
xor
or
lea
fdivl
bound
int
sbb
outsl
mov
aam
cwtl
pushf
cld
sbb
mov
lret
stc
push
mov
andl
lahf
push
divl
sti
and
lcall
outsb
add
add
pop
fs
aaa
daa
imul
inc
and
jg
ja
icebp
inc
add
push
push
jns
pop
leave
and
sbb
in
mov
nop
push
jecxz
adc
stos
push
jl
push
testl
dec
ds
dec
aam
ds
scas
std
rcrl
mov
adc
cmp
es
cwtl
jns
xchg
sarl
xchg
loope
mov
xor
shl
aad
push
gs
jbe
jae
xchg
xor
inc
add
in
ja
lea
leave
out
pop
pop
es
icebp
pop
or
pop
call
bound
add
cltd
add
rcl
jmp
pop
dec
mov
into
nop
shll
dec
popf
sbb
mov
sub
ljmp
lods
cmp
mov
or
lods
xchg
jb
mull
adc
mov
xor
jecxz
outsb
fisubl
inc
push
mov
jl
shlb
faddp
shll
jno
int
je
movsb
xchg
clc
loope
jmp
hlt
pusha
repnz
sbb
dec
gs
outsb
dec
roll
arpl
inc
pushf
enter
xlat
jnp
ss
xor
subl
mov
xor
jmp
mov
mov
inc
call
pop
addr16
jge
cmp
fldt
pop
jo
and
shrl
lret
mov
and
ret
jo
insb
scas
cmp
mov
mov
sub
xor
cmp
lds
ss
lock
dec
popa
push
adc
cmp
sahf
cld
sub
mov
in
push
data16
pusha
push
sbb
test
adc
mov
daa
in
mov
add
jl
lock
cli
inc
nop
movsl
jecxz
fwait
xor
xor
arpl
fst
inc
jb
pop
mov
sub
xlat
lock
cmp
mov
mov
xchg
fldenv
inc
cmp
mov
sbb
pop
repz
pop
jl
loopne
mov
mov
jbe
in
cwtl
cmp
repnz
pop
in
adc
addb
lock
inc
out
jecxz
fsts
ds
mov
inc
scas
or
lahf
adc
aaa
fists
pop
shll
in
sub
push
jg
push
mov
insl
sub
lcall
or
add
jnp
xchg
xor
dec
push
xchg
lret
cs
or
es
cmp
adc
cmp
pop
out
jg
icebp
cmp
int
rcl
rorl
pop
cli
add
or
in
movsl
add
sub
xchg
mov
or
imul
push
pop
mov
bound
nop
xchg
stos
std
bound
sub
xchg
and
mov
or
xchg
dec
loopne
mov
out
lods
or
ljmp
mov
rcl
call
hlt
std
int3
and
lret
xchg
mov
shll
push
sbb
into
hlt
lock
negl
and
mov
jnp
enter
mov
mov
inc
push
shrb
pop
nop
mov
lds
scas
repz
mov
leave
cmp
dec
mov
xor
stos
or
lds
and
mov
out
pusha
in
mov
adc
pop
adc
hlt
mov
mov
add
inc
shrl
cmp
mov
push
pop
repnz
loopne
cmp
sbb
test
sbb
jb
ljmp
fadds
xchg
sub
cmp
dec
sub
aas
adc
loopne
ret
out
shrb
inc
fwait
leave
mov
jle
gs
add
hlt
leave
xchg
stos
cltd
xchg
nop
std
imul
xor
repnz
jmp
pusha
fisttpll
mov
cmp
test
mov
add
les
scas
ficompl
lcall
xor
lods
popa
pusha
flds
nop
mov
call
aad
jmp
stos
pop
push
leave
dec
push
inc
ja
add
inc
inc
clc
push
mov
mov
mov
mov
cmpsl
ret
scas
rclb
sub
int
shl
and
sub
cmp
jg
mov
out
cmp
sbb
push
imul
fstps
jg
hlt
sbb
roll
movsb
pop
jae
insl
lahf
cmpsl
out
lret
inc
jne
fisttpl
cltd
push
add
insl
movb
mov
subb
cli
mov
in
cmc
mov
sub
icebp
je
mov
std
movb
pop
add
mov
iret
jno
mov
addr16
mov
adc
xor
jne
notb
ss
inc
jge
lret
jne
pushl
dec
inc
fs
jecxz
fidivl
mov
js
sbb
int3
and
iret
or
inc
push
nop
add
jecxz
fwait
jecxz
mov
pusha
pop
add
in
fnsetpm(287
int3
sbb
dec
mov
fstps
ja
and
and
or
outsl
inc
insb
inc
test
xchg
cmp
ror
insl
sub
jo
insl
in
popf
scas
and
pop
enter
dec
fsubrl
inc
into
outsb
rcr
pushf
fistl
xchg
sti
pop
jecxz
push
ja
js
or
in
loop
push
cld
push
jae
mov
or
dec
pop
in
xor
mov
gs
jp
dec
repz
sub
icebp
adc
mov
leave
push
cmpsb
lods
jae
mov
mov
shll
insb
fisubs
int
dec
sti
push
fbld
filds
in
ucomiss
sub
push
push
push
insl
inc
mov
push
add
cmp
and
in
sub
inc
mov
test
aad
push
inc
leave
fcom
inc
add
inc
add
xchg
leave
pop
jns
sub
mov
pushf
push
mov
int
test
fnstsw
rcrl
cs
and
aaa
xchg
iret
loop
ret
rclb
sti
mov
mov
aas
mov
inc
inc
xor
mov
loopne
lods
push
push
inc
cltd
ret
jge
aam
add
and
sub
sbb
insb
pop
and
sbb
sbb
bound
clc
push
xor
push
fxch
pop
mov
inc
pop
mov
add
inc
ret
cs
add
frstor
and
popa
cmp
test
xlat
push
xchg
dec
add
jbe
mov
dec
or
cmpsl
mov
inc
inc
pop
mov
cld
inc
mov
imul
cld
push
lret
outsl
cltd
lahf
dec
sahf
lods
movsb
add
in
repnz
push
sbb
xor
inc
push
insl
mov
mov
pop
jne
cmpsb
push
rorl
or
mulb
jo
lahf
mov
pop
push
sbb
mov
movsl
xchg
adc
in
dec
mov
mov
dec
jo
les
imul
pop
push
dec
xchg
sub
mov
jbe
sub
xchg
mov
dec
in
insl
lods
cld
scas
adc
mov
pop
jne
adcl
xchg
jmp
stos
mov
aad
sub
shlb
scas
in
popa
dec
and
cmp
pop
lret
addr16
pop
into
test
cmp
sbb
ret
sub
inc
fstpt
lea
push
int
in
mov
cwtl
push
outsl
cli
aas
stos
ljmp
outsb
pop
and
pop
je
jb
xor
jns
push
out
lret
pop
mov
aas
sub
push
xchg
sub
push
dec
jo
jg
add
push
xchg
cmpsl
push
jle
jnp
mov
pushf
xlat
clc
call
popa
or
stc
ret
outsl
sbb
mov
lahf
mov
xchg
cmp
out
or
mov
enter
xor
faddl
fmull
pop
xchg
sbb
rcll
ljmp
popa
cmpsb
mov
cld
xor
mov
cltd
xchg
pop
sbb
and
orl
lock
into
fisttps
or
cmp
cmc
sub
mov
xor
data16
mov
aaa
cltd
xchg
xchg
push
lods
push
xor
xchg
lds
pusha
in
orb
lret
cwtl
arpl
out
ret
jp
adc
sbb
jp
jecxz
add
mov
cmpsb
adc
dec
dec
clc
cmc
and
xor
dec
pop
pushf
dec
mov
lahf
into
inc
lcall
pop
lds
repz
and
inc
cmpsl
xorb
aaa
mov
idivb
inc
shrl
jge
sbb
xchg
dec
push
push
fwait
pop
pusha
dec
or
lods
lcall
mov
aas
xor
stos
test
xchg
insl
push
mov
subb
sarl
cli
lret
ret
mov
mov
xchg
rcrb
outsb
test
mov
adc
push
xor
jmp
daa
orl
fstpt
cwtl
xor
lahf
fbld
xchg
rcrl
adc
pop
cld
mov
outsl
aam
xor
jp
push
testl
subb
mov
inc
in
mov
xchg
push
cmpsl
jbe
aas
adc
lahf
xlat
std
aas
inc
test
pop
cmpsl
in
xchg
xchg
inc
jno
cmp
push
bound
sub
subl
inc
cmpsl
fsubrl
pop
outsl
not
or
jge
inc
cli
shl
xchg
stos
jae
sbb
bound
push
data16
sub
or
dec
ds
pop
inc
sbbl
xlat
inc
int
mov
jno
rorl
inc
push
mov
mov
sub
jecxz
xor
xor
inc
popa
fstpl
insb
fmuls
pushf
dec
cltd
pop
inc
cmpsb
add
adc
sub
lcall
add
push
mov
imul
dec
iret
or
mov
jns
sahf
pusha
popa
int3
cmc
jg
cmp
data16
outsb
lahf
mov
adc
sahf
jp
bound
into
lret
push
add
loopne
js
aas
sub
cs
xor
jl
stos
adc
mov
push
call
popa
addr16
adc
jp
mov
insl
in
cmc
test
mov
inc
cmp
inc
adc
je
lods
pop
mov
out
mov
xchg
shrl
cmp
mov
repnz
pop
mov
sbb
fisttpl
sbb
bound
push
es
jnp
out
lods
fnsave
or
pop
insl
pop
cwtl
shrl
jnp
into
clc
push
insb
lock
jo
add
dec
mov
loopne
xor
in
mov
inc
and
push
mov
mov
fldl
icebp
xchg
jmp
xor
xor
movsl
stos
jno
adc
iret
fdivrl
cmc
jae
popa
cmp
fwait
mov
lds
add
cmp
jne
mov
jl
inc
adc
jbe
cld
lock
mulb
sbb
fsts
mov
call
and
leave
xor
add
mov
xor
nop
pushf
lcall
sbb
imul
dec
xchg
pop
cld
pop
cmp
jmp
out
sahf
lahf
and
addr16
mov
mov
aam
pop
jo
sub
jl
xor
mov
stos
cmp
imul
jb
sbb
iret
pop
jl
cld
push
sub
clc
xlat
push
pop
hlt
lods
jl
out
push
push
insb
push
ret
mov
jmp
lcall
mov
pop
arpl
call
lock
add
testb
scas
in
lcall
jecxz
xlat
push
xchg
pop
in
into
hlt
int
and
xchg
mov
in
in
stos
cmpb
mov
scas
cld
pop
jne
rorb
pop
and
jnp
mov
push
cmp
cmp
sub
adc
fdivl
or
aas
cmp
cmp
mov
je
mov
repnz
inc
or
fidivrl
mov
scas
adc
or
mov
mov
and
pushf
arpl
rcll
xchg
fcompl
cwtl
inc
int3
cmp
inc
out
test
jle
mov
inc
pop
je
and
add
addr16
mov
or
xchg
ds
movsb
xor
xorb
sub
and
js
push
mov
mov
xor
js
or
jbe
dec
sahf
popa
xchg
or
inc
push
xchg
push
std
dec
rorb
fwait
or
stc
inc
cmpsl
clc
fwait
enter
out
mov
push
enter
aam
in
addb
mov
inc
jmp
pop
mov
mov
or
jmp
pop
cmp
pop
mov
mov
mov
sbb
jne
enter
mov
mov
xchg
imul
repz
out
ja
jp
xchg
lods
lret
jge
dec
jmp
cmp
movsl
sbb
iret
push
ret
lcall
jp
push
rcl
add
mov
iret
jmp
inc
add
adc
add
push
fs
fiaddl
push
rolb
lds
scas
or
movsb
inc
mov
shrb
push
mov
fdivrs
push
jecxz
outsl
popa
pop
fmull
test
in
push
std
or
je
xor
sub
mov
mov
pop
push
sub
mov
adc
jbe
jl
rclb
sahf
lock
sub
int3
loope
cld
sbbl
jl
push
mov
inc
mov
faddl
test
dec
lds
mov
cmp
cld
jo
mov
jo
inc
sub
rclb
xchg
xchg
adc
scas
mov
mov
jns
push
cmp
mov
xor
arpl
stos
lahf
scas
ret
add
sti
jmp
call
sbb
cmp
js
loopne
pop
sbb
xchg
xor
xchg
test
rcrb
ret
xor
aad
pop
xchg
out
and
push
add
int3
and
jae
movsb
lock
cld
push
cmp
daa
push
pop
pop
inc
icebp
fmull
arpl
lock
in
into
jo
sbbb
sti
sbb
or
fsubl
cli
test
push
mov
mov
or
jl
shrl
lcall
loope
stc
clc
jns
inc
xchg
sbb
fcmovnb
mov
xchg
loope
xorb
add
jne
dec
push
mov
inc
int3
pop
popa
inc
xor
sub
mov
movsb
lcall
gs
loopne
push
add
cltd
pop
and
mov
mov
movsb
push
cs
jns
cmp
push
add
jne
jl
adc
jp
pop
jg
push
pop
lcall
sub
test
jp
mov
pusha
popf
test
mov
sub
lcall
adc
roll
popf
adc
aaa
inc
int3
lret
mov
popf
mov
cmp
push
decl
std
je
mov
or
sub
and
leave
add
testl
dec
fucom
mov
mov
mov
mov
mov
mov
cmpsb
fcoms
xchg
jle
xor
aad
out
xchg
inc
push
imul
repnz
fs
adc
adc
or
nop
xchg
cmp
jge
inc
loopne
into
mov
leave
push
pop
sbb
testb
ja
repz
dec
cmpsb
movsl
aam
push
xorl
cmp
imul
xor
leave
xor
lods
int3
mov
cmp
lds
sub
xor
lcall
dec
pop
and
inc
lcall
je
sbb
jo
add
lret
xor
fildl
pop
lds
test
data16
outsl
in
jle
dec
mov
enter
ja
and
jne
dec
clc
sub
call
nop
jp
out
fs
addr16
pushf
pusha
adc
xorb
fisttps
adc
test
cld
imul
mov
sub
arpl
shl
out
mov
pop
daa
xor
jae
insb
es
push
je
loopne
xlat
loope
in
push
xchg
mov
mov
rcll
or
cmp
sbb
mov
add
lock
roll
aam
stos
cld
xor
inc
out
bound
or
pop
push
add
push
mov
dec
mov
loopne
inc
inc
xor
pop
addr16
out
xlat
lret
jnp
mov
sub
nop
rorb
aad
in
jp
xchg
fiaddl
adc
lock
and
pop
rolb
mov
mov
mov
inc
outsl
rolb
push
loope
xchg
call
mov
pop
mov
addr16
out
pop
addl
imul
icebp
fadds
rcll
aam
lahf
add
jbe
adc
ret
sub
ds
mov
xor
and
adc
dec
add
and
lcall
push
enter
ss
cmp
mov
mov
aas
mov
xchg
aaa
repz
lods
fidivrs
popa
out
repnz
cmp
jno,pn
fidivrl
push
xchg
lea
cmp
shr
popa
data16
mov
jno
test
out
xchg
cmp
negb
or
das
jg
mov
popa
xchg
sahf
adc
in
jle
push
stos
mov
loop
mov
leave
roll
lret
out
add
movsb
popa
sub
push
cmp
loopne
fadds
in
stos
jge
int
xor
mov
js
pop
and
push
sti
mov
mov
popf
movb
out
scas
pop
push
cmp
mov
push
aaa
bound
xchg
pushf
mov
inc
add
dec
cmc
fwait
mov
out
dec
test
mov
sar
iret
and
mov
pop
hlt
xchg
add
mov
int
lcall
movsb
test
jle
lahf
xor
lcall
jne
es
sti
pop
out
mov
dec
adc
jne
push
mov
add
sahf
cmc
imul
mov
jns
inc
mov
fcmovnu
adcb
push
pop
pop
mov
pusha
pop
add
stc
testb
cmpsb
movsl
movsl
pop
repnz
repz
outsl
mov
mov
shrb
divl
push
jecxz
std
scas
xchg
pop
mov
sarb
pop
sbb
lods
cmp
add
sar
pop
jns
jge
arpl
cld
inc
out
out
sbb
push
orb
xchg
mov
fs
stc
xchg
mov
mov
cmc
and
out
mov
pop
notb
out
imul
sbb
cmp
jp
push
xchg
cmp
inc
in
pop
nop
xchg
and
sbb
ret
cmp
loope
inc
je
sbb
pusha
add
mov
test
bound
jl
mov
and
stos
shll
sub
hlt
dec
and
ds
push
jb
pop
je
gs
out
repnz
jg
cltd
xchg
aam
shrb
jecxz
test
mov
cmpsl
das
sbb
test
cmpsb
test
gs
and
pop
cmp
sbb
cmp
adc
pop
adc
jnp
mov
in
movsb
inc
int
mov
jb
cmpsl
fildl
popf
lds
add
rcr
cmp
shlb
int3
decl
mov
lods
shll
shrl
daa
test
cli
mov
xchg
out
mov
lds
sub
inc
aaa
cmp
mov
popf
pop
into
mov
and
or
inc
je
lods
test
dec
rclb
inc
jb
movsb
cld
sub
loop
adc
les
movsb
push
xchg
inc
test
push
test
in
aad
lds
aam
les
movsb
push
xchg
inc
test
push
test
in
aad
lds
aam
les
movsb
push
xchg
inc
test
test
in
aam
lds
aam
les
movsb
aad
lds
push
test
cmpb
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
insl
jns
sub
loopne
dec
dec
arpl
cld
out
in
fmul
lods
mov
popf
lea
jge
dec
pop
pop
dec
sub
sbb
std
in
int
insl
xchg
mov
lea
jge
dec
pop
cmp
pop
sbb
into
mov
out
ror
clc
out
repz
dec
push
xor
in
mov
push
sahf
in
mov
adc
es
bound
scas
adc
mov
cmpsb
repz
repnz
js
xor
and
ficoml
adc
cmp
add
mov
xchg
inc
push
in
cld
test
xor
dec
rclb
popf
dec
insl
jge
insl
daa
pop
pop
dec
or
sub
pusha
js
or
push
test
and
bound
nop
lods
mov
cmp
icebp
add
cmp
inc
mov
nop
addb
out
jb
fiadds
scas
or
cmpsl
std
aad
call
mov
sub
sub
sbb
std
inc
int
lods
cmpl
add
xor
sub
push
cwtl
popf
int
movsl
scas
lods
cli
mov
in
cmp
sub
xor
sub
je
mov
std
lods
repnz
or
jge
and
xor
popa
jno
sub
in
std
std
in
int
lods
mov
popf
lea
jge
dec
pop
pop
dec
sub
sbb
std
in
int
lods
mov
popf
lea
pop
cmp
and
rcrl
and
mov
xor
dec
in
sub
push
pop
lds
je
insb
mov
pop
repnz
inc
das
mov
aad
xchg
inc
adc
adc
mov
fwait
jno
jp
push
push
push
inc
cwtl
sarb
sbb
xor
aas
stc
mov
lock
fisttps
scas
outsl
jae
xor
test
dec
push
aaa
iret
mov
push
mov
xchg
add
ret
or
push
insl
sub
insl
out
mov
popf
movsl
jmp
out
sub
test
out
jb
dec
popa
rorl
pop
pop
pushf
push
rorl
lcall
adc
mov
out
xor
fst
call
clc
sub
mov
xor
js
mov
jecxz
daa
add
inc
mov
aaa
dec
cmpsl
mov
sti
inc
call
outsl
into
jle
mov
cmp
inc
loope
fwait
dec
inc
cmp
fwait
mov
xchg
out
dec
pop
ss
arpl
outsl
cmp
push
sarb
mov
sub
pop
xchg
inc
lret
dec
cs
shll
icebp
lea
loope
or
das
sub
cmp
jae
sti
dec
mov
fisubrs
dec
clc
iret
mov
or
xchg
test
loope
daa
movsl
xchg
cs
push
jecxz
dec
adc
cmp
push
stos
out
and
rol
cmpsb
out
pop
inc
inc
jnp
mov
adc
jo
aam
mov
lea
test
in
add
aad
popa
pop
cmp
mov
pop
call
xor
pop
sub
cmp
shrb
inc
push
fldz
cs
cmp
sbb
xchg
sub
inc
mov
push
jns
cs
push
or
lcall
or
testl
mov
mov
add
jne
xchg
leave
hlt
repnz
cltd
pop
dec
mov
mov
loope
addr16
jmp
repz
daa
out
out
sahf
push
dec
aas
jl
mov
fs
cmp
jp
pop
mov
push
pop
xor
sbb
cmpsb
ja
pop
gs
ds
lock
call
je
push
xchg
mov
test
in
test
mov
push
pop
stos
fistl
call
or
mov
mov
lock
and
pop
sbb
cmp
fld
call
js
fdivrs
fidivrl
aaa
sti
xchg
mov
dec
xor
add
int
jnp
pop
rcpps
and
call
subb
add
cltd
adc
out
aas
arpl
int
imulb
inc
addr16
lret
xchg
dec
scas
and
insb
jle
aam
push
xor
flds
pushf
push
push
xchg
ret
insb
xor
addr16
les
dec
addb
xchg
std
jp
inc
adc
loopne
mov
popa
sahf
mov
lcall
xor
sbb
fdivs
pushf
data16
test
pop
cmc
push
stos
jnp
jns
inc
dec
popf
mov
add
rcrb
negl
xchg
xchg
out
cmc
dec
add
das
pop
out
or
dec
fnstcw
push
jmp
in
lret
cmp
in
xchg
stos
mov
add
push
add
cli
dec
lock
hlt
xchg
sbb
pop
pop
in
lcall
mov
push
aad
negl
imul
int
push
cmp
sbb
in
aad
dec
fcmovbe
pushf
in
daa
xchg
and
push
add
mov
decl
int
mov
mov
sbb
test
dec
stc
fmuls
push
mov
push
test
pop
pop
pop
adc
in
mov
adc
sub
mov
jle
aam
sbb
and
xor
jnp
std
push
fiaddl
dec
das
pusha
xchg
movsb
addb
ret
mov
lods
movsb
mov
mov
mov
testl
enter
out
jbe
inc
mov
pop
sub
call
movb
das
push
mov
popf
sti
inc
shlb
adc
es
or
mov
jp
dec
push
aas
or
icebp
push
sbb
pop
add
pop
hlt
loopne
cmp
inc
xchg
repnz
test
sar
ficompl
add
add
scas
mov
mov
ret
repnz
out
arpl
sub
dec
movsb
ret
repnz
sbb
xchg
pop
into
mov
fistps
mov
or
cmpsl
mov
stos
sbb
sar
xor
rcrb
shrl
pushl
pop
lahf
pop
leave
mov
adc
pop
fwait
imul
int
les
sbb
pop
xchg
pop
sub
and
or
pop
aad
js
in
add
sub
xor
pop
cmp
dec
in
and
sbb
xor
lea
and
sub
pop
and
fnstenv
jp
cmp
in
out
dec
inc
js
daa
stos
out
mov
dec
and
test
sub
pop
icebp
add
inc
orl
ds
std
jae
fistpl
pop
scas
mov
inc
cmp
sub
fiadds
cmc
fistpll
aaa
mov
ret
sbb
in
mov
in
call
and
sarl
scas
rclb
inc
test
shrl
xor
movb
out
data16
push
push
rorb
or
push
or
ficompl
cwtl
cmpsb
xchg
inc
jge
push
xchg
xchg
jg
add
and
in
mov
scas
jnp
mov
or
or
test
es
movsb
jg
jmp
stc
jmp
iret
mov
jl
andl
cmp
fprem1
ss
into
jl
fdivl
cli
sub
or
cmp
add
fcoms
pop
pop
int
add
mov
inc
sbb
mov
xchg
js
fwait
daa
ret
add
enter
sbb
dec
sbb
test
outsb
jmp
cmpb
ljmp
scas
hlt
in
lea
fisttpl
jp
xor
cmp
cmp
xor
out
mov
inc
or
sub
pop
pusha
ret
fsubs
fwait
push
or
push
and
or
dec
shl
cld
out
popf
mov
pop
jmp
mov
inc
mov
out
cmp
cld
int
lods
jne
xchg
stos
cmp
repz
cmp
xor
mov
lcall
mov
add
mov
clc
jo
cmpsb
jb
mov
inc
lret
mov
xor
mov
pop
mov
mov
std
addr16
pop
add
leave
lahf
psllq
sbb
mov
mov
mov
cltd
mov
outsl
cmp
push
dec
in
leave
aaa
and
pop
es
adc
cld
popa
in
push
lods
mov
cmp
and
pushf
jmp
ljmp
stos
pop
jle
sbb
push
cmp
sti
loop
add
add
cmc
nop
fistpll
pushf
lret
xor
je
testl
mov
dec
sbb
out
cmp
andb
hlt
arpl
dec
ret
cmpsb
sbb
jae
mov
in
loop
je
dec
stos
add
xor
cmpsb
inc
xchg
jmp
in
cmp
push
mov
psraw
push
sub
inc
cmp
dec
lods
pop
stos
add
sbb
std
out
or
rclb
lods
popa
lds
pop
subb
das
je
mov
js
in
faddp
jb
mov
jg
fiaddl
pop
and
pop
inc
pop
jae
repnz
mov
gs
bound
in
out
jb
mov
ds
jo
jns
sub
jne
loop
lods
jnp
add
jnp
shll
push
mov
add
and
mov
dec
xchg
mov
arpl
push
loope
dec
ficoml
fs
mov
pop
and
push
cmp
ret
lods
or
mull
cld
or
xchg
lods
cmp
cmc
mov
push
js
sti
mov
dec
and
addb
mov
sub
mov
mov
lret
or
int3
out
repnz
xorb
ret
lret
fmul
int3
loopne
adc
push
cwtl
aad
jb
loopne
sub
gs
lret
addr16
sub
ffree
mov
or
popa
mov
sub
mov
jl
mov
push
or
jl
scas
ret
pushf
xchg
inc
bound
xchg
fistpll
cs
push
stos
out
out
std
ret
movsl
out
mov
icebp
shlb
jle
xlat
out
mov
cwtl
subl
jo
jnp
lea
and
push
std
or
js
aad
jo
pop
shrl
mov
fyl2x
mov
imul
leave
test
repz
mov
inc
fistpll
in
cmpsb
es
into
xlat
adc
mov
adc
cmp
out
sbb
sbb
lret
mov
shll
mov
sti
push
mov
sub
imul
mov
mov
mov
cmp
js
nop
push
dec
int3
dec
sbb
lret
adc
mov
pop
js
push
sbb
outsb
push
pop
insb
hlt
lock
lods
add
shl
call
lret
out
jb
push
push
mov
sbb
inc
pop
out
and
mov
das
je
imul
pushf
or
adc
rolb
outsb
js
push
mov
mov
test
mov
inc
pop
dec
jno
push
sub
mov
rorl
in
addr16
add
test
scas
and
pop
push
jns
pop
push
movsb
push
push
jo
in
stos
in
mov
xchg
add
insl
mov
fnsave
inc
fistps
loope
dec
mov
xchg
xor
add
cltd
mov
inc
and
mov
mov
xchg
loopne
loopne
sbb
mov
jb
ror
gs
xchg
push
je
dec
pop
out
push
push
lret
outsb
inc
dec
hlt
mov
adc
popf
dec
fisubl
jp
mov
es
hlt
inc
lds
scas
gs
scas
sub
andl
outsl
bound
js
xchg
test
inc
xchg
push
das
mov
add
mov
jge
pop
cmp
mov
notl
test
jge
mull
or
dec
mov
pop
mov
adc
mov
loopne
adc
lcall
scas
int
mov
mov
jne
jo
repnz
test
fbld
jb
mov
sbb
das
push
xor
xchg
mov
mov
add
enter
outsb
jge
jo
push
dec
push
inc
shll
shlb
testb
out
out
push
jge
xor
pop
and
adc
outsb
in
int
out
xchg
insb
ljmp
lahf
cmp
pop
mov
mov
xchg
fists
stos
imul
xor
inc
and
and
lcall
shll
xor
and
out
dec
sbb
lret
inc
inc
adc
push
in
das
sub
loopne
loopne
jbe
pushf
or
insl
cmpl
add
dec
xor
aas
lret
movsb
call
lea
int
iret
cmpsb
roll
push
bound
out
mov
or
roll
hlt
push
mov
lea
mov
jbe
cmp
or
or
sub
cltd
js
mov
cmpsb
cmp
shll
jp
xlat
push
dec
ret
xchg
fsubrl
test
ss
int3
push
xlat
jno
add
lods
jb
pop
outsb
lods
jecxz
add
xchg
fs
pop
mov
stos
imul
push
stos
fisttps
imul
bound
fstpl
push
ds
push
mov
inc
out
cli
mov
push
loop
je
in
and
cld
add
push
pop
ss
scas
cs
push
jl
fwait
je
xor
dec
out
js
in
lcall
jg
mov
jle
inc
insb
cmp
loopne
mov
mov
out
pop
out
mov
mov
popf
jnp
mov
jl
cmp
loopne
mov
imul
arpl
jne
pop
jo
fisttpl
testl
mov
sbb
sbb
fs
aaa
and
lea
ss
mov
sbbb
pop
shl
xchg
int3
lods
lahf
xchg
aad
repz
jl
push
outsb
pop
shll
insl
add
std
pop
in
movsl
pusha
ss
cltd
mov
in
cli
sub
insb
insb
int3
xor
bswap
mov
xor
cld
and
cmp
jns
jno
mov
test
lcall
mov
adc
xor
push
int
cli
ljmp
inc
repnz
sti
ja
xchg
inc
push
cmpsl
xchg
inc
cltd
std
jne
jecxz
mov
xor
pop
sbb
cmp
or
and
cmpsl
push
es
js
or
mov
lsl
xlat
jno
jecxz
add
std
mov
push
and
jo
jb
or
cmp
in
mov
sub
jne
rolb
and
lods
movsl
mov
test
jae
sub
dec
ds
out
dec
xchg
adc
dec
dec
mov
leave
nop
inc
push
mov
ret
jp
xchg
pop
pop
lahf
cs
cmp
iret
ficoml
sbb
pop
jle
outsl
sahf
enter
subb
push
cmp
sbb
scas
jns
sub
insl
loopne
cwtl
into
movsb
cmp
ds
gs
xchg
fmuls
and
sbb
add
mov
mulb
xor
jmp
js
lea
pop
push
in
sub
mov
popf
insb
pop
iret
xchg
test
jae
xchg
pop
xchg
cmpsl
loopne
adc
cs
into
sti
test
pop
jbe
in
shlb
sbbb
mov
mov
push
inc
data16
and
hlt
cmp
arpl
cmp
jbe
and
outsl
fisubs
xchg
pop
ds
sbb
dec
sqrtps
ja
or
cmc
out
push
incb
xor
inc
push
mov
std
aad
fs
test
in
xchg
fldcw
in
jae
hlt
out
mov
fcoms
add
loope
cmp
cvtps2pd
inc
and
pop
test
lret
in
and
cmp
leave
ss
push
lret
inc
xor
adc
adc
add
lahf
dec
lea
lcall
mov
mov
ja
popf
stos
cmp
popa
test
xor
aaa
fistpll
outsb
cltd
lea
gs
add
jg
pushf
xor
pop
mov
mov
stos
std
loopne
xchg
push
sub
jmp
xor
nop
js
test
iret
loop
pusha
pop
cmp
or
xadd
mov
cmpsb
fs
sbb
int3
xchg
fcoml
xchg
sbbb
or
es
mov
cltd
and
popa
dec
push
mov
sbb
sub
or
int
jae
fwait
inc
xchg
stos
jno,pt
std
jbe
aas
ret
pushf
mov
pop
and
rclb
and
add
xchg
fidivrs
jecxz
std
sub
pop
ds
mov
div
or
mov
loopne
xor
fldenv
adc
xchg
sub
pop
jmp
fwait
adc
lock
mov
inc
in
mov
cmc
fstpl
cmp
sar
in
mov
push
in
movl
pusha
sbb
jns
arpl
fists
in
lock
shlb
data16
xor
iret
and
sti
push
int3
pop
lods
push
shrb
sub
movsb
mov
in
jl
push
adc
jno
and
das
jecxz
lea
push
sub
adc
mov
lock
fwait
jb
mov
in
fcomip
les
adc
mov
lahf
insb
sub
push
popf
push
sub
decb
stos
mov
test
mov
adc
adcl
cli
push
mov
cmp
dec
les
mov
lcall
adc
cltd
rcll
lahf
push
add
daa
mov
mov
push
scas
clc
sbb
and
or
bswap
mov
mov
jne
mov
cld
repnz
xchg
mov
int3
loop
cmpsb
or
nop
movsl
lods
mov
lret
pop
loop
or
jns
js
adc
cld
jbe
clc
and
and
outsb
stc
repz
addr16
push
lea
ret
sub
ret
mov
mov
adc
xrelease
rcll
jne
jo
iret
fcomps
xchg
cmpsb
adc
sub
dec
cmp
cmp
cmc
dec
add
out
xchg
add
push
enter
xlat
popa
int3
out
or
shlb
and
pop
lods
imul
xchg
sbb
sbb
loopne
dec
movsl
iret
fsubrs
fisubrl
cmp
mov
fimuls
jnp
ret
pop
and
pop
mov
js
lock
imul
stc
inc
xchg
mov
mov
movb
shlb
or
repz
cmp
xchg
xchg
push
leave
std
mov
shlb
mov
das
sbb
in
and
push
clc
out
jnp
sahf
cmp
push
jns
insb
lea
aas
int3
mull
adc
and
fbstp
cltd
fildl
pop
inc
xchg
cmp
dec
jge
jge
pop
xor
cmp
out
push
push
or
ret
lods
pop
enter
sti
mov
clc
loopne
jp
fcoml
xchg
add
loop
inc
jno
mov
cmp
mov
lahf
into
int
inc
dec
xor
pop
jecxz
or
xor
dec
push
mov
call
rorl
lock
adc
mov
outsb
das
cmp
cmp
jmp
and
out
mov
int
out
inc
sbb
mov
icebp
loop
dec
test
add
es
ljmp
jl
push
cwtl
push
jno
out
dec
in
imull
test
in
int
in
mov
and
pop
jbe
add
mov
sarl
and
add
xorb
xchg
rolb
inc
divl
push
xorl
popf
das
aaa
lret
jle
dec
cmp
adc
dec
fwait
add
and
imul
out
out
push
andl
movsl
push
add
lahf
xor
pushf
cmpl
mov
pop
inc
scas
xor
push
mov
push
sub
lds
inc
out
in
insb
scas
mov
inc
incl
addr16
sarb
jb
jl
lret
dec
std
mov
pop
call
sub
cmpsl
or
add
and
fcompl
rorb
push
push
cmp
dec
cmp
lret
mov
or
jnp
xchg
les
fcoml
fcomi
rclb
cmp
xchg
in
and
out
dec
dec
push
push
jle
lea
out
adc
inc
xchg
xchg
inc
ficomps
pop
pop
sbb
push
push
movsb
pop
push
sub
lret
push
gs
fcos
ljmp
or
stc
ss
mov
inc
sbb
clc
and
fidivl
cmp
adc
repz
imul
push
inc
in
add
xchg
fisttpl
xlat
popa
pusha
je
mov
xchg
test
roll
mov
jne
ja
cmpsl
int3
cmpb
imul
cmp
leave
je
push
push
xlat
mov
in
add
cld
push
aad
std
dec
add
lcall
int
das
inc
ret
mov
aam
lods
aam
add
cli
cmc
push
sbb
jl
cmp
cmpb
mov
xchg
test
dec
les
jecxz,pn
loop
sub
loop
mov
lret
icebp
jle
loop
jne
sbb
int
mov
adc
cmpsl
mov
negb
mov
jo
outsl
cld
mov
popa
into
test
fldenv
adc
int3
cld
push
adc
xchg
movsb
shl
test
cmp
xor
add
lds
das
movsl
test
bound
shll
jo
les
inc
xor
fisubl
jmp
lods
jp
sbb
pop
sbb
es
sbb
mov
sub
jns
shll
jo
fs
pop
mov
sbb
std
divb
call
call
inc
testl
inc
and
add
dec
and
pushl
mov
push
cli
sub
aam
jns
movsl
mov
cmpsb
add
inc
sub
pop
xchg
fs
jp
mov
sub
fistpll
movsl
dec
xchg
dec
sbb
mov
lds
xor
aam
rcll
mov
xchg
push
or
sub
test
fiadds
test
aas
pop
cwtl
rorb
comiss
dec
mov
sbb
fwait
and
inc
push
pop
add
popf
adc
cs
stos
insl
dec
pop
pop
dec
sub
sbb
std
in
int
lods
mov
popf
lea
jge
dec
pop
pop
dec
sub
sbb
std
in
int
lods
mov
popf
lea
std
arpl
inc
pop
dec
lods
cmp
popf
or
int
ffree
lods
mov
popf
imul
pop
or
or
add
inc
addr16
mov
std
in
cmc
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
dec
in
leave
std
stc
int
frstor
adc
int
pop
pop
dec
jl
pop
imul
or
leave
std
clc
int
fstpl
lea
jge
dec
imul
or
leave
in
aad
lds
xchg
test
pop
sbb
sub
pusha
dec
sbb
jb
mov
mov
jl
outsb
lcall
dec
cmp
aad
mov
repnz
ja
les
dec
xor
bound
mov
and
mulb
std
shl
pop
jno
xchg
idiv
mov
xor
sbb
daa
xchg
mov
mov
mov
add
xor
lods
pop
stc
test
cmpl
sar
adc
sub
and
stos
xor
test
mov
xchg
cmp
sub
popa
sub
and
leave
mov
insb
push
jns
inc
sbb
outsl
int
add
in
insl
add
sub
xchg
leave
in
stc
aam
fstpl
lea
gs
imul
sub
test
mov
loope
clc
xor
sti
jge
dec
or
aas
push
bound
xchg
mov
lods
in
repz
sbb
add
or
push
pop
jp
imul
std
lcall
mov
pop
insl
dec
jge
dec
imul
or
leave
std
stc
int
fstpl
lea
jge
dec
imul
or
int3
out
je
mov
and
inc
pop
orb
cmp
fcompl
daa
inc
testb
and
cli
scas
cmp
gs
push
pusha
dec
inc
outsl
fistps
xchg
cld
mov
xor
arpl
sub
sbb
sbb
jle
pop
std
test
add
popa
stos
emms
pushf
lcall
cmp
sbb
add
cmpsb
cmp
movsl
ficompl
inc
rol
jne
push
or
sbb
and
ficoms
call
aam
jl
push
pop
xchg
lfs
call
xchg
es
mov
or
leave
pop
cmpsl
mov
mov
lock
pop
arpl
mov
pop
mov
and
push
std
fsubrl
xorb
jnp
jg
and
mov
inc
das
fstpt
pop
inc
push
test
loope
clc
andl
imul
out
aad
cmp
daa
pusha
mov
sub
jae
jo
cmpsl
and
push
movsb
cli
cltd
jle
cmp
test
sahf
lret
out
inc
mov
popa
arpl
cmpb
repnz
sub
or
pushf
push
cmpsb
les
xor
xor
lcall
sbb
dec
sbb
scas
lcall
pushl
iret
insl
mov
sub
mov
mov
sub
mov
cmpsl
mov
out
xchg
mov
sti
mov
adc
test
test
inc
pop
lcall
int
outsl
loope
add
cmp
xchg
cmp
xchg
push
and
mov
aas
les
out
test
pusha
in
xor
add
fwait
js
mull
inc
mov
mov
add
repz
in
repz
inc
pop
hlt
dec
js
je
mov
mov
call
sbb
lds
das
aas
in
pop
mov
out
adc
xlat
mov
push
or
sbb
inc
or
dec
sub
xchg
bound
inc
popa
pinsrw
daa
insl
sbb
cmp
mov
fcmovnbe
sbb
xchg
aas
dec
lcall
subl
mov
daa
out
push
lcall
cmp
or
jl
adc
pop
pop
sub
sub
sbb
lahf
movb
in
add
add
in
jle
sub
lahf
test
pop
insb
mov
sub
fsubrl
cwtl
movsb
js
out
idivl
je
dec
test
and
xor
je
mov
inc
dec
inc
popa
sub
lds
das
shl
push
nop
aad
xchg
mov
sbb
hlt
rol
aas
sahf
add
hlt
popa
mov
xchg
cmpsb
pop
fwait
add
out
hlt
mov
cltd
inc
pop
daa
fdivr
lds
add
std
movsb
pop
mov
mov
sbb
jle
imul
rcll
sbb
lahf
stc
mov
mov
adc
cltd
dec
add
pop
cmp
lret
dec
add
adc
xchg
pop
add
ja
dec
mov
push
and
jl
jnp
gs
mov
mov
lds
rcrb
pop
fists
dec
shll
adc
orl
jge
xchg
imul
andl
add
sub
push
call
cmp
out
push
popf
in
dec
xchg
int
dec
lret
and
lds
lret
push
jl
enter
dec
and
rcl
aaa
lret
ss
sahf
lock
add
jmp
push
test
add
adc
shrb
fcoms
fsubrl
imull
xchg
les
lcall
fcmovnu
inc
inc
xchg
cmc
hlt
sbb
mov
roll
mov
push
jb
push
push
and
cmpsb
mov
in
out
repnz
dec
jmp
cmp
add
inc
xchg
adc
mov
sub
fidivl
cmp
pushf
aad
insl
mov
jns
sub
imul
sarl
ss
cmp
pop
les
dec
lods
addr16
adc
adc
jo
ja
jge
imul
loope
xchg
jbe
push
test
out
cmpsl
xor
and
jmp
fcomps
outsl
mov
push
jo
sbb
scas
in
sub
test
andb
push
pop
inc
add
or
mov
fdivrs
xor
and
push
mov
pop
push
iret
adc
je
mov
push
mov
sub
insl
and
sbb
cmp
dec
xchg
insb
jg
addl
scas
mov
pushl
sub
bound
inc
xchg
inc
sbb
sbb
xor
into
test
cli
rorb
push
pop
popa
pop
aas
cmpsb
mov
outsl
sbb
fdivs
mov
jl
les
inc
lret
adc
rclb
into
or
shrb
lahf
scas
adc
lahf
imul
jl
in
out
mov
es
sub
xchg
lret
xchg
xchg
mov
jbe
fiadds
cmp
negl
aad
scas
leave
jmp
jae
out
or
int3
pop
insb
jno
inc
lock
push
or
pop
mov
add
in
and
pop
and
aam
sub
les
rol
subb
add
fidivs
xor
in
loop
adcb
daa
cmc
pop
sub
pop
pop
lret
mov
sbb
dec
cmpsb
shrb
mov
imul
xchg
xor
fs
pop
lret
sub
jl
loopne
add
cli
outsl
mov
jmp
pop
rsm
test
test
push
sbb
repnz
push
mov
push
push
push
xchg
fcoml
popf
lcall
loope
or
lods
aas
stc
inc
nop
xlat
push
neg
mov
sub
cmc
dec
add
sub
or
jg
xchg
js
int3
and
addl
in
out
pop
and
jp
add
xor
pop
xchg
pop
mov
js
push
int3
es
fnsave
sbb
push
pushf
int3
notl
test
lock
idivb
movsb
std
ja
push
jb
add
cli
scas
push
mov
mov
xor
dec
mov
cltd
ja
lret
jae
fsub
lods
xchg
mov
js
mov
mov
sub
out
dec
fidivrs
add
mov
jmp
push
ret
push
in
aas
pushf
ret
cltd
loopne
and
cltd
sub
mov
fwait
shrb
test
sub
dec
sbb
mov
ss
subl
push
and
jae
mov
test
into
je
leave
popf
push
push
gs
cmp
pop
das
lahf
lahf
mov
mov
pusha
daa
sub
jg
rcll
push
inc
stos
pop
clc
out
cltd
faddp
mov
lahf
push
mov
push
es
or
iret
mov
andb
pop
add
cmpsl
enter
jo
sbb
and
out
insb
add
jle
lcall
lds
ficompl
loope
and
es
xor
push
fildl
data16
popa
jno
xchg
addr16
cltd
dec
mov
sbb
arpl
xor
mov
insb
fmul
jns
shlb
and
push
add
add
dec
add
outsb
jae
push
pop
out
out
xlat
outsb
cwtl
hlt
ljmp
mov
repz
popa
push
stc
hlt
cli
adc
pop
dec
xor
adc
xchg
mov
js
inc
jecxz
fidivrl
stos
xchg
scas
lock
inc
cmpsb
or
sbb
cltd
loopne
loopne
mov
rcll
out
or
mov
xchg
fcmovnb
into
lds
push
adc
jb
xlat
push
enter
adc
cmp
add
xchg
xor
add
jle
aam
aad
xchg
iret
sbb
stc
ss
mov
int3
inc
je
stos
sbb
jo
push
xlat
popa
jecxz
pop
aas
scas
stc
in
idivb
sbb
jb
loop
das
in
repz
lds
sub
sarl
or
jne
push
pavgw
xor
clc
sub
push
fstpt
test
les
jge
or
inc
pop
xlat
mov
ds
xchg
inc
xor
pop
push
mov
xchg
lods
rolb
push
out
movb
and
jge
dec
sbb
dec
test
daa
push
loopne
outsb
ret
mov
ret
cli
filds
dec
dec
sub
inc
jno
or
jg
inc
xchg
outsl
in
out
pop
pop
jle
jnp
imulb
lcall
mov
fstpt
scas
push
mov
jbe
sbb
pop
dec
lods
lret
pop
mov
call
popa
mov
jnp
outsb
je
jbe
cmp
imul
lods
movsb
jp
push
mov
jg
cmp
push
push
mov
xor
je
fidivrs
pop
ja
pop
rorb
pusha
loope
nop
lcall
out
gs
push
ja
dec
mov
cmp
test
xor
lds
inc
mov
cmp
out
aam
in
xorb
add
mov
xor
je
cmc
int3
aad
and
mov
or
notb
fistpl
psubq
enter
insb
lahf
out
es
and
sub
leave
xlat
test
imul
arpl
testl
fcmovu
aaa
fwait
cmp
ljmp
test
mov
pop
dec
and
sub
mov
repz
xorb
aas
cli
adc
adc
cmpsb
loope
inc
mov
mov
in
inc
inc
cltd
ret
notb
shr
or
scas
xor
cld
stos
mov
scas
add
pop
jne
fwait
decl
sbb
jae
xchg
daa
pushf
mov
jb
inc
ss
mov
imul
cmp
out
stos
pop
and
xchg
sub
test
loop
repnz
add
leave
out
ret
aaa
call
cmp
xor
mulb
mov
cmp
in
sbb
movsl
jp
cltd
mov
test
dec
int
mulb
aas
ljmp
cwtl
stos
or
add
jg
mov
mov
push
insl
xor
lret
jbe
mov
jmp
pop
mov
popa
sub
ret
cmp
and
subl
pop
jle
xchg
scas
shrb
hlt
or
clc
call
mov
fmull
hlt
mov
pop
mov
das
js
mov
fwait
xchg
sub
cmovbe
sub
xchg
push
or
cmp
jecxz
dec
jnp
addl
push
xor
test
mov
aam
pushf
mov
jmp
and
scas
andl
add
popa
mov
lea
and
lret
and
xchg
rcrl
mov
dec
ljmp
mov
icebp
and
mov
clc
cmp
fwait
xor
movsb
aad
add
addb
push
add
insl
fdivl
mov
mov
and
inc
sub
ds
cmp
add
imul
add
lret
sbb
cmpsl
movsl
pop
push
adc
and
mov
imul
cs
leave
gs
gs
push
or
fstpt
mov
in
pusha
hlt
mov
subb
sub
nop
sbb
sbbb
mov
roll
sbb
out
pop
pop
cmp
mov
pop
mov
into
jmp
sub
mov
in
mov
subb
in
mov
je
inc
sbb
movsb
or
fcomps
or
mov
push
jge
mov
jno
xchg
mov
add
ret
mov
ret
fcompp
sub
std
fistpl
xchg
fdivs
test
loopne
fstpl
into
jp
mov
or
or
mov
aam
lea
lods
aad
jns
cltd
nop
orb
xchg
xor
mov
dec
and
sahf
inc
and
sti
lahf
dec
es
cld
push
into
clc
dec
inc
ret
mov
sub
add
sahf
fldenv
fdivrl
cmp
ret
shr
add
jecxz
cmpl
ret
loope
shrb
bound
push
dec
jle
ret
cmp
ficoml
popl
pushf
sbb
shll
dec
fdivs
jg
imul
ss
inc
jecxz
mov
pusha
rcl
xchg
lret
je
dec
dec
push
xor
stc
stos
repnz
jmp
movsl
xor
lea
fiaddl
xchg
push
adc
aad
sbb
dec
add
stos
nop
dec
out
push
push
or
pushf
adc
pop
pop
ret
push
and
arpl
xor
test
cs
lods
adc
jnp
and
push
push
adc
add
int3
ss
pop
sarb
fisubl
push
jg
dec
out
adc
frstor
push
sub
jb
adcl
sub
repz
sbb
xchg
enter
out
sbbb
mov
js
sbb
xor
pop
jbe
lret
add
test
clc
ret
xor
adc
or
lds
imul
cmp
push
push
jmp
popa
sub
inc
sbb
jae
stc
xchg
inc
aas
pop
dec
movsb
add
daa
sahf
mov
push
jno
xchg
cwtl
pop
push
jmp
int
inc
mov
inc
orl
lock
mov
cmpsb
pop
test
cltd
dec
loopne
ret
testl
push
sahf
pushf
jmp
mov
lods
xchg
and
in
pusha
outsb
mov
sub
and
mov
aas
int3
or
pop
cmpsb
rcr
out
std
sbb
and
loop
dec
mov
push
xor
daa
sti
sbb
lcall
gs
outsl
add
mov
mov
orl
inc
mov
sub
cmp
fucomip
sbb
shlb
mov
repz
iret
cmp
push
ret
sub
dec
inc
and
ja
cmp
push
fcoms
stos
push
test
mov
into
ja
mov
and
dec
mov
sub
repnz
jnp
cmpsl
enter
bound
mov
fildl
out
mov
mov
cmpsb
xchg
fstl
xor
inc
push
fwait
das
es
or
sbbl
test
dec
mov
jg
push
aad
cmp
shlb
ss
dec
hlt
loope
outsl
out
inc
add
ss
sarb
xchg
mov
mov
mov
push
in
push
and
pop
imul
sub
and
inc
scas
scas
shl
fisubs
pusha
pop
aaa
and
movl
xchg
xchg
inc
inc
daa
notb
lret
mov
out
insb
jne
jl
lods
cmp
loopne
jae
mov
pop
imul
dec
cmpsl
hlt
inc
mov
mov
add
or
rcl
out
mov
xchg
fistpl
ss
inc
adc
lods
outsb
mov
dec
fdivs
gs
cmp
test
ret
adc
data16
dec
lods
jmp
xchg
xchg
jns
outsb
mov
lods
push
pop
push
xchg
out
popa
fnstcw
and
fists
daa
xchg
or
push
pop
scas
je
paddsb
repnz
mov
repnz
jae
xlat
shrl
cmpsb
stos
jmp
inc
sti
cmp
push
mov
xchg
dec
mov
inc
inc
dec
mov
stc
test
pop
push
mov
out
insl
xor
flds
jne
add
dec
xchg
jecxz
pop
push
ljmp
incl
sbb
dec
iret
imul
je
or
cltd
jle
fistps
and
gs
add
lods
sub
nop
mov
push
aam
pushf
sbb
mov
ljmp
mov
sub
hlt
add
mov
or
mov
fdivrs
shr
ds
sbb
xchg
push
xor
xchg
mov
pop
adc
aam
cmp
das
push
test
popf
jle
decl
sub
cmc
fwait
mov
test
pushf
cld
rol
repnz
and
jl
mov
sahf
sub
mov
add
mov
dec
test
mov
ss
mov
add
pop
pop
out
repz
push
bound
mov
cmp
ret
lea
and
lock
push
ficompl
xchg
cli
scas
lock
std
push
js
sbb
lods
dec
or
jmp
call
xor
popf
mov
and
mov
cmp
aad
cmpsl
icebp
ss
popl
inc
negb
sti
inc
loopne
inc
jbe
sub
pushf
ds
subl
ljmp
push
ljmp
push
insb
out
and
lods
pop
xor
sbb
imul
ja
in
dec
cwtl
addr16
fisttps
cmc
pop
dec
outsl
pusha
jo
aad
dec
sbb
inc
test
xchg
or
aad
ret
das
pushf
pushl
lods
pusha
cmp
inc
or
inc
or
jge
inc
into
das
into
aas
xor
push
mov
jne
sarl
movsl
and
iret
sbbl
mov
test
mov
mov
ss
xchg
jl
leave
and
imul
fwait
push
jg
add
lret
addr16
inc
add
add
cmp
sti
aam
mov
sti
and
icebp
loop
fisttpl
xchg
adc
dec
inc
and
dec
or
adc
roll
int
jmp
add
aaa
or
pop
sub
sub
leave
loope
push
arpl
in
test
inc
jae
dec
add
xchg
push
movsl
insl
jns
push
fstpl
or
mov
roll
outsb
mov
dec
jp
jns
add
inc
insl
push
pop
pop
and
fildll
add
push
mov
dec
and
xchg
mov
mov
in
jae
or
xchg
lods
jae
cld
fcoms
sahf
cld
aad
pusha
push
in
xchg
lea
pop
out
imul
mov
ljmp
pop
loopne
adc
movsb
testb
hlt
lods
in
loop
dec
inc
sahf
fisttpll
jmp
pop
lahf
xchg
and
test
shrl
mov
cmp
stos
iret
dec
nop
lods
pop
rorl
fsts
pop
ljmp
cmpsl
dec
mov
inc
das
xor
into
add
mov
nop
xchg
or
cmc
mov
rcrl
xor
in
stc
scas
dec
adc
pop
push
xor
xor
inc
xor
sbb
mov
stos
mov
lret
mov
popf
jle
xor
adc
in
ds
js
dec
hlt
xor
xor
cmp
pop
addr16
or
push
cmp
xor
arpl
lods
jle
jne
push
mov
mov
jle
int
xor
jg
dec
int3
subl
mov
inc
jne
dec
xor
dec
lcall
inc
enter
jo
inc
jne
add
insl
loopne
adc
mov
jae
add
out
jp
xor
mov
xor
push
or
outsl
ja
aas
xchg
ss
enter
aaa
push
dec
ljmp
inc
out
addr16
mov
fdivs
dec
arpl
xchg
jge
movsb
jle,pt
dec
fmuls
jne
pushf
fdiv
sub
sbb
push
mov
mov
mov
lret
in
push
xlat
mov
fidivl
fcmovbe
sbb
lock
or
mov
hlt
fistpll
cmp
mov
popf
xor
imul
jne
push
and
cwtl
lahf
inc
in
push
xor
mov
sbb
loope
fadds
jne
or
repnz
fldl
adc
rcll
add
aad
stc
jmp
dec
pusha
push
add
dec
lahf
mov
push
pop
cmp
adc
fmull
outsb
and
sbb
ljmp
lea
in
cmpsb
and
cmp
push
sbb
cmpl
inc
filds
xchg
inc
dec
enter
clc
sub
fs
sub
xor
jo
xchg
mov
jb
dec
lods
xchg
pop
xlat
adc
sub
jg
push
mov
add
sbb
fwait
xor
and
mov
mov
mov
add
mov
cmp
lea
cmp
mov
sub
mul
inc
jno
sbb
loopne
jae
scas
push
mov
and
push
and
jb
jle
mov
ds
nop
xchg
pop
xchg
pop
jno
xlat
push
push
dec
xchg
out
ret
dec
pushf
or
pop
sub
push
adc
and
xchg
xlat
push
ljmp
sub
inc
or
pop
roll
sbb
xchg
mov
cmp
addr16
ljmp
xchg
aam
and
pop
lahf
jmp
sub
sarl
aam
mov
sub
sahf
mov
and
xor
pop
jmp
cld
sub
xchg
jo
ss
paddq
mov
add
cmp
jmp
xchg
adc
fsubrl
and
clc
es
sbb
addl
adc
inc
xchg
xor
pushf
push
adc
loope
sahf
mov
inc
arpl
icebp
es
into
jo
sbb
or
or
sbb
or
stos
push
and
fstpl
lea
jge
dec
imul
or
leave
std
stc
int
fstpl
lea
jge
dec
imul
or
leave
std
stc
int
fstpl
lea
jge
dec
imul
or
sbb
jmp
jmp
mov
pop
insl
dec
xlat
rorl
sub
addl
sbb
or
cmp
sub
xor
and
jge
call
mov
mov
in
push
cmp
sub
pop
cmp
sbb
clc
in
mov
fdivrl
in
push
cmp
sub
pop
cmp
sbb
clc
mov
cltd
and
push
cmp
jge
fwait
cmp
sub
and
sbb
jecxz,pn
les
fistpll
push
je
jae
mov
lods
and
inc
repz
or
inc
jbe
sub
call
jl
push
or
xor
or
lock
pop
sub
jo
call
inc
cld
push
mov
xor
cld
or
and
xor
imul
fcmovnu
inc
push
insb
and
add
cvtss2sd
shl
xchg
mov
lods
popf
lods
xchg
leave
mov
in
ss
or
cmp
sub
pop
cmp
sbb
clc
mov
mov
mov
test
jae
or
push
cmp
dec
insl
xor
test
aam
ljmp
int3
lods
imul
sbb
sub
or
insb
in
stc
mov
popf
ret
int
in
cmpsl
cli
cltd
cwtl
mov
and
sub
or
call
mov
mov
in
push
cmp
sub
pop
cmp
sbb
clc
mov
mov
mov
in
push
mov
nop
xchg
lock
pop
stos
cmpl
imul
mov
mov
push
pop
cmc
movsb
arpl
and
add
jle
fidivs
shrb
test
jecxz,pn
mov
dec
movsl
incb
aam
cmpsl
or
lods
cmp
stos
adc
int
mov
repnz
add
ret
test
and
ja
fidivl
stc
adc
popf
add
xchg
sbb
dec
mov
push
inc
and
icebp
mov
xor
and
mov
clc
popf
jl
pop
jecxz
fcomp
repnz
or
inc
in
sbb
sub
sahf
sub
repz
lret
pop
in
mov
ret
popa
leave
cmpsl
mov
sarb
or
or
rcrl
pop
adc
xor
and
add
in
das
add
pop
jle
rolb
dec
sbb
mov
xor
aaa
adc
sbb
popa
enter
gs
sbb
ror
cs
and
push
mov
cmp
fadd
xchg
push
pop
mov
roll
push
pop
dec
lea
add
and
movsb
xchg
mulb
cld
pop
sub
ss
outsl
icebp
jg
out
insl
mov
sub
repnz
hlt
or
and
push
divl
enter
arpl
or
adc
sbb
inc
nop
jne
push
xchg
mov
add
pop
loopne
std
cmpsl
and
out
mov
jp
shlb
data16
movsb
cld
jne
insl
shll
imul
dec
orl
rcr
jne
cmp
bound
sub
and
or
add
call
push
sbb
mov
insb
jg
adc
pop
push
dec
jg
dec
sub
stos
loopne
cld
jbe
in
lret
pop
mov
mov
shlb
je
sbb
fwait
lea
das
test
jle
push
and
aas
mov
test
lds
adc
bnd
mov
popf
dec
jne
sub
aad
insb
push
cmp
call
jmp
xor
out
inc
jl
out
popa
test
loopne
pop
mov
repnz
ret
imul
mov
lock
jnp
out
jo
movsl
insl
mov
fnsave
mov
xlat
lret
sbb
push
out
xlat
jge
out
xor
push
stos
test
std
pop
or
mov
clc
mov
cmp
aad
pop
call
jge
aad
dec
repz
ss
lret
nop
xor
icebp
int
js
mov
cmp
add
sbb
jne
dec
xchg
scas
rolb
daa
fsub
daa
movsl
push
dec
or
dec
xchg
sarl
arpl
add
mov
jecxz
mov
xchg
js
and
dec
lds
out
outsb
mov
mov
mov
mov
push
jl
negb
pop
rcr
bound
scas
or
cmp
adc
cmp
ret
mov
adc
add
shlb
mov
fadd
cli
clc
jae
jno
push
cmpsl
sbb
inc
fcmovnu
daa
push
xlat
pusha
je
lahf
push
sub
gs
in
inc
dec
ja
mov
cld
in
inc
adc
cmp
xor
divl
adc
cli
jl
lock
mov
xchg
test
or
pusha
outsb
push
mov
or
popa
dec
push
and
xchg
sub
loop
push
stos
fbld
pushf
xor
shrb
jge
pop
xchg
stc
jp
and
scas
mov
aam
push
imul
push
sub
mov
push
add
xor
test
pushf
cwtl
pop
sub
pop
jmp
mov
adc
clc
cmp
fcompl
addl
and
loopne
pop
push
gs
aas
push
adc
or
jle
fcoms
jl
add
xchg
sbb
dec
out
xchg
lea
imul
pop
and
and
cmp
imul
in
out
cmp
inc
mov
inc
xor
xlat
push
dec
dec
xchg
xchg
mov
popa
scas
xchg
jno
cmp
outsb
or
gs
test
js
pop
xlat
movnti
ljmp
std
pop
xchg
shrl
imul
pusha
cmpb
mov
inc
add
or
mov
pusha
movl
sbb
pop
je
in
mov
je
repnz
jp
and
test
xchg
out
test
cwtl
inc
xor
push
outsb
dec
add
inc
std
push
mov
mov
cli
jl
mov
cmp
add
adc
inc
jl
test
jl
cli
mov
shll
ja
sbbl
shlb
insb
pushf
lahf
idivb
pop
ret
mov
es
add
pop
test
fsubrs
into
sub
je
or
adc
imul
jp
mov
loope
sbb
push
xlat
cld
rcll
lock
lods
stc
xchg
dec
pop
jae
scas
jg
push
xchg
cld
loopne
xchg
stos
sub
fwait
push
ffreep
outsl
imul
fcomps
cmp
fstp
fs
xlat
cmpl
imul
dec
push
xchg
xchg
add
ret
out
pop
jge
xorb
stos
loopne
adc
jbe
mov
or
push
jl
add
loope
stos
jmp
xchg
lock
pop
in
std
inc
test
push
adcl
dec
in
into
lods
push
adcb
push
cmp
iret
popf
pop
je
mov
addr16
fdivl
push
scas
cli
mov
pushf
in
cmp
and
out
push
or
into
lcall
or
rcll
leave
pop
lea
test
loop
pop
adc
mov
mov
or
jne
xor
adcl
les
lret
lea
loop
inc
mov
xchg
pop
addr16
add
lahf
mov
pushf
cmp
movsb
jecxz
xlat
sub
aaa
cli
movsl
push
outsl
jmp
sbb
ficompl
dec
fadds
dec
fisttpl
ja
pop
test
out
movsl
xor
in
pop
cmpsb
cmp
dec
ret
and
mov
repz
icebp
inc
mov
movsb
xchg
add
adc
stc
xorl
fprem
orb
mov
adc
hlt
xchg
and
pop
push
xlat
rorl
or
and
int3
inc
cmp
sub
fwait
sbb
loope
aaa
pusha
cmp
mov
inc
das
dec
imul
cmc
outsl
add
cmp
rcrl
cmp
insb
pop
shrb
insb
mov
xchg
push
push
sub
fs
add
mov
jno
rcll
add
testl
add
test
ss
cmp
sub
repz
clc
out
aaa
add
dec
or
stos
jns
mov
or
arpl
into
fldl
xor
cmp
add
testl
iret
subb
mov
lahf
add
mov
shl
jmp
jecxz
pop
and
lods
mov
mov
and
xor
mov
mov
repnz
btr
gs
xor
repnz
in
push
addr16
rcrb
iret
lds
icebp
inc
ja
cwtl
lret
jg
mov
lret
ljmp
ficoms
mov
dec
add
leave
xor
sarl
fucom
sub
pop
adc
sub
xchg
mull
out
or
sbb
mov
mov
inc
stos
xchg
mov
ffree
push
stos
outsb
xchg
sahf
cmc
add
cmp
cwtl
scas
in
pop
aad
push
rolb
stc
rorl
aad
or
mov
xor
jb
jb
mov
jae
push
aas
mov
inc
rcl
repnz
push
fs
jbe
loopne
cli
sbb
mov
mov
imul
enter
adc
mov
inc
repz
movsb
jb
out
test
lods
push
xor
out
iret
sbb
cmpsl
jno
add
int3
aam
mov
idiv
pop
movsl
add
movsb
dec
sti
das
sbb
fisubl
jno
mov
xchg
or
sbb
movsl
inc
mov
xchg
adc
xchg
je
mov
dec
test
mov
and
dec
sub
mov
std
in
push
mov
mov
aad
iret
stc
mov
push
push
aas
jae
push
cmp
in
lcall
cli
inc
std
inc
ja
in
mov
dec
call
ret
subl
sti
shl
cmpsb
push
cltd
icebp
out
std
sbbb
adc
cs
mov
jecxz
cmpsl
popa
xlat
dec
xor
mov
dec
push
shlb
repz
add
shrb
cmpsb
outsl
arpl
xchg
les
ud1
add
sub
les
ret
cwtl
mov
jmp
andl
ds
lods
nop
out
push
push
inc
sub
jmp
inc
scas
sbb
aad
clc
adc
mov
sahf
pop
mov
sahf
jmp
jbe
movsb
shrl
xchg
mov
inc
das
or
jge
ss
icebp
add
pop
enter
dec
pop
mov
shlb
repnz
sbb
push
test
pop
xchg
xor
ds
test
adc
mov
adc
es
les
pusha
mov
pusha
add
mov
fisttpl
ds
pop
jle
and
sbb
icebp
dec
pop
dec
xchg
cltd
loope
inc
cs
xchg
jg
sub
movsl
dec
jl
and
mov
sbb
or
lahf
push
mov
imul
add
in
loopne
dec
arpl
sub
shlb
sbb
scas
mov
dec
je
dec
andb
or
adc
shr
add
pop
adc
ret
cmp
sbb
dec
pop
and
rcrl
inc
push
fucom
in
inc
icebp
and
dec
push
es
xor
popf
ret
xor
dec
xchg
jb
sbb
data16
or
je
ret
notl
orb
jle
sti
rdmsr
jne
push
das
cli
and
xchg
xchg
call
inc
fs
sbb
cli
mov
push
clc
lock
mov
arpl
pop
fs
call
aaa
loop
int3
out
mov
mov
cli
inc
mov
and
divb
dec
and
sbb
into
fldt
call
in
pop
data16
jb
test
sub
jo
test
xlat
add
data16
add
outsb
xchg
push
data16
inc
inc
cmpsl
xchg
int3
and
or
xor
mov
cmp
popl
shlb
or
popa
cmp
sub
dec
xchg
movsb
or
ds
cmp
shl
lock
lds
mov
outsb
mov
cli
mov
jp
bound
push
mov
xchg
xchg
mov
lcall
mov
xchg
and
push
cli
gs
mov
sbb
push
xchg
fstpt
sbb
xor
sub
sbb
adc
push
mov
push
mov
xchg
fmull
or
rcll
dec
xlat
pop
je
sti
outsl
xor
mov
jp
add
aaa
adc
sbb
fsts
mov
mov
mov
pop
pop
aaa
cmp
sub
xlat
jo
out
xchg
outsb
xor
out
cmp
or
cli
inc
pop
shl
nop
mov
loope
mov
or
cmpsl
jne
add
int3
inc
in
mov
push
pushf
inc
adc
stc
mov
scas
jo
mov
subb
pop
xchg
adc
pop
out
adc
add
dec
pushf
lcall
cmc
loope
xor
aas
inc
xchg
dec
mov
push
mov
push
les
and
out
sbb
ss
and
jae
jo
cmc
adc
pop
mov
pop
cltd
in
ret
repnz
dec
pusha
add
pop
jge
out
mov
into
jb
sub
cmp
movsl
or
mov
loop
nop
push
out
sub
xchg
xor
hlt
push
dec
incb
call
movsl
and
sbb
add
sbb
dec
mov
cmpsb
fiaddl
pop
inc
pop
and
scas
andl
imul
push
xorl
inc
inc
or
sti
push
lds
aam
prefetch
pop
xchg
mov
mov
movsb
pop
ja
push
jle
pop
adc
mov
ficompl
jbe
lods
stos
inc
jg
sub
movsl
aaa
rcl
pop
cmp
int
push
ss
orl
push
jno
nop
call
sbb
push
in
in
push
adc
repnz
mov
test
xchg
arpl
in
in
ret
jp
push
pop
adc
mov
loop
loope
stos
or
sahf
in
out
popa
sbb
mov
pop
lahf
cs
xor
inc
add
xchg
dec
adc
cld
je
jg
jge
pop
ja
scas
or
lret
cmp
cmp
fiadds
lds
inc
icebp
fdivs
insb
push
ret
cmp
shrl
inc
add
inc
adc
fisttps
pop
stos
in
leave
push
jmp
inc
test
xor
add
sbb
jnp
mov
clc
cli
sbb
out
ret
sbb
pop
and
pop
ds
iret
jg
scas
fisttpll
add
addr16
mov
dec
mov
scas
ss
and
dec
pop
cmc
push
pusha
das
jno
lcall
hlt
dec
stc
and
jns
aas
nop
fs
jo
popa
or
xlat
or
xchg
lock
xor
add
adc
xchg
sbbb
inc
xchg
loope
pop
xor
and
fnstenv
sub
pop
inc
test
scas
and
or
repnz
sahf
aas
dec
adc
sub
push
rorb
mov
andb
call
notl
loope
rclb
repnz
pushf
cmpsl
aad
jb
cmp
shlb
cmpsb
repz
lods
dec
mov
mov
mov
sti
or
jnp
push
cwtl
mov
negl
mov
daa
aad
or
jb
and
mov
mov
push
repnz
scas
lret
fsts
sbb
sub
pop
or
mov
aas
xchg
pop
jno
jmp
mov
ret
pop
cmp
ja
das
mov
or
out
mov
in
loopne
pop
lds
push
loop
rcrb
cs
jns
sub
sbb
sbb
repz
inc
mov
ret
pop
aad
xlat
inc
loop
push
out
mov
jg
into
cmpsb
adc
imulb
sbb
adc
clc
mov
jne
mov
mov
sub
pop
inc
jge
mov
push
movsb
nopl
xchg
hlt
je
stc
sbb
data16
mov
inc
sbb
addr16
repz
pop
jmp
aas
int3
jnp
popa
icebp
sbb
push
pop
inc
xchg
leave
dec
out
cwtl
push
pop
mov
repz
mov
push
jbe
or
daa
testl
jle
mov
sbb
jecxz
pop
loope
lods
push
xchg
xchg
or
movsl
jl
add
mov
xor
mov
pusha
pop
dec
flds
enter
add
mov
add
popl
orb
test
jp
dec
xchg
sub
sbb
inc
addl
pop
lods
inc
ljmp
cmp
cmp
loop
mov
and
mov
mov
hlt
mov
dec
xchg
loopne
imul
push
clc
enter
dec
jnp
sub
xchg
pop
jp
adc
aaa
adcl
jns
mov
sbb
xor
inc
in
rclb
mov
cmp
mov
pop
lahf
add
inc
test
cmpsl
adc
or
out
in
jecxz
adc
xchg
dec
push
fstp
arpl
in
push
mov
inc
movsl
xchg
imul
popf
push
je
xor
mov
mov
mov
fldl
adc
push
mov
leave
or
pop
out
cmp
stc
add
cmp
push
imul
fistpl
rorl
repnz
mov
fs
lds
mov
sub
fists
mov
sub
in
push
jecxz
fucomp
inc
mov
cltd
cmp
and
lods
aad
enter
clc
lret
pop
lds
negl
mov
cmp
movsl
sub
mov
mull
movsb
and
xchg
sub
dec
sub
not
mov
in
cmp
dec
and
loopne
shl
dec
inc
daa
lahf
inc
cld
popa
push
mov
popf
ret
or
into
pop
push
xor
mov
push
cs
hlt
rorl
fwait
dec
and
dec
xor
fincstp
inc
pop
lea
pop
hlt
sub
mov
hlt
aad
mov
xchg
popf
rcll
lock
mull
fists
std
cmpsb
jg
lea
clc
push
jle
mov
scas
ja
mov
lods
mov
jbe
jmp
aas
pop
rcl
loop
pop
cmp
dec
js
ss
pop
mov
xor
xchg
addr16
and
jae
lret
aas
stos
mov
cmp
xchg
cltd
fdivp
je
mov
fdivrs
push
lret
lods
out
inc
hlt
bound
xor
ret
insb
daa
mov
cmpsl
lcall
xor
and
leave
cmc
popw
int3
movsl
sbb
sbb
jle
sbb
pop
pop
mov
jp
imul
push
lock
cmp
leave
sbb
bound
jne
shr
jo
js
jae
fidivl
add
adc
and
leave
ja
mov
inc
ja
mov
mov
ret
test
mov
cmp
cmp
xchg
test
iret
mov
xchg
cltd
test
fistpl
mov
mov
sbb
fs
mov
scas
inc
ret
xor
jmp
mov
pop
daa
cmp
or
mov
mov
jo
lods
adc
xor
ljmp
popf
pop
jp
hlt
jno
mov
push
nop
in
and
inc
mov
fadd
fadds
mov
mov
popa
lds
movsb
push
xchg
daa
mov
xchg
mov
push
and
mov
cmp
jle
out
add
inc
xchg
sub
pop
mov
sbb
mov
dec
or
xor
mov
mov
jae
xchg
in
jbe
cmp
adc
das
hlt
in
jmp
dec
mov
xchg
push
or
xor
in
xchg
pop
push
xor
sub
mov
jnp
mov
xchg
cwtl
loopne
mov
sbb
mov
bound
add
jb
aaa
out
and
mov
cs
push
inc
adc
test
ss
mov
and
roll
or
mov
inc
icebp
test
insb
nop
rcrb
push
sub
jno
clc
mov
mov
cmpsb
mov
push
jns
and
jnp
sub
cmp
test
inc
sti
mov
push
xchg
push
cmp
inc
enter
push
loopne
test
jmp
xor
add
jg
shlb
mov
scas
mov
mov
sbb
hlt
adc
jno
xor
push
daa
dec
mov
jns
adc
inc
add
repz
adc
sub
sbbl
jae
sub
jecxz
pop
fildll
aad
or
push
or
inc
sub
jb
out
out
sub
stos
movsb
mov
out
mov
mov
adc
popf
ret
or
dec
test
sbb
mov
jno
mov
cli
into
sbb
push
rcr
gs
mov
imul
push
popf
aad
popa
cmpsb
or
loope
mov
fwait
mov
or
or
mov
jb
stos
mov
jmp
imul
push
mov
inc
push
es
imul
mov
dec
push
pop
out
ss
popf
jmp
add
jl
test
or
add
addr16
outsb
cmp
inc
cmp
ret
mov
cwtl
mov
faddp
lret
inc
ss
ljmp
dec
mov
enter
sbb
out
jecxz,pn
movsl
int3
xor
cmp
in
mov
or
dec
jecxz
rolb
rolb
mov
je
jmp
push
mov
arpl
inc
fwait
mov
sbb
imul
and
mov
jo
jmp
jmp
inc
lret
inc
xchg
sahf
xor
imul
mov
mov
lods
add
iret
fists
xchg
jnp
aad
out
mov
daa
loopne
sbb
bound
je
inc
sahf
mov
aas
sub
adcb
jns
cmp
jb
cmp
dec
mov
fiadds
cmp
shl
cmpsb
sahf
inc
lcall
add
jno
std
and
adc
pop
sbb
hlt
mov
jle
mov
ds
inc
test
mov
popa
dec
push
and
cmp
lods
call
inc
mov
add
xchg
pop
cmp
add
jae
adc
ja
ds
mov
dec
cmp
sub
pop
cmp
sbb
clc
mov
mov
mov
in
push
cmp
sub
pop
cmp
sbb
clc
mov
mov
mov
in
push
mov
cmp
or
call
mov
mov
in
push
cmp
sub
pop
cmp
sbb
clc
bound
xor
adc
push
inc
data16
data16
jns
push
cmp
out
mul
xchg
mov
inc
push
push
inc
data16
pushw
push
push
push
es
out
clc
out
xchg
cmpsb
xchg
push
dec
inc
jle
outsb
popw
push
push
push
ds
cmc
lcall
stc
loop
shl
cmpsb
das
push
cmp
data16
mov
push
out
icebp
lds
sub
mov
xchg
xchg
pop
jle
xchg
pop
test
cltd
sub
push
stc
mov
imul
sbb
or
push
xchg
mov
xorl
lea
push
sub
fdivp
jnp
xchg
mov
inc
test
push
jb
pop
pop
push
aaa
jbe
in
rcl
or
sbb
xchg
sub
lret
fstpt
stc
push
push
stc
imul
jo
xchg
adc
out
push
aad
pop
xchg
ret
pop
mov
imulb
ja
adc
fstl
cmp
pop
xlat
fwait
repnz
out
imul
cmpsb
push
dec
inc
data16
adc
push
push
es
es
into
imul
out
xchg
mov
sub
xor
jne
jo
imul
mov
xchg
mov
xor
ret
sub
aaa
or
jbe
xor
push
sub
pop
gs
mov
xchg
std
jmp
and
cmp
or
push
adc
push
push
es
out
mul
xchg
mov
inc
push
push
inc
data16
pushw
push
push
push
es
out
mul
xchg
mov
inc
push
jns
flds
adc
repz
out
xchg
add
lods
jmp
jge
ret
inc
fmuls
call
punpcklbw
cmc
sub
test
in
daa
dec
mov
mov
ja
ja
inc
push
ret
xchg
mov
xorb
adc
fildll
shr
sub
mov
popa
jns
push
scas
fmuls
addr16
mov
inc
jmp
xor
loop
ss
imul
mov
cld
jle
add
and
dec
inc
jno
hlt
add
dec
or
ljmp
loop
fs
pop
test
jecxz
xor
cmp
shl
pop
int3
or
lcall
xchg
pop
outsb
cli
mov
and
popf
adc
xor
jae
dec
setne
rcrb
andb
xchg
pusha
in
sub
aad
cs
and
push
mov
ret
nop
popa
push
rcll
test
fdivs
jl
fwait
in
imul
xlat
hlt
inc
mov
leave
test
lds
xorb
pop
sub
aas
les
imul
scas
dec
pop
dec
and
fwait
call
rorb
pop
mov
cld
mov
adc
xor
lcall
sub
jmp
inc
mov
cld
das
in
out
or
xor
dec
mov
xchg
filds
mov
stos
std
int
mov
sbb
xchg
shrl
push
cmpsb
xlat
rcl
mov
xchg
push
jbe
outsl
dec
xchg
out
dec
xchg
gs
and
mov
imul
jno
jl
jne
mov
loopne
or
jnp
in
mov
mov
flds
sbb
ss
popf
fcompl
sub
lret
push
lds
inc
mov
pop
movb
scas
adc
xchg
cmpsl
rorb
or
cmpl
test
aad
sbb
mov
xchg
jns
and
dec
lcall
aad
in
shrb
push
int
fisubrs
pushf
push
lcall
mov
jne
movsl
icebp
clc
inc
dec
push
in
dec
shl
shrl
aad
inc
nop
jl
mov
cmpsb
sub
fwait
dec
lods
fidivrs
adc
pop
jns
sub
mov
cmpsl
push
stos
jne
jge
insb
push
push
inc
sahf
sub
sti
mov
and
xchg
push
dec
mov
ja
stc
lcall
cltd
stc
lret
lahf
or
insb
jo
xchg
out
loop
lret
xchg
mov
mov
sahf
scas
in
loope
bound
inc
sbb
xchg
adcl
xorl
adc
in
xlat
jp
jno
mov
pop
mov
jge
xchg
scas
test
iret
test
xor
jne
addl
jmp
inc
mov
jmp
xor
ja
loope
jmp
sub
imul
or
cmpb
xor
pushf
jp
repnz
rcll
pop
loopne
xchg
mov
fxch
popl
xchg
mov
shll
out
popa
mov
repz
jno
mov
adc
scas
push
mov
mov
mov
insb
je
ret
stos
pop
insl
movl
adcb
pop
int
enter
aas
andb
je
cmc
mov
in
sti
xor
mov
cwtl
clc
pop
ss
adc
or
pop
aas
mov
jne,pt
add
mov
or
dec
jb
or
cld
icebp
fildl
gs
adc
pop
fbld
mov
xor
mov
movsl
les
xchg
dec
dec
adc
test
cmp
stos
incl
jnp
call
sub
add
mov
sub
mov
dec
pop
and
outsl
pop
jne
fs
mov
cwtl
ja
setns
jne
in
and
cmpsl
les
mov
hlt
bound
sbb
or
repnz
dec
nop
cmp
fiaddl
mov
push
mov
out
rcll
icebp
add
sub
and
xchg
dec
imulb
xchg
mov
push
aam
mov
lret
xchg
int
add
insb
es
sub
test
call
aad
loopne
inc
xor
fstl
std
pop
mov
scas
popf
out
inc
int
xlat
push
jns
movsl
test
cmp
sub
push
jp
movsl
in
pop
sbb
xor
mov
push
aas
idivl
jg
int3
pushf
out
or
in
loopne
push
fidivrl
shrl
dec
mov
cli
fnstenv
cmp
data16
push
jbe
pop
int3
mov
lret
fsubrl
int
in
mov
aaa
mov
sub
mov
or
jne
ss
dec
int
sbb
cmp
enter
psubd
and
mov
sub
push
mov
cmpl
loopne
fs
pop
lret
mov
dec
jle
ret
cs
call
mov
aad
jns
das
das
mov
lret
aam
jmp
push
icebp
in
and
idiv
arpl
loop
stos
or
push
fwait
je
adc
popa
sbbb
pop
pop
test
orl
lcall
xor
loop
adc
in
xchg
fisttps
jg
xchg
mov
int
or
dec
sti
sbb
fsubrs
out
fisubs
xchg
cmp
andl
and
mov
lods
cmp
or
xor
sub
jno
push
nop
sub
inc
out
into
adc
jg
xchg
xchg
xor
loop
mov
cmp
insl
ja
sti
sub
dec
sbb
mov
mov
imul
inc
mov
les
and
jno
inc
push
lahf
in
je
or
cmp
push
sbb
lret
in
test
daa
cltd
xchg
xchg
or
push
imull
or
sti
mov
sarb
test
jnp
lods
and
pushf
xor
mov
clc
pop
out
jmp
mov
pushf
shll
pop
cmpsl
xchg
xchg
lods
repz
mov
add
mov
out
addr16
jne
xchg
mov
add
fldl
lret
mov
int
repnz
xor
push
push
sub
cmc
pop
jge
mov
adc
pop
fstpt
dec
sbb
inc
xor
loope
in
jecxz
in
lods
sbb
insb
or
gs
aad
cs
addr16
cwtl
jmp
mov
cmc
sbb
lds
and
push
stos
ret
bound
cmp
push
adc
jecxz
add
pop
mov
xchg
cmp
add
mov
sbb
push
inc
or
prefetchnta
arpl
stos
inc
aad
lret
lods
mov
jbe
lds
test
xor
jne
es
ds
cmp
cmp
mov
arpl
subl
mov
scas
les
stos
or
ds
xchg
pop
pop
pop
lock
movsl
jge
and
pop
scas
es
stc
dec
xchg
test
or
push
jge
cmp
push
int
cld
fisubl
cmp
cwtl
aas
push
das
sbb
inc
xlat
sbb
loop
fisttpl
pop
stos
xchg
dec
mov
fldcw
xor
mov
call
push
jp
inc
pop
jecxz
cmp
cmpsl
mov
icebp
push
xchg
add
push
xchg
scas
jle
pushf
dec
cld
cltd
push
scas
dec
fcoms
fsubrl
out
aaa
cli
jne
jecxz
aaa
dec
rcl
xchg
iret
arpl
xchg
aad
xlat
mov
adc
lret
add
sub
or
flds
xchg
mov
pop
cmpsl
mov
rcrl
xchg
fidivrs
sti
cs
lods
rclb
mov
and
cmp
pushf
cmp
xor
test
or
cli
sub
adc
test
into
in
mov
and
imul
add
xorl
pop
xchg
popa
repnz
inc
pop
xchg
aad
fs
lret
xchg
adc
pushf
xchg
add
xor
stos
std
and
es
in
xor
cmpsb
xlat
sbb
movsl
sbb
ja
inc
xor
js
xor
dec
jae
mov
repz
lds
ss
iret
and
es
pop
stc
addr16
vpsadbw
sti
dec
dec
dec
out
or
push
xchg
int3
mov
push
dec
jb
shlb
lahf
pop
sbb
sub
sbb
sarl
inc
mov
das
lcall
sub
pusha
pop
mov
subl
das
dec
add
inc
pop
cld
mov
mov
les
xchg
in
mov
test
xchg
fmuls
add
shlb
andl
inc
push
daa
rcrl
cmp
xor
xchg
mov
popf
push
fisttpll
mov
or
adc
pop
xorb
jl
imul
jo
mov
popa
push
imul
push
or
adc
lods
or
mov
dec
adc
loopne
lcall
mov
mov
call
xlat
pop
lods
lahf
icebp
shlb
or
int
mov
cmpsl
jecxz
sarb
push
dec
dec
sbb
stos
push
or
or
fnstcw
fidivs
rcrb
cmp
rcll
in
sub
decl
mov
gs
test
sub
repnz
push
mov
pop
jae
in
cs
movsb
pop
xchg
xor
outsl
lds
pusha
aad
mov
cmp
out
jecxz
ja
cli
test
inc
movsb
fstl
sarl
pop
jmp
popf
imul
insl
or
daa
fsub
test
fstps
sahf
inc
mov
and
mov
fs
cmpsb
mov
ror
jp
inc
cmp
ljmp
push
lahf
addb
out
sbb
inc
mov
fs
icebp
les
jnp
out
lods
xchg
mov
jae
xchg
add
mov
dec
outsw
sub
sub
xchg
mov
or
flds
mov
sbb
or
aad
dec
mov
jns
xchg
outsb
jae
test
fwait
in
stos
fdivrl
insl
imul
repnz
jno
sbb
jo
adc
jo
nop
add
pop
mov
jl
cmp
ficoml
add
jl
insb
adcl
xchg
mov
add
gs
jb
add
or
mov
sti
je
orl
jp
and
xchg
lret
int3
hlt
stos
inc
imul
iret
push
pop
ja
adc
sub
push
xor
lods
mov
push
fs
jne
mov
pop
sub
add
insl
sbb
adc
mov
imul
les
and
dec
add
mov
sub
ret
sahf
cmp
repnz
push
js
cmp
cmp
stos
insb
push
mov
imul
jae
mov
and
lods
pop
and
inc
and
cli
mov
and
out
adc
insl
pop
gs
test
lcall
xchg
pop
add
mov
and
pop
adc
adcl
mov
mov
mov
ljmp
mov
cmc
xchg
ds
xchg
cmp
pop
test
add
outsb
stos
add
popa
scas
aam
shll
xchg
popf
push
inc
pop
dec
pop
mov
movsb
subb
ret
sub
movsb
mov
scas
dec
or
out
or
aad
addl
repz
movsb
insb
test
xchg
add
sbb
mov
inc
popf
lds
sbb
aas
call
cmp
mov
rorb
xor
orb
dec
mov
adc
fcoml
pop
push
sub
enter
outsb
push
jae
mov
jns
push
xchg
jp
dec
xchg
fwait
jl
push
sub
add
fisttpll
push
mov
and
mov
pop
mov
popf
add
xlat
sbb
and
call
xchg
jge
mov
ret
movsb
or
out
mov
dec
push
popf
mov
lods
clc
andb
sbb
in
mov
mov
add
lea
std
sbb
jb
insb
inc
mov
push
mov
imul
les
or
push
insb
mov
ja
jle
mov
pop
lahf
in
mov
dec
adc
fadd
mov
pop
adcl
sti
aas
mov
sbb
jno
in
mov
insb
add
lea
adc
std
inc
stos
bound
fnstsw
xor
cmp
pop
xor
xor
pusha
fs
push
mov
mov
and
mov
ficoml
sahf
xchg
pop
out
imul
sub
mov
mov
outsb
std
test
mov
mov
stos
psubsw
fcmovne
aam
push
imul
sbb
cmpsb
cmp
clc
jnp
imul
stc
lods
cmp
inc
add
xor
mov
arpl
mov
add
idivl
lret
into
ss
fwait
ret
mov
pop
imul
jnp
ja
lock
repnz
je
push
xlat
in
add
sub
inc
and
aad
inc
mov
inc
imul
xor
outsb
jl
sbb
or
fidivrl
inc
push
pop
mov
fidivl
fidivl
or
sbb
jns
add
cmp
js
std
mov
inc
and
add
mov
mov
imul
and
es
in
mov
loopne
push
add
iret
jle
cli
add
inc
sub
in
icebp
mov
cmp
nop
out
hlt
int3
rcll
test
or
dec
inc
adc
lcall
lds
xchg
push
lret
pop
and
mov
clc
scas
gs
mov
inc
push
es
scas
inc
rolb
xchg
lcall
popw
push
cmp
mov
mov
mov
adcl
imul
xor
bound
inc
lahf
push
aaa
clc
lea
add
mov
dec
adc
pop
pop
sti
jmp
push
out
push
jg
dec
cmp
jle
mov
adc
ficoml
mov
adc
sub
imul
dec
adc
add
mov
push
jno
popf
sub
pop
loopne
pop
je
cmpsl
js
das
jle
iret
sti
std
addl
mov
repz
roll
mov
scas
fistpl
loope
mov
xor
add
push
push
sub
xlat
push
jb
jnp
in
sub
adc
jo
cmp
mov
aas
or
out
fnstsw
xor
or
in
add
test
adc
jo
das
daa
xor
leave
adc
scas
sub
dec
js
mov
sub
sbb
roll
pushf
xchg
mov
sub
mov
je
in
dec
data16
nop
xor
push
xchg
add
push
addr16
test
enter
lahf
aaa
adc
das
jno
xchg
xor
das
mov
enter
imull
cmc
mov
inc
int
pop
xchg
cmp
pusha
mov
jp
jle
pop
scas
pop
mov
or
lock
mov
cld
push
shl
add
cmpsb
jnp
sbbb
dec
sub
mov
pop
mov
sbb
stos
jae
stos
dec
stos
insl
clc
sahf
pusha
inc
pusha
repz
jl
push
pop
mov
xor
cmp
hlt
imul
sbb
inc
stos
test
movsb
jno
xchg
mov
into
xchg
stos
rorb
lock
popf
in
mov
cmp
test
xor
jo
sub
xchg
or
out
lahf
fstps
push
fnstenv
xchg
fs
cmc
add
fdivr
xor
insb
xlat
push
std
dec
out
push
jge
jmp
mov
xchg
fsubrl
aaa
and
out
js
scas
adc
clc
sub
or
nop
jmp
cmp
pop
loopne
jmp
push
arpl
push
pop
int
insb
ds
push
mov
cld
loope
or
pushf
popf
fcmovu
xlat
mov
fs
cmpsl
outsb
add
ja
dec
lret
mov
faddl
jno
mov
cmp
mov
insb
cmp
stos
xchg
dec
movsl
dec
and
dec
mov
push
aam
ss
leave
dec
xlat
rol
push
jge
jns
adc
cmpsl
inc
leave
andl
inc
mov
or
idivl
jg
pushf
lcall
dec
ret
je
pop
xor
xchg
incl
je
adc
sub
or
mov
jecxz
push
push
push
outsb
je
std
jge
or
lahf
or
test
out
cmp
xchg
sub
mov
out
inc
out
test
inc
inc
fmul
cmp
ds
imul
pop
loopne
jb
pop
in
shrl
lret
mov
fs
in
inc
jl
inc
xor
ss
sub
pop
push
cltd
mov
adc
pop
sbb
ss
jae
fists
repz
popa
sub
add
jge
push
lods
popa
inc
rorb
mov
ds
or
push
sbb
add
mov
jae
mov
xorb
and
imul
xchg
fwait
mov
cmp
scas
push
loop
lcall
dec
jns
inc
push
sbb
andb
aaa
fwait
add
cli
sub
mov
adc
aam
enter
dec
inc
clc
jno
call
ret
mov
testb
sub
xchg
in
ja
ret
push
fimuls
stos
push
add
jne
pop
mov
ret
and
std
lcall
leave
sub
mov
jl
dec
inc
mov
xor
or
popa
repz
mov
mov
movsb
shlb
push
xlat
lods
in
mov
imul
fstpl
aaa
data16
movsb
outsb
mov
pop
in
add
sbb
mov
leave
in
dec
insb
mov
pushw
addr16
fwait
and
leave
mov
mov
hlt
popf
pop
mulb
jo
repnz
pop
fcomps
call
adc
jns
andb
lcall
push
mov
outsl
mov
mov
data16
test
mov
sub
pop
repz
xor
aad
cli
fwait
xor
ss
insb
into
pop
adc
cld
add
mov
rcll
sub
and
pop
les
sbb
add
jecxz
pop
inc
inc
imul
push
jg
aas
cmc
dec
or
push
and
inc
pop
xchg
jo
in
sub
cs
push
push
shlb
and
xchg
sub
in
out
enter
call
xchg
or
fildll
inc
fistpl
dec
adc
int3
add
or
inc
imul
test
jno
jge
or
jae
dec
lahf
sub
nop
xlat
xlat
push
mov
lock
xchg
mov
sub
sahf
sti
dec
stos
mov
jge
pusha
mov
adcb
frstor
icebp
mov
negl
fmull
dec
nop
sti
adc
xorl
scas
push
mov
lods
test
cmp
and
xchg
adc
jbe
cmp
cmpsl
shl
enter
fdivrp
aam
rcll
and
out
inc
push
fldenv
cs
dec
lret
and
adc
cli
stos
es
std
sbb
ficoml
jge
adc
dec
lcall
add
cmpsl
les
js
icebp
sub
or
xchg
push
jle
jl
push
test
jmp
fistps
scas
pop
test
iret
mov
test
inc
test
mov
in
insl
lea
inc
fcoms
jnp
dec
cmp
fiaddl
fdivl
or
bound
ljmp
stos
sub
fcompl
push
imull
scas
outsl
mov
mov
mov
cmp
out
xchg
imul
sbb
and
lock
orb
pop
push
popf
cmp
dec
popf
hlt
jb
sub
mov
jbe
push
vpmacssww
pop
lcall
xchg
shlb
imul
sub
iret
xchg
divb
mov
pop
sarb
cmp
pop
mov
adc
shll
cmp
cmp
and
lea
mov
dec
pop
stc
pop
inc
xchg
pop
mov
lret
cwtl
inc
cmpsb
sub
fists
adc
inc
mov
push
jmp
inc
sbb
xor
mov
add
mov
inc
or
xchg
ret
dec
push
cmp
mov
stos
cltd
dec
in
fscale
push
inc
jmp
jge
jmp
aad
cli
mov
sub
pop
push
pop
mov
orl
inc
mov
mov
mov
orl
dec
push
hlt
or
pop
cmp
stos
gs
insl
add
lret
mov
xchg
leave
mov
sub
das
xor
cmp
out
test
std
ret
ja
pushw
push
push
push
es
out
mul
xchg
mov
inc
push
push
inc
data16
pushw
push
push
push
es
out
mul
xchg
mov
inc
push
push
inc
data16
addr16
push
push
push
es
ss
out
mul
xchg
mov
inc
push
push
inc
addr16
bound
push
xchg
sub
insb
dec
div
xchg
icebp
push
push
jns
dec
dec
pop
cs
cmp
pushf
insl
int
xchg
insl
xorl
sub
xor
insb
std
jl
pop
int
dec
lods
cmp
pushf
insl
in
jge
dec
int3
pop
fsubrl
sub
sbb
paddw
mov
mov
jae
sbb
leave
iret
sahf
push
in
clc
sbb
sub
sbbl
je
imul
jbe
ljmp
dec
test
std
inc
leave
mov
pop
shl
std
lea
pusha
inc
addr16
add
inc
rclb
leave
aam
sbb
sbb
jmp
and
rcll
cmp
or
movsb
mov
outsb
xor
test
popf
cltd
std
jl
jl
mov
pop
icebp
cld
push
mov
xchg
int3
jge
mov
pop
and
arpl
adc
std
or
fnsave
rclb
jl
int3
cmc
add
pushf
fisttpll
dec
fcomps
add
icebp
xor
mov
jecxz
xchg
xchg
sbb
sahf
sub
imul
mov
dec
jbe
imul
in
add
lds
daa
and
adc
imull
dec
fnstsw
inc
leave
dec
mov
add
pop
mov
inc
out
inc
call
add
xor
pop
mov
add
sbb
mov
push
out
pop
lea
pop
xchg
push
xchg
adc
push
fldcw
jmp
dec
int3
pop
fsubrl
or
sbb
insb
std
jl
dec
fstpl
cmp
pushf
insl
in
jge
dec
int3
pop
fsubrl
or
sbb
insb
std
jl
dec
fstpl
fwait
cmp
lods
fisttpll
and
xor
mov
mov
jo
sbb
popa
jnp
push
sahf
mov
inc
es
and
sarb
add
gs
std
mov
add
in
cmp
seto
push
scas
add
mov
lret
jecxz
jb
push
xor
inc
repz
push
jp
addr16
xor
int
mul
mov
xchg
mov
adc
into
xor
hlt
push
adc
or
lods
mov
cld
inc
or
dec
cs
jmp
xchg
inc
xchg
dec
neg
sub
pop
adc
movsl
xchg
push
cmp
cs
mov
lock
push
mov
ja
lock
aad
stc
fsubrs
outsl
and
sbb
pop
xlat
and
cmp
jmp
cmp
dec
call
push
xor
loopne
fistps
mov
lea
mov
cmp
daa
out
sub
mov
in
dec
lods
mov
sub
cli
inc
push
lcall
insl
lods
shrl
gs
mov
and
cmc
sbb
push
xchg
xchg
lods
loope
mov
movswl
cli
jl
ud0
shrb
popf
push
gs
or
add
js
xchg
pop
test
scas
dec
push
movsb
test
int
lahf
mov
push
sub
dec
ds
test
outsl
xor
repnz
sbb
lods
dec
push
inc
pop
rclb
mov
outsl
and
shlb
jmp
les
inc
fcmovb
outsl
test
and
int
and
hlt
outsl
add
sbb
push
mov
and
sub
mov
jbe
sbb
jecxz
xor
mov
shr
fimuls
ret
jmp
lahf
push
cld
leave
cmp
fiaddl
xor
mov
inc
sar
dec
xorb
sub
in
aas
mov
aad
ret
dec
or
inc
pop
dec
lods
ret
out
inc
shr
out
hlt
insb
pop
push
jne
fnstenv
push
dec
mov
imul
add
push
push
xchg
movsl
aas
xor
cld
dec
sti
mov
stos
outsb
arpl
imul
rcrl
pop
dec
mov
mov
dec
push
pushf
or
push
mov
mov
xor
shlb
jp
push
or
mov
pop
dec
aaa
aaa
std
loopne
ret
xor
int
jmp
pop
inc
pop
mov
pop
or
popf
pop
adc
pop
aad
shrb
outsl
cmp
pop
popa
dec
push
fcmovnbe
and
inc
clc
popa
sub
lock
mov
push
arpl
lea
mov
push
jecxz
lahf
inc
cmpsl
outsl
fmull
add
ja
test
inc
lret
xchg
mov
jb
test
std
jns
jbe
sbb
aas
dec
dec
sti
addr16
sti
push
xlat
add
dec
push
adc
lea
out
daa
mov
push
lahf
cmp
jno
mov
cmp
cmp
pop
push
inc
nop
out
mov
xchg
mov
mov
pop
xor
xor
mov
bound
fucomp
jmp
mov
sub
call
xchg
pushf
movsl
cld
adc
mov
and
inc
jno
pop
push
and
popf
in
cmpsb
sub
jg
nop
mov
out
or
stc
mov
shll
jo
pusha
inc
fwait
les
pop
mov
cli
mov
inc
les
imul
adc
movsb
lret
jecxz
popf
mov
test
sbb
mov
scas
scas
mov
imul
outsb
shll
ljmp
pop
and
mov
fisubl
mov
mov
jne
lock
mov
ret
cmp
cmp
hlt
cs
mov
add
mov
xlat
xlat
mov
mov
jbe
xor
in
adcb
in
out
inc
test
test
xor
xchg
stc
notb
mov
int3
mov
pop
xor
cld
jmp
clc
and
into
pop
leave
imul
pusha
push
insb
out
stc
stos
ss
lods
xor
aas
or
and
inc
xor
adc
adc
fisubrl
imul
mov
xchg
jecxz
lock
mov
mov
sahf
inc
jge
push
mov
xchg
cmp
or
mov
in
scas
movsl
sbb
dec
xchg
out
xchg
fadds
fisubrs
icebp
ja
in
mov
sub
mov
or
jne
push
xor
mov
and
and
out
fisubs
mov
sbb
mov
and
call
and
adc
add
dec
ficomps
pop
js
jp
push
das
push
das
fs
hlt
repz
pop
icebp
push
fdivl
add
aaa
jne
popf
in
in
into
out
lods
cmpsb
ss
fmull
cmpsb
std
xchg
jno
mov
dec
jl
cmpsb
lods
jmp
pop
and
mov
loope
popa
push
cmpsb
mov
xor
sub
ffree
push
mov
and
out
or
adcb
sti
sbb
xor
adc
pop
pop
pop
aaa
mov
data16
pop
sub
dec
es
push
jl
push
push
mov
out
mov
cmpsl
call
cmp
repz
mov
jmp
in
pushf
and
jnp
jp
pusha
inc
and
xor
nop
pusha
dec
cld
adc
mov
sbb
cmp
mov
dec
mov
xchg
dec
test
in
add
sarl
adc
bound
fs
test
jns
aas
shl
sbb
mov
mov
xchg
push
mov
pop
inc
lds
lods
pop
inc
jne
xchg
fmul
and
add
jbe
out
add
data16
jns
hlt
pop
push
cli
dec
dec
iret
scas
repnz
xchg
ljmp
inc
sbb
ret
or
or
ret
sub
vpunpcklqdq
jle
add
sub
inc
jnp
aad
xor
fdivs
mov
push
mov
pop
inc
aam
or
js
pusha
notl
push
mov
adc
incl
shll
scas
and
mov
xor
mov
push
lret
sub
mov
test
push
jbe
sub
rcrl
pop
pusha
cli
out
psubd
jge
andb
xlat
adc
pop
push
fimull
inc
aad
xchg
and
mov
xor
xor
clc
sarb
arpl
xchg
or
test
into
cmpsl
sub
shlb
test
xchg
jo
lcall
and
xchg
jno
in
and
insl
dec
jle
and
and
bound
add
in
cmp
dec
or
sbb
dec
mov
dec
jno
jae
cmp
pop
int3
mov
ljmp
sbb
and
mov
push
pop
jo
bswap
xor
shll
andl
popa
push
mov
cmp
arpl
cmpsb
ret
jo
mov
mov
push
arpl
jno
popf
pop
sbb
jmp
testb
adc
cld
out
addr16
lock
mov
adc
jg
xorl
or
mov
sbb
mov
push
rcll
inc
push
add
ret
xor
sub
test
ja
push
jns
inc
subl
push
push
xchg
dec
mov
mov
ss
imul
mov
dec
daa
xor
fdivl
lahf
test
cmpsb
cltd
xchg
xor
notl
and
fisttpll
test
in
test
pop
and
js
xchg
test
pop
loopne
in
push
sub
arpl
fs
xor
insl
je
push
jno
lret
sbb
adc
mov
sbb
jl
mov
mov
out
iret
gs
mov
iret
cltd
scas
dec
adc
push
loopne
or
xchg
mov
sbb
jle
xchg
jecxz
ljmp
xchg
bound
outsl
js
dec
jns
lcall
test
xlat
imull
mov
gs
or
stc
add
sbb
call
mov
dec
fdivrs
xor
lods
xorb
sub
jo
xor
xchg
push
add
pop
push
mov
or
lods
loopne
lods
test
push
int
cmpsb
pop
xorb
int3
push
out
out
pusha
mov
sbb
in
inc
add
leave
out
push
repnz
jb
outsb
push
xchg
or
xchg
jge
xor
or
sbb
fidivl
repz
sbb
ret
fisubrl
jnp
std
fimuls
dec
and
cli
push
mov
int3
sub
dec
inc
xor
cmc
xchg
sbb
mov
fstl
orl
sub
pop
rolb
repz
mov
sub
inc
jns
lds
sbb
cli
and
fprem1
and
ror
in
jle
lock
pop
lock
lea
jle
push
pusha
pop
cmp
enterw
enter
cmp
pop
or
sti
imul
es
xchg
jno
xchg
lret
xor
out
lcall
adc
andb
push
mov
sub
and
test
lea
je
push
cmpb
out
or
jbe
xchg
mov
mov
bound
dec
mov
insb
fcmovnu
dec
or
add
mov
stc
cmp
sti
adc
pop
pop
mov
in
fcompl
test
push
fwait
dec
inc
or
xor
ja
in
movsb
pop
loop
xor
rorb
mov
jo
dec
rcl
mov
jne
mov
cli
pusha
push
adc
int
lods
popf
ds
and
pop
stos
shl
movsl
in
shlb
jle
mov
adc
in
pop
pop
xchg
xlat
push
test
mov
push
lret
add
leave
push
cmp
test
adc
imul
int3
jbe
jno
das
test
lea
add
cltd
mov
add
es
adc
pop
fiadds
cmp
sbb
adc
push
adc
cmp
pop
lret
mov
fstps
xor
out
sub
or
pop
pop
add
sbb
pop
jbe
dec
push
xor
outsb
pop
inc
cs
int
lods
daa
std
cmc
into
int3
pop
push
sbb
js
push
adc
lret
subl
sbb
rolb
ds
les
insl
push
push
fimull
test
push
push
jo
mov
push
or
jbe
faddl
loopne
pop
sub
xor
fbld
sbbb
mov
stos
shrb
xchg
jno
out
mov
sbb
jns
push
imul
cmp
idivb
xchg
push
pushf
sahf
push
pop
push
sbb
sub
int
sub
xchg
xchg
jle
lcall
rclb
or
ja
xchg
adc
and
nop
fiadds
sub
push
add
and
add
and
test
and
in
data16
or
shrl
jnp
mov
add
test
cmp
sbb
fstpl
cmpsb
xchg
dec
cwtl
bound
mov
sub
and
jl
xchg
out
add
xchg
data16
fstpt
mov
idivb
in
das
push
ds
call
cld
inc
mov
testl
and
enter
ljmp
outsb
xchg
pop
or
push
rol
xor
pop
pop
pop
je
jle
cmp
add
inc
pop
push
jno
mov
jns
stc
adc
adc
push
into
mov
iret
and
ret
jo
arpl
mov
jns
gs
sbb
stc
sub
dec
xchg
fdivs
mov
dec
mov
mov
mov
stos
inc
fdivrs
cwtl
xchg
pop
ss
lds
hlt
repz
movb
aam
fcompl
in
xor
or
jmp
dec
inc
es
pusha
cmp
pop
dec
pop
push
or
push
rol
push
lds
pop
jl
stc
sahf
cmp
jge
lds
adcb
jbe
les
dec
pop
or
sub
lds
fwait
cld
shrb
mov
iret
xchg
fisubl
add
stos
xor
sahf
jae
std
int3
lods
ret
pop
enter
cmp
bound
adc
adc
cmp
cmp
jnp
sub
mov
fs
fmull
mov
leave
inc
jbe
jmp
daa
xor
jo
mov
in
cmc
cmc
dec
add
orb
xchg
pop
scas
ret
pop
dec
mov
sub
imul
ja
filds
rcrl
and
cmpsl
or
je
test
je
loop
pop
xor
inc
loop
mov
fcoms
std
daa
mov
outsb
shlb
adc
call
arpl
and
adc
dec
lods
dec
add
pushf
lods
jns
lock
jp
mov
or
scas
xchg
xchg
sarl
imul
test
fistpll
into
pop
mov
fs
jg
lcall
mov
jnp
out
js
dec
aaa
push
xchg
or
or
jp
mov
sti
xor
sbb
adc
lock
jp
ljmp
mov
mov
add
dec
nop
addr16
add
pop
and
outsb
clc
aas
or
ds
lahf
mov
mov
or
mov
mov
inc
aad
rol
ja
lea
and
xchg
into
adc
cmp
fstpl
xor
or
cmp
sub
test
fstps
dec
xchg
notl
push
lea
jmp
in
cmp
dec
mov
movsl
sbb
xor
dec
neg
addr16
mov
push
xchg
dec
push
or
pop
dec
adc
sahf
pop
daa
or
rorl
inc
lahf
mov
pop
push
dec
sub
mov
cmp
jb
and
aad
lds
leave
sub
adc
iret
das
daa
adc
pop
nopl
fld1
push
mov
mov
out
push
inc
push
loope
orb
test
pop
std
imul
enter
sbb
mov
ret
sarl
loopne
mov
mov
imul
popa
stc
lahf
sub
faddl
push
nop
outsl
mov
and
stos
and
outsb
fs
mov
add
inc
notl
push
aas
int
adc
and
mov
lret
repz
rclb
int3
cmp
nop
in
daa
mov
mov
les
out
je
push
jne
mov
cmovb
imulb
cmp
hlt
aas
dec
arpl
pop
dec
arpl
xor
or
enter
popa
and
test
movsl
cld
or
add
lds
jbe
inc
jmp
adc
into
aad
mov
out
leave
loopne
cmp
in
jle
inc
mov
loopne
das
imul
add
pop
inc
lea
into
mov
adc
jo
ss
dec
jge
aaa
fistl
jns
cmp
jne
rcll
mov
sub
in
xchg
sbb
add
pop
add
sub
mov
enter
jno
ds
add
fisubrs
dec
push
and
push
das
aam
or
push
ljmp
add
mov
ja
scas
adc
mov
ja
xor
jp
sub
pop
xchg
pop
pop
and
mov
out
data16
mov
shlb
inc
std
inc
push
sub
or
mov
cmp
or
or
jbe
dec
sbb
imul
pop
enter
and
dec
add
stc
ds
dec
popf
aaa
movl
out
xor
in
adc
sbb
xchg
xchg
sub
adc
dec
xor
adc
cmp
sti
in
sbb
nop
jns
insl
and
xor
movsl
and
mov
push
ds
pop
and
or
mov
cld
inc
sbb
mov
cld
ljmp
out
mov
call
dec
or
lds
lahf
pop
sbb
sbb
mov
inc
popa
sbb
sbb
adc
pop
mov
nop
push
stos
mov
lcall
mov
xchg
and
aaa
adc
scas
jg
jle
shll
xchg
data16
jge
in
in
sti
pop
incl
popa
xor
adc
jnp
fisubs
icebp
outsl
in
cltd
das
arpl
in
sub
push
popf
xor
out
ja
cmp
mov
lods
daa
stos
repz
outsb
dec
fs
movsl
fcoms
or
scas
je
in
mov
jne
nop
ja
ljmp
inc
mov
sbb
adc
fildll
lea
fidivrs
ja
xchg
adc
dec
add
icebp
xchg
cmpsl
test
sbb
mov
sbb
fldl
int3
xchg
leave
cmp
push
fwait
xor
inc
xchg
inc
movsl
mov
sahf
cmpsl
shrb
pop
fsts
mov
xchg
scas
xchg
mov
mov
cmp
cltd
sbb
sbb
cmpsl
shll
mov
dec
je
and
cs
and
inc
icebp
les
rolb
std
cmc
push
rcrl
fdiv
xchg
inc
in
add
or
xchg
pop
les
test
out
rcll
cmp
lods
loop
mov
pop
jmp
test
xchg
push
movsb
pusha
frstor
rol
add
negb
jp
or
out
sbb
movsb
pop
arpl
out
mov
adc
jo
out
daa
sub
xor
push
push
or
xor
cwtl
aam
movsb
mov
jne
or
repnz
imul
leave
fs
sub
in
arpl
cmpsl
pop
mov
hlt
je
lods
cwtl
mov
test
cmp
out
insl
cmpsl
rcrb
icebp
ret
into
and
adc
cmc
mov
mov
loope
in
cmpsb
orb
cmp
in
dec
mov
enter
icebp
fnstsw
jmp
pop
pop
lret
pusha
shll
sub
pop
mov
testl
mov
dec
mov
pop
lcall
dec
test
push
cld
mov
xor
clc
je
dec
int3
outsb
adc
es
rol
mov
imull
scas
cmp
and
jnp
xchg
xchg
in
push
sub
ds
in
add
mov
dec
mov
in
mov
shl
enter
jecxz
push
fsubr
jo
repnz
pop
xchg
imul
idivl
mull
or
xchg
enter
rclb
cmp
xchg
inc
outsb
out
jbe
mov
mov
pop
mov
push
mov
cs
mov
js
fistpll
mov
movsb
inc
test
loopne
pop
in
pushf
pushf
fldt
xchg
hlt
in
cmp
in
and
int
dec
outsb
jle
gs
push
enter
push
dec
jb
out
add
out
popa
call
lahf
lret
mov
hlt
pop
pop
lods
push
mov
add
mov
fistpll
bound
add
xor
xlat
lods
xor
xchg
loopne
stc
add
lret
or
mov
loopne
push
inc
inc
data16
ret
jbe
in
hlt
push
popa
mov
stos
jg
jl
jg
lret
fdivr
inc
pop
iret
cmpb
lcall
xor
out
icebp
sahf
lahf
jae
aaa
push
lret
push
jl
sub
sahf
cltd
jns
xchg
mov
or
xchg
pushf
adc
mov
dec
loop
mov
inc
mov
cmp
imul
fnsave
push
js
cli
add
push
ret
adc
add
call
push
gs
js
sbb
add
popa
push
fldenv
dec
gs
in
pop
fidivs
inc
pop
mov
and
stc
push
shrb
ja
sbb
cmc
ds
jmp
rorl
mov
lret
stos
lock
sbb
push
and
mov
xchg
mov
icebp
mov
push
hlt
fs
xor
add
fs
scas
sub
push
jp
scas
jne
inc
xor
pop
xlat
daa
pop
mov
pop
andl
subl
gs
dec
xor
sbb
cli
pop
and
arpl
sbb
adc
xor
mov
jecxz
rcr
cwtl
sub
lods
dec
stc
xchg
jmp
fimull
enter
enter
inc
test
jecxz
mov
sub
inc
ss
xchg
jbe
gs
cmp
pushf
js
fistpll
jo
sarl
xor
or
jne
sub
lods
inc
dec
bound
sub
mov
xchg
call
lret
cmp
in
mov
sub
mov
in
push
das
movsb
bound
nop
ret
in
push
and
imul
icebp
int
xor
push
es
jg
push
adc
ljmp
test
adc
fs
jo
add
sub
lret
lods
insb
ds
jo
jle
push
popa
push
daa
ret
sub
shll
or
cmovo
xchg
or
test
mov
mov
jbe
iret
adc
out
mov
pop
mov
push
and
movsl
cltd
movl
pushf
insl
in
jge
dec
int3
pop
fsubrl
or
sbb
insb
std
jl
dec
fstpl
cmp
pushf
insl
in
jge
dec
int3
pop
fsubrl
or
sbb
insb
std
jl
dec
fstpl
or
pushf
std
in
jge
dec
int3
popf
fsubrl
or
sbb
int
xor
mov
insl
in
insl
cld
dec
int3
fstp
lods
sub
xchg
daa
or
imul
and
in
mov
add
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
inc
inc
movsl
test
cwtl
cmp
mov
pushf
adc
fnstsw
popf
sub
js
push
pop
std
dec
add
cwtl
cmp
fs
fdivrs
fnstsw
popf
or
pop
mov
dec
xlat
sub
mov
adc
rorb
inc
fdivrl
das
addl
dec
mov
dec
ffree
iret
sbb
les
mov
fidivl
dec
push
test
push
add
dec
mov
sbb
cwtl
stc
mov
sbb
push
sbb
dec
stos
insb
pop
jo
pop
mov
mov
rcrb
jle
inc
int
bound
xor
push
dec
js
mov
dec
clc
mov
aaa
cwtl
into
js
sub
fists
mov
std
or
sub
xor
cmp
mov
imul
mov
imul
test
out
adc
fstl
ds
push
orb
call
jg
pmaxsw
mov
nop
in
pop
cltd
es
imul
mov
xchg
sbb
in
jle
insl
std
insb
fsubl
pop
mov
cltd
sbb
jmp
and
cmp
add
fdivrl
jge
outsl
mov
cmp
pop
enter
pushf
pop
call
lea
popf
sub
js
push
or
cwtl
cmp
call
lea
popf
sub
js
push
or
cmp
add
lret
or
clc
sub
mov
mov
or
add
push
out
in
and
int
xor
adc
cld
adc
xor
dec
cmc
dec
aas
insb
shll
jbe
jp
repz
jne
fwait
mov
lret
jmp
inc
push
rcl
es
cmpb
aam
cmp
das
testl
push
lret
push
pop
pop
lss
rcrl
shlb
mov
ret
jl
lret
mov
icebp
mov
push
imul
loope
loopne
dec
addr16
test
sbbb
mov
jle
or
sub
or
insb
add
xchg
adc
test
call
jle
push
inc
pop
dec
pop
and
xor
push
cwtl
push
push
mov
fmull
or
mov
mov
pop
xchg
xor
cmp
dec
sub
test
mov
sub
jmp
insl
scas
mov
das
test
xor
in
jl
fwait
push
xor
mov
or
lock
pop
fimull
andl
adc
inc
xchg
dec
popa
and
mov
xchg
pop
inc
out
insl
in
int3
push
jmp
lods
addb
icebp
xchg
pop
xchg
dec
mov
js
jmp
sub
xlat
dec
pop
sbb
movsb
mov
xchg
xor
test
test
repnz
movsb
shll
mov
fs
jae
lahf
mov
in
pop
loope
int3
mov
imul
sbb
scas
imul
sbb
xchg
lahf
mulb
stc
or
addb
fld
arpl
mov
test
fdivs
js
pop
xchg
sub
daa
data16
jmp
xchg
mov
shrb
pusha
incb
dec
inc
call
adc
roll
mov
adc
xor
sbbb
inc
mov
fwait
call
add
lret
and
popa
mov
cmp
fcompl
xor
loope
das
xchg
jmp
add
ds
lcall
lcall
cmp
sbb
loopne
imul
aaa
ss
insb
mov
and
orb
daa
inc
loopne
sub
mov
jns
popa
sbb
mov
or
stos
pusha
mov
out
or
pop
xor
xchg
push
mov
add
inc
xchg
popa
dec
mov
loop
icebp
inc
enter
pop
and
xlat
and
mov
cli
adc
pop
mov
jp
mov
es
fisubl
sbb
cmp
sub
mov
and
cmp
lods
jge
mov
jmp
mov
sbb
ffreep
mov
jb
xor
insl
mov
mov
sub
pop
mov
sub
lret
xchg
pop
popf
fldcw
jmp
aas
sbb
rcrl
add
call
lea
pop
outsb
clc
inc
movsb
pop
adc
push
sbb
das
xchg
hlt
negb
js
jmp
xor
cmp
mov
ret
push
sbbl
fisubl
xchg
xchg
lcall
lret
loop
push
xor
xchg
cmp
mov
lods
aad
or
cmc
sbbb
jl
sarl
jge
mov
sbb
xchg
push
push
loope
int3
addr16
mov
and
mov
shr
das
jl
cmp
mov
inc
jne
mov
movsb
and
dec
mov
imul
lea
imul
cmp
jmp
clc
ror
scas
adc
pop
push
testb
jae
test
stos
push
xchg
inc
sub
sarl
adc
add
in
xor
enter
push
pextrw
sbb
mov
adc
loopne
es
fcmove
push
add
inc
jno
rolb
push
dec
cmp
out
in
stos
out
es
mov
popa
fadd
mov
ja
inc
dec
test
mov
sub
push
add
clc
cmp
fidivrl
cld
rcrb
xchg
out
cmp
ss
cs
mov
dec
adc
sbb
scas
out
fbstp
pop
hlt
repz
sbb
and
aad
pop
popf
sarl
sti
sar
clc
imul
test
sti
mov
mov
rol
fcomp
inc
jle
jns
inc
or
xchg
lahf
jae
push
call
cmc
adc
addb
pop
test
dec
shll
jmp
cmp
and
aas
mov
push
flds
adc
daa
sbb
adc
lahf
mov
rolb
fs
pop
xor
xchg
pop
addl
jg
jbe
rcr
pop
push
xor
jnp
xor
in
movsb
scas
movsb
pop
dec
jo
sbb
pop
inc
sbb
and
adc
data16
dec
not
xchg
fnstenv
movsl
push
push
aas
loope
mov
mov
xor
das
fistpll
sbb
sbb
mov
mov
or
sub
inc
xor
or
outsl
stos
insb
sub
mov
add
push
into
pusha
cmp
shrb
cmp
addr16
sbb
inc
sub
jb
popa
adc
dec
mov
sbb
testl
iret
add
sub
in
enter
pushf
xor
sbb
fiadds
shrb
scas
xor
xor
je
push
repz
mov
cld
or
mov
ret
mov
mov
shlb
sti
cltd
cs
sbb
sub
push
fcmovne
or
lret
jmp
js
out
fimuls
and
or
leave
jecxz
fisttpl
fwait
push
hlt
or
mov
xchg
je
xchg
or
pop
xchg
ficoms
push
dec
push
int
push
outsl
xchg
lods
cmp
push
lds
mov
xlat
popf
loopne
dec
sbb
mov
loopne
cltd
sahf
add
xor
mov
add
sbbl
adc
je
ror
pop
cmp
lea
and
or
aam
jp
mov
xchg
cwtl
adcb
pushf
mov
push
xor
jmp
or
rcr
orb
decl
xlat
ret
mov
stc
or
sub
cmc
cwtl
cmp
pop
jo
and
mov
or
mov
mov
in
scas
jle
sbb
lods
and
push
cltd
lcall
or
mov
lods
popf
dec
xchg
mov
addr16
or
movsb
pop
rcll
enter
lock
shrb
inc
sbb
lea
jne
mov
inc
out
rolb
into
and
and
jge
dec
fwait
jmp
inc
cmp
mov
cs
shll
cwtl
inc
in
and
aas
xchg
mov
and
or
sub
inc
int3
int3
clc
lods
mov
rclb
imul
jge
push
cld
imul
cltd
rorl
shlb
mov
enter
std
cmp
bnd
loop
sti
test
xor
xor
pop
jge
nop
mov
jle
pop
data16
data16
xchg
push
cmc
dec
lods
inc
nop
shlb
xchg
xorb
ja
sbb
je
adc
add
ds
jno
fmuls
repz
js
addr16
ja
dec
in
out
ss
insl
jmp
push
outsb
sbb
ficomps
inc
jns
mov
xchg
push
scas
dec
enter
lcall
dec
and
fwait
add
aam
push
movsb
popw
int3
test
cmp
xor
ds
and
mov
dec
xchg
jno
dec
pushf
into
xchg
cli
iretw
xchg
enter
out
pop
xlat
dec
dec
test
popa
and
popf
test
cmovo
test
sarb
push
jnp
pop
lea
mov
pop
out
frstor
in
adc
lcall
sbb
mov
jns
jmp
cmp
ret
imul
sahf
mov
repz
fldt
rcll
dec
push
inc
jnp
data16
jecxz
out
rcl
sub
jbe
mov
outsl
dec
nopl
test
into
es
test
das
adc
dec
call
call
push
mov
fwait
idivl
jecxz
xchg
mov
cwtl
push
xchg
mov
sub
sbb
popa
xchg
inc
testl
inc
push
cmpsb
and
push
sbb
dec
or
jp
pop
jle
cmp
cmc
lock
cmp
loop
insl
rcl
jl
lds
or
inc
aas
mov
rolb
sti
inc
pushf
cmpsb
add
xorb
ljmp
push
mov
and
into
push
xchg
and
sbb
jge
mov
xor
inc
dec
lds
aad
daa
dec
mov
aad
es
xchg
inc
push
mov
add
xchg
aam
das
push
pop
cli
mov
jae
jecxz
or
fistpl
arpl
push
xlat
and
sarb
roll
jne
mov
inc
add
cmp
aas
mov
push
call
mov
push
xchg
fwait
mov
pop
jmp
jns
adc
icebp
divl
je
or
arpl
movsb
and
or
popf
orb
sbb
mov
mov
inc
fadds
in
test
data16
mov
sbb
or
cmc
xchg
in
jae
adc
push
inc
push
mov
je
xor
cltd
loop
insl
or
xor
sub
rcl
js
lret
xchg
arpl
jo
dec
pop
cmp
xor
stos
xchg
xchg
sbb
fwait
dec
cmpsb
push
sub
and
imul
xchg
or
sub
and
cmp
imul
stos
jecxz
popa
jno
sbb
pop
jmp
aas
cmpxchg
xlat
ret
pop
push
fdivrs
lahf
push
cmp
gs
fisubs
jno
and
les
test
mov
pop
test
shrl
adc
rcrb
mov
mov
or
jmp
ds
fistl
ficoml
clc
hlt
pop
xor
and
call
sub
jg
rcr
mov
and
pop
mov
mov
pop
fisubs
jmp
in
jno
cmp
xchg
xor
fwait
clc
fcmovu
bound
lahf
ret
cmp
cmp
mov
pop
enter
std
xor
mov
sub
inc
es
int3
rolb
addr16
imul
jg
xor
mov
daa
int3
clc
inc
adc
lds
mov
xor
mov
jno
pop
xchg
xorb
pop
scas
int
cmpsb
gs
arpl
jp,pt
fiadds
xchg
ret
data16
mov
dec
xor
movsb
loope
subb
mov
scas
mov
stos
lret
daa
xor
fwait
mov
sub
mov
xor
movl
imul
add
pop
fnstsw
jp
xchg
xchg
jae
sbb
in
mov
sub
hlt
xor
fstpl
cwtl
or
insb
out
pop
fadds
pop
pop
sub
xchg
outsb
fwait
mov
subl
jmp
mov
lfs
aam
push
scas
sub
fs
cmpsl
pop
rcrb
gs
mov
mov
rorb
das
imul
mov
dec
rcl
xchg
push
sub
mov
jge
mov
mov
mov
leave
aad
test
or
sub
and
push
shll
lret
inc
jne
addl
int3
pop
pop
push
jne
adc
je
and
je
xchg
lock
jnp
rcl
popa
push
icebp
xchg
adc
mov
mov
test
arpl
je
insl
stos
lret
aad
and
vaddss
arpl
jmp
xchg
jg
insl
mov
aas
or
dec
nop
xor
rsm
mov
lods
push
data16
lahf
sub
sbb
lds
sub
adc
hlt
shll
insl
pop
xor
pop
lods
clc
jg
xchg
inc
repnz
sub
jo
push
lock
or
fucomi
push
mov
push
ret
incb
sub
hlt
in
mov
gs
mov
jno
daa
xor
push
filds
push
aad
xor
outsb
mov
ss
mov
push
and
or
aas
sub
in
mov
cltd
jns
pop
hlt
ror
dec
push
adc
adc
sahf
xchg
repz
mov
cltd
mov
dec
xor
sbb
shl
push
test
test
sub
enter
xchg
mov
fwait
repnz
pop
lret
mov
shlb
int3
fs
push
mov
jnp
pusha
or
ds
dec
daa
fisubl
rcrb
jp
stc
dec
jl
sbb
pop
test
add
mov
jecxz
inc
mov
cmp
outsl
mov
push
xor
jo
clc
jnp
mov
cmpsl
dec
cmp
shrl
sbb
push
sub
sbb
jnp
jge
pop
repnz
je
add
dec
push
inc
aad
arpl
push
in
jne
jo
push
mov
es
mov
xchg
xlat
sbb
push
inc
and
jb
mov
test
bound
push
jnp
popa
test
inc
push
mov
or
mov
pop
icebp
dec
jne
xchg
das
shrb
lahf
xorl
and
add
add
jnp
imul
test
cltd
dec
xlat
test
or
pop
bound
push
pop
es
call
in
add
outsl
sub
pop
adc
pop
loop
in
inc
mov
ljmp
comiss
mov
pop
pop
xor
cmpsb
rolb
adc
test
jge,pn
cmc
test
and
jle
imul
lcall
cld
js
cmp
insl
out
stc
inc
jecxz
rcl
mov
or
jo
icebp
xchg
jbe
mov
lret
and
mov
jmp
xchg
stos
gs
mov
jae
popa
lret
aad
ljmp
mov
into
icebp
aaa
adc
pop
mov
mov
in
inc
or
mov
ret
sub
jbe
xchg
dec
push
xor
hlt
pop
push
sarb
jae
faddp
mov
push
dec
fnstsw
inc
sahf
dec
xchg
cld
pop
fdivl
js
stos
repnz
int3
xor
push
lret
popa
sub
insl
sub
dec
inc
lcall
aad
jp
mov
inc
xor
inc
gs
inc
mov
inc
mov
cmp
push
icebp
push
cmp
mov
cltd
adcb
pop
xorb
add
jge
adc
mull
stc
fsubs
xor
lea
stos
xchg
pop
iret
popf
daa
add
xchg
cmp
shr
xor
or
jp
outsb
add
push
mov
les
rclb
dec
sub
insl
jae
es
insb
pop
mov
pop
add
xor
nop
dec
cmp
out
lods
pop
subl
out
stos
or
aam
lock
lods
dec
mov
cmp
sbb
xor
lods
jnp
lock
dec
or
int
jne
sub
jg
mov
out
les
mov
inc
lock
imul
cwtl
push
lcall
lods
fcoms
out
outsb
jge
mov
mov
mov
sbb
jns
pushf
inc
cwtl
loope
push
cmp
pushl
out
dec
pop
enter
bound
jns
cmp
lahf
xchg
mov
addr16
lahf
sbb
movsb
orb
sbb
dec
in
sbb
mov
cwtl
mov
mov
daa
loopne
dec
jg
pop
addr16
ja
cltd
ja
ds
push
jno
dec
or
mov
jne
lret
sbb
shll
je
jle
das
push
and
cmpsl
cwtl
jecxz
and
pop
call
xor
jae
hlt
sub
fsubrl
dec
xchg
loopne
stos
mov
and
loope
gs
fld
mov
fimull
test
cmp
sbb
xchg
mov
dec
push
pushw
inc
xchg
jae
sub
outsl
popa
pop
mov
pop
cs
shrb
inc
out
sbb
es
movsl
or
sbb
push
xchg
cmpb
lret
adc
mov
fisttpl
stos
xchg
mov
fistl
lea
sar
pop
jbe
xchg
std
and
jle
mov
add
cmc
lahf
and
jp
add
aas
push
xor
and
in
lcall
mov
aam
stc
idivl
sbbl
adc
popf
or
ss
lds
adc
dec
xor
push
fwait
test
lretw
imul
in
das
add
dec
arpl
push
sbb
mov
dec
loope
mov
push
xor
into
into
mov
mov
push
repz
push
leave
mov
test
push
mov
lods
dec
mov
test
aam
clc
gs
dec
dec
or
ret
imul
adc
jmp
pushf
fs
mov
les
sti
popf
clc
mov
push
fstpt
jno
inc
je
and
sbb
xor
movsl
inc
es
adcl
push
xchg
lret
ljmp
cmp
inc
jl
or
dec
mov
andl
mov
insb
mov
jae
int
push
push
out
div
xchg
mov
hlt
stc
outsb
popa
fldenv
adc
jg
sti
cwtl
pop
pop
jecxz
mov
inc
sbb
push
imull
test
in
xor
mov
sub
inc
xchg
mov
pop
js
jl
add
fnstcw
movsb
pop
arpl
cmp
and
mov
mov
in
sub
aam
call
push
cmpsb
fmul
cmp
adc
cmp
cwtl
jo
in
pop
jo
xor
xor
xlat
test
call
icebp
cmp
adc
sbb
sbb
jne
inc
ficoml
jae
sbb
popf
mov
aas
add
and
xor
cli
pop
insb
pop
ljmp
or
sbb
int
enter
sbb
inc
imul
mov
or
xchg
cwtl
cli
xchg
call
aad
mov
lret
stos
sti
dec
pop
mov
xchg
sahf
rcrl
test
orb
or
insb
stos
cs
dec
in
mov
rolb
aas
push
adc
sub
fwait
ret
daa
in
add
ror
cld
ds
sbb
rorb
or
scas
insl
dec
dec
pop
jae
int3
or
rcl
mov
xor
jne
cwtl
cli
xchg
inc
or
mov
fildl
jl
or
or
inc
or
inc
lcall
out
jno
or
rorb
push
xor
dec
fsts
scas
pop
lods
jbe
pusha
lods
pop
xor
fidivrs
cmp
aad
aam
mov
nop
adc
add
add
dec
jbe
pop
sti
xchg
mov
in
mov
pop
push
fdivl
pop
mov
push
xlat
push
dec
fistl
and
in
sbb
dec
jns
mov
ret
and
pop
and
lret
mov
or
mov
fsubl
scas
scas
int3
ret
mov
imul
stc
or
dec
xchg
std
add
sbb
sbb
cwtl
js
cli
stos
mov
hlt
sti
adc
fadds
and
jbe
or
sub
adc
xchg
jecxz
out
loop
jecxz
in
rcl
stos
in
inc
inc
repz
jmp
xchg
inc
mov
fdivs
in
jg
sbb
into
and
shll
push
sub
stos
pushf
mov
mov
dec
push
cmp
sbb
add
gs
leave
inc
mov
test
jg
sub
and
lds
lret
pop
fstpl
stc
hlt
push
nop
xor
jno
stc
cmpsl
xorl
jae
or
or
notb
sub
lcall
pop
lock
pop
push
clc
dec
aaa
nop
or
aaa
cwtl
ss
cwtl
test
ret
add
push
gs
daa
sub
cmp
aad
push
xchg
dec
mov
aad
mov
and
cwtl
jmp
scas
movsl
test
pushf
pop
push
adc
movsl
sbb
hlt
cmc
sbb
pop
popa
inc
xchg
jnp
mov
leave
jl
lods
jg
pop
pop
push
push
into
push
punpckhdq
pop
pop
rorb
into
hlt
sahf
mov
sbb
and
mov
or
rcrb
xchg
lret
pop
out
pusha
std
push
mov
dec
nop
push
aaa
out
imul
add
sti
push
insl
in
mov
cmp
push
nop
aaa
inc
and
xor
pop
mov
loope
call
push
arpl
mov
jmp
push
mov
mov
loope
sub
movsb
fsubr
in
cmp
imul
lret
cmp
cmp
cmpsl
mov
push
xor
add
in
outsb
jmpw
jge
into
hlt
and
insl
fdivrs
lea
popf
sub
js
push
or
cwtl
cmp
call
lea
popf
sub
js
push
or
loopne
mov
inc
insl
fdivrs
loopne
sub
les
js
dec
adc
cwtl
adc
call
bound
mov
cmpsl
add
roll
push
scas
and
adc
pop
popa
sti
push
shll
mov
add
loope
rcll
mov
je
loope
icebp
xor
les
mov
addl
jno
inc
fsts
and
adc
push
cmp
out
in
in
out
sub
scas
xor
fwait
pop
fisubs
bound
lcall
push
push
icebp
popa
insb
popa
shrl
rcr
jbe
pop
mov
mov
ds
les
cmp
cwtl
xchg
add
sbb
shlb
sahf
lock
mov
lea
in
icebp
xor
xchg
and
inc
sbb
sbb
push
push
hlt
call
mov
stos
popa
fiadds
push
sahf
in
ds
rcrl
jmp
loope
sahf
decl
outsb
sub
mov
sahf
cmc
scas
mov
cs
mov
loope
addl
jno
inc
push
mov
add
icebp
dec
rcrl
mov
sbb
andb
mov
movsl
adc
data16
inc
xchg
fs
gs
xchg
das
mov
je
fs
icebp
or
ret
xor
iret
je
push
les
jae
popa
adcl
adcl
popa
in
lds
and
sub
adc
adc
popa
icebp
push
roll
mov
add
roll
push
mov
mov
adc
popa
icebp
push
roll
mov
add
mov
test
mov
push
fprem1
pop
icebp
adc
scas
mov
push
ret
sbb
lods
aam
adc
in
mov
inc
jge
dec
aam
fcomip
mov
xchg
xchg
jne
adcb
sub
push
push
int3
push
leave
push
movsb
mov
repz
xchg
mov
mov
insl
addr16
push
xchg
in
and
jge
mov
mov
bound
test
daa
pop
loop
imul
add
xchg
inc
loop
jb
lods
pop
ret
test
mov
xchg
inc
leave
popa
jmp
adc
movsb
add
in
lret
into
push
push
fwait
iret
sub
in
bound
faddl
xlat
mov
xor
mov
push
pop
rep
xchg
aam
pop
cmp
pushf
mov
jo
ret
inc
movswl
xor
sub
mov
movsb
inc
sub
sub
pop
cmpb
mov
inc
cmp
xchg
int
cld
insl
aaa
and
inc
int3
inc
fnstcw
aam
ret
pop
xchg
in
xlat
sub
lods
outsb
out
cmpsl
mov
pop
mov
sbb
mov
pop
es
insl
rcrb
inc
cmpsb
test
les
sbb
push
lahf
je
mov
lods
clc
push
icebp
xor
insb
cli
dec
das
xlat
jnp
rorl
xor
mov
das
daa
orb
xchg
dec
jmp
dec
push
mov
pop
or
mov
or
or
add
add
loope
or
jmp
dec
sub
nop
aaa
insl
jge
pop
out
iret
daa
xchg
dec
stos
dec
adc
sub
and
push
les
icebp
imul
mov
pop
paddb
in
lret
fnsave
test
lock
cmp
imul
xor
or
add
xor
push
fstpl
pop
jbe
into
stos
shr
add
sahf
mov
push
scas
pusha
cmpsb
repz
je
in
loopne
enter
push
xor
sub
xor
mov
and
negb
nop
stc
icebp
push
inc
and
xor
mov
jbe
jmp
movsl
xor
xchg
leave
xor
pop
mov
div
push
sahf
ds
mov
outsb
and
fwait
push
clc
es
shll
mov
daa
inc
cmp
pop
mov
sar
popa
pop
cmp
xchg
adc
add
adc
and
test
adc
and
mov
mov
fwait
rorb
sub
mov
push
xchg
in
cmpsb
mov
xor
pop
int
or
xchg
cmpsb
add
mov
dec
sub
pop
adc
scas
sbb
ret
push
sub
fmull
push
iret
mov
cmp
outsb
dec
xchg
sbb
pop
inc
xchg
pop
repz
lret
or
push
repz
idivb
mov
pop
call
xchg
mov
mov
outsb
aaa
arpl
adc
mov
mov
in
xrelease
popf
pop
fwait
push
push
cmpsb
xchg
pop
adc
jp
stos
clc
push
and
outsl
push
or
push
fbld
mov
and
loop
int3
sbb
mov
out
xor
cmpsb
xchg
push
add
push
fldt
pop
imul
push
inc
jp
cmp
sub
addr16
cmp
call
ja
sbb
pop
and
sbb
xor
stos
push
inc
mov
or
jg
mov
xor
mov
lods
dec
enter
imul
sub
dec
loopne
push
lods
ror
xchg
mov
xor
insb
xchg
pop
daa
push
cltd
scas
fnstsw
push
divb
or
jno
push
push
les
outsb
scas
sar
add
sbb
inc
sbb
fwait
push
incl
xchg
enter
jno
pushf
addr16
or
jge
pop
cmp
xchg
adc
lret
fistl
in
jg
adc
xchg
or
cmp
stc
cwtl
push
sub
pop
stc
fnstsw
ds
stc
cmp
insl
daa
sub
jg
sbb
and
loop
fldl2e
ret
mov
dec
dec
sub
test
xor
push
imul
aad
or
fisubl
and
sarl
adc
pop
lcall
rcrl
out
gs
or
int3
jbe
xor
mov
jnp
sub
das
xor
push
pop
mov
movsb
add
inc
jne
std
dec
cmp
in
jmp
jbe
mov
jb
std
mov
mov
int3
clc
xchg
in
xor
push
aas
aad
add
push
push
in
xchg
rolb
mov
mov
test
xchg
ja
and
lods
adc
loopne
add
push
addr16
jmp
ret
rolb
jp
pop
cmp
test
pop
popa
and
push
cmp
insl
insb
push
lds
aad
lahf
rcrl
and
test
in
cmp
daa
inc
dec
orb
jecxz
iret
in
push
arpl
loop
pushf
js
imul
aam
lea
aaa
ja
popa
shlb
rcll
stc
pusha
mov
add
aad
dec
je
in
mov
insb
aaa
iret
xchg
lods
cwtl
neg
cmp
out
inc
inc
lods
test
std
adc
jb
cli
jge
add
push
push
fbld
pop
sub
adc
aas
inc
mov
out
std
pusha
out
adc
xchg
cmp
add
in
test
sub
in
imul
xor
cmpl
and
fxch
sbb
in
cmp
or
je
cmp
test
test
inc
roll
aam
lahf
adc
in
cmc
xchg
inc
add
or
dec
dec
out
fisubl
ljmp
cmp
jno
int3
nop
and
dec
sarb
nop
movsb
push
mov
mov
xchg
fwait
stos
push
shrl
xchg
jne
push
test
pop
mov
dec
out
pop
aam
insb
inc
or
mov
leave
cmp
push
add
lea
lea
mov
icebp
stos
mov
or
push
sbb
int
dec
mov
lods
fsts
je
push
dec
fs
les
movl
movsl
mov
sub
ss
cmp
loopne
push
outsb
xor
push
aas
movsb
mov
int3
mov
xor
inc
pop
sub
cmp
and
scas
or
mov
movl
xlat
inc
fsts
fsubrl
inc
hlt
push
hlt
mov
mov
out
data16
jl
xlat
in
and
sahf
insl
sub
in
imul
mov
js
ret
mov
cltd
fmuls
adc
mov
push
xchg
add
dec
push
and
not
lods
sbb
movsl
icebp
jmp
jo
jge
shrl
enter
push
and
in
inc
icebp
test
sbb
mov
ss
jb
test
mov
sub
repz
bound
push
jb
pusha
add
mov
or
stos
sarb
xor
or
mov
repnz
cmp
or
repz
jne
das
pop
xor
xor
mov
andl
popf
clc
enter
popa
xchg
jo
push
pop
cmpb
rol
mov
cmp
xchg
popa
int
fidivs
cmpsl
je
xorb
mov
sbb
cs
dec
adc
jbe
in
xor
data16
cli
jp
pop
lahf
xchg
mov
mov
int
test
mov
sti
hlt
es
or
dec
pop
cwtl
sbb
out
mov
mov
pushf
sti
jmp
cmpsb
stos
mov
xchg
loopne
cmp
out
rcl
add
pop
mov
jo
decl
lret
mov
repnz
int3
clc
icebp
lock
cmc
orl
push
movsl
xor
and
xor
test
stos
add
imul
sub
jp
pop
push
mov
mov
movsb
pop
jmp
xor
loopne
iret
mov
sub
jae
cwtl
inc
stos
adc
xor
mov
out
mov
in
pushf
arpl
mov
mov
jb
loope
mov
jg
dec
or
pushf
fdivrl
lret
mov
addr16
mov
sub
xchg
shl
xorps
xchg
mov
adc
insl
dec
aam
xor
sbb
iret
pop
iret
mov
xor
insl
insb
js
jg
loop
and
sub
call
jb
fists
cmp
adc
mov
ds
and
xchg
pop
xchg
mov
movsb
imul
mov
adc
sahf
ja
sbb
mov
es
and
in
test
push
push
xchg
xor
fistps
insb
pushf
lods
sbb
jbe
mov
sahf
xchg
test
xchg
cmp
or
mov
lea
xchg
push
iret
cld
popa
push
mov
add
stos
xchg
sbb
sbb
cmp
xchg
aam
push
arpl
mov
cli
sti
adc
inc
mov
push
cltd
cwtl
dec
adc
insb
outsb
dec
xor
xchg
xchg
mov
push
adcl
mov
outsl
sahf
sub
dec
iret
jae
push
jo
jle
mov
aaa
sub
daa
cmp
rcll
jne
daa
mov
das
sub
pop
gs
lcall
aam
push
bound
jmp
fdivrp
cli
and
jnp
subb
mov
mov
mov
stos
push
stos
cmp
jae
mov
inc
aas
pop
fsts
cmp
dec
pusha
je
jne
sbb
jp
pop
fcmovne
bswap
adc
in
add
test
out
add
jo
cltd
inc
dec
push
sub
sbb
sahf
mov
cltd
nop
iret
mov
gs
sahf
inc
adc
out
jbe
lock
inc
sbb
push
push
cmp
mov
mov
push
inc
cmp
or
mov
lods
sub
xchg
dec
rorl
add
enter
insb
xor
mov
repz
int3
in
xor
fnsave
cmp
cmp
xorb
xchg
dec
xchg
pop
mov
mov
or
repnz
test
int
mov
fwait
cs
leave
xchg
fadd
pop
stc
arpl
scas
int3
mov
mov
jns
mov
jl
xchg
cmpsl
pop
sbb
push
hlt
xor
inc
mov
xor
push
leave
fcmovnbe
adc
not
dec
sbb
mov
and
inc
lock
sub
jnp
mov
fldcw
mov
mov
mov
sahf
aad
xlat
out
addr16
cmp
stos
jno
sbbl
mov
in
or
push
imul
xchg
jge
pop
cwtl
cli
or
push
rcrl
sbb
adc
repz
push
fnstcw
leave
jmp
sbb
adc
arpl
in
mov
jp
push
cmp
nop
int3
insb
lods
mov
xchg
movsl
adc
ret
cmp
es
sub
sbb
stc
and
fst
cld
sub
mov
cmp
add
popf
cmp
rcl
mov
jecxz
ret
hlt
sbb
push
cmc
push
mov
stos
es
push
xor
pop
sub
out
fcoml
cltd
sbb
dec
pop
cmp
daa
add
xlat
push
add
es
cmpl
pop
loop
push
les
xchg
jg
inc
dec
cld
xor
mov
loope
fdivrs
xor
sub
lds
mov
shlb
pop
mov
sbb
js
pop
mov
pop
xor
pushf
pop
dec
cld
mov
jecxz
lret
sbb
adcb
cmpsl
adc
jmp
lcall
inc
or
cli
dec
push
arpl
ret
dec
inc
mov
push
pop
iret
out
jno
pop
inc
cmp
mov
loop
scas
jecxz
and
xchg
xchg
push
repz
push
adc
mov
ficoml
jbe
ficompl
pop
xchg
sbb
addb
sub
xchg
mov
int3
aam
xor
push
mov
aas
mov
xor
xchg
inc
popa
xchg
test
popa
mov
sahf
fcom
das
shlb
imul
fbstp
sahf
add
stc
or
shrl
mov
or
stos
sbb
xchg
cli
clc
into
xor
addr16
mov
lods
add
or
mov
stos
mov
mov
inc
mov
pop
hlt
add
push
cwtl
je
movsb
mov
sub
out
scas
ret
cltd
pop
inc
or
leave
sbb
std
inc
pop
xor
mov
lret
push
push
and
pop
repnz
rcr
cmc
add
mov
inc
mov
cmp
nop
or
inc
xor
int
test
cmpsl
mov
mov
and
gs
test
inc
xchg
or
imul
add
push
or
stc
jp
arpl
or
cli
and
sahf
int3
outsb
in
sbb
scas
adc
cmc
in
andb
cmp
and
das
shll
lea
sahf
movsl
adc
jnp
xchg
inc
xlat
test
in
add
imul
js
jns
addr16
xchg
jb
cmpsl
fists
jb
stos
dec
mov
or
adc
pusha
lods
mov
push
push
pop
dec
cmp
sti
test
sahf
inc
inc
cmp
loopne
adc
insl
arpl
pop
mov
test
adc
loopne
xor
mull
and
mov
lods
test
roll
dec
jge
xor
hlt
xor
fld
push
out
push
rorl
pop
jo
jmp
mov
lods
loopne
sbb
cmp
iret
pop
or
cmp
mov
inc
test
in
jae
outsb
mov
adc
dec
ret
fwait
pop
addr16
inc
mov
jns
pop
in
popf
bound
bound
mov
out
xchg
pop
jo
sarl
sbb
test
jecxz
sub
jno
scas
cltd
daa
sub
jg
lods
push
fxch
add
loop
xor
sti
pusha
add
ret
or
push
sub
jno
fdivrs
test
lock
and
enter
sub
inc
xchg
inc
and
mov
jp
mov
lcall
loope
xchg
shlb
cmp
cmp
add
mov
mov
out
hlt
inc
les
scas
test
xchg
fstl
sbb
xchg
rolb
xor
sbb
fldenv
jae
mov
cmp
push
or
lock
into
mov
dec
inc
sub
adc
mov
mov
andl
mov
ja
aaa
cli
push
sti
jmp
lret
mov
fwait
push
pop
adc
test
outsb
xor
mov
mov
sahf
or
inc
xchg
push
shr
sub
mov
fistpl
and
cmp
and
pop
int3
repz
or
insl
das
arpl
jge
mov
movsl
mov
stc
jnp
push
lods
je
push
aam
fxch
data16
loopne
sub
add
rorl
adc
hlt
lret
inc
jo
cmpl
pop
ds
jne
aas
cmp
xor
add
jp
jge
xor
push
aam
jno
add
adc
jns
xchg
in
push
ret
pop
ds
aam
repz
aas
data16
jae
adc
cmp
xor
lea
sbb
repz
pop
fs
jnp
adc
dec
inc
jno
lock
ss
ucomiss
jle
lods
out
mov
cmpsl
nop
pop
inc
mov
add
hlt
test
mov
xchg
mov
pop
xchg
in
mov
and
idivb
jecxz
adc
mov
fs
cltd
in
jae
daa
mov
cs
or
pop
test
fistpll
mov
pop
fwait
imul
jge
andl
in
mov
pop
cmp
or
pop
les
sbb
add
loope
adc
mov
cmp
cwtl
and
pop
sbb
scas
xor
inc
std
mov
or
arpl
cmp
push
jl
gs
imul
or
insb
push
xor
in
jp
pop
add
dec
test
mov
mov
jecxz
stos
xchg
mov
enter
imul
scas
ja
push
xchg
or
xlat
xchg
pop
pop
mov
jl
cmp
mov
mov
ret
out
push
loop
jmp
mov
xchg
ret
pextrw
cmpsb
sbb
jmp
sub
imul
jnp
sti
inc
movsb
in
and
push
jmp
lock
into
adc
lods
pop
sarl
sahf
dec
jbe
xor
cmpsl
nop
insl
inc
dec
or
and
out
mov
outsl
aad
in
sub
cmpb
sarb
cld
arpl
aas
outsl
cltd
jbe
ret
mov
push
sub
dec
ret
in
movsb
and
mov
movsb
cmp
rcll
push
std
fstl
fisubl
inc
inc
lcall
sbb
push
xor
out
les
lcall
jl
mov
xchg
cmp
xorb
in
setb
iret
test
jno
fwait
sub
or
cmp
and
and
in
cmc
aam
sbb
mov
or
fxch
push
jge,pn
repnz
sahf
stc
or
movsb
stos
mov
jmp
sbb
and
cltd
xchg
aam
lret
stos
xor
sub
fstpl
test
ret
ja
fildll
jl
shlb
jecxz
xchg
xchg
mov
insb
mov
test
xor
pop
negb
pop
mov
mov
add
add
rol
sub
aad
cmp
call
ljmp
ret
lret
mov
mov
mov
pop
pop
leave
mov
pop
adc
jbe
lea
and
mov
add
jae
fidivs
mov
mov
inc
fcoml
in
xchg
rorl
aaa
nop
xchg
cld
mov
sbb
or
sti
lods
out
mov
pop
addr16
lock
fwait
aas
jae
rcrl
add
bound
cmp
and
cmp
mov
xor
rolb
addl
inc
lock
pop
jge
cld
mov
dec
cmp
test
int
push
xchg
into
dec
sub
inc
and
adcl
adc
and
pop
pop
int
testb
in
out
loopne
xchg
add
or
arpl
add
push
sub
lret
jp
fucomi
inc
fs
adc
sbb
mov
add
les
repnz
jg
fucomip
mov
gs
jne
mov
adc
bnd
lahf
mov
mov
pop
movsl
lods
and
dec
fsts
subl
sbb
hlt
push
mov
xor
and
sbb
dec
xor
stc
repz
aaa
fabs
add
hlt
xchg
adc
loopne
test
jecxz
xor
mov
ja
mov
in
gs
cmp
push
pop
mov
cmp
sbb
sahf
adc
loopne
or
insb
lret
fs
jecxz
jb
pop
aas
stc
rclb
gs
mov
sti
mov
fistpl
das
in
add
pusha
andb
adc
push
lea
andb
aam
hlt
out
movsl
push
cs
inc
mov
mov
iret
mov
insb
jne
aam
int
lds
cmpsl
int
sbb
jae
les
nop
fisubrl
daa
sbb
push
jle
xchg
xor
jnp
ja
jecxz
out
or
cmp
pop
sbb
cli
xor
sti
mov
jne
adc
lds
push
push
das
cmp
int3
add
inc
cmp
or
movl
push
xor
mov
lods
data16
push
int3
sub
cmp
aad
sbb
iret
outsb
sub
inc
add
hlt
fsts
sub
ret
lods
stc
test
push
sbb
sub
mov
shl
xor
inc
data16
push
daa
sbb
imul
fs
seta
lret
mov
xor
cmp
gs
mov
ja
xorl
push
dec
scas
dec
call
sub
in
jl
imul
mull
jne
xchg
dec
sub
dec
int
xor
fdivs
or
mov
out
int
imul
xor
decl
push
lcall
arpl
add
mov
int
in
xchg
push
cs
and
das
jg
stos
nop
push
xor
mov
loopne
push
sbb
xchg
push
jb
mov
lock
xchg
pushl
imul
jb
fidivrl
lods
mov
dec
aas
and
sub
and
add
in
mov
je
xchg
ret
mov
gs
mov
lods
mov
push
cmc
jl
xor
lret
dec
xchg
std
aad
enter
jecxz
pusha
sbb
jp
mov
and
adc
popa
icebp
push
roll
mov
add
roll
push
mov
mov
adc
popa
icebp
push
roll
mov
add
roll
push
mov
mov
adc
popa
icebp
push
roll
mov
xor
out
rcll
mov
rorl
roll
sub
outsb
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
or
inc
xor
in
pushl
add
add
or
pop
push
add
add
add
push
add
xchg
mov
lret
add
add
add
add
add
sbb
cmp
lcall
add
pop
add
add
add
add
xchg
add
and
das
add
or
add
add
jecxz
sbb
xchg
add
add
add
popa
add
add
add
add
inc
add
add
pop
add
add
jo
mov
jecxz
and
sahf
add
add
add
add
add
add
inc
add
gs
add
add
cmp
and
stos
add
xor
and
bound
mov
or
aam
call
add
sub
xchg
add
pop
add
add
add
add
add
add
add
add
add
add
mov
leave
add
add
add
add
popf
add
add
add
add
inc
add
add
xor
pushf
add
addl
push
add
add
add
add
add
add
add
test
add
add
add
ret
add
add
mov
add
add
add
add
add
push
add
add
insl
add
add
pop
add
add
add
add
add
add
add
add
jge
push
add
add
and
mov
add
add
sbb
sub
add
cwtl
add
add
add
add
cmpsb
add
add
add
add
mov
or
add
jmp
lret
add
add
add
add
add
add
add
add
std
add
add
jecxz
pop
add
add
add
add
add
add
add
lcall
add
cmp
add
add
add
add
add
add
jmp
add
push
add
add
and
jecxz
adc
cmpsb
add
test
sti
add
add
sbb
jnp
test
add
pop
add
add
sbb
add
add
add
addl
cltd
add
jecxz
add
lret
add
pop
add
add
add
sbb
xchg
add
add
sub
or
add
mov
inc
add
add
add
add
push
add
add
add
out
add
dec
add
add
add
mov
push
add
add
or
add
adc
dec
add
and
add
add
add
add
add
add
add
add
jno
enter
icebp
add
add
mov
sub
roll
add
add
add
add
add
add
add
add
gs
add
adc
add
mov
mov
filds
cmp
add
add
add
add
add
add
add
dec
add
fildl
outsl
add
incl
push
add
add
add
sbb
adc
fildl
roll
add
add
add
test
sub
add
pop
jp
jmp
and
jg
lods
push
sbb
mov
dec
or
adc
pushl
push
sbb
pop
xchg
mov
add
mov
cs
xchg
mov
lret
out
imul
and
push
pop
cmp
dec
mov
add
popa
mov
ljmp
fisttpll
nop
pop
test
sbb
inc
dec
addr16
out
sarl
push
push
fs
add
jp
dec
into
xchg
push
adc
ds
pop
in
cwtl
jns
add
cmp
sarl
cltd
xchg
mov
movsb
cmpl
and
daa
sbb
fwait
adc
xlat
add
and
pop
fisttpl
xor
movsl
mov
sub
fwait
sub
mov
pop
iret
dec
in
mov
sbb
fs
xchg
jb
insl
cmp
xchg
xor
cmp
aad
sbb
testb
movsl
push
xchg
jmp
into
sbb
aaa
inc
aas
mov
xor
sbb
jp
xor
sub
sbb
add
mov
gs
hlt
fistl
insb
pop
mov
xor
cmpsb
lock
bound
push
xchg
mov
sub
out
imul
lcall
aas
pop
imul
mov
cmp
xor
and
cmp
sub
xorl
cmp
sti
mov
xor
xchg
or
in
push
dec
jns
inc
sbbl
fwait
popa
pop
cmpl
les
js
adc
divl
jns
adc
ret
les
mov
dec
sbb
testl
stos
std
sub
mov
sbb
push
addr16
jp
pusha
inc
inc
mov
jge
popa
or
push
jle
adc
sbb
mov
dec
and
adc
push
cmpsl
mov
cmp
adc
mov
lahf
movsl
jl
in
mov
mov
stos
push
pop
sahf
sub
sub
popf
mov
mov
loope
ja
leave
lods
in
mov
imul
in
in
mov
mov
jl
cwtl
outsb
fisttpll
push
fs
out
and
imul
movsl
inc
push
jmp
add
add
lea
mov
mov
lods
jne
pop
add
popf
das
mov
lods
fwait
pop
imul
out
in
roll
push
js
ljmp
mov
jno
inc
or
out
scas
lahf
jo
icebp
mov
repz
or
pop
jmp
repz
imul
aad
or
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
