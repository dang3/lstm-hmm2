call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
inc
insb
movsl
jl
dec
cmp
push
sbb
sbb
in
popf
cld
lods
int3
mov
cmp
mov
pushf
add
dec
cmp
cmp
or
sbb
in
popf
pushf
or
fmul
lods
mov
pushf
xlat
insb
popf
jl
dec
sti
pop
pop
sub
cmp
or
sbb
inc
icebp
cld
lret
test
fsubr
jmp
mov
and
jmp
fildll
jle
mov
cltd
ss
push
imul
add
dec
cld
adc
scas
mov
pop
or
add
push
push
dec
fdivl
pop
xor
outsb
sub
mov
inc
lock
bound
push
or
and
lods
push
jl
jae
adc
push
subb
sub
jg
cwtl
aaa
into
nop
mov
filds
jae
adc
leave
std
mov
sub
xor
stos
push
xor
inc
mov
cli
sbb
movsl
rcrb
call
cltd
gs
lods
fdivrl
jnp
cwtl
in
popf
ds
sbb
pop
dec
sub
cmp
or
sbb
in
paddb
mov
mov
jg
imul
xor
jle
sbb
in
mov
mov
movsb
fcompl
cltd
mov
jle
dec
imulb
and
cmp
add
sbb
xchg
fmull
mov
jmp
cs
pop
and
cmp
sub
cmp
or
sbb
in
popf
cld
lods
int3
mov
mov
or
dec
cmp
cmp
or
sbb
in
popf
cld
lods
int3
mov
mov
or
bound
add
xor
into
push
sub
mov
sbb
dec
mov
push
ljmp
jae
dec
movsl
mov
cli
inc
add
adc
xchg
jg
sub
add
cmpb
push
es
xor
sahf
int3
sbb
int3
movsl
nop
in
fnstsw
xlat
test
mov
sbb
inc
push
xchg
aam
mov
cmp
repz
imul
adc
test
mov
out
movsl
sub
inc
hlt
mov
and
pop
cs
addb
jle
adc
cmp
adc
in
pop
rcrl
adc
xlat
data16
mov
fcomip
pop
jo
sbbb
fwait
call
das
jg
not
popa
pop
push
sbb
adcl
push
xchg
pop
inc
push
mov
les
mov
mov
adc
sbb
jg
mov
sbb
xor
cmp
imul
jae
ds
mov
pushf
adc
or
pop
mov
bound
sbb
fcomps
popf
lods
stc
push
sub
lret
call
inc
sub
imul
push
cmp
xchg
aad
in
nop
dec
test
mov
mov
add
jmp
mov
adc
stos
int
stos
repz
push
stc
imul
sti
sub
mov
mov
jle
imul
arpl
stos
jno
push
dec
test
jne
push
or
mov
pop
and
rcrb
push
pop
test
out
mov
add
stos
out
addr16
jl
and
nop
outsl
negb
dec
mov
dec
int3
movsb
and
pop
jnp
mov
rcrl
out
xor
mov
cmp
xlat
cld
inc
and
push
cld
insb
sbb
bound
sbb
test
xchg
dec
pop
or
out
push
mov
mov
icebp
cltd
insb
fldl
popa
sub
or
xor
jns
enter
roll
ja
in
xchg
mov
sub
rorb
aad
loope
icebp
sarb
sbb
lea
std
sub
notl
fisubs
add
dec
xchg
adc
mov
sub
xchg
and
scas
leave
fcomps
ja
js
iret
jae
sti
int3
add
push
push
push
xchg
push
dec
imul
push
and
sub
aam
fcmovbe
popf
out
mov
jb
dec
pushl
repz
lock
pop
dec
pop
jns
sub
xor
dec
icebp
push
jb
sbb
or
mov
jo
dec
xchg
mov
dec
into
fistl
rorl
sub
cmp
mov
repnz
sbb
cli
or
int
loopne
jl
leave
jns
test
aas
xchg
add
or
mov
dec
mov
stos
pusha
lcall
dec
and
lret
aaa
xchg
ljmp
inc
arpl
pop
pop
mov
fstl
or
gs
mov
sub
sbb
mov
and
stos
imul
scas
out
outsl
mov
test
decl
mov
out
dec
push
aas
pop
and
add
icebp
inc
push
push
enter
or
mov
ljmp
mov
cs
aas
jae
sbb
dec
ror
addr16
mov
dec
jge
sub
xor
push
adc
or
push
cmp
aad
imul
dec
xchg
pusha
addl
pop
add
lret
div
dec
incl
repz
or
test
or
enter
inc
movsl
add
push
xor
in
ret
fisubl
xor
sbb
ret
fstps
and
xchg
add
loope
xchg
enter
sti
aas
cli
mov
fsubl
test
or
sub
xchg
bound
mov
mov
sub
mov
adc
mov
fsubrl
outsl
or
jnp
cmpsl
pop
sahf
pop
fisubs
jo
dec
mov
xchg
or
pop
dec
xchg
je
cld
sub
xchg
cmp
das
out
iret
dec
pop
jno
push
js
cmp
es
stc
data16
dec
xor
mov
movzbl
xor
test
push
fdivrs
and
in
in
fbld
hlt
lcall
aad
shr
jnp
cmp
cmp
clc
stos
add
and
fs
rorl
popa
std
inc
mov
lods
jno
inc
jg
jmp
out
orb
mov
adc
sub
rcll
sbb
sub
bound
pop
push
mov
push
pop
sbb
rclb
push
jl
xchg
adc
mov
cmc
cli
xor
or
out
jae
adc
mov
mov
mov
push
test
in
add
cmc
xor
inc
sar
pop
das
sti
pop
test
cltd
mov
inc
xchg
out
cmp
sub
andl
inc
gs
sbb
dec
sub
sbb
xchg
inc
ds
pop
xchg
clc
pop
fmulp
lods
lret
and
popf
mov
fwait
mov
dec
cltd
scas
test
jl
inc
cmp
cmp
and
std
jne
hlt
mov
jge
aam
lcall
sub
push
pushl
or
mov
idivb
test
test
popa
or
mov
mov
jmp
loope
mov
shr
xor
in
enter
push
cmpsb
daa
and
push
test
mov
clc
aad
enter
scas
repnz
sub
add
adc
faddl
sarl
dec
mov
jne
jns
aad
xchg
mov
add
mov
mov
shl
cwtl
sbb
add
rolb
dec
xor
aam
bnd
jge
push
mov
jns
orl
push
nop
jbe
jmp
andl
and
cmpsb
out
jl
sub
xlat
cmpsb
rorl
loope
inc
cltd
lahf
pop
push
mov
fiadds
aad
dec
and
in
iret
pop
adc
cli
add
loope
gs
lahf
or
lret
cmp
cli
pusha
aaa
lock
movsl
dec
flds
test
lret
push
stc
jg
pushf
mov
pop
inc
loop
sbb
outsb
pop
add
testl
mov
mov
cmp
mov
hlt
add
mov
test
nop
sarl
popa
std
ja
outsl
sbb
pushl
mov
sbb
lea
rcrl
add
sub
fadd
pop
inc
insb
mov
inc
aas
dec
daa
bound
repnz
mov
xchg
adc
mov
jp
popa
stos
inc
stos
fisubrs
push
add
xchg
mov
mov
repz
lcall
dec
inc
push
lahf
jae
int
inc
aad
aam
insl
push
and
jle
xchg
or
nop
xchg
xor
xor
cmp
inc
mull
mov
pop
repnz
push
inc
dec
movsl
and
push
aam
pop
arpl
repnz
shl
in
cmp
jnp
inc
sbb
mov
fwait
pop
int
and
xchg
shll
or
inc
mov
addl
pop
cli
xchg
je
inc
cmp
lds
movsb
mov
das
fstl
jb
int3
test
mov
arpl
xchg
scas
pop
std
pusha
inc
mov
jg
js
fwait
loopne
std
scas
subl
lahf
fidivs
cmp
bound
cmp
or
lock
ljmp
jns
xchg
pop
jl
mov
iret
out
mov
inc
adc
mov
fwait
lds
xchg
adc
or
sbbl
lods
xor
adc
cli
fisubrl
clc
mov
pop
mov
jbe
popf
cmp
push
jns
js
add
cmc
xchg
mov
dec
push
stc
lcall
repnz
or
imul
les
xchg
int
xchg
cmp
fidivs
mov
pop
add
jmp
xchg
push
mov
test
loope
es
and
dec
pop
clc
pusha
ja
mov
mov
push
mov
mov
in
mov
xchg
jp
xchg
faddl
imul
pusha
jnp
sbb
cmp
xchg
js
mov
adc
lret
loopne
mov
pop
or
enter
jl
ret
ljmp
rorl
add
sbb
jp
dec
pushf
dec
insb
leave
rcrl
dec
ret
movsl
int
adc
dec
jecxz
call
push
cs
inc
jbe
bound
int3
mov
pop
icebp
ds
inc
sub
fisubs
jle
sub
rorl
pop
adc
inc
bound
jae
inc
adc
xchg
add
or
push
loopne
mov
sub
movsb
jbe
push
outsb
cmp
into
mov
hlt
fnstsw
pop
sub
mov
lret
pop
xchg
imul
fbstp
mov
jp
cmpsl
cmp
mov
mov
dec
loope
test
push
jmp
popa
rorl
loopne
mov
in
fcomi
aad
hlt
clc
jae
sbb
lcall
mov
fs
adc
int3
loope
shrb
jp
mov
call
cld
push
pop
jecxz
test
mov
inc
xchg
sub
stos
dec
je
into
push
std
jecxz
das
cmc
add
out
popf
pusha
add
inc
jno
movsl
pop
dec
insl
push
inc
jnp
xchg
or
jecxz
inc
fisttpll
aas
mov
pushf
push
stos
icebp
sbb
pop
mov
sbb
cli
mov
add
sub
xchg
je
cmp
pushf
push
inc
ja
xchg
shlb
push
fistpll
pop
push
out
dec
fisttps
lock
xchg
push
push
lods
push
push
pcmpgtw
sbb
out
dec
push
lahf
mov
std
loope
push
lcall
mov
push
test
leave
mov
lea
mov
push
push
repz
pop
movsb
stc
jno
dec
in
sahf
inc
push
addr16
int3
jnp
das
jb
sbb
inc
lret
xchg
jecxz
imul
shlb
sbb
in
jle
fwait
jmp
leave
mov
negb
sub
xchg
cld
mov
repz
mov
insb
xor
mov
ljmp
je
add
das
shr
into
cmc
fcoms
enter
lds
push
cltd
jae
sarb
out
std
push
movsl
out
jmp
ficompl
mov
movsl
push
popl
and
dec
sahf
pmulhw
sub
in
ficompl
les
cmp
call
jne
inc
mov
cmp
mov
in
ljmp
inc
stos
std
ret
sbb
add
add
sub
mov
cmp
cmc
cs
adc
jnp
addr16
mov
and
push
ret
sbb
adc
pop
bound
insl
adc
pushf
fidivs
adc
stos
push
mov
jp
lret
adc
dec
lea
xor
pop
xchg
mov
lock
dec
je
shrb
mov
push
xchg
cmp
pop
push
out
bound
dec
hlt
js
shl
sbbl
rcl
mov
shlb
pop
arpl
aaa
hlt
outsb
xor
jmp
push
push
cmp
adc
adc
int3
inc
cmp
add
bound
or
roll
adc
repz
pop
nop
stos
mov
xor
fsubrl
inc
mov
sbb
push
mov
loop,pn
sub
inc
xchg
xchg
xor
mov
fstl
sub
inc
sub
pusha
mov
pop
push
addb
mov
cs
xchg
mov
mov
rcr
dec
cli
lcall
popf
insl
sbb
adc
scas
push
cmp
mov
mov
test
std
test
pop
or
movsl
shrl
cmpb
mov
mov
int3
rcrl
mov
out
mov
inc
xlat
adc
aas
cmc
in
push
das
aad
divb
daa
cwtl
ss
arpl
sbb
out
repnz
stos
lods
fisubs
mov
xlat
adc
pop
mull
jmp
mov
pop
mov
ds
pushf
pop
bound
or
ret
or
cmc
addb
fwait
stos
sbb
push
mov
adc
jl
imulb
dec
fnsave
fdivs
out
ret
pop
push
data16
pop
cmp
stos
inc
push
and
and
xchg
popa
lods
popf
mov
or
pop
xchg
add
ficomps
nop
xor
pop
in
orl
das
or
inc
push
or
enter
insl
dec
lods
mov
sbb
stos
mov
dec
scas
jb
pop
pop
enter
les
mov
aas
popf
pop
pushf
pop
xor
push
jae
push
mov
es
cmp
pop
cltd
nop
lret
sub
or
pushf
sarl
mov
xor
fists
xchg
loop
pop
or
imul
xchg
cmp
je
mov
test
sti
pop
mov
push
cmp
add
xor
xor
mov
mov
jno
inc
ds
clc
outsl
adc
sbb
adc
shlb
pushf
ja
ljmp
xchg
movb
cmp
xchg
js
mov
sarb
mov
push
repz
jo
jnp
cmp
int3
test
movsl
xchg
sub
sub
push
cmp
mov
mov
stos
imul
mov
xlat
in
sbb
cmp
lds
rorl
or
and
inc
xchg
sub
aaa
enter
testl
or
jns
ficoml
fimuls
decb
mov
xchg
pushf
into
dec
iret
lcall
outsl
enter
sbb
push
loope
push
clc
inc
call
and
loop
dec
xor
loop
dec
mov
enter
lods
mov
mov
jo
cmp
icebp
ret
int3
movsl
ficoms
test
pop
mov
repnz
add
lock
add
test
dec
subb
mov
push
xor
ja
lcall
movsl
cmp
inc
and
sahf
nop
mov
sarb
mov
push
inc
xor
mov
mov
cli
mov
xor
mov
dec
pop
scas
imul
adc
xchg
push
std
ljmp
mov
lock
mov
imul
mov
shl
addr16
out
cmp
push
sbb
movsb
dec
int3
pusha
jbe
dec
inc
jne
scas
cmp
int3
cmpsl
xchg
stos
rcl
test
dec
jb
out
and
xchg
rorl
and
stc
and
int
outsl
jbe
and
daa
mov
adc
fdivrp
cmc
mov
fs
imul
testl
pop
imul
rol
insl
jae
addr16
sub
subl
jecxz
dec
and
inc
sbb
stos
leave
test
xchg
push
mov
popf
ljmp
push
insl
mov
cmp
mov
pusha
inc
mov
inc
das
divl
cwtl
fdivs
leave
pop
mov
mov
mov
aas
jmp
lret
adc
push
js
test
loop
mov
stos
pop
and
mov
fs
js
ja
xchg
xchg
hlt
cmp
mov
pusha
sbb
sub
push
movsl
jge,pt
or
rcl
adc
sub
fisubs
fcoms
testb
aad
cmpsb
mov
push
cmpsb
mov
pop
adc
push
mov
xchg
ja
push
aas
mov
and
and
xchg
bound
push
mov
andl
mov
push
pop
xor
in
inc
sbb
push
out
mov
in
mov
test
inc
scas
addr16
test
xchg
pop
xor
shrl
scas
insl
mov
mov
test
and
leave
sub
push
xchg
xor
push
ljmp
mov
mov
cltd
mov
jl
push
lock
push
cltd
xlat
iret
clc
jno
popa
sub
enter
notb
push
mov
in
js
inc
or
sub
cmpl
call
dec
mov
repnz
sbb
sub
xor
lock
mov
add
adc
sbb
nop
xchg
aaa
mov
pop
mov
mov
test
mov
iret
cli
stos
bound
mov
mov
lods
cld
js
sub
sbb
adc
icebp
cmp
jmp
mov
add
cmp
push
loope
dec
xor
mov
mov
lret
jl
sbb
adc
insb
or
sarb
inc
lock
rcrl
pop
sub
push
mov
data16
in
adcl
jp
xor
sbb
test
enter
arpl
hlt
xor
fiadds
das
sarb
lods
dec
negl
xor
and
fldt
jecxz
cltd
ja
out
hlt
pop
cmpl
iret
mov
xor
mov
sbb
ds
cmp
mov
insb
enter
mov
lods
pop
ja
inc
lds
inc
icebp
jbe
sarb
inc
cld
jmp
fldl
daa
pop
popl
jbe
out
sub
cli
add
cmp
mov
repnz
cwtl
xorb
cs
push
shl
push
test
lahf
js
mov
dec
xchg
or
dec
pop
clc
xchg
rcrl
rclb
ljmpw
mov
pop
jecxz
lods
and
xchg
push
or
pop
ljmp
push
mov
popf
clc
mov
mov
outsl
mov
ja
call
push
fs
xlat
and
insl
daa
push
mov
mov
subb
mov
jle
mov
hlt
or
insl
or
or
lods
xor
pop
test
inc
pop
mov
jp
vpand
mov
out
insb
sub
fisttpl
es
into
mov
popf
pushf
cmpsl
lock
loope
jle
jmp
sub
clc
iret
stos
fcomp
jle
xchg
pop
jmp
and
mov
iret
js
mov
outsl
insl
arpl
fcmovbe
jb
test
cltd
xor
dec
daa
xchg
push
aaa
daa
ja
fbstp
jnp
fcompl
ficoms
push
data16
stos
add
xchg
fisubl
es
mov
sub
in
out
dec
fisttpll
leave
shrb
push
mov
jl
inc
jo
xor
add
ret
ljmp
stos
popf
test
mov
cld
inc
mov
sub
stos
push
jb
les
xchg
cs
pop
ret
dec
adc
arpl
fnstcw
push
or
cmpsl
dec
jp
stc
lret
dec
push
xchg
push
sub
pop
or
es
in
jb,pt
loopne
push
cwtl
jne
or
or
testl
jg
push
divb
push
mov
scas
daa
push
je
xor
loope
adc
loop
pop
ret
lcall
pop
jno
popa
add
inc
xor
imul
dec
rol
jmp
icebp
cmc
out
je
xchg
test
adc
add
jo
mov
ret
dec
dec
lret
mov
icebp
pusha
lods
outsl
mov
inc
or
ljmp
pusha
xor
mov
mov
cmpsb
mov
adc
test
jo
aam
nop
xor
out
and
in
mov
je
push
or
sub
fsubrp
andl
ja
arpl
push
in
shll
or
mov
inc
imul
call
rcrb
inc
pop
int
inc
dec
xchg
inc
std
jns
out
in
into
test
xchg
sub
xor
jnp
cltd
in
cmp
gs
mov
gs
adc
or
push
inc
pop
push
sub
pop
xor
js
loope
in
sahf
pushl
sub
das
jno
pushf
push
mov
hlt
push
pop
push
imul
mov
pop
cltd
std
lcall
xchg
test
movsb
dec
inc
fwait
or
test
xchg
jmp
pushf
inc
jbe
and
push
dec
push
push
push
es
rolb
pushf
sub
nop
mov
pusha
scas
cmp
in
fwait
scas
rcll
pop
cmp
cmp
arpl
push
inc
outsb
add
cwtl
xchg
ficoms
inc
out
sbb
pop
mov
push
adc
mov
inc
in
std
mov
dec
imull
mov
inc
aad
push
rcrb
je
das
fnsave
sbb
out
sarl
or
scas
mov
push
mov
push
arpl
cmp
xor
fistl
and
mov
xchg
nop
and
inc
shrl
lods
dec
das
lret
loop
movsb
aad
sti
lds
jp,pn
push
lret
xchg
xor
imul
ljmp
pop
sbb
mov
fimull
lea
add
pop
outsb
int3
data16
push
mov
das
cli
mov
mov
rep
ficoml
pop
xor
ret
outsl
inc
jb
cmp
push
mov
fnstsw
popf
or
mov
push
dec
imul
jo
jmp
push
lock
mov
pop
dec
sub
cmp
or
sbb
in
popf
cld
lods
int3
mov
mov
or
dec
cmp
cmp
or
sbb
in
popf
cld
lods
int3
mov
mov
or
int3
cmp
mov
mov
movsb
int3
mov
mov
adc
dec
adc
cmp
or
sbb
in
bound
int3
mov
inc
adc
arpl
in
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
xor
aas
xchg
das
pop
or
and
lahf
xor
scas
fbstp
call
movsl
pop
mov
test
xchg
das
in
cmc
dec
lds
outsl
and
mov
jne
inc
call
movsl
pop
mov
test
xchg
das
in
cmc
dec
lds
outsl
and
iret
jo
push
lea
gs
leave
pop
cltd
aad
jl,pt
mov
inc
clc
imul
fisubs
lock
cmp
cs
in
cli
mov
jae
addr16
and
out
pop
mov
mov
lods
adc
or
loope
jg
dec
js
out
and
mov
mov
movb
out
loopne
push
movsl
jns,pt
in
fstps
xchg
aad
xor
inc
std
push
test
into
pop
orb
jmp
std
mov
adc
dec
fiaddl
push
inc
adc
mov
stos
mov
adc
xchg
cmp
ljmp
cwtl
scas
adc
jne
inc
ljmp
test
xchg
das
in
cmc
dec
lds
outsl
and
mov
jne
inc
call
shll
fsubr
jns
imul
repz
push
jno
adc
and
icebp
aas
fnstsw
cmp
outsl
ja
pop
jecxz
jmp
push
mov
rorl
jnp
dec
mov
movsb
xor
dec
lds
outsl
and
mov
jne
inc
call
movsl
pop
mov
test
xchg
das
in
cmc
dec
lds
outsl
and
mov
jne
inc
call
movsl
pop
mov
or
xchg
lcall
xor
dec
jmp
pop
push
icebp
lds
ljmp
push
pop
mov
mov
popa
mov
call
in
cmc
outsl
divl
xor
fldenv
in
jl
cmp
push
inc
mov
add
pop
push
sbb
enter
or
sub
jge
cs
imul
mov
test
sub
mov
or
fdivs
fucomip
cmp
outsl
loope
xchg
lcall
shll
sbb
arpl
push
xchg
fadd
lods
iret
in
lahf
mov
ss
movsl
fisttps
movsl
or
xchg
cmp
popf
push
addb
xchg
daa
int3
test
pop
sub
repz
xor
dec
sub
cmp
int3
int
and
add
lcall
sub
mov
aam
adc
negb
fmuls
push
pop
sub
adc
push
addr16
push
add
sub
in
loopne
mov
mov
ja
push
or
sbb
outsb
subb
fisttpl
scas
mov
fsubrs
xchg
fists
mov
stos
xor
scas
cld
dec
clc
das
lcall
outsl
mov
push
lret
sub
call
sbb
push
mov
pop
loopne
sub
ss
adc
xor
adc
sbb
push
sti
je
jle
mov
stos
test
sbb
cwtl
fldt
aaa
cmp
fcoml
sub
mov
scas
xor
pop
loop
out
jno
enter
or
int
std
adc
cmpsl
and
icebp
sbb
ret
mov
mul
aas
mov
js
mov
fdivrs
jmp
dec
cltd
pop
in
in
mov
mov
in
push
xor
xchg
adc
or
sub
mov
fdivs
orb
push
push
outsl
push
push
jle
ljmp
inc
jne
stc
jle
pusha
push
shrb
popf
out
adc
out
repz
ja
xor
mov
mov
sahf
or
adc
mov
decb
push
daa
shrb
mov
stc
cltd
sub
sbb
in
ss
fldenv
mov
push
cmp
icebp
lds
push
mov
insl
sbb
push
and
fucomp
lret
mov
push
aam
shll
or
ret
insb
repnz
das
mov
cmc
repz
in
jp
fistl
and
cmpsl
ret
jmp
icebp
imul
pop
mov
push
inc
cwtl
xchg
je
ljmp
in
pop
lods
push
adc
or
adc
mov
ljmp
iret
lcall
movsb
iret
fadd
cwtd
cmp
lret
ret
movlhps
sub
js
fisubrs
pop
cmp
jne
xchg
leave
or
pop
push
mov
or
and
mov
adc
pop
or
mov
jle
std
leave
jle
or
imul
dec
pop
test
les
push
or
arpl
test
pop
mov
and
rcrl
inc
es
or
enter
adc
xchg
dec
das
stos
cmpsl
daa
xchg
xchg
cmp
and
or
push
pop
sbb
add
idivb
stos
push
pop
les
cmp
pop
jb
xor
or
icebp
mov
cmpsl
and
or
jecxz
lea
popa
outsl
out
xchg
inc
sub
jnp
push
inc
out
adc
ret
cmp
repnz
cmc
push
and
push
jg
out
sub
add
scas
repz
fwait
adc
inc
popf
mov
push
aam
mov
pushf
sahf
sbb
mov
xor
push
xor
or
daa
rorl
xor
test
faddl
push
into
cli
mov
std
repnz
enter
aaa
ja
jmp
push
mov
sbb
pop
arpl
ret
ds
xchg
sbb
push
jg
mov
xor
repz
cli
clc
loopne
mov
cmp
iret
shlb
push
mov
inc
add
and
fcompl
ja
fdivrs
add
add
addr16
mov
icebp
pop
js
repnz
std
mov
lods
add
jg
mov
lret
or
adc
aaa
sbb
sahf
push
stos
mov
dec
inc
mov
in
lret
sbb
sti
xor
stos
adc
xchg
xchg
fildll
lods
ljmp
pop
enter
sub
fimuls
imul
loope
enter
cmp
es
xor
push
mov
ja
mov
or
daa
gs
jb
xchg
popf
adc
dec
jecxz
dec
mov
inc
inc
inc
cltd
add
enter
test
gs
jne
add
xlat
xchg
xchg
inc
dec
fwait
psrad
jl
mov
aaa
xchg
push
in
push
roll
fsubl
jge
in
push
stos
in
loope
or
add
mov
jo
mov
in
outsl
hlt
test
pop
fisubrl
jae
inc
push
or
fiadds
out
or
jge
jno
in
mov
jmp
mov
xchg
cmpsl
aam
xchg
mov
ret
adc
mov
cmp
neg
mov
cmp
cli
ret
sti
daa
push
sbb
ljmp
imul
jl
jge
fstl
mov
ljmp
and
sbb
idivb
ja
cli
cmp
test
push
mov
jno
inc
jp
jne
push
and
int
pop
jns
in
dec
xchg
mov
add
fwait
in
mov
lahf
or
out
frstor
mov
or
xchg
dec
leave
cmovl
arpl
and
out
pop
sbb
mov
outsl
adc
pop
js
mov
int3
xor
repnz
mov
cmpsl
pop
xchg
add
test
cmp
push
xchg
lcall
clc
fidivs
out
mov
xchg
mov
das
mov
sub
inc
jno
mov
arpl
scas
push
gs
push
lret
cmp
popa
incb
enter
dec
leave
cld
dec
or
notb
and
mov
adc
add
sbb
xchg
xor
xchg
movsb
test
sub
dec
mov
mov
and
sahf
std
xchg
or
or
xchg
stos
outsb
push
pop
jl
lds
sub
inc
xchg
pusha
sbb
in
scas
fmull
das
pop
insb
fimuls
push
pop
adc
add
xor
rcr
test
andb
rcl
movsb
mov
xchg
or
lods
inc
inc
outsb
jmp
filds
dec
sbbb
jb
mov
jg
push
sarb
mov
add
cltd
push
push
subb
inc
pop
mov
xor
cs
xchg
sbb
addr16
cmpsl
loopne
cmp
pop
faddl
pop
mov
stc
in
dec
dec
push
mov
fcomps
scas
fisubrl
mov
wbinvd
sahf
je
fucom
cmpsb
aam
or
xorb
cmp
or
pop
xchg
je
sbb
and
push
cli
jge
and
test
and
ret
andb
lds
adc
sahf
in
xchg
fnstsw
pop
stc
ljmp
push
cs
dec
inc
shlb
xchg
xchg
and
xchg
js
sbb
mov
mov
bnd
ret
lret
arpl
stos
jmp
les
inc
arpl
leave
out
lahf
insb
inc
add
scas
xchg
mov
les
enter
shr
sahf
addr16
scas
pop
dec
cmp
cmp
test
xchg
sbb
adc
cmp
sub
and
mov
call
sub
cmc
loopne
mov
repnz
imul
inc
inc
sub
dec
mov
mov
pop
mov
in
mov
stc
mov
fsubrl
dec
ret
dec
ljmp
add
addr16
mov
fcomps
shlb
adc
andl
sub
cmp
bound
cmp
inc
test
xchg
fsubrl
sahf
lods
stos
ret
jmp
frstor
repz
adc
cmp
add
bound
sub
shrl
fnstenv
mov
xchg
pop
jp
inc
push
inc
mov
jl
mov
das
rorb
mov
fs
xacquire
jp
push
popf
mov
cmp
sti
xchg
push
or
cmp
out
push
movsb
cmpsb
jg
aaa
cmp
mov
out
cmc
iret
in
adc
adc
pop
popf
push
xor
dec
repnz
mov
sbb
mov
cltd
dec
lock
js
jecxz
mov
push
or
or
pop
add
js
pop
outsb
inc
incb
push
iret
and
mov
jno
in
push
cmp
bound
cmp
mov
les
mov
ljmp
cmp
test
jecxz
arpl
mov
or
and
adc
aas
dec
mov
sti
rorb
loopne
xor
push
push
xchg
in
sub
mov
push
shlb
fs
xchg
mov
shr
xor
pop
mov
and
jecxz
int
push
inc
sbb
sarl
jecxz
pop
jnp
mov
and
jle
xor
repnz
inc
mov
sub
int
clc
pop
xchg
into
dec
add
ss
fimull
xchg
mov
mov
aam
or
ret
xchg
fildll
scas
aad
in
dec
ret
cltd
in
cli
and
stos
sarl
mov
stos
inc
mov
inc
sub
test
push
gs
xchg
dec
data16
xlat
push
xor
adc
mov
sarb
in
mov
jns
xor
pop
adc
sti
dec
mov
hlt
pop
dec
mov
inc
in
mov
adc
mov
mov
dec
push
mov
mov
push
mov
loope
roll
mov
push
jne
jp
scas
dec
in
or
pop
push
int3
xchg
adc
les
std
int
cmc
jg
notl
and
xor
jae
fs
ret
sbb
cmp
mov
loop
sti
add
and
jnp
cmpb
cli
hlt
push
int3
mov
out
outsl
jmp
mov
xchg
add
xor
cwtl
outsb
orb
popf
mov
aad
sub
xchg
fs
ret
je
sbb
out
xchg
jbe
enter
dec
sbb
cmp
dec
outsl
int3
add
scas
inc
sbb
xlat
jge
movlps
stos
adc
cmc
outsl
arpl
test
inc
clc
ljmp
xchg
fsubrs
dec
xorb
imul
mov
mov
adc
mov
pusha
lcall
dec
jno
sbb
in
iret
mov
push
cwtl
fstpt
lods
add
lds
roll
fsub
test
std
mov
xchg
sub
and
sti
adc
mov
xchg
ljmp
dec
xchg
daa
lret
or
inc
negb
push
mov
sub
pop
lret
dec
jmp
int
or
das
fpatan
lret
and
test
and
sub
adc
xor
sub
jbe
int
mov
mov
pop
test
jne
xchg
mov
rcl
push
mov
je
mov
hlt
stc
mov
mov
or
and
add
iret
std
loope
scas
cli
cmp
ljmp
mov
pushf
repz
loopne
mov
push
xor
fadds
and
ret
inc
push
dec
sbb
adc
jns
dec
aaa
psubw
sub
pop
stos
loope
mov
mov
jl
jmp
add
cmp
mov
push
sbbl
xorl
imul
and
jle,pn
push
lret
pop
scas
and
adc
inc
loopne
insb
inc
imul
sahf
mov
add
shr
mov
mov
mov
ss
stos
out
daa
leave
idivb
pop
adcb
push
cltd
in
fcomp
ficompl
xchg
sbb
lahf
mov
shrb
out
std
ret
mov
enter
cs
fsubrl
daa
add
or
push
jecxz
xchg
xor
mov
xchg
test
cmc
add
ss
ficoml
paddsw
insb
fs
loop
mov
lods
and
mov
gs
pusha
add
imul
pop
jae
aad
cli
mov
stos
and
xlat
cmp
stc
movsb
jecxz
aas
cmp
pop
imul
xchg
hlt
cmp
push
fcomps
pop
andl
adc
dec
sbb
sbb
mov
jle
fstl
sub
mov
pop
cmpsb
jecxz
cs
leave
pop
cmp
in
jg
js
sbb
icebp
and
das
pop
inc
sbb
stos
sbb
mov
lds
scas
pop
pop
and
and
nop
adc
inc
dec
cs
movsb
aad
pop
xor
sub
jae
xor
and
arpl
pop
jmp
call
xchg
cmc
dec
jae
insb
lret
mov
jp
push
lea
mov
xchg
or
test
sbb
jo
add
mov
dec
negl
subl
lods
dec
mov
fildll
shrl
or
mov
mov
xchg
sbb
into
call
subl
pop
int3
sbb
lea
pop
lret
lods
call
pop
mov
aad
mov
cmpsl
pop
lahf
lahf
std
add
ret
aas
add
arpl
push
stos
adc
fwait
add
out
clc
repnz
or
enter
fistl
and
inc
data16
or
popa
ss
push
mov
and
jl
les
inc
out
sub
mov
loopne
shrl
lret
ror
or
mov
rcrb
lods
push
jbe
movsl
das
add
sbb
lret
inc
jne
aas
in
lea
push
push
mov
sbb
es
push
std
xchg
cmp
adc
in
in
out
das
ss
lds
lea
adc
push
lea
stos
lock
lret
scas
popf
mov
xchg
cmpsb
mov
shrb
add
or
cmc
sbbb
mov
int
aam
in
test
repz
xor
push
js
out
push
out
and
adc
leave
iret
mov
sbb
shrb
pop
loopne
pop
aad
jo
fisubs
movsb
loopne
gs
cmp
mov
stos
shl
imul
stc
and
xchg
mov
dec
aad
inc
int3
sbb
insb
adc
and
repz
lret
adc
imul
jns
out
bound
pop
imul
jo
pop
rcrb
push
cmp
push
dec
add
outsl
push
std
stos
xor
cmp
inc
cmp
adc
and
add
pop
sub
das
aam
idivb
jne
in
mov
xchg
iret
mov
loop
adcl
mov
fimuls
sbb
adc
scas
xor
and
daa
adcb
mov
ficoml
fildll
shll
push
ret
xor
lock
add
daa
imull
adcb
push
aas
mov
outsl
mov
ret
rcr
divl
push
mov
mov
mov
pop
popa
lahf
mov
adc
pop
sub
lret
push
mov
push
adc
sbb
push
loopne
mov
cmpsb
add
cmp
pop
enter
frstor
xchg
sub
dec
insl
mov
push
lret
jb
and
xor
mov
int
andb
rolb
lods
mov
lock
or
mov
push
pushf
notl
icebp
addr16
faddl
std
dec
mov
dec
in
dec
sahf
cwtl
iret
xchg
rcrb
add
cmp
sarl
pop
gs
mov
loopne
fdivl
pop
sti
mov
cmpsl
sub
xor
or
jbe
pop
loop
pop
shrb
lcall
insb
mov
pop
dec
push
into
dec
sarb
or
xchg
cwtl
jg
fstpt
fstl
adc
mov
mov
xchg
andb
mov
xlat
out
dec
addl
and
cmc
jno
adc
mov
cmp
lahf
xor
inc
and
fucom
cmpsl
xor
jno
dec
add
push
stos
inc
insl
or
cmp
and
inc
add
les
push
iret
add
inc
xlat
dec
cmp
adc
lea
mov
dec
mov
cmp
hlt
cs
sub
in
sahf
inc
push
xchg
xor
call
fistpll
sub
mov
mov
cld
shll
dec
cmp
fisubl
push
jne
xchg
out
mov
movsl
dec
inc
loopne
pusha
scas
movsl
jp
mov
in
dec
icebp
push
movsb
mov
ret
sub
std
xchg
add
and
dec
test
fldt
ss
pop
lock
xchg
cli
leave
aad
lret
icebp
sbb
mov
cli
imul
add
adc
jne
xchg
pop
or
mov
imul
dec
ret
incb
xchg
mov
cmp
pop
or
bswap
popf
mov
cmp
pusha
and
daa
and
sub
push
sub
cmp
pop
in
sahf
adc
xchg
mov
mov
clc
mov
and
lods
sbb
adc
repnz
cltd
cmc
rcll
mov
mov
imul
push
mov
sub
out
push
add
leave
imul
lea
inc
cmp
popf
mov
mov
and
xchg
mov
inc
leave
sub
mov
push
or
adc
jb
push
cmpsb
cld
xlat
add
or
and
jl
leave
cmp
ret
aad
add
xchg
test
mov
rcrb
repnz
or
lea
in
and
mov
dec
sub
mov
sar
in
fidivrs
push
dec
cltd
inc
mov
inc
jg
cmc
out
or
and
inc
movsb
arpl
or
dec
movsl
lahf
ret
cmpsl
adc
aad
cmp
daa
aad
push
xchg
cmpsb
xor
scas
and
mov
lock
je
sub
in
fisttpll
mov
les
sub
fs
push
test
xor
mov
out
xchg
jmp
ja
and
push
pop
xchg
pop
call
popf
dec
pop
into
lret
fcoms
pop
hlt
leave
jnp
jne
xlat
jmp
jnp
add
xchg
or
inc
mov
jo
xor
xchg
dec
hlt
mov
add
cltd
sbb
jg
lock
adc
ffree
test
lret
adc
adc
mov
xor
loopne
idiv
lea
int
inc
jmp
mov
aam
sub
xor
inc
inc
lcall
lahf
fistpl
pop
push
cwtl
sbb
mov
out
repz
add
iret
andl
mov
sbb
sub
jns
in
out
cmp
push
mov
cmc
add
loop
sar
xlat
push
inc
mov
cmp
dec
into
dec
aam
rcrl
popa
popf
adc
jo
push
mov
mov
fists
xor
int3
inc
pop
add
mov
mov
mov
pop
jnp
fs
cmpsl
jl
stos
adc
cmp
xor
dec
xchg
push
stos
jg
sarb
add
xchg
mov
dec
movsb
sbb
test
dec
sbb
or
add
fwait
out
jnp
dec
mov
mov
mov
cmp
or
arpl
in
push
or
test
jle
rorl
jmp
popf
fs
pushf
setbe
js
mov
jge
mov
loopne
std
mov
cmc
nop
and
loopne
outsb
fsubrl
xor
cmp
inc
inc
in
adc
push
arpl
jmp
scas
sbb
mov
mov
cmp
push
popa
aas
faddp
inc
lock
mov
jno
and
and
sub
pop
and
lret
pop
lods
xchg
fadds
inc
int3
cmp
jbe
fisttps
fs
in
rcl
std
mov
jbe
in
fistpll
in
incl
sub
or
in
and
int3
mov
cli
cs
mov
cld
inc
jne
mov
mov
sub
and
adc
mov
or
push
mov
push
pusha
or
and
lds
push
js
or
or
lods
es
add
or
inc
fs
sub
dec
sbb
dec
imul
xlat
xchg
adc
nopl
mov
fsubrs
inc
cwtl
sub
xor
sbb
dec
cwtl
scas
jg
mov
mov
inc
mov
xchg
das
in
cmc
dec
lds
outsl
and
mov
jne
inc
call
movsl
pop
mov
test
xchg
das
in
cmc
dec
lds
outsl
and
mov
jne
inc
call
movsl
sbb
cs
cmc
dec
lds
outsl
and
mov
jne
inc
call
pop
mov
test
xchg
sub
pop
cmc
iret
nop
and
mov
std
xor
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
les
hlt
mov
mov
into
inc
adcb
je
add
adc
and
xor
les
hlt
mov
mov
inc
ds
adc
je
add
adc
and
xor
les
hlt
mov
mov
inc
ds
or
insb
cmp
push
pop
cmp
int
jmp
inc
xchg
add
fisttpll
xchg
daa
inc
testl
dec
mov
jns
scas
out
adc
push
inc
inc
mov
jp
jmp
outsb
add
cmp
pop
outsb
sub
jl
fidivl
pop
or
fwait
sbb
icebp
movsb
sbbl
mov
test
test
pop
fsubrl
inc
ret
jmp
outsb
jl
and
ss
cmp
push
mov
cmpl
lahf
add
shrl
mov
and
mov
mov
gs
push
aas
inc
adc
sub
adc
mov
mov
hlt
mov
mov
inc
ds
cs
je
add
adc
and
xor
cmpb
iret
call
mov
push
aaa
pop
dec
sbb
or
pusha
sub
sub
shlb
in
ret
stos
movsb
mov
and
sbb
push
cmp
lods
pushl
testb
into
inc
ds
cs
je
add
adc
and
xor
les
hlt
mov
mov
inc
ds
cs
je
add
adc
and
xor
les
rorb
or
insl
sbb
and
imulb
lea
lods
aad
fldenv
into
inc
xorl
loop
xchg
xor
aas
jmp
fsubs
cmpl
notb
jecxz
mov
sahf
push
dec
sbb
loopne
subb
cmp
pop
jge
jns
pop
add
xchg
mov
inc
test
adc
stos
jbe
std
mov
inc
cmp
sub
dec
loopne
mov
pop
jae
lcall
cmpsl
or
pop
fidivs
xchg
and
cmp
mov
mov
dec
pop
adc
or
mov
inc
and
cltd
mov
cmp
sbb
lret
add
jmp
notb
sub
cmp
and
sub
out
pop
push
out
pop
ljmp
pushf
ret
ss
cmp
adc
pushf
jp
icebp
loope
lcall
or
fs
mov
xor
loop
stos
cwtl
lock
stc
inc
jbe
fs
mov
mov
mov
in
dec
lret
mov
loopne
or
aaa
test
pop
fcompl
sbb
testb
or
add
test
mov
fiadds
mov
lret
xor
in
push
add
std
pop
divb
xchg
cmp
mov
adc
push
int3
call
sbb
gs
scas
or
arpl
xorl
lahf
pop
inc
ljmp
pop
pop
imul
cs
pop
iret
xor
ret
repnz
lret
jge
dec
xchg
out
fs
data16
sub
mov
popf
mov
cs
push
pop
lods
sub
inc
push
andl
inc
pop
jns
inc
shrl
mov
and
nop
push
imul
xlat
int
pop
jp
hlt
adc
jmp
fsubp
mov
pusha
mov
lahf
lahf
jl
xchg
mov
rcrb
mov
rol
lea
pop
cmpsb
sub
je
sub
mov
add
jae
repz
aas
cmp
loope
fwait
cmp
sbb
cld
sbbl
ljmp
fmull
sbb
push
into
sub
mov
enter
and
cwtl
pop
jbe
mov
js
pop
xchg
cmpb
rcrl
xchg
mov
xchg
rcrl
fdivs
xchg
jge
mov
xchg
jp
push
jbe
sbb
lret
adc
scas
sahf
std
push
pushf
add
inc
or
mov
pop
ret
xlat
pop
je
jno
scas
sahf
inc
xchg
in
mov
ja
or
mov
sbb
imul
imul
mov
addb
xchg
adc
movsb
inc
cltd
mov
fstl
mov
inc
sbb
push
ljmp
mov
sub
xlat
lock
mov
pop
adc
insl
mov
fs
push
jle
jns
es
and
leave
xlat
push
mov
xchg
pop
mov
push
mov
hlt
add
fisubs
sub
jbe
adc
es
mov
pop
sbb
lea
les
rcll
nop
cmp
sti
xlat
std
mov
sbb
pop
cmp
cmp
sbb
sbb
andl
shrb
sub
data16
sbb
popf
ret
xchg
insl
fldl2e
jl
push
rcrl
xchg
push
jae
dec
jmp
lret
xor
out
mov
inc
sub
fstpt
pop
fdivr
lock
fcmovbe
bsr
or
je
sub
xchg
xor
hlt
lret
and
rclb
jae
cmp
lock
or
dec
stos
mov
fmull
adc
movsl
lods
add
inc
or
mov
gs
imulb
jge
xchg
inc
in
xchg
and
jo
cmc
out
cwtl
fldenv
sbb
push
mov
and
popa
ret
cwtl
push
and
insl
push
cmpb
jno
mov
mov
adcl
adc
push
daa
or
mov
cmp
add
insb
nop
pop
jecxz
jge
adc
test
pop
fisubrs
popa
mov
cmp
sbb
lods
cmp
gs
dec
mull
xor
popf
insl
and
jl
outsl
cli
add
dec
or
daa
fwait
enter
mov
jge
inc
insl
adcl
xor
popf
ja
rcrl
stc
jne
jo
mov
fldl
iret
test
inc
jp
loope
mov
mov
dec
push
inc
cmpsl
repz
add
aas
hlt
fstps
mov
cltd
out
and
decb
adc
popa
or
and
lock
push
fnstsw
rcrl
inc
mov
nop
xchg
sub
aaa
xor
mov
dec
fisttps
int3
popa
push
sbb
clc
xor
jae
icebp
outsb
inc
cmp
out
cmp
inc
or
cltd
add
insl
and
jno
push
mov
fiadds
push
sti
pop
scas
loopne
cmp
pop
mov
add
aam
xor
sub
fcompl
sti
aaa
orl
push
cmc
std
xlat
jae
jns
loope
scas
in
addr16
ret
sbb
lahf
ret
leave
dec
lret
mov
and
in
arpl
ret
mov
dec
adc
out
in
mov
inc
lea
ds
xchg
jae
pop
ja
cli
test
or
leave
pop
rorl
sbb
xor
ljmp
in
and
aad
push
lea
testb
setne
and
mov
push
sti
test
xor
mov
xor
outsb
sarb
sub
pop
iret
icebp
mov
and
mov
xor
sbb
cmpb
ret
and
pop
add
xchg
aam
and
js
insl
sub
mov
sub
sbb
push
in
and
std
mov
cmpsb
es
dec
popa
pop
sbb
add
pop
mov
outsb
scas
inc
cmp
xor
lret
push
sub
mov
js
into
lock
cli
fdivs
pop
xchg
test
sarb
jno
or
mov
push
xor
pop
jmp
or
out
sub
mov
sub
ljmp
addr16
xor
add
adc
cmp
shll
push
in
insl
pusha
cmpsb
sbb
cmpsl
mov
mov
stc
push
jecxz,pn
jns
push
scas
inc
pop
test
jns
mov
jne
jecxz
push
js
stc
push
call
testb
in
jb
xchg
pop
dec
push
mov
xchg
xor
push
push
add
mov
dec
mov
js
je
mov
add
rorl
aad
or
ljmp
mov
shlb
cmp
leave
int3
mov
call
fwait
jecxz
dec
dec
cmc
pop
or
xchg
mov
rorb
mov
sarl
movsl
sub
fsubl
daa
ss
fbstp
je
adc
imul
push
dec
aad
jb
test
arpl
and
add
hlt
dec
ss
sbb
xor
lds
outsb
out
inc
call
test
mov
cmp
mov
sbb
mov
mov
out
and
pop
cli
dec
jg
mov
movsl
sub
dec
mov
js
xchg
push
push
sub
stos
fldl
mov
test
push
out
cmpsl
mov
in
iret
mov
jae
loope
rolb
das
ss
je
ljmp
xor
mov
je
imul
int
fwait
nop
fistps
xor
sbb
push
in
push
movsl
test
adc
dec
lods
aam
in
fdivp
in
mov
push
push
rorl
lods
dec
dec
mov
movsl
je
bound
dec
jge
test
stc
cmp
leave
fs
repnz
repz
outsb
jp
in
xchg
sbb
scas
jno
add
and
in
xor
adc
dec
cmp
add
pop
mov
jl
cmpsl
pop
inc
mov
mov
fstl
aaa
mov
cmp
sbb
test
jge
sbb
pop
cmp
sbb
adc
rcrb
shr
dec
fimuls
adc
and
sub
ret
fsubl
inc
stos
jae
fucom
or
orb
mov
lret
mov
and
mov
dec
test
sti
add
push
mov
push
mov
repnz
xchg
pop
leave
shll
stc
aad
gs
loopne
cmc
mov
popa
dec
fnstsw
jne
clc
fucomp
lahf
not
lahf
frstor
push
insl
push
lods
call
aaa
lcall
mov
add
pop
add
inc
pushf
data16
insl
xchg
test
mov
lods
inc
mov
lret
fcmovu
push
outsb
data16
jno
loope
cmp
cmp
lahf
adc
daa
cltd
jge
insl
scas
stos
jns
adc
stc
outsb
or
repnz
out
jge
cmp
jg
add
or
addb
push
xchg
imul
xchg
add
fcom
cmp
mov
shl
lods
aam
sbb
aas
sbb
movsb
jne
scas
sub
mov
imul
mov
aaa
test
mov
out
mov
or
negl
mov
popa
sub
dec
cmpsb
mov
sbb
adc
loopne
imulb
adc
jecxz
int
sbb
dec
xor
mov
jg
xor
inc
int
iret
mov
mov
xchg
rol
mov
sbb
gs
xor
test
pop
jle
in
test
rcr
lcall
jl
and
cmp
loopne
int3
or
add
mov
rclb
inc
jnp
pusha
xchg
xchg
and
mov
push
sub
data16
fidivl
mov
out
pop
mov
sub
xchg
fadd
mov
push
ljmp
mov
stos
emms
cmp
ds
stc
pusha
mov
mov
fadds
or
pop
xchg
adc
loop
push
shlb
sub
mov
mov
sbb
or
or
es
sarl
xor
add
lret
xchg
pop
mov
mov
orl
mov
inc
inc
mov
stos
sbb
or
mov
je
enter
scas
mov
loope
aaa
fists
lods
xchg
and
clc
pushf
cltd
push
je
pop
insb
fimuls
pop
pop
out
outsl
js
mov
out
fistpl
pushf
dec
pop
pusha
ljmp
test
mov
jmp
jno
ret
das
fldenv
sti
popa
out
adcb
ss
push
or
aam
fsts
inc
dec
inc
adc
mov
xchg
mov
or
lcall
fnstsw
jl
and
stos
mov
pminsw
sbb
lods
sub
and
add
adc
jns
mov
lods
mov
fdivl
add
insb
push
fcompl
xor
rorb
test
lcall
fisttpl
mov
cmp
dec
lods
bound
mov
cld
jbe
lret
and
pop
gs
jnp
pop
mov
leave
or
mov
shll
lahf
jns
aad
jnp
or
insl
jmp
repz
xchg
aaa
hlt
imul
cwtl
mov
mov
push
rcrl
sbb
inc
fcmove
test
in
fstpt
and
mov
jne
cmp
xor
mov
or
int3
rcrb
pop
fadds
sub
das
bound
push
push
xchg
std
roll
dec
cmp
cmp
std
or
or
nop
aas
in
push
sbb
lea
adc
dec
lods
gs
bndldx
stos
mov
fistpl
cmp
stos
mov
leave
cs
cmpsl
mov
and
rolb
dec
inc
mov
xor
xchg
stos
mov
adc
sarb
hlt
fs
ja
jbe
sbb
inc
mov
lret
xchg
addl
sub
inc
mov
lods
aam
std
jbe
push
popl
lahf
jle
mov
popf
pop
leave
negl
xor
mov
aam
fcoms
shrb
mov
rorb
jmp
rcpps
jp
inc
push
jmp
and
fisubl
mov
fildll
jg
inc
mov
hlt
xchg
das
inc
insb
repnz
adc
fisttpl
leave
shlb
mov
jge
dec
adc
and
cltd
loop
mov
and
dec
sub
add
add
dec
sub
arpl
rclb
jl
and
mov
sbb
pusha
push
aam
xchg
xlat
ljmp
jmp
lcall
sahf
leave
inc
xor
out
ficompl
sbb
xchg
sbb
xor
mov
jb
ds
xchg
mov
inc
xor
mov
js
inc
std
call
pop
inc
outsb
in
xor
sbb
sahf
ret
in
rcll
fcmovnb
int
adc
cmp
movb
bt
mov
cltd
xchg
fsubs
mov
mov
out
xlat
cmpsb
cmc
xchg
mov
inc
mov
jle
outsl
xchg
inc
adc
daa
add
fldl
mov
sub
pop
sbb
sub
leave
roll
sahf
test
sub
mov
jecxz
addr16
outsl
clc
aam
and
mov
clc
mov
jno
xor
push
pop
jnp
jle
notb
adc
aaa
mov
xchg
testb
inc
shll
fsubrs
jmp
sbb
inc
in
leave
jecxz
fnstsw
jbe
stc
xchg
cltd
and
jno
inc
outsb
xor
push
jno
mov
sub
std
jmp
cmp
fiadds
xchg
adc
ror
dec
push
cmp
lcall
jg
cmp
mov
mov
popf
mov
cmpsb
push
cs
mov
pop
add
dec
dec
push
jge
xchg
adcl
flds
mov
jmp
dec
mov
ds
rclb
aam
adc
cmc
notl
add
fldenv
sub
cwtl
add
add
int3
outsl
mov
adc
sub
cld
lds
test
jp
hlt
or
jge
outsl
out
push
mov
loope
movsl
xchg
out
sub
enter
and
aaa
incl
cmp
sbb
inc
push
in
cld
xor
int3
jbe
or
negb
ja
mov
xchg
dec
ljmp
mov
fcmovbe
cmp
popf
das
xor
xlat
jne
jl
jecxz
in
jo
adc
testl
cmp
or
gs
jne
repz
fldt
pusha
dec
sub
das
dec
xchg
mov
stos
mov
out
xor
xor
ds
call
gs
mov
or
inc
rcl
and
jecxz
pusha
adc
jno
test
filds
add
mov
fsub
clc
push
cld
mov
test
or
sbb
icebp
fwait
outsb
loope
in
mov
jp
and
movsb
pop
mov
adc
mov
jle
mov
inc
jns
xor
es
gs
fisttpl
mov
xchg
cmpsl
dec
shlb
xor
xchg
into
mov
mov
das
xchg
adc
stos
jmp
test
in
stos
mov
outsb
xor
adc
sbb
jno
adc
pushf
mov
test
arpl
cmp
ss
adc
arpl
add
iret
cs
fildll
mov
xchg
lds
popa
and
mov
les
data16
outsl
push
das
aas
mov
shlb
mov
sbb
pop
pop
lds
pop
fildl
mov
callw
in
repz
daa
sbb
adc
rorb
lds
xchg
sbb
inc
xor
test
cld
inc
not
dec
and
in
mov
pop
jp
jae
orl
leave
dec
stos
pushf
and
lock
loope
xor
fsubs
inc
clc
lods
or
push
imul
call
out
scas
ficomps
push
xchg
cltd
sub
or
cmp
adc
jb
push
or
dec
inc
mov
out
jge
mov
pushf
sub
dec
jbe
mov
push
lret
arpl
std
sbb
fsubr
inc
cmp
mov
pop
or
psubusb
adc
push
loope
mov
pushf
jb
sbb
mov
mov
ror
lock
test
fmul
dec
roll
adc
les
jbe
cmpl
outsl
test
int
popf
stc
jno
mov
std
push
push
jle
lret
lods
test
cmpsb
add
sbbl
xor
mov
out
xchg
iret
ljmp
mov
pop
inc
mov
pop
lock
lea
and
push
das
inc
ljmp
stos
fstl
lcall
ss
xlat
scas
push
xchg
flds
ret
rolb
and
sub
arpl
dec
add
dec
sbb
lock
pop
out
cli
out
jmp
jmp
or
lock
outsl
push
lods
mov
pop
mov
adc
mov
jno
lds
jge
sub
in
daa
xchg
lahf
arpl
lcall
xlat
pop
mov
das
xchg
sti
adc
rcll
mov
sbb
ljmp
adc
lds
les
testl
addr16
jl
jb
cli
call
mov
sahf
push
inc
mov
or
cvtpi2ps
insl
cli
test
adc
cmp
cmovbe
jae
ds
lea
into
mov
xchg
not
mov
pop
dec
jmp
fwait
and
mov
push
cltd
cli
test
cltd
mov
notb
xor
addr16
jnp
ret
icebp
lods
mov
rorl
lret
scas
jno
cwtl
jne
inc
and
int3
loop
mov
imul
jecxz
jmp
fbld
jae
dec
test
jmp
jb
dec
and
cs
xor
and
push
and
sub
adcb
int
jns
pop
inc
add
in
dec
daa
pop
jl
cmpsl
xorl
mov
fs
std
mov
add
xchg
sti
mov
sbb
or
sub
in
cmp
sbb
pop
pop
dec
cmpsb
lcall
lret
add
xlat
pop
stos
das
or
mov
ss
out
lock
rorl
jmp
call
or
dec
les
add
mov
testb
int
pop
dec
daa
push
pop
scas
lret
push
inc
pushf
mov
sarl
pushf
adc
movsb
cmp
mov
clc
mov
jno
mov
push
inc
ja
pop
insb
test
and
repnz
fwait
dec
in
jb
inc
adc
das
xor
das
cld
lret
movsb
iret
inc
jmp
jae
push
sub
test
mov
jecxz
cs
movsb
pushf
pop
js
adc
daa
mov
clc
mov
push
les
pop
mov
ljmp
and
sbb
mov
cld
dec
stos
jp
push
pop
jnp
push
sub
rorb
sbb
cmpsb
and
xchg
scas
push
sub
stc
dec
cmp
jo
aas
mov
push
pcmpgtd
xor
jmp
fmull
int3
jo
popa
xchg
mov
xchg
repz
xor
scas
aad
xchg
arpl
mov
xchg
repnz
xor
mov
cmp
icebp
and
or
mov
pop
hlt
pop
popf
jp
xor
lock
pop
mov
inc
or
fbstp
ds
shr
xorb
and
cmp
or
mov
and
cltd
mov
rcll
rcll
jecxz
in
imul
xor
xor
inc
pushf
xor
adc
aaa
xor
mov
mov
stos
leave
test
add
cmp
ret
push
sbb
add
sub
jle
dec
push
cltd
stc
std
addr16
ret
push
test
test
roll
adc
push
fxch
inc
jnp
mov
sub
and
mov
mulb
dec
jg
pop
aad
pop
cmp
in
cmpsl
pop
fbld
scas
stc
pop
addr16
int
cld
mov
pop
mov
test
out
adc
add
dec
jecxz
loop
ret
ret
cmp
in
popf
add
dec
mov
mov
inc
push
leave
fisubl
jg
jo
jecxz
rcrl
pop
add
adc
xchg
mov
sub
jo
push
aad
sahf
ss
mov
lods
mov
xchg
jbe
imul
iret
and
enter
fimuls
pop
cmp
test
cmp
out
rclb
fmuls
xchg
lods
lahf
sub
jp
cltd
popa
movl
sahf
cmpsl
shl
ret
cmp
and
testl
out
xchg
aam
int
push
jae
cmp
shrb
push
adcb
orb
xlat
xor
daa
scas
ds
hlt
mov
mov
inc
ds
cs
je
add
adc
and
xor
les
hlt
mov
mov
inc
ds
cs
je
add
adc
and
xor
les
hlt
mov
mov
inc
ds
cs
je
add
adc
and
xor
les
hlt
mov
mov
inc
ds
test
push
je
jae
pushf
xchg
cltd
ljmp
stos
leave
repz
mov
imul
sbb
cmp
movsl
imul
cltd
ljmp
fnstcw
add
push
pop
sti
dec
dec
dec
pop
sub
jns
nop
jecxz
repz
mov
mov
sub
or
dec
inc
and
data16
pop
sbb
gs
mov
lcall
and
repnz
aad
cmp
in
jae
cli
adc
test
lret
sbb
jne
test
xchg
or
test
hlt
repnz
cltd
and
xor
cmp
jp
push
xor
mov
lahf
sbb
ret
sbb
adc
in
mov
stc
lcall
int3
push
or
imul
mov
stc
xchg
jmp
xchg
cmp
cmp
jecxz
pop
cmp
dec
orl
je
push
wbinvd
fwait
rcr
notb
out
movsl
cmp
mov
jns
dec
in
cltd
cli
test
mov
loopne
adc
jb
inc
and
and
imul
cld
cwtl
int3
mov
mov
jmp
xchg
out
jge
sbb
pop
push
das
and
jne
mov
mov
in
out
mov
aas
dec
dec
sub
sub
sbb
jle
cli
stos
ljmp
fldcw
or
push
pop
cmp
cmp
imul
cltd
ljmp
fldcw
or
push
pop
cmp
cmp
imul
pop
stc
lock
ror
out
cmc
xor
push
mov
xchg
xlat
inc
push
sbb
fs
aam
mov
enter
sbb
shll
mov
dec
sbb
pop
lret
push
xor
xor
lcall
mov
sbb
cltd
and
retw
mov
mov
test
sbb
iret
pushl
test
mov
dec
jno
je
sbb
fcoms
push
sarb
cltd
dec
fnsave
in
imull
jp
cs
les
pop
sbb
and
into
push
inc
data16
jno
ret
jmp
cmpsl
loop
mov
out
stos
mov
bound
mov
xor
dec
adc
add
dec
jb
mov
adcl
out
fisttps
test
push
inc
fisttps
push
insl
lea
or
push
mov
jno
pop
jecxz
dec
sub
test
hlt
cltd
push
rol
mov
lahf
test
subb
call
adc
mov
pop
sahf
fbld
xor
push
adc
inc
or
or
mov
outsl
je
cmp
push
mov
dec
imul
ljmp
cli
xor
out
ficoms
xor
or
nop
lret
mov
fidivs
jmp
xchg
test
fisttpl
sub
mov
call
or
ljmp
test
jle
cmpsb
push
lret
fiaddl
mov
outsb
or
outsb
js
inc
sub
mov
cli
jnp
mov
mov
test
dec
mov
sbb
xor
test
mov
xchg
stc
into
fsubrl
lret
fwait
shll
cmpsb
or
inc
adc
cmp
into
insl
xchg
xor
fwait
stos
cmp
push
mov
stos
xor
aad
or
cld
test
xchg
lods
mov
cmp
imul
push
ds
gs
mov
or
sub
sub
setno
add
inc
mov
fs
cmp
stos
insl
adc
fdiv
push
jns
cs
inc
xchg
dec
pusha
notl
cmp
mov
dec
xor
daa
leave
mov
pop
mov
out
inc
xor
pop
jnp
inc
jb
mov
mov
cmp
fisubrl
sbb
jno
int3
shlb
dec
ljmp
stos
jne
xchg
inc
inc
sbb
js
cmp
sub
jne
je
xor
jp
cld
daa
push
mov
testb
rol
into
mov
sub
dec
out
add
imul
sub
popf
pusha
int
mov
addl
mov
xor
loopne
jns
xchg
cmp
out
mov
push
jle
aaa
sub
scas
ror
push
mov
in
lahf
or
mov
ret
jmp
sar
ret
mov
pop
imul
push
lret
xchg
imul
ja
sbb
mov
arpl
jae
mov
cwtl
shlb
sub
ret
pop
xchg
popa
inc
pop
push
std
out
out
sub
and
jbe
push
mov
pusha
dec
popf
dec
fwait
add
fdivrs
addr16
xchg
mov
imul
in
xorb
fildl
sbb
xchg
bswap
mov
int3
sbb
ret
and
jo
sarb
fs
gs
push
lcall
sbb
jno
xor
repnz
push
insl
std
cmp
fcoml
mov
mov
lcall
scas
adc
push
jge
dec
pop
lcall
dec
push
mov
fstpt
cwtl
cltd
sti
pop
jle
in
mov
xchg
xor
ja
mov
mov
add
or
add
inc
inc
inc
cmp
fbld
sbb
pop
push
pop
cmovl
adc
popa
pop
and
subl
xchg
and
es
aaa
cmpsb
xor
pushf
insl
dec
pusha
jae
mov
icebp
je
push
xchg
push
aam
dec
and
imulb
dec
inc
cli
movsl
push
stos
enter
lret
adc
lock
mov
xchg
push
fidivs
loop
mov
ja
jge
leave
ja
out
cs
scas
sbb
pop
xchg
dec
mov
in
push
ds
cmp
sbb
mov
sbb
mov
fcomi
jae
inc
mov
lds
mov
out
mov
sub
push
std
or
inc
subl
popl
cltd
mov
inc
test
leave
cmp
divl
push
aas
ficomps
aas
dec
sub
lods
mov
dec
pop
cmp
jmp
mov
repnz
xlat
inc
adc
fcomp
movsl
mov
call
adc
and
xor
cs
out
jle
mov
push
or
pop
adc
mov
clc
fadds
outsb
xor
aad
stos
aam
jp
mov
stc
hlt
pop
dec
adc
xchg
cmpsb
testl
scas
add
dec
repnz
jb
loop
add
pop
data16
fmull
int
push
lods
or
xor
ficompl
mov
jo
test
rcll
xlat
push
mov
push
int
scas
push
push
xlat
pop
test
adc
xchg
jno
lret
xchg
rolb
or
scas
cmp
xor
and
std
cs
jbe
mov
add
xchg
bound
pop
jg
xlat
pop
mov
inc
insl
jg
push
dec
rolb
mov
mov
fucom
jecxz
xlat
sbb
loope
insb
fbstp
push
sbb
inc
lea
mov
sarl
mov
pop
inc
adc
roll
stos
mov
pushf
shlb
es
push
int
enter
and
mov
add
inc
movsl
inc
test
out
sar
or
test
add
and
shll
mov
mov
bound
cmc
cmpsb
push
dec
addl
dec
flds
add
rcrl
ret
cmp
xchg
cli
jp
cmp
jge
test
sbb
shrb
pop
test
mov
push
or
and
test
test
jnp
jo
xchg
test
mov
push
mov
enter
jne
pop
mov
push
ja
jg
push
and
push
idivl
adc
mov
ja
outsl
xchg
and
and
movsl
jnp
xlat
sub
xchg
sub
pop
push
cwtl
jle
fldl
cmp
adc
call
mov
push
pop
push
loop
mov
pusha
and
jns
inc
xchg
sub
das
in
loope
ret
mov
sub
dec
sbb
mov
test
pop
xchg
into
addr16
ret
sbb
jne
sbb
inc
sarl
fxch
shrb
push
in
sub
dec
adc
xchg
sahf
inc
ficomps
das
sub
pop
roll
xor
xlat
cmp
pop
iret
movsl
cmp
xchg
push
mov
add
les
inc
mov
aad
mov
sbb
jmp
pusha
outsb
push
shll
add
add
add
cld
addr16
xchg
nopl
bswap
test
incb
addr16
subl
xor
lock
mov
jecxz
inc
int3
lea
in
lds
dec
push
sbb
sbb
dec
test
push
pop
lods
inc
dec
loop
inc
mov
cmc
scas
dec
dec
and
stos
jp
sbb
je
inc
stos
xlat
jg
jge
jne
pop
jge
fdivrl
aaa
inc
jmp
xchg
cwtl
push
lret
stc
sbb
add
jge
or
xlat
test
movsl
cwtl
testb
hlt
xchg
jns
sarl
inc
lock
jns
in
fsubs
mov
int3
cmp
cli
imul
inc
loopne
mov
lods
sbb
enter
fdivs
addr16
xor
and
xchg
dec
mov
jnp
sahf
lods
cmp
lods
icebp
push
jecxz
sub
add
andl
test
xchg
xchg
dec
sub
pop
pop
enter
stc
push
popf
jle
push
cld
adc
cs
lods
movsb
outsl
imull
test
mov
add
rol
mov
in
call
push
mov
pop
jb
jne
inc
aam
jle
and
dec
mov
dec
mov
mov
scas
pcmpgtw
dec
fdivl
and
dec
movsl
mov
sub
mov
cmp
out
xchg
arpl
test
and
and
push
out
and
loop
leave
pop
es
popf
xor
dec
lods
test
outsl
sub
push
leave
lret
hlt
into
inc
cmp
sarb
sti
pop
adc
out
icebp
iret
sbb
xor
rcrb
shll
rol
mov
loopne
std
push
aas
jb
fisttpll
mov
jnp
mov
addl
dec
arpl
iret
addr16
sub
mov
call
mov
arpl
loop
cwtl
sbb
sub
pop
sbb
addr16
add
lods
test
xchg
shr
push
testl
mov
dec
mov
adc
cli
loopne
xor
inc
fisubrs
pop
lret
lock
adc
or
mov
mov
xchg
test
sarb
mov
inc
paddusw
dec
mov
aam
mov
cmc
lds
mov
pop
in
imul
push
insb
stos
dec
and
push
repnz
adc
imul
repnz
lcall
movsl
rcrb
inc
pop
stos
ss
pusha
popa
loope
jb
xchg
xchg
jb
call
ret
adc
mov
xor
ficoml
or
pop
inc
in
ljmp
hlt
mov
repnz
jo
shrb
adc
adc
cmp
jl
push
xlat
inc
lock
aaa
test
adc
mov
xchg
or
mov
push
mov
sub
pushf
jmp
adc
xor
sbb
imul
adc
call
out
and
xor
sbb
mov
inc
pop
je
inc
dec
jae
out
popa
stc
sub
dec
inc
fs
andl
repnz
push
jl
mov
lcall
mov
cli
in
push
in
or
mov
inc
add
xor
push
int
mov
add
push
pushf
imul
sbb
int
out
pushf
inc
xchg
sub
mov
out
mov
aaa
stc
into
jae
movhps
iret
fwait
ss
inc
add
push
pushf
popa
pop
mov
imul
das
jno
cmp
sub
mov
and
fs
cmc
insb
aaa
mov
add
xchg
pop
aaa
imul
leave
addb
cltd
fstl
test
bound
sub
clc
insl
lds
jns
into
jo
fmuls
fistpl
mov
ret
out
xchg
testl
push
insl
xchg
outsb
cmp
cli
lret
mov
pushf
mov
fisubs
shlb
std
stc
lods
popa
pop
int3
dec
cmpsl
dec
incb
cmp
jl
scas
sahf
pop
push
ret
cmp
ja
inc
mov
cli
mov
daa
xor
mov
dec
push
mov
cmp
sbb
xor
mov
or
or
mov
lods
loopne
inc
inc
and
ljmp
fwait
rolb
dec
push
bound
pop
cmp
jmp
adc
push
and
insl
xchg
inc
adc
sahf
imull
pop
and
adc
xor
loopne
in
popf
pusha
dec
das
pop
pop
dec
and
lahf
mov
or
popa
mov
rorl
adcl
insl
cmpsb
cmp
cmpsb
xor
int
ja
movsb
mov
inc
sub
inc
add
mov
mov
sbb
shll
ljmp
stos
xchg
mov
push
flds
mov
insl
add
in
shlb
add
push
negb
repz
int3
mov
out
js
jbe
jle
inc
and
cld
mov
xchg
jle
popa
xchg
add
xchg
xchg
jne
or
aas
loope
inc
xchg
ja
aas
outsl
jmp
add
xor
mov
not
jne
ret
sub
icebp
stos
cmp
xor
jecxz
sub
repz
cmp
ret
inc
sbb
mov
mov
in
cld
push
icebp
sbbb
cmp
and
cwtl
popf
ja
in
jmp
mov
mov
les
push
je
jne
subl
dec
loop
repnz
xchg
dec
mov
popf
ja
rcr
pop
xchg
lea
xchg
pop
outsl
sbb
movntq
mov
cmp
cmc
xlat
pusha
push
or
lahf
rcll
xor
into
jp
xor
sbb
mov
xor
decl
xchg
ret
faddl
cmp
sbb
in
mov
xchg
enter
mov
cmp
mov
xchg
and
jmp
push
shrl
popa
or
mov
nop
ss
push
repnz
mov
xchg
jno
icebp
cld
lahf
shlb
movsb
mov
or
jbe
push
inc
sbb
iret
cmc
fbstp
adc
push
ffree
mov
ljmp
das
arpl
mov
scas
xchg
and
test
mov
adc
fsubrp
mov
aad
or
nop
jne
in
jnp
pop
inc
adc
inc
dec
addr16
xchg
push
mov
mov
lahf
sbb
or
je
cmpsb
inc
js,pt
iret
xor
in
es
push
jnp
mov
or
lock
xchg
sbb
pop
movsb
frstor
int
lret
mov
gs
jl
ja
push
fisubl
and
das
gs
xor
push
or
cmc
ja
inc
repnz
jl
sbb
movsb
fists
arpl
jg
push
and
ljmp
popf
jnp
iret
test
jb
movsl
loopne
data16
icebp
outsb
imul
sub
adcb
ljmp
test
ret
packsswb
rcrb
cwtl
mov
rorb
cwtl
icebp
pop
int
add
jecxz
lahf
ja
ss
push
pop
ret
mov
imul
aaa
xchg
in
dec
fs
int
lods
jl
sahf
sbb
cltd
jnp
loopne
inc
adc
addr16
xlat
xchg
xchg
fstps
jbe
cwtl
test
add
daa
xlat
sti
cmp
stos
sbb
xchg
jns
fidivs
pusha
ds
int3
xlat
fcmovnbe
dec
lret
push
popa
push
xchg
ret
jae
jne
out
push
adcl
leave
popa
dec
mov
mov
jecxz
jbe
push
mov
out
cmp
in
adc
cltd
scas
popf
inc
aas
cmc
jg
cwtl
aaa
leave
jl
mov
stc
and
stc
and
pop
test
dec
xor
hlt
sti
movsl
inc
mov
push
mov
adc
test
cmc
or
mov
xchg
rolb
mov
mov
add
sbb
ror
push
jge
sub
xchg
ds
hlt
adc
adc
cli
fs
stos
adc
or
subb
xor
int
jnp
pop
xchg
cmp
push
sub
shr
pop
xorb
bound
lds
stos
inc
push
cmp
push
call
and
xor
or
sub
jb
or
lcall
push
loop
mov
imul
dec
addl
shl
ja
add
cmc
jns
lret
int3
mov
lea
fs
xchg
gs
outsl
pop
mov
xor
imul
call
movsl
sub
xor
ds
inc
sbbb
lcall
enter
and
in
cld
jle
int3
and
push
shrb
pop
fidivrs
adc
int
dec
pop
jp
lock
jae
enter
cmp
fdivrl
mov
sarb
cs
push
js
out
scas
aam
jns
push
mov
adc
outsb
xchg
lret
ficoms
adc
hlt
jnp
pop
cmp
insl
push
in
popa
fidivrl
inc
or
sub
and
pop
mov
add
aad
stos
pop
lock
or
ds
adc
mov
in
addl
inc
xchg
jl
pop
mov
fdivrs
sti
sbb
xor
adc
lahf
lock
and
push
sub
jne
addr16
mov
stos
dec
mov
cwtl
add
lret
mov
jae
mov
push
cmc
cld
cmp
ja
lea
mov
push
adc
bound
xchg
fisubrl
fxch
add
or
clc
stos
push
pop
inc
nop
rorl
adc
ljmp
call
shlb
jg
jo
fstpt
mov
nop
popa
xor
push
stos
inc
pop
sub
push
cmp
push
xchg
aaa
mov
mov
ljmp
cmovae
repnz
daa
add
xchg
mov
cs
clc
xchg
add
test
jo
test
fwait
push
jecxz
filds
sub
or
mov
fbstp
push
push
and
jg
fcomi
mov
testl
dec
adc
sub
mov
mov
lcall
out
aaa
and
mov
cld
outsb
or
inc
pop
in
pop
loopne
push
add
adc
xlat
repz
das
int3
jbe
xor
pop
push
out
jmp
out
sbb
bound
xor
es
lods
mov
push
mov
cmp
clc
ret
adc
lret
cld
outsl
outsb
push
fwait
dec
cmpsb
xor
pop
lods
add
jo
ja
pop
xchg
ret
popa
or
lcall
lret
out
aas
call
ds
notl
inc
push
dec
sbb
or
lods
fwait
jnp
push
push
repz
std
insl
arpl
lods
popa
insb
push
ret
jmp
xorl
push
test
movsl
adc
outsb
sbb
les
aad
push
mov
test
lret
insb
xor
jge
mov
icebp
daa
nop
push
jecxz
sub
or
push
add
jae
in
sbb
in
dec
in
lea
cmpsl
mov
or
jno
dec
sahf
mov
push
pop
stc
mov
jo
sub
xchg
test
insb
test
outsb
int
aam
into
mov
mov
pop
cld
lret
jmp
outsl
je
cmpsl
repnz
nop
cmp
push
xor
adc
popf
sub
dec
xchg
insl
pushf
lock
les
sub
jne
xchg
cmp
pop
icebp
ret
and
clc
icebp
stos
and
dec
mov
decb
mov
or
push
in
pop
sub
inc
jb
fcmovne
mov
cmp
sbb
adc
loope
insl
add
ljmp
scas
imul
sbb
lods
push
out
aad
dec
pop
mov
ljmp
rcrb
pop
fiaddl
mov
xchg
xor
sbb
fisubs
adc
scas
lods
pop
jp
push
loopne
inc
out
call
inc
cmovle
stos
idivl
das
mov
std
jb
mov
cmpsb
xchg
push
push
ret
pop
jns
or
out
jns
daa
in
inc
dec
imul
push
cs
dec
mov
mov
outsb
jmp
imul
jbe
xchg
cmp
mov
jbe
jns
xchg
and
in
icebp
dec
xchg
out
pop
pop
sbb
fldcw
fsts
pusha
or
insl
loop
loop
adc
das
jne
jp
pop
ja
gs
pop
push
push
add
idiv
inc
or
xchg
cli
cli
loopne
pop
pop
mov
out
mov
js
lret
add
cmpb
mov
mov
cmp
mov
xor
or
xor
notl
rorb
lock
and
xchg
dec
fs
pop
mov
outsl
jae
mov
pop
jle
retw
jg
push
mov
scas
pop
cmp
push
in
xchg
or
adc
pop
cld
xor
adc
add
in
jge
pushf
cmp
and
es
addb
pop
mov
and
xlat
or
jp
cltd
int
inc
lret
loope
push
or
dec
mov
fdivs
aam
adc
pusha
mov
arpl
sti
fdivs
sub
movsb
mov
cli
mov
rclb
dec
fs
fnstcw
inc
loope
mov
stc
cli
fistps
or
leave
push
mov
push
jp
jb
xchg
shll
fldl
add
and
aas
mov
jns
xor
mov
decl
cmpsb
roll
mov
insl
sbb
and
xlat
sub
repz
hlt
sar
movsl
out
hlt
adc
fnstcw
lahf
cs
inc
in
scas
pop
pop
aam
loop
adc
sbb
pop
inc
inc
lahf
or
bnd
sti
mov
jp
mov
mov
or
pop
and
dec
add
pop
add
popa
xchg
mov
test
clc
push
pop
test
inc
pusha
lahf
push
mov
or
cmpsl
shr
or
js
jge
xchg
jnp
sbb
push
mov
cmpsb
mov
adc
jae
jle
push
cld
subb
pop
xchg
hlt
mov
mov
imulb
sub
in
xchg
pop
sub
mov
and
cmp
pop
pop
inc
adc
xlat
shll
rcr
lret
fldcw
or
push
pop
cmp
cmp
imul
cltd
ljmp
fldcw
or
push
pop
cmp
cmp
imul
cltd
ljmp
fldcw
or
push
pop
cmp
cmp
imul
lods
out
lahf
fidivrs
stos
imul
cmp
xchg
xchg
enter
pop
arpl
cmpsl
push
insb
or
cs
shlb
jecxz
xchg
testl
daa
jae
arpl
adc
xor
inc
ret
mov
cmpsl
repz
xchg
xlat
mov
daa
imul
push
or
jg
dec
and
push
loopne
lods
loop
xchg
xor
dec
jae
adc
mov
push
cmp
sub
xchg
mov
fldt
xchg
pushf
shrb
or
add
push
aaa
ljmp
jb
mov
xlat
pop
mov
and
addr16
xor
lret
sub
xchg
out
out
sub
daa
mov
push
add
pop
out
pop
ja
js
movsb
sbbl
pop
mov
call
sbb
sarl
add
xchg
subl
mov
mov
pop
pushf
int3
in
dec
add
sub
dec
mov
xorb
mov
mov
xor
arpl
xor
pop
lret
mov
mov
fwait
lock
push
es
push
push
pop
push
pusha
and
jle
and
rcr
scas
filds
lcall
cmp
and
sbb
adc
jg
add
xor
nop
into
cmpsb
repz
les
mov
das
inc
pop
jbe
jb
sbb
xor
inc
shll
jecxz
xchg
testl
daa
jae
arpl
adc
xor
inc
shll
jecxz
xchg
testl
mov
jg
popa
add
jmp
scas
repnz
mov
xlat
into
sti
cli
int
sub
js
fwait
push
jns
and
imul
mov
xor
jno
or
leave
add
lds
lret
shl
es
out
lret
or
add
xchg
inc
and
out
inc
pop
outsl
push
fistl
movsb
dec
aam
and
sub
in
jge
mov
loope
jmp
cmpsb
insb
clc
call
sbb
sub
lretw
add
jmp
jae
adc
int
or
jmp
jecxz
xchg
add
fmulp
add
mov
push
adc
lret
xor
inc
outsl
sbb
fbstp
aaa
and
popa
pop
sbb
inc
sub
xchg
add
lods
negl
outsb
adc
lahf
jp
push
cmp
pop
pop
test
push
das
stc
dec
pop
mov
in
adc
mov
sahf
addr16
inc
dec
hlt
das
cli
jl
and
and
inc
mov
push
or
push
jl
cmp
and
aas
negb
ds
lods
fmul
add
jne
mov
ficoms
js
mov
sub
ss
jg
rcr
mov
jmp
lods
mov
mov
icebp
daa
in
mov
mov
mov
enter
dec
scas
dec
push
push
mov
ret
and
sbb
js
push
pop
inc
add
sarb
ss
stc
test
add
bound
add
cmp
lret
mov
mov
test
xchg
cmp
pop
sbb
in
adc
loope
mov
es
pop
fnstcw
ljmp
aaa
bound
xchg
sbb
jae
fisubs
jne
push
pop
addb
fs
sub
data16
fiaddl
mov
nop
lea
pusha
add
lock
jg
repz
push
add
adc
out
xchg
sbb
xor
test
jb
mov
xchg
icebp
pause
mov
jbe
push
test
sahf
repz
sbb
add
int
or
lods
inc
incb
out
jle
pop
rolb
addr16
mov
lahf
push
add
dec
pop
lds
inc
jmp
inc
sbb
loop
sar
loopne
push
push
loopne
dec
mov
into
cli
xchg
mov
ret
lock
sbb
mov
sub
mov
js
insb
add
mov
push
add
in
decl
int3
push
mov
imul
cld
dec
ljmp
mov
or
fld
addr16
repz
push
adc
pusha
jl
mov
sbb
pop
nop
stos
sbb
shll
pushf
lods
push
sahf
pop
mov
das
movsl
push
mov
jnp
pop
movsl
sbb
lret
cmpsl
lahf
pop
adc
xor
inc
push
sbb
data16
mov
call
test
lock
cmpsb
inc
add
movsb
data16
xchg
out
xchg
mov
sub
dec
xchg
jne
xchg
xchg
lods
idivb
pop
clc
dec
push
mov
jecxz
lret
pop
jl
jl
push
lea
or
ficoms
mov
fldl
andb
mov
sbb
hlt
mov
icebp
ret
cmc
push
pop
inc
aam
add
jb
scas
or
scas
push
mov
sbb
dec
out
add
rcll
push
in
or
aam
testl
jle
out
xchg
popa
or
mov
push
sti
cmpsb
inc
jle
inc
dec
mov
cld
sbb
bound
sbb
ret
inc
mov
inc
insb
in
mov
out
push
pop
lret
test
ja
inc
stos
stos
neg
loop
es
push
add
es
cltd
sbb
in
xor
sarl
icebp
int3
mov
adc
je
or
mov
cld
or
hlt
push
xchg
cmp
pop
imul
add
xchg
xchg
xor
loopne
mov
les
mov
mov
sahf
popa
xor
sub
jl
inc
inc
subl
and
adc
ss
sbb
xchg
xor
xor
mov
xchg
sbb
mov
ja
pop
jle
push
or
push
lret
arpl
aaa
flds
inc
push
in
cmp
push
lcall
in
sub
jp
sbb
push
mov
stos
in
mov
jp
mov
push
xchg
repz
cmpsl
clc
fldcw
andl
fs
inc
add
es
fimull
pop
or
or
insl
ds
and
pop
xchg
sahf
xchg
xchg
sub
mov
xchg
in
mov
mov
and
loopne
pop
gs
loop
jmp
popa
push
nop
dec
inc
jecxz
ret
movsl
divl
sahf
outsb
add
sbb
sahf
cmc
xor
xor
mov
in
dec
mov
imul
inc
inc
ret
adc
imul
shlb
mov
insl
push
pmulhuw
lock
ror
mov
mov
push
mov
adc
lret
arpl
push
mov
inc
mov
fstl
mov
add
pop
loopne
mov
push
test
push
lds
mov
adc
outsb
insb
cwtl
repnz
mov
jg
rcrb
pop
shl
dec
test
shl
xchg
enter
push
cmp
jbe
push
js
sahf
push
into
hlt
pop
cli
aaa
flds
out
test
div
mov
dec
dec
inc
test
add
xor
mov
sbb
js
xchg
pop
cmpsb
xor
pop
pop
inc
iret
pusha
je
enter
subb
cmp
fs
lret
das
mov
xor
or
gs
mov
daa
lea
inc
in
sbb
adc
jb
mov
repnz
idivl
sub
jns
fbstp
inc
fsubr
nop
add
mov
nop
sub
aad
and
dec
ficompl
loope
sbb
sub
fsubp
sub
fildl
shrb
jbe
add
cmpl
lcall
push
dec
mov
mov
js
call
cltd
and
push
icebp
xchg
xchg
stos
inc
adc
pop
mov
push
push
je
ds
aas
clc
cmp
ja
add
lret
inc
and
mov
jns
and
mov
cmp
cltd
std
push
and
in
add
xor
movl
lcall
lret
jb
or
push
sahf
mov
pop
adc
xor
lea
int
std
push
in
test
lahf
notl
pop
jecxz
fimull
in
adc
shl
cld
or
inc
lea
and
or
and
jmp
repz
js
xchg
dec
jge
repz
adc
sbb
lock
daa
mov
push
cli
pop
mov
jae
add
xor
jns
loop
inc
testl
mov
repnz
and
jp
xchg
mov
xlat
add
sbb
xor
fcmovnu
test
arpl
xor
mov
inc
and
push
mov
ja
cli
mov
aam
push
loope
or
jne
push
rorl
shlb
mov
push
pop
leave
xchg
push
inc
lret
mov
icebp
lahf
mov
fcoms
and
lret
xor
loope
pop
stc
in
shrl
insb
xchg
mov
mov
rcr
sbb
loope
shl
pop
mov
fsubr
je
cmp
inc
jbe
fldenv
dec
repnz
ja
mov
xchg
bound
aam
sbbl
addb
or
popf
mov
push
dec
mov
std
dec
adc
mov
push
xchg
pop
hlt
into
cmpsl
jno
xchg
mov
xchg
ret
fdivrs
icebp
faddl
cltd
cwtl
mov
jle
aad
mov
lret
fsts
xchg
push
xlat
aaa
call
orb
mov
inc
mov
sbb
sti
and
in
add
lret
jp
pop
xchg
outsl
into
add
pop
push
adc
nop
sbbb
xchg
je
movsb
sbb
xlat
pop
aam
jl
xchg
push
cvtps2pd
dec
cmp
and
cmp
push
mulb
out
add
pop
or
add
dec
sahf
mov
cmp
xchg
stos
test
adc
jge
cmp
call
ret
sub
dec
enter
into
enter
mov
popf
mov
cmp
leave
push
push
mov
int
sahf
adc
jle
fcmovb
jbe
cmp
xchg
push
hlt
xchg
and
pop
and
pop
xor
mov
cmp
bound
pop
adc
ja
fwait
xor
js
mov
and
add
bound
adc
leave
int
mov
inc
or
call
jno
or
pushf
fbstp
mov
cmc
dec
aaa
cmp
movsb
add
outsl
jg
insb
ds
xchg
int3
into
ds
je
outsl
popa
cwtl
imul
out
pop
aaa
or
popa
in
mov
test
test
mov
or
xor
jl
jmp
mov
movsb
stc
mov
mov
inc
inc
cmp
stos
fnstenv
pushf
sbb
mov
imul
insb
addl
xor
add
sarl
or
jb
dec
cmp
loopne
divb
add
sub
test
adc
adcb
mov
das
shll
ret
xor
jle
sbb
inc
mov
xchg
aas
inc
mov
shlb
cld
rolb
sub
jno
xor
add
sarl
cmp
hlt
lods
and
scas
pop
cmpsl
mov
sub
loope
add
imulb
loop
mov
pop
iret
scas
js
push
ret
mov
sub
rcl
ficomps
shrb
pop
pop
sbbb
sub
inc
mov
aam
cwtl
mov
jle
insb
ljmp
mov
shrl
fiaddl
lock
sub
cmp
dec
cmp
push
stc
idivb
mov
pop
push
xor
xchg
push
jbe
mov
add
mov
fnstenv
pop
stos
add
in
fidivl
add
je
push
sti
cmp
pop
inc
lds
ret
add
lods
or
push
iret
sahf
cmp
pop
and
jbe
shl
push
in
or
sub
in
fmul
and
pop
repnz
cmp
jo
sar
jns
mov
jge
in
andl
pop
bound
xchg
push
inc
or
fadds
test
mov
mov
xchg
loopne
inc
loop
std
sbbb
and
cmp
cmp
push
inc
push
les
mov
jbe
ret
int3
test
ret
int
pushf
cmp
xchg
and
pop
insb
adc
rcr
xor
filds
push
mov
mov
stos
xchg
in
fwait
dec
bound
movsl
es
adc
daa
cmpsl
xchg
push
cwtl
fdivrs
cmp
mov
test
jb
out
movsb
daa
cmc
shll
or
in
pop
inc
adc
ljmp
and
xor
mov
push
xor
icebp
inc
sub
cli
popa
adc
sbb
loope
bound
daa
adc
mov
xor
mov
stc
xchg
jno
andl
jnp
pop
movsb
inc
or
mov
in
mov
pop
xchg
adc
les
xchg
cwtl
push
dec
jbe
stc
cli
mov
ret
push
jecxz
int3
jae
fwait
push
sub
mov
push
enter
push
pusha
repz
lods
bound
lods
out
ljmp
mov
inc
mov
push
xchg
pop
and
lcall
outsl
mov
mov
fbld
subb
dec
push
aam
in
cmp
inc
xchg
ficomps
sub
pop
cmp
stc
mov
pop
loope
in
mov
xchg
xchg
ffree
shrb
and
inc
test
mov
lock
cli
mov
mov
add
loopne
sub
mov
xchg
and
pop
add
mov
sbb
mov
dec
pop
subl
dec
fbld
jo
mov
adcb
and
or
adc
stos
je
int3
add
lods
add
jle
sub
sub
jecxz
ljmp
mov
push
scas
sub
mov
imul
fisubs
daa
jno
ja
mov
outsl
inc
or
ds
pop
call
cmp
sub
fdivl
dec
push
xor
aam
mov
pusha
lods
rcr
retw
sahf
inc
fistps
mov
cmovno
push
divb
shlb
sub
sub
in
aas
mov
aam
xchg
sbb
out
mov
sbb
sahf
inc
cmp
mov
mov
cwtl
jnp
outsl
lods
mov
xchg
cmovp
mov
mov
adc
add
repnz
jge
xor
inc
add
out
jle
loope
sub
add
gs
sbb
jl
cmp
imul
sub
repnz
subl
pop
cmpsb
cmp
push
insb
clc
pop
dec
mov
leave
push
movsb
out
push
into
adc
mov
jmp
add
shlb
pavgw
lcall
shlb
adc
or
mov
lods
in
or
sub
cmpsl
imul
sahf
adc
fcomps
fwait
inc
dec
cmp
call
push
jp
sbb
lods
dec
ja
mov
inc
xor
shrb
jmp
icebp
inc
outsb
push
inc
lds
add
or
adc
fucomi
xor
mov
pop
ret
push
sti
xor
jge
leave
pop
sub
scas
outsl
pop
popa
es
aas
dec
mov
xor
addr16
cmp
ljmp
jp
add
es
lods
pop
pop
stos
inc
loope
fwait
mov
xchg
add
in
mov
dec
call
cmp
sub
inc
cli
sar
subl
inc
test
add
mulb
xor
adc
into
cmp
bound
mov
add
jle
stos
movsb
adc
and
out
test
push
push
jle
jecxz
ja
push
xchg
push
inc
add
sbb
xor
int3
xor
lods
int3
fadd
pop
ss
insb
cs
lds
ret
mov
clc
inc
mov
mov
add
xchg
xlat
dec
insl
cli
aaa
scas
fstpt
mov
mov
adc
popf
add
cmp
je
jnp
mov
sarb
mov
xor
andl
inc
lret
loopne
dec
cmc
int3
and
mov
in
mov
or
xchg
xor
shl
stos
in
xchg
xchg
push
adc
call
leave
loope
aam
lcall
ljmp
outsb
fisubrs
shl
push
shlb
adc
mov
push
push
rcrb
decl
ret
and
mov
je
push
fdivr
sahf
jo
lea
xorb
les
jle
push
jbe
sub
in
or
lock
mov
inc
mov
jae
outsl
stc
test
dec
gs
rcrb
es
jge
es
sbb
jge
jno
add
das
jo
mov
or
fcmove
sbb
add
je
pop
stos
xchg
adc
cmp
dec
pop
push
fcmovnu
pop
cmp
pusha
lret
cmpsl
out
xchg
mov
dec
jl
xchg
jmp
mov
movsl
pmulhw
push
lock
je
push
sbb
popa
icebp
cmc
inc
repz
push
or
sbb
cli
mov
mov
cs
jmp
or
xor
sub
loopne
inc
jg
fisubrs
mov
out
sub
pop
mov
negl
sub
dec
inc
mov
dec
rcl
negb
loop
lcall
outsb
pop
pop
sub
sub
test
or
data16
sarl
mov
outsb
push
mov
or
in
aaa
sub
lcall
or
data16
in
movsb
into
js
jecxz
pop
mov
cli
mov
movsl
in
jne
lock
clc
sbb
jno
in
in
and
sub
add
push
jo
jns
cmp
pop
mov
mov
sbbl
idivl
repnz
inc
stos
cmp
pop
cmpsb
mov
xchg
popa
adc
insl
sub
mov
jg
popl
jo
loopne
and
push
ss
xor
sub
push
stos
insb
or
inc
sub
adc
dec
xor
in
sub
je
scas
test
pop
sahf
sub
jle
lock
test
mov
inc
es
rcrb
mov
cltd
in
addr16
es
and
mov
pop
leave
divb
sbb
jmp
clc
roll
loop
inc
sahf
cld
pop
in
int3
dec
jnp
add
cmc
iret
sub
stos
out
jle
mov
scas
jbe
fcompl
push
push
inc
ret
jg
and
lahf
ss
imul
mov
mov
xchg
lods
mov
ds
mov
or
cmpl
jne
fldcw
adc
fmull
test
cmp
out
repz
cmpsl
lret
mov
sub
stc
bnd
dec
mov
test
push
push
das
inc
and
mov
cmp
mov
mov
fistps
mov
int3
push
push
shr
sti
mov
pushl
das
inc
clc
fbld
lea
ret
movb
xchg
mov
rcr
popa
pop
nop
lret
mov
xchg
xchg
sarl
insb
xchg
out
jne
push
sahf
leave
daa
push
push
mov
xchg
aam
push
sbb
movaps
jo
cli
xchg
sbb
in
mov
mov
add
inc
xchg
enter
push
xchg
dec
pushf
xor
mov
pop
mov
fucom
test
jo
sbb
add
pop
dec
xchg
das
jno
fs
push
dec
xor
aam
test
daa
clc
ja
leave
add
pop
mov
sarb
push
aas
in
sbb
std
leave
dec
out
inc
ss
das
mov
lods
add
clc
pop
xchg
subb
nop
or
push
or
js
jb
inc
les
ret
repnz
loope
xor
mov
push
pushf
pop
mov
dec
mov
push
mov
or
mov
ret
jo
movsb
dec
sbb
rorb
xchg
scas
dec
jbe
dec
add
insl
outsb
scas
pop
push
adc
in
xchg
jp
push
adc
mov
inc
pop
jge
inc
cmp
xor
fcmovnu
cwtl
xchg
xchg
jns
repnz
out
rcl
loop
leave
rolb
daa
inc
mov
into
jmp
mov
xor
sub
cmp
adc
faddp
mov
cmp
adc
dec
xchg
into
adc
or
incl
and
add
movsb
xor
xchg
lcall
sub
pushf
daa
stos
xchg
xchg
mov
jmp
mov
test
and
negl
and
mov
pop
sbb
fiaddl
or
lock
push
rcrl
add
out
mov
mov
jmp
sti
xchg
mov
call
jle
pop
out
add
fdivrl
jne
dec
mov
mov
push
push
insb
pusha
aad
aaa
clc
sarl
les
push
es
ret
fistpll
addr16
jae
or
js
in
aam
cmp
adc
pop
out
rolb
mov
mov
sahf
sub
push
ljmp
cs
add
dec
sub
nop
sub
xchg
dec
cwtl
jl
shr
push
and
ds
mov
lcall
loope
inc
mov
arpl
add
pop
sbb
xlat
push
scas
push
daa
stos
adc
loope
movsl
or
fmull
stc
test
ss
sub
pop
outsl
into
mov
es
stos
xor
movsb
es
aad
jmp
loope
aam
js
adc
xor
fmul
cli
in
mov
sbb
repz
jp
ja
xchg
adc
cmp
fldcw
or
push
outsl
jo
fnstsw
add
out
adc
sbb
ret
enter
cmpsl
int3
lret
das
pop
push
mov
sahf
jmp
push
icebp
xor
clc
push
sbb
call
lds
lret
jmp
jno
jmp
xchg
push
lahf
and
lock
cmp
sub
sub
test
test
pslld
int
out
mov
test
push
xor
or
xchg
mov
sub
mov
mov
insl
test
add
mov
int3
mov
xor
xor
outsl
jae
bound
xor
sbb
ret
lahf
sti
inc
ljmp
js
jmp
ret
inc
in
fsubs
add
iret
repnz
xor
xchg
or
inc
mov
or
repz
sbb
mov
aas
mov
stc
sarb
adc
xor
inc
shll
jecxz
xchg
testl
daa
jae
arpl
adc
xor
inc
shll
jecxz
xchg
testl
daa
jae
arpl
adc
xor
inc
shll
jecxz
xchg
testl
daa
jb
arpl
adc
addr16
mov
or
in
or
dec
sub
sub
xchg
testb
imulb
jge
insl
mov
mov
data16
leave
push
sub
sbb
imul
ja
test
push
cltd
ss
data16
push
leave
inc
push
incl
pop
outsl
call
inc
imul
lcall
adc
add
ljmp
data16
or
in
cwtl
jno
adc
jb
xor
push
ss
xchg
pop
sub
push
jge
out
jl
repnz
mov
cmpsb
rclb
xchg
jbe
leave
mov
cmp
dec
inc
jecxz
jecxz
nop
jmp
fidivrs
es
data16
add
push
into
cmp
push
or
dec
sub
es
xchg
jbe
cwtl
mov
data16
ss
movsl
dec
ljmp
out
pop
outsb
js
mov
push
mov
imul
lcall
xchg
jl
leave
or
jp
add
pop
repnz
xorl
sbb
imul
adc
movsl
ds
pop
roll
fildll
aam
loop
jne
int3
mov
cmp
push
ss
add
or
sti
outsl
ret
jg
jp
jne
cmp
push
enter
fstpt
xsha1
cmpsb
or
aas
lods
pop
stos
ficompl
fincstp
gs
movsl
and
pop
ss
push
cltd
jbe
data16
push
leave
inc
fnstenv
or
jns
dec
pop
ss
push
cltd
jbe
data16
push
leave
inc
fnstenv
je
idivl
push
push
jo
loopne
pop
out
ret
jne
sub
inc
xchg
loopne
cltd
adc
jmp
and
out
mov
mov
sub
mov
scas
xor
arpl
dec
pop
loope
into
addr16
repnz
dec
and
enter
lods
sbb
mov
dec
mov
in
cmp
jmp
cli
dec
sbb
mov
and
add
and
mov
mov
movsb
loop
jae
xchg
mov
jecxz
cmp
and
fdivrl
popf
pop
iret
adc
xor
daa
and
or
fnsave
adc
xor
scas
or
push
jp
sbb
add
mov
push
or
sub
fucomi
mov
test
test
aad
rolb
mov
out
es
hlt
adc
push
daa
mov
jno
pop
add
push
add
jno
jns
stos
xchg
xor
push
fsubrs
jns
lds
test
or
or
push
pop
addr16
sti
shr
stos
adc
in
mov
rorl
push
jb
jg
pop
pop
aas
sub
insl
lcall
outsl
jle
aas
into
fistpl
mov
dec
jns
in
inc
jae
mov
pushf
sti
imul
mov
mov
pop
shr
sbb
inc
fdivs
mov
cmpsb
mov
fmull
mov
insb
pop
sub
jne
sub
mov
sbb
xchg
rolb
xor
jne
test
addr16
dec
hlt
fmull
cmpsl
lds
mov
mov
nop
inc
xor
jmp
xor
fldcw
mov
pusha
xchg
sub
in
nop
xor
mov
xor
imulb
daa
adc
and
rol
jle
insl
xchg
jns
or
cld
cltd
data16
push
pop
sub
and
test
push
inc
popa
outsl
jo
xchg
idivb
and
in
stos
fs
sahf
adc
bnd
out
bound
cmp
jmp
es
jecxz
jae
inc
mov
mov
push
sub
popa
mov
test
mov
repz
cmpsl
mov
cmpb
aaa
lock
mov
jle
dec
into
jle
mov
lret
inc
sub
mov
mov
pop
aad
jge
push
leave
enter
xchg
vcvtsi2sdl
sar
insb
inc
sbb
mov
je
sub
push
cmpb
or
mov
push
daa
in
inc
std
mov
dec
ds
sti
and
mov
fs
pop
pop
mov
or
pop
mov
push
lahf
mov
and
popf
mov
xchg
cmpsb
mov
cld
sahf
jmp
mov
inc
push
sbb
dec
add
fisubrl
loope
dec
leave
cmp
daa
cmp
dec
bound
mov
and
pop
add
mov
nop
cmp
ret
dec
test
sbb
pop
sbb
movsl
dec
mov
push
in
dec
push
sbb
fistpll
ja
leave
sarl
stos
sbb
mov
sub
dec
adc
cmp
cmp
adc
pop
mov
pop
fdivrl
popf
jb
pop
and
hlt
cwtl
insl
or
mov
mov
pop
outsl
mov
mov
into
mov
xchg
add
dec
pop
push
inc
ja
sub
aas
shr
pop
shlb
push
mov
jge
adcl
sbb
popa
jmp
insl
xchg
repz
mov
push
jo
inc
std
cmp
mov
xchg
imulb
fisubrl
push
xchg
pop
aaa
movsl
imul
into
dec
fisttpll
mov
das
jp
lods
ret
cmp
xor
fs
add
rcrl
or
mov
sub
lods
cwtl
inc
cwtl
arpl
add
or
out
pop
jecxz
out
out
jno
add
clc
int
je
rorl
dec
mov
dec
gs
mov
stos
inc
outsl
push
leave
inc
adc
mov
dec
cmc
orl
cmp
sbb
xor
stos
jbe
dec
addr16
mov
mov
lret
jle
in
or
mov
stos
scas
leave
into
pop
fdivl
pop
dec
mov
jmp
dec
cmp
and
ss
stc
lret
xchg
add
push
iret
addr16
aas
rcrl
dec
data16
rcrb
enter
mov
push
movsb
test
cld
adc
cmpsb
jae
add
lahf
mov
stos
or
adc
scas
out
cmp
sbb
inc
push
maxps
test
jno
fcmovnu
xlat
or
bndldx
data16
dec
addr16
cmp
sbb
sub
in
ret
fdivl
jbe
xchg
mov
ret
pop
xchg
push
arpl
sbb
push
out
test
mov
adc
cmpl
pop
addl
cmp
mov
shll
inc
in
fldcw
xchg
repz
cmpb
pop
jns
pop
mov
sti
fabs
mov
and
lods
je
fidivs
pusha
ja
pop
mov
shl
push
add
test
je
xor
shll
test
les
pop
pop
adc
xchg
movsb
lods
jns
jl
ja
movsl
out
mov
pop
ret
jae
test
adc
mov
fdivr
adcb
outsb
sub
test
lock
shlb
dec
fidivrs
jno
and
test
add
and
or
pop
jmp
mov
mov
sbb
mov
jb
cmc
outsb
ds
dec
les
fidivl
lret
cmp
pop
adc
sbbb
pop
pop
jge
call
jg
adc
inc
dec
or
rclb
xchg
add
fbstp
xchg
jns
arpl
cwtl
stos
mov
lret
dec
xor
in
xlat
xor
add
jp
in
or
fdivl
mov
fidivs
aas
mulb
sub
mov
imul
xchg
repnz
cmp
jl
ds
jnp
lcall
dec
out
sar
push
mov
and
adc
lods
gs
call
push
and
stos
rcrl
stos
out
leave
mov
jge
xchg
push
lods
js
scas
fcmovne
or
out
lcall
adc
clc
mov
dec
cmp
xlat
js
adc
xchg
cmp
out
test
mov
push
movsl
jmp
mov
mov
lahf
movsl
pop
fcmovnbe
mov
mul
mov
cmp
push
xchg
mov
in
pushf
lods
jmp
out
repz
or
sbb
ret
mov
je
pop
adc
ret
fisubrl
sub
inc
mov
imul
pop
lea
std
jl
sahf
test
sti
jae
in
test
dec
nop
pop
adc
add
fnstcw
outsl
inc
lea
aam
in
xor
push
xor
pop
xchg
pop
shrb
push
adc
inc
jecxz
xchg
jmp
inc
pop
cs
es
add
xchg
jbe
pop
test
and
mov
adc
push
daa
loopne
cs
xor
jge
outsb
xor
stc
shlb
arpl
inc
add
and
aaa
das
int3
sbb
xchg
jnp
stos
cmc
in
dec
and
mov
and
fistpl
dec
subl
mov
stos
subl
push
mov
enter
test
addl
sub
pop
rcrb
add
and
aas
imul
adc
mov
xor
dec
pusha
pop
lret
dec
fnstenv
loop
ljmp
mov
lret
cmp
fcmovbe
jno
mov
pop
fldenv
and
loopne
inc
adc
sub
adc
fwait
incb
sbb
adc
pop
idivb
pop
rorl
mov
in
xchg
and
xchg
and
int3
in
adc
mov
inc
ja
and
jmp
sub
out
dec
pop
in
cli
std
outsl
push
xor
lret
cmp
stos
movsb
sub
or
cpuid
into
xchg
mov
and
add
shlb
stc
ret
adc
cltd
or
sub
clc
inc
cmpsb
popf
cmp
or
fdivs
sahf
xlat
lock
sub
sbb
jg
mov
dec
outsl
sub
ja
lahf
in
mov
adc
into
lcall
in
xchg
inc
xchg
adc
sbb
popw
mov
lods
sti
sbb
outsl
cmpsl
xor
in
sbb
out
or
adc
and
int
sbb
jge
add
pop
xorb
inc
out
adc
daa
in
push
ficomps
or
fimuls
shlb
add
xchg
int
xor
xchg
pushf
or
js
pop
fcomps
adcb
add
mov
mov
xchg
flds
xchg
jmp
pop
dec
and
mov
jno
mov
hlt
insb
sbb
push
xchg
js
xchg
movb
enter
test
loop
adc
sub
loop
gs
gs
int3
addr16
popf
jb
sub
inc
add
ret
stos
sbb
test
sbb
add
lods
lea
int3
xchg
lcallw
jbe
jb
push
xorb
icebp
test
dec
stc
in
push
push
mov
jge
sbb
cmp
lds
lods
enter
fs
and
jne
movsb
lret
xchg
fwait
popa
dec
cmpsb
testl
call
fidivrs
cmc
in
inc
bound
add
js
sbb
movsl
push
and
hlt
xchg
pop
push
adc
clc
jns
out
inc
xchg
adc
loopne
fsubs
test
push
xchg
add
mov
in
gs
jle
xchg
inc
lahf
fsubrs
push
xchg
mov
sbb
mov
loop
lods
and
repnz
add
dec
sbb
andl
shrl
xchg
xor
out
add
hlt
and
adc
mov
or
mov
lock
mov
xor
sbb
repnz
mov
lahf
lret
xor
shlb
or
add
pop
ds
pop
xor
out
pop
in
jne
push
inc
cmp
push
cmpsl
enter
sahf
repz
ja
cmp
or
push
adc
cli
jmp
shll
cld
enter
sub
or
hlt
dec
addr16
mov
out
in
add
xchg
decb
or
pusha
js
mov
divl
mov
jmp
data16
xor
fwait
xlat
aam
andb
mov
pop
movsl
daa
and
sbb
popa
push
fcomps
adc
jmp
les
mov
insb
mov
daa
add
and
or
xchg
adc
sub
and
fcoml
movsl
lods
out
inc
test
ds
or
cwtl
cmp
mov
jmp
push
mov
testl
out
pop
out
cltd
test
movl
sbb
outsl
and
inc
pushf
and
mov
jb
icebp
outsb
mov
mov
sahf
inc
mov
sub
test
nop
fstpt
sbb
mov
ret
push
push
jmp
in
clc
push
mov
pop
xor
cli
mov
mov
aaa
adc
clc
pop
aam
mov
and
jne
jle
out
loop
aaa
lret
mov
jle
cltd
gs
js
ds
or
mov
xchg
aad
mov
mov
xchg
js
inc
in
movb
jno
pop
in
ja
cmp
add
shrb
mov
inc
pop
in
cmpsb
sub
sub
aad
inc
lahf
sub
popf
bound
iret
inc
daa
inc
imul
mov
test
rcll
xlat
add
push
pop
push
rorl
popa
mov
imul
dec
hlt
mov
lahf
enter
fisubrl
lods
std
xchg
adc
sbb
inc
fwait
jo
sbb
dec
and
jp
out
rorb
add
stos
mov
lret
push
and
test
jb
pop
lods
sub
data16
lods
dec
filds
test
pushf
pmaxsw
cwtl
les
inc
dec
xor
in
mov
and
add
lods
addr16
imul
shll
imul
cwtl
pop
movsl
lock
mov
dec
push
stos
js
inc
jo
pop
and
add
jecxz
cmp
push
stos
dec
pop
add
push
mov
sub
lds
ljmp
pop
stc
ss
push
fistps
fs
push
popa
nop
add
out
adc
mov
mov
fwait
insl
test
movsl
leave
sub
out
mov
mov
mov
xchg
ja
out
mov
clc
aad
and
mov
inc
push
xchg
mov
fisttps
out
sbb
test
imul
jnp
sbb
jne
push
jns
ja
shlb
das
adc
or
cs
cltd
out
test
rcll
inc
ljmp
movsb
dec
leave
push
sbb
pop
notl
xchg
sbb
or
hlt
and
xor
dec
add
sbb
mov
xchg
int
or
cmc
xor
cmpsl
fadds
je
sbb
addr16
add
sbbb
mov
inc
inc
jbe
jnp
sub
mov
inc
xchg
lds
inc
ljmp
lret
lret
ret
pop
insl
or
fwait
enter
or
inc
cmpl
pop
inc
ret
push
ja
push
ds
scas
data16
fadd
shl
add
cmp
fwait
push
xchg
repz
divb
jmp
fs
push
mov
out
out
les
sbb
push
inc
dec
stc
mov
xor
call
insl
test
dec
jg
mov
fwait
outsl
stos
imul
push
cltd
in
ljmp
in
movsb
bnd
jmp
outsl
cmp
insl
mov
and
and
clc
dec
icebp
sbb
mov
inc
xchg
add
sub
test
mov
xchg
xchg
push
aad
hlt
faddp
jb
ret
fisubrl
insb
arpl
repnz
adc
push
fildll
cli
mov
pop
js
fwait
lea
ljmp
pop
test
iret
popf
lods
ss
shlb
add
or
or
es
push
aam
leave
xchg
ss
jo
in
xchg
das
mov
add
and
pushf
jp
cmp
pushf
out
inc
push
insb
sbbb
std
cmpsl
adc
mov
inc
ret
std
sbb
mov
jmp
jo
in
ds
fildll
or
daa
stos
sub
loope
fisubrl
mov
mov
push
inc
hlt
push
sbb
jge
mov
and
ja
rolb
leave
shl
test
jbe
pop
lcall
dec
or
sarb
pop
out
or
sbb
addr16
pop
sub
adc
sub
adc
and
hlt
pop
pslld
xchg
shll
lea
fcompl
lods
jge
xor
movsb
pop
cmpsb
or
jg
imul
add
or
xchg
mov
clc
nop
push
incl
mov
ficoml
int3
ja
loop
je
loopne
mov
mov
cmp
or
mov
cmp
gs
lods
pusha
stc
aam
ja
adc
insl
mov
shrl
gs
cmp
xchg
stc
out
jae
mov
hlt
mov
lret
aad
sbb
sbb
sbb
cmp
mov
xor
mov
inc
adc
sub
mov
push
sbb
mov
pop
sahf
xchg
scas
and
loope
mov
and
aam
imull
mov
fcoms
pop
or
ret
cmp
nop
mov
lods
xchg
outsl
fcomps
pop
xchg
sbb
add
repnz
or
inc
adc
mov
cmp
je
mov
movsl
insl
pop
jl
shl
into
loope
lahf
std
dec
shll
scas
out
repz
jecxz
jno
xor
ds
xor
jge
and
or
or
data16
fs
out
jno
cltd
mov
mov
inc
dec
jns
sub
fisubrl
push
inc
movsb
pop
outsl
xchg
cmp
and
push
sbb
xchg
imul
adc
add
into
out
ja
xor
pop
mov
sbb
mov
jmp
jl
pop
dec
mov
fcmovbe
shll
loop
jge
and
orl
sub
xor
xor
mov
adc
mov
jae
inc
sahf
test
inc
sbb
mov
inc
fstpl
aas
call
ljmp
xchg
cmc
lret
test
gs
push
dec
push
fadd
jno
cltd
js
ljmp
fdivrs
jnp
pop
fadd
adc
imul
call
cs
and
arpl
pop
dec
dec
mov
aas
add
dec
sbbl
sarl
jl
mov
popa
inc
sub
mov
mov
inc
lods
push
xor
nop
test
idivl
push
psubsw
js
inc
aas
popa
or
lcall
sti
insl
aad
imul
jmp
lds
cmpb
aam
negb
push
mov
mov
jae
call
leave
aad
adc
sub
inc
and
or
sarb
lret
enter
jl
test
sub
cltd
jg
fbld
mov
mov
into
pop
sbb
outsl
stos
dec
mov
lds
bound
inc
dec
adc
adc
testb
jle
jae
mov
or
cmc
sbb
mov
clc
inc
jle
out
push
test
pop
call
aaa
out
mov
addb
out
pop
mov
mov
repnz
out
hlt
aam
test
lea
ds
inc
jl
pop
xor
repz
jnp
outsl
invd
and
cmpsb
mov
fsubl
mov
aam
jae
aas
dec
adc
or
outsl
xchg
mov
cwtl
jmp
mov
xchg
mov
xchg
and
mov
xchg
xor
jbe
test
iret
in
push
push
jne
test
sahf
je
xor
lock
adc
rorl
jo
outsl
dec
cmp
aad
loopne
outsb
rcr
add
lea
mov
loop
repnz
cmp
fmull
mov
add
push
int3
sub
mov
ja
cmp
cli
movsl
and
test
jl
cmp
sbb
mov
dec
dec
inc
pop
mov
add
pop
xchg
popf
xlat
insl
pop
dec
cltd
cmp
and
or
mov
cwtl
mov
cmovge
add
imul
cmp
out
mov
adc
ret
xchg
icebp
aas
nop
dec
cwtl
jecxz
stos
cmp
out
cmp
xor
cmp
out
data16
mov
mov
daa
out
mov
test
inc
fistps
cmp
mov
negb
adc
fisttpl
jno
and
retw
cmpsl
ljmp
arpl
or
test
or
mov
push
dec
int
insl
leave
stos
or
shl
push
sub
call
pop
not
xchg
push
mov
aad
mov
xchg
sub
out
pop
sub
repnz
loop
and
cli
arpl
sub
enter
rclb
mov
inc
cmp
push
lea
lahf
imul
push
lret
sbb
shrb
loopne
dec
addr16
je
mov
lret
jecxz
das
divb
arpl
sub
dec
xchg
fildl
mov
dec
xchg
xor
stos
clc
add
cmp
scas
daa
imul
push
push
cmp
add
inc
fldl
add
mov
clc
mov
push
dec
rcpps
cmp
mov
int
mov
sub
les
push
lcall
test
fsubrl
outsl
sbb
or
fidivrs
lods
stc
mov
in
adc
rol
pop
inc
push
push
and
mov
cmc
jo
lock
cmpsb
adc
std
push
sarl
xchg
xchg
es
aam
cmp
push
sbb
xchg
or
inc
jg
daa
cmpb
sti
divl
dec
ja
mov
imul
mov
push
mov
xor
hlt
push
inc
pop
mov
mov
subl
sarl
out
mov
add
xchg
popa
fisubrs
dec
lcall
and
xchg
notl
repnz
rorl
and
out
xor
cmp
flds
mov
outsl
stos
je
ret
sahf
ret
ja
pop
jge
into
call
test
sti
inc
add
pop
imul
insl
dec
into
mov
lcall
cwtl
jge
cs
pusha
inc
sub
and
xchg
stos
cmp
adc
mov
ss
insb
xor
cld
lods
cmpsl
pop
sbb
and
ret
nopl
xor
xchg
inc
int3
mov
aam
arpl
mov
std
out
xchg
jns
rorl
sbb
imul
pop
ss
push
cltd
jbe
data16
push
leave
inc
fnstenv
or
jns
dec
pop
ss
push
cltd
jbe
data16
push
leave
inc
fnstenv
adc
adc
dec
push
pop
ss
mov
jbe
jbe
push
shrb
int3
in
cmpsb
pop
imulb
jns
leave
inc
cltd
ss
fsts
mov
xchg
out
subl
mov
add
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
aaa
lret
pop
sti
pop
jmp
xlat
adc
stos
mov
cmpsb
dec
xchg
jnp
imul
out
xlat
cmp
sub
lret
pop
sti
pop
jmp
fwait
mov
inc
shll
jnp
imul
out
xlat
cmp
sub
lret
pop
sti
pop
jmp
fwait
mov
inc
stos
mov
test
or
pop
mov
test
adcb
imul
mov
mov
ds
mov
adc
mov
je
mov
mov
mov
mov
outsb
js
or
out
cmpb
jp
fldt
adc
adc
fmull
mov
repz
xchg
and
cmpsl
push
lcall
sahf
daa
out
jge
pop
mov
rcl
inc
push
cmp
mov
sbb
sub
scas
fwait
imull
addr16
roll
mov
icebp
pop
adc
or
pop
fadds
jmp
stos
mov
xchg
inc
fidivl
push
sbb
scas
jle
sbb
xchg
cmp
sti
lret
pop
sti
pop
jmp
fwait
mov
inc
stos
mov
cmpsl
dec
xchg
jnp
imul
out
xlat
cmp
inc
jbe
push
mov
outsb
jmp
adc
pushl
push
lcall
negb
outsb
mov
andl
sahf
imul
mull
das
rclb
xor
jne
or
lahf
daa
cmpl
mov
mov
mov
inc
stos
mov
cmpsl
dec
xchg
jnp
imul
out
xlat
cmp
sub
lret
pop
sti
pop
jmp
fwait
mov
inc
stos
mov
cmpsl
dec
xchg
jnp
imul
out
xlat
cmp
sub
fildl
mov
mov
gs
mov
rclb
xchg
mov
or
push
fistpl
outsb
or
lret
push
shlb
lods
es
push
sbb
inc
sbb
xchg
daa
or
fisttps
sbb
lock
pop
mov
loopne
fstl
or
ja
push
inc
pop
test
call
das
lret
rcr
mov
add
push
mov
pop
ret
ret
push
dec
dec
lret
inc
xchg
jle
sbbb
js
push
lock
dec
jnp
or
cltd
stos
scas
pop
in
ds
xlat
mov
or
ret
push
push
mov
notb
enter
push
jmp
dec
fsubrs
cltd
shrl
ret
pop
outsb
mov
xchg
mov
pushf
test
jg
mov
rcl
mov
mov
dec
xchg
xchg
and
imul
fsts
mov
insb
dec
js
test
xchg
push
add
xchg
sahf
fldl
and
jns
int
js
mov
das
add
out
adc
sbb
inc
or
mov
js
das
fsubl
add
mov
enter
mov
dec
in
xchg
add
jmp
aad
test
inc
lcall
push
lods
push
cmp
sbb
xor
xchg
jmp
adc
lret
or
sbb
xchg
insb
inc
mov
and
icebp
mov
rclb
ss
mov
mulb
leave
out
outsb
subl
cmp
xchg
daa
jo
outsb
lods
jnp
cmpsl
dec
mov
xor
jns
in
or
ljmp
test
lahf
movsb
or
push
lock
push
or
push
cli
push
lods
repnz
jecxz
imul
test
mov
sahf
cmc
mov
sub
xchg
daa
lret
xchg
test
xchg
xorl
cmp
mov
mov
xor
xor
mov
xor
mov
xlat
sti
fstpt
cmp
xor
shll
push
out
aad
ja
push
or
or
sahf
and
xchg
mov
test
mov
push
and
outsl
scas
jo
sahf
aam
int3
mov
test
dec
aad
cli
cmp
jnp
jae
cmp
add
fists
mov
mov
push
hlt
insb
rcrl
xor
pop
dec
adc
xchg
pushf
xor
mov
push
pop
cmp
push
fstpt
in
repnz
cli
or
xchg
testb
ljmp
gs
mov
xchg
xchg
into
add
cmp
cmp
jg
mov
dec
in
mov
cmp
adc
mov
in
loopne
push
subb
jmp
sub
dec
mov
frndint
cli
scas
or
cmp
pop
into
lret
cmp
push
xchg
ficoml
push
mov
push
add
push
and
cmpsl
test
insl
push
adc
out
mov
sub
inc
xor
fwait
pop
in
jecxz
out
pusha
je
daa
push
push
dec
jecxz
mov
push
gs
cmp
scas
cmp
dec
jecxz
dec
mov
ja
inc
or
ficomps
sahf
fnstcw
in
hlt
nop
outsb
aas
mov
pop
or
lds
jmp
push
dec
test
stos
lcall
mov
sbb
lea
pop
lock
or
mov
jbe
mov
out
int
ret
std
jmp
add
es
adc
ljmp
loopne
das
mov
mov
ja
mov
mov
pop
push
das
jmp
test
xchg
shl
push
leave
inc
jmp
sub
cmp
jb
push
pop
fnsave
add
cmp
adc
mov
sbb
or
sbb
rclb
movsl
jb
out
jle
cmp
and
fistps
xor
pop
jle
flds
pop
pop
xchg
ds
mov
mov
movsb
mov
push
mov
in
fs
xchg
nop
lock
dec
fsubs
das
out
shll
or
out
test
out
and
std
push
jmp
cmp
negl
cs
xchg
sub
fisttpll
rorl
test
inc
movsl
or
jno
jo
or
push
inc
mov
xor
mov
out
xor
mov
sbb
push
mov
or
dec
push
pop
jmp
pushf
push
stc
sbb
adc
jmp
add
pop
adc
or
fists
pop
inc
popa
fwait
pop
push
aas
scas
test
push
push
pop
lahf
jae
mov
subb
adc
adc
pusha
mov
and
jo
adc
iret
stos
cmp
mov
lcall
sub
pop
lcall
xchg
or
int3
xor
pop
sub
add
pop
mov
stos
inc
int
jns
sahf
jle
mov
loop
pop
mov
adc
enter
add
and
dec
in
dec
adc
dec
mov
sub
sub
or
or
mov
jnp
add
push
mov
adc
push
daa
xadd
pushf
aas
out
pushf
out
jno
addr16
std
imul
mov
fiaddl
ret
pop
push
jno
adc
cmpsb
mov
pop
adc
rolb
jle
pop
mov
lods
mov
loop
sbb
pop
in
arpl
repz
pop
out
jb
xor
jecxz
cs
or
clc
in
stc
cs
sbb
lods
or
pop
and
push
mov
dec
sub
das
pop
out
repz
repnz
pusha
in
jge
in
pop
xchg
and
sbb
outsl
mov
push
or
fadd
int
arpl
sbb
loop
ja
sub
into
cltd
pushf
cmpsl
call
idivb
or
fdiv
push
dec
push
mov
cltd
dec
mov
test
adc
stos
and
mov
pop
das
pop
fcomps
cmp
push
mov
movsl
leave
cmc
movsl
int3
xor
in
or
adc
lods
test
add
mov
test
arpl
rcrl
lock
lea
pushf
jge
jl
dec
jmp
add
in
mov
repz
repz
mov
lds
sbb
loopne
call
jns
jge
test
mov
cmp
out
dec
pop
hlt
cltd
fisttpl
je
lret
push
shlb
arpl
gs
inc
and
xchg
cmpsl
sub
mov
lea
add
insb
in
lods
enter
sti
pop
push
mov
shrl
negl
in
push
sub
clc
inc
test
inc
out
cmp
cltd
push
dec
jns
stos
cmpsb
and
iret
or
popf
sub
pop
out
rcll
std
jno
clc
jb
xor
sbb
and
dec
mov
ret
xor
cmp
mov
icebp
add
or
inc
xor
pop
xchg
pop
test
mov
pop
mov
inc
mov
andb
jp
or
inc
cwtl
jecxz
ss
sub
pusha
mov
adc
push
ficompl
jmp
lcall
pop
loop
dec
ss
jns
xor
adc
in
xor
xor
pusha
or
lea
dec
dec
mov
mov
mov
mov
push
out
push
adc
mov
inc
loope
mov
jecxz
pop
push
xchg
jo
push
outsl
lahf
shll
out
test
mov
imul
je
add
mov
fcmovne
sti
sbbb
xor
fcom
mov
mov
test
pop
fnsave
pop
dec
inc
mov
inc
scas
movsl
pusha
pusha
jmp
jns
dec
fstpt
adc
test
mov
das
pusha
rorl
jmp
test
xchg
or
inc
jnp
idivb
mov
cmc
xchg
lods
ss
xor
arpl
repnz
lcall
push
cmp
sub
insb
fcompl
add
mov
cmc
jo
imul
fildll
mov
mov
ficoms
dec
pop
add
lret
pop
sub
int3
push
and
cltd
dec
lret
xor
imul
push
or
shll
xor
pop
sub
insl
push
or
pop
cs
movsl
adc
inc
lcall
das
add
push
roll
test
pop
daa
insl
jmp
call
dec
andl
and
or
outsl
fs
lock
out
cmp
add
idivb
adc
and
cmpsb
pushf
or
and
lret
inc
or
test
inc
inc
aaa
mov
aad
dec
outsl
jl
insl
inc
ds
aaa
or
pop
pop
xchg
cmp
scas
adc
fadds
dec
gs
pop
out
out
cmpsl
imul
lea
xor
stc
mov
lret
popf
scas
fdivl
push
jnp
in
fldenv
and
cmp
std
dec
adc
lods
fidivrs
loope
bound
pop
dec
rolb
xchg
ss
aaa
lds
sub
adc
lods
aad
testb
lahf
sub
loopne,pt
xchg
mov
arpl
imul
and
dec
cmp
loopne
movsb
sub
mov
in
shr
inc
push
test
adc
test
in
cwtl
xor
cmp
fs
lods
jne
jns
jbe
push
push
push
xchg
bnd
push
iret
lcall
mov
fs
fs
in
pop
mov
lods
push
push
sbb
fwait
cmp
inc
loope
or
inc
xor
scas
lcall
xchg
xchg
or
fldcw
stos
cmp
outsb
das
cmp
xchg
mov
add
adc
xor
movsb
jne
add
pop
jg
cmp
lock
cwtl
inc
push
imul
cld
imul
add
mov
hlt
ffreep
and
fsubl
jl
cmc
movsl
xor
test
sti
push
jle
push
bound
or
ja
push
pop
sub
dec
popa
sub
inc
cmpsl
jo
sbb
push
inc
mov
aaa
sbb
push
jge
in
clc
je
sub
mov
pop
dec
movsl
mov
lret
mov
push
jg
inc
fucomp
sti
add
repnz
ret
lcall
aaa
push
std
loope
mov
xchg
nop
test
pop
fs
mov
or
imul
leave
test
int
fldcw
xchg
mov
das
jmp
call
popf
ret
mov
inc
int3
cmp
repnz
mov
mov
mov
loope
mov
mov
bound
xor
clc
test
sub
mov
and
addr16
xchg
pop
sbb
dec
scas
push
scas
iret
push
movsl
fwait
es
ds
cmpsb
sbbb
and
mov
test
ret
pop
dec
nop
out
inc
mov
lds
xchg
sbb
push
inc
fsub
js
xchg
sahf
jbe
jecxz
sbb
movsb
mulb
gs
ret
jns
insl
icebp
xchg
or
mov
xchg
sub
aad
lret
hlt
ret
pop
xor
nop
and
in
das
stos
add
cld
jecxz
out
mov
cmpsl
lcall
push
scas
leave
int
lcall
lods
outsb
es
mov
and
or
mov
xchg
push
mov
mov
jbe
ja
and
sbb
fwait
mov
and
adc
lret
rcrl
fs
cmp
sub
mov
inc
mov
inc
or
shrb
jbe
push
adc
into
cli
lock
push
push
jnp
shlb
jle
xor
aam
es
dec
ds
sti
jmp
divb
cmp
lahf
mov
roll
lds
xor
cmp
andl
mov
cmp
iret
jno
scas
dec
dec
int3
mov
xor
das
subl
mov
xchg
and
fists
pushf
add
gs
inc
cmpsl
in
push
stos
and
or
push
and
cmc
or
lods
imul
shll
inc
loopne
sbb
pop
test
adc
cmpsb
inc
mov
inc
loope
add
std
test
and
jne
cmp
scas
xor
jno
repnz
xor
mov
xchg
in
popa
out
ljmp
jo
add
call
mov
loop
jmp
add
paddsb
mov
lea
xchg
js
inc
mov
into
mov
pop
jae
popa
icebp
xor
fcomps
faddp
jge
jecxz
movsl
mov
mov
sbb
inc
js
mov
jnp
mul
cmp
daa
jl
cmp
insb
or
inc
dec
cmpsl
popf
pop
push
pop
jl
fwait
push
or
sbb
push
test
divb
adc
out
xchg
mov
popf
cli
je
cmp
mov
mov
sti
push
lds
es
xor
andb
ret
test
lock
lds
adc
cmp
mov
mov
mov
movsl
and
jb
idivb
mov
insl
sub
and
test
push
popf
mov
add
push
hlt
add
adc
adc
xchg
mov
xchg
stos
in
inc
dec
sahf
sbb
out
sbb
mov
mov
cs
cmpsl
stos
dec
cli
sbb
cmpb
or
add
insl
sbb
in
lahf
cmp
adc
repnz
cmp
mov
rcl
push
test
les
inc
jmp
enter
nop
in
or
dec
xor
movsb
jb
testl
dec
sub
sub
xchg
push
xchg
xor
imul
bound
insb
aad
inc
cld
inc
ljmp
inc
mov
shrl
out
pop
sahf
pushf
mov
and
into
and
jo
jbe
lds
push
jge
stos
outsl
push
push
cmc
call
daa
pop
out
xchg
popa
stos
mov
insl
sbb
inc
rcll
out
mov
test
mov
pop
sub
cwtl
into
in
jl
push
pop
scas
icebp
scas
xchg
lahf
jae
jno
inc
scas
repz
hlt
push
xchg
fisubrl
adc
loop
aam
insb
loop
and
lods
cmpsl
mov
insl
xchg
outsb
and
inc
enter
mov
push
xchg
jb
movsb
gs
fsts
outsb
gs
add
push
xchg
pop
aas
movsb
jbe
jae
xlat
sbb
sbb
lods
dec
mov
push
dec
inc
insl
hlt
sub
movsl
fwait
in
pop
jae
xor
mov
and
mov
sub
jns
test
jne
mov
out
in
cmpsb
add
aas
cmpsb
fidivs
cmp
mov
frstpm(287
push
sbb
jno
jb
icebp
fcomps
mov
mov
mov
mov
pop
std
xchg
push
adc
sbb
loopne
ja
movsl
cmpsl
or
mov
icebp
aad
iret
mov
mov
pushf
hlt
mov
and
fnstenv
pop
add
fsubrs
fcmovbe
mull
lcall
shl
xchg
mov
sbb
inc
in
imulb
cmp
icebp
jecxz
popf
js
mov
mov
push
xlat
ds
push
jmp
inc
fwait
xchg
inc
push
js
cmovle
outsb
or
mov
sahf
iret
xor
dec
cs
add
xchg
dec
push
lds
imul
lods
test
loop
ror
lret
fstpt
ret
shlb
xchg
push
sbbb
and
inc
xchg
repnz
lds
les
or
sarl
je
shlb
rcl
nop
cmp
sbb
cmp
test
cmp
pop
sub
mov
mov
push
lods
sbb
lret
rcll
xchg
iret
push
add
mov
or
xor
xor
js
xchg
cmpsl
mov
sbb
dec
xchg
fiaddl
and
daa
insl
xor
jle
xchg
jns
cmpsb
or
incb
jae
mov
sbb
adc
in
sub
add
cld
and
mov
mov
in
jno
leave
out
xor
or
dec
sbb
incb
lret
pop
jmp
pop
es
add
cmp
mov
out
pop
xlat
and
les
sub
pop
dec
stos
rcl
mov
xchg
mov
or
xchg
popa
push
popf
cmp
adc
sub
int
lds
adc
test
push
fidivs
ret
int
push
sub
insl
sub
negb
mov
xchg
adc
adc
loopne
mov
jb
lods
sbb
jge
sbb
or
hlt
lret
inc
jno
jbe
push
or
cmc
int
cmp
addr16
notl
ds
jae
test
cmp
enter
push
inc
in
dec
jl
aad
mov
clc
and
adc
xchg
xor
loop
repz
jns
sub
ficomps
hlt
mov
or
pop
xor
add
test
jbe
sub
push
sbb
sti
pop
cwtl
nop
mov
divl
das
xchg
xchg
pop
dec
jg
xor
jle
adc
cs
enter
cwtl
test
arpl
insb
and
jp
xchg
mov
cmp
cmp
pop
in
cltd
lahf
and
in
test
rcr
dec
test
jmp
mov
mov
enter
dec
jl
test
xchg
in
iret
aam
sbb
leave
xor
xor
stos
pushf
fnstenv
push
fsubr
xchg
aam
add
rclb
sub
pop
jp
insb
das
or
leave
push
xchg
mov
mov
cli
pop
bound
jle
mov
inc
push
lcall
ret
std
or
inc
sub
addr16
and
sub
cmp
mov
fildl
enter
xlat
xchg
cmp
push
xchg
sbb
fwait
pop
mul
add
in
mov
jle
iret
lar
insb
adc
or
xchg
sub
mov
arpl
insl
add
cmc
jb
sbb
or
inc
scas
push
push
je
push
mov
adc
xor
lahf
cmp
xchg
movsl
push
sbb
in
cmp
sbb
arpl
and
ret
jb
adc
add
cmc
into
push
cmpl
ja
cmpsb
fsts
test
add
fisttps
lods
xchg
iret
cmp
lahf
cmp
daa
mov
adc
pop
fwait
add
loop
js
lcall
es
and
cmpsl
out
ds
cwtl
das
push
push
lret
add
push
xchg
jb
dec
cmp
lahf
popa
xchg
or
or
test
mov
mov
jg
mov
pop
lret
das
adc
mov
outsl
enter
jle
lds
jb
fisubl
jge
mov
movsl
mov
cmpsb
and
es
gs
scas
int
mov
jl
pop
pop
clc
inc
iret
dec
add
sarl
aam
mov
push
movsb
xor
mov
cmpsl
adc
fdivl
cmp
and
lods
in
stos
push
adc
or
mov
shll
adc
adc
fstps
xchg
dec
fstpt
sti
scas
incb
mov
xchg
inc
pop
test
and
pop
sahf
or
cmp
push
dec
imul
js
sti
cmc
xchg
sbb
ret
add
lahf
das
or
mov
add
or
jmp
pextrw
out
data16
push
mov
fs
in
into
cmp
in
hlt
jb
push
ljmp
xchg
cwtl
out
dec
xor
dec
shll
icebp
add
pop
movsb
aaa
lea
add
repz
sbb
pop
push
adc
or
popf
movsl
xor
shl
icebp
pop
inc
mov
aas
xlat
stos
sbb
xchg
xor
add
jno
sarl
enter
jp
hlt
adc
push
aad
sbb
pop
adc
cmp
je
or
push
clc
pop
aas
push
loopne
and
ljmp
ds
cmp
rcrl
adc
jg
or
pop
lahf
insb
in
aam
lret
inc
xor
mov
inc
sub
insb
mov
dec
and
adc
sbb
fidivs
sub
addr16
pop
sti
fisttpl
mov
pop
inc
sbb
adc
mov
xchg
mov
std
cld
pop
xor
aad
xchg
dec
push
jo
dec
adc
xchg
and
movsb
add
mov
push
pushf
iret
lcall
cld
sbbl
jb
adc
xlat
dec
aam
shll
dec
aam
int3
push
test
into
mov
jb
pop
or
mov
fdiv
rcr
cmpsl
ja
data16
or
add
movsl
addr16
pop
leave
fisubrl
sub
loopne
add
into
adc
in
stos
les
add
sbb
call
cmpsb
push
mov
fstps
aas
or
mov
outsb
mov
xor
jbe
pop
and
and
and
dec
repnz
and
dec
ucomiss
lret
push
sti
pop
jmp
fwait
mov
inc
stos
mov
cmpsl
dec
xchg
jnp
imul
out
xlat
cmp
sub
lret
pop
sti
pop
jmp
fwait
mov
inc
stos
mov
cmpsl
dec
xchg
jnp
imul
out
xlat
cmp
sub
jmp
fwait
mov
stos
mov
cmpsl
dec
xchg
jnp
imul
out
xlat
cmp
sub
lret
pop
sti
pop
jmp
fwait
mov
inc
stos
mov
cmpsl
loope
jnp
sbb
xchg
xchg
hlt
cmpsl
les
out
inc
scas
jnp
repz
inc
push
push
inc
es
push
push
push
out
mul
cmpsb
mov
sub
jbe
inc
inc
push
push
inc
es
aaa
es
push
push
push
out
mul
jle
les
js
sahf
test
or
xor
inc
bound
xchg
notb
xchg
test
mov
fmull
push
stos
lret
out
push
push
pop
or
idivl
mov
jp
mov
pop
jp
jle
ficoml
ss
aaa
ss
pop
inc
mov
negl
repz
sahf
dec
xor
or
push
fcmovnbe
lret
daa
push
mov
push
out
shl
add
mov
into
fildll
jns
mov
cmpsl
arpl
fsin
popf
push
mov
jae
inc
test
inc
pop
xchg
xchg
jecxz
sahf
sbb
jbe
xchg
fldl
gs
stc
pop
push
stc
fidivl
push
pop
cld
sub
icebp
cmp
jp
jbe
push
mov
cmp
ret
fld
push
adc
and
push
int3
cmpsb
mov
cmpsb
xchg
data16
inc
inc
push
push
sbb
fiadds
push
push
push
adcb
leave
jmp
xor
and
pop
ja
arpl
addr16
mov
cmpsl
movsl
mov
jecxz
fscale
xchg
ret
clc
shr
adc
adc
cmp
push
and
push
push
ja
insl
andl
mov
xchg
jbe
inc
push
push
inc
es
push
push
push
out
mul
cmpsb
mov
cmpsb
xchg
jbe
inc
push
push
inc
es
push
push
push
out
xchg
xor
test
test
enter
mov
push
jns
cmp
andps
cmp
sarl
inc
cs
cmpsl
and
mov
cld
jl
mov
fiadds
push
cmp
pop
sub
jl
loopne
push
add
push
cmp
mov
xchg
mov
sti
jmp
imul
jle
mov
arpl
or
sub
call
and
inc
mov
cwtl
sti
stc
pushf
sub
jecxz
loopne
rcll
mov
dec
add
inc
dec
outsb
movl
dec
aaa
and
mov
rol
mov
cmp
sub
loop
cmovo
sbbl
pop
jmp
mull
sbb
cmc
push
pusha
loope
outsl
lret
shrb
fisttpl
stos
mov
mov
imul
cmpb
movsl
hlt
ret
js
and
and
mov
std
int3
fnstenv
lahf
sti
mov
xchg
mov
sahf
bound
popa
in
mov
adc
mov
hlt
ficoms
push
daa
idivb
sbb
shrb
pop
xchg
mov
mov
xor
je
cmp
stc
repnz
je
outsl
and
push
push
cltd
cmpsl
insl
into
insb
jg
mov
fidivs
mov
and
adc
test
adc
sbb
stos
push
inc
and
es
aas
xchg
mov
fisubrl
iret
adc
int
std
jle
rorl
sbb
cmp
insb
mov
ret
xor
repnz
xchg
addr16
leave
fnstenv
jbe
lea
push
xchg
aas
push
push
repnz
adc
nop
inc
leave
and
mov
jb
sbb
xchg
into
push
xchg
push
cmp
repz
push
test
in
sub
mov
in
add
add
pop
mov
test
inc
push
je
in
and
dec
cmp
inc
fstpl
xchg
nop
sti
test
shll
add
enter
or
sbb
fs
adc
mov
pop
das
lock
inc
fadd
pushf
dec
jbe
dec
mov
lock
in
push
push
xchg
adc
push
cmp
cmpsl
mov
loop
inc
mov
addr16
adc
outsb
enter
mov
mov
push
pop
incb
std
mov
xchg
xchg
scas
lcall
jae
jo
pushf
das
push
xor
je
adcl
inc
or
sub
shl
fimuls
xor
cmpsb
and
sbb
or
das
mov
xchg
mov
pop
imul
scas
jb
sbb
fstps
popa
call
pushw
sbb
and
das
xchg
jae
and
scas
jne
xchg
insb
arpl
mov
fldt
mov
inc
es
mov
mov
sbb
ljmp
mov
pop
stos
mov
bound
jbe
das
jno
andl
orb
mov
insl
das
xchg
std
or
xchg
xor
cmc
scas
rorl
in
sti
and
orb
dec
je
mov
mov
lea
adcb
mov
push
mov
rorl
test
mov
pop
cmp
into
into
inc
xor
mov
je
ret
ss
lret
sub
rorl
jge
xchg
mov
xchg
cs
adc
dec
pop
rorl
out
push
or
pop
pop
xor
jae
pop
sbb
dec
adc
repz
xor
add
repz
lods
sub
imul
call
fisubrs
in
push
mov
out
or
or
xorb
insb
ftst
add
sub
testl
idivl
negl
ljmp
ljmp
data16
repnz
mov
sbb
repnz
stc
adc
and
ss
xor
in
dec
lret
cmp
mov
pop
ja
sbb
push
add
xchg
xchg
in
cmp
dec
mov
xchg
push
push
int
inc
test
inc
mov
in
subl
add
cmovb
jl
movsl
stos
clc
pop
mov
fimuls
jae
add
lock
dec
jae
aas
cmp
adc
inc
and
jl
or
add
and
daa
lahf
push
cli
cmp
pop
pop
stos
hlt
and
test
neg
cmp
shrb
ret
or
xor
scas
or
xchg
inc
shll
iret
mov
mov
mov
popf
add
and
icebp
push
jecxz
jae
daa
mov
mov
xchg
pop
loope
sbb
mov
outsb
mov
scas
push
push
cmp
lock
and
fstpl
cmp
imul
loope
in
mov
mov
inc
and
jne
cmp
fpatan
fcmovu
mov
cmp
fildll
add
xchg
xor
xchg
mov
data16
cmp
jno
pop
xor
inc
adc
inc
fld
sbb
into
shlb
push
leave
mov
out
es
fwait
std
popa
arpl
inc
pop
jbe
cmp
out
mov
out
repz
cmp
push
inc
fimull
outsl
xor
jae
movsb
es
cmp
divb
stos
mov
icebp
jl
pop
es
test
mov
imul
sbb
pop
jbe
jmp
mov
dec
shlb
out
pop
mov
sub
pop
inc
push
mov
or
ljmp
stos
in
inc
add
outsb
xor
aaa
mov
in
imulb
fcmovbe
dec
push
pushf
jbe
mov
mov
ret
xchg
loopne
test
movsb
push
rcrb
and
test
std
push
mov
mov
inc
push
ss
mov
sub
sub
loop
xchg
and
push
mov
out
cli
xlat
and
jb
mov
xor
clc
or
sub
add
xchg
aad
pusha
repnz
mov
jg
lret
pop
push
rorl
push
movsl
sarl
arpl
bsf
out
xchg
pop
pop
testb
or
xchg
adc
mov
lcall
mov
jnp
xchg
adc
or
inc
orl
icebp
aad
mov
inc
add
loope
sti
lcall
adc
int3
inc
iret
inc
mov
std
and
jnp
jbe
popa
sbb
lret
push
pop
les
lea
jle
cmpsb
dec
push
rclb
punpcklbw
shlb
ja
int
cmpsl
jge
jecxz
js
jl
add
popa
cmc
push
cmp
cs
or
xchg
mov
fcompl
iret
aaa
fmuls
sbb
fwait
mov
inc
rorb
pop
out
and
jl
and
in
inc
sbb
jb
mov
mov
mov
scas
ret
fwait
jmp
inc
jge
dec
insb
sub
mov
pop
cmpsl
das
adc
lret
pop
into
cmp
scas
inc
sub
adc
sub
popf
iret
popf
pop
sub
sub
jbe
cmp
daa
inc
adc
mov
cmc
insl
adc
adcl
aad
scas
movsb
dec
test
inc
mov
ds
push
mov
jl
add
sbbl
loop
inc
cmp
cmp
outsl
cli
dec
mov
mov
js
jg
push
pop
fsubrp
mov
dec
adc
jno
cmp
loop
mov
arpl
dec
jae
loopne
push
push
dec
pop
mov
fstl
into
xlat
xor
mov
pop
sahf
jo
sbb
popa
jbe
sbb
push
add
addr16
js
adc
fcoml
mov
xor
test
pop
cmp
stc
add
leave
mov
adc
mov
lods
jns
pop
fwait
in
sub
mov
cmpsl
sub
jno
sub
xchg
xor
mov
frstor
xor
imul
fucomp
fs
rorb
sub
xchg
stos
fs
shl
inc
pusha
jge
adc
dec
push
dec
xchg
in
nop
lods
mov
adc
add
out
pop
in
sbb
pop
xlat
or
cmpb
jp
test
and
or
adc
xchg
mov
into
jecxz
scas
fisttpll
jno
pop
les
ret
stc
iret
cmp
push
mov
out
popa
adc
call
pop
ljmp
jo
mov
int3
push
pop
idivb
xchg
daa
mov
test
inc
addl
cwtl
je
sub
jno
scas
adc
shlb
mov
pop
push
je
in
popa
push
jle
jp
aam
adc
add
mov
sahf
je
or
ret
sbb
aam
xchg
test
sub
pop
xor
sahf
push
push
inc
shrb
cwtl
push
cmp
mov
xchg
pop
mov
dec
jle
outsl
dec
fsubrl
jo
in
inc
jge
cmp
roll
lods
jmp
lahf
xor
imul
cmc
push
sub
ret
mov
iret
push
movsl
aas
xor
pop
cmp
mov
xchg
xchg
push
in
in
test
jmp
push
push
out
pop
dec
xor
jle
iret
sub
popf
stos
js
jns
cs
es
push
fstpt
gs
push
pop
call
inc
mov
sahf
sub
push
sbbl
insl
outsl
jmp
push
push
jecxz
mov
xchg
and
sbb
mov
stos
aam
lahf
mov
pop
mov
test
icebp
iret
mov
iret
push
jecxz
int3
dec
cmc
add
int3
mov
out
mov
add
stos
inc
xor
and
aad
sbb
mov
inc
ret
insl
repnz
stos
dec
push
addb
bound
mov
sbb
insb
lods
sbb
cmp
mov
dec
shrl
mov
insl
arpl
cmp
xchg
fcoml
add
out
sbb
test
dec
push
push
mov
out
test
push
push
mov
sub
sarl
cwtl
inc
in
fcomps
mov
leave
mov
jp
adc
pop
xor
xor
aas
inc
sbb
inc
out
pop
test
dec
jb
push
ss
adc
testl
dec
shll
lret
inc
or
cmp
jno
loop
test
in
push
stc
fwait
mov
push
leave
and
rclb
push
inc
xchg
mov
jg
imul
sub
mov
fldt
fwait
pop
and
ljmp
es
pop
dec
test
push
add
add
roll
daa
add
js
scas
ficoms
mov
aam
int
insl
xor
repnz
ret
sub
cmpsb
incb
mov
decl
loopne
test
mov
repnz
xchg
in
out
dec
pop
adc
fwait
test
ffree
xorb
scas
insw
loopne
push
xor
add
inc
movsb
in
lret
jmp
dec
push
stc
xor
add
jne
fistps
ja
adc
mov
in
cltd
test
rorb
mov
or
xchg
mov
mov
test
jnp,pn
xor
aad
test
xor
stc
jns,pn
gs
mov
push
lahf
icebp
fbstp
out
xchg
cmpsb
pop
mov
lea
xor
fs
stos
int
pop
imul
enter
mov
es
mov
clc
xor
or
push
fidivrl
mov
rorb
cltd
cmp
adcb
test
pop
inc
adc
fistpl
add
sbb
test
push
nop
mov
pushf
adc
fs
or
fbstp
inc
pop
jo
loopne
cli
vaddss
adc
icebp
adc
aas
loopne
pop
xlat
fcmovnbe
ret
and
cmp
mov
dec
out
mov
sbb
aad
mov
sbb
xor
or
push
adc
pop
lcall
sarb
mov
or
mov
mov
adc
fwait
nop
jo
std
xchg
xor
dec
mov
mov
pop
loopne
incl
sbb
xchg
out
xchg
push
xor
mov
repnz
fcompl
ret
subb
mov
rcrb
loop
fld
xor
jmp
popa
fisubs
sarl
fisubrs
xor
fisubrs
pop
fimull
or
jle
stos
jb
cmp
xchg
fwait
popf
sub
dec
ret
mov
inc
out
xor
pop
call
call
mov
xchg
push
fimull
cli
sbb
jbe
xchg
insb
add
inc
add
loop
mov
fstps
ja
mov
repnz
cmpsb
xor
shll
xchg
mov
fistpll
outsb
xchg
stc
xchg
and
fucomp
sarb
js
stc
sbb
jno
rol
jge
mov
sub
push
xchg
out
jno
xorb
sub
movq
test
mov
mov
test
test
push
int
mov
popf
leave
in
call
jbe
sub
and
aaa
xor
push
sbb
popf
aam
jne
icebp
movsb
or
add
inc
sbb
sub
xchg
cltd
jb
push
rcl
jnp
cmpsl
seto
cmpsl
fisttpll
cltd
std
loop
ficompl
xor
xchg
jp
lock
push
lcall
or
or
cltd
loopne
adc
movsl
cmp
and
cmp
shrb
jmp
add
scas
sub
ss
jbe
pop
sub
mov
mov
cmp
out
cmp
mov
test
test
pop
shlb
jle
pop
mov
ret
mov
mov
xchg
adc
jecxz
les
cmp
xor
or
orb
sub
adc
mov
cmp
add
xor
push
sbb
repz
xchg
mov
sarb
fldl
mov
cs
xorl
cmp
and
jne
int
sbb
fs
xchg
push
aaa
sub
dec
and
shl
pushf
popf
adc
push
pop
sti
stos
jge
mov
jmp
mov
jl
lods
jb
bound
shrb
cmp
or
adc
xchg
lret
lods
sbb
xor
cmp
mov
add
add
popa
mov
xlat
adc
sarb
push
mov
pop
lods
adc
daa
shrl
mov
dec
cmpsl
aad
jg
leave
imull
insb
mov
rolb
jmp
push
dec
aam
pop
call
loope
popa
fidivl
outsb
notl
pusha
mov
scas
pop
in
jmp
sbb
scas
psubsb
test
add
jb
sbbl
mov
push
cwtl
aaa
int
sahf
pop
pop
push
clc
sbb
negb
or
pop
pop
jmp
push
pop
pop
lret
jle
and
pushf
fistl
pop
push
sub
xchg
divb
mov
in
xlat
es
idivl
and
xlat
sbb
cmpsb
xor
addl
dec
repz
orb
cmp
popl
dec
mov
negl
add
add
addr16
es
jo
push
fidivl
inc
aaa
mov
imulb
inc
inc
push
fiadds
push
mov
rcrb
add
dec
mov
jge
fwait
ljmp
mov
mov
sub
pushf
lds
mov
sub
inc
es
pop
mov
lcall
mov
jg
jo
icebp
cmp
rorl
sahf
and
mov
xorl
test
jne
dec
fcmovnu
idivb
scas
sbb
jbe
jnp
mov
push
pop
fsts
movsb
jg
mov
push
fisttpll
dec
xor
mov
pop
jae
adc
mov
jl
into
cwtl
push
push
ss
stos
xchg
jo
in
pop
or
mov
mov
xchg
daa
push
js
push
sub
push
dec
and
daa
arpl
or
or
jle
loop
enter
adc
out
aas
inc
mov
outsl
mov
orb
scas
fdivp
les
xor
clc
and
sbb
ss
ret
cmp
filds
push
push
mov
subl
int
xchg
push
cli
mov
cmp
jle
push
fnstcw
arpl
insb
sub
pop
push
enter
add
icebp
mov
ljmp
negb
test
leave
and
out
testl
lods
inc
daa
sbb
xchg
push
out
sub
shrb
mov
jmp
fistpll
arpl
cmpsb
sub
hlt
imul
xchg
fsts
popa
mov
addr16
inc
adc
adcb
mov
lds
push
jo
jb
test
cmp
addb
scas
fcompl
and
lea
and
add
and
repnz
push
cli
cmp
lahf
lock
bnd
mov
lods
mov
push
call
cmp
mov
sbb
mov
jp
cld
popf
loop
mov
dec
sub
mov
lret
pop
mov
int3
xor
lret
movb
dec
sbb
adc
pop
pop
gs
cmc
xor
adc
pop
roll
adc
xchg
fs
sub
sahf
imul
pop
cli
push
sahf
push
and
xchg
and
mov
dec
gs
rclb
ret
jne
mov
mov
xchg
mov
xor
xor
cs
aam
inc
inc
fimull
xor
add
mov
and
bound
fists
rolb
xor
push
bound
call
cli
clc
repz
test
sbb
addr16
ja
sahf
lds
push
mov
jbe
mov
cmp
test
mov
in
cs
push
pop
insl
lods
jbe
out
jae
jg
sbb
bound
dec
inc
jae
xor
shlb
mov
mov
push
and
int
jge
stos
fcmovnbe
and
pop
test
adc
adc
popf
mov
pop
scas
pop
shll
sahf
cld
add
inc
xor
xchg
mov
xchg
aad
imul
adc
out
dec
inc
aaa
pop
sbb
push
repnz
lds
push
fwait
jge
shll
mulb
push
leave
fnstenv
rorb
xchg
stos
push
xchg
sub
fisttpll
mov
pop
mov
push
aad
push
fidivrs
jg
dec
sub
pusha
sub
call
arpl
add
outsl
push
xchg
loope
mov
mov
out
jl
push
xchg
aaa
pop
push
fisubrl
jbe
sub
out
dec
ficoms
inc
aaa
cmp
insl
push
inc
mov
das
lcall
and
aad
push
fimuls
scas
mov
jbe
jge
ss
inc
lds
loopne
push
lock
dec
std
scas
lods
inc
pop
pop
jne
sub
adc
lret
push
cld
pop
test
cs
in
je
cmpb
lret
add
mov
ret
popf
mov
pop
iret
test
xchg
mov
loopne
jmp
lret
cmpsb
scas
pop
push
lock
cmc
fwait
stos
push
lcall
mov
and
es
push
sub
jno
mov
outsb
cs
sbb
and
sub
daa
test
mov
or
and
ret
in
sti
pop
pop
xor
cld
les
push
pop
pop
mov
out
cmp
xor
add
je
xchg
fnsave
xor
and
mov
je
test
mov
mov
push
inc
xchg
sahf
adc
icebp
js
lds
out
jns
jns
sbb
insl
push
push
jg
cmp
in
mov
push
jne
arpl
inc
aaa
and
push
icebp
cmp
les
in
stc
aad
cmp
sbb
add
sahf
test
push
aaa
mov
mov
fldenv
cltd
je
or
mov
shrl
sbb
sbbl
jnp
int
and
insb
out
and
pop
adcb
push
mov
idivb
enter
fldt
sbb
sub
pop
jne
sbbb
inc
xor
push
sbb
adc
in
inc
rcr
outsl
cwtl
insb
fcmovnb
or
scas
in
orl
mov
cld
jo
cld
sub
adc
movsl
push
cmp
lret
fwait
and
sbb
adc
pop
imul
dec
outsl
fnstcw
lock
xor
pop
frstor
cmp
pop
mov
mov
in
ucomiss
leave
mov
pop
repz
cld
imull
int
dec
in
add
fildll
mov
cli
cmpsl
jcxz
inc
repnz
dec
sbb
push
push
enter
in
pop
and
dec
cmp
cmpl
or
jne
insb
aaa
loope
jmp
xorl
fst
rcrl
adc
icebp
push
fadds
fwait
or
pusha
mov
fidivrs
sub
std
xchg
stc
mov
mov
xchg
jbe
inc
push
push
inc
es
push
push
push
out
mul
cmpsb
mov
cmpsb
xchg
jbe
inc
push
push
inc
es
push
push
push
out
imulb
cmpsb
mov
push
xchg
jbe
inc
push
push
inc
es
ss
push
out
mul
cmpsb
mov
cmpsb
push
push
push
xchg
push
push
xor
mov
stc
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
or
push
loopne
and
mov
cli
cmp
arpl
add
add
add
add
or
arpl
push
add
dec
add
add
mov
and
add
pop
add
add
push
add
lret
add
add
add
add
add
dec
add
test
add
add
add
add
inc
add
add
add
fwait
add
xlat
add
add
jno
or
xor
add
imul
das
add
and
add
add
dec
add
lret
add
add
fiaddl
loopne
add
out
add
add
add
add
push
add
jne
adc
jno
or
imul
incb
ja
lock
add
and
add
add
add
add
add
add
pop
add
imul
fldl
inc
add
add
leave
add
pop
add
add
lret
add
add
add
add
add
test
pop
add
lret
add
add
fwait
add
add
add
dec
add
imul
add
add
add
add
pop
add
dec
add
pop
add
add
add
addr16
add
add
add
add
xor
sub
fldl
dec
add
add
add
add
add
mov
add
add
roll
add
add
pop
add
add
add
mov
add
add
mov
add
mov
add
add
add
add
pop
add
add
add
add
outsl
add
add
add
add
add
roll
mov
add
add
add
add
fldl
xlat
add
add
add
add
jo
rolb
aaa
add
iret
add
add
add
add
cmp
dec
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
sub
add
iret
add
add
popa
add
jl
add
add
dec
add
add
add
add
push
add
add
add
add
add
add
add
add
add
addb
add
dec
add
add
and
filds
pop
add
add
add
add
into
add
add
add
add
add
add
add
add
inc
add
add
add
pop
add
rolb
add
add
add
add
add
add
add
add
add
add
or
adc
movsb
add
add
add
add
add
add
and
add
push
add
xchg
add
add
add
sub
dec
add
add
add
add
cmp
test
add
popa
add
fldl
cmp
sbb
xlat
add
add
pop
add
movl
add
add
in
add
imul
add
add
add
dec
add
add
add
push
add
push
add
add
add
in
incl
add
add
add
lcall
add
add
add
add
add
add
add
test
push
add
add
dec
add
inc
add
add
add
add
pop
add
pop
aaa
insl
jb
test
pop
insb
or
jbe
dec
mov
scas
jg
and
jae
inc
sbbb
pop
cmp
xchg
sub
jno
pushf
jmp
push
cmpsb
sbb
add
jnp
mov
in
outsl
inc
push
cwtl
scas
daa
mov
insl
loopne
xchg
testl
test
loopne
std
mov
adc
mov
jbe
sbb
add
outsl
xchg
adc
mov
loopne
inc
jns
mov
lods
cs
cwtl
sbb
popf
rcl
imul
sbb
inc
add
outsb
js
mov
loop
mov
mov
mov
or
mov
mov
mov
add
incl
jecxz
sub
decb
in
out
icebp
push
push
add
jno
leave
es
mov
pop
cmp
inc
rcrl
mov
jne
dec
insb
imul
fdivl
sub
mov
out
in
push
jb
dec
ds
repz
gs
jno
inc
ret
ja
mov
insb
leave
cwtl
test
icebp
mov
pop
sbb
fldenv
repnz
add
out
scas
xlat
xor
out
push
scas
xchg
pop
mov
sub
push
cmp
jae
bound
push
rcrl
mov
loopne
stos
pop
push
cmpsb
ret
jbe
mov
sub
add
inc
inc
fwait
pusha
mov
xchg
cmp
mov
movsb
jb
push
inc
sbb
imul
sti
push
fwait
sbb
cmpsb
test
test
sbb
ss
pop
rcr
pop
add
stos
push
and
outsb
mov
cltd
xor
cs
lcall
int
pushf
lret
fmuls
daa
sbb
call
int3
ficoms
aaa
sub
dec
test
repz
sub
cmp
fstpt
outsl
sub
pop
or
gs
pop
dec
dec
mov
pop
pop
inc
adc
add
or
pushf
add
jo
jp
cwtl
cmp
push
stos
test
pop
dec
out
cmp
gs
stos
in
dec
mov
xor
inc
imul
inc
das
and
adcl
addr16
push
dec
leave
xchg
pop
cmc
repnz
call
fiadds
mov
sti
movsl
or
call
or
std
jb
dec
cmpsl
or
in
jle
jl
jb
aaa
jmp
cmp
and
fcmovnu
fwait
and
jo
repnz
mov
push
adc
mov
adc
and
push
cmp
add
stos
cmpsb
ficomps
mov
mov
dec
sub
jne
fwait
call
inc
out
scas
lods
pop
cmp
mov
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
