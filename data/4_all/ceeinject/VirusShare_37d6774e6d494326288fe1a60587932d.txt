call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
push
movsl
inc
mov
test
adc
cwtl
adc
xor
adc
add
mov
mov
movsl
inc
mov
test
adc
add
xor
and
xchg
add
xorb
mov
lods
loopne
mov
in
sub
and
mov
loope
lcall
add
aaa
cmp
push
lds
or
push
sub
or
xchg
push
js
add
xlat
popf
cmp
mov
mov
lds
scas
sub
mov
ja
push
ljmp
pop
lods
lods
cmp
fiadds
mov
lret
inc
fidivrs
notb
mov
loop
add
int3
jp
sahf
adc
jp
in
in
in
mov
push
rol
ret
cli
sbb
insl
pop
xor
mov
dec
dec
push
jp
loope
and
test
lret
cmpsl
lods
xlat
andb
scas
shrb
jge
pop
in
outsl
jmp
int
pop
test
dec
pop
jnp
push
ljmp
mov
movsl
jb
bound
xor
test
adc
pop
sub
fidivrl
insl
sbbb
cmp
sbb
jge
insb
xchg
inc
test
xchg
xor
loopne
in
ja
sub
cmp
int3
daa
faddl
testb
jnp
addr16
mov
nop
push
repnz
lcall
and
and
movsl
cs
loope
rolb
add
xor
and
shlb
loop
xchg
xorb
mov
mov
test
adc
add
xor
and
shlb
loop
xchg
xorb
mov
cmpsb
mov
mov
imul
mov
sbb
data16
or
imul
mov
cli
mov
aaa
jae
add
pop
data16
sti
sub
push
setge
pusha
aad
bnd
aaa
xchg
loope
data16
push
or
jnp
pop
adc
out
push
insl
cmpsb
push
xchg
or
add
scas
add
or
ljmp
or
jg
jae
inc
cmp
mov
push
jae
shlb
in
stos
jmp
das
mov
loopne
fidivrl
fbld
xchg
cmp
sahf
rolb
stos
jbe
jmp
and
stc
push
ljmp
and
push
decb
xchg
lcall
enter
dec
fsubl
ret
sub
fst
insl
add
push
pop
inc
sbb
ret
in
pop
ret
dec
pop
loopne
jb
jno
incb
mov
jmp
andb
icebp
enter
pop
mov
cli
int3
ror
mov
sub
adc
mov
jo
and
ja
xor
stos
add
mov
fwait
call
sbb
mov
test
rcrb
pop
xor
pop
xor
aad
pop
inc
int
inc
sahf
adc
pop
sbb
xchg
in
sub
notb
addr16
jbe
and
push
lret
add
mov
into
sub
xor
movsl
push
fisttpl
mov
sbb
push
sbb
addb
pop
and
out
push
call
ljmp
cmp
sbb
movb
jbe
mov
or
mov
add
in
jecxz
pop
pop
sub
ja
mov
inc
jb
jmp
sbb
push
xchg
adc
xchg
xor
adc
sbb
and
xor
shlb
ljmp
hlt
shlb
xor
icebp
adc
sub
popf
mov
xchg
aam
mov
and
push
xlat
xchg
in
icebp
andl
mov
mov
mov
mov
sbbl
mov
cmpsb
mov
push
adc
jg
cmp
add
aas
mov
push
mov
dec
fcompl
sub
or
push
addr16
xchg
add
out
and
aaa
scas
lods
xor
or
mov
inc
test
mov
neg
and
inc
sub
in
push
lret
or
sub
mov
inc
mov
dec
incb
xor
mov
ja
mov
lret
or
add
fsubr
xchg
mov
mov
rclb
loope
insl
pop
mov
stos
jmp
or
enter
rclb
dec
aam
ret
pusha
jo
sahf
roll
scas
dec
mov
inc
cmp
lret
mov
push
shrl
mov
and
pop
adc
dec
adc
fcmove
jmp
into
ljmp
add
push
mov
cld
lock
adc
mov
jo
or
cmp
mov
pop
fs
xor
mov
mov
test
das
lods
mov
popl
ja
test
inc
test
mov
xchg
cli
dec
lea
repnz
scas
rorb
dec
int
stc
clc
mov
adc
fnstsw
sbb
in
cli
push
xchg
aad
and
test
push
cmp
scas
mov
inc
mov
subl
sub
xchg
pop
int3
and
pop
repz
xchg
sbbb
out
jge
jne
test
inc
mov
enter
xor
mov
cmp
xchg
int
scas
pop
and
sub
dec
aaa
mov
push
fmul
xchg
lock
jbe
lods
pop
sbb
adc
shrl
notb
mov
in
les
outsl
inc
idivb
xchg
sbb
pusha
lcall
sub
xchg
enter
mov
cmp
aad
or
jl
push
iret
mov
cmpb
mov
and
test
filds
dec
or
fisubrl
push
xor
or
add
sahf
pusha
lods
mov
repnz
outsb
lahf
adc
cs
add
and
cs
sti
push
jg
and
dec
insb
shlb
dec
lods
outsb
lds
xor
lods
sbb
lret
inc
sub
and
cwtl
loop
movsl
mov
jb
jmp
sarl
mov
jl
hlt
adc
or
or
aaa
push
clc
dec
sar
add
mov
loopne
jmp
cmp
inc
adc
mov
xchg
inc
pop
movsb
ret
aaa
mov
xor
ljmp
pusha
mov
push
push
jb
lods
shlb
cwtl
test
lods
popa
cmpb
fs
fsts
xchg
mov
call
dec
sahf
or
jmp
jae
es
and
xchg
cld
arpl
mov
jg
and
popf
std
adc
sbb
das
adc
test
jbe
inc
mov
push
out
add
test
lea
arpl
mov
das
scas
dec
add
xchg
sub
inc
add
xchg
imul
hlt
xor
mov
push
imul
movb
icebp
mov
cmp
push
cmp
fnsave
xchg
ret
xor
out
dec
mov
xchg
push
lcall
xor
aad
sub
jmp
test
pop
dec
cmp
cld
push
pop
mov
shrb
jb
mov
inc
or
sub
popf
jp
dec
fildl
push
les
es
pop
mov
imul
test
adc
inc
lahf
dec
mov
daa
das
jns
rcrl
mov
push
hlt
pop
aaa
pop
add
push
mov
pop
sbb
push
xor
mov
adc
int3
cli
imul
aam
loop
mov
int3
out
lods
dec
insl
pop
loopne
jle
mov
imulb
arpl
out
loope
push
inc
add
fistps
push
jl
shll
pop
stc
push
jg
inc
inc
pop
mov
cmp
fwait
scas
sbb
aad
ds
out
aas
push
add
mov
adcl
cmpl
aad
icebp
loope
repz
pushf
dec
inc
inc
out
mov
pop
or
incb
iret
dec
arpl
push
cmp
je
icebp
adc
cmp
or
push
push
dec
xchg
adc
out
mov
inc
add
gs
sti
imul
fstpl
int
dec
mov
divl
stos
jle
pop
mov
cmp
add
div
movsb
outsl
insl
push
sub
inc
or
jge
in
ficoml
jo
push
lcall
sbb
adc
jnp
sbb
sbb
pop
fwait
sbb
leave
aaa
and
dec
xor
adc
lret
sub
xchg
inc
scas
mov
and
pusha
mov
push
push
fisttps
outsb
mov
in
jb
inc
leave
jp
std
push
in
data16
lret
into
dec
repz
inc
xchg
insl
movsl
xor
add
jmp
mov
push
dec
in
sub
jae
inc
in
xor
sub
xchg
test
pop
push
mov
jb
sub
mov
adc
mov
fwait
mov
je
icebp
sub
push
movl
xor
test
fimull
addr16
arpl
jge
mov
pop
insl
bswap
iret
or
jno
jb
in
fs
jo
and
xlat
cmpsb
test
cmp
pushf
call
pop
adc
aas
mov
sbb
rolb
dec
mov
jecxz
pop
dec
push
sarl
sub
ret
pop
jl
push
aam
mov
sar
bound
mov
jbe
sub
push
push
std
and
mov
jg
fld
dec
cmpsb
sub
push
pusha
push
cmpsb
in
mov
mov
jp
idivl
sub
or
sub
pusha
jo
and
and
repz
sbb
pop
push
sahf
xchg
inc
test
mov
pop
out
and
xlat
shlb
jg
pushf
lahf
inc
fmuls
mov
orb
xchg
xor
push
in
rcrl
loopne
iret
mov
lret
inc
das
sbb
mov
mov
sbb
xor
jnp
int
mov
les
hlt
lods
cmpsl
xchg
sub
addr16
loopne
mov
lds
push
mov
mov
loop
sahf
int
jne
cmp
xchg
daa
dec
es
mov
loope
mov
dec
jo
fnstcw
imul
jg
shll
cmpsl
cwtl
mov
loopne
dec
add
mov
jg
pop
sbb
xchg
jge
sbb
cmp
mov
lods
cmpb
pop
adc
ret
es
clc
ja
rcll
mov
int
adc
adc
out
lods
inc
into
in
idivb
push
dec
outsb
js
jne
pop
divb
dec
jge
dec
add
call
and
xorb
adc
into
faddp
jge
scas
jns
in
jp
popf
int
xchg
and
dec
xor
jl
xchg
and
call
xchg
adc
xor
mov
imul
jg
lret
push
std
or
inc
nop
shrl
xor
mov
jge
stc
and
mov
dec
loopne
scas
jge
jge
xchg
cmpsl
add
adc
sub
test
xlat
ja
mov
cmp
scas
mov
xor
mov
xor
sub
jns
and
pop
js
mov
pop
movsb
mov
xchg
jns
lret
xor
xchg
orb
inc
dec
div
int3
xor
cmpsl
xchg
stos
add
mov
test
jo
aaa
rcrl
cmp
popa
call
xchg
popa
cwtl
and
ja
in
xchg
mov
jb
pop
lds
es
lock
addr16
mov
inc
push
fs
lret
fcoml
pop
push
sbb
xlat
and
adc
inc
roll
scas
xchg
lock
ficomps
push
fadd
ret
and
or
imul
sbb
inc
or
popa
call
popf
lret
xor
push
dec
out
push
hlt
sbb
in
and
mov
daa
xchg
mov
andb
out
outsb
fcoms
int3
lea
xor
inc
loop
imul
pop
and
xlat
mov
cmp
sti
and
adc
add
mov
or
pop
inc
mov
cs
test
cwtl
xchg
test
xchg
mov
inc
cld
adc
ss
ret
pop
mov
shlb
xchg
mov
jge
mov
xchg
sbb
jae
ds
cmp
push
fldl
mov
pop
push
xor
jecxz
popf
xor
fwait
sub
ljmp
mov
xchg
and
dec
xor
pop
pusha
test
jne
insb
pushf
arpl
daa
sahf
test
lods
mov
xchg
jl
fdivs
lds
jmp
pop
adc
pop
pop
pop
xchg
push
call
aam
push
sub
cmp
pavgw
fdivr
inc
xorb
and
push
sbb
movsb
or
nop
or
sbb
movsb
or
fimull
xor
into
adc
inc
mov
mov
stos
jne
jmp
cltd
mov
mov
lds
inc
clc
xor
lret
push
xor
aad
xor
lcall
mov
inc
push
or
iret
pop
pop
dec
push
rcr
testb
xor
repz
lods
fldenv
pop
xchg
loope
popf
test
jo
pop
gs
add
sar
lea
dec
nop
aad
in
jmp
cld
sub
aam
imul
mov
and
inc
mov
adc
push
lock
xchg
jb
out
xor
or
add
rorb
loopne
xchg
pop
sub
mov
in
aam
cmc
cmp
jle
and
add
aam
cwtl
cmp
mov
cltd
pop
test
and
jmp
jmp
lock
sti
cmp
sahf
jo
faddp
cmp
mov
cltd
push
mov
mov
stos
jle
pop
lods
ret
test
mov
mov
dec
push
jo
inc
mov
cli
push
jecxz
call
sub
adc
les
daa
int
push
fcmovnb
pop
arpl
push
imulb
gs
das
mul
les
das
and
mov
sbb
and
inc
push
or
or
xchg
jmp
test
movsb
xor
push
push
fsub
pop
sbb
cld
mov
pop
dec
cmp
dec
into
inc
push
xor
inc
outsl
push
jl
mov
lea
mov
rorl
pop
stc
cltd
lods
scas
xchg
sub
add
imul
jo
push
pop
pop
mov
stos
shl
pushf
or
out
mov
jb
ss
adc
out
lret
adc
repz
cmpb
cmp
loope
lea
out
insb
push
inc
inc
js
push
inc
dec
rcrb
cmp
pop
insl
add
out
push
pushf
ljmp
leave
mov
clc
cld
and
fwait
incl
orb
pop
adc
ret
lods
rcrl
push
mov
cmc
gs
outsb
mov
jmp
nop
daa
push
adc
inc
iret
dec
mov
mov
arpl
xchg
in
xchg
mov
push
aaa
dec
jnp
call
pop
stos
or
inc
push
pushf
push
adc
cmc
sbb
imul
ret
pop
test
pop
mov
mov
test
lea
mov
sub
add
jns
nopl
pop
call
cmp
mov
adcb
push
jl
loope
xlat
jg
pop
mov
add
aam
jecxz
sub
push
out
sbb
inc
jo
aas
out
popf
fildl
aaa
dec
mov
xor
out
sti
test
adc
sub
leave
mov
jb
mov
outsl
rcr
pusha
sar
movsl
idiv
sbb
pop
lea
sub
jge
jmp
adc
or
stos
insl
loopne
dec
sub
dec
arpl
inc
cs
dec
jb
out
add
dec
scas
push
push
fbld
mov
inc
ja
dec
sub
pusha
xlat
add
imul
repz
and
les
and
arpl
mov
ret
aas
into
int
dec
dec
and
push
insb
in
cmp
add
pop
jl
dec
xlat
scas
fwait
xchg
pop
sbb
xchg
cld
leave
push
ret
cmpsb
lcall
test
xchg
jns
sbb
push
jne
cmpl
xor
in
jg
arpl
sub
cs
movsl
jmp
push
dec
cmp
icebp
or
jb
mov
xor
lds
sub
mov
jnp
and
fists
fisttpll
xchg
shl
cmp
lea
push
sub
pop
enter
in
pop
jne
push
icebp
mov
dec
fistpl
movsb
sbb
adc
jl
adc
inc
push
add
fcomps
add
push
dec
mov
sub
mov
cmpsl
push
mov
adc
std
push
mov
add
sub
ror
pop
xlat
dec
jnp
dec
movsl
fwait
sbb
mov
cmpsl
pop
fdivs
jecxz
je
mov
inc
add
test
aas
xchg
xor
pop
rolb
mov
loop
enter
ret
sbb
insl
cmp
aam
inc
ss
adc
mov
rclb
rorl
push
call
outsb
lahf
sbb
xor
fnstenv
lahf
shll
int3
jecxz
sbb
aas
insl
pop
int3
sub
cmpsb
daa
lds
mov
gs
push
sub
mov
xchg
pop
xchg
push
shrl
adcb
shrd
mov
imul
outsl
lahf
lock
lds
jo
dec
push
xchg
push
icebp
sbb
jl
call
sbbb
sub
lcall
in
filds
test
sub
cld
lret
dec
scas
jmp
jno
push
mov
pop
inc
adc
add
and
clc
xlat
or
insl
mov
adc
pop
or
movsb
mov
pushf
ds
lods
jg
sarl
dec
push
inc
inc
mov
and
xorb
ja
xor
into
ss
ret
test
clc
xor
dec
popa
dec
cwtl
inc
ret
je
xchg
sbb
lcall
add
lods
push
sub
mov
in
mov
jne
xor
jl
scas
popa
lock
ds
cltd
add
stos
rclb
sbb
stos
xlat
pop
movsb
adc
pusha
mov
add
popf
icebp
daa
adc
lcall
push
mov
orb
push
js
cmc
push
xchg
mov
jg
mov
dec
notl
popa
jbe
inc
testl
lds
leave
lret
add
pop
xchg
jg
push
mov
mov
jge
dec
out
add
cmp
scas
mov
sub
out
dec
lret
scas
push
jecxz
mov
pop
mov
xor
push
inc
push
inc
dec
dec
roll
cmc
ficoms
cmpb
sbb
in
fdivl
xchg
push
pop
popf
stc
add
mov
pop
jno
pop
xchg
pop
arpl
rcrb
out
aam
imul
js
mov
mov
inc
push
out
sbb
mov
mov
xchg
inc
jle
jle
xchg
inc
pushf
pop
xor
mov
xorl
das
or
or
sub
nop
mov
push
fdivrs
movsb
mov
fisttpll
iret
pop
xchg
addr16
jns
lods
inc
out
add
in
pop
js
cmovp
pop
repnz
mov
jle
shll
scas
xlat
pop
or
sbb
fnstcw
inc
icebp
test
test
pop
pop
push
inc
popa
fcmovb
cmpsl
push
jg
jb
outsb
mov
fmulp
pop
cmp
sbb
pop
int
in
fldt
arpl
lods
and
leave
das
aaa
stos
ret
pusha
push
loopne
sbb
movsb
jl
jbe
jge
mov
inc
dec
aaa
or
push
mov
loopne
outsl
xor
nop
xchg
mov
push
movb
in
adc
adc
in
sub
fisttps
xchg
js
jmp
dec
push
cmp
xchg
xor
xor
loope
popa
lret
add
adc
das
fdiv
cmp
pop
cmp
loopne
stos
pusha
scas
adc
lods
aam
cld
mov
lds
pusha
test
adc
cmp
popf
xchg
xor
xor
mov
das
iret
leave
hlt
pop
hlt
push
cmp
testl
dec
mov
cmpb
mov
sub
out
cmp
loop
in
xor
ret
jnp
les
xor
push
rcrl
pop
or
ror
jl
fstl
mov
or
shl
pop
ds
cmpsl
icebp
repz
out
popf
hlt
xchg
movsb
rol
jno
leave
ffree
mov
iret
call
mov
sub
int
pushf
mov
xlat
fisubs
movsb
adc
call
rorl
jae
jne
popf
shrl
xchg
mov
int3
aam
enter
movsl
mov
and
sbb
fidivl
fsubrs
xchg
add
std
and
mov
popf
sbb
and
pushf
popa
lods
leave
iret
cwtl
and
xor
les
gs
pusha
lahf
xchg
movsl
cmp
mov
dec
nop
xchg
cmp
sbb
testl
subl
xchg
orl
daa
lcall
gs
mov
cwtl
add
pop
mov
cld
jno
inc
loopne
mov
out
ja
xor
or
mov
jp
stc
outsl
mov
sub
push
fsubs
imul
mov
mov
xor
jle
or
mov
clc
fimuls
jg
pop
stc
and
or
xchg
je
xor
inc
pop
inc
mov
mov
push
jno
cmp
in
in
stos
cmp
mov
call
in
lods
cmp
subl
xchg
das
mov
cltd
mov
insl
sub
aam
or
mov
sti
inc
imul
nop
cmp
dec
adc
adc
and
jo
pop
jo
rcl
jg
cli
inc
ljmp
and
loop
mov
xlat
jmp
insb
lea
dec
subb
sti
leave
sbb
lea
ljmp
insl
or
fldl
ss
loop
cld
ja
dec
dec
les
ret
cld
and
inc
ret
sub
inc
mov
bound
add
fs
and
jl
jno
cmp
add
ret
cmc
mov
cmpb
aas
mov
sub
addr16
pop
cmp
push
in
adc
sti
rcr
jbe
push
xchg
adc
leave
inc
and
push
or
dec
mov
icebp
push
adc
push
movsb
lock
les
iret
sub
push
cmpsl
icebp
stos
add
stos
in
mov
and
pop
rol
test
sarl
jno
arpl
push
fwait
jae
xor
in
cmc
xor
and
shlb
loop
xchg
xorb
mov
mov
test
adc
add
xor
and
shlb
loop
xchg
xorb
mov
mov
test
and
cmc
xor
loop
shlb
loop
xchg
gs
jne
inc
dec
push
inc
mov
inc
xchg
adc
adc
xor
mov
lahf
pop
add
or
dec
cmp
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
pop
push
xchg
jb
bound
out
xchg
adc
ret
daa
loop
xchg
inc
andb
mov
mov
cmpsl
xlat
adc
add
xor
pop
pop
rolb
ret
daa
loop
incb
ja
addr16
xchg
jb
xlat
adc
add
xor
and
rolb
loope
addb
cs
fmull
shl
and
bound
pop
or
aam
xchg
xor
cmp
jbe
pop
xlat
rcll
ret
lret
out
adc
xchg
xchg
sub
clc
cmp
stos
xchg
mov
repz
dec
mov
sbb
jl
xchg
ja
test
popa
stos
fdivs
hlt
aaa
and
push
pop
xchg
pop
dec
xor
pop
pop
out
pop
sub
iret
add
mov
js
in
mov
aas
lcall
jg
jb
addr16
das
xor
cwtl
pop
outsl
xlat
xchg
cmp
adc
lret
and
ret
rcll
and
data16
push
xchg
jb
xlat
adc
add
xor
and
rolb
ret
daa
loop
xchg
inc
xorb
lret
jecxz
ret
add
jb
bound
xorb
mov
pop
xchg
inc
xchg
and
or
sbb
adc
enter
ret
pop
out
bound
pop
lahf
inc
inc
cltd
push
dec
mov
xor
daa
in
int
push
test
pop
xchg
cmp
add
xor
and
rolb
ret
daa
loop
xchg
inc
xorb
mov
mov
cmpsl
xlat
adc
add
xor
and
rolb
ret
daa
loop
xchg
inc
xorb
mov
cmp
int3
in
test
pop
pop
mov
jp
push
dec
adc
imul
push
pop
aas
mov
xlat
sbb
lcall
fnstcw
pushf
sub
movsl
jo
idiv
inc
in
xor
or
sarl
mov
shrb
fisubrl
push
aaa
inc
rorb
push
xor
inc
mov
addb
xchg
int3
lods
pop
cmpsb
mov
xor
fistpl
imul
adc
js
icebp
mov
lret
cs
xor
cmp
mov
cmpsb
inc
lods
push
nop
mov
mov
jp
dec
sbb
lret
cmpb
push
mov
mov
testl
jg
fidivrl
xchg
lods
pop
jmp
sub
pushf
jg
xchg
aad
pop
fbstp
mov
pusha
pop
dec
and
ficomps
push
cltd
push
in
push
jecxz
xor
lods
add
movsl
push
stos
dec
inc
ljmp
lods
repz
rol
adc
or
ljmp
or
in
pop
pop
cmp
pop
mov
xchg
pop
mov
lcall
xchg
outsb
shll
sub
mov
ss
mov
jno
lds
jae
pop
loope
mov
mov
mov
mov
cmpsl
cld
ret
sbb
adc
jecxz
pushl
test
repz
das
dec
imul
std
rcll
bound
jbe
ret
sub
pop
ficoml
fwait
sbb
inc
ljmp
pop
insb
pusha
test
stos
gs
pop
dec
dec
jmp
inc
mov
add
adc
sub
cs
popl
or
mov
les
cmpl
inc
pop
fbld
pop
lret
in
dec
cwtl
nop
pop
popa
outsl
xchg
mov
push
scas
movsb
jb
dec
pop
push
idivl
dec
in
cwtl
insl
xchg
mov
test
icebp
sub
jp
push
stos
movb
push
enter
stos
lock
cmpsb
inc
out
arpl
jl
movsl
push
out
testl
movsl
push
push
out
sti
cwtl
sbb
push
fisubrs
and
lahf
dec
mov
test
xchg
pop
rcrl
test
or
mov
lock
jecxz
ds
outsb
mov
push
mov
stos
inc
ret
sti
lret
dec
mov
popa
dec
mov
pop
and
dec
jl
or
adc
mov
repz
insb
mov
stos
popa
jecxz
adc
test
push
test
mov
sub
push
repz
and
push
push
mov
xchg
cmpsb
ja
xchg
xlat
out
push
in
mov
cld
or
inc
adc
xchg
dec
pop
pop
cmp
leave
or
pop
pop
mov
ret
dec
pop
adc
mov
scas
ljmp
mov
sub
mov
mov
mov
or
and
mov
push
pusha
or
adc
es
pop
inc
dec
jg
inc
inc
sarb
loope
mov
inc
iret
adc
jae
std
cmp
aam
andl
and
out
clc
sub
xchg
and
add
mov
xchg
mov
sub
adc
adcb
das
jno
or
insl
cmpsl
jne
or
mov
stos
mov
lcall
scas
insl
dec
gs
ss
and
cmpsl
adc
outsl
mov
cmc
adc
jbe
loop
int
sbb
lods
ret
pusha
popf
stc
mov
shlb
push
adc
pop
cmpsl
popa
pop
pop
fdiv
xor
iret
cmpsb
lea
mov
pop
les
sbb
pop
jg
lock
fistpll
mov
push
cmpsl
sbb
cmovbe
dec
mov
inc
xor
loope
mov
jno
aas
pushf
push
icebp
pop
pop
aam
lods
pop
push
jns
jle
imul
stc
and
lock
sarl
ja
and
mov
inc
aam
in
lret
cld
lret
mov
inc
mov
pop
sbb
dec
sbb
cmp
bound
push
fnsave
push
orb
aas
in
pushf
cmpsl
sbb
xor
cmp
dec
dec
mov
push
add
xor
test
and
dec
and
cwtl
dec
movb
jle
add
push
out
mov
pop
jmp
jmp
jle
mov
sub
xor
clc
add
fwait
ret
sti
cmp
testl
sbb
ret
iret
repz
jnp
je
clc
stos
scas
adc
sti
out
mov
and
sbb
or
arpl
loope
sbb
insl
jl
mov
mov
lock
sbb
mov
adc
dec
in
dec
gs
mov
loopne
js
mov
cmp
mov
jge
sub
mul
and
imul
pop
shrb
jecxz
push
xchg
xor
cmp
jmp
jae
test
push
lds
or
pop
movsb
mov
out
rorl
push
push
popa
ljmp
cmpsb
xor
imul
push
pop
xor
mov
lahf
jns
or
int
inc
rorb
loop
mov
push
imul
push
mov
test
or
push
dec
xor
push
jo
ds
xlat
push
dec
jo
cld
repz
mov
lods
cmpsb
fcoml
mov
cmpsb
mov
inc
bnd
arpl
mov
cmpb
push
mov
in
and
call
rolb
stos
out
mov
dec
lret
dec
or
sbb
jle
dec
in
jle
sub
outsl
test
push
jl
or
jns
push
jno
jno
add
ficomps
xlat
lods
lea
adc
out
mov
pop
addr16
jmp
test
mov
loop
int
mov
sti
push
xor
sub
pop
cmp
insl
adc
roll
mov
sbb
adc
outsb
xchg
inc
sub
or
ss
pop
inc
mov
dec
mov
ds
cmp
inc
dec
adc
in
cmp
or
ljmp
mov
adc
and
adc
hlt
sbb
fwait
jge
clc
mov
mov
inc
inc
or
ja
sbb
cmpsb
test
gs
test
jmp
and
dec
xchg
imul
and
cmp
push
outsl
sar
mov
pop
xchg
loope
xchg
adc
jl
in
pop
add
xor
jmp
cs
xor
xchg
repnz
mov
mov
or
scas
sbb
shlb
dec
inc
dec
idiv
sub
mov
pop
fcomi
js
xchg
fs
mov
dec
or
mov
rorb
or
push
addr16
fisubrs
inc
mov
jp
dec
gs
mov
psrld
inc
push
nop
jmp
int3
out
mov
fwait
mov
pusha
in
and
xor
cmc
cmc
cli
inc
adc
jp
lods
fnstenv
scas
fsts
or
pushf
sahf
into
test
ja
and
mov
das
rcll
cmp
push
cmp
movsl
les
xchg
jl
mov
add
jmp
xor
dec
pop
dec
sub
pop
rcrb
pop
js
pop
jb
xchg
shll
mov
daa
clc
imul
pop
push
dec
les
fldt
xor
fnsave
mov
inc
fwait
popfw
sbb
ret
nop
les
xchg
jmp
fwait
es
mov
and
or
mov
mov
cmpsl
add
xor
inc
pop
or
fildl
fcompl
xchg
mov
mov
bound
push
popf
cmpsl
sub
mov
cmc
inc
jb
jge
ja
lock
sar
movsb
cmp
lea
mov
rcrb
jae
fldl
sbb
jmp
push
ja
pop
jmp
in
mov
out
es
jb
sarb
xchg
repnz
push
fwait
cmp
xchg
insl
popa
mov
sbb
add
cltd
dec
jp
inc
cmpsl
mov
std
out
movsb
popa
and
sbb
xor
or
cmp
shlb
out
jb
subl
mov
jae
xor
and
fsubp
jns
cmpsb
pop
je
mov
nop/reserved
aas
out
fs
popa
cmp
in
cmp
xchg
test
mov
or
mov
hlt
call
push
xchg
jge
mov
jae,pt
mov
jg
scas
popa
add
pop
inc
movsb
pushf
rclb
or
mov
add
lock
and
andb
push
orb
es
dec
in
notb
pop
lgs
pushf
es
adc
sbb
xor
push
push
add
mov
sub
cli
mov
in
dec
jmp
mov
lods
xor
cwtl
sbb
fistps
jp
int3
jo
mov
cs
dec
push
push
sub
adc
xor
ficoms
sub
and
cmpsb
cmc
mov
pusha
mov
pop
or
test
or
sub
and
dec
jns
pop
sub
fildll
clc
fsubs
out
insb
out
loope
jae
or
dec
mov
mov
enter
mov
pop
mov
clc
mov
mov
loope
dec
mov
testb
and
imul
xchg
or
adc
lods
mov
add
loop
cltd
or
rcrb
out
dec
adc
sarb
cmpsb
out
push
jp
cmpsb
pop
mov
daa
cmp
clc
subl
ficomps
jb
inc
dec
dec
dec
cltd
inc
add
and
mov
mov
pop
imul
xchg
inc
cmp
iret
in
mov
punpcklwd
test
adcb
push
js
adc
sbb
dec
or
orb
mov
ss
and
mov
push
loope
pop
jo
adc
lock
ds
mov
outsl
push
sti
and
dec
dec
jl
inc
nop
adc
sub
add
pushf
roll
notl
je,pt
outsl
in
mov
lds
clc
scas
jp
xor
pop
rcrb
sub
or
add
adc
rorb
faddl
icebp
xor
insl
xor
pop
dec
xchg
jne
jp
pop
testl
aas
es
sub
bound
cld
fcom
mov
jecxz
add
in
mov
out
xor
fsubrp
ss
inc
push
in
in
or
or
mov
loopne
jo
mov
push
jb
jb
dec
push
stos
xor
test
jl
enter
inc
data16
xor
fwait
sub
gs
cmpsl
mov
mov
pop
pop
test
ss
ret
inc
loop
or
lock
sti
and
sbb
je
xor
std
jle
popw
stos
shl
mov
lea
mov
or
movb
sbb
imul
jl
lods
movsl
jno
aam
stos
repz
fwait
mov
inc
in
daa
into
jecxz
ja
outsb
and
fwait
out
push
jb
add
mov
jl
lret
push
ja
lea
enter
out
adc
mov
lret
imul
dec
mov
or
push
insb
cmp
or
xchg
cltd
mov
out
push
cmp
fiadds
stos
dec
fmuls
adc
xchg
push
mov
in
aaa
loope
ja
int3
repz
cmp
pop
push
test
push
push
mov
xchg
mov
adc
hlt
mov
out
cs
test
stos
dec
pop
push
mov
adc
jmp
das
loop
das
leave
inc
ja
pop
into
xchg
add
mov
fs
push
inc
fwait
out
push
pusha
mov
cmp
outsl
fisubrl
push
push
push
lret
inc
jge
mov
pusha
out
jbe
jae
bound
inc
push
loopne
xchg
jb
sahf
es
dec
xchg
mov
sub
test
outsl
push
leave
jmp
cmc
push
dec
std
xchg
push
pop
lods
pop
lds
lret
jno
icebp
cli
mov
repnz
xchg
push
adc
das
lret
inc
cwtl
mov
in
pop
int
aaa
jp
add
jp
nop
mov
push
jno
push
xchg
dec
adc
push
pushl
xchg
adc
ficompl
sbb
pop
mov
or
dec
in
jmp
clc
push
pop
pop
add
cmp
push
and
cmp
add
jb
movsl
clc
mov
loope
and
mov
jecxz
or
pop
or
loope
or
xor
push
or
pop
jecxz
pushf
mov
fstp
add
pop
xchg
movsl
mov
or
cmp
xchg
ljmp
out
mov
das
or
and
in
dec
je
cmpsl
jnp
xor
mov
mov
pop
xor
xor
push
jo
mov
inc
mov
xor
sbb
mov
mov
arpl
jp
cltd
imul
test
jnp
jae
daa
call
add
xchg
push
mov
sub
cld
repz
inc
lret
mov
pop
lds
or
dec
andl
jae
fs
ret
pop
adc
in
xchg
clc
and
scas
arpl
iret
xor
das
repz
mov
scas
imull
and
cmp
ja
push
lds
mov
sarb
and
pop
xor
pop
cmp
mov
std
movl
sbb
jg
pushf
nop
jnp
and
ljmp
lock
xchg
adc
jg
cmp
mov
pop
mov
inc
push
mov
and
das
pop
ret
inc
hlt
inc
add
cli
das
inc
stos
inc
lret
and
mov
fwait
adc
mov
inc
gs
dec
push
adc
xor
inc
fisttpl
loopne
in
mov
add
lea
loopne
iret
cld
ds
or
aam
aaa
xor
je
in
sbb
jecxz
insl
sub
and
mov
lret
fiaddl
shl
stos
pop
rcll
sbb
inc
adc
sub
in
ret
jo
xchg
sub
adc
pushl
pop
sub
clc
pop
stos
mov
in
js
fdivl
test
cmpsb
xchg
test
dec
cmp
repz
mov
pop
and
inc
pop
inc
loope
pop
pop
loope
rcl
stos
inc
gs
fidivrs
repnz
out
orl
mov
or
fsubr
mov
lods
jno
adc
xor
add
fnsave
out
cmpsl
dec
sbb
mov
testb
push
int
fwait
mov
mov
add
in
and
leave
adc
xor
test
dec
xchg
daa
mov
out
pop
je
jecxz
imul
addr16
adc
xlat
cmpsl
sub
jbe
pop
xor
jecxz
adc
cltd
mov
testl
mov
aaa
or
sub
das
in
repz
xchg
inc
or
mov
and
rcl
int3
andb
ss
push
addr16
xorl
push
push
add
insl
cmp
filds
inc
int
rep
mov
test
pop
xchg
loop
je
pop
add
outsb
orb
std
push
add
cli
pop
cmp
ds
add
push
shl
mov
xor
fimuls
es
pop
movsl
sub
repz
pop
mov
fisttpll
sbb
ret
xor
dec
xor
jl
lods
ror
in
aaa
int3
aam
aaa
test
and
cmpsl
cmpsl
mov
roll
ss
jo
push
std
xchg
xor
xchg
out
test
cmp
pop
push
push
enter
cmp
test
or
sbb
xor
outsb
fwait
ret
cmp
inc
adc
add
cltd
push
cmpsb
test
xchg
in
jnp
adc
and
ljmp
push
mov
jb
dec
sti
mov
std
lcall
sbb
xchg
push
cmp
jns
dec
into
insl
xor
or
jbe
push
nopl
jnp
call
scas
adcl
push
fdivr
jbe
sub
push
push
roll
pop
xchg
cwtl
mov
push
sub
or
fiadds
mov
pop
xchg
data16
inc
pushf
xor
sub
into
cmp
loopne
jg
sub
push
inc
insb
xchg
ljmp
outsb
sub
jecxz
dec
stos
adc
mov
cmpsl
ljmp
daa
repnz
pushf
xchg
mov
mov
dec
xchg
pop
pusha
sbb
mov
out
dec
mov
icebp
popf
jnp
roll
adc
ret
xor
or
lret
call
ljmp
or
and
repnz
add
jne
in
push
scas
in
ficompl
push
push
aad
mov
jns
pop
mov
jl
mov
push
inc
mov
out
fwait
cs
jmp
push
pop
movsb
mov
icebp
idivb
mov
mov
jo
mov
je
inc
scas
sbb
mov
pop
mov
aaa
sahf
lahf
or
cmpsb
fcomi
xor
dec
lahf
mov
data16
lret
ficoms
arpl
lahf
xorb
lods
jecxz
mov
rclb
mov
dec
fsubp
out
dec
sbb
sbb
or
or
xor
mov
push
adc
test
mov
cmp
vpsrld
pop
loop
and
pop
xchg
jp
fwait
sbb
outsl
icebp
sbb
leave
cmp
iret
cmp
addr16
jns
ret
stos
fcoml
shlb
rclb
cmp
fnstsw
xor
inc
xlat
mov
bound
push
aam
push
sbb
jno
inc
lock
scas
add
jae
mov
loope
add
sarl
mov
push
xchg
and
cmp
dec
and
jns
pop
and
into
sbb
in
push
fiadds
adc
push
adc
int
xchg
lock
out
pop
sub
addr16
movd
ss
lea
ds
lods
jecxz
xchg
sbb
neg
stos
cwtl
xchg
mov
inc
lods
out
and
nop
mov
xchg
in
scas
xchg
lds
jbe
sub
sbb
mov
sbb
mov
fs
xchg
pop
out
xor
mov
or
inc
sub
mov
mov
fs
cmp
jns
jo
scas
mov
or
inc
clc
or
and
dec
lock
aas
add
cmp
pop
jmp
xchg
leave
in
inc
mov
int3
lret
stc
dec
jmp
xor
dec
pop
cmp
sti
add
pop
aaa
mov
pop
repz
rcl
int
jae
lock
ret
xchg
adc
sub
dec
inc
in
in
mov
lods
xchg
fs
out
movsb
xchg
sbb
movsl
sbb
jl
add
bound
pop
stos
enter
in
cs
in
dec
andl
les
cmp
adc
sti
call
std
and
rorb
and
push
lcall
je
aam
xchg
add
scas
stc
xor
pop
les
dec
pop
and
ds
add
fwait
insl
cmp
mov
daa
test
mov
out
add
mov
imull
pop
push
and
comiss
push
jne
xor
insb
lea
mov
add
es
mov
xorb
cmpsl
test
xor
or
adc
sub
jbe
mov
nop
fcomps
add
fidivrs
push
test
cltd
dec
inc
dec
and
sti
pop
xchg
and
or
xchg
stos
pop
mov
mov
push
lods
sahf
ja
mov
mov
dec
lahf
mov
js
ljmp
inc
sbb
in
unpckhps
in
adcl
aas
pop
cld
outsl
lret
int
and
into
push
cs
mov
outsb
jecxz
inc
icebp
pushf
and
sub
rcrl
sub
enter
cmpsl
push
cmp
cmpsl
sbb
xlat
jae
mov
adc
mov
aas
sub
daa
int
mov
ret
xor
or
sub
iret
addb
xchg
add
cmpsb
fldl2e
cmp
loopne
pop
jb
mov
and
cmp
sti
mov
mov
clc
or
cmpsl
or
or
jmp
or
mov
pop
or
stos
addr16
lods
mull
jnp
out
in
lahf
dec
sbb
insb
jb
pop
imul
or
stc
xor
repnz
add
fnstcw
inc
jbe
adcb
out
outsb
jg
outsb
add
aad
mov
pop
ficoml
add
adc
mov
nop
fs
or
mov
inc
adc
test
xor
rclb
imul
jae
test
aaa
jne
and
es
mov
jne
out
adc
xchg
xchg
pop
or
xchg
pop
int3
data16
in
test
lahf
inc
cwtl
aam
inc
cli
jb
xlat
adc
add
xor
and
rolb
ret
daa
loop
xchg
inc
xorb
mov
mov
cmpsl
xlat
adc
add
xor
and
rolb
ret
daa
loop
xchg
inc
xorb
mov
mov
cmpsl
xlat
adc
add
xor
and
rolb
ret
daa
loop
xchg
inc
xorb
mov
mov
cmpsl
xlat
adc
add
xor
and
rolb
push
and
iret
jge
dec
cwtl
pop
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
addr16
sub
sbb
push
pop
jge
and
test
lods
fwait
std
jmp
int
sub
sub
sbb
insl
jns
dec
dec
pop
mov
lods
mov
std
mov
sub
leave
int
and
xor
add
jo
popa
inc
push
pop
inc
mov
cld
stc
cltd
shrb
movsb
sub
xchg
jne
xchg
mov
inc
and
push
lea
mov
adc
aad
ret
je
js
sbbl
shll
push
bound
mov
xchg
mov
sub
jge
aas
insb
jns
cmp
push
jns
xor
test
ja
or
in
jns
cmp
or
mov
mov
lds
imul
push
popf
inc
and
fstl
rcr
inc
idivb
sub
sbb
mov
push
mov
push
sub
frstor
sub
rol
push
out
mov
test
lods
bound
mov
sub
add
ja
pop
push
push
inc
movsb
mov
mov
in
cmc
out
aam
dec
dec
dec
cmp
imul
pop
and
lods
shr
jecxz
xchg
test
mov
push
sub
sbb
sbb
dec
xor
lods
fcomp
std
clc
ficompl
movsl
int
push
push
or
jns
dec
dec
pop
mov
mov
stc
int
cmp
or
jns
dec
dec
pop
mov
mov
stc
int
cmp
sub
push
push
inc
sbb
cmc
adc
shlb
mov
rcl
in
or
dec
jle
outsb
lods
roll
cmp
int
or
xor
adc
or
sub
fcomi
mov
or
sbb
xor
iret
aad
gs
pop
je,pt
add
rcrl
fcomps
fwait
hlt
inc
fdivl
mov
jnp
out
shll
outsb
or
js
lret
fs
xor
loopne
es
cmpsl
xchg
push
aad
test
pop
lret
pushf
xor
orl
arpl
dec
adc
pop
push
mov
or
andb
add
das
fldcw
sbb
je
cmpsl
inc
cmp
jo
mov
in
jnp
xchg
sub
push
xor
faddl
and
mov
ljmp
and
and
xchg
aad
cmpb
lds
sub
loopne
imul
mov
icebp
les
stc
inc
jo
ret
fisubl
je
mov
in
and
inc
xlat
inc
mov
int
data16
mov
mov
mov
cmp
lahf
jno
inc
bound
mov
push
or
fwait
dec
lahf
mov
inc
or
sbb
int3
fwait
test
mov
fidivl
mov
subb
xor
int3
cltd
xor
jns
jns
dec
xor
inc
push
cmp
shr
adc
ja
jnp
rcrb
fdivrl
inc
push
jg
bound
mov
iret
imul
dec
setl
es
mov
add
pop
ss
ret
dec
mov
inc
push
and
jnp
test
test
mov
dec
addb
rcl
pushf
ja
or
fcoms
shrb
es
jecxz
and
or
jnp
sti
jecxz
test
push
fwait
sti
ss
shrl
dec
cmp
mov
nop
shl
in
sub
sbb
aaa
decb
jbe
inc
sub
divl
push
mov
stos
cltd
mov
mov
push
and
pop
fstpt
xor
mov
ficompl
gs
std
lock
add
je
jmp
fmuls
jge
insb
ss
cs
ds
inc
mov
movsb
adc
sar
mov
xchg
test
dec
and
xor
push
inc
aad
jge
popf
pop
lock
push
stos
stc
out
out
loopne
sti
nop
imul
mov
push
sub
stos
subl
les
push
push
jmp
sbb
scas
in
add
inc
nop
ja
push
sbb
xchg
cs
or
jno
jbe
mov
xor
jge
xor
pop
lahf
jns
cmp
daa
dec
sbb
loop
push
imul
ds
lahf
cmp
out
and
xchg
movsl
xchg
cltd
jo
dec
cmpsb
clc
cmp
mov
pop
pop
sbb
adcl
lock
dec
lahf
mul
mov
pop
jg
pushf
fwait
in
fisttpl
out
popa
sub
jge
cmpsb
pusha
mov
adc
or
inc
sub
mov
outsl
cmpsl
sbb
movsl
popf
mov
stos
cmpsb
call
andb
and
sbb
fldl2e
dec
aas
std
insb
iret
pushf
pushf
std
nop
xor
std
sub
lret
xchg
in
inc
push
loop
inc
pop
pop
stos
stos
jl
pop
fdivrs
jle
mov
enter
xor
adc
sub
push
jp
adc
fcoml
mov
add
cwtl
mov
or
pop
lahf
loopw
rorl
jg
pop
pop
sbb
dec
add
mov
int
test
push
sbb
mov
adc
int
cmpsl
jo
bound
mov
sub
lss
sbb
mov
ja
bound
sub
addr16
xor
dec
sarb
inc
test
lock
cmp
ljmp
ret
std
jne
js
jge
mov
fs
fidivs
cltd
imul
arpl
sbb
adc
sub
sub
sub
sbb
push
pop
cs
xor
mov
cli
mov
xchg
out
cmpsb
test
cmpsl
lock
pop
fiadds
imul
push
sbb
aad
pop
mov
sbb
mov
aad
add
pop
ret
hlt
xchg
ret
sub
sub
and
bound
push
imul
lods
jnp
insb
dec
mov
adc
nop
mov
mov
rorl
jg
ja
bound
setb
popf
push
shrb
je
add
pop
xor
lods
push
cwtl
cmp
enter
dec
cwtl
inc
jecxz
push
jmp
adc
loopne
cmp
xor
hlt
jg
in
lahf
pop
in
rcr
push
icebp
lcall
pushf
daa
mov
mov
push
mov
test
adc
sbb
or
cld
ret
ljmp
dec
es
stc
mov
and
sbbb
and
repnz
in
xchg
jns
push
cwtl
std
jp
je
cs
mov
stos
xchg
fiadds
shrb
loop
arpl
push
pop
lret
in
mov
aas
inc
mov
mov
in
les
push
pop
pop
jle
mov
pop
popf
jle
outsl
and
scas
in
fidivrl
add
jbe
imul
adc
mov
push
dec
enter
mov
add
popl
sbb
cwtl
out
mov
inc
jae
aam
cmp
inc
lret
outsl
sbb
popf
aaa
test
xor
xchg
sahf
subb
mov
js
ljmp
push
push
pop
jg
imul
jb
or
iret
pop
fsubrp
data16
and
add
push
jns
test
pop
lods
mov
pop
or
mov
add
das
fwait
int
jecxz
call
lods
or
push
outsl
pop
repz
je
roll
nop
adc
dec
adc
inc
sbb
or
mov
fisttpl
gs
lods
push
ss
ret
fwait
push
inc
pop
es
test
mov
xor
jbe
or
xor
hlt
lcall
test
mov
addr16
jnp
jle
push
imul
fistl
lret
jno
sbb
jl
scas
sub
inc
push
imul
shll
xchg
xor
mov
das
add
xor
lahf
jae
pop
icebp
ret
es
or
scas
dec
pop
push
jne
xor
xlat
in
js
sbb
stos
xor
push
cmp
mov
mov
mov
in
loope
sub
add
repnz
scas
loopne
push
and
xchg
push
xchg
shlb
push
xchg
xor
shll
cmpsl
mov
jmp
hlt
frstor
dec
lock
int
mov
pushaw
aas
mov
add
inc
mov
jo
adc
sub
insl
jge
jns
adc
fistps
pop
imul
inc
dec
in
inc
test
sub
or
pop
dec
dec
pushf
mov
and
xchg
or
xor
sti
in
inc
lds
mov
cmp
or
call
jne
mov
mov
mov
fisubs
test
loopne
sub
xchg
das
jbe
xchg
sbb
or
incl
fs
mov
pop
pop
or
ja
xor
mov
pop
mov
loopne
pop
cmp
into
and
loope
jb
and
sub
adc
pop
xchg
jge
sti
imul
sub
inc
cmp
stc
push
dec
addr16
es
stos
mov
mov
push
push
cmp
sti
jg
mov
mov
nop
xor
cmp
sbb
xchg
jbe
push
xchg
loop
jle
test
loopne
lahf
push
push
sbb
jp
jnp
add
sbb
outsb
addr16
xlat
aad
mov
aad
not
ret
mov
xchg
push
mov
in
adc
mulb
adc
sbb
pop
incl
das
xchg
xchg
inc
sub
inc
aaa
adc
movsl
sub
ret
testb
cmpsl
cmp
andb
dec
push
mov
mulb
insl
mov
cmpsb
decl
lea
sub
js
popf
outsb
push
adcb
xor
push
push
sbb
pop
repz
pop
xor
dec
push
sub
mov
mov
bound
addr16
out
imul
in
insl
gs
jle
sbb
scas
insb
sbb
xchg
fists
jle
sub
jl
pop
je
gs
aaa
add
push
fistpl
mov
or
test
or
test
fwait
lcall
cmp
cwtl
mov
pop
cld
push
sub
lods
fwait
lods
push
sbb
pop
add
dec
push
addr16
mov
mov
or
jns
std
stos
mov
add
add
pop
mov
mov
js
dec
mov
jmp
lret
subb
pop
pop
idiv
push
jb
sub
movsb
into
xor
and
xchg
xchg
xor
mov
mov
jecxz
in
push
inc
jbe
inc
cmp
xchg
movsl
push
dec
pop
dec
sub
sub
test
push
faddl
dec
xchg
mov
jb
popa
cmpsb
pop
inc
xor
inc
repnz
lcall
addl
inc
add
add
nop
pop
inc
cmp
mov
shlb
mov
dec
leave
mov
jecxz
jne
and
ds
push
mov
in
std
lds
aaa
cmp
xchg
cs
xorb
into
inc
mov
in
lock
or
pop
add
shrl
pop
sbb
jno
and
js
xchg
and
xor
aam
in
xor
movl
xchg
aas
cmp
cmp
xchg
mov
insb
push
lds
pop
mov
mov
aaa
out
xchg
xchg
shrb
dec
mov
dec
adc
xchg
ret
adc
jo
mov
out
add
test
cld
mov
or
sarl
mov
ficompl
fsubrl
push
repz
nop
add
dec
lea
pushf
mov
mov
cmp
pusha
popf
ficoms
mov
psraw
pop
or
leave
pop
adc
adc
mov
imul
sbb
in
cmpsl
fs
sbb
cmpl
iret
push
xor
jne
in
es
lock
mov
icebp
test
cmpl
push
mov
pop
hlt
or
pop
lea
cmpsb
dec
mov
xchg
and
xor
adc
jg
leave
jge
cmc
dec
jmp
cmpsb
xchg
hlt
inc
push
xchg
iret
cmp
repnz
imul
xor
popa
cmp
rol
shll
aad
add
rorl
or
and
in
dec
clc
add
jle
mov
test
shr
out
lret
ret
pop
sbb
pop
push
rcrb
in
daa
sbb
mov
fistpll
pop
cmp
stc
mov
push
cmp
insb
data16
xor
lea
dec
in
cmp
out
daa
pop
cmp
or
mov
and
jmp
push
stos
push
mov
add
fwait
mov
inc
inc
mov
insb
jle
pop
mov
cmc
je
stos
inc
outsb
enter
ret
inc
out
or
jg
or
std
cmp
lahf
mov
push
out
call
jl
in
jge
add
push
push
push
scas
adc
pop
cmp
lods
or
mov
adc
das
popf
dec
lods
dec
sbb
cmp
ret
xchg
test
adc
adc
std
pminsw
mov
jne
int3
sahf
int
jno
push
push
sarb
mov
dec
inc
int
cmpsl
cwtl
aam
cld
rcl
xor
mov
cs
push
fcmovne
cmp
mov
cmc
sub
or
pop
icebp
jecxz
push
fimull
test
cmpsl
ret
cltd
stc
nop
test
adc
jno
hlt
stos
adc
mov
out
inc
mov
lcall
aaa
sbb
test
mov
fistpll
outsl
xchg
dec
out
pop
jnp
pop
xor
sbb
mov
cmp
mov
push
pop
shll
mov
pusha
leave
sar
hlt
dec
push
mov
mov
jmp
push
sub
lret
aaa
rcrl
ficompl
scas
mov
xchg
mov
loopne
cs
pop
pop
out
dec
lret
hlt
sbb
pop
cld
xor
mov
test
pop
mov
pop
in
pop
shlb
ret
xor
inc
jnp
fcomps
jb
or
dec
dec
shlb
ja
pop
push
cmp
cltd
pop
rcrl
jp
das
jecxz
sbb
out
mov
mov
dec
cmp
jae
push
call
sbb
sbb
ret
test
mov
and
push
or
and
inc
mov
ljmp
out
inc
cmp
pop
lods
or
das
arpl
xlat
out
cmp
leave
pop
sbb
mov
add
mov
daa
enter
mov
pop
clc
mov
jnp
movsb
mov
lods
mov
nop
fst
fstpt
addr16
fildl
les
sub
push
rcrl
cwtl
sub
aas
hlt
repnz
sti
jp
std
xchg
rcrl
push
aaa
fildll
pop
push
shl
mov
cmp
aam
leave
shr
mov
inc
jne
inc
fsts
push
data16
andb
movsb
pop
das
cld
fsts
test
ljmp
outsl
fstps
or
hlt
mov
mov
jl
sbb
jge
jb
pusha
mov
fcompl
pop
adc
add
cmpsb
or
and
aas
nop
enterw
pop
lcall
jle
inc
cmp
mov
adcl
into
jg
inc
iret
cltd
sub
mov
and
xor
scas
sti
and
mov
inc
loop
hlt
adc
sbb
lcall
test
icebp
and
scas
xor
dec
cltd
icebp
pop
sbb
pop
es
inc
cmp
cltd
push
mov
jno
inc
cmp
push
and
hlt
xchg
push
pop
dec
das
cmpsl
insb
out
mov
ja
jmp
call
insl
push
push
cli
inc
sub
mov
and
add
leave
aam
test
mov
rol
dec
shlb
adc
adcl
mov
rcrb
push
icebp
stos
push
loop
into
test
shlb
mov
add
push
lods
enter
jge
loop
sub
cld
xor
in
push
xor
sub
xrelease
cmp
push
repnz
jne
mov
insb
xchg
sbb
in
push
xor
push
fwait
ljmp
push
xchg
jne
pop
mov
xchg
movsl
mov
subb
insl
mov
outsl
mov
stos
cmp
test
stos
pushf
call
or
inc
into
scas
stc
sahf
inc
lret
xchg
push
leave
scas
das
and
in
sub
mov
in
add
push
cmp
sti
sahf
js
lock
stos
add
push
scas
leave
sbb
iret
loop
sarb
xor
inc
pop
jb
shlb
cmpsb
mov
aas
adc
out
mov
mul
push
lcall
mov
lds
xchg
push
jnp
or
cli
sbb
push
imul
in
fsubrs
push
nop
jb
insl
repnz
cmp
in
test
sbbl
sub
xchg
mov
sub
daa
jo
aam
les
dec
mov
lods
mov
in
add
psubw
testl
sub
sbb
and
jnp
lcall
inc
enter
lahf
aam
inc
hlt
fsubrl
sbb
je
xor
adc
push
cli
push
mov
inc
mov
inc
pop
outsl
adc
idivb
pop
jmp
in
and
dec
dec
mov
push
mov
into
bound
jns
push
aad
jbe
es
push
test
dec
nop
adc
xor
cltd
gs
push
insb
xchg
es
fs
ret
cmp
mov
inc
push
into
imul
mov
int
inc
push
or
jb
scas
aad
out
aam
adc
loop
hlt
push
repz
iret
int
sub
aas
jae
or
xchg
sbb
mov
aaa
loop
and
icebp
ds
ds
int
push
pop
xlat
xchg
jns
fucomip
xchg
cmpsl
call
xorl
fidivl
imul
or
lret
inc
call
xor
xor
aad
mov
sbb
xor
fsts
push
in
and
jecxz
and
fnstsw
iret
push
and
iret
sbbl
gs
aaa
in
pop
sub
test
mov
data16
jb
or
xchg
or
xor
fdivp
dec
leave
das
sar
adc
or
jne
in
cmpsl
mov
xchg
mov
inc
xor
jns
sub
jecxz
int
add
mov
lcall
xchg
aad
pop
fwait
shll
iret
iret
divps
mov
adc
sahf
std
fdivs
sbbl
lea
lods
pop
inc
xor
jne
or
pop
jb
push
pop
ja
jo
in
ss
test
mov
call
dec
or
mov
dec
int
jle
daa
pop
stos
adc
sub
shrb
lcall
jb
or
push
mov
mov
lds
mov
push
lcall
mov
fnstsw
push
sub
shr
push
les
movsb
inc
loop
repnz
popa
or
jl
popf
and
lret
cmp
bound
cmp
xor
push
and
loopne
stos
cmpsb
sub
add
xchg
pushf
popf
insl
jp
xchg
imul
jp
xlat
jle
pop
je
push
inc
bound
mov
adc
ret
pop
loope
popf
sbb
into
or
outsb
std
mov
cli
mov
subl
js
out
lods
mov
mov
push
shl
xchg
cmc
lret
adc
fstpl
xor
popa
ljmp
fdivl
jge
push
xchg
pop
inc
rorb
inc
add
test
and
and
movsl
test
mov
js
mov
sarl
insb
xchg
enter
mov
mov
pop
lret
mov
hlt
or
adc
xchg
inc
mov
xchg
and
aad
jne
cltd
ljmp
adc
adc
add
stos
fildl
inc
pop
test
in
ror
lods
mov
mov
addr16
xchg
or
xor
cmpsb
stos
ljmp
addr16
loopne
shlb
jp
push
std
xchg
out
stos
cli
subb
cmpsb
scas
xchg
adcb
daa
push
je
inc
aad
xor
adc
push
adc
mov
mov
or
pop
mov
sub
pop
repz
pusha
stos
xchg
lds
mov
shll
and
mov
sarb
scas
arpl
pop
divl
sub
adc
fcmove
mov
adc
cmp
inc
dec
insb
xor
mov
testb
fmul
in
xchg
pusha
cmpsb
add
in
dec
je
fsubp
mov
shl
cwtl
fnstsw
push
jge
jb
sub
xchg
add
js
jle
mov
in
mov
in
mov
out
loope
pop
mov
sti
push
pop
add
mov
and
push
fstpl
xchg
mov
aad
lock
repz
xor
sub
xchg
fucomip
sub
jge
dec
pushf
pushf
jb
mov
pop
push
xchg
xor
fcomps
adc
push
out
inc
or
sub
mov
ret
loope
shrl
mov
mov
mov
mov
mov
out
shl
in
sbb
adc
cs
mov
dec
out
inc
adc
add
ret
mulb
mov
js
daa
pushf
push
shll
jp
ret
repz
or
jns
inc
adc
add
sbb
fld
lcall
dec
push
add
shrl
jmp
push
xor
rolb
ds
hlt
rcll
add
add
iret
clc
cld
sbb
scas
bound
in
xchg
repz
sahf
pop
cmp
pusha
adc
vpunpckhdq
or
jb
jb
jo
insl
sub
insb
arpl
cmp
loope
cli
mov
mov
pop
pushl
pop
dec
into
mov
cmp
sub
loope
fs
fcomps
pop
xchg
lock
mov
mov
pop
in
xor
imul
cwtl
mov
mov
je
push
pop
in
mov
ret
mov
notrack
sub
add
jo
push
mov
and
sub
push
inc
pavgw
in
popf
nop
inc
xorb
mov
clc
sbb
cmpsl
add
fsubrs
inc
cmpsb
xor
cmp
sbb
js
push
sbb
mov
or
jns
dec
dec
pop
mov
mov
stc
int
cmp
or
jns
dec
dec
pop
mov
mov
stc
int
cmp
or
jns
dec
dec
pop
mov
mov
stc
cld
sub
cmp
or
jns
dec
int
inc
test
out
mov
push
and
xor
test
xchg
rep
ret
mov
int3
mov
clc
xchg
push
fstl
jns
inc
xor
xor
jne
test
xchg
rep
ret
mov
lds
cmc
testb
xor
xor
jne
test
xchg
rep
ret
mov
lds
cmc
xchg
add
es
cmp
es
icebp
scas
hlt
andl
sbbb
xchg
int
ds
das
sbb
sbb
stos
fiadds
cld
xor
imul
dec
pop
lds
sbb
mov
mov
push
push
jp
pushl
iret
adc
adc
out
pop
jge
pop
stos
push
mov
inc
mov
inc
mov
test
out
mov
lods
mov
cmc
jae
lahf
cwtl
mov
test
adc
jbe
adc
and
or
cmp
fidivrs
sub
pop
sbb
jle
add
sbb
push
adc
imul
mov
dec
fucomi
in
pop
cmp
in
inc
arpl
aad
pop
lods
mov
add
inc
jecxz
rep
ret
mov
lds
cmc
xchg
add
inc
xor
xor
jne
loopne
testb
in
mov
jno
jne
jo
push
adc
ret
push
adc
add
jbe
loope
mov
mov
loopne
mulb
push
jb
pop
and
add
popw
inc
loop
xchg
mov
adcb
xchg
add
inc
xor
xor
jne
test
xchg
rep
ret
mov
lds
cmc
xchg
add
inc
xor
xor
jne
test
hlt
fstpt
lods
lret
push
daa
xor
jae
insl
sbb
pop
test
pop
pop
mov
js
fnstenv
sbbb
or
fucomi
mov
mov
sahf
sub
mov
and
outsb
in
repz
mov
arpl
fdivp
decl
push
inc
sbb
pop
dec
and
pop
and
adc
pop
ds
pop
xchg
sarb
lret
mov
lea
fwait
and
xchg
dec
orl
lret
mov
test
sbb
xchg
ficoms
jmp
fsubrs
fidivl
push
ja
mov
push
out
xor
lret
in
sub
mov
xchg
push
xchg
dec
mov
cli
push
xor
mov
sbb
sbb
lock
mov
daa
cmp
mov
iret
repz
sub
sarl
cli
mov
pop
sbb
jl
mov
in
adc
cmp
movsl
into
mov
mov
jecxz
outsl
pushl
imul
cmp
inc
fiadds
lds
xchg
pop
aas
fs
sti
loopne
xor
mov
dec
push
sahf
push
ss
xor
mov
sbb
mov
jle
shrl
mov
xchg
call
vmwrite
mov
mov
push
ljmp
mulb
or
xor
in
js
rorl
mov
xor
and
aad
data16
das
sub
in
push
shlb
xchg
call
jg
mov
pop
and
jb
icebp
pop
mov
inc
int
fldenv
jg
out
fbstp
add
add
jmp
test
and
ljmp
repnz
xor
insb
push
sub
cmp
adc
sub
jl
mov
push
in
pop
jmp
xor
jl
stos
mov
pop
sbb
insl
in
popf
jbe
xor
or
sbb
sub
insb
jns
cltd
dec
pushf
lret
xchg
jecxz
push
out
inc
sub
or
es
inc
add
fsubs
fwait
xor
adcl
enter
push
or
xor
ret
test
out
and
lea
es
mov
popf
rorb
fs
data16
ljmp
insb
push
mov
push
push
add
push
and
sub
adc
jg
leave
loope
push
movsl
xor
nop
pop
or
xor
or
xor
pop
lds
inc
jmp
or
inc
daa
mov
fstpl
xlat
stos
daa
int
rcll
scas
cmp
sub
out
pop
pusha
cmp
out
cli
mov
push
pusha
out
jns
repnz
pop
js
cltd
push
dec
or
dec
xlat
ret
mov
loopne
xor
repz
and
inc
ljmp
sub
out
adc
jmp
inc
add
mov
sbb
enter
xchg
or
rclb
mov
pop
idivl
test
je
push
mov
push
cld
inc
jbe
mov
jge
push
shrl
dec
push
push
xlat
dec
pop
dec
pop
jp
dec
dec
jbe
dec
xchg
loope
insl
lret
lods
bound
std
push
das
push
nop
int3
cltd
clc
adc
in
iret
in
pop
loopne
popf
inc
push
push
xor
lcall
jns
sbb
adc
jae
jge
cmpsl
test
sub
xchg
lods
add
push
test
jp
mov
pop
push
outsb
xchg
xchg
cmp
sub
int3
ret
sbb
jmp
sbb
xchg
mov
sbb
xchg
scas
hlt
scas
clc
mov
and
cmpsb
and
nop
push
pop
xor
sti
adc
or
xchg
add
sbb
xlat
addr16
daa
in
sub
clc
xchg
gs
ret
sub
into
add
orb
mov
in
inc
lret
push
sub
sub
pop
jae
fwait
dec
es
adc
jns
mov
cmp
scas
adc
repnz
mov
ds
and
mov
hlt
pop
insb
adc
icebp
lea
ja
cmpsb
push
sbb
shr
xlat
push
dec
xor
fdivs
pop
ja
iret
xchg
mov
adc
and
movsb
lahf
xor
push
decb
repnz
xor
hlt
cwtl
das
cmp
mov
out
scas
push
aad
push
int
hlt
or
sub
movsb
xchg
testl
mov
add
lret
push
loop
fwait
dec
test
adc
aam
sbb
sbb
dec
xor
test
outsl
xlat
lret
faddl
push
or
xchg
je
sbb
push
popl
or
sub
xchg
loop
mov
repnz
lea
and
sbbb
push
les
in
repz
repnz
mov
cmpsl
push
xchg
ss
push
scas
test
imul
mov
stc
ret
push
push
mov
push
jno
dec
mov
nop
mov
clc
ret
call
icebp
insl
mov
int
aas
js
inc
test
xchg
lds
into
lret
xorb
stos
inc
jnp
jne
lds
pop
sub
repz
inc
les
mov
sbb
sub
cmpsb
nop
push
stos
stos
lret
xchg
arpl
shrl
add
push
sbb
pop
xchg
test
mov
mov
psrld
sbb
xchg
sub
lods
pop
fnstenv
inc
sub
stc
push
fisubrs
daa
jmp
jnp
xchg
stos
or
fnstenv
sub
scas
pop
cmpl
divl
arpl
scas
dec
rclb
loope
jnp
jnp
int
jo
jecxz
mov
rorl
cmpsl
mov
outsl
and
or
fwait
push
jno
fsubl
push
inc
mov
pop
out
je
or
cwtl
adc
and
mov
test
xchg
push
out
movsl
jns
push
fs
and
mov
xor
ss
addr16
icebp
sbb
cli
mov
sbb
dec
mov
inc
scas
fstps
fidivrl
pop
cmp
imull
and
add
cli
jge
loopne
xor
mov
cmp
daa
cmp
push
sub
enter
or
test
push
add
fbstp
sti
movsb
andl
sahf
in
cmpsb
mov
icebp
and
adc
xor
dec
xchg
into
sbb
imul
xor
mov
loope
xchg
and
int
push
outsb
mov
test
aaa
popa
rcl
push
out
dec
dec
daa
stc
pop
lods
cwtl
or
mov
lahf
jl
jg
add
or
sub
add
je
in
pusha
je
xchg
ljmp
push
mov
int
hlt
sarl
cmp
sub
je
stc
and
lea
push
pop
sbb
xchg
pavgw
das
pop
fcos
pop
xor
push
imul
push
push
jmp
in
xchg
mov
in
les
and
mov
adcb
loopw
leave
in
push
jne
mov
or
pop
inc
es
pop
insl
int
imul
mov
dec
hlt
inc
scas
sbb
popa
inc
sub
and
or
movsl
mov
int
pop
shll
adc
outsb
and
add
xor
scas
shlb
in
mov
shll
xor
cmc
bound
into
scas
stos
mov
or
cwtl
dec
movsb
imul
into
inc
adc
rcll
enter
int3
adc
lods
icebp
sub
and
lods
xchg
sti
mov
cmp
jo
adc
mov
mov
sbb
lahf
lds
add
sub
or
imul
data16
lock
insl
test
jne
mov
xchg
mov
push
movsb
lret
jbe,pn
bnd
dec
fwait
and
pop
lods
dec
pop
push
cmovno
aas
std
jns
mov
pop
mov
jae
cmp
dec
and
cmp
test
sbb
add
scas
mov
into
test
dec
subb
cmp
add
les
cmp
push
xor
or
adc
mov
mov
cmp
jge
jmp
repz
rcrb
es
xchg
sub
dec
es
jns
push
and
push
mov
shrb
xchg
dec
insb
inc
movsb
fnstcw
mov
push
push
xor
push
mov
test
or
fildl
jo
add
sysret
push
and
jno
and
inc
lea
and
sub
je
mov
jecxz
inc
lahf
repz
sbb
scas
jbe
jb
cmp
push
adc
repz
rcr
jb
push
xchg
xchg
xlat
sub
iret
adc
ret
and
xchg
fisttps
xchg
stos
xchg
add
xchg
inc
cmp
mov
leave
push
xor
bound
ret
xchg
dec
int
cs
out
xchg
es
addr16
fimull
jle
pop
gs
or
cli
std
push
xchg
out
cmc
loopne
cmp
out
test
jle
xlat
mov
xorb
xorb
bound
fpatan
xchg
jl
jno
xor
push
jmp
fs
fiaddl
mov
push
inc
mov
inc
mov
cmpsb
loop
cltd
das
cvtpi2ps
into
mov
mov
pop
xlat
add
xlat
xchg
add
subb
stc
push
fisubs
push
jecxz
stos
push
sbb
call
xchg
ss
shl
push
adc
sar
push
popa
clc
and
in
dec
shll
inc
push
sub
dec
dec
jg
js
out
dec
push
mov
not
or
xor
push
stos
aad
in
inc
dec
mov
cwtl
nop
repnz
cld
jl
pushf
or
dec
pop
fdivrs
mov
int3
push
jb
dec
mov
sub
mov
xor
bound
loope
mov
mov
in
out
xor
imul
xor
push
xor
lcall
ficoms
adc
jl
cmpsl
adc
andl
out
repnz
pop
aad
into
mov
pop
int
xorb
or
or
cmpsl
or
in
fld
or
iret
adc
pushf
and
jne
fidivs
shl
mov
push
into
inc
mov
outsb
push
pop
xlat
repnz
test
sbb
xor
jecxz
inc
outsl
mov
push
and
adc
adc
idivb
mov
inc
mov
sahf
scas
scas
mov
xlat
fucomi
jecxz
jp
push
fldt
dec
repz
sub
test
inc
into
fistps
or
jle
sub
fidivl
ficompl
loop
stos
out
inc
ret
mov
pop
cmp
ds
lahf
xor
aad
sub
int
add
dec
jl
ja
push
int3
xor
cmp
or
jae
mov
push
dec
adc
add
pop
pop
jecxz
cmc
xchg
jg
xchg
push
inc
mov
mov
pop
popa
dec
mov
cmp
cmp
sahf
jb
cwtl
mov
xchg
sbb
outsl
int3
outsl
pop
jmp
xchg
mov
lahf
aaa
out
popf
scas
mov
add
popa
loope
insb
push
pop
outsl
xor
popf
or
fcom
fwait
jne
addl
call
aad
stos
pop
sti
jp
fwait
xor
sti
in
inc
mov
inc
fmul
cmp
sub
hlt
in
rcll
test
or
cmp
adc
sub
mov
adc
stos
sarb
jb
or
fldt
push
ret
jecxz
mov
cmp
mov
pop
int
and
mov
lock
fsubrl
xchg
sahf
fistpl
shrl
out
add
mov
mov
test
xor
jne
xor
push
jbe
les
push
sbb
sahf
or
mov
add
shr
xlat
cmp
push
jle
in
xchg
dec
sti
movsl
jae
push
gs
mov
lock
sub
in
cmp
add
add
arpl
pop
scas
outsb
lock
shll
leave
push
mov
repnz
outsb
insl
in
sbb
pop
mov
xchg
pop
pop
sahf
xchg
inc
clc
and
push
xchg
es
mov
orb
xchg
mov
mov
outsb
push
add
pop
addb
fwait
mov
jl
mov
nop
mov
imul
add
inc
stc
mov
sbb
call
mov
sarb
subb
rorb
into
cmp
pop
sbb
xor
jl
sbb
rcrb
xchg
mov
loopne
inc
adc
in
mov
push
ret
pusha
outsb
mov
mov
cmp
and
popf
xchg
stos
push
aam
xchg
mov
daa
pop
insl
jo
pop
lock
in
scas
sarl
inc
out
push
xor
pop
push
sbb
rorb
xlat
lods
mov
cmp
sti
cmp
stos
inc
mov
add
pop
bound
mov
inc
xchg
hlt
mov
mov
cmp
mov
mov
dec
insl
sub
imul
xchg
xchg
add
and
ret
mov
mov
sub
inc
xchg
mov
dec
sub
testb
jno
mov
js
shl
loop
inc
sbb
sub
jge
cmp
push
mov
mov
jecxz
mov
addl
jg
mov
and
sbb
inc
pop
cmp
pusha
mov
int
sbb
clc
iret
inc
sub
insl
out
adc
insl
mov
jmp
popa
pop
nop
out
fsubrl
rcrl
sub
xchg
andl
adc
pop
adc
or
adc
and
jb
imul
sbb
stos
pushf
int
iret
cmp
test
dec
jbe
cmp
jae
and
adc
fwait
mov
dec
mov
push
and
push
shrb
jns
xchg
push
add
cwtl
dec
mov
in
inc
mov
ret
sbb
xchg
or
adc
cmp
add
fcoms
loope
shlb
cmpsl
shl
mov
jl
sti
inc
push
roll
in
inc
aaa
loopne
nop
or
mov
xlat
mov
cmpsb
mov
sarb
popa
add
mov
sub
jmp
stos
mov
xchg
mov
into
pop
pop
xchg
push
add
add
je
lcall
ffree
xchg
inc
jmp
lock
mov
xchg
sbb
gs
ffreep
lahf
jmp
cli
ret
sbb
add
repnz
fwait
stc
outsl
ret
pop
adc
mov
test
rcrl
mov
push
jae
or
sub
lods
mul
dec
mov
or
popf
push
mov
lahf
and
mov
xor
stos
add
cltd
test
and
adc
sub
repz
data16
adc
aam
aaa
fildll
fucom
popf
mov
movsb
es
mov
and
mov
popa
or
or
subl
movsl
inc
xchg
sub
and
xchg
jo
sub
les
out
xor
mov
mov
pop
push
add
in
or
imul
leave
dec
pop
data16
pop
mov
add
inc
fimull
fcmovne
fnsave
pop
shrb
or
stc
es
mov
add
cld
dec
mov
mov
jnp
outsl
pop
pop
mov
sub
cmp
and
cmp
call
test
rcll
bound
lret
pop
adc
sub
or
inc
mov
or
into
inc
jb
int
icebp
pop
cmp
sub
add
xor
xchg
lods
mov
jo
mov
nop
hlt
mov
or
and
ja
jmp
jmp
pop
lock
dec
pop
add
sub
leave
mov
shr
incb
insl
shl
push
lds
mov
fistl
inc
into
push
jge
jae
push
add
in
adc
mov
addb
push
adc
lahf
outsb
outsl
fsubl
cmpb
cmpsb
leave
push
pop
popa
push
inc
and
dec
push
insb
push
mov
jb
aaa
lret
jg
or
dec
xchg
xchg
inc
loope
cmpsl
or
pushf
out
xchg
stos
xchg
cmp
or
dec
pop
lods
push
xor
popa
in
ja
and
mov
push
dec
scas
xchg
fmul
add
stos
adc
jmp
scas
sti
out
fs
lock
mov
pop
addr16
push
stos
mov
or
pop
cli
mov
xchg
ss
mov
cmp
std
insb
out
popf
jbe
xchg
fsubl
shrb
xchg
sub
cwtl
fbstp
ljmp
cld
ja
xchg
xor
xchg
mov
cmp
dec
daa
aaa
ja
es
jmp
jmp
loop
dec
push
dec
xchg
push
mov
cld
je
add
inc
out
jg
push
dec
jl
push
mov
jnp
cmp
dec
mov
jp
ja
adc
cmp
push
bound
notl
scas
pop
fwait
sbb
pop
pop
pop
sub
std
ret
enter
xor
sahf
inc
push
xorl
adc
lahf
cmp
fmulp
int3
pusha
int
or
mov
pop
push
ds
movsl
andb
dec
pop
cwtl
aam
movsl
cmc
push
xor
xchg
mov
cmp
inc
or
dec
push
insb
cltd
mov
shrl
ret
xchg
in
lods
orb
mov
xor
mov
leave
inc
adc
sahf
aaa
sub
or
je
adc
dec
or
ds
lret
movsl
xor
sbb
xor
push
mov
cmpsl
pop
outsl
mov
add
incl
insb
lods
pop
jne
popa
cmp
aad
ja
cmp
pusha
xchg
push
jl
or
add
jecxz
xchg
mov
sub
jb
in
cmc
out
jp
mov
imul
inc
movsb
aam
stos
cs
dec
or
mov
stos
fdivrp
aam
dec
cli
sahf
icebp
in
fstpt
jno
jne
xlat
fidivl
push
js
xor
xchg
stc
inc
into
imul
adc
or
and
fwait
nop
in
sti
jp
cltd
repnz
ret
loop
push
gs
aam
cli
mov
lret
and
sti
jge
mov
adc
sub
cltd
ror
mov
xor
sti
jnp
lods
fwait
cmp
pushf
jle
inc
cmp
idivb
ret
xchg
add
xchg
fldl
push
jne
rcl
jl
in
mov
jo
scas
leave
fwait
cmp
outsb
inc
dec
mov
in
mov
push
in
in
fbld
movsb
mov
inc
sbb
xor
std
dec
sub
lret
dec
jg
int3
sbb
in
mov
cwtl
push
jae
insl
addr16
test
decb
sahf
gs
lds
inc
lahf
scas
xor
cmpsb
lahf
les
arpl
sbbl
lret
leave
xorb
push
jnp
jnp
lock
jp
fldt
and
mov
cld
push
mov
daa
and
pusha
mov
aam
add
clc
inc
push
dec
aam
cltd
jg
repz
inc
movl
add
in
and
pop
pop
pushf
pop
lock
jne
jbe
sahf
ret
push
mov
push
std
sahf
les
test
dec
mov
inc
pop
cmp
jnp
push
pop
incl
movsl
or
aas
add
pop
inc
mov
xchg
arpl
arpl
xor
add
and
or
test
fdivs
add
xchg
sbb
inc
pop
add
jmp
daa
pop
add
push
inc
fwait
mov
xor
stos
leave
adc
cmpsl
fistpl
repnz
jae
call
sbb
push
out
call
andl
jmp
cltd
iret
fildl
in
mov
mov
mov
inc
icebp
ficoml
mov
push
adc
shrl
adc
xor
imul
xchg
adc
push
sub
lret
mov
imul
pop
les
es
add
in
xchg
push
xchg
pop
cld
push
in
add
je
shrl
push
mov
ds
subb
add
mov
jbe
cwtl
pop
icebp
mov
pop
cs
shrb
xchg
in
push
pop
sbb
mov
in
popf
mov
fmulp
pop
fisubrl
inc
cld
jecxz
sub
mov
lahf
cmp
sub
inc
repnz
out
outsl
mov
inc
call
outsl
pop
jmp
bound
adc
xchg
and
nop
pop
add
inc
sarb
adc
repz
inc
aas
inc
imul
cmpsl
xor
mov
jae
cld
fs
dec
outsl
scas
cmp
in
div
sbb
jg
add
inc
cwtl
jp
xor
stos
cmp
push
loopne
daa
leave
fwait
dec
in
loopne
rcrl
out
addr16
jp
xor
or
test
pop
pusha
sbb
pop
push
aas
mov
cld
jne
cmp
cld
rol
ja
or
mov
mov
lods
out
mov
in
ret
out
xor
xchg
call
mov
adc
pop
pushf
pusha
inc
mov
dec
xorb
sarl
fs
ja
inc
lock
in
push
mov
push
pop
inc
icebp
sti
mov
cltd
xlat
jnp
lcall
mov
xor
add
inc
xor
xor
jne
test
xchg
rep
ret
mov
lds
cmc
xchg
add
inc
xor
xor
jne
test
xchg
rep
ret
mov
lds
cmc
xchg
add
adc
push
inc
and
add
test
xchg
rep
ret
mov
lds
jne
cli
arpl
stos
popf
cld
in
mov
jo
pusha
xor
popf
popa
mov
lds
adc
lret
pop
rorb
jg
outsl
insl
pop
mov
mov
lahf
jo
pusha
call
out
add
xor
push
aas
shrb
rcrb
pavgb
mov
mov
lahf
ljmp
fistpll
iret
adc
rorb
jae
setb
add
sub
and
loopne
lret
add
pop
fs
aam
aaa
loope
pop
loopne
xchg
mov
or
dec
sub
push
and
ret
add
lahf
add
xor
ret
cmp
mov
test
or
ret
cmp
nop
je
lcall
sarl
pop
icebp
iret
push
das
arpl
jl
fs
addr16
je
pusha
fadds
xor
iret
lods
mov
stos
and
pcmpgtw
addb
faddl
dec
mov
cmpsb
and
add
repz
lcall
xchg
pavgw
inc
scas
push
mov
cmp
inc
iret
and
fists
das
clc
loop
sbb
jae
scas
pusha
lahf
add
pusha
call
out
add
xor
mov
shrb
push
jg
outsl
outsb
pop
test
xchg
push
fldt
negb
or
mov
insl
mov
xchg
dec
mov
push
ja
jle
outsl
out
cmp
or
ficoml
lret
add
or
inc
stos
push
cmpsl
pop
popf
adc
jle
sbb
filds
xorb
cmp
fisubl
scas
mov
mov
out
add
xor
and
shrb
rcrb
pavgb
outsl
sbbb
mov
lahf
jo
pusha
call
out
add
xor
and
shrb
rcrb
pavgb
outsl
sbbb
mov
add
in
or
cmp
dec
lahf
push
mov
sti
jbe
cmp
mov
jno
mov
jno
movsl
xor
test
mov
es
xor
xlat
jo
mov
call
xchg
btr
scas
mov
insb
cmpsb
add
int3
pop
outsb
mov
test
gs
nop
push
nop
test
test
daa
movsl
mov
js
push
sub
jb
jb
mov
dec
jnp
into
push
mov
mov
cmpsl
cmp
push
nop
sub
jo
ss
out
sbb
ficoml
mov
and
insl
adc
mov
ror
mov
sbb
int3
xchg
pop
inc
test
pop
filds
xor
mov
adc
insl
adc
ljmp
push
loopne
mov
mov
mov
repz
sbb
movsl
repnz
nop
inc
xchg
jle
pushf
and
popa
icebp
sbb
je
lret
xor
xchg
cmpsl
mov
das
andb
or
cld
pop
call
pop
mov
jmp
add
test
jbe
xchg
movsb
addl
jecxz
or
cmc
outsb
sub
aaa
jnp
aad
mov
stos
cmp
xchg
or
fsub
sbb
push
nop
fsubrl
jae
mov
sbb
sub
data16
xchg
cmp
pusha
xor
lods
daa
bnd
aaa
cmpsl
fldcw
push
add
push
ret
xor
insl
mov
mov
push
jg
mov
adc
push
in
push
push
int
cmp
pop
repz
sub
add
sbb
cmpsl
outsb
andl
jmp
xchg
jb
pop
xorl
arpl
mov
mov
push
sti
adc
cmp
mov
mov
ds
push
mov
mov
mov
insb
sbb
ss
sub
ja
jb
popa
leave
rolb
rcl
subb
inc
mov
into
cs
dec
outsl
sub
fidivrl
int
push
cli
inc
dec
int
adc
mov
addb
ret
push
call
add
iret
cwtl
in
dec
xchg
push
rclb
scas
jb
inc
mov
pushf
out
xor
imul
popf
push
mov
sbb
idiv
xlat
adc
push
ret
in
add
xorb
pop
cmp
and
and
or
jb
or
inc
mov
mov
push
test
test
jb
fcmovu
sub
scas
sub
stc
and
je
xchg
mov
sbb
out
mov
idivl
pushf
stos
hlt
inc
in
push
jno
mov
cli
dec
fcompl
das
lret
out
or
negl
mov
sahf
inc
mov
fnstenv
rorb
out
xchg
xchg
cmp
adc
movl
mulb
add
test
inc
jg
mov
scas
gs
mov
cwtl
andl
pop
adc
mov
ss
imul
push
lods
mov
xchg
cmp
addb
sbb
rorb
mov
fimull
push
jp
inc
mull
ds
cmp
or
scas
test
mov
and
push
mov
ret
xchg
nop
jb
mov
out
inc
xchg
flds
sub
cld
pop
fnstsw
jno
fstps
xor
dec
add
test
call
lahf
popa
push
push
push
cmp
out
jg
insb
pop
in
pop
fdiv
xor
aaa
jle
das
xchg
push
lahf
rcl
xorb
jne
inc
mov
sahf
pop
mov
stos
push
mov
movsb
dec
jmp
aad
mov
push
inc
and
aad
popf
dec
sahf
in
sbb
test
sub
mov
lea
lea
mov
outsb
lea
data16
jne
in
aam
scas
pop
push
jp
sub
popa
or
jae
push
cmp
ret
rorb
subl
scas
and
aaa
arpl
aas
adc
arpl
sbb
stc
mov
xor
mov
jbe
or
pop
jb,pn
outsb
ret
push
pusha
pop
adc
and
adc
repz
rorb
sbb
inc
shll
sub
icebp
test
xchg
mov
out
xchg
and
iret
mov
push
ret
out
in
imul
mov
test
xor
mov
movsb
shll
sub
sub
inc
pop
sbb
and
pop
roll
rclb
lcall
sbb
xor
push
jmp
dec
push
idivb
pop
test
stos
lahf
mov
aad
ret
sbb
jno
inc
adc
mov
add
imul
jbe
xchg
stos
jp
mov
push
dec
movsl
inc
mov
pop
ret
jne
jp
cmp
xchg
outsl
test
sbb
inc
pop
adc
call
mov
movsl
inc
clc
dec
addr16
xchg
xchg
push
pop
push
and
jle
cmp
sahf
in
out
mov
sti
push
inc
lret
je
push
lods
xchg
jno
pop
fsub
nop
aam
push
loopne
and
imul
mov
sub
mov
inc
pop
enter
out
cmp
imul
pop
inc
add
loop
fcomp
sub
jg
test
test
jno
jns
mov
je
leave
inc
mov
loop
imul
fbstp
and
pop
scas
fcmovu
xor
jecxz
mov
lret
cld
xor
stos
sbb
xchg
aam
mov
jne
and
inc
in
pusha
adc
lea
xor
mov
cmpsl
and
push
dec
add
popf
test
push
mov
fistl
cmp
cmp
fwait
xchg
mov
pushf
mov
push
icebp
or
fisttpl
div
sbb
call
fwait
cltd
xchg
daa
sub
sub
enter
sbb
js
push
add
jge
imul
add
les
cmp
jle
mov
nop
lret
jg
push
push
imul
pushf
push
mov
push
ffreep
jnp
test
sahf
fdivrs
sbb
loope
xchg
add
sbbl
fisubrs
mov
cltd
hlt
cmp
fiaddl
push
rol
mov
and
mov
scas
lods
push
icebp
sub
lea
push
imul
and
mov
add
mov
or
dec
cmp
ds
cmp
xchg
xchg
pop
add
xor
stc
sub
cmpsl
pop
pop
out
ss
push
insl
ljmp
jbe
sub
sub
scas
pop
repz
out
cmp
mov
imul
xchg
ds
sbb
out
xchg
sub
and
in
xchg
jae
ss
cmpsb
hlt
into
out
fiaddl
dec
nop
hlt
aad
ss
lods
iret
lret
adc
add
bound
ds
push
jno
or
or
ret
jmp
popf
push
cs
sbb
pop
push
sbb
mov
xor
lods
and
aaa
mov
fsubrl
xlat
inc
and
aam
out
push
aam
fucom
call
jne
sub
cmpsb
or
push
shlb
xor
roll
xchg
mov
fcmovnb
jg
push
movsb
mov
push
push
call
and
pop
pusha
in
pop
bound
jae
mov
push
out
sti
fiaddl
aaa
outsl
mov
fidivrl
fisubl
pusha
cmpsl
push
push
xchg
and
jmp
push
icebp
pop
add
out
and
cli
nop
mov
popf
pop
inc
push
xchg
into
push
test
sbb
pop
dec
jae
sbb
ja
out
add
addr16
jecxz
fwait
jae
rcrl
nop
das
ficoml
mov
push
mov
out
je
or
nop
xor
push
shrb
test
out
jno
cwtl
adc
and
push
cmp
adc
xor
outsl
xor
bound
clc
insb
lahf
scas
call
daa
inc
les
xchg
and
movl
pusha
inc
pop
jno
nop
ret
cwtl
mov
int
push
cmpsl
in
xor
lea
rolb
leavew
push
cltd
push
jg
fstpt
lock
xchg
and
xor
cmp
xorb
or
inc
xor
cmp
mov
mov
mul
js
push
jno
add
roll
pop
popf
imul
inc
push
xor
aaa
sbb
mov
jle
jl,pn
mov
sbb
jnp
gs
cmp
push
pusha
ds
rcll
or
mov
mov
mov
stos
loope
xlat
or
jne
cmp
or
xor
inc
xchg
test
or
into
shlb
movsl
or
int
fistpl
jne
and
mov
ret
test
adc
call
std
adc
sbb
popf
pop
xlat
clc
jnp
sbb
bound
enter
push
adc
outsl
leave
add
xchg
adc
aam
cmp
jo
divb
adc
or
jg
adc
test
lods
sti
pop
repz
sub
mov
insl
jns
add
fidivrl
jb
sbb
sahf
and
sub
push
mov
incl
push
fnstenv
out
fiadds
push
in
pop
jecxz
dec
outsl
xchg
sub
push
xchg
subl
mov
xchg
dec
lcall
out
mov
xor
sbb
stos
dec
push
cmp
addr16
les
lcall
shlb
lods
arpl
sub
es
loopne
mov
pop
clc
xor
es
popa
pop
call
and
popa
out
inc
adc
xchg
pop
mov
inc
jp
mov
pop
mov
fistps
mov
mov
jae
inc
adc
pop
cmp
psllq
xchg
jb
lret
jb
mov
cmp
leave
test
lcall
lock
divl
adc
push
push
mov
dec
stc
jecxz
adc
inc
push
cmp
jno
jp
enter
subl
fsts
fisubrs
fstl
xor
aaa
xchg
fsubrp
sbb
mov
push
sti
ffree
mov
mov
xlat
sbbb
cmp
dec
xor
push
mov
add
test
adc
sbb
test
ret
lds
ret
insb
out
pop
mulb
mov
negb
or
je
cmp
mov
int
fldl
imul
negl
adc
popa
addr16
sahf
adc
orb
push
jg
bound
pop
pop
testw
aaa
push
sub
mov
fimuls
pop
mulb
sub
insb
stc
test
pushf
pop
enter
jns
std
push
lods
in
fnstcw
jg
pop
xor
insb
xchg
cmp
and
or
je
lea
repnz
popa
or
sbb
push
aad
movsb
clc
dec
or
sbb
adc
fldt
ret
sahf
adc
xchg
and
cmp
pop
imul
xorb
xor
sbb
out
xchg
loopne
sub
jp
or
xchg
xchg
xor
test
mov
mov
dec
orb
dec
cmpsb
pushf
and
lock
push
mov
mov
dec
ljmp
lret
jmp
imul
inc
mov
mov
xchg
cmp
shlb
mov
into
push
repnz
js
repz
fists
fsubl
push
cmpsb
inc
call
movsb
outsb
fwait
adc
ljmp
inc
pop
stc
cmp
popf
rcrb
cmpsb
scas
cmp
push
mov
add
lods
leave
add
loop
das
sbb
scas
push
dec
mov
pop
je
jb
sahf
popa
pop
lds
push
cli
fstl
enter
mov
mov
sub
movsb
mov
pop
xorb
addl
inc
push
imul
sbb
xor
mov
cmpsb
sahf
dec
push
outsb
pop
lret
pop
mov
insb
jo
test
aad
jp
mov
hlt
cmpsb
decl
stos
js
xor
push
dec
icebp
mov
mov
or
mov
pop
add
xchg
jns
inc
add
scas
pop
xor
pop
imulb
in
lods
mov
lds
popl
mov
push
sub
and
jle
push
dec
out
push
js
xor
adc
sbb
icebp
fimuls
mov
pop
inc
mov
fwait
xchg
jmp
ret
xlat
out
sbb
jb
ja
push
ljmp
aad
dec
out
cmp
jo
sbb
in
cmp
in
es
in
iret
mov
out
lret
xchg
or
fst
shr
cld
daa
or
iret
sbb
lret
test
stos
loopne
test
jmp
mov
pop
or
fcompl
xor
in
ja
enter
in
es
or
push
jns
addb
ss
sbb
lcall
mov
insb
cmp
xlat
out
pop
xorb
jbe
push
stc
ret
std
inc
aad
mov
jns
xor
jp
xlat
iret
xchg
out
xlat
mov
sub
dec
jge
cmpsl
inc
mov
roll
out
inc
adc
arpl
add
xchg
mov
jmp
stos
mov
mov
mov
jb
sbb
or
fwait
or
mov
push
shll
bound
in
mov
stos
stos
lods
inc
aam
pop
pop
lock
divl
sbb
inc
stos
outsb
pop
mov
cmpl
sbb
sarl
mov
int3
and
roll
sahf
xchg
jae
push
aam
jmp
dec
sub
into
popf
sbb
or
mov
cmp
dec
stos
into
mov
dec
loope
xchg
jns
xchg
sbb
shlb
lods
je
lods
jns
sbb
stos
or
fwait
std
sbb
xchg
nop
bnd
lds
push
insl
mov
cli
pop
mov
push
xchg
sbb
mov
out
call
mov
adc
add
pop
pop
push
mov
rorl
lret
andl
lret
sub
or
inc
xorl
cmp
sub
mov
add
sbb
mov
mov
dec
in
mov
or
sbb
jle
cwtl
mov
les
cmpxchg
pop
test
iret
shll
mov
std
xchg
scas
jnp
push
xchg
cltd
sub
jbe
xchg
jmp
pop
out
fdivr
cmpsb
imul
movsl
in
sbb
mov
test
loope
xchg
xchg
inc
xor
xor
sub
mov
andps
movl
pop
lods
cltd
dec
adc
inc
popf
xor
out
lock
adc
mov
call
test
test
lods
mov
mov
sbb
sub
jle
addr16
popa
push
ret
dec
inc
add
test
xor
pop
iret
sbb
data16
pop
mov
inc
cltd
outsl
mov
inc
shrb
popf
icebp
add
xchg
loopne
cltd
xchg
mov
pop
mov
aaa
jbe
ret
adcl
jno
jns
inc
std
mov
daa
js
xchg
and
hlt
rcl
mov
lea
xchg
subb
icebp
cmc
scas
mov
in
jb
jl
mov
mov
imul
and
jecxz
xor
andb
xor
mov
test
push
enter
push
sahf
and
sti
adc
jb
xor
inc
out
test
jne
adc
in
xchg
cmp
in
rorl
dec
cmc
scas
mov
xor
sub
sbb
das
xor
lea
in
fsubs
pop
xor
in
and
shlb
fildl
bswap
mov
mov
imul
int3
mov
clc
roll
js
test
and
mov
stos
dec
sbb
cltd
jle
mov
sub
movsb
xor
xchg
cmp
pop
lds
jae,pn
popa
pushf
aaa
sub
sbb
sbb
cmp
adc
imul
push
pop
add
adc
fildll
hlt
incl
test
call
adc
mov
cs
mov
outsb
lock
dec
stc
lods
add
jmp
mov
pusha
sub
lret
push
fnstcw
out
pop
call
ss
mov
sbb
push
mov
pop
mov
push
add
cs
mov
in
ja
sarb
push
jecxz
inc
cwtl
xchg
call
xor
dec
jne
mov
push
pop
xchg
ljmp
push
pop
xlat
cld
outsl
loop
test
movsl
pop
jb,pn
out
insl
addr16
hlt
scas
add
sub
daa
add
or
inc
movb
je
imul
mov
popa
jecxz
add
mov
rorl
repnz
sti
pop
or
jo
lods
sub
xlat
sti
xchg
testb
inc
mov
add
xorb
cmc
xchg
mov
mov
mov
push
test
xor
pop
mov
leave
mov
and
insl
pop
into
mov
leave
nop
pusha
icebp
movsl
pop
ss
jo
gs
mov
pop
or
mov
lea
xchg
inc
or
adc
xchg
dec
xchg
cmc
mov
std
inc
mov
inc
and
add
adc
push
pusha
mov
sbb
bound
shlb
mov
cmp
inc
pop
fdivrs
dec
add
push
outsb
lahf
xchg
andl
pop
lds
adc
push
jge
sahf
in
repz
mov
lock
fcmovu
sbb
add
mov
xchg
das
cvtps2pd
inc
mov
int3
int
pop
and
add
fldl
pop
or
adc
in
xor
dec
xchg
add
stc
mov
or
ret
adc
or
movsl
sub
dec
icebp
test
inc
rcll
fisubl
add
sub
stc
xor
iret
lods
nop
dec
aam
and
dec
push
jns
pop
pop
lahf
dec
ss
jle
mov
sbb
inc
xlat
push
insl
rcl
adc
aas
loop
nop
pop
push
test
icebp
shl
mov
pop
das
jb
punpckhbw
push
lcall
ss
dec
icebp
lret
mov
dec
pop
ficompl
iret
sub
cltd
mov
aaa
aaa
sbb
lret
jb
faddl
test
cmp
adc
xlat
inc
jns
pop
loopne
shl
jle
mov
dec
imul
jg
insl
aas
rorb
ret
mov
xchg
xchg
imul
inc
pop
imul
xchg
adc
mov
pop
aad
xchg
aaa
out
adc
repnz
inc
ljmp
cld
and
pop
imul
lret
jle
scas
aaa
arpl
ret
push
fcomp
imul
jle
add
lds
int
lret
mov
push
aaa
push
cmp
sar
test
pushf
mov
sbb
mov
push
cmpsl
jo
jne
dec
mov
mov
les
mov
enter
jno
mov
ljmp
xchg
ret
mov
clc
fwait
arpl
ret
mov
mov
addb
add
mov
mov
sub
sub
pushf
sub
dec
arpl
xorb
fwait
mov
sarl
sbbl
sbbb
les
mov
push
in
mov
andl
xchg
jge
push
aas
sbb
xchg
arpl
pusha
mov
jmp
add
push
push
jge
xor
cmp
cli
adc
inc
jg
and
aad
sbb
mov
mov
mov
mov
das
push
or
xchg
mov
das
sub
xchg
pop
push
mull
lds
dec
test
fistps
add
cmpsb
xchg
cltd
addb
nop
push
ficoms
pop
negb
sub
xchg
fistpl
push
adc
aaa
or
push
pop
mov
add
cmp
and
and
pop
cs
or
movsl
leave
int3
in
pusha
adc
mov
cmp
inc
dec
push
ret
push
cmpsl
movsb
xchg
sar
shrl
aas
lcall
mov
push
stos
or
mov
mov
pop
mov
out
mov
cmpsl
int
push
pop
addr16
mov
jbe
cmc
lock
mov
and
jp
aam
push
or
popl
dec
mul
prefetcht1
repz
adc
mov
jge
push
jg
add
lcall
pop
ss
fwait
lods
dec
data16
rol
imul
out
jne
nop
mov
stc
cli
sbb
outsb
mov
add
adc
ss
push
mov
push
in
mov
addr16
push
xchg
sbb
movsl
sahf
xchg
icebp
sbb
mov
jmp
daa
ja
lahf
or
scas
mov
fdivs
sbb
mov
adc
mov
sahf
jne
pusha
call
out
add
xor
and
shrb
rcrb
pavgb
outsl
sbbb
mov
lahf
jo
pusha
call
out
add
xor
and
shrb
rcrb
pavgb
outsl
sbbb
mov
pop
push
out
imul
dec
and
shrl
les
lock
outsl
sbbb
inc
mov
xchg
and
adc
add
mov
loopne
das
das
push
lock
call
aas
fsubr
sbb
or
cmp
sub
or
and
das
ljmp
jp
dec
mov
cmp
sbb
or
cmp
sub
pop
mov
insb
push
jp
ds
cmp
or
sbb
ljmp
sub
pop
mov
insb
push
jp
cmp
je
inc
mov
inc
cltd
je
mov
pop
test
ljmp
flds
fldt
adc
ja
and
aas
sub
ds
jo
fs
and
mov
das
inc
or
in
adc
jno
add
push
inc
hlt
or
in
push
adc
mov
mov
outsl
add
in
scas
jecxz
or
stos
pop
stos
pop
je
repnz
scas
push
movl
pushf
or
sbb
adc
ljmp
mov
xchg
cmpsl
adc
mov
std
bsf
cmp
jnp
jne
adc
cmp
popf
mov
pop
lods
push
and
cmp
jmp
cli
or
cmp
sub
pop
mov
insb
push
jp
dec
mov
cmp
or
sbb
scas
jp
push
xor
or
sub
jle
sub
ss
push
mov
jle
mov
pop
mov
cmp
jnp
cmp
bound
fnstcw
or
pop
rorb
mov
orl
dec
fistpl
xor
insb
push
jp
dec
mov
cmp
or
sbb
ljmp
sub
pop
mov
insb
push
jp
dec
mov
cmp
or
sbb
ljmp
std
jo
push
pop
xor
test
add
or
mov
or
pop
popa
mov
ret
cwtl
mov
xchg
push
ror
rorb
aas
into
test
xchg
stos
or
and
iret
sbb
nop
into
pushf
nop
scas
jns
das
push
les
mov
inc
mov
xor
sbb
outsl
arpl
jns
out
cwtl
sahf
mov
xor
fcoml
std
fisubrs
pushf
inc
mov
in
sbb
sbb
fs
xchg
es
sbb
add
cmp
mov
push
scas
sbb
popf
enter
pop
out
cltd
loope
inc
sbb
mov
mov
and
mov
push
mov
pushf
dec
inc
push
arpl
push
sub
loope
mov
cmpsb
cmc
cmpsl
iret
shll
out
jmp
and
xchg
movsl
mov
cmp
push
sub
mov
jae
rclb
aad
dec
jecxz
or
rcll
cmp
sbb
stos
jne
sub
sbb
stos
inc
add
inc
pop
xchg
out
cld
fs
mov
jns
in
push
add
push
dec
mov
pop
pop
repnz
push
inc
ret
aas
sub
cwtl
imul
out
std
aam
xchg
fwait
in
mov
ret
push
bnd
rclb
pop
ja
popf
push
mov
subl
or
or
shll
adc
lahf
inc
repz
and
mov
xchg
rcr
inc
adc
inc
inc
mov
fstps
jae
jbe
add
sub
lods
xchg
gs
sub
inc
inc
cmp
push
std
mov
inc
fisttps
sbb
add
das
lods
xor
sbb
adc
mov
mov
mov
or
fdivl
jl
outsl
add
mov
ret
xchg
pusha
fiaddl
bound
cli
xor
inc
xchg
ret
inc
push
sbbb
pop
rcl
lea
fisttps
mov
cld
cli
mov
xchg
sub
cmpsl
add
adc
or
cmp
lahf
sub
add
jbe
push
mov
addr16
cmpsl
dec
jnp
pavgw
cmc
hlt
sbb
repnz
jecxz
bound
daa
push
loop
or
scas
dec
jno
aam
push
inc
or
mov
mov
sub
pusha
aam
int
cmp
movsb
xchg
inc
mov
mov
or
mov
and
xrelease
xchg
stos
sti
sub
dec
fsubrl
stos
das
jo
and
xchg
andb
sub
cwtl
mov
mov
mov
imul
lcall
pop
pop
in
test
aad
jb
jbe
push
pop
ret
in
jmp
jbe
mov
scas
rclb
jmp
roll
pop
and
loope
in
cld
pop
push
daa
inc
sub
leave
push
cld
mov
loop
out
icebp
pop
sub
sub
lock
pop
fbstp
lds
out
jmp
mov
in
aaa
cmp
mov
out
ret
sbb
ja
idiv
mov
ffree
jge
or
mov
xor
push
sub
pop
out
xchg
pop
fildll
nop
push
or
sbb
xchg
inc
push
push
push
jo
sub
gs
arpl
fistpll
push
inc
lea
dec
movsl
stos
adc
cmc
mov
xchg
fnstenv
subb
mov
icebp
jne
lds
xchg
inc
add
mov
push
xlat
jo
mov
cli
xchg
roll
xchg
inc
or
jno
repnz
mov
pop
addr16
add
movsb
adc
shlb
icebp
ja
mov
into
jne
inc
mov
dec
sarl
cmp
std
sbb
in
xchg
outsb
inc
bound
push
test
push
dec
jl
dec
out
sub
cmpsl
sub
mov
adc
pushf
jno
andb
jns
xchg
movsl
dec
sbb
cld
push
add
xchg
addr16
inc
lea
test
int3
xchg
aaa
imul
mov
addr16
insb
loop
pop
fimuls
mov
cmp
in
mov
cmp
jnp
pop
jns
push
imul
iret
in
xlat
and
pusha
subl
ss
mov
popl
xor
jae
pop
pop
in
push
lret
or
mov
adc
je
cmpsl
cmp
mov
icebp
mov
stos
push
push
add
inc
jp
mov
pop
aaa
insb
jge
sub
repnz
test
lret
pop
out
cwtl
fs
aas
cmp
xchg
mov
das
sub
and
xchg
es
cltd
out
push
in
or
inc
inc
jbe
cld
or
and
aam
push
xor
das
lret
scas
adc
out
out
mov
test
cmp
inc
sub
xchg
cmp
movsb
fucom
in
sub
in
and
rcl
or
cmp
cmp
aas
add
lcall
cli
in
fnstsw
xor
dec
inc
fiadds
shl
mov
mov
dec
cltd
add
push
inc
jae
fimuls
mov
sarl
ret
cld
sbb
inc
pop
jae
mov
divl
sbb
je
sti
int
push
mov
push
lret
out
mov
test
ret
push
add
dec
pusha
mov
aam
jle
pop
aaa
lea
cltd
xor
imul
sub
movsl
std
aam
jge
dec
add
pop
jle
mov
and
rdtsc
das
rcrb
ds
adc
js
jge
push
lret
sbb
sti
mov
pop
dec
or
xchg
lds
add
inc
aaa
cli
dec
popf
mov
mov
or
xor
push
push
add
xor
sub
ss
cmp
xor
nop
int
push
pop
outsl
inc
data16
sbb
xor
popa
mov
lods
ja
push
push
sbb
push
rolb
jmp
call
insb
cmp
mov
cmpsl
xchg
push
jae
mov
push
mov
xchg
out
mov
subb
movsl
imul
sbb
and
cli
xor
jnp
mov
dec
dec
nop
fimuls
mov
mov
dec
add
push
cld
iret
mov
xchg
imul
push
out
imul
sbb
lahf
mov
sti
adc
sub
icebp
cmp
cmp
or
add
sub
and
fnstenv
call
mov
mov
jg
inc
add
cltd
bnd
das
cmp
pop
xor
in
std
test
iret
pusha
push
cmc
pushl
xor
and
out
xchg
xchg
repz
ret
and
add
outsb
dec
dec
stos
mov
rorb
pop
jb
cmpl
test
mov
mov
andb
aam
hlt
xlat
lahf
cmp
pusha
jnp
cld
sbb
xchg
fcoms
mov
xchg
sahf
mov
and
int
sub
adc
out
loopne
push
shlb
push
test
and
adc
or
stos
mov
in
push
rolb
fwait
xor
stc
xor
sub
outsl
nop
lcall
xlat
mov
sub
pop
add
ss
jo
xchg
pop
push
loopne
pop
dec
inc
sub
lock
ficoml
and
mov
mov
mov
test
enter
dec
inc
loopne
movsb
push
adc
mov
pop
push
rcl
or
cs
int
sarl
push
inc
repz
jecxz
std
adc
xor
addb
lods
test
ds
into
outsl
shrb
xlat
push
mov
xor
add
fs
sbb
test
push
sub
or
push
fld
cmp
clc
sub
mov
test
sbb
int
enter
mov
cs
mov
push
adc
pop
xchg
out
in
rorl
cli
popf
scas
mov
jb
jbe
test
xchg
lods
sub
mov
jbe
faddl
dec
mov
jg
pop
jp
mov
xor
xchg
stc
dec
mov
jmp
jmp
inc
es
mov
dec
mov
fwait
bound
maxps
mov
xchg
lahf
xor
mov
or
fwait
mov
jmp
jp
pusha
xor
xor
arpl
sbb
and
fstps
aad
arpl
inc
push
mov
pusha
outsl
xchg
xchg
xor
sbb
insl
dec
inc
inc
aas
sbb
and
enter
mov
pop
push
shl
mov
popf
or
decl
js
dec
aas
pop
xor
xor
nop
in
pop
lret
sub
fdiv
lods
pop
stos
add
imull
cmp
in
jbe
jle
inc
ljmp
int3
xchg
in
andb
roll
shlb
jb
jb
jg
or
push
rcrl
sub
jae
push
les
dec
out
sbb
push
int3
lcall
sti
add
insb
out
rcrl
sub
movsl
andb
dec
into
aad
sbb
mov
mov
sbb
push
and
jbe
jbe
add
mov
dec
bound
js
fwait
negl
xor
xchg
sahf
push
and
xor
jecxz
inc
shll
push
ljmp
jno
push
aad
push
xor
imul
cmpsb
sbb
xor
in
dec
push
xchg
push
mov
call
mov
jns
daa
mov
lock
je
adc
in
rcl
xchg
cs
xchg
test
mov
and
popf
leave
dec
nop
fxch
cmp
sahf
pusha
add
ljmp
js
mov
xchg
mov
pushf
and
xor
sbb
mov
xchg
pop
add
cmp
sarb
push
and
mov
outsb
fstpt
dec
or
iret
int
and
add
popf
pop
cmp
fs
push
add
sub
pop
lods
stos
jns
jp
xchg
es
or
sbb
cmc
dec
add
push
sbb
push
cmpsl
push
pop
push
dec
std
pop
movsb
stos
mov
pop
stos
xchg
loop
popa
lcall
shl
fnstenv
xor
adc
mov
inc
sbb
bsr
loopne
mov
popa
mov
cmpsl
cmp
jno
fmull
mov
into
gs
loop
inc
gs
mov
cmp
mov
sbbb
mov
dec
mov
jge
jmp
pop
xchg
pop
cmp
addr16
fdivrs
push
push
test
jae
sub
push
and
dec
es
cltd
push
push
mov
ret
lea
xchg
in
loop
lretw
jg
loopne
sbb
sbb
clc
jp
xlat
xor
or
mov
jae
pop
inc
sub
pop
out
call
daa
sbb
mov
cmp
sbb
xchg
shrl
pop
insl
jbe
mov
push
or
sbb
fdivs
inc
scas
mov
cli
and
dec
sub
adc
je
push
xchg
pop
test
mul
repnz
scas
iret
fmuls
cli
jmp
dec
sbb
mov
ret
xchg
inc
andb
add
roll
gs
in
filds
das
fcoms
pop
into
daa
icebp
and
cmp
adc
sarb
push
adc
lods
and
and
fisttpl
inc
int
in
js
dec
adc
ljmp
cmp
nop
jecxz
mov
cmpsb
adc
jne
cltd
iret
sbb
mov
pop
sbb
push
test
sub
clc
lods
in
out
pop
jmp
add
pop
scas
stos
loope
ds
inc
sbb
sub
mov
or
or
add
adc
sbb
gs
ja
iret
push
pop
mov
lock
mov
ret
add
xor
cmpsb
adc
sbb
sbb
cmp
or
cmp
or
pop
xor
mov
push
mov
outsl
mov
cmp
jl
dec
sub
mov
pusha
jne
and
data16
outsb
adc
or
lods
dec
cmpsb
mov
inc
shll
and
mov
pop
push
mov
xor
mull
adc
leave
out
jae
movsl
adc
testb
mov
test
lock
cmp
push
dec
sub
inc
inc
pop
dec
out
dec
dec
add
xchg
cmpsl
ret
xchg
mov
jno
and
jbe
mov
sub
or
xchg
push
insl
sbb
into
push
cmp
cmc
xor
testl
loopne
iret
movsl
add
cmp
stos
lds
mov
mov
sub
cmc
lret
pop
inc
int3
test
leave
add
adc
jmp
imul
inc
aad
or
hlt
push
aad
xchg
dec
dec
add
scas
and
aaa
pop
sahf
cwtl
ja
push
iret
inc
cmp
sbb
and
addr16
nop
mov
outsl
int3
or
incl
hlt
mov
mov
sbb
sbb
jp
lret
jno
popf
fstl
mov
xadd
xchg
jmp
fildl
xor
roll
dec
int3
cmp
mov
xchg
sub
jmp
xchg
scas
testl
mov
out
dec
adc
or
mov
dec
adc
mov
daa
dec
push
mov
inc
out
dec
js
mov
mov
pop
lret
insb
push
xor
sbb
cmp
rcrl
ret
mov
enter
mov
and
dec
fnstenv
xchg
out
push
xchg
popf
and
mov
rcr
in
push
pusha
pop
aas
andb
lahf
aas
push
xchg
inc
dec
pop
sahf
mov
ja
cmp
jbe
cld
int
add
push
movsl
jae
mov
in
jae
jecxz
pop
outsl
add
xor
sub
inc
cwtl
imul
or
gs
test
cmpl
ljmp
mov
inc
mov
xor
addb
sbb
or
adc
dec
cwtl
test
out
xchg
mov
lcall
adc
push
cli
sbb
sub
push
mov
push
ds
into
cmp
ljmp
test
sub
mov
in
ror
adc
and
mov
arpl
cmovg
jecxz
sub
mov
adc
xchg
xchg
mov
pop
mov
jecxz
lret
pop
adc
lods
addl
add
cs
stos
or
push
sbb
out
dec
rcr
and
jmp
lret
faddl
cs
cwtl
inc
sbb
into
fld
mov
push
cmp
pop
ss
xchg
adc
flds
fisttpl
or
cmpsb
fdiv
mov
pop
addr16
add
pop
pop
jbe
rcrl
adc
jb
pop
inc
lahf
lods
sbb
mov
sbb
andb
scas
sub
jnp
fcompl
int
andl
dec
mov
mov
add
rcr
out
pop
pusha
imul
add
sti
mov
inc
sahf
add
sahf
jmp
push
out
ret
movsl
shlb
enter
nop
loop
cmpsb
sbb
push
cmp
mov
hlt
jge
test
std
inc
xchg
in
cmp
xchg
les
mov
out
in
pop
push
xor
push
push
hlt
cmp
in
add
into
add
push
scas
sbb
imul
mov
mov
cmp
lea
out
jg,pt
test
into
mov
pushf
lret
and
mov
outsl
mov
mov
inc
add
int
and
xor
push
push
fwait
fs
pop
add
mov
mov
sub
sbb
pop
imulb
out
out
arpl
cmpb
sbb
push
repnz
into
jmp
pop
and
dec
fstpt
add
fmuls
and
stc
cmp
pop
call
testb
xchg
scas
mov
sub
hlt
fs
and
je
jb
xchg
aam
xlat
add
shlb
adc
adc
inc
pop
in
es
mov
sbb
add
push
xchg
bound
sub
xor
fldt
sbb
fucom
inc
popa
in
testl
cld
add
jno
pop
push
mov
jno
loop
iret
ja
stc
or
cwtl
jae
xor
mov
adc
inc
xor
dec
adc
pop
sti
aad
pop
cmp
ja
add
shr
ss
sub
in
dec
bound
mov
mov
inc
rol
jns
mov
clc
je
mov
imul
add
mov
cmp
or
push
pushl
mov
lods
inc
in
int3
aaa
pushf
push
insb
in
rcrl
dec
pop
loopne
jmp
dec
xor
or
repz
test
pop
mov
lock
jmp
adc
push
cmp
mov
orl
js
inc
mov
xchg
aam
xchg
and
push
push
pop
movsl
jnp
xor
test
lods
jecxz
mov
pop
sub
mov
mov
mov
push
dec
stc
jg
xchg
cmpsb
test
call
xlat
xor
aaa
rolb
roll
push
pop
lret
ret
ret
into
inc
lds
and
mov
push
cltd
pop
addr16
stos
test
fadd
fnsave
jle
daa
sub
adc
or
mov
or
aad
insl
insl
popf
daa
addb
dec
and
pop
jmp
les
das
icebp
cmc
test
mov
leave
jnp
out
sbb
mov
mov
shr
pop
push
cmp
mov
push
jnp
xchg
mov
xchg
int
repz
icebp
test
push
or
fists
mov
aam
push
mov
out
mov
imul
inc
push
mov
jl
sti
out
add
hlt
ss
jo
loopne
push
push
pop
jp
orl
adc
push
stos
ret
dec
dec
fdivl
mov
jno
jns
insl
sarl
movsb
mov
or
gs
or
test
and
fcomps
test
cli
mov
and
jae
sar
adc
in
frstor
dec
pop
popa
jno
jno
push
pop
dec
aaa
arpl
loope
pop
es
mov
out
ljmp
jnp,pn
xor
mov
xor
loope
movsb
nop
popa
cmpsl
into
les
mov
jno
je
jno
push
adc
or
mov
pop
xchg
lahf
aas
mov
add
lret
stos
fdivrs
and
xchg
and
cmpsl
adc
jns
or
and
rolb
xchg
jmp
jnp
sub
dec
add
shrb
inc
sub
jmp
push
nop
mov
jg
int3
lret
popa
sub
test
movsb
xchg
add
aaa
jns
scas
mov
xchg
popa
pop
sub
lcall
dec
mov
rorb
daa
xchg
adc
ficoms
movsb
das
cmp
fimuls
mov
iret
mov
or
mov
pop
mov
out
dec
nop
sub
ds
adc
dec
cmp
adc
and
xor
sar
fbld
dec
lret
int
cmp
out
clc
sbb
push
mov
mov
mov
fadds
rcll
dec
sub
and
stos
adc
adc
or
cld
inc
cltd
xchg
daa
dec
fmull
out
js
loopne
pop
scas
div
xchg
iret
inc
mov
add
lahf
in
or
push
mov
lret
or
mov
dec
mov
out
jno
test
scas
lock
frstor
mov
cld
aas
pusha
out
adc
fs
inc
or
sbb
mov
jecxz
mov
sub
aas
stc
ja
lahf
mov
ja
sub
mov
inc
jae
cmp
mov
ljmp
insl
adc
ljmp
sub
loopne
inc
fcoml
ficoms
add
dec
or
out
movsl
mov
rolb
mov
sti
pop
dec
dec
cmp
and
mov
inc
push
mov
pop
movsb
jp
pop
lods
jge
sar
test
inc
push
inc
inc
rcll
or
pop
add
sub
loop
adc
jg
in
sbbb
jo
ret
aad
pop
fnsave
mov
push
xlat
jns
popa
xchg
popa
insb
rorb
mov
fmulp
fcomps
and
mulb
and
lods
xor
gs
and
incb
xor
mov
inc
popf
push
xor
mov
mov
adc
stc
adc
popf
push
sarb
shr
push
lret
mov
into
mov
daa
and
movb
sar
or
stc
loope
insb
or
pop
cmp
cld
sbb
loope
insb
jp
scas
mov
popa
fdivr
add
jns
fnstenv
sub
inc
icebp
ss
pop
mov
push
mov
dec
cmp
and
lahf
dec
push
sbb
pop
rcll
and
add
mov
pxor
sub
add
aad
or
aas
add
cwtl
insb
aad
cli
aam
cmp
xchg
push
push
mov
mov
enter
dec
lods
orb
int3
daa
ds
inc
ffree
pop
cmp
loop
ficoms
sbb
js
cwtl
xchg
jae
inc
push
push
ss
or
xchg
es
in
ss
cs
fstps
das
xor
or
cmp
mov
insb
push
jp
dec
mov
cmp
or
sbb
ljmp
sub
pop
mov
insb
push
jp
dec
mov
cmp
or
sbb
ljmp
sub
mov
insb
push
jp
dec
mov
cmp
or
sbb
ljmp
sub
cld
lcall
mov
mov
cmc
add
adc
in
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
cmp
mov
orb
int3
sub
inc
sarb
add
jb
inc
enter
sub
js
push
movsb
test
test
cwtl
add
jo
add
push
and
xor
popa
fdivl
inc
cs
enter
push
pop
lock
aaa
xchg
test
push
push
mov
jle
sub
push
or
and
adc
rclb
pushf
jmp
push
mov
fidivl
fldl
andl
popa
clc
mov
inc
aaa
ffree
mov
dec
mov
shll
pop
out
lods
push
mov
lea
jo
or
cmp
mov
xchg
imul
lods
xor
call
add
movsl
pop
xchg
shr
adc
adc
jae
and
xor
jno
push
fsubrs
pop
xchg
imull
stos
addb
and
or
inc
enter
xor
add
lcall
push
push
mov
adc
mov
inc
enter
dec
mov
ret
jl
or
mov
les
je
jns
jge
xor
dec
icebp
ja
js
adc
push
mov
cwtl
gs
ja
xor
cmp
inc
divl
repz
sarb
add
jo
inc
enter
sub
js
push
sarb
add
jo
inc
enter
pop
cmpsl
and
adc
or
pop
sahf
lea
je
xchg
mov
nop
aam
les
push
and
aaa
or
sub
pop
cmpsb
mov
mov
xchg
test
jae
cs
call
add
pop
push
movsb
cmp
add
mov
and
loop
out
mov
mov
in
add
jle
push
mov
mov
ret
pop
push
pshufw
mov
inc
xchg
add
add
into
lcall
dec
call
adc
add
fcomip
faddp
lock
dec
call
addl
call
fs
jecxz
jno
lahf
sub
push
xor
xor
in
pop
out
pop
add
out
daa
out
dec
shl
imul
xchg
test
xor
pop
sarl
xchg
add
cmp
stc
xor
xchg
xor
es
popf
mov
shrb
sub
insl
arpl
jnp
out
das
and
scas
inc
lret
scas
cmpsl
xchg
andb
adc
testb
pop
stos
ret
in
or
dec
les
mov
test
xor
cmp
push
cmp
pop
pop
or
sbb
sbb
js
sbb
or
jb
fistpll
sbb
cltd
mov
cmp
lods
lock
addb
enter
pop
xchg
pop
add
sbb
or
nop
into
mov
inc
add
insb
das
ret
jns
loop
ljmp
xchg
adc
xchg
mov
jge
subb
lahf
scas
lret
pop
adc
test
pop
mov
push
mov
xlat
push
out
push
les
adc
ja
xchg
insb
xor
adc
mov
rcrb
sahf
lods
iret
jle
pop
dec
mov
pop
or
cmc
xchg
test
iret
divb
xlat
pop
xor
in
es
and
dec
mov
repz
sbb
lods
dec
ja
pop
jno
fists
push
sarb
jno
or
inc
add
int
push
and
and
sbb
mov
lea
fldenv
in
jns
cmp
mov
out
cmovnp
jle
push
test
add
test
mov
es
cmp
ret
jno
or
in
xor
stos
shlb
xchg
jno
push
rcrb
xlat
lahf
test
lock
dec
imul
scas
movb
mov
lahf
icebp
imul
or
xor
movsb
mov
jno
bound
jmp
mov
faddp
call
lret
in
push
sbb
insb
add
push
jge
mov
in
xlat
lahf
or
sub
addr16
dec
cwtl
cmpsb
push
push
xchg
mov
push
push
or
adc
and
xor
mov
mov
cmc
sub
fisubrl
sti
and
jns
cmc
fdivp
aas
clc
and
std
ficoms
mov
dec
pop
es
repnz
nop
mov
lret
cmp
fstl
mov
inc
jbe
in
cmpsl
stos
push
mov
inc
arpl
pushf
pop
lea
fwait
xor
cmp
jle
push
dec
sub
rorl
push
out
out
lods
ja
xor
push
pop
mov
cwtl
sahf
xchg
clc
outsl
data16
add
movsb
push
aas
cmp
pop
nop
mov
adc
xchg
in
pop
jg
jmp
add
les
sbb
fdivl
mov
in
sti
outsb
pop
dec
mov
cwtl
iret
enter
shr
sahf
pop
lds
jb
cmp
stos
scas
mov
mov
cmp
loopne
adc
icebp
lret
mov
iret
in
pushl
sub
inc
in
inc
mov
dec
mov
mov
cmp
sbb
inc
ret
dec
pushf
mov
xchg
test
and
and
fs
xchg
mov
inc
sarl
fst
inc
rcrl
mov
sbb
rcll
push
mov
push
mov
cwtl
and
mov
xchg
fildll
pop
fs
movb
lcall
mov
jmp
xor
movsb
fsubrp
inc
pop
pop
pop
bnd
mov
mov
mov
fcoml
mov
cld
repnz
adc
or
les
xchg
xor
mov
mov
fldt
cmp
out
push
mov
pusha
dec
das
jl
dec
or
in
sbb
ljmp
out
inc
sbb
outsb
sub
jno
imul
test
sub
ds
mov
out
iret
outsl
dec
sbb
dec
xor
and
push
and
pop
loope
je
and
xor
pop
imul
or
test
fs
fwait
jle
sbb
mov
and
and
lods
adc
pop
decb
mov
test
stc
lods
xchg
repz
cltd
add
mov
adc
pop
mul
notb
loopne
dec
loop
arpl
jb
out
decb
push
enter
xchg
ret
nop
jbe
push
sti
and
mov
lret
pop
or
test
dec
imull
pop
mov
cmp
cwtl
dec
adc
push
std
cld
rcll
jp
iret
xchg
in
jbe
pop
insb
and
stc
sbb
inc
mov
ret
sbb
sti
adc
leave
nop
insl
cmpsl
add
outsw
push
push
fs
and
lret
dec
push
out
call
in
pop
ss
in
xor
in
imul
test
lds
loop
mov
or
xorps
nop
inc
inc
cmp
mov
sub
push
adc
testb
aad
mov
jne
cmovs
mov
lahf
sub
jmp
fldenv
dec
scas
pop
jl
sub
movsb
adc
lss
ret
out
or
cmp
pop
test
movl
cmp
pop
cmp
mov
xor
dec
mov
and
into
repz
jge
push
iret
cmp
je
or
xor
xchg
dec
je
aas
loop
push
xchg
out
add
sub
ja
xchg
stc
mov
mov
jnp
out
add
cmp
addb
jecxz
icebp
cmp
test
dec
clc
imul
int
sti
or
subb
mov
push
outsl
jne
scas
inc
mov
inc
cli
push
cld
pop
pop
mov
sub
leave
add
icebp
and
outsb
adc
and
in
push
sub
int
mov
push
rep
push
inc
cmp
repnz
sbbl
nop
inc
rolb
pop
dec
mov
je
push
shlb
frstor
or
cwtl
clc
call
jae
pusha
movsb
push
aam
xor
push
mov
pop
hlt
dec
cmpsb
in
mov
dec
sub
aaa
stos
jg
pushf
or
jecxz
and
pop
jbe
les
sub
stos
jne
dec
roll
jnp
sarw
lock
mov
out
push
test
js
cli
mov
out
sbb
push
test
jns
es
in
js
stc
dec
mov
pusha
xchg
stc
jb
add
loop
jg
jb
clc
mov
add
mov
in
packuswb
mov
call
je
inc
stc
mov
int
fsubrs
pop
add
mov
fnstenv
jg
dec
je
mov
roll
mov
je
xchg
movsl
int
movsl
movsb
mov
fdivs
pop
fdivrl
mov
shl
jmp
ds
pop
clc
mov
mov
cltd
loop
mov
loop
fbld
iret
push
es
xor
fsubrl
loope
jae
inc
fwait
mov
inc
add
movsb
push
mov
fs
xchg
lds
sub
pop
jae
push
jb
xor
and
inc
jae
push
int3
stc
orl
out
cltd
adc
xchg
jmp
ds
in
jge
push
aad
leave
leave
loope
out
or
add
pop
mov
andl
in
clc
adc
arpl
xchg
in
jp
ret
or
or
rclb
mov
and
stc
data16
jecxz
out
inc
cmpsl
fdivs
fsubrp
mov
push
addl
popf
dec
test
sub
mov
adc
sbb
mov
xor
add
pusha
cs
xchg
push
adc
push
arpl
test
inc
js
in
aad
stos
mov
iret
leave
pop
jmp
aas
push
shlb
sti
bound
icebp
out
lods
adc
add
mov
orl
aas
mov
fdiv
sub
mov
and
les
lcall
inc
sarb
in
add
push
loop
daa
fidivrl
jecxz
loope
mov
fmulp
into
rolb
add
movsl
jbe
push
pop
jg
sub
in
in
mov
push
fwait
lcall
add
movsb
push
movsl
icebp
out
bound
fldenv
mov
cmp
pop
pushl
dec
mov
lock
jg
pop
mov
jb
fdivrl
ficomps
repnz
sub
or
mov
mov
dec
into
cltd
push
inc
and
push
xor
ficoml
mov
in
or
loop
clc
mov
xchg
orl
mov
xor
sub
rolb
outsb
call
jmp
fisttps
sbb
cmpsb
call
mov
xchg
dec
cld
negl
cld
xchg
mov
enter
fldl
push
out
in
jl
dec
adc
inc
mov
xchg
movsb
push
jo
xchg
sub
push
outsb
pop
push
pop
dec
sub
in
into
pop
ret
addr16
xor
pop
xorb
mov
push
sbb
pop
repz
stc
mov
lret
mov
loope
inc
pushl
es
out
bound
xchg
rclb
cmp
ss
das
and
mov
arpl
push
rcrb
inc
pop
je
add
mov
jge
aad
jbe
pop
cmp
roll
loopnew
subb
push
mov
inc
dec
mov
clc
xlat
mov
sbbl
mov
scas
loop
jne
out
ja
sbb
xor
stc
iret
ret
xor
mov
fmull
mov
lret
nop
dec
or
or
fisubrl
inc
sub
aam
sub
lret
add
or
adc
cmp
mov
mov
sub
mov
fldl
inc
imul
xor
pop
movsl
adc
cmpsl
jo
inc
movl
aaa
ret
xor
ds
adc
dec
das
mov
test
aam
sbb
enter
frstor
push
addr16
out
xor
loopne
sarb
das
fidivrl
lock
insl
dec
jmp
sahf
adc
sbb
divb
mov
mov
adc
cmpsl
sub
call
mov
jl
not
clc
aam
ret
es
mov
sbb
loop
hlt
add
push
popa
inc
and
nop
jl
sbb
sbb
pop
jle
xchg
ljmp
and
inc
push
add
stc
out
jg
xor
daa
jnp
rcll
add
sub
sbb
lcall
daa
imull
jle
jbe
iret
enter
mov
inc
testl
pop
mov
rclb
loopne
out
fldt
mov
movsl
cltd
xchg
arpl
add
jmp
jle,pt
add
and
mov
repnz
gs
test
bts
jnp
fsubrl
out
addb
push
sbb
push
adc
sbb
mov
cli
sbb
dec
or
fdivr
hlt
imul
test
pop
imul
mov
imul
dec
leave
xchg
cmpsb
mov
inc
mov
pop
dec
inc
mov
rcrb
push
xlat
ret
ja
pop
jg
stc
cmc
mov
lret
push
mov
roll
es
lret
in
xor
add
movsb
ljmp
xor
mov
pop
adc
cmp
or
inc
cmp
mov
add
add
mov
subl
mov
pop
mov
outsb
es
ret
cmpl
fsub
adc
push
les
lret
fisubrl
pop
pop
pop
sub
aaa
adc
mov
cmpb
jge
popf
add
test
cld
and
rclb
jnp
in
mov
nopl
pusha
inc
ljmp
jg
popf
xor
das
jb
clc
and
add
push
loop
repnz
fcoml
pop
sbb
sub
insb
mov
andps
loop
ret
ja
dec
lds
cld
ret
xchg
mul
lods
mov
inc
sub
xor
into
clc
outsb
bound
pop
jmp
sbb
push
mov
inc
xchg
aad
cmpsl
fisttps
lret
aam
or
pop
inc
fs
push
pop
xor
mov
cmp
lcall
aas
pusha
lods
addr16
test
pop
sbb
fidivs
xor
cmpsl
mov
sub
xchg
sbb
pop
enter
add
adc
test
dec
loopne
or
mov
inc
xlat
das
loop
movsl
scas
xor
test
mov
rcl
fsubrs
out
mov
pop
jp
inc
xor
adc
jle
push
imul
stos
pushl
js
sbb
shll
sub
xchg
mov
data16
mov
aad
mov
ss
pop
mov
jg
cltd
sub
dec
ja
lret
fstl
out
int
sti
fistl
xchg
aaa
les
and
outsb
lds
pop
test
push
mov
int3
adc
mov
ds
sarl
hlt
cmpb
jne
stos
les
jb
xlat
stc
xorl
cmp
jecxz
xchg
mov
jb
int
bound
outsl
adc
pop
xchg
or
mov
pushf
es
scas
andb
int
in
lcall
rcll
out
repnz
xchg
dec
mov
jno
push
movsl
cmpsl
dec
call
insl
rcrb
or
pop
icebp
movsl
inc
into
push
gs
cmpsb
push
xlat
mov
mov
cmp
leave
mov
cmp
dec
cmpsb
pop
dec
sub
aam
xchg
xor
inc
push
jbe
lret
mov
add
repz
subb
push
popf
xchg
pushf
ret
pop
stos
shr
lahf
sbb
xchg
ds
daa
movsl
sub
cmp
nop
mov
loopne
cli
aad
mov
lret
and
aad
mov
jecxz
aas
push
jo
pop
cmc
loopne
test
gs
push
pop
cmp
inc
clc
or
cwtl
or
data16
fiadds
outsl
sahf
mov
int
ret
bound
sub
outsl
mov
add
push
cmc
cmp
add
jmp
xchg
outsb
or
push
int3
enter
add
fsts
adc
mov
xchg
push
mov
fidivl
data16
ds
loop
ret
outsb
dec
cmpsb
repnz
fwait
loopne
dec
sti
add
mov
xchg
inc
jbe
xorl
int3
stos
mov
dec
lds
jmp
jg
je
scas
push
push
pop
lahf
cmpsl
inc
repnz
shlb
push
add
dec
jmp
sub
adc
aad
cmc
xlat
jl
xchg
icebp
nop
push
pop
and
cld
mov
xchg
daa
add
jecxz
jecxz
outsl
inc
mov
and
push
fs
jno
pop
in
xchg
das
dec
mov
fiaddl
mov
into
fisubl
push
rorb
daa
dec
iret
fistl
cmp
jo
fisubl
loop
mov
lret
cmc
mov
fidivrl
sub
cmp
pop
jns
pop
mov
sub
repz
pop
idiv
cld
and
jo
inc
filds
jmp
xchg
xchg
clc
lcall
mov
xchg
pop
mov
loope
xchg
adc
ja
cltd
inc
adc
xor
xor
jecxz
sub
xchg
sahf
loop
xchg
test
cmp
jge
xor
dec
aas
push
ror
push
pop
push
ficoms
sub
push
sahf
sbb
fwait
scas
lret
rcr
jmp
jle
cli
arpl
push
repz
fdivl
hlt
mov
insb
aas
sbb
test
jl
imull
repnz
jnp
cli
adc
or
scas
add
dec
cmpsl
arpl
pop
or
fstl
lock
add
add
cmp
clc
xchg
sbb
xchg
out
stos
sub
dec
outsb
fnsave
out
cld
popf
movsb
les
sbb
iret
sbb
cmp
mov
sbb
shld
pushl
jp
inc
jae
sbb
jne
pop
inc
cmp
inc
stos
cmp
cmpsl
out
dec
ljmp
add
sahf
out
aas
pop
and
mov
ret
rcrb
mov
sub
leave
in
sbb
loopne
cltd
aam
mov
or
fldt
iret
in
out
and
jnp
outsb
sub
mov
and
mov
and
iret
jno
mov
xchg
sahf
sbb
mov
in
push
adc
push
aad
fildll
hlt
or
out
push
repz
xchg
lods
ss
jnp
fwait
pop
fadds
int
jns
stos
or
push
outsb
pop
mov
sub
test
mov
fnsave
jo
shll
push
cltd
add
sahf
jne
pop
or
rcrl
xor
divl
mov
inc
and
fsubrl
or
ss
cmp
mov
xor
das
repz
cwtl
push
int
inc
dec
sbb
and
inc
ret
cmp
cld
adc
icebp
inc
fcmove
and
fs
outsl
jg
loop
pop
add
pop
fst
add
lea
call
out
and
push
je
clc
outsb
jno
xlat
jmp
push
jo
cmpsb
or
in
ss
xchg
outsl
enter
or
call
push
out
rorl
lahf
mov
inc
lret
iret
push
sub
add
aas
add
mov
pop
xor
sbb
mov
lcall
cmc
adc
orl
out
dec
addr16
or
pusha
iret
mov
dec
ds
fstp
cmp
lock
sub
jbe
mov
and
mov
popf
rcrb
jns
xlat
movsl
xchg
sub
scas
xor
int
inc
outsl
iret
setbe
jno
arpl
pop
push
fs
jmp
jno
popa
test
jb
lahf
cmp
mov
mov
xchg
xchg
dec
in
dec
mov
sbb
or
scas
ror
cmp
pop
lcall
add
push
pop
pop
mov
and
bound
inc
ret
fists
or
lcall
jae
lahf
repnz
mov
add
adc
mov
subb
xchg
mov
dec
inc
mov
stos
pop
fnsave
daa
shlb
insb
inc
mov
mov
aam
ja
dec
data16
inc
ds
mov
inc
dec
dec
lret
mov
sbb
sbb
jg
sub
pop
add
mov
adcl
xor
fmull
mov
sbb
addr16
jnp
fidivrs
sahf
cmp
repz
lods
jno
push
imul
lret
mov
int3
sub
sbb
test
mov
leave
sub
data16
mov
inc
or
jmp
popa
cmp
push
out
pop
sub
xchg
lret
dec
adc
jl
jb
sub
ds
or
xchg
inc
jae
sarl
neg
idivb
mov
in
addl
outsl
push
fisubrs
sbb
out
nop
or
sbb
adc
jle
adc
jnp
push
sub
adc
lods
xchg
scas
imul
or
jns
push
inc
dec
jbe
lret
jns
mov
fstps
cli
fwait
and
adc
lock
test
xchg
sub
fcmovne
je
repz
or
cmpl
adc
pop
or
sub
push
ret
mov
adc
rcrb
stos
cld
aaa
out
fcmovnbe
sub
xchg
decb
jns
xchg
cmp
test
stc
jae
mulb
clc
mov
mov
cmp
push
cmp
mov
cs
jg
pop
test
lcall
out
sbb
outsb
jmp
mov
loope
inc
cmp
adcb
or
ss
loope
inc
in
lret
xor
jl
jmp
popf
hlt
lret
out
push
scas
test
mov
aaa
sarl
mov
ret
leave
rcrl
mov
pop
in
dec
ljmp
fcompl
sub
int3
addr16
les
lret
inc
xlat
push
and
xchg
jae
push
adc
and
test
xlat
jo
inc
adc
jecxz
mov
lock
cmp
mov
inc
xchg
xchg
mov
in
or
pop
rorb
and
adc
pusha
call
push
cmp
or
pop
rorb
and
adc
pusha
call
push
cmp
or
pop
rorb
clc
test
cwtl
add
jo
pusha
lret
mov
or
fadds
rolb
push
lcall
pusha
daa
mov
adc
mull
movsb
cli
imul
or
jl
imul
mov
test
mov
fldl2e
leave
cli
imul
or
jns
or
jp
mov
lcall
mov
cli
cmp
push
xor
clc
mov
jmp
or
lret
xchg
sub
push
jg
mov
sbb
js
mov
sbb
dec
push
and
mov
sub
mov
aas
clc
mov
cmp
sub
sarb
jno
cwtl
or
not
in
ljmp
stos
xchg
push
repz
lahf
rcrl
in
fdivrl
fsubs
add
or
imulb
and
dec
xchg
mov
cmp
push
gs
dec
inc
push
lret
push
popf
incl
dec
out
or
mov
cmpsb
or
test
inc
je
adc
lahf
xor
sarl
sbb
or
cld
pop
imul
cltd
stos
in
stc
lret
fldl2e
jno
lret
or
cmp
dec
ja
pop
push
adc
in
lcall
pushf
fcmove
movsb
test
pop
outsl
push
jl
sub
sub
mov
cwtl
fisubrs
mov
add
outsl
jl
gs
or
or
sub
or
lret
ret
lcall
lret
fldl2e
leave
cli
cmp
sub
sbb
or
jns
imul
mov
mov
fldl2e
leave
cli
cmp
sub
sbb
or
jns
imul
mov
xor
std
mov
xchg
xchg
lods
cmp
call
in
mov
cli
repz
outsl
mov
mov
in
cwtl
add
jl
ret
nop
push
lods
mull
arpl
rclb
jle
into
mov
rorb
xchg
pop
je
inc
jno
gs
outsb
adc
add
xor
mov
pop
or
dec
jnp
mov
push
xorb
lret
jns
mov
int
jmp
aaa
xchg
mov
xchg
jbe
idivb
xchg
and
ds
scas
jns
loop
lock
loop
dec
jmp
scas
pusha
daa
inc
out
xor
sub
int
and
scas
jp
pop
sub
inc
divb
and
and
sub
aad
sahf
mov
int
xchg
sub
popa
xchg
insb
outsl
push
mov
mov
data16
or
and
aaa
loope
popa
mov
or
mov
psllq
mov
ss
and
xchg
pop
rcl
ss
xchg
pushf
aam
test
cmpsb
jmp
mov
mov
or
dec
insl
sbb
fcmove
xor
fistps
ja
rcll
out
cmp
into
lods
js
mov
out
jo
push
lcall
inc
push
pop
out
fisttps
fsubrs
jnp
dec
addr16
fs
enter
xchg
mov
pop
pusha
scas
xor
push
jecxz
push
addb
push
xor
push
mov
bound
pop
xchg
stos
push
ret
cmp
adc
dec
shlb
inc
or
out
adc
ret
mov
outsl
loopne
pop
jge
outsb
push
repz
movsb
mov
inc
sub
inc
jo
dec
ret
aas
pop
xchg
fwait
push
mov
jbe
mov
mov
movsl
push
mov
push
pop
xchg
jbe
movsl
dec
out
jne
outsl
test
sbb
test
ret
jle
jo
arpl
jecxz
jb
xchg
jbe
or
cwtl
push
sbb
adc
std
pop
dec
or
clc
repnz
cmpsl
ss
fs
sbb
in
dec
outsl
xchg
cmp
pop
mov
adc
inc
inc
push
js
arpl
xor
push
movsb
loop
call
and
cmc
adc
andb
popa
data16
mov
inc
sub
xor
jo
add
cld
mov
bndldx
fnstenv
sahf
jno
mov
adc
cmp
push
xor
pop
sbb
dec
cmp
cmpb
push
mov
jne
leave
scas
dec
add
pop
cmp
xor
mov
push
mov
jae
cwtl
pop
adc
shll
ror
push
and
bound
mov
fnsave
push
jecxz
lcall
icebp
hlt
push
inc
dec
or
std
stc
fs
jmp
cmpsl
jl
movsl
cmp
scas
arpl
push
xlat
or
nop
shl
into
cmc
push
mov
mov
mov
out
or
lcall
cmp
aam
pop
jae
mov
loope
scas
daa
es
ss
cli
stos
sbb
fdivrl
lahf
cmp
xchg
mov
fisubs
ja
and
jecxz
fnstcw
jo
push
jo
cwtl
mov
pop
mov
sbb
or
dec
xchg
xor
fadds
jg
out
out
jns
sub
test
andb
sub
test
mov
dec
popf
adc
lret
dec
mov
notl
jle
add
pop
or
sbb
andl
repz
test
push
call
das
shlb
les
filds
xchg
clc
inc
jo
jp
ret
cli
ret
cmc
cmp
push
and
cmp
inc
inc
mov
std
rolb
jbe
cmp
mov
loope
inc
mov
into
daa
xor
add
test
sub
mov
int3
mulb
xor
cmp
outsl
lret
scas
fcmovb
push
outsb
filds
inc
out
int
pusha
popl
les
and
data16
lcall
stc
jne
jbe
pop
sbb
push
jae
hlt
iret
cmp
sbb
hlt
lret
iret
jns
pop
pop
inc
fistl
ljmp
lret
xor
add
and
mov
push
insl
pop
sub
adc
rolb
mov
les
dec
aad
mov
jle
imul
and
inc
clc
loop
add
mov
push
or
jecxz
inc
mov
notl
pop
push
in
and
fs
adc
mov
lahf
pop
push
mov
or
or
inc
insl
ds
pop
dec
xchg
test
push
mov
aas
ja
mov
add
sub
fcoml
jle
xchg
pop
add
mov
pop
mov
sbb
push
mov
cltd
outsb
out
imul
mov
sub
mov
ffreep
dec
repz
sbb
iret
add
mov
div
bound
cmp
mov
xor
sub
xchg
inc
or
add
bound
cmovbe
and
xor
call
cmpsb
addr16
fiaddl
shr
inc
sbb
sub
mov
push
lods
aam
shl
sub
mov
sub
push
stos
ficomps
mov
dec
out
pop
dec
mov
push
push
add
or
or
mov
test
and
jae
sbb
out
ja
hlt
es
sub
jecxz
cmp
adc
mov
pop
pop
repnz
jecxz
xlat
mov
push
leave
aaa
cmp
xchg
push
inc
cltd
iret
mov
inc
mov
ss
pusha
in
scas
push
mov
adc
sub
sbb
xchg
inc
pop
inc
mov
cmp
jb
mov
cltd
push
divl
das
xchg
xorl
bound
aas
fs
insb
outsl
ss
jl
mov
cmp
faddl
xor
test
ja
lds
xchg
dec
leave
loope
push
lret
inc
mov
outsl
dec
and
pushf
mov
in
aaa
arpl
lods
cld
pop
push
and
or
sbb
flds
add
int
fnstsw
and
cmp
clc
call
jo
loope
push
or
or
and
repnz
push
mov
je
mov
xorl
push
and
xor
xchg
mov
pusha
push
mov
sbb
decl
cld
divb
in
rcrb
lcall
adc
dec
mov
pusha
push
jbe
xor
mov
jne
xchg
jns
daa
andl
xchg
xchg
lcall
or
mov
xchg
es
lock
jl
loope
fcos
sarl
dec
push
lahf
mov
jnp
cmp
jbe
in
testl
mov
test
sbb
push
pop
add
push
xor
dec
xchg
into
dec
daa
imul
push
out
aad
xchg
mov
jae
cltd
mov
fsubl
outsl
sbb
lret
data16
orl
add
ljmp
xchg
pop
ret
ljmp
inc
add
jg
and
dec
loopne
nop
or
and
test
icebp
mov
repnz
daa
inc
or
popf
push
jne
xchg
xor
out
stc
xchg
cmp
or
mov
nop
rolb
sarl
push
fiadds
shlb
adc
test
loopne
sar
arpl
leave
nop
and
xchg
dec
filds
xor
icebp
sub
push
push
cmp
inc
test
cmp
sub
lahf
xor
repz
fs
pop
inc
and
sbb
movb
aad
out
inc
xlat
add
jg
enter
pushf
or
push
dec
mov
push
inc
dec
aaa
jle
dec
or
adc
cs
insl
jecxz
loope
fninit
jo
enter
push
add
sbb
dec
push
clc
sbb
lret
mov
inc
push
mov
push
addr16
lea
mov
jnp
pop
mov
jnp
pop
dec
or
loope
cwtl
das
icebp
rcrb
popf
pop
insl
mov
xor
jns
xchg
subb
jp
in
rep
dec
insb
sbb
mov
sti
in
xchg
test
in
insl
sub
lret
inc
shl
push
or
mov
scas
adc
das
xchg
rcrb
mov
xchg
scas
aad
mov
pop
xorb
add
stos
cmp
mov
mov
clc
pop
cmpsl
shl
iret
mov
movups
loope
aaa
nop
xchg
mov
push
sub
in
mov
pushf
jmp
fsubl
push
xor
inc
dec
cltd
in
xor
lahf
mov
push
mov
xchg
shrl
cmpsb
xchg
mov
clc
cli
or
inc
dec
roll
mov
jae
dec
pusha
mov
xchg
sbb
cmp
cld
and
pop
fxch
in
jle
mov
push
lcall
adc
adc
adc
push
sub
mov
or
inc
cmpunordps
pop
fcoml
pushf
repnz
pop
ror
add
ret
adc
push
lds
decb
addb
sub
stc
adc
xor
dec
xor
push
sbb
out
jo
js
test
test
cmp
std
add
call
jae
push
mov
pop
mov
cmp
repz
mov
add
into
adc
jno
jg
test
add
daa
jns
fidivrl
xlat
hlt
clc
xchg
aas
xchg
push
popf
incl
pop
pop
jg
shlb
enter
and
xor
pop
in
xor
xchg
out
stos
or
mov
outsb
cmpsl
dec
gs
inc
sahf
push
and
jb
sub
aad
push
pop
add
orb
cltd
xchg
mov
gs
popa
rcr
push
sub
pop
inc
inc
pusha
icebp
mov
mov
aaa
ds
sahf
popf
jno
sbb
dec
pop
jns
xor
xchg
out
add
insb
ret
aad
addl
cmp
aas
mov
sbb
out
and
mov
imul
jne
mov
lcall
cmp
jbe
mov
jbe
nop
cmp
xor
addr16
xchg
scas
push
orl
and
mov
and
filds
inc
jns
mov
cltd
stos
rclb
jp
xor
cs
fmul
ss
jo
adc
mov
into
xor
mov
mov
test
shlb
adc
movsb
divb
lcall
xchg
cli
mov
les
mov
inc
push
arpl
and
into
dec
xchg
sbb
fcompl
jns
ja
mov
and
pop
hlt
dec
incl
mov
add
negb
enter
and
dec
in
mov
imul
sub
in
dec
movb
das
popf
lret
mov
idiv
dec
xchg
adc
and
pop
scas
and
test
sahf
and
push
dec
loopne
hlt
fstpt
daa
aam
or
scas
inc
mov
xchg
icebp
mov
arpl
inc
xor
lret
call
cmp
xor
ss
mov
push
icebp
add
rorb
sub
call
imul
lock
movsb
ja
ror
cwtl
aam
pop
fidivs
add
or
jp
pop
test
push
sub
je
dec
fistpl
sbb
mov
xor
pop
mov
andb
sub
cmpsl
jmp
sbb
faddl
scas
rol
icebp
jmp
movsl
lret
mov
pop
jl
push
add
cmp
aas
jmp
cltd
std
inc
adc
ja
adc
sar
iret
dec
int3
or
inc
inc
push
adc
imul
jnp
fwait
dec
and
lods
fsubr
mov
mov
mov
push
or
fisubs
and
cmp
in
imul
sub
or
sub
inc
test
mov
lcall
inc
sbb
xchg
imul
mov
outsb
lods
cmp
pop
mov
mov
sahf
sub
pmaddwd
dec
xchg
ds
andb
outsb
out
inc
sbb
inc
test
cmp
jb
mov
push
lahf
aas
es
imulb
fcomps
and
push
push
or
mulb
mov
rol
mov
rol
mov
ss
rclb
mov
mov
gs
shlb
sub
push
mov
sbb
sbbb
push
jle
mov
cmp
rorl
sub
mov
cmp
and
iret
mov
in
stc
inc
cmp
in
test
cmpsl
jbe
ret
cmpsb
cmp
xchg
add
inc
pop
out
fwait
pop
push
cmpsl
shrb
xor
movb
pop
xlat
insl
xchg
cltd
push
and
dec
xchg
faddl
sub
inc
cmpl
clc
dec
call
pop
ljmp
push
push
mov
prefetcht1
jg
rcl
cmp
ja
insb
mov
testb
fwait
addr16
in
into
in
jecxz
xchg
xor
loop
fldenv
int3
xor
cmpb
js
mov
stos
lea
int
vpsrlw
out
mov
hlt
inc
and
adc
out
out
sbb
ss
jae
shll
or
xchg
xchg
pop
stc
and
pop
and
jge
sbb
push
mov
xor
arpl
mov
incb
mov
inc
imull
adc
roll
mov
insb
bound
les
cmc
mov
mov
scas
mov
outsl
jg
sbb
out
jmp
lds
roll
repz
inc
inc
xor
pop
fdivrl
fwait
inc
scas
inc
lret
in
out
stos
fldcw
lods
leave
or
aam
les
sub
into
sbb
sbb
mull
cli
cmp
ret
and
xchg
out
adc
int
cli
repz
aaa
pop
push
enter
fisttpll
jae
mov
mov
mov
scas
out
scas
mov
shlb
dec
mov
lahf
in
cmp
pushl
lds
dec
or
loopne
lret
and
in
add
add
clc
lods
and
test
mov
xchg
mov
adc
aam
inc
lods
sub
dec
cli
mov
jae
pop
sti
test
pushf
mov
xchg
sbb
add
or
int3
cmp
or
push
roll
ljmp
lea
mov
sub
mov
push
cmpsb
cmp
leave
mov
lcall
mov
pop
in
add
jns
push
pop
shl
lcall
cmp
leave
xchg
std
popa
pop
imul
cmp
pushf
cmp
fdivrl
loope
mov
lods
js
jne
imul
out
pop
jbe
fstpt
jb
or
push
fildl
inc
and
shl
test
push
fmulp
or
ret
fstl
pop
scas
in
jo
daa
dec
in
dec
inc
test
cmp
inc
les
es
inc
orb
add
adc
insl
roll
push
int
fwait
inc
add
das
in
add
sub
vmwrite
movsb
outsb
data16
addr16
cmp
xor
ljmp
shlb
sti
mov
hlt
and
frstor
addr16
in
push
lret
test
repnz
shlb
sub
cmp
cmp
xchg
mov
cmpl
aad
mov
xchg
add
sbb
sub
sub
shl
and
push
xor
repnz
pop
mov
stc
push
std
mov
stos
xchg
inc
mov
xor
and
jmp
jbe
data16
pop
scas
cmc
mov
or
adc
push
xchg
and
outsb
cmp
push
mov
sub
add
cltd
add
stc
out
push
xchg
jge
sbb
sti
testb
adc
std
dec
mov
subl
lods
ljmp
bound
mov
js
into
mov
into
cmp
movsl
lods
lods
stos
xor
in
jno
cmc
mov
xor
push
pusha
leave
push
ss
push
rorb
cmp
push
add
adc
repz
pop
testb
adc
gs
lock
add
xchg
push
jne
sbb
adc
jne
dec
or
inc
xlat
sub
sub
out
lahf
mov
dec
dec
sbb
loopne
adc
sub
xchg
pop
lods
mov
aaa
addr16
xor
cmp
mov
mov
mov
fadd
lahf
xchg
ret
xor
arpl
inc
pop
lcall
xchg
icebp
lahf
cmp
push
cmp
aaa
loopne
inc
or
jp
data16
nop
outsb
loope
sahf
push
sbb
cmp
xor
nop
cmp
mov
pop
insb
inc
jnp
or
jmp
ret
push
mov
adc
out
mov
xor
mov
xlat
jb
in
idivl
cltd
and
jno
dec
cwtl
xchg
add
mov
fwait
inc
jb
paddq
mov
pmaxub
fdivrp
rorl
das
adc
icebp
loopne
pop
mov
shl
movsl
inc
cmp
add
mov
cmpb
adc
sub
add
sti
repnz
and
insl
loop
cmp
pop
data16
xchg
cmpsl
adc
cmpsl
cmp
mov
jl
inc
push
mov
loope
jge
sti
lret
std
xchg
fsubrs
mov
scas
dec
xor
out
pop
push
repnz
push
add
lcall
dec
shll
jmp
or
stc
adc
test
mov
inc
jb
lret
fsubrs
sbb
fildll
lock
insb
sti
daa
cmp
int3
mov
sub
hlt
ret
fistl
repnz
int
sbb
das
fildll
adc
mov
or
int
sub
mov
inc
add
or
or
adc
roll
cli
addr16
das
add
pop
in
cmp
mov
jo
push
dec
aad
jg
adc
das
mov
fs
fiadds
in
movsb
and
test
jle
imul
shrl
cmpsl
jecxz
decl
or
mov
divb
or
inc
mov
push
mov
ja
inc
jecxz
aam
cli
jbe
fisttpll
xor
fisttpl
sub
push
sarb
push
and
movsb
outsl
push
cmp
clc
cli
pop
scas
imul
ret
popf
stos
imul
cli
xchg
lock
push
mov
push
inc
sub
mov
mov
sub
jae
cmp
push
insl
daa
mov
sbb
cmc
in
mov
repnz
xchg
mov
add
push
mov
sbb
jne
stos
std
dec
xor
andb
pop
movsb
push
xchg
dec
bound
cmpsl
dec
fsubl
xchg
push
lds
mov
lds
ud0
mov
cmpsl
sub
fstl
test
add
loopne
cmpsl
pop
mov
negb
rolb
cmp
cmp
repz
and
cld
mov
jo
pop
pop
gs
push
adc
ret
enter
mov
sbb
sbbb
and
pop
fs
pop
js
js
xor
orl
adc
cmpsl
push
mov
outsl
push
loopne
mov
push
clc
es
cld
or
movsl
dec
dec
push
xchg
arpl
push
lea
mov
sub
fwait
xor
aas
inc
push
stos
push
add
lods
pop
adc
repz
cmp
add
add
pop
out
movsb
fs
sbb
mov
inc
add
sub
inc
cmc
loop
dec
cmpsl
lock
outsb
cmp
out
xchg
dec
or
push
arpl
iret
push
rolb
mov
notb
into
inc
cmp
or
mov
sbb
adc
pop
cmp
shlb
dec
xor
ljmp
popa
cli
lret
mov
inc
jne
jmp
nop
aam
adc
inc
out
sahf
pop
cwtl
sar
testb
mov
inc
xchg
movsl
cmp
push
das
not
mov
sbb
rcrl
sub
mov
lcall
gs
shll
or
lret
dec
xchg
push
mov
mov
mov
ds
sbb
cmp
test
jns
lcall
and
sub
fucomi
jmp
mov
in
leave
push
enter
push
inc
orl
testb
and
lock
mov
repnz
fiadds
xor
iret
lds
cmc
pop
enter
outsl
dec
scas
or
repnz
es
xchg
xor
shrl
jmp
mov
popf
inc
jne
loope
push
repz
dec
mov
into
shll
cmc
fildll
scas
negb
mov
cmpsb
iret
notl
insl
es
add
das
je
jno
add
push
lock
mov
xlat
enter
je
jno
outsl
ds
sti
jae
mov
mov
mov
pop
ljmp
fs
ja
add
sbb
mov
xor
popf
aaa
jl
ss
pushf
and
nop
xor
dec
add
inc
pop
mov
das
mov
stos
pop
sbb
pop
ret
cld
icebp
fisttps
xor
xchg
lods
je
repz
gs
cmp
mov
xor
out
and
adc
test
mov
test
int3
subl
sub
repnz
arpl
pop
lcall
jmp
cli
cmp
sub
sbb
or
jns
imul
mov
mov
fldl2e
leave
cli
cmp
sub
sbb
or
jns
imul
mov
mov
fldl2e
enter
sub
adc
or
pop
pop
push
jp
mov
mov
fldl2e
dec
cli
cmp
mov
sub
dec
push
ret
cmpsb
xchg
mov
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
mov
cmp
jmp
test
add
push
add
add
add
add
or
add
test
lret
add
add
add
add
add
add
dec
add
or
add
add
roll
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
mov
repz
add
add
add
add
add
arpl
testb
add
add
add
add
add
add
add
data16
add
mov
add
add
add
add
add
add
add
aaa
add
jno
roll
add
sbb
inc
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
xor
jae
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
mov
xor
cmp
or
mov
flds
jae
inc
add
add
add
add
add
pop
add
add
test
xor
xor
pop
add
int
stos
add
add
rolb
add
add
mov
add
lock
add
add
add
add
add
add
add
out
add
add
add
sub
data16
test
fadds
mov
flds
flds
fiaddl
push
add
add
add
add
add
lea
mov
cmp
roll
add
leave
add
add
roll
add
add
add
add
add
testb
add
add
add
add
add
add
add
add
sbb
inc
add
mov
add
add
add
add
add
add
add
add
lldt
add
add
add
add
add
outsb
add
add
roll
add
add
xor
dec
add
add
testb
add
add
add
dec
add
add
add
add
xor
rolb
ljmp
add
add
xchg
add
add
add
add
add
add
cmp
into
add
add
cmp
add
add
add
add
add
data16
add
add
add
add
add
add
add
xor
rolb
and
xchg
add
add
add
add
add
add
add
flds
roll
dec
add
ljmp
add
add
add
add
jo
imul
mov
mov
add
add
add
add
add
add
add
add
add
add
in
add
add
add
add
testl
incb
mov
addb
add
add
add
dec
add
add
jl
or
and
filds
roll
in
mov
imul
sub
jp
iret
ja
mov
push
out
push
mov
fisttps
pusha
sbb
lea
icebp
mov
daa
clc
dec
pop
or
orb
adc
insb
out
pop
mov
xlat
in
mov
jns
nop
mov
fldenv
lahf
arpl
sub
mov
dec
cmc
pushf
dec
aad
ja
rcrb
repnz
mov
out
add
lcall
inc
adcl
inc
aad
aas
mov
lock
int3
mov
bound
mov
add
cmpsl
mov
xor
pushf
or
imul
push
dec
stos
into
test
insl
ret
lahf
test
push
cmpsb
jmp
and
ljmp
arpl
loope
pop
dec
push
arpl
in
xor
dec
add
iret
push
in
sbb
inc
pop
adc
fwait
or
jne
imul
pop
loopne
and
mov
cmp
leave
fstpt
mov
adc
mov
icebp
in
lahf
push
mov
add
mov
rcrl
mov
cmp
sahf
sbb
jge
out
repz
xchg
xchg
js
add
insl
xchg
rolb
xchg
sbbb
mov
test
push
jno
xor
push
rorl
xor
lods
pusha
fstl
mov
or
rclb
loope
add
cmc
mov
adc
xchg
mov
mov
sub
roll
pop
push
outsl
jp
test
inc
shlb
fdivs
out
divl
test
jbe
movsl
jmp
ljmp
fwait
ss
pusha
xor
mov
lods
push
add
or
pusha
pop
xor
in
xor
lods
leave
loop
jge
xorb
push
rcl
bnd
repnz
lahf
xor
test
loope
xor
sar
mov
loop
or
shl
cmp
add
lods
nop
dec
bound
insl
popf
stos
ret
jb
mov
xchg
outsl
or
cwtl
movsl
lahf
jo
cmp
mov
jb
ficoml
insb
ds
push
enter
push
sub
and
dec
clc
xchg
and
dec
leave
sub
cwtl
stos
add
cmp
repnz
pop
sbb
fsubs
xor
pop
inc
lret
aas
dec
jl
mov
outsb
lret
dec
or
fistps
ficompl
fs
imul
mov
cmpsb
mov
push
ret
daa
cmp
sarb
sub
xchg
pop
xchg
mov
jne
cli
push
cs
xlat
out
lret
sub
addr16
jne
fdivrs
das
xchg
and
ds
or
mov
es
les
pop
jecxz
mov
cmp
mov
and
les
cwtl
push
cmp
or
int
mov
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
