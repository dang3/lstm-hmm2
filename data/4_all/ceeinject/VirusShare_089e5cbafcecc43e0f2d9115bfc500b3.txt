fsubr
loopne
decl
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
fs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
push
push
push
push
call
push
lea
push
push
call
add
leave
ret
pop
inc
dec
pop
jp
push
sbb
js
sbb
add
xchg
add
fdivr
xlat
ljmp
cmpsl
mov
push
push
addr16
sbb
or
cmp
sub
fcmovb
lret
out
ljmp
cmpsl
stos
mov
loope
xchg
call
aaa
push
and
sub
xchg
xchg
icebp
out
aad
shll
push
push
jp
add
push
or
out
loopne
add
popf
dec
stc
sub
pop
mov
mov
mov
cli
adc
mov
mov
cmp
cmpsl
gs
enter
cli
movsb
das
femms
jl
shr
dec
out
xor
sbb
lret
out
or
jae
jo
inc
and
arpl
daa
vcvtsi2sdl
jle
adc
gs
mov
mov
xchg
inc
stos
pop
lcall
mov
mov
cmp
scas
pop
fucomip
mov
movsl
mov
xchg
cmpsl
in
jecxz
lds
ss
xor
popf
pop
out
mov
lret
sbb
jp
push
incb
jb
cmp
mov
mov
fcmove
sarb
stos
test
inc
cmp
push
or
sbb
fs
push
sub
test
xchg
call
ror
ficoms
add
adc
adc
sbb
outsl
inc
iret
dec
jg
mov
mov
jecxz
in
rol
jmp
ss
mov
or
sbb
or
cmp
sub
fcmovb
lret
out
negl
cmpsl
stos
mov
inc
dec
push
jp
push
sbb
or
cmp
sub
fcmovb
lret
out
negl
cmpsl
stos
mov
inc
in
add
pusha
loop
push
mov
lods
cltd
jbe
arpl
popa
outsb
sub
decl
push
cwtl
or
adc
xor
pop
pop
test
pop
jae
pop
add
add
inc
call
add
scas
shlb
jmp
push
sub
bound
pusha
or
sub
sbb
data16
ret
mov
cmpsl
ds
dec
mov
cmpsb
dec
dec
int3
js
mov
sbb
or
mov
icebp
mov
and
dec
jl
jg
repz
les
jecxz
inc
cwtl
or
movsb
cld
push
push
mov
and
lcall
ret
enter
sub
push
adc
repz
and
fstps
rcr
jecxz
pop
and
mov
loope
mov
lahf
jns
inc
mov
inc
push
loope
dec
cmovl
js
add
mov
dec
xlat
test
and
int
pusha
dec
iret
cmp
xchg
nop
roll
jle
fstps
xchg
movsl
imul
fdivrs
movsb
pop
je
lret
popf
inc
xor
cltd
icebp
or
je
lock
sbb
ret
lcall
roll
fldcw
int
xchg
dec
std
xchg
push
mov
fdivs
test
pop
lret
sub
mov
stos
or
xor
xchg
popf
sbb
mov
add
and
inc
ds
push
stc
jb
dec
cmc
jle
outsl
or
push
mov
ficompl
in
ljmp
call
lret
mov
loopne
jp
xor
xchg
pop
movsl
rol
push
enter
lcall
je
dec
add
movsl
lret
sub
mov
in
mov
pop
outsb
jne
repnz
sarb
jmp
and
clc
aad
push
cmpsl
mov
dec
push
adc
in
rep
and
add
arpl
mov
mov
cmp
jb,pt
lock
insl
aas
inc
scas
jecxz
stc
xchg
xchg
xor
mov
and
dec
cmpl
pop
sbb
jbe
jo
mov
dec
pop
ljmp
std
jecxz
mov
test
jge
xchg
add
xchg
mov
outsb
icebp
cmpsl
stos
call
cmpb
cs
pop
mov
aad
pop
out
jae
mov
push
inc
pop
inc
xor
mov
dec
push
jl
adc
mov
sub
cmpsb
fwait
adc
in
adc
cmp
mov
dec
nop
pop
pop
cwtl
lods
aam
jmp
or
dec
pop
cmc
daa
mov
or
jns
mov
xchg
cltd
gs
mov
push
cmp
push
rcl
cmp
iret
dec
mov
ds
mov
mov
in
sbb
es
xchg
add
mov
mov
out
pop
call
nop
pop
stos
filds
adc
push
ret
popa
xor
fdivs
jmp
add
and
add
stc
movb
shr
pop
xchg
push
repnz
sbb
inc
lods
out
dec
adc
xchg
adc
out
xchg
fmuls
cli
adc
ja
sbb
pop
fnsave
ja
sarl
into
dec
adc
in
aad
into
fsubs
push
mov
adc
add
mov
or
aad
ror
aaa
jg
aad
int
xchg
fimuls
out
xchg
leave
xor
jo
cmpsb
sbb
adcl
aaa
dec
imul
leave
xchg
xor
xor
push
aam
adcb
test
popf
cmp
fstps
out
pop
push
and
or
xchg
js
xorb
and
cmp
data16
xlat
shll
leave
mov
mov
cmp
push
dec
les
mov
js
push
popa
fisttpl
xor
xor
sub
in
mov
arpl
pop
rcrb
pop
jl
mov
cmp
pop
mov
xlat
data16
mov
fstps
sbb
xor
mov
and
jmp
mov
mov
dec
insl
dec
xlat
loopne
push
sahf
jnp
push
std
mov
or
je
push
out
mov
inc
cmp
leave
pusha
stos
movsl
jp
cmp
or
movsl
negb
repnz
dec
pop
sub
or
jb
push
inc
pop
icebp
loop
idivl
movsb
das
das
or
dec
inc
add
inc
mov
cmp
jne
shll
sbb
call
or
in
sbb
xchg
aad
loop
jbe
push
or
jge
dec
adc
jp
push
aad
cmp
jne
cld
popl
inc
movsl
cmpsl
inc
leave
push
cli
xor
outsb
add
in
or
out
ds
jae
dec
orl
cmpb
pop
adc
imul
jne
add
xor
xchg
stc
mov
add
add
dec
mov
fs
xchg
mov
add
scas
adc
enter
stos
icebp
lds
sub
inc
in
stos
push
jl
sbb
mov
iret
add
scas
or
xor
hlt
test
xchg
cs
pop
or
dec
data16
cmp
dec
cld
mov
and
insb
or
mov
add
mov
testl
fwait
loop
das
fcoms
mov
adc
jge
dec
pop
out
pusha
arpl
sub
cmp
out
jle
call
lods
imul
out
negl
and
push
pop
jb
push
inc
cltd
pop
lret
inc
outsb
js
jmp
mov
and
mulb
insb
icebp
stos
insb
js
das
call
decl
fldz
inc
pop
aam
leave
sbb
cmp
cmpsb
loop
xchg
or
push
andb
adc
xor
push
fcmovnu
or
loope
das
jl
out
sbb
inc
push
das
fistl
movl
loope
stos
mov
xchg
push
xor
push
or
sbb
xor
dec
pop
dec
mov
dec
jno
repnz
std
cmc
push
lret
xor
sbb
sub
mov
enter
pushf
dec
arpl
push
ret
adc
cmp
inc
stos
pop
out
mov
xchg
xchg
pop
and
sahf
in
fidivs
insl
mov
inc
loop
ss
fldl
leave
push
xchg
and
mov
or
fwait
xor
jbe
loope
xchg
mov
ss
test
or
inc
cmp
mov
xchg
std
fidivl
cmp
faddp
mov
decb
stos
in
jnp
sbb
dec
or
push
xor
adc
mov
popf
faddl
pop
inc
sbb
icebp
andb
ret
xor
movsl
test
sub
adc
out
mov
pop
push
add
lock
testl
jle
scas
enter
pop
clc
rol
add
iret
xor
cli
jnp
inc
push
popa
inc
xor
shrl
jmp
mov
loope
lret
mov
cmp
mov
inc
mov
inc
sub
inc
jmp
fucomp
cmpl
mov
add
insb
fs
dec
inc
test
jge
dec
iret
ret
lds
xchg
data16
negb
push
testb
pop
cli
cli
xchg
ret
filds
imul
les
popf
cmp
pop
aaa
push
outsb
loop
repnz
mov
dec
or
pusha
adc
mov
xchg
into
loop
cmp
inc
in
call
pusha
push
mov
dec
cmpsb
and
cltd
or
ret
lret
cld
movsl
pop
lea
enter
dec
ds
nop
bound
jl
ret
push
in
mov
push
adc
and
repnz
push
jmp
cwtl
xor
ja
cli
sub
clc
fmuls
ret
out
aaa
lahf
sub
icebp
pop
data16
push
mov
pop
lahf
sub
lcall
imul
sub
mov
pusha
or
lret
push
jecxz
and
xor
push
call
popf
cmpsl
rcr
push
dec
inc
test
lds
loopne
adc
fcmovbe
mov
push
add
push
aas
mov
push
pop
inc
jno
mov
mov
mov
or
cmp
jl
jo
lahf
sbb
mov
or
lds
or
shr
sub
cmc
or
mov
hlt
cmp
dec
pop
xor
leave
pop
pushf
pop
scas
ds
lahf
xor
sbb
data16
or
adc
push
mov
mov
adc
sub
cmp
cli
xchg
add
stos
aas
dec
mov
ja
jbe
jp
call
add
push
jl
fdivl
pop
stos
cmp
les
mov
loop
sub
and
pusha
lock
outsl
adc
fidivs
mov
cmp
js
add
mov
jmp
out
sbb
cmp
dec
ret
scas
inc
leave
call
scas
inc
jne
push
sbb
dec
stos
sub
aam
fmuls
lret
addr16
mov
fisubs
push
xchg
stc
or
xchg
iret
dec
int
mov
jno
adc
ror
mov
cmp
ja
jle
out
in
loopne
mov
je
int3
test
popf
aad
jmp
ds
mov
xchg
lods
mov
dec
push
mov
sbb
xchg
addb
adc
das
je
leave
gs
pop
sbb
cmpsl
xchg
jmp
ret
aas
repnz
or
and
adc
shlb
pop
mov
xchg
add
in
mov
xor
push
imul
enter
add
sbb
scas
cmp
mov
inc
inc
lea
movups
movsl
rcr
fmul
cmp
jmp
and
sub
mov
and
sbb
leave
jecxz
rcr
jmp
inc
and
and
pop
and
gs
sub
push
and
fdivs
or
push
int3
inc
jp
mov
xorl
shlb
add
ljmp
orl
test
lret
aam
inc
xchg
mov
push
rolb
into
jg
xor
movsl
add
and
repz
rolb
xlat
mov
fsubr
insb
push
sub
inc
rcrb
push
in
ds
and
mov
xorb
xorb
xchg
cli
pop
ss
into
or
pop
lods
pop
mov
js
test
clc
mov
push
scas
pop
insl
hlt
roll
shl
shll
xlat
cmp
push
or
push
mov
lea
pop
push
and
sbb
push
mov
pusha
out
dec
out
sub
inc
ds
out
push
scas
cmp
ret
or
xor
pusha
inc
int3
adc
push
iret
fwait
repnz
loop
jmp
xlat
movsb
fiadds
sub
test
fcmovne
mov
and
push
sub
cmpsb
jns
sub
xor
adc
adc
pop
dec
or
int
in
jl
cmpsb
loopne
jne
add
pusha
adc
jl
repz
mov
mov
dec
mov
lret
inc
fnstsw
sub
pop
shr
cltd
jno
add
mov
mov
lahf
js
cmp
mov
cmp
mov
ljmp
push
jle
imul
lods
xchg
rcl
mov
ret
xchg
pop
add
in
clc
pop
push
nop
int3
sbb
fadd
pop
mov
pop
push
repnz
mov
pusha
pushf
sub
push
loope
dec
pop
ss
dec
je
xchg
inc
fcoml
xchg
out
dec
test
stos
sahf
insb
pop
enter
add
ret
decb
fwait
or
mov
les
mov
fs
inc
in
adc
push
sbb
out
adc
lahf
jmp
movsl
call
jbe
insb
sub
testl
push
dec
cmp
cmp
out
pushf
mov
ret
sub
test
cmp
lret
cmp
aas
pop
das
pop
add
cmp
or
cwtl
push
xor
js
call
sub
and
fsubrl
push
dec
sbb
xor
fs
adc
enter
jno
xchg
and
mov
sti
push
or
inc
fists
mov
xchg
and
icebp
lcall
lret
and
rcll
in
in
fmuls
cli
sub
sub
mulb
inc
pop
clc
loopne
subl
lret
scas
aas
push
push
cmp
or
in
push
mov
mov
sub
fwait
shrb
repz
outsb
mov
jle
adc
call
add
fwait
test
sahf
out
xor
mov
mov
movsl
dec
je
test
data16
orb
pusha
hlt
push
mov
pop
jae
fdivrl
sub
ja
int3
pop
jns
addb
inc
jecxz
xchg
xchg
mov
inc
mov
push
into
xchg
sub
pop
repnz
pop
adc
pop
xchg
mov
test
push
popf
or
jo
test
popa
repz
addr16
or
shll
inc
test
dec
fldt
setg
add
jns
es
pcmpeqd
xor
sub
inc
scas
outsb
sbb
in
add
add
xchg
je
nop
add
mov
cltd
aad
test
jb
in
flds
mov
mov
mov
push
arpl
testl
aad
sbb
lahf
sbb
pop
in
jns
dec
inc
sbb
adc
movsl
es
call
icebp
and
gs
fdivs
pop
xlat
and
adc
jmp
xchg
jl
fucomip
xchg
and
popl
pusha
add
clc
popf
test
pusha
cs
xor
jmp
push
push
add
xor
fiaddl
add
or
cld
fsubr
push
xchg
testb
lret
ljmp
flds
xchg
jae
sub
pop
push
cmc
push
outsl
pop
sbb
test
xor
inc
xor
push
fsubrl
cli
jae
sysexit
lock
jae
fs
in
fs
jbe
or
or
fstpt
lea
fdiv
sbb
repnz
jecxz
mov
jno
cmpsb
sti
std
pop
mov
adc
inc
in
fs
bound
in
sbb
mov
mov
inc
mov
ret
dec
mov
out
dec
jecxz
scas
jl
push
xlat
lds
fdivrs
sub
js
jmp
push
adc
jmp
xchg
lods
jmp
and
pop
jecxz
ds
or
out
xor
and
sahf
sub
add
inc
mov
inc
stos
add
out
ret
dec
jns
insl
aam
movsl
push
ret
enter
clc
xor
pop
jae
add
xlat
sub
sahf
jge
mov
ljmp
xchg
in
repz
icebp
mov
outsb
sub
mov
mov
and
cmpsb
jns
cs
popa
and
sahf
push
fldl
js
inc
stc
sbb
or
lcall
test
xchg
and
in
lcall
iret
mov
push
lea
lcall
shrb
lea
pop
lds
arpl
adc
push
cmp
lea
nopl
cmp
shrl
xor
fistps
cmp
xchg
dec
pusha
mov
bound
rcll
fists
push
test
negb
xor
or
cmp
das
fucomp
aad
mov
xchg
jb
xchg
jp
or
and
mov
inc
jne
call
jno
loop
jle
inc
or
adcl
enter
insb
imul
imul
in
mov
lock
setg
stos
std
jmp
push
or
add
mov
cmovg
sub
mulb
jg
pop
and
cs
test
or
iret
sbbb
imul
jb
add
sarb
leave
mov
or
and
fsubp
pop
shlb
xor
and
pop
jbe
scas
sub
and
out
andl
mov
inc
mov
out
lahf
es
mov
dec
cmp
lds
pop
sbb
out
lds
add
icebp
popf
add
push
fdivrl
jecxz
adc
xchg
loop
jle
push
ljmp
cli
in
add
push
movsb
not
movsl
cmp
xor
lods
mov
sub
pop
push
sub
xor
mov
pop
aaa
repz
sub
xor
addl
stos
xchg
imul
mov
movsb
xor
out
dec
cs
xchg
add
shrb
cmp
mov
inc
and
je
jne
add
mov
imulb
jle
cmc
ds
pop
out
outsb
adc
test
les
adc
neg
mov
jnp,pt
das
inc
adc
add
mov
mov
insl
xor
lret
stc
aam
fucomi
xor
xor
mov
in
and
jno
mov
pop
xchg
dec
and
jle
push
add
hlt
xchg
xlat
scas
sub
mov
fidivs
fucomp
xchg
lods
jle
popa
loopw
sbb
cmp
add
inc
pusha
loopne
mov
es
cmpsl
lahf
jns
cmp
xchg
add
cmpsb
adc
mov
pop
mov
rcrl
jmp
sbb
xchg
dec
testb
movsb
mov
aaa
into
xchg
xlat
adc
repnz
imul
push
lahf
mov
and
imul
xor
adc
xor
jns
aad
mov
sahf
scas
dec
icebp
jns
or
aam
xchg
pop
inc
xor
add
es
xor
enter
aad
cmpsl
fs
cmp
std
mov
push
inc
addl
xor
sub
shl
cmpsb
lds
movsb
fistpll
jae
bound
push
test
push
adcl
jl
cmp
inc
dec
scas
xlat
push
divb
pop
imul
mov
jg
xchg
repnz
repz
nop
test
mov
xchg
push
push
lret
inc
dec
call
lret
mov
mov
lret
loopne
fsubs
fistps
push
cmpsb
test
ds
aaa
aaa
jg
arpl
jl
mov
or
out
movsl
sub
ljmp
sbb
push
inc
data16
repz
in
rdpmc
rcll
cltd
lcall
xorl
pop
cmp
bound
dec
aas
mov
xchg
inc
jle
mov
pop
js
int3
or
ret
addb
aaa
adc
xchg
cmp
inc
mov
xor
out
scas
inc
mov
inc
dec
sub
stos
xor
add
and
add
jmp
roll
push
or
lahf
scas
into
dec
daa
inc
scas
repnz
and
xlat
mov
cmp
push
stos
and
shrl
test
lahf
fiaddl
cmc
dec
in
inc
jg
mov
orb
pop
jecxz
lret
sar
push
lods
ret
jge
cwtl
adc
adc
jne
xchg
cmpsl
dec
mov
out
je
sbb
ret
cmp
movsb
xor
pusha
ds
dec
bound
sbb
dec
or
dec
jmp
iret
cmp
aaa
inc
gs
pop
adc
xchg
xor
mov
clc
stos
lods
daa
enter
jns
xor
das
pop
push
xchg
or
movsb
mov
cli
mov
aaa
cmc
fisubl
fcoms
jbe
fcoml
inc
aad
test
adc
push
sbb
mov
sub
xchg
enter
inc
lods
xchg
inc
jmp
je
sub
jnp
inc
cltd
lods
mov
ds
push
sub
mov
xor
mov
call
jge
fisttpll
fisubrs
shlb
pop
ss
pop
data16
out
and
call
scas
sbb
enter
push
mov
xchg
sbb
insb
push
loop
jecxz
add
pushf
sbb
mov
loop
xchg
add
sbb
cmpsl
mov
scas
out
push
sub
dec
inc
daa
dec
push
cld
cli
movsb
out
push
adc
sub
and
inc
sub
xchg
stos
mov
test
adc
cld
xchg
jg
mov
xor
stos
mov
xchg
ss
popf
pop
in
inc
jg
sbb
cmc
into
stc
insb
add
daa
push
adc
cmpsb
out
fwait
lea
mov
adc
cwtl
shlb
mov
loope
xor
mov
cltd
adc
or
call
movsb
mov
sahf
sbb
sub
and
ja
aaa
mov
hlt
jns
mov
out
aam
je
test
dec
mov
sti
xchg
sbb
mov
or
jne
std
cmpsb
fbstp
dec
cmpsl
xor
jl
cmp
add
out
adc
lea
jb
je
icebp
cmp
lret
out
mov
xlat
and
inc
scas
test
xlat
pop
lret
dec
out
lods
shld
cli
mov
pop
int
test
pop
rcl
push
fimull
inc
mov
push
sbb
or
cmp
sub
fcmovb
lret
out
negl
cmpsl
stos
mov
inc
dec
push
jp
push
sbb
or
cmp
sub
fcmovb
lret
out
negl
cmpsl
stos
mov
inc
jp
sbb
jae
pop
or
ljmp
out
lcall
push
dec
mov
dec
aaa
sbb
sbb
cmp
xor
sub
add
inc
fists
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
imull
addb
mov
gs
testl
cmpsb
push
mov
xchg
bound
addb
mov
pop
repnz
loop
adc
add
xor
bound
ja
inc
stos
push
mov
pop
ljmp
cmpsb
inc
mov
les
fisubrs
and
bound
xchg
ja
or
pop
sub
and
cwtd
hlt
mov
xchg
and
mov
xor
cli
ret
xor
push
pop
es
cmp
xchg
or
sahf
and
pop
xlat
dec
pop
jb
das
loop
jbe
dec
in
ss
and
push
out
cmpsl
ret
sub
add
shlb
ret
addr16
xchg
daa
repnz
out
pop
sbb
sarb
fldl
in
xchg
clc
popf
or
dec
inc
inc
iret
repnz
ds
mov
addb
ja
and
cmp
iret
add
popf
lahf
popf
ja
int
shrb
call
shrl
adc
push
mov
pop
xor
add
jb
xchg
ja
inc
mov
aaa
ret
pop
sti
out
negl
sub
cmp
jb
push
adc
xor
test
inc
sahf
jb
jnp
jp
addr16
sarl
sti
adc
jb
xor
xor
pop
cmpsl
inc
mov
outsl
mov
inc
mov
in
and
sub
adc
pop
out
shll
mov
pop
repnz
loop
adc
add
xor
and
jb
bound
ja
inc
mov
mov
pop
repnz
loop
adc
add
xor
and
jb
bound
jb
lret
mov
out
cmp
jne
jecxz
lock
cmpsb
sub
imul
fwait
mov
jecxz
push
push
jae
xor
add
test
clc
pop
lock
gs
and
mov
push
jg
xorl
sbb
pop
fwait
dec
xchg
rolb
push
fistpl
out
test
sarl
push
inc
out
loopne
lret
loop
jb
push
mov
jge
push
fnstsw
test
scas
dec
repz
inc
jb
rorb
mov
and
jb
pop
inc
adc
xor
adc
ja
js
cmp
popf
inc
inc
push
lods
dec
push
push
jnp
lcall
ret
mov
mulb
xor
shrb
enter
xchg
mov
jbe
sbb
push
mov
sub
pop
das
mov
sub
scas
pop
dec
pop
xor
ss
fidivl
and
popa
xchg
sarb
xchg
cltd
in
mov
xchg
xchg
repz
movsb
es
jmp
in
cltd
popf
lods
sub
and
bound
hlt
adc
stos
xor
imul
loopne
lds
add
and
push
jo
sarb
aas
in
jne
sub
cld
insl
ret
repnz
xchg
xchg
jg
mov
repnz
lock
imull
mov
ds
inc
adc
xlat
in
sub
push
jl
jmp
jb
cld
jno
jno
pusha
add
cmp
inc
roll
gs
fistpl
push
xor
cmp
adc
cs
loope
push
sbb
aaa
mov
jne
int3
movsb
inc
data16
pusha
mov
lahf
xchg
ficompl
sbb
movsb
ja
add
shl
inc
fs
pop
in
lods
push
push
add
loop
sahf
jg
xor
out
jg
and
nop
stos
adc
shrb
push
stc
lods
sub
mov
cltd
xor
pop
sbb
dec
mov
imul
jmp
jp
in
sbb
es
mov
xor
sub
arpl
add
adc
xor
test
mov
mov
lea
int
jle
das
xchg
mov
gs
lcall
jmp
pop
nop
scas
dec
pop
out
jae
ja
popa
std
pop
xchg
mov
adc
sub
scas
cmp
mov
mov
out
mov
dec
cld
dec
jmp
subl
imul
das
pop
jnp
repz
mov
mov
mov
pop
in
push
cmp
ret
cmc
or
jp
cmp
insl
pop
loope
jbe
push
inc
jmp
push
pushf
test
mov
test
pop
push
test
test
sbb
pop
mov
mov
sub
or
ljmp
test
mov
sbb
fstpl
ljmp
into
cwtl
fsubs
mov
leave
xor
rorb
mov
outsb
mov
pop
lea
arpl
sbb
sub
pop
pushf
dec
mov
sbb
push
decb
sbb
jle
dec
add
mov
pop
xor
jge
sbb
pop
in
dec
mov
int3
rcll
enter
cmp
pop
jne
inc
movsl
call
movsl
loopne
fs
scas
cltd
push
pop
dec
add
in
push
pusha
inc
inc
jnp
cmpsb
sbb
loope
sbb
xchg
insb
cmp
filds
jl
clc
xchg
cmp
fldcw
sub
xor
ret
loopne
pop
fstpt
in
std
sub
mov
add
jb
iret
popf
pop
push
push
push
repz
pop
cli
push
mov
lods
ljmp
mov
adc
pop
xchg
mov
xchg
pop
ffreep
test
adc
popf
lcall
cmp
and
adc
mov
arpl
pop
add
xor
inc
mov
in
call
sub
mov
out
ficoms
mov
push
mov
add
lds
mov
jecxz
jmp
ds
dec
sbb
and
xor
ds
mov
jbe
push
xchg
in
addl
add
lock
mov
sbb
popa
sub
jo
cli
xchg
loope
repnz
xor
adc
dec
push
add
mov
mov
imul
xor
in
jecxz
xchg
push
push
mov
ret
loop
ret
jge
inc
adc
or
xadd
gs
push
out
aaa
sahf
mov
push
imul
jae
jg
jg
stos
or
insb
testb
sub
mov
sbb
shrl
std
sub
jnp
xchg
sarl
cmp
mov
fldenv
fcomp
cld
clc
jns
loopne
loop
mov
sbb
xchg
aaa
pop
jge
scas
sub
fnstsw
add
mov
and
cmp
notl
lea
mov
inc
ss
and
pop
andl
in
mull
xchg
lcall
sahf
and
dec
sbb
ljmp
rclb
dec
lret
xchg
cmp
arpl
push
sahf
add
mov
cmc
mov
pop
cltd
mov
mov
mov
outsb
hlt
and
or
cmp
pop
inc
testb
inc
jns
inc
add
sub
xor
bound
scas
pop
sbb
out
pop
cmp
add
shll
inc
movsl
adc
and
lcall
sahf
pop
popl
inc
add
sub
inc
loopne
mov
mov
aad
mov
and
pop
mov
jae
fidivrs
mov
ljmp
cmp
mov
mov
roll
sarl
jmp
icebp
fldt
sbb
add
dec
mov
ds
sbb
or
xchg
fisttpl
mov
sti
pushl
je
xchg
ss
pop
das
in
nop
inc
scas
inc
jp
leave
mov
or
or
sahf
inc
jb
or
rcrl
rol
xchg
repnz
mov
in
mov
mov
pop
inc
mov
mov
enter
sbb
pop
lret
sub
cmp
js
enter
cmp
and
xchg
movsl
sti
push
enter
xchg
pop
inc
jne
xchg
mov
add
das
in
xor
loope
mov
cmpsl
mov
ss
mov
mov
adc
mov
pop
dec
out
mov
ret
add
stc
mov
icebp
add
or
push
add
or
js
inc
pusha
insl
pushf
stos
aam
in
mov
ds
dec
pop
lods
sbb
inc
imul
je
lock
bound
cmp
rorl
aaa
cmp
and
mov
xor
js
imul
clc
aam
mov
repz
pop
push
stc
sub
cs
daa
cmp
mov
and
xchg
cs
push
jmp
cmpsb
cmpb
inc
fldcw
scas
lcall
fs
sbb
add
add
ficomps
push
aad
sub
imul
jnp
mov
stc
push
repz
leave
jl
push
nop
push
xor
mov
xor
rolb
or
cmpsb
cmp
test
mov
test
jle
sbb
push
into
jle
popf
add
sbb
jno
mov
adc
mov
xor
cwtl
je
imul
fldenv
jns
sbb
test
xchg
dec
mov
mov
inc
sbb
fnsave
mov
adc
pop
push
jge
push
in
or
push
xorb
inc
cmp
cli
push
dec
arpl
out
push
mov
and
xor
decb
mov
testl
test
gs
adc
lods
fs
rcrl
das
push
je
jp
pop
push
ljmp
popf
outsb
xchg
and
mov
or
or
lret
int
out
cmc
fstl
nop
icebp
iret
xchg
lahf
sahf
or
mov
mov
pop
popa
push
popf
fidivrl
ds
test
xchg
std
push
jns
test
pop
push
daa
pop
push
push
and
cmpsb
lods
js
loopne
jnp
mov
sti
iret
jno
mov
test
in
fdivs
jl
fisttpl
adc
lcall
fisttps
int3
sahf
test
push
je
jmp
xchg
or
and
popa
fistpll
jae
clc
outsl
fistpl
push
in
and
cmp
clc
jmp
mov
add
and
test
fnstcw
addr16
iret
loope
imul
inc
movb
lods
jno
dec
jge
xchg
test
fisubs
js
ret
mov
ret
incb
jp
push
aaa
add
mov
stc
mov
call
cmp
sub
cmpl
mov
push
or
aas
lods
shll
xchg
call
jg
xor
mov
pop
ret
outsl
push
inc
xor
hlt
xchg
sub
cld
test
data16
sub
pop
test
mov
movsb
lea
roll
or
cmp
or
fcoms
dec
test
jnp
shrb
cwtl
or
daa
dec
pop
xor
mov
push
ja
addr16
sbb
and
in
cmp
gs
add
cmp
fbstp
ret
cmp
mov
out
rcrb
xchg
fnsave
mov
fucomip
mov
adc
jne
testl
and
nop
ret
gs
test
jl
das
sti
xchg
jbe
fisttpl
pop
mov
cmp
ret
mov
push
sbb
mov
xchg
in
xchg
sub
ret
pop
enter
jo
stc
ds
lock
fs
xchg
cmp
push
xor
xchg
scas
aad
call
dec
xor
and
sub
fcomps
outsl
movsb
in
push
mov
pop
ds
mov
xor
dec
cmp
ja
sub
and
outsl
imul
push
mov
lods
repnz
xchg
mov
pop
adc
insl
sarb
jae
out
orl
push
sbb
daa
aaa
jo
push
cs
xchg
or
pushf
dec
sub
sub
cmp
das
leave
pop
or
cmp
out
xchg
adc
push
ja
push
lret
mov
loopne
mov
jp
pushf
lock
out
inc
rcrb
xchg
jl
and
js
jnp
cld
add
or
orl
jnp
pop
lds
sbb
das
sbbl
pop
outsl
aam
mov
dec
mov
inc
hlt
or
mov
xchg
mov
cmp
fdivr
jb
scas
mov
and
lods
fisttpll
mov
inc
pop
push
lret
lods
imul
jecxz
mov
push
cmp
iret
popa
mov
cmc
sti
adc
loopne
movw
in
in
addr16
push
fsubrs
and
loope
rorl
dec
xor
mov
lock
and
cltd
push
loope
mov
pushf
push
jnp
mov
aad
rolb
outsb
std
jp,pn
or
inc
mov
sub
fstl
sub
cmpsb
pop
jbe
and
xchg
iret
push
mov
push
icebp
or
icebp
push
adc
mov
dec
inc
aam
cld
fdecstp
push
iret
aad
insb
daa
mov
jle
je
adc
dec
adc
in
gs
lock
inc
pushf
icebp
fdivs
addr16
dec
push
fstpt
outsb
or
in
sub
lods
int3
mov
or
mov
adc
or
sbb
loope
leave
in
cmp
mov
in
sub
ret
add
sub
leave
test
test
pop
outsb
in
imul
xchg
sub
cmp
pop
pop
sbb
push
push
cpuid
cmpsl
jge
xor
popf
mov
int
push
push
xchg
ja
sub
pop
mov
stos
mov
nop
mov
and
pop
aad
enter
pop
sub
ret
mov
sub
jno
jb
adc
pushf
or
adc
sbb
mov
jno
mov
ja
addr16
imul
pop
mov
cmp
mov
and
xchg
repnz
pushf
inc
mov
inc
dec
xchg
fnsave
pop
and
or
fldl
xor
mov
add
daa
addr16
out
stos
in
inc
fs
lds
lret
pop
inc
std
and
add
push
and
vfrczpd
repz
cwtl
es
lods
cmp
mov
add
shlb
clc
pop
cmpb
dec
aam
push
xchg
in
or
jmp
das
mov
and
popa
jle
loope
cltd
cmp
sub
ror
adc
scas
movsb
test
imul
xchg
dec
mov
or
jmp
in
aaa
or
xor
mov
call
xor
sbb
jbe
and
es
inc
pop
jg
int3
dec
cli
xchg
in
cmp
xor
fsubr
sub
mov
push
daa
mov
test
mov
fs
das
ss
js
pusha
jl
sub
jns
bound
sub
push
or
sub
jns
mov
stos
cmpsl
or
mov
outsl
imul
aaa
mov
aas
pop
daa
jmp
int
add
pop
shl
lea
jp
inc
inc
jle
jne
sub
pop
mov
adc
flds
push
imul
add
cmp
fucomi
and
repnz
into
adc
aad
and
dec
or
mov
insl
jg
jo
orl
xchg
mov
cmp
movsl
mov
push
and
push
andb
popf
push
in
adc
test
les
dec
repnz
aam
insb
mov
inc
std
pop
xor
mov
xchg
mov
test
or
ret
mov
adc
call
xchg
jnp
pop
adc
testb
push
fdivp
push
test
call
int3
loope
jo
sti
adc
adc
jmp
iret
lds
sub
cwtl
mov
adc
pop
lods
sbb
inc
xor
push
adc
or
clc
mov
mov
inc
mov
shlb
out
addb
inc
inc
push
js
sub
enter
repnz
cmpsl
int
cmp
xchg
inc
cmpsl
subb
pop
arpl
pop
mov
fnstenv
mov
mulb
rcl
xor
adc
jae
pop
leave
pusha
mov
aam
mov
push
lcall
pop
and
leave
jge
dec
jle
add
adc
outsb
cs
adc
push
lahf
sbb
jg
xor
sbb
pop
xchg
fwait
sahf
or
out
and
dec
cmp
sbb
push
jmp
out
into
insl
add
inc
cltd
ds
fnstenv
sarl
jg
mov
dec
mov
loopne
xor
movsb
fldl
mov
or
adc
or
mov
repnz
imul
cmp
adc
add
cmp
mov
xchg
aad
xchg
movsl
stc
cmp
hlt
aaa
cld
cmp
into
xor
cmpsl
mov
imul
jb
cmp
sahf
test
pop
out
sahf
lahf
xchg
push
lret
sub
lods
fildl
push
inc
xlat
arpl
adc
dec
addr16
outsb
stc
fs
pop
push
jns
int3
mov
popf
movsl
or
in
cmp
ficoms
mov
sbb
push
fcomps
push
arpl
and
xlat
cmp
loope
push
mov
cmpsl
pop
scas
sub
insb
pop
fidivl
rol
insb
repz
sarb
popf
dec
jbe
xchg
or
xlat
clc
mov
adc
sub
mov
mov
pop
aas
mov
xor
xor
stc
fadds
xlat
mov
stos
cmp
dec
lahf
add
mov
fildl
cwtl
pusha
lcall
std
cmp
aad
xchg
jne
out
int
mov
popf
andl
inc
cmp
in
int3
ja
icebp
cld
pop
cmp
jo
xlat
shll
pop
add
xchg
fsubrp
mov
lret
jl
loop
mov
adc
cmpsb
push
nopl
loop
mov
cmc
sub
mov
xor
int3
aas
mov
imul
dec
pop
pop
les
js
inc
xchg
rcll
out
out
xor
mov
fists
or
addl
fdivr
loop
es
mov
or
xlat
push
sbb
jnp
and
adc
enter
adc
xchg
in
add
mov
imul
jno
fs
out
scas
pop
lret
repnz
rorl
bts
repnz
mov
pop
xor
stos
mov
cmp
das
ja
sub
xchg
mov
enter
or
sahf
and
lock
insl
cmp
aas
lret
pop
or
lds
out
sub
lds
xchg
mov
cmp
insb
in
fwait
out
jle
add
push
loop
xchg
lcall
sbb
aaa
notb
mov
int3
outsb
jmp
adc
fldenv
mov
xchg
cmp
mov
sbb
outsb
je
subps
add
hlt
and
mov
mov
stc
dec
mov
iret
mov
and
push
sbb
mov
addr16
ret
dec
aas
push
fnstsw
inc
jmp
outsl
ret
jge
in
je
push
xchg
sti
xchg
loopne
push
jmp
mov
mov
mov
sub
movsl
arpl
rcrb
enter
jg
add
lret
in
sbb
ficoml
or
inc
popa
repnz
repnz
or
xor
push
lcall
std
push
shr
popf
mov
pop
add
pop
clc
cmpsl
nop
fmuls
mov
test
fcomi
sbb
jne
xchg
pop
jmp
std
mov
push
mov
lret
test
lea
negl
dec
insl
mov
cwtl
lock
add
out
sbb
jle
shr
add
addb
or
jno
popa
dec
and
imul
pop
jnp
pop
or
lods
cmpsl
mov
adcl
addb
orl
sahf
sub
movsb
inc
in
mov
in
adc
gs
cmpsb
push
and
mov
movsb
rcl
mov
xchg
arpl
fcoms
push
pushf
sub
xchg
and
stos
out
negb
xchg
repz
icebp
adc
or
loope
addr16
bound
das
pusha
push
lods
clc
xchg
in
and
movsl
enter
add
in
scas
xlat
mov
dec
lahf
or
shlb
andb
sbb
xor
fisubrs
sbb
push
fs
test
push
jb
out
sbb
push
aam
test
mov
repz
les
push
pop
xchg
in
dec
add
icebp
int3
push
js
loopne
jecxz
aad
lods
insb
div
ljmp
scas
inc
and
and
movsb
outsl
shlb
ja
dec
push
push
test
mov
push
lds
xchg
sbb
sarl
lods
lret
test
sahf
movsb
mov
das
pop
or
or
repz
cltd
das
std
ret
repnz
test
test
inc
mov
pushf
in
hlt
add
lcall
push
jb
pop
jmp
push
pop
nop
xchg
test
sbb
push
je
sti
sub
fstl
sub
mov
fnsaves
adc
push
ja
xchg
cs
mov
lahf
xchg
or
add
sbb
cltd
dec
and
fcoml
mov
stos
pop
inc
fwait
call
dec
addr16
rcrl
scas
jl
cmpsl
in
push
cmpsb
sub
cmc
sub
lea
daa
and
pop
loop
int
xlat
dec
xchg
lcall
mov
ss
mov
sbb
sub
dec
or
push
push
aad
add
sarb
push
mov
cmc
fcoml
mov
dec
push
pop
xchg
lcall
lcall
jno
data16
enter
leave
ljmp
dec
dec
push
cmpsl
out
data16
jo
cmpsb
add
out
push
mov
fstpt
adc
loope
dec
jae
mov
mov
dec
inc
lods
ds
push
arpl
cltd
dec
or
dec
push
aam
movsl
mov
fstpt
dec
adc
dec
pop
adcl
in
dec
dec
adc
or
stc
iret
jo
aad
adc
ds
and
sub
int
adc
shrl
mov
pop
adc
outsb
push
adc
sbb
inc
std
sbb
cltd
outsl
movsl
and
sbb
lods
sbb
mov
adc
jno
add
mov
shlb
mov
adc
fwait
xlat
mov
jmp
in
js
add
repnz
pop
sub
call
bnd
ja
mov
mov
insl
or
out
in
mov
rorb
mov
aam
push
clc
sub
sahf
pop
daa
mov
enter
jns
push
mov
xor
mov
mov
outsl
xchg
sahf
into
inc
add
aam
insw
insl
out
aas
mov
out
insl
push
mov
push
sub
addr16
dec
sbbb
push
mov
pop
repnz
loop
adc
add
xor
and
jb
bound
ja
inc
mov
mov
pop
repnz
loop
adc
add
xor
and
jb
bound
ja
inc
mov
mov
pop
repnz
loop
adc
add
xor
and
jae
bound
jbe
inc
mov
mov
pop
repnz
loop
adc
test
xor
push
rcr
aas
mov
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
pop
out
dec
jns
imul
dec
scas
and
fsubs
leave
jg
dec
jmp
aas
test
out
dec
jns
imul
cmp
leave
jg
dec
out
cltd
inc
mov
pop
inc
out
push
jmp
jno
add
sub
cmpsb
cmp
out
in
insb
xor
fisttps
or
pop
mov
or
mov
xchg
push
das
popa
test
ja
xchg
aad
xor
mov
addb
cltd
idivb
out
mov
mov
lea
mov
jmp
repnz
setns
jne
mov
stos
pop
or
mov
push
nop
enter
push
mov
xor
les
out
adc
je
fnstcw
clc
mov
pop
popa
jl
aas
inc
ud1
mov
test
lahf
out
or
xchg
fisubl
jle
sub
mov
dec
fsubrl
fisubrl
test
jns
imul
cmp
sarl
dec
lock
subl
test
mov
push
outsl
je
sub
fsts
movsl
jle
sub
pop
lret
jbe
push
mov
lcall
or
cmp
jp
lcall
cmp
pop
int
cmp
and
mov
cmp
leave
jg
dec
jmp
aas
mov
out
dec
jns
imul
cmp
leave
jg
dec
jmp
aas
mov
out
xchg
and
sbb
cmp
in
xchg
cmp
fnstsw
xor
imul
inc
add
or
xor
int3
sbb
leave
lds
sarb
mov
lods
mov
inc
push
jl
mov
js
pop
xor
mov
dec
into
daa
inc
cmp
shll
or
jns
mov
inc
xor
test
add
aad
cld
cmpsl
or
iret
and
cld
test
mov
bound
cmpl
sub
or
dec
jne
mov
andb
cld
daa
into
je
xor
push
stos
cmpsb
mov
mov
cmpl
jbe
arpl
dec
cwtl
sub
outsl
addps
fisttps
lret
xchg
cmc
sub
or
rcll
pop
pop
or
repz
cmp
aas
cmpsb
mull
in
xor
inc
xchg
push
pop
repz
mov
cli
and
stc
repz
push
addb
inc
cmp
out
jle
out
mov
mov
shll
xchg
dec
adc
rorb
imul
insb
sbb
mov
add
jge
mov
mov
xchg
cwtl
xchg
mov
or
mov
push
in
dec
lahf
mov
mov
fdivrl
dec
sbb
dec
pop
mov
xchg
icebp
or
inc
xlat
add
push
sbb
push
cwtl
pop
mov
push
insl
pop
call
or
dec
repz
and
repnz
lret
fcompl
mov
xchg
push
and
pushf
adc
scas
inc
call
aam
sub
push
mov
cwtl
imul
ret
pop
das
lods
pop
dec
sub
jecxz
sub
dec
xorb
in
push
pushf
clc
call
sbb
xorb
or
pop
lds
sti
sub
gs
mov
and
jnp
enter
or
ja
cmp
jl
jmp
mov
movsl
pop
lcall
cmpsl
or
xchg
inc
dec
pop
outsl
loop
sarl
loop
push
call
in
xchg
std
adc
lea
in
xchg
cmp
les
imul
lds
pop
adc
jg
bound
cmp
sbb
ret
xor
cwtl
js
inc
aas
shl
cmpl
ret
cmp
jl
lahf
sub
int
lret
jb
shlb
stos
mov
test
cmc
repnz
in
imul
sub
and
add
mov
push
ret
xlat
popf
icebp
xchg
aas
in
xchg
adc
mov
push
jmp
fnstenv
das
lea
cmp
sub
push
outsb
insl
xchg
xchg
add
push
in
or
in
inc
sbb
push
data16
lret
addr16
xor
mov
pop
sti
or
fdivrp
xchg
ss
inc
push
cmpsb
mov
test
jns
int
or
and
into
loope
cwtl
sbb
mov
mov
xchg
jno
and
pop
cvttps2pi
and
aam
imul
std
xor
mov
adc
in
mov
sbb
test
add
ficoml
test
lcall
push
out
xchg
ss
in
arpl
lds
popf
xor
xchg
pop
xor
pusha
adc
cmpsl
scas
dec
popa
dec
ds
add
psubb
sti
movsl
shrl
ds
dec
std
int3
scas
popf
lods
sar
loop
cmp
dec
dec
ret
out
fidivl
mov
pusha
add
repnz
pop
jne
mov
xchg
jmp
repz
lcall
cmp
movsb
aas
loop
xchg
stc
push
push
inc
jno
mov
les
sti
int3
and
pop
adc
shlb
sahf
cmp
jne
scas
or
dec
add
leave
jnp
cmpsb
popf
pop
mov
in
pusha
pop
push
jne
pop
dec
add
test
lret
lret
dec
je
mov
adc
imul
cmp
cmpsl
dec
daa
push
pop
cmc
movsl
outsl
inc
pop
mov
sbb
push
incb
adc
cltd
cmp
mov
jbe
xchg
imul
mov
dec
lret
fdivs
mov
cmc
push
jbe
pop
stos
repz
pop
mov
inc
aaa
dec
jmp
clc
jmp
repnz
insl
mov
mov
sub
shll
imul
mov
int3
mov
stos
sub
mov
jl
sub
ljmp
mov
dec
mov
lret
xchg
rolb
adc
out
pop
xor
std
pop
mov
shlb
xchg
add
cltd
fwait
add
mov
in
inc
outsb
push
cmp
lahf
pop
and
sub
jmp
out
dec
or
push
inc
out
imul
daa
mov
mov
or
imul
inc
stc
les
stos
fidivs
inc
xor
xchg
addb
sub
xchg
push
dec
xchg
mov
jmp
ret
aas
xor
adc
pop
scas
ret
movsl
call
idivl
jecxz
ds
inc
push
push
sbb
and
mov
mov
sub
xor
bound
xor
insb
stos
mov
dec
movsb
dec
test
pop
iret
sbb
popl
fidivl
mov
pop
outsb
jecxz
sbb
lods
loop
push
xchg
mov
sar
push
mov
jp
mov
or
out
cmc
mov
mov
outsb
cld
push
sub
cmpsb
push
or
repnz
dec
comiss
xchg
jne
or
sti
ss
fsubrl
dec
push
jns
cmp
fs
or
jecxz
mov
and
or
cs
mov
dec
arpl
leave
jb
and
mov
es
inc
push
cmp
enter
sbb
xchg
inc
mov
jo
out
outsl
das
pop
sbb
inc
loop
pop
pop
hlt
lcall
pop
mov
sbb
aaa
mov
push
imul
scas
ret
stos
ret
mov
pushf
int3
add
cmp
mov
fstpl
and
sbb
mov
adc
mov
cmc
out
dec
arpl
cmp
mov
sub
sbb
cmp
into
std
cwtl
orl
xor
stos
enter
or
icebp
lock
mov
cmc
dec
jno
movsl
scas
cmpsb
cmp
lock
movsl
pop
stc
push
and
sbb
push
xor
mov
or
mov
les
xchg
sbb
pop
add
ja
sbb
psubw
pop
inc
cmp
lahf
js
dec
sub
mov
inc
and
fxch
fwait
pop
cld
int3
push
arpl
adc
pop
adc
sub
dec
add
adc
dec
mov
test
adc
popf
jg
dec
cmp
ret
ret
imul
xchg
pop
sbb
xor
stos
addb
inc
xchg
xchg
pop
dec
sub
imul
lret
into
pop
ret
in
inc
mov
cmp
fildl
insl
dec
hlt
call
stos
jnp
mov
popf
jne,pt
jecxz
xor
std
dec
mov
mov
push
movsb
stc
popa
sub
stos
int
loope
xor
stc
out
psrlq
lahf
fists
add
sub
test
xor
aam
xchg
mov
mov
sub
nop
add
cmpsl
mov
pop
inc
push
icebp
test
push
add
push
push
fistl
std
fldenv
dec
rolb
fstp
sbb
pop
and
stc
cwtl
jecxz
push
pop
lods
sbbl
ds
pushl
xchg
arpl
bound
or
ret
or
aaa
adcb
jo
jecxz
adc
sub
pop
or
rorl
fnstsw
jmp
dec
cmc
mov
jmp
mov
mov
add
rcrb
push
mov
dec
and
aam
pop
sub
dec
iret
mov
pop
punpcklwd
sbb
add
sbb
mov
mov
fcompl
rorb
pushf
mov
shll
in
mov
adc
jl
fs
fldt
lds
cmp
scas
adc
flds
sbb
ds
lods
outsl
mov
jne
loop
subl
or
nop
and
aas
jmp
fidivl
pop
adc
fisubl
lcall
mov
in
inc
pop
addl
jmp
xor
incb
repnz
ret
ja
in
jnp
add
aaa
xchg
jecxz
dec
dec
jnp
dec
test
stc
imul
psubq
ror
das
leave
jne
shlb
jge
lods
lret
mov
xor
mov
push
adc
repz
ret
and
cmc
test
push
int
daa
sbb
inc
jnp
mov
pop
sub
mov
dec
and
mov
mov
cmc
pop
rcr
adc
aam
pushf
divb
clc
rcrl
push
inc
sarb
inc
ret
mov
xchg
dec
xchg
icebp
mov
es
pop
fwait
mov
sub
sbb
cmp
push
orl
cmc
pop
dec
dec
mov
loope
or
push
test
test
push
gs
mov
clc
stc
inc
jge
adc
xchg
sub
and
adc
pop
cmpsb
mov
shlb
mov
xor
ja
sub
add
xor
mov
mov
push
or
rolb
push
sarl
sbb
in
popa
lahf
lods
push
shlb
xchg
aam
scas
enter
jge
push
dec
push
mov
jb
sub
mov
outsb
jae
imul
test
jge
jns
mov
jl
inc
mov
jns
push
inc
xor
out
test
shl
xor
test
xlat
ss
mov
push
test
push
nop
stc
lret
inc
adc
dec
cmp
in
cmp
in
jle
push
aas
adc
mov
or
mov
shll
xchg
and
pop
add
xchg
outsl
dec
jp
dec
test
fucomp
scas
int
jbe
jle
outsb
mov
dec
sahf
dec
ficoml
aas
push
in
jge
movq
mov
test
push
xchg
cmp
jnp
rol
sub
push
dec
push
or
push
xchg
lock
pop
or
andb
rolb
mov
in
inc
cwtl
enter
outsl
jnp
dec
int3
mov
in
mov
jecxz
in
outsl
jae
adc
mov
daa
cmp
sbb
mov
cmp
inc
push
mov
repnz
icebp
jo
xchg
or
inc
jecxz
lods
adc
testl
sub
push
mov
pop
jge
outsl
imul
add
cmp
dec
mov
lods
rorb
je
shrl
pop
ret
jno
fbstp
rorb
cmc
in
std
push
xor
mov
push
add
or
iret
pusha
pop
in
mov
outsb
jle
mov
scas
push
xor
pop
xchg
push
sahf
bound
ljmp
loop
xor
inc
xchg
sahf
fistl
xor
gs
adc
test
xchg
adc
xchg
adc
xchg
imul
aaa
loop
lahf
subb
into
cmp
xchg
lock
xor
test
sbb
icebp
add
test
sti
vpsllw
dec
xchg
or
test
jo
je
lcall
in
aaa
mov
push
mov
fs
cmpsl
dec
xchg
xor
fidivs
insl
je
pop
enter
out
adc
test
out
mov
adc
adc
lahf
loope
xor
mov
dec
xlat
std
sbb
push
in
cmp
xor
fstps
mov
test
jp
jno
push
or
xor
and
repnz
pop
xor
xor
xor
cmp
flds
fdivl
xor
add
sbb
clc
aam
daa
scas
loop
add
cmp
mov
je
and
fcomps
xlat
mov
jbe
and
xchg
out
ljmp
xchg
and
lcall
in
add
sub
popl
sbb
mov
cmp
xor
orb
and
pop
fistl
imul
shrb
repnz
fidivl
push
pop
mov
pop
sbb
sub
es
or
xlat
jno
push
adc
fimuls
int
inc
insl
or
pusha
dec
fdivrs
test
sub
mov
push
mov
ds
add
arpl
je
mov
aaa
jmp
clc
test
mov
xchg
lods
xor
xchg
aas
bound
mov
adc
outsb
mov
mov
jnp
mov
or
scas
and
xor
outsb
xor
loopne
dec
lret
icebp
sahf
mov
nop
sub
sbb
xor
xor
push
stos
mov
clc
fisttps
rcll
clc
les
inc
arpl
popa
aaa
rclb
icebp
sbb
mov
xor
inc
sbb
mov
mov
jg
add
pop
ss
xchg
test
addr16
mov
sbb
loopne
outsb
out
aaa
dec
pop
adc
add
xchg
fmull
mov
mov
jns
push
cmp
sti
js
movb
pop
cs
push
daa
xchg
push
pop
jbe
sbb
dec
dec
mov
push
xchg
add
mov
lock
aad
push
fbld
test
jmp
pusha
xchg
mov
fldl
fwait
lods
aam
sub
call
lahf
jecxz
pop
mov
add
dec
arpl
mov
bound
dec
jge
mov
mov
push
cmp
jno
repnz
push
movsb
gs
jo
xor
pop
mov
mov
call
jle
jo
jmp
inc
mov
xor
push
dec
lods
das
sti
xlat
add
xor
cld
adc
mov
rclb
push
pop
repnz
mov
mov
in
dec
aaa
jns
pop
push
subb
lock
xor
shll
mov
mov
mov
mov
lods
in
stos
add
jecxz
mov
idivb
pop
testl
js
fucomip
pop
fstpl
out
dec
push
mov
or
mov
popa
adc
fidivrs
fcoms
mov
cmp
popa
xor
cwtl
nop
jns
xchg
jne
fcompl
rorb
jge
jnp
cli
data16
rcr
add
out
stc
fisubl
insl
les
push
cld
sti
hlt
outsl
icebp
push
pop
mov
fisttpl
enter
add
jb
adc
das
xor
fadds
jecxz
jecxz
jb
sub
sti
fnstsw
sbb
dec
call
repz
cmc
push
aas
fs
jmp
notb
gs
dec
push
imulb
mov
into
les
icebp
nop
outsb
xchg
adc
mov
sub
cltd
adc
movsl
mov
xor
lods
adc
stc
dec
mov
sbb
and
lods
movsl
push
pop
aam
pop
adc
pop
xchg
adc
adc
std
or
gs
pop
jbe
jl
and
mov
xchg
insb
or
out
push
or
jo
inc
fldenv
add
mov
shlb
popf
sub
inc
mov
push
nop
repz
int3
lea
outsl
out
aas
inc
lret
lods
jmp
adc
data16
sbb
jl
fildl
out
sub
frstor
sarl
push
movsb
push
add
aas
mov
test
movsl
sub
add
popf
ret
add
lea
jg
jmp
scas
aad
scas
pop
xchg
aam
call
cli
inc
std
cmp
sar
cmc
push
push
and
call
das
adc
push
mov
mov
mov
mov
or
pop
push
aad
sub
mov
shr
inc
or
cs
movhps
and
arpl
xor
neg
fwait
js
cld
push
xor
inc
sub
jle
fcomi
xchg
pop
xor
inc
clc
ja
mov
sbb
mov
and
or
iret
and
jnp
cmpl
lea
mov
pop
push
mov
scas
sbb
or
adc
popf
adc
popa
sub
cmp
lcall
dec
shll
ljmp
es
addl
fstpl
or
rorb
ret
scas
ljmp
add
scas
inc
lods
push
mov
pop
jno
loopne
aas
dec
jl
jge
xchg
push
out
rcr
movsl
repz
cli
dec
sahf
dec
cmp
push
das
in
inc
lods
test
in
xchg
out
mov
pop
ret
adc
push
or
es
pop
cmpsl
mov
inc
mov
xor
pop
popf
sbb
in
clc
mov
xchg
and
push
push
and
inc
cmp
mov
aas
cmc
inc
mov
pop
lds
adc
dec
leave
jg
fstps
dec
jb
dec
inc
addr16
mov
xor
bound
jae
cmp
nop
xchg
xchg
mov
inc
sbbl
aad
dec
pushf
int
cmp
dec
inc
add
inc
mov
push
ret
ja
xchg
aaa
mov
enter
addr16
subb
cmpsl
cmp
loope
fisttpl
push
loop
leave
addb
out
arpl
sarb
jg
cmpsb
inc
push
mov
popf
pop
mov
sub
sbb
insb
test
push
dec
pop
lods
lret
rsm
adc
adc
aad
dec
xor
jae
lock
mov
xchg
jo
push
cmp
in
dec
mov
pop
pop
ret
sbb
xor
dec
mov
popf
out
inc
add
ljmp
adc
mov
push
push
lea
call
cmp
pminsw
lret
inc
ss
mov
jne
and
pop
cwtl
jnp
scas
dec
jg
out
pusha
sub
mov
inc
in
push
fwait
stos
rcrl
add
jp
popf
std
sbb
xchg
shll
shll
sub
retw
fwait
insb
add
sbb
or
pop
lret
mov
add
in
xchg
pop
leave
mov
pop
xchg
test
mov
adc
movsl
sbb
fsubrs
rcl
mov
mov
jo
hlt
addr16
cli
and
les
lret
in
loop
xchg
loop
xchg
push
xor
sbb
sti
inc
adc
adc
add
sbb
jbe
lret
je
mov
insb
push
fbld
insl
cmc
scas
mov
pop
sti
jbe
sbb
add
inc
inc
push
pop
mov
cmc
mov
ja
bound
push
jg
lock
sbb
add
shlb
dec
mov
dec
fs
add
fadds
les
std
movsl
push
test
mov
pop
daa
int3
sbb
inc
dec
ficompl
cli
dec
add
test
int3
sbb
adc
jo
outsl
call
je
fisttpll
xchg
sbb
nop
jge
idivb
iret
movsl
sbb
xchg
xor
sbb
jge
gs
dec
mov
aaa
mov
mov
dec
push
fisubrl
aam
in
xlat
push
iret
adc
and
shll
jmp
loopne
mov
or
push
cmp
mov
adc
imul
pop
and
sub
std
stc
xor
sbb
pop
and
add
cmp
or
ret
dec
mov
rolb
dec
das
in
testl
sarl
fwait
pop
jbe
push
mov
xchg
js
pop
out
lods
es
pop
and
adc
aam
mov
lret
and
sub
daa
xchg
inc
xor
stos
cwtl
lods
mov
dec
fdivrs
jne
cmp
push
dec
call
fstpt
dec
pop
pop
mov
xor
push
aas
push
sub
daa
pop
pushf
inc
or
xorl
popf
dec
pop
cmpsl
mov
mov
insb
sub
pop
cs
test
in
jns
lcall
adc
lds
push
js
adc
call
test
loopne
mov
inc
mov
jno
xchg
sbb
popa
sub
dec
js
aas
sub
cmp
clc
or
mov
adc
mov
cmp
dec
stos
jge
push
push
mov
mov
testb
loope,pn
cmp
jnp
cld
push
out
cltd
xchg
cmpsb
outsb
movsb
mov
adc
mul
sub
leave
scas
adc
and
push
pop
cltd
arpl
leave
or
popa
popa
push
add
add
test
stos
gs
adc
lea
les
lcall
pusha
mov
cmc
les
cld
jle
xor
xor
mov
push
ret
and
cs
xchg
enter
cmpsl
lds
nop
jbe
dec
jl
test
dec
mov
push
sbb
push
mov
popf
ss
inc
lret
insb
or
jae
imul
cmp
leave
jg
dec
jmp
aas
mov
out
dec
jns
imul
cmp
leave
jg
dec
jmp
aas
mov
out
dec
jns
imul
cmp
leave
jg
dec
jmp
aas
mov
out
dec
js
imul
mov
outsl
ss
dec
jmp
rolb
loopne
xor
add
push
push
insl
cmp
inc
call
xchg
insb
int
ffree
cmp
cmp
add
jge
dec
push
pop
aaa
cmpsl
mov
pop
sub
cld
loope
rcr
ret
xor
and
adc
push
jnp
dec
dec
pop
lods
mov
and
jmp
xchg
mov
jg
push
inc
jbe
fs
movsb
lods
push
imul
cltd
or
push
sub
sbb
nop
mov
dec
inc
pop
jb
nop
jl
xchg
stos
mov
mov
and
pop
and
jl
pop
pusha
inc
push
scas
mov
mov
adc
pop
rcrl
xchg
insl
sub
push
dec
jae
jae
daa
pop
cltd
push
aad
lea
push
sub
ror
mov
fcoml
ja
mov
push
pop
pop
dec
sub
imul
inc
andb
inc
jmp
mov
stc
test
push
jbe
push
fildl
jb
pushf
jl
fucomi
add
and
xor
jae
arpl
inc
pop
mov
movsl
mov
cmc
jmp
sti
int
pop
push
push
jno
add
xor
mov
out
xchg
cltd
loope
mov
cmp
insb
sbb
sub
scas
mov
orl
xor
and
sbb
arpl
pop
inc
lods
mov
mov
in
repz
jecxz
rcr
ret
sub
adc
arpl
pop
inc
lods
mov
mov
in
repz
jecxz
rcr
ret
sub
xchg
jne
inc
clc
push
std
repnz
add
pop
jae
stos
aam
add
rcrb
xor
std
xor
in
pop
das
add
mov
and
cmpsl
cmp
lret
dec
push
test
xor
cmp
fcoms
imul
mov
or
icebp
xlat
cwtl
and
sbb
lods
cmp
jb
pause
cltd
loop
xor
jl
xchg
mov
std
mov
mov
cmc
mov
mov
or
call
add
aam
and
data16
dec
or
shl
loop
into
xchg
dec
addr16
cld
ja
xchg
andb
jae
nop
out
stos
jo
mov
popa
and
adc
jecxz
pusha
les
cmp
push
or
jg
test
mov
xor
fldt
popf
add
mov
adc
rolb
mov
sbb
push
push
hlt
push
mov
cmpsl
pusha
in
jp
cli
insb
mov
add
push
push
lods
jbe
test
rcrb
rorb
mov
loopne
out
sub
xchg
push
xlat
rclb
stc
setbe
sbb
push
movsl
push
mov
and
repz
rorb
fstpt
outsb
inc
add
push
lock
andb
xchg
cmp
rcrb
aam
and
pop
sbb
stc
ds
rcll
adc
sbb
leave
or
ret
push
mov
rolb
test
ss
lods
sbb
cltd
mov
add
inc
stos
and
jo
pop
orl
data16
hlt
push
fistl
mov
sbb
push
jb
fsubp
movsb
cmpsb
pop
pop
mov
popf
cmc
xor
ds
and
mov
xchg
mov
sti
cmp
cmp
sbb
cld
imul
fisttps
dec
jmp
stc
inc
or
ret
push
das
xor
sub
push
hlt
data16
push
dec
sub
add
int3
enter
xchg
sbb
xor
add
ljmp
ror
test
adc
fbld
push
test
mov
repz
inc
push
fldt
cmp
mov
lret
pushf
pop
out
mov
das
mov
push
jl
adc
outsl
out
movb
mov
pop
mov
sbb
stos
enter
addr16
cmp
cli
xchg
push
jb
push
repnz
outsb
in
loope
mov
rolb
repz
negl
enter
fadds
add
rcll
rcll
inc
insb
je
cmp
popa
aam
call
insl
icebp
icebp
les
add
mov
lea
dec
aad
scas
push
push
dec
mov
and
sbb
repnz
xlat
mov
sbb
dec
cli
in
ret
lods
test
or
dec
int3
mov
xor
in
mov
pop
mov
mov
cmp
jb
xchg
xchg
inc
subl
push
push
shll
jae
test
push
cwtl
arpl
add
sbb
ljmp
inc
xchg
inc
pop
test
dec
roll
mov
mov
insb
frstor
ja
ror
js
adc
push
xchg
push
jne
mov
xchg
xor
mov
push
addb
mov
fisubrl
xchg
enter
adc
mov
push
mov
mov
push
lcall
adc
xor
orl
push
xchg
fnstsw
xchg
outsb
or
nop
iret
dec
popf
mov
push
in
push
sbb
ja
je
dec
stos
push
push
out
inc
jl
cld
sbb
mov
stos
cwtl
pop
das
xor
mov
xor
or
rorl
push
fcomps
jl
sbb
pop
xchg
cli
into
jle
and
mov
pop
call
or
cmp
ja
int3
aam
jl
xchg
pop
sbb
stc
sub
dec
lret
add
sbb
data16
repnz
jmp
movsb
aam
test
xchg
data16
dec
sub
cwtl
jl
mov
out
mov
push
test
xor
or
adc
push
cli
test
out
inc
dec
xchg
lods
dec
dec
dec
fbld
testl
inc
mov
adc
test
rorl
sbb
xor
aam
mov
jns
scas
pop
cmp
imul
in
xor
int3
or
mov
cmc
daa
jae
and
and
mov
push
push
fdivrs
xchg
adc
test
inc
in
and
enter
loopne
sbb
mov
je
ss
inc
scas
stc
mov
aas
sbb
xchg
icebp
sub
xor
rorb
jmp
es
in
jb
movsb
andl
push
xlat
add
xchg
mov
lret
cmp
fiadds
add
fwait
pop
jb
push
jb
mov
addr16
jo
pop
aaa
mov
ja
jmp
push
push
daa
mov
mov
sbb
or
xor
jbe
cli
push
pop
xchg
ficompl
pop
sbb
jb
icebp
ljmp
xor
out
jae
xor
cmp
lret
imul
pop
cmpb
cmc
xor
mov
outsl
mov
push
mov
cmp
and
call
mov
in
push
cmpsb
sub
sarl
pop
sub
pushf
sub
mulb
cmp
mov
les
test
inc
repz
iret
push
xchg
adc
push
mov
sbb
jmp
push
inc
mov
out
pop
iret
dec
cmp
push
mov
stos
cmp
xor
gs
aaa
test
lcall
pusha
dec
inc
leave
data16
mov
dec
cmp
push
push
aad
pop
pop
inc
adc
jg
push
adc
mov
lcall
sbb
dec
pop
add
mov
std
addr16
sub
movsl
and
insb
or
mov
xchg
outsb
test
test
pop
bound
imul
in
inc
fisttpll
cs
mov
popf
into
jecxz
sub
xor
sub
sete
mov
mov
rcrl
cmp
xor
inc
lods
add
idivl
sbb
gs
ret
divps
lods
in
ja
xchg
push
or
pop
in
xor
and
sub
jae
or
pop
in
int3
adc
js
mov
nop
mov
dec
fs
js
cltd
out
cmpsl
imul
xchg
scas
shlb
mov
addr16
or
dec
int
test
cltd
pop
push
pop
sbb
fnsave
aad
pop
fbld
lods
out
into
call
out
cltd
sub
sbb
mov
push
or
push
inc
hlt
inc
test
jg
push
cmc
pop
ret
popf
jg
js
adc
mov
repnz
mov
fcomps
xor
inc
or
jno
push
scas
jns
pop
ss
jmp
loope
sbb
aam
mov
ret
mov
enter
dec
lea
out
les
orl
pop
in
mov
mov
lea
insl
push
movsb
fst
lock
mov
in
inc
sub
lods
pop
or
stc
fiaddl
xchg
pop
xchg
fcomip
sbb
jl
rcrb
rol
mov
cmp
ss
aaa
xchg
call
pop
cs
mov
xor
mov
shl
pushf
lret
xchg
rolb
cmpsl
xor
insl
and
add
subb
cmp
fsubrs
pop
sub
jmp
sbb
mov
push
leave
stc
xor
xor
jp
aaa
and
and
lods
xor
repz
sub
jecxz
into
leave
push
sbb
mov
dec
rcl
hlt
imul
js
xchg
fs
jl
jb
fcmove
and
lcall
in
jecxz
jae
popf
and
out
loop
xlat
dec
xor
aam
shl
in
dec
mov
and
ja
ljmp
xchg
pushl
das
xchg
lret
or
popf
andb
rcl
movb
and
popa
pusha
adcb
mov
icebp
aas
jo
lcall
addr16
inc
mov
cmc
xor
push
and
jae
lret
jp
jae
cmp
adc
sarb
out
fs
data16
int
lcall
sar
adc
jmp
stc
hlt
rcrl
fisttpll
dec
pop
push
loop
xchg
sar
ja
mov
jbe
jle
shl
add
inc
mov
sar
outsb
stc
outsb
jle
mov
sbb
dec
fwait
popf
mov
ljmp
adcb
jg
pop
sub
mov
fdivp
jne
loop
push
mov
mov
jne
shlb
cmp
popl
setle
shrl
sub
cltd
mov
negl
sbb
pop
adc
filds
xor
stos
popf
jmp
aad
imull
jne
sahf
mov
loope
fcompl
outsb
adc
add
repz
and
or
pop
arpl
xlat
sbb
outsb
cmp
bswap
pop
or
loop
ffreep
cmp
xchg
and
mov
out
roll
mov
outsl
shl
int3
and
push
pop
mov
es
mov
je
in
sub
test
pop
or
jae
sbb
sbb
add
fdivrl
lcall
xor
fld
jne
cltd
stos
jno
jb
and
arpl
repnz
mov
iret
xlat
dec
out
test
fsubrl
es
fcmovnb
jmp
mov
add
add
or
jmp
enter
inc
scas
mov
lds
and
lret
push
jmp
mov
push
pushf
xchg
sub
sbb
int3
rol
mov
cmp
clc
adc
imul
push
add
jecxz
add
push
call
mov
xchg
dec
out
mov
gs
pop
mov
cli
or
sbb
outsl
jp
lock
imul
push
rcrl
adc
ja
pop
cs
add
pop
clc
test
in
scas
cwtl
sahf
jmp
mul
cld
sbb
ret
sbb
je
or
icebp
dec
rep
testl
mov
cmpsb
xchg
daa
add
pop
jbe
and
imul
push
jne
hlt
mov
adc
int3
into
and
xchg
and
fisubl
cmc
fsubl
cmc
cmp
add
daa
jnp
add
push
shll
js
xchg
adc
cwtl
sbb
inc
pop
or
iret
mov
gs
nop
das
push
idivb
negb
cmp
and
sbb
sub
sub
dec
enter
and
adc
ret
ja
fistl
cmp
xor
mov
nop
sarl
mov
inc
nop
push
gs
mov
push
mov
jmp
mov
cmp
adc
ja
mov
decl
fildl
xor
arpl
iret
fstpl
pusha
push
dec
xor
int3
fadd
pop
fcoml
push
mov
dec
cmp
mov
cmp
mov
pop
xchg
mov
cmove
push
mov
push
adc
adc
je
dec
scas
sti
push
mov
sub
cli
clc
jmp
pop
sbb
pop
pop
inc
mov
popf
aad
outsb
mov
test
pop
mov
fistpll
fstpt
es
mov
call
sub
out
cltd
mov
cmp
testl
sub
sub
or
mov
mov
in
sbb
xchg
xor
adc
jle
xchg
into
mov
sbb
add
cmp
test
xchg
mov
push
cltd
inc
cmpsb
xchg
and
lock
lahf
sub
jno
negl
stc
mov
cmpsl
aad
outsb
scas
in
mov
shlb
jg
mov
pop
xchg
add
std
push
adc
and
jg
vpmuludq
cld
lahf
sub
fsubs
jg
and
ss
ret
in
scas
jns
ja
inc
cmp
cli
pushf
fcoms
out
xchg
andb
nop
popa
add
or
mov
ret
mov
rclb
lahf
jne
call
inc
js,pn
lret
push
jns
push
test
dec
repz
imul
insb
mov
and
xchg
mov
push
lods
xchg
push
sbb
xor
incb
rcl
insl
stos
inc
call
adc
lods
lahf
cmpb
loopne
inc
and
mov
test
rcll
and
loopne
push
ds
mov
cli
or
lret
arpl
mov
sti
enter
ret
fadds
addr16
scas
add
test
mov
out
inc
push
xchg
mov
fistps
aam
iret
fisubl
stc
lods
rolb
mov
xorl
pop
inc
and
lds
pop
xor
es
push
push
div
lret
repnz
data16
sub
jmp
lcall
stos
adcl
lcall
and
fstpt
cmpsl
pop
lods
jecxz
pop
push
int3
rolb
call
push
jb
push
test
inc
call
or
loopne
mov
imul
dec
cmpsl
mov
cli
adc
je
sti
fsubrs
sbb
into
mov
loope
in
incb
or
cmpsb
and
sbb
xor
add
ja
aaa
or
stos
bound
aaa
test
fdivrl
jmp
jne
jp
sub
mov
or
jle
and
rcrl
imul
xchg
or
pop
out
xor
into
xor
loop
lods
or
test
mov
push
fs
rcrl
das
pop
fcompl
fldt
jb
push
or
push
and
add
sub
outsb
lahf
xchg
push
mov
repz
push
mov
out
add
lock
inc
and
mov
pop
mov
imul
sub
pop
test
mov
dec
xor
mov
fs
pusha
xchg
add
jnp
cwtl
inc
mov
loop
or
repnz
mov
dec
pop
rorl
loope
loope
nop
addr16
mov
xchg
push
sti
xchg
inc
and
aam
aam
mov
scas
mov
fdivrs
jbe
push
leave
in
xchg
xchg
sti
rcl
sub
mov
dec
dec
and
sti
addb
sbb
push
int
jl
mov
nop
push
xor
jns
in
push
rep
mov
nop
pop
neg
mov
xor
sub
xlat
jecxz
push
push
enter
xchg
test
fistl
xor
in
shrb
aas
lock
pop
dec
xchg
leave
inc
mov
das
das
dec
insb
mov
insb
pusha
jo
out
and
mov
sbb
shlb
shll
mov
popa
or
repz
push
mov
bnd
cli
daa
pop
rcll
js
cwtl
lds
sbb
jg
int3
or
push
test
mov
or
mov
add
or
inc
lahf
ds
leave
cli
or
fstp
lret
pop
rcll
mov
xor
xor
sbb
cli
cmovo
jne
arpl
mov
and
stos
fdivl
mov
in
xchg
dec
iret
or
dec
cmc
idivb
xchg
lods
loop
out
mov
sar
and
aam
test
sbb
and
adc
mov
sub
cmp
scas
in
push
sbb
je
sbb
sbb
add
cmp
in
aas
jecxz
xchg
bswap
sti
jl
lds
in
push
ss
cmp
sub
jg
adc
rorl
inc
sub
fdivrl
repnz
pop
inc
cmc
mov
aam
js
stc
pop
xchg
test
jne
pop
mov
dec
jbe,pn
add
mov
dec
mov
adc
adc
hlt
mov
stos
hlt
push
cmp
loopne
jmp
clts
inc
lret
xorps
imul
fnstcw
mov
mov
mov
xchg
push
pop
sub
sbb
ljmp
enter
cmp
mov
subl
icebp
add
aas
daa
pop
icebp
jl
enter
sub
xchg
out
adcb
js
dec
lret
and
ret
fsubrs
push
push
das
mov
outsb
adc
bound
push
add
dec
xor
adc
fisubrs
sub
mov
pop
pop
sbb
inc
mov
adc
sub
idivb
or
ret
sbb
add
sahf
cmpb
add
int
scas
dec
lret
sbb
push
mov
inc
add
xor
mov
loop
push
sahf
rclb
pop
or
test
push
sbb
pop
jnp
and
shl
push
inc
icebp
fsubrs
fmull
cmp
push
mov
sub
jg
and
lea
imul
loope
mov
aas
xor
xchg
in
je
or
pop
mulb
jb
push
bswap
clc
adc
pop
fsubp
outsb
daa
gs
fdivr
mov
mov
pop
dec
outsb
es
lret
jns
test
push
cmp
movsl
cld
testb
mov
dec
aaa
mov
lods
lcall
test
xor
pop
inc
cmp
inc
jns
or
mov
imul
mov
movsl
loope
cmpsl
push
dec
clc
std
push
rorl
dec
mov
test
push
and
inc
mov
popa
xchg
xchg
push
mov
adc
sbbl
outsb
mov
xor
cwtl
fmuls
push
ror
stos
scas
and
or
push
inc
xorb
mov
cmp
mov
sbb
jp
cmp
xchg
push
push
jae
and
jnp
mov
cld
int
sub
adc
and
fbstp
repz
lahf
mov
test
stos
and
jnp
mov
xchg
roll
push
dec
or
hlt
in
push
pop
xchg
or
rcll
dec
lock
pop
loope
and
sbb
cmp
lret
mov
sbb
mov
mov
inc
lret
cmp
cld
out
test
xchg
popf
pop
dec
push
adc
jo
and
cmc
bound
sub
dec
stos
fcmovnbe
fistpl
or
movsl
push
int
adc
stc
and
lods
and
sbb
xadd
aam
icebp
inc
jbe
mov
scas
fcom
inc
jp
in
adc
jns
mov
adc
and
or
repnz
pop
or
mov
test
xchg
mov
and
adcl
push
stos
sbb
dec
pop
lods
lds
jo
pushf
insb
add
pop
cmpsl
aad
and
jecxz
xor
test
mov
lret
ljmp
or
fs
filds
lahf
shlb
testl
mov
inc
out
out
insb
cwtl
dec
clc
adc
mov
or
pushf
push
fld1
inc
clc
fnstcw
inc
dec
xor
xor
xor
or
push
jno
dec
mov
mov
sub
xchg
adc
mov
int3
test
jae
gs
jg
adc
call
aaa
pop
jno
je
add
push
ficoms
out
pop
lea
mov
xor
sbb
pop
mov
stos
dec
cmp
xlat
lods
sbb
cld
and
adc
add
popf
inc
sbb
sub
inc
out
mov
lahf
xor
mov
xchg
aad
das
jno
test
push
aad
inc
jbe
push
jle
stos
mov
sbb
jno
and
popa
fildll
xchg
insb
sbb
pop
in
adc
or
iret
add
int3
and
pop
pop
sub
movsl
add
cmpsb
test
mov
jne
scas
jecxz
or
push
into
lock
and
mov
test
push
mov
or
scas
nop
dec
inc
insb
in
imul
fdivrl
stc
mov
lods
jp
loope
xor
aam
xorl
jae
mov
shl
mov
add
in
mov
sbb
cmc
repnz
hlt
push
loopne
jl
xchg
mov
ja
dec
jp
repnz
mov
jo
int
push
dec
or
xchg
bound
sbb
mov
rclb
dec
cld
pop
cs
push
or
int
test
inc
stc
jnp
inc
fdiv
sbb
jae
pop
imulb
and
xor
cmp
sbb
add
imulb
divb
mov
jg
fsubs
ret
jmp
fdivl
testl
aaa
mov
lcall
pop
repnz
lods
test
adc
inc
gs
xlat
fnstenv
mov
jmp
scas
imul
sbb
and
cmp
mov
and
shll
cli
push
inc
pusha
ficomps
sub
or
sbbb
mov
outsb
xchg
and
out
inc
and
adc
arpl
pop
inc
lods
mov
mov
in
repz
jecxz
rcr
ret
sub
adc
arpl
pop
inc
lods
mov
mov
in
repz
jecxz
rcr
ret
sub
adc
arpl
pop
inc
lods
mov
mov
in
repz
jecxz
xlat
in
sbb
or
cmp
sbb
arpl
push
fldl
daa
xchg
popf
hlt
lcall
mov
xor
and
lahf
add
adc
imul
stos
cmpl
jmp
jle
lret
loop
adc
add
xor
and
push
imul
dec
bound
stos
sbb
mov
sti
repnz
fistl
sub
cmp
or
sbb
inc
jnp
dec
bound
add
fwait
shrb
mov
dec
sub
xor
fwait
lods
leave
cwtl
jns
lcall
fisubs
xchg
sub
jo
ret
out
pop
jge
mov
lods
call
lahf
sbb
pop
inc
dec
mov
sub
fwait
outsl
mov
or
xor
out
stos
stc
or
xchg
push
inc
mov
bound
ljmp
adc
add
jne
push
jnp
les
pop
jo
xlat
dec
je
lret
sub
xor
push
in
lret
loop
rorb
inc
outsb
icebp
pop
daa
fdivrs
aam
aaa
je
pop
cmp
jecxz
out
mov
test
idiv
bound
dec
fwait
mov
mov
fcmovu
sub
cmp
or
sbb
inc
jnp
dec
bound
stos
cmpb
jmp
sti
repnz
loop
push
inc
jbe
pop
bound
push
pop
xor
add
out
mov
fcmovu
rorl
movsb
lcall
dec
imul
xor
rcl
into
mov
mov
nop
sahf
scas
xchg
mov
add
arpl
push
imul
dec
bound
stos
cmpb
jmp
sti
repnz
loop
adc
add
xor
and
push
imul
dec
bound
stos
cmpb
jmp
sti
repnz
loop
adc
daa
jb
mov
inc
cltd
xor
mov
mov
fwait
pop
push
sbb
sub
movsb
es
lret
adc
sub
inc
sbb
adc
jge
pop
in
inc
mov
ret
cmp
xor
and
adc
mov
jecxz
sub
jo
and
sbb
jo
aaa
scas
jecxz
stc
cli
pop
adcl
subl
insb
mov
cmp
cmpsb
imul
adc
adc
and
ret
add
inc
pop
cli
xor
jae
jb
mov
test
ja
shl
cs
push
add
jne
pop
adc
or
add
call
push
fsubl
sub
mov
aam
fwait
jl
imul
xor
ljmp
test
repz
mov
mov
push
sbb
movl
dec
stos
or
pop
sub
mov
loopne
lods
shlb
add
sub
or
cs
shll
sbb
outsl
cmpsl
out
movsl
aam
outsb
lea
mov
lret
sbb
cli
sub
sahf
popa
hlt
push
xchg
or
and
repz
jge
daa
pop
push
jae
mov
jne
jae
fildll
fwait
jno
scas
inc
addl
ret
repnz
push
out
lds
add
pop
out
repz
and
cmp
stc
out
movsb
pop
pop
and
mov
movsl
mov
or
cmc
adc
add
pop
push
stc
scas
cli
sbb
dec
hlt
test
jno
cmpsb
fcmovnu
sub
dec
pop
cmp
fcom
sti
in
lahf
xlat
nop
add
int
ds
lret
sahf
in
jg
movsb
in
pop
mov
cmp
dec
jmp
cmp
xchg
repz
mov
dec
and
out
popa
ss
push
ficompl
pusha
shlb
sbb
lcall
lds
or
sbb
int3
dec
int3
jnp
xor
fxch
dec
push
and
mov
lret
addr16
mov
push
sbb
int
fisubrs
out
mov
xchg
daa
repz
das
xor
push
out
into
sbb
pop
sub
dec
pop
loop
imul
pusha
add
lahf
xlat
and
push
xchg
pop
sub
xchg
adc
jno
mov
fwait
cmp
or
inc
inc
dec
in
inc
out
add
aaa
leave
fisubl
mov
jne
push
jo
scas
jge
enter
pop
pop
scas
mov
sbb
outsb
int
lock
or
dec
dec
jnp
jge
and
sub
or
xor
push
mov
lahf
sets
pop
add
jl
mov
adc
sar
sub
out
popa
cmc
mov
roll
fsubrl
pop
imul
rol
xchg
test
loope
leave
sti
xchg
bound
setns
mov
jmp
or
daa
mov
out
loopne
mov
sti
pop
pop
in
xor
out
in
sbb
and
add
mov
inc
xchg
jg
leave
fcmovbe
mov
outsb
jmp
mov
sbb
jns
dec
gs
jge
cwtl
adc
addr16
sbb
ficoms
sbb
insb
das
jle
xor
add
cmp
call
in
fisttpll
mov
xchg
push
lret
adc
arpl
xor
inc
cwtl
push
scas
das
mov
jne
aad
sub
mov
insb
testl
leave
xchg
lea
jmp
bound
mov
shr
sub
mov
and
or
and
adcb
loopne
aam
mov
shrb
mov
das
mov
inc
repnz
ja
adc
adc
mov
jl,pn
aas
rorb
test
mov
cmpsb
cld
jo
cwtl
xchg
iret
shl
push
scas
lcall
cmpsl
test
push
into
push
imul
fcompl
movsl
jge
xor
mov
out
daa
fs
ror
in
xor
enter
sub
mov
push
insl
movsl
mov
push
mov
add
sub
sub
dec
cli
clc
or
push
sub
cmpsb
pop
loopne
jmp
negl
aaa
adc
ss
dec
xlat
jne
flds
and
rcrl
or
fwait
loopne
out
call
shlb
mov
jne
dec
jg
pop
and
push
mov
mov
or
sub
lds
jmp
xor
loop
data16
inc
cmc
les
scas
mov
bound
sub
mov
dec
push
outsl
sub
shll
xchg
ds
pop
add
cmp
push
or
mov
mov
xchg
out
int
mov
hlt
mov
in
test
adc
jo
inc
call
jmp
cmc
push
sub
test
mov
dec
inc
std
lcall
xchg
loope
loop
cmp
imul
and
sbb
in
jo
in
das
and
js
shrb
js
pop
xchg
int3
subb
icebp
js
xor
and
mov
dec
es
push
subl
daa
jmp
aas
das
sub
test
adc
cmp
test
sub
cmpsl
and
jmp
push
add
scas
lcall
idivb
loope
sbb
mov
into
add
stc
xchg
or
enter
xor
into
mov
mov
mov
push
lret
fimuls
adc
ret
fwait
sub
mov
scas
fisubs
scas
sub
cmp
pop
imul
fcomps
inc
add
mov
aas
jmp
pop
or
bound
push
sahf
xchg
mov
insb
add
fldenv
out
dec
outsl
or
add
aas
or
jmp
and
gs
imul
xchg
inc
stos
push
imul
aad
cmp
dec
jg
sub
push
nop
nop
sub
loopne
lds
insl
fwait
movsl
ret
pop
ds
mov
inc
sbb
jmp
leave
outsb
dec
enter
adc
lcall
js
or
dec
dec
mov
imul
and
lea
inc
ds
fildl
cmc
cmp
aas
lods
xor
mov
mov
dec
cmc
and
sbb
fimuls
ds
push
std
sub
push
fdivrp
push
jmp
bound
mov
pop
jbe
mov
dec
mov
pop
sahf
xchg
sub
mov
dec
push
xor
mov
xchg
push
lock
push
mov
mov
filds
jl
push
ljmp
dec
mov
cmpsl
daa
sbb
test
es
push
imul
mov
lret
in
push
inc
push
idiv
mov
ljmp
arpl
les
and
jmp
outsl
fwait
pop
sti
sub
es
ud0
mov
dec
jle
pop
push
pop
xor
test
sbb
sub
jp
mov
push
andl
adc
jns
cmp
inc
dec
dec
test
sub
aam
add
dec
mov
pop
dec
xor
xchg
sbb
test
out
movsl
push
mov
jle
ficompl
pusha
iret
cmpsl
or
rolb
mov
fiadds
push
xchg
mov
int
mov
rcr
xchg
dec
push
cmp
sti
scas
sbb
scas
sbb
cmpsb
sbbb
out
push
pop
xchg
xor
pop
xchg
xadd
jae
mov
ret
and
lret
sbb
push
icebp
imul
repnz
lea
push
add
sahf
push
ljmp
cmpsl
loope
jle
out
sbb
pop
mov
lcall
inc
subl
sbb
sub
add
popf
xchg
add
ret
jmp
mov
mov
movsb
and
ds
adc
mov
dec
test
clc
mov
inc
jns
addl
fucomp
cmpsl
sub
cmp
and
inc
fwait
jae
subb
xchg
cmpsl
dec
push
mov
std
mov
jle
adc
xchg
nop
out
dec
or
cs
xchg
mov
jnp
push
inc
jle
or
jo
sub
inc
adc
fucomp
je
jb
sahf
das
sahf
jge
gs
and
or
ja
and
push
popa
pop
dec
or
push
int
jg
mov
dec
cli
pop
xchg
lret
lods
pop
sbb
loope
pusha
xchg
std
sbb
inc
and
and
and
jbe
mov
nop
cld
sbb
mov
mov
daa
sub
mov
pusha
iret
adc
jne
xchg
data16
and
testb
xlat
outsb
mov
mov
add
ja
mov
xchg
pop
loop
test
mov
fs
call
inc
fcomip
lds
adc
jl
data16
sahf
pop
arpl
xor
stc
cmp
pop
dec
iret
out
adc
push
scas
jl
push
cmpsb
es
jb
and
push
xor
aas
imul
pop
cmp
cmpsl
repnz
pop
push
mov
mov
xchg
das
or
stos
stc
cmp
mov
mov
aad
xchg
es
pop
sub
cmp
shlb
cmpsb
test
jmp
loop
jae
or
popa
lret
cwtl
in
xchg
push
ret
push
jno
pop
test
iret
xchg
add
imulb
out
rcrb
mov
mov
dec
mov
fwait
cmp
sub
and
aam
int
xchg
lret
aas
pop
mov
adc
lds
fidivl
stc
jg
lret
leave
lock
add
mov
ja
or
cmpsb
cli
push
mov
mov
icebp
pop
lods
cmc
enter
jo
rcrl
inc
mov
xchg
push
punpckhdq
xor
jge
or
push
push
mov
push
mov
std
fcoml
shll
pusha
sbb
icebp
inc
fs
stc
pusha
dec
sbb
shrl
inc
std
dec
icebp
outsb
push
ja
ljmp
scas
outsl
mov
shrb
adc
add
dec
ret
mov
sbb
and
xchg
icebp
bound
outsl
pusha
sbb
cmp
pslld
pop
out
dec
push
inc
cltd
repz
sbb
push
xchg
loope
cmp
insl
jle
pop
sub
fdivrs
sti
jno
inc
sahf
in
sub
hlt
push
xchg
xchg
sbb
push
orb
xor
aaa
cmp
or
xchg
adc
add
push
push
xchg
and
jbe
js
and
cmp
jecxz
lahf
aas
inc
pop
jmp
pushf
cmpsb
in
mov
rep
shlb
cmp
pop
fcoms
lock
arpl
xchg
clc
lahf
xor
bound
or
pop
icebp
pop
lcall
sbb
rolb
cmp
mov
mov
jle,pt
push
xor
and
iret
cmp
jg
cmp
pop
sti
fimuls
ret
jl
andb
movsb
add
adcl
sbb
arpl
sbb
das
adc
or
incl
or
adc
xchg
mov
mov
xor
jbe
fs
into
inc
cmpb
sbb
mov
fidivrs
push
cwtl
jo
adc
push
das
push
jp
xchg
push
sahf
cmp
mov
xor
xor
inc
pop
test
xchg
callw
lret
jmp
arpl
jo
js
and
jg
push
push
mov
enter
sbbb
sub
push
sbb
pusha
gs
outsl
iret
push
push
aad
pop
push
inc
xchg
ffree
jnp
pop
loope
pop
faddl
jge
push
dec
xor
sti
push
mov
and
addb
fisttpl
jne
popa
push
jg
xchg
out
sahf
xchg
mov
scas
mov
push
jle
fcmovu
dec
lret
pop
js
lods
ret
inc
pop
push
outsl
pop
scas
shl
jmp
outsb
xchg
adcb
rcrl
ret
xor
scas
andb
mov
aam
mov
cmp
leave
adc
stc
push
jae
add
add
stc
out
cli
scas
fs
imulb
mov
pop
mov
cmc
jbe
jo
lds
mov
pusha
hlt
cld
in
lods
cmp
mov
int3
xor
or
pop
bound
movsb
loop
jbe
lods
push
ds
pop
xchg
cmpsb
sbb
mov
data16
sbb
jno
sbb
les
xchg
rcrl
in
pop
pop
sbb
add
pop
pusha
xchg
pusha
pushf
rolb
adc
bound
add
jecxz
jb
mov
test
push
icebp
loope
daa
imul
cmp
jmp
mov
icebp
imul
and
lahf
lea
or
stos
and
and
call
call
pusha
subb
imul
dec
cmp
xchg
ljmp
jns
push
jg
mov
dec
mov
push
jnp
xchg
fs
mov
or
lahf
dec
testb
int
scas
pop
inc
push
push
aam
cmpsl
sbb
pop
push
mov
add
fs
lcall
loope
xor
add
jg
loope
mov
aam
testl
enter
into
ret
addr16
ret
cmp
lea
add
into
inc
es
push
outsl
jg
mov
add
daa
negb
out
das
pop
dec
popf
jnp
push
pop
push
cli
mov
xchg
cwtl
lods
pop
push
lods
mov
int
icebp
sub
int3
and
lock
shlb
je
jns
push
mov
out
mov
imul
bound
lret
and
lea
xchg
pop
jne
push
mov
jg
dec
xor
inc
jae
mov
std
out
out
dec
mov
sbb
stos
mov
push
inc
xchg
clc
cmp
mov
int3
scas
std
xchg
aas
scas
data16
pop
test
lds
or
xchg
xor
ja
mov
insb
jl
aad
fstpt
fstps
imul
sub
stos
jg
xor
xchg
dec
adc
or
inc
movsb
loop
sub
inc
sbb
fnstsw
into
shr
jge
jns
adc
mov
cmp
arpl
xchg
xor
add
xchg
push
xchg
fcmove
ja
sbb
out
call
inc
and
je
fbstp
inc
xchg
lret
mov
shlb
pop
stos
stc
lret
pop
in
mov
dec
insb
fwait
sti
in
and
push
inc
and
mov
stc
cltd
jge
adc
mov
mov
mov
jnp
mov
jnp
addb
jo
adc
outsb
je
push
mov
dec
icebp
outsb
add
mov
arpl
das
pop
jbe
cltd
popf
mov
push
int3
bound
sbb
cmpsb
test
sbb
xlat
rol
icebp
or
inc
push
jg
mov
mov
mov
out
mov
daa
adc
dec
shlb
data16
test
jbe
or
into
mov
std
mov
push
scas
xlat
lods
dec
ror
aaa
xchg
jno
mov
das
dec
lds
sbb
addr16
popa
mov
test
shll
mov
adc
mov
sbb
mov
arpl
dec
lock
arpl
cli
pop
or
aaa
xchg
xor
addb
push
xchg
dec
dec
add
mov
push
jecxz
testl
mov
xor
in
aas
push
lods
push
xlat
sarl
push
cmp
outsl
mov
rcl
or
outsl
mov
push
cmp
mov
addb
insb
mov
cld
inc
mov
cmp
sti
in
rorl
sub
in
mov
int
jmp
insl
ljmp
std
fistpll
adc
les
jno
xchg
push
cmp
das
push
inc
ja
cwtl
in
cmovno
dec
sahf
inc
add
or
cmp
ret
xchg
inc
cmp
pop
dec
outsl
cs
pushf
std
aam
sub
movsl
mov
add
adc
jge
adc
pop
and
popf
or
in
push
mov
push
aas
lods
test
mov
psrad
test
gs
bound
add
rcl
mov
xor
subb
mov
xor
or
or
mov
js
mov
fsubr
sbb
jnp
push
xchg
cmovae
gs
je
xchg
pusha
mov
push
popf
jmp
xor
test
xchg
inc
add
mov
dec
pop
sbb
repnz
sbb
pushf
sbb
cmp
jecxz
je
icebp
mov
xlat
sbb
xchg
mov
add
jp
cmp
adc
scas
lcall
pop
cmpsb
push
movb
cmp
xchg
push
addl
rcrl
sub
sub
push
or
mov
dec
sbb
sar
test
test
into
mov
push
adcl
xchg
adc
fwait
mov
push
inc
test
mov
pop
jg
hlt
xchg
xchg
pop
mov
das
xor
pop
ja
subl
sub
iret
push
mov
jae
or
push
add
fucomi
sbb
sub
xchg
daa
mov
pop
sbb
sub
jl
sahf
push
dec
dec
inc
rcrl
aas
push
lea
movsl
cmp
sahf
je
pushf
mov
jge
test
pop
shlb
aas
in
leave
push
aas
fwait
mov
enter
jo
lods
fcmove
pop
mov
add
push
popf
call
and
arpl
js
imul
ss
scas
in
pop
mov
mov
jle
xchg
xlat
jecxz
test
call
ss
bound
sbb
int3
imul
sub
jno
jbe
test
cmp
push
mov
cmc
mov
enter
enter
sub
in
es
mov
inc
add
jbe
xor
sbb
nop
mov
mov
ss
sub
subl
xchg
jmp
das
adcl
mov
inc
jno
xchg
dec
and
jb
repz
mov
aad
in
add
ja
cmp
out
pop
call
arpl
add
and
cmp
fcomps
lahf
and
push
pop
inc
jge
addr16
stos
dec
mov
mov
sbb
mov
sbb
inc
xor
aas
mov
fidivl
jp
push
mov
shrb
pop
retw
lds
mov
into
sbb
data16
pop
lret
fdecstp
pop
repz
ja
sbb
xchg
sbb
adc
jns
outsl
gs
adc
cmc
push
jb
andl
ret
jp
sub
iret
lds
and
pop
and
cmp
ljmp
dec
fwait
sbb
push
or
ss
das
repz
mov
pop
cwtl
cmp
sub
popa
push
mov
and
fisttpl
or
rep
outsb
call
out
scas
xor
mov
imul
in
out
pop
and
aad
popa
hlt
pop
fs
mov
mov
rorl
cmp
sahf
mov
add
cs
dec
out
mov
lds
xchg
inc
test
cmp
sub
clc
cmp
mov
ror
jne
aad
rcrl
xchg
sahf
pop
pop
cmp
inc
into
mov
in
pop
outsl
push
lahf
xor
cwtl
cmp
dec
sbbb
mov
xchg
repz
adcb
pop
ja
jge
mov
fimuls
push
xor
mov
fcomps
xor
stos
fsqrt
ret
frstor
sbb
xor
outsb
jo
sub
cmpsl
hlt
sar
add
out
lret
ss
rolb
std
out
mov
adc
out
and
ds
fidivl
mov
ds
mov
add
leave
and
dec
push
mov
jmp
dec
dec
pop
adc
cmpb
enter
xor
xchg
or
stos
xchg
add
icebp
mov
cmpsb
pop
pop
push
das
ficompl
lret
sbb
pushf
mov
call
popf
fnstsw
add
inc
fisttpll
and
jae
insl
int3
inc
fcomps
mov
pop
into
or
out
repz
out
test
mov
inc
mov
and
test
push
je
mov
and
xor
jmp
jo
mov
cmp
sub
mov
jbe
sbb
push
in
aad
loope
xchg
push
jb
stc
mov
cmc
dec
addr16
cmc
and
mov
push
repz
and
mov
shrl
mov
pop
mov
add
int
xor
dec
cmc
icebp
dec
or
mulb
daa
das
out
or
in
jg
mov
cmp
mov
sahf
roll
fs
sub
in
fdivs
add
push
in
mov
popa
out
cmp
sub
shl
xchg
adc
jecxz
push
inc
cmc
pop
xchg
enter
mov
in
test
bound
jl
fstps
mov
xor
jo
outsb
mov
notb
in
mov
mov
mov
mov
fld
jg
cld
sub
mov
sbb
jne
xor
insb
push
mov
xchg
orb
loop
sbb
cmp
or
sbb
inc
jnp
dec
bound
stos
cmpb
jmp
sti
repnz
loop
adc
add
xor
and
push
imul
dec
bound
stos
cmpb
jmp
sti
repnz
loop
adc
cmpb
imul
dec
loop
xchg
sub
fwait
shr
ret
lret
loop
adc
add
xor
and
push
imul
dec
bound
stos
adcb
mov
add
xor
and
jp
push
pop
repz
mov
inc
dec
mov
ljmp
adc
and
shrl
pop
repz
cmpl
sub
cli
push
ljmp
adc
ret
jp
push
pop
repz
cmpl
sub
les
adc
pusha
into
pusha
lcall
mov
mov
jecxz
lcall
sbb
jmp
imul
cwtl
jb
adc
jb
sub
push
mov
ret
pop
push
pop
add
inc
fimuls
push
jp
and
bound
outsl
mov
es
insl
inc
mov
std
cmp
jae
testb
mov
xor
and
pop
jmp
insb
cmp
repz
mov
fdivrp
andb
push
jmp
mov
xchg
data16
mov
cmp
pop
inc
mov
clc
stc
push
jb
out
fcompl
sub
test
sbb
pop
shll
sti
xchg
ficomps
lret
inc
pop
in
xor
jecxz
repz
cmpl
sub
cli
push
ljmp
adc
cmpsb
pop
mov
movsl
sbb
or
push
cld
imul
aaa
jp
xchg
adcl
movsb
test
push
roll
inc
out
mov
cmpsl
and
pop
fadds
jne
or
mov
jae
hlt
aad
lds
pop
in
sub
push
movsl
cs
ds
push
xchg
sub
cli
push
ljmp
adc
ret
jp
push
pop
repz
cmpl
sub
cli
push
ljmp
adc
ret
jp
jg
test
fwait
push
jmp
repz
sub
lock
cs
sbbl
clc
pop
imul
mov
je
inc
pop
xor
sub
xor
add
int
scas
cltd
inc
inc
shrl
ror
test
mov
sbb
jecxz
push
popf
out
aas
jmp
inc
lock
xor
sbb
xchg
cltd
cmp
out
jbe
insb
or
cld
fcompl
mov
sbb
pop
add
ja
shlb
seta
cmp
filds
xchg
pop
add
into
lods
movsl
inc
pop
cmpsb
in
int
jne
cmpsb
inc
xchg
mov
pusha
xor
bound
lea
push
loop
pop
js
lods
loop
jmp
dec
fisubrs
pop
mov
xor
adc
pop
add
divl
jmp
pop
cmpsl
cmpsl
jbe
lods
popa
inc
outsl
sbb
xor
das
push
xor
xchg
fidivrl
xor
insb
frstor
fcmovbe
icebp
jl
and
xor
aad
push
lds
adc
cltd
mov
fwait
in
inc
xor
fisubl
fs
mov
pop
lods
test
sahf
lahf
xlat
pop
lret
xor
filds
or
adc
pop
fwait
jae
fs
jns
cmpsl
insl
repz
jno
test
ret
cmp
xor
sub
sbb
les
aaa
jge
sbb
pop
dec
xlat
repz
xchg
push
cmpsl
sti
testl
hlt
cmc
xor
inc
outsb
scas
out
adc
mov
aad
cmp
jne
xchg
xchg
dec
int
jae
cli
xor
xor
pop
cmp
insl
cmpsl
push
or
cmp
outsb
sub
ror
mov
adc
push
add
jmp
inc
xor
inc
push
mov
inc
bsr
and
jnp
xor
stc
pop
and
jns
das
sar
mov
add
or
dec
testb
popf
lret
and
test
movsl
ret
cltd
neg
xor
loop
arpl
xchg
and
stc
xor
xchg
outsl
lcall
int3
shlb
das
inc
push
sub
sbb
iret
push
shl
jae
push
dec
imul
lea
decl
insl
fldt
insl
bnd
testb
fs
mov
or
sub
push
rorl
popf
rolb
rorl
xor
mov
repz
jne
mov
stos
mov
jge
mov
nop
and
xchg
out
lods
repnz
pop
add
out
cmp
fs
cld
push
push
movsb
faddl
ror
xor
popf
mov
lahf
jl
mov
push
inc
mov
mov
shl
push
out
xor
xor
jno
jp
adc
xchg
dec
jno
pop
rol
sub
ds
jae
jmp
xchg
in
xor
jecxz
in
mov
xchg
icebp
xchg
cld
rcl
pop
xlat
in
scas
jmp
shll
sarb
fldenv
mov
ret
mov
arpl
lods
xchg
xor
jg
xor
sbb
dec
jmp
or
daa
lahf
jg
jle
and
ja
lods
into
popa
cs
pop
pop
xor
lcall
or
sbb
xor
out
mov
into
sbbb
or
fidivl
sub
lcall
push
int
jge
jo
insb
in
jmp
enter
mov
and
or
ja
je
sbb
mov
bnd
stos
mov
xor
cmp
xlat
setnp
xchg
icebp
stc
xchg
das
and
xchg
sub
test
inc
jne
mov
test
out
arpl
jb
jo
mov
push
lahf
int
mov
mov
fnsetpm(287
xlat
jl
jnp
dec
insb
xor
jbe
inc
decl
icebp
clc
or
stos
pop
cwtl
cld
xchg
mov
popa
nop
jle
jle
leave
gs
xor
test
jle
imul
mov
cmp
insb
cmp
lods
stos
insb
fucom
js
and
fists
and
jl
xchg
popa
jmp
int
in
jb
xchg
scas
mov
push
leave
push
jp
mov
mov
jge
adc
orb
shlb
mov
xchg
mov
push
or
loop
jns
push
cltd
cmpsb
push
lods
pop
or
movd
insl
push
add
sti
fldl
jb
inc
mov
roll
movsl
cld
or
out
shll
dec
cmp
fiaddl
xor
rorl
push
ret
ret
scas
bound
mov
pop
fadds
or
and
push
leave
jno
mov
xchg
je
iret
push
daa
mov
add
xor
dec
inc
xchg
push
push
or
in
and
shl
mov
add
clc
cmpsl
arpl
add
xor
repnz
imul
push
loop
mov
and
mov
cmp
es
clc
mov
or
ror
mov
xchg
jp
std
sub
fisubs
jecxz
div
nop
nop
push
popf
adc
lea
out
mov
xchg
int3
jg
fsubrl
loopne
ret
lock
push
and
xchg
inc
jnp
sbb
int
mov
ret
and
inc
inc
xor
push
cmp
out
pusha
add
aas
cmpsb
pop
lcall
xrelease
push
aaa
xor
test
lcall
loop
or
or
pop
or
lods
enter
xchg
nop
addb
push
jne
in
push
add
scas
test
das
dec
sti
inc
pop
int
push
mov
pop
test
out
test
ja
sub
pushf
repnz
push
stos
xchg
mov
stos
dec
ljmp
cwtl
dec
adc
sub
in
and
addl
rcll
and
mov
repz
sub
shrl
jb
lcall
shlb
push
xchg
loop
adc
mov
sub
fstp
std
push
cld
popa
push
into
loopne
shll
push
mov
loop
add
xor
setle
push
aas
fdiv
movsb
movsb
mov
sub
jno
mov
out
add
cmp
insl
lock
jmp
popa
rcr
mov
test
shlb
js
fwait
dec
mov
pop
cltd
jbe
and
lcall
mov
test
xchg
mov
ret
mov
adc
aad
repnz
addr16
xchg
mov
xchg
pop
lahf
arpl
aaa
jp
sbb
xchg
sbb
adc
push
sti
outsl
popf
jns
xchg
xchg
xor
ss
mov
lret
popa
hlt
inc
aaa
cmp
fwait
shlb
lea
push
shll
cmp
cmpsb
dec
sarb
push
into
mov
adc
xor
fsubs
int
outsb
test
arpl
cltd
mov
fisubs
sbbb
sub
mov
dec
push
sbb
shlb
push
mov
insl
divl
imul
insb
or
jo
ficomps
pop
sub
jns
cli
repz
adc
dec
xor
cmp
or
or
pop
dec
dec
cmp
loop
sbb
shlb
pop
mov
sbb
scas
test
sbb
rcl
mov
push
mov
es
and
pop
outsl
add
cmp
adc
add
ljmp
xlat
ficomps
push
xor
xlat
mov
mov
in
fmul
jecxz
iret
loop
push
cmpl
pop
push
pop
cmpsl
sti
in
jp
cmp
mov
aad
adc
addr16
sbb
mov
lcall
sahf
lods
hlt
clc
loopne
sbb
sbb
dec
add
add
ror
mov
or
shll
int
movsb
pop
xor
mov
popa
pusha
mov
mov
jge
pop
repz
les
nop
cli
or
inc
sahf
ret
push
gs
in
mov
sti
enter
insb
in
inc
xor
xor
push
pop
mov
gs
push
out
sti
add
loopne
jp
add
mov
mov
aaa
mov
and
aad
xchg
out
cmp
cmp
rorb
and
and
push
add
repnz
jmp
pop
mov
adc
adcl
fcoml
cmp
ror
sbb
clc
mov
adcb
add
test
rcl
mov
aam
pop
aad
popa
cmp
stos
jno
test
aas
jns
popf
andps
repnz
test
dec
imul
fcompl
int3
in
inc
aad
jl
mov
jno
ss
cmp
inc
scas
cmpsl
cmpsl
cwtl
test
shlb
inc
int3
inc
mov
inc
pop
or
cld
lcall
dec
popa
lea
aas
xchg
addr16
mov
int
and
mov
jb
in
neg
xchg
xor
and
xlat
sub
or
mov
fisttpll
cmp
xchg
push
mov
cmp
add
jo
das
icebp
aam
and
pop
add
test
xlat
jb
out
lds
sahf
cmp
mov
push
xchg
js
cmp
pop
iret
outsl
and
jmp
fsubrl
push
add
in
je
loopne
pusha
and
mov
add
inc
rclb
aam
imul
mov
pop
in
and
jbe
xlat
mov
in
out
loope
adc
adc
lds
adc
mov
jbe
fwait
lods
call
xchg
ret
mov
lock
jp
punpckldq
jb
sahf
in
push
or
rcr
cmpsl
push
int
lds
arpl
pushf
push
jmp
sub
xor
xor
out
mov
xor
clc
lret
and
call
mov
fnstcw
sub
cld
lret
sti
testb
hlt
sub
or
jecxz
addl
divb
or
or
mov
xchg
mov
lea
push
filds
data16
push
push
jmp
sti
cmc
popf
sub
mov
add
pop
pop
rcr
mov
out
adcb
push
dec
push
push
loope
mov
jg
gs
jle
inc
int
and
xchg
cld
inc
in
icebp
mov
lahf
cs
shl
stos
divb
repz
loop
test
xchg
jae
in
stos
add
insb
popf
idivl
cmp
pop
lret
cmp
push
jmp
repnz
mov
test
jp
pusha
movsb
rcll
jecxz
xor
out
adc
popa
cs
xchg
insl
pusha
sbb
adc
out
nop
imul
jmp
pop
sub
daa
in
jb
cli
loope
std
fisubrl
test
xchg
mov
into
sbb
lahf
inc
in
mov
xor
xor
jbe
mov
jne
mov
stos
ss
pop
mov
adc
js
xor
push
fisttps
push
test
xchg
jb
aam
jp
shrl
jns
xchg
std
push
insb
pop
pop
jo
inc
into
enter
push
cld
add
adc
mov
ficoml
jne
or
addr16
lcall
and
xor
insl
pop
pushf
sub
data16
fucomip
popf
fiadds
out
and
lods
out
fldenv
leave
out
hlt
std
shl
cmp
popa
or
mov
flds
jge
sub
daa
mov
pop
addb
div
stos
cmp
fstpl
pusha
les
push
or
xor
dec
in
cmp
sub
test
mov
lods
inc
and
push
enter
lods
xchg
rep
shlb
jmp
jecxz
mov
stos
sub
jle
call
mov
sbb
sbbb
in
cmp
dec
pop
pop
sub
shlb
add
test
out
jbe
in
pop
sahf
mov
into
sub
mov
push
adc
and
jge
es
or
adc
rorl
push
fistps
in
push
out
ret
cmp
jmp
push
pop
cmp
add
mov
jae
mov
push
mov
mov
add
aad
je
mov
movsb
dec
aam
ja
dec
nop
sub
sbb
stc
pusha
ficoms
in
and
cli
aad
jle
adc
mov
mov
jmp
xorl
xor
jne
xchg
sti
jns
xlat
pop
outsl
addr16
and
add
fwait
lock
pop
std
mov
insl
test
outsl
mov
inc
test
xor
imul
iret
dec
xor
testb
or
mov
stos
sbb
pop
mov
sub
mov
jmp
sahf
push
cmp
inc
pop
xchg
and
inc
iret
fldenv
loop
mov
stos
lea
push
lods
dec
jbe
mov
jecxz
fldl
dec
cmpsl
mov
pop
cltd
jae
ljmp
inc
iret
dec
xor
rcll
stos
int3
pop
push
fsubrl
push
pop
pop
loop
jmp
mov
inc
xchg
inc
sbb
lcall
push
addl
ret
addb
fwait
xor
xchg
mov
inc
sub
mov
push
mov
adcl
xchg
scas
mov
imul
fimull
repz
dec
leave
dec
addb
inc
dec
mov
out
xor
jge
daa
pop
test
and
lock
sub
jno
dec
cmp
inc
xor
dec
xchg
mov
pusha
iret
cmp
xor
stos
xor
lods
pusha
loop
fdivrs
cmc
repnz
sbb
jb
pushf
test
in
push
mov
nop
push
push
dec
loop
add
bound
iret
sub
in
mov
mov
movsb
sbb
mov
loope
mov
and
add
orl
fldl
inc
jp
lahf
fstps
push
frstor
scas
xchg
pop
mov
loope
shr
into
pmaddwd
jo
loope
pusha
xor
push
mov
and
ss
mov
fcompl
cmpsb
xor
imull
and
add
out
fnsave
jecxz
cmp
push
mov
or
and
fnstsw
stos
shr
neg
pop
shll
sbb
aam
mov
mov
scas
cmpxchg
inc
ret
jb
add
pop
pusha
aad
add
popa
fwait
cltd
jp
test
aas
test
xor
stos
cld
cmpl
cld
inc
mov
cmp
out
clts
jecxz
sahf
and
push
pop
repz
and
inc
add
les
sbb
lret
outsl
push
fstl
jo
test
jne
hlt
inc
sub
sarl
fldl2t
repnz
jne
push
cltd
mov
or
jb
das
mov
cs
aaa
fstpt
int
add
ja
outsl
xchg
adc
stos
je
aaa
or
or
aam
xor
add
clc
inc
xchg
and
lods
outsl
fmuls
push
cmp
dec
cwtl
popf
xchg
imul
push
xchg
daa
dec
hlt
and
xor
push
sti
add
mov
inc
jmp
dec
cltd
push
imul
int
add
cmp
mov
cmpsb
lock
or
imul
cmpsb
cmc
and
and
cwtl
maxps
dec
mov
les
imul
xor
cltd
dec
lods
adc
dec
ror
sti
inc
loop
insl
pop
cmp
lods
push
xchg
nop
into
xchg
std
test
mov
pop
pop
iret
xor
cmp
mov
stos
mov
iret
stos
inc
fldl
jns
mov
pop
daa
jb
loop
pop
dec
jecxz
mov
movups
insb
popa
rcrb
fsubrs
insb
or
in
push
mov
enter
sub
mov
push
dec
in
sbb
dec
adc
xor
adc
xor
rcl
xor
dec
xchg
mov
jo
fildll
jnp
fldcw
sub
add
mov
das
mov
pop
popf
test
mov
xchg
in
mov
mov
stos
stos
adc
push
nop
mov
push
test
dec
jp
call
mov
pop
cmp
pop
in
and
pop
xchg
xchg
daa
push
cmpsl
mov
shlb
in
in
fsub
pop
cmc
or
dec
jno
clc
mov
cmp
push
inc
dec
xchg
ljmp
cmpsl
repnz
add
push
adc
sub
mov
xor
rorb
enter
push
inc
test
lcall
jae
xor
test
mov
popl
dec
aad
jg
adc
mov
or
dec
jg
icebp
into
jb
push
mov
adc
aad
mov
xchg
test
mov
push
mov
xorb
add
mov
repz
cmp
cmc
lea
adc
mov
jg
fstps
pop
push
fsubrs
imul
push
inc
push
aam
push
cltd
dec
in
arpl
pop
cmpsl
dec
jmp
push
shlb
push
or
hlt
insl
test
and
dec
cwtl
inc
jmp
dec
lahf
gs
loopne
cld
out
repz
arpl
popa
pop
dec
sbb
fmull
xchg
std
fsubrl
sub
out
js
and
lods
out
jl
mov
fdivr
cltd
inc
dec
int
cmp
nop
sbb
cmp
sbb
push
mov
idivl
push
dec
sahf
push
lcall
leave
mov
jnp
jbe
cli
inc
mov
pop
sbb
inc
xor
shlb
cmp
jns
xorb
adc
lahf
xor
jns
je
cli
xor
stos
or
rclb
push
mov
test
mov
inc
hlt
int3
rorb
mov
inc
push
sbb
add
mov
jge
inc
icebp
sub
out
ror
cmp
mov
loope
sub
mov
pop
das
xchg
call
inc
pop
test
inc
and
mov
jnp
negb
lret
lret
imul
cwtl
lods
dec
aad
scas
mov
mov
mov
push
scas
das
dec
add
inc
cmpsl
and
sbb
pop
pop
dec
xchg
ret
sbb
es
or
sbb
add
sti
in
hlt
push
dec
jmp
fsubs
fcompl
xchg
por
sbb
ljmp
mov
and
fldenv
cli
add
jne
loopne
mov
xchg
hlt
jl
fucomi
out
hlt
lahf
xorb
lret
sub
dec
jne
add
inc
mov
cmp
jmp
in
add
pop
sub
js
push
pop
cmp
rcrb
adcl
fwait
add
jg
iret
ja
sbb
pop
xchg
sarl
jle
pushf
subl
pop
jmp
and
lcall
mov
arpl
mov
push
pop
xchg
mov
loope
xchg
faddl
outsl
pop
xchg
mov
insb
popf
popa
insl
jns
mov
orb
fcmovu
sbb
jmp
add
stos
std
jns
or
std
rolb
jmp
cmpsb
fsubl
inc
lret
lret
jne
dec
rorb
mov
pop
add
push
jno
xchg
mov
cmpsb
lret
arpl
scas
add
xor
push
addr16
push
xchg
repz
or
cwtl
xchg
gs
out
and
inc
leave
add
push
js
push
cmpsl
cmp
outsb
pop
mov
mov
push
inc
fsincos
inc
outsl
push
dec
shlb
scas
fs
or
or
nop
fmulp
fwait
sbb
std
into
pop
add
repnz
sub
ficoms
mov
xchg
inc
push
pop
sahf
call
add
addr16
loop
lock
add
xor
mov
dec
sbb
mov
cltd
outsb
pop
outsb
adc
sub
imull
in
mov
add
xor
adc
gs
movsl
ret
lods
xchg
adc
push
out
sub
and
dec
jae
scas
dec
jo
push
sub
cmpsl
lock
add
out
outsb
data16
hlt
ret
dec
and
loope
inc
pop
loope
in
inc
mov
xchg
jns
fsubrl
mov
out
ljmp
mov
test
ret
imull
out
mov
mov
add
out
mov
repnz
aad
adc
lods
std
mov
sub
mov
es
jne
add
stos
imul
push
inc
ficoms
shrl
mov
jge
push
test
aam
hlt
xchg
movsl
mov
sbb
jo
xchg
xor
jbe
js
or
movsb
mov
lret
ja
inc
sub
and
xor
adc
rorl
test
mov
mov
aad
clc
pop
stos
lds
mov
pop
stos
sbb
dec
repnz
int3
sub
mov
mov
arpl
bound
inc
pop
nop
and
ret
fadds
hlt
subb
loopne
insl
jns
scas
sbb
xchg
fcomi
xchg
jb
push
sti
ja
push
mov
xlat
ja
or
push
pop
leave
std
cmpsb
hlt
jne
mov
fdivp
or
addr16
aas
fsubr
sub
pop
test
jae
outsl
dec
jp
rolb
outsb
jb
xor
mov
mov
jbe
sbb
xor
mov
mov
xchg
int
pop
jp
sub
jmp
repz
cmpl
sub
cli
push
ljmp
adc
ret
jp
push
pop
repz
cmpl
sub
cli
push
ljmp
adc
ret
jle
push
pop
repz
cmpl
sub
cli
push
jmp
fidivl
add
xor
jecxz
repz
cmpl
stos
and
lods
inc
leave
fidivl
je
fwait
push
jne
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
jb
xchg
pushf
pop
lods
jno
push
mov
out
or
sbb
sub
cmp
dec
out
pop
fildll
aaa
mov
pushf
pop
lods
bsf
outsl
push
pop
in
dec
mov
or
cmp
sub
cmp
and
jl
push
scas
pushf
cltd
add
mov
jae
mov
mov
jae
dec
fistps
mov
test
mov
repnz
fnstcw
hlt
sti
sub
lock
and
shrd
mov
rcrl
pop
js
daa
testb
je
lret
mov
pusha
inc
fs
dec
jle
pop
insl
inc
icebp
outsl
lea
cltd
pop
mov
xchg
negl
ja
incl
jno
add
sub
nop
insb
jp
push
mov
pop
add
int3
nop
mov
pop
dec
add
sbb
jb
in
mov
mov
dec
cmp
in
cld
jg
decl
jmp
cmp
pop
out
pop
jge
cmpl
stos
xchg
mov
add
push
je
rorl
mov
or
das
insb
pop
sub
jg
sub
pop
idivl
cmp
je
pusha
icebp
movsb
fildll
dec
ficomps
pop
out
popa
xchg
adc
cs
fimuls
pop
iret
pop
out
push
xchg
and
sbb
pop
int
cltd
push
mov
cmp
xchg
dec
cli
dec
jecxz
mov
adc
ficompl
outsl
cld
dec
fistpll
test
fcompl
dec
cld
mov
sub
cmp
dec
out
pop
fildll
aas
mov
pushf
pop
lods
bsf
outsl
fcompl
dec
cld
mov
sub
cmp
dec
out
pop
fildll
aas
mov
dec
mov
push
nop
xor
aas
mov
mov
int3
push
je
dec
push
xchg
imul
dec
mov
jl
xor
jg
xchg
jno
cmp
jbe
out
add
jnp
cltd
loopne
cmp
movlps
mov
cmpsb
ret
movsb
pop
outsb
dec
mov
out
jno
bound
xchg
pop
cs
xor
xor
add
lcall
dec
cmpsb
scas
insb
push
daa
mov
sub
repz
pop
data16
add
sub
lret
movsb
repz
jecxz
bound
fucomp
mov
xor
push
mov
sahf
mov
mov
pusha
pop
or
les
jae,pt
cld
aaa
hlt
push
cmpsl
lods
enter
fadd
push
nop
or
fwait
hlt
inc
adc
and
xor
ss
stos
sub
lcall
mov
out
mov
pop
pop
sahf
lock
xor
cmpsl
outsb
jecxz
jmp
aaa
inc
xchg
mov
mov
push
sbb
dec
stos
subl
aaa
leave
xor
and
sbbb
scas
cmp
lock
sahf
repz
pop
pop
bound
repz
jecxz
stos
cmp
aad
mov
push
xor
xchg
cmp
out
lret
or
sub
incb
xchg
xchg
popa
mov
cltd
js
cmp
call
aaa
loope
out
inc
or
aam
mov
popf
cmp
inc
repnz
adc
daa
mov
cs
in
adc
push
enter
and
cmp
mov
xchg
sub
les
je
sbb
mov
xchg
xchg
and
push
js
push
push
ljmp
adc
jb
idivl
pop
fstl
orb
rcl
push
add
sar
push
adc
push
push
testb
insb
les
and
jnp
pusha
sbb
dec
or
mov
mov
ss
jl
push
arpl
aaa
cltd
sub
or
std
jne
mov
and
adc
stc
in
jmp
cmp
cmp
add
dec
and
jge
cmp
insb
mov
into
arpl
jp
notb
dec
fsubs
lret
loope
cmpsl
sub
call
nop
dec
and
loop
les
cmp
das
addb
dec
sti
fs
add
mov
xchg
aaa
sbb
mov
xchg
aaa
in
mov
test
fistl
test
jae
xor
leave
insl
pop
mov
iret
xor
jg
inc
fmuls
mov
dec
fcomi
jb
popa
lret
push
pushf
test
insb
adcb
inc
cmp
hlt
add
push
sub
xchg
std
xor
xlat
sbb
mov
sub
jns
scas
xchg
mov
pop
mov
cmpb
pop
out
icebp
xchg
jae
ret
ds
jg
les
subl
push
imul
hlt
pop
int
push
xor
mov
repnz
mov
gs
cmp
arpl
add
push
lret
insb
sub
pop
mov
dec
in
cmpsb
cli
xchg
out
mov
xchg
or
lea
cmp
je
scas
jge
push
mov
cmp
test
ss
push
xor
jne
bound
jg
sahf
aad
mov
movsl
pop
fwait
movsb
sti
pop
fsubrs
inc
aad
xchg
mov
adc
lret
cmpsl
test
dec
in
mov
inc
test
stos
push
mov
mov
ja
pop
dec
mov
dec
xor
cld
loope
mov
cwtl
xchg
pop
mov
mov
ss
adcb
mov
push
push
fidivrs
out
jns
or
mov
out
fistpll
das
decb
push
scas
repz
or
add
ror
test
jne
mov
mov
hlt
and
mov
gs
negl
and
in
ret
cmp
cmp
xchg
fwait
and
xlat
ljmp
mov
popf
dec
in
mov
cmp
repz
adc
xlat
jno
lea
imul
mov
addl
xor
lret
scas
mov
add
dec
push
push
push
add
adc
test
jp
pushf
xor
sub
fildll
loop
sahf
mov
add
das
xchg
inc
pop
lret
jmp
cmp
dec
aaa
xlat
xchg
sub
add
ljmp
xor
sbb
pop
pushf
inc
je
adc
mov
lcall
jg
xchg
dec
jmp
hlt
fs
into
or
out
repz
cmpsb
dec
or
lahf
shrb
push
add
xor
inc
call
or
pop
movsb
ret
inc
sub
stos
adc
dec
cmpsb
out
out
idivl
jne
ret
insb
orb
cmpsl
jl
push
test
ja
mov
jo
sub
shlb
outsb
xchg
scas
and
jg
inc
push
bound
or
icebp
sub
int
test
xor
fbld
mov
mov
cmp
mov
leave
mov
add
rep
in
ds
xchg
fistpll
fs
out
addr16
or
xchg
in
movsl
mov
stos
je
dec
and
lea
cmpsb
inc
sti
ja
push
iret
fimuls
xor
xchg
aaa
mov
inc
push
xor
cmpsb
push
gs
xor
add
jg
out
jbe
sti
mov
add
xor
jae
push
call
sub
es
in
push
mov
dec
push
inc
aaa
insb
mov
push
in
js
dec
xchg
in
jge
mov
ja
dec
cltd
mov
ss
mov
adc
inc
inc
mov
jne
test
std
cmp
fimuls
add
sub
add
xlat
sti
fsub
stos
rcrl
aas
call
inc
addb
push
sbb
stos
les
or
xor
loope
add
pop
push
inc
push
ret
scas
ja
and
xorl
xchg
xor
cs
dec
loope
sahf
scas
cmpsb
icebp
cmovae
mov
jne
mov
sbb
jl
int
int3
fisttpl
jmp
lods
and
ficoms
mov
into
mov
out
dec
or
inc
fbld
add
stc
fadd
dec
mov
std
push
jns
pusha
popa
ja
mov
add
add
xchg
push
xorb
or
xchg
out
sbb
jnp
cmp
jbe
or
jb
xchg
pop
out
dec
xorb
jecxz
push
fildll
mov
mov
bound
cmpsl
and
sub
daa
je
cld
pushf
push
sub
pusha
sub
push
pop
out
jne
mov
cmp
push
pop
jp
popf
adcb
pop
xor
ds
cmp
pusha
sub
clc
xchg
mov
lock
xor
cwtl
pop
mov
fnstsw
das
inc
push
mov
mov
and
shll
dec
inc
ffreep
insl
repz
pop
imulb
rorb
popa
lock
out
subl
movsb
dec
rcr
test
push
hlt
and
xchg
mov
stos
inc
rcrb
push
nop
out
and
xchg
push
xchg
adc
sub
aam
cmp
xlat
and
mov
aam
aad
ljmp
fmull
mov
jmp
and
pop
xor
xchg
dec
sub
xlat
popf
jnp
inc
imul
push
popa
gs
dec
add
lcall
faddl
testl
cmp
bound
add
pop
subl
and
inc
mov
loopne
sub
xchg
sbb
aaa
cli
insb
out
cli
jne
push
add
pop
push
inc
sbb
adc
xchg
lock
lret
add
mov
mov
mov
js
movsl
xor
cmpsl
shll
ret
adc
les
jecxz
sbbb
cmp
mov
dec
std
push
aad
xor
outsb
pop
mov
adc
xchg
mov
fistps
and
xchg
adc
loope
push
mov
xchg
outsb
jge
xchg
sbb
into
lret
jg
mov
pop
cmp
enter
pop
rcr
jno
sbb
xchg
lds
or
repnz
int3
cli
pop
xchg
xchg
pop
mov
cmpsb
fsubs
leave
and
sahf
pop
sbbb
int3
cmpsl
mov
inc
xor
push
adc
adc
cmp
cmp
adc
gs
push
test
mov
into
push
ret
lock
lea
clc
movsl
push
push
mov
xorl
jge
mov
mov
outsb
repnz
or
xor
mov
bound
sbb
sti
fstpl
cmp
mov
pop
sbb
cmp
jge
xor
pop
loope
cmp
jecxz
xor
mov
xor
lret
in
xor
dec
xchg
aam
jno
jb
push
pop
mov
sbbl
fstpt
jo
scas
jge
insl
xlat
adc
in
aaa
cmp
push
aad
mov
inc
sahf
jmp
daa
mov
scas
pusha
lret
mov
add
xor
je
add
test
adc
sub
push
sbb
lods
sub
dec
push
mov
mov
jb
notb
mov
sti
push
or
std
repz
cli
stos
and
mov
imul
cmpsl
xchg
mov
xchg
ret
mov
mov
inc
mov
in
ds
mov
push
aas
pushf
mov
aad
cmpsb
xlat
shll
jl
push
sbb
pop
cmp
popf
mov
xchg
mov
out
repnz
test
add
mov
sbb
repz
dec
lret
xorb
rorb
ss
inc
lcall
pop
mov
mov
pop
push
push
mov
or
call
fnstcw
std
mov
loop
cli
lds
rcr
xchg
daa
into
loopne
jl
pusha
cmp
test
sub
inc
xor
bound
incl
sbb
inc
mov
pop
xlat
sub
test
int3
adc
or
repz
mov
pusha
cmp
pop
jge
lock
xor
inc
jle
cmp
xchg
mov
push
adc
pop
jno
mov
les
inc
add
movsb
fdivrs
out
testl
call
inc
lret
fisubs
add
cmc
adc
or
xor
inc
inc
fs
mov
loope
movsb
sti
xor
fdivp
mov
insb
push
daa
mov
sahf
out
inc
outsl
cmp
lods
lret
insb
rcll
stos
and
and
mov
movsl
pop
outsl
sub
xorl
lds
mov
lods
xor
inc
dec
out
loope
rorb
sarl
add
inc
add
loop
jnp
or
ret
pop
dec
imul
dec
test
enter
pop
pop
dec
loopne
insb
inc
or
add
fwait
clc
call
fisubs
mull
adc
pop
pop
xchg
out
clc
aam
adc
pcmpeqd
lcall
push
mov
dec
push
in
sbb
lods
push
repnz
gs
mov
mov
add
mov
ret
push
inc
dec
sahf
ljmp
adcb
and
mov
jb
jecxz
adc
inc
arpl
inc
leave
sub
pop
dec
cwtl
jl
jge
test
push
inc
fdivrs
cld
jle
jbe
xorb
dec
cli
dec
adc
aad
mov
push
add
idiv
cltd
stos
cmp
cmp
mov
sbb
and
adc
xor
sub
dec
sbbl
test
push
ss
sarb
out
add
hlt
dec
jo
bswap
fwait
into
jbe
stos
push
sbb
or
pop
pop
mov
das
sub
push
mov
jmp
addr16
mov
push
pusha
xchg
inc
into
movsl
jne
dec
jle
stos
das
pop
xchg
out
xchg
fsub
xchg
sub
cmpsb
mov
jge
in
pop
adc
mov
jge
fistps
addl
sbb
sbb
ffreep
sbb
sbb
pop
add
nop
push
dec
cmp
aam
push
out
stos
adc
mov
jns
sbb
push
mov
ret
pop
mov
push
out
je
mov
cmp
xchg
mov
push
pop
clc
sub
and
arpl
data16
sub
flds
mov
dec
lea
ss
popa
pop
pop
push
mov
subl
jmp
add
leave
dec
mov
mov
out
lea
cmc
sbb
cmc
dec
xor
in
cmpsl
adc
lds
stc
pop
ds
aam
xchg
xor
out
inc
mov
les
xchg
ja
xchg
dec
mov
ds
xor
shll
in
insl
inc
loopne
test
aam
jge
or
or
hlt
jae
xor
ret
cpuid
xor
lods
mov
inc
add
test
es
mov
pop
xchg
and
pop
test
rol
int
bound
or
lahf
fcomps
in
pop
test
jge
xchg
call
popa
mov
push
inc
movsb
dec
jae
outsb
repnz
test
shl
rol
adc
das
sti
inc
out
cmp
push
test
jbe
repz
push
and
aam
inc
stos
jp
dec
sbb
or
mov
xorps
daa
pop
jnp
dec
ret
mov
js
push
sbb
aas
adc
test
pop
mov
arpl
outsl
sub
lahf
imull
or
scas
loop
leave
add
shlb
dec
mov
mov
and
pop
movsb
xor
lea
mull
cmc
lods
and
push
call
scas
call
enter
push
cmc
mov
pop
fisubl
jns
dec
jmp
mov
insl
dec
pop
jbe
jp
ja
xlat
ja
cmp
jb
iret
fwait
scas
in
or
mov
xchg
sbb
mov
rorb
sub
in
das
js
adc
scas
jo
add
std
push
inc
jbe
push
and
mov
aas
aas
mov
int
inc
jg
iret
mov
dec
incl
xor
xchg
call
outsb
jmp
movsb
pop
mov
lock
subb
cmp
outsb
jbe,pn
leave
shl
mov
sbb
add
addr16
xor
test
push
adc
cli
inc
je
and
inc
jnp
scas
mov
jb
jns
inc
add
ja
aaa
and
lahf
adc
scas
fistpll
inc
in
stc
out
push
pop
adc
in
jmp
and
xchg
dec
and
ja
pushf
xchg
xchg
jne
stc
popf
loop
mov
cmpb
pop
inc
imul
dec
lret
mov
push
xor
inc
faddl
fimull
push
sbb
pop
jbe
fisubrl
stc
or
inc
jge
sahf
in
ret
stc
adc
cltd
xorl
nop
inc
loope
dec
fistpll
jecxz
stos
mov
je
push
mov
imul
mov
jle
nop
adc
jge
xor
xor
aaa
sarb
lods
or
mov
and
stos
adc
push
mov
je
mov
mov
pushf
in
push
cmpsl
mov
mov
loopne
mov
in
mov
or
mov
cmpsb
xlat
push
stc
popf
adcl
ja
mov
insb
xchg
mov
repnz
push
sbb
dec
mov
cmc
sub
imul
dec
add
shlb
push
and
or
push
add
arpl
mov
dec
add
inc
dec
or
aaa
xchg
test
or
adc
outsl
xchg
nop
push
repnz
scas
outsl
outsl
mov
mov
cmc
pop
adc
fdivs
loope
in
mov
prefetchwt1
int
icebp
xor
int3
jno
mov
xor
mov
es
insl
fadds
sbb
pop
sub
lods
daa
push
pop
ss
outsb
pop
xchg
and
repnz
xchg
pop
loope
and
sarl
mov
jbe
sbb
add
addr16
xor
mov
into
fcom
int3
xchg
mov
movsb
push
lret
int
mov
mov
pop
sbb
adc
fcmovne
push
leave
jno
cmc
pop
cmc
push
xchg
cld
mov
adc
pop
pop
shrb
daa
xor
mov
dec
jmp
iret
mov
bound
sbb
sub
cmp
out
sub
mov
dec
pushf
push
add
pusha
xchg
sub
mov
jle
sbb
insl
iret
mov
inc
push
jmp
addl
mov
xchg
mov
xchg
rclb
out
pushl
xchg
ss
jmp
mov
fisttpl
cltd
cmpl
mov
cmp
mov
or
push
mov
outsb
incl
iret
movsb
mov
and
mov
xlat
ljmp
fwait
xor
and
jo
dec
jno
mov
or
jmp
mov
inc
aad
in
dec
pop
add
jge
pop
imul
pop
adc
mov
dec
xchg
out
int
adc
scas
bnd
jo
xchg
jne
stos
xor
movsb
lock
mov
adc
gs
or
out
je
lds
stos
addr16
pushf
rcrl
xchg
cmp
popf
mov
sub
aam
ljmp
xor
test
and
adc
inc
inc
mov
inc
push
insb
in
mov
bound
aas
push
xor
adc
sbb
and
cld
fdivrl
xchg
xchg
xchg
xchg
sbb
mov
shll
sub
sbb
sub
xor
xor
mov
lcall
push
je
fldl
and
sbb
pushf
dec
int
mov
sbb
push
mov
into
cltd
out
push
cmpsb
mov
arpl
cmpsb
add
cmp
xchg
mov
pushf
fldenv
jbe
shlb
stos
test
jne
loop
lds
faddl
in
jno
pop
lret
jmp
outsb
pushf
cmp
adc
shll
pushf
lahf
pop
cmp
icebp
cmp
mov
and
jns
adc
xchg
xor
jg
jns
js
push
icebp
inc
mov
bound
cs
push
mov
push
mov
jbe
xchg
test
push
mov
dec
out
mov
gs
and
pop
push
imull
sbb
test
mov
into
outsb
lods
push
push
cmc
sub
xor
out
xor
mov
sub
jno
jb
das
data16
in
in
mov
popf
sbb
dec
je
iret
shll
out
sti
lock
mov
ja
std
out
dec
and
dec
jno
and
shll
icebp
sbb
fimull
stos
inc
insl
adc
cmp
xor
scas
pop
repz
fsincos
cmp
xchg
mov
rcrl
pop
push
push
outsl
mull
sbb
xchg
or
in
cld
cmp
rol
jo
lret
decl
jae
sbb
push
adc
jl
out
mov
fwait
cmp
sub
stos
setne
inc
adc
and
or
inc
imul
rcrb
xchg
movsbl
sbb
mov
sub
mov
xor
popf
sbb
mov
les
adc
xchg
sub
loopne
es
ror
add
dec
popf
add
call
sbb
pop
mov
ret
jge
add
xlat
insl
fnstcw
jg
jno
xchg
mov
sbb
fs
adc
int3
push
fstps
fwait
xor
or
fstps
xlat
popa
pop
outsb
insb
int
sub
adc
mov
mov
fdivrs
pop
or
ljmp
mov
outsl
pop
or
icebp
inc
push
pushf
test
je
dec
jge
adc
cli
out
or
pop
fs
aaa
in
iret
adc
add
cmp
stos
mov
and
call
xchg
hlt
push
stos
pop
jmp
push
mov
les
ret
movsb
jnp
out
xchg
push
ss
mov
fdivs
and
addb
fs
loope
fs
or
cs
loope
sbb
aam
mov
outsl
sub
inc
mov
cmp
imul
pop
mov
lock
sbb
jns
fdivl
xchg
loopne
jmp
dec
pushf
adc
or
cmpl
ds
pop
mov
ret
dec
in
das
aaa
sbb
aaa
inc
leave
cwtl
sub
rcrb
jl
inc
jp
or
rep
jae
mov
pop
sub
daa
cmp
int
subb
jo
or
lods
mov
pop
mov
mov
push
xchg
popf
adc
jns
fildll
mov
mov
sbb
xchg
scas
xor
add
popf
and
cltd
mov
shrl
adcb
fucomp
int3
push
cmp
incl
std
push
cmp
cltd
fidivs
test
or
sub
mov
mov
cmp
mov
int
je
enter
mov
idiv
mov
cmpsb
int
jnp
fcmove
cmp
jnp
lds
sbb
andb
sbb
jbe
popa
and
mov
mov
push
add
rol
pop
jns
dec
mov
push
push
add
adc
out
ljmp
mov
test
loop
and
rclb
jg
outsl
fcompl
dec
cld
mov
sub
cmp
dec
out
pop
fildll
aas
mov
pushf
pop
lods
bsf
outsl
fcompl
dec
cld
mov
sub
cmp
dec
out
pop
fildll
aas
mov
paddq
mov
pop
in
dec
cld
mov
sub
cmp
dec
negb
jl
mov
pushf
xchg
lods
daa
mov
pop
insb
iret
cld
mov
sub
dec
mov
addr16
xor
dec
cmp
and
push
out
incl
scas
fnstcw
call
dec
cmp
das
pop
aas
dec
vmread
or
mov
mov
lahf
call
dec
cmp
das
pop
aas
dec
vmread
push
mov
sahf
fcoml
push
jg
cmp
sub
cmpsl
test
insl
sub
jecxz
jecxz
push
scas
mov
in
ret
sbb
dec
mov
loop
mov
ja
inc
pop
mov
mov
mov
xchg
xlat
out
jno
xchg
icebp
stos
out
cwtl
xchg
mov
mov
ss
ljmp
sbb
das
pop
das
dec
icebp
jo
mov
fs
ja
jle
sub
lea
mull
shll
push
sub
push
filds
test
mov
or
xchg
ret
lock
loope
cwtl
xchg
mov
int
push
xchg
leave
mov
pop
xor
jg
dec
cmp
das
pop
aas
dec
vmread
push
iret
mov
mov
scas
sub
push
jno
jns
imul
pop
sbb
call
mov
lret
lret
mov
lea
fs
jo
dec
imul
pop
inc
mov
std
cli
mov
lcall
popf
lahf
mov
es
pop
push
das
push
dec
vmread
push
iret
mov
mov
call
dec
cmp
das
pop
aas
dec
vmread
push
iret
mov
mov
call
hlt
push
jnp
cmc
lods
xchg
lret
mov
add
lret
es
push
aam
popf
xchg
imul
mov
lret
pop
lods
fidivrs
mov
pop
cmp
pop
cmp
paddsw
je
xor
mov
rolb
xchg
cs
les
lret
cmc
aad
fiadds
ja
cwtl
add
and
movsl
and
lods
jae
std
and
or
jbe
cmc
push
lcall
fwait
pop
in
cmc
cld
bound
push
push
call
inc
leave
mov
clc
cmp
or
jl
roll
cmpsb
inc
and
inc
inc
mov
inc
sarl
popa
push
loop
iret
cs
popa
mov
push
pop
popf
fcompl
dec
lods
mov
jae
or
push
cmp
xor
mov
xchg
xor
outsb
test
mov
mov
inc
push
incl
test
lret
sarl
insl
inc
or
decl
inc
jbe
ret
out
pop
xchg
data16
mov
pop
adc
inc
cmp
dec
dec
push
jmp
fldenv
test
cmpsb
mov
pop
loop
and
xchg
adc
fs
sahf
in
xchg
jo
fs
std
insl
sbb
sub
jo
xchg
add
sar
fwait
xor
push
idiv
xor
push
mov
adc
sahf
mov
jae
shlb
addb
cmp
iret
mov
and
inc
jne
fadds
das
push
push
pop
add
into
jmp
fistps
inc
lea
push
aad
rolb
test
dec
cli
aam
adc
iret
push
sbb
jmp
pop
mov
cmp
test
jge
pop
cmp
out
in
inc
test
arpl
pop
loop
aam
mov
jmp
lahf
mov
jb
shll
pop
fucom
cmpl
test
lods
pop
mov
out
dec
daa
mov
add
mov
mov
jecxz
repnz
rorl
sub
cld
jl
ror
adc
cmp
fbld
mov
adc
scas
loopne
cmpsl
decb
imul
jp
xchg
lea
and
inc
cmpsb
test
bsf
gs
std
in
push
mov
pop
addl
cmp
in
mov
orb
outsb
lds
sub
sub
in
int3
add
adc
js
int3
negb
lods
mov
dec
dec
or
mov
bound
xchg
in
or
jns
bound
xor
and
loopne
in
shll
push
push
ret
push
add
out
sti
repz
mov
and
out
cmp
push
add
mov
adc
fldt
or
xorl
push
mov
cmpsb
into
xor
inc
mov
stos
sub
mov
sub
outsb
add
adc
inc
xchg
stos
xchg
push
cld
push
aaa
push
out
sbb
mov
out
or
push
hlt
lcall
std
cld
mov
xchg
sbb
sbb
cmpsl
mov
imul
int
xor
int
push
push
fcompl
into
sbb
mov
jg
mov
movsl
and
stos
cmp
or
cmc
stc
dec
xlat
dec
xchg
sbb
add
xchg
adc
cmp
dec
push
rorl
pop
fistpl
pop
std
jl
mov
xor
movsb
in
std
fs
aas
xchg
jp
fwait
jl
insl
sub
jno
dec
imul
imull
mov
rol
sbbl
xchg
popf
ret
fisttpll
in
add
mul
adc
xchg
popf
aas
sbb
add
mov
mov
js
je
mov
jl
insl
add
fimuls
pop
mov
push
inc
fcompl
jno
push
push
in
fdivr
in
xor
addr16
leave
mov
mov
pop
out
mov
cmpsl
cld
rclb
sbb
cmp
dec
lret
sbb
pop
into
lds
out
rcr
inc
addl
lds
jge
pop
and
pop
jmp
inc
inc
int
or
rcl
mov
adc
pushf
andl
xchg
lea
mov
sbb
xchg
mov
pop
mov
xchg
dec
push
xchg
and
mov
scas
cwtl
push
sbb
mov
xchg
int
repz
jbe
in
push
fidivrl
negl
fiadds
adc
jmp
pop
std
dec
jae
popa
filds
sbb
jbe
leave
mov
fildl
or
mov
mov
sbbl
xchg
inc
pop
push
addr16
int3
dec
mov
mov
mov
sbb
push
push
inc
xor
repnz
or
je
inc
cmp
xchg
ds
cmp
rcr
jl
xchg
repnz
cld
xchg
cmp
sub
sbb
movsl
jmp
cmpb
insl
addr16
sahf
lret
in
in
xor
dec
add
push
lods
imul
mov
sti
inc
imul
push
shrb
pop
xchg
jno
push
fwait
push
cmp
mov
int3
pop
push
sbb
dec
pop
jbe
ljmp
roll
xchg
loope
js
jb
dec
iret
mov
shrl
sbbb
pop
out
lahf
sbb
or
dec
insb
pusha
int
sub
outsb
clc
int
mov
clc
mov
push
loop
ficomps
mov
movsb
cmp
stos
mov
and
add
xchg
or
mov
fldl
fstpl
fisubs
sbb
test
sub
mov
xchg
pop
test
lods
fldcw
gs
aaa
mov
xor
jnp
stc
mov
sub
pop
pop
inc
jecxz
mov
sub
dec
mov
mov
sub
mov
ja
leave
movsl
enter
dec
mov
inc
sahf
push
mov
mov
js
shlb
push
jne
mov
cmc
mov
pop
pop
int3
pop
scas
adc
pop
add
or
out
dec
stc
add
loop
mov
cli
mov
push
mov
outsl
int3
pop
popa
test
test
pop
or
js
xlat
push
mov
xlat
jbe
pop
lret
clc
das
sub
out
push
leave
enter
fimuls
cmp
jae
mov
lea
mov
cmp
in
movsb
sub
xlat
xchg
dec
dec
scas
into
mov
pop
or
aam
push
pop
movsb
cmp
mov
lcall
dec
mov
call
icebp
cmc
bound
lods
xor
cli
inc
push
and
sub
mov
jae
add
xchg
sub
lds
mov
int3
orb
lcall
popf
mov
add
add
mov
xchg
pop
or
sub
sbb
das
push
dec
fildl
fldcw
sbb
insb
insb
addr16
cmp
push
push
or
adc
pop
inc
in
and
shrb
inc
fdivp
mov
or
mov
sub
cli
or
jns
and
xchg
fstpt
addr16
sbb
in
mov
bound
mov
cmp
xor
adc
sub
loope
les
mov
jno
out
sub
sahf
xor
pop
sub
pop
shrb
jo
jecxz
rcrl
xor
jo
test
adc
cmp
rcrb
pop
jnp
mov
inc
inc
jbe
jp
push
dec
out
xchg
dec
inc
or
sub
insb
sub
add
sub
xor
mov
pop
lods
mov
mov
les
add
rclb
call
or
adc
stos
fldcw
jns
or
sub
sbb
and
sbb
sub
sbbl
sub
out
pop
cmpsl
stos
jbe
push
add
sub
aaa
mov
sahf
adc
or
imul
sahf
stos
or
bound
and
mov
ret
jns
lret
adc
pop
fistpl
mov
in
xor
inc
outsb
lret
fists
adc
sbb
jns
or
repnz
rcll
sbb
sbb
shrl
mov
add
pop
mov
sbb
mov
jcxz
xor
loopne
das
mov
out
rcl
inc
fists
cmpsb
xchg
mov
xchg
cmp
adc
fbld
fiadds
push
adc
jle
mov
jns
push
pop
arpl
rolb
out
jbe
xor
pushf
jbe
or
mov
outsb
sub
repnz
dec
or
mov
xchg
cmp
xchg
lret
fwait
hlt
sub
sbb
sbb
or
sbb
inc
repz
pop
into
add
aas
mov
sbb
movsl
inc
stc
js
mov
rclb
jecxz
orb
ljmp
gs
xchg
pop
xchg
pushf
popf
mov
sbb
jns
insb
icebp
dec
and
dec
or
rorl
shrl
test
out
and
dec
pop
xchg
lret
fsubrs
jbe
cmp
lahf
fisubs
mov
add
cmp
orl
or
negb
pop
es
xor
fisttpll
inc
clc
loop
lea
xchg
mov
xchg
rorl
jns
stos
pop
cld
shr
out
lods
hlt
xor
mov
sti
dec
sbb
dec
mov
lret
outsb
aaa
or
mov
cmp
xor
mov
jnp
xchg
adc
mov
sti
or
dec
pop
cmp
mov
fwait
cmp
imul
mov
mov
cs
sub
stos
xchg
and
cmpsb
mov
mov
lret
ret
and
ljmp
ret
sub
punpckldq
push
mov
fiadds
jl
pop
add
sub
push
out
push
sbb
xchg
mov
out
jmp
imul
aad
inc
jecxz
or
pop
rcrb
pop
xor
push
mov
js
xchg
outsl
insl
loop
dec
movd
dec
xor
aaa
mov
or
xchg
cmpsb
pop
cli
popl
pop
adc
mov
pushf
xchg
orb
jg
test
pop
dec
cmp
and
jb
cld
insb
dec
cli
jns
loop
jl
jl,pt
shll
xor
push
fwait
pop
iret
int
lahf
stos
push
pop
bound
or
mov
and
mov
push
fnstenv
shlb
inc
shrb
sbb
jle
cli
inc
popf
pop
and
testb
int3
mov
fidivs
mov
imul
jae
jns
dec
nop
inc
push
inc
dec
data16
cli
into
scas
mov
out
dec
mov
xor
aaa
sbb
loop
loop
pop
cmp
add
popa
gs
movsl
push
mov
xor
daa
cmpsl
xor
xchg
call
pop
xor
mov
xor
adc
sub
lods
push
fsubr
jae
sbb
push
mov
or
out
je
fsubs
jns
xchg
outsl
sbb
ja
xchg
add
pop
je
fidivrs
cmpsb
stos
call
mov
ja
adc
mov
repz
cmp
loop
and
subl
aad
or
sbb
xchg
inc
dec
cmp
xor
inc
mov
in
push
arpl
insl
inc
add
jb
mov
icebp
test
mov
pop
inc
repz
in
dec
inc
jbe,pt
test
mov
es
aas
in
cmp
lcall
fnstsw
and
sub
in
pop
mov
mov
add
and
add
xor
adc
fcomps
sbb
incb
enter
mov
sub
push
or
scas
or
mov
fiadds
cmpsb
push
push
pusha
inc
push
imull
sub
inc
enter
adc
scas
js
pop
fsubl
jmp
push
xchg
daa
das
pop
add
cltd
add
in
dec
push
xchg
mov
jg
add
xor
dec
scas
push
mov
mov
cmp
mov
mov
and
xchg
sbb
gs
push
sti
fnop
mov
lahf
mov
cmp
mov
pop
xchg
fsubs
movsl
dec
adc
mov
fcoms
fs
mov
jmp
or
lret
mov
xchg
outsl
ljmp
push
mov
mov
mov
in
adc
fsub
inc
add
ficomps
pop
pop
xchg
leave
jne
dec
subl
lahf
ret
mov
movsb
clc
push
out
stc
inc
or
repz
push
out
xchg
mov
xchg
shll
mov
lods
stc
loop
cli
jo
in
nop
xchg
lret
xadd
xchg
int
xchg
daa
loopne,pn
popa
sbb
cmpsb
sahf
jb
xor
out
cmp
push
jnp
xor
test
and
mov
les
pop
cli
inc
ficoms
insb
call
insb
sahf
idivl
int3
cmc
cmpsb
add
lods
or
jnp
arpl
ficompl
jmp
jecxz
and
xchg
xor
jns
mov
fisubl
loopne
iret
lods
xor
outsl
jne
or
push
ja
out
add
loop
push
in
sub
push
dec
xchg
or
sbb
cmc
in
mov
enter
push
sbb
sbb
jns
jecxz
jmp
leave
cmc
mov
stos
push
aad
es
bound
xchg
dec
lods
lea
xor
push
fnstsw
or
push
enter
mov
call
pop
es
mov
pushf
iret
mov
or
mov
dec
adc
inc
inc
adc
dec
sbb
mov
dec
pusha
sub
mov
les
cmc
rol
mov
inc
push
sub
iret
int3
icebp
xorb
push
int
loopne
mov
out
or
mov
test
roll
pusha
mov
dec
scas
cmc
xor
sub
shlb
lahf
call
fistl
mov
pushfw
insl
mov
lods
popa
jp
imulb
lcall
dec
popa
mov
cmpl
call
cld
mov
adc
pop
mov
cmc
cmp
shll
dec
popa
jg
outsl
pop
mov
jo
mov
aaa
cmpxchg
ret
call
lret
cmp
mov
mov
jae
or
add
mov
dec
mov
sti
ret
out
ret
int
int
lret
ss
xor
bound
mov
adc
fisubrs
mov
push
movsb
jno
mov
or
addr16
and
pop
xchg
das
push
sbb
sub
cmpsb
dec
push
pop
sbb
incl
and
xor
xor
jp
cld
cltd
sub
das
pop
mov
movsl
fwait
xchg
push
and
mov
ds
jmp
cwtl
inc
cmp
dec
sub
jecxz
test
arpl
and
mov
push
push
lods
mov
sub
and
outsl
movsb
inc
out
push
pop
sub
fs
lods
jecxz
jbe
aam
jnp
lcall
xchg
addl
pop
aad
lcall
ljmp
pusha
dec
adc
lea
add
stc
ds
rcl
movsl
cld
repnz
xchg
fildl
jns
push
repz
cmpsl
adc
in
jno
call
mov
or
rol
sbb
stos
or
or
pop
xchg
sbb
sbb
mov
in
xchg
cli
in
mov
or
mov
dec
cmpsb
jo
imul
dec
push
cmp
addb
test
pop
ficomps
fisubrl
pop
dec
mov
aas
pop
or
jmp
jno
enter
xchg
fisttpll
xor
push
movsb
hlt
push
add
nop
test
and
push
int
clc
sub
imul
xchg
adc
test
sub
sbb
cmpsb
xchg
mov
xor
ljmp
jg
loope
pop
pop
test
cmp
xchg
xchg
jo
push
mov
popa
movsl
xor
loope
lret
es
jl
mov
scas
mov
insl
movsb
xor
mov
xchg
enter
fiadds
lock
xor
lds
sub
jns
mov
sub
sub
xchg
inc
push
or
inc
jg
mov
jge
dec
ret
pop
shlb
inc
mulb
in
ret
or
mov
adc
sub
sti
mov
stos
xor
push
cltd
cmp
aas
testb
or
rcll
in
mov
sbb
orb
inc
popf
and
push
pop
fs
xor
mov
outsl
dec
xchg
or
xchg
mov
cs
ror
xor
sub
cmp
sbb
das
enter
data16
pushf
push
ljmp
aaa
shll
aas
fwait
xchg
ret
dec
les
in
push
cmp
ds
inc
sub
imul
mov
pop
mov
test
rclb
ja
xor
lods
jo
sbb
je
ljmp
adc
lret
iret
fstps
js
mov
sbb
popa
idiv
push
and
mov
dec
cmpsl
mov
push
dec
leave
das
mov
cmpb
push
das
std
fmull
mov
jo
or
fmul
out
aad
inc
pop
mov
push
icebp
mov
ret
idivl
int3
mov
movsb
in
add
outsb
inc
sbb
pop
adc
jg
lock
add
cmp
xchg
cld
push
sbb
and
and
repz
rorb
int3
leave
pop
lock
fistpll
xor
scas
pop
ja
jge
cld
xchg
xor
dec
dec
mov
popa
in
insb
mov
jae
inc
bound
mov
loopne
je
xor
out
add
rcl
std
outsl
sbb
dec
imul
and
mov
mov
mov
push
pop
imul
subb
add
out
mov
xchg
cli
jno
mov
fidivl
shrl
fnstsw
push
pop
adc
lret
push
xchg
adc
stc
cmp
popa
call
jne
data16
mov
pop
cld
push
sbb
sbb
xor
in
out
dec
out
jp
shl
xchg
sahf
movsb
stc
cli
js
sbb
adc
jb
mov
jno
pop
push
push
xor
jecxz
adc
jg
push
popa
mov
mov
pop
mov
push
dec
out
add
push
xchg
mov
clc
leave
scas
mov
mov
push
ret
bound
xor
dec
adc
in
pusha
mov
lahf
push
cmp
in
test
data16
fwait
in
repnz
mov
add
mov
outsl
push
jmp
xchg
mov
jns
sub
out
gs
mov
loop
adc
cmp
mov
push
or
test
add
js
lods
and
out
mov
xor
adcb
shrb
xor
insb
mov
or
pop
pop
mov
and
ljmp
loop
xchg
pop
push
and
movsl
in
cmc
mov
mov
popa
pop
test
push
test
shll
jae
inc
and
lock
and
call
push
cli
jecxz
sbbl
cmp
sub
sub
lock
inc
iret
mov
xchg
push
pusha
test
fs
push
inc
sbb
or
pop
cmp
fwait
enter
stos
gs
mov
dec
flds
jb
popa
xorb
je
lret
jnp
push
cwtl
adc
add
les
into
int
sahf
xlat
cld
in
cmc
ljmp
cwtl
in
jbe
or
rolb
das
cmp
test
push
rorl
bound
push
clc
push
jno
cmp
mov
inc
fldt
loop
dec
insb
pop
clc
sahf
cmp
sbb
jecxz
icebp
cmp
cs
repz
mov
pusha
and
push
int3
mov
xchg
push
scas
stos
cmp
fsubl
push
inc
lcall
test
mov
shufps
stc
mov
mov
loopne
sub
cs
adc
mov
imul
jbe
add
movsb
jbe
dec
int
out
jl
inc
into
fsubrs
push
jb
mov
push
mov
out
clc
cmp
inc
push
lea
jns
xor
fwait
insl
add
inc
lea
mov
xchg
call
lea
cwtl
cli
xor
notb
pusha
in
adc
and
clc
out
xchg
xor
shl
mov
jno
sub
fwait
xchg
push
es
iret
sub
sti
mov
pushf
adc
jns
mov
adc
xchg
aam
stos
in
jb
aad
dec
mov
pop
ret
jns
ja
addr16
jp
sbb
push
stos
mov
in
jle
dec
shrl
imul
dec
xor
add
mov
out
daa
inc
rcll
rclb
push
hlt
test
jno
mov
neg
mov
and
push
int3
cmp
cmpsb
popa
mov
pop
pmovmskb
stos
mov
push
pop
mov
inc
insl
or
pop
sub
pop
aas
dec
vmread
push
iret
mov
mov
call
dec
cmp
das
pop
aas
dec
vmread
push
iret
mov
mov
call
dec
cmp
das
pop
aas
dec
vmread
push
iret
mov
mov
call
dec
cmp
das
pop
aas
dec
vmread
test
cwtl
jmp
gs
aaa
aaa
jo
pusha
pop
aas
sub
insb
pop
pop
lds
sbbb
or
add
add
pop
add
add
cmpsl
add
add
add
icebp
add
add
add
add
add
addr16
add
add
add
add
add
add
inc
add
add
add
or
data16
add
sub
push
add
add
loop
jl
scas
add
dec
add
add
add
add
add
add
scas
add
add
add
add
add
add
add
sub
mov
add
mov
faddl
jg
movsl
add
add
add
add
add
add
mov
add
add
or
out
add
add
insb
add
add
add
add
add
and
sbb
addl
test
sbb
out
add
ljmp
add
add
sub
and
pop
add
add
add
add
add
add
add
add
inc
add
add
add
jl
xlat
add
add
add
add
outsl
add
int
or
add
das
add
add
add
ds
add
add
add
add
jl
xor
xchg
add
add
jl
movl
adc
sbb
sub
out
add
add
add
jno
mov
and
jne
cld
add
inc
add
add
add
add
add
add
add
popa
add
iret
add
add
add
out
add
jl
stos
add
add
push
add
add
add
add
add
add
add
add
add
add
add
jl
sbb
add
add
add
add
add
add
add
adc
cmc
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
lahf
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popl
add
inc
add
lret
add
add
out
add
add
add
add
jl
inc
add
or
or
mov
add
dec
add
add
add
add
dec
add
add
add
add
add
add
add
out
add
add
sub
filds
data16
add
add
add
data16
xor
push
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
out
sbb
sub
add
add
pop
add
add
jecxz
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
adc
xor
faddl
int
test
add
add
add
add
add
arpl
add
loop
xor
faddl
sbb
and
add
push
mov
mov
dec
push
dec
pusha
dec
fs
push
dec
jg
out
out
or
lret
rdmsr
sub
fldt
gs
push
aam
jp
xchg
sbb
or
or
pop
fidivrl
fildll
icebp
inc
cld
or
dec
xor
sahf
jge
daa
push
shr
inc
push
xchg
sub
into
push
pop
imul
lret
dec
cmpsl
and
sub
lret
jg
aad
mov
aaa
hlt
dec
adc
clc
sub
rorb
scas
xchg
mov
add
mov
xchg
xor
dec
outsl
mov
nop
mov
rcrl
jg
or
fidivs
mov
scas
sbb
pop
inc
test
mov
imul
iret
inc
xchg
xorb
sub
repnz
lret
icebp
fstpt
jnp
in
dec
xchg
and
pop
in
aas
push
ret
cltd
sbb
sbb
por
sub
cld
xchg
mov
aas
add
mov
sub
inc
sub
repz
xlat
push
or
xor
adc
repz
mov
xor
sbb
scas
bound
xchg
mov
into
add
cmp
jge
push
or
mov
cs
ss
jecxz
push
inc
addl
sbb
lret
rcrl
or
push
jecxz
ja
repnz
or
loope
lahf
roll
add
mov
fisttpll
lahf
decl
push
call
hlt
scas
inc
iret
out
xor
xor
js
mov
mov
cli
jo
ja
mov
adc
mov
mov
xchg
jmp
int3
dec
sub
leave
aas
pop
lret
out
repz
ret
int3
xchg
adc
and
mov
out
xchg
inc
cwtl
and
mov
pusha
adc
lea
xor
adc
sbb
mov
mov
jns
or
push
aam
and
cli
stc
jecxz
addr16
dec
xchg
mov
or
push
or
call
dec
cmpb
cmpsb
pop
adc
push
xorb
push
or
push
outsl
ret
cli
rorb
lahf
cmp
cmpsb
cmp
mov
jo
repnz
ret
das
dec
popf
enter
jno
add
push
xchg
out
mov
imul
jl
xor
xchg
cmp
add
xor
sub
fiaddl
mov
sbb
in
xchg
jae
addl
pushf
adc
cmpsl
icebp
sub
mov
fucomi
clc
outsl
xchg
jmp
mov
dec
add
cltd
fwait
mov
ror
sti
jbe
xchg
scas
cmpsl
pop
cmp
ret
cltd
lods
lods
cmc
idiv
mov
mov
xor
scas
mov
in
dec
mov
xchg
lcall
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xor
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
dec
clc
add
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
or
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
clc
add
jl
add
nop
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
or
add
sub
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
movsb
stc
add
lods
stc
add
mov
add
mov
stc
add
int3
stc
add
aam
add
out
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
add
add
or
add
sbb
add
sub
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
