call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
push
and
push
pop
inc
imul
cmp
divl
mov
xchg
xchg
ret
testl
jb
bound
push
pop
inc
xor
inc
adc
div
mov
test
pushf
xchg
mov
std
aam
movsb
or
aas
push
sbb
shl
divb
mov
movsb
out
ss
and
pusha
daa
in
cmp
push
ret
xchg
jns
sbb
cmp
mov
subb
sub
mov
aaa
daa
mov
and
jl
bound
pop
iret
ja
daa
cmp
or
loop
pop
out
dec
bnd
imul
inc
mov
jb
bound
inc
inc
data16
inc
rclb
mov
in
xchg
sub
cmc
das
shrb
mov
scas
xlat
mov
add
pop
addr16
mov
xor
xchg
shll
clc
daa
mov
ljmp
add
dec
mov
add
test
out
jle
call
pop
es
xor
and
out
nop
push
repnz
incb
mov
or
or
ss
mov
xchg
xlat
ja
mov
mov
nop
jmp
xor
and
and
cs
pusha
push
jo
jnp
xor
cmp
xchg
std
xchg
mov
push
add
ja
push
and
and
push
add
rclb
mov
daa
jb
bound
push
pop
inc
xor
inc
adc
cmpsl
repnz
xchg
xchg
ret
mull
daa
jb
xor
das
dec
lods
sub
sub
mov
push
cwtl
mov
push
sbb
sub
jl
out
movsl
mov
xchg
push
out
xlat
and
push
mov
mov
mov
mov
xchg
jae
dec
jnp
aaa
popa
xchg
jge
flds
xor
mov
add
jae
into
imul
ljmp
icebp
inc
add
add
decb
lcall
loope
push
pushf
les
sbb
lret
fucom
sbb
outsl
mov
sub
lods
sub
push
unpckhps
adc
adc
add
or
dec
std
pop
mov
sub
jmp
daa
imul
clc
cmp
sahf
cmp
data16
add
push
xchg
js
daa
lods
jnp
sbb
inc
cmp
xor
mov
insb
fdivrp
inc
fmull
pop
cmpsl
pusha
mov
adc
icebp
cmp
xchg
rsm
jg
rolb
imul
test
xor
mov
sbb
jb
shll
push
nop
pusha
and
test
gs
sub
loop
std
dec
mov
loopne
xchg
xor
inc
jg
out
jl
fcmovnbe
or
inc
push
lods
jo
ljmp
mov
cmp
cmpsb
inc
xor
mov
and
or
push
js
cmp
mov
pop
movsl
pop
dec
insb
addl
in
pop
adc
and
mov
movsl
shll
clc
inc
into
mov
push
cs
lret
test
mov
in
cmp
xor
or
inc
stc
nop
test
mov
sub
hlt
stc
sbb
or
xchg
insl
or
fimuls
dec
dec
testb
in
loop
cltd
xlat
pop
data16
sub
push
dec
sbb
insl
fadd
and
jg
idivb
sub
scas
out
mov
lret
lock
daa
loopne
add
insl
clc
jbe
lea
jmp
inc
inc
adc
int3
or
imul
fwait
sbbl
test
pop
and
scas
in
cli
insb
cltd
jl,pt
pop
push
bound
pushf
cmp
fmull
shl
xchg
test
testb
imul
xchg
add
roll
cmp
adc
movsl
sbb
call
shll
mov
stos
mov
in
lods
subb
mov
pop
iret
jge
xchg
lret
lea
xor
aaa
and
in
sbb
hlt
add
xor
in
repnz
pop
push
testb
cmp
or
in
test
std
insl
inc
cmp
fdivs
sbb
add
sahf
jns
scas
leave
mov
cmp
divb
mov
fildl
sahf
pushf
adc
lock
inc
sbb
in
fwait
push
sbb
fs
inc
outsl
inc
add
outsb
xchg
repz
cmp
das
in
jg
or
xor
push
jle
inc
ds
mov
call
pop
mulb
aam
jae
jne
outsb
cs
adc
adc
cli
lods
jb
xchg
jg
cmp
pop
pop
push
push
jns
test
sbb
fstl
in
mov
xchg
data16
and
mov
or
mov
push
jg
jne
xor
push
mov
pop
ds
mov
scas
mov
mov
inc
dec
sub
test
jecxz
clc
lret
cmpsb
cltd
iret
mov
sub
and
sub
lods
hlt
enter
push
cmp
lahf
test
inc
cmp
xor
mov
jg
adc
cli
mov
shrl
clc
sub
mov
pusha
insb
sahf
or
push
iret
mov
imul
pop
jecxz
xchg
imul
ds
xchg
push
notb
cmp
test
sub
lahf
stc
fs
xor
lock
push
in
cmp
inc
xor
clc
clc
sub
jo
ds
mov
adc
xchg
loopne
xchg
ds
xor
sbb
lcall
and
jnp
popf
arpl
out
jge
test
jle
fmul
das
mov
jbe
ds
int
fwait
sbb
add
clc
xor
pop
lea
jne
add
cltd
xchg
and
mov
popa
cs
mov
xchg
push
negl
xchg
dec
popf
into
cwtl
mov
xchg
dec
mov
pushl
jne
sti
or
testb
movsb
sbb
or
xchg
lods
es
into
xor
mov
aaa
jg
daa
cmp
incl
add
jbe
dec
push
jns
add
cli
loope
pop
or
test
sub
rolb
lret
lods
add
xchg
push
mov
adc
lods
test
pop
fisubs
clc
cmp
int3
xor
fildl
das
inc
jb
adc
mov
add
adc
mov
mov
jle
enter
cmp
fldenv
add
lods
movsl
adc
lcall
in
add
mov
lock
cmp
popa
movsb
cmp
dec
pop
mov
out
data16
mov
or
jo
add
out
cltd
xorl
jmp
and
rorl
add
mov
jmp
mov
mov
xor
add
daa
das
jmp
sub
xor
or
xchg
jbe
push
ret
xor
cmpb
bound
xchg
pop
jg
nop
ss
stc
adc
cld
sub
fs
ja
push
in
ret
icebp
and
adc
push
mov
lods
pop
cli
mov
pop
leave
sub
inc
adc
cmp
sub
enter
lret
pushf
cld
mov
repz
jg
out
pop
xchg
mov
adcl
daa
loopne
xchg
fildl
lock
lret
mov
sbb
addr16
out
jp
push
or
push
and
push
and
in
int3
jne
adc
adc
pop
fmuls
jne
sbb
jg
xchg
enter
add
dec
imull
outsl
and
sahf
adc
insb
mov
add
or
mov
and
or
fiadds
and
test
mov
xor
sub
inc
cmp
add
push
stos
pop
xchg
pop
call
mov
dec
int3
addr16
leave
adc
jl
enter
aam
in
insl
repnz
sub
aam
xlat
int3
and
rorl
sub
jns
adc
arpl
mov
shlb
dec
les
inc
scas
sbbl
stos
inc
ja
pushf
add
outsl
add
sub
loop
push
stos
pop
jmp
mov
jnp
arpl
cmp
loope
out
xchg
mov
push
pop
sub
xchg
adc
popf
mov
add
jmp
or
lahf
mov
hlt
ja
mov
lods
sub
cs
pop
mov
jno
mov
mov
cmpsb
mov
and
push
subl
imul
bound
fs
test
xor
lret
sbb
loope
in
xchg
push
cmp
pop
in
fldpi
daa
cmp
pusha
push
shr
jo
idivb
test
mov
scas
aad
xchg
cmp
fists
dec
outsl
enter
pop
pushf
popa
loope
sub
sub
pop
mov
dec
mov
scas
add
insb
in
popa
lcall
pop
repz
in
aam
jecxz
or
xor
pushf
loope
mov
insb
divl
fnsave
sub
divl
lods
xor
sub
xchg
iret
movsb
out
cwtl
fidivrs
fs
mov
jle
xlat
mov
sub
in
adc
loope
push
mov
sub
mov
xlat
sub
xchg
daa
xor
push
lea
orl
call
mov
hlt
xchg
lods
or
sbb
int
push
and
sub
pop
sub
lcall
gs
flds
sbb
rcrl
aaa
sbb
cmpsb
clc
cmp
aam
nop
adc
js
cmpsl
dec
addr16
sti
mov
sbb
out
les
inc
mov
dec
pop
xchg
mov
cmp
das
inc
cmp
mov
stc
out
xorl
mov
sti
xchg
push
std
add
js
outsl
jl
mov
mov
cmpsl
sbb
pop
mov
sti
pop
rcl
orb
xor
test
xchg
adc
jno
sbbl
mov
push
scas
inc
xorl
lea
inc
dec
mov
pop
sub
fs
outsl
mov
adc
fcomp
call
lahf
or
jbe
mov
jb
mov
or
sbb
mov
sbb
pop
push
mov
sub
or
sbb
mov
jns
fisubrl
push
dec
lret
gs
mov
insb
clc
jb
aaa
cmp
xor
push
mov
and
cli
push
mov
enter
xchg
outsl
lods
mov
push
cmp
fs
test
jmp
dec
outsl
pop
js
outsl
xchg
push
cmp
sahf
jns
mov
in
subb
sub
jl
shlb
scas
das
in
out
aaa
xor
fldl
aaa
cmp
fwait
mov
mov
andb
pusha
mov
pop
xchg
sbb
fbld
int
pop
scas
and
lret
gs
mov
jle
push
fmul
lret
lret
test
jbe
vpsrld
dec
mov
popa
mov
or
adc
xor
push
out
ret
mov
pop
loope
push
sub
insl
xchg
or
push
rcrl
andl
insl
ficoms
adc
xchg
dec
popf
sbbl
int3
pop
lret
popf
push
lods
mov
add
sub
das
movsb
sti
mov
mov
xor
nop
fldcw
mov
sbb
out
push
sbb
push
lods
cmp
or
sub
push
cwtl
std
std
add
adc
adc
mov
mov
fisubs
inc
mov
mov
dec
shll
inc
push
mov
add
test
ret
fiaddl
cmp
mov
flds
sahf
js
dec
sbb
cld
adc
pop
outsb
pop
adc
daa
inc
filds
stos
ljmp
push
dec
and
xor
ret
sub
test
mov
in
popa
fucom
push
imul
mov
sub
mov
in
roll
push
mov
out
jb
popf
fidivs
xchg
loop
cmp
mov
stos
cld
dec
jns
jno
cld
or
jnp
test
ret
scas
fsubp
push
xor
mov
and
lret
dec
xchg
adc
js
hlt
cmc
popf
mov
cmp
add
push
mov
or
imul
adc
lret
ficomps
pop
nop
test
mov
mov
and
jb
dec
dec
mov
xchg
mov
mov
mov
xor
fimull
ds
dec
popa
xchg
dec
cmp
icebp
mov
cmp
fdivrs
dec
stos
mov
jnp
jae
je
lret
and
data16
shrb
je
clc
mov
dec
jge
xchg
shll
sbb
jp
xchg
mov
lods
mov
ficomps
mov
fcomip
add
repz
jmp
dec
mov
jae
cmp
or
enter
push
in
sub
mov
out
jo
negb
cmp
imul
jmp
sbb
negl
loope
dec
push
stos
dec
jp
or
mov
loopne
sub
cmp
mov
shrl
rclb
xlat
sub
ds
push
xor
iretw
jbe
jne
lods
adc
dec
imul
xchg
jg
mov
mov
popa
jo
mov
lcall
in
int3
in
lret
sbb
enter
sub
js
andl
cmpsb
push
mov
jg
dec
adc
imul
pop
lods
sti
sbb
inc
mov
lret
or
inc
enter
mov
and
and
push
add
shl
int
in
and
pause
in
jb
xor
push
arpl
fldl2e
orl
js
push
mov
rcll
adc
inc
pop
mov
outsb
inc
mov
or
pop
jecxz
cmp
and
mov
jp
jo
mov
out
cmp
cmpsl
fs
adc
jmp
fs
rclb
push
jecxz
jb
adc
push
add
lret
out
xchg
push
sahf
inc
push
iret
jno
sbbl
movsb
stc
jnp
sub
xchg
call
jae
pop
ljmp
into
cmc
aad
jp
inc
lahf
jbe
and
xor
cwtl
push
aam
add
ljmp
fxch
xlat
xor
mov
scas
push
outsb
xchg
mov
jecxz
push
loope
ret
in
aam
sub
in
cmp
sub
push
xor
adc
jg
sarb
add
out
or
cmc
mov
xchg
dec
rolb
daa
aas
sbb
xchg
push
adc
je
mov
cs
movsb
es
push
cmpsl
push
movsb
loopne
inc
xchg
xchg
test
loope
sbb
fsubr
or
inc
inc
sbb
push
dec
mov
and
push
push
push
repz
por
dec
jle
jo
test
adc
jno
nop
xor
and
fdivrs
or
inc
in
sbb
sub
stos
ret
mov
and
adc
push
insl
sbb
enter
adc
mov
mov
jae
pop
movsl
addr16
iret
rclb
xlat
mov
xchg
cld
sub
mov
pop
and
mov
arpl
aas
hlt
mov
in
add
mov
lea
ficoml
add
dec
pop
addl
mov
push
lods
sbb
outsl
mov
xchg
xchg
shll
push
arpl
xchg
or
mov
fldl
dec
or
cmp
and
adc
dec
leave
jae
pop
xchg
popf
push
into
fildll
stos
xlat
push
ficoms
sbb
bound
mov
adc
frstor
and
nop
cmp
sub
mov
jle
xchg
adc
or
adc
sub
aad
xor
cmp
jg
stos
inc
aaa
xchg
sahf
rolb
mov
test
aam
mov
out
sub
gs
movsl
mov
xchg
mov
mov
into
int
sub
adc
stos
mov
inc
pop
rolb
sbb
rol
sub
push
std
xchg
shll
movsl
aam
xor
daa
add
call
fnstcw
mov
sbb
mov
push
fisttpl
or
jmp
cmp
jle
mov
sbb
lds
xchg
ja
xor
rcrb
cld
jbe
jb
xchg
imul
mov
dec
js
push
add
add
add
cli
inc
xor
int3
sbb
jnp
dec
dec
in
stos
jns
mov
icebp
fcomp
adc
in
or
int
and
iret
push
out
ljmp
sbb
aad
in
out
xchg
pushf
pop
hlt
cmp
xchg
leave
in
shrl
hlt
leave
xor
push
fdivrs
fildl
xchg
lahf
hlt
mov
xor
stos
adc
dec
push
mov
pop
xor
insb
inc
cwtl
cld
imul
pop
fstl
mov
test
pushf
sub
addl
adc
shll
dec
cmp
jl
xchg
je
aaa
rol
or
popa
push
adc
pop
stos
inc
mov
lcall
in
shll
dec
into
aam
push
ret
mov
xchg
xor
aas
cs
pop
pop
js
push
mov
outsb
push
fsubl
hlt
shl
fs
mov
gs
arpl
es
mov
and
and
shll
mov
gs
fisttps
shrl
lcall
pop
jecxz
jnp
cmpsl
pop
stos
sahf
or
dec
mov
sbb
mov
bound
lret
pop
roll
sti
sbb
scas
pop
movsl
mov
in
js
push
in
lock
add
mov
mov
fucomip
int3
cmovns
jl
movsb
mov
cmp
xor
push
fstpt
out
std
sbb
add
cmpsl
push
movsl
movl
popf
repz
mov
mov
pop
pushf
mov
lcall
sub
mov
ljmp
pop
rorl
test
fstl
insb
pop
mov
aaa
xchg
notb
mov
xor
frstor
pop
push
into
cmp
loop
push
insb
push
dec
fimull
add
sahf
cld
fwait
mov
dec
dec
roll
dec
daa
mov
rcll
ljmp
jns
pop
mov
xlat
dec
push
push
mov
outsb
pushf
fwait
and
rcr
enter
lcall
out
dec
mov
sbb
adc
adc
lahf
movsb
jbe
pop
int3
lods
adc
insl
inc
dec
loope
aaa
je
sbb
mov
or
mov
cmp
pop
lahf
orb
mov
mov
and
cmpb
xchg
in
leave
jae
sbb
dec
addr16
loop
dec
in
fsub
leave
cmc
cmp
std
adc
jl
xchg
mov
mov
cmp
push
pushf
xchg
lret
and
mov
rol
scas
jbe
cmp
mov
dec
out
lock
maxps
dec
xor
add
insl
mov
mov
push
pop
ja
mov
jmp
dec
mov
mov
aaa
addb
stc
mov
xchg
ret
jmp
cltd
inc
mov
sbb
sbb
mov
mov
js
adc
mov
outsb
cwtl
addr16
loop
mov
std
iret
xorl
outsb
fldcw
cmpb
fcomps
mov
loope
rcrb
mov
and
fisttpl
mov
mov
addl
nop
inc
jns
mov
mov
dec
cs
push
push
inc
add
inc
in
sarb
in
push
lret
ja
mov
adc
xor
mov
pop
xchg
pop
mov
rol
add
pushf
cmp
insb
push
fs
clc
into
jb
sbb
ss
add
call
outsl
add
sbb
lcall
cmc
mov
popf
cmc
fisttpl
jb
sbb
mov
xor
fists
dec
lea
sbb
fwait
cmp
sbb
xchg
arpl
call
cmpsb
out
mov
add
ret
iret
int3
fbld
jmp
cld
rorl
mov
cld
mov
in
leave
adc
adc
clc
cltd
arpl
sub
mull
mov
je
dec
and
daa
fisubrs
mov
cmc
into
push
in
lods
out
scas
sub
fldcw
mov
add
xchg
push
scas
mov
sti
dec
and
pushl
mov
pop
aaa
bound
and
dec
lcall
popa
dec
xchg
fsubp
adc
dec
add
mov
addr16
jno
fs
inc
mov
add
cmpsl
call
xor
or
add
cmp
lret
mov
and
mov
js
pop
aaa
mov
jmp
in
loop
ja
mov
lret
notb
jne
push
stc
outsl
lods
mov
cmp
shr
aaa
in
mov
mov
sti
std
xor
dec
add
mov
mov
jnp
fmuls
jnp
sti
sahf
xchg
sbb
xor
xor
inc
jbe
mov
xor
sub
lods
jle
ds
jle
add
mov
lahf
outsl
fcomps
out
lret
pop
dec
dec
negb
les
cld
lahf
ret
push
or
into
inc
pop
sub
mov
gs
mov
and
xchg
cmpl
lods
jp
or
fadds
inc
fnsave
cmp
lods
xor
out
inc
xchg
mov
scas
jmp
pop
cmc
stos
into
outsl
scas
pop
cmp
sub
fnstenv
cmp
mov
in
push
mov
push
mov
popf
mov
mov
adc
into
pusha
or
mov
push
jge
dec
das
mov
not
mov
and
mov
clc
cmp
iret
add
sbb
cmpsl
lret
adc
stos
sbb
pop
mov
xchg
cmp
lcall
inc
ret
and
call
insl
aad
sub
sub
adc
jno
lret
adc
mov
adc
pop
out
sbb
xor
popa
pushf
leave
or
nop
loopne
dec
dec
fisubs
repz
cltd
and
pmuludq
enter
jle
sub
pushl
and
movsb
sub
ja
into
iret
jne
stc
pop
mov
nop
xlat
dec
adc
imul
cmp
mov
lods
cmpsb
mov
adc
pop
es
jnp
or
andb
jnp
pop
mov
jne
push
dec
dec
pop
es
insl
push
or
xor
inc
adc
cmpsl
repnz
xchg
xchg
ret
mull
daa
jb
bound
push
pop
inc
xor
inc
adc
cmpsl
repnz
xchg
xchg
ret
mull
daa
jbe
insb
pop
dec
pop
inc
data16
inc
push
push
add
rclb
mov
aas
xchg
sbb
xor
inc
xchg
xlat
ret
dec
dec
sub
lret
cmp
sub
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
mov
pop
into
insb
fidivrs
int
scas
inc
icebp
cmp
stc
jle
dec
clc
jle
mov
push
lods
push
mov
insb
fidivrs
mov
dec
sarb
in
pushf
cld
cs
aas
sahf
push
lods
push
mov
je
fs
cmpsl
add
xor
outsb
int3
jne
and
jae
jge
ja
sahf
add
sub
or
fnstsw
push
xchg
pop
je
pop
push
push
adc
out
dec
jae
into
gs
sub
jl
out
jle
push
ret
cmpsl
xor
add
pop
xchg
inc
arpl
aaa
xchg
and
xchg
popa
insb
int3
sbb
shrl
jnp
movsb
lods
fyl2xp1
ds
mov
mov
or
pop
sahf
mov
dec
adc
jno
mov
sbb
imull
xchg
stos
or
int3
jle
sahf
and
push
data16
inc
test
out
push
mov
sub
xchg
insb
xchg
movsb
xorl
out
scas
push
mov
into
jne
jl
or
sbb
sub
and
push
cmc
inc
in
xchg
test
mov
mov
stos
or
jge
inc
repz
sbb
xor
imul
shr
and
fcoml
fimull
push
loop
fisttpl
insb
mov
sub
dec
cld
dec
pushf
jle
push
enter
pop
stos
or
cmp
aas
mov
cmp
int3
jle
dec
in
pop
cld
mov
pushf
push
lods
push
mov
into
insb
fidivrs
mov
cmp
int3
jle
dec
in
pop
cld
mov
pushf
push
lods
push
mov
xchg
jmp
jle
xchg
and
or
stos
xchg
jge
pop
add
mov
ds
mov
cmp
mov
xchg
push
inc
add
std
lds
sub
adc
add
sub
ja
jnp
daa
xchg
test
pop
es
sbb
mov
cmc
jbe
cmp
movsl
pop
xor
push
mov
mov
xor
push
stc
jmp
dec
fidivl
fldl
addr16
mov
or
jle
stos
or
add
notl
insl
cld
sub
fwait
enter
jb
std
mov
or
test
lret
rolb
test
inc
jbe
sub
call
adc
stos
shlb
out
aam
mov
push
test
push
jle
std
push
jbe
je
ljmp
mov
iret
fmuls
sbb
and
das
adc
sbb
push
rcrb
out
sbb
pop
rorb
int
push
inc
ret
pop
iret
or
dec
mov
dec
pop
das
cmp
popf
inc
pushf
xorb
jmp
mov
mov
in
jns
pop
stos
add
fnstsw
and
movsb
mov
xor
mov
outsl
insb
adc
ficoms
cmp
movsb
or
sbb
out
inc
imul
icebp
adc
pop
fistl
cmp
call
cmp
mov
xchg
pop
clc
xor
adc
jmp
and
pop
mov
mov
push
dec
ret
imul
or
mov
lea
push
les
sahf
dec
adc
mov
xor
fwait
pusha
ss
xchg
sub
mov
sbb
rol
shrl
into
jb
mov
pop
push
dec
inc
arpl
jne
jle
cmp
aad
mov
int3
insb
push
jb
sbb
mov
push
outsl
ss
je
mov
fmuls
lcall
cli
repnz
jns
or
lds
fnstcw
push
and
push
imul
xor
add
mov
cmp
pop
and
cmp
add
scas
or
xor
in
dec
push
in
cmp
push
sahf
and
adcb
dec
sbb
mov
push
xchg
out
lret
sbb
sbb
cmp
or
stos
imul
hlt
lret
inc
ja
outsb
jecxz
sub
sti
popf
neg
inc
ret
aad
daa
push
inc
pop
xchg
fistl
mov
fsubrl
mov
cmp
mov
test
scas
dec
sub
mov
add
arpl
xchg
sub
or
sub
rcl
xchg
test
mov
stos
add
cmc
fistpll
test
jmp
dec
add
hlt
mov
sahf
shr
push
and
dec
test
xchg
loopne
xor
fcomps
sarl
enter
and
int3
filds
mov
or
pop
icebp
inc
into
xchg
in
in
dec
sbb
dec
fidivrl
out
dec
popf
xchg
mov
bound
pop
adc
dec
setl
jmp
adc
aad
test
cmp
js
mov
jg
repz
icebp
pop
scas
aaa
adc
imul
aaa
sbb
and
ds
in
shrl
sbb
pop
in
out
lea
or
sub
cmp
out
outsb
shll
push
jg
aaa
xor
xchg
push
cmpl
or
int3
popl
mov
out
repnz
dec
test
adc
aaa
inc
adc
hlt
enter
mov
mov
mov
mov
adc
push
jmp
mov
cwtl
sti
std
scas
mov
xchg
and
fbld
and
into
decb
fidivrl
fisubs
mov
sub
cmp
jnp
shrl
imul
sub
mov
push
or
cmp
mov
gs
mov
into
or
lahf
adc
fs
adc
cmp
fucomp
xor
pop
repnz
fstpl
xor
dec
dec
aaa
xor
add
lods
lahf
sbb
clc
das
mov
inc
mov
xchg
inc
push
iret
bound
sbb
hlt
arpl
xchg
cmc
jnp
sbb
dec
test
mov
insb
pop
fwait
ret
xor
lods
dec
cmp
lods
nop
enter
sti
into
jae
loopne
ss
push
ds
mov
sahf
cwtl
leave
jnp
outsb
add
test
jno
cmpsl
lahf
inc
fmul
fcomp
fucom
pop
mov
ds
jl
pop
jmp
jbe
sbb
pop
daa
push
and
push
loop
test
aam
jne
sbb
dec
fwait
add
jge
scas
je
imul
adc
mov
inc
xchg
arpl
xor
xchg
and
clc
jo
jmp
dec
mov
ss
pop
movsb
inc
push
lret
call
movsl
xor
cld
or
adcb
stos
filds
aam
adc
jns
insl
cmp
pop
sub
mov
lcall
sbb
fldenv
or
inc
lock
jb
jnp
repz
cltd
arpl
sbb
sbb
sbb
ret
aam
cmp
push
pop
sti
pusha
adc
sbb
mov
cli
pop
aad
fcoml
jmp
scas
jl
outsl
push
or
andl
sti
fisttps
pop
shll
mov
jle
ds
pop
in
stos
cmp
shll
aad
sarl
xchg
ja
negl
jne
sub
dec
dec
sbb
mov
aas
xchg
mov
push
aas
out
stos
pop
addl
push
cmpb
leave
sbb
push
fcomps
mov
xor
fadds
cmp
rcl
call
jge
sti
sbb
jle
jle
adc
lods
std
popf
or
aaa
cmp
stos
push
xchg
and
ficoms
stos
xchg
mov
adc
das
movsb
cmp
mov
mov
xchg
push
push
mov
popf
mov
inc
xchg
pop
icebp
mov
mov
pop
adc
imul
sbb
rorl
addr16
xchg
aam
pop
lods
pop
jmp
xchg
lahf
rcl
bound
xor
mov
sbb
mov
hlt
in
fistl
mov
add
test
cmp
insl
mov
inc
ss
imul
xor
dec
mov
inc
cli
push
mov
test
or
fs
cltd
ss
add
push
repz
in
mov
test
adc
or
stos
xchg
mul
sbb
pop
xchg
adc
or
cwtl
popa
ret
xor
fbstp
daa
leave
ljmp
xchg
clc
pop
xor
add
xchg
mov
dec
xor
popf
scas
arpl
aaa
in
xchg
fsubr
dec
and
jge
dec
mov
push
pop
es
in
push
inc
adc
dec
mov
adc
jmp
sbb
push
mov
add
dec
cmp
in
loope
imul
jno
xchg
cli
ret
xor
jo
mov
jge
pop
inc
mov
int3
call
sbb
les
mov
push
mov
rcll
imul
jo
movsl
mov
jle
into
xor
mov
jb
ret
iret
pop
push
ret
daa
xchg
fcomps
push
adc
in
cld
mov
push
xchg
xor
jecxz
xchg
sti
gs
inc
inc
mov
or
ja
jo
inc
adc
imul
mov
xor
lcallw
movb
cld
and
fisttpl
jg
in
inc
mov
pop
gs
hlt
fnstsw
mov
lock
les
dec
pushf
push
test
fsubr
sbb
jp
dec
mov
dec
sarl
xor
jmp
xor
test
or
xchg
lret
mov
cmp
adc
call
into
jo
or
mov
cmp
shll
lret
mov
xchg
cld
popa
cwtl
movsb
and
adc
aaa
push
mov
ret
sub
xor
inc
loop
pop
jecxz
push
test
or
push
mov
js
mov
add
or
sbb
jmp
dec
lcall
aaa
nop
xor
mov
push
adc
jp
sub
cmp
add
aam
popa
adc
insb
push
or
into
pop
ljmp
mov
cmp
test
pop
push
inc
mov
cs
int
popf
fmull
push
cmp
push
jae
jnp
pop
jecxz
dec
xor
pop
xchg
popa
mov
loopne
xchg
mov
incl
nop
jb
aam
cmp
inc
cli
pop
lcall
nop
fsubr
mov
dec
ljmp
cmp
mov
ja
mov
rcrb
pcmpeqw
roll
cltd
lret
gs
xchg
adc
sahf
test
test
xor
add
push
insb
cwtl
stos
in
add
cmp
lods
push
pusha
in
xor
jo
add
into
push
xchg
inc
pop
std
testl
in
lcall
test
les
and
hlt
popf
inc
scas
pop
mov
sub
push
dec
mov
mov
ljmp
mov
stos
push
stc
xchg
mov
stos
push
push
mov
outsb
out
mov
mov
pusha
mov
cmc
add
pop
or
and
sbb
aam
addr16
ja
out
es
or
adc
or
sub
pop
in
and
in
jmp
mov
mov
mov
addr16
pop
cmp
mov
cmp
mov
adc
mov
inc
mov
addl
xor
or
pusha
jnp
hlt
pop
lea
orl
push
lods
jg
arpl
mov
dec
je
jo
int3
rorb
call
idivb
lret
fadds
inc
adc
dec
fsubr
mov
sbbl
int3
jl
fstps
lods
in
sbb
inc
jle
sub
cmp
inc
pop
inc
push
sbb
pushf
inc
inc
xor
and
shlb
cmp
or
dec
fistpll
pop
inc
rcrb
dec
or
lahf
adc
jecxz
cmp
dec
xchg
inc
lcall
out
xchg
jae
xchg
push
xor
int
sub
push
push
pop
push
xor
pushf
outsb
jecxz
cltd
mov
cmpsb
lock
mov
cmp
add
sub
and
push
sbb
mov
xchg
pop
or
lock
aas
or
lcall
pop
stos
test
lret
add
addr16
or
xchg
inc
pop
dec
adc
push
mov
int3
add
insl
or
and
data16
jp
push
outsb
aam
cmpsl
push
aaa
cmp
mov
add
lcall
lret
imulb
bound
mov
jecxz
mov
pop
cmp
add
mov
clc
ja
icebp
sbb
mov
or
mov
mov
jle
sbb
fisubrs
pushf
push
mov
xor
mov
jno
push
popf
pop
pop
pop
cmp
jp
xchg
sbb
inc
mov
mov
jg
cmp
rorb
inc
add
rolb
imul
arpl
lcall
std
add
xchg
mov
xchg
test
jne
into
xor
mov
into
mov
cmp
aas
fstpl
sbb
mov
sub
test
imul
arpl
daa
loop
xchg
test
sub
inc
dec
xor
sbb
ds
xchg
dec
push
out
inc
rolb
jl
sbb
fcmovne
std
lea
stc
repnz
in
jmp
movsb
push
std
push
jge
rcr
movsl
lods
cmp
inc
out
sahf
loopne
jae
in
mov
mov
mov
ret
xor
jp
das
sahf
fisubrs
xor
mov
outsb
jne
stos
mov
adc
pop
or
ljmp
int3
jle
dec
jns
mov
outsb
leave
and
pop
in
fs
sbbl
jg
push
fcomps
push
movsl
gs
lea
dec
sub
iret
sub
out
add
dec
sub
stc
jnp
mov
jbe
int3
scas
insl
fsubrs
popa
xlat
into
cltd
xor
bound
push
mov
adc
jecxz
jo
sarb
lods
lahf
mov
mov
and
xor
mov
cmpsl
sbb
fdivr
mov
mov
adc
in
clc
in
push
das
jb
jb
xchg
lret
ss
jg
dec
imul
xchg
stc
lds
es
dec
popf
or
pop
mov
push
sbb
xor
nop
or
lea
fucompp
je
sub
and
inc
dec
inc
mov
aas
pop
lcall
jbe
icebp
je
xchg
xchg
insb
loope
sub
icebp
sti
push
dec
inc
and
icebp
popa
lock
push
pop
and
adc
xchg
testl
lds
push
fptan
dec
test
mov
sub
mov
pop
push
dec
imul
ss
mov
adc
nop
add
pop
adc
push
mov
cwtl
jl
xlat
jp
popf
xchg
xorl
cmc
jmp
fsts
or
fiaddl
cltd
stos
shll
xor
xor
mov
push
xchg
ror
fnsave
and
xor
mov
dec
aam
push
mov
movsl
xchg
out
inc
pushf
fiadds
in
jae
sbb
outsb
pop
mov
sbb
lods
xor
pop
mov
adc
adc
jp
std
cmpsb
dec
xor
cmp
jl
lods
mov
jecxz
add
jb
jbe
xchg
shr
les
scas
add
mov
jg
pusha
pop
or
bound
mov
imul
mov
xchg
xchg
pusha
and
inc
mov
cmp
mov
aad
or
xchg
fs
add
and
xchg
push
pushf
mov
popa
in
push
mov
icebp
cmpsb
in
adc
push
pop
push
fs
pop
or
inc
or
add
push
inc
std
shlb
loop
jle
pop
xor
in
or
xor
sub
repz
xor
rorl
sbb
scas
lea
mov
mov
lret
mov
test
jg
rorb
testl
ret
add
jecxz
leave
loopne
push
cli
mov
ret
call
inc
push
push
mov
jb
lcall
or
js
mov
jge
mov
mov
xor
cmp
fstps
in
aas
inc
jns
test
push
popf
test
pushf
push
jnp
insb
sahf
pop
mov
add
sub
pop
or
sbb
lcall
mov
dec
add
call
test
pop
adc
lea
imul
cli
dec
dec
xor
pop
cmp
pushf
fstpt
les
mov
and
cmc
inc
xchg
pop
cmp
mov
sbb
insb
rol
push
push
jmp
stos
mov
pusha
pop
cwtl
stos
inc
imul
nop
mov
paddd
xchg
subl
xchg
add
xchg
dec
jp
adc
pop
lahf
mov
mov
imul
fisubs
bound
stos
je
imul
stc
xchg
ds
push
xor
div
es
in
mov
jle
dec
adc
dec
test
test
sbb
faddl
scas
je
jle
hlt
sbb
xchg
lods
sbb
push
scas
pushl
xchg
std
inc
pop
cmp
mov
lods
jecxz
sbb
ljmp
fistpll
out
cmc
pop
sub
fdivs
ret
outsb
sub
cmp
das
xchg
fisttps
sar
push
xor
gs
xor
movsl
mov
insb
imul
mov
push
ljmp
dec
push
test
mov
xchg
out
addr16
addb
rclb
mov
shll
push
xor
xchg
sub
out
fs
pusha
in
lods
inc
bnd
enter
xlat
cltd
sub
fstl
xchg
pusha
cltd
js
ja
dec
inc
inc
lret
xor
xchg
out
dec
mov
loop
add
shll
and
roll
mov
dec
pop
dec
and
xor
arpl
mov
ja
xchg
mov
les
and
stos
jne
je
movsb
mov
in
mov
sub
lods
sub
jmp
sbb
or
outsl
or
cs
jecxz
xchg
sbb
movsb
mov
jecxz
mov
fnstcw
xor
and
mov
sub
push
jb
addr16
ljmp
sub
cmp
cmpsl
xor
daa
or
lds
dec
inc
insb
sub
scas
mov
sbb
inc
push
outsl
sti
xor
subb
xorb
jg
inc
or
pop
sub
or
dec
mov
sti
std
out
lods
push
pop
mov
sar
sahf
out
aam
jmp
jne
loopne
and
cmpsl
add
push
lcall
idiv
loope
fistpll
loop
push
ds
pushf
insl
fisttpll
lea
stc
sub
push
orb
inc
pop
sbb
aam
fimuls
imul
sub
jl
fistps
jmp
and
xchg
jecxz
addr16
xor
mov
or
inc
or
test
fidivrl
pop
sbb
das
jne
das
add
sbb
or
icebp
add
add
xorl
add
es
popa
outsb
mov
push
loopne
enter
jne
lods
cmp
mov
pop
adc
leave
loopne
xor
jl
nop
jl
mov
mov
cwtl
and
mov
dec
or
push
test
and
pop
cmpsl
xchg
lods
stos
cmc
adc
mov
mov
mov
fisubl
adc
addr16
xor
mov
out
ss
mov
ja
or
in
mov
mov
xchg
sub
push
lock
mov
pop
and
add
xchg
stos
add
sbb
adc
ficomps
mov
mov
push
lock
inc
pop
std
test
pop
hlt
outsb
mov
mov
call
loope
rcl
sti
out
andl
ss
mov
and
mov
scas
test
jmp
mov
enter
push
mov
jno
popa
and
int
xor
jo
xor
mov
and
sub
push
add
pop
inc
mov
leave
enter
xchg
aam
push
cmp
push
or
repnz
js
in
lret
adc
mov
cwtl
testl
cmp
xor
ss
jno
xchg
sub
jns
xchg
cmc
cmp
fucom
jno
or
mov
sbb
mov
push
sbb
out
es
or
sti
xchg
add
imul
push
fwait
lret
negb
cli
outsb
cmp
push
loope
gs
xor
push
out
adc
xchg
lahf
outsl
lcall
sahf
pop
mov
mov
mov
fidivs
xlat
fs
lods
cmp
in
es
sahf
aaa
mov
jmp
aas
cmpsb
loopne
push
sub
pop
lahf
add
and
add
std
pushf
dec
or
jnp
dec
popa
lods
dec
hlt
mov
shrl
ret
gs
psrad
xchg
add
mov
push
jmp
inc
sub
cmc
test
xchg
leave
das
aam
ret
int3
jl
adc
std
arpl
cmc
xchg
sbb
in
xchg
add
test
clc
repnz
push
arpl
xor
out
adc
jmp
rclb
outsl
jp
out
or
out
cwtl
mov
repz
xor
sbb
addr16
call
jb
andl
sbb
push
repz
call
pop
xor
imul
cmp
adc
addr16
lcall
lret
ret
mov
test
sahf
xlat
je
data16
dec
pop
mov
jp
jge
mov
or
sbb
outsl
cmp
add
xchg
icebp
aaa
and
cmpsb
pop
xlat
dec
sahf
lock
sbb
test
in
aad
cli
mov
lods
rcr
dec
fadd
cmp
ret
xchg
repnz
movsl
dec
popa
ja
addl
lcall
or
out
cmc
sbb
int3
ss
test
rcrb
add
mov
inc
movsl
adc
mov
out
pop
adc
scas
mov
pop
xchg
add
inc
fdivrl
jb
sbb
push
imul
dec
lcall
daa
js
dec
xor
popa
push
addl
std
dec
imul
hlt
dec
rolb
enter
ret
in
mov
inc
cmpsb
sbbb
jp
fs
sarb
fstps
mov
js
fisubs
xor
mov
pop
sub
sahf
and
dec
adcb
jb
inc
mov
mov
in
fs
insb
cmp
lods
insb
ret
pop
pusha
xor
hlt
lods
push
add
cmp
dec
dec
xchg
mov
cmpsb
mov
aaa
inc
rcl
pop
cwtl
insb
fidivrs
mov
cmp
int3
jle
dec
in
pop
cld
mov
pushf
push
lods
push
mov
into
insb
fidivrs
mov
cmp
int3
jle
dec
in
pop
cld
mov
pushf
push
lods
push
mov
into
insb
fidivrs
mov
cmp
int3
jle
dec
in
pop
clc
mov
pushf
push
test
mov
clc
push
mov
cld
xchg
int3
xorl
add
jecxz
shl
ret
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
mov
cmp
pop
insl
das
adc
insl
lods
and
lods
in
fdivr
int3
fucomp
fucomp
sub
cmp
jge
dec
jge
or
mov
std
int
std
fucomp
sub
cmp
jge
dec
jge
insl
lods
popf
mov
ret
mov
mov
pop
push
cmp
dec
out
pop
mov
sub
mov
out
push
imul
js
pop
mov
cmc
sub
fmuls
adc
lds
mov
add
jl
imul
sub
fstpt
cmp
and
nop
cmp
jnp
pop
push
dec
lods
jne
lea
jnp
sub
mov
in
rcr
ret
ret
test
jne
dec
sub
insl
lds
cwtl
fldl
lods
mov
xchg
and
xchg
mov
mov
fwait
in
popf
imul
int3
std
popf
int3
std
fcoml
jb
cmp
sub
dec
jge
insl
lods
popf
mov
lods
in
int
std
popa
jl
insb
sbb
cmp
sbb
sbb
in
sete
out
stc
fstpl
jno
popa
jns
push
dec
or
sbb
dec
sub
push
jmp
cwtl
ret
pop
adc
pop
cmp
dec
dec
jge
insl
lods
popf
mov
lods
in
int
std
fucomp
sub
cmp
jge
dec
jge
insl
lods
popf
mov
lods
in
int
std
fucomp
sub
push
dec
ljmp
test
xchg
push
iret
sarb
stos
cmpsb
roll
push
xlat
or
sti
xor
icebp
adc
push
pop
stc
in
adc
ficoml
sbb
inc
jmp
dec
jge
xchg
inc
inc
les
ja
lds
add
notl
test
xor
sub
or
cmp
arpl
sub
cmp
cmc
adc
push
imul
mov
jb
lret
dec
add
inc
sub
sbb
xor
dec
arpl
outsb
test
cmpsl
test
xchg
stos
sbb
scas
dec
and
out
cmp
cmp
push
ficomps
pusha
jns
mov
sbb
jns
jmp
jae
shrb
and
insb
lcall
adc
out
push
sti
push
mov
inc
and
cmp
pop
jo
rcrl
cld
add
jbe
mov
icebp
lods
dec
fstl
add
xchg
pop
or
sbb
jns
or
sti
dec
or
or
xor
jb
sbb
pop
rcrl
push
pop
sete
push
pop
rclb
sbb
imul
loop
jno
inc
cltd
xorl
pusha
mov
loope
jge
test
andl
fsubl
cltd
add
cmp
insl
scas
pop
or
inc
iret
arpl
mov
inc
sti
push
mov
add
or
xchg
call
loope
cld
cmpsb
jne
cmp
mov
pushl
out
aam
lcall
push
sub
insb
pop
je
mov
or
mov
mov
lds
loop
pop
ds
int3
lret
ss
adc
push
jbe
pop
push
hlt
jmp
iret
ret
jne
loopne
add
call
xor
xchg
adc
cmpsl
push
or
movsb
into
pop
sub
mov
mov
mov
cmpsb
and
push
out
and
mov
rcrl
aaa
outsl
js
scas
mov
inc
xchg
jns
idivb
ja
xchg
xor
je
bound
fcoml
lods
aad
xor
je
jae
fs
scas
xchg
push
xor
sub
mov
push
sbbl
mov
incl
add
sarl
rorl
jo
adc
mov
aaa
xor
sub
fstpt
cli
mov
push
adc
stos
inc
mov
flds
sahf
pushf
lcall
or
insl
cmp
jle
xchg
cmc
movsb
aaa
and
pop
adc
sbb
mov
dec
std
or
imull
push
popf
out
ja
and
arpl
xchg
or
sti
gs
shrl
jl
test
lahf
out
xor
testb
adc
inc
mov
lock
adc
js
adc
xchg
sub
or
loope
pushf
cmp
ror
add
into
int3
xchg
fbld
inc
jb
jne
bsr
mov
test
jp
repnz
push
cltd
in
test
hlt
sahf
push
mov
jne
out
add
aad
in
push
nop
lret
arpl
repnz
sbb
adc
xchg
cmpsl
fcom
cli
xchg
stc
cmpsb
mov
out
ja
test
sbb
leave
stos
cmp
cs
popf
divl
and
lods
outsb
push
jns
xchg
sbbb
lods
mov
mov
insb
sub
mov
jp
adcl
int3
sahf
mov
jle
xchg
enter
lods
or
add
mov
divl
outsb
inc
adc
push
into
jle
mov
sub
mov
fwait
stc
es
pop
into
xchg
cwtl
call
lock
and
fsts
inc
cmp
fidivl
push
mov
add
test
aas
aad
lock
mov
push
jp
test
jle
inc
dec
int
xchg
jne
sbb
orb
add
xlat
popa
cltd
push
lcall
sub
adc
aad
sub
addb
mov
repnz
lods
push
pop
pusha
push
sbb
add
inc
inc
ja
shll
lea
fwait
nop
jno
cmp
lret
cmp
loope
dec
fwait
pop
mov
and
rorl
pop
sti
imul
inc
iret
mov
mov
cwtl
mov
xchg
cmp
push
xchg
xlat
lods
int3
xchg
dec
pushf
mov
outsl
mov
repz
movsl
rorl
fsubs
push
negl
pop
xchg
jp
scas
in
iret
push
xor
or
fmulp
ficomps
cli
dec
pop
testb
xchg
or
sbb
es
ljmp
test
push
sti
jmp
push
jae
stos
jbe
sub
pop
push
sub
subl
and
ret
mov
push
adc
dec
arpl
fs
mov
xchg
and
pop
bound
push
mov
les
fisttpll
cmp
pop
mov
stos
xor
pop
push
pop
dec
inc
aas
xchg
fs
and
xor
inc
mov
pop
aad
icebp
test
cmp
fsubs
jae
cmp
in
jns
sbb
mov
das
ss
mov
jmp
inc
pop
ss
pushf
nop
std
movsl
lret
lds
fs
xchg
clc
mov
test
icebp
push
and
outsl
jno
xchg
dec
std
lods
pop
pop
push
sub
jg
mul
xor
cmc
inc
iret
jns
scas
pusha
mov
jle
mov
xchg
mov
inc
in
mov
gs
pop
push
das
scas
ret
shrb
loop
push
push
lret
scas
sarl
dec
or
rcrl
dec
or
jl
popa
out
push
insl
clc
jp
mov
xchg
mov
xorl
push
idivl
jns
or
lods
cmc
xchg
mov
cmp
mov
mov
push
xlat
dec
mov
xchg
xchg
bound
inc
das
ret
outsl
ja
fsubr
neg
dec
je
aad
int3
stc
mov
push
scas
or
add
xor
je
push
or
mov
mov
mov
shrb
mov
or
jecxz
inc
pop
cmp
into
push
pop
xor
outsl
mov
inc
je
clc
insb
cmpsb
inc
idivl
jae
fnstenv
adc
or
loop
test
and
fwait
push
push
mov
xchg
out
out
dec
ljmp
loope
test
pop
mov
or
cmp
shrb
cmp
push
or
mov
mov
push
push
mov
xor
sub
in
data16
negl
arpl
mov
xor
inc
mov
xorb
sbb
icebp
rcrl
cmp
cmp
mov
leave
ds
fmulp
xor
inc
sub
bound
inc
and
jne
mov
inc
inc
jecxz
inc
mov
cmp
rorb
mov
cld
inc
pop
mov
rcrl
mov
sbb
loopne
and
push
xor
out
xchg
jl
jnp
jge
xor
mov
outsb
mov
mull
repz
push
out
or
dec
pop
mov
testl
outsl
adc
push
fcomi
js
int3
es
dec
xorl
pop
jne
jb
sub
loop
roll
scas
stos
bound
jo
scas
insl
inc
cmp
ret
sbb
xchg
lret
sub
es
orl
lahf
nop
lods
dec
insb
pop
cmp
push
lcall
fwait
insl
mov
je
jo
inc
imul
into
push
idivl
push
inc
scas
sub
adc
push
leave
cmp
test
fs
fs
sub
pop
push
dec
divb
mov
nop
andl
jno
int
stos
testb
cmpsl
lahf
leave
jbe
dec
cmp
out
cmp
cmc
push
mov
lds
cmp
add
rcl
mov
or
out
sub
ss
in
daa
hlt
out
daa
inc
inc
xor
maskmovq
negl
or
js
pop
cltd
sub
ds
xchg
push
out
adc
int
push
int3
int
dec
arpl
add
lods
stos
loop
testl
cld
add
ds
fisubrl
andl
dec
xor
lock
popf
xchg
pop
push
loope
sbb
push
pop
or
xorl
add
cli
sbb
imul
or
cld
andb
in
xchg
shll
push
lret
sbb
ja
pop
adc
jb
jo
hlt
push
mov
cltd
mov
lahf
sbb
push
cmp
and
push
popa
mov
shlb
sub
dec
out
cld
cmpsb
scas
xchg
arpl
js
dec
mov
inc
daa
outsb
xchg
push
cmc
pop
movsb
mov
xchg
add
loop
inc
jne
sub
rorb
mov
aad
call
out
push
mov
sti
lret
sbb
add
sbb
stos
mov
adc
js
mov
ljmp
sbb
fidivl
test
mull
lret
inc
ljmp
aas
or
jmp
or
and
push
lods
cmpsb
adc
repnz
lret
mov
add
fisubrs
mov
fsubrp
lock
push
lahf
push
lock
test
mov
pop
inc
out
cs
add
aaa
mov
lret
jge
add
fimull
out
add
stos
shll
mov
push
pop
dec
xchg
dec
push
call
xor
xor
inc
ljmp
add
push
je
fistpl
cld
sbb
jne
scas
xchg
fcomip
lahf
sub
fbstp
and
repnz
pop
scas
roll
add
add
push
out
xchg
insl
in
xchg
jo
mov
sub
mov
insb
and
into
test
cmc
pop
jb
js
push
roll
xor
ret
loopne
mov
and
leave
push
jle
lods
dec
pop
icebp
call
dec
pushf
lcall
and
stos
cmpl
inc
fistps
adc
mov
xchg
ret
xor
or
jb
inc
test
jne
jne
dec
data16
cmp
hlt
xchg
fsubrs
loop
xor
shlb
sbb
push
xlat
fistpll
pop
and
mov
inc
xor
push
push
fcmovb
xchg
push
pop
pop
xor
cltd
jg
mov
aam
int
out
je
mov
mov
pop
fs
mov
ss
test
push
jnp
cmpsl
push
and
pop
xchg
jecxz
add
adc
pop
and
sub
cmpsl
add
and
fmuls
outsb
or
or
mov
movsl
inc
outsl
cli
iret
adc
push
cwtl
mov
add
imul
bound
cmp
inc
pop
sub
loope
daa
popf
and
or
fcomps
mov
push
lahf
lahf
xchg
mov
and
insl
push
insl
scas
mov
rorl
dec
cmpsl
mov
das
or
js
mov
sbb
repnz
aaa
xchg
fstl
pop
das
push
push
xor
ljmp
mov
cs
and
insb
enter
xor
inc
sub
jbe
call
lahf
inc
movsl
rcll
jl
and
push
push
test
cltd
test
lret
popa
mov
add
mov
addr16
mov
xchg
jecxz
in
mov
sbb
sbb
lret
adc
ficoms
xchg
ret
rcrl
adc
pop
ja
aas
cmp
ss
jge
cltd
or
imulb
xor
sahf
sub
hlt
aaa
or
pushf
daa
dec
sar
and
outsl
pop
in
add
in
jecxz
cmc
in
mov
mov
sub
mov
shl
dec
int
sub
pop
inc
call
jnp
test
mov
xor
inc
dec
insl
adc
std
cmc
and
push
mov
test
pop
fs
data16
daa
xor
in
mov
mov
imul
fcompl
out
mov
imul
insl
push
cmpsl
mov
pop
mov
add
fistps
push
mov
out
adcl
xchg
add
or
xchg
and
cmp
sbb
mov
fnsetpm(287
xor
int3
xor
mov
inc
out
or
ret
fstpl
aaa
inc
loope
and
leave
jne
int3
in
std
inc
jg
cli
lds
das
jno
insl
xor
lds
jbe
repz
pop
lock
push
hlt
add
mov
nop
xlat
mov
mov
popa
neg
sub
pop
mov
sub
paddusb
jge
ret
addr16
stc
jne
aaa
add
mov
insl
shll
jmp
and
loope
push
insl
lcall
orl
sbbl
mov
sti
notb
cmp
mov
add
test
cmp
mov
push
rcrb
fists
movsl
and
rol
pushf
inc
repz
mov
pop
stos
jbe
cli
dec
pop
push
mov
pop
test
shl
aaa
in
mov
and
mov
sarl
xor
dec
std
dec
jb
es
sbb
sub
adc
ficomps
daa
cmpl
into
dec
das
push
dec
inc
mov
sub
lds
jl
adc
outsl
pop
bound
shr
inc
dec
xchg
dec
loope
jecxz
out
addb
sub
adc
or
dec
mov
les
inc
push
lcall
pop
movsl
mov
popf
idivb
cmp
mov
popf
inc
xor
adc
and
jns
adc
mov
push
cli
xor
add
push
push
adc
loopne
fwait
imul
out
loope
or
inc
hlt
adc
cltd
mov
test
inc
in
inc
sbb
pop
sbb
out
jp
mov
push
xchg
out
repnz
fsubrl
lret
loop
int
lret
push
aaa
iret
outsb
rol
sbb
test
shlb
pushf
adc
jo
scas
ljmp
inc
cmpsl
jecxz
dec
lock
aaa
inc
sub
ja
loop
sbb
jo
int3
adc
push
dec
mov
cmpsl
dec
int
add
pop
push
imul
int
push
cmpsl
jnp
fdiv
mov
lods
bound
js
mov
iret
sbb
in
pop
dec
dec
out
imul
push
les
ror
aad
fstpt
sub
mov
imul
in
hlt
jbe
pop
sbb
gs
pushf
aam
jb
lods
fcmovne
cmp
icebp
in
fidivs
mov
adc
mov
scas
adc
ret
xchg
jg
jge
into
mov
mov
shlb
mov
mov
xor
sub
pop
fildll
loope
push
gs
mov
nop
js
pop
ffree
shrl
pop
outsb
mov
cmpsb
leave
adc
add
sarl
popf
enter
pop
xor
test
into
add
out
aam
lcall
xchg
jg
pushf
adc
mov
fwait
mov
mul
jb
cmp
ret
into
out
xor
pop
lret
js
into
pop
fsubr
insl
cli
and
lahf
cmpsl
in
ss
mov
mov
clc
stos
lret
leave
jl
in
je
push
jns
addr16
fidivl
mov
mov
mov
jg
sti
in
mov
jge
lahf
sub
data16
hlt
inc
adc
and
cs
repz
add
mov
movsb
lock
push
dec
mov
mov
jmp
mov
into
sbb
shr
rcr
inc
orl
jl
pop
jecxz
jge
dec
mov
xor
les
mov
jnp
lea
aaa
dec
outsb
out
fcoms
fcomps
div
daa
lea
or
fists
movsl
rcr
inc
adc
fisubs
dec
in
cli
sub
dec
stos
push
mov
mov
inc
lahf
add
aaa
gs
jne
push
jecxz
fs
mov
cmp
or
xchg
out
clc
pop
cmc
scas
adc
or
jmp
sub
sahf
jae
push
das
fstps
ja
push
fcoms
inc
pop
xchg
pop
sar
mov
jnp
dec
mov
je
xlat
push
push
cmc
mov
insb
or
adc
sub
xor
mov
pop
xlat
mov
iret
push
sbb
mov
dec
push
adc
lods
adc
pop
add
js
arpl
sbb
adc
and
xchg
sub
xchg
dec
aam
sbb
stc
or
push
inc
mov
xchg
jle
cs
rol
and
xlat
faddp
faddl
js
add
stc
jnp
sti
xchg
push
dec
mov
addl
pop
cmp
sub
bound
adcl
out
repz
push
sub
sub
sub
push
cmp
rcrl
mov
addb
mov
fwait
imulb
xchg
pop
daa
xchg
leave
inc
pop
mov
push
clc
ret
mov
cmp
inc
cmp
dec
stos
rcrl
aad
mov
sbb
xor
addr16
push
dec
and
mov
jg
add
call
dec
cmp
mov
cmp
mov
adc
and
adc
sbb
in
arpl
and
hlt
out
in
push
int
fmuls
and
lods
je
and
movsl
cmpsb
mov
mov
cltd
mov
jnp
clc
lds
adc
push
add
mov
movsl
orb
mov
push
cmpsl
adc
sub
xchg
push
aas
ds
insl
dec
xchg
add
mov
push
cmp
jecxz
mov
les
jae
fwait
insl
lret
or
xchg
sbb
xor
jg
mov
ret
adc
shrb
and
aad
lea
jl
xchg
bound
inc
cmp
test
jg
sbb
es
cmp
jg
stos
repz
adc
inc
into
ret
sub
ret
mov
jge
jg
je
enter
in
lock
enter
cmpsl
sub
clc
dec
scas
leave
fcmovnbe
mov
add
mov
out
enter
inc
sti
add
mov
push
sbb
jmp
sub
fldl
or
mov
cs
in
imul
add
loop
cs
add
aaa
inc
cwtl
das
mov
popl
hlt
ss
clc
fidivs
sbb
push
mov
iret
dec
add
xchg
xor
xchg
xchg
push
stc
mov
jge
jns
loope
inc
cmc
dec
sbb
cli
or
faddl
push
jg
mov
mov
lret
jmp
repnz
imul
adcl
mov
dec
mov
mov
xor
fadd
out
loope
ja
repnz
mov
xor
lret
mov
mov
mul
out
ret
add
aaa
or
popa
push
je
bound
js
add
mov
scas
enter
flds
bound
call
roll
mov
lret
in
mov
sbb
mov
enter
into
adcl
in
mov
mov
test
mov
dec
fcomps
aam
jno
sbb
pop
and
or
mov
adc
jp
outsl
xor
mov
das
xor
push
shrl
daa
inc
dec
and
adc
or
sbb
and
mov
movb
lds
mov
sbb
lcall
adc
fisubl
leave
arpl
fnsave
stc
push
and
pop
pop
jne
rolb
sbb
dec
cwtl
pusha
data16
xchg
int
add
xor
mov
sbb
dec
out
jmp
xor
sbb
push
mov
std
mull
jp
cmpsl
test
jmp
add
push
mov
adc
xchg
xchg
dec
movl
and
andl
sub
inc
xor
aad
jmp
repnz
ret
lret
adc
aas
adc
dec
jl
shl
gs
into
xor
loope
pop
mov
repnz
xchg
mov
jne
cli
adc
cmpb
sbbl
push
adc
and
mov
dec
addb
inc
xor
loop
rcrb
lahf
adc
nop
sub
gs
stc
push
cmp
xchg
xor
cltd
push
in
mov
sbb
stos
or
arpl
outsb
outsl
cmp
inc
cmpsb
mul
and
inc
push
dec
pop
xor
sub
cmp
pop
orb
mov
rolb
cvtps2pd
jb
sti
fimull
inc
or
push
iret
movsb
sub
stos
addl
cmp
adc
mov
fdivrs
pop
pop
imul
xor
jns
sbb
dec
dec
jge
insl
lods
popf
mov
lods
in
int
std
fucomp
sub
cmp
jge
dec
jge
insl
lods
popf
mov
lods
in
int
std
fucomp
sub
cmp
jge
dec
jge
insl
lods
popf
mov
lods
in
int
std
fsubr
sub
cmp
or
sbb
dec
dec
jge
lods
lods
popf
mov
ficompl
add
adc
cmp
or
sbb
fisttpl
sub
mov
inc
in
xor
cmpsb
int3
adc
add
cmp
or
sbb
insb
mov
mov
lods
jae
add
push
pushf
inc
in
xor
and
push
faddl
sub
cmp
or
sbb
insb
mov
mov
lods
fstpt
test
dec
andb
gs
jg
outsb
xchg
sub
jl
dec
cmpsl
xchg
imul
addr16
in
test
sbb
stc
mov
cmp
xor
pop
inc
xchg
stos
ret
pop
fwait
xchg
pushf
add
into
adc
iret
int
and
stos
mov
les
scas
xor
insl
jb
shll
pushf
jae
idivb
test
out
pusha
jp
popf
ret
insb
mov
mov
lods
test
lods
mov
fmul
in
fimuls
push
and
xlat
mov
mov
xchg
mov
lods
adc
fildll
leave
mov
gs
dec
mov
cmp
xlat
arpl
push
arpl
inc
shlb
std
in
pop
mov
jb
cmp
or
sbb
insb
mov
mov
lods
jae
arpl
cld
and
adc
push
pushf
push
jecxz
mov
xor
shr
push
mov
add
mov
mov
repz
loope
sarl
sub
adc
dec
in
or
mov
sub
push
test
mov
mov
sbb
mov
lods
jae
arpl
cld
and
adc
add
cmp
or
sbb
insb
mov
mov
lods
jae
arpl
cld
and
adc
add
cltd
stos
mov
cmp
in
inc
inc
lds
into
xchg
dec
es
nop
adc
jmp
dec
data16
cmc
pop
cmovs
mov
dec
leave
frstor
or
mov
cmc
mov
repnz
cmp
jne
add
pop
pop
in
movsl
mov
or
lods
stc
xchg
in
cmp
jle
or
xchg
pop
icebp
and
mov
push
dec
arpl
cmp
cmp
test
lds
roll
insl
adcb
pop
dec
add
shl
mov
ds
dec
jmp
xchg
std
cmp
xor
mov
inc
or
add
push
decb
jl
js
sbb
pop
scas
pop
mov
cmpsb
xor
ja
stos
push
jns
jg
shr
mov
sarb
aam
out
pop
cs
mov
cmp
rorl
shr
repnz
mov
pusha
and
imul
push
fnstcw
fsubp
jne
lock
inc
mov
mov
xchg
dec
lock
push
dec
out
test
iret
std
shr
pop
sbb
nop
lcall
gs
stos
jg
jle
dec
dec
dec
in
lahf
inc
or
sbb
pop
dec
cmc
mov
in
mov
mov
inc
insb
and
cld
xchg
jb
pop
mov
cmpl
cwtl
xor
jl
push
popf
sbb
adc
mov
mov
mov
aad
jae
enter
test
pop
mov
out
testl
shll
int
movsl
xchg
push
or
fimuls
mov
push
idivl
ret
in
mov
xlat
pusha
mov
adcb
jge
add
aam
fs
fldenv
stc
pushf
ja
adc
xchg
or
ret
shl
out
xchg
jmp
push
xchg
repnz
pop
push
loop
fxch
notl
sub
mov
xchg
pusha
ljmp
cmpsb
int
pop
stc
push
call
inc
sub
mov
pop
fistpll
clc
mov
not
test
fwait
sbb
daa
insl
pop
mov
pop
fistl
cmpsb
sub
fmull
push
or
pop
test
xchg
inc
test
sbb
jae
inc
pop
inc
mov
xor
dec
in
lock
aam
and
add
sarb
outsb
inc
pop
cld
jnp
xchg
icebp
mov
aam
inc
add
dec
mov
iret
insb
fbld
outsl
iret
jle
inc
jbe,pn
sbb
mov
arpl
shl
sti
enter
add
push
xchg
hlt
pushf
test
mov
xchg
inc
xlat
test
push
cmp
fmuls
jb
lea
jnp
mov
push
pushl
lret
xchg
test
sbb
out
push
mov
test
cwtl
push
xchg
sbbb
push
mov
int3
mov
cltd
imul
lds
mov
in
inc
mov
in
addl
stos
jle
push
ror
inc
std
pusha
stc
and
enter
imul
jo
inc
ret
movq
inc
mov
and
scas
pop
inc
addb
push
jb
pop
sarb
lret
push
mov
sub
xor
rorb
dec
sub
rep
inc
push
xor
dec
rorb
pop
cmp
shlb
dec
cs
and
add
imul
add
aaa
xchg
into
loope
sub
movsb
notl
shl
test
or
aas
subb
xchg
stos
mov
lds
filds
ja
push
mov
test
pop
pushf
pop
stc
andb
and
daa
mov
es
leave
lret
adc
push
xchg
outsb
add
mov
xlat
insl
outsl
xchg
in
out
mov
and
mov
lods
sbb
mov
mov
popa
cmpsl
je
fstpl
cmp
dec
jle
sub
cld
jnp
mov
cwtl
lahf
loop
cli
push
add
xor
ds
mov
mov
xorl
loopne
jl
and
mov
xchg
sub
test
jg
adc
in
dec
sub
aaa
mov
or
je
xchg
hlt
adc
mov
jmp
loope
in
cmp
inc
fwait
gs
test
sbb
lock
xchg
dec
mov
into
inc
fiadds
pop
jnp
add
cmpsl
ds
push
fisubrl
jb
or
fsubr
jae
mov
add
inc
xchg
dec
in
in
push
mov
jnp
in
cmp
out
mov
out
pop
mov
pop
mov
push
push
into
cmp
outsb
add
cmovnp
xchg
mov
mov
popf
sbb
pop
orl
and
into
xchg
fs
imul
out
cmp
lret
jo
push
frstor
aam
cli
cmc
push
scas
dec
repnz
sbb
pop
add
and
cmp
and
lods
scas
mov
inc
in
jl
leave
je
mov
mov
xchg
shrb
pop
mov
inc
xor
xchg
inc
scas
fidivrl
fmuls
inc
fwait
mov
jns
test
mov
lods
cltd
in
mov
sahf
jbe
jg
fcoms
jle
aas
add
pusha
lret
sbb
loop
clc
out
fs
lds
pop
pop
mov
adc
pop
loopne
pop
call
dec
mov
mov
xchg
jbe
sbb
aam
fldcw
clc
xchg
xchg
xchg
and
cmpb
lds
out
out
lret
insl
mov
dec
sbb
insl
imul
dec
call
and
mov
xor
sub
pop
mov
pop
mov
add
sub
jmp
and
or
fcoml
repnz
inc
popf
gs
out
mov
or
add
push
pusha
xchg
dec
lock
and
dec
xchg
cli
pop
dec
inc
and
or
lret
repnz
std
jo
or
inc
in
inc
pusha
es
push
outsb
xchg
jb
sub
xchg
and
scas
jno
xchg
xor
repz
lret
xor
out
pop
push
push
mov
jnp
mov
sbb
cwtl
mov
adc
inc
inc
cli
jmp
into
mov
and
dec
inc
ret
icebp
orb
shl
push
sub
clc
dec
and
add
mov
sbb
adc
jle
aad
cmp
jnp
ficoms
lret
jg
add
xor
clc
pop
cltd
xchg
push
inc
call
adc
xchg
lods
push
mov
push
lock
dec
cli
pop
dec
sti
push
enter
cmpsb
adc
sti
bound
cmc
mov
mov
fdivl
cmp
jo
fld
ds
insb
cmp
mov
adc
aam
cmp
sti
and
mov
pop
adc
rcll
or
cmp
and
jl
popf
pusha
xchg
add
push
mov
outsl
pop
push
mov
neg
inc
arpl
in
add
dec
mov
cltd
jg
flds
fnsave
xchg
lahf
sbb
jnp
add
mov
and
scas
mov
jae
mov
add
sub
mov
and
test
sub
rep
icebp
dec
aad
sti
enter
mov
add
sbb
inc
nop
mov
nop
sub
xchg
dec
sbb
mov
outsl
adc
push
xchg
add
pop
jb
in
dec
loopne
rolb
icebp
aad
jmp
scas
xlat
insl
inc
fld
mov
push
push
sahf
or
mov
inc
or
jne
data16
adc
insw
mov
jg
jae
push
mov
aaa
and
sbb
iret
adc
jecxz
jle
adcb
mov
nop
cltd
cltd
popf
iret
bound
int3
arpl
popf
out
shrd
les
push
test
pop
sub
xchg
lds
sub
insl
xchg
sbb
loope
and
pop
and
xchg
ja
enter
push
adc
idivl
cmp
lock
aam
pop
repnz
sbb
sub
fldl
xchg
mov
loope
dec
sub
popf
push
nop
insl
es
sti
adc
out
push
mov
testl
aad
add
leave
lea
jmp
ss
and
sub
testb
push
xchg
sub
hlt
sbb
mov
cmp
ret
cmp
or
mov
mov
cltd
mov
mov
and
jg
sub
mov
repnz
call
enter
push
mov
cmp
js
enter
or
mov
pop
lret
jno
dec
pop
fiadds
mov
and
outsl
sub
dec
pop
pop
popf
pop
push
cmp
aas
test
xor
adc
xor
push
scas
sbb
mov
sbb
ficoml
lahf
and
hlt
clc
sbb
cmp
test
pop
xchg
or
mov
cmp
imul
sbb
or
xor
jecxz
lods
shrb
lahf
push
mov
xor
repnz
pop
cli
sub
jnp
jae
adc
lahf
dec
loope
cmp
cmpb
sub
je
test
pusha
and
aas
fiadds
or
adc
scas
out
shrl
xor
fwait
sbb
inc
jge
jns
dec
cmp
cld
lcall
dec
mov
jnp
pop
mov
scas
fwait
cmpsb
sub
nop
fmuls
sub
mov
push
sbb
insl
cltd
push
insl
subl
mov
pop
out
out
xor
inc
push
inc
cmp
inc
inc
outsb
sub
inc
add
sbb
sbb
dec
adc
xlat
imul
roll
inc
std
lea
fmuls
or
or
call
das
xchg
pop
int3
jo
enter
cmpl
xchg
lods
mov
cmp
dec
mov
adcl
inc
push
ret
clc
je
rol
fcmovu
jmp
jns
imul
jns
out
out
dec
mov
sub
repz
sti
cmp
jb
filds
ss
sahf
sub
lods
hlt
repz
lea
xor
adc
scas
and
adc
pop
bound
inc
bound
stos
jne
pusha
insb
adc
leave
or
popf
jmp
dec
mov
ret
sub
fistl
fistl
int
or
push
cmp
les
cltd
les
mov
jp
pop
ja
mov
stos
and
pop
sub
subb
or
iret
gs
repz
and
sbb
dec
pop
mov
and
cmp
add
adc
dec
add
pop
cmpsl
add
xchg
scas
xchg
mov
jne
fistpl
enter
xchg
pop
mov
dec
insl
je
bnd
inc
mov
icebp
nop
pop
insl
leave
inc
ss
jno
jbe
in
push
xchg
mov
pop
xor
insl
pop
xchg
add
aaa
push
in
fwait
test
loope
dec
fs
xor
push
dec
pop
test
or
fistpl
cmpsb
fs
cbtw
insl
fimuls
and
push
jb
fidivrl
mov
mov
or
xchg
adc
cmpsb
pushf
gs
leave
in
cmp
out
sub
movsb
add
ljmp
lret
and
or
jb
stos
js
xchg
dec
cmp
sbb
xor
push
dec
sahf
add
call
fisttpl
aad
aaa
clc
or
mov
mov
clc
je
xchg
sbb
call
mov
sbb
in
add
daa
xchg
pop
mov
jp
add
jnp
adcb
mov
andb
cmp
out
loop
aad
in
fwait
lcall
sbbb
fsubrl
jg
sub
in
loop
sub
pushw
sbbb
cmc
mov
adc
mov
mov
mov
pop
lds
inc
mov
cld
xchg
pop
inc
rcll
jb
and
push
pop
pop
adc
or
orb
bound
in
xchg
adc
and
iret
notb
pop
mov
outsl
imul
xchg
pop
push
repnz
adc
ljmp
adc
outsb
sub
and
adc
add
inc
add
ret
stos
mov
push
sub
xor
dec
cli
sti
ljmp
les
sub
or
dec
cmp
insl
jns
addr16
jge
ja
fistl
scas
in
mov
xlat
or
mov
nop
outsb
cmp
gs
pop
mov
dec
std
and
xchg
lods
int
lds
xor
jne
pop
cmpsb
imul
call
test
movsb
push
cltd
pusha
jo
fisttps
daa
movsl
sti
clc
test
stos
lds
adcb
cld
mov
sbb
mov
lods
inc
pop
movsb
in
rcrl
out
scas
rcl
repnz
pushf
aam
pop
inc
inc
jo
rolb
add
loopne
jl
test
xchg
test
test
push
mov
xchg
adcb
mov
stos
jmp
leave
jo
jmp
hlt
icebp
mov
call
cmp
push
jns
sahf
ffreep
xchg
movsb
lea
mov
out
scas
lock
outsl
pop
inc
pop
stc
pop
push
into
cmp
adc
mov
aaa
sbbl
aam
or
push
aaa
xchg
inc
sbb
sub
cmp
adc
mov
out
xchg
mov
gs
movsb
and
jo
shlb
mov
sub
dec
mov
pop
pusha
fs
jbe
jl
out
push
sti
fsubs
inc
jmp
fistpl
into
iret
cmp
test
scas
xchg
aaa
in
int
jb
fstl
mov
mov
std
cltd
pop
sub
mov
sub
ljmp
mov
jae
sbbb
leave
ljmp
cmp
stc
pop
mov
jmp
xchg
aas
scas
in
fstpt
hlt
pop
dec
in
mov
clc
jg
jecxz
sub
stc
mov
inc
ret
lods
mov
sti
imulb
out
fistl
cmp
push
push
and
nop
push
lock
lcall
daa
or
adc
mov
out
mov
in
xchg
mov
test
daa
int
mov
fs
adc
lock
loop
outsl
pop
faddl
sub
and
loop
icebp
mov
jo
arpl
push
out
int
scas
and
ret
xchg
ficoms
and
xchg
rcrb
dec
repz
mov
sbb
sbb
pop
sbb
inc
jmp
push
push
push
push
or
flds
in
sti
sbb
shrl
cld
in
mov
cld
pop
jp
fwait
rorl
lods
jmp
fst
add
adc
cmp
nop
xchg
push
adc
pop
mov
xorl
push
add
dec
lret
sahf
std
cmp
clc
insl
loopne
jp
rcl
push
cmp
nop
cmp
arpl
sub
or
subb
out
mov
sub
cmpsb
jne
push
sbb
out
js
sahf
insl
jne
pop
xor
mov
adc
add
inc
dec
pop
xor
fs
dec
mov
call
pop
cmpsb
sahf
mov
mov
fmuls
mov
into
xor
pop
push
jp
test
call
lods
int
repnz
adc
cmp
popf
push
push
cwtl
pop
and
popa
or
pop
leave
adc
xchg
mov
jnp
push
add
sub
mov
mov
lock
jg
nop
sub
pop
sbb
inc
das
or
or
add
imul
scas
cmp
sub
sub
jns
jo
mov
insb
mov
enter
fprem
bound
jl
pop
roll
cwtl
pushf
push
inc
sub
mov
ljmp
mov
mov
call
sub
adc
leave
lods
rorl
xchg
loopne
push
popa
jl
cld
into
xor
in
mov
cld
int
aad
jmp
outsb
inc
sarb
push
mov
cmp
and
jmp
jle
cmp
ljmp
dec
xchg
sub
fbld
mov
jae
jge
fs
je
xchg
ss
lock
mov
std
cmp
nop
push
adc
xlat
aaa
xor
sbb
add
outsb
cmp
adc
mov
xchg
xchg
dec
cmp
jg
mov
addr16
in
insb
movsb
sbb
test
insl
movsl
addr16
ret
cmp
xchg
sti
dec
jg
jo
into
or
or
pop
fidivrl
scas
add
mov
jnp
aam
inc
jmp
sub
ret
out
orl
andb
out
push
aam
shl
mov
repnz
ror
jp
shll
fcomps
mov
arpl
mov
int
and
push
xor
mov
xchg
xchg
std
add
aas
cmp
ret
xor
sbb
fisubrs
xcrypt-ofb
cmpsl
stos
adc
xchg
ud1
daa
dec
mov
inc
cltd
xchg
popf
ret
lds
xor
push
pop
add
dec
comiss
push
sbb
cmp
fldl
cltd
lock
pop
ret
mov
push
add
outsl
xchg
mulb
test
pusha
sbb
loope
out
fcomps
inc
push
jnp
dec
cmp
cltd
xor
test
imul
popf
sti
inc
pop
mov
aam
sub
nop
push
mov
in
xchg
jb
pop
push
jl
mov
jp
repz
iret
or
ret
mov
in
jno
dec
and
bound
sub
testl
mov
dec
add
cld
popf
int
and
mov
jae
dec
mov
lods
or
es
adc
jge
ss
into
push
dec
decl
bsf
test
outsl
adc
jg
xchg
adc
xor
ja
adc
cmpsb
adc
bnd
fimull
es
mov
jmp
adc
out
dec
pop
jmp
into
jne
int3
jmp
pushf
mov
ret
ds
pop
dec
cmpsl
cmp
inc
arpl
inc
and
mov
adc
jno
xor
rcll
sub
jo
push
bswap
sbb
cmp
mov
jle
and
mov
mov
outsb
dec
jge
jo
and
pop
in
mov
notl
mov
sahf
outsb
mov
mov
leave
mov
inc
fstps
loopne
arpl
mov
fildl
push
dec
imul
jb
inc
fwait
xor
stos
xor
iret
dec
xor
mov
jg
push
into
xchg
add
xchg
inc
arpl
arpl
mov
adc
inc
mov
mov
cmpsb
xor
mov
into
lock
mov
in
xor
out
je
jne
mov
mov
mov
sub
xor
mov
inc
xchg
add
imul
xor
and
jle
sub
arpl
xor
pop
push
push
jnp
cwtl
insl
and
mov
xchg
cmp
sbb
ja
sbb
lds
popa
xchg
pop
jne
cmpsb
mov
mov
mov
add
loope
pop
rcll
cmp
or
and
mov
or
in
jns
out
and
cmp
adc
outsl
clc
ds
mov
pop
out
push
xor
adc
and
fildl
jecxz
outsl
cmp
push
and
rcrb
lcall
jno
fdivl
lahf
call
out
data16
mov
xchg
rcrb
popl
pop
lds
mov
mov
shlb
mov
out
mov
imul
mov
fsubrs
mov
dec
push
lahf
lahf
rcll
xor
jmp
outsl
or
xor
and
and
dec
in
dec
fwait
dec
mov
lret
pop
scas
bound
popf
pusha
mov
mov
test
out
leave
mov
xchg
inc
daa
or
mov
test
jo
fmull
enter
test
jle
sahf
jnp
push
adc
or
fsubr
fsubrp
shlb
push
mov
jo
cmc
test
arpl
jnp
sub
shll
shl
mov
jecxz
jnp
inc
cld
add
out
xchg
lahf
repnz
lods
icebp
cmc
je
jae
xor
jmp
sbb
xchg
mov
ljmp
or
jge
push
pop
pusha
adc
out
push
std
pop
rol
mov
pop
mov
dec
call
mov
ficompl
mov
jb
sub
sbb
jae
inc
out
test
dec
push
jecxz
pop
pop
adc
dec
lds
incl
pop
jns
cwtl
hlt
in
out
dec
add
popf
fistpll
push
push
sbb
ss
xchg
xor
popa
dec
dec
mov
and
data16
outsl
pop
int3
adc
lods
or
inc
roll
mov
mov
fcoms
lea
fdivl
sbb
xchg
adc
sub
jbe
test
xchg
xchg
pop
in
mov
push
and
les
mov
cmp
xor
inc
add
out
pop
jecxz
fldenv
jecxz,pt
rcrl
insb
mov
mov
lods
jae
arpl
cld
and
adc
add
cmp
or
sbb
insb
mov
mov
lods
jae
arpl
cld
and
adc
add
cmp
or
sbb
insb
mov
and
subl
inc
in
xor
and
adc
add
cmp
or
sbb
insb
mov
mov
lods
jae
leave
es
pushf
xor
mov
and
dec
inc
pop
push
imul
jbe
add
fcmovnbe
jmp
test
mov
inc
pop
push
imul
adc
leave
vpmullw
in
cmc
mov
cwtl
xchg
test
inc
pop
push
imul
adc
leave
cltd
xchg
pushf
xchg
mov
ljmp
cmp
or
dec
adc
scas
mov
add
repnz
add
adc
movsl
push
cmpsb
fstl
add
sarl
jne
push
sub
lock
xchg
fiadds
call
pop
add
xor
or
pushaw
ja
int3
pop
stc
mov
adc
dec
add
stos
dec
jle
popa
cmpsb
out
jo
cmp
cmp
push
sub
popa
push
adc
push
scas
xor
xor
cmp
cmp
cltd
sbb
sbb
jne
mov
xor
lea
pushf
xchg
sbb
lret
movsl
mov
push
imul
adc
leave
vpmullw
in
cmc
mov
mov
adc
gs
jne
pusha
jbe
inc
arpl
aam
cmpb
fmul
sti
aas
and
jne
imul
mov
mov
nop
jle
cld
xchg
shl
fisubrl
add
das
pop
sbb
dec
sub
adc
leave
vpmullw
in
cmc
mov
mov
push
imul
adc
leave
vpmullw
in
cmc
mov
mov
cmp
fnstenv
cli
jns
cmpsb
ja
sub
dec
movsl
xchg
nop
mov
pop
or
cld
mov
outsb
mov
shr
enter
xchg
add
mov
insb
testb
imulb
mov
xchg
fs
dec
clc
ud2
or
adc
jp
rcrb
sub
push
xchg
mov
mov
popf
xor
mov
pop
mov
iret
mov
inc
mov
push
aam
xor
addb
inc
test
out
xor
jb
out
adc
dec
or
fists
loopne
pop
inc
inc
bound
jmp
pop
data16
push
sbb
ja
jl
shll
mov
call
xchg
lock
pusha
dec
mov
rcr
sub
jno
ficomps
jb
sbb
loopne
into
in
pop
sahf
cmp
add
gs
push
rcrl
in
dec
jmp
adc
es
outsl
jb
aam
pop
lret
movsl
sahf
lcall
adc
jnp
mov
inc
dec
add
pop
jle
insb
cld
lahf
shl
mov
test
xchg
xor
inc
pop
rcrl
imul
xchg
sub
sbb
in
jecxz
mov
or
loop
ljmp
and
xor
pop
dec
ds
fisubl
movhps
repnz
mov
rcrb
ret
imul
adc
cli
aad
in
add
sahf
push
push
scas
mov
push
in
repz
stos
mov
sahf
js
mov
cmp
cmp
mov
imul
and
xor
sbb
push
jo
stc
sub
push
loopne
push
adc
xchg
inc
cmp
repnz
add
mov
push
hlt
mov
mov
dec
xchg
dec
hlt
lahf
les
pushf
loop
pop
rcrb
out
add
ret
popa
or
add
dec
cmp
jg
test
or
pop
inc
shrl
pop
mov
xlat
sahf
inc
adc
mov
jmp
jecxz
push
sub
add
sbb
jne
insl
cld
ficoms
xchg
lods
mov
gs
icebp
dec
xchg
jno
xchg
scas
pop
push
pop
es
daa
and
mov
and
daa
cmp
mov
mov
inc
push
loopne
bound
xchg
repnz
mov
test
sbb
ret
dec
jbe
bound
pop
sahf
mov
xor
shrb
clc
icebp
cld
and
in
out
or
sbb
and
sub
leave
into
inc
pop
shrb
daa
sbb
cmpsb
xchg
loopne
inc
aas
push
lods
or
adc
pop
not
ficoml
and
scas
sbb
insl
mov
shrw
out
clc
push
mov
add
fsubr
pop
aad
fisubrs
in
push
sarb
or
negl
iret
in
cs
xor
mov
adc
cmc
ljmp
loope
mov
mov
add
push
dec
repnz
sbb
mov
jae
xor
aad
cmpsl
push
push
pop
outsl
in
movsl
testb
aam
sub
mov
es
xchg
sub
pushf
dec
and
mov
xor
inc
dec
mov
mov
add
xchg
push
stc
shll
enter
pop
loope,pt
inc
add
sub
imul
in
xor
cwtl
aad
adc
or
in
into
mov
subl
ljmp
insb
xchg
js
jae
inc
add
mov
pop
out
test
push
fwait
mov
imul
ret
push
clc
mov
jb
popf
and
popa
aam
ret
jns
push
arpl
fbstp
repz
push
pop
push
sub
or
enter
jp
imull
jae
or
ja
scas
lods
xchg
pushf
push
cmc
jmp
sub
aas
or
xor
mov
lds
daa
dec
jp
push
push
aam
scas
rorb
out
jnp
push
movsb
mov
or
rcrb
loope
out
push
orb
dec
jle
in
in
stos
outsb
mov
sahf
cli
xor
xchg
test
stc
mov
mov
cmc
mov
dec
int3
out
popa
jae
push
sub
fadd
or
popf
out
jg
push
xchg
mov
cmp
sbb
jge
mov
hlt
dec
lret
in
pop
outsl
or
sahf
push
call
cltd
cmp
lahf
mov
out
jae
jmp
cmp
test
notl
mov
shrl
push
mov
cwtl
xor
rcl
xchg
adc
fdiv
ds
clc
push
and
mov
adc
lret
sbb
mov
add
sbb
mov
test
cmp
leave
out
gs
pop
and
mov
jne
cmpsb
inc
fdivl
idivb
out
stos
lods
jl
leave
jae
inc
push
iret
mov
fstpl
add
inc
out
icebp
mov
out
aad
cmp
inc
lods
mov
int3
cmp
xchg
dec
push
jmp
out
xchg
out
adc
fstpl
xchg
mov
out
mov
out
adc
sbb
in
inc
dec
push
push
int
and
jmp
mov
jle
rdpmc
popa
push
xchg
and
push
outsb
arpl
add
xor
test
sub
lret
aam
pop
lret
xchg
int3
mov
iret
inc
pushf
sbb
xor
sub
pop
ffreep
and
daa
sahf
xchg
aad
lahf
cs
into
push
jae
daa
add
das
enter
aaa
mov
sbb
dec
fnstsw
or
out
cmc
mov
cld
sub
and
adc
loope
inc
jl
rorl
mov
cmp
adc
sbb
cmp
or
notb
dec
loop
in
adc
cltd
push
jb
inc
pop
jb
xchg
add
push
movb
lds
xor
pop
bnd
mov
sub
aas
fsub
mov
lret
outsl
mov
test
les
ljmp
fldcw
fiaddl
in
cmp
inc
pop
ds
mov
stc
xchg
scas
ret
xor
data16
mull
add
out
dec
daa
in
inc
call
xchg
fsubrl
daa
mov
xchg
lahf
pushf
jbe
pop
orb
sahf
or
and
ret
inc
repz
lea
cmp
negb
sub
out
fs
xor
mov
mov
sbbl
mov
icebp
aam
pop
cmp
mov
cmpsb
test
into
dec
add
mov
out
cmpsl
adc
imul
mov
fs
pop
sub
mov
lcall
or
dec
movsb
cltd
gs
push
imul
mov
pushf
sbb
fdivs
and
or
or
and
mov
cmpsl
jp
sub
mov
nop
inc
xchg
and
imul
cwtl
jl
call
loopne
lds
cli
adc
jbe
clc
dec
inc
xchg
sbb
xchg
adc
mov
loopne
fwait
cltd
mov
mov
fidivs
sysexit
sub
xor
dec
dec
sbb
sub
push
adcb
xlat
jae
leave
add
jno
add
push
mov
adc
push
mov
xchg
aad
aaa
lret
cmp
inc
push
ds
jl
cmp
pop
push
pop
pop
inc
test
sub
add
inc
in
or
mov
std
repz
adc
stc
popa
shll
pop
pop
stc
ds
fcoml
insl
cs
jecxz
mov
mov
xchg
cmp
dec
ret
stos
mov
xor
in
aam
test
lcall
mov
iret
int3
jge
ljmp
mov
pop
inc
push
out
js
lcall
sub
inc
push
jbe
xchg
mov
mov
aad
sahf
iret
sub
cltd
ret
jb
movsb
pop
int
push
inc
mov
mov
adc
mov
cmpsb
pop
adc
jae
add
push
jns
roll
outsl
fisubs
stos
arpl
shlb
xor
push
dec
xor
roll
lea
pop
icebp
in
stos
xchg
mov
sub
sub
xchg
cmp
sbb
mov
ret
push
shrl
jge
nop
lock
or
pop
mov
imul
jecxz
and
push
xor
das
cmc
or
mov
or
jnp
fildl
lahf
movsl
sbb
shld
mov
iret
loope
cmp
lcall
sarl
sbb
cmp
xchg
xor
loope
bound
rol
loop
mov
arpl
pop
add
das
iret
pop
shlb
xor
cmp
int3
pop
cmp
in
or
int
or
out
mov
xchg
jmp
jmp
sub
dec
aad
push
dec
adc
in
push
mov
daa
fimull
add
insl
fdiv
das
mov
data16
fisttpl
sti
icebp
sahf
sub
arpl
and
and
insb
inc
mov
mov
ljmp
cmovp
lock
adc
inc
rcrb
inc
lahf
xorb
mov
cmp
vpxor
rcrb
fs
sub
aas
jmp
in
mov
jo
and
rorl
enter
inc
jmp
enter
in
mov
in
or
arpl
jo
xor
and
in
and
lcall
mov
jle
stc
pop
arpl
or
aam
insb
rcr
adc
cmp
jecxz
mov
sbb
fdivrl
iret
pop
mov
cmpsl
mov
mov
dec
addps
pop
pop
pop
or
and
mov
sbb
sbb
xchg
loopne
das
lret
mov
fst
cli
pop
jg
push
or
test
jne
pop
popf
imul
das
push
adcb
push
ret
pop
fisttpl
push
mov
mov
dec
sbb
fs
add
cld
pop
lret
xchg
data16
sbb
popa
loop
lret
scas
mov
addl
iret
loop
test
xorb
mov
into
repnz
gs
scas
cmp
daa
jnp
and
xchg
rol
sahf
xchg
lods
sbb
sub
mov
outsl
bound
push
mov
out
andl
pop
cmp
out
push
mov
mov
pop
and
pop
xor
dec
aaa
or
or
mov
sub
mov
add
and
mov
sbb
push
pop
mov
jmp
shl
cmpsl
mov
movsb
clc
jnp
mov
adc
adc
lods
push
lcall
mov
loopne
xchg
loope
adc
inc
jle
xor
mov
stc
lods
jnp
fdivrs
push
jp
xchg
fcoms
les
fisubs
add
mov
outsb
xchg
pop
addr16
and
jnp
sahf
dec
dec
push
mov
xor
inc
jp
mov
mov
aam
pop
sub
ja
mov
mov
mov
es
clc
out
call
in
out
adc
adc
sub
dec
fsubrs
adc
sbb
add
scas
sbb
pop
jp
gs
pop
inc
and
imull
pop
jno
arpl
std
or
xchg
add
cltd
push
pop
sbb
aas
push
pop
push
pop
push
push
mov
lods
in
pop
movb
pop
lods
insl
mov
pusha
xor
cmpsb
xchg
and
sbb
adc
mov
mov
sbb
lods
mov
in
das
xchg
aam
cmp
mov
or
sarb
stos
inc
mov
xor
stc
fwait
xor
les
dec
dec
pop
sbb
sub
pop
jmp
int
insb
arpl
jp
jb
out
enter
sahf
push
dec
push
test
sbb
cmp
cwtl
pop
jmp
inc
dec
or
pop
fisttpll
or
xchg
testl
idivl
add
cmpsb
cmc
iret
cmc
adc
in
fidivrs
xlat
and
inc
out
inc
cmp
icebp
cmp
std
xchg
pop
dec
int
dec
push
push
mov
adc
adc
dec
pusha
notl
fwait
add
xchg
loop
mov
rep
js
pop
dec
sub
adc
loopne
mov
enter
lfs
in
and
jp
or
jb
mov
imul
outsl
in
xchg
mov
cmp
add
xchg
pop
leave
mov
movsl
insl
mov
test
jmp
mov
mov
push
dec
ror
in
mov
shl
mov
fwait
dec
stc
cmp
fs
int
or
push
cli
sbb
aad
lahf
stos
fldt
or
negb
ret
fldcw
sbb
xor
sub
sbb
and
stos
arpl
xor
lock
jle
inc
add
mov
jne
lea
icebp
xchg
aam
clc
jne
fisttpl
aam
dec
or
fcompl
jmp
dec
sub
jl
lret
data16
add
andl
scas
mov
ds
push
push
pop
test
cmp
mov
mov
ljmp
jno
orb
mov
cltd
es
sub
inc
repz
in
fimull
pop
pushf
push
leave
das
mov
je
or
mov
lods
iret
inc
cli
inc
movsb
or
xor
lods
mov
jo
pop
stos
in
fistpl
xchg
cwtl
leave
enter
mov
inc
addr16
clc
push
pushf
das
and
sti
fwait
aas
push
push
in
in
nop
mov
or
test
xchg
mull
fisubrl
cmp
ficoms
xchg
pushf
push
imul
nop
aas
stos
jp
mov
imul
mov
jmp
mov
aaa
dec
dec
mov
int3
push
sub
mov
cltd
outsl
rolb
mov
test
bound
sub
icebp
stos
mov
push
movb
fs
loop
or
mov
or
sbb
mov
test
push
jns
les
es
sub
adc
mov
fnstcw
pusha
test
mov
inc
fidivl
push
pop
stos
dec
mov
push
mov
test
fdiv
ret
test
inc
push
mov
test
dec
sub
pusha
and
jns
das
mov
outsb
fisubrl
fcoml
dec
mov
fsubrs
pop
subb
gs
dec
pop
inc
mov
test
imul
test
lcall
xchg
jp
loope
sbb
shlb
jo
inc
movsl
testl
popa
sub
push
dec
sbb
dec
push
dec
in
in
xor
add
lret
shrl
add
out
and
jns
add
inc
mov
cmp
testl
push
enter
xchg
mov
movsl
dec
icebp
adc
out
fs
cmpl
sbb
jno
enter
fidivl
adc
imul
mov
ror
in
add
mov
addb
jg
mov
and
addr16
sbb
sbb
ror
sub
mov
adc
pushf
xor
xor
xchg
mov
xchg
mov
sti
and
sahf
iret
cmp
adc
pop
mov
imul
mov
push
fs
jne
bound
loopne
jne
mov
loop
push
fcmovu
push
icebp
adc
cld
out
jno
xlat
add
adcl
dec
mov
out
rorb
add
xchg
push
stc
or
mov
add
push
xchg
jecxz
mov
imul
mov
js
gs
jg
dec
hlt
add
notl
push
and
adc
frstpm(287
lea
popa
jnp
sub
not
sbb
inc
xchg
jbe
ret
mov
add
clc
cmp
jle
aas
jb
xor
in
pusha
shlb
add
test
testl
or
nop
push
sub
xchg
sahf
sub
ljmp
popf
movsl
pop
js
jmp
fldl
dec
xchg
in
daa
jno
rcrl
adc
or
mov
movsb
pop
pop
iret
pop
das
mov
lret
es
pop
add
pop
mov
dec
inc
aaa
lods
mov
movsb
sbb
dec
mov
mov
xor
or
dec
sar
call
push
jg
sti
xchg
icebp
xchg
sbb
dec
jg
aam
js
adc
ja
push
dec
push
mov
daa
cmp
sbb
xchg
mov
les
adc
call
push
sbb
adc
cmp
xor
or
push
pop
and
cs
pop
sbb
cmpsl
push
pop
out
xchg
pushf
or
or
push
add
pop
adc
jbe
jae
push
sub
xchg
push
call
push
test
ds
push
lret
adc
clc
fidivs
and
mov
in
inc
jge
add
or
xor
pop
mov
icebp
jo
cmp
and
mov
icebp
out
jp
shrd
mov
mov
jns
jbe
jb
testl
xor
cmp
mov
xchg
push
push
fistps
jno
jmp
lods
outsl
xchg
and
jb
scas
pop
cmpsb
mov
lret
push
mov
sub
push
loope
cli
mov
sbb
in
hlt
and
into
rcrl
mov
dec
pop
out
fwait
sub
mov
hlt
xchg
lods
mov
imulb
jp
push
lret
shll
out
xor
dec
rcr
and
or
cltd
push
loop
into
dec
nop
sub
cmpsl
adc
fdivrl
or
leave
pop
dec
loop
cmp
daa
aad
pop
ljmp
push
mov
mov
jno
sarl
daa
ss
mov
jno
pushf
sub
adc
lret
outsb
pop
mov
push
sti
pop
in
mov
data16
and
mov
sahf
fmul
mov
push
imul
pushf
in
mov
push
stos
aad
ret
and
pop
adc
ljmp
xor
lods
and
rorl
mov
pop
aaa
pop
push
fwait
popf
adc
lods
add
addb
and
out
outsb
adc
inc
inc
sub
imul
sub
mov
scas
jle
repz
xor
push
xchg
loopne
sub
loope
mov
jecxz
xchg
and
mov
sub
inc
add
out
push
jg
sbb
lds
cmc
jmp
les
or
lahf
cwtl
push
adc
jae
dec
cmp
ret
add
push
movsl
cmp
pop
cmova
sub
movsl
loope
and
jbe
mov
add
jp
rcl
cltd
xor
jl
adc
gs
cmp
pusha
std
ja
popa
sub
call
int
in
xlat
mov
loopne,pt
mov
sbb
cmp
inc
push
decb
xchg
fisubl
int
jp
sub
nop
push
or
mov
xor
push
in
or
aas
imul
push
leave
cmp
mov
into
mov
cmp
cmc
jnp
xor
adc
inc
adc
cld
or
aad
xor
push
mov
shl
sbbl
jbe
fisubrl
cmp
sbb
or
cmp
pop
call
fsubrl
jae
xchg
int3
std
jnp
pop
push
leave
adc
fucom
mov
inc
inc
cmpsb
mov
leave
stc
addb
imulb
jnp
push
dec
sub
xor
cwtl
into
dec
xor
mov
and
jbe
fcoms
xor
daa
sub
popf
inc
mov
jecxz
sbb
mov
scas
xlat
mov
stc
out
pop
js
ljmp
mov
push
out
fistpll
shrb
xchg
cwtl
imul
pop
stos
loope
sbb
jne
add
ds
push
enter
jp
bound
popw
push
adc
xor
dec
test
pop
or
adc
call
and
test
sub
xlat
sbb
inc
sub
xor
pop
mov
aaa
mov
aas
fildl
xor
mov
or
in
lds
into
pop
insl
or
fwait
aam
jl
lcall
cmpsl
cli
cmp
mov
cmp
inc
push
das
cli
xchg
xchg
popf
nop
popl
mov
sub
gs
mov
mov
or
lods
add
mov
ja
jmp
xchg
ja
je
dec
pusha
inc
mov
inc
lcall
and
loopne
sbb
mov
das
cld
pusha
mov
ds
cmp
mov
jno
fcoms
fsubrs
imul
adc
xchg
jp
lds
cwtl
leave
cltd
xchg
lock
xchg
add
jns
or
cmp
jmp
test
mov
inc
pop
push
imul
adc
leave
vpmullw
in
cmc
mov
mov
push
imul
adc
enter
jmp
test
mov
inc
pop
push
imul
adc
lds
jg
in
cmp
adc
pop
inc
dec
cmp
or
xor
inc
fstpt
or
cmp
dec
lret
stos
sub
jp
push
pop
lret
dec
fstpt
or
jnp
dec
lret
stos
sub
jp
push
pop
lret
dec
fstpt
jnp
sbb
cmp
pop
gs
dec
iret
sbb
data16
sub
mov
outsb
adc
dec
dec
mov
ror
jb
mov
test
push
movsb
mov
inc
xchg
das
pop
or
add
dec
inc
cmpsl
push
and
jl
div
mov
adc
mov
push
dec
fldt
mov
pop
cmp
jo
or
fbld
dec
mov
sbb
cs
loopne
add
mov
jp
ss
pop
cmc
and
push
fnstenv
lea
cld
cmp
div
sub
dec
lret
or
cs
cwtl
clc
xlat
add
in
aam
sub
mov
lahf
pop
dec
pop
imulb
or
pop
lret
dec
fstpt
or
jnp
dec
lret
pop
push
jp
sbb
mov
gs
push
ljmp
ljmp
jp
das
aad
movsb
sbb
fildll
push
cwtl
pop
mov
add
adc
ds
iret
jne
out
xchg
pop
lret
dec
fstpt
or
jnp
dec
lret
stos
sub
jp
push
pop
lret
dec
fstpt
or
jnp
dec
lret
stos
fxsave
cs
movsl
int
fwait
lcall
inc
fwait
sub
mov
sti
ds
and
push
fisttpl
push
cwtl
aad
jns
jne
or
and
int3
lret
decb
enter
inc
inc
ja
rolb
into
call
push
add
inc
das
shl
test
sub
push
idiv
fmull
leave
cmpsb
push
into
out
mul
out
lret
sub
loopne
or
test
push
div
and
fcmovnbe
and
sub
mov
inc
push
or
mov
sub
mov
das
mov
jns
enter
inc
outsl
stos
push
pop
sub
xchg
aam
fwait
push
icebp
adc
insl
loope
cmpb
negl
pop
sub
mov
into
push
jne
int
sbb
pushf
jb
mov
ja
inc
std
xchg
or
jne
or
iret
idiv
push
ljmp
data16
pop
jge
sub
fldcw
loopne
cmp
xor
or
push
jecxz
xchg
leave
lahf
and
notl
and
xchg
icebp
mov
inc
imul
test
test
mov
insb
out
add
rcrb
test
call
lea
fstps
mov
mov
adc
xchg
ja
out
sbb
xor
lcall
sbb
dec
pop
dec
fucom
add
rorl
roll
fdivl
and
loopne
lods
dec
cmp
sbb
xchg
cmp
mov
pusha
push
pop
push
testl
lcall
insb
jg
xor
insb
add
popa
das
or
data16
push
int
dec
mov
out
in
sub
scas
fwait
fs
fs
mov
shrb
je
xchg
movsl
cmp
sub
jb
sbb
push
test
aaa
sub
xor
push
push
fcmovnbe
cmp
imul
push
mov
or
mov
or
repz
loop
movsl
mull
pop
pop
fmuls
ret
jp
adc
jno
xchg
sub
call
adc
inc
fwait
mov
mov
ffree
mov
xchg
js
das
in
mov
adc
jns
jae
push
cmp
stc
in
ret
js
jno
rolb
mov
dec
in
fdivp
push
mov
jnp
jns
add
mov
insb
add
dec
mov
leave
push
popa
int3
loop
cmp
sub
dec
mov
stos
jmp
int3
inc
jno
cmp
je
insl
cmpl
cmc
aad
add
fmull
inc
add
fwait
mov
add
imulb
les
fidivs
add
dec
cmc
daa
mov
mov
push
sub
mov
cmp
aaa
or
mov
loope
mov
mov
sbb
cmp
popf
enter
hlt
jno
xor
into
jno
and
pop
lods
xchg
sahf
je
jne
sub
les
out
popa
mov
or
adc
push
xchg
cmp
fs
aas
push
jb
jecxz
xor
mov
jbe
mov
std
or
push
sub
repnz
mov
mov
push
das
movsl
lock
out
pop
loope
adc
xchg
stos
and
cmpsb
mov
ja
push
inc
stc
stos
jno
rolb
mov
add
mov
orl
xchg
loope
or
jbe
iret
sub
popf
lds
mov
and
mov
or
fidivl
std
inc
shlb
int3
insb
ret
sbbb
fwait
sbbb
aas
xchg
mov
repz
addr16
mov
mov
fistpl
addr16
pop
lea
loop
aas
out
in
rcr
icebp
or
pusha
shrl
push
fdivrp
jmp
dec
cli
adc
pusha
cmc
cmp
pop
call
push
aad
aam
in
jns
xchg
les
pop
loop
inc
inc
ret
inc
push
arpl
xlat
add
call
insl
std
push
cmc
out
sar
cmc
cmc
out
fnstcw
mov
add
jge
aas
sbb
cmc
push
pop
xchg
ljmp
jl
xor
pop
and
pop
xchg
pop
xchg
xchg
movsl
add
std
popf
mov
fldl
loopne
add
xchg
sub
sbb
xchg
push
sub
push
cmp
out
xchg
mov
push
aam
cli
pusha
xchg
xchg
add
cld
add
mov
cltd
bound
rcrl
sub
cmpsl
xchg
adc
sbb
mov
and
addl
sub
inc
into
mov
cmp
and
xor
lods
ret
ret
xchg
mov
push
add
sbb
lock
fimuls
xor
out
int3
mov
jg
push
push
xchg
xchg
xchg
dec
or
cmp
stos
mov
outsb
push
sbb
ret
xchg
xor
loope
inc
rclb
cld
sarb
movl
xchg
inc
call
notb
fsts
out
mov
out
roll
les
rorl
xor
inc
dec
mov
icebp
ds
cmpsb
mov
mov
xchg
inc
fldt
pop
dec
nop
imulb
cmp
push
jge
mov
repnz
push
pusha
xchg
cltd
mov
in
std
xchg
jl
push
lahf
pop
jo
xor
add
fmull
xlat
cli
les
xor
mov
dec
cmp
add
mov
mov
push
push
ret
jge
inc
icebp
les
incl
imul
push
mov
xor
push
jbe
insb
loopne
pop
ret
dec
pop
ds
push
cs
int
cs
scas
add
cmp
pop
rcl
add
cmp
xlat
popf
insl
ja
push
mov
mov
mov
sub
out
data16
and
test
sbb
lahf
pop
mov
inc
push
or
push
cmp
pop
add
test
fiaddl
and
xchg
fwait
jmp
int3
in
fwait
aad
dec
sbb
movsb
fnsave
jb
pushf
pop
mov
xchg
xor
sub
mov
sbb
mov
loop
xchg
mov
imul
bound
aam
adc
pop
call
fistpl
pop
outsb
push
xchg
pop
xchg
adc
divl
cmpsl
int
iret
pop
lea
hlt
addl
or
mov
mov
mov
pop
inc
mov
sbb
pop
jne
jmp
adc
adc
push
or
popf
jl
xchg
xor
jbe
mov
or
pop
dec
fadds
gs
in
mov
imul
cwtl
push
add
add
ja
dec
test
sbb
sbb
dec
data16
jb
test
js
xor
out
test
xor
mov
std
aas
sbb
cld
adc
cmpl
push
popa
shll
loope
pop
mov
rcrb
xor
es
cmp
mov
leave
js
cmpsl
test
cmp
cmp
sti
and
pop
lret
xor
testb
jo
mov
shll
xchg
mov
pop
push
mov
pop
or
stc
cmp
sbb
shl
add
cmp
inc
data16
xchg
fisubs
and
imul
adc
aad
jno
jno
and
leave
scas
and
adcl
add
push
jp
es
xchg
repnz
cmp
and
push
push
push
int
or
sub
cmc
mov
in
mov
xchg
mov
mull
imul
fmuls
fists
stos
push
or
test
jbe
lods
xor
adc
adc
mov
mov
fnstcw
js
movsb
jo
mov
or
mov
mov
popf
mov
sbb
and
jne
mov
and
pop
fisubl
add
aam
mov
in
adc
insl
std
or
push
insl
cmp
mov
and
pandn
pop
sbb
xlat
outsb
shlb
popa
imul
lret
jo
movsl
lea
dec
dec
dec
insl
std
std
mov
jmp
pop
es
xlat
enter
push
addl
ds
xchg
test
xchg
cmc
gs
pop
dec
shl
add
mov
mov
out
ret
add
inc
push
in
cmp
movsb
ds
mov
int3
mov
bound
gs
test
mov
inc
sub
mov
jnp
int
fcoml
pop
adc
dec
lock
and
cmp
shlb
add
mov
pop
repnz
jnp
ret
mov
pop
mov
jbe
jno
xchg
jo
push
ret
shrl
sub
fcoms
nop
mov
aaa
test
jne
xchg
pop
lods
mov
add
xchg
push
mull
incl
fbstp
pop
xchg
push
jecxz
or
sbb
sbb
sub
xor
xchg
sbb
ljmp
movsl
ljmp
icebp
into
mov
lock
ss
test
mov
fldcw
cmp
and
lods
into
test
fstps
outsl
insl
outsl
movsl
jae
mov
clc
xor
stc
shlb
in
inc
stos
jb
fldl
addr16
mov
cmp
ret
ss
lods
sub
out
xorb
das
push
loopne
push
aam
xrelease
mov
pop
mov
sub
jle
pop
sub
xchg
pop
test
test
fisubl
xor
ror
mov
xor
and
cltd
inc
jns
insl
and
mov
into
cli
lods
test
jp,pt
aaa
mov
popa
cmp
push
xor
movsl
pop
push
or
xchg
lcall
scas
lahf
bound
push
jl
adc
jge
sub
sti
dec
pop
adcl
adc
xor
adc
cwtl
roll
mov
je
dec
cs
stc
rorb
pop
sahf
mov
add
or
jne
cmp
jne
addl
xchg
xchg
out
jge
push
ljmp
sbb
cmc
lahf
dec
dec
test
mov
mov
ret
ret
int
add
jo
add
lea
sti
push
aam
negb
insb
repz
xchg
cmp
mov
fistpl
push
push
cmpsl
and
fldl
add
xchg
fisttps
mov
rolb
ljmp
movb
pop
sub
mov
inc
fisttpl
pop
fadds
test
mov
std
lret
add
into
stos
push
adc
or
mov
push
stos
test
xlat
sbb
mov
mov
dec
scas
out
mov
dec
add
rorb
sbb
faddl
leave
jno
aad
mov
mov
adc
xor
push
xchg
xchg
jo
adc
aad
cmp
push
xor
adc
fldt
ret
sub
std
xchg
add
ss
icebp
subl
jg
jno
fsubrs
jno
push
xchg
outsl
cmp
cltd
lret
retw
pop
rcrl
bound
cmpsb
dec
out
mov
dec
js
fiaddl
jbe
pop
jecxz
lret
call
aad
jns
mov
inc
stc
ficoms
xchg
jbe
sahf
mov
mov
js
mov
jmp
sbb
cmp
sub
or
roll
imul
into
xchg
aaa
jecxz
test
ret
cltd
xchg
in
sbb
push
setns
inc
add
jnp
dec
add
adc
mov
inc
pop
mov
lods
adc
adc
call
jmp
pop
mov
rclb
jp
xorb
sub
mov
out
cmp
test
in
and
push
sahf
push
rcr
mov
pushf
aas
sar
and
in
pop
push
ljmp
icebp
pop
out
push
inc
fmull
cltd
out
xchg
mov
jbe
jns
xor
outsb
push
int
ret
mov
and
setns
movsb
sbb
inc
mov
ss
pusha
nop
xor
cmpb
stos
dec
mov
test
push
daa
pop
dec
sbb
push
test
loop
push
and
pop
leave
and
lret
aad
jno
and
mov
je
pop
or
test
lds
add
xchg
or
xor
dec
pop
rclb
add
or
push
mov
orl
or
popa
mov
test
sbb
mov
dec
add
test
add
sub
or
int
lret
xor
lods
xchg
or
pop
inc
and
out
inc
push
cmp
scas
mov
ror
aad
push
sub
fs
xchg
test
cli
xchg
pop
decl
sbb
test
vpaddusb
fldenv
pop
jns
xchg
cld
pop
fstps
das
and
ret
fwait
test
aam
jp
pusha
shl
in
ds
mov
jnp
shlb
pushf
dec
lcall
scas
jb
or
jo
xchg
xchg
negl
lds
sbb
rcrb
dec
xor
sub
ljmp
movsl
sub
xor
sub
dec
pop
insl
xor
into
daa
push
pusha
jmp
clc
enter
push
cs
xchg
xchg
adc
dec
xchg
cmpl
je
mov
cmc
sbb
jnp
jns
push
mov
xchg
jge
inc
adc
xor
xchg
out
dec
test
xor
in
cmpsb
xor
sbb
sub
aad
and
test
pusha
xchg
pmulhw
xchg
sti
fdivr
xchg
adc
pop
adc
ss
jle
fs
pop
sbb
clc
inc
ret
pop
adc
adc
aam
pop
out
and
mov
rcll
adc
je
cmp
movsl
mov
enter
dec
ficomps
pop
sub
lds
ds
fnstcw
and
sub
nop
aad
mov
jo
mov
xor
xor
nop
adc
mov
xor
addr16
mov
jmp
and
rcrb
pusha
pop
dec
je
xor
in
clc
pop
push
sbb
nop
or
test
lock
fwait
mov
outsl
cltd
stos
xor
out
push
xchg
scas
mov
imulb
call
pop
mov
outsl
or
pop
jbe
push
ss
adc
dec
push
mov
cmp
mov
xor
imul
mov
rcl
loop
mov
loop
push
sub
imul
out
lods
sbb
sbb
iret
inc
and
dec
shlb
xchg
pusha
pop
in
cltd
in
imul
mov
cmp
outsb
xor
sub
leave
dec
bound
movsl
cs
nop
pop
enter
mov
sti
js
icebp
bound
sahf
loopne
push
push
mov
mov
mov
mov
inc
dec
push
scas
pop
push
mov
ljmp
mov
lods
sarb
cmp
mov
imul
push
js
dec
mov
or
lock
push
ja
push
das
jl
data16
jp
xor
lea
or
pop
adc
repz
dec
lods
sub
loope
mov
adc
mov
inc
mov
xchg
sti
test
xorb
sahf
mov
cmp
enter
lcall
fs
mov
pushf
dec
jns
push
mov
cmp
mov
cld
bound
jle
jnp
test
jns
shll
aaa
aad
mov
push
out
pop
das
mov
neg
iret
and
clc
pop
add
lret
sahf
into
sarb
sub
mov
pusha
inc
push
sbb
jg
jge
mov
add
add
sbb
dec
mov
data16
adc
jp
clc
inc
fisubrl
cli
int
or
jno
rorb
inc
jmp
xchg
jb
scas
push
leave
push
mov
ja
mov
add
cmp
and
and
pop
push
lock
imul
mov
hlt
jge
in
out
sarl
lds
ss
pop
mov
in
push
mov
sbb
dec
lods
daa
pop
pop
pop
mov
pop
push
out
dec
push
bts
mov
mov
and
jb
adc
push
hlt
inc
add
mov
or
les
lret
dec
testb
test
mov
mov
push
cmp
ss
inc
lods
mov
mov
pop
ficompl
scas
xor
jle
adc
sub
mov
das
adc
mov
sbb
fisubl
xchg
jno
out
dec
or
push
stos
jmp
mov
andl
test
inc
insl
fwait
pop
mov
dec
into
inc
xor
imul
push
sub
adc
insb
add
movsb
dec
shrl
cmpsb
into
jne
sub
leave
and
adc
cld
xlat
insl
jne
mov
fimuls
imul
xor
rclb
mov
push
imul
adc
mov
lret
adcl
ljmp
push
fdivr
cmpl
push
repnz
and
adc
loop
push
loope
shll
add
lret
jp
mov
push
xchg
loope
pop
scas
lea
sbb
ds
jbe
push
lock
mov
movsl
out
repnz
jnp
push
add
cmp
dec
stos
and
int3
inc
sbb
push
pop
adc
dec
xor
in
dec
inc
scas
int3
pusha
add
lcall
and
adc
sbb
sub
sbb
xchg
mov
add
xor
std
mov
shll
call
repz
cmpsb
gs
test
or
mov
inc
pop
pusha
mov
data16
ds
cwtl
in
jno
or
aad
and
cmc
sub
mov
mov
inc
add
push
dec
sub
sub
and
or
ret
idivb
iret
adc
lds
and
into
cmp
mov
mov
xchg
xchg
lock
mov
dec
mov
aas
imul
push
call
mov
mov
ja
sbb
out
add
or
sahf
jnp
mov
sbb
push
adc
inc
mov
imul
push
jge
xchg
and
cwtl
loope
xor
fsts
outsb
mov
inc
mov
jp
arpl
enter
pop
pop
fsubl
sub
jge
shlb
jnp
subl
or
lods
push
xchg
in
jge
push
sub
and
cmp
cli
out
lret
add
pop
dec
mov
xchg
xor
cld
aam
in
leave
sbb
mov
mov
pop
mov
cs
out
xchg
xor
clc
aaa
jb
pusha
jbe
mov
sbb
mov
jnp
arpl
arpl
pushf
push
lds
xchg
xchg
lret
in
les
add
mov
adc
pop
aam
lds
ret
pop
loop
jl
mov
mov
jge
inc
sbb
roll
mov
xchg
dec
gs
mov
aad
mov
mov
pop
mov
push
adcb
shll
jecxz
cmp
fwait
pop
jne
push
pop
mov
pop
add
jp
jae
icebp
xchg
and
pop
lahf
dec
push
xor
cmp
popf
push
clc
xchg
sbb
dec
push
jo
ret
scas
cmpl
cmp
sbb
pop
test
or
iret
mov
adc
ror
and
xor
mov
je
sbb
in
xchg
mov
inc
fiadds
push
addr16
sub
fidivrs
fwait
std
stos
and
imul
mov
mov
sbb
lea
lcall
sub
sbb
popf
mov
imul
adc
or
out
adc
jecxz
push
mov
or
or
cmp
loopne
push
mov
sub
mov
mov
fdivrl
jge
fiaddl
cld
sbb
fmul
xor
cmpb
insb
subl
lea
jnp
xchg
fmulp
mov
fs
pushf
ds
popf
aam
sarb
je
notl
push
and
les
xchg
aas
lods
jns
cmp
push
add
daa
orl
je
fstl
mov
or
stos
arpl
and
aam
and
push
cli
lds
in
adc
or
daa
std
stos
inc
jns
sub
jae
sub
arpl
cwtl
shl
inc
adc
or
dec
inc
xadd
rcr
and
shll
sub
pop
push
in
loope
adc
sub
adcl
adc
sub
sub
fwait
fs
dec
aaa
lahf
xor
loop
and
stos
ret
ret
mov
push
fldt
cli
int3
xchg
adc
test
inc
push
int3
xlat
loopne
jp
clc
pop
inc
scas
sub
sub
mov
adc
mov
jne
or
mov
sbb
mov
fwait
mov
sbb
sbb
push
pop
lret
dec
fstpt
or
jnp
dec
lret
stos
sub
jp
push
pop
lret
dec
fstpt
or
jnp
dec
lret
scas
stos
mov
cli
jmp
sti
pop
lret
mov
or
jnp
dec
lret
stos
sub
jp
push
pop
dec
dec
and
aam
xchg
xor
mov
lcall
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
mov
mov
xor
or
out
lock
rclb
and
xor
pusha
push
push
pusha
push
jo
andb
lock
shl
rolb
add
xor
pusha
push
push
and
or
push
nop
add
pop
mov
cld
sub
push
shr
filds
jae
jg
inc
sbb
adc
add
sbb
fiadds
jmp
pop
or
jmp
ja
adc
xor
and
pop
adcl
shll
mov
push
inc
xchg
dec
cld
and
popa
mov
xchg
in
xchg
sahf
cmp
repz
lea
xchg
add
pusha
and
pusha
insb
inc
enter
insb
or
shl
das
sbb
rdtsc
jmp
inc
xchg
adc
pusha
scas
push
mov
dec
xchg
lods
js
repz
xchg
pop
call
mov
xor
jno
dec
inc
cmp
mov
xchg
push
das
mov
and
cltd
fcomip
sub
inc
xor
jmp
mulb
and
mov
sarb
data16
xchg
js
insb
push
bound
push
rclb
lahf
mov
mov
xor
push
jne
gs
add
push
and
and
shl
shl
cltd
scas
test
and
gs
adc
push
or
nopl
add
sbb
int3
xlat
icebp
lock
mov
loopne
lock
and
adc
add
jo
pusha
push
push
pusha
inc
jo
andb
lock
shl
shl
add
adc
and
xor
pusha
push
push
pusha
inc
jo
addb
push
add
aas
pop
or
mov
rcl
jae
sub
mov
out
inc
es
frndint
dec
mov
xor
mov
out
enter
mov
fisubrl
mov
add
mov
fnstenv
and
mov
icebp
rcrl
fdivs
and
push
add
sarl
ficoml
lret
push
mov
pop
pop
or
lock
call
test
int3
daa
je
jmp
out
mulb
pop
mov
enter
jb
cvtps2pi
cmpsl
add
lcall
sub
push
fs
xor
je
add
sub
sub
and
mov
mov
std
ljmp
sti
popa
jnp
lahf
inc
adc
fildl
sbb
push
cltd
and
sub
push
inc
push
movsl
xchg
xchg
or
jns
push
pushf
loopne
in
xchg
aad
inc
stos
jb
xchg
xchg
aad
add
stc
leave
cltd
xchg
imul
xchg
push
pop
stc
or
add
pop
enter
es
adc
shll
or
push
jp
sahf
xor
enter
jnp
cmp
test
jo
fcmovbe
out
mov
mov
cld
ds
push
inc
loope
cmc
shl
andb
hlt
push
test
rcr
push
bsf
hlt
xor
cmp
faddp
mov
xor
and
sbb
cwtl
clc
xorl
ss
icebp
or
push
cmp
add
loop
or
ret
enter
inc
xchg
sbb
jge
jne
and
xchg
dec
jb
pop
inc
xor
loope
dec
les
fildll
jecxz
ret
aas
push
sbb
cli
pop
push
lea
mulb
sbb
jae
sahf
loope
sub
pop
mov
pop
scas
xor
push
loop
sbb
js
dec
out
pop
cs
bnd
mov
mov
nop
pop
mov
hlt
out
int3
test
and
xchg
fwait
push
xor
xchg
ljmp
sar
fsubrp
add
xor
adc
out
jne
and
pop
adc
add
das
inc
sub
insl
adc
out
lahf
gs
jl
mov
jecxz
ret
insb
sub
and
mov
push
fistl
nop
mov
aaa
inc
roll
lea
shlb
frstor
popf
sub
lahf
popf
mov
ficomps
mov
movsl
and
push
adc
and
cli
sbb
cmp
aam
push
int
dec
std
xor
loope
pop
fnsave
js
sub
cmc
in
xor
in
pop
adc
pop
out
fwait
cmp
pop
sbbl
das
xchg
int3
and
pop
dec
pop
inc
addr16
mov
in
mov
adc
orl
or
pop
rcrl
insb
and
sub
jmp
push
das
daa
mov
cmp
fildl
cwtl
jne
dec
test
lds
sbb
jnp
inc
push
loope
sbb
push
push
push
inc
sub
add
sbb
push
sarb
mov
pop
je
mov
cmp
or
jns
iret
fldcw
loopne
cmp
sti
lret
pop
xor
fbld
dec
fadds
or
dec
test
sbb
outsb
sahf
xorb
dec
negl
loope
add
outsl
mov
into
adc
push
push
xor
mov
jns
incb
xor
cwtl
popa
repnz
lret
mov
fsubrl
fs
inc
ret
adc
ss
dec
imul
xor
cmp
addr16
dec
inc
push
inc
popa
enter
insb
lock
fistps
test
jle
push
fs
shll
inc
das
or
cmpsb
dec
lea
xchg
cmp
sbb
inc
and
push
out
fisubs
aaa
jmp
roll
push
push
lods
mov
cmp
lcall
lods
insl
test
ficoml
cmp
xor
dec
adc
std
mov
add
xchg
inc
or
test
mov
loop
jns
pop
test
pop
jb
xchg
push
push
mov
or
dec
and
insb
mov
test
mov
and
outsl
int3
push
daa
lret
jb
mov
mov
add
sbb
movsb
test
cmp
ljmp
xor
cwtl
inc
arpl
pop
test
jmp
fstl
xlat
dec
cli
iret
pop
push
lock
push
xor
cs
mov
or
dec
cli
loop
out
cmp
test
dec
sbb
stc
mov
daa
sti
add
and
outsl
iret
push
jnp
and
pop
add
cmp
mov
jb
jecxz
jb
insb
jmp
xor
mov
add
push
imul
or
xor
icebp
lock
mov
andb
jle
mov
mov
int
paddd
rorb
sbb
push
or
arpl
ja
xchg
in
and
xor
xchg
adc
push
push
aam
sbb
pop
cmp
sub
xlat
push
cmc
mov
dec
ja
push
mov
dec
and
addr16
sbb
test
dec
adc
pop
mov
mov
xor
int3
cmp
pop
sub
mov
pop
dec
sti
scas
daa
xchg
xchg
jge
dec
shr
sti
fcomi
jp
pop
jecxz
pop
dec
mov
mov
addr16
loope
mov
movsl
test
jle
pop
cmpsb
mov
adc
inc
mov
repnz
lods
fisubs
ret
sub
out
fldl
cmp
pop
cmp
and
or
cmp
xor
add
loopne
inc
test
xor
hlt
mov
jno
push
pop
adcl
push
xchg
xchg
lock
daa
imul
or
aam
push
mov
negl
in
or
lret
fdivrl
dec
sub
enter
popa
pop
addr16
mov
insb
dec
push
inc
cmp
xor
fsubr
add
xchg
pushf
dec
mov
or
sbb
dec
ja
fs
call
mov
sti
mov
movsb
ds
mov
jnp
lea
repnz
in
or
dec
lds
add
and
jo
sub
xor
dec
or
push
fistl
jp
dec
cmp
push
pop
jo
and
jl
arpl
mov
xchg
in
dec
sub
add
cwtl
je
outsb
outsb
stos
lret
dec
in
xchg
dec
mov
repz
movsb
pop
ror
push
enter
pop
add
lahf
ljmp
sahf
sbb
add
int
mov
sarl
std
and
jle
ss
sti
je
stos
dec
push
mov
mov
lods
sub
xchg
out
sub
and
cmc
lock
divl
into
jge
push
cmp
mov
sub
xchg
addl
pushf
or
or
in
inc
roll
ja
jmp
cmovae
div
imul
lds
mov
fs
xchg
sub
pop
xchg
mov
or
je
jnp
rclb
dec
addb
call
and
inc
int3
sbb
aam
inc
mov
mov
stos
notl
test
inc
fidivrs
shlb
js
test
and
add
out
insl
push
lock
sbb
dec
popa
xlat
loopne
mov
andl
and
lahf
test
pop
test
movsb
xor
out
mov
inc
xchg
dec
add
mov
fwait
mov
pop
mov
add
cmp
mov
cmc
fs
and
inc
mov
lahf
push
fwait
test
cmp
outsb
inc
stc
fisttpl
pop
jecxz
aad
sub
out
out
ret
fldt
int3
dec
outsb
xor
mov
sub
cmp
aaa
and
mov
mov
in
movsl
mov
jge
mov
push
js
out
jecxz
mov
out
inc
and
lret
popf
add
dec
and
es
or
in
adc
push
inc
sub
roll
ss
ds
cmp
push
and
call
or
pop
flds
imul
iret
push
insl
imul
push
inc
fdivs
dec
mov
and
adc
sub
and
lea
adc
scas
sbb
or
adc
add
iret
into
sub
test
aam
out
cltd
aam
jnp
in
ret
xlat
imul
jmp
adc
into
icebp
push
mov
dec
cmp
outsl
mov
jb
sarb
je
pcmpgtd
push
and
push
fisubs
inc
pop
mov
and
add
sub
fnstsw
jb
jge
jge
mov
aam
es
scas
imul
add
aas
and
xorl
sbb
sbb
inc
das
adc
sub
push
pop
int
mov
inc
fisttpll
or
jb
and
jnp
adc
xchg
in
push
mov
test
adc
push
cmp
xchg
stc
movsl
cmpsb
mov
sbb
mov
leave
inc
movsl
inc
fistpll
bnd
mov
mov
in
fdivl
jne
or
xor
cmpsb
jo
cmp
jmp
push
es
movsl
lret
xor
leave
and
enter
sub
test
mov
push
push
int3
imul
mov
push
adc
inc
xchg
pop
xor
mov
roll
mov
repnz
inc
out
in
leave
arpl
mov
add
cmpsl
popa
push
dec
int
jnp
push
adc
clc
and
mov
mov
mov
mov
adc
jnp
sub
adc
dec
or
or
mov
lods
loopne
xchg
sbb
stos
push
cmp
cli
test
xchg
aad
cmp
popa
movsl
in
xor
cltd
mov
popa
aas
rclb
mov
push
aaa
and
dec
jo
lea
fisubrs
icebp
mov
insb
hlt
int3
mov
sub
daa
push
test
sbb
xor
fnsave
push
jb
pushf
cmp
js
scas
cmp
call
mov
shll
add
lret
pop
sbb
xor
loope
xchg
lds
in
mov
jle
js
lods
loop
stos
add
cmp
push
leave
adc
aad
mov
scas
leave
into
jbe
inc
dec
xor
enter
mov
pop
jmp
mov
mov
fisttpll
mov
add
mov
adc
cmp
test
jge
xlat
push
push
fs
xor
sub
push
repz
and
push
mov
jl
cmc
aam
arpl
cli
lods
popa
or
in
add
add
xchg
inc
cwtl
test
ds
push
or
icebp
int3
cs
or
push
mov
mov
lret
add
mov
shlb
test
mov
xchg
je
ret
addr16
mov
test
insl
inc
pop
sahf
pop
sub
aam
hlt
push
lods
rcl
push
rorl
dec
add
mov
inc
jbe
jmp
test
inc
adc
daa
and
lea
scas
mov
fwait
aaa
mov
jns
test
leave
mov
hlt
subl
popa
jo
inc
dec
lock
push
mov
in
sub
push
std
cmp
stos
cmpsb
bound
int3
jl
xor
inc
out
cltd
iret
ret
popa
adc
inc
jle
frstor
ret
pop
mov
pop
test
std
cli
push
inc
cmp
push
xchg
pop
pop
pop
cmp
ret
pop
lcall
and
jns
int
dec
adc
mov
and
jb
fldcw
mov
data16
jne
xor
dec
inc
cmp
rcl
orb
jmp
push
fldcw
sub
and
or
cmc
aam
insl
das
add
cmpsb
pop
mov
xor
lds
arpl
mov
imul
loopne
jge
mov
push
mov
movntpd
pop
cmpsb
pop
mov
push
jg
cmp
inc
insb
sbb
aas
sahf
xchg
pop
pushf
mov
xor
pop
inc
imul
push
xchg
movsl
jmp
nop
ja
and
jnp
cli
popa
inc
loopne
sbb
dec
jmp
inc
repz
imul
and
dec
and
shll
push
xchg
loopne
mov
jnp
pop
repnz
cmp
test
nop
jbe
dec
iret
or
xchg
add
jg
negb
mov
xor
or
cmpsl
shlb
out
hlt
int
mov
shrl
push
xchg
jl
lret
mov
jns
stos
das
push
popa
pop
xchg
xchg
push
jcxz
aad
rolb
lret
and
bound
ljmp
fdivrl
test
ret
pop
xor
daa
add
shl
je
ds
lahf
frstor
lcall
cmp
sbb
ljmp
test
pop
loope
add
aam
lods
arpl
mov
roll
jecxz
fcompl
lahf
call
jg
pop
cli
cmp
mov
jb
mov
out
jg
out
xchg
add
cmp
cli
fisttpl
jmp
push
out
xlat
dec
es
and
and
hlt
xchg
test
adc
dec
lahf
sahf
sub
mov
push
jno
dec
mov
xchg
aaa
add
leave
movsb
call
stc
dec
fwait
cli
jg
and
add
lret
fcmove
xorb
or
push
adc
mov
mov
pop
jl
jo
pop
mov
les
repnz
jp
outsb
orb
xchg
ljmp
adc
xor
ret
mov
push
add
or
add
pop
mov
dec
pop
std
arpl
and
push
cmpsb
outsl
xor
pusha
lock
nop
lock
and
sar
aad
push
mov
inc
add
sub
cmp
push
mov
xorb
or
pop
outsl
mov
lret
xchg
daa
hlt
jg
sub
testl
xchg
nop
mov
test
es
mov
fistps
lea
and
cltd
or
shll
add
inc
movsb
push
mov
scas
dec
and
mov
in
je
adc
jns
test
shl
mov
data16
fcomps
mov
sahf
sbb
loop
out
leave
or
add
dec
and
or
arpl
mov
mov
ret
negl
sbb
addr16
cs
data16
push
sub
mov
aaa
mov
jge
sub
fstpt
lods
or
sbb
xchg
test
mov
out
xchg
mov
fnstsw
enter
mov
or
adc
push
aam
dec
xor
stc
inc
mov
lods
aaa
lock
xlat
cmp
cltd
stos
xchg
out
mov
popa
sarl
adc
jg
xchg
sbb
mov
and
xlat
mov
xor
xor
mov
xchg
fucomp
push
inc
jl
sbb
mov
mov
loope
jne
outsb
dec
shl
outsl
mov
xchg
sbb
lods
pushf
push
mov
imul
xor
idivl
imul
jnp
sbb
stos
or
mov
push
inc
imul
add
fistl
adcb
pushf
mov
pop
pavgw
insb
dec
or
stos
in
jno
popf
mov
inc
xchg
mov
cmp
imul
jp
jbe
ret
pushf
xchg
test
sbb
mov
hlt
push
push
sub
das
shlb
aaa
mov
addr16
repz
mov
loopne
mov
inc
lea
aas
fidivrs
inc
addl
push
test
je
int3
jge
mov
dec
cmp
sbb
in
pusha
and
sbb
xchg
divl
in
test
sbb
aas
ds
sub
add
fidivrl
pop
xor
popf
imul
outsb
loop
scas
dec
push
aam
stos
mov
jl
test
aam
mov
lds
dec
add
inc
add
jecxz
repnz
lock
mov
xchg
iret
sbb
in
lods
out
cmc
daa
ljmp
movsb
inc
add
dec
push
test
in
ja
xor
mov
popf
cltd
out
mov
mov
xchg
jg
and
push
nop
rcll
inc
or
pop
pop
imul
cmc
movsl
dec
dec
lahf
stos
jg
or
sub
test
push
dec
pop
xor
aad
sub
test
xchg
jb
pusha
xchg
add
jae
fcmove
imul
shlb
or
or
jg
sahf
cmp
ret
lcall
adc
inc
xchg
jge
sbb
loop
call
jno
jl
ret
jb
push
adcb
les
imul
pop
xchg
cmpsb
dec
loop
fs
nop
sarb
ret
sub
mov
mov
xchg
rcrl
jno
subb
pop
fidivrl
aaa
es
fisubs
sti
inc
pop
sbb
xchg
jl
jnp
hlt
das
or
push
das
jne
cmp
cltd
imul
inc
stc
cmp
jb
subl
push
push
sbb
inc
inc
out
push
sbb
lods
gs
scas
inc
mov
or
pop
adc
mov
clc
imul
fsubrl
fidivrs
push
addr16
imul
lods
das
cmpsb
xchg
cmp
jbe
mov
ret
push
cmp
cs
dec
stc
jbe
cmp
and
movsb
insl
loope
jnp
sbb
pop
test
jecxz
shll
fadd
sub
fcoml
add
ret
dec
mov
dec
adc
xchg
out
inc
bnd
cmp
out
jp
cmpsl
fdivr
test
dec
loope
xchg
adc
rcll
fidivrs
pushf
dec
and
sub
aaa
sbb
mov
sub
mov
lahf
push
bound
test
and
mov
mov
out
imul
push
insb
outsl
or
fidivl
addb
push
cmp
xor
mov
aam
jbe
jno
xchg
push
stos
fwait
dec
dec
outsb
stc
pop
iret
add
pop
pop
xor
das
pop
sub
push
jnp
loopne
adcb
push
leave
in
int3
clc
mov
push
xchg
dec
stos
aaa
cmp
bound
mov
jle
add
arpl
fbstp
jmp
pop
sub
xlat
aaa
fstps
out
push
dec
dec
xlat
lock
xchg
lods
pop
js
repnz
mov
add
dec
gs
push
shll
jg
push
lock
jo
sbb
sub
mov
push
mov
pop
mov
lret
jge
insb
pushf
xchg
imulb
fisubrl
push
adc
je
adc
out
faddl
xor
stos
xchg
cmc
xchg
js
mov
das
sub
push
lcall
jo
loop
cld
pushl
divb
dec
xor
cld
dec
fsts
push
fcoms
aad
pop
pop
insb
int3
jecxz
jge
and
lods
xor
sub
mov
ja
sub
cs
push
xchg
mov
push
jne
push
adc
inc
xor
pop
js
dec
fidivs
jg
jl
fwait
adc
repz
iret
sbb
roll
inc
adc
and
shll
cs
stc
jl
cmpsb
inc
ljmp
mov
bound
lcall
in
dec
mov
fwait
mov
test
xor
xor
pop
or
bound
repnz
sbb
icebp
pop
push
cmpsb
mov
int3
mov
mov
mov
je
push
add
mov
sbb
push
xor
subb
adc
cmc
icebp
pop
or
imull
jle
add
pop
jle
xor
mov
jne
add
test
dec
xchg
jae
mov
xor
bound
pushf
fcomps
shr
test
aaa
aam
jno
test
sar
pop
mov
pop
mov
or
sub
out
jg
cmp
or
rcrb
movsl
mov
lcall
ret
lea
inc
test
sahf
push
push
test
ret
mov
ret
daa
push
repnz
pop
push
in
out
pop
xorb
jno
push
cld
inc
imul
inc
mov
ror
dec
outsb
repnz
adc
pop
fcomi
mov
mov
sbb
mov
outsb
mov
dec
push
cmpsl
test
sub
out
arpl
sbb
mov
cs
adc
jne
lcall
bound
mov
into
shll
cmc
cmpsl
lods
cmp
rcl
pop
push
test
xor
ds
mov
or
enter
ja
outsl
rcll
push
out
sti
pop
mov
adc
shrl
mov
add
je
dec
icebp
stos
jns
pop
jg
push
push
sub
jno
std
fwait
cmpsl
pop
push
jp
xor
or
pop
cmp
mov
push
lods
cmp
xlat
int3
xorb
loopne
lock
and
adc
add
jo
pusha
push
push
pusha
inc
jo
andb
lock
shl
shl
add
adc
and
xor
pusha
push
push
pusha
inc
jo
adcb
pusha
shl
shl
add
xor
and
loopne
add
jo
jo
push
inc
test
movsb
cmp
lret
mov
shl
shlb
lock
fistpll
pop
enter
lahf
mov
lods
insl
popf
jge
mov
xchg
xor
int3
cmp
std
jge
dec
mov
lods
insl
popf
jge
or
fnstsw
sub
lea
lods
mov
push
movsb
inc
lods
jne
gs
adc
add
xlat
aam
pop
mov
test
icebp
or
dec
and
xor
insl
jmp
sbb
or
mov
cmpsb
sbb
push
jne
mov
int3
loopne
in
adc
jbe
adc
mov
add
lods
pop
inc
add
ret
into
stos
cltd
in
cmpsb
test
and
aad
jo
lea
insl
lods
mov
dec
lods
movsb
popf
pop
mov
rolb
fdivr
add
jb
popf
xchg
xlat
mov
dec
loopne
popf
insl
repnz
int3
int
sbb
jne
popf
loopne
pop
lods
mov
mov
dec
sub
pop
or
out
inc
xor
cmp
cs
sbb
mov
jge
sbb
or
aam
and
in
xchg
test
pop
mov
lods
or
andl
mov
sahf
dec
cltd
bound
pop
shlb
and
cmp
add
or
fildll
inc
mov
dec
lea
testb
xor
sub
cld
xor
add
adc
in
sub
cmp
std
or
lods
pop
mov
lods
insl
popf
jge
or
fnstsw
sub
lea
insl
lods
pop
mov
sub
mov
jg
das
popa
clc
and
add
leave
inc
in
sarl
sbb
xor
push
ja
movl
inc
xor
les
push
add
rcrb
ds
shlb
inc
mov
mov
and
inc
popa
shl
add
test
loop
shl
sbb
idiv
xor
dec
loope
mov
jo
jl
shll
jp
jg
sub
xorl
push
pushf
je
rclb
hlt
sahf
int3
bnd
test
xor
pop
fistl
sti
sub
fs
or
mov
add
lahf
cltd
outsb
mov
sbb
pop
mov
out
inc
sahf
push
push
fs
mov
mov
cli
pop
out
sbb
inc
pop
xor
out
inc
inc
fcoml
jg
in
js
dec
aad
dec
mov
inc
inc
jecxz
imul
insb
add
pop
sbb
adc
push
shlb
mov
pop
dec
xchg
sub
adc
std
scas
jp
fildl
aas
or
lock
test
test
and
cld
fchs
sbbb
cmp
jns
sbb
mov
cmp
orb
movsb
insl
movsl
xchg
pop
loope
aad
fisubs
outsl
and
adc
into
mov
fdiv
pop
xor
sar
adc
jge
mov
and
add
inc
push
int
mov
notl
sub
xor
int3
scas
sub
rcrb
popa
jno
mov
mov
xor
xor
out
js
ljmp
jnp
push
mov
aas
inc
mov
xor
mov
xlat
pop
imul
loop
mov
out
ja
lahf
rclb
shlb
incb
xor
mov
or
mov
dec
adc
cmp
inc
pop
mov
js
lds
jecxz
push
pop
cmp
rcll
and
or
repnz
push
cmp
mov
pop
cld
sub
insb
addr16
mov
pop
js
pusha
aas
popf
mov
add
rcrl
push
ljmp
push
mov
fdivs
clc
cmp
sub
xor
or
subl
mov
mov
mov
pop
cmp
sti
pop
add
psllq
mov
and
inc
sahf
cmc
dec
cmp
in
test
enter
cld
arpl
mov
dec
repz
lds
imul
enter
inc
adcb
cmp
sbb
inc
dec
sbb
into
sub
test
pop
mov
icebp
add
int3
dec
pop
mov
repz
scas
cmp
mov
mov
inc
fcoml
cltd
dec
sub
pop
enter
mov
adc
push
pop
sub
inc
sub
push
lahf
cmp
xchg
mov
xchg
add
iret
cmp
fs
ss
mov
dec
lret
in
xchg
mov
mov
fwait
or
sub
in
rcr
mov
mov
jo
cmpsb
xor
out
jb
dec
sbb
push
test
in
out
xchg
into
push
movsb
or
div
outsb
push
xor
xchg
xor
in
outsl
daa
inc
cmc
outsb
mov
shrb
sub
dec
bound
insb
mov
inc
sub
mov
push
rcr
or
jbe
adc
decl
rclb
mov
pop
add
xchg
pop
dec
in
xchg
scas
xchg
cmpsl
fimuls
cld
les
in
xor
mov
add
shl
out
pop
pusha
rcrl
in
push
decl
pop
pop
repz
inc
add
pop
mov
test
inc
mov
hlt
pop
fdivp
mulb
shlb
xor
orl
or
sti
adc
inc
sbb
xor
mov
hlt
test
adc
hlt
dec
xor
cmpsb
cmp
jae
and
fwait
mov
scas
dec
inc
cmpsl
mov
aaa
into
push
jb
ficoms
mov
xor
add
loop
movsb
push
gs
and
xchg
scas
mov
xchg
xchg
test
mov
mov
ret
jo
fsubrs
rcrl
mov
lret
jmp
jnp
pop
test
add
push
imul
test
add
movsb
pop
xchg
add
int
xchg
xchg
mov
mov
test
das
sbb
pushf
pop
fcoms
jbe
sbb
pop
imul
sub
fnstenv
xchg
daa
adc
or
arpl
adc
dec
fisubl
jmp
outsb
faddl
aaa
fcomp
lods
push
inc
loope
add
adc
repnz
push
stc
outsb
adc
outsl
mov
and
inc
inc
outsb
gs
inc
cmpsb
js
pop
imul
stc
leave
cli
mov
nop
lret
sarb
sbb
and
lret
arpl
aad
mov
and
adc
leave
stos
arpl
add
stc
push
pop
or
sarb
outsl
in
push
mov
adc
xor
out
xchg
sub
stos
loopne
push
lret
pop
add
out
test
adc
das
imul
std
xlat
sti
ret
adc
sub
repz
and
in
dec
pusha
cmpsb
outsb
gs
clc
cltd
pop
cmp
gs
clc
outsl
test
push
imul
pop
cld
fwait
outsb
nop
push
and
hlt
xor
push
daa
stos
jo
mov
out
arpl
daa
xor
inc
test
je
xchg
pop
mov
push
cmp
push
int3
ret
mov
push
dec
dec
jge
in
cltd
bound
dec
sbb
sbbb
pop
stc
xchg
sub
jge
in
dec
call
cmp
scas
sbb
repz
adc
add
out
movsl
test
dec
inc
ret
xchg
pop
xor
out
lret
pop
xchg
mov
je
adc
push
inc
jae
and
daa
mov
in
hlt
inc
ret
mov
sub
je
ret
pop
add
inc
andb
cmpsb
xchg
mov
or
lods
jb
cltd
xor
test
pushf
pop
xor
stos
inc
leave
xlat
sub
inc
mov
ja
mov
inc
mov
push
lcall
in
jae
sbb
jp
js
les
mov
adc
sbb
mov
call
xorl
pop
int
ja
xor
mov
pop
push
sbb
leave
shlb
sbb
cmovne
mov
xlat
jb
into
cmp
jge
push
movsb
mov
int3
xor
mov
ja
mov
cs
int3
and
lcall
das
inc
ds
dec
mov
jae
imul
xor
and
push
push
cld
inc
rolb
mov
jns
jle
xor
popf
pushf
xchg
mov
and
mov
inc
jae
push
jl
sub
shrb
in
pop
orl
outsl
mov
hlt
inc
addr16
das
bound
cltd
and
outsb
pusha
pop
adc
insl
rclb
ret
mov
daa
add
xchg
sbb
js
push
xchg
xchg
push
cs
vpackssdw
lds
dec
xor
add
push
mov
xor
inc
faddp
inc
pop
sub
xlat
cmpsl
je
ret
int3
sti
sub
test
mov
adc
scas
cli
mov
jl
mov
fnsave
js
mov
cmpsl
imul
xor
lock
pushl
mov
fsub
push
xchg
or
inc
push
sahf
mov
jp
xchg
popa
jmp
lods
jo
clc
jnp
jnp
fsts
add
sub
jmp
sbb
mov
mov
xor
pop
xor
pop
aam
ds
adc
adc
jb
inc
ret
push
roll
fwait
mov
dec
arpl
ret
sub
repz
mov
in
pop
push
xor
xchg
mov
or
cmp
ja
popf
lock
inc
das
lret
xchg
sbb
mov
ljmp
pusha
scas
enter
popw
rcrl
shrl
push
es
jae
je
mov
push
lea
lods
cli
cmc
shlb
push
adc
aas
jnp
push
aas
pop
ss
leave
clc
push
stc
sub
cmp
sbb
and
int
cmp
push
outsl
loopne
or
cmp
mov
lock
lret
popa
and
inc
lcall
xchg
into
into
mov
pop
xor
adc
cli
arpl
dec
jl
lahf
jle
pop
pop
repz
add
pop
pop
dec
dec
roll
adc
sbb
add
pop
ss
movsl
std
repnz
in
enter
cmp
test
lahf
cmp
neg
inc
jne
cmp
or
add
leave
pop
lods
xchg
test
mov
movsl
mov
test
jo
sub
and
xor
fisubs
out
js
in
sahf
in
lock
cld
test
xchg
nop
jge
dec
cmp
inc
testl
cltd
cwtl
ret
xor
shll
outsb
xchg
stos
int
aam
out
mov
mov
movsl
mov
mov
cmpsl
lret
mov
xchg
in
mov
in
test
sbb
dec
int
call
add
adc
ja
add
pop
mov
daa
jmp
popa
iret
mov
push
lret
mov
sub
mov
dec
xchg
shl
out
cmc
aad
pop
mov
mov
and
fsubl
sub
fidivrl
js
cmpsb
lret
xchg
nop
popf
pop
adcl
loope
bound
jae
push
sub
ror
jo
out
push
jnp
sub
mov
xor
out
loope
lods
or
mov
push
jp
mov
int
repz
cld
and
leave
sbb
in
mov
aad
test
dec
xchg
pop
adc
aam
add
adc
js
in
lods
or
in
fs
lahf
push
xor
fsubr
pop
call
mov
xchg
jl
jne
mov
jl
xor
ljmp
mov
sarb
ss
push
das
inc
xorl
and
jg
lock
xchg
mov
arpl
mov
push
dec
pop
mov
leave
icebp
mov
std
subl
ja
inc
mov
pop
xchg
inc
mov
sbb
out
or
aas
jbe
mov
repnz
cltd
push
jg
xor
adc
jle
xchg
push
mov
mov
mov
shrl
cmpsl
stc
adc
cmp
sbbl
testl
pushf
nop
mov
andl
sub
add
leave
push
inc
ret
push
or
fwait
movsb
inc
cs
enter
push
cmpsb
jecxz
xor
iret
cmp
mov
jg
cmp
faddl
sbbl
pop
jmp
fstps
cmp
xchg
sti
out
in
lahf
pushf
adc
jl
stos
cmovle
mov
jg
push
jne
dec
data16
jp
sub
out
cltd
sub
jne
mov
sbb
and
mov
ljmp
hlt
lock
sub
cs
repnz
pop
push
push
rcrb
and
push
xchg
icebp
cmp
pop
pushf
push
add
or
jae
hlt
out
out
mov
out
pop
or
data16
pop
xchg
push
push
mov
les
shrb
and
add
pop
je
test
xchg
aad
xchg
dec
adc
pop
pop
ljmp
ss
and
add
cmp
pop
push
fs
cld
mov
je
insl
mov
sub
mov
test
adc
cs
stc
icebp
int
lcall
stos
adc
ds
clc
or
lret
stos
adc
stos
lea
xchg
mov
cmp
popf
scas
jne
or
lahf
shll
fisttpll
jecxz
sbb
mov
lahf
out
loop
pop
adc
xor
pop
std
out
xor
pop
dec
ja
sub
mov
jge
inc
push
mov
sbb
out
push
jns
sbb
xor
mov
jae
adc
in
xchg
sti
fnsave
mov
lds
adcl
or
lahf
out
outsb
cmpb
xor
fwait
pop
jb
cltd
pusha
popa
jb
and
std
xor
arpl
sarb
xor
jg
or
mov
mov
and
aas
adc
jp
pop
scas
cmp
add
mov
outsb
cmp
and
fcmovnu
and
rcll
frstor
jl
ljmp
mov
cmpsb
xor
cmp
cli
pop
es
scas
es
or
jnp
hlt
mov
mov
mov
push
add
mov
mov
jae
in
notb
mov
push
stc
jle
int3
bound
shrl
push
mov
or
mov
jp
insb
sub
cmp
ret
mov
mov
sbb
cmpsl
jns
iret
dec
scas
pop
insl
aaa
pop
pop
and
sub
sbb
dec
sub
sbb
roll
cmp
pop
lods
mov
adc
les
cmp
cltd
or
mov
sub
mov
mov
in
loopne
inc
or
push
xor
insb
jmp
mov
sub
xor
incb
jge
outsb
cltd
xor
xchg
xchg
adc
mov
inc
enter
mov
jns
xchg
das
cmp
ds
dec
fsubp
dec
inc
enter
mov
xchg
jae
push
std
mov
ja
inc
inc
push
out
dec
and
cli
pop
xorl
pop
outsl
xor
test
out
lret
sahf
mov
nop
insl
into
or
stos
sbbl
push
fdivs
and
test
sti
popl
dec
inc
lahf
mov
xor
aaa
push
add
or
sarl
dec
jno
lret
scas
xlat
xor
clc
mov
fsubrs
or
outsb
addr16
imul
mov
std
je
cli
add
and
mov
or
or
sub
or
jp
push
test
shll
pop
repz
inc
js
cmp
cmp
in
mov
push
inc
aam
inc
push
pop
jp
push
aas
dec
mov
adc
mov
or
sbb
add
adc
icebp
jnp
out
arpl
push
fwait
into
out
cltd
out
cmpsl
adc
mov
adc
call
ret
fidivrs
pop
pop
insl
iret
cmp
dec
shr
fbld
les
jmp
aas
rep
lret
test
mov
in
cmp
addl
mov
das
add
push
popa
mov
lods
aaa
ja
imul
cs
and
xor
addr16
insl
leave
aam
push
test
gs
inc
sarl
and
or
sbb
cmp
gs
aam
cmp
inc
aaa
imul
mov
pop
xor
in
dec
rclb
fldenv
sbb
add
aad
ja
xchg
push
call
nopl
mov
clc
das
sub
imul
hlt
mov
scas
rcrb
sub
scas
lods
and
jns
out
js
enter
sub
lret
mov
bound
movsl
lds
xor
daa
mov
inc
push
jo
addr16
cltd
jmp
je
repz
popa
adc
add
xchg
stos
fbld
jb
xchg
lcall
mov
out
mov
lods
xor
push
xor
sub
jns
mov
push
stos
add
imull
sbb
sub
sbb
xchg
scas
xor
push
mov
rcl
bound
divl
notb
jbe
ret
sbb
adc
scas
or
fiaddl
shlb
sbb
lods
fmul
add
mov
xchg
sbb
pop
imul
fbld
mov
stc
outsb
xor
cmp
iret
xchg
or
sbb
ret
sub
pop
cmp
aaa
jp
and
sbb
xlat
lret
mov
fldl
in
aaa
shrb
enter
lods
icebp
je
jns
jae
adc
nop
xor
sbb
fistpl
xorb
add
push
pusha
pop
jae
fnsave
mov
or
pusha
jae
bound
test
and
jb
sbb
xchg
rorl
jno
lods
sub
push
and
jecxz
mov
scas
sub
or
push
stos
repz
scas
dec
sarl
sarb
xchg
xchg
sbbb
sbb
rolb
sub
imul
add
cmp
pop
hlt
mov
jg
push
push
js
gs
and
lcall
out
mov
xchg
mov
mov
jo
mov
insl
xchg
push
push
test
lahf
dec
xchg
stos
lcall
xor
std
add
stos
xchg
xor
jno
inc
std
and
leave
dec
push
lcall
movsl
and
mov
jmp
nop
int3
das
sub
sub
mul
int
cmp
push
pop
add
movsl
divl
xchg
push
ret
adc
xor
in
in
jnp
jmp
or
rorb
out
jl
int
sbb
lcall
cli
cmp
mov
dec
data16
push
shlb
test
mov
push
mov
mov
mov
cmp
mov
fsubrs
push
insl
andl
fisubrs
mov
xchg
inc
bound
fimuls
stc
mov
xchg
jecxz
in
test
mov
orb
andb
push
fs
adc
mov
rol
add
mov
sbb
cmpsl
sub
adc
push
subb
popa
pop
xchg
push
xor
xor
sahf
or
dec
movsl
in
mov
xchg
pop
cli
pushf
out
sub
mov
sub
stos
dec
ret
xchg
lods
iret
lret
enter
jns
adc
xor
aam
pushf
iret
jns
inc
xlat
iret
dec
jbe
mov
mov
jl
jae
negb
jae
adc
pop
sub
mov
sahf
mov
and
stos
sarb
xor
jge
sbbb
xchg
xchg
icebp
push
movsb
adc
ja
sub
mov
aaa
mov
adc
dec
out
jns
aas
xor
pop
jmp
inc
and
popa
daa
js
add
cs
cmp
mov
add
sbb
mov
sbb
fs
xchg
or
es
movsb
mov
mov
inc
fbld
insl
divb
shlb
pop
xor
lock
and
dec
ret
dec
inc
stc
cmp
aaa
push
mov
in
cmpsb
jae
inc
rol
xchg
push
cs
dec
outsb
scas
mov
lods
enter
cmp
jecxz
jmp
adcl
inc
outsl
and
jb
add
aam
out
iret
push
mov
mov
aas
addb
icebp
into
lret
jae
lret
out
add
add
dec
mov
and
jp
cmp
or
adc
scas
mov
in
xchg
pusha
and
rolb
jmp
pop
dec
cwtl
jmp
adc
popf
repnz
sahf
enter
cli
mov
fistpl
aaa
sub
movsl
adc
xor
dec
daa
jecxz
add
popf
push
call
filds
cltd
jecxz
dec
idivb
and
mov
enter
sti
subb
test
pop
sbb
dec
inc
ret
inc
stos
sbb
pop
outsb
pop
jno
rorl
mov
cmpsl
sub
in
cmp
push
sub
notb
jb
sub
inc
movsl
xchg
iret
fdivr
js
std
mov
out
js
clc
jb
add
push
insl
lahf
sub
andps
push
jbe
mov
adc
add
dec
mov
rcr
mov
adc
ret
add
pop
cwtl
das
outsb
push
inc
rorb
adc
mov
loopne
mov
or
and
push
or
enter
nop
loope
das
rolb
popf
xor
div
bound
pop
jnp
shrb
push
std
int3
dec
lret
jl
mov
int
or
or
mov
mov
push
jae
cmovo
inc
iret
mov
jne
and
mov
pop
inc
dec
push
outsl
xchg
add
mov
jb
orb
aas
cmp
push
movb
lock
add
fwait
sti
jp
and
mov
push
rcrb
inc
outsl
fs
hlt
std
cltd
jbe
jo
xchg
xchg
mov
or
loopne
dec
inc
imull
cmc
or
fs
shr
loop
xchg
mov
and
les
nop
push
cmp
jne
leave
sbb
adc
pop
pop
loope
test
cmp
daa
stos
outsb
pop
inc
ljmp
fs
mov
jbe
adc
es
mov
jle
dec
stos
leave
mov
pop
mov
gs
jne
test
jge
or
fnstsw
sub
lea
insl
lods
pop
mov
lods
insl
popf
jge
or
fnstsw
sub
lea
insl
lods
pop
mov
lods
insl
popf
jge
or
fnstsw
sub
lea
insl
lods
pop
mov
lods
insb
popf
jge
paddw
int
cmp
std
jp
cmc
adc
mov
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
daa
out
das
das
mov
dec
cmp
mov
add
or
add
push
add
add
add
add
add
add
add
add
movsl
add
add
add
mov
mov
inc
add
add
add
mov
pop
add
add
add
dec
add
rolb
sbb
mov
adc
mov
scas
add
lahf
add
add
cltd
add
add
add
add
cmpsl
add
add
add
add
sbb
add
add
add
add
movsl
add
mov
add
add
roll
add
fadds
xor
xchg
add
add
add
add
add
add
sti
add
icebp
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
stos
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
push
add
add
add
add
cwtl
add
add
mov
cltd
add
out
movb
add
addl
js
pop
add
add
out
add
add
add
add
xchg
add
roll
add
add
dec
add
add
add
add
add
add
add
add
add
add
roll
add
pop
add
add
add
add
fs
add
add
add
add
add
add
add
sbb
add
add
add
and
addl
add
add
add
add
add
pop
add
cmp
and
scas
add
pop
add
mov
add
add
add
add
imul
add
roll
add
mov
lea
xchg
mov
and
outsb
add
add
xor
mov
add
mov
incb
inc
add
cmp
test
add
add
add
add
add
add
add
add
add
add
add
add
jl
dec
add
imul
add
add
add
add
add
add
add
add
add
scas
add
add
add
inc
add
jno
movsb
add
add
loope
cwtl
add
add
push
add
add
or
mov
push
add
add
push
add
add
add
add
add
pop
add
add
add
sub
bound
movb
add
add
lea
xchg
cwtl
add
add
add
add
add
add
outsb
add
add
add
pop
add
add
add
inc
add
ja
push
add
add
add
add
add
xchg
add
lret
add
add
mov
jnp
xor
lret
add
add
add
add
add
add
dec
add
add
add
add
add
mov
add
add
roll
add
mov
add
cltd
add
add
add
jb
shrl
pop
dec
into
mov
jmp
daa
test
insb
inc
rorl
inc
and
repz
sbb
subb
fldt
rcrl
pop
into
dec
xchg
lds
aas
jne
ficoml
xchg
pop
or
test
in
sub
sub
std
xchg
hlt
xchg
add
pop
test
repnz
pop
cmpl
inc
jl
pusha
sbb
sahf
jg
lcall
push
inc
scas
mov
data16
and
cmp
shll
xor
hlt
cli
lret
xchg
mov
fmuls
mov
sub
fdivs
pop
in
fwait
addr16
push
sub
mov
mov
shll
ljmp
sbb
push
jae
jo
mov
xor
jno
xchg
adc
stos
adc
lcall
fld
cmpsb
call
daa
fidivs
jae
xor
jge
adc
cmpsb
adc
das
mov
lea
push
inc
jmp
jb
call
mov
add
cmp
push
and
xchg
adc
jnp
jnp
jl
icebp
pusha
jmp
scas
in
clc
xchg
sti
jp
outsl
les
sub
loopne
dec
lcall
xor
shrl
idivb
ficomps
sbb
aad
enter
jo
out
jnp
and
xor
add
jg
int
mov
loop
jb
clc
mov
int
mov
xchg
mov
movsb
xchg
mov
je
cli
dec
inc
fsubs
enter
mov
mov
call
mov
fadds
xchg
push
in
sub
add
pop
mov
and
or
mov
movb
pop
jno
gs
cmp
sbb
sbb
dec
jnp
and
push
loope,pn
and
cmpsb
or
sbb
out
popf
aad
mov
repnz
dec
stc
in
add
mov
cwtl
sti
in
add
sub
dec
mov
and
loope
addr16
push
fsubl
es
in
sub
pop
ficompl
js
adc
mov
mov
int
mov
xor
cwtl
sub
roll
ss
pop
push
mov
cmp
clc
ljmp
cmp
sub
call
lcall
cwtl
out
mov
adcl
lahf
cwtl
add
loopne
out
sub
inc
orl
es
cld
mov
and
inc
mov
mov
mov
add
ja
jnp
scas
inc
clc
shll
sub
jo
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
