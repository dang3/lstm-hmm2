call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
push
add
jmp
fstpt
lret
push
lcall
lret
jnp
lods
dec
sahf
dec
into
cmp
or
sti
push
jmp
fstpt
lret
dec
mov
jle
test
imul
jl
into
pop
out
sbb
or
loop
jmp
ret
rclb
inc
mov
subl
cwtl
xchg
push
ret
dec
loope
xchg
inc
popf
dec
xchg
or
push
andb
inc
inc
push
mov
dec
jne
data16
pop
push
sbb
out
icebp
push
push
cmpsb
xchg
stos
cs
cs
mov
mov
add
popa
adcl
dec
jb
mov
sbb
addl
addr16
scas
add
pop
stos
jl
addr16
popa
stos
out
into
xor
fwait
sub
or
stos
push
jmp
imul
notb
push
pop
popa
out
ret
loope
ja
dec
sub
fwait
sahf
push
jle
outsb
mov
push
mov
cmpsb
arpl
push
hlt
out
hlt
push
or
mov
repz
push
jno
popa
jg
dec
mov
pop
push
in
sbb
sti
push
cld
cs
sub
pop
mov
addr16
xchg
arpl
push
and
cmp
sbb
outsl
jge
jnp
dec
ficompl
sub
xor
insb
notl
out
adc
and
push
mov
pushw
sbbl
dec
stos
cmp
cmp
xor
mov
sahf
or
das
lret
or
ja
outsb
addr16
ds
outsb
fwait
jle
mov
imul
fisubrs
out
sbb
or
sti
push
jmp
fstpt
lret
dec
mov
jle
mov
imul
fisubrs
out
sbb
or
sti
push
fsubs
jb
shll
arpl
rorl
add
ss
adc
lcall
add
loopne
mov
sbbl
push
popa
xchg
les
pop
test
jecxz
sub
xlat
jmp
xorb
int
dec
call
jg,pn
in
mov
arpl
divl
xorl
lcall
imul
add
enter
sub
ljmp
fmull
adc
xchg
add
mov
adc
jge
push
sti
gs
ret
push
sub
int
call
in
clc
iret
and
out
vpermt2q
add
jb
pop
loop
sub
inc
inc
jnp
stos
add
cmp
pop
jnp
andb
pop
and
pop
in
xchg
dec
bnd
int3
sti
xchg
jg
call
iret
shll
jle
cli
sbb
icebp
mov
and
loopne
jb
cmpsb
cmp
mov
or
jo
mov
stos
inc
into
outsb
xor
and
mov
es
inc
lods
pop
jge
cmp
dec
push
movsb
jns
add
dec
inc
xor
rolb
into
stos
int3
push
mov
cmpsl
lea
dec
in
and
push
mov
insl
nop
std
outsb
scas
movsb
fwait
xchg
mov
push
dec
sbb
into
sub
sub
dec
push
jbe
adcl
lret
or
test
adc
dec
ss
mov
mov
movsl
pushf
data16
loopne
mov
push
fmuls
jae
pop
cmp
pop
out
or
pop
push
mov
xchg
popf
cld
jg
pop
loopne
sti
dec
js
pop
or
push
push
rclb
jb
add
add
add
rorl
cwtl
pop
and
mov
jo
pop
aam
lock
mov
iret
adc
cmp
sbb
add
iret
jnp
lret
fsubl
je
ret
mov
icebp
lds
and
ja
mov
and
imul
mov
or
shl
mov
xchg
sbb
mov
xor
pop
je
inc
arpl
jp
lcall
sbb
pop
cli
jns
jnp
pop
cmpsl
xchg
int
jle
cld
mov
repnz
outsb
fisubrs
mov
dec
mov
mov
xor
int
inc
in
fisttps
scas
sub
pop
xor
aad
sub
dec
sahf
loope
stos
sbbb
adc
aaa
xchg
popa
or
xchg
sahf
insb
js
hlt
dec
jnp
lock
shrb
shrl
and
xor
ret
loop
push
lret
mov
bts
sbb
jmp
jo
lock
movsb
cmp
cmp
pop
out
test
inc
push
sbb
xchg
js
pop
pushf
jge
into
daa
pop
cmp
jns
int
cmc
and
adc
add
lods
jle
jge
mov
push
jl
fsubr
les
inc
shrb
repz
pushf
sub
aaa
push
lods
jmp
addr16
xchg
test
or
imul
shll
mov
and
sbb
outsb
loopne
in
cltd
lcall
cmp
mov
adc
or
inc
sub
cmp
add
xchg
lock
and
ds
shll
sub
sub
paddq
or
shll
jno
popa
out
push
les
sbb
test
cs
dec
int3
cmp
and
iret
lds
xchg
lods
in
jle
and
fimuls
sub
incb
out
jp
xor
push
rol
outsb
mov
xor
fsubs
xchg
and
je
inc
mov
int3
loopne
shr
mov
cmpsb
mov
cltd
stos
enter
cwtl
lret
dec
test
xchg
mov
jmp
xchg
icebp
inc
add
js
xchg
jbe
popa
sbb
jae
adc
push
stos
test
daa
xchg
dec
pushf
mov
cld
mov
fcoms
aam
rclb
push
in
ss
loop
mov
loope
and
pop
fwait
repz
cwtl
mov
push
jg
test
aaa
outsl
inc
subl
popa
pop
sub
add
pop
push
add
stc
lret
iret
sti
adc
enter
out
lock
push
repz
dec
or
call
sarl
jg
popf
jne
gs
fs
aam
dec
shrl
gs
dec
pop
mov
jg
and
into
and
ficoml
jge
mov
add
pusha
arpl
lcall
mov
repz
lods
mov
push
scas
add
in
add
pop
push
call
movb
fldenv
in
mov
call
loopne
stos
mov
pop
leave
sbb
cmpsl
push
xor
stos
in
pop
and
add
aad
pusha
xchg
jg
in
pop
or
sahf
mov
xchg
push
shlb
jge
imul
and
push
int3
cmp
out
stc
addb
int
inc
clc
lcall
outsl
pop
test
adcl
lods
scas
and
dec
flds
pusha
popf
call
daa
je
xchg
sub
shll
jp
mov
aas
repz
dec
jns
xchg
pusha
jae
add
mov
shr
cwtl
test
and
andl
ljmp
subb
sbb
decl
pop
dec
fs
into
loope
test
mov
xchg
mov
test
sbbb
imul
jno
call
or
sar
dec
and
outsb
mov
sub
adc
js
xchg
movsl
enter
mov
cmp
mov
sub
scas
mov
popa
pop
pop
popf
and
ret
das
frstor
mov
inc
faddp
insb
lea
sub
call
loope
mov
in
xchg
fcmovnbe
pop
adcb
repz
xchg
mov
popa
out
or
sbb
pushf
jbe
or
pop
add
test
cmp
lds
test
inc
mov
icebp
xor
cmp
scas
xchg
stc
xor
xchg
or
lret
pop
inc
dec
sub
or
add
dec
sbb
jg
aaa
ss
aad
psubusw
pop
in
xor
iret
dec
lahf
nop
sub
jle
push
xor
icebp
push
mov
dec
push
or
stc
rolb
fnsave
sub
lods
in
adc
mov
imul
or
ljmp
rcll
adc
aad
fsubr
sub
lea
out
inc
mov
mov
lret
hlt
sub
repz
rol
adc
xchg
jno
push
adc
jmp
scas
movsb
loop
mov
mov
lea
mov
rclb
out
mov
or
mov
cmpsl
or
imulb
leave
xchg
ror
aad
leave
pop
mov
jb
pop
icebp
pop
or
jns
mov
sbb
jne
jp
fs
fmull
jae
outsb
and
pop
pop
pop
aam
pusha
leave
jbe
int
movsl
leave
test
or
pop
push
jno
scas
mov
out
push
pop
ja
add
outsb
repnz
rcll
push
lock
push
sub
addr16
pop
pushf
mov
inc
push
ljmp
repnz
add
repnz
lods
stc
or
adc
test
jg
mov
xchg
push
daa
scas
cmp
jnp
fadd
xor
pop
sub
inc
stos
or
cmp
push
loop
push
jo
cmpsl
dec
lods
push
mov
xchg
imul
in
movsl
push
cmp
cmc
inc
and
pop
jne
push
addr16
into
out
insl
pop
dec
add
jle
mov
xor
push
push
cwtl
push
out
int3
adc
lret
mov
mov
dec
cld
pop
fnstsw
iret
and
pop
mov
adc
fs
pusha
cmc
lods
scas
outsl
adc
out
test
pop
pusha
bound
popf
aaa
subl
ret
fincstp
aas
pop
fnstenv
push
mov
inc
mov
push
scas
les
bnd
daa
adc
rol
clc
fdivs
mov
lock
jl
fs
jnp
int
sub
xor
pop
xor
mov
and
jns
dec
in
jmp
cmp
mov
jns
in
sbb
sahf
pop
stos
das
push
rcr
cmp
roll
inc
mov
mov
ljmp
inc
mov
cltd
pop
mov
push
call
and
cmc
test
sbb
xor
das
mov
xlat
xchg
jno
xchg
out
leave
mov
push
rclb
imul
lods
int3
cmp
dec
inc
inc
xorb
xchg
out
inc
sub
cs
jg
mov
xchg
ficompl
shll
adc
call
and
or
inc
and
aas
pop
addr16
pop
jmp
outsl
fdivrp
pop
dec
add
xlat
fsts
xchg
sbb
inc
js
or
sti
cmp
sub
addr16
xchg
sahf
dec
xchg
int
stc
push
movsl
xorl
dec
inc
push
sub
fs
mov
xor
out
lcall
xchg
sbb
fs
pop
imul
push
loop
push
sbb
dec
add
ss
jmp
cmc
xor
loop
mov
aad
mov
pop
aam
scas
jecxz
push
mov
mov
dec
or
sbb
inc
inc
dec
js
mov
pushf
fcmove
loopne
inc
mov
fsubs
nop
cmp
fisttpll
loopne
jnp,pt
mov
mov
or
das
fisttpl
out
jo
push
inc
dec
inc
je
fistl
mov
scas
and
aam
rcr
js
addr16
mov
mov
gs
fisttps
inc
arpl
cmpsb
xchg
pop
mov
cmp
jb
fnstenv
add
pop
adc
imull
not
fstpt
mov
mov
test
mov
cmpsb
lds
pop
data16
test
sbb
aam
ljmp
mov
push
stc
into
inc
cmp
cmpb
dec
xchg
jmp
clc
fwait
scas
ljmp
movsb
ss
mov
fdivl
push
fimuls
rcll
sbb
mov
insb
ffree
mov
subb
dec
xchg
jecxz
aaa
pop
cmp
es
ja
das
push
inc
in
test
arpl
push
and
adc
loop
inc
sub
cmp
rcr
xchg
mov
dec
loop
movsl
jle
and
mov
xor
jae
loopne
pop
xchg
xchg
cmpsl
adc
sbb
pop
insl
dec
fbstp
and
dec
cmc
cmp
jge
jl
push
pop
lea
cmp
and
aam
pushf
xchg
lahf
into
sbb
cmpsl
movsb
in
adc
pusha
icebp
mov
and
dec
out
cld
xor
je
sarl
nop
int
push
in
jp
jle
jmp
out
iret
imul
cmp
add
jl
insl
in
xchg
sub
mov
ss
pop
fdivp
push
xor
xor
xor
fisubrl
jno
je
pop
sbb
push
call
push
call
shll
xchg
push
mov
movsb
insb
push
lods
pop
fistpll
popf
add
nop
mov
jecxz
pop
nop
stos
xchg
dec
xchg
call
fists
mov
adc
dec
xor
mov
arpl
mov
rcl
sahf
and
fs
pop
faddl
pop
mov
inc
push
or
and
fisttps
les
mov
pop
test
xor
pop
lret
int
lods
popf
mov
into
dec
inc
call
or
jno
push
mov
out
fwait
clc
insl
dec
dec
cltd
jne
in
repnz
fimull
adc
mov
lcall
mov
das
jno
dec
lea
imul
dec
mov
mov
call
fidivrl
ss
movsl
lahf
sub
bound
test
jnp
aas
add
insl
lret
xchg
jecxz
fistpl
mov
lcall
jmp
xlat
jne
aam
or
push
leave
lret
stc
jo
jno
nop
sahf
lock
xchg
cwtl
lret
jne
mov
repz
add
jnp
insl
mov
cli
pusha
movsl
fisttpl
pop
in
ret
mov
jl
xchg
arpl
mov
scas
iret
sbb
lahf
jbe
inc
aas
in
sbb
lock
daa
push
ret
pop
sbb
xchg
gs
cmp
xor
lea
xor
loop
mov
jnp
mov
add
aad
sbb
add
fmulp
add
mov
add
imul
or
xor
inc
and
int3
sbbb
addr16
push
xchg
cltd
mov
inc
mov
sub
sub
pop
dec
popf
add
clc
jns
pop
inc
mov
and
dec
fiadds
loop
sbb
xchg
rcr
outsb
cmpb
pop
rorb
das
push
dec
int3
mov
mov
icebp
lock
int
loopne
jl
xchg
call
push
data16
test
clc
rcrl
test
xlat
out
inc
mull
inc
cmp
icebp
outsl
mov
mov
mov
scas
cld
test
and
ret
push
mov
push
mov
rol
bound
mov
hlt
push
icebp
mov
test
arpl
int
or
ret
sbb
mov
out
ret
out
std
scas
je
rcl
or
fadds
adc
or
in
rcrb
add
adc
push
out
mov
add
mov
push
inc
or
leave
mov
rcrl
cmp
fbld
add
stos
add
repnz
and
out
repnz
mov
sub
in
mov
insb
mov
inc
and
jne
sarl
sub
xchg
jb
inc
push
fs
in
stos
jp
arpl
dec
cld
cmp
aas
outsl
aam
jae
pop
jns
xchg
mov
sahf
mov
xchg
mov
or
push
prefetcht2
xchg
test
lret
cli
aam
shll
push
push
mov
test
orl
dec
or
shl
insb
or
inc
divl
cs
bound
into
xchg
dec
mov
mov
test
stos
in
pushf
mov
imul
pop
lret
add
jmp
cltd
mov
cmc
adc
inc
pusha
pop
jae
adc
dec
ja
aas
lcall
mov
stos
hlt
sbb
add
fistps
push
les
cmpsb
xor
lret
adc
jge
inc
xor
insb
mov
dec
stos
lods
into
adc
xor
test
jbe
mov
mov
fildll
sbbb
xchg
mov
push
cmp
in
pop
inc
mov
xchg
sarl
xor
flds
popf
mov
adc
fstpl
jmp
enter
or
cmp
pop
adc
adc
mov
js
mov
mov
mov
dec
add
pop
push
sub
sub
enter
addr16
mov
and
push
ss
mov
pop
xor
or
idivb
mov
mov
rcll
jl
xchg
insl
es
in
lret
arpl
mov
outsl
dec
jecxz
sub
fs
mov
imul
aas
cmc
xchg
cmp
xchg
mov
xlat
jo
xchg
rcr
push
mov
adc
mov
mov
test
or
pop
cmovle
lret
sub
adc
xor
cmp
pop
push
add
gs
and
cwtl
adc
ret
fsubrl
or
mov
jecxz
enter
adc
repz
imul
shrl
insl
je
jno
xchg
and
es
std
push
or
cs
inc
lds
loop
iret
mov
push
rorb
frstor
adc
mov
inc
in
loopne
std
in
lcall
pop
push
sub
ficompl
icebp
xchg
test
add
xlat
mov
repnz
ror
movsl
popf
lret
out
adc
push
jns
jnp
xor
iret
cmp
xchg
push
pop
add
into
fildll
xlat
and
mov
imul
mov
push
jge
insb
sbb
dec
add
sub
shrb
imul
int3
adc
fmul
icebp
mov
icebp
fcompl
add
mov
push
and
leave
in
xchg
ljmp
xor
mov
fwait
in
adc
inc
sti
pop
mov
or
daa
cmc
scas
mov
jns
push
lahf
lret
stc
ja
sbbb
loope
das
inc
jae
push
adc
xlat
push
sub
aaa
aas
mov
sub
sbb
sub
jecxz
add
add
pop
mov
mov
sbb
cwtl
adc
loopne
and
cmpsl
mov
inc
pop
pop
add
in
mov
in
ret
cmp
pop
in
stos
cld
adc
pop
push
jp
cmp
aad
push
mov
jno
push
lock
mov
mov
in
ljmp
lret
dec
or
push
jnp
xchg
int
and
ret
jge
loope
fiaddl
jno
sbb
int3
dec
das
dec
call
jbe
std
or
pop
cmp
jmp
add
int3
ret
int3
test
push
add
mov
int3
cld
movaps
popf
sbb
js
outsb
lret
lret
mov
add
mov
inc
sub
lods
cs
xor
dec
popa
lret
xor
push
jbe
and
mov
cmp
fcoml
mov
mov
cmp
jmp
frstor
scas
out
lea
pushw
adcl
and
arpl
xor
push
mov
sbb
jne
fcoml
xor
xchg
mov
outsl
lret
push
sbb
lock
sbb
xchg
xlat
inc
dec
ss
jae
pop
int
mov
pop
and
aad
cmc
dec
sub
les
int
inc
sub
and
jecxz
into
or
in
jae
mov
stc
dec
jle
mov
mov
add
mov
sub
nop
int3
scas
sbb
arpl
daa
jo
jmp
or
movsl
mulb
or
and
addr16
sbb
lods
ja
adc
add
jecxz
cmp
pop
cltd
pusha
mov
mov
xchg
dec
push
ror
push
out
sbb
jo
jp
mov
loop
xchg
aad
pusha
out
cmpsb
push
dec
out
shrb
out
lock
jo
dec
les
cmc
mov
cmp
mov
cmpsl
aam
mov
or
test
mov
add
repz
je
movsl
lds
inc
xchg
rcrl
rcll
sbb
std
inc
sub
outsl
adc
stos
jge
lahf
fdivl
pop
shlb
jae
xor
jnp
xchg
enter
movsl
int
jecxz
out
or
mov
adc
mov
cmp
or
mov
dec
pop
mov
bound
jmp
fst
add
mov
push
sub
adc
fisubrs
ljmp
cld
dec
cmpsb
xor
loopne
mov
aas
into
in
cmp
cld
dec
aad
je
mov
loopne
lea
lcall
lret
adc
mov
lods
aam
movsl
xchg
mov
inc
mov
scas
fists
mov
mov
shrb
je
adc
mov
fnsave
into
popl
aam
sub
out
js
inc
pop
int3
push
mov
xchg
ljmp
mov
push
test
andb
or
fdivr
imul
repnz
dec
pop
movsb
shll
xchg
aas
movsl
rcrb
imul
push
cwtl
test
mov
and
call
sub
sub
or
daa
je
sub
inc
or
bound
xor
lret
fisttpll
lea
arpl
loope
xor
cmp
or
xchg
rcrl
add
outsb
fnstenv
mov
addr16
je
xor
shlb
inc
mov
xchg
test
push
push
xor
cmp
scas
jno
data16
imull
inc
pop
dec
test
stos
movsb
aas
pusha
xchg
push
sbb
inc
xchg
dec
in
or
mov
xor
lret
adc
sbb
int3
clc
rol
lcall
sub
cmp
push
mov
pop
nop
dec
int3
scas
push
sbb
mov
sti
lahf
rolb
mov
sbb
sub
or
mov
loop
push
jecxz
ret
roll
push
mov
pop
dec
inc
cmp
daa
cmp
sub
mov
insl
xchg
adc
jmp
clc
xor
aad
aad
push
aas
mov
int
mov
xchg
xor
jecxz
loop
add
cmp
testl
arpl
pop
aam
addr16
xchg
daa
pop
popa
lods
mov
gs
outsb
lret
test
movsb
movsl
push
jmp
in
imul
jg
push
lock
mov
sbb
or
jae
ja
mov
fucom
jmp
xor
lret
dec
mov
jle
mov
imul
fisubrs
out
sbb
or
sti
push
jmp
fstpt
lret
dec
mov
jle
mov
imul
fisubrs
out
sbb
or
sti
push
jmp
fstpt
lret
dec
mov
jle
mov
imul
fisubrl
out
sbb
or
sti
sub
sbb
ds
dec
mov
decb
add
mov
aam
in
hlt
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
inc
inc
adc
and
mov
mov
jno
addl
adc
add
and
add
adc
and
xor
popa
movsl
add
adc
gs
scas
add
icebp
aad
lds
cmc
mov
xor
movsl
imul
add
jbe
insb
mov
movsl
add
jg
push
mov
push
jbe
fimull
xchg
test
jp
xor
sbb
scas
scas
orb
lea
shlb
and
mov
cmp
add
adc
cmp
ds
sar
push
or
adc
sub
cmp
loope
shll
rol
aad
or
push
lcall
je
lea
rclb
or
mov
cmpsb
jb
mov
lea
shlb
andl
lock
sub
xor
jne
dec
rorb
arpl
add
test
xor
and
mov
vpmaddwd
test
mov
inc
push
jne
gs
adc
loope
lahf
mov
bound
ds
adc
not
sbb
add
popa
scas
dec
movsl
pop
mov
xchg
inc
lods
adc
loope,pn
mov
fstpl
or
xchg
jbe
cmpb
mov
jno
push
aam
test
popa
movsl
jno
addl
adc
loope
icebp
aad
lds
cmc
and
xor
popa
movsl
jno
addl
adc
loope
icebp
aad
rol
xorb
aas
push
cmp
sbb
test
sbb
push
shrl
add
data16
lahf
pop
imul
cmp
cmp
scas
xor
mov
xor
dec
mov
les
lods
mov
popf
aam
iret
mov
popa
push
gs
jnp
add
mov
andl
sbb
andb
movsl
inc
leave
in
push
cmp
sti
and
or
jbe
pushf
mov
imull
jno
je
dec
scas
mov
lods
jmp
dec
inc
imul
loop
dec
lock
movsl
shl
dec
add
jo
into
or
push
test
gs
xchg
bnd
jae
hlt
or
lahf
ret
mov
or
fwait
fs
mov
cmpsl
push
cmp
das
aad
repnz
inc
xorl
enter
or
cmp
mov
jmp
xchg
mov
mov
cmp
add
push
xstore-rng
cmpsl
inc
fcom
aam
lahf
sbb
fstpl
cltd
ror
shrb
pop
xchg
inc
jo
or
mov
adc
cs
loopne
in
cli
cmp
std
in
xor
lds
cltd
popa
push
push
jbe
xor
pop
adcl
adc
mov
sbb
stos
enter
in
cmp
flds
xchg
lea
xchg
inc
std
adc
fsubrs
mov
sti
repz
add
fldt
aam
push
fwait
shrl
add
mov
or
aas
pop
rorb
lods
mulb
push
into
scas
ds
xorb
insl
leave
cltd
xorb
pop
sub
or
imul
rclb
insl
sub
mov
or
mov
test
push
bound
insl
sbb
ficoms
mov
jmp
dec
icebp
js
xchg
push
dec
sahf
nop
aaa
xor
and
mov
jge
sbb
scas
jl
bound
sarl
mov
mov
pop
roll
bound
jg
or
inc
jnp,pn
int3
call
ds
es
addl
or
cmpsl
mov
mul
mov
push
sbb
std
mov
xor
cld
cmc
sbb
sub
jbe
mov
jmp
xchg
rclb
fisttps
or
paddb
add
sub
repnz
test
sti
lock
adc
mov
xchg
leave
mov
leave
and
sub
les
mov
mov
pop
add
imul
cmp
ror
add
cltd
mov
imul
inc
cmc
push
rol
inc
insl
movsb
dec
dec
sti
mov
inc
inc
add
cwtl
jne
out
and
decl
repnz
xor
stos
xchg
cmp
and
jnp
or
arpl
popa
jmp
and
aas
mov
sbb
and
cld
dec
cli
sbb
xor
inc
out
jnp
popf
mov
idivb
nop
in
jo
xor
ljmp
adc
xor
adc
out
rol
mov
sub
int
subl
adcl
inc
psrad
cs
or
push
push
inc
and
dec
push
fcoms
addl
dec
js
cmp
sbbb
cs
sub
xor
cmp
ja
cmp
movsb
iret
stc
push
ret
out
int3
mov
fcoms
adc
mov
adc
stos
mov
mov
mov
lods
shll
pop
aas
xchg
fstl
mov
ret
jge
sbb
mov
dec
and
or
cmp
fdivr
xchg
xchg
sub
pop
repnz
dec
pop
scas
mov
mov
sbb
push
mov
sbb
fcmovne
shrl
sub
cmc
mov
cwtl
mov
lret
in
loopne
xchg
dec
sub
mov
repz
punpckhdq
mov
dec
sahf
jae
mov
mov
aam
push
lock
stc
xor
int3
mov
sub
outsl
adc
mov
stos
cmp
sahf
dec
outsb
inc
inc
dec
out
fcoms
jo
dec
dec
hlt
rol
add
scas
fsubl
pop
xor
sub
jne
adc
xor
addr16
adc
addr16
imul
lret
adc
mov
in
push
and
movsb
bound
pop
pop
push
push
sub
pop
mov
mov
add
in
cmp
jae
push
gs
movsb
adc
movsb
cmp
sbb
mov
sub
inc
jmp
push
and
cmpsb
hlt
xchg
aad
test
mov
loopne
fdivs
add
lret
outsl
aam
in
adc
mov
mov
loopne
fildl
xor
pop
push
aam
roll
rclb
pop
enter
xchg
fdivs
je
addr16
pushf
fincstp
aaa
xchg
sbb
incb
mov
call
mov
jnp
gs
push
scas
insb
push
stc
repnz
pop
jne
cli
sub
gs
or
icebp
mov
jb
stc
pop
dec
test
and
cltd
pop
push
repz
in
dec
loope
bound
cmp
gs
sti
mov
test
sbb
out
jns
test
pop
mov
test
dec
lds
adc
xchg
xor
mov
push
mov
push
vrcpss
stos
ret
add
mov
xor
jno
mov
adc
bound
fidivrl
mov
or
mov
std
pushf
call
cmp
pushf
iret
sbb
and
dec
in
scas
mov
mov
mov
mov
jns
xor
out
cmc
aas
out
cmc
xchg
mov
cmpsb
aad
imul
orb
fstpt
mov
sub
dec
mov
mov
shlb
or
add
inc
adc
int
lret
jge
dec
outsb
test
push
xchg
movsl
inc
xlat
cld
fidivs
stos
add
test
cmc
gs
or
popa
fidivs
xchg
mov
sub
and
cli
xor
loopne
jae
sub
and
sub
icebp
hlt
mov
xorl
data16
inc
pop
mov
dec
mov
and
pop
and
outsl
inc
and
dec
sub
sbbl
popa
jmp
data16
repz
fbld
add
cmp
push
mov
es
mov
or
push
je
fistpl
cs
shlb
stos
in
cmp
sub
scas
mov
push
pop
adc
cmp
mov
pop
fildl
std
pop
data16
pop
inc
ret
insl
pushl
ret
repnz
cli
dec
imul
cmp
add
xor
imul
xchg
mov
mov
mov
adc
jmp
rclb
movsl
in
push
or
loope
xchg
rcll
stos
xor
mov
pusha
and
int
or
enter
push
fs
xor
xor
sbb
movsl
inc
pop
cmp
add
xchg
pop
adc
fisubrl
decl
jp
imul
sub
popf
mov
sbb
mov
mov
int
lahf
scas
inc
mov
cmp
pop
jo
sub
ror
mov
push
or
rorl
sub
xchg
cmpsb
pusha
pop
lods
mov
pop
hlt
je
aam
iret
add
jmp
ret
rol
or
mov
in
aaa
cwtl
test
inc
mov
insl
je
pop
movsb
cmc
iret
xor
mov
hlt
jl
add
push
mov
movsl
push
mov
inc
and
test
cltd
inc
dec
rorb
stos
pushf
fcoms
aad
int3
outsl
js
mov
push
jge
clc
mov
movsl
push
cli
hlt
cltd
adc
test
sub
mov
jnp
stos
loopne
mov
sub
jl
call
xchg
and
push
mov
push
ret
mov
mov
add
aaa
inc
imul
xor
in
add
ja
push
in
adc
push
dec
cmc
jno
scas
push
cmpsl
test
mov
mov
dec
mov
mov
xlat
lahf
fildll
sarl
pop
adc
mov
mov
inc
jecxz
add
test
mov
in
stos
mov
call
mov
add
pop
pop
xor
adc
lods
jmp
jb
mov
test
add
or
loop
adc
stos
cld
pop
mov
outsl
mov
in
mov
cwtl
iret
bound
sbb
mov
lods
lods
movsb
lods
fwait
mov
xchg
jbe
imul
in
stos
fsts
cs
xor
sahf
roll
sub
sub
inc
jb
mov
push
hlt
jns
lods
mov
sahf
and
ficoms
push
push
jns
lret
xor
sarl
loopne
popa
mov
mov
lahf
sbb
sti
add
mov
xchg
push
add
in
test
fistl
push
push
cmpsb
leave
pop
pop
fwait
pop
jae
lret
pushf
mov
ljmp
lret
iret
mov
or
addl
cmp
rep
pop
pusha
pop
pop
test
data16
or
cmp
jno
aad
je
sub
add
int
mov
sbb
sub
jae
out
push
test
xor
fnstenv
testb
ret
cmp
xchg
icebp
dec
sub
and
cwtl
cmp
inc
mov
das
cli
push
scas
clc
sub
add
lcall
pop
cmp
xchg
out
rorl
stos
ds
and
add
dec
repz
popa
shll
pop
fstps
add
rolb
adc
sub
mov
into
ds
scas
pop
dec
sub
dec
dec
enter
scas
lock
xchg
in
fisttpll
out
jo
and
into
shll
in
lock
xchg
push
repnz
cli
fistpl
scas
xlat
sub
inc
mov
lds
and
test
sub
sub
cmp
mov
daa
dec
push
jmp
xchg
fistpll
inc
paddsw
mov
je
adc
es
je
imul
and
dec
sbb
push
push
dec
or
jg
or
movl
or
sub
cmp
js
adc
mov
xchg
aas
sbb
sahf
ret
inc
out
nop
test
mov
mov
and
cmp
mov
sbb
push
xor
fninit
das
ja
nop
jecxz
jb
inc
jae
ret
insl
xor
mov
fiaddl
cli
scas
mov
jl
mov
mov
add
mov
test
insl
xchg
pop
repnz
imul
aas
mov
scas
fisttpll
idivb
leave
mov
xchg
add
leave
inc
sub
adc
mov
and
stos
cwtl
mov
jmp
add
lock
sbb
dec
xchg
mov
loopne
xchg
cmp
push
out
push
rcll
mov
dec
cld
inc
xor
xchg
test
jbe
inc
jp
jae
fwait
and
add
xchg
adc
fs
ja
aam
test
push
pop
xor
sub
testb
in
into
xor
dec
mov
xchg
pop
ret
adc
movsb
pusha
xor
cmp
pop
mov
push
cmpsb
add
xor
popl
popa
fwait
inc
rclb
or
adc
ret
push
push
iret
dec
pop
and
sub
adc
lea
les
sbb
incl
rcr
pop
xor
pop
push
idivb
add
jmp
fldt
mov
negb
jno
push
aad
jne
imul
mov
xorl
stc
sbb
cs
ljmp
cs
repnz
shlb
iret
jo
orl
xor
jns
ljmp
in
xchg
xchg
fcompp
fwait
and
push
fdivr
adc
ret
dec
mov
out
jle
shl
jno
cmc
cmp
js
mov
add
cmp
lahf
das
xor
iret
pop
mov
test
lea
movsl
inc
std
out
mov
test
faddl
and
pop
jae
movl
and
fildl
repz
cmp
pop
cmpsl
push
or
adc
test
or
mov
adc
xor
adc
movsb
daa
insl
jmp
pop
fnsave
xchg
aad
popa
and
xchg
mov
or
cmp
xchg
and
idiv
adc
mov
lret
push
fwait
mov
pop
add
mov
pop
mov
lret
repnz
cli
cmp
pop
icebp
das
call
xchg
jmp
mov
or
adc
cmp
adc
pop
les
inc
jne
sub
pop
dec
pop
mov
scas
sub
jo
subl
jnp
inc
test
jle
sbb
loope
mov
call
cli
push
mov
lods
add
pop
jo
out
push
push
adc
xlat
je
cmp
jge
dec
inc
pop
stos
aam
int3
push
or
mov
scas
inc
int3
loopne
popf
pop
mov
inc
pop
push
out
jbe
es
mov
bound
mov
mov
mov
popa
orb
jge
roll
inc
adc
push
add
lds
push
or
shl
fwait
je
mov
cmp
js
inc
inc
pushf
sub
fcomps
scas
xor
pop
adc
push
popa
sti
lret
push
jae
mov
inc
outsb
push
sbb
mov
call
push
cmpsl
arpl
cwtl
dec
pop
cmpsl
test
std
jmp
mov
add
mov
cwtl
fdivrl
add
inc
stos
jb
dec
stos
notb
jl
sub
pop
js
xor
orb
inc
mov
imul
jg
mov
xor
or
push
pop
jp
pop
fistps
fcmovb
jle
xchg
popa
or
rcll
loop
outsl
mov
adc
out
fwait
mov
rcrl
stos
test
jl
prefetchwt1
testb
in
xchg
imul
cmp
cmovne
pop
xor
or
lret
sbb
repz
loope
add
xor
dec
ret
or
sbbl
clc
aaa
repz
jne
fadds
cmp
pushl
or
adc
lock
lret
cltd
push
cs
xorb
mov
inc
pop
jp
dec
cwtl
mov
jecxz
fwait
mov
mov
ret
popa
mov
aad
cmp
mov
mov
nop
cmp
mov
and
aas
mov
cmp
aad
jne
xchg
rcrb
test
dec
rol
mov
mov
xchg
mov
adc
add
in
test
lret
ja
enter
int
test
daa
push
insl
push
loopne
xchg
inc
dec
jbe
dec
mov
adc
out
imul
aam
in
and
sahf
mov
and
sub
adc
and
lcall
imul
aad
sub
mov
daa
ret
orb
imul
incl
fs
or
mov
mulb
lret
mov
pushl
xlat
js
cmpsl
push
jp
sbb
es
jmp
jecxz
cmpsl
mov
les
daa
inc
in
scas
loop
jp
fwait
pop
daa
test
adc
xchg
outsb
sbb
pop
ds
mov
clc
fcmovnb
jg
pop
mov
adc
loopne
leave
jns
jecxz
movsl
repz
mov
out
or
nop
call
or
mov
testb
addr16
lds
test
cmc
aad
jecxz
sbb
stos
xchg
dec
add
int3
sub
xor
sub
mov
pop
cmpsb
cmpsb
fisubrs
pop
jle
int
fstps
jno
cli
jl
mov
mov
pushl
imul
test
xchg
xlat
xor
or
or
dec
mov
movsb
stos
divl
mov
int3
sub
fs
dec
mov
pop
scas
out
and
out
pop
je
in
xchg
mov
mov
inc
sub
mov
mov
filds
rcll
mov
cmp
push
out
xchg
mov
sub
xor
inc
mov
rorb
sahf
sub
scas
mov
jp
fwait
dec
pop
movsb
adc
fistpll
fisubrs
movsb
ret
fstpl
out
outsl
pop
mov
in
xchg
aam
outsb
jo
out
in
dec
pop
loop
ret
lds
sbb
sbb
add
sbb
xor
xor
adc
leave
mov
lea
cmc
pusha
dec
cmp
mov
out
jno
ret
lret
frstor
cmpsb
outsl
jnp
addr16
ds
aam
hlt
add
iret
adc
stos
ja
scas
movsb
mov
pop
aam
nop
pop
dec
cmp
jg
out
push
dec
lods
add
jne
or
lods
stc
sub
pushf
mov
sbb
scas
loope
or
fisttpl
repnz
dec
push
cmc
cwtl
lods
xor
pop
fiaddl
lds
sbb
pop
pusha
mov
xor
out
loopne
aaa
sbb
bound
pusha
imulb
inc
adc
adc
flds
test
jns
mov
jmp
ja
pop
fbstp
pop
xchg
das
in
testb
sub
pop
lods
testl
mov
iret
clc
mov
sub
cmpsl
cmp
mov
jbe
cmp
or
jge
adc
scas
xor
fwait
cmp
into
mov
stos
mov
cmp
mov
aas
sub
sbb
jl
std
or
fnstcw
les
fstp
mov
and
xchg
jno
mov
mov
pop
outsl
xlat
shll
push
mov
mov
and
mov
cmc
jnp
dec
mov
sub
xor
xchg
lds
and
pushf
aam
movsl
cwtl
andl
cmp
dec
imul
mov
js
in
cmp
rol
std
mov
and
ret
jae
loop
in
call
fcmovnbe
sbb
and
stos
aad
dec
hlt
cmp
rorb
push
xchg
std
aas
push
inc
add
lret
cld
push
movsl
pushf
daa
dec
jmp
cmp
sub
and
out
inc
out
daa
scas
jae
outsb
mov
test
push
int3
unpckhps
inc
sbb
xor
mov
outsl
popf
xor
jp
lock
mov
or
push
xchg
pop
pop
shlb
xor
push
outsb
mov
push
jno
jbe
mov
stos
cmp
movntq
out
int
cmp
test
adc
insb
inc
in
push
clc
arpl
test
mov
sub
inc
and
and
pop
pop
xchg
xchg
fiaddl
arpl
pop
jbe
decb
jbe
pop
sub
ficoms
sarb
outsl
xor
pop
imull
sbb
fisubl
out
in
out
sbbb
pop
push
aad
cmp
wbinvd
sub
jo
push
xlat
jmp
or
mov
cwtl
mov
loop
jg
xchg
push
pop
cmc
push
pop
mov
mov
andb
mov
ficoml
dec
fisubs
mov
std
sbb
mov
jae
sbb
cmp
lods
xchg
jl
or
pop
hlt
sub
ljmp
xor
push
cmc
jb
mov
lcall
call
adc
xor
imul
cs
fisubs
call
adc
mov
dec
pop
mov
stc
test
and
ljmp
mov
idivb
push
inc
loopne
jb
loop
bound
push
pushf
sub
cli
jl
sub
mov
mov
imul
adc
cld
pop
dec
sub
repz
and
jnp
add
movsb
jae
int
cmp
sti
mul
ss
jnp
jecxz
int
push
mov
out
inc
fcompl
lods
jl
sahf
jl
ss
imul
mov
nop
and
jle
out
leave
loopne
in
shrl
loopne
mov
adc
inc
dec
ds
rcll
jle
shll
sub
inc
sbb
das
cmc
mov
sub
pop
or
and
push
cmp
pop
pop
fisubrs
int
stc
mov
dec
xor
mov
lret
dec
xchg
fsubs
stc
scas
loop
pop
imulb
add
nop
shlb
andl
jge
add
cld
sub
andl
and
rorb
or
sub
pop
fyl2xp1
adc
dec
adc
mov
add
mov
icebp
aas
leave
lcall
int
adc
jg
mov
das
or
insb
and
pusha
movsb
shlb
shlb
scas
lods
dec
clc
repnz
mov
fldcw
movl
inc
pop
jbe
cmp
out
test
push
adc
cwtl
divb
dec
xchg
sub
push
addr16
xchg
adc
imul
repnz
aad
jg
into
es
call
xor
fildl
push
outsl
out
mov
lret
pop
repz
push
pusha
mov
daa
stos
mov
add
mov
adc
lods
std
ret
ja
enter
inc
add
andl
cmp
push
jno
dec
push
mov
lock
jecxz
in
xchg
inc
test
popa
movsl
jno
addl
adc
loope
icebp
aad
lds
cmc
and
xor
popa
movsl
jno
addl
adc
loope
icebp
aad
lds
pop
in
xchg
inc
test
mov
movsl
jno
pop
inc
xchg
jne
gs
roll
aam
les
hlt
and
xor
loope
jno
jle
cmp
mov
lea
lret
push
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
cmc
xor
data16
push
movb
push
aam
mov
test
cmp
lods
push
cmpsb
inc
xchg
repz
push
xchg
ss
mov
jbe
xchg
push
xchg
mov
cmpsb
aaa
sahf
inc
xchg
es
push
dec
nop
adc
inc
mov
jo
inc
mov
adc
and
pop
movsl
push
addb
mov
inc
scas
arpl
aad
xchg
cmp
lret
insl
jae
es
sbb
push
bound
cwtl
arpl
in
sbb
adc
imul
mov
pop
mov
idivb
out
sahf
cmpsb
mov
and
inc
js
add
cmp
sub
mov
xor
sub
dec
bound
lret
ja
inc
shrb
xchg
jecxz
imul
push
mov
imul
pop
stc
dec
inc
cs
xchg
in
push
jbe
jbe
pushf
es
test
dec
or
jnp
xlat
arpl
dec
cmp
imul
neg
inc
mov
mov
cmp
push
movb
jbe
xchg
push
and
mov
cld
push
and
or
push
hlt
lahf
ss
dec
mov
ror
or
and
xor
and
inc
mov
mov
arpl
movsb
cmpsl
push
and
xor
aas
shll
xlat
xor
push
les
mov
mov
inc
mov
inc
mov
mov
xchg
push
cmp
inc
jbe
data16
push
xchg
inc
xchg
mulb
out
push
divb
out
push
movb
jbe
xchg
push
xchg
mov
cmpsb
push
xchg
inc
xchg
mulb
out
push
divb
inc
jo
imul
jns
dec
outsl
clc
jmp
pop
stc
xchg
fdivl
adc
pop
iret
mov
icebp
scas
je
jno
xor
pop
in
icebp
shll
outsl
jl
sbb
enter
nop
jbe
pop
jo
or
push
lret
push
insb
jne
fisubrl
add
dec
push
popa
cmp
fwait
ror
rcrb
out
mov
insb
dec
cmp
add
mov
sbb
or
mov
aaa
xlat
jne
bound
flds
jmp
dec
leave
cmc
add
xor
pop
cmp
aaa
push
xchg
icebp
xchg
lock
inc
scas
adc
lods
pop
inc
or
mov
xor
add
int
mov
mov
imul
scas
daa
or
loopne
ret
mov
xchg
cmp
xchg
jle
pop
pop
ds
push
pop
cltd
imul
push
add
inc
fs
dec
mov
call
mov
test
mov
hlt
loope
sarb
cmp
ss
ret
mov
sahf
add
std
jbe
je
in
xor
xor
xchg
mov
fldt
cmp
jae
movsl
dec
add
push
inc
push
and
test
push
sub
or
sub
test
sbb
push
popf
rclb
sarb
test
cmpsl
lods
clc
ja
pop
iret
jl,pn
or
loopne
inc
stc
data16
rolb
movsl
mov
jl
bound
scas
push
push
ret
inc
cmp
movsb
dec
sbb
mov
jbe
dec
inc
pop
out
sbb
or
cmp
sub
dec
jns
mov
push
mov
sbb
pop
and
pop
das
shlb
repz
and
or
cmp
and
add
imul
lcall
mov
mov
rcrl
dec
ja
fldcw
sbb
stos
push
mov
push
xchg
lds
jl
iret
add
mov
jbe
icebp
pop
inc
jae
and
dec
lcall
shl
iret
jnp
into
loopne
sbb
add
sbb
pop
mov
ret
out
popa
jmp
mov
push
dec
out
cwtl
sahf
leave
push
dec
out
and
imul
mov
jmp
movsl
ljmp
sub
mov
xchg
dec
inc
inc
call
arpl
or
cmp
js
clc
mov
pop
lret
add
lea
in
imul
and
out
popf
fcmovu
xor
cwtl
out
inc
test
lahf
add
sbb
add
loopne
js
hlt
xchg
cld
clc
daa
xchg
mov
add
cmp
lds
loopne
pop
push
jns,pt
stos
jbe
arpl
dec
mov
sbb
or
cld
pop
push
xor
push
mov
or
add
test
movsb
dec
shl
mov
scas
xchg
xor
sub
pushf
add
lods
add
out
xchg
loop
mov
arpl
xor
add
loope
les
fildll
repz
sbb
mov
mov
in
insl
bound
bnd
in
sub
xchg
scas
insl
test
leave
xor
psubsw
ret
jmp
mov
cmpsb
inc
xor
imul
imul
mov
xor
push
test
add
out
adc
mov
dec
mov
popf
movsl
fldl
stos
pop
jl
cmpsl
or
sub
push
mov
pop
in
jbe
cmpsb
xchg
out
incl
arpl
shlb
lahf
ret
push
shrl
cmp
fadds
dec
sbb
dec
outsb
es
flds
mov
xlat
lahf
fwait
aad
and
or
js
inc
xor
in
jo
into
jno
fwait
and
xor
sub
and
xor
decb
hlt
pop
lock
mov
or
mov
adc
sub
scas
out
stos
pushf
and
stos
test
lret
rolb
xor
push
jl
cmp
xchg
in
mov
test
cmp
cmp
aaa
shll
xor
rcr
vmptrst
test
jge
ret
cmc
xchg
in
jl
inc
mov
xchg
add
into
scas
pop
faddl
ss
mov
mov
pop
sub
push
adc
lods
ja
bound
stc
cmpsl
repz
lcall
cmp
xor
mov
bswap
xchg
aas
jl
stc
cmpsl
sub
xor
lret
cs
lret
mov
ret
pop
jns
xor
cwtl
jle
jae
cmp
sbb
push
xchg
out
test
lcall
fcompl
adc
cmp
fstpt
pop
aam
ret
pop
mov
xor
cmp
pop
push
outsl
add
repnz
stos
lock
jbe
inc
or
pop
sbb
hlt
cmp
mov
lock
sub
cmp
jbe
adc
ds
xchg
xor
xchg
lods
popl
movsb
pop
jmp
push
dec
js
inc
call
sbbb
pop
insl
jb
les
shlb
mov
jmp
mov
in
ljmp
xchg
mov
out
push
pop
jnp
sbb
mov
mov
fldt
outsb
jg
call
testl
adc
mov
lea
cmpsb
xorl
or
decl
lea
sub
and
jne
jmp
xchg
jbe
cld
aam
and
and
dec
adc
dec
add
jb
push
xchg
dec
stos
call
sarl
clc
dec
dec
shr
gs
mov
out
xor
jg
pop
lret
insl
ds
mov
icebp
mov
sub
cltd
daa
cmp
xchg
add
clc
mov
cli
pop
jno
xchg
mov
lcall
orl
mov
mov
cld
mov
pop
mov
xor
ljmp
jmp
or
dec
mov
pop
mov
mov
dec
xor
in
lods
jecxz
test
push
add
pop
cmp
scas
loop
xchg
pop
cmc
stc
mov
insl
push
push
scas
inc
mov
in
jnp
aaa
aaa
out
aas
outsl
mov
stos
pop
jp
add
push
pop
stc
jmp
arpl
leave
pop
xorl
mov
add
lods
sbb
ja
cmpl
addr16
mov
and
aas
outsb
hlt
fcmove
lods
jge
mov
ret
or
idivb
cmp
jg
pop
je
jb
cltd
mov
dec
push
jne
je
gs
fdiv
insl
push
pop
lea
aam
test
leave
jno
call
outsb
fwait
sahf
jno
mov
mov
fprem
fsubr
mov
jae
cs
pop
and
mov
aad
popf
inc
das
pop
fs
ds
iret
pop
mov
adcb
pusha
adc
outsb
lods
cmp
pushf
dec
pop
or
xchg
xlat
push
pop
add
aam
mov
sbb
add
jns
out
push
xchg
xchg
dec
iret
rcrl
test
mov
sar
dec
mov
stos
push
sub
mov
jmp
insl
push
mov
pop
fwait
cs
daa
jns
cmpsl
fidivl
jne
mov
push
insl
xchg
fidivrs
xchg
inc
fdivrs
mov
je
push
into
adc
lock
icebp
ret
movsb
xchg
pop
enter
cmp
sbb
pop
lcall
fs
decl
pop
dec
inc
sub
mov
mov
dec
mov
pusha
adc
scas
mov
fistpl
fisubrl
jmp
clc
mov
inc
push
leave
sbb
inc
sbb
pop
cld
enter
mov
push
adc
jno
or
adc
iret
add
ss
rclb
lret
xor
into
out
in
pusha
cmp
cmp
sub
jg
test
xchg
insl
or
mov
ss
xchg
addl
cmp
mov
les
sbb
xchg
loop
jno
pushf
das
pop
call
cmp
sahf
add
clc
call
jns
out
pushl
sbb
mov
dec
push
jecxz
repnz
and
push
cli
test
insl
les
mov
iret
inc
inc
in
cwtl
test
jle
push
or
pop
sub
jl
lods
sahf
adc
aad
mov
push
lods
fmull
mov
push
ret
mov
in
jb
movsb
in
mov
inc
push
stos
and
xchg
loop
out
bound
adc
cmp
mov
mov
popf
add
mov
push
lret
and
gs
in
clc
ljmp
xchg
jmp
jle
rcrb
adc
dec
jno
popa
mov
pusha
pop
ret
in
pop
in
insb
test
rcr
mov
or
push
xor
jmp
mov
mov
bound
dec
fidivs
repnz
imul
mov
in
mov
sbb
add
mov
sbb
push
push
gs
and
dec
mov
dec
mov
nop
daa
icebp
push
repz
aam
lret
cmpsb
popa
push
jecxz
stos
insb
pop
orb
scas
flds
add
movsl
dec
imul
jle
push
xor
add
rclb
data16
fcmovb
jo
leave
pop
cmp
lea
jne
inc
pop
pop
push
lods
popa
inc
fdivl
push
add
outsb
call
into
movsl
xchg
add
mov
and
or
dec
inc
js
push
xchg
ret
rcrl
push
cld
push
pushf
mov
ljmp
cli
daa
push
jle
inc
and
test
mov
sbb
data16
imul
jg
cmp
lahf
lods
and
jle
loopne
idivl
xchg
stc
inc
cmp
roll
scas
outsb
mov
stos
aas
testb
insb
jge
stc
ret
jg
andl
gs
call
and
int3
cli
lods
xchg
js
adc
sub
loop
and
jnp
mov
jo
mov
test
popf
or
dec
xor
inc
sarb
test
bound
out
ljmp
jmp
sbb
in
mov
adc
jp
das
jno
xlat
push
je
jo
enter
enter
jno
out
mov
mov
mov
xor
jno
mov
repnz
add
push
fs
adc
dec
dec
mov
sub
stos
sub
push
sub
fnstenv
int
popa
sbb
pop
lret
add
xor
cwtl
mov
call
call
lock
int3
add
sub
out
mov
data16
add
ficoml
inc
sbb
notl
fxch
ds
xor
inc
sbb
sub
push
ret
xchg
sbb
pop
and
adc
xchg
adc
and
dec
lea
pop
ja
test
push
jbe
aaa
jle
jb
lea
jp
sub
mov
jecxz
test
dec
sub
sbbb
dec
push
fildll
cmpsl
and
mov
imul
sbb
push
xchg
into
daa
clc
xchg
sub
ret
pop
xor
lcall
pop
add
sub
push
outsl
inc
mov
sbb
cmp
ljmp
gs
outsb
popa
and
pusha
cwtl
pop
sbb
call
stc
out
xor
cld
call
dec
int
add
movsb
mov
flds
adc
into
out
inc
inc
gs
shll
jle
lcall
or
xorb
xor
add
loope
stos
mov
into
push
dec
cmpb
ss
mov
stc
jge
add
pushf
jmp
data16
push
and
fwait
insb
sahf
dec
mov
and
mov
sti
hlt
jno
lcall
imul
push
dec
mov
dec
cmc
xor
cmc
lcall
aad
mov
xor
sbb
push
xchg
push
inc
ret
sarb
cld
cmp
pop
cmpxchg
aaa
pop
loop
fimuls
mov
jmp
adc
lods
repnz
pop
cmp
jg
or
mov
push
hlt
ror
sub
xorps
pop
out
jmp
clc
out
jmp
loope
adc
test
es
adc
insl
xchg
adc
mov
sbb
mov
or
cmp
rcrb
lods
adc
or
sbb
fisubs
push
in
test
adc
scas
sahf
dec
push
cwtl
and
add
cmp
inc
push
adc
ljmp
pop
popf
xchg
xor
jg
adc
aad
or
dec
out
adc
insl
in
daa
aad
adc
cmp
sub
shrl
fisubl
cmpsb
popa
push
test
lahf
or
fsubrl
and
jnp
arpl
pop
adc
jg
push
pop
hlt
xchg
push
fwait
mov
xchg
int
imul
lahf
and
xchg
fwait
sub
xor
mov
outsb
stos
outsl
add
xchg
stc
int
jbe
insl
pop
xchg
pop
sbb
cmc
jb
and
je
xor
iret
cmpsb
pop
and
mov
inc
xchg
scas
in
ret
ret
mov
or
inc
and
push
cmc
or
std
insl
pop
int
mov
mov
xor
add
xor
ds
pop
pop
mov
and
inc
sbb
addr16
jo
xchg
xlat
xor
mov
cmpsl
popf
lcall
popf
je
add
push
repz
addr16
mov
addr16
nop
fisttpll
mov
das
adc
vpunpckhwd
scas
xor
mov
ds
cmp
mov
cmp
xor
es
stc
sbb
sub
dec
dec
or
ss
test
inc
into
dec
ret
leave
mov
sub
push
pop
test
lret
test
jge,pt
mov
cli
jp
mov
mov
mov
mov
push
repz
lret
je
and
pop
lods
push
cmp
jo
cmpsl
pop
fwait
or
inc
sbb
xchg
xchg
ljmp
sarb
lods
out
bswap
push
or
mov
inc
mov
push
mov
xchg
xchg
xchg
hlt
jne
icebp
or
add
movsl
add
sub
fimuls
jo
mov
sbbb
aam
mov
fiaddl
lods
inc
jbe
scas
jne
jns
lcall
aas
dec
mov
or
xlat
push
mov
mov
fdivs
sbb
cmpsl
mov
xor
shrl
repnz
xchg
es
test
lahf
inc
dec
stc
push
fcompl
lods
call
add
sti
push
and
sub
and
jmp
leave
dec
aas
mov
pop
std
mov
cwtl
jae
icebp
inc
add
and
dec
inc
jle
aam
jbe
dec
lock
mov
pop
loope
push
mov
and
xor
cld
cmpsl
js
loop
das
pop
mov
or
cwtl
cmc
repz
sbb
adc
cmpsb
jbe
push
iret
shll
shrb
or
pop
push
sbb
int3
inc
mov
pop
test
nop
cs
and
jecxz
inc
popf
mov
xor
sbb
adc
test
push
in
sub
repnz
pop
outsl
lods
add
aaa
dec
mov
mov
pop
dec
add
fistps
int
adc
push
xchg
adc
add
cmc
stos
push
lret
inc
rorb
in
push
cmc
push
and
or
mov
mov
xor
and
repnz
jae
lods
sub
mov
inc
movsb
push
xchg
sub
push
cmpsl
dec
sbb
pop
mov
hlt
sbb
sbb
mov
dec
xchg
fimull
cmpl
push
adcl
nop
and
pop
sahf
dec
test
jge
xchg
mov
xor
hlt
or
pop
pop
xchg
push
filds
push
xlat
lods
push
fucomp
push
push
dec
int
insb
mov
data16
xchg
mov
mov
or
pop
es
repnz
add
mov
push
dec
sbb
in
sbb
flds
sahf
pop
mov
leave
jl
cltd
cltd
mov
or
push
stos
out
rcll
push
dec
push
xchg
add
stc
dec
out
adc
lret
jmp
enter
inc
lcall
fs
scas
or
enter
aam
jbe
push
sbb
pop
out
dec
ljmp
inc
ds
negl
jns
xchg
mov
decb
out
xor
fcoml
xchg
mov
add
pop
adc
jge
push
out
jae
mov
pop
adc
sti
ret
xchg
aad
mov
dec
fs
pop
test
mov
in
mov
xchg
andl
outsb
and
movsl
hlt
mov
and
mov
xor
movsl
dec
and
test
cmp
inc
fisubrl
or
mov
dec
and
inc
xchg
aad
in
xlat
sti
stc
repz
push
daa
sub
cmpsl
cmp
lods
popa
daa
pop
sub
clc
sbb
jge
rcrb
push
lock
lds
push
push
aam
loop
cwtl
fstpl
mov
add
dec
pushf
xor
cmc
imul
push
hlt
ss
pop
lret
cmp
outsb
add
mov
mov
inc
sub
mov
aam
movsl
cmp
mov
inc
ljmp
push
xchg
mov
stc
dec
inc
push
test
addb
lods
mov
ljmp
clc
cmp
mov
icebp
fcmovne
mov
out
dec
and
mov
ds
jl
mov
push
jg
aam
push
lahf
ja
push
mov
fists
cs
mov
jmp
int3
sbb
or
movsb
cmp
dec
add
xor
xor
adc
pop
in
or
cltd
xor
mov
in
sbb
call
in
insb
fbstp
jg
fs
in
mov
lods
mov
lea
clc
jns
adc
push
mov
sbb
gs
adc
std
adc
cmp
push
loope
mov
iret
jg
mov
cltd
adc
lret
rorl
cmpsb
jb
and
repz
push
add
push
xchg
adc
je
filds
lea
or
test
mov
mov
xchg
cmpsl
fcmovbe
push
pop
inc
sti
jb
ds
arpl
in
jp
lahf
mov
ds
sbb
scas
dec
push
xchg
jg
pushf
add
pop
repz
mov
mov
fimull
aaa
pushf
es
inc
push
ljmp
imull
icebp
inc
add
ss
push
in
pusha
xor
out
arpl
repnz
pop
pushf
push
sub
cmp
xchg
lods
lods
into
push
mov
arpl
das
imulb
mov
insb
mov
enter
dec
jle
or
fisubl
inc
pop
pop
fisubrl
push
orl
ss
lods
jo
arpl
or
push
add
cwtl
jg
push
mov
add
pushf
jg
jb
cmp
in
push
add
or
stos
ret
jmp
mov
and
in
push
lock
push
mov
mov
movsb
mov
jecxz
pop
clc
lds
repz
rclb
sub
and
xlat
adc
fisubl
inc
jne
lods
jecxz
icebp
mov
fwait
mov
inc
rcll
cmp
and
push
xchg
mov
jo
push
push
push
sbb
xchg
xchg
and
lcall
push
nop
imul
mov
out
arpl
mov
cmpsl
xor
and
int3
call
jno
test
xlat
sahf
adc
mov
mov
jae
xchg
adcb
or
mov
test
lret
mov
mov
out
cmp
or
mov
mulb
cmp
mov
and
bswap
insb
jecxz
jge
mov
push
rolb
xchg
sbb
pusha
xor
sti
sub
push
in
das
pop
or
outsb
sbb
fdivrs
aaa
das
out
inc
cmp
cmpsl
lret
push
cmpsl
adc
js
repnz
sub
dec
sbb
jne
or
cmpsb
stos
adc
or
inc
sbb
fcomi
loop
ror
cwtl
and
andb
xchg
or
ss
push
int3
je
pushf
or
xorb
mov
out
movsl
test
out
cld
sub
std
xor
jno
loopne
out
pop
rclb
mov
inc
sbb
iret
cmp
call
or
mov
push
cmc
test
and
mov
cmpsl
bound
mov
shl
pop
shlb
test
cs
repnz
jo
mov
xchg
ljmp
cmp
lahf
add
pop
pop
ror
in
or
out
sbbb
out
jge,pn
les
enter
decl
pop
into
imul
lods
mov
adc
and
pop
push
into
es
adc
push
mov
cmpsb
xchg
push
xchg
mov
cmpsb
push
xchg
inc
xchg
mulb
out
push
divb
out
push
movb
jbe
xchg
push
xchg
mov
cmpsb
push
xchg
inc
xchg
mulb
out
push
divb
sub
jbe
or
jbe
data16
ss
fucomip
and
sarb
inc
mov
mov
xchg
push
xchg
cltd
or
xchg
inc
icebp
inc
mov
mov
out
mov
mov
fst
mov
dec
adc
outsl
xor
sqrtps
popa
iret
xchg
filds
rcrl
loope
adc
outsl
xor
sqrtps
inc
das
xor
popa
xchg
movb
roll
loope
mov
pop
and
adc
jae,pn
push
fsubrp
fimuls
and
js
leave
movsb
or
fs
movsb
pop
xchg
push
lret
push
mov
xchg
xlat
inc
pop
movsl
push
lahf
ds
sub
xchg
xor
lods
das
and
xor
leave
and
dec
pop
sbb
and
jg
sbb
mov
fmull
push
jecxz
das
mov
call
es
mov
push
jle
push
lret
pop
into
xorb
pop
mov
lahf
jno
jle
xor
pop
jo
xchg
loop
dec
bound
cltd
push
outsb
into
loope
inc
pop
mov
daa
pop
aas
jle
xlat
add
movsb
popf
dec
pop
test
add
and
and
dec
xchg
gs
pusha
push
xchg
movb
rorl
loope
adc
ja
and
push
pop
inc
xor
mov
enter
shl
mov
jne
pop
sbb
xor
pop
jae
and
mov
shl
cltd
lahf
movsl
scas
xchg
loope
imul
dec
rdmsr
je
pop
adc
xor
fsts
shrl
pop
add
jg
sqrtps
inc
das
jno
popa
iret
xchg
filds
rcrl
loope
adc
outsl
xor
sqrtps
inc
das
jno
popa
iret
xchg
lock
out
sbb
jp
outsb
repz
pop
subl
inc
addr16
push
mov
mov
push
into
adc
or
incl
popf
mov
das
aad
stos
and
cli
test
lret
sub
push
jg
sbbb
mov
push
pop
push
xchg
mov
and
leave
mov
mov
fmuls
xlat
pop
and
test
repz
push
out
sub
mov
jle
sub
add
mov
jge
xchg
iret
sbb
cld
inc
pop
adc
sbb
mov
pop
push
cld
ja
aad
xorb
xor
jbe
inc
push
pop
cmp
xacquire
fldcw
sub
mov
pop
pop
cmp
rclb
dec
out
fs
sub
inc
or
js
test
sub
sub
sbb
fnstsw
inc
fimuls
or
mov
mov
sub
pop
sub
add
push
dec
fistps
testb
pop
mov
movsb
cmpsb
pop
pop
mov
in
push
jmp
or
and
loopne
adc
push
mov
pushf
mov
andb
and
mov
lods
mov
stos
pop
mov
daa
mov
sub
xor
popf
xchg
mov
aaa
repz
mov
negl
xchg
lcall
xchg
or
in
ss
sbb
push
jno
cld
outsb
adc
fimuls
push
xlat
mov
inc
mov
adcb
sbb
mov
pop
push
jle
sbb
fs
fstps
rol
div
iret
sbb
jns
imul
mov
lods
mov
std
fcoms
inc
in
push
sub
stc
cmpsl
mov
int3
mov
insl
mov
lret
icebp
pop
adc
ret
in
push
cmpb
xchg
das
adc
hlt
lods
leave
fstl
es
and
insl
xlat
fidivl
lret
sti
dec
std
mov
push
mov
and
andl
ljmp
pop
xchg
loope
jnp
mov
sbb
jp
sub
cmp
lcall
push
aaa
insl
dec
fldcw
test
lret
or
or
lcall
outsl
mov
shlb
jb
add
jne
cmc
outsl
inc
add
jno
mov
test
mov
js
lods
jb
mov
pop
sbb
jbe
xlat
or
jnp
fxam
movsl
jns
jg
dec
or
out
leave
lods
push
test
xorb
dec
push
aad
ret
dec
sub
incl
cmpsb
sbb
mov
add
mov
lcall
cmp
roll
xchg
insl
inc
pop
mov
pop
xor
hlt
andl
dec
mov
and
stos
loope
mov
imul
ret
test
lds
mov
fwait
xor
sub
or
jmp
dec
pop
repnz
test
xchg
mov
test
loopne
lds
cmp
mov
shl
add
xchg
hlt
lods
das
adc
dec
push
xchg
mov
xchg
mov
jl
out
scas
fs
mov
cmp
stos
dec
adc
or
aaa
test
shrl
push
aaa
cld
ja
cmpsl
push
dec
xchg
lret
cmp
pop
jb
je
lods
es
cmp
and
lock
test
mov
sbb
sbbb
adc
js
fwait
push
repnz
scas
cwtl
nop
mov
fstps
lret
movsl
int3
pop
mov
xor
enter
mov
sbb
push
test
mov
cmp
jae
addr16
into
sbb
aaa
out
pop
mov
adc
cmp
or
xlat
loope
popf
push
push
test
daa
loopne
inc
cwtl
icebp
push
cmp
mov
or
mov
loopne
pop
mov
mov
mov
shrb
mov
ss
or
sbb
call
fidivrl
xchg
inc
popf
nop
jge
pop
lds
xchg
push
cs
dec
aam
cmpsb
loope
or
ds
popa
fcomps
push
jmp
popf
xchg
mov
pop
xchg
jmp
bound
and
fidivrl
in
rorb
cmp
into
scas
mov
mov
into
stc
jb
xor
or
packuswb
jge
jae
faddp
cmp
add
leave
fmulp
aad
dec
and
sub
lods
mov
shll
push
imul
jno
xchg
pusha
lods
adc
cmpsl
xor
jl
adc
push
mov
xchg
iret
push
movsl
xchg
jmp
idiv
shlb
fs
jle
adc
ficoml
and
xchg
lods
test
xor
xchg
pushf
daa
push
mov
aam
pushf
sbb
inc
pop
test
out
pop
repz
push
cmpsl
fs
fsubr
int
imul
adc
bound
jecxz
dec
adc
push
mov
xor
or
jnp
jae
mul
jne
and
jp
iret
sbb
push
stos
jo
jg
xchg
psubsw
inc
cmp
stc
pusha
imul
push
stc
jmp
iret
int3
pop
mov
insl
pop
test
inc
hlt
mov
push
jae
ret
pushf
test
out
and
pop
rol
add
cmpsb
mov
js
xchg
repnz
xchg
dec
outsb
insb
jne
sbb
push
cltd
outsl
outsb
mov
popf
cs
sub
ret
nop
mov
adc
repz
fisubl
xchg
loope
insb
loopne
sbb
movsb
pop
outsl
push
pushf
pushf
jns
mov
mov
adc
popw
fst
push
push
jne
cmp
adc
jg
insl
inc
xchg
fildll
fbstp
push
xchg
loop
js
ljmp
pop
mov
ss
sub
cltd
sub
jmp
pop
add
add
dec
out
inc
jno
jbe
out
or
repz
cmp
test
cmpsl
xchg
jecxz
fisttpll
les
mov
xor
push
jbe
jl
or
cmpsl
xor
adc
insb
and
mov
subl
pop
insb
jne
cmpsb
leave
lods
sbb
test
fnstenv
jbe
das
les
sbb
bound
xor
ss
stos
addr16
mov
ss
xor
dec
cmpb
mov
aaa
mov
pusha
xchg
pop
call
cmp
fnstcw
jecxz
shr
ljmp
test
cmp
lods
leave
inc
sarl
clc
xchg
out
jl
xchg
stos
sbb
mov
subb
mov
pop
lret
in
sbb
test
mov
js
cmc
gs
jbe
shlb
sahf
les
sbb
popf
or
jb
movsl
xlat
stc
pop
adc
loopne
mov
jmp
pop
adc
push
jne
add
js
out
js
mov
xchg
xor
mov
scas
lock
xor
js
lret
popf
sub
mov
fsts
rolb
mov
sbb
in
mov
lret
mov
push
mov
inc
mov
popf
outsl
add
jg
push
pop
das
mov
mov
stos
or
imul
shlb
mov
adc
xchg
mov
in
fmull
xor
int
jp
fdivr
xor
adc
sti
pusha
inc
shrl
mov
jno
sbb
xchg
and
jmp
js
shlb
jp
xchg
outsb
mov
adc
inc
dec
mov
adc
cs
mov
push
daa
mov
sub
jmp
sti
lret
xor
or
idiv
and
pushf
pop
sbb
repz
pop
je
push
mov
add
jns
cmp
sbb
fadd
mov
inc
sti
fisttps
aaa
jmp
mov
lods
sub
mov
loopne
adc
mov
xor
lods
adc
scas
mov
sbb
leave
je
pop
mov
fidivl
cld
ja
aad
pop
mov
in
mov
test
clc
js
cmp
in
mov
aad
pop
xor
mov
js
dec
sub
xorb
incl
roll
fsubrs
mov
out
shrb
pop
pop
jne
sub
mov
outsl
adc
nop
dec
inc
sbb
imul
dec
popf
dec
stos
mov
add
mov
xlat
mov
insl
xchg
and
jmp
fwait
jl
push
int3
fldt
pop
pop
test
xchg
and
or
add
pop
pop
je
test
dec
xchg
cmp
daa
movsb
fnsave
pop
push
gs
in
mov
into
aas
xor
cmp
in
cli
lcall
xchg
insl
xchg
mov
and
mov
repnz
xor
lret
mov
out
repnz
xor
dec
outsb
sub
sub
pushf
rorb
mov
js
fadd
fisubs
mov
fsubs
sbb
fcoms
or
mov
jmp
sub
sbbl
cmp
mov
xor
jbe
test
sarl
adcb
daa
jae
testl
cltd
push
push
mov
call
pop
xchg
cmp
scas
xor
xorl
mov
aad
mov
sahf
jle
enter
ja
insb
loope
inc
or
lea
stc
and
popa
dec
stos
inc
xor
jmp
mov
mov
stos
adc
repz
lds
clc
mov
and
adc
insb
mulb
sbb
outsb
nop
jle
popa
jmp
das
stos
jecxz
xchg
cmpl
lock
daa
ljmp
cld
push
xchg
mov
cmp
cmpsw
push
fstl
cmp
imul
incb
mov
and
ret
int
in
mov
test
mov
adc
iret
dec
pop
push
adc
ss
aam
push
pop
push
inc
mov
faddl
scas
xrelease
jmp
mov
push
sub
dec
std
rcll
adc
imul
mov
loopne
ss
mov
mov
push
jmp
rorl
in
xor
ds
xchg
ficoms
sahf
cmp
es
ret
arpl
cltd
outsl
pop
mov
bsf
mov
lcall
jbe
sti
mov
aaa
push
inc
fnstenv
leave
cltd
dec
push
fsubp
or
push
rorb
sbb
inc
cmp
sbb
stc
push
stc
inc
mov
nop
adc
push
enter
xchg
cmpsl
push
fcomp
fmull
inc
pop
jnp
sbb
or
and
hlt
mov
adc
iret
repz
insb
out
add
shl
adc
mov
ret
das
inc
aaa
outsl
out
dec
hlt
push
sub
gs
pop
adc
fucompp
pop
fidivl
lods
add
loop
and
mov
push
xor
xchg
outsb
lods
popf
imul
jbe
sub
cmp
xchg
scas
pop
adc
xchg
jb
inc
stos
jne
insl
mov
cmc
and
mov
xchg
pop
ret
pop
popa
sub
xchg
sub
jg
mov
aam
mov
mov
cmc
inc
sbb
scas
push
in
fwait
sub
dec
xchg
in
cwtl
je
jl
cmpsl
shr
test
pop
in
arpl
jle
xchg
enter
out
movl
sbb
mov
jne
pusha
std
out
or
pop
xchg
test
in
test
je
mov
dec
cmp
cmp
inc
insl
xor
loopne
dec
cli
movsb
mov
jnp
jecxz
orl
aam
xor
mov
mov
or
imul
leave
jno
cmp
ja
mov
dec
mov
imul
pop
fidivrl
sub
into
sbb
fiadds
cmp
ret
push
sti
and
jo
decb
pop
rcrb
add
aaa
xchg
jg
sbb
pop
lcall
cmp
out
pusha
sbb
adc
pop
add
and
mov
mov
lret
stc
scas
les
into
insb
xchg
lret
jecxz
ljmp
add
adc
xchg
xchg
aas
jo
mov
mov
and
lea
sbbl
dec
outsb
push
cmp
insl
add
cmp
xchg
loop
andb
inc
aas
rorb
fisttpl
int
mov
or
cs
xchg
ja
mov
lds
in
inc
mov
xchg
jno
and
add
jae
xchg
mov
xor
xlat
movsl
rcrl
dec
arpl
ss
es
test
mov
mov
pop
int3
jle,pn
in
outsl
sbb
dec
inc
icebp
mov
xchg
push
mov
adcl
cld
mov
sub
loop
sub
jmp
je
inc
in
dec
cmp
movsl
jge
add
mov
and
adc
xchg
mov
les
cmc
xchg
fstpl
mov
push
popf
nop
cs
xor
rcrb
pushf
out
cmpsb
lcall
add
add
jecxz
or
push
add
cmp
dec
call
notb
lret
mov
inc
sbb
xchg
mov
insb
enter
and
ljmp
sub
mov
inc
jno
xor
fldl
mov
movsb
mov
in
imul
jo
push
test
ficomps
pop
fdivrs
mov
fisubl
add
rcrb
add
scas
adc
inc
lods
dec
sub
xchg
push
push
out
inc
gs
js
ljmp
aaa
mov
pop
mov
and
xchg
sub
aad
cmp
jnp
lods
pop
adc
shrl
jne
add
jbe
fnsave
cmp
and
mov
adc
push
sbbl
sbb
cli
adc
insl
or
ret
lret
fwait
push
jle
cmp
push
sbb
add
push
imul
aaa
add
add
fs
sub
data16
popa
sbb
or
lock
mov
push
lret
popf
jecxz
pop
inc
inc
int3
dec
jno
push
jbe
into
push
mov
js
cmpsl
pop
xor
sub
iret
mov
cld
pop
adc
sbb
imul
mov
ret
pop
cmp
scas
or
sbb
xor
pusha
jg
or
jg
jge
adc
pop
mov
mov
scas
and
mov
out
popf
insl
or
mov
and
push
add
mov
pop
cmp
jmp
adc
fmuls
xchg
insb
loopne
cmp
and
popf
ror
in
fsubr
std
mov
popf
dec
dec
pop
add
scas
jge
dec
ja
pop
mov
enter
cmp
test
ror
xchg
mov
insb
and
push
stos
adc
imul
bound
call
cmp
push
add
pop
ljmp
fcmovnu
push
lret
inc
jnp
cmp
shl
mov
cmp
das
or
mov
sub
int
testb
repnz
outsb
movsb
sarb
sub
jb
jle
jns
out
inc
and
and
or
pushf
sub
sbb
shrl
lcall
add
push
int3
jmp
clc
repnz
out
mov
addr16
adc
xchg
adc
dec
xchg
push
push
sti
int3
sub
cmp
ret
movsl
fsubs
adc
icebp
sbb
jl
lahf
lds
lahf
sbb
outsl
push
push
insl
testl
mov
pop
add
xchg
jmp
mov
stos
aam
sub
aad
mov
dec
mov
fidivrs
xor
inc
dec
fldcw
push
aas
and
arpl
push
fdecstp
push
cmp
push
xchg
insb
jecxz
lods
cmp
sbb
cmp
ljmp
test
add
mov
push
pop
xor
dec
sti
in
out
pop
mov
push
mov
xchg
jecxz
shrb
sbb
arpl
cmp
cmp
mov
mov
mov
sub
pop
and
xor
clc
ja
call
push
push
cld
imul
loop
adc
leave
mov
out
cvtdq2ps
scas
stos
xchg
icebp
xor
jge
mov
push
xchg
ret
mov
xlat
shl
jnp
mov
fstps
popf
add
iret
out
mov
js
mov
daa
ret
cmpsb
fs
push
mov
jnp
hlt
mov
jno,pn
cmp
xchg
xchg
push
repz
daa
xchg
lea
xlat
jne
hlt
icebp
dec
lods
out
int3
movb
push
dec
lds
cmp
push
xchg
cs
push
add
push
insb
ret
push
ret
sbb
enter
mov
out
ja
dec
rcrl
test
xchg
or
cmp
fidivrs
out
jno
psrlq
push
lds
dec
fnsave
pop
sub
je
mov
fs
pop
scas
sbb
cmp
dec
in
cltd
sahf
test
inc
ja
jl
stos
loope
rclb
stos
sar
mov
adc
fcoml
imul
pop
mov
and
imul
mov
repnz
cmc
jne
pop
fwait
cld
sbb
adc
or
push
adc
fbld
movsb
xor
insb
shrb
and
repz
cmc
icebp
js
inc
dec
cmp
mov
daa
repz
pop
test
imul
sbb
std
mov
in
push
cmpsl
nop
cmpsl
loop
push
add
push
lret
stos
fimull
mov
pusha
rorb
gs
cwtl
sbb
sub
in
inc
mov
movsb
nop
aas
ret
pop
xchg
mov
adc
std
add
and
jecxz
cltd
mov
push
adc
dec
xor
inc
jo
push
scas
outsl
jb
mov
out
mov
pxor
adc
add
xor
mov
xor
int
into
mov
aas
add
dec
cmp
inc
mov
lret
or
mov
aad
and
loope
scas
xor
inc
mov
mov
movsl
mov
inc
jmp
sahf
mov
push
sbb
loopne
or
pop
push
inc
adcl
insb
pop
pop
clc
push
xchg
xor
fsubs
imul
pushf
stos
pop
fmul
cmp
add
sub
pop
pushf
dec
adc
in
pop
sub
in
nop
pop
push
sahf
in
dec
sbb
lret
pop
xchg
jmp
movl
dec
rorl
out
xchg
sbb
lea
jns
mov
pop
ja
add
push
xchg
inc
arpl
inc
sub
das
or
leave
pop
inc
sub
test
loop
dec
pop
sbb
xor
leave
fldenv
add
xchg
sub
push
mov
mov
sub
adc
xor
or
sub
mov
xchg
mov
fwait
pop
add
daa
mov
mov
pcmpeqd
push
imulb
popa
cmp
int3
lret
xor
jecxz
test
ret
xor
rcr
adc
rcll
fwait
add
push
repnz
push
mov
pop
and
or
lcall
lock
mov
push
or
rol
mov
and
addr16
jge
inc
cmp
cmpsl
mov
add
in
in
adc
cmpsb
adc
int
sti
loopne
inc
imul
jmp
fwait
stc
lret
inc
xchg
into
hlt
xchg
push
test
hlt
xor
rolb
jp
ja
add
fsts
xor
dec
push
loope
cmp
or
outsb
xchg
push
pop
fmuls
out
mov
enter
mov
cmp
jg
sub
nop
out
dec
data16
outsb
pop
sbb
movsb
mov
mov
iret
out
mov
cs
test
movsb
int3
pop
outsb
lahf
mov
repz
sbb
nop
test
int
je
add
aas
icebp
rclb
fbstp
add
sahf
mov
pop
sub
and
int
xor
push
push
ficoml
lret
or
aaa
xchg
sub
or
and
jb
mov
lods
or
stc
xchg
jmp
fs
xchg
mov
jo
ljmp
xchg
jae
pop
and
mov
xor
mov
add
sub
ja
push
push
in
and
mov
bound
ficoml
add
xchg
pop
adc
movsb
mov
add
xor
js
rcrl
sub
mov
shl
and
add
push
add
xchg
push
es
sub
add
fsubrs
push
sbb
into
mov
std
sbb
xchg
mov
xlat
inc
xchg
out
out
push
repz
loopne
cmp
push
notb
shll
loope
nop
sub
in
or
lea
cmp
xchg
sub
out
xor
shlb
dec
das
xchg
push
out
movsl
xor
lcall
lods
xchg
ss
jb
repz
rcrl
loope
adc
outsl
xor
sqrtps
inc
das
jno
popa
iret
xchg
filds
rcrl
loope
adc
outsl
xor
sqrtps
inc
das
jno
popa
iret
xchg
filds
out
xor
mov
scas
icebp
mov
add
jg
sqrtps
inc
das
jno
popa
iret
xchg
fldl
rcrl
loope
adc
push
js
xchg
mov
inc
shll
inc
int
repnz
adcl
push
stos
popa
mov
adc
and
xor
rcrl
sub
cmp
dec
sbbl
fiaddl
push
test
jno
insl
mov
xor
rcrl
pop
adcl
mov
inc
divb
adc
adc
push
xchg
dec
mov
mov
cwtl
outsb
mov
shll
cmp
test
or
inc
lahf
add
xchg
dec
pop
adc
movsl
adc
test
scas
push
je
adc
imul
pusha
pop
rorl
sub
sub
push
push
inc
in
pop
fcoml
inc
and
movsb
movsl
mov
cmc
push
leave
outsl
cmpsb
dec
and
dec
lahf
mov
inc
xchg
inc
add
out
ljmp
add
adc
or
sbb
lret
xor
push
sahf
mov
adc
inc
sbb
lahf
mov
andb
jb
bound
stos
cltd
mov
inc
scas
and
and
rcrl
sub
push
icebp
dec
sbbl
mov
inc
or
popa
movsb
jno
add
adc
and
nop
outsb
loope
icebp
and
das
clc
jns
sbb
jmp
fistl
add
add
sahf
pop
mov
mov
test
icebp
and
cmp
push
enter
or
sub
xor
adc
outsl
mov
pop
js
sub
imul
push
jp
mov
push
stos
popa
mov
adc
and
xor
rcrl
sub
cmp
dec
sbbl
mov
push
stos
popa
mov
adc
and
xor
rcr
orb
or
push
repz
test
lret
gs
fisttps
test
or
mov
push
out
pop
adc
imul
jl
clc
rcr
dec
int3
lcall
or
add
in
out
dec
pop
rclb
mov
repnz
mov
pop
mov
dec
shlb
inc
les
outsl
lret
cltd
fisttps
cmovo
sarb
lret
out
out
push
ljmp
popa
cmpb
clc
cmp
sbb
sbb
sbb
add
push
arpl
scas
add
mov
loop
cmp
insl
mov
dec
pusha
and
lods
sbb
fdiv
jno
lahf
rorb
xchg
cmp
daa
aas
adc
shl
push
sahf
mov
nop
adc
sub
jb
jb
ss
ljmp
pop
aaa
pop
fistl
mov
sub
aam
lods
and
test
push
sahf
imul
fists
gs
daa
jp
cmp
fnstsw
pop
ljmp
mov
loop,pt
loop
xchg
push
mov
push
int3
or
mov
xor
call
inc
daa
push
dec
push
push
mov
mov
mov
stos
cmpsl
mov
sbb
dec
gs
sbb
cmpsl
mov
adcb
test
lret
push
xlat
mov
mov
out
jl
das
add
or
ret
icebp
xorl
sbb
popf
fdivrp
add
out
pop
aaa
pushf
xor
sti
outsb
dec
cmp
jp
scas
or
or
dec
cmp
jp
cmpsb
sbb
rolb
xor
popa
jp
inc
xor
and
dec
cmp
mov
fisttpll
jl
cmpsb
movzbl
mov
je
dec
repnz
and
sub
in
imul
lea
or
daa
add
ds
sub
stos
xchg
lcall
adc
mov
imul
fidivs
mov
cmpl
xor
das
cmp
dec
and
test
adc
fiaddl
xchg
addr16
gs
in
cmc
jecxz
mov
incl
xchg
hlt
pushf
add
xchg
and
ret
xchg
mov
cmpsl
das
push
add
fwait
pop
add
lds
stos
aam
push
mov
int
int3
fadds
lds
sbb
lea
mov
nop
out
lock
cmp
outsb
aam
mov
mov
and
push
addl
inc
push
cmp
ret
push
jg
leave
fdivrs
das
xchg
icebp
in
dec
sti
push
imul
xchg
scas
jno
sti
lods
in
add
mov
aam
jg
xor
incl
js
push
push
xorl
out
scas
mov
xchg
aas
leave
jnp
mov
jnp
mov
add
dec
mov
push
aaa
jle
fcoml
stos
mov
mov
imull
cmc
in
push
aad
je
jnp
cwtl
or
stos
scas
mov
inc
insl
pop
mov
setns
testl
cmp
lret
dec
mov
lock
hlt
push
or
pop
movb
xchg
push
xlat
loopne
punpcklbw
mov
or
fidivrl
sub
loope
dec
mov
xor
ret
lock
popf
xchg
xor
out
icebp
and
mov
mov
cltd
push
mov
sub
movaps
adcl
and
jnp
jo
adc
lcall
popa
adc
jno
add
scas
divl
lods
repnz
idivl
xlat
lea
cmc
cmp
stc
into
jg
mov
mov
push
cltd
adc
loopne
sbb
movhps
incl
fsubrs
orb
add
js
inc
mov
push
sbb
sahf
imulb
cmc
push
int3
rorb
xor
lods
lods
loopne
sarb
dec
shlb
mov
clc
mov
adc
lock
lods
stos
std
and
std
pop
adcl
cmp
nop
mov
sub
push
sarb
mov
nop
cli
sub
fildll
test
popf
cmp
addr16
xchg
scas
outsb
adc
sbb
test
jge
sub
inc
or
push
mov
ficoml
call
xchg
lea
cmp
fsubrs
mov
sbb
mov
js
and
mov
fildll
add
jmp
nop
arpl
out
stc
out
leave
mov
xor
or
ljmp
out
mov
jmp
pop
fiadds
mov
xchg
fldcw
leave
addr16
mov
push
cmp
insl
sub
addr16
and
fidivrs
mov
adc
loop
popf
sti
push
push
sub
das
out
outsb
adc
xchg
cmp
call
sar
mov
movsb
xchg
aad
jne
push
inc
cwtl
hlt
and
xlat
in
repz
dec
pop
jo
pop
jl
inc
adc
and
jae
xchg
rcrb
inc
in
gs
push
mov
imul
ljmp
movsb
xchg
inc
sbb
mov
cmpsl
test
mov
dec
dec
jle
or
fsubs
test
fwait
pop
xchg
add
fcoml
rcl
adcb
sub
repnz
andl
dec
stos
mov
popw
cmc
xchg
clc
nop
cltd
rcrl
into
xor
adc
imul
out
push
push
aad
and
sarb
mov
out
outsb
leave
inc
sar
dec
sub
pop
icebp
stos
sub
inc
push
xchg
outsl
lret
xchg
cs
lods
das
cli
or
lret
cmpsb
loop
lods
insl
subl
pop
stos
nop
jp
inc
lret
mov
jp
test
jg
pop
shrl
imul
mov
or
mov
or
test
rolb
dec
sahf
and
sbb
test
adc
or
mov
ljmp
cwtl
pop
hlt
or
hlt
push
insl
aaa
pop
adc
mov
popa
js
out
clc
lods
sub
shl
nop
cmp
popa
mov
pop
mull
xor
xchg
lret
push
stos
dec
popf
std
in
mov
jmp
push
adc
incb
test
test
movsb
add
out
push
insl
orl
lods
sbb
daa
pusha
push
xor
imul
add
rol
xchg
test
cmc
fxch
sub
jo
jecxz
mov
out
dec
mov
cmp
jmp
xchg
mov
xchg
adc
xchg
adc
andl
in
lods
outsl
pusha
outsl
mov
test
imul
xchg
mov
pop
gs
pop
stc
push
test
lret
push
mov
lret
rcr
pop
sub
adc
scas
dec
jns
inc
pop
jl
or
pop
push
adcl
mov
jmp
or
adc
push
ja
orl
jnp
les
dec
xor
repz
pushf
ja
aas
jecxz
popf
loopne
mov
in
dec
mov
int3
and
and
mov
leave
push
popa
mov
aad
dec
enter
mov
enter
xchg
ret
loop
push
jmp
mov
mov
cmp
mov
outsl
push
sahf
and
add
icebp
ss
jo
filds
popa
or
push
daa
cmpsl
pop
or
mov
mov
clc
sub
xchg
jne
jp
add
sub
jge
fwait
jecxz
cmc
xchg
mov
sub
scas
aam
in
push
test
cmc
vmwrite
jne
add
fs
mov
jno
inc
cmc
iret
inc
jb
movsb
jl
mov
sar
adc
sbb
xchg
daa
outsl
cmpsl
out
std
dec
fiaddl
adc
imul
pop
push
ret
test
or
clc
adc
lret
subl
cmpb
mov
repnz
pop
lea
addb
inc
jl
adc
mov
jge
adc
cmp
scas
movsb
xor
adc
jns
push
mov
push
jb
pop
xchg
jle
cltd
cmpl
dec
out
ficomps
cmpsb
cld
pop
jle
adc
clc
jo
fistpl
pop
hlt
adc
sbbb
adc
shlb
jb
xchg
or
out
adc
inc
push
out
pop
hlt
test
movsl
data16
or
xor
sarb
test
loopne
in
push
xchg
xor
ljmp
lret
outsb
shrl
push
fstpt
or
test
jl
aas
sahf
iret
push
jge
adc
inc
aad
and
out
add
mov
in
movsl
xchg
fists
filds
mov
in
push
lret
pop
push
fs
xchg
mov
inc
test
mov
mov
push
leave
xchg
push
fmul
xor
and
push
mov
cs
cmp
ss
into
push
push
mov
loop
xchg
mov
insl
sbb
cmp
adc
movsb
lret
push
fldenv
mov
cltd
and
add
push
rorl
addl
mov
clc
push
push
jecxz
lods
adc
mov
pop
js
sbb
push
pop
in
out
xlat
test
sahf
xor
inc
pop
push
imul
mov
mov
pop
pop
jecxz
sbb
xchg
xor
jb
mov
or
movsb
cli
xchg
xchg
aaa
shl
faddl
pop
in
or
adc
add
enter
aad
push
jae
xchg
jb
lock
jno
or
mov
mov
aam
idivl
pop
nop
cld
clc
and
xchg
int
jbe
into
mov
test
push
loop
das
out
lcall
mov
xor
sbb
dec
inc
adc
pop
sbb
scas
in
scas
or
or
cmp
add
stc
imul
lret
je
cmp
push
mov
fcoml
jb
sub
sub
shrl
dec
inc
cld
sub
sbb
add
aas
mov
or
add
jmp
adc
loop
sbb
jmp
inc
xchg
ljmp
adc
jb
mov
mull
jne
push
cmp
jb
repnz
push
sbb
or
fcomps
sbb
jne
mov
test
jecxz
jns
dec
iret
mov
in
lods
inc
or
inc
sbb
push
sbb
out
lock
nop
inc
xlat
push
push
adc
cld
stos
xchg
add
lock
dec
jle
xlat
or
rcrl
das
mov
mov
lahf
shlb
or
movsl
je
outsb
inc
mov
and
push
sbb
jmp
and
pop
dec
and
loop
sbb
pop
rcrb
out
mov
shll
out
cmp
xchg
int3
jmp
xchg
sbb
mov
ljmp
push
pop
in
push
rol
test
fstpl
mov
cmpsl
inc
mov
mov
adc
xchg
lret
mov
xchg
fs
pop
lock
cmp
xchg
cmc
and
in
jb
lahf
leave
mov
adc
mov
and
sarb
fisttpll
xchg
out
xor
imul
fcomps
subl
fdiv
pop
testb
cs
adc
lcall
enter
in
mov
out
jecxz
sbb
cli
fs
sub
lock
mov
mov
cmp
mov
loop
out
push
fsubrs
adcl
cmpsl
and
enter
cmp
dec
sbb
push
sub
les
inc
loope
jecxz
fistpl
push
pop
ret
or
in
test
push
cmpsl
jmp
int3
fstps
call
in
mov
arpl
repz
fwait
imul
mov
test
daa
mov
fwait
scas
shrb
insb
ficompl
imull
xor
lcall
dec
lods
push
ficompl
sbb
popf
dec
popa
jl
lahf
test
dec
jl
pop
adc
daa
clc
imul
scas
cmp
loop
mov
xor
nop
aad
dec
cvtpi2ps
xchg
jo
xchg
int3
aaa
or
pop
jbe
mov
push
xchg
push
int3
fildl
arpl
push
arpl
mov
fsubrs
fistpll
popf
aam
mov
and
mov
dec
jmp
fwait
mov
popf
into
add
pop
imul
xor
push
nop
dec
mov
jecxz
jle
aaa
pop
int3
cmp
jl,pt
jb
cmp
cld
stos
dec
imul
jns
aas
in
lds
in
fdivrs
pop
jl
add
into
sbb
or
in
xor
addl
cmp
push
cmpsl
cmp
repz
xlat
xchg
sahf
das
icebp
lret
aas
fldt
and
imul
xchg
cltd
sub
xchg
xchg
fs
jnp
inc
cmpl
push
fldt
inc
repnz
lods
std
aad
movsl
js
ljmp
enter
pop
mov
or
adc
pop
fisttps
inc
je
test
sbb
adc
jp
xchg
cmp
cwtl
xchg
mov
push
dec
pop
push
and
clc
sbb
shrb
add
int3
pushf
inc
loop
sahf
mov
push
sub
test
push
push
pushf
pop
pop
stos
cltd
mov
fld1
xor
stos
lret
xchg
mov
dec
mov
jg
cmpsl
imull
into
pusha
sub
leave
push
imul
inc
mov
mov
mov
test
fmuls
mov
ljmp
sbb
pushf
xchg
push
jmp
call
and
pop
or
cld
xchg
xchg
and
popa
and
daa
aas
imul
rcrb
jo
lock
sbb
or
fildll
dec
int3
adc
pop
cmp
ficoms
loopne
dec
push
mov
repnz
repz
insl
dec
call
cmp
not
je
sbb
inc
and
pusha
arpl
mov
fs
sti
insb
fisubs
scas
test
cmpl
sub
std
and
jmp
xchg
dec
pop
jnp
cld
mov
add
out
push
mov
pop
mov
mulb
movsl
stos
insl
test
ljmp
out
imull
inc
xchg
push
out
cmp
xchg
out
add
in
mov
mov
jb
inc
cmpsl
mov
push
cmp
adc
adcl
movb
mov
pop
sub
mov
sub
or
mov
scas
outsb
jmp
mov
mov
shlb
mov
ret
stos
fwait
dec
out
push
aam
test
push
jl
add
cltd
stos
xchg
jle
fistps
in
aaa
fwait
hlt
add
mov
rorl
cmpsb
or
or
cli
into
int3
dec
cmp
add
adc
add
sub
aam
movsl
jle
add
cli
inc
stos
into
out
mov
subb
dec
jns
mov
inc
hlt
and
xchg
push
add
int
sbb
pop
mov
das
faddl
xchg
test
pop
mov
add
aaa
sbb
int3
dec
pop
and
xor
add
xchg
sbb
and
out
xchg
fsubl
jmp
or
notb
and
sbb
add
pop
push
adc
lret
pop
and
fwait
pushf
mov
mov
dec
bound
sti
sub
mov
rclb
pop
jecxz
inc
loope
scas
pmulhw
lret
imul
fwait
test
cltd
cmp
cmp
jp
mov
addr16
mov
movsb
loopne
jne
repnz
daa
std
leave
push
cltd
ds
incb
in
adc
out
sbb
mov
xchg
scas
and
push
cmp
jmp
test
mov
push
xchg
movsl
aaa
ljmp
cmpb
or
xchg
sub
pop
lar
pop
movsl
push
mov
sbb
fcmovnbe
stc
xor
push
sbb
cltd
push
nop
jge
rolb
jge
inc
aaa
cli
sbb
loopne
mov
adc
out
imull
stos
fldcw
imul
and
mov
stos
or
mov
inc
fbld
mov
gs
dec
xchg
iret
jmp
neg
jg
mov
mov
test
in
jmp
xchg
rcl
ret
fwait
mov
jo
es
push
cmpsl
aas
mov
test
hlt
das
push
lret
and
lahf
sbb
sahf
mov
dec
cmp
xor
jae
bound
add
jae
mov
leave
test
out
out
sub
dec
dec
or
xchg
shll
add
lods
mov
xchg
xor
fmuls
in
out
sub
dec
adc
inc
sbb
psadbw
adc
xor
xor
push
bswap
repnz
adc
rol
cmpsl
cmp
mov
or
loop
js
cs
mov
xchg
in
sub
jno
imul
mov
sub
xlat
or
aad
movsb
xor
nop
and
ljmp
mov
mov
mov
jo
or
add
sbb
dec
jge
xorl
cmovs
icebp
mov
ds
push
sub
cmpsl
imul
pop
es
rcr
arpl
adc
imul
xor
and
and
inc
mov
shl
in
jb
cmp
xor
lahf
stc
sub
or
mov
adc
add
dec
daa
outsb
in
es
popa
pushf
out
imul
pop
cltd
pop
inc
addr16
out
es
imul
and
je
gs
ds
mov
jns
xor
xchg
and
sub
divb
mov
call
cmp
enter
sti
ret
bound
inc
rep
subl
sub
mov
inc
jbe
add
hlt
add
cli
sub
mov
cs
add
mov
adc
add
xor
mov
xchg
push
lea
and
pop
aam
andb
lods
lret
mov
push
dec
testl
xor
or
pusha
mov
orb
sar
push
mov
lret
sahf
dec
xchg
outsl
inc
aam
arpl
sub
push
imul
adc
mov
out
loope
jbe,pt
dec
scas
insb
outsl
test
js
sti
mov
bound
sub
lds
cwtl
adc
mov
dec
xchg
aam
push
test
fistpl
scas
stos
mov
ret
mov
and
push
mov
test
sub
cmp
mov
or
sbb
cmpsl
inc
inc
push
jno
fidivs
pop
movsb
mov
xchg
add
add
xchg
lea
cmp
or
push
pop
sahf
jb
push
or
pop
or
test
and
and
xlat
push
loopne
jle
xchg
mov
sub
loop
std
jno
cmpsb
xchg
leave
gs
sbb
loopne
xchg
adc
cli
dec
cmpsl
rcll
es
xchg
or
pop
jl
mov
mov
inc
fs
aam
dec
aaa
or
aas
in
divb
insb
inc
rcr
xchg
in
sub
sbb
inc
or
dec
inc
and
jecxz
and
pop
inc
add
fistpl
jnp
stos
cmp
pop
cmpsl
xor
and
cmp
fwait
lret
add
stos
xor
fisubrl
cmc
pop
and
add
popa
inc
and
jbe
mov
xchg
sar
pop
dec
sti
movb
add
cmp
mov
rorl
ret
pop
adc
stos
cwtl
jmp
pop
push
imul
bound
mov
xchg
adc
int3
cmp
mov
xchg
sub
mov
adc
aad
xlat
or
adc
dec
pop
jns
out
repz
popf
scas
fsub
in
hlt
add
mov
pop
dec
bound
rcrb
out
gs
mov
fnstcw
mov
dec
xchg
data16
enter
incl
ss
popa
scas
sub
test
aad
imul
dec
into
and
mov
inc
loopne
sbb
xlat
mov
cwtl
dec
xchg
loop
popa
pop
mov
subl
out
cs
insb
les
add
shl
inc
dec
inc
ret
cwtl
mov
flds
mov
loopne
and
lcall
push
mov
in
test
loopne
push
dec
lods
sub
leave
ss
jno
xor
mov
jmp
xor
call
fdivrs
push
sbb
dec
stc
xchg
xor
mov
jb
stos
in
jmp
add
js
sbb
std
repnz
jns
push
mov
push
ds
dec
cwtl
sbb
loopne
pop
and
insb
inc
sub
das
test
or
dec
popa
in
into
int
push
sahf
and
jae
data16
shll
sahf
ret
pop
push
mov
loopne
mov
sub
dec
xor
xor
add
icebp
dec
sbbl
mov
push
stos
popa
mov
adc
and
xor
rcrl
sub
cmp
dec
sbbl
mov
push
stos
popa
mov
adc
and
xor
rcrl
cmp
cmp
dec
sbbl
mov
push
mov
add
adc
and
xor
shll
mov
orl
mov
sti
add
push
mov
fiadds
or
cmp
sub
int
loope
xchg
push
lcall
das
fidivrl
mov
cli
pop
ljmp
fildll
scas
pop
mov
push
lcall
out
fidivrl
lret
pop
ljmp
fildll
scas
pop
mov
push
movsb
pop
and
pop
stos
das
mov
jp
jno
mov
fwait
jle
pop
mov
pushfw
xor
test
mov
xchg
std
imul
adc
sbb
cmpsl
adc
sub
aad
mov
bound
daa
cli
ljmp
ds
pop
cli
xchg
push
mov
int
inc
and
lret
jge
jmp
pop
sub
lahf
push
fiaddl
push
pop
jmp
in
or
pop
stos
pop
or
cli
lahf
mov
xor
lcall
pop
imulb
in
and
negb
mov
test
cmp
fildll
mov
inc
and
pop
sti
push
mov
or
push
pop
insl
xchg
dec
dec
add
fwait
mov
ja
jg
mov
dec
out
lahf
ljmp
fildll
scas
pop
mov
push
lcall
das
fidivrl
lret
pop
lods
scas
ja
fldenv
xor
popf
sbb
sbb
dec
aam
les
mov
mov
js
inc
stos
cmp
notl
cs
in
pop
cs
movsl
arpl
jle
dec
mov
jecxz
mov
push
lcall
das
fidivrl
lret
pop
ljmp
fildll
scas
pop
mov
push
lcall
das
fidivrl
lret
pop
ljmp
lock
push
lahf
mov
adc
orl
loope
in
stos
hlt
dec
cwtl
fisttps
adc
test
int
jbe
movsb
aad
out
out
sbbl
test
jp
push
and
in
call
imul
adc
ret
pop
ret
stos
xchg
daa
movsb
popa
lock
cmp
fdiv
int3
enter
nop
es
loope
jne
pop
lret
jge
fwait
push
mov
repnz
fcomip
enter
cmc
pusha
popf
ret
mov
popfw
into
cmp
int3
scas
cld
repnz
fbstp
jp
or
push
mov
call
or
jno
push
std
pop
jb
test
inc
adc
ficoml
xchg
lea
dec
int3
movaps
negl
cli
mov
pop
sarl
mov
mov
mov
mov
mov
sub
shrl
adc
stos
lods
addr16
add
cmpsl
adcb
inc
xchg
test
es
xor
mov
xchg
arpl
adc
or
mov
daa
sub
les
sub
jnp
sahf
insb
out
insb
push
pop
insb
jmp
mov
pusha
ss
or
ss
push
aaa
scas
stos
jnp
sbb
pop
mov
das
lods
mov
xchg
xor
fdivrp
push
ss
lods
outsl
sub
inc
jns
inc
push
mov
xchg
sub
jge
std
aam
jmp
jecxz
test
arpl
ja
je
pop
push
fmull
cli
xchg
popa
push
mov
xor
dec
and
sti
movsl
in
je
push
repnz
ljmp
xchg
lret
xor
sub
mov
mov
scas
rorb
mov
sbb
adcl
fmull
jae
ds
xchg
test
scas
fs
aad
jo
mov
jbe
xchg
inc
aad
loopne
fistpl
test
std
neg
notl
inc
sbb
xor
outsb
loopne
push
cmp
out
push
jge
add
sti
mov
sub
sub
pop
xchg
xor
pop
scas
lahf
addr16
lcall
mov
sub
pop
or
fnsave
rcl
fcoms
pop
scas
dec
inc
fs
jecxz
mov
jmp
shrb
scas
sbb
test
add
nop
and
pop
pop
aaa
mov
pop
mov
ja
cwtl
or
jge
addl
cmp
sub
dec
and
sub
jnp
loop
movsl
fmul
mov
outsl
outsl
and
dec
xor
cli
cli
or
or
add
sbb
in
jecxz
add
pop
les
sbb
jbe
stc
lods
cmpsb
subl
push
sub
imul
movsl
outsl
sbb
jecxz
std
sub
fldcw
jnp
imul
orl
push
xor
add
and
sbb
je
or
or
push
sti
lret
inc
pop
push
rolb
xchg
sbb
sbb
or
xor
jns
cli
mov
cmp
mov
or
push
mov
hlt
aas
mov
or
fistpll
dec
data16
test
or
addr16
mov
inc
out
aas
xchg
fmuls
flds
mov
xorl
les
cmovae
shlb
and
outsl
pop
xchg
cltd
inc
fs
jmp
cmp
pop
sbb
inc
enter
add
or
sti
or
scas
in
mov
in
jno
pop
enter
mov
mov
xchg
or
pop
or
clc
aam
mov
lret
add
fincstp
mov
xchg
lret
push
mov
pop
pop
arpl
lcall
shl
push
cmp
jbe
sub
pop
adc
mov
mov
mov
les
ss
cmp
ficoml
jns
decl
ret
xchg
jmp
rcrb
in
push
push
sbb
pop
out
jmp
aad
mov
cmp
nop
inc
xchg
scas
or
imull
push
fs
ja
sarb
jmp
add
dec
or
cmc
in
adc
xlat
mov
sbb
and
mov
aaa
stc
lret
icebp
repz
ljmp
pop
and
std
push
sbb
stos
incl
fwait
cmp
jae
testl
or
imul
mov
neg
mov
dec
test
xchg
pop
stos
push
jns
inc
mov
sub
lcall
cld
hlt
dec
mov
push
pop
fcompl
insb
mov
inc
movsl
iret
andb
push
nop
dec
mov
orb
iret
push
mov
sbb
dec
xlat
int
iret
hlt
mulb
pop
mov
fcompl
xor
inc
sbb
push
push
jne
lret
xor
aaa
mov
cltd
in
and
mov
in
dec
fs
pop
iret
adc
or
test
xlat
pop
lods
xor
xor
repz
and
push
cs
dec
mov
sbb
mov
sbb
call
mov
mov
xchg
push
jmp
add
fnsave
mov
shll
outsl
aaa
pop
movsl
dec
lret
mov
insb
mov
mov
add
cmp
jne
idivb
jle
enter
insw
push
inc
arpl
and
inc
and
addb
jno
or
xor
cli
add
push
and
insb
mov
adc
cmp
outsl
sub
lods
jne
sbb
ja
sbb
imul
cmp
daa
mov
loopne
inc
ret
jo
jne
mov
insl
loope
mov
dec
jo
jge
add
lock
mov
ljmp
push
into
sbb
pop
xorl
aad
fldt
lods
les
cld
fwait
sar
cwtl
jnp
jno
push
add
jb
mov
dec
imul
mov
xchg
mov
ss
test
or
mov
sub
fs
icebp
call
xor
outsb
adc
sarl
outsl
xor
imul
and
push
sub
mov
or
rolb
adc
test
insb
inc
mov
lock
or
or
jle
sub
xchg
dec
pop
pop
mov
ljmp
mov
and
or
pop
cmp
mov
das
ret
push
fsubr
fisubrs
decl
movsl
lea
mov
fmull
xchg
inc
add
ds
push
shlb
je
leave
dec
jg
jo
scas
movsb
xchg
cld
sub
lea
add
xchg
cmp
test
inc
gs
cmp
lcall
xchg
jae
adcl
inc
xor
in
cmc
mov
mov
adc
repz
in
inc
fs
sbb
in
cld
ret
xor
aam
and
lret
push
das
icebp
ret
xchg
shl
movsl
jmp
cli
stc
rorl
xchg
or
movl
pushf
out
lcall
hlt
mov
inc
adc
push
leave
lods
mov
jle
add
stos
test
mov
cmp
and
xchg
pushf
xor
push
adc
pusha
mov
xor
cmp
movsl
outsb
add
jg
in
and
mov
push
push
fcom
pop
inc
jno
dec
in
add
dec
mov
mov
inc
insb
push
mov
aam
repnz
data16
in
inc
sub
imul
xorl
mov
inc
pop
dec
and
imul
dec
movsb
pushf
int
xchg
xor
push
int
adc
mov
sub
pop
call
arpl
je
xchg
outsb
jne
cmp
push
test
jnp
pop
pop
scas
es
fbstp
jb
fldcw
dec
mov
mov
sub
add
std
lret
ret
pop
cmp
popf
add
cmp
push
pop
int
lds
mov
add
inc
sbb
aad
cmp
arpl
jnp
jno
adc
test
add
hlt
or
pop
sbb
lret
ljmp
dec
fwait
add
sbb
xor
ja
push
dec
loop
sbb
test
push
std
mov
dec
pop
neg
lahf
push
adc
mov
mov
notb
xchg
mov
out
jp
sub
adc
scas
outsl
push
lods
movsb
outsl
push
mov
cli
pushf
movsl
out
nop
stos
cmp
jmp
mov
aad
xor
jno
pop
cmp
loope
dec
rolb
and
add
leave
jae
nop
cmp
mov
fmuls
stos
addr16
inc
jl
ljmp
nop
imul
mov
pop
int3
xor
mov
push
pop
push
imul
leave
lds
cmp
lret
and
or
nop
add
cld
push
mov
iret
xor
jp
fisubrl
imul
jmp
xor
mov
jns
in
mov
fstl
xchg
add
std
insl
xchg
std
sbb
and
mov
imul
cwtl
mov
mov
gs
pop
add
fnstenv
mov
xlat
aad
xor
not
repz
fabs
and
add
adc
cmp
sbb
fldcw
jo
addr16
out
enter
adc
imul
scas
lret
rcr
add
mov
dec
inc
mov
inc
or
xchg
jno
add
cmp
filds
stos
adcl
xchg
cmp
sbbl
fsub
aas
rol
shlb
jo
stos
pop
call
mov
add
jbe
cmp
dec
xchg
sub
lods
pop
add
sbb
mov
in
and
sbb
outsb
adc
xor
out
movsb
jno
mov
mov
adc
int
lods
repnz
or
data16
sub
xor
cwtl
xor
and
mov
rcrl
lahf
into
jp
jnp
dec
dec
cmpsb
divl
in
outsl
add
cltd
pop
cmp
lods
fsubrs
pusha
fs
xorb
or
sub
pop
cmp
mov
scas
mov
dec
clc
adc
push
int3
mov
sub
sub
mov
in
mov
sbb
scas
popf
imul
jecxz
pop
jle
nop
inc
cmp
fstps
scas
loop
inc
and
clc
mov
or
int3
pop
jg
xlat
xchg
movsl
jge
adc
sbb
lods
pop
test
inc
or
mov
fisubrs
mov
sub
pop
popf
mov
dec
je
or
sbb
adc
mov
in
and
and
sbb
insl
xor
in
pop
mov
add
outsl
add
jle
repz
or
jge
insb
jbe
adc
int3
aas
mov
adc
mov
iret
rcrb
push
jns
negl
leave
loopne
ljmp
pop
push
push
popa
or
mov
lret
nop
popf
les
in
inc
cmp
sub
jo
adc
fwait
test
xchg
loopne
mov
sub
or
lea
push
inc
push
mov
stc
mov
push
leave
shlb
scas
jne
out
jnp
loopne
inc
xor
rcll
add
add
shrb
sbb
rcr
das
pop
dec
pop
adc
jecxz
mov
jecxz
push
nop
cld
dec
fs
xor
in
add
jle
scas
popf
ret
jge
pop
dec
into
inc
jecxz
pop
outsl
in
lahf
jns
push
mov
push
adc
fldenv
mov
out
add
std
mov
dec
test
mov
dec
shlb
xor
loope
and
addl
ljmp
inc
insl
cs
jle
mov
call
mov
or
jg
push
sub
lea
mov
icebp
lods
int3
push
popf
cs
sarl
sub
dec
sahf
loopne
dec
lods
in
ret
outsl
jg
movsl
stos
inc
and
adc
mov
xor
or
add
or
outsb
inc
push
inc
aam
es
int
inc
or
pop
call
fisubrs
inc
outsb
daa
hlt
cmp
add
and
aam
sbb
sbbl
lahf
call
or
mov
test
mov
xchg
jl
mov
stos
push
jbe
ss
lcall
jae
icebp
mov
cmp
mov
ret
jp
aas
shlb
mov
push
mov
mov
nop
fcmovnb
js
rcr
jae
outsl
data16
stc
inc
or
pop
pop
lret
out
adc
mov
mov
mov
shll
andb
mov
lret
xor
dec
cmp
pop
cmp
sarl
je
loopne
in
pop
mov
jl
sub
lahf
xor
xor
mov
adc
mov
mov
ret
pusha
jno
adc
fldcw
push
mov
fs
lea
adc
inc
mov
mov
sbbb
pop
mov
das
push
pop
sub
cmp
gs
test
and
xlat
add
ja
dec
dec
or
sbb
enter
lock
dec
insl
pop
adc
test
xor
xor
mov
lods
sbb
pop
out
jp
adc
mov
in
jae
cs
pop
mov
dec
jecxz
mov
sub
or
in
out
pusha
mov
insb
adc
mov
es
or
pop
bnd
inc
push
aaa
push
lods
push
mov
push
addr16
or
jne
mov
popw
pop
lds
push
pop
repnz
xchg
iret
and
cwtl
pusha
popf
inc
iret
adc
mov
les
rclb
in
andb
mov
mov
test
mov
sub
mov
mov
out
fisubs
out
bound
lret
inc
dec
jb
cmp
add
jp
dec
adc
pusha
lods
pop
sbb
movsb
xlat
jbe
movsb
popa
push
sbb
fdivrl
sbb
fucomp
setno
daa
inc
outsl
or
xor
mov
mov
cmp
hlt
repz
mov
and
inc
in
mov
lods
aam
out
popa
loop
and
and
jnp
mov
and
data16
das
cmc
fsubl
mov
test
dec
jbe
lods
xchg
xlat
mov
inc
or
pop
add
movd
push
push
sbb
pop
cltd
out
and
sarl
fimull
push
fildl
loope
aam
not
pop
inc
cmp
test
movsl
and
and
icebp
jb
nop
gs
add
pop
testb
ljmp
xchg
cmp
test
jecxz
repz
fadds
jnp
sub
jno
in
mov
pop
cmp
sbb
mov
sbb
out
fimull
jge
jle
dec
cmp
icebp
sbb
mov
enter
test
mov
pusha
inc
ret
inc
jne
adc
jae
and
cmp
mov
hlt
out
pop
cmp
sub
add
mov
push
lahf
xchg
dec
repnz
xor
iret
xchg
mov
sub
rorl
or
adcl
and
or
leave
sahf
test
push
jle
in
or
cmpsb
dec
lret
xchg
jne
ds
mov
jne
imul
leave
decb
popa
inc
dec
pop
mov
inc
xchg
lret
xor
fwait
ja
arpl
test
xchg
jl
popa
sbb
fadd
fidivrs
pop
and
ds
repz
shrd
mov
cld
mov
inc
aad
add
jne
mov
lret
push
jg
mov
mov
test
mov
xchg
aam
aas
push
mov
mov
sub
pop
dec
jmp
add
aam
sbb
ja
push
dec
inc
lss
subl
cmp
dec
or
adc
push
enter
xchg
sub
push
dec
push
cmc
popa
pop
dec
or
lret
insl
adc
sbbl
push
cltd
loope
jp
scas
cld
es
add
scas
add
imul
call
cltd
loop
inc
jno
dec
data16
call
jmp
push
stos
or
xchg
sub
stc
rorb
mov
xor
stos
sahf
loopne
in
in
fldl
fwait
movsl
mov
xchg
add
pop
push
mov
rorl
fcom
or
or
lods
loop
aas
ds
dec
frstor
push
dec
jp
faddl
iret
dec
in
jnp
insl
in
xchg
ret
sbb
lea
add
out
jmp
ljmp
xor
and
int3
cmp
iret
pop
cmc
mov
xlat
daa
jmp
stos
inc
into
and
fstpt
sbb
call
mov
icebp
or
cmp
mov
mov
mov
jno
mov
cmp
fwait
add
jbe
or
sub
add
stc
mov
jg
push
add
xchg
incl
jge
push
scas
hlt
lret
or
push
push
push
jno
scas
jge
pop
push
inc
popa
arpl
std
xlat
outsl
imul
sub
jg
mov
in
xchg
pop
jae
sub
xchg
mov
shl
fldl
lods
sahf
pop
aaa
mov
dec
mov
mov
adc
sti
lahf
pop
jp
mov
dec
pop
int3
fdivl
inc
cmp
pop
pop
aaa
pushf
cmp
hlt
subb
mov
call
je
in
sbb
mov
mov
sub
xlat
add
jnp
mov
dec
aad
sub
xchg
fcomip
fs
adc
pop
adc
add
movsl
fisttpll
nop
sbb
add
push
aad
xchg
jmp
sti
mov
fsubl
adc
bound
lret
out
fcoml
add
push
xlat
fwait
nop
mov
jg
adc
stc
push
mov
jno
orl
lea
repz
sbb
lcall
imul
fmuls
push
adc
into
jnp
test
cli
push
repnz
setge
jbe
es
bound
popa
fdiv
mov
insb
hlt
and
jecxz
repnz
inc
cmpsl
cmp
xor
and
and
loopne
rolb
pushf
or
push
call
xor
test
loop
int
xchg
int
imul
jb
jmp
xchg
jo
jnp
pop
sbb
and
cmp
add
ss
dec
stos
xchg
xor
push
mov
xchg
dec
lea
es
mov
bound
cs
mov
fnstcw
addr16
add
out
sbb
js
subb
inc
popa
movsb
sbb
pop
inc
jbe
pop
ret
jb
mov
lods
cmp
adc
pop
roll
sbb
rcl
bswap
xchg
ss
xlat
rorl
fisubs
test
cmpb
es
outsl
lods
in
or
fwait
cld
mov
sub
in
lahf
bound
inc
stos
cmpsb
push
rcrb
daa
xchg
addr16
add
jle
ret
inc
lret
pop
ljmp
out
call
icebp
enter
bound
ja
fwait
lock
test
add
fmuls
into
pop
mov
rolb
push
mov
sbb
mov
and
adc
incl
xchg
push
or
xor
sub
jp
ss
xlat
pop
add
cmp
lahf
divb
cmp
std
andb
xor
and
dec
and
gs
adc
pusha
pop
movsb
dec
mov
orl
enter
js
into
cmp
orb
out
sbb
ret
and
jmp
outsb
in
aaa
mov
mov
add
mov
mov
loopne
into
sbbb
sarb
adc
pusha
cmpsl
xor
mov
xor
test
lods
mov
pop
lahf
mov
addl
pushf
fucomi
sbb
mov
lds
cs
sbbb
stos
xchg
movsb
add
adc
inc
xorl
lcall
xchg
shlb
pop
mov
int3
movsl
ja
and
aaa
xor
push
mov
aaa
out
mov
scas
sti
out
imul
add
mov
sub
aad
jo
cmp
movsb
mov
cmp
stos
or
sbb
xorl
jg
ljmp
cld
mov
stc
lds
int3
imul
mov
mov
sub
lea
push
repnz
push
movsb
push
stos
andl
movsl
mov
mov
into
cmp
sub
jp
push
lcall
das
fidivrl
lret
pop
ljmp
fildll
scas
pop
mov
push
lcall
das
fidivrl
lret
pop
ljmp
fildll
das
pop
mov
push
lcall
das
fstpt
lret
pop
ljmp
fildll
scas
pop
mov
xchg
outsl
gs
in
pop
fstpl
dec
xor
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
mov
xchg
mov
lods
mov
sub
sbb
or
js
push
inc
mov
xchg
mov
fcom
enter
sub
sbb
or
js
imul
mov
mov
clc
bnd
ret
or
push
xor
sbb
and
cwtl
shl
testl
lock
ficoms
dec
cmovns
sti
jecxz
mov
jbe
addr16
jne
clc
loop
outsl
and
and
and
pop
das
bound
push
ljmp
repnz
roll
cmp
or
and
adc
std
jns
jecxz
fcmovnu
dec
mov
xchg
loop
fcmove
and
into
movsl
aam
xchg
bound
mov
jb
pop
sbb
jns
or
cmp
and
xchg
in
addl
and
jb
cmp
test
push
mov
sub
mov
mov
fmuls
xor
call
arpl
xor
mov
mov
clc
bnd
ret
sub
sbb
or
js
push
add
mov
fcmovnu
ror
ret
popf
mov
xchg
mov
dec
mov
inc
dec
cmp
dec
jb
push
sub
into
into
sti
fcmove
loope
mov
cmpsl
popf
test
push
gs
push
pop
or
push
fcomip
test
fdivp
in
cli
mov
ror
ret
sub
sbb
or
js
push
inc
mov
xchg
mov
fcom
enter
sub
sbb
or
js
push
inc
mov
std
testl
test
mov
sti
cmp
pusha
gs
adc
fs
jno
push
scas
cmpsl
lods
cld
mov
jle
cmpsl
loop
loope
insl
lret
cmp
inc
push
jecxz
or
xor
jecxz
cmp
dec
inc
mov
pop
xchg
dec
idiv
push
and
cmp
adc
or
lcall
into
aas
test
mov
rcll
xlat
xchg
into
mov
sbb
mov
fbstp
push
xchg
sub
jae
pop
add
aad
sub
and
jecxz
dec
imulb
das
fildl
aad
pushf
lds
call
xor
int
or
cmp
add
xchg
xchg
jns
dec
adc
add
shrb
fldl
add
adc
cmp
xchg
aaa
cmp
shlb
mov
mov
and
pop
add
sbb
dec
ret
sbb
adc
or
pop
cwtl
xchg
add
push
jg
les
xchg
jp
adc
mov
insl
adc
xchg
or
push
clc
ss
mov
pavgw
rol
mov
mov
sbb
xor
mov
mov
mov
fisubl
and
jmp
push
lock
arpl
sbb
adc
ret
or
push
jg
mov
mov
mov
int
jge
and
add
fsubrp
sbb
ss
push
add
sub
dec
into
ljmp
dec
in
insl
push
out
adc
or
in
lods
xchg
xchg
adc
xor
outsl
mov
mov
nop
call
mov
pop
loop
xchg
jle
arpl
sbb
cmp
jno
aas
insb
pop
mov
cs
lret
push
cmp
cmp
adc
push
mov
test
je
hlt
and
adc
sbb
dec
cs
fwait
imul
std
cmpsl
lds
sub
sbb
jp
addl
mov
mov
out
dec
mov
loopne
fucom
test
stos
ja
rorl
sub
lahf
rcrl
stc
pop
jnp
daa
fdivrs
enter
or
cmp
add
jne
cmp
add
and
push
push
outsl
inc
loop
cmp
push
xchg
and
inc
sti
xchg
stos
out
or
push
jmp
mov
fwait
jecxz
and
sti
push
add
subl
sub
movsb
pop
jne
cmp
inc
sbb
shl
loopne
cwtl
cmp
scas
fisttpll
add
or
adc
or
sbb
divl
pop
cli
and
out
xchg
sub
adc
fnstcw
andb
inc
inc
popf
mov
shll
xor
mov
test
adc
pop
inc
xor
in
cltd
pop
xor
pop
loopne
fstp
adc
inc
adc
dec
add
loop
jns
fstps
movsl
movsl
push
sub
scas
rol
fstl
inc
pop
sbb
subl
mov
add
sub
mov
mov
sub
and
sub
inc
jns
bound
push
inc
lds
ds
out
fwait
insb
hlt
xchg
inc
xchg
pop
movsl
aam
cs
in
jno
and
leave
mov
jae
jne
jg
bound
push
or
cmp
out
inc
pop
cmp
xchg
stos
push
dec
lds
leave
js
mov
mov
dec
mov
jnp
dec
nop
sbb
inc
push
dec
and
imul
pop
decb
int3
repnz
mov
ss
mov
stc
out
sahf
icebp
push
dec
add
push
in
enter
add
xor
inc
xchg
ja
xor
push
std
jno
ja
push
shr
ja
out
cmp
lock
sbb
rolb
test
nop
repz
andb
xchg
outsb
cmp
enter
adc
repz
mov
lock
movsl
gs
dec
inc
call
inc
in
imul
pop
jle
add
xlat
and
enter
scas
je
cwtl
cld
xor
pop
sbbw
mov
fisttps
mov
jne
popa
cmp
jp
iret
sbb
mov
or
dec
mov
cmp
adc
pusha
push
hlt
sub
adc
int3
incb
gs
cmpsl
and
push
cmp
push
xchg
test
fcmovnu
movsb
mov
xchg
xchg
jbe
int
lret
mov
out
mov
arpl
mov
add
cmp
sbb
lahf
mov
sbb
push
dec
and
jbe
fnstsw
and
and
icebp
into
xor
sbb
xor
addr16
popf
mov
gs
sub
sti
scas
dec
dec
out
push
loop
iret
fwait
insb
stos
fisubrs
sar
pop
stos
xlat
mov
xchg
fists
xor
xchg
stos
in
inc
out
adcl
jmp
into
and
mov
faddl
gs
cmp
push
cmpsb
pop
fisubrl
jbe
cmp
or
pop
inc
inc
xchg
sbb
mov
sbb
sbb
pop
pop
fistpll
outsb
adc
xchg
fwait
adc
shlb
jmp
inc
cmp
adc
add
mov
repz
inc
loopne
scas
adc
inc
ja
mov
sbb
std
aaa
in
rol
out
scas
adc
ja
int3
sbb
nop
pop
cmpsl
daa
stos
jge
addb
inc
mov
addr16
cs
idivl
mov
push
pop
jno
xor
xchg
mov
rcrb
repz
pop
rcrb
mov
and
jo
adc
daa
fs
add
mov
sbb
jge
xor
sub
lock
movl
mov
es
jae
fisubl
popf
dec
sub
and
in
stos
xchg
dec
nop
int
fstl
out
inc
xor
int3
enter
cmp
jne
roll
add
fadd
lods
xor
pop
adc
int
sbb
jmp
movsb
mov
push
test
xchg
adc
sub
test
movsl
sub
fisubrl
int
jbe
inc
push
or
lahf
scas
inc
xchg
cli
push
inc
sub
push
out
in
sar
imul
test
inc
rol
xchg
jne
pop
dec
loopne
inc
ficoml
imul
xor
inc
lds
xor
push
fisubl
ret
es
addr16
iret
jecxz
fistps
jl
jbe
pop
mov
mov
pop
mov
jmp
cmp
popl
pop
sub
jo
ret
lods
scas
jl
add
imul
enter
test
inc
addl
jnp
mov
sbb
mov
iret
loope
xchg
or
popf
nop
inc
arpl
sbb
jg
mov
cmp
or
lahf
cmpsl
inc
cmp
adc
xchg
aaa
aad
out
adc
pop
movsb
fnstenv
in
mov
cmpsl
gs
mov
sbb
jl
jp
aas
sbb
mov
cmpsl
addr16
movsb
cmp
bound
xor
clc
jecxz
dec
data16
xor
cmc
ja
dec
push
jns
jns,pn
loope
dec
mov
pop
xchg
dec
test
popf
jbe
mov
cmp
dec
fistpl
cmp
cltd
fs
shr
pop
ficompl
xchg
test
adc
sub
xchg
les
movsb
dec
lds
ljmp
inc
bnd
jns
xchg
mov
inc
imul
xchg
xor
push
shll
inc
rorb
test
test
jmp
lret
push
and
ror
aas
jmp
ljmp
xor
xchg
arpl
mov
fstl
pushw
pop
hlt
xor
xor
push
dec
pop
cmp
push
add
push
ljmp
sub
stos
dec
jnp
cmpsb
dec
pop
push
push
les
aas
jecxz
push
or
mov
sub
mov
mov
push
frstor
xchg
inc
insb
sub
dec
je
push
es
movsl
or
push
cmc
sbbl
aaa
out
fldt
add
mov
mull
int
mov
into
lods
and
mov
call
sbb
pushl
sbb
sahf
sbb
xor
enter
mov
not
mov
xchg
icebp
loop
xchg
push
sub
lret
jae
push
xchg
outsb
cmp
jnp
inc
push
rol
pop
inc
mov
fsubrl
lea
or
scas
vhsubps
test
into
ret
je
or
das
lret
mov
adc
pop
dec
adc
push
mov
pop
out
subl
mov
xchg
xchg
out
sbb
dec
mov
mov
pusha
or
and
gs
cld
pop
sub
pop
xor
andb
jbe
aas
push
shll
sbb
mov
mov
xchg
ret
pusha
cmp
add
js
add
push
fisubrl
add
out
loope
push
mov
ja
dec
arpl
into
int
dec
rcrl
mov
xchg
stos
and
bound
sbb
add
jno
fimull
mov
in
jl
out
xchg
push
dec
cmp
mov
fsubr
scas
clc
insl
cli
jne
mov
jbe
xor
dec
or
stos
in
xor
fistps
sbb
std
out
or
call
ds
jg
pop
dec
cmpsb
insb
loop
cmp
pop
sub
and
iret
and
ds
jg
shr
xor
and
popw
rcll
jb
mov
jo
jae
fildll
dec
xor
test
xor
xchg
inc
pop
in
and
push
sub
popa
psrlw
ja
cmpsb
shl
xchg
add
xchg
pop
mov
fiadds
dec
test
cmpsl
je
aad
or
bound
lret
pop
push
out
lret
jno
dec
dec
mov
popa
push
test
addr16
mov
mov
call
sub
lret
or
sub
add
ret
dec
pop
in
std
jo
xchg
push
out
sbb
movsb
or
and
jg
pop
push
gs
mov
fmuls
dec
mov
je
fisubl
fisttpll
das
mov
push
sub
clc
add
test
jb
pop
push
push
jle
cmp
outsl
int3
sbb
dec
pop
mov
mov
dec
call
shl
mov
dec
and
jle
popf
leave
popf
and
jb
fldenv
xchg
imul
insb
sbb
add
dec
cwtl
cmpsb
dec
cs
das
mov
add
mov
push
loop
insl
mov
mov
testb
push
push
push
lock
jmp
pop
jno
setne
sbb
adc
lods
nop
xor
ret
lea
jae
mov
int
shll
shrl
cmpsl
adc
rol
mov
scas
rclb
jb
out
xchg
push
dec
push
jo
pop
cmc
inc
call
aad
cmc
aad
cmp
jg
dec
cmpsl
mulb
stos
andl
push
adc
xor
lock
adc
pushf
movsb
leave
inc
mov
or
lds
pop
mov
xchg
dec
jo
jmp
out
stos
clc
xchg
sbb
sub
dec
jae
and
inc
je
push
ljmp
shlb
adc
cmp
inc
mov
jecxz
push
sub
xlat
pop
popa
sbb
ret
mov
sbbl
and
lods
ss
imul
sbb
mov
xor
or
arpl
jmp
sahf
repnz
test
pop
inc
adc
push
adc
pop
insb
icebp
mulb
test
and
in
stos
mov
fimull
xor
inc
iret
jns
lods
ds
stc
pop
scas
push
push
std
out
ret
pop
adc
je
inc
mov
ret
cwtl
mov
fiaddl
jo
xchg
sbbb
pop
fdivrl
fwait
cwtl
repz
xchg
xlat
popa
cmp
pop
sub
push
fadd
sbb
out
add
jle
sbb
xchg
aad
test
stc
sub
clc
std
cmpsb
shlb
add
sub
daa
scas
frstor
mov
jbe
jge
mov
pop
mov
nop
adc
hlt
fnsave
cmpsb
pop
push
mov
add
les
sti
cmp
test
pushf
inc
jb
adc
testb
popa
adc
mov
pop
jecxz
adc
hlt
xchg
iret
push
scas
into
push
je
cmc
sbb
out
mov
xchg
adc
js
pop
jns
add
repz
and
mov
fdiv
aam
or
cmpsl
pop
into
aaa
ja
ja
test
mov
sub
bound
dec
or
fwait
dec
data16
fdivl
fwait
adc
icebp
cmc
fdivs
jae
repnz
rcll
sbb
sahf
xorl
mov
xchg
fs
shrl
pop
push
or
add
sbb
jo
pop
mov
scas
xchg
repnz
push
jb
out
mov
mov
fbstp
daa
lds
push
sbb
pop
fistl
xchg
jmp
adc
mov
xchg
push
xchg
aam
mov
adc
xor
sahf
insb
pop
cli
jecxz
cwtl
add
or
or
mov
not
adc
xor
pushf
xchg
xchg
test
add
pop
ret
pop
add
mov
outsl
loop
sbb
loop
addr16
dec
cwtl
mov
cmp
clc
fiaddl
iret
jo
out
mov
movsl
xchg
and
and
movsl
sub
gs
inc
mov
out
jno
mov
test
mov
les
mov
nop
adc
jmp
sbbb
in
shrl
loopne
dec
gs
lods
push
adc
cld
lcall
fsts
cmpsl
jns
and
in
nop
int
push
jl
cmpsb
fcmovbe
testl
fs
adc
popa
mov
xor
dec
outsl
aaa
arpl
movsb
inc
add
mov
sahf
insl
bound
test
dec
dec
inc
mov
sbb
adc
stos
sbb
xchg
push
cmp
aam
or
and
ds
mov
mov
cltd
iret
repnz
sbb
xchg
xchg
jl
cmpsl
test
repnz
iret
stc
dec
fisubrl
mov
bound
jae
xor
lahf
sub
insl
pop
sub
push
dec
sbb
rcrb
push
insl
sub
ret
ss
ret
adc
dec
add
gs
outsl
pop
repnz
mov
inc
push
pop
sub
fstpt
shll
stos
repz
movsl
dec
push
out
inc
daa
jnp
push
lahf
and
pop
in
rorb
lret
data16
movsb
pop
ret
fbld
insl
int3
iret
sbb
jmp
nop
divl
jmp
lea
lds
cmp
popf
inc
andl
inc
jg
xor
daa
inc
cmp
daa
jle
inc
mov
or
rcrl
cmc
addr16
pop
mov
mov
int3
inc
mov
test
sbb
mov
ljmp
fistl
adc
insl
xor
pop
jno
cld
loop
cmpsl
xor
imul
leave
jnp
bound
rorb
pop
mov
scas
sub
lcall
lahf
stos
jno
test
lret
ret
cmp
mov
or
js
movsl
cmc
rorb
test
xchg
mov
scas
cmova
dec
insb
js
jmp
jne
fs
jb
out
aas
fs
push
push
lods
je
aaa
dec
lods
lock
mov
dec
sbb
inc
stc
push
fldcw
add
push
xchg
pushl
push
sub
iret
ljmp
push
sbb
iret
pop
add
cmp
mov
lcall
rcll
fsubrl
pop
int3
adc
imul
mov
xchg
pop
out
lret
notb
pop
fldenv
loopne
push
push
mov
imull
inc
dec
inc
int3
mov
fs
arpl
inc
inc
les
shlb
cmc
rcl
lcall
mov
lcall
push
sub
outsb
push
inc
inc
pop
adc
jns
daa
push
leave
popf
pop
sub
into
repnz
sahf
rcr
inc
pop
inc
cli
and
repnz
repnz
add
push
mov
dec
lea
popf
push
adc
movsl
loope
out
sbb
imul
and
fsubr
mov
out
pop
dec
rep
xor
push
jecxz
pop
rcrl
pop
dec
je
jne
aas
xor
and
sarb
or
ja
icebp
add
cmp
push
fwait
and
jmp
xchg
push
xchg
adc
jno
iret
xchg
dec
or
pop
inc
xchg
mov
icebp
out
repnz
mov
mov
nop
mov
popa
jle
push
rcrb
mov
push
push
movsb
push
xor
popf
mov
inc
scas
in
xor
adcl
loopne
mov
jns
dec
sbb
xchg
inc
sub
jbe
mov
leave
adc
add
aad
mov
mov
adc
cli
mov
xor
mov
sbb
cmp
pop
xor
and
jo
mov
mov
movaps
jbe
scas
push
xorl
mov
in
dec
icebp
sbb
imul
loop
push
sub
mov
jbe
aaa
sbb
pop
das
pop
popf
or
sbbb
add
jbe
out
adc
mov
xchg
dec
sub
jo
sti
cmp
push
lods
out
jbe
out
cltd
lods
add
arpl
sbb
lods
mov
aad
mov
dec
push
mov
movsb
jnp
ret
outsl
xchg
mov
test
mov
lods
mov
mov
jo
cmp
ss
and
push
je
push
xor
fs
cli
movb
xchg
mov
jae
xchg
mov
lahf
lahf
lds
sbb
test
mov
shrb
mov
loop
dec
xor
mov
ret
outsl
xchg
fistl
and
jmp
outsb
jno
jmp
add
rol
imul
xchg
cmp
jmp
roll
or
lods
pop
repnz
out
leave
ret
sbb
int
aad
dec
xor
cmpl
xchg
push
sbb
lahf
jno
sbb
pop
and
pushf
aam
andl
fldcw
and
stos
test
cmp
lret
inc
mov
lcall
ljmp
cmp
jo
sti
jb
stc
jbe
mov
xor
and
xchg
cmp
adc
jge
out
push
out
out
cmp
les
add
icebp
sub
bound
mov
dec
mov
pop
pop
in
mov
fwait
and
loopne
dec
scas
es
inc
aam
xchg
jb
cmp
int3
dec
cmpsl
repnz
and
mov
call
pop
push
sub
xrelease
jae
jb
mov
jb
jp
jecxz
mov
ret
xchg
pop
xor
sbb
js
sub
add
rclb
mov
mov
sub
leave
andl
sbb
mov
push
xor
and
adc
movsl
mov
and
les
inc
loope
sub
data16
fs
dec
mov
pop
xor
push
out
adc
cmp
xor
gs
add
jp
jecxz
cmp
push
pop
mov
xor
inc
pusha
jle
cmp
xor
and
cmp
or
lcall
push
loopne
sahf
or
dec
rorl
mull
inc
pop
jl
ljmp
out
fadds
or
mov
mov
mov
jno
not
mov
or
inc
fsts
and
cmpsl
popa
mov
loope
hlt
mov
divl
dec
xor
pop
rclb
xchg
mov
sub
inc
xchg
imul
pop
sub
fiadds
fsubr
push
mov
mov
cmpsb
add
xorl
fldl
sub
enter
ror
add
adc
into
pop
ret
stos
test
mov
jle
add
lods
enter
cli
sub
ret
lods
sahf
xor
mov
xor
lret
cmc
cmpsb
test
sbb
mov
lock
sbb
mov
outsl
jecxz
rcrb
lea
push
out
jb
jl
and
outsl
sub
or
mov
mov
repnz
sbb
arpl
and
add
cmpsb
arpl
cld
das
incb
loope
fstpt
loopne
rcll
fwait
shll
in
sbb
insl
repz
sub
sbb
flds
sub
and
sub
xor
adc
cmp
movsl
out
sbb
insb
add
dec
loop
mov
js
aas
clc
jno
rcl
jle
ret
inc
lret
xchg
daa
dec
pop
test
dec
jno
fcoml
and
pushf
aam
repz
clc
bnd
ret
sub
sbb
or
js
push
inc
mov
xchg
mov
fcom
enter
sub
sbb
or
js
push
inc
mov
xchg
mov
fcom
enter
sub
sbb
or
js
push
inc
mov
xchg
mov
pop
rorb
xor
mov
cli
loopne
mov
dec
push
jns
mov
je
inc
insl
cmp
cld
call
jmp
cwtl
test
push
jns
or
or
sub
dec
clc
lods
jmp
test
cwtl
test
push
popa
cmp
sub
sbb
or
clc
leave
call
mov
lret
in
xor
cmp
js
sub
xchg
lret
cmp
xor
jno
adc
dec
aam
lods
pusha
lds
adc
ljmp
daa
push
mov
mov
inc
adc
xor
cmpb
gs
fs
leave
sbb
andl
std
test
imul
out
pusha
mov
push
push
out
je
mov
sbb
push
mov
xor
and
or
xor
inc
inc
xor
cli
popf
cmp
mov
sub
rolb
imul
mov
loopne
es
push
jns
or
sbb
sub
and
leave
call
loopne
xchg
test
cwtl
mov
mov
cmp
or
jge
dec
pop
mov
in
movsb
pushf
fucomp
rcrl
and
xor
sbb
push
sbb
or
mov
cltd
ljmp
pop
xor
sub
sbb
or
clc
leave
call
stc
mov
test
push
jns
or
sbb
sub
cmp
leave
call
stc
mov
test
int
jecxz
insb
jnp
addb
push
lahf
and
xor
pop
pop
in
jg
aam
sahf
adc
sub
or
push
scas
out
push
cmp
push
mov
aaa
pop
fnstsw
movsb
ljmp
in
xchg
push
jle
jne
lods
in
sahf
mov
mov
sbb
das
aas
scas
adc
inc
or
xchg
in
int
insl
mov
or
mov
divl
popa
inc
inc
test
dec
imull
pop
aad
sbb
pop
mov
mov
sbb
mov
and
sub
or
pop
inc
jp
mov
fwait
out
ret
sub
inc
pop
ud1
push
inc
push
add
add
mov
xchg
mov
cli
ret
push
gs
mov
movsb
std
les
jae
dec
test
pushf
mov
aad
pop
inc
cmp
sbb
push
loope
or
add
xchg
xchg
mov
xor
xor
stos
out
dec
cli
test
push
dec
add
fists
adc
shll
xorl
pusha
mov
jnp
movsl
cmp
stos
out
test
fists
imul
sub
paddsw
fadds
dec
cwtl
push
rep
rolb
sarb
cmp
mov
fdivrl
mov
test
loop
adc
jl
push
sub
mov
fisubrs
and
bound
dec
imul
data16
rolb
sbb
add
and
mov
aaa
mov
mov
jecxz
xchg
pop
test
adc
fyl2xp1
outsb
cmp
std
mov
adc
mov
mov
in
xchg
leave
cmp
rcll
xor
xor
or
in
xor
or
mov
fs
pop
roll
std
xchg
mov
cli
mov
jno
pop
in
cmpsl
cs
mov
pop
cmpsb
lret
insb
movsl
mov
xor
pop
sub
ret
sub
sbbb
xchg
push
mov
xchg
cmc
ja
mov
jae
pop
xchg
stc
sbb
add
les
dec
js
add
movb
mov
push
and
fwait
sub
pop
xchg
mov
leave
sbb
cmp
fwait
adc
outsl
push
cmp
sbb
js
dec
mov
xchg
pop
test
mov
lea
sahf
loope
ret
ss
inc
mov
cmp
mov
jmp
lret
pop
cwtl
insl
pop
jns
bound
mov
sub
pop
jmp
mov
pusha
loopne
arpl
loop
js
sub
andl
int3
push
sbb
retw
cltd
inc
inc
mov
mov
mov
push
aad
mov
js
lds
aaa
aaa
jg
push
jb
push
rorl
fnstenv
or
push
cmp
aas
shll
and
xchg
mov
xchg
das
das
jecxz
cld
and
xor
int
lret
inc
mov
mov
xor
mov
cs
mov
mov
mov
das
dec
and
outsb
jmp
xor
ret
push
ljmp
xor
bnd
inc
cwtl
inc
pop
in
inc
push
mov
sub
inc
out
add
mov
fistpl
and
pop
sbb
daa
dec
xchg
icebp
std
pop
push
xchg
call
fwait
xchg
or
sub
sbb
jmp
inc
sub
mov
push
daa
xor
inc
shll
rclb
mov
sub
jno
js
in
pop
and
push
jge
jg
sbb
sub
stos
jne
inc
dec
push
xor
insl
adc
xchg
mov
mov
inc
jns
inc
inc
dec
mov
mov
pop
divl
adc
mov
pop
lock
mov
sbb
adc
adc
xor
popa
pop
push
icebp
pop
inc
push
xchg
xlat
xchg
loope
xchg
add
in
scas
dec
xchg
shr
insl
ret
jae
add
sub
sbb
loope
jge
jmp
jp
push
pop
sahf
sub
repz
jmp
push
out
cmp
cmpsb
mov
inc
inc
and
clc
dec
repnz
fldl
add
ret
out
mov
cmp
arpl
mov
add
cltd
notl
adc
sbb
xor
imulb
sub
sub
cli
mov
fdivr
das
add
jnp
imul
adc
ror
dec
je
xchg
es
rclb
pop
xor
adc
lods
pop
mov
push
jb
cmp
mov
or
xorb
popl
pusha
jbe
xchg
and
stos
mov
fistps
cmp
stos
ja
test
jns
cmp
inc
cs
push
addr16
stos
mov
shrl
push
or
ror
stos
cld
and
fisubs
xor
sahf
sti
sbb
mov
outsl
mov
scas
cmc
sti
inc
cli
aaa
pop
pusha
mov
les
xchg
les
loopne
shrl
jo
adc
mov
pop
adc
xchg
mov
add
inc
addr16
push
stos
aad
dec
sti
ja
sub
out
mov
add
out
add
fsubl
or
inc
jl
ds
sarb
push
ss
mov
ror
shlb
push
xchg
ret
addr16
jne
inc
add
popa
xchg
ss
mov
je
inc
jne
lea
mov
in
fxch
popa
sub
sub
xchg
insl
and
popf
test
mov
fnsave
arpl
rcrb
mov
inc
jns
jae
jl
fcmovbe
adc
mov
mov
or
adc
sub
jne
lcall
mov
bound
and
and
cmp
test
fwait
mov
jae
cmp
test
and
pusha
mov
cmpsb
xchg
cmpsw
adc
inc
jnp
mov
pop
inc
and
mov
fwait
aas
push
jl
jg
mov
int3
cld
divl
cltd
push
rclb
cmp
aam
mov
mov
in
test
test
push
adc
adc
xor
cmpsb
jns
out
pop
lahf
adc
sarb
fidivrs
xchg
xchg
cltd
out
fs
or
ds
fcoms
mov
loop
inc
and
or
sub
adc
inc
mov
mov
shrb
call
pop
dec
test
repz
scas
xor
sbb
jb
sbb
popa
imulb
inc
popa
sti
pop
lret
clc
pop
or
add
and
xchg
mov
in
mov
mov
push
fwait
out
std
mov
push
push
jbe
dec
popf
mul
cmp
push
xchg
shr
int
shlb
sbb
mov
push
lock
push
faddp
cmp
dec
sbb
ret
in
cmp
add
push
data16
lods
daa
and
sub
add
adc
arpl
adcl
ret
das
dec
outsb
or
push
cmp
adc
xchg
cmpl
int3
add
push
and
adc
inc
push
sbb
push
push
jl
outsl
pushf
fdiv
ljmp
jbe
sbb
notl
cmp
xchg
push
out
jl
cmp
arpl
mov
loopne
bound
call
sub
add
daa
and
jmp
testl
push
xchg
clc
push
push
mov
out
jge
xchg
roll
sub
jae
loope
push
repz
aam
or
sub
sub
mov
loop
aaa
or
mov
rolb
fldt
sbb
mulb
lock
icebp
add
into
or
pushf
xchg
shll
test
out
inc
push
ljmp
dec
jp
inc
test
imul
pop
xchg
adc
cli
int
mov
ss
dec
aam
dec
mov
push
add
sbb
mov
fimuls
enter
sbb
ficompl
dec
dec
out
xor
inc
adc
and
cli
shl
push
xor
and
add
cmp
jmp
jo
into
cmpsl
push
xor
pop
cmp
adc
stos
jmp
call
dec
ljmp
push
mov
mov
or
outsl
lock
ret
mov
popf
xor
sarb
dec
pushf
jae
xchg
sahf
and
aam
inc
inc
or
push
add
push
mov
adcl
out
xchg
roll
sbb
popf
sub
mov
shrb
xlat
jp
fsubrl
fxch
outsb
and
imul
daa
hlt
pop
push
in
xor
frstor
fwait
addr16
sub
xor
test
out
cld
or
imul
inc
cmp
mov
js
push
push
jmp
pop
dec
rcrb
inc
fwait
int
in
mov
nop
cmpl
dec
stos
test
mov
cltd
add
loopne
dec
aaa
mov
cld
dec
mov
inc
outsl
mov
bound
mov
adc
js
popa
and
leave
ret
fcmovnb
xor
notl
xor
cmp
lret
dec
fdiv
mov
dec
inc
out
arpl
sbb
pop
insb
jmp
out
insb
jp
cs
cmpsl
arpl
pop
mov
jecxz
add
std
cmpb
adc
mov
jl
ret
sbbl
and
push
lret
out
outsb
mov
leave
pop
adc
lods
jge
je
inc
test
loope
inc
fstps
dec
sbbl
dec
add
push
adc
outsl
sbb
dec
outsl
cmp
add
mov
stos
xchg
lret
decl
roll
lret
out
repnz
inc
xor
inc
mov
fbstp
loop
push
push
adc
scas
cltd
mov
int3
dec
clc
mov
aam
imul
stc
jae
jnp
call
out
jle
mov
jecxz
das
and
scas
out
jae
js
mov
sub
jg
loopne
mov
fbld
cli
sub
add
movsb
xor
fisttpl
cli
bound
sub
call
fucomip
push
xor
ret
and
jne
cmpsb
lods
fsts
mov
in
enter
pop
call
ret
mov
sbb
neg
sahf
scas
and
icebp
pop
insl
sahf
mov
sub
jp
lock
outsl
rcl
clc
sub
sbb
jae
aad
pop
aaa
xor
repz
xor
fistpl
xorl
push
out
add
inc
mov
xchg
js
xor
popa
push
sbb
or
xlat
adc
data16
mov
aaa
push
xor
sbb
mov
adc
cmp
xor
sbb
mov
mov
xor
push
call
xor
pop
xchg
pop
dec
mov
jl
cmp
mov
out
sti
in
pusha
cmp
xchg
lods
add
shlb
mov
das
pop
insb
xchg
test
clc
or
sub
lods
mov
sbb
add
inc
into
jl
stos
fisttpll
sub
mov
jae
ret
and
and
push
arpl
ret
shll
pop
das
faddp
out
mov
mov
je
lret
and
adc
and
into
add
sbb
xchg
sbbl
into
ss
mov
jo
adc
mov
or
in
aam
jle
in
cmp
ret
dec
lods
outsl
xor
jmp
dec
icebp
or
push
add
mov
and
or
std
jmp
adc
dec
out
sub
loope
push
lahf
inc
add
push
cmp
jne
cmpsb
lods
adc
popa
jecxz
scas
aaa
ret
ja
xchg
and
fsubrl
push
int
mov
sub
xchg
push
int3
mov
add
and
sbb
push
cmp
in
or
inc
movsb
lock
push
push
mov
inc
mov
fs
jbe
mov
fwait
cmpl
cld
lret
push
lock
shll
stos
cld
mov
jbe
in
movsl
cmp
jle
rorb
cld
cmpsb
push
fs
dec
loop
push
out
cmp
jno
std
sub
or
xor
stos
push
addr16
lret
out
mov
or
int
pop
cmp
mov
nop
fisubrl
cmp
jle
fildll
aad
push
cmp
mov
aad
clc
rcrl
sbb
imul
lods
les
adc
ss
jnp
sub
adc
aaa
xchg
mov
scas
shl
mov
cmc
sbb
rcrl
lahf
les
lds
out
or
fwait
mov
push
mov
dec
pop
sbb
imul
out
jmp
or
cmp
mov
test
imul
inc
addb
dec
push
add
out
jp
out
xchg
mov
adc
mov
int3
adc
aad
inc
mov
aas
jle
xor
sbb
bound
xor
dec
lea
sub
lock
add
lods
in
or
jae
icebp
stos
std
mov
jnp
xchg
insl
and
dec
jns
mov
and
orl
or
lea
dec
mov
into
popa
inc
scas
es
mov
test
stos
dec
sub
push
lods
lods
ret
bound
xor
mov
jno
in
ljmp
dec
test
rcrl
sub
or
xchg
outsl
push
fs
sbb
imul
mov
inc
mov
sub
lods
pop
in
xchg
outsl
lcall
push
push
out
jo
pop
jo
pop
xor
lods
into
gs
mov
sbb
add
std
cmp
xchg
sbb
popa
pop
loopne
or
mov
push
outsb
cmpb
adc
adc
inc
jns
stos
xor
sub
aaa
push
lcall
xor
mov
testb
sahf
repz
mov
cmp
cmp
imul
fisubrl
std
dec
xor
mov
icebp
and
iret
aas
out
lcall
pop
aam
inc
fs
push
cli
mov
popf
icebp
mov
mov
popa
es
lahf
mov
jnp
sub
dec
mov
cmp
jmp
dec
xchg
inc
js
inc
xlat
out
mulb
stos
mov
mov
jmp
enter
std
add
lock
cmp
adc
dec
xchg
into
adc
sub
push
push
lea
enter
nop
loopne
mov
mov
push
mov
mov
adc
test
bound
add
jnp
mov
sub
inc
stos
jecxz
pop
mov
jmp
sub
fmull
fstps
test
inc
fsub
adc
push
push
out
mov
aaa
lds
inc
xlat
xchg
xchg
addb
and
lods
jge
cmp
xchg
push
sub
lods
outsl
dec
or
dec
jp
push
popf
push
fistpll
and
sbb
es
cmp
xor
jmp
lret
popf
loopne
rorl
popa
pop
pop
push
mov
mov
out
mov
push
push
sbb
fistps
sbb
fs
xlat
xor
movsl
and
cmp
sub
mov
sub
xor
xor
imul
insb
int
xchg
nop
or
mov
repnz
push
clc
fidivrs
cmpsb
int3
xchg
test
imul
mov
sbbb
and
jge
or
jno
add
lcall
cmp
cli
rcll
and
popf
int3
stos
mov
cli
push
pop
inc
pop
xor
xchg
enter
push
pop
les
or
push
dec
pop
cmp
sbb
ss
mov
stc
push
push
arpl
loope
sub
sti
mov
mov
or
test
int3
shll
cwtl
cld
push
mov
insb
add
lret
roll
std
shll
inc
fucom
jne
loopne
jns
xchg
data16
or
pop
scas
imul
cwtl
jb
inc
movsl
xor
aaa
xchg
les
adc
jmp
push
int3
jg
scas
sti
rcll
es
add
add
lock
loope
in
pop
mov
mov
xor
into
mov
and
ja
dec
add
push
xor
xor
adc
dec
lods
cli
or
sbbb
or
xchg
clc
jle
orb
sub
sti
sub
jb
outsb
push
fwait
add
push
sbb
test
sub
add
lret
and
andl
inc
adc
lret
fistpll
imul
mov
movsb
ss
cmp
pop
mov
ficomps
mov
mov
push
orb
jbe
and
push
stos
mov
int3
mov
mov
ja
jecxz
mov
xor
inc
pop
pop
cli
xchg
test
ret
inc
in
inc
cmp
add
or
loopne
cmp
pop
add
mov
lahf
bound
cmp
lods
cmp
es
pop
mov
cs
mov
inc
adcl
cs
cli
add
dec
lods
mov
cmpsl
adc
hlt
cmpb
mov
sub
ljmp
lods
das
mov
xchg
xchg
push
enter
idiv
mov
sbb
mov
xchg
scas
sbb
loop
js
popa
std
hlt
cli
in
rcrl
mov
and
push
cmpl
in
xchg
inc
xor
push
pop
mov
iret
and
movsb
shrl
mov
or
bound
mov
rclb
or
cmc
and
jge
mov
cs
sti
xor
push
xlat
mov
adcl
jnp
pushf
call
popa
xchg
add
lods
pop
adc
xchg
jg
adc
stos
and
pusha
and
xchg
jmp
xor
and
xorl
push
pop
mov
xchg
arpl
movsl
jecxz
fwait
testl
mov
cmpl
insl
leave
jp
popf
in
dec
adc
enter
fwait
ret
push
mov
pop
xchg
mov
adc
in
in
inc
insb
addr16
xchg
in
mov
fisubrs
and
xlat
dec
test
adc
xchg
enter
loop
and
imul
mov
jbe
mov
pop
jecxz
lods
pop
nop
and
insb
addb
xor
cmpsl
popa
jle
es
inc
ljmp
push
scas
cmp
mov
inc
sbb
aam
dec
mov
popa
fbld
idivb
push
push
cmp
cmp
stc
aad
xchg
loop
inc
fwait
pop
or
sub
inc
cmp
xor
xchg
in
and
mov
in
xchg
cld
xor
pop
pop
jne
or
dec
idivl
popf
mov
scas
pushl
jmp
movsb
repz
iretw
fsts
outsl
inc
je
scas
mov
lds
sbbl
stos
in
push
xor
test
in
xor
add
fst
iret
fwait
sbb
sbbb
xacquire
loop
cmp
mov
cmp
pop
bound
jmp
cmp
into
cmp
or
or
inc
lret
pop
andl
sarl
cmp
test
jbe
jl
loopne
jg
sbb
loopne
imul
in
test
lods
lret
or
call
loope
adc
test
bound
aaa
push
addr16
cmc
mov
mov
fiaddl
js
cmp
push
lea
es
jmp
mov
stos
pop
mov
add
jns
roll
and
inc
sub
ret
dec
jno
mov
pop
mov
repnz
and
scas
adc
sub
fidivs
and
mov
mov
fs
xor
cltd
lret
lods
test
push
mov
or
pand
sbb
movl
pop
push
mov
cli
ret
ret
pop
jmp
jbe
push
aad
jg
xchg
ret
lahf
clc
das
xchg
push
mov
sbb
adc
cmp
clc
push
and
adc
or
jae
ret
pushf
lea
mov
pop
sub
push
inc
adc
mov
dec
sub
push
mov
adc
repnz
insl
mov
addr16
mov
popa
and
lods
mov
jmp
and
subl
mov
fs
pop
pop
clc
lahf
mov
xor
add
fs
push
adc
inc
loopne
out
sar
xchg
mov
sub
cmp
sub
out
jmp
cmovns
and
lea
iret
fadds
xor
repz
jae
std
loope
dec
pop
rolb
shlb
aas
pop
sbb
sarl
xchg
sbb
pop
xchg
mov
pop
js
mov
cmpsb
test
rorl
out
dec
jge
popf
mov
jns
adc
inc
int
jae
popf
push
inc
mov
aam
aas
movsl
das
andb
in
out
or
ljmp
inc
mov
lods
pop
pop
stos
push
add
dec
jns
or
sbb
sub
cmp
leave
call
stc
mov
test
push
jns
or
sbb
sub
cmp
leave
call
stc
mov
test
push
jns
or
sbb
sub
cmp
leave
call
std
mov
lods
mov
pop
insl
dec
jns
or
sbb
sub
stc
clc
leave
call
mov
add
out
ja
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
or
xlat
jnp
lret
ds
mov
sahf
add
add
push
add
pop
add
or
mov
stc
add
or
cltd
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
mov
addb
add
cmpsb
add
add
add
add
pop
add
add
add
add
add
sub
add
add
add
add
add
inc
add
inc
add
add
xor
dec
add
add
add
add
mov
add
add
add
add
add
add
add
add
pop
add
test
add
bound
sbb
leave
add
add
add
add
add
add
add
mov
leave
add
add
add
add
add
out
add
add
add
add
add
add
add
add
add
mov
add
add
add
and
dec
add
sub
add
add
add
jge
and
or
add
dec
add
add
push
push
mov
add
add
add
addb
add
add
mov
add
mov
add
add
add
add
add
add
add
inc
add
add
add
add
add
push
add
add
add
adc
loop
lahf
add
add
add
add
add
add
add
add
add
add
ret
add
add
add
add
add
add
data16
pop
add
add
add
add
add
sub
add
add
add
add
add
cmp
mov
add
add
add
dec
add
add
add
add
xlat
add
add
add
add
add
add
add
dec
add
add
mov
addl
add
add
add
add
add
add
add
loope
jae
mov
add
add
add
add
add
add
add
push
leave
add
mov
add
add
sahf
add
sub
add
add
add
add
add
add
or
add
and
rolb
aad
sub
or
sub
or
or
add
and
jmp
add
add
add
add
add
add
add
leave
add
xlat
add
add
add
popa
add
add
add
add
add
scas
add
add
ret
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
loop
xor
push
add
pop
add
add
add
add
xor
sahf
add
add
add
push
add
add
add
add
add
add
scas
add
add
add
add
add
cmp
sbb
in
xor
pop
xchg
or
pop
shr
popf
xchg
xchg
dec
mov
xchg
aad
popf
cwtl
out
mov
divl
mov
orl
or
nop
icebp
and
push
push
popf
clc
mov
mov
pop
xchg
jg
fimull
mov
scas
insl
fsubr
xchg
nop
out
out
iret
add
fs
sbb
mov
enter
cmp
jmp
or
lret
lret
mov
cwtl
out
xor
in
aam
rcr
mov
dec
mov
fsts
sbb
xor
mov
imul
ret
add
push
push
sbb
mov
xor
cmpsb
mov
jbe
adc
add
adc
loop
out
adc
push
movsb
xor
cli
and
adcl
cmpsb
cwtl
add
ja
in
rclb
cld
mov
lods
addl
imul
xchg
insb
or
insl
sub
add
dec
xchg
cs
out
xchg
mov
mov
loope
mov
int
lret
mov
hlt
iret
insl
mov
dec
sbb
mov
jg
jmp
rcrl
pop
pop
aam
cmpsb
pusha
mov
sbb
cmp
popa
xor
xchg
scas
fadds
sub
stos
jnp
fs
nop
xor
dec
jb
xchg
out
cmp
inc
cmp
jno
int
lea
sbb
out
sub
jns
iret
std
cli
les
mov
add
in
popa
mov
sbb
insb
or
or
push
xchg
out
mov
sbb
pop
or
jae
stos
pop
hlt
mov
xchg
arpl
shll
mov
pusha
add
and
push
repnz
lods
add
pop
lea
ret
stc
lret
xor
adc
test
out
and
jns
test
mov
cs
out
les
pop
dec
shrl
cwtl
iret
push
push
bound
fisttpl
mov
fwait
add
imul
jne
xrelease
repz
xchg
cltd
aad
cmp
adc
dec
inc
stos
sbb
mov
negl
fwait
jp
jne
loopne
outsl
mov
fidivl
lock
fsub
mov
icebp
inc
add
xchg
adc
sahf
fsubr
imul
pop
mov
mov
enter
inc
mov
jns
or
xor
imul
aam
fisubs
pushf
cmpsl
addr16
inc
outsb
adc
lcall
and
insl
or
jo
addr16
popl
push
das
pop
push
stc
and
pop
sahf
adc
push
jp
jbe
jmp
cltd
adc
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
