adc
decl
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
imul
gs
xor
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
push
push
push
push
call
push
lea
push
push
call
add
leave
ret
sbb
and
push
jo
pop
adc
pop
and
in
les
xchg
mov
push
je
fs
push
jo
add
and
adc
sub
hlt
shl
test
xor
sbbb
test
dec
mov
sbb
insb
cmp
daa
ss
mov
ffree
shl
fchs
xor
push
and
or
in
fstl
xchg
leave
lds
jg
sbb
xchg
sbb
hlt
insb
insb
test
imul
pusha
and
and
scas
shr
stc
sti
or
das
sbb
sub
xchg
cmp
sti
dec
pop
cmp
cmp
dec
fcoms
fnsave
in
pop
ret
hlt
mov
inc
aad
or
inc
nop
je
adcb
and
aam
mov
jno
add
sub
loopne
pop
clc
mov
test
shlb
enter
cmc
xor
xor
ficoms
or
and
xchg
mov
sbb
pop
add
scas
inc
faddl
out
cmp
inc
pusha
and
adc
and
adc
xchg
fxtract
enter
jmp
dec
mov
je
or
xchg
jge
and
inc
mov
rclb
repz
lret
in
inc
xor
add
data16
dec
jge
aaa
ret
xchg
movsl
xchg
movsb
shl
mov
sub
bound
js
and
adc
add
hlt
shl
loopne
lock
xchg
mov
inc
je
fs
push
jo
add
and
adc
add
hlt
shl
loopne
lock
xchg
mov
inc
je
xor
sub
stos
das
push
cmp
lahf
mov
mov
push
cmp
and
lods
int3
sbb
cld
mov
or
dec
mov
add
pop
mov
cmp
movsl
push
ficoml
fadd
jp
btc
mov
fs
in
mov
jmp
or
lods
xor
mov
mov
and
cmp
and
std
icebp
pushf
cmp
cmp
or
xor
pop
mov
jp
mov
sbb
pop
jae
inc
mull
mov
ss
pop
adc
adc
cmp
inc
rcll
and
mov
mov
and
add
cli
es
hlt
push
xchg
shrb
jne
push
rcrb
sbb
imul
fwait
int3
jge
pop
pusha
xchg
lods
mov
inc
lods
jmp
decb
sub
lcall
enter
pushf
jnp
js
jbe
fcmovbe
sub
pop
add
xchg
movsb
xchg
div
push
jns
push
pop
imul
lods
lea
adc
pop
inc
xor
push
je
out
xor
and
cmpsl
add
sub
dec
mov
inc
xor
mov
or
int3
or
hlt
push
mov
fildl
in
lret
loope
into
repz
sbb
aad
imul
cwtl
jnp
sbb
mov
xlat
bound
fnsave
xchg
ficoml
lret
fiadds
ret
jle
aam
lret
sbb
dec
aam
pop
dec
ss
mov
repnz
and
dec
mov
mov
push
push
popa
push
pop
push
sahf
or
inc
mov
cmp
loope
iret
leave
bound
cmp
fnsave
pop
push
cmc
clc
sbb
push
popa
sub
and
push
test
daa
lahf
rorb
sti
push
jle
je
mov
pop
decb
mov
outsl
pop
mov
adc
sbb
aas
adcb
gs
out
add
mov
je
out
sbb
je
cld
pop
rorl
inc
std
mov
bound
and
sub
sub
xor
daa
in
jno
dec
in
out
data16
lcall
cli
cmp
mov
clflush
ss
cltd
leave
ja
test
call
dec
sbb
loope
out
je
mov
imul
inc
pusha
shl
nop
loope
or
outsb
and
xor
xor
xor
fidivrl
xor
sbb
lock
ss
aad
jbe
test
enter
jecxz
ret
or
out
jo
mov
repz
pop
scas
paddb
sub
enter
pop
pop
jl
add
test
xor
cpuid
inc
pop
fs
mov
sbb
mov
cli
xchg
out
std
leave
std
test
add
out
fcomps
cs
xor
data16
out
fbstp
push
xlat
xor
cmc
sbb
out
repz
stc
add
dec
push
fidivrs
mov
pop
mov
imul
lahf
pusha
popa
sbb
insl
inc
inc
xchg
push
enter
and
pushf
or
pop
jne
mov
and
sub
out
mov
call
sahf
lods
mov
pusha
adc
cmp
inc
xor
dec
and
enter
sbb
cmp
dec
test
dec
lds
jne
cld
ret
roll
leave
cmp
std
ret
ss
or
repnz
rcr
and
lods
inc
sahf
or
mov
shl
mov
imulb
cmpsl
mov
xchg
pop
es
jnp
mov
pop
sti
xchg
mov
inc
mov
sbb
in
arpl
push
fwait
sbb
pop
jecxz
outsb
mov
fcompl
mulb
and
cmp
pushf
int
jp
ret
push
js
dec
xlat
dec
inc
jle
int3
loop
sahf
lcall
inc
sub
in
lock
fistl
pop
and
pop
cmp
in
inc
lcall
lods
dec
xor
ss
je
popa
mov
lahf
dec
xor
insb
mov
cmp
jecxz
add
xor
jecxz
bound
sbb
xchg
int3
rcll
lret
fistpll
mov
inc
sahf
bnd
clc
mov
outsl
mov
lcall
cwtl
in
test
add
insl
sbb
div
test
jge
in
test
lcall
adc
lds
mov
sub
or
lods
dec
loopne
andb
flds
xchg
psubusb
jle
stc
ljmp
add
dec
xorl
jno
xchg
iret
xchg
inc
or
and
aad
or
and
lea
mov
mov
sub
loop
add
jns
dec
dec
dec
popf
mov
bound
push
inc
fistpll
in
and
dec
push
or
lahf
jl
jns
xor
mov
out
mov
lods
xor
inc
cmp
addl
mov
aad
adc
jo
movsb
movsb
mov
sbb
or
out
mov
in
ds
call
sbb
mov
or
pop
adc
mov
pop
insl
and
cli
addr16
cs
inc
cmp
inc
and
jb
ja
sbb
adc
or
or
in
xchg
mov
cmpsl
lret
testl
fdiv
push
sti
insl
push
hlt
popf
lods
add
loopne
mov
xor
inc
stc
lea
mov
mov
fcmovnb
jnp
push
lods
pop
jnp
push
ret
rcrb
or
mov
or
push
imul
psubsb
mov
shr
pop
loop
mov
popa
aad
pop
lea
and
out
push
mov
adc
push
hlt
xchg
push
cmp
dec
fisubrs
push
and
inc
int3
out
in
imul
sub
loop
mov
imul
lahf
fdivrs
cmpsl
stos
mov
loope
aas
mov
jb
pop
fcoms
xor
dec
outsb
sub
adc
xchg
cmp
add
enter
imull
mov
dec
mov
rcrb
aaa
es
dec
pop
data16
into
cmp
mov
dec
sub
jne
in
fbld
stos
fiadds
adc
inc
dec
mov
ss
loope
jae
pop
xchg
loopne
int3
pop
mov
xchg
xchg
and
dec
fsubs
shlb
jle
cs
xor
inc
ficompl
jmp
sub
sti
and
cmp
add
imul
inc
ss
sub
pop
or
in
mov
ret
sub
in
cld
fs
push
mov
cld
cmp
xlat
cmp
and
lods
rclb
inc
subl
test
adc
popa
dec
in
push
pushf
push
out
or
arpl
pop
xor
clc
xchg
inc
dec
pop
cmc
and
lea
das
scas
cmp
out
sti
push
cmp
push
push
mov
sahf
pushf
arpl
filds
incb
jne
adc
inc
mulps
and
addr16
and
lods
test
fistps
rcrb
jae
xchg
cmc
mov
addl
insb
sbb
pop
orl
dec
or
lret
jecxz
cmp
add
les
adc
call
loopne
add
call
xchg
and
lds
das
cmc
or
lods
loopne
imul
cmc
leave
inc
adc
inc
adc
dec
xor
pop
int
scas
xchg
xchg
sbb
and
mov
outsb
push
lret
mov
xor
add
pop
andl
stc
mov
sub
in
cmp
mov
daa
cld
xor
inc
adc
shr
push
mov
mov
inc
stos
stos
jo
xchg
pop
push
bound
push
inc
add
jnp
mov
scas
fidivs
leave
jns
pop
mulb
movsl
arpl
jae
out
int
xchg
daa
icebp
cmc
jb
xor
mov
rol
test
gs
sahf
cmp
int3
ficoml
push
in
adc
stc
dec
add
and
pop
aam
loopne
jl
leave
lahf
into
rcll
insb
jecxz
mov
cmpsb
pop
pop
adc
aam
in
aad
jbe
jg
mov
xchg
hlt
rclb
push
imul
pop
test
mov
mov
test
stos
mov
fistpll
add
inc
repnz
test
cmp
xchg
mov
pusha
inc
cltd
inc
inc
cmp
rorl
mov
xlat
sub
cmp
dec
fadds
ja
cli
into
add
flds
aas
xor
adc
mov
xor
pop
in
adc
adc
xchg
pop
ljmp
cmc
clc
jmp
cmp
mov
cmp
sbb
adc
outsl
mov
mov
inc
test
mov
sub
mov
int3
aad
push
sub
mov
add
outsl
mov
sti
mov
nop
adc
pop
cli
jg
jl
cmpsb
outsb
mov
test
loope
adc
insb
adc
or
fsubl
push
notb
xchg
mov
dec
hlt
ja
popf
stos
imul
xchg
push
aas
mov
enter
mov
sub
test
pop
mov
into
inc
or
icebp
arpl
in
mov
push
cli
sbb
mov
jp
lock
fwait
les
sti
pushf
ds
adc
outsl
pushf
scas
bound
aam
and
inc
jno
stos
sbb
mov
bound
and
scas
inc
and
and
lret
sbbl
adc
dec
adc
sbb
aaa
lods
cmp
dec
xchg
test
jbe
in
nop
inc
jecxz
js
adc
xor
rcrl
adc
imul
mov
shll
clc
repz
add
and
mov
test
dec
lea
jno
fcompl
mov
jns,pt
mov
popf
pusha
mov
mov
mov
cwtl
pushf
lods
and
xchg
pop
xchg
pop
add
cli
ret
sahf
sbb
and
mov
jle
adcb
sbb
rol
lea
iret
jo
jmp
icebp
cmpb
mov
inc
mov
jmp
lret
out
scas
loope
pop
cmpsb
cmp
fs
pop
pop
lcall
sbb
pop
xor
movups
jns
cs
pop
and
and
add
mov
or
negb
jns
mov
cmc
loopne
push
stc
add
incb
mov
sub
in
jg
adc
ds
add
or
in
inc
test
rcrb
pop
mov
stc
mulb
repnz
pop
lret
cli
xchg
push
cld
dec
sbb
dec
stos
fucomp
pushf
mov
mov
mov
in
mov
jns
cmp
es
pop
in
xchg
or
call
mov
das
mov
inc
iret
mov
xchg
scas
xor
icebp
dec
mov
in
add
inc
sbb
xchg
jns
test
lea
lahf
lahf
add
inc
ljmp
jnp
mov
out
inc
sbb
push
sub
dec
iret
sub
movsb
push
addr16
lods
insb
shrl
or
lret
xchg
dec
je
or
rcl
xor
sub
xor
jns
cmp
pop
cmp
add
mov
imul
popa
imul
mov
push
data16
aad
ljmp
xorl
test
mov
and
roll
cmpsb
or
daa
push
dec
rcr
dec
pop
mov
push
aam
ja
or
out
in
mov
push
mov
fdivrs
and
cmp
movsl
sub
xchg
scas
dec
pusha
pop
or
aaa
add
jo
dec
mov
cmp
xchg
lods
pop
ljmp
adcb
jnp
dec
sub
or
pop
ljmp
add
xchg
test
int3
pop
movb
mov
inc
mov
int
cmp
lods
rorb
mov
mov
out
pop
add
pop
jmp
fldln2
addl
imul
mov
sbb
adc
sbb
sub
cld
loop
push
jno
lcall
mov
push
popa
and
inc
jle
xor
hlt
shll
test
xorb
fwait
das
add
orl
lods
in
movsl
sbb
add
es
les
jae
addr16
xor
mov
pop
push
repz
mov
shlb
andl
mov
xor
mov
pop
sub
out
jbe
add
idiv
pushf
mov
jae
rorb
mov
inc
inc
test
push
and
ja
cmp
into
loope
jno
xor
iret
loope
pop
leave
jle
inc
inc
pop
and
nop
jae
jb
dec
jmp
sbb
push
insb
and
scas
push
in
add
push
dec
dec
sub
adc
or
inc
lods
push
ja
xchg
leave
mov
ljmp
inc
push
jno
ret
mov
xor
pop
insl
cmpsb
daa
rcr
pop
gs
imul
pop
sub
fimull
outsb
cmpsb
out
in
pop
dec
fwait
test
fisubs
stc
enter
cmp
fisubs
jg
daa
jo
pop
bswap
addb
mov
jl
pop
loop
xchg
xor
cmp
add
nop
test
mov
clc
xchg
pusha
jbe
add
addl
test
je
dec
mov
pop
mov
xchg
pop
rorl
or
cmp
sti
mov
aaa
and
cmp
add
loopne
adc
and
dec
push
out
scas
rol
mov
repz
jno
out
arpl
jo
les
inc
lods
mov
addr16
dec
shlb
fs
loop
es
hlt
sti
test
jl
or
adc
jg
adc
lahf
into
fwait
cs
and
mov
inc
push
movsb
jb
push
mov
xor
jae
shlb
sbb
xor
rcrb
in
sbb
aam
out
mov
sti
test
gs
lds
push
add
push
cli
push
cmp
mov
sbb
ljmp
jl
scas
dec
mov
xor
and
mov
push
and
jns
add
mov
xchg
inc
popf
inc
in
lret
in
xchg
mov
pop
pop
rcrb
mov
sub
jb
jmp
scas
bound
cmp
comiss
shrb
ret
and
outsl
les
mov
pop
test
scas
xchg
mov
jns
and
aad
jp
sbb
sub
mov
shrl
jecxz
push
mov
testb
cmp
mov
movsl
adc
outsl
mov
ljmp
frstor
jo
adc
mov
mov
pop
inc
and
adc
xchg
scas
int3
bound
xchg
adc
outsb
xchg
pop
mov
fstpl
push
outsb
mov
pop
dec
xchg
mov
mov
loop
loopne
movsb
inc
xor
ds
out
or
mov
loopne
insb
mov
add
aaa
sbb
aam
imul
jge
push
sbb
pop
xchg
push
xor
mov
xor
or
xchg
fbstp
enter
push
sbbb
add
pop
cli
dec
dec
push
dec
xor
insl
adc
lea
xchg
or
mov
jno
je
setle
mov
dec
pop
out
jmp
jno
jmp
mov
mov
fnstenv
cmc
mov
lods
out
sub
into
cmp
xor
outsl
adc
xchg
shr
pop
mov
in
test
mov
push
icebp
sahf
push
or
cmp
dec
mov
out
adc
outsl
test
insl
dec
outsl
or
fnsave
and
fnstcw
xor
lret
mov
pop
das
adc
jge
pop
lock
outsl
xchg
sub
mov
ljmp
loop
sbb
in
add
repnz
jae
inc
sub
push
pop
cmp
and
sub
pop
sarb
dec
xchg
cmpb
shrb
sti
frstor
or
fwait
mov
sub
sub
cmc
fs
sub
cwtl
cmp
pop
fucom
shl
xor
inc
shl
jp
movsl
movsl
dec
shll
int3
and
and
mov
jg
mov
lcall
inc
xlat
lcall
imul
cmpsl
and
lock
xchg
in
mov
aaa
int3
inc
dec
push
mov
ja
cmpsb
lock
mov
xor
fs
in
pushf
in
in
popa
sub
pop
jnp
push
jae
ljmp
mov
test
repz
jae
or
mov
pushf
leave
jecxz
mov
fldt
std
push
sub
jge
mov
stos
insl
pop
addr16
jl
pop
fisttpl
ss
sbb
jbe
xor
inc
pop
stos
jbe
notb
or
or
andb
into
mov
out
sub
pop
push
jnp
sub
xchg
int3
cmpsl
test
pop
adc
or
add
and
ds
repz
push
pop
jmp
mov
cltd
into
cmpsb
sahf
test
sbb
test
rcl
into
cld
lret
icebp
xchg
adc
xchg
stc
orb
ret
xchg
sub
or
mov
jbe
or
dec
or
rolb
jb
test
clts
inc
rolb
aad
outsb
cmp
pop
in
cmp
and
leave
cmp
xlat
and
push
mov
nop
and
pop
fstpt
dec
sbb
pop
pop
daa
sbbb
fisubs
jnp
int3
ss
arpl
iret
add
lock
pop
jg
cmp
leave
adc
jns
inc
push
jecxz
jo
fchs
mov
dec
btr
pop
add
pop
fstpl
cmc
loope
imul
cli
pop
mov
mov
push
cli
pop
out
movsb
adc
jae
xor
push
or
rol
ja
mov
lock
add
jns
push
jmp
adc
xchg
cwtl
aam
cmp
adc
fdivs
jmp
addr16
mov
inc
fstps
insb
mov
sahf
lods
mov
pop
and
or
mov
push
imul
xor
mov
pop
mov
inc
adc
scas
iret
and
mov
repz
cmpsl
adc
xor
cmc
mov
leave
jmp
insb
les
cmpsl
pop
getsec
fnstcw
push
inc
mov
fsubl
cmpsb
or
dec
pop
sub
jecxz
or
enter
in
faddl
xchg
bound
xchg
loope
or
mov
inc
es
inc
test
cmpsl
fimuls
sahf
sub
cmp
jg
or
fldenv
and
or
les
jmp
ret
add
xchg
out
dec
es
mov
sar
push
aam
pushf
outsb
jp
jmp
sbb
imul
or
pop
popf
lock
dec
xchg
sbb
aas
daa
jo
or
insl
pusha
popa
rcrb
sbb
rcll
mov
js
sbb
idivb
mov
sahf
cmpsb
enter
dec
orl
sbb
fidivrs
add
push
jge
nop
lods
mov
add
imul
test
in
shr
movsl
cmp
ljmp
push
and
jae
mov
dec
cs
dec
daa
xchg
popf
aad
outsl
mov
enter
scas
mov
sbb
je
mov
cwtl
mov
xor
sub
into
dec
add
leave
inc
cmp
stos
or
loope
mov
push
xor
pop
xchg
cmp
call
adc
xchg
push
loop
and
mov
pop
pop
loopne
mov
in
sub
pop
jb
inc
fsubrl
ljmp
jbe
movsb
push
cmp
pop
jnp
jl
add
movsb
loopne
inc
mov
pop
adc
ja
icebp
in
adc
fistl
adc
movsl
fsubrl
in
pop
clc
add
std
xor
clc
mov
xchg
ficompl
xchg
cld
mov
adc
outsb
insl
scas
jnp
lcall
or
push
addb
das
cli
jmp
hlt
cmpsb
dec
mov
sbb
stos
adc
fcom
je
mov
imul
inc
inc
jmp
cmpsb
sbb
aam
sbb
test
je
lret
sbb
jns
push
in
shrl
adc
mov
sub
imul
mov
addr16
push
cmpsl
out
fcmove
push
pop
fisttpll
fsubrs
and
or
fdivl
sahf
xlat
sbb
sub
les
xlat
jp
cmovnp
xchg
sti
jb
pop
inc
xor
mov
jo
add
and
adc
add
hlt
shl
loopne
lock
xchg
mov
inc
je
fs
push
jo
add
and
adc
add
hlt
shl
loopne
lock
xchg
mov
inc
jo
push
dec
jo
add
dec
and
xor
cmc
shl
in
lock
mov
movsb
mov
nop
adcb
add
xor
and
xchg
mov
aas
or
dec
dec
aam
mov
int3
sbb
pop
in
dec
cld
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
push
rcrb
cmp
mov
ret
std
inc
mov
pop
popa
sub
adc
xor
rcrb
or
frstor
or
jo
add
adc
insl
xor
rcrb
or
frstor
or
adc
add
or
mov
shr
lods
mov
xor
cmp
mov
outsl
jbe
jbe
les
xchg
lea
xchg
mov
sbb
lds
sbb
std
sub
pop
out
push
sub
enter
rcrl
jg
jp
sbbb
sub
lds
inc
or
pop
mov
loopne
mov
add
mov
mov
mov
sbb
popa
jmp
mov
xor
cmp
dec
das
bound
inc
cwtl
xor
repnz
cmp
movsl
add
rorb
pusha
sbbb
addr16
mov
pop
std
ret
adc
lahf
rcrb
or
frstor
or
jo
add
pop
and
cmp
mov
test
sub
add
jle
dec
je
pop
sbb
inc
sbb
in
fsubp
mov
cwtl
mov
push
adc
lret
jo
das
sub
enter
call
std
inc
or
jo
add
pop
and
jge
rcrb
or
frstor
or
jo
add
pop
and
jge
aad
insl
ret
repz
sbb
or
jecxz
sub
ss
xchg
ds
adc
sbb
push
sbb
in
mov
sbb
sarb
fmuls
pop
push
shrb
mov
jb
inc
stc
arpl
mov
lock
sbb
scas
lret
xchg
xchg
cmp
out
testb
xchg
pusha
shl
sti
jp
mov
cmpsl
xor
push
cmp
out
int
jle
repnz
shlb
adc
sbbb
lret
out
inc
adc
inc
push
lcall
xchg
fs
adc
in
and
add
lahf
gs
rclb
push
test
jg
rolb
cmp
lcall
daa
mov
xchg
dec
out
jbe
sub
and
mov
les
pop
push
inc
mov
sahf
push
imul
cwtl
std
mov
movsb
int3
cmp
mov
xchg
imul
rcll
mov
dec
sub
test
or
lret
sahf
pop
and
pop
ljmp
and
in
out
push
lcall
jo
pop
mov
sbb
lock
xchg
mov
mov
adcb
out
pop
add
add
fcmove
pusha
inc
sbb
dec
mov
xlat
adc
jno
scas
aaa
push
scas
inc
pxor
xchg
sub
push
inc
xor
in
ljmp
pop
push
cmp
repz
and
push
push
int
mov
xor
lea
xchg
fstpl
pushaw
sub
sbb
out
jae
cmpb
fisttpll
push
rcrb
les
mov
mov
mov
mov
and
test
mov
sbb
mov
mov
pop
lea
cmp
sbb
lods
test
inc
sbb
pop
xor
jmp
mov
push
mov
add
jge
ja
inc
add
lahf
push
in
jecxz
lret
jge
rep
shlb
mov
xchg
jl
mov
std
push
jo
cmpb
aad
sbb
mov
dec
lea
cmp
icebp
insb
or
lock
add
pop
ret
sub
push
adc
out
jg
mov
ss
add
jno
or
add
mov
pop
sub
into
and
mov
sbb
out
clc
inc
int3
out
xchg
movsl
inc
outsb
in
add
or
inc
mov
push
dec
rcr
sub
xor
in
int3
sbbl
dec
xchg
cwtl
inc
mov
loopne
cmpsb
iret
lds
and
dec
push
mov
jnp
cmp
push
sbb
pop
je
dec
cli
add
sbb
xchg
jae
dec
dec
dec
add
jbe
std
add
xlat
dec
lcall
fisttps
mov
jb
ss
and
insl
dec
lea
test
lret
cli
iret
daa
inc
push
dec
adc
mov
nop
int3
int
sub
pop
xchg
arpl
andl
outsb
mov
lret
daa
cli
or
int
sbb
js
lahf
inc
lea
mov
loope
loop
loope
jge
mov
out
lcall
pop
pop
mov
ja
in
test
or
push
xor
daa
int3
pushf
lret
aaa
sub
and
mov
je,pt
movsl
cmc
jecxz
sbb
sub
call
xchg
sub
aam
call
in
xchg
stos
adc
mov
test
jnp
lahf
test
bound
jg,pt
push
or
jnp
cmc
jl
jbe
fmuls
push
mov
aas
roll
iret
out
sbb
add
data16
out
mov
imul
push
jno
jo
sub
scas
stos
aad
rcl
and
scas
jnp
stos
mov
cmp
inc
adc
dec
sbb
lcall
leave
cltd
jp
test
fadd
repz
call
sbb
nop
rolb
push
xchg
cmpl
mov
repnz
stos
mov
and
fstpt
xor
jnp
mov
or
leave
punpckldq
inc
adc
cmp
mov
push
int3
xchg
cmp
outsl
mov
xor
mov
xchg
mov
push
fimull
xlat
xchg
dec
arpl
aad
nop
inc
lret
pop
pop
popf
scas
sub
mov
movsl
jnp
cli
dec
push
push
jnp
in
shll
into
in
pop
fiadds
fcomps
xor
xchg
mov
fs
xor
sahf
lods
pop
sbb
cmp
cltd
fsubr
mov
sbb
xchg
fldcw
fldenv
cmp
out
jecxz
loop
inc
rcrl
fisubl
dec
inc
ja
es
jge
cmp
cmpsl
lahf
push
sub
inc
mov
mov
movsl
xor
pusha
mov
cmp
lea
mov
xchg
dec
inc
testl
in
sub
addr16
add
ret
adc
test
cmp
mov
test
mov
push
mov
push
inc
in
mov
jae
scas
push
push
dec
orb
sbb
das
daa
dec
lahf
rcll
add
and
xlat
dec
daa
jle
xor
cmpsb
notl
xchg
xor
lods
mov
enter
mov
in
jmp
dec
pop
sbb
repz
pop
jb
scas
lds
je
and
inc
mov
adc
test
dec
lret
sub
adc
jns
add
mov
xor
or
mov
sub
pop
jmp
jmp
sti
lea
xchg
push
xor
xchg
dec
mov
jg
fmulp
sbb
scas
cltd
push
mov
or
dec
mov
inc
mov
push
mov
popf
cli
adc
xor
int3
inc
loopne
pusha
shll
pop
adc
loopne
or
ss
add
cmp
iret
add
insb
mov
push
inc
lea
pushf
cmpsb
inc
aas
ds
clc
in
pusha
flds
mov
push
cmp
movsb
or
and
mov
or
push
mov
mov
mov
cmp
dec
cmc
fs
inc
sub
insl
cmpsb
push
xchg
jmp
push
jp
sub
enter
es
lds
adc
out
mov
mov
fimull
add
jecxz
addr16
aam
cmp
test
movl
jmp
mov
add
xor
xor
insl
loope
sbb
sbb
mov
jo
nop
loopne
fisubl
dec
movb
sbb
sub
dec
mov
xor
test
pop
push
and
cmp
xchg
in
test
fisubrs
xchg
lea
add
cmp
xchg
fbstp
cwtl
mov
add
stos
sti
sbb
aad
add
pop
sub
lret
pop
push
int
add
dec
xor
inc
lcall
mov
mov
aas
push
dec
out
mov
rcll
test
push
pop
or
in
push
sbbb
pusha
aad
imul
es
jns
dec
flds
mov
jo
lret
lods
cmp
sbb
out
inc
jns
and
repnz
inc
inc
or
jo
addr16
icebp
loop
or
sbb
xchg
cmp
lret
jbe
les
fldt
adc
aaa
in
pop
sub
nop
sbb
scas
push
out
jno
inc
or
lcall
mov
mov
add
mov
cs
push
clc
sbb
nop
scas
dec
cmp
lock
popf
stos
push
xor
add
xchg
nop
roll
pusha
add
xor
lret
loope
cmpsb
jg
cmp
jl
jmp
pop
dec
jne
lods
rcl
fmul
xchg
mov
sti
jge
pop
adc
inc
mov
xchg
and
sbb
jecxz,pn
adc
push
push
pop
inc
mov
ret
xorb
jl
push
xor
cmc
adc
aas
sti
in
repnz
sbb
pop
mov
gs
mov
sbb
dec
ret
sbb
or
test
in
and
push
sub
loope
inc
faddl
add
lcall
repz
ret
and
js
hlt
sub
mov
sub
aaa
inc
arpl
fidivs
hlt
shl
push
out
ds
shll
repnz
insb
inc
xor
movsb
jno
xor
ret
mov
mov
jno
popa
mov
outsl
push
push
lock
mov
clc
xor
mov
dec
fistpll
pop
jno
cmpsl
mov
push
stc
adcb
ljmp
popf
and
aam
adc
sbb
cmp
ja
jnp
jnp
je
xchg
js
or
cmc
aaa
mov
adc
jno
into
sbb
jle
bound
rol
rcrl
and
fldenv
adc
dec
pop
jle
andb
jmp
leave
xchg
jmp
cmp
mov
mov
mov
int3
out
psraw
ja
rcll
mov
mov
ret
mov
jb,pn
lcall
daa
nop
out
ss
mov
repz
imul
fstps
xchg
mov
popa
rclb
sub
popa
sbb
jns
inc
inc
in
pusha
or
shr
dec
cmp
mov
sahf
andb
call
and
clc
movsl
sub
sti
dec
xor
mov
xchg
out
aad
inc
in
movsl
dec
stc
dec
int3
cmp
call
mov
repnz
sub
cwtl
enter
fstps
sbb
and
jns,pt
xor
mov
mov
test
inc
jp
inc
xlat
jecxz
mov
add
test
addr16
sti
sbb
movsl
jno
std
sahf
add
movsl
dec
xchg
ss
cmc
sub
dec
mov
pop
je
jp
push
xor
inc
inc
jae
cmp
pop
fidivl
push
hlt
sti
jnp
push
pop
pusha
call
call
loop
add
jmp
pop
cmpsl
push
outsl
nop
int3
loop
and
bound
sbb
adc
cmp
jne
inc
imulb
pop
daa
pop
and
sub
push
fdivl
mov
sbb
stos
dec
loope
out
arpl
jo
fnsave
popa
and
sub
lock
rcll
ljmp
mov
mov
or
xor
push
or
pop
into
push
movsb
xlat
sub
popf
inc
cmpsb
imul
mov
inc
jb
adc
test
loope
mov
cmpb
push
mov
jecxz
sub
cmp
push
xchg
leave
insb
adc
mov
sub
mov
negb
jg
imul
xchg
mov
ror
popf
ds
cmp
out
dec
hlt
jnp
xchg
lret
pop
int3
sub
mov
xchg
in
xor
adc
or
dec
nop
add
mov
or
fmull
popf
call
cmp
xor
test
loope
adcl
xchg
or
fwait
je
inc
daa
loopne
in
mov
lock
popf
int
mov
imul
aas
out
shr
cmp
test
inc
out
mov
mov
push
pop
shll
mov
mulb
cmc
mov
cmp
inc
fbstp
cmp
movsl
push
jns
xlat
repnz
jo
stos
cmc
push
int
cs
fildll
push
movsl
push
xchg
call
jae
jp
or
addr16
enter
push
xor
mov
or
mov
daa
fwait
aas
nop
movsb
cmc
ror
adc
and
lcall
jae
repnz
ja
repnz
out
aaa
loopne
mov
rcrb
sub
sub
stos
mov
sti
xor
push
cltd
je
add
scas
imul
pop
fwait
sub
sbb
ja
in
call
cwtl
xor
lret
pushf
jnp
addr16
gs
mov
aas
call
dec
jo
les
dec
cmp
jne
push
sti
push
dec
call
or
jns
lods
roll
cld
test
dec
mov
sbb
sub
lret
sahf
or
cld
sub
insl
xchg
idivb
iret
mov
in
sti
and
pop
mov
xor
inc
sar
test
cmpsl
enter
xor
adc
or
jo
xor
mov
inc
je
repz
jnp
xchg
add
pop
addb
add
pop
aad
in
mov
or
xor
add
out
aas
jmp
gs
cmovg
ret
aam
cmc
dec
mov
xor
push
hlt
iret
dec
imul
mov
mov
popa
jne
aad
inc
mov
and
pop
repnz
adc
pop
mov
inc
push
jp
aad
sbb
js
shrb
push
xchg
xchg
test
mov
cmc
repnz
test
sub
imul
lret
hlt
mov
data16
fsubrl
xbegin
and
cmp
aam
idivl
cs
insb
jo
pop
in
test
dec
sub
sub
lcall
loop
ror
aad
dec
pop
and
repz
xchg
pop
dec
clc
jl
stos
movsb
jle
mov
sub
adc
and
les
pop
adc
xor
push
lcall
xchg
and
aas
stc
stos
and
jmp
mov
adc
ret
out
xor
dec
inc
add
ret
dec
xor
into
pop
in
inc
js
add
cmp
xor
inc
xchg
sbb
pop
sub
dec
mov
mov
push
sub
jne
mov
outsb
pop
mov
call
xchg
es
xchg
mov
arpl
push
and
cltd
mov
push
fistl
lcall
xlat
add
xor
and
stos
mov
adc
ja
add
movl
lds
lods
dec
push
test
cli
pop
cmp
inc
aas
aas
fdivrs
daa
xorl
hlt
or
xlat
imul
insb
out
or
icebp
dec
jae
cmovg
jnp
repz
mov
cmp
divb
lahf
pop
push
mov
roll
insl
xchg
test
cltd
mov
jl
jmp
xchg
ja
leave
dec
mov
add
jae
or
inc
ljmp
shll
mov
mov
xor
in
rolw
pop
xchg
and
ret
add
add
js
gs
nop
scas
push
cmp
stos
mov
aas
mov
aad
dec
add
jg
icebp
adc
or
sub
xchg
jmp
or
fildl
push
adcl
jp
push
addb
fs
js
mov
pop
xor
nop
test
fimull
inc
jle
sarb
cli
mov
jl
cmp
push
pop
loope
fwait
std
stos
das
push
inc
mov
add
sub
das
lcall
in
push
ret
cmp
into
mov
mov
pop
insb
and
mov
fdivrl
ds
xlat
push
std
xor
jge
inc
subl
cmp
fimuls
jae
loopne
scas
push
pop
in
push
ljmp
mov
mov
or
mov
lods
jb
lods
lods
fidivrs
push
xor
mov
mov
mov
test
add
aas
xor
cmp
fisttpl
stc
rolb
push
out
rcrl
cld
movsb
jmp
je
jns
arpl
clc
dec
mov
cmp
lods
jle
push
not
fld
sbb
xchg
insl
xlat
mov
pop
mov
inc
push
andb
leave
push
cmp
out
push
xchg
jge
xchg
mov
cmp
mov
adc
sub
pop
jge
repnz
push
dec
imul
inc
cmc
xchg
in
fxch
cmpsb
dec
or
dec
imul
push
inc
mov
addr16
popf
es
push
enter
inc
arpl
mov
dec
cmpsb
dec
inc
es
pop
xchg
or
ds
pop
and
sub
icebp
ret
adc
cmp
addl
std
add
sbb
mov
faddp
iret
lret
bound
jge
jbe
mov
test
mov
xor
insl
adc
vpmaxsw
js
push
add
xor
shlb
push
rcrl
cmpsb
jns
movsb
mov
push
jno
in
xchg
pusha
mov
and
adc
out
ret
mov
out
fcomip
daa
jo
repz
or
xor
gs
xchg
decb
nop
in
or
adc
xlat
cs
in
dec
jl
push
mov
pop
cs
lods
aas
inc
movsl
push
mov
loop
add
shl
dec
negl
mov
adcl
xchg
cmp
rcll
popa
dec
shll
xchg
lahf
call
cmpsb
mov
dec
in
push
add
or
jl
jmp
aas
or
jge
add
repnz
and
add
test
jbe
add
sbb
inc
cmp
adc
or
push
xchg
repz
mov
cmp
sahf
out
adc
add
adc
fnstsw
jmp
xchg
cmc
call
add
iret
jo
mov
aad
into
cld
cmp
aam
ret
jecxz
adc
icebp
fwait
aad
gs
loop
loope
stc
pushf
xchg
jbe
push
pop
iret
push
or
jmp
add
mov
xchg
cmp
stos
jle
sbb
xchg
jbe
jge,pt
jns
or
cmp
dec
inc
jo
out
cld
cmp
push
jecxz
inc
jb
call
shr
in
stc
xchg
scas
call
notb
in
push
dec
jns
push
lds
inc
aas
icebp
out
dec
inc
xchg
lock
ret
xor
loopne
fwait
push
lds
shrl
pop
and
out
mov
mov
lret
imul
shlb
aaa
lret
stc
dec
and
call
aad
adc
mov
push
sbb
in
add
cmp
mov
push
adc
and
loop
test
pop
pop
mov
insl
fmuls
mov
add
mov
xor
push
in
test
sbb
pop
add
jno
lret
mov
popa
scas
pop
iret
inc
nop
push
stos
lods
in
mov
push
in
stos
loopne
inc
sbb
fldl2e
inc
out
push
out
or
stc
xchg
inc
sub
stos
pop
test
mov
pop
test
loope
inc
ret
inc
jae
int
or
xchg
out
sbb
jecxz
xchg
push
jo
push
lret
das
jg
cmp
loope
outsl
inc
mov
and
test
push
cltd
lret
adc
into
fwait
pop
dec
adcl
ss
mov
adc
fidivrs
decb
push
push
roll
inc
add
and
xlat
inc
in
fwait
inc
mov
addr16
xlat
add
fdivl
lods
flds
pop
aam
jbe
adc
ret
movsl
pop
or
adc
adc
jmp
inc
cwtl
jmp
mov
outsb
mov
imul
sub
adc
jmp
int
movsb
mov
xchg
outsb
jecxz
aam
or
daa
out
adc
sarl
fwait
xor
nop
lock
mov
fs
xlat
repz
mov
dec
loop
add
dec
adc
cmp
int3
aas
negl
scas
mov
sub
add
mov
xchg
icebp
adc
and
sub
mov
inc
data16
or
ljmp
loope
ljmp
clc
int
mov
mov
pop
arpl
inc
repnz
in
mov
xchg
int3
or
inc
cld
aas
jle
mov
out
jl
sbb
cmp
in
mov
cmc
movsl
aas
stos
xchg
aam
mov
cmc
sub
dec
push
sub
repz
inc
and
fidivrl
jp
lods
push
adc
add
xchg
cmp
jle
stc
sbb
push
loope
incb
loopne
popa
movb
dec
mov
scas
popa
dec
jmp
inc
shlb
out
adcb
and
rcrl
push
out
inc
movsl
repnz
lret
dec
mov
pop
and
cmovne
sub
xchg
lahf
insl
les
mov
nop
pop
jp
test
inc
inc
repz
or
nop
dec
stos
inc
dec
sub
cmp
mov
lret
jbe
and
pop
jmp
dec
inc
and
popf
shlb
mov
in
sub
dec
out
int
hlt
cmp
pushf
jg
inc
xchg
pop
ret
ret
ret
les
pushf
xchg
jae
xchg
imul
cmp
or
pop
cmp
ja
pop
stos
inc
cmovb
fsubr
lahf
movsb
fildl
addb
mov
cmp
fisttps
or
xchg
xor
mov
addr16
lods
xor
sub
add
mov
cmp
insb
xchg
push
test
add
xor
cs
cmovno
jecxz
mov
cmp
xor
pop
push
adc
inc
movsl
jg
push
rcll
cld
inc
or
les
mov
inc
mov
mov
addr16
in
jae
jne
dec
daa
ljmp
cmp
std
add
mov
ljmp
and
int
frstor
or
jo
add
pop
and
jge
rcrb
or
frstor
or
jo
add
pop
and
jge
rcrb
or
frstor
or
jo
add
pop
and
jge
rcrl
or
frstor
or
jo
ja
cwtl
mov
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
xor
and
adc
add
jno
adc
jno
outsl
jg
mov
subl
push
mov
jge
add
jno
popa
dec
push
outsl
inc
or
scas
cmpl
mov
roll
xorl
daa
outsl
push
add
ja
gs
cmpb
xchg
stos
test
insl
outsl
adc
pop
jne
popa
sahf
mov
ror
stos
or
mov
loope
aad
lds
xchg
test
aas
loope
fcoml
aad
adc
jge
push
scas
mov
pop
iret
xchg
fs
sbb
pusha
mov
pop
jb
out
mov
inc
loope
movsb
sbb
std
mov
hlt
shr
insb
mov
dec
scas
sbb
mov
mov
xor
repz
rclb
shr
mov
xor
pushf
dec
lea
lret
jae
pusha
xchg
push
les
mov
loope
sub
imul
pushl
scas
outsb
je
and
cmc
sbb
inc
jl
mov
shr
ret
sbb
adc
add
xchg
dec
sbb
outsl
out
ja
cmp
mov
cmc
sar
rcpps
dec
jns
push
dec
and
loopne
lahf
hlt
stos
in
subl
xchg
jl
inc
jbe
pop
pusha
push
sbb
adc
repz
xchg
lret
mov
orb
dec
push
jp
jl
pop
push
outsl
inc
jg
mov
mov
shr
sar
mov
adc
add
jno
popa
pop
push
outsl
inc
jg
mov
mov
shr
sar
ja
cmp
aas
mov
push
arpl
mov
call
or
pop
pop
mov
inc
les
or
test
icebp
xor
lret
push
and
repnz
inc
sbb
xchg
jae
inc
int
mov
fiaddl
pop
mov
add
out
jle
jecxz
bound
xchg
or
sub
pop
xchg
sub
les
push
sub
pushf
int3
xchg
jmp
push
nop
mov
sarb
mov
clc
mov
negb
xchg
fmul
pushf
pop
movsl
or
fcomps
mov
jnp
int
outsl
sub
je
add
lret
inc
cld
in
mov
in
stc
or
je
leave
stos
jp
dec
sub
lahf
or
add
inc
test
push
out
lock
push
jg
popf
push
lods
push
outsl
dec
sub
leave
in
testl
sub
cld
fwait
test
mov
adc
mov
sub
loop
movsl
or
fsts
mov
imul
sahf
mov
mov
ja
test
sub
es
pop
jbe
inc
push
mov
roll
out
adc
push
les
loop
mov
dec
adc
jo
sbb
hlt
or
movsl
push
pop
fimull
jg
xchg
call
push
mov
xchg
movb
fidivrl
out
movsb
sub
arpl
test
mov
xchg
pop
out
jb
fdivr
sti
lahf
xchg
cmp
out
aaa
or
test
lock
lea
fisttpll
out
icebp
adc
cmp
inc
and
nop
out
or
and
in
dec
xchg
add
cld
inc
imul
es
sbb
adc
testl
dec
es
adc
loopne
cld
mov
mov
ja
cs
dec
sbb
xor
adc
pop
jbe
mov
or
jmp
mov
xlat
iret
mov
add
dec
scas
lods
dec
in
mov
jne
pushl
lcall
les
mov
pop
fdivrs
js
xor
ss
add
call
add
dec
lahf
call
aas
jb
mov
pop
sub
mov
fidivs
insb
stc
jle
shrl
mov
inc
push
addr16
aas
push
cs
mov
inc
fisttpl
test
out
mov
sbb
cltd
sub
fistpll
out
insb
xlat
movsb
or
fisubs
scas
ffreep
lock
xor
test
fdivrl
scas
jbe
leave
outsb
lock
lock
jne
add
iret
adc
cmp
mov
mov
das
mov
lahf
inc
fcoml
xor
dec
cmp
rclb
fisubrs
test
stc
sarb
xor
repz
and
adc
pop
lock
inc
inc
mov
sar
lcall
mov
sahf
add
jecxz
xchg
pop
mov
bnd
stc
cld
int
push
and
loope
orl
clc
sub
cmp
pop
xchg
mov
ret
xchg
jae
cmp
in
pushf
sub
cli
or
jmp
enter
out
sbb
cmpsl
jb
iret
add
cld
rcrb
je
out
mov
pop
hlt
adc
push
or
jmp
add
and
ss
mov
sub
lds
sbb
inc
roll
cwtl
jno
add
cwtl
adcl
je
ja
js
inc
mov
imul
mov
sub
fisttpll
repnz
cmp
lahf
xchg
sbb
xchg
mov
mov
sbb
frstor
outsb
das
js
sarb
aam
sub
sti
pop
mov
inc
cmpsl
aad
adc
mov
mov
add
push
into
cmc
cmp
dec
inc
lods
scas
adc
aam
cmp
sub
jp
leave
rolb
mov
jle
repnz
or
xchg
cs
xchg
lret
mov
in
sub
mov
inc
mov
out
dec
fsubrl
cmpsb
mov
pop
or
cmp
add
or
mov
in
adc
cmpl
scas
push
lods
gs
in
jmp
xchg
fs
out
pop
mov
adc
jnp
jge
cmp
xchg
icebp
sahf
dec
pushf
out
lods
das
in
ficoms
lahf
jno
lret
lahf
sbb
mov
inc
sub
sbb
imul
fsubrs
enter
ja
insl
outsl
add
fisttpll
fdivr
lret
pop
dec
scas
fstl
jecxz
out
in
mov
and
cld
cmc
mov
push
sub
sub
jne
ja
mov
movsl
adc
sub
mov
lret
or
fldenv
outsl
cld
push
and
lds
insb
push
rcrl
inc
subb
jns
mov
mov
adc
or
and
ja
pop
fcmovne
push
dec
push
int3
xchg
dec
sbb
jo
and
cmc
cwtl
push
clc
je
orb
xor
stc
mov
jl
or
cld
cmp
sub
or
adc
iret
and
fistps
das
cmpsl
sarl
mov
pop
sbb
xchg
xchg
js
out
scas
sub
cmpsb
jne
fsubl
mov
fmull
sahf
shl
add
xor
pop
inc
daa
adc
dec
call
pop
jns
test
adc
xchg
mov
jae
cmp
mov
out
or
out
data16
bound
push
cs
out
lcall
mov
sbbl
xchg
xlat
xchg
das
into
pop
dec
stc
jno
mov
adc
mov
mov
shl
pusha
xchg
addr16
jle
scas
sbb
sbb
mov
out
mov
mov
ljmp
test
fcomp
pop
sub
rcll
inc
jmp
mov
sbb
cmpl
mov
popf
cmp
divb
xchg
test
pop
mov
inc
dec
inc
lods
clc
ss
push
pop
faddp
cmp
cmpsl
in
fists
inc
iret
jl
fimuls
sub
clc
dec
out
rorl
add
sub
sub
loop
es
cli
imul
mov
mov
pop
std
pop
mov
cmp
adcb
test
mov
aad
fcompl
mov
xor
xor
push
out
jge
push
dec
shll
adc
aaa
imul
inc
mov
das
jp
push
call
push
test
leave
push
push
js
cld
adc
ficoml
and
sub
mov
adc
or
jle
lret
outsb
lea
and
inc
xor
adc
pop
pop
imul
ja
into
jae
outsb
movsb
jmp
cltd
add
push
dec
adc
dec
movsl
or
add
pop
xlat
jl
mov
ljmp
adc
xor
int
sbb
test
xor
test
xor
clc
mov
push
xchg
jge
lods
repnz
js
sbb
mov
ds
xchg
mov
inc
jne
ret
out
cmp
sub
lret
fidivrs
in
inc
insl
and
dec
cmp
ljmp
push
je
mov
and
imul
xchg
call
lcall
add
mov
les
add
jns
call
cmpsl
jb
aam
cmc
push
lret
push
push
imul
and
lahf
pop
fisttpll
decl
pop
mov
jecxz
add
inc
mov
sbb
ret
dec
push
lods
sahf
inc
rorb
mov
loopne
jmp
xchg
fwait
leave
mov
dec
inc
pop
or
inc
outsl
loopne
les
xchg
out
xchg
cmpsb
les
add
aaa
xchg
adc
xchg
mov
in
mov
out
aas
sbb
mov
add
clc
loope
inc
aam
jne
lea
adc
and
shl
push
into
stos
test
int
push
dec
xor
add
out
mov
xor
sbb
or
push
lods
ds
lea
dec
fs
insb
in
adc
sbb
push
iret
aam
sub
test
inc
inc
jmp
fcmovnb
push
movsl
out
loop
mov
lods
mov
ljmp
movsb
sub
stc
mov
nop
adc
repnz
mov
iret
ficompl
xchg
ror
out
cmp
or
push
mov
je
fwait
in
call
pop
cmp
ljmp
decl
cld
mov
out
dec
or
outsb
pop
leave
xchg
ja
lcall
cmp
jne
cs
sbb
push
sub
cmpsb
mov
movsb
lea
jno
push
subl
jle
pushf
xor
ds
push
pop
adc
adc
inc
mov
dec
xchg
or
push
rdmsr
push
mov
sbb
xchg
lock
cmp
or
cmp
dec
lcall
cmp
push
xchg
faddl
lcall
pop
jo
push
adc
xchg
and
dec
dec
pop
xchg
xchg
dec
xor
shlb
add
gs
imul
pop
add
lea
sub
adc
arpl
pop
mov
mov
ret
xchg
mov
loope
cld
push
cmp
xchg
jle
shrl
test
incl
cwtl
or
mov
lret
push
lea
sbb
pop
lock
pop
adc
mov
movb
adc
ljmp
jecxz,pt
leave
mov
sub
fistpll
push
mov
loopne
push
jmp
mov
bswap
outsb
xor
cmp
clc
dec
mov
xchg
stos
mov
push
add
add
mov
loope
mov
xchg
dec
adc
test
or
cmpsl
aas
mov
adc
jb
and
sbb
ljmp
xor
cwtl
lds
and
int3
sbb
sub
lcall
sbb
pop
pop
mov
and
jmp
push
xchg
adc
insl
out
clc
sahf
xchg
push
pusha
div
divl
sbb
xchg
pushf
xchg
bnd
pop
bound
adc
cwtl
dec
dec
push
inc
xor
ljmp
arpl
jecxz
mov
popf
lea
mov
inc
adc
bound
sbb
jns
data16
ror
jecxz
pop
mov
inc
cmp
push
out
sub
movsb
out
pop
or
sbb
cmp
popa
sub
daa
xchg
sub
push
mov
lret
push
and
add
shll
dec
mov
aam
ret
popa
sbb
lods
xlat
adc
push
xchg
icebp
je
adc
pop
xchg
ds
jne
push
jg
sti
dec
and
dec
push
ret
mov
push
pop
mov
lcall
sbb
outsl
and
out
xchg
pop
jp
loop
inc
lea
stc
adc
adc
pop
mov
int
ficompl
int
jno
push
jno
movsl
pop
imull
aaa
lds
mov
ljmp
imul
add
cmp
cmpb
mov
pushf
pop
cmp
cmp
xor
rorb
lret
out
inc
jno
and
in
call
fcmovb
insb
cmp
shr
sbb
push
xchg
leave
pop
push
ret
sti
popa
ds
movsl
test
aaa
mov
push
dec
subl
popa
sbb
xchg
adc
adc
xchg
pop
adc
mov
iret
cmp
adc
fcoms
dec
inc
lock
or
dec
fs
dec
inc
pop
sub
jnp
mov
and
mov
dec
bound
gs
loop
sub
cld
dec
mov
pop
cmp
push
testb
lods
or
mov
push
xchg
ss
add
mov
cmp
sarb
in
enter
jnp
loopne
ret
push
repz
mov
mov
cmp
subl
in
dec
inc
lret
mov
stos
jno
stos
insb
arpl
or
push
and
push
nop
add
inc
and
xchg
pop
lock
sar
outsb
mov
xchg
aaa
mov
pop
and
or
test
xlat
imul
andl
scas
dec
xor
mov
cmp
hlt
sbb
mov
out
in
adc
icebp
cwtl
js
arpl
mov
in
push
lds
clc
xor
push
adc
repnz
cmpsb
in
push
arpl
cmp
cmpsl
sub
jle
ja
jp
cli
adc
push
shl
int3
scas
sbbl
adc
inc
rclb
rcl
inc
dec
insl
add
sti
inc
int3
xchg
mov
lock
add
inc
sub
lock
adc
and
nop
push
enter
arpl
push
stos
mov
cmp
sbbb
js
inc
lds
jge
out
push
add
fcomp
fisubrs
test
pop
mov
pop
jo
push
xor
xchg
fadd
lds
enter
es
sbb
je
add
jns
mov
outsb
adc
fs
mov
xchg
movups
or
mov
fistl
repz
jnp
mov
out
test
ret
hlt
fdivrs
inc
sahf
not
cli
cmp
sbb
jge
push
int
xchg
cmp
pop
cmpsb
dec
imul
data16
push
call
movsl
push
xchg
repnz
cld
psadbw
loop
jns
cmpsl
repz
out
es
lods
mov
outsb
pop
rolb
rcrl
jg
int
je
pmullw
inc
das
push
out
cli
sbb
or
cli
add
rclb
loop
sub
into
mov
cli
jno
dec
or
inc
jg
xor
jbe
fnstenv
aam
inc
mov
je
push
fbld
adc
mov
mov
bound
mov
icebp
push
cmp
mov
js
stos
or
daa
nop
adc
stos
add
das
cwtl
mov
adc
push
dec
or
gs
ljmp
inc
lret
out
ss
hlt
add
xchg
push
sbb
push
in
xor
leave
mov
and
int
push
sub
jns
ja
cmpsb
or
push
int
adc
adc
cli
movl
push
das
fistl
mov
mov
fstpt
and
scas
inc
nop
sahf
nop
adc
std
push
jecxz
fs
cwtl
into
inc
clc
dec
movsb
sub
push
in
cmp
xchg
sub
mov
pusha
adc
pop
add
stos
jl
xchg
shll
nop
jl
jbe
sub
adc
dec
push
inc
xor
fbld
das
stos
adc
mov
roll
cmp
dec
loop
ds
in
xor
xor
in
inc
sbb
movsb
adc
mov
xor
sub
sbb
pop
fst
mov
dec
js
leave
adc
xchg
cmp
inc
clc
jp
test
xor
arpl
hlt
fcomi
mov
or
lcall
xor
mov
fldcw
popf
aaa
xchg
data16
push
lret
push
sbb
sub
sbb
popf
dec
cmp
popf
popf
inc
jno
in
cmpsl
hlt
fsubp
mov
rolb
ret
fdecstp
rcrl
pop
jle
pop
sbb
sub
inc
mov
outsb
jg
push
adc
sbb
jmp
adc
add
xchg
fists
sub
lea
adc
hlt
push
clc
add
cmpsb
jmp
mov
aaa
rorb
out
fldl2e
mov
jb
add
in
sub
xlat
in
lods
ja
icebp
sarl
and
or
cmpsl
leave
xchg
jge
int
push
xor
fiaddl
pop
xor
xchg
dec
pop
lods
lds
cli
filds
dec
popa
gs
lret
stc
jmp
push
jns
fdiv
jb
rcrb
addb
sub
mov
rcll
data16
cmp
cmpsb
mov
jne
sub
out
fisubl
insl
cmp
mov
xchg
stos
mov
test
push
lock
xchg
call
popa
sahf
push
jo
ret
shll
test
pop
imul
adc
push
mov
enter
cli
push
jae
push
inc
fisubs
popf
sub
lahf
cmp
icebp
add
pop
fwait
test
adc
inc
jge
cmp
std
jo
scas
add
pop
mov
lcall
fidivrs
shl
adc
pop
or
loope
sarl
and
push
mov
loope
push
xchg
mov
insb
mov
xor
enter
inc
mov
mov
pop
mov
jns
sub
xchg
imul
dec
sti
test
mov
std
push
adc
mov
movsb
xor
call
repnz
xchg
pop
je
and
stos
imul
daa
jmp
shlb
int
popa
mov
cmp
nop
stos
fcomp
cmp
call
out
push
fstpl
jb
inc
mov
cli
xchg
test
pop
sahf
or
sub
in
inc
pop
shll
out
sbb
ljmp
movsl
jl
imul
out
repnz
imul
sbb
jb
pop
das
xchg
nop
or
mov
subl
sahf
cmpsb
mov
int
pushf
out
inc
xchg
loope
xchg
aad
mov
fwait
xchg
stos
add
leave
cmpsl
mov
mov
and
mov
ss
add
xchg
scas
xchg
lods
jecxz
xor
cmp
pop
xchg
inc
adc
fistps
add
mov
push
and
leave
imul
sbbb
rcrl
jg
push
jecxz
inc
das
stc
repz
lods
or
jl
roll
fsts
jns
out
xor
popa
jo
ja
lret
clc
xor
sbb
out
mov
mov
mov
inc
adc
mov
clc
loopne
bound
push
push
arpl
movsl
es
lcall
inc
jo
xchg
xchg
fwait
aam
push
cmp
insb
xor
mov
cld
jecxz
in
push
movsb
aad
push
std
cmp
sbb
sahf
cmpsl
rcll
out
cwtl
jns
push
xchg
push
mov
sarl
push
push
mov
faddl
mov
imul
movl
add
and
push
icebp
dec
jns
or
stos
xlat
shrb
dec
cmp
inc
xchg
sub
and
push
adc
cwtl
popf
mov
push
das
mov
and
push
inc
inc
push
aad
cmp
test
mov
cs
movsb
insl
mov
mov
sti
imul
jp
add
lret
inc
in
push
or
loop
ljmp
pop
ret
fldt
mov
out
fs
mov
incb
jnp
inc
lods
push
bound
ret
filds
iret
movsl
popa
dec
add
aas
enter
lret
cmp
ret
jns
mov
frstor
mov
mov
mov
jle
dec
xchg
lods
jle
push
xor
pop
jle
clc
cmpsl
xchg
push
adc
outsb
cmp
xchg
mov
add
add
cmp
adc
mov
xor
loop
pop
les
xlat
mov
sub
mov
sbb
cmpsb
lea
fs
pop
xchg
aaa
sbb
sbb
push
xor
shll
sbb
fdivrl
jle
dec
leave
push
rol
dec
pavgw
test
pop
mov
lahf
call
jmp
jne
xor
faddp
inc
jnp
pop
cmpsb
in
gs
mov
icebp
add
add
pusha
aad
mov
adc
cmp
jo
test
loope
in
adc
popa
test
jae
or
jmp
mov
mov
das
frstor
sbb
pop
outsb
sub
or
mov
adc
scas
push
xor
fnstsw
lods
jg
sub
xor
mov
lret
add
ficomps
shlb
ret
or
cmc
cmp
lahf
xchg
fwait
jge
out
inc
cmp
mov
sbb
aam
adc
push
out
sub
jae
jb
cmp
lods
dec
inc
and
push
arpl
stos
dec
pop
pusha
jbe
cwtl
imul
pop
jnp
mov
fwait
ja
jno
sbb
sahf
cmp
jp
fdivp
aaa
sub
shrb
xor
and
jbe
imul
xlat
pop
dec
enter
in
adc
xor
rcr
repnz
dec
jbe
lods
push
dec
stos
xor
mov
fcompl
xchg
sbb
cld
cmp
cmpsl
data16
into
jns
pop
loope
cmpsb
arpl
cmp
pop
movsl
xchg
push
insl
loopne
loope
xchg
mov
inc
gs
jecxz
add
popa
stos
sbb
cmc
fisubrl
mov
add
ret
jmp
lret
call
mov
jmp
test
xchg
shr
add
cli
xor
cmpsb
inc
inc
in
subl
xor
inc
imul
or
xchg
or
out
mov
jb
mov
test
icebp
ds
stos
in
mov
test
mull
aam
adc
stc
push
jle
idivl
dec
pop
push
das
add
jno
popa
pop
push
outsl
inc
jg
mov
mov
shr
sar
mov
adc
add
jno
popa
pop
push
outsl
inc
jg
mov
mov
shr
sar
movups
jno
add
loope
popa
pop
push
outsl
cmpl
scas
cmpl
and
sub
aas
jno
jno
push
outsl
sarl
scas
or
cs
andb
or
cmp
sub
adc
jo
pop
insb
jecxz
repnz
mov
mov
xchg
cld
xchg
in
bound
or
cmp
sub
pop
xor
adc
pushf
repnz
mov
or
cld
xchg
in
jnp
imul
dec
sub
pop
sub
adc
shrl
mov
xchg
lds
inc
push
and
jno
xor
not
out
jg
stc
dec
jne
aam
cltd
mov
pop
ja
mov
dec
lea
pop
xor
xchg
addr16
sub
repnz
mov
mov
adc
loope
mov
mov
or
cld
mov
jns
push
arpl
sub
pushl
dec
std
push
adc
idivl
sub
xor
notb
pop
iret
insb
mov
fst
sub
dec
push
loop
loop
xor
ret
inc
and
jge
adcb
cltd
xchg
addl
je
sub
inc
cmpb
cld
xchg
stc
stos
sbb
or
cmp
sub
pop
and
or
ljmp
fsubrl
test
sbb
dec
daa
cmp
sub
cmp
cmp
cmp
in
lea
lahf
xlat
test
or
pop
and
xor
add
adc
xchg
cmc
ret
leave
mov
stos
testb
dec
cmp
jb
dec
add
loop
repnz
mov
mov
cmp
in
bound
or
cmp
sub
pop
xor
adc
repnz
mov
mov
cmp
in
bound
out
dec
sub
add
xlat
cs
jne
pop
cs
iret
leave
pop
add
dec
lret
lea
test
cmpsl
push
test
popf
xlat
cwtl
add
sbb
std
sbb
pop
and
jns
mov
mov
sub
outsl
popf
bnd
xor
sbb
aas
mov
cwtl
arpl
shll
pop
bound
fwait
adc
sub
add
ljmp
into
dec
jbe
int
lahf
lods
xchg
xchg
bnd
sub
icebp
jae
cmp
mov
push
push
xchg
or
xchg
xchg
lret
iret
call
push
inc
xchg
push
adc
je
dec
sbb
fs
out
mov
or
shlb
xor
xchg
dec
ja
jecxz
mov
jle
or
and
push
mov
fprem
mov
dec
adc
cmp
test
xchg
jnp
pop
mov
pop
jp
jg
insl
inc
ds
pop
jle
pop
pop
loop
sub
jg
pushf
lock
push
shl
pop
pop
sbb
das
dec
aad
xchg
fs
and
sub
mov
cltd
add
out
aaa
int
mov
inc
mov
mov
and
fnsave
xorl
mov
inc
movsl
xlat
or
ret
xchg
aaa
rclb
xchg
inc
subl
lods
hlt
sbb
daa
jns
and
xor
ljmp
shr
xchg
cltd
pop
mov
popa
and
lret
dec
cli
or
xor
call
jle
inc
test
aam
leave
adc
fmul
dec
aas
aam
add
daa
sbb
insl
mov
gs
adc
push
loop
sti
outsb
mov
add
mov
lods
test
lcall
jo
jne
fcom
shlb
mov
shlb
mov
push
fildll
sub
in
test
cld
das
test
lret
mov
sbb
jnp
mov
or
pop
lods
cmpsb
mov
or
fsts
sbb
cld
aas
xchg
shl
mov
xchg
int
xchg
inc
rsqrtps
bound
xchg
jge
sar
xchg
cmpsl
lods
fisttpl
out
sarl
aam
sbb
inc
push
mov
cwtl
loopne
data16
pop
cmp
mov
jl
insl
popa
sahf
push
test
adc
rclb
fidivl
push
ret
out
call
sub
add
in
imul
xlat
sbb
subl
int
or
jns
popf
incl
push
test
pop
scas
cmpsb
or
icebp
add
fistpl
imul
cmp
or
in
jns
cmc
mov
into
mov
addb
mov
cmp
pop
lods
dec
mulb
cmp
pop
jno
adc
cmp
and
dec
lcall
pop
mov
xchg
data16
mov
adc
mov
aad
xchg
lods
mov
int3
loopne
fidivs
sbb
mov
negb
sar
xor
jae
int3
rclb
cmp
mov
and
call
sub
nop
dec
movsl
dec
mov
lret
pop
xchg
iret
es
mov
jmp
add
xor
shlb
ljmp
cmp
ja
xor
jmp
ss
jne
mov
mov
clc
je
dec
hlt
add
lret
rcrl
call
pop
int3
popf
dec
pop
jle
lret
add
mov
shl
repnz
pop
insb
xchg
mov
pop
sub
jnp
xchg
fimull
adc
sub
shlb
inc
mov
pop
jmp
aas
ja
cmpsb
mov
jp
dec
outsl
popa
xchg
enter
pop
and
je
cmovae
push
fcmovnb
lods
inc
jae
sbb
cmp
cmpsb
xor
xchg
mov
imul
jnp
leave
daa
jo
dec
rcrl
scas
jbe
sahf
adc
or
gs
pop
std
popf
ljmp
pop
imul
or
cmp
cmpb
addr16
mov
test
cltd
push
jp
loope
mov
outsl
rcrl
push
cmp
jmp
push
and
sub
lock
mov
outsl
int3
pop
dec
rcr
stos
das
inc
push
cmp
xor
pop
add
dec
dec
add
nop
sbb
subl
jp
xchg
xchg
jb
xchg
roll
ja
outsl
test
add
dec
sbb
push
stos
aaa
test
xchg
add
es
cld
xlat
lods
xor
add
fcmovnu
xlat
cld
in
push
mov
adc
sub
push
cmp
pusha
ja
addr16
pop
add
mov
fxch
ret
fdivrl
roll
inc
and
pusha
mov
fmull
push
cmpb
jns
cmp
push
adc
mov
outsl
mov
shll
push
fldcw
xor
in
sbb
push
cmp
mov
cli
jb
sbb
inc
jo
add
in
arpl
mov
sahf
cmpsl
mov
push
mov
pop
xchg
fdiv
imul
mov
lods
aaa
xor
jbe
ficompl
sbb
dec
mov
mov
cmp
jns
mov
fisubs
fldenv
xchg
call
mov
in
aaa
mov
decb
mov
sub
jp
out
je
cs
cwtl
cli
cltd
leave
mov
cmpsb
push
jbe
cltd
cmp
xor
jl
xchg
xchg
inc
ret
inc
xchg
and
xor
fadds
out
push
lret
dec
push
arpl
jb
daa
int
and
lret
cmp
jl
adc
aam
mov
mov
xor
mov
add
adc
dec
stc
insb
add
lds
mov
cmp
xchg
inc
dec
out
add
test
pop
fbld
je
std
inc
add
stc
int3
sti
into
xchg
cmp
mov
adc
mov
pop
xchg
dec
xor
cs
jb
push
pushf
and
mov
stc
dec
test
pop
dec
mov
movsb
lock
cmp
inc
lds
mov
jle
icebp
leave
popf
stos
rcrb
mov
push
inc
sahf
icebp
sub
fs
xchg
mov
adc
mov
jge
mov
adc
fldl
in
dec
or
dec
sti
pop
std
xor
pusha
aad
cltd
dec
mov
xchg
rcr
dec
pop
cs
js
mov
jb
push
ret
pop
js
clc
shrb
mov
push
sub
push
loop
jge
or
insb
out
dec
adc
jl
inc
or
ds
inc
sbb
xchg
std
sarl
pop
xlat
ljmp
lods
push
add
and
mull
push
mov
pop
ljmp
shlb
stos
adc
insl
sbb
xchg
and
sbb
cmp
lock
pop
push
adc
mov
add
mov
jmp
jns
xchg
scas
adc
pop
cmp
dec
xchg
sbb
push
fld1
out
jl
adc
jbe
xor
mov
inc
shl
sub
test
fistpll
lret
imul
daa
leave
dec
push
cmpl
pop
outsl
js
and
inc
or
cmp
enter
xchg
xchg
divb
cld
fwait
adc
jle
jns
ror
jmp
subb
adc
jae
or
call
arpl
push
jo
in
pop
fstps
xor
jmp
pop
mov
sbb
jbe
mov
adc
mov
or
mov
aaa
adc
jns
notb
fnstenv
scas
cmp
mov
jp
loop
inc
xchg
xchg
shlb
adc
mov
pop
cwtl
sub
imul
adc
sub
cld
outsl
adc
out
rcl
jnp
sbb
jmp
pop
push
mov
add
mov
or
imul
das
roll
xor
rcrb
pop
sub
ret
scas
fiaddl
stos
aad
or
sub
push
push
add
pop
call
inc
imul
fnsave
leave
adc
fs
jb
xchg
movsl
xor
xchg
and
dec
push
lods
test
int3
aaa
push
xchg
scas
loop
cs
sbb
mov
std
pop
int
repz
mov
subl
push
cmp
sub
jb
in
add
push
add
or
pop
xchg
notl
gs
xchg
rcrb
fbstp
push
adc
mov
pop
imul
jecxz
mov
or
pop
fwait
fiaddl
adc
add
cmc
or
repz
out
xor
in
out
pop
add
xchg
cmp
lret
loop
in
jl
call
sub
inc
jp
mov
iret
mov
jecxz
es
cmpsl
ss
sahf
nop
xchg
in
divl
jge
jle
adc
es
les
hlt
pop
loopne
std
pop
decl
fisubrl
jo
repnz
inc
sbb
inc
dec
pop
lret
repnz
stos
sub
fs
stos
sbb
sbb
push
ja
lahf
shlb
add
mov
mov
mov
and
imul
add
and
lcall
mov
cmpsb
mov
decb
ja
aas
or
jns
mov
dec
xchg
or
sbb
cli
adc
push
in
push
jb
and
mov
call
pmovmskb
mov
xchg
ja
xlat
cmp
sahf
enter
add
xchg
mov
arpl
sbb
push
shrb
dec
into
push
rcrl
and
push
or
jo
mov
sbb
dec
jge
imulb
cmp
mov
dec
out
xchg
movsl
aam
cmc
xchg
push
xchg
xor
aaa
xchg
mov
iret
cmp
js
mov
cmp
out
jg
sti
iret
clc
shl
stc
pop
fiadds
push
sub
adc
push
jg
shlb
and
ss
and
sahf
inc
nop
xchg
je
loopne
aad
xor
lret
daa
push
imul
and
mov
dec
rcr
pop
scas
pop
stos
jns
insl
orb
dec
addr16
imul
jle
insl
jge
bound
fildl
imul
mov
and
ja
inc
pop
mov
jg
fdivs
fs
inc
rcrb
inc
jp
int3
xor
lods
movsl
cmp
mov
add
and
mov
jl
adc
push
inc
ret
in
add
add
stos
xchg
int3
mov
pop
pop
jbe
inc
insl
iret
xchg
and
mov
fwait
push
mov
daa
sti
jns
jle
fdivrl
and
loop
mov
rclb
imul
outsl
cmpsl
sub
dec
movsl
sti
mov
addr16
imul
rorb
jne
out
cwtl
hlt
and
pusha
fs
rolb
mov
and
jecxz
inc
xchg
lods
fucomp
adc
adc
and
mov
out
jg
repnz
pop
out
mov
mov
cmp
jle
nop
mov
cli
iret
adc
jo
add
cld
decb
xor
jle
mov
push
mov
imul
mov
cmpsb
jmp
sarl
icebp
lea
testb
or
inc
pop
or
jl
xchg
or
cmp
ret
int
inc
jle
std
pop
lock
mov
xor
sbb
cmpl
pop
idivl
ja
adc
insb
stos
or
push
iret
or
inc
push
or
js
int
dec
fwait
mov
nop
mov
cmp
ds
addl
push
cmpsl
imul
pop
jmp
jne
sti
decl
mov
out
ds
push
inc
inc
and
jge
and
insb
in
cmovns
aas
sub
in
jae
add
jbe
int3
loopw
dec
cld
mov
pop
mov
test
loope
push
sahf
or
xchg
fsubl
pop
sbb
bswap
xchg
mov
fiadds
lock
inc
mov
xchg
cs
movsl
cmpsl
insb
xchg
scas
xchg
mov
dec
pop
hlt
pop
insl
pop
jle
sbb
dec
adc
stos
mov
shl
out
adc
inc
aam
mov
dec
xorl
push
lret
cmp
test
insb
popa
cmp
cmc
mov
mov
sahf
inc
and
fs
iret
sbb
cltd
addr16
mov
xor
arpl
jmp
xor
in
sub
sahf
and
fadds
dec
sub
in
mov
test
hlt
jg
adc
loop
aad
jns
sub
jno
flds
push
cmp
icebp
push
add
add
lods
mov
shlb
loop
pushf
sbb
xchg
pop
aam
jle
std
jg
into
xchg
xchg
ret
and
lret
pusha
pop
sbb
dec
addr16
push
mov
sub
push
add
out
push
add
out
pop
int
sub
leave
cmp
jg
push
sub
mov
andb
dec
ret
test
pop
loopne
jg
mov
lret
arpl
outsl
xchg
xchg
fwait
outsb
inc
fnstsw
or
jbe
sub
cmp
aam
sub
push
sub
negl
js
je
mov
gs
sub
cld
xchg
scas
mov
mov
or
stos
xchg
dec
sbb
in
push
pushf
pop
add
pop
push
add
inc
pop
shrl
push
les
jno
adc
js
daa
inc
lret
add
scas
push
shlb
dec
lret
mov
jb
mov
pop
shrl
lret
dec
jno
out
pop
cmpsb
fdivrs
mov
sub
ret
xor
push
sbb
fadds
mov
lret
push
lahf
sbb
aaa
mov
push
sub
or
mov
mov
xor
pop
mov
add
cmp
xchg
adc
xchg
stos
pusha
cs
pop
and
inc
push
loope
adc
adc
xor
push
xchg
xchg
sbb
sub
jno
pop
mov
xchg
mov
outsl
rolb
repz
test
jnp
dec
shlb
ror
dec
int
mov
mov
stos
std
cmp
scas
and
push
arpl
je
dec
xchg
loope
pop
push
xchg
push
xor
aad
loop
call
add
push
cmp
jne
cmpsl
hlt
lret
cltd
dec
jnp
pop
imul
or
push
sub
mov
inc
sbb
pusha
dec
push
inc
xor
push
jb
adc
fcoms
and
fistl
inc
pop
shl
mov
fnsave
shlb
adc
sub
adc
fcom
scas
pop
and
mov
lea
push
dec
xor
push
xor
test
fisttpl
and
mov
daa
insl
shlb
imul
aad
lret
jb
out
push
icebp
in
cs
inc
jge
mov
call
test
int
add
clc
fdivrs
lods
gs
mov
dec
aad
iret
and
cmp
movl
mov
jbe
repz
cmpb
and
fidivrs
int3
and
jns
mov
push
andl
adc
daa
arpl
loopne
dec
loope
ds
lcall
sub
pop
in
je
dec
popf
fcmovb
sub
cld
test
push
adc
pop
repz
cmp
clc
jl
clc
sub
mov
mov
shll
add
scas
test
add
shrb
ret
sbb
fisubl
cmpsl
sub
adc
pop
iret
xchg
inc
and
xchg
fistpl
and
addr16
fidivl
cwtl
xor
add
loope
loop
jg
mov
rcrl
push
popa
add
enter
xor
movsl
ds
xchg
pop
ds
cmp
out
popa
js
call
mov
imul
repnz
mov
std
sub
mov
lea
divb
imul
inc
cmp
mov
push
dec
pop
stos
sub
mov
push
add
add
push
adc
mov
dec
add
fxch
mov
mov
mov
sbb
stos
and
test
lret
jb
sti
bound
lods
push
loope
into
test
ss
ss
lods
mov
addl
int
scas
pushf
jb
or
xchg
cmp
mov
lret
pop
fdivrs
jno
xorb
movsb
xchg
bound
jl
jns
mov
mov
pop
rorl
loopne
loope
mov
ficomps
test
fnsave
sub
scas
pushl
xor
hlt
fwait
maskmovq
testl
and
outsb
call
fbld
xchg
lods
sub
mov
aas
test
stc
call
xor
mov
xchg
sbb
shr
loopne
jmp
xor
sti
mov
push
daa
adc
aaa
cmp
push
addr16
mov
add
adc
enter
xchg
fistpll
pop
push
push
push
mov
shr
jg
dec
test
jecxz
ret
es
push
inc
cmp
pop
sbb
pop
inc
imul
pop
les
lcall
and
mov
cli
jg
inc
decb
je
iret
hlt
inc
jl
pushf
lods
fisttps
insb
push
mov
insl
das
dec
les
sbb
mov
shrl
inc
dec
mov
clc
xor
adc
fwait
xchg
or
push
int
mov
jmp
into
pop
add
fwait
call
jns
into
test
push
sbb
test
fcomi
call
shrb
arpl
xchg
aas
test
call
mov
in
mov
pop
xor
xchg
jg
in
loopne
fcoms
mov
gs
cwtl
dec
push
movsl
lret
mov
inc
cmpsl
jbe
jle
sub
loop
mov
push
mov
cs
lcall
out
hlt
xchg
jp
adc
shlb
aas
icebp
jo
std
mov
fistpll
push
jns
es
lock
stc
ja
fistpll
les
cmp
cmp
jns
jno
push
pop
or
dec
or
xor
push
push
pop
pop
mov
inc
pop
js
sub
out
add
div
scas
imul
jb
mov
jb
repz
repnz
call
std
sub
lret
jno
mov
les
jno
std
xchg
jmp
pop
push
mov
and
jnp
addb
mov
and
xchg
sub
add
call
cld
dec
and
push
push
and
jmp
hlt
fists
loopne
aam
push
cltd
mov
mov
jl
icebp
push
ljmp
jl
hlt
ljmp
pop
xchg
loop
cmc
cmp
mov
imul
dec
loop
dec
imul
ja
ds
inc
imul
sub
push
outsl
repnz
xchg
data16
leave
ja
rcl
push
add
pop
test
negl
mov
push
dec
add
xchg
scas
jo
sbb
sub
out
mov
aam
aad
test
push
subl
pop
popa
cltd
pop
cmp
fcoml
inc
into
adc
xlat
cmpsb
jmp
into
or
or
mov
aad
aaa
xchg
int
ss
addr16
scas
sahf
pusha
pop
nop
jp
repnz
fs
sub
or
pop
jmp
pop
sub
inc
scas
arpl
mov
mov
subl
mov
xor
pop
repz
mov
pop
lret
cmp
test
repnz
fistpl
jne
roll
rsm
xor
xchg
cld
jns
add
adc
mov
sahf
pop
sub
mov
in
bound
xor
inc
dec
inc
mov
push
or
shll
and
xchg
daa
cmp
mov
push
jne
mov
out
sub
cld
cmpb
pop
fdivs
leave
ss
jg
pop
pop
jmp
jne
shlb
xorl
test
in
pop
or
aad
sarb
call
xor
mov
int3
fistps
push
sarl
and
mov
lret
dec
ss
and
outsb
push
and
push
leave
mov
loop
mov
sbb
cmp
mulb
pusha
jl
adc
push
add
lret
enter
adc
add
jl
scas
mov
xor
cwtl
dec
sub
test
mov
imul
pop
stc
or
mov
adc
jb
inc
movsl
inc
cmpsb
dec
pop
cmpsb
mov
mov
xchg
push
push
adc
pop
test
mov
inc
lods
in
xor
insl
into
fcoml
jae
mov
or
out
icebp
ret
mov
js
adc
pushl
xchg
hlt
js
rorl
lcall
shrb
pop
mov
inc
js
lret
adcb
xor
mov
stos
pusha
pop
xor
movsb
call
pop
and
out
imul
mov
xor
jmp
cmpsl
flds
adc
mov
outsb
rorl
sbb
dec
fst
mov
adc
push
rcrl
cmp
fstl
shll
inc
inc
out
dec
add
push
es
sub
in
call
icebp
faddl
cltd
fistpl
insb
stos
inc
test
aas
jg
jne
pop
lods
jle
mov
sti
movsl
jge
insb
mov
jmp
push
shlb
je
adc
lods
lahf
cld
push
or
cmp
sub
pop
xor
adc
repnz
mov
mov
cmp
in
bound
or
cmp
sub
pop
xor
adc
repnz
mov
mov
cmp
in
bound
or
cmp
sub
pop
xor
adc
repnz
mov
mov
cmp
in
bound
or
cmp
sub
pop
xor
xchg
insb
sbb
mov
cmp
jge
insl
adc
imul
jl
insb
jge
jmp
mov
cltd
in
mov
jns
imul
sbb
jge
jmp
mov
cltd
scas
mov
jns
imul
sbb
jge
and
out
rorl
out
xor
cmp
sub
cmp
xor
xor
mov
aas
repnz
aad
lods
dec
lods
mov
pcmpgtw
bound
xor
mov
lods
adcl
push
sarb
fs
andl
mov
sbb
cmp
push
cmp
out
popa
cmp
stc
icebp
push
push
out
in
inc
cmpsl
shll
adc
loop
test
ret
and
js
jmp
push
inc
jge
jo
fwait
push
loop
dec
test
shl
sbb
popf
and
test
cltd
stc
loope
daa
or
dec
cmp
sbb
jge
jmp
mov
cltd
in
mov
inc
sub
push
and
jl
dec
sub
mov
lods
shrb
or
sub
jg
inc
cmp
sbb
jge
cmc
jmp
cwtl
int3
mov
fsubrl
mov
xor
pop
cmp
pop
sbb
jge
jmp
mov
cltd
in
mov
jns
imul
sbb
jge
jmp
mov
cltd
in
mov
jns
int3
push
loop
insl
jp
addl
ret
dec
xor
js
ds
pop
fwait
adc
sub
adc
mov
jmp
std
mov
iret
aas
insl
jg
push
pop
rorb
pop
outsb
sbb
sub
cmp
pushf
push
clc
xchg
jge
xlat
daa
dec
or
and
imul
adc
icebp
mov
mov
fst
roll
mov
jg
sbbl
ja
or
sti
test
stos
pop
sbb
push
xchg
or
mov
leave
scas
pop
mov
mov
rorb
add
pop
fsincos
jp
sarl
fnsave
das
xchg
xor
jnp
aam
xor
sub
xor
mov
roll
mov
popf
cli
or
and
into
mov
pslld
inc
in
pop
daa
xchg
add
cmpb
insl
xchg
pop
icebp
mov
enter
xchg
ljmp
push
mov
push
xlat
nop
fsubs
mov
sub
lahf
stos
leave
test
sbbl
push
rorl
arpl
inc
icebp
pushf
out
xlat
out
shrb
loopne
mov
or
addl
lret
sub
adc
pop
arpl
pop
sub
loopne
inc
dec
cmp
sbb
cmpsb
push
cmp
push
arpl
mov
xor
fildll
and
into
scas
sbb
jmp
cmp
movsl
adc
cld
push
xchg
pop
xlat
fld
scas
imul
bound
shrl
into
test
imul
sbb
xor
add
orb
aad
jge
fistps
in
in
cmc
add
dec
adc
out
jnp
loopne
int
mov
ss
pop
jge
filds
ja
js
insl
addr16
cmp
cmp
jns
cmp
pop
lods
pop
adc
mov
out
idivl
or
push
ret
stc
sub
ja
pop
mov
sub
dec
pop
add
dec
push
sbb
arpl
or
mov
adc
push
sti
roll
rcrl
pop
insb
test
test
inc
popa
ficoml
sub
mov
inc
mov
jne
enter
mov
mov
int3
outsb
clc
lcall
inc
or
adc
int3
push
jnp
push
mov
adc
lds
mov
loop
adc
and
inc
cmpsl
mov
insl
inc
iret
out
pop
rolb
mov
xchg
mov
xorl
insl
adc
into
ds
fisubs
inc
sub
fdivrl
and
repnz
lret
dec
pusha
test
in
or
xor
out
scas
pop
pop
sub
mov
lods
lahf
fisubrs
cmp
imul
and
mov
pop
mov
sarl
add
cmp
mov
mov
les
int3
jmp
lcall
jl
adc
loope
sbb
xchg
fdiv
repnz
push
insl
loop
int
ds
imul
mov
jns
mov
add
lret
push
jle
xlat
adc
dec
scas
push
lcall
mov
push
jno
or
dec
inc
cwtl
insb
arpl
cmpsb
add
inc
out
lret
pop
xor
or
test
or
push
jl
outsl
pusha
jnp
inc
dec
adc
cld
sti
xor
ss
das
inc
mov
shll
into
push
cmc
pop
cmp
add
pop
jo
lea
push
sbb
lret
icebp
or
sbb
lods
pushf
mov
int3
fs
clc
inc
mov
sub
aaa
xchg
jg
cmpb
bound
jbe
cwtl
or
rcrl
sbb
push
sub
adc
cwtl
outsl
mov
ja
scas
aas
add
add
aaa
lret
cmp
push
inc
sahf
push
clc
xor
ss
push
sbb
clc
sti
mov
sarb
sbb
inc
cli
pop
inc
add
jecxz
aad
hlt
jmp
inc
and
pop
insl
fstl
jge
lds
mov
xor
pusha
adc
mov
dec
test
lret
dec
in
fwait
xor
in
sar
outsb
mov
mov
test
out
mov
scas
filds
outsl
sbbb
pop
aas
cmp
ret
mov
daa
ja
add
test
js
push
xchg
lea
pop
push
decb
jae
sub
sbb
lcall
adc
mov
add
mov
sbb
mov
rorl
imul
stos
jmp
pushf
inc
data16
jno
lea
pop
inc
and
mov
sub
adc
add
jnp
bound
aaa
xor
push
fcmovu
or
lret
mov
int
lret
xor
test
call
xlat
pop
aad
movsl
mov
hlt
ss
in
shl
jns
and
and
pop
jns
cmpsb
add
into
sahf
ret
iret
and
mov
lahf
mov
push
addl
and
ja
les
pop
jnp
adc
mov
scas
fldt
push
fwait
icebp
gs
lods
or
rolb
xchg
andb
out
dec
insl
cmpsl
ffree
dec
pop
mov
bound
or
jl
dec
xorl
add
adc
pop
int
insb
sbb
negl
repnz
lods
shrl
call
iret
sarl
faddl
fcomps
mov
adc
dec
mov
mov
cld
repz
cmp
xor
fdivp
and
cmp
fildll
negb
mov
jno
add
jb
mov
cmp
fcmovb
xchg
xchg
mov
mov
jo
out
inc
or
mov
mov
cmp
gs
jl
jbe
mov
outsb
iret
imul
leave
leave
add
push
push
mov
mov
jle
scas
jp,pt
dec
adcb
jl
lock
cmc
out
xchg
mov
push
rcll
lods
fmull
pop
lds
mov
lock
rclb
mov
lds
add
scas
popa
or
mov
lret
mov
gs
mov
push
div
sbb
mov
inc
lods
or
xchg
jle
jnp
orb
cmpl
movsb
pusha
out
lock
jbe
pop
jo
test
pop
jmp
dec
sbb
adc
cmp
jb
shrb
test
xchg
sar
pop
sub
fsubl
ja
cmpsl
in
iret
add
xchg
mov
mov
mov
ret
arpl
and
gs
in
push
cld
adc
popf
push
xlat
xchg
xor
popf
incl
in
add
mov
cmpl
push
daa
sbb
sub
or
inc
aam
and
mov
in
sub
sbb
sbb
setne
scas
jo
cmp
and
jne
jl
sbb
jp
mov
fidivrl
popa
loopne
mov
mov
pop
js
lods
add
pop
sahf
pop
or
cmp
sti
cmp
adc
xchg
in
mov
outsb
inc
xor
jo
test
sahf
sbbb
pop
pop
add
pop
adc
adc
jne
ficoms
add
mov
dec
jo
gs
aaa
mov
mov
enter
fsts
repz
int3
jns
add
inc
jle
mov
lea
pop
mov
push
lret
mov
out
int3
pusha
out
ret
push
sub
dec
dec
mov
test
mov
sub
adc
xor
add
jns
and
push
xchg
push
mov
iret
subl
data16
fsubl
iret
loop
mov
mov
loope
push
in
sub
cmp
test
int3
dec
je
scas
scas
daa
js
xor
add
dec
aad
ss
cmp
inc
xorb
sub
shll
pop
adc
push
xchg
dec
xchg
adc
mov
jge
cltd
lock
loop
or
in
mov
mov
sub
jmp
ljmp
sbb
mov
imul
push
stos
xorl
mov
sub
insl
xchg
dec
ss
pop
mov
jp
out
in
cmp
ss
mov
jp
pop
testb
popf
adc
leave
mov
call
push
lds
cs
pushf
cmc
and
incb
pop
adcb
dec
cmpsb
movsb
push
mov
inc
outsl
mov
sbb
xor
aas
adc
or
lods
mov
mov
xor
inc
push
in
cmc
fistps
fadds
jae
xchg
mov
jle
sub
adc
push
push
xor
jne
imul
sub
and
fsubrl
hlt
adc
popf
mov
ljmp
sti
lret
mov
adc
xor
fidivrs
nop
xor
cwtl
and
mov
pop
mov
loop
jne
aad
rcll
pop
mov
pop
mov
jno
pop
cmp
jge
iret
jg
scas
xchg
fidivrl
call
dec
jb
fucomp
dec
cmp
cmp
xchg
mov
xlat
outsl
inc
adc
adc
mov
mov
add
out
lret
dec
sbb
xlat
out
in
mov
push
ss
lea
in
xchg
mov
sub
and
js
rclb
inc
out
jmp
add
popf
sti
stos
inc
cmp
js
jo
fists
test
mov
jp
fsub
ja
mov
dec
fcomi
add
inc
jae
push
mov
cmpsl
out
fiadds
nop
xchg
stos
aam
rorb
cmp
sub
cltd
es
jae
lret
testl
push
lret
sub
ret
pop
test
fiadds
fs
xor
out
ss
xor
in
repz
inc
pushl
arpl
in
loopne
mov
lock
clc
cltd
jo
or
pop
inc
ds
fwait
cmp
mov
pop
and
mov
sti
pop
icebp
cli
ret
mov
outsb
test
or
das
push
xor
ret
cltd
mov
test
repnz
in
dec
dec
icebp
fs
addr16
push
movsbl
mov
push
add
sub
lds
inc
sti
add
mov
pop
pop
lods
imul
mov
hlt
int
lock
mov
gs
fsubp
jne
test
imul
push
lds
push
inc
adc
mov
sbb
call
jbe
inc
mov
pusha
js
inc
pop
push
ret
mov
fmulp
scas
or
inc
sbb
out
loop
and
sbb
xor
outsl
stos
icebp
pop
loope
adc
mulb
mov
mov
sti
loop
mov
mov
in
jmp
mov
scas
dec
adc
add
and
cli
xchg
mov
adc
pop
int
mov
sbb
mov
lcall
push
das
clc
loope
lock
dec
mov
push
sahf
aad
mov
pop
in
xorl
cmp
fs
mov
add
in
mov
cmp
das
xchg
cld
loop
adc
mov
cmp
repz
in
push
add
lret
cmp
or
jge
inc
in
inc
mov
dec
inc
add
or
jno
mov
dec
cmp
and
sti
inc
pop
outsb
dec
jg
jl
cmp
pop
xchg
xchg
push
pop
inc
xor
test
sbb
insl
adcl
mov
mov
inc
push
sub
xchg
pushf
aam
loope
push
sbb
mov
mov
in
nop
push
or
and
jge
mov
sbb
in
cli
fmull
mov
js
mov
mov
push
sbb
rcl
mov
adc
xorb
jecxz
fimuls
dec
rolb
bound
or
cmp
xor
cmp
stos
inc
jp
gs
dec
or
pop
stos
lret
jnp
jns
mov
jbe
mov
roll
xchg
scas
inc
test
incb
pop
sub
push
loope
aaa
push
mov
sub
jae
push
lahf
iret
mov
sbb
movsl
sub
pop
orb
lods
mov
ja
xchg
xchg
daa
dec
les
cmp
nop
mov
daa
cmp
inc
add
ret
scas
mov
push
and
jbe
xor
call
cwtl
hlt
xchg
js
add
data16
out
pop
mov
int3
fadds
cmpsl
sub
in
mov
repnz
stc
push
call
adc
ds
cltd
lock
cmp
mov
push
cld
test
sbb
sbb
pop
in
leave
fcomps
subb
xor
jl
cmc
imul
xor
xchg
push
outsb
fidivrs
stos
adc
fucomi
int3
xchg
inc
xorb
stos
dec
cwtl
aaa
out
mov
xor
cld
popf
add
loop
dec
bound
shl
in
hlt
shll
pop
shrb
sti
and
mov
jmp
sbb
sbb
ja
cli
imul
bound
dec
mov
ret
xchg
popa
adc
and
jmp
ja
test
js
cmp
call
iret
sarl
push
ret
xchg
bound
orl
aaa
mov
andl
sti
sub
mov
or
leave
in
mov
or
or
mov
dec
cmpl
in
arpl
ret
jnp
out
adc
out
lock
arpl
pushf
or
xor
outsl
mov
sub
mov
mov
mov
sar
in
xlat
xor
or
jmp
xchg
xchg
dec
loopne
dec
jae
mov
mov
loopne
lahf
dec
ret
dec
test
imul
hlt
hlt
pop
fisubl
int3
scas
mov
popa
pop
sbb
lods
cwtl
xchg
shrl
shr
inc
add
adc
jle
sbb
jnp
pop
inc
pop
test
pop
sub
gs
cmc
std
jecxz
cmp
scas
inc
sbb
jbe
mov
add
add
or
std
mov
pop
dec
test
or
hlt
jns
les
or
xor
imul
jb
dec
or
ljmp
shl
popa
scas
ret
mov
xchg
ss
leave
outsb
jne
setne
or
out
inc
jbe
lds
jnp
mov
adc
ficoml
sahf
mov
fnsave
inc
mov
mov
pop
mov
xchg
loop
cltd
enter
sub
add
or
jp
adc
push
insl
xchg
lea
cld
cmpsb
dec
sets
push
cmp
hlt
shr
xchg
push
popa
mov
pushf
scas
pushf
xchg
aad
cmc
call
push
sbb
or
cmp
cmp
pop
mov
pmullw
push
or
jns
mov
inc
add
jle
cmp
add
stos
lods
outsb
mov
cmp
pusha
cmpl
add
sbb
xchg
pop
and
push
mov
pop
mov
xchg
sbb
jns
push
ja
xlat
inc
loop
fldenv
push
repz
dec
sub
movsb
les
int
sub
xor
icebp
mov
pop
ds
mov
int
mov
sbb
and
dec
pop
into
xchg
push
enter
ljmp
sbb
mov
enter
je
das
jmp
loope
xlat
add
sbb
mov
std
cmp
lock
or
pushf
rcrl
lods
fidivl
daa
in
pop
push
mov
mov
sub
frstor
jne
setne
mov
dec
add
lahf
outsl
pop
cmp
mov
cmp
pushf
out
data16
mov
mov
repz
push
leave
lret
sub
int
sub
or
lret
xor
sub
xor
xchg
pushf
cmp
out
xor
sub
pop
jae
dec
repnz
aaa
jl
dec
push
mulb
popa
jle
inc
pop
xor
movsl
test
lds
test
xchg
mov
ret
adc
cltd
jb
daa
or
hlt
mov
out
mov
mov
inc
loopne
fnstenv
loopne
cld
aas
mov
aad
xchg
lahf
mov
push
adc
or
mov
stos
jnp
shlb
mov
rolb
in
mov
inc
dec
std
arpl
push
sarb
cmc
mov
xor
jecxz
lds
rclb
xor
in
sub
jle
and
punpckhdq
ljmp
lock
lock
imul
scas
sbb
or
in
mov
sarl
imul
imul
shr
jmp
jne
test
pop
jecxz
cs
loope
out
sub
clc
dec
fnstcw
cmpsb
lock
arpl
sbb
lods
xor
push
inc
or
and
outsl
xlat
pop
push
pop
adc
jo
cmp
cwtl
scas
sarl
inc
ret
cmp
sub
mov
clc
ljmp
into
inc
mov
inc
push
test
outsl
roll
and
insl
sub
mov
pop
testb
fstps
scas
mov
std
jb
fwait
repnz
xor
pop
filds
testb
in
dec
dec
cli
repnz
outsb
dec
mov
mov
fnstenv
sbb
ja
add
inc
lds
jmp
add
xchg
inc
xchg
jno
cmp
cld
sub
aas
inc
pop
cltd
cmp
dec
inc
fcompl
div
adc
ret
sbb
fisttpl
xor
mov
mov
push
push
pop
mov
mov
sarl
mov
mov
dec
sbb
push
xchg
in
or
cwtl
xchg
sar
in
nop
pop
mov
cwtl
push
out
cmp
rcrb
aad
adc
fwait
push
cmp
push
cmp
cmpsb
data16
out
call
cmp
pop
adc
mov
pop
pop
sbb
loop
inc
lret
and
scas
jg
test
rorl
xor
pop
dec
xor
mov
pusha
lods
xor
mov
push
sbb
aam
add
pop
lods
mov
daa
shrl
pop
inc
and
xchg
mov
jle
jae
xchg
inc
test
int3
cld
cli
daa
ja
xor
shlb
mov
in
push
dec
dec
sub
lock
iret
lds
jnp
data16
int3
xchg
loopne
andb
shrl
scas
sahf
pop
xlat
push
mov
cs
dec
xor
in
pop
push
adc
push
jb
repnz
adc
mov
inc
shr
lock
xor
je
and
add
imulb
arpl
cmp
in
imul
mov
or
mov
adc
pop
int
xchg
or
bnd
pushf
pop
pop
jmp
xchg
mov
mov
cmp
cmp
lock
jp
xor
aad
ret
repnz
mov
cmpsl
mov
fstps
out
sub
pop
dec
ret
adc
add
sub
out
aam
and
scas
out
int
mov
sub
push
mov
or
loop
imul
inc
cli
les
jmp
cmovs
xlat
scas
xor
xchg
cmp
mov
divb
dec
daa
adc
aaa
rcll
mov
stos
fsubrp
jmp
or
lods
js
push
adc
adc
pop
xchg
int3
xchg
movsb
sahf
movb
es
aam
repz
out
push
xor
nop
mov
rclb
filds
lods
in
imul
pop
repz
xchg
push
xchg
sbb
mov
out
orb
xchg
pop
xor
mov
scas
mov
call
sarl
call
inc
push
cmpsb
xchg
cmp
stos
test
shlb
pop
xor
cltd
lret
xor
xchg
dec
add
push
push
lahf
mov
insb
gs
and
cli
rcrb
inc
stos
call
xlat
testb
and
imull
xor
push
sbb
outsb
das
ret
jle
jge
xchg
inc
inc
icebp
mov
and
push
dec
xlat
mov
jl
sbb
out
cmp
lcall
mov
jne
sub
sbb
push
pusha
jns
lods
aaa
movb
mov
jge
dec
outsl
pop
jg
adc
pop
mov
inc
movsb
call
mov
cwtl
es
int3
sbb
mov
mov
shll
mov
loope
lea
cmp
mov
push
sub
sbb
cmpsb
stos
push
inc
push
fnstenv
cs
mov
pop
or
popf
inc
test
pop
scas
mov
stc
jns
fbld
shll
pop
in
in
mov
insl
das
mov
push
in
sub
pop
sub
xchg
aas
sarl
fbld
jns
loope
and
pushf
lcall
loop
sbb
scas
push
loope
ret
insl
fisubs
push
mov
cwtl
xor
xlat
jno
mov
xchg
in
jne
add
ss
fisttpll
or
inc
cmp
in
and
mov
cmp
outsb
ret
call
test
scas
sahf
subl
enter
add
gs
push
adc
std
or
push
mov
mov
cmp
sub
insl
or
jmp
mov
cltd
in
mov
jns
imul
sbb
jge
jmp
mov
cltd
in
mov
jns
imul
sbb
jge
or
leave
mov
cltd
in
mov
jns
imul
sbb
jge
jmp
lret
and
data16
int3
ds
in
loope
jno
dec
out
lock
mov
inc
pop
push
insb
popa
jge
or
sbb
sub
cmp
int3
rcr
in
loope
icebp
mov
mov
jno
popa
jl
int3
outsb
sbb
sub
cmp
int3
push
in
dec
cld
repz
mov
xor
jl,pt
or
jae
pop
push
push
xor
xchg
nop
movsb
inc
mov
sbb
inc
xchg
jmp
mov
pop
pushf
jge
cmp
dec
push
shlb
pushf
insl
push
loope
repz
flds
xchg
or
sarb
mov
pushf
rcl
jmp
mov
pop
shr
test
dec
int3
or
insb
in
mov
adc
cmp
int3
add
roll
mov
sub
dec
sarl
repz
leave
or
aam
cmp
add
pushf
aam
test
or
cmpsb
add
push
jecxz
jl
cmp
insb
das
lock
dec
outsb
adc
loope
dec
sbb
cmp
add
mov
rcr
in
gs
sti
mov
mov
xchg
insb
jno
cmp
cmp
lea
xchg
fisttps
mov
adc
adc
sbb
dec
pusha
jp
test
adcb
aam
out
and
pop
outsb
add
push
or
inc
dec
pop
test
mov
xchg
shl
xchg
lods
mov
pop
push
insb
popa
jl
or
sbb
sub
cmp
int3
rcr
in
loope
icebp
mov
mov
push
insb
popa
jl
or
sbb
sub
cmp
int3
sar
jno
rcr
jb
sahf
mov
decl
cmp
inc
fisttpl
mov
dec
shlb
jp
mov
cmp
sahf
pusha
and
stc
cld
dec
push
outsb
jl
inc
mov
adc
stc
mov
mulb
in
loop
mov
xchg
add
jnp
aam
imul
loopne
cmp
aad
sub
xchg
aaa
fldln2
mov
or
cmp
sub
push
mov
sub
xchg
mov
imul
sub
xchg
inc
lods
push
pushl
imul
aaa
loopne
cwtl
insb
pop
jge
jmp
dec
mov
faddl
insl
aad
repnz
imul
aam
and
pop
rclb
sub
mov
mov
mov
adc
out
in
lock
lea
dec
adc
pusha
push
popf
orb
lea
cmp
sub
sbb
pop
dec
add
xor
adc
inc
iret
mov
fwait
dec
cmp
test
add
pop
pop
pop
cmp
add
iret
ljmp
jno
mov
dec
daa
sub
push
push
pop
xchg
adc
inc
jae
push
in
pop
outsb
cmp
inc
arpl
jecxz
in
fimuls
pop
sahf
outsb
push
jo
adc
daa
push
and
pop
out
inc
mov
or
repnz
jb
int
stc
push
pop
inc
and
ds
and
imul
lods
xchg
jecxz
repnz
test
shll
dec
stos
xor
les
add
sub
insb
idivb
add
push
call
mov
or
test
push
or
push
orl
sbb
movsl
orl
jg
mov
xor
mov
out
xchg
jbe
addb
pop
sbb
dec
movsb
sbbb
lods
xor
loope
and
lret
mov
inc
push
lock
push
movsb
out
cli
stos
incb
push
jg
mov
xchg
insl
test
pop
jbe
pop
dec
scas
int3
aas
rcrl
scas
and
cmp
addb
mov
cmc
out
push
es
movsb
sarl
imul
mov
jmp
sahf
cli
std
dec
mov
mov
and
rcrl
loope
sahf
add
imul
les
gs
pop
jl,pn
lods
jno
popa
mov
inc
adcb
imul
imul
dec
xchg
or
jae
and
in
fsubrs
adc
dec
sbb
scas
jge
gs
add
dec
pop
mov
adc
mulb
pop
ss
test
sub
out
shlb
jl
inc
pusha
popf
ret
mov
cwtl
sub
xchg
adc
mov
mov
mov
or
cmp
mov
dec
add
nop
and
movsl
add
and
fsts
sqrtps
lods
add
call
ret
mov
push
push
jmp
jae
add
xchg
sub
adc
call
jns
mov
jbe
lahf
pusha
push
add
add
xor
sbb
negl
lods
jb
xor
outsl
push
insl
xchg
shlb
in
test
hlt
inc
clc
and
push
xlat
mov
in
jbe
mov
adc
adc
push
cli
add
xchg
lods
adc
push
push
negl
add
jbe
dec
fisttpll
rol
fadds
fdivrl
bound
mov
xor
lds
jg
cmp
into
xchg
out
in
loop
sbb
andl
icebp
cld
jb
ret
or
enter
pushf
jne
idivl
fdivs
js
loope
loope
pushf
decb
gs
faddp
outsl
and
mov
xor
pop
dec
call
add
cs
nop
negl
loopne
jge
scas
xchg
jp
pop
jmp
pop
mov
xchg
int
xchg
mov
adc
mov
fisubs
mov
test
fs
jl
cmpsl
loop
lahf
jne
leave
ret
scas
push
adc
popa
or
sub
inc
xchg
pusha
movsb
push
jge
test
add
imul
cmp
cmp
loop
cltd
push
pop
dec
cld
lock
arpl
sbb
xchg
inc
aad
sbb
inc
test
inc
data16
repz
es
fwait
gs
fimull
fmuls
cmpsb
sub
adc
mulb
out
cwtl
jb
cmpsl
fsubrl
shrl
sbb
pop
stos
mov
or
in
mov
mov
sub
mov
ds
jp
xor
xchg
mov
fwait
lock
adc
push
fists
in
jp
inc
clc
mov
xchg
jmp
push
daa
ret
cmp
scas
adc
or
out
lret
or
push
xchg
jns
push
into
xchg
mov
cmp
sbbl
stc
fidivrs
adc
cmp
mov
sub
sub
pop
and
inc
or
adc
mov
xor
fstl
jno
jne
test
push
gs
jae
outsb
push
jno
push
fucomp
in
fildl
hlt
sbb
jno
pop
adc
xor
daa
sarl
test
adc
imul
sbb
pop
cmpsl
mov
xor
repz
mov
dec
xchg
or
pop
and
sbbb
dec
adc
test
push
xlat
jno
testb
and
sub
mov
test
adc
fxch
push
test
cwtl
popa
popf
jge
push
dec
cwtl
mov
test
push
adc
popa
lock
add
out
rcrl
or
out
sub
dec
cmp
and
lods
scas
push
in
inc
outsl
ffreep
mov
or
xchg
lcall
push
mov
add
rorl
inc
je
ret
popf
jbe
dec
xor
push
insl
ror
lret
or
imul
xor
add
shll
nop
inc
add
and
cmp
testb
js
mov
jnp
hlt
xor
bound
push
out
sahf
push
mov
aam
pop
jge
mov
in
mov
or
je
adc
lahf
adc
mov
jns
sbb
into
xchg
sub
andl
loope
stc
jg
or
sub
jmp
adc
sub
or
push
xlat
je
inc
mov
pop
imul
sub
ja
je
jl
ficoms
adc
jg
test
aam
push
lock
jle
xor
scas
out
lcall
xlat
les
mov
fdivrs
mov
mov
or
push
insb
or
mov
xor
sub
cmp
sbb
daa
inc
fcoms
add
pop
pop
jns
fdivrs
rolb
dec
add
and
dec
test
outsl
xchg
push
rol
movsl
push
scas
cmpsb
mov
cmp
dec
bound
dec
out
sub
inc
xchg
pusha
fldenv
mov
mov
mov
sbb
pop
push
xor
inc
ficompl
or
fisttpll
insb
es
mov
movsl
xor
mov
imul
repz
cmp
xor
jne
xchg
push
mov
iret
rcl
fildll
pop
push
jle
adc
mov
in
lret
adc
mov
outsb
xchg
jnp
sbb
jp
imul
push
xchg
dec
jbe
aas
sbb
loopne
in
xor
shll
sbb
ja
les
mov
xchg
enter
ja
add
fs
adcl
pop
ja
rorb
pop
inc
and
jnp
xchg
sub
or
mov
mov
imul
mov
xchg
adc
shrb
cmpsb
lret
pop
xchg
pop
data16
dec
sub
test
lret
out
sub
xchg
in
fdivs
movsb
das
repz
stc
pop
das
out
lahf
stc
movsl
shlb
arpl
dec
nop
mov
xchg
pop
sahf
inc
cmp
in
imul
iret
xorl
dec
pop
sahf
loop
stc
cmovns
fisubrs
add
sbb
dec
xchg
add
jp
dec
pop
dec
push
mov
lods
inc
mov
dec
push
push
in
mov
pop
xor
inc
pop
push
cmc
push
xchg
gs
rorl
imul
mov
or
mov
mov
push
sub
decb
scas
mov
pusha
inc
push
jl
mov
xor
aad
and
mov
clc
adc
in
jl
jae
push
fnsave
imul
mov
mov
arpl
aas
shll
shll
jl
pop
or
dec
xchg
mov
lea
or
dec
mov
in
push
adc
fcmovne
cli
fdivl
or
insl
xchg
xchg
cmpsb
mov
cmp
cmpsb
imul
sahf
dec
popa
xchg
ljmp
insb
mov
fbstp
lods
push
cli
xor
scas
jl
std
std
add
shrl
cltd
cs
arpl
mov
jne
jbe
cmp
aas
push
inc
push
or
popf
pop
cmp
outsl
jno
repnz
shl
les
aad
cmpsb
sub
data16
cwtl
xor
xchg
pop
jp
and
jl
inc
cmp
out
dec
out
lcall
pop
in
sti
sub
sahf
outsl
mov
sub
mov
mov
sub
xchg
jo
test
xchg
sub
pop
xor
dec
loope
mov
mov
jbe
mov
in
ret
or
sub
mov
inc
add
fstps
sbb
pop
std
push
rcr
sbb
pop
jmp
loop
inc
xlat
frstor
mov
mov
popa
fmuls
cmp
les
jp
outsb
lret
mov
sbb
dec
and
pusha
add
insl
in
daa
pop
add
bound
lock
xchg
out
fldz
outsb
push
sar
sti
out
sbb
subl
sti
shrl
and
decl
sub
outsl
xchg
rcll
xchg
scas
jnp
pusha
or
push
outsl
lds
dec
jo
cltd
dec
addr16
cltd
pop
push
mov
in
jns
lcall
xlat
stos
cs
popa
cmp
sub
add
mov
pop
dec
test
cmpsl
test
int3
jle
pcmpeqd
clc
lods
sbb
sub
inc
roll
mov
inc
dec
mov
xor
cmp
mov
xchg
mov
push
movsl
cli
mov
test
stc
jnp
dec
and
test
iret
mov
xchg
cs
mov
lds
cmpsb
push
cmc
mov
stos
add
sbb
out
shlb
mov
inc
mov
lods
push
into
mov
pop
push
push
shll
inc
movsb
fisubl
xor
jmp
in
add
ret
mov
je
cmovg
in
test
insl
sbb
and
rol
mov
cmp
jno
pop
pop
pop
cmpsl
dec
fcmovbe
pop
sub
jp
das
ss
movsb
pop
fwait
jg
fidivs
rol
and
negb
loop
jle
cmc
jo
enter
rolb
enter
ret
add
das
imul
inc
fidivl
xor
movsb
cli
es
mov
xchg
mov
jo
lods
scas
outsb
jle
sbb
arpl
icebp
xchg
lcall
jb
repz
jb
cmpsb
mov
cmc
int3
lea
les
out
fisubl
pop
adc
mov
enter
mov
imul
pop
xchg
push
rclb
fcmovnb
lret
repnz
adc
fsubs
scas
cmp
hlt
popf
inc
push
gs
sbb
loop
shr
xchg
jge
jne
test
xor
add
push
inc
add
mov
out
popa
es
popf
mov
pop
pop
add
jmp
xchg
jmp
aas
xchg
dec
cmp
fadds
sar
sub
pop
push
mov
dec
pop
xor
leave
loope
xchg
adcl
cltd
mov
and
lods
repz
rcrl
inc
cwtl
pop
mov
dec
leave
adc
call
pushf
inc
lahf
push
nop
test
mov
pop
inc
push
adc
sbbl
insl
dec
iret
jbe
or
or
sbb
fwait
mov
stos
sbb
in
fdivr
js
and
xlat
int3
mov
lods
xor
cmp
xlat
lahf
lcall
sarl
xor
sar
or
insl
mov
add
or
mov
fsubs
fidivrl
push
repz
stos
sarb
scas
mov
sbb
outsl
test
cmp
leave
cmp
xor
mov
clc
inc
aad
jg
xchg
ss
std
cs
int3
pop
test
mov
rcl
xchg
xor
rolb
stos
xor
scas
aad
movsb
pushf
out
mov
xchg
mov
fildl
pop
mov
movsb
paddusb
loope
jle
pop
cmpsb
ljmp
popa
mov
icebp
andb
arpl
cmc
scas
test
xchg
xchg
loopw
push
xor
out
je
jg
push
mov
xor
push
in
add
cmp
cmpsl
mov
xchg
je
dec
dec
ret
gs
adc
mov
mov
jge
sbb
nop
or
cmc
push
mov
mov
sahf
gs
pop
outsl
mov
or
and
shr
xchg
mov
jbe
push
inc
outsb
sbb
into
arpl
sbb
pop
xor
aad
xlat
sbb
movsl
and
mov
pop
jge
sub
and
pop
push
xor
in
mov
jl
sbb
mov
or
in
loope
outsl
fs
movsl
xorl
xchg
adc
sbb
clc
push
imul
imul
dec
repz
add
add
call
add
pusha
ss
nop
inc
dec
clc
xchg
imul
fidivl
or
jle
xchg
jle
movsb
insb
aam
fldl
push
arpl
sbb
sbb
ror
jp
pop
repz
cmp
jne
fcmovnb
nop
add
loop
sub
pop
roll
mov
add
scas
hlt
jp
xor
jg
rorl
pop
sub
loopne
test
es
xor
stc
add
push
xchg
in
or
in
aas
mov
push
sbb
xchg
out
js
pop
pop
movsb
and
jb
imul
inc
sub
in
aad
push
dec
jp
shl
mov
insl
xchg
cwtl
jle
sbb
inc
ret
clc
loope
jb
sbb
jo
scas
aam
pop
adc
push
mov
fimuls
pop
pop
xor
daa
lret
out
jg
aad
xchg
ja
add
cmp
cli
pop
out
sbb
inc
les
pop
hlt
loopne
push
fdivrs
loop
inc
mov
loop
out
xchg
fs
sub
aaa
inc
rorl
jle
push
jmp
add
xor
xchg
cli
jl
mov
or
pushl
pop
sbb
sti
mov
and
pop
add
vorpd
shlb
cmp
mov
call
shr
add
fs
or
popf
sbb
sbb
xor
jb
mov
pop
fwait
out
sbb
push
sub
inc
or
push
rol
jl
test
mov
push
sub
iret
sub
test
fstpt
or
sbb
dec
mov
mov
mov
mov
cmpsl
mov
jmp
bound
icebp
add
inc
jne
rcl
ljmp
mov
jg
cld
rclb
in
notl
lods
rcrb
lret
jge
xlat
or
hlt
test
pop
in
mov
enter
rcrb
mov
iret
test
aam
arpl
mov
je
cmpb
jae
and
push
xor
or
xchg
ljmp
xchg
fs
ljmp
imul
pop
sbb
cmp
cld
mov
pop
xor
sbb
cltd
pusha
dec
mov
jnp
add
cs
jg
sbb
push
adc
mov
les
dec
ret
inc
imul
xor
jae
loop
mov
jbe
scas
ljmp
ja
pop
sbb
aas
popw
les
insb
addb
lret
sub
mov
addb
dec
push
cmp
inc
stos
in
mov
ja
jns
nop
pop
pop
push
out
das
or
inc
mov
push
ja
loop
fsubl
popa
ss
call
ljmp
lea
dec
mov
lods
popa
sarl
es
jno
enter
jb
xor
cmpsb
inc
hlt
inc
js
inc
repz
sti
add
xchg
adc
mov
inc
movsl
lods
mov
xor
movsb
xchg
mov
lahf
testb
adc
jl
int3
adc
xor
stos
pushf
imul
sub
and
call
adc
jl
idivb
stc
repnz
adc
pop
jle
mov
addr16
movsl
cmp
cmp
xchg
mov
dec
jp
les
in
add
sbb
mov
inc
push
fisubs
dec
imul
jo
pop
jne
fstpt
sub
push
or
imul
sub
jb
push
clc
mov
ss
xor
mov
push
andl
jb
dec
out
cs
in
jb
inc
les
sub
aaa
mov
outsb
mov
repz
jmp
outsl
insb
fimull
mov
adc
jnp
cmpb
out
or
fstl
mov
mov
and
sub
push
xor
mov
rcll
outsl
mov
and
aam
jmp
lock
cmp
mov
mov
lock
xorb
inc
and
xchg
lret
pushf
sarl
xchg
loop
pop
dec
ret
xchg
repnz
sti
sbb
sbb
mov
pop
fstpt
pop
and
jns
negb
sbb
je
cltd
das
or
mov
sbb
pop
fisttpll
dec
add
cmp
je
jle
loope
sbb
adc
enter
or
xor
mov
cmp
loop
sub
pop
pop
dec
inc
push
daa
jae
or
inc
insl
jb
das
xchg
push
insb
adc
mov
xchg
out
jl
and
and
jge
dec
cltd
aaa
addl
addr16
sub
add
mov
into
insl
xchg
clc
push
mov
sub
cmp
jecxz
leave
lcall
pop
adc
scas
hlt
mov
push
mov
bound
fisttpll
int
cli
out
iret
jo
in
and
scas
aad
pop
mov
mov
pushf
xchg
out
int
jle
or
mov
add
inc
jg
jmp
insb
inc
movsl
flds
lock
push
lods
mov
sub
bound
movsb
ret
xor
imul
jle
inc
inc
lock
jmp
ror
cltd
loope
jns
out
lea
push
jns
and
ja
jnp
push
sub
xchg
mov
xor
cmp
jecxz
push
adc
ja
ret
xlat
out
cmp
mov
into
lea
mov
cmpsb
hlt
clc
outsb
adc
enter
fsubrl
pop
lea
lds
jl
xor
mov
xchg
jp
jne
xchg
jne
or
test
push
inc
call
pop
jbe
push
ret
dec
movb
addr16
cmp
pop
out
das
inc
mov
scas
xor
mov
or
dec
xchg
mov
fidivl
jnp
cmp
mov
mov
fidivrs
and
roll
mov
adc
lret
jne
adc
jg
and
mov
les
mov
cmpsb
xor
into
mov
xchg
and
pop
div
adc
add
fbstp
xchg
add
mov
clc
andl
insb
cmp
aam
dec
sbb
dec
inc
cmp
lret
mov
stc
mov
mov
jmp
cltd
jle
test
mov
cmp
hlt
push
pop
dec
xchg
jp
adc
pop
popa
sub
lss
jbe
cmpsb
aad
lea
shr
xor
leave
pop
xor
inc
inc
pop
jb
mov
adc
and
leave
fwait
repnz
add
pushf
clc
daa
cmp
lahf
jp
pop
pop
popf
dec
into
mov
data16
hlt
ret
int3
sar
fldcw
ss
add
mov
jo
adc
cltd
xchg
cmpsl
push
fadds
mov
xor
movsb
sbb
push
shlb
in
aad
popf
or
xchg
out
std
lret
clc
stos
lods
push
enter
cmp
add
cmpsl
das
cmp
cmp
mov
fsub
sbb
xor
std
jle,pn
jbe
js
test
push
pop
loopne
fidivs
ret
ficompl
lock
jge
jne
icebp
pop
adc
leave
inc
jp
push
cmp
lret
shl
shl
stc
push
das
push
ret
mov
rorb
push
test
jnp
pusha
jmp
mov
mov
outsl
mov
sti
loopne
ljmp
jg
daa
ss
jnp
push
pusha
pop
cs
in
adc
add
fldenv
in
shr
cld
icebp
mov
mov
push
insb
popa
jl
or
sbb
sub
cmp
int3
rcr
in
loope
icebp
mov
mov
push
insb
popa
jl
or
sbb
sub
cmp
int3
rcrl
cld
icebp
or
pushf
cmp
pop
push
insb
popa
jl
or
sbb
sub
cmp
int3
rcr
in
loope
lock
mov
sti
popa
jl
jl
insb
out
pop
fimuls
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
shll
push
loope
icebp
jg
add
and
dec
mov
inc
movsb
push
xchg
popa
xchg
add
push
and
xor
shll
push
loope
icebp
jbe
xchg
push
mov
cmpsb
push
xchg
popa
xchg
add
adc
and
xor
shll
push
loope
icebp
jbe
xchg
push
mov
test
notb
jne
inc
scas
xor
inc
movsl
push
test
jns
xor
mov
lea
popa
andl
ds
cmp
jmp
jns
outsb
stos
lods
scas
mov
push
shl
andb
int
aam
pop
jl
dec
popf
and
mov
pushf
cmpsb
sbb
or
add
push
faddp
xor
ds
aad
add
push
sbbb
inc
jb
inc
ja
jns
cmpsb
push
out
fisttps
gs
mov
or
addl
mov
scas
push
sbb
push
sub
popa
or
sub
stc
test
in
xchg
repnz
xor
mov
in
jno
mov
adc
xor
shll
push
loope
icebp
jbe
xchg
push
mov
cmpsb
push
xchg
popa
xchg
add
adc
and
ja
lods
inc
add
inc
mov
out
or
cmp
ret
sub
ret
pop
jo
cmpsl
push
inc
adcb
loope
cmpsb
adc
sub
mov
add
cmp
add
jle
push
lods
pop
push
xchg
movsl
push
xchg
arpl
push
mov
cmpsb
push
xchg
popa
xchg
add
adc
and
xor
shll
push
loope
icebp
jbe
xchg
push
mov
cmpsb
push
xchg
popa
xchg
add
adc
and
xor
roll
adc
cmpsb
inc
xchg
xchg
neg
iret
add
cmp
aaa
fildll
xlat
inc
ljmp
cmpsb
push
nop
push
mov
loope
pop
xchg
int
dec
out
cltd
adc
and
insb
cmp
sub
shlb
adc
jb
insl
cmp
cmp
fmull
or
xor
in
outsb
inc
mov
loop
xor
jle
xchg
mov
imul
jge
xchg
leave
jmp
shrb
sub
jb
mov
xchg
mov
scas
sub
loope
cwtl
outsb
cld
add
dec
mov
or
js
insl
sub
stc
push
cmp
adc
scas
sahf
test
cld
cpuid
movsb
gs
mov
pop
inc
jnp
arpl
xchg
cmc
or
xor
psubsw
sub
in
movsl
aas
dec
clc
rcl
sub
sub
mov
int3
sub
cmpsb
sahf
sbb
inc
mov
add
add
xor
test
push
or
es
pop
mov
or
cmp
mov
xchg
repz
cltd
push
pop
aas
int
push
or
daa
inc
pop
ret
cld
xorl
mov
push
or
jnp
js
cmp
fs
or
dec
daa
or
out
or
push
jle
cwtl
ret
int3
ljmp
ret
nop
lret
xchg
movsb
call
sbb
mov
cltd
js
xor
xchg
or
xor
lahf
icebp
repz
rcll
jo
std
xchg
dec
sbb
lods
cmc
mull
xlat
and
enter
shll
jno
add
rcrl
fldt
movsl
jnp
in
add
xchg
mov
inc
aaa
fldcw
icebp
das
hlt
popf
jne
push
jnp
ds
scas
jb
jecxz
lods
add
jno
jbe
jmp
popa
pop
adc
nop
jne
in
mov
mov
jp
add
out
mov
push
pop
adc
in
sub
outsb
stos
xchg
lods
fcom
sbb
dec
cltd
sbb
fstpt
test
data16
pop
xchg
pop
ucomiss
pop
pop
adc
in
jo
fildll
outsl
pop
mov
test
outsl
or
jmp
psllw
fcomp
mov
xchg
jecxz
jns
adc
into
xlat
jg
popa
aaa
imul
aam
mov
push
shlb
mulb
xchg
lock
insl
inc
jb
insb
jp
cmp
repnz
mov
enter
jmp
lret
mov
dec
jle
jecxz
setno
xchg
mul
dec
fildll
pop
pop
jae
cld
test
iret
mov
or
lods
cmp
push
mov
add
adc
jle
movsb
fstpt
xchg
insb
pop
push
mov
bound
pop
fistl
mov
inc
cmp
jbe
lods
sub
iret
loope
cmpsb
insb
inc
data16
out
adc
cmpsb
sub
loop
cli
popf
lods
andl
loope
xor
or
cs
mov
push
inc
outsl
fldt
cmp
xor
repz
std
das
adc
ljmp
rclb
out
push
mov
jmp
pop
data16
addb
std
ljmp
stc
ret
dec
addl
mov
sub
into
pop
hlt
dec
lret
add
adc
in
jmp
lds
aad
mov
hlt
andps
imul
sar
pop
push
test
bound
out
mov
outsb
scas
cli
mov
lock
jbe
cmp
adc
std
adcb
sti
pop
push
bound
lock
ljmp
aad
das
call
scas
sbb
mov
clc
ficompl
ret
xchg
or
jmp
imul
fdivl
aam
xchg
sub
pop
push
jg
fdivl
sub
dec
stos
xchg
inc
clc
push
push
push
fldenv
push
addr16
dec
cmpsb
into
lahf
sbb
cmp
jnp
cs
in
mov
pop
insb
insl
and
in
xchg
xchg
xor
inc
fbstp
pop
and
ss
out
mov
sbb
inc
sti
sub
loope
or
std
test
xor
or
push
mov
xor
sub
pop
hlt
rolb
push
jne
mov
push
push
adc
scas
mov
pop
pop
or
out
adcl
ffreep
xchg
fldcw
mov
cmp
push
fists
dec
fnstcw
dec
pop
or
and
scas
iret
lods
jge
clc
movl
inc
sbb
add
and
mov
xchg
fsubp
push
pop
daa
xchg
aad
pop
jae
rcrl
pop
or
lahf
mov
fcompl
fldcw
fcomps
inc
daa
stos
rorl
pop
push
or
push
shlb
add
cmpsl
cmpsl
ds
sahf
popa
cltd
aad
cmp
shll
sub
scas
push
sbb
xchg
add
mov
or
pop
jb
cmp
lea
loope
sub
movsb
mov
dec
cwtl
outsl
aas
push
cltd
pop
xchg
mov
mov
mov
mov
push
mov
jl
sub
and
fs
pop
pusha
lock
fstl
fwait
adc
lret
adc
sbb
jle,pt
aad
mov
and
mov
ficoml
lret
cltd
cli
xor
mov
rcrb
pop
mov
inc
mov
jle
pop
test
sbb
pop
rcr
ljmp
scas
test
sub
inc
lcall
cmp
add
mov
push
mov
repnz
pop
sub
out
cmpsb
dec
cmpsb
mov
sub
ja
int3
mov
push
cmp
testl
js,pt
xchg
clc
lret
fiadds
shrl
pop
xor
push
sbb
je
mov
js,pt
mov
dec
mov
xchg
cltd
pop
mov
mov
or
data16
push
mov
dec
pop
int3
mov
out
add
pop
les
psubusw
sbb
sub
jnp,pt
imull
xchg
add
mov
jo
out
scas
xchg
insb
push
adcl
jae
leave
lcall
shl
push
in
ja
jbe
cli
shlb
mov
dec
pop
sub
xchg
repnz
or
js
fwait
mov
cltd
arpl
mov
cs
movsl
sbb
xor
adc
es
mov
push
ja
sub
xor
pop
ljmp
in
ret
sub
dec
mov
je
outsl
push
sub
mov
imul
js
dec
std
xchg
cs
cmp
clc
or
sub
clc
add
add
aam
push
lds
shr
lahf
jbe
xor
inc
pusha
or
mov
into
lea
mov
bound
jge
in
dec
repnz
mov
test
push
jg
lea
subb
outsb
stos
fmul
jno
fsubrl
mov
test
xor
leave
lock
xchg
mov
lock
repnz
scas
lods
js
push
call
sbb
lret
add
adcb
adc
add
imul
jecxz
rolb
mov
andb
sub
std
push
dec
jg
mov
mov
dec
mov
out
jno
pusha
inc
inc
arpl
loopne
pop
movb
add
dec
xchg
push
dec
sbb
pop
pushf
addr16
das
and
insb
jp
psrlq
or
mov
stc
insl
popf
pop
or
inc
lea
loop
add
loopne
add
sti
xchg
or
popa
repnz
and
xchg
adcb
xchg
jo
pop
repz
test
and
adc
test
sbb
std
xchg
mov
mov
ljmp
clc
iret
insl
pop
cli
jnp
movsb
cmp
and
mov
push
ficompl
jl
arpl
cmp
add
pop
leave
loop
pusha
cli
fisubl
mov
jnp
scas
or
clc
sub
out
lcall
repz
shrb
add
call
mov
sub
je
leave
pop
stos
loop
cmp
mov
fstpl
lods
push
xor
mov
xchg
adc
in
outsb
adc
in
jae
mov
scas
lds
sbb
xlat
or
or
loope
jmp
pop
rcll
sub
xor
mov
mov
out
in
mov
sub
cld
pop
sahf
clc
je
sub
fsub
inc
std
movsl
inc
adc
push
pop
mov
push
push
outsl
xorb
dec
dec
das
insl
xor
lea
inc
cmp
sahf
es
cmp
inc
in
push
clc
lds
mov
fimuls
repnz
scas
jns
jle
push
push
mov
jmp
dec
jbe
xchg
cmc
dec
cmp
mov
mov
cmp
hlt
dec
cmp
jbe
push
test
dec
imul
xor
mov
stc
lock
out
negl
jns
jb
jbe
mov
repz
cltd
pusha
add
rcl
sbb
je
add
inc
cmp
mov
outsl
insl
subb
jp
pop
or
or
pop
adc
out
jmp
aaa
fcmovb
xor
in
ficompl
idiv
cmp
loopne
cmp
sti
into
mov
int3
lods
lcall
ds
rcrl
addb
rorb
jo
lock
fdivrs
mov
mov
mov
out
loop
xchg
and
icebp
push
addr16
call
xor
hlt
in
ficoml
insb
sub
sbb
leave
adc
subb
jne
pop
les
cwtl
scas
pop
sahf
jno
jne
int
and
in
xorb
test
aad
mov
leave
jno
xor
int3
in
test
ss
push
lods
xor
mov
sbb
pop
loop
and
push
in
cwtl
ds
mov
mov
loope
sub
cmpl
and
sbb
and
cmc
jbe
cmp
xchg
jp
in
push
daa
addb
out
int
xchg
mov
push
scas
es
enter
sub
mov
imul
mov
mov
fimuls
add
js
and
mov
adcb
mov
mov
je
pop
cld
movl
mov
mov
lcall
int3
jecxz
int3
add
cwtl
adc
inc
inc
shr
stc
andb
mov
inc
sbbl
insl
mov
mov
jmp
enter
dec
pushf
ret
shrb
mov
xchg
insb
dec
fidivs
mov
lret
jle
mov
xchg
jb
xor
aad
ror
adc
out
pop
gs
mov
cwtl
push
lods
xchg
mov
loopne
aaa
adc
popa
or
lea
push
dec
or
mov
je
cmp
popa
adc
in
dec
and
or
adc
shll
daa
movsl
inc
adc
hlt
add
xor
lahf
std
inc
scas
addl
xchg
jg
mov
dec
orb
ja
ja
xor
fmul
stos
cmp
mov
int3
loop
imul
movsl
std
push
add
add
jne
push
and
jge
movsb
mov
icebp
imul
xor
movsb
jge
adc
icebp
ds
fldl2t
xchg
cmpb
and
and
daa
inc
mov
in
lahf
in
iret
sarb
lcallw
sub
mov
rol
test
out
outsl
pop
rdpmc
xorl
test
or
out
cli
dec
adc
sub
in
or
cmp
mov
dec
loop
jmp
push
inc
jge
or
daa
lds
sbb
push
sbb
fcmove
icebp
ficompl
loop
insl
mov
jns
push
and
mov
xchg
push
ret
xchg
addr16
pop
or
enter
push
xchg
xchg
lock
int3
sbb
lods
stos
mov
or
pop
xlat
add
ja
mov
loope
mov
mul
push
lds
xchg
cmp
push
loope
or
sbb
mov
sbb
xor
adc
mov
into
hlt
and
inc
out
aad
pop
outsb
xchg
pushf
mov
dec
sarl
lcall
ror
or
xchg
cs
lahf
sbb
cmc
rcrb
sbb
mov
inc
repz
push
sbb
jg
test
fwait
cmp
ljmp
nop
stos
repz
sarb
mov
ja
movsl
cmp
xchg
push
mov
dec
inc
test
mov
mov
inc
insl
xchg
pushf
test
push
lcall
adc
dec
leave
pop
xchg
inc
sbb
fnstcw
loop
sub
mov
icebp
adc
mov
sub
mov
xchg
sub
push
add
fstpt
lods
and
mov
outsl
pop
cmp
lret
in
push
mov
xor
bound
inc
adc
popa
pop
cmp
dec
cmp
sbb
dec
aam
pushf
test
xchg
leave
lea
or
jp
mov
inc
mov
ljmp
push
test
xchg
push
ss
jnp
lcall
and
push
lds
mov
push
mov
xchg
add
loopne
push
syscall
repz
fistpl
or
loop
xor
inc
adc
jno
in
mov
pop
and
mov
clc
clc
sub
mov
mov
pushf
xchg
out
in
das
add
sarb
xchg
in
outsl
scas
cmp
mov
mov
push
sbbl
mov
clc
pop
popa
push
push
mov
push
jbe
pop
enter
jp
adc
fstl
repnz
scas
add
ljmp
int3
hlt
leave
inc
iret
adc
or
repz
das
cs
jbe
add
cmp
mov
cli
jmp
jae
mov
mov
cmp
cmp
dec
sahf
inc
push
fldcw
cmp
in
adc
sub
cmp
mov
pop
add
jg
push
mov
push
jbe
or
out
mov
fisubs
cmp
pusha
dec
sbb
insb
fsubr
push
mov
push
xchg
mov
dec
lods
mov
loope
cmpsb
mov
scas
pop
sub
sub
or
out
jmp
jl
insl
push
in
out
push
push
pop
lret
je
xchg
mov
cmc
loopne
adc
inc
lret
and
inc
push
movsb
lock
stos
dec
fimuls
xorb
jg
in
cmp
xchg
stos
cld
mov
and
mov
imul
or
sbb
push
jns
icebp
daa
mov
std
call
add
push
mov
mov
dec
adcb
or
gs
nop
mov
jae
and
outsb
test
sbb
xor
mov
fndisi(8087
je
ret
xchg
xchg
rcrl
mov
std
pop
lret
adc
test
lods
fxam
add
pop
fdivr
dec
lock
sahf
push
xchg
incl
pop
dec
ret
mov
ja
and
andl
in
mov
jne
pop
mov
popa
cmp
pop
movsb
js
das
mov
push
xor
and
push
cmp
xor
push
test
lods
fcmovnb
sub
fldl
mov
ss
out
xchg
lock
rclb
xor
mov
not
fnstcw
mov
lret
cmc
fcoms
jno
mov
xchg
mov
add
and
or
lods
xchg
ljmp
icebp
movsl
push
sbb
mov
mov
shlb
pand
popa
in
into
push
cmc
sub
mov
mov
mov
cmp
aad
ss
clc
in
fmuls
cwtl
push
scas
or
iret
cld
and
inc
xlat
pushf
ds
mov
jmp
mov
xchg
mov
push
cmpsb
xlat
mov
sbb
rorl
es
ror
xor
in
fnstenv
cmpsb
jl
movsl
lret
mov
data16
popa
dec
lock
and
mov
inc
mov
jbe
xor
test
lock
mov
dec
fnstsw
jg
std
into
into
xchg
and
sub
shlb
or
cmp
jb
ret
xor
and
out
inc
out
lods
movsb
cli
add
inc
cmp
jl
lcall
insl
test
enter
lock
sbb
daa
notl
adc
cmp
sbb
inc
es
add
aas
pop
loopne
ret
scas
jl
sub
inc
lds
jg
xchg
mov
call
stc
movsl
jecxz
bound
push
jg
test
inc
pop
mov
scas
push
cmp
inc
jb
adc
dec
xor
in
jp
push
add
ficoml
arpl
ret
lcall
cli
lock
cmpsb
xchg
in
lea
test
mov
pop
icebp
jecxz
xchg
mov
es
rolb
pop
or
xchg
and
outsb
scas
pop
jle
cmp
pop
in
mov
inc
flds
pop
inc
dec
shrl
sbb
mov
add
mov
jnp
adc
push
sub
or
jp
out
in
pop
loopne
jno
fcmovb
rcll
lcall
mov
daa
out
add
fidivs
push
fstl
pop
push
inc
or
int3
mov
ret
gs
sarl
push
stos
and
lods
in
xchg
jae
daa
xchg
mov
movsb
cmpltps
xchg
data16
push
xchg
sahf
iret
iret
push
pop
lcall
les
inc
outsb
shll
into
test
in
adc
adc
jae
jg
shll
sbb
jecxz
or
sub
lret
push
scas
call
sub
pop
jnp
add
jns
xchg
sbbl
clc
movsb
lcall
dec
push
sbb
aam
pop
jae
jp
dec
popf
inc
mov
adc
jno
push
and
pop
sub
xlat
xchg
cmp
jg
leave
shrl
imul
and
xor
or
add
or
mov
fstl
insl
xchg
or
leave
cwtl
into
xlat
aam
rcll
jb
in
aam
and
mov
dec
dec
jmp
stc
fidivrs
inc
sbb
call
f2xm1
hlt
inc
leave
xor
cmp
pop
dec
arpl
sub
and
je
cmc
enter
aas
fildl
lret
jno
mov
out
mov
inc
xchg
sub
mov
jno
sbb
pusha
pop
fcmovnb
add
mov
pop
sarb
enter
lcall
lock
inc
dec
adc
push
popa
orl
xchg
pushf
mov
pop
into
pop
mov
stos
dec
rolb
aaa
movb
insb
cmp
lds
fcoms
xor
inc
mov
ds
in
pop
jne
pop
cmp
pop
mov
fs
mov
mov
ljmp
jo
jmp
add
aad
mov
jecxz
sub
mov
jl
xor
push
inc
pusha
fnstsw
fsubr
sub
push
xchg
xchg
lahf
adc
mov
inc
ds
stos
add
movl
divb
inc
popf
mov
cltd
sub
imul
pusha
cs
push
inc
push
addr16
lock
adc
mov
ret
stos
sbb
fidivrl
push
push
loope
xlat
repnz
xchg
ja
dec
leave
dec
mov
xlat
in
mov
sub
scas
dec
mov
xor
pop
js
mov
int3
push
add
in
adc
push
mov
std
sub
sbb
add
es
mov
mov
into
shr
aad
xchg
pusha
pop
sbb
lea
repz
push
and
push
mov
pop
push
test
into
mov
fwait
sbb
pop
inc
inc
in
push
in
fildll
pop
sbb
mov
nop
out
sub
jno
or
and
leave
out
lods
push
cmc
xor
arpl
lods
in
sub
dec
clc
std
sbb
and
int3
das
xor
dec
in
lret
fstpl
mov
cmp
fwait
dec
lret
pop
outsl
and
test
pand
cmp
and
cmp
iret
je
or
add
les
loopne
addb
mov
xor
mov
in
xchg
mov
xchg
jnp
jnp
push
inc
and
xlat
out
jbe
cmpsl
imul
outsb
call
les
lods
dec
mov
fistl
mov
imul
sbb
lahf
adc
mov
sub
cs
mov
scas
sti
dec
xchg
mov
push
xlat
dec
cli
pop
lea
adc
lock
cmc
mov
mov
sub
pop
lock
xor
push
sahf
test
jno
jp
and
cmpsl
pop
mov
mov
rorb
movsl
sub
push
scas
fs
lcall
pop
jecxz
shlb
es
out
push
stos
sub
mov
mov
dec
dec
mov
std
pop
psubsw
jmp
push
add
and
sbb
in
push
jo
bound
sub
sub
fs
push
xchg
jno
pop
call
loop
or
pop
sahf
shrl
loopne
icebp
jbe
xchg
push
mov
cmpsb
push
xchg
popa
xchg
add
adc
and
xor
shll
push
loope
icebp
jbe
xchg
push
mov
cmpsb
push
xchg
popa
xchg
add
adc
and
xor
lds
rcll
loope
lock
addr16
push
mov
cmpsb
push
xchg
popa
xchg
add
adc
and
xor
shll
push
loope
cmc
jbe
adc
and
dec
dec
mov
xchg
orl
push
jge
dec
leave
pop
mov
rclb
in
sub
imul
cmp
sub
icebp
insl
jmp
pop
mov
or
imul
cmp
dec
insl
sbb
imul
xor
and
jns
add
fstpl
in
jne
outsb
fstpt
mov
cmp
in
xchg
mov
dec
pushw
push
leave
ret
inc
insb
sbbl
cmp
lds
jmp
xchg
adc
mov
lea
fsts
dec
cmp
jnp
cmp
cmp
cmp
mov
push
popf
mov
dec
pushf
insl
mov
push
mov
insb
mov
mov
mov
sub
pop
div
jl
adc
es
mov
fstpl
sbb
pusha
cmp
cmpsb
mov
lret
xor
jl
jl
jmp
xchg
xor
push
fcompl
jo
sub
dec
int
sub
pop
jb
lret
push
pop
movsl
inc
mov
adc
add
cmc
sti
in
aam
les
aaa
stos
sbb
lahf
jge
dec
cmpsl
pop
xlat
jnp
push
mov
jo
test
test
cwtl
sub
insl
lea
stc
adc
add
pop
enter
cli
jno
xchg
sub
fisttps
loope
clc
mov
sbb
inc
test
sbb
pop
int
fnstsw
lods
sub
stc
insl
jmp
pop
mov
or
imul
cmp
or
jno
xchg
dec
cmc
adc
pop
stc
mov
cmc
cmp
xchg
jle
xchg
shrl
mov
fs
pushf
sahf
testl
dec
sti
cmp
pop
sub
sbb
stos
dec
into
pop
jbe
addb
xor
adc
jb
shll
insl
addr16
pushl
out
mov
adc
sti
fucomp
jns
lahf
mov
inc
lds
es
pop
pop
adc
shll
nop
mov
popa
pop
sbb
js
pop
scas
sti
lds
sbb
aas
in
jg
icebp
jg
rclb
es
notl
cmp
imul
addr16
inc
cmp
aam
arpl
push
jg
fistpll
fistpll
addr16
mov
jnp
ret
movq
xchg
jb
loope
mov
mov
push
int
xor
and
push
pop
push
mov
cld
cwtl
and
mov
mulb
cmp
xchg
aam
fldl
rol
xchg
jge
add
jne
xchg
int
mov
call
lret
aam
xchg
lret
scas
push
fwait
inc
mov
fdivs
add
sub
xlat
lret
ljmp
imul
adcb
mov
add
aam
add
js
sub
sbb
stc
and
sub
shll
mov
imul
out
adc
stos
dec
mov
xchg
sbb
inc
daa
xchg
cmpsb
fcoml
loop
xor
mov
pcmpeqd
sub
mov
ja
xchg
adc
wrmsr
or
sbb
mov
ret
enter
xchg
or
stc
aad
je
jb
push
mov
mov
pop
jg
outsl
mov
ret
inc
xor
dec
dec
mov
xchg
cltd
pop
pop
adc
mov
imul
loopne
inc
lret
pusha
pop
jbe
adc
or
mov
rclb
xchg
xchg
testl
insb
loop
dec
dec
mov
sub
movaps
cmpsb
or
sbb
in
enter
xchg
outsl
fnstenv
mov
add
out
sarb
popa
xchg
aad
jae
arpl
test
adc
int
stos
stos
xor
mov
nop
scas
mov
in
and
dec
and
mov
popf
ds
insb
lcall
cld
data16
leave
into
popa
cmp
push
jo
test
ss
gs
sub
push
sbb
cmp
aaa
nop
push
mov
repz
outsl
pop
push
movsl
iret
mov
add
das
sahf
mov
mov
cmp
inc
pop
jbe
ljmp
jb
aam
xchg
pop
push
mov
stos
cmpsb
dec
cltd
jle
repnz
lahf
jo
mov
sti
push
add
jmp
sub
pusha
add
dec
jecxz
and
sub
xor
arpl
ficoms
in
pop
or
lret
fimuls
in
lcall
mov
rcrl
adc
int3
dec
insl
shrl
push
cld
loop
or
aaa
xchg
sub
je
add
jmp
jle
xor
das
mov
push
mov
adc
dec
ret
mov
add
adc
add
xor
lahf
je
fisubs
test
int
scas
inc
idivb
inc
dec
stos
mov
xchg
lea
lcall
push
movl
loop
mov
test
jno
lea
mov
fsubs
and
fcmovnu
pop
mov
cmp
aaa
mov
mov
xor
pop
add
in
adc
dec
inc
call
pop
jmp
shr
add
subl
call
or
bound
aaa
sbb
mov
icebp
sub
xchg
inc
jb
or
adc
cmp
pop
sarb
mov
das
inc
mov
inc
pop
mov
and
stc
mov
sub
inc
dec
lea
adc
add
icebp
test
lret
or
iret
pop
enter
fmull
adcl
mov
ftst
stc
movsb
stos
inc
inc
int
imul
xchg
pop
sbb
mov
adc
cwtl
pop
cs
cmp
dec
lahf
sub
scas
shl
sbb
pop
jmp
in
cmp
pop
push
mov
xor
or
dec
icebp
jo
loop
push
jmp
movsl
push
rcrb
push
loop
dec
bound
sbbl
mov
jb
mov
imul
loop
mov
push
sub
adc
ljmp
xor
or
push
into
fisubrl
ret
mov
dec
js
daa
cmp
fists
jp
bound
or
lds
dec
fwait
dec
int
adc
sbb
cmp
call
sub
jb
shll
lret
jne
sahf
push
push
cltd
sahf
icebp
lcall
repz
sbb
insl
adc
pop
jbe
int3
jno
jp
lret
xchg
xchg
int3
jne
push
sbb
aam
cli
lods
outsb
pop
imul
xchg
dec
aad
filds
xor
xor
cli
out
je
xchg
mov
mov
mov
push
ficoml
push
dec
repz
mov
fldl
cld
and
arpl
scas
fwait
test
dec
arpl
mov
mov
popf
sti
daa
cmpsb
xchg
enter
sub
mov
mov
mov
gs
ffree
and
loop
mov
out
jmp
sahf
mov
inc
xor
or
mov
ljmp
push
push
cmc
fistps
enter
adc
pop
fwait
mov
insb
or
mov
and
pop
out
clc
add
push
arpl
test
enter
sti
pop
hlt
mov
lahf
pop
data16
xchg
ds
lods
ja,pt
push
jb
jl
sbb
adc
cli
jecxz
ja
mov
enter
push
mov
mov
cld
sub
and
mov
loopne
sub
mov
xlat
adc
imul
icebp
nop
enter
and
xor
mov
rcrb
mov
adc
pop
aaa
and
or
and
aam
push
into
cmp
pusha
jl
cmc
jb
imul
shll
nop
push
ret
stc
ljmp
dec
add
cwtl
inc
sbb
adc
fdivrs
into
jp
in
jne
imul
mov
xchg
mov
fistpl
sbb
cmpsb
add
sbb
iret
push
push
pop
xor
inc
mov
mov
dec
fimuls
fidivrl
xor
and
cmp
cmp
mov
sbb
clc
leave
mov
pushf
cli
xorl
ljmp
push
mov
and
mov
push
lcall
out
cmp
add
pushf
xchg
inc
mov
stos
mov
or
rclb
neg
rcrb
sub
xor
push
scas
inc
lods
repnz
popl
insl
add
sub
pop
add
sub
push
dec
stos
cltd
addr16
inc
pop
jbe
push
inc
movsl
push
insb
lahf
les
push
mov
jle
or
mov
push
cmpsb
sub
sub
inc
repz
fldl
sub
inc
iret
mov
nop
lahf
jns
jo
inc
push
or
mov
test
cld
es
cwtl
mov
nop
mov
and
pop
add
ss
pop
test
pop
mov
std
stc
and
je
notl
add
repnz
xor
jg
lea
in
mov
mov
fcompl
jb
adc
les
aaa
add
lea
push
dec
fcmovbe
mov
js
pop
inc
dec
mov
cmp
xchg
out
cmp
repnz
pop
fiadds
mov
push
sub
cmc
jne
aas
mov
mov
shlb
jle
xchg
rorl
outsb
imul
pop
mov
inc
mov
mov
imul
mov
inc
loopne
sbb
inc
push
stos
pop
jns
xchg
mov
dec
test
inc
pop
xor
popa
or
data16
sbb
push
cwtl
popa
dec
mov
loope
stos
rcrb
pop
cmp
cmp
xor
loope
push
sub
sub
cs
scas
sbb
rcrb
divl
in
add
jns
jge
das
cmp
or
push
lods
push
xor
push
imul
push
mov
jnp
mov
imul
dec
sbb
mov
out
fisubs
fldenv
xchg
pop
jp
sbb
push
dec
xchg
lret
lds
cmp
in
pop
or
lcall
repnz
arpl
jb
xchg
mov
int
inc
adc
out
cmp
rol
jns
xchg
ss
ret
sub
iret
jle
sbb
sbb
xchg
mov
ljmp
jmp
repz
icebp
dec
mov
xor
notb
scas
pop
out
test
sbb
inc
fimull
push
xchg
pop
test
inc
xchg
rcll
repz
xorl
cld
jge
test
insb
rcll
imul
cwtl
push
and
jae
pop
push
imulb
nop
and
icebp
ja
adc
inc
jmp
adc
cli
mov
in
pushf
adc
cmp
in
mov
nop
mov
dec
or
lahf
inc
les
add
call
daa
sahf
lock
movsl
imul
subb
iret
hlt
fldl
xor
jmp
add
fistpll
sbb
pop
std
lock
das
xor
cltd
sbbb
dec
push
add
int
les
and
push
mov
push
mov
lret
mov
in
stos
cmp
or
lock
add
mov
cmp
ja
repnz
leave
icebp
imul
mov
stc
call
mov
adcb
nop
mov
or
loopne
mov
mov
cli
jp
imul
xchg
pop
mov
push
sbb
sahf
inc
loope
xlat
sti
adc
scas
pusha
mov
mov
mov
jnp
push
pop
inc
repnz
pop
out
cmp
xchg
jno
xchg
test
test
cmp
in
cs
adc
xchg
insb
vcvtsd2si
inc
sahf
frstor
xchg
or
dec
sub
push
jno
mov
add
mov
mov
push
stc
pop
popa
pop
jge
pop
lcall
jb
test
sub
fldt
pop
clc
dec
push
dec
sbb
popa
jp
sbb
jge
mov
dec
shlb
dec
adc
add
mov
push
stos
addr16
arpl
shrb
lods
fdivrs
and
fldenv
push
or
sub
icebp
gs
fs
mov
sbb
lahf
out
lods
jge
movsl
repnz
mov
addl
sahf
add
imul
sbbl
int3
gs
test
mov
lret
cmpsb
jne,pn
out
inc
leave
fists
mov
add
push
rorb
add
not
sbbl
jmp
out
pop
add
jae
mov
test
pop
pop
adc
xchg
fdivr
push
int
mov
out
enter
sub
and
jp
iret
push
cmp
pushf
mov
push
imul
arpl
lcallw
jl
and
movsl
or
dec
in
add
mov
xor
fdivrl
in
loop
int3
in
popf
pop
dec
cmpsl
cmp
mov
lahf
ljmp
inc
jb
mov
sub
push
pop
das
jl
cmp
xchg
lea
mov
lret
xor
jmp
adc
pop
pop
ss
inc
and
sbb
mov
mov
pop
jg
mov
xchg
jg
int3
dec
sub
int
repz
sbb
cs
mov
sub
push
add
std
push
dec
mov
inc
sti
movsl
xor
das
imulb
xchg
mov
mov
ret
jp
lahf
daa
mov
push
jl
sub
test
scas
enter
adc
movsl
je
jne
add
fdivrl
or
sbb
dec
or
outsb
fsub
stc
mov
movsb
add
bound
rol
ds
jle
pushl
push
loope
pop
push
inc
ret
sbb
sub
cmpsb
push
ret
mov
in
add
adc
repnz
js
adc
inc
inc
sub
popf
and
dec
and
xlat
cmp
push
pushf
jge
enter
lret
daa
and
hlt
cmp
sbb
xchg
test
add
sbb
xor
arpl
pop
add
cmpsl
xor
rclb
inc
pop
cmpsb
faddl
mov
and
scas
loop
or
mov
dec
sub
or
jae
dec
loop
or
add
cmpsl
add
push
icebp
pop
push
das
inc
or
and
test
xchg
jne
xchg
imulb
inc
pop
movsl
pop
and
enter
test
adc
inc
xor
adc
xor
stc
inc
dec
inc
inc
adc
mov
jl
cmp
enter
scas
in
fisubl
and
sbb
inc
rcrl
sbb
add
enter
push
mov
sub
push
jb
and
addr16
shlb
jmp
jmp
sbb
xchg
popa
xchg
mov
push
mov
rcrb
cltd
xchg
notb
inc
outsb
xor
test
mov
sub
movsb
and
and
int
cmp
push
jecxz
inc
add
test
insl
push
in
lock
out
aad
cmp
movsl
sub
push
cwtl
pop
dec
cmp
inc
fdivrs
lock
mov
flds
ret
adc
jo
dec
cmp
mov
dec
adc
ljmp
fwait
jne
fwait
push
out
enter
sarl
in
adc
stos
lock
pop
lret
adc
cli
out
add
int
sahf
mov
shrl
aam
mov
push
cmp
push
fisttpll
ficomps
xor
dec
cs
rclb
cmp
add
pop
fcompl
push
int3
jo
in
push
jle
inc
sbb
dec
neg
shrb
inc
cmc
xor
popa
xchg
add
ret
mov
push
test
aas
cmpsb
arpl
xor
nop
and
xlat
scas
movsb
lcall
push
inc
adc
sbb
loopne
leave
pop
mov
sbb
mov
jnp
fldenv
jg
sarb
test
mov
and
dec
jns
jp
ja
in
arpl
xchg
pop
add
out
lea
mov
lds
gs
mov
xor
lret
inc
mov
dec
test
mov
orb
inc
push
push
xchg
out
fisubl
add
push
mov
jecxz
add
dec
cmp
pop
insl
jo
pop
mov
fnsave
cld
negb
xor
in
lods
imul
or
dec
fnstenv
xor
fiadds
icebp
test
lea
sbb
xlat
stos
gs
mov
or
mov
pop
push
xchg
into
leave
scas
stos
loopne
icebp
mov
loopne
or
xchg
arpl
push
xchg
xchg
add
sbb
xor
fistpll
cmp
dec
xchg
addl
cld
jecxz
addr16
dec
fwait
loope
pop
and
push
inc
cltd
sbb
test
add
leave
xchg
mov
xchg
std
scas
fs
pop
xchg
lcall
push
and
dec
cltd
cs
lret
xchg
dec
push
and
xor
add
idivl
xor
mov
aaa
in
mov
fdivp
stos
jg
rcll
insb
pop
fs
gs
mov
dec
test
dec
mov
adc
jne
xor
fcomi
xor
arpl
inc
jne
js
test
insb
idivl
stos
push
scas
enter
jg
mov
inc
adc
hsubpd
pop
xor
ds
wrmsr
and
mov
jbe
out
xor
jnp
jne
dec
cli
out
sbb
pop
cmpsl
sbb
push
sbb
sbb
fnsave
sar
fistpl
sbb
dec
inc
stos
mov
cs
dec
outsb
into
rcrl
outsl
push
or
fstpt
test
inc
jno
sub
out
int3
push
bound
sub
adc
dec
xchg
xchg
push
notl
mov
lret
mov
fbld
xchg
pop
iret
and
mov
push
mov
ss
mov
dec
jp
negb
cmpsb
sbb
mov
loop
xor
arpl
xorl
shrl
mov
lds
pop
aas
xlat
ljmp
int
fildll
insl
fidivrs
insb
popf
adc
lahf
cld
popa
cmpsb
sub
into
jg
push
pop
adc
cwtl
pop
mov
aaa
sbb
out
imul
mov
sbbb
sbb
out
in
fs
and
push
xor
mov
mov
xor
sbb
mov
cmc
mov
ja
aaa
adc
popa
cmpsl
add
jno
ljmp
sub
aas
mov
hlt
inc
mov
mov
fsubrl
sub
iret
je
jle
jge
repz
xchg
addr16
or
out
scas
xor
cmpsb
inc
xchg
stc
out
test
mulb
sub
enter
stos
and
pop
jnp
mov
push
mov
xor
popa
ss
mov
fisubrl
and
lea
cltd
in
sub
sub
out
jle
jae
in
add
scas
es
popf
pop
jp
mov
pop
out
rcl
test
sub
sub
pop
mov
roll
cmpsb
out
shll
xor
sbb
fcoms
aad
pop
mov
pop
add
ss
mov
rorb
or
mov
jg
aam
fs
adc
stos
dec
pop
pop
daa
mov
shlb
popf
sbb
mov
cmovge
dec
popa
cmp
scas
mov
mov
jp
ja
cli
inc
pop
xchg
sub
inc
adc
dec
test
push
push
pushf
dec
pop
cld
ljmp
call
fs
outsb
adc
sub
pop
cmc
add
lahf
jmp
fcmovnb
or
pop
cmp
out
es
sub
ljmp
pop
lahf
fdivs
inc
and
popw
jne
mov
inc
shl
jp
lock
xchg
in
lea
jp
add
sub
sub
ds
in
inc
out
xchg
mov
mov
push
add
cmc
arpl
pop
repz
jo
outsb
mov
popf
popa
jno
jne
cmpl
xor
hlt
shll
adc
push
ss
je
les
sar
rolb
loopne
or
shr
aam
xor
repz
cmp
sbb
pop
xor
dec
mov
addr16
stc
push
fimuls
adc
adc
xor
fwait
daa
dec
stc
push
push
insb
pop
outsl
clc
int
mov
push
pushl
sub
fnsave
push
out
insl
or
pusha
arpl
cmp
mov
adc
xchg
jo
sbb
dec
aad
push
loop
pop
sub
scas
pop
andb
pop
mul
cwtl
cmc
bound
mov
das
lods
xchg
in
imul
sub
mov
imul
xchg
and
sbb
ret
adc
mov
outsl
inc
push
inc
cmpsl
dec
hlt
popf
out
and
outsb
daa
pop
cmp
nop
or
pop
nop
mov
scas
scas
lds
pop
loopne
rol
pusha
movsb
fwait
or
jecxz
push
cwtl
lret
movsb
sub
sbb
jmp
hlt
in
adcl
push
cwtl
incl
dec
xchg
cmp
xchg
arpl
mov
adc
fisubrl
and
xchg
push
lea
cmp
jbe
test
negl
idivl
cmpsl
roll
stos
or
loopne
add
push
sahf
jbe
scas
fwait
popf
repnz
add
xchg
enter
cmp
xor
mov
mov
cmp
xlat
test
push
xchg
rclb
outsb
inc
cmpsb
mov
fcoms
outsb
popa
mov
xchg
pop
popf
inc
clc
stos
dec
pop
jl
xor
sub
dec
dec
xchg
sub
clc
xchg
mov
mov
pop
and
jg
or
lods
lahf
and
jnp
push
xchg
add
add
pusha
cmp
outsb
and
cli
mov
add
push
gs
mov
xlat
add
cmp
rcll
cwtl
cli
cmp
add
pushf
mov
rclb
scas
mov
dec
jle
negb
xchg
sahf
out
or
je
mov
inc
xchg
or
jecxz
data16
push
incb
xchg
mov
xchg
or
mov
pop
cmp
inc
aaa
mov
mov
test
rol
cmpsb
mov
mov
in
cmp
ljmp
inc
mov
in
mov
xor
add
sub
add
roll
xchg
fiadds
fidivs
ret
pop
jno
aaa
cmpsb
fisubs
icebp
scas
xchg
mov
mov
test
sbb
pop
int
fnstsw
lods
sub
stc
insl
jmp
pop
mov
or
imul
cmp
or
leave
dec
leave
pop
mov
or
imul
cmp
cmp
push
dec
loope
mov
or
xchg
push
repz
stos
dec
and
mulb
inc
ret
addr16
jl
xchg
int
iret
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
xchg
and
lret
add
add
add
filds
lret
add
add
add
add
add
add
add
and
pop
add
enter
add
add
add
add
push
lret
add
push
add
and
pop
add
add
add
leave
add
add
add
dec
add
ret
add
add
add
pop
imul
add
add
dec
add
add
mov
sub
add
jb
cmp
jecxz
loopne
lret
add
add
daa
add
add
stos
add
add
push
add
add
add
add
or
add
add
add
add
add
add
xlat
add
lods
add
inc
add
xor
sub
test
add
add
add
add
add
inc
add
add
add
nop
add
sub
jae
and
sub
sub
push
add
add
add
add
add
add
addb
lret
add
xor
add
cwtl
add
add
add
add
add
ret
add
bound
outsb
pop
int3
add
push
add
mov
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
sbb
and
lock
add
jns
cmp
xor
add
add
add
movb
add
add
push
dec
add
add
add
xchg
add
lods
add
add
or
xchg
add
add
add
mov
add
push
add
add
bound
daa
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
repz
add
add
movsb
add
add
aaa
add
add
mov
add
add
add
add
addl
add
add
xchg
add
add
add
testb
add
add
or
mov
jl
loopne
inc
add
inc
add
add
add
add
xor
mov
add
dec
add
inc
add
cmp
add
xor
pop
add
add
add
add
add
add
add
add
add
add
repz
add
leave
add
add
add
add
add
and
insb
add
add
add
add
mov
add
in
roll
jbe
push
add
push
add
sub
sbb
rolb
nop
add
add
add
xor
ljmp
add
add
add
add
add
add
add
add
add
add
add
add
xor
xor
add
js
mov
add
add
push
movsb
add
add
add
add
insb
add
add
add
xor
xor
add
push
add
add
lods
lret
sub
fldl
mov
xchg
hlt
insl
orl
aad
popf
sbb
lock
add
mov
aaa
and
cmpsl
rolb
sub
scas
sub
or
push
call
xchg
xor
arpl
mov
adc
arpl
rclb
or
mov
cmp
inc
aas
cmp
hlt
and
adc
outsb
jg
cmp
les
enter
pop
inc
jmp
mov
sahf
add
sub
les
pop
dec
xchg
fwait
sahf
jmp
dec
imul
popf
and
xor
inc
sub
addl
mov
ljmp
test
xor
call
stos
push
and
mov
adc
movsl
lcall
iret
fstps
rcll
ss
fdivrp
jl
add
inc
dec
xor
adc
jb
cld
cli
push
outsb
ss
sub
mov
inc
adc
or
stos
orl
or
in
pop
sub
inc
sahf
mov
sub
sub
jg
push
mov
jecxz
cmp
add
je
test
stc
test
jge
adc
inc
popa
int
insb
scas
adc
lds
das
adc
push
daa
inc
imul
push
jo
popf
sub
sbb
jbe
jbe
cmp
jb
mov
hlt
ljmp
dec
aam
sbbl
repnz
ss
loop
mov
mov
es
lds
xor
cmp
cmc
roll
cli
fwait
and
xchg
and
sub
add
xorb
idivl
sbb
pop
int3
adc
aad
scas
movsl
push
cmpsl
test
in
adc
sbb
stos
shrb
pop
dec
xor
fwait
dec
xor
cmpsb
ss
adc
test
bound
jecxz
xchg
xchg
in
out
outsl
mov
fdivs
pop
aad
pop
shrb
sub
mov
dec
pavgb
lea
test
push
pusha
mov
sub
mov
push
dec
push
iret
cmp
sahf
adc
popf
mov
fcomps
mov
add
pusha
pusha
enter
mov
std
test
mov
xchg
cmp
mov
icebp
dec
mov
into
cwtl
ret
mov
jno
dec
femms
xchg
lret
xchg
adc
in
jmp
popf
cmp
js
ds
cmp
sbb
xchg
int
fcoms
add
int
ret
lcall
sti
push
lds
xchg
xor
imul
loopne
adcb
inc
int3
inc
mov
inc
cli
rcl
push
lock
jae
stc
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xor
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
dec
clc
add
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
or
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
clc
add
jl
add
nop
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
or
add
sub
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
movsb
stc
add
lods
stc
add
mov
add
mov
stc
add
int3
stc
add
aam
add
out
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
add
add
or
add
sbb
add
sub
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
