xor
inc
ret
push
push
call
xor
push
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
mov
push
call
pop
orl
orl
call
mov
mov
call
mov
mov
mov
mov
mov
call
call
cmp
jne
push
call
pop
call
push
push
call
push
call
mov
mov
lea
push
pushl
lea
push
lea
push
lea
push
call
add
mov
cmp
jge
push
call
pop
push
push
call
call
mov
mov
pushl
pushl
pushl
call
add
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
call
ret
jmp
jmp
cmpl
jne
jmp
push
push
pushl
call
add
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
jmp
push
push
call
pop
pop
ret
xor
ret
int3
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
mov
lea
push
mov
call
add
mov
mov
addl
ret
jmp
jmp
add
ret
ret
push
xor
pop
ret
push
addl
pop
ret
add
popl
push
push
xchg
add
pop
push
xchg
push
xchg
add
push
xchg
add
xor
push
xor
pop
push
popl
pushl
ret
jmp
ret
ret
push
push
push
push
push
push
push
push
push
push
push
push
call
add
pop
pop
pop
pop
pop
pop
pop
ret
pop
push
xchg
ret
pop
push
xchg
ret
xchg
popl
push
ret
push
pop
pop
push
xchg
mul
push
pop
push
pop
add
ret
push
pop
ret
mov
ret
push
addl
pop
ret
pop
push
xchg
ret
add
push
mov
push
push
push
xor
push
mov
xchg
mov
push
push
call
push
push
push
push
call
call
push
push
call
call
push
push
push
push
call
push
call
push
push
push
push
call
push
push
call
pushl
pop
push
push
call
push
push
push
push
call
push
push
push
push
call
push
push
push
push
call
push
call
push
cmp
jae
ret
add
call
add
cld
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
mov
push
xorl
cmc
icebp
pop
aad
sub
push
fwait
fwait
pop
enter
inc
sbb
stc
push
xor
imul
sub
shrl
in
xchg
nop
outsl
testb
out
dec
fcompl
fistpl
or
outsb
adc
test
jnp
pop
cltd
lret
popa
fwait
xchg
jne
cmpsb
aaa
jl
pop
dec
imul
jecxz
clc
and
mov
ljmp
sahf
push
or
pslld
cmp
push
jecxz
mov
mov
adc
imul
rol
add
sti
add
loopne
xchg
push
inc
test
sbb
xchg
in
or
push
cmp
insl
cmp
test
shrb
out
xor
add
lahf
aaa
stos
leave
push
loop
push
std
nop
cltd
lahf
push
movsl
push
cmpsb
mov
sub
xchg
adc
jle
xchg
clc
lock
imul
lret
mov
fs
hlt
stc
dec
mov
add
lods
shl
mov
pop
fdivrs
outsb
jb
scas
rol
or
pusha
mov
stc
lds
mov
and
pusha
hlt
sti
gs
cli
scas
shlb
cmp
ret
and
inc
jmp
add
inc
mov
dec
popf
aad
sar
jns
inc
mov
jbe
push
dec
loop
es
jecxz
xor
xchg
sti
add
lock
push
and
adc
cmp
add
adc
xor
pusha
rcr
sbb
pop
sarb
cmc
sub
or
data16
sbb
xchg
fimull
jge
xor
lods
andb
mov
fs
xor
push
sub
xchg
xor
inc
xchg
nop
add
addl
mov
outsb
sub
ret
lock
push
ljmp
fnsave
cmp
cwtl
or
sti
jl
xchg
jne
stc
pop
inc
push
and
lock
aaa
jb
addr16
xlat
mov
out
cmp
fxam
arpl
pop
repnz
push
stos
lods
jge
flds
sti
sub
movsl
cmpsl
inc
push
aaa
cs
inc
cwtl
add
dec
jecxz
inc
add
mov
pop
cmp
xchg
aam
ror
or
adc
incl
cmp
xor
rolb
pusha
pop
out
dec
xor
xchg
xchg
mov
shl
mov
or
pop
inc
push
test
pop
notl
or
xor
add
inc
mov
stc
jno
cmp
shrb
mov
and
mov
dec
out
xchg
cmp
stos
xor
cmp
shll
lahf
xor
scas
xchg
sbb
pop
in
scas
mov
dec
aam
imul
paddusw
or
outsb
pushf
mov
loop
jnp
sti
cs
pop
cwtl
out
in
jle
movsl
or
inc
pusha
xchg
mov
fisubs
mov
push
loop
lahf
push
cmp
jne
cltd
or
sub
pop
imul
enter
mov
out
mov
iret
xor
xchg
fwait
push
sarb
ja
shlb
ds
mov
push
xchg
nop
testl
pusha
pop
outsl
inc
and
inc
jnp
icebp
mov
or
shrl
outsb
enter
xchg
insb
cwtl
fidivs
and
or
jb
sub
push
xor
sub
sbb
cmp
sub
stc
mov
addr16
or
and
or
ret
into
xlat
rol
cmpsb
ret
int
hlt
cmc
inc
imul
mov
xchg
mov
pop
es
cld
and
cwtl
lret
cwtl
in
mov
mov
movsb
jl
clc
lcall
pop
idivb
das
cmp
dec
in
add
loop
inc
aam
adc
ret
mov
dec
jmp
cmp
shl
add
pop
jo
inc
xchg
sahf
inc
in
mov
stc
push
push
daa
ss
test
dec
mov
dec
dec
cmpsb
adc
aaa
shlb
ljmp
pop
mov
lods
je
inc
ror
in
and
cli
aam
repnz
add
cmp
push
das
popa
mov
mov
popa
int
stc
jnp
aad
pop
xchg
push
aam
cmp
out
sub
sub
cmp
sub
jae
imul
rcpps
xchg
shll
inc
in
outsl
xchg
jno
outsl
push
rcll
mov
iret
mov
inc
insl
lret
fldl
cs
fidivl
add
shr
pop
ja
subb
cs
inc
fdivl
addr16
std
arpl
cmpsb
mov
cmp
inc
rorl
fsubrs
scas
mov
cltd
rol
sub
jne
inc
lds
insb
fdivrl
in
mov
lods
or
mov
cld
xchg
enter
lret
xorl
jbe
cli
xchg
daa
adc
inc
adc
mov
ss
push
sub
lret
adc
or
bound
sahf
mov
sub
adc
es
mov
mov
dec
aas
adc
cltd
jg
inc
mov
movsl
jbe
cli
lods
bound
jb
xor
cmc
dec
dec
jl
cmp
xchg
inc
xchg
fsubs
aad
outsb
mov
sarl
fiadds
sub
xor
outsl
push
mov
leave
out
insl
cmp
jecxz
imulb
add
pop
sub
xchg
nop
mov
xchg
mov
cli
adc
push
mov
icebp
mov
sub
jecxz
add
sahf
inc
xchg
pop
push
or
cmp
cwtl
inc
mov
stc
fnstenv
popa
js
pop
popf
cmpsb
jmp
loopne
pop
out
scas
nop
mov
cld
and
or
mov
mov
stos
cltd
cmpsl
sti
or
andl
push
pop
outsb
and
stos
or
and
add
arpl
or
mov
inc
imul
fists
jne
or
xchg
xor
inc
lret
sub
xchg
jmp
es
mov
fcmovne
jo
rorb
fimuls
sbb
pop
mov
sub
ss
inc
in
rolb
pop
jle
mov
jno
aam
mov
jnp
stc
std
inc
pop
in
fcoml
int
sbb
sbb
mov
je
imul
sbb
mov
sub
es
sbbl
shll
xor
lret
lahf
ljmp
mov
cmp
in
stos
leave
inc
imul
sub
dec
out
in
das
gs
pushf
out
lahf
mov
pop
inc
std
jecxz
and
pusha
stc
rolb
je
sbb
subl
int3
push
sarb
lods
repnz
mov
je
jle
cld
mov
bound
or
repz
call
pop
ss
pop
out
gs
adc
int3
push
sbb
xor
clc
and
mov
push
cmpsl
inc
sete
int3
nop
mov
jne
jnp
push
sti
iret
xor
inc
sbb
adc
pop
lods
std
fstps
mov
cmpsb
movsl
push
std
mov
push
repnz
dec
dec
jno
jmp
ret
shl
jbe
ret
lods
cmp
and
mov
or
lods
sbb
mov
pop
mov
out
shlb
sbb
adc
cld
into
pop
dec
inc
mov
dec
mov
jmp
mov
jns
sti
jne
outsb
pusha
movsb
in
cmpsb
arpl
popa
cltd
aas
setg
std
pop
gs
xchg
inc
mov
push
lret
xchg
lods
mov
jmp
xchg
mov
ret
cmp
rorl
gs
inc
in
jb
add
and
cmc
test
adc
sarl
lea
mov
or
or
fnstsw
dec
pop
call
call
pop
mov
jge
jmp
outsl
test
jmp
inc
out
and
inc
fiaddl
and
cmpsb
scas
aas
lods
faddl
cmp
pop
mov
mov
test
aam
mov
mov
pop
in
lods
jge
pop
cmp
sbb
pop
mov
jne
into
mov
mov
xchg
in
hlt
inc
test
out
loop
push
pop
xorb
loope
mov
push
sbb
mov
push
out
xchg
jns
mov
fldt
mov
inc
add
insb
and
xchg
enter
cltd
shlb
or
outsb
sbb
roll
mov
sbb
fxtract
xor
add
int3
adc
push
cmp
and
pop
cli
pusha
adc
add
pop
add
jge
scas
inc
shlb
adc
xor
pop
rsm
das
fisubl
mov
out
mov
dec
mov
jg
push
stos
out
popf
push
cltd
jmp
push
decb
jo,pn
lahf
sub
jmp
xor
movsl
test
mull
roll
imul
pop
clc
imul
cmp
ret
dec
lds
in
fadd
or
daa
jmp
xchg
jecxz
lea
sbb
mov
sahf
pop
xchg
stos
arpl
pusha
xor
and
mov
aaa
pop
jg
jecxz
ficoms
incb
mov
inc
adc
loop
adcl
inc
lock
hlt
icebp
add
push
mov
in
dec
cmp
xchg
pop
or
pop
push
xor
test
lcall
stos
mov
sbb
in
or
or
pusha
jne
sbbl
pop
dec
mov
inc
pop
movsl
push
jle
xor
test
mov
jb
mov
push
cwtl
mull
jno
enter
es
push
lock
fists
test
imul
adc
fimull
sahf
or
fistl
mov
add
fsubrs
xchg
mov
loope
ljmp
pop
int
out
sbb
cmp
xor
movb
clc
out
or
scas
mov
shrl
fsubs
pop
mov
in
push
sbb
pushf
mov
mov
mov
jns
bnd
nop
bound
sub
sbb
hlt
adc
sti
lods
mov
loope
xlat
imul
sub
xor
dec
sub
test
xchg
dec
rorb
shll
xorl
push
in
imul
cli
andnps
sub
out
and
ljmp
mov
mov
rcl
and
int3
or
add
rolb
std
push
aaa
jo
mov
pushf
push
fildll
cs
rcl
cld
divb
xor
sub
cmp
pusha
outsl
add
fs
lods
inc
adc
adc
cmp
sub
sahf
dec
mov
xor
ret
xor
or
adcl
push
pop
dec
repnz
sub
mov
add
push
negl
fs
mov
pushl
fsubp
test
lods
mov
out
inc
jecxz
adc
pop
sbb
xor
lcall
stos
mov
hlt
sbb
jmp
push
scas
packsswb
enter
movsb
dec
add
stos
aad
xor
jnp
or
pusha
int
pop
test
test
xor
mov
push
push
jb
int
shlb
fiaddl
out
testl
sbb
xor
sub
mov
fnstenv
jp
lret
ja
cmpsb
push
xchg
sub
sbb
jae
cmp
imul
fdivrl
cld
into
stc
clc
dec
nop
frstor
or
enter
adc
lock
mov
cmc
jg
loope
in
ficompl
or
mov
shl
cmp
cltd
loopne
mov
jno
xlat
xor
sub
sbb
sub
nop
mov
push
lock
inc
jg
lods
popa
sbb
mov
adcb
pop
cmp
fsub
stc
fs
lods
push
push
xor
aam
iret
mov
aaa
dec
push
jge
mov
sahf
cs
sub
dec
je
repz
lahf
arpl
sub
push
sahf
push
dec
cmpsl
push
lea
adc
cli
and
scas
lcall
and
ljmp
test
sar
rol
int3
in
jecxz
loop
mov
lods
sahf
call
and
jae
in
mov
adc
enter
ja
jno
pop
sbb
cmpsb
sarb
or
gs
inc
add
lods
push
push
stos
xchg
cmpsb
sbb
hlt
add
jg
inc
repz
movsl
cltd
bound
scas
inc
in
or
gs
test
jecxz
fs
push
sbb
mov
push
je
push
repnz
sub
jle
les
push
mov
loopne
inc
icebp
jns
movsl
mov
pop
fmull
outsl
xchg
jge
push
and
mov
sbbl
loopne
jns
in
sub
adc
cmp
ja
lea
push
sti
ljmp
pop
jns
dec
mov
ds
xchg
out
fisubl
imul
hlt
fmull
and
loopne
out
add
out
mov
mov
ljmp
lock
or
cmp
push
xor
mov
xor
arpl
cmpsb
xchg
adc
out
lea
push
shrb
ja
aas
fs
xchg
loopne
sbbb
mov
adc
mov
cmc
imul
test
enter
adc
faddl
and
pop
xchg
lods
add
out
mov
pop
sub
addr16
jno
pop
mov
mov
mov
pop
ret
shlb
jbe
adc
ja
int3
push
xor
sbb
mov
je
js
movsb
cld
shlb
fwait
add
inc
xor
mov
adcb
movsl
aas
out
call
fs
pusha
push
xchg
idivb
mov
mov
mov
and
and
push
ja
std
sar
sub
mov
loopne
inc
xchg
ficoml
and
dec
jns
adc
mov
inc
out
mov
arpl
es
xchg
cwtl
test
xor
add
in
sbb
xlat
pop
mov
xchg
push
ret
xlat
fcomps
cmc
mov
lock
mov
sub
lods
stos
scas
cli
aas
lahf
daa
out
xchg
int
leave
adc
roll
xchg
xchg
mov
mov
sub
das
dec
insb
add
lock
nop
mov
iret
mov
and
and
mov
aad
jge
sub
loop
in
cmpsb
idiv
adc
jecxz
mov
fidivrs
mov
std
mov
addr16
or
out
data16
xor
mov
push
mov
push
shlb
clc
iret
ds
out
lods
lahf
cmp
push
out
mov
in
and
rol
xchg
sub
jecxz
shld
jecxz
dec
adc
ret
out
cld
and
je
rcl
inc
call
sub
xrelease
rcll
shlb
fstpl
lahf
scas
push
stc
adc
ficoml
mov
pop
dec
insb
jmp
in
hlt
adc
mov
insl
jecxz
xchg
adc
inc
push
or
or
jge
dec
pop
mov
repz
adc
xor
out
loopne
aas
xor
and
shrb
sbb
in
aaa
and
mov
rol
jg
jecxz
into
mov
nop
inc
xchg
jns
add
xchg
inc
sbb
inc
sbb
dec
and
inc
sbb
inc
sbb
dec
and
inc
sbb
inc
sbb
dec
and
inc
sbb
inc
sbb
dec
and
inc
sbb
inc
sbb
dec
and
inc
sbb
inc
sbb
dec
and
inc
sbb
inc
sbb
dec
and
inc
sbb
inc
sbb
dec
and
inc
sbb
inc
sbb
dec
and
inc
sbb
inc
sbb
dec
and
inc
sbb
inc
sbb
dec
and
inc
sbb
inc
sbb
dec
and
inc
sbb
inc
sbb
dec
and
inc
sbb
inc
sbb
dec
and
inc
sbb
inc
sbb
dec
and
inc
sbb
inc
sbb
dec
and
inc
sbb
inc
sbb
dec
and
inc
sbb
inc
sbb
dec
and
inc
sbb
inc
sbb
dec
and
inc
sbb
inc
sbb
dec
and
inc
sbb
inc
sbb
dec
and
inc
sbb
inc
sbb
dec
and
inc
sbb
inc
sbb
dec
and
inc
sbb
inc
sbb
dec
and
inc
sbb
inc
sbb
dec
and
inc
sbb
inc
sbb
dec
and
inc
sbb
inc
sbb
dec
and
inc
sbb
inc
sbb
dec
and
inc
sbb
inc
sbb
dec
and
inc
sbb
inc
sbb
dec
and
inc
sbb
inc
sbb
dec
and
inc
sbb
inc
sbb
dec
and
inc
sbb
inc
sbb
bound
add
xchg
pop
shll
repnz
inc
insl
add
mov
sbb
sub
sbb
cli
mov
dec
popf
jmp
sbb
pop
mov
dec
jle
mov
les
les
dec
jae
jg
and
fsubr
sbb
cmp
push
andl
in
jne
mov
das
shlb
inc
std
jo
enter
mov
xor
in
pop
sub
rorb
sub
int3
out
popf
roll
xchg
mov
cltd
in
push
insl
fists
add
pop
std
mov
loopne
and
push
dec
loop
and
mov
or
and
adc
dec
ljmp
addl
leave
or
add
test
addr16
sarb
inc
std
repnz
inc
mov
add
mov
inc
gs
rcr
rcrb
or
gs
lds
mov
jne
push
push
dec
push
scas
sub
fld
cmp
adc
jo
xchg
int3
push
push
jle
pop
inc
in
jns
jle
adc
cs
inc
lods
xchg
and
push
dec
and
pop
sti
outsl
pusha
jle
adc
cmp
jno
cld
or
fcoml
adcl
pop
sub
adc
subl
adc
push
jle
out
push
add
scas
lret
cmp
inc
xor
lcall
daa
cmpsl
cmp
movsl
xor
in
xchg
xchg
int
mov
mov
cmpsb
loopne
xor
rcrl
and
cmp
pop
cpuid
push
shlb
outsb
mov
push
lods
call
xchg
iret
or
sbb
jge
fnop
mov
aam
js
jp
pop
icebp
adc
lods
test
and
xor
mov
add
cmp
xorl
adc
loope
and
add
mov
sbb
mov
std
jne
and
xor
lods
iret
into
stc
lds
jae,pn
in
int
scas
clc
icebp
pop
and
movsl
outsl
ret
mov
pop
adc
dec
bound
in
jmp
xchg
mov
loopne
scas
lock
jmp
ret
les
mov
int3
xchg
testb
xlat
push
xchg
dec
data16
add
xlat
dec
leave
shl
rcrb
sahf
insl
pop
aaa
stos
push
sahf
push
fadds
push
pop
sub
das
mov
jle
notl
cmp
dec
mov
fs
dec
xchg
push
mov
fisttps
leave
stos
cwtl
xor
mov
xor
ss
mov
cmpsb
xchg
push
push
jl
cmpb
arpl
xchg
jb
xor
stc
jle
movsl
out
sub
repz
or
aas
or
lock
fiaddl
fisubl
das
push
out
cltd
inc
mov
fdivl
add
and
orb
popf
rol
test
push
push
outsl
add
jae
mov
icebp
push
lret
and
fsubs
repnz
cmc
ja
and
mov
mov
or
mov
lahf
dec
add
jns
js
in
cmp
outsl
sbb
mov
outsl
mov
xor
js
outsb
fwait
inc
mov
inc
sahf
and
lds
adc
push
sbb
int3
jbe
fucomp
lret
sahf
icebp
ret
push
aas
icebp
paddsb
lods
sub
std
push
lea
push
call
mov
and
and
add
pop
inc
popf
push
fiadds
and
mov
xor
mov
hlt
push
call
les
cmpsl
mov
pop
sahf
push
and
adc
xor
dec
lret
add
dec
popf
in
or
jae
push
inc
in
dec
or
jl
or
fstp
cmp
lods
jnp
adc
sub
std
lret
scas
cmpl
lea
pusha
dec
ljmp
xchg
pop
enter
adc
repnz
loopne
xor
cmp
in
stos
cld
jle
out
aad
daa
in
fnstenv
or
ret
mov
push
repz
lea
fiadds
cmp
or
insl
adc
arpl
push
add
inc
inc
repnz
or
cmpsb
push
jg
nop
or
insl
negl
nop
sbb
pushf
lds
in
gs
xchg
int3
mov
push
pop
and
dec
xchg
and
mov
pushf
popf
stc
xor
and
cmpsl
add
insl
xchg
mov
in
lea
fiadds
fs
jp
cltd
sub
incl
push
clc
std
js
rcll
ljmpw
or
mov
and
xlat
lods
and
ret
ds
das
dec
aaa
loop
sarl
or
push
sub
jl
bnd
adc
adc
push
gs
xchg
xchg
sti
push
stos
push
adc
sub
mov
xchg
jp
shll
xlat
adc
cli
sub
sbbb
enter
insl
xchg
pusha
rcrl
repz
inc
mull
cwtl
xor
sub
jns
ret
or
inc
jae
sub
xlat
cmp
out
mov
push
jne
sub
xchg
stos
mov
ds
cwtl
xor
sub
sub
out
cmpsb
test
adc
dec
cs
jno
push
lea
xchg
dec
pop
in
mov
inc
cmpsl
push
insl
inc
fisubrl
insl
mov
sahf
std
and
adc
sarl
mov
test
jmp
insl
cmp
ret
in
sbb
mov
push
adc
aas
xchg
jge
jns
in
mov
sahf
xor
popa
or
incb
jl
shll
lds
sbb
pop
loop
xorb
ljmp
fidivl
pop
andb
aam
loopne
shrb
or
cld
cmp
sub
dec
movsb
fnstsw
andb
subb
sbbb
imul
lods
jmp
imull
cmp
icebp
adc
and
out
into
xchg
cwtl
push
or
jecxz
outsb
imul
add
cld
fildl
je
jns
call
pop
mov
adc
adc
mov
mov
sbb
lods
inc
hlt
fisttps
push
pop
cmp
daa
sub
and
fdivrl
aad
dec
add
pop
sbb
cmp
pop
sub
or
sbb
mov
push
mov
test
das
lods
pop
rol
mov
imul
push
and
mov
ud2
or
add
out
mov
repz
pop
lods
sbb
or
loope
xchg
inc
jmp
push
bound
mov
aad
mov
adc
mov
gs
popa
movsb
movsb
fldt
scas
push
les
push
mov
popa
add
add
pop
js
stc
cmpl
ljmp
xor
and
cmc
dec
ja
jg
push
pop
dec
fucomi
push
sub
xor
mov
leave
pop
xor
xchg
popf
jne
sahf
lret
hlt
jo
fldl
pop
xchg
mov
dec
dec
mov
mov
adc
pop
xchg
push
cmpsb
enter
mov
push
or
faddl
pop
sub
int
test
pop
scas
xor
mov
jb
addr16
pop
mov
sbb
leave
daa
orl
lret
mov
in
xor
leave
das
xor
dec
or
mov
push
mov
je
inc
cmp
ret
cwtl
sub
shrb
arpl
jge
sbb
cmp
ret
fcmove
fistl
es
aad
fcomps
les
cmp
lret
outsb
push
gs
adc
xchg
repnz
test
inc
cmp
mov
cmp
fiadds
sbb
test
sbb
pop
mov
mov
mov
rorb
inc
in
mov
inc
movsb
add
lods
shlb
add
vpperm
cmp
into
mov
cld
sti
sub
cmp
dec
jle
pop
push
adc
ss
pusha
mov
sbb
sbb
xor
pusha
cld
sbb
jmp
or
or
aas
push
add
lahf
out
mov
xchg
repnz
shrb
dec
ja
dec
push
je
les
pop
and
xor
mov
jb
push
jmp
shl
push
movsb
mov
sti
fcompl
and
bound
shlb
and
dec
jecxz
push
cmp
sbb
imul
insl
push
aad
in
outsl
xor
daa
inc
call
and
call
inc
jg
iret
mov
shll
lret
dec
xchg
popf
mov
stc
stos
push
popa
push
jg
jle
jns
movl
mov
pop
and
out
or
daa
insl
xor
sarl
icebp
clc
in
sbb
jmp
ss
mov
into
ja
addl
and
inc
sbb
inc
sbb
dec
and
inc
sbb
inc
sbb
dec
and
inc
sbb
inc
sbb
dec
and
inc
sbb
inc
sbb
dec
and
inc
sbb
inc
sbb
dec
and
inc
sbb
inc
sbb
dec
and
inc
sbb
inc
sbb
dec
and
inc
sbb
inc
sbb
dec
and
inc
sbb
inc
sbb
dec
and
inc
sbb
inc
sbb
dec
and
inc
sbb
inc
sbb
dec
and
inc
sbb
inc
sbb
dec
and
inc
sbb
inc
sbb
dec
and
inc
sbb
inc
sbb
dec
and
inc
sbb
inc
sbb
dec
and
inc
sbb
inc
sbb
dec
and
inc
sbb
inc
sbb
dec
and
inc
sbb
inc
sbb
dec
and
inc
sbb
inc
sbb
dec
and
xchg
mov
cltd
or
cmp
and
push
jle
pushf
repz
ret
iret
jae
and
rcll
lcall
mov
inc
push
clc
fisubrl
push
shrb
mov
out
mov
pop
lock
sysret
push
cwtl
lret
mov
fstl
and
mov
in
pop
cwtl
pop
push
adc
js
or
push
xchg
lret
inc
add
sub
lret
cmp
push
cmpsb
push
sbb
stos
push
cmp
xor
idivl
xchg
push
mov
rcr
xchg
daa
mov
cs
push
and
ja
outsb
xor
inc
icebp
outsb
test
stos
jmp
out
es
and
shrl
push
pop
jmp
xchg
jns
insl
mov
lods
cld
scas
incl
aad
cmc
push
clc
and
adc
sbb
jne
pop
or
das
and
mov
or
lea
add
dec
imul
dec
jne
jmp
pusha
in
mov
sub
cmc
cltd
sub
dec
shlb
push
xchg
shrb
xor
js
mov
dec
daa
and
loope
imul
jb
mov
arpl
shlb
rol
mov
sbb
stos
xor
jle
cmc
xchg
fsts
sbb
iret
movsb
sbb
mov
adc
in
data16
outsl
call
in
filds
scas
pop
jne
cld
in
xor
mov
jp
ret
cmc
mov
pop
jmp
or
rcll
jne
inc
mov
push
jmp
fwait
add
xchg
xlat
xorb
repz
cltd
in
lods
movsb
fnstenv
popa
inc
and
push
jg
mov
enter
insl
mov
call
das
pop
sub
mov
icebp
pop
xchg
stos
nop
stos
enter
cld
inc
inc
in
loopne
insl
es
popa
testl
push
push
mov
mov
mov
push
ljmp
aam
or
mov
and
jle
lock
pop
and
dec
xor
mov
sarl
sti
stos
ret
shll
xchg
cmc
sti
sub
cmp
add
pop
sbb
sbbb
mov
aam
lds
mov
add
test
jmp
push
dec
out
push
push
push
enter
imul
outsl
inc
popl
cmpsb
fsubl
jo
iret
out
inc
xchg
pause
stos
mov
adc
mov
test
adc
fimull
sub
orl
cmc
dec
stc
fcomi
lcall
push
jp
dec
sbb
push
fs
push
xor
cmp
pop
inc
sub
pop
inc
aas
imul
xor
mov
adc
fdivrs
xchg
add
mov
mov
mov
ljmp
adc
lret
movsl
inc
push
mov
js
shll
cmp
scas
xor
and
shll
mov
data16
test
inc
push
loop
add
ljmp
jns
jns
sub
roll
sub
hlt
adc
mov
int3
jge
xchg
sbb
lret
enter
stos
or
fdivrs
jg
repz
jne
test
mov
es
in
cmp
mov
adc
loope
psrld
jae
dec
stos
fldcw
outsl
ds
test
push
mov
cmp
inc
dec
movsb
stc
test
cmp
xchg
les
cmpsb
push
cmp
cli
and
cli
div
int
xlat
mov
sbb
xlat
jp
repnz
inc
shlb
icebp
xor
add
inc
fdivs
jno
adc
inc
shlb
repnz
arpl
inc
imul
ja
mov
cmpsl
mov
clc
fwait
roll
and
ljmp
lods
mov
mov
ret
rcl
add
aad
push
mov
mov
fbld
test
and
out
xchg
jae
out
sub
aaa
fdivrl
push
jns
lock
fsubrp
repnz
shlb
les
call
dec
fildll
cmpsb
xchg
cmp
test
fbstp
push
call
adc
cmp
scas
jnp
rclb
xchg
es
pop
fmul
or
mov
dec
pop
jle
cli
test
mov
push
shr
push
pushf
lea
rcpps
scas
sbb
mov
add
pop
cmpsl
xchg
xchg
loope
jmp
das
test
addr16
mov
lcall
sub
mov
fs
insl
cmc
fs
xor
push
jbe
mov
gs
mov
sbb
lods
rcr
outsl
xchg
push
sbb
or
scas
iret
idivb
movsb
pop
hlt
cmp
xor
mov
shl
lcall
mov
push
in
jne
fildl
mov
dec
cld
fstpt
mov
sub
out
lahf
add
cs
or
add
jmp
outsb
mov
xchg
or
jnp,pt
push
xor
push
sub
jp
movsl
into
push
push
adc
pop
add
leave
je
mov
push
or
shl
arpl
add
push
ret
mov
inc
es
popa
shll
ljmp
xchg
popf
int
adc
lods
sub
cmp
mov
lods
cmp
popa
ljmp
jnp
lods
shll
cmp
adc
dec
aas
int3
dec
mov
mov
mov
fmuls
adc
cmp
test
cmp
lret
stc
lea
outsl
push
mov
pop
outsb
movsb
jb
rcrl
xchg
in
fdivs
mov
inc
jno
mov
and
xor
and
out
dec
or
out
xchg
jp
in
gs
cmp
jle
repz
xchg
cmp
movsl
jb
add
push
repnz
ret
and
mov
xchg
cli
out
repnz
or
mov
sub
or
add
movsb
pop
xchg
push
pop
test
inc
aam
pop
orb
insl
push
int
xor
adc
jno
out
test
dec
dec
dec
pop
ja
jle
or
xchg
out
iret
addr16
adc
jge
sbb
or
jmp
cltd
fs
lcall
push
adc
xchg
ror
aad
mov
lahf
inc
ja
cli
movsb
in
sbb
rorb
inc
push
cmp
into
dec
push
pop
jnp
ret
sbb
sub
iret
dec
add
xchg
les
dec
and
fcmove
mov
xchg
xrelease
add
fiaddl
inc
adc
fidivl
cltd
out
add
filds
lahf
test
jp
push
cli
es
lcall
mov
and
jmp
xchg
dec
or
jg
sbb
pop
cmp
icebp
sbb
test
outsb
mov
ret
mov
pushl
gs
data16
cwtl
mov
push
outsb
aas
roll
inc
push
lret
not
dec
pop
stos
or
out
ss
jbe
push
cmp
sarl
xor
add
cmp
rclb
xor
std
cli
out
push
push
xchg
pop
in
push
pop
mov
pop
imul
enter
mov
stos
push
push
cmc
scas
push
xor
push
jnp
fsubs
ljmp
jecxz
xor
int
les
pop
mov
add
sub
negb
ss
pop
aad
push
cli
es
lcall
xor
jmp
cmp
adc
mov
loopne
cmp
sbb
add
xchg
ficompl
or
loop
xchg
xor
ds
cwtl
dec
daa
inc
pusha
pop
cwtl
mov
data16
cwtl
mov
xor
testb
insb
enter
out
inc
stos
adc
adc
xchg
sbb
add
icebp
xchg
enter
aas
data16
or
adc
addl
pop
rclb
xor
mov
dec
jb
mov
add
lret
adc
test
adc
aad
cmpsl
xor
ds
add
jae
pop
testl
inc
scas
stos
or
jp
rcr
mov
cmp
jno
mov
xchg
in
jo
lods
test
add
or
xchg
dec
mov
std
push
push
push
int3
dec
in
dec
iret
cmpb
jnp
mov
push
jle
call
daa
stc
dec
pop
add
cmp
cli
adc
lods
add
fsubs
hlt
pop
mov
fbstp
lcall
dec
jg
stc
repz
loopnew
stos
sub
mov
jae
idivl
mov
stos
inc
push
or
push
fists
pop
data16
subl
inc
and
pop
insl
inc
or
outsl
xor
push
push
stos
inc
xor
dec
or
rcrl
fistl
or
int3
xor
test
out
or
popf
fisubrs
mov
cmp
rolb
orl
push
and
stos
in
mov
das
and
pop
mov
inc
ret
sbb
inc
enter
cmc
xor
aas
aam
add
stc
lods
pop
jno
loop
ss
adc
cmp
je
pusha
addr16
or
xor
mov
add
inc
jle
xor
lret
mov
insb
mov
hlt
xor
cld
popa
out
jecxz
sub
out
sbb
mov
int
cmp
loopne
cmp
rcll
lods
sahf
inc
cmp
fsubrs
pop
out
dec
jne
stos
push
mov
sub
push
adc
jo
add
inc
in
daa
movsb
std
push
mov
into
dec
jg
mov
rcrl
vmread
sti
hlt
loope
sbb
mov
and
xor
mov
jne
adc
fnstenv
movsb
push
pushf
mov
adc
js
xchg
mov
push
sbbl
popa
jns
cmpsl
lds
fildl
addr16
jbe
push
add
xchg
mov
mov
inc
subl
cmpb
roll
add
mov
orl
dec
mov
and
mov
ret
inc
mov
nop
xchg
mov
push
mov
xor
pushf
jne
in
les
adc
dec
repz
testb
aam
and
stos
and
pushl
std
and
inc
xchg
mov
sti
mov
pushf
adc
push
mov
fists
imul
pop
popf
dec
scas
std
cmp
jle
dec
xchg
cltd
xchg
jno
sbb
out
adc
ja
mov
ss
jecxz
out
dec
xchg
das
add
sbb
sar
dec
pop
cmp
jl
mov
and
fisttps
lods
roll
cmp
arpl
or
rcrl
sub
rcll
gs
push
lret
mov
lods
sub
pop
stc
inc
movsb
push
pushf
cs
xor
push
sub
movsl
shll
loop
cli
or
sbb
out
addr16
imul
mov
outsl
inc
pop
push
or
xchg
mov
cmp
rol
jns
sbb
push
xchg
iret
popf
sbb
inc
cmp
notb
js
and
loop
repz
xor
loopne
jge
shrl
les
sti
nop
rclb
adc
mov
iret
loop
pop
sub
mov
movsl
testb
adc
mov
addr16
cmp
push
xchg
shll
xchg
inc
sub
mov
lock
int3
xchg
shrl
sbb
je
imul
dec
adc
mov
cmpsl
inc
shll
dec
jecxz
jbe
aam
ret
pop
das
dec
mov
pop
orb
cwtl
and
add
sbb
mov
shrb
adc
inc
movsl
in
or
fsubl
inc
testb
xchg
outsl
push
scas
push
mov
aad
cmp
inc
and
cld
mov
insl
xchg
xchg
sbb
fildl
fmul
add
cmp
in
xchg
icebp
and
inc
inc
cmp
ret
lds
xor
adc
jle
dec
jae
pusha
test
push
in
sbb
ficomps
icebp
in
pop
xchg
xchg
cmp
jmp
mov
add
rorl
lahf
les
mov
jmp
mov
inc
pop
shll
dec
mov
pop
mov
cmp
stc
jecxz
mov
std
xor
mov
push
ljmp
xor
mov
adc
jl
pop
push
scas
push
sbb
add
pop
int
stos
iret
and
das
repz
sbb
lret
fisubs
bound
xor
pop
mov
das
or
jg
adc
adc
lea
dec
add
or
add
xchg
arpl
adc
fld
xor
sbb
mov
aas
pop
push
repz
mov
or
insb
cmpsl
push
sub
pop
jecxz
clc
xor
in
aam
divl
ss
jb
std
rcll
pop
insl
mov
push
add
shll
dec
fidivrl
insb
into
test
xchg
ss
cmp
es
jge
mov
fcoms
in
or
push
test
mov
addr16
pop
push
push
popa
insb
ror
arpl
aam
mov
icebp
inc
ja
sti
jl
push
and
lock
addb
pop
das
jmp
jge
push
or
sbb
mov
xchg
push
repnz
in
inc
sbb
mov
lods
data16
mov
popf
sbb
xchg
cltd
xchg
jae
sub
test
pop
or
sub
in
mov
fadds
and
sarb
lahf
cmp
fcompl
rcrb
pop
enter
cmp
xchg
daa
loop
mov
shll
pop
cli
dec
dec
sub
mull
and
xor
sbb
and
sub
dec
inc
jb
decb
mov
mov
stc
and
mov
shr
lock
xlat
jmp
push
xor
sub
orb
test
adc
dec
orb
mov
add
adcl
insl
popa
inc
and
adc
jmp
mov
repz
les
arpl
insl
sbb
enter
sub
lahf
out
pop
sub
dec
repz
cli
sbb
inc
les
scas
dec
lods
push
adc
leave
fcoml
xlat
xor
or
dec
jmp
mov
fcompl
sbb
idivl
stos
insl
jbe
shr
jbe
fwait
fwait
pop
push
xchg
jae
aaa
mov
cmpsl
push
pop
xchg
rcrb
mov
in
test
mov
repz
inc
dec
mov
mov
scas
pop
inc
mov
in
jg
call
add
popa
sub
push
lods
dec
in
pushf
sti
outsb
ja
call
dec
mov
lcall
popf
xor
ja
stc
mov
dec
sahf
fwait
sub
push
jmp
jnp
adcb
out
mov
xor
inc
shrl
xchg
pop
insl
xchg
clc
inc
call
rep
push
lcall
and
std
cltd
cmp
or
imul
std
lods
inc
adc
mov
pop
cmpsl
es
es
jle
out
push
adc
lea
sub
stc
dec
or
lock
push
or
inc
push
repnz
mov
imul
cmc
sbb
adc
jb
incb
jp
inc
add
add
xchg
fstl
adc
sub
and
pop
adc
cltd
faddl
add
and
dec
or
push
stos
in
fdivl
rolb
sarb
jb
mov
or
inc
xor
lods
in
xor
inc
test
mov
cmp
int3
jmp
xchg
cmp
mov
das
xchg
inc
inc
pop
in
mov
sub
stos
xchg
push
add
sub
andb
leave
fwait
scas
int3
cltd
adc
ja
cmp
arpl
sbb
jp
ret
and
les
pop
pop
test
scas
ljmp
test
aas
test
int
imull
sbbl
push
xchg
fs
movsb
test
int
outsl
scas
push
negb
jne
cmp
ret
or
sbb
shr
enter
movsl
scas
xor
lock
push
imul
repz
mov
lds
push
mov
pop
cmc
mov
stc
fcomip
scas
xor
mov
stos
shll
gs
mov
nop/reserved
xchg
push
mov
push
and
bound
xchg
add
pop
or
frndint
cwtl
int3
mov
jmp
or
add
inc
jb
dec
push
jnp
push
xchg
out
mov
cmpsl
sbb
mov
dec
xchg
roll
aas
mov
fsubrs
pop
movsl
test
iret
stc
sbb
stos
dec
mov
popa
clc
sub
les
imul
fistpll
je
test
push
daa
out
fistl
jnp
adc
mov
out
gs
push
out
bound
roll
mov
sahf
mov
push
fs
imul
pop
iret
stos
jnp
and
dec
loope
xor
scas
cmpsb
mov
xchg
rorl
dec
adc
push
js
adc
subl
push
loopne
add
jg
arpl
jge
dec
mov
inc
in
xorb
aaa
int
in
jns
push
incb
gs
dec
shlb
clc
inc
cmpsl
out
es
mov
mov
mov
xchg
fcoms
ljmp
inc
cwtl
test
mov
inc
fistpl
dec
mov
addr16
aaa
jle
pop
fcomi
dec
fldcw
xchg
xchg
les
cld
pushf
push
lods
cld
inc
hlt
insl
sbb
jns
jns
bound
pop
test
xchg
mov
mov
adc
test
mov
lahf
mov
adcb
add
paddq
xchg
movsb
jae
sbb
mov
inc
sub
imul
cli
push
dec
xor
in
in
mov
jno,pt
or
xchg
lods
and
loope
out
movsl
push
cmp
mov
js
int3
sub
xchg
xor
pop
roll
sbb
cmp
aam
sub
es
xchg
lods
jns
je
push
cmp
push
sbb
arpl
jge
pop
jge
test
or
fiaddl
jne
sbb
mov
out
lret
xor
test
jne
adc
jnp
pushw
mov
cwtl
add
jb
jae
mov
xor
test
sbbl
xor
mov
pop
xchg
push
inc
mov
mov
pop
enter
icebp
filds
out
xchg
xchg
adc
stc
cld
jns
in
xchg
int3
cmp
lret
adc
sub
push
dec
push
mov
or
mov
rclb
sbb
and
inc
mov
into
cmp
and
cmpsb
ficompl
dec
ljmp
daa
inc
xchg
lcall
push
outsb
enter
loopne
dec
lea
ret
dec
or
outsb
mov
aas
std
lahf
fcoml
and
mov
orb
test
push
cli
scas
mov
pop
mov
lretw
mov
stc
fs
pop
jmp
iret
leave
sbb
mov
inc
pop
cmp
mov
cmp
lahf
in
sub
fcmovnb
ret
loop
dec
call
lcall
jo
push
imul
sbb
adc
in
sarl
stc
cmc
sar
stc
bound
sbb
or
or
clc
sbb
sub
adc
inc
inc
cs
push
or
sahf
rorl
int3
xchg
adc
cmp
mov
push
addl
pop
xchg
cmpsb
mov
pop
lods
jne
loope
sbbb
icebp
negl
sbb
dec
je
jo
repnz
mov
push
mov
aas
nop
insb
pop
out
cli
jb
xor
inc
aaa
ja
pop
lcall
mov
movsb
dec
popf
sbb
fwait
popa
inc
xchg
mov
jnp
adc
mov
pushf
in
dec
sub
mov
cwtl
cmp
fstpt
in
icebp
sbb
dec
es
or
inc
lock
ret
dec
jae
xor
lods
lods
call
mov
aaa
xchg
dec
jns
dec
out
movsl
pop
mov
out
adc
shlb
rcll
cs
and
insl
sti
inc
fisubrs
cs
sbbb
adc
sub
enter
xchg
fistpl
xor
and
and
cmp
dec
fildll
in
mov
test
cwtl
aad
fnstsw
sbb
ljmp
xchg
dec
leave
jmp
jnp
adc
test
xor
fisttpl
jne
lds
or
and
lret
mov
shrl
in
sbb
push
and
inc
cwtl
outsl
movsl
movsb
dec
sub
pop
out
pop
mov
jge
lods
mov
dec
adc
and
mov
mov
jno
add
outsl
lahf
inc
in
mov
enter
lret
rol
rolb
xor
mov
xchg
ljmp
pop
add
das
xlat
rcr
xchg
sahf
sub
cmpsb
xlat
out
jecxz
insl
cmp
pop
loopne
mov
ficoml
and
adc
adc
lcall
sbb
pop
int
popf
add
adc
movsl
pop
dec
insl
cmp
cmp
jge
adc
loopne
lea
testb
cmpsl
int3
cltd
jne
sub
mov
jp
imul
popa
dec
bound
outsl
dec
out
imul
out
sub
adc
and
xchg
mov
fdivs
sbb
cld
icebp
pop
pusha
sbb
shl
or
ss
icebp
ror
jle
test
add
fnstsw
adc
lea
cld
jns
and
ret
je
jo
or
fwait
and
daa
inc
dec
repnz
push
xchg
cmp
mov
rcl
sbb
push
adc
aaa
in
mov
push
or
scas
inc
sub
push
aam
cli
xchg
pusha
mov
add
lcall
and
inc
add
in
cmpl
shll
push
mov
aad
dec
jecxz
and
rcll
and
dec
popa
imul
mov
xchg
pop
add
sbb
insb
xor
scas
cmc
mov
stc
pushf
movsb
ljmp
sub
jmp
inc
ds
popf
movl
icebp
jb
mov
mov
xchg
add
pop
xchg
gs
mov
push
dec
rolb
or
int
test
es
in
pop
and
cmpsb
dec
hlt
mov
adc
das
sbb
jae
cmpsb
out
imul
adc
mov
cmp
and
fsubrl
sbb
push
nop
sub
xor
dec
scas
pop
sbb
add
mov
inc
adc
push
loop
movsl
test
cmpsl
cmp
sub
mov
xchg
sti
and
xchg
xchg
mov
adc
push
das
sbb
push
push
dec
xor
scas
inc
and
ss
je
mov
adc
call
fistpll
mov
xchg
mov
std
popa
icebp
gs
push
in
gs
daa
mov
adc
add
in
sbbl
or
out
and
push
sbb
sbb
push
or
dec
or
mov
icebp
mov
and
lds
jno
sbb
pop
inc
push
mov
dec
jmp
shl
cmp
pop
daa
rcll
stos
shll
leave
jge
or
lret
xor
xchg
pop
lods
dec
push
xchg
mov
pusha
out
sub
cmp
xor
jae
adc
or
mov
push
adc
and
pop
sub
add
lahf
sub
mov
mov
clc
cmpsl
xchg
daa
mov
xor
push
mov
ja
xchg
xchg
addr16
cmpsb
enter
pop
adc
daa
roll
dec
jno
lcall
hlt
sub
or
fistpl
push
or
mov
cli
test
mov
pop
xchg
out
mulb
or
mov
inc
pop
sub
cmp
sub
pop
test
jnp
push
int3
sbb
cwtl
fnstcw
adc
imul
or
ss
pop
mov
iret
es
push
adc
in
cli
adc
sub
out
mov
pop
xchg
loopne
mov
mov
pop
pop
loope
out
out
push
clc
enter
jo
mov
mov
cld
pop
vpaddq
adc
sbb
pop
addl
xor
add
in
dec
lods
inc
and
xchg
repz
jecxz
rcl
pop
sbb
xchg
mov
inc
xchg
jns
mov
xor
add
std
dec
test
sub
ficoml
lcall
mov
roll
sbb
scas
cs
mov
in
mov
js
xor
jmp
inc
rolb
sub
in
lds
sub
in
faddl
mov
inc
flds
movsl
imulb
or
je
fcmovnu
dec
jp
data16
dec
push
push
jecxz
push
dec
pop
pop
sbb
mov
rcll
inc
and
jge
add
xchg
xor
push
mov
add
mov
xlat
stos
les
mov
inc
stc
lods
movsl
adc
mov
adc
sub
and
fs
push
lret
mov
and
mov
dec
popa
frstor
or
pushf
std
add
xor
cmp
sub
loope
out
push
cwtl
ja
cmp
inc
fwait
xchg
imul
and
rcl
push
scas
jmp
int3
aad
hlt
aaa
dec
fsubs
sub
repnz
test
and
sub
and
popa
stos
xchg
in
xchg
xor
addr16
mov
push
pusha
add
xchg
cmp
pop
fstp
aaa
rcll
push
adc
add
xchg
mov
push
cli
fnsave
pop
dec
xchg
adc
push
ds
jae
iret
xchg
fimuls
imul
js
push
pop
dec
pop
adc
mov
nop
push
xchg
fsubl
sbb
dec
shlb
jno
lret
adc
or
mov
xchg
xchg
lods
mov
enter
mov
into
nop
out
or
cmp
jle
sub
clc
shrb
fdivs
jns
out
mov
jo
insb
sahf
arpl
mov
mov
xor
adc
adc
cmp
cmp
adc
addb
mov
scas
scas
jg
push
lds
mov
pusha
repnz
mov
nop
adc
leave
dec
int
inc
pop
push
enter
pop
ds
push
jne
test
push
loopne
fsub
add
bound
and
test
movsl
push
jne
push
jg
sbb
cmpl
dec
cmp
mov
into
xor
fsubrs
test
loopne
mov
push
movsl
xor
out
push
cli
pop
sbb
shlb
shr
mov
stos
lock
rcl
leave
jb
adc
fcmovne
aam
adc
mov
es
in
out
cmc
es
rorl
push
pop
cmp
vmaskmovdqu
loope
stos
cmp
repnz
movsl
fmul
std
enter
mov
mov
add
and
xchg
sarl
xchg
pop
repz
xlat
lods
or
or
dec
xchg
je
xor
js
dec
jns
ja
imul
xchg
mov
loop
das
es
ror
or
rcrl
ror
jnp
rorl
outsb
pop
fdivl
push
dec
and
add
call
mov
pushf
fcoml
jge
insb
cld
lds
rcrb
std
pop
adc
in
xor
sub
sti
and
loopne
in
push
gs
dec
std
insb
cli
je
xor
outsb
cmpsl
lea
fcmovnu
clc
sarl
out
stos
hlt
call
mov
pop
add
mov
sbb
stos
icebp
lods
pop
or
in
imul
add
aaa
loop
leave
xchg
mov
mov
dec
inc
adc
adc
mov
mov
sbbl
dec
dec
dec
loop
in
imul
dec
mov
pop
mov
insb
push
jns
cmp
in
pop
outsb
mov
fcoms
inc
pushf
inc
or
mov
sub
cmpsb
dec
lret
aad
outsb
mov
push
xchg
dec
add
ljmp
adc
xchg
fwait
cltd
dec
aad
ljmp
iret
push
xor
push
scas
aaa
xor
push
test
sbb
pushf
mov
pop
lcall
and
jmp
jo
stc
mov
add
mov
les
xchg
jmp
jno
in
test
fsubr
xchg
xor
loop
sub
jg
inc
push
imulb
xor
xor
hlt
xchg
sarl
and
add
xchg
cli
mov
xchg
loopne
pusha
pop
adc
repnz
lcall
mov
in
adc
jno
xchg
cmp
adc
aaa
xor
loopne
mov
shll
xor
inc
and
out
nop
incb
fs
loop
ss
test
sub
pop
insl
xor
loop
ja
cs
leave
movsl
xchg
cltd
cli
or
pop
and
fs
loopne
sbb
out
mov
stos
lods
and
jnp
sbb
adc
test
arpl
mov
notb
cmp
mov
cmp
sub
addl
sbb
or
xor
dec
rorl
xchg
jmp
les
fsubrl
std
adc
inc
mov
or
push
mov
cld
sbb
push
lds
loop
mov
fisubl
sbb
mov
fisttps
subl
and
lahf
pop
shl
outsl
inc
jmp
cwtl
or
jg
aad
movsl
jae
pushf
ret
jmp
dec
cmp
lea
xlat
call
fs
outsl
jo
xchg
mov
std
pop
jae
xchg
insb
in
jns
jb
adc
call
scas
xchg
aas
cmp
mov
mov
loopne
clc
or
repnz
pop
cmp
cs
jo
mov
or
adcl
mov
push
adc
mov
cmp
subb
dec
mov
rcr
push
push
push
mov
xor
fistpl
jge
jmp
fdivrs
jg
mov
dec
mov
xchg
sbb
mov
sar
lea
cmp
mov
ss
popf
test
pop
jbe
arpl
ret
pop
addr16
jg
pop
ror
dec
js
montmul
cmpsb
xor
popa
and
ljmp
ret
loop
shlb
push
test
pop
dec
sti
inc
inc
sbb
sub
jge
popf
vphaddubq
mov
int3
cmp
aas
js
adc
sbbb
xor
pop
out
push
pop
in
aam
push
shrb
std
fidivrl
cmp
call
xlat
mov
iret
or
loope
popf
add
inc
add
ret
rorb
dec
cmpsb
cmp
lods
pmuludq
neg
cmp
test
pop
lods
repz
mov
and
sbb
pop
xor
roll
je
push
test
cmp
in
xlat
nop
cs
push
les
adcl
pop
or
xor
push
cmp
sarl
movsl
iret
repnz
cmp
mov
jecxz
dec
lcall
sbbl
nop
push
or
cmc
fucom
jnp
mov
add
cld
or
pop
push
mov
jbe
cmp
inc
pop
push
pop
fmuls
sbb
add
jb
sahf
cld
aas
sbb
mov
cmpsb
andb
cmp
jb
test
mov
sub
and
ljmp
test
mov
rcr
dec
jmp
adc
push
movsb
scas
add
push
or
push
loope
sahf
mov
xchg
pusha
iret
int
rcll
cmpsb
ljmp
xor
loope
gs
in
int
es
in
cmpsb
mov
xor
movsl
inc
and
cmpl
jnp
jae
decl
inc
push
dec
mov
adc
cwtl
mov
sbb
pop
das
out
fs
jecxz
pop
in
mov
int3
pusha
ret
jl
jne
jne
out
mov
cmp
mov
push
adc
rolb
cs
push
in
fisubrs
ret
sbb
repnz
fdivrs
nop
mov
std
int3
jp
mov
sbb
ljmp
loop
lret
cwtl
rorl
push
jmp
movsb
add
mov
xchg
mov
repz
adc
xlat
jmp
inc
shlb
sarb
jbe
add
out
adc
pop
pushf
orl
push
dec
inc
lds
jae
lret
in
pop
subl
ja
sbb
jno
push
sbb
mov
cmp
nop
jno
movsb
xor
lock
rcr
xchg
mov
jnp
fimuls
lods
push
pop
cmp
adc
pop
and
push
into
push
mov
adc
and
mov
test
inc
fs
sbb
mov
sub
and
inc
mov
push
scas
sub
mov
test
dec
repnz
mov
push
xchg
cld
mov
mull
in
inc
icebp
js
testl
or
stc
and
pop
sub
xlat
popl
jp
and
dec
xor
push
adc
pop
xor
ja
test
or
popf
mov
subb
mov
add
mov
repz
je,pt
xlat
stc
and
sbb
inc
push
lds
mov
out
push
test
test
addr16
add
outsl
std
clc
clc
mov
scas
scas
lds
fidivrl
popa
mov
clc
popa
hlt
fldt
insb
push
jp
add
stos
xor
inc
dec
push
push
and
xor
dec
pusha
sbb
sub
mulb
rclb
aam
sbbl
cwtl
mov
push
inc
jbe
push
mov
out
mov
xlat
mov
pop
lret
lret
stos
push
push
adc
lret
inc
or
xor
stc
jns
mov
cs
rorl
movsl
inc
inc
sub
adc
rolb
mov
loope
push
inc
loope
sub
and
cs
jns
fs
inc
aam
fildll
int
mov
pusha
int
ljmp
jne
lcall
sub
xchg
js
inc
addr16
pop
das
lea
repz
inc
repz
mov
sub
clc
xor
movsb
in
sbb
call
je
popa
lea
mov
scas
jae
orl
mov
add
xchg
or
mov
fcmovbe
test
int3
mov
pop
jb
add
adc
scas
dec
inc
outsb
xchg
sbb
xchg
dec
bound
xor
sbb
mov
and
cmpsl
xor
jecxz
les
add
mov
stos
push
orl
test
shrb
push
jl
push
or
fadd
subb
lret
leave
xor
push
mov
jbe
rcrl
mov
push
adc
out
push
es
outsb
pop
flds
mov
dec
aad
add
add
fildl
hlt
mov
aam
ss
sarb
testl
out
or
cmp
addb
cmp
ret
mov
push
xchg
inc
lret
mov
imull
mov
bound
mov
fwait
jo
jno
and
fsub
xlat
sub
jns
aaa
add
push
adc
push
aaa
cli
pop
mov
daa
sbb
les
repnz
ss
or
sbb
int
and
mov
shl
test
push
mov
mov
xchg
add
rcl
cmp
mov
push
aas
dec
push
xor
in
mov
nop
or
les
xchg
cmp
ljmp
inc
push
xor
rcl
and
sub
cmp
add
insb
test
dec
int
jle
pusha
adc
mov
or
pop
aas
test
outsl
cmc
push
insb
imul
or
test
add
push
imul
sbb
xchg
lds
or
sbb
fdivrs
jnp
jl
outsl
add
in
mov
xchg
add
rcl
pop
cmpsl
push
mov
push
push
insb
sub
sub
mov
fldt
mov
loop,pn
push
cltd
adc
popa
sbb
cmpsb
out
dec
mov
sub
jae
fnstenv
adc
mov
addr16
push
sbb
sbb
dec
add
mov
in
jmp
popf
imul
sbb
push
inc
pop
push
xchg
int3
add
push
sbb
addb
xor
xor
ja
movsb
jnp
xor
push
or
mov
rorl
mov
cmc
repz
push
loopne
mov
inc
dec
add
sarl
add
and
push
icebp
cmpsl
fbstp
loope
push
and
and
loopne
leave
dec
sahf
ja
aam
fistps
lret
loopne
dec
lea
fistps
jp
ljmp
fiaddl
jl
push
pop
out
jle
cmp
pop
outsl
pop
jge
sub
iret
push
sbb
mov
cs
mov
jmp
dec
push
xor
je
sub
push
add
sbb
ffree
add
in
arpl
sarb
movsb
dec
imul
movsb
jnp
and
xor
or
outsb
mov
str
das
jnp
push
pop
mov
mov
sub
js
pop
mov
fwait
jae
sub
jg
popa
mov
mov
shrl
outsb
movsb
cli
mov
mov
inc
push
in
mov
or
in
ja
xor
cmp
mov
push
rorl
adc
or
movd
pop
sahf
xchg
ja
je
inc
xchg
inc
cs
mov
repz
push
lahf
adc
cmp
int
sub
fildll
dec
cs
mov
cmp
fldcw
loop
arpl
jle
lret
push
aam
insl
fsubp
cmc
arpl
mov
test
mov
aam
push
aaa
fstl
jg
test
fwait
clc
sub
jge
cmpb
cmp
sbb
push
lods
insb
test
adc
bound
rolb
lahf
cmp
in
lret
jmp
pop
es
mov
out
inc
pusha
mov
bswap
psubsb
jns
fwait
fs
stos
xor
cwtl
aaa
dec
and
sarl
es
cmpb
inc
pop
ja
jb
pop
or
shlb
andb
and
dec
sub
psubsw
scas
push
adc
inc
pusha
aaa
mov
js
mov
enter
and
jns
or
inc
mov
shlb
mov
xchg
out
jbe
outsb
lods
loope
mov
loop
dec
ss
mov
mov
out
scas
push
mov
lock
jle
pop
ficoml
xor
push
inc
inc
jbe
sbb
jnp
push
sub
cmp
shll
jne
repnz
push
dec
push
push
push
fsubl
push
aam
mov
cltd
and
fwait
sub
sbbb
mov
push
pop
jbe
or
flds
adc
aam
add
cmp
iret
or
nop
mov
ljmp
shrb
shl
notl
xor
mov
add
loopne
mov
mov
xchg
hlt
mov
dec
mov
add
or
outsb
cmp
repnz
test
jno
mov
ljmp
das
mov
scas
inc
jno
inc
dec
xchg
or
mov
pop
popf
cmp
les
sbb
dec
mov
fdivp
icebp
clc
inc
inc
popa
ror
or
mov
xchg
inc
divb
dec
xor
cld
mov
mov
adc
ret
test
xor
mov
je
outsb
out
insb
xor
jnp
movsl
jae
cmp
mov
cmp
stc
xchg
imul
dec
cwtl
inc
movsl
mov
popa
sub
cltd
inc
loopne
scas
jmp
arpl
into
add
jb
daa
adc
sahf
rclb
mov
sbb
shrl
popl
int
fidivrs
and
pop
pop
jns
call
insb
mov
insb
dec
sbb
clc
int
mov
out
inc
or
or
rep
and
and
imul
push
daa
xchg
cli
loopne
stc
xchg
mov
lods
notb
xchg
loop
test
add
pop
adc
mov
push
mov
mov
mov
lcall
mov
cmp
sti
adc
lret
push
push
push
jle
jb
cmp
inc
push
xor
xchg
stc
repz
fs
pop
mov
inc
pop
leave
popa
and
mov
mov
xor
repnz
mov
and
mov
repz
cld
lret
addr16
add
adc
int3
std
mov
fidivrl
mov
mov
addr16
call
pop
jno
mov
push
lea
xchg
adc
aad
inc
pop
inc
mov
dec
sahf
mov
mov
dec
scas
dec
sub
or
fs
imul
ret
pop
ljmp
mull
rol
jno
loope
and
into
xor
ds
xchg
arpl
notl
cli
push
xchg
popa
inc
cltd
xor
aam
add
dec
mov
mov
fs
mov
xlat
pop
jne
lret
aam
out
sbb
cltd
mov
sub
into
xchg
pop
loope
mov
cmp
fcomps
mov
popf
fs
lds
mov
stc
pop
out
ljmp
mov
arpl
lock
popf
xor
pop
test
test
xchg
jbe
push
std
mov
cwtl
xchg
push
push
std
and
out
cmp
lods
mov
mov
aam
jl
mul
jg
mov
or
testl
in
sti
cmp
mov
andb
pop
in
shll
rorb
jnp
lods
xor
push
sbb
fidivrs
lahf
sahf
bound
cmp
popa
rolb
mov
clc
dec
cltd
lret
testb
and
rcrb
js
xchg
cmp
jge
in
adc
aaa
aaa
sbb
scas
ret
nop
iret
test
ret
adc
sbb
jae
loopne
out
xchg
sub
dec
sbb
dec
int
cmp
or
adc
fwait
es
jp
push
dec
or
test
xor
lods
sub
into
xlat
xorb
cmpsb
jge
loope
lret
adc
fmulp
xor
inc
repz
call
pop
push
dec
fnstsw
stc
dec
fwait
pop
mov
testl
mov
mov
sbb
push
add
dec
bound
sub
pushf
mov
cmp
fs
into
jmp
xor
out
jecxz
xchg
inc
xor
and
stc
cltd
lods
add
push
bound
mov
add
addb
imul
xchg
in
cmc
cmp
mov
sub
jb
in
ljmp
les
cmp
loop
add
int3
mov
sbb
mov
lcall
or
icebp
sbb
lahf
jmp
mov
mov
shrl
cmp
jg
or
iret
mov
lcall
movsb
cmp
cmp
mov
popa
push
or
in
sub
and
inc
ret
imul
les
xor
pop
cltd
icebp
stos
mov
and
test
sarl
lcall
daa
cmp
jns
rorb
push
sub
jmp
cwtl
sub
imul
mov
lret
add
fcom
fcmovbe
gs
in
dec
shrl
mov
push
push
mov
add
pop
lret
hlt
jl
imul
aaa
push
test
fsubs
sub
jnp
pusha
xchg
and
int3
cmpsb
out
int
stos
jp
cld
mov
push
pop
shlb
and
lds
mov
lea
cmpsl
fsubs
test
imull
loopne
or
addb
jg
inc
out
xchg
dec
cmp
push
cmp
sub
lret
mov
lcall
sbbl
xchg
mov
in
push
loopne
jno
or
sbb
pusha
xchg
fmulp
test
in
pop
jmp
and
int
fs
aaa
aad
or
xchg
jge
dec
ss
push
mov
cmp
jae
xchg
cmpsb
dec
out
sub
ljmp
pop
push
enter
rcr
outsl
aam
test
notb
inc
push
xchg
push
pop
outsl
loopne
shrb
test
das
dec
jnp
ds
orb
pop
int
leave
test
inc
and
jecxz
fsubrp
mov
inc
dec
sub
adc
into
mov
dec
call
ja
pusha
sbb
push
mov
push
repnz
jb
or
ja
push
cmp
jl
or
int
mov
iret
add
in
or
je
inc
dec
out
mov
xor
pop
out
jmp
jo
popf
pop
inc
xchg
sbb
dec
stc
adc
sub
dec
add
repnz
sarb
jmp
imul
push
cmp
out
jnp
lods
mov
in
pop
int
out
loop
int
inc
jno
or
jmp
xor
enter
mov
sbb
pop
jnp
jb
sub
scas
aaa
into
ljmp
test
sub
loop
xor
mov
incl
mov
dec
or
lea
sbb
xor
jo
sbb
bswap
jne
xor
dec
js
fisubs
mov
xorl
lret
and
mov
cmp
add
inc
movsl
add
mov
sub
stos
push
xor
add
dec
mov
lock
loopne
xor
fmuls
inc
out
cmp
sarb
loopne
xchg
dec
sbb
mov
andl
in
pushf
or
loope
cs
adc
in
jnp
jb
or
xchg
movb
dec
std
stc
roll
pop
loopne
enter
or
mov
adc
cmc
xlat
mov
fcmovne
fildll
pop
xchg
sub
in
imul
enter
xchg
test
cmp
inc
enter
scas
mov
dec
popa
scas
sbb
mov
ret
cmc
lods
xor
push
call
push
xchg
adc
inc
mov
ffreep
data16
lds
xchg
mul
cmp
hlt
or
add
test
xchg
sbb
cmc
mov
cmp
andb
dec
ss
lret
pop
xor
jno
rcrl
jbe
jne
je
popa
jmp
cmp
std
div
daa
test
push
lock
and
lcall
movsb
jge
inc
in
mov
and
popa
inc
add
inc
lret
sub
imull
cmp
test
mov
rolb
mov
fnstcw
xor
mov
xcrypt-ctr
cmpsl
push
inc
mov
test
add
pop
adc
fmull
shrb
mov
lret
int
cs
stos
aaa
push
clc
loopne
push
sbb
fimull
dec
cmp
stos
push
stos
ret
jne
or
ja
sub
in
cmpsl
jbe
loopne
xor
or
es
ja
pop
pop
cmpsb
mov
mov
push
mov
fstps
test
pop
fdivr
add
lret
leave
pop
xchg
clc
mov
sbb
cmp
sahf
loopne
pop
das
inc
sub
xchg
inc
push
pushf
bound
cmpsl
or
leave
lcall
push
shlb
sbb
fldenv
hlt
pop
cmp
lcall
hlt
in
adc
xchg
loopne
sti
pop
fisubl
outsb
ds
or
push
adc
push
sbb
push
repnz
or
fisubrs
add
mull
jae
and
xor
popf
mov
xchg
inc
adc
push
dec
jnp
test
jns
aas
xchg
leave
push
stc
imul
cmp
push
xchg
or
cmp
std
scas
xor
cmp
loop,pn
mov
push
xchg
je
subl
cmp
pop
int3
jg
fistpl
pop
mov
xchg
jle
adc
cmpsl
iret
sbb
aas
aam
aad
mov
jg
loop
or
faddl
inc
sub
dec
fs
shlb
sbb
fildll
push
sahf
pop
ret
inc
xchg
test
movsb
ljmp
shrl
xchg
pop
idiv
and
jecxz
mul
sbbl
dec
push
hlt
stos
cltd
shrb
les
cmp
mov
in
mov
pop
xchg
hlt
daa
inc
outsb
adc
mov
jle
dec
pushf
lods
outsl
sahf
pmullw
push
mov
and
xchg
add
out
bound
lret
imul
lock
mov
sarl
ja
mov
insb
hlt
clc
xlat
sub
int
test
cld
inc
cmp
add
mov
pusha
adc
add
cmpsl
aam
xchg
xchg
sbb
mov
pop
and
cs
ljmp
fldcw
test
lds
jl
adc
jmp
cmp
xchg
or
xor
mov
fistl
mov
mulb
mov
popf
jae,pn
mov
cmp
insl
and
out
dec
aad
addb
lods
adc
push
mov
mov
pusha
xchg
out
insl
add
outsb
push
mov
clc
pop
mov
mov
push
jns
ret
pushf
mov
mov
adc
arpl
pop
jmp
jge
shrb
jb
orb
stos
mov
inc
fcom
scas
mov
mov
mov
jg
cmp
frstor
pop
xor
sub
fs
mov
popf
and
dec
jno
sbb
stos
dec
push
stos
adc
sub
mov
xlat
paddsw
push
shl
hlt
test
mov
push
ret
rol
adc
fiaddl
test
aam
aad
adc
add
dec
jl
inc
dec
jmp
lahf
xchg
adc
xor
xor
mov
adc
test
call
test
cltd
mov
mov
cmc
lods
add
jb
sbb
dec
push
fcmovu
adc
fwait
scas
out
test
or
testl
lret
xchg
pop
and
hlt
mov
ds
insb
xor
xchg
sarb
movsl
sarb
inc
nop
mov
out
jae
adc
or
xor
pop
pop
loopne
loop
movsb
call
outsb
stos
xchg
sbb
call
dec
sbb
pop
sbb
arpl
cld
ss
out
cmp
dec
cmp
fidivrs
sti
xor
and
cmp
push
iret
pusha
loope
mov
repnz
sub
test
cld
jp
dec
and
push
cli
lea
cmp
push
scas
daa
xchg
lock
stos
cmp
jns
jnp
stc
jmp
fcompl
sbb
popf
mov
cmpsb
es
mov
enter
mov
fwait
test
frstor
in
cmpsb
mov
pop
push
xchg
data16
or
sub
and
mov
fistpl
outsl
push
repnz
in
fs
cmp
mov
jno
mov
cmp
aam
mov
jecxz
mov
loopne
mov
or
in
orb
cmp
js
lahf
lods
in
add
jnp
xchg
mulb
iret
mov
les
xor
jmp
cwtl
std
fwait
mov
cmp
or
xchg
add
sub
test
mov
pusha
cmpsl
imul
sahf
jnp
cmpsl
fisubl
sbb
inc
sub
mov
cmp
loope
xchg
xchg
mov
addr16
mov
in
lock
pop
movsb
arpl
std
mov
cwtl
adc
pop
sbb
repnz
data16
loopne
cmpsb
mov
repnz
or
iret
fld
dec
pop
insl
fistps
jae
mov
jecxz
or
imul
dec
push
popa
xor
test
addr16
mov
rolb
std
mov
loopne
ja
ss
in
inc
xchg
les
pop
mov
cmpxchg8b
leave
gs
adc
inc
xor
dec
ret
movsl
addr16
loopne
and
fwait
mov
jns
cmp
shl
lock
ds
xchg
pushf
adc
cmp
daa
enter
lea
lea
outsb
push
mov
mov
pop
andl
pop
test
add
and
xchg
popf
and
dec
and
mulb
fidivs
push
or
fldl
mov
fstpl
ret
push
push
cld
push
pop
mov
gs
hlt
mul
sub
andb
add
out
cmp
lods
popa
sub
sti
dec
mov
pop
pusha
add
inc
aad
ret
iret
push
jno
and
cltd
ljmp
in
mov
cmc
mov
jmp
dec
mov
imul
int
stos
mov
sarl
jnp
sub
jbe
sub
xlat
jae
inc
xor
adc
movsl
dec
inc
mov
push
ds
xchg
jmp
xchg
into
or
mov
push
pop
cmp
lcall
or
push
subl
lods
fsubrs
mov
sub
divl
pop
adc
xchg
and
fdivr
ret
adc
add
dec
iret
test
ja
jnp
lock
dec
sbb
adcl
xchg
adc
scas
insb
lret
scas
aaa
sahf
mov
test
mov
adc
lea
mov
hlt
sub
xchg
in
push
jno
rcrb
in
mov
push
int
ror
mov
cmc
xor
mov
cwtl
sarb
popw
cmp
add
sahf
pop
jge
idivb
xchg
sahf
sbb
and
jbe
or
fidivrl
out
gs
dec
mov
fwait
push
ja
cld
shl
push
js
and
out
sbb
mov
std
and
push
and
jmp
push
or
sbb
out
ret
push
and
adc
or
cmp
or
push
add
iret
or
imul
jns
sbb
arpl
jne
into
mov
cli
loopne
mov
inc
cmp
mov
xorb
cwtl
inc
cltd
insb
mov
pop
dec
cmp
push
dec
lret
cltd
cmp
icebp
daa
cmc
ss
sbb
mov
call
inc
cmpsb
clc
mov
cmp
jno
jg
push
cmpsb
xor
push
jg
je
xlat
fsubrl
sub
inc
xchg
dec
divl
adc
add
lret
xor
rcll
data16
pop
jmp
pop
cmp
add
dec
push
scas
xchg
pop
mov
mov
cld
fsts
cmp
lods
loope
outsb
movl
xchg
in
dec
fimuls
insb
adc
inc
clc
test
add
cs
cmpsb
call
xlat
add
lcall
mov
and
fimull
and
cmp
push
aam
jp
adc
or
repnz
mov
pop
fisubrs
adc
popf
pop
mov
test
xchg
std
out
dec
xor
xchg
mov
loop
mov
push
ds
and
sbb
je
and
mov
pop
insb
add
in
loopne
out
jp
pop
push
rorl
in
repz
ret
cmp
bound
movsl
testb
sub
mov
jns
in
push
outsl
aaa
fbld
movsb
enter
daa
or
imulb
sub
bound
shrb
cmp
mov
and
mov
cmpsb
out
movsb
xchg
sbb
add
push
outsl
dec
movsb
inc
pop
xchg
inc
or
mov
mov
mov
icebp
sub
outsl
out
repnz
push
imulb
mov
mov
mov
shll
cmpsl
cwtl
pop
dec
insb
cs
and
rcrb
xchg
addr16
test
scas
ja
les
jge
push
out
nop
xchg
rcll
adc
ss
adc
mov
xchg
push
sarb
xchg
subb
sub
pop
cmc
jae
pop
xlat
ja
mov
insl
cmp
push
or
adc
push
jp
addr16
inc
mov
xor
mov
xchg
mov
xchg
push
inc
sub
adc
xor
adc
mov
icebp
les
mov
paddd
movsb
call
adc
test
sbb
pop
mov
incl
and
scas
fcomp
mov
js
dec
addb
and
or
out
lods
or
test
push
les
cmc
sarb
lcall
and
mov
mov
popa
fdivl
xchg
ljmp
dec
scas
hlt
popf
stc
mov
ljmp
aad
pop
test
fisttps
out
pop
lods
sub
mov
in
aas
adc
sbb
loopne
cwtl
test
insb
sub
int3
and
push
pusha
xor
jge
sub
jp
xchg
jmp
pop
test
or
xchg
mov
hlt
les
movsl
mov
ds
jbe
mov
scas
repz
call
push
es
xchg
xchg
test
push
sar
xor
jecxz
lret
xor
lcall
inc
pop
cmp
clc
dec
into
mov
dec
dec
in
xor
addr16
or
imul
push
inc
mov
push
sbb
xlat
and
xor
ret
outsb
fwait
jns
icebp
addr16
repnz
or
pop
lret
cmpb
xchg
push
sub
pop
push
and
mov
test
mov
mov
pop
or
shll
mov
push
and
cli
jne
or
dec
jne
or
sbb
dec
rclb
add
xchg
ss
jns
gs
imull
pop
xchg
mov
sbbl
push
xor
loop
in
dec
mov
sub
jbe
stos
fwait
push
inc
mov
stos
insl
dec
in
pop
out
aaa
fs
fdivs
inc
fs
sbb
add
daa
jg
jge
outsl
adc
ss
xchg
movsb
pushf
push
sar
dec
mov
lahf
xor
rcl
negb
xchg
pop
mov
stos
pop
data16
sub
mov
cld
jnp
cmp
or
cmpsl
lds
push
test
add
cmpsl
sub
das
scas
sub
fidivrs
enter
ja
cmp
scas
and
aaa
lcall
stc
addr16
lods
sarl
jl
push
lock
fimuls
push
test
stc
cs
fisubrl
loope
jne
and
mov
orl
adcl
pop
mov
xor
popa
cld
inc
mov
in
adc
daa
leave
lret
sti
insl
jp
sbb
push
pop
enter
and
and
out
shlb
mov
mov
aas
push
cmpsl
pop
pop
popa
and
dec
addr16
icebp
lcall
test
sarl
das
repz
mov
lods
orl
xchg
outsl
mov
ja
sub
adc
orl
push
rcll
andb
fisttps
pop
and
xchg
mov
rcll
loop
jg
ds
sti
sub
push
lcall
mov
sti
pop
test
stc
dec
push
jbe
add
movsb
and
ficoms
out
in
cli
or
add
sub
or
push
jb
iret
xchg
aad
sub
pop
mov
sbb
mov
rcl
cmp
or
lahf
leave
cwtl
push
imul
aam
jecxz
in
xchg
in
xchg
adc
jp
push
cmp
dec
mov
test
test
test
add
xchg
lods
int3
mov
sahf
in
inc
inc
xor
xchg
mov
xchg
mov
jo
mov
pop
mov
jnp
aad
outsb
push
lock
push
mov
jb
or
xor
das
or
movsb
ja
fnstsw
pop
or
push
mov
adc
cmp
or
cwtl
and
in
jmp
rcl
mov
dec
ss
inc
inc
mov
std
out
leave
inc
test
loop
enter
add
mov
mov
pop
les
popf
fdivrs
ljmp
popa
and
xchg
mov
es
dec
pop
daa
push
lret
scas
nop
dec
ljmp
or
hlt
push
daa
xchg
stos
push
sbb
pop
jle
sbb
add
jge
addl
ret
cmpsl
xor
sub
mov
or
xchg
test
loope
loop
sbb
stos
cmc
test
cmpsb
pop
or
cmp
stc
pop
sbb
jne
fucomp
push
loopne
jo
xor
mov
test
daa
add
rcrl
cmp
lret
inc
fwait
sub
add
and
pop
add
stos
mov
pushf
mov
sub
jmp
push
icebp
leave
leave
ret
test
ficomps
mov
lret
rorl
int
mov
clc
std
xor
adc
mov
add
test
std
aam
out
mov
and
push
inc
jbe
add
cwtl
fnsave
add
outsb
mov
mov
sub
xchg
lods
cs
or
or
xchg
stc
pop
inc
movb
or
ss
xchg
push
mov
popa
mov
cmp
cmp
pop
pop
lahf
dec
jae
clc
adc
and
jne
enter
jecxz
ja
into
in
add
add
jl
dec
fistps
xchg
adc
mov
mov
js
pop
add
ud2
xchg
ss
cwtl
xor
sub
mov
jo
sbb
mov
adc
mov
loop
cmp
mov
jg
add
fstpl
cmp
movb
pop
sbbb
dec
int
cmp
dec
mov
jl
nop
dec
outsl
adc
cmpsl
jl
ja
loop
clc
mov
hlt
mov
pop
mov
cs
lock
push
mov
jg
repnz
sbb
inc
insl
add
sbb
imul
push
pop
cmpsl
fldl
insb
inc
jg
add
mov
cli
aaa
push
stc
add
sbb
mov
pop
addr16
sub
les
test
ficoms
fwait
inc
xor
pop
ja
jb
pop
pop
and
mov
dec
add
outsb
insb
xor
push
push
std
ds
cmpsb
wbinvd
in
add
dec
enter
and
rcr
addb
loope
outsl
out
jle
out
mov
shrl
dec
push
dec
mov
pusha
in
adc
les
iret
test
cmc
scas
rorl
pop
js
mov
sub
xchg
fwait
adc
into
adc
cmp
jle
lahf
ret
jecxz
dec
in
cmp
inc
dec
lock
and
cli
cmp
xor
cmp
nop
insb
sbb
gs
into
aam
clc
addr16
insb
cmpsl
xor
in
out
or
jmp
xchg
iret
xor
jae
add
test
inc
xor
cli
mov
orb
aad
pusha
rol
idivb
insb
add
je
xor
xchg
cmc
scas
sti
mov
cwtl
cmp
int3
mov
fisttpl
push
pop
mov
call
jle
addr16
jmp
test
popf
addr16
shlb
pop
les
mov
mov
inc
cld
jns
shr
adc
scas
aam
ret
xchg
scas
scas
jbe
xchg
push
jb
test
aam
xchg
iret
imulb
add
das
ficoml
mov
pop
shrl
sarl
xor
leave
xchg
jns
pusha
xor
hlt
imul
lea
jmp
xchg
roll
pop
getsec
pop
xchg
test
int3
push
loopne
hlt
cli
jge
data16
stos
push
scas
scas
cmp
addr16
in
leave
lock
popa
addps
in
jge
sub
cmc
mov
sbb
lds
in
mov
insb
rcll
ljmp
gs
cli
jge
push
xchg
inc
shlb
sbbl
pop
test
mov
dec
jp
outsl
sbb
int3
scas
addr16
mov
pop
out
jecxz
imul
ret
call
cs
sbb
cmp
pop
addr16
sahf
in
adc
mov
dec
pop
cmpsb
add
sbb
flds
dec
sarl
adc
push
or
or
push
or
ret
gs
out
dec
decl
or
rcrb
into
nop
bound
jo
xor
iret
cmp
or
pop
xor
cli
lds
sti
ret
adc
and
fwait
dec
outsb
adc
loop
cs
dec
jl
cmp
ljmp
add
jg
ret
pop
mov
jle
lret
xchg
xchg
call
shlb
and
nop
movsb
jae
in
lods
pop
adc
repz
pusha
mov
add
jo
mov
test
test
mov
add
out
and
jle
pop
pop
push
mov
fwait
je
cmpsb
add
inc
hlt
mov
call
sub
or
sahf
cmpl
loope
lcall
sbb
loope
push
push
add
cmp
jmp
xor
and
xchg
mov
adc
sub
sub
addl
aam
rcrl
sarl
sti
hlt
xchg
push
and
mov
push
sbb
fsubrl
insb
ss
mov
inc
inc
cltd
inc
sub
mov
cmp
push
ret
pop
mov
subl
sbb
std
sbb
call
jns
push
cltd
add
mov
mov
jecxz
xor
push
push
mov
stos
lret
and
cld
rclb
shlb
in
dec
cmp
call
in
mov
dec
in
frstor
sub
adc
xorl
mov
mov
pop
mov
cmp
mov
mov
stos
inc
mov
sbb
jp
and
or
dec
inc
fs
out
cmc
push
jno
xor
mov
in
out
xchg
sub
mov
mov
stos
add
ss
out
fdivrs
xchg
and
repz
mov
das
mov
cmp
push
shlb
mov
in
pushf
aaa
and
push
cltd
push
add
jo
js
mov
xorb
dec
mov
adc
add
or
mov
pop
xchg
or
daa
adc
popf
pandn
cmp
pop
lea
mov
ds
mov
sbb
add
stos
bound
lds
adc
jbe
imul
and
or
insl
insb
scas
push
jp
xor
mov
inc
mov
icebp
aaa
inc
es
sbb
pop
pop
or
pop
jle
popa
and
mov
ja
adc
lock
rcl
cmp
sbb
js
mov
inc
xchg
pop
sbb
in
xor
cmp
js
aaa
hlt
ljmp
test
stc
out
cmpb
jmp
jge
jle
inc
push
and
rep
ficomps
mov
fcomps
mov
mov
dec
xchg
loopne
cli
mov
and
pushf
lods
jp
xchg
iret
iret
shrl
or
rclb
mov
add
aad
pusha
mov
jmp
sbb
sbb
popa
xlat
imul
sub
jmp
test
fimull
mov
int3
push
or
loop
ret
jle
cmp
inc
jp
mov
push
push
lea
sub
add
aad
lahf
test
and
and
cld
mov
stc
lea
mov
mov
xchg
xchg
std
xchg
jecxz
push
es
jnp
sub
into
fwait
and
mov
push
mov
mov
pusha
cltd
inc
and
sub
jnp
outsl
xor
movsl
imul
hlt
adc
adc
jnp
and
pop
jg
push
jmp
adc
imul
aaa
fidivl
or
arpl
jge
in
fsubrs
cmp
xchg
jne
or
add
or
sub
mov
jl
adc
adc
cmp
std
or
cmpsb
push
inc
mov
or
pop
cmp
lret
jns
pushf
jne
cmp
adc
mov
ficoml
xor
mov
cs
xchg
push
xor
fsubrs
lret
aaa
lods
lcall
sub
mov
add
test
fs
scas
imul
cmp
mov
or
adc
lcall
push
imul
cmpsl
fmull
ret
dec
add
lahf
push
adc
clc
push
fdivrl
icebp
mov
mov
mov
outsb
enter
int
data16
enter
rclb
in
cmpsb
cli
call
add
or
insb
jmp
fbstp
test
cmp
lahf
cmpsb
fnstsw
icebp
dec
adcl
pop
out
mov
xlat
inc
jno
push
movsb
adc
xor
and
dec
xor
sqrtps
inc
outsb
push
jmp
mov
scas
mov
xchg
imulb
push
cmp
mov
stos
dec
jl
push
mov
sub
pop
cwtl
dec
mov
jg
mov
movsl
adc
xchg
repnz
sti
dec
cwtl
xchg
pop
cs
cmc
adc
cmp
xor
mov
or
xor
jnp
cmp
mov
push
stos
fldcw
adc
repz
xchg
out
ljmp
mov
cmpsb
aam
mov
std
ss
fs
imul
jp
je
xchg
add
jg
pop
fidivrl
aaa
adc
icebp
scas
mov
stos
adc
call
stos
ficoms
mov
inc
lods
ljmp
xchg
cli
fisttpll
iret
ja
inc
hlt
adc
incl
aad
mov
addr16
hlt
mov
sbb
movsl
adc
pop
std
add
jmp
jns
xchg
stos
cld
cmpsb
fsubrl
mov
mov
out
bound
jnp
ret
or
stc
lods
pop
jns
pop
bound
pop
mov
hlt
pop
js
jle
xlat
arpl
dec
les
cmp
imul
popa
mov
dec
mov
lret
aam
test
gs
cmp
fidivs
push
mov
fs
mul
daa
pop
mov
adc
aaa
divl
shll
inc
mov
mov
fs
add
ret
test
cwtl
mov
xchg
decb
mov
out
pop
xchg
xchg
sarl
inc
inc
push
ret
jns
fnstsw
sbb
xor
fcmovne
icebp
dec
push
repz
les
loop
cmpsl
enter
xchg
dec
inc
cmp
test
and
icebp
mov
popf
je
cmp
push
test
inc
lret
jg
or
mov
and
cs
xchg
and
ret
xlat
jns
jb
cmpsl
sbb
fsub
data16
rcrl
mov
jg
xchg
imulb
divl
push
mov
add
ds
ljmp
scas
xchg
test
pusha
xor
add
lods
fstpl
or
inc
and
mov
into
or
adc
push
dec
mov
xor
ljmp
push
xchg
xor
push
arpl
leave
add
fisubs
xchg
data16
aad
cmp
xorb
pop
mov
xor
push
fildll
push
add
mov
iret
xchg
in
nop
xchg
push
pop
pop
loop
repz
es
fucompp
scas
jge
xchg
mov
push
fcompl
movsl
leave
jne
hlt
push
stos
aas
aas
ds
pop
fwait
idivl
and
dec
mov
or
adc
jge
push
subl
ret
and
fidivrl
xchg
sbb
xor
lock
jmp
jmp
lcall
icebp
inc
movsl
imul
inc
ror
das
cmp
iret
fwait
cmc
xchg
mov
mov
mov
bound
mov
jno
movsb
bound
inc
dec
xor
or
aas
xchg
js
jp
mov
or
sub
in
lcall
cmp
hlt
jno
ret
jb
adc
rolb
add
leave
sbb
ljmp
dec
outsb
outsb
mov
push
xchg
jge
sub
incb
ss
xchg
pop
lcall
test
stos
push
jmp
dec
iret
xchg
aaa
cld
xor
daa
mov
lahf
or
imul
sbb
movsb
sbb
lret
pusha
cmp
dec
sbb
mov
test
movsl
bound
push
repnz
push
pop
shrb
sub
and
mov
xor
pusha
leave
lcall
sti
sbb
outsl
nop
push
into
cs
outsb
and
stos
cld
in
jmp
dec
mov
jnp
push
dec
jbe
push
jecxz
scas
js
jne
test
ret
data16
sti
mov
mov
fwait
mov
lods
xor
lcall
in
pop
push
sarl
inc
ds
push
cld
xchg
mov
daa
xchg
dec
jg
call
inc
andb
pop
mov
inc
cmp
dec
mov
mov
arpl
adc
hlt
push
jge
jmp
adc
adc
enter
pop
mov
stos
push
dec
xchg
xchg
inc
out
sbb
cmpsb
das
icebp
ret
and
sbb
das
mov
popf
xor
push
ljmp
loopne
cmp
inc
orl
lea
sub
aas
lret
mov
cmp
and
subl
rcll
cwtl
sti
shlb
js
mov
push
arpl
test
inc
mov
inc
adc
or
mov
jge
push
andb
mov
int3
dec
and
pop
jb
fbld
dec
inc
scas
pushf
cmp
out
fstps
sub
int
orb
lret
pop
pop
mov
mov
scas
mulb
imul
sbb
sbb
mov
inc
movsb
adc
or
cmpsl
lds
adc
lea
push
fmull
add
cmp
bound
push
into
pusha
sbb
jecxz
aad
in
sbb
xchg
scas
dec
into
sbb
pop
push
pop
mov
call
and
into
jne
out
mov
cwtl
loope
cld
bound
xchg
iret
push
lahf
sbb
push
out
inc
dec
out
es
aam
or
pusha
cmpsl
loopne
stos
mov
push
xor
adc
push
jecxz
mov
cs
add
sbb
or
inc
or
push
mov
push
xor
inc
repnz
mov
arpl
mov
adc
mov
aam
jl
jmp
out
pop
mov
insb
adc
les
cmp
and
pop
push
sbb
xorb
cld
mov
inc
aaa
insb
sarb
roll
push
xchg
cld
pop
cld
test
ret
pushf
aam
push
dec
popa
push
pop
push
mov
popa
mov
outsb
or
lea
fcomps
mov
jne
push
call
aad
jb
aad
sbb
mov
jge
hlt
imul
cld
cli
aaa
add
fs
stos
in
push
xor
daa
mov
nop
cs
cltd
test
mov
mov
cmp
rclb
nop
vmovss
jg
cmp
mov
mov
orb
leave
xchg
push
lods
jg
repnz
jmp
in
and
push
out
popf
push
or
jmp
sub
into
icebp
xor
aas
addr16
movsb
ret
rcrb
lock
dec
nop
cmc
fdivl
stos
add
pop
push
fistl
adc
xchg
sahf
rolb
cmp
xor
jo
mov
mov
cld
jae
dec
jle
frstor
and
lds
mov
aaa
rclb
test
insb
movsl
imul
push
lahf
xor
xor
popa
leave
call
jns
add
mov
or
cmpl
add
ret
inc
and
xchg
cmc
int3
push
or
sarl
hlt
jno
imul
inc
push
jg
imul
lods
scas
fcomps
mov
fcmovnb
jle
stc
mov
sti
leave
pmullw
xor
js
shl
sub
out
xor
aaa
gs
lock
and
adc
notb
imul
push
test
jl
aas
mov
xchg
sub
neg
mov
and
ljmp
fstl
loope
scas
pop
jns
lea
out
xorb
sbb
mov
lcall
mov
shlb
je
popa
jg
gs
fmull
out
das
xchg
xchg
inc
inc
push
push
jmp
and
add
push
sbb
pushf
mov
pusha
test
sbb
movsb
pop
sub
aad
adc
adc
and
inc
pushf
pop
dec
mov
inc
cmpsb
and
cmpsb
call
inc
fildl
fldz
roll
push
xchg
loop
mov
sub
fsubl
les
xchg
repnz
inc
pop
popa
test
dec
sbb
ljmp
les
xchg
mov
jne
mov
sti
cmpsb
cltd
insl
ss
shrl
xchg
cld
mov
dec
jl
pop
mov
aaa
add
inc
mov
pop
stos
imul
mov
repz
iret
push
js
aas
int3
wrmsr
aad
xlat
enter
lret
jl
sub
jle
mov
adc
aam
push
xor
aad
cmp
iret
es
insb
add
ss
sarl
pop
dec
sub
out
nop
push
cld
mov
push
rcl
mov
aas
sahf
pop
aaa
sbb
mov
jae
loop
add
pop
loopne
outsl
cmp
lret
dec
pop
notb
outsl
cmp
mov
call
xor
add
pop
mov
test
inc
popf
test
lret
xor
jo
insl
lea
call
shl
enter
movsl
fsubrs
cvtps2pi
fwait
jno
dec
inc
xchg
movl
lahf
iret
aad
sub
push
and
arpl
movsb
inc
push
or
fldenv
adc
jle
xchg
aam
push
nop
das
enter
push
mov
mov
adc
mov
jge
fbstp
dec
inc
xor
dec
push
mull
insb
mov
jecxz
scas
and
jg
popf
adc
lcall
fwait
mov
push
sub
out
das
icebp
lea
loop
mov
dec
mov
jg
cmpsb
nop
dec
aad
adc
int3
push
scas
xchg
divb
push
out
or
outsl
mov
push
pop
insl
fcomps
ret
lret
push
das
sti
nop
sarb
jge
loopne
mov
gs
imul
mov
sbbb
ret
push
add
leave
adcl
cmpsl
jecxz
mov
xchg
and
sub
jmp
inc
repz
dec
add
aas
pop
mov
sbb
jmp
scas
imul
pop
pop
faddp
push
jecxz
bound
jns
sbb
sbb
inc
sub
push
je
sarb
mov
push
or
mov
je
pop
aaa
cmpsb
and
or
jae
imul
int
test
sbb
test
into
rolb
push
dec
xchg
push
out
inc
mov
fcmovnb
mov
fcom
inc
clc
in
pushf
push
ret
xor
mov
and
push
add
push
mov
xchg
inc
add
outsl
xor
movsb
lds
mov
out
insl
push
les
aaa
pop
rorl
cmp
jle
rcrl
into
insb
ja
mov
shlb
pop
xchg
sarb
inc
fcomi
xchg
outsl
movsl
jl
cmp
daa
scas
mov
inc
mov
in
adc
push
stc
popa
cmp
pop
adc
xchg
push
jl
icebp
enterw
push
aaa
sbb
cmpb
xchg
roll
loopne
adc
lock
dec
inc
add
xlat
les
jbe
dec
cmp
jnp
mov
mov
xchg
pop
or
dec
xorb
sti
mov
cmpl
sbb
lods
xchg
call
ret
js
mov
add
fwait
loope
jle
fdivrl
lds
mov
adc
stos
scas
mov
jae
jb
stc
cmp
jo
ret
lods
aam
sub
jbe
cmpsb
xchg
femms
pop
mov
int3
cmc
flds
push
dec
aaa
fadds
inc
pop
not
add
or
dec
cmpsl
push
fcoml
cs
push
pop
xor
cmpb
or
jmp
les
rolb
lcall
movsb
stc
add
ljmp
sub
or
lahf
jecxz
add
cwtl
lods
loope
gs
out
sbb
loopne
sbb
sub
xor
loop
inc
pusha
mov
in
outsl
repnz
adc
popf
inc
push
adc
adc
push
and
ficomps
loopne
aam
jp
iret
jne
jnp
iret
sbb
mov
dec
mov
pop
out
adc
dec
cmp
mov
push
mov
jmp
imul
aaa
roll
mov
ret
sbb
xchg
push
or
cmp
add
add
in
push
dec
loop
rolb
cli
popl
jmp
pop
lock
mov
sbb
out
mov
add
in
mulb
mov
stos
fwait
jnp
sbb
cs
rcrl
push
fs
xchg
pop
dec
clc
adc
cmp
cmp
stc
sti
and
jmp
xchg
pop
ss
cmp
dec
xor
fisubrs
aas
enter
in
nop
cmpsl
and
pushf
les
jb
mov
icebp
negl
xor
jb
shlb
mov
addr16
mov
stos
or
dec
xchg
aaa
mov
fistpl
out
outsl
sti
push
xchg
xchg
bnd
xor
dec
add
jb
out
mov
pop
pop
roll
cmpl
inc
movsl
add
xchg
push
cs
dec
aas
jecxz
js
and
mov
fs
outsb
and
xchg
mov
call
pop
pop
stos
fidivrs
subl
stos
xlat
cmp
inc
xadd
xchg
mov
push
mov
fstps
pop
cmp
ret
aaa
push
fwait
jecxz
mov
mov
push
mov
mov
int
inc
lods
xchg
sbb
or
dec
jne
push
mov
aam
repnz
cmp
ja
dec
push
push
mov
inc
add
xchg
orl
jge
mov
jecxz
pop
movsl
hlt
aam
test
mov
xchg
jns
add
stos
movb
mov
jbe
out
adc
cwtl
jae
in
cmpsb
loop
out
cld
adc
adc
mov
jae
pop
addr16
cmpsb
xor
add
pop
sbb
lock
in
push
sbb
jo
sti
mov
xchg
sti
movsl
enter
test
das
mov
pusha
shll
out
out
push
dec
call
das
ret
sub
aam
mov
xchg
movsl
call
test
rclb
ret
push
ja
mov
rcr
cmp
push
dec
fsubl
push
rol
and
int3
dec
dec
dec
dec
fisubl
shll
or
hlt
pop
out
ja
dec
xlat
lahf
cld
and
or
leave
dec
xchg
xlat
stos
lock
or
idivb
fxch
pop
ljmp
xchg
loop
mov
xchg
pop
dec
jbe
add
and
push
mov
neg
cmpb
sti
mov
lret
das
inc
and
in
into
dec
sub
fmuls
pop
insb
mov
inc
lods
add
in
pop
ljmp
cmc
sbb
cmpl
and
push
ds
fiaddl
sub
shll
xchg
and
cli
pushf
jle
cld
inc
or
dec
adc
xchg
imul
mov
add
pop
imulb
arpl
dec
dec
push
icebp
test
or
sti
push
xchg
outsl
pop
sub
sbb
fwait
add
lods
sbb
js
lods
lahf
mov
clts
push
or
icebp
dec
or
mov
mov
lock
mov
push
push
lods
sub
int3
lahf
outsb
ja
hlt
mov
pop
inc
loop
nop
mov
test
sbb
pop
out
ret
jb
lods
mov
lods
mov
push
ljmp
cmp
mov
repnz
aas
aad
fxch
test
loope
nop
idiv
mov
sbb
jge
sarb
repz
xlat
xor
adc
cmp
mov
adc
call
xorb
add
add
scas
jns
pop
clc
cmp
sti
xor
jo
cld
bound
flds
in
int3
jne
or
lds
and
outsl
fwait
pop
pusha
mov
mov
mov
std
clc
sub
jno
fisttps
movsl
xlat
push
add
cmc
adc
scas
scas
jg
xor
sbb
mov
push
ds
mov
add
out
popf
mov
popf
mov
xor
xchg
cmc
pop
jns
ss
fisttpl
pop
pop
adc
es
lret
pop
mulb
ret
or
cmpsb
fidivrl
aam
out
cmp
mov
adc
xor
pop
pop
test
cmp
cld
test
jmp
xlat
clc
sub
pop
mov
das
cmpb
or
mov
mul
jnp
mov
dec
sbb
and
or
stos
js
inc
xor
pop
loopne
scas
mov
lcall
jb
or
pop
test
test
jo
xlat
and
xchg
sbb
insb
mov
inc
pop
xchg
inc
xchg
data16
push
cmp
xchg
dec
fisubrl
loopne
jge
scas
sbb
sbb
xor
dec
ja
movsl
fisubl
fldcw
sti
mov
push
mov
fists
shlb
popa
jp
add
and
push
addr16
bound
sti
sti
mov
incb
pusha
xchg
call
xor
xor
outsl
xchg
jmp
xchg
cmpsl
lahf
cmp
sub
stos
mov
mov
call
aam
xor
sub
fildll
mov
insl
mov
mov
bound
cmp
js
pop
xorb
dec
pushf
mov
icebp
ja
adc
mov
mov
into
add
push
loopne
not
call
stc
cld
mov
mov
jge
ret
jae
push
dec
cs
pop
jmp
out
test
cmc
or
add
pop
cmp
pop
xor
mov
lret
sub
aam
ljmp
xor
cli
push
and
sti
enter
imul
pop
and
mov
pop
lods
mov
or
clc
mov
mov
push
push
cwtl
add
xchg
jo
or
js
lds
iret
lock
jmp
cmpb
mov
in
sub
mov
sbb
add
lret
nop
cmc
xchg
mov
and
pop
rcrb
pop
in
popf
stos
xchg
adcb
dec
hlt
shr
push
dec
stos
mov
sub
xor
outsl
lret
std
nop
cmpsb
ja
cwtl
lods
mov
in
int3
outsl
enter
loopne
fisubrl
jp
loopne
jbe
and
cs
arpl
aas
inc
add
sub
ror
rcl
jo
push
pop
out
cmp
jb
jae
out
mov
mov
stc
adc
xchg
mov
inc
sbb
cmp
add
adc
ja
insb
lcall
adc
mov
mov
lahf
rcrb
pop
ja
jl
outsb
mov
xchg
jns
pop
pusha
aaa
shl
mov
push
sti
shll
es
insl
xor
sub
mov
inc
mov
out
out
fdivr
int3
outsl
push
dec
and
mov
cmpsb
gs
adc
inc
int
add
std
popa
mov
stc
sub
imul
gs
push
je
jle
loopne
lahf
mov
dec
out
mov
inc
in
repnz
cmc
es
dec
fdiv
mov
pop
out
cmp
movsb
xchg
stos
aad
std
or
jnp
loop
ja
loop
loopne
and
lret
or
outsb
sbb
ret
cltd
loope
xchg
xor
iret
mov
inc
and
jns
outsl
pushf
push
mov
test
scas
cmp
leave
sbb
fwait
pop
dec
push
mov
pop
push
xchg
mov
imul
popa
movsb
add
sti
pusha
pop
push
lods
pop
mov
ss
ret
xchg
out
xchg
fsub
pop
das
std
jp
sahf
mov
outsb
mov
cmp
faddp
aam
mov
stc
sub
das
hlt
and
xor
cs
adc
cmc
sbb
and
inc
out
push
mov
jge
push
insl
push
es
sub
pop
mov
lock
pop
jl
dec
cli
jne
mov
push
xchg
ret
xor
jb
cmp
or
cltd
cmp
fcomi
roll
mov
inc
bound
sbb
into
das
jne
inc
lock
push
sub
xor
leave
push
sub
scas
push
int3
mov
xchg
fsubrl
mov
ffree
cmp
pusha
xchg
cld
xlat
lahf
or
fwait
adc
loopne
sbb
pushf
dec
dec
xchg
mov
jmp
test
inc
inc
imul
adc
mov
hlt
jnp
add
pop
push
ds
insb
mov
daa
inc
loopne
adc
lods
or
roll
mov
cmp
call
cmp
xchg
adc
es
sbb
fcom
ret
dec
pop
das
sbb
imul
rclb
push
or
mov
or
mov
popa
jne
shl
adc
stos
call
xor
test
add
pop
cli
push
inc
bound
in
daa
jmp
push
or
out
stc
psubw
stos
aaa
cmp
mov
lods
inc
fstpl
push
xchg
sbb
aam
gs
cmp
fidivl
xor
sbb
into
cmc
xchg
dec
imul
scas
jge
push
hlt
inc
in
js
pop
sub
inc
dec
xor
lods
sbb
pop
push
add
add
push
enter
cmc
jo
lea
mov
inc
add
push
jns
lcall
sbb
mov
aas
push
cmp
add
xchg
push
mov
mov
js
out
xchg
enter
xchg
pop
sti
dec
nop
and
ret
xor
movsb
das
faddl
sub
cmp
inc
jne
mov
mov
clc
xchg
push
and
in
inc
add
dec
ss
inc
push
scas
add
mov
fnstsw
and
stos
and
jg
aad
iret
inc
dec
ja
in
sbbl
mov
in
ljmp
or
jg
mov
insl
cmc
das
pop
std
imul
jne
ljmp
mov
dec
and
ja
insl
fsts
xchg
es
mov
mov
inc
sbb
and
pop
xchg
sub
sbb
clc
cmp
out
or
ljmp
push
or
adc
cmp
xor
mov
fadds
sbb
out
loopne
mov
imul
xchg
and
out
addr16
add
repnz
adc
sbb
mov
in
shl
iret
sbb
mov
std
repz
les
fbstp
jnp
xchg
scas
or
xor
mov
lods
adc
outsl
imul
shrl
mov
jmp
ja
data16
mov
clc
mov
movb
ror
nop
addl
sbb
mov
gs
lds
test
xor
jno
xor
out
fnsave
and
sub
mov
mov
enter
mov
loop
cli
xchg
xor
jp
lods
mov
dec
xchg
dec
imul
rol
popa
cld
lret
icebp
cmp
jbe
mov
fisubrs
and
pop
push
fisttps
mov
fnsave
xor
fwait
mov
pop
mov
sti
mov
mov
js
dec
sti
hlt
adc
mov
jb
daa
or
xchg
mov
cmovae
fs
mov
loopne
lods
cmpsl
loopne
add
add
add
popf
hlt
mov
jmp
jg
repz
xchg
popf
sti
mov
xchg
das
fisubs
or
ret
aam
jg
cmp
xor
jns
mov
adc
adc
dec
mov
jg
bound
and
repz
cmc
pop
iret
imul
sbb
pop
lea
mov
pop
xchg
arpl
popa
rcll
mov
push
jo
mov
movsb
dec
imul
andb
or
insb
ret
movsl
fdivs
into
call
inc
mov
sbb
pop
iret
mov
ds
daa
aam
dec
enter
lds
stos
sti
sahf
fdivrs
sti
scas
push
cmc
sub
adc
pop
mov
fwait
cmp
pop
xor
xor
lods
xlat
dec
bound
sarl
shrl
mov
scas
xor
xchg
imul
mov
cmp
lods
adc
jnp
popa
jg
adc
cmp
or
sub
das
and
dec
decb
mov
sbb
push
lods
scas
enter
push
test
jns
sbb
dec
aaa
jbe
stos
xchg
dec
lret
loop
popf
cld
mov
mov
movsb
hlt
cwtl
mov
xor
loopne
gs
imul
dec
push
dec
xchg
enter
push
cmp
leave
and
mov
adc
push
dec
es
ja
jne
pop
sahf
and
iret
xchg
imul
xchg
fnsetpm(287
mov
or
in
outsb
mov
dec
lods
mov
and
push
out
sub
mull
stc
dec
lods
add
out
das
bound
jne
push
les
lahf
or
push
shl
lcall
xor
adc
js
stc
and
sub
push
xchg
mov
and
insl
hlt
repnz
adc
mov
fwait
cmp
and
nop
aam
pop
sbb
idivb
aam
imul
cli
xchg
std
lahf
xchg
int3
test
mov
cmp
icebp
xchg
dec
fs
push
inc
shrl
rclb
pop
mov
ficoms
gs
mov
sbb
and
sbb
adc
push
sti
lret
push
add
rcll
mov
push
push
pop
lods
outsl
or
push
mov
jp
les
mov
ret
jne
adc
scas
loop
inc
push
outsl
sbb
push
loope
mov
mov
loop
dec
rorb
insl
fsubr
cmp
stos
jbe
clc
jge
inc
movsb
or
cmc
test
or
sbb
jmp
cmc
pushf
enter
sahf
hlt
sbb
je
in
cmp
fbstp
cmp
push
scas
sub
movsl
popa
subl
pop
add
das
jl
sbb
in
gs
sub
dec
scas
mov
movsl
out
xchg
and
ret
push
ljmp
pop
ftst
pop
lahf
or
push
nop
mov
mov
fildl
push
sarl
std
lret
xor
pop
xchg
int
lds
negl
sub
push
mov
rorb
sbb
out
add
std
fcoms
sub
out
push
mov
push
cmp
cmp
ja
dec
dec
inc
mov
sbb
mov
jb
ljmp
and
lahf
cli
or
push
jno
mov
dec
lea
adc
mov
mov
daa
dec
pop
jns
enter
rorb
jo
mov
jge
bound
adc
into
sub
pop
neg
sub
call
rdpmc
fwait
sub
nop
xchg
jae
sbb
arpl
fidivs
js
mov
aaa
ja
test
imul
xor
in
movsb
lcall
add
push
in
insb
call
mov
fs
loopne
pushf
push
cmp
inc
lds
lcall
test
dec
out
cmpb
int
push
out
imul
add
mov
ret
insb
sbb
testl
insb
rclb
std
pop
fidivl
out
call
pushf
aas
mov
imul
pop
outsl
add
insl
cmp
lret
leave
ss
mov
ret
icebp
xor
int
rclb
mov
dec
and
jo
mov
out
push
lret
xor
addr16
jo
mov
out
int3
divb
xchg
dec
or
dec
push
pusha
sbb
mov
push
mov
test
push
imul
testl
inc
in
jbe
in
stc
push
cli
rcll
jnp
xchg
cmp
or
mov
add
movsl
lcall
cld
push
aas
shr
sbb
bound
mov
push
cltd
and
lea
sub
outsl
mov
and
loope
adc
out
stos
mov
inc
adc
inc
shrl
arpl
xor
xchg
lds
fisttps
adc
cmpsb
sbb
dec
in
jp
dec
push
pop
or
push
add
imul
push
adc
xor
inc
inc
push
jmp
push
out
xor
adc
adc
xchg
dec
test
jnp
ret
shll
cmp
outsl
ja
out
jp
and
rolb
das
das
cltd
or
adc
jns
data16
es
jle
mov
mov
movsb
lods
dec
dec
mov
mov
push
rcll
aam
pop
dec
sahf
pop
sbb
dec
test
and
mov
mov
cmc
add
add
adc
jmp
jg
lods
mov
add
inc
dec
xchg
ss
dec
and
out
add
inc
add
xchg
push
fsubp
aad
ss
add
and
fwait
sbb
lcall
nop
scas
call
cs
mov
inc
xchg
and
cwtl
testl
stos
repz
cmp
push
in
data16
mov
ljmp
push
popf
mov
dec
rorl
pop
in
push
fistps
shr
sub
daa
jbe
out
cmp
lods
pop
mov
mov
lds
jnp
mov
push
pop
int3
popf
scas
pop
int
and
loop
pause
mov
jne
sbb
hlt
push
je
iret
pop
hlt
mov
lret
mov
pop
mov
dec
and
mov
orl
and
adc
subl
add
add
rcrb
movl
inc
cmc
inc
mov
add
insb
mov
jp
or
pop
pop
sti
aam
add
lret
leave
sub
push
jno
cmp
push
cmp
cmpsb
push
pushf
aaa
daa
out
jecxz
push
out
fistl
mov
inc
sbb
rcrw
jne
shll
mov
mov
insl
push
mov
fstpl
sub
adc
andb
movsl
xchg
lods
dec
and
pop
js
xchg
lahf
jmp
adc
adc
and
jge
jno
lds
fstl
xchg
mov
mov
cmp
sbb
jnp
dec
dec
out
mov
fdivrl
jmp
lods
mov
fs
or
dec
jp
adc
inc
add
mov
push
mov
or
les
outsl
int3
cwtl
adc
inc
stc
cmp
out
popf
cltd
int3
inc
mov
inc
adc
lods
jne
push
cmpsl
or
jbe
pop
dec
or
jl
je
jo
inc
mov
addl
mov
icebp
fldt
leave
jne
out
negl
xchg
inc
lret
pop
jge
adc
mov
mov
lcall
sahf
jnp
jmp
negb
orl
mov
inc
popf
fcompl
mov
iret
adc
lcall
jae
fbld
dec
or
in
sub
loop
mov
mov
enter
nop
lahf
in
decb
xchg
xor
dec
aam
adc
cld
jge
fs
cmp
ret
sub
and
rcll
mov
sbb
cld
cmp
mov
test
jae
and
test
fdivr
pop
mov
adc
cmp
xor
int3
inc
imul
fcoms
pop
out
add
jns
jmp
push
shll
xor
mov
mov
lods
mov
mov
orl
jb
inc
pop
outsl
and
cmp
aas
test
jle
repnz
in
mov
adc
jle
jae
cld
pop
and
setl
xchg
mov
fwait
inc
lahf
jae
loop
mov
inc
adc
movd
mov
aas
push
inc
mov
fdivrl
aad
or
out
sbb
mov
loop
jmp
jl
xor
fsincos
sbb
dec
in
je
dec
loope
jmp
mov
push
pusha
mov
mov
subl
add
sub
sub
push
rolb
je
mov
add
sub
lds
inc
push
xor
and
fsubl
push
cmc
test
jbe
xor
sub
icebp
xor
shl
inc
jb
cld
movsl
sbb
pop
mov
stos
test
fistpl
adc
jge
outsl
adc
dec
inc
xchg
mov
mov
inc
out
sbb
jb
pop
test
xor
call
adc
shl
mov
movsl
jecxz
dec
add
and
ljmp
cmpl
sub
dec
adc
inc
rcrl
sbb
cmp
jge
ficoms
xor
or
in
sub
ficoml
jmp
jbe
repnz
dec
pop
sbb
jecxz
aam
add
jmp
mov
dec
mov
push
test
cs
sahf
pop
cmp
lds
in
mov
movsb
inc
test
bound
jp
out
into
pop
sub
out
mov
pop
bound
mov
push
or
adc
mov
test
push
mov
aaa
pop
mov
push
lahf
push
inc
pop
mov
mov
stos
dec
cmpsl
out
arpl
adc
imull
sbb
clc
jle
mov
add
mov
std
lret
jecxz
jo
inc
jg
sub
into
test
movb
insl
jge
dec
jae
inc
out
ret
jns
add
out
dec
negb
ljmp
fcmovu
lods
xchg
cs
or
stos
in
mov
dec
pusha
push
push
loope
push
or
iret
and
mov
mov
insl
xchg
xchg
xchg
notb
jg
add
outsb
stc
out
into
pushf
or
inc
lods
xchg
neg
leave
pusha
mov
mov
and
cwtl
push
jo
sub
faddl
mov
ret
ss
sub
fcoml
decl
rcrl
test
je
ret
or
cmpsb
stos
push
add
add
push
pop
jnp
movb
push
cwtl
sub
das
dec
pop
mov
dec
inc
pop
pop
test
loop
dec
mov
ficomps
not
fildl
xchg
pushl
pop
aaa
sti
push
xor
test
dec
pusha
xchg
cmp
jnp
add
jecxz
daa
fistpl
inc
xchg
dec
test
xor
pop
lock
and
mov
pop
xchg
shl
cwtl
int3
mov
push
xor
mov
fsts
xorl
sub
icebp
lahf
jbe
fsubr
std
repnz
jns
mov
xchg
adc
movsb
lcall
adc
jl
popf
loop
out
lcall
jge
cwtl
scas
mov
aas
adc
xor
iret
sbb
jmp
dec
aam
jge
hlt
inc
jno
inc
jnp
and
mov
enter
and
dec
mov
jbe
xchg
jge
adc
mov
adc
sarl
xchg
les
repnz
aad
sbb
pop
add
fsubs
adc
aaa
movsl
dec
rorb
fld
push
icebp
lret
mov
add
push
add
repnz
sti
adc
bound
sbb
repz
sub
mov
jmp
sub
cmpl
mov
loope
mov
inc
fsts
out
jno
aaa
cltd
sbb
in
lcall
test
cltd
cmp
jo
insl
mov
xchg
push
js
xor
adc
mov
jmp
lret
add
ds
dec
movsb
push
sbb
xchg
sub
cmp
cmpsl
jl
add
dec
dec
mov
aad
inc
push
inc
cmp
imul
dec
jno
fs
sub
subl
ficoms
xchg
nop
push
test
cld
repnz
divl
test
call
imul
fbld
test
jno
mov
pop
int3
sbb
insl
test
xor
fsubrs
sbb
cmpsb
xchg
hlt
and
loope
pop
inc
adc
aaa
mov
fdivrs
icebp
ret
push
dec
mov
fs
mov
aad
add
adc
imull
enter
out
xor
imul
sub
push
mov
jecxz
and
or
data16
push
ds
fistpl
add
imul
jg
jb
std
fbld
push
push
xor
cmpsl
lea
inc
bound
imul
movsb
cmp
std
xchg
scas
xchg
bound
push
inc
aam
push
cmp
mov
nop
push
dec
push
or
loope
xor
xchg
fistps
jle
add
xchg
sahf
add
cmc
loope
pusha
cli
inc
je
xor
adc
cs
pop
subl
pusha
sub
and
loope
push
pop
mov
add
mov
mov
jnp
sbb
in
and
dec
inc
adc
andb
out
xlat
inc
outsb
xchg
dec
mov
inc
add
push
out
mov
sbb
inc
push
ret
cmp
add
fisttps
inc
sub
xor
inc
rcll
cmpl
lock
jmp
movsl
cmp
call
nop
jmp
clc
ss
jnp
es
sub
test
pop
aam
loope
sar
jle
sub
push
mov
xor
enter
test
mov
cmc
mov
loopne
mov
push
scas
ljmp
and
inc
cmp
sub
adcl
xchg
mov
push
xor
cmp
sbb
add
ret
dec
xchg
cmp
jbe
sahf
push
sub
or
sbb
int
jecxz
pop
adc
mov
icebp
xchg
jge
out
sub
stos
das
and
mov
jp
jo
popa
in
xlat
scas
ret
lea
mov
push
js
pop
aaa
inc
js
lahf
fists
popa
sbb
and
jno
ljmp
mov
xor
mov
out
lods
test
lods
dec
xchg
jg
mov
adc
adc
xchg
gs
stc
pop
rorb
and
addr16
pop
pop
icebp
pop
xor
xor
shlb
xor
lret
lods
in
icebp
std
inc
mov
xchg
xor
shlb
cltd
and
add
stos
into
add
inc
sahf
aaa
popf
pop
cmp
ljmp
pop
and
popa
sbb
pop
pop
jle
sub
jne
mov
jp
setle
aad
into
xor
or
lods
push
or
outsl
rcrb
pop
lea
xchg
cmp
daa
xor
fcomps
cmovg
push
shrl
sbbl
es
xor
adc
gs
imul
adc
mov
cmp
arpl
in
mov
push
imul
lds
sbb
and
imulb
stos
fcomi
mov
mov
xchg
add
jne
or
or
sbb
rolb
push
adc
je
lcall
inc
mov
xor
lds
popf
dec
lods
jge
xchg
mov
xchg
ficoms
cmp
mov
orl
and
xor
gs
ja
cmp
mov
xchg
sbbl
imul
mov
jae
dec
mov
xchg
xor
lods
jl
sbb
sub
mov
int
mov
sarb
jb
jno
movsb
test
jns
or
out
sti
not
jg
es
dec
insb
push
inc
jle
add
mov
outsl
test
inc
addr16
add
in
mov
popf
mov
movsb
sarb
mov
flds
imul
adc
mov
cmp
cltd
xor
test
inc
das
daa
les
mov
cmp
and
cltd
les
sbb
mov
dec
mov
add
outsl
pop
iret
cmpl
xchg
scas
lret
outsb
push
mov
jle
pop
inc
push
popa
clc
orb
push
add
mov
mov
loop
sub
jb
inc
fwait
mov
and
inc
xor
testb
imul
sbb
icebp
or
scas
mov
loope
cs
in
pushf
jne
mov
pop
shll
mulb
call
and
adc
cmp
ja
mov
push
data16
xor
fcom
cltd
iret
push
add
jg
ja
mov
xchg
xchg
xchg
mov
push
push
in
add
lahf
add
push
leave
fs
imul
imul
in
inc
xor
pop
jns
aad
xchg
fisttpll
sbbl
push
std
into
fcmovb
lock
jmp
dec
or
mov
pop
xchg
and
fnstsw
dec
mov
ja
mov
push
push
pop
xchg
sbb
outsl
roll
sbb
icebp
pop
dec
loopne
pop
mov
adc
and
shll
loopne
inc
lock
addr16
or
dec
or
and
js
inc
bound
pop
fistpl
mov
in
std
arpl
movsb
or
cmp
pop
add
mov
lcall
xor
adc
aaa
aam
repnz
mov
gs
push
mov
xchg
and
or
scas
sub
push
pop
es
jno
xchg
pop
daa
cwtl
xchg
and
pop
jp
jno
ret
jne
fs
adc
roll
in
int
rclb
cmp
insl
xchg
and
add
fs
out
sub
mov
cmp
aad
lock
sub
xor
jmp
push
mov
rcrb
out
dec
shlb
dec
dec
in
pop
mov
xchg
and
mov
stos
push
lds
cmpb
or
mov
xchg
out
cmp
lea
fnstsw
arpl
and
jl
mov
jg
lea
push
xchg
or
gs
cmpsb
sbb
addr16
sbb
in
divl
dec
mov
test
nop
xchg
rcr
dec
mov
inc
inc
in
jnp
sub
mov
sbb
inc
mov
mov
cmp
or
or
fidivl
int3
push
jne
xchg
cmpsb
or
out
ja
lret
out
jg
cmpsb
push
adc
sbb
sbb
insb
xor
pop
movsb
push
xchg
insl
push
int
les
inc
pop
test
fs
push
neg
cs
es
mov
xor
cmp
push
sbb
loop
shll
push
cmp
pop
js
dec
push
sbb
inc
sub
xchg
mov
clc
xlat
hlt
stos
call
dec
add
add
mov
fistps
out
imul
pop
mov
rol
lods
imul
xor
xor
movsb
sub
or
out
dec
int
mov
add
loope
hlt
aaa
adc
xchg
add
into
mov
arpl
ds
bound
jp
and
dec
pop
aaa
add
push
addr16
mov
imul
addb
aaa
popa
ret
addr16
jmp
js
fimuls
or
and
push
mov
popa
and
xor
cmp
inc
cmp
adc
sti
test
sbb
dec
test
scas
and
sar
dec
or
pop
pop
push
mov
jp
add
adc
pop
out
sub
les
fisubrl
mov
inc
add
mov
insl
js
mov
mov
test
xchg
shll
pop
mov
inc
xchg
nop
adc
add
dec
jbe
xchg
lcall
mov
in
cmp
mov
and
inc
loope
lock
inc
mov
test
adc
push
adc
jns
repz
int
inc
daa
ffree
ja
add
pop
adc
cmpsb
fnstcw
aas
push
int3
loopne
std
inc
repnz
xchg
fdivrl
mov
daa
ljmp
fsts
arpl
and
dec
subb
popa
popf
dec
inc
stos
mov
and
push
pop
xchg
xchg
xchg
xchg
das
fcmovb
les
xchg
sbb
cmpsl
xchg
daa
mov
pop
mov
sti
pushf
dec
sbb
ror
xor
push
iret
or
pop
and
pop
and
mov
iret
jb
out
sti
in
ss
jns
mov
sarb
les
leave
loop
fiadds
add
xchg
pop
pop
out
mov
gs
cmc
icebp
daa
and
adc
mov
pop
loope
outsb
pop
ja
mov
rolb
pop
mov
mov
sub
fbstp
sbb
adc
mov
push
sub
js
xchg
pop
mov
out
lahf
pop
clc
add
inc
sti
das
push
fistpll
xchg
pusha
loop
jecxz
jmp
mov
lret
sbb
lds
and
push
sahf
jns
jg
pop
and
fstps
ja
mov
jg
mov
fimull
in
push
sti
ret
lock
fmuls
hlt
jo
xchg
and
mov
or
cmp
fcomps
dec
mov
test
rcll
inc
sub
mov
push
loopne
stos
sbb
xchg
xchg
ja
ret
xchg
dec
mov
sub
outsl
jle
repz
xchg
or
dec
mov
jo
movsl
inc
adc
out
and
rcrl
add
imul
or
sbb
mov
and
dec
test
mov
lods
dec
iret
stos
orb
dec
add
fists
fsubl
imul
pushf
clc
rorb
adc
push
mov
test
mull
int
fsincos
and
in
movsl
sbb
lods
dec
cmpsl
shrl
cmpsl
cmp
jnp
aaa
loope
mov
addr16
mov
inc
or
xor
cmp
repnz
mov
pop
lret
adc
test
push
nop
xlat
lcall
loop
inc
jl
xchg
fcom
ret
xor
add
out
leave
jns
sub
push
sbb
and
aam
aaa
xchg
push
inc
std
xor
xchg
repnz
add
daa
sub
jl
push
out
xlat
in
sbb
cmpsl
loop
nop
lret
jo
jb
lock
es
push
or
push
rclb
xor
push
add
sub
das
pop
std
arpl
je
test
arpl
aam
xchg
shl
sub
mov
mov
sub
movsl
jg
loop
out
sbb
mov
cmp
xlat
mov
mov
aad
movsb
addl
mov
dec
xchg
sub
mov
adc
lcall
sbb
mov
push
pop
out
xchg
jo
sub
popf
xor
push
jle
pop
and
and
adc
dec
cli
repz
addr16
mov
cmp
dec
aaa
inc
mov
pushf
xchg
sub
test
and
jle
pop
mov
aam
scas
aad
and
ja
xor
insb
and
cmp
pop
mov
dec
xchg
pop
push
bound
in
cmp
inc
mov
mov
lea
pusha
mov
xchg
jae
xchg
popa
stc
test
push
cmpsb
pop
cmp
cmp
add
sahf
sub
in
ds
int
fcoms
cmpsb
movsb
sbb
push
push
pop
rcr
sub
dec
inc
ja
pop
pop
xchg
cli
xlat
add
out
mov
jmp
minps
in
cltd
imull
push
sbb
adc
imul
adc
ja
sar
das
push
push
or
xor
cmp
std
jb
shll
lods
cltd
imul
pop
push
aaa
xchg
xor
mov
mov
fucomi
dec
addb
inc
arpl
and
lds
sbb
aam
gs
push
mov
sbb
test
cmpsb
fistps
cmc
mov
mov
sti
or
xchg
loopne
pop
mov
push
add
inc
repz
outsl
dec
shll
mov
cwtl
int3
test
pop
addb
cs
dec
and
mov
in
mov
push
pop
pop
negl
pushw
test
decl
cmpb
and
int
or
pop
add
xchg
jp
lds
xorb
jg
jne
jne
jp
aad
or
mov
gs
lahf
push
pop
add
call
sarb
and
movl
jg
sub
jae
xlat
adc
dec
arpl
test
insb
and
into
jne
xchg
enter
sti
icebp
sub
xor
pop
jae
mov
cmp
or
fmul
or
mov
lds
adc
mov
jge
imul
inc
rorl
iret
push
loopne,pt
pop
inc
xor
jbe
test
addl
mov
push
inc
repnz
fucompp
inc
repz
movsl
pop
adc
fidivrl
or
lock
push
mov
mov
dec
cmp
push
je
loop
roll
shll
sbb
test
or
rclb
pop
lds
sbb
add
add
mov
and
call
mov
mov
enter
jnp
cwtl
push
dec
int
stos
adc
movsb
xor
push
xchg
shr
and
jge
pop
imul
jnp
jae
dec
mov
or
out
ds
dec
pop
cld
mov
jp
nop
lgdtl
mov
in
ljmp
iret
mov
nop
test
cmp
fadds
data16
push
sbb
loope
push
push
les
in
ds
ficomps
arpl
add
mov
and
lret
xchg
andb
cltd
ja
scas
mov
sbb
stos
sahf
add
sub
xlat
stc
sbb
push
mov
andl
test
ret
jge
or
mov
bound
jae
sbb
iret
fscale
cmpl
adcl
sahf
mov
adc
pop
int
in
mov
mov
sub
pop
daa
pop
push
mov
sbb
mov
adc
loop
stos
inc
jp
inc
dec
jg
xchg
and
jbe
jecxz
mov
enter
mov
jl
test
call
and
adc
jo
clc
and
aam
loope
xor
xchg
push
xor
lret
sti
lea
mulb
jp
jbe
and
jbe
lcall
push
in
out
xchg
cmp
jmp
push
aas
pusha
in
lock
lret
xchg
mov
pop
int
cmp
mov
xlat
mov
cmp
lret
mov
lock
mov
ljmp
aas
scas
loop
xor
test
sub
push
mov
es
fnclex
jae
out
jmp
mov
adc
sub
shll
into
jns
pop
push
sbb
and
sbb
adc
arpl
xlat
xor
insb
cwtl
push
and
aam
arpl
sub
addr16
dec
mov
jmp
daa
shlb
shll
adc
xchg
jge
lods
js
dec
push
fs
sbb
dec
mov
push
cmpsb
add
push
or
cmc
das
sahf
aaa
test
mov
pop
fistpll
imul
pushf
xchg
inc
cmp
mov
hlt
and
addb
cmp
and
add
xor
inc
xchg
push
push
outsl
ret
jns
sbb
dec
rclb
jnp
push
dec
popa
nop
data16
clc
jp
sub
test
cmp
sbb
inc
sub
shlb
xchg
pop
sbb
mov
push
add
in
popf
loop
cld
cmp
in
and
inc
fidivrl
or
jno
pop
iret
sbb
cmpl
lock
cmp
orb
in
not
movzwl
fcmovu
or
jp
inc
sub
xor
dec
or
fnsave
dec
outsl
mov
inc
lcall
lods
jne
test
inc
xor
inc
sahf
fdivrs
xor
mov
in
popa
sarl
push
psubw
pushf
shrd
mov
lret
lret
nop
pop
insb
shll
pushf
xlat
insl
push
into
icebp
mov
mov
add
mov
cmp
ret
es
ret
icebp
mov
mov
insl
pop
stos
xchg
data16
dec
fs
sbb
inc
cmp
lret
int3
push
mov
in
negl
mov
xchg
fmull
pop
aad
xlat
mov
cmp
sub
negl
jge
cmp
outsl
into
xchg
stc
and
std
jno
and
ret
clc
pop
icebp
in
in
js
inc
and
sbb
ljmp
mulb
cmp
add
orl
repz
decl
sub
adc
loope
add
ret
cltd
fildl
rcrl
pop
cmc
add
movsl
jmp
sbb
lock
cmp
fsubrl
jg
lcall
ret
roll
insb
fldl
push
lods
lretw
scas
aas
outsl
mov
sahf
scas
mov
fstps
mov
lods
ret
push
ljmp
pop
out
cmp
xor
jg
inc
adc
add
add
or
pusha
testl
lds
icebp
xlat
lds
dec
pop
sub
xchg
shll
mov
mov
leave
in
push
sbb
lock
jl
pop
mov
mov
dec
imul
nop
and
inc
jmp
bound
jbe
stos
pop
push
inc
out
inc
mov
and
paddsb
fs
cmp
fwait
icebp
push
loope
mov
dec
fcomi
aam
jmp
mov
pop
mov
into
jmp
imul
clc
push
leave
imulb
jmp
imul
shl
and
push
xor
dec
cli
push
push
out
adcl
fnstcw
stos
xor
push
pop
subl
jb
add
and
jecxz
mov
sub
push
rclb
rcr
push
lods
cmp
imul
xchg
xor
sbb
jne
jmp
dec
stos
cmp
test
or
lods
and
mov
or
mov
cmp
jl
out
sub
mov
outsl
hlt
sahf
cmpsl
imul
sahf
cmp
adc
cmp
mov
les
leave
ret
inc
daa
inc
adc
insb
push
sahf
int3
jg
or
std
js
pusha
in
fsub
mov
xchg
test
mov
repnz
bound
add
pop
mov
xchg
xchg
xchg
xlat
mov
mov
insb
cli
mov
pop
out
push
out
dec
sub
jb
into
jp
jp
mov
xchg
pop
and
and
repz
mov
sub
in
mov
xchg
repz
out
test
pop
add
sbb
or
mov
xchg
adc
test
repz
pop
fwait
sbb
movsb
dec
loop
xorl
clc
mov
inc
shl
incb
jmp
jecxz
pop
repz
sti
inc
imul
div
fxch
add
mov
xchg
push
movsl
test
inc
push
test
std
or
push
adc
xor
cmpsb
sbb
insl
push
cwtl
and
add
xchg
data16
std
enter
fmulp
xchg
sbb
insb
jg
push
es
cwtl
or
lds
outsl
cmp
xor
pop
mov
mov
mov
js
and
mov
mov
leave
mov
bound
xor
aad
mov
inc
jbe
repnz
or
push
adc
fs
js
scas
jb
push
mov
mov
jb
imul
pop
and
lret
jp
mov
das
jae
sbb
xor
sub
xchg
scas
push
paddq
sar
int3
mov
andb
inc
jo
dec
inc
pop
sti
scas
xlat
in
sahf
or
push
sub
push
ljmp
insl
add
xchg
jbe
mov
pop
or
adc
mov
cmpsb
arpl
popf
push
daa
sub
call
pop
lock
icebp
dec
sub
pop
or
xor
sub
xor
push
jb
xchg
jmp
add
push
jle
mov
outsl
mov
pop
xor
and
inc
jp
push
inc
lcall
in
bound
fcomp
mov
not
mov
outsl
mov
cmp
mov
insb
sbb
stos
sbb
movsl
or
sbb
jmp
cmp
xchg
xor
jle
jl
mov
mov
mov
dec
in
movsl
lock
jb
icebp
mov
bound
or
loope
into
ficoms
push
pop
jp
add
andl
cmp
mov
sahf
shll
pop
aaa
aaa
lods
movsl
push
push
mov
rcrb
rcll
or
orl
xchg
mov
out
sarb
pop
jb
mov
cmp
popa
add
je
xchg
sub
aad
adc
mov
add
push
cs
or
xchg
stos
jl
imul
idivb
nop
cmp
insl
icebp
mov
jmp
or
or
sub
lcall
lahf
sub
adc
adc
cmpb
in
or
fs
sbb
vpunpckldq
lea
mov
movsl
adc
cmp
fldcw
push
pop
je
sbb
cli
xor
sub
test
push
sti
in
ret
ss
or
rorl
xor
xor
pop
lcall
ds
pop
imul
push
popa
int3
add
lods
dec
cmp
in
mov
sub
stos
lcall
dec
or
leave
repz
adc
in
jnp
jb
jae
mull
aas
imulb
xchg
jp
sub
loop
mov
aad
xor
jl
out
fwait
add
mov
popa
sub
pop
movsb
ljmp
push
bound
add
push
aas
mov
mov
mov
lods
push
sbb
cmp
lret
or
mov
sbb
push
xchg
outsb
xchg
je
pop
stos
xchg
pop
stos
and
int
adc
jge
cmp
pop
stos
mov
xor
mov
pminsw
dec
pop
inc
jmp
sbb
lock
mov
sbb
repz
mov
push
sub
add
fwait
cltd
push
popf
xlat
or
arpl
lahf
jmp
ja
lret
fildl
sub
mov
sarl
cmp
xor
test
insb
add
in
sahf
sbb
mov
enter
rorb
xchg
add
sbb
jle
daa
push
scas
pop
mov
mov
inc
out
push
das
cli
push
jle
add
bound
jle
jle
mov
pushf
mov
jns
out
xlat
into
repz
inc
cld
inc
and
adc
adc
pop
add
sar
jno
push
pop
or
mov
push
in
lods
stc
subl
mov
pop
popf
inc
jne
push
shll
mov
and
jo
lea
inc
out
pop
push
nop
insl
jae
mov
ljmp
push
add
sarb
in
mov
jmp
rcl
cmp
mov
ficoms
iret
out
sarb
fdivrs
out
pop
fldt
mov
pop
xchg
or
incl
mov
jns
in
pop
int
inc
inc
test
pop
xchg
jle
push
dec
mov
dec
dec
xor
and
aam
loopne
pusha
inc
push
cmpb
pop
les
xchg
ss
jae
jg
roll
jecxz
decb
scas
cmp
pushf
cli
ja
push
dec
sahf
cwtl
xchg
adc
sub
jae
shrl
inc
stc
xor
push
mov
adc
or
into
jae
cmc
mov
scas
and
adc
icebp
cmp
xor
sbb
inc
xor
leave
shl
or
or
fcompl
pop
and
or
jg
sbb
mov
mov
push
mov
pop
inc
daa
or
aam
mov
jl
push
mov
adcl
xor
xchg
test
mov
repnz
mov
rolb
xchg
std
repz
pop
mov
fsubl
sbb
shl
nop
aaa
mov
daa
xchg
fnsave
lds
lahf
lods
xchg
sbb
dec
xor
jns
mov
pop
cmpsl
jg
cltd
or
and
adc
adc
add
std
addl
scas
push
xor
xchg
jo
lret
hlt
rcll
mov
jl
adc
rorb
mov
adc
xor
enter
fcoml
pop
cmp
push
iret
xchg
push
loop
or
jmp
pop
loope
test
inc
repz
les
cmpl
jo
push
orb
adc
out
sub
into
insl
fdivrs
push
mov
inc
xchg
and
cltd
insl
mov
fadds
xchg
add
adcb
jno
cmpsl
jo
sub
repnz
aas
inc
scas
popa
cltd
inc
mov
lcall
xchg
fldl
lods
mov
xchg
mov
jl
xor
adc
dec
pop
xchg
sarl
cmp
loopne
cmp
lds
sub
mov
sub
or
xchg
xlat
pop
mov
cmpsl
push
jle
push
rcr
mov
mov
xchg
xchg
inc
cli
in
out
sahf
in
xor
test
icebp
movsb
add
push
jmp
add
mov
jg
movsb
loopnew
rorl
call
jnp
ret
dec
cwtl
and
dec
mov
movsb
mov
xchg
push
push
outsl
adc
xor
jg
mov
loope
jnp
lahf
mov
xor
in
xchg
insb
pushf
or
scas
push
or
jmp
xor
jae
or
imul
mov
in
push
inc
xchg
outsl
pop
ret
cmp
imul
sarl
addr16
mov
lock
add
aas
xchg
jge
inc
push
mov
jns
les
xchg
xchg
fwait
icebp
jp
jmp
lret
ret
sub
add
das
aaa
int
ja
or
mov
ja
je
inc
adc
push
sti
aas
pop
xchg
inc
cmp
xor
dec
repnz
xchg
lret
sub
xor
xor
xor
loope
pop
mov
lret
add
jle
add
fcoms
loopne
mov
add
push
fldcw
int
push
and
xchg
rclb
cmp
jb
dec
std
sub
or
pop
xor
mov
lock
fnstsw
ss
test
jmp
movb
xchg
and
xlat
inc
aaa
xor
repz
arpl
ror
add
jnp
mov
dec
or
jle
test
inc
or
in
dec
push
addl
stos
pop
imul
aas
jge
cmp
add
xchg
sahf
outsl
ret
adc
js
adc
ret
outsb
cmp
outsb
outsb
fiaddl
mov
jb
push
filds
shr
cmp
xor
loopne
xor
fldcw
and
push
and
inc
cmp
sbbb
and
xchg
pop
test
clc
mov
sbb
vxorpd
cwtl
outsl
dec
push
and
xchg
jb
ljmp
sbb
insl
pop
ficoms
ljmp
mov
and
cmp
pop
cmc
mov
inc
and
dec
inc
xchg
push
stc
inc
fsubrp
inc
cmp
xchg
ljmp
mov
aad
inc
or
inc
fcompl
and
fdivrl
lcall
add
out
stos
call
or
cmp
ret
fisubl
ljmp
int3
pop
cmp
cltd
lret
dec
jno
insl
push
xlat
sti
xchg
and
pop
stos
inc
mov
aad
fistps
jp
sub
sub
mov
and
xchg
sbb
jne
pushf
mov
cmp
pushf
sbb
mov
mov
dec
lret
sbb
in
dec
adc
aaa
insl
xor
repnz
lahf
outsb
ljmp
jle
pop
cmpsl
rclb
inc
lea
shll
and
nop
std
into
enter
dec
add
adc
out
or
mov
pop
cmp
loop
xchg
insb
cltd
mov
stos
dec
add
popf
xchg
lock
cmp
sarl
cmp
lcall
xor
adc
in
ljmp
mov
das
xchg
imul
inc
js
clc
cld
xor
cmp
jp
mov
adc
mov
repz
lret
inc
push
inc
xor
out
lret
dec
ds
js
addr16
ret
call
mov
cmpsb
mov
cmp
pop
pop
xchg
dec
push
jo
push
stos
push
sub
pop
repnz
popf
cs
jmp
test
jae
ffree
cmp
add
xor
pop
les
std
out
sub
fldl
cltd
dec
jle
pop
lods
pop
ret
sub
hlt
jg
scas
fstpl
test
or
stos
repz
push
lds
mov
lds
add
js
leave
jb
int
jnp
addl
cmpb
mov
mov
fcomps
dec
push
jle
stos
cmp
adc
adc
inc
xlat
rcr
push
out
mov
pushf
dec
xchg
xor
lcall
mov
int
jg
pop
mov
daa
repz
and
cmp
xchg
mov
fbstp
in
inc
and
mov
dec
pusha
mov
cmp
dec
inc
xor
xor
lds
leave
fisubs
xchg
fistpll
inc
jne
popf
loop
loop
pop
inc
mov
jbe
rorb
ret
xchg
inc
fs
ja
add
sbb
sbb
aad
adc
mov
mov
sub
in
cli
lahf
mov
pushf
and
sbb
add
mov
icebp
movsb
push
push
jp
ljmp
jge
leave
push
popa
div
cmc
xor
push
data16
pop
loop
aad
mov
loope
dec
inc
cmp
ret
leave
dec
fidivrl
jmp
xchg
insb
jnp
sti
mov
xlat
mov
aam
sbb
xchg
imul
inc
push
push
jg
jl
lods
scas
xchg
aam
xor
xchg
nop
cmpsl
inc
fwait
fwait
mov
xorl
xor
xchg
out
xchg
outsl
test
outsb
jno
mov
mov
push
loopne
mov
sbb
je
cmpsl
pop
xor
or
jecxz
and
pop
stc
push
mov
mov
into
leave
jae
popa
bound
add
popa
xchg
lock
dec
clc
or
push
arpl
push
sbb
mov
add
jmp
psubw
mov
cmp
sbb
or
lock
clc
pop
pop
enter
sbb
push
lods
aaa
scas
fwait
pop
mov
jae
xor
enter
in
mov
pop
jle
add
mov
push
inc
pop
sarb
mul
mov
call
xchg
adc
and
mov
or
loope
xchg
mov
cmc
mov
loopne
jns
incb
add
pop
fldl
scas
lods
or
movsb
aad
ss
psraw
cmp
movb
fs
xchg
shr
ds
xchg
jae
jmp
lock
fstl
clc
nop
jmp
mov
sarb
adc
hlt
lock
ds
and
in
mov
mov
das
jl
es
adc
xor
and
orb
push
enter
clc
or
leave
ja
adc
or
shl
mov
fwait
xchg
jg
jns
jae
ja
sub
add
ja
rcrl
aad
push
sub
add
adcl
les
int
bound
add
and
add
sbb
jl
push
cmp
adc
inc
push
push
repz
jmp
stos
mov
sub
mov
mov
xchg
xlat
iret
xchg
daa
push
pushf
sub
aam
movsl
add
in
imull
jbe
adc
and
inc
scas
shrb
xor
mov
mov
stc
push
cmc
push
xchg
rorl
test
push
inc
add
rcrl
cmp
mov
xor
mov
xor
push
xlat
ds
add
mov
push
mov
in
pusha
pusha
out
stc
cs
hlt
jnp
add
and
dec
enter
rol
cmp
sub
pop
aad
xor
adc
pusha
stos
push
pop
lcall
or
cli
and
push
sub
adc
je
jb
iret
jecxz
test
mov
and
push
push
icebp
dec
addl
xchg
popf
notb
dec
mov
and
xchg
das
and
daa
fadds
cmp
test
fsubp
bswap
insl
leave
test
mov
aas
dec
mov
sbb
jns
in
xor
mov
sbb
mov
xchg
out
mov
mov
inc
or
and
or
repz
pop
int3
mov
cmpsl
shrb
sbb
call
pop
loopne
adc
call
cs
aam
into
adc
sub
filds
in
sbb
jl
test
inc
test
mov
pop
pop
xchg
jl
and
nop
push
shl
pushf
cwtl
outsl
xchg
fbld
cmp
daa
sub
loop
lods
in
xchg
or
cmpsl
in
fidivrs
imul
push
and
mov
cmc
xchg
mov
in
add
jne
fwait
mov
imul
jg
jecxz
jnp
cmpsl
popa
lret
jecxz
sub
andl
mov
test
loope
mov
sbb
lahf
pop
imul
imul
cmp
sbb
mov
dec
ret
bsf
clc
xchg
aam
call
or
adc
mov
inc
push
stc
imul
insb
add
mov
cmp
sub
test
push
xor
fwait
xlat
lcall
dec
js
push
or
into
aam
mov
shlb
pop
mov
js
cmp
xchg
test
test
out
ljmp
gs
lods
addl
xor
pop
and
in
aam
adc
rorb
inc
and
add
inc
jns
int
jbe
mov
ja
cmp
jne
cmp
ret
out
push
lahf
jo
jnp
sub
inc
pop
mov
xlat
fstpt
sub
inc
clc
mov
cmp
mov
and
sti
add
bound
mov
movsl
mov
dec
adc
sub
scas
jp
addl
xchg
sbbb
jbe
scas
mov
xor
and
mov
ret
call
ret
jg
jecxz
push
in
adc
and
xor
aaa
data16
jno
mov
out
and
lcall
mov
test
inc
xchg
mov
repz
push
dec
jle
cmp
xchg
xchg
jle
jns
jns
out
js
mov
mov
mov
cmp
scas
inc
adc
and
or
or
cmpsl
sbbl
dec
pop
sbb
cmp
cmp
jl
inc
ja
or
push
icebp
scas
pop
lods
inc
pop
mov
push
add
ficompl
sub
andb
test
insb
pop
push
add
or
negl
daa
adc
pop
mov
push
test
into
push
testb
mov
bound
shrb
incb
sub
movsl
out
fwait
jcxz
lods
arpl
lcall
mull
mov
or
aaa
inc
cmp
loopne
xchg
jmp
mov
pop
jns
out
xor
xchg
add
out
imul
stos
testl
adc
fildl
aas
jmp
imul
in
cwtl
fimull
pushl
pop
das
mov
xchg
push
mov
mov
dec
nop
and
mov
sbb
out
xlat
mull
filds
xor
inc
or
out
sub
icebp
adc
scas
testl
loopw
mov
insb
int
fisttpll
clc
pushfw
leave
dec
lea
mov
lret
mov
adc
adc
in
sbbl
test
inc
mov
push
pop
sub
or
sub
stos
push
shlb
fwait
cmp
mov
sub
fdivs
out
out
jne
pop
pop
fstpt
lock
and
xchg
sahf
xor
jecxz
mov
pop
mov
adc
dec
jg
fs
daa
push
fnstsw
pop
ljmp
cmp
shr
pop
push
rcrb
xchg
lds
mov
test
cmpsl
hlt
gs
sahf
mov
inc
jno
push
jbe
insl
mov
push
cmp
cmp
sbb
sbb
movsb
adc
cli
setae
dec
sbb
imul
dec
and
push
sar
adc
lods
in
or
outsl
xor
xor
push
mov
cmp
jo
ja
mov
dec
add
ret
inc
pop
jbe
les
and
pop
push
inc
ret
push
dec
and
pop
jmp
mov
push
jecxz
lock
lahf
xor
mov
je
fdivl
ja
cmc
insl
aam
jns
out
lcall
push
out
add
ffree
aad
jecxz
mov
and
xchg
mov
dec
aam
jb
xor
dec
dec
push
cmp
cld
push
xor
cltd
test
adc
cmp
mov
cmp
jg
or
pop
xchg
popa
orl
in
cmp
xchg
les
mov
pop
inc
cmp
insl
pop
dec
pop
or
out
and
aam
and
cld
shl
es
cli
dec
cwtl
inc
xchg
sbb
sbb
cwtl
stos
bound
test
jp
ret
nop
or
jle
inc
mov
into
pop
rclb
pop
cmp
add
adc
or
cli
orb
push
rolb
pop
cltd
and
inc
mov
fwait
sub
iret
ficoml
add
sbb
add
mov
scas
add
xor
pop
fwait
sub
cmpsb
jge
test
shrl
adc
xchg
pop
sub
scas
and
inc
aam
dec
stos
mov
lret
ja
cmp
lods
imul
outsb
test
movsl
xor
sarl
sarb
xor
fmull
jmp
inc
mov
imul
xchg
pop
or
sub
or
sub
call
xor
pusha
fisttps
fistpll
mov
lock
scas
rcl
pop
xor
pop
imul
test
inc
std
mov
in
pop
mov
fists
pop
int
daa
cmpsb
dec
test
mov
push
sub
cmc
popa
lock
rol
inc
pop
cltd
aas
incb
movsb
push
pushl
imul
mov
ljmp
outsl
cmp
and
xchg
cmpsb
pop
cmc
icebp
mov
test
sbb
and
ljmp
daa
sub
dec
nop
adc
jp
pop
fwait
in
lahf
call
psraw
jle
cli
xchg
dec
jl
andl
jle
psrad
test
mov
inc
mov
cmc
lret
sbb
push
rorl
lds
bound
je
push
insl
push
cmpsb
imul
rorb
xor
imul
gs
push
jmp
loop
sbb
fnstcw
scas
mov
loop
dec
ss
insl
insl
pop
xorl
insl
fisttpll
lods
mov
arpl
popl
mov
add
fistpll
add
pop
outsl
out
rcl
mov
jbe
dec
jne
and
xor
mov
sbb
add
mov
dec
insl
shll
fcmovb
pop
push
mov
lds
lods
mov
sub
std
mov
xor
xlat
xorb
sub
and
call
lret
mov
les
in
cltd
cltd
insl
ja
repz
outsl
or
mov
sub
push
fucom
xlat
cld
and
sub
dec
cmpb
fdivl
cld
mov
cmpsl
mov
out
ljmp
rorb
sub
lret
cmpsb
add
arpl
sub
jbe
mov
jb
nop
ds
fs
stc
rorl
aam
push
lock
lds
lcall
test
pop
lcall
mov
sahf
xchg
sbb
sub
fmul
cmp
test
outsl
adc
mov
mov
aam
adc
sbb
jecxz
bound
sti
lock
ret
add
ds
fdivrs
mov
sahf
sbb
jmp
lds
sbb
ret
dec
mov
mov
out
mov
jo
push
inc
sub
inc
add
data16
pushf
iret
fdiv
fdivrs
popl
xchg
shlb
mov
cld
inc
jg
mov
sahf
cmc
shl
jg
lea
mov
mov
fnstsw
jecxz
lret
jno
mov
cmp
cmp
cmpsl
or
mov
add
jge
dec
push
xorl
xchg
lret
pop
pop
sbb
and
xor
mov
int3
lods
dec
jmp
dec
fs
lds
bound
jp
in
loope
out
stos
sbb
and
mov
fmull
and
mov
sbb
sti
dec
into
js
xchg
repz
mov
leave
lret
lods
cltd
xor
xor
test
shlb
add
and
pop
out
aam
leave
adc
sub
fs
out
rolb
inc
jns
pusha
cmp
push
adc
pop
das
movsl
or
mov
mov
cmpl
lock
call
aam
or
int3
test
inc
xor
aaa
cmp
xor
sbb
mov
les
test
cld
lods
lea
in
dec
and
push
jecxz
int
arpl
mov
cmp
cmc
lret
mov
test
sbb
cmpsb
inc
or
scas
outsb
adc
mov
hlt
pop
sub
ret
enter
fstpl
pusha
adc
mov
or
cs
vphaddbq
mov
push
jne
insb
inc
jno
stos
sbb
pop
adc
jb
out
adcb
cmp
or
adc
lcall
pop
mov
rorb
enter
add
sub
dec
push
fdivp
sbb
sbb
push
xor
gs
imul
mov
or
inc
iret
outsl
push
mov
push
ret
enter
sub
test
pop
sahf
xchg
xchg
fldenv
loope
mov
jne
mov
nop
popf
mov
nop
mov
push
sub
loope
je
out
push
jnp
push
notl
ffree
stos
dec
test
inc
fwait
bound
cmpsl
lcall
sbb
test
mov
dec
push
cs
out
inc
xchg
arpl
in
mov
inc
lea
inc
mov
xchg
sbb
pop
or
jecxz
mov
call
and
bound
das
push
lds
aaa
sar
mov
orb
dec
lahf
mov
insl
das
aam
ds
cld
mov
nop
divl
cmp
cs
stos
sub
jo
jle
loop
popa
xor
ret
inc
addl
insb
pop
repz
xor
test
mov
mov
cmp
scas
aaa
xlat
mov
add
adc
jbe
fadd
add
or
ljmp
inc
mov
int3
aad
cmp
sub
push
pop
decl
jno
mov
aam
add
jle
imul
xor
clc
movsl
push
ficoml
push
push
mov
jmp
cltd
mov
subl
fdivrp
sbb
sub
push
jne
xor
dec
ja
mov
dec
loopne
cmp
das
rolb
xchg
cltd
andl
pop
js
or
mov
outsb
lret
loope
aas
sete
mov
jns
movsl
scas
cmpsb
fs
pop
or
arpl
pop
loopne
inc
clc
inc
xchg
bound
inc
in
punpckhbw
push
mov
mov
dec
cltd
cld
jecxz
stos
pop
movsb
cmc
jge
loope
xchg
loop
int
mov
xor
fucom
ss
clc
xor
adc
in
pop
add
mov
xor
ds
inc
dec
xor
fadds
jmp
and
add
movsl
inc
adc
lock
arpl
insl
dec
std
lods
fsubs
push
sbb
cmp
inc
mov
pop
sbb
xlat
fs
lea
clc
cmp
and
lock
cld
mov
mov
imul
adc
add
rcrl
push
mov
mov
mov
xchg
adc
jmp
mov
add
lret
add
xchg
sub
fstpl
or
mov
mov
ljmp
hlt
mov
push
in
imul
mov
mov
push
in
out
insb
mov
pop
hlt
lock
inc
and
mov
fbld
jb
subl
inc
xlat
test
and
and
jl
inc
sub
mov
pop
jecxz
mov
shrl
mov
mov
sub
dec
rol
call
sarl
fs
sti
shll
mov
pop
sub
jb
pop
movsl
or
pop
nop
or
pop
les
lds
pop
lcall
jg
int
lahf
jmp
pop
rcll
push
mov
out
nop
jns
out
cltd
jae
ljmp
push
adc
pop
and
jo
stos
test
pop
mov
xchg
pop
iret
xchg
inc
ret
int3
cmc
inc
orb
shl
adc
xchg
call
mov
aam
popf
pop
in
lock
fistl
cs
dec
rcrl
call
shr
lods
mov
insb
inc
in
js
mov
and
adc
mov
sub
jae
les
adc
and
int
xor
daa
pop
push
pusha
xchg
and
sub
sub
mov
jno
dec
lds
imul
inc
aas
mov
test
pop
js
push
mov
push
push
scas
pop
mov
outsb
lahf
mov
cmp
pmulhw
cmc
mov
sarb
xchg
cmpsl
xchg
adc
sbb
inc
add
inc
outsb
rol
adcb
subb
sub
lahf
mov
imull
xor
test
push
std
add
sbb
push
sti
cmc
ja
ret
sub
repnz
mov
cmpsl
cmc
pop
adc
icebp
sub
mov
mov
push
push
daa
sbb
push
aaa
xor
adc
sbb
mov
mov
fidivrs
push
ljmp
pop
out
pop
clc
jp
repnz
sbb
outsb
mov
outsb
push
mov
cli
inc
mov
xor
popa
daa
push
jle
scas
imul
test
push
xchg
push
sub
dec
call
pop
test
xor
dec
jbe
push
popa
data16
outsb
cmp
negl
ja
jp
push
pop
push
sbb
xor
lret
mov
aam
out
mov
push
idivb
loop
notl
push
dec
jnp,pn
dec
mov
in
insb
xchg
and
dec
mov
nop
fnsave
inc
in
push
sbb
mov
stos
leave
cmp
and
xorl
test
lods
bound
and
pop
mov
mov
jmp
jp
call
arpl
sbb
xlat
cmpsb
pop
dec
out
sub
out
push
jbe
daa
sbbb
mov
test
add
sbb
cmp
pusha
aaa
add
aam
add
sub
ljmp
rclb
ds
and
sub
pop
pushw
lret
ret
jbe
sub
push
hlt
jmp
jae
cmp
xor
ss
add
dec
sbbb
int3
fmul
cmc
jns
jbe
lcall
mov
jbe
mov
sarl
jl
jno
jne
lcall
sub
push
imul
fs
cmpsb
sbb
test
bound
js
in
std
or
push
xchg
in
sub
fnstcw
sbb
lods
popf
adc
fistpll
jo
mov
mov
lret
out
mov
xchg
gs
rorl
iret
pop
in
stc
pop
daa
pop
gs
lods
call
mov
ret
sub
add
ror
notb
jne
hlt
push
push
aam
aam
rcrb
xchg
jmp
mov
jbe
mov
mov
xchg
jbe
xchg
imul
arpl
cwtl
sbb
sbb
je
pop
subb
pop
test
pmuludq
push
pop
pop
dec
xchg
movsl
or
std
mov
nop
xor
lea
cld
xchg
adc
scas
imulb
pop
jne
cmpl
loop
sbb
and
push
mov
mulb
cltd
addr16
mov
mov
and
pop
lods
lock
sbb
lret
xchg
jb
test
adc
popf
mov
jne
frstor
cmpsl
std
mov
ret
fucomip
cld
call
or
pushf
into
cs
orl
stos
clc
imul
cs
mov
fcomps
sub
mov
sbb
adc
or
fdivs
mov
and
call
add
pop
jae
cmpsb
push
scas
adc
shll
lds
jl
push
ret
mov
xor
lock
popf
adc
repnz
popf
sub
add
or
arpl
mov
mov
cmpsl
mov
ret
les
lea
mov
fbstp
in
pushl
pop
rorl
sbb
loop
rorb
subl
shrb
leave
sub
jecxz
xchg
pop
xchg
mov
mov
fdivs
adc
hlt
iret
mov
sub
xor
push
mov
mov
pop
int
lea
cmp
movsl
iret
pop
repz
sbb
leave
cmp
lods
or
sar
push
arpl
mov
mov
lahf
and
std
xor
in
add
lahf
dec
hlt
cmp
inc
mov
xorl
loop
inc
call
mov
sub
in
loopne
adc
cli
fisttpl
sbb
fsubl
outsb
shrl
mov
inc
xor
mov
dec
cmp
jle
mov
inc
sbb
in
push
mov
rcrl
lods
ljmp
out
pop
adc
fistpll
xor
xor
les
aaa
sahf
mov
fisubrl
inc
lods
fucomip
inc
lods
mov
cmp
dec
ja
ja
into
stc
nop
pop
test
lret
sahf
or
pusha
es
mov
outsb
xor
and
add
or
dec
in
outsb
hlt
mov
or
loopne
out
mov
pop
mov
xor
xor
or
cmp
mov
sub
nop
call
xchg
push
shrb
hlt
dec
push
aad
push
sub
ja
enter
test
jne
mov
flds
ss
das
jae
pop
nop
cwtl
bound
pushf
std
movsb
addb
ds
ret
xchg
cwtl
loop
stc
mov
leave
les
mov
ss
xchg
push
movsl
push
and
mov
out
xchg
lea
jns
mov
adc
in
push
std
roll
or
pop
mov
adc
icebp
dec
loopne
insl
adc
insl
sub
jns
dec
mov
xchg
in
pop
cmc
das
cltd
adc
repz
stos
in
xor
mov
dec
shr
mov
sar
rcrl
xor
sbb
jb
aas
mov
es
xchg
lea
out
cmp
mov
cmp
enter
sar
mov
lods
out
out
lock
insl
sub
lods
je
adc
mov
fists
ss
add
pop
icebp
mov
cwtl
sti
push
cld
enter
cs
and
test
das
mov
pop
cmpsb
xor
hlt
and
and
outsb
mov
cmpsl
mov
outsl
test
push
cltd
jl
cmpb
stc
aad
aas
test
fstpl
push
add
inc
jnp
pop
rsqrtps
jl
push
cmp
mov
xor
scas
pop
fisubs
pushf
jmp
movsl
xor
inc
in
ret
popf
sub
imul
xor
dec
and
les
sbb
adc
int3
dec
jnp
xor
and
add
mov
push
test
and
mov
and
mov
sub
dec
inc
lds
mov
aaa
fcomps
test
xor
rolb
subb
mul
test
inc
pop
sbb
sub
xchg
pop
or
shll
repz
xchg
inc
mov
outsb
adc
clc
cmc
mov
outsb
pop
enter
lcall
or
or
das
fwait
dec
outsb
dec
stc
cli
cmp
lods
adc
xchg
jnp
or
pop
das
stc
cld
aas
add
pop
xchg
fcom
inc
and
int3
sti
mov
andb
pop
int3
adc
test
pop
or
pop
jnp
cs
jnp
fwait
mov
addr16
mov
test
inc
and
dec
mov
mov
cmc
fs
mov
pop
lea
jp
out
push
xor
inc
int3
outsb
std
xor
cmp
adc
cmp
cld
and
out
dec
sarl
push
dec
xchg
shll
lcall
xchg
sub
arpl
test
jae
pusha
xchg
insb
pop
jne
dec
xchg
push
cmp
out
scas
and
stos
xchg
fdivrl
mov
mov
mov
ret
mov
call
pusha
aad
add
repnz
jmp
rclb
mov
test
dec
push
adcl
loop
sub
pop
dec
fstl
pop
and
xchg
sbb
imul
mov
mov
stos
jns
movl
lea
xor
xor
pop
loopne
sbb
scas
xor
andb
xchg
sbb
xor
and
dec
aaa
mov
ljmp
and
cmp
lea
push
neg
inc
fs
std
aad
sub
dec
jns
pop
cltd
xchg
xor
add
imulb
dec
jg
mov
xor
xchg
cli
push
das
bound
sub
imul
and
add
or
movsl
test
inc
into
mov
and
xchg
das
mov
pop
je
roll
jne
add
jnp
xor
inc
in
or
scas
or
outsl
and
mov
lcall
jae
clc
fistps
jg
fadds
mov
push
dec
inc
xor
mov
push
dec
lcall
sub
mov
xchg
aas
adc
icebp
mov
loopne
mov
xor
add
clc
and
sbb
push
aam
push
test
fisubrs
sbb
push
jp
and
insl
divl
sti
and
cwtl
loope
dec
cmp
call
gs
jmp
rorb
movsb
lock
lfs
aad
xor
push
push
push
and
enter
setge
shrl
test
sbbb
cmc
stc
xor
lret
fwait
aaa
cld
pushf
loope
dec
daa
mov
add
mov
mov
testb
sbbl
aam
cs
inc
arpl
dec
imul
dec
shll
mov
ror
mov
addr16
adc
xchg
test
and
call
mull
in
sub
adc
adc
pop
adc
mov
adcl
pop
xchg
sub
adc
ljmp
and
inc
fldl
sub
inc
movsl
mov
jae
flds
fsubs
int
or
pop
and
pop
xchg
push
mov
cmp
popf
push
inc
incl
lds
xor
pop
mov
rcrb
xlat
mov
mov
xor
rclb
add
das
xor
repz
aad
mov
daa
mov
cmpsl
in
push
pop
inc
mov
cmp
test
divl
xor
add
faddl
xchg
cmpsl
clc
mov
adc
adc
dec
and
fcmovnb
sbb
cmp
fcmove
outsb
dec
lcall
pop
mov
stos
and
roll
fmuls
test
insb
cmp
cltd
aaa
and
sbb
xchg
mov
cmp
adc
idivb
add
sbb
pop
mov
push
je
ds
and
xchg
pop
or
lcall
add
cmpsl
mov
jecxz
lret
mov
push
cmp
add
and
and
leave
mov
mov
lds
pop
in
adc
test
adc
stc
mov
divb
or
aam
push
lcall
sub
ja
pusha
and
mov
icebp
sbb
sarb
pop
out
int3
and
jns
aas
cmp
mov
imul
daa
mov
and
jmp
out
insb
dec
mov
imul
jge
push
dec
andb
push
jbe
scas
out
fbstp
notl
stc
sbb
mov
push
cmp
cwtl
sub
cmp
mov
roll
stos
xor
inc
test
inc
jnp
aam
insl
jnp
fs
int
sub
scas
sub
add
jl
xchg
repnz
xchg
jnp
adc
adc
sbbb
loopne
push
js
or
cmp
push
or
jne
test
out
sbb
add
lods
popfw
push
movsb
pop
jb
or
push
jp
xchg
data16
mov
xlat
hlt
imul
xchg
mov
leave
jae
sti
outsl
adc
pop
cltd
push
test
add
fs
ss
in
hlt
sub
sub
mov
sbb
inc
daa
jmp
ljmp
lret
jno
jp
sbb
arpl
sbb
push
mov
and
or
xchg
mov
js
xor
jne
out
testb
test
dec
xchg
xchg
inc
ss
rolb
mov
fnstcw
add
and
sbbb
jle
inc
outsb
pop
pop
ds
and
inc
cmp
sub
fnstsw
leave
mov
and
lahf
xlat
sbb
pop
rcl
in
mov
shlb
and
xorb
mov
sub
icebp
mov
inc
aaa
mov
dec
shlb
enter
aaa
dec
rcrl
mov
sbb
or
add
lret
nop
push
xor
or
aaa
ss
pop
outsb
mov
xor
mov
scas
cltd
lds
mov
stos
lock
inc
hlt
push
jae
push
push
fneni(8087
adc
and
xchg
inc
lret
push
push
inc
in
push
out
insb
std
sub
cltd
jae
xor
xchg
jae
jmp
pushf
lahf
aad
in
push
jmp
mov
shlb
mov
das
mov
aaa
out
inc
jns
aad
mov
and
dec
fsubs
movsb
ljmp
lea
pop
shr
sarl
mov
mov
or
je
aaa
stos
jg
iret
jo
scas
push
popa
or
dec
cmpsb
push
dec
cmp
cltd
mov
or
push
into
subl
mov
in
mov
xorl
enter
dec
andb
out
inc
ds
adc
or
mov
icebp
inc
push
ret
xchg
out
jbe
xchg
js
xchg
or
popf
dec
movl
jno
xor
das
lea
and
xchg
or
insb
es
xchg
icebp
mov
into
cmpsb
jo
test
jae
ljmp
dec
int3
cld
cli
add
pop
or
xlat
adc
aad
xrelease
daa
jne
out
test
test
addl
pop
lret
stc
daa
dec
stc
mov
sub
dec
jno
adc
aas
jmp
pop
mov
dec
sbb
ds
or
sbb
mov
cltd
cmp
push
dec
xor
xlat
mov
inc
icebp
je
mov
inc
jg
loopne
mov
dec
popf
mov
inc
xchg
pop
inc
lea
xor
sub
adc
loopne
sbb
or
pop
cmp
mov
adc
popf
je
bnd
insl
mov
xor
jo
test
sub
jno
inc
jo
arpl
fildl
adc
xchg
hlt
fisttpll
mov
cmp
outsb
rol
mov
xchg
mov
fiadds
push
and
out
sub
fldcw
aad
mov
in
notl
shlb
or
add
int3
dec
adc
xor
xchg
mov
sub
xchg
test
cmp
leave
repnz
sub
adc
add
mov
sub
push
insb
mov
xlat
scas
ret
lea
cmp
or
or
jmp
test
xorb
cs
lcall
adc
push
loop
and
push
push
loopne
ffree
xchg
insl
push
jmp
out
sbb
push
roll
jp
lahf
mov
push
fnsave
cmp
push
adcb
std
xor
mov
out
lahf
xor
jle
dec
jne
cld
mov
mov
adc
or
and
jle
pop
jnp
jns
divl
lret
cs
gs
mov
mov
adc
cmp
push
jae
sub
filds
out
mov
pop
rcrb
and
inc
jmp
rcrb
lcall
add
ret
pop
xor
loopne,pn
jo
dec
or
call
mov
mov
insl
incl
mov
dec
gs
push
cld
lea
xlat
outsl
ds
cmp
in
movsb
imul
add
push
cli
add
xor
movb
popa
cmp
cmp
add
pop
movsb
ret
outsb
mov
and
sti
push
cmpl
dec
popf
sub
xchg
xor
pop
sub
fucomip
xlat
jnp
aad
rcrb
inc
aam
mov
scas
or
inc
push
gs
cld
mov
jl
push
sbb
xchg
ds
das
call
cmp
inc
jae
sub
pop
dec
cli
mov
xchg
and
mov
jbe
fs
mov
and
push
fnstenv
test
mov
xor
ds
push
test
arpl
std
cltd
out
cmp
mov
inc
repnz
jne
sarl
sbb
jo
stc
repnz
imul
jo
test
aaa
into
shlb
or
mov
or
add
test
add
cmp
ret
and
xor
sub
sbb
adc
mov
add
push
cmpsl
pusha
divps
sub
xor
mov
repz
fldl
out
mov
out
or
cmp
xor
roll
mov
fidivrs
hlt
popl
sub
mov
aam
ret
or
loopne
int3
sub
lcall
add
in
cwtl
mov
imul
lock
jnp
and
sbb
out
dec
cmp
nop
jle
stos
test
cltd
inc
insb
std
mov
cmp
pop
inc
mov
adc
adc
sbb
gs
das
scas
ljmp
pop
nop
cmp
jp
movsl
arpl
cwtl
jl
les
cli
inc
and
cwtl
je
out
mov
hlt
arpl
cmc
insb
ret
pop
add
and
xchg
hlt
pop
out
mov
js
xor
cwtl
loope
stc
orb
aas
fstl
or
adc
or
jg
out
ds
pop
scas
add
mov
sahf
out
addr16
out
or
jl
cmpsb
or
xlat
psadbw
jmp
adc
mov
data16
mov
cmp
call
push
lahf
sub
les
rcrl
inc
jmp
pop
gs
icebp
or
aad
inc
inc
inc
jmp
cs
jg
enter
xorl
xor
cmp
sar
repz
inc
repz
add
adc
jns
jno
mov
and
aam
fsts
mov
iret
or
sub
divb
sbb
incl
ja
adc
or
push
xor
iret
mov
inc
and
shlb
and
cwtl
movb
bound
insl
out
int
dec
sub
push
mov
nop
inc
adc
fadds
mov
test
out
push
fdivr
stc
cmp
sbb
subl
js
push
movsl
xor
sub
repz
loopne
add
cmp
cwtl
add
stos
push
cmp
jne
aad
push
ret
mov
xor
js
mov
xchg
int3
stc
jb
cmp
std
push
sub
hlt
outsb
inc
sarb
xchg
call
daa
cmpsb
cmpsb
mov
mov
add
rclb
jge
and
mul
mov
sbb
enter
xchg
adc
adc
and
test
cmc
xor
dec
leave
and
popf
jmp
and
cwtl
adc
sbb
mov
in
out
insl
ljmp
mov
movl
sub
adc
jo
sub
push
xchg
mov
clc
scas
cwtl
bound
stos
pop
loop
xor
movq
cmp
dec
fwait
mov
jno
insl
out
and
addr16
adc
lcall
insb
sbbb
dec
aad
stos
xchg
outsl
pop
xorl
cmpsb
xchg
std
push
shr
jg
push
pop
aad
andl
xchg
rolb
mov
inc
xor
mov
pushf
int3
lock
movsl
out
lock
push
repz
push
roll
cltd
jns
jmp
test
xchg
mov
int3
and
mov
shld
sar
mov
aam
fisubrs
jmp
ja
mov
mov
mov
mov
sahf
aas
lret
ret
inc
pop
rcl
aaa
xor
mov
jmp
pop
inc
jl
mov
dec
jb
pop
xchg
adcb
repnz
cmpsl
xor
xchg
push
dec
std
mov
cmp
inc
push
loop
sbb
push
not
and
gs
cmpsb
inc
inc
ja
pushf
cmp
jp
add
in
or
ljmp
adc
jb
sbb
call
pop
push
jle
xchg
fistpl
mov
test
jl
popl
lods
adc
dec
cs
push
sub
nop
push
es
and
pop
dec
push
icebp
or
les
push
push
dec
pop
jns
insb
std
lea
insl
mov
adc
into
push
scas
mov
lret
and
outsl
pop
cmp
fidivrl
aaa
mov
and
movsb
cwtl
push
jne
sahf
ret
ss
gs
aas
popa
add
and
lds
scas
mov
pop
aas
mov
ret
inc
cltd
imul
jp
inc
xor
daa
or
sbb
lds
jmp
mov
sbb
mov
dec
ljmp
push
cmp
repnz
aaa
ret
cld
add
insb
push
gs
clc
aad
adc
test
out
ss
mov
in
pop
aaa
sbb
je
into
jg
aad
lcall
add
mov
mov
repnz
and
repz
pop
and
push
mov
and
or
lahf
pop
loope
jns
mov
mov
aam
mov
dec
adc
dec
dec
mov
mov
add
sub
cmpsl
scas
call
lock
int3
sub
pop
mov
es
push
cmc
add
jns
xchg
push
mov
jge
pusha
dec
repz
scas
and
out
xor
mov
lahf
sub
push
mov
or
xor
out
push
stos
pop
inc
xor
sti
sub
push
cwtl
leave
inc
iret
int3
jno
stc
sbb
in
push
test
andb
sbb
leave
and
add
pop
pop
cltd
insb
xor
mov
sub
lea
ret
jnp
push
pop
stc
push
mov
arpl
call
mov
fcomps
cmp
adc
inc
sbb
xchg
jle
arpl
jp
addl
xor
sub
push
out
mov
push
inc
or
ljmp
dec
cmp
fmuls
jmp
inc
adcl
loope
rcrb
mov
jge
cwtl
cmp
or
rcrb
jns
inc
call
mov
mov
faddl
jge
inc
icebp
aas
mov
sub
fsts
jl
xchg
add
shlb
sub
cmpsl
scas
lahf
out
popa
dec
mov
negl
jo
sbb
out
mov
out
push
icebp
cmp
adc
mov
test
cmp
js
pop
lods
adc
add
popa
lds
mov
sub
jae
sub
jae
lea
jno
mov
adc
xchg
loope
leave
mov
outsl
cmp
aam
mov
push
orb
addr16
movsl
xchg
push
dec
mov
out
addb
adc
lret
ja
lcall
gs
dec
sbb
cmp
mov
or
jb
pop
xor
sahf
sub
mov
mov
pop
fisttps
nop
pop
mov
in
mov
dec
test
push
and
aaa
mov
adc
cli
push
mov
mov
cmp
lret
lret
dec
bound
loopne
out
sbbb
not
mov
lods
lcall
pop
cmp
mov
les
xor
sub
rclb
out
je
cs
add
mov
inc
pop
mov
pop
and
xor
xchg
add
out
cs
mov
sbb
aad
jns
mov
jl
mov
hlt
mov
outsb
mov
xchg
and
stos
es
mov
imulb
rcll
repnz
insl
mov
jge
ret
test
das
cld
out
sbb
inc
lods
sbb
aaa
ror
cltd
and
ja
cmp
inc
dec
in
ret
cmp
fidivrs
fcoms
cmc
mov
loope
iret
pop
nop
pop
pop
xor
ljmp
dec
aad
int
andb
inc
dec
mov
outsb
fstps
pop
pop
mov
or
adcb
add
pop
sbbb
xchg
dec
test
ja
pushf
in
adc
cmpsb
mov
lret
cld
jg
das
shlb
pop
scas
mov
xor
std
notb
push
xor
jnp
mov
addr16
subl
test
jecxz
mov
mov
sbb
shlb
jne
push
int3
mul
jae
xlat
fsubr
pop
sub
lods
outsb
insb
cmp
sub
adc
stos
das
insl
mov
jnp
aaa
adc
cmp
push
adc
dec
push
pushl
inc
ja
in
or
outsb
imul
ficompl
inc
loop
ljmp
and
in
and
shlb
inc
out
add
rol
cmpsl
add
mov
fistpll
aas
push
fcomi
mov
pop
dec
mov
mov
pop
xorl
add
cmp
fildl
adc
pop
iret
out
push
aam
xchg
mov
ja
movsl
outsb
cmp
movsl
into
mov
fcoms
jmp
mov
xchg
in
imulb
xor
jo
push
lcall
movsl
pop
inc
into
mov
lret
and
push
scas
adc
inc
mov
cmp
shrl
pop
mov
jle
dec
cmp
hlt
xchg
out
cmp
dec
adc
stos
jb
push
shrb
xchg
xor
orl
fisubl
mov
inc
pop
fdivrl
ret
pop
pop
or
cmpsb
pop
ja
movsl
pop
fidivrs
push
gs
inc
ja
pusha
or
mov
dec
sub
ret
mov
mov
dec
sub
push
mov
iret
jmp
sub
aas
mov
push
cltd
sahf
pop
or
jmp
outsl
repnz
pop
repz
pop
mov
xor
in
or
ret
test
mov
push
jmp
repnz
add
pushf
or
test
jbe
sub
outsb
shlb
jp
clc
cmp
dec
fcmovne
adc
sbb
popw
out
inc
js
jno
cmc
orl
fdivrl
or
je
loope
jmp
scas
xchg
sbbl
mov
test
adc
pop
sub
lret
outsl
call
stc
lcall
jle
or
sahf
loop
mov
pop
sub
ljmp
dec
push
mov
lock
mov
push
in
cmp
in
incl
gs
pop
ret
or
outsb
and
inc
and
push
cs
mov
int3
add
mov
lods
or
dec
lret
inc
loopne
adc
sbb
add
xor
insb
jl
jae
sbb
adc
dec
mov
dec
mov
ds
lahf
nop
fsubl
pmaddwd
sti
lahf
into
out
mov
push
scas
addr16
inc
das
cltd
and
insl
repz
outsl
dec
mov
scas
pop
shll
xorb
insl
mov
mov
lret
pop
jle
push
aam
loop
adc
dec
pop
outsb
popa
cmp
dec
insb
cwtl
ret
and
imul
cli
cs
adc
inc
pop
mov
pop
push
xchg
pop
call
ja
aas
pop
ret
bound
dec
sbb
pop
push
xor
dec
cmp
test
aam
jecxz
pop
aas
lret
inc
pop
dec
and
gs
stc
js
mov
cltd
lret
je
and
lods
scas
mov
pop
inc
cmp
sub
ret
fdivrl
and
or
dec
xor
out
add
mov
mov
mov
data16
fcompl
cmpl
push
imul
push
addb
dec
rorl
ljmp
mov
mov
cld
mov
sub
lahf
insl
sahf
mov
call
jle
fmuls
cmp
dec
push
jb
subl
loop
xor
mov
adc
sti
ds
inc
push
std
mov
xlat
aas
fistps
insl
adc
stos
xchg
sub
lret
fnstsw
andb
nop
jp
callw
stos
sub
repz
jnp
mov
insb
stos
into
shlb
sahf
xchg
lods
mov
xchg
aad
rolb
jb
cld
testl
mov
inc
jne
test
mov
xchg
pop
ret
pop
mov
xchg
ret
and
mov
fldt
cmpsb
dec
fldcw
lods
mov
cmp
nopl
pop
js
xchg
xor
xchg
jbe
and
mov
pusha
cmpsl
adc
aaa
scas
mov
inc
mov
mov
test
call
fbld
dec
jp
and
xor
int
in
dec
insl
dec
pop
lods
mov
pop
sar
push
dec
jb
je
mov
adc
lcall
sbb
cli
in
inc
cmpsl
mull
pop
jb
ret
hlt
and
stos
addr16
mov
mov
movsl
pop
out
test
clc
mov
pop
add
shrl
push
lret
out
jns
jle
movsb
mov
mov
mov
jmp
push
ficomps
push
fadds
loopne
das
or
movsl
cmpb
lods
pop
imul
adc
repnz
loop
push
mov
repz
mov
xlat
pop
popf
test
and
mov
movsl
cmp
sti
vcmpps
mov
ljmp
out
clc
jbe
pop
into
xchg
orb
mov
xchg
in
loop
and
rorb
fistl
ja
xchg
pushf
cld
into
movsl
jecxz
dec
shrb
xchg
arpl
mov
jno
lahf
fimull
mov
jb
mov
xchg
jle
mov
js
ficompl
mov
push
push
jp
dec
sbb
push
fs
icebp
in
leave
fsub
and
add
scas
pop
in
cmp
lahf
test
pop
stos
mov
inc
call
pop
cld
mov
test
pop
enter
and
out
iret
imul
pusha
cmpsl
movsb
add
lahf
js
adc
ret
rolb
hlt
out
arpl
ss
push
push
flds
dec
inc
mov
dec
data16
sub
and
repnz
pushf
int
outsl
fcomip
aam
mov
sub
inc
js
xor
push
push
mov
clc
ffree
pop
sahf
xor
sbb
mov
aaa
mov
inc
mov
push
aaa
sbbb
push
or
call
inc
shl
mov
mov
int
notb
imul
cmp
adc
mov
push
pop
js
cmc
loop
inc
cwtl
push
popf
pop
ret
xor
outsb
imul
xchg
pop
jns
daa
outsl
jnp
mov
inc
mov
xchg
sahf
ret
cmp
push
dec
or
inc
pop
pop
jl
movsl
lahf
fs
cld
dec
sbb
xchg
sub
adc
mov
pop
pop
sub
add
fstl
mov
jo
inc
aad
inc
rcll
ljmp
fildll
or
add
sbb
jecxz
mov
push
call
scas
addr16
xlat
xlat
gs
jl
or
outsb
mov
cmp
adc
pushf
xlat
cmp
mov
cmpsl
and
insl
mov
pop
mov
fmulp
xchg
fdivrl
sub
push
in
xchg
mov
add
push
int3
pop
scas
das
dec
das
jb
xchg
pop
call
pop
jecxz
sti
loope
call
dec
inc
gs
mov
aas
cli
stos
adcb
sti
mov
out
cltd
clc
dec
addr16
dec
lods
ss
es
js
rolb
lcall
outsl
repz
not
mov
icebp
inc
mov
test
jg
add
mov
adc
aas
push
cmp
push
imul
std
in
xlat
cmp
mov
mov
inc
xor
pop
lret
fmull
mov
add
cld
and
scas
mul
dec
js
testb
xchg
fnstenv
jl
mov
out
mov
dec
dec
movsb
xchg
or
sub
cltd
sub
je
pushf
sbb
dec
mov
push
cmpb
test
mov
std
pop
repz
jp
in
inc
dec
xchg
popf
je
mov
or
mov
xor
into
pop
jle
inc
inc
or
add
fwait
xlat
out
pop
pop
jp
xchg
mov
shrl
rcll
jnp
dec
and
sub
mov
rorb
add
clc
xor
in
or
or
and
out
data16
lahf
add
and
pop
leave
add
fnstcw
pop
pop
xchg
addr16
test
sub
call
push
hlt
ljmp
xchg
arpl
pop
cmc
daa
insl
rclb
loope
fs
not
scas
insb
insb
aad
ficoml
out
inc
inc
mov
scas
cmpsb
mov
test
adc
sub
imul
xchg
movsl
out
shll
inc
popa
test
dec
rol
out
sbb
stc
lock
or
das
jle
out
lds
adc
jno
es
pop
lea
roll
loope
adc
leave
jns
sahf
mov
mov
or
cmp
mov
mov
or
imul
cli
daa
loope
je
loopne
cmpsb
enter
mov
fistpl
repnz
xchg
or
push
hlt
aaa
add
mov
sub
jmp
inc
arpl
sbb
push
sbb
mov
inc
das
stos
lea
leave
les
dec
pusha
dec
pop
lahf
fldcw
xchg
ds
test
insl
mov
cmp
icebp
jg
xchg
movl
or
or
xor
inc
push
mov
sbb
loope
inc
xor
cwtl
jne
cmpsb
push
dec
repz
leave
hlt
out
jle
mov
aaa
lods
mov
pushf
sbb
fildll
negb
push
clc
cmc
test
push
icebp
aaa
sbb
or
xor
test
adc
cmp
cs
lods
gs
jne
sub
cmp
movsb
mov
cltd
xchg
mov
pop
dec
cmp
in
add
dec
dec
inc
xor
dec
es
mov
ds
and
bound
cmpsb
lds
sbb
enter
insb
out
shll
xor
xchg
add
ljmp
cmc
loop
jnp
xchg
andl
adc
mul
cmp
movsl
pusha
push
or
rol
pause
mov
repz
shl
adc
fldz
push
lock
das
fnstcw
dec
mov
jnp
inc
push
test
fs
test
push
es
add
loopne
in
sbb
xor
int3
pop
mov
repz
xor
sub
icebp
cmpsl
pushf
xor
rcrl
rorb
xor
call
test
xchg
loope
push
int
pushf
jno
jp
adc
outsb
outsb
cmp
out
fsubrs
leave
mov
cmp
xor
push
movsl
mov
adc
dec
mov
cltd
mov
sbb
sbb
push
adc
cmp
bound
cmp
push
inc
shll
jmp
sub
push
mov
xlat
mov
cltd
inc
inc
sahf
pusha
jo
xchg
loop
xor
or
ds
sar
and
mov
lcall
mov
mov
xchg
scas
cmp
pop
jmpw
xor
pushf
orb
add
push
mov
stos
pop
mov
pop
repnz
pxor
pop
mov
sub
add
lea
mov
mov
mov
call
jo
mov
loopne
add
pushf
and
cmp
add
mov
sub
dec
push
jns
mov
cmpsb
dec
jmp
adc
gs
arpl
sub
pop
and
jbe
mov
addr16
imul
out
ret
xchg
adc
hlt
xchg
ja
lahf
movsl
fwait
mov
xchg
sbb
stos
jbe
sbb
dec
setns
es
inc
xor
into
dec
and
mov
insl
aaa
add
dec
pushf
adc
stos
add
or
add
or
jmp
divl
mov
fmul
push
daa
dec
and
cmpsl
fiaddl
sbb
les
jnp
inc
push
ret
push
ljmp
pop
push
test
mov
mov
int3
push
shr
js
push
jp
dec
and
rcrl
inc
lahf
or
sub
mov
xor
mov
les
mov
mov
or
dec
fs
lret
push
js
mov
loop
aad
jp
xor
adcb
xor
es
call
pop
cmp
and
add
push
ss
sub
pop
fsubrp
cmp
je
shll
sbb
roll
fisttpll
sbb
ds
out
test
lret
sub
sbb
call
fwait
jl
pop
shlb
shll
inc
nop
adc
and
sarb
add
jle
or
rsm
leave
mov
ljmp
inc
lods
nop
or
adc
sub
inc
dec
out
and
iret
data16
jp
ret
mov
sub
mov
mov
jp
push
inc
cmpsl
clc
fstps
push
push
inc
add
dec
cmp
xchg
lahf
sahf
mov
shlb
push
ret
sub
jae
imul
cmp
adc
jns
pop
cmpsb
adc
dec
popf
das
jecxz
loopne
popf
lea
addr16
lahf
jae
fstpt
rsm
pop
lea
mov
pushf
pop
adc
dec
test
mov
mov
scas
push
arpl
cltd
stos
cltd
xorl
mov
or
fdivrl
mov
outsb
vmovdqu
adc
pusha
xchg
mov
mulb
ljmp
mov
and
mov
jecxz
push
xchg
add
mov
push
cmc
data16
fsubl
lret
in
rcrb
add
dec
cmp
dec
mov
adc
cmp
dec
das
or
bnd
cli
mov
stos
sub
push
and
sub
test
lea
dec
sub
bound
pop
mov
adc
shl
incb
jb
mov
rolb
xor
nop
ja
pop
mov
sahf
ret
sbb
adc
imul
jecxz
bound
inc
adc
mov
popa
xor
add
cmpsl
push
adcb
es
mov
jl
adc
cmp
jecxz
xor
imul
hlt
add
xor
dec
mov
call
int
mov
jp
lret
sub
iret
outsb
lock
and
and
mov
dec
and
mov
mulb
pop
mov
adc
loop
es
cwtl
mov
mov
negb
pop
mov
mov
loope
in
fbld
ljmp
adc
mov
adc
sbb
ds
cmpsb
jle
adc
sbb
gs
jp
jle
jno
jo
jl
sbb
add
xlat
lds
addb
cwtl
loope
mov
cmp
xor
mov
into
out
popa
lret
sbb
dec
imul
sarb
test
xchg
inc
dec
jecxz
jne
and
push
imul
es
pop
or
xchg
ficoms
xchg
xor
adc
aam
jb
mov
mov
inc
dec
and
jl
sbb
and
cld
cli
mulps
inc
push
mov
test
mov
cmp
aas
popf
dec
dec
push
add
pop
test
pop
test
jg,pt
fst
out
sbb
lods
dec
jle
insb
inc
push
cmp
sub
ljmp
std
mov
adc
popa
sbb
pop
leave
xchg
movsb
out
inc
pop
mov
pop
je
test
ret
ret
fbld
fistpl
mov
insb
fldenv
call
or
or
roll
imul
shlb
pop
add
rcll
push
xor
call
xor
lahf
add
out
cld
mov
icebp
cmc
dec
int3
xchg
call
jg
fcomp
ja
lret
das
xchg
rorl
pop
pop
push
xor
repnz
cwtl
add
nop
sub
icebp
push
fcmove
insl
jnp
cli
call
sub
xchg
sub
cmc
xor
mov
adc
call
roll
leave
ja
scas
dec
rorb
and
repz
xchg
sbb
icebp
dec
test
pop
cmpsl
aam
jge
mov
pop
add
mov
fsts
rorb
scas
xor
pop
jp
add
xchg
or
cmp
test
mov
push
push
adc
xchg
sub
or
pop
cld
fists
jnp
int3
xchg
xor
and
add
testb
nop
jne,pn
jns
clc
jmp
cmp
call
pop
arpl
cmp
pushf
cmp
test
insb
pusha
pop
ret
sub
pop
xchg
hlt
xor
loop
sahf
pop
and
and
dec
dec
mov
xchg
lret
mov
fcompl
in
jno
je
and
lcall
mov
stc
push
out
pop
test
lcall
pushf
xchg
fdiv
int
dec
insb
cld
ret
mov
pop
lahf
cmp
jle
jb
jno
xchg
and
xchg
gs
xchg
push
icebp
jmp
mov
stc
aad
pusha
pop
pushf
inc
cmp
shll
pusha
dec
leave
loop
pushf
in
scas
aas
dec
cltd
xor
sub
xchg
popf
negb
jecxz
out
js
mov
sbb
mov
andl
das
divb
imul
fmuls
jns
ja
fadds
mov
dec
jbe
add
dec
popa
cmp
outsb
mov
mov
or
and
inc
xchg
rorl
sarl
jmp
rorl
cld
pop
inc
lods
sti
fs
int
sti
mov
mov
sub
lret
lock
pop
xor
sbb
lret
adc
adc
pop
xlat
pusha
or
dec
leave
daa
xchg
ret
lret
outsb
test
test
test
cmpl
add
xchg
cmp
cwtl
dec
adc
int
jne
bound
mov
lahf
out
lret
cmp
push
push
pop
push
movsl
mov
cs
mov
adc
test
out
cmpsl
mov
shlb
movsb
sub
push
jb
push
dec
xchg
cmp
outsl
loopne
xchg
sub
cmp
rcrl
inc
ja
das
sbb
cmp
and
mov
icebp
mov
mov
leave
mov
xchg
xchg
inc
sti
mov
test
cmpsb
mov
push
and
outsl
pop
push
movsb
nop
and
mov
mov
cmp
fcoml
into
js
push
push
ja
outsl
jae
jmp
cmpsl
repnz
enter
dec
jecxz
lcall
cs
push
mov
xchg
xlat
cmp
lock
fimuls
pop
sub
fbld
sbb
rcrb
cmp
scas
test
fsubrs
inc
rorl
mov
and
movsb
jl
cmpsl
mov
or
mov
decl
loop
push
push
dec
jmp
or
mov
sub
jbe
mov
push
dec
xor
mov
aas
sbb
addr16
jle
dec
jl
mov
xlat
repz
inc
insl
adc
fimull
or
xchg
sbb
outsb
push
rcrb
mov
dec
shrl
add
cld
push
sbb
loop
cmp
xchg
sahf
cmp
xor
mov
shl
in
sub
cmp
aad
jg
movsb
adcl
sub
xchg
sub
push
roll
fwait
loopne
out
inc
inc
out
push
fldcw
fsub
mov
cmovae
inc
dec
pop
mov
ljmp
pop
dec
lcall
andl
sbb
nop
ljmp
lahf
loope
popa
sbb
pop
xchg
sarb
lahf
mov
adc
dec
lds
xchg
loope
outsb
out
clc
faddp
mov
mov
jecxz
pop
adc
mov
pop
cwtl
mov
fwait
out
inc
outsb
ss
dec
int
roll
add
xor
ss
jo
mov
xchg
int3
rcll
pusha
jne
lock
outsl
pusha
iret
lret
cmp
lret
dec
bound
pop
ss
imul
in
adc
es
flds
and
out
lods
mov
das
into
loop
add
xor
dec
inc
pop
in
fs
arpl
jp
add
pop
fwait
ss
std
aad
push
push
daa
push
add
movsb
lahf
mov
fstps
sbb
add
repnz
adc
aad
and
mov
jmp
in
hlt
ret
cmpsb
out
andl
outsl
sub
xchg
pop
negl
mov
imul
subl
jnp
cs
dec
pop
mov
sbb
xchg
shlb
loopne
mov
int3
cmp
add
mov
push
jo
push
mov
jno
xor
push
aaa
stos
in
cli
xor
jnp
and
hlt
clc
loopnew
jp
pop
imul
dec
adc
fsub
lock
data16
sbb
mov
notb
push
inc
xlat
mov
push
cmp
in
movsl
enter
push
into
dec
sbb
jg
cmp
inc
es
ds
nop
cmp
lret
pop
push
jle
cli
push
sub
je
adc
call
sbb
cmpsb
xchg
popf
inc
sar
ja
mov
testl
add
add
sahf
push
ja
jg
gs
scas
aaa
lahf
fst
or
add
xor
pop
jg
jg
in
rcrl
hlt
das
xorb
mov
jge
and
pushl
test
adc
jp
sbb
xchg
daa
lahf
lods
xor
stos
add
inc
shll
add
sub
or
lods
cmc
sbb
push
sub
cmp
inc
adc
jns
cmp
fs
add
jmp
lds
pusha
mov
movsl
push
pop
ret
nop
sbb
mov
int
js
mov
pop
push
sub
in
xchg
fcoms
jge
in
and
cmp
inc
and
test
arpl
dec
xlat
jl
xchg
mov
jmp
test
gs
xor
shll
xchg
icebp
lds
movsl
aam
push
sub
xor
ljmp
mov
xor
and
push
js
fwait
dec
outsb
mov
mov
loopne
insb
iret
test
iret
or
pop
push
addl
lods
mov
lea
mov
rorl
test
decb
push
add
std
dec
dec
sbbb
out
jp
adc
popa
sub
fidivs
push
test
jge
int
data16
mov
or
mov
sbb
arpl
imul
mov
push
imul
out
dec
out
jbe
jbe
in
testb
push
fwait
fwait
xor
aas
dec
xor
fisttpll
or
push
sbb
js
lods
inc
insl
rol
pop
hlt
mov
adc
and
jle
inc
push
gs
movl
jp
jns
jmp
loope
adcl
sub
pop
dec
das
stos
int
xchg
xchg
cmp
fwait
mov
test
pop
adc
dec
imul
cmp
fisubrs
imull
pop
clc
add
jle
inc
and
ret
rcll
xlat
inc
pop
sahf
movlps
ljmp
inc
xorb
jmp
jge
cld
cmp
xchg
int3
clc
imul
rolb
leave
les
jb
mov
les
add
decl
lahf
idivl
cmp
lods
dec
jbe
jmp
mov
push
mov
cmp
repnz
and
sbb
push
sahf
orb
adc
mov
push
out
cltd
iret
jno
lret
fs
mov
ljmp
call
cld
or
fwait
sbb
ljmp
call
adc
and
xchg
jmp
and
push
mov
aas
in
std
loop
lds
fdivl
xor
insl
pop
mov
loope
mov
inc
lcall
add
stc
adc
mov
or
cmpb
push
lods
jno
sbb
sbb
push
jae
arpl
and
pop
cwtl
dec
mov
sub
outsl
xchg
out
jbe
push
mov
cmp
mov
jmp
sub
or
mov
cmp
repz
jae
enter
mov
and
arpl
pop
insb
add
dec
pushf
jge
sub
mov
ds
inc
inc
pop
pop
xor
pop
inc
mov
mov
js
vorps
jb
mov
add
cmc
stos
jbe
sti
repz
jp
jo
cld
incl
and
jae
mov
mov
paddq
cmp
sbb
test
jge
dec
ficompl
sub
cli
jle
imul
jo
xor
push
ffree
lods
push
push
xor
int3
adcb
andl
repnz
sub
mov
daa
out
into
adc
in
popf
fs
inc
jb
data16
jmp
test
jbe,pn
or
pop
arpl
and
mov
ja
dec
or
out
dec
add
ret
int3
inc
inc
cmp
mov
xchg
xchg
push
fidivrs
pop
rcl
add
into
jae
orl
dec
jns
scas
out
in
push
sahf
out
adc
std
xchg
mov
data16
or
pop
cld
xor
cmpsb
mov
sub
cmp
lock
into
push
push
and
lock
and
stos
popa
jmp
int
or
shlb
adc
xor
jp
xlat
imul
loop
jae
outsl
and
sub
xchg
divb
in
cmpsl
scas
sub
inc
jge
jb
jp
stos
outsl
push
or
push
inc
pop
jmp
push
or
mov
mov
sbb
mov
shll
popf
mov
jb
stos
and
test
push
aaa
or
ror
movl
in
sub
movsb
dec
jno
cmp
dec
lods
lret
add
test
sub
fidivrs
inc
and
xchg
dec
sub
xchg
or
push
dec
in
fs
push
mov
mov
xor
insl
not
mov
mov
fmulp
addl
dec
dec
hlt
jg
popl
je
insl
loopne
add
jl
imul
xchg
sbb
icebp
sbb
lock
lds
adc
push
sbb
mov
push
xlat
loopne
cli
sbb
mov
mov
sub
push
repz
cmp
mov
inc
pop
inc
ret
mov
callw
imul
aad
popf
fdivl
push
in
out
push
inc
out
mov
jnp
dec
mov
scas
int3
sub
jo
fisttpll
or
fimuls
out
fwait
cwtl
iret
jge
mov
pop
xchg
adc
out
jne
js
dec
adc
mov
push
cmp
in
dec
mov
jo
ja
test
jo
mov
sub
mov
aam
imul
imul
and
adc
out
sub
sahf
mov
pop
lea
mov
and
mov
cmpsb
xchg
adc
mov
sbb
mov
and
bound
lret
sarl
sti
loope
pushf
movsb
push
loope
mov
and
mov
daa
mov
mov
or
and
mov
in
mov
sbb
out
dec
call
ret
loop
stos
push
test
lcall
divl
jne
pop
mov
xchg
add
sbb
or
dec
imul
ret
jmp
sub
jns
and
loop
shll
in
sbb
cmp
int3
fwait
popa
mov
les
mov
pop
fstps
push
mov
inc
dec
inc
push
pop
cli
movsb
rorb
ret
add
fcmovnbe
cmp
add
and
sub
loopne
sub
loop
xor
pop
push
scas
xchg
fsubs
addr16
pop
xchg
dec
xor
mov
aad
mov
aaa
mov
fistps
stos
jb
push
stos
out
ljmp
mov
add
pop
mov
mov
mov
mov
mov
or
pop
into
xchg
adc
and
insl
cli
notl
sub
push
or
dec
push
lods
out
xor
gs
cmc
adc
ja
psraw
lahf
sub
js
addr16
mov
cmp
sub
sbb
pop
mov
cmpsb
jno
pop
fwait
test
je
mov
jmp
or
shrb
sar
sub
adc
add
and
cs
inc
push
jg
pop
fwait
mov
out
subl
dec
add
sbb
jne
push
mov
xchg
loop
lret
dec
subb
test
mov
mov
aas
mov
pop
sbb
data16
repz
clc
popl
icebp
or
mov
inc
mov
push
shrb
or
out
jo
xor
push
mov
int3
inc
mov
mov
hlt
mov
adc
mov
mov
in
jl
fisubrs
fadds
std
mov
call
push
xchg
jp
fbstp
ja
cwtl
xlat
push
xchg
adc
pusha
sbb
shlb
inc
mov
insl
mov
adc
frstor
sarl
sahf
ffreep
xchg
cmp
fcmovnb
cld
je
xchg
xchg
rcrl
add
lods
rep
mov
idivb
mov
or
pop
jne
adc
jbe
lds
jnp
lea
inc
je
pop
cs
movsb
jno
mov
push
mov
jbe
js
testl
in
xor
push
inc
jge
adc
aaa
dec
lock
movsb
andb
inc
pop
jecxz
jne
dec
fildll
stos
in
test
jae
inc
stos
mov
aam
xor
out
pop
or
inc
xchg
xchg
in
mov
sbb
loopne
mov
pop
and
or
push
inc
jle
dec
jle
fldcw
fs
mov
jbe
mov
sbbl
pop
dec
cmp
cmp
pop
outsb
cmpsl
fistl
test
mov
adc
xor
mov
adc
jne
xchg
test
inc
lahf
out
repz
mov
lods
imul
pop
loope
addr16
shrb
mov
out
imul
popf
stc
mov
jb
lahf
xchg
ja
xor
scas
in
mov
mov
nop
or
sbb
sarb
push
outsl
push
and
lods
sbb
jo
jo
jnp
xchg
cmc
sahf
pop
imul
mov
leave
cwtl
dec
inc
fwait
mov
sbb
imul
inc
sbb
cmp
pop
cmp
test
aas
mov
jg
cmp
enter
sub
inc
rcrb
jle
daa
repnz
adc
xchg
and
jb
sub
or
es
gs
push
sbb
pop
xor
and
or
or
cmp
add
test
in
dec
insb
rolb
loop
pop
ret
outsb
inc
push
xchg
adc
js
mov
stos
dec
and
jns
adc
cmp
test
lcall
xchg
or
or
sub
loope
aas
and
idivb
add
push
sub
js
xchg
dec
mov
inc
out
mov
cmp
and
pop
add
jle
cmp
adc
mov
popf
insb
mov
cmp
jae
sub
stc
fldt
or
fs
mov
xor
sbb
pop
int
mov
ja
mov
ss
repz
dec
jae
add
mov
xor
lahf
xor
test
mov
sbb
in
inc
add
and
or
adc
outsl
jg
bound
inc
cmp
mov
mov
jle
out
aas
sbb
sub
into
pushw
jl
pop
and
or
aas
cmp
mov
push
mov
xchg
mov
ret
test
test
mov
mov
aam
sar
adc
adc
or
subb
mov
mov
jg
jb
fnstenv
mov
xchg
leave
lret
xor
ds
xchg
call
ljmp
inc
ljmp
mov
je
lcall
cld
fsts
mov
jg
pushf
mov
scas
sub
leave
mov
xchg
mov
push
sub
jo
or
dec
in
mov
lcall
jae
mov
dec
sti
stc
out
adc
pop
or
das
or
inc
lock
popa
dec
arpl
out
in
mov
jne
lcall
aam
mov
insb
ss
cli
clc
cmc
sub
xchg
fimuls
in
xlat
pop
mov
xchg
nop
inc
imul
scas
pop
out
mov
enter
xor
mov
mov
mov
rcrl
aas
sub
pop
cmp
addr16
xchg
pop
fistpll
xor
jno
sbbl
fists
mov
dec
adc
cld
and
daa
xchg
fnstcw
adc
dec
imul
xor
cmp
dec
sahf
scas
mul
inc
adc
addr16
mov
pop
adc
out
sub
pop
out
outsl
add
mov
nop
decl
ljmp
sti
inc
sbb
pop
adc
xchg
sbb
mull
cmpsb
pop
adcb
add
cmc
cmp
popf
mov
and
and
outsl
in
inc
addr16
sub
daa
andb
mov
mov
mov
add
clc
lret
in
xor
cmp
aas
cmp
and
aas
and
dec
cli
mov
fbstp
mov
sbb
push
jecxz
or
xchg
enter
stos
push
fmull
mov
arpl
fadd
lods
jne
lcall
inc
adc
cmp
push
ljmp
jne
jge
std
jb
dec
in
lcall
or
or
dec
push
imul
jne
cmc
inc
andb
inc
pop
pop
mov
xchg
or
aam
inc
or
lds
test
mov
and
mov
inc
test
mov
add
and
xchg
mov
in
push
mov
xchg
fld
loopne
pushf
mov
adc
cld
gs
mov
adc
sub
xorl
shll
mov
push
ret
icebp
nop
dec
das
ds
das
shlb
mov
es
jae
inc
sub
cmpsl
jmp
out
adc
shrb
js
xor
rcrl
pop
aam
imul
sub
sub
ret
cmp
ja
aas
repz
jno
push
scas
add
movsb
cmc
jae
push
lea
and
aad
jns
adc
fstpt
sub
push
arpl
adc
jnp
sahf
sbbb
mov
int3
jae
sti
inc
jne
cmp
lods
mov
pop
call
sub
and
xchg
cs
orl
ljmp
cmpsb
icebp
adc
push
pop
test
mov
lret
xor
bound
cltd
inc
test
imul
movsb
out
mov
dec
aad
call
push
lods
xorb
imul
and
repz
lods
clc
repnz
outsb
cmp
lea
dec
adc
sub
cmp
sub
test
sub
xchg
xchg
pop
aam
or
fnstenv
pop
movsb
adc
or
sbb
inc
sbb
mov
pop
mov
arpl
outsb
orl
adc
sbb
test
cmc
mov
or
leave
mov
jne
jle
mov
xchg
dec
insb
adc
outsl
into
jbe
insb
fwait
xor
movsb
std
sbbb
sub
aam
mov
xchg
test
stc
push
out
push
ret
mov
xor
cs
test
jmp
add
mov
imul
shll
int
aaa
arpl
fstl
aam
shlb
cmp
dec
dec
xchg
mov
jne
jne
pop
fwait
jmp
jecxz
scas
daa
into
xor
divb
clc
inc
or
inc
ficomps
int3
ret
fdivs
pop
xlat
jl
shll
pushf
aam
or
aaa
pushf
cmp
or
sbb
inc
mov
lock
stos
inc
add
int3
ret
jnp
sar
int3
inc
aaa
xor
jmp
add
icebp
lods
addr16
in
div
add
or
cmc
ret
jnp
aaa
and
mov
mov
repnz
mov
jp
sbb
aam
and
sub
sub
and
mov
xor
pop
iret
push
sbb
push
mov
xchg
xchg
out
sti
xchg
in
push
daa
push
sbb
insl
lods
out
inc
mov
stos
enter
mov
and
add
cmp
popf
in
scas
gs
out
imul
and
dec
mov
dec
fcmove
inc
lret
das
scas
adc
push
dec
scas
ror
ds
dec
cmp
addl
rorl
mov
in
repz
je
mov
push
xchg
fisttpl
xor
xchg
xchg
xor
outsl
mov
clc
xchg
and
cmp
inc
sbb
xor
lcall
ss
mov
fadd
mov
adc
add
mov
gs
xor
push
add
pop
adcl
out
sti
inc
or
ret
lret
outsb
adc
fimuls
fxch
jno
mov
and
addl
fsts
stos
push
cmc
icebp
pop
test
fidivl
mov
into
pusha
pop
cld
daa
out
stos
mov
into
mov
cmpsl
and
jbe
stos
jp
out
push
push
dec
jnp
movsl
lahf
mov
das
mov
shll
jl
xchg
leave
mov
sub
xor
and
sub
adc
mov
in
fwait
jno
outsb
jmp
lods
mov
lcall
jle
sahf
cld
push
lea
repnz
mov
jmp
out
adc
pop
xchg
push
test
dec
dec
mov
lret
ret
test
cmp
shll
mov
lret
nop
movsl
inc
lods
jnp
aaa
in
sbb
loope
pop
iret
pop
add
or
scas
adc
pop
outsb
outsb
fs
mov
daa
subl
and
cmc
iret
js
cld
sub
inc
and
mov
insl
in
push
pop
or
add
jbe
imul
sub
ljmp
add
xchg
in
cs
inc
lret
cld
sub
fcomip
mov
lods
cmpsl
adc
das
or
sub
filds
ljmp
xlat
shl
ret
rcl
add
sbb
mov
push
mov
xchg
jle
fsubs
dec
sub
xor
shrl
jbe
ret
loopne
mov
inc
xchg
mov
imul
cs
sbb
mov
inc
jns
hlt
xor
inc
lods
sbb
jge
imul
pavgw
sub
jae
pop
lcall
jbe
pop
mov
sub
jne
out
jbe
rcl
into
push
jmp
inc
pop
icebp
mov
adc
imul
mov
mov
mov
bound
xchg
ror
test
rcr
inc
mov
fcmovnb
clc
pop
inc
mov
movsl
cld
shll
sub
add
aad
jbe
mov
in
xchg
out
lahf
xor
repnz
pop
jne
mov
adc
cmp
leave
cwtl
loopne
mov
dec
jge
out
inc
adc
jo
movsl
cmp
imul
xor
cld
dec
xor
int
mov
out
clc
xchg
sbb
test
push
data16
and
ret
prefetcht1
out
lea
fldl
push
scas
lock
shll
adc
cwtl
jb
fdiv
mov
shll
enter
pop
jg
fsubr
pop
push
and
arpl
test
dec
adc
sarb
loop
std
outsl
push
mov
icebp
das
xchg
cltd
add
lahf
mov
out
xchg
push
xchg
dec
lahf
addl
cmpsb
cwtl
jnp
push
cmp
ja
dec
pop
or
out
mov
sub
fucom
das
outsl
jbe
in
inc
inc
inc
xor
stos
stos
push
push
push
add
pop
mov
jmp
pop
inc
rcl
ljmp
je
inc
pop
push
pop
push
and
mov
xchg
cld
xchg
aam
dec
sub
cltd
or
xchg
xor
in
sub
cmp
xor
shrb
mov
inc
out
test
or
sub
cmp
cmpsl
jno
lods
dec
inc
xor
cld
mov
pop
inc
and
ljmp
inc
fstpt
std
push
loope
jns
cmovnp
sub
ret
insl
and
pop
lods
js
mov
pop
cwtl
pop
mov
sub
inc
adc
jmp
icebp
int
inc
sahf
pop
repnz
cmp
mov
cmp
hlt
jns
call
loop
xor
or
iret
into
push
mov
inc
test
dec
call
mov
int
insb
mov
xchg
mov
xchg
popf
cltd
sbb
mov
cmp
cmc
stos
outsl
gs
pusha
cmp
hlt
cmp
adc
push
mov
adc
mov
mov
mov
outsb
or
and
out
dec
repz
inc
adc
or
mov
push
das
frstor
fs
mov
push
cmpsb
sub
pop
and
pop
das
ret
xchg
orps
call
ss
aad
repz
cmp
pop
jno
push
out
sbb
xchg
lret
sub
xor
mov
sbb
shlb
cmc
push
pusha
ds
out
es
push
push
xor
inc
inc
cmp
mov
jge
int
mov
cltd
adc
or
jno
jg
sti
fisubrs
adc
push
cli
cmc
cmp
mov
popf
jns
xor
lret
jge
inc
inc
xor
and
push
pop
mov
jl
mov
inc
push
imul
cmp
and
push
icebp
inc
push
imul
sbb
jmp
sbb
dec
outsb
sub
lods
jmp
cmpsb
pop
mov
sub
push
or
inc
xchg
jne
pop
cmp
fst
xor
inc
cltd
mov
jb
mov
cmp
mov
inc
cmpsb
push
sbb
adc
mov
cwtl
dec
loop
js
es
dec
mov
push
orl
mov
inc
js
pop
add
mov
xchg
mov
mov
mov
dec
or
push
jno
fmull
das
aad
loope
xor
frstor
mov
sbb
add
inc
jae
push
lods
mov
bnd
jns
dec
sub
into
bound
sub
incl
mov
push
sbb
sarb
popf
xchg
dec
xchg
and
mov
cmc
adc
mov
mov
push
aas
test
in
cwtl
fisubrs
popf
dec
add
xchg
cmc
scas
divb
fidivl
pop
push
scas
xchg
cld
xchg
add
mov
mov
js
test
jo
mov
cmp
sub
fs
fs
div
mov
dec
dec
loopne
push
mov
sbb
lret
out
aad
into
in
cld
jnp
mov
gs
cmovp
add
pushf
add
loope
stos
iret
nop
inc
mov
lods
sub
sbb
dec
adc
testl
jb
sti
jecxz
xchg
fsubp
jbe
cmp
or
stos
mov
subl
ss
sbb
adc
mov
imul
cltd
addr16
lahf
push
cmp
and
sbb
fsubrs
mov
loop
movsb
fincstp
push
out
pushf
mov
fisttpll
pop
add
dec
fucomip
fwait
cld
movsb
pusha
std
sarl
fldcw
not
mov
lods
test
pusha
mov
sbb
jg
cld
in
fstpt
clc
mov
popa
loop
pop
bnd
jge
inc
and
fmull
add
or
in
mov
mov
adc
out
not
fidivl
ss
or
jge
pushf
and
add
pop
into
arpl
out
mov
mov
pop
xchg
sub
test
stos
mov
jb
jne
xor
pop
sarl
and
lret
sbb
xor
push
pusha
test
mov
in
test
jnp
cld
pop
sub
and
mov
jnp
lds
sti
es
mov
pop
inc
jg
mov
mov
pop
jp
adc
xchg
xlat
int
gs
mov
fidivrl
xor
push
cltd
pusha
addl
shrl
xchg
mov
push
lock
jo
xor
mov
adc
lcall
roll
test
mov
pop
mov
in
mov
adcl
sbb
dec
xchg
lret
cmpsb
mov
xchg
mov
cwtl
jl
lds
inc
xor
and
or
cld
shll
xorb
add
and
mov
jae
dec
imul
lea
xchg
pop
or
mov
enter
cmp
lea
adc
add
adc
dec
int3
sbb
mov
add
lret
in
cld
aam
inc
daa
lcall
mov
iret
pop
hlt
and
stos
push
sbb
shl
inc
adc
jno
sbb
clc
sahf
inc
scas
inc
jo
mov
test
xor
das
js
enter
iret
packsswb
std
inc
mov
mov
ret
jge
int3
sub
adc
pushf
cmp
xorb
sub
imul
in
and
mov
decl
inc
cmp
xchg
adc
out
inc
sub
in
pop
xor
das
xor
mov
movsb
sub
mov
lahf
inc
popf
lret
inc
imul
xchg
enter
and
cli
lcall
outsb
mov
dec
pop
xor
push
cs
inc
cwtl
movsl
xchg
mov
push
notb
icebp
push
pop
pop
mov
test
hlt
mov
addr16
mov
adc
out
shll
dec
inc
adc
or
mov
cmpsb
jne
cmp
sbb
dec
mov
into
mov
jns
push
mov
ljmp
mov
lcall
pop
jle
iret
pop
in
cwtl
mov
inc
mov
test
xchg
jns
adc
std
scas
xchg
push
mov
rcr
xor
inc
aaa
mov
pop
dec
mov
push
push
adcl
icebp
dec
and
jb
sbb
sub
sub
sub
adc
adc
loopne
xchg
mov
js
inc
sbbb
cmp
dec
and
push
inc
stc
cmp
and
jb
repz
gs
lds
adc
adc
dec
jno
fidivl
mov
xbegin
ret
xchg
mov
mov
xchg
stos
popa
aas
adc
daa
frstor
divl
repnz
lret
fldcw
sbb
int3
dec
ja
xchg
sub
idivl
out
jnp
mov
sbb
inc
add
bound
loopne
add
mov
cs
jge
and
rorb
sub
rol
icebp
lods
icebp
dec
inc
jle,pt
adc
xchg
rolb
jecxz
popa
ljmp
xchg
pop
bound
enter
sbb
les
lcall
push
cmp
dec
decb
and
stc
fst
xchg
sub
orl
leave
or
ret
xchg
jecxz
fstl
dec
adc
add
out
push
lret
rcrl
inc
pop
inc
xlat
loope
push
mov
mov
das
or
mov
or
test
mov
stos
or
pop
adc
xor
xor
or
scas
mov
cmc
ror
mov
es
xchg
and
jae
jg
in
out
sbb
ss
jge
jnp
xor
mov
fdivr
mov
lods
sbb
sahf
cmp
insl
out
pop
dec
fdivs
cli
cmpb
xchg
sub
mov
aas
sbb
rcrb
and
pop
imul
cmpsl
mov
lea
sti
or
mov
stos
add
mov
sti
mov
inc
pop
cmp
adc
dec
push
adc
pop
dec
mov
jns
inc
orl
ret
dec
xchg
daa
cli
insl
stc
popf
sub
push
shrl
inc
lea
and
fcmovnu
test
int
lea
daa
jo
jne
or
decb
in
mov
rorl
aam
std
dec
xchg
pop
movsb
pop
mov
mov
mov
mov
stos
pop
addr16
xchg
push
jmp
add
mov
mov
test
mov
lcall
mov
cmpsl
jp
lret
jb
outsl
cwtl
shlb
cmp
lea
test
sbb
mov
fwait
mulb
or
or
test
xor
jne
inc
pop
js
xchg
aam
das
add
dec
jo
popl
inc
fstp
loopne
icebp
jge
adc
push
sub
sub
cwtl
adc
cwtl
js
pop
xchg
adc
and
add
add
fwait
and
add
in
inc
daa
scas
xor
sahf
pusha
adc
mov
sahf
cmp
insl
clc
out
sahf
or
inc
jnp
xor
pop
scas
push
arpl
or
pop
push
lods
xchg
out
or
in
inc
push
sbb
push
pop
jb
mov
mov
addr16
cmp
cltd
sbb
xor
or
or
cwtl
cmp
shrb
sub
sub
mov
push
jns
inc
cmp
or
out
icebp
addl
dec
pop
bound
pop
mov
xchg
stos
xorl
aam
pop
xchg
fidivs
mov
cmp
xchg
cmp
or
cmpb
outsb
jp
outsl
or
cmpsl
in
jnp
js
jecxz
pop
cwtl
mov
pop
or
and
les
out
jno
mov
mov
rcr
lret
pop
xchg
loope
push
or
lret
add
jl
ret
int
leave
rorb
mov
or
or
cmp
nop
xchg
pop
sbb
push
dec
pop
out
outsb
push
mov
fcomp
add
popf
xor
testl
aas
push
jo
popf
pop
cmc
push
ret
test
ds
push
ja
filds
jmp
cmp
jecxz
icebp
out
scas
call
pop
shr
cmp
dec
jbe
mov
sti
rclb
xchg
mov
ljmp
jp
jmp
mov
ret
cwtl
inc
mov
pop
loope
mov
data16
test
mov
or
pushf
ret
in
sub
add
cmp
movsb
adc
xor
cwtl
xchg
rcrl
sub
notb
call
mov
cmp
std
sub
pop
jge
leave
lret
lret
jnp
and
push
push
dec
mov
std
std
cmpsb
xchg
jecxz
cmp
add
test
cmp
mov
call
lret
jp
mov
xor
hlt
imul
lcall
and
push
jecxz
or
push
clc
mov
xor
jns
adc
add
in
arpl
fists
sbb
leave
and
shlb
arpl
mov
je
xorb
popf
inc
mov
cmc
add
add
sub
daa
lret
jne
outsl
movsb
int
mull
sbb
push
dec
sbb
sbb
mov
sarb
icebp
mov
test
push
jbe
or
push
lahf
xchg
fidivl
or
jge
iret
cmpsl
int3
sbb
cltd
fcoms
adc
into
pop
sbb
test
bound
sbb
jl
push
xchg
xor
mov
sbb
jne
out
inc
lahf
jl
or
xor
jbe
mov
cmpsb
sbb
stos
ljmp
dec
inc
xchg
mov
lods
outsb
mov
ljmp
aad
lock
and
and
mov
popf
dec
notb
mov
ss
xor
push
movsl
lea
je
mov
cmpsb
add
test
xchg
dec
repnz
jecxz
es
or
push
jns
xchg
add
test
popa
adc
push
add
or
and
jp
add
movsb
pop
xchg
lds
cltd
lret
mov
xchg
fmuls
xchg
mov
sbb
mov
xchg
jl
setnp
js
mov
add
jmp
xlat
les
mov
dec
or
nop
mov
dec
dec
stc
cmpsl
sub
in
xor
fidivs
jbe
ja
nop
movb
out
jmp
inc
sbb
adc
push
inc
mov
mov
xchg
push
lcall
sbb
loopne
incb
push
loop
xchg
rclb
arpl
mov
cmp
aas
loopne
mov
sbb
movsb
mov
adc
or
fbstp
push
fsubr
or
xor
inc
jecxz
mov
in
dec
adc
xor
rorb
rol
repz
in
adc
jnp
jo
pop
inc
adc
fs
push
cmc
daa
jg
jno
pop
hlt
jne
bound
cmpsb
jl
mov
xchg
movb
andb
sbb
mov
pusha
inc
cmp
sub
jno
and
mov
mov
pop
inc
fsts
cmp
icebp
xlat
test
push
jo
and
mov
arpl
mov
pop
mov
inc
adc
jg
jo
sub
adc
mov
div
lock
addr16
push
add
out
dec
mov
pop
add
loop
outsl
sti
jns
push
das
cmp
mov
fwait
mov
xchg
stos
add
out
mov
add
sbb
sbb
xor
mov
push
inc
stc
addl
sbb
jno
sbb
pop
nop
and
jge
mov
sbbl
ret
xor
rcrl
dec
mov
fwait
lods
mov
cld
or
stos
repnz
jp
mov
xchg
into
xor
aam
subl
sbb
stos
jns
aaa
lods
adc
repnz
cmp
add
fdivrs
jne
les
xchg
mov
sub
add
test
xor
fidivrl
or
cmc
outsb
xlat
jae
cmpsl
orl
xlat
outsl
pop
pop
out
scas
xor
imul
ret
mov
lcallw
mov
cmp
mov
sbb
inc
sbb
filds
dec
out
addr16
out
daa
rorb
and
cmpsl
ss
mov
xor
hlt
into
nop
roll
ficomps
xchg
loop
int
pop
insl
cmp
jne
xchg
dec
loop
addr16
pop
out
enter
add
sbb
popf
or
loopne
mov
push
pop
loopne
fdivrs
je
movb
or
ret
out
stos
insb
mov
fcoms
dec
push
mov
push
fisubrl
inc
or
mov
sarb
fwait
pop
mov
mov
cmc
ss
lods
out
aas
imul
xchg
add
lods
movsb
mov
loopne
aas
jae
inc
sub
cmp
sbb
decl
nop
lret
mov
outsl
jnp
mov
xchg
jecxz
xor
sbb
cmp
pop
sahf
pop
or
lds
cmp
push
mov
test
ja
pop
das
mov
ret
sbb
ss
gs
lock
fisttpl
cmc
pop
lret
mov
xchg
adc
inc
loop
out
xchg
lds
addl
xor
insb
sbb
ret
fnstcw
sub
jp
aam
addr16
inc
es
and
jmp
stos
and
in
call
push
ret
pop
popa
pop
sbb
fwait
imul
push
or
and
popf
in
push
jp
inc
lock
mov
mov
cmp
and
addr16
mov
rcll
rcl
imul
sub
andl
scas
adc
sbb
xchg
ret
dec
push
jmp
js
mov
scas
jno
addr16
pop
aaa
insl
outsb
mov
jl
fdivrp
rcrb
inc
adc
sbb
pop
adc
pop
mov
xchg
adc
imul
add
or
sub
lret
xor
outsb
std
mov
mov
clc
cmp
inc
insl
int3
loope
aad
jle
sub
mov
pop
sbb
cmp
aam
rcl
cmpb
push
lret
push
mov
cmp
ds
push
or
cmpsb
sbb
sbb
or
pop
xor
mov
in
addl
jge
adc
cmp
inc
cli
test
add
pop
gs
leave
pop
stc
shl
xor
repnz
jecxz
dec
js
mov
xor
add
mov
mov
xor
das
mov
xchg
das
lret
cmpsb
repnz
adc
repnz
xchg
push
xchg
int3
addl
dec
or
pop
repnz
dec
mov
neg
inc
ret
add
rorb
jecxz
adc
xchg
icebp
fs
stos
jnp
xor
scas
loop
push
sub
xor
addr16
push
push
cmp
sbb
and
or
outsl
lea
jmp
lcall
icebp
xor
push
or
aad
inc
mov
int3
jge
scas
pop
xchg
aad
jae
scas
xlat
seto
adc
dec
sti
jl
div
ret
inc
sbb
lcall
test
imul
out
lret
or
inc
fmuls
fistpl
scas
je
outsb
loop
cli
es
std
nop
pop
cmpsl
iret
out
mov
mov
fcoms
loopne
push
add
loop
sub
lds
lods
outsb
cmpsl
out
shr
test
mov
inc
fsts
xor
mov
mov
icebp
mov
dec
xor
rorl
popa
out
pop
sub
orb
and
inc
add
fcmove
dec
lret
imul
gs
cltd
nop
fmull
or
mov
lods
cld
dec
push
xor
and
cmp
jg
imul
in
push
cmpsb
mov
fdivs
fnsave
jns
xchg
push
add
push
mov
mov
dec
xchg
inc
out
or
push
mov
call
lea
cmp
jne
xor
sub
mov
mov
fsubs
sbb
clc
mov
pushf
hlt
mov
xchg
insb
int3
pop
xchg
or
lods
test
decb
mov
lahf
mov
out
cmpsl
pop
cmp
mov
or
sub
cwtl
dec
mov
enter
and
sti
adc
es
add
pop
lahf
nop
pop
sub
ret
ljmp
test
adc
mov
in
fbstp
dec
adc
pop
mov
insl
dec
repz
ret
jmp
pop
push
or
mov
jnp
js
ja
repz
push
dec
repnz
es
movsl
pop
add
push
int
not
dec
movsl
in
push
test
xlat
shll
jbe
xor
cmp
push
int3
adc
add
out
pop
imul
bound
sbb
adc
ja
mov
into
mov
xchg
mov
mov
add
cmp
jecxz
mov
sbb
jb
pop
and
add
push
sub
and
popf
push
dec
cmp
into
sbb
ja
inc
push
in
mov
cwtl
mov
sbb
cli
jb
pop
das
loop
sbb
jo
loop
xlat
lret
lds
outsl
pop
testl
js
call
mov
jecxz,pn
add
mov
addr16
notb
inc
pusha
pop
cmp
inc
stos
xchg
idivb
xor
addr16
lcall
lds
test
pop
popa
and
xchg
std
jns
add
push
ret
cmp
aaa
jge
mov
hlt
lods
xor
ss
push
add
stos
jle
aaa
push
push
test
xor
in
and
test
mulb
mov
cmp
lcall
sbb
fisttpll
jecxz
imul
or
imul
call
addr16
mov
jns
pop
push
adc
sub
add
push
sub
rol
call
push
cmpsb
sub
fs
xchg
repnz
inc
pop
sahf
std
add
sbb
cmp
fadds
jl
dec
dec
test
mov
outsb
mov
add
mov
pop
mov
insl
or
and
jge
pop
lods
add
and
pop
cmp
pop
xchg
pop
cmp
out
rorb
mov
mov
push
loop
out
rcll
mov
sbb
movsb
jno
jns
jle
movsl
mov
xor
cli
jne
push
push
ret
movl
aas
lret
sbb
adc
stos
cmpsb
stc
xchg
mov
minps
fwait
js
scas
xor
jne
jge
add
sub
mov
adc
mov
jns
lret
mov
pop
lock
ss
in
aam
std
stos
cld
push
mov
gs
addr16
stc
push
test
push
mov
stc
sub
push
sahf
out
mov
out
pusha
push
mov
icebp
ret
push
and
cli
in
push
ret
outsl
mov
adc
jo
adc
xor
imul
cmp
push
add
ror
mov
inc
insb
jp
dec
cmp
xchg
cmp
movntq
popf
cmp
mov
outsl
mov
hlt
add
sbb
jo
adc
jne
das
stos
sbb
jp
cmpsb
inc
and
mov
sub
and
jns
lret
movsb
mov
mov
mov
mov
call
add
cmp
shr
leave
fsubr
pop
inc
pop
js
pop
pop
push
or
or
mov
stc
leave
out
jle
sarl
fmuls
ret
add
inc
cmp
loope
movsl
push
sahf
xchg
in
bound
pop
mov
lock
inc
leave
std
pop
sub
ja
add
sub
xchg
pop
add
xchg
int
mov
dec
sub
enter
in
out
add
rcrb
psrlw
cmp
mov
xchg
test
add
icebp
lods
xor
out
jge
xor
js
popf
lret
cmp
popa
arpl
bound
fwait
test
add
mov
push
and
xor
dec
insl
inc
pusha
scas
mov
lret
int
or
mov
out
jg
add
ss
subb
jae
ror
xchg
fstl
test
xor
dec
pop
or
imul
movl
std
sub
dec
lahf
dec
adc
push
fisttpll
push
cli
xchg
imul
mov
lock
daa
popf
es
movsl
les
xchg
xchg
mov
xchg
lret
lods
ret
mov
cmp
dec
push
push
add
push
lock
and
sbb
and
sbb
adc
mov
out
test
lea
cli
push
ja
inc
push
sub
mov
push
xor
mov
mov
int3
fwait
push
ljmp
rorl
push
mov
std
mov
push
mov
mov
or
jb
xchg
arpl
lea
push
pop
sarb
les
lret
xchg
repz
jns
jo
test
cs
mov
pop
push
sub
icebp
jg
popf
movsl
or
dec
js
icebp
ja,pn
jnp
or
es
sub
mov
or
mov
dec
loop
sbb
stc
cmp
rol
aad
cmp
out
jo
push
in
add
daa
and
sub
js
movsl
add
ja
ljmp
pop
movsb
adc
xchg
or
inc
notb
fwait
push
nop
sub
int
add
mov
movsl
mul
push
dec
int
stc
nop
jo
inc
inc
xor
mov
sbb
adc
lods
push
add
or
add
mov
push
mov
fimull
xchg
cmp
pusha
xchg
into
in
mov
dec
or
sarb
xor
jno
lock
test
dec
inc
les
cld
jmp
adc
dec
jl
inc
sbb
in
cli
jmp
or
testl
iret
add
push
bound
cltd
cmp
dec
leave
daa
sbb
je
adcb
jb
pop
mov
js
and
pusha
shr
adc
imul
cmpsb
mov
dec
std
xchg
mov
mov
dec
lods
out
jno
hlt
out
rorl
pushf
nop
loopne
mov
mov
xor
mov
cwtl
mov
mov
mov
in
dec
rcrl
aad
push
push
loope
or
outsl
and
flds
insb
lods
shll
xor
mov
dec
xchg
lahf
ljmp
cmpsb
jg
xchg
inc
and
aam
out
js
aad
fwait
repz
pop
xor
cli
inc
lcall
adc
sahf
lods
sub
xor
decl
pusha
mov
in
dec
shll
adc
cltd
cmc
adc
mov
aas
push
and
and
cmp
sub
jl
pop
je,pt
int3
in
fildll
aad
clc
cmpsl
aad
lret
push
call
out
jecxz
mov
lcall
aam
jl
test
jb
dec
push
insl
cli
jp
mov
ret
in
jle
mov
ret
jge
hlt
cmp
or
xor
in
cmp
mov
cs
cmp
sbb
rcll
into
pop
sbb
cltd
xchg
mov
mov
pop
es
add
inc
mov
mov
icebp
or
call
xchg
fisubl
inc
pushf
push
and
sbb
adc
aaa
movsb
fadds
pop
sub
outsl
sbb
fsubr
adc
add
adcl
dec
fcomps
fxch
testb
outsl
cmpl
fadds
es
sub
insl
xlat
jecxz
mov
enter
xchg
pop
nop
cmp
mov
pop
mov
xchg
jle
xchg
and
push
loopne
mov
sti
mov
xor
dec
xor
std
pop
test
mov
data16
out
mov
out
mov
xor
xchg
out
cltd
movsb
cmc
push
cmpsb
sub
lds
dec
je
sti
je
loopne
in
pop
scas
pop
call
mov
in
test
test
pop
in
sbb
fstpl
push
cs
jnp
add
or
push
xchg
repnz
or
cmpb
mov
lret
pop
idivb
mov
jmp
mov
xor
xorl
dec
hlt
hlt
xchg
mov
fwait
push
adc
fwait
cmpsl
repz
lcall
loop
rep
into
and
movl
adc
push
sti
inc
pop
mov
mov
andl
pop
add
in
ficoml
xor
mov
pop
ljmp
ds
bnd
cmp
enter
enter
rcll
pop
xchg
dec
sub
lock
mov
xchg
push
xor
ret
jne
jl
inc
leave
cmp
or
jmp
dec
je
xchg
mov
cld
xor
pop
adc
adcl
enter
stos
mov
out
das
je
test
add
sbb
int3
fwait
push
jno
mov
mov
loop
data16
rorl
pop
dec
push
nop
enter
fs
push
push
mov
adc
popf
fdivs
dec
icebp
shlb
loopne
sbb
stos
insl
dec
fwait
jnp
xchg
xchg
cmp
xchg
adc
loope
mov
sahf
mov
mov
pop
fdivs
jg
mov
cmp
mov
fiadds
das
into
fisttpll
sub
out
xchg
mov
jle
lahf
cmp
cwtl
repnz
xor
sub
inc
js
jle
sbbl
mov
js
fnstsw
ljmp
jno
xor
inc
not
out
ss
in
pop
pusha
das
mov
subl
jns
or
adc
mov
dec
loop
push
xor
dec
std
xor
out
dec
mov
and
test
jns
arpl
ja
adc
imulb
cltd
out
add
lahf
inc
jae
sub
adc
rolb
or
std
pushf
data16
mov
fnstenv
out
pop
jo
sbb
notl
inc
out
jno
dec
xor
movsb
inc
mov
dec
mov
push
call
push
lds
lods
xor
pusha
pop
out
imul
out
xor
sbb
popa
adc
mov
pop
mov
xor
lods
lds
out
inc
cmp
stos
cli
mov
sahf
sub
and
mov
mov
fmull
cli
fsts
mov
jecxz
xchg
decb
sub
ljmp
mov
pusha
push
les
pop
xor
jne
pop
jno
jns
pop
movsl
cmpsb
mov
dec
lods
xor
outsb
adc
daa
lret
adc
hlt
jl
mov
cwtl
and
push
and
lds
dec
sbb
js
sbb
xchg
das
addr16
add
data16
das
and
lahf
mov
mov
adc
aas
repnz
xchg
cld
cwtl
lret
pop
call
jl
icebp
xchg
push
test
ror
inc
cmp
les
pop
fwait
inc
shlb
sbb
aas
and
faddp
jb
push
lock
mov
aas
clc
sub
sbb
insb
jbe
loop
inc
icebp
xor
sub
jge
int3
lods
pushf
cmc
xor
int
in
aam
packuswb
and
jb
mov
cli
dec
sub
outsl
mov
pop
mov
or
lret
mov
cmpsl
and
ficomps
popa
cli
jmp
pop
xor
mov
lds
mov
aas
cltd
adc
into
aas
push
lods
dec
push
lods
fidivrs
jp
fstpl
jg
imul
lds
divl
fcompl
inc
cmp
pop
add
cmp
aam
loop
inc
out
test
cmp
mov
fnstcw
mov
pusha
popa
cmp
pop
lds
test
pop
loope
cmp
psubusw
jne
test
xchg
mov
push
inc
push
fwait
rclb
fistl
std
pop
iret
xor
jmp
lods
add
add
ss
adc
cmpsb
mov
jne
call
xchg
mov
scas
cmp
mov
jbe
popf
movsb
jb
cmpsb
lea
and
fs
xor
sub
pusha
inc
or
cmp
dec
sub
cli
adc
test
movups
scas
cmp
inc
xor
stos
xlat
clc
sub
inc
popl
aaa
pop
loop
add
fldenv
jg
aad
mov
imul
dec
jb
push
test
jno
jge
jle
maskmovq
idivl
test
loope
pop
addb
test
jb
mov
dec
bound
xchg
aaa
les
jg
xlat
dec
in
jae
push
lods
ror
int
fcmovu
ljmp
jnp
inc
mov
xchg
ffree
jl
xchg
and
inc
mov
loopne
jmp
jmp
pop
jle
ljmp
mov
cmp
sbb
sbb
gs
cmp
lahf
test
inc
testl
shl
dec
and
jecxz
cltd
and
out
and
pop
jg
ss
lahf
loop
jmp
mov
out
ret
and
xor
jmp
cltd
dec
in
mov
cwtl
sub
add
jge
das
ficoms
insl
mov
xlat
cmc
cmp
fsubrl
ret
mov
and
pusha
pusha
clc
popa
lock
adc
sti
inc
fsubl
subl
and
in
rolb
mov
ret
in
mov
and
aam
mov
inc
xor
fildll
pop
adc
mov
aam
xor
in
adc
call
into
push
push
rorl
xchg
icebp
mov
jns
adc
push
fisubrs
mov
rclb
jnp
push
sub
sub
dec
sbb
aas
jecxz
mov
push
mov
xchg
fwait
stos
xlat
sahf
jo
fsubl
add
jg
fcoml
push
mov
fbld
pop
jo
aaa
addr16
sti
jbe
fwait
lds
push
imulb
xchg
push
fidivs
nop
push
mov
add
das
sbb
cmc
push
cltd
in
ret
push
adc
addb
jg
cli
shl
cld
mov
and
xchg
fwait
shlb
out
lods
push
lock
adc
mov
inc
mov
repz
add
add
fxrstor
sbb
or
in
sbb
sbb
hlt
imul
adc
repnz
popa
out
push
outsl
xchg
mov
mov
and
idivl
aas
out
mov
loope
test
jne
sarl
pushf
push
mov
inc
jmp
leave
test
push
sbb
jb
inc
dec
mov
call
loope
iret
xorb
adc
xor
iret
mov
mov
xchg
inc
sbb
les
sbb
cmp
iret
inc
cmc
ja
jl
fwait
push
xchg
mov
stos
dec
mov
xor
cmp
fists
cltd
leave
dec
sbb
xor
test
out
jmp
dec
or
pop
cmp
leave
inc
push
push
sbb
gs
add
cmp
mov
ficompl
pand
sbb
jno
jne
add
pusha
sbb
rol
mov
insl
xchg
xor
hlt
stos
sbb
push
mov
mov
outsl
adc
push
sub
imul
inc
fists
push
outsl
sbb
call
insl
xchg
and
stc
jmp
xchg
sahf
jae
sti
mov
in
dec
les
insl
cld
mov
leave
jbe
jb
fcoml
imul
add
inc
xor
data16
inc
pop
aam
incb
mov
pop
repz
mov
les
sub
fisttps
mov
int
fnsave
je
cmp
movsb
inc
aaa
adc
icebp
out
dec
add
in
sahf
inc
inc
xor
aas
fwait
testl
xchg
jo
add
cmp
adc
mov
push
inc
pop
and
jne
xlat
cltd
int
xor
fwait
adc
jbe
data16
rcr
aas
loope
dec
adc
xor
mov
push
or
dec
mov
aas
and
or
and
mov
shll
ret
cmp
scas
mov
in
sti
mov
jp
xchg
ljmp
inc
icebp
push
pusha
dec
stc
arpl
lock
cmp
mov
sahf
push
frstor
popf
add
outsl
mov
jmp
test
push
xchg
pop
outsl
mov
cltd
ficoms
fxch
push
fucomp
xor
jae
xchg
cmp
scas
xchg
stc
push
mov
adc
jmp
mov
cmpsb
roll
jg
scas
mov
or
xchg
jae
mov
mov
sub
inc
inc
lahf
push
mov
add
push
xlat
movsb
out
test
aad
cmp
xchg
dec
jno
mov
int3
fwait
lds
xchg
add
add
mov
test
jge
insl
push
inc
push
push
aaa
fisubrs
jecxz
sbbl
fwait
lcall
inc
adc
jl
pusha
push
sub
scas
or
loop
push
sub
add
pop
into
inc
mov
pop
adc
mov
push
mov
fnstsw
add
sti
scas
mov
loopne
pop
data16
jmp
pop
into
daa
addr16
jl
in
mov
loop
xchg
ja
xchg
mov
pop
dec
or
push
and
inc
dec
mov
sub
lock
mov
fdivs
dec
jecxz
xchg
aad
cmp
mov
out
inc
call
addr16
or
push
daa
push
sbb
lret
sub
scas
lahf
cmc
and
cwtl
xor
leave
sub
je
sub
fstpt
and
jp
fdivrl
fidivl
dec
sbb
jl
add
lods
or
cwtl
outsl
push
xchg
shll
dec
add
pop
fnstcw
mov
jnp
sbb
out
dec
mov
idivl
xchg
clc
adcl
jle
xor
in
mov
out
imull
fbld
lret
or
xchg
lock
rcr
stos
xchg
icebp
xlat
push
loopne
mov
push
pop
loope
pop
add
fmull
adc
add
cmpsb
jecxz
jne
sahf
pop
test
pop
ljmp
sub
lds
or
xorl
or
jno
xlat
cli
jno
iret
std
sub
stos
stc
leave
out
xor
inc
dec
jmp
sbb
push
imul
in
mov
sbb
lret
push
jle
mov
mov
sub
repz
imul
icebp
loop
icebp
pop
mov
push
rcll
arpl
or
push
ss
js
pop
mov
pop
fsts
and
mov
cmc
out
dec
rcrb
pop
out
sub
mov
es
mov
out
out
call
clc
xor
add
push
fisttpll
aad
cmp
mov
adc
addb
in
hlt
scas
pop
in
in
xor
adc
in
in
dec
or
aam
clc
pop
jnp
fwait
mov
sti
xchg
push
iret
mov
in
popa
push
fwait
dec
or
mov
outsb
push
popf
dec
or
cs
cmp
insb
mov
and
inc
pusha
inc
insb
je
les
mov
cmpsl
pop
inc
push
xor
jne
mov
fidivrs
pshufw
xlat
movsb
andl
mov
les
std
sti
inc
les
mov
loope
mov
std
fists
popf
add
cli
dec
ja
data16
mov
mov
outsb
jo
cltd
pop
add
lock
and
nop
mov
mov
mov
cmp
jle
fadds
mov
sahf
push
push
jg
xor
pop
aam
sub
jne
pop
call
jle
mov
push
jae
inc
loopne
stos
jmp
shlb
adc
mov
cmpsb
outsb
scas
xchg
push
lahf
nop
push
fiaddl
push
andl
xchg
or
dec
cwtl
cli
add
aam
cmp
push
push
pushf
movsl
addl
or
adc
jne
mov
sbb
clc
xchg
push
jns
xchg
add
fs
or
jnp
adc
xchg
mov
and
pop
sub
and
mov
and
push
test
call
loopne
mov
ja
push
sbb
mov
push
and
mov
mov
add
dec
jmp
insb
scas
pop
jne
leave
pop
inc
inc
adc
and
inc
cmpsl
fwait
lret
cli
lahf
mov
mov
test
add
xchg
mov
inc
sbb
mov
fnstcw
jb
push
inc
out
add
or
mov
repz
out
sbb
lods
adc
stos
sbb
repnz
cld
cmp
dec
mov
loop
sbb
test
gs
adc
jnp
adc
mov
insb
fcomp
aas
lret
push
loop
fcomp
aas
lret
push
loop
bound
jmp
loope
jbe
mov
scas
jno
loope
jmp
mov
orl
push
sbb
sbb
movsl
movsb
sub
jmp
or
stos
scas
fsubl
in
ret
pop
lds
sub
jge
cltd
and
aad
int3
mov
out
mov
popa
adc
or
outsl
js
sti
xor
outsb
in
cmpsl
xor
add
lds
leave
inc
das
sub
pop
test
add
push
scas
mov
pop
add
and
mov
call
pusha
lahf
inc
push
scas
jbe
xchg
jns
sbb
push
jnp
sub
jp
inc
pop
push
push
sti
cmpl
sarb
sbb
pushf
xchg
fdivp
xor
sub
jbe
insb
push
adc
mov
mov
or
add
rorb
xchg
lret
inc
mov
push
xchg
dec
daa
mov
xchg
cltd
bound
lock
dec
lock
pop
xor
dec
insl
and
clc
arpl
inc
ret
sub
bound
jg
pop
push
cmp
cmp
mov
mov
call
and
dec
add
popl
imul
fdivp
mov
jmp
mov
out
adc
out
pop
cmpsl
int3
test
repnz
push
inc
adc
push
outsb
and
adc
fidivrs
mov
pop
repnz
imul
add
push
xchg
imul
adc
insb
lods
movsl
fcoms
inc
jge
sbb
push
dec
cmp
push
iret
xlat
xor
jp
push
xor
sbb
sub
jb
sbb
stos
add
lea
cmpsb
cli
std
sbb
mov
or
shrb
js
imul
sbb
push
jns
xchg
outsl
test
neg
cli
jge
insl
bswap
scas
pop
xchg
jae
sbb
rep
sbb
in
adc
ja
mov
int3
test
push
lods
add
cmp
add
or
gs
out
and
mov
xchg
rol
sub
xor
leave
mov
dec
fisttpl
scas
sub
mov
xor
ja
push
scas
loope
cmp
and
stos
push
dec
pusha
pop
dec
adc
and
pop
ret
sub
ret
cltd
and
xchg
xor
dec
jg
jno
add
sub
push
lock
aam
cli
sub
aad
xor
mov
in
sub
jne
push
jecxz
testl
jns
sbb
bound
add
cmp
pop
lods
outsl
sub
out
pop
shll
push
cmp
jo
adc
mov
pushf
push
rcl
hlt
roll
loope
pop
es
lcall
xor
sub
pop
sub
fstps
add
push
leave
pop
arpl
and
imul
jecxz
xchg
jbe
pushf
or
mov
cmpsl
jmp
out
jne
fnstcw
adc
push
inc
xchg
pop
and
outsb
mov
scas
pop
sub
subps
call
out
jle
imul
push
adcb
mov
enter
into
lods
inc
fcmovne
push
in
cmc
pushf
mov
or
inc
push
cwtl
out
movsb
pop
dec
imul
mov
ret
xor
sbb
jne
inc
push
adc
insb
mov
nop
dec
insl
inc
add
cmp
mov
aaa
out
xchg
sahf
shlb
jnp
push
xor
loope
fwait
daa
aad
imul
out
insb
out
nop
sbb
into
mov
and
das
push
sbb
mov
jmp
sub
inc
jo
xchg
mov
cmp
xchg
out
sbb
cli
movsl
jle,pn
lahf
into
mov
push
inc
out
cld
out
cmp
jae
cmp
lret
sti
aad
ljmp
add
xchg
ficomps
cli
mov
push
loop
xchg
ja
fsubs
cld
lods
fcomps
ror
sbb
lahf
sub
and
jb
imul
pushf
sub
pop
rcrb
inc
push
mov
push
repnz
rcrl
inc
mov
jno
push
nop
mov
scas
shr
mov
dec
sub
shlb
xlat
iret
fstps
jp
lret
cmp
mov
pop
mov
daa
mov
daa
bound
xchg
xlat
sti
pop
loop
mov
jb
sarl
and
jmp
inc
sub
movsb
adc
fwait
inc
dec
pop
adc
loope
push
cltd
popl
pop
rep
mov
jecxz
into
xor
neg
inc
sub
out
sub
fcmove
mov
or
xchg
jp
or
fidivl
pop
push
icebp
sbb
stc
push
push
mov
jns
or
sbb
jne
xor
jae
inc
and
or
lea
and
sti
pop
pop
lds
mov
iret
aad
pop
jle
push
mov
mov
or
jle
mov
xor
fwait
xor
inc
loope
rcl
sbb
arpl
jnp
lcall
mov
add
dec
test
jl
add
dec
ret
jp
sti
mov
push
inc
sbb
fwait
pop
sub
pushf
loope
shl
les
mov
repz
inc
and
cmpsl
testb
inc
into
orl
fnsave
xchg
sbb
sub
inc
in
adc
in
mov
adc
test
push
jne
xor
and
clc
testb
stc
dec
int3
push
loopne
mov
sub
push
push
adc
adc
movsb
popa
in
out
mov
lock
dec
xorb
or
and
sbb
mov
lods
fcomp
or
test
daa
and
int3
addr16
jg
scas
dec
fbstp
mov
es
scas
jne
std
ffreep
test
mov
enter
inc
icebp
outsl
lods
push
cmp
dec
mov
shrl
ret
xorb
sub
adc
xchg
jne
inc
pop
cmpsl
mov
daa
xchg
out
bnd
ret
cmc
and
addr16
sub
mov
test
lock
sub
push
lret
ss
rcll
adc
test
mov
lea
icebp
push
cmp
mov
mov
or
and
xor
or
mov
fs
bound
mov
mov
xchg
les
and
stos
mov
or
out
pop
push
cmp
lret
aas
push
cmp
es
mov
ja
test
fldenv
fs
jnp
sub
fldenv
push
jmp
mov
int3
test
cmp
xorb
add
fsubr
cltd
test
lret
cmpsb
jo
cmp
fdivrs
or
sub
add
leave
jmp
js
push
jle
aaa
cld
add
lods
loopne
jo
ss
popa
xor
outsb
lock
arpl
outsl
ja
sub
jp
push
sbb
fs
movsl
jae
add
adc
dec
mov
fsubr
push
enter
and
mov
or
xchg
push
mov
inc
cmpsl
jno
mov
push
cmc
mov
in
call
shlb
add
sub
fiaddl
mov
push
nop
stos
clc
xor
cmpsl
mov
push
mov
sub
notb
mov
mov
mov
and
mov
cwtl
mov
mov
loope
repnz
iret
fst
stos
push
fwait
inc
lods
mov
pop
into
or
sbb
insb
ds
fdiv
jg
pop
dec
sub
sub
pop
repz
cld
repz
xchg
test
dec
imul
sbb
das
xchg
or
lods
cltd
pop
add
sbb
fdivl
shrb
seto
lods
mov
ret
sbb
mov
mov
and
mov
stc
xchg
cmpsl
dec
inc
jecxz
xchg
add
ret
sti
dec
xchg
xchg
iret
fstps
popa
xor
jl
stos
dec
and
ficomps
rcll
mov
mov
cmp
cld
in
add
cmp
pop
stos
sbbl
inc
dec
jecxz
cmpb
jmp
mov
and
pop
or
and
fsubs
add
cli
in
shrl
and
jnp
fcomip
mov
out
adc
pop
aam
and
pop
sub
xchg
push
sbb
cmpsl
insb
mov
adc
mul
inc
jmp
adcl
push
repz
call
and
and
push
or
iret
pushf
fildl
mov
adc
and
lock
pushf
adc
mov
push
or
daa
xchg
inc
dec
jmp
push
add
fstps
ret
sbb
negb
mov
add
xor
jnp
lret
jge
jns
gs
js
test
dec
jle
test
fwait
scas
movsb
pop
cmp
and
pop
adc
pop
cmc
arpl
dec
test
fprem
out
addr16
add
in
lcall
dec
jg
leave
xlat
dec
scas
mov
ret
jb
sub
int
negb
gs
dec
jg
inc
test
shll
xor
xorl
or
push
lret
and
cmp
pop
push
jmp
repnz
and
into
pop
enter
cmc
adcl
jno
jge
xor
lds
cs
aad
test
fwait
xchg
xor
xchg
cmpsb
xchg
sbb
mov
cmp
in
mov
popf
jae
ret
mov
aaa
aas
and
dec
mov
cmpsl
sub
sub
or
inc
xchg
xchg
ja
and
cmc
cmp
xor
out
int3
xchg
xchg
enter
xchg
add
out
or
fs
call
xchg
loope
fnstenv
adc
mov
inc
jno
add
iret
jle
ja
ret
or
dec
cli
jmp
or
subl
test
rcr
fildll
lea
cmc
ja
rcrb
pushf
push
mov
adc
jg
insl
jle
mov
lret
fldt
or
and
imul
ss
lret
sti
push
sub
jle
fcoms
push
add
mov
int
xor
jl
or
mov
jb
sub
insb
jae
pop
addb
nop
enter
ja
inc
adc
int3
shr
push
mov
lock
stc
les
push
shrl
mov
aaa
adc
mov
arpl
scas
shlb
pop
faddl
imul
aas
mov
cmp
fwait
or
jb
out
xlat
in
push
adc
xchg
mov
mov
clc
ds
add
shl
add
fmuls
fbld
in
cli
mov
xor
mov
rcr
mov
push
dec
add
mov
jl
out
dec
jl
or
insb
test
push
lret
pop
aam
lcall
divl
cmpsl
bound
idivb
sub
lahf
or
and
aas
xor
mov
into
nop
bound
xchg
dec
pop
sub
jg
pop
sub
inc
push
cmp
sbb
cmpsl
test
imul
incb
adc
repnz
shrb
push
stos
push
sahf
pop
mov
out
dec
aaa
or
inc
jne
mov
test
or
xchg
sub
popa
mov
sbb
insb
test
outsb
imulb
mov
in
pop
push
test
xchg
adc
test
xor
mov
xlat
lea
iret
insl
aad
xchg
and
nop
jge
mov
mov
out
jns
jp
scas
mov
mov
adc
mov
and
or
cwtl
pop
sti
sbb
adc
cmp
mov
xor
insl
xor
add
jp
inc
lea
xchg
les
test
mov
adc
adc
cld
test
sub
icebp
aaa
jecxz
pusha
add
xchg
mov
leave
xchg
or
enter
xchg
jmp
pop
push
ror
pop
sbb
sbb
cmc
imul
inc
push
cmp
mov
dec
in
outsl
pop
sub
adc
jae
loop
fldenv
cs
adc
popl
es
push
xchg
call
xlat
mov
das
xor
xchg
test
jmp
xchg
hlt
ljmp
sbb
stc
inc
xchg
xor
addr16
xor
cmpb
enter
inc
adc
outsb
add
mul
ss
rol
mov
fiadds
jnp
cld
mov
mov
repz
push
and
int
xchg
xor
xor
inc
rcl
stc
mov
add
sub
cs
fiaddl
mov
push
mov
cwtl
sub
xchg
ret
cmp
dec
sarl
mov
les
ljmp
out
cmp
adc
push
insb
fidivrs
dec
xor
fbstp
lret
and
loope
out
lahf
out
jns
insl
fs
and
test
aad
and
aaa
dec
call
mov
fst
xlat
or
aam
out
in
mov
fs
xor
inc
mov
xor
push
pusha
shr
push
inc
test
mov
mov
adc
sub
mov
jmp
xchg
push
add
push
sub
in
lahf
mov
movl
and
adc
inc
cpuid
mov
jae
test
cli
pop
and
in
into
jmp
aad
sub
mov
stos
add
mov
fnsave
js
sbb
fldl
fdivrs
mov
push
fistl
jo
aam
movsl
call
xor
mov
sti
mov
sbb
push
cmpsb
lock
inc
ud2
leave
mov
xor
or
pop
faddp
addr16
and
push
out
and
xchg
mov
mov
mov
jg
cmp
dec
dec
dec
push
mov
je
test
mov
bound
sbb
sbb
jp
mov
mov
cmp
push
sub
out
enter
sbb
pushf
adc
add
iret
imul
pop
subb
push
adc
mov
jno
xchg
fwait
or
ret
xor
sub
imul
xchg
lods
popa
shll
sbb
out
lcall
stos
mov
xchg
inc
push
addr16
cs
loope
mov
and
push
arpl
push
adc
sbb
xor
mov
cmpsl
fwait
pop
in
shll
stos
repz
mov
push
dec
mov
xchg
inc
adc
out
scas
xchg
mov
pop
sub
rolb
cld
mov
roll
insl
div
inc
push
test
or
or
adc
cmp
test
dec
fdivrp
mov
push
popl
mov
stc
nop
push
lcall
pusha
or
shll
and
ss
xchg
je
mov
aas
in
pop
cmp
in
inc
fisttpll
jecxz
jmp
adc
dec
cltd
cmc
dec
sahf
insl
shrl
mov
adc
adc
not
rol
inc
adc
imul
dec
cmpsl
loopne
cmp
bound
cmpsb
xlat
stc
cli
loope
pop
fsubrl
xor
mov
and
cmp
xchg
cmp
leave
rorb
mov
fldl
popf
fadds
arpl
pop
sbb
jne
cmp
sbbl
sbb
in
andl
movsl
cmpsl
xor
inc
add
mov
adc
daa
add
inc
aas
xor
fistpl
repnz
inc
dec
sub
pop
int3
out
fwait
lret
mov
add
or
cmpsb
mov
cmp
insb
pop
mov
xchg
in
xchg
mov
das
push
pushf
fsubr
sub
sarb
push
popa
shrb
mov
scas
add
push
fdivrl
std
mov
pop
into
insb
sti
xor
test
scas
sti
xor
repz
or
cmp
jno
mov
mov
jp
repz
shrb
adc
mov
jmp
jle
mov
cmp
sahf
in
sub
aas
cmp
sbb
push
outsb
in
xor
push
pop
add
lods
adc
jecxz
sbb
cmp
stc
cmpsl
in
pusha
xor
pop
or
roll
frstor
daa
sub
fcmovnb
push
cmp
scas
cld
push
mov
and
mov
and
fnstcw
in
inc
xchg
adc
and
daa
mov
mov
jo
nop
inc
fiadds
add
dec
inc
icebp
mov
aad
xchg
popa
loop
int
xchg
popf
xor
adc
lret
test
cmpb
loop
es
nop
ds
sti
popf
jmp
lahf
mov
scas
dec
and
dec
pop
sbb
dec
mov
xlat
cmp
sahf
pop
inc
ljmp
enter
addr16
mov
loop
mov
int3
pop
test
outsb
ds
data16
imul
inc
jl
sbbl
iret
fs
sub
mov
mov
imul
pop
inc
mov
xchg
nop
add
stos
mov
stc
inc
pusha
fistpl
gs
scas
ret
test
int
add
xor
mov
fwait
jne
and
in
out
test
xchg
jl
sti
movsl
dec
inc
or
xor
push
call
aaa
adc
insl
sub
add
mov
test
movsb
popa
repnz
adc
dec
cs
mov
or
outsb
xabort
stc
push
push
subl
rorb
or
and
mov
fidivs
lahf
pop
dec
jae
jp
xchg
ret
mull
movsb
lcall
hlt
adc
aas
inc
scas
and
jns
cmpsb
push
sahf
lret
cmp
cli
push
out
push
fstps
adc
fstpl
sbb
pop
and
insb
lahf
call
pop
pop
cli
adc
sub
mov
ret
in
popf
cmp
inc
mov
sub
add
leave
jne
arpl
imul
call
je
xchg
xchg
mov
jns
icebp
pop
cltd
sahf
push
mov
xor
cmpsb
pop
mov
mov
push
jnp
cmp
sbb
mov
pop
aam
dec
pop
inc
std
push
adc
add
das
clc
rcrl
lret
dec
inc
int
out
stos
insb
fbstp
stos
hlt
mov
lcall
adc
aaa
mov
into
push
push
cmpsl
add
jns
mov
cmp
pusha
mov
mov
xchg
icebp
shl
fimuls
or
ret
xor
jle
sbb
and
adc
push
out
cmp
mov
jle
adc
loop
sub
push
cmp
xchg
nop
or
in
xor
sahf
or
adc
imul
in
test
shll
icebp
cs
test
test
push
inc
dec
insb
imul
xor
inc
dec
inc
cmpb
test
jmp
idivb
imul
ja
add
mov
inc
cvtpi2ps
repnz
add
pop
scas
ja
stos
cmp
or
fstl
mov
in
ret
into
add
sbb
sbb
outsl
rolb
mov
cltd
sbb
lods
icebp
inc
add
jl
inc
mov
cmp
lods
inc
icebp
sub
scas
sub
orl
shll
mov
cmp
push
repnz
outsl
mov
mov
lods
push
insl
call
imul
push
js
sub
jl
xor
jbe
inc
inc
inc
dec
movsl
pop
jl
icebp
es
xor
sarb
clc
inc
inc
sub
xchg
pop
fwait
ljmp
push
rcr
jno
xor
aad
lods
je
idivl
imulb
aam
icebp
shl
inc
jp
test
fsubrs
stos
mov
test
mov
push
lods
cmp
shll
xchg
cwtl
in
out
movsl
cli
hlt
dec
lods
xor
cmp
jno
loopne,pn
mov
inc
clc
push
out
jbe
mov
mov
xchg
cmpb
cmp
xor
mov
jbe
ja
push
pop
repnz
push
lea
xchg
pop
lahf
cld
insl
out
clc
in
and
js
inc
sbb
mull
enter
jo
jnp
enter
jo
jnp
lods
cmpsl
xchg
push
fistps
fs
dec
lahf
xor
bound
std
push
adc
scas
or
sub
lret
in
aas
scas
das
repz
pop
or
xchg
cli
push
mov
ss
cld
adc
jns
mov
out
cmp
jne
and
daa
fwait
clc
and
pop
out
or
test
pusha
and
mov
ret
mov
in
into
sub
or
pop
sahf
jmp
add
mov
enter
popf
push
lret
daa
add
adc
mov
or
add
lods
stc
arpl
arpl
dec
iret
sbb
and
cs
js
lods
adc
in
mov
push
jno
cmc
pop
pushf
push
outsl
cmp
xorb
add
jl
cwtl
int
cld
insb
push
jnp
sub
mov
imulb
push
pop
addr16
packsswb
sahf
aaa
shl
cli
cltd
cli
shlb
push
push
adc
jnp
mov
in
adc
pop
jl
jae
lcall
xchg
jo
fisttps
es
inc
mov
fistpl
negl
sbb
add
mov
mov
fcoms
mov
cmp
mov
mov
in
inc
adcl
in
stos
inc
aam
mov
jecxz
sub
stc
insl
xchg
inc
and
fidivl
out
mov
fcomps
pop
insl
adc
das
inc
push
lock
inc
mov
mov
iret
popa
sbb
enter
mov
inc
cmc
lea
push
cmpsb
nop
out
movsb
cmp
test
pop
popa
dec
add
addr16
xlat
mov
jno
xlat
fnsave
xchg
shll
jno
frstor
insl
mov
js
fs
mov
inc
push
lahf
dec
loope
pop
xor
jge
xchg
incl
mov
pop
xchg
dec
into
rorl
mov
bswap
fstl
fcomip
das
pop
stos
es
mov
lret
test
dec
sbb
arpl
stos
flds
adc
cmp
mov
sbb
push
dec
or
and
xorl
push
xor
arpl
out
jecxz
mov
push
shl
xlat
push
pop
sbb
rolb
xor
mov
clc
jg
pop
dec
test
insb
neg
xchg
mov
jecxz
xchg
mov
repnz
in
jns
lods
xor
ds
fdivl
dec
sub
or
and
mov
hlt
sbb
aam
xchg
fwait
mov
cltd
jge
dec
mov
push
popa
push
lock
int3
fistl
les
in
ds
sarb
xchg
repz
mov
cmpsl
mov
mov
and
jp
into
into
xchg
lods
xchg
fbstp
add
ret
lahf
mov
inc
push
pop
push
fists
fdiv
lahf
shrb
xor
or
push
je
push
push
je
push
push
je
push
push
je
push
push
je
push
push
je
push
push
je
push
push
je
push
push
je
push
sarl
cmp
out
jne
pop
cmp
and
psrlq
inc
iret
repz
and
xor
inc
loopne
mov
in
jg
adc
out
js
add
movb
xchg
nop
lret
imul
dec
cmp
icebp
out
mov
dec
lock
mov
rcll
lds
cmp
push
ja
inc
lcall
mov
rcrl
mov
xchg
aaa
es
imul
sub
mov
imul
cld
inc
pop
xchg
pop
xlat
cmpsl
inc
mov
bound
sub
fldl
out
jnp
ljmp
cmc
loop
repnz
in
cwtl
sub
imul
test
or
push
adc
inc
xchg
fldt
inc
xchg
lret
hlt
jp
lcall
popf
das
fnsave
repnz
mov
mov
std
mov
sbb
and
leave
adc
cwtl
es
addr16
jo
shrb
ljmp
inc
xchg
inc
mov
jnp
inc
push
dec
repz
mov
xchg
pushf
cwtl
push
inc
mov
ds
push
cltd
outsb
jne
loopne
ret
sti
jbe
mulb
mov
scas
arpl
sbb
pop
fistl
xor
dec
aaa
fsubs
stos
sahf
xchg
xchg
out
mov
jp
leave
fsubrl
sub
popf
out
scas
sbb
test
ljmp
ss
mov
lret
push
cmp
inc
aas
xor
iret
lds
mov
push
shll
pop
push
jle
sub
add
gs
out
dec
aad
mov
lahf
rorl
jbe
mov
gs
inc
xor
cmp
mov
std
nop
lock
js
fld
cmp
out
enter
push
cli
jae
dec
jae
fldcw
sub
pop
shll
or
rorb
xlat
jge
orl
fbld
pop
cwtl
push
nop
push
loope
ljmp
scas
imul
dec
shll
push
or
into
ss
mov
mov
adc
or
inc
mov
outsl
pusha
stos
cmp
fimuls
loopne
jmp
insl
ror
enter
xchg
les
mov
pop
pop
push
js
dec
adc
xor
or
test
nop
cmp
jns
cmp
dec
gs
pop
jnp
and
aam
icebp
xor
mov
xchg
xchg
js
dec
jl
ret
pop
insl
roll
je
in
pop
andb
add
das
mov
fwait
jbe
adc
dec
out
mov
add
mov
repnz
fs
xor
xchg
pop
push
xor
imul
cmp
sbb
inc
les
mov
into
nop
outsb
loopne
or
int
xor
mov
and
out
mov
jbe
ja
and
lea
xchg
aaa
mov
cmovne
inc
push
out
cmpxchg8b
mov
inc
outsb
cld
adc
mov
sbb
xlat
leave
inc
insb
lods
in
shrb
fildll
lock
mov
rcll
fcomps
push
xor
mov
or
pop
loop
cmpsl
iret
daa
sbb
idivb
xor
insb
mov
jns
repnz
push
adc
test
add
insb
clc
add
lcall
jns
pop
or
cltd
fistpl
and
fnsave
pop
clc
jbe
adc
add
push
sub
inc
mov
inc
cmpsl
test
pop
pop
mov
cmp
mov
xchg
inc
loop
xchg
adc
jb
xchg
jmp
jmp
nop
bound
pop
pusha
mov
dec
pop
outsl
ffreep
mov
lock
bnd
je
mov
lcall
andl
int
adcl
or
nop
das
aam
int3
adc
or
test
push
pop
mov
jp
inc
addr16
pop
mov
cli
sbb
movl
rcr
enter
and
or
jmp
xchg
shlb
ret
fwait
jle
in
fucom
push
pop
repz
adc
jne
push
fsubs
out
and
stc
fsubrl
out
xor
fdivrs
push
mov
out
lret
pop
movsb
and
mov
and
out
jmp
rorb
mov
sub
mov
rorl
pop
adc
push
lds
and
pop
inc
sbb
stc
jbe
test
and
jnp
push
sbb
mov
out
sbb
jns
mov
inc
mov
or
pop
fisubl
rclb
sbb
adc
outsl
aas
push
push
ja
jg
or
pusha
adc
push
ss
leave
imulb
xor
bound
add
jmp
mov
leave
loop
adc
mov
cltd
fiaddl
pop
fnstenv
es
mov
ret
cwtl
sub
lock
dec
push
sbb
insb
jne
dec
jmp
xchg
pop
mov
push
sbb
loopne
jbe
outsl
inc
ja
lahf
cmpl
sub
rolb
arpl
std
xchg
push
imul
push
cmc
jnp
push
xchg
jbe
ljmp
mov
aad
adc
or
adc
jecxz
mov
aas
enter
or
into
out
sbbl
lods
mov
in
pop
lcall
pop
sbb
jg
fstpt
sbb
movsl
mov
pop
lahf
iret
data16
dec
out
outsl
sti
xchg
dec
and
xor
or
rolb
addr16
repnz
mov
jbe
dec
or
mov
mov
adc
xchg
sbb
inc
sbb
lret
push
mov
cmp
xchg
and
pop
in
in
jne
dec
xor
and
int
insb
mov
xlat
xchg
mov
pop
jle
xor
int
pop
repz
arpl
sbb
into
into
jl
xchg
sbb
sarb
shrb
add
addr16
repz
dec
out
dec
and
into
pop
loop
push
cwtl
jle
xlat
adc
push
and
jge
xor
mov
testb
adc
shrl
mov
pop
and
inc
pop
jo
and
inc
inc
cmp
inc
dec
xchg
mov
sbb
adc
jge
inc
mov
push
outsl
adcl
jmp
jle
jle
sub
lods
das
and
sbb
mov
mov
push
imul
subb
add
out
dec
adc
push
or
dec
stc
out
jns
test
mov
jo
push
jg
xor
mov
sbb
mov
jno
add
rorb
jp
mov
fiaddl
sbb
pop
or
lock
mov
lahf
nop
out
adc
incl
aas
adc
dec
add
pushf
test
jb
not
sub
dec
add
xchg
pop
ret
push
stos
insl
mov
testl
mov
adc
aas
clc
mov
mov
jae
or
pusha
adc
adc
push
lret
dec
das
xchg
andb
popf
jmp
rcrl
popf
loopne
sbb
sarl
xchg
leave
adc
inc
enter
test
in
xchg
jne
dec
jmp
imul
mov
out
dec
inc
sub
add
xchg
aas
rorl
sbb
or
inc
or
dec
ja
orb
xchg
inc
and
in
lcall
mul
adc
or
and
in
jae
add
in
mov
jno
adc
xchg
mov
ljmp
jbe
jnp
sbb
out
sub
mov
mov
jae
rcll
jne
out
fsubl
mov
stos
fildl
mov
clc
fstpl
inc
cmpl
and
adc
mov
inc
loop
inc
sub
cltd
sarb
jo
jmp
arpl
repnz
mov
push
add
nop
and
call
sbb
aaa
pop
dec
ficoms
jo
loopne
adc
stos
jg
stc
pop
fbld
in
adc
pop
or
mov
rcl
jmp
push
std
push
cmpsb
stos
aas
xchg
adc
dec
movsl
vunpckhps
push
jbe
sbb
gs
push
or
out
cmpsl
lods
mov
xchg
xor
es
sbb
stc
mov
sub
push
stos
pop
in
sub
or
jge
and
adc
sbb
lahf
inc
sub
nop
scas
negb
sbb
popa
outsl
adc
add
mov
dec
scas
iret
in
jno
rcll
std
mov
aas
mov
xor
xchg
mov
mov
inc
push
jae
sub
pop
imul
xchg
pop
outsb
loop
pop
pop
cmpsl
jne
cmp
pop
stos
inc
mov
pop
jge
sbb
push
push
loope
push
rorl
jmp
jle
jge
dec
pushf
cld
in
inc
mov
or
inc
outsb
mov
xchg
outsb
push
push
inc
lea
xchg
xchg
loope
cs
mov
cmp
mov
popf
aaa
notb
xor
loope
bound
cmp
adc
jle
jmp
jmp
cli
cmc
movsb
sub
incb
push
pop
addr16
mov
jno
mov
or
pop
adc
sahf
jae,pn
pop
mov
test
dec
pop
inc
out
mov
dec
pop
sbb
or
mov
std
jne
push
add
sti
es
stos
in
jmp
jns
inc
pop
mov
mov
or
jmp
mov
cmp
push
dec
jne
mov
xchg
add
dec
jl
pop
stos
jne
je
jns
jp
mov
jg
dec
mov
out
mov
sub
xor
mov
fmulp
rcll
vmovhpd
rcll
arpl
mov
iret
sub
xchg
mov
das
cmp
push
lods
aas
cmp
adc
or
jecxz
outsl
xchg
push
ss
jge
out
push
test
push
sub
xor
aaa
aad
insb
and
xor
ss
adc
mov
arpl
mov
icebp
inc
fs
movsl
fldt
hlt
insl
sbb
mov
and
add
pop
cmp
insb
in
cmp
inc
aas
fs
mov
cmp
push
jb
mov
mov
cmc
jp
pop
in
data16
xor
enter
stos
andl
mov
push
push
stos
out
cmp
fnstenv
push
incb
popa
popf
mov
jbe
loope
add
imul
scas
cmp
add
sub
push
jmp
push
pop
jne
neg
lods
icebp
mov
dec
push
aam
adc
cwtl
cmc
mov
pop
ljmp
xchg
in
ljmp
mov
repnz
arpl
ret
scas
sub
xchg
jo
andb
add
push
fwait
ret
or
cld
mov
xor
das
shll
das
ljmp
sub
fnstsw
mov
pop
out
loopne
pop
out
cmp
xchg
iret
leave
jae
test
std
push
popf
pop
mov
jge
inc
out
es
mov
add
cmp
movsl
pop
int
jge
xor
repnz
rcr
lock
cs
sub
push
push
push
add
fildl
movsl
or
cltd
imul
cmpsb
and
fstl
sbb
shlb
sbb
pushf
iret
xchg
dec
inc
add
or
sbb
push
lock
pop
sbbl
xor
cmpsl
add
jae
mov
call
mov
sbb
in
lahf
xor
arpl
cld
ja
loope
push
cmpsb
je
adc
stos
mov
jns
fs
mov
sub
xchg
and
adc
cmp
test
add
pop
dec
sbb
out
addb
leave
jnp
push
cmp
cli
pop
xor
cmp
sbb
and
fildll
call
pop
pop
sub
pusha
aam
jmp
adc
mov
cmp
out
dec
je
jle
and
fnstcw
xorl
sub
test
pop
cmp
inc
mov
add
sbb
test
inc
push
mov
outsl
stc
jo
mov
cmpsl
and
sbb
jle
sub
mov
or
icebp
cli
subl
push
sbb
fbld
sbb
push
hlt
repnz
fcmovnb
inc
xchg
rcl
mov
xchg
xchg
mov
xor
mov
mov
push
sbb
add
mov
into
fdivrl
out
rclb
pop
xor
inc
cld
lret
cmp
push
jo
push
into
xchg
xchg
sarb
cmp
jge
mov
js
push
jge
push
popf
push
stos
in
xor
inc
or
or
pop
outsl
mov
jmp
rol
addl
and
push
push
ds
cmp
xor
mov
lahf
mov
stos
test
out
inc
cmp
int3
push
jns
lods
cmp
pusha
cltd
cwtl
pop
pop
mov
dec
hlt
jns
jge
cltd
mov
pop
mov
clc
mov
popf
rcll
mov
inc
mov
repnz
aam
icebp
inc
mov
cli
and
mov
ljmp
lods
xchg
pop
pop
iret
push
rcrl
lret
xor
mov
in
loopne
test
ss
cmp
dec
div
push
cmp
pusha
cmp
push
nop
jo
push
in
ljmp
std
loopne
sub
test
in
mov
sbb
ljmp
ret
inc
inc
repnz
mov
dec
mov
sub
das
movsb
stos
sub
sub
xchg
movsb
jns
stc
adc
mov
fisttps
jecxz
pop
xlat
fnstsw
mov
iret
and
loope
ja
mov
add
out
dec
into
or
outsl
leave
icebp
aas
das
mov
fisubs
movsb
in
lods
cmc
insl
in
push
mov
icebp
loopne
mov
sbb
jge
into
aam
dec
loop
shlb
xor
mov
xchg
out
arpl
cmp
std
mov
pop
pop
dec
fsts
xor
mov
push
jp
mov
data16
add
popa
rol
out
std
orl
mov
xchg
pushl
sarb
add
add
pop
xor
outsb
lcall
xchg
jl
jno
mov
add
xor
and
adc
dec
adc
out
xchg
mov
xor
pop
stos
popa
in
mov
clc
add
mov
inc
or
dec
fdivrp
jbe
xchg
ret
sbb
out
mov
pop
in
cwtl
xor
add
aad
xchg
pop
fs
xchg
jmp
jmp
mov
adc
hlt
fwait
add
inc
sub
push
in
adc
push
and
pop
clc
or
icebp
push
flds
insl
loope
inc
or
mov
inc
shll
and
sbbl
push
into
cmp
scas
out
aad
sbb
lods
shlb
adc
jmp
xorl
mov
push
int3
andl
or
lahf
push
or
adcl
jge
xor
cmc
cmp
dec
aad
rcrb
test
call
jns
fidivrl
ljmp
out
iret
in
adc
test
dec
loop
adc
loopne
sbb
sub
ljmp
xchg
lea
int
xchg
adcl
imul
mulb
out
shr
and
cmpsb
push
addr16
xchg
bound
mov
add
out
iret
adc
and
sbb
cltd
inc
inc
push
nop
rorb
imul
les
xor
fldcw
jo
stos
adc
sbb
test
ret
testb
cld
or
pop
out
fildl
std
add
adc
loopne
test
add
push
mov
push
mov
popf
sub
into
out
cmp
rcrl
movsl
cmp
cmp
in
mov
sbb
imul
insl
sahf
xor
cltd
sti
movsl
rolb
adc
pop
lret
mov
int
in
out
lods
ret
iret
pop
dec
in
ret
or
gs
into
shll
outsb
enter
fstps
adc
dec
sub
mov
push
xor
popa
dec
push
cmp
and
push
clc
jmp
ss
mov
inc
and
adc
loope
cmp
hlt
clc
mov
add
in
sysret
rcr
test
pusha
push
add
pop
scas
jl
xchg
addr16
xchg
out
dec
jl
addr16
xchg
cmpsl
push
scas
enter
out
enter
and
test
mov
ret
xchg
sarl
test
and
das
and
sub
add
jnp
mov
adc
fsubrs
lret
repz
ret
fdivrl
sbb
lods
or
out
cmpsb
add
cmp
inc
fmul
pop
cli
out
jo
dec
fld
enter
adc
cmp
cmc
jb
stc
cmp
push
xchg
decl
fs
add
cmpsl
sbb
or
pop
arpl
or
decl
mov
add
xlat
push
loop
push
sub
or
in
inc
movsl
jge
mov
mov
lret
push
cld
pop
js
cmp
inc
je
sbb
adc
je
outsb
push
push
xor
sbbl
call
clc
testl
jbe
xor
jp
sub
inc
cwtl
sub
jge
or
dec
pop
hlt
adc
jle
add
pop
jmp
mov
inc
sbb
xor
aaa
add
cmp
outsl
dec
lods
ja
mov
cmp
pop
cmp
and
out
notb
outsb
jns
dec
push
scas
adc
imul
pop
mov
jecxz
jmp
push
or
ljmp
mov
andb
dec
fnclex
sahf
push
dec
loop
jle
mov
addr16
jecxz
outsl
je
adc
mov
jne
lahf
or
cmp
dec
mov
mov
test
mov
push
dec
cmp
and
test
mov
mov
aam
aas
insb
or
imul
sbb
mov
les
pop
mov
mov
fistps
sub
and
mov
xor
and
push
mov
lock
pop
or
fimull
aas
fcoml
int3
pop
cmp
sbb
mov
push
sti
out
popa
or
mov
loopne
pop
hlt
pop
fwait
sub
adc
dec
adc
scas
adc
shlb
ficoml
xchg
repz
loope
bound
pop
in
lea
repnz
sar
cmp
test
add
push
test
ljmp
rorb
aad
xchg
enter
pop
push
mov
mov
repnz
or
add
adc
pop
cmp
jecxz
cmpsb
mov
ja
inc
xchg
jl
cmp
xor
xor
push
popf
xchg
les
pop
test
aas
outsb
jno
fiaddl
dec
cmp
leave
xor
xor
xchg
int
push
add
jg
and
addr16
subl
mov
aaa
cwtl
icebp
js
clc
mov
and
or
aad
flds
push
popf
adc
pop
pusha
out
pop
dec
stc
out
movsb
fs
lea
nop
mov
fcomp
or
in
out
mov
ret
add
mov
dec
mov
sub
mov
into
inc
fwait
stos
test
mov
pusha
mov
lret
roll
xchg
ficoms
mov
xor
push
and
add
adc
mov
ja
xor
mov
sbb
inc
nop
lea
xchg
pop
push
sbb
and
add
jp
jmp
jo
adc
pop
lahf
mov
dec
push
jp
jecxz
ret
aad
xchg
fnstcw
cli
lds
sub
mov
sbb
cmc
in
pop
lcall
jne
mov
xor
aaa
add
aas
xor
or
insl
call
cld
push
in
scas
loop
loope
ret
inc
stc
icebp
xorb
sbbb
mov
mov
nop
xchg
sbb
push
in
pop
pop
arpl
xchg
imul
mov
push
dec
cmpsl
cmpsl
pop
mov
jae
sub
mov
xchg
push
loop
stc
ja
fsubl
fwait
sbb
cmp
fld1
mov
xchg
and
ret
xor
int3
icebp
mov
xor
loope
dec
add
add
jo
adc
push
sub
nop
sbb
test
push
addl
and
stos
cmp
add
push
loop
dec
imul
mov
std
pop
xor
sbb
push
mov
dec
fidivrl
cmp
mov
inc
jg
cmp
das
xor
insl
xchg
xchg
iret
pop
in
bound
mov
xor
leave
xchg
push
in
and
jmp
mov
sub
fiaddl
int3
and
mov
das
sub
xchg
shl
mov
in
cmp
adcb
ja
mov
rcll
cld
mov
fs
mov
add
xor
xchg
das
push
push
and
out
inc
fmull
adcb
mov
sub
dec
outsl
shl
jmp
mov
fwait
pop
dec
push
cld
fsubrl
jp
rorb
mov
test
cmc
inc
out
push
cmpsb
jmp
lahf
xchg
incb
dec
jp
mov
or
sub
sub
popf
pop
stos
inc
leave
mov
xchg
xor
ud1
imul
inc
cmpsb
sub
jg
or
cmc
andb
jg
insb
stos
icebp
push
sub
aam
out
jge
iret
xlat
scas
pushw
rol
add
and
pop
les
mov
mov
jnp
mov
or
pop
or
jg
add
xchg
xor
insb
xchg
pop
xor
lcall
stos
mov
jo,pn
sti
call
and
outsb
add
dec
mov
push
inc
lret
inc
jg
hlt
fnstcw
sbbl
pop
lds
mov
rol
mov
xchg
popa
movsl
push
add
sub
ljmp
or
ror
es
loope
stc
aaa
mov
add
fisttpl
add
or
icebp
das
mov
aad
in
or
jb
sub
jno
jle
sbb
cmp
inc
aaa
adc
mov
lret
adc
sub
and
adc
and
fiaddl
cld
fs
stos
cmc
in
pop
out
cli
sahf
add
dec
push
push
inc
addr16
lcall
or
mov
and
pop
mov
imul
and
mov
int3
mov
push
repz
mov
jo
jecxz
es
push
and
xchg
inc
in
stc
xlat
inc
sub
mov
loopne
ud1
cmpb
or
jne
cs
mov
mov
fstpt
mov
sbb
repnz
mov
dec
int3
inc
jnp
out
inc
cmp
enter
lahf
test
test
movsl
mov
mov
sbb
adc
arpl
fisubrs
or
inc
mov
and
xor
xor
dec
aaa
les
insl
inc
pop
add
imul
lods
imul
inc
rorl
daa
incb
pop
adc
or
pop
jno
or
add
mov
pushf
gs
sar
mov
sub
pop
and
jno
jae
push
jp
cs
fnstsw
sub
cli
scas
out
jg
das
idivl
mov
sbb
adc
pop
inc
nop
pop
fstpl
jne
scas
mov
pop
test
fwait
push
fcompl
sub
inc
jle
sub
jne
insl
out
cld
dec
ja
mov
and
lock
xchg
fisubl
pop
pop
lea
xchg
scas
sbb
lret
xchg
cmpsl
or
inc
jnp
popa
in
xchg
arpl
inc
push
test
lock
push
fdivrs
xchg
lret
out
loope
int3
push
add
rcl
das
sbb
icebp
mov
inc
das
lock
icebp
and
insl
mov
jb
adc
dec
xchg
push
xor
icebp
xorl
jp
or
aam
add
addr16
hlt
ds
pop
pop
xor
ss
fldenv
and
add
ret
je
dec
ret
out
mov
icebp
ds
cmpsl
lock
daa
mov
xor
mov
daa
cmp
fwait
jle
jnp
pop
adc
xor
cmp
addr16
test
testb
imul
cli
mov
sub
mov
inc
push
xchg
xchg
and
mov
decl
jp
mov
dec
cmpsb
mov
dec
and
hlt
cmp
scas
cmp
mov
or
out
sbbb
leave
loope
xorb
pop
add
mov
mov
mov
cmpsb
ret
arpl
je
decb
sbb
cs
shll
rcr
cbtw
jb
cmp
pop
pop
push
lods
in
pop
xchg
gs
mov
pop
xchg
cmp
call
jns
imul
rcl
xchg
sub
push
mov
imul
adc
fisubrl
pop
notl
inc
and
push
aam
mov
ret
sub
pusha
int3
or
and
testl
nop
xchg
dec
fisttpll
jne
jmp
orl
dec
pop
daa
fdiv
movsl
pushf
xor
cltd
sub
or
sub
adc
xchg
mov
aas
xlat
pop
ljmp
loope
mov
fistpll
stc
inc
aam
xchg
call
scas
xchg
testl
dec
lods
and
cmc
or
or
dec
out
out
popf
sub
mov
loopne
sbb
popl
popa
and
out
pusha
xor
cmpb
xchg
insb
in
test
push
fcmove
dec
loope
inc
into
jmp
xor
xor
inc
stos
cs
sbb
cmp
out
nop
ljmp
xchg
sub
add
inc
sarb
das
adc
faddl
sbb
jb
popf
movsl
adc
and
mov
sub
xor
sub
lock
and
push
pusha
lcall
dec
mov
mov
xor
sarb
mov
push
sub
inc
xchg
xor
mov
in
repnz
test
addr16
lret
jp
xchg
sar
lods
mov
fs
mov
jecxz
xlat
shl
lea
imul
hlt
sub
cltd
jge
test
testb
movsl
xchg
pop
pop
stc
and
sub
xchg
sub
mov
sub
lcall
je
sbb
xlat
jo
mov
outsb
in
hlt
packsswb
ret
push
aaa
sub
nop
pushf
in
fldl
cmp
xor
sti
sti
scas
and
dec
xchg
movl
mov
xchg
adc
icebp
sbb
sub
fisubs
jb
lret
movsl
mov
or
jnp
jno
sbb
cmp
fdivl
jns
dec
icebp
inc
pextrw
pop
and
orl
outsl
cs
pushf
orb
sub
lcall
iret
lock
mov
add
pop
mov
stos
jg
push
mov
lret
mov
xchg
and
loope
icebp
fcoms
mov
imul
pop
pop
mov
cmpsb
int3
lea
imul
ljmp
movsb
pop
mov
movsb
jb
scas
dec
push
sub
scas
cmove
push
push
cmpsl
cwtl
fwait
lds
lret
xor
mov
sub
cmp
std
sbb
mov
movsl
mov
and
sbb
fimuls
cmp
imul
xor
or
test
add
fsts
fistl
adc
jg
push
dec
xor
adc
addr16
inc
notl
jmp
jns
repz
mov
sarl
ljmp
push
fisubl
jle
insb
or
mov
repz
pop
in
pop
sub
mov
adc
ret
sbb
sub
pop
add
call
hlt
lods
rorb
xlat
mov
not
push
scas
jle
and
sbb
in
lcall
xlat
ficoml
xchg
mov
jb
lods
inc
mov
add
or
lcall
loopne
inc
sub
lcall
ds
adc
call
and
push
xchg
inc
or
mov
and
lods
mov
add
nop
dec
pop
js
mov
pop
mov
arpl
call
and
xchg
mov
and
or
pop
mov
jg
dec
cmpsl
jmp
das
xor
mov
cltd
sub
mov
jnp
jno
add
lret
or
mov
lcall
mov
mov
cmp
mov
shll
push
mov
and
fsub
ret
adc
mov
add
xchg
test
jne
test
cltd
mov
push
mov
pop
out
sub
popl
dec
aas
xor
adc
loop
sub
jns
call
sbb
pop
fbstp
sbb
bound
dec
inc
sbb
pop
dec
jno
int3
into
jmp
mov
test
push
or
mov
mov
lcall
imul
and
mov
pop
and
adc
inc
xchg
jnp
cmp
js
add
cmp
xchg
jns
daa
fcoml
sbb
mov
int3
mov
cmp
lret
sahf
xor
cld
mov
out
push
stos
ret
mov
sbb
mov
dec
jmp
cltd
daa
sub
es
cmpsb
mov
in
add
ss
out
jge
jns
push
pop
adc
xchg
adc
divb
lock
icebp
adc
arpl
sub
jge
add
imul
pop
xchg
xor
mov
lret
fldcw
clc
out
lods
and
pop
sbb
add
lea
pop
fcompl
jae
or
push
push
jp
add
mov
aam
dec
dec
mov
ficomps
in
or
dec
xor
out
mov
push
stos
xlat
xchg
mov
jnp
dec
lods
std
daa
push
scas
push
push
push
jge
fstp
cltd
addr16
test
fnstcw
mov
es
je
test
test
jmp
out
jae
cli
dec
sbb
gs
jecxz
lods
ss
adc
out
es
inc
sar
dec
pop
js
addl
jmp
das
cmp
iret
lret
arpl
adc
loope
int3
push
mov
mov
jle
out
stos
pop
ljmp
movsl
mov
mov
fdiv
pop
cmpsb
frstor
ss
scas
pop
fimull
cmp
stos
shrl
cli
int3
jae
lret
sub
faddl
mov
add
sub
xchg
stos
fdivrl
fildl
cmpsb
mov
mov
dec
out
loope
into
mov
mov
enter
out
repz
inc
lods
mov
sub
lahf
shlb
ja
in
mov
lcall
mov
mov
rorb
or
mov
out
gs
adc
add
mov
aas
add
call
and
movsl
ss
test
mov
sub
out
testb
or
lret
adc
and
cmp
adc
scas
shll
iret
add
popa
in
and
cmp
and
xor
pop
push
out
cmp
mov
pop
jbe
mov
pop
add
pop
add
fcomip
bound
and
push
clc
data16
or
sub
pop
mov
int
jo
shlb
in
mov
sbb
mov
fstpt
xchg
mov
push
add
out
dec
popa
push
shll
xchg
cs
sti
cmp
mov
adc
popf
scas
xchg
or
add
cs
mov
cmp
adc
sub
sahf
pop
cld
cltd
sbb
xor
loop
jae
sbb
xchg
call
call
insl
mov
xlat
jl
sub
inc
cld
mov
jne
loop
fdivs
insb
scas
mov
inc
shrb
pop
lcall
sti
push
mov
pop
adc
xchg
bts
pop
stos
inc
fdiv
stos
add
repnz
inc
fistpll
mov
outsl
int
or
daa
or
loop
mov
xor
pop
popf
add
faddl
cmp
hlt
jnp
mov
sub
inc
aas
inc
inc
movsb
mov
cbtw
sub
in
rcll
sbb
sbb
lds
ret
stc
sub
lret
mov
inc
sub
xor
pop
test
scas
mov
push
inc
pop
pop
inc
or
mov
push
ljmp
dec
xchg
cmp
pop
ret
js
repz
adc
push
cld
or
mov
push
mov
xor
stos
pop
mov
or
mov
dec
pop
orb
iret
in
xchg
cli
into
ljmp
mov
pop
or
mov
stos
add
ret
dec
popa
or
das
out
enter
fimull
push
xchg
jne
inc
insl
push
out
test
sub
in
pop
add
pushf
xor
xchg
xor
adc
lods
jae
jl
mov
je
xor
shrb
je
mov
fs
add
addr16
jae
and
lret
xlat
lcall
push
dec
repz
or
fiadds
jnp
sub
loope
lret
popf
aad
jmp
push
popf
pushl
ret
xchg
sbb
jae
rcll
cs
repnz
xchg
cmp
std
das
call
enter
xchg
push
std
inc
sub
jecxz
xchg
insb
pop
xchg
push
mov
sbb
pop
dec
outsb
jle
loop
js
inc
lods
cmp
dec
dec
xor
fs
adc
and
aaa
bound
aas
mov
jle
fisubl
add
xchg
clc
pop
cmp
sbb
in
dec
ss
or
push
pop
pushf
xor
mov
xor
sub
xchg
jecxz
repz
mov
movsl
imul
mov
and
repz
ss
sub
pop
and
push
cmp
loopne
jo
fimuls
xchg
out
push
cli
orb
xchg
shll
inc
sbb
stos
xchg
leave
mov
stos
and
mov
push
jl
jb
out
mov
lods
xor
syscall
xchg
lods
sahf
sbbl
jbe
xchg
xchg
popa
out
loope
dec
mov
in
jb
in
aam
ds
mov
adc
aam
repnz
insb
xchg
cmp
pop
bswap
stc
roll
mov
xor
cwtl
stos
push
arpl
mov
je
and
sub
cltd
cmpsl
and
faddl
insb
cpuid
cmp
adc
in
test
xor
cs
cmp
dec
jle
stc
lret
sub
loopne
mov
xbegin
or
fidivrl
add
xchg
jl
sbb
push
daa
xchg
mov
or
sub
mov
mov
mov
mov
sbb
stos
mov
mov
jo
cmp
mov
cmp
cld
cltd
pop
mov
jae
nop
mov
sub
cmp
push
loope
dec
sbb
pushf
and
jg
pop
mov
lahf
enter
test
cs
in
mov
sub
in
mov
arpl
xchg
mov
jge
xchg
scas
xchg
mov
push
imul
sub
mov
dec
scas
mov
sbb
inc
jnp
add
addr16
mov
xor
leave
cld
hlt
xor
jno
out
test
leave
loop
or
inc
mov
mov
aaa
pop
sub
mov
jno
loopne
add
lret
jb
inc
xchg
and
rcrl
lret
hlt
cmpl
aam
adc
lea
ljmp
sbb
jno
cs
jmp
arpl
xlat
add
mov
inc
xor
enter
lea
mov
mov
enter
clc
xor
sti
mov
scas
loopne
mov
pop
int3
pop
mov
pop
add
dec
je
fsts
dec
jle
or
repz
mov
push
lcall
cmp
sub
sub
popa
stos
fcmovnbe
xor
push
sub
push
ds
cmpsl
or
cs
fiadds
dec
adc
sub
testb
mov
insb
inc
adc
roll
inc
scas
jmp
add
xchg
adc
mov
dec
icebp
adc
ficoml
adc
cs
fbstp
sbb
dec
mov
cmpsb
stos
test
xchg
aad
mov
out
or
gs
and
bound
xor
add
sti
std
mov
addb
push
dec
testl
out
add
mov
inc
lods
in
dec
aad
pop
in
fsubr
pop
repnz
flds
test
ss
mov
sub
movsl
out
pop
out
lea
adc
fcoml
adc
push
nop
pmaddwd
ss
mov
and
incl
cmp
jae
and
jmp
cmp
shlb
int3
mov
cmc
aas
add
mov
rcll
scas
imul
aad
out
je
cmc
jnp
push
mov
das
or
xorl
mov
mov
mov
ja
push
dec
lcall
push
gs
push
fstpt
arpl
dec
mov
jnp
jns
arpl
outsl
pop
sub
mov
xchg
sahf
push
mov
clc
xchg
sub
pop
sub
adc
mov
movsb
ffree
and
loop
int
pop
cwtl
notl
rclb
jbe
imul
scas
adc
in
test
push
fcomps
pushf
lock
insl
imul
pop
pop
push
das
mov
xchg
jg
push
cwtl
jmp
push
std
mov
xlat
add
sbb
mov
mov
imul
mov
ret
test
add
lcall
dec
sub
sub
mov
cmp
push
push
nop
adc
push
push
cs
out
inc
imul
dec
pop
sub
adc
pop
fucomi
test
sub
dec
xor
les
add
sbb
fnstenv
mov
pop
or
push
mov
cld
ret
ret
outsb
jbe
xchg
jecxz
sbb
sbb
pand
shrl
dec
sub
pushf
out
push
push
adc
rcrb
sbb
fidivs
inc
shll
mov
pushf
inc
mov
inc
mov
cmpsl
jg
mov
xor
jecxz
dec
and
xchg
inc
cli
pop
mov
test
comiss
mov
in
ss
pop
jne
adc
cs
adc
data16
jae
shlb
xchg
jnp
xlat
mov
jbe
fwait
popf
cmp
int3
popf
int3
pop
sub
xlat
xchg
scas
pop
cmpsl
add
dec
cmpsl
push
stc
scas
sbb
mov
das
inc
inc
mov
sbb
in
cmpsl
out
push
subl
mov
jo
jne
call
popa
pop
stos
jno
xor
adc
jp
push
insl
xor
push
xchg
sbb
sub
and
das
adc
xchg
mov
cmp
add
xchg
es
outsl
xchg
or
mov
jno
mov
xchg
xchg
int3
nop
inc
insl
dec
mov
adc
icebp
cmp
mov
mov
stc
inc
xchg
outsb
rolb
pop
adc
cmp
icebp
adc
dec
daa
xor
pop
orl
inc
out
cmp
push
stc
mov
pop
or
ds
and
jo
mov
inc
fildl
int
test
cmpl
test
fs
mov
lods
jnp
test
sbb
cmpsl
push
in
mov
and
mov
sbb
pop
adc
enter
addr16
ja
push
xlat
lcall
add
adc
push
es
mov
sub
aaa
xchg
push
inc
ljmp
jle
inc
iret
inc
lea
cs
out
or
insl
mov
addr16
mov
or
inc
xlat
hlt
inc
dec
push
gs
daa
dec
mov
loope
xor
gs
pop
movsb
adc
and
push
out
cmp
mov
pop
jbe
pop
add
sbb
add
xor
mov
repnz
lcall
imul
movsb
mov
jge
aad
aad
mov
sub
mov
push
cwtl
daa
mov
subl
cmpsl
push
pop
jecxz
inc
xor
add
cmc
bound
cmp
ror
ds
xor
lds
scas
stos
daa
cli
test
fimull
xor
outsl
sbb
das
scas
sbb
int
adc
sahf
in
insl
xchg
add
dec
sub
xlat
stos
ffree
xor
jo
sahf
cmpsb
sbb
test
cwtl
xor
mov
popa
adc
cli
inc
mov
adc
mov
dec
sbb
loop
add
mov
outsl
repz
dec
pusha
add
btsl
out
and
rcrb
xorb
outsl
mov
add
dec
movsb
push
cwtl
add
rcrb
dec
pop
fadd
push
push
pop
mov
jecxz
xor
mov
sbb
loop
adc
rorl
lds
push
sarl
mov
nop
sbb
lahf
repnz
inc
movsb
jnp
lods
test
mov
js
sarb
jae
ds
xlat
mov
dec
bound
push
add
jp
push
ljmp
jo
push
jno
adc
pop
decl
mov
push
cmp
imul
mov
cs
sbb
insb
daa
aam
addb
pop
cmp
xchg
int3
in
test
int
insl
jle
insl
stc
rcl
fldenv
sub
cmp
fisubs
lret
dec
and
cmp
incl
std
ret
inc
imul
pop
sbb
fwait
mov
lds
stc
sbb
add
ja
mov
outsl
mov
dec
fldt
sbb
das
sub
xchg
xchg
xor
mov
sub
mov
mov
push
jae
inc
out
sbb
and
fldt
jo
mov
or
sbb
mov
bnd
jl
push
mov
popf
adc
push
sbb
fldl
std
inc
sbb
shrb
mov
in
out
scas
xor
mov
idivb
sub
ja
gs
inc
mov
movsbl
aaa
call
scas
fists
pop
adc
cmp
or
lahf
push
pop
sub
call
sub
push
imul
sbbb
xchg
mov
jmp
push
mov
into
cmp
enter
call
lea
jp
adc
cmp
jo
xchg
pop
lahf
xor
inc
cmpsl
into
mov
mov
mov
fs
xlat
and
das
push
shll
enter
outsb
xor
je
inc
pusha
and
cwtl
mov
add
pop
xchg
xor
lds
sub
dec
js
sub
pop
adc
test
das
push
ds
inc
sub
fiadds
hlt
or
movsl
and
out
aad
lret
mov
mov
loope
loope
leave
mov
fsubrs
mov
gs
in
addb
mov
push
les
fcmovne
mov
in
push
flds
dec
cmpl
in
imul
inc
cmp
dec
cmp
push
imul
sbb
push
sti
sahf
out
mov
hlt
insb
inc
mov
xchg
pushf
ss
inc
push
or
mov
hlt
in
inc
lret
jge
ja
repz
jg
mov
mov
int
icebp
mov
xor
xor
and
jbe
pop
jecxz
push
fwait
jno
cmp
xlat
rcrl
popa
adc
or
fsubrs
in
push
add
sti
inc
or
mov
aad
dec
add
cmp
pop
ds
adc
pushf
adc
jne
scas
cmp
popa
and
dec
or
mov
pushf
mov
mov
and
push
cltd
pop
fcmovb
loope
mov
push
pop
add
imul
pushf
mov
cmpsb
xchg
lahf
inc
push
mov
jne
pop
pop
adc
popf
pop
pop
push
dec
lret
dec
or
mov
sub
xchg
xorl
lcall
fs
lods
aaa
sbb
ror
or
push
xor
mov
out
insl
dec
xchg
and
lcall
xor
xlat
inc
insl
fists
test
jge
lods
mov
hlt
and
pop
movd
jb
ja
shll
adc
sub
pop
add
jmp
and
lret
jae
cmp
or
adc
sbb
pop
insb
movsb
or
push
ds
cmp
cmp
xchg
mov
fstpt
sarl
sbb
pop
iret
inc
sbb
xor
fistl
inc
out
sti
jne
jg
xor
imul
pushf
dec
rorl
rcrl
cmp
add
inc
ror
addb
add
jae
adc
sbb
sbb
lret
scas
loopne
and
stos
push
dec
clc
sbb
test
lret
push
mov
inc
mov
in
xor
mov
mov
xchg
xchg
push
hlt
mov
je
mov
pop
in
pop
aas
mov
xor
mov
ds
sbb
mov
mov
out
lcall
test
shr
cmp
cwtl
pop
roll
loope
or
or
or
loope
sbb
nop
es
das
xchg
ffreep
icebp
push
sbb
movsb
dec
data16
mov
arpl
in
cli
insl
xchg
sbb
xor
lock
adc
das
dec
push
xchg
or
insb
sti
jnp
fwait
stc
push
mov
loope
shrb
jno
dec
jae
sahf
push
pop
scas
fcoml
ljmp
fadd
dec
mov
mov
and
adc
jg
rorb
jnp
popf
sbb
rcll
pop
add
int3
andb
popf
sbb
mov
dec
outsl
push
jb
and
xor
addr16
pusha
mov
aad
cli
mov
stos
xchg
or
pop
in
jne
jns
std
cmpsb
push
outsb
or
loop
push
outsb
push
jmp
sbbb
mov
hlt
or
leave
test
and
dec
dec
xor
shr
mov
dec
scas
pop
mov
xor
fsubrl
int
adc
pop
movsl
movsb
cmpsb
movsl
adc
sbb
addr16
lahf
shr
or
xor
xchg
jg
mov
ret
and
enter
popf
scas
out
test
xchg
add
mov
sbbb
fs
arpl
ret
fldenv
fcmovnbe
lahf
call
cmc
xchg
mov
aam
rcrl
xchg
das
insl
ss
push
mov
addr16
xor
dec
jb
adcl
fs
inc
cli
das
aad
cs
mov
xchg
sbb
mov
mov
inc
int
dec
nop
push
movsl
leave
mov
cltd
push
call
pop
and
test
mov
enter
xchg
jge
sub
out
cmp
pop
mov
jb
test
mov
loope
mov
imul
mov
int3
iret
daa
ror
out
xchg
ret
stos
rcr
popa
jl
ja
cmpsl
arpl
sahf
int
arpl
arpl
inc
xchg
bound
lds
inc
add
adc
psrld
or
fcmovbe
ja
cmp
mov
mov
or
push
into
lods
into
dec
es
mov
mov
or
out
dec
jo
sub
add
lea
into
shl
les
jp
ret
and
pop
jmp
and
jmp
pop
add
xchg
insb
jmp
add
popf
inc
and
popa
out
mov
mov
push
cmp
call
mov
lods
push
inc
push
cli
sbb
push
sbb
test
xchg
push
xchg
lahf
cli
sbb
shll
xor
loope
aas
out
push
lock
out
jge
sbb
stos
xchg
dec
movsb
test
sbb
and
jp
mov
mov
loope
cmp
mov
mov
ret
push
xor
mov
sbb
dec
push
fcoml
ds
stos
and
jmp
fcomi
stos
adc
add
scas
push
mov
cmp
or
xor
cmp
adcb
fbstp
hlt
into
test
mov
cwtl
push
sbb
adc
loopne
xchg
addb
loope
dec
mov
test
movsl
push
xchg
xchg
test
aas
ljmp
jnp
jae
jo
cmp
xchg
aam
cmc
leave
aas
jo
add
clc
inc
dec
lods
pop
mov
popl
mov
repz
in
pop
mov
popa
sub
lods
test
scas
xor
push
outsl
push
sub
jle
loope
xchg
xchg
mov
fstl
stc
movsl
outsb
jle
and
test
mov
push
dec
clc
icebp
sbb
sbb
mov
enter
leave
and
je
ficoml
inc
mov
jbe
sbb
test
xor
xor
xchg
scas
jp
sbb
cmp
mov
lds
addr16
jne
adc
push
outsb
jge
or
cmpsl
sub
jb
jae
jb
lret
fisubs
xchg
push
pusha
lock
dec
cmpsb
mov
fldl
dec
jle
add
push
jp
xor
mov
and
paddq
lock
cmp
mov
cmp
or
sub
inc
dec
inc
dec
pop
jo
cmp
cmp
rolb
popa
fldcw
ret
inc
cmp
xchg
sub
sub
cmp
jle
dec
cmp
fisubl
or
cmpl
xor
jne
enter
movl
add
popf
push
or
jnp
pop
xchg
mov
movsb
cmc
aaa
lahf
pop
push
shll
lret
xchg
xchg
dec
jecxz
scas
lret
push
inc
dec
ljmp
cmp
push
pop
cmp
mov
jle
in
out
jecxz
sub
lret
lahf
out
and
aas
mov
xor
pop
mov
lea
arpl
mov
mov
rolb
shrl
mov
shll
jnp
xor
fwait
pop
pop
test
jmp
pop
ds
add
cmc
int3
xor
mov
aad
mov
pop
fdivrp
sub
cli
pop
call
and
xchg
out
stc
sahf
subl
std
cmpsl
lods
jb
out
inc
push
mov
sbb
mov
inc
aad
jnp
fsts
leave
and
ret
stos
in
sub
mov
lret
les
loop
push
mov
cld
jg
jmp
popf
pop
repnz
add
pop
cwtl
xorb
imul
add
push
mov
lahf
movsl
in
xchg
in
jb
les
and
xchg
movsb
jae
cmp
pushf
adc
movsb
outsb
lahf
dec
mov
outsl
dec
push
cmp
lods
test
ds
fdivp
xchg
lcall
jmp
adc
clc
lea
and
dec
jp
js
add
and
push
sahf
mov
jl
adc
es
cmpsl
shl
cltd
ljmp
xchg
scas
dec
imul
xor
imul
adc
movsl
adc
push
lds
mov
fcmovu
sti
test
cli
and
fs
loop
stos
sarb
fnsave
andb
dec
jl
gs
sbb
cltd
or
dec
mov
dec
or
jnp
push
mov
int
test
mov
mov
fiadds
xchg
mov
and
rcl
adcb
pop
data16
mov
or
cmp
out
inc
mov
sarb
aam
call
dec
sbb
cmp
cmp
mov
push
test
addr16
sbb
dec
out
mov
shrb
xor
std
push
mull
fwait
dec
enter
add
lret
push
and
rcrl
inc
bound
out
or
push
mov
in
out
sbb
cmp
xor
insl
fistpl
lock
pop
es
xchg
jns
movsl
cld
jae
mov
xlat
cmp
xchg
dec
pop
cwtl
dec
inc
push
adcl
pushf
leave
xchg
or
fdivrs
mov
movsl
adc
push
cmc
hlt
std
xchg
sub
mov
out
pop
cmc
or
fdivrp
cmp
jmp
and
fld
and
imull
mov
mov
mov
and
jns
neg
xor
jne
add
std
cwtl
stos
sub
and
mov
lods
or
jae
jp
incl
adc
or
stc
sarl
push
dec
popa
ja
and
mov
pop
pop
push
ret
inc
lods
pusha
in
aas
mov
pop
scas
or
xchg
fcoml
cmpsl
sbb
mov
cmp
mov
adc
push
fisttpl
pop
in
cmp
fwait
cmpsl
fildll
mov
into
in
push
push
inc
scas
ret
sti
xor
lahf
movsb
inc
les
jo
push
sbb
inc
xchg
in
fsts
cmp
das
push
xor
test
push
data16
dec
adc
sub
scas
jmp
xchg
mov
mov
sbb
fcomps
mov
sahf
aam
jecxz
pop
mov
mov
jg
loopne
roll
adc
add
ljmp
js
std
xchg
mov
pop
jns
mov
pop
jl
jo
arpl
sub
push
clc
mov
sub
sub
pop
scas
sub
aaa
das
movsl
aas
stc
mov
xlat
stos
adc
fs
fwait
mov
xor
and
test
sub
mov
ficompl
mov
sahf
sub
cld
dec
jnp
xchg
or
jmp
test
xor
stos
jle
int
push
push
fmull
and
add
insl
mov
pop
mov
cmp
jmp
and
or
sub
add
pop
pop
mov
pop
mov
jecxz
pusha
sbb
cs
xchg
mov
fcoms
mov
push
aam
push
dec
push
call
or
or
outsl
scas
in
fldl
lret
loop
push
push
or
inc
xchg
sbb
stc
in
repz
cmp
mov
aaa
jp
mov
jmp
imul
decb
sahf
dec
dec
cwtl
sub
or
jmp
inc
shlb
adc
addr16
mov
mov
pop
leave
shll
lods
ret
cmp
pop
or
popa
ror
xchg
pop
or
cmp
mov
jle
and
sbb
pop
sahf
or
sub
cs
jmp
iret
sbb
push
das
pop
xchg
shll
sub
xchg
addr16
fildl
sub
frstor
jp
jo
fistl
xchg
sub
or
sub
sbb
push
mov
adc
inc
sbb
sub
xor
arpl
faddl
mov
adc
enter
fcoml
test
outsb
fs
pop
fldl
xchg
cmpsl
inc
xchg
and
pop
subb
clc
in
hlt
lret
popa
add
inc
int3
arpl
test
mov
sti
lret
xor
jmp
mov
imul
jp
push
shll
inc
mov
dec
je
sbb
sahf
mov
popa
outsb
mov
scas
hlt
mov
mov
aaa
or
jp
cmp
call
mov
daa
imul
lret
or
dec
push
jnp
inc
mov
mov
jp
cs
outsb
pop
cmp
sub
push
jecxz
push
popa
pop
lds
push
adc
mov
adc
xchg
sbb
push
push
cltd
add
fs
sbb
roll
ja
mov
sub
cmp
push
pop
jae
xor
inc
mov
xor
sbbb
inc
xchg
shl
adc
shrl
sbb
and
imul
movd
push
test
movsl
jno
cmp
mov
and
sti
repnz
adc
rolb
push
sub
or
in
or
mov
dec
das
sub
mov
in
insb
push
aad
jmp
stc
mov
dec
ret
and
test
sub
fadds
sti
jg
popa
bound
mov
in
adc
lock
ret
xorl
mov
aaa
sbb
mov
lahf
xchg
movsl
stos
mov
faddl
dec
adc
pop
mov
mov
jecxz
pop
inc
pop
pop
into
test
outsb
fcmovu
add
push
mov
jne
and
or
fsub
push
das
ror
dec
stos
inc
push
stc
dec
bound
sar
dec
js
sub
pop
ja
mov
jmp
dec
fdivl
jg
sbbl
lret
or
or
jge
es
pop
mov
mov
js
fisubrl
and
aam
and
popa
xchg
jns
mov
iret
lods
test
imul
sarb
mov
pop
call
nop
xor
mov
dec
call
je
jbe
pop
sub
enter
cmp
mov
pushl
fldl
inc
out
jp
push
xor
imul
xchg
in
fsubs
in
xor
xorl
xchg
pop
sub
or
and
and
in
or
mov
or
and
sbb
adcb
mov
or
sbbb
adc
push
mov
push
and
mov
xchg
mov
pop
xor
push
pop
jno
add
jg
test
aas
sbb
push
imul
sub
into
pop
xchg
adc
push
imul
jecxz
inc
adc
pop
repz
mov
into
pushf
xchg
hlt
xchg
jne
xchg
pop
je
fdivr
jmp
dec
enter
jae
dec
fsts
mov
clc
jmp
test
je
sbb
inc
pop
inc
pause
sahf
faddl
call
or
inc
mov
jne
dec
mov
int3
pop
jo
clc
iret
nop
je
mov
mov
mov
loopne
data16
xchg
aad
jmp
cmp
addl
dec
test
arpl
mov
xchg
jnp
push
xlat
xchg
xor
shlb
shll
imul
fadds
cmpsb
jnp
jp
bound
cmpsb
add
pop
xor
movsb
mov
sbbb
or
xor
clc
fnstenv
xchg
cli
or
imul
in
jnp
and
js
adc
mov
mov
cmp
push
or
insl
mov
xlat
mov
daa
movsl
imul
jp
dec
fimuls
cmp
fwait
test
outsl
jl
add
imul
ret
outsb
lea
aaa
stc
or
inc
int
jo
adc
lcall
adc
add
test
nop
pop
fs
and
addb
idivb
adc
and
xor
icebp
popf
or
lret
mov
stc
fistps
insl
push
popa
in
xlat
leave
bswap
cltd
mov
out
repz
out
push
jb
maxps
pop
mov
xor
mov
cmp
ret
xor
fldenv
mov
push
inc
mov
mov
inc
mov
jbe
inc
sub
xor
movaps
xchg
lret
jg
stos
and
push
mov
pop
and
sub
xchg
mov
mov
add
test
push
cmp
inc
add
fcmovnu
gs
adc
mov
fmull
pop
jmp
or
or
lds
stos
mov
fwait
popf
daa
xlat
enter
push
xchg
mov
mov
and
ret
sub
movnti
lods
test
xchg
int3
lret
ret
stos
jno
cmp
mov
jge
adc
push
push
jae
in
dec
and
sub
sbb
inc
gs
mov
push
push
xstore-rng
cmpsl
lds
ljmp
lds
repnz
xor
xchg
loopne
xchg
xchg
add
dec
in
stc
stos
jnp
fisubs
insl
jae
addb
push
fsubl
xlat
jecxz
adc
mov
push
mov
push
aam
popf
loop
sub
aas
mov
push
out
jae
pop
xchg
xor
bound
cmc
ljmp
push
sahf
push
pop
inc
mov
adc
js
sub
pop
xchg
xor
xor
mov
mov
cmp
sti
fistps
scas
rcr
mov
pop
push
cmc
pushf
rorl
scas
call
push
cld
adc
cmp
add
push
imul
sbb
popa
in
or
dec
loope
xor
sti
or
inc
pop
iret
das
xor
hlt
stos
nop
sub
test
inc
mov
mov
scas
cs
mov
call
aad
xchg
mov
push
cmpl
and
daa
fwait
test
filds
es
data16
addr16
push
push
push
or
mov
subb
lods
mov
ror
je
int
mov
fsub
push
ficoml
je
test
mov
loopne
jae
ds
jns
inc
jl
sbb
dec
pusha
and
and
push
cld
add
mov
or
in
jge
pop
popa
arpl
sbb
jae
in
lahf
arpl
adc
xchg
sbbb
jne
xchg
inc
arpl
iret
adc
xor
push
inc
loope
xor
cwtl
mov
xchg
test
fdivrl
and
sub
mov
inc
xchg
xlat
or
xchg
insl
test
cmp
push
and
popf
pushf
mov
mov
or
and
mov
xchg
push
xor
push
pop
ljmp
mov
jae
mov
xor
push
test
cmp
cmp
mov
push
arpl
sbb
adc
sbb
jae
cmp
clc
mov
cmp
les
mov
and
mov
mov
fstps
cltd
insl
stc
and
test
bound
pop
fldt
xchg
mov
jb
jns
jmp
jecxz
inc
jmp
call
xor
dec
int3
in
repnz
mov
mov
mov
pop
cmp
std
cmp
cmpsb
mov
xchg
jo
stos
jl
pop
and
data16
insl
popa
nop
lea
pop
inc
call
sub
sbb
fdiv
stos
add
int3
cmpsl
inc
sbb
dec
shl
lahf
cmpsl
cmpsb
ret
cmp
rorl
or
pop
pop
cmp
adc
lret
jmp
lea
fldcw
inc
dec
inc
sti
int3
movsl
mov
ss
push
aaa
adc
fsubrs
lods
mov
subl
and
enter
adc
dec
arpl
dec
inc
and
sbb
enter
hlt
xor
in
inc
loopne
pop
dec
xchg
in
push
lcall
and
xchg
stos
inc
jl
pushl
mov
arpl
fidivrl
aad
leave
pop
iret
cmp
orb
hlt
rclb
stos
roll
pop
jbe
faddp
mov
int3
cmp
stos
fwait
sub
clc
arpl
inc
shll
inc
test
push
mov
hlt
mov
cltd
add
lret
shl
jmp
and
xchg
outsl
pop
dec
arpl
mov
pop
movsl
lret
cmpsl
dec
jbe
xchg
aad
add
mull
and
inc
mov
xchg
ret
cld
cmp
outsb
dec
dec
jl
pop
add
mov
lcall
pop
sti
pop
ja
adc
std
sti
je
jo
aaa
data16
add
insb
adc
pop
push
push
mov
or
jle
ds
out
imul
test
mov
sbbb
jle
xchg
push
jmp
or
gs
mov
lock
jne
jg
lds
add
pop
xchg
xor
mov
mov
call
daa
stos
lcall
imul
and
xorb
out
jbe
cld
lahf
mov
jle
jne
mov
scas
push
jns
jb
andl
aas
add
xchg
fld
adc
test
sub
rorb
popa
into
mov
mov
adc
cwtl
fcoml
shlb
pop
rcrl
push
mov
xchg
add
xor
dec
push
sbb
push
xchg
lret
stc
aad
xchg
xor
inc
pushf
push
xor
push
mov
jnp
lods
lcall
cmpsb
inc
call
jmp
cmpsl
push
push
mov
frstor
jl
jae
les
pop
xchg
xchg
fsubl
inc
out
int3
inc
sahf
data16
arpl
mov
js
aam
add
in
rcrb
jecxz
push
fildl
popa
cmp
sar
dec
jmp
int
dec
shrl
btr
pop
out
inc
xorl
or
dec
mov
pop
mov
cli
fistpl
arpl
push
xor
lahf
shrb
mov
adc
mov
fistl
fdivrl
addr16
pop
mov
jbe
mov
cli
sbb
mov
mov
into
scas
mov
fsubrl
xchg
push
or
cmpsl
jnp
xorb
insl
mov
mov
nop
pop
std
leave
fisubl
ss
jge
aad
ljmp
loope
sub
shrb
and
shll
mov
in
roll
mov
pop
xchg
addr16
or
push
or
and
pop
jbe,pn
cmp
stos
jle
dec
adc
sub
shlb
movntq
inc
out
ss
pushf
cld
push
push
scas
stc
xor
test
in
sbb
mov
ljmp
dec
cli
cmpsb
mov
pop
ds
cmp
dec
test
fiaddl
xchg
mov
adc
fs
pop
aaa
in
mov
test
jno
aad
imul
lcall
sbbl
mull
out
or
push
add
in
fcoml
inc
mov
jne
and
xchg
loop
dec
aas
inc
mov
xchg
xchg
lods
sub
and
sbb
es
push
pop
mov
xor
sbb
stc
pushf
aaa
call
inc
hlt
jnp
ljmp
lods
push
cld
jl
out
dec
jno
mov
lret
adc
lret
add
cmp
adc
and
stc
xchg
fldenv
in
not
inc
sbb
cmp
or
xchg
outsl
mov
mov
aam
push
aaa
dec
test
jae
shrb
jp
out
stc
or
mov
test
push
cld
out
in
jne
mov
pusha
popf
popa
or
cli
pusha
xchg
pop
pop
rclb
mov
andl
inc
std
outsb
inc
or
scas
jmp
or
movsb
push
fucomp
fistpl
jge
pop
sbb
jecxz
cmp
push
cmp
mov
mov
loope
jno
js
mov
jecxz
daa
movb
in
test
js
jecxz
sbbb
imull
cmc
jb
cwtl
and
fldenv
outsl
jne
pop
rorl
ljmp
cmp
jns
and
inc
or
sub
mov
sub
add
decl
js
gs
test
pusha
xor
mov
out
fidivrl
xlat
push
pop
xlat
mov
ficomps
repnz
or
push
pop
or
in
pusha
jmp
dec
movsl
aaa
cmp
outsb
js
mov
loope
or
and
mov
mov
aaa
out
mov
loop
cmp
imul
pop
imul
dec
adc
js
dec
testl
jae
add
add
das
in
lcall
add
sbb
adc
add
jno
jecxz
jns
in
xor
and
ret
cmpsb
jmp
outsl
popa
rclb
movl
popa
push
pop
push
pop
inc
pop
inc
shll
js
insl
rcl
xor
mov
and
leave
out
xchg
xchg
cmp
inc
sahf
xchg
std
jecxz
imul
xlat
movsl
sub
repnz
sbb
shrl
testb
add
das
pop
aad
fs
pushf
test
negl
adcl
in
mov
xchg
mov
xchg
adc
lds
and
movsl
or
xor
stos
add
fxch
sub
rcrl
inc
or
out
rol
cmp
in
and
in
add
daa
or
sub
imul
mov
mov
cmpsl
mov
mov
outsl
jp
in
imul
or
call
xor
or
ffreep
jecxz
sbb
xor
fdivrs
sar
je
rcll
in
mov
sbb
inc
lahf
outsl
lock
fcompl
fwait
lods
notl
xchg
mov
xchg
fnstsw
nop
mov
push
ret
add
lahf
ret
and
clc
or
shrb
cltd
xlat
lret
jae
adc
in
subl
stos
sub
push
shlb
cltd
mov
cli
out
js
jl
mov
insl
loopne
adc
mov
add
outsb
mov
fcmovnb
jb
pop
mov
mov
or
sbb
int3
loope
in
in
xchg
jmp
pop
or
popf
pusha
idivl
dec
cmp
sub
jae
xchg
int3
sub
sub
repz
adc
pushf
and
fnstenv
loopne
or
lret
xor
jmp
call
push
cmp
jno
jbe
fnstenv
mov
push
jl
imul
sahf
sti
daa
mov
repz
mov
cmp
cmpsl
dec
jo
inc
xchg
mulb
sub
xchg
das
clc
add
fs
add
cmp
push
cmp
out
cmpsl
mov
ds
les
cli
jb
inc
xor
leave
mov
sub
int
or
adc
dec
dec
sub
in
test
cwtl
sti
pop
mov
das
iret
leave
add
jo
lds
jl
push
ret
lahf
mov
pop
push
mov
xor
cli
data16
fisubrs
push
pop
fcompl
and
mov
mov
shrb
dec
in
mov
inc
cmp
cld
mov
hlt
rolb
out
lcall
or
xorb
fisttps
or
cmp
adc
mov
sub
mov
shlb
mov
jo
call
mov
mov
repz
push
rcll
jmp
fwait
mov
xor
nop
ljmp
xor
fistps
xchg
ret
in
es
mov
xor
inc
dec
inc
cmpsl
out
data16
call
pop
hlt
jmp
sbb
jb
iret
movsb
loop
xor
mov
lds
loope
jl
ffreep
not
sbb
loope
sbb
popa
pop
rorl
aad
jo,pt
and
pop
sub
lds
sti
or
out
jnp
xchg
mov
mov
jb
int
mov
adc
adc
loop
les
lods
and
push
data16
inc
loop
rorb
mov
cmpsb
or
lock
dec
pushf
jbe
test
sbb
ret
push
mov
aad
fs
jge
dec
mov
cmpsl
psraw
out
lods
xor
out
clc
and
jnp
mov
pusha
jae
xor
adc
stc
sub
loop
mov
inc
adcb
push
ja
adc
lret
stos
es
lret
adc
clc
add
pushf
lahf
mov
cmp
sbb
cmc
pop
mov
mov
xchg
push
into
je
jmp
out
cmp
test
aam
mov
or
imull
inc
in
xchg
neg
mov
cmp
mov
lea
lsl
aas
jle
xor
inc
pop
outsb
cmp
mov
sbb
mov
cmp
jp
push
cmc
sarl
or
or
pop
sub
sahf
js
ss
sbb
aaa
and
jge
xchg
fdivrs
movsl
mov
lock
into
aaa
and
jnp
or
sub
pop
test
and
dec
jnp
and
aam
jecxz
imul
outsb
jae
jmp
and
je
jle
insb
mov
jo
mov
loopne
outsl
test
xchg
jp
jge
jnp
xchg
lea
test
sbb
cwtl
add
inc
inc
adc
xchg
adc
dec
test
push
inc
add
ret
dec
and
push
in
int
fsts
xor
ret
scas
das
cs
inc
fwait
adc
fwait
insb
inc
ljmp
xchg
push
ja
int
in
pushf
push
lods
outsb
or
mov
lock
cpuid
mov
jecxz
insl
pop
pop
xor
or
fs
hlt
jb
mov
xchg
out
dec
pop
cmpsb
decl
mov
and
mov
repnz
push
paddsb
test
and
call
lret
aad
mov
std
inc
jecxz
adc
mov
aas
sbb
cmp
iret
ret
and
push
push
or
adc
or
mov
push
mov
ss
sub
adc
adc
mov
sahf
fwait
xchg
bound
jmp
clc
cs
push
sarb
mov
mov
jmp
jl
push
imul
mov
dec
sub
add
or
inc
jae
jge
out
lock
outsl
scas
or
sbb
dec
mov
or
add
es
jae
and
imul
lret
fucomi
mov
xor
push
pop
stos
pop
movsb
push
adc
xchg
fsubp
inc
stos
popa
add
mov
stos
cmp
mov
outsb
mov
movsl
or
ja
enter
and
inc
pushf
jp
cmp
mov
mov
jge
inc
mov
push
sub
dec
xchg
sahf
inc
aam
stos
cltd
in
pop
rcrl
das
loopne
jb
inc
mov
in
lods
nop
mov
out
adc
inc
fildl
push
mov
xor
or
cltd
inc
lods
xchg
inc
adc
pop
jge
adcl
fs
repnz
sbbb
shlb
arpl
aam
int3
inc
add
mov
in
sahf
jg
test
mulb
mov
dec
std
adc
adc
aam
test
inc
pop
popf
push
hlt
cltd
je
scas
dec
imul
mov
push
lcall
mov
scas
xchg
rorb
push
ljmp
push
push
adc
xchg
or
push
pop
pushf
cwtl
ficompl
jo
cld
cmpsl
pushf
push
push
mov
mov
pop
mov
adc
adc
mov
add
sti
arpl
or
mov
pop
mov
mov
dec
mov
dec
dec
xchg
and
out
push
or
and
lcall
pop
and
pop
aaa
movsl
mov
xchg
jb
fidivrs
push
sarl
pop
adc
add
xchg
lea
or
lret
scas
xor
add
mov
sub
orl
cmp
push
pop
jge
or
mov
push
pop
rorb
jg
pop
cmp
inc
and
lods
mov
fstpl
xor
call
mov
repnz
jno
add
xchg
inc
mov
mov
fs
aad
sahf
mov
inc
xlat
lock
cli
mov
adc
push
or
pop
mov
push
ss
and
test
mov
ret
jmp
jo,pt
cld
push
aam
movsl
push
jns
xor
clc
add
out
push
in
jns
sub
mov
int3
cwtl
push
icebp
cwtl
xor
sub
inc
sbb
pop
mov
in
out
xchg
mov
xorl
and
jp
jno
sub
fcmovb
mov
inc
sbb
xor
mov
dec
and
pusha
and
pop
sbb
ret
cmp
mov
les
mov
lahf
fisttpl
clc
xor
add
mov
mov
pop
push
mov
xchg
mov
push
xor
mov
in
faddp
jne
and
sub
insl
push
lret
mov
test
mov
hlt
add
mov
mov
cmp
rolw
into
add
push
test
xchg
outsb
sub
gs
add
stos
cld
mov
imul
fsubrl
rorb
xor
pushf
int
or
inc
les
mov
mov
stos
aam
sub
stos
js
popa
rcrl
jb
jnp
popf
xchg
lds
movsl
testb
bound
pop
cmpsb
repz
mov
call
inc
repz
jmp
dec
fcoml
jmp
inc
add
lcall
subb
test
pop
iret
addb
lcall
pop
hlt
pop
and
mov
lods
cli
push
mov
insl
xchg
mov
scas
jb
cmp
and
fistpl
push
imul
pop
add
push
repz
xor
mov
cmp
push
repnz
sbb
mov
rcrb
cmp
repz
mov
push
cmpsb
add
rclb
aad
xor
das
mov
loop
add
outsb
mov
cmp
loop
add
adc
mov
pop
cmp
add
dec
or
fisubl
in
je
dec
inc
inc
mov
pop
pop
pusha
jbe
adc
mov
in
adc
xor
adc
gs
bnd
fcom
rcr
push
out
mov
jno
fisttps
daa
pushf
push
icebp
push
jp
mov
stos
mov
lcall
aas
push
decb
sub
loopne
inc
mov
call
notl
mov
push
jne
or
xor
add
or
sbb
cwtl
outsl
xlat
xchg
xchg
xor
imul
push
mov
add
mov
adc
cmp
mov
sbb
shrb
adc
mov
and
icebp
nop
loop
xor
orb
mov
mov
push
es
and
repnz
mov
xor
or
movb
popf
dec
mov
sub
loopne
cmp
adc
xchg
mov
and
cmovne
pop
inc
dec
pop
and
mov
sbb
pop
mov
pop
in
xor
repnz
mov
scas
lahf
sbb
jmp
aad
insb
fsubl
lret
mov
dec
sbb
xchg
lahf
daa
cmpsl
out
mov
push
push
mov
mov
lret
mov
stos
jnp
cltd
or
int
roll
ja
adc
dec
in
mov
inc
adc
mov
push
ljmp
mov
mov
repnz
xchg
clc
add
mov
ret
add
jno
mov
aam
lds
shrl
jnp
push
fsubrs
cld
cs
xchg
push
add
inc
mov
mov
pop
mov
insb
in
mov
pusha
adc
xchg
insb
xor
and
or
pop
sub
adc
cwtl
push
add
sti
fs
cmp
mov
vpextrw
lds
xchg
mov
in
jnp
fstpt
int
jmp
lcall
xor
test
mov
jge
push
fs
and
ret
sbb
rdpmc
jne
mov
and
loopne
ds
fsubl
cmp
inc
push
mov
loop
push
push
and
push
mov
xor
dec
and
fld
adc
and
cmp
ljmp
push
fst
push
push
subb
xor
je
scas
in
sahf
adc
orl
xchg
cmp
xchg
pop
imul
in
hlt
cmp
or
sbb
icebp
outsl
int3
xchg
push
pop
or
adc
popf
sub
lods
jecxz
in
push
aam
add
cmp
loope
cs
dec
mov
or
pop
shll
and
in
dec
aad
add
cmp
inc
mov
out
adc
sbb
sub
mov
js
and
cmp
imul
es
test
add
sarl
sbb
inc
movsl
dec
sub
div
and
jns
mov
in
cmp
inc
jp
ror
idivl
mov
mov
jno
out
inc
mov
xor
push
imul
test
shll
scas
xor
push
test
fucomp
fsqrt
in
cmpsl
add
add
pop
xchg
rorl
sub
push
out
and
mov
pop
scas
leave
int
out
mov
push
push
mov
pushf
add
mov
imulb
mov
inc
cmp
mov
cli
lock
lret
xor
dec
mov
mov
add
leave
jno
inc
sub
xchg
ja
pop
or
inc
inc
xchg
push
mov
outsl
xchg
or
xchg
stc
or
mov
dec
dec
pop
out
mov
xchg
addb
fsub
xchg
test
loopne
push
xor
cwtl
leave
jmp
mov
mov
xor
rolb
or
adc
inc
jbe
inc
jb
hlt
cmpsb
dec
cwtl
pusha
fstps
sub
clc
xlat
or
mov
loop
add
mov
dec
jp
xor
outsl
and
pop
push
or
jno
inc
std
adc
pop
pop
pop
cmpsb
gs
jnp
movsl
xor
imul
in
lahf
mov
in
ja
loopne
inc
test
inc
jmp
xor
lret
jae
pop
lcall
sub
jg
jmp
ds
mov
lahf
leave
mov
mov
sbb
stos
movsb
add
out
jbe
test
ret
clc
lcall
mov
jmp
mov
test
stos
movsb
xchg
jnp
mov
shrl
lahf
push
dec
dec
out
es
stc
push
xchg
pusha
frstor
cli
pop
popf
sti
stc
lock
shrl
int
fdivl
xchg
mov
inc
fcoml
fwait
sub
jp
test
scas
dec
sub
jp
xchg
xchg
pop
enter
lret
ljmp
popa
les
jne
aam
push
cmp
cmp
testb
ljmp
and
lcall
inc
lock
and
in
or
dec
enter
cmp
clc
faddl
subl
xor
imul
dec
scas
jmp
roll
and
adc
test
outsb
push
lds
and
adc
xchg
cli
jmp
jl
movsb
bound
scas
dec
jecxz
outsl
xor
cli
and
cs
ljmp
popa
ljmp
movsb
inc
inc
roll
and
sahf
popf
or
or
dec
and
mov
sti
mov
js
cmpsb
add
add
out
arpl
dec
sbb
mov
cmp
xlat
cmp
fists
js
bound
popa
fsubrl
cmp
push
ret
sbb
sahf
cld
pop
aam
jl
mov
pop
xlat
out
mov
add
aaa
pop
mov
mov
push
xchg
stos
repnz
addr16
stos
ret
dec
or
mov
mov
nop
out
cmp
cs
clc
mov
or
jmp
cmpsb
add
daa
or
in
pop
and
in
sbb
mov
sub
or
adcb
leave
cli
dec
sbb
adc
repz
loope
adc
add
pop
or
daa
insl
dec
test
dec
and
mov
mov
call
aaa
fildll
stos
movsl
fucomi
js
out
lret
xchg
ljmp
cli
scas
push
into
cmp
inc
jge
and
sahf
xchg
pause
aas
push
jae
out
ret
adc
sbb
int3
mov
and
jnp
mov
or
xor
repnz
pop
adc
stc
addr16
xor
lea
push
flds
dec
out
mov
pop
jp
pop
loope
xchg
int
test
pusha
inc
hlt
aaa
cmp
fcomi
cmpsl
mov
pop
lea
push
jbe
repnz
data16
or
imul
repnz
jmp
push
movsb
icebp
pusha
jp
cmc
xchg
shlb
fists
sahf
call
sub
push
fsubs
fisubrs
cmp
fdivrs
pop
push
xchg
jg
and
hlt
pop
xchg
mov
inc
loop
lods
mov
adc
dec
xlat
mov
dec
scas
jno
aaa
iret
push
or
mov
jge
xchg
loope
sahf
js
xor
adc
pop
ss
shl
or
sbb
inc
outsb
xchg
push
cmp
xor
xchg
aaa
dec
fs
arpl
fscale
rolb
out
xor
inc
insl
lock
call
imul
mov
and
adc
pop
ds
dec
or
inc
mov
fidivs
fbstp
mov
cli
ljmp
rorb
lock
xchg
cmp
push
cmp
inc
xchg
sub
into
loope
mov
jecxz
stos
mov
jo
lock
leave
arpl
push
jns
popa
pop
push
lods
pop
aad
pop
jp
test
push
cmp
mov
fcoml
push
pop
cmp
pop
pop
sti
aas
add
enter
into
mov
das
cmp
add
jbe
cmp
stc
rorb
fldt
sbb
pop
stos
std
add
cmpb
sbb
divb
cli
outsl
mov
cli
rcrl
loop
lcall
daa
shlb
repz
jno
dec
aaa
nop
mov
mov
jl
lds
jecxz
cmp
in
push
insl
pop
or
mov
sbb
pop
addl
pop
dec
jl
dec
add
pushf
mov
rcrl
mov
enter
inc
lods
inc
xchg
fmul
and
pushw
push
popf
inc
or
rcrb
sub
mov
pushf
ljmp
jle
jne
jg
andl
outsl
xor
addb
xor
or
pop
mov
sahf
out
pop
sbb
cmc
les
or
add
add
xor
inc
and
xorl
push
xchg
clc
add
cmpl
out
insl
test
outsl
push
daa
inc
jge
ja
iret
jb
fcoml
stos
rolb
ret
push
adc
push
ret
mov
in
xchg
roll
push
add
int3
addr16
sarb
and
mov
jecxz
jl
aas
dec
jge
cld
mov
or
dec
test
jno
test
call
fistps
xor
cmpsl
inc
adc
sub
push
pop
push
mov
dec
adc
cld
dec
dec
mov
cs
dec
lods
insl
or
cwtl
out
out
xchg
fcoml
jbe
repnz
dec
mov
mov
pop
xchg
sahf
adc
cltd
add
ret
mov
mov
and
xor
xchg
repz
lcall
xchg
es
pop
pop
iret
es
add
inc
test
fisubl
dec
cmp
movsb
or
add
adc
and
sti
stos
sub
sbb
cmp
out
sbb
outsb
and
test
add
lds
dec
jbe
mov
pandn
and
mov
cmpsl
stc
andb
or
hlt
jecxz
hlt
sub
cmp
fwait
icebp
and
movsl
cmpsb
fldl2t
cmpsl
jbe
icebp
xor
pop
xchg
sbb
aam
lret
cmc
enter
shlb
rcll
clc
pop
or
dec
cmpsl
xchg
cmp
add
popa
arpl
jp
lods
xchg
addr16
sarb
mov
dec
jp
cld
movsb
sbb
cmp
test
aam
pop
jns
aaa
cs
aad
or
loop
in
sub
aas
test
jbe
mov
inc
addb
push
sar
outsl
adc
sarl
je
cmp
shlb
adc
mov
cmpsl
movsb
test
mov
stos
imul
pop
movsb
dec
cmp
xor
fcmovbe
stos
dec
xchg
push
mov
mov
test
and
sbb
adc
dec
lods
scas
xchg
scas
xchg
ljmp
stc
or
mov
mov
cltd
into
bound
popa
lcall
ficomps
lods
pop
sbb
jg
addr16
outsb
and
je
cmp
cmp
aaa
dec
inc
mov
jge
dec
jl
push
dec
or
data16
add
cmp
jne
std
enter
xor
cmp
sbb
pop
outsl
sub
or
mov
jg
idiv
aam
fsubrs
test
lret
or
inc
js
dec
pop
imul
mov
or
je
push
push
push
daa
push
pop
lea
push
ret
clc
ret
xchg
std
push
inc
adc
adc
rorb
cmp
data16
mov
or
mov
pop
insb
mov
and
cld
sbb
xchg
repz
aad
push
popf
ret
mov
ret
mov
data16
bound
popf
cmp
inc
push
pop
add
mov
and
fdivl
xchg
fistps
jae
movsb
mov
dec
cmpsb
out
jne
mov
orb
mov
jb
ds
or
scas
addl
stos
sbb
int
lods
outsl
gs
or
add
mov
mov
xorl
cmp
lods
repz
jae
xor
mov
xlat
mulb
jb
lods
xchg
jno
pusha
add
mov
popf
add
or
sub
pop
loopne
mov
sub
jp,pt
xor
dec
push
adc
rcl
inc
pushf
sub
leave
xchg
and
mov
addr16
das
push
dec
push
xchg
xchg
in
sbb
inc
jmp
jnp
xchg
ret
jb
push
jle
jnp
movsb
jp
imulb
clc
dec
shll
ljmp
imul
movsb
fdivs
inc
xor
cmp
xchg
mov
pop
les
sub
in
add
push
nop
cmpsb
jns
shll
lock
das
int
push
xor
mov
loopne
mov
pusha
xchg
sbb
je
inc
xchg
cmp
jmp
mov
cltd
loopne
std
dec
jo
jmp
mov
js
add
mov
adc
loope
dec
add
fxam
add
fldl
inc
or
add
std
cwtl
cltd
ss
scas
xchg
movsb
bound
xorb
and
loop
std
sahf
cld
cmp
and
jl
xchg
or
or
jmp
ficomps
or
inc
fwait
jmp
test
std
mov
pop
inc
push
jl
dec
scas
cmpsl
ss
data16
outsb
enter
call
dec
hlt
jecxz
xor
into
xchg
fstpl
xchg
mov
in
mov
mov
sbb
addb
fcmovne
fld
sub
mov
inc
les
insl
adc
xor
jno
mov
jge
xchg
dec
lcall
mov
add
xor
leave
rorl
or
xchg
xor
sub
movsl
jp
or
das
insl
dec
mov
inc
test
shrl
add
xchg
fbld
bound
jne
cltd
and
insb
sub
xchg
rolb
adc
push
stc
mov
andl
lret
gs
cmp
inc
mov
mov
cmp
fs
iret
movsl
jo
dec
pop
clc
lods
loopne
and
cmp
test
xchg
arpl
fidivs
outsb
shl
stos
jmp
sub
dec
hlt
out
jl
fldz
cs
out
lret
mov
and
clc
imul
lret
loopne
stos
pop
cmpsb
fimuls
add
fwait
es
mov
sbb
mov
push
cs
js
add
aas
cmp
rcr
and
outsl
aad
in
call
inc
dec
xchg
lods
out
fildl
mov
mov
xchg
lret
in
sbb
rcl
sahf
int
jle
in
cmc
lahf
and
ret
dec
push
aad
pop
sub
mov
fcoms
adc
sti
xorl
ds
std
leave
inc
lcall
scas
mov
xchg
xchg
test
test
lahf
lcall
pop
push
idivl
ds
dec
ffree
mov
xchg
push
loopne
mov
int
cld
mov
cmp
rorl
cli
das
xor
aas
aaa
hlt
push
fiadds
in
les
push
xor
nop
insl
call
xchg
inc
imul
stc
adc
sub
mov
fs
xor
add
add
popa
xchg
jb
in
add
in
add
mov
push
sub
or
and
out
mov
inc
and
add
scas
test
xor
out
cld
xchg
fsubs
popf
call
in
cmpl
aaa
popf
jns
jbe
lahf
and
enter
dec
and
lret
jb
cmp
and
inc
call
push
lret
ret
imul
fildl
push
adc
in
xlat
adcb
cmpsb
in
push
aas
jno
cmpsb
ss
inc
nop
xorl
xchg
sub
lcall
jnp
pop
insl
lcall
int
lds
lahf
jmp
lods
sub
pusha
inc
sbb
adc
xor
mov
imul
sbb
pop
pop
mov
lret
repnz
dec
push
lcall
cmpsl
stos
sbb
data16
sbbl
mov
mov
pop
xchg
add
add
add
add
add
add
add
jmp
xchg
jns
xchg
mov
mov
sbb
jo
lds
and
jmp
xchg
jns
jmp
xchg
jns
jmp
xchg
jns
jmp
xchg
jns
jmp
xchg
jns
jmp
xchg
jns
jmp
xchg
jns
jmp
xchg
jns
jmp
xchg
jns
adcl
nop
jmp
xchg
jns
jmp
xchg
jns
jmp
xchg
jns
insb
aad
pop
add
add
pusha
add
add
ss
add
add
xor
add
push
pop
add
repz
add
add
adc
sub
inc
add
inc
add
add
pop
add
add
add
xchg
add
aam
add
push
push
mov
pop
mov
cmp
add
add
add
push
add
pop
and
add
add
add
cmpsl
inc
add
add
test
jo
push
ret
push
inc
add
inc
add
add
addb
push
add
and
add
cli
cmp
add
add
mov
stc
mov
cmpsb
and
out
mov
jne
jg
xor
cmp
stc
mov
std
lret
test
push
outsb
xor
xchg
test
out
scas
add
rcr
bound
repz
dec
test
push
hlt
inc
cwtl
mov
xchg
push
lcall
sarb
into
jl
loop
or
xchg
stc
mov
xor
test
clc
call
lock
mov
jmp
pop
push
test
pop
pusha
jns
jmp
clc
sbb
pop
xor
jg
cmp
sahf
push
or
divb
or
mov
dec
pop
fidivs
push
mov
mov
lret
mov
daa
jmp
fwait
push
loopne
lock
add
outsl
idivb
adc
mov
xor
repz
xchg
or
pusha
mov
dec
inc
adc
cmpsb
mov
mov
push
mov
sti
nop
or
gs
adc
shrb
push
das
fwait
pop
ret
test
mov
orl
xchg
inc
imul
jecxz
pop
jmp
add
mov
iret
jo
mov
mov
leave
xchg
std
adc
adc
call
popf
sbbl
and
sbb
adc
test
movswl
lea
mov
sub
jb
xchg
jbe
cli
pop
jge
pop
sar
jge
or
or
add
push
es
dec
js
scas
repz
jno
imul
xchg
mov
ss
in
imul
lret
mov
cmp
lcall
cmp
cmp
push
jo
movsl
or
movsl
loop
cmp
mov
dec
adc
mov
andl
jnp
cmp
add
mul
mov
jl,pt
xor
or
jp
movsb
insl
inc
dec
or
add
js
mov
in
or
mov
mov
pop
loope
aad
jae
mov
pop
mov
enter
leave
cmpsl
jnp
pop
aad
imul
pop
ss
or
out
cmp
clc
outsb
hlt
jl
cmp
mov
mov
push
int
sahf
gs
out
xlat
into
popf
cwtl
add
outsb
fisttpl
jmp
jo
loopne
icebp
jecxz
xchg
aas
mov
cmpsl
jge
fldl
push
add
bound
add
fdivr
enter
sub
inc
das
icebp
popf
adc
clc
dec
mov
imul
sbb
leave
push
xor
scas
cmp
outsb
test
jmp
pop
add
push
clc
jmp
je
sbb
stos
test
mov
ja
ss
call
loopne
pop
xchg
push
outsb
mov
dec
sbb
add
or
nop
and
add
xchg
push
inc
in
sbb
xchg
add
push
aad
pop
loope
cmp
xchg
das
inc
stos
es
mov
call
xor
repnz
push
xor
dec
inc
pop
adc
loop
add
in
dec
mov
leave
jne
scas
in
gs
popf
cli
cli
mov
test
xlat
jmp
inc
xor
cmp
lds
jecxz
adc
cmp
popa
mov
movsb
setnp
js
mov
fsub
mov
sbb
icebp
punpcklwd
mov
push
incl
stos
loopne
testb
xchg
loopne
jb
lret
sub
mov
div
adc
cmp
ljmp
rcr
in
sbb
inc
movsl
lea
sbb
dec
inc
sahf
repz
out
pop
jnp
cli
arpl
or
mov
pusha
xor
cmp
and
sub
mov
jmp
fsubrl
mov
jp
cli
and
push
add
insl
dec
divl
adc
into
inc
mov
jne
iret
and
inc
and
repnz
adc
push
cmp
xchg
ja
aad
idivl
cld
cltd
and
loop
cmc
mov
stos
add
sbb
call
cltd
push
jns
pop
inc
ds
or
mov
and
lcall
mov
lock
dec
pop
adc
fs
fistps
add
sbb
adc
jbe
lret
mov
leave
aas
sbb
jmp
pop
scas
sbb
sub
jge
sub
dec
sub
nop
xchg
mov
inc
inc
shl
mov
fists
jl
jbe
leave
ljmp
loop
inc
jbe
mov
ds
insl
xor
cmp
mov
push
add
pop
cs
sarb
int
adc
rcll
and
jno
test
xor
push
mov
lahf
decl
loop
cmp
jg
movsl
jp
adcl
mov
clc
leave
pop
jge
int
cmp
bound
sub
xchg
movsb
ret
lahf
dec
adc
out
pop
add
out
mov
jae
dec
mov
push
mov
mov
or
scas
cmp
add
adc
xlat
stos
sub
cmp
mov
adc
and
in
cwtl
mov
mov
sub
inc
add
dec
xchg
lods
je
in
movsb
pop
repnz
shrl
mov
dec
or
push
adc
mov
or
dec
fs
ret
out
fstps
psrlq
std
mov
not
adc
jnp
add
adc
outsb
imul
or
xchg
or
sub
inc
sub
in
icebp
enter
pop
repz
inc
in
sub
loop
mov
bound
sbb
test
pop
and
push
jae
sub
cli
push
jp
jle
mov
dec
out
xor
mov
push
test
mov
and
push
xchg
loop
sbb
mov
mov
test
bound
sahf
scas
add
or
stos
movsl
ds
in
icebp
mov
fcomps
push
adc
push
inc
jecxz
aad
mov
push
xor
cmp
nop
adc
mov
sub
dec
shl
in
jge
mov
cmp
sub
test
mov
outsb
cwtl
fimuls
cmp
scas
inc
and
xchg
dec
pop
mov
cs
stos
test
out
mov
jae
push
add
es
in
in
xlat
test
xor
in
or
and
in
inc
mov
es
daa
aam
sbb
mov
jp
adc
out
lea
or
pusha
fwait
bnd
cmpsb
es
je
jb
fbld
stos
pxor
ret
sbb
add
movsb
jne
mov
jg
shll
adc
adc
sub
lret
arpl
fisubl
mov
icebp
xchg
sbb
test
mov
jne,pn
gs
lods
dec
jo
add
pop
jne
aam
push
lea
xor
pop
pop
int3
mov
stos
out
addr16
or
xor
inc
cwtl
add
or
sub
rolb
stc
sahf
adc
icebp
inc
rcrl
into
fisubrs
or
xor
enter
test
outsl
gs
dec
lods
sub
lret
pop
aaa
test
inc
loop
inc
inc
xlat
in
sbbb
sub
push
dec
aas
cvtpi2ps
cmpsl
ss
pop
jmp
xor
inc
insb
adc
ret
pop
cmp
mov
hlt
call
inc
cs
xchg
test
jae
shld
aam
xlat
pop
roll
push
fwait
pop
pop
mov
push
lret
jo
or
lret
ljmp
lea
xorl
adc
dec
add
or
in
lods
sbb
push
inc
jb
cmpsb
and
or
push
mov
repnz
and
mov
mov
cmpsl
les
cmp
jne
jo
arpl
out
pop
rolb
sub
push
push
aad
push
icebp
jns
imul
dec
xchg
fcompl
lods
fisubrl
jo
dec
inc
cmp
pop
jp
pop
jge
mull
rcl
pop
xor
push
pop
push
add
push
and
lret
imulb
and
add
lds
sbb
jge
jnp
inc
xor
sbb
bswap
push
ja
sarl
cmpsl
adc
in
int
mov
pop
stc
sbb
sub
and
orl
cmp
jg
pop
mov
repz
or
or
dec
sub
dec
ret
pop
mov
stos
cwtl
jnp
stos
and
mov
xor
rcll
shrl
mov
ds
dec
test
sahf
popf
setge
gs
jp
cmp
addr16
loop
push
ret
out
popa
dec
mov
cmp
ffree
in
sub
xor
xor
stos
jne
mov
sub
fdivl
cwtl
inc
call
xchg
cmp
out
dec
sbb
shlb
and
push
add
inc
lds
xchg
push
sar
pop
adc
mov
pop
lea
xchg
mov
push
xchg
int3
inc
and
jmp
out
cmp
divl
cmp
push
insl
outsb
add
imulb
dec
add
mov
cld
shrb
push
mov
dec
jne
popf
push
mov
mov
sub
mov
sbb
push
mov
xchg
pop
sub
repz
or
lea
jno
xor
dec
jp
sti
or
test
and
inc
cmp
das
mov
dec
jle
popa
xchg
frstor
fiadds
mov
or
adc
push
xor
push
mov
das
js
dec
push
mov
cli
arpl
adc
push
adc
enter
loop
das
std
in
imul
call
cmp
pop
or
les
mov
inc
sub
fxch
std
inc
lret
js
aaa
ret
xlat
push
xchg
cmpb
dec
stos
ror
insb
lock
xor
aaa
inc
add
cltd
or
sub
inc
es
pushf
xchg
add
popa
adc
push
add
out
cmp
or
nop
test
das
outsl
out
pop
sub
insl
fmuls
xchg
jo
xlat
shl
dec
and
xchg
push
adc
lea
cmp
imul
jecxz
push
inc
fwait
mov
inc
mov
mov
inc
test
cmc
hlt
or
repnz
loopne
sbb
push
add
leave
and
and
arpl
fcmove
jno
mov
pop
cmp
clc
jnp
lods
das
sbb
les
inc
sub
stos
ja
lahf
and
mov
sub
icebp
xchg
cmp
sbb
dec
push
jl
ja
rolb
lods
jp
mov
inc
jns
lcall
pusha
sub
or
xor
pop
sub
shr
cmp
cmpsb
daa
ds
xlat
cmp
hlt
adc
sbb
ret
xor
shrb
cmp
dec
clc
nop
mov
adc
mov
out
stos
subb
mov
stos
pop
fisttpl
cmpsl
jae
or
pop
cmp
push
or
aaa
leave
jmp
jmp
mov
ja
cmp
rorl
pop
or
mov
add
jbe
or
push
xchg
cmp
lret
inc
out
add
lret
ret
push
xchg
lret
fcomps
ljmp
je
push
mov
enter
and
sub
out
fwait
or
cmp
stos
bound
ret
mov
xor
jl
or
or
cmp
and
push
xor
jne
in
mov
mov
fwait
dec
xor
dec
adc
mov
test
outsb
sub
cwtl
das
sbb
cmp
std
outsl
fisubl
mov
ror
aam
jns
xor
pop
ja
cmp
push
pop
inc
pop
ds
lret
pop
xchg
jg
cmp
fsubrs
in
xchg
inc
orb
inc
sbb
jae
imul
sbbb
mov
add
shrb
xor
pop
add
pop
mov
ja
mov
pusha
jge
push
rol
adcl
shrl
dec
test
fsub
push
cmp
mov
dec
imul
std
fsubp
nopl
jne
test
pop
ret
mov
xor
push
push
lock
fwait
adc
mov
outsb
mov
sbb
bound
or
push
and
dec
xchg
add
in
pop
ficompl
cwtl
mov
scas
pop
add
enter
xor
ljmp
int3
mov
mov
push
push
fildll
iret
push
aad
cmc
push
int3
das
loop
jecxz
adc
add
xchg
div
sbb
rcl
pop
sub
adcb
mov
or
ficoms
or
testb
inc
clc
scas
mov
mov
ret
jmp
xchg
fildl
outsb
adc
dec
rorl
lds
jns
sbb
xor
sahf
loop
mov
dec
stc
dec
dec
add
scas
repz
sbb
sbb
pop
repnz
pushf
out
xor
test
push
jb
xlat
cmp
xchg
jae
cli
es
xchg
test
mov
negb
jne
int
pop
jnp
in
rclb
nop
jmp
arpl
add
xchg
push
push
ret
test
loopne
xor
sub
mov
xor
add
mov
and
push
cltd
sub
push
push
sbb
popa
jg
outsl
jmp
dec
fcom
enter
pop
sbb
push
adc
jne
loop
aas
xor
outsb
xchg
test
roll
jno
outsl
jne
or
cld
filds
lret
inc
inc
clc
in
call
test
jno
stc
test
cld
je
inc
les
movsl
jle
add
adc
jb
and
cmc
xor
out
fidivl
xchg
int
or
lock
pop
inc
push
repz
fwait
mov
pop
inc
adc
cmc
pop
lods
push
xor
xchg
mov
sbb
inc
xchg
add
gs
push
test
or
ret
cmpsb
cmpsb
sarb
aaa
pop
xchg
push
jbe
xor
scas
imul
out
jno
push
sub
fadd
push
js
aas
int
push
sub
jnp
enter
mov
add
pop
and
and
inc
movsl
cmp
mov
sub
fidivrl
mov
mov
mov
es
sbb
call
orb
and
insb
insl
fucom
dec
dec
invd
lahf
sbbl
add
scas
jecxz
xchg
push
dec
je
scas
cmp
mov
and
je
inc
shrb
xchg
ljmp
mov
stc
pop
loop
shll
stos
or
ja
iret
aas
gs
es
xchg
in
pop
popa
inc
cmc
xor
cmp
test
ds
sbb
mov
dec
je
out
mov
lock
cld
pop
data16
cmc
sbb
pop
subl
sbb
fs
fs
cld
movsl
push
fsubrs
fildl
rorb
mov
dec
shlb
adc
cld
imul
mov
stc
inc
mov
mov
idivl
sub
mov
pushf
nop
icebp
test
daa
int
sub
pop
lahf
movsl
cmpsl
mov
sbb
mov
push
rcll
test
sub
lcall
leave
mov
mov
ds
filds
dec
dec
loope
std
loopne
push
xchg
lret
fisttpl
xorl
mov
aam
xor
mov
outsb
jg
stc
hlt
mov
pop
in
xchg
xor
sub
idivb
pop
ror
sbb
fisubl
shll
idivb
push
xor
test
push
inc
repz
pop
int
mov
mov
shl
mov
mov
mov
insl
or
pop
aaa
or
stos
adc
stc
aaa
out
push
xor
and
repnz
fidivs
mov
daa
inc
cmc
cli
repnz
adc
adc
sbb
and
orb
xor
sbb
nop
adc
outsl
loopne
sbb
mov
xlat
imull
hlt
cmpsl
and
and
xchg
mov
mov
push
jns
adc
inc
add
xor
neg
scas
mov
loop
xor
cmc
jo
sti
mov
repnz
or
std
jg
xor
mov
popf
pop
inc
add
dec
mov
sub
into
pop
test
mov
imul
fs
icebp
shlb
pop
or
inc
mov
lahf
dec
sbb
adc
pop
into
push
jb
inc
dec
pop
in
insb
leave
mov
push
mov
dec
push
ret
pop
cli
mov
pop
push
fbstp
adc
rcrb
jb
dec
lods
aam
or
cmp
not
add
push
cs
sti
sbb
inc
dec
mov
cmp
rcll
nop
imul
incl
pop
sbb
and
pusha
push
mov
decb
xor
stos
pop
inc
push
push
lahf
dec
cmpsl
scas
jle
popa
in
mov
loopne
jmp
push
aaa
into
jmp
in
mov
sbb
lret
push
adc
or
pop
mov
out
cmp
push
cmpsl
push
pop
and
pop
cmp
repnz
mov
cmp
cmp
cmp
cmp
lret
rcrb
xchg
pop
and
ss
mov
fisubrl
mov
mov
pushf
dec
cmp
inc
mov
inc
stc
jnp
out
push
sbbl
jle
movsb
inc
into
jmp
pushf
loop
cmpsb
out
inc
cmp
fcompl
mov
fwait
cmpsb
imull
xor
inc
lds
and
es
leave
cli
jae
in
mov
out
jae,pt
scas
xchg
stc
fiadds
call
sub
outsl
scas
sub
add
xrelease
mov
sahf
in
push
dec
pop
xchg
leave
sub
into
dec
mov
dec
and
mov
sarb
imul
inc
dec
mov
cld
test
push
sbb
fst
fisttpl
movsb
mov
hlt
xor
fldt
jns
popf
ret
pop
enter
mov
push
cmp
inc
scas
and
bound
ss
fcoms
mov
cmp
rcrb
adc
arpl
popa
dec
add
repz
fbstp
sub
shll
test
repnz
movsb
dec
and
dec
sub
jp
jg
xchg
loop
das
test
out
bound
add
mov
inc
push
or
or
pop
test
ret
int3
imul
mov
out
test
jmp
scas
or
xor
mov
repnz
pop
scas
loopne
hlt
add
jnp
imul
jo
ret
dec
ds
and
iret
push
das
ret
leave
add
shlb
add
scas
cmp
adc
mov
inc
icebp
mov
rorl
mov
dec
mov
ret
js,pt
ret
xor
mov
sub
popf
pushf
inc
and
ds
lret
and
mov
mov
lods
xchg
and
les
jecxz
jo
push
jbe
inc
add
nop
xor
outsl
lods
test
fwait
gs
sti
pushf
mov
push
loope
clc
lret
mov
push
cmpsb
ss
inc
int
iret
rcrb
or
jnp
mov
sahf
out
in
jmpw
xlat
pop
repz
ficoml
cmp
mov
int3
jl
dec
sahf
int
fstps
mov
sbb
mov
inc
sahf
xor
xchg
xchg
push
popa
lahf
add
aam
xor
jl
and
popf
pop
xor
insb
stc
pop
xlat
iret
cmp
or
int
jo,pn
jmp
repz
sbb
jmp
sub
les
cmp
fs
adc
and
aas
mov
and
gs
in
jno
in
inc
popf
xor
xor
mov
xlat
ljmp
data16
movl
imul
xchg
add
and
inc
mov
add
cld
shrl
aad
es
sbb
jo
stc
lcall
and
mov
push
and
dec
mov
pop
mov
pop
mov
faddl
jnp
add
mov
jmp
test
psllq
add
gs
lahf
jnp
aam
mov
mov
xchg
fs
dec
push
sbb
mov
sbb
mov
in
pop
xchg
jle
dec
aas
mov
adc
or
popa
shlb
mov
fcompl
add
in
mov
fists
adc
mov
dec
add
dec
and
push
pop
dec
aaa
adc
inc
shr
push
or
mov
scas
mov
daa
cli
xchg
and
jne
rol
adc
aas
arpl
fwait
pusha
cmp
jle
dec
xor
jo
leave
cwtl
xchg
test
sti
popa
sbb
rorb
dec
jle
sbb
sbb
mov
das
imul
inc
sub
xchg
cmp
push
push
stc
xchg
jl
cs
mov
adc
inc
pop
jo
and
mov
jnp
cmp
inc
scas
xor
test
ficoms
push
jbe
jno
sbb
mov
jns
pop
and
out
sub
add
mov
adc
adc
adc
xlat
ss
mov
in
into
loope
jl
mov
jle
mov
xor
mov
repz
push
out
das
fstpl
bound
mov
fistpl
push
xor
outsl
test
addr16
inc
mov
in
loop,pn
pop
movl
ss
add
mov
xchg
mov
sbb
and
sub
mov
cmpl
leave
dec
mov
and
into
mov
ret
mov
mov
cmp
push
es
outsb
push
xor
sbb
pop
int
jmp
dec
mov
rorb
aaa
or
or
sbb
es
sti
push
inc
xchg
push
cli
inc
pop
ret
or
imul
lods
scas
shll
cmp
imul
testl
add
frstor
sbb
pop
sub
aaa
dec
mov
shlb
jb
dec
inc
repnz
scas
pop
cmpsl
lds
cmp
ljmp
dec
pop
adc
mov
xor
fcoml
mov
and
loopne
rcll
sub
aaa
push
cmp
bound
fwait
cmp
pop
orl
fiadds
xchg
andl
pop
fistl
stos
mov
clc
dec
clc
push
mov
and
jae
or
shll
add
pop
or
and
mov
lret
dec
and
lods
in
dec
dec
aaa
mov
testl
jo
dec
mov
sub
clc
cmc
fbld
jecxz
je
inc
es
daa
jp
arpl
loopne
scas
dec
xchg
push
fidivrl
fistpl
movb
xchg
dec
filds
lcall
mov
lds
mov
xchg
mov
cli
lret
aad
imul
inc
ret
shlb
in
adcl
rcrl
scas
add
inc
xchg
pop
sbb
xor
lret
jmp
xchg
add
ljmp
fwait
sub
jno
pop
pop
xchg
fldt
and
pop
or
ret
jge
loope
sbbl
push
das
mull
inc
push
inc
out
outsl
mov
sbb
daa
push
in
adc
dec
and
mov
or
add
mov
inc
imul
pop
mov
push
pop
push
pop
add
mov
and
lea
jg
push
or
hlt
xor
xchg
jmp
fimuls
jno
imul
sbb
pop
cmpsb
cs
push
or
insb
inc
jp
pop
dec
stos
mulb
inc
fwait
addr16
out
mov
adc
pop
push
mov
movsb
idivb
fimull
sbb
insb
sti
push
jg
std
lret
hlt
or
lret
sub
xchg
xor
je
popf
sbb
aas
adc
imul
jp
lods
hlt
andl
sub
dec
test
mov
mov
jmp
fs
fwait
into
xchg
mov
pop
cmc
loope
lods
mov
sbb
pushf
cwtl
mov
cmp
lret
lds
inc
imul
ds
and
pop
xchg
sbb
mov
daa
pop
push
xor
fcmovnb
repnz
or
lock
cli
test
push
pop
in
jmp
int
iret
inc
jmp
rorl
pcmpgtd
dec
sahf
rcl
dec
inc
test
cmpsl
mov
and
pop
xor
add
jg
mov
push
movd
in
mov
je
icebp
psubusb
sub
fisubrs
push
pop
rclb
std
push
sbb
push
fnstenv
sub
lds
int
sub
cmpsb
psrlq
imul
mov
pop
mov
xchg
jbe
sbb
filds
mov
inc
add
dec
cmpb
fbstp
mov
xchg
xchg
dec
mov
dec
shrl
cld
clc
aas
ret
jecxz
add
aam
test
in
bound
test
xchg
std
lret
sahf
xchg
test
mov
stos
mov
ret
into
fnstsw
popa
clc
xchg
jecxz
ficoms
add
sub
mov
fidivs
adc
insl
clc
hlt
mov
jmp
lock
mov
push
scas
shlb
mov
mov
stos
sarb
clc
mov
dec
or
data16
in
imul
jmp
movsl
push
int
inc
fwait
jb
popa
cld
fndisi(8087
stos
jo,pn
psrad
movl
scas
sbb
and
lds
mov
xchg
fs
fcmovnbe
fsin
ja
jmp
pop
push
push
fldcw
test
pop
and
mov
out
lret
inc
out
jmp
and
mov
outsb
cli
cmp
sbb
mov
ret
xchg
mov
into
jo
aam
mov
and
add
adc
mov
arpl
faddl
inc
je
mov
mov
jg
xchg
js
cmp
mov
cmpsb
vgf2p8mulb
jbe
sti
push
push
mov
out
loopne
jns
dec
outsl
mov
lcall
mov
rorl
lret
mov
inc
dec
lea
stos
fsts
in
push
cmpsl
mov
xchg
sbb
loop
mov
add
jecxz
mov
decb
punpcklwd
in
adc
sub
cmpsb
call
pushf
rcrb
cmp
jl
jecxz
cmpsl
lret
add
xchg
fidivrl
mov
xchg
data16
add
push
xchg
clc
xchg
add
sahf
jmp
inc
pop
sarb
subl
in
shl
test
sub
dec
fmul
int3
fcom
mov
push
in
andb
xchg
rol
add
lret
cmp
jne
daa
mov
nop
mov
shr
jbe
and
shrb
xchg
cwtl
xor
outsl
loopew
leave
pusha
inc
add
mov
std
and
stos
mov
popl
cwtl
nop
shll
fisttps
jecxz
in
jl
jo
xchg
mov
cmovno
sub
iret
sbb
xor
scas
push
pop
fcmovbe
or
mov
insb
dec
add
clc
in
or
pop
lret
cmpsb
or
mov
cmp
xchg
mov
popf
cmp
push
add
frstor
nop
out
adc
mov
adc
dec
mov
jbe
test
xchg
adc
jl
dec
lds
movsl
rorl
jb
insb
out
jne
and
aas
jle
dec
and
push
data16
mul
test
hlt
pop
inc
sbb
sbb
ds
pop
jno
add
sahf
arpl
jle
xchg
mov
push
inc
sub
add
bound
cwtl
xchg
mov
in
push
icebp
das
out
out
repnz
lea
pop
lahf
fcompl
mov
cmp
pop
or
sbb
ficompl
mov
mov
jp
cmp
leave
mov
iret
addr16
insl
push
pop
mov
idivl
imul
adc
out
push
adc
mov
lods
push
sub
in
lahf
dec
roll
mov
dec
test
std
and
popa
lods
cld
xorb
es
push
movlps
mov
les
out
inc
mov
push
jne
mov
jg
mov
jae
add
pop
or
test
lcall
adc
rorl
pop
adc
ds
push
sub
pop
push
push
rcrb
rclb
es
cmp
sbb
in
dec
dec
or
inc
adc
es
int
inc
in
mov
int
mov
jae
mov
mov
or
jl
mov
pop
mov
inc
insb
outsl
or
and
sub
mov
dec
into
cmp
pop
test
sub
enter
lock
ja
loop
cltd
js
mov
sub
ds
test
xor
out
or
aaa
shlb
push
push
push
jge
jo
xchg
cmp
mov
mov
or
loop
and
inc
cmc
push
dec
or
fsubr
mov
ret
adc
mov
cmp
xchg
fyl2xp1
jns
sub
loope
out
adc
push
mov
adc
jae
movsb
cld
cmpsl
inc
inc
mov
outsb
inc
xchg
cmp
adc
fistps
jb
repz
mov
xor
and
sbb
jecxz
pop
inc
cld
mov
enterw
ror
or
push
in
cmpsb
in
movsb
imulb
push
push
daa
lock
dec
cmp
inc
enter
jb
out
jle
call
clc
out
mov
mulb
mov
in
push
mov
push
sub
cmpsb
adc
or
jbe
dec
mov
fadds
adc
xor
and
cmp
push
stos
xchg
test
test
imul
mov
or
xchg
jne
dec
mov
pushf
inc
xchg
xor
jmp
mov
mov
add
inc
mov
sbb
int
add
jns
iret
dec
pop
into
js
dec
jae
cs
xchg
outsl
cltd
sbb
fists
fisubrl
xchg
lret
inc
cmp
and
into
clc
imul
in
inc
fidivrs
rorb
lds
sub
xchg
cld
loop
and
xchg
sbb
idivb
inc
jp
jge
and
add
mov
jo
testb
into
lea
dec
in
pop
push
push
inc
test
stos
imul
cmp
in
in
lds
inc
sti
xor
push
inc
dec
imul
aad
adc
aad
aaa
jbe
xor
mov
out
in
out
cmpsl
jl
cmp
fnstsw
push
mov
fnstenv
jecxz
pop
ss
jge
cmp
movsb
lock
aam
stc
adc
inc
fdivl
shlb
clc
adc
test
cmp
daa
sub
lret
sarb
xchg
fists
jle
add
adc
ficoml
arpl
data16
not
movsb
popf
inc
shl
dec
lret
add
push
cwtl
lock
pop
xor
sahf
adc
ss
stc
popa
hlt
std
repz
lret
mov
imul
in
inc
dec
lret
sub
or
cmpsb
dec
add
insb
add
dec
xor
dec
loop
xor
push
icebp
adc
jo
jle
int
jnp
rorl
pushf
lret
out
xchg
push
push
jbe
pop
loop
sbb
movsb
mov
pop
dec
mov
std
enter
ret
jg
or
adc
jno
das
scas
push
inc
push
mov
cmpsb
aas
fldl
mov
pop
sbb
aaa
xchg
jg
sbb
stos
sub
adc
sub
popf
and
mov
in
movsl
in
or
in
clc
test
leave
fcmovu
pop
iret
mov
push
stc
xchg
lahf
adc
cs
pusha
repz
cmp
mov
cmp
outsl
icebp
xrstors
add
pop
mov
sub
outsb
popf
insl
mov
hlt
xor
push
mov
js
into
pop
ss
testb
fadd
mov
lds
push
and
mov
test
mov
xlat
add
insb
das
ret
xchg
dec
mov
and
push
pop
popa
xchg
mov
xor
leave
shl
push
jp
jmp
sbb
or
imul
push
in
shl
sub
pop
mov
pop
mov
xor
xlat
sub
xchg
test
fmul
mov
mov
adc
lahf
pop
repz
int
mov
cmpsb
jge
xchg
lahf
icebp
cmp
std
mov
sbb
iret
or
sub
or
test
fstl
cmp
inc
jbe
aas
in
cmp
mov
in
stc
cmp
fisubs
cmp
lods
pop
inc
leave
add
and
pop
adc
ficomps
inc
and
sbb
mov
test
cmc
pushw
insb
inc
mov
pop
cli
mov
cmpsl
xchg
xor
dec
adcb
ss
movl
lods
inc
jp
in
mov
lret
push
out
xlat
and
loopne
out
icebp
jmp
sub
daa
jge
jle
aam
iret
add
and
sbb
mov
or
pushf
fs
inc
xor
pop
add
xor
ja
mov
int3
rorb
cmp
daa
scas
sbb
leave
lods
sar
sub
or
push
pop
adcb
push
mov
xchg
mov
xchg
cmp
pop
adc
pop
pop
inc
flds
je
mov
mov
mov
pop
std
pushf
adc
dec
adc
push
ljmp
inc
leave
fadd
sub
pop
push
pop
mov
es
xchg
icebp
fsubs
and
mov
xchg
aam
push
mov
push
mov
cmc
and
adc
loope
es
jecxz
push
aad
inc
or
adc
es
ret
insb
sub
mov
ret
iret
jmp
add
dec
rol
repz
sub
push
loopne
jo
lret
xor
std
or
or
sub
push
and
mov
mov
add
inc
cmp
fidivrs
mov
int
in
or
lods
cs
fwait
xchg
sub
pop
cltd
das
jle
lea
jns
adc
mov
inc
stos
aas
subb
and
lcall
pushl
call
inc
jl
aaa
mov
arpl
mov
cmp
push
add
std
dec
push
test
xchg
dec
imul
aad
addr16
repz
stos
test
stos
int
xor
subb
cmp
fwait
add
loop
inc
cli
ja
stos
mov
pop
add
cld
cld
add
ret
mov
pop
xchg
imul
daa
loop
fstps
mov
jnp
add
xorb
push
cltd
pop
loop
lret
dec
bound
shl
scas
lods
cmpsl
jge
fiadds
sub
xor
aad
in
push
push
mov
cmp
stos
push
sahf
fistpl
mov
cmp
mov
pop
mov
movsb
lods
lods
pusha
out
pop
sbb
aad
push
add
xlat
loop
pop
sub
jle
cmp
ds
fs
clc
cmpsb
lds
or
nop
inc
test
mov
sub
bndldx
xchg
sub
sub
in
dec
fdivrl
push
js
mov
fadds
adcb
or
inc
lea
cltd
adc
lock
out
pop
xchg
loope
ljmp
mov
notb
xor
popf
xor
push
gs
xchg
stc
xor
cs
test
mov
out
add
fiaddl
jo
push
les
jbe
fimull
cmp
push
test
out
fs
mull
add
loopne
mov
pop
add
outsl
movsl
pop
mov
arpl
push
mov
jl
push
gs
in
add
lods
fs
fstl
pop
xor
sti
mov
push
lcall
leave
adc
ret
movsl
inc
jbe
jb
out
in
rcll
sub
aas
cmp
ret
in
fwait
and
add
ret
mov
xchg
add
pop
pop
adc
repnz
inc
iret
mov
cmpsb
mov
movsb
mov
loopne
dec
out
sbb
xor
xor
cmpsl
fistps
lret
push
sbbl
in
dec
sbb
xor
int
inc
dec
enter
sbb
scas
shr
loop
xchg
outsb
sub
aas
dec
lods
mov
sbb
add
inc
pop
in
fadd
js
and
pushf
xchg
cli
sbb
iret
add
adc
adc
lcall
xor
rclb
lret
mov
sbb
out
adc
leave
mov
adc
pop
out
fisttps
fs
cs
add
sub
jb
in
or
and
mov
xchg
sbb
aad
arpl
sarl
push
xor
lret
add
icebp
movsb
jge
pop
and
sar
sub
gs
ljmp
jo
fistps
lea
sbb
inc
mov
scas
cmp
pop
inc
mov
inc
pop
xchg
add
mov
subl
in
dec
sub
adc
lcall
sbb
and
jl
mov
iret
mov
test
lea
in
adc
push
xchg
and
sbb
mov
xchg
shr
and
push
dec
and
sbb
int
xchg
inc
icebp
imul
mov
enter
sub
test
adc
movsb
pop
mov
xor
push
mov
jge
addr16
mov
xchg
out
notl
sbb
mov
dec
std
andl
pop
negl
dec
mov
ljmp
mov
fstpt
ret
stc
lock
jg
push
push
scas
add
or
lock
rol
xchg
xchg
ficompl
sarl
sub
inc
stos
call
xchg
in
sbb
jb
mov
test
sub
lret
cwtl
jle
push
jle
sbb
scas
push
pop
jl
mov
cmp
popf
add
jns
js
addl
add
cmp
aam
rcrb
cmpsb
and
inc
pop
test
xor
in
jge
xchg
add
cmp
sahf
mov
and
or
aad
xchg
daa
test
pop
and
aas
ret
mov
insb
test
jg
nop
jecxz
fcmovb
lcall
inc
decb
mov
imul
and
in
inc
sbb
daa
inc
or
movsl
outsb
outsl
inc
jecxz
cmp
imul
ret
in
daa
or
adc
dec
insb
lods
dec
iret
sub
outsl
icebp
data16
daa
iret
inc
jb
cmp
jae
push
call
js
pop
ficompl
xchg
pop
inc
clc
sub
bndldx
mov
insb
mov
sbb
or
rcr
pop
xor
icebp
and
pop
imul
fsubrs
in
mull
inc
adc
into
stos
cld
aas
mov
sbb
adc
dec
mov
subb
adc
sbb
jb
mov
and
pop
outsb
push
data16
bound
jp
sbb
pushf
cmc
jbe
outsb
js
mov
mov
test
pusha
sbb
push
jmp
ficoms
imulb
ret
sbb
lods
ficoms
mov
movsb
pop
scas
adc
aad
andl
inc
cmpsl
loope
pop
mov
pop
xor
xchg
rclb
mov
mov
iret
ror
adc
enter
inc
sahf
jge
std
ret
jbe
sarb
pusha
std
mov
jmp
fs
mov
aam
jl
push
adc
jp
push
cwtl
mov
test
mov
pop
mov
fsubrl
mov
int
xchg
popa
xlat
inc
nop
popf
aaa
sub
call
push
lods
lahf
rorb
pusha
int
cmp
or
insl
mov
jmp
fisttpll
jb
dec
stos
sti
adc
aam
mov
cmp
outsb
pop
pusha
mov
ljmp
outsl
adc
adc
dec
pop
es
dec
insl
inc
int3
repnz
test
or
in
nop
lds
sub
sbb
insb
sbb
jmp
mov
push
mov
dec
dec
mov
mov
aaa
enter
and
cmpsl
jecxz
dec
aad
sbb
xchg
push
inc
repnz
jmp
loopne
in
jl
loop
pop
mov
cmp
sbb
mov
xor
out
popf
mov
pop
push
fdivs
fwait
jbe
adc
dec
addr16
dec
insl
leave
punpckldq
imul
mov
rcll
xchg
nop
test
popl
in
mov
xchg
arpl
fstps
addr16
loop
scas
aam
enter
xor
inc
and
ss
inc
in
push
jmp
int3
xchg
push
mov
adc
clc
rolb
pop
cld
xor
add
iret
test
nop
leave
xchg
sub
pop
jae
dec
xor
mov
dec
xor
xchg
loopne
jge
ficomps
ret
sub
dec
pop
lret
jmp
subl
mov
std
push
stos
les
aam
mov
mov
shll
push
scas
dec
push
int3
popf
mov
mov
sbb
push
fmul
jecxz
push
shll
mov
imul
stos
mov
js
add
adc
das
ret
sbb
cli
inc
in
nop
jno
cmp
pop
and
sub
adc
mov
pop
pop
movsb
jb
add
ds
bound
lds
pop
repnz
cmp
in
mov
or
pop
loopne
stc
lret
scas
dec
hlt
mov
cwtl
scas
mov
lea
xchg
jp
mov
or
movsb
ss
xor
dec
frstor
jae
mov
xchg
sbb
inc
xchg
mov
loop
pop
cmp
xchg
push
hlt
and
sbbl
add
push
mov
aad
cmp
xchg
mov
inc
popa
and
adc
iret
cmp
mov
fstpt
mov
xchg
sbb
shll
in
ljmp
add
in
test
adc
lds
repz
aaa
cmpb
jno
ror
xorb
das
in
mov
cltd
dec
mov
aad
jge
mov
sub
test
pop
or
das
subps
and
fsts
mov
test
outsl
repz
fldcw
add
mov
add
mov
insb
ss
addr16
adc
bound
mov
dec
jecxz
xlat
push
jl
xchg
push
adc
test
in
cmpsb
xchg
out
mov
stos
int3
ss
or
repnz
mov
int3
jmp
icebp
mov
daa
aas
jae
lret
xchg
out
shrl
add
mov
jecxz
clc
aam
scas
and
scas
cltd
cmpsl
mov
pop
cld
ret
mov
jmp
dec
jbe
das
mov
mov
pop
add
test
scas
adc
xor
adc
lock
sub
repnz
xchg
or
int3
cmpsb
add
fsub
and
nop
rcll
push
sbb
idivl
lea
fisubl
fildl
mov
pop
adc
pop
cmp
in
cmpsb
pop
dec
jb
pop
xchg
test
pushl
and
fistps
movsb
jno
cmpl
std
outsb
jno
out
je
movsl
or
cmp
dec
std
jecxz
in
rcr
or
mov
lods
iret
xchg
movsb
stc
push
or
pop
popa
xchg
lret
out
cwtl
dec
fucomi
pusha
adc
xchg
xchg
dec
add
xor
movsl
popf
in
popf
insl
inc
je
fsub
mov
clc
jne
lods
jb
sub
test
js
xor
sbb
adc
mov
adc
stos
sbb
cmp
cmpsb
insl
js
stos
inc
mov
ret
and
mov
and
jmp
pop
mov
jns
aas
jp
setno
pop
adc
leave
mov
jae
icebp
aad
nop
dec
test
fwait
push
out
mov
sbb
ret
fiadds
pop
in
clc
mov
jp
cmp
xlat
inc
ret
mov
shll
rcll
mov
push
push
push
sub
sub
mov
les
out
test
loope
sbb
adc
inc
dec
mov
out
into
pop
lds
hlt
cmc
sub
jmp
push
test
data16
push
cli
jp
popa
movsb
and
sub
scas
pop
inc
movsl
mov
pop
test
std
xor
popf
rclb
mov
call
push
into
mov
push
data16
xchg
or
dec
les
fisttpl
addr16
inc
punpcklwd
jl
icebp
lods
xor
inc
imul
ja
lret
sub
bound
jae
cld
popa
or
or
stos
lods
rcr
rcrl
cmp
inc
push
movsb
mov
add
bswap
lds
mov
xchg
push
xlat
push
mov
sub
and
xchg
xchg
pop
mov
fs
xorb
xchg
test
push
sub
flds
or
in
xchg
test
push
test
stos
stc
loopne
inc
pushl
or
mov
test
push
and
orl
and
movsl
shlb
imul
pusha
psrad
mov
shl
xor
xchg
shll
push
sub
jae
sub
pop
add
fildl
in
jbe
fstps
call
sub
repnz
nop
xor
jg
imul
jo
adc
bnd
sti
std
sbb
testl
incl
and
xorl
dec
sbb
je
pusha
adc
cmp
adc
mov
es
cld
in
int
icebp
add
js
insb
fisttpl
es
mov
mov
mov
xchg
add
das
mov
push
iret
lahf
mov
into
in
sub
jmp
jg
daa
mov
std
dec
ja
scas
mov
xchg
dec
pop
imul
jno
inc
sbb
enter
or
and
stc
push
call
ds
cmp
pop
jge,pt
in
cmpsl
sahf
sbb
xor
pop
add
add
js
int
push
inc
fmul
or
ss
js
xchg
rorl
pop
dec
mov
push
ret
call
cmc
mov
xchg
cmp
subl
cld
es
mov
cmpl
enter
into
scas
lods
inc
pop
dec
jecxz
int3
sub
das
dec
test
enter
test
inc
insl
adc
cmp
mov
lahf
push
cmc
pusha
sub
fs
pop
aad
sbb
xor
les
test
push
test
imul
ljmp
or
iret
or
pop
loope
insb
add
dec
sbb
mov
adc
mov
and
push
dec
sub
lahf
adc
aam
push
imul
repnz
add
push
pop
aad
movsl
inc
daa
ret
popa
bound
add
in
icebp
sub
scas
mov
rorl
test
aad
cmp
into
loop
repz
push
dec
aam
pop
adc
jae
rolb
sbb
sbb
sub
lret
fs
and
mov
in
adc
repz
idivl
mov
pop
sbb
jo
mov
pop
mov
inc
push
push
rcll
mov
call
aad
lea
mov
out
fwait
sbb
aas
mov
fisttpl
insb
push
xchg
inc
jg
sbb
cs
inc
cwtl
mov
out
xor
fwait
mov
add
dec
mov
rorl
sahf
js
outsl
sub
ds
mov
inc
inc
cmc
cltd
xchg
aaa
mov
negl
sub
lcall
incb
daa
cli
into
push
popf
out
pop
sub
push
adc
lods
cmc
test
sbb
icebp
outsl
sub
lret
aas
lret
mov
dec
or
popf
dec
push
movsl
imul
test
das
sbb
fwait
not
test
call
dec
cmp
adc
xor
dec
xlat
stos
jl
push
out
sub
xor
pusha
xor
mov
add
and
pop
jb
mov
divb
inc
testl
pop
xor
mov
cmc
dec
sbb
sti
shll
xlat
in
xor
sti
imul
pop
push
add
hlt
push
inc
test
adc
mov
inc
dec
xor
ret
test
jne
push
ret
lods
shr
push
pushl
enter
jl
mov
aas
aas
xchg
popa
mov
jns
sbb
jg
sbb
jne
ljmp
xor
out
dec
out
pop
stc
lcall
jno
movsb
xchg
sub
mov
test
js
mov
xchg
xor
push
inc
xchg
push
push
mov
sub
add
out
fdivrp
test
inc
mul
pop
inc
and
mov
jecxz
dec
cwtl
frndint
hlt
iret
stos
test
or
sub
push
jp
ja
sbb
sti
xor
xor
shrl
jg
lcall
fdivrs
mov
and
shll
cwtl
lds
push
cmpsb
lds
adc
mov
xlat
cmp
clc
mov
jge
dec
xor
push
pushf
dec
and
mov
ljmp
xchg
push
mov
cmp
ret
inc
stos
inc
int3
adc
lea
in
test
fisttps
bound
dec
es
sub
iret
popa
sahf
or
dec
mov
addb
in
test
mov
hlt
mov
xchg
xchg
aad
inc
cmpsl
insb
mov
jns
jno
bound
fists
iret
mov
jo
scas
jae
add
jmp
jecxz
jno
aas
mov
sbb
lret
pop
mul
sbb
shlb
imul
test
dec
into
jae
cmc
add
call
jle
jne
lcall
js
addl
testb
in
dec
sbb
fwait
pushf
cmp
addb
push
popa
push
jp
pminsw
mov
push
adc
push
cld
push
insl
sbb
rep
dec
std
int
stos
sbb
xor
or
mov
arpl
mov
test
mov
andb
push
fbstp
xchg
xchg
adc
and
dec
lods
lock
cs
push
xor
jecxz
mov
cmpsl
out
or
mov
mov
push
xor
je
sbb
inc
pop
or
jge
cs
sti
xor
mov
pop
call
sub
popf
jo
sbb
lcall
movsl
outsb
inc
xor
pusha
inc
xor
sbbl
mov
mov
gs
sub
mov
mov
push
xor
subl
popa
xchg
outsb
jae
mov
mov
xchg
xchg
data16
pop
xchg
or
lahf
icebp
dec
xchg
nop
nop
adc
in
in
sub
and
pushf
adc
push
xchg
lds
jg
push
jecxz
xchg
fadd
mov
scas
and
or
nop
sub
aas
daa
lods
aas
frstor
cmp
mov
jne
cld
dec
or
rol
fldcw
lahf
aaa
mov
ficompl
cmp
and
arpl
insb
mov
jmp
aad
xorb
loop
jge
pop
shrl
cmp
add
mov
shlb
js
out
push
icebp
negb
xor
das
popf
into
pop
lock
mov
outsl
cmp
and
lahf
int3
push
xchg
mov
pusha
cmp
popa
push
je
adc
aam
and
mov
mov
pop
xor
das
xor
test
into
icebp
leave
jb
iret
inc
push
lahf
add
bound
pop
lds
xor
sub
imul
andb
mov
dec
xor
push
xor
push
jo
mov
in
sbb
cmp
aas
mov
pop
mov
mov
inc
nop
pop
ja
out
sub
inc
push
or
xchg
sti
cmp
fnstcw
sbb
stos
sti
insb
fs
add
ss
filds
imul
daa
cltd
out
negb
sbb
lods
dec
loope
inc
lods
mov
mov
std
xchg
sbbl
ds
shrb
shll
sbb
mov
fwait
inc
fistpll
jge
fwait
mov
adc
outsl
fdiv
lcall
mov
mov
icebp
outsb
js
and
pop
lretw
xchg
aad
test
hlt
stc
jmp
or
pop
cs
aam
cld
lea
and
pop
ret
inc
cli
cltd
sti
loopne
xlat
jmp
lods
mov
add
insb
pop
pop
loope
dec
out
cmp
out
movsl
stc
stos
push
mov
mov
cmp
mov
push
push
test
push
repz
or
and
testb
or
jb
lods
fiaddl
ret
mov
cmc
cmpsl
ljmp
int
loopne
frstor
fldcw
cmpb
jg
rolb
test
cld
xor
leave
adc
push
stc
andb
add
inc
daa
les
push
jp,pn
push
xchg
jns
mov
loopne
scas
lods
sub
push
or
add
shr
call
mov
dec
stos
aam
pop
xor
jnp,pn
andl
rcrb
out
add
or
adc
movsb
js
filds
xchg
mov
xor
sbb
mov
push
orb
ja
add
out
xor
push
out
gs
jnp
arpl
cmp
or
scas
push
mov
mov
xor
cmp
sbb
lret
and
popf
adc
jp
inc
test
sub
xchg
mov
add
mov
xor
push
jae
add
cld
xchg
rcrb
bnd
dec
lret
inc
xchg
jo
mov
popa
and
inc
daa
pop
mov
dec
dec
in
add
sub
xchg
movsl
popa
loope
jb
xchg
mov
imul
ret
shl
das
adcl
mov
jl
pop
cmc
inc
in
jmp
insl
xor
pop
inc
subl
andl
pop
push
add
mov
mov
push
mov
dec
sbbb
adc
inc
or
ljmp
jnp
add
les
mov
push
xlat
cmpsw
cmp
mov
xchg
lcall
mov
or
lret
mov
not
std
push
dec
lahf
stc
or
cmp
in
and
mov
sarb
pop
int3
shrl
lods
outsb
adc
xchg
jb
mov
xor
cmpsl
adc
jne
subl
adcl
sti
add
inc
xchg
lock
mov
xchg
xchg
arpl
out
push
loopne,pt
pop
mov
sahf
and
hlt
mov
repz
in
dec
iret
pop
cltd
popf
mov
push
mov
clc
cmp
push
sub
mov
adc
rorl
xchg
inc
repnz
dec
in
mov
inc
adc
call
adc
push
addr16
jb
jo
dec
xor
popa
jae
mov
nop
jp
or
mov
insl
fildll
xor
dec
js
adc
xchg
mov
out
loope
mov
gs
aam
aam
mov
xchg
cmp
lret
mov
dec
cld
push
mov
jnp
orl
and
sbb
negb
xlat
jno
add
sub
xchg
push
in
mov
xchg
divb
inc
repnz
mov
call
punpckhdq
adc
xchg
xor
gs
ret
std
outsb
adc
ret
out
dec
mov
test
daa
pop
mov
add
aas
outsl
hlt
repz
jl
in
cmpsl
lret
std
dec
sub
sbb
mov
or
ret
mov
pop
shlb
push
sub
pop
adc
xor
sti
push
cmp
xor
mov
pop
dec
add
test
sbbb
cmpsb
outsl
xor
dec
jne
add
mov
stos
insb
xor
pop
add
andb
out
adcl
xor
mov
mov
xlat
stc
push
mov
mov
mov
call
pop
adc
aas
adc
and
push
in
test
mov
lcall
outsb
ljmp
pop
mov
cmp
mov
add
push
shlb
mov
mov
dec
movsl
out
das
insl
xchg
pop
out
pop
and
pop
int3
push
in
rcrl
xchg
das
mov
lea
pop
ds
cli
add
mov
dec
out
adc
jl
ret
imul
and
and
fmul
aas
dec
aad
sub
int
mov
adc
addl
mov
or
mov
jge
loopne
sahf
js
inc
and
rcll
test
mov
shrb
and
loope
push
ss
jo
test
add
and
pop
pop
mov
xchg
jg
das
fcoml
loop
push
dec
push
mov
sub
jmp
test
leave
mov
sub
lods
lcall
roll
out
add
push
xor
pop
inc
xchg
rol
fs
fisubs
push
fcomps
insb
adcl
xlat
insb
shll
lea
push
loope
inc
jns
cmp
mov
mov
mov
mov
fs
push
jmp
fisubrl
nop
mov
sbb
push
shrb
mov
jp
iret
lds
repnz
repnz
mov
pop
ds
jp
add
pop
cmpsl
mov
cmp
add
add
add
xchg
mov
mov
xlat
in
popf
shrb
lds
scas
mov
sahf
lahf
push
mov
xor
loopne
pusha
mov
sub
add
iret
psrlq
jg
xrelease
mov
xor
repz
repz
dec
sbb
into
ljmp
and
ja
jmp
fcomip
cmp
lret
adc
out
movl
inc
sbb
lods
sub
enter
add
outsb
lea
int3
shl
add
jmp
fnsave
jl
pop
cmpsb
ret
push
inc
dec
loope
data16
cmp
mov
sub
mov
int
idivb
jns
xor
out
push
sbb
or
out
push
mov
stc
imulb
jecxz
inc
data16
mov
aas
fldt
out
test
shl
adc
jns
addr16
pop
add
pop
enter
dec
pop
sarl
lret
stos
and
stc
inc
int3
mov
lret
pop
dec
cmp
rorb
scas
push
dec
jae
jge
mov
arpl
sbb
inc
outsl
jnp
mov
fldl
outsb
or
iret
leave
lret
and
push
in
les
xchg
bound
xor
mov
inc
ljmp
mov
gs
add
ljmp
mov
fdivrl
adc
repz
loop
lret
mov
mov
push
ljmp
xchg
out
jl
out
add
int3
and
jge
sbb
jg
push
inc
push
jmp
movsb
movsl
pop
jb
push
int
pop
fsubrl
add
aad
iret
sub
scas
cmp
test
dec
mov
cmp
daa
repnz
in
xchg
je
push
cs
mov
fs
loope
mov
pop
loopne
jb
idiv
ficomps
pop
lds
fcom
shrb
mov
stc
adc
aaa
loop
dec
inc
cwtl
sahf
addb
inc
push
leave
lods
pop
cwtl
xor
mov
pop
cmp
add
pop
jae
hlt
outsl
clc
data16
pop
pop
jb
inc
cltd
add
shlb
rol
pusha
lock
ret
dec
or
push
and
mov
xor
push
mov
push
or
mov
imul
sub
pop
addr16
cmp
mov
outsl
xor
out
jmp
enter
add
cmp
int3
test
cmp
or
push
mov
daa
es
addb
jmp
sub
pop
dec
adc
add
sub
adc
sbb
push
xor
pop
movsl
jecxz
out
cmp
cmp
popa
iret
add
js
int3
fwait
loope
cmpsl
or
mov
sub
inc
mov
add
mov
aad
xlat
sbb
cwtl
pop
dec
lret
fsubrs
adc
sub
loope
pop
push
sbb
xor
mov
sub
jl
mov
test
jp,pt
jns
cmp
in
and
sub
and
sbb
cmpsl
jb
or
or
and
fisubs
inc
and
ds
shlb
pop
inc
cmpsl
add
testb
add
or
in
adc
mov
inc
pusha
sbb
hlt
cmpsb
addr16
cmc
jmp
dec
push
and
scas
fs
or
xor
sub
sub
cmp
fsubrl
popf
push
into
adc
and
mov
movsl
sti
out
sub
jmp
lret
enter
mov
pop
pop
daa
mov
add
pop
mov
mov
mov
xor
jp
push
xchg
xchg
stos
sub
scas
sbb
add
shlb
fbld
xchg
fwait
and
xor
inc
push
gs
adc
sub
mov
jns
push
lock
xorb
jb
ficomps
test
push
sub
push
inc
mov
andl
xor
xor
adc
or
in
jno
pop
pop
int3
dec
mov
dec
fdivrl
add
scas
cmp
mov
test
shll
sub
in
dec
sub
push
and
pop
mull
mov
sub
or
mov
out
xor
stos
pop
in
push
xchg
inc
imul
inc
adc
mov
adc
dec
mov
cli
sub
push
pop
or
mov
call
aad
xchg
incl
xlat
dec
xchg
push
imul
int3
sub
or
add
inc
pop
or
push
xchg
movsb
xor
movsb
lods
out
xor
scas
js
fldl
jne
mov
aad
cmp
aas
jmp
mov
mov
pop
rcrb
adcl
and
and
jnp
popf
pop
pusha
repz
mov
test
pop
push
popf
fbld
and
jbe
sub
mov
push
jge
sahf
mov
and
mov
pop
cmp
hlt
push
int
ds
sbb
mov
inc
dec
push
add
pop
mov
push
mov
mov
loop
fidivrl
rcll
faddp
subl
aam
sub
adc
adc
cs
sub
push
sti
decb
imul
fcmove
in
rorb
sub
jl
int3
int3
lea
out
frstor
mov
push
mov
cltd
rcrl
and
aad
jo
les
movl
push
insl
xor
jno
xchg
lcall
sti
mov
and
add
mov
cli
and
rcrb
aam
push
sbb
sub
iret
push
mov
rcll
add
and
cmp
lods
clc
std
mov
cmc
mov
cwtl
fsubs
inc
cmp
mov
push
js
dec
inc
and
cmp
inc
cmp
dec
movsb
jns
loopne
adc
ret
imul
pop
push
jg
push
dec
int3
add
mov
push
mov
test
ds
and
push
or
loopne
mov
pop
jge
cli
or
stc
sarl
ret
enter
and
add
inc
out
cmpsl
cmc
test
mov
adc
xchg
psubq
mov
in
cld
jno
or
ljmp
pop
xchg
xchg
and
lock
bound
push
sbb
int
and
movsb
xor
xchg
movsl
add
adc
cltd
jl
test
addr16
test
rorb
fdivr
sub
dec
gs
aam
jns
das
mov
push
shl
mov
insb
or
hlt
adc
push
ds
ljmp
pop
or
sbb
ljmp
push
inc
xor
pop
jne
pusha
bound
rol
cmpsb
sbb
xor
mov
movsb
stc
xor
hlt
xchg
xchg
loopne
cmp
inc
fcompl
addl
ret
ja
test
add
or
sti
test
cmp
lahf
lcall
call
jge
arpl
sub
pop
movsl
cmpsb
cwtl
test
xchg
int3
pop
outsb
imul
push
xor
out
mov
inc
push
daa
out
mov
fldcw
fisubrs
nop
add
xchg
adc
ja
xor
test
mov
lahf
inc
aam
jno
push
adc
fnstsw
in
stos
adc
testb
movsb
test
dec
loopne
lret
pop
or
test
hlt
cmc
sub
imul
dec
shlb
sbb
dec
int3
pop
sub
lret
push
push
sbb
cmpsl
mov
sbb
pop
inc
dec
mov
cmp
imul
out
jne
in
movsl
ret
jp
test
sub
push
fnstenv
arpl
inc
imul
jmp
xor
ss
mov
or
mov
dec
lahf
in
or
rcpps
int
icebp
push
xor
aam
mov
push
mov
data16
pop
test
sbb
adc
mov
push
mov
mov
mov
rolb
xchg
pcmpgtb
adc
imul
mov
xor
jl
mov
and
xlat
daa
inc
mov
mov
add
ds
push
and
sbb
inc
outsb
imul
aaa
roll
or
mov
jecxz
inc
ret
fidivrs
insl
pop
lock
push
jg
es
dec
cs
pop
popf
imul
dec
xor
pop
sub
cltd
lahf
mov
icebp
scas
and
inc
mov
push
mov
std
cli
sbb
pushf
testl
xlat
adc
mov
and
jmp
xchg
jg
mov
sarl
mov
jnp
addr16
out
xor
stos
jl
icebp
jb
mov
xorb
imul
push
ljmp
repnz
les
adc
push
test
pusha
pusha
push
push
dec
repnz
aaa
dec
sbb
outsl
jnp
xor
std
mov
xor
fnstenv
xchg
jecxz
out
leave
popl
ja
mul
jge
push
pop
sbb
sub
sbb
aaa
adc
inc
lea
pop
cmp
xorl
and
sahf
adc
fistpl
lock
test
add
push
aas
sbb
outsb
cs
push
int3
fcompl
fsubrl
btcl
inc
icebp
jno
std
mov
test
inc
or
test
mov
stc
push
sbb
pop
jno
or
call
rclb
addr16
cltd
dec
lods
push
dec
mov
cmpsb
or
sbb
mov
mov
mov
or
stc
cmp
outsb
jg
in
push
hlt
xchg
add
fnsave
jp
mov
loope
sub
daa
mov
repz
sbb
push
shll
les
clc
lods
inc
dec
xchg
inc
lea
xchg
lret
sub
loop
or
jo
xchg
mov
adc
xor
jo
mov
scas
adc
xchg
ficoms
sti
and
packuswb
dec
aas
popf
add
sbb
mov
ja
mov
aam
fadds
xor
jns
scas
jl
inc
xlat
pop
mov
dec
mov
aam
jnp
and
out
gs
and
test
xchg
cltd
icebp
fwait
test
push
xchg
rol
sbb
push
jae
fbld
loop
add
lret
cwtl
xchg
data16
loopne
add
ja
xor
add
mov
or
dec
inc
repz
aas
mov
test
insb
mov
pop
ficompl
jno
push
or
popa
aas
aam
loop
popf
pop
jo
nop
mov
add
mov
fistps
ret
jecxz
mov
xor
jmp
lahf
mov
imul
inc
aas
sbb
ss
fs
lret
shll
pop
fs
pop
int3
jmp
xorl
pop
dec
imul
jo
inc
mov
gs
mov
xor
addr16
push
adc
iret
jge
dec
mov
bound
mov
push
and
hlt
popa
repnz
popa
push
jo
sti
pop
std
push
aad
insl
jb
dec
loopne
jg
push
or
adc
jl
cmpsl
add
pushf
fcomps
out
push
mov
fsubrl
rorb
cmc
iret
out
hlt
ss
jg
out
jmp
fsub
bound
sarl
test
cmp
push
insb
jne
xchg
les
lea
in
cmc
pop
and
push
inc
dec
fstl
jae
imul
mov
out
std
in
nop
je
int
dec
dec
pop
xor
movsb
scas
addr16
jg
sahf
pop
outsl
in
sbb
mov
andl
pop
in
jp
aam
incl
ret
movsb
adc
push
inc
adc
jno
add
fsubr
cld
pop
mov
outsl
pop
push
mov
imul
sub
mov
xchg
arpl
icebp
xlat
daa
sti
daa
sub
dec
es
adc
dec
pop
cmpsb
jns
or
pop
into
cs
clc
cltd
sbb
jnp
dec
adc
int3
mov
in
dec
into
cld
mov
inc
lcall
push
mov
cltd
outsb
jmp
cs
mov
pop
mov
sti
lcall
mov
xor
add
sub
xor
dec
sti
add
xchg
pop
xor
xorb
dec
adcb
lds
sbb
mov
pushf
dec
xchg
icebp
xor
bound
leave
subb
int
jne
add
mov
ja
in
inc
mov
and
xlat
sti
sar
fcomps
pop
mov
test
xchg
pop
pop
push
stc
pop
mov
call
repz
add
pop
clc
xor
xchg
mov
or
faddl
mov
xchg
lods
push
out
add
adc
dec
xchg
or
push
clc
cmp
sahf
sbb
mov
int3
inc
les
mov
or
inc
jmp
ret
cmp
ss
push
adc
push
mov
xor
je
aam
and
lock
mov
or
mov
out
cmp
enter
jle
imul
inc
mov
push
lds
dec
iret
and
xchg
cmc
mov
arpl
push
je
aaa
and
jmp
test
test
jg
les
sarb
cmp
pop
mov
dec
fwait
xor
inc
mov
or
mov
sub
pop
jmp
stos
inc
push
sub
mov
add
jnp
jl
dec
in
inc
mov
jp
scas
out
in
sbb
loopne
add
popf
cmpsb
adc
insb
jb
mov
xchg
int3
jg
jmp
add
fnstcw
dec
aaa
sahf
stos
lret
sbb
and
push
enter
inc
sub
cli
aad
cmpsl
dec
shlb
jae
cmp
sbb
jmp
jns
imul
mov
arpl
rcrl
arpl
xorb
imul
add
out
bnd
aaa
cmp
dec
mov
fcom
les
cmp
push
adc
mov
xchg
fiaddl
popf
ror
inc
sbb
pop
push
pop
sbb
mov
push
jge
and
aad
push
jmp
add
dec
mov
inc
lods
mov
cmp
cmc
lods
test
push
cmpsb
and
pop
setbe
cltd
pop
out
mov
add
mov
stc
popf
mov
cmpsl
dec
xorl
mov
push
and
jl
sbb
stos
nop
jnp
or
mov
cmp
pushf
or
ja
xchg
xchg
mov
ja
clc
xchg
pop
insl
sub
jle
outsl
pop
lods
xor
mov
push
iret
insb
int3
add
ret
sti
lret
loope
pop
adc
call
ds
cli
pop
pop
insb
push
push
idivl
mov
sbb
sbb
sbb
cmpsl
gs
xor
add
xchg
in
add
mov
sahf
xchg
mov
add
push
fsubs
inc
sbbb
jmp
stos
and
push
adc
sbb
mov
ficomps
mov
or
sub
push
leave
ret
adc
xor
test
cld
sub
cld
inc
push
dec
adc
cmp
jg
popf
push
mov
mov
fstpt
inc
test
insb
and
add
pop
loopne
pusha
int
mov
adc
ret
cmc
movsb
xor
fmul
pop
mov
xchg
sub
lods
cmp
mov
and
xchg
outsb
mov
nop
add
mov
mov
aad
add
lret
mov
movsl
popf
xchg
xchg
fstl
lea
and
push
mov
mov
pop
adc
inc
in
jg
aad
or
jo
and
push
sbb
xchg
lods
mov
cmpl
cwtl
sub
test
int3
and
movsb
mov
into
pop
rolb
jle
xchg
sbb
sar
jnp
push
popl
jmp
lret
xor
jae
jo
popa
sub
addl
pop
es
pop
popf
shll
add
pop
fnstcw
cmpsl
push
icebp
push
stc
adc
pop
movsl
enter
stc
and
bound
mov
jp
stos
mov
daa
and
sub
ret
xor
push
mov
lods
cltd
mov
sti
loop
stos
add
mov
imul
and
sbb
sub
or
mov
dec
lahf
dec
pusha
add
or
aam
xor
add
mov
cmpsl
test
cmp
push
call
and
and
lods
pop
xlat
mov
cmp
mov
dec
cmp
cmpsb
mov
je
popa
mov
mov
jb
out
or
push
loopne
das
mov
out
pop
stos
jb
adc
dec
enter
push
inc
sub
xchg
lret
dec
ljmp
into
sbb
dec
pop
insb
sti
lcall
ja
test
push
je
fmuls
es
mov
ja
cwtl
outsb
rclb
xorl
lods
xchg
outsl
lret
jbe
cmp
jge
stc
jo
cmc
sub
xchg
push
pop
dec
push
mov
bound
sbb
mov
ficoml
lea
int3
lahf
out
xor
fstp
ja
jns
out
pushf
scas
test
push
out
aas
sub
jg
mov
push
mov
cmp
in
in
enter
popa
cmp
sbb
dec
and
shll
ljmp
sub
in
mov
enter
aad
cmc
jb
mov
mov
pop
jg
arpl
pop
leave
cltd
jb
cmp
mov
mov
jno
arpl
cmp
sahf
int3
dec
das
sub
dec
ret
pop
fwait
icebp
dec
movsb
sub
jbe,pn
mov
push
jle
repnz
push
add
mov
cmpsl
stos
pop
mov
inc
shl
xor
cld
gs
ljmp
movsl
xchg
adc
addr16
cmp
mov
mov
cs
jbe
and
mulb
mov
cwtl
dec
iret
inc
idivl
and
mov
fs
push
scas
aaa
push
es
push
push
rcrb
dec
test
xchg
shll
ret
shrb
jecxz
das
rcll
xchg
jecxz
and
jo
bound
out
lret
loopne
pop
mov
nop
cmp
inc
fsub
jnp
add
sbb
push
cmp
ret
cmp
xchg
jno
xor
sub
add
movsl
jo
sbb
jle
pop
xor
add
call
jmp
and
test
mov
jo
lods
repnz
call
pop
jg
scas
jle
cmpsb
psadbw
dec
jae
and
mov
cmp
adc
mov
js
sti
mov
aas
clc
loope
js
fadd
fxch
test
add
adc
scas
mov
xor
lock
shlb
xor
test
in
push
push
cmp
sbb
push
popa
dec
fdivs
sar
xchg
gs
inc
xor
push
ds
add
out
and
jo
cmp
stc
mov
push
push
je
loop
shlb
mov
rcrl
dec
mov
or
lcall
cmc
test
sbb
orb
dec
pusha
sbb
mov
test
push
int3
mov
cs
push
jb
mov
ljmp
test
push
shll
mov
mov
fnstcw
mov
in
or
dec
repnz
pop
dec
sbb
cltd
inc
in
testb
and
and
and
mov
pop
sarl
in
dec
push
iret
mov
mov
inc
mov
dec
fs
push
sbb
sub
mov
push
jns
dec
xlat
inc
aaa
push
or
enter
and
jb
invd
mov
xchg
push
pushf
roll
popf
nop
int
push
jmp
cmp
push
out
int
cmp
push
jp
js
fdivrl
orb
mov
jns
cwtl
mov
dec
stos
stos
push
in
roll
fidivrl
push
mov
cli
or
insb
dec
push
out
mov
mulb
icebp
mov
push
mov
or
fs
mov
mov
scas
test
dec
cld
and
mov
xchg
adc
sbb
add
mov
repnz
inc
xchg
scas
mov
roll
out
popa
test
xchg
mov
push
xchg
adc
mov
lods
ret
cli
or
add
stos
enter
std
stos
and
jno
mov
pushf
cmp
in
inc
push
das
and
push
inc
fcmovnbe
add
mov
mov
out
cmp
lods
aas
adc
mov
scas
jg
adcl
ficompl
out
sub
lock
test
sbb
push
jb
sbb
sahf
xchg
cmpb
mov
or
adc
out
jae
ja
test
nop
dec
jnp
into
add
jne
and
xchg
cmp
jnp
sub
fldcw
pop
dec
xor
mov
fistps
mov
dec
pop
movsl
push
jno
lea
in
mov
lret
loope
sub
push
push
jp
sbb
fcoms
les
dec
enter
out
cmpb
cmp
add
mov
subb
arpl
pop
aam
pop
mov
pushf
hlt
outsl
dec
adc
and
push
push
add
push
xor
cmp
dec
ljmp
loope
in
ds
jmp
add
lea
test
ljmp
push
js
jmp
mov
sbbb
mov
dec
push
sbb
mov
adc
cmp
pushf
in
movsb
xor
lret
stos
and
xchg
and
test
daa
and
orl
inc
and
mov
or
fldenv
les
cmp
mov
mov
or
lea
out
pop
fwait
pop
dec
fcompl
aaa
jo
jmp
cltd
xchg
jecxz
push
out
dec
scas
mov
xlat
test
aad
sub
push
scas
ja
fldt
arpl
pop
stos
stc
int
push
nop
jg
lds
lahf
and
cltd
stc
cmc
sub
notb
xlat
shll
mov
xlat
pop
push
dec
aaa
mov
es
or
adc
mov
clc
int3
sub
fstl
jge
jmp
out
das
push
arpl
mov
outsl
stos
add
aas
push
jb
inc
cmpsb
sti
mov
push
lods
mov
es
mov
and
mov
push
insl
cmp
push
inc
mov
push
cli
into
int
xchg
push
cmpsl
mov
push
mov
adc
adc
mov
lds
jmp
shr
cld
and
rorl
xor
bound
sbb
inc
out
cmp
inc
mov
pop
pop
and
icebp
mov
mov
xlat
sbb
insb
jecxz
mov
push
mov
adcl
lods
cmp
pop
or
fdiv
mov
sahf
jp
ljmp
pusha
test
cmp
mov
push
dec
and
mov
fidivrl
mov
xchg
ljmp
push
into
insl
xor
cmpl
add
push
dec
es
imul
jle
adc
mov
push
lock
and
lds
adc
cmp
xorb
outsb
cmp
mov
xchg
movsb
inc
mov
mov
jp
daa
xor
inc
popf
and
sti
xchg
imul
fwait
ret
mov
int
push
cmp
push
fs
ret
inc
xchg
mov
in
xchg
push
pop
dec
cmp
add
jnp
in
push
inc
xchg
repnz
subb
or
popa
dec
daa
jns
cld
stos
pop
testl
cli
add
nop
xor
pop
popa
int3
hlt
xchg
jg
pushf
jmp
mov
icebp
aaa
sub
mov
inc
movl
hlt
sbb
andb
sahf
lock
movb
jns
es
xchg
sub
ljmp
mov
fistpll
imul
insb
arpl
jl
out
sti
fisttpl
in
xor
pop
stos
enter
lcall
cs
fisubs
cmp
test
fmuls
testb
push
add
jmp
sbb
call
adc
fwait
mov
mov
test
cld
stc
mov
negl
in
or
or
in
xchg
jbe
clc
iret
adc
mov
in
jge
mov
fstpt
or
imul
mov
dec
and
push
push
cmp
shll
dec
ror
xchg
jno
mov
mov
dec
xchg
pop
in
or
bound
into
fadds
test
xchg
inc
mov
int
xchg
smsw
mov
push
cmp
or
push
mov
div
out
out
out
int
mov
and
aam
mov
jecxz
pop
clc
les
ljmp
hlt
subb
test
push
cwtl
jae
push
add
mov
add
push
xchg
xor
mov
adc
fisttpl
push
fdivrs
xorb
jb
test
mov
push
dec
and
hlt
ss
pop
xchg
imul
dec
dec
mov
push
out
adc
add
test
xchg
pop
or
lcall
add
sbb
fisubrs
mov
mov
mov
int
lds
mov
outsb
pop
stos
pop
jno
addr16
pusha
cwtl
rcrb
sti
nop
push
repz
insl
sti
mov
jno
repz
ret
scas
add
cmp
daa
push
rclb
imul
mov
data16
stos
int3
push
int3
lods
mov
add
push
mov
fcomp
in
test
or
mov
xorb
sub
fstps
cmc
fs
inc
inc
cmp
insl
mov
jecxz
pop
adc
add
adc
jbe
enter
popf
xchg
dec
adc
mov
repz
adc
jbe
or
lods
sub
lahf
and
jp
xor
cltd
hlt
push
lret
notb
mov
mov
jne
inc
test
xor
jp
jbe
aam
fmuls
es
sbb
mov
mov
or
mov
mov
shl
test
cwtl
push
inc
outsb
push
loop
jle
cli
jg
mov
adc
adc
sub
stc
es
mov
sub
out
and
icebp
add
or
rclb
imul
sub
jo
rcr
or
mov
je
sub
call
pop
cmp
fidivs
sub
test
mov
fiadds
push
lret
dec
jl
je
cmpsb
pop
test
mov
in
cld
mov
sub
bound
shrl
jnp
adc
dec
and
repz
cmc
cwtl
ss
mov
and
jb
scas
cmp
cmpl
push
pop
cmc
scas
cmp
rcrb
cwtl
push
dec
sub
sbb
mov
out
add
mov
xlat
sub
or
sbb
sub
add
xlat
fidivl
clc
subl
movsl
cmpb
scas
sbb
je
adc
adc
push
xchg
and
adc
iret
cmp
inc
nop
mov
mov
popf
xor
pop
test
mov
mov
sarb
fildl
mov
ja
mov
loope
xchg
enter
rolb
fst
inc
add
testb
dec
inc
in
leave
bound
adc
xchg
jno
scas
aas
xchg
mov
sarl
push
dec
outsb
sub
dec
inc
out
jne
mov
pushf
lock
popa
outsl
pop
gs
nop
push
sar
cmpsl
div
imul
push
fdivrp
cmp
call
ja
rcrb
mov
cmp
fdivr
mov
mull
int3
lret
push
inc
cli
lea
xchg
add
mov
add
mov
inc
fsubr
pushf
cmp
push
cmp
jo
aaa
int
dec
xor
xor
push
mov
mov
dec
mov
ficompl
test
xlat
and
push
mov
mov
adc
out
scas
cmp
xor
out
inc
sub
and
or
mov
jbe
pop
or
mov
dec
fs
cmp
inc
cmp
mov
add
out
out
ja
dec
sbb
mov
mov
lcall
sarl
mov
fwait
scas
cs
fs
dec
popf
popa
inc
pop
paddusw
call
sbb
mov
fldt
xchg
jl
lods
mov
mov
fisubs
in
cmp
mov
sbb
fisttpl
inc
xchg
aam
testl
xor
adc
pop
pop
push
inc
xchg
repz
les
add
movsl
adc
adc
xchg
pop
xchg
movsl
scas
jge
mov
inc
adc
es
dec
push
ja
mov
stc
sub
sub
mov
out
pushf
cmp
fld1
push
and
cmp
xor
pop
inc
stos
xor
add
gs
inc
or
add
sti
mov
outsl
dec
push
clc
imul
inc
mov
mov
push
fsubrs
dec
jne
lock
cmpsl
xor
sbb
adc
sub
adc
cmp
cwtl
inc
xor
cld
cmc
xchg
sbb
or
in
out
imul
int
into
adc
sub
addr16
insb
inc
loop
adc
xchg
lock
jbe
leave
sbb
aad
pop
fldcw
rol
test
xchg
in
mov
adc
pop
pop
sub
mov
push
sbb
loope
jnp
xor
push
sub
fwait
loopne
push
jl
lea
test
out
stc
idiv
xchg
mov
push
movswl
mov
mov
jp
mov
or
nop
mov
mov
movsl
pop
fwait
xor
addb
xlat
dec
movsl
test
mov
mov
js
sbb
loope
jg
push
xor
mov
loope
call
cmp
push
fsubl
push
push
fistps
cs
inc
sbb
jl
fdivp
out
pop
or
arpl
lret
in
mov
add
mov
sub
call
mov
lea
loope
mov
dec
stos
dec
aaa
jge
outsl
cld
push
in
fisubrs
lahf
sahf
fs
xchg
push
int3
pop
sti
out
sbb
jnp
push
jno
pop
mov
xlat
push
pop
movsl
lahf
or
mov
xchg
jnp,pt
jle
fs
inc
dec
addb
cwtl
cs
push
loop
stos
sub
mov
out
mov
xor
mov
test
push
pop
push
jmp
inc
lret
sub
test
lods
inc
dec
dec
mov
jge
sbb
and
rcrl
gs
push
ret
out
push
and
push
jno
and
add
loope
js
shl
mov
lret
xor
or
dec
jbe
sub
int
mov
mov
test
pop
push
je
dec
ljmp
test
into
pop
add
mov
push
fcom
inc
jo
aad
push
add
mov
lret
int3
fisttpl
subl
sub
int3
sarl
xchg
push
imull
xorb
cltd
gs
icebp
inc
sub
or
xor
pushf
icebp
aad
rclb
out
jecxz
mov
aaa
adc
lds
les
and
jp
pusha
adc
jnp
or
sub
sub
loope
adc
sbb
andnps
out
cli
out
inc
sbb
stc
add
inc
das
imul
test
into
jecxz
stc
mov
jbe
jnp
lock
mov
pop
rol
and
std
out
adc
lock
adc
mov
mov
sbb
stos
push
out
lret
test
sbb
test
pusha
mov
ljmp
arpl
lds
ds
jl
movl
rorl
xlat
fldpi
outsb
mov
dec
adc
adc
sti
xchg
scas
in
xchg
xlat
pop
mov
mov
ror
lock
adc
xchg
test
jne
jae
fsubs
xchg
ret
cs
mov
loope
jecxz
enter
fsub
cmp
and
and
lods
mov
icebp
loopne
dec
fucomp
push
mov
xor
lret
dec
xor
loopne
aad
testl
push
movsb
jnp
loop
xor
test
sti
nop
test
sarb
hlt
or
mov
dec
shlb
xor
aad
adc
inc
pop
lds
mov
pop
repnz
push
sbb
dec
stc
xchg
mov
sbb
fdivrp
sub
in
es
das
ss
and
adc
repnz
lea
sbb
cmp
scas
and
sub
scas
cmpsb
mov
and
mov
inc
inc
add
fisttpl
pop
and
sbb
std
and
iret
add
int
je
xlat
test
lds
mov
add
jp
popa
push
lods
clc
aam
pop
ja
sub
ss
add
push
cli
jo
in
sbb
lcall
std
or
adc
jg
sub
rcll
fwait
ljmp
jecxz
mov
sar
dec
add
testb
xchg
lcall
add
jae
xor
jno
lods
inc
pop
mov
shl
pop
dec
cs
cmpsl
sti
loop
lret
add
data16
mov
pop
js
stc
add
cmp
jbe
mov
in
sub
xor
loope
mov
sti
mov
std
mov
adc
sbb
jg
mov
in
iret
int
rcrb
aaa
into
inc
xor
aam
outsb
gs
push
fldl
jmp
fisubs
enter
mov
lret
adc
test
or
in
xchg
or
mov
pop
mov
push
hlt
jno
mov
decl
bound
outsl
imul
add
or
ret
xlat
shrb
jbe
mov
mov
cmpsb
pop
mov
add
lock
xchg
fdivrs
xor
and
and
and
lds
sub
or
lret
mov
adc
mov
addl
jae
push
movsl
sub
test
jb
jle
daa
pop
mov
mov
jbe
add
ret
add
das
push
shl
push
lods
filds
icebp
cmp
dec
sub
cmc
ljmp
xor
jo
add
lods
cmpsb
test
fwait
shll
jns
push
pop
sti
hlt
xchg
push
adc
add
dec
cmp
sbb
in
sub
outsb
out
sub
stc
and
movsl
addl
or
out
mov
imul
or
xor
pop
sub
fnstsw
cli
adc
cmp
cwtl
cli
mov
ret
insb
out
rcrb
pop
adc
mov
xchg
xchg
jp
repz
frstor
cmp
dec
mov
popf
sub
jbe
adc
cmp
ret
in
push
dec
and
stc
stc
or
mov
adc
pop
subl
xchg
jnp
cmpsl
movsb
add
sarl
sub
in
pusha
sbb
sbb
je
addr16
sbb
mov
adc
jnp
lods
cmc
adc
ret
xchg
push
out
sbb
xchg
sti
dec
mov
js
sub
xor
cmp
movsl
dec
fs
inc
icebp
mov
push
pop
mov
lahf
push
xor
add
cmp
ficomps
pushl
loope
inc
jnp
popf
cli
fidivs
sub
xbegin
adc
shlb
dec
bound
cmp
cwtl
add
in
jnp
fldt
sbbl
mov
mov
pop
dec
inc
pop
push
adc
push
mov
mov
xchg
push
push
js
cmp
int
fidivl
mov
or
mov
sub
mov
andl
mov
lds
aaa
add
add
sub
push
push
insl
cwtl
dec
lahf
popf
aad
xchg
jno
enter
out
lods
ds
dec
fwait
or
and
mov
cwtl
dec
movsb
add
mov
or
addb
cmpb
loope
jne
test
test
sub
je
rcl
mov
ss
stos
push
inc
jbe
test
ss
mov
push
repnz
sbb
jge
adc
xchg
xchg
punpcklbw
sti
aaa
mov
clc
daa
addr16
aaa
xor
add
popa
dec
xchg
mov
pop
je
repz
mov
test
ja
xchg
jae
jg
pop
dec
inc
test
or
xchg
cmp
loopne
sbb
je
sub
repnz
aas
push
orb
das
fidivrl
cmpsb
jns
scas
inc
int
hlt
xor
nop
jno
sbb
cmp
or
xchg
dec
push
dec
inc
lock
cmpsl
jl
gs
movsb
es
lahf
test
pop
gs
sub
movb
mov
and
negb
adc
test
add
cwtl
push
and
mov
icebp
cli
add
pushf
fwait
inc
adc
cmp
ja
mov
mov
das
test
mov
int
cmpsb
xchg
je
clts
into
das
subl
cwtl
xor
icebp
xor
jae
jnp
mov
xchg
jae
mov
push
xlat
push
dec
or
dec
pushf
jns
cmp
adc
xchg
xchg
mov
pushf
xchg
mov
adc
push
push
or
mov
rolb
xchg
pusha
mov
jle
adc
xchg
bound
in
lock
lods
xor
fcompl
and
push
ds
jg
jns
cmpsb
pop
mov
push
pop
dec
mov
sub
mov
jmp
push
sub
ret
add
xlat
jl
mov
mov
in
sub
in
mov
hlt
subb
cmp
inc
push
fucompp
aad
inc
pop
mov
dec
out
ss
pop
cltd
inc
nop
cmpb
push
jae
and
je
jno
xchg
decl
cmpsb
push
push
std
adc
insb
dec
pushf
subl
in
loope
dec
inc
cmp
and
incb
in
pusha
cmp
aas
inc
xor
adc
das
jnp
cmp
loop
imul
mov
cmp
adc
lret
lret
mov
lea
mov
icebp
ja
addr16
dec
fwait
mov
sub
iret
fdivrl
push
out
adc
out
cli
sub
cmp
jg
lret
add
xchg
test
xor
jge
movsl
cmp
sbb
push
push
push
mov
push
xchg
push
imul
add
inc
leave
dec
aas
int3
mov
and
and
adc
jbe
lret
ljmp
inc
mov
cmp
xor
popa
popf
decl
mov
adc
bound
dec
sbb
cmp
loopnew
shlb
xchg
ja
popf
adc
xchg
jnp
test
jp
je
and
enter
test
push
pop
pop
gs
outsb
push
xor
stos
cwtl
push
cmpsb
lea
scas
sub
xor
dec
push
es
loop
dec
xor
push
adc
mov
xchg
push
mov
rorl
ret
scas
and
fldt
clc
loop
lods
push
lret
test
xchg
and
sbb
add
mov
inc
jne
pop
cmpsl
in
ss
mov
dec
jge
push
xor
test
and
lcall
jg
xchg
adc
sbb
ds
pop
and
scas
bound
ret
add
inc
add
daa
mov
sbbb
ljmp
jbe
fwait
mov
sbb
dec
or
mov
movsb
adc
xor
testb
and
adcl
dec
sbb
scas
cmpsb
sbb
enter
push
imulb
test
test
lret
std
jg
shll
xchg
cmp
mov
movsb
add
jmp
nop
jb
xchg
mov
jle
xor
gs
inc
inc
or
mov
sahf
jbe
push
inc
xchg
daa
mov
add
inc
mov
in
pop
adc
mov
insl
dec
mov
mov
mov
pop
cwtl
pushf
pop
lock
ja
nop
sbb
jp
ss
aad
out
xchg
fcomi
fnstsw
cwtl
xchg
jo
mov
and
lods
adc
sub
lahf
cmp
stos
xchg
sahf
gs
push
clc
lods
adc
or
nop
lods
ljmp
xchg
outsb
adc
xor
leave
xor
cmpsl
mov
mov
pushf
and
push
cmp
inc
sub
loope
jp
not
inc
and
popa
xor
leave
lahf
loope
sbb
inc
push
cwtl
decb
hlt
data16
inc
jg
push
mov
fs
ret
mov
testb
adc
push
push
mov
inc
sub
jns
mov
ror
pop
adc
mov
aas
mov
xchg
jp
jge
xchg
jne
cli
mov
mov
and
mov
flds
jne
or
push
mov
mov
in
dec
insb
jne
cltd
adc
dec
jle
in
mov
scas
cmp
push
pop
dec
sbb
add
adc
sbb
jb
leave
daa
pop
pop
insl
jae
dec
pop
sti
insl
jmp
xchg
dec
mov
mov
fildll
xor
lahf
cwtl
cmp
test
out
stc
mov
mov
jb
push
dec
aad
repz
xor
lahf
push
nop
push
rorl
mov
and
pushf
ss
leave
fcmovbe
jge
xchg
test
idiv
aas
arpl
ds
pop
mov
movsl
pop
add
in
movsb
xlat
push
cmp
ljmp
cs
sub
add
sub
aad
les
iret
stos
fcmovnu
pusha
lcall
cwtl
insb
hlt
cmp
flds
dec
and
xchg
adc
outsl
lods
adc
sbbb
mov
lock
xor
add
dec
push
rcl
aad
mov
jbe
es
outsb
pop
popa
lcall
dec
cmpl
int
data16
push
adc
rcll
orb
out
cli
push
mov
scas
mov
orb
ja
gs
ljmp
mov
outsl
jecxz
in
rorb
xor
push
lds
pop
aam
shll
pop
aad
add
cwtl
outsl
lock
aam
inc
std
pusha
nop
lock
or
std
add
adc
outsl
mov
loopne
mov
xor
inc
xchg
mov
mov
into
in
and
mov
mov
stos
out
xchg
iret
cwtl
xchg
mov
mov
jnp
movsl
call
xlat
addb
adc
nop
sbb
jae
ljmp
jl
daa
js
ja
adc
in
scas
mov
push
pop
into
sbb
out
jmp
sti
pop
cmp
cmpsl
sbb
out
sbb
sub
xchg
stc
pop
adc
sub
sbb
jns
aaa
sbb
xorl
dec
mov
sbb
mov
xor
jb
or
push
and
cli
cmp
test
add
cltd
jle
movsl
rcr
inc
add
and
pushf
dec
out
push
sbb
xor
popf
mov
jecxz
scas
shrb
adcb
cmp
or
iret
movsl
xlat
clc
roll
pop
out
or
in
fcomi
sub
arpl
jecxz
jnp
in
leave
jae
nop
insb
jecxz
xchg
test
jnp
aas
adc
jns
inc
cmp
mov
add
push
add
movsb
test
fwait
dec
sub
inc
call
cmp
int
lods
xchg
mov
inc
add
das
out
push
iret
ficomps
mov
test
add
pop
inc
dec
and
push
mov
sti
clc
add
sbb
cmp
cmpsl
and
sahf
out
addr16
adc
sar
fstpt
mov
dec
jbe
std
lcall
adc
addr16
xor
rcrl
cmp
jno
pop
or
or
mov
add
loopne
in
pop
insl
in
mov
cwtl
lea
adc
jecxz
fiadds
aam
jp
aam
and
jle
add
roll
dec
shl
inc
jae
arpl
adc
jle
mov
out
push
mov
js
gs
push
cmp
jmp
in
cmp
shrb
xchg
dec
push
xchg
sbb
sbb
mov
xor
notb
or
push
loope
nop
push
es
roll
mov
scas
lret
ret
jl
iret
jnp
mov
sbb
dec
inc
or
cmpb
sub
iret
fisttps
xchg
jbe
jnp
ds
mov
cmc
inc
lcall
mov
dec
insb
or
mov
pop
js
andl
push
mov
adc
cmpsl
movsb
sti
fs
gs
mov
pushl
ss
mov
cltd
lds
arpl
in
push
mov
jge
jge
cmp
push
mov
decl
push
add
xlat
and
mov
sti
adcl
adc
pusha
stos
cmp
xlat
and
fildl
out
sub
fistpl
and
in
mov
pop
or
mov
mov
fnstsw
iret
shlb
pop
hlt
pop
out
fisttps
pop
mov
push
and
lods
ljmp
mov
sub
jae
lea
lods
mov
lahf
aas
fildl
dec
stos
mov
cld
out
int
xchg
mov
imul
jl
dec
sub
repz
lea
mov
imulb
daa
mov
shr
popa
mov
rol
dec
std
inc
cmp
dec
jb
out
pop
stos
xchg
mov
outsl
scas
inc
cli
xchg
shll
xor
lcall
jge
mov
das
adc
xor
sub
jae
push
loope
jo
lahf
pop
pop
sub
xchg
call
pop
mov
dec
lret
movsb
push
div
arpl
sub
arpl
xchg
lds
std
frstor
sub
pop
inc
jno
insl
test
jle
repnz
xchg
into
jbe
xor
and
and
cmpl
push
mov
fwait
mov
add
lcall
dec
push
repz
insl
test
stos
mov
mov
cmpsl
bound
imul
cmp
int3
dec
int3
sarl
aaa
pop
cld
jl
sbb
sarl
mov
ja
pop
xor
sbb
loop
cmp
push
push
push
pusha
ficomps
sbb
fdivs
sbb
movsl
mov
aaa
imul
int3
jecxz
imul
pop
insb
sbb
push
cld
jns
enter
and
pusha
xor
inc
aaa
or
mov
das
jno
cmp
out
sti
xor
daa
dec
dec
xchg
push
xchg
iret
fwait
icebp
pop
inc
pushf
das
imul
dec
repz
pop
mov
and
or
lret
pop
mov
mov
movsb
and
mov
in
cmp
lods
fwait
adc
adc
and
scas
pop
fildll
sub
fidivrs
pushf
mov
push
mov
imul
enter
test
mov
fsts
xor
jne
popf
sahf
shlb
mov
out
dec
pop
adc
stos
sub
out
in
xchg
jmp
arpl
push
cmc
arpl
lahf
mov
mov
cwtl
inc
rol
push
or
adc
push
fimull
lods
jbe
js
je
or
or
and
cmp
push
sbb
lock
movsl
popf
fs
into
dec
in
ja
lock
pushl
xor
adc
dec
jmp
xchg
jg
scas
das
outsb
cmp
ror
cld
leave
jecxz
mov
decb
jo
and
lods
mov
dec
xchg
sub
daa
call
xchg
decl
sub
inc
aam
inc
loope
inc
mov
cmpb
addr16
rorl
pop
push
mov
mov
call
add
push
mov
fisttpl
jle
jb
fst
pop
inc
aam
pop
lahf
std
imul
adc
lret
fiadds
cld
nop
mov
xlat
movsl
loopne
ret
test
ret
jl
and
cmpl
loope
aas
dec
int
mov
fs
test
lret
pop
popf
pushf
pop
movaps
in
sar
mov
mov
ror
sub
xor
sbb
fcmovnu
pop
push
cmpl
push
std
pop
or
cltd
jle
xor
out
dec
inc
bound
adc
test
jnp
jne
stos
lcall
mov
cltd
cmc
and
test
push
inc
push
push
ficoms
insl
rolb
hlt
ret
mov
insl
fdivs
addr16
ljmp
add
ds
jo
pop
jcxz
or
in
fdivrp
ljmp
xchg
subl
inc
pop
xchg
mov
lea
push
test
sub
dec
fdiv
in
repnz
aam
xor
xor
sbbl
jge
add
scas
out
and
mov
adc
rorl
inc
stos
or
cmp
push
and
stc
sub
mov
push
call
jmp
mov
call
push
js
and
sarl
or
nop
sbb
es
ja
bound
jbe
adc
andb
xchg
xor
mov
repnz
mov
mov
lcall
and
int
adc
push
stos
test
push
sub
push
mov
sub
xchg
insl
fildll
mov
jne
fildl
test
cmc
enter
mov
out
sub
test
push
ljmp
mov
cli
orb
xchg
adc
les
inc
jg
mov
mov
aad
mov
push
xor
mov
jae
push
test
outsb
lods
int3
std
shrl
jg
mov
les
xor
sub
popa
les
add
jbe
mov
add
mov
xchg
push
movl
hlt
sub
sbb
pusha
pop
mov
int3
jne
adc
cld
mov
pop
jge
mov
xor
pop
les
add
mov
cwtl
sub
mov
push
xor
mov
xchg
mov
pop
popf
mov
push
arpl
xchg
fcmovnb
dec
fstps
mov
leave
inc
negb
jne
xchg
xor
jg
jmp
iret
and
cmp
or
gs
jne
jecxz
cmp
rcl
pop
xchg
xor
cmp
cmpsl
sbb
push
enter
ss
xor
es
xchg
ljmp
fisubrs
das
rorl
sbb
or
adc
mov
movsl
cmpsb
pop
fildll
mov
xchg
lods
cmpsb
das
loopnew
jp
lods
push
std
push
lret
jns
int
out
stos
push
imul
push
fs
sbb
std
dec
test
xchg
lock
xchg
mov
subb
mov
sbb
decb
jb
cld
xchg
inc
mov
stos
inc
lods
mov
mov
orb
jae
adc
sbb
cld
inc
cmp
lods
fwait
lea
out
fstpt
out
and
aad
aas
movl
pop
imull
into
int3
mov
shlb
dec
icebp
lcall
cwtl
sub
mov
mov
push
imul
pop
push
dec
and
mov
imul
movsl
sub
les
add
jge
daa
insl
and
jge
loope
cs
xchg
orl
lods
testb
push
dec
out
push
inc
mov
xor
stos
cmp
or
fisubl
hlt
add
lods
push
out
jbe
mov
ljmp
pop
ljmp
sub
in
mov
push
stos
fidivs
xchg
mov
shlb
inc
or
aas
nop
out
cltd
jne
or
fdivp
inc
mov
fdivrs
popa
lcall
mov
test
lock
inc
push
mov
call
test
in
js
cwtl
ret
push
divl
mov
or
jae
mov
and
jo
and
aas
pop
es
gs
test
or
mov
dec
xchg
hlt
sbb
lods
mov
inc
adc
arpl
out
cmp
ljmp
fdivrl
cmp
jp
cmpsl
sbb
lock
notb
or
pop
lahf
pop
icebp
jo
fstpt
iret
stc
xchg
jo
popa
enter
jno
and
and
xor
aas
sbb
imul
outsb
popa
in
xor
push
push
adc
cmp
rcrb
cmp
inc
xchg
dec
pop
push
cwtl
lret
xchg
pop
and
pop
jle
push
sub
ret
aas
xchg
jecxz
movsl
out
xchg
pop
inc
fdivrl
lcall
mov
xchg
cmp
and
dec
sbb
repnz
lods
sbb
out
cmpsb
clc
popf
sub
fcom
fwait
testb
js
push
xor
pop
stos
jge
out
xor
inc
push
loop
fs
ss
in
jmp
cmp
inc
popf
cltd
mov
fisubl
flds
out
push
add
gs
cmp
loope
cmp
test
ljmp
push
pop
mov
push
imul
push
aad
pop
daa
enter
add
xchg
mov
or
xchg
movsb
aaa
or
jg
sub
out
fdivrs
add
test
or
mov
aaa
stc
in
jp
scas
int
in
movsl
push
or
jmp
xor
add
out
ficomps
jns
arpl
adc
aam
inc
push
cmc
aam
pop
mov
push
or
push
aad
xor
sbb
or
and
push
dec
mov
xor
inc
pop
cmp
push
out
sbb
mov
dec
jge
int
xor
mov
into
inc
adc
in
push
outsb
mov
jne
jecxz
es
xchg
aas
and
mov
popf
je
add
jb
jo
xor
or
into
insl
fimuls
add
lret
jnp
mov
xchg
cmp
jp
je
push
pop
stos
adcl
ljmp
aam
cmpsb
lds
xor
jo
or
jnp
lock
mov
mov
and
out
jnp
filds
mov
mov
lahf
mov
push
stos
xor
add
adc
das
movsl
xor
insb
dec
adc
aam
test
mov
test
mov
imul
pop
xchg
or
das
in
out
jns
sub
add
push
out
push
pop
sbb
mov
xlat
and
jecxz
aaa
push
js
add
shrb
fwait
mov
push
lcall
test
push
xchg
call
mov
xor
pop
fnstenv
mov
push
cmp
mov
sub
xchg
jmp
orb
mov
mov
pop
xchg
jae
and
imul
js
push
and
dec
es
pop
push
ds
inc
push
cmc
xorb
xchg
pop
lods
xor
cwtl
imul
enter
divb
cmc
push
push
mov
mov
xor
stos
xor
cmc
and
and
bound
cs
or
inc
data16
pushf
cltd
in
sbb
outsb
xchg
in
add
cmc
lret
call
pop
les
push
mov
out
sub
ret
xchg
inc
jb
mov
xor
ja
mov
mov
repz
sbb
dec
and
cmp
xchg
ja,pn
outsl
sahf
and
and
std
sarl
xor
std
push
sbb
into
xchg
xchg
ljmp
sbb
repnz
decb
test
call
fs
jne
test
pop
add
imul
adcb
mov
sbb
ds
ret
idivb
mov
or
rorb
dec
sti
xchg
mov
jo
data16
mov
enter
xor
icebp
xor
pop
jo
jb
loop
hlt
jne
pop
loop
sbb
addl
sub
scas
pop
les
xchg
sbb
fimull
addr16
popf
jmp
push
mov
and
int3
and
sub
lds
mov
push
mov
and
negb
jnp
add
and
push
push
je
sahf
mov
add
add
out
push
jns
scas
leave
xchg
mov
add
mov
jns
fcmovne
ret
jbe
cmp
jo
push
and
sub
add
dec
das
xor
inc
aad
sarl
decb
mov
sbb
push
dec
and
daa
or
insl
pop
mov
sub
sub
insb
mov
push
cmp
push
loopne
mov
sub
adc
sbb
mov
adc
jge
rcrb
enter
inc
sbb
insb
mov
scas
roll
mov
mov
and
into
jg
imul
xor
jno
ret
divb
out
cmp
push
out
cmp
push
sbbb
je
push
mov
jno
aad
das
je
jge,pn
shrb
nop
inc
sbb
push
jge
fucom
mov
lcall
or
cs
pop
je
shl
add
pop
clc
add
enter
adc
addr16
nop
push
stc
mov
dec
pop
xchg
std
push
pushf
mov
add
clc
jmp
cld
repnz
cmpsb
aaa
mov
mov
frstpm(287
push
xor
xchg
and
jle
dec
inc
pop
push
cmp
pop
push
jle
add
mov
shl
je
jb
fists
aam
sbb
mov
inc
xchg
enter
shl
cltd
xorb
outsb
dec
outsb
in
cmp
fcomps
add
decl
pop
sub
mov
testb
repz
fsubrs
xor
push
jg
cmp
add
das
pop
imul
xchg
in
les
in
test
lahf
stos
cmp
ss
lds
mov
mov
adc
dec
mov
sub
cmpsl
cwtl
pusha
cwtl
fs
scas
push
push
cmp
sbbb
dec
insb
int3
push
sbb
push
push
stos
fwait
add
lds
dec
mov
mov
mov
xor
sub
xlat
push
inc
int
cmp
add
jmp
xor
lods
pop
jb
xlat
insb
mov
fstp
push
sarl
lret
add
andps
xor
repz
jge
lcall
dec
dec
clc
push
add
jecxz
int
sbb
adc
lret
enter
les
lret
cmp
pop
and
mov
xor
stos
mov
push
jbe
shlb
cld
nop
lret
daa
mov
jb
lea
xchg
loope
mov
and
mov
sub
aas
aam
ja
jg
cmp
mov
or
jecxz
or
add
jmp
push
push
cmp
mov
jg
and
jg
enter
sbb
lret
push
xchg
sbb
mov
jbe
rcrl
icebp
xlat
cmpl
loop
fnstenv
ret
pusha
jbe
fwait
pop
ss
outsl
lcall
add
sbb
xor
xchg
leave
sbb
pushf
lock
pop
dec
jne
sbb
arpl
out
icebp
in
cmpl
or
lea
sahf
inc
mov
xchg
sbb
fldcw
push
in
hlt
or
test
out
frstor
fildl
gs
push
push
scas
iret
ss
outsl
fisubl
mov
xchg
xchg
subb
push
push
int3
movsl
cli
jmp
push
or
adc
or
aam
cld
mov
hlt
pop
jle
mov
dec
sub
xlat
dec
inc
inc
clc
add
lret
push
jl
add
xchg
add
jae
cmp
ds
data16
imul
mov
jmp
lret
jae
popf
or
mov
mov
jne
aaa
pop
jmp
lahf
mov
ret
cmpsl
mov
mov
lret
or
fs
clc
inc
mov
push
add
bound
fstpt
pop
movsb
lods
aaa
fbld
mov
inc
and
sbb
adc
lret
mov
jbe
inc
lret
ss
sbb
mov
shll
xor
arpl
addr16
lds
adc
mov
mov
xchg
adc
pop
xor
ret
clc
imul
push
js
enter
scas
aaa
xor
jae
or
dec
notl
add
aad
test
push
sbb
outsb
dec
fwait
sub
jmp
mov
imul
and
push
or
cltd
xchg
jno
jno
push
clc
out
insb
xor
movsl
dec
xor
addl
inc
cmpb
push
jmpw
add
daa
lock
sub
movsb
lcall
jb
mov
in
push
push
sbbl
adc
push
xlat
jmp
mov
subb
int3
dec
ret
sub
pand
xor
aam
cmp
and
dec
sbb
mov
xchg
jg
in
push
ret
outsl
in
repnz
push
incl
nop
xchg
insb
outsl
push
and
xchg
add
mov
stos
fdivs
inc
mov
mov
out
stc
push
cmc
test
xchg
push
ja
pop
push
data16
xor
sub
shrb
mov
cmp
and
cld
cld
enter
loope
in
ss
add
mov
std
mov
stos
cmpsb
jge
notb
pop
sub
or
xor
decl
roll
das
cs
push
lds
dec
sub
push
scas
cld
jns
call
jmp
fisttpll
int3
add
push
inc
movsl
inc
sub
imul
xor
xor
xlat
add
xchg
cmc
xorl
pop
inc
mov
cli
mov
rol
cmp
sub
hlt
inc
mov
hlt
mov
add
dec
iret
aas
and
sub
sbb
in
cmp
inc
xchg
jns
shll
jp
pop
adc
out
jno
testb
inc
push
xchg
adc
push
or
roll
ror
mov
cld
or
sbb
dec
jmp
in
jl
xor
xchg
rclb
adc
push
les
adc
xor
dec
ret
ret
pop
dec
sbb
inc
ret
lret
xorl
dec
test
addr16
rorb
gs
js
int3
pop
fmul
dec
xor
mov
and
cmpsb
ljmp
xchg
cs
insb
mov
jo
push
jmp
loope
push
mov
or
xor
cs
test
adc
adc
out
loop
movb
cli
xor
fs
sub
movsl
and
sbb
and
mov
push
rolb
push
inc
mov
ret
lock
pop
dec
add
adc
jo
push
fidivrs
jb
outsl
pop
ja
add
push
or
push
arpl
and
sbb
inc
mov
loopne
cmpsb
mov
cmp
adc
or
jne
dec
pop
mov
inc
cmpsb
cmp
test
mov
xlat
push
sbb
cmp
cmp
aam
dec
lahf
mov
ljmp
mov
test
or
mov
arpl
add
adc
daa
mov
in
int3
mov
mov
jbe
imul
jb
ds
xchg
dec
pop
das
fsubr
pop
adc
das
push
push
mov
andb
sub
lock
into
cmpsl
inc
mov
push
sahf
mov
clc
push
xchg
cltd
enter
push
mov
xchg
sub
adc
jne
adc
in
hlt
adc
sub
adc
mov
test
cmp
mov
mov
jp
leave
outsl
sub
jecxz
xchg
push
cmpsl
int
mov
mov
pop
or
fbstp
mov
xor
cltd
inc
imul
inc
fs
mov
stos
xchg
dec
cltd
sub
fiadds
in
test
icebp
ds
call
into
notl
hlt
and
xor
cmp
inc
ret
sub
mov
icebp
add
cmp
pop
sub
pop
les
test
cmpsb
ret
bound
push
inc
inc
pusha
cwtl
or
sti
xor
lods
ss
jg
jae
and
xchg
lods
xor
mov
pop
mov
in
fmuls
mov
inc
in
jb
dec
inc
jo
flds
in
inc
ret
mov
sahf
dec
jecxz
mov
or
les
nop
xchg
sub
xor
xchg
orb
or
sub
fidivrs
insl
leave
xchg
push
out
test
cmp
add
lahf
pop
xchg
adc
mov
in
movsb
stos
or
xor
lret
lds
fldt
sbb
imul
sysret
mov
aaa
add
fmuls
mov
add
adcb
push
lods
jns
dec
insl
imul
out
mov
ret
cmp
pop
push
adc
xor
push
int3
dec
mov
cld
xchg
sub
push
inc
sbb
ror
xchg
insl
push
cs
push
mov
xchg
pop
inc
in
ja
inc
mov
lock
in
outsl
cmp
imul
lock
mov
loopne
bound
mov
jecxz
leave
xor
aam
dec
decl
sbb
data16
insb
mulb
push
xchg
lds
and
push
lods
std
jmp
outsl
sbb
es
inc
and
mov
clc
sahf
sbbl
dec
xor
inc
push
xor
dec
sarl
adc
sub
cmpsb
pop
popa
leave
mov
cmp
out
je
push
push
loope
cld
in
cmpb
sbb
push
push
mov
sarb
push
fistpll
cld
sbb
dec
test
out
mov
pop
std
mov
ja
fists
repnz
mov
and
popf
mov
std
outsb
lds
mov
sahf
pop
xchg
cmpb
stos
mov
out
mov
mov
imul
mov
nop
outsl
mov
sbb
fwait
popf
shll
subb
cmpsl
mov
push
ret
xchg
outsl
jbe
xchg
inc
sbb
add
aaa
scas
lods
pushf
or
in
jbe
scas
mov
add
mov
add
mov
jl
stc
int3
push
adc
or
mov
mov
shrb
inc
add
sub
jbe
mov
dec
cltd
pop
in
add
cmpsb
sbb
dec
lret
push
aaa
stos
mov
fisubl
insl
push
bound
pop
cmpsb
xor
push
movsb
mov
xor
sub
mov
pushf
dec
push
inc
ss
bound
std
pop
cmp
inc
pop
sub
and
sub
subb
and
sub
xchg
mov
xor
mov
lods
js
lods
mov
js
cmpsl
cltd
cld
sbb
xchg
dec
cld
fwait
ret
pusha
imulb
mov
lea
inc
pop
in
rorl
in
idivl
ret
jae
sahf
cmpsb
fwait
call
inc
repz
daa
mov
ret
mov
mov
nop
loop
ss
fs
loop
adc
fimuls
jmp
in
repnz
inc
pop
loopne
stos
sub
nop
jl
scas
jne
faddl
lea
loope
jb
shrl
in
dec
pop
push
lock
outsb
ficompl
test
mov
jbe
in
xchg
lds
adc
aas
xor
pop
sbb
dec
fnstcw
lods
pusha
xlat
mov
ljmp
or
mov
pop
pop
stos
dec
les
jne
jecxz
xor
mov
in
add
adc
insb
and
sahf
or
mov
stos
fwait
mov
ljmp
or
fdivrp
jl
vpmacsdql
fs
outsb
sbb
das
mov
lods
sub
adc
mov
or
pop
push
mov
ss
test
adc
loope
mov
sub
adc
rorb
push
xor
shrl
inc
iret
mov
popf
sbb
nop
pop
out
pusha
out
movsl
mov
fbstp
inc
aad
addr16
out
add
push
dec
pop
movsl
and
inc
xor
loop
inc
push
push
leave
pop
xlat
jg
mov
cld
push
mov
ja
inc
nop
push
ja
popa
sub
and
mov
adc
adc
push
call
pop
test
mov
or
mov
stos
xor
jae
sahf
xor
cli
xor
popa
pop
xor
pop
repz
dec
push
adc
ss
cmp
sub
fs
xchg
mov
jbe
xor
mov
xor
jle
push
call
pop
mov
pop
repnz
nop
pop
sub
jns
inc
xor
push
xor
xor
mov
pop
adc
jge
push
cmp
sbb
pop
lcall
jl
int
xor
xchg
mov
xchg
lret
ret
pop
mov
cmp
sbb
aas
sub
xchg
and
or
add
pop
cwtl
jp
mov
cmp
mov
std
stc
xchg
out
notb
loop
popf
hlt
lock
mov
and
jmp
push
rorb
lahf
add
dec
nop
adc
pusha
std
jecxz
xchg
test
cs
pushf
mov
mov
xor
pushf
leave
fstpt
push
xorb
and
add
xchg
mov
inc
mov
push
pushf
negl
xchg
jle
and
pop
mov
in
sbb
lret
popf
sbb
jbe
movl
pop
pop
imul
testb
cmp
push
fcomp
xor
mov
insl
inc
repnz
push
in
scas
mov
movsb
fcoml
incl
popf
sub
add
int
sti
and
icebp
mov
adc
mov
lock
inc
in
insb
mov
and
psubb
mov
loop
in
cmc
fcomps
push
push
inc
push
roll
pop
xchg
cmp
mov
mov
add
and
or
cmpsl
adc
testb
jl
subb
push
cmp
stc
jb
xor
cwtl
push
push
sub
ficoml
sbb
popf
and
sbb
roll
mov
out
movsl
adc
lret
push
sbb
or
lahf
mov
arpl
adc
mov
pop
xchg
adc
test
push
sub
pop
pop
dec
jae
push
addr16
insl
push
sub
shll
cmp
mov
aaa
fisttpl
jbe
add
push
in
mov
and
mov
fstps
or
int3
lahf
xor
fcomi
stos
push
lret
pop
imul
or
sti
loopne
dec
std
stos
sbb
fldcw
push
dec
stos
pop
add
sbb
jg
adc
xor
pop
pop
mov
fs
jp
pop
mov
cmp
lret
inc
push
pop
into
push
leave
xchg
sbb
pop
lret
sub
repnz
ret
xchg
jg
jl
iret
stos
inc
rorb
imul
pop
bound
adc
inc
jb
hlt
pop
aam
xchg
outsb
push
pop
roll
jl
ror
mov
cmpl
jmp
adc
xchg
hlt
out
jns
sahf
pop
and
daa
ret
dec
cmp
add
fnstsw
or
pushf
out
addr16
into
es
enter
cmpsb
push
aas
repnz
lret
outsl
js
lahf
jmp
sbb
or
or
loop
add
jmp
imul
imul
jmp
clc
xor
out
popf
cld
rcrl
adc
pop
pop
pusha
notb
out
cltd
mov
jne
or
and
jmp
lret
pop
pop
dec
jmp
mov
push
pop
mov
data16
inc
push
dec
test
push
popf
xlat
inc
jns
cmp
repz
inc
popa
nop
inc
dec
adc
je
shl
mov
xchg
icebp
add
aas
add
arpl
pop
xor
push
push
dec
pop
push
push
dec
stc
dec
dec
push
dec
cmp
sub
mov
bound
int
xchg
test
aad
xor
add
and
insb
push
mov
xor
dec
and
inc
popf
fdivl
mov
mov
std
imul
pop
cmp
in
inc
fwait
loop
ja
clc
mov
mov
into
push
fcom
cmp
fistps
or
or
or
xchg
cltd
movsl
mov
repz
decl
stos
sub
push
inc
pop
ja
aas
cmpsb
jno
outsb
cmpl
daa
cmp
mov
loop
mov
mov
popa
in
jle
jns
jge
jmp
jle
adc
cltd
xchg
pop
call
negl
pop
enter
aas
cmp
out
loop
adcl
aam
clc
fsubl
push
or
mov
add
add
xchg
clc
lea
pop
fsubrs
mov
mov
outsb
jo
push
push
or
or
sbb
dec
inc
cmp
in
sub
leave
mov
pop
sarl
inc
xchg
test
cs
jge
rorl
fistps
sti
test
or
mov
movsl
sub
orl
test
shrb
fildll
pop
mull
xchg
lret
xlat
sahf
int
push
shrl
jl
aad
leave
fdivs
inc
loope
gs
ss
dec
cmp
loopne
and
jecxz
mov
dec
pop
jl
imul
add
dec
mov
dec
fdivrl
sbb
shll
mov
lret
xchg
test
in
xchg
lret
jmp
dec
add
mov
xlat
test
insl
cmc
mov
incb
cmc
test
adc
lea
lea
cltd
mov
push
int
cwtl
push
adc
cli
insb
xchg
fisubl
jg
jmp
aas
sar
push
cs
pop
popf
jb
js
nop
movsb
add
cmp
dec
sahf
adc
xor
sarl
mov
out
lahf
adc
pop
xor
pop
push
sub
sbb
xchg
xor
fwait
out
popa
iret
fstpl
or
sti
jecxz
repnz
pop
test
fnstcw
add
test
cmp
add
scas
sbb
mov
sarb
dec
lcall
xor
jecxz
enter
mov
pop
das
adc
scas
std
or
rorl
xchg
cmpsl
mov
sahf
inc
icebp
roll
inc
fwait
push
aas
fildll
push
jno
mov
call
fsub
fucomip
repz
mov
inc
insb
pop
cltd
rcll
loope
pop
call
and
cmp
add
or
sti
lods
pop
out
mov
inc
and
adc
dec
and
inc
std
mov
pop
fidivrs
push
push
and
test
mov
jle
fldt
cmp
push
ds
fldenv
mov
sbb
int
xchg
mov
leave
mov
daa
jae
ficomps
push
cwtl
xchg
sub
inc
out
fistpl
jp
sahf
in
dec
inc
dec
push
clc
xchg
add
mov
jns
loope
mov
aaa
cwtl
fistpll
es
decl
ret
dec
xor
jae
mov
mov
inc
add
mov
and
inc
outsl
in
jae
lret
xchg
scas
cmp
jmp
sub
mov
cltd
xchg
cmpsl
mov
rclb
sub
pop
sbb
out
push
push
fdivr
test
jns
mov
lods
cmp
sbb
pushf
les
mov
push
stos
out
popa
sbb
jnp
ljmp
aaa
mov
loop
jb
pop
aam
adc
mov
mov
push
sbb
loope
mov
mov
and
sub
jne
mov
call
mov
repnz
popa
stc
mov
pop
xor
ret
dec
sbb
loope
dec
inc
dec
inc
roll
or
lahf
inc
out
sub
test
repnz
out
in
lret
and
jns
ret
clc
das
mov
jbe
sub
std
dec
mov
pop
ss
jp
pop
incb
stc
push
sbb
mov
pop
fwait
push
repz
mov
insl
and
cmp
mov
pop
mov
jb
sbb
stos
aaa
in
ss
outsl
jne
mov
mov
inc
push
iret
adc
repnz
sub
test
mov
outsl
pop
xor
cli
sbb
test
in
mov
mov
xor
mov
sahf
inc
xchg
cwtl
sti
arpl
cli
out
push
inc
test
lods
cld
inc
mov
pop
fs
rorl
xor
mov
test
sbbl
pop
popf
cmp
ret
sbb
adc
imul
cmc
call
jne
or
jno
add
jecxz
addb
and
pop
adc
sub
or
ljmp
sub
imul
or
in
stos
jp
data16
dec
adc
ret
sbb
pop
jmp
dec
jmp
dec
in
xor
out
fs
jbe
inc
fists
xor
mov
mov
pop
pop
pop
mov
leave
pop
jmp
jno
add
andl
jns
adc
repz
inc
orl
cmp
mov
movsb
inc
xchg
mov
out
and
add
gs
add
jmp
dec
xchg
imul
shr
gs
dec
sti
xchg
pop
mov
data16
jne
out
arpl
or
lret
cmp
in
insl
test
dec
sub
enter
in
xchg
imul
stos
loope
arpl
pop
jecxz
repz
ss
cvtdq2ps
rolb
daa
push
sub
xchg
mov
pop
loop
xor
imul
lods
dec
mov
lret
mov
pop
mov
push
sbb
movsl
test
jns
jp
jne
aad
mov
push
int3
fiadds
insb
push
xor
and
xchg
jae
jge
mov
lock
addr16
lahf
cwtl
or
mov
jbe
stos
jmp
mov
fcomi
imul
filds
cmp
or
xchg
xchg
xchg
xchg
push
test
xchg
and
pop
jns
inc
shrl
test
push
das
inc
out
push
xor
test
mov
in
xlat
in
arpl
jmp
shlb
in
or
mov
and
push
test
xor
ss
shrb
dec
loopne
jns
dec
dec
push
dec
inc
dec
dec
jbe
je
int3
pop
pop
sub
jp
sahf
jmp
xchg
jns
jmp
xchg
jns
stos
adc
push
pusha
fidivs
jmp
sbb
add
call
sub
inc
xchg
jns
jmp
xchg
jns
jmp
xchg
jns
jmp
xchg
jns
das
xor
pop
fcmovbe
xor
jnp
bound
mov
push
jmp
xchg
jns
jmp
xchg
jns
jmp
xchg
jns
jmp
xchg
jns
jmp
xchg
jns
jmp
xchg
jns
jmp
xchg
jns
jmp
xchg
jns
jmp
xchg
jns
jmp
xchg
jns
jmp
xchg
jns
jmp
xchg
jns
jmp
xchg
jns
jmp
xchg
jns
jmp
xchg
jns
jmp
xchg
jns
jmp
xchg
jns
jmp
xchg
jns
jmp
xchg
jns
jmp
xchg
jns
jmp
xchg
jns
jmp
xchg
jns
jmp
xchg
jns
jmp
xchg
jns
jmp
xchg
jns
jmp
xchg
jns
jmp
xchg
jns
jmp
xchg
jns
jmp
xchg
jns
jmp
xchg
jns
jmp
xchg
jns
jmp
xchg
jns
push
movq
sbb
ficompl
