call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
sti
ficompl
mov
mov
stos
mov
es
push
dec
push
outsb
jae
data16
ds
cs
incb
mov
mov
es
cmp
outsb
jbe
add
push
ds
cs
js
or
fs
cwtl
out
scas
cli
mov
pushf
ss
dec
insl
jo
addr16
dec
cmp
dec
xor
shrb
mov
outsl
add
cmp
test
shll
or
cmpsb
mov
add
mov
repz
push
xlat
mov
arpl
mov
xchg
xchg
cmpsl
push
push
jle
xchg
ja
dec
cmc
jbe
fstps
jg
nop
mov
jmp
movsl
ljmp
jmp
shr
testl
jne
push
cmp
addl
push
xor
pop
xor
inc
adc
lods
gs
xchg
jg
push
idivb
sbb
sahf
add
sbb
insl
xor
imul
aas
scas
into
or
push
add
jbe
dec
adc
push
inc
test
out
xchg
mov
out
negb
jle
les
out
jl
push
push
and
push
and
mov
cwtl
cmp
jmp
inc
pop
pop
or
dec
add
cwtl
cs
lea
lahf
int3
xchg
mov
aas
cmp
push
add
pop
pop
pop
les
movl
ss
es
push
jle
outsb
jbe
pushw
push
ds
cs
cmpsb
into
xchg
incb
mov
mov
es
push
jle
outsb
jbe
pushw
push
ds
cs
bound
mov
pop
mov
xor
out
fsqrt
loop
cmc
mov
data16
xor
shll
fwait
dec
push
xor
divl
sub
mov
add
xor
mov
and
pushf
imul
in
fisttpl
out
sub
mov
mov
inc
jecxz
int
inc
test
push
cmp
jae
js
dec
mov
xor
shlb
sbbl
mov
jb
inc
xor
mov
push
mov
es
mov
xchg
cmc
dec
sub
xchg
repnz
fcoml
icebp
dec
mov
mov
stc
imul
inc
xchg
cmp
stos
sbb
push
mov
push
cmp
push
js
or
sub
lcall
ret
mov
lock
push
or
xor
insl
xor
aam
mov
in
mov
dec
fistpll
pop
push
sbb
jp
cmp
mov
into
inc
or
mov
daa
pop
inc
lock
in
cwtl
mov
out
or
sti
pusha
and
pop
scas
push
push
xchg
andl
mov
lcall
sbb
sub
lea
gs
bswap
cmp
xchg
out
mov
sbb
ljmp
jae
xor
pop
aas
mov
adc
sub
inc
nop
push
xor
repnz
lods
sbb
jae
pop
mov
and
mov
lods
loop
xchg
cmpsb
out
js
mov
bound
stos
dec
in
push
xchg
jns
jg
cmpl
shll
test
out
enter
mov
out
and
call
es
xchg
pop
mov
adc
push
mov
test
sbb
movsl
lcall
xchg
flds
mov
sbbb
pop
pop
mov
loop
repz
adc
jmp
movl
hlt
xchg
in
movsb
icebp
rcll
adc
popf
ljmp
pop
pusha
call
xor
xor
js
pop
mov
movsl
outsl
mov
dec
scas
dec
test
jp
dec
dec
jb
outsb
fwait
mov
aaa
stc
inc
movsl
inc
pop
push
int
xchg
jae
push
sahf
ja
mov
sub
sub
in
cmpsl
mov
jo
leave
gs
mov
pop
cmp
imul
insl
push
dec
int3
enter
jno
mov
loope
lods
sub
lods
mov
ret
test
xor
sti
movsb
add
cmp
jb
pop
shlb
jo
dec
mov
int
push
cmpsb
sub
and
mov
mov
cmpsl
sub
adc
inc
fndisi(8087
sbb
xchg
shll
mov
cli
popa
lock
mov
pop
ret
inc
ret
arpl
in
sbb
cmpsl
push
inc
adc
cmp
mov
add
push
push
test
scas
daa
iret
lret
pushf
or
dec
mov
mov
nop
mov
fmuls
aad
jg
sub
push
fdivl
adc
shll
push
xor
or
sub
mov
inc
mov
lock
mov
repnz
sub
mov
sub
and
ds
subl
outsl
pusha
push
jb
daa
sbb
push
gs
push
push
jg
add
mov
cmp
shll
mov
sbb
int
mov
xchg
sbb
dec
push
fistpll
sbb
mov
push
fstps
mov
out
inc
in
jo
sub
inc
or
aas
int
call
jge
and
jnp
push
neg
or
xchg
and
test
pop
rorl
subb
or
push
xor
push
out
out
sbb
fwait
sbb
pop
lea
adc
std
into
jb
pusha
xor
std
sbb
cmpb
xor
and
xchg
dec
fsub
jbe
popa
ret
test
sti
mov
or
stc
mov
sub
mov
les
int
and
sbb
mov
orb
push
and
inc
pop
std
popf
inc
and
in
jnp
in
aaa
jnp
or
xor
jg
jle
or
mov
add
jno
add
sub
dec
cltd
mov
dec
fnop
andl
pop
pop
and
inc
inc
push
cmp
insb
pushf
popf
mov
das
mov
fildll
inc
mov
jp
loopne
mov
and
mov
or
mov
shll
cltd
mov
fisubl
mov
sub
fdivrl
adc
mov
sbb
bound
fcoms
cmpsb
cmpsw
cmp
shrb
xchg
mov
mov
cmpsl
dec
jg
orl
mov
cmp
jns
test
sub
outsl
ss
push
fcoms
xchg
ja
adc
hlt
test
adc
les
lods
es
xlat
and
mov
push
jnp
cmp
inc
mov
fisttps
aad
sarb
cmp
and
jg
xchg
mov
jl
enter
faddl
stos
add
pushf
mov
pop
mov
test
push
and
xor
and
jp
ljmp
fdivrl
mov
cltd
add
rcrl
movsb
decb
adc
divb
mov
inc
pop
and
repz
and
push
inc
mov
test
xor
push
pop
jns
and
icebp
push
lahf
rcll
xlat
ds
xor
cmp
repz
pop
cld
inc
mov
dec
push
or
adc
data16
in
lods
xor
jl
ljmp
mov
dec
pusha
jae
nop
loop
mov
mov
std
inc
arpl
enter
or
jp
cmp
and
out
xor
push
scas
push
xchg
pushf
inc
push
xlat
xchg
push
and
scas
sbb
stos
pop
mov
fsubrp
imull
sbb
stos
mov
inc
sub
lret
push
xchg
test
mov
notb
and
les
stos
in
ret
and
repnz
lret
and
cld
ss
sbb
sbb
shrb
loopne
fidivl
lea
sbb
and
mov
or
jle
dec
dec
add
fs
or
jae
inc
or
jns
xorl
inc
enter
adc
in
inc
mov
insb
add
sub
in
pop
in
lea
cs
insl
les
imul
aaa
stc
xlat
and
adc
fs
inc
mov
pop
test
adcb
mov
ja
lret
jae
xchg
xchg
push
and
mov
lret
mov
adc
dec
mov
jl
sub
mov
xchg
inc
les
lods
xchg
xchg
mov
adcb
mov
mov
sahf
push
mov
loopne
test
xor
jo
sbb
push
ret
add
pop
push
or
pop
inc
jg
push
pop
fwait
loopne
jbe
jmp
es
repnz
into
xor
test
mov
loopne
xchg
aad
sbb
hlt
or
sbb
nop
push
dec
xchg
and
aaa
scas
or
aas
jp,pt
cmp
inc
inc
js
adc
xor
gs
cmp
mov
adc
dec
and
mov
incb
stos
push
cltd
sbb
lods
jl
ret
add
xor
sub
dec
jl
inc
pop
orb
jmp
xchg
test
loop
sarl
jno
jae
es
jle
push
pop
xor
test
lret
and
add
clc
jecxz
xchg
test
jo
outsl
jbe
ljmp
xor
stos
push
stc
xlat
ret
pop
sti
cli
les
cmp
jg
cmc
pushf
cltd
pop
dec
and
loopne
jae
je
xchg
jns
nop
loopne
push
gs
test
jle
aaa
cmp
loop
mov
mov
jmp
loopne
testl
push
sbb
jg
xor
jbe
pop
popf
inc
pop
mov
jns
in
popf
mov
push
dec
out
leave
insl
add
cmp
fdivl
sahf
lods
call
mov
cmpsb
test
iret
xlat
jge
mov
daa
in
jecxz
sub
mov
faddl
es
or
adc
insb
push
add
lods
inc
sub
lods
xor
push
sub
adc
mov
mov
lods
movsl
popl
xchg
pop
popa
jecxz
sub
incb
cli
sbb
fcmovne
jb
and
stos
cs
shlb
or
js
and
in
sbb
je
jb
sbbb
jp
xchg
mov
rorb
dec
mov
jbe
adc
mov
mov
and
call
or
out
jnp
dec
lock
scas
lods
sbb
or
xor
push
mov
lret
sub
int
aaa
mov
outsl
cmc
or
or
cs
inc
push
cwtl
sar
mov
int
sbb
adc
cmp
adc
sti
out
mov
sarb
add
sbb
hlt
icebp
das
xchg
cmp
dec
mov
mulb
insb
lea
popa
js
mov
insb
loopne
push
lds
mov
cwtl
ficompl
sbb
cmpsl
xchg
push
ljmp
pop
xchg
pop
sbb
dec
push
aaa
lret
cwtl
xchg
insl
push
xchg
inc
jl
bound
movsb
pop
add
daa
setns
pop
aas
andl
leave
int3
xchg
call
inc
pop
jg
ss
dec
leave
inc
fldt
jne
lea
xchg
inc
popf
xchg
int
sbb
mov
cmc
sub
fildll
xchg
cmp
xchg
mov
aaa
ret
mov
test
mov
sub
fstpt
push
xor
mov
shl
cmp
dec
test
into
outsb
imulb
cltd
into
mov
outsb
and
jno
fiaddl
xchg
push
fdiv
sbb
xchg
lds
outsl
xor
sbb
sahf
in
les
mov
xchg
mov
jno
out
cmpsl
rorb
lea
dec
lock
fistps
mov
push
in
jnp
pop
lods
jo
adc
adc
or
cmp
push
int3
xchg
enter
sbb
xor
adc
mov
lahf
repz
in
lcall
jp
and
divl
test
push
adc
and
repz
and
test
stos
xchg
xor
xorb
and
pop
ja
xchg
int3
mov
or
and
movsl
cmp
lret
shll
sub
xchg
loopne
repz
imul
stos
and
mov
cmc
or
int3
sbbb
cmp
add
xor
shrl
inc
test
or
push
cmpsb
outsb
icebp
aaa
mov
dec
cmp
cmpsl
insb
jno
lcall
fsts
ret
sub
mov
push
xchg
jecxz
push
cmc
inc
or
or
push
inc
xchg
adc
or
pushf
rclb
xor
add
roll
dec
repnz
mov
pop
insl
jle
mov
je
xor
inc
pushf
push
sub
pop
adc
adc
push
xchg
xor
out
jbe
lahf
ret
mov
sbb
bound
lahf
dec
inc
cmp
cmp
or
xchg
fdivrs
mov
xchg
xchg
fwait
jae
lds
mov
loopne
std
mov
nop
stos
data16
adc
int
rcl
daa
cmp
xor
loope
pop
pop
js
clc
in
sahf
hlt
sarb
arpl
xchg
push
sbb
sub
sti
out
out
add
decb
jp
cwtl
inc
arpl
dec
or
das
mov
cs
insb
aaa
jge
xor
das
sub
mov
xchg
movsl
hlt
jmp
mov
cmpsl
in
call
add
mov
imul
mov
pop
xor
gs
imul
lods
mov
inc
mov
inc
add
addr16
mov
adc
iret
in
inc
nop
lds
cld
push
adc
xchg
cmp
in
insl
ror
aaa
outsb
mov
cmp
push
push
outsl
js
inc
inc
out
fsts
repnz
repnz
or
packuswb
ds
in
jecxz
or
pop
test
aad
jns
mov
popa
xor
dec
push
movsl
bound
mov
pop
mov
out
daa
movsb
stc
addb
or
inc
xlat
push
stc
jg
scas
mov
xchg
fnsave
and
je
mov
loopne
xor
fdivrs
call
leave
mov
mov
pop
lret
cli
popf
cmc
bnd
sub
sbb
in
xlat
aad
xchg
repz
jnp
fists
sbb
xor
fwait
dec
sub
xchg
cmc
and
sbb
cli
jge
mov
sub
ret
lret
stos
mov
cmp
xor
add
aad
jl
xchg
out
fwait
lahf
and
ss
mov
ficomps
cld
loope
ret
mov
add
inc
mov
data16
inc
adc
xchg
jns
fstpt
mov
js
addr16
aas
in
dec
lret
adc
js
stc
xorb
mov
ja
lds
nop
cmp
mov
xor
mov
imul
xorl
mov
push
jp
cltd
push
jbe
mov
out
xor
jge
push
jle
and
cltd
pusha
movsl
jp
push
aam
out
insl
push
xor
adc
cli
test
pop
test
call
test
xchg
mov
lds
push
xorb
jge
int3
popa
adc
rolb
pop
dec
ds
movsb
shr
jnp
dec
jbe
fwait
bound
and
fwait
ret
push
pop
daa
adc
mov
adc
aad
and
outsb
inc
push
stos
in
and
lods
shll
sub
lret
cmp
adc
xlat
out
test
les
test
shlb
jmp
in
jmp
jge
jecxz
pushf
add
mov
sar
pushf
mov
clc
stc
jo
xor
imul
outsb
fstl
iret
jno
sbbb
cld
outsb
sti
mov
dec
cmp
cld
not
xor
sub
and
test
pop
cltd
dec
mov
outsb
lock
in
jmp
inc
je
aam
push
pop
fwait
inc
push
sub
and
aad
dec
repnz
xchg
or
xchg
mov
test
jne
pop
cld
xchg
push
in
pushf
sbb
imul
cmp
gs
fwait
mov
xor
and
stos
imul
xchg
data16
inc
call
xchg
stos
test
fcmovbe
or
fwait
xorl
xor
mov
js
and
out
push
sub
pop
js
stos
sahf
inc
testl
lret
mov
lock
dec
movsb
add
xor
or
std
mov
sbb
mov
jmp
push
ror
add
xchg
es
push
stos
fcoms
and
push
addr16
cmp
shll
icebp
cld
idivb
push
jno
cmpsb
adc
xchg
stos
insb
in
mov
pop
jae
movsb
out
inc
jnp
adc
sub
ret
je
in
sub
ja
ds
mov
popf
xchg
lods
test
xchg
sbb
xor
dec
xchg
push
mov
push
scas
mov
lods
out
ds
lods
sbb
xchg
inc
xchg
mov
and
insb
and
sbb
xchg
fstpl
jmp
xchg
fwait
xlat
push
in
and
mov
fcomp
popa
fwait
xchg
loope
jbe
lcall
xor
or
mov
pop
aad
adc
ret
imul
adc
cmp
jp
fwait
push
imul
adc
out
add
dec
push
mov
aaa
or
outsb
pop
add
pop
sarl
stos
push
int
or
movsl
mov
push
push
out
clc
std
dec
sbb
subl
sahf
orb
cmpsb
mov
std
xchg
sbb
push
hlt
ret
stos
out
xchg
mov
jb
stc
sub
push
xchg
sub
insb
aas
nop
aas
push
xor
push
and
sbb
arpl
or
pop
sbb
insb
addr16
lock
sub
movsl
fsubrs
fadds
adcb
stos
push
fwait
test
dec
mov
clc
test
lret
pop
dec
mov
pusha
cmpsb
lea
stos
ss
xlat
jae
iret
xor
adc
mov
mov
mov
shl
pop
push
mov
inc
adc
mov
repz
push
in
cmp
test
lret
sar
aaa
cli
jle
dec
imul
repz
ficomps
push
std
push
ja
fsubr
stc
test
dec
mov
xor
test
test
addl
sub
xchg
andb
loopne
stos
pushf
cmp
popf
sub
mov
and
inc
popf
xchg
out
dec
pop
mov
in
cmpsb
aas
xor
ja
test
ret
jno
loope
lds
adc
fstpl
fdivl
jmp
loope
fnstcw
sbb
jbe
jb
pop
push
test
hlt
aaa
ja
fwait
cwtl
and
sub
call
test
imul
sbb
mov
movsb
cmp
pop
jmp
pop
js
enter
clc
jnp
call
jl
fisubrl
das
data16
jmp
dec
test
xchg
mov
sub
ljmp
xchg
adc
or
xchg
mov
enter
lahf
test
stc
pop
mov
pop
in
and
and
cwtl
sbb
aas
jno
inc
sar
repz
xor
fucom
lret
enterw
jge
sub
roll
xchg
gs
rcrb
and
jge
int
xorb
push
cwtl
test
push
orl
jb
test
pop
je
inc
inc
xchg
pusha
mov
movsb
add
inc
or
add
and
adc
mov
xchg
lahf
xchg
lods
add
mov
xor
jno
insb
mov
lret
mov
das
mov
push
push
jp
rcll
jae
xchg
stos
add
cmpsl
lds
xchg
shr
nop
sub
movsl
dec
pop
imul
or
rcl
and
xchg
inc
mov
push
movsb
sub
fwait
mov
ds
dec
xchg
push
cmpl
ljmp
incl
int3
and
pop
xlat
sahf
js
mov
enter
jmp
inc
push
push
das
lahf
push
in
jnp
ret
in
adcb
lea
jle
aas
dec
adc
scas
ss
pushf
adc
sahf
xchg
ficomps
pop
test
mov
outsl
jb
jb
mov
push
outsl
jo
sbb
pusha
enter
stc
cli
out
stos
arpl
or
push
pop
push
pushf
loope
shr
repz
sti
jo
lds
cld
aaa
mov
js
xlat
fs
mov
imul
inc
pop
fiadds
jb
xor
clc
data16
int3
xor
lret
push
push
sbbb
leave
adc
stos
xchg
mov
js
inc
push
lret
push
mov
call
jecxz
inc
pop
push
outsl
cmc
dec
inc
adc
jecxz
fldcw
es
xlat
cs
js
sub
ss
and
sub
add
jecxz
in
xor
push
vsubps
mov
push
mov
xchg
pop
cmp
xor
mov
mov
push
push
add
add
nop
sbb
cmpsb
incb
jle
into
xchg
mov
xor
movq
jb
dec
sub
inc
sub
mov
add
push
hlt
ljmp
mov
push
xchg
std
cld
data16
push
ficomps
mov
leave
push
popa
orb
shlb
roll
ds
aad
in
or
ja
aas
pop
movsb
andl
lds
sub
mov
les
xchg
mov
movsl
les
movsb
or
sarb
lds
jl
imul
mov
mov
test
mov
lret
sbb
repz
add
xchg
fs
sub
popf
fbld
cltd
insl
lcall
or
sbb
call
mov
outsb
mov
outsl
aad
inc
mov
and
je
pop
stc
jl
xchg
fwait
scas
pop
int3
repnz
hlt
mov
cmp
add
imul
lock
daa
pop
sbb
cmp
loopne
jo
sub
cmpsl
scas
dec
shlb
xor
mov
jns
lret
xchg
xchg
aad
adc
xchg
xchg
xlat
dec
hlt
subb
outsb
mov
arpl
xchg
cltd
out
mov
pop
mov
push
out
xchg
lds
adc
or
adc
sbb
cmp
dec
repnz
lds
stos
mov
sbb
mov
popa
jecxz
cli
sbb
xor
stos
aas
ret
push
imull
cmpsb
dec
push
adc
or
push
xchg
adc
or
data16
mov
rorl
lcall
out
negb
scas
ss
es
push
jle
outsb
jbe
pushw
push
ds
cs
cmpsb
into
xchg
incb
mov
mov
es
push
jle
outsb
jbe
pushw
push
ds
cs
movsl
rolb
loop
mov
es
pop
jle
addr16
jg
push
aaa
jbe
scas
cmp
scas
negb
inc
outsb
mov
push
sbb
data16
jbe
inc
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
icebp
aad
vpmaddwd
in
xchg
movsl
in
mov
push
jne
xor
add
and
loope
shl
shl
xchg
mov
shlb
inc
push
je
xor
add
icebp
aad
vpmaddwd
in
xchg
mov
movsl
jno
inc
and
and
xor
pop
push
push
push
mov
cmpsb
test
mov
mov
mov
pop
cs
cs
lret
sbb
lahf
cmp
mov
mov
das
int
in
mov
add
inc
lea
push
lds
and
fdivs
pop
outsb
fisubs
push
je
inc
jae
lcall
add
icebp
pop
rclb
loopne
mov
xchg
pop
test
mov
in
mov
popa
add
mov
push
or
dec
push
subl
stos
imul
inc
mov
sbb
jmp
ds
lcall
sub
push
and
mov
add
push
xor
loope
shl
shl
xchg
mov
movsl
jno
popa
inc
push
jne
xor
add
aad
mov
aam
into
icebp
rolb
pop
and
add
mov
pusha
inc
je
jno
xchg
addb
loop
mov
xor
aaa
sub
inc
aaa
jo
xchg
js
imul
loope
xchg
nop
movsb
popf
hlt
cmpsl
mov
movsl
jno
popa
inc
push
jne
xor
add
shl
shl
xchg
mov
movsl
jno
popa
inc
push
jne
xor
add
dec
lcall
shl
inc
ret
pop
outsb
pop
sub
sbb
outsb
sub
xchg
int3
cmp
outsb
lcall
or
fwait
in
pop
out
and
lret
push
sub
inc
mov
aas
fsubs
dec
shll
cmova
pop
sarl
cwtl
pop
je
push
mov
imul
bound
and
push
jb
jecxz
inc
or
mov
sbb
push
xchg
pusha
or
and
ficoml
and
test
call
add
lcall
daa
outsl
mov
add
mov
jg
sbb
stc
loope
jg
sbb
in
jo
popa
pop
inc
insb
loop
sub
add
aaa
cmpb
leave
xor
xchg
pop
ljmp
test
out
dec
dec
iret
mov
mov
shlb
outsb
hlt
out
jne
aam
jbe
cmp
xor
out
lea
ljmp
lcall
lret
outsl
mov
dec
pop
mov
xchg
outsb
pop
addr16
or
hlt
adcl
pop
cmp
pop
push
inc
lret
ret
or
ret
scas
xor
das
fisttpl
dec
mov
outsb
cmpsb
insl
push
test
pushf
pop
std
mov
pushf
cltd
roll
daa
pop
mov
inc
xchg
jge
jge
or
push
mov
cmp
in
add
and
dec
das
pop
fs
xchg
dec
mov
xlat
xor
call
hlt
jecxz
outsl
cld
adc
mov
aaa
mov
cmp
in
add
rcr
imul
lods
lahf
in
mov
popa
inc
call
loop
ret
dec
popf
adc
sub
subl
mov
call
sub
mov
cmp
or
sub
cmp
dec
dec
in
xchg
sbb
test
pusha
or
mov
cld
dec
xchg
mov
cmpsl
adc
stc
dec
adc
push
mov
ja
mov
push
popa
mov
iret
sub
or
add
add
cli
test
jecxz
inc
pop
sahf
inc
dec
lock
outsl
into
hlt
sub
push
pop
jb
push
cmp
mov
aad
outsl
test
mov
into
push
mov
xor
outsl
mov
mov
outsb
mov
sti
xchg
mov
jp
adc
int
ljmp
add
inc
jmp
sbb
js
sbb
scas
mov
adc
xor
je
sub
pusha
jno
lds
sbb
cltd
ss
aad
int
loopne
fadd
or
sub
lret
push
xchg
shl
es
push
mov
test
aam
sbb
jbe
inc
aad
test
xchg
inc
fldl
or
pop
mov
mov
dec
jno
jno
inc
pushf
jp
pop
mov
xor
shrb
dec
add
arpl
pushf
popf
mov
mov
push
sub
clc
sbb
and
int
leave
mov
push
shll
sarl
dec
repnz
jns
sti
lods
in
bound
popf
cmp
push
cld
lea
push
das
adc
pop
mov
stos
mov
neg
mov
pop
shrl
push
rcrl
pop
mov
in
or
pushf
pop
aas
jae
sahf
xchg
xlat
aaa
movsb
lods
mov
fsub
sub
xchg
pop
push
insb
mov
xchg
xchg
notl
push
jnp
xchg
in
movl
nop
clc
prefetch
add
pop
add
ljmp
pushf
push
mov
and
inc
int
mov
xchg
xchg
adc
cmp
enter
ja
in
jecxz
jecxz
ds
outsb
cmp
lds
shrl
data16
mov
pushf
insb
out
and
shrb
test
adc
out
xchg
pop
hlt
outsl
mov
mov
in
in
jns
sbb
ljmp
loop
std
push
push
jo
and
adc
xor
push
dec
cmp
cwtl
cmp
scas
mov
push
dec
mov
jns
xchg
movsl
sbb
or
dec
xchg
nop
mov
xchg
insl
lcall
jl
enter
pop
push
lret
insb
popa
jl
mov
lret
push
mov
jns
pop
or
fs
lret
test
test
fidivl
xor
or
xorb
lret
sbb
inc
arpl
shll
icebp
in
add
test
add
ds
or
xchg
lret
out
sti
inc
push
imul
in
add
aam
pop
insl
push
addr16
push
or
call
mov
sub
jae
inc
sti
jne
xchg
sti
notb
sbb
sub
stos
or
out
sub
out
xchg
mov
pop
push
dec
cmp
loop
mov
pop
aam
pusha
jo
pusha
add
mov
in
dec
int
mov
xor
lds
push
inc
mov
pop
push
sub
sub
xor
cld
lock
mov
adc
lds
xchg
pop
daa
test
push
stc
ja
ret
sub
push
std
mov
in
movsl
int3
fidivl
lcall
xchg
out
jnp
mov
mov
dec
popa
xor
sti
or
mov
shl
gs
cs
cmp
sub
pusha
or
push
popf
sahf
fidivrs
gs
movb
fs
and
movsb
pop
sbb
pop
daa
scas
push
push
into
icebp
test
xchg
mov
ret
mov
stos
pop
in
aas
andl
jb
push
pop
ret
jl
cmp
jg,pt
jmp
inc
repnz
cmp
cmp
enter
hlt
out
aad
sbb
dec
divl
cmpsb
aas
push
sub
sbbb
sbb
sub
pop
push
jmp
pop
jl
mov
int
out
sbb
push
std
mov
add
out
jge
in
mov
jecxz
pop
lret
sti
inc
xor
ja
mov
shr
data16
sbb
sbb
pop
arpl
xchg
enter
mov
pop
and
je
fisubrl
insl
subb
mov
imul
push
daa
fcmovnu
inc
sbb
add
push
in
pop
pop
ljmp
clc
in
jns
dec
pop
sti
mov
xor
cwtl
iret
adc
cmp
cld
lods
mov
jmp
cmc
xlat
inc
dec
cwtl
gs
cmp
scas
xchg
xor
insb
es
imul
mov
and
mov
std
mov
pushf
fsubrs
xor
jle
xorl
popa
mov
cltd
add
pop
inc
jnp
scas
les
stos
mov
int3
xor
xchg
sahf
movsl
add
pusha
cmp
shl
push
jp
mov
call
rcrl
dec
cld
aaa
fs
inc
xchg
inc
push
aas
test
pop
mov
test
enter
lahf
cmp
test
push
outsb
outsl
dec
insb
mov
push
sub
and
fidivs
inc
adc
adc
fildll
inc
push
movsl
mov
jecxz
push
in
xor
push
shrb
scas
sbb
cmc
mov
popa
in
pusha
cmp
fsubr
test
roll
xor
mov
je
in
pop
arpl
adc
das
sub
jg
pop
sbb
xchg
sbb
cmp
pop
lcall
fsubp
hlt
lret
mov
into
push
dec
mov
cmpl
nop
pop
fwait
and
inc
divl
inc
dec
mov
adc
add
shl
pop
mov
pop
lret
cmp
sbb
jbe
pop
lds
adc
imul
iret
pop
test
lcall
and
jo
push
ret
clc
outsl
sbb
sub
stc
in
out
jne
mov
xchg
xlat
jbe
aad
test
jae
jge
fisubl
js
loopne
push
out
jno
cmpl
mov
fisubs
jnp
inc
xchg
mov
je
out
movsb
xchg
outsb
out
es
data16
or
and
jo
sub
push
daa
xchg
mov
lds
loope
push
faddl
into
hlt
stos
enter
sub
dec
jnp
mov
test
pop
adc
ljmp
in
jo
or
repnz
aad
scas
insb
push
push
cwtl
cmpsl
add
imulb
mov
out
cwtl
leave
jns
das
sbb
or
je
insb
out
icebp
pushf
test
xor
popa
ret
jge
stc
sbb
push
subl
or
cli
add
mov
push
push
pop
insb
lret
shl
pop
add
test
ljmp
leave
sub
cltd
fcoms
scas
and
icebp
push
lock
fdiv
add
es
lds
sbb
or
or
cmp
aas
fs
test
les
aad
xchg
pop
inc
fs
mov
inc
xchg
jg
xor
dec
stc
mov
shll
mov
pushl
push
pop
rcrb
imul
lret
push
ss
rol
mov
lods
cmp
push
sub
inc
mov
mov
out
out
xor
jnp
add
sbb
push
cmp
in
mov
xchg
add
cmc
adc
mov
int
bt
pop
push
in
dec
sarl
sbb
push
into
push
nop
cmp
and
sub
xorb
out
xchg
lret
cmpsb
push
cmp
scas
faddl
out
lahf
pop
adc
cmpsb
in
int
dec
adc
dec
cli
cltd
push
fsub
pop
mov
inc
mov
leave
jnp
dec
loopne
aam
push
ret
outsb
mov
fldenv
xchg
xchg
add
jbe
cli
int3
out
xchg
inc
arpl
cmp
iret
test
fincstp
sbb
popf
jno
repz
insb
xor
das
out
out
fldenv
inc
add
lods
aam
stc
je
fdiv
cmp
dec
lds
inc
pop
scas
ss
sub
stos
leave
inc
fstpl
test
xchg
cmp
test
cli
ret
pop
push
adc
pushf
es
mov
sub
pop
sbbl
mov
lret
cwtl
dec
rorl
mov
push
mov
sbbb
icebp
ret
adc
cmp
xor
clc
pop
jl
fldl
mov
roll
add
ret
xchg
mov
xchg
mov
mov
gs
stos
push
and
dec
cld
outsb
cld
lahf
push
sub
ja
orb
test
mov
pop
mov
cs
mov
ss
and
out
xchg
in
repz
adc
xchg
push
adc
out
shll
inc
mov
lahf
mov
pop
xor
pop
inc
pop
xchg
stc
jne
add
add
fildl
ret
or
jb
push
xchg
mov
pop
out
jecxz
mov
imul
out
loopne
cwtl
dec
pop
mov
adc
out
dec
shrb
mov
pusha
xchg
bound
mov
ret
cmp
popa
ja
inc
dec
pop
cli
xor
outsb
movl
mov
xor
inc
ljmp
insl
fldt
out
out
push
push
adc
sbb
addr16
push
jb
imul
or
dec
cwtl
or
add
stc
stc
into
mov
xchg
out
mov
insl
xor
mov
xlat
ret
movsb
fistl
into
out
mov
addl
mov
bound
mov
xor
in
lods
jp
xchg
cmp
flds
dec
cmc
enter
mov
jae
mov
push
lea
or
adc
cmp
lods
pop
cmp
ljmp
rcrb
cld
lret
sbb
fnstsw
mov
test
hlt
loope
push
add
pop
cmp
mov
enter
mov
cltd
push
repnz
add
mov
ds
adc
push
subl
ljmp
ret
insb
dec
mov
cmpsb
out
inc
shll
ret
and
ficoms
xchg
insl
jb
insb
movsb
aad
fdivs
rcrb
mov
mov
push
into
and
add
mov
xor
jo
enter
call
mov
and
xchg
je
sub
jno
and
jae
push
js
mov
sbb
test
jmp
push
jle
sub
xlat
iret
jg
mov
mov
insb
nop
or
imul
fcompl
xor
inc
aam
sub
pop
mov
outsl
push
arpl
mov
jl
xor
dec
cld
cmp
aad
into
int
mov
jl
xchg
add
inc
jl
or
fmul
pop
movsb
cmc
pop
flds
repnz
inc
xor
lret
dec
pop
lock
movsb
pop
in
inc
sub
fcmovne
lcall
cmp
or
adc
inc
iret
aam
or
enter
addr16
stc
sbbb
mull
in
mov
icebp
or
jae
dec
sub
loop
mov
jb
pop
scas
or
jns
mov
outsb
inc
ljmp
add
push
data16
lret
push
fnstcw
jne
xor
mov
pop
xchg
inc
gs
and
outsb
xchg
mov
adc
xor
xor
xchg
lcall
fldl
arpl
cli
scas
repnz
sbbb
enter
loop
insl
jnp
mov
out
sbb
loopne
xchg
mov
mov
sub
push
mov
or
add
sbb
push
xchg
shrl
enter
bnd
ss
dec
fwait
js
dec
cmpsb
xor
ljmp
in
and
imulb
xchg
aaa
nop
push
adc
pushf
jle
dec
call
ja
and
xor
sbb
leave
adc
out
inc
stos
std
dec
ja
movups
ficoml
jmp
rcll
das
pop
pop
push
loope
decb
xor
jp
test
add
dec
mov
mov
scas
pushf
stc
xchg
fwait
and
push
fnstsw
jmp
sbb
loope
popl
aaa
and
pop
mov
inc
incb
dec
dec
sbb
sbb
cld
cltd
adc
inc
into
jecxz
inc
cmp
jmp
stos
and
xor
sub
je
push
cmp
sub
or
sub
dec
dec
lea
push
lock
xchg
fsubl
and
loop
mov
dec
arpl
fs
xor
imul
and
stos
lret
cmpsb
lcall
mov
clc
sbb
mov
insb
mov
mov
ja
lret
adc
dec
push
and
jae
mov
incl
sbb
jno,pn
outsl
mov
stc
inc
ja
mov
in
imul
ret
mov
lret
lahf
dec
or
or
cld
adc
jne
inc
fisttps
lret
push
je
into
outsl
jo
jmp
cli
jne
xchg
xor
jns
xchg
clc
psraw
into
jne
sti
call
add
iret
and
ss
xchg
pop
sub
pop
xor
push
xchg
mov
inc
daa
loope
stos
mov
bound
sbbl
sti
ror
mov
jmp
std
lock
mov
dec
fildll
es
arpl
jle
jmp
incl
popl
in
xlat
lahf
jb
mov
sub
jno
mov
push
pop
ljmp
pop
fdivl
imul
sbb
sbb
sub
adcb
dec
ljmp
pop
rcl
hlt
mov
insl
lret
js
loopne
mov
lea
nop
adc
cli
cmp
pop
lds
mov
testl
dec
ja
inc
add
pop
aas
js
push
cli
mov
std
popa
das
scas
jb
mov
les
stos
ja
int
xor
cmp
add
inc
mov
in
xchg
pop
jg
int
and
adc
shl
cmp
imulb
xor
dec
fstpl
loop
out
push
xchg
scas
shrb
aaa
adc
sarb
popa
adc
and
pop
pop
in
xchg
or
pop
push
dec
fsubr
repz
or
out
inc
imull
dec
xchg
dec
xchg
aaa
add
mov
dec
pop
mov
test
mov
xchg
sbb
push
xor
mov
dec
rorb
sahf
hlt
and
imul
push
iret
je
jno
cmp
pop
out
jl
add
scas
mov
roll
cmpb
pusha
enter
mov
mov
fmuls
movsb
movsb
mov
mov
mov
cmp
jp
pop
fsub
add
add
cwtl
fincstp
cmp
and
mov
cli
ss
and
testb
orl
pop
mov
xor
mov
jae
sbb
cmp
xor
int
fcmovnu
xchg
push
inc
xor
rcrb
lahf
jg
sub
push
push
cmpsl
xor
mov
dec
enter
sbb
lcall
insb
hlt
push
jmp
fcmovnb
or
rclb
adc
data16
xchg
stos
test
jecxz
bound
sbb
dec
jl
and
mov
xchg
loop
push
shr
pop
pop
outsl
adcb
jl
sub
int3
lcall
xor
insl
inc
cltd
test
fnsave
add
das
push
psrlq
dec
out
das
bnd
push
data16
jnp
mov
iret
and
and
movsb
dec
cmp
test
std
and
imulb
shrb
push
cmpsb
ret
or
repnz
jne
ret
jp
jne
xlat
pop
fisubrs
fdivrp
scas
call
adc
push
mov
jae
add
fiadds
or
dec
aam
adc
scas
and
sub
leave
mov
andl
xchg
insl
cli
or
mov
inc
pop
xor
pop
shll
test
mov
xchg
daa
xlat
dec
dec
jbe
and
push
and
lds
ds
sub
mov
mov
add
mov
rolb
adc
adcb
and
xchg
pop
andl
enter
jae
inc
mov
lds
dec
mov
mov
adcb
xlat
push
mov
por
mov
cmpsb
cwtl
jmp
mov
pop
call
lea
cwtl
cld
add
cmp
mov
aaa
mov
fldl
fldt
or
out
dec
push
mulb
push
or
nop
jne
xor
leave
cltd
sti
loope
lea
out
jns
aaa
and
inc
push
mov
out
and
outsl
jne
inc
pop
dec
mov
inc
out
jnp
add
mov
dec
xor
inc
data16
insl
mov
mov
rcrb
std
pop
not
add
cmpsb
insl
fimuls
cli
push
push
fistpl
insb
imul
pop
icebp
movsl
jmp
sub
in
mov
xchg
jmp
cwtl
adc
jo
mov
push
lock
cmp
out
testb
jno
ret
pop
popf
jge
rcl
stos
std
jl
std
sbb
arpl
imul
jge
xchg
imul
mov
inc
test
xchg
imul
movsl
pop
pop
mov
insb
loopne
cmp
inc
sbb
shrb
pop
cli
idivb
mov
jle
in
sbb
repz
mov
clc
xchg
jp
lcall
les
or
lahf
jge
movsl
push
clc
adc
leave
jge
add
test
mov
add
cs
mov
fisttpll
jo
sbb
enter
cltd
pop
call
mov
loop
ds
sbb
xchg
mov
xchg
jmp
je
stos
inc
in
test
add
int
and
loope
cld
out
movsb
xchg
frstor
stc
rol
push
xchg
inc
mov
ror
ficompl
mov
scas
add
pop
mov
icebp
cwtl
scas
or
ljmp
and
mov
hlt
sbb
sub
sub
lret
addl
lds
xor
pop
sbb
das
jge
jmp
movsb
adc
aad
ss
mov
push
frstor
les
push
adc
mov
xor
aas
shrl
les
mov
in
inc
pop
mov
pusha
and
mov
pushf
imul
aas
loop
sub
inc
ds
inc
push
mov
jmp
sti
jp
mov
imul
inc
cwtl
jbe
lret
push
iret
jecxz
shlb
loopne
or
push
testb
fnstsw
inc
les
je
fcomi
cmp
call
orl
mov
cmp
pop
fstps
adc
inc
imul
cwtl
lods
push
cmp
sub
pushf
popa
xor
movsl
push
adc
inc
lea
divl
dec
aas
xlat
pop
xlat
cmp
ja
cmp
repz
in
sbb
inc
xor
imul
xor
mov
xor
jecxz
jb
cmp
loopne
xor
adc
cmp
and
out
cmc
shl
xchg
mov
movsl
jno
popa
inc
push
jne
xor
add
shl
shl
xchg
mov
movsl
jno
popa
inc
push
jne
xor
add
shl
shl
xchg
mov
movsl
jo
popa
inc
push
jne
xor
add
shl
shl
xchg
mov
mov
out
sti
jne
adc
test
ficoml
in
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
mov
out
mov
dec
aaa
test
test
jp
pop
sbb
outsl
jnp
imul
fwait
out
mov
sti
jmp
fldt
sub
outsl
add
sbb
mov
notl
xchg
mov
movsl
and
jl
push
jae
jnp
add
pop
pop
sbb
rolb
std
cwtl
test
jmp
sbb
mov
imul
imull
adc
inc
cmp
push
push
jecxz
aaa
scas
sar
jmp
pop
push
pop
inc
mov
aas
cmc
subb
jnp
pop
fbstp
push
add
mov
pushf
or
insb
dec
aam
and
xchg
cmpsb
pop
das
dec
jp
xchg
mov
lods
add
ljmp
scas
sub
test
imul
dec
and
adc
add
repz
in
mov
orl
mov
fcoml
je
add
jmp
out
les
cmpsb
xor
ds
cmp
pop
sub
mov
fwait
testb
fldt
xor
jbe
data16
jae
inc
xor
into
lods
decb
xchg
ret
lret
fidivrl
and
push
push
sbb
aam
lret
pushf
sti
nop
xchg
jmp
fcmovnu
cwtl
lea
dec
cmp
or
jnp
add
sub
iret
fcomip
mov
mov
fldt
sub
outsl
or
packssdw
pop
das
dec
aas
mov
out
mov
sti
jmp
fldt
sub
outsl
or
packssdw
pop
das
dec
aas
mov
push
mov
fldenv
mov
divl
sub
bound
cmp
sub
shlb
mov
roll
rcrl
dec
and
add
sbb
arpl
dec
mov
stos
imul
add
into
sbb
sbb
xchg
in
inc
ficoms
notb
mov
les
hlt
lcall
lods
lods
inc
xlat
lahf
aaa
or
add
loope
fwait
leave
pop
inc
in
aas
xor
sarb
mov
sti
mov
stc
aam
rcll
daa
jnp
xlat
scas
aaa
stos
dec
pop
faddp
jp
sbb
mov
xor
je
cmc
mov
dec
pushf
repnz
and
mov
xchg
repnz
cmpl
call
mov
mov
and
fiaddl
call
int
jmp
icebp
dec
mov
arpl
repz
ret
and
xchg
xchg
ret
repnz
xchg
mov
cld
ss
push
push
jmp
dec
cmpsb
addb
push
js
jecxz
xchg
insl
loope
add
xchg
push
stos
inc
sub
jne
xchg
ljmp
dec
mov
enter
mov
xchg
add
lret
pop
mov
jmp
add
mov
xchg
push
adc
push
cmpsb
lods
mov
into
sbb
mov
sbb
sbb
jno
lret
and
test
loop
adc
push
adc
xchg
je
jge
iret
push
ret
repz
mov
and
mov
jne
jne
ja
cmp
sub
fstpt
movb
or
push
popa
jno
sub
inc
stos
and
adc
sbb
negb
ja
insl
inc
add
int
nop
push
mov
mov
into
push
fistpll
mov
jmp
and
fdivrs
daa
xchg
mov
mov
sub
xchg
sbb
clc
movsl
popa
lea
push
sbb
je
les
cmp
push
in
mov
ret
ret
std
lret
mov
popf
and
sbb
add
iret
in
outsl
iret
imul
adc
fwait
sbb
xor
test
fisttpl
addr16
lea
call
pushf
or
inc
inc
sahf
rcrb
fildll
out
test
xlat
pop
bound
adc
jmp
js
sub
test
hlt
fs
jge
mov
stos
cmpb
cmpsb
jae
and
out
rcll
nop
jns
popa
or
loopne
scas
fidivl
add
sub
data16
out
in
dec
ja
xchg
xlat
cmpsl
xor
hlt
daa
cwtl
out
cld
and
inc
das
aad
push
add
push
xchg
popaw
mov
dec
cmp
mov
negl
jne
out
push
stos
dec
cmp
aad
sbb
jae
outsl
fsubp
xchg
push
push
adcb
mov
sbbl
xchg
fdivrs
mov
mov
add
dec
sbb
mov
in
sbb
lret
imul
inc
insl
les
jecxz
add
test
push
mov
inc
orb
dec
aam
xor
in
jle
pop
mov
add
pop
repz
mov
mov
xchg
xor
lds
ret
jp
aam
adc
push
data16
or
mov
and
stos
adc
xchg
incb
adcl
mov
pop
loopne
pop
adc
cld
xchg
rcr
addl
push
lods
int3
call
sarl
out
xlat
push
lret
or
sub
clc
push
xor
sub
inc
mov
push
ss
xor
inc
pop
adc
jmp
adc
push
pop
push
aas
mov
jmp
xor
jbe
xchg
or
dec
pop
dec
jae
pusha
push
arpl
mov
jecxz
cmp
jno
mov
xor
mov
leave
aad
repnz
subl
cwtl
shrb
push
push
mov
xchg
into
jne
popa
movsb
je
pop
std
cs
arpl
icebp
clc
xchg
enter
addl
fwait
mov
inc
clc
mov
adc
jl
das
loop
ror
add
stos
cltd
jg
aad
cmovp
pop
dec
rcrl
cmc
jb
ss
mov
pop
and
xor
imul
push
push
inc
or
enter
or
insl
cs
cmpsb
add
pop
cmp
pop
mov
dec
and
mov
xor
xor
push
cs
ret
sbb
sub
or
lds
pop
out
adc
in
sub
test
add
sbb
addr16
sub
mov
js
mov
cmp
push
rol
mov
or
inc
mov
adcb
mov
mov
movsl
sbb
pop
sbb
mov
xlat
xchg
in
loopne
sbbl
adc
sub
mov
xor
insl
arpl
xor
in
sbb
cmpl
sub
addb
lock
aad
and
mov
lret
adc
mov
test
pop
mov
cwtl
and
mov
insb
pop
loope
cwtl
sub
cmp
clc
daa
inc
shrl
inc
xchg
lods
fxch
cmpsl
mov
mov
arpl
or
bound
loopne
fsubl
test
stos
push
mov
jbe
pop
fidivs
xchg
cmpsl
stc
cmp
fisttps
or
sbb
xchg
sbb
and
js
shl
inc
add
xor
adc
std
pusha
jno
icebp
push
int
xor
insl
cmpl
dec
mov
dec
mov
or
xchg
adc
mov
aad
and
jmp
addl
jae
push
outsl
pop
adc
jmp
retw
jge
data16
and
sbb
dec
or
push
mov
push
mov
mov
fwait
decb
push
neg
cwtl
cmp
insl
ficoms
sub
mov
mov
push
sub
imul
add
scas
xor
cwtl
mov
lcall
and
les
push
xor
sub
in
push
mov
add
mov
and
xor
and
xor
or
xchg
stos
inc
dec
enter
mov
test
imul
outsl
sbb
mov
roll
imul
addr16
add
movsb
sub
cmp
orl
add
andb
repnz
mov
mov
sti
dec
dec
jge
popa
push
mov
jg
adc
aam
pop
adc
movsl
lods
pop
icebp
popa
lahf
imul
ds
xor
jle
or
fs
in
pop
lea
pop
mov
in
test
jle
int
push
lret
clc
out
lods
lods
decl
mov
xchg
sbb
mov
push
jno
icebp
push
cmp
jg
fisttps
fiadds
mov
out
mov
push
std
sub
add
jne
movsl
adc
mov
inc
mov
arpl
pop
sbb
ret
orb
xchg
jne
sbb
pop
imul
daa
jb
fwait
sub
push
mov
cmpsb
and
push
int3
mov
fwait
rorl
pop
fwait
inc
and
adc
mov
std
loop
lods
or
inc
pop
mov
and
mov
sub
in
and
daa
mov
pop
jns
je
xchg
pop
inc
repnz
jg
cmp
je
and
lds
ja
inc
sub
iret
aad
repz
rorb
or
stos
xchg
jg
sub
mov
stos
adc
xchg
je
inc
mov
push
xor
pop
or
xor
bound
cmp
add
stos
repz
bnd
insl
inc
add
dec
movsl
jnp
mov
mov
addb
pop
and
pop
cmpsb
int3
xchg
cmp
mov
lds
stos
mov
xchg
fldcw
xchg
sbb
jge
into
fdivs
fcmovb
adc
push
sahf
cmp
jb
add
movsb
or
sub
inc
fs
lds
adc
mov
movsl
push
lret
mov
or
sbb
xchg
add
fimull
insb
jge
sbb
movsl
shll
gs
mov
and
adc
cmp
xchg
das
mov
mov
es
stos
stc
inc
cmpl
mov
and
jae
or
mov
rcrl
push
stc
out
dec
inc
and
out
xor
in
mov
and
mov
aad
data16
pop
pop
test
pop
testl
aad
je
mov
inc
inc
jns
xor
add
sbb
iret
adc
in
pop
lahf
mov
dec
push
pop
xchg
movsl
mov
idiv
test
mov
inc
aad
cli
ljmp
rcll
cmp
sti
add
orl
or
push
add
mov
xchg
mov
mov
cmp
subb
fst
subl
add
imul
cld
sti
shr
xchg
insb
cltd
mov
sbb
sub
cmp
in
push
int3
out
sbb
mov
adc
fstpt
jns
sbb
xchg
movsb
cwtl
gs
bound
repnz
cmpsl
xor
cmpsb
jo
mov
xor
sar
fildl
lret
sub
cltd
imul
aaa
add
mov
xor
outsb
jl
mov
scas
jne
inc
test
rorl
orl
nop
cmp
leave
sub
stc
popf
push
adc
push
and
xor
pop
clc
pop
test
cmp
mov
cmp
les
or
int3
shrb
loop
popa
mov
xchg
push
push
lcall
outsb
loopne
fidivrs
in
adc
rcrb
and
inc
push
mov
pop
push
xlat
ljmp
lcall
xlat
mov
in
negb
adc
push
push
mov
and
mull
ds
adc
hlt
mov
out
stc
xor
pushf
mov
mov
push
aad
cmp
or
call
sbb
imul
mov
inc
pop
mov
adc
jmp
inc
ret
fstp
push
sbb
incb
ficoms
jne
or
sbb
aad
sub
push
or
aam
push
jmp
sar
sub
shlb
movsl
jb
sub
divb
dec
out
xlat
pop
mov
jne
inc
aaa
jmp
inc
aas
dec
cwtl
jmp
pop
rol
add
mov
mov
add
in
iret
push
lea
mov
add
jg
pop
test
or
jl
sti
and
add
out
psubsw
ja
fisubrl
add
jge
lods
es
insl
or
sub
jle
cmpsb
lods
xchg
mov
mov
in
in
ja
xor
jno
dec
div
loopne
int3
movsl
push
icebp
xor
jo
cmp
clc
mov
mov
out
hlt
mov
mov
xor
enter
xlat
push
push
or
sub
ret
loopne,pn
jb
or
push
in
idivl
lret
mov
pushf
dec
jp
xor
jne
add
aam
fsubl
cltd
and
std
dec
add
push
or
lcall
jg,pt
sbb
popa
push
push
jae
mov
cmp
push
scas
dec
or
sbb
or
ret
sub
popf
outsb
mov
adc
xchg
movsb
int3
mov
xchg
jle
ja
jecxz
rorb
inc
push
adc
sbb
das
imul
sahf
daa
dec
cmp
adc
punpckhdq
pusha
push
sub
mov
leave
mov
sub
stc
repz
mov
idivl
push
ficomps
popa
push
outsb
scas
and
add
lods
sub
addr16
pop
cmp
aas
enter
cmp
test
in
adc
imul
sarl
insb
pushl
add
inc
movsl
jge
mov
popl
clc
shlb
rol
jecxz
hlt
xchg
shlb
mov
add
shll
test
mov
mov
daa
mov
and
test
mov
call
hlt
xorps
pop
dec
or
je
or
mov
mov
sahf
je
xchg
fsubs
xchg
rorb
dec
sbbb
dec
es
into
adc
adc
lds
popaw
daa
nop
mov
xchg
cltd
dec
fldt
cli
shll
shr
jbe
mov
dec
or
hlt
xchg
pop
loope
mov
push
mov
ss
cli
pop
cmp
xchg
lahf
dec
ftst
lcall
sarb
orl
shll
enter
sbb
icebp
fidivl
icebp
testl
adc
cmpsb
pusha
pushf
ss
add
push
push
mov
jne
jbe
rorl
xchg
test
scas
es
xor
push
pop
jecxz
cld
fwait
and
inc
jo
mov
mov
jns
ds
hlt
cwtl
jmp
dec
pop
inc
mov
mov
js
mov
cli
enter
lret
movsl
pop
jecxz
out
pop
or
out
and
rorb
ret
repz
xchg
jl
popf
shl
lret
or
lock
lcall
jbe
imul
lahf
stos
cli
push
mov
xchg
jbe
stos
pushf
pop
sbb
adc
mov
xor
leave
sbb
cli
das
bound
cmp
inc
xchg
outsb
inc
mov
hlt
xor
mov
shrd
pop
lahf
adc
sub
push
jle
jl
push
jp
or
fildl
jns
mov
dec
rorb
lods
inc
nop
or
js
mov
subl
fwait
repnz
mov
mov
mov
sub
adc
cwtl
cs
xor
jae
dec
xlat
sbb
lods
lcall
sbb
adc
addr16
andl
push
jle
cmp
fldcw
scas
shlb
xor
or
scas
xchg
das
xor
popf
xchg
jbe
in
mov
lret
clc
xlat
in
std
shr
pop
stc
sub
shlb
pusha
in
add
sbb
xchg
adc
jbe
mov
js
es
mov
inc
xlat
pop
fdiv
adc
fildll
pop
or
jmp
push
out
lret
cmp
in
xor
mov
push
mov
xchg
mov
ss
leave
insl
push
dec
sbb
adc
jmp
jnp
cli
insb
addr16
mov
push
inc
or
fisttps
inc
mov
les
lret
adc
or
fmulp
and
xlat
sbb
ja
sbb
arpl
movsb
test
push
popf
push
jl
enter
xor
enter
je
lods
icebp
call
jecxz
xchg
dec
ss
adcl
scas
pop
mov
adc
lods
iret
jno
sti
pusha
ja
mov
pop
xor
sub
inc
sbb
jl
mov
push
popf
push
bound
aas
sbb
mov
cmpsl
jmp
pop
shll
push
fcompl
lret
dec
push
sahf
ja
and
and
mov
repnz
pusha
push
inc
es
jmp
mov
fnstcw
push
ja
mov
loope
or
prefetch
xchg
xor
div
or
pop
sub
gs
cmp
fwait
pusha
ret
in
jno
outsl
xor
ret
sub
jp
pop
push
jp
test
jo
movsl
xlat
das
pop
lahf
mov
stos
mov
push
stc
and
adc
das
push
and
int3
fidivrs
arpl
loopne
mov
stos
xor
mov
scas
sbb
pop
jno
xchg
aas
adc
push
insl
arpl
fwait
jb
dec
pop
xor
stos
test
icebp
pop
push
aam
or
mov
or
sbb
mov
repnz
addb
loope
inc
mov
mov
jno
mov
inc
jns
mov
clc
fmuls
cmc
sbb
movsl
jae
pop
fwait
pop
rolb
dec
mov
sub
dec
and
out
inc
sbb
ret
cmpsb
inc
xchg
stos
rolb
dec
fstps
cwtl
ljmp
cmc
add
xor
sub
enter
jg
rcr
adc
xor
jae
push
mov
sahf
scas
adc
loope
mov
and
mov
adc
sahf
repz
out
mov
std
idiv
cmpsl
test
rcrb
mov
pop
push
xchg
test
xor
ljmp
mov
sbb
mov
xchg
iret
jge
adc
xchg
or
jmp
dec
mov
sbb
xchg
xchg
xchg
sbb
mov
repz
and
in
add
and
push
fidivrs
lock
lds
movsl
daa
icebp
mov
shlb
mov
dec
adc
int3
fcomps
xchg
inc
movsb
pop
into
mov
fisubrl
dec
test
clc
push
ljmp
call
test
inc
mov
cs
mov
sbb
sub
outsb
jnp
cmp
xchg
sub
lea
dec
into
int3
loop
cs
pop
and
add
push
leave
xor
ret
test
adc
flds
cmp
lret
nop
mov
push
mov
xchg
sahf
out
sub
shrl
lods
cmc
movsl
fwait
pop
or
in
jmp
adc
mov
push
lcall
or
add
sub
loopne
pop
push
mov
imul
jge
loop
sub
leave
cmpsl
cmp
mov
pop
xchg
ss
xchg
mov
fistpll
das
lods
out
inc
je
mov
add
cmp
xchg
lret
ljmp
push
jnp
adc
icebp
les
ror
push
inc
or
ret
pop
xor
in
es
mov
fdivrp
lock
jns
outsl
xchg
push
iret
pop
and
fnstcw
push
js
dec
jnp
imul
dec
out
mov
jbe
neg
mov
inc
popa
outsb
dec
rcrl
test
lds
push
cmp
mov
fdivl
push
sbb
les
mov
jp
aam
out
aas
gs
fcompl
pusha
pushf
cmp
xor
data16
lods
ret
cmp
jnp
cmp
lea
push
dec
in
pusha
enter
std
push
es
push
fsubrl
add
jo
mov
jbe
jns
mov
mov
daa
ss
mov
dec
out
and
pop
test
mov
push
sub
add
cs
stos
mov
cs
int
pop
jmp
stc
xchg
pop
pop
cmpsl
mov
sbb
sbb
arpl
xlat
dec
sub
xor
incb
inc
ss
or
bound
jns
cmp
sbb
push
pop
imulb
pushf
sbb
ror
xor
mov
js
sub
fidivs
sbb
enter
push
lods
mov
and
inc
add
cmc
jecxz
fcmovnbe
ja
sub
data16
inc
dec
outsb
sbbb
pop
ret
mov
call
imul
push
pop
lods
xchg
into
ja
xor
cmp
mov
adc
push
divb
xchg
dec
mov
mov
and
movsb
stc
lea
aaa
jne
lock
dec
testl
jecxz
cmp
jmp
jp
sbb
les
mov
jle
xchg
add
xor
sbbb
mov
out
nop
outsb
cmp
mov
mov
shrl
cmpsb
rol
rorl
ret
mov
fnstsw
icebp
sbb
jl
mov
ret
jno
insb
insl
addl
pop
sub
adc
xchg
xchg
mov
adc
jne
test
dec
xor
popa
xchg
sti
push
in
mov
stc
insl
pop
mov
in
mov
mov
leave
and
inc
iret
inc
adc
xor
cltd
sbb
inc
clc
adc
add
pop
shlb
mov
in
sbb
pop
pop
icebp
cmc
push
xor
push
les
movsb
gs
mov
testl
sub
loope
lds
mov
dec
loopne
out
or
pop
bound
pop
dec
repnz
popa
sub
xchg
call
jb
dec
inc
jge
dec
pop
daa
into
iret
xchg
cmpsl
repnz
fwait
gs
push
mov
lret
inc
out
stos
pop
incl
and
mov
clc
jp
rcl
adc
ljmp
jle
adc
test
insb
inc
jl
push
fistpl
jp
sub
add
rorl
xor
and
aad
xchg
ljmp
push
cmp
and
cmp
dec
clc
xor
fcomip
inc
dec
hlt
idivl
fists
jno
insb
shlb
push
dec
cmp
pop
adc
sub
daa
hlt
in
movsb
jge
cmpsb
fwait
and
xchg
out
mov
sti
jmp
fldt
sub
outsl
or
packssdw
pop
das
dec
aas
mov
out
mov
sti
jmp
fldt
sub
outsl
or
packssdw
pop
das
dec
aas
mov
out
mov
sti
jmp
fldt
sub
outsl
or
punpckhdq
pop
sub
mov
jmp
stc
jmp
pop
scas
dec
jg
dec
aam
mov
or
or
jecxz
movsb
push
mov
iret
mov
fs
push
inc
inc
stc
in
inc
rcll
dec
hlt
pop
in
aam
les
mov
cmpsb
das
xchg
aas
test
je
fs
push
incl
lahf
test
adc
jo
hlt
pop
les
jg
iret
fistpl
movsb
das
aam
test
out
fs
cld
incl
or
sbb
sub
mov
pavgw
pop
loopne
test
and
scas
movsb
or
notl
test
pop
sub
cmp
xchg
push
jne
push
add
jo
lahf
fcoms
inc
inc
mov
fidivl
mov
addr16
mov
lahf
jne
popa
call
addr16
jns
popa
outsl
pop
mov
movsb
dec
push
aas
xchg
iret
mov
je
inc
cld
test
mov
mov
mov
loope
cmp
mov
pop
lods
jl
xlat
xor
mov
pop
add
adc
add
cmpsl
or
ljmp
movsl
jg
jnp,pt
mov
fldcw
insl
cmpsl
and
sbb
scas
mov
mov
pop
push
mov
xchg
out
sar
dec
xor
and
into
mov
and
jg
sets
pop
das
xchg
aas
ljmp
xchg
push
inc
in
dec
lret
jge
popa
dec
mov
mov
push
fistpl
rorb
in
xor
popa
pop
ficoml
xlat
jp
push
insl
mov
mov
inc
cmc
dec
out
stos
and
and
push
lahf
and
adc
add
hlt
pop
in
aam
les
mov
movsb
das
xchg
aas
test
je
fs
push
incl
lahf
and
adc
add
hlt
pop
in
aam
les
mov
movsb
das
xchg
aas
test
je
mov
not
push
inc
dec
dec
dec
cmp
mov
outsb
mov
outsb
mov
add
mov
or
pop
sahf
mov
push
out
sub
data16
sub
mov
cs
repnz
stos
jge
mov
out
cmpsl
out
in
adc
mov
in
mov
jns
pusha
dec
outsl
mov
inc
add
add
xor
mov
xchg
mov
cmp
inc
dec
xchg
insl
cmp
je
fidivl
in
stos
cmp
bound
push
adc
sbbb
aad
sarl
pop
and
jns
lods
jg
xchg
lods
mov
fiaddl
pop
dec
std
inc
xchg
push
rolb
rcll
pop
xchg
jb
sbb
pop
xchg
push
inc
mov
mov
mov
outsl
leave
lret
dec
push
insl
cmp
and
es
mov
mov
jl
add
xchg
mov
mov
adc
cmp
sbb
mov
lahf
pop
orl
xlat
cmp
xchg
imul
sub
jle
outsw
scas
and
jne
data16
ret
outsl
test
and
subb
arpl
inc
dec
dec
or
sbb
add
sti
sbb
jae
mov
xor
or
cmpb
cmp
into
aad
hlt
jp
fs
adc
mov
out
inc
cli
cmp
int
jns
pop
scas
ljmp
dec
shrb
mov
xlat
cmpsb
adc
pop
and
int3
mov
into
cmpb
mov
out
inc
jbe
inc
push
mov
xor
cmp
push
fcomp
pop
add
mov
stos
mov
sbb
jl
fldenv
shrb
sbb
inc
addr16
lods
pand
adc
push
pop
and
test
arpl
pop
pop
cmp
cmp
cwtl
shll
ljmp
fisubrl
faddl
iret
sub
addl
mov
inc
mov
dec
mov
sub
movsb
xor
aas
scas
movsl
pop
mov
out
das
xchg
cmp
ret
nop
shlb
es
xchg
orps
jae
out
push
xchg
add
add
cmp
scas
outsl
xor
jnp
dec
cmp
jle
rcrb
push
popa
daa
imul
mov
mov
shlb
bound
std
into
das
or
push
faddl
xlat
and
inc
out
pop
mov
mov
pop
inc
jae
xchg
inc
adc
or
push
fbld
sbb
cld
lods
mulb
sahf
movsb
aam
iret
mov
cmp
jp
insb
inc
out
scas
pop
xchg
pop
sub
push
push
outsl
and
fcoml
sub
push
xlat
adc
out
js
cmp
in
push
lods
add
cld
or
fmull
ljmp
push
addr16
in
jecxz
nop
jne
stos
movl
mov
pop
or
add
jae
adc
pop
sahf
dec
data16
into
sub
cmp
inc
je
pushf
and
xchg
pop
repnz
data16
rolb
push
push
cli
xchg
dec
xchg
fwait
push
sbbb
imul
mov
sbb
out
cmp
xorb
negb
add
call
dec
jmp
pop
sbb
mov
adc
rcrl
sub
sub
push
jp
mov
xchg
mov
jecxz
aas
stos
sbb
add
cmp
dec
lods
orb
hlt
inc
and
mov
xchg
fs
push
cmpsl
mov
mov
cltd
cmp
jmp
xor
stos
push
cmp
mov
jae
jge
sub
sbb
out
mov
rol
idivb
neg
aad
ja
es
sahf
inc
cmp
std
int
pop
pushl
int3
das
mov
push
xor
mov
or
call
aam
ja
nop
rcl
jecxz
iret
add
fwait
call
ljmp
adc
iret
stos
in
sbb
or
xlat
les
dec
rorb
push
sub
push
xchg
adc
cld
mov
jmp
xchg
cld
sar
test
mov
cmc
cmp
sahf
cmp
dec
insl
cmc
jo
jg
sub
xor
ja
push
mov
adcl
fcmovu
dec
test
test
sti
jns
mov
pop
lret
jle
insb
xor
mov
lahf
lahf
push
pushf
xor
cmp
lahf
aam
mov
push
xchg
test
cltd
testb
lea
movsl
stc
xchg
inc
lds
mov
leave
mov
lret
push
mov
out
pop
lahf
or
adc
xor
xchg
scas
mov
ljmp
ja
pop
xlat
cmp
sbb
repnz
and
sti
jb
push
repz
and
sahf
jle
repz
xor
inc
stos
dec
xor
jae
out
sbb
push
ret
xor
loope
mov
dec
testl
fildl
ror
or
mov
jb
inc
adc
sub
sbbl
lea
rorb
lret
push
cmp
mov
ret
imull
adc
jno
push
clc
inc
sbb
xlat
jo
pusha
pusha
lods
pop
jmp
cmp
adc
sbb
cmpsb
xchg
clc
pop
lock
in
orb
stos
out
push
push
push
out
jecxz
jmp
sbb
lahf
insl
mov
add
das
xor
test
add
cmp
sub
mov
xor
popa
dec
fsubrl
and
in
push
or
add
cwtl
adc
sbb
in
enter
or
imul
mov
loop
test
or
pop
les
enter
cwtl
ja
arpl
aaa
out
xor
leave
mov
jbe
mov
jle
mov
push
lret
insl
call
xchg
mov
add
adc
repnz
imul
fidivrl
fsubs
ret
xor
rcll
int3
mov
add
sbb
outsl
add
xor
decb
aaa
out
cmpsb
jmp
andl
xchg
mov
push
clc
ja
cmpsl
mov
and
inc
in
out
shlb
xor
stos
cmp
shll
stos
mov
jmp
jo
rorl
imul
pop
jb
or
int
and
dec
or
adc
add
lods
xor
pop
xchg
pop
cmc
out
fcoms
lret
hlt
push
xchg
pop
into
jo
add
inc
mov
lahf
xor
add
test
loopne
sbb
lcall
jae
popf
mov
push
cli
pop
imul
add
outsb
call
inc
dec
jb
stos
lea
in
jne
insl
mov
cltd
lret
in
subb
jo
jp
enter
outsb
xor
insb
add
push
jg
pusha
rclb
pop
dec
push
and
cmp
dec
je
mov
mov
or
sbb
dec
enter
adc
arpl
repnz
inc
adc
jge
ss
pop
popf
clc
xchg
ds
dec
sti
pop
testl
mov
scas
or
sbb
cmp
fildll
int3
inc
push
xor
ds
pop
adc
cwtl
xchg
in
lods
pop
xchg
push
fisubl
xchg
adcl
aad
push
mov
mov
pop
cmpsl
ret
dec
pop
sahf
outsb
add
outsl
cmp
insb
inc
in
push
sub
jae
dec
jp
fimull
lret
jns
mov
xchg
cmp
inc
mov
jno
sbb
scas
jmp
or
mov
imul
call
sar
rorl
decb
out
xor
or
mov
bound
mov
push
inc
jmp
push
ja
jnp
lahf
out
inc
xorl
adc
jae
aaa
inc
push
mov
sub
aad
add
outsl
mov
jle
cmp
stos
lea
faddl
push
imul
out
mov
or
or
lret
adc
dec
out
xchg
cltd
jp
cmc
add
aad
divb
mov
movsb
es
into
mov
jmp
out
add
gs
out
inc
call
out
leave
mov
xor
imul
test
dec
pop
stc
shrl
fimuls
xchg
push
bound
in
daa
filds
clc
repnz
xor
into
pop
cmpsl
cld
mov
fldl
repz
lds
lret
int3
xchg
or
arpl
aaa
out
dec
lcall
mov
xchg
shrl
dec
bound
xor
push
xchg
cld
std
es
lods
jp
fwait
shl
push
and
jl
mov
outsb
cmc
dec
add
jge
popf
insl
shl
xor
pop
or
ljmp
movb
sbb
sbbl
mov
enter
push
adc
mov
push
sub
fistpl
enter
scas
mov
aaa
mov
cld
fldl
and
shll
adc
xchg
jp
stc
adc
xlat
lret
pushf
das
sub
ror
mov
push
and
jae
xadd
int
mov
or
enter
jb
lock
mov
incl
pushf
mov
sti
cmc
popa
fbld
fisubrs
out
add
xor
imul
dec
add
ss
insb
jbe
push
subl
test
mov
sbb
jl
push
xor
outsl
inc
push
mov
mov
stc
push
lret
inc
scas
repz
jg
shl
aaa
pop
xchg
inc
xorl
aam
pop
xor
inc
pop
xchg
xchg
dec
sub
lret
out
jae
dec
and
xchg
xchg
outsb
leave
mov
pop
in
sub
add
ljmp
mov
inc
and
mov
inc
add
lcall
enter
dec
lds
ljmp
test
rcrb
shr
icebp
cmp
jmp
push
out
push
xchg
popf
jbe
jge
lods
les
jo
push
cmp
jae
mov
adc
mov
inc
lret
jo
repnz
lcall
pop
mov
pop
rolb
mov
stos
clc
imul
cmp
xchg
cs
in
out
xorb
adc
inc
sub
jns
xchg
aaa
movsl
mov
push
xchg
scas
jnp
inc
btc
into
cmpsl
call
xchg
divl
shll
xchg
mov
mov
mov
mov
mov
sub
mov
push
adc
sub
or
std
push
sti
jge
in
addr16
cltd
in
and
sub
lds
stos
mov
cmp
xlat
outsb
ret
aam
popa
and
inc
xchg
mov
adc
push
and
sti
ja
hlt
dec
outsb
push
loop
lods
xor
ss
cmc
mov
pop
push
stos
movsb
cmp
adc
mov
jnp
adc
shrb
fnstsw
ds
xchg
xor
push
push
lret
add
insb
mov
jge
xchg
or
lret
mov
loope
std
testl
add
jmp
adc
dec
push
out
rcrb
xchg
sbb
popf
push
mov
lds
pop
test
leave
aaa
jb
dec
enter
test
shrb
fldenv
jl
jns
cmp
gs
inc
fdivrs
xlat
inc
lds
cmp
lods
rcll
ret
inc
pop
inc
or
movsb
rol
aad
add
arpl
loopne
sub
jno
inc
orl
xchg
mov
sbb
adc
out
add
adc
and
mov
sub
fs
lret
and
fstpt
sbb
shr
and
dec
inc
pop
int3
rorb
out
addr16
ficoml
pop
push
inc
add
mov
fwait
ljmp
pop
les
jp
mov
cld
stos
and
add
and
shrb
pop
cmp
pushf
stos
xchg
dec
sub
jge
jge
out
daa
loop
sub
outsl
sub
jb
or
or
push
adc
xchg
mov
xor
sub
fdivrs
fs
rcr
lds
push
adc
push
pop
in
push
not
movsl
leave
lcall
xor
xchg
xchg
ljmp
loopne
enter
mov
int3
dec
in
jae
sub
int
cmpsl
daa
in
inc
notb
mov
pop
push
mov
cmp
cmp
adc
ljmp
mov
cmp
repnz
repnz
cmpsb
incb
inc
adc
push
mov
sbb
sbb
sahf
sub
and
jl
jecxz
lea
jb
cmpsl
lret
test
pusha
jnp
jge
jae
xchg
sbb
ret
call
mov
fisttpl
sbb
jo
mov
xor
inc
sarb
ret
lret
lods
icebp
push
repnz
dec
popa
push
mov
xor
icebp
dec
mov
test
andl
insb
shlb
or
xor
xchg
fistpll
out
sahf
repz
scas
test
dec
pop
ret
out
add
xor
mov
xor
nop
int
out
pop
aaa
lea
mov
fmuls
daa
mov
popa
clc
mov
inc
cmp
adc
mov
pop
mov
push
cli
cmp
cmp
insb
notb
in
mov
sub
fsubl
jne
lock
dec
lret
mov
shr
and
xchg
std
lcall
pop
shll
cli
imul
fidivrl
lahf
push
and
and
adc
mov
pop
and
addr16
int
insb
inc
push
lds
data16
xor
movsb
mov
dec
xchg
mov
orl
out
mov
andl
sub
xchg
pop
stos
jecxz
xor
mov
push
lret
mov
pop
lahf
jecxz
subb
out
mov
stos
push
xor
movsl
pop
sub
sbb
cli
fs
mov
inc
rolb
je
loope
push
outsb
cs
shl
aas
cmc
push
pop
and
jle
fistl
jae
jp
test
imul
or
repnz
push
inc
xchg
xorb
and
adc
outsb
cld
daa
add
xor
loope
bound
int3
dec
int3
int
jb
mov
icebp
sbb
pop
inc
mov
pop
scas
mov
mov
popf
aad
cmp
jl
mov
imul
xchg
dec
cmpsl
pop
movsl
mov
shrd
loop
test
sti
push
sarb
xor
push
imul
mov
ljmp
inc
rcrl
icebp
jo
push
add
loope
xor
outsb
mov
jbe
sub
fisubs
inc
fwait
movsb
je
cmp
nop
jmp
cs
test
mov
in
cmpsl
movsb
fdivr
mov
lods
cs
cltd
fsts
push
xor
aam
sub
xchg
cmp
add
push
nop
repnz
loope
mov
addl
pop
add
and
in
or
inc
pusha
cmp
xor
xor
mov
push
mov
pop
mov
and
imul
and
inc
xor
dec
xchg
repz
xchg
or
test
push
call
mov
stc
push
mov
jnp
xchg
pusha
dec
pop
cmp
push
xchg
scas
pusha
cltd
loope
xchg
hlt
mov
push
loopne
ret
loope
add
sbb
sbb
xchg
out
inc
test
mov
notb
out
mov
mov
mov
push
mov
cmp
mov
in
add
sbb
mul
lock
int3
push
mov
sub
daa
test
int
addl
out
out
sarb
inc
adc
clc
mov
jmp
dec
mov
mov
xor
das
dec
cmc
jo
fcmovbe
cmpsb
in
mov
mov
incb
rcr
ficoml
out
jae
add
pop
cmp
mov
cmp
popa
push
xor
cld
push
pusha
into
adc
ret
pushf
pop
aaa
arpl
mov
fwait
adc
jo
xchg
mov
enter
fiaddl
push
jno
popf
test
daa
je
add
push
and
push
and
push
shrl
adcl
push
popa
or
mov
std
push
popa
and
and
xchg
jl
sub
nop
mov
inc
out
inc
xor
pusha
or
das
sbb
cmp
lcall
imul
mov
cmc
sti
adc
jbe
fcmovnu
mov
loope
sub
sbb
imul
stc
sbb
xlat
cmp
ss
cmp
stos
ret
cwtl
jmp
cmp
cli
ret
sbb
andl
pop
dec
cmp
mov
lods
mov
push
or
jo
jae
iret
dec
mov
mov
js
add
clc
int
cmpsb
daa
fsubrl
pop
enter
mov
or
add
push
sahf
imul
aam
sbb
test
in
dec
lret
and
or
ret
add
cs
sbb
into
mov
das
jg
iret
dec
test
loop
and
jge
ja
or
sub
cmp
jb
es
jg
or
ds
or
imul
sbb
inc
inc
aas
mov
mov
jno
mov
mov
ret
xchg
sbb
fsts
mov
mov
lret
stc
cmp
out
cli
inc
cs
fisubs
xlat
inc
daa
je
subb
cmpb
fstps
mov
scas
mov
push
or
aas
rol
push
xorb
or
and
dec
dec
movsl
hlt
dec
addb
sbb
movsb
pop
gs
and
out
inc
or
push
outsl
fwait
sub
cltd
or
fnstenv
sbb
sbb
fadds
mov
scas
mov
daa
test
pop
mov
outsb
xor
and
fildl
ja
insl
dec
shrb
out
add
xlat
adc
mov
arpl
in
push
or
xchg
jne
or
pop
mov
adc
in
nop
add
jae
mov
dec
dec
fsubrs
stc
cmp
mov
cltd
jecxz
sub
adc
inc
push
call
movsb
mov
dec
daa
out
inc
push
test
movsb
inc
stos
aad
jecxz
sub
and
cli
mov
rep
mov
addr16
mov
xchg
ficoml
cmpsl
popf
nop
cmp
sub
sbb
testl
and
mov
xchg
ret
dec
sbb
lods
iret
sub
aad
fdivrs
mov
mov
insb
mov
mov
lock
mov
pop
mov
jb
jl
sub
icebp
mov
adcb
mov
out
and
in
xchg
cmp
jbe
cmp
pop
loop
xchg
mov
leave
add
mov
jge
sbb
pop
dec
jns
loopne
jnp
mov
sub
xor
ficoms
adc
out
aad
sbb
add
inc
jns
dec
insb
divb
pop
jmp
sub
jmp
iret
and
ljmp
movsb
add
jns
fidivrs
sbb
loope
sub
inc
xor
arpl
xchg
icebp
std
sbb
sti
subl
pop
cmp
jmp
cvtdq2ps
out
inc
cmp
sub
test
mov
js
mov
xchg
pop
mov
fidivrl
je
mov
lahf
dec
dec
test
push
mov
xorl
cmpsb
dec
lcall
addb
mov
cmc
std
xchg
pop
in
xchg
into
es
push
insl
jecxz
sub
xor
pop
or
add
stos
xchg
fisubrl
es
out
sub
jge
mov
push
jg
add
outsl
and
lods
sub
mov
in
gs
rcl
outsl
xor
sub
mov
clc
or
sbb
inc
hlt
push
inc
fwait
mov
mov
cmp
jg
sbb
inc
add
imul
and
and
mov
clc
sub
xchg
add
fisttpll
jg
shlb
cmpsb
mov
repnz
lds
push
xor
fists
xchg
cltd
inc
mov
mov
das
xor
xor
jmp
mov
fwait
pusha
sub
test
xorb
xor
mov
data16
mov
dec
pop
dec
fidivs
or
sti
sub
pop
xlat
mov
sbb
and
loope
xchg
test
mov
mov
pushf
add
les
in
inc
out
xchg
hlt
xchg
adc
jno
add
mov
popa
mov
fstpl
mov
incl
lahf
and
adc
add
hlt
pop
in
aam
les
mov
movsb
das
xchg
aas
test
je
fs
push
incl
lahf
and
adc
add
hlt
pop
in
aam
les
mov
movsb
das
xchg
aas
test
je
sub
sub
inc
sysenter
lahf
mov
sub
in
aam
les
mov
movsb
das
mov
test
je
fs
push
incl
xor
and
xchg
mov
dec
mov
cmp
pop
pop
imul
mov
mov
dec
mov
push
ret
ret
jge
and
jae
arpl
push
out
inc
imul
orl
jecxz
sarl
xor
add
push
incl
mov
mov
push
repz
jecxz
sarl
jmp
mov
bound
mov
ljmp
pop
out
pop
push
dec
enter
lock
jnp
fbstp
fdivr
sbb
loopne
sub
repz
fcomi
leave
jns
jmp
sub
inc
xor
stos
out
push
add
icebp
mov
scas
pop
stc
sub
and
fldenv
scas
mov
lcallw
sti
shl
ja
lret
aam
push
pop
loop
mov
lahf
fsubrl
xchg
inc
jecxz
jae
popf
out
pop
incl
adc
movnti
push
mov
sbb
scas
in
cli
pop
mov
fbld
push
repz
cs
mov
mov
nop
fisttpl
mov
jmp
push
inc
jae
xor
push
cld
push
push
mov
mov
stos
repz
jecxz
rcr
ret
dec
xor
add
push
ljmp
data16
loop
xchg
inc
andl
xor
lret
ja
xor
or
pop
negb
es
cmp
call
inc
data16
mov
xchg
jae
dec
loope
out
fstpl
outsl
sarl
xor
add
jae
arpl
push
incl
mov
mov
dec
repz
jecxz
sarl
xor
add
jae
arpl
push
incl
mov
lret
in
jle
inc
addb
and
push
xchg
push
lods
cmp
ss
inc
pop
daa
into
outsb
cmp
jae
and
inc
es
pop
dec
dec
jnp
outsl
sub
dec
jb
call
mov
rorb
xor
in
push
jns,pn
ret
xchg
shrl
in
adc
add
xchg
inc
push
enter
and
push
mov
sbb
and
rcrb
orb
push
int
and
stos
leave
push
btr
or
lock
or
imul
int
dec
std
imul
dec
pop
xchg
in
das
ss
cmpsl
jg
dec
adc
mov
mov
lahf
lahf
dec
out
mov
dec
fidivs
and
cmpsl
pusha
lret
pop
test
out
int3
int
cmp
stc
inc
sbb
sahf
orb
mov
xor
mov
movsb
jl
sbb
sahf
and
mov
adc
mov
dec
jmp
insb
jge
or
hlt
jb
stos
or
push
test
jge
sbb
insl
xchg
adc
iret
add
inc
push
imul
jno
inc
fcmovnbe
sti
in
pop
mov
sti
arpl
cs
shrb
sarb
inc
dec
inc
fdivrs
sub
inc
test
pop
pop
cli
sub
pop
data16
cmp
adc
cli
lock
bnd
inc
mov
in
mov
jne
cmp
sub
out
clc
mov
or
lahf
aas
scas
roll
mov
mov
cmp
pop
out
fcomps
dec
dec
push
dec
mov
pop
cmpxchg
jae
gs
adc
mov
jmp
jg
mov
jmp
cli
mov
adc
dec
movsb
loope
cmp
notb
fxch
adc
xchg
adc
sub
dec
lods
fs
rorb
jbe
test
jbe
mov
cltd
adc
pop
sbb
stos
xchg
mov
pop
inc
imul
add
push
gs
cmp
pop
add
mov
fcmovnbe
in
push
pop
cmp
push
out
or
out
aaa
clc
and
addb
ljmp
pop
push
sub
adc
mov
adc
les
mov
cltd
mov
add
rol
add
dec
outsb
mov
add
movsl
xchg
and
lahf
and
mov
imul
cmp
xor
xchg
xor
cmpsb
dec
xor
les
jle
in
inc
lcall
rcl
push
es
test
sub
xchg
test
in
pop
push
sub
sbb
push
and
pop
mov
xchg
xchg
in
arpl
aam
rclb
xchg
repnz
sar
cmp
nop
loop
adc
aas
pop
add
adc
fucomip
or
mov
icebp
test
gs
out
mov
loope
lods
jbe
dec
push
les
pop
scas
jne
fidivl
xchg
cld
into
push
pop
or
fldcw
enter
cmp
adc
pop
sub
test
adc
adc
lea
lods
cmp
test
and
sbb
sti
rclb
xchg
pusha
mov
jo
push
or
xor
dec
cmp
scas
lods
icebp
pusha
xchg
dec
mov
lea
repz
xor
xor
addb
rcr
dec
or
in
push
test
pop
sub
push
mov
rclb
push
mov
pusha
pop
cli
jge
loope
cld
inc
jnp
sub
adc
mov
out
loopne
lret
jecxz
out
rcl
push
sahf
insb
pusha
js
pop
in
aaa
repnz
inc
and
xchg
dec
call
adc
mov
cwtl
pop
out
ja
rorb
push
mov
xor
mov
out
icebp
xchg
repz
ret
insl
and
insb
fldt
mov
mov
add
loop
popa
or
outsl
subb
ror
outsb
jae
sub
popf
mov
test
xor
xor
push
sarb
test
stos
call
pop
in
push
sti
xlat
shl
push
inc
mov
add
or
in
sbb
pop
jbe
bnd
mov
pop
fcmovbe
xor
or
fsubrs
in
jmp
jmp
cli
lods
pop
xor
sti
add
fists
push
popf
jp
adcl
pop
scas
aaa
sbb
ljmp
add
std
scas
mov
sub
xor
pop
mov
xchg
and
push
movsl
test
in
sub
add
pop
pop
jmp
pop
and
and
popa
addr16
out
or
mov
dec
push
sbb
xchg
adc
repnz
insl
jg
pop
push
adcb
mov
js
mov
push
dec
xchg
ds
and
jle
imul
out
mov
out
mov
jbe
sub
cld
sub
cld
lcall
mov
mov
sbb
orb
jns
mov
test
into
addl
or
jae
out
sbb
ljmp
mov
sub
lcall
and
in
pop
repnz
aaa
cs
movsb
mov
loope
adc
arpl
cmp
jo
push
sub
xor
xlat
and
popf
pop
aad
int
xor
out
les
lahf
addr16
nop
push
xchg
pop
push
mov
dec
xchg
adc
and
out
pop
jno
and
sub
imul
gs
inc
lcall
fdivrs
pop
xchg
sarl
sub
push
xor
clc
imul
sbb
xchg
stc
lods
mov
adc
jns
fildl
dec
out
out
cmp
cmp
jns
orb
lcall
in
add
stc
xlat
loopne
inc
movl
aaa
popf
xchg
jl
insb
shl
insl
cli
sbb
jo
ret
mov
pop
je
mov
mov
addps
fdivp
pop
mulb
mov
push
loopne
mov
repnz
or
lret
es
xchg
popa
fldenv
jbe
cmp
dec
outsl
mov
mov
lea
xchg
cmp
mov
popf
add
cmpsb
dec
loop
nop
jns
loopne
fisubs
jle
hlt
mov
je
sbb
cltd
jbe
sub
jne
push
imul
cs
push
dec
and
adc
insb
sub
push
inc
or
inc
pop
outsb
jno
sub
sbb
stc
or
jne
jbe
cmp
mov
mov
out
cmp
fadds
and
fidivrs
sbb
fs
aaa
stc
jp
push
test
orl
movsb
cmp
jp
nop
sub
cmc
arpl
movsl
cmpsl
jns
sbb
mov
leave
adc
pop
mov
add
sbbl
push
pop
cmp
loop
push
jbe
xlat
ret
pop
mov
imul
clc
jle
ss
roll
mov
and
jnp
dec
inc
mov
xchg
mov
dec
dec
add
xor
ja
cmp
xor
in
xor
icebp
jne
mov
insb
test
js
sub
pop
adc
and
mov
aaa
sub
adc
lods
mov
lock
add
push
mov
clc
mov
cmp
xor
jp
cmp
popa
out
scas
mov
and
scas
inc
jb
and
jmp
mov
xor
in
cmp
or
push
xlat
jecxz
push
and
shr
xchg
sti
cli
icebp
stos
cmc
cmc
jne
xor
cmp
sub
movsb
jne
mov
push
stos
dec
cwtl
pop
dec
imul
sar
xchg
cmp
xorl
test
sbb
adc
and
fsubr
in
mov
sbbb
mull
jg
mov
enter
aas
fs
in
add
pusha
mov
mov
int
mov
push
fbstp
xlat
sbb
inc
add
mov
jmp
sbb
mov
cmpl
mov
icebp
mov
iret
xor
enter
push
xor
mov
pushf
adc
add
lods
lahf
incb
jp
movsb
ja
and
or
cmpsb
lods
into
gs
sarb
push
sbb
sub
add
sub
lcall
into
mov
mov
fisubrs
shl
mov
call
and
bound
cltd
xchg
popa
jl
ret
xor
stos
mov
inc
lret
shr
pop
pop
xchg
fbstp
sub
imulb
xchg
push
fdivrl
jnp
mov
insb
popf
pop
sbb
or
fcom
insl
ret
lods
cli
mov
xorl
mov
dec
aaa
mov
pop
lods
xchg
inc
push
xchg
jmp
dec
inc
or
dec
mov
pop
sub
jns
popa
pushf
sub
and
mov
loopne
insl
outsb
mov
and
mov
adc
sub
ret
je
in
stos
or
rolb
insl
jg
sti
les
inc
outsb
adc
inc
gs
int
xor
mov
popa
idivl
sub
add
lds
ja
fs
mov
xlat
cltd
pmulhuw
mov
icebp
out
adc
push
in
mov
repz
adc
jae
movl
or
cmp
push
cmp
mov
xchg
inc
inc
jne
je
mov
or
dec
dec
mov
xchg
sub
ucomiss
inc
aad
inc
lahf
and
jmp
mov
push
addr16
pop
and
pop
pop
rclb
dec
jmp
push
fdivr
fnstsw
aaa
imul
sbb
xchg
int3
xchg
out
push
scas
jmp
and
in
fisubrl
cmp
ljmp
sub
pop
int3
rolb
mov
adc
dec
idivl
and
mov
xor
pop
cmp
mov
mov
call
add
sbb
movsb
js
jne
sbb
mov
pmuludq
negb
movsl
jnp
dec
xor
test
je
lcall
mov
xchg
out
or
nop
mov
dec
xlat
jmp
adc
inc
jb
mov
adcb
adc
fsubrs
jno
aad
mov
adc
jbe
cs
lahf
jno
test
nop
aad
and
call
fwait
cli
push
in
pop
inc
dec
mov
xchg
inc
push
sbb
in
xor
inc
sub
loope
test
and
stos
lods
ds
gs
outsl
rcrl
dec
mov
js
sub
dec
mov
xor
or
lcall
fldt
in
mov
dec
xlat
test
mov
mov
lret
mov
in
ret
cmp
jno
test
cmp
hlt
push
aad
adc
xor
int
pop
jmp
out
in
sub
pop
aam
xchg
xchg
sbb
pop
fsubs
mov
scas
sub
xchg
jno
sub
popf
push
mov
push
mov
int
add
dec
aaa
jmp
adc
dec
jbe
bswap
ds
clc
pop
push
mov
push
pop
scas
push
xchg
xchg
cmp
jmp
je
inc
lea
cs
xor
mov
iret
pushf
jno
xchg
gs
pop
jmp
pop
mov
enter
in
xchg
nop
stos
out
adc
orl
cmp
pop
jmp
mov
insb
testl
ja
cwtl
push
clc
int3
rcrl
cwtl
test
ficoms
into
jmp
loopne
push
jne
push
pushf
xchg
rcll
in
jnp
sub
sahf
cmp
lods
pop
cmp
pop
inc
cli
push
pop
loopne
lds
popf
adc
pop
jg
lods
xor
mov
sub
fildll
js
sub
or
xchg
inc
sti
mov
jnp
xor
cld
add
lret
cmp
movsb
dec
loope
dec
fsub
lock
adc
and
in
jns
loopne
shll
imul
add
test
fs
outsb
pushf
leave
test
push
scas
mov
mov
test
add
in
repz
cli
jg
pop
xor
test
mov
dec
into
jno
sub
cld
rolb
push
cmc
and
jns
xchg
mov
jo
cmp
push
mov
enter
add
out
dec
pop
or
cmp
xorl
pop
xchg
les
push
push
repnz
mov
dec
adc
xor
jo
leave
popf
jmp
mov
stc
mov
xor
pop
mov
jo
add
enter
jns
ja
cmp
push
pop
pop
orb
or
or
mov
fwait
popf
xchg
dec
add
ret
jns
es
dec
enter
dec
jge
icebp
ds
pop
mov
jl
test
lods
leave
out
or
xchg
inc
cmpsb
and
es
ja
dec
xor
out
and
out
xorl
cwtl
stos
out
loop
pop
rorl
test
push
mov
daa
inc
or
out
mov
in
lods
jmp
mov
clc
cmpsb
cmp
movsl
lock
push
xchg
inc
dec
add
sbb
daa
sahf
aam
movsb
andl
cmp
sbb
bound
pop
push
inc
cld
stc
xor
addb
add
dec
xor
ret
sub
mov
pop
rcrl
mov
push
pop
mov
or
dec
das
pop
and
or
xchg
bnd
xchg
sub
fwait
mov
mov
sti
fstpl
cmpsl
inc
inc
sarb
cmp
mov
add
sub
enter
push
sub
fmuls
call
inc
mov
into
stos
out
lcall
mov
mov
lds
gs
rorl
push
test
fists
sub
aad
jp
xchg
mov
sbb
lret
stc
rolb
inc
iret
or
int
dec
into
notl
xchg
pop
sub
xor
test
jle
iret
xor
js
loop
lret
inc
decb
aam
pop
dec
aas
mov
xor
dec
fucomi
lods
daa
ret
icebp
cld
xor
dec
sub
push
call
or
sbb
add
add
rorb
repnz
jnp
push
inc
movsb
outsl
jge
rcll
test
sbb
movnti
cltd
shrl
mov
imul
jmp
and
mov
and
push
andl
sbb
insl
xchg
xchg
insl
mov
ret
inc
shll
push
pop
lds
jecxz
cmp
imul
leave
pop
jle
fldenv
ret
cltd
mov
jl
adc
jb
ja
mov
js
xor
insl
rorl
shl
or
sub
out
int3
inc
lret
add
jns
loope
cltd
stc
push
repnz
je
aas
mov
dec
adc
sub
fs
fcmovu
cmc
pusha
add
ja
in
cmp
xchg
mov
sbb
mov
add
ss
shll
mov
adc
lods
mov
jae
inc
xchg
fdivrl
int3
inc
jne,pn
cmp
div
push
idiv
add
shlb
mov
inc
jae
adc
andl
mov
mov
rcll
sub
std
int3
test
fs
push
jno
mov
pop
ficoms
pusha
jmp
ds
xchg
negl
or
lods
lret
flds
cmpsl
jno
loop
or
rcll
out
call
fsub
sar
out
in
sub
cmpsb
test
add
popl
cmp
push
push
cwtl
jbe
adc
mov
aad
mov
jb
push
jns
mov
push
mov
add
or
pop
sarl
pop
sub
sbb
pop
sbb
ds
add
out
shll
test
jmp
pop
je
xchg
mov
hlt
cmp
sti
daa
xchg
mov
insb
sbb
insl
mov
iret
jp
in
xor
enter
jmp
jp
popf
pop
sub
jp
fbld
sub
in
xor
xchg
xchg
pop
mov
xor
test
add
insb
push
jge
jbe
mov
mov
fsubp
insl
or
jmp
add
loope
lcall
add
xchg
nop
mov
sbb
fsubr
rcl
push
pmuludq
js
inc
lods
inc
adc
pop
aad
jle
or
mov
mov
sub
out
ljmp
xor
jg
ds
push
mov
rol
sbb
sti
xchg
and
mov
mov
mov
dec
mov
ficomps
in
leave
adc
adc
mov
inc
xor
inc
and
es
rcll
mov
mov
lds
ret
sbb
insb
cmp
popl
int3
mov
inc
loop
repz
test
es
les
xor
dec
cli
stc
insb
int3
aam
and
int
push
movsb
out
fistps
push
pop
sub
addr16
inc
push
lret
loopne
call
jmp
add
test
mov
nop
outsl
inc
hlt
push
cli
push
rcl
and
sarl
lods
inc
pop
insb
jnp
mov
sub
and
cltd
push
add
mov
or
pop
lock
xchg
ret
rorb
pmaxub
cmpsb
test
dec
loopne
arpl
pop
inc
pop
push
mov
cmp
test
rolb
push
fildll
pop
push
push
test
add
push
dec
frstor
stos
and
int3
xchg
add
sub
data16
xor
mov
out
sbb
fwait
int3
mov
or
sbb
sub
arpl
ja
or
fnstenv
mov
lahf
addl
lods
cmp
out
les
std
shrl
jb
mov
repz
lea
adc
push
pop
push
ja
adc
ret
pusha
sub
mov
push
in
mov
incb
fs
hlt
cmp
call
stc
xor
pop
push
sub
push
fs
imul
mov
adc
dec
cmp
jl
repz
out
or
std
gs
and
shl
jns
les
mov
and
aaa
in
add
inc
faddp
adc
into
test
in
cmc
jmp
jp
dec
dec
push
enter
and
xchg
pushf
pop
and
and
mov
out
sub
lods
cmp
fdivrl
sarb
mov
cmpl
push
inc
jmp
mov
or
stc
inc
adc
sub
popa
mov
or
xchg
orl
jns
fucom
jmp
jge
jbe
insb
mov
scas
enter
mov
aad
push
insb
xchg
bndldx
adc
dec
mov
sbb
faddl
mov
shl
jmp
icebp
push
push
dec
dec
add
or
into
push
fstpl
rorb
mov
mov
addr16
pop
pop
out
inc
stos
divl
icebp
je
cmp
ja
jo
inc
outsl
push
je
xlat
testl
hlt
adc
test
push
add
std
jecxz
xor
mov
xchg
xor
xor
xchg
rorb
xchg
dec
mov
loope
scas
xchg
push
mov
mov
imull
outsl
pop
into
push
adc
cld
shl
mov
xchg
ftst
and
inc
iret
pop
mov
xor
subl
fcmovbe
hlt
pop
jno
xor
mov
out
add
mov
sbb
mov
test
mov
mov
popa
lret
fiaddl
fstpt
lcall
es
jp
cmp
xor
or
pop
inc
fnstsw
rclb
dec
in
jno
pop
js
fcomps
movsb
jle
push
add
aam
and
sbb
addr16
mov
or
jno
lods
push
push
das
clc
icebp
inc
xchg
lea
out
and
mov
in
xchg
mov
mov
xchg
add
icebp
scas
fsincos
pop
mov
pushf
sbb
mov
sbb
mov
daa
bound
cltd
loopne
mov
aam
sar
lea
pop
test
mov
fsubl
arpl
add
mov
xchg
mov
sub
and
sub
lock
cli
dec
movl
push
ljmp
pop
popa
or
ss
jae
cmp
inc
and
add
gs
xchg
xchg
shl
push
movsb
scas
or
fsts
ja
adc
dec
lahf
call
xchg
push
das
bound
push
ret
sahf
dec
and
pop
add
push
push
in
sbb
push
mov
filds
mov
push
scas
rolb
fbstp
jge
xor
shll
fldenv
test
iret
mov
xor
fisubrs
test
leave
dec
sbb
sub
pop
outsl
push
xchg
mov
xchg
jns
add
mov
mov
lds
test
fimull
sti
sbb
cmp
mov
jmp
mov
dec
repz
jecxz
sarl
xor
add
jae
arpl
push
incl
mov
mov
dec
repz
jecxz
sarl
xor
add
jae
arpl
push
incl
mov
mov
fcomip
pop
jecxz
sarl
and
mov
arpl
push
pop
inc
sbb
pop
orl
jecxz
sar
ret
xor
add
sti
push
pushf
adc
test
cwtl
fisttpl
out
xchg
dec
imul
and
or
sub
push
jmp
sti
test
cwtl
fisttpl
mov
fwait
enter
sub
cmp
sub
cmp
jmp
sti
test
sbb
stos
loope
lock
fwait
shrb
jnp
cmp
or
pop
push
inc
push
jne
mov
in
test
xor
inc
pusha
or
sbb
pop
mov
movsb
pop
adc
inc
jmp
xorl
inc
popf
mov
fimuls
aam
cs
adc
das
add
push
in
cmc
scas
stos
call
imul
lea
cmpsb
fisttpl
call
pop
mov
jne
repz
imul
xabort
not
sub
or
sbb
adc
jecxz
adc
mov
mov
xchg
pop
pop
rorb
cmpsb
adc
in
pop
push
mov
mov
dec
mov
jp
je
adc
cmp
cmp
or
cmp
mov
sti
mov
stos
clc
mov
shrl
jnp
dec
add
sub
jg
pop
sbb
cltd
mov
xchg
mov
movsl
sub
push
sub
addr16
adc
dec
and
fwait
call
xlat
fimull
inc
jns
or
dec
or
jns
sbb
mov
xchg
mov
enter
sub
pop
or
js
push
jmp
sti
test
cwtl
fisttpl
mov
fwait
enter
sub
pop
or
js
push
jmp
pop
das
jo
lcall
xor
add
or
add
or
sub
push
sub
jecxz
repz
test
scas
sub
sub
dec
inc
movsl
push
adc
ss
xchg
dec
dec
arpl
stos
aaa
dec
ret
pop
adc
cmpsl
pop
into
mov
add
mov
mov
add
inc
pop
call
pop
andl
mov
dec
cld
jp
cwtl
dec
testl
mov
sahf
loopne
mov
ds
fidivs
and
or
addr16
push
lret
xor
sbb
cmp
addl
mov
outsl
xor
sub
repz
inc
cmp
or
clc
and
jae
jp
stos
mov
icebp
mov
leave
les
sub
sub
cmpsb
fwait
cmc
mov
jno
jne
icebp
push
mov
std
enter
pop
lret
fisubl
cli
test
or
xor
fidivs
or
movsl
mov
cmp
rorb
rorl
call
cmpsl
push
pop
mov
jp
pop
push
mov
js
inc
push
push
shl
jnp
and
nop
fistpl
fwait
fwait
inc
or
dec
scas
mov
test
lret
ret
add
jno
test
push
jae
incb
loope
mov
loope
cmp
leave
lret
fmul
pop
shll
inc
popa
inc
push
dec
fists
inc
test
sbb
adc
inc
jbe
dec
xchg
in
lods
jnp
aas
sbb
aam
mov
ret
fs
jge
xchg
nop
clc
xor
call
and
cld
popf
lds
xlat
jge
mov
adc
jno
mov
sti
pop
add
adc
cmp
int
aad
push
mov
out
daa
cltd
pushf
cltd
mov
sub
cmp
mov
cld
lcall
outsb
fwait
fwait
stos
fisubrl
sbb
pop
add
and
dec
popf
fstpt
pusha
orl
cmp
je
pop
jae
lcall
in
lds
dec
cmpsl
or
inc
dec
test
dec
jne
cmp
push
pop
and
xchg
enter
in
das
mov
lret
mov
idivb
les
repz
xor
pusha
pop
shlb
addr16
push
clc
mov
sub
and
mov
push
mov
mov
xor
sbb
jmp
int3
jle
fldl
popf
fwait
ljmp
jo
data16
repz
mov
nop
test
jns
mov
rcll
jmp
insb
mov
inc
mov
jmp
aad
sub
mov
push
sbb
jl
sbb
fwait
jb
inc
sbb
daa
and
hlt
test
add
lock
mov
mov
xchg
cmp
sub
in
inc
xlat
pop
mov
sub
dec
rclb
leave
lret
adc
jbe
hlt
pusha
cmp
xchg
out
aad
push
dec
jl
cmp
sub
gs
pop
xchg
add
repnz
test
jno
lods
shll
loopne
cli
test
xchg
cli
add
aas
mov
mov
pop
mov
ret
cmpb
add
je
xchg
sbb
and
lods
aas
out
jmp
jno
mov
pop
mov
test
sub
fidivrl
sub
sbb
iret
cmp
mov
sbb
scas
iret
or
clc
test
loope
sahf
xchg
inc
repz
loopne
ja
or
repnz
jne
pop
popa
sbb
scas
ljmp
stos
in
mov
inc
out
xchg
jae
notl
and
push
repz
mov
call
pop
or
mov
subb
stos
lcall
jmp
push
push
mov
stos
sub
int3
push
push
mov
push
sbb
inc
sub
sbb
and
inc
icebp
sbb
popf
test
popf
cs
sub
jmp
fnstsw
and
push
enter
or
int3
leave
leave
imul
lahf
mov
adc
sub
pusha
enter
mov
insl
ficoms
lahf
inc
test
dec
or
jp
or
add
imul
add
cwtl
out
add
xchg
je
sbb
adc
xchg
and
inc
push
jb
mov
dec
aaa
shr
shll
decb
nop
mov
xchg
adc
into
leave
outsl
mov
jl
out
cmpsl
mov
mov
xchg
mov
out
addr16
mov
or
add
loop
fimuls
push
mov
inc
sub
hlt
stc
push
cli
cmp
inc
not
jge
sbb
inc
es
pop
push
aaa
imulb
in
jle
cli
sbb
cmp
adc
sbb
daa
xor
pop
add
xor
lods
repnz
pop
xchg
js
lods
xchg
or
xor
cmpsl
or
movsb
pop
mov
js
cmp
and
jmp
mov
call
clc
dec
mov
in
mov
pop
adc
cmp
xor
movsl
int3
push
es
into
dec
movl
notl
cld
cmp
sbb
xor
lock
pushf
lods
into
scas
das
jmp
xchg
add
test
decl
repz
pop
xchg
fnstsw
stos
mov
adcl
frstor
pop
dec
sahf
scas
mov
xorb
dec
mov
adc
push
popf
xlat
out
jp
dec
lcall
into
jmp
mov
and
xchg
push
pop
in
pop
xchg
lea
loope
int3
mov
test
add
out
dec
lds
call
aad
out
hlt
pop
push
rorb
ja
cmpb
mov
lret
int
add
pop
jle
mov
in
mov
dec
loopne
pop
mov
pop
fbstp
sub
mov
push
repnz
jbe
add
mov
cmp
movl
gs
in
cltd
std
fistl
pushf
and
fs
cmp
dec
mov
in
stos
imul
nop
repz
pop
xchg
cmp
xchg
lahf
mov
imul
adc
lea
aas
in
push
mov
mov
roll
fs
out
mov
dec
jl
xor
xchg
dec
fdivrp
xlat
stos
sbbb
imul
sbb
insb
jb
test
call
lds
call
in
inc
divb
popa
cmp
cmp
sub
faddl
push
sub
and
push
les
push
dec
xchg
push
dec
cmp
push
cmp
inc
pop
push
sub
push
sbb
push
cmp
sub
pop
in
xchg
scas
sbb
inc
mov
orps
cli
xor
push
les
sub
push
enter
cmp
mov
cmp
dec
dec
push
lods
pop
xor
pop
mov
jno
and
popf
sub
xchg
mov
cmp
mov
xchg
sahf
cli
sbb
cmp
bound
call
adc
mov
pop
mov
and
insl
xchg
jo
iret
repz
sbb
xchg
lds
adc
in
mov
imul
push
xchg
sti
mov
bound
push
cltd
xchg
and
adc
dec
adcb
clc
mov
imul
sti
add
or
test
and
dec
mov
test
jg
push
pusha
into
push
lcall
xor
data16
sub
sbb
inc
pop
adc
push
nop
dec
popa
inc
xchg
dec
mov
inc
and
or
ss
pop
fldenv
push
fsubl
push
cmc
xchg
pop
push
daa
push
add
je
lea
and
jae
insb
aad
mov
stc
outsl
cmc
lock
xchg
cmpsb
stos
sbb
or
push
jl
pop
movsb
pop
pmuludq
and
adc
xor
add
loop
sbb
jns
or
in
aas
xchg
pop
loopne
jo
jae
mov
jg
aas
scas
fists
sub
mov
fists
xchg
jp
pusha
jge
add
sti
pop
jne
fdivrs
lret
xchg
jge
lods
lcall
popa
xchg
xor
test
shl
add
mov
jbe
std
adc
lods
cwtl
xchg
mov
push
sbb
add
xchg
int3
enter
mov
mov
add
inc
lock
jb
js
mov
aad
pop
push
and
sahf
outsb
pop
clc
ret
roll
test
adc
int
lahf
jno
dec
inc
mov
out
add
sbb
fsubrs
loope
jl
shlb
adc
xchg
std
popa
ljmp
rcll
push
mov
je
jge
pop
add
inc
test
int3
sahf
mov
scas
cmp
dec
arpl
pop
nop
lcall
push
mov
jecxz
sub
ljmp
subb
shrb
in
add
call
mov
sub
je
negb
push
sub
jns
mov
sbb
push
sbbb
inc
das
or
adc
xor
dec
leave
inc
push
jle
pop
push
ret
xchg
ja
cltd
xchg
jb
lret
leave
xor
gs
pop
cmp
clc
fsubrs
jae
fnstenv
imul
mov
cmp
pop
sub
sarb
inc
pushf
and
loope
outsb
add
mov
cmp
mov
add
sbb
jnp
sbb
test
lcall
add
or
xchg
or
shld
andb
and
pop
dec
sub
icebp
fwait
mov
sub
mov
gs
add
dec
insl
sbb
sahf
out
mov
fistl
imul
xchg
std
sub
cltd
lea
cmp
outsb
mov
xorb
add
xor
mov
push
sahf
movsl
xchg
inc
sbb
jbe
scas
nop
add
enter
out
push
pop
imul
les
jae
and
dec
lret
or
or
cmp
in
and
mov
jecxz
mov
and
pop
lods
lods
mov
and
mov
mov
aam
scas
fdivl
cmc
cli
xchg
and
stos
lcall
decb
repnz
pop
pop
adc
icebp
add
popf
dec
and
push
sbb
jl
test
cmpsl
inc
jp
fidivs
in
mov
mov
inc
cld
stos
add
pop
cwtl
push
or
out
out
and
insb
cwtl
pop
lret
adcl
push
adc
pop
inc
idivl
lret
dec
pop
fdivs
div
mov
popa
addr16
push
rcrb
sbb
rorl
imul
test
add
ret
xchg
jp
dec
add
in
cmc
xor
pop
add
shrl
loop
cli
mov
pop
xchg
sbb
add
gs
stc
lock
adc
push
xchg
jg
ljmp
jecxz
dec
aam
sti
cmp
loopew
add
dec
cli
repnz
lds
mov
xor
outsl
jmp
or
rorb
das
rolb
mov
shll
add
or
outsl
push
push
jns,pn
scas
dec
dec
jns
xor
mov
inc
cli
mov
or
xchg
aam
loopne
insb
add
mov
movsb
inc
sbb
xchg
inc
in
ss
mov
pop
mov
push
aam
and
xchg
loope
mov
cmpsb
xchg
add
jmp
xchg
clc
aas
inc
or
sub
push
lods
dec
mov
xchg
std
or
enter
outsl
xor
cmc
xor
out
data16
push
xchg
jp
push
adc
fs
fwait
push
sahf
fisubs
pop
pop
pop
sbb
lods
fildll
fmul
repz
mov
pop
daa
pop
adc
test
lods
test
fdivr
jp
sbb
rclb
lret
sbb
sti
cmpsb
xchg
jae
cmp
push
gs
sti
test
lock
xor
int3
dec
cli
movsb
mov
in
dec
pop
inc
les
outsl
aas
loop
xchg
in
cld
or
add
mov
jmp
jp
inc
adc
into
add
ror
sub
mov
or
movl
inc
mov
shrb
loop
lock
stc
mov
xchg
das
in
frstor
adc
cmc
iret
out
mov
add
pushf
loop
movsl
mov
mov
cmp
mov
jb
push
insl
out
ljmp
xor
xchg
xchg
imul
xor
cmc
adc
outsb
aad
fcmove
fcompl
mov
pop
addr16
fwait
add
lods
inc
insl
lock
push
cmp
sbb
test
adc
dec
sub
test
push
inc
sbb
mov
add
cmc
mov
cwtl
adc
movsl
lahf
adc
mov
es
mov
popa
arpl
arpl
push
mov
mov
jg
push
pop
jg
inc
inc
lods
lds
nop
test
pop
xchg
or
into
jo
mov
jecxz
push
push
dec
aam
setns
scas
mov
addr16
sahf
call
pop
xchg
dec
fs
aaa
sahf
xlat
add
push
loopne
dec
jns
loope
ds
je
mov
cld
lds
xchg
test
imul
mov
dec
sbb
mov
in
shrl
xchg
icebp
adc
bnd
add
add
test
jl
adc
cs
test
popf
bnd
pop
and
popf
xchg
and
xchg
and
jb
insl
aaa
push
mov
repnz
jmp
sbb
hlt
mov
push
push
psubw
cltd
sbb
sahf
and
xor
std
lahf
loope
sub
sub
es
notl
loop
dec
imul
xchg
adc
mov
andb
fnsave
push
leave
scas
mov
mov
sub
xlat
je
pusha
mov
out
pop
and
jae
xchg
mov
sbbb
loop
dec
jmp
pop
adc
cwtl
mov
pusha
xor
xchg
imul
cmp
addr16
xchg
fadds
sub
xchg
jge
inc
xchg
jp
popl
fmuls
jo
sbb
mov
jl
jns
sub
test
rorl
shll
cmp
pop
imulb
stc
dec
std
cwtl
cli
pop
pop
jbe
push
dec
mov
jl
push
cli
pop
cmpsb
jl
movsl
jno
clc
rcr
cwtl
out
movaps
lods
xchg
scas
dec
dec
nopl
pushf
cmc
outsb
addb
sub
out
mov
adc
je
popa
fldcw
je
insl
scas
xor
jl
jmp
pushf
pop
xor
hlt
jg
pop
xchg
sarl
insb
inc
popf
test
stc
adc
jo
cs
jmp
mov
cld
gs
les
pushf
int
sbb
inc
mov
loope
mov
xchg
mov
mov
lea
cli
mov
jge
sti
mov
jb
out
xchg
out
cs
inc
outsl
push
sub
sbb
lock
testl
mov
lock
cmp
or
addr16
dec
int3
cmp
cmp
jmp
imul
xor
ljmp
xor
imul
add
fisubl
jae
out
fdivrl
adc
call
negb
bound
cmc
dec
fidivs
jno
sbb
iret
sbb
adc
push
push
mov
mov
outsl
and
test
xlat
add
mov
xorl
imul
mov
mov
fdivr
jne
cs
mov
jg
push
cmc
imul
mov
movsb
mov
subb
lcall
mov
jmp
pop
fdiv
aam
lds
les
hlt
inc
shll
and
test
int
adc
fdivrs
xor
cmp
mov
fs
ljmp
jne
push
dec
inc
or
xor
mov
ret
sarl
cmp
aaa
mov
mov
inc
mov
or
jge
insb
jae
nop
popa
popa
jg
and
mov
fcoml
pop
jo
jae
pop
push
lock
out
mov
cmc
stos
loope
ljmp
int3
pop
mov
mov
into
add
repnz
loopne
scas
std
out
lcall
popf
add
xchg
inc
jbe
push
fiadds
in
mov
icebp
mov
sbb
dec
out
push
mov
mov
faddp
movsb
add
pop
jb
test
pop
ret
jmp
xlat
and
push
test
lea
mov
xchg
fisttpl
pop
mov
or
sub
cmp
lock
mov
cmc
and
xlat
sahf
dec
mov
jge
and
int3
jg
movsl
pop
out
push
in
or
popf
sbb
fld
fsts
repnz
fsubrl
push
stc
jge
movsl
ret
popa
mov
add
and
push
xlat
mov
lock
xor
stos
cmpsb
sbb
int3
pop
xchg
stos
cmpsb
xchg
aad
das
subb
int3
sbb
pusha
or
inc
inc
inc
lods
aas
and
xchg
lret
cmp
add
stc
mov
push
test
cs
aad
add
inc
in
sbb
sbb
rorb
dec
cmc
xchg
call
icebp
repz
insb
adc
or
adcl
jmp
inc
ret
adc
mov
xlat
and
fcom
push
push
je
jno
and
imul
adc
subb
pop
enter
cmp
cmpsl
or
subl
insb
cmpsb
add
jmp
aaa
pushf
and
xchg
insl
adc
mov
mov
icebp
clc
inc
sahf
addr16
loop
sbb
popf
test
bound
lods
inc
fidivl
ret
scas
out
pop
lret
mov
faddl
iret
ljmp
sarb
dec
lds
rcrl
cltd
loope
stos
push
cs
add
ret
popf
pop
stos
jle
inc
pop
add
push
inc
mov
pushf
ss
push
xor
fcoms
adc
repnz
gs
and
mov
pushf
insb
mov
iret
jns
shrb
ljmp
jnp
loop
pushf
mov
clc
cmp
xchg
aaa
xorl
add
mov
repz
push
cmp
std
sub
dec
std
mov
fs
jo
xor
xor
push
mov
adc
data16
daa
ds
ss
sub
pushf
bound
in
mov
pop
jo
mov
xor
xchg
sti
jmp
add
sbb
pop
push
mov
pusha
dec
inc
pop
sub
outsb
mov
push
clc
faddp
hlt
jbe
aas
xor
addl
sub
stos
sti
addl
rcll
push
pop
addl
ficoml
adcl
add
sub
aad
scas
xorl
xchg
rolb
decb
test
out
push
fnstsw
or
pop
inc
out
scas
push
ror
mov
stos
adc
or
mov
add
roll
xor
add
cmp
xor
push
jg
loope
adc
sub
aaa
push
jns
icebp
aad
faddl
iret
push
xchg
mov
imul
ret
pop
fst
pop
sub
neg
mov
ret
add
pop
shrb
std
stos
sbb
xchg
mov
mov
dec
pop
dec
xor
rdtsc
stos
sub
fld
cmp
push
mov
jp
fidivl
or
dec
jns
popa
push
je
fwait
adc
sub
orl
or
push
lods
lea
mov
mov
mov
sar
addr16
inc
mov
sbb
xchg
xchg
adc
in
mov
adc
mov
mov
loopne
sbb
in
pop
sbb
iret
and
rorl
in
cs
rorl
outsb
jbe
shlb
mov
pop
cmpsl
jns
sti
in
pop
cmpsl
xchg
mov
clc
or
je
sub
pop
mov
sbb
xchg
sub
ret
push
push
fwait
and
movsl
lahf
jb,pt
mov
sub
enter
shll
cmpsb
mov
inc
pop
rorl
mov
aaa
jecxz
rolb
cmp
mov
inc
popf
fs
cmp
not
dec
adc
into
and
sub
mov
mov
jge
and
inc
sub
xchg
xor
scas
aaa
negb
pop
ret
popa
mov
adc
dec
dec
inc
movsb
pop
mov
shr
lea
call
data16
push
pop
sbb
and
sub
loope
pop
movsl
daa
div
mov
sub
inc
sub
daa
adc
mov
lret
cmp
jecxz
lock
in
pop
jle
loope
push
out
mov
cmpsl
xchg
test
ja
mov
fcomps
sub
pop
or
js
push
jmp
sti
test
cwtl
fisttpl
mov
fwait
enter
sub
pop
or
js
push
jmp
sti
test
cwtl
fisttpl
mov
fwait
enter
sub
pop
or
js
push
jmp
sti
test
cwtl
fisttpl
mov
fwait
enter
and
pop
jg
lock
hlt
cmpsl
in
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
sub
stos
lcall
call
cmp
inc
sbb
addr16
imul
xlat
stos
fwait
testl
cmpsl
cmp
daa
jnp
or
pop
push
pop
jne
daa
mov
testl
cmpsl
cmp
sub
adc
sbb
push
lret
cwtl
cwtl
fidivl
and
mov
adc
sar
mov
andl
sbb
adc
js
mov
out
mov
xchg
xchg
jmp
addr16
aas
stos
aad
add
mov
sbb
push
idivl
mov
les
stos
fxch
clflush
stos
inc
mov
xchg
movb
mov
sub
mov
aaa
lcall
stos
inc
aaa
push
cmp
jb
sbb
xchg
loop
fisubl
pop
adc
or
mov
inc
inc
stos
cmp
xchg
nopl
loop
or
ret
lds
cld
inc
outsl
xchg
add
pop
and
in
stos
lcall
xchg
mov
cmpsl
cmp
inc
sbb
addr16
push
pop
aaa
dec
dec
into
mov
les
popf
stc
scas
notl
cwtl
xor
outsb
and
jbe
je
xor
jmp
xchg
lahf
fisttps
cmpsl
push
push
outsl
or
je
insb
or
ja
sahf
test
xchg
ljmp
push
sub
ja
addr16
push
pop
aaa
dec
daa
mov
testl
cmpsl
cmp
inc
sbb
addr16
push
pop
aaa
dec
daa
mov
inc
fsubs
test
ds
sub
out
push
mov
inc
inc
out
pop
test
xor
stos
divb
movsl
imul
push
sbb
inc
enter
insb
fdiv
loop
add
std
sbb
loop
push
add
test
push
call
pop
mov
jnp
cmp
cmp
stos
xor
mov
jno
push
mov
sar
xlat
test
cs
add
dec
repz
cmc
outsl
int
jne
outsb
or
icebp
lock
adc
mov
out
xchg
xor
imul
loop
pop
lods
into
sub
loope
pop
ret
cltd
xchg
lret
or
lods
xchg
pop
stos
sti
mov
fisubl
clc
xchg
and
lock
xor
add
and
xchg
cmp
push
outsl
sbb
mov
shlb
push
mov
ljmp
mov
sub
push
mov
imul
in
sbb
push
inc
pop
xchg
cli
lahf
inc
int3
add
das
test
bound
scas
int
sahf
xor
mov
inc
mov
dec
and
mov
xchg
popa
testl
arpl
pop
sbb
fcmovb
mov
sbb
or
push
inc
int
mov
push
out
gs
cwtl
lcall
mov
ja
adc
jbe
repnz
je
pop
test
mov
fidivrl
shlb
mov
cmpsl
sbb
sbb
xlat
sbb
fiaddl
insb
cltd
adc
cmc
xchg
or
jnp
ds
mov
mov
scas
jno
push
push
mov
sub
es
out
xor
pop
lods
and
lock
xor
add
ds
push
js
scas
mov
xchg
mov
pop
jnp
pop
sub
add
cmp
daa
pop
je
lods
jp
lods
push
lret
pop
andb
nop
push
or
add
out
jge
out
ret
fwait
mov
adc
sbb
cmp
push
lcall
push
mov
ret
push
dec
sub
mov
cld
insl
imul
cmpsl
mov
lds
stos
arpl
clc
inc
lcall
dec
mov
fs
xchg
or
pop
lds
movsl
addr16
lds
inc
iret
ja
test
mov
inc
outsl
sti
pop
pop
inc
subl
inc
inc
cmpsl
fs
mov
adc
outsl
pop
aam
shlb
dec
push
or
orb
add
inc
and
mov
pop
in
out
sar
dec
mov
push
bound
call
dec
ljmp
call
scas
push
pop
xor
sub
out
inc
dec
push
push
fmuls
cmp
xor
jno
cmpsb
add
lahf
vphaddwq
dec
daa
and
push
popa
jb
mov
jns
and
jp
ds
adc
fidivl
aad
add
jnp
mov
hlt
daa
add
ret
inc
xchg
and
lds
or
lcall
sbb
pop
xlat
jno
xchg
add
and
daa
mov
xchg
dec
leave
xchg
pop
mov
mov
cmpsl
mov
jo
push
pop
add
xchg
jmp
in
aam
push
cmc
sub
arpl
mov
test
dec
xor
ljmp
rcrl
jo
sbb
jecxz
pop
pop
xchg
incb
ljmp
lret
loopne
dec
or
mov
mov
stos
mov
lds
aas
jecxz
js
pushf
jbe
fsts
and
sarl
loopne
out
lret
dec
mov
arpl
adc
dec
movsl
enter
test
mov
push
pop
mov
push
fldt
adc
std
sub
aas
jb
fld1
jnp
dec
and
cmp
mov
dec
pop
xchg
test
lahf
push
inc
pop
fmul
shrb
in
in
push
jnp
mov
add
je
dec
fwait
push
adc
dec
shrl
dec
jp
mov
scas
cmpsb
cli
pop
out
stc
mull
stc
iret
andb
repz
ds
push
sub
dec
movsl
pop
xchg
mov
outsb
mov
lret
inc
xor
std
pop
pop
std
test
loopne
xchg
sub
imul
insb
mov
or
std
dec
daa
lcall
out
mov
cmpsl
addr16
xorb
popf
iret
mov
out
addr16
xchg
pop
aam
pop
dec
pop
mov
push
mov
addr16
cmp
xor
testb
pop
lods
outsl
mov
xchg
test
lea
test
and
mov
sub
inc
outsl
mov
dec
pop
fs
fs
cwtl
shlb
or
insl
sub
ljmp
push
aad
aas
aad
jle
dec
sub
pop
shlb
dec
mov
ds
mov
fistps
xchg
jnp
jnp
out
jl
je
repnz
mov
pop
push
sti
popf
push
testb
mov
cmp
jge
loopne
hlt
or
dec
xchg
stos
cmc
lods
test
xchg
out
fwait
push
jp
mov
sbbb
or
sbb
pop
add
mov
lods
scas
leave
mov
fistpll
xlat
xchg
inc
push
inc
imul
shlb
ja
xor
sub
aam
xchg
mov
jns
les
inc
clc
mov
push
mov
loope
adc
inc
movsb
adc
adc
stos
mov
jne
mov
je
pushf
xchg
cmp
xchg
mov
add
cmp
or
sarb
std
or
dec
push
mov
push
pusha
inc
or
add
sbb
push
and
out
ret
inc
inc
or
push
test
notb
insb
pop
leave
jb
cltd
sbb
adc
mov
inc
lahf
pop
mov
push
insb
ret
mov
xor
in
lea
mov
pop
movsb
mov
in
int
xchg
pusha
stc
xchg
mov
popf
les
stc
cli
stos
or
sahf
pop
dec
fwait
mov
jp
sbb
adc
test
push
shrb
dec
ss
mov
add
xchg
ljmp
dec
add
jge
pop
fsubrp
stos
or
push
xchg
es
jmp
popf
mov
popf
imul
test
idivb
inc
adc
xor
xor
repnz
mov
cli
lock
aam
or
loope
clc
lods
lcall
and
or
xchg
mov
sub
das
pusha
inc
xchg
mov
sbb
call
jne
lods
dec
mov
enter
jb
repz
outsl
les
pop
jns
icebp
adc
sbb
pop
mov
lea
inc
jp
dec
and
add
ljmp
movsl
mov
or
dec
push
lock
leave
adc
push
enter
adc
push
pop
sub
stos
je
sbb
ret
sbb
jl
les
ret
lret
and
sti
ja
inc
mov
mov
xlat
addb
movb
inc
icebp
jecxz
out
lret
or
add
aaa
rorb
in
push
xor
sahf
test
addl
pop
xchg
shrl
data16
jo
jnp
push
test
shl
dec
clc
shll
pop
fldcw
fimuls
dec
adc
jne
sub
push
cmpsb
test
js
xchg
pop
repnz
loope
rorl
daa
addl
outsl
shrb
mov
movb
or
insb
aaa
sar
xchg
icebp
adc
aaa
popa
mov
movsb
mov
ret
out
or
mov
or
and
dec
pop
int3
aaa
das
xor
fisubrl
fmuls
push
movsb
sub
cmpsl
loope
mov
lea
jne
push
pop
ljmp
jae
enter
lods
mov
add
cmc
repnz
stos
jge,pn
les
jbe
mov
xchg
sbb
lock
cmp
test
hlt
xchg
add
add
pop
jae
mov
int3
test
scas
xorb
incl
ds
aad
cmc
test
xchg
ss
jge
fistpll
mov
push
lret
icebp
jae
cmp
test
mov
sub
mov
cli
aas
jmp
inc
movsl
int
push
lds
xchg
push
add
push
cwtl
lret
xchg
int
xor
mov
ljmp
aaa
or
add
pusha
jle
xchg
bound
sahf
test
xchg
add
dec
jle
dec
push
push
inc
ss
dec
fists
pop
repz
xor
in
mov
stos
dec
sub
cwtl
xor
mov
hlt
es
gs
dec
jb
rorl
dec
pop
sub
push
ja
push
jno
xor
andl
xchg
mov
fyl2x
pop
out
movsl
jl
movl
lods
pop
xchg
mov
adc
mov
pop
cltd
pop
lahf
cld
ljmp
adc
int3
adc
jae
arpl
cmc
sub
adc
sub
int3
xchg
pop
orl
and
fs
mov
mov
inc
mov
lret
les
and
and
sub
std
cs
sahf
mov
es
test
mov
and
cs
fld
xchg
leave
pop
ja
xor
inc
mov
xchg
sahf
xor
adc
shlb
loopne
lock
ror
mov
sub
xchg
sbb
shll
mov
je
cmp
push
jae
adc
cmp
es
int
ljmp
add
clc
xchg
add
dec
and
outsl
sbb
mov
cltd
and
lss
test
jno
ja
mov
push
pusha
roll
adc
or
push
ja
addb
cwtl
int
pop
sub
add
pop
jecxz
lcall
stc
dec
jl
lahf
cmp
popf
adc
add
push
adc
jmp
cwtl
ds
xor
shrb
scas
push
ja
sub
stos
cmp
cmp
add
and
loopne
sarl
in
out
shlb
ds
and
xor
jno
arpl
jnp
lret
push
dec
stc
pop
dec
ja
sbb
add
xor
mov
push
test
adc
mov
bound
test
mov
dec
loope
push
int3
mov
es
mov
xor
push
mov
mov
cmp
inc
out
ds
jecxz
mov
inc
dec
shl
pop
mov
jp
rcrl
ljmp
xor
lret
ficoml
fmulp
rcr
outsl
into
mov
movsb
mov
pop
cmp
mov
xlat
add
ja
mov
dec
mov
jmp
in
imul
mov
les
stos
sub
lock
jecxz
inc
sbbb
xchg
add
lret
cli
icebp
arpl
cmp
cwtl
aas
rcrb
add
xor
popa
dec
cltd
mov
dec
js
xchg
stos
sti
push
mov
fistpl
lods
mov
add
add
add
xor
fs
sarl
push
add
jge
in
inc
popa
roll
sti
negb
mov
sub
xchg
shrl
fcmove
xchg
jne
mov
fnsave
mov
into
inc
rcll
movsl
jl
daa
fdivl
jmp
fistpl
in
addr16
pop
push
sti
mov
int3
pop
cmpsb
jae
cwtl
push
dec
mov
insl
add
adc
jnp
lret
cs
scas
push
mov
push
int3
push
subl
test
in
lock
fimull
out
mov
lahf
lods
aad
jb
inc
std
xchg
cmp
add
test
out
stc
dec
fisttps
fwait
out
sub
das
mov
push
push
sbb
cs
insl
mov
xchg
leave
iret
sti
pop
add
popa
sahf
sub
mov
fs
das
xchg
mov
mov
stos
shrb
inc
fisttps
shrl
sub
jecxz
test
test
mov
xor
outsb
into
pop
and
jp
mov
cs
int
inc
popa
dec
aam
mov
pop
pop
mov
push
test
inc
aad
jns
pusha
repnz
out
std
insb
add
xlat
pop
and
cmp
pop
or
out
adc
sub
cmp
sahf
sub
in
push
push
pop
sbb
shlb
mov
sub
dec
lods
mov
sub
xor
rclb
std
sar
addr16
push
adcb
mov
daa
out
inc
lock
decl
push
push
sub
ret
insw
sub
sbb
mov
lahf
jae
in
jmp
pop
pop
loopne
fists
ja
xchg
fsubrs
fistpl
jp
lock
push
cmpsl
xadd
xchg
mov
clc
into
ljmp
inc
pop
pop
aam
sub
sbb
push
push
and
mov
xlat
pop
fistpll
cmp
ret
rorl
push
pop
pop
arpl
sbb
aad
mov
loopne
jmp
mov
xchg
cmpsl
hlt
mov
pop
push
pop
xor
jl
mov
div
xor
daa
test
xor
mov
stos
inc
inc
inc
and
inc
popf
fisttps
xor
xchg
jg
push
mov
aam
jns
inc
dec
dec
add
cs
xchg
ret
inc
xor
cwtl
popf
cmp
dec
mov
in
in
test
lcall
scas
jg
or
ret
sbb
cs
sub
js
pop
mov
lds
xchg
fimuls
cld
insl
jnp
sub
ret
in
dec
xchg
sub
add
repz
rol
dec
jge
jno
movsb
out
ds
push
inc
into
or
negb
mov
pop
sbb
dec
ret
push
jp
mov
mov
add
xchg
mov
daa
adc
mov
mov
lods
pop
lret
mov
pop
sahf
jmp
jbe
jbe
dec
out
mov
test
pextrw
xor
sub
mov
adcl
lcall
sti
sub
sbb
movsb
repz
jmp
xchg
arpl
aam
bnd
and
mov
jp
loop
ja
xor
int3
cltd
call
rcr
mov
mov
cmpl
push
adc
xlat
mul
pop
clc
or
gs
hlt
stos
outsb
lret
pushl
in
xor
inc
jae
pop
mov
gs
arpl
xorl
call
push
fsts
les
mov
pusha
mov
imul
fcoml
aad
pop
js
sbbl
adc
loopne
push
mov
gs
jno
pop
add
loopne
in
sbb
es
mov
fs
cmp
jmp
sbb
xor
sbb
inc
jmp
mov
and
fxtract
aaa
add
leave
lods
sub
add
outsb
sbb
daa
jmp
fistps
mov
mov
ret
dec
les
scas
fists
ja
movsb
in
movsl
dec
std
mov
pop
cmp
pop
mov
pusha
jle
scas
inc
icebp
shlb
ss
bound
xor
mov
xchg
jb
sub
je
or
sbb
dec
stos
cltd
dec
sub
lret
and
shlb
pop
mov
jb
outsb
aas
or
push
jo
adc
push
jbe
and
sbb
popf
mov
lds
lret
les
lcall
pop
aaa
sub
rcr
sbb
push
addr16
push
cmp
out
mov
hlt
sbbl
cmp
cld
aaa
fsubs
jne
fcoml
scas
jb
mov
adc
fsubrl
adc
and
adc
sbb
dec
cmp
mov
jbe
mov
sub
in
adc
inc
inc
fsubrs
inc
jl
jo
ja
push
stc
stos
and
repnz
mov
cmp
sub
repnz
pop
test
cs
movsb
sar
inc
mov
lcall
aaa
mov
cmp
xchg
lcall
mov
dec
push
nop
cmp
call
int
mov
out
loope
mov
push
jo
inc
ficoml
ljmp
loopne
dec
add
xor
jae
pop
cmp
ja
out
cmp
lods
mov
inc
lahf
es
incb
mov
popf
cmp
adc
loopne
loopne
movsb
notb
pop
js
into
xchg
data16
sahf
pushf
adc
pop
movsb
lock
rol
stos
sub
push
add
dec
in
adc
ret
adc
sti
iret
push
inc
out
das
or
scas
rorb
xchg
fldl
sahf
jno
in
xchg
pop
push
inc
and
push
popa
mov
jp
movsl
jne
nop
scas
pop
addr16
mov
out
loope
inc
stos
sbb
push
push
adc
mov
sysret
nop
pop
sub
sarb
xor
pop
adc
fadd
cli
sub
stc
sbb
adc
cmc
std
inc
out
js
adc
add
sbb
mov
jno
imul
add
cmp
cmp
cli
adc
adc
cmp
ficoms
push
cld
cmp
lods
adc
test
leave
mov
je
into
mov
xchg
xor
das
sub
push
and
aaa
dec
push
and
push
xlat
mov
jl
or
adc
mov
mov
mov
mov
hlt
stos
mov
mov
sbb
icebp
push
stos
or
or
pop
mov
test
aaa
inc
mov
sti
nop
aad
adc
cltd
xor
fstpt
pusha
daa
adc
push
pop
fildll
jnp
pop
loop
cwtl
outsb
and
loop
sub
adc
or
jmp
jnp
flds
sub
inc
push
mov
mov
jns
mov
out
bound
cmpsl
mov
and
or
xor
inc
mov
push
xchg
outsb
inc
rorb
fstl
insl
enter
test
es
addb
clc
or
mul
mov
cmp
subl
iret
ja
sbb
push
fcomps
adc
push
push
ds
div
jne
dec
xor
mov
std
or
mov
leave
jae
insb
adc
pop
lds
push
pushf
orl
pushf
clc
mov
lahf
jnp
cs
mov
sbb
fwait
pop
inc
mov
inc
xchg
imul
mov
hlt
scas
pop
scas
jecxz
icebp
loop
arpl
mov
stc
stos
xor
or
push
sub
in
dec
fidivl
adc
add
cmp
cmp
data16
subl
adc
adc
mov
test
fidivl
adc
adc
je
dec
hlt
in
mov
or
in
xchg
mov
mov
ja
adc
jle
cwtl
push
xchg
scas
jno
cmpsl
in
ja
pop
lret
inc
jo
inc
mov
mov
xchg
and
or
xor
int
pushf
js
or
shlb
les
bound
rorb
adc
lcall
in
sub
and
insb
sbb
cltd
lcall
sbb
inc
mov
adc
jnp
fistl
jnp
sbb
popf
jb
fs
test
clc
fnstcw
stos
push
inc
lds
aad
js
inc
mull
jecxz
in
das
pop
mov
pop
or
sbb
mov
and
imul
loope
and
repnz
jnp
outsl
mov
or
dec
or
mov
inc
adc
dec
jae
sbb
bound
stos
popf
jns
xchg
pop
dec
popf
daa
aad
adc
into
rolb
scas
push
iret
xor
xchg
fs
cmp
in
xor
cmp
aad
mov
mov
xchg
sbb
cwtl
arpl
and
dec
jb
cmpsb
push
mov
dec
jae
in
pop
pop
sub
push
push
mov
aaa
cmp
fs
add
imul
sti
mull
out
cmp
outsl
sbb
adc
sbb
cmpsb
pop
fistpll
push
fwait
cld
lock
inc
sub
sbb
jp
popf
mov
mov
insl
and
mov
mov
mov
inc
test
jl
push
pop
subl
js
add
fs
push
jmp
lret
fildll
mov
fs
sub
jnp
std
imul
mov
in
scas
out
arpl
sbb
negb
pop
or
cmpsb
popf
and
pop
xor
lock
or
jle
cld
or
push
cwtl
mov
or
and
mov
daa
push
ja
inc
add
and
stc
and
rolb
add
neg
movsb
xor
lret
test
aad
dec
leave
lock
pop
dec
cmp
enter
arpl
mov
jbe
inc
fidivrs
and
in
and
ret
adc
outsb
ret
les
loop
nop
xor
aad
inc
adc
push
inc
cmp
pop
ja
mov
lods
stc
pop
out
xchg
add
into
mov
mov
stos
movsb
lods
jge
push
lods
inc
add
xor
sub
adc
int
mov
sub
mov
cmp
jne
jae
nop
jns
js
adc
int
jns,pt
popa
out
mov
or
push
testl
cmpsl
cmp
inc
sbb
addr16
push
pop
aaa
dec
daa
mov
testl
cmpsl
cmp
inc
sbb
addr16
push
pop
aaa
dec
daa
mov
ja
out
xchg
ljmp
xlat
sub
ja
addr16
push
pop
aaa
dec
daa
mov
testl
cmpsl
cmp
in
mov
or
or
enter
push
jle
dec
ss
xor
dec
sub
and
incb
scas
incb
jns
jle
jle
pop
es
ds
push
jbe
data16
incb
scas
mov
out
push
addr16
push
ss
es
push
daa
inc
push
jbe
data16
test
fisubl
test
mov
push
push
jle
add
lret
ret
jne
test
mov
icebp
fcmovbe
inc
push
xchg
das
outsb
push
repz
dec
daa
dec
fldl2t
scas
sarl
sub
out
mov
cmpsl
adc
jmp
sbb
add
pop
rcrl
jno
out
push
add
mov
push
sti
cmc
and
pop
out
jmp
aad
or
push
out
push
fisubl
sbbb
in
xchg
into
or
mov
sub
jle
mov
out
add
add
mov
mov
xchg
jle
add
rcll
popf
mov
out
mov
add
outsb
sub
out
push
jle
dec
ss
es
and
push
jbe
notw
cmpsb
mov
cmpsb
mov
xchg
sub
pusha
dec
cmp
or
jae
lcall
enter
mov
outsb
push
jle
sub
pop
jno
xor
bound
pop
data16
sar
ljmp
int
incb
dec
jb
inc
pop
push
push
cmp
inc
push
jbe
data16
xchg
incb
scas
mov
out
push
jle
dec
ss
es
ds
push
jbe
data16
xchg
incb
scas
mov
out
push
mov
testl
and
rorb
loopne
clc
push
xchg
addl
ret
add
pop
stos
aad
movsl
and
mov
test
outsl
sub
outsb
jge
daa
shll
push
lret
stos
cmp
popa
das
repz
in
in
pop
xor
out
or
jp
and
add
xchg
adc
jg
imul
ds
xor
mov
xchg
dec
fldt
mov
cmp
push
scas
loop
sub
add
js
in
call
scas
in
jae
mov
repnz
sarl
mov
pop
fs
push
ret
lods
out
pop
cmp
sbb
push
mov
mov
push
pop
xor
out
fcompl
cmp
iret
fwait
push
push
xlat
es
sub
jns
movsb
mov
repz
rorl
insl
pop
inc
jp
add
stos
out
movsl
xchg
xchg
sbb
imul
and
es
popa
nop
cmp
cmp
aam
inc
out
mov
mov
out
outsb
in
jl
dec
push
cltd
aas
push
sbb
and
in
adc
aaa
mull
call
jne
and
imul
lock
fcoml
cmc
movsl
das
fsubrl
push
push
fidivl
push
cwtl
mov
xor
push
adc
add
xchg
mov
mov
aad
pop
mov
xchg
mov
xorl
mov
iret
test
or
shl
mov
idivb
pop
outsl
cli
sbb
cmp
ss
push
pop
int3
fnsave
or
icebp
jb
jno
add
add
xor
jecxz
push
cmp
jg
inc
mov
dec
adc
pop
nop
sbb
ss
in
lcall
test
adc
or
pop
xor
popf
and
int
pop
dec
sbb
pop
lods
adc
ja
adcb
inc
and
lret
popf
cmp
shrb
and
pop
sub
cmp
subl
scas
call
push
lcall
sub
mov
push
mov
stos
ret
add
fnsave
ret
addr16
mov
lds
stc
xor
int3
dec
mov
aaa
icebp
out
ffree
mov
je
cmp
out
jecxz
inc
int3
or
sbb
mov
push
pop
in
dec
push
ror
mov
adc
cmpsb
outsb
jae
cli
mov
aam
push
sub
les
das
aaa
shll
int
mov
das
mov
xor
dec
pop
pop
and
adc
xchg
sub
or
cmc
getsec
jbe
mov
xlat
mov
popf
and
or
adc
stos
and
add
lahf
cmp
pop
addb
loop
loop
dec
jnp
popa
cmpsb
and
aas
cld
aam
push
imul
sbb
mov
xor
mov
mov
in
out
pop
aas
mov
mov
sarb
cmp
cmc
imul
push
inc
push
mov
daa
adc
test
dec
dec
pop
cmp
ret
mov
mov
add
cmc
mov
aas
xor
xor
pop
mov
mov
js
and
dec
loop
cltd
jmp
insl
jns
mov
and
out
repnz
xor
mov
out
inc
cmc
test
fnsave
and
leave
adc
shl
test
xchg
add
inc
shrl
hlt
out
push
xchg
jl
cld
pushf
dec
lods
pop
adc
xchg
mov
pusha
pop
push
push
daa
es
fnsave
inc
xchg
xchg
rorl
lret
sahf
cmp
dec
dec
jecxz
mov
sub
inc
sbb
js
loope
daa
pandn
mov
fmul
lods
and
cmpsb
xchg
inc
xor
mov
mov
inc
cld
mov
mov
jo
scas
sub
sub
push
jle
ret
push
imul
mov
dec
pop
test
xchg
add
ror
pushf
cmpsb
call
stos
xchg
mov
mov
rcl
inc
adc
rcll
mov
push
or
nop
out
es
lret
shrb
lds
dec
cwtl
cmpsb
test
daa
or
push
je
mov
xor
inc
iret
and
and
in
stc
lock
into
mov
loopne
jno
es
pop
dec
mov
daa
mov
mov
jne
xchg
fwait
lcall
ja
addl
cmpsb
cmp
rclb
add
xchg
sti
sub
stos
pop
lcall
sbb
sbb
add
push
mov
lahf
cwtl
clc
jae
inc
pop
mov
inc
fiadds
imul
pop
sahf
arpl
xchg
insl
adc
xchg
push
shlb
mov
dec
jp
inc
movsb
cmpb
sub
fistl
jle
cmc
inc
decb
inc
push
xor
cmp
cmc
jge
or
imul
jmp
pop
dec
or
adc
loop
imul
insl
fdivl
aas
pop
inc
arpl
mov
fisubs
out
shlb
jge
adc
mov
outsb
sbb
adc
mov
imul
aam
add
lods
mov
andl
pop
sbb
cmpsb
stos
mov
mov
dec
jo
cmpsl
notb
mov
insl
out
fdivr
lret
push
xor
adc
movsb
mov
sub
pop
jns
pop
dec
insb
adc
push
sbb
mov
jo
mov
outsl
in
dec
idiv
xchg
xchg
inc
icebp
xchg
aam
jne
insb
ret
shrl
mov
adc
adc
xor
repnz
adc
adc
insb
adc
jmp
pop
sbb
sahf
nop
sbb
adc
xor
pop
ja
xchg
jno
mov
lock
test
jns
jbe
or
xchg
sbb
xor
mov
dec
call
adc
loopne
leave
movsb
out
int
inc
cltd
ljmp
jge
inc
mov
and
xchg
fildll
fbstp
hlt
adc
aas
mov
aam
popa
pop
enter
fstl
ss
sub
insb
mov
cmp
andb
in
loop
push
shlb
cmp
dec
in
das
loop
mov
sbb
jl
ficompl
jle
pop
add
push
and
add
adc
cmp
test
sub
js
adc
fimuls
aaa
sub
jg
cmp
lret
lahf
xlat
xlat
pop
or
test
and
std
lcall
movsb
fwait
mov
stc
cli
jge
adc
mov
popf
mov
rcll
xorb
inc
mov
rcr
ss
dec
stos
jno
rcrl
mov
mov
mov
or
popf
adc
sbbl
std
leave
dec
scas
repz
arpl
mov
cmp
pop
push
out
sti
push
out
push
adc
mov
xchg
xor
in
sub
mov
xchg
pop
rcll
or
adc
pop
popa
push
test
or
addr16
cmpsb
or
and
into
ficompl
push
jno
jmp
dec
cmp
mov
xor
mov
jmp
movsl
sbb
cmp
das
mov
cmp
aad
cwtl
fxch
adc
jle
cwtl
ret
aam
xchg
pop
mov
rcrb
lds
adc
testl
insb
cmp
pusha
xor
cmpsl
outsl
mov
repnz
mov
jno
xchg
notl
mov
and
sbb
sub
push
sub
testl
aas
popa
jecxz
push
push
push
jmp
cli
push
std
or
aas
xchg
fabs
lcall
lahf
mov
ret
xchg
cltd
sub
push
aad
mov
cmpl
inc
fwait
fwait
jo
mov
inc
push
xchg
int
or
dec
outsl
into
lahf
or
and
and
xchg
xor
add
ss
inc
jp
mov
bound
mov
addr16
and
pushf
mov
push
pop
jl
push
jno
and
test
shrb
mov
daa
lods
in
sbb
jp
sbb
pop
clc
xchg
adc
xchg
ffree
scas
push
cltd
pop
or
inc
inc
xchg
dec
or
repz
adc
outsb
daa
dec
loopne
mov
out
xor
push
dec
xor
mov
mov
push
aaa
in
hlt
inc
shlb
insb
sbb
lods
inc
dec
cmp
mov
mov
aam
dec
jl
push
ficomps
xor
mov
outsb
cmc
pop
inc
lahf
xchg
xchg
cld
out
adc
sbb
js
jp
movsl
test
mov
xor
arpl
sub
out
sub
and
jl
mov
ficomps
test
out
or
jp
cltd
je
lds
mov
roll
pusha
subb
jp
lods
sub
mov
mov
pop
and
inc
repnz
std
test
or
sub
aaa
xchg
or
xchg
cmp
int
pop
nop
cld
mov
or
cmpb
and
push
jae
sbb
icebp
xor
push
mov
xchg
and
push
pop
xor
mov
xor
and
fadds
fisubs
push
jmp
push
fwait
dec
cli
sbb
sub
push
jge
fiaddl
je
xor
sti
push
dec
sub
pop
or
sti
out
inc
push
repnz
xor
ret
adc
repnz
fnstsw
adc
rcrl
jno
mov
iret
pop
js
inc
push
lret
je
and
xchg
jae
lret
xlat
xor
rcrl
and
ja
lea
es
lds
out
inc
jmp
jbe
fimuls
cmpsb
jae
inc
insl
push
push
mov
fnstcw
repnz
roll
mov
enter
scas
cld
mov
or
arpl
xor
push
mov
inc
call
pop
dec
mov
mov
dec
jb
scas
hlt
test
mov
das
pusha
addl
jnp
mov
pusha
and
out
sub
xchg
mov
mov
cmp
xchg
ljmp
or
insl
dec
mov
sti
mov
push
mov
push
dec
dec
xchg
add
pop
xor
dec
out
mov
sub
xchg
call
out
sbb
ljmp
xor
sahf
fdivr
mov
scas
ret
add
and
and
jg
hlt
cmpsb
or
push
jo
fbstp
cmpsl
mov
jnp
into
push
and
fsts
push
pusha
daa
mov
in
push
and
insl
into
ss
mov
sub
dec
mov
pop
incl
shlb
fcmovb
jmp
push
cmpsb
ror
fs
mov
cmp
or
and
repnz
ja
push
push
cmpl
cli
pop
cmp
sbb
sti
leave
cmpsb
fstpt
in
or
pop
pushf
ljmp
jg
pop
fwait
pop
mov
in
test
adc
jne
pop
jmp
jnp
mov
pop
mov
mov
inc
pop
add
and
push
out
sub
and
cmp
in
pop
ret
xlat
popf
and
nop
push
ret
sbb
xchg
inc
and
rorl
call
inc
ret
push
xchg
aas
mov
jp
cwtl
mov
test
mov
jecxz
call
mov
loope
mov
mov
push
loope
iret
jmp
push
mov
ficoms
enter
nop
scas
movsb
jno
jg
push
add
out
loope
and
cs
fidivrs
pop
js
cmc
rclb
mov
testb
mov
lcall
bound
ljmp
inc
ret
jl
sbb
sub
jo
cmp
stos
push
xor
and
or
dec
cmp
mov
cmpsb
js
out
std
inc
jg
sbb
outsb
dec
and
rorb
xor
sbb
xchg
popa
push
cmc
dec
fwait
mov
imull
fxch
ret
mov
int3
mov
aas
fcoms
cli
stc
cmc
xchg
pushf
jne
mov
pop
sub
mov
push
icebp
sub
cwtl
fwait
mov
filds
mov
xor
addps
mov
fidivrs
xorb
jle
je
xchg
mov
or
fistl
out
mov
add
dec
lahf
push
clc
pop
push
mov
aad
mov
lret
jno
movsb
cmp
jbe
scas
hlt
xchg
insb
xor
insb
jmp
insb
add
and
inc
xor
out
popf
xchg
mov
clc
add
pushf
mov
lret
in
mov
lcall
pop
mov
xor
ljmp
adc
xchg
pop
jns
and
outsl
or
xchg
sbb
push
test
das
or
jecxz
pop
std
add
xchg
pop
sbb
int3
andl
dec
outsl
lods
xchg
pusha
mov
fs
out
pusha
ret
sub
jle
sub
inc
jmp
mov
arpl
mov
test
in
cmc
xchg
mov
test
push
and
push
das
sbb
lods
push
ss
sti
cmpsb
cmpsb
lahf
nop
das
dec
mov
popl
lret
outsl
jns
inc
popa
sbb
mov
mov
daa
cmp
loop
push
push
or
add
into
repnz
pushf
push
mov
pop
es
dec
pop
fcmovb
xchg
lds
jns
mov
cld
and
outsb
sbbl
add
xchg
pop
or
mov
addr16
sbb
sub
lahf
jmp
sbb
push
cld
rolb
into
mov
jecxz
inc
ret
fldenv
orb
inc
lea
sub
mov
adc
jmp
and
stc
mov
adc
adc
push
pop
rclb
cltd
inc
and
icebp
inc
ja
repnz
out
cld
and
pop
shl
adc
gs
sbb
push
xchg
cltd
add
xchg
std
mov
pop
int
mulb
mov
imul
scas
push
fstps
inc
shl
pop
fmull
inc
add
sbb
pop
in
inc
mov
jbe
cmp
out
jl
mov
push
or
push
icebp
lods
stos
andb
mov
daa
leave
test
mov
test
repz
inc
jg
pop
cli
dec
mov
mov
in
inc
inc
ficoms
and
lods
dec
in
repz
push
push
cmp
insl
int
fstpl
lea
xchg
mov
stos
cmp
pop
xchg
call
xlat
jmp
loop
cmp
dec
push
cwtl
aam
dec
mov
imul
lcall
jo
popa
aas
std
sub
insl
cld
testl
hlt
push
pushf
pop
popf
rcrb
aad
aaa
loope
jb
scas
mov
and
shrb
ja
jge
adc
fsubp
inc
mov
cltd
imul
jo
lret
mov
pop
movsb
scas
pop
mov
cld
es
in
jg
ret
inc
cltd
popa
inc
push
ja
aaa
inc
fsubrs
addr16
xor
mov
fsubs
jmp
rcrb
je
jmp
enter
jecxz
xchg
jb
aaa
add
jnp
mov
loop
dec
dec
mov
fdivl
xchg
lret
aad
scas
and
bound
sbb
cltd
mov
mov
mov
ret
sti
inc
pop
dec
jl
adc
daa
hlt
pop
ljmp
mov
mov
aas
fcmovb
sbb
cmp
fs
inc
lret
popf
out
sub
in
sub
dec
cmp
fsubp
repz
pop
inc
pop
int
mov
ss
inc
and
push
mov
out
sbb
pop
mov
dec
fsubs
popf
xor
jp
scas
cmc
add
out
ret
gs
mov
jbe
and
rorl
xor
xor
mov
pop
sub
loop
orb
cmpsb
inc
pushf
subl
or
jg
sahf
into
ljmp
adc
repz
popf
pop
jnp
or
mov
sbb
sub
pop
roll
cld
push
inc
mov
repnz
mov
movsl
add
or
push
fcompl
and
mov
pop
xchg
stos
cmp
add
stos
xchg
xor
pop
jno
subl
pushf
call
out
fwait
fs
fstpt
ret
or
xor
mov
daa
loop
mov
pop
aaa
fbld
lcall
adc
stos
push
lret
cs
lret
and
cmp
inc
cs
pop
mov
mov
outsb
mov
mulb
les
jecxz
adc
dec
cmp
dec
pop
in
das
jle
pop
stos
pop
mov
inc
and
adc
shrl
pop
inc
lret
cmp
adc
push
mov
icebp
dec
mov
xchg
or
cltd
or
test
mov
clc
adc
or
pusha
lahf
cmp
inc
ret
jno
loop
mov
and
pmulhuw
cs
add
push
rep
and
mov
xchg
daa
pop
pushf
gs
pop
xchg
imul
add
fnsave
push
sub
lods
mov
xchg
jle
jmp
mov
pushf
cmp
stos
repz
aaa
add
inc
or
pop
push
cmc
push
repz
fs
pop
xchg
pop
arpl
mov
lock
xor
add
cmc
out
push
mov
xlat
push
mov
mov
and
xchg
loope
fisubrs
repnz
sub
imul
dec
sahf
or
movsb
imul
imul
mov
cmp
je
mov
dec
pop
loopne
out
add
fs
addr16
out
cs
jb
cmpsb
mov
int3
dec
mov
xor
inc
and
push
pop
xchg
or
repz
and
test
std
lret
cmp
lret
jecxz
mov
mov
or
inc
ja
popa
mov
pop
mov
xchg
jecxz
or
inc
fistps
shl
push
jno
test
repnz
loopne
and
sub
push
into
push
sub
sbb
aad
fcompl
scas
outsb
fstps
andl
xor
inc
hlt
mov
jbe
divb
into
sub
pusha
divb
dec
je
in
imul
cld
sbb
adc
call
sbb
xchg
sub
xchg
insl
jo
jl
cmp
xchg
mov
mov
scas
sub
out
jl
aas
cmpsb
dec
jecxz
aad
and
fmuls
or
ja
out
xor
xchg
inc
cmp
jne
jnp
nop
movsb
xchg
xchg
push
subb
jno
in
faddp
in
cltd
lods
cmc
adc
add
or
xchg
into
test
dec
jae
mov
test
mov
popa
es
sub
lahf
xchg
aaa
int
pusha
mov
push
pushf
mov
clc
adc
sbb
pop
test
mov
rclb
mov
cld
test
int3
sub
cli
fsts
ret
mov
sbbl
mov
dec
lretw
mov
or
xor
adcl
lcall
cmp
test
je
loopne
test
mov
mov
lcall
lods
mov
jbe
cs
dec
pop
xlat
dec
test
ljmp
test
cmp
aam
out
test
jmp
sub
ds
adc
rcrb
inc
shrl
and
or
rorl
xor
mov
test
push
es
cmpsb
test
das
inc
pop
sti
fldt
inc
enter
pusha
jo
icebp
add
pop
outsb
adcl
xchg
sbb
and
shll
sub
int
cld
xor
out
dec
pop
push
inc
jb
push
pop
jns
in
loop
sub
push
mov
pushf
hlt
push
loope
mov
mov
repz
adc
xchg
lods
pushl
stc
ret
xor
adc
add
and
notb
lods
sub
sbb
pop
imulb
ret
hlt
pop
enter
out
push
xchg
ds
jl
popf
out
dec
push
sbb
loopne
and
sbb
cld
out
xor
cmp
ja
pop
sarl
daa
inc
les
lret
sub
push
lods
fsubr
inc
push
iret
stc
sbb
pop
repnz
jno
lods
movsb
and
mov
mov
xor
roll
push
insl
inc
ss
fcoms
out
xchg
sub
add
lea
int
call
cmp
add
rclb
notl
dec
push
mov
xchg
fs
cltd
out
out
adc
inc
lret
push
mov
scas
iret
xor
mov
mov
sbb
push
iret
fidivl
lock
cmp
pop
and
mov
test
loope
clc
pushf
rcll
pop
cli
jbe
stc
insl
dec
loope
enter
test
mov
call
std
push
leave
shll
lea
cmp
xor
cmp
lods
in
cltd
dec
leave
lods
xlat
orl
cmc
sub
and
mov
push
ds
push
jbe
data16
xchg
incb
scas
mov
out
push
jle
dec
ss
es
ds
push
jbe
data16
xchg
incb
scas
mov
out
adc
dec
ss
daa
cs
ds
push
ja
data16
xchg
incb
scas
xlat
mov
out
push
dec
push
js
pop
and
push
ds
mov
sahf
cltd
adc
sub
mov
rcr
pop
cmp
popa
sbb
in
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
mov
mov
enter
mov
add
pop
push
add
add
add
mov
add
add
add
mov
inc
add
ja
or
jae
addl
jp
dec
add
add
loope
xor
pop
add
ja
dec
add
add
add
add
add
add
add
add
add
add
xor
mov
add
aaa
add
add
add
add
add
add
add
add
add
add
add
add
loop
push
add
add
rolb
add
add
add
add
add
cmp
add
popa
add
add
add
add
push
add
add
loope
and
lods
add
verr
add
add
cmp
add
add
add
jno
and
popl
sub
rolb
add
add
push
add
add
mov
add
add
add
add
add
push
add
add
add
push
add
add
add
add
inc
add
add
add
add
add
add
in
add
cmp
add
add
sbb
add
aaa
add
add
mov
add
add
add
add
add
add
add
add
ljmp
add
add
add
add
add
loop
sbb
add
add
add
add
add
add
add
add
rolb
add
add
adc
add
add
add
mov
add
add
add
add
aam
add
incl
testb
add
add
cmp
add
add
sub
cmp
add
stos
add
mov
mov
cmp
push
add
add
add
ljmp
add
add
add
add
push
add
add
and
pop
add
add
add
add
add
add
xchg
add
loope
push
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
call
add
add
add
add
mov
add
add
add
xor
faddl
jmp
addl
lods
add
sti
add
add
add
xor
popa
add
add
add
add
add
add
add
flds
ret
add
insl
add
add
add
jl
and
pop
add
xor
adc
sub
add
add
mov
xor
add
sbb
add
cmp
add
add
add
add
xchg
add
add
add
add
add
popl
xchg
add
add
add
add
adc
jp
add
lods
add
into
add
add
ljmp
add
add
add
add
call
add
popf
add
pop
mov
add
add
add
add
jno
push
add
add
add
add
add
add
add
in
push
rcrb
xlat
mov
adc
mov
int
mov
and
repnz
stos
sbb
sti
in
dec
fstl
jnp
sub
fildll
ret
test
push
rclb
lret
cs
hlt
ds
in
scas
inc
pusha
pop
adc
pop
lods
lods
lcall
mov
out
in
cmp
in
daa
and
sbb
in
les
adc
xacquire
jbe
add
pop
add
push
popf
dec
cmp
inc
sbb
or
mov
lods
pop
gs
in
sahf
push
push
sbb
aaa
pop
jns
sub
pop
adc
xor
xchg
arpl
xor
imul
xchg
dec
insb
shll
dec
inc
add
add
push
push
sbb
rcr
or
xor
xor
jp
jp
mov
jmp
xchg
mov
inc
xorl
jnp
roll
imul
and
lret
repnz
and
lea
test
xlat
std
cmp
test
rorl
ss
jae,pn
inc
jo
or
mov
cmpsl
out
mov
outsl
add
fisttpl
subl
ds
ja
mov
add
mov
jne
cltd
stos
jbe
add
pop
push
dec
inc
jnp
sub
dec
btrl
ret
mov
nop
sub
loopne
xor
sbb
out
pop
insl
add
repnz
and
cmp
pop
inc
sti
jge
mov
mov
push
imul
mov
arpl
ffreep
cltd
jno
out
mov
adc
dec
lret
je
mov
das
jg
dec
sahf
jae
push
pop
in
jecxz
mov
aad
inc
inc
inc
aas
test
out
jmp
pop
and
inc
xchg
sbb
out
in
push
adc
inc
icebp
add
out
dec
mov
sbb
in
or
and
repz
mov
mov
stos
pop
mov
push
lret
xchg
push
cmpsb
sub
add
jp
and
xchg
das
lret
sub
fdivs
leave
xchg
outsl
xchg
int
inc
push
xor
cmp
adc
jo
xchg
pop
int3
xchg
aaa
ja
lcall
test
dec
movsl
into
into
gs
sub
push
ret
mov
nop
and
mov
mov
lret
jle
adc
or
shlb
or
sbb
jb
jp
mov
mov
push
cltd
sbb
push
push
shlb
and
sub
pop
push
dec
dec
jg
cmp
sbb
push
pop
outsl
push
sub
sub
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
