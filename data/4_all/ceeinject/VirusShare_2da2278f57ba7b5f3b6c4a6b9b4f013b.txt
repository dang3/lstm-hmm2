call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
and
inc
test
lds
and
adc
in
hlt
adc
add
xor
inc
xchg
mov
movsl
je
inc
test
in
aad
lds
les
mov
movb
movsl
je
inc
test
in
aad
lds
mov
or
jne
sub
sub
add
cs
adc
push
push
jns
icebp
aas
add
hlt
loopne
les
pop
add
or
pop
mov
lcall
cmp
lcallw
test
mov
xor
add
sub
movsl
movsl
je
jnp
sbb
mov
imul
aas
jecxz
adc
in
test
jnp
sbb
pop
mov
rcll
aad
lds
inc
cmp
dec
sarb
sbb
movsl
mov
and
lods
adc
jno
hlt
lret
hlt
pusha
aam
aad
mov
jae
nop
inc
xchg
ljmp
push
cmc
and
xor
add
adc
in
hlt
adc
movsb
gs
test
rorl
je
sub
xorb
mov
cmpb
xchg
add
sub
cmp
out
loope
int
nop
insb
adcl
pushf
dec
subl
push
filds
sub
movsl
xor
lds
les
mov
test
mov
movsl
je
inc
test
in
aad
lds
les
mov
test
mov
mov
adc
jp
shlb
push
jl
xchg
pop
pop
adc
mov
repnz
insl
sarl
jmp
dec
sbb
or
fwait
lock
out
mov
adc
fsubl
jo
in
stos
cmp
mov
jnp
add
cmp
jge
mov
pop
xchg
test
in
decb
shll
mov
fistpl
js
repnz
xor
xchg
sub
dec
insl
push
dec
sub
cmp
out
mov
lret
aad
pop
lret
ljmp
or
sub
sbb
dec
lock
pop
jp
inc
lret
leave
std
dec
rorl
push
jge
aad
lcall
mov
mov
adc
xchg
ret
pop
mov
shrb
mov
mov
cltd
lahf
aas
shlb
push
stos
dec
jbe
inc
cmpsl
icebp
stc
gs
cmpsl
inc
loop
push
push
arpl
adc
pop
jnp
lret
mov
pop
nop
cmp
and
repnz
fsubr
pop
fldenv
cld
mov
fdivl
test
pushf
scas
inc
mov
mov
mov
cmp
jae
lds
sbb
sbb
mov
insl
imul
push
jbe
fwait
je
sti
and
orb
mov
insb
shrb
jge
pop
sbb
xchg
arpl
mov
dec
mov
sub
pop
fidivs
or
out
adc
jo
dec
mov
sarb
sub
loopne
add
js
fs
push
or
lea
pop
fstps
inc
add
xchg
int3
pop
and
jb
add
pusha
call
enter
aaa
leave
jno
dec
mov
fmuls
mov
mov
fwait
je
pop
adc
jne
insl
push
outsl
insb
dec
add
adc
sub
cmp
adc
pop
inc
pop
scas
or
popa
push
mov
sarl
fwait
and
mov
pop
fiaddl
mov
push
fidivl
fimuls
inc
or
adc
mov
movsb
loop
les
xor
jg
je
mov
loop
outsb
mov
pop
lds
add
push
and
xor
adc
jle
dec
rcrl
xor
fcmovnbe
sti
flds
stos
cmp
ljmp
repnz
out
das
test
inc
mov
pop
arpl
mov
mov
das
push
sub
jmp
sub
mov
testl
mov
es
sahf
lea
insb
shll
in
add
cmp
mov
jb
sbb
sub
sbb
sbb
push
call
aam
loope
rcll
pop
daa
nop
ret
ja
test
and
xchg
pop
ds
push
push
xchg
adc
xor
addr16
push
clc
out
sub
or
or
jle
push
push
jmp
int
mov
push
jle
es
sub
shr
lock
aaa
cmpsl
loopne
sbb
mov
movaps
mov
fdivl
push
xor
and
sub
jge
and
imul
iret
or
in
das
and
pop
mov
nop
pop
mov
dec
and
jne
stos
aaa
mov
js
add
add
pop
or
insl
jo
xchg
push
xchg
jg
push
into
sbb
mov
mov
insb
repz
push
test
sbb
push
adc
mov
and
mov
out
lcall
aad
je
fimull
adc
subps
jmp
mov
xchg
repnz
loopne
in
mov
fabs
test
xorl
xchg
in
mov
sbbb
mov
scas
gs
mov
movsb
jnp
push
fcomps
sbb
inc
dec
pop
jp
sub
test
or
cmpxchg
fsub
mov
pop
jo
xor
xchg
or
and
adc
jg
add
sahf
sbb
aaa
push
and
test
bound
pop
cmpsl
mov
outsl
aad
xor
mov
pop
bound
jge
sub
sbb
arpl
js
fs
sbbb
cmp
daa
add
cmpsb
mov
cli
cwtl
xchg
cmp
mov
pop
xchg
add
ss
ljmp
mov
icebp
jmp
data16
mov
sbb
in
sub
push
xchg
scas
mov
das
mov
aas
push
rcrl
aam
scas
cld
addb
rorb
jmp
add
es
jno
mov
push
inc
int
shll
or
test
adc
sbb
inc
jg
sbb
imul
fiaddl
mov
popa
stos
hlt
imul
sub
jnp
rcrl
jmp
shlb
ja
clc
les
out
leave
sahf
push
stos
and
sub
lret
loop,pt
mov
dec
jnp
cltd
int
xchg
mov
mov
cmc
mov
out
int3
and
iret
call
xor
and
cmc
mov
xchg
out
clc
pop
in
xchg
sub
clc
and
sbb
and
mov
fisttpll
cs
mov
dec
push
or
cmp
xor
orl
inc
fistpll
and
adc
mov
ss
int
push
clc
inc
daa
jecxz
dec
into
xchg
out
jge
mov
and
inc
and
push
rcrb
add
mov
fdivrp
in
lret
insb
add
loopne
inc
add
dec
xchg
sbb
mov
es
subl
nop
jp
adcb
cmpb
insl
xlat
or
adc
mul
loop
lcall
imulb
cld
mov
movsb
aam
xchg
call
les
stos
dec
in
mov
mov
mov
mov
aas
dec
ficoms
push
es
daa
hlt
adc
dec
call
jns
xchg
stc
rcll
jb
je
pop
cmp
sub
imul
idivl
dec
push
nop
test
jbe
fidivrs
and
loope
pusha
mov
sar
dec
push
jge
push
lcall
cmpsb
xlat
mov
sub
dec
in
pop
xor
andl
xchg
mov
repnz
cs
les
and
pop
shll
inc
orb
and
in
mov
xor
mov
mov
xor
or
fs
jbe
and
sub
and
jmp
bound
popf
xchg
sub
ja
arpl
mov
ds
in
ret
cmp
popl
loopne
outsl
stos
mov
in
bound
orb
mov
mov
mov
hlt
push
nop
or
fdivrl
push
mov
lods
pop
cmp
hlt
test
mov
mov
xchg
add
lds
push
dec
in
lds
lret
outsl
scas
sbb
push
pushf
ja
lahf
cmpsb
or
test
pop
jmp
push
push
in
and
xor
push
sahf
mov
nop
adc
or
imul
andb
test
xchg
cmp
js
jecxz
jmp
imul
mov
stc
push
mov
or
sbb
xor
hlt
les
jae
enter
std
mov
push
popa
test
stos
rcl
pop
daa
sub
adc
ss
inc
add
push
push
rorb
adc
in
xchg
out
xchg
inc
jns
sbb
sti
adc
test
cld
int3
loopne
and
push
mov
lret
cmp
mov
dec
sub
cmc
jne
adc
jns
gs
out
loope
cmp
push
lret
cmp
arpl
xchg
jae
js
jb
into
jge
xchg
das
lcall
cld
push
lret
push
mov
xor
adc
aam
mov
pop
rcrb
inc
sti
loope
enter
shlb
sub
adc
xchg
xor
xchg
popf
test
scas
daa
js
das
xchg
xchg
cmc
insb
out
push
test
mov
sub
and
xchg
jbe
repnz
roll
xor
add
insl
hlt
stc
enter
ds
push
sahf
fstpt
mov
jmp
mov
es
fcoms
call
rcr
push
inc
das
bound
jns
cli
adc
out
sbb
imul
sbb
cli
mov
testb
das
sahf
xor
push
or
adc
sahf
sub
push
sbb
jne
push
cmp
jnp
repz
rcrb
jle
sbbb
ljmp
mov
inc
clc
cs
and
addr16
cmp
pop
nop
lods
mov
push
jbe
mov
ret
test
aas
sbb
test
iret
cmpsb
out
loop
imul
mov
lock
mov
push
int
call
movsb
cmp
cwtl
int
push
push
sub
sbb
pop
push
movsb
jp
jo
sub
aad
mov
sbb
mov
sub
xlat
push
xchg
ficompl
jno
or
jns
fldt
inc
sub
jg
adc
and
cmp
aam
inc
testl
in
pop
pusha
rorl
cmp
out
lcall
das
aaa
inc
dec
lret
mov
jnp
or
std
movsl
dec
xchg
pop
gs
in
leave
push
mov
jae
fcomip
sub
xor
incb
test
aas
or
enter
icebp
shll
adc
in
out
insl
rcll
adc
pop
inc
insl
or
and
arpl
xor
arpl
or
pop
inc
push
adc
fwait
scas
push
pop
ljmp
mov
out
stc
sbb
pop
out
andb
adc
scas
jns
int
inc
push
pusha
xor
enter
lods
stos
ret
pop
fs
rcrl
imul
int
jno
jne
push
lock
pop
lods
leave
outsl
cmp
and
hlt
push
sarb
shlb
cmpb
mov
repz
inc
out
xor
sub
movsb
mov
cld
add
stc
mov
jnp
nop
outsl
mov
fs
add
loope,pn
test
xchg
push
dec
and
cltd
cmp
sti
out
or
clc
xor
lods
push
les
leave
and
pop
pop
push
dec
dec
pop
out
cmp
testb
jbe
gs
addr16
xor
mov
pop
xchg
test
xchg
icebp
sub
cmp
push
fistpl
xor
push
mov
jns
push
xchg
adc
in
jne
cs
xchg
xchg
cld
gs
out
ret
or
push
scas
gs
mov
inc
mov
adc
fildll
out
cli
addr16
lds
lret
xchg
popf
jo
in
adc
push
clc
jne
scas
std
dec
adc
scas
scas
mov
pop
shl
aad
and
cld
out
add
scas
in
addr16
arpl
add
test
jnp
inc
pop
ret
push
fiaddl
ljmp
cmp
aam
lds
movsl
push
jnp
scas
scas
ss
popf
lods
push
xlat
xor
hlt
repz
loopne
jg
adc
mov
push
cmp
or
ret
hlt
lret
xor
adc
cmp
std
mov
lds
kaddw
stc
jno
and
pop
cwtl
loopne
daa
ror
fcmove
fstl
imul
dec
popf
mov
cmpsl
stos
ds
ucomiss
xlat
or
movq
notl
jo
cmp
mov
xor
adc
inc
xchg
fstps
loope
stc
ret
dec
mov
push
or
sbb
ds
into
cmp
push
repnz
popl
aad
xlat
nop
or
adc
jno
mov
es
addr16
or
jno
xchg
inc
push
cltd
or
or
xor
mov
test
jno
and
ficomps
divb
xlat
sub
xor
mov
dec
add
add
daa
and
xor
sub
inc
xchg
jb
test
imul
ljmp
shl
adc
inc
shrl
and
xchg
mov
orl
outsb
xchg
cs
int
lods
frstor
adc
cmp
test
dec
sub
xor
push
out
fdivrp
and
stc
adc
xchg
inc
jbe
fwait
movb
jle
adc
sbb
and
sub
bound
push
inc
test
idiv
pop
mov
mov
aam
xor
mulb
fmuls
add
mov
mov
xor
stc
mov
rcrl
sahf
mov
jnp
mov
jo
pop
notb
ror
xchg
test
rcrb
cmc
inc
fimuls
arpl
cmpl
sahf
pop
or
sub
jmp
out
jp
aaa
xchg
jne
fstpl
pushf
jae
cmp
and
mov
jg
mov
dec
andl
fimuls
test
mov
jno
pop
jbe
data16
cmp
outsb
dec
inc
int
or
or
mov
movsl
push
test
scas
pop
dec
dec
push
cwtl
cltd
lods
sbb
cmp
cltd
in
xchg
fs
xchg
dec
mov
push
cwtl
xchg
arpl
mov
adc
test
icebp
std
ljmp
mov
pop
pop
xchg
fidivl
and
mov
shlb
subl
enter
repz
popf
mov
mov
fadd
aas
aad
push
xchg
pop
test
dec
mov
jecxz
dec
fstpl
cwtl
add
jmp
cmpsb
andb
sub
push
jb
sbb
jno
stos
cmp
sahf
jns
insb
popf
aas
fiadds
xchg
enter
mov
stos
into
mov
sub
sbb
stos
push
shlb
cmc
ficompl
mov
fdivrl
rcl
lods
insb
add
jle
mov
stos
aam
pop
loope
pop
or
clc
vpshld
les
or
je
jne
sbb
loope
cmpsb
cmp
out
lahf
cs
fidivs
popf
popf
push
pusha
out
and
jo
mov
into
aad
mov
shlb
cmpsl
push
sub
cmp
inc
icebp
adc
addr16
xchg
fildl
fldcw
lahf
cmp
scas
pop
loopne
sbb
push
sub
mov
xor
push
sub
mov
pop
add
cmp
mov
xor
inc
mov
add
loopne
mov
add
push
mov
jl
dec
mov
addb
insb
push
xchg
pop
inc
inc
or
outsb
ret
inc
push
jne
movsb
push
lret
xlat
je
lods
repnz
rcrl
sbb
jno
jecxz
push
arpl
jge
popf
addr16
xor
push
pusha
fsubl
pop
loop
les
out
clc
mov
xchg
or
sub
fwait
xchg
inc
sub
mov
aad
or
shll
shlb
femms
arpl
into
loope
decl
add
push
in
cmc
andb
out
pop
jg
loop
stos
lea
push
outsb
mov
and
ja
cld
mov
sub
pop
cmp
xor
xor
pinsrw
add
lea
jbe
fsubrs
sub
popl
nop
sbb
cltd
fsubrs
xor
sub
repnz
push
mov
push
notb
inc
and
test
cli
notl
mov
pop
and
sub
out
mov
sub
inc
in
push
sub
jecxz
inc
mov
in
jno
push
mov
xchg
dec
mov
inc
adc
cltd
add
adc
sub
fimull
dec
cmp
xchg
or
popf
fwait
sbb
subb
fistpll
insb
push
jnp
sub
lret
jle
fwait
rol
loope
ret
push
fisttpll
cld
fdivl
jl
insw
sub
fisttpll
mov
mov
xchg
int
cli
repnz
in
imul
adc
shl
idivb
and
push
mov
mov
dec
iret
mov
es
mov
inc
loop
dec
mov
pop
push
add
or
in
jg
sbb
fcmovnbe
jno
bnd
or
rcr
cmpsb
pop
xchg
xor
cmpb
cltd
jb
adc
int3
jmp
xor
xlat
sbb
mov
test
jmp
xor
xchg
push
xchg
push
movsl
jl
stc
mov
and
cwtl
mov
xlat
xchg
mov
mov
and
adc
ja
jns
out
xchg
stos
bound
ss
pusha
mov
call
mov
call
add
inc
cmc
mov
clc
sbb
jmp
into
pop
pushf
aas
cmp
test
rcll
fldcw
inc
mov
cmp
outsb
mov
test
scas
cli
nop
sti
arpl
sub
cli
ljmp
xchg
lods
mov
fildl
jl
or
lods
jmp
outsb
fwait
arpl
or
xor
or
sbb
fwait
pop
or
sub
aad
push
sub
mov
inc
fists
sbb
andl
dec
stc
stos
cmp
add
and
es
push
pop
jb
xchg
js
test
sahf
pop
popa
pushf
xchg
xor
fisubrs
out
in
xchg
push
cmpsb
adc
js
fwait
rcrb
and
fisttpll
mov
scas
add
pop
cmp
scas
mov
sahf
in
cmpl
out
lock
and
pop
lret
lock
mulb
fmuls
cmp
add
xor
cmp
mov
cmp
sbb
push
mov
leave
adc
pop
sub
in
adc
jo
dec
fdivrp
push
outsl
push
loop
inc
aaa
cmc
adc
cmp
add
jl
aaa
cmp
dec
push
call
imull
loopne
fwait
jbe
or
add
in
inc
addr16
adc
pop
test
and
ss
xorl
inc
sub
loop
pop
aad
popa
stc
aas
bound
adc
xor
scas
test
addl
jae
push
mov
mov
inc
iret
adcl
mov
mov
and
lret
inc
adcl
sub
out
xchg
daa
int
or
inc
and
lea
add
scas
imull
xchg
xchg
mov
jmp
push
in
int3
mov
js
add
lret
and
scas
adc
dec
inc
jg
cmp
arpl
enter
xchg
xor
test
cltd
dec
pop
int
or
inc
or
lret
pop
jns
push
push
out
xor
mov
out
in
jb
fimull
mov
packuswb
add
pop
subb
cmp
mov
shrl
cmpsl
xchg
dec
mov
test
hlt
pushf
sbbl
cwtl
sub
add
leave
adc
pushf
mov
scas
adc
sbb
aad
out
jne
inc
lcall
sbb
ret
popa
daa
hlt
dec
inc
cmp
loope
into
xor
adc
or
inc
lret
test
adcb
jnp
or
mov
arpl
roll
into
mov
xor
xlat
insl
inc
pop
jl
add
lds
or
jb
xchg
mov
clc
fdivr
lea
adc
or
imul
and
xor
inc
dec
imul
sub
push
in
cwtl
jb
mov
jg
gs
lds
xchg
jge
cli
sahf
gs
push
cld
push
mov
inc
mov
xchg
mov
leave
pushf
rcll
cs
fs
mov
mov
jg
and
stos
sub
outsl
push
mov
jg
out
inc
mov
sub
jl
xchg
fisttpll
pushf
and
leave
or
scas
loop
test
in
mov
outsb
into
pop
jp
out
pop
mulb
jbe
stos
inc
test
jb
and
xor
push
jle
enter
push
or
xor
imul
daa
fildll
or
push
jge
pop
fisttpll
push
insb
sbb
pop
adc
and
testb
jno
sub
lods
les
cld
mov
sub
clc
mov
mov
mov
mov
mov
mov
mov
dec
fldt
mov
aam
cmp
adc
mov
push
jmp
enter
jnp
dec
bound
fdivl
out
in
les
popf
or
pop
ljmp
dec
mov
pop
jbe
push
jnp
aad
in
jno
rcll
sub
or
and
mov
jnp
jae
pop
push
loop
into
and
ja
cltd
xchg
cmp
popf
mov
aam
or
rclb
or
cmpsl
dec
sar
test
pop
leave
int
push
sarb
or
add
andl
mov
xor
dec
stc
aas
loop
push
cmp
jne
pop
or
repnz
mov
mov
xor
les
imul
lret
test
rorl
mov
mov
pop
bound
aaa
add
cmp
gs
lret
pusha
idivl
aam
push
lcall
pop
xchg
add
inc
nop
in
pop
push
jb
or
idivl
adc
neg
imul
jmp
mov
negb
and
popf
adc
stc
mov
aam
pop
cli
rcll
pop
dec
push
test
mov
xchg
int
je
inc
test
in
aad
lds
les
mov
test
mov
movsl
je
inc
test
in
aad
lds
les
mov
test
mov
movsl
hlt
xchg
les
mov
add
adc
fs
aam
movsb
gs
test
movsb
je
inc
test
in
aad
lds
les
dec
stos
jnp
imul
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
rorl
loopne
nop
call
mov
sbb
mov
cmp
dec
add
mov
cltd
pushf
test
sbb
jmp
inc
sbb
and
push
add
imul
pop
bound
cmp
mov
loopne
scas
jecxz
lret
xor
arpl
sbb
dec
jnp
jb
sbb
int
fdiv
cli
mov
xchg
movb
pop
xorb
imul
push
xchg
add
xchg
and
cmp
cmp
jo
gs
mov
push
sub
in
pushf
imul
loop
xor
loope
rolb
shll
sbb
or
pusha
movl
mov
test
adc
fldl
je
mov
hlt
sahf
cmp
pop
add
xor
int
rclb
insb
cli
or
cmp
sub
jo
and
dec
enter
das
jbe
data16
fcompl
imul
xchg
clc
arpl
dec
stc
call
xor
xchg
mov
je
clc
fnstenv
or
mov
sub
pop
jne
mov
jno
dec
mov
lds
mov
pushf
mov
imul
sbb
movsl
filds
fwait
in
inc
xor
aaa
push
sbb
imul
popa
or
mov
ret
test
stc
push
or
jo
pusha
cmp
dec
add
imul
cltd
lock
sbb
jmp
inc
sbb
pusha
cmp
dec
add
imul
iret
xor
and
scas
push
cmp
arpl
mov
in
jmp
xchg
mov
dec
dec
shr
xchg
add
cmp
ret
lock
jns
loope
jno
sub
fmulp
scas
or
loope
fadd
xchg
bound
cmp
mov
scas
push
aas
cli
daa
pop
movsl
add
mov
mov
and
add
and
xor
inc
dec
cli
adc
fidivrs
and
sti
mov
cld
jl
js
xchg
fs
and
ret
mov
mov
mov
adc
test
jl
mov
lcall
jnp
je
jecxz
sahf
lcall
push
outsl
xchg
movsb
jg
repnz
popa
out
and
inc
add
push
hlt
adc
xor
jmp
mov
loop
mov
call
cmp
fsubrl
outsb
cmp
or
push
push
jae
loop
je
out
aaa
loope
xchg
lret
sub
shr
hlt
lret
xchg
jecxz
and
xlat
inc
lea
nop
jl
push
cmpsl
pushl
push
incl
ss
mov
xchg
sub
lods
jae
or
lods
mov
lea
push
in
pop
rolb
mov
loop
loopne
xor
sti
cmpsb
xchg
popa
jno
stc
aas
pop
inc
xchg
pusha
dec
pop
scas
insb
jle
pushl
xor
cmp
inc
jmp
bound
dec
and
test
ss
loop
mov
lahf
xor
mov
scas
cs
fbstp
repz
lret
imul
xchg
pushf
mov
fidivs
dec
cmp
mov
xchg
fisubrs
nop
dec
in
dec
pop
inc
pusha
outsb
mov
mov
and
sub
in
rcll
mov
mov
adc
movsb
or
les
mov
push
or
mov
lcall
fsubs
std
xchg
mov
jp
or
mov
fcoms
jle
adc
nop
lret
mov
cmp
std
push
inc
pop
fstl
addb
inc
cmpsl
push
xchg
repz
js
xchg
xchg
xchg
stc
fs
dec
pop
out
enter
jbe
xchg
sub
scas
pop
call
inc
aam
lret
outsl
pop
push
fists
cmp
jg
dec
lret
fs
xchg
inc
fldt
xor
cmp
ret
test
sub
pop
repnz
popa
gs
ret
loop
hlt
aas
fisttpll
mov
inc
dec
jge
adc
pusha
das
inc
push
xchg
jb
mov
test
cmp
adc
mov
inc
mov
pop
popf
xchg
add
pop
std
ds
pop
jmp
inc
push
out
fdivrs
xchg
cmp
outsl
adc
ret
insl
int3
add
loop
mov
ja
ss
or
lcall
outsl
ret
shlb
and
scas
sub
imul
test
adc
cvtdq2ps
mov
xor
lods
xor
test
sahf
sbb
lcall
inc
mov
mov
ret
mov
xchg
push
bound
movsb
inc
push
repnz
cmp
xchg
test
mov
mov
mov
js
aam
popa
shrb
lret
mov
xchg
popl
sub
cli
adc
rcrb
sub
sbb
mov
movsb
mov
pop
or
negl
jo
lea
mov
out
fwait
jmp
cmp
cmp
imul
loope
inc
mov
sbb
sub
lods
imul
mov
cmp
imul
inc
inc
push
inc
cltd
dec
push
jecxz
cmp
das
out
nop
out
lahf
and
mov
pop
stos
sarl
int3
push
clc
inc
push
xchg
shll
repz
mov
popl
ret
out
sbb
ss
push
mov
xchg
jp
jle
jae
stos
inc
fnstsw
mov
pop
addr16
pop
dec
sub
out
sub
rolb
daa
push
std
dec
jg
fisttpl
mov
cmp
dec
jo
mov
sbb
jmp
fisttpl
lds
jae
mov
dec
hlt
notl
aad
and
mov
xchg
sub
cmp
pop
inc
loope
pusha
fiadds
popa
add
xorb
in
stc
dec
xor
mov
pop
dec
lods
aaa
ret
xor
gs
in
lahf
push
cmp
insb
icebp
jle
pop
xlat
movsl
addr16
aas
rcr
push
roll
pop
lgs
fcomps
mov
push
cmp
and
cmp
test
pop
lret
outsb
test
jno
push
hlt
fsubrs
xor
inc
sahf
sub
mov
cmp
pop
pusha
loopne
sub
lea
mov
fsubl
or
xchg
decl
jg
lods
adc
fcoml
or
push
jle
clc
mov
shll
in
dec
fsubrl
stos
test
fimuls
jnp
mov
push
mov
loopne
inc
add
cltd
mov
cmp
add
in
ret
ret
add
or
jnp
xor
adc
xchg
pusha
into
push
xchg
jp
mov
mov
pusha
jo
fmul
sbb
push
shlb
lret
cmp
inc
gs
xchg
jp
dec
mov
cltd
xor
call
mov
dec
imul
xchg
pop
das
jb
dec
cmp
xchg
inc
mov
push
loopne
mov
fildll
push
in
mov
rorb
push
shrl
es
mov
mov
pusha
add
out
mov
je
orl
or
add
addr16
add
mulb
daa
cmc
clc
pop
dec
arpl
inc
dec
sbb
adc
in
imul
jmp
mov
xor
dec
xchg
repnz
inc
shll
addr16
arpl
cmp
outsb
in
in
jbe
pop
dec
mov
pop
inc
add
push
add
or
in
loop
lods
mov
xor
mov
add
adc
sbb
fs
ficompl
xor
outsl
mov
ret
xchg
addb
js
in
into
popa
sub
movsb
in
mov
dec
jp
rcrl
leave
aaa
dec
bound
lock
cmpl
faddp
mov
cmp
adc
dec
jmp
mov
or
loopne
lods
cld
cmc
pusha
sbb
xor
push
fimull
out
lcall
arpl
sbb
add
mov
rcll
dec
mov
jbe
aad
je
insl
mov
lcall
outsb
push
pop
aam
cltd
cmp
xchg
lods
sbb
iret
mov
jne
or
mov
popa
cmpsb
stos
in
or
xor
jmp
lahf
das
adc
xor
mov
mov
mov
pop
mov
sahf
mov
iret
sti
imul
xor
cmp
insl
pop
sti
test
sbb
lea
je
mov
jmp
and
sbb
jmp
inc
fdivl
sub
push
lret
xchg
mov
push
les
sbb
sub
outsb
sbb
cmp
mov
or
imul
and
arpl
ss
jle
addr16
fs
adc
popf
mov
cmc
pop
add
and
sub
out
jmp
mov
or
and
mov
stc
and
insb
mov
scas
loope
lods
out
pushf
aam
sbb
in
mov
in
add
out
out
in
scas
sub
ss
insb
push
lret
test
or
cmp
sti
in
or
xchg
cmp
sti
adc
call
cmp
xchg
and
pushf
adcl
aad
ret
out
sub
loopne
or
push
sahf
mov
dec
add
insl
repnz
inc
push
mov
pop
adc
add
add
lds
push
repz
mov
xchg
cwtl
xlat
scas
or
mov
and
js
hlt
sbb
lods
xchg
dec
jmp
lea
xchg
and
aam
jecxz
mov
adc
sar
mov
cld
cbtw
sbb
je
mov
pop
inc
loopne
xlat
imul
test
xor
dec
jns
mov
push
mov
cmp
popf
mov
sahf
in
jmp
test
inc
inc
mov
ffreep
in
and
inc
test
jg
sub
xlat
dec
sahf
pop
jg
es
ja
or
cli
jnp
sub
add
loop
out
xchg
sbb
inc
sti
mov
imul
test
mov
fwait
js
mov
pop
or
xchg
mov
push
je
int
pusha
negb
mov
repnz
xor
hlt
outsl
jge
sbb
pextrw
and
jmp
lcall
flds
sbb
push
mov
fsubl
test
mov
mov
ss
add
inc
inc
or
nop
jl
and
jmp
mov
jmp
popa
sarb
scas
in
sbb
adc
inc
inc
sbb
pop
mov
ss
inc
push
icebp
fidivl
xlat
or
mov
leave
inc
jl
and
popf
cmp
and
jbe
mov
cli
adc
sbb
add
add
outsl
dec
mov
pop
ficoms
repnz
lods
mov
mov
xor
push
fmull
mov
pop
iret
mov
adcb
lds
cmp
negb
fadd
and
lea
sti
push
push
insl
rorb
mov
ljmp
sub
fcompl
xchg
dec
out
mov
stos
mov
add
xchg
jecxz
mov
jmp
dec
js
xchg
push
cmpb
jo
inc
cmpb
outsb
and
unpcklps
cmp
rorl
clc
jg
cs
cmp
scas
adc
sarb
mov
fwait
push
mov
sbb
ret
fisubl
or
jmp
adc
mov
cmpsl
inc
mov
cli
dec
movsb
aam
js
xchg
int
pop
inc
mov
insb
adc
test
arpl
mov
lret
push
mov
cmpsl
sub
dec
dec
cwtl
out
cmp
pop
popf
fs
dec
adc
jg
xchg
adc
fimull
push
inc
ljmp
aam
ficompl
test
lea
outsl
pusha
aas
mov
insl
popf
loopne
pop
add
mov
lret
inc
inc
push
xchg
lods
in
mov
dec
pop
dec
ficoms
push
leave
dec
ret
cltd
lcall
inc
out
test
dec
jge
pop
testl
jnp
mov
cmc
fsubrs
out
inc
ficoms
es
clc
addr16
call
imul
orl
ljmp
xor
mov
aas
shll
mov
xchg
les
mov
inc
lods
mov
mov
sahf
hlt
sbb
gs
xlat
scas
cmp
scas
adc
inc
jbe
sbb
sub
enter
aas
in
jno
les
testb
int3
or
mov
jle
inc
imul
scas
or
xchg
repz
mov
xchg
test
rclb
stc
shlb
pop
push
cmp
dec
cltd
jecxz
cmp
pop
and
pop
add
inc
sub
shll
out
sub
sbb
jmp
jbe
sub
push
xchg
icebp
cmp
shll
sbb
loopne
mov
xorb
adc
dec
ret
aaa
rcl
test
test
int3
jne
stos
jmp
es
aam
fdivrp
adc
out
stos
fisubrs
pop
cmp
jecxz
pop
mov
or
push
lea
xchg
mov
sub
cmpsb
sub
jl
out
jb
or
orl
cmpsb
sbb
sbb
push
mov
pusha
rcr
jns
mov
mov
into
pop
jbe
in
xchg
adc
jle
rolb
idivb
cmc
xchg
jne
subb
dec
enter
xchg
pop
push
add
mov
push
cmpsb
test
and
push
push
mov
push
xor
icebp
jecxz
sahf
into
cmp
stc
mov
fwait
lret
fidivrs
mov
sub
fcomp
push
pushf
mov
ljmp
fdivrl
lods
lock
call
cltd
xor
mov
inc
int3
xor
adc
loope
mov
and
jle
out
mov
adc
rorl
dec
or
cmp
aaa
test
sub
mov
sbbb
shrl
mov
daa
in
adc
ror
cli
jae
outsl
or
test
ja
mov
or
add
hlt
cmp
aad
mov
mov
sbb
or
xor
cmc
jnp
lods
pushf
and
stos
sarb
je
push
adc
jecxz
lahf
stos
iret
sysenter
je
lods
fwait
mov
pop
or
popf
enter
xor
push
outsl
cld
cmp
mov
test
ret
mov
gs
xchg
pop
push
sub
and
mov
xchg
scas
sbb
adc
cmc
dec
movsb
mov
jl
les
scas
test
add
jmp
int
mov
inc
sar
jno
or
rclb
popa
pusha
sarb
loopne
or
adc
les
pop
xor
repnz
loope
out
pop
addr16
fmull
push
aad
mov
test
jnp
sti
mov
leave
movl
xchg
loopne
adc
xchg
cmp
out
xchg
bound
pop
sti
inc
add
inc
push
lods
and
divb
stc
xor
cld
mov
jg
sbb
out
push
inc
adc
loopne
pop
sbb
lock
sub
psrlw
add
movzbl
push
jb
push
jo
sub
mov
pop
les
insb
sbb
mov
mov
inc
lret
test
or
lods
mov
pslld
lea
sbb
mov
andb
mov
jge
outsb
movsb
pusha
fstp
push
shrl
out
adc
daa
fstpl
jno
repz
or
jno
jb
sub
fadd
dec
arpl
xchg
inc
inc
mov
sbb
jns
sub
cmp
sub
mov
rcl
push
mov
outsl
or
cmp
push
sarl
adc
add
mov
lret
jecxz
pop
aaa
jne
pop
push
pop
inc
orl
jbe
jne
outsb
inc
leave
outsb
xor
add
or
fbld
pop
xchg
cmpsl
add
lds
daa
fld
xchg
scas
xchg
xchg
add
xchg
test
loope
xlat
pushf
jecxz
add
push
xor
inc
pop
loope
jp
bsr
sbb
aad
add
mov
mov
push
mov
jecxz
lahf
push
fldt
mov
leave
fisubl
scas
mov
out
movsb
shll
jle
push
pop
das
xchg
mov
mov
sbb
cmp
jno
pop
xlat
inc
cmp
pop
addr16
add
mov
mov
mov
mov
mov
push
movsb
dec
mov
roll
mov
mov
mov
and
testl
cmpl
add
call
inc
out
out
sub
mov
jg
movsl
ret
mov
push
sbb
out
lcall
mov
dec
cmp
enter
inc
xlat
fadd
mov
inc
outsl
xorl
xor
dec
pushf
mov
push
addb
sub
push
dec
rcrl
aad
cmp
push
push
fwait
insl
ljmp
popl
fwait
addr16
mov
mov
inc
cmpsb
jl
popa
repz
lcall
jne
lods
stos
leave
fcmovnu
aaa
jmp
mov
jp
lret
sbb
lret
rol
seta
bound
bound
pop
dec
aaa
jbe
lahf
mov
cmp
pop
aad
pop
clc
pusha
pop
cmp
pop
scas
dec
cltd
mov
inc
adc
cmpsl
in
inc
in
or
movsl
sub
inc
call
or
mov
jns
lcall
push
fidivs
lret
xor
stc
lods
rcr
ja
addr16
enter
or
insl
mov
test
pop
out
or
out
pop
popa
imul
stc
inc
add
cmp
mov
push
scas
lcall
daa
ja
jp
sub
fucom
sub
movsb
dec
and
inc
jecxz
jl
outsl
mov
imul
inc
loop
mov
inc
fcompl
inc
xchg
and
daa
jl
or
mov
xor
xchg
std
and
cld
in
mov
inc
dec
xchg
data16
xchg
xor
mov
mov
std
icebp
push
inc
xor
sub
inc
adc
pusha
mov
out
rclb
int
das
xchg
mov
lahf
adc
jne
xchg
sub
lods
addr16
fists
leave
test
lahf
xor
xchg
adc
xor
push
sahf
jo
into
jne
xchg
jno
sbb
rolb
scas
shrb
hlt
mov
mov
mov
mov
aaa
das
push
sub
jo
sbb
fidivrl
and
icebp
std
mov
or
int3
adc
repz
pop
repz
cli
adc
mov
ja
xor
pop
push
dec
insl
mov
xlat
lock
add
add
sub
sbb
push
cli
jge
mov
in
out
orl
jne
enter
movsb
cltd
jmp
add
pop
fcompl
sbb
mov
add
lcall
loope
and
dec
mov
pop
mov
negb
sbbb
xchg
dec
rorb
gs
xor
sti
lcall
bound
stos
les
test
pop
pop
dec
mov
sub
mov
mov
mov
mov
xchg
pop
sarl
sbb
mov
push
jo
lahf
dec
out
scas
andl
jecxz
and
xchg
mov
push
cmp
mov
push
jge
mov
dec
or
xor
test
stos
aad
push
mov
adc
add
repz
es
repz
ret
sahf
stos
aad
cld
shrl
lret
in
arpl
cmp
cmp
mov
ret
in
cmpsb
inc
les
std
insb
stos
mov
data16
inc
lods
mov
in
cld
pop
jge
jo
sahf
push
push
js
mov
fmuls
or
stos
iret
daa
pop
std
test
jbe
or
repnz
ja
cli
add
aad
add
clc
enter
cmc
shll
sbbl
cld
mov
insl
repnz
xor
adc
and
out
jb
push
test
fsubrs
adcl
push
inc
mov
cmp
inc
pop
dec
cmp
mov
shll
popa
jb
enter
add
arpl
push
or
sub
cmp
clc
sbb
sahf
adc
xor
loop
inc
jle
pop
push
cmp
sbbb
jp
xor
pop
int
fstl
push
jo
outsl
arpl
adc
lea
mov
jne
or
xchg
inc
inc
push
xchg
or
push
sub
inc
xorb
xchg
mov
mov
adc
cmp
lcall
mov
stos
jge
subb
and
out
andl
popa
aad
jge
aaa
shrb
and
mov
pop
mov
mov
mov
adc
push
mov
add
xlat
inc
inc
xchg
mov
mov
sti
fistpll
shl
int3
pop
js
in
push
js
mov
aad
notb
or
repnz
mov
push
cmp
shrb
int
push
inc
mov
mov
or
cmp
ja
add
insl
aaa
cmpsl
aas
pop
ret
je
inc
movsl
sti
daa
xlat
in
pop
xor
push
or
ret
inc
mull
imul
fdivr
sbb
and
push
push
push
int
dec
rcrl
cli
shrl
addr16
xchg
jnp
cmp
xchg
sti
repnz
fiadds
mov
cmpsb
pop
push
in
clc
mov
jg
jecxz
cld
mov
mov
loop
or
or
fmull
and
xor
push
pop
imul
scas
std
cmp
les
aas
cmc
test
mov
roll
adc
loopne
fimull
movsl
inc
pop
mov
push
dec
fwait
mov
and
cmp
xor
lahf
sbb
mov
leave
scas
pop
iret
jnp
jg
or
adc
xchg
stc
std
add
pusha
add
jmp
or
push
or
out
test
sti
mov
mov
aam
rolb
out
movsb
daa
outsl
cmc
push
aam
in
push
push
pop
lahf
call
sbbb
int3
adc
xchg
and
add
push
outsl
scas
daa
cmp
rorb
xchg
and
aad
popa
stc
sahf
sub
inc
fnstcw
out
fistpll
scas
jb
xor
xchg
xchg
cmp
leave
pop
dec
popf
ret
mov
popf
mov
filds
mov
push
mov
insl
push
mov
roll
sar
lahf
cmp
sti
pop
stos
sarl
mov
loopne
nop
leave
sbb
jmp
inc
sbb
pusha
cmp
dec
add
imul
cltd
lock
sbb
jmp
inc
sbb
pusha
cmp
dec
add
imul
xchg
nop
mov
mov
mov
pusha
stc
push
or
subb
xor
dec
adc
pusha
enter
pushf
jge
dec
sar
leave
nop
fnstenv
idivb
dec
xor
adc
add
in
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
cmpsb
sbb
sub
pop
xchg
adc
addl
fidivl
inc
jmp
jmp
sbb
sub
pop
testb
push
es
mov
push
stos
mov
inc
sti
push
jmp
sbb
sub
pop
testb
imul
ss
fidivrs
lds
popf
adc
pushf
out
push
mov
cmc
push
mulb
sbb
ja
loopne
loopne
push
mov
push
das
sub
push
sbb
int
and
rorb
xchg
mov
inc
inc
test
pop
or
in
mov
mov
pop
mov
mov
push
and
daa
jecxz
mov
lock
jge
pop
out
cmp
mov
addr16
jge
cs
lret
push
sub
push
jmp
fcmovnb
hlt
in
les
movsb
sub
imul
lret
inc
lahf
stos
jmp
je
cmpsb
xchg
inc
or
mov
push
adc
sarb
pop
loop
fwait
pop
dec
push
push
pop
lret
inc
sti
ds
sbb
sub
pop
testb
imul
mov
mov
jbe
inc
sti
push
lods
loopne
fbstp
jp
push
sbb
aas
mov
jmp
xchg
gs
pop
mov
mov
mov
jae
dec
mov
sub
inc
inc
xor
inc
fcoml
add
push
mov
out
pop
xchg
push
out
testb
imul
mov
mov
jbe
inc
sti
push
jmp
sbb
sub
pop
testb
imul
mov
mov
jbe
inc
sti
push
jmp
sbb
and
scas
pop
enter
dec
mov
xchg
leave
inc
jl
mov
iret
mov
push
iret
xchg
adc
mov
sub
push
inc
dec
mov
std
xor
pop
jmp
or
ret
paddusw
into
mov
push
dec
cwtl
mov
clc
dec
adc
cltd
int3
iret
push
mov
adc
jl
sub
sub
sbb
xchg
mov
aam
in
jg
wbinvd
jecxz
adc
leave
daa
cmp
inc
cmp
xchg
add
sbb
cmpsl
push
xchg
in
dec
out
xchg
push
scas
mov
stc
aas
mov
xchg
push
or
clc
roll
mov
xor
hlt
out
adc
enter
adc
push
pop
xor
out
adc
mov
add
mov
into
aam
cli
movsl
shll
cltd
pop
adc
push
into
cld
jge
inc
ficompl
and
xchg
shlb
mov
ficoms
clc
shll
xchg
mov
rolw
bound
fbstp
jae
lahf
jp
add
add
imul
pop
or
aam
lock
nop
cmp
xor
adc
xor
popa
cmc
outsl
popa
nop
sbb
filds
mov
cmp
xchg
adc
jg
shr
push
push
fs
add
adc
loope
push
test
gs
sbbl
xchg
jmp
jae
imul
sub
lahf
inc
or
xchg
or
ficoms
mov
push
sahf
mov
mov
push
or
and
mov
pushf
out
dec
and
comiss
aad
ret
mov
xchg
mov
roll
sbb
pop
jb
inc
sti
das
push
sarb
popa
lret
lds
sub
mov
add
fwait
imul
inc
clc
pop
dec
scas
addr16
push
scas
add
hlt
stc
outsl
dec
rol
aam
movsb
stos
lods
mov
dec
push
xor
stc
fcoms
push
cmp
xchg
ds
imul
mov
scas
aaa
sub
or
add
iret
shlb
sub
clc
push
icebp
cmp
dec
jbe
sub
das
cltd
xchg
pop
or
adc
cmp
in
xchg
nop
pop
stc
fimull
leave
in
cmp
arpl
test
add
mov
inc
rorl
push
mov
jp
mov
push
lcall
dec
mov
ss
or
dec
push
pushl
pop
stc
pop
xchg
jb
inc
fbstp
dec
mov
push
mov
orb
or
sub
dec
roll
repnz
int3
dec
imul
pop
iret
push
mov
mov
test
pop
xchg
cmp
xlat
adc
push
nop
test
cmc
push
mov
lret
call
mov
jmp
adc
ficomps
inc
pop
mov
xchg
sub
push
popa
cltd
and
insl
cld
inc
test
jge
add
adc
ss
fisubl
jae
icebp
cltd
pop
fistl
inc
loope
inc
push
push
outsb
mov
clc
aam
data16
mov
loope
inc
call
jg
sub
xchg
ja
test
adc
sbb
jnp
iret
stos
push
dec
push
rcll
loope
dec
cld
dec
jno
xchg
and
mov
and
sbb
and
mov
daa
call
jl
push
insb
xor
movsb
addb
xorb
sarl
adc
test
or
scas
pop
mov
mov
pop
jne
scas
xor
dec
js
sub
int
lret
outsb
rcl
rorl
adc
cmpsl
cmp
mov
xor
imul
mov
sub
lds
xor
sbb
dec
cmp
fsubs
rcrb
cmpsb
rclb
and
cltd
sbb
jg
mov
and
cld
mov
adc
into
in
nop
push
jmp
xchg
and
jecxz
ja
mov
aam
out
popa
mov
cmp
and
lahf
scas
icebp
or
lods
push
mov
cmpsb
cmpsb
mov
xor
data16
fcmove
test
aam
jp
mov
hlt
pop
add
cwtl
cmp
and
hlt
jae
jb
fcoml
lock
out
jl
fmull
fldt
push
push
dec
push
stc
xchg
fmuls
fidivrs
jp
xchg
pop
xchg
loop
cs
and
bound
xchg
adc
leave
mov
lock
mov
pop
push
call
rclb
sbb
adc
cs
lret
mov
or
leave
jecxz
loop
mov
pop
lea
xor
add
orl
push
mov
xor
rcrb
adcl
in
jmp
pop
lods
mov
call
ljmp
pop
addr16
test
stos
testb
cmpsb
ret
test
je
push
pop
shl
push
data16
xchg
loope
adc
fiaddl
push
cli
fdivrl
sbb
ss
push
ljmp
mov
mov
mov
mov
jne
sub
push
mov
shr
repz
add
smsw
ret
adc
in
jo
aas
xor
je
rcl
mov
sub
pop
enter
mov
sub
dec
xchg
das
les
xchg
lods
mov
filds
push
mov
into
or
in
aas
xchg
push
xor
jnp
daa
je
shlb
scas
inc
and
jb
ror
scas
inc
stos
mov
or
xor
pop
addb
pop
dec
cmpb
mov
dec
cmp
pop
in
cmp
sahf
imul
dec
psubq
cmc
imul
aad
hlt
jecxz
adc
xchg
xchg
add
repz
cli
gs
into
xchg
and
cmp
add
dec
mov
cs
aad
mov
xchg
push
popf
fistps
pop
jnp
call
notl
mov
cmpsb
jecxz
add
inc
test
xor
movsb
or
push
ja
adc
minps
arpl
lds
mov
nop
push
mov
xor
sub
leave
lock
jns
cwtl
push
les
jge
dec
or
nop
xor
jne
cmp
hlt
jne
push
loop
pop
insb
sti
pop
fcmovbe
cwtl
pop
sbb
frstor
int3
int3
push
outsl
aas
movsb
fsubs
insb
or
pushf
jecxz
mov
mov
push
mov
dec
ds
mov
xor
mov
pop
mov
in
cmp
mov
ja
lods
dec
sbb
cltd
mov
sub
aas
gs
aam
lods
aad
mov
sbb
arpl
and
jns
adc
maskmovq
cwtl
jns
jne
mov
imul
mov
icebp
cltd
adc
clc
pop
jns
dec
jnp
mov
repnz
lahf
imul
add
jl
mov
stc
pushf
mov
rsm
dec
mov
sbb
xor
cwtl
xor
sub
adcl
xor
dec
js
push
rolb
mov
xor
sbb
leave
jno
js,pn
push
mov
mov
test
lahf
stos
dec
pop
or
sub
xlat
mov
add
xchg
xchg
mov
ss
ret
imul
popf
leave
pop
inc
test
mov
mov
add
push
jb
int3
aam
arpl
push
stc
cmp
xor
cmp
lock
lds
pop
inc
inc
or
fbstp
pop
cmp
adc
inc
out
stos
div
push
dec
shll
mov
imul
fdiv
iret
shlb
enter
and
fcoml
mov
lret
add
push
movsl
dec
adc
jmp
fs
lret
jmp
lret
mov
dec
lods
push
inc
icebp
repz
push
adc
movsb
cmp
xchg
sbb
pop
test
scas
mov
xchg
add
push
pop
mov
mov
add
lret
jo
sbb
clc
fcoml
jecxz
sbbl
cmp
test
xor
push
frstor
xchg
fsubs
ljmp
inc
cmovbe
fcomps
fdivr
pop
xchg
sbb
add
lret
sub
inc
stos
icebp
sub
push
vmovd
imul
jbe
inc
push
or
sub
or
lahf
inc
inc
vmovmskps
test
add
lcall
jg
pusha
jmp
cmp
inc
testl
bound
cmp
mov
add
pop
cmp
movsb
xor
xchg
cmp
or
fisttpl
jae
cli
pop
das
push
sub
iret
negb
push
mov
adc
clc
xchg
jns
data16
add
cs
jae
andl
in
add
popa
daa
fistps
or
mov
nop
mov
cmp
inc
das
adc
fisubl
dec
push
enter
pop
lds
std
imul
std
mov
and
movsl
dec
and
pop
mov
jmp
mov
das
repnz
dec
mov
les
inc
out
lods
mov
jae
std
ficoms
ss
sahf
stos
inc
pop
dec
out
push
or
mov
pop
xor
push
mov
and
mov
test
repz
mov
fidivl
bound
mov
icebp
hlt
cmp
aas
mov
sahf
xlat
mov
or
cmp
mov
inc
cmp
lahf
xor
into
pop
movl
fisttps
lock
je
xchg
mov
hlt
mov
adc
sahf
mov
mov
xchg
dec
cmp
dec
ja
je
xor
mov
mov
dec
cmp
mov
outsb
adc
xchg
fldcw
ficompl
xlat
add
clc
cs
jnp
outsb
in
cmpsl
loop
push
int3
sbb
out
enter
mov
gs
test
aaa
stc
test
cs
adc
ds
pop
sarl
push
cli
fisubl
push
mov
add
mov
mov
or
idivb
icebp
push
mov
adc
push
mov
lcall
inc
cmc
fdivrp
add
loope
test
push
sti
mov
xchg
push
xor
sub
dec
cli
and
insl
and
insb
adc
hlt
test
jne
push
sub
and
ret
sub
push
pop
push
inc
lcall
imul
sbb
inc
repz
int
out
mov
pop
jno
jne
mov
jg
mov
and
xor
cmp
xchg
out
push
jno
insb
scas
cmp
adc
cmp
mov
insb
pop
or
dec
hlt
push
mov
add
dec
or
nop
and
pop
outsb
cmpsl
inc
mov
mov
cwtl
add
mov
in
or
sbb
ficoml
or
int
adc
cmpsb
out
jl
add
sbb
cmp
rcll
mov
bound
jnp
test
imull
adc
fisubrs
ret
push
outsb
outsl
xchg
js
imul
jmp
mov
sub
loop
daa
pushf
shlb
inc
mov
pop
fstps
or
shlb
dec
into
cmpsb
popa
dec
inc
cmpb
sub
out
jmp
or
or
inc
les
in
outsb
sysenter
insb
fists
mov
pop
out
and
test
cmp
adc
mov
cmc
push
pop
cmp
xor
roll
inc
loope
jge
mov
pop
jp
repnz
inc
cmp
icebp
and
fwait
cmp
es
push
mov
jb
mov
xchg
push
mov
sti
loopne
or
dec
out
xchg
pop
sbb
xchg
adc
pop
out
mov
mov
test
sub
push
xchg
mov
loope
mov
jne
push
push
fadds
sub
xchg
or
imul
sbb
fwait
inc
ss
jmp
jg
cs
push
jns
sbb
and
push
aas
je
cmpsl
aad
inc
lds
jae
mov
faddl
lahf
jae
and
loop
loope
aaa
jne
push
cmc
test
repnz
movsl
push
push
push
std
sbb
jns
push
xor
test
mov
cmpsb
mov
mov
incl
testb
mov
scas
mov
leave
enter
xor
jge
dec
jne
sbb
nop
insb
mov
jb
sbb
lea
cmp
inc
and
adc
cltd
repnz
imul
cwtl
mov
fstpl
adc
xchg
stos
imul
bound
out
jg
jo
ds
xchg
xor
out
sub
cmp
outsb
inc
int
mov
ljmp
jbe
mov
dec
xchg
daa
jmp
js
mov
xor
push
pushf
and
jne
insb
cmpl
pop
mov
pop
push
ret
xchg
inc
in
pop
add
jns
cld
pop
adc
or
sbb
mov
test
enter
hlt
repz
scas
or
xchg
mov
fcmovnu
hlt
sbb
loope
mov
jmp
adcl
outsb
xor
pop
mov
std
out
bound
outsl
js
out
push
stos
out
insl
repz
scas
mov
call
lret
and
pusha
push
rolb
dec
mov
mov
int3
lea
xor
push
mov
xor
sbbl
sub
push
xchg
scas
xchg
clc
inc
jb
inc
hlt
jno
ret
fisubrl
imul
enter
xor
fsubl
xor
call
fnsave
loope
push
dec
pop
xchg
test
hlt
jmp
outsl
dec
adcl
sarl
jp
cmp
sbb
sahf
sbb
outsl
test
je
adc
ja
jmp
mov
pop
ror
cmp
push
dec
dec
stos
push
xchg
inc
add
int
dec
fdivs
iret
scas
fcmovnbe
out
aas
mov
lock
mov
jae
lock
push
loope
push
inc
push
aad
dec
clc
out
and
test
mov
mov
aam
and
int3
push
and
adc
cmp
mov
ja
mov
mov
es
movsl
cmp
mov
repz
out
jmp
mov
mov
mov
setge
cs
loopne
mov
mov
movl
cmp
setno
movsb
xchg
inc
mov
fdivrl
sub
div
mov
aam
xchg
mov
addr16
fiadds
cmp
add
pop
imul
mov
inc
jne
sahf
lods
idivl
test
pop
rolb
js
mov
mov
loop
decb
and
imulb
ljmp
xor
pop
sahf
jb
jl
mov
sub
lret
daa
xchg
cmp
jp
sbb
xchg
and
iret
jecxz
testl
sbb
int3
mov
call
loope
cmp
lock
push
jns
xchg
xchg
push
in
int
jne
pop
fnstsw
jno
xchg
test
sub
add
and
test
hlt
or
ljmp
mov
xchg
sub
add
jle
std
cli
mov
out
outsl
fldcw
ds
cmp
sbb
dec
fcomi
dec
sub
sti
adc
fucomip
mov
pop
and
insb
xchg
stos
pop
mov
push
mov
ss
test
enter
cli
cmc
in
mov
add
lea
add
bound
or
loop
push
sub
and
pop
jecxz
inc
add
push
fisubrs
fbld
stc
mov
outsb
pop
xchg
jb
aaa
enter
inc
sbb
pop
mov
add
add
pop
cltd
push
push
repnz
xor
or
push
or
cmp
out
inc
int
and
sub
inc
scas
or
or
pop
insl
jnp
xchg
test
jo
add
out
dec
orl
jp
in
inc
shlb
lds
notl
adc
add
adc
ret
dec
add
add
sbb
mov
sbbb
test
mov
xor
push
bound
xchg
daa
push
scas
lods
jg
fwait
enter
call
adc
loop
jecxz
and
adc
jecxz
jae
xchg
sub
sbb
sbb
in
js
mov
or
inc
xchg
jno
xlat
int3
aas
insb
mov
decl
mov
adc
push
cmpsl
and
int
daa
stos
jb
xor
test
mov
mov
add
gs
or
jb
inc
out
inc
jg
movsb
xchg
sbb
jl
push
mov
lcall
movsl
and
ss
pushaw
pop
jp
aas
adc
adc
rolb
lret
xorb
in
push
ljmp
jg
lret
push
les
lcall
xor
jmp
fdivrs
xchg
jl
or
sti
mov
dec
add
pop
sahf
sbb
mov
inc
test
xor
xor
mov
sub
test
outsb
mov
pop
sub
inc
dec
push
fstl
je
aas
popf
addr16
pop
pop
mov
mov
jge
lret
mov
mov
mov
scas
dec
mov
xchg
or
nop
dec
xor
arpl
rolb
xor
shl
jne
xorb
lcall
add
mov
rcll
mov
fdiv
cwtl
jecxz
or
fbstp
xor
push
scas
cmp
stc
rcr
sbb
gs
push
add
fucomp
push
push
inc
mov
fwait
lret
pop
clc
stos
call
lods
in
imul
adc
lcall
cmpsl
xor
ret
inc
or
orb
jno
xchg
sbb
les
aas
cmp
xor
xor
push
ret
mov
js
lahf
dec
lcall
mov
outsl
repz
jb
mov
outsl
mov
and
cmp
jmp
sub
push
pop
inc
add
xchg
mov
icebp
repz
imul
andb
inc
add
mov
mov
adc
inc
mov
and
jno
stos
dec
out
dec
and
cs
mov
xor
nop
test
nop
adc
in
std
sub
iret
inc
mov
std
jo
inc
fsubrs
repnz
xor
mov
into
test
dec
adc
into
dec
ret
xlat
mov
pop
adc
pop
pop
xor
aad
dec
mov
xlat
mov
cli
inc
adc
fnstcw
and
or
pop
or
jg
pusha
leave
jg
outsb
das
aad
dec
mov
and
pop
lret
repz
mov
sbb
aad
add
cmp
sub
pushf
and
mov
fildll
testl
popa
mov
sbb
icebp
mov
frstor
sub
negb
jmp
sbbb
cltd
inc
adcl
lock
or
enter
push
or
movb
fistps
jb
push
les
ljmp
mov
add
dec
int3
pop
mov
sbb
mov
mov
dec
fisubrl
repz
dec
sub
idiv
subb
jns
stc
test
lret
and
arpl
mov
fwait
push
and
fidivrs
mov
cltd
jl
movsb
inc
aas
push
and
push
scas
cmp
pop
rolb
jle
xchg
lds
xchg
int
sbb
mov
and
cmp
into
lock
sbb
pop
loopne
sbb
add
push
mov
sbb
das
or
pop
movsl
lods
dec
add
sbb
adc
in
stc
push
aad
icebp
sbb
jno
jns
xchg
mov
add
mov
fcomp
jecxz
add
inc
xchg
mov
pop
rorl
imul
mov
outsl
iret
call
ret
cmp
and
mov
push
add
cmc
mov
sub
push
into
xchg
sbb
out
daa
pushf
lret
imul
and
in
cld
lock
bound
jno
js
enter
mov
mov
cmp
jl
sbb
imul
ss
sub
movsl
mov
mov
stc
dec
and
aas
ljmp
mov
cltd
sub
sub
xchg
shll
mov
pop
cltd
test
mov
rol
sbb
mov
mov
mov
mov
push
xor
mov
or
and
and
iret
lret
loopne
mov
aam
sbbb
push
mov
mov
icebp
push
mov
in
lods
dec
mov
mov
cmpsb
dec
xor
push
nop
or
pop
pop
inc
jmp
jmp
sti
fs
and
jp
sar
or
cmp
dec
jnp
imul
mov
mov
jbe
inc
sti
push
jmp
sbb
sub
pop
testb
imul
mov
mov
jbe
inc
sti
push
jmp
sbb
sub
pop
testb
imul
mov
mov
jbe
inc
sti
push
jmp
sbb
sub
pop
testb
stos
es
and
xor
add
adc
loop
repnz
ret
xor
fsubl
or
xlat
inc
push
mov
movsl
jb
add
repnz
ret
aaa
mov
pop
xchg
out
out
xlat
inc
leave
push
mov
xchg
xor
loop
repnz
ret
mov
pop
xchg
out
pop
les
mov
mov
push
lret
rclb
push
loop
xchg
xor
fs
jae
add
daa
pop
inc
lahf
add
dec
mov
mov
sar
sub
xchg
mov
adc
inc
cmp
loop
mov
mov
fwait
and
xor
mov
adc
inc
dec
xchg
mov
pop
add
sbb
arpl
enter
call
push
out
loop
cmp
sbb
xchg
daa
jg
push
ficoml
das
enter
pop
jge
mull
and
mov
cmpsl
ja
add
or
ret
mov
mov
dec
movhps
popf
push
stos
inc
xchg
push
repnz
xchg
pop
xchg
mov
ret
and
push
xchg
out
pushl
inc
ficoms
and
push
sbb
xor
out
loop
push
mov
movsb
sub
cmp
dec
ret
sub
sbb
aaa
test
daa
pushf
pop
in
push
xchg
mov
sbbb
adc
ds
int3
pop
loope
jecxz
adc
das
cmpsb
jg
daa
mov
addb
mull
jb
inc
push
mov
cmpsl
xor
loop
repnz
ret
aaa
mov
pop
xchg
mull
jb
inc
push
mov
cmpsl
xor
loop
out
xor
pop
addr16
movsb
adc
jnp
mov
sbb
adc
or
pusha
fcomip
jmp
pop
sbb
mov
and
repnz
test
inc
push
int3
mov
inc
nop
in
jbe
xor
pop
cli
adc
fwait
mov
dec
xchg
cmc
or
ljmp
sbb
add
mov
imul
cld
aam
xor
and
xchg
sbb
xor
push
insl
jne
bound
lret
ja
inc
mov
ret
es
dec
mov
adc
pop
out
int3
cwtl
stc
jge
loopne
bndldx
int
subl
and
push
push
pop
ret
shl
xchg
xchg
es
xor
fwait
add
in
pop
cmp
push
sbb
mov
ja
sbb
mov
cmc
pop
push
mov
or
pop
jne
cmc
sub
push
lds
fwait
adc
enter
jnp
mov
push
push
ja
outsb
xor
dec
imul
test
xchg
xchg
jo
mov
idivl
es
sub
cmpsb
xchg
cwtl
frstor
jne
xchg
stos
cmpsb
cmp
divb
mov
jns
add
es
aas
gs
mov
sub
lea
dec
cmp
sub
loope
dec
add
in
jbe
fs
sbb
gs
rcr
cmp
movsl
std
dec
xchg
mov
shlb
pusha
stos
mov
mov
iret
sbb
push
and
xlat
cmp
or
fisttps
in
mov
pusha
or
xorb
inc
loope
shlb
push
push
clc
push
repnz
cs
in
lods
mov
out
pop
scas
pop
mov
enter
adc
cmpsb
fnstcw
aaa
punpckhdq
cmpsb
aam
jae
out
cmp
lds
xorl
pop
cmp
cld
inc
call
fisttpl
mov
cwtl
mov
bound
sbb
sub
orb
stos
mov
jbe
push
icebp
dec
sub
inc
push
loop
xchg
xchg
mov
ljmp
inc
add
ja
mov
cwtl
hlt
out
and
dec
xor
mov
mov
loopne
shlb
xor
mov
xchg
pop
push
clc
mov
fcoms
inc
jno
aas
je
cmp
adc
in
push
adc
ja
mov
pop
loopne
imul
mov
push
stc
add
popa
pushf
sbb
cmp
mov
hlt
xchg
out
insl
outsb
outsb
push
xchg
iret
pop
lea
lret
xchg
cmp
cmp
ret
push
adc
bound
and
int
lock
cli
mov
xchg
ljmp
jns
repz
out
xor
mov
rcrl
sahf
xchg
iret
dec
xchg
and
loop
cmpsl
mov
repz
out
dec
movsb
xor
dec
or
xchg
jne
jnp
dec
int3
or
sbb
adc
mov
fldenv
push
dec
fwait
pop
mov
fmuls
fwait
andl
imul
sub
imul
xlat
push
jmp
stos
inc
jo
xor
imul
call
jnp
fsin
aad
lock
cmp
fistpll
sub
sbb
sbb
push
or
pop
and
stos
sbb
jmp
fldt
lret
adc
adc
mov
add
nop
aaa
loopne
subb
mov
rorl
in
sti
mov
xchg
movsl
lds
push
mov
xor
daa
test
fidivl
jl,pt
outsb
sahf
pusha
add
test
f2xm1
mov
in
jns
outsb
arpl
mov
dec
sub
aad
test
xor
out
aad
int3
aaa
cmp
fstl
cld
in
mov
dec
aaa
push
adc
jns
jmp
push
jge
int
lret
icebp
enter
in
mov
mov
mov
shlb
push
pop
mov
add
mov
push
sbb
movsb
push
out
inc
andl
sbb
cwtl
mov
rcll
mov
mov
les
rorl
inc
or
shl
mov
xor
mov
arpl
popf
or
repnz
addr16
mov
mov
lods
test
fwait
jb
int
lcall
xor
mov
push
popa
lods
adcl
mov
mov
out
xchg
mov
inc
lods
jbe
cltd
test
enter
das
jl
aaa
fnstenv
sub
adc
std
push
fwait
jb
cwtl
xor
add
cmp
cwtl
cwtl
adc
fistl
fwait
xchg
scas
mov
lcall
mov
enter
hlt
cmc
add
dec
and
fistpll
lret
sub
inc
pushf
test
mov
dec
inc
test
imul
imul
cmp
push
movsb
xor
addr16
jl
mov
pop
fisubs
mov
test
push
js
cmp
subb
push
jle
cmp
pop
jp
testb
xor
jecxz
push
push
scas
cmp
aad
add
sub
sub
in
inc
mov
pop
mov
xor
cmpsb
sub
mov
pop
pop
movsl
mov
out
mov
jp
cwtl
ret
je
sbb
fidivrl
jg
push
std
pop
push
push
test
xchg
dec
mov
jbe
mov
out
lea
xchg
pop
mov
ja
sbb
push
mov
pop
mov
cmp
and
xchg
mov
fnstsw
cltd
pop
xor
out
push
xchg
sbb
int3
cmp
imul
negl
fimuls
add
push
inc
or
std
fcmovnu
xchg
and
cli
test
xor
xchg
xchg
lods
jbe
lds
outsl
lock
mov
shlb
adc
int3
incl
sub
push
lahf
push
sarb
rcl
mov
mov
imul
jbe
lret
leave
jl,pt
add
and
outsb
mov
insb
push
lds
xchg
cmp
xor
test
scas
jecxz
xchg
movsl
sub
sbb
std
negb
leave
dec
call
mov
mov
movsb
into
dec
or
gs
cwtl
inc
ret
lock
movsb
rcrl
push
push
iret
jge
jb
mov
or
and
imul
int
std
daa
mov
push
inc
mov
sub
decb
jmp
sahf
test
mov
adc
je
mov
inc
popa
adc
mov
inc
push
xchg
mov
sub
loopne
inc
lock
mov
call
std
pop
test
and
cltd
mov
fsub
or
daa
xchg
ljmp
push
fucomp
xor
jg
or
jecxz
addr16
or
loopne
adc
jecxz
mov
pop
push
xchg
stos
rcll
push
cwtl
mov
push
xchg
cmp
fidivrl
pop
push
push
test
in
push
rclb
xchg
cmpb
aas
jo
rcrb
or
sub
cli
mov
add
jmp
idivl
and
pop
inc
rclb
pop
lods
xchg
jae
popa
cmp
or
sub
jbe
push
dec
repnz
sub
std
mov
dec
shr
lock
lods
aas
inc
fistpl
cmp
pop
fimull
jge
sub
mov
and
cmc
dec
jmp
test
arpl
fists
out
cs
mov
jecxz
stos
push
imul
xchg
addr16
dec
lock
pop
lret
adc
ret
xchg
shrb
lock
cmpsl
sbb
lcall
loop
js
cmp
and
sbb
mov
adcb
inc
cmpb
cs
xchg
jg
or
fidivs
test
pop
orl
mov
fsubs
dec
push
lcall
pop
aaa
mov
pop
add
xchg
rcll
push
cli
and
daa
jg
dec
sub
add
pop
add
xor
dec
fbld
push
jmp
dec
mov
insl
inc
loop
clc
xchg
fcom
push
out
jecxz
lahf
pushl
mov
mov
push
sbb
sub
adc
add
jle
mov
in
mov
orb
inc
fs
jmp
cmp
out
es
testl
lret
cmp
inc
xchg
repz
sti
push
bnd
push
mov
add
sub
pushf
cwtl
incb
popa
nop
shrb
in
shlb
mov
push
dec
pop
and
adc
cmp
dec
push
mov
stos
mov
dec
das
ret
jns
cli
or
cli
loop
mov
mov
push
outsl
outsl
lahf
ds
jge
iret
lea
inc
in
hlt
rclb
or
adc
aas
into
arpl
cmc
call
dec
in
mov
lret
lods
lea
inc
cmc
push
lret
pusha
ss
mov
pop
cltd
mov
jne
push
rcl
inc
jo
enter
jb
or
mov
call
iret
ja
je
and
or
dec
jb
scas
sbb
sub
adc
xor
push
push
je
jno
mov
fnstcw
jmp
repnz
enter
cld
fistpll
add
rcrb
shrb
or
and
xchg
adc
into
mov
push
mov
arpl
and
cld
pop
inc
stos
cmpl
inc
push
xor
dec
mov
cmp
and
jo
lret
xor
out
dec
pop
cmp
cld
sbbl
out
sub
insb
inc
cmp
fdivl
inc
adc
test
fsubl
dec
sub
fldl
sbbl
push
push
xor
les
add
arpl
adc
xlat
mov
ja
out
test
xchg
inc
lret
jg
shl
mov
push
jmp
push
int
mov
and
rcll
add
mov
fsubrl
stos
adc
mov
cld
xor
rorb
nop
push
shlb
popf
mov
mov
clc
shrl
movsb
mov
and
movsb
loope
movl
imul
jne
rorl
lret
cmp
lret
daa
iret
aaa
adc
mov
lods
imul
fs
repnz
cmp
inc
xchg
inc
aaa
jbe
lret
inc
xchg
xlat
mov
int3
xchg
mov
jl
outsl
inc
jbe
cmp
cltd
sahf
mov
adc
js
mov
out
inc
pusha
cmp
cmp
scas
movsl
xor
xor
add
or
xchg
or
push
xor
rol
shll
pop
mov
xor
xlat
js
into
ret
pop
out
jno
mov
out
mov
aad
cmp
cmp
lds
fisttps
push
es
or
bound
sub
fists
repz
adc
loop
cmp
fdivl
mov
not
mov
adc
hlt
xchg
stos
mov
leave
xor
stc
mov
and
mov
add
in
test
ss
jmp
aaa
mov
push
lret
xchg
daa
add
sub
sub
inc
push
jecxz
push
adc
aam
pop
int3
cld
push
cmpb
mov
jb
rorl
aas
cwtl
jecxz
jmp
dec
xchg
jge
jno
push
jecxz
decl
dec
sub
inc
pop
jge
xor
outsl
scas
ret
cmp
ffree
jmp
int
ficoms
or
das
iret
pop
stos
enter
jle
push
jno
sbb
fwait
or
push
clc
inc
or
ds
add
mov
aam
xchg
add
fcmovnb
cmp
call
aad
leave
sbb
cmp
push
iret
mov
iret
in
pop
pop
out
and
out
icebp
pushf
out
insb
pop
adc
push
in
push
popf
dec
or
test
out
mulb
sbb
int
jecxz
ret
xchg
add
ds
lret
std
sti
jle
inc
mov
jb
loopw
sub
aaa
pop
enter
jp
jno
repnz
ljmp
loop
fwait
and
js
nop
iret
ret
lret
cmp
imul
jecxz
mov
jbe
loope
mov
adc
push
or
mov
icebp
cmpsb
outsl
daa
test
push
push
or
ds
and
inc
add
cld
jge
dec
xorl
jae
fdivrs
cs
inc
xchg
aam
xor
in
inc
test
arpl
push
mov
mov
xchg
and
dec
sbb
out
outsb
aam
jno
or
inc
pop
push
or
adc
push
ds
pushf
loop
or
dec
imul
movsl
sub
clc
mov
xchg
in
imul
ljmp
jge
inc
mov
pop
ljmp
jns
push
movsl
and
push
enter
mov
imul
int3
and
aas
cmp
dec
cmp
dec
xor
mov
int3
fidivrl
sbb
mov
repnz
and
cmp
and
repnz
cmp
arpl
out
sub
cs
add
fildll
cltd
shll
iret
push
repz
aas
or
cmp
cmp
hlt
lods
fcmovne
ja
inc
sbb
cmpsl
test
shlb
mov
pop
fstps
js
add
into
pop
shlb
out
in
xchg
push
test
push
ss
andl
or
push
das
test
lret
inc
mov
iret
shr
inc
cmpsl
cli
dec
hlt
in
mov
xchg
xchg
jecxz
call
add
jp
cld
dec
dec
cmp
aaa
aaa
sbb
pushf
out
cmc
es
push
push
js
into
in
mov
mov
cmpsl
in
cs
push
and
push
inc
mov
add
mov
xor
cltd
adc
sbb
repnz
lahf
shl
mov
ljmp
pop
js
or
outsl
pusha
repz
iret
mov
mov
push
clc
or
insb
add
or
fsubr
sub
push
pop
mov
rcl
pop
mov
add
loopne
pop
sbb
sub
leave
pop
jae
cmp
xor
sub
mov
sbb
mov
lds
and
insl
jmp
sbb
add
aaa
or
push
jg
into
or
stc
popf
mov
sbb
imul
push
das
fwait
inc
mov
cmpsb
mov
lds
mov
adc
aam
out
xor
sub
cmp
int
ss
cmovns
mov
dec
push
lret
ds
xchg
hlt
or
and
mov
sbb
cmp
mov
mov
xchg
mov
aas
hlt
xor
mov
repnz
adc
nop
xchg
jns
push
fcmovnbe
inc
adc
pop
lahf
decl
out
mov
xor
push
and
xchg
mov
pop
dec
xor
push
xchg
int3
sbb
mov
xor
stos
add
addr16
jle
mov
and
shr
xchg
imul
imul
add
leave
xchg
cmp
movsb
pop
call
je
adcb
iret
rorl
adc
mov
repz
popa
jmp
mov
cltd
xor
push
push
out
jbe
mov
adc
jb
popf
cli
sahf
add
in
test
and
adcl
icebp
ret
push
out
push
incl
jo
jns
mov
dec
lret
mov
andl
mov
xchg
ss
into
dec
jb
inc
and
pop
inc
sar
int3
mov
ss
cwtl
mov
sti
out
cli
in
and
aas
sbb
xchg
push
xchg
xor
xchg
push
or
sub
fucomip
scas
roll
push
xchg
call
mov
rcrb
or
pop
std
repnz
jl
mov
cwtl
mov
mov
popa
jmp
sbb
sub
jae
dec
mov
out
movsb
jg
sbb
mov
aas
push
cmp
jp
jmp
pusha
adc
test
out
cmp
int
out
pop
add
sti
cwtl
outsl
push
fstpl
jecxz
mov
sti
sbb
jge
pop
movsb
dec
ret
mov
mov
cmp
push
orb
xchg
jg
mov
inc
adc
mov
icebp
int
fs
movb
or
sbb
jbe
xchg
mov
out
insb
fstl
jo
mov
inc
dec
sub
stc
cld
sbb
xor
push
xor
mov
push
cmp
repnz
inc
popa
push
nop
leave
scas
lahf
aam
or
pop
push
ja
ret
lds
pop
or
xor
mov
xor
push
ja
adc
pop
int
sbb
xor
and
out
subl
mov
andl
pop
fldl2e
mov
adc
rorb
dec
enter
mov
insl
add
mov
push
xchg
aam
cwtl
testb
sub
sub
stos
and
mov
jl
shll
push
cmp
ret
ror
jno
or
jecxz
pop
push
fxch
sbb
dec
test
outsb
fwait
test
pop
arpl
test
pop
scas
gs
mov
pusha
into
jns
addr16
das
mov
mov
cltd
out
xlat
sub
sub
adc
lret
cltd
xor
idivl
outsb
adc
or
gs
push
outsb
insl
mov
andps
inc
mov
out
pop
or
loop
imul
clc
xchg
aas
test
push
mov
push
bound
sub
rorb
imull
ror
xchg
inc
inc
cld
dec
jp
dec
mov
push
rcll
ja
push
pop
mov
jo
and
cmp
cmp
cli
std
inc
ret
mov
js
xor
adc
dec
jb
add
xchg
mov
mov
dec
xor
mov
dec
std
mov
movsl
adc
add
push
add
aam
pop
test
mov
mov
mov
out
push
nop
jne
add
xor
sahf
push
pop
dec
mov
xchg
mov
push
fstpl
cmp
loop
mov
arpl
cmp
mov
data16
lock
xor
data16
pop
mov
and
je
xchg
pop
ds
push
jno
je
cmp
or
aad
out
sbb
aas
into
stc
lret
jbe
add
sub
call
inc
mov
and
xchg
mov
sbb
ds
mov
xchg
inc
dec
ds
ret
push
jno
cld
add
mov
and
pop
inc
mov
out
xchg
jle
mov
mov
fnstenv
shll
iret
mov
xchg
mov
fisubl
jnp
push
leave
mov
cmp
les
or
ror
xchg
pop
dec
dec
ret
cltd
push
les
xchg
or
cli
push
jg
and
popa
dec
add
cwtl
data16
sub
rep
pusha
test
loop
stos
jmp
daa
adc
sub
js
cmpsb
add
sbb
into
mov
sbb
push
dec
shll
push
and
cmpsb
gs
xlat
inc
dec
movsb
jnp
stos
lods
fstpt
lea
fwait
subb
pushf
popf
dec
push
pop
cmovae
pop
fs
inc
mov
pop
jno
bound
sub
subb
sbb
shll
adc
aam
jmp
loopne
ds
push
jge
mov
cmp
xchg
pushw
and
inc
jle
push
pop
inc
mov
mov
int3
fbstp
scas
cmpsb
int
ret
stos
add
jmp
pop
flds
movl
test
les
loop
popf
fwait
test
roll
jno
jb
mov
fistps
xor
mov
mov
pusha
lcall
jg
lods
ret
add
sahf
outsb
ja
xchg
sub
and
fsts
push
sub
ljmp
dec
cmp
xor
fscale
fbld
mov
mov
fists
pop
lds
mov
pop
add
push
sahf
dec
mov
adc
sbb
enter
fcoms
movsb
mov
jno
push
push
dec
nop
sub
dec
or
cmp
stos
flds
fists
dec
cld
je
sub
mov
lods
ja
or
xchg
leave
mov
sub
adcl
inc
inc
jmp
pop
out
lcall
xlat
xlat
mov
push
inc
and
addl
or
shlb
push
pop
mov
mov
outsl
xor
popf
mov
inc
aam
and
xchg
sarb
out
fisubs
jbe
xchg
repnz
ret
inc
shlb
mov
pop
xchg
mull
jb
inc
push
mov
cmpsl
xor
loop
repnz
ret
aaa
mov
pop
xchg
mull
jb
inc
push
mov
cmpsl
xor
out
repnz
ret
aaa
mov
pop
xchg
mull
jae
inc
push
mov
cmpsb
xor
loop
repnz
ret
xor
add
fdivrs
and
push
sub
ret
sbb
or
pop
sbb
jnp
and
push
stos
inc
cltd
jae
arpl
adc
and
sub
sub
or
jnp
imul
mov
xlat
mov
stos
arpl
jae
arpl
jl
add
jae
and
inc
xor
add
loope
scas
jb
inc
pop
pop
mov
imull
adc
inc
cmpsb
push
inc
mov
lods
push
xchg
jae
xchg
or
mov
inc
push
push
stc
push
mov
and
jbe
jge
pop
cmpsb
rcrb
test
xchg
jg
repz
jbe
adc
jae
adc
mov
sub
push
jmp
push
dec
adc
push
lret
je
add
scas
add
or
jmp
cmp
sti
jecxz
pop
pop
xchg
jle
mov
dec
pop
lods
ret
adc
adc
jo
aam
inc
mov
stos
dec
mov
push
push
mov
add
xor
fistl
sub
loop
fld
aam
add
push
push
sub
jnp
adc
cld
cmp
lret
cmpsl
sti
shrl
xor
ja
jmp
pop
imul
andl
jecxz
repz
rorb
orl
pop
out
in
pop
fisubl
iret
adc
in
xchg
jl
ja
jb
inc
cmp
or
paddb
iret
mov
push
incb
inc
cwtl
dec
stos
push
lret
dec
push
test
test
or
pop
mov
mov
fwait
jae
arpl
adc
add
xor
and
shrl
ret
sbb
or
jnp
imul
push
stos
inc
fwait
jae
arpl
adc
add
xor
and
shr
adc
push
arpl
push
or
in
adc
xchg
xchg
fsubrs
gs
pop
adc
cmpsl
data16
lahf
adc
fadd
jnp
lret
aam
ljmp
in
mov
or
iret
into
test
jno
fwait
scas
xor
mov
shl
sbb
xor
cwtl
push
push
roll
pop
dec
inc
fnstsw
add
mov
cmp
clc
and
lods
lds
arpl
movsl
xor
push
aad
xor
addl
pop
dec
jo
into
popl
xchg
les
pop
hlt
lahf
pop
or
call
pop
cmp
lahf
in
xor
mov
int
mov
mov
add
adc
outsl
out
stos
les
lcall
loopne
enter
xor
or
pop
adc
adc
movsb
repz
and
pusha
cmc
jmp
adc
cmp
ret
addr16
adcl
imul
dec
test
mov
mov
cli
sarb
sub
mov
lret
mov
sub
sub
popa
arpl
adc
mov
pop
push
sub
call
adc
jp
stc
subl
loope
daa
jne
or
push
or
cld
ret
js
dec
jge
fdivs
aaa
mov
inc
ss
inc
hlt
fsubr
rcll
push
and
adc
mov
inc
adc
xlat
imul
enter
jge
or
cmpsl
pop
mov
lds
mov
inc
push
push
call
mov
push
sbb
jns
adc
sub
push
sbb
push
test
out
add
fwait
jns
lds
sahf
xchg
inc
jge
insl
rorl
inc
jmp
or
xor
idiv
cmc
fdivrs
mov
fwait
test
push
and
sarb
mov
mov
xchg
dec
mov
into
out
fdiv
iret
mov
out
out
test
int3
fs
xor
or
scas
lret
loope
or
movsl
leave
ds
movsb
out
in
and
inc
mov
inc
xor
out
jmp
push
or
gs
sbb
dec
or
mov
imul
andb
fidivl
and
shrl
sahf
sub
into
pop
mov
and
push
pop
mov
iret
sahf
sbb
mov
dec
out
icebp
or
aad
movsb
adc
mov
inc
bound
sbb
inc
or
stos
add
mov
cmp
test
xchg
sbb
fdivl
sub
sbbl
dec
mov
add
sar
mov
add
add
lds
aas
aas
outsb
ficoms
test
jge
mov
adc
add
lock
call
jo
inc
divl
loopne
lret
imul
int
mov
xor
pop
jbe
push
popf
arpl
adc
inc
xlat
push
div
iret
das
popf
movsb
sti
pop
roll
dec
lahf
repz
ret
push
mov
push
lcall
cmpsb
sub
cltd
in
mov
push
stos
fwait
push
inc
push
jle
arpl
cltd
xor
xchg
jge
loop
sub
ljmp
xor
cli
sti
jmp
in
call
nop
stc
out
xor
subl
ja
pop
jns
int3
in
in
dec
jge
repnz
leave
adc
push
std
and
or
sbb
push
push
les
es
fs
jge
lods
sbb
insl
push
fildll
pop
cmp
jle
pop
ja
and
dec
sahf
xor
push
xor
cmp
push
in
mov
dec
ja
cwtl
and
scas
pop
incb
or
pushw
pop
mov
sbb
adc
popf
add
push
cld
in
repz
les
push
xor
cwtl
scas
mov
iret
shll
iret
sbb
out
push
in
pop
ja
in
sub
cmpl
fisubs
pop
div
jo
fcmove
ss
add
es
mov
xchg
roll
jmp
cmc
pusha
test
outsb
push
sub
icebp
inc
adc
mov
or
das
add
mov
dec
sub
push
clc
mov
xor
sub
pop
cmp
jl
mov
xor
xchg
or
sbb
mov
imul
sub
xchg
les
add
insl
shl
push
xchg
enter
fcoml
sar
sbb
sbb
arpl
cmp
jne
lock
add
mov
fprem1
pop
into
mov
push
xchg
ret
xchg
mov
push
fiaddl
mov
insb
int3
sbb
into
jp
fisttpll
inc
and
pop
pusha
fs
dec
repz
add
pop
dec
out
jnp
jmp
cmp
das
addr16
push
aam
out
cwtl
mov
and
cli
testb
pop
pop
add
add
pop
pusha
jb
int3
cs
adc
xchg
in
repz
std
adc
jbe
push
pop
pop
dec
jecxz
pop
pop
and
fsts
outsb
movsb
add
aam
pop
nop
enter
lds
jl
call
xor
test
inc
jno
or
rcll
fldl
mov
mov
repz
mov
aad
push
mov
hlt
or
or
mov
sbb
xor
cmp
mov
enter
sub
xchg
sbb
stos
push
cmpsl
pushf
adc
mov
clc
cld
xor
stos
clc
mov
test
xor
xor
mov
add
add
xor
mov
nop
mov
mov
jle
adc
or
inc
adc
xchg
mov
insb
mov
lea
adc
repz
pop
shlb
jmp
enter
popa
out
mov
inc
or
jg
and
lret
rcll
or
test
call
js,pn
mov
xor
out
and
das
mov
sub
mov
inc
mov
loope
scas
fxch
adc
out
js
xchg
push
stos
fdivl
xor
dec
std
mov
xor
jbe
sbb
pusha
fldcw
js
je
or
jnp
cmp
mov
ss
dec
mov
out
sbb
pop
pop
fwait
push
inc
or
or
adcl
pop
nop
or
sti
mov
iret
hlt
cwtl
add
fisttpll
and
arpl
xor
cwtl
out
push
jge
xorl
sub
cmp
fdivrp
mov
xchg
loop
fildll
pop
inc
jmp
je
sub
add
jnp
mov
enter
stos
pop
out
adc
out
fs
lods
cld
or
pop
popa
sub
enter
sahf
lds
add
jbe
push
mov
lds
mov
dec
bound
sbb
aas
sub
jbe
movsl
fldl
cmp
pop
ljmp
fdivr
sub
push
scas
adc
mov
cmp
xor
lock
push
test
xor
adc
mov
pop
subb
incb
xchg
cld
cld
rcl
ret
xor
ret
imul
insl
mov
jo
out
rorl
sbb
dec
xorb
mov
push
dec
sbb
pop
cmp
loop
mov
sti
sub
push
xor
aam
push
pop
mov
push
loop
xor
je
xchg
data16
jmp
mov
fildll
xchg
scas
sti
dec
add
inc
bnd
mov
sbb
fcoms
lcall
xchg
std
mov
outsb
stos
je
dec
pusha
icebp
xchg
lcall
xchg
mov
push
cmp
cli
imul
js
xchg
jmp
arpl
jp
fstpl
mov
lcall
dec
cvtpi2ps
dec
loope
dec
std
cltd
bound
jnp
out
push
xor
add
jp
xor
sbb
sbb
push
adc
adc
repnz
mov
xchg
xchg
in
in
pop
out
adc
adc
sub
inc
mov
mov
sub
adc
jg
movsb
fisttpl
stos
and
enter
out
sbb
out
or
jmp
in
mov
imul
mov
testb
xchg
or
cmpsb
xor
mov
add
loop
adc
cmp
adc
scas
mov
out
mov
stos
sbb
mov
xchg
pop
jb
out
xor
pop
xor
adc
adc
mov
rcrl
mov
shr
nop
add
push
pushf
cmpsl
xchg
xor
gs
push
movsl
push
xchg
jno
add
and
pop
ficoms
fwait
lock
fwait
pop
lret
outsl
popf
testl
sub
mov
ja
or
sbb
andb
sbb
and
push
sub
push
je
and
dec
addr16
mov
in
mov
sub
cmp
stos
jb
xor
call
ret
repnz
xor
sbb
push
mov
pop
fcomp
fwait
jmp
push
iret
divl
push
add
fsubr
jne
jecxz
dec
dec
cmpsb
icebp
jmp
fstps
or
scas
fmull
loopne
or
repz
xchg
jmp
mov
dec
xchg
sbbl
or
in
jb
aaa
xor
and
ret
and
addr16
daa
out
or
in
in
dec
mov
cs
insb
ss
test
mov
pop
mov
gs
aam
pusha
push
jno
push
mov
clc
iret
xor
push
loopne
sub
or
xchg
xor
subb
jnp
jmp
aad
xchg
pop
mov
daa
ljmp
sti
mov
leave
inc
xor
mov
and
sub
push
and
dec
ja
int3
enter
std
mov
jmp
mov
imul
imul
jno
aas
nop
jge
repz
shll
pop
lret
sbb
push
dec
incl
or
jecxz,pn
jg
ss
shlb
les
movsb
inc
mov
scas
das
test
pop
adc
pcmpgtd
mov
in
xor
lret
inc
push
mov
mov
mov
fucom
push
and
int3
mov
int
push
cmp
lahf
sub
push
fildl
xor
dec
fstpl
cmp
loop
cwtl
mov
ret
or
cld
inc
dec
or
sub
data16
mov
xchg
mov
push
xchg
mov
mov
shrb
test
filds
mov
and
add
cmp
idivb
mov
in
in
mov
mov
xchg
test
or
dec
cmp
jae
mov
cmp
inc
mov
pushf
enter
or
push
pop
pop
pop
xchg
cmpsb
aam
leave
ret
aas
sbb
mov
or
leave
pop
out
cli
mov
jmp
xchg
stc
std
jne
xor
repz
movsl
jae
adc
ficompl
fadds
fsubrs
std
daa
mov
pop
call
sub
scas
movsb
call
rorb
aaa
push
or
ss
sbb
mov
push
mov
into
dec
push
sbb
xchg
jnp
fsub
and
jl
repnz
adc
cmp
pop
jns
or
loop
in
or
loopne
sub
dec
jmp
stos
enter
xorl
mov
mov
aaa
jecxz
aam
negb
mov
and
push
xor
jecxz
push
sub
lock
and
jnp
lcall
mov
cmp
xchg
mov
jnp
dec
pop
leave
adc
pop
and
out
daa
push
lock
sbb
xor
push
sbb
leave
cmpsb
mov
xor
mov
mov
cmp
ss
stc
and
hlt
mov
xchg
dec
ret
lret
pop
pminub
mov
pop
mov
lret
xor
lods
add
js
aaa
xchg
xchg
cmp
and
push
xchg
les
fwait
popf
movsb
mov
out
mov
inc
mov
mov
xor
dec
mov
and
sub
sub
mov
test
fisubrl
test
aam
stos
xor
dec
xor
or
push
bound
and
xor
xchg
dec
lcall
inc
and
or
jmp
dec
pop
or
inc
push
lods
sbb
mov
aam
mov
dec
stos
pop
ss
push
mov
mov
mov
cmc
ror
insl
mov
push
push
sbb
ljmp
add
sbb
dec
fisttps
xchg
les
xchg
cmp
mov
and
jae
ds
cmp
sub
push
jl
jno
jmp
xor
cmpb
gs
xchg
adc
adc
lods
ficoms
mov
and
mov
fdivl
mov
dec
xor
stos
xor
sbb
add
lret
push
loope
inc
je
jecxz
inc
fsts
add
xor
test
sbb
sub
sti
sub
addb
pop
dec
cmp
push
hlt
cmp
push
xchg
push
ja
ret
xchg
jae
jnp
jae
insl
into
fsts
aas
push
daa
sub
dec
out
ss
and
sbb
sub
gs
mov
js
lahf
xorl
add
js
testb
mov
inc
divb
les
fidivs
fsubr
pop
add
jp
inc
shl
pop
xor
fstpl
out
inc
hlt
fninit
std
push
jo
adc
movsl
cs
fwait
pop
xchg
pushf
mov
mov
clc
jbe
xchg
repz
fiadds
cmp
add
sti
jg
push
orl
pop
aam
sbb
adc
mov
pushf
insl
fsub
adc
ret
adc
pop
xlat
pushf
sub
xchg
mov
in
sahf
inc
rcll
sub
inc
and
mov
and
jmp
out
stos
daa
popf
pop
sbb
fisubrl
pop
ret
out
push
push
scas
fwait
cmp
adc
pop
adc
in
lcall
xchg
movsb
pop
pushf
movsb
outsb
xlat
dec
stc
mov
divl
ror
dec
mov
lock
jbe
lahf
push
or
pop
push
mov
test
push
adc
sub
mov
dec
jmp
dec
cld
pop
add
ss
mov
mov
rcrb
mov
mov
pop
test
ss
pushf
jbe
jb
idivb
xchg
fidivrl
mulss
gs
or
shl
rcrl
call
mov
adc
or
je
movsb
mov
scas
push
pop
mov
xchg
cwtl
lcall
jle
xchg
inc
mov
dec
in
in
jae
fisubl
adc
out
loope
mov
mov
push
mov
fs
and
cmp
push
pop
in
dec
add
cmc
push
sbb
negb
pop
fisubl
mov
testb
push
sti
iret
inc
sub
repnz
jp
addr16
fcmove
and
mov
push
imul
dec
fwait
hlt
repnz
std
ljmp
push
cmp
out
and
xchg
lahf
addr16
stc
dec
push
rolb
stos
test
adc
push
jge
push
in
xorl
fisttpl
popa
push
in
mov
jns
lahf
jae
mov
xor
cld
inc
mov
fucom
cmpsb
sub
and
xor
shrb
inc
subb
push
xchg
mov
dec
sbb
stc
and
lds
sub
push
fucomp
daa
repz
in
lret
cmc
daa
lcall
push
dec
rcll
ljmp
lcall
dec
bound
shl
mov
mov
inc
fsub
add
xor
jg
fwait
stos
and
push
mov
mov
imul
push
mov
sti
out
bound
rclb
mov
push
mov
filds
dec
fimuls
mov
dec
sti
add
pop
jo
lret
aam
jge
repnz
jno
or
aam
and
xchg
cmpsl
or
push
cmp
xchg
or
add
inc
add
push
loopne
xchg
shll
mov
jl
xlat
or
and
inc
jbe
xchg
xchg
stc
dec
adc
inc
pop
xchg
xchg
outsb
clc
pop
inc
pusha
pop
ds
stos
adc
cli
fs
cmpxchg
das
jge
shlb
je
fdiv
and
mov
and
mov
mov
mov
ljmp
jns
inc
pop
fsubrl
fs
pop
shlb
jp
inc
sbb
fdivr
push
mov
fstpl
icebp
mov
push
icebp
mov
stc
scas
dec
push
arpl
mov
sbb
fcmove
pop
push
pop
mov
pop
jae
mov
xchg
ljmp
pop
std
dec
test
imul
jae
jo
outsl
pushf
add
repnz
lahf
jmp
cmp
mov
mov
fldt
inc
add
xchg
mov
adcb
mov
test
lcall
stos
in
jl
push
jmp
jno
sub
aas
cld
retw
out
mov
movsl
sub
mov
pusha
arpl
je
out
insb
jbe
je
inc
push
xor
add
movsl
ss
pop
sahf
loop
popf
dec
xchg
jl
sub
ljmp
xchg
mov
mov
pop
loop
xor
mov
mov
push
ret
addl
jno
and
add
pop
scas
xchg
ds
idivb
dec
dec
pop
xchg
mov
and
push
cld
out
push
jo
test
shrl
mov
cmp
int3
ficoms
cmp
test
adc
cs
mov
and
mov
push
popa
sbb
pop
outsb
ret
int
cmp
insb
lea
fldl
and
mov
andl
into
cmp
and
or
jbe
insb
insb
pop
xchg
jecxz
test
nop
jno
mov
cmc
inc
insl
sub
les
xchg
sbb
push
add
mov
pop
or
pop
pop
sbb
dec
frstpm(287
mov
cld
loopne
leave
shll
push
pop
inc
pop
fdivrl
int
mov
add
sub
js
sbb
xchg
icebp
jo
loop
rcl
repz
pop
in
cltd
out
fs
fiadds
mov
xchg
mov
jg
xchg
insl
std
and
add
sbb
jnp
mov
or
adc
clc
iret
xchg
ret
push
mov
cmp
lock
sahf
jp
frstor
out
out
adc
xchg
add
gs
inc
cwtl
push
mov
inc
sbb
repz
cmpsl
xlat
mov
jmp
jbe
out
lods
shrl
push
repz
test
jne
push
mov
sahf
ja
dec
jns
pop
xor
out
or
push
shll
xor
cld
push
inc
loope
call
or
adc
movsl
nop
xor
cmpsb
inc
sarl
loope
scas
imul
leave
je
sbb
rcl
ljmp
inc
sbb
daa
test
mov
xchg
aas
sbb
aas
push
cmpsl
fisubrl
inc
lret
adc
mov
mov
and
inc
mov
and
jae
pop
jne
stos
scas
pop
mov
adc
int
pop
mov
test
xor
cmp
xchg
mov
popa
movsb
call
mov
dec
jo
mov
movsl
rcll
push
and
sti
sti
mov
mov
pop
icebp
push
ds
adc
fcompl
and
sub
and
sub
inc
addr16
andl
add
pop
fldcw
jno
scas
xorl
push
stos
xor
mov
es
rcrb
inc
and
xchg
stc
pop
jmp
ja
rcrl
fs
inc
in
and
jne
push
xchg
lock
pmaxub
jp
sbb
ret
std
mov
lock
arpl
push
push
call
out
pusha
push
inc
fwait
int3
or
stos
xchg
mov
sbb
das
sbb
jns
loopne
test
mov
pusha
xor
testb
xor
cld
testl
or
pushf
push
cmp
movb
push
sub
push
shl
sbb
stc
popl
xor
shll
test
and
shll
add
mov
outsb
lret
pop
shlb
inc
test
les
jne
ds
xlat
xor
and
cmp
lds
or
daa
dec
cmp
mov
lock
addr16
lods
adc
cmp
mov
mov
aaa
pop
xor
inc
and
add
xchg
jmp
int
inc
test
jne
sarb
fcomps
stos
fwait
mov
orb
xor
ret
repnz
or
jnp
imul
push
stos
inc
fwait
jae
arpl
adc
add
xor
and
shrl
ret
sbb
or
jnp
imul
push
stos
inc
fwait
jae
arpl
adc
add
xor
and
shrl
mov
mov
jecxz
xchg
imul
mov
mov
lahf
jae
arpl
adc
add
adc
and
rcrl
ret
sub
xchg
imul
lods
push
jmp
mov
xor
xchg
faddl
in
pop
and
loope
aad
lods
adc
dec
xor
jl
sbb
xorl
sub
faddl
in
rcrb
fcoms
push
add
and
inc
push
jb
bound
lds
hlt
rolb
loop
adc
pop
add
sub
inc
int
out
mov
into
mov
push
dec
dec
stc
pop
sbb
xchg
add
in
xchg
ret
push
fcmovu
or
cmc
pop
mov
or
pop
push
out
mov
fstl
and
inc
mov
pop
pop
mov
jns
mov
dec
xor
loop
add
bound
addb
cmc
pushf
xlat
pushf
ja
loop
lahf
mov
dec
loope
and
mov
ret
push
cmp
pop
bound
push
add
mov
jno
cmpsl
cli
mov
pop
aad
push
mov
test
jno
sub
push
xor
jg
loop
inc
xor
es
or
aaa
loop,pt
pop
lret
sbb
in
in
rcrb
mov
pop
add
and
add
adc
bound
fistpl
mov
xchg
shl
leave
adc
addr16
xor
or
inc
push
adc
inc
divl
into
adc
xchg
mov
mov
ja
push
sub
sbb
outsb
push
insb
sub
push
pop
pop
pop
neg
or
cwtl
into
test
repnz
add
and
inc
or
cmp
sub
faddl
in
rcrb
lods
adc
xor
push
sbb
or
cmp
sub
fsubl
out
sub
rclb
jb
mov
lds
mov
sbb
in
xor
mov
push
xor
push
test
js
fwait
imul
fdivr
lcall
fs
repz
lret
in
xchg
jmp
int3
repnz
and
ja
mov
cmp
pop
sti
xchg
shrb
ret
lods
inc
mov
sti
adc
imul
sbb
mov
int
jne
mov
loope
sbb
add
ficomps
loope
loope
pop
lods
jmp
xor
adc
iret
fbstp
ret
pushf
clc
fiaddl
sub
cltd
mov
dec
mov
add
loopne
icebp
sbb
jb
addr16
sbb
jecxz
inc
idivl
movsl
loopne
aad
xchg
xor
div
in
pop
xor
add
inc
mov
lods
pxor
es
mov
call
cmp
sub
pop
loope
pop
aad
movsl
sbb
divb
movsl
pop
test
fsts
xor
inc
in
mov
cmc
gs
je
jmp
adc
dec
divl
xchg
imul
cli
jae
hlt
add
lock
les
out
pop
iret
dec
mov
inc
mov
mov
cmp
cmp
mov
leave
inc
cld
adc
les
dec
dec
in
iret
cld
mov
in
jl
cmpsb
div
jns
out
mov
mov
popa
fwait
pop
aam
pop
push
pop
mov
cmp
mov
test
int3
cld
fsubl
add
cld
imul
repz
les
cmp
inc
lea
sub
jne
dec
xor
sub
idiv
adc
mov
js
notb
or
sub
addb
inc
and
push
or
push
inc
inc
mov
cmovbe
inc
jg
in
addr16
jg
push
loop
movsl
icebp
enter
sbb
mov
jne
fidivrs
mov
ja
sub
push
adc
jg
pop
fwait
mov
loop
call
push
cmp
lret
adc
or
sub
adc
and
sbb
xchg
hlt
clc
mov
aam
lahf
lock
or
cs
movsb
mov
add
shlb
ljmp
mov
sub
xchg
dec
and
scas
aad
ret
aas
jmp
aaa
leave
jg
add
lahf
inc
cltd
loopne
icebp
dec
or
stc
iret
nopl
pop
movsl
adc
fildl
repz
sarb
add
test
xchg
push
cmp
pop
push
mov
orl
pop
in
cmc
adc
insb
dec
mov
xor
movsb
jb
pop
ret
cli
push
sbb
add
loopne
sbb
add
adc
out
rcl
nop
xchg
dec
fistps
push
movsb
mov
cmp
sbb
inc
push
pop
subl
xchg
adc
dec
mov
lods
sahf
icebp
inc
and
scas
cmp
pop
test
scas
ss
cmpsb
in
pop
data16
addr16
mov
repnz
addr16
aas
cmp
ficoms
aas
lea
lods
mov
pop
repnz
sub
icebp
adc
fisttps
pop
inc
or
je
stc
je
sub
push
push
in
cmp
sub
pop
push
outsb
outsl
push
mov
ret
sub
or
mov
insl
in
fldl
jmp
add
insl
dec
xlat
mov
out
stos
icebp
testl
cmpsb
and
repz
xchg
sub
jge
mov
adc
push
sub
fwait
mov
into
std
int
pusha
cpuid
arpl
mov
xor
fldt
sbb
stos
dec
or
rolb
mov
imul
or
test
sbb
push
or
fsubr
fbld
or
pop
aas
nop
or
mov
pop
ret
in
movsl
push
pop
sub
aas
test
lea
or
pop
loop
add
rorb
out
jnp
add
mov
adc
in
daa
aaa
es
jb
cmpsl
ss
call
add
xor
adc
out
push
push
in
pop
cli
sarb
cld
sbb
push
subl
or
sahf
cmp
scas
or
ljmp
dec
xchg
mov
sub
pop
arpl
clc
sbbb
mov
mov
xlat
cltd
dec
jmp
fwait
cmp
inc
mov
dec
test
loope
lock
mov
out
and
adc
add
jmp
sub
pop
repnz
pop
shrb
dec
fwait
jno
test
leave
outsb
int
imul
mov
mov
jbe
cmpsb
js,pn
push
or
push
inc
and
xchg
in
jo
jg
das
adc
jne
fcmovnu
cltd
xchg
dec
test
fcmovbe
stos
scas
fdivr
sbb
or
pushf
fdivl
leave
jge
and
pop
pop
scas
jae
lahf
xor
inc
jmp
imull
push
test
fiadds
jg
dec
mov
jecxz
loope
and
call
inc
pop
pop
es
mov
arpl
sub
sub
sbb
lret
push
inc
inc
fcmovb
cmpl
flds
flds
hlt
dec
mov
pop
mov
cmp
sub
test
test
hlt
xchg
mov
scas
push
adc
adcl
add
hlt
sbb
sub
mov
jo
dec
fiadds
cwtl
or
es
inc
or
xchg
dec
push
pop
add
aad
lods
icebp
mov
mov
dec
sbb
jne
shlb
xchg
sub
mov
subb
mov
and
lahf
mov
aaa
add
mov
daa
mov
sub
xor
cwtl
stos
jne
push
loopne
xor
or
test
push
test
aas
popf
jp,pn
aad
and
fistps
nop
aas
mov
rcrl
mov
das
pop
and
xchg
jmp
jno
push
orb
int
fwait
dec
dec
mov
mov
mov
fucomi
fstl
rolb
mov
out
cmp
lahf
push
push
dec
repnz
mov
xchg
int3
xor
mov
xchg
pop
jb
xlat
xchg
mov
mov
aam
xor
or
hlt
mov
subb
outsb
test
xchg
mov
inc
jo
mov
push
push
lds
loop
fidivrs
mov
add
jae
push
xor
std
mov
lea
add
mov
pop
dec
insl
rorb
scas
and
mov
inc
mov
inc
cmpb
out
jle
xor
jg
addr16
gs
mov
scas
rcrl
push
stos
mov
out
popf
jecxz
fnsave
mov
sbb
cmp
je
xor
inc
fldenv
cmpsb
aas
sub
es
xchg
add
mov
push
xchg
cmp
adc
hlt
mov
adc
sti
aad
sbb
jmp
mov
mov
push
leave
clc
pop
mov
aad
shll
pop
push
and
cmp
jnp
jecxz
and
push
dec
popa
adc
pop
push
xchg
pop
mov
add
and
jns
rolb
mov
cmp
cltd
into
dec
mov
or
int3
loop
push
scas
add
stos
data16
and
push
setg
adc
ss
jae
mov
adc
jge
sbb
movsb
jbe
jp
es
push
and
push
int3
insl
insl
mov
sbb
pop
mov
inc
jb
nop
sarl
mov
sahf
dec
jb
xor
or
mov
cld
jae
and
dec
dec
out
test
enter
xchg
and
js
mov
pop
ds
movsb
clc
or
rolb
pushf
into
xor
sbb
ljmp
in
cmpsb
mov
sti
push
add
xchg
out
outsl
push
lods
scas
pop
fists
fimuls
and
nop
repz
jo
jae
aam
sbb
ds
movsb
jl
lahf
std
xchg
orb
sub
call
jnp
dec
fs
pop
loope
stos
jnp
out
or
jae
insb
mov
jecxz
jnp
aaa
dec
lcall
fucomip
adc
xor
sbb
loop
xor
jae
std
sub
pop
popf
in
and
jnp
push
mov
out
aaa
insl
inc
nop
fsub
repz
daa
in
xchg
dec
scas
out
lret
xor
out
cld
cmp
mov
shrl
js
cmp
mov
stos
push
icebp
cwtl
jns
mov
adc
in
lret
xchg
shrl
stos
fstpl
pop
jecxz
int3
insl
dec
sub
jb
xor
sub
jno
sti
mov
add
xchg
and
loop
ja
push
mov
mov
cmp
clc
jns
adc
test
scas
jl
cmp
mov
test
cmpsb
les
outsl
js
push
adc
test
outsl
mov
dec
ds
ret
adc
adc
sub
jl
jbe
rcrb
iret
movsl
cs
and
mov
jb
and
cmp
add
popa
scas
xchg
fbld
adc
les
scas
cmp
jnp
jcxz
vmread
setg
dec
push
cmp
nop
push
out
add
mov
in
mull
adc
xchg
xchg
inc
and
mov
dec
cmpsb
push
or
loop
aaa
lock
xor
sub
jle
repz
enter
mov
pop
popl
push
cmp
jns
or
xor
pusha
gs
jb
enter
sub
push
xchg
cmp
lcall
dec
dec
jb
aas
daa
stos
repz
nop
xchg
inc
lret
cmp
adc
in
movsb
inc
mov
push
inc
sbb
ja
xchg
mov
iret
scas
mov
sbb
mov
mov
push
scas
pusha
lock
mov
es
and
data16
xorb
lock
rclb
pop
sub
xchg
cmpsb
sub
and
xorb
fadds
int
mov
popa
push
xchg
push
std
xchg
fcomps
insl
aaa
xchg
cmp
xchg
adc
jecxz
xor
cltd
mov
pop
dec
push
int
cmp
test
in
jecxz
or
dec
loope
xchg
add
mov
test
in
mov
push
scas
adc
pop
jne
fstpt
push
cltd
test
xchg
es
ss
stos
cmp
jno
xor
pop
lret
mov
push
negb
inc
dec
cmp
mov
inc
sbb
jno
jns
dec
enter
insb
push
aam
jo
dec
mov
shll
es
into
mov
jae
pop
lret
inc
ja
fimuls
sub
dec
es
ds
jge
std
add
fsub
in
mov
inc
jmp
mov
dec
pushf
movsb
shrb
cmp
and
xor
xchg
xor
push
data16
ficompl
loop
idivl
push
mov
push
and
xor
loope
inc
pop
test
or
push
orb
js
shrl
or
sub
lret
rcr
sub
andb
sub
xchg
dec
cmpb
xchg
cltd
in
jle
je
push
dec
in
push
xchg
sahf
cmp
jmp
in
lock
sbb
test
iret
gs
mov
ljmp
loopne
mov
nop
pop
outsb
xor
sbb
imul
sbb
ret
push
ss
es
sub
sti
jbe
aam
cmp
in
adc
pop
movsb
push
lret
jle
mov
cwtl
rclb
pop
xchg
insl
mov
rcll
jl
fdivrs
in
push
and
repz
mov
xor
aad
inc
xor
lret
iret
jle
movsb
outsl
xor
and
cmp
xor
adcl
xchg
sub
rclb
pusha
test
and
cmpsl
mov
test
loope
dec
push
mov
sbb
xorb
pop
add
mov
sbb
sbb
mov
mov
fldt
and
mov
or
inc
aas
andb
inc
test
popf
jmp
ss
js
pop
repz
lret
nop
or
nop
jle
push
shlb
xchg
test
dec
pusha
add
out
mov
jecxz
cmpsb
pop
clc
pushf
aaa
push
loope
ss
insb
add
int
rcrl
adc
cmc
sub
mov
testl
add
dec
or
fidivs
fucomip
cmp
pop
popa
pop
adc
mov
adc
stos
adc
push
cs
fwait
enter
push
cmp
sub
sub
sti
xor
sbb
in
adcl
movsl
vorps
sbb
inc
xor
jecxz
jmp
loopw
jp
mov
mov
push
push
lret
or
nop
xor
cmp
mov
cmp
sub
mov
add
or
sub
pop
sub
jecxz
cmp
icebp
jbe
insl
push
push
add
in
cmp
add
nop
xor
dec
mov
jne
sbbl
out
inc
outsb
outsb
xchg
push
negb
in
ret
cwtl
jl
imul
movsl
inc
add
cmp
inc
sbb
ret
ret
xchg
mov
fs
inc
add
into
aad
and
inc
nop
push
movhps
ss
cmc
or
adc
inc
cs
mov
andb
cld
push
test
jae
adc
mov
mov
out
stos
sti
pop
adc
test
xor
jns
fs
in
dec
mov
add
mov
cwtl
sbb
mov
lods
sti
int3
adc
and
adcb
aas
mov
lahf
in
rcrl
push
or
mov
les
and
cmp
or
mov
cmc
jb
mov
push
xchg
sbb
sbb
inc
ret
fcompl
ljmp
ret
inc
les
dec
or
fwait
xor
mov
fimull
push
fdivrs
dec
pop
pushf
xchg
lods
push
nop
stos
and
das
fwait
outsw
ror
or
mov
adc
lock
mov
clc
scas
rcll
sub
shll
mov
sahf
xor
and
out
arpl
lods
test
mov
data16
scas
mov
xor
fsubrl
mov
add
cmp
push
xchg
fs
add
sbb
sub
insb
or
mov
out
popf
sub
sbb
sub
sbb
mov
cmpsl
push
pushf
leave
inc
xchg
test
jns
fstps
test
arpl
aam
xor
push
sbb
in
sbb
aas
into
and
bound
sbb
pop
push
es
xor
xor
sbb
xor
mov
and
sub
sbb
orb
or
xchg
mov
add
xchg
clc
and
lahf
call
push
fcmovnu
add
sbb
sahf
add
ss
ret
jo
xor
popa
xlat
and
roll
or
push
ds
in
adc
dec
pop
psubusb
xchg
mov
cwtl
xchg
xchg
jnp
push
cmc
adc
sbb
stos
cmpsl
cmpsb
test
sub
test
xor
push
xchg
scas
lcall
leave
enter
out
sub
cmp
push
ror
jecxz
dec
das
das
dec
xor
mov
cwtl
cmp
int3
mov
and
mov
mov
aas
inc
out
push
sbb
popf
dec
jp
inc
aad
and
fwait
icebp
xor
enter
js
push
add
mov
xchg
dec
repz
testl
xchg
mov
adc
in
mov
hlt
jnp,pn
pop
mov
jge
ja
movsb
mov
mov
adc
mov
shll
mov
lds
sbb
fdivl
mov
sbb
xchg
push
dec
xor
ds
lods
mov
and
popa
sub
mov
cld
shll
rcr
orb
push
mov
push
lahf
jbe
jecxz
push
jbe
cld
adc
divl
pop
dec
in
mov
xor
push
inc
fisttps
sub
call
or
add
ja
adcl
orl
aad
inc
mov
outsb
push
sub
sub
dec
imul
jp
adc
jge
lods
mov
mov
sub
mov
xchg
repnz
pusha
int3
test
jg
in
dec
sti
cmp
add
das
cmc
mov
ret
shlb
and
test
cli
pop
push
out
imull
jne
sub
inc
sbb
dec
push
xchg
xor
filds
xor
mov
dec
jmp
xchg
and
scas
cmp
fdiv
stc
sbb
fstpt
sbb
leave
outsl
fcoml
lods
popa
adc
add
shr
cmp
fisubrs
xor
mov
xor
daa
vmread
lea
in
shrb
mov
loope
aaa
enter
push
push
out
cli
dec
cmp
std
mov
mov
test
adc
insb
jnp
push
xlat
aas
adc
sub
or
inc
cli
mov
rol
adc
es
cmp
and
cmp
rorb
pop
jb
cltd
jb
xor
xchg
jmp
cli
mov
cld
mov
and
mov
push
xchg
pop
jnp
xchg
cmpsb
pushf
pop
or
test
inc
mov
std
pop
mov
push
test
adc
xchg
adc
sub
mov
or
mov
pop
pop
jo
cmpsb
push
andl
out
or
flds
js
int3
mov
fistl
in
subl
xlat
sbb
adc
inc
insb
mov
cmpsl
mov
pop
testl
jb
mov
mov
sub
and
scas
add
add
movsl
or
jnp
dec
mov
and
pop
ds
lcall
adcb
jo
mov
push
sub
cmp
and
subb
scas
sbb
push
mov
add
dec
rorb
arpl
stos
std
fmuls
arpl
pop
std
dec
and
outsb
mov
inc
pop
addr16
jb
in
xchg
ret
pop
loopne
test
or
add
stos
movsb
sbb
push
repnz
or
sbb
clc
and
adc
cmpsb
inc
paddw
sub
push
mov
rclb
imul
push
arpl
add
sub
mov
je
xor
mov
out
cvtdq2ps
test
cmp
sbbl
jb
mov
and
je
mov
in
pop
sbb
pop
sti
mul
add
adc
jl
dec
sti
push
test
sub
dec
xchg
sahf
mov
mov
add
pop
add
jp
int3
xor
into
mov
sbb
push
and
inc
or
out
push
push
jno
mov
dec
pop
jbe
ljmp
jb
cmp
cmp
pmullw
jl
subb
fldl
sub
es
cmpsl
adc
lods
cmp
xchg
shll
push
push
sbb
in
popf
cmp
jns
notb
idivb
dec
and
add
dec
or
fwait
push
cmp
fnstsw
in
add
movsb
sahf
imul
cs
movsb
clc
sub
xlat
loop
loop
add
mov
lahf
mov
loopne
in
xor
inc
sbb
je
inc
insl
ss
insb
adc
data16
and
xchg
cmp
push
xchg
inc
add
jae
pop
movsl
and
lret
fmulp
add
fs
lret
out
shlb
xchg
mov
cmp
xchg
xor
repz
push
xlat
add
cmp
jns
flds
add
repz
cmp
or
sub
sub
fwait
inc
outsl
add
std
xchg
dec
mov
aam
stc
dec
push
cmp
into
or
ds
add
insb
hlt
outsl
inc
sbb
hlt
sub
push
mov
sub
cmc
and
adc
push
push
xchg
test
adc
addr16
aaa
test
add
aas
dec
pushl
and
mov
and
fs
or
aas
cmp
jg
movsl
out
dec
mov
push
lods
adc
cmp
jge
aad
and
insb
ret
inc
push
or
cmp
jecxz
mov
cli
mov
inc
add
jl
shll
pop
add
ss
pop
jge
mov
mov
sub
rol
xor
jnp
fnstenv
and
lret
cmp
imul
cmp
repnz
iret
jmp
mov
xor
pusha
cmp
jle
cs
inc
cltd
das
imull
mov
push
clc
jae
pop
cmpsl
mov
mov
add
fcom
xchg
cmp
mov
in
jno
pop
es
aad
sbb
jb
cld
cmp
iret
into
roll
mov
fists
jg
xor
pop
aaa
mov
or
or
sub
popl
test
mov
ja
movsb
mov
inc
std
out
fldenv
mov
mov
mov
mov
add
and
inc
or
cmp
sub
faddl
in
rcrb
lods
adc
xor
push
sbb
or
cmp
sub
faddl
int3
xor
mov
mov
mov
add
and
sbb
or
cmp
xchg
fadds
in
rcrb
insb
adc
cwtl
jl
sbb
xchg
xor
inc
adc
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
mov
add
push
mov
fists
mov
adc
inc
rclb
mov
add
jo
inc
rclb
mov
adc
inc
rclb
cmp
or
jns
push
and
mov
ja
bound
cmp
and
pop
xorb
movsl
test
ljmp
out
or
int3
stos
cmp
mov
dec
jno
mov
loop
repnz
lret
sahf
and
nop
xor
rolb
pop
mov
pop
and
xor
mov
adc
adc
sarl
shlb
add
mov
sbb
scas
shl
mov
outsl
xor
fnstcw
pop
ljmp
sbb
adc
and
cltd
nop
xor
push
das
sahf
das
dec
sarb
pop
jns
data16
frstor
ja
repnz
js
xchg
push
shlb
daa
adcb
or
pusha
bnd
pop
rorb
mov
adc
inc
rclb
inc
shll
les
aam
xchg
popf
push
lods
sub
cmp
jno
push
jmp
lea
mov
aam
xor
jo
adc
xchg
cmp
fsts
jg
adc
xchg
xchg
pop
lahf
sub
push
les
cmpsl
or
jo
inc
rclb
mov
adc
inc
rclb
and
adc
pusha
bnd
inc
rclb
mov
adc
inc
rclb
and
mov
and
add
pop
add
xchg
ss
cmp
lcall
cmc
ljmp
ja
sbb
mov
mov
cmp
inc
dec
dec
lods
fcmovbe
js
out
test
js
rcll
pop
inc
or
mov
push
push
shl
rolb
xor
dec
push
out
shll
pop
pop
pop
xor
cs
pop
mov
repnz
push
repz
aam
jnp
call
sbb
xor
test
push
push
jmp
out
hlt
outsl
cwtl
repz
sub
ja
push
shrd
xor
jle
lahf
mov
xchg
lret
xor
jae
add
bound
test
daa
push
xor
push
push
shrb
cmc
js
jb
les
mov
dec
push
insb
or
cld
xchg
adc
lret
add
mov
sub
mov
enter
mov
jns
mov
push
popa
mov
push
jns
cmp
and
xchg
aaa
insb
insb
sub
add
lret
dec
cltd
inc
aam
dec
xchg
cmp
inc
fcompl
xor
pop
inc
jge
sub
test
sub
lret
adc
inc
push
lock
xor
cs
subb
push
fsubrp
lret
push
inc
pop
outsb
pop
jno
out
jo
scas
enter
popa
aaa
or
dec
mov
add
icebp
rcl
lahf
pop
outsl
in
xchg
mov
xchg
sub
push
dec
sahf
rorb
mov
repnz
call
inc
mov
ja
leave
dec
movsb
arpl
xor
test
fxch
divb
xor
sub
fcompp
push
ja
shrb
mov
sbb
adc
call
sub
mov
pushf
ret
lcall
orb
push
dec
xor
mov
jl
mov
and
xchg
les
insb
xor
add
iret
aas
cwtl
in
iret
mov
iret
mov
mov
repz
dec
outsb
push
push
add
mov
cmp
jns
insb
cmp
mov
sbb
cld
movsb
lock
jge
sbb
rcrl
call
lods
inc
mov
dec
add
push
fs
pop
mov
jge
add
stos
mov
stc
aam
stc
shlb
daa
cmc
xchg
lods
add
jae
adc
loopne
inc
sbb
dec
add
xchg
cmp
jmp
sbb
fnstenv
push
es
cmp
cmp
jbe
test
dec
cmpsb
mov
xchg
fnsave
cwtl
jmp
pop
insb
cli
or
xchg
cli
adc
adc
xor
jge
pusha
and
dec
pop
cli
repnz
cmpsl
cmp
cmp
pop
sahf
cltd
jmp
bound
fnstsw
cltd
pusha
out
dec
fidivl
ljmp
icebp
out
cld
inc
push
and
dec
ror
cld
int
push
push
jae
lahf
xchg
mov
daa
sti
shr
mov
add
cmpsl
lock
movsb
pop
push
outsb
add
dec
xchg
std
pop
push
gs
and
cmp
sbb
pop
adc
sub
cli
sub
cmp
pushf
icebp
pop
popf
cmp
icebp
push
adc
cwtl
mov
cltd
and
jb
scas
outsb
inc
roll
scas
inc
or
pop
testb
stos
ffreep
sub
or
dec
sub
or
add
lods
jg
enter
mov
stos
and
mov
outsl
add
fdiv
mov
adc
sbb
int
mov
repnz
push
jp
jbe
fists
cs
fsubs
shr
and
xchg
bound
push
push
in
inc
add
test
push
inc
test
repz
iret
jb
xorb
daa
aas
cs
xor
cli
xlat
cltd
inc
inc
cwtl
imul
test
sbb
loop,pt
add
rclb
cmp
pusha
cmp
mov
sbbl
or
loopne
add
aad
mov
sbb
rcl
and
es
js
cs
or
push
testb
and
jbe
cmp
lea
dec
add
or
sbb
add
cs
jmp
sbb
pop
xor
mov
movsl
xor
pop
xchg
mov
fisubrl
leave
add
aas
inc
and
jno
enter
sub
movsb
push
fsubl
xor
xor
cmpsl
or
pop
inc
push
pop
xchg
sub
jae
or
jbe
int
jle
test
and
call
mov
scas
pusha
out
add
rorb
and
stc
mov
popa
es
cld
out
xchg
sub
mov
xor
xlat
fwait
outsb
in
cli
lods
enter
cmp
ja
pushf
mov
nop
pop
clc
fists
cmc
inc
fs
dec
xchg
testl
dec
test
out
mov
ds
mov
pop
sub
into
mov
inc
adc
mov
push
lahf
scas
fstpt
mov
add
loop
cmpsl
iret
test
lods
jne
push
dec
dec
push
xlat
jg
add
insl
ret
sbb
sbb
adc
daa
roll
xchg
xor
rcrb
adc
inc
fld
scas
mov
out
add
insb
enter
in
adc
and
lock
stos
addb
mov
orb
in
push
fwait
int3
imul
stc
gs
or
pop
jmp
pop
jnp
mov
xchg
xchg
jl
pop
nop
rorb
scas
jns
imul
mov
ret
mov
frstor
cmpsl
cmp
xchg
or
sub
xchg
jo
fistpll
push
ret
dec
arpl
sub
pop
fisttps
dec
dec
dec
inc
cli
sti
push
aad
and
fsubrs
or
movl
inc
or
out
cmp
ret
push
push
cwtl
dec
or
into
lock
xchg
sbbb
lea
cmpsb
sbb
and
dec
popa
scas
xchg
mov
add
sub
clc
mov
pop
loope
test
adc
sar
ja
inc
mov
out
imul
inc
dec
popf
andl
movsb
jns
aas
and
cmp
outsl
test
xor
into
cmc
pop
cmp
cmpb
jns
test
push
mov
jmp
mov
ss
xor
jbe
insl
dec
dec
xor
mov
and
and
inc
add
in
test
and
and
rcr
mov
fldcw
into
ja
movsb
pop
sub
adc
lret
or
mov
inc
adcl
out
pop
sub
lock
inc
rcrb
sub
jmp
les
repnz
xchg
xlat
mov
mov
cmc
sub
push
inc
addr16
sub
or
addr16
test
xchg
rolb
add
rcll
pusha
or
mov
xchg
lret
les
adc
cmp
mulb
subb
adc
mov
sarl
adc
sbbb
xchg
mov
jnp
push
and
movsb
pop
fimuls
mov
out
arpl
xchg
in
movsl
sti
daa
jg
dec
test
fcmove
dec
fnstcw
test
and
mov
int
lret
rorb
add
jecxz
fisttpl
sbb
push
mov
pop
daa
dec
sbb
cmpsl
les
adc
pop
popf
cmp
lods
int3
in
adc
add
pop
pop
jno
add
mov
in
arpl
ficompl
adc
inc
cmp
sub
in
inc
test
insb
scas
jne
fildll
test
cld
movsl
xor
jmp
xchg
popf
fucomp
and
sub
sub
xchg
or
mov
faddl
inc
fsubl
sahf
push
sti
sti
xchg
ja
loop
cmp
xchg
fidivs
or
sbb
xor
xchg
mov
movsl
out
mov
or
aaa
popf
mov
mov
pop
mov
adc
dec
sbb
push
push
xor
push
stos
sahf
ret
es
mov
add
leave
icebp
push
sbb
mov
ja
add
cwtl
xchg
sub
cmp
scas
lret
mov
push
flds
lods
dec
in
sub
dec
jge
lahf
iret
stos
cmp
or
popa
push
rolb
aas
jb
fidivrl
xchg
jl
pop
negb
inc
test
push
inc
mov
lcall
in
mov
or
xorb
fnstenv
icebp
int
addl
mull
ss
xor
mov
shl
mov
jg
gs
mov
pop
push
call
or
sub
cmp
adcl
test
add
sarb
jmp
sub
add
fwait
add
rclb
aaa
fcoms
mov
gs
cs
or
xchg
enter
dec
pop
pop
add
cmp
cmpsb
jcxz
fwait
or
inc
mov
scas
popa
bnd
in
scas
cmc
mov
int
in
cwtl
push
adc
mov
ljmp
pop
jecxz
sbb
daa
or
xchg
jg
mov
js
jg
fists
movsb
fldt
inc
and
push
sbb
lret
sbb
sub
pop
ficompl
cmp
incb
sbb
xchg
and
stos
setge
icebp
cmp
ret
clc
mov
push
fildl
popf
and
clc
mov
cwtl
or
jo
mov
mov
inc
cli
inc
in
imul
ljmp
test
mov
fnsave
jg
out
sahf
stos
mov
sub
mov
test
pop
push
and
inc
mov
aam
cwtl
fsub
cmp
add
inc
inc
cmp
in
sbb
mov
decl
or
push
cmp
push
jns
jae
xlat
sbb
test
js
shrl
lret
mov
test
sahf
mov
lods
dec
leave
int3
mov
jno
sti
aas
adc
mov
movsl
mov
fldl
in
loop
andl
push
push
iret
in
and
cli
rolb
aas
js
sub
fisubrs
sbb
nop
gs
in
rorl
stos
jmp
sldt
lret
cmp
pop
inc
sbb
ja
inc
decl
rclb
stos
lds
clc
mov
je
push
aas
sbb
or
cmp
stos
ljmp
or
js
cli
aas
pop
cmpl
lcall
ret
sub
aad
in
push
je,pn
mov
sahf
repnz
es
ds
xor
out
enter
pushf
popf
rcll
push
jle
stos
xor
jge
addr16
adc
sahf
adc
inc
mov
inc
xor
pop
pop
insb
jns
pop
into
inc
pop
lret
outsl
sti
mov
fwait
out
mov
add
imul
pop
dec
insb
lods
and
les
cltd
dec
pushl
aaa
jbe
movhps
and
jns
test
or
shlb
mov
jno
xchg
pusha
pop
in
mov
or
insb
dec
xchg
sub
stos
ret
rcrb
in
mov
out
ret
xor
sbb
lds
sub
loopne
sbb
pop
fwait
aas
idivb
add
pop
and
imul
xchg
dec
inc
sub
xchg
xchg
mov
push
and
xlat
jp
inc
pusha
fst
or
add
mov
arpl
xchg
mov
fcoms
xchg
rorb
insl
sbb
adc
pop
imul
mov
notb
fs
cmp
loope
sbbl
loop
add
loop
fmull
hlt
aad
jae
pusha
sbb
cmp
ret
inc
test
mov
push
mov
dec
push
sbb
push
xchg
add
mov
push
cli
sub
pusha
jl
aad
pop
mov
notb
data16
add
ja
sub
push
or
loopne
mov
pop
push
dec
into
mov
inc
lret
ds
xchg
xor
in
sbb
daa
pop
roll
mov
xchg
mov
stos
lret
outsl
scas
lret
mov
test
ja
sub
sub
clc
jle
jg
scas
fwait
inc
std
jb
xorl
lret
bound
cmp
daa
cs
js
or
call
jns
push
push
test
mov
add
sub
sub
test
popl
cmc
js
jnp
dec
mov
clc
dec
inc
daa
cltd
ljmp
push
push
cwtl
push
fidivl
into
and
lods
out
sub
mov
cltd
fs
cmp
mov
dec
push
rorl
scas
cmp
jnp
ss
adc
int
pop
ds
mov
outsl
sbbl
ljmp
cmp
sbb
aaa
mov
adc
mov
jae
inc
scas
sti
or
fwait
inc
pop
aas
shrl
mov
insb
pop
and
scas
insb
or
or
leave
ss
mov
out
jb
cmp
test
add
pop
stc
cmp
popa
mov
js
xchg
inc
repnz
jbe
mov
xor
mov
cmp
mov
push
daa
sbb
pushf
push
inc
or
mov
sub
mov
add
gs
repnz
or
push
subb
inc
inc
clc
rcrl
xchg
adc
push
fisttpl
inc
out
in
hlt
pop
mov
xor
imul
out
in
xchg
xchg
popa
add
jae
test
pop
out
jo
add
sub
cmpsl
repnz
inc
popa
clc
adc
negb
add
and
sbb
sbb
nop
inc
inc
insb
xchg
or
sbb
in
sbb
cmp
pop
or
fiadds
xorb
and
dec
test
popa
cmp
popf
flds
push
cmc
ja
cmp
enter
adc
sub
push
incb
xchg
mov
pop
das
push
ss
mov
pop
or
iret
pop
aas
cs
mov
fimull
xor
add
mov
fcmovbe
pop
repz
mov
lods
jnp
mov
mov
sti
popa
movsb
stc
stc
fs
popf
out
sub
mov
test
loop
inc
fmuls
adc
xchg
push
lahf
mov
ret
or
cmp
aad
jle
jle
aam
aas
xor
dec
pop
inc
push
fisttpl
stos
push
inc
fucomip
jge
xchg
mov
xor
outsb
inc
dec
pop
jg
dec
mov
dec
jo
mov
add
push
adc
aam
jo
pop
adc
hlt
sbb
int
pop
push
push
int3
popf
add
pop
imul
dec
pop
popa
mov
pusha
addr16
and
mov
mov
push
pop
mov
push
stos
imul
fs
pusha
xlat
push
jno
mov
push
scas
add
loopne
test
hlt
and
stc
lcall
lods
push
fidivs
sbb
dec
push
or
mov
push
movsb
dec
adcb
push
int
stos
lock
or
jns
aad
push
stos
pop
dec
push
jbe
jno
addb
insl
in
pop
or
hlt
jno
inc
xor
shlb
shll
push
loopne
xchg
mov
pop
xor
mov
out
or
xlat
pop
js
scas
inc
pop
sbbl
or
add
das
mov
mov
cmp
mov
sub
iret
cmpsb
lcall
or
in
out
in
push
movl
inc
lods
orb
xorl
in
rcl
roll
mov
iret
xor
pushf
sub
imul
dec
cmp
ljmp
inc
mov
xor
jnp
cmp
outsb
mov
pop
jmp
dec
nop
inc
and
sub
xchg
add
inc
or
dec
sti
add
mov
mov
add
pop
loopne
inc
pop
in
mov
shll
mov
fists
push
pop
das
dec
imul
dec
or
dec
ss
icebp
or
xor
and
test
xchg
mov
andl
lret
nop
fcmovnu
dec
out
cmc
iret
sahf
insb
ret
adc
lods
xor
pusha
xor
xchg
mov
xchg
in
or
dec
mov
das
adc
lret
notb
inc
mov
enter
seto
or
scas
ljmp
add
mov
ror
das
xchg
pushf
clc
pop
inc
push
cmp
pushf
dec
adc
dec
in
mov
out
lahf
dec
mov
ja
lahf
ss
cld
es
jl
mov
outsb
inc
push
adc
mov
loop
daa
loop
lcall
mov
daa
iret
cmp
add
ret
mov
adc
cmp
lahf
jb
loope
cmp
mov
push
aam
fwait
cmpsb
mov
fcomp
ds
or
es
out
sarl
lods
test
sub
mov
or
enter
outsl
cmc
insb
scas
xchg
sub
test
xchg
mov
push
movsl
jae
dec
inc
sbb
imul
sbbl
mov
inc
sub
aam
and
dec
sub
or
sbb
movb
push
push
into
aaa
xor
hlt
jae
cli
cmp
cmp
insl
push
mov
arpl
sub
fsubrs
imul
lret
and
xor
stos
aas
scas
js
iret
sub
ret
pmuludq
dec
and
dec
mov
aam
pop
sbb
inc
shrb
aaa
stos
icebp
dec
pusha
add
scas
shll
jge
lock
pop
pop
or
mov
jmp
aaa
inc
inc
shrb
jmp
in
movl
fs
jp
and
xor
push
push
add
mov
and
mov
loopne
mov
shufps
add
pop
sub
and
stc
cmp
push
xchg
cmpb
sti
repnz
pop
adcb
xor
in
lret
xchg
into
inc
dec
xchg
mov
popa
insl
imul
seto
arpl
jg
mov
lods
testb
cmpsb
outsl
mov
and
je
dec
test
cmp
adc
mov
or
fildll
push
inc
pop
gs
mov
cltd
bswap
sub
sub
sub
push
fwait
xchg
add
jo
push
pop
add
pop
popa
aas
push
mov
cltd
icebp
xchg
jae
add
data16
push
aam
lcall
push
jae
mov
pop
subl
adc
cmp
fcmovnbe
push
add
scas
std
add
ja
push
leave
popa
clc
and
into
mov
out
dec
ss
mov
sti
nop
dec
lods
stos
xchg
cmp
outsb
lea
and
push
test
pop
out
and
stos
rclb
divb
mov
data16
xor
sti
jne
or
incb
loop
dec
add
mov
jne
cmp
in
cli
cmp
cmp
fists
es
add
or
mov
ret
mov
negl
and
cs
daa
dec
stos
or
out
mov
test
incb
adc
sar
das
sbbl
mov
sub
xchg
fsqrt
loop
jbe
es
stos
xor
rcrl
mov
bswap
ret
cmpsl
call
push
sub
jl
cld
lcall
mov
aaa
push
jecxz
jnp
cmc
dec
push
cmp
cmp
out
pop
test
sahf
add
cmp
clc
and
sub
in
adc
add
dec
ret
int3
inc
fdivrl
sbb
ret
rclb
inc
lret
add
push
xlat
stos
inc
mov
xchg
js
cltd
mov
lea
adc
push
dec
sub
loopne
bound
fs
fcompl
stos
loopne
cld
or
rorl
adc
inc
pusha
in
dec
pop
insb
mov
push
sub
adc
loop
inc
mov
or
and
idivb
clc
sti
jp
int
cmp
inc
push
clc
inc
outsl
sub
mov
outsl
xor
loope
mov
outsb
push
jae
adc
dec
insb
mov
pop
jns
jae
sub
add
call
push
mov
push
aaa
loop
push
fdivs
sub
cltd
jmp
fmul
ljmp
outsb
mov
call
xchg
movsb
enter
int3
mov
xor
adc
js
out
mov
loope
pop
sti
outsl
sbb
ja
mov
mov
test
cmc
xor
lcall
jne
or
jge
sub
xchg
cmp
enter
inc
adc
stos
es
add
arpl
stos
adc
in
cwtl
sub
mov
iret
div
push
lea
shll
lods
pop
and
mov
sbb
mov
std
ss
rcr
mov
pop
pop
in
and
pop
ss
mov
xchg
shlb
inc
fistpll
aam
mov
adcl
adc
cmp
inc
xchg
pop
inc
sbb
call
push
push
mov
rcll
mov
xor
outsb
test
enter
add
sub
cltd
dec
jle
dec
test
xchg
movsl
fwait
sar
cmp
sti
jb
xchg
imul
psubusw
xor
pusha
bnd
inc
rclb
mov
adc
inc
rclb
and
adc
pusha
bnd
inc
rclb
mov
adc
inc
rclb
and
adc
pusha
repz
inc
rclb
mov
adc
inc
rcll
and
adc
pusha
bnd
inc
push
push
frstor
adc
adc
aas
stos
das
push
imul
pop
adc
sub
mov
jmp
sahf
test
stos
cltd
push
imul
sbb
or
cmp
sub
jmp
jmp
fwait
mov
imul
pop
or
inc
cmp
or
sbb
jmp
mov
int3
out
ljmp
sbb
nop
or
aas
subb
call
add
inc
in
into
test
push
cmp
inc
adc
hlt
mov
pop
popf
ss
add
add
cmp
pop
je
and
pop
xchg
and
dec
cli
adc
xor
add
adc
mov
push
sub
pop
push
popa
ds
sbb
sub
into
push
cwtl
push
jmp
adc
push
test
push
cwtl
ficomps
stos
aam
mov
arpl
sbb
fwait
mov
ss
mov
fsubrp
dec
hlt
test
sbb
add
pop
and
xor
push
test
mov
jns
dec
pop
pop
sbb
dec
cmp
or
stc
and
cmc
fsincos
test
iret
lock
cmp
dec
add
push
sub
dec
mov
lods
mov
iret
lock
xlat
pop
or
sbb
sub
pop
jb
push
push
pusha
pop
jge
mov
xchg
fucomip
imulb
sub
sub
pop
or
cmp
sub
fucomi
lret
stc
sti
leave
jmp
fwait
test
stos
cltd
pop
imul
sbb
or
cmp
sub
fucomi
lret
stc
sti
leave
jmp
fwait
test
stos
cltd
pop
imul
pop
xchg
cwtl
add
fmull
sbb
aam
sbb
icebp
sbb
xchg
lea
inc
repnz
xchg
pop
shlb
dec
insl
add
inc
je
or
pop
out
pop
leave
xor
jmp
or
sahf
insb
pop
sbb
adc
xor
ret
cmp
push
sub
pusha
ss
repnz
xchg
fs
ja
sbb
push
test
sbb
xchg
cmc
imul
xchg
pushf
xlat
mov
aad
imul
xor
inc
jmp
adc
scas
mov
jp
pusha
xor
adc
insb
cld
gs
mul
mov
mov
in
jle
jnp
jmp
test
inc
outsl
jbe
mov
xchg
aaa
jp
xor
mov
stos
jle
add
out
add
lahf
dec
cmp
xchg
shll
inc
fidivs
mov
movsb
dec
xchg
shll
lock
push
shr
cvttps2pi
ror
or
ret
dec
ret
icebp
or
or
sub
cmc
xchg
pop
adc
inc
filds
leave
inc
xchg
pop
aas
xlat
pop
pop
mov
push
sub
sarb
pop
call
mov
add
sub
push
cld
jbe
xchg
shl
fs
dec
jmp
jl
push
loope
pop
daa
insl
fwait
scas
pop
fdivs
cli
enter
jl
add
pop
sti
cs
loope
and
push
xor
fldenv
push
xlat
xor
mov
mov
inc
dec
ss
xor
xchg
shll
cmp
jae
imul
push
and
push
test
sub
pop
or
lods
adc
and
sub
das
pop
cmp
dec
jmp
in
dec
cmc
dec
push
scas
push
adc
mov
imul
mov
xchg
pop
andb
adc
pop
push
int3
jecxz
inc
cmpsb
mov
adc
push
mov
fimull
rolb
and
jmp
lods
sub
pop
cld
cmp
lahf
push
shl
jmp
pop
out
call
push
push
je
inc
mov
mov
hlt
loop
ljmp
rclb
or
adc
push
jo
mov
mov
aam
mov
adc
mov
ss
dec
sbb
mov
sarb
cmpsl
pop
les
gs
mov
or
sbb
add
bound
sbb
mov
cld
sti
pop
cmpl
push
movb
out
gs
jbe
or
mov
imul
rcr
movaps
mov
pop
add
test
push
jo
fisubs
or
push
mov
ds
push
sbb
pslld
int
pushf
and
jns
out
xor
test
pop
addr16
pushf
out
xchg
mov
inc
rclb
push
out
and
mov
rep
or
mov
iret
and
rorl
and
nop
push
and
add
xchg
push
outsl
dec
loop
jp
jb
test
daa
add
adc
movsb
out
push
mov
mov
xchg
inc
outsb
fs
mov
jb
in
popf
sbb
lds
sub
test
push
dec
ret
sbb
pushf
scas
or
ffree
or
lret
ret
lret
lds
jae
jge
cmp
sbb
fmul
je
push
cmp
adc
dec
add
mov
push
sbb
popa
ficoml
js
rcrb
sbb
sbb
pushf
add
xor
jbe
test
lcall
scas
mov
test
inc
inc
adc
repnz
xorb
dec
push
adc
ret
jo
mov
sbb
mov
outsl
sarb
xchg
clc
addr16
add
pop
lcall
jns
push
adc
shrb
into
mov
push
out
mov
jge
pop
pop
pushf
cmc
dec
or
lret
cmpsl
add
mov
cld
sbb
inc
pushf
mov
pop
das
insb
adc
inc
inc
nop
idivl
inc
rolb
jbe
stc
xchg
sarl
bound
call
xchg
mov
xchg
das
xchg
and
ja
lahf
sar
pop
aaa
jo
xor
jge
push
and
imul
std
cmp
imul
inc
outsl
subb
inc
std
adc
inc
jno
xor
stos
or
and
mov
mov
out
or
cmpsl
or
ret
cs
jmp
push
and
add
imul
adc
movsb
add
aam
adc
pop
jo
les
inc
test
cld
fucom
nop
cmp
sbb
mov
sbb
push
cmpsl
pop
mov
jmp
loope
xchg
mov
dec
sub
and
mov
fs
aam
pop
or
cmp
sub
inc
mov
cmp
add
jb
add
leave
jl
jae
pop
inc
cmpsb
fnstenv
stos
adc
shlb
sbb
test
test
loopne
mov
push
inc
pop
or
push
outsl
repnz
loop
lock
jecxz
and
pusha
and
shrl
xor
das
aas
dec
inc
mov
aas
js
xor
or
jmp
or
jae
std
xchg
enter
mov
mov
fbstp
adc
cli
xor
arpl
aaa
in
xor
adc
cmp
jb
iret
fdivp
mov
rcll
mov
in
rcll
inc
and
iret
iret
jne
je
imul
repz
enter
fildl
subb
das
ret
add
pop
or
xchg
jno
cmp
aad
mov
sub
pop
xor
les
cmp
xchg
push
mov
mov
insl
rolb
push
imul
dec
cmp
jb
adc
adc
push
mov
fprem1
addr16
mov
push
pushf
xchg
sbb
fildll
dec
pop
mov
movsl
lods
mov
cmpsl
mov
or
sahf
push
mov
mov
sub
insl
jne
test
or
in
and
sti
sbb
mov
stos
xchg
dec
lret
mov
pop
dec
sub
xor
imul
add
sbb
sbb
jne
xor
mov
daa
dec
adc
out
lods
cmc
pop
aaa
insb
lahf
sbb
lret
js
addl
int3
inc
xchg
mov
jnp
enter
rcr
insl
jmp
sub
dec
or
sbb
push
adc
out
lods
push
mov
movsb
lds
test
int3
stos
call
pop
int
orl
dec
xchg
pop
aad
pop
scas
pusha
mov
dec
xor
adc
mov
lds
xchg
cmp
int3
mov
sub
xorb
cld
xor
ret
push
xor
xchg
shll
addr16
or
orl
sub
xchg
add
mov
jle
cmp
push
scas
test
or
fucom
lcall
call
test
mov
rcll
cmpsl
imul
sub
mov
stc
sarl
pop
mov
pop
into
aas
and
jae
or
pop
dec
out
jno
loop
mov
lea
sahf
in
mov
xchg
mov
add
pop
push
adc
jmp
ds
sub
cmp
sub
js
cs
mov
xor
js
sahf
sub
pop
push
bound
jnp
push
mov
add
insb
sbb
in
lods
xor
cmc
xchg
lock
dec
and
add
adc
mov
jo
inc
xchg
dec
sbb
daa
mov
add
icebp
xchg
push
imul
mov
mov
or
inc
aad
iret
sbb
out
mov
xchg
inc
jecxz
dec
or
add
shrl
call
pop
push
jge
dec
jo
enter
cmpsb
cmp
jne
mov
mov
rolb
adc
data16
cwtl
rcl
out
inc
sub
pop
lahf
cmp
bound
fs
insl
cmp
mov
adc
in
aas
cmpb
pop
fsubrs
cmpsw
inc
fnsave
add
mov
addl
pop
mov
mov
hlt
cmpsl
push
orl
in
hlt
fcompl
jecxz
xchg
in
lret
dec
fdivs
mov
mov
mov
andl
mov
ja
jne
jmp
orl
sbb
lahf
enter
dec
jo
int
add
push
sub
lcall
xlat
test
nop
push
xor
sahf
ss
lahf
lret
jbe
aam
sub
pusha
es
ljmp
or
push
mov
test
xor
and
xor
xchg
cld
add
pop
mov
into
lods
or
push
inc
rcll
pushf
fidivl
ja
inc
and
int
shrl
xor
arpl
adc
mov
popl
neg
dec
pop
rcrl
xchg
mov
inc
dec
mov
push
nop
mov
mov
or
dec
lods
mov
js
clc
addr16
sbb
ret
test
mov
and
stos
imul
jge
adc
jecxz
cmpsl
fwait
mov
test
adc
scas
in
dec
inc
scas
mov
lods
clc
aaa
sbb
sahf
or
popf
xchg
daa
sub
xor
jb
inc
in
daa
out
mov
dec
leave
adc
mov
sti
subl
mov
inc
cmp
lea
push
out
jne
jns
mov
fldcw
sub
test
mov
dec
adc
sub
sub
leave
cli
and
mov
int
mov
push
pushf
push
jmp
insb
mov
mov
pushf
ds
aad
sub
sbb
cmp
adc
pop
data16
xor
repz
add
or
notb
jbe
and
call
mov
out
mov
add
add
fisubrs
inc
movsl
bnd
jp
mov
xor
xchg
shll
divl
inc
push
outsb
pop
idiv
int
out
mov
mov
mov
dec
sub
sbb
inc
fiadds
call
push
cli
lret
das
scas
jae
sub
sub
aad
dec
or
jmp
and
scas
xchg
xor
xchg
stos
adc
inc
sbb
push
adc
add
in
inc
pop
adc
cli
or
fcomp
stos
stos
and
into
jmp
mov
dec
dec
dec
push
pushf
inc
jmp
dec
adc
pop
dec
xor
mov
adc
lods
in
dec
push
xor
repz
pop
fidivl
cltd
inc
push
lock
in
xchg
bnd
lea
fcmovbe
fdivrl
call
mov
jp
addb
pushfw
and
mov
jae
pop
leave
loop
test
pop
add
adc
cli
pop
push
fistl
stos
cld
inc
arpl
pop
sub
dec
xor
stc
fidivl
and
mov
xchg
loope
aam
filds
sub
sbb
mov
dec
xor
cmpsb
add
fs
outsb
mov
cmpsl
test
addr16
ret
test
loope
ljmp
rcl
mov
pop
arpl
mov
inc
cmc
in
pop
mov
scas
jmp
int
test
xchg
imul
mov
xor
sub
sarl
push
mov
sub
aad
jnp
int3
int
scas
sbb
icebp
leave
imulb
imul
dec
mov
sbb
call
outsl
orps
nop
sbb
mov
dec
imul
stos
push
inc
sub
aam
test
sbb
in
and
cltd
pop
xlat
pop
mov
inc
test
iret
das
popa
xchg
push
cmp
fcoms
mov
aas
mov
inc
daa
pop
test
fs
and
sti
fistpll
add
dec
sub
inc
push
imul
aaa
or
mov
iret
jp
lret
mov
inc
ret
jmp
push
jne
xor
push
bound
mov
jge
outsl
sbb
movsb
pop
cmp
sbb
sbb
in
push
mov
into
xchg
mov
push
push
dec
mov
dec
stos
popa
nop
jb
xor
mov
inc
mov
lods
dec
xchg
inc
push
sub
jg
mov
xchg
or
mov
lret
pop
ljmp
sub
mov
xor
clc
or
aaa
and
and
adc
lds
shlb
dec
rorl
jmp
addb
sub
daa
insb
cmp
and
mov
xlat
sub
lods
pop
push
insl
pop
nop
inc
shrl
adc
inc
xchg
and
leave
xchg
daa
ret
sbb
and
and
mov
lret
icebp
lret
add
mov
out
inc
cmc
xchg
dec
das
xor
jl
jmp
mov
pop
mov
pop
pop
flds
imul
push
mov
nop
pop
mov
shl
push
xor
rclb
adc
mov
in
sbb
add
ficoml
inc
pushf
stc
leave
lods
cmp
scas
mov
and
xchg
or
movsl
std
iret
xchg
sub
test
mov
or
aas
aam
mov
xchg
xchg
jbe
cltd
cmp
lahf
xor
mov
push
sub
outsl
add
hlt
adcl
or
dec
sbb
xor
pop
nop
sub
shrb
mov
mov
addb
out
add
out
stos
ss
xor
scas
adc
or
or
loope
pop
lods
arpl
js
sub
aam
test
sub
movsb
stc
mov
pushl
shll
dec
insb
adc
nop
adc
insb
xchg
aaa
xchg
mov
xlat
repnz
fdivs
sub
cmp
mov
lods
jp
stc
pop
mov
jl
and
mov
in
adcb
stos
push
sbb
cli
aas
addr16
mov
mov
sbb
jnp
cmc
xchg
insl
clc
push
popf
or
xchg
mov
notl
lds
pushf
arpl
sahf
sbb
scas
and
xor
push
inc
pop
xor
out
aas
lea
mov
push
nop
dec
fistps
pop
or
sub
mov
ljmp
cmp
cmp
bound
fistpll
dec
les
inc
adc
cmpsb
sbb
mov
aas
pop
sub
in
es
mov
pushf
sbb
bound
push
ret
mov
int
pop
mov
adc
jnp
xor
xor
gs
imull
sbb
leave
mov
sar
hlt
into
inc
mov
xchg
inc
mov
shr
xor
jb
pushf
mov
das
popa
pop
and
xchg
cmp
sbb
inc
cltd
ss
push
sbb
add
clc
jns
or
push
xchg
xchg
incb
addr16
icebp
pop
and
xor
pop
enter
xor
adc
cmp
das
sbb
sbb
ss
adc
orl
sub
aam
jno
inc
dec
ret
mov
mov
subb
insl
cs
shlb
leave
mov
outsb
jecxz
inc
faddl
inc
dec
aam
fisubrl
xor
xchg
enter
arpl
sarl
mov
xchg
jno
aas
shll
jp
cmp
pop
inc
cwtl
incl
mov
add
mov
sub
lret
inc
data16
cli
add
sub
xorb
nop
lods
and
ljmp
test
cmpsl
mov
aad
pop
push
cmp
inc
pop
mov
ljmp
inc
xchg
nop
dec
int
add
dec
jle
xchg
add
imul
push
bound
mov
jb
inc
paddusb
ss
jnp
and
ja
das
out
mov
inc
sbb
stc
pop
mov
repz
loopw
out
push
cmp
pusha
inc
lahf
imull
popa
jmp
cmpsb
enter
loopne
fldt
push
enter
shlb
aaa
ja
and
sbb
aam
mov
int
clc
mov
cmp
and
addr16
xlat
les
mov
mov
pop
pop
cmpsb
inc
and
pop
inc
out
xchg
stos
fcompl
repz
arpl
dec
jecxz
or
inc
call
jmp
pop
test
mov
mov
pop
and
mov
pop
mov
in
in
mov
mov
add
clc
call
dec
in
out
add
push
dec
call
sub
cmp
cmpsl
mov
aad
mov
xor
lock
movb
shl
jg
loope
xchg
outsb
pop
pop
movl
sbb
xor
ficomps
add
xlat
sub
aam
dec
inc
pop
aad
movsb
lea
xor
js
pop
or
sub
mov
adc
pop
in
sub
jb
pop
in
xor
sbb
sbbl
nop
or
push
cmp
insb
pop
sti
hlt
mov
lcall
xor
fsubrs
in
scas
sbb
jge,pt
repnz
outsl
xchg
arpl
cs
adc
scas
cmc
in
or
leave
fst
and
adc
mov
inc
inc
xor
dec
enter
icebp
adc
adc
mov
out
outsl
xor
and
shlb
rcrb
out
jae
dec
sahf
cs
inc
pop
cmp
pop
in
xchg
leave
pop
sub
enter
jp
ret
jmp
jb
or
test
dec
leave
jne
mov
push
xlat
addr16
into
dec
testb
push
adc
enter
nop
xchg
and
movsb
mov
in
sub
pop
rcl
sub
dec
mov
pushf
dec
pop
sahf
cmpsb
lock
sbb
ret
fdivs
shll
fs
xchg
lods
sbb
iret
mov
loop
xchg
push
sar
mov
loopne
aad
xor
cmc
and
aaa
mov
jne
mov
cmp
mov
mov
jl
outsl
inc
mov
insl
repz
test
and
call
mov
enter
push
pop
lds
scas
mov
iret
js
dec
and
lret
inc
aaa
cs
xchg
outsb
xchg
adc
fdivr
gs
mov
cmpsb
lcall
cmp
rcll
jg
arpl
leave
pop
inc
xchg
jmp
ja
out
popf
in
sbb
lds
test
and
pop
fcompl
add
orb
dec
mov
adc
cli
jl
xor
inc
ja
cli
inc
iret
insl
repz
test
rcrl
jne
movsb
stos
push
inc
and
data16
mov
fistl
in
xlat
mov
dec
ss
xchg
push
push
jge
imul
fisubs
jecxz
inc
push
stos
fadd
jp
sbbb
pushf
mov
shlb
xchg
push
mov
fsubs
cmpsb
or
push
mov
push
mov
mov
inc
imul
pop
sbb
adc
out
add
pop
aaa
rcll
inc
push
popf
aaa
pop
and
xor
mov
or
pushf
sbb
dec
sbb
xchg
dec
out
pop
pusha
xchg
sbbl
sahf
adc
das
xor
and
sarl
mov
pusha
sbb
incl
mov
in
or
mov
mov
add
arpl
xor
mov
out
in
fdivrs
shlb
popf
inc
and
fdivl
push
les
fldcw
adc
dec
cmp
shl
sub
pop
jle
mov
pop
and
jmp
dec
fldcw
sbb
fidivs
pop
jg
mov
xchg
mov
leave
cmp
and
imul
ss
push
push
mov
out
inc
lock
lcall
jecxz
cmpsl
out
subb
sbb
fwait
sub
cwtl
pop
mov
pushf
test
pushf
call
cltd
xchg
repz
pop
adc
movsb
push
rcll
sub
sub
fstpl
mov
inc
xchg
pusha
mov
push
inc
scas
jnp
pushf
mov
sub
je
and
rclb
rorl
mov
pushf
pop
jno
movsb
adc
notb
ja
cmp
insl
mov
jns
jle
cmp
iret
daa
jmp
mov
push
sub
xor
stos
mov
sub
sarl
mov
xchg
push
sarb
sub
mov
xchg
lea
mov
pop
xchg
pushl
sub
sub
in
cmc
in
data16
xor
lahf
or
xchg
repz
adc
xor
add
imul
mov
lods
outsl
aaa
adc
rorb
dec
sbb
in
fdivs
roll
scas
mov
push
mov
out
repz
movsb
ljmp
mov
fimull
adc
shll
fmuls
cld
adc
push
mov
add
lea
dec
sarl
bound
fimuls
add
std
cmp
iret
jb
gs
scas
cmpsl
test
mov
mov
out
fisubs
inc
notl
adc
mov
mov
jbe
and
adc
sub
loopne
rcrl
repnz
ja
sbb
or
cmp
sub
fucomi
lret
stc
sti
leave
jmp
fwait
test
stos
cltd
pop
imul
sbb
or
cmp
sub
fucomi
lret
stc
sti
leave
jmp
fwait
test
stos
cltd
pop
imul
sbb
cmp
sub
fucomip
lret
stc
repnz
out
fstps
mov
jns
dec
inc
pop
sbb
sbb
cmp
stos
sbb
jmp
jmp
in
and
inc
inc
jbe
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
pop
cmp
xchg
adc
in
imul
add
add
push
add
add
add
add
add
addl
mov
inc
add
add
add
add
push
add
fwait
add
add
add
popf
add
or
add
cmpsb
add
add
or
ds
add
add
add
add
add
fiaddl
popf
add
add
add
add
push
add
add
lock
mov
add
mov
das
add
add
arpl
dec
add
add
add
mov
add
add
add
inc
add
add
add
dec
add
add
add
add
adc
add
add
add
add
sub
jmp
popf
add
add
add
add
add
add
mov
add
add
add
add
add
mov
add
sub
add
adc
add
add
add
stos
add
insl
add
push
push
mov
adc
popf
add
faddl
mov
add
sub
in
add
add
add
pop
add
add
add
add
add
add
add
push
add
mov
add
add
add
add
addb
add
add
add
movsl
add
add
add
add
dec
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
xchg
add
mov
and
mov
mov
add
and
mov
add
xor
xchg
lcall
add
add
jae
jns
sub
cmp
movsl
add
add
add
add
add
add
add
add
add
add
add
add
movsl
add
jb
add
add
mov
add
add
add
add
fiaddl
popf
add
add
movsl
add
add
add
add
add
add
add
add
faddl
or
rolb
add
add
add
sub
popf
add
add
add
add
add
add
add
add
add
add
jo
int3
add
fwait
add
add
add
add
add
add
add
add
add
loope
jp
push
add
jae
lret
add
add
add
add
add
jae
sub
jns
insl
add
add
add
add
popf
add
add
add
add
fiaddl
popl
push
add
add
add
roll
movsl
add
add
add
add
jecxz
cwtl
add
add
add
add
add
insl
add
add
add
jns
sbb
add
cmp
ds
add
add
jecxz
xor
jae
arpl
add
add
add
add
add
add
jb
insl
add
add
add
jno
adc
clc
add
add
or
inc
add
add
add
add
filds
out
add
mov
add
add
add
mov
and
test
mov
xor
xchg
sub
or
mov
std
inc
loop
xchg
in
mov
orps
rcrb
movsl
mov
je
xor
pop
adc
test
mov
loop
sahf
adc
lret
imul
or
cmp
or
xchg
mov
mov
lods
nop
pop
shlb
push
sbb
mov
stos
sub
mov
mov
sbb
lcall
mov
adc
jg
push
cmp
iret
inc
iret
or
adc
shrl
fnstsw
push
push
stos
test
push
out
mov
popf
cwtl
lods
fsubp
or
fs
xor
clc
dec
push
test
stc
stos
push
inc
dec
mov
ror
je
std
xchg
fmulp
jbe
adc
insb
xchg
mov
shlb
and
aam
sbb
cmp
xchg
cltd
jns
fdivrs
xchg
lock
cltd
ror
rolb
jne
gs
inc
push
inc
xchg
aam
popa
lds
ficoml
jnp
stos
cwtl
mov
outsl
inc
xchg
or
pushf
sbb
xor
inc
mov
inc
jnp
xor
push
int3
mov
ret
mov
push
mov
push
dec
ret
jmp
fisubrl
or
xor
into
je
lods
pop
cltd
das
call
shl
push
stos
cmp
push
stc
push
xchg
jl
xor
fadds
adc
adc
mov
push
pop
int
xor
rorb
adc
adc
loop
iret
out
lret
jns
mov
inc
mov
lea
aaa
inc
xchg
insb
arpl
mov
lock
mov
mov
xchg
jecxz
mov
inc
pushf
jecxz
inc
and
xchg
imul
mov
inc
lret
mov
call
and
in
imul
add
cs
aad
pop
sub
daa
mov
enter
cmpl
pushf
add
sti
mov
sti
das
cli
outsl
mov
ret
mov
testb
and
andb
add
loope
adc
push
mov
scas
mov
pop
in
shl
outsb
loopne
arpl
push
repnz
mov
mov
sub
pop
rolb
sbb
adc
jae
imul
es
xchg
pop
adc
push
adc
mov
lcall
pop
daa
pop
inc
movsb
fsubs
pop
leave
mov
add
out
andl
and
sub
or
mov
out
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
