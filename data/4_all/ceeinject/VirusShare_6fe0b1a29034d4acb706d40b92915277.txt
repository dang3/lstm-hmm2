call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
sbb
or
cmp
sub
xchg
add
popaw
pushf
xchg
lea
int3
cmp
adc
cmp
sub
pop
push
dec
inc
jl
insb
popa
pushf
xchg
mov
sbb
int3
sar
in
loope
adc
cmp
sub
pop
push
dec
inc
jl
insb
popa
pushf
scas
scas
fst
shrl
xchg
and
adc
cmp
inc
int
xchg
movl
xor
mov
lods
jp
sub
inc
pusha
and
fisubs
jge
imul
push
mov
stos
icebp
popa
sbb
cmp
pop
dec
xlat
push
cmp
divl
loopne
push
fdivrs
mov
popa
mov
mov
cltd
push
in
loopne
out
or
push
xor
stc
cwtl
insb
xor
mov
pop
and
fld
jecxz
in
std
fsub
rcr
add
mov
aaa
je
fiaddl
sbb
test
repz
pushl
cmpsl
push
sahf
lcall
lret
outsb
jl
inc
mov
mov
mov
adc
cmp
sub
pop
push
dec
inc
jl
insb
popa
pushf
xchg
mov
int3
sar
in
cmpsl
pop
jl
rclb
inc
addr16
ds
adc
adc
aam
fnstsw
test
imul
xor
outsl
add
ds
stc
aam
in
mov
mov
cltd
jns
or
push
inc
inc
push
adc
insb
popa
pushf
xchg
mov
int3
sar
in
loope
adc
cmp
sub
pop
push
dec
inc
jl
insb
popa
pushf
xchg
mov
int3
sar
in
loope
adc
adc
ret
add
mov
es
pop
jmp
mov
out
mov
add
sbb
xor
mov
add
div
mov
test
add
fdivrl
cli
or
inc
sahf
cld
push
adc
sahf
pop
mov
mov
sbb
and
stc
fsub
iret
add
jne
fldcw
add
hlt
aas
push
fcomip
pop
shr
ja
into
xchg
sbb
outsl
cmp
imul
fs
aas
push
jmp
push
test
sub
or
pusha
jns
out
out
aaa
dec
mov
cli
adc
data16
shlb
addr16
in
popa
loope
push
arpl
xor
pop
xor
add
pop
iret
inc
xor
jbe
loopew
sub
or
fistpll
outsl
inc
adc
bound
push
mov
popf
adc
fldl
push
nop
in
inc
cmpsl
pop
ss
loop
dec
insb
out
mov
or
jb
insl
faddp
cmp
xor
lods
cmp
scas
jae
stos
sti
mov
cmovbe
ret
sahf
aam
or
int3
mov
xchg
leave
jnp
ret
je
gs
jg
ret
sar
ljmp
mov
xchg
in
cmpl
arpl
outsb
faddl
and
ror
repnz
leave
fsubl
loop
mov
xlat
push
sti
mov
fnstenv
popf
into
nop
ljmp
or
xchg
aam
or
pop
add
stos
add
call
cld
cmp
pop
mov
pop
cmp
notb
in
push
push
pop
cmp
inc
ss
lods
and
rol
xchg
jle
outsl
pushf
movsl
out
int
adc
add
fsubs
lahf
shll
jb
das
clc
popf
sbb
mov
dec
or
mov
loopne
shlb
por
mov
loop
lahf
test
aam
idivl
fcmovnb
movb
ret
dec
into
hlt
and
push
fistl
dec
push
mov
stos
add
lcall
nop
cmp
dec
idivb
cmp
bound
lds
push
fs
adcb
mov
in
loope
xchg
jmp
cmp
outsl
mov
mov
add
cmp
mov
adc
mov
jg
fisubl
les
les
jne
je
mov
dec
out
lret
jno
pop
and
sub
addr16
sbb
xchg
adc
mov
mov
cli
xchg
mov
push
cmp
das
mov
movsl
sbb
pop
aam
pop
cltd
push
adc
mov
js
dec
das
sbb
ja
mov
aaa
mov
mov
xor
lahf
mov
jbe
mov
fwait
insl
or
xor
enter
je
xchg
jbe
adc
cmpsl
and
fwait
rolb
es
xchg
into
add
sbb
lret
xorb
daa
das
shr
cmp
std
mov
inc
cmp
sahf
and
outsl
adc
lods
sbbl
jl
xchg
popa
jmp
inc
ja
repnz
adc
lock
mov
es
xor
xchg
imul
lds
mov
mov
rorb
out
mov
repz
xchg
cmpsb
jle
les
cmc
xor
mov
movswl
insb
dec
dec
mov
inc
lret
idiv
lcall
jle
push
adc
leave
stos
imul
adc
mov
cmp
lcall
out
mov
movsb
pop
scas
enter
imul
aam
lret
mov
nop
sahf
iret
repnz
xchg
adc
sbbl
add
int3
jge
pushf
adc
push
jecxz
mov
push
in
fcmovnb
loope
pop
cmp
dec
into
sti
or
aas
imul
xchg
mov
push
xchg
frstor
lds
dec
out
push
fisubrs
out
push
cli
pop
adc
repnz
mov
mov
lods
std
pop
outsl
pop
add
lods
adc
mov
mov
int3
sbb
ftst
inc
ss
roll
iret
fistps
xchg
cmp
dec
jns
jmp
jmp
push
popf
ret
mov
imul
jno
mul
pop
sbbl
push
std
testb
pop
mov
jecxz
xor
fcoms
movsb
psubd
dec
jmp
push
xchg
stos
into
jp
mov
stos
inc
mov
cmp
mov
xor
aam
adc
movsb
inc
pop
jae
pop
pop
cmp
jg
mov
mov
add
and
jb
dec
sub
ficomps
repz
iret
mov
outsl
call
dec
scas
test
dec
push
stos
and
add
fidivrs
outsl
mov
out
dec
push
movsl
int
mov
fmuls
xchg
cltd
sbb
aam
push
shll
faddp
insb
outsb
push
jae
dec
sbb
add
xchg
or
mov
leave
or
mov
shl
test
movsl
mov
movsb
das
lock
jmp
cmp
pop
push
jb
xor
pushf
hlt
mov
xor
in
imul
shll
xor
inc
ret
mov
jb
sbb
stos
es
rcl
pop
dec
and
mov
xchg
push
sub
mov
pop
jl
mov
xchg
jne
lret
imull
lods
add
adc
inc
add
insb
ret
jnp
dec
cmp
pop
xchg
stc
push
mov
movsb
mov
mov
mov
add
shll
clc
add
mov
cli
clc
jg
cmpsl
lahf
sbb
es
jb
lret
xchg
push
sbb
sub
add
push
fidivrl
jae
mov
adc
sti
xchg
add
roll
pop
mov
sahf
inc
sbbb
inc
nop
fsubrl
adc
fwait
lcall
mov
dec
mov
cwtl
out
add
leave
scas
add
punpckldq
js
and
lods
stos
adcb
cwtl
adc
fs
cmc
and
stos
dec
rorb
je
dec
and
icebp
xchg
out
jb
push
add
clc
loopne
jo
jle
mov
jg
inc
inc
dec
mov
cltd
icebp
and
les
adc
xor
cli
adcb
and
movsl
outsb
jnp
ret
hlt
loope
xlat
adc
push
cmpsl
ds
mov
movsl
rcr
adc
sahf
pop
cmp
mov
loope
mov
xchg
and
fdivrs
loopne
jno
or
pop
jp
lret
stc
leave
je
je
cmp
push
xor
push
pop
int3
dec
into
jne
or
fsubrl
cmp
mov
jmp
push
pavgw
imul
rorl
jle
push
movsl
mov
xor
faddl
gs
bound
jecxz
adc
cmp
into
jge
pop
add
cmp
test
call
hlt
pop
adc
leave
movsl
push
jmp
mov
lcall
sub
into
mov
pop
lock
mov
arpl
or
push
flds
addl
iret
lret
inc
and
popf
xchg
pop
ljmp
or
adc
sub
imul
pop
ds
mov
pop
pop
sub
subw
sub
adc
pushl
inc
push
lods
sbb
negb
arpl
push
dec
out
jp
pop
adc
das
bound
test
ljmp
addr16
pop
push
outsb
adc
dec
dec
jecxz
gs
cmp
pushf
rcr
adc
mov
loopne
test
test
dec
xchg
xlat
mov
testb
and
outsb
mov
xchg
sbb
iret
push
imull
mov
mov
std
std
adc
cli
inc
subb
out
jmp
pop
mov
subl
xor
or
mov
jmp
dec
leave
xchg
dec
sahf
movsl
xchg
faddl
inc
jno
nop
sbb
jns
daa
addr16
cmp
cmp
outsb
lods
cmp
dec
xchg
xor
cli
inc
sub
xchg
dec
dec
out
in
loope
xorl
addl
mov
push
add
mov
aad
and
into
cmpsl
icebp
std
int
lock
cmp
rorl
stos
testb
mov
push
test
dec
minps
inc
pop
sub
or
stos
dec
call
cltd
ds
xor
sar
test
int3
iret
int3
dec
jge
adc
jg,pn
sahf
push
aas
pop
gs
fwait
jb
out
mov
or
cwtl
scas
jmp
dec
inc
mov
into
xor
leave
cmp
sahf
rcrl
xor
shr
push
sti
jecxz
add
cli
mov
and
push
mov
mov
stos
das
lret
pop
jl
inc
jmp
dec
fdivrl
xor
lds
xor
repnz
or
inc
fmul
les
call
add
cmp
and
jae
inc
adc
jae
cmp
add
push
lret
pop
lods
scas
sbb
ret
jmp
mov
ljmp
test
mov
or
jae
xchg
xor
les
gs
xchg
icebp
and
scas
adc
cmp
sub
shlb
dec
mov
sbb
notb
ds
sub
mov
out
sub
jg
jnp
jp
and
mov
pusha
mov
or
lock
test
xchg
incl
mov
movsl
jg
dec
push
test
jb
gs
icebp
jle
mov
jo
lods
out
add
pop
mov
pop
or
xor
shll
iret
pusha
lret
test
pop
in
mov
mov
dec
inc
sub
test
test
xchg
lret
cmp
inc
cs
xchg
insl
jle
fstl
push
outsl
pop
sbb
inc
jmp
dec
adc
popa
jge
xor
movsl
cmp
mov
xor
and
sub
xor
test
lret
in
imul
push
pop
incb
mov
xchg
cli
stos
cwtl
iret
imul
enter
mov
sub
inc
or
pop
sub
or
sbb
jns
bswap
ljmp
lret
push
mov
imul
addl
mov
pop
mov
sub
cs
xor
jne
mov
fs
push
push
gs
mov
xchg
dec
sub
jge
jle
xor
xchg
cmpsl
dec
je
inc
adc
mov
push
dec
mov
dec
mov
cmp
sbb
sahf
xor
push
cs
imul
pop
add
jl
data16
sahf
out
or
fwait
inc
dec
into
int3
xlat
or
push
and
jle
leave
mov
jge
cltd
pop
insb
lahf
fldt
pop
push
jp
out
dec
ret
sar
imull
xchg
fwait
or
movsb
iret
sahf
mov
imul
push
pusha
fidivl
cwtl
lahf
rcll
lods
xchg
add
fnstcw
cmp
mov
imul
fwait
test
outsl
daa
pop
fwait
clc
pop
enter
and
cmp
push
test
mov
mov
incb
xchg
xchg
popf
fisubl
jge
mov
pop
mov
mov
sub
mov
mov
jmp
dec
lock
jo
jns
xchg
jbe
and
cli
clc
data16
stc
xchg
std
sub
cmp
mov
dec
sbb
or
xor
mov
push
cmp
fisubs
lret
inc
fstpt
loop
sbb
cmp
cmp
jae
xor
sbb
jno
push
xor
mov
push
push
mov
ljmp
in
adc
insb
jmp
add
or
inc
cmp
inc
and
test
lret
outsb
lods
pop
sahf
mov
jmp
sub
mov
arpl
inc
daa
sti
repnz
mov
push
out
jp
out
imul
call
add
or
or
lahf
leave
pop
jne
jmp
hlt
cmp
xchg
add
cmp
lahf
das
adc
std
dec
aad
push
jl
mov
jno
cltd
inc
cmpsb
xchg
leave
repnz
mov
mov
stos
jge
mov
mov
out
lds
les
mov
out
sbbl
sub
loop
dec
pop
xchg
and
lret
sbb
cs
sub
dec
aad
fiadds
cld
inc
filds
in
or
lret
xor
mov
jns
pusha
add
jp
lds
in
imul
dec
inc
pop
clc
jno
jno
mov
hlt
pop
inc
mov
in
cmp
adc
jg
dec
xchg
nop
adc
test
xor
adc
cli
aam
inc
scas
mov
dec
and
daa
stos
add
mov
lds
push
aam
movsb
sbb
mov
mov
and
xlat
lods
out
stos
into
mov
mov
push
fsubl
adc
mov
mov
mov
sbb
outsl
inc
out
jne
div
or
add
clc
sub
dec
jno
int3
mov
xchg
gs
repz
leave
out
cmpsb
lret
ljmp
aam
loope
jp
jp
stc
push
fimull
push
in
leave
test
adc
jmp
lods
or
subb
decl
xchg
sbb
hlt
cmp
xchg
dec
insb
stc
fistpl
dec
in
shll
fsubl
leave
ficompl
xlat
ljmp
add
cmpsl
pop
lahf
loope
push
mov
or
inc
add
jp
or
push
stos
xchg
push
dec
loop
data16
leave
cmpsb
jmp
add
shlb
arpl
daa
aam
cld
xchg
jp
fimuls
or
mov
pop
cltd
rorl
push
jo
sbb
mov
daa
mov
cmpl
aaa
scas
jle
pop
cmp
sbb
add
repnz
js
jmp
sub
jno
mov
or
mov
pop
ljmp
inc
fcomip
add
add
cmpsb
cwtl
dec
lcall
dec
cmp
aad
les
neg
repnz
xchg
push
fdivl
sub
add
out
in
aam
scas
lret
adc
or
cmp
jns
and
push
xchg
and
mov
daa
movsl
aas
dec
xor
testl
into
jge
dec
and
mov
pushf
pushf
ljmp
inc
fnstcw
mov
fisubrl
lcall
mov
out
les
aad
and
and
jp
xor
pop
add
and
sbb
adc
insb
inc
xchg
lahf
cmp
cmp
xor
aad
inc
xor
inc
cmpb
adc
call
out
cmc
lret
or
mov
in
das
push
mov
lret
outsb
sub
scas
loop
ss
or
test
dec
cltd
xor
outsl
jae
dec
cmp
repnz
rcr
mov
mov
jge
imul
movntq
aad
jo
jle
lret
and
popa
cmpsb
ljmp
repnz
xchg
or
testb
adc
mov
jns
push
xor
jo
jnp
sub
xlat
lcall
bound
xorl
sbb
outsb
cltd
lret
lds
cmpsb
pop
xchg
dec
shlb
inc
mov
add
les
pop
sub
pop
out
inc
inc
mov
jl
aam
xor
jae
lods
repz
and
pusha
icebp
xchg
jno
jp
inc
dec
pop
xor
xchg
pop
and
lods
pop
rdmsr
test
mov
icebp
fldenv
push
out
inc
xor
mov
push
xchg
push
or
push
add
les
mov
xor
inc
aas
lods
fiadds
mov
fld
ljmp
and
sub
jg
subb
xchg
and
mov
dec
jp
shrb
sub
jnp
jmp
outsb
das
test
into
push
icebp
inc
scas
sub
mov
mov
shrb
xor
mov
xchg
or
sbb
push
cmpsl
add
subb
std
xchg
cmp
xchg
and
repnz
aam
pushl
gs
pop
mov
ret
mov
xor
mov
fdivr
inc
mov
and
jl
fcomi
inc
test
adc
mov
fs
inc
lahf
dec
sub
mov
lret
loop
not
hlt
and
inc
imul
in
push
pushf
pop
pushf
adc
lahf
sahf
adc
out
jmp
pop
inc
sub
outsl
sbb
mov
xchg
mov
pusha
aam
ljmp
mov
in
mov
into
cwtl
repnz
mov
inc
dec
push
rolb
sub
repnz
and
jl
xchg
outsl
loopne
movsl
mov
das
pop
ss
ds
cs
clc
stos
push
adc
and
aaa
mov
popf
sarb
addr16
adc
xchg
fwait
xchg
adc
in
lret
cmp
and
stos
lret
lods
or
je
insb
cmp
test
cmp
fsubrl
inc
mov
push
pusha
sub
aas
out
xchg
int
sbb
xchg
fwait
add
movsb
lock
add
lock
addb
fwait
adc
insl
jbe
aas
cli
push
dec
sbb
push
mov
adc
push
iret
dec
sub
add
loope
dec
lcall
pop
shr
mov
mov
bound
add
rorl
xor
sbb
bswap
neg
xor
lret
add
jae
add
xchg
call
xchg
inc
mov
mov
fcomps
xor
mov
pusha
and
inc
rolb
loopne
add
cmp
loop
cmp
jle
mov
lea
mov
xchg
movsb
call
inc
notl
dec
inc
cmovp
xor
jl
jne
call
mov
nop
dec
movsl
add
or
test
mov
incl
orl
ret
pop
mov
mov
rol
insl
dec
dec
outsb
fdivrs
dec
push
cmc
ret
or
insl
lret
adc
test
test
mov
mov
inc
lahf
inc
xor
dec
sbb
mov
fstps
negb
scas
sub
mov
gs
movsl
movhps
repz
cltd
js
xor
mov
mov
cmp
and
in
cwtl
bound
lock
push
cmpsl
cmp
pop
push
sub
mov
jmp
sub
inc
cmp
cmpsl
lods
xchg
xor
mov
test
scas
mov
cmp
lcall
add
and
dec
sub
icebp
mov
or
aaa
in
scas
jecxz
hlt
aas
or
push
adc
aad
in
cmpsl
xor
dec
or
ja
adcl
pushf
scas
mov
or
pop
mov
dec
adcb
mov
jns
popa
adc
loop
push
mov
push
ss
inc
stc
in
les
xchg
les
addr16
mov
and
xchg
jb
jmp
or
mov
filds
mov
sahf
dec
ret
lds
or
push
xchg
mov
mov
mov
rol
mov
fsubl
mov
push
cmp
in
sbb
int
xchg
sar
sti
mov
frstor
push
les
fcoml
xlat
ljmp
fisubrl
aam
arpl
mov
inc
adc
sbb
xor
std
cmpsb
test
pop
push
cwtl
jae
push
jbe
fcomps
push
scas
cmp
push
jno
mov
aad
data16
mov
push
data16
lock
into
stos
mov
xchg
xor
lcall
mov
call
aam
xor
pop
cwtl
fildl
xlat
mov
in
sub
fdivl
jae
mov
scas
jl
cmp
imul
test
inc
ret
arpl
add
sbb
inc
sbb
sub
dec
xchg
cmpsl
js
push
dec
lahf
or
stc
int3
pusha
in
ja
mov
lods
outsl
test
hlt
dec
pop
es
jmp
inc
mov
cmp
sbb
sub
mov
sbb
xchg
jl
sbb
mov
xchg
sbb
cs
fadd
imull
scas
adc
mov
out
int3
xchg
inc
sahf
and
sub
cmp
fst
lods
mov
paddusw
jbe
and
cmp
addl
aaa
sahf
xchg
push
or
jle
jecxz
adc
cmp
fnstcw
loope
es
aas
cmp
mov
movsb
div
cwtl
xchg
stc
inc
mov
scas
daa
xchg
xchg
sahf
lds
mov
inc
mov
mov
iret
jecxz
mov
lock
mov
xor
add
pop
dec
aas
iret
sub
add
call
icebp
dec
cmpsl
pop
rcll
jge
cmp
pop
loopne
add
sbb
in
mov
add
out
outsl
cmp
adc
xor
and
jge
mov
or
cmpsl
pop
xchg
idivb
sbb
arpl
fs
add
push
dec
inc
jl
insb
popa
pushf
xchg
mov
int3
sar
in
loope
adc
cmp
sub
pop
push
dec
inc
jl
insb
popa
pushf
xchg
mov
int3
sar
in
loope
adc
sub
fcoml
inc
jl
in
popa
pushf
xchg
mov
int3
sar
in
loope
adc
cmp
sub
pop
push
dec
sarl
pushf
outsb
mov
push
mov
lods
pop
mov
push
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
cwtl
jge
insl
mov
test
or
cmp
sub
pop
mov
push
insl
mov
cmp
call
in
cmp
sub
pop
iret
dec
scas
js
push
je
inc
test
fsubs
xor
sbb
sub
dec
movsb
dec
mov
cmp
add
in
xor
sbb
xlat
cmc
lahf
in
adc
arpl
shlb
and
aad
ret
es
bound
hlt
je
ja
inc
push
push
sbb
add
add
movsb
add
xor
fisttpll
cs
cmp
loope
push
shrb
adc
cs
cmpsb
std
sbb
xor
ret
adc
popf
push
xchg
jnp
scas
push
mov
aaa
cmp
call
and
inc
or
jecxz
lret
clc
or
cmp
std
call
sbb
add
mov
mov
mov
movsb
xorb
movsl
push
repz
mov
pop
pop
xchg
dec
xchg
and
mov
lahf
push
pop
push
jge
inc
test
fdivrs
call
cmc
cmp
sub
pop
movsl
dec
mov
xchg
std
jge
pop
cmp
sub
jno
push
dec
fldcw
or
out
adc
add
cs
arpl
mov
inc
mov
sub
stc
jge
insl
cmp
or
sbb
or
cmp
sub
pop
mov
push
insl
mov
cmp
call
in
cmp
sub
pop
mov
push
jle
fcmovbe
dec
or
ja
stos
fistl
pop
lds
jno
jns
inc
rcr
popf
mov
fs
add
scas
frstor
cmp
cmp
stc
rolb
pop
test
pop
ror
bound
inc
lods
in
stos
ss
shl
add
jle
or
mov
les
lods
sub
repz
mov
cmc
pusha
in
fsubrl
jnp
add
push
orb
movsb
xchg
imul
sti
push
add
mov
aam
sbb
pop
inc
stos
adc
jl
mov
imul
push
xlat
jb
cmp
fisttpl
mov
adc
dec
mov
xor
arpl
xor
push
loopne
jmp
nopl
outsl
cmp
cli
mov
test
mov
popf
xchg
or
add
std
fildl
xrelease
inc
sub
outsl
and
mov
loope
xor
mov
cld
xor
idivl
pop
xchg
sbb
xor
and
lods
testb
sbb
xchg
aad
sbb
dec
xorl
test
aas
dec
and
out
jo
mov
mov
mov
fstpt
xchg
dec
jbe
lds
repnz
adcl
dec
lahf
xor
pop
xor
out
or
in
lcallw
inc
adc
cmpb
movsl
cltd
fwait
pusha
inc
mov
ret
ret
mov
aam
test
out
mov
sub
gs
jne
cld
sub
xchg
mov
or
cltd
cmp
aam
mov
adcb
adc
movb
enter
stc
cmp
pop
xchg
test
ret
pop
fsubs
imul
cmpsl
repz
call
dec
fsubl
pop
scas
testl
cmp
xchg
jb
ja
addr16
mov
icebp
xchg
adc
jl
fs
xchg
push
imull
mov
daa
fsubl
inc
testl
ret
repnz
in
sub
adc
std
inc
push
fisubrl
xor
sbb
add
outsb
xchg
adc
mov
inc
sbb
fistpl
js
pop
mov
loop
push
fistpll
jns
jg
add
or
sti
int
sti
loop
jb
or
into
push
test
rcrl
sahf
es
inc
lods
pop
jmp
xor
jp
rorb
jne
mov
test
sub
and
mov
xchg
sarb
push
mov
cmpsb
fcmovb
sbb
mov
popf
mov
cmp
insl
inc
int
stos
bound
xchg
or
sub
xor
lods
or
mov
inc
sub
mov
add
cmp
or
pop
inc
sbb
imul
xor
pop
xor
popa
call
repnz
test
cwtl
mov
jnp
mov
pop
in
fmuls
mov
pop
call
push
jg
adcb
js
mov
sbb
fsubrs
push
pushf
or
std
lods
fdivs
cmpsl
or
sub
jae
adc
pushf
ljmp
roll
and
or
and
jl
adc
pop
inc
lods
popf
or
xor
and
mov
mov
test
je
mov
idivb
xchg
leave
adc
or
inc
stos
mov
mov
sbbl
cwtl
push
outsl
push
and
cmp
inc
frstpm(287
insb
mov
imulb
inc
xor
lret
push
mov
adc
inc
adc
test
out
imul
aam
mov
jl
ret
mov
pop
subl
sbb
pop
je
jp
fcomps
or
out
adc
loop,pt
cwtl
into
loopne
xchg
jne
add
cli
in
mov
shl
mov
add
jae
mov
je
adc
sub
insb
inc
xorb
pop
dec
inc
or
sarl
jmp
shlb
lea
mov
cmpsl
loopne
mov
call
jp
xor
and
imul
and
stos
and
into
ret
xchg
or
sub
adc
dec
dec
jle
outsb
sarb
inc
jp
cmc
sub
dec
cmpsl
ljmp
pop
adc
cmpsb
cmpsb
das
daa
mov
mov
nop
and
pop
jne
mov
insl
mov
mov
mov
adc
lods
sub
sbb
scas
push
sarl
or
enter
sarl
add
inc
jmp
ljmp
mov
imull
jl
in
mov
add
mov
notl
adc
mov
imul
dec
pop
cmpsl
loope
cmp
jb
mov
hlt
dec
mov
pushl
addr16
xor
aaa
lea
and
mov
sbb
xchg
fistpll
or
sub
pushl
jg
jnp
popa
inc
and
mov
add
adc
sub
or
cmpsl
pop
icebp
or
pop
mov
and
in
rorb
add
push
mov
cmp
push
ret
adc
or
xlat
sub
pop
icebp
dec
insb
dec
jae
gs
insl
cmp
stc
fmuls
arpl
mov
pop
cwtl
and
add
xchg
mov
mov
out
push
pop
push
movsl
adc
jns
xor
pop
inc
mov
inc
in
push
mov
sub
imul
cmc
ss
fadd
xor
mov
mov
mov
test
outsl
scas
mov
in
shlb
dec
aam
dec
jl
add
dec
jecxz
mov
add
sub
negl
aam
insl
out
cmp
outsl
insl
jge
sub
ret
xchg
mov
pop
divps
xor
or
mov
sahf
and
xlat
mov
mov
mov
and
imul
into
aam
int
sub
jbe
push
jne
and
outsb
insl
and
sbb
call
in
pop
push
push
sbb
mov
lar
sub
out
scas
mov
mov
fstpt
or
mov
repz
aas
adc
jge
inc
sub
cmpsb
sub
movsl
pusha
test
leave
popf
test
dec
or
add
xor
sub
cmp
jmp
or
lods
mov
rolb
pop
pop
xchg
mov
jnp
or
cmpsb
ret
xor
sbb
mov
mov
arpl
push
shll
movsl
xchg
jns
out
lock
or
push
push
jbe
cld
hlt
das
and
das
es
xchg
pushf
lods
cltd
ja
test
les
icebp
dec
es
jbe
iret
aam
sti
push
fwait
out
aam
cmpsb
mov
and
mov
push
stos
jmp
xchg
ret
fidivs
jne
push
popf
or
imul
lods
adc
jne
mov
xchg
inc
pop
sbb
fs
aad
sub
ljmp
jmp
mov
fwait
test
add
dec
adc
xchg
sbb
xor
sti
cld
mov
mov
pop
roll
add
xor
inc
jp
ljmp
jge
and
in
call
aad
mov
popf
push
push
mov
push
loopne
xchg
lcall
jge
cmc
mov
sub
testb
mov
iret
cmpsl
fsts
xlat
adc
fs
test
out
jbe
pop
ret
adc
ja
outsb
fsubrs
ljmp
movsb
adc
idivl
mov
arpl
dec
into
push
mov
sub
sbb
xor
or
aam
lods
in
jge
jae
scas
push
sbb
fs
sub
jmp
sbb
jecxz
aam
jge
pop
shl
mov
mov
mov
push
add
or
mov
mov
push
cli
fisubrs
jb
pushf
arpl
sbb
add
fwait
sbb
push
cmpb
shlb
out
out
dec
cmpb
fnstsw
lods
nop
dec
push
xor
insb
cmp
push
pop
pushl
sbb
and
das
fwait
push
dec
js
je
sub
xor
pop
clc
pop
test
add
mov
jl
mov
sub
lods
mov
add
add
sub
not
cmp
mov
sub
loopne
aam
push
add
push
adc
sbb
pop
push
jo
out
loop
xchg
in
push
adc
jmp
fidivrl
fcomps
mov
adc
ja
cltd
pop
movsb
inc
jae
ret
lock
dec
mov
jno
cld
add
je
mov
cld
std
push
mov
hlt
test
std
ret
lcall
repnz
mov
inc
in
test
adc
inc
mov
in
fs
cmp
and
push
pusha
ret
movsb
mov
loope
push
dec
mov
popa
xor
in
clc
clc
push
push
or
mov
adc
xchg
ficoms
scas
je
mov
mov
js
sbb
jle
emms
xlat
testl
mov
repnz
pusha
sarb
or
push
mov
pop
out
mov
test
mov
cwtl
adc
mov
or
pop
fmull
xor
cltd
cwtl
ret
jae
or
lods
dec
jge
xor
push
xchg
and
mov
jge
mov
jb
and
rcr
cmp
push
dec
gs
mov
and
sbb
and
sbb
lret
pop
adc
iret
jle
out
adc
jno
mov
cli
push
stc
icebp
mov
mov
imul
push
adc
sbb
in
add
aam
cmpsb
dec
xor
mov
inc
aam
jecxz
ret
test
dec
fwait
sub
pushl
roll
push
mov
enter
jb
arpl
dec
mov
aaa
scas
ret
lods
bound
inc
mov
inc
fwait
push
pop
bound
shll
mov
aaa
test
lcall
lcall
notb
pop
fnstcw
mov
mov
insb
aaa
mov
aas
dec
out
mov
sub
mov
scas
xor
dec
xor
cs
dec
jecxz
push
mov
daa
insb
rcr
mov
andb
out
pop
or
or
pop
fadd
mov
lahf
std
sbb
cmp
mov
cltd
dec
sarl
sub
xchg
leave
xchg
pop
shr
lods
nop
inc
cmp
xchg
outsl
sub
repz
imull
stos
push
loopne
xor
cs
shrl
idivl
loopne
loopne
pop
mov
or
ja
mov
sbb
out
js
mulb
pop
xchg
shufps
iret
es
pop
mov
mov
loop
pop
pop
stc
pop
cmp
test
xchg
mov
es
pop
sbb
and
out
pop
push
data16
test
sub
movsl
imul
fcmovu
adc
xor
imul
ret
jecxz
fcmovb
xor
push
sub
imul
pop
int3
repz
xchg
out
cmp
loop
popf
push
mov
stos
add
ja
inc
imul
xor
mov
cltd
jbe
testb
xchg
push
shlb
pop
fwait
mov
push
jge
mov
iret
mov
adc
call
out
add
add
popl
ds
adc
jmp
sbbl
out
xchg
add
repnz
leave
aam
into
mov
test
mov
sti
cs
add
test
fistl
jnp
in
repz
pop
enter
xchg
adc
test
xlat
test
cmp
cmp
mov
test
dec
xor
je
aas
insb
leave
xchg
adc
lret
jg
xchg
lods
lock
into
dec
into
ret
fsubr
int
jbe
pop
gs
lahf
add
ror
jg
in
iret
xor
cltd
jmp
sub
js
jp
ret
fldt
inc
or
inc
jle
cwtl
pop
jne
into
and
jbe
add
fs
ss
and
sbb
je
call
add
push
shrl
sarb
cmp
jge
xchg
cmp
lcall
pop
in
mov
xor
in
rcll
lods
loope
mov
adc
cmpsb
sub
ljmp
imul
pop
xchg
mov
jle
outsl
int3
mulb
cltd
push
std
dec
mov
jmp
mov
bound
jmp
movsl
dec
ss
push
dec
push
adc
dec
test
stc
xorb
in
movl
imul
or
dec
pop
test
mov
cmp
mov
pusha
stos
ret
dec
outsb
into
push
jle
add
push
cmp
fwait
imulb
xor
dec
daa
mov
int3
leave
scas
jecxz
lock
jg
jns
movsl
insl
push
xorl
jl
cltd
cli
cld
pop
out
lcall
or
ja
ret
and
push
and
test
sub
shlb
movsl
cmove
jecxz
stos
mov
lcall
call
mov
cmp
jbe
jmp
jbe
add
cmpsb
arpl
loopne
or
filds
out
jns
mov
xchg
jmp
mov
sbb
jb
movsl
inc
mov
cltd
jecxz
lret
imul
add
loop
xor
push
pop
and
adc
pushw
jecxz
insb
mov
call
filds
jmp
fldcw
mov
cli
out
fwait
ljmp
dec
sbbb
insb
sub
out
ds
dec
pop
mov
ljmp
jecxz
jmp
jne
dec
std
and
cld
jmp
jne
je
fs
adc
test
pop
push
and
jmp
add
fcoml
pop
jnp
ja
push
jl
pop
sbb
mov
cbtw
pop
xchg
mov
mov
or
cmp
sbb
ss
cltd
les
nop
xchg
scas
push
clc
dec
in
mov
xchg
pushf
dec
xchg
addr16
dec
dec
into
mov
xchg
lret
mov
mov
mov
test
xor
mov
sbb
xchg
test
ficoms
mov
xor
or
sub
mov
jae
jg
inc
nop
dec
in
stos
paddusb
stos
filds
pusha
mov
pop
xchg
pop
aaa
dec
xor
and
add
shlb
adc
push
jne
cmpb
inc
loope
stos
fdivr
sub
xchg
pop
sbb
jl
in
in
in
cwtl
mov
xchg
adc
xor
mov
jle
inc
and
insl
mov
dec
addl
sti
inc
int3
sbb
mov
gs
push
and
inc
lods
arpl
fisubrl
cmp
in
enter
lret
xchg
out
mov
ds
mov
hlt
xchg
gs
cli
cli
int
pop
ss
cli
loope,pn
pop
mov
or
push
ljmp
enter
scas
cmovl
jmp
lds
loope
dec
jg
jbe
push
pop
in
xchg
push
lock
jne
adc
push
mov
popf
push
or
mov
ss
fnstcw
dec
fstpl
sub
nop
xor
push
ss
push
popw
inc
push
dec
ss
mov
jp
cltd
insb
adc
popf
loopne
negb
sar
arpl
pop
into
adc
mov
push
les
push
mov
push
or
inc
pop
test
xchg
lods
jae
push
or
mov
xchg
leave
and
jmp
adc
and
dec
push
add
xchg
and
mov
sti
mov
andw
fwait
sahf
cmp
mov
mov
fisubs
mov
mulb
outsl
daa
hlt
jge
repz
rcl
xchg
into
aaa
test
sarb
test
xchg
jecxz
pop
inc
ja
or
and
movsl
inc
adc
pop
mov
call
xor
ja
sbb
cmova
and
pop
inc
mov
out
adc
mov
fnstenv
rclb
je
lcall
lods
iret
insl
sub
cld
bswap
fs
and
fmull
cmpsl
int3
cmp
rcll
xchg
and
shr
or
jmp
aas
jae
add
lods
lcall
mov
mov
scas
inc
cmpsl
jae
dec
push
cli
jae
popf
out
cltd
orb
cmpsl
or
and
xchg
in
lret
popa
pop
cmpsb
dec
leave
leave
iret
dec
lahf
cmp
jo
cmp
shll
jle
iret
mov
inc
adc
xor
push
jmp
pop
xor
push
lds
sub
pop
jge
jae
scas
sbb
mov
cmp
cmp
mov
xor
shll
scas
ret
or
lock
jmp
cld
nop
in
xlat
or
int
add
lea
jg
pop
xchg
shlb
adc
out
push
cmpsb
or
out
push
enter
scas
into
mov
sbb
iret
movsb
jle
repnz
lds
xchg
cltd
negl
fsubs
add
sti
xchg
push
and
in
movsb
xchg
hlt
data16
stos
repz
fwait
das
push
rep
jns
jne
fldl
or
rclb
dec
push
lret
addr16
xchg
cltd
xchg
mov
sar
xor
cmp
mov
inc
popf
push
out
xchg
xchg
js
push
mul
addl
daa
ret
pop
add
add
or
fs
inc
sub
mov
mov
ret
out
rorb
loop
out
loope
sub
xor
adc
xchg
fwait
push
decb
inc
xchg
mov
inc
daa
call
mov
insb
mov
lock
notb
mov
lret
xchg
loop
aad
sbb
mov
jno
xlat
adc
shll
sbb
or
push
lcall
pop
shrl
loope
out
xchg
cltd
jo
rclb
cmp
in
mov
lods
sbb
xchg
xlat
pusha
hlt
cltd
fdivl
pushl
setbe
in
add
and
sahf
sub
imul
or
xlat
cli
out
inc
push
inc
pop
jg
movsl
shll
adcb
ja
hlt
jns
xor
mov
pop
scas
shrl
lret
cltd
gs
lret
arpl
insb
test
xor
imul
testl
adc
ffreep
sub
and
sahf
push
mov
or
dec
mov
into
dec
pop
mov
repz
push
push
das
int
and
xlat
xchg
xchg
push
icebp
cld
or
cli
pop
lock
jnp
push
adc
dec
fwait
xlat
out
ret
inc
int
pop
mov
add
mov
mov
push
xchg
scas
or
cmpsb
cwtl
jp
lods
jp
int3
out
mov
sub
test
or
xchg
js
scas
pop
push
or
mov
std
stos
ljmp
dec
sub
imul
out
cld
lods
mov
add
and
sahf
mov
in
stc
popf
mov
in
scas
push
data16
push
cmp
cmp
mov
mov
jmp
aad
call
mov
and
movsb
adc
jae
inc
js
push
divl
loop
dec
mov
leave
dec
push
enter
test
and
cwtl
mov
xchg
mov
js
arpl
lock
jne
call
sbb
outsl
push
notl
xor
sahf
add
mov
push
push
add
sub
sbb
ret
add
adc
xchg
inc
test
cmp
xchg
shll
int3
addr16
jo
fxch
xchg
pop
push
dec
jg
cmp
mov
les
mov
xor
jae
cwtl
cmpsl
or
dec
ret
in
mov
sbb
or
or
lcall
filds
or
sub
cli
and
sbb
push
cmp
stos
and
jo
mov
repnz
imul
jmp
in
mov
ds
xchg
push
inc
lods
and
es
je
dec
xor
cmpsb
cli
aam
enter
cmp
mov
adc
mov
mov
xor
hlt
aad
aaa
loopne
and
and
push
lock
inc
mov
movsb
fwait
cmp
mov
mov
mov
ficomps
in
int3
insb
push
adc
insb
cmp
ja
jg
out
push
ret
out
shlb
mov
movsl
jns
lods
sub
outsl
std
push
push
jne
or
cli
leave
cmp
pushl
push
or
test
bsf
out
outsl
mov
aad
repz
jmp
xchg
mov
xor
sub
mov
aaa
outsl
pop
push
xchg
and
sbb
lods
push
mov
les
es
lods
add
push
mov
ss
scas
imul
pop
lret
sub
lea
mov
int3
sahf
add
cld
test
pop
lcall
mov
jbe
in
add
adc
scas
pop
adc
outsb
lret
mov
xor
cmpsb
jns
je
dec
test
lahf
loop
sbb
inc
divl
loop
sbb
fisubs
pop
adc
xchg
adc
iret
push
mov
mov
jmp
dec
stc
cs
push
scas
aas
jp
pop
aad
insl
xchg
dec
fdivrs
call
in
cmp
sub
pop
mov
push
insl
mov
cmp
call
in
cmp
sub
pop
mov
push
insl
mov
cmp
call
in
cmp
sub
pop
mov
push
imul
sbb
testl
xor
nop
repnz
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
data16
xor
add
push
mov
mov
stc
pop
repnz
shlb
addr16
inc
addb
bound
push
mulb
out
add
cmp
loop
bnd
push
shlb
data16
addb
les
and
adc
jp
or
and
loop
shll
arpl
jbe
sub
cmpsb
xor
adc
aaa
jge
lret
sub
imul
mov
jecxz
sub
divl
jmp
in
inc
sbb
mov
pop
or
sub
into
insb
lret
pop
repnz
ss
loop
ret
stc
sub
push
cmpsb
dec
aad
add
bound
push
divb
lret
ret
es
pop
cmp
xor
out
dec
mov
pop
mov
out
xor
ret
out
pop
rcll
and
and
sarl
lea
add
jb,pn
adc
mov
mov
add
notw
inc
clc
jmp
xchg
and
xor
add
xorb
es
push
rolb
jbe
pop
push
lcall
cli
cs
sbbl
mov
cmpb
mov
in
fnstsw
divb
sti
jmp
xor
ds
jo
pusha
imul
outsb
nop
arpl
cmp
out
loope
adc
ds
out
add
adc
loop
repnz
ret
jbe
data16
addb
bound
push
mulb
out
add
adc
loop
repnz
ret
jbe
data16
addb
bound
mov
movsb
stos
xor
xchg
push
pop
inc
ja
xor
dec
dec
inc
sbb
jne
mov
loope
push
mov
nop
std
push
negb
mov
ss
jbe
test
pop
popf
xchg
adc
aad
sbb
mov
inc
push
aas
push
adc
sub
adc
ds
jns
xor
mov
push
into
push
jb
xchg
test
push
inc
dec
jmp
arpl
lahf
es
or
sbb
movsb
pop
mov
mov
push
fwait
or
cltd
inc
iret
mov
dec
sti
push
pusha
bound
sarb
mov
cmp
addr16
fcomip
xorl
cmpl
push
gs
ror
lock
mov
sub
sub
add
iret
push
and
addr16
ja
mov
outsb
cmc
repnz
test
enter
pop
mov
adc
enter
adc
fmull
daa
pop
add
mov
jmp
mov
sub
push
mov
addl
mov
hlt
aas
ret
jno
sub
sbb
mov
test
scas
push
imul
mov
fdivrs
sti
adc
or
cmp
test
nop
les
stos
pop
outsl
add
xchg
and
mov
sub
loop
or
cmp
xchg
and
jo
incl
je
rorb
jae
sbb
int3
in
and
push
das
or
in
pop
jnp
sub
shrb
xchg
lcall
jne
dec
xchg
fbld
pop
ret
mov
xor
sub
xchg
fstpt
rclb
mov
push
xor
pop
xchg
mov
int3
lock
stos
lret
popf
jp
fcoml
and
push
mov
fadd
and
jnp
loop
hlt
adc
mov
aas
or
cmp
out
sarb
mov
and
mov
das
into
inc
enter
or
mov
test
sbb
jnp
nop
ljmp
sub
lret
ja
pop
outsl
xorl
ja
push
repnz
out
inc
and
pop
inc
jecxz
push
fwait
mov
push
xor
das
pop
scas
sarb
jmp
dec
insb
fdivrl
mov
cmp
out
cmp
mov
push
int3
clc
enter
jl
ds
lret
mov
lahf
or
sbb
js
sub
and
adc
mov
leave
mov
dec
insb
insl
and
adc
or
cmpsb
mov
addb
xchg
inc
sbb
dec
sbb
in
out
mov
pop
fnsave
push
pop
insl
pop
imul
or
cmp
push
cmp
push
fcomip
sub
sbb
mov
lret
push
push
insb
jne
sub
addb
ret
jle
js
mov
jmp
jb
cmc
push
mov
lcall
notl
xor
lock
repnz
mov
dec
push
repnz
daa
inc
aaa
cmp
out
jge
adc
repz
sbb
inc
push
adc
xor
fnstcw
push
or
je
adc
sar
icebp
sbb
push
mov
mov
fistpl
mov
pop
inc
mov
push
das
add
cmp
fwait
xchg
mov
mov
test
mov
sub
push
andb
and
sub
inc
mov
adc
stc
mov
into
cmpb
fcomi
xchg
adc
and
push
jl
inc
jno
xchg
cmpsl
outsb
cmp
out
jb
dec
sbb
push
inc
inc
push
leave
sub
adc
popa
mov
mov
nopl
and
push
sub
jle
testl
adc
andb
imul
cs
and
hlt
cmp
sbb
loope
ror
insl
mov
dec
inc
push
outsl
sub
rcrl
inc
cmpsl
mov
gs
lods
dec
test
and
imul
mov
xlat
xchg
mov
insl
mov
mov
popa
int3
int
mov
paddusb
loopne
mov
out
mov
fdivrl
loope
mov
mov
inc
movlps
sub
dec
xchg
clc
lret
movsb
nop
in
int
pop
xchg
leave
push
adc
addr16
imul
ret
addr16
xchg
test
jns
xchg
jecxz
out
scas
jle
and
aas
das
sahf
insl
cld
xor
jo
scas
fnsave
cmpsb
push
and
cmp
dec
popa
outsl
call
pop
orl
jb
mov
dec
arpl
outsl
pop
push
orb
mov
rorb
ret
lahf
dec
jle
outsb
mov
sbbb
das
inc
push
adc
in
fistl
push
mov
das
pop
mov
sbb
jb
inc
int
outsb
inc
in
xor
sub
daa
adc
gs
roll
iret
cmc
loope
pop
ret
clc
sbb
add
cmp
hlt
dec
dec
inc
push
jp
aas
ss
popf
popa
andb
pop
inc
mov
aas
imul
cmp
js
pop
inc
inc
push
sbb
xorl
movsb
outsb
jg
scas
lock
lea
test
test
push
push
fiaddl
xchg
int
sti
lret
sahf
in
mov
mov
pop
loopne
and
push
ljmp
testl
fcoml
add
jne
xlat
mov
icebp
adc
push
lods
add
inc
aas
xchg
or
xor
or
fnstsw
repz
fldt
pop
xlat
dec
in
or
subb
inc
imul
mov
loop
and
iret
fs
loope
xor
jge
das
push
lods
and
dec
jns
mov
cmp
xchg
js
sahf
adc
mov
aas
loop
cld
adcb
xor
movb
rorb
movsb
dec
sub
data16
fstp
push
adc
jge
repz
ja
cmp
int3
jge
ret
jae
es
adc
cmp
pop
xchg
xchg
cld
nop
adcb
cmpsb
in
sub
cwtl
movsl
js
xorb
jo
shrb
fildll
daa
sbb
jmp
scas
imul
out
mov
or
fdivrs
mov
std
adc
push
aas
xchg
or
add
and
arpl
insb
int
mov
aad
or
or
jb
shlb
ss
pushf
je
xlat
cld
nop
mov
loop
sub
cwtl
push
xchg
sub
inc
cmp
roll
shrl
or
ret
sahf
ret
push
mov
jecxz
bound
push
mov
clc
rorl
test
cmp
call
test
xchg
or
arpl
push
mov
pop
mov
xchg
mov
add
test
jno
pop
ds
std
adc
xchg
lds
aad
push
int3
inc
cmp
movsl
mov
cltd
mov
imul
and
inc
in
jecxz
inc
dec
inc
push
negb
mov
dec
fchs
sti
sub
mov
sarl
roll
push
jp
inc
cmp
dec
xor
dec
jg
xchg
xor
inc
xchg
ja
inc
int
aam
jl
push
mov
push
xchg
mov
ret
add
mov
add
arpl
popf
mov
push
jp
sub
repnz
imul
push
jne
pusha
fmulp
and
pop
mov
fstps
idivb
mov
jns
sbb
mov
jecxz
das
push
shrb
xchg
cmp
shlb
inc
sbb
into
insl
aad
shlb
cltd
pop
popa
sarl
mov
mov
ljmp
mov
or
adc
bound
scas
aad
mov
sub
jae
das
push
dec
in
pop
mov
pop
inc
pusha
jg
cld
call
lcall
cld
add
cmp
mov
cmp
hlt
arpl
pop
push
add
push
push
add
out
mov
dec
leave
xchg
cltd
pop
ss
cld
dec
aam
sub
push
aas
jbe
popf
inc
enter
sbb
in
mov
int3
test
and
clc
enter
aaa
mov
imul
stos
test
and
mov
mov
xorb
or
out
adc
nop
fdivrs
cmp
mov
dec
cmc
xchg
xchg
cmc
add
pop
and
ja
insb
lea
mov
mov
scas
imul
inc
in
mov
sbb
xor
lds
and
mov
push
push
jnp
in
sub
aaa
ficoms
xchg
xchg
xchg
fwait
xchg
popa
cmp
push
sbb
mov
xchg
lock
es
movups
stc
xchg
ror
test
leave
rorl
mov
mov
push
iret
sub
dec
xchg
ds
fwait
xor
fmul
repnz
jle
push
xchg
clc
ss
jecxz
jo
dec
jmp
ds
cld
pop
ja
dec
add
movsb
fisubrl
lods
sahf
cmp
pop
rorl
aaa
stc
in
pop
dec
push
xchg
int3
jo
lret
stc
sti
mov
ds
pop
and
add
mov
mov
stos
inc
push
adc
stc
scas
push
das
leave
push
fmulp
imul
sbb
jp
pusha
push
pop
cmp
pop
ret
sbb
test
in
mov
idivb
mov
insb
js
cs
mov
bound
push
pusha
pop
mov
imul
sub
rorb
push
aad
dec
lcall
sahf
call
mov
mov
mov
adc
jecxz
inc
popf
cmpsb
xchg
in
add
sub
inc
popf
fiaddl
cvtps2pi
iret
loop
test
mov
lea
fdivl
negl
adc
mov
dec
add
mov
jae
repz
imull
int3
xchg
or
ja
xchg
mov
mov
xlat
push
xlat
sbb
mov
sbb
adc
fs
dec
mov
aaa
enter
mov
jecxz
and
mov
push
mov
sbb
in
pushf
xchg
pop
imul
cmp
jnp
mov
mov
xor
rclb
fdivrs
mov
sbb
push
add
jno
bound
jl
inc
dec
push
push
sub
test
dec
pushf
mov
out
and
jg
lcall
or
test
push
cwtl
jno
push
ljmp
dec
decb
mov
sbb
lret
rcr
je
stos
sbb
xlat
pop
or
xchg
fstp
cvtdq2ps
push
sub
pop
pop
pop
or
ss
jb
std
push
xchg
je
xchg
testl
inc
mov
es
push
xchg
cmc
dec
adc
imul
lock
pop
cmc
push
dec
sub
clc
sub
in
push
out
test
adc
ss
int
lahf
add
jne
lret
push
jnp
sub
sub
xlat
inc
stos
sbb
daa
pop
add
adc
jg
inc
push
jl
xor
bound
xchg
and
add
push
outsl
sti
imul
sub
jno
dec
rcrb
je
ret
rol
ljmp
cltd
or
stos
dec
idivb
add
jle
cmp
inc
xchg
xchg
jnp
nop
test
mov
inc
mov
mov
aam
xchg
int3
popf
pop
xor
repz
push
lcall
xchg
mov
daa
into
ret
and
mov
pop
imul
or
mov
mov
fdiv
jnp,pt
dec
mov
dec
adc
and
scas
neg
fldcw
add
movsl
dec
fcmovnb
shll
pop
out
mov
dec
mov
loop
subl
mov
cmp
inc
enter
lea
sub
push
nop
and
aad
jnp
into
loope
jo
fnstenv
test
ljmp
imul
or
adc
mov
mov
dec
jnp
lods
fcoms
jae
cld
ror
push
mov
jns
les
pop
pusha
stc
sahf
clc
fs
jg
mov
dec
roll
fdivs
mov
pusha
cmp
jecxz
jl
std
sub
cmp
push
lea
adc
movsb
add
pop
adcl
ret
push
es
jns
mov
ret
jmp
cmp
mov
xchg
out
aam
cwtl
rol
sbbb
and
add
or
sbb
out
dec
jle
jb
fldl
push
xchg
out
mov
jbe
jb
dec
xor
daa
subb
xchg
icebp
andl
jmp
rcrl
js
shrb
cltd
stc
addr16
and
mov
sbb
sbb
orl
idivl
subl
sub
jmp
pop
movsb
or
aam
into
aam
xor
testl
ror
fildl
push
or
ds
fiaddl
and
push
or
shll
xchg
or
in
andb
cmp
push
mov
sarl
ds
lcall
xchg
aam
and
add
and
jmp
fnsave
outsb
dec
in
pop
lea
addr16
int
push
mov
push
xorb
into
adc
adc
fbstp
fisttpl
rcrb
scas
in
fwait
mov
sub
xor
outsb
and
xchg
mov
sbb
push
dec
inc
jne
rolb
fldcw
ffreep
lods
inc
xchg
lods
pop
test
or
adc
ss
into
sub
mov
aad
dec
inc
xlat
loop
cmp
ficoms
fldt
dec
call
sbb
pop
dec
adcb
fimull
mov
lea
and
ljmp
hlt
push
cmpsb
sub
add
push
loopne
xchg
jb
test
xorb
and
popf
inc
mov
in
pop
inc
sar
cmc
dec
adc
cltd
push
mov
pop
bound
lcall
push
or
adc
push
ror
jo
pop
mov
adc
in
rorl
cwtl
fucomi
icebp
mov
or
rcll
mov
sbbb
sbb
jo
cwtl
shrl
cwtl
and
push
mov
xchg
testb
xchg
das
dec
mov
and
ficoml
cmpps
lahf
call
fs
sbb
xor
fstpt
jecxz
out
movntps
lahf
and
ret
mov
inc
arpl
sub
repz
out
stos
hlt
repnz
and
jnp
add
mov
xor
mov
imul
xor
out
loopne
loope
jno
iret
push
mov
jnp
cmp
push
cmpl
cld
or
xor
mov
fstpt
dec
loop
sub
push
mov
popf
call
pop
cmp
es
jns
lret
out
mov
jbe
adc
lods
les
test
cltd
out
adc
sub
jmp
or
std
or
pop
lret
aaa
xor
xchg
dec
dec
fidivrs
test
mov
jbe,pt
push
jns
add
fcmovu
pop
fbstp
jge
fists
sbb
jmp
fstpl
iret
dec
pop
movsb
jmp
bound
rorb
mov
data16
test
push
stos
mov
mov
ss
into
and
rclb
in
mov
push
stos
xchg
lret
mov
dec
xchg
repnz
lds
push
gs
push
mov
mov
loopne
xchg
mov
fstp
dec
cmc
ss
jle
inc
dec
ret
and
adc
and
les
inc
jns
fcompl
cs
clc
cmp
mov
lret
sti
inc
imul
stos
mov
fwait
mulb
in
cltd
pop
loop
mov
add
int3
cmc
mov
clc
daa
nop
lock
push
mov
pop
push
sub
out
std
call
stos
pop
les
iret
jo
imul
out
outsl
jl
insb
xor
sbb
aad
mull
bound
nop
mov
sbb
lret
in
scas
imulb
dec
in
loope
mov
scas
xor
mov
out
cltd
insl
popf
les
xchg
inc
dec
scas
addr16
ljmp
mov
insb
dec
adc
add
adc
aam
in
mov
push
fcompl
dec
or
fldt
lea
xchg
cmp
jmp
pop
sahf
mov
mov
filds
outsb
into
out
cmpsb
andl
cmc
mov
daa
ss
mov
cs
add
sbb
andb
adc
pavgw
pushf
rol
ljmp
arpl
icebp
out
ss
jno
xchg
mov
ja
push
enter
sbb
push
add
lds
mull
cmpsb
mov
test
mov
xchg
and
push
add
test
jp
rolb
clc
push
add
xchg
and
xor
loop
pushf
xor
and
mov
shlb
mov
sub
fs
xor
out
in
jnp
xchg
popa
nop
add
out
movsl
inc
in
xchg
stos
xchg
pop
fidivrs
repz
lret
add
and
test
xchg
xlat
into
push
xchg
push
mov
lcall
adc
stos
mov
popf
adc
in
out
out
add
or
adc
call
mov
sub
into
enter
lcall
int
cmp
hlt
jno
cltd
xchg
dec
sti
insl
push
hlt
sti
and
or
ss
dec
mov
call
push
mov
jb
in
jmp
lret
mov
push
pushf
cmp
mov
mov
outsl
repnz
or
out
test
adc
dec
je
sub
pop
call
sbb
xchg
mov
xchg
xchg
test
sahf
lock
stos
jb
dec
push
stos
sub
mov
add
test
inc
jp
fs
push
dec
pop
arpl
xlat
fcoms
movsb
es
xchg
xor
sti
mov
outsl
sub
sbb
stc
pushf
jbe
clc
xchg
add
add
or
jmp
pusha
addb
or
mov
fs
out
pop
mov
out
dec
shll
sub
aad
xchg
xchg
ret
xchg
inc
xchg
push
and
cld
inc
arpl
mov
sub
cmp
fisttpll
fs
mov
cmp
repnz
xchg
pushf
pusha
jns
aaa
stc
ja
dec
insb
xor
pop
xchg
and
outsl
add
jmp
mov
add
insb
mov
rorb
mov
cmp
add
nop
cltd
ja
sub
mov
sub
sub
lods
pop
pop
dec
enter
dec
jbe
pop
inc
lds
xchg
into
add
cmpsl
decb
mov
cmp
mov
cmp
insl
imul
adc
add
sbb
rclb
std
cmpsl
subb
enter
pop
lods
cld
add
mov
scas
in
mov
test
imul
cmp
movsb
sub
mov
cld
imul
mov
mov
push
adc
out
aas
or
xor
fs
fnstsw
push
jne
ds
lahf
test
test
and
sarl
call
icebp
mov
test
pop
jno
jle
in
lods
aaa
push
cmp
jle
call
or
inc
jno
dec
push
xchg
mov
inc
leave
jle
in
jmp
ss
ficoms
push
cmc
notl
sbb
and
test
jmp
outsl
mov
in
xchg
mov
addr16
sti
sub
xor
in
scas
popf
pop
dec
xchg
icebp
orl
inc
pop
stos
testl
xorb
inc
jns
jge,pn
or
lea
pop
jle
jle
push
pop
movsl
imul
fadds
shrb
stos
adc
shl
lahf
and
xchg
cwtl
adc
dec
xchg
sub
andl
movsb
mov
push
sub
sub
fcmovbe
mov
jo
sub
inc
mov
fldcw
mov
adc
lods
scas
cmp
orb
mov
pop
cld
push
test
push
cwtl
xlat
inc
add
mov
jge
test
cs
lods
mov
and
stc
les
movsb
and
xor
or
mov
push
les
xacquire
xchg
sub
scas
mov
and
mov
shrl
mov
fldpi
rcrb
clc
nop
add
add
add
pusha
xchg
pop
addr16
stc
popa
push
xchg
icebp
into
xor
push
movsb
iret
pop
sub
jb
mov
pop
push
pop
xchg
mov
fcoml
mov
or
loopne
dec
mov
ljmp
push
pusha
scas
mov
dec
jmp
imul
or
cmp
lcall
pop
xor
jae
pop
cmpsb
push
les
pop
push
into
paddw
bound
cwtl
sub
or
push
mulb
out
add
adc
loop
repnz
ret
jbe
data16
addb
bound
push
mulb
out
add
adc
loop
repnz
ret
jbe
data16
addb
data16
jl
pop
xchg
and
pop
push
adc
jecxz
notb
ret
jbe
data16
mov
mov
cmpsl
xchg
xchg
cmpsb
xchg
mulb
out
add
ss
push
movsl
add
out
lret
mov
test
cwtl
fmuls
cld
clc
cmc
enter
sub
pop
or
pop
sbb
mov
fmuls
mov
cwtl
enter
dec
data16
sub
push
xor
push
mov
fsubs
push
jl
or
cmp
imul
fdiv
mov
scas
fldenv
aas
std
or
jnp
inc
dec
rorl
dec
push
sub
lock
push
ja
jnp
pop
mov
rolb
test
or
mov
and
cmp
cwtl
mov
xlat
mov
cmpsb
cmc
xlat
jns
test
cmpsl
inc
shrl
lea
mov
aaa
jge
sub
cmpsl
pop
movsl
adc
xchg
sbb
pop
add
ja
stc
cmp
int3
int
dec
test
sub
out
enter
xchg
pop
cmpsl
insl
lds
clc
push
aaa
jge
and
lods
popa
sub
or
lods
insl
cmp
fstpt
mov
test
cld
call
lcall
or
es
lcall
loope
xchg
int
fwait
xchg
stc
cwtl
or
pop
sbb
dec
inc
sbb
jl
pop
or
mov
adc
shll
enter
pop
sub
sbb
jge
pop
sbb
lock
in
in
clc
mov
enter
sub
pop
or
js
push
call
cwtl
fmuls
mov
cwtl
enter
sub
pop
or
js
push
call
sub
push
call
fcmove
jbe
addl
and
fs
cwtl
outsl
enter
fildl
jb
out
inc
mov
lods
push
xchg
ret
push
cmpsb
out
in
push
and
mov
or
inc
les
into
mov
xchg
xor
sub
outsl
iret
adc
enter
sbb
xor
stc
arpl
xor
xor
sub
or
dec
xchg
stos
call
jbe
pushf
test
jnp
aas
inc
nop
pop
mov
mov
sub
and
frstor
scas
mov
dec
adc
add
xor
xchg
nop
mov
icebp
cmpb
push
or
mov
enter
in
lods
les
pusha
xchg
aas
mov
add
cwtl
mov
shl
lret
roll
or
repz
int3
shll
sbbb
pop
add
idivl
cmpl
sbb
push
sbbb
push
pop
jmp
xor
xor
popa
xchg
in
inc
pop
pushf
mov
aam
mov
add
mov
and
dec
icebp
cmp
in
and
xchg
adc
sub
mov
push
mov
mov
adc
cld
dec
jnp
orl
and
in
cs
imul
add
pop
sti
sbb
data16
push
aad
scas
test
fldl
imul
push
fisubrs
cmp
or
dec
hlt
jno
pop
or
or
pop
inc
adc
es
mov
mov
movsb
into
mov
shl
pop
imull
push
mov
cli
push
cmp
cmpb
add
mov
pop
cltd
enter
das
int
adc
push
out
mov
mov
pushf
xor
iret
scas
cmpsb
jp
push
push
lds
insb
out
add
adc
dec
out
test
sub
mov
or
mov
daa
pop
clc
icebp
testl
movsl
adc
ret
mov
jmp
push
sub
dec
popf
mov
push
in
pushf
clc
jp
dec
inc
pop
or
mov
mov
inc
jg
sbb
sub
mov
dec
mov
mov
sub
out
jb
pop
pusha
jg
outsb
mov
add
jmp
or
push
pop
jns
orb
pop
inc
ret
in
iret
jae
lahf
dec
ret
sub
lahf
test
aam
rorb
das
pop
or
mov
mov
out
cwtl
ret
mov
ficoml
loopne
jmp
xchg
mov
sub
pusha
push
mov
mov
ljmp
int
icebp
mov
lret
repz
mov
sbb
mov
rep
stc
jl
leave
in
in
dec
subl
ret
mov
inc
out
pusha
shl
ja
inc
sub
or
jle
enter
and
loop
lods
push
aad
jl
xor
xchg
mov
mov
mov
ret
cli
imul
adc
mov
fnstcw
adc
sub
xor
popf
pop
fbstp
xchg
cmpsl
lds
mov
ss
jl
mov
add
mov
xor
loop
jae
lahf
sti
jmp
xchg
jne
mov
vmovhpd
shrb
and
es
cld
pop
jle
outsb
xchg
pushf
xchg
insl
pushf
iret
into
cmp
in
lock
push
dec
xchg
add
sti
insb
daa
out
fwait
sub
mov
repz
lds
cmpsl
loope
test
mov
mov
mov
mov
mov
aam
lock
xchg
jbe
ljmp
mov
mov
ret
lds
pop
sti
pop
and
in
dec
pusha
sbb
push
push
mov
lret
xchg
loope
ja
pop
les
jl
mov
test
mov
inc
adc
mov
dec
frstor
aam
dec
pop
sbb
add
insl
leave
adc
fcomip
sbb
hlt
iret
cmp
pop
fcmovne
jmp
mov
or
mov
ljmp
call
notl
fstl
nop
add
mov
xor
rcrl
jecxz
fsubr
pop
inc
popf
mov
outsl
push
sbb
mov
dec
mov
mov
xchg
aas
out
out
mov
and
movsb
mov
movsl
mov
stc
push
and
fwait
ds
sbb
es
jnp
aam
lret
sbb
dec
fidivrl
lret
inc
test
pop
out
scas
in
mov
push
shlb
repnz
insb
aad
dec
xor
jecxz
jle
daa
es
roll
jbe
idivb
loopne
cmp
sub
fnsave
cmp
movsl
xor
cld
dec
sub
jae
add
jo
lods
ret
int
sbb
mov
iret
mov
xor
pusha
out
and
daa
data16
inc
adc
scas
shlb
es
or
mov
out
add
xchg
mov
popf
scas
add
adc
loop
dec
aaa
imull
xchg
pop
pushf
xor
dec
jp
rorb
clc
inc
inc
pop
add
xor
jns
cmp
pusha
pop
pushaw
push
in
pop
lahf
jge
les
xchg
dec
test
out
stos
xor
push
or
push
shrb
sbb
movl
lcall
push
bnd
call
push
push
add
ror
xor
or
xchg
sahf
fs
cltd
jecxz
cmpsl
push
cmp
pslld
xorb
faddl
xchg
cwtl
adc
fildl
hlt
inc
inc
xchg
jmp
xor
das
arpl
xor
jg
or
push
mov
and
pushf
pop
adc
out
sub
add
adc
mov
mov
fldcw
in
dec
jo
lods
es
ret
setp
leave
jg
sub
nop
mov
fstpl
fs
rclb
insb
insb
fcomip
insl
lahf
nop
aaa
sbb
and
rcr
dec
mov
fs
cli
add
decl
mov
je
lahf
push
jnp
sti
push
dec
push
sub
shrb
xor
mov
cmc
mov
jecxz
jno
stc
insb
mov
out
out
iret
lahf
cmp
push
cmp
shrb
dec
scas
popf
out
mov
jge
mov
inc
cld
sbb
mov
mov
and
pusha
sub
fistl
cli
sbb
lock
adc
pop
pop
fidivl
frstor
mov
xor
ficompl
outsl
ja
xorb
fyl2xp1
mov
nop
icebp
dec
dec
mov
test
lret
lcall
clc
movsl
outsl
sbb
push
mov
fnsave
jp
sbb
iret
iret
int
jno
inc
mov
jge
sbb
sbb
jge
shlb
test
in
lds
cmp
and
add
pusha
popf
cmp
jo
push
pop
loope
adc
xor
dec
inc
stos
std
jg
mov
lahf
add
lock
in
std
cmc
sub
out
mov
xor
rolb
xchg
mov
jl
test
push
jg
arpl
jnp
or
xchg
sti
inc
outsb
lahf
test
stos
ror
or
in
test
pop
xchg
adc
insb
out
mov
mov
xor
mov
push
jnp
mov
sbb
es
aas
mov
and
sti
mov
pop
add
push
outsl
into
inc
mov
xor
in
out
fldlg2
inc
nop
push
rcll
js
cld
cmp
int3
inc
xchg
jp
hlt
stos
stos
test
and
mov
jg
cmp
movsl
xor
jb
xlat
and
jmp
mov
cmpsl
lods
scas
leave
push
subl
lods
or
mov
pushf
outsl
lcall
sub
aas
mov
stos
data16
adc
cld
in
shll
ljmp
out
out
mov
xchg
scas
movb
ret
pop
sarb
cld
sub
enter
vlddqu
cli
adc
gs
add
jns
pusha
inc
scas
lahf
addb
movsl
push
daa
lods
dec
lret
nop
cli
jo
cmp
jnp
iret
pop
popa
jnp
add
cmp
fsubrp
mov
test
call
sbb
jecxz
xchg
je
and
pop
aam
sbb
jno
jg
push
jp
jns
jo
xchg
ljmp
mov
or
sahf
pop
xchg
lods
movsl
aad
cld
mov
out
ljmp
fnstcw
add
nop
xor
mov
cltd
sbb
rcr
mov
inc
adc
mov
shrb
jbe
jge
scas
lldt
sbb
lock
aam
and
pop
fstpl
jecxz
or
push
add
stos
inc
fdivs
xor
adc
mov
mov
ja
xchg
sti
xchg
aaa
fwait
rcrl
xchg
xor
xchg
pop
xchg
add
mov
cwtl
rcl
adc
and
inc
imul
mov
or
mov
loopne
mov
sbb
cwtl
aad
pop
xchg
ret
mov
inc
pusha
xchg
or
lock
add
mov
mov
push
push
jge
outsl
bnd
fidivrs
lods
jae
je
scas
test
inc
dec
adc
clc
sub
cli
scas
clc
lea
pusha
jae
xchg
stc
or
sarb
or
fidivrl
ss
daa
fdiv
mov
pop
sub
jne
int
add
in
pop
jb
mov
xchg
sub
je
orl
stos
xor
loop
pop
sbb
mov
dec
cmpb
psubd
xchg
fsubp
aad
loop
jp
xlat
jns
push
and
pop
mov
push
clc
jp
mov
in
mov
loop
dec
pop
xchg
add
dec
xchg
add
pop
ret
sbb
inc
pop
aas
out
sti
xor
mov
ret
push
int3
aad
andl
insb
insb
cmpsl
std
jg
test
adc
in
cmpl
push
mov
mov
adcb
stc
jle
or
std
cmp
insl
mov
imul
push
loopne
mov
push
inc
cmc
xor
ja
sub
fnsave
mov
hlt
repnz
mov
xor
mov
movsb
pusha
dec
movb
add
lods
in
in
push
lret
out
xchg
pop
pop
mov
pop
jecxz
jmp
imul
inc
mov
popa
mov
cmp
fsubl
dec
fs
inc
dec
xchg
mov
imul
mov
popa
movsb
scas
adc
mov
imul
add
xor
cwtl
xchg
cmp
pop
push
orb
nop
sbb
outsl
clc
mov
outsl
mov
repnz
inc
lods
pmaxub
fldl
cmpsl
xor
divl
adc
add
pop
dec
nop
jbe
push
inc
cmc
pusha
lds
add
xchg
icebp
addl
dec
dec
mov
mov
lock
xchg
test
xor
fwait
add
call
outsb
mov
std
inc
cmpsb
mov
icebp
add
add
pushf
xor
mov
inc
jg
int
je
jge
sbb
imul
dec
cwtl
push
mov
cmp
pop
xchg
lahf
bound
push
push
cmp
ret
jo
jne
lea
std
pop
mov
hlt
rcl
sbb
je
jns
jns
orb
lcall
or
sbb
cs
jecxz
mov
cmc
and
movsb
mov
mov
jno
adc
bsf
cmc
roll
dec
andb
dec
mov
xchg
movsl
sub
mov
xor
lea
fiaddl
je
mov
xchg
jecxz
push
in
movsb
xchg
loopne
pop
data16
cmpsl
mov
or
ret
sahf
sbb
inc
xlat
push
lahf
adcl
lcall
cwtl
inc
sbbb
xchg
add
dec
xchg
shl
mov
mov
out
jmp
lea
pop
xor
mov
cmpsl
inc
sub
xchg
popf
dec
sbb
mov
inc
ftst
negb
push
mov
xor
pop
pop
insb
arpl
mov
xor
aam
andb
jae
sahf
outsl
mov
inc
jb
mov
jae
loopne
adc
cs
ret
test
inc
mov
dec
es
call
arpl
mov
rcll
mov
inc
sub
std
in
out
mov
sbb
fbld
inc
sub
das
pop
enter
adc
pop
mov
movsl
mov
jnp
cmp
insl
xchg
add
mov
ret
jp
dec
std
into
gs
adc
sbb
xchg
push
jp
sahf
pop
xchg
jbe
xchg
sbb
mov
jp
int
movsb
cmpsl
insb
dec
mov
or
cs
mov
jecxz
cld
fmuls
adc
rcrb
loop
adc
lea
jp
cmp
jb
push
lea
xchg
or
pop
sub
test
sub
mov
nop
pop
lea
mov
subl
popa
ja
insl
popa
and
loopne
pop
out
shll
ja
mov
ficomps
inc
out
and
stos
je,pn
and
xor
pop
jnp
and
cmp
in
push
mov
sahf
lods
push
adc
mov
or
insb
imul
fs
out
sub
out
sbb
add
mov
aaa
push
jl
imul
in
cmp
jns
dec
orb
pop
xchg
push
cwtl
or
cvtpi2ps
repz
ret
cmp
dec
loopne
mov
test
sub
mov
mov
pop
mov
cmp
lock
fadd
jl
sub
jno
jecxz
inc
mov
sub
iret
cmc
xchg
xchg
leave
xor
cmp
push
bound
loope
fisttps
push
adc
jnp
repnz
jne
mov
popf
cmp
int
or
xor
sbb
inc
out
mov
lds
mov
mov
lret
js
loopne
and
and
inc
or
inc
or
mov
push
mov
xor
sbb
loopne
ljmp
push
aas
cli
push
dec
jbe
ds
mov
dec
movsb
ja
mov
mov
jo
mov
stos
fistl
lods
ja
sbb
and
rep
pop
popa
xchg
adc
int
pop
ret
cmpsb
cli
call
jo
add
rolb
pop
add
mov
xor
aad
adc
push
or
pand
sub
into
mov
lds
dec
push
pop
popa
dec
dec
outsl
std
and
out
jecxz,pn
push
mov
into
loop
es
jae
test
pop
cltd
or
pop
xor
pop
les
jge
adc
cli
xorb
cmp
psadbw
add
lea
fsubs
push
pop
sbb
pop
push
push
mov
sbb
pop
push
repz
in
cmp
enter
outsb
fistps
mov
or
lea
pop
enter
xchg
dec
cwtl
inc
push
pop
daa
adc
xchg
mov
icebp
orb
jecxz
ljmp
dec
inc
shll
out
adc
std
mov
fnsave
fmuls
cmp
dec
popl
ret
sahf
dec
lcall
sub
adc
and
and
mov
cmpb
iret
stos
jb
out
mov
fcmove
repz
xor
mulb
dec
cmpsl
shll
in
cmp
mov
xchg
or
cs
or
pop
xchg
jbe
int3
and
dec
mov
testb
xchg
vmovntps
fidivrs
sbb
decl
mov
ret
sub
pop
stos
adc
fisubrs
roll
inc
dec
mov
cs
pop
xor
loop
scas
cmpl
rcrl
sbb
frstor
ret
jge
and
out
pop
sbb
iret
push
cmp
arpl
sub
mov
ss
ds
xchg
dec
popa
stos
ret
mov
and
mov
pop
and
cltd
lret
pop
mov
or
push
jae
xorb
jg
movsl
xchg
arpl
out
inc
pop
inc
outsl
mov
adc
lret
cmpsb
pop
and
inc
pop
mov
cmp
add
mov
cmp
mov
adc
push
dec
or
push
and
fcoms
push
xor
inc
adcb
ror
sub
add
inc
test
mov
mov
loopne
imul
leave
in
lret
mov
adc
ss
out
sub
cmpsl
jno
xchg
xchg
out
pop
test
sub
sbbl
pushf
push
sti
leave
data16
dec
adc
lret
sti
es
test
xor
inc
movsb
mov
mov
into
jnp
std
sahf
mov
shlb
jb
sbb
adc
movsb
cmp
jge
mov
gs
andl
fidivrs
push
test
cmp
pop
mov
negb
sbb
sbb
lods
ret
fs
sbb
aam
cmp
or
test
pop
cmp
sbb
or
mov
pop
xchg
in
dec
outsb
sbb
xchg
adc
or
inc
mov
mov
lea
pop
dec
jbe
jg,pt
lods
xor
fwait
mov
dec
loop
imul
dec
cld
arpl
add
ffreep
out
add
test
dec
call
fisubs
push
test
xchg
push
inc
or
push
in
imul
dec
in
lea
mov
test
inc
pop
push
imul
mov
jno
ss
or
pop
stos
inc
aam
inc
adc
aam
ret
pusha
inc
shrb
xchg
test
pop
lods
xor
lea
cwtl
inc
dec
cltd
out
push
push
aad
into
ss
xor
jecxz
int
jbe
mov
or
sahf
call
fstpl
pop
pop
push
movsb
icebp
ficoml
dec
movsb
loopne
call
sbb
and
or
sbb
xor
add
pop
pop
js
loop
sbb
stos
enter
dec
test
or
sbb
push
adc
sub
ret
ss
sub
js
popa
adc
mov
push
push
xchg
mov
xchg
mov
stos
dec
push
inc
sub
push
pop
jae
mov
sarb
mov
adc
sub
out
pop
xchg
mov
ret
pop
shl
movsb
test
scas
loope
lea
int3
inc
je
sub
cli
lcall
es
adc
xchg
aaa
pop
lcall
movl
push
arpl
lahf
scas
testl
mov
inc
pop
jne
int3
add
test
ja
movsl
test
cmc
mov
scas
out
popa
dec
and
mov
inc
pop
xchg
test
je
adc
sub
jbe
fnsave
sbb
in
dec
je
pushf
test
stos
mov
lcall
inc
or
jns
cmp
out
and
test
idivb
lahf
pop
lcall
push
pushf
xor
xchg
jmp
xor
insl
inc
jl
movsb
jecxz
cmp
push
xor
aas
clc
push
cmpsl
lods
mov
cmp
mov
outsl
mov
in
scas
xchg
lea
and
sub
stos
mov
xchg
sub
popf
inc
mov
gs
in
and
and
in
aas
aad
faddl
xor
adc
ds
inc
popf
cltd
cmpsb
mov
mov
jge
gs
sti
push
lret
push
ret
cs
dec
xchg
cmp
into
addb
mov
push
lods
xor
loope
or
loopne
xchg
mov
jne
jmp
or
mov
push
mov
jecxz
xorb
loopne
jmp
xchg
push
mov
gs
xchg
push
mov
adc
add
js
cmpb
add
xor
enter
sub
arpl
mov
sahf
scas
repz
cs
push
call
inc
jecxz
adc
ret
fdivl
cmp
mov
push
jl
or
in
or
or
in
rorl
fisubrs
insb
mov
enter
subl
dec
nop
jno
xor
pop
mov
push
jg
or
jmp
das
mov
cwtl
dec
sbb
ja
cmp
aas
enter
jmp
movsl
ds
sub
mov
and
fmull
pop
int
dec
jg
dec
mov
cltd
sub
fldenv
adc
jg
into
dec
pop
cli
dec
add
stos
dec
xor
dec
lcall
mov
cmp
sahf
adcb
rolb
int
adc
repnz
mov
std
mov
ret
std
pop
cmp
xor
mov
aas
lret
dec
mov
jg
cmp
in
mov
mov
mov
pop
push
pop
jmp
cmp
jp
xor
dec
mov
adc
mov
enter
sub
pop
or
js
push
call
cwtl
fmuls
mov
cwtl
enter
sub
pop
or
js
push
call
sbb
mov
fcomps
sub
pop
or
js
push
lock
lock
fcomps
enter
and
pop
jg
lock
mull
scas
or
adc
sub
mov
mov
insb
enter
call
sahf
cmp
dec
fidivrs
adc
cwtl
mov
mov
pop
enter
call
xchg
xchg
sub
pop
testb
into
push
inc
lret
jle
add
xlat
imul
sahf
push
clc
sub
repz
mov
jno
shlb
outsl
fadds
dec
push
and
xor
pop
jo
bound
lods
lock
fdivrs
pop
clc
mov
inc
sbb
insl
push
enter
push
push
mov
cmp
es
clc
jle
xchg
enter
push
mov
adc
dec
and
iret
xchg
mov
das
ja
cmp
dec
sbb
dec
jmp
adc
movsl
add
test
adc
dec
ds
lods
xchg
pop
push
push
popf
dec
test
sub
add
subb
mov
mov
pop
clc
dec
std
ja
mov
sahf
cmp
dec
fidivrs
push
push
mov
jbe
inc
clc
dec
adc
cmp
sub
ds
cmp
loope
mov
push
jle
or
sarl
insl
icebp
pop
sub
adc
icebp
push
jmp
int
mov
leave
sub
ret
dec
out
mov
out
dec
fidivrs
push
push
mov
outsb
enter
call
sahf
cmp
dec
fidivrs
push
push
mov
outsb
enter
call
and
std
ljmp
or
pop
jno
adc
clc
adc
test
cmp
inc
and
adc
aad
imul
iret
cmp
inc
shrb
jecxz
mov
dec
xchg
mov
mov
pop
cld
mov
adc
xchg
cpuid
push
xchg
test
lds
sbb
mov
aaa
ja
das
daa
pop
test
cmp
out
iret
mov
gs
cld
imul
pop
std
lds
movsl
fisttpl
mov
push
incb
fcompl
outsl
pop
cwtl
rcrb
fdivs
nop
mov
enter
movsb
sarl
jbe
adc
mov
scas
or
shll
mov
leave
and
in
test
stc
aas
aaa
leave
push
mov
cmpb
xlat
pop
mov
add
cwtl
cmp
insl
xor
ret
imul
jo
push
jne
stos
mov
leave
mov
daa
jl
mov
jb
xor
xor
xor
mov
sub
stos
fcomps
test
or
jmp
push
popf
ret
push
fistpl
gs
pop
aam
icebp
or
ds
ljmp
outsl
add
jae
pop
sbb
lret
out
rcrb
sub
dec
mov
adc
aad
loope
xchg
cmp
fcomps
jg
mov
xchg
js
jnp
mov
pop
aad
push
aas
scas
jecxz
adc
call
jne
cmc
mov
test
clc
pop
stos
sub
cltd
inc
add
hlt
pop
sbb
cli
arpl
sbb
je
jb
dec
cmp
sbb
test
push
stos
inc
mov
adc
inc
icebp
xor
idiv
insl
sbb
push
jge
fiaddl
enter
jmp
es
inc
pop
dec
jnp
addl
add
test
fcoml
mov
ret
mov
and
mov
push
adc
addl
and
adc
jp
outsl
xor
mov
jmp
cmp
jmp
pop
sti
cmp
sahf
xor
sbb
adc
xchg
push
jo
lcall
add
jnp
and
add
fsubl
inc
mov
adc
js
jne
xchg
js
mov
insb
push
adc
ror
fstps
hlt
movsb
mov
mov
or
cmc
fwait
ljmp
jecxz
adc
sub
inc
pop
rcrl
stc
ja
daa
mov
dec
movsb
jno
push
movsl
mov
fcmovnbe
push
int
xor
clc
push
xchg
inc
mov
inc
push
jno
mov
aas
lcall
xor
nop
or
and
mov
jnp
or
jb
fs
loop
push
enter
filds
xchg
jl
xor
mov
clc
push
xchg
movsb
dec
in
cmc
mov
addr16
or
out
pushf
sbb
add
lahf
ljmp
sub
outsl
add
xchg
aas
das
and
outsl
leave
pop
mov
out
mov
nop
out
or
hlt
push
inc
mov
mov
pop
mov
push
jae
sbb
xor
push
cmc
sbb
xchg
aam
ja
test
ds
adc
ljmp
jecxz
inc
std
out
add
pop
cmp
jmp
push
imul
roll
inc
in
xor
jns
loopne
cmp
sbb
lds
push
es
cmpsb
out
rol
mov
stc
call
or
or
jns
test
or
mov
test
pop
pop
cmp
sub
packsswb
push
mov
xchg
pusha
dec
iret
xor
pusha
fsub
mov
lahf
repz
inc
jmp
out
cmp
pop
ds
nop
loopne,pn
shrl
inc
imul
push
mov
pop
mov
mov
xchg
jno
gs
jbe
adc
into
mov
cmpsb
push
pop
jae
inc
adc
jno
pop
jle
jmp
outsl
add
mov
adc
je
pop
and
add
xor
inc
cmpsl
jo
iret
pushf
loope
out
les
pop
shlb
cs
shrl
jp
inc
frstor
lret
inc
add
clc
lahf
shlb
lock
cltd
les
call
fdivl
mov
adc
cmp
dec
push
aad
sbb
fists
repnz
rol
lahf
add
ret
sbb
mov
aam
adc
movsl
jne
pop
popa
loop
les
adc
add
ds
cld
psrlw
xchg
and
push
push
or
xchg
ja
dec
pop
fistl
add
dec
mov
mov
test
sub
ljmp
add
push
aaa
cmp
sti
pop
sbb
mov
jmp
xlat
sti
rolb
push
sarl
je
pushf
push
neg
mov
movsb
jbe
xchg
inc
cwtl
or
pop
ja
in
and
inc
add
sub
fcmovu
orb
xchg
aaa
loope
in
or
test
stos
inc
fmuls
mov
pop
mov
imul
movsb
push
mov
shlb
sbb
popf
in
std
inc
mov
push
or
jae
lods
inc
bound
fldcw
push
xchg
push
ljmp
mov
mov
mov
out
mov
pop
or
ret
ss
lea
pop
mov
lret
mov
cmp
inc
xor
or
arpl
jb
mov
jl
les
lods
mov
xchg
enter
cmp
sub
pop
add
sub
and
out
jg
inc
pop
or
cli
lahf
ret
aaa
shlb
push
dec
in
xchg
leave
cmc
xchg
xchg
rol
adc
cmpsb
jg
nop
pop
imul
add
call
add
jo
scas
out
fisubrs
rorl
fiaddl
adc
sbb
jle
lds
cmc
inc
and
lock
cmp
std
xchg
dec
mov
cmc
into
clc
ret
sbb
in
sarl
push
push
push
jno
test
inc
insl
pushf
das
and
cmpsl
inc
bound
sbb
ret
jnp
push
into
mov
mov
jns
test
cmp
add
aad
mov
sbb
cmp
in
or
jge
fildll
iret
lcall
loop
sbb
dec
daa
mov
rcll
lahf
movsb
lock
mov
push
lret
xor
push
int
mov
dec
pop
sub
insl
cmp
arpl
rcl
inc
push
testl
in
dec
das
sbb
xorl
cmp
repnz
dec
sub
or
adc
or
lret
cmp
mov
add
repnz
pop
or
loop
insb
and
lahf
and
and
sbb
imul
cld
icebp
push
int3
aam
je
sar
cltd
notb
cli
xor
in
xor
cmp
dec
adc
ja
int
cmp
inc
dec
or
mov
cli
xor
cmp
mov
sahf
fsubr
adcb
jns
add
iret
or
cmp
xchg
xor
lea
rcrb
or
push
push
pop
xchg
fnstsw
icebp
cmp
movsl
push
pop
dec
dec
xchg
sub
fidivl
divb
loop
add
mov
xor
rolb
or
add
insb
xchg
fcomi
loop
xchg
mov
fstpl
movb
xor
shrb
cmp
aas
push
and
pop
cmp
shrl
gs
fstps
enter
es
dec
ret
dec
cmp
aad
mov
cmp
adc
sarb
int
fwait
enter
fs
test
pop
scas
cmp
out
test
dec
pop
inc
sub
fldt
jbe
notl
cmp
filds
je
daa
pop
adc
mov
outsl
fdivs
ret
or
xor
cmpsl
fnsave
arpl
xchg
jge
sbb
dec
shl
lret
mov
push
push
cwtl
sub
jae
popf
jge
pop
incl
stc
mov
sub
lret
ss
fbstp
push
lret
push
push
dec
insl
imul
add
and
loope
test
and
out
les
mov
aas
pusha
test
xor
xlat
out
lcall
xor
jmp
wbinvd
cli
push
pop
sbb
sub
fstl
xchg
testl
mov
pushf
mov
or
scas
add
and
adc
mov
daa
pop
mov
jne
mov
lods
dec
mov
divl
rcll
add
adc
std
jmp
cmp
outsl
test
push
cmp
dec
sub
push
xchg
xor
cmpsb
loopne
pop
jbe
xchg
test
js
stos
icebp
pop
inc
leave
xchg
adc
icebp
or
sub
push
mov
push
stc
icebp
pop
movb
cmp
jae
jmp
bound
sub
or
ret
pusha
mov
push
xchg
fsubp
test
inc
push
push
dec
lret
andb
and
stos
xchg
pushl
scas
jge
add
dec
and
ss
or
arpl
sbb
aad
test
push
loop
sarb
pop
fwait
test
in
lret
xlat
aaa
mov
and
out
and
lcall
imul
cmp
pushf
les
repnz
std
inc
fwait
imul
call
fimuls
sub
jnp
xorb
ret
insb
ret
push
fldt
push
inc
push
call
sub
fcmovu
add
adc
insl
cmp
call
xor
fcmove
mov
dec
inc
xor
or
outsb
cmc
xchg
mov
jnp
adc
sbb
xchg
mov
mov
inc
add
lods
daa
ret
pop
and
in
lcall
pop
dec
sarb
inc
pop
fistps
movsb
push
mov
lret
xor
fsubs
movsb
aaa
cmp
insl
mov
sub
test
pop
int
jne
cmp
cwtl
sbb
mov
cld
imul
mov
cmp
inc
ljmp
xchg
out
cmovge
pop
aad
pop
sbb
or
int3
in
popa
inc
inc
mov
ret
ja
add
addb
les
sub
cli
mov
xchg
testb
adc
add
cmp
push
push
andl
out
stos
cmp
mov
aad
sub
push
mov
loopne
pop
sub
ja
lret
sbb
push
xlat
mov
rcll
jecxz
push
fldenv
or
xor
hlt
js
enter
pop
in
add
lcall
cpuid
mov
add
push
and
test
pusha
xchg
addr16
cltd
ret
js
or
cmp
fs
rcrb
repnz
jl
lods
fiaddl
mov
iret
xchg
in
cmpl
push
jg
mov
outsl
jp
cmp
push
fs
mov
insb
sub
push
imul
or
inc
sbb
repz
add
pop
mov
das
test
dec
cmp
or
pop
sbb
pop
imul
lcall
loope
xor
push
aas
test
cld
bound
xor
jno
les
jl
je
stos
xchg
gs
loopne
jo
ret
xchg
add
and
dec
jo
add
icebp
mov
add
hlt
mov
push
inc
scas
loopne
cmp
inc
lahf
leave
das
xor
sbbl
call
je
jl
mov
std
lock
mov
lret
jge
loopne
pushf
add
xchg
add
out
lods
shll
mov
inc
xlat
dec
and
cmp
ja
sbb
mov
test
adc
insb
fisubl
xor
lods
aam
gs
or
adcl
out
dec
pop
test
mov
roll
adc
fidivrs
sbb
push
push
mov
js
pop
push
imul
sub
push
add
scas
mov
jmp
jecxz
nop
pop
in
mov
iret
mov
cmpsb
out
ss
jle
pop
int
enter
lahf
mov
fdivrs
jecxz
in
sub
and
ljmp
jae
sti
pop
mov
cmp
pop
ret
stos
and
icebp
or
mov
mov
test
push
cmp
add
call
jae
aad
insb
add
je
shll
push
mov
xchg
xchg
int
inc
jp
imul
loop
out
sub
test
punpckhwd
fcomps
es
loope
out
fsubrs
rorb
test
in
stos
mov
into
inc
aas
aas
ss
dec
push
inc
cmpsl
lahf
jp
jne
jl
outsb
and
fwait
jl
xor
sub
adc
clc
sub
cmp
jge
mov
jmp
pop
aam
sbb
loop
sahf
jecxz
mov
fnstcw
mov
in
imul
and
out
mov
dec
jae
xchg
fisubs
aad
dec
sbb
cmp
fs
mov
popf
pop
ret
mov
neg
mov
rcl
rcl
inc
xlat
lahf
inc
stc
out
mov
mov
repnz
mov
xor
pop
popa
cmp
jns
pop
xchg
imul
shll
adc
jb
cld
jno
cltd
and
cmp
push
push
sub
lds
pop
xchg
test
mull
xchg
jle
pop
pop
repnz
lcall
mov
popf
lcall
pop
imul
push
out
int
scas
je
cwtl
mov
cmp
jp
sub
out
enter
bound
repz
xor
rolb
pop
xchg
jbe
jle
leave
ret
dec
sti
insl
jp
ds
sti
jl
sti
loop
scas
or
xchg
out
repz
xchg
repz
cmp
flds
shlb
sbbb
jne
bound
mov
lock
pushf
mov
xor
fmuls
and
add
push
ljmp
lahf
dec
pop
pop
insl
cmp
sub
fdivr
lahf
mov
and
in
lret
out
or
leave
sbb
filds
xchg
mov
dec
push
cmp
loope
lods
mov
push
xchg
dec
sub
jns
sub
aaa
and
and
push
loopne
inc
mov
ds
scas
push
js
insb
int
sarl
pop
gs
test
ret
das
inc
dec
jne
out
mov
dec
add
adc
jb
scas
test
sub
pop
jge
rol
push
fcom
leave
test
sub
pop
sti
addr16
xchg
push
cmpsl
negb
stc
sub
adc
jmp
notl
add
iret
fwait
xchg
jbe
gs
push
mov
fimull
push
cmpsl
inc
adc
push
sbb
fstpt
out
xchg
xchg
mov
inc
das
push
mov
add
adc
inc
into
fldt
bound
jl
mov
call
sub
mov
mov
pusha
adcl
and
cmp
stc
ljmp
jb
jno
iret
aas
cmp
pop
cmc
fiaddl
jle
daa
inc
dec
std
and
jae
test
daa
gs
dec
push
cmp
shlb
add
lahf
jge
stos
cltd
push
mov
fistps
shll
es
push
mov
rorb
jb
aad
mov
loop
movl
scas
ds
cs
aaa
into
push
in
das
or
xchg
or
pop
negl
fisubs
scas
out
sbb
lock
and
pop
test
cmc
or
jb
mov
sar
add
ret
jle
nop
pop
and
in
pop
shl
push
test
mov
add
jp
mov
out
mov
mov
ds
dec
fisubl
rcrl
and
aam
or
adc
inc
push
dec
push
out
cmp
adc
scas
cmp
fwait
aas
pop
fwait
std
jge
pop
inc
add
inc
fstpt
js
mov
lret
sub
mov
test
in
and
pushf
pushf
sub
jno
arpl
sbb
call
fists
push
divb
sub
sbb
stos
cmp
mov
xor
cwtl
sbb
jge,pt
sub
fs
inc
jne
testb
and
pop
idiv
lcall
xor
or
dec
xchg
jle
mov
data16
out
stos
je
dec
shll
mov
fbld
inc
xchg
xor
cs
sarb
cmp
cltd
pushf
jne
sub
sbbl
inc
iret
insb
add
lea
jnp
and
cld
test
jae
mov
shrb
jb
fstp
push
movsl
neg
popa
adc
inc
cmp
iret
icebp
and
leave
cmpsb
shrb
jmp
fs
add
jns
leave
inc
pushf
push
daa
addr16
adcb
cmc
daa
and
inc
and
enter
dec
adc
mov
jp
lret
imul
lcall
and
cltd
movsl
and
jg
dec
and
push
mov
xchg
leave
dec
push
or
cltd
movsl
dec
repnz
and
mov
or
mov
jae
bound
fisubrs
push
arpl
in
sbbb
enter
jl
fsubrl
push
pop
cmc
xchg
pushf
pop
and
add
jb
rorb
sti
fsts
jg
test
jg
pushf
das
add
test
test
sub
adc
mov
stos
sub
jae
mov
ds
adc
pop
adc
adc
cmp
call
add
mov
test
cwtl
lock
jb
pushw
mov
mov
inc
aaa
adc
popf
repz
loopne
iret
mov
dec
sub
adc
add
inc
pop
jo
enter
push
inc
and
push
jb
sub
pop
addr16
push
adc
inc
xchg
notb
or
out
and
inc
pop
sbb
pushf
push
push
int3
loop
jecxz
bound
repz
sahf
mov
vcvttpd2dqx
sbb
push
inc
xor
in
xchg
mov
fiaddl
call
fistps
cltd
aad
out
add
mov
fnsave
jns
jl
adc
inc
mov
cmp
or
test
jge
dec
sub
aad
fcomip
push
sbb
mov
popf
cmp
arpl
hlt
mov
addb
out
pop
imulb
jg
in
ret
gs
dec
insb
pop
test
js
inc
mov
and
jnp
cwtl
rol
jge
hlt
hlt
js
adc
mov
cwtl
jo
lcall
popa
lcall
icebp
adc
mov
movsb
mov
and
push
sub
push
pop
cmp
cmp
adc
aaa
push
and
mov
pop
repz
outsb
xor
mov
sar
lock
xor
push
and
add
imul
sti
stos
fdivrp
mov
pop
cmpsb
fs
subl
leave
push
test
out
ds
mov
jbe
or
dec
cmp
add
mov
pushf
sti
andl
push
adc
jo
dec
add
ss
inc
scas
mov
das
xor
lahf
int3
into
dec
cli
adc
inc
add
or
jp
es
stc
jmp
mov
sahf
adc
loop
addl
pop
xlat
das
in
data16
cmpsl
and
aad
es
cmpsb
gs
dec
add
imul
xor
adc
inc
xorb
pop
scas
sbb
or
mov
inc
out
jp
in
inc
in
fmull
mov
enter
aam
dec
imul
getsec
mov
xor
push
adc
imul
xchg
dec
pop
lea
jmp
inc
sbb
fiadds
sub
rcrl
in
sahf
pop
pop
cwtl
lgs
mov
or
ja
xor
xchg
mov
mov
inc
adc
repnz
mov
sbb
sbb
cmp
sti
cltd
push
cli
outsb
je
arpl
dec
push
xor
sbb
mov
add
ljmp
pusha
or
sub
enter
adc
xchg
inc
divb
push
gs
xchg
sbb
mov
rorl
loope
arpl
lret
mov
mov
inc
jecxz
stos
push
add
sbb
push
mov
adc
fimull
in
mov
dec
or
xor
in
pop
in
stos
aam
insl
sbb
loope
js
sub
jmp
repnz
cmc
xor
stos
nop
dec
jno
or
adc
je
sub
mov
hlt
sbb
bswap
loope
out
clc
stos
fwait
popa
and
addr16
sbb
roll
mov
jne
data16
pop
cmc
arpl
cmpxchg
jb
insl
inc
out
rol
sbb
pop
inc
push
icebp
ret
sub
pushf
test
push
and
aas
sbb
or
out
dec
fidivrs
push
push
mov
outsb
enter
call
sahf
cmp
dec
fidivrs
push
push
mov
outsb
enter
call
sahf
cmp
dec
fidivrs
push
push
mov
outsl
enter
call
lahf
cmp
dec
pop
js
push
mov
push
fisttps
push
out
mov
stos
ljmp
jmp
movsb
out
fidivrl
push
pop
or
cmp
jnp
pop
or
stos
ljmp
ljmp
jp
push
or
cmp
sub
dec
or
stos
ljmp
ljmp
jp
push
sub
je
sub
es
das
fs
test
push
stos
adc
mov
push
sbb
jecxz
seta
push
stos
das
loopne
pop
nop
cli
ja,pn
inc
jl
mov
inc
iret
pextrw
jp
and
repnz
or
mov
inc
pop
in
mov
sbb
add
movsl
or
in
xchg
mov
xchg
mov
lahf
dec
int3
mov
ret
jp
jp
xlat
int3
insb
lahf
les
lcall
sahf
inc
mov
repnz
add
adc
push
xchg
das
dec
cmc
ret
sbb
and
mov
popf
xor
xchg
inc
movsl
imul
add
sub
mov
jnp
sub
dec
bound
fimull
stos
cli
lcall
cmp
dec
sbb
push
jp
dec
or
stos
add
lret
scas
fcmovnbe
lods
jecxz
ljmp
outsb
and
pop
es
push
inc
cmp
stc
cwtl
mov
scas
stc
cld
test
mov
pop
dec
push
dec
pop
movd
push
jmp
jmp
mov
lret
jp
push
pop
or
cmp
jp
dec
or
stos
ljmp
ljmp
jp
push
pop
or
cmp
jp
dec
or
stos
dec
xchg
popa
in
pop
pusha
pop
push
jns
popf
xchg
adc
sbb
int
or
mov
push
stos
shl
ja
add
hlt
arpl
cmp
fidivs
xor
add
xchg
into
aas
jb
fwait
loopne
mov
and
sarb
gs
xchg
lret
daa
dec
jae
mov
fdivs
dec
lret
lret
jbe
fnsetpm(287
or
fcmovnb
jb
xchg
loop
test
imulb
mov
mov
push
mov
push
push
mov
push
mov
cli
pusha
jnp
aaa
mov
int
insl
out
ret
pop
imul
clc
add
or
or
inc
cmp
mov
mov
leave
je
fisttpl
adc
xchg
add
test
das
pushf
in
xor
aas
subb
jecxz
and
xor
sbb
mov
cmpsb
add
mov
push
push
or
fiadds
gs
cmpsb
adc
pop
add
sti
push
int
or
call
cmp
sarl
push
adc
push
fsubrs
lret
int
push
sbb
pop
xor
mov
mov
aas
or
vunpckhps
lret
in
inc
pop
incb
mov
inc
jmp
pop
enter
pop
inc
xor
sbb
icebp
push
dec
and
xor
push
mov
ljmp
addr16
rclb
ljmp
mov
mov
mov
inc
cld
or
dec
adc
jnp
out
dec
or
and
lea
stc
mov
ljmp
sbb
push
scas
int
mov
pusha
insb
adc
sbb
out
loop
mov
xchg
pusha
sahf
push
mov
lods
test
pop
mov
test
sbb
ljmp
dec
xor
or
inc
ja
push
les
add
in
or
xor
ret
jmp
jne
pop
stc
jno
shr
jnp
pop
je
lods
jge
xchg
movsl
xor
push
shlb
faddp
pop
clc
and
sbb
aas
and
and
or
dec
or
mov
mov
push
int3
xchg
icebp
clc
xor
jmp
push
stc
and
or
jbe
pop
repnz
xor
scas
adc
mov
add
cmp
xchg
shll
fwait
dec
mov
cmp
mov
cmpsb
gs
je
scas
stos
test
xchg
imulb
insl
shll
fdivrs
pop
mov
daa
cmp
fnstsw
fsubs
cs
push
mov
fcomps
cmpb
cmp
jp
xchg
jmp
mov
cmp
or
std
fucom
adc
mov
sbb
push
enter
sbb
jp
pushf
int
mov
sub
data16
sbb
push
adc
add
stos
pop
cmp
ja
rcr
push
iret
pop
mov
mov
xor
jno
and
dec
fbstp
jge
lahf
movsb
ret
mov
mov
popa
inc
mov
repz
lods
test
adc
add
inc
mov
mov
in
fucom
daa
shll
leave
mov
test
cmpsl
and
jns
and
pop
and
xchg
add
push
xlat
outsb
cltd
lods
pusha
std
sub
and
or
fwait
lods
mov
sbb
lea
shll
stc
cmp
nop
sti
cmp
ds
pushf
enter
push
add
push
jb
xchg
mov
jo
xchg
mov
sbbl
lret
inc
push
xchg
and
mov
divl
inc
mov
adc
mov
pop
faddl
dec
lcall
xchg
call
popf
adc
leave
xchg
pop
je
jge
addb
xor
test
or
jbe
add
test
inc
into
das
sub
out
call
jecxz
cmc
inc
stos
repnz
push
fistl
or
mov
mov
dec
cwtl
and
pop
in
sbb
sbb
xor
xchg
and
pop
rorl
mov
or
push
mov
cmpsb
mov
cld
mov
xchg
jp
and
jb
mov
pop
jbe
xor
jns
lea
mov
add
sbb
sub
ret
das
push
fs
shrb
xor
add
dec
push
adc
pop
push
pop
adc
cmpsl
and
fsubrl
iret
bound
sbb
push
cmpsb
insl
jns
adc
stos
jmp
pop
and
aad
dec
mov
adc
and
loopne
sub
ret
sti
fstl
inc
iret
mov
and
jno
add
aam
sti
xor
xchg
out
push
sub
imul
or
xchg
xchg
sahf
mov
mov
xchg
jmp
insb
mov
daa
and
stos
add
es
imul
insl
jns
dec
lea
movsl
jbe
into
out
jns
cmc
push
ja
dec
or
cmc
jg
dec
mov
aad
sti
jo
test
or
lahf
divl
adc
xchg
dec
xor
lock
fnsave
push
les
pop
cmc
jno
jne
push
nop
jmp
mov
inc
mov
inc
push
jle
out
cs
enter
rcll
js
popa
dec
dec
scas
imul
daa
or
mov
pop
rolb
xlat
jae
cwtl
andps
sub
aad
loope
mov
dec
imul
cmp
test
cmp
push
jp
movsb
sub
stc
mov
dec
cmpsl
xor
xchg
sti
pop
cmp
movsb
cmc
ljmp
pop
lret
lds
mov
cmp
out
iret
fdivs
popl
daa
push
out
aas
les
cmc
pop
add
test
cmpsb
sbb
clc
push
pushf
jecxz
pop
sbb
sti
xchg
mov
push
movsl
int
rcrl
repnz
cli
aad
xor
xchg
sub
nop
mov
or
push
lcall
mov
pop
xchg
push
rclb
dec
and
cmp
mov
sub
jecxz
xchg
inc
arpl
mov
lcall
add
sbbb
mov
xchg
out
cmp
adc
cwtl
and
xchg
push
insl
stos
pop
and
or
push
jmp
ss
les
shll
sub
mov
pop
test
and
ret
add
dec
and
mov
xor
out
sti
fisttpll
push
fistpl
inc
sbb
iret
pop
cmovae
jle
mov
push
scas
jmp
cmpsl
cmp
cs
aad
inc
adc
xchg
popa
sahf
or
inc
cld
loope
push
cmp
mov
mov
imul
pushf
cmpsl
push
enter
dec
lock
popl
inc
out
adc
stos
movsb
out
stos
pop
cld
fmuls
mov
or
pop
push
add
lahf
js
stos
in
or
push
push
jmp
mov
popf
loope
mov
inc
out
iret
mov
push
hlt
mov
dec
out
cs
or
mov
stos
push
xchg
jmp
dec
aam
lahf
add
icebp
cmpsb
mov
mov
int3
in
sub
xchg
loopne
sbb
cmp
das
inc
jge
add
out
add
adc
dec
sbb
js
push
rorl
pop
sahf
sarb
leave
jns
addl
xor
cmp
and
mov
lahf
sub
cmp
popf
inc
and
shrb
xchg
insb
push
icebp
pop
xchg
or
pop
mov
pop
pop
push
rorl
call
xchg
push
iret
mov
and
fidivs
inc
pop
das
ret
fmuls
mov
call
rcrb
xchg
mov
jno
sub
nop
hlt
sub
test
cltd
sahf
ja
pushf
scas
pushf
pusha
mov
xlat
jb
jae
test
std
xor
loope
dec
adc
xor
popa
inc
push
or
adcl
xchg
adcl
stc
xchg
iret
and
lods
ss
cmpsb
gs
push
cltd
pop
mov
pop
or
inc
loope
inc
mov
jbe
xchg
pop
or
icebp
lock
inc
push
sahf
mov
lock
in
xchg
out
sub
iret
lret
cmp
adc
fbld
push
ret
test
imul
enter
shlb
lret
mov
push
lea
push
cmp
xchg
dec
mov
cmp
iret
xor
jle
add
test
aam
or
jns
daa
cmp
xor
js
xchg
arpl
pop
xor
sub
mov
lock
inc
push
and
aas
pop
mov
mov
dec
pop
mov
pusha
inc
pop
leave
cmp
pop
fcomps
scas
mov
mov
mov
jae
xchg
push
mov
xchg
cmp
adc
xchg
sub
mov
adc
adc
pop
xor
or
cld
shrb
fisubs
loop
and
cmp
test
arpl
out
stos
fildll
pop
push
imul
dec
jp
sbb
or
dec
insl
cmp
repz
xor
xor
and
ret
sbb
fs
pop
ficompl
sbb
xchg
xlat
sbb
mov
ds
mov
insb
push
sbb
push
sbb
inc
stos
insl
xor
dec
jecxz
jb
loopne
jl
sub
das
mov
cvtpi2ps
and
mov
stc
ret
in
pop
mov
dec
or
mov
push
mov
popf
les
test
sbb
pusha
dec
mov
clc
push
movsb
int3
scas
mov
pop
mov
jnp
jne
scas
jo
jnp
loop
sbb
push
or
mov
mov
test
cld
ret
scas
data16
add
jl
adc
mov
jg
js
hlt
xchg
fmul
fiadds
mov
ljmp
cld
insb
lret
adc
std
fidivl
xchg
and
or
or
rcll
mov
in
inc
mov
or
test
pop
jbe
data16
in
mov
xor
clc
in
aam
stos
mov
into
jl
add
shlb
shrl
outsl
icebp
test
xchg
subb
xchg
test
dec
push
repz
push
cmp
outsl
jbe
mov
add
xchg
xchg
in
insl
lds
jl
data16
inc
dec
js
push
ret
insb
insl
or
ds
mov
out
push
int3
xchg
out
dec
es
xchg
out
pop
and
shlb
xchg
mov
mov
pop
loop
adcl
lds
insb
lcall
les
movl
cmpsb
sub
jbe
push
sbb
mov
xchg
add
idiv
movsl
mov
int3
or
out
and
jmp
fwait
rcll
dec
mov
and
jl
push
repnz
cmp
push
test
sbb
or
out
jbe
fcomps
adc
xor
cmp
or
dec
sbb
xor
gs
jecxz
fs
pop
test
lods
ljmp
loopne
testb
cmpsb
cld
mov
cmp
ret
aad
mov
iret
or
popa
xor
nop
movaps
lea
sub
and
test
inc
aam
xor
or
mov
scas
mov
sti
xchg
dec
mov
pusha
mov
daa
jnp
add
add
dec
aas
sbb
push
inc
mov
jnp
dec
and
je
popf
cmp
mov
jmp
bound
sub
test
arpl
jge
mov
sbb
scas
push
sub
iret
bound
stc
pop
xchg
lods
mov
lret
pop
sahf
cld
dec
push
roll
sbb
adc
repz
xlat
pop
jno
sub
inc
fsubr
jnp
jl
mov
lcall
dec
cmc
ljmp
inc
or
xor
sub
out
pop
xor
bound
xor
mov
mov
push
pusha
enter
or
mov
int
stos
bound
imul
stos
sbb
mov
ljmp
fsubl
ds
outsl
sbb
pop
pop
and
leave
lock
out
jmp
mov
xchg
and
js
mov
sub
xor
adc
aad
fsubl
xor
aam
inc
sbb
sbb
inc
in
pushf
push
push
add
add
pop
loope
inc
aaa
enter
ret
adc
repnz
xchg
mov
mov
insb
sub
mov
lock
dec
fnstenv
aaa
movl
inc
push
mov
addr16
jp
xchg
and
pop
int3
or
mov
sarl
xchg
into
in
mov
outsl
ds
jecxz
mov
dec
mov
lds
mov
push
imul
pushf
test
pop
mov
fstps
jne
fwait
loope
addr16
jecxz
repz
jb
fs
inc
and
lds
add
lret
xchg
testb
aad
xor
adc
jno
popa
icebp
jnp
popa
and
xor
jg
cmp
jle
aas
int3
loopne
pop
out
subb
jno
xchg
shl
outsl
push
and
mov
sub
jnp
or
std
jl
test
scas
or
adc
cli
mov
jecxz
insb
pop
mov
fistpl
jge
das
ljmp
in
dec
idiv
or
mov
push
xchg
mov
push
inc
mov
pop
push
mov
jno
pop
je
lods
mov
stc
jmp
xchg
add
or
adc
test
lods
adc
push
icebp
test
fnstcw
ss
in
in
test
mov
cli
enter
fisubrl
cld
mov
clc
or
lock
arpl
es
mov
ljmp
lret
std
sub
jg
iret
fildll
mov
or
pop
add
inc
shlb
ficompl
popf
out
lea
mov
jo
or
repz
loopne
cmc
sbb
fwait
mov
and
and
test
lods
bound
jp
push
cwtl
rclb
addr16
in
push
fidivrl
mov
xchg
in
shlb
pop
push
mov
sub
adc
push
inc
mov
dec
mov
xor
lock
lods
mov
scas
dec
and
iret
lock
push
xor
jl
fwait
mov
lahf
mov
and
incl
test
hlt
stc
rcll
inc
sub
popa
jmp
lcall
xor
push
int
popa
stc
adc
cld
aas
mov
in
mov
data16
or
ja
insl
orb
cmpsb
add
cs
insl
cs
pop
insb
mov
cmpsl
mov
dec
fwait
push
inc
lds
push
bound
fdivl
out
lods
mov
popf
push
pop
jle
cmc
popa
sahf
push
lcall
xchg
mov
repnz
sub
mov
mov
scas
jnp
pop
fs
xor
popf
shll
xchg
adc
jmp
sti
jbe
mov
mov
jne
mov
int3
lea
aaa
mov
imul
xor
imul
xor
pushf
sub
push
inc
pop
mov
insb
lret
in
movsl
mov
loope
das
xchg
dec
dec
lret
ss
mov
pop
dec
push
sub
fistps
mov
out
out
pop
sub
out
add
pop
daa
or
push
cmp
mov
adc
inc
or
aaa
mov
dec
sub
sahf
mov
adc
in
cmp
pop
sarb
ret
jb
fbld
push
sub
and
sbb
shld
cmp
xchg
out
fnstsw
lea
out
fdivs
sub
int
mov
fdivr
inc
mov
xlat
imul
iret
lret
lock
into
stc
movsb
push
call
pop
xchg
dec
cmp
jmp
push
add
inc
adc
daa
int
subl
divl
fists
inc
rcrl
jp
dec
bound
jbe
or
mov
fs
fwait
sub
sub
sub
push
xchg
repz
adc
mov
push
xchg
adc
adc
adc
sbb
or
adc
clc
push
jnp
pop
mov
pop
or
repz
sbb
sbb
mov
gs
out
loopne
add
jmp
lock
sahf
dec
movsb
cld
aaa
xchg
mov
or
mov
lcall
lea
mov
shlb
sub
sub
xchg
xor
jo
push
rcll
gs
repz
aad
in
and
and
sub
mov
rol
int
mov
push
mov
mov
xchg
inc
fcmovu
jp
shlb
lock
imul
xchg
enter
push
push
int
pop
push
or
xchg
aam
jnp
jns
mov
popa
rcrl
mov
cmp
mov
lds
or
push
mov
mov
push
pop
cmpsl
mov
xor
mov
negl
pushf
frstor
xorb
hlt
mov
inc
out
ds
jae
insl
lcall
fwait
aam
xchg
pop
fnsave
repnz
pushf
xchg
mov
dec
cltd
sbb
scas
loope
rolb
xchg
scas
ss
pop
sti
add
mov
repnz
mov
divl
shlb
cs
dec
sub
mov
bound
jmp
stc
and
std
sub
lcall
mov
push
lock
push
psrad
push
cld
adc
mov
imul
push
in
popf
andb
loope,pt
or
cmp
nop
cmp
sub
out
jl
out
in
push
lea
orl
jp
sbb
sti
icebp
lds
stos
inc
and
pop
pop
add
hlt
dec
in
pop
sub
mov
mov
out
pop
lods
dec
push
sub
mov
dec
mov
orb
push
stos
mov
xor
lds
and
mov
pop
mov
in
xchg
inc
jae
push
push
mov
xor
xor
cmp
xchg
into
insb
xchg
pop
aam
sti
arpl
and
pop
cmc
cmp
dec
inc
xchg
cwtl
mov
test
push
dec
mov
test
cmc
lods
jge
test
dec
push
loop
lea
and
fxtract
jbe
pop
inc
pop
add
mov
push
xorb
push
and
lods
jl
cmp
pop
xor
jg
push
jp
mov
es
dec
sub
cmc
in
xor
and
fildl
mov
dec
loopne
cmp
inc
hlt
push
or
sbb
clc
mov
rolb
dec
mov
sub
inc
jno
test
insb
roll
das
lcall
imul
popa
and
frstor
cmpsb
mov
cld
aas
stos
xor
sbb
cld
or
mov
subl
dec
or
cmp
push
jmp
int3
sub
aas
mov
xchg
aaa
mov
sbb
ud2
dec
cmpsb
sbb
pushf
lret
test
std
arpl
or
mov
insb
push
jo
xor
lcall
push
sar
or
sub
movsl
out
and
dec
push
push
rol
dec
sub
jg
cmp
aam
sbb
mov
stos
inc
pop
imul
test
adc
incl
inc
push
add
pop
dec
sbb
inc
dec
fistpl
scas
xchg
sahf
inc
aas
mov
sub
lcall
call
xor
xchg
inc
jp
jno
jnp
mov
int3
call
movsb
mov
adc
stos
or
jl
push
jle
orl
xor
pushf
cs
cmp
ret
rcr
lcall
out
sarb
xchg
pop
pop
mov
lret
pop
fimull
mov
xchg
lret
mov
cmpsb
shrb
dec
out
mov
rorb
pop
dec
xchg
bound
sub
lahf
pop
test
lock
addr16
jle
dec
add
jb
aad
push
out
std
mov
sbb
adc
dec
and
push
rcrb
xlat
pop
push
int3
xchg
js
sbb
int3
js
fisubl
xchg
xlat
sub
das
outsl
or
ja
jb
adc
hlt
mov
mov
push
out
xor
adc
push
repz
mov
mov
stc
mov
aam
cltd
test
out
inc
or
jge
push
aas
jae
xchg
or
iret
pop
jne
add
aas
mov
pop
scas
mov
pop
or
sbb
xor
data16
fadds
data16
dec
movsb
mov
xadd
jnp
mov
in
mov
lret
lods
cmpl
fcoml
fimuls
adc
mov
or
mov
aas
xchg
inc
mov
loop
js
ds
pop
xchg
shrl
fistps
or
lret
icebp
xchg
idivl
mov
js
cmp
mov
or
iret
andb
mov
lcall
mov
jp
push
pop
or
cmp
jp
dec
or
stos
ljmp
ljmp
jp
push
pop
or
cmp
jp
dec
or
stos
ljmp
ljmp
jp
push
pop
or
cmp
jp
dec
or
stos
ljmp
ljmp
jp
push
lock
dec
loop
test
mov
movsl
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
inc
pop
push
mov
test
les
add
sbb
mov
hlt
pop
test
jne
push
movsb
push
and
je
add
adc
and
xor
les
aam
test
xchg
movsl
movsb
inc
mov
cld
mov
lods
mov
cld
je
cmp
xor
mov
jo
adc
lock
push
sub
sbb
sub
pop
pop
adc
scas
out
mov
mov
test
test
in
icebp
imul
dec
mov
frstor
or
movsb
inc
dec
sbb
fisubl
int
push
cmc
sub
pop
cmp
mov
shll
mov
cmp
addl
xor
lds
lret
or
jnp
xchg
mov
popf
pop
push
inc
jp
jne
lds
in
push
xor
rorl
stos
mov
test
adc
incl
pop
mull
and
add
movsb
mov
add
loopne
insb
cmc
and
xchg
int3
add
les
jge
bound
shlb
adc
fwait
push
test
xchg
push
xchg
jp
or
es
sarl
or
xor
insl
xchg
jno
shll
xchg
mov
pop
sti
sbb
sub
xor
in
rolb
mov
les
hlt
adc
movsb
inc
mov
inc
movsl
push
mov
test
in
cmc
and
xor
les
hlt
adc
movsb
inc
mov
inc
movsl
repnz
fdivr
nop
dec
jns
cmp
xchg
jo
jge
adc
xchg
push
mov
jns
push
sub
adc
push
int3
inc
mov
push
ja
mov
add
pop
pop
jns
jp
out
mov
cmp
jo
test
push
cmp
imul
jle
lds
pop
outsl
mov
mov
mov
stos
mov
and
mov
xorb
add
xchg
in
outsb
cmp
dec
and
rcrb
push
sti
pusha
imul
push
rol
mov
add
cwtl
dec
xor
cmp
sbb
push
xor
cltd
jnp
jae
adc
mov
dec
cld
adc
gs
icebp
test
xchg
dec
test
pop
pop
decl
and
add
jae
sbb
or
mov
lcall
loopne
mov
cltd
mov
lods
xor
and
mov
gs
das
jmp
add
adc
in
adcl
sub
inc
sub
sbb
fldl
adc
pusha
mov
les
dec
jmp
cmp
mov
out
flds
cld
adc
jg
jg
xor
cltd
repnz
cmp
rcrb
rcr
nop
jecxz
jmp
mov
movsb
mov
out
mov
les
repz
or
jle
pushf
dec
push
bound
inc
out
fwait
inc
push
and
and
lock
xor
sub
ret
dec
mov
aaa
xchg
lret
inc
cmp
xor
xchg
xchg
repz
lods
add
aad
ficomps
adc
lea
test
cmp
cmp
out
cmp
pop
cltd
mul
xorl
clc
and
lock
shlb
cmp
loop
insb
or
insl
out
movsl
xor
dec
repnz
cmp
mov
dec
popa
mov
and
bound
test
fstps
ret
lods
pop
aad
repz
mov
mov
xchg
or
shrb
cmpsl
movsb
lret
out
je
sub
push
push
cmpsb
ljmp
aas
shll
push
pop
fdivr
xlat
insb
fisttpll
jno
clc
data16
mov
xlat
and
adc
dec
pop
sub
ficoml
mov
test
adc
adc
mov
jge
and
repz
stos
stos
push
adc
jp
mov
icebp
loope
lock
mov
adc
push
je
stos
push
push
xchg
daa
lcall
stos
jge
daa
lods
imul
repnz
and
inc
scas
sti
fistl
out
sti
pop
mov
push
pop
lods
push
sub
jecxz
loope
sahf
mov
sbb
push
add
test
loopne
mov
lcall
pop
adc
cmpsb
mov
xchg
hlt
add
ss
int3
jno
fwait
aas
sahf
pop
ret
jp
mov
fcompl
cmp
lret
arpl
add
cmpl
je
inc
cmp
out
in
stos
add
je
shl
bound
in
fcompl
enter
mov
mov
ret
loope
or
loope
cwtl
in
jecxz
pop
int3
popa
test
xchg
das
jle
out
out
push
fs
push
jbe
add
clc
pop
mov
inc
pop
xchg
addr16
jle
sti
push
inc
mov
pop
hlt
mov
div
imul
ljmp
push
sbb
orb
or
jbe
out
mov
dec
test
cmpb
in
test
ret
aad
jle
cs
ss
cwtl
ljmp
inc
inc
pushf
pop
arpl
jp
cld
cmc
arpl
mov
inc
push
daa
mov
sub
movsb
in
mov
and
push
push
daa
mov
push
add
dec
mov
inc
fdivl
xchg
cmp
addl
and
mov
cmpb
cmp
insb
dec
push
jmp
mov
rcll
jmp
dec
and
push
shrl
push
inc
out
xlat
je
cmp
xor
sub
cmp
inc
xchg
jle
std
repnz
inc
cld
xor
ljmp
aas
in
pop
dec
cld
mov
cmpl
loope
push
cmpl
mov
stc
pavgb
push
or
ret
mov
je
in
jge
push
adc
adc
adc
sub
pushf
outsb
cmp
aas
pop
loope
pop
adc
pusha
adc
lds
cmp
add
cmpsb
roll
dec
and
lods
sbb
sub
sbb
addr16
nop
xchg
hlt
sbb
inc
xchg
adc
adc
idivl
mov
fwait
call
jmp
and
cmp
stos
xor
loopne
cld
subl
push
in
scas
data16
int3
and
or
mov
cmp
push
sub
inc
mov
xor
sub
pop
rorb
hlt
add
and
adc
dec
jmp
mov
mov
divb
or
imul
mov
sub
cmp
dec
dec
sub
xchg
cmpsl
adc
mov
sbbb
stos
jnp
mov
pop
cwtl
leave
cmp
imul
mov
mov
cmp
insl
aad
in
xor
lock
jle
fs
pop
mov
and
or
jl
dec
movsb
adc
imul
push
cmp
push
xorb
test
adc
mov
mull
xchg
or
sbb
mov
divb
or
sbb
cld
cld
jge
mov
xor
test
dec
pop
push
push
add
or
enter
es
add
lahf
out
ds
jne
nop
push
mov
sbb
push
test
mov
test
roll
dec
and
xor
hlt
mov
das
jge
mov
loopne
mov
fidivl
andb
cmp
adc
outsb
and
ret
pop
lock
cmp
loop
pop
and
xchg
popf
iret
imul
jo
push
or
mov
pushf
sub
mov
push
ds
add
mov
loop
sub
insl
int3
loop
adc
int3
mov
add
leave
jae
push
xor
clc
xor
int
jb
adc
idivl
cmp
mov
test
push
or
adc
mov
mov
dec
sub
cwtl
in
testb
pop
cmovs
stos
jg
pop
jg
rcrb
xor
aas
inc
movups
push
test
repnz
push
dec
shrb
in
inc
adc
jle
inc
test
testl
das
jmp
dec
xchg
in
or
dec
push
fsubl
mov
mov
push
fs
insl
mov
dec
xor
jae
push
jne
mov
mov
pop
fwait
repnz
orl
cmp
and
lock
xor
in
mov
mov
and
outsl
gs
push
mov
ja
add
aas
and
adc
mov
aam
push
stc
arpl
inc
ljmp
out
cltd
popa
push
lods
jmp
dec
cmp
shll
mov
mov
ss
stc
jno
push
inc
loopne
stos
push
inc
pop
pop
mov
neg
fwait
add
cmc
cs
add
push
ja
in
pop
mov
cmp
hlt
xor
xlat
adc
imul
jg
xlat
clc
and
xor
dec
shl
iret
rorl
jge
sbb
cmpsl
and
fiaddl
lods
out
jg
xchg
cmc
fcomip
pop
or
mov
xchg
add
add
nop
or
fildll
inc
cs
or
mov
mov
pop
rorb
enter
pop
ja
sbb
and
jns
push
addr16
pop
pop
in
add
out
jmp
negb
pop
cmc
loopne
mov
lods
mov
xchg
outsb
mov
ljmp
sbb
mov
cmp
ret
or
and
dec
sbb
loopne
xchg
mov
cmp
pop
dec
and
cli
mov
or
outsl
jne
lahf
fisubrs
loope
mov
mov
pop
nop
mov
hlt
jl
xor
aad
xor
gs
leave
inc
xchg
ret
testl
jl
xchg
push
mov
fisubrs
sub
fstps
shll
xorl
jb
test
mov
mov
xchg
adc
push
inc
add
sbb
out
decl
pop
cmp
bswap
and
jne
subl
stos
js
mov
or
sbb
pop
dec
imul
sbb
adc
cld
iret
adc
adc
adc
cmp
insb
daa
xor
negl
rcrl
outsl
js
fs
in
inc
push
push
cs
jb
adc
fidivl
das
adc
xchg
test
mov
push
into
inc
rcll
rclb
inc
mov
dec
and
test
cli
shlb
dec
and
data16
ret
test
leave
lock
xlat
out
jb
test
jp
test
lea
dec
loopne
movsb
bound
mov
neg
push
imul
imul
sti
inc
test
repz
sbb
outsl
add
sbb
mov
mov
mov
mov
dec
imul
or
push
xor
leave
sbb
test
and
faddp
iret
int3
xchg
inc
loopne
pop
lock
mov
add
clc
lret
jge
test
mov
and
mov
cmp
cs
dec
in
sub
rcl
hlt
in
push
shlb
adc
dec
lods
dec
ret
invd
out
pop
flds
test
popf
scas
dec
fsubs
jo
inc
fstpt
mov
xchg
or
addr16
inc
in
add
mov
mov
lods
xchg
lea
xchg
fnstenv
mov
jne
shr
fmul
pop
jo
and
mov
mov
adcb
or
lock
jge
push
mov
mov
repz
mov
adc
lds
jnp
and
faddl
mov
icebp
icebp
xchg
xchg
aad
movsl
mov
sub
cmp
aad
arpl
aam
add
es
popf
roll
test
mov
bound
arpl
incl
xchg
xor
movsl
out
inc
imul
push
sti
fsubrp
aas
mov
mov
rcll
adc
cmp
push
add
lret
adc
addb
js
ds
inc
fsubs
stc
jne
fidivrs
rorb
mov
jo
icebp
flds
inc
xchg
push
jne
aaa
es
mov
xlat
addl
lock
push
sub
movsb
jmp
sub
orb
sbb
cmp
jmp
inc
lock
loopne
adc
cmc
nop
mov
push
icebp
sub
mov
loopne
mov
nop
sarb
mov
imul
push
push
jns
mov
adc
icebp
sbbb
int3
sbb
dec
lret
mov
in
mov
pop
aad
clc
jno
and
into
in
sbb
shrl
mov
push
inc
jmp
jns
push
lock
movsb
aaa
das
jle
add
rorl
je
int
imul
push
subb
mov
dec
jp
pop
jle
imul
sarl
push
pop
xchg
js
idivl
push
add
loope
rcrl
pop
sbb
add
sbb
pop
xor
pop
sahf
mov
and
scas
ret
cmp
fdivrp
xor
xor
repnz
add
ficomps
js
in
scas
mov
push
test
or
pop
add
loopne
add
xorb
in
push
xor
mov
lcall
xor
fisttpl
lret
fcoms
bnd
ljmp
addb
or
shl
testb
pop
icebp
and
add
inc
mov
fiaddl
xchg
add
mov
pop
loope
pop
shrl
mov
inc
mov
repnz
jmp
lret
jge
jo
xorl
adc
daa
sbbl
sub
push
int3
movsb
xchg
test
lea
sub
repnz
or
inc
mov
dec
jne
rcrb
push
shll
sub
sub
mov
dec
mov
ss
adc
push
iret
xchg
pushf
mov
cmp
jne
jno
lods
xor
insl
dec
imul
add
movsb
pop
shll
mov
xchg
aaa
xchg
push
mov
mov
adc
aas
pop
cmp
jp
rol
mov
scas
ss
or
std
in
jae
add
stc
mov
and
roll
iret
pop
iret
or
out
dec
cli
xchg
adc
cmp
loop
movsb
mov
sub
arpl
in
xchg
cmpsb
jbe
pushf
mov
jmp
enter
push
ss
fstl
push
adc
faddp
push
sbb
mov
mov
int
cmp
or
jnp
out
push
lds
push
push
xor
pop
out
push
bound
mov
int3
mov
rcrl
aad
js
dec
sti
jae
or
cld
cld
mov
pop
push
rclb
mov
in
and
mov
cmp
pop
lret
adc
adc
sub
sbb
dec
xor
push
push
inc
pop
sete
insl
in
xor
adc
push
test
loope
xor
outsb
es
xor
out
std
repz
clc
xchg
sahf
sbb
sub
add
scas
lock
mov
mov
les
or
fmull
rcll
test
cmp
out
fidivs
sub
lds
cs
pop
shl
fdivrs
sub
out
gs
mov
mov
lcall
mov
mov
inc
mov
jns
lock
imul
mov
dec
iret
xor
out
sub
lahf
lock
popf
data16
mov
inc
jg
in
into
push
cli
rcr
sub
cmc
sub
cmpsl
or
nop
fwait
in
stos
pop
or
enter
mov
repnz
in
lcall
xchg
xchg
xor
leave
sbb
sarb
call
xchg
push
pop
loop
icebp
inc
jmp
js
sbb
popa
sub
mov
sub
or
aaa
test
pop
popf
mov
jecxz
adc
xchg
inc
jo
loopne
mov
mov
subl
push
bound
bnd
jbe
rclb
pop
mov
in
dec
sbbb
leave
push
je
dec
aad
mov
jle
insl
sbb
and
lock
xlat
faddl
inc
push
popa
stos
dec
cmpsl
or
push
add
jb
les
dec
sub
cltd
xor
in
out
cmpsl
cmp
push
je
inc
int
notl
rorl
dec
data16
dec
rcll
cmp
and
push
dec
adcb
das
jne
stc
adc
icebp
outsl
and
push
jge
repz
add
cmp
xchg
and
or
dec
iret
adcl
or
add
mov
movhps
ret
mov
jmp
push
mov
mov
xchg
push
ret
sarb
mov
repnz
mov
out
ljmp
movsb
insb
inc
sbb
ds
sar
stos
jbe
pusha
fistps
les
mov
idivb
sub
std
je
sub
and
inc
rclb
imul
cld
xchg
fsts
push
into
cmp
mov
and
inc
dec
arpl
inc
pop
or
lcall
jmp
popf
popf
sbb
inc
in
jbe
sarl
cmp
cmp
xor
sbb
sub
movsl
clc
rclb
add
lahf
test
mov
and
push
test
mov
dec
decb
mov
pop
shrb
call
inc
xor
mov
gs
mov
add
xchg
daa
pop
adc
jo
roll
xchg
outsb
std
lea
js
push
jecxz
out
das
inc
sbb
dec
xchg
in
and
outsl
frstor
movsl
xor
je
rorb
arpl
pop
rclb
jo
lret
pop
scas
sub
xor
jns
in
lods
out
iret
mov
pusha
adc
insl
dec
outsb
sub
shrb
adc
lret
jl
sahf
int
add
jecxz
cmp
cmp
push
insl
xchg
push
push
aad
dec
js
xchg
iret
aas
out
clc
adc
jge
scas
inc
jb
jl
scas
cmpsb
stc
mov
cmp
shlb
pop
call
fdivl
cwtl
es
push
xchg
test
je
cmp
imul
or
je
aad
movsl
jle
mov
cmp
cltd
popa
test
sbb
dec
xchg
inc
cli
jecxz
test
cld
xorb
popf
jle
add
shl
xor
jle
mov
and
sbb
inc
jl
ljmp
daa
mov
clc
loopne
pop
daa
adc
xchg
aaa
jecxz
push
js
ret
out
fsts
test
push
into
adc
out
fsubr
jbe
mov
jle
and
mov
cmp
adc
and
mov
xchg
push
push
xchg
inc
and
scas
mov
sbb
test
pop
push
pusha
inc
nop
ret
inc
mov
jns
ds
out
pop
inc
fcoms
cmp
jg
mov
jle
mov
outsb
popf
xor
or
stos
jo
mov
sbb
loopne
inc
call
nop
fs
mov
fxch
mov
pusha
add
adcl
test
loop
sbb
mov
push
ret
pop
dec
xor
enter
insl
xor
out
xchg
int
mov
add
repz
data16
imul
mov
pop
sti
popa
fst
inc
push
inc
sub
cmpsb
shlb
xchg
and
stc
add
mov
fmul
pop
sub
jmp
xchg
inc
xor
outsb
and
aaa
xorl
and
mov
xorb
add
push
and
push
cli
in
pop
mov
push
rolb
prefetcht0
pop
inc
pushf
ljmp
nop
and
movsb
mov
repz
dec
jo
jo
adc
sub
push
push
bound
lods
fisubl
movsl
adcl
cmp
fcomps
roll
mov
jge
dec
adc
mov
push
or
inc
stc
xor
lret
in
lods
lcall
cmp
pop
jns
mov
enter
loopne
xchg
cmp
push
push
adc
fimull
stos
into
push
arpl
ljmp
loop
movsb
push
leave
and
pop
sbb
loopne
xor
aas
movsl
mov
repz
jno
pop
mov
out
imul
sbb
sbb
scas
adc
cltd
mov
mov
fwait
and
cmpsb
mov
sarl
pop
pop
ss
push
jp
insb
mov
xor
xchg
mov
pop
xlat
orl
xchg
mov
incb
dec
shll
or
mov
mov
call
or
inc
cmp
arpl
movsb
dec
pusha
pop
std
xor
add
and
ret
sub
xchg
dec
pop
sar
xor
pop
jmp
in
imul
outsl
dec
iret
mov
sub
gs
addl
in
pop
mov
out
cli
xor
cmp
outsl
xorl
test
out
xchg
les
jne
mov
jno
mov
scas
pusha
mov
in
cmpsb
mov
sub
sti
xchg
pop
and
sbb
mov
test
ja
test
and
jbe
push
pop
push
mov
cmp
cmp
rol
aaa
lds
inc
push
lea
inc
push
aad
nop
inc
outsl
and
lods
shl
sbb
xchg
inc
cmp
lret
xchg
mov
push
sub
sbb
ret
arpl
pop
inc
mov
cwtl
or
sti
add
mov
mov
lea
push
mov
bound
mov
mov
icebp
test
dec
xchg
push
inc
loop
out
in
test
push
push
insb
jo
fwait
aad
sbb
ja
inc
dec
jle
repz
and
cmpsb
cmp
stc
inc
movsl
loopne
fsts
loopne
xor
pushf
addl
push
repnz
jnp
popf
jne
mov
lods
cmc
sahf
in
or
mov
arpl
int3
add
out
jmp
roll
lea
push
inc
sbb
push
mov
aad
jecxz
mov
mov
dec
mov
fadd
pop
adc
leave
fnstsw
or
or
es
inc
inc
stos
xor
lret
xchg
xchg
dec
jp
add
and
fcomi
mov
mov
push
xchg
add
adc
and
xor
les
hlt
adc
movsb
inc
mov
inc
movsl
push
mov
test
in
cmc
and
xor
les
hlt
adc
movsb
inc
mov
inc
movsl
fs
test
in
cmc
and
hlt
aad
and
hlt
adc
test
inc
pop
push
push
movsl
or
add
add
and
mov
les
hlt
pop
mov
xor
add
adc
imul
popa
ret
in
mov
addl
loope
mov
roll
push
ss
divb
adc
popa
cmpsb
jno
inc
xchg
stos
data16
in
push
push
loope
lock
cmp
sbb
aam
lcall
mov
sbb
and
mov
mov
cwtl
dec
mov
subl
cmp
pop
gs
int3
dec
test
xchg
fimull
dec
and
out
pushf
add
cmpsl
mov
cwtl
aam
inc
dec
es
pushf
inc
pop
daa
cmpsb
cmc
sub
out
repz
clc
das
cmc
jo
push
and
mov
lret
outsb
fistpl
push
mov
imul
push
icebp
es
loope
lcall
jge
imul
daa
mov
inc
shl
push
pop
xchg
gs
xor
inc
xchg
test
adcl
jmp
dec
xlat
pushf
in
fsub
cli
xor
pop
dec
push
jle
nop
dec
and
loope
and
rcll
add
fdivl
imul
loopne
mov
push
mov
stc
or
into
roll
js
mov
mulb
clc
add
out
cmp
aad
mov
repz
aas
lea
inc
movsb
inc
mov
and
adc
adc
call
mov
les
in
test
jp
sarl
mov
mov
xchg
adc
inc
xchg
mov
inc
xchg
push
loope
icebp
roll
push
and
xor
add
adc
popa
cmpsb
jno
inc
xchg
mov
inc
xchg
push
loope
icebp
roll
push
and
repnz
jns
dec
aas
pop
xchg
fmuls
fisttpll
and
es
xchg
jl
xchg
icebp
cmp
in
psubq
or
test
xlat
test
fsubs
push
in
and
in
dec
daa
in
sbb
jne
mov
mov
arpl
dec
and
outsl
dec
inc
dec
xchg
rcr
ret
mov
out
sbb
aaa
xlat
stos
dec
and
mov
loop
loopne
icebp
xor
cli
cmp
or
imul
icebp
dec
inc
cmp
add
cltd
push
sub
nop
cmp
or
insb
mov
or
xchg
clc
adc
mov
adc
sbb
mov
lret
shrl
loope
jl
pop
lret
divl
movsl
sub
loop
mov
mov
xchg
lods
fidivrs
and
push
shrl
adc
xor
jns
jmp
in
ja
pop
jle
stc
in
dec
fwait
clc
add
test
mov
lcall
mov
ljmp
ja
int
inc
test
inc
subb
xor
mov
mov
stc
insl
add
pop
orl
or
jno
incl
pusha
pop
xor
rorl
movsl
es
test
dec
cmpsb
test
and
aad
jo
xchg
sarl
xor
imul
pop
addr16
mov
push
jl
inc
pop
data16
cmc
jp
mov
mov
movsb
xchg
ret
ror
out
xor
or
aam
xor
pop
jno
repnz
outsl
sub
in
aas
push
stos
enter
xor
rol
jp
cs
xchg
fstpt
aas
inc
push
adc
inc
cmp
xchg
test
rclb
xor
dec
inc
loope
sbb
test
mov
dec
movsb
mov
scas
or
stc
jle
outsl
jp
ljmp
dec
out
rcll
js
lea
fbld
popa
inc
and
adc
enter
ret
mov
sbb
mov
add
loope
insb
xchg
or
push
pop
pop
jmp
mov
rorb
fistps
in
mov
test
sub
xor
int3
dec
pop
xchg
cld
pop
int3
out
mov
int
movsb
inc
dec
outsb
sbb
shlb
push
enter
pop
mov
mov
lds
scas
push
xor
add
shlb
outsb
in
jb
sub
test
scas
add
dec
inc
das
push
push
std
jbe
mov
dec
xchg
hlt
adc
shl
cmc
jecxz
pusha
jmp
rol
sub
in
xchg
mov
hlt
rclb
shl
pushf
arpl
out
loopne
and
shr
cmp
sbb
xchg
pop
add
jae
es
iret
pop
lcall
leave
fnsave
mov
pop
jae
in
jno
push
ficomps
in
cltd
mov
cmpsl
lds
mov
movsl
mov
lods
sbb
fs
out
std
lea
dec
scas
ret
je
ss
push
pop
mov
or
xchg
push
inc
outsl
jecxz
mov
cld
push
repnz
jae
negb
lods
js
mov
push
fwait
pop
mov
imul
ja
pop
outsl
cmpsl
daa
add
mov
adc
das
jg
scas
int3
lods
push
fwait
movsl
xchg
lret
hlt
mull
mov
sub
dec
imul
mov
fisubrs
dec
lods
sbb
cmpsl
lods
jns
add
cwtl
stos
sbb
cwtl
xor
cmp
lods
gs
pop
push
inc
mov
mov
iret
mov
clc
mov
arpl
stos
pop
sbb
and
gs
fs
cwtl
stos
mov
call
popf
inc
sbb
sub
shrl
adc
bound
shlb
test
add
jp
test
stc
sub
lods
outsl
cld
in
gs
xchg
iret
int3
je
push
and
inc
jne
rorb
mov
popf
adc
sbb
popa
mov
push
int3
pop
inc
clc
daa
mov
fildl
cli
add
popf
imul
mull
dec
rcll
cwtl
jb
out
mov
and
mov
js
icebp
jns
inc
sahf
out
inc
or
shrb
cwtl
sbb
es
je
mov
scas
jg
es
xlat
gs
xor
jbe
cmp
jmp
dec
lods
push
nop
adc
dec
cmp
insl
sarb
sub
mov
jle
push
outsl
mov
mov
lcall
push
dec
insb
cmpb
ljmp
push
outsl
inc
or
dec
pop
fcmovnu
mov
xchg
pop
repz
neg
add
gs
and
xlat
dec
mov
movsl
mov
adc
in
pop
mov
rcll
loop
loopne
pop
stos
sub
scas
xchg
gs
push
xchg
fisubrl
adc
insl
sub
pop
scas
sub
push
xchg
sub
cltd
mov
add
ret
in
add
adcb
inc
subb
mov
or
sub
out
out
sub
add
jne
xchg
clc
test
dec
out
ljmp
mov
dec
inc
sbb
pop
ds
xor
addr16
jmp
hlt
xchg
cltd
ret
rclb
test
push
hlt
add
push
xorw
adc
mov
repz
popa
int3
dec
mov
mov
fcmovb
mov
mov
hlt
xor
aas
inc
sti
addr16
aas
lock
loopne
ljmp
sub
add
mov
aas
arpl
xlat
cmpsb
dec
mov
inc
andl
cmp
xlat
jne
push
out
pop
into
pop
dec
cwtl
pop
push
pop
sti
mov
sbb
sbb
dec
push
xchg
call
push
test
sub
andb
or
pop
fwait
es
out
fwait
ror
inc
fwait
test
shrb
cli
xchg
int
cmp
sbb
or
push
mov
cld
in
mov
pusha
and
jecxz
add
in
sahf
fistpll
mov
mov
loopne
cmc
ret
outsl
ret
push
nop
movsl
mov
jg
stc
daa
cld
jp
pop
mov
int3
fwait
mov
xchg
mov
add
pop
fistps
daa
sbb
xchg
scas
jb
ja
or
sub
add
jb
mov
int3
pop
fs
pushf
test
adc
mov
frstor
in
shll
cmp
data16
mov
lcall
jmp
or
in
dec
fs
xor
mov
dec
xchg
and
fdivl
mov
sahf
xchg
jecxz
les
outsb
mov
inc
dec
aam
xchg
adc
dec
jge
les
mov
mov
sub
xor
cli
dec
sbb
jne
ret
push
lcall
iret
mov
repz
roll
loop
adc
mov
int3
leave
shll
push
aaa
or
push
call
sub
fwait
or
das
adc
in
loop
xchg
ljmp
popf
jg
inc
jmp
mov
adc
aam
inc
pop
insb
and
push
xchg
fcoml
sub
test
mov
in
mov
push
pop
scas
cmpsb
dec
cmp
jg
nop
gs
cmp
in
sub
testl
xor
in
fstpl
ds
jb
mov
ficomps
out
jecxz
lea
push
inc
out
jle
fistpll
into
in
std
add
aam
scas
xchg
mov
dec
adc
call
rolb
xor
in
iret
mov
xor
add
lret
push
fdivs
mov
daa
inc
fbld
dec
loop
push
andnps
inc
xchg
in
push
sub
sbb
mov
jp
or
sub
ret
cli
xor
outsb
dec
or
das
dec
or
std
xchg
adc
aad
pop
mov
and
rclb
fsubr
push
lret
push
push
mov
imul
inc
pop
xor
mov
lahf
pushf
mov
sbbb
xorl
sub
mov
imul
loope
bound
pop
inc
je
mov
jle
out
push
es
shufps
adc
mov
aaa
enter
stos
sub
dec
scas
jg
add
es
and
jmp
mov
pop
xchg
repz
nop
xchg
pop
push
cmpsb
dec
test
cmc
cs
sub
shlb
or
sub
push
sbb
icebp
ja
mov
lock
sub
jge
cmp
clc
xchg
xchg
int3
cmpsl
sti
sbb
adc
test
call
rcl
xor
or
test
loope
popa
xchg
in
out
xlat
aas
sbb
jno
push
sbb
outsl
adc
cwtl
lcall
out
cwtl
push
lea
jmp
push
movsb
cmpsb
iret
push
mov
jmp
stos
and
movsb
icebp
jecxz
sahf
xlat
jge
arpl
cwtl
mov
mov
add
push
cmpsb
adc
mov
lea
les
xchg
add
mov
movb
pop
mov
lahf
and
lret
jne
push
notl
inc
in
push
mov
mov
cs
stc
push
jge
or
mov
sbb
sbb
lock
outsl
sbb
jle
outsb
pop
cmp
push
xor
or
push
pusha
sbb
fldcw
lds
dec
cltd
pop
movsb
and
movsb
push
and
dec
pop
sti
xchg
stos
iret
shl
shll
xor
sbbl
push
stos
std
test
daa
daa
gs
push
popf
rorb
into
in
in
pop
stc
popf
add
or
ljmp
add
inc
adc
movsb
ds
xchg
js
fxch
cmp
addb
pop
cmp
cs
repz
mov
repz
inc
and
add
mov
push
add
cmp
pop
xchg
sar
add
aaa
ljmp
xchg
sbb
and
lcall
jmp
pop
cmp
into
sbb
sbb
jne
cmpsb
out
mov
ret
mov
popf
mov
add
popf
xchg
movsb
pop
ss
pop
cli
je
mov
cs
out
std
sub
lea
sarl
jecxz
jb
insb
ficoml
xor
pop
add
adc
mov
loope
xor
not
lea
jmp
inc
aaa
das
frstor
sbb
cmp
cmp
int
mov
cmp
jl
push
and
lahf
add
mov
leave
jnp
xor
mov
aam
outsl
call
aam
push
mov
mov
mov
decl
neg
aas
or
xor
inc
xor
outsl
ss
js
fcom
ret
idiv
daa
aas
mov
mov
mov
inc
xchg
fildl
fldz
mov
dec
hlt
insb
pop
mov
fsubs
enter
repnz
icebp
rorl
inc
mov
add
fwait
sub
adcl
inc
adc
and
decb
sub
in
repz
test
outsl
ret
lahf
pop
sbb
mov
shr
in
repnz
divl
push
jl
inc
adc
and
jae
mov
dec
sub
mov
xor
sbb
or
aad
in
push
xor
div
out
out
push
jle
push
jle
repz
pop
stos
cmpsb
jmp
sub
xor
push
dec
lret
or
in
mov
cmp
jge
mov
pop
stos
shlb
mov
or
ficoms
sub
cmp
addl
lods
in
cmpsb
mov
lds
cmp
mov
inc
fcomi
xor
test
fiadds
sahf
fimull
test
testb
test
inc
cmp
icebp
icebp
jnp
stc
outsb
jns
mov
movsb
addr16
repz
sbb
push
testb
jge
cmp
imul
xchg
icebp
cmp
mov
inc
rol
sub
mov
cmp
sub
pop
bound
fstl
mov
mov
add
push
imul
jge
xor
pop
rolb
add
addr16
push
xchg
push
dec
dec
fdiv
outsl
or
shl
ret
mov
cmp
dec
push
adc
loopne
ret
stos
rcl
addb
xor
inc
mov
lcall
fs
loope
push
pop
cwtl
decl
decl
sub
orl
aaa
pop
mov
sbb
loopne
sub
call
ret
push
add
jns
popa
xchg
and
mov
loope
fsubl
add
popf
clc
imul
xchg
mov
out
jno
xor
xor
es
test
add
mov
fisttpll
mov
pop
std
xchg
ffreep
inc
cmp
mov
or
mov
push
mov
and
in
movsb
sub
movsl
jnp
sbb
enter
cwtl
mov
fildll
xchg
push
lea
shlb
stos
add
mov
dec
sbb
mov
loop
push
aas
ljmp
loopne
in
ja
mov
clc
pop
push
and
aas
xor
leave
into
lret
xchg
cmp
lods
jae
pusha
or
mov
filds
insb
xor
mov
xor
sti
and
outsl
push
dec
sbb
mov
sbb
ret
andl
insb
mov
ja
leave
std
and
cltd
out
iret
or
dec
popf
js
jecxz
leave
cmc
sbb
xchg
das
ss
xor
or
loop
lock
fs
pop
cmp
add
mov
popf
xchg
cwtl
scas
ret
out
dec
jb
call
sbb
fbstp
jmp
imul
pop
mov
mov
ficoms
sbb
add
stos
sub
mov
addr16
sub
insb
cmp
test
daa
xchg
scas
fdivrs
lea
cmp
xor
jae
imul
mov
ss
jmp
js
in
ror
adc
test
lcall
mov
push
sahf
sub
cmp
jbe
push
and
jl
dec
mov
in
inc
fidivl
lea
imul
mov
jns
dec
and
into
neg
jbe
rolb
lods
jne
lods
loopne
cmpsb
cmp
fidivrs
mov
and
mov
sahf
mov
enter
pop
imul
sbb
cwtl
sub
rcrl
lock
sub
or
in
lods
push
vpmuludq
outsl
adc
pop
add
mov
push
sbb
cli
sbb
mov
out
mov
rolb
cwtl
jbe
pop
test
jno
pop
mov
mov
aaa
mov
mov
cmp
divl
pop
jmp
pop
jmp
push
and
repz
iret
cmpsl
mov
cmp
cmc
xchg
fsubl
adc
xchg
rorl
shrl
jge
mov
in
into
push
mov
lcall
xor
or
push
incl
fcos
adc
mov
add
ret
mov
sarl
sarb
cmp
in
loopne
push
mov
and
shll
stos
cmpsb
out
xchg
mov
ret
cmp
shll
inc
hlt
dec
jns
data16
adc
dec
adc
add
mov
mov
or
pop
fldz
fistps
jmp
in
popl
push
ljmp
out
xor
jbe
mov
sbb
push
loopne
gs
push
cmp
mov
mov
pop
pushf
es
pop
jecxz
or
call
das
sub
jne
sahf
aaa
mov
mov
daa
jge
pop
rcll
arpl
popf
jo
jno
scas
fs
cltd
pop
sub
sbb
push
add
dec
cld
push
cmp
push
and
jmp
jne
mov
dec
les
pop
jno
pop
filds
pop
xchg
pop
push
push
sub
addb
xor
popa
hlt
daa
xchg
inc
shll
out
addr16
aaa
jb
data16
sub
fsubrs
mov
fsub
xchg
pop
jp
mov
flds
rcrb
push
xchg
rep
sub
inc
mov
add
inc
cmp
or
sub
lods
aad
inc
insl
loope
stos
cmp
mov
sbb
pusha
test
outsb
int3
mov
xchg
pop
adc
inc
loop
xchg
inc
mov
jnp
add
stos
loopne
jmp
mov
daa
sub
jl
popf
add
loope
imul
fistl
adc
out
cmpsl
xor
in
shl
mov
adc
pop
sbbl
mov
pusha
repz
addr16
inc
ret
imul
push
sub
jmp
std
mov
and
rcrb
push
lock
loope
xor
testb
imul
leave
or
push
sub
sti
lcall
into
sti
testl
push
movl
mov
adc
stc
lret
data16
xchg
xlat
leave
and
inc
lds
pop
and
sarl
mov
mov
inc
sub
popa
sti
push
dec
jle
jl
sbb
repz
add
sub
es
aad
add
or
pop
imul
mov
and
imul
and
cli
jb
or
pop
mov
ficoml
and
jns
lret
gs
adc
jl
mov
mov
mov
fldt
jmp
in
rcrl
mov
push
fidivrs
xor
popf
sub
idivl
ja
add
or
mov
xchg
mov
leave
push
cmp
mov
adc
mov
cmp
loop
das
xchg
pop
sbb
add
adcb
push
add
pop
jmp
rorl
pop
xchg
sub
xor
xchg
jge
addb
or
xor
cmp
mov
push
daa
sti
in
sahf
push
loopne
shr
mov
mov
inc
rorl
out
lcall
push
insb
mov
cmpsb
test
mov
cmpsl
pop
cmp
je
sub
in
jne
loopne
and
mov
sti
shlb
int
insl
mov
cmp
and
sbb
fldt
adc
xor
notl
movsb
jne
adc
data16
adc
pop
jnp
lahf
gs
or
pop
sbb
stos
and
sahf
fsubp
add
mov
mov
lods
dec
xorl
add
enter
lahf
dec
or
inc
pop
in
popf
sub
mov
jns
inc
cld
jb
test
pop
cli
xor
pop
dec
mov
outsl
cmpsb
push
dec
cmp
lahf
mov
jae,pn
adc
out
mov
std
in
test
data16
cmp
pop
shll
add
push
lea
push
cmp
sub
test
cli
cltd
mov
repnz
das
mov
cmp
xchg
push
out
fistl
push
shlb
je
mov
jb
in
negl
or
repnz
xchg
imul
lret
cmp
jp
or
arpl
cli
jb
out
addb
dec
jbe
inc
push
push
mov
ds
js
out
sbbl
sub
imul
jns
or
pop
jae
stc
lret
adc
cs
inc
or
std
jecxz
dec
xchg
fs
jbe
xor
outsb
ret
adc
ffree
sbb
mov
popf
inc
pop
insl
and
and
inc
and
mov
xchg
jb
and
roll
sub
in
scas
and
mov
mov
and
cmp
inc
test
push
scas
inc
fisubrl
mov
int3
ret
jnp
mov
or
or
sub
jno
loopne
mov
pop
sub
adc
pop
lea
fs
rcl
adc
adc
sarb
pop
and
aas
negl
stos
sbb
aad
xlat
imul
push
sbb
and
pop
decl
mov
mov
les
out
mov
inc
sarb
xchg
push
pop
shrb
lahf
dec
jo
xchg
insb
inc
mov
hlt
adc
dec
and
sbb
sbb
clc
icebp
push
psubb
repnz
mov
cmovnp
jbe
popf
push
mov
clc
cli
mov
mull
push
ljmp
aad
inc
mov
adc
cmp
jecxz
jle
stc
lcall
pop
dec
arpl
push
xchg
sbb
ret
test
ret
test
jp
push
or
in
xor
ljmp
pop
sub
cmp
or
jl
outsb
jae
mulb
loop
xchg
mov
lcall
push
mov
in
cwtl
cmc
dec
mov
aaa
adc
das
out
fnstcw
xor
pop
add
ss
pusha
xchg
pop
jmp
mov
aam
hlt
lret
jnp
xchg
icebp
arpl
mulb
cmpsb
jno
inc
xchg
mov
inc
xchg
push
loope
icebp
roll
push
and
xor
add
adc
popa
cmpsb
jno
inc
xchg
mov
inc
xchg
push
loope
icebp
roll
push
and
xor
popa
cmpsb
jno
inc
xchg
mov
inc
xchg
push
loope
cmc
shll
push
adc
adc
popa
cmpsb
jno
roll
xchg
pop
cltd
dec
fsubrl
inc
xchg
and
stc
cs
in
adc
inc
lock
add
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
call
mov
mov
mov
or
push
pop
add
push
add
int3
add
incb
inc
add
xor
dec
add
les
sbb
add
add
push
cwtl
add
add
mov
sub
roll
aaa
add
add
add
add
add
add
add
add
or
mov
xor
sub
or
add
add
add
add
add
add
inc
add
add
add
add
add
add
sub
or
add
add
xchg
add
add
aad
push
add
add
add
dec
add
incb
xchg
add
cwtl
add
sbb
jae
cmp
mov
in
xchg
add
add
add
add
push
add
ret
add
add
add
add
add
add
add
add
push
add
add
fadds
or
arpl
sub
add
int3
add
add
add
add
cwtl
add
add
add
add
add
add
add
sub
push
add
add
or
add
add
add
add
add
add
add
add
add
push
add
add
and
arpl
mov
and
out
add
mov
add
add
add
add
add
and
dec
add
arpl
cmpsl
add
int3
add
push
add
add
add
add
add
add
add
add
sti
add
add
add
jne
dec
add
add
add
add
add
add
add
lea
cmpsl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
cmp
xor
inc
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
popf
add
add
add
add
add
add
pop
add
add
add
add
add
insl
add
add
add
mov
les
lea
push
add
and
add
add
add
cmpsl
add
sbb
push
add
add
cmp
pushf
add
add
add
jae
aad
cmp
push
add
add
add
push
add
inc
add
add
cwtl
add
add
add
add
add
sbb
mov
pop
add
mov
and
add
jns
dec
add
mov
add
add
add
add
dec
add
mov
add
xor
lret
add
pop
add
add
add
sub
inc
add
add
add
out
lods
add
add
add
add
add
add
in
push
add
pop
push
add
add
sbb
ret
add
add
movsb
add
mov
test
adc
movsb
add
add
add
test
add
mov
push
add
add
push
xchg
add
add
add
add
add
add
add
add
add
add
add
or
add
cltd
add
add
insl
add
add
add
add
add
add
add
add
add
add
add
mov
ficoml
pop
outsb
cs
xchg
shll
sbb
popa
fwait
mov
sbb
xlat
sbb
test
lret
sbb
adc
cld
mov
add
inc
xor
cli
cmp
int
sahf
and
loop
fmuls
scas
mov
stos
jno
std
popf
stos
sub
in
mov
aas
mov
mov
ja
xchg
cmp
dec
inc
cmp
repnz
scas
mov
call
cmp
add
jmp
roll
mov
mov
dec
push
inc
push
push
hlt
pushf
xchg
mov
gs
or
jmp
xor
mov
xor
in
adc
sbb
push
xchg
xor
addr16
jp
shlb
testl
cmp
retw
and
dec
and
adc
xlat
popa
js
inc
push
dec
insl
shll
xchg
rorl
xchg
test
mov
mov
xchg
aas
test
mov
fistps
idiv
jns
divl
push
lcall
stc
add
loopne
cwtl
fnclex
loopne
or
xlat
mov
sub
mov
jne
fldpi
dec
fidivs
mov
jno
rclb
mov
mov
mov
xchg
nop
and
sbb
jb
mov
sahf
cmp
shll
loopne
stos
sbb
out
xor
xorl
aad
push
fdivl
add
push
cs
repnz
aam
jmp
movsl
xchg
dec
imul
cmp
imul
sbbb
test
push
cmc
cmpl
adc
scas
dec
paddq
add
ds
adc
sub
inc
or
jnp
ss
test
into
rcl
shlb
pop
push
cmp
lea
stc
rorl
inc
fidivrl
inc
loop
xchg
int
in
outsb
out
add
sbb
pop
stos
out
pop
inc
push
testl
xchg
divl
jae
push
ficompl
mov
mov
pop
outsb
xchg
lret
and
enter
xchg
loop
push
xor
xor
push
pop
cmpsl
std
lahf
pop
sub
cli
mov
lds
jno
mov
xor
clc
cld
jbe
out
xchg
jno
xchg
fiaddl
xchg
in
xchg
lret
inc
jb
imul
loope
jmp
cmp
jns
aaa
sub
iret
cwtl
sbb
pop
ss
mov
call
and
sbb
rcrl
jnp
rolb
aad
jle
add
icebp
pop
xor
into
roll
or
inc
rcrb
test
jp
and
in
aas
cltd
test
xchg
gs
cmp
mov
jns
or
test
xchg
xchg
cmp
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
