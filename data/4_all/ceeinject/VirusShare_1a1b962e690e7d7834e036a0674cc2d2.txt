call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
nop
pop
jne
std
jge
insl
xchg
movsl
in
leave
push
shrb
jmp
or
lods
aad
int
std
jge
insl
popf
sbb
lods
pop
or
std
insl
in
sbb
mov
dec
push
jnp
sub
add
adc
pop
frstor
out
sbb
stc
dec
iret
pop
ret
in
cmp
push
aad
int3
mov
pop
dec
xorb
out
gs
push
js
sbb
rcrl
mov
insl
jb
xchg
ret
fldenv
mov
subb
sarl
frstor
std
dec
insl
xor
push
xchg
jo
fnsave
adc
cmp
call
addb
sbb
dec
cmp
xchg
pusha
nop
mov
sarb
add
push
js
xor
sbb
push
out
lahf
or
sub
int
add
jne
cmp
jge
mov
cmpsl
jl
insl
adc
mov
int
std
subl
cmp
movsl
in
hlt
jge
adc
scas
pop
mov
or
pop
clc
insb
scas
push
int3
dec
cmp
or
sub
clc
arpl
fnsave
add
sbb
ficomps
gs
add
outsb
in
push
fldcw
sbb
mov
fisttpll
jge
insl
in
sbb
mov
int
std
jge
insl
popf
sbb
lods
sub
jge
insl
in
sbb
mov
or
cli
mov
rcll
leave
xor
inc
cld
xor
mov
mov
push
lock
pop
jmp
sub
cmp
in
test
loop
inc
shl
and
ss
fcmove
arpl
nop
inc
dec
stos
inc
push
or
scas
rcrl
xchg
mull
sbbl
into
adc
pop
xor
out
dec
xor
call
sbb
jl
xor
or
cmp
xchg
push
fstl
repz
inc
pop
adc
jb
insb
loop
hlt
push
lods
test
mov
sbb
mov
dec
mov
bound
icebp
jnp
in
enter
les
mov
int3
sub
outsl
das
rep
xor
bound
les
mov
pop
repnz
leave
sbb
push
icebp
call
cmp
into
stc
inc
lock
data16
mov
incl
repz
enter
xchg
gs
push
add
jl
or
adc
lret
lret
aaa
dec
push
dec
dec
dec
or
jb
mov
cmpsl
adc
cld
lret
xor
ds
repnz
and
inc
lock
inc
loop
lcall
dec
repz
cmc
mov
xchg
cmp
test
mov
inc
inc
sbb
push
dec
lahf
mov
mov
mov
jp
aas
xchg
out
int3
push
sub
ljmp
mov
sub
push
jmp
into
std
sub
ss
or
sub
mov
sbb
testl
push
outsl
mov
std
and
out
ret
xor
add
mov
fmuls
movb
xchg
int
test
push
xor
cltd
or
push
dec
add
and
jne
sbb
ja
jnp
scas
pop
inc
scas
sti
shlb
pop
fnstsw
dec
lret
jb
aas
cmp
outsb
push
mov
xchg
push
inc
cmp
jb
js
cmp
add
cmp
cmc
aam
rcll
xlat
push
lods
out
inc
imul
or
and
popf
dec
cmp
cmp
push
push
sbb
ss
test
dec
or
inc
lock
sub
sub
lea
push
cmp
lds
push
sarb
jnp
mov
ss
fimuls
jle
insl
aaa
outsl
adc
scas
mov
or
fstpl
movsl
inc
repz
pop
xchg
xlat
cmp
mov
add
aaa
jmp
decl
cmpsl
lock
xchg
and
mov
clc
je
mov
scas
les
shl
sbb
jns
insl
jno
lret
inc
pop
mov
ss
mov
fcmovnbe
push
and
rclb
iret
xchg
mov
sbb
jo
adc
sbb
adc
adc
stos
dec
in
mov
call
pop
or
inc
clc
call
stc
inc
loopne
scas
push
adc
xchg
jne
jl
push
divl
js
jg
xchg
xor
sbb
call
mov
mov
mov
mov
call
cld
mov
xchg
adc
xorl
mov
jmp
pop
cmp
inc
xchg
cmp
xchg
aad
inc
xchg
push
cmpsb
push
mov
mov
pop
pop
out
jne
jno
add
rol
sub
imul
push
out
adc
dec
mov
or
xchg
mov
sbb
cmpsb
push
ret
adcl
icebp
pop
in
scas
pop
ljmp
jecxz
xor
fidivs
sub
psrlw
cmp
xor
dec
pop
push
pop
mov
mov
test
in
jl
mov
shlb
cmpsl
rcrl
ljmp
lods
xchg
dec
cmp
pop
push
shr
pop
cmc
out
std
testb
dec
cmp
push
mov
pop
add
sbb
loope
shll
or
xor
dec
clc
jnp
nop
fiaddl
xor
call
add
mov
inc
cmp
int3
lahf
bound
xor
andb
mov
rclb
cmp
test
cmp
adc
mov
out
outsl
bound
inc
sub
inc
inc
dec
mov
mov
fiaddl
outsl
jae
stos
mov
sub
xor
xor
jo
lods
adc
mov
add
mov
xor
cmp
xchg
scas
cmpsl
push
adc
push
cmp
add
mov
jge
js
stos
fcompl
push
or
xor
xor
rcrl
inc
cmp
ja
es
inc
cs
mov
mov
scas
xor
lods
dec
adc
out
rorl
int
gs
sbb
test
aad
cs
and
mov
dec
mov
cmp
xlat
jmp
subb
mov
dec
dec
and
aas
fxch
or
clc
aaa
jae
pop
jne
dec
jne
dec
mov
outsl
ret
int3
sbb
add
add
pop
push
xchg
or
in
cmp
pop
and
stc
mov
push
test
lahf
mov
mov
js
xchg
int
inc
adc
jp
imul
js
in
or
call
shlb
enter
mov
dec
inc
sbb
adc
sarl
jg
jmp
and
pop
shl
addr16
out
adc
divb
std
cld
mov
add
mov
xor
push
loope
sbb
sub
jae
enter
sbb
push
mov
nop
and
sbb
or
xor
mov
dec
in
aas
mov
cld
lcall
int
push
loope
or
jbe
mov
jne
jbe
les
and
push
cld
into
adc
xor
sub
xchg
dec
fs
inc
push
sahf
jae
loope
in
push
out
mov
dec
aas
ds
jne
inc
mov
cmp
sbb
pop
aas
xchg
mov
test
mov
or
push
loopne
fistps
or
popa
mov
jnp
inc
mov
movsl
clc
div
repz
xchg
std
loope
lahf
xchg
jmp
sub
sbb
add
cmp
dec
push
mov
int3
lea
inc
out
outsl
int
and
imul
mov
sub
mov
aam
aaa
in
es
sub
loopne
mov
cmp
xchg
rorl
jecxz
push
or
xor
add
and
sti
mov
pop
add
or
outsb
push
mov
add
mov
push
xor
aas
lret
shrb
cmc
aas
lcall
mov
adc
jmp
jmp
inc
or
out
cmp
push
subb
sbb
cmp
xchg
sub
xor
xor
xlat
imul
in
dec
lods
sarb
jecxz
jbe
sub
addl
repnz
xchg
fsubl
inc
mov
lcall
add
push
mov
mov
jl
and
push
imul
push
repz
xor
loope
jnp
out
neg
fxch
jle
xor
stos
xchg
addl
mov
sub
test
cmc
xor
into
and
dec
xchg
out
and
jbe
jmp
inc
add
addl
jns
pop
jecxz
mov
xchg
iret
iret
pop
push
movsb
mov
sbbb
lret
ret
jb
in
loope
aas
pop
js
sub
lods
mov
je
jae
fwait
inc
push
push
int
andl
mov
mull
imul
mov
cs
cli
dec
arpl
jge
mov
aas
std
mulb
mov
mov
leave
add
mov
sbb
fsub
lret
fst
movsb
int3
lds
xchg
push
and
mov
enter
mov
movsb
sbb
mov
in
enter
jmp
mov
fs
xchg
mov
add
xchg
sub
add
push
rcr
cmp
mov
pop
add
mov
jmp
sbb
xor
xchg
pushf
lea
enter
loopne
jge
cs
push
sub
fisttpll
cmpsb
out
gs
pop
mov
mov
add
xchg
mov
aaa
icebp
jne
mov
xchg
xor
test
xchg
pop
dec
iret
ljmp
ret
pop
test
pop
orb
sbb
or
popa
cld
cmp
pushf
negb
sub
ret
mov
adc
fcmovb
pop
push
test
iret
ror
sbb
sbbb
lea
aas
xor
mov
icebp
data16
xlat
je
fsubrs
ret
adcb
leave
icebp
inc
addr16
enter
pusha
dec
inc
ja
cmp
and
adc
pop
ss
not
xchg
xchg
imul
dec
push
int
xor
pusha
leave
hlt
add
mov
ret
jg
fisubrl
js
cwtl
inc
loop
push
ret
rolb
lods
cs
xor
js
cmp
lahf
fldcw
push
xor
icebp
test
mov
mov
ja
lock
cmp
mov
in
imul
int3
lcall
leave
addb
lods
call
ljmp
aad
jbe
pusha
xchg
nop
fwait
les
dec
rcrb
fadd
mov
popa
fiadds
push
add
aaa
adc
push
fldenv
mov
dec
andb
pusha
mov
jge
push
jbe
rorb
jns
add
fists
mov
fdivr
sbb
and
and
mov
stos
jl
test
ljmp
in
shll
lea
lods
push
cmp
rclb
adc
and
lcall
pop
dec
xor
shl
mov
adc
xchg
insb
xchg
push
lods
lds
sbb
adc
ja
jbe
cmp
ret
sti
sbb
fidivrs
mov
or
lds
ss
stc
imul
idivl
jl
xchg
ret
scas
dec
inc
jnp
lcall
in
int3
or
sub
pusha
adc
dec
out
movsl
and
mov
mov
adc
into
adc
inc
fisubl
sub
maskmovq
divl
mov
ss
es
jmp
cmp
cmp
lds
mov
in
mov
cmp
pop
pop
aas
std
or
pushf
xorb
sub
inc
mov
jno,pn
adc
test
and
inc
repnz
or
into
or
stos
in
ret
add
and
mov
xor
jecxz
addr16
push
jnp
outsb
outsl
popa
sub
xor
xor
and
pop
jne
in
sbb
dec
aam
mov
jbe
imul
mov
add
lcall
push
xor
dec
push
je
lcall
ljmp
imul
mov
ret
add
push
lods
xor
push
sbb
add
cmp
sti
push
mov
sbbb
jo
pcmpeqd
cmp
sahf
repnz
data16
xchg
or
xchg
nop
push
jne
stc
pushf
mov
popf
ja
or
sbbb
mov
push
mov
xchg
cmpsb
in
stc
or
pop
sbb
ljmp
rcr
mov
pop
sub
or
fistl
test
mov
push
arpl
mov
fisubl
enter
lret
xchg
jnp
cmp
lret
cmp
cld
inc
loopne
repz
jno
rcrl
sbb
sahf
loope
jle
push
aas
push
fwait
dec
mov
sub
add
lock
in
jmp
out
nop
sbb
jno
data16
ss
arpl
mov
mov
mov
mov
dec
mov
lock
outsb
les
nop
sbb
push
mov
cmp
cltd
icebp
jmp
mov
jp
test
shl
inc
mov
mov
enter
sub
xor
sarb
imul
jle
push
out
lea
cmpsl
push
dec
popa
dec
jno
sbb
pop
mov
aam
das
sar
jae
and
fwait
xorl
adc
jbe
mov
addl
repnz
fld
ja
ret
mov
dec
jnp
sbb
pop
rcrl
sbb
add
mov
lahf
aas
fcmove
ficompl
jl
mov
stos
rdtsc
in
pop
mov
push
cmp
in
mov
loop
sbb
data16
loope
aas
lock
mov
dec
cs
cs
add
dec
inc
dec
test
fdivrl
shlb
je
inc
push
mov
rorl
addl
jns
jl
call
rcrl
add
mov
lods
dec
push
aad
aam
das
mov
sbb
jp
push
add
aaa
aas
jle
dec
inc
pop
cmp
rcrb
stc
faddl
ja
push
sub
add
fs
rol
lahf
lods
data16
pop
mov
push
lea
out
sub
cltd
out
es
mov
mov
dec
mov
mov
fcom
and
test
ret
pop
and
int
cli
adc
or
xchg
jnp
lret
repz
in
adc
cmpl
aam
mov
push
stos
icebp
xchg
mov
ret
imul
cmp
aad
seto
fistpll
popf
sub
xchg
xchg
int3
jmp
ja
jmp
std
rolb
insb
insb
bound
fidivrs
adc
inc
adc
dec
jae,pt
push
inc
xor
ds
shl
ja
inc
xor
jb
or
and
jbe
mov
pop
lcall
lret
into
cltd
call
and
aam
xchg
xor
fs
pop
or
cmpw
shr
and
or
xor
aas
fsubp
cmp
inc
push
pop
in
inc
subl
les
mov
push
sbb
push
mov
dec
push
sbb
popa
es
add
loope
aas
lret
push
add
nop
mov
gs
dec
adc
mov
cltd
aam
pop
push
xor
cmp
add
add
jle
fs
xor
and
mov
es
mov
in
dec
ljmp
mov
cmpsb
mov
inc
xorb
fldl
pushf
push
test
jle
clc
cmc
loop
dec
clc
push
fsubl
xorb
std
xchg
sbb
dec
pop
lds
fnstenv
out
pop
imul
sub
iret
mov
es
lea
in
imul
jnp
stos
movsb
aas
test
mov
jb
mov
cmp
in
icebp
xor
cltd
loopne
aam
insb
xchg
add
pop
scas
ret
sbb
lret
clc
fists
sub
lds
add
lea
xchg
in
add
lcall
mov
fwait
ds
xor
das
sbb
adc
dec
adc
or
adc
ss
mov
leave
out
dec
xchg
jle
xchg
mov
pop
push
or
mov
jns
push
mov
shrl
faddl
fstpl
pop
xorb
sbb
gs
cs
dec
enter
xor
xorl
mov
pop
data16
shll
dec
pop
sub
test
mov
xor
addl
and
add
jo
je
xchg
or
push
cs
adc
or
fldt
jbe
cmc
pop
enter
dec
push
stc
pop
cmp
inc
xor
or
inc
xchg
mov
xor
ss
mov
xchg
mov
leave
fmul
xor
mov
cwtl
out
cmp
insl
iret
mov
clc
mov
shlb
or
gs
movsl
xchg
or
nop
add
sbb
xchg
je
xor
cmpsb
cwtl
sti
call
rcrl
bound
lahf
adc
into
push
xchg
jbe
jae
lea
or
ljmp
inc
int
pop
fisttps
ljmp
xchg
inc
cmp
or
jp
stos
dec
mov
sbb
je
cwtl
push
and
roll
arpl
mov
test
xchg
mov
imul
jg
cmp
sub
push
les
push
sub
in
lret
jmp
ret
jbe
fwait
inc
push
or
add
scas
inc
imul
adc
ja
and
std
jne
int
les
hlt
cs
jo
es
cltd
cwtl
and
pop
aaa
shr
aaa
add
mov
jne
push
data16
mov
stos
shlb
std
and
xlat
mov
lret
sbb
push
ret
mov
cmp
loope
mov
std
in
lock
mov
or
dec
sti
aas
dec
insb
aad
mov
push
mov
shr
sti
jmp
mov
sub
sub
cmpsl
and
clc
loope
pop
pop
push
push
ret
loopne
pop
add
fildll
xchg
cld
loope
fbld
shll
inc
idivl
insb
sbb
adc
xor
pushf
nop
mov
adc
adc
testb
add
mov
inc
xor
cmp
movsb
pop
into
sub
clc
xchg
xor
shrb
sbb
mov
mov
or
enter
mulb
lea
mov
adc
sbb
xchg
jp
int3
mov
mov
scas
aas
in
gs
mov
dec
test
xor
sub
ja
mov
rorl
adc
cmp
scas
adc
add
adc
adcb
bnd
in
xchg
adc
jns
lcall
inc
push
cli
pop
rorl
or
add
mov
jbe
xlat
sub
fcmovbe
cmp
in
das
sar
dec
or
les
out
scas
jae
jp
fisubs
jae
or
xchg
mov
adc
clc
sahf
and
push
xor
shrb
mov
dec
cmp
push
sbb
ss
enter
ds
or
push
and
mov
fmuls
movsl
cmp
xor
adc
or
push
mov
fwait
pop
add
mov
loopne
fildll
cwtl
mov
mov
gs
outsb
sbb
jo
lds
ja
lcall
daa
je
mov
inc
fs
cltd
push
inc
pusha
push
push
sub
push
mov
movsb
std
stos
test
scas
mov
sub
adc
mov
jne
arpl
xor
inc
add
push
inc
add
mov
dec
repnz
mov
sbb
jl
sysret
in
xchg
mov
ja
dec
icebp
xor
gs
pop
xor
mov
mov
fists
adc
call
test
xchg
push
xchg
xchg
ja
call
push
in
push
scas
cmpsb
or
fadd
subl
clc
les
fs
cli
negl
jo
outsb
subb
rorb
jl
sahf
adcl
mov
pop
adc
or
cwtl
and
clc
inc
dec
adc
sub
les
jg
out
push
jmp
and
scas
cmp
lods
push
lea
loopne
scas
jno
mov
out
shll
scas
xchg
or
test
mov
aam
cmc
add
es
lods
pop
movl
pop
mov
nop
dec
inc
cs
pop
mov
adc
cld
jle
ss
sti
jne
outsl
dec
scas
popa
enter
dec
call
mov
scas
inc
fsubrl
mov
pop
pop
pop
test
out
cmp
or
mov
nop
and
jns
hlt
out
sbb
jl
sbb
cwtl
ss
push
movsb
push
xchg
add
aaa
rclb
rorl
mov
xor
dec
aaa
push
cli
insb
pop
mov
sub
push
cltd
mov
xchg
flds
mov
dec
jecxz
fists
jecxz
inc
lock
lahf
rorl
mov
je
out
push
outsb
jne
push
pushl
int
jae
sarb
xor
pop
sub
xchg
cltd
mov
cs
cmc
ja
nop
rclb
int
push
and
pop
add
fwait
mulb
imul
lods
pop
mov
and
adc
jge
jo
les
icebp
mov
cmc
popf
and
inc
cmp
cmp
xchg
mov
stos
outsb
aas
dec
iret
lcall
xlat
sbb
mov
xchg
sub
sub
and
enter
fwait
packuswb
sbbb
sub
lods
pop
loop
mov
cli
add
jo
sbb
and
jge
cli
jae
jecxz
lock
fiaddl
out
int3
mov
pop
inc
adc
dec
or
sub
out
shrd
std
inc
fmul
cmp
or
xchg
mov
mov
out
sbb
shll
push
sbb
fistpll
imul
push
cmc
mov
push
pop
daa
xchg
fwait
fwait
adc
out
jae
mov
mov
pop
adc
jle
add
adc
and
jecxz
pushf
out
dec
je
icebp
insl
popf
sbb
lods
sub
jge
insl
in
sbb
mov
int
std
jge
insl
popf
sbb
lods
sub
jge
insl
in
sbb
mov
into
dec
in
jge
insl
pushf
sbb
lods
sub
je
imul
cmp
loope
jne
lds
sbb
sub
xlat
std
insl
lcall
rcl
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
inc
dec
push
pop
pusha
insl
jo
push
or
cmp
shlb
loopne
lock
orb
inc
dec
push
pop
pusha
insl
jo
add
xor
int
fstl
nop
popf
mov
dec
push
pop
pusha
insl
jo
add
xor
xchg
mov
xchg
call
enter
add
adc
add
inc
mov
repnz
cs
cmp
dec
or
sub
sub
push
lock
dec
in
dec
xchg
pop
std
lock
mov
and
jne
jg
test
mov
pop
fistpl
pop
inc
add
pop
neg
inc
int
fcompl
jmp
add
jb
mov
add
js
sub
or
sbb
shlb
and
js
popf
clc
jge
fdivs
mov
mov
jl
cmp
lock
or
lds
dec
daa
rcll
xchg
fbld
mov
add
fadds
dec
push
pop
pusha
insl
jo
add
xor
loopne
lock
orb
sti
push
dec
cmp
dec
pop
imul
aam
cmpl
fadds
and
xor
jl
and
adc
mov
or
enter
or
push
or
jno
add
adc
ror
fucom
in
lock
orb
mov
pusha
insl
jo
add
xor
loopne
lock
orb
mov
fildl
push
mov
cltd
jp
fldcw
lahf
mov
mulb
sub
inc
jp
scas
mov
push
outsb
mov
dec
stos
ja
mov
repz
xor
les
or
fs
push
xor
lret
jg
pop
dec
cmpl
fisttps
pop
lds
repz
ljmp
cmp
repnz
bnd
and
mov
mull
push
call
sub
call
jl
int3
shrb
jl
int
pop
fs
dec
push
mov
ds
les
cmpl
dec
dec
in
jbe
cmc
in
cs
arpl
fsubl
cmc
es
aaa
test
fisttps
jge
xchg
jle
popa
jmp
or
negl
sub
movsb
lcall
xchg
aad
fs
iret
xor
ret
cli
xchg
lret
or
cmp
push
mov
lret
pop
jmp
mov
dec
inc
push
xchg
sarb
pop
in
jge
sarl
and
add
mov
mov
sub
sahf
repz
stc
xchg
jno
jnp
jo
bound
pop
icebp
or
pusha
or
pushf
popf
aaa
jno
xchg
gs
inc
add
sub
daa
jecxz
pushf
inc
loop
add
ss
jne
sub
mov
push
lock
add
rcrl
movsl
adc
xchg
adc
out
popa
stos
nop
in
data16
pop
xor
cmp
loope
cmc
icebp
stc
bound
lcall
mov
test
arpl
jbe
cmpsl
outsl
sti
out
enter
xchg
inc
jmp
movsb
aam
mov
xor
mov
cmp
and
sbb
jbe
and
and
inc
ja
xchg
pop
sub
cltd
pop
fwait
sarl
push
fisttps
or
push
adc
aas
fisubl
cmpsl
push
mov
lea
shll
aaa
or
push
jp
and
or
fimull
gs
adc
cmpsb
leave
mov
test
inc
sub
mov
sti
data16
pop
cwtl
mov
jmp
cmp
pop
aam
data16
push
aad
mov
and
out
pop
nop
lds
adc
daa
bound
scas
mov
mov
mov
int3
jns
dec
ljmp
sbbb
pop
nop
les
jo,pt
jne
inc
jns
out
mov
pop
adc
or
ficompl
dec
jg
mov
sahf
push
or
bound
inc
jge
sub
sub
add
push
xor
out
fxch
stos
add
cmp
pshufw
aad
cmp
or
mov
push
push
sti
nop
sub
pop
push
pop
xchg
loope
push
mov
lods
pop
inc
imul
mov
mov
pusha
add
or
xchg
adc
js
cltd
jge
pop
cmpsb
fisubl
ja
lods
xchg
cmp
sbb
ret
cmc
scas
dec
pop
fmul
rorb
roll
arpl
test
int3
arpl
stc
sbb
add
mov
or
sbb
cmpsb
cmp
xlat
movsb
cmpsl
mov
inc
sarl
mov
ret
pop
dec
test
mov
cs
mov
test
inc
ss
js
push
push
gs
loope
push
test
xor
popa
rcr
mov
in
and
or
fistpll
push
cmp
mov
sub
pop
sahf
lret
jle
popa
or
arpl
dec
sub
dec
dec
push
sbbb
push
aaa
xchg
loopne
push
inc
jne
rcrb
mov
mov
sarl
leave
inc
sub
or
xchg
xchg
rolb
imul
and
jmp
roll
int3
cmpsl
sbbl
fwait
popa
out
in
sub
sub
cmp
adc
shrl
sub
push
push
mov
push
notl
or
and
add
jnp
and
add
mov
inc
pop
cmp
add
xchg
mov
cmp
xlat
mov
mov
mov
test
mov
leave
pop
add
sbbl
outsl
test
push
dec
xor
in
xchg
cmc
xchg
jae
lcall
addr16
dec
cli
ja
sub
push
mov
fsubl
fcomi
dec
and
dec
ja
daa
movsb
sub
xor
push
dec
out
pop
call
lds
push
and
jge
scas
or
cmp
adc
mov
and
sub
sbb
lcall
push
dec
lea
lcall
sbb
sub
sti
ds
mov
jle
ret
mov
pop
cltd
inc
jns
imul
out
sub
mov
mov
das
lret
mov
fucomi
cmpsl
pop
outsl
repz
jno
xchg
and
mov
loop
outsb
sub
cltd
loope
jle
insb
or
jo
add
xchg
testb
movsl
testl
lcall
in
dec
cs
enter
imul
pop
sbb
jns
hlt
push
adc
mov
adc
repnz
test
notb
sub
sub
in
ss
ds
lea
testl
imulb
jo
push
xor
dec
scas
jns
cs
inc
push
aad
push
fistl
int
dec
movsl
les
jp
shll
pop
inc
dec
sbb
gs
sub
divb
lods
fcoms
push
and
push
int3
mov
test
jae
cld
jp
mov
and
xchg
sbb
cmc
shll
mov
loop
mov
popa
adc
in
outsb
incb
dec
repnz
sub
mov
shlb
add
jmp
ret
in
xchg
or
loop
sbb
jb
sbb
sbb
stc
sahf
gs
mov
inc
pop
cmp
outsl
pop
dec
cmp
les
sarl
aad
enter
aam
in
or
lahf
pop
cmp
inc
rcrl
int3
pop
popl
push
mov
loopne
jg
jmp
dec
std
testb
xor
dec
into
sub
cli
icebp
xchg
stos
popa
cmc
arpl
pop
ret
pop
pop
and
push
stos
mov
mov
pop
fisubrl
mov
inc
je
adc
lock
fwait
lods
stc
cmp
call
sub
or
popl
sahf
mov
push
xchg
hlt
jmp
stos
or
int3
jne
pop
inc
inc
sbb
adc
mov
sbb
inc
jno
out
jb
or
push
ss
int3
stos
out
call
push
dec
arpl
stos
add
inc
pop
andb
lcall
pushf
mov
adc
xchg
nop
mov
pop
cmp
add
add
sbb
push
imul
xor
out
pop
icebp
lahf
test
cmpsb
mov
ror
or
cs
xchg
jl
fidivrs
push
inc
dec
insb
cmp
push
nop
imul
xorl
out
sti
scas
mov
repnz
mov
ds
ljmp
loopne
popa
add
lcall
int
cmp
push
push
shl
dec
imul
sbb
shll
xchg
dec
aas
sub
lcall
push
ljmp
inc
leave
sub
mov
movsl
sbb
mov
xchg
cmpb
dec
inc
pop
dec
cltd
pop
icebp
mov
fsubl
dec
cmp
push
jns
lcall
xor
std
push
xchg
jnp
push
shrb
sub
jp
mov
out
cmp
dec
arpl
js
ja
mov
xor
push
jnp
icebp
in
mov
push
mov
adc
into
sbbb
fmul
lods
mov
sbb
inc
int
popa
jp
repnz
out
cmpsb
int
xchg
pop
int
sub
or
dec
xchg
add
subb
dec
test
ds
push
push
pop
sbbl
imul
loope
sbb
adc
mov
shlb
mov
push
stos
and
je
out
dec
and
arpl
notb
lret
xor
stos
int
add
enter
outsl
fsubp
lret
sub
push
int3
pusha
ds
arpl
and
sub
push
inc
push
push
push
xchg
dec
shll
adc
insb
cld
test
push
cmpsb
ror
es
and
pop
sub
cltd
cltd
lcall
push
mov
in
cmp
inc
cmpsl
xchg
and
vdivss
jge
cmpsb
and
jns
cmc
jae
or
in
and
jle
mov
jnp
movb
ja
xlat
cmp
aad
leave
pusha
cltd
cmp
pop
xchg
adc
cmp
test
inc
pushf
call
sbb
push
sub
fldt
push
jo
or
xchg
cld
shll
xchg
jge
scas
pop
cmp
mov
jno
adc
sti
and
test
dec
mov
ret
push
sbb
dec
seta
test
test
or
popa
es
add
es
rcr
lret
push
xchg
mov
lcall
mov
xchg
mov
mov
xor
outsb
dec
mov
roll
cltd
leave
dec
sbb
aam
js
scas
xchg
fmull
aaa
sub
or
dec
sbb
sti
pop
sbb
mov
and
cs
cwtl
or
lahf
test
out
into
fs
insl
inc
jnp
cmpsl
cli
call
push
mov
xor
dec
repnz
stos
mov
push
movsb
fimuls
pop
add
pop
rolb
jmp
push
xlat
mov
cmpsl
xor
ss
inc
push
dec
push
dec
cmpsl
lds
pop
test
nop
sbb
sub
shlb
mov
and
pop
pop
aam
daa
mov
inc
pop
cld
loope
notb
cmp
out
lods
xorb
aad
loopne
sub
lds
movsb
xchg
enter
out
lcall
pop
mov
out
stos
fldenv
dec
add
or
arpl
popa
push
fstl
push
sbb
out
add
sub
divb
mov
mov
mov
arpl
ljmp
add
mov
test
mov
jg
imul
dec
jns
mov
js
inc
imul
fnstsw
lea
ror
adcl
mov
hlt
or
movsb
movsl
mov
ss
ss
aas
adc
jg
cld
nop
xchg
stos
test
jmp
pop
adc
pop
xchg
or
or
arpl
in
in
stc
shll
sub
mov
or
ss
into
in
cld
gs
out
out
jecxz
mov
mov
jns
xor
mov
imul
cld
ret
cmp
pusha
rcl
xor
jb
adc
outsl
mov
ss
cmp
out
stos
ficomps
mov
dec
mov
pop
inc
mov
iret
call
xor
jb
mov
pop
repnz
icebp
inc
pop
ja
in
and
jnp
mov
testb
ljmp
aam
mov
movsl
fisttps
sbb
mov
fisubrs
vmread
bound
pop
jge
fnstcw
jae
xchg
mov
sti
scas
mov
insl
outsb
out
xchg
dec
lret
aaa
pop
cmp
and
cmp
jecxz
int3
pop
sbb
jno
mov
jae
cmc
add
mull
mov
xor
and
sub
push
rclb
jbe
into
outsl
out
insb
cmp
mov
int3
sbb
lret
inc
roll
std
ss
test
mov
shll
in
subb
mov
aam
mov
sbb
and
fcomp
jo
cwtl
neg
jnp
shr
mov
mov
dec
into
seto
jne
adc
cmpl
push
push
rolb
hlt
dec
aaa
out
scas
sbb
test
les
dec
ret
pushl
ljmp
clc
cmp
adc
and
push
inc
fimull
inc
push
xchg
int
fdivs
lds
add
ret
pop
inc
xchg
push
aaa
cmp
mov
aam
sbb
mov
xchg
cli
mov
mov
adc
xor
mov
dec
or
mov
sbb
push
jno
repz
leave
xor
and
cltd
ficoms
call
push
in
aam
fimull
lods
jne
xchg
ss
pop
pop
xor
add
leave
add
into
mulb
out
xchg
mov
test
inc
nop
idiv
xchg
rolb
fs
call
out
insb
pop
scas
sub
or
cmpl
cli
mov
mov
cli
and
add
fdivrl
add
and
lods
loop
je
mov
shl
mov
imul
sub
aad
cmp
and
pop
data16
lahf
push
and
pop
pop
mov
mov
daa
mov
jb
adc
imul
adc
lahf
mov
add
jmp
jne
add
mov
repnz
and
pop
mov
pop
cmp
scas
out
lret
mov
shr
jmp
mov
pop
sbb
or
sub
add
notb
shrb
push
sbb
scas
imulb
sub
ljmp
add
cmpsl
push
inc
rcrb
test
daa
jno
push
jmp
push
and
or
sbb
jmp
xchg
rcll
imul
fcom
adc
aas
bound
push
imul
and
push
cld
leave
push
int3
dec
jl
out
mov
sbb
les
packsswb
out
jmp
jg
jl
adc
push
push
movsl
pop
leave
in
vcvttss2si
add
xchg
daa
les
push
inc
push
and
dec
rcrb
das
sbb
fstpt
int3
fdivrl
push
aaa
jno
mov
test
push
je
push
mov
ljmp
mov
mov
int3
xchg
in
repnz
fisttpl
or
repz
mov
sub
dec
push
loop
dec
mov
add
add
inc
mov
sbb
mov
sarl
rcll
jae
push
fildl
xorb
add
stc
scas
cltd
mov
jbe
mov
mov
pop
in
negb
int
outsl
dec
add
outsb
loopne
sti
fnsave
lret
fcmovu
sbb
pop
pusha
iret
push
popf
data16
add
xlat
stos
dec
add
test
dec
or
dec
jp
mov
test
xor
sub
jae
pop
mov
mov
push
out
fcoml
mov
xlat
popa
jnp
and
mov
mov
sbb
push
daa
mov
ds
daa
fcomip
loopne
push
cmp
cli
scas
xor
aas
push
push
scas
test
nop
xchg
cltd
ljmp
pop
cwtl
fsubl
icebp
xorb
out
sbb
mull
mov
mov
sbb
cwtl
adc
mov
cmp
fdiv
lock
sti
pushl
stc
push
loopne
mov
dec
dec
push
fwait
dec
inc
xacquire
jge
cli
xchg
inc
sti
nop
or
mov
imul
add
insl
in
out
adc
sbb
push
dec
jecxz
jbe
inc
mov
mov
loope
or
mov
mov
aam
lahf
sbb
xor
addr16
cli
outsb
mov
xchg
dec
sbb
outsl
pop
pop
sbb
mov
add
ja
mov
sbb
stc
add
sbb
pop
hlt
jne,pn
aam
mov
ficomps
add
adc
push
cltd
and
or
inc
lock
test
add
leave
jg
pop
jle
rclb
ljmp
enter
inc
add
and
lock
test
sbb
mov
addr16
out
in
clc
pop
shrl
arpl
in
xchg
mov
movsb
movb
das
aam
add
push
dec
sbb
loope
jo
cmp
mov
into
imul
or
dec
jns
xor
lahf
loop
xor
sbb
mov
cltd
push
sub
lds
pop
imul
mov
xchg
insb
jmp
jbe
and
into
lods
adc
push
ljmp
push
lret
lds
pop
inc
mov
into
sub
add
xor
inc
cmp
mov
dec
inc
and
movsb
sbb
fstp
rcrb
adc
sarb
jmp
shlb
push
stos
je
pop
clc
mov
stc
stos
fs
pop
call
in
movsl
mov
mov
adc
xor
sbb
in
insb
enter
pop
push
stos
pop
imul
jae
push
adc
jmp
add
rol
daa
repz
sbb
cltd
push
sbb
xchg
scas
or
mov
mov
jb
inc
es
pop
mov
shlb
dec
bsf
rcrb
test
inc
jmp
ljmp
cmpsl
insl
lods
pop
fildl
sub
mov
and
mov
pusha
call
add
add
dec
mov
cmp
mov
decb
dec
adc
adc
shrb
fnstsw
sub
into
in
lock
lret
ja
out
or
sbb
pop
pop
push
lret
mov
adc
jge
out
leave
jae
jbe
rcrl
push
or
minps
add
or
mov
cld
movsl
push
sbb
push
cli
xchg
sbb
jbe
xchg
ljmp
mov
adc
sub
adc
insl
lret
enter
cmp
pop
jge
movsl
sbb
sbb
push
mov
dec
cmp
mov
das
mov
shrl
sub
outsl
xor
ret
js
lds
inc
dec
aad
movsb
jnp
stos
loope
pop
mov
mov
pop
iret
xor
or
or
out
jo
stc
call
mov
fisubs
cmp
xor
dec
ret
fistpl
push
pop
jns
movsb
in
jp
popa
mov
es
pop
cltd
scas
jbe
ficoml
pusha
mov
add
push
push
stos
lcall
inc
lcall
lods
into
jnp
sub
dec
push
cli
popl
popf
sub
xchg
sub
pop
mov
sub
mov
cmp
dec
mov
sbb
mov
add
lret
pop
add
std
jl
ljmp
call
and
addr16
lcall
and
ds
mov
jb
jo
popa
xor
jl
and
repnz
test
ret
and
jle
daa
jns
imul
in
jge
mov
faddl
xorb
cmp
xor
js
cmp
cli
data16
xchg
jg
cs
imul
or
rol
mov
inc
cwtl
fwait
les
xchg
fimull
or
jnp
lods
jne
push
pop
enter
scas
daa
mov
or
xor
xchg
pop
sub
in
mov
jne
pop
mov
pop
cmc
scas
fcmove
int3
sbb
cmpsl
rclb
lret
adc
out
dec
or
ljmp
clc
jo
xchg
mov
mov
fildll
scas
rcrb
jns
sbb
cmp
pop
mov
dec
push
push
mov
test
into
mov
xor
jae
mov
pop
mov
and
mov
out
out
and
push
ss
vpcmov
movw
pop
sub
mov
lods
lcall
pop
push
jmp
xchg
lods
imull
or
or
inc
xor
sub
loop
int3
into
outsb
fnstsw
pop
shlb
xor
pop
adc
sbbb
sub
inc
mov
jp
xchg
add
pop
pop
mov
bound
and
and
insl
inc
pop
push
xor
addr16
outsb
in
push
mov
cmp
testb
cwtl
mov
push
xchg
out
or
or
fld
mov
clc
dec
pop
repnz
aam
xor
scas
xor
mul
es
stc
inc
clc
bound
scas
test
push
cmp
or
fcoms
or
mov
loop
pushf
stos
iret
xlat
mov
aad
je
out
push
mov
mov
sub
add
imul
test
shll
or
jnp
dec
repz
mov
in
int3
cmpsb
push
jg
aad
jnp
hlt
loope
mov
xchg
outsl
orl
or
add
int
not
cld
adc
cmpsb
or
in
push
mov
xchg
xor
test
repz
pop
shl
and
roll
cli
push
sbb
lahf
fsubrs
or
or
jae
cwtl
pop
mov
rclb
and
push
sbb
arpl
sub
push
inc
mov
les
out
mov
sub
mov
xchg
push
ja
rorl
ss
adc
mov
cmc
push
out
inc
add
addr16
sub
sub
imul
aam
loopne
clc
jo
xchg
xor
dec
sti
ficoml
loope
in
fwait
sub
insl
jo
add
xor
loopne
lock
orb
mov
pusha
insl
jo
add
xor
loopne
lock
orb
mov
pusha
insl
jo
add
xor
loopne
lock
orb
mov
pusha
insl
jo
add
xor
ror
ja
in
lock
add
dec
inc
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
sbb
lock
sbb
pop
mov
in
xlat
bound
and
rclb
loopne
nop
pop
andb
aaa
mov
adcl
xchg
shlb
leave
dec
sarb
stc
push
mov
cwtl
aas
test
mov
mov
fisubrl
data16
aaa
rclb
sub
pop
adc
into
popa
cmp
das
lret
je,pn
ss
imul
mov
andl
call
sub
shrb
test
pusha
cli
pusha
cmp
cmp
das
push
inc
cs
mov
dec
push
xorb
sub
js
rolb
or
addb
lock
shlb
mov
inc
iret
call
mov
lahf
add
jmp
mov
test
lsl
push
mov
jl
loopne
mov
repnz
xchg
lea
xor
cmpsl
fists
sub
cli
sub
mov
sbb
jo
inc
xchg
iret
mov
xchg
push
xlat
loopnew
cli
pop
nop
or
mov
ljmp
jns
or
inc
xor
xor
add
adc
arpl
jp
and
cmp
cmp
jge
push
ret
dec
inc
test
rolb
jne
jae
jns
dec
aam
int3
lds
xlat
and
in
xlat
pop
mov
cs
movsl
add
pop
andb
aaa
mov
out
mull
adc
and
push
shlb
loopne
nop
pop
andb
aaa
mov
out
mull
adc
and
xchg
inc
rcrl
repz
outsl
dec
jmp
cli
shrb
sub
sar
outsl
lcall
stos
roll
jae
pop
cld
scas
ja
outsl
sarl
dec
subb
cmpsb
enter
insl
dec
dec
cmp
arpl
fisttps
rorl
daa
movl
mov
xor
mov
inc
lcall
or
ja
jns
mov
adc
fucomi
scas
push
sbb
xchg
addr16
lods
das
or
std
push
and
push
cmp
add
loop
imul
je
push
mov
movq
and
push
xor
out
mov
fldl
sbb
jmp
and
or
cmp
lcall
adc
push
jl
dec
ficompl
cmpsl
mov
je
outsl
mov
or
mov
inc
jo
cmpsb
lahf
lds
rorl
imul
push
pop
ficoml
scas
mov
or
jecxz
add
push
pop
pop
inc
add
and
push
test
out
jae
mov
cmp
or
xchg
pusha
jo
idivl
xchg
nop
data16
mov
cmp
push
pop
cmp
sub
fs
mov
mov
sahf
js
movsb
inc
addb
cmpsl
popf
popa
pusha
cmc
cwtl
jnp
popf
or
popf
cmp
movsl
shll
fsub
inc
adc
jp
fmul
lods
jl
or
repnz
add
or
xchg
dec
jl
mov
sub
adc
fwait
js
fisttpll
stos
cmp
inc
ret
mov
adc
cmp
aas
or
sbb
adc
jmp
xor
pushf
mov
add
movsb
pop
mov
fsubs
push
fs
outsl
pushf
fstpt
push
dec
fiaddl
aas
and
pop
pop
sbb
shr
addr16
adc
out
and
pop
dec
xor
or
mov
mov
js
loope
mov
push
out
push
mov
mov
mov
xor
jmp
lea
cmpsl
loopne
adc
xchg
adc
cmp
add
imul
test
sub
adc
cmp
pop
xor
addr16
js
subb
push
lea
rolb
test
mov
aam
int3
hlt
adc
fnstenv
mov
pop
dec
ficompl
ja
mov
lods
cmpsb
leave
scas
clc
sub
mov
fiadds
xor
test
pop
push
leave
into
subb
loopne
sbb
jg
jb
pcmpeqd
and
in
sub
mov
sub
xchg
ja
add
push
push
pop
jmp
daa
xor
fwait
push
cmp
sbb
pusha
pop
inc
and
push
leave
popa
fs
fwait
and
xchg
movsl
jbe
mov
dec
sbb
or
pop
or
mov
pop
lock
inc
lea
repz
xor
sub
sub
out
icebp
sti
jnp
ja
div
lods
daa
dec
scas
fs
mov
aam
mov
push
xchg
stos
repz
ja
xchg
pop
int
pop
movsb
popf
pop
or
jo
int3
fldcw
jmp
push
insl
xchg
xor
xlat
jne
movsl
mov
das
xor
or
add
out
lods
ret
lods
sbb
ror
pop
movsl
inc
mov
push
mov
sub
or
pop
push
add
idiv
pusha
or
inc
mov
jmp
cmp
test
push
mov
insb
shll
mov
lds
xchg
mov
outsl
push
sbb
xchg
pop
cs
sbb
lods
jbe
and
sbb
adc
repnz
inc
xchg
shlb
fimull
or
inc
and
sbb
iret
pushf
cmp
mov
addb
call
mov
cmp
mov
jno
jo
insb
jne
sub
mov
cmc
outsl
mov
inc
xchg
cli
cmp
loopne
out
adc
imul
jp
fsubp
into
mov
jns
into
pop
pop
jmp
iret
mov
js
cli
cmp
dec
or
xchg
bnd
xlat
mov
loope
sbb
cld
xor
push
mov
in
mov
mov
pop
sbb
jne
cmpsb
cmp
mov
mov
mov
gs
jge
ja
mov
cmc
sahf
stos
test
push
shlb
in
pop
shll
xor
inc
lahf
call
inc
dec
aad
pop
ljmp
fstps
jb
xchg
sub
dec
mov
xchg
and
in
pop
lahf
push
insl
repz
inc
sbb
loop
in
aad
repnz
cmpsl
imul
into
lcall
repz
mov
push
xchg
stos
test
in
aad
jne
ja
les
push
rcrl
repnz
mov
pop
dec
imul
sbb
lcall
sbb
out
roll
pop
mov
add
cwtl
xchg
in
sbb
mov
lds
mov
ljmp
jle
xchg
xchg
mov
daa
push
xor
sbb
notrack
jns
outsl
adc
sub
andl
mov
popf
aaa
loope
adc
adc
sbb
xchg
pop
push
aad
pop
mov
or
push
lret
pop
dec
frstor
mov
dec
inc
or
fcoms
std
lret
addr16
loope
mov
dec
mov
cmpsl
xchg
mov
cmp
repz
inc
jp
lods
fstpt
roll
fisubs
adc
rcr
mov
outsl
xchg
out
daa
xchg
in
aam
ror
iret
dec
mov
jmp
push
mov
inc
xor
out
out
adc
mov
ret
xchg
loopne
add
ret
adc
addr16
in
fs
mov
push
xchg
mov
adc
fwait
imul
movsl
adc
out
popf
and
hlt
push
decl
hlt
rolb
pop
xor
dec
je
and
pop
stos
jl
lahf
fimull
mov
lcall
pop
lret
loopne
adc
inc
xchg
ret
in
jbe
imul
data16
sub
lea
xor
push
insb
xchg
cld
ljmp
jg
xor
loope
cmc
sub
or
jbe
pop
inc
lods
push
sahf
and
outsl
ljmp
nop
mov
clc
dec
fimuls
adc
add
or
dec
mov
ds
in
add
outsb
in
into
movl
cs
pop
mov
fildl
stos
sbb
repnz
adc
icebp
push
out
mov
pop
ja
loop
lods
imul
inc
xchg
sarl
arpl
xlat
aas
ljmp
cli
sti
sbb
xchg
push
dec
loop
and
jmp
negb
mov
mov
icebp
cmpsl
clc
pop
xchg
jmp
cmp
mov
sub
fidivs
lods
jg
cmp
popa
fwait
and
mov
xor
lret
mov
inc
daa
sub
xchg
add
jmp
arpl
pop
lcall
or
dec
push
jmp
test
leave
pop
popf
pushf
call
pop
mov
mov
js
pop
shlb
data16
jno
nop
ret
jg
dec
rcll
arpl
sub
aaa
movsb
lahf
pop
pop
pop
bound
shll
lods
sbb
pusha
repz
test
and
lods
dec
cmp
and
push
sbb
pop
test
inc
mov
jmp
std
das
repz
jge
lods
sub
pop
imul
insb
jg
mov
sbb
rorl
xor
mov
jne
pop
popf
rcr
lret
jbe
sbb
dec
lds
pop
cmp
test
jae
sbb
bound
sub
xor
mov
xor
mov
cs
lcall
lea
adc
push
sub
jno
sti
adc
popf
in
popf
scas
leave
jge
out
ja
jg
pop
pop
jmp
sbb
sub
push
stos
pop
call
mov
je
sbb
sbb
jnp
dec
hlt
inc
daa
mov
jne
in
inc
or
push
ficoms
xor
stos
jae
leave
inc
inc
cmp
sbbl
dec
scas
mov
clc
pop
or
push
fildl
rcl
xchg
cmp
aam
scas
sub
sarb
and
mov
test
and
push
hlt
sti
mov
or
bsf
cmp
adc
xchg
inc
push
hlt
ret
push
jg
clc
iret
xor
dec
outsl
es
sub
mov
and
push
pop
sahf
push
pop
repnz
or
or
sbb
dec
mov
cmp
pop
sub
lock
adc
adc
enter
push
mov
jge
addr16
stc
imul
mov
jo
or
orb
js
xchg
add
mov
repnz
adc
sbb
shl
std
fistps
xor
js
lret
pop
mov
bound
dec
inc
push
call
sub
mov
test
scas
out
xor
insb
add
ret
cs
mov
mov
sub
mov
lret
push
add
xor
or
bound
sbb
call
or
js
mov
fucom
cmp
dec
jns
subb
imul
out
repz
into
adc
mov
mov
pushf
ja
movsb
cmp
mov
xor
je
ds
pop
jne
lea
dec
cmp
pop
dec
hlt
dec
push
jns
inc
int
sti
outsl
adc
add
and
dec
jne
in
fadds
ss
inc
lods
push
fcoms
xor
cmp
fisubrs
aad
sbb
bndldx
sbbb
inc
in
hlt
loope
and
int3
movsb
inc
or
adc
add
pop
lock
imul
inc
cmc
notl
jp
cmp
in
xchg
jle
push
jl
mov
outsb
shl
xchg
cmp
in
pop
or
jo
rcl
jle
pop
cwtd
jecxz
imul
sbb
cmp
cmp
mov
jecxz
mov
lods
bound
stc
rorl
fwait
xchg
xchg
cmc
fisubrs
out
dec
in
xor
test
xchg
addb
xchg
rep
sub
cmp
and
jmp
push
bound
lea
push
test
gs
mov
cwtl
add
push
mov
xchg
clc
cmp
sti
outsb
jg
add
mov
loope
jmp
repnz
mov
movsl
sbb
in
mov
nop
mov
movsb
adc
cmp
mov
leave
sahf
add
mov
add
pushw
popf
pop
and
jp
dec
arpl
fsubl
fsubrp
sbb
push
decb
addr16
fs
cmp
test
outsl
fsubrs
mov
inc
scas
outsb
out
jg
sub
mov
int
sub
stc
adc
mov
push
das
fadds
out
sub
daa
sbb
pop
push
xchg
and
jno
lods
lock
jmp
inc
push
adc
sub
xor
lret
imul
test
pop
fwait
mov
lock
pop
sbb
clc
int3
jge
enter
xchg
pop
mov
mov
cmp
pop
mov
clc
xorb
xchg
pusha
repnz
int3
cmpsl
adc
mov
mov
cmp
cli
inc
cltd
mov
bound
or
jmp
xchg
push
ja
call
jmp
pushf
lahf
sub
mov
lods
adc
pop
inc
xchg
sbb
popl
out
ja
mov
into
sbb
sarl
dec
sub
aam
ret
jmp
jnp
lods
mov
cmpsl
push
sbb
shlb
sub
xchg
lds
pusha
fldl
adc
xchg
loop
rolb
push
test
xor
sahf
ficoms
add
xchg
outsb
mov
xorl
push
mov
mov
xchg
leave
repz
mov
xchg
inc
ss
fmull
std
xlat
or
lea
sahf
xchg
iret
cmc
aam
xchg
mov
adc
mov
popf
mov
sub
add
sbb
lds
fbstp
and
imul
daa
scas
or
test
or
or
pop
xor
divl
cmp
ds
push
in
jl
ret
ret
push
ret
sarb
sti
scas
sbb
arpl
inc
push
mov
pop
lock
out
mov
cmp
cmpsl
mov
fs
pop
cmp
stc
mov
in
pop
fcomip
sarl
insl
movsl
jne
shl
out
gs
pop
jbe
or
dec
jns
sub
push
dec
and
mov
test
stos
popa
sbb
test
sti
jne
inc
negb
dec
pop
in
sarb
aaa
pushf
push
add
jne
mov
pop
sbb
iret
scas
pop
or
sub
fidivrs
push
pop
sub
rorl
ficompl
rcll
push
hlt
int
insb
sti
out
mov
mov
test
push
repz
cmp
xor
mov
outsb
push
mov
cmp
pop
lods
xchg
mov
std
jmp
sub
push
movsb
add
lret
xor
pop
inc
mov
mov
cmp
popf
hlt
xchg
cmp
adc
cmpl
xor
dec
mov
lcall
pop
data16
aas
fldenv
cmpsb
push
daa
iret
movsb
adc
in
jne
int
xor
push
ret
inc
jle
or
add
pop
js
js
pusha
push
xchg
je
cmpsl
test
mov
popf
and
out
stos
outsl
pop
shl
es
adc
out
xchg
js
aaa
mov
and
pop
mov
outsb
inc
ja
sub
in
pop
out
fs
icebp
xor
mov
ds
lock
int3
lds
lock
and
data16
arpl
frstor
ret
popa
movsl
xor
jle
cmpsb
push
cmpsb
adc
jge
mov
pop
sti
sub
jmp
adc
lds
in
or
in
loop
cmp
out
inc
and
xchg
mov
popf
xor
adc
ss
nop
lret
call
pop
ljmp
mov
add
sub
xchg
jmp
js
aam
jb
push
xchg
cli
daa
lcall
pop
cmpsl
pushf
mov
loope
pop
mov
adc
xchg
inc
add
pop
xor
jnp
dec
mov
lods
shl
dec
idivl
bound
ss
mov
andl
test
fstps
cmpsb
xor
rol
pusha
cmpsb
je
mov
cmp
lods
push
aaa
sbb
sub
push
lods
and
sub
jecxz
sub
jbe
movsl
out
mov
xor
cmc
sti
in
jbe
jnp
outsl
or
cmp
insb
ficomps
mov
inc
xchg
lods
cmp
inc
sbb
daa
movb
sub
negb
stc
xchg
pop
xchg
xorb
rcrl
and
mov
fwait
sub
into
test
fisttpll
mov
jg
cmp
dec
push
addb
push
lea
je
push
dec
mov
jp
adc
loopne
cli
xlat
cmp
jecxz
cld
ljmp
cwtl
es
imul
lods
mov
or
sbb
sbb
leave
sti
or
push
jg
sahf
sbb
dec
adc
cs
jg
xor
rol
xor
adc
clc
jle
mov
jle
fcmovnb
pand
sbb
test
lcall
push
loope
jecxz
push
adc
pushf
shrb
inc
pop
xchg
push
jae
idivl
sub
jo
pop
pusha
out
add
sarl
inc
push
inc
sbb
sti
aam
push
in
test
adc
mov
mov
jnp
inc
out
in
mov
adc
xor
sbb
out
push
cmpsb
rcrb
enter
clc
sub
loopne
xchg
push
mov
inc
in
stos
or
dec
mov
outsl
mov
jbe
mov
insb
jo
jp
pop
data16
pop
dec
negl
mov
push
push
test
add
sub
dec
imul
jbe
xor
cmp
popf
leave
enter
xchg
nop
sbb
in
loop
inc
clc
inc
push
sbb
jg
dec
repnz
test
leave
jge
mov
jnp
in
pop
fisttps
jl
add
sbb
arpl
adc
mov
sub
cwtl
push
sub
fdivs
aas
inc
push
cwtl
loop
cmp
and
dec
sub
mov
outsl
loopne
sbb
jns
jns
mov
jmp
push
adc
adc
cmpsb
filds
adc
cmpsl
mov
mov
fcomps
push
insl
or
jle
add
mov
mov
ljmp
sbb
pop
rsm
mov
add
sub
cmpsb
sbb
sbb
jle
es
imul
xlat
push
in
insl
xor
daa
pop
divl
rcr
cmp
div
dec
fwait
xchg
subl
mov
adc
icebp
dec
sbb
jg
xchg
sub
xchg
inc
xorl
jne
sub
mov
mov
iret
mov
popa
cmpsl
outsl
mov
cmp
push
cld
push
add
push
in
jg
push
enter
dec
stc
imul
xchg
sbb
stos
sbb
push
ja
sub
adc
outsb
imul
jne
mov
ds
and
dec
pop
in
vmovq
push
xor
inc
jecxz
insb
mov
addl
inc
icebp
data16
push
add
push
aas
stos
dec
add
or
outsl
cmpsl
lret
and
pop
push
bound
adc
dec
cld
mov
jp
out
xchg
test
fwait
std
mov
rolb
aaa
add
mov
jnp
stos
and
pop
push
jae
jmp
jl
push
and
mov
out
shll
lods
mov
jmp
push
mov
inc
stos
cmp
insb
insb
push
xlat
jmp
les
push
sub
mov
jo
and
and
imul
add
imul
jp
sub
das
jae
dec
dec
pushf
popf
pop
sbb
into
dec
arpl
mov
cmpsl
cli
in
pop
and
mov
mov
cmp
cmp
mov
jecxz
lret
inc
jno
push
stos
inc
idivl
adc
or
test
xor
leave
mov
cmpsb
int
or
into
xor
pop
nop
js
jle
dec
mov
dec
jnp
sub
mov
xchg
xchg
adc
sarb
mov
addr16
fmul
cmc
dec
test
pop
push
aas
leave
xor
dec
data16
mov
push
sbb
imul
fcmovnbe
sub
loopne
inc
sub
adc
ret
pop
jns
insl
adc
and
filds
sbb
xchg
ss
mov
cmp
or
in
push
push
cmp
loop
inc
je
push
sub
mov
loop
adc
stos
push
rsm
mov
sub
sbb
rolb
add
addr16
xchg
insb
mov
test
xlat
daa
lock
fbld
stc
daa
popa
lcall
aaa
and
sub
xchg
cmpsl
and
cmp
cmp
mov
mov
cld
out
jns
push
dec
xor
cmp
pop
xor
repnz
icebp
mov
adc
test
aaa
xchg
push
inc
jl
mov
pop
inc
pop
stos
push
push
mov
repnz
lahf
call
test
shll
movlps
aas
push
add
sbb
lahf
jl
pop
xchg
pop
insl
sbb
ss
sti
mov
popa
inc
ss
insb
sub
sbb
loopne
decl
xchg
push
cld
andb
mov
sub
leave
das
sbb
mov
dec
pop
dec
stos
and
ret
stc
add
xchg
loopne
sbb
push
or
push
lret
std
les
and
out
adc
sub
ror
lods
test
adcl
inc
enter
pop
or
mov
jmp
sti
sti
adc
inc
vmovhps
ja
jns
xor
data16
dec
sbb
insb
filds
jbe
fildll
xor
push
push
stos
es
and
repz
fwait
stos
mov
adc
cmp
inc
mov
adc
pushf
xchg
push
adc
cmp
insl
jmp
jbe
add
rcl
adc
dec
cmp
add
ficomps
cmp
lea
jmp
scas
add
add
cmp
stos
divb
push
add
ljmp
aam
test
sbb
enter
sub
andb
cmp
aam
test
popa
frstor
adc
jnp
popf
fs
das
xchg
mov
xor
xor
scas
adc
add
xchg
inc
inc
ja
in
fstl
stos
pop
or
jecxz
lret
and
ficomps
inc
pop
stos
xchg
notb
sbb
lcall
xchg
push
scas
inc
mov
fsubrs
fnstsw
xchg
loopne
inc
push
shlb
stos
int
mov
push
mov
addb
mov
lods
mov
shrl
cmc
mov
jbe
jno
jmp
mov
or
sbb
add
mov
ret
push
addr16
adc
mov
rorb
pop
nop
pop
andb
aaa
mov
out
mull
adc
and
push
shlb
loopne
nop
pop
andb
aaa
mov
out
mull
adc
and
push
shlb
loopne
nop
pop
andb
aaa
mov
jecxz
mull
adc
and
arpl
push
lock
pop
nop
pop
andb
sub
dec
jo
pop
lock
pop
lcall
dec
filds
xlat
mov
jbe
mov
xchg
ja
and
inc
inc
aaa
push
and
xor
out
xlat
mov
ret
sub
xchg
repnz
inc
and
inc
inc
pop
bound
bound
pop
fwait
gs
mov
mov
fwait
cli
jns
lahf
sbb
dec
xor
pusha
cmp
pop
jmp
std
mov
adc
and
jmp
pop
dec
lret
push
stos
mov
jl
neg
lea
jnp
mov
pop
xlat
lds
aaa
fidivrs
int3
push
adc
inc
in
push
lea
push
int
jmp
imul
in
loop
fidivrl
daa
xlat
jb
xorl
imull
xchg
jg
mov
iret
sbb
mov
aaa
pop
int
mov
pushl
shl
pop
comiss
loop
lahf
add
and
push
es
push
clc
push
jb
in
dec
std
cmp
xlat
cli
jnp
ja
maxps
add
bound
jb
dec
testl
cmpsl
loop
jmp
sbb
or
pop
sbb
js
jb
out
movsl
mul
xchg
jmp
scas
repnz
xor
push
and
inc
pop
aaa
push
adc
in
mov
cmpsb
int
ret
fcom
xchg
loop
mov
xor
xor
inc
cmp
jbe
insb
out
mov
mov
shlb
add
and
inc
inc
aaa
push
daa
bound
jb
xor
out
xlat
mov
ret
cmpsl
loop
xacquire
ja
and
inc
inc
aaa
push
daa
bound
jb
xor
xor
cs
loopne
aaa
int3
and
das
in
mov
sbbl
icebp
int
and
xchg
jne
pop
lret
xor
xchg
push
inc
ja
xchg
fstl
jne
insl
outsb
sub
mov
or
adc
out
xor
hlt
jae
push
decb
adc
inc
cmpsb
jae
sti
mov
cli
ret
cmp
pushf
int3
aaa
in
iret
psadbw
sti
push
mov
xchg
psadbw
xor
xchg
sbb
sub
cmp
mov
enter
jns
addr16
fsubs
jg
out
cmpsl
lcall
sbb
lods
call
mov
and
sub
sbb
movsb
inc
out
stc
jmp
stos
sbb
sub
push
test
cmp
cmpsb
sar
stc
sbb
test
aam
dec
sub
push
aad
and
repnz
and
pop
stc
mov
cmc
scas
xor
push
stc
imul
call
jl
cld
push
cmpb
push
add
xchg
mov
aaa
xchg
jg
movntq
fldenv
sbb
imulb
dec
pop
imul
push
inc
int3
mov
lds
xchg
sti
mov
cmpsb
cmp
fnsave
cmp
orb
cld
pop
cmc
cmc
hlt
stos
scas
push
or
bound
mov
cwtl
fsts
fs
inc
fcmove
mov
xor
sbb
adc
pop
stos
test
mov
loopne
push
xchg
dec
clflush
mov
pop
mov
sbb
mov
popa
stc
clc
sbb
and
lahf
inc
out
sbb
sbb
mov
adc
mov
in
dec
aad
jl
stc
xchg
lret
movsb
loope
ret
jecxz
mov
std
test
sbb
and
push
int3
ret
lret
dec
mov
inc
mov
mov
pop
pop
xor
push
shlb
sbb
sahf
jecxz
push
pop
sub
lods
pop
push
decl
pushf
or
sbb
adc
test
lcall
sbb
inc
lahf
xchg
push
dec
hlt
pop
js
mov
or
addr16
movsb
push
aaa
dec
outsb
pop
out
xchg
or
lea
xchg
inc
inc
inc
inc
cmp
inc
mov
cmp
test
pop
call
mov
mov
xchg
out
popa
push
movsl
and
jp
sbb
xor
sub
test
cmp
clc
leave
add
pop
pop
insb
ds
mov
cs
scas
fisubrl
lds
out
cltd
jg
ret
jne
ljmp
pop
pop
pop
cmc
inc
rclb
mov
dec
mov
div
jecxz
xor
xchg
imul
cld
fnsave
lret
cld
repz
mov
callw
es
jmp
mov
mov
add
push
dec
enter
leave
scas
stc
lcall
or
mov
jo
pop
jne
push
inc
insb
sahf
addr16
cli
mov
inc
fbld
inc
fwait
in
xor
pop
push
pop
xchg
or
ret
inc
cmpsb
inc
cmp
incb
sbb
fistl
fldcw
push
mov
cltd
push
xchg
mov
inc
push
add
pop
fstpl
add
out
jmp
movsb
cli
les
orb
cli
ja
ja
hlt
lret
xor
inc
jmp
sub
pop
aas
scas
lods
fbstp
jle
into
xchg
aaa
mov
test
or
pop
cltd
cmp
enter
outsb
lahf
mov
jo
or
jmp
in
and
sub
xchg
jbe
imul
mov
imulb
addr16
jo
ss
and
das
pop
adc
ret
jns
mov
xchg
js
xor
push
cmc
cmp
jo
mov
mov
pop
aas
jnp
xor
test
aaa
mov
orl
stos
lods
sbb
lcall
dec
sub
adc
scas
cmp
mov
das
imul
mov
pop
bound
fldenv
insl
sarl
inc
fstpl
push
daa
jmp
jmp
ss
mov
xor
mov
push
test
pop
xor
test
push
ret
cmpsl
sahf
and
call
sarb
xor
push
in
inc
in
jl
or
faddl
in
loop
andb
lahf
ffreep
push
cmp
sub
add
call
ja
inc
sbb
aad
movsb
imul
inc
mov
ja
lcall
sbb
adc
jp
push
mov
mov
test
rolb
and
stos
sbb
imul
mov
shlb
jp
xchg
cltd
add
or
in
and
cmp
jle
push
fimull
out
add
jnp
stc
inc
cld
sbb
dec
lret
repnz
lock
or
shr
testl
jno
pushf
push
movsb
inc
dec
shrb
into
popa
in
rolb
dec
movsl
out
mov
movb
orb
xchg
cs
pop
sub
push
arpl
jne
pop
mov
mov
dec
push
lret
mov
xor
outsl
add
or
or
loope
dec
mov
dec
xchg
mov
jns
ret
pop
adc
sarb
fsubrl
repnz
push
cli
cwtl
mov
and
fcoml
dec
and
dec
sbb
sahf
test
loope
adc
sub
clc
out
pop
add
sbb
outsb
lret
data16
mov
jmp
xchg
rcll
cmc
cmp
xchg
pop
mov
add
push
adcl
js
push
mov
jp
inc
loopne
adc
clc
push
jle
loope
jns
repnz
or
fsts
mov
xchg
push
and
adc
cmp
dec
xlat
call
or
dec
mov
inc
jno
jmp
or
mov
psllq
cmp
in
push
jge
cmp
out
nop
pop
mov
add
loopne
daa
int
push
lahf
pop
aad
add
movl
pop
int
push
and
loopne,pn
cmp
mov
dec
sbb
adc
ljmp
out
lcall
stos
sbb
fwait
pushf
cmp
adc
insb
mov
xor
sbb
and
or
scas
cwtl
lea
shll
rorl
cmp
mov
insl
leave
stos
sbb
inc
in
stos
clc
jne
cmp
sbb
mov
push
adc
xchg
xchg
adc
popa
push
pop
cltd
imul
rcll
xor
pop
lcall
faddl
outsl
push
scas
xchg
dec
mulb
xor
lahf
or
rcll
ds
jne
in
andl
imul
push
js
gs
icebp
mov
xor
jmp
pop
add
push
push
jg
and
mov
cmpsb
lret
sub
push
lret
jge
mov
test
jne
aas
les
xchg
ret
mov
adc
test
xlat
outsb
pop
pop
sub
jl
or
divb
in
iret
inc
pop
in
inc
push
int3
mov
push
sub
loope
pop
mov
nop
mov
je
inc
adc
mov
std
and
dec
clc
pushf
pop
jbe,pt
sub
sub
imul
sub
lret
cwtl
in
rep
sbb
xchg
stos
stos
scas
int
hlt
test
xchg
sbb
lock
mov
imul
pop
insl
mov
stos
push
inc
loopne
add
lock
int3
ljmp
inc
mov
cmpsb
pop
lret
adc
fs
mov
scas
sahf
out
cmpb
pop
jmp
lock
sti
stc
or
push
sbb
and
pusha
fisubs
and
dec
call
xlat
das
xchg
and
shlb
sub
insb
mov
je
inc
cld
jo
shrb
xchg
adc
mov
xor
stos
mov
sub
xchg
repz
and
mov
fwait
dec
push
dec
mov
jle
fwait
dec
jns
aas
adcb
cwtl
ret
mov
fwait
pop
fwait
out
insl
ficompl
lock
xchg
add
mov
rorl
jle
orl
xor
insb
cld
pop
mov
arpl
mov
inc
scas
or
dec
xor
ljmp
lret
xor
pop
pop
gs
std
in
aad
lahf
inc
inc
ficomps
inc
into
das
add
or
sahf
inc
repnz
pop
inc
mov
fs
jl
insb
mov
cmp
inc
repnz
xchg
push
jle
or
sub
adc
mov
sbbb
inc
addr16
in
dec
movsl
ficoms
mov
cmp
mov
scas
and
clc
fwait
mov
stos
leave
xor
fwait
imul
mov
lds
lret
inc
and
imul
lcall
adc
andb
dec
stos
icebp
pushf
jp
mov
es
or
jns
xchg
mov
hlt
pop
jmp
mov
fdivl
add
adc
bound
mov
inc
clc
cmp
in
fnstcw
shl
and
out
add
cvttps2pi
dec
les
shlb
push
sub
lea
sbb
out
out
fsubs
loop
or
and
cmpb
outsl
xor
outsb
ljmp
xchg
leave
out
lret
push
in
out
pushf
insb
cmp
pop
outsb
out
xchg
sahf
adc
sub
mov
or
jb
int3
sbb
xchg
add
cmp
sbbl
dec
in
mov
lret
and
xor
mov
jecxz
es
dec
and
out
mov
enter
xchg
push
rclb
fistl
push
stos
inc
test
test
pop
data16
das
adc
mov
or
test
dec
sti
lret
sub
sub
sbb
dec
repz
sub
push
jae
dec
adc
add
pop
enter
mov
ljmp
cmpsl
inc
cmpsb
cmp
adc
pop
insl
test
jae
xor
dec
repz
repnz
add
and
push
sbb
add
imul
repnz
imul
cltd
cmp
sub
sub
stos
push
mov
fbstp
or
or
lea
sub
lahf
jno
scas
js
std
dec
fstpl
test
aas
scas
sbb
and
dec
loop
imul
outsb
mov
sub
incb
xchg
pop
add
and
push
cld
xchg
fsubr
shrl
orl
mov
jp
popa
add
rorl
pop
cmpb
fwait
std
addr16
push
vmovntps
test
aaa
cwtl
test
jmp
sbb
es
shl
out
mov
pop
in
ret
or
popf
jle
lcall
out
push
cmp
push
ret
fyl2x
mov
dec
pop
rcrb
push
stos
call
pushf
jge
push
lret
divl
cli
sbb
and
dec
fmul
xchg
jne
lds
or
xor
incl
cltd
mov
leave
ljmp
add
inc
xchg
pop
push
and
pop
ljmp
repz
push
xorl
xchg
push
or
mov
je
call
cwtl
sub
ljmp
sbb
adc
repnz
mov
cmp
mov
addb
cmpsl
mov
mov
outsb
mov
mov
les
fists
or
call
cmc
sbb
cmp
mov
xor
int
push
lret
pop
jmp
pop
pop
pop
insb
push
push
mov
iret
ja
and
jmp
ret
adc
cmc
jl
jecxz
pushf
imul
push
jg
aad
sub
cld
stc
push
add
jbe
jnp
cli
repnz
ror
cwtl
andl
mov
cmp
pop
popf
je
roll
insl
enter
repz
pop
xchg
xlat
sub
ficoml
fisttps
or
jp
popa
sbb
xchg
ljmp
add
fdivs
push
adc
rol
iret
sbb
push
xchg
cs
mov
in
sarb
pop
pop
mov
int
movsl
mov
pop
sub
mov
jp
jno
sbb
jle
jle
xchg
mov
pop
stos
call
mov
xor
push
lods
iret
arpl
mov
add
imul
fdivrs
lret
mov
push
sbb
ds
movsb
jne
pushf
shlb
xchg
and
gs
mov
stos
mov
test
cld
orl
insl
repz
out
sahf
push
inc
jp
fiaddl
lea
repz
cmpsb
in
fidivl
sbb
and
xchg
push
jnp
setno
movsb
lods
movsb
arpl
ret
pop
xor
xor
lds
ret
es
mov
mov
xchg
lds
decl
loope
jae
sahf
out
pop
imul
shlb
xor
stos
pusha
pusha
cmp
rclb
xchg
jne
das
push
das
xor
mov
imul
js
dec
mov
out
aad
xchg
push
lret
leave
lcall
fcomp
out
jno
inc
mov
mov
cmp
jle
pop
pop
mov
shr
testl
and
fidivl
push
xsaveopt
jb
sub
mov
cmp
fwait
std
mov
lds
jbe
dec
lahf
or
xchg
sub
cmp
and
inc
mov
add
loop
jnp
pushw
out
cld
mov
lods
test
pop
mov
fwait
and
adc
nop
test
jle
addb
out
ja
out
sbbb
int3
sub
adcl
inc
xor
rcrb
lahf
fldt
jbe
push
mov
mov
cmp
rol
stc
mov
jb
iret
jle
adc
inc
repz
ljmp
jg
fimull
cmpsb
pop
jecxz
add
mov
aaa
pusha
xchg
sahf
add
dec
mov
in
into
sbb
imul
push
iret
in
sub
in
xchg
mov
stos
test
cmpsb
mov
shlb
jo
incb
inc
hlt
in
daa
movsb
lret
inc
xchg
jle
sub
aam
pusha
and
inc
movsl
fidivrl
mov
data16
push
stos
sbb
mov
cli
pop
xchg
xor
addr16
mov
outsb
les
bound
jne
das
vandnpd
sub
and
mov
mov
xchg
mov
js
aad
pop
dec
push
inc
dec
or
xchg
jecxz
int
dec
ljmp
nop
mov
cmp
push
call
fcoml
pop
jl
sbb
mov
mov
add
push
sahf
cmp
inc
cs
push
jl
mov
mov
fstpl
adc
popf
xor
popa
fs
inc
movsl
loopne
mov
shll
mov
or
sar
mov
popa
sarl
sbb
out
jns
add
rorl
mov
out
pop
inc
mov
loop
dec
enter
jmp
filds
lcall
idivl
inc
mov
adc
into
push
pop
repz
test
dec
dec
rol
jb
inc
mov
mov
lods
lcall
sub
mov
pop
sbb
dec
pop
cs
xor
fucomp
dec
lret
dec
mov
adcb
into
jne
adc
dec
arpl
ret
mov
inc
add
xor
out
inc
pop
push
imul
cmc
icebp
mov
mov
xor
dec
dec
out
pop
pushf
push
int3
sbb
jne
sahf
lods
jo
call
xchg
loop
and
fistpll
sbb
push
movsl
ret
scas
cmp
inc
fcmovnb
jne
dec
xchg
sbb
testb
dec
jmp
mov
cltd
shlb
es
pop
in
pop
mov
mov
jae
arpl
lds
das
out
push
jae
pop
adc
xchg
mov
fs
test
fstpl
int3
mov
push
push
cmp
or
test
adc
mov
xor
rorb
push
fisubrs
fsubrs
xor
mov
and
jecxz
push
lahf
lret
and
lea
mov
mov
rcrl
in
sub
cmp
cmpsl
ret
mov
sub
mov
sbb
jb
clc
mov
cmpsl
loopne
xor
stos
sbb
test
or
loopne
sbb
push
inc
add
cmc
les
mov
add
test
shll
cmc
and
sub
data16
xchg
mov
cwtl
jne
enter
xchg
repnz
enter
mov
or
lods
mov
imul
lock
xchg
mov
push
clc
into
xchg
sub
add
sub
xchg
or
push
lret
test
mov
fisubl
dec
out
in
jno
pop
jmp
mov
mov
icebp
cmp
cmpsl
pop
jo
xchg
insb
sbb
rorb
das
in
jbe
lret
mov
fnstcw
lcall
cmc
fwait
pop
push
addr16
ret
adc
xor
inc
sub
bound
push
lahf
mov
ss
jns
xor
pop
jb
sub
call
add
jnp
scas
lret
icebp
jnp
add
or
mov
mov
jae
xchg
jns
adc
mov
ja
mov
cltd
insl
imul
ss
addr16
sbb
pop
in
fisubrl
shl
shl
fildl
jl
cmp
jns
jle
lcall
cmpsb
out
sbb
xchg
test
in
sbb
add
cwtl
jmp
sub
int3
mov
and
mov
pushf
inc
mov
pop
outsl
mov
fisubrl
sbb
dec
xchg
xchg
icebp
jns
mov
je
sbb
add
dec
fucomip
mov
jns
and
xchg
clc
push
xor
imul
push
adc
add
dec
test
pop
sbb
sub
sub
imul
ja
jbe
pop
cmpsb
cmc
pop
inc
fmul
aaa
dec
lea
cmpsl
aad
or
lahf
or
cmpl
mov
xorb
mov
or
scas
sub
xchg
roll
cwtl
movsb
xor
repnz
mov
pop
mov
pop
lock
push
hlt
mov
pop
cmp
mov
std
leave
lods
sti
aas
and
cmp
mov
insb
or
add
xchg
movsl
ret
push
movl
xor
fisttpl
mov
out
and
mov
jbe
popa
push
stos
inc
gs
mov
dec
imul
pop
inc
ss
es
f2xm1
pop
push
negl
gs
jns
leave
mov
jl
jne
cld
cltd
loope
sarb
and
and
mov
adc
sub
sbbl
repz
jb
inc
ret
pop
pusha
in
das
imul
add
sub
dec
stos
push
xchg
mov
xlat
iret
fcmovnu
cmp
fnstsw
fnstcw
movsb
dec
pushf
fistpll
push
jl
push
inc
mov
pop
push
sub
push
jbe
sahf
outsl
mov
daa
sbb
pop
push
les
cmpsb
cld
scas
xchg
or
iret
mov
notrack
aam
popf
mov
push
dec
rcl
push
aam
xchg
aam
sbb
xor
lahf
mov
sub
push
in
sbb
loopne
adc
movsb
andb
xlat
lock
xchg
pop
not
shr
adc
stos
mov
jne
sub
adc
dec
push
cmpsl
jae
cmp
movb
mov
mov
pop
or
fucomip
xor
adc
jno
dec
test
mov
push
cwtl
shrl
and
pop
lods
fdivl
nop
aad
insl
xchg
pop
dec
xchg
or
mov
ss
adc
in
jmp
loope
cmpb
popa
xchg
lea
fldz
mov
or
ret
push
mov
nop
jnp
ljmp
pop
cmp
xor
pop
lods
and
js
dec
sub
sahf
dec
push
out
bound
popa
lods
mov
decb
and
fldt
jge
add
dec
imul
jecxz
cli
sbb
jge
sub
sub
sub
xchg
ret
hlt
and
fmull
dec
add
cli
jl
mov
mov
test
pop
jge
loopne
cld
stos
pop
adc
roll
pushf
jno
jns
sub
mov
mov
leave
loop
dec
movl
sbb
mov
and
sub
inc
aaa
dec
xchg
in
fs
das
dec
xor
in
call
xor
out
push
jge
dec
push
call
ret
jmp
fwait
xor
xchg
roll
fsts
sti
jge
mov
int3
daa
adc
bound
dec
xchg
orl
mov
mov
shlb
add
and
inc
inc
aaa
push
daa
bound
jb
xor
out
xlat
mov
ret
cmpsl
loop
xacquire
ja
and
inc
inc
aaa
push
daa
bound
jb
xor
scas
mov
mov
psrad
adc
push
xor
aaa
push
daa
bound
jo
xor
out
xlat
mov
shlb
xchg
mov
int
push
xor
xor
call
lcall
in
test
lret
mov
cli
push
dec
cmp
push
push
out
clc
lcall
mov
cli
mov
js
push
or
pop
sub
jp
xor
push
enter
test
cwtl
cli
mov
cmp
sub
and
dec
jge,pt
or
clc
pushf
stos
mov
fisubrl
fwait
shrl
sub
pop
lock
xchg
jle
data16
leave
aas
aaa
in
pop
push
addr16
ja
cld
lds
scas
pop
dec
mov
push
mov
je
fistpll
fildll
lods
movsb
add
fwait
and
lahf
leave
or
xchg
aas
pop
cmp
mov
pop
bnd
xor
jno
fmuls
dec
sbb
cmpsb
les
imul
sub
xchg
adc
push
daa
xor
popa
addr16
sub
jg
pop
insl
xchg
sbb
jne
pop
adc
jae
stos
adc
xchg
jns
pop
into
dec
mov
jns
sar
int3
call
cs
pop
mov
js
push
add
push
sub
jp
jecxz
call
mov
std
cli
clc
or
add
pop
cmp
push
add
jmp
mov
imull
add
push
inc
and
push
xor
data16
negb
aam
test
cwtl
cli
mov
js
push
dec
cmp
push
jp
mov
lcall
mov
cli
mov
js
push
dec
cmp
push
jp
mov
cmp
push
jge
mov
arpl
lods
dec
add
push
xlat
push
mov
faddp
test
pop
addr16
sbb
movsl
lods
out
or
sarl
mov
pop
sub
dec
fnsave
dec
xchg
mov
mul
push
mov
add
pop
mov
pop
test
and
sub
mov
push
enter
jp
mov
fcoms
dec
jo
pop
hlt
and
dec
ret
out
jl
pop
jg
int3
mul
mov
sub
clc
pop
std
test
cmp
fldl
add
pusha
cmp
mov
xor
into
dec
or
inc
fwait
jge
sub
fidivl
mov
sbb
add
push
popf
mov
iret
mov
dec
jmp
add
sub
stos
fwait
or
fidivl
movsl
mov
out
hlt
push
js
popf
sub
incl
repnz
or
xchg
ds
push
out
int
add
mov
addl
sub
xchg
pop
pop
pop
insb
test
sahf
jo
mov
aam
rcl
dec
cmp
cs
popf
pop
inc
pop
cmp
jmp
mov
scas
jno
pop
cli
pop
cmc
sahf
inc
pusha
push
test
cmp
adc
and
cmp
mov
inc
dec
sahf
aas
fbld
subb
lds
popa
aam
lea
mov
cmc
movsb
ror
and
push
loop
sub
out
cmc
loopne
mov
xchg
adc
cmp
jnp
cltd
hlt
adc
test
in
or
xor
sbb
mov
or
loop
repnz
rolb
testl
dec
mov
dec
mov
cmp
mov
and
sub
add
std
out
or
sbb
loop,pt
addr16
push
jno
adc
dec
cmpsb
pop
icebp
or
dec
fidivs
and
or
lahf
pop
and
or
call
fists
nop
sub
aad
mov
insl
dec
xchg
pop
jae
sbb
sub
shlb
pop
mov
add
mov
push
push
mov
inc
xor
das
jae
add
lds
xlat
mov
dec
and
sbb
cmp
pop
xlat
fsts
sbb
push
ret
dec
mov
or
jns
cwtl
jp
shlb
jbe
mov
loopne
xor
cmp
mov
aad
adcl
outsb
test
lret
sbbb
mov
jo
sbb
repnz
mov
je
aam
sub
dec
addr16
pop
pop
loop
xchg
add
inc
sbb
jl
enter
mov
add
jmp
pop
shrb
jbe
mov
lock
mov
push
pop
aas
adc
dec
add
mov
daa
or
xor
ret
cmpsb
xlat
in
fxch
sub
push
in
inc
mov
cmp
loopne
ss
or
dec
jge
inc
mov
mov
test
and
int
enter
inc
js
jle
aas
test
pop
lock
mov
cli
add
stos
enter
jns
pusha
pushf
movb
sbb
jg
mov
lret
les
pop
dec
dec
sub
inc
mov
jbe
lock
cld
fsubrl
andl
out
negb
fisubrs
sub
ss
lock
cwtl
les
pop
and
cli
xor
ret
lahf
pushf
sub
cmpsb
fcoml
and
and
xorl
inc
cld
nop
icebp
mov
sub
cli
data16
icebp
or
insb
push
incl
fstpt
fmul
mov
lods
in
sub
mov
fadds
xchg
cli
rcll
add
aas
jb
xor
xchg
cmp
push
push
xorb
xchg
inc
out
test
rol
jns
and
data16
scas
dec
lock
aas
out
aas
sti
jo
movsl
cmc
test
mov
scas
dec
lods
dec
ret
mov
enter
leave
or
lcall
jmp
gs
pop
shlb
sub
shl
jns
jge
mov
outsl
mulb
outsb
push
xchg
adcl
sub
inc
jp
push
sbb
int3
jg
or
mov
adc
jbe
or
xor
int
sbb
mov
dec
mov
mulb
pop
icebp
cmp
add
cmpb
cmp
add
sbb
xchg
dec
mov
or
ficoml
loop
stos
stos
dec
add
push
adc
sbb
call
in
sbb
and
jmp
dec
push
ja
loope
adc
xchg
mov
push
mov
negl
mov
push
int
jecxz
aad
and
ljmp
mov
push
sub
and
mov
mov
adc
in
mov
jmp
leave
gs
jmp
push
sahf
out
fldcw
sbb
imul
call
jecxz
xchg
iret
pop
sbb
inc
loopne
bnd
dec
insl
mov
or
lret
mov
dec
sub
in
jae
mov
imul
sahf
out
cli
daa
out
lcall
mov
pop
sub
mov
movsl
push
or
call
popf
add
mov
xchg
or
andb
jno
hlt
in
negl
daa
jnp
push
aad
dec
xor
imul
cltd
mov
push
fidivrs
lods
leave
test
mov
mov
out
add
lret
mov
mov
jecxz
pop
mov
addr16
jecxz
nop
or
xchg
dec
in
cmc
add
repz
cltd
mov
leave
mov
jne
imul
mov
hlt
or
or
ljmp
je
pop
pop
addb
mov
xor
imul
jg
pop
jb
mov
mov
jge
sbb
in
cmpsb
dec
cmp
mov
jns
pop
in
xor
mov
or
enter
std
lcall
pop
xor
shrl
xor
in
add
outsb
out
cld
fmul
sub
out
mov
aad
decb
cmpsl
fcomps
cmpsl
lods
xchg
sbb
cmp
and
mov
inc
sbb
nop
push
repnz
jl
cmp
frstor
jle
xlat
jo
movsb
dec
or
adc
icebp
jne
jge
rcrl
xchg
cmpsl
pop
adc
or
std
test
cmp
ss
jbe
push
jb
pop
xchg
push
cmpsb
dec
daa
fmul
xor
dec
add
outsl
push
dec
enter
aad
add
popf
jle
xchg
mov
xor
test
dec
dec
loop
or
sarb
add
jecxz
movlps
cmc
push
mov
dec
sarb
cmp
inc
mov
cli
inc
insl
pop
mov
push
orl
xor
faddp
jbe
loope
les
or
sbb
lahf
xlat
je
jle
jl
andl
sub
pushl
mov
icebp
add
pop
dec
add
les
rol
hlt
sbb
add
hlt
cli
mov
xor
daa
pmaddwd
std
dec
fidivl
mov
pop
insl
inc
or
and
jns
and
cmpsl
cltd
push
sbb
jne
popa
sbb
mov
jmp
dec
inc
fcoms
in
dec
sub
cmpsb
and
cmp
xor
dec
adc
jmp
cmp
xor
jno
ljmpw
mov
lahf
inc
hlt
inc
mov
out
inc
pop
clc
inc
cmpsl
int
lods
hlt
mov
mov
sbb
or
lods
test
in
jae
push
lods
push
dec
lret
stc
sbb
hlt
rcrl
xchg
stc
dec
icebp
xchg
lock
shrb
jo
adc
jne
pop
mov
xor
cmc
data16
mov
cs
popf
rolb
or
mov
pop
cmp
getsec
lock
pusha
shll
loop
sbb
out
mov
xor
fwait
out
sub
inc
xchg
xchg
add
pop
xlat
pop
jne
in
js
mov
xchg
pusha
add
lcall
mov
outsl
mulb
fdivs
repz
cmp
xchg
sub
or
js
push
das
jecxz
sahf
lods
sbbb
mov
pop
inc
cmpsl
ret
insb
mov
lahf
or
jp
jnp
or
popa
repz
xor
iret
cmp
lods
jle
jbe
cmp
jg
adcl
adc
dec
lock
js
aad
add
ljmp
adc
fcmovnu
mov
mov
sbb
mov
je
jno
pop
sbb
xchg
jl
rcr
es
jmp
mov
lret
mov
inc
dec
push
lahf
loop
icebp
sbb
cli
push
jne
pusha
mov
mov
ret
nop
popf
adc
xchg
mov
sbb
sbb
push
into
lods
inc
add
mov
lret
or
loop
or
jne
dec
sbb
imul
jns
jne
das
int
xchg
push
jnp
lods
data16
ja
andb
pushl
aad
lds
rcrl
or
mov
in
xor
imul
push
into
lret
xor
movsl
cmpsb
test
pushf
testl
adcb
jne
mov
js
dec
mov
jo
popf
addr16
out
pop
repz
fdiv
cmp
rcrl
std
mov
int3
pusha
rorl
sbb
jns
lock
shl
push
pop
mov
push
pop
lea
push
sub
inc
repz
aad
pop
shrl
in
scas
push
mov
mov
stos
push
sub
test
dec
add
jmp
jle
aas
and
js
loope
adc
leave
jg
add
pop
adc
daa
dec
jne
dec
jle
xchg
movsb
jns
pushf
mov
and
jne
cmp
xchg
mov
stos
mov
inc
in
int3
popa
imul
lret
or
jb
add
lods
or
pop
frstor
pop
pushl
scas
mov
mov
lcall
mov
mov
sub
lahf
pusha
dec
incl
test
nop
dec
repnz
or
int
fwait
pop
or
pop
push
sbb
out
pop
push
adc
or
leave
insb
push
mov
push
test
mov
mov
sub
rcrb
aas
jp
sarl
push
pop
addr16
int3
inc
jns
popa
mov
cmp
mov
out
test
jmp
inc
dec
xchg
inc
imul
cmpsl
in
adc
rorl
inc
cs
cmp
xor
rol
mov
ljmp
scas
xlat
jmp
dec
inc
inc
cs
leave
call
cs
xor
ljmp
xor
lret
pop
mov
sub
mov
sbb
ljmp
pusha
ljmp
xor
fildl
sub
into
ret
push
mov
repz
push
fstpl
outsb
xchg
aad
jns
clc
int
subl
pushf
pop
sbb
test
test
aad
pop
sub
mov
inc
ljmp
movsl
lret
stc
fmuls
add
addb
insb
jl
ret
or
call
test
xor
test
xor
and
clc
cmc
mov
rorb
rorl
push
lods
xchg
in
push
repz
repz
mov
addr16
or
hlt
push
lods
and
loop
popa
lret
test
push
mov
mov
push
mov
jmp
rcll
cs
sub
pusha
scas
adc
cmp
outsl
daa
push
das
jns
lret
cmp
shl
clc
jbe
fs
aaa
test
nop
inc
loopne
push
outsb
shrd
and
mov
aam
rolb
mov
or
movntq
xchg
clc
mov
xchg
test
jae
mov
dec
mov
imul
repz
mov
and
mov
fwait
mov
setg
adc
xchg
stos
xchg
cmp
push
fwait
loopne
inc
fsubs
les
or
fcomp
fisubl
push
inc
cld
stos
insl
enter
xor
push
fs
push
or
lahf
lret
mov
pusha
popa
movsb
cmp
ficoml
lcall
data16
xor
sub
pop
decl
cltd
lods
add
dec
inc
sub
sbb
dec
iret
insl
pop
push
sbb
in
addb
adc
add
dec
in
mov
mov
xor
and
imulb
jg
loop
and
cmp
mov
into
test
imul
inc
ds
ret
adc
mov
fwait
push
sub
cmp
in
xchg
mov
inc
aas
adc
inc
inc
das
cltd
call
adc
stc
mov
loope
test
cmp
mov
dec
inc
int3
sbb
or
jmp
iret
insb
gs
jg
xor
nop
jg
popf
sub
rclb
insb
and
fnsave
add
jl
sbb
and
xor
sahf
mov
pop
sbb
gs
es
cmovae
inc
dec
out
testb
cmc
cmpsl
stos
jne
and
or
and
sar
imul
mov
push
push
pop
lahf
jbe
xchg
hlt
pop
pushf
bound
arpl
orl
ficomps
pop
outsl
pop
jbe
sbb
mov
arpl
cmp
or
jp
ja
movsb
push
outsb
xor
push
ret
pop
pushf
mulb
out
pop
cli
xchg
sub
rcll
bnd
push
xchg
cmp
push
nop
cli
jo
mov
sbb
out
dec
cwtl
inc
clc
hlt
lea
rcrl
xor
mov
outsb
imul
scas
pop
cmp
rclb
pop
dec
data16
mov
add
test
xchg
add
jle
sti
ljmp
ljmp
sub
out
cmp
push
fs
aam
add
mov
popa
je
push
cmp
mov
inc
fnsave
divl
loop
std
rolb
xor
xchg
jo
lret
pop
add
xchg
mov
cmp
in
jnp
or
fcoms
mov
into
sub
adc
dec
xchg
cmp
sbb
cwtl
xchg
adc
push
sub
out
mov
adc
inc
sbb
popa
lock
and
add
sub
sub
add
dec
sar
nop
addr16
cmp
lcall
clc
cmp
sbb
das
push
push
add
arpl
dec
faddl
sub
sbb
push
jmp
inc
fidivrl
cs
repnz
xchg
gs
or
es
mov
mov
test
xchg
sti
mov
xchg
xchg
mov
lahf
push
iret
ljmp
test
loopne
push
mov
cmp
mov
leave
mov
mov
sbb
out
jecxz
and
imul
sub
ljmp
jl
shr
mov
pop
adc
cmp
push
popf
jo
or
cmp
pop
jg
inc
lds
aam
fs
and
in
loop
outsl
cmpsb
push
cltd
dec
in
les
sti
sub
adc
dec
outsl
aaa
rorl
pop
lods
cmp
add
jg
test
add
or
cmp
dec
outsl
pushf
cmp
mov
in
test
loope
jle
out
stos
into
pop
mov
test
sub
push
push
cmp
sbb
push
jmp
or
and
nop
cwtl
add
mov
daa
sbb
lock
jmp
aad
jle
test
scas
repnz
dec
ja
inc
xorl
fwait
add
bound
jmp
stos
in
in
push
and
xchg
inc
cmp
aam
xchg
rcrl
call
push
xor
and
insl
in
mov
fs
jmp
inc
add
insb
movsb
je
lret
xchg
das
adc
push
cmpsl
cs
pop
bnd
sbb
in
sahf
fs
into
adc
outsl
or
daa
or
jb
inc
repz
pop
adc
add
jo
js
mov
pop
call
aam
in
mov
mov
cmpsl
cmc
dec
mov
out
insl
or
sbb
cmp
rcrl
jecxz
lcall
jnp
mov
dec
decl
popf
enter
lea
inc
hlt
push
stc
loop
dec
jge
dec
add
call
xchg
push
xlat
lcall
adc
dec
jmp
dec
shl
fdivrs
or
shlb
fs
out
add
inc
es
ja
jbe
sub
push
sbb
cld
cli
push
xchg
sbb
sub
jmp
mov
shrl
fwait
sub
dec
notl
faddl
mov
pusha
movsl
divb
inc
idivb
xor
jl
addr16
xchg
std
ss
push
adc
sub
mov
aaa
subl
jl
add
adc
sub
pushf
jg
push
es
sub
cmp
add
lods
insl
fs
inc
and
mov
adc
fcoml
inc
sub
xchg
lahf
and
mov
fbstp
lcall
push
test
icebp
lcall
xchg
jle
test
xlat
or
shl
std
scas
jno
fcompl
aaa
dec
add
std
cltd
cmpl
dec
imul
fdivrl
decb
xchg
stos
fmull
dec
lahf
sbb
repz
mov
arpl
mov
rcll
xchg
add
in
xlat
in
xchg
mov
sbb
push
out
xchg
cli
or
fiadds
push
dec
dec
jnp
jo
push
add
sbbb
ret
stc
xchg
pop
inc
pop
lahf
adc
outsl
jbe
fwait
cwtl
test
rol
jns
xor
lods
lcall
jns
cmp
and
or
loopne
jno
popa
in
insb
out
adc
idivl
enter
xchg
jo
jg
loopne
cs
jne
mov
push
addr16
and
adc
ret
xchg
popa
mov
mov
jmp
sub
sahf
jo
or
push
jb
mov
push
pop
sub
lret
add
roll
movsb
or
mov
aam
push
aaa
das
in
aas
aam
mov
pop
mov
icebp
mov
pop
iret
dec
call
jp
lret
push
sub
fldl
clc
pop
pop
cmp
add
lea
dec
mov
mov
adc
es
pop
mov
mov
jnp
and
imul
adc
xor
mov
adc
sub
dec
loope
xchg
fwait
outsl
mov
jecxz
int
pop
repz
xor
dec
stc
cmpsl
jo
sub
dec
clc
and
xchg
mov
push
jmp
inc
sub
sub
out
leave
push
mov
pop
int
add
xchg
test
jb
lcall
dec
popa
jbe
call
jl
jae
sub
xchg
js
into
out
fstpt
push
pushf
sub
clc
stos
cltd
inc
call
and
push
mov
dec
jbe
pushf
pusha
in
outsb
iret
jge
mov
sbb
jg
pushf
stos
fisttpl
outsb
add
pusha
mov
xor
mov
aas
call
sysenter
insl
pop
mov
int
sub
pinsrw
out
sub
mov
imul
pop
mov
and
or
jl
out
mov
push
daa
pop
rorl
in
gs
mov
adc
out
daa
test
stc
ret
mov
xchg
insl
ds
or
aam
add
gs
jo
and
mov
xchg
xlat
rcr
nop
cmpsl
movsl
inc
mov
inc
sub
pop
aad
push
repnz
jp
je
mov
xchg
iret
imul
cmp
mov
adc
add
je
pxor
xor
jmp
pop
insl
fwait
inc
xchg
mov
fists
dec
data16
adc
fwait
in
stos
adc
jmp
lret
cltd
iret
aad
rcrb
ret
jnp
addr16
adc
repnz
xchg
scas
ljmp
fcmovnbe
or
xor
fdivrs
es
pop
jmp
push
lods
repnz
popa
shlb
dec
inc
fwait
mov
or
lahf
cmp
jp
or
sbb
xchg
pop
jns
lcall
fs
ds
pop
dec
cmpsb
jns
sub
test
xlat
movsb
mov
cld
push
push
xchg
ds
or
jle
jl
sub
ficoms
les
mov
push
mov
js
es
jne
cmp
shrb
mov
movsb
pop
push
sahf
insb
cmp
in
cld
lret
adc
hlt
ret
sbb
sub
sub
gs
je
or
subl
insl
jb
cmp
mov
je
push
dec
pushf
push
pop
imul
push
inc
xchg
ret
sbb
pop
sbb
mov
pop
sbb
push
xchg
xor
jns
inc
dec
push
out
out
dec
mov
pop
jns
repnz
push
call
lret
test
cwtl
cli
mov
js
push
dec
cmp
push
jp
mov
lcall
mov
cli
mov
js
push
dec
cmp
push
jp
mov
stos
call
pop
mov
cmp
ficompl
dec
dec
cmp
push
xchg
or
fcomps
sub
sbb
or
cmp
cmp
out
testl
ja
push
jnp
insb
push
adc
and
rcl
ret
out
mul
xchg
mov
inc
push
push
inc
addr16
arpl
adc
add
xor
and
rcl
mov
xchg
mov
inc
push
push
inc
addr16
arpl
adc
add
xor
and
jnp
ret
xchg
xchg
xchg
jecxz
in
in
fisubs
addr16
xor
aam
loopne
jmp
cld
lret
in
cmpsb
lock
dec
mov
test
cwtl
adc
pop
cld
pop
cmp
repnz
out
outsl
icebp
jecxz
repnz
test
rsqrtps
push
cmp
xor
xchg
mov
inc
inc
jo
movsb
mov
call
fdivl
or
push
or
mov
stc
xchg
jl
dec
cmp
adc
sarb
adc
push
mov
xchg
push
jl
xlat
adcl
pop
dec
mov
jnp
scas
mov
sub
pushf
mov
cmpsb
xchg
ret
pop
jecxz
loop
xchg
inc
pusha
cmpsl
mov
test
inc
addr16
arpl
adc
add
xor
and
rcl
ret
out
mul
xchg
mov
and
inc
and
xor
bound
add
mov
mov
mov
xchg
fwait
mov
add
lock
loop
push
and
jae
adc
pop
bound
and
xchg
testl
sbb
and
adc
inc
adc
add
xor
and
rcl
ret
out
mul
xchg
mov
inc
push
push
inc
addr16
arpl
adc
add
xor
and
rcl
ret
out
mul
xchg
mov
inc
push
ss
rorl
xlat
mov
je
add
fsubrs
es
pusha
cmpsb
xchg
cltd
add
mov
mov
int3
icebp
cmpsb
bound
and
sub
imul
test
imul
xchg
stc
push
pop
push
js
push
aam
fsubr
mov
mov
fs
lcall
ja
hlt
movsb
mov
push
cmc
pop
loop
add
stc
cmp
jae
outsb
stc
or
or
pop
inc
jo
push
pusha
mov
es
je
mov
shll
int3
in
adcb
test
clc
and
fstl
lods
scas
nop
lret
pop
mov
inc
enter
add
ljmp
adc
xchg
mov
push
xchg
insl
ljmp
mov
stos
dec
jmp
jnp
sub
xchg
fcomps
pop
xchg
cmpl
call
and
cmp
sub
sbb
push
int
stos
mov
in
pop
mov
add
clc
or
dec
push
pop
xchg
sarb
sahf
fldt
rdtsc
add
jns
adc
sar
cltd
daa
xchg
xchg
cmc
jmp
out
mov
sbb
popf
jl
cmp
jb
fcomps
cmp
push
lock
out
mov
das
popa
lret
fiadds
lret
mov
stos
or
pushf
insb
mov
mov
sub
clc
mov
lea
mov
push
cmp
or
or
pop
jb
in
in
daa
mov
cmpb
loope
jl
push
jae
je
lcall
bound
and
dec
mov
sbb
cmp
dec
mov
inc
and
scas
inc
cmp
je
mov
dec
fiaddl
jo
mov
in
and
add
cmp
test
mov
pop
cld
sarl
aad
ret
and
imull
cmp
xor
mov
jmp
xor
or
and
fldenv
ss
jno
mov
or
mov
xor
xchg
shlb
jne
cmp
int3
cmc
and
mov
outsl
sub
push
mov
and
push
int3
xlat
inc
inc
dec
ret
sbb
push
and
mov
add
sub
dec
daa
sub
jne
mov
inc
es
mov
xchg
ljmp
adc
adc
leave
xchg
rcrb
add
add
pop
jo
push
ret
movsl
push
fwait
sub
mov
popf
push
mov
mov
and
cmp
xor
repnz
mov
std
out
xlat
aaa
adc
jmp
ds
and
in
dec
sbb
test
dec
sub
lods
cmp
pop
cmp
int3
adc
xchg
adc
cli
push
cmpsl
dec
xor
lret
inc
jmp
loopne
fisubl
sarl
sub
outsb
add
pop
xorb
or
mov
ret
add
cmp
jne
popa
xorl
pop
cld
or
testb
or
mov
aad
add
stc
sub
shrb
gs
pusha
sbb
das
sti
pushf
pop
xor
pop
add
es
sbb
ficompl
dec
scas
jmp
icebp
mov
test
mov
xchg
loopne
scas
fwait
jb
adc
or
xor
sub
loopne
fld
outsb
sbb
rcrl
ja
hlt
lret
add
mov
mov
sub
add
add
pop
adc
lret
pusha
inc
lret
dec
pop
jg
adc
sub
or
stc
aas
into
pop
pop
shll
ja
movl
mul
mov
imul
std
pusha
mov
mov
lds
and
dec
iret
scas
xchg
cltd
insl
mov
sbb
pop
ret
sub
push
dec
mov
stc
jnp
stos
xchg
jmp
leave
iret
or
push
sub
push
mov
cwtl
mov
not
adc
or
ja
movsl
push
xlat
or
pop
sbb
mov
jmp
pop
xchg
pusha
hlt
push
sarl
in
lret
and
or
mov
dec
daa
ja
mov
into
pop
mov
sbb
int3
adcb
mov
jae
jno
sbb
sarb
test
rolb
xchg
outsb
leave
xchg
or
sarb
ret
adc
xor
arpl
mov
push
sub
adc
loope
jb
out
xchg
stos
mov
or
inc
adc
pop
out
sbb
xchg
jecxz
mov
fadds
in
xchg
and
jb
and
mov
into
xchg
jb
sub
popf
and
jp
dec
and
lds
jl
mov
dec
sub
xchg
push
jnp
jnp
mov
push
or
dec
mov
imul
mov
add
and
nop
adc
enter
mov
xor
sub
sub
pop
and
adc
ds
fcompl
loop
scas
xchg
cmp
cmc
inc
lahf
rol
ljmp
loope
iret
adc
mov
ljmp
cld
push
test
jg
sbb
popf
ljmp
stc
mov
in
push
adc
out
push
jns
fs
movsl
sbb
jae
cli
mov
lds
push
aad
fildl
dec
lea
outsl
or
xor
fwait
jmp
mov
ret
rorl
xchg
cli
sbb
out
sbb
outsl
lret
push
dec
xchg
js
xor
ja
stc
pop
mov
sti
jnp
pop
push
xor
jne
test
in
inc
inc
cwtl
icebp
test
mov
loopne
sbb
or
mov
mov
aas
mov
mov
mov
repz
loope
cld
sub
mov
adc
aad
sbb
sbb
sub
ret
jle
in
mov
mov
adc
and
mov
into
push
imul
pop
lcall
icebp
pop
lret
aam
repz
cmp
xor
jle
xchg
es
inc
cs
clc
cs
add
push
test
shll
and
lods
sbb
movsl
andb
push
int3
inc
dec
gs
inc
xchg
aad
and
mov
push
in
add
cmp
jmp
adcb
xor
and
outsb
jle
xchg
xor
dec
lds
and
lods
xchg
mov
daa
inc
push
adc
cmp
andb
out
leave
cmp
test
jns
mov
pop
push
arpl
add
inc
pusha
jo
inc
lahf
xor
sub
scas
cmp
sbb
push
insl
rcrb
imul
add
push
fwait
rcll
fcomps
mov
popf
bound
hlt
aad
incb
mov
mov
and
out
jae
mov
sub
inc
pusha
push
in
dec
mov
push
xlat
stc
lock
inc
mov
ret
jl
js
test
inc
test
mov
rorb
and
pop
repnz
inc
push
nop
cmp
mov
in
adc
mov
das
dec
push
and
pusha
cmc
jg
dec
lcall
dec
mov
mov
and
icebp
jnp
mov
shll
push
jae
mov
test
mov
or
dec
aad
sub
mov
fldenv
push
sub
test
aas
dec
popa
xor
outsb
shl
lret
test
or
in
mov
cwtl
or
loopne
add
repnz
mov
mov
addl
insl
jbe
xchg
cmp
jmp
and
add
push
pop
das
into
test
cld
cmpsl
idiv
and
mov
ljmp
std
jae
inc
mov
push
inc
cld
mov
sbb
iret
adcl
mov
dec
pusha
mov
mov
out
push
popa
nop
lods
loop
out
test
pop
ss
movb
clc
imul
sar
jns
mov
dec
adc
mull
sahf
or
lds
fnstsw
add
sbb
mov
mov
mov
dec
lret
inc
scas
inc
fisubl
aas
andl
repnz
pop
cwtl
push
fstps
jl
dec
pusha
ja
xchg
stos
jmp
or
push
xor
cmp
pushf
clc
into
in
push
roll
inc
xchg
mov
outsb
pop
lahf
arpl
adc
mov
dec
inc
jl
das
sbb
repz
test
push
cli
and
adc
push
push
add
xchg
sbb
sbb
add
xchg
fistpl
shl
or
out
inc
xor
cmc
dec
shl
in
and
mov
adc
mov
movsl
lods
or
ficompl
dec
pop
lret
repnz
stos
mov
decb
sarb
inc
pop
pop
dec
inc
xchg
and
xor
sti
sbb
and
sub
push
and
mov
or
movsl
sub
test
xchg
dec
aaa
fwait
inc
xchg
jecxz
sbb
les
ss
lahf
insl
pop
push
popf
xorl
xchg
stos
inc
aas
lcall
movsl
xchg
push
push
rorb
gs
sbb
sarl
in
test
lods
cld
cwtl
xor
popa
aas
jmp
push
mov
gs
or
outsl
or
mov
dec
inc
lret
dec
jae
dec
cmp
outsb
jb
mov
imul
mov
cmc
xchg
or
push
xchg
mov
cmp
cmp
dec
xchg
lret
hlt
xor
and
add
call
insb
sub
xchg
cmp
les
pusha
xchg
fnsave
mov
add
lahf
mov
cmp
out
pop
mov
nop
jg
mov
jae
dec
mov
call
mov
lahf
arpl
mov
mov
pusha
icebp
repnz
jmp
add
dec
lret
inc
aad
pop
fstp
ja
into
mov
mov
dec
jp
loope
testb
in
aas
lds
or
movsl
iret
mov
jecxz
mov
add
sub
mov
adc
jbe
lcall
push
inc
sbb
pop
popf
add
mov
sub
cli
or
mov
or
test
push
mov
in
ret
inc
push
movsl
out
mov
mov
dec
xchg
push
ljmp
sub
arpl
test
hlt
xor
jb
push
int3
cmc
in
dec
popa
mov
aas
jnp
dec
clc
jo
enter
mov
into
xchg
jns
cmpb
add
fst
fcoms
pop
push
test
es
adc
pop
mov
xor
ret
test
aad
je
xlat
bndldx
in
outsb
mov
cmp
rcll
dec
mov
push
pusha
dec
out
sbb
cmp
dec
jmp
gs
pop
mov
pop
mov
fisubrs
sub
or
shr
cltd
xchg
out
push
out
loopne
fwait
imul
push
pop
mov
jg
lock
pop
cmpsb
and
and
sbbb
scas
mov
cmc
mov
movsl
cmp
add
jmp
fidivrl
inc
xchg
mov
cmpsb
adc
mov
mov
xor
push
fiaddl
mov
adc
or
add
aad
push
sub
int3
out
add
add
push
pop
int
insl
cmp
mov
fsub
in
insb
pop
cmp
faddl
pop
iret
js
push
lods
es
cmc
hlt
jb
fstps
arpl
out
repnz
aam
icebp
roll
ljmp
or
and
movsl
cmp
fildll
add
sub
push
fimuls
into
cmp
cmp
push
jp
add
xchg
rorb
cs
jb
aad
aas
push
xlat
xor
rolb
push
jmp
xor
cmp
dec
sub
jo
js
push
mov
cmp
lods
notl
pop
xor
adc
push
push
jnp
and
hlt
aad
shrl
leave
rcr
orb
addb
mov
mov
imul
xor
enter
js
adc
outsb
shrb
mov
sub
mov
adc
jl
sub
fisubrl
push
andb
mov
cmp
jecxz
xlat
sbb
and
aaa
insb
pushf
lret
cwtl
xchg
test
movsl
sub
ret
jmp
xor
mov
enter
cli
pop
lods
xor
stos
mov
adc
pop
into
out
push
mov
cmp
ud0
sbb
aas
inc
add
enter
ja
fimuls
mov
imull
in
push
lods
sbb
pop
test
int
imul
mov
cli
dec
int3
xor
cmpsl
and
inc
js
cmc
jae
jae
test
rorb
les
jge
cmp
shlb
arpl
mov
fcmovb
call
cmc
xchg
arpl
test
mov
jp
push
inc
cmpsb
daa
add
or
repnz
or
sbb
shlb
fldlg2
and
mov
aas
xor
mov
add
sbb
push
cmp
scas
mov
adc
mull
adc
ds
pop
inc
out
dec
adc
sub
push
push
jmp
mov
into
clc
sub
jge
js
sbb
or
lahf
sbb
mov
dec
xor
movsl
ds
mov
or
mov
jmp
mov
cld
sbb
gs
adcl
pushf
or
xchg
aad
jp
daa
repnz
xor
imul
out
ss
stos
arpl
adc
sub
mov
mov
sti
push
ds
mov
add
cmp
stc
subl
lea
lods
cmp
inc
sarb
in
test
xlat
mov
dec
xor
pop
dec
adc
popf
es
xchg
into
sahf
arpl
jo
scas
cmpsb
sbb
mov
or
fsts
bound
mov
inc
or
lods
mov
sub
adc
sbbb
inc
outsl
imul
mov
clc
mov
gs
fs
inc
add
or
xchg
lret
test
les
sbb
loopne
sbb
cli
rcrb
dec
xchg
lock
outsl
add
je
jo
xor
xchg
dec
adc
repz
add
movsb
adc
jbe
and
fsubrl
fmulp
mov
div
and
push
mov
pop
adc
daa
pop
lods
fnsave
imul
mov
sbb
mov
dec
bound
mov
orl
stos
cmpsb
sbb
mov
and
bound
jb
mov
popa
jle
dec
mov
mulb
xchg
xchg
pop
addr16
cmp
jns
lds
and
sub
xor
mov
int
xchg
aas
outsb
test
jg
jno
je
loop
inc
adc
or
mov
sbb
push
mov
mov
jecxz
xchg
xlat
mov
sahf
cmpsb
sub
and
rcl
adc
scas
fidivrs
xor
mov
movsb
out
int
icebp
add
push
push
dec
sbb
mov
lret
in
ljmp
xchg
mov
inc
mov
push
cmp
dec
sbb
xchg
stos
js
cmp
pop
popf
cmpsl
mov
pop
cwtl
mov
int3
pop
xchg
pop
cmp
inc
mov
mov
mov
enter
adc
mov
adc
jl
sbb
ss
movsl
xor
jnp
xchg
icebp
test
push
inc
scas
push
and
fcompl
loopne
sub
adc
mov
mov
inc
aas
mov
jb
out
jmp
inc
movsl
dec
les
testl
hlt
push
inc
vmovaps
rcr
cmpsb
cmpsb
icebp
cmp
icebp
cltd
add
das
mov
lcall
mov
mov
pop
mov
push
adc
or
inc
and
sbbb
dec
cmp
add
fiadds
mov
adc
pop
mov
cmp
pop
push
pop
fsubr
cmp
outsb
imulb
insl
jne
jb
xor
or
sbb
pop
pop
insb
es
mov
xor
mov
xorl
mov
in
and
dec
aad
cmp
or
sub
notl
push
cs
mov
adc
xor
aas
push
das
jno
or
gs
cld
jecxz
add
push
cltd
dec
mov
out
and
das
call
out
push
jb
jl
or
jp
js
sti
mov
inc
pop
xchg
xlat
std
xlat
stos
rorl
fdivrs
aas
jbe
jnp
scas
pop
fnstcw
out
daa
test
cmp
pop
and
imul
push
sahf
dec
in
imul
and
inc
xchg
xlat
jg
add
dec
es
jo
push
orb
data16
pop
ss
mov
pop
xchg
insb
das
xor
dec
pop
xchg
daa
mov
mov
jle
pop
lret
int3
enter
inc
cmp
pop
ja
repz
jecxz
nop
lahf
repz
pop
add
xchg
fsubrl
in
je
sbb
push
jnp
mov
orl
cmp
pop
imul
cmpsl
jg
cmc
outsl
adc
stos
popf
shlb
xor
pop
sbb
pop
and
push
call
daa
pop
pushf
cli
sub
xor
xchg
push
out
adc
sbb
dec
pop
lcall
dec
mov
adc
cmpsb
jnp
lret
push
cmp
loop
xorb
loope
sub
mov
dec
clc
xor
loop
push
xchg
notl
sbb
mov
testl
xchg
pop
mov
aaa
pushf
sbb
enter
jg
pop
js
add
push
push
ss
mov
setl
adc
vmptrld
fadd
or
mov
xlat
rcll
cmp
pop
add
int3
push
and
mov
popa
jne
push
stos
popf
dec
push
int3
mov
add
je
push
fs
sbb
and
adc
xor
xchg
sahf
dec
push
out
std
scas
das
sub
cmp
inc
jae
inc
add
sbb
iret
pop
mov
jbe
add
lahf
push
xchg
lods
stc
loope
adc
sbb
or
xor
mov
mov
into
arpl
push
cmp
out
xchg
pop
and
sbb
add
std
push
add
mov
cld
shlb
es
sti
es
lea
pop
mov
dec
loope
scas
test
repnz
pop
test
insl
push
lods
mov
ret
std
pop
repz
cmp
add
aam
mul
sub
cmp
xchg
push
lcall
sub
int3
aaa
xchg
movsb
push
cmp
add
inc
out
lock
sub
je
xor
jecxz
sbb
push
cmp
xchg
int3
mov
mov
fwait
nop
int3
jp
xchg
sti
xorb
xchg
js
fistpl
xor
inc
sub
sar
mov
mov
jecxz
xchg
test
cmp
mov
push
dec
or
cld
adc
xchg
addl
mov
jne
pop
fs
loope
pop
xor
cmp
lret
lret
test
mov
jl
roll
ret
xchg
fisttpl
mov
ret
movsl
or
adcl
xchg
mov
std
loop
jns
imul
and
imul
fisttps
lods
jmp
dec
and
mov
mov
cli
mov
add
aad
jmp
out
and
test
scas
push
cmp
hlt
ja
mov
rcrb
shll
mov
jg
cmc
adc
ss
pusha
pop
jne
push
xlat
dec
adcl
int
and
pop
ss
aaa
into
xor
mov
add
push
mov
cmpsl
cmp
sub
xchg
mov
mov
mov
into
lods
dec
mov
fyl2x
mov
ss
ljmp
out
test
inc
mov
mov
hlt
mov
push
xchg
insb
push
sti
xor
cmpsb
inc
lea
and
adc
data16
shlb
sbb
mov
mov
mov
es
andb
in
es
fwait
int
sti
pop
cmp
out
xchg
int3
dec
jecxz
pop
out
cmpsl
push
jbe
mov
push
outsl
insb
jp
jecxz
div
mov
push
mov
xchg
fistps
les
or
xchg
lea
push
and
push
rdmsr
jmp
je
sub
dec
enter
mov
or
mov
test
cmpsl
dec
dec
int
pop
stc
lods
call
rorb
or
push
xchg
stos
adc
jno
jno
mov
mov
cmp
inc
mov
fnsave
cld
dec
or
push
jbe
mov
ret
inc
pop
jae
arpl
adc
add
xor
and
rcl
ret
out
mul
xchg
mov
inc
push
push
inc
addr16
arpl
adc
add
xor
and
rcl
ret
out
mul
xchg
mov
inc
push
push
ret
addr16
pop
adc
andl
aaa
and
push
xlat
ret
out
mul
xchg
mov
inc
push
push
inc
addr16
arpl
adc
add
shrl
imul
pop
jl
dec
dec
pop
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
xor
jp
push
cmp
imul
dec
push
mov
movsb
rcll
in
aad
lds
adc
sbb
push
cmp
mov
movsl
lret
test
xor
mov
and
sbb
sub
push
xor
mov
xchg
stc
fwait
test
mov
push
inc
or
adc
mov
xor
mov
mov
loope
pop
scas
mov
cli
xchg
mov
subl
add
in
xorb
out
xor
lcall
sbb
fcomi
ficoml
imul
dec
jg
add
cmp
cli
inc
cmpsl
cmp
sub
out
jmp
movsl
pop
push
inc
lock
lret
mov
xchg
xchg
sub
gs
sti
add
pop
stc
repz
adc
clc
sbb
jmp
fidivl
mov
xchg
stc
fmuls
sub
mov
push
lods
andb
inc
sar
and
push
sbb
push
cmp
mov
movsl
bound
cmpsb
in
aad
lds
jl
insb
push
jne
pop
xor
insl
mov
sarb
fucom
in
into
add
sbb
or
or
jne
and
push
pop
sbb
mov
test
hlt
aad
mov
sub
push
cmp
or
inc
sub
cli
test
cmc
lcall
xor
jp
push
sbb
push
cmp
mov
movsl
lret
test
cmc
lcall
xor
pop
sub
xchg
mov
ret
mov
imul
loop
sarl
adc
dec
xchg
mov
and
sub
jl
mov
jae
and
pop
mov
pop
in
adc
pushf
push
add
sbbb
sahf
dec
aad
or
mov
repz
imul
das
jmp
mov
imul
mov
cmp
sbb
add
mov
ficoms
add
out
add
test
fcmovnbe
sti
dec
and
cs
push
inc
sbb
inc
dec
insl
sbb
mov
adc
jp
mov
inc
inc
xor
rcrl
cs
aaa
jmp
xchg
std
loope
jl
sbb
mov
ja
lcall
rorb
xchg
call
scas
mov
enter
dec
fstl
stos
ja
mov
dec
adc
cli
pusha
adc
sub
or
les
subb
push
in
movsl
nop
test
mov
inc
sbb
xor
stc
sub
mov
adc
shll
add
fstp
cmp
out
fistps
aaa
imul
lods
mov
or
test
inc
add
jnp
cwtl
loop
cltd
in
jne
mov
lods
lcall
aam
popf
or
mov
cli
insb
jne
xchg
ss
and
add
or
add
sahf
pushf
push
xor
mov
dec
sbb
ds
insl
mulb
insl
test
inc
dec
cld
imul
out
ret
fstl
mov
push
mov
arpl
fwait
ret
scas
mov
shll
mov
add
fidivl
ja
imul
call
push
loop
ficompl
aam
xorb
test
push
sbb
or
adc
adc
mov
rcr
cld
xchg
push
loop
sbb
mov
mov
jo
loop
xchg
sub
push
xchg
pop
movsl
into
ja
sbb
jecxz
or
addr16
xor
xchg
pop
pop
mov
inc
lcall
ja
mov
fyl2x
mov
xchg
fwait
dec
pushf
or
xchg
xorb
mov
mov
mov
out
pop
push
imul
push
inc
movsl
movsl
cwtl
xchg
lock
enter
jge
xor
std
ds
adc
and
icebp
xor
xor
jbe
mov
scas
pushf
mov
push
mov
cmp
mov
sti
sarl
pop
add
pop
into
gs
dec
adc
hlt
lcall
mov
clc
ret
shll
add
popf
adc
popa
mov
xchg
pop
pop
cmp
pop
xchg
inc
into
push
add
push
pop
jo
cld
fistps
mov
cs
cli
mov
shll
inc
lods
or
xchg
inc
sahf
in
or
fnsave
nop
popf
in
xchg
cmpsl
pop
inc
repnz
nop
or
jmp
das
and
xor
mov
jbe
ja
push
push
cmp
popa
push
leave
stc
sub
movsl
ja
test
repz
inc
leave
push
lahf
enter
sahf
push
sbbb
sub
out
cmp
fs
out
pushf
shr
cli
pop
fstl
mov
scas
inc
test
jae
in
arpl
add
add
xchg
movb
push
xchg
jns
cs
and
aam
sti
xchg
in
adcb
shll
dec
fs
and
popf
pop
gs
fidivrs
add
xchg
iret
lret
adc
mov
xrelease
adc
cltd
je
add
nop
cmp
jg
push
sub
cmp
lret
test
pop
or
lods
dec
dec
mov
mov
loope
xchg
cmp
ret
mov
mov
arpl
enter
pop
out
pushf
push
push
push
xchg
cmp
lds
orb
pop
dec
scas
cmp
fcoml
mov
inc
out
add
loope
cmp
push
sbb
cmp
imul
daa
fisttpll
inc
sub
mov
add
out
mov
cmp
nop
add
or
loop
cmp
mul
inc
xor
mov
scas
sbb
daa
fldcw
gs
iret
jg
pop
mov
fimuls
mov
mov
bsr
inc
xchg
mov
dec
sub
pop
push
push
std
mov
bound
mov
adc
cli
mov
movsl
out
aaa
int3
xlat
insb
dec
jne
int
pop
int3
add
dec
cmp
mov
and
out
adc
cmc
push
inc
sbb
mov
push
cld
jl
xchg
and
mov
pop
jmp
or
loop
dec
nop
and
lahf
lret
add
call
inc
imulb
cli
jmp
mov
mov
sub
mov
int
into
jbe
xchg
std
mov
sti
sbb
mov
mov
jbe
stc
mov
dec
push
xor
inc
push
xlat
xchg
push
dec
inc
imul
icebp
xchg
hlt
call
inc
aaa
dec
mov
jge
pop
stc
ljmp
fcmovne
sbb
push
test
sahf
or
xchg
jge
add
add
cltd
cmp
cli
cmpsl
sbb
or
or
mov
call
fmulp
setle
xor
hlt
lret
cltd
push
push
add
enter
push
sub
dec
pop
fld
mov
mov
adc
lods
dec
pusha
sub
cmp
add
and
stc
xor
cmp
sub
jae
add
or
adc
subl
and
jno
adc
inc
aad
jne
adc
pop
jo
inc
mov
test
jns
xor
mov
mov
leave
ror
mov
imul
ret
pop
sub
cmp
ret
xor
mov
xor
jp
mov
xchg
sbb
inc
xor
lret
data16
push
or
jg
bound
icebp
mov
out
arpl
sub
data16
mov
cli
fcomps
loopne
sbb
paddsb
push
xchg
pop
in
ret
xor
scas
sbb
incb
in
loope
inc
cmp
repz
in
js
scas
cmp
popf
dec
pop
xchg
push
dec
mov
rclb
repnz
xchg
and
mov
popa
ja
xchg
fldcw
fisubl
push
fdivs
pop
ds
xor
or
mov
mov
fs
jg
adc
jecxz
xor
jns
out
xor
mov
and
xchg
dec
inc
stc
jg
dec
push
xchg
xchg
rcl
outsb
mov
or
dec
add
inc
call
test
aas
or
pushf
pop
and
dec
or
sub
das
data16
lahf
cmp
cmp
inc
repnz
add
xchg
leave
ficompl
add
aam
inc
add
jne
lods
arpl
fistl
mov
in
aaa
sbb
in
inc
mov
lods
ret
xor
mov
sub
pop
or
mov
fldt
xchg
cmp
outsb
stos
idiv
aad
xchg
mov
xor
cmp
jle
cld
or
cld
stos
leave
add
scas
dec
add
pop
push
xchg
sbb
cwtl
pusha
mov
pop
jbe
adc
mov
data16
push
mov
push
mov
and
xchg
push
xchg
outsl
push
leave
hlt
mov
sbb
orb
cmp
sbb
and
bound
and
test
mul
inc
inc
xchg
popa
sbb
leave
or
and
lahf
jecxz
jmp
push
mov
jecxz
mov
xor
xor
push
hlt
fistl
je
cmp
mov
or
adc
sbb
sub
ret
int3
and
adc
aad
push
lcall
inc
int3
test
jnp
orb
lcall
out
fwait
out
sbb
divb
imul
push
stos
daa
nop
stc
stos
js
push
jge
out
mov
fcoml
cltd
fimuls
push
pop
cmc
mov
nop
sub
push
mov
dec
jmp
in
ds
inc
cmpsb
fstl
mov
cmp
jl
daa
into
gs
test
das
sbb
adc
mov
jnp
test
xchg
pop
lahf
adc
push
sub
aam
iret
cmp
mov
std
jnp
leave
dec
rcr
dec
mov
mov
jae
scas
scas
jb
push
lret
mov
mov
das
lea
and
mov
pop
add
testb
or
lret
add
sbb
mov
sub
imulb
test
hlt
jp
aas
mov
lds
xlat
mov
mov
ds
inc
ret
loope
cli
fcoml
dec
fnstcw
dec
jg,pt
mov
adc
add
lea
in
stos
jl
dec
lods
movsb
insb
push
ret
lea
add
stos
lahf
xor
in
ret
dec
insb
sbb
mov
dec
outsb
push
scas
fcompl
mov
test
sbb
test
or
jmp
loopne
sbb
push
pmaxsw
cmp
popa
out
rolb
into
push
xlat
adc
mov
cmc
jb
faddl
cmpsb
pop
sub
imul
addr16
or
ret
lcall
add
lds
lret
fimuls
js
or
std
add
xchg
gs
jbe
push
push
mov
in
pop
xchg
test
mov
stos
cmp
cmpsl
bound
cmpb
lret
xor
loop
out
lods
cmpl
jecxz
and
push
std
stc
dec
call
leave
popa
xchg
jle
leave
bnd
push
lcall
sti
pop
adc
push
xchg
push
ja
cs
inc
inc
mov
aad
mov
subb
clc
call
jge
or
dec
xor
bound
pop
sbb
out
movsl
lods
ds
mov
outsb
icebp
mov
bound
mov
jmp
push
sbb
sarb
repz
lods
in
mov
out
rolb
fcomi
fsubs
pop
je
and
add
mov
js
jbe
in
dec
sbb
jns
and
icebp
outsl
testl
scas
insb
ljmp
or
adc
scas
xchg
aam
arpl
or
pop
stc
or
jns
movsb
dec
xchg
add
icebp
and
ljmp
pushf
ficoms
lret
xchg
data16
jb
push
aam
pop
xchg
mov
lods
mov
fsubl
jp
nop
aas
cmp
and
cmp
fnsave
or
push
adc
out
jno
cmp
loop
add
iret
and
sub
in
sub
mov
xor
dec
jmp
push
in
mov
in
in
cwtl
sti
fs
jne
sete
movsb
scas
or
mov
imul
enter
mov
mov
mov
bound
dec
sub
std
lods
std
mov
mov
sahf
add
mov
pop
mov
in
scas
bound
mov
mov
xchg
icebp
xchg
dec
inc
mov
fistpll
mov
push
cld
test
cld
push
sub
js
mov
icebp
mov
scas
mov
cmp
sub
dec
lea
mov
je
pop
addr16
and
mov
cmpsb
inc
lret
je
cmp
dec
fldt
mov
movsb
jge
adc
repnz
jnp
jae
inc
dec
imul
inc
insl
xor
stos
dec
cltd
push
push
in
xor
iret
fisttps
pop
cmp
mov
xor
fdivrl
jge
imul
in
and
outsl
aas
inc
and
inc
mov
jnp
mov
or
or
sub
pop
lret
ja
inc
sbb
mov
inc
mov
xchg
pop
fisubrs
jp
mov
and
xor
shl
inc
xchg
sub
in
incb
push
xor
or
fs
hlt
sti
mov
sahf
push
out
int
pop
mov
mov
adc
inc
mov
aaa
inc
stc
dec
xchg
cmp
xchg
mov
std
sarl
cs
mov
jbe
xchg
std
adc
fs
or
inc
xor
subl
dec
into
ret
add
or
jae
loop
repnz
dec
pusha
stos
inc
jecxz
xor
dec
into
xorl
sahf
jp
lds
leave
mov
mov
leave
icebp
loopne
popf
imul
rclb
adc
ja
std
int3
movsl
sti
pop
jl
fildl
loopne
push
jp
pop
sbb
inc
xor
outsl
leave
adcb
ss
mov
jmp
sub
jle
notl
sbb
das
imul
movb
popf
xchg
pop
je
and
cmpsl
scas
aas
dec
xor
sbb
jmp
sbb
cmp
jbe
mov
mov
inc
mov
cmp
cmpsl
sbb
repnz
lods
loope
subl
pop
fistpl
inc
in
fwait
mov
xor
hlt
ja
sub
and
sub
dec
insl
mov
push
subl
or
sub
push
mov
or
shrb
loope
arpl
lahf
aad
xor
bnd
test
mov
xchg
cmp
lock
push
stos
sbb
cmp
add
pop
test
pushf
inc
stos
push
pop
int
mov
xor
aam
addr16
es
xor
jmp
xchg
ret
fcmovne
xchg
loope
pop
inc
jecxz
es
push
pmulhw
xor
push
ror
lods
mov
cmpsl
rolb
int3
lea
hlt
std
cmp
pushf
dec
ret
jbe
test
cmp
or
mul
addb
arpl
outsl
xor
lcall
repz
fbld
add
es
inc
fs
and
or
or
mov
xor
ret
jno
push
pop
lcall
mov
out
adc
in
jp
shrb
jb
adc
in
cli
dec
cmpsl
call
inc
cwtl
cmp
adc
sbb
adcl
cmpsl
push
sub
jnp
add
mov
fwait
scas
adc
pop
daa
push
xchg
sub
adcl
xchg
cmp
lock
insl
mov
add
xchg
cmp
add
int3
int
sar
pusha
inc
jecxz
dec
dec
mov
dec
sub
xchg
fcoms
lods
add
or
psrad
repnz
push
ret
std
cmpl
lahf
pushf
dec
sub
and
popf
push
jmp
adc
mov
loopne
xor
std
dec
addl
bnd
sbb
inc
movsl
lds
iret
or
inc
gs
sbb
call
arpl
shr
mov
and
lods
int
dec
arpl
cmp
xlat
pop
sbb
cmp
rclb
imul
cmp
push
mov
bound
inc
sub
ja
adc
jge
cmpsl
std
push
mul
adc
push
push
icebp
ret
push
mov
add
xlat
inc
dec
push
lcall
adc
ror
add
cmpsb
test
push
insl
in
sahf
cs
adc
push
shr
lods
dec
add
nop
js
xchg
mov
out
je
test
cld
push
xor
aad
mov
mov
clc
push
test
cmc
insb
dec
xchg
jge
popa
or
push
pop
add
int3
test
push
mov
addl
xor
aas
mov
inc
sbbl
negl
rorl
pop
aaa
adcb
adc
xor
enter
into
or
lahf
mov
fucomi
incl
xchg
pop
mov
repnz
fldcw
jno
cld
xchg
test
push
int
add
mov
lcall
jge
pop
int
dec
sbb
lahf
bound
mov
sub
aaa
or
adc
mov
loop
cmpsl
adc
mov
pop
mov
push
shll
adc
int
pop
shll
push
dec
mov
inc
aam
or
mov
aas
sbb
scas
shr
clc
sarb
jp
or
in
stos
mov
int
repnz
or
mov
inc
jg
adc
int3
pop
das
mov
pop
addl
in
int
test
pop
add
in
test
fwait
rorl
test
fists
insl
and
hlt
imul
cmp
jns
repnz
pushw
pop
xchg
mov
in
adc
bound
push
int
in
push
lods
sub
sbb
sub
push
and
xor
and
bound
ret
mov
mov
pop
ret
movsl
test
repz
fdiv
pop
roll
js
and
out
inc
pop
push
xor
hlt
push
dec
repnz
push
cmpsb
lret
mov
push
enter
stc
jnp
clc
leave
xlat
mov
insb
push
aas
fidivs
into
fistpll
adc
mov
andb
cmp
hlt
sti
push
push
or
sbb
in
adc
pop
ja
je
pop
stc
sahf
xchg
aas
push
ss
aam
cld
cmp
out
add
popf
pop
sub
rorl
adc
outsl
test
push
negl
mov
aad
jns
icebp
jge
or
inc
cmp
jecxz
fwait
dec
les
leave
mov
sub
mov
push
inc
xchg
mov
or
inc
or
pop
pop
mov
andnps
jbe
lods
fadd
jne
icebp
test
ljmp
add
add
fwait
int3
cmpsb
ret
popf
and
xchg
jg
leave
dec
mov
icebp
mov
lods
popa
sti
add
in
int3
jns
sub
fwait
lea
clc
mov
adc
fdivp
adc
imul
xchg
in
xchg
cmpsb
outsb
push
out
xchg
sub
cmpsl
jbe
data16
cmp
pusha
mov
cmp
imul
dec
pusha
add
movsb
jne
pop
out
jmp
mov
pop
adc
pop
stos
add
cmp
inc
xchg
push
xor
xchg
mov
adc
pop
and
loope
xchg
into
add
pop
gs
rcrl
cwtl
push
sbb
mov
popf
jno,pn
sbb
xor
sub
adc
push
fnstsw
cmp
mov
fsts
flds
fcomps
popw
mov
orb
mov
pusha
fmuls
in
mov
shl
mov
push
roll
or
cmp
adc
jb
mov
scas
cmp
mov
sahf
adc
ds
xchg
shlb
xchg
jp
mov
popa
leave
dec
xor
mov
push
ret
imull
lea
adc
les
in
inc
xchg
scas
stos
movsb
xor
mov
jl
shrb
andl
pop
lret
adc
xchg
xchg
sbb
pop
pop
mov
mov
xor
addr16
ret
pop
sti
call
pop
stos
negl
xchg
cmp
ljmp
bnd
lret
push
mov
je
add
stos
xchg
jl
inc
or
dec
hlt
hlt
icebp
test
int
adc
mov
or
mov
xor
inc
and
xchg
jnp
outsl
and
and
mov
xor
fstps
push
ds
pop
je
mov
mov
lea
sbb
ret
inc
cmp
adc
fidivl
dec
in
fidivl
call
clc
xor
jbe
out
scas
add
imul
dec
inc
mov
add
push
cmp
fs
icebp
mov
jge
movsl
and
mov
stc
adc
xlat
dec
jns
lcall
xchg
pop
arpl
addr16
sbb
pushw
pop
inc
movsl
sub
pop
inc
loop
lock
mov
jge
xor
jmp
pop
mov
jge
xchg
imul
popa
mov
imulb
sar
outsl
push
clc
mov
lea
push
fisubl
sbb
sbb
sahf
stc
cmp
jbe
cwtl
loope
and
cmp
pop
movsl
scas
jle
addr16
test
xchg
xor
jne
and
mov
pop
dec
cmp
outsl
sbb
lds
add
dec
aas
cmp
repz
lahf
mov
fwait
sbb
push
out
aas
jle
stc
es
outsl
mov
loopne
adcl
xor
lods
jne
cli
in
sbb
mov
out
xchg
jno
adc
aas
xlat
inc
lock
ds
cld
mov
lds
fimuls
jbe
push
jmp
out
fcoml
xor
pop
repnz
dec
mov
orl
movsl
in
sbb
and
scas
add
xchg
out
aaa
and
jnp
and
mov
push
faddl
and
sub
jmp
xorl
push
stos
leave
cmp
ficoml
add
data16
cld
stos
inc
mov
mov
cmc
roll
jmp
decb
pop
inc
cmp
jnp
mov
jo
sbb
loop
ja
cltd
fimuls
and
call
sahf
js
push
loope
adc
sbb
cmp
stos
sbb
or
repnz
out
in
or
mov
mov
in
or
outsl
in
loopne
loope
popa
mov
dec
adc
add
or
inc
sub
cli
test
cmc
lcall
xor
jp
push
sbb
push
cmp
mov
movsl
lret
test
cmc
lcall
xor
bound
popa
push
lds
mov
movsl
into
xchg
cli
test
cmc
sahf
in
aad
lds
mov
add
or
inc
ljmp
test
movsl
ret
js
clc
xlat
enter
adc
cwtl
hlt
ljmp
push
dec
addr16
ja
pop
cmp
sbb
sbb
call
out
imull
cmpsl
cwtl
iret
push
addr16
ja
imul
or
sbb
call
out
imull
cmpsl
cwtl
mov
inc
js
sub
push
inc
sub
inc
cwtl
mov
sahf
test
cwtl
xchg
jae
stos
cmp
movsb
jnp
inc
scas
or
and
lods
pop
pop
lods
xchg
push
mov
xchg
mov
adc
adc
pop
fiadds
daa
loopne
insl
stc
fcmovb
lea
pop
add
push
cmpsl
daa
xchg
adc
pop
mov
clc
repz
and
xchg
push
mov
mov
enter
sbb
pop
xchg
cmpxchg
mov
cwtl
xchg
add
pop
jae
push
push
pop
lea
out
adc
pop
inc
negl
dec
xchg
jo
pop
repnz
push
scas
add
lahf
aad
pop
pop
cmp
sbb
mov
clc
xlat
enter
test
mov
mov
inc
js
dec
addr16
ja
pop
cmp
or
sbb
ret
mov
imul
loop
dec
loope
jecxz
ds
add
pop
inc
je
gs
insb
jns
mov
nop
test
into
loopne
cmp
adc
dec
push
pop
jno
pop
sahf
adc
stos
xchg
clc
xchg
jmp
cmpsl
cwtl
mov
inc
js
dec
addr16
ja
pop
cmp
or
sbb
call
out
imull
cmpsl
cwtl
mov
inc
js
dec
addr16
ja
pop
cmp
or
sbb
call
or
js
sub
scas
and
lret
daa
add
xchg
push
popf
mov
sub
shrl
shl
mov
sbb
incb
jmp
adc
add
ljmp
xchg
es
fucomip
test
jp
rorb
pop
aaa
pop
pop
lods
nop
inc
pop
cmp
lea
jne
cmpb
xchg
outsl
daa
fcmove
xor
or
leave
imul
loopne
fs
mov
xor
mov
pop
or
sbb
hlt
ja
push
xor
jp
jle
lret
pop
bound
lods
not
fidivs
mov
ss
xor
inc
inc
out
add
test
and
pusha
jl
cmp
and
cmp
jecxz
jl
mov
mov
mov
pop
outsb
stos
jg
inc
and
imul
adc
sbb
mov
insb
adc
leave
or
pop
out
ss
lock
lret
jp
rcrb
jmp
or
xor
xchg
cmp
xchg
fisttps
mov
ss
int3
mov
in
inc
jbe
cmp
mov
mov
mov
and
push
cmp
mov
push
and
push
mov
cmp
js
fisubrs
add
and
sub
test
div
leave
pop
or
es
mov
inc
dec
sub
in
jl
pop
and
xorb
mov
gs
js
push
mov
and
dec
pop
std
jo
ret
in
or
insb
mov
mov
lcall
loopne
cmpsb
shrl
or
add
pusha
iret
rcll
mov
lahf
and
or
jb
inc
xor
shrl
mov
icebp
clc
sbb
mov
xchg
push
jmp
sti
stos
fstl
sahf
xchg
lcall
mov
xchg
sahf
adc
mov
push
push
stc
daa
pop
cmp
xchg
sbbb
push
push
sub
push
xor
push
or
mov
ret
sub
sbb
xchg
xor
add
test
xchg
stc
cmpsl
mov
mov
and
mov
add
xor
out
cld
sbbl
fnstsw
jae
dec
and
xor
ret
mov
cmp
rcll
fucomip
shll
imul
xlat
xor
aas
lcall
imull
and
sahf
add
fisttps
leave
adc
push
out
popa
pop
addr16
fisubs
aaa
mov
adc
mov
inc
dec
aas
dec
add
adc
mov
inc
push
jl
aam
out
push
popf
adc
and
push
sbb
inc
mov
mov
jno
jne
lea
stos
push
or
ss
movl
dec
arpl
rcrl
leave
inc
mov
aad
sbb
cmp
jo
jge
fldenv
jp
pop
add
fidivl
cld
jmp
xor
jo
test
jle
mov
hlt
mov
ret
adc
sahf
scas
add
adc
inc
pusha
mov
insl
xor
fmul
or
cmp
pxor
sbb
push
add
and
xor
shl
out
adc
popa
lahf
std
pop
pusha
pop
mov
out
fidivrs
cmp
add
mov
out
xchg
ds
cmc
iret
sbb
cli
sub
push
xchg
aas
test
lret
cmp
insb
cld
sub
and
hlt
ret
xor
dec
ljmp
xor
jb
loope
int
loopne
es
xchg
sti
mov
adc
pop
lret
and
push
xor
xlat
sar
test
std
cwtl
enter
sbb
xchg
pop
cmpl
popf
dec
sbb
scas
and
inc
repz
shll
cltd
hlt
shll
popl
test
mov
jno
and
lret
mov
sub
hlt
and
mov
fbld
andl
icebp
aaa
orl
and
mov
mov
inc
test
mov
aad
test
aaa
loope
mov
insl
mov
aad
lcall
test
mov
fsts
mov
mov
js
lods
sub
lcall
not
imul
adc
jecxz
push
shll
push
adc
push
ret
imul
dec
dec
mov
xchg
imul
add
in
mov
push
ja
xor
mov
push
leave
push
cmp
or
jo
cmp
pop
jb
and
and
push
sbb
fcoms
dec
pushf
jg
mov
aam
cmp
idiv
out
xchg
pusha
adc
mov
rorl
jecxz
and
es
adc
adcb
pop
pop
scas
mov
jo
xchg
pop
inc
push
push
cmp
or
clc
enter
mov
aam
popa
outsl
fldt
cmc
fisubrs
ret
sub
dec
das
push
data16
aaa
mov
enter
mov
push
les
movsl
dec
into
cmp
inc
jl
and
inc
loope
stc
mov
sarl
fdivl
add
pop
popf
fidivrl
dec
out
rol
xchg
cli
mov
jmp
and
mov
stos
out
ljmp
int3
in
mov
ret
push
bound
lea
movsl
sti
cmpsl
xor
in
lds
int
movsb
int
sub
popa
cmp
test
mov
roll
loope
idivb
clc
jno
push
sub
negb
mov
sbbb
push
add
lock
push
pop
nop
sub
mull
cmp
xchg
out
ret
xor
rclb
add
sti
xlat
xchg
ds
lods
jecxz
scas
outsb
cli
sub
jmp
fadd
hlt
pop
push
dec
adc
inc
shlb
pop
xchg
jmp
fcompl
lahf
pop
ljmp
push
xchg
scas
sar
push
mov
shlb
jmp
idivb
sarb
push
and
add
jae
push
pop
add
cmp
imul
mov
dec
daa
arpl
mov
and
adcl
dec
daa
outsb
xchg
ljmp
sbb
popf
pop
test
inc
lock
lods
and
push
xlat
cmp
daa
dec
xchg
xor
dec
adc
xor
cmpsl
lcall
mov
mov
inc
xchg
movsl
cmp
mov
aad
push
xchg
stos
or
and
pop
mov
repz
cwtl
mov
sub
pop
lret
dec
mov
mov
push
pop
insb
out
mov
mov
andl
adc
mov
cwtl
push
cwtl
loopne
rorl
pusha
ja
cmp
sbb
xor
adc
cli
pop
jecxz
add
sbb
idivl
jp
jbe
mov
inc
pop
xchg
xor
jnp
pop
mov
xchg
shrb
inc
mov
movsb
xor
cmp
shl
pop
and
loop
or
enter
pop
push
inc
sti
jl
out
lret
adc
arpl
lret
fistpl
push
xchg
pushf
push
mov
push
std
lock
cmp
sbb
lods
sbb
insb
bound
insl
aas
pop
mov
jnp
out
mov
inc
mov
sbb
inc
jecxz
mov
push
mov
mov
mov
repnz
lcall
rcrb
pop
xor
and
or
dec
push
jp
out
add
lret
jmp
lock
pushf
cs
ds
call
fbld
popf
sub
cmc
arpl
inc
aad
outsb
shrb
arpl
mov
in
mov
xchg
push
mov
and
sahf
pop
jg
iret
fisubrl
popa
mov
or
pop
imul
cli
xor
push
jne
add
sub
outsl
sahf
dec
lds
mov
fidivrs
cmp
setl
cmp
add
add
jge
mov
subl
jg
out
adc
pusha
sarb
ja
dec
mov
frstor
mov
out
aam
jbe
xlat
adc
and
sbb
jmp
sub
inc
outsl
cli
or
mov
jns
mov
cmpsl
dec
pop
xchg
cmp
mov
jge
cmp
lea
pop
fildl
and
lds
ljmp
lock
lret
insb
pushf
cmc
cmp
popa
sub
jl
pop
into
dec
into
mov
mov
push
adc
jae
pushf
ret
ja
popf
or
pop
iret
push
or
roll
jge
sti
loope
jle
movsl
mov
mov
sahf
xchg
cmc
test
inc
cld
dec
cmp
aaa
cmp
dec
add
idivb
add
lods
pop
jecxz
xor
loopne
cmp
inc
mov
pop
je
vhaddpd
or
cmp
inc
push
sbb
mov
stos
in
sbbl
jns
push
das
mov
addr16
fisubl
or
inc
and
or
jns
mov
mov
sahf
jle
cltd
sub
pop
push
cltd
addb
mull
dec
push
push
rcll
mov
jnp
mov
lret
movl
inc
push
dec
adc
addb
push
gs
adc
sub
loopne
popa
dec
pminub
ss
mull
jns
fstl
int
adc
adcb
pop
add
push
scas
cmp
pop
hlt
jg
xor
subb
sub
adc
jnp
scas
emms
sbb
shll
push
into
mov
pop
jge
xchg
pop
out
sbb
sbb
je
sbb
push
inc
xchg
mov
addr16
pop
test
xchg
inc
add
push
jae
rolb
les
inc
stc
mov
aaa
xor
inc
outsb
or
fdivrs
arpl
push
cmp
addr16
sbb
pop
popl
push
mov
insb
cmpl
cmp
cli
ds
push
xchg
pop
dec
sbb
jle
mov
nop
inc
mov
leave
in
jnp
cmp
mov
cmc
jp
rorl
adc
dec
sti
cmp
test
rolb
dec
jp
jmp
add
mov
cmpsl
mov
insb
lock
dec
xchg
xor
xchg
stos
imul
rcrb
pop
sbb
cwtl
shl
cwtl
fnstenv
sbb
ja
out
dec
sbb
jnp
in
and
push
fwait
mov
cs
xchg
add
sbb
std
adc
in
pop
and
mov
insb
add
sub
fs
jg
cmp
test
test
in
pop
jno
or
pop
adc
ret
xchg
popf
je
xlat
nop
push
jb
bound
mov
int
add
mov
fmul
hlt
sbb
mov
mov
mov
rorl
mov
std
push
jae
into
adc
outsl
sub
hlt
add
xlat
cmc
add
xchg
or
mov
pop
cmp
pop
xor
outsl
or
popf
dec
cmp
mov
inc
and
gs
xor
push
shl
and
fucomp
inc
jno
das
mov
aaa
fisttpl
adc
insb
adc
je
out
out
dec
mulb
lds
jbe
mov
pusha
hlt
sbb
nop
lcall
fdivrs
addb
pop
cld
out
dec
adc
movsb
std
js
movsb
cmpsb
inc
jp
pop
incl
std
icebp
push
test
jno
stos
or
push
out
aas
xlat
nop
mov
testl
push
xchg
fs
xor
in
adc
imulb
jne
fldt
fidivs
stos
xchg
je
or
iret
jae
call
sub
imul
inc
inc
lds
xor
xchg
mov
push
mov
xchg
sub
mov
pop
mov
jg
shl
call
mov
pop
sub
aad
ljmp
dec
ljmp
mov
and
inc
xchg
jae
in
test
insb
inc
int
or
mov
data16
jle
loop
jge
scas
loope
or
test
rcll
pop
pop
mov
inc
xchg
mov
xchg
push
xchg
test
leave
push
imul
pusha
push
mov
pushf
and
pop
add
inc
mov
imul
leave
and
out
push
idivl
int3
dec
inc
cltd
push
mov
mov
xor
jmp
icebp
xchg
or
filds
push
dec
ficompl
sub
test
mov
stos
fisubs
mov
std
scas
loope
fbld
popa
inc
jge
push
mov
xor
mov
aas
lea
mov
repnz
movsb
int3
je
add
mov
and
lcall
mov
push
out
mov
in
add
add
lds
add
or
dec
mov
jmp
out
xchg
fnstsw
add
and
mov
lcall
fadds
stos
cmc
mov
cltd
jmp
out
jo
jle
loope
jnp
std
insb
rcl
loop
std
loop
cmp
out
and
adc
sbb
adc
sub
push
sarb
push
fstp
test
das
pushf
test
lret
cmp
mov
mov
in
cmpsb
stos
daa
fnstcw
shrb
in
xchg
lahf
imul
mov
test
mov
mov
jno
imul
mov
mov
dec
insb
pop
adc
push
lcall
push
or
fsubrs
sbb
push
sbb
jg
lret
jns
sbb
or
xor
idivb
dec
cmp
push
jge
inc
lahf
gs
sub
outsl
aaa
xor
loope
out
aam
sahf
lret
in
out
adc
mov
movsl
and
sub
iret
cli
sbb
mov
filds
in
clc
xchg
and
jp
mov
sti
sbb
sub
jae
jg
andl
push
je
jle
test
cmp
jns
push
or
push
mov
sbb
stos
aad
vmovaps
sahf
lret
mov
shlb
adc
in
ja
ss
out
inc
or
mov
loopne
dec
and
xchg
sbb
addr16
xchg
pop
sub
mov
dec
xchg
mov
cmp
push
aaa
sub
not
push
adc
or
popa
f2xm1
add
and
mov
data16
pop
jo
ja
int
test
mov
dec
mov
repz
ss
dec
jns
xchg
inc
aad
dec
xor
jmp
add
jns
nop
ds
xor
cmp
pop
pop
in
das
orl
dec
xchg
pop
mov
js
out
push
mov
jp
test
arpl
jle
cmp
out
dec
lock
dec
sbb
jbe
jne
repz
add
inc
push
dec
sub
jae
mov
push
fcmove
push
lods
mov
hlt
push
orl
outsl
and
jbe
adc
cmpsb
jle
insl
outsb
es
mov
dec
lcall
outsl
repnz
repz
sbb
ret
adc
addb
dec
stos
push
jecxz
adc
xor
pop
pop
or
sbb
movsb
push
cld
fisubs
dec
xlat
jg
adc
fwait
and
leave
lods
das
adc
xchg
add
push
pushf
pop
mov
adc
call
xor
jnp
rcrl
sarb
xchg
pusha
xlat
repnz
iret
and
push
lret
xchg
enter
pop
cltd
sub
rcr
cwtl
cmp
add
xor
cmpsl
xor
popf
mov
push
cmpsb
sbbb
fidivl
inc
and
push
xchg
jne
or
dec
mov
jmp
cmp
jb
sub
std
bound
aas
push
mul
push
stc
lahf
mov
jo
jg
jle
and
jp
inc
ret
shlb
push
pop
rcll
mov
cmpsb
pop
add
jns
mov
push
xchg
mov
jne
movsb
and
out
repz
int
cld
cmp
push
push
das
or
into
xlat
mov
lock
cli
mov
out
pusha
jecxz
add
outsb
adc
xor
stc
ret
sti
cmp
jns
inc
xor
call
or
insb
cmc
shrb
insb
push
rcrb
pop
add
sarb
ret
inc
jecxz
sub
fnstcw
push
test
pop
movsb
lock
sarb
jb
adc
push
dec
out
imul
add
push
pop
pop
adc
outsl
lret
mov
sbb
or
lods
or
test
lcall
jne
inc
mov
xlat
bswap
jns
mov
jno
cwtl
pusha
pop
and
repz
test
dec
sti
jne
pop
mov
mov
push
into
inc
jp
pop
xchg
outsb
adc
fisubrs
sub
xor
test
in
add
pop
push
ja
test
xchg
cmp
out
test
push
into
std
stos
and
ja
arpl
mov
mov
jmp
or
pop
xor
ss
mov
or
xchg
xchg
sbb
dec
sahf
cmp
xchg
fisttps
aas
rorl
leave
mov
das
xchg
loope
dec
pop
lods
lahf
cld
xchg
stc
loopne,pn
mov
sub
jecxz
mov
sub
stos
adc
mov
sti
pop
jns
iret
fcomps
or
xchg
sub
jb
add
xchg
xchg
sbb
fcoms
loop
clc
pop
pusha
aaa
andb
add
mov
mov
rcrb
test
xlat
dec
aam
pop
cld
mov
sbb
fsubs
inc
lock
inc
mov
out
dec
and
ja
ss
negl
sub
and
sbb
sbb
sbb
jecxz
inc
leave
stc
aaa
dec
push
cld
and
lret
andb
and
loope
rcr
into
xor
push
push
push
outsb
pop
cmp
adc
ds
in
push
mov
and
adc
pop
xchg
mov
xchg
xchg
sub
ss
pop
adcl
ficompl
mov
out
lahf
pop
cmp
pop
icebp
inc
push
cmp
out
aas
mov
dec
xchg
push
and
repnz
dec
add
xor
iret
les
mov
jns
adc
add
jns
sbb
xchg
xchg
mov
scas
rcr
lret
ror
rcrb
cmp
sbb
aam
decl
jge
xor
imul
sbb
xor
pop
jne
fs
jl
test
inc
nop
call
sbb
push
mov
adc
scas
lods
arpl
aam
sbb
imul
ds
sub
jno
push
lods
xor
mov
add
cltd
cltd
mov
jge
popa
mov
lcall
scas
mov
insb
or
inc
cwtl
dec
pop
movhps
sub
imul
daa
pop
ja
jbe
in
stc
jno
and
notb
xlat
jle
subl
mov
arpl
mov
push
loope
ss
das
cwtl
adc
xor
rolb
push
push
inc
test
in
push
rorb
out
iret
ret
leave
xor
out
sbb
iret
fistl
cmpsb
iret
lret
fs
imul
js
inc
inc
jae
pop
or
xchg
shl
mov
jg
call
loopne
add
or
mov
and
mov
and
rorb
shlb
test
les
cmc
adc
mov
sub
mov
out
sbb
loop
sub
and
jg
lods
test
or
push
inc
mov
mov
mov
xor
imul
std
mov
les
jne
je
add
dec
push
pop
mov
aas
stos
outsb
aas
inc
inc
cmpsb
int
in
cld
and
fiaddl
push
outsl
sbb
and
xchg
dec
xchg
mov
sub
mov
pop
mov
mov
mov
inc
push
add
xor
in
repz
jp
inc
pop
mov
push
mov
add
jmp
xchg
int3
sbb
cli
jne
pop
jp
push
stos
adcb
jmp
or
ds
stos
push
mov
int3
hlt
stc
test
cmp
xor
iret
call
shl
cmp
repz
jne
sbb
xor
mov
in
dec
mov
dec
mov
into
bound
adc
sbb
push
jecxz
adc
not
xor
jle
dec
add
inc
xchg
movsl
mov
pushf
out
jne
push
hlt
lret
xor
nop
sub
ret
sti
clc
cmp
gs
cvtdq2ps
dec
adcb
mov
mov
stos
cmp
jmp
cmp
mov
jbe
js
mov
fwait
int3
jnp
mov
pop
and
jns
outsb
dec
jbe
fmul
mov
cmp
sbb
shrl
rcl
lahf
dec
adc
jnp
push
test
fdivrs
xchg
xchg
ljmp
push
dec
ljmp
or
mov
pop
data16
sarb
adc
loope
inc
mov
cli
push
sbb
mov
loopne
pop
test
push
dec
pop
lret
mov
test
in
push
push
or
std
mov
imul
or
icebp
jmp
cmpsb
mov
push
mov
sbb
fwait
mov
sub
nop
inc
mov
pop
enter
outsl
insb
test
cmp
cwtl
jmp
mov
shrb
cmpsb
stos
test
xlat
jecxz
fdiv
test
mov
mov
inc
js
dec
addr16
ja
pop
cmp
or
sbb
call
out
imull
cmpsl
cwtl
mov
inc
js
dec
addr16
ja
pop
cmp
or
sbb
call
out
imull
cmpsl
cwtl
mov
inc
js
dec
addr16
ja
pop
cmp
or
sbb
jmp
out
imull
cmpsl
cwtl
mov
inc
js
loop
pop
add
mov
neg
out
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
fldl
inc
mov
inc
int3
sti
pop
add
or
add
add
or
add
add
add
add
add
mov
xchg
adc
add
add
add
add
add
add
add
add
add
iret
add
add
add
add
add
aas
add
add
push
add
cmp
add
add
xor
popf
add
add
add
add
add
add
add
add
add
addb
add
add
add
lret
add
pop
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
fadds
int
testl
or
imul
add
add
imul
jno
mov
add
add
add
add
jbe
fadds
flds
clc
add
add
add
add
add
add
add
sbb
adc
add
add
out
add
add
test
add
and
push
add
dec
add
test
aam
test
add
add
popf
add
add
add
add
xchg
add
add
add
push
add
add
jae
cmp
add
push
add
add
add
pop
add
add
add
add
add
cmpsl
add
testl
add
pop
add
add
add
and
and
lret
add
add
add
add
add
jle
add
stc
add
add
add
add
add
iret
add
add
add
add
add
add
add
add
add
sbb
mov
mov
add
cmp
jecxz
fiaddl
pop
add
add
add
add
add
add
add
add
inc
add
add
add
sub
add
add
add
add
add
add
add
add
sbb
or
push
add
sbb
add
add
add
add
fadds
dec
add
leave
add
add
add
add
add
aaa
add
add
test
outsl
add
cmp
add
adc
add
add
add
or
adc
add
add
add
add
add
test
add
add
add
add
add
add
add
add
add
add
add
push
add
add
push
add
or
add
add
xor
test
add
adc
pop
add
push
add
add
add
jbe
inc
add
add
fldl
incl
add
out
add
add
rolb
sbb
jge
aas
add
add
add
and
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ret
add
cmp
rolb
ja
in
or
dec
add
clc
add
add
add
xchg
add
pop
add
add
out
jo
push
sbb
mov
gs
cmpsl
bound
pop
pop
mov
mov
add
ja
repz
popa
in
addr16
stc
incl
roll
mov
not
mov
es
jle
sub
pop
gs
xchg
dec
addr16
inc
shl
lahf
pop
test
push
xchg
repz
je
xor
adc
outsl
dec
int
xor
xor
repnz
push
inc
sub
std
sub
iret
xor
mov
inc
add
sub
std
cltd
outsl
sub
fwait
inc
jecxz
imul
mov
cltd
ljmp
dec
mov
es
jp
adc
xchg
into
mov
mov
jns
jl
popa
sti
xor
cmp
addb
into
sub
das
test
out
inc
lahf
in
push
mov
mov
dec
mov
inc
push
pop
fdivrl
push
paddq
out
mov
pop
movsl
dec
pcmpeqb
jae
adc
faddp
pop
push
mov
xor
es
repz
negb
fistl
jae
test
jae
loopne
imul
bound
dec
or
shrl
in
mov
mov
jp
sub
adc
cmp
loop
fisubrs
cmpsb
cli
arpl
adc
mov
dec
pop
shlb
ljmp
ss
imul
iret
lret
add
lea
pop
pop
jb
push
adc
add
push
mov
dec
and
inc
push
cmc
ja
es
dec
xlat
imul
aaa
jbe
in
or
or
test
mov
lea
dec
xchg
adc
pushf
jge
cmp
sbb
jnp
leave
stos
in
xor
shll
int3
lods
dec
loop
xor
das
lods
mov
sbb
pop
and
mov
mov
adc
addr16
call
or
jo
cld
inc
callw
lahf
jecxz
xor
dec
mov
fnstsw
cmp
test
dec
pushf
out
xchg
shrb
push
cmpsl
mov
loop
aad
xor
pop
push
mov
enter
jo
or
andb
cmp
cmp
pop
push
inc
hlt
adc
repz
loop
adc
dec
inc
stos
dec
cmp
ret
movsl
fnsave
incl
add
cmp
inc
xchg
jmp
and
cmp
dec
out
pop
hlt
aas
and
mov
icebp
loop
aaa
inc
push
loope
loop
cld
sbb
repnz
inc
loope
jp
sub
mov
in
fisttps
jno
xlat
pop
shrb
jp
iret
lods
fdivrp
iret
pop
fs
jnp
fldl
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
