adc
decl
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
imul
gs
xor
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
push
push
push
push
call
push
lea
push
push
call
add
leave
ret
repnz
iret
lahf
decl
loop
mov
dec
pop
imul
jp
outsl
sbbb
das
mov
scas
iret
lahf
decl
lahf
fistpll
das
dec
xor
outsl
jg
or
gs
das
sbb
dec
imul
xchg
mov
pop
inc
insb
jns
outsb
sbb
xor
dec
cmp
xchg
mov
je
stos
dec
fistpl
or
sub
adc
insb
movsb
out
test
sarb
inc
cmpsl
testb
scas
out
adc
dec
push
mov
das
in
cli
jg
push
fmulp
ret
inc
mov
mov
adc
movsb
stos
mov
bnd
rorb
adc
loop
lods
aas
adc
adc
mov
fmulp
int
sub
lock
and
dec
shlb
pusha
add
add
cli
fwait
mov
jmp
or
mov
cmp
pusha
pop
sub
adc
ss
aaa
xlat
and
cli
aaa
outsl
out
sbb
scas
fistps
lahf
stos
fistpll
mov
jbe
pop
jno
pop
and
fnstcw
xchg
popf
lcall
xor
dec
jnp
or
jp
or
mov
mov
lahf
mov
mov
mov
sub
arpl
outsl
or
sub
pop
int
pushf
iret
out
fwait
into
stos
mov
mov
das
dec
pop
jg
outsl
jg
outsl
maxps
dec
das
mov
decl
fistpll
das
dec
pop
jg
outsl
jg
outsl
maxps
dec
das
mov
js
in
mov
adcb
jno
mov
sahf
mov
sarb
jmp
cld
int3
xor
and
push
fisubl
add
lods
push
xor
sbb
push
icebp
xchg
cmpsl
xlat
mov
lods
outsb
jge
loope
iret
fidivrl
movsb
xchg
dec
inc
sub
pop
pop
inc
cmpxchg
dec
sub
sbb
movsl
lret
gs
and
stc
mov
mov
pushf
push
js
jge
cli
xorl
add
lea
xor
int
in
sahf
add
lds
push
stos
adc
sub
jbe
cli
cmc
outsl
mov
aam
add
inc
push
leave
mov
rolb
movsb
cmpsl
mov
jmp
cmp
nop
scas
dec
and
insl
xor
push
ss
and
jo
add
shld
dec
inc
xchg
aaa
and
rcrb
and
mov
cmp
int
les
jge
rclb
sub
dec
loopne
aad
cltd
add
stc
jecxz
sub
nop
sub
inc
fisubrl
rcr
mov
cltd
rcrb
loop
aaa
cwtl
lods
in
inc
ret
mov
loopne
pusha
sbb
jno
adc
pop
enter
subl
js
shlb
xchg
jae
repnz
inc
lods
pop
mov
mov
test
mov
idiv
cmpsb
mov
enter
sar
pop
mov
add
cmpsl
dec
in
mov
sub
and
adc
inc
xchg
mov
adc
insl
push
dec
aaa
pop
sbb
inc
repz
cmpl
test
popf
jae
push
mov
adc
pop
and
jle
int
mov
lds
aas
fistpll
ret
and
jg
mov
sub
cmp
nop
jg
push
jecxz
xchg
mov
sbb
rcl
pushw
push
jb
cld
sarl
lea
cwtl
adc
jl
stos
push
mov
sbb
int3
jmp
push
cmp
in
js
and
push
fldl
and
mov
movsl
pop
subb
fs
jmp
sbb
xchg
stos
in
or
add
lock
xor
jmp
jmp
xor
inc
mov
dec
sub
adc
inc
mov
fsts
jo
pop
loope
push
jno,pt
jae
lret
pop
rclb
mov
mov
repz
frstor
rcll
fimull
jb
sahf
and
or
pop
movsl
mov
jge
js
mov
jae
xchg
mov
push
inc
fstps
xchg
jge
fld
pop
stos
aad
fldenv
push
xchg
flds
and
neg
ja
loop
fwait
adc
inc
dec
mov
sti
sub
hlt
loopne
dec
cmp
mov
pusha
sub
xor
or
jl
inc
arpl
out
mov
scas
xorl
xchg
xor
into
xchg
sbb
outsl
jae
mov
xchg
adcb
jae
adc
inc
les
pop
cld
xor
outsb
jle
decb
cltd
mov
xor
and
repnz
rcrl
mov
out
sbb
je
mov
adc
aad
pushf
mov
lods
cmp
jmp
jno
cltd
ljmp
ret
test
mov
ret
mov
jmp
mov
cmp
and
or
lret
call
lret
mov
jbe
and
jmp
test
adc
das
push
loope
dec
jl
lods
fildll
fisubrl
out
imul
insb
popa
xchg
push
pop
sub
push
mov
pcmpeqw
orl
add
aaa
cmp
ds
mov
mov
dec
or
fucomp
mov
rcrb
mov
jecxz,pn
cmc
cmpsb
dec
rcl
xchg
mov
decl
sub
pop
outsb
jb
pop
inc
cmp
mov
push
es
popa
out
pop
dec
test
sub
xchg
dec
dec
lret
sar
cmp
sub
enter
sub
ret
pop
mul
outsl
sub
sbb
and
push
dec
popa
pop
push
cmpsl
jae
leave
out
xchg
jae
sbb
dec
mov
sti
and
movsl
jmp
mov
pop
sahf
push
adc
and
leave
test
mov
dec
push
pop
test
and
mov
shrl
mov
push
or
jae
fsubl
imul
insb
xor
hlt
sbb
xchg
pop
mov
xor
cmp
mov
and
ja
rcrl
dec
adc
les
xchg
addl
xchg
js
push
notb
andl
mov
outsl
mul
addl
int
jb
nop
data16
mov
jae
or
mov
pusha
adc
pop
xor
or
dec
inc
cld
dec
sbb
lods
pop
test
outsb
xlat
mov
xchg
ljmp
push
xchg
or
cmp
sub
test
dec
sbb
cmpsb
cmp
pop
xchg
rcl
mov
outsl
gs
lods
cmpsl
int
mov
shrl
sbb
addr16
stos
pop
arpl
cmc
or
or
mov
sbb
mov
shlb
ret
mov
pop
cmp
in
decb
dec
mov
push
ret
push
movsl
loopne
addr16
and
insl
adc
xor
flds
out
cmp
lods
pop
mov
cmp
icebp
or
xor
cs
add
dec
inc
imul
and
xor
jecxz
push
sub
cli
mov
or
cmp
loop
arpl
mov
mov
jl
sarl
push
pop
notl
xchg
jno
pop
adc
mov
sbb
xor
push
mov
iret
pop
rcrl
lcall
mov
inc
mov
out
dec
addr16
enter
mov
fldt
fcmove
xor
stc
inc
jmp
lret
mov
mov
sub
sub
inc
push
jo
jo
or
cmp
cmp
aaa
lds
div
and
cmp
pop
cmc
stos
divl
pop
mov
les
pop
and
mov
insb
rclb
lods
aaa
mov
adc
pop
dec
sarb
icebp
inc
pop
es
sub
sarl
pusha
ds
sub
es
cltd
inc
xchg
fimuls
sbb
inc
mov
pop
lret
dec
ja
push
fdivrp
xchg
dec
pop
inc
cmp
push
inc
daa
xchg
adc
jmp
icebp
jb
call
mov
mov
mov
imul
ljmp
pusha
repnz
mov
cli
sahf
pop
pop
pusha
or
inc
lret
inc
and
mov
pop
loope
inc
dec
jo
repnz
jnp
sub
stos
push
mov
movsb
pop
jbe
outsl
push
lds
fnsave
push
ds
lahf
jge
jae
xchg
int
dec
xchg
in
mov
adc
mov
jo
push
test
mov
mov
mov
call
inc
sbb
or
insb
int
mov
sub
std
adc
push
mov
xlat
fstps
xchg
enter
je
es
sub
inc
fstl
dec
mov
dec
ja
mov
call
add
or
loop
mov
lods
cmp
jae
out
ret
cld
div
adc
lds
cltd
mull
je
dec
lea
ja
rorb
cmp
cld
insb
mov
push
xor
cmp
pop
mov
es
les
movsl
xor
test
xor
mov
adc
jmp
orl
add
xor
mov
ja
sti
les
jb
cmp
and
lock
jmp
add
sbb
movsl
idivl
rolb
dec
ss
or
out
test
mov
mov
ss
jl
jp
call
in
sbb
jecxz
push
gs
leave
cmc
pop
cld
xor
pop
data16
es
xchg
cmc
in
xchg
int
jo
loop
rcrb
gs
mov
mov
mov
mov
shll
popa
adc
push
dec
aam
js
sbb
inc
ljmp
cmpsl
lcallw
sahf
arpl
jno
xchg
jae
pop
mov
sbb
lods
lret
jmp
fdivr
bound
inc
bound
ja
pusha
sbb
push
lret
xchg
decl
movb
jmp
mov
aam
jle
mov
adc
or
movsl
test
inc
jae
iret
out
adc
jb
mov
test
call
push
fsub
mov
loopne
jmp
lock
cwtl
int3
push
mov
fwait
outsb
jno
adc
xchg
adc
rclb
inc
ret
push
aad
or
fstl
outsl
insb
std
pop
jl
in
adc
push
xchg
lea
xor
xor
mov
push
mov
loopne
or
es
push
sbb
push
in
ret
scas
mov
icebp
outsl
push
xor
mov
jno
add
fdivrl
mov
mov
jb
sbb
mov
arpl
fldcw
mov
push
cmc
ljmp
mov
inc
loopne
cmp
jle
imulb
icebp
fidivrs
negb
shll
pushf
cmc
mov
es
adc
jge
dec
or
push
stos
add
dec
movsb
cmp
and
mov
mov
repz
xor
in
sbb
aam
jmp
jns
loopne
insl
dec
fnstsw
jg
adc
loop
sub
adc
cmc
sbb
scas
pop
inc
mov
sti
inc
xchg
adcb
sbb
dec
gs
cli
jne
push
cmp
jl
push
test
aaa
sti
cmp
int3
test
cmp
cmc
push
lret
aad
repz
icebp
add
mov
adc
insl
int3
mov
push
in
jp
add
std
and
jecxz
pop
fs
cwtl
test
cmp
push
jg
and
and
dec
cs
arpl
mov
outsl
gs
out
lods
ror
xchg
or
pop
jbe
fwait
mov
out
aaa
jo
loopne
sbb
sub
leave
dec
js
xchg
jno
test
data16
sarb
mov
fnstenv
sbb
mov
and
mov
adc
lret
xchg
dec
cs
sti
fsubs
inc
fdivs
orb
inc
sub
lret
loope
inc
aaa
fsub
mov
popa
inc
push
mov
sbb
push
xor
clc
orb
ss
mov
adc
jnp
insl
call
in
dec
shrb
or
jne
mov
fwait
cwtl
movsl
add
add
je
imul
dec
fstpl
sbbl
popa
cmp
testb
rcl
insb
adc
pop
imul
xchg
sbb
je
xchg
and
cmp
xor
outsl
stos
dec
jo
cmc
in
inc
push
adc
mov
subl
xchg
pop
aas
loope
jb
int3
add
stc
cmp
dec
int3
cmpsl
test
bound
in
adc
push
push
sub
clc
inc
in
int3
mov
lret
je
ljmp
lods
xor
shlb
int
jnp
int3
inc
stos
fistps
ret
dec
std
popf
inc
repnz
loope
pushf
ss
mov
repnz
int
addr16
popa
dec
sbb
movhps
mov
or
cmpsb
out
inc
scas
inc
mov
adc
sbb
push
cwtl
mov
arpl
sub
jns
push
xorb
out
push
inc
xchg
clc
sbb
int
mov
jp
jo
pop
mov
scas
lock
and
cwtl
scas
rorb
dec
add
aam
push
inc
and
lods
in
icebp
dec
lea
push
test
inc
xorb
or
mov
sbb
sub
pop
cmpsb
pop
dec
push
pop
dec
mov
mov
mov
orl
jmp
pop
test
cmp
pop
cltd
and
xchg
mov
pop
sub
mov
mov
adc
outsl
jbe
push
dec
push
jp
shr
xor
mov
dec
test
pop
mov
mov
icebp
push
sbb
imul
sub
fucom
add
xchg
jno
shll
xlat
subl
xor
cmp
je
out
stc
fcmove
push
xchg
cmpsb
xchg
gs
out
push
out
inc
mov
jae
insb
xor
mov
dec
push
cwtl
or
mov
adc
mov
stc
pop
fimull
shrb
divb
addr16
dec
mov
popa
movsl
outsl
stos
dec
sahf
iret
dec
sti
adc
mov
push
out
insl
sbb
lretw
jmp
add
jne
push
dec
daa
bswap
pop
js
ret
outsl
aam
push
xchg
out
dec
in
pop
pop
aad
cmp
ret
adc
sahf
xor
inc
imul
or
mov
sub
inc
mov
add
jns
xor
pop
mov
loope
mov
outsb
sbb
mov
leave
or
ss
jo
out
sub
xchg
jg
call
inc
sti
mov
push
mov
imulb
movsb
popa
cwtl
lds
std
mov
fadd
mov
inc
dec
into
scas
cli
lret
sti
repz
cmp
inc
and
pop
dec
push
fmulp
pop
mov
stos
cmp
adc
adc
std
cmpsl
rorl
das
cmpl
fstl
lea
mov
nop
dec
lds
aad
movsb
xor
inc
lock
fwait
call
mov
push
cmc
inc
mov
fimull
sbb
jnp
xor
int3
mov
sti
jecxz
push
sarb
fimuls
jbe
into
or
clc
mov
jp
int
je
sbb
dec
cwtl
daa
xchg
dec
popf
aad
push
clc
dec
scas
dec
cld
repz
sub
mov
xlat
xlat
nop
movsb
aad
inc
lea
xor
leave
ljmp
and
fs
das
mov
roll
pop
jnp
or
gs
add
adc
sub
mov
push
jg
cmpsl
mov
adc
adc
xor
xchg
sbb
pop
popa
push
sub
rorb
jmp
xchg
sbb
xchg
cmpsl
imull
arpl
push
cmp
push
movsb
xchg
and
xor
cmp
fwait
sbb
push
out
ret
es
data16
sti
pop
mov
mov
fimull
aam
xchg
xor
sbb
popa
xchg
xchg
xchg
popf
add
dec
sub
mov
sbb
sub
mov
in
xchg
imul
sahf
lock
push
add
mov
pop
mov
lea
sahf
js
ja
pop
push
sbb
gs
outsl
mov
int3
repnz
cltd
fdivrs
adc
push
jns
fistl
fnstsw
js
dec
mov
mov
ss
nop
pop
int
cmp
insb
scas
daa
xchg
call
pop
ss
jmp
aaa
lahf
inc
inc
sub
mov
push
in
pusha
sub
shll
loopne
xchg
mov
repnz
inc
jno
cli
imul
dec
out
mov
fwait
scas
into
lret
and
sub
mov
inc
inc
lret
ds
and
cmp
aad
fisttpl
adc
pop
mov
jnp
mov
dec
pop
scas
hlt
enter
xor
je
jle
adc
imul
add
in
test
je
notl
pushf
rolb
mov
js
iret
fdivrs
iret
mov
lods
stos
or
push
add
dec
dec
pop
gs
or
inc
lods
mov
fisttps
mov
negb
sub
sub
jnp
xchg
mov
jg
push
cmpsb
or
sbb
addr16
test
std
ja
jg
or
stc
push
mov
out
inc
fs
xor
sahf
pop
scas
xchg
repnz
shlb
lods
inc
adc
sti
test
loopne
xor
cmp
bound
cmpl
arpl
push
movsb
sahf
jb
shlb
cmc
mov
add
adc
inc
jmp
enter
es
lods
lds
cs
adc
sub
ret
add
mov
inc
push
loopne
lods
pop
in
aad
lret
push
in
ja
inc
insl
add
mov
stos
mov
ja
das
push
pushf
pop
inc
adc
mov
insl
pop
mov
and
jl
mov
mov
jp
xchg
mov
xor
xor
loop
mov
test
mov
add
push
xchg
cmpsl
fsts
out
and
sub
add
idiv
mov
push
jo
pushl
mov
cmp
push
sub
xchg
rolb
pop
inc
ret
cmp
mov
sbbb
adc
out
jp
xchg
lock
popa
mov
xchg
push
cmp
mov
dec
xchg
jno
add
push
adc
iret
insl
xor
push
icebp
int3
ljmp
push
pop
mov
out
imul
sub
jae
insb
push
lods
aaa
sbb
int3
add
and
dec
or
ret
ss
sbb
bound
aas
test
sub
jo
fst
js
mov
pop
idiv
dec
les
or
push
add
sahf
pop
sbb
mov
xor
imul
xchg
sti
sbb
xor
call
xchg
ficomps
fs
inc
cmp
jle
outsb
into
popa
aas
es
or
clc
mov
aas
testl
out
jbe
xor
xor
xor
js
loop
mov
dec
sub
loop
xchg
loop
hlt
pop
adc
push
aam
cmpsl
movsb
mov
mov
popa
or
xchg
dec
xor
lods
lock
mov
negl
lahf
cs
adc
jbe
adc
cmpsl
mov
call
in
icebp
mov
into
cmpsl
testb
fdivs
pop
mov
fisubrs
popf
cltd
xchg
es
js
jge
xor
call
addl
data16
mov
pop
fcompl
cmpsb
cmpsb
lock
rcrl
xor
icebp
stc
idivl
or
inc
inc
movsb
jp
out
test
dec
sbb
std
pop
sbb
jge
push
sbb
pushf
push
in
inc
jecxz
sbb
pop
mov
mov
push
xchg
into
add
ss
rorl
mov
push
ljmp
mov
ljmp
in
vcomiss
push
mov
aaa
repnz
adc
mov
xor
lret
cs
fwait
sbb
jge
sbb
sub
adc
stos
mov
cmp
cmp
mov
sbb
inc
and
dec
ds
nop
xchg
lret
xchg
pop
lods
pop
xlat
mov
sub
and
sub
lahf
push
cmc
push
daa
pop
leave
mov
test
xchg
out
mov
jge
or
cld
orl
mov
dec
adc
cli
lods
push
mov
xor
aam
addr16
out
pop
sahf
imul
push
mov
xor
xchg
push
and
test
lcall
test
dec
xchg
xchg
sub
jecxz
test
inc
fsubrs
sahf
and
ret
cld
jl
sbb
pop
sub
enter
lds
add
mov
test
fs
push
daa
xchg
mul
stc
xchg
cld
dec
dec
xor
sbb
mov
xor
cmp
xchg
scas
fisttpll
int3
cltd
add
xchg
add
cli
jg
cmp
cs
mov
mov
xchg
inc
filds
mov
inc
pop
jne
icebp
lock
jmp
loop,pn
push
pop
cmp
jmp
mov
inc
jmp
nop
cmp
pop
notb
leave
push
fcoml
jnp
cmp
jle
movsl
xchg
clc
cmp
subb
mov
das
fildl
push
lds
lret
ja
out
les
call
push
orl
xchg
push
nop
mov
mov
lret
xchg
xor
outsl
js
jne
cmp
pop
daa
je
xchg
clc
mov
repnz
pusha
lds
daa
aaa
cwtl
and
lds
out
push
aas
subl
aam
fld
ljmp
xchg
es
fwait
test
mov
mov
dec
inc
clc
mov
xor
adc
outsb
rcll
insl
mov
int3
push
jg
das
in
push
adc
jecxz
adc
push
and
cmp
scas
dec
add
mov
aam
jecxz
insl
in
ficoms
shl
test
pop
ds
mov
mov
cltd
jne
out
mov
xchg
jg
sub
mov
jge
add
adc
xchg
cmp
out
mov
gs
cltd
in
pop
test
out
aas
push
pop
xor
xor
xor
daa
andl
lea
jnp
movsl
mov
dec
xor
jp
push
enter
mov
dec
mov
xor
enter
aam
out
dec
aad
sub
add
and
jl
jmp
or
push
jecxz
mov
aas
adc
popf
in
fsubrl
cmpl
iret
stos
movsb
xor
lret
sbb
or
and
loope
push
sub
push
jg
insb
or
xor
lcall
popa
dec
mov
or
cmp
lods
lods
or
xchg
out
lcall
iret
scas
aas
pop
das
dec
pop
jg
outsl
jg
outsl
maxps
dec
das
mov
decl
fistpll
das
dec
pop
jg
outsl
jg
outsl
maxps
dec
das
mov
decl
fistpll
das
dec
push
jg
imul
cvtdq2ps
jg
cmpsl
fildl
out
lcall
dec
outsl
aas
pop
shl
mov
prefetcht0
xchg
out
mov
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
and
xor
add
adc
push
add
and
xor
test
dec
in
hlt
sub
sbb
or
xor
add
adc
fs
push
jmp
xchg
dec
in
hlt
sub
pop
aam
and
xor
add
adc
xchg
jne
xchg
movsb
movsb
mov
testl
inc
mov
or
xor
ja
data16
and
je
iret
xchg
rorl
or
in
dec
pop
xchg
push
scas
jo
cli
icebp
sbbl
leave
push
pop
lcall
cmp
call
fdivr
mov
in
call
mov
out
jnp
inc
inc
sbb
mov
cmp
jae
mov
cmp
movsb
test
sbb
pushf
aam
repz
pop
fucomi
inc
add
sub
fistps
push
mov
sbb
sub
shl
cmp
inc
lret
pushf
cld
mov
mov
jnp
add
push
fdivrs
cmc
aam
sbb
add
adc
fs
push
or
xchg
add
pop
hlt
rol
sbb
bound
jno
or
cmp
out
in
mov
out
clc
and
pop
subb
inc
stos
push
mov
sbb
rcrl
cmp
subl
pusha
dec
lods
push
lods
insl
mov
stos
inc
fwait
push
mov
xchg
dec
in
hlt
sub
sbb
or
xor
add
adc
fs
push
mov
xchg
dec
in
hlt
sub
sbb
or
xchg
cmp
js
out
and
mov
lds
int
ret
add
cmp
inc
cmp
insl
subb
mov
jb
mov
inc
or
pusha
outsl
clc
roll
push
dec
fstl
pusha
or
dec
mov
dec
cmpsb
xchg
xchg
ds
push
jle
inc
inc
stos
addb
pop
mov
sub
ljmp
inc
xor
pop
cs
popf
movb
pop
and
adc
and
dec
fadd
mov
dec
jmp
or
es
mov
xor
push
dec
sub
dec
insb
mov
outsl
lahf
inc
sbb
cltd
adcb
idivb
cmpsb
lock
and
movntps
fld
aad
or
adc
rorb
loop
mov
es
jecxz
inc
and
and
js
outsb
lods
call
xchg
xor
push
cmp
clc
push
iret
mov
aad
les
insl
mov
dec
mov
mov
lret
ja
cmp
ret
mov
loop
rcr
shr
mov
pop
push
stos
xor
rol
daa
pop
sub
out
push
adc
xchg
lcall
pop
mov
loope
cmpb
vmovups
gs
sub
aad
je
popf
movsl
mov
mov
in
mov
lods
xorl
out
ljmp
cmp
add
lahf
movsb
test
shlb
pop
xor
dec
add
jo
mov
mov
push
inc
jo
test
nop
xchg
pop
add
sub
xor
repnz
std
and
stos
mov
mov
pop
lea
cmp
aaa
in
pop
mov
mov
mov
mov
mov
mov
inc
loopne
push
xchg
inc
jmp
fdivr
pop
mov
pusha
xor
xchg
rcr
jnp
push
mov
aaa
das
xchg
orl
cli
adc
mov
push
loop
int3
xchg
ljmp
pop
pushf
in
aam
cwtl
add
mov
cwtl
scas
ds
push
pop
mov
pop
xchg
push
ss
jb
jmp
imul
pop
out
incl
pop
sahf
push
xchg
mov
add
xchg
popf
push
xor
xchg
or
xchg
jmp
cli
push
push
repnz
and
mov
mov
add
xchg
test
fisubs
or
mov
xchg
sti
mov
insb
adc
sbb
test
xor
cld
std
addr16
ljmp
aam
adc
pop
and
cmc
sbb
mov
push
adc
mov
sahf
push
int
adc
pushf
jp
and
nop
pop
subl
pop
xchg
out
fdivl
mov
add
mov
add
shlb
xchg
insl
xrelease
fadds
ljmp
cmpsl
lret
out
sahf
cmp
push
push
sub
outsl
lahf
stos
and
mov
jle
inc
jbe
or
int3
stos
mov
xor
into
les
cmc
add
pop
dec
out
mov
xlat
icebp
xchg
xchg
push
lahf
xor
jnp
movb
out
cmp
push
outsl
or
mov
shll
icebp
int3
jne
icebp
sbb
mov
in
jbe
ja
or
sub
scas
push
mov
push
or
pushf
mov
fbstp
ret
and
add
adc
inc
lahf
cli
mul
std
bnd
push
push
jmp
mov
dec
mov
lcall
pop
pop
pop
call
mov
mov
bound
or
dec
and
rcrl
sub
ret
sub
jle
cld
dec
cmp
add
loope
pop
jo
mov
pop
jo
fiadds
adcl
hlt
jno
adc
push
fcoml
jmpw
mov
rol
inc
push
stos
aam
or
xchg
sub
xchg
mov
hlt
mov
adc
inc
jmp
std
out
jae
test
gs
lcall
dec
fidivs
add
fld
xchg
popa
stos
add
adc
notb
pop
ljmp
jmp
fidivrs
imul
fs
push
nop
xchg
pop
repnz
aaa
push
mov
push
hlt
or
mov
rcrb
pop
mov
mov
cmp
mov
cmp
xchg
dec
pop
mov
outsb
jae
push
dec
cltd
mov
dec
sub
sub
pop
add
add
jg
sub
inc
fwait
cli
rclb
ja
sbb
mov
push
xor
gs
jecxz
pop
pushf
dec
stos
dec
lgs
sbb
jmp
cmp
adcb
add
nop
in
xor
stos
lcall
fiadds
stc
mov
jp
popf
mov
pop
shlb
nop
ret
test
test
or
mov
ficomps
ret
inc
xor
mov
cmp
addl
scas
ficoml
in
fisubrs
adc
push
outsb
cmp
adc
stos
ds
cwtl
or
and
mov
sbb
xchg
dec
addr16
sub
sbb
out
insb
sbb
push
add
push
lcall
dec
mov
notl
adc
rcrb
ret
add
cmp
add
repnz
jo
push
mov
cmc
enter
sti
adc
push
rcrl
sbb
add
mov
ds
ret
frstor
xor
insl
leave
fisttpl
pop
inc
popa
inc
lcall
mov
popa
mov
push
push
fnsave
jne
push
test
xchg
int3
push
jg
add
pop
cwtl
std
cltd
stos
push
pop
mov
jp
jno
aaa
notb
rolb
jnp
mov
aas
rolb
pop
sub
cmp
insb
jbe
sbb
adc
stc
dec
xor
sti
sbbb
xchg
arpl
xor
ret
push
loopne
imul
push
imul
ja
scas
lods
sbb
adc
adc
int3
jb
fucomip
into
bound
mov
jecxz
test
rcll
push
imul
ds
inc
xor
fiadds
ret
sub
mov
dec
loop
or
aas
out
xor
mov
inc
mov
out
add
cmpsb
cmovnp
lret
sti
lods
jp
rcll
cltd
xlat
cmp
ljmp
repz
xchg
pop
add
insl
jg
das
aas
and
xchg
or
in
push
push
dec
rcr
cs
bound
jp
jnp
fisttps
fidivs
sarl
outsl
imul
mov
cmp
cmp
test
push
inc
addl
xor
or
movsl
pusha
scas
xor
in
adc
fs
enter
mov
dec
nop
outsb
cs
loope
pusha
push
cmp
out
dec
mov
inc
into
outsl
aaa
or
rol
insb
cmp
jle
mov
mov
pop
ljmp
movsl
sub
pushf
sbb
ror
lret
leave
xchg
jecxz
shrb
cmc
jo
ja
adc
ljmp
push
jmp
xchg
mov
and
stos
outsb
sub
rorb
inc
jp
cmp
jmp
outsl
leave
in
push
insb
pop
idivb
popf
stc
int
pop
cmp
test
mov
or
push
mov
cmp
or
adc
mov
sub
imul
stos
and
push
adc
mov
mov
mov
mov
test
dec
add
jl
pop
in
aam
subl
leave
lret
loopne
cld
stc
aaa
adc
arpl
jo
popf
stos
adc
xor
lret
add
ficomps
xor
inc
cmp
mov
je
cld
jbe
sar
mov
inc
lods
scas
les
inc
xchg
push
pop
dec
sub
sbb
xor
fadds
push
jo
inc
rclb
push
mov
fidivrl
lock
or
sahf
packssdw
cmpsb
mov
loopne
icebp
daa
dec
add
test
jne
cmpsb
ljmp
insl
jns
sbb
dec
sub
inc
js
push
jns
lret
nop
popa
jbe
mov
and
inc
add
inc
scas
scas
stos
adc
in
jo
adc
nop
and
push
in
push
push
fistl
xchg
dec
jmp
jecxz
jne
xor
sub
lds
sub
add
push
je
push
ffree
jo
ror
pop
fistpl
push
sub
adc
enter
addr16
adc
push
stos
xor
xchg
cmp
mov
cltd
push
ss
repnz
ds
mov
push
dec
pop
imul
push
pop
pop
mov
int
pop
or
iret
cmpsl
push
mov
daa
mov
jecxz
icebp
jmp
cmpb
fsubl
popf
sub
pop
sub
sub
adc
mov
cmp
dec
loopne
lea
push
iret
fisttps
leave
push
insl
push
mov
fbld
lea
or
dec
push
mov
mov
jnp
fbld
or
cmpsl
stos
mov
stos
mov
shlb
arpl
xor
dec
shlb
cmpsl
add
shrl
in
cmp
std
sub
and
adcl
mov
mov
fidivrs
pop
sub
xor
push
sub
mov
add
cmp
mov
xchg
mov
mov
stos
call
test
inc
les
sar
jno
mov
jl
jno
sbb
jl
cmp
repz
xchg
cs
fs
jo
xchg
jno
pop
repnz
jp
sbb
mov
push
lcall
les
fwait
and
mov
cs
dec
add
divb
or
mov
sub
fcmovnbe
and
pop
dec
xor
mov
push
sub
add
xchg
xor
pop
fstpt
sub
sbb
fdivp
sbb
ja
push
jnp
xor
inc
and
inc
inc
jp
js
xchg
lods
in
cmp
add
js
fsts
jp
mov
aaa
and
les
fldcw
dec
adc
insb
in
fldcw
mov
pop
cmc
jp
sbb
shll
add
and
out
pusha
jae
test
imul
mov
xor
jns
ret
or
mov
sub
jg
loope
mov
stc
xchg
xor
negl
lahf
test
xor
stc
push
stos
leave
adc
jns
sub
adcb
out
and
cmc
and
dec
jg
loop
out
mov
nop
call
and
mov
inc
mov
sbb
arpl
testb
mov
inc
cwtl
ficoml
mov
je
sbb
cwtl
mov
inc
pushf
jne
mov
xor
jbe
mov
inc
push
and
in
pop
and
adc
das
push
pop
lods
sub
leave
icebp
fildl
cmp
fistpl
int
pop
mov
sub
js
push
aas
loope
lods
hlt
aaa
mov
test
xlat
mov
adc
adcb
lahf
push
test
jb
lods
aas
jae
inc
mov
sub
sub
addl
sbbb
xor
jmp
ds
or
movsl
sub
ffree
sbb
into
or
or
xlat
test
mov
lods
lods
andl
ret
fs
ljmp
pop
cmp
fs
or
lahf
adc
lods
adc
jecxz
cmp
or
mov
sub
jl
out
cmp
push
xchg
cmp
xchg
stos
cld
cmc
sbb
jge
jne
xchg
xor
mov
xor
cmpsb
xchg
pop
cwtl
mov
cld
lret
bound
sbb
outsb
loop
xchg
mov
adc
pop
daa
jg
cmc
lret
cmp
push
roll
loope
rclb
in
xchg
and
sbb
lcall
ret
filds
sbb
data16
inc
mov
mov
int
push
jmp
xor
xor
cmp
stos
movsl
or
push
inc
fistl
outsb
rcr
aam
jns
std
jmp
mov
sub
or
fadd
add
sbb
xchg
xchg
shr
jmp
sub
jno
bound
xchg
pop
cmpsw
loop
in
xorl
pop
rcrl
aas
or
mov
or
pop
xchg
scas
mov
jecxz
stos
scas
in
xor
or
icebp
dec
or
xchg
push
addr16
push
xchg
sbb
stc
lea
lds
cmpsb
jae
and
and
test
fwait
jmp
fldt
cli
inc
or
xchg
outsl
in
testl
stos
test
mov
sub
jmp
js
popf
je
xchg
lcall
gs
pop
xchg
into
dec
pushl
insb
jge
xor
inc
inc
dec
bound
shl
jg
dec
in
cwtl
enter
pushf
sub
pop
pop
xor
fmuls
add
fcompl
push
out
jno
test
lret
or
insl
adc
push
aam
mov
xor
sub
pop
sub
push
add
cwtl
sub
sbb
sarb
aam
addb
or
hlt
enter
in
mov
sahf
sub
ss
sub
mov
ret
stos
mov
dec
and
loopne
push
xor
test
cmp
xchg
lods
cmpsl
xor
shrl
mov
push
cli
iret
jne
sti
add
stos
pop
rol
sbb
jmp
jp
icebp
xor
lds
cli
outsb
sarb
pop
inc
std
or
lret
jno
push
mov
xor
test
push
stos
lcall
cli
xchg
enter
adc
pop
mov
pop
jae
cmpsl
in
sub
mov
in
sbb
dec
and
es
push
pop
mov
cmp
out
add
push
fiadds
lahf
fidivl
mov
xchg
sub
or
jecxz
out
lds
into
insl
cmp
add
call
cmp
cmc
adcl
push
xor
mov
fsubr
rcll
and
dec
xor
mov
push
push
jb
lea
dec
add
pop
mov
or
std
scas
add
inc
ficompl
fdivs
adc
in
sbb
push
mov
lods
mov
int3
int3
pop
arpl
push
push
scas
wrmsr
jmp
sub
push
inc
mov
pop
fisttpll
jmp
mov
jno
mov
mov
jge
xchg
jecxz
add
mov
cld
in
and
fisubs
popf
xor
insb
sub
pop
shrl
pop
imul
xchg
clc
imulb
jmp
push
dec
mov
cmp
shll
jp
jmp
hlt
daa
adc
inc
out
push
cmp
xchg
es
fldenv
mov
loopne
mov
adc
sub
jg
loopne
out
scas
mov
and
or
jmp
imul
stc
imul
arpl
insl
fstpt
ror
or
fnstsw
lea
xchg
push
shlb
pavgw
fimull
jl
mov
aaa
les
ficompl
orl
sbb
adc
pop
dec
push
jne
inc
adc
jmp
stos
push
jmp
testb
mov
mov
je
xchg
inc
cmc
fistps
xchg
scas
arpl
inc
movsb
pushf
out
test
rorl
call
lock
cmp
jge
cmpsb
rcrl
dec
aas
push
jae
in
lahf
loop
rcr
lods
iret
mov
adc
popa
add
inc
cmpsb
or
pop
jo
jp
cmc
lods
push
fcmove
or
pop
adc
mov
testl
cs
push
int
mov
xor
lret
imul
test
imul
adc
stos
addr16
and
addl
push
stos
mov
jecxz
lds
xchg
xor
and
icebp
fnstenv
out
lods
aad
fldenv
pop
js
shrb
sahf
int
pushl
jl
xchg
sti
or
mov
adc
repz
pop
jmp
adc
adc
js
and
fcoms
int3
fnsave
inc
shrl
hlt
loope
cmp
mov
xchg
in
inc
xchg
fwait
jo
pop
pop
xor
lcall
sub
inc
cmpsl
lods
push
mov
nop
jp
xchg
sbb
mov
mov
rorl
sub
arpl
or
cmp
fsubl
pop
cmpsb
test
outsb
mov
mov
lret
rorb
cmpsl
sub
mov
cmp
fstpt
add
adc
pop
fsubrl
imul
es
mov
shll
imulb
dec
out
cmp
jge
fisttps
mov
data16
push
loop
jecxz,pn
xor
mov
sahf
mov
fidivrs
stos
out
and
xor
cmp
pop
out
js
sub
dec
js
jmp
fwait
stos
fs
fcmove
inc
call
jle
push
xchg
add
dec
xchg
jae
js
adc
mov
jge
cmp
xor
mul
insl
fcmovnbe
lods
daa
jbe
std
xorb
add
cmpsl
dec
jmp
movsl
outsl
jnp
dec
in
cmpb
pop
sub
and
jg
call
xor
sub
testl
imul
ja
xchg
adc
pop
lea
bound
xor
insb
popf
and
mov
adc
jl
mov
adc
push
cmpsb
jmp
inc
jg
imul
push
push
nop
push
add
popa
push
insb
pusha
insl
pusha
add
pop
popf
push
pop
dec
jg
enter
sti
es
cwtl
out
inc
jecxz
jmp
pop
addr16
prefetcht0
jg
or
pop
pusha
sbb
sbb
sbb
andl
xchg
scas
in
repnz
dec
sbb
pop
ds
stc
sub
mov
mov
shlb
popf
jmp
stos
mov
push
inc
pop
mov
push
mov
clc
jge
adc
mov
loop
sub
sarb
xchg
add
sub
sbb
xchg
loope
push
xor
xchg
int3
ss
adc
sbb
sub
inc
mov
rcrb
mov
cmp
sub
lcall
cmp
pop
ja
mov
js
ss
lea
repnz
mov
mov
jnp
loopne
pushf
xchg
xor
push
scas
jb
mov
sbb
js
jnp
sahf
lock
jne
outsl
ja
sbb
movsb
sbb
inc
stc
mov
loopne
pushf
jp
cld
orl
jmp
pop
hlt
add
inc
push
mov
loop
mov
int3
cld
mov
icebp
addl
aas
cmc
adc
cmpsl
movsb
dec
mov
outsb
sarb
test
jae
pop
and
lods
mov
mov
and
into
stc
cs
sub
in
jo
adc
je
push
sbb
xchg
lods
add
and
push
addr16
rcr
xchg
imul
in
call
faddl
call
push
push
into
xor
jo
lcall
dec
call
mov
lahf
stos
mov
sbb
pop
adc
fsubs
adc
ds
xchg
insb
xlat
xor
jl
or
sub
xor
push
and
xchg
inc
imul
xchg
out
inc
test
mov
mov
out
mov
test
xchg
leave
xor
or
idivb
or
or
ds
ficoms
jbe
out
icebp
inc
push
add
clc
xor
test
inc
push
stos
test
mov
out
inc
jnp
push
mov
mov
shrl
std
stos
bts
and
mov
ret
add
es
mulb
sbb
xchg
dec
stos
std
movsb
out
rcrb
popf
movsl
pusha
sbb
dec
fmuls
sub
and
stos
xor
cld
and
lret
and
cmp
mov
frstor
cmpl
jecxz
leave
and
pop
test
adc
fidivs
aam
inc
das
mov
mov
rcl
or
pop
into
into
std
mov
push
adc
xchg
daa
sub
or
hlt
dec
cli
inc
or
sbb
pop
imul
jecxz
xchg
fdiv
test
push
or
inc
xorb
fldenv
addr16
test
ljmp
fsts
jl
sbb
or
inc
mov
mov
ret
inc
enter
stc
aaa
rolb
fadd
xchg
push
mov
sar
xchg
add
xor
ss
mov
and
pop
je
out
xor
pop
out
push
loope
fcomip
pop
lds
mov
cltd
sbb
cmpsl
adc
or
in
sbb
shll
xchg
fildl
add
sbb
in
in
sub
mov
rcl
roll
lret
fs
push
mov
xchg
dec
in
hlt
sub
sbb
or
xor
add
adc
fs
push
mov
xchg
dec
in
hlt
sub
sbb
or
xor
add
adc
fs
push
mov
xchg
dec
in
hlt
sub
cmp
or
xor
add
adc
fs
push
mov
xchg
cmp
mov
aam
in
hlt
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
and
xor
add
adc
bound
jle
add
xor
subb
ffreep
inc
incb
xor
outsb
adc
bound
pop
inc
outsb
push
sbb
scas
xchg
mov
ret
lcall
jl,pt
adc
outsb
push
jle
mov
rorb
mov
outsb
add
pop
data16
jb
cwtl
insl
jns
in
andl
inc
repnz
adc
cmp
push
into
push
addb
pop
repnz
out
hlt
push
sahf
popa
pop
push
outsb
stos
sbb
push
sub
fidivs
add
stos
add
nop
dec
mov
mov
xchg
test
inc
repnz
xor
sbbl
cmp
push
mov
jb
popa
push
push
bnd
fwait
sar
aas
loope
rorl
mov
aas
fnstcw
jno
mov
popf
repnz
cmp
scas
or
nop
in
ss
add
notl
outsl
fbld
add
fs
add
adc
xchg
pop
inc
outsb
hlt
jle
mov
sahf
hlt
scas
mov
fdivp
out
sarb
jbe
push
or
or
mov
std
test
stos
pushf
mov
outsl
bound
jo
jae
or
pop
push
in
or
in
fwait
stos
popf
dec
stos
mov
dec
arpl
inc
xor
inc
outsb
push
jle
mov
mov
ret
and
xor
add
adc
bound
pop
inc
outsb
push
jle
mov
mov
ret
and
xchg
rolb
lods
mov
lock
mov
mov
push
je
stc
shrl
jae
dec
shl
xlat
cmp
adc
add
pop
lods
shlb
clc
stos
mov
das
or
mov
insb
cmc
dec
cli
fistpl
lret
or
push
outsb
lahf
fidivl
push
pop
cmc
sbb
mov
mov
lret
jecxz
adc
mov
cmc
dec
lods
and
xor
fimull
and
push
ds
lret
testb
jl
test
nop
outsl
test
add
in
scas
daa
mov
xorb
inc
xchg
lock
dec
fsubrl
lcall
jbe
lock
roll
cs
mov
mov
cmpl
das
arpl
or
lahf
test
hlt
cmp
cmpsl
jmp
icebp
xchg
adc
push
or
push
mov
dec
xchg
fstps
fs
push
jl
fists
fmuls
dec
gs
push
pop
jg
gs
adc
imul
cltd
pop
dec
outsb
sbb
and
and
adc
icebp
xchg
mov
fdivrs
pushf
insl
xor
sbb
pop
outsl
xor
adc
ror
fistps
pop
mov
pop
test
pop
ljmp
aas
lahf
mov
jbe
fcom
enter
aad
push
repnz
sub
adc
pusha
iret
sub
push
adc
loop
pop
lret
and
int
into
ret
push
jne
cmp
call
mov
aaa
sbb
sub
enter
adc
jae
lock
aaa
fimull
int3
or
shrb
jle
icebp
repz
inc
stc
fwait
xor
sbb
lods
push
sbb
add
repnz
xor
out
inc
out
ret
inc
shll
inc
cmpb
xchg
dec
lret
movsl
mov
pop
pop
dec
jmp
push
lret
popa
add
dec
lds
ret
cmpsl
cmpsb
and
in
loopne
leave
push
stos
scas
sbb
fildll
mov
std
scas
mov
lcall
cmp
and
and
pop
xor
incb
and
ret
je
lods
xchg
adc
jg
xchg
pop
das
push
add
jbe
int
mov
fwait
subb
xor
push
rcrb
xor
xchg
mov
neg
jo
and
jbe
movsb
lea
pop
sub
jmp
loope
and
jmp
insb
test
int
sbb
pop
xor
adc
out
jnp
sub
xor
fs
xchg
jae
cmp
add
pop
xchg
jmp
aas
fidivrl
hlt
nop
cmpsl
aad
jns
in
dec
push
rcll
pop
gs
fdivrl
out
scas
sti
adc
and
mov
aas
or
loope
mov
in
and
fwait
mov
shll
mov
jne
mov
inc
sub
out
lods
cmp
test
inc
sbb
ret
cmpsb
sub
mov
mov
rorl
or
lahf
adc
jg
pop
filds
xor
sub
add
mov
in
xlat
cmpsl
in
mov
adc
adcl
fcoml
xchg
into
icebp
xchg
iret
popf
int
repnz
xchg
or
cmp
mov
and
add
ret
cmp
into
fwait
cmp
pop
dec
nop
and
pop
dec
xor
xchg
inc
add
sarl
insb
jns
xor
inc
xor
jns
aad
cs
push
sbb
and
lock
fsubl
xchg
fsin
inc
movsl
pushf
push
mov
dec
ret
call
iret
dec
addr16
xor
js
sub
xor
mov
scas
mov
pand
ss
cmp
xchg
jo
sub
inc
les
and
pop
and
in
and
rcll
mov
outsb
inc
mov
mov
aas
push
sub
mov
push
dec
push
adc
jge
ret
leave
xor
pop
shlb
test
pop
mov
inc
adc
test
push
xchg
insb
sbbl
dec
mov
mov
push
outsl
les
xor
pop
mov
inc
cmp
add
pusha
or
es
or
inc
cmp
xlat
xchg
cld
pop
fcoms
ret
shlb
sarb
xor
xchg
add
enter
or
icebp
dec
scas
pop
fs
cltd
rorb
pop
add
out
idiv
repnz
jle
cltd
in
je
and
ret
out
sti
xlat
jno
and
dec
imul
mov
pop
push
movaps
mov
xchg
movsb
push
sub
mov
push
mov
rorb
cmp
xchg
and
xor
mov
inc
dec
movsl
rep
mov
fcoml
outsl
movsb
aas
frstor
and
lea
push
ss
mov
add
jbe
mov
xor
jbe
sub
inc
popf
loop
and
bound
add
pop
add
imul
mov
je
jno
imul
xchg
mov
push
and
dec
adc
std
fsubrs
imul
pop
loope
es
pop
pop
lea
xor
fisubrs
inc
cmp
mov
xor
mov
aaa
jmp
mov
and
jne
add
cld
hlt
jbe
add
mov
in
outsb
jg
jae
movsb
pop
add
clc
out
test
jl
int3
jmp
mov
and
cmp
and
sbb
imul
xchg
pop
mov
lret
mov
int
push
cmp
pop
pop
pop
push
add
leave
mov
jg
out
cmp
mov
fmuls
lds
leave
push
push
lods
cmp
iret
gs
les
lea
xchg
clc
push
popf
out
repz
shrl
adc
mov
pop
daa
scas
cmp
jmp
sbb
scas
dec
pop
mov
scas
mov
mov
mov
mov
out
add
jmp
xchg
aaa
add
sbb
push
in
jb
dec
xor
fcmovnu
mov
xchg
mov
mov
jle
fs
inc
int3
outsb
or
jno
scas
push
add
lea
dec
hlt
jmp
dec
xchg
cmp
jae
inc
push
int3
vmovupd
add
outsl
fwait
sbb
adc
mov
pusha
into
mov
clc
pop
sbb
xchg
sbb
sbb
cmp
lcall
inc
xor
std
pusha
ja
inc
and
pop
stos
test
pushf
data16
adc
loop
lods
push
add
add
add
inc
sub
lahf
cmp
adc
push
mov
cmc
fmul
shrb
push
in
cli
aaa
push
fidivl
notl
sub
jnp
jnp
fs
pop
rcrl
dec
data16
daa
lcall
es
lock
xor
mov
sub
jl
cli
or
jp
addl
pop
rorl
dec
sbb
or
fcomi
xor
mulb
pusha
jl
mov
test
add
loopne
lds
enter
movsb
pop
bound
sbb
mov
ja
push
lock
mov
test
daa
adc
xor
rcll
jl
icebp
dec
dec
push
dec
shl
pop
cs
in
adc
or
dec
or
clc
adc
lds
jb
fdivs
push
jne
aam
shlb
add
cmp
out
mov
pushf
popa
and
or
sub
out
dec
aam
inc
mov
dec
jns
or
or
aaa
inc
cmpsl
sub
adc
icebp
into
dec
in
test
insb
out
popa
aad
sti
adc
mov
movsl
push
cmp
sahf
jp
sbb
scas
push
mov
mov
in
leave
inc
xor
xlat
mov
push
lret
and
pop
and
in
insb
fidivs
inc
jae
dec
mov
cmpsl
sbb
sbb
rorl
ret
lods
or
cld
mov
bound
out
jno
loope
adc
ljmp
mov
sbb
inc
mov
enter
das
inc
pusha
daa
call
mov
inc
pop
or
cmp
mov
arpl
jae
mov
push
bound
inc
shll
xor
dec
les
pushf
pop
dec
push
aas
mov
cmp
push
ja
nop
pop
xchg
push
mov
adc
outsl
stc
arpl
test
fiadds
in
mov
rcll
stos
mov
out
aam
popf
dec
sahf
and
jno
jp
xchg
out
and
popa
test
dec
sbb
xor
add
lods
int3
aad
fidivs
and
lods
clc
gs
lret
hlt
pop
or
mov
pop
ficoml
jnp
ja
mov
lcall
jle
push
mov
push
push
dec
stos
loope
pop
push
fidivrs
mov
notb
push
ljmp
xor
out
test
dec
popf
xchg
jb
sub
push
adc
lea
cld
outsl
cmp
out
mov
imul
xor
je
shll
push
or
and
scas
jmp
xchg
popa
jbe
repz
add
int3
mov
mov
ljmp
repnz
add
in
stos
pop
adc
inc
popf
fidivrl
imul
outsl
jb
in
adc
xchg
mov
mov
fs
inc
jbe
fstps
std
loop
jo
fiadds
dec
jno
jmp
adc
es
dec
sub
aam
and
dec
xchg
ss
call
or
push
bound
enter
jl
and
pop
add
lret
cld
pop
int
fwait
nop
outsb
xchg
shlb
dec
daa
push
pop
xor
cwtl
or
mov
leave
mov
xor
leave
leave
sti
test
dec
in
and
lods
out
sub
frstor
or
mov
push
xor
arpl
and
es
inc
in
jmp
test
cli
or
imul
repz
mov
loopne
sbb
ja
inc
lds
repnz
outsl
idivb
in
cmc
std
push
rep
iret
add
mov
pop
mov
pop
iret
ror
lds
mov
jae
or
gs
test
sbb
add
and
cli
sbb
enter
inc
adc
fs
fwait
sub
nop
popa
jno
sub
lahf
or
je
mov
incb
dec
aad
and
loopne
addl
stos
xor
xlat
ror
arpl
subb
and
jle
cmp
xchg
imul
cltd
jl
mov
add
jmp
cli
lret
jb
shll
mov
aas
scas
xchg
jle
jmp
jae
movsl
jne
jns
xchg
repz
insl
popf
int3
pop
loope
fsubrp
gs
push
fisttpl
pop
add
mov
cmpsl
adc
dec
jge
outsb
popf
imull
jmp
xchg
imul
dec
cmp
fcmovu
shrb
mov
leave
mov
fwait
or
sub
stos
cmc
in
loop
ss
mov
xlat
adc
mov
dec
and
setp
addl
sub
sub
sahf
sti
pop
add
mov
or
fistps
or
sub
out
mov
scas
jmp
in
sti
add
or
xchg
je
xor
call
fiadds
stos
cmp
push
cmp
sbb
aad
push
mov
sub
mov
nop
aas
stos
ljmp
inc
xchg
cmp
ja
jecxz
shll
xchg
fs
loop
or
cs
xlat
mov
shll
sbb
push
xchg
xchg
bound
scas
mov
push
jl
add
lea
popf
mov
ret
cld
movsb
push
and
lahf
lcall
hlt
mov
pop
or
sbb
aam
int
or
mov
xchg
pop
shr
xor
lods
jg
jecxz
or
in
or
jg
push
pop
inc
ror
test
and
xlat
scas
push
fcmovne
scas
jmpw
mov
jmp
and
push
cmc
loopne
sbb
push
xchg
jne
imul
shlb
fnstenv
cmp
adc
mov
scas
inc
pusha
xchg
push
addr16
jo
insb
xor
cmp
fidivl
fwait
xchg
hlt
mov
pop
jb
mov
mov
mov
lret
lret
fcomps
aas
movsb
or
jl
or
cmp
sahf
in
divl
popl
pop
sbb
addr16
jle
mov
mov
mov
fs
mov
cmp
adc
xor
ljmp
fadd
dec
repz
call
adc
push
imul
shlb
mov
inc
xchg
mov
xchg
divl
test
sar
cs
addr16
lods
scas
pop
fnsave
imul
pop
push
adc
scas
and
nop
leave
jle
fisttps
in
inc
push
sbb
jne
jecxz
adc
pushf
jbe
call
js
and
test
sbb
fsubp
dec
push
dec
inc
sbb
xor
popa
imul
imul
and
mov
fwait
addr16
mov
repz
ret
jg
mov
sbb
inc
xchg
xchg
cmp
outsl
xlat
sbb
cmpsb
loop
mov
sbb
xor
xor
lar
je
adc
jmp
pop
in
std
sbb
sysret
je
and
jnp
xor
loop
push
hlt
stc
lock
add
push
sub
lea
gs
xchg
test
dec
pop
xor
sub
adc
in
fcmovne
pop
loop
dec
js
push
cmp
inc
sub
push
ret
and
mov
in
jo
inc
insl
push
pop
xor
aad
stos
and
bound
jbe
in
inc
test
lahf
pusha
adc
js
or
or
fldenv
add
lods
cmp
jne
shrl
add
stc
add
push
popf
cmpsl
sub
arpl
arpl
insl
mov
into
and
sub
ret
dec
xchg
mov
insl
imul
movsl
pop
inc
xor
inc
cmp
scas
inc
test
fimull
dec
fdivrp
add
fs
test
inc
lret
pop
xor
movsb
or
aas
sbb
jbe
imul
and
xor
cmp
icebp
out
adc
fwait
and
sbb
fcmovnbe
jl
mov
repnz
pop
imul
pop
jbe
mov
jne
dec
mov
test
addr16
xchg
loope
mov
sub
sub
sub
push
push
pop
popf
ret
mov
mov
pusha
sub
repnz
add
mov
outsb
das
mov
out
push
or
pop
out
outsb
dec
jmp
lock
shl
gs
pop
cli
bound
push
popf
push
fsub
and
xchg
sub
pop
mov
popw
mov
mov
cmp
jge
js
sbb
xchg
je
mov
dec
in
dec
incb
add
mov
sub
adc
ds
test
aad
dec
mov
leave
inc
push
push
mov
and
sbb
sahf
push
pop
lret
mov
imul
les
cmp
das
mov
mov
into
repnz
push
jl
pop
in
mov
mov
add
jnp
enter
adc
test
cld
adc
xchg
movsl
sbb
sbb
notl
inc
pop
cmp
sbb
dec
xchg
mov
adc
test
cmpsl
xchg
lret
push
mov
movsl
frstor
test
test
stos
iret
es
pop
mov
lea
sub
push
popw
insb
rorl
jo
sub
pop
push
dec
mov
pop
mov
inc
mov
and
xor
je
jg
add
mov
push
cld
cmp
insl
xor
sahf
or
arpl
add
sbb
push
xchg
movsb
repz
into
ljmp
mov
gs
imul
hlt
cmp
pop
stc
mov
xchg
lods
xchg
jns
mov
test
dec
and
mov
shl
adc
mov
and
adc
or
mov
pop
lahf
test
and
or
js
notl
test
push
xchg
pop
inc
xor
xor
subl
cmp
jmp
fistl
loop
or
sub
sub
adcb
jbe
add
mov
movsb
and
icebp
lods
sub
test
shl
sub
cmpsl
clc
adc
pop
cmp
lods
test
dec
add
push
mov
jp
push
stc
inc
loop
mov
sub
cwtl
cld
inc
les
sarb
add
das
jp
pop
imul
mov
test
shlb
sub
push
out
mov
inc
fdivrs
fxrstor
in
add
mulb
movsb
pusha
xchg
and
adcl
cli
inc
mov
add
inc
out
xor
aam
or
jp
inc
call
arpl
add
in
repnz
or
out
sbb
or
push
push
add
cmpsl
ja
stos
movsb
repnz
repz
addr16
xchg
test
sub
mov
out
imul
lcall
cmp
in
mov
fstpl
sbb
rcrl
add
bndstx
mov
int3
sub
dec
push
sbb
mov
xor
int
ret
sbb
rorb
pop
mov
lods
lcall
sub
loope
ficomps
push
fldl
cmp
and
es
xchg
aad
call
xor
xchg
cmpsl
inc
hlt
cmp
test
add
dec
movl
lret
in
outsl
sub
cld
repnz
mov
sti
push
and
invd
xchg
popf
lods
xchg
sbb
leave
pop
bound
push
pusha
cmp
leave
sti
xor
es
inc
orb
stos
leave
sub
xor
lcall
mull
push
jbe
push
sub
cmpsb
in
out
cmp
jns
xor
adc
jg
mov
loopne
sti
xchg
push
cmpsb
cmp
ja
jge
inc
jae
cmp
fiadds
sbb
sub
jne
xchg
jmp
int3
mov
inc
aas
ret
pop
mov
sbb
sub
nop
into
jno
gs
fwait
dec
cld
xchg
cwtl
pop
sti
jo
sub
add
push
jbe
popa
push
push
fwait
pop
addr16
push
in
pop
fcoml
frstor
adc
loopne
movsl
dec
mov
push
xchg
inc
shrb
lret
pop
adc
dec
dec
add
jl
add
nop/reserved
or
in
jbe,pt
out
push
shlb
xor
leave
sbb
loope
ret
dec
cmp
popa
std
fwait
enter
cmp
adc
pop
dec
and
mov
iret
cmpsl
mov
insl
insb
jns
es
cmc
lret
lret
inc
add
inc
pop
mov
hlt
jbe
nop
jp
cmp
xchg
xchg
inc
adcb
shr
movsl
cmp
fcmovu
xchg
fcomps
aad
inc
cmpsl
cs
test
enter
cmp
lret
adc
push
ret
cmp
enter
dec
out
cmpsb
mov
icebp
jnp
inc
cmp
push
out
mov
lea
mov
jg
xor
fadd
xchg
mov
std
rclb
les
sbb
sbb
bound
sub
jp
cmc
adc
imul
or
or
dec
ss
ljmp
mov
divl
aam
mov
icebp
mov
into
sbb
mov
pusha
push
mov
xchg
sub
sub
or
mov
fs
nop
mov
jg
fwait
adc
ds
pop
cmpsb
clc
test
xchg
cmc
mov
xlat
mov
mov
stos
in
out
push
add
mov
fists
les
xlat
cmpsl
orl
les
loopne
das
adc
dec
dec
xchg
or
imul
call
adcl
cmpsl
xchg
ljmp
stc
insl
sbb
mov
fwait
roll
and
fcmove
lds
ljmp
hlt
inc
sbb
pusha
jno
mov
aam
sbb
pushf
cmp
in
and
mov
mov
cmp
dec
push
mov
imul
adc
jp
fs
push
imul
rcrb
adc
test
adc
push
and
cmp
fidivrs
leave
fucomp
insl
mov
jo
mov
clc
dec
stc
push
in
sub
pop
and
cmp
popa
jp
mov
add
or
xchg
je
push
and
xchg
div
cmp
test
dec
lea
adc
outsb
push
icebp
insl
inc
stos
xchg
ror
inc
xchg
pop
xchg
ljmp
mov
sbb
sbb
fs
aas
or
mov
mov
inc
or
xchg
jno
movsb
js
aad
lods
mov
add
push
mov
jge
xor
mov
sahf
mov
add
lods
nop
es
repnz
jno
dec
dec
pop
cmp
repnz
xor
gs
ljmp
fwait
push
inc
adc
bound
pop
inc
outsb
push
jle
mov
mov
ret
and
xor
add
adc
bound
pop
inc
outsb
push
jle
mov
mov
ret
and
add
bound
adc
repnz
jb
inc
outsb
xchg
jle
mov
mov
ret
ss
outsb
push
pop
xor
bound
pop
inc
outsb
sarb
sub
jp
cmp
xor
imul
add
cmp
add
ss
enter
jmp
sti
orb
mov
and
jnp
or
pusha
sub
cmp
mov
mov
mov
rorb
and
jnp
or
pusha
sub
inc
lret
mov
sbbl
call
mov
inc
cmp
js
add
dec
gs
lret
add
aad
pop
cld
clc
push
mov
lock
pop
cld
lahf
cmpsl
arpl
or
in
pop
rorl
les
adc
lock
sub
shr
xchg
mov
xor
pop
js
loopne
mov
into
sub
mov
adc
sub
js
jne
add
cmp
shl
popa
jb
cmp
or
pusha
fcomi
fwait
push
push
fidivl
rcrl
fidivs
inc
xchg
xlat
cmp
in
outsw
jo
mov
lods
push
add
pop
sub
sbb
xchg
outsl
lock
mov
and
jnp
or
pusha
sub
inc
lret
mov
mov
mov
fwait
loopne
sarb
popa
sub
adc
mov
mov
or
test
das
inc
or
add
push
sub
cmp
mov
ret
sti
in
sahf
loope
xchg
scas
sub
pop
push
dec
pop
sbb
push
cmp
mov
mov
mov
fwait
loopne
sarb
and
jnp
or
pusha
sub
inc
lret
mov
mov
mov
fwait
loopne
sarb
dec
idiv
add
fildl
jnp
movsb
add
or
aam
xchg
in
cs
bound
call
adc
int
adc
rclb
xchg
js
addr16
jae
fidivrs
xor
in
jns
pop
inc
out
repnz
out
flds
sbb
ficompl
push
xchg
nop
je
out
pop
sbb
xchg
jb
push
jbe
jae
xor
pop
pop
fadds
xchg
cmp
push
daa
mov
aaa
movsb
adc
add
pop
mov
bound
xchg
sub
jne
cmp
add
rcll
pop
stos
mov
fbld
movsl
mov
loope
mov
jne
sbb
xchg
insl
lahf
xchg
sub
inc
sub
and
mov
leave
sbb
icebp
lea
or
mov
mov
sbb
sub
push
xor
or
aam
jae
xor
movb
xor
add
jnp
inc
arpl
inc
jne
push
push
pop
mov
sub
jmp
xor
push
or
daa
lret
rorb
orb
push
mov
popl
lahf
bound
ret
adc
and
cmpsb
xchg
add
movsb
enter
or
imul
sar
xchg
cmovl
jmp
loope
xor
pop
inc
adc
daa
adc
fbstp
jle
test
das
jmp
repz
dec
imul
and
or
lock
js
sbbb
adc
push
xchg
pop
xchg
mov
push
mov
jbe
xchg
mov
cmpsb
pop
hlt
dec
sarl
fistpll
pop
in
xchg
out
pop
push
rcl
xor
ds
jmp
pop
insl
mov
icebp
lock
outsl
xor
sbb
push
repnz
icebp
shlb
pushf
stc
xor
lods
mov
clc
dec
mov
mov
ljmp
cmpl
xchg
insb
in
hlt
nop
or
aad
stos
rclb
cmp
add
mov
add
adc
scas
mov
pop
stos
in
jbe
nop
push
bound
push
jns
inc
xor
mov
push
cmpsb
pop
movsl
loopne
pop
mov
push
mov
es
aaa
xchg
repz
mov
pop
dec
lret
cmpsl
cmpsb
xchg
sbb
out
push
mov
out
jae
subb
orb
testb
mov
sub
jl
mov
mov
xor
or
xlat
cmpsl
mov
iret
xchg
mov
shrb
xchg
sub
pop
in
sub
push
insl
fistl
push
and
shlb
out
sub
jnp
popa
sub
pop
js
push
test
sar
inc
add
dec
dec
notl
cmpsl
ljmp
cmpsb
cmp
adc
mov
add
fnstenv
call
sub
sub
cmp
popl
lock
dec
or
hlt
xchg
sbb
adc
popl
stc
aaa
jle
outsb
test
push
mov
sbb
nopl
mov
aas
sbb
mov
sub
das
test
adc
ss
inc
or
xor
adc
pop
fsubs
dec
sbb
pop
inc
inc
bnd
inc
mov
xchg
mov
dec
rclb
add
adc
mov
test
mov
mov
mov
lcall
ss
lret
sub
dec
xchg
sti
int
mov
lcall
jmp
mov
lods
push
push
mov
ja
cmp
aad
ss
sub
dec
dec
lret
pop
push
fwait
and
leave
push
jae
enter
dec
inc
xchg
inc
sub
mov
xor
sub
scas
xchg
or
testb
push
jb
add
xor
adc
sub
sti
mov
std
loop
mov
sahf
std
mov
je
mov
pop
mov
jg
sti
imul
mov
xchg
add
pusha
cmp
xor
push
xchg
sahf
pushl
push
bound
aas
pop
push
jo
pop
jns
shll
pop
mov
sub
call
outsl
mov
add
sub
pop
insb
fs
js
pushf
rol
inc
cwtl
stos
shll
dec
test
fdivrs
jecxz
pop
lods
stc
sarb
fsts
jle
mov
xor
into
and
push
in
lea
fiaddl
pop
push
adc
inc
lret
rorl
dec
xor
mov
cmpsl
dec
dec
xchg
xorl
iret
dec
aas
gs
out
push
mov
mov
sbbb
xchg
push
mov
mov
jmp
mov
dec
fs
rolb
dec
mov
mul
xor
add
fs
adc
adc
lea
or
lds
test
out
ss
jae
push
repnz
mov
cltd
xor
out
lahf
rclb
lahf
fisttpll
out
ljmp
sahf
inc
push
cmp
pop
insl
inc
mov
aas
push
or
daa
jge
ja
es
jp
cs
mov
ljmp
inc
hlt
sbb
cli
push
cmp
fistl
jnp
jne
cmp
fsub
jl
and
repnz
xorl
call
jb
adc
or
and
jecxz
push
xor
cli
icebp
outsl
mov
fists
cld
fiadds
jg
push
neg
pop
outsl
sahf
jno
mov
scas
and
lret
in
jl
xlat
inc
xchg
test
mov
inc
sub
or
out
push
mov
xorb
enter
les
xchg
mov
hlt
test
into
ret
inc
pop
push
pop
jbe
pusha
sbb
test
push
lea
sbb
popa
jae
es
sbb
mov
ja
cwtl
sbb
push
movsb
jo
inc
xor
jb
shrb
mov
pop
cmp
push
ret
add
jne
and
inc
lock
add
and
jmp
fsubrl
ja
outsb
dec
pop
popf
ja
rorb
fldenv
iret
mov
pop
jb
imul
rorl
ret
pop
stc
lods
int
je
jecxz
inc
adc
nop
mov
and
adc
insb
mov
fwait
pop
push
loop,pn
cmp
inc
ret
xorb
sbbb
in
cmpsl
xchg
push
icebp
cmp
lods
mov
cli
cmpsb
test
and
inc
push
frstor
push
push
xchg
mov
stc
inc
int
scas
fistps
jg
lock
int
jge
dec
testl
xor
and
add
sbb
pop
cli
mov
pop
arpl
pop
cmp
sahf
mov
rolb
sbb
jmp
sbb
xchg
mov
out
xor
and
add
or
xchg
push
push
jnp
in
pop
cmc
es
pop
notb
iret
sarl
jl
imul
in
sub
lods
repnz
fstps
addr16
adcb
sub
xor
inc
pop
sbb
add
inc
push
js
mov
xchg
stos
add
int
mov
and
pop
and
inc
adc
pop
jb
std
mov
cmp
mov
repnz
icebp
or
fisttps
mov
lret
adc
enter
cmpsb
aam
lea
fmuls
adc
xchg
cmpsl
lea
sub
pop
pop
cld
sahf
loopne
outsl
fists
sub
fisttpl
idivl
or
sub
sbb
dec
sbb
fadds
jg
outsl
sbb
xor
and
cld
addr16
out
push
scas
push
insl
dec
aad
test
push
adc
mov
sub
fisubl
xor
lea
ret
loop
xchg
lods
push
pushf
xchg
dec
jo
inc
mov
shl
adc
push
cmp
xchg
outsl
les
popf
xor
push
fnstsw
push
adc
pop
aas
shl
inc
shr
add
decl
int
push
or
cld
fnstcw
jae
cltd
mov
xchg
mov
or
pop
icebp
jmp
movsl
push
jbe
lret
in
icebp
jle
inc
in
cmp
mov
ja
cmp
ljmp
shr
adc
xor
or
dec
pop
adc
jg
daa
leave
inc
arpl
push
incb
incb
mov
loop
out
sub
aaa
xchg
cmp
imul
in
or
cmp
push
push
lret
add
in
lahf
orl
stos
xor
cmp
and
adc
daa
inc
insb
cmp
into
inc
push
mov
inc
test
pusha
push
movsl
imull
in
inc
rorb
dec
xchg
hlt
out
cmpsl
cltd
in
imull
faddp
sbb
mov
xchg
mov
sahf
loope
aas
call
ret
and
daa
insl
cmc
mov
cmpsb
push
insb
idivb
push
test
cli
adc
mov
test
cmpsb
cmp
leave
cmp
stc
fs
add
sahf
xor
cmpsb
adc
cmpb
xchg
mov
rol
sbb
xor
jge
mov
pop
mov
cmp
mov
fwait
popf
xor
add
shl
idiv
inc
out
push
lods
cli
popa
cmp
push
or
loop
push
dec
add
bound
mov
dec
cmp
dec
pop
test
pop
push
push
lcall
or
fidivl
popf
add
mov
mov
mov
daa
inc
xchg
xchg
sbb
cld
dec
jecxz
std
andl
js
repnz
cmp
dec
insl
jl
or
push
push
bndstx
mov
cli
mov
adc
out
out
ret
mov
push
icebp
cld
jmp
mov
out
xor
jnp
mov
inc
mov
lods
mov
push
xchg
xor
test
sbbb
jbe
cmp
scas
cs
jae
lock
rolb
jl
xlat
push
js
inc
call
mov
mov
push
jnp
add
sti
sub
dec
add
mov
out
dec
inc
cmpsl
sub
aam
leave
popf
xor
testb
stc
sub
sbbb
outsl
popf
cwtl
mov
pop
and
cmp
loop
outsb
and
into
adc
rcrb
xchg
loopne,pn
stos
cli
es
cltd
in
or
jp
sbb
inc
insb
lret
cmp
mov
leave
ja
jbe
fcoms
in
push
pop
xor
push
cmp
mov
out
sti
cmp
cmpsl
and
pop
xchg
or
shrb
out
push
out
and
xchg
xor
shll
push
movsl
dec
mov
aas
out
mov
push
push
lret
pop
xlat
push
imul
arpl
jle
pop
ret
mov
jle
out
nop
test
jecxz
mov
loope
sti
movsb
daa
sbb
mov
cmp
mov
rcrl
movsb
sti
into
dec
ret
test
sbb
pushf
int3
in
adcb
aaa
cmp
int3
xchg
xor
pop
jmp
jbe
sbb
bound
xchg
outsl
push
neg
push
int3
cmp
sub
dec
xor
adc
test
insb
inc
in
js
and
shlb
or
pushf
inc
aam
stc
push
add
test
add
mov
mov
sarl
jno
leave
data16
mov
insl
std
mov
add
int
add
adc
out
and
xchg
push
mov
mov
dec
inc
imul
dec
or
sbb
jp
aas
das
xor
add
stos
inc
sbb
mov
sub
scas
pop
loope
pop
mov
imul
hlt
lcall
pop
sbb
sti
lret
movsl
inc
popa
loopne
mov
lret
es
nop
out
adc
ss
scas
dec
ss
out
mov
mov
or
es
dec
push
dec
xchg
repz
call
sub
mov
psrld
pop
pop
and
addr16
jecxz
push
jns
mov
push
mov
xor
mov
sbb
xchg
in
jns
mov
insb
ret
pop
dec
and
out
jno
test
rcl
insb
and
and
ret
jbe
pushl
xchg
mov
sub
push
rcrl
push
faddp
das
jl
fistpll
jg
push
push
mov
mov
fsubrs
sbb
jmp
mov
shl
loopne
dec
data16
sub
js
mov
sti
pop
popa
cmp
dec
imul
mov
inc
push
jb
test
and
jns
rorl
add
arpl
mov
dec
fbstp
and
aad
rcll
adc
ja
stos
mov
cmp
out
mov
pop
fdivrl
sbb
cmpsb
testb
adc
push
repnz
repnz
cltd
sbb
jp
hlt
jbe
pop
js
push
pop
xor
push
inc
fsubrl
fwait
xlat
outsb
fisttpll
fstl
aam
push
lahf
fisttpl
js
shlb
push
pop
jl
movsl
pop
lahf
aam
xlat
or
jno
pop
out
or
cmp
pop
leave
xchg
std
sub
mov
mov
in
jns
sbb
and
pop
in
es
in
push
sub
mov
sub
dec
out
ja
mov
xchg
lock
sahf
inc
les
xchg
cmc
cmp
aad
add
hlt
es
mov
inc
push
push
scas
stos
add
shlb
int
stos
pop
mov
mov
ss
jp
or
pop
xor
xchg
subl
push
xchg
xchg
fsubrl
aad
mov
mov
lock
stc
cmp
inc
scas
sub
pop
out
mull
cmp
xchg
xor
xor
mov
stos
into
xor
xchg
push
inc
xchg
xorl
adc
mov
sbb
inc
jo
push
mov
jne
ja
xor
scas
mov
adc
xor
out
shr
dec
cmpsb
mov
cmp
add
dec
adc
dec
jo
xlat
cmpsl
dec
test
aas
push
mov
mov
nop
imul
pop
pusha
dec
out
ret
insl
lret
xchg
xor
jmp
insl
fimuls
pop
pop
fsubs
mov
enter
lret
lret
lods
jecxz
fcomps
push
adc
pop
test
pop
mov
cltd
jo
das
mov
adc
in
jge
cli
pushf
out
mov
jb
int
aam
jge
adc
sub
pop
sub
push
ret
and
lahf
jle
and
shrb
jp
ja
enter
push
pusha
bound
add
mov
je
jo
mov
jle
notb
mov
shrl
dec
cmp
cmpsb
mov
nopl
aad
jecxz
sbb
dec
xor
std
mov
js
imul
daa
lods
mov
xor
fcomi
stos
imul
fidivs
mov
outsl
mov
mov
insb
faddl
insl
jmp
call
in
jg
gs
jmp
ret
jno
xor
dec
sbbb
jg
out
repz
jle
rorb
or
outsl
jg
mov
jmp
and
fwait
rclb
adc
sub
bound
adc
jne,pt
or
test
test
cmp
dec
or
sub
sub
mov
fisubrs
mov
addr16
jge
ds
fadds
or
mov
or
scas
fildll
jnp
sti
addr16
and
xchg
pop
or
cmpl
pop
or
pop
or
mov
jmp
inc
inc
lret
cmp
test
and
or
lds
loop
insb
insl
movsb
push
sub
outsb
test
push
popa
inc
cmpsl
addr16
mov
iret
aad
sub
mov
xor
fnstsw
es
dec
xchg
inc
and
ficompl
popa
repnz
mov
jg
dec
sub
sub
int
sub
push
in
and
cmc
icebp
cmp
ds
pop
jmp
add
andb
push
xchg
lods
or
scas
cwtl
rorl
insb
aaa
or
or
insl
outsl
popa
lret
lods
adc
mov
aas
push
xlat
mov
rcrl
daa
xlat
imul
sbb
setge
inc
xchg
test
xor
mov
mov
jb
jns
pop
push
aaa
ret
js
dec
cmp
xchg
cmp
mov
ljmp
adc
and
out
enter
and
xchg
jnp
push
scas
lcall
pop
gs
cmpsb
push
xchg
lods
fsubl
cltd
xor
xchg
mov
loopne
repnz
addr16
sub
xchg
mov
fildl
test
jecxz
mov
add
inc
loope
push
inc
and
inc
sarb
mov
jmp
dec
fisubrs
divl
inc
shl
dec
mov
pop
cld
hlt
jg
loope
stos
aaa
enter
cmc
push
mov
insl
loopne
mov
or
mov
sbb
stos
add
push
mov
aaa
pop
sbb
adcb
inc
mov
rcrb
and
loop
push
int3
das
hlt
xchg
push
call
mov
xor
xchg
mov
sub
mov
push
cmc
and
add
ds
jne
lea
fwait
jp
mov
adc
sbb
mov
adc
negl
orl
movsb
or
push
push
aam
rcrl
mov
push
popa
mov
popf
test
pop
aaa
ljmp
or
add
adcb
ror
cmp
fadds
push
mov
movsb
cltd
test
push
sub
xor
in
cltd
adc
insb
stc
jmp
jle
adc
in
dec
xchg
cmc
mov
jnp
jmp
cmpsl
mov
mov
dec
insl
jl
push
push
int
mov
lret
imull
movsb
in
mov
test
add
cmpsb
pop
xchg
xchg
lahf
sbbl
imul
xchg
xchg
nop
add
cld
in
jae
mov
iret
xchg
cwtl
jo
push
jecxz
or
test
mov
in
push
and
mov
test
in
inc
into
mov
je
mov
mov
jnp
dec
cltd
jae
pusha
dec
fwait
inc
into
xchg
nop
movsb
rorl
xor
jo
inc
cwtl
imul
outsb
sti
call
gs
sbbl
sub
push
fwait
mov
and
mov
shld
in
inc
inc
and
pushf
nop
shrb
xor
imul
cmp
pop
cmp
pop
dec
fdecstp
mulb
data16
lock
out
cmp
sub
and
inc
mov
mov
sbb
sbb
in
lahf
or
cmpsl
or
imul
sti
mov
loopne
jbe
adc
stos
js
loopne
loop
mov
mov
push
inc
fidivs
scas
dec
in
bswap
pop
out
cmp
jns
mov
dec
insl
jp
lcall
icebp
popf
aaa
push
and
fisubs
out
cmpsb
mov
sub
in
jecxz
xchg
adc
xor
xchg
jmp
in
rcrb
adc
sub
xchg
xor
in
mov
jno
xor
je
xor
hlt
mov
add
fwait
cmp
add
push
cmp
ljmp
stos
mov
pop
jns
into
mov
push
rcrb
cmpsb
subb
or
mov
dec
aas
inc
add
xchg
mul
pushf
adc
aam
sbb
inc
lcall
push
lods
sub
out
inc
mov
out
mov
inc
test
pushf
je
loopne
jb
adc
sub
mov
out
adc
fs
movsb
imul
je
jns
sarl
mov
ret
arpl
popa
lds
js
add
sbbb
jl
cli
push
adc
repnz
andl
fdiv
int3
cmp
push
mov
das
or
dec
mov
aam
pop
outsl
xor
mov
mov
gs
xchg
int3
gs
movsl
cmp
adc
nop
aaa
inc
sahf
les
aas
stos
jle
jl
sahf
xchg
daa
add
push
sub
sbb
mov
xor
cmp
loopne
mov
aam
rorl
lahf
popa
sub
gs
icebp
mov
movsb
fbstp
sub
pop
mov
cmp
xchg
inc
jg
rol
or
stos
lea
ret
shr
fucom
mov
sar
cmpsl
cld
add
push
mov
dec
cmpsl
push
lock
push
ljmp
insl
sbb
out
xchg
pop
clc
mov
cmc
xchg
incl
push
repnz
test
test
repnz
lods
imull
sub
and
jno
scas
pop
lds
push
aad
inc
cwtl
gs
cmp
push
lods
repnz
jb
outsb
fcoms
lahf
jo
push
mov
pusha
inc
imul
dec
fsubrl
adc
sub
cltd
jb
stos
inc
cmp
insb
sub
rcl
push
cmpb
repz
dec
cltd
mov
stos
mov
cmp
adc
push
pop
lcall
adcl
adc
or
pusha
sub
inc
lret
mov
mov
mov
fwait
loopne
sarb
and
jnp
or
pusha
sub
inc
lret
mov
mov
mov
fwait
loopne
sarb
and
jnp
or
pusha
sub
inc
lret
mov
mov
fwait
loopne
sarb
and
jnp
or
pusha
stos
push
mov
or
sti
idiv
js
pop
push
das
inc
aas
fildll
out
bound
std
insb
sarl
and
dec
into
jg
outsb
loopne
xchg
jb
fists
inc
pushl
bound
xor
ret
outsl
loop
icebp
rsqrtps
mov
mov
ljmp
jnp
or
cmp
insb
clc
adc
pusha
in
dec
in
mov
incl
sub
std
add
mov
push
jecxz
pop
orb
scas
mov
jns
mov
xchg
cmove
mov
cltd
cld
inc
mov
lret
loop
loop
pop
push
xlat
push
lods
mov
adc
cli
add
icebp
into
pop
push
sbb
jg
scas
addr16
xorb
dec
das
mov
xchg
jb
push
mov
push
fst
or
adcl
dec
jge
cmp
enter
mov
xor
and
mov
loop
cli
lock
xor
pop
sub
xor
scas
scas
or
mov
repnz
roll
adc
push
jmp
js
adc
cmp
dec
fidivrl
outsl
sti
pop
mov
xchg
aas
mov
sahf
aaa
mov
arpl
pop
lods
dec
pop
mov
pop
lea
decl
rcrl
iret
mov
add
xor
push
std
dec
cmp
outsl
mov
push
ficomps
mov
adc
add
rorb
jg
outsl
loop
xchg
jb
fists
inc
pushl
bound
xor
ret
outsl
loop
xchg
jb
fists
lds
shlb
lea
mov
sub
jl
push
out
fwait
call
and
pop
push
mov
ret
or
jge
pop
mov
add
lcall
shll
xor
mov
mov
mov
loope
lcall
mov
add
cmp
mull
outsb
incl
arpl
push
sub
xor
int
xchg
pushf
ss
cs
and
iret
xchg
pop
add
int3
dec
divl
outsl
add
cmc
push
xor
aad
mov
out
or
push
decl
inc
stos
pop
jne
aad
aaa
fbld
jo
notb
sbb
popf
das
lods
xor
into
inc
xlat
sarl
sbb
jne
repz
frstor
pop
sbb
xchg
out
shlb
pause
ds
cmc
int
test
pushf
ret
mov
sbb
gs
movlps
mov
inc
aaa
gs
sbb
xchg
fadds
test
jg
inc
sub
lock
push
int
sbb
arpl
addb
inc
mov
jo
and
adc
scas
lcall
in
ds
push
mov
mov
fldt
cmpsl
pop
xchg
adc
leave
pop
out
mov
or
mov
ret
lock
sbb
cmp
popf
mov
sar
sti
repz
outsl
mov
or
mov
cmc
or
jmp
sbb
jge
jnp
mov
and
lds
cmpl
jg
xor
jmp
jg
xchg
or
inc
ud0
pop
repz
add
sti
dec
fwait
gs
mov
lock
push
or
mov
adc
addr16
or
out
cmp
push
nop
pop
sub
addb
popa
sbb
xchg
or
movb
out
popa
repnz
adc
insb
inc
mov
jl
sub
jecxz
cmp
push
nop
cmp
and
ret
jmp
jmp
add
cmp
movsb
mov
fstpl
fldl
jnp
outsl
and
fwait
ljmp
cli
imulb
push
inc
xchg
movsl
cld
sahf
sbb
pop
sub
xor
cld
mov
in
mov
cmp
adc
sti
outsb
scas
push
sahf
push
cmp
mov
mov
jmp
mov
dec
push
add
leave
add
scas
pushf
out
fs
addb
pop
dec
addr16
addr16
jne
addb
or
lods
add
cmc
int
int3
pusha
scas
ja
outsl
sub
aas
push
insl
js
cmc
xor
xlat
aad
jge
lea
dec
cmp
cs
dec
mov
adc
pop
popf
into
dec
pop
in
pop
mov
sbb
mov
lea
add
mov
sub
sub
popf
and
xor
fcmovnbe
call
int3
and
jo
mov
dec
into
sub
push
cmpsb
adcl
inc
int
aaa
fucom
arpl
shlb
out
push
xchg
push
in
mov
popa
shlb
cmc
mov
cmp
stos
sahf
xor
and
jecxz
pusha
in
xorl
cltd
inc
and
pop
push
add
fdivl
jnp
in
pop
mov
cmp
add
imul
or
mov
rol
adc
and
shl
imul
addr16
pop
popf
lds
jge
mov
fisubl
xor
adc
inc
mov
rorl
nop
mov
xchg
xchg
shlb
push
mov
jns
push
inc
test
ret
mov
in
imul
lods
outsb
outsl
cmp
sub
sub
rcrl
xor
dec
bound
stc
lds
pop
mov
inc
sbb
cmp
stc
push
and
cmp
sbb
cmc
xchg
mov
fcompl
cmp
movsb
cmp
mov
xchg
mov
gs
lcall
mov
sbb
iret
shrl
cmp
lahf
mov
push
aaa
add
mov
movsl
mov
pop
mov
ds
ret
outsl
or
fisubrs
es
les
jae
sbb
cmp
xchg
xor
push
mov
or
test
lods
arpl
cmp
cmp
mov
rcr
mov
sti
pop
and
mov
jl
sbb
mov
outsl
js
xlat
insl
mov
pusha
mov
jno
dec
or
test
mov
pop
sbb
shr
flds
hlt
xchg
test
jle
loop
add
mov
test
mov
mov
mov
sub
sbb
idivl
sarb
or
cmpsl
mov
insl
mov
jns
stos
sub
ret
std
ljmp
outsb
or
es
icebp
int
sub
aaa
or
mov
jp
pop
push
pusha
call
jne
cmp
rcrb
dec
movsl
es
sub
shrb
push
cmp
cmp
sub
outsl
cmp
cmp
repnz
outsl
pop
cmp
sti
xor
jns
pop
pusha
add
xchg
jmp
xlat
xor
cs
add
icebp
ficompl
adc
xor
mov
out
lea
inc
pop
sbb
inc
lods
pop
sbb
cmpsb
je
jne
inc
or
push
sti
int3
and
rcr
jo
mov
sub
xchg
mov
hlt
fcompl
ret
setae
dec
mov
shll
mov
imul
or
xor
jno
loopne
fistpl
adc
cmp
call
add
clc
shrb
sub
xor
adcl
fildl
adc
add
icebp
mov
mov
add
jo
fsubrs
jns
sub
stc
jecxz
pop
leave
notl
xchg
fidivs
inc
cmp
dec
ret
pop
stos
dec
clc
icebp
ljmp
mov
push
sti
lds
pop
aam
sbb
mov
orl
mov
aad
dec
lret
push
insb
fmul
shl
in
jmp
mov
jbe
ret
dec
imul
sub
push
and
xchg
inc
push
cmp
sbb
mov
aas
or
lds
loope
ljmp
sbb
mov
idiv
push
xor
push
call
adc
push
dec
out
adc
andl
ja
push
add
inc
imul
enter
pop
adc
push
iret
stc
push
push
call
cmp
daa
into
psllw
stos
cmp
pusha
or
cmpsb
scas
adc
mov
mov
add
fldenv
jg
or
and
ficomps
or
cwtl
daa
aad
out
push
push
stos
in
mov
mov
aad
mov
mov
js
out
or
in
ficoml
movsb
adc
xchg
cmc
das
outsl
test
jbe
sub
sub
pop
sub
ds
test
sub
mov
dec
nop
fistpll
dec
or
cmp
cmp
mov
adcl
addr16
or
cmpsl
pop
xchg
cmp
push
xchg
es
out
inc
xchg
test
movsl
cmp
mov
ss
roll
aas
xor
jbe
sub
or
rcrl
adc
cwtl
xlat
push
and
jns
cmp
stos
dec
add
mov
add
daa
mov
nop
or
mov
cltd
cmp
xchg
xchg
flds
daa
sarb
dec
jbe
push
movsl
xchg
repnz
fs
xor
das
movsb
lock
leave
or
outsb
scas
push
add
in
rorb
xlat
pop
pop
addb
sarl
insl
popf
adcl
fs
dec
xchg
out
mov
cmp
pop
jb
pop
int
mov
add
jmp
popf
push
lds
mov
cmp
push
mov
rcll
cwtl
jo
das
xorl
and
int
cmp
stos
adc
mov
test
insb
fcoms
shrb
dec
test
add
mov
add
push
jp
push
aas
dec
pop
pop
stc
push
push
lcall
adc
pop
xchg
dec
mov
add
in
push
idiv
xor
xlat
inc
sub
sub
or
push
mov
in
lds
pop
in
xchg
lods
ret
lret
adc
roll
xchg
lret
push
push
icebp
xor
loop
cmc
xchg
imul
jno
lods
pop
xchg
inc
sbbl
sub
ja
das
mov
les
leave
mov
rclb
and
xchg
pop
and
inc
cltd
outsl
sub
jae
mov
flds
mov
mov
popf
negl
pop
das
subb
push
jl
pop
push
fdivs
pop
push
sbb
hlt
mov
xchg
les
movsl
shlb
adc
dec
imul
cmp
aam
sbbl
jl
repnz
clc
int3
inc
rcr
sub
add
mov
sbb
loope
xchg
inc
inc
repz
xchg
icebp
inc
pop
js
stc
repnz
adc
inc
out
mov
dec
sti
fs
jbe
xchg
mov
pusha
les
xor
fiaddl
add
adc
mov
rcll
fnsave
jp
mov
mov
movsb
or
adc
mov
mov
push
mov
mov
sahf
out
mov
dec
mov
xorb
adc
lret
sbb
int3
mov
scas
push
stos
inc
xor
sbb
mov
xor
cmp
sub
push
dec
pop
add
adc
inc
cmc
repnz
lahf
pop
shrl
imul
popa
cltd
sbb
sbb
fwait
outsb
adc
sahf
mov
adc
lods
jge
xor
sub
leave
push
cltd
sbb
inc
sub
mov
mov
shrb
push
mov
idivb
mov
push
lods
mov
adc
es
xchg
pop
popa
or
arpl
stc
cmp
mov
iret
les
lods
jle
mov
cli
lods
adc
pop
jno
pop
inc
cmpb
outsl
cltd
call
fdivp
dec
insb
testl
jbe
gs
test
into
scas
sub
adc
lret
jne
lcall
xor
insb
xchg
xchg
jns
out
ds
cmp
and
pop
or
imul
add
xchg
xchg
pop
in
pop
insb
push
cli
xchg
test
and
inc
test
mov
cmpsl
rclb
cld
shlb
mov
les
mov
pusha
xor
dec
xor
mov
cmp
and
lock
cmp
inc
xchg
loopne
insl
nop
add
push
or
jmpw
mov
cmp
xchg
nop
aas
and
mov
push
faddl
mov
orl
inc
adc
outsb
inc
test
insb
dec
popf
rcrb
mov
lea
jnp
xorb
test
adc
negb
jle
bound
sub
pop
mov
fadds
push
mov
xchg
cli
inc
cmp
cmp
in
mov
inc
mov
subl
imul
adc
ljmp
inc
call
adc
jns
pop
push
addr16
stos
out
mov
xor
in
jb
mov
addl
sahf
mov
fsubp
sti
adc
mov
xchg
fcoms
das
fcom
cs
pop
and
add
inc
iret
pop
add
int
out
push
mov
or
pop
enter
fimull
aaa
jne
cmp
jne
jmp
icebp
cmpsl
xor
add
jo
mov
cwtl
jmp
or
push
repz
dec
cmp
pusha
repz
lds
push
dec
inc
adc
cmc
dec
sub
or
fsubs
clc
add
cmp
xlat
xchg
int3
dec
adc
mov
cmp
push
xor
sar
cmp
mov
fsubl
inc
test
mov
pop
imul
lahf
mov
repz
jb
jne
fildll
out
sub
dec
push
cmp
push
scas
or
mov
das
pop
pop
in
adc
xchg
movsb
cmp
inc
hlt
sub
and
add
scas
lret
xchg
push
fiadds
inc
add
daa
adc
cmpsb
pop
or
push
pop
cmp
pop
mov
xchg
inc
ror
inc
push
dec
xchg
pop
test
es
ret
push
mov
fistps
outsl
mov
hlt
xchg
dec
movsb
out
lock
nop
fistl
mov
addl
pop
push
xchg
or
adc
in
int
mov
repnz
xchg
adc
inc
popf
outsb
loopne
pop
and
jp
lahf
mov
imul
push
xchg
cmpl
or
inc
jecxz
int
enter
sub
and
xor
inc
or
aam
jb
xor
jp
out
pop
inc
aas
sub
xchg
popa
push
sub
lock
scas
inc
stos
xchg
fwait
mov
cmp
test
mov
inc
jl
mov
outsl
cmp
inc
shlb
ds
jmp
je
sti
sbb
aaa
sti
push
les
mov
mov
xchg
dec
scas
popa
mov
movsb
pop
fwait
push
movsb
cli
jne
cmp
cmp
gs
addb
stos
and
inc
pushf
icebp
dec
push
mov
and
pop
ljmp
mov
xchg
rcrb
mov
icebp
xor
xchg
popf
pop
ljmp
jge
cld
lahf
decb
adc
loope
mov
mov
and
cmp
insl
jmp
test
jmp
in
mov
repnz
rclb
popa
mov
js
negl
xchg
scas
in
or
jle
dec
cmp
cmp
das
daa
mov
inc
into
xchg
and
jb
in
mov
mov
mov
xchg
pop
xchg
jge
cmp
cld
xchg
ds
jp
scas
sar
add
xchg
and
mov
ficoms
shlb
adc
jno
lds
push
push
xor
imul
lods
xchg
jp
dec
out
mov
cwtl
push
pusha
adcb
cmp
xor
aaa
add
add
inc
aam
jns
or
in
push
and
sbb
xor
xor
ss
movsb
je
sub
sub
adc
inc
jnp
cmp
xchg
inc
pop
lret
addb
jle
imulb
mov
push
inc
pop
xor
cmp
cmp
pushf
adc
out
rorl
push
imul
mov
xchg
sti
aas
arpl
call
dec
cli
imul
lods
dec
rcl
mov
js
adc
sahf
sbb
sbb
push
dec
mov
mov
xchg
xor
lahf
test
idiv
js
test
dec
addb
push
repnz
out
xchg
fimuls
dec
outsl
mov
shl
aas
mov
out
xor
sahf
in
insb
cld
push
mov
cmpsl
aam
and
cmp
nop
loop
add
push
leave
jne
inc
mov
lods
push
test
into
pop
and
cmp
incl
xchg
gs
out
adcb
aad
push
ret
dec
dec
jns
inc
xchg
addr16
loop
push
sbb
jb
xlat
in
jg
int
or
inc
rcrl
xchg
push
add
inc
jmp
dec
mov
push
xor
in
push
ret
sbb
out
imul
dec
clc
dec
out
jp
sbb
movd
jecxz
jle
bound
jns
insb
rcl
insb
mov
pushf
cltd
imul
pop
jbe
jmp
add
cltd
add
decb
test
adc
and
divl
cmp
and
push
fiadds
add
frstor
ret
sbb
icebp
loop
stos
out
add
xlat
adc
xor
and
in
cs
enter
cmp
xlat
mov
sti
gs
repz
sbb
int
lods
out
inc
adc
sub
imul
test
out
adc
xchg
dec
mov
jg
mov
rclb
mov
mov
pop
push
loope
icebp
aas
push
loop
sub
dec
and
fs
ret
mov
mov
or
pop
dec
insl
pop
aas
jl
mov
sub
adc
nop
ficoml
jge
inc
adc
add
out
sbb
dec
xchg
pop
arpl
cmp
pop
mov
push
stc
push
jmp
shrb
cld
mov
jne
lret
pop
fstpt
mov
loopne
data16
scas
mov
fidivrs
pop
int
inc
in
fisttps
mov
arpl
into
push
jbe
dec
int
pop
xor
cmpsb
lcall
or
adc
call
mov
lds
xor
int
dec
cmp
xchg
or
imul
dec
cli
and
push
adc
inc
or
lods
jno
jle
pop
jb
sub
fsubrs
fisubs
mov
dec
mov
pop
out
sub
jbe
and
arpl
int
push
mov
pop
jns
or
lock
dec
push
xorl
inc
cmc
pusha
jmp
dec
jne
icebp
mov
out
xor
sbb
loop
movsb
sbb
cli
add
ss
dec
mov
cmp
mov
test
pop
cmp
jg
stc
fsubl
enter
and
arpl
icebp
cmpsb
push
in
cmp
bound
hlt
pop
inc
dec
sub
cmp
movl
cmp
stc
pop
add
add
js
lock
repz
sub
push
dec
hlt
inc
cwtl
sbb
stos
shrl
xchg
clc
cwtl
repz
popa
and
shr
jg
pop
ret
or
std
int3
cltd
add
dec
inc
sbb
bound
bound
ds
rol
xor
das
push
stos
mov
hlt
xor
mov
and
inc
dec
sbb
sbb
imulb
test
push
je
mov
movsl
js
inc
je
fs
data16
cld
js
int
pop
lcall
fucomp
cmp
add
fsubrl
or
mov
jg
xor
loop
push
ret
lods
jo
arpl
imull
mov
mov
mov
sbb
adc
push
pop
pop
xchg
ljmp
inc
lds
xchg
repnz
pop
idivb
mov
ljmp
pop
sbb
sub
jmp
mov
mov
jle
mov
inc
adc
fwait
mov
aam
mov
gs
push
pushf
aad
dec
mov
inc
scas
jne
xor
mov
popf
mov
jno
and
scas
call
mov
shll
xchg
stc
ds
pop
pushf
jge
cmc
jno
push
pop
inc
repz
std
cs
cli
push
jle
pop
jg
repz
xorl
sub
add
je
and
xor
rcrb
adc
fistps
jmp
mov
jge
sub
sti
movsl
cmp
jmp
int
push
rolb
mov
aam
pushf
or
jmp
jbe
mov
mov
xor
add
mov
rcrb
mov
mov
test
and
cmpsl
adc
sti
lret
rcl
movsl
lret
pop
cmp
push
mov
dec
test
inc
adc
jecxz
sub
adc
jg
jns
sbb
call
mov
aaa
xchg
aas
jne
mov
cli
cli
mov
clc
xchg
push
sub
jmp
mov
push
cmp
sub
xchg
and
in
xlat
loope
pop
jno
add
push
adc
sbb
and
pop
bnd
mov
sti
dec
jecxz
in
adc
fdivs
stc
movsl
hlt
lods
lcall
test
outsb
mov
lods
mov
mov
sub
pop
xor
mov
pop
std
or
push
mov
stc
movsb
cmp
sbb
and
adc
xchg
lock
mov
loop
xchg
cltd
sarl
mov
xor
imul
sub
in
push
ljmp
enter
or
stc
pop
pushf
int
mov
fs
ret
cmpsb
xchg
cmp
cmpsl
data16
stc
mov
ds
push
and
inc
pop
adc
insb
popa
outsb
inc
pop
fsubl
test
jg
fwait
pop
imul
or
mov
shl
sbb
sub
fcoms
cmpsl
js
cmp
dec
dec
jp
jmp
pop
enter
pop
mov
sbb
inc
mov
dec
loopne
push
pop
test
mov
mov
pop
neg
shrb
gs
mov
fisubrs
sarl
test
mov
rcl
or
pop
in
mov
xchg
cld
or
sbb
test
mov
adc
push
xor
shll
push
scas
pop
jns
dec
adc
mov
jg
inc
push
pop
iret
jne
insb
fnstcw
fiaddl
push
sbb
dec
int3
lahf
inc
popf
out
bound
xor
ret
outsl
loop
xchg
jb
fists
inc
pushl
bound
xor
ret
outsl
loop
xchg
jb
fists
inc
jg
out
bound
adc
and
dec
ret
outsl
jecxz
xchg
jb
fists
inc
pushl
bound
xor
push
outsl
sbb
dec
dec
pop
pop
repz
call
mov
jmp
dec
cmp
push
cmp
mov
call
stc
cwtl
leave
test
mov
insl
push
js
dec
push
cmp
call
loopne
shrl
xor
or
js
dec
xor
cmp
cmp
enter
xchg
test
cli
jb
mov
sarb
xchg
inc
and
test
mov
cmp
loopne
cmpsl
imulb
cmc
aad
cs
movsl
js
imul
pop
xchg
cmpsl
add
rcll
cmpsl
pop
test
test
xlat
sahf
mov
clc
int3
mov
cwtl
and
flds
xchg
push
xor
xchg
inc
sub
bound
out
xlat
mov
dec
sub
shrb
pop
mov
mov
nopl
js
xlat
mov
daa
mov
push
std
jb
sub
repnz
cmp
sbb
sbb
pop
cmp
mov
clc
stc
mov
cwtl
leave
test
mov
adc
js
or
dec
sub
fisubl
std
xchg
in
cwtl
lret
out
call
jnp
ja
add
sub
test
call
xchg
cld
movsl
fistps
dec
or
imul
cmp
push
in
sbbb
leave
test
mov
or
js
or
dec
sub
test
call
stc
cwtl
leave
test
mov
or
js
or
dec
sub
test
pop
icebp
mov
jbe
cmpl
icebp
cs
inc
pop
hlt
fadds
lahf
or
cmp
enter
lock
cmp
fisttpll
add
scas
inc
sub
fstp
mov
aam
sbb
filds
aad
es
xchg
les
cmpsb
xor
aam
dec
inc
aam
test
push
lcall
add
jbe
nop
scas
sub
push
das
call
pop
in
jbe
push
loope
stos
ret
mov
mov
and
xor
pop
mov
cmp
in
neg
aaa
pushf
popf
mov
aas
sbb
xlat
rcr
or
cmp
mov
clc
pop
in
iret
add
mov
in
out
or
cmp
cltd
push
lret
repnz
clc
lods
dec
enter
add
decl
rcll
dec
mov
mov
insl
inc
adcl
xor
xchg
inc
fs
ljmp
pop
pushf
jno
mov
push
or
cmp
popa
mov
pop
push
subb
roll
sub
xchg
add
sub
push
mov
sub
sti
inc
xor
xchg
inc
in
loop
in
jmp
or
mov
jo
test
inc
pop
mov
dec
decl
les
jle
jecxz
dec
pop
add
mov
push
cmp
inc
inc
xor
stos
jne
lahf
pop
and
loop
repz
popa
stos
jge
test
mov
mov
dec
push
insl
mov
push
cli
mov
test
push
pushl
fisubl
dec
test
or
xchg
clc
out
in
pop
loop
test
mov
mov
cmpl
mov
rclb
movsb
fists
test
and
movsb
pop
data16
aad
or
movsb
clc
dec
jmp
insl
out
inc
push
jge
sbbb
loopne
dec
icebp
cs
scas
dec
cmpl
cmp
mov
mov
in
adc
sti
std
aaa
and
jno
xchg
jp
stc
stos
sub
pop
pop
ss
mov
and
test
es
mov
fsubr
mov
pop
imul
inc
fimull
dec
shlb
repnz
adc
mov
push
std
push
sub
les
and
jae
or
inc
push
je
and
jge
test
cmpsb
popf
mov
sub
ret
fcompl
adc
push
cmp
sar
fnstenv
dec
fiadds
outsl
push
fdivrl
xchg
xlat
xchg
mov
ljmp
popa
loope
mov
lea
cld
test
ljmp
loop
movb
ss
aas
inc
scas
pop
xchg
xchg
cltd
mov
pop
push
mov
sarl
test
jmp
cmp
sbbb
lret
fistl
jnp
mov
dec
lret
cmp
adc
dec
and
rclb
ret
shl
lea
cmp
addr16
xchg
jle
inc
sarl
lahf
ss
or
jbe
fs
jb
xchg
fadd
xlat
pop
adc
fs
std
mov
clc
xor
push
out
mov
inc
cli
mov
xchg
pop
pop
scas
lret
push
subb
xchg
out
into
sub
addr16
xor
popf
insl
in
jg
shlb
pop
mov
iret
in
fdivr
lcall
and
imul
jl
xchg
cmpsl
push
shlb
icebp
hlt
and
mov
jb
pushf
inc
repnz
or
fisubrs
mov
adc
fsubl
mov
and
fwait
imul
jno
popl
pop
scas
scas
stos
mov
rclb
mov
push
sbb
sub
mov
mov
pop
loopne
fcmovbe
data16
clc
mov
xor
imul
jle
daa
dec
xor
push
pop
addl
pop
data16
xor
inc
xor
clc
push
cmp
das
imul
add
inc
hlt
push
fstl
push
stos
test
xor
inc
jno
loope
ja
dec
mov
xor
lds
imul
and
mov
jge
insl
xor
out
inc
inc
inc
pop
call
orl
out
sub
push
push
cltd
jge
fwait
out
jae
lods
jp
ror
jle
and
adc
pop
push
nop
inc
into
xchg
or
push
outsl
fisttpl
pusha
add
je
ja
out
test
shll
xorb
xchg
stos
pop
and
mov
mov
test
mov
in
inc
jmp
push
sar
adc
mov
sub
cmp
inc
ds
mov
call
cltd
imul
jno
nop
adc
mov
data16
adc
fwait
cmc
mov
jl
loopne
inc
jge
cmp
push
pop
pop
dec
jge
and
add
adc
popa
jecxz
loopne
push
dec
in
dec
sbb
sahf
sbbb
lods
ffreep
mov
jo
out
leave
ljmp
pusha
push
jno
in
sub
xchg
stos
mov
les
es
ja
in
push
loop
or
rorl
imul
xorb
test
xchg
call
pop
mov
dec
xcrypt-ctr
cmpsl
pop
and
loop
scas
loopne
ret
iret
das
leave
lcall
jg
add
jmp
outsl
mov
hlt
xchg
pop
test
dec
test
gs
pop
rol
icebp
or
inc
icebp
inc
loope
push
shlb
and
addr16
lahf
mov
sub
rcll
lods
jno
je
addr16
sub
jmp
adc
out
pop
cltd
push
mov
pop
movsb
inc
daa
fisubs
push
popa
out
xchg
pusha
clc
lahf
fs
lcall
lea
je
movsl
push
xor
scas
add
hlt
aas
jge,pt
jb
cmp
push
mov
dec
loope
lds
mov
mov
pop
dec
mov
fs
or
ljmp
mov
mov
movsl
push
mov
xor
jae
jae
cmp
sub
jne
outsl
into
jns
pop
push
shl
dec
rorl
popa
adc
les
jb
das
cmp
in
iret
push
or
adc
or
sti
mov
fwait
outsb
mov
scas
rol
arpl
iret
jl
push
push
out
movsb
or
dec
jecxz
inc
std
scas
mov
das
stos
mov
imul
sbb
xchg
pop
cmp
daa
dec
push
ss
je
mov
jmp
jge
testb
out
cmpsl
gs
std
mov
add
das
pop
push
inc
sub
xor
ljmp
cmpsl
cwtl
test
gs
adc
xchg
xchg
mov
outsl
icebp
iret
cmpb
pop
ret
sbb
mov
mov
cmc
int3
jb
clc
push
mov
add
pop
xchg
lods
push
pop
push
jnp
hlt
inc
in
enter
es
or
mov
daa
adc
sbb
icebp
into
in
mov
cmc
add
inc
inc
mov
jo
dec
push
sub
push
repnz
cmpsl
jge
cli
mov
cld
xor
out
je
cmpsb
xor
dec
in
dec
out
fwait
lahf
jo
lahf
popf
cmp
sub
or
lret
sti
xor
movsl
fsubrs
lods
movsb
lret
dec
movsl
sub
ss
lods
and
mov
roll
xor
jl
add
cmp
adc
mov
sbb
insb
stc
xchg
aaa
ret
dec
cmpsb
mov
notl
add
push
sbb
nop
push
std
das
jg
sbb
idivb
inc
xor
les
add
mull
les
or
sbb
inc
je
pop
inc
imul
xor
jecxz
ret
pushw
adc
cmp
outsb
jecxz
ffree
mov
jle
push
fisubl
out
inc
or
mov
cs
fsubrs
pop
inc
or
inc
in
lret
pop
dec
sbb
add
lcall
sub
test
cs
mov
ja
xor
jns
mov
fs
sub
loop
int
addr16
cli
roll
push
pusha
inc
pop
push
ds
or
xchg
cmp
jno
add
xlat
xchg
push
mov
repnz
aad
push
pop
push
cmp
test
test
clc
jnp
inc
sbb
sar
pop
leave
adc
fildl
mov
mov
rorl
xor
mov
sub
pand
dec
jo
fildl
out
and
insl
ret
add
ljmp
mov
sbb
inc
or
adc
mov
std
xchg
dec
push
jp
pop
xchg
cltd
test
lret
imulb
cwtl
sti
sub
dec
js
jbe
jecxz
xor
jne
lahf
adc
jno
xchg
repnz
and
lret
testl
cmp
mov
stos
hlt
fwait
sti
xchg
das
rorl
adc
adc
dec
fldl
loop
jp
andl
xchg
ret
sub
jns
fwait
gs
loop
lcall
xchg
jno
mov
add
mov
ss
mov
fdivr
and
and
pop
out
mov
and
ss
int
pop
push
pop
cwtl
fildll
sbb
paddb
cmpsl
inc
lods
or
push
inc
insb
stos
push
mov
shl
xchg
inc
es
rolb
fisttps
push
inc
add
fbstp
mov
and
pop
sbb
push
cltd
cmc
sarb
pop
jecxz
mov
push
sbb
jae
loope
dec
daa
mov
aas
aaa
add
jg
cli
pop
mov
inc
pop
fsubr
xor
push
shr
cmp
rclb
imul
jmp
int3
push
cmpsb
mov
out
scas
sub
pop
cmp
imulb
dec
push
xor
inc
sbb
outsb
orb
push
imulb
push
repnz
inc
dec
out
in
aam
lret
cmp
mov
push
fdivl
lods
pop
sbb
repz
je
fistpll
pop
std
rolb
lods
pop
mov
fsts
inc
test
lea
xchg
xchg
in
imul
lods
fwait
test
mov
sub
ljmp
xor
sub
les
push
daa
jo
adc
sbb
push
xchg
add
aad
fwait
out
mov
test
mov
scas
out
pop
lds
fidivs
sarb
and
sbb
imul
inc
push
sti
fs
add
fdivrs
inc
test
sbb
out
cmp
mov
add
xor
cwtl
cld
test
push
mov
mov
push
and
addr16
push
jp
test
sub
loopne
and
ljmp
mov
and
cmp
jle
sbb
call
pop
nop
jb
jns
sbbb
movsl
add
mov
stos
adcl
das
add
mov
inc
mov
push
cli
repz
lret
xor
pop
xor
in
bound
imul
cwtl
pop
js
lds
adc
mov
jns
movsb
xchg
push
or
adc
nop
push
data16
popa
mov
popl
fcmove
inc
adc
cli
movsb
in
mov
cmc
ret
mov
or
pushf
popf
push
es
xor
mov
pusha
mov
mov
pop
push
movsl
lods
lahf
idivb
gs
xor
mov
loop
jnp
or
pop
aaa
fistps
out
lds
mov
out
cld
ja
ret
movsb
and
sbb
lahf
sbb
test
outsl
and
dec
cmp
inc
das
lods
xchg
xor
mov
aas
negl
pop
imull
push
dec
adc
mov
sub
dec
push
fldcw
add
out
call
in
pop
lods
sub
mov
mov
cmp
add
bound
in
mov
mov
movsl
xor
ljmp
daa
jno
test
lods
push
in
mov
jl
xor
pop
shl
mov
ds
mov
cs
push
dec
cwtl
data16
pop
or
and
inc
lds
das
push
pop
orb
sbb
xchg
mov
pop
xor
sbb
arpl
cltd
inc
sub
cli
jle
xor
cmpsl
dec
push
test
aam
inc
cmpsb
lock
adc
inc
lods
mov
jae
add
mov
fwait
mov
rolb
sbb
xor
jnp
jmp
mov
add
sbb
mov
mov
jle
mov
xchg
pop
jbe
inc
movsb
inc
jno
mov
repz
insl
shrl
dec
je
icebp
sarl
push
loop
xchg
mov
movsb
xchg
sahf
mov
bound
leave
add
push
xchg
jge
sub
scas
inc
iret
dec
push
scas
inc
xchg
in
jbe
mov
or
in
leave
dec
cwtl
rorl
jmp
xor
pop
pop
bound
adc
push
ss
icebp
cmp
ret
or
jl
inc
std
xchg
sahf
ljmp
xor
popa
iret
call
int3
in
fsub
bound
mov
sbb
nop
out
and
sbb
js
push
xchg
repnz
lds
mov
xchg
jnp
push
out
aam
push
and
jno
mov
arpl
push
mov
mov
jns
jle
push
daa
adc
popa
and
xchg
sbb
inc
insl
xchg
xchg
mov
stos
pop
imul
pop
and
loopne
mov
sbb
cli
push
sti
or
aam
je
loop
dec
jns
mov
xchg
mov
test
cmp
jp
xchg
faddl
cltd
scas
mov
cltd
dec
xor
repnz
add
add
pop
cmp
pushf
jnp
imul
aad
lcall
mov
jecxz
imul
mov
jl
daa
cmpl
mov
int3
push
push
jb
int3
lods
call
ljmp
enter
cmp
mov
loop
dec
cld
jg
xchg
cltd
and
fcmovbe
inc
fstpl
dec
push
mov
in
mov
mov
xchg
lret
jnp
lea
adc
sbb
adc
les
insl
in
push
inc
mov
push
inc
es
hlt
mov
lods
mov
fldenv
inc
cwtl
mov
jne
aaa
int
adcb
mov
mov
data16
pop
add
lret
cmpsl
and
divb
xchg
hlt
dec
push
std
push
pop
fwait
sub
xchg
sub
xor
movsb
mov
pop
cmp
iret
test
stc
sub
sbb
lahf
and
jmp
insb
cmp
xchg
sti
jge
aas
xlat
daa
mov
mov
xor
fucom
mov
insl
mov
jns
and
mov
adc
add
pop
mov
pop
pop
adc
dec
sbb
sub
ds
jp
xor
xor
cli
pop
mov
mov
rcll
and
mov
or
test
lea
mov
dec
das
jae
add
jbe
hlt
dec
bound
adc
lret
xchg
popf
push
mov
stos
outsl
dec
insb
lock
and
scas
stc
insl
aaa
sub
int3
push
mov
hlt
jg
mov
mov
orl
call
shrb
mov
leave
aas
ret
mov
push
aas
sbb
scas
fstpl
out
or
pop
nop
adc
pcmpgtd
sbb
pop
aam
inc
push
hlt
mov
lret
ja
xchg
mov
shll
nop
out
and
enter
movsb
les
inc
test
jge
dec
lahf
shl
cmpsl
fucom
fwait
mov
testb
cmp
push
sbb
test
sub
leave
pop
and
mov
mov
mov
mov
mov
jle
sub
cmpsl
pop
push
loopne
push
xor
dec
inc
mov
inc
mov
add
and
jno
or
dec
shrb
jge
add
rol
mov
fcomps
lret
lret
les
cli
push
mov
cmp
adc
inc
xor
or
dec
jno
aas
insl
push
outsb
add
cmp
add
or
gs
jno
dec
adcl
push
scas
inc
xor
xchg
int3
addr16
cmp
cmpsb
sub
and
push
cltd
cmpsl
repz
sub
inc
dec
cli
imul
icebp
lds
loop
lcall
rcll
sub
aaa
sbb
ficomps
filds
sub
test
pusha
mov
test
insb
subb
xchg
xchg
pop
adc
pop
mov
push
aam
loop
push
xor
repnz
std
xchg
lret
push
nop
inc
jnp
dec
lock
push
ror
and
call
cmp
clc
fidivrl
test
or
leave
mov
jo
test
push
mov
xor
dec
mov
loop
jmp
pop
in
ret
lcall
push
jge
push
dec
mov
cmp
loop
mov
sbb
mov
jl
or
enter
adc
icebp
dec
outsl
repz
pop
pusha
cltd
or
inc
test
fdiv
fstps
cmc
adc
and
dec
mov
xchg
mov
icebp
daa
lock
test
inc
xrelease
push
push
pop
adc
push
scas
and
inc
call
mov
mov
dec
mov
pop
loopne
lods
in
mov
aas
push
and
dec
aaa
mov
and
lea
nop
lods
push
jne
lods
rclb
ret
frstor
xchg
fstp
fcoml
cwtl
mov
addr16
mov
aam
aaa
sbb
popa
je
dec
sbb
and
scas
and
adc
add
and
int3
in
sub
mov
sbb
aad
adc
sysret
sbb
xor
stc
jae
clc
mov
add
enter
mov
add
std
in
mov
repz
andb
and
adc
cwtl
add
lds
cmp
adc
cmc
cmp
mov
out
xchg
push
rcrl
xlat
lcall
stc
fcomp
push
aam
mov
fmul
cmpb
mov
popf
sti
dec
adcl
pop
add
jge
stos
lds
aaa
pop
das
jp
sub
pop
or
out
out
shl
sbb
add
ja
cwtl
insl
lcall
dec
xchg
pop
sarl
add
jge
shll
fld1
xchg
out
mov
dec
out
out
xor
inc
insb
cmp
lea
movswl
mov
lods
sbbl
vpcmov
into
dec
or
popa
push
movsl
dec
lods
arpl
add
push
xchg
pop
xchg
sub
arpl
sbb
js
setnp
sbb
and
adc
xchg
insb
inc
or
pushf
xchg
xor
scas
mov
and
and
mov
push
daa
mov
adc
cwtl
sahf
aad
idivb
loopne
cs
cmc
dec
ljmp
addr16
inc
and
or
pop
mov
jg
fwait
cli
into
bound
jmp
jb
loopne
or
pop
test
jns
lds
cmp
cld
xchg
movsl
or
xor
mov
push
out
cmp
push
mov
popa
in
pop
inc
cmpsl
sbb
pop
xor
bound
out
loope
sbb
out
shll
xchg
cmp
pop
test
lods
mov
sbb
or
mov
arpl
test
cmc
les
insb
std
cmpl
pop
jg
sub
fadds
sub
lret
fcom
inc
subb
stos
adc
dec
sti
dec
inc
jae
mov
cmp
lahf
push
je
fwait
inc
cmpsb
scas
roll
push
popf
add
or
sbb
test
jnp
adc
ret
inc
jmp
sub
inc
into
inc
adc
imull
addr16
test
push
inc
jnp
push
mov
mull
sub
add
mov
scas
inc
scas
xor
fs
addr16
pusha
lret
fldcw
adc
cltd
movsb
xor
push
mov
inc
mov
out
gs
pop
std
cmp
call
ret
xchg
mov
repz
ss
dec
jl
stc
pop
stos
xchg
loop
test
dec
sub
imull
dec
adc
ljmp
xchg
or
mov
pop
shlb
rorl
inc
push
cmpsb
rol
ja
cmp
inc
nop
pop
mov
cltd
cmpl
dec
mov
lods
inc
inc
and
cwtl
loop
out
push
inc
add
lret
popf
jo
cli
push
enter
inc
adc
lds
popf
gs
loope
push
mov
insl
or
mov
add
mov
dec
xor
adc
pop
repz
inc
cmp
push
cmp
arpl
sub
rolb
mov
cmp
jge
dec
scas
out
and
inc
insl
int3
or
jnp
mov
jmp
dec
push
lret
ret
pushf
dec
pop
icebp
adc
test
lcall
dec
xchg
out
mov
xchg
xor
xchg
sbb
ljmp
sub
sbb
loop
ja
mov
mov
sub
jo
decb
test
das
in
lsl
inc
in
or
roll
sarl
std
sahf
mov
repz
fdivrs
mov
mov
mov
cwtl
leave
test
mov
or
js
or
dec
sub
test
call
stc
cwtl
leave
test
mov
or
js
or
dec
sub
test
push
stc
sbb
test
mov
or
or
dec
sub
popf
enter
call
stc
cwtl
dec
test
mov
mov
xor
mov
cmpsb
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
or
idivb
call
mov
inc
lods
jbe
data16
filds
ss
es
idivb
xchg
jge
popf
push
popf
inc
lods
jbe
data16
in
push
in
ss
es
add
xor
xchg
inc
xchg
jge
xchg
push
lds
inc
mov
mov
stos
es
jb
sub
push
pop
inc
lods
mov
inc
or
adc
in
lds
xor
fsubp
xchg
sbbl
call
jmp
es
jbe
addr16
int
in
ss
bnd
loope
fiadds
jnp
mov
ficoml
xor
in
leave
std
daa
or
or
repnz
pop
xchg
xchg
pop
jl
push
gs
push
cwtl
mov
xor
push
enterw
dec
nop
cmp
xchg
inc
jns
dec
lock
pop
inc
lods
mov
xor
aaa
in
jbe
push
std
ds
ret
pop
pop
test
test
in
data16
mov
in
and
es
add
sub
xchg
dec
xchg
cmpsb
xchg
push
test
jbe
data16
lds
divl
std
pusha
popa
mov
dec
mov
and
jge
lea
icebp
das
ficomps
int
mov
inc
bound
dec
mov
repz
test
fldcw
cmpsb
into
adc
sub
jns
imul
adcb
cli
pop
xchg
jge
lea
inc
lods
jbe
data16
fldl
in
ss
es
idivb
xchg
jge
lea
inc
lods
jbe
data16
fldl
in
ss
es
add
aaa
and
nop
outsl
loope
fsubrs
mov
push
movsl
xchg
pop
and
pop
xchg
adc
enter
inc
adc
cs
push
addr16
xchg
mov
or
das
ret
add
add
xor
das
ds
movsl
dec
jns
sub
xchg
aaa
lahf
ret
mov
add
jb
iret
xchg
lahf
cmp
xor
outsl
sub
hlt
mov
cmpsb
mov
clc
inc
jbe
or
pop
cld
mov
test
lods
add
movsl
mov
test
jmp
insb
mov
pop
in
stos
inc
out
xlat
xchg
nop
fstpt
mov
repz
js
xchg
repz
rcl
outsl
icebp
data16
insb
sbb
xchg
xchg
xor
or
int
mov
sbb
mov
rcl
enter
jb
pop
jbe
cld
ss
xchg
movsb
subl
pop
sub
test
inc
nop
sbb
mov
mov
adc
lods
inc
inc
ljmp
fmul
mov
mov
int3
lret
push
cmp
jnp
and
loop
loopne
jg
pusha
cli
int
adc
dec
sub
lds
fdivl
pop
jl
movsl
xchg
xchg
test
and
xchg
mov
mov
lret
les
dec
fiadds
sarl
lods
insl
dec
in
int
sarb
pusha
pop
mov
adc
sti
mov
sub
leave
sbb
add
add
mov
jns
ljmp
jle
lock
sub
dec
loopne
loopne
testl
xchg
mov
je
push
inc
pusha
mov
xchg
orb
daa
lock
mov
push
xchg
xchg
cmp
mov
outsl
icebp
mov
nop
imull
out
mov
cmpsb
iret
pop
xchg
repnz
test
mov
loopne
lret
cmp
jo
nop
lea
loop
ja
jno
subl
hlt
gs
jmp
sub
movsb
add
repz
mov
adc
jmp
lcall
fwait
lret
jg
adc
lods
or
repz
push
sub
test
jae
and
dec
mov
push
mov
mov
mov
lret
mov
inc
sbb
movsb
iret
jae
cmp
fimuls
mov
lcall
sub
xchg
push
shll
adc
mov
push
aas
push
sbb
mov
scas
aas
gs
jo
scas
pop
mov
sbb
push
out
xorl
insl
daa
cs
or
cli
outsl
jnp
jb
xchg
adc
sub
testb
cmp
stc
push
xchg
and
pop
inc
fildl
add
lcall
das
or
add
sahf
ret
aad
and
bswap
out
nop
cmp
roll
jbe
rcr
imul
mov
ds
dec
out
fs
cltd
sbb
mov
outsb
stos
mov
dec
adc
repz
in
push
cld
std
enter
aas
les
ret
xor
lods
add
enter
xor
int3
jecxz
mov
out
xor
lcall
xor
add
mov
jbe
sub
add
aas
data16
aad
fcmovu
mov
pop
add
pop
bound
shll
mov
es
mov
test
hlt
fcmovnbe
sbb
add
hlt
adc
inc
in
sbb
hlt
cmp
cli
outsl
and
call
sbb
loope
push
push
fwait
push
bound
in
add
adc
sub
dec
test
push
inc
insb
mov
stos
jae
xor
and
or
lahf
mov
cmpsb
pop
push
xor
faddl
andl
insb
es
in
xor
repnz
xor
push
dec
scas
test
ljmp
xor
fidivl
jo
out
dec
stc
lahf
pop
int3
cmc
xchg
cs
push
or
rorb
cs
popf
mov
sbb
pop
and
mov
cmpsb
ds
cmc
inc
and
or
daa
mov
inc
outsl
call
mov
ret
out
in
ret
push
dec
cmpsl
bound
mov
and
add
xchg
aaa
flds
lods
jo
xchg
mov
arpl
sbb
add
jecxz
and
inc
nop
xchg
cmp
or
xor
cli
sub
call
mov
push
fisttpll
xchg
sbb
fisttps
adc
cmp
lret
dec
jle
mov
repz
cmpsl
mov
push
or
mov
jmp
xorb
insb
xchg
and
xorl
mov
inc
add
mulb
js
loop
test
rclb
dec
sub
fstps
jae
cmp
jne
shlb
sbb
push
xchg
dec
int3
pop
cmp
sbb
call
lds
aas
add
inc
pop
loopne
cld
lea
ret
mov
adc
aad
enter
jge
test
pop
dec
sub
pop
stc
xchg
sbb
insl
lods
popf
out
dec
mov
pop
jbe
icebp
xchg
mov
addb
adc
movsb
push
sbb
shlb
in
les
mov
inc
dec
jne
aas
jmp
inc
fldenv
xchg
xor
pop
stos
test
inc
imul
mov
xchg
xor
mov
in
mov
test
cli
test
mov
mov
pop
xchg
mov
sub
lds
inc
lret
mul
mov
sub
movsb
addl
cld
cli
arpl
inc
pusha
mov
xchg
aam
out
sub
mov
and
cmp
add
jns
dec
ja
or
pop
fwait
xor
xchg
push
xor
repz
xchg
int3
inc
add
pop
mov
jl
aas
mov
rcrl
cwtl
pop
jae
jle
movsb
scas
sub
xchg
dec
adc
jno
jmp
in
fucomp
and
sub
lods
xlat
xor
shll
push
movl
add
inc
and
adc
out
loopne
jns
xor
aad
nop
ds
add
jae
inc
adc
or
jbe
clc
sub
jle
sub
loope
adc
scas
sbb
mov
sbb
lods
jp
xor
ret
cmp
ljmp
lock
adc
je
jno
aam
mov
int
push
adc
xor
cwtl
inc
adc
addl
pop
mov
mov
les
sub
push
inc
arpl
or
jge
xchg
pop
ret
jnp
xchg
nop
inc
mov
movhps
xor
ret
rol
fidivrs
sbbl
dec
scas
mov
pop
mov
sarl
adc
push
sarl
push
mov
mov
je
pop
bound
std
aas
sbb
loop
scas
xor
mov
js
fisttpll
and
sub
push
rorb
adc
lcall
pop
mov
add
push
pop
pcmpeqb
and
or
lret
aad
loope
jle
mov
outsl
dec
in
dec
push
shlb
int
add
sub
or
xchg
mov
push
cld
dec
mov
ljmp
popa
popf
adc
push
mov
shll
pop
imul
popf
imul
pop
mov
iret
jns
nop
daa
jg
clc
xor
jge
xchg
push
add
sbb
sahf
psllw
and
insl
es
mov
jb
lret
leave
and
xor
fs
mull
clc
dec
mov
add
jb
shlb
sub
into
test
mov
movhps
xchg
ja
stos
mov
sahf
test
jge
dec
cs
popf
popa
stc
cli
insb
jns
leave
fistl
clc
or
pop
add
popa
lock
add
or
jae
mov
divl
dec
repnz
jmp
mov
push
std
xor
mov
inc
sti
int
jecxz
mov
sbbb
and
and
adc
fs
cmp
adc
push
add
insl
popa
mov
cs
add
imul
push
pusha
adc
addr16
js
jae
repnz
daa
adc
sbb
inc
fiadds
imulb
imul
inc
jl
call
shl
sbb
in
cli
in
jo
ficompl
or
les
add
loopne
inc
andb
repz
scas
mov
cs
mov
ficoml
xchg
subl
xor
cmp
cmp
in
andb
adc
or
inc
xlat
in
mov
xor
rcl
and
xchg
inc
xchg
or
add
push
xchg
cs
mov
jo
fs
shll
ljmp
enter
jnp
inc
xchg
mov
and
xor
and
flds
jge
xlat
out
xchg
sarl
add
mov
xlat
test
clc
andl
jp
pop
push
xchg
mov
push
jne
add
mov
mov
mov
add
lea
sub
call
sbb
xchg
push
mov
ret
mov
movsl
mov
sub
pop
or
xchg
inc
loop
xor
inc
push
dec
jp
pop
ljmp
mov
aas
push
pop
and
div
ret
sti
inc
or
out
dec
inc
push
mov
cmpsl
add
outsb
hlt
pop
mov
pop
das
xor
into
lock
clc
ret
lcall
daa
jns
dec
xor
sbb
pop
cmc
int
out
sub
jne
xchg
mov
cmp
in
gs
fsts
mov
cltd
rsm
pushf
push
adc
testb
or
lahf
sbb
jno
outsb
arpl
je
cmpl
mov
xchg
dec
add
cmpsl
sub
out
pop
sub
aaa
fucompp
jbe
mov
push
in
pop
and
lds
subl
cmc
popa
add
test
insb
out
pushf
mov
sub
sub
push
or
pop
popa
inc
inc
aad
mov
int
pop
into
or
sahf
add
mov
les
inc
mov
int
lods
mov
leave
add
mov
sti
xchg
fldenv
leave
push
in
loop
sbb
inc
lods
xor
and
in
mov
sbb
cmpsl
out
xchg
xor
cld
rcrl
adc
loop
lcall
pop
xor
neg
int3
sbb
jge
nop
aam
mov
ljmp
cld
flds
dec
xor
dec
movsl
mov
mov
jge
mov
dec
xor
out
xor
mov
in
test
and
ljmp
jg
xchg
jo
mov
adc
cli
movsl
and
popf
add
sbb
adc
loop
xor
inc
lods
pop
and
cmpsl
mov
das
mov
dec
outsb
mov
cs
adc
jne
repz
push
xchg
or
and
fistl
loop
dec
outsb
leave
lods
gs
xchg
std
shrb
adc
jnp
scas
and
add
and
sub
push
sbbl
mov
ds
sub
push
lret
mov
jp
inc
inc
insb
jae
add
pop
loope
fisttpl
pop
pop
enter
pop
mov
rclb
jmp
add
ret
jle
or
pop
aas
mov
mov
or
lea
outsb
mov
push
pushf
or
fistl
jecxz
mov
dec
lahf
pop
dec
imul
movsl
ret
stos
push
pop
call
mov
fdivrl
rol
xchg
ficomps
leave
testb
xchg
nop
push
and
sbb
sahf
cmp
mov
or
das
fwait
inc
sub
cmp
push
test
lret
or
aas
add
outsb
outsl
xchg
push
mov
out
xchg
push
sti
pop
mov
xchg
in
lret
xlat
inc
mov
lcall
cmp
add
jno
jne
lods
sub
pop
rclb
sbb
jo
data16
pop
mov
pushf
pop
pop
inc
mov
js
cwtl
ffree
mov
sub
leave
pop
ret
loopne
fldpi
push
arpl
push
cmc
loopne
mov
mov
pop
out
pop
add
push
outsb
cmp
push
push
and
mov
mov
jmp
dec
aas
int
out
xchg
or
xchg
ficompl
insb
out
jmp
pop
xor
jp
mov
nop
xor
lock
arpl
push
xchg
sbb
cli
add
sbb
mov
mov
das
ret
xor
jno
sub
pop
pop
scas
jmp
jp
rclb
into
lahf
jo
push
inc
jne
or
insb
jns
shl
cmp
lcall
push
shl
jp
cli
and
imul
mov
add
add
scas
popa
cmp
or
xor
jg
cmpsl
imul
scas
idiv
or
mov
dec
dec
psllw
dec
jecxz
out
pop
inc
lret
subb
iret
mov
and
scas
scas
fcomp
popf
add
push
adc
pop
dec
repnz
mov
ret
cmp
lahf
call
pop
outsl
adc
les
xor
xchg
aas
call
add
inc
fwait
loopne
gs
sbb
cmc
test
iret
lea
stos
adc
insb
mov
cmpsb
stc
dec
cmp
xor
bound
xchg
inc
data16
mov
cli
out
outsl
and
and
adc
pusha
pop
and
inc
pop
ja
mov
push
es
push
push
push
push
or
mov
lahf
inc
xchg
mov
or
ret
cmp
push
pop
lds
jns
xchg
sbb
lods
movsl
add
mov
push
inc
and
mov
add
imul
jne
xorl
push
add
test
sbb
mov
inc
cmc
sbbl
insl
xor
pop
dec
pop
in
sbb
add
in
sbb
jge
ret
or
push
mov
nop
cmp
jb
add
cmpsb
xchg
in
xchg
cld
nop
notl
mov
fistpl
add
enter
test
xchg
icebp
inc
dec
lock
lods
leave
loopne
add
jb
test
add
adc
add
push
lds
imul
loope
dec
movsl
mov
cmp
cltd
mov
mov
mov
push
pop
repnz
lcall
pusha
pop
mov
data16
sbb
jmp
je
insb
fidivl
adc
mov
xlat
cwtl
xlat
call
int3
ret
mov
pushf
push
adc
imul
jg
lods
mov
out
test
outsb
out
and
xchg
aaa
icebp
fiaddl
hlt
sub
dec
xor
adc
fmull
inc
add
mov
iret
int
mov
fnstsw
incl
pop
test
pop
mov
lds
enter
fbld
adc
dec
pop
add
xchg
add
mov
das
mov
lret
pushf
pop
das
pusha
insb
or
mov
sbb
loop
insl
mov
jns
out
pop
pusha
shrb
movsl
pop
lods
mov
scas
lret
and
pop
mov
mov
cltd
or
and
or
jp
fistpll
mov
or
cmc
cmpsl
iret
jle
or
stc
outsb
mov
outsb
mov
les
xchg
mov
mov
sti
sub
jp
enter
xchg
adc
aad
xchg
subb
sub
loopne
in
xchg
xor
in
cmpsl
mov
incb
ret
lock
pushf
jns
test
in
xlat
pop
fistpll
popf
pushaw
jecxz
push
xor
jle
nop
inc
fs
jb
pop
loope
je
popa
cmp
xchg
cmp
add
cmp
adc
rolb
cmpsl
inc
push
mov
sub
sub
xor
push
clc
jbe
mov
dec
mov
mov
push
and
popf
jp
ficoms
dec
mov
icebp
dec
mov
scas
pop
mov
scas
adc
jg
imul
inc
insb
xor
xor
ror
pop
and
mov
mov
or
mov
inc
push
sub
jbe
dec
iret
and
inc
xchg
jp
data16
xchg
pop
pop
je
lods
mov
or
mov
push
dec
pop
inc
xchg
pop
xlat
jnp
pusha
mov
fs
dec
cmpl
outsl
cltd
push
pop
bnd
iret
aam
adc
pop
xor
je
rclb
or
lcall
popa
mov
imul
mov
cli
fistpll
jno
data16
loopne
out
xchg
xor
jns
arpl
lcall
pop
mov
push
les
js
jg
sbb
pop
stc
xchg
test
ja
jecxz
dec
sbbb
arpl
xor
sbb
mov
addr16
add
sbb
mov
jg
in
and
arpl
scas
ja
pop
loopne
push
in
cld
cld
pushf
pop
sbb
dec
adc
jb
popf
jns
cld
jp
out
cmp
add
inc
and
dec
dec
rclb
xchg
jmp
test
out
adc
int
or
mov
dec
push
mov
data16
repz
cld
push
in
adc
xor
sbb
or
hlt
rorb
mov
mov
cltd
mov
loop
aad
popf
and
sbbb
pop
data16
adc
repnz
out
jo
sub
out
pop
cmp
push
scas
sub
push
xor
jg
xor
adc
mov
or
sbb
push
out
insb
mov
jle
dec
sbbl
jo
dec
sti
dec
xorl
ret
sbb
pusha
cmpsl
popa
andl
shlb
jg
jne
js
mov
daa
imul
push
mov
gs
bound
mov
jge
sub
cmp
repz
mov
pusha
push
cmp
popa
adcb
arpl
data16
push
adc
call
sub
mov
fs
cld
mov
bound
lret
cld
test
dec
enter
pop
dec
pushf
mov
out
mov
scas
jnp
mov
negl
outsl
stos
dec
mov
sbb
cs
loop
push
ja
outsl
popf
out
dec
lods
test
shrb
dec
add
in
shlb
out
les
ljmp
test
sbbl
cld
xor
cmpsl
jle
inc
shl
inc
test
out
outsb
dec
inc
dec
in
aad
rcll
mov
cmp
in
fildll
sub
dec
or
stos
pop
scas
mov
cmpsb
push
divps
aas
call
sub
test
mov
pushf
sub
bound
loope
mov
lds
or
jge
add
push
in
mov
xchg
loop
sub
dec
mov
mov
fs
add
xchg
jae
adc
pop
pop
xor
stc
pop
sbb
mov
movsl
jbe
xchg
and
lret
pushf
in
cmp
adc
mov
push
sub
int
pop
xchg
dec
divb
mov
imull
sbb
lcall
fistps
leave
lret
mov
or
jge
dec
sbb
pushf
inc
add
mov
cmp
test
outsl
mov
and
jecxz
add
insl
leave
sahf
cltd
icebp
xchg
mov
jns
or
shll
jmp
iret
cmpsb
mov
fdivrl
cli
shrl
aam
stos
and
repnz
subl
mov
push
fdivp
mov
movsl
mov
aam
xor
pop
mov
sbb
fsubrp
inc
jae
clc
je
adc
in
push
dec
mov
inc
sbb
test
xchg
clc
push
mov
and
ss
cmpsb
dec
mov
stos
insb
repz
mov
mov
lods
mov
dec
pop
push
mov
daa
fstpt
inc
or
es
pushf
imul
or
aam
rcrb
shr
or
test
push
outsl
ljmp
mov
cmp
cmp
mov
xor
andl
mov
pusha
mov
pop
movsl
cmp
pop
clc
outsl
and
sbb
cltd
pop
jmp
popa
push
adcb
jmp
sbb
fcomip
addr16
imul
lahf
inc
sub
imul
cmp
mov
insb
stos
inc
mov
adc
leave
cmp
imul
loop
jbe
cwtl
dec
movsl
cmpl
call
cmp
out
sub
sbb
or
shll
jle
cmp
or
mov
or
data16
mov
sbb
loop
sbb
mov
dec
outsl
xlat
das
cmpsb
test
add
cmp
xchg
jge
lea
inc
lods
jbe
data16
fldl
in
ss
es
idivb
xchg
jge
lea
inc
lods
jbe
data16
fldl
in
ss
es
idivb
xchg
jge
lea
inc
lods
jbe
data16
faddl
in
jmp
or
idivb
push
in
ss
pop
jb
in
pop
jbe
adc
leave
add
add
subb
pushf
loopne
xchg
mov
add
insl
and
cmp
pusha
sbb
sub
frstor
lods
lock
loopne
adc
insl
push
push
and
adc
jo
pusha
or
mov
mov
in
xchg
loopne
adc
dec
push
cmp
aas
xor
dec
push
outsl
punpckhwd
mov
lock
mov
push
or
rorl
add
pop
in
and
loop
inc
lds
iret
es
xchg
jb
cmp
imul
cwtl
inc
adc
test
cmp
jnp
xchg
adc
pop
fbstp
repz
and
in
nop
test
loopne
add
lea
mov
adc
insl
sub
jecxz
mov
cmp
loopne
js
jne
pusha
mov
sub
cmc
dec
lahf
subb
adc
test
sbb
or
es
cs
cmp
and
inc
push
iret
jno
int
test
shrb
jge
lds
pop
and
add
jo
pusha
aas
in
les
xchg
sbb
lret
mov
pop
clc
inc
cs
or
sbb
mov
call
push
hlt
cwtl
mov
dec
cmovne
jb
sub
out
scas
or
xchg
icebp
shrb
jge
insl
xor
dec
push
cmp
pusha
or
mov
mov
lods
lock
loopne
adc
insl
xor
dec
push
cmp
pusha
or
cmp
fcmove
movsb
xorb
pop
xor
mov
jge
push
fistl
xchg
outsb
inc
les
outsl
lods
mov
sbb
xor
enter
popf
and
dec
test
ret
pusha
fwait
jne
in
sub
js
jg
inc
pop
hlt
cmp
or
and
push
xchg
wbinvd
outsl
lock
mov
ds
outsb
push
or
pmulhuw
push
jg
fwait
jno
sahf
jg
lods
cwtl
sti
in
popa
push
out
sub
jle
popf
das
out
xor
arpl
lret
mov
popf
push
fsubrp
adc
jg
lea
inc
xlat
xor
subl
cmc
push
repz
push
les
shrl
inc
pop
sub
addr16
cmpsb
fcmovb
outsl
push
test
les
rclb
and
jge
test
outsb
clc
mov
xchg
sub
mov
rcr
xchg
pop
data16
add
std
addr16
or
push
xor
lahf
jnp
mov
mov
imul
les
les
lret
neg
stos
mov
xchg
scas
out
jle
mov
stos
xor
add
sbb
mov
addr16
sub
mov
xchg
sahf
xchg
or
rcrb
cmc
bound
mov
fbld
adc
jmp
mov
mov
out
or
mov
cmp
in
mov
aaa
fstl
jmp
xchg
sarl
cmpsb
lea
mov
sub
sub
xchg
test
adc
in
lock
outsl
mov
repnz
cmpsb
fisubl
jl
movsl
sbb
adc
nop
mov
xor
std
cmp
push
jp
pop
mov
enter
jle
inc
xor
add
in
inc
add
out
push
jae
mov
add
or
jge
pop
fdivrs
popf
sahf
gs
push
xchg
pop
daa
pop
out
and
jmp
and
xor
cwtl
sub
es
xor
popl
push
lret
aaa
mov
cli
mov
cmp
xchg
aaa
sub
daa
fcomp
imul
mov
mov
lods
outsl
adc
scas
aam
mov
inc
scas
adc
mov
xor
mov
imul
jecxz
push
lahf
or
cmpsl
or
mulb
lret
cmp
cmpsb
and
stos
mov
or
int
repz
idivb
cmc
mov
push
fucomip
movsb
into
push
xor
ret
jmp
cmp
xor
add
and
mov
xchg
push
movsb
movsl
and
adc
sti
and
into
mov
mov
pop
jbe
jne
mov
push
and
pop
aam
fsts
rcr
jo
add
std
movsl
mov
jo
jl,pn
pop
pop
jb
pop
pushf
ret
aas
pop
inc
xchg
lahf
repnz
dec
clc
xchg
jmp
sahf
das
rorb
jp
das
mov
cmp
xor
mov
push
fbld
or
xchg
scas
sti
mov
pop
mov
sbb
push
fcmove
xchg
or
insb
or
shlb
jne
in
mov
mov
sub
bound
add
xchg
add
imul
out
adc
mov
cli
cmpsl
lret
inc
inc
mov
mov
stos
sub
movsl
gs
pushl
adc
sub
out
pop
push
ficoml
icebp
sbb
xor
cltd
cmp
out
lds
bound
cmpsl
mov
sahf
cmp
mov
mov
and
test
jb
cmpl
in
mov
push
add
mov
jle
and
add
outsb
mov
or
mov
pop
or
adc
ja
cmp
xor
pop
cmc
cmpb
jb
insb
dec
enter
cmp
lds
mov
gs
pop
loope
es
insl
faddl
cli
sub
into
shll
or
repnz
int3
cmp
mov
testb
and
incb
fdivrl
fwait
or
lods
dec
shrb
stos
call
scas
mov
shrl
outsb
mov
jg
lods
jno
pop
adc
imul
aas
add
mov
dec
ret
leave
or
adc
or
lret
mov
mov
xor
push
lret
in
rep
inc
mov
fadds
enter
push
xor
imul
imul
je
aas
cmp
test
jl
cmp
push
push
adc
iret
add
iret
sahf
jb
adc
mov
dec
jns
mov
xchg
push
setp
in
adc
fimull
fistl
fwait
lds
out
mov
or
frstor
outsb
arpl
dec
iret
lods
data16
fsubs
fucomip
and
aas
push
adc
ss
loopne
fsub
les
and
movsl
test
out
arpl
push
popf
jo
push
enter
mov
movsl
dec
dec
jno
jne
outsb
push
xchg
mov
pop
cmp
pushf
pop
mov
fistpl
mov
test
xchg
sarl
int
pushf
cli
push
and
inc
adc
out
push
jmp
call
push
lahf
mov
pop
ja
hlt
jns
add
es
sub
es
jg
mov
nop
nop
outsb
cmc
jle
cmp
push
dec
jmp
out
fdivr
sub
xchg
test
push
xor
mov
jle
icebp
jb
jp
neg
inc
or
aam
movsb
fxch
xor
mov
in
imul
push
jmp
nop
aaa
sub
fcomp
stos
repnz
inc
add
mov
test
rolb
sbbb
mov
sub
ret
or
gs
xchg
mov
and
lock
cmp
stos
aad
fs
movsb
sahf
stos
repnz
jo
movsl
mov
inc
xchg
cmp
lahf
mov
push
inc
daa
push
sarb
ds
push
xor
pop
dec
sub
outsl
aad
arpl
gs
push
adc
xchg
stc
leave
push
imul
and
ffreep
jbe
and
inc
push
cld
sbb
pop
stc
cld
setge
xbegin
sub
cmp
xor
out
test
popf
das
pop
mov
dec
mov
jo
shll
fsubl
lret
and
out
bound
xlat
mov
jmp
pop
outsb
movsl
popa
mov
les
inc
cli
mov
push
shrl
fs
out
or
test
inc
jae
mov
inc
shrb
sbb
bound
push
dec
fmull
es
or
add
mov
loopne
push
enter
fisttps
or
mov
xlat
mov
push
push
inc
insb
mov
inc
in
xchg
addb
xchg
ss
into
adc
inc
sbb
adc
dec
faddl
jns
jle
lods
mov
sbb
ror
cwtl
pop
fistpll
xorl
sbb
mov
xchg
orb
call
push
shl
xlat
sbb
xchg
repnz
lret
lds
rcrb
aaa
mov
mov
outsl
jmp
xchg
mov
ds
cs
cmpsb
lcall
stos
push
dec
mov
add
addr16
jle
lret
mov
jmp
ds
hlt
xor
cld
dec
popa
cmpl
xor
and
jne
ret
aad
jbe
push
mov
out
or
sbb
inc
pop
mov
or
inc
out
pop
jmp
inc
imul
mov
fidivl
xor
jle
mov
jl
outsl
pop
loope
lcall
and
xor
add
lods
mov
mov
scas
adc
cwtl
call
jnp
sbb
push
ljmp
stos
xlat
pop
cli
lcall
push
stos
iret
xchg
dec
dec
inc
adc
mov
daa
xchg
sbbl
sbb
cmpsb
sub
loope
popa
lock
ljmp
mov
xor
push
xor
into
repz
leave
into
popf
or
sub
ljmp
pushf
adc
stc
ss
push
lods
cmp
into
lods
in
cmpsb
mov
jle
jnp
mov
ss
sub
jae
xor
cmpsl
push
mov
cmpsl
movsl
pop
add
xor
stos
mov
push
sti
mov
mov
mov
add
loop
sahf
rol
shrl
loope
adc
call
or
movsb
jge
or
in
pop
ret
popa
mov
inc
jb
in
aam
jecxz
fidivrl
lret
enter
enter
jne
mov
pop
jbe
dec
sbb
std
loopne
adc
inc
ljmp
test
add
scas
jno
lock
movb
jg
js
add
sbb
in
push
and
mov
dec
jne
cmc
stc
imul
das
les
adc
pop
cmp
cltd
pop
mov
adc
jae
or
addb
dec
or
jmp
je
jecxz
sbb
push
or
adc
ljmp
add
std
dec
rcrb
cwtl
bound
ljmp
mov
inc
js
mov
cmp
jno
dec
repz
xchg
add
std
jnp
adc
push
clc
iret
sub
cs
popf
ja
negb
mov
mov
jp
repz
cmp
jle
mov
push
loop
call
xchg
leave
mov
out
mov
movsl
and
out
jp
push
dec
fs
popl
inc
cltd
cltd
push
xchg
push
lahf
xlat
arpl
imul
loop
xchg
test
jle
xor
lds
movsb
dec
dec
out
sub
xor
adc
clc
fsubr
mov
and
sbb
push
adc
pop
ret
iret
imul
in
jg
outsl
and
xchg
popf
aam
or
xchg
mov
add
adc
loopne
shll
fwait
sti
je
or
cmovnp
test
fidivrs
sub
jge
fsubrs
and
mov
mov
nop
sahf
sti
sbb
and
adc
in
mov
ss
mov
into
dec
xchg
cltd
test
movsl
inc
push
out
jge
lret
int3
adc
adc
mov
lods
fcmovne
stos
sarl
sub
ja
cmp
xchg
jae
das
inc
es
inc
inc
mov
aad
lahf
inc
mov
lret
adc
jo
int
inc
std
or
out
and
repnz
aam
jecxz
mov
test
xchg
push
pop
xchg
push
stc
pop
rorb
pop
add
ljmp
rolb
ja
arpl
out
mov
sub
pop
inc
mov
aaa
xor
xchg
xchg
out
ret
pop
sub
mov
cmp
inc
shlb
mov
lcall
fistps
pop
adc
push
cltd
mov
sub
mov
arpl
push
dec
inc
cmp
jnp
aad
test
in
adc
push
mov
add
in
stc
sub
pop
loop
jp
xor
stc
sbb
jmp
xchg
mov
loop
mov
sbb
mov
testb
jns
sti
mov
cmc
inc
int3
mov
les
jge
pop
mov
aam
call
orl
lock
push
cs
enter
fbld
jg
push
sbb
mov
pop
and
and
fstpt
sub
adc
xchg
clc
mov
movsb
xorb
into
jecxz
add
in
xchg
push
negl
dec
in
out
aad
fmull
dec
cwtl
into
mov
add
lcall
or
das
mov
flds
dec
rcr
movsl
loopne
fwait
jp
loope
ljmp
lret
push
add
mov
sbbb
mov
lcall
inc
jecxz
or
mov
push
adc
jne
cli
pop
jl
mov
xchg
shrb
sti
mov
add
jg
mov
xor
mov
movsl
sub
dec
mov
lock
stos
fists
outsb
mov
into
mov
lods
jge
bound
mov
sub
or
rcr
imul
jbe
jne
mov
fbld
mov
xchg
xor
inc
inc
cmp
lret
jp
cmp
jne
mov
add
in
xor
pop
push
cmp
mov
pop
test
leave
pop
pop
pop
daa
mov
inc
push
in
aam
xorl
mov
mov
pop
leave
je
mov
mov
fdivrs
push
inc
push
ret
scas
adc
xchg
pop
xor
sbb
ja
clc
jge
and
cmp
icebp
push
jmp
pusha
lret
jecxz
xor
sub
fucomip
out
xor
jl
out
sbb
mov
inc
mov
mov
les
mul
xor
inc
stc
push
cmp
pop
movsb
xchg
lods
xor
leave
call
push
xchg
aad
aam
fnsave
fldcw
and
mov
ljmp
jge
push
lret
xchg
repnz
sti
cmpsb
test
pop
jmp
call
jns
jle
mov
ret
jg
pushf
jbe
movsl
sbbl
lahf
fisubrl
and
pop
mov
jle
out
lods
ss
fcmovne
je
inc
and
push
add
sbb
mov
cmp
mov
jle
icebp
mov
imul
push
mov
jl
outsl
movsl
inc
in
jno
adc
lahf
test
jmp
jecxz
into
sbb
push
fstpl
cmpsb
add
add
popf
shlb
pop
rcl
xor
sub
adc
sbb
in
cs
pusha
out
rcrl
movsl
xchg
xor
adc
xchg
sbb
pop
inc
push
sub
jo
js
fldenv
and
inc
ljmp
pop
and
sub
sbb
push
lods
mov
sti
mov
adc
test
arpl
push
cmp
mov
movsb
mov
pop
mov
roll
push
mov
test
hlt
push
jnp
jae
pop
adc
mov
cmp
sub
js
dec
aam
sub
xchg
ds
jg
jle
xchg
imul
mov
lods
ljmp
bound
pop
jp
mov
popf
imul
jle
and
divl
popf
and
pop
pop
mov
cld
adc
subps
movsb
mov
pop
sub
mov
xlat
mov
xor
cmp
pop
bound
or
fildl
call
pop
cmc
pop
pop
jne
les
sbb
dec
or
dec
adc
add
mov
js
ret
andb
jo
xchg
in
ds
movsl
pop
jno
lret
jp
sbbl
fldcw
cld
jge
mov
mov
sbb
add
fsubl
data16
ljmp
push
push
add
pushf
loopne
inc
jne
in
pop
xchg
mov
and
push
std
xor
in
bound
sarl
cmp
mov
sbb
pop
fadds
aas
ds
loopne
fsubs
sbb
enter
push
cmp
fistpll
fcompl
cmp
addr16
pop
xor
xor
popf
adc
sub
subl
bound
mov
flds
sbb
push
into
int
cmpb
jmp
movsl
adcl
call
mov
xchg
sbb
jbe
sub
dec
cld
out
inc
pusha
push
inc
pusha
dec
or
sti
mov
pop
jge
jmp
and
mov
fwait
cmp
shlb
inc
popaw
inc
test
pop
ljmp
jno
push
nop
ret
scas
xlat
and
dec
stc
mov
cmp
push
jecxz
loop
stc
mov
mov
sub
lds
inc
add
hlt
fimuls
pushf
mov
fwait
data16
inc
out
or
jo
xor
mov
clc
mov
dec
mov
imul
mov
mov
mov
sbb
adc
and
sbb
adc
pop
push
fsubp
aaa
push
xorb
push
in
arpl
cmp
sbb
push
mov
jno
in
lock
roll
xchg
sub
push
or
imul
sub
adc
addl
cmc
xor
les
daa
jne
adc
std
movsl
jns
jmp
out
imul
sub
stos
mov
dec
rep
inc
fcompl
sbb
lods
dec
push
enter
repz
mov
pop
push
mov
adc
imul
jp
fwait
sbb
cmp
cwtl
add
lahf
inc
mov
lods
enter
and
mov
out
into
ret
push
sub
cmpsl
cld
test
jle
pop
xchg
xchg
pop
or
mov
movsl
mov
movsb
and
sbb
xchg
mov
xchg
push
xlat
cs
xchg
xor
out
lahf
fmull
out
xor
dec
pop
inc
jl
and
mov
xchg
leave
mov
xor
ret
sub
addr16
cmp
dec
sub
or
out
pop
pop
ja
inc
push
scas
pop
sti
lahf
loope
imul
out
or
xor
ljmp
or
std
xchg
outsb
mov
rorl
mull
xchg
test
mov
cmp
js
and
mov
sub
fdivrl
mov
adc
inc
jmp
mov
das
cmp
lret
imul
and
pushl
call
inc
outsl
and
xor
aaa
mov
inc
call
rcr
pop
dec
pop
int
fnsave
sub
pop
mov
sub
sbb
stos
aas
bound
out
popf
pop
inc
cmp
roll
fdivl
cmpsb
jg
jg
and
push
mul
addr16
popf
ret
add
dec
in
dec
pop
in
js
addl
jbe
mov
mov
outsb
pop
push
adc
in
or
push
jnp
call
cmp
push
loop
lods
pop
push
pop
cmp
add
mov
or
mov
or
lds
adc
sub
xchg
xlat
std
cmp
push
push
rol
sarl
sub
test
inc
shl
add
sub
or
hlt
roll
dec
loopne
or
sahf
fs
add
and
std
and
jge
sbb
push
or
add
enter
xor
pop
inc
pop
es
outsl
movsb
cmpl
add
xor
pop
out
or
test
icebp
xchg
mov
xor
cmc
stc
fdivs
cmp
repz
inc
div
xor
pop
push
data16
fadd
and
sahf
mov
pop
iret
sub
lods
dec
imul
add
jne
mov
mov
repnz
sub
push
mov
pop
mov
jae
je
jle
dec
cmpsl
xor
loopne
sbbb
push
xchg
inc
das
or
fadds
faddp
out
mov
add
cmp
and
xchg
jmp
nop
pop
mov
push
lods
out
push
sbb
jge
in
or
fldl
jp
pop
addr16
dec
fisubrs
dec
pop
call
movsl
aaa
fsub
loop
adc
dec
and
xchg
fimuls
ljmp
shr
aad
add
mov
pop
nop
push
pop
inc
mov
inc
call
loope
jmp
sub
in
xor
mov
repz
call
pop
and
inc
ss
xchg
xlat
mov
test
and
inc
incl
in
icebp
fidivl
dec
xchg
and
pop
ds
sahf
mov
lret
mov
std
mov
movl
push
mov
or
lods
mov
je
adc
adc
in
xchg
inc
nop
mov
repnz
pop
shlb
inc
out
lea
shlb
jbe
mov
xchg
ljmp
pop
push
dec
fmull
lahf
cli
ds
sub
cmp
push
je
js
les
xchg
pusha
and
mov
popf
xchg
in
insb
push
xor
fadds
sbb
and
insb
pop
into
mov
xchg
je
enter
hlt
scas
adc
jl
jle
cmp
in
cmp
cmp
mov
jmp
push
pop
sbb
xchg
adc
mov
inc
and
inc
add
ret
sbb
cmpsl
das
inc
insl
mov
and
jmp
rcrl
dec
std
mov
jle
fmul
mov
jmp
jp
fninit
pushf
adcb
sub
xchg
fsubr
dec
cli
ficomps
fidivs
popa
hlt
cwtl
insb
cmp
jnp
in
daa
popa
loope
add
aaa
dec
out
push
adc
or
push
xchg
inc
fwait
out
mov
lcall
cmp
cmpsb
push
or
mov
icebp
mov
lods
jecxz
lock
jo
or
idivb
xchg
adc
test
arpl
or
data16
in
inc
imul
imul
addr16
aas
jle
xor
or
fisubl
adc
mov
hlt
cmp
int
mov
loopne
adc
insl
xor
dec
push
cmp
pusha
or
mov
mov
lods
lock
loopne
adc
insl
xor
dec
push
cmp
pusha
or
mov
mov
lock
loopne
adc
xor
inc
push
cmp
jo
popa
jmp
mov
mov
lods
lock
add
lcall
push
gs
jne
test
daa
or
cmc
add
negl
movl
pop
add
or
add
add
add
add
add
jb
outsb
add
add
add
add
pop
add
add
add
add
add
add
add
add
xchg
add
jns
inc
add
add
add
add
add
popa
add
add
add
into
add
or
add
add
add
out
sub
out
add
insl
add
add
add
add
add
add
add
mov
jg
jns
and
push
add
add
add
add
dec
add
add
add
add
add
data16
add
add
push
add
es
add
jae
xchg
add
add
add
into
add
add
add
add
popl
popl
add
jmp
fadds
incb
add
jae
enter
stos
add
add
xchg
add
iret
add
add
add
daa
add
ret
add
add
add
add
cmp
xchg
add
add
add
add
add
add
and
mov
pop
add
mov
mov
pop
add
xor
and
sbb
add
or
add
add
add
add
add
add
add
add
add
add
mov
adc
pop
add
add
mov
adc
ja
cmp
pop
add
add
add
add
add
add
es
adc
pop
add
add
ret
add
push
add
add
add
add
add
add
jns
dec
add
fadds
fwait
add
add
add
add
add
add
add
add
add
push
add
add
jg
push
add
add
add
add
add
add
add
add
ret
add
add
add
add
mov
sub
add
add
add
add
verr
add
dec
add
add
add
dec
add
add
es
add
add
add
add
add
add
add
add
add
xor
and
cmc
add
add
and
add
add
add
add
cmc
add
dec
add
add
add
add
or
dec
add
add
popa
add
add
add
add
add
push
add
add
dec
add
add
add
add
add
push
add
or
data16
add
push
add
mov
add
add
stos
add
add
adc
add
and
outsb
add
add
add
add
add
loop
jecxz
imul
add
add
add
add
add
add
push
add
enter
push
add
add
push
add
add
add
out
es
outsl
add
add
add
test
insl
add
add
incb
jnp
add
sbb
and
movsb
add
add
dec
add
add
add
add
es
insl
add
add
jb
xchg
add
add
add
filds
jg
test
insl
add
jecxz
lcall
add
pop
add
push
add
add
add
ljmp
lcall
xchg
enter
add
sub
pop
fstpl
xor
fadd
adc
ret
sbb
cli
push
int
cmp
xor
push
or
pop
or
inc
jge
stc
shlb
sti
sbb
jo
add
pushf
and
leave
push
dec
mov
dec
out
out
arpl
jecxz
movsl
fisttpll
cld
out
adcl
fbstp
cmp
dec
mov
mov
push
lds
xor
daa
pop
sbb
lds
andb
sbb
jne
hlt
ficompl
mov
rcrb
test
stc
or
popf
or
push
xchg
push
fucomip
dec
in
addl
aad
add
lcall
dec
mov
fcompl
pop
xor
cmp
pop
push
sub
das
xor
repnz
stc
push
pop
push
hlt
xor
lods
cmpsl
inc
add
mov
sub
int3
mov
fldt
fildll
fdivrl
xor
pop
pop
cli
call
insb
cmp
xchg
bound
inc
fsubr
stc
jmp
add
je
jp
mov
stc
xchg
push
jb
dec
jg
ret
stos
xor
rol
jbe
inc
insl
sub
mov
addr16
ret
push
mov
add
mov
addr16
daa
out
iret
fdivrl
jmp
inc
pop
mov
xor
popa
cmc
orl
dec
arpl
hlt
std
mov
vmwrite
cmp
or
clc
lods
int
mov
shlb
xor
inc
insl
rcrb
jbe
jns
mov
xchg
pop
fnstsw
sub
inc
adc
inc
cmc
or
cwtl
negb
mov
pop
hlt
xor
or
jbe
adc
aad
dec
or
push
iret
lret
lods
andl
push
xor
or
fildll
sti
or
aad
in
sub
out
adc
pop
lock
push
je
popa
and
in
daa
inc
sbbb
push
xchg
jno
jecxz
call
mov
in
inc
insl
sub
jmp
xor
mov
jb
xor
outsl
lods
pop
fsubrs
jle
dec
mov
xchg
pop
dec
icebp
mov
dec
push
sbb
xchg
adc
rcrl
mov
adc
add
sub
out
enter
sbb
adc
add
nop
xchg
lods
out
push
jae
xchg
cmp
jg
sbb
cwtl
mov
push
inc
mov
dec
into
outsl
jp
sub
mov
imul
dec
cmp
mov
mov
mov
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xor
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
dec
clc
add
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
or
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
clc
add
jl
add
nop
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
or
add
sub
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
movsb
stc
add
lods
stc
add
mov
add
mov
stc
add
int3
stc
add
aam
add
out
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
add
add
or
add
sbb
add
sub
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
