call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
in
inc
cmpsb
push
xchg
pusha
xchg
push
xchg
jle
jae
xor
rclb
es
rclb
inc
mov
inc
cmpsb
push
cmpsb
pusha
xchg
add
adc
and
xor
shlb
lock
addr16
push
mov
mov
jo
add
adc
and
xor
sub
lock
shrb
hlt
and
inc
cmpsb
and
add
pushf
inc
sbb
in
aas
ror
test
loopne
cmpsl
add
dec
jns
dec
sub
xchg
jno
xor
sbb
es
cmp
jge
mov
loopne
icebp
lret
sbb
push
cmpsb
xchg
xchg
inc
sbb
push
out
les
fidivs
inc
in
xor
pop
xorl
roll
repz
leave
pusha
add
dec
lds
push
pop
psllq
xor
xchg
push
fstpl
iret
mov
lea
ds
roll
sbb
ret
fmull
aad
mov
cmpsb
test
popa
or
ss
mov
aas
fld
jmp
jg
fs
inc
mov
inc
cmpsb
push
xchg
pusha
xchg
jo
add
adc
and
xor
sarb
push
loopne
lock
cmpb
mov
ret
xor
loop
xchg
outsl
mov
inc
stos
inc
inc
lods
es
sbb
add
xor
and
mov
cmpsb
sbb
pusha
test
andb
mov
test
mov
adc
adc
adc
mov
and
xor
shlb
push
loopne
lock
xchg
push
mov
cmpsb
push
xchg
pusha
xchg
add
adc
and
xor
shlb
push
loopne
lock
xchg
push
mov
gs
iret
xchg
out
mov
imul
adc
mov
ret
jmp
call
lods
insb
push
xchg
or
sub
in
push
jmp
clc
adc
or
sbb
cmp
call
mov
es
insl
push
xor
repnz
jno
and
inc
xor
movsl
or
fwait
jge
mov
mov
repnz
ljmp
orb
fmulp
adc
test
cmp
arpl
mov
loopne
iret
jge
pop
push
sti
mov
and
leave
or
mov
dec
pop
sub
stos
jle
add
jge
insl
fcmove
mov
mov
inc
int
push
and
push
fsubs
movsb
in
pop
mov
sub
cmpsb
arpl
mov
pop
out
jnp
test
mov
mov
insl
jne
jne
in
push
jns
bound
inc
xor
jo
ret
xlat
push
jbe
test
out
push
inc
lock
pop
dec
call
mov
lods
inc
insb
push
add
xor
or
sbb
push
jns
mov
mov
mov
xor
rclb
in
repnz
mov
lret
xchg
and
jb
fisttpl
ret
pop
dec
cmpsl
sbb
call
arpl
outsb
std
jp
sti
inc
push
shrl
shll
xchg
lods
outsl
into
adc
sub
jns
or
outsb
leave
std
or
xor
adc
mov
shll
lahf
pop
pop
sbb
inc
bound
orl
adc
push
mov
stc
in
hlt
and
loope
mov
test
mov
sub
enter
cld
aaa
jnp
mov
movsl
cli
mov
sbb
cwtl
sahf
mov
lretw
enter
outsb
push
or
add
movsl
es
aaa
add
in
lods
add
xchg
aas
jecxz
jns
mov
mov
loop
aas
jecxz
cmp
pop
scas
out
int3
mov
aad
add
ficomps
pop
ret
sbb
call
stos
cmc
ffreep
sbb
dec
mov
inc
ss
push
add
aas
fistpll
pop
fs
nop
aam
js
xor
jne
movsl
adc
outsb
inc
pop
sbb
sti
pop
xchg
mov
push
filds
cltd
repnz
mov
inc
adc
pop
and
dec
dec
arpl
pop
insb
and
jne
call
mov
sub
cmp
adc
xchg
xor
js
scas
cld
xlat
lret
adc
cmpsb
test
mov
bound
add
cmc
cmp
movsb
mov
cmp
cmp
sub
int
mov
nop
inc
inc
push
mov
in
push
adc
dec
in
jo
cs
shrl
cmp
jne
or
imul
dec
je
xchg
push
mov
es
jns
ret
cld
inc
into
add
pop
jl
pop
lret
mov
jle
out
leave
push
es
sub
sbb
nop/reserved
scas
test
lea
call
ljmp
push
dec
push
push
adc
icebp
and
add
dec
shrb
xor
rcrb
jne
fcoml
std
xor
cmp
pop
mov
dec
dec
xor
ret
fimull
xchg
out
or
mov
sub
test
insb
mov
jo
loope
push
into
jmp
int
dec
insb
xchg
lock
cltd
lcall
sub
out
ror
xlat
or
cmpsb
test
fdivp
inc
in
jge
push
add
mov
inc
adc
shl
cs
mov
push
lods
in
sbb
ret
adc
mov
push
mov
cld
adc
loop
orb
and
dec
sbb
ficoms
loopne
out
or
mov
aam
cwtl
pop
xlat
mov
xor
add
aaa
and
out
jle
iret
dec
or
cli
dec
ja
mov
mov
cwtl
inc
xor
addr16
mov
paddusw
mov
lcall
mov
xor
add
jns
xchg
xlat
movsl
sub
sbb
pop
call
cmpsb
sbb
mov
test
in
pusha
and
repnz
sub
add
xchg
lea
and
mov
aad
xchg
mov
movl
rcrb
aad
pusha
xchg
outsb
sarb
dec
lcall
jp
pop
dec
jnp
sub
xchg
push
stos
dec
mov
fwait
arpl
shll
adc
cld
push
push
dec
and
addr16
mov
into
jp
mov
aam
ljmp
cmp
mulb
nop
addb
cmp
jns
gs
jae
shlb
stos
dec
inc
enter
ret
int
cwtl
addr16
stos
jmp
je
es
or
shl
je
jge
in
inc
out
cmpsb
test
fisubrs
inc
je
shlb
in
leave
mov
mov
lods
nop
mov
hlt
pop
lret
add
add
push
shlb
dec
data16
movsb
sub
push
add
push
mov
dec
stos
jg
lea
jg
rep
imul
das
into
mov
push
or
aam
out
cmp
dec
out
pop
add
popf
or
pushf
sub
stc
mov
pop
push
xchg
mov
imul
sbb
in
daa
lods
and
aad
or
cs
mov
mov
add
or
mov
ret
popl
cmpsl
pop
mov
push
inc
pop
jae
aaa
stos
loop
or
push
xor
je
hlt
xchg
jecxz
shrb
movsl
or
mov
jns
jnp
gs
cmp
dec
cli
push
jp
fisubs
popa
jb
pop
cmc
pop
sub
add
aaa
out
cltd
xchg
inc
fsubrl
jno
inc
cmp
push
add
push
popa
mov
xor
je
jg
lock
or
in
data16
xchg
lds
std
dec
rcl
or
out
pushf
push
inc
js
in
cmp
and
addr16
cwtl
es
xchg
and
xlat
mov
shrl
stc
pop
cmc
mov
jmp
add
ljmp
sbb
dec
ret
mov
inc
push
jns
sbb
mov
xchg
stos
fucom
loop
int
inc
aaa
or
pop
jns
movsb
imul
inc
sti
insl
stc
int3
fsts
mov
fstl
xor
loopne
mov
xlat
jge
adc
nop
push
das
loop
ss
inc
nop
movsb
xor
subb
xchg
loopne
movsb
mov
mov
mov
sbb
inc
int
nop
push
push
push
fs
add
arpl
adc
cltd
and
arpl
arpl
mov
lea
jmp
sbb
nop
sub
shll
mov
and
pop
xor
mov
inc
int
aam
cltd
lea
inc
fimuls
inc
jae
rcll
out
inc
add
shll
xchg
hlt
cmp
andb
pusha
lcall
mov
sub
dec
mov
leave
inc
stos
mov
xadd
inc
mov
dec
imull
in
mov
and
xchg
je
xchg
out
mov
in
xor
cmp
adc
in
lea
xchg
or
fisubs
inc
dec
loop
dec
jge
out
test
aaa
inc
xor
mov
dec
or
sub
int3
jmp
xlat
mov
push
mov
lcall
pop
sbb
cs
repnz
push
jns
pop
mov
aas
jmp
xchg
add
movsb
pop
xchg
adc
ds
int3
or
aaa
and
repnz
aaa
pop
fdivl
pushf
xchg
es
out
adc
push
aas
cli
jecxz
sbb
cmp
rcl
jle
pop
stos
pop
filds
sub
push
fs
test
aad
dec
loop
jo
cmc
stos
in
mov
push
daa
pushf
dec
in
mov
fsts
fsts
clc
pusha
mov
fwait
int
cwtl
mov
movsb
out
stos
dec
in
add
jge
aad
ljmp
fdivrl
test
pop
push
inc
in
pop
test
cmp
sub
lcall
sbb
xchg
jno
insl
mov
cmp
in
cli
xchg
js
sbb
js
sbb
add
in
leave
stc
inc
push
dec
scas
jg
xchg
imul
incl
fcmove
cmp
sbb
loop
stos
xchg
xchg
dec
shrl
fdiv
clc
cmp
scas
push
adc
mov
inc
mov
add
aas
cmc
cmp
aad
adc
mov
dec
mov
xor
inc
or
arpl
pushf
add
cmpsl
test
aaa
daa
dec
sub
sub
inc
lret
cltd
shrb
or
adc
outsb
add
loop
sub
pop
dec
mov
mov
aam
idivl
mov
data16
and
lds
aas
jp
and
jbe
ja
pop
pusha
shll
repz
cmpsb
dec
lds
dec
mov
out
cs
sub
stos
pop
jmp
mov
mov
mov
ljmp
pop
xor
sahf
incb
push
out
jns
xchg
add
pop
mov
xchg
cs
test
dec
repnz
push
imul
mov
pop
inc
pop
lahf
mov
aad
xchg
inc
jle
scas
xor
stos
aam
lock
int
add
mov
popa
out
ljmp
loope
nop
mov
repnz
stos
iret
jg
cmp
imul
mov
std
cmpsb
cmp
inc
and
push
lods
push
cmpsl
lods
dec
daa
jns
data16
test
dec
jge
xchg
aas
lods
int3
add
xchg
ljmp
pop
and
popa
arpl
push
jo
addr16
test
cltd
xor
jge
pushf
cmc
sahf
jae
nop
sbb
ja
lods
dec
cmp
xlat
and
cmp
les
fimull
mov
jns
loopne
stos
push
cmpsl
sub
popf
mov
mov
ret
rclb
mov
cmp
loop
inc
stc
cmp
les
roll
pop
mov
outsb
mov
mov
add
dec
icebp
dec
popf
imul
popf
push
jae
cli
in
push
lcall
loop
xorb
mov
xchg
sbb
mov
add
sti
std
dec
jmp
es
push
ss
push
aad
xorb
test
dec
mov
jg
fildll
nop
push
out
mov
cmp
ja
cmp
sti
xchg
add
push
jnp
arpl
lods
add
dec
inc
jne
cmc
repz
cmp
in
add
cwtl
stos
sti
mov
icebp
or
jmp
jle
fdivs
add
adc
mov
or
adc
cmp
les
pusha
out
jp
lock
jg
mov
mov
sub
enter
or
mov
jl
int3
sti
push
addr16
cmp
jbe
cmc
insb
cmp
lock
xchg
xchg
loop
mov
mov
lret
fsubr
adc
mov
lods
mov
adcb
and
push
add
ret
pop
add
dec
sub
jb
movsb
inc
and
fbstp
out
xchg
lds
mov
aad
shlb
sub
int
sub
insb
pop
and
std
jmp
cltd
test
inc
cmp
fs
ss
dec
scas
in
push
push
pop
in
mov
in
jbe
jecxz
popf
jmp
sbb
adc
sbb
mov
out
xchg
iret
jo
data16
add
loope
mov
lods
jg
inc
test
movsb
mov
jp
jbe
js
sub
mov
lea
xchg
jo
cs
pusha
dec
pop
add
push
das
gs
aaa
ja
je,pn
lea
movsb
mov
mov
outsl
imul
sub
ljmpw
inc
loop
lds
xor
adc
pop
popf
xlat
es
or
jno
call
sub
xchg
pop
mov
xor
repnz
dec
lret
or
inc
dec
movsb
adc
push
inc
stos
xlat
sbbb
ljmp
sub
scas
pop
rcl
lds
add
int3
push
sarl
fwait
je
xor
es
ljmp
pop
jge
popa
mov
out
stos
pusha
pop
inc
mov
nop
inc
cli
and
jns
popa
jmp
jno
push
rcrl
mov
imul
mov
xchg
nop
pop
pushf
jle
fcmovnb
jmp
mov
xchg
fldcw
decl
jbe
aas
imul
js
cmp
pop
bnd
sub
std
subb
pop
aam
push
test
cmp
fidivrl
paddusw
mov
dec
mov
test
imul
scas
arpl
or
xchg
cld
and
shrb
adc
cmp
enter
in
dec
and
or
in
mov
popa
push
rcrb
cs
cmc
ds
push
fwait
pop
gs
insl
cmc
sbb
bound
and
ror
mov
add
jno
push
jns
push
gs
lret
cmp
mov
test
rcll
orl
loopne
lods
push
movsb
adc
aad
lea
pop
mov
ds
jnp
aad
clc
pop
dec
outsl
mov
sbb
arpl
hlt
in
push
mov
sbb
push
in
imul
leave
inc
stos
adcl
jne
jnp
test
insb
dec
sbbl
shll
and
cmp
or
jmp
pop
push
test
ja
or
or
adc
out
nop
or
or
mov
xchg
cltd
in
xor
sbbl
sbb
mov
pop
and
cmp
shlb
jmp
gs
stc
negl
mov
fimull
into
ret
data16
dec
outsb
adc
inc
movsl
inc
mov
fnstcw
adc
push
movsb
insb
cmp
jb
xchg
test
adc
cmp
sub
mov
es
pop
push
ftst
xor
xchg
mov
cmpsb
sarb
push
cltd
aad
sahf
mov
in
test
leave
cmp
cwtl
lea
pusha
xchg
cltd
sub
or
mov
icebp
pop
andl
inc
popf
push
sbb
rcrb
enter
sbb
je
jge
push
pop
cmp
mov
pop
mov
clc
iret
xor
xchg
xchg
sti
jle
push
aad
mov
xchg
add
dec
ret
arpl
push
in
addr16
jmp
lret
and
popaw
and
out
pop
adc
popa
add
scas
sub
push
in
lret
jno
movsl
es
mov
mov
js
insl
mov
call
xchg
imull
dec
loopne
xor
pop
js
mov
ds
adc
xchg
lock
fwait
movsl
imul
inc
xchg
add
add
in
lods
loop
mov
cmp
xchg
lahf
jb
jl
fistl
pop
inc
js
out
mov
rorl
dec
arpl
inc
push
adc
leave
mov
sarl
lret
ret
subl
or
enter
lea
cmp
push
and
or
insb
mov
fadds
pop
pop
ja
test
nop
mov
arpl
and
test
arpl
xchg
mov
mov
push
push
sbb
and
call
je
fstpl
cmp
xorb
jp
cmp
shrb
rcrl
mov
cmp
bnd
and
lods
xor
addr16
add
mov
aad
imul
mov
lcall
push
rorb
leave
dec
in
xchg
shll
or
fwait
shl
inc
jns
outsb
mov
mov
add
lock
mov
and
adc
addr16
add
cli
push
popa
xor
iret
ss
lods
lret
mov
jge
call
rol
leave
pushf
adc
inc
xchg
xor
push
lcall
pop
cmp
lock
push
mov
sub
mov
stos
adc
int
pop
xchg
iret
dec
dec
and
stos
addr16
mov
xor
inc
pop
cmp
mov
inc
push
aas
add
mov
and
divb
push
in
jge
cmp
in
ret
pop
cmc
movsb
cmpsb
sub
jb
jno
outsb
aad
mov
or
into
aaa
xlat
push
jne
or
and
sub
mov
test
pop
sub
sub
ja
les
adc
pop
add
into
rolb
mov
int3
aas
sbb
std
cmp
mov
dec
addr16
jb
sbb
inc
lods
mov
push
jne
jmp
xor
in
push
inc
movsb
addr16
scas
push
outsb
loopne
pop
inc
dec
inc
pop
and
rcrb
adc
test
fwait
lods
shll
mov
xchg
lds
mov
fimuls
xchg
jle
sahf
je
add
cltd
outsl
mov
cmp
mov
dec
xor
int
in
icebp
mov
inc
push
call
sbb
test
lock
sahf
cld
sub
insb
add
add
rolb
lret
push
or
data16
pop
sub
jo
xor
insb
data16
fldenv
test
dec
inc
leave
sbb
or
aam
gs
andl
insb
or
outsb
pushf
push
lcall
into
mov
pop
cmp
fidivrs
dec
mov
cmp
test
pop
push
stos
aaa
leave
sub
pop
add
xchg
xchg
jge
xchg
clc
cmpsl
inc
inc
and
popf
xor
pop
push
mov
fisttpll
push
adc
mov
mov
lds
xchg
mov
mov
int
dec
loopne
push
scas
xchg
cltd
lea
popa
pop
insb
mov
sbb
and
les
into
jb
jo
sub
cmc
lods
or
scas
sbbl
call
out
dec
and
stos
dec
pop
sub
jbe
inc
cwtl
int
pop
or
mov
aaa
and
adc
jns
pop
push
out
cmp
cwtl
dec
sub
lea
or
fstl
jno
or
shlb
sub
pusha
or
cmc
lods
cmp
dec
or
xor
jp
add
daa
add
cmpsl
push
loope
stos
mov
cmpsl
stos
comiss
adc
int
inc
fildl
xor
push
hlt
mov
ss
and
lret
insl
push
or
xchg
fldenv
sahf
jg
into
cmpsl
movsl
cmp
int3
jae
js
fs
ficoml
add
xchg
mov
rcrb
stc
mov
les
push
out
mov
inc
loopne
add
mov
or
loope
ret
or
push
xor
jp
les
pop
xor
call
xchg
push
sub
pop
icebp
mov
dec
ret
sbb
adc
mov
cmpsl
lods
in
insb
test
jg
aad
les
push
fldlg2
cmp
imul
xchg
std
leave
sar
inc
ja
mov
mov
scas
xchg
lods
shl
test
je
cltd
pop
loopne
stos
xor
xchg
daa
and
mov
movsl
fsubrs
cwtl
in
jg
test
mov
out
sub
pop
mov
jns
sti
jb
in
jle
int
imul
fidivrs
pop
leave
adc
xchg
push
popf
sub
mov
inc
or
pop
inc
cs
add
and
cmp
lcall
sahf
ret
dec
pop
pop
or
add
jne
sahf
rcr
lds
cltd
mov
sub
and
inc
jle
mov
ds
shrb
xchg
stos
xchg
add
leave
movsl
mov
inc
jge
jne
push
ja
in
lret
mov
add
mov
repz
mov
cmpsb
sub
sub
aas
lcall
inc
pop
js
mov
xchg
fwait
nop
lods
pop
in
dec
cmp
shll
es
int
pop
aad
sub
insb
inc
xchg
push
inc
mov
xchg
scas
ja
sub
mov
add
out
pop
or
jmp
mov
pop
pop
int3
daa
add
sbb
std
movsb
sar
out
mov
mov
adc
mov
in
mov
mov
pushf
push
mov
test
pop
in
pop
adc
lahf
cmp
push
rolb
popf
push
xor
ret
mov
xchg
jmp
scas
cmp
imul
leave
mov
into
lcall
push
icebp
je
adc
out
pop
ljmp
lret
sub
pop
xchg
adc
mov
aad
in
jb
iret
jne
or
dec
les
xchg
add
mov
pusha
and
fidivrl
arpl
sbb
pop
mov
mov
outsl
insl
outsb
mov
jno
sub
insb
mov
popf
call
push
icebp
popa
xchg
add
adc
and
xor
shlb
push
loopne
lock
xchg
push
mov
cmpsb
push
xchg
pusha
xchg
add
adc
and
xor
shlb
push
loopne
lock
xchg
push
mov
cmpsb
push
xchg
pusha
xchg
add
adc
and
xor
shlb
adc
push
lock
bound
addb
mov
add
nop
push
mov
fnstcw
loopne
xchg
or
outsl
test
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
mov
cmpsb
mov
clc
and
cwtl
mov
mov
cmp
or
sbb
data16
dec
inc
pop
mov
cmpsb
mov
imul
out
leave
lods
sub
sbb
push
sbb
data16
or
mov
cmpsb
mov
not
out
daa
mov
mulb
pop
gs
sub
ds
pop
ljmp
hlt
int3
mov
out
pop
aad
add
sub
sbb
push
pop
std
xchg
jbe
fisttpl
pop
cmp
rorl
and
fisttpll
or
popa
orl
push
mov
mov
test
test
movsb
dec
mov
dec
out
jns
mov
test
imul
notb
ss
imul
mov
rclb
fidivrl
mov
es
sub
into
sbb
cmp
pop
push
cmpsb
dec
imul
jp
mov
sub
testb
push
cs
test
xchg
adc
pop
ss
call
sbb
push
jbe
adcw
lock
iret
mov
lcall
mov
jne
push
adc
prefetchwt1
or
cmp
call
mov
cmpsl
mov
dec
and
push
insb
inc
jle
cmp
xor
ret
flds
stc
leave
fnstenv
sub
cmp
or
sbb
data16
dec
inc
pop
mov
cmpsb
mov
imul
out
leave
fnstenv
sub
cmp
or
sbb
data16
dec
inc
pop
mov
add
sub
fisubrl
fsts
test
mov
or
imul
fsubrp
fnstsw
das
inc
inc
or
ret
or
or
sub
cwtl
sub
jbe
idivb
fs
mov
aas
xchg
add
or
mov
pushf
test
adc
out
push
lret
or
xor
fadd
pushf
jecxz
in
scas
sbb
inc
es
sbbl
mov
xchg
jnp
loop
clc
bound
test
fistl
mov
jne
out
insl
lret
sub
repnz
inc
lahf
inc
inc
and
js
fnstenv
sbb
push
sahf
cmp
pop
or
pusha
clc
jno
cmp
ja
test
cmp
sti
inc
sbb
and
nopl
sub
icebp
and
add
mov
incl
xchg
sarl
mov
dec
js
or
lods
je
dec
addb
sub
cmpsb
cld
nop
jecxz
idivl
imul
sbb
imul
inc
xor
insb
xlat
imul
cmpl
addb
sahf
in
subl
mov
fdivl
mov
xchg
addr16
xchg
sub
lods
movsl
ljmp
or
or
jp
jns
out
jnp
mov
insl
test
jb
pop
mov
sbb
push
fidivrl
pop
and
jb
mov
adc
daa
pop
shll
cltd
mov
fcompl
adc
repz
pop
dec
dec
mov
pop
jo
insl
lahf
pushf
inc
mov
dec
fidivs
jbe
daa
mov
inc
inc
mov
and
or
cld
jb
cmp
test
xchg
jp
push
adc
repz
pop
in
loop
fwait
jnp
adc
mov
mov
les
out
push
cmp
cmpl
test
pop
jg
jns
outsl
mov
mov
inc
test
aad
add
sahf
sub
and
iret
rcll
xor
daa
push
mov
loop
jecxz
mov
cld
cmp
push
nop
or
sub
inc
arpl
add
mov
in
lods
jnp
arpl
test
insb
subl
loope
lret
push
push
fldt
test
mov
loope
mov
adc
adc
aas
cmpsb
mov
xor
js
aas
sub
jne
dec
test
xor
mov
jecxz
repz
fadd
test
gs
sar
les
into
or
xchg
int3
xchg
scas
loopne
test
xchg
insb
enter
mov
dec
js
mov
jecxz
subb
xchg
popf
cmc
jl
jle
mov
je
fsts
cli
sti
cwtd
dec
push
xor
xor
lods
les
cltd
shr
in
push
mov
and
aam
pop
aas
sub
or
fsub
sub
mov
hlt
mov
jge
push
inc
aad
stc
mov
fcoml
es
mov
and
js
sbb
adc
insl
add
inc
or
pusha
inc
sbb
inc
or
imul
xchg
leave
xchg
call
xchg
xor
xchg
es
sub
jae
leave
sub
aaa
xor
aam
dec
xor
and
mov
cmp
xor
adc
aam
sub
lods
leave
cmp
aas
inc
cli
sahf
cwtl
jle
push
pop
lea
movsb
cmc
jno
out
movsb
xchg
test
xchg
xorl
jp
sarl
cmp
popaw
adc
xchg
outsl
mov
shlb
lahf
xchg
dec
pop
or
test
aad
outsb
loopne
mov
mov
cmp
jae
daa
cmp
or
sub
mov
mov
adc
mov
add
jecxz
add
fimuls
jb
jg
test
pop
and
lahf
cmpb
mov
inc
pop
and
roll
lods
lret
das
cwtl
xchg
mov
and
lcall
mov
gs
data16
in
jae
movsl
fs
sbb
sub
pop
fists
popf
sbb
cmp
inc
lea
cltd
mov
mov
outsl
adc
pop
mov
adc
es
lds
or
jnp
sbb
inc
inc
std
out
or
inc
or
stc
scas
mov
xchg
dec
adc
inc
pop
lods
xchg
stos
dec
int
adc
test
and
arpl
inc
stc
mov
inc
aas
daa
fwait
sbb
cmp
mov
in
scas
sbb
xchg
int
jno
jb
subb
rcl
mov
dec
mov
call
inc
jle
out
jle
sbb
sbb
scas
fdivrl
cmp
mov
cmp
out
fisttps
jno
sti
test
push
mov
mov
pop
sub
xor
push
add
outsl
adcb
jmp
mov
dec
xlat
in
mov
fs
sbb
pop
mov
sub
les
adc
lds
mov
xchg
jmp
mov
push
mov
or
je
add
push
push
pop
mov
and
xchg
lret
in
cmp
fisttpl
call
or
push
test
and
rorl
stos
das
loopne
lods
sti
int
popf
pop
repz
and
adc
pop
cmpsl
fxch
mov
xlat
into
add
daa
push
xor
repnz
in
in
mov
in
loopne
mov
pop
sti
mov
add
fwait
test
or
outsb
sarb
pop
jle
mov
add
adcb
sbb
mov
dec
pop
fildll
in
mov
subl
xor
xchg
pop
mov
xor
fldt
pop
add
dec
gs
int
sbb
lods
mov
loop
pop
repz
idiv
or
push
xchg
call
gs
pop
arpl
arpl
jno
push
adc
aam
xchg
lcall
and
lock
adc
dec
mov
outsb
adc
jbe
add
shl
jmp
dec
cmpsl
popa
add
lock
xor
push
daa
add
test
insl
sub
adc
sbb
aaa
adc
lods
cwtl
insl
testl
shrl
int
lock
mov
addr16
mov
mov
outsl
sbb
sub
in
adc
loop
jns
pop
cmp
lcall
std
push
ja
inc
movsb
insl
call
lods
xlat
pop
pusha
pop
mov
or
cmp
scas
jnp
xorb
jne
push
xchg
and
xor
mov
xor
dec
and
mov
sbb
add
push
mov
inc
jmp
mov
rorb
and
loope
xchg
popf
icebp
test
and
mov
addr16
adc
or
sbb
imul
adc
mov
in
sahf
sbb
data16
mov
cmp
sub
das
into
jmp
jg
xorl
adc
pushf
add
mov
xor
std
xlat
jl
in
jae
mov
movsb
and
test
jnp
pushf
js
out
xchg
outsb
sbbl
stos
ss
scas
push
xchg
sbb
enter
fldcw
push
out
gs
les
cmp
jecxz
addr16
dec
adc
jmp
cmpsl
ret
mov
and
push
mov
je
and
cmp
adc
sarb
push
imul
jns
call
push
loop
adc
sbbl
in
or
push
sub
pusha
xor
cmpsl
mov
cmc
mov
mov
mov
push
cmp
clc
mov
cmp
mov
dec
bound
xchg
and
mov
inc
or
js
and
push
popf
aas
lcall
ret
mov
and
jns
sbb
add
jns
ficoms
roll
cmp
lcall
insl
fidivrl
je
ret
jp
jp
or
xchg
aad
rorl
cld
clc
adc
loop
sbb
cmp
daa
ljmp
ljmp
and
jmp
lcall
sub
cmp
nop
sub
adc
sbb
cmp
lds
scas
add
lret
lds
xorps
pop
int3
scas
cmpsb
sbb
rcrl
fsubr
add
je
sub
jns
cmovne
xchg
addr16
cmp
icebp
or
je
pushf
mov
in
insl
or
jo
sbb
push
scas
lret
pop
mov
repz
sub
pop
popf
negl
mov
jl
daa
inc
nop
imul
repnz
fs
popf
xchg
mov
or
hlt
cld
jnp
sub
pop
add
pop
scas
dec
imul
add
mov
add
jns
jp
lods
push
outsl
mov
add
cmp
outsl
js
test
test
mov
mov
shlb
pop
movsl
cmpsb
and
xchg
xor
add
or
dec
fs
insb
sub
leave
int3
clc
xchg
hlt
in
stc
cmp
sub
cmc
jmp
in
jg
inc
insl
or
out
mov
repz
add
aam
and
nop
sahf
xchg
adc
or
or
sahf
in
mov
inc
es
mov
inc
adc
cmp
mov
and
enter
and
filds
jmp
cmpsb
jae
push
pop
addl
or
aaa
jg
data16
sub
test
jb
scas
xlat
inc
mov
add
lea
mov
dec
addl
xor
ficomps
and
push
lds
ja
add
adc
nop
sbb
call
push
in
dec
testl
push
inc
sarl
aam
imul
sbb
sbb
mov
popa
inc
ss
pop
pop
addr16
mov
jle
jbe
jnp
aam
je
test
stos
ficomps
or
pushf
xor
call
aad
sub
sbb
xor
xchg
smsw
lahf
ffreep
cmp
idiv
mov
iret
jg
lcall
loope
enter
adc
mov
mov
shll
insb
ss
dec
push
stos
dec
xor
subl
pop
add
lret
cmova
mov
jmp
lods
outsl
insl
aas
test
mov
imul
and
ljmp
and
loop
mov
mov
push
rorb
fcmovb
repnz
int
jmp
mov
mov
call
add
hlt
fdivr
xchg
adc
movsb
pop
sbb
aam
ljmp
push
insl
sbb
pop
test
fs
pop
lcall
cltd
leave
incb
bswap
ficoms
insl
lea
adc
jb
enter
test
fmuls
stos
mov
icebp
decb
popa
mov
push
std
sub
jle
mov
mov
add
imul
add
mov
or
pusha
add
fucom
pusha
push
into
hlt
xchg
sbb
fsubp
mov
adc
mov
xchg
mov
stos
cwtl
jle
sub
rorb
sbbb
pop
push
adc
xchg
fsubrs
adc
ds
cmpsl
aaa
adc
or
shlb
lock
mov
insb
nop
scas
add
mov
xor
scas
mov
dec
mov
xor
sub
push
and
sti
fwait
movsb
sbb
test
cmp
fdivr
push
push
jge
cld
jb
sub
stc
gs
stos
mov
cs
push
addl
ja
scas
je
sti
clc
pusha
pop
jae
xchg
addr16
loope
cmc
and
stos
push
adc
or
xor
mov
and
repz
stos
adcb
mov
mov
mov
mov
add
stos
adc
sub
sub
cmp
mov
lods
dec
leave
inc
movsb
fucomi
mov
imul
fsts
iret
mov
popf
add
mov
ret
sbb
rcr
in
ljmp
jge
ret
push
imul
test
and
sbb
lea
cmp
lret
and
lds
insb
inc
mov
hlt
dec
cmp
hlt
popf
adc
inc
mov
xchg
xor
dec
push
in
aam
pop
enter
icebp
fldl
push
cmp
push
clc
or
int3
xor
sbb
hlt
out
xor
inc
sahf
push
mov
orb
ret
push
sahf
nop
aad
push
fimull
sub
add
dec
pop
fisubrl
out
pop
push
in
bound
lea
repnz
fwait
and
pop
push
pushf
xor
movb
sbbl
push
pusha
ret
jae
insb
scas
cli
out
and
cmc
roll
test
fisttps
aaa
clc
cmp
das
mov
rclb
xchg
popf
fcomps
mov
pusha
loopne
cmp
fwait
push
pop
xchg
mov
dec
in
mov
pop
jle
out
pusha
fsubr
std
sbb
aam
fidivl
movsl
mov
jle
and
lret
into
xor
iret
mov
xchg
aas
xor
jo
push
call
sub
push
in
mov
pop
cli
daa
push
sahf
cmpsb
jnp
mov
and
push
ss
lahf
aaa
mov
mov
jl
sar
dec
ja
cld
sub
aad
sub
mov
sub
or
ss
pop
mov
leave
popa
fimull
sbb
pop
cltd
xchg
pop
rcll
dec
pop
dec
xlat
xchg
sahf
incl
inc
mov
mov
mov
mov
stc
dec
pushf
andb
xchg
cmpsl
xchg
dec
lret
adc
fnsave
sarb
daa
sub
lds
data16
roll
cmp
mov
push
xor
nop
mov
subb
push
sbb
and
aaa
xchg
xchg
movsb
mov
test
dec
in
and
cmp
dec
or
movhps
dec
sti
out
add
in
movb
push
or
xchg
dec
mov
pop
sbb
jecxz
fwait
mov
pop
or
sbb
daa
xchg
fnclex
test
cmp
jb
or
cmpsb
arpl
testb
or
movsb
sar
arpl
lods
ficoms
idivl
rol
jae
decb
lods
je
or
xchg
idivb
ds
emms
cmp
add
adc
jne
mov
mov
mov
xor
mov
sub
add
push
out
mov
mov
jp
sub
lret
add
cli
loope
jle
fdivl
aad
mov
testb
jl
in
jp
pop
pop
mov
fwait
mov
pop
sarl
cltd
inc
push
mov
cmpsb
movsb
push
jnp
ss
dec
xchg
mov
mov
rolb
xor
outsb
aaa
add
mov
sub
sbb
or
sbb
pop
mov
push
inc
aaa
jmp
add
mov
jge
inc
and
push
cmc
pop
dec
scas
sub
out
xchg
xchg
xchg
mov
ja
mov
mov
sbb
inc
loop
sub
pop
sub
xchg
shlb
imul
lea
loop
adc
ss
mov
cmc
pop
cmpsl
cmpsl
scas
sbb
cmpl
and
neg
dec
mov
sub
sub
mov
mov
and
push
sub
jbe
cmp
xchg
push
xor
and
sub
mov
testb
mov
arpl
js
xchg
sbb
shrl
insl
in
rcll
jp
push
ja
cmpsl
insb
mov
mov
adc
fcom
mov
outsl
das
nop
add
bnd
jp
jae,pt
jp
loopne
scas
pop
mov
xor
mov
fldl2e
mov
or
sbb
mov
mov
jae
insb
aad
add
push
pop
notb
fbld
cmpl
mov
cld
push
mov
test
add
mov
and
or
jg
aaa
clc
sub
and
or
jbe
jg
pop
pop
mov
mov
cmc
jb
xchg
push
xor
sub
int
and
push
psrlw
mov
xchg
pop
sbb
aas
push
loop
sbb
dec
fldcw
inc
dec
std
mov
in
push
push
and
dec
mov
sub
cld
sub
fst
pop
pop
cmpl
add
push
pusha
pop
or
push
ljmp
pop
jl
fistpl
or
pop
push
popf
ja
pop
data16
cmp
ret
add
and
mov
sub
adc
loop
dec
or
xchg
stos
out
cmpsl
insb
mov
into
notl
mov
mov
xor
sti
dec
ja
sbb
mov
out
fwait
dec
push
pop
mov
sbb
enter
mov
popa
shlb
outsl
dec
dec
cmp
test
push
pop
adc
movsb
divb
sbb
cld
mov
xor
repz
pop
push
jge
sbb
jl
mov
xchg
lods
cmp
in
add
xchg
std
push
sarb
add
mov
inc
xchg
outsl
xor
cltd
arpl
mov
repnz
push
outsb
mov
ljmp
cltd
dec
lods
or
cmpsb
xor
addr16
adcl
mov
insb
xchg
or
call
pop
xchg
inc
mov
aad
mov
aad
lea
jge
mov
into
lea
test
call
call
jb
shll
in
fwait
mov
mov
jmp
icebp
sbb
and
mov
lods
add
ret
test
fidivrs
outsb
enter
scas
shl
jl
push
bound
pop
lds
pop
and
and
stos
addr16
dec
int3
out
pusha
inc
popa
leave
or
test
or
mov
aas
arpl
and
orl
insl
aam
repnz
dec
sarb
inc
or
xchg
xor
pop
inc
sbbl
dec
ss
frstor
inc
ret
jge
mov
inc
icebp
dec
arpl
movsl
pop
dec
int3
cmp
rcrl
lret
hlt
fnstcw
mov
mov
sahf
pop
bnd
cld
sub
dec
test
cmp
rcl
call
add
aam
jae
ss
cmpsl
xchg
dec
out
ss
mov
ja
or
popf
ds
sub
ret
push
xor
std
and
notl
punpckhbw
pop
in
test
xor
add
test
js
iret
jne
and
bound
into
fildl
adcb
or
xor
xchg
repz
lds
xchg
push
inc
push
rorl
lods
lcall
ja
aad
xchg
push
fimull
int
nop
push
xchg
out
push
nop
repz
fs
inc
mov
push
test
sub
fwait
dec
pusha
jno
mov
cs
inc
aas
mov
call
or
out
mov
and
iret
js
nop
inc
stos
pushf
aam
jecxz
add
mov
add
pop
mov
notl
lods
lds
sbb
dec
and
iret
fisubrs
sub
dec
pop
hlt
popf
idivb
aam
mov
testl
push
iret
mov
imul
mov
nop
adc
push
mov
ljmp
loope
mov
inc
push
mov
dec
or
push
fstl
imul
push
pushl
out
test
loop
xchg
nop
loop
icebp
xchg
xor
inc
pop
add
jae
xor
mov
mov
pop
shrb
push
ret
or
inc
jge
mov
jno
sbb
sub
repz
mov
lock
sbb
cmp
jo
xchg
xchg
mov
test
and
outsb
cmp
pop
leave
mov
sbb
jo
pop
mov
orb
xchg
jle
jle
pop
mov
out
std
cltd
mov
out
lret
iret
dec
fsubp
hlt
int3
push
adc
add
mov
call
mov
add
sbb
fs
nop
aad
push
pop
pop
and
stos
subb
aaa
sbb
fs
pop
or
hlt
cmpb
sub
and
insl
cmp
push
in
and
pop
dec
jns
xor
xchg
xchg
subl
mov
cmpb
xchg
push
cld
mov
pop
sbb
pop
add
jae
jnp
imul
lock
sti
lcall
stos
cmp
repnz
jge
das
in
jo
fcompl
fldt
inc
cmpb
movb
cmp
dec
seta
repnz
cmpl
movsb
xor
shll
mov
imul
out
leave
fnstenv
sub
cmp
or
sbb
data16
dec
inc
pop
mov
cmpsb
mov
imul
out
leave
fnstenv
sub
cmp
or
sbb
data16
dec
inc
pop
mov
cmpsb
icebp
xchg
icebp
xchg
leave
fnstenv
icebp
cmp
or
sbb
data16
imul
xchg
mov
stc
dec
fnstenv
es
mov
loope
xchg
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
sti
shr
rcr
enter
mov
pop
mov
jno
popa
cmp
sub
sbb
sbb
pushf
shr
shll
sbbl
jno
popa
js
sub
sbb
or
inc
rcrl
rorl
loope
xchg
enter
mov
xor
sub
push
dec
pop
push
push
xchg
mov
mov
test
mov
xor
mov
sub
sbb
or
adc
adc
pop
lods
dec
fs
xchg
sub
and
mov
adc
xor
jo
shrl
out
cltd
jmp
hlt
cs
push
xor
add
add
mov
cltd
and
and
fldenv
inc
xor
pop
jns
push
add
cmp
and
movsl
in
clc
mov
and
adc
add
pop
mov
add
xor
pop
push
jne
fabs
mov
addr16
insb
adc
mov
sbb
or
sarl
loope
xchg
rolb
mov
jno
popa
jo
and
sub
or
aad
subb
call
js
cmp
adc
adc
jno
insl
outsl
mov
lea
std
int
insl
fcomp
lds
sbb
cmp
xor
jg
add
dec
dec
xchg
xchg
test
jmp
test
cwtl
mov
mov
pop
jno
popa
cmp
sub
sbb
or
clc
shr
rcr
enter
test
cwtl
mov
mov
pop
jno
popa
cmp
sub
sbb
or
clc
rorl
sbb
and
inc
outsb
idivb
sub
adc
arpl
mov
int3
loop
loopne
dec
dec
ret
inc
sub
xchg
inc
push
insl
dec
hlt
pop
sbb
sarb
jno
dec
fwait
icebp
rolb
pop
and
or
xchg
mov
stos
fstpl
push
mov
cmp
pop
popf
popa
sarl
lds
mov
dec
cs
jne
mov
outsb
push
xchg
mov
lea
std
jno
add
xchg
callw
pop
loop
fsubrl
mov
add
add
jmp
idivb
les
scas
insb
xor
sub
pop
pushf
dec
adc
fs
aam
cld
mov
adc
xor
sub
xchg
mov
pusha
ret
sub
and
add
mov
iret
adc
adc
mov
inc
fcmovb
jmp
add
jl
pop
xor
and
mov
cmp
or
lcall
daa
jmp
nop
hlt
inc
xchg
pushf
inc
rcll
adc
orb
xchg
lds
fmull
popa
jnp
inc
jle
xor
sub
jo
xchg
pop
out
mov
push
in
jb
fstpl
inc
jnp
jmp
and
movsb
arpl
push
sub
push
inc
aas
aad
mov
jl
jnp
cmp
mov
out
cmp
inc
fldl
adc
xchg
mov
dec
dec
cs
movsb
aad
fnsave
das
stos
add
cmp
data16
stc
jo
lret
inc
lods
push
push
and
iret
push
dec
sbb
pop
lcall
ret
cmpsb
mov
push
mov
lds
sbbl
mov
or
lret
or
and
mov
xor
xchg
ss
cmp
sar
lahf
ss
aaa
jns
push
mov
xlat
bound
test
sahf
add
mov
mov
jle
jmp
xchg
out
fisubrl
cltd
and
lods
xor
in
lret
mov
int3
jp
fisubl
xor
stc
stos
push
enter
fnop
rcrl
aas
insb
mov
or
push
sahf
mov
mov
sub
pop
and
roll
rorl
cwtl
nop
lods
addr16
repnz
inc
xor
dec
push
ds
dec
jnp
xor
repnz
jecxz
pop
out
dec
das
adc
xor
xchg
rcrl
int3
movsb
call
add
stc
and
inc
push
fldt
dec
jp
push
out
adcl
adc
add
sbbl
sub
adc
lods
xchg
push
fs
repz
frstor
repnz
mov
mov
mov
pushf
mov
jo
movl
loopne
sbb
add
hlt
sbb
add
sub
add
push
addl
es
out
imul
mov
ja
sarl
inc
add
adc
add
mov
xchg
rcr
dec
das
rorb
or
cmp
dec
dec
aaa
idivl
sub
movsl
clc
and
ficoml
dec
sar
das
std
mov
or
aaa
jle
adc
push
mov
lods
outsb
sti
movsl
inc
dec
insb
dec
add
mov
xchg
inc
push
push
xor
pop
xor
cmp
and
adc
xchg
adc
insb
jecxz
data16
mov
call
cmc
popf
cmp
mov
call
push
jge
inc
in
mov
inc
and
or
and
jecxz
mov
push
jo
lcall
inc
and
inc
stos
cmp
jg
sbb
jne
aas
cwtl
mov
addr16
pop
rol
jmp
mov
inc
add
xorl
jl
gs
fimuls
rorl
ljmp
sar
test
adc
sarl
cmp
stos
dec
fstpl
inc
push
ja
mov
test
ja
inc
imulb
jno
ljmp
jno
out
mov
and
loope
jle
mov
js
xor
test
xlat
out
rorl
ret
shl
push
cmova
lea
sti
adc
imul
jne
imul
aaa
pop
adc
data16
jle
xor
adc
mov
outsb
scas
push
cmc
int
shll
dec
std
inc
mov
sub
or
in
xchg
mov
xchg
lret
test
shrb
xor
cmpsb
lock
shll
pop
outsb
in
stos
movsb
sbb
lock
std
out
push
enter
jnp
aam
out
inc
out
mov
adc
leave
outsb
sbb
cs
mov
dec
pusha
and
jmp
repz
pop
cli
push
sbb
test
popf
mov
inc
call
sbb
es
jae
lcall
adc
mov
daa
xchg
dec
out
out
push
inc
imull
lock
inc
jmp
lock
jae
xor
cli
lods
out
mov
mov
mov
ficomps
in
icebp
add
mov
or
fsubl
in
pusha
xlat
dec
out
insb
or
sti
sub
sub
mov
fwait
inc
mov
pop
dec
cwtl
mov
insb
xor
pusha
mov
cmc
jg
imul
sub
pushw
gs
pop
xchg
stos
mov
jle
stos
imul
hlt
cmpsl
dec
add
in
lcall
sbb
inc
jmp
rol
loop
cmp
fistps
ja
dec
and
push
lret
rol
mov
shr
sub
push
loope
add
sub
mov
adc
mov
shrb
das
jne,pn
jne
lret
jmp
inc
xor
leave
jp
mov
fisubrl
add
jle
js
push
cld
stos
incb
repz
lds
shlb
xor
pop
aas
or
cs
jnp
mov
dec
sub
jge
cmp
fdivrl
fnstsw
xchg
iret
xchg
lret
rcrb
loop
lcall
or
pusha
test
popa
je
movsb
mov
push
call
xor
in
repnz
and
sub
jb,pn
xor
sub
xchg
inc
aaa
xchg
xchg
pop
add
sub
int3
and
rorb
stos
int
out
sub
sub
stc
add
jo
je
xor
push
adc
out
mov
or
jae
nop
push
test
je
lret
sub
addr16
in
enter
push
xlat
and
xor
jb
inc
adc
push
jg
mov
pushf
add
push
das
and
lcall
sti
xor
xchg
adc
push
mov
outsl
sub
jb
add
out
cli
imul
mov
inc
and
jp
mov
jl
adcb
mov
ud2
in
push
mov
add
stos
push
mov
repnz
or
in
ret
mov
sbb
jge
dec
jp
jbe
dec
test
popa
in
or
xchg
icebp
adc
mov
or
les
xchg
sbb
cltd
mov
or
call
enter
mov
pop
outsl
movsl
ja
enter
js
call
pop
jae
fs
in
insb
leave
push
mov
mov
push
jnp
iret
push
dec
inc
out
dec
imul
icebp
shrl
jns
cmc
mov
xchg
jne
dec
pop
fmulp
jecxz
xchg
mov
cltd
adc
ja
movsl
mov
ret
push
cmp
xchg
xchg
add
sbb
mov
xlat
bound
xor
ds
aam
mov
insl
rolb
pop
imul
sub
testl
enter
je
mov
cwtl
addr16
xor
lret
mov
add
xorl
mov
mov
rcr
add
sub
inc
and
insl
mov
cli
test
mov
push
inc
fdivrp
xchg
das
mov
mov
test
inc
and
push
repz
sahf
jne
mov
jne
ja
inc
ficompl
mov
aam
loop
add
mov
andl
adc
outsl
jb
pushf
fadds
jecxz
les
rcr
xlat
mov
xor
sti
jmp
roll
jl
inc
push
and
pop
or
mov
jle
addr16
mov
push
push
aad
jg
popf
pusha
jmp
push
sbb
sbb
aaa
aas
mov
insb
cmp
fwait
jno
mov
jp
xor
xor
ret
inc
shrb
into
clc
mov
sbb
pushf
inc
shrl
pop
or
fnsave
hlt
ret
fcoms
rorl
out
adc
and
adc
and
and
mov
jo
cmpsl
lea
jb
adc
sub
jne
push
in
xchg
gs
and
xchg
jmp
push
xchg
mov
ret
shl
pop
jns
adc
insb
in
sti
pop
mov
flds
push
mov
add
mov
xor
push
in
jge
aas
xlat
xor
pop
cmpsb
hlt
cld
loope
aas
sbb
lret
jb
jnp
mov
cmp
xchg
bound
loopne
leave
test
lret
enter
data16
lret
mov
push
repz
push
in
or
pop
push
mov
push
or
cmp
iret
inc
add
sbb
lods
daa
dec
test
add
sbb
cwtl
dec
mov
int
push
mov
mov
mov
test
add
xor
push
repz
mov
jl
in
jbe
aad
and
sub
cmp
mov
push
sub
shlb
adc
xor
scas
imul
cmc
mov
std
pop
inc
into
xchg
pop
mov
test
push
add
jmp
jp
popa
fwait
jg
fmull
test
test
aaa
sbb
jmp
pop
inc
dec
mov
test
xchg
das
and
bound
pop
loopne
inc
mov
daa
shrb
push
jge
dec
xchg
inc
adc
scas
mov
shlb
jns
mov
cli
shll
jae
nop
xchg
pop
data16
fwait
sbb
xlat
movsl
mov
repnz
mov
data16
xor
mov
or
shrb
fwait
or
imul
mov
mov
enter
adc
je
jbe
ljmp
out
cmp
scas
xchg
into
fwait
jp
push
and
cs
xor
push
lock
jmp
popf
mov
jle
sbb
mul
cmp
adc
les
lret
lcall
jno
push
das
cmp
cmc
call
pushf
cltd
mov
aam
dec
frstor
fwait
ss
dec
mov
aas
popf
mov
outsb
aaa
xchg
xor
insb
cmpsl
fidivs
pop
dec
int3
inc
jo
outsb
dec
repnz
pop
outsl
sub
dec
mov
mov
nop
push
out
pushf
aad
or
and
and
in
xor
les
push
mov
sbb
dec
push
shll
and
pop
ret
popf
add
mov
sbb
add
ret
dec
xchg
negl
pop
adc
stc
add
push
stos
inc
and
lods
xchg
jmp
push
mov
cwtl
cli
jno
mov
cmc
or
lods
xchg
sbb
pop
pop
adc
fisubrl
adc
inc
mov
dec
fwait
mov
aaa
repnz
adc
fadd
stos
loope
inc
or
lods
repz
je
mov
aaa
mov
stos
cmc
repz
jo
pop
shrl
test
repz
outsl
ss
push
aaa
imul
dec
hlt
mov
or
mov
iret
loope
and
sbb
outsl
cmp
pop
and
jbe
inc
dec
lock
ss
adc
xor
push
jns
fildll
mov
add
lret
pusha
sbb
pop
subb
pop
out
dec
jb
leave
hlt
test
cmpl
pop
fldenv
shlb
loope
cltd
clc
call
jmp
inc
add
sti
mov
push
and
mov
mov
in
fidivrl
subl
xchg
adcl
hlt
fildll
cld
outsl
lcall
arpl
stos
ss
ja
sub
push
test
rcll
cmpsl
sub
mov
jne
jmp
scas
mov
js
xchg
ss
and
xor
imul
aad
lods
into
ret
out
mov
fucomip
out
sbb
pushf
mov
adc
test
fs
loopne
sbb
aaa
jge
in
pop
and
popf
stos
mov
sub
ja
mov
outsb
fisubrl
mov
cmp
adc
popa
imul
je
sub
inc
mov
mov
hlt
rcl
mov
pop
pop
aam
push
enter
mov
into
mov
orb
leave
fsubs
adc
shlb
icebp
faddl
and
inc
out
mov
or
mov
mov
jmp
insl
data16
pushl
inc
in
adc
mov
cmpsl
xchg
adc
xchg
push
cwtl
ljmp
push
dec
add
jne
loope
inc
sub
sbb
xor
mov
jge
movsl
add
leave
mov
or
and
ret
lret
and
dec
loopne
mov
cmp
imul
in
mov
stc
leave
insb
ret
mov
and
loopew
xchg
in
inc
or
mov
push
sbb
fwait
es
mov
add
pop
cmc
test
pusha
addr16
sbb
sub
in
inc
mov
mov
ss
xchg
cld
aas
jmp
mov
rcr
push
loopne
movaps
xor
notb
inc
sbb
xlat
ds
pop
push
jmp
jmp
loope
nop
add
push
nopl
mov
dec
cmp
addr16
pop
cmpsl
in
lds
sub
ret
mov
inc
sub
fsubrp
jl
mov
cltd
imul
sahf
dec
bound
rorl
fucomp
adc
stos
lods
inc
and
aas
fistpl
xchg
test
dec
popf
into
pop
inc
adc
sbb
sbb
out
jne
or
jg
in
and
in
repnz
notl
roll
mov
movsb
xor
mov
push
push
sub
sub
movsb
push
fimuls
jb
push
adc
movb
mov
test
shll
and
call
xchg
xchg
jg
stos
dec
out
loop
mov
imul
mov
xchg
and
push
mov
mov
sbb
dec
jmp
mov
jp
out
outsl
lcall
inc
das
stos
js
pushf
jle
ja
jmp
aaa
inc
cmc
add
and
addr16
xchg
jnp
repz
or
lds
inc
jbe
out
cmp
or
add
xor
out
daa
mov
xchg
ljmp
push
jb
xor
mov
jp
and
pop
jbe
mov
lcall
and
daa
xchg
clc
and
push
test
rolb
popf
popa
xor
mov
xchg
ret
or
jne
in
cwtl
jl
jne
mov
sub
insb
mov
ja
mov
bound
mov
test
add
adc
push
fsubs
or
sbb
mov
xchg
add
test
push
std
mov
les
pop
scas
test
mov
stos
inc
mov
imulb
fbstp
push
add
add
cmpsl
push
jge
andb
push
data16
jbe
dec
and
arpl
hlt
rolb
lods
lahf
std
lcall
adc
adc
shrb
arpl
inc
loopne
cltd
xchg
fwait
stos
ds
int
cmc
aas
and
dec
roll
lcall
mov
xlat
adc
xor
jo
sub
adcb
loope
outsl
insb
jmp
cmp
popa
lahf
pop
int3
xor
rcll
xchg
out
push
pop
jae
idivb
xchg
cmc
mov
xor
fwait
cmp
jg
cmp
push
xor
sbb
mov
mov
ret
lds
fs
push
xchg
in
or
xchg
fnstcw
mov
dec
mov
clc
lea
mov
inc
and
xchg
or
mov
sahf
popf
fwait
add
pop
fistpl
fists
lret
mov
pushf
push
cmp
repz
rclb
iret
bound
jo
cmc
popa
mov
and
jmp
lods
jb
pushf
fwait
cmp
movb
daa
in
shlb
out
imulb
mov
add
push
sbb
movsl
clc
clc
push
mov
arpl
adc
add
push
and
test
rcr
in
xchg
sbb
test
inc
lods
mov
jle
pop
ljmp
jl
inc
testb
mov
add
in
dec
push
int3
in
dec
repnz
xchg
pop
xor
xchg
add
iret
mov
add
or
icebp
add
xlat
test
lock
inc
clc
lds
and
std
xchg
shll
mull
test
add
and
adcl
cwtl
jb
ret
inc
push
lock
popa
push
sbb
pop
rcrb
inc
popa
xchg
or
mov
in
dec
xorb
out
lret
stos
jo
add
fidivs
int
adc
and
xchg
daa
data16
xchg
xchg
test
ja
push
xor
push
push
xor
pop
clc
ds
out
jl
mov
pop
cmp
sub
mov
cmp
pop
hlt
ja
push
loopne
xchg
fs
into
mov
xorb
jne
stos
int3
jnp
mov
enter
into
ss
cmp
pop
nop
mov
and
pop
aad
sub
imul
pop
sub
mov
iret
mov
push
les
cmp
lea
jg
ret
ret
fmull
adc
jl
ja
lret
cwtl
cltd
outsl
mov
xlat
nop
daa
mov
imul
xor
sti
addr16
xlat
cmp
push
jae
in
daa
mov
ja
ret
jno
mov
mov
movsb
lods
sarl
xchg
and
push
adc
push
cld
jnp
jmp
iret
fwait
sbb
in
and
rcll
movsl
jg
cltd
sub
mov
mov
pop
mov
or
addl
dec
fstpt
addr16
cwtl
inc
inc
push
xchg
xorl
xor
int
int
in
dec
pop
xchg
in
mov
sbb
xchg
lcall
sub
xchg
sahf
movsl
leave
cli
push
int
xor
fistpl
xchg
mov
add
pop
imul
jl
sbb
mov
mov
or
mov
sbb
dec
mov
loope
cmp
xor
pop
ss
jbe
dec
sbb
sbb
xor
jmp
mov
add
dec
arpl
dec
dec
in
into
push
cmc
addr16
jp
sti
sub
lcall
or
sar
push
stc
sub
push
dec
std
jb
outsl
cmp
inc
mov
shll
adc
xor
inc
mov
aas
divb
rcl
inc
adc
adc
push
into
data16
fisubrl
sar
xorb
dec
addr16
lahf
and
add
pushf
sti
pop
lock
adc
out
data16
mov
mov
mov
xchg
dec
cmp
clc
pop
popa
push
mov
cmpsl
es
sub
cs
mov
add
icebp
xlat
jmp
xlat
ljmp
mov
mov
pusha
and
add
subb
push
nop
movsl
jno
das
sub
jbe
push
or
lcall
je
cmp
aaa
scas
pop
call
out
xchg
aad
loope
mov
ss
shr
loop
rolb
in
cwtl
pop
cli
push
out
rclb
pusha
sarl
sti
jae
enter
xchg
inc
mov
sub
jecxz
es
aam
xchg
jne
lea
push
popa
mov
push
sahf
loope
loopne
insl
sbbb
xor
test
movsb
test
ja
gs
stc
repz
push
xchg
out
sbb
lret
cwtl
sar
adc
xchg
or
stc
push
rorb
push
cmp
xor
rcl
adc
mov
into
loopne
mov
loop
pushf
aas
lea
cltd
jno
mov
test
fwait
lods
addl
daa
scas
jb
jae
mov
xchg
add
mov
pop
fisubrl
loope
dec
xlat
adc
std
pop
inc
jno
enter
cmpsb
stos
stos
or
incl
mov
dec
mov
mov
xor
pop
mov
or
mov
rcrl
test
cwtl
mov
mov
pop
jno
popa
cmp
sub
sbb
or
clc
shr
rcr
enter
test
cwtl
mov
mov
pop
jno
popa
cmp
sub
sbb
or
clc
rcr
sarl
test
cwtl
mov
mov
test
dec
popa
cmp
cmp
sbb
loopne
in
shll
mov
mov
mov
bnd
push
dec
cltd
mov
cwtl
lds
pushf
mov
cmpsl
rcr
call
jne
sub
js
push
cmc
mov
test
mov
movsl
call
jne
sub
cmp
mov
mov
test
mov
movsl
call
add
sbb
dec
push
cmc
xlat
mov
lcall
in
popf
xchg
jg
bound
fnsave
stos
cmp
cmp
or
sbb
pop
test
dec
decb
jmp
cmp
movsb
arpl
je
sub
scas
lcall
push
sbb
cli
add
in
mull
loopne
adc
mov
aad
loop
ss
test
fnstcw
in
ja
pop
movsl
ret
enter
lcall
xchg
ja
cmp
movsl
fisttpll
imul
clc
out
call
lret
in
push
cmp
push
mov
lea
or
dec
push
repnz
daa
imul
mov
test
mov
movsl
call
jne
sub
js
add
shll
enter
mov
push
push
and
cmp
jp
sub
mov
into
lods
lock
loopne
daa
pusha
and
pop
gs
loop
pusha
and
cmp
rolb
enter
call
jne
sub
js
push
cmc
mov
test
mov
movsl
call
jne
sub
js
push
push
adc
je
xchg
cs
xchg
push
dec
mov
xor
or
xchg
lods
xlat
lahf
pop
cli
bnd
mov
negb
and
add
ds
sub
xchg
push
arpl
in
dec
pop
fwait
inc
mov
and
lods
lods
repz
sub
dec
pop
and
shrl
fs
out
pop
movsl
xchg
ficompl
pop
imul
or
jno
sub
inc
sub
cmc
adc
mov
stc
cltd
and
mov
test
mov
scas
mov
mov
ljmp
addr16
push
push
push
push
sbb
sahf
mov
or
sahf
cmp
aaa
fwait
push
add
insl
and
dec
pop
ror
sti
mov
insl
jmp
jb
jg
je
cmp
cmc
adc
pop
fwait
inc
adc
sbb
cmp
sbb
mov
outsb
nop
mov
mov
leave
shrb
jne
dec
in
in
mov
xor
xchg
lahf
pop
xchg
push
jno
ficoml
xor
roll
outsb
xchg
sbb
xchg
mov
roll
and
mov
clc
into
xlat
imull
in
hlt
fwait
adc
xor
sbb
inc
cmp
out
cwtl
nop
popa
mov
xchg
push
in
and
xchg
insb
or
cmp
sbb
sbb
addr16
inc
lea
fmull
dec
jae
or
xchg
fdivrp
imul
adc
test
adc
dec
push
loopne
dec
dec
insb
mov
mov
cmpsb
and
inc
shll
aas
out
dec
sub
push
adc
ds
add
xchg
mov
push
cmp
jmp
xor
adc
sbb
mov
fildl
xchg
add
test
dec
mov
or
xor
push
test
pop
jns
cmp
mov
fcomip
cltd
sbb
lds
mov
add
cmpsl
jne
lods
movsb
cli
hlt
movsl
popa
ds
ja
movsb
pushf
js
pop
mov
sub
cwtl
in
ljmp
mov
jae
ds
jmp
add
mov
in
jecxz
pop
leave
xchg
dec
jo
pop
decb
xorl
mov
sub
scas
fisttpl
and
inc
iret
out
roll
imul
out
adc
or
pop
insb
adc
nop
lcall
cmc
dec
push
pop
mov
push
mov
add
das
test
pop
pop
or
xchg
repnz
imul
xchg
lret
dec
xchg
int3
hlt
out
mov
lret
pop
push
sub
popa
aad
cwtl
fcmovu
xchg
mov
sub
shll
andb
out
imul
ds
adc
mov
and
adc
xor
pop
iret
jo
iret
hlt
mov
lahf
mov
fsubr
add
in
adc
dec
mov
je
or
test
jbe
pusha
mov
icebp
pop
outsb
popa
xchg
adc
jmp
std
xchg
pop
ret
cmp
or
or
and
mov
aad
xchg
pusha
mov
lods
gs
jnp
xor
push
cli
int3
push
in
pop
add
call
push
cmp
pusha
adc
pop
push
jl
movsb
aam
es
and
mov
ljmp
sub
aad
stos
push
pop
std
das
cli
adc
sub
aad
or
cmp
mov
mov
add
loop
out
xchg
sbb
xor
mov
dec
aaa
fsubrp
inc
outsb
xor
mov
pop
xchg
xorl
scas
int3
mov
pop
mov
push
mov
out
inc
inc
pop
xchg
or
ret
not
test
ljmp
add
sti
jno
dec
push
xor
push
iret
out
jp
mov
add
inc
out
repz
int
mov
ljmp
pop
mov
mov
cmp
mov
or
lds
out
fimuls
shlb
mov
pop
add
add
push
sub
jno
xchg
mov
movsb
imulb
bound
cwtl
cltd
aas
cmp
cld
cli
pop
lret
lea
push
xchg
jo
add
sub
dec
sbb
mov
leave
sahf
adc
cs
jle
lret
test
jns
loop
add
push
add
add
mov
and
test
mov
stos
push
movsl
negl
enter
pop
sti
push
aas
xor
outsl
mov
mov
cmpsb
sbb
mov
jle
aaa
gs
inc
sbb
out
mov
mov
bound
aad
imul
mov
sub
ds
dec
or
sbb
inc
enter
scas
in
ja
daa
cwtl
bswap
sbb
decl
mov
xchg
jge
aam
test
rol
pop
dec
xor
push
add
jo
cld
pop
insl
in
ficompl
mov
outsl
popa
dec
and
es
jmp
jae
mov
cmp
cmpsl
and
xchg
movsb
cmc
rcll
scas
sub
mov
inc
xor
mov
cli
jle
push
adc
icebp
jns
push
sbb
or
mov
insb
push
lds
in
lret
jae
js
sbb
dec
out
in
imul
out
hlt
mov
stc
outsw
ret
adc
lock
xor
pop
insl
stc
mov
ret
push
jl
inc
clc
int3
mov
mov
data16
pop
aaa
cli
arpl
hlt
mov
push
cmp
mov
lea
sbbb
inc
xchg
pop
rcl
sbb
sbb
cs
or
addl
xor
xchg
xchg
mov
insb
jno
ljmp
adc
decb
jp
mov
jmp
fnstenv
rorb
jns
push
mov
js
sub
xor
cmp
xor
ss
popa
inc
aam
rcrl
fstpl
mov
lcall
pmaddwd
jge
lds
adc
mov
sbb
leave
inc
data16
mov
test
jl
xchg
mov
push
in
fdivl
jge
mov
cs
jnp
inc
hlt
in
idivb
pop
xor
clc
pop
test
loope
jno
and
cmc
notl
int3
add
mov
pop
fcompl
push
add
pusha
pop
fistpl
mov
fs
scas
xchg
pop
cmp
cltd
push
stc
sbb
push
arpl
leave
pop
fsubs
shll
icebp
pop
adc
jns
dec
inc
ret
inc
mov
jg
in
dec
int
lods
int
add
fwait
test
stc
pop
fldt
fisubl
pop
int
xchg
ret
fnstenv
add
scas
pop
push
mov
scas
aad
jae
lret
xor
pop
mov
test
lcall
stc
or
or
fildll
cmp
pop
cmp
inc
ja
and
sub
xor
dec
mov
xchg
adc
jns
lcall
mov
mov
aad
shll
sti
sbb
cld
lcall
mov
and
shll
push
shll
cs
push
jo
lds
out
mov
and
in
mov
nop
outsb
jno
pop
mov
addr16
and
adc
cld
cmp
jecxz
mov
cli
inc
mov
xchg
loop,pn
push
mov
sbbl
insb
mov
in
sbb
xor
adc
cmp
push
mov
sub
jle
jle
loopne
jnp
dec
das
aad
pop
dec
ss
fistps
push
mov
cltd
jno
imul
imul
gs
aam
fwait
cld
cld
mov
push
cwtl
sbb
gs
aas
stos
jecxz
fcoms
repz
push
sahf
lods
xchg
mov
aaa
add
cmpsl
inc
pop
adc
hlt
movsb
jp
mov
mov
push
jae
pop
dec
pop
lret
xor
pop
in
in
andl
dec
cs
xchg
push
inc
dec
in
std
sbbb
push
enter
jbe
mov
imulb
pop
and
push
fwait
xor
push
pop
std
hlt
mov
and
add
pop
jge
jne
pop
cwtl
mov
aad
mov
divb
insl
mov
mov
popf
hlt
mov
xchg
jbe
outsb
test
cmpsb
jbe
divl
lret
leave
je
pop
stc
and
stc
int3
fsubrl
or
js
jns
or
push
xor
inc
push
pop
mov
mov
push
xlat
pop
scas
out
mov
adc
xlat
sbb
mov
pusha
call
shll
repz
stc
sub
push
adc
jne
cmc
xchg
sbb
nop
ret
outsl
cs
fcoms
push
push
mov
push
movsbl
inc
shrl
jnp
aaa
lock
sbb
les
in
add
nop
pop
add
nop
das
lahf
sahf
mov
test
cwtl
fs
aaa
hlt
push
nop
ljmp
push
inc
inc
jg
arpl
out
sub
jbe
mov
test
or
push
xchg
adc
imul
rorl
jmp
ja
dec
xor
lret
and
mov
outsb
and
push
outsl
outsb
xchg
pop
jl
add
mov
mov
stc
insb
xchg
jecxz
mov
jns
mov
dec
das
mov
imull
call
push
cmp
test
ds
jnp
shrl
rolb
pop
call
or
sub
push
int3
mov
mov
movl
xchg
rcl
ds
mov
xchg
mov
icebp
dec
xor
call
adc
bound
sbb
test
pop
sti
adc
dec
xor
and
mov
lds
xor
pop
pusha
add
stc
push
aam
xor
pop
push
pop
inc
xchg
sub
add
paddb
push
jmp
sub
scas
mov
std
push
dec
sbb
lahf
bound
lret
call
ds
sbb
pop
call
dec
sbb
loopne
std
adc
or
fxch
fwait
sbb
shlb
mov
cs
inc
pop
cmp
push
and
inc
aad
pop
jp
data16
jp
jns
dec
xchg
add
mov
inc
nop
adc
dec
pop
scas
es
xchg
outsl
jb
and
xchg
dec
jge
es
jmp
pop
add
and
adc
jle
xor
popf
cmpsb
sbb
jmp
loope
push
shll
jb
xor
leave
adc
jmp
jge
lret
mov
inc
push
fsubs
xlat
sub
mov
mov
shlb
or
sti
mov
sub
insb
add
mov
xor
jno
sbbl
sahf
push
sbb
jo
xor
ja
nop
arpl
adc
cmp
or
push
and
push
dec
testb
cmp
adc
aam
leave
sub
testl
lods
testb
mov
and
pop
mov
or
sbb
jo
js
add
xorl
out
mov
or
fdivl
inc
xchg
nop
push
cmp
cmp
fidivs
arpl
es
or
lret
movsl
aad
add
enter
push
inc
mov
in
loope
ja
inc
dec
sub
fbstp
lret
into
pop
adc
dec
jg
xor
push
int3
jae
push
push
inc
sub
js
into
repz
mov
mov
cmp
add
sub
push
dec
jb
std
lods
rcll
ljmp
daa
add
and
call
sub
mov
sub
jp
hlt
and
and
adc
jecxz
adc
mov
ljmp
imul
sbb
out
and
sub
push
ret
xlat
fidivl
jg
insb
int3
insl
dec
fdivr
pop
movsl
std
imul
xor
imul
call
jecxz
fadd
mov
lcall
aad
call
inc
nop
shlb
add
and
mov
ds
and
adc
lods
shr
int3
sbb
xchg
lods
xchg
rclb
mov
add
outsl
add
loop
inc
cmp
push
insl
mov
cmc
inc
mov
and
in
add
mov
enter
xor
sbb
inc
and
adc
cmpsl
loop
adc
cmp
enter
or
pop
imul
roll
test
xor
pop
cmp
lock
sti
out
push
std
arpl
es
jb
sbbl
and
jns
inc
add
arpl
repz
dec
sahf
sbb
scas
sub
sub
pusha
shrb
stos
je
push
adc
roll
or
xor
push
adc
enter
dec
stc
sbb
adc
cmp
std
scas
mov
in
int
imul
outsb
lods
push
fcmovnu
inc
fsubp
sub
xchg
pusha
and
fdivrl
fstps
cltd
mov
scas
jecxz
cmp
add
iret
dec
and
sub
outsl
jp
jmp
stos
outsl
or
shr
fdiv
inc
jmp
push
pop
in
or
mov
or
mov
mov
or
imul
lahf
jg,pn
pop
pop
xlat
mov
lret
aaa
jo,pt
rcrb
lret
mov
inc
addb
rorb
sub
addb
nop
xchg
test
test
xchg
popf
pop
adc
xor
or
loop
jae
mov
test
xchg
jl
and
sbb
mov
iret
mov
jae
out
add
lods
mov
insb
push
je
loop
or
subb
dec
xchg
add
mov
jge
mov
popf
adc
adc
jle
repnz
sti
in
out
subb
mov
jg
je
cmp
push
cmpsb
hlt
fs
or
pop
in
sbb
testl
shl
cmp
scas
test
cmp
inc
fldl2t
mov
xchg
test
xchg
inc
pop
daa
sub
leave
mov
dec
cmpsl
fmul
mov
add
xchg
into
inc
cmp
cmc
push
push
mov
mov
mov
vmovss
add
push
sub
mov
mov
dec
push
and
negb
mov
mov
lock
imul
adc
loop
mov
inc
mov
cmp
add
dec
icebp
xchg
test
sbb
ffree
pop
negl
adc
cs
les
dec
mov
push
add
inc
in
outsl
arpl
mov
stc
dec
and
out
pop
xor
stc
adc
ss
or
mov
out
xchg
mov
icebp
test
scas
and
pop
sbb
lds
out
test
adc
popa
out
movsb
out
dec
add
stc
pusha
out
cmp
cmpsl
mov
js
mov
pop
inc
out
cmp
xchg
push
push
or
mov
movsb
in
xchg
mov
mov
loopne
mov
repz
mov
mov
insl
adc
add
push
scas
cld
mov
dec
addl
outsl
pop
fwait
adc
and
cmc
out
xchg
lds
test
inc
jns
fs
cltd
adc
mov
fs
out
and
repnz
les
add
cmc
pusha
popf
sbb
or
enter
cld
dec
mov
sti
jmp
icebp
into
clc
or
adcl
je
add
sahf
call
and
xor
aad
movsb
or
xchg
sub
aaa
push
jae
jae
into
jo
aam
shlb
fidivrs
mov
ds
sbb
jae
cld
mov
lahf
int
push
sbb
xor
add
out
jge
fnsave
aad
outsb
adc
ret
mov
in
lea
xorb
out
mov
mov
mov
hlt
xlat
and
jecxz
cmc
lds
leave
mov
xchg
ds
in
inc
inc
adc
sarl
jl
mov
dec
cmp
jne
int3
add
orl
insl
sbb
mov
adc
inc
out
outsb
pop
ja
mov
push
mov
inc
ret
lods
js
adc
imul
or
sbb
ds
aaa
pushw
mov
pop
pop
adc
sub
leave
or
dec
or
mov
sub
dec
xchg
inc
cmp
push
and
xchg
insl
jmp
stos
sti
and
mov
cmc
xchg
xchg
or
imul
and
dec
fisttpll
mov
push
cltd
push
outsb
or
or
jl
std
mov
pop
xchg
stc
mov
lock
fdecstp
cli
sub
ror
fs
pop
adc
add
or
repnz
rcll
push
adc
sbb
addr16
mov
icebp
inc
fildll
fildll
dec
das
cmp
ret
xchg
jmp
cmp
mov
pop
dec
out
push
shll
dec
adc
pop
mov
ljmp
jb
sbb
in
jno
jp
arpl
out
dec
and
sbb
mull
cmp
push
mov
test
cmpl
int3
ja
ss
shll
ret
test
sub
and
sarl
xchg
fsubrl
test
loope
push
xchg
sub
ret
xchg
lret
push
ret
scas
outsl
or
in
sbb
loopne
ret
aad
jg
rorl
adc
sbb
inc
ljmp
test
pop
sbb
xor
xchg
mov
in
adc
cmp
sahf
add
fdivrs
dec
mov
dec
insb
and
cli
bound
dec
push
cwtl
xor
or
push
jmp
orb
cwtl
and
push
and
push
inc
add
xchg
mov
aas
dec
repz
cltd
pop
lret
pusha
in
data16
call
imul
inc
dec
outsb
sbb
mov
and
add
mov
rclb
ss
ja
cmp
pop
test
adc
test
sti
daa
loop
adc
add
jmp
loope
inc
pop
adc
cld
dec
inc
lret
dec
pusha
fisubrl
xor
sbb
cmp
push
sbb
or
sbb
dec
imul
or
and
mov
rcr
inc
lret
xor
add
inc
icebp
or
and
jo
imul
pushf
fstp
dec
popf
inc
sbb
inc
xchg
push
mov
lods
popa
add
leave
outsl
rol
mov
lret
lahf
outsb
adc
lds
adc
push
subb
leave
enter
mov
mov
lahf
jae
xchg
adc
xor
pusha
imul
call
and
xchg
mov
add
mov
mov
test
xchg
xor
lea
jne
inc
xchg
ds
sub
sub
mov
xor
shll
aas
scas
inc
adc
jl
dec
and
xor
popl
div
jecxz
insb
xor
jbe
ja
cmpl
aad
and
lods
dec
inc
test
push
je
popa
rcrl
inc
mov
jecxz
incb
pusha
lcall
jo
inc
cltd
xlat
lahf
std
in
outsb
pop
jp
add
push
int3
add
inc
add
repz
dec
xchg
jb
jae
adc
lahf
js
xor
jge
mov
cld
jg
mov
mov
or
cwtl
arpl
mov
sbb
jecxz
scas
pop
push
lods
pop
ljmp
inc
pop
testl
cmp
fwait
int3
nop
ds
fbstp
pop
loope
mov
lods
imul
lahf
imul
push
and
cmp
pop
push
fcmove
pop
xchg
or
mov
repz
out
ss
push
push
push
xchg
cmpb
test
clc
into
ret
movsb
pop
add
inc
pop
sub
jg
scas
inc
mov
xor
fstpt
aad
mov
cmp
dec
js
movsl
es
mov
scas
scas
jmp
loop
mov
and
pop
mov
add
enter
pushf
xchg
adc
mov
mov
pop
mov
lds
arpl
das
js
ret
inc
mov
repnz
adc
lds
push
add
lds
pushf
loope
push
fdivs
dec
mov
or
sub
cmp
js
inc
jp
mov
pop
xchg
in
add
add
gs
add
sub
xadd
fisubrl
hlt
jb
sarl
popa
xchg
pop
xorb
pop
xor
in
push
std
pop
mov
test
sbb
out
ljmp
cld
ds
sub
mov
jp
in
int
lea
popa
jmp
lret
and
popa
push
adc
fs
mov
mov
xchg
pop
out
mov
sub
fwait
mov
ds
dec
mov
mov
test
mov
movsl
call
jne
sub
js
push
cmc
mov
test
mov
movsl
call
jne
sub
js
push
cmc
cmp
test
fadds
push
cwtl
inc
or
sub
js
push
cmc
mov
test
xor
sbb
pop
rorb
xchg
out
mov
pop
into
insl
fidivrs
sub
jae
bound
dec
std
pop
ljmp
lea
popf
push
mov
pop
into
insl
fidivrs
or
sahf
cmp
dec
int
std
out
out
ds
push
lods
push
mov
into
jne
fs
adc
add
outsb
cs
out
cwtl
pop
std
cs
push
repz
jo
mov
lcall
loop
les
inc
mov
jmp
jnp
pop
push
sbb
cmpsb
adc
xchg
in
adcl
arpl
mov
mov
enter
lock
xor
sbb
outsb
dec
sub
jle
inc
popf
imul
out
sbb
fimuls
sub
sahf
ret
sti
and
fidivrs
lea
sub
adc
mov
imull
fstpt
inc
sub
lret
test
std
jge
rcll
lods
pop
inc
adc
mov
insb
aaa
dec
cld
add
sahf
mov
int3
mov
mov
jbe
jle
mov
dec
push
sahf
lods
and
dec
into
jge
scas
or
sahf
and
aad
lds
pop
in
xchg
mov
lods
push
fldcw
insb
mov
scas
pop
int3
jae
inc
pushf
push
outsb
movsb
sbb
das
loopne
into
insl
lods
pop
rorb
sbb
sti
das
testb
or
mov
imul
or
cmp
popa
mov
cmp
dec
in
pop
std
lea
popf
push
lods
push
mov
into
insl
fidivrs
or
sahf
cmp
dec
in
pop
std
lea
popf
push
lods
push
mov
push
dec
icebp
outsb
push
xor
sbb
mov
addr16
stos
testl
xor
popf
mov
mov
jle
ja
stc
aad
imul
push
jle
lods
jp
filds
fiaddl
mov
cmp
adcl
mov
xor
imul
pop
inc
jo
and
data16
mov
lods
sbb
or
lds
jmp
sbb
bound
test
ffree
dec
push
imul
fisttpll
fsubrs
test
jno
popa
push
daa
cmp
dec
xchg
loop
daa
push
jae
fucom
int3
popa
mov
jne
hlt
gs
add
fimuls
lock
or
xor
call
idiv
mov
dec
shrl
push
ljmp
test
sahf
adc
sbb
popf
out
cmpsb
and
imul
jge
xchg
lahf
adc
negl
mov
add
cmp
nop
mov
fcoml
push
dec
jecxz
shlb
sub
imull
mov
movb
jo
lret
cmc
xor
inc
rorb
mov
mov
mov
adc
loop
sbb
pop
sbb
jmp
hlt
push
subb
push
and
add
mov
test
xchg
inc
jge
pusha
test
stos
nop
push
sarb
xchg
sbb
mov
adc
rclb
jae
roll
das
xchg
in
push
andb
imul
xor
je
fwait
sbb
push
arpl
or
fwait
outsl
repz
outsb
jmp
repz
mov
negb
jmp
sbb
aad
leave
jb
rorl
inc
pusha
lock
dec
in
rcll
and
sahf
push
loop
pop
jg
ret
mov
sub
sbb
sbb
push
insl
push
xchg
jns
pop
dec
hlt
stos
jge
dec
lock
imul
xor
clc
push
iret
push
arpl
adc
stc
out
negl
mov
je
dec
into
aad
shrl
and
push
adc
cmp
rol
sbb
sub
imul
sbb
scas
out
mov
jb
addr16
aad
stos
jnp
movb
dec
aaa
and
lcall
adc
lret
movsl
and
or
mov
pop
xor
jmp
push
push
inc
sti
in
sbb
scas
out
cld
xor
cmp
fdivl
insl
testb
mov
adc
xlat
call
test
add
scas
gs
add
pop
add
xchg
sbb
jo
and
cmp
jns
mov
jecxz
mov
fs
pop
push
and
cmc
sbb
cmpsl
push
or
out
mov
pusha
jmp
xchg
lds
push
mov
scas
outsl
popa
std
cmp
pusha
jns
mov
sbb
push
aam
cmp
sub
sub
leave
test
sti
adc
and
test
repnz
icebp
push
clc
cli
adc
mov
cli
and
js
movsl
test
push
stos
dec
cs
adcb
dec
cmp
bound
and
xchg
xchg
pusha
popa
jne
or
dec
add
mov
mov
into
popa
ret
dec
inc
ss
inc
mov
jae
pop
das
rcll
int3
repnz
in
sbb
scas
add
xchg
dec
push
aad
addr16
outsb
or
pop
adc
or
dec
cmpsl
sub
into
and
ficompl
mov
mov
mov
mov
je
sbb
bound
sbb
pop
or
sbb
push
lret
cmc
mov
pop
push
push
test
mov
addr16
ljmp
xchg
loopne
fiadds
add
lods
mov
testb
dec
call
fmulp
mov
lret
pop
insl
sub
orb
pop
xchg
mov
es
js
and
jae
mov
pop
push
popa
or
das
mov
loop
mov
cltd
faddl
in
das
push
in
mov
mov
sbb
nop
mov
push
xchg
fwait
jle
mov
mov
ljmp
pusha
sbb
sti
or
imul
xlat
add
outsb
xor
stos
or
test
mov
jnp
lret
mov
pop
push
dec
mul
inc
jle
test
mov
xchg
aas
int
ja
and
sub
sbb
push
les
sub
adc
xor
dec
lods
inc
mov
fs
add
push
cmpl
loope
sbb
xchg
ds
sub
push
mov
mov
lcall
pop
scas
cmpsl
sub
and
in
pop
daa
jp
mov
inc
test
iret
aas
imul
movsb
cltd
roll
mov
sbb
adc
dec
push
scas
cmp
push
jecxz
inc
stc
jmp
sahf
dec
mov
xor
cmp
cmpb
in
mov
aaa
adc
lock
arpl
pop
popl
push
mov
add
cmp
mov
lods
pop
push
out
push
mov
stos
jb
cmp
xchg
bound
push
xor
add
loop
insb
stos
shlb
sbb
loop
test
loope
insb
and
sbb
cmp
cmp
int
dec
int
test
into
lods
mov
mov
fnstsw
mov
in
enter
aaa
cmp
mov
xchg
shlb
call
pop
scas
pop
sub
nop
flds
pop
or
mov
cmp
ljmp
cmc
jp
cli
iret
or
inc
push
xchg
push
pop
xchg
outsb
outsl
test
jl
cli
clc
data16
lods
dec
xor
dec
pushf
add
or
mov
sbb
ret
and
sbb
in
out
nop
push
cmpsl
jecxz
fistpl
sbb
fists
push
bound
mov
fistpll
push
aas
add
stc
imul
add
gs
add
cmp
xchg
rorb
xor
mov
jns
out
xor
pop
test
dec
movsb
sti
jne
adc
cmpsl
stos
push
mov
dec
and
fdivs
sti
or
jae
inc
imul
adc
push
and
cmp
std
cmp
jmp
and
mov
pop
movlps
sub
or
out
in
xor
and
mov
in
or
lret
push
cltd
in
pop
aas
mov
pop
idivb
idivb
mov
cmp
inc
popa
outsb
mov
jbe
lods
add
pop
popf
movsb
ret
fwait
or
out
shlb
and
adc
imul
jge
xor
lahf
gs
add
stos
mov
jge
in
inc
or
mov
xchg
pop
mov
jno
cmp
pop
out
cld
or
lret
jno
cmpb
ljmp
mov
dec
jb
add
sbb
pop
js
add
cmp
into
ss
mov
lds
out
or
jmp
clc
sti
pop
cmp
popf
mov
aad
lds
lret
popf
pop
bound
inc
insl
or
jnp
xor
push
sysexit
mov
fisttpl
dec
call
js
leave
js
xchg
and
push
inc
xchg
fcmovnb
fbstp
cmpl
sub
push
nop
inc
fisttpl
cmpl
movb
mov
push
outsb
cwtl
or
aaa
inc
mov
stos
shll
int3
popf
xor
push
subb
mov
ds
sbb
push
add
xchg
lcall
and
xchg
ss
mov
mov
jnp
bound
dec
mov
adc
mov
std
sahf
out
add
rclb
js
push
xchg
ja
fcomps
adc
dec
dec
add
test
lock
pop
in
or
xchg
fcmovne
outsb
sbb
cltd
sub
mov
inc
xchg
lods
shll
fstps
shll
pop
data16
in
add
rcrb
push
fucomp
mov
aas
dec
push
ret
mov
sidtl
in
xchg
sub
add
jecxz
outsl
sub
mov
pop
sbb
pop
andb
cmp
jae
mov
inc
jmp
ret
xor
adc
lds
mov
mov
push
dec
fildll
stos
adc
ret
cmp
xor
mov
cwtl
hlt
fistpll
jne
pop
popa
daa
test
pop
stos
mov
pop
loopne
je
lds
jp
pop
dec
mov
fisubrl
out
test
inc
fadds
or
aad
les
mov
les
mov
cld
inc
add
and
push
jp
jne
push
cmp
jle
inc
xor
sub
mov
hlt
mov
stos
cmp
or
into
ficomps
fildll
push
mov
imul
sub
push
push
add
or
xlat
and
jbe
fisubrl
fsubrs
sti
insl
loope
loope
leave
loop
pop
movl
nop
push
leave
dec
in
mov
jge
dec
push
mov
dec
ljmp
loope
loope
xor
shr
dec
ret
push
dec
mov
xor
lods
jl
mull
icebp
mov
xor
pop
lods
sbb
cltd
mov
mov
dec
in
loope
xor
lods
add
data16
mov
call
push
lret
outsl
push
je
lahf
fnstenv
inc
adc
loop
sti
jb
push
mov
pop
addr16
sahf
push
test
mov
cmp
fldt
dec
mov
and
jbe
adc
mov
dec
stos
stos
xor
mov
loope
xor
push
mov
xlat
movsb
ss
lahf
push
imul
aas
xor
test
or
shlb
push
pop
ret
sti
cmp
jp
aad
jno
xchg
adc
jge
or
or
inc
adc
aad
lahf
out
dec
stos
sub
jp
sbb
cmpsl
jns
lods
aad
sti
fs
orb
aam
mov
add
imul
push
rorb
hlt
ret
xchg
repz
jle
jo
in
fmulp
ret
sub
mov
cmc
pop
movsl
sar
push
repz
mov
lock
mov
or
stc
xchg
jp
loopne
shll
sti
lds
shll
fidivl
cwtl
inc
add
mov
jge
xchg
outsl
repnz
sub
sub
or
and
mov
imul
xor
jno
js
subl
fst
jmp
sbb
enter
sub
insb
hlt
mov
out
mov
lock
fidivrs
fstpl
test
push
jp
mov
lds
je
inc
push
loope
jmp
test
lods
fdivrp
shlb
xchg
pop
leave
sub
das
mov
popa
addr16
insb
add
sbb
or
jecxz
cmp
mov
arpl
xor
sbb
xchg
sbb
pop
mov
jge
cmp
sbb
pop
test
dec
dec
negb
dec
jns
mov
sbbl
stos
stc
mov
aas
in
repnz
push
je
mov
lods
xchg
test
jbe
sbb
pusha
adc
xorl
movsl
cld
mov
or
push
js
inc
or
cld
ja
jae
jo
icebp
add
jp
cmpsb
jle
xchg
push
test
subl
fildll
arpl
or
or
push
jp
scas
push
addb
or
sti
sub
popf
pop
mov
push
pusha
push
jg
push
jle
jns
xchg
stos
pop
push
xor
mov
jmp
and
in
or
mov
dec
ss
in
sub
std
stos
cltd
out
mov
adc
std
mov
inc
test
cli
test
ror
in
dec
push
inc
cmp
push
mov
imul
repnz
mov
loopne
sub
jb
stos
cltd
fldcw
loope
xchg
adc
in
call
cmp
or
lret
into
lcall
mov
adc
or
rorb
inc
inc
mov
test
jmp
pop
mov
xor
mov
shrb
sbb
aam
sbb
addb
inc
dec
jno
add
and
pop
jnp
sub
stos
xor
mull
cmp
aaa
nop
test
cmp
sarl
jne
adc
lret
jle
les
add
fisttps
push
or
mov
int
adcb
xor
cmpsl
int3
aad
lods
sbb
sbb
or
movsl
mov
mov
or
bound
inc
imul
in
mov
stc
add
outsl
in
std
add
fists
stc
push
mov
inc
cltd
sahf
shrb
jbe
jae
and
mov
jp
xchg
pop
icebp
test
cltd
pop
pop
popa
push
dec
jg
dec
push
jnp
mov
lret
add
out
roll
adcl
loope
push
cmp
sbb
mov
or
mov
cmp
or
mov
stos
or
ret
jno
test
push
imul
popf
sub
sbb
jb
int3
adcl
lods
int
lods
mov
outsb
dec
cmp
xchg
in
pop
insl
add
pusha
lahf
jle
mov
test
inc
sti
popa
mov
and
test
xchg
cmpsl
add
ret
fidivrs
jb
xchg
cmp
mov
jae
push
adc
outsl
and
mov
cmp
das
push
sub
ds
jge
dec
js
push
jp
je
aas
fxch
and
sbb
rcr
test
mov
loope
add
push
adc
add
cmpsb
mov
je
sbb
xor
insl
mov
cmpsb
mov
adc
or
xchg
decl
lret
adc
pop
aad
or
movsb
in
push
cwtl
outsb
in
add
fcomps
xchg
iret
push
scas
jl
shll
mov
dec
inc
test
mov
popa
out
aam
or
xchg
and
aad
fmul
or
jmp
bound
and
push
dec
sbbb
ret
js
xor
jo
in
cmp
push
mov
scas
xchg
xchg
roll
lret
sbbl
ret
movsl
xor
mov
xchg
out
sti
cmp
repnz
sbb
or
mov
xor
adc
sbb
and
pop
add
ljmp
push
mov
adcl
jg
test
outsl
pop
sbb
jecxz
shl
fwait
add
adc
jmp
repnz
fdivl
outsl
and
or
frstor
imul
cld
mov
push
aas
fiadds
mov
test
cmp
inc
or
ffreep
mov
movsl
cs
add
bound
push
ret
jg
sbb
pop
out
lret
mul
shr
mov
sbb
jbe
xor
adc
jnp
sub
loope
jmp
push
sbb
pop
xchg
inc
fldt
cmp
cld
jo
mov
sub
push
fmuls
incb
lcall
lods
gs
jp
and
das
xchg
lret
push
outsl
in
sbb
test
and
and
pop
jo
pop
addr16
loop
lock
arpl
fidivrs
loop
mov
addr16
mov
sbb
cwtl
pop
mov
adc
outsb
sub
rcrb
cs
scas
mov
mov
into
scas
hlt
out
mov
into
repnz
dec
sub
xor
stc
lret
cli
jp
out
sub
dec
mov
clc
mov
add
test
and
jnp
push
xor
cld
inc
icebp
stos
or
cmpb
dec
push
lods
sahf
into
push
or
jne
sbb
xchg
push
jae
cmp
int
xor
movsl
sahf
movsb
jmp
and
outsl
dec
and
stos
test
adc
or
mov
mov
cmp
in
mov
cli
mov
jmp
push
lock
mov
aaa
cmp
xor
clc
and
mov
jbe
and
cltd
push
aad
ljmp
test
jmp
fldpi
lods
movsl
repz
aad
pop
jnp
rorb
shlb
inc
repz
fmul
mov
rolb
into
js
aaa
push
fisttpll
les
stos
push
xor
cmp
enter
push
inc
dec
pop
jns
pop
mov
repnz
pop
jae
add
gs
pop
mov
movsb
cmc
xchg
xchg
or
xor
in
inc
xchg
mov
icebp
fdivs
xchg
inc
or
inc
mov
jge
mov
or
mov
sbb
iret
dec
loope
mov
popf
add
sbb
jecxz
ret
mov
out
ret
mov
sub
in
ss
cmpsb
movsb
push
push
sbb
fcmovnbe
daa
fildll
mov
xchg
or
mov
cmp
xchg
inc
cli
dec
sub
cmp
and
jb
mov
aas
in
mov
jbe
dec
pop
inc
pop
cmp
inc
jo
int3
lods
adc
adc
loop
fwait
xchg
ror
and
mov
pop
ret
sub
ja
fadd
rorl
in
and
cmp
push
in
xchg
test
sti
mov
lea
lock
pushf
jmp
xchg
lods
xchg
ret
pop
loopne
xlat
sub
sbb
sti
mov
repz
dec
mov
jecxz
sub
ret
data16
dec
jp
rcrb
popa
mov
push
out
fimuls
jp
stos
cmp
mov
cmp
lods
xor
pusha
imul
out
xchg
cmc
test
xchg
cmp
out
cmp
inc
fisubrl
mov
dec
inc
sbb
mov
inc
cmpsb
sbb
pop
jne
shll
push
pop
sub
xor
loope
xchg
loopne
and
stos
mov
and
or
clc
lcall
loop
mov
mov
mov
cwtl
mov
inc
xor
jle
cs
cmp
shll
mov
xchg
lods
inc
mov
out
icebp
ds
rolb
sub
push
sub
mov
insb
cmpsb
lea
mov
cmc
push
cld
imul
ret
les
mov
dec
xchg
xchg
inc
cmp
leave
ja
stos
pushf
or
cmp
lea
ja
lds
mov
sub
dec
mov
arpl
loop
lds
ss
fsubl
mov
mov
jp
adc
cmp
cmp
dec
sbb
shlb
icebp
push
lock
push
lcall
pushf
in
mov
out
inc
es
mov
mov
add
fistpl
xchg
and
fisubrs
imul
push
dec
ljmp
adc
notl
or
loop
addl
dec
scas
iret
push
orl
ss
xchg
sub
jno
cmp
cmc
cmp
fcompl
imul
aam
out
clc
shll
or
fstl
adc
sti
pusha
mov
mov
testl
jl
mov
rcrl
int
fmull
xchg
ret
mov
mov
inc
fstpt
cmp
sbb
mov
inc
jno
push
fs
ret
push
adc
xchg
sub
inc
cmp
mov
lret
xchg
nop
mov
test
loopne
adc
pop
push
fsts
cmp
dec
test
add
inc
dec
mov
and
in
aad
inc
cmp
mov
jbe
je
xor
pop
xlat
leave
mov
adc
gs
aad
cmp
enter
rolb
pop
inc
mov
in
test
inc
jne
pop
push
hlt
sbb
test
nop
inc
das
fildl
cmp
mov
push
aam
mov
sti
mov
dec
cmp
mov
fcomps
in
lods
and
push
pop
dec
gs
in
jne
es
scas
daa
sbb
xor
scas
shlb
shrl
scas
stos
stos
test
xchg
sub
fwait
shlb
inc
lahf
push
push
shrl
jmp
pop
popa
jns
int
jecxz
xchg
in
sbb
sbb
int3
in
sbbl
mov
and
cli
dec
sbb
leave
push
clc
scas
ja
add
cli
mov
pop
jno
pop
fucomip
mov
and
inc
lea
js
test
jb
mov
mov
std
popa
xor
mov
mov
ja
add
hlt
inc
dec
mov
fnstsw
jae
ss
push
mov
sub
pop
leave
sub
dec
stos
push
dec
repnz
sub
push
and
xor
push
cmp
cs
ja
stos
call
jmp
dec
movzbl
pop
xchg
dec
and
sti
inc
fmuls
inc
dec
xor
sub
movsb
push
adc
popa
leave
insb
pop
or
cwtl
inc
mov
pop
push
aas
out
into
gs
jne
fdivl
sti
dec
lcall
out
and
pop
pop
out
xor
faddl
movsb
icebp
xchg
or
sbb
xchg
jno
mov
mov
imul
fidivrs
or
sahf
cmp
dec
in
pop
std
lea
popf
push
lods
push
mov
into
insl
fidivrs
or
sahf
cmp
dec
in
pop
std
lea
popf
push
lods
push
mov
dec
insl
fidivrs
or
push
cmp
dec
in
pop
cld
lea
popf
push
lods
push
mov
into
insl
fidivrs
or
sahf
cmp
in
pop
mov
dec
bound
outsb
inc
or
inc
mov
pop
jmp
cltd
pop
sbb
int3
cmp
sub
pop
xchg
dec
xchg
imul
jbe
data16
lret
push
sti
ss
sbb
or
pop
imull
out
repz
xchg
imul
jbe
data16
lret
push
sti
ss
sbb
or
pop
xchg
dec
mov
shlb
ficompl
add
jmp
mov
mull
jmp
add
or
xor
jp
push
pop
fcomip
sub
loopne
into
push
push
push
into
sbb
jmp
push
les
outsb
hlt
cmp
cmpsb
repz
xchg
push
inc
mov
fistps
enter
in
pop
insl
lock
in
mov
pop
fisttpl
xor
pop
out
sbb
jmp
or
int
cmp
ret
arpl
ret
popa
cmpsb
xchg
je
call
popf
ret
jmp
jae
jle
imul
out
lds
xchg
ficoms
xor
outsb
cmp
lea
mov
ffree
dec
andl
jp
push
les
inc
mov
push
lret
push
sti
ss
sbb
or
cmp
sub
pop
xchg
dec
xchg
imul
push
iret
aas
xlat
aaa
in
cwtl
push
scas
jb
push
mov
cmpsb
mov
xchg
das
loop
rcll
pop
ret
les
enter
jecxz
mov
popa
xchg
or
data16
xchg
dec
mov
repz
sub
je
in
pop
movsl
adc
lcall
es
or
cmp
sub
pop
xchg
dec
xchg
imul
jbe
data16
lret
push
sti
ss
sbb
or
cmp
sub
pop
xchg
dec
xchg
imul
sbb
mov
mov
ret
push
fdivrs
cmc
sbb
gs
fidivrl
jae
aad
mov
jb
sbbl
mov
sar
xchg
pop
mov
dec
in
lahf
sub
push
roll
jge
in
sarl
clc
or
pop
push
cmp
imul
call
xor
in
insl
xchg
cltd
xchg
sti
dec
dec
jge
adc
xor
data16
lahf
xchg
mull
mov
jmp
shrb
xchg
lret
ss
loop
mov
iret
test
mov
jnp
xor
mov
jno
fsubr
inc
xchg
fmulp
inc
jle
sub
jae
xor
test
mull
and
mov
adc
adc
mov
and
or
xor
dec
test
jg
inc
scas
insl
lret
mov
ret
jnp
clc
mov
js
sbb
call
es
addr16
xor
lahf
popa
jl
adc
xor
adc
dec
add
mov
lahf
and
outsb
fisttpll
mov
pop
xchg
jo
rcrb
mov
mov
scas
mov
rorl
rcrl
xor
repnz
push
ds
out
lret
inc
dec
ja
inc
xor
lcall
shll
adc
mov
in
sbb
jge
push
fistpl
push
jmp
mov
and
xchg
push
pop
stc
xor
sbb
mov
or
mov
or
out
jo
sbb
int
testb
dec
sub
dec
stc
inc
pop
clc
xor
test
fwait
dec
cltd
xor
jmp
dec
add
test
sahf
pusha
out
sbbl
out
xchg
bnd
xchg
mov
sbb
addr16
in
inc
cmpsb
and
inc
cmp
xchg
xor
hlt
arpl
add
cli
jae
hlt
fcompl
push
ss
ret
scas
jmp
lods
push
jne
decb
cmp
jecxz
sbb
mov
xor
pop
adc
jecxz
rcll
pop
shl
lahf
push
push
scas
inc
mov
imul
sbb
pop
sarl
scas
jecxz
sbb
mov
jb
popf
cmp
or
push
lret
js
ja
sbb
andnps
sbb
inc
jo
dec
pop
xor
in
rol
xor
in
or
mov
fistps
jl
cmp
sahf
push
push
rcl
mov
xor
stc
sbb
pop
imul
mov
cmpsb
inc
push
xlat
out
scas
out
and
repz
xorb
ret
fyl2xp1
popf
jae
mov
loopne
addb
cli
cwtl
mov
or
and
inc
out
sbb
inc
mov
mov
xchg
orb
push
div
icebp
das
dec
arpl
int3
cmp
adc
push
jno
shl
mov
mov
movntq
push
mov
les
icebp
scas
and
shlb
inc
rcll
sub
in
and
add
mov
in
or
outsb
push
in
fwait
rolb
mov
out
mov
das
ja
add
mov
and
pop
pop
push
push
mov
in
jb
and
mov
sbb
mov
adc
inc
shlb
cmp
test
in
xor
dec
sti
mov
lds
outsl
cwtl
mov
ret
xor
jmp
pusha
rorl
mov
cltd
addl
lea
mov
movsl
inc
cmp
hlt
and
out
js
pusha
sub
pop
sbb
cld
enter
dec
cmp
cmpsb
jo,pt
rorb
mov
loopne
out
les
jle
aaa
cmpsb
shr
jno
sti
pushf
push
lret
xlat
dec
pop
push
dec
outsb
popf
movb
or
adc
and
out
mov
xchg
dec
imul
fistl
push
push
je
test
adcb
or
and
lock
sti
and
adc
sbb
into
fidivrs
inc
loopne
inc
mov
jmp
insl
jno
or
push
lahf
lcall
and
jge
repnz
leave
pop
mov
mov
out
push
je
xchg
inc
pop
fildll
mov
mov
xor
mov
cmpsb
and
push
es
push
and
mov
sarb
adc
aad
mov
lods
jge
dec
dec
add
test
stc
rolb
adc
push
fwait
repnz
mov
xor
std
jne
pop
call
cmc
into
and
cmpsb
lret
sbbb
ja
xchg
or
adc
lods
aas
js
xchg
push
mov
lret
pusha
jl
test
jp
leave
jo
ja
fcmovnb
mov
in
and
gs
lcall
test
clc
adc
mov
out
imul
insl
outsl
inc
pop
and
cwtl
push
push
stc
mov
xorl
dec
cmp
in
mov
push
smsw
mov
loop
mov
sbb
jge
les
jae
xchg
mov
es
adc
jmp
in
add
push
adc
sub
add
sbb
test
ljmp
fwait
pop
cmp
imul
add
jbe
or
testl
xor
or
fsubrs
cmc
sbbl
shl
stos
out
pop
test
lcall
xchg
jl
out
imul
in
inc
adc
adc
sub
jecxz
rcll
das
pusha
nop
cmpl
push
pop
mov
ficoms
push
test
test
in
ja
movsb
ret
in
incb
cmc
xor
push
jle
add
mov
into
lcall
insl
add
xchg
lock
xor
imul
lods
inc
dec
insb
jns
mov
jp
and
out
and
jae
pop
cmp
fwait
jecxz
rcl
or
and
leave
and
adc
sub
mov
nop
int
or
rcll
repnz
xlat
inc
fchs
bound
cmp
xor
dec
dec
stos
jbe
inc
lods
jp
xchg
cmp
push
xor
fwait
or
call
dec
jo
adc
jnp
mov
rorb
add
sbb
test
cwtl
outsl
cltd
dec
push
test
mov
leave
push
repnz
imul
pop
mov
cs
es
mov
mov
ljmp
fsubl
cmc
inc
rcr
sbb
jno
outsb
stc
lret
cmp
jp
in
sti
es
cmp
ror
xlat
loop
cli
mov
xor
dec
ficoml
and
out
push
movsb
sbb
or
sbb
ret
push
sbb
lock
xor
xchg
pop
sub
into
imul
dec
pop
cmp
fisubrl
icebp
push
pop
pop
dec
pop
dec
adcb
adcb
cmp
bound
dec
pop
mov
loopne
in
sbb
test
push
and
mov
inc
int
into
adc
push
xchg
sbb
adc
and
jns
dec
daa
jo
mov
jne
call
mov
sbb
int
adc
mov
xchg
inc
sarb
cwtl
mov
iret
pop
mov
lcall
sarl
lret
xor
lahf
cmpsb
mov
fucomip
xor
jbe
fdivl
jle
bound
and
or
mov
push
divb
pusha
dec
inc
xchg
fstpl
add
addl
push
test
test
jle
xchg
cmc
jl
popa
aad
and
and
or
cmpsl
icebp
in
add
out
add
ret
dec
daa
sbb
cli
adcl
xchg
sub
push
cmp
xchg
test
inc
popf
ss
and
push
out
pop
loopne
in
mov
popf
cmp
cmp
std
mov
or
push
pop
mov
inc
xor
loop
jle
ret
leave
cmpsl
mov
sahf
shlb
sbb
jecxz
and
xor
xchg
jle
ljmp
movsb
sbb
pop
adc
clc
add
outsl
pop
xor
add
xchg
or
paddb
jge
enter
add
push
scas
lds
jb
sub
pop
mov
movsl
mov
mov
inc
mov
mov
lds
aam
xor
and
mov
stos
xor
xor
testl
cmc
sub
stos
lahf
push
sbbl
cmp
int
jb
outsl
jo
mov
movl
fadds
xchg
push
pop
std
adc
xor
sbb
xor
mov
dec
in
ljmp
xchg
mov
addl
mov
divb
jns
mov
pop
jns
lret
ror
add
lods
adc
and
mov
adc
in
push
imul
out
mov
test
stc
imull
outsb
fnstcw
sbb
dec
adc
xchg
in
ljmp
lods
nop
pusha
dec
xchg
mov
jns
push
std
insl
out
scas
stos
xchg
scas
and
test
cmc
mov
push
es
mov
test
leave
pop
sub
sbb
mov
push
sbb
or
jecxz
sbbb
imul
std
shrb
mov
fdivrp
int3
hlt
mov
xchg
mov
cmc
int
or
cmp
add
sbb
aam
jmp
sbb
in
inc
pop
mov
xor
push
inc
scas
xchg
mov
arpl
adc
dec
je
or
fildl
aad
daa
adc
sti
je
or
aad
mov
aad
xchg
cld
sub
test
sbb
cmp
and
sbb
loopne
cwtl
cmp
pusha
inc
inc
jl
xor
cli
gs
add
jns
fs
cmpsb
mov
int3
and
sbb
popa
jb
mov
xor
sub
mov
icebp
jno
lcall
pop
das
jmp
add
cwtl
jge
cmp
or
cld
popa
push
stos
push
cmp
iret
test
dec
idivl
ficoml
ret
fistpll
call
clc
arpl
mov
add
insl
jp
inc
jecxz
lcall
xorb
push
dec
push
sub
or
pop
ss
xor
divb
fcoml
arpl
and
test
out
pop
adc
je
stos
nop
pop
dec
in
std
fistps
pop
addr16
and
inc
stc
ljmp
out
hlt
push
sbb
xchg
adc
jbe
cmp
fldcw
inc
ficoml
adc
mov
mov
pop
mov
movsb
sub
add
jnp
adc
xor
xchg
mov
pop
leave
jmp
dec
xchg
dec
xchg
sub
xchg
fbld
fstpl
jne
xor
divl
ljmp
dec
sub
mov
das
shlb
rolb
or
sub
aaa
xchg
insb
jns
loopne
shl
mov
push
lcall
push
cmp
daa
insl
pop
add
cmc
pop
inc
cltd
das
adc
inc
mov
aaa
call
push
repz
or
lock
rcrl
stc
ret
fmuls
les
mov
mov
push
insb
test
jmp
addr16
dec
add
xor
and
imul
sbb
xchg
cmp
jp
jbe
adcb
out
jg
ss
fsubrs
sbb
ret
filds
out
pop
inc
shl
pop
lahf
push
add
push
xor
loopne
mov
pop
test
in
jp
lods
in
cmp
pop
rorb
adcb
jns
push
jle
sub
sbb
cmpsl
test
data16
jnp
repz
in
mov
cmp
jb
mov
jmp
lahf
loop
and
xor
adc
out
and
inc
les
lods
in
jo
inc
sub
jecxz
lods
jmp
and
adc
add
into
mov
fldt
add
insb
or
rcrb
mulb
aaa
xor
pop
mov
mov
jp
inc
dec
push
in
les
lea
daa
mov
aad
lods
push
insb
or
mov
adc
mov
lahf
lock
push
bound
or
pop
xor
sti
mov
mov
scas
jbe
inc
in
jp
xchg
and
fidivrs
mov
lret
inc
scas
das
out
mov
mov
push
adc
xchg
in
mov
xor
std
jns
rclb
in
leave
hlt
aaa
xchg
scas
bound
pop
xchg
mov
movsb
xchg
pop
mov
inc
cmp
mov
add
lea
fmuls
insb
mov
adc
ja
rol
xor
cld
ds
mov
xor
sub
xchg
add
dec
dec
jmp
lods
pop
enter
sbb
fisubrl
jmp
inc
add
sub
jo
jno
ja
popf
jns
shll
jl
insl
pusha
lret
jmp
int
cld
xor
aam
imul
test
or
sbb
sbb
lock
push
aam
mov
ret
in
dec
xor
sub
mull
mov
stos
mov
add
jle
test
imul
insb
sbb
sub
inc
scas
jmp
shrb
push
mov
jbe
mov
or
into
cmp
mov
mov
adc
cmp
cwtl
or
leave
push
sub
jp
icebp
call
dec
push
pop
shl
pop
pop
cltd
add
xchg
dec
and
cmpsb
push
dec
sbb
mov
repnz
sahf
fwait
jmp
xchg
mov
cmp
je
ud2
arpl
cmp
push
mov
dec
enter
mov
imul
jnp
pop
cmp
inc
neg
mov
lods
xchg
dec
fwait
sahf
pop
mov
dec
cs
sub
mov
push
xchg
or
push
add
loope
insl
movsb
xchg
xor
fimull
jno
or
pop
andl
stos
daa
mov
jbe
ret
pop
gs
inc
add
jnp
insb
stc
dec
gs
std
in
xchg
lea
cs
ja
fnstsw
leave
push
ficomps
popf
stos
push
cmp
pop
in
cmc
mov
fstl
enter
stos
sarb
xor
push
sbb
jne
and
test
in
jne
jecxz
je
js
push
dec
dec
out
push
lods
in
sub
xor
movsb
scas
sub
cmpsl
test
xchg
movsb
or
push
dec
add
pop
add
ret
aas
jle
cmpsl
cmovp
js
adc
sbb
cld
jmp
cmp
hlt
nop
add
rorl
ficoms
sub
dec
sbb
mov
shlb
sbb
xor
push
pop
lds
push
xor
cli
daa
or
hlt
jb
stc
dec
shl
lods
subb
lea
xor
sbb
outsl
data16
roll
sub
lds
cmpsb
mov
decl
pop
dec
xor
xchg
push
mov
mov
dec
into
or
dec
punpckhwd
rolb
fisubs
imul
sahf
cltd
sbb
test
mov
data16
pushf
xchg
fnsave
test
sbb
pop
mov
repz
adc
mov
inc
mov
xchg
push
fnstcw
in
bound
dec
lret
int3
das
test
push
call
sbb
sub
std
cld
lock
loope
pop
or
punpckhwd
add
xchg
es
xor
xlat
add
ret
add
xchg
add
mov
inc
push
imulb
and
add
enter
mov
test
mov
andb
sahf
rorb
aas
filds
jbe
aam
dec
decl
fwait
add
jns
ret
adc
scas
mov
xchg
dec
push
les
fs
test
add
das
aam
push
mov
popf
inc
in
cld
xchg
arpl
adc
je
pop
gs
adc
push
shlb
mov
push
movsb
mov
xchg
mov
repnz
pop
cltd
mov
lds
or
mov
jl
or
lds
shrb
mov
std
add
nop
push
in
adc
cmp
loope
cmp
js
xchg
leave
repz
and
jmp
xlat
sbb
jge
dec
or
bound
and
loope
pop
std
icebp
push
daa
add
push
sub
add
pop
dec
les
es
popa
or
lock
pop
sbb
jg
cli
push
cmp
out
out
jbe
fisubs
mov
mov
not
push
ret
cmp
loop
cmp
jns
xor
mov
pop
adc
cmp
imul
cmp
adc
jl
mov
inc
adc
xchg
cld
xchg
inc
movsb
mov
pushf
mov
fsubrs
mov
stos
fisubrs
cmp
stos
fistl
test
xchg
clc
mov
outsl
xchg
cwtl
xchg
and
push
arpl
loop
or
jmp
xchg
xchg
cmpsl
out
push
sbb
sub
xchg
repnz
sbb
mov
loop
loope
inc
adc
sbb
inc
sti
jb
lahf
pop
ja
jmp
and
push
jp
negl
idiv
or
dec
xor
and
pop
fadds
cwtl
inc
mov
jl
push
lcall
pusha
out
fimuls
das
sub
loop
sub
std
jae
jne
and
push
mov
inc
in
test
outsl
insl
sbb
pop
push
inc
std
pop
inc
mov
jl
jno
test
aas
dec
cmp
xor
aam
scas
int
dec
pop
test
inc
cld
sbb
add
inc
arpl
jge
movsl
xchg
push
lcall
dec
addb
lret
ss
cltd
xchg
sbb
sbb
addr16
push
push
jbe
jmp
mov
sarl
in
dec
aaa
xchg
aam
pop
dec
pop
ret
jbe
or
add
mov
out
cwtl
icebp
cmpsl
push
fwait
out
cli
xor
int3
das
nop
jmp
jb
cmp
icebp
pop
cmpl
inc
sub
mov
dec
imul
dec
sbb
aad
cmp
adc
push
inc
and
inc
aaa
xchg
push
jnp
or
cmpsb
inc
push
xchg
aaa
jb
mov
mov
xchg
scas
cmp
movsl
test
cmp
ja
jg
pop
xor
mov
ds
imul
mov
and
sbb
das
sbb
in
push
ror
inc
stos
xchg
add
adc
fldcw
xor
sub
or
cwtl
cmp
sub
xor
pop
gs
fwait
mov
call
xchg
mov
pop
and
and
jb
mov
fildl
cltd
sub
and
ss
repz
cs
or
repz
xor
pop
movsl
imul
mov
push
cmpsb
iret
std
inc
bound
fcoml
jno
cmp
sub
adc
mov
sub
addl
xchg
xchg
xor
fstp
xchg
mov
add
xor
push
add
pop
sub
or
icebp
nop
xor
xchg
stos
andb
jl
mov
mov
mov
pop
lret
xor
pop
sbb
add
jmp
sub
cmp
cmpsb
adc
test
and
jns
jg
aad
insb
push
lock
cld
jg
stos
jne
dec
repz
jmp
pop
jb
sub
xlat
mov
fisttpll
mov
jg
jg
cmp
loopne
lods
and
jge
imul
popa
cmp
mov
jo
pop
dec
or
jge
inc
sbb
push
inc
je
out
repnz
or
addb
addr16
adc
jae
mov
push
pop
test
into
popf
sahf
nop
es
cmpb
js
xchg
ds
enter
je
pop
call
push
or
test
inc
mov
fnstcw
scas
xchg
xorl
lods
pusha
sbb
jmp
cmp
loopne
and
jne
jecxz
or
mov
sbb
in
nop
mov
cmpsb
insl
je,pt
jmp
orb
lcall
and
mov
and
push
pusha
mov
or
fs
pusha
push
fidivrl
out
int
sub
clc
sbb
js
push
mov
mov
test
pop
dec
push
add
out
pop
pop
lds
enter
mov
push
stos
pop
mov
pop
imul
outsl
pusha
mov
and
add
jmp
aad
jb
inc
pmulhuw
bound
mov
das
inc
add
fidivrs
imul
mov
xor
add
mov
fbstp
lcall
lock
cmp
clc
pop
leave
adc
inc
push
mov
push
jecxz
jo
jl
sti
bound
add
mov
callw
leave
fldenv
test
std
out
inc
icebp
test
push
jb
mov
xchg
pop
mov
or
mov
mov
gs
xchg
jbe
data16
lret
push
sti
ss
sbb
or
cmp
sub
pop
xchg
dec
xchg
imul
jbe
data16
lret
push
sti
ss
sbb
or
cmp
sub
pop
xchg
dec
xchg
imul
jbe
data16
lret
push
sti
ss
sbb
or
cmp
sub
pop
xchg
dec
xchg
push
lcall
data16
lret
push
sti
ss
sbb
or
sub
test
pop
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
push
pop
inc
push
jne
xor
inc
sub
inc
lds
xchg
movb
push
add
jne
xor
arpl
xchg
cmc
stos
jmp
xchg
in
mov
mov
movsl
repz
movsl
pop
aad
mov
sbb
inc
int3
and
stos
ret
xchg
nop
ljmp
inc
sub
jo
push
inc
dec
add
mov
or
insb
jl
mov
fildll
xchg
mov
or
push
add
mov
in
outsl
or
mov
imul
scas
subl
int
push
das
mov
movsl
xor
add
mov
push
add
lret
pop
push
les
pop
sbb
ds
popl
fiadds
push
js
aad
aad
add
hlt
inc
adc
dec
mov
jle
cld
movsl
in
xor
jecxz
or
mov
sub
dec
ret
mov
fnop
stos
xchg
mov
movsl
cltd
pushf
pop
xor
xor
inc
adc
loope
sbb
in
mov
popf
cmp
cmp
and
adc
out
js,pt
and
jecxz
push
adc
xchg
enter
and
sbb
pop
jns
add
inc
xchg
loop
out
icebp
movsb
adcl
roll
dec
or
push
xor
add
cmc
mov
test
mov
movsl
repz
add
jne
xor
arpl
xchg
cmc
mov
test
mov
movsl
repz
add
lret
fnstsw
addr16
aaa
lret
hlt
int3
test
sbb
clc
daa
outsb
and
lret
xchg
fildl
sub
fstpl
push
sbb
mov
mov
xor
ja
cltd
inc
es
fwait
jecxz
mov
out
daa
int3
test
push
lds
sub
jno
adcl
add
into
aas
pusha
nop
out
fldt
jp
nop
lds
mov
shlb
jbe
xor
mov
shll
flds
sbb
sbb
sub
jle
jecxz
xchg
pushl
inc
xor
xor
mov
test
and
cmp
cltd
jecxz
divl
pop
pop
loope
sbb
lret
sbbb
mov
mov
ret
pusha
lods
xchg
data16
mov
das
push
pop
xchg
cltd
adc
insb
sub
pop
inc
jb
adc
rorl
push
jb
sbb
mov
fdivp
punpcklwd
mov
std
and
xor
and
sti
cmp
mov
pop
lods
frstor
fucom
ja
xor
ljmp
fwait
bound
mov
pop
mov
cmc
cmp
int
scas
test
mov
js
int3
adc
pop
cmp
fldenv
jp
rclb
icebp
mov
subb
imul
scas
rcrb
xchg
ss
mov
push
stos
cmp
cmpl
bound
mov
mov
movsb
jae
loope
push
cmp
adc
insb
push
in
mov
stc
xor
cmpsl
jg
mov
xor
mov
sbb
loopne
pop
icebp
adc
stos
push
sahf
lcall
scas
es
cmp
or
sbb
std
es
xor
dec
inc
inc
mov
iretw
inc
dec
sti
xlat
sub
ret
cmp
mov
pop
dec
fsubrp
jne
adc
mov
jae
lds
cmp
dec
pop
mov
xor
push
adc
push
adc
sub
pushl
jmp
movsb
dec
addr16
inc
shll
cmpsb
sub
cmp
loop
pop
cld
mov
mov
jecxz
cs
out
call
dec
dec
pop
or
mov
int
fistps
fs
mov
sahf
sub
ret
xor
gs
test
pushf
push
xlat
add
jecxz
mov
mov
sub
dec
fildll
mov
addr16
scas
xchg
pop
or
xchg
mov
mov
addr16
movsb
adc
xchg
out
mov
stos
insl
xchg
str
sahf
mov
add
dec
pop
movsl
or
sub
pop
lret
push
ljmp
sbb
rorb
int3
frstor
push
cmp
adc
pushf
mov
mov
mov
rcll
insl
popa
add
fsubrp
sahf
test
xlat
mov
fcompl
int
xchg
sub
lods
cmp
test
int3
mov
push
les
scas
fsts
and
in
cmp
test
adc
jb
sbb
inc
cmp
mov
leave
xchg
lret
pop
jmp
or
mov
mov
bound
mov
dec
movb
cltd
ret
sbbl
pop
out
pop
jae
sub
iret
adc
sub
or
inc
jge
cltd
mov
lods
test
push
mov
gs
cmp
add
or
lret
sbb
cmp
int
or
repnz
in
fstp
das
jae
push
es
fists
loopne
je
push
pop
pop
popa
in
cmp
add
das
das
sbbb
dec
fwait
cmpsl
enter
sahf
inc
call
aam
push
sahf
cwtl
data16
mov
jno
mov
fcmovbe
and
pop
popf
and
inc
pop
cmpsl
mov
or
mov
push
aam
lods
lcall
push
adc
iret
movsb
mov
mov
lcall
aaa
xchg
int3
stc
mov
jo
ds
imull
int
dec
mov
or
imul
popl
addr16
sbbb
data16
in
scas
fadd
movsb
pop
jmp
shlb
call
sbb
dec
icebp
decb
pop
popa
or
ds
ds
mov
inc
lret
xchg
les
ljmp
adcb
cmp
call
outsb
in
dec
xchg
shrb
fdivrl
dec
fst
push
out
mov
mov
stc
xchg
xchg
cltd
movsb
mov
mov
js
adc
lods
push
icebp
in
das
pop
into
push
dec
cmp
inc
fistpll
addb
pop
lods
faddp
je
sub
dec
push
jl
sahf
mov
and
ret
push
lds
xchg
in
add
out
jmp
dec
pop
hlt
inc
mov
mov
outsb
jae
dec
pop
jae
pop
stos
gs
aas
fcoms
mov
and
loop
cmpb
adc
fwait
pop
add
add
pop
in
lret
fdivl
out
lcall
cmpsb
xlat
add
and
push
inc
cmp
jp
xor
pop
fisubs
and
fldcw
or
gs
sub
xlat
inc
pop
rorl
cmpsb
or
in
xchg
mov
fsub
sbb
test
movsl
incb
sahf
xchg
jnp
mov
or
cmp
dec
xchg
xchg
aam
jle
lahf
mov
lahf
out
xchg
cli
jecxz
jecxz
lahf
insl
mov
mov
jmp
inc
push
cltd
ret
pushf
dec
aaa
xor
push
repnz
cmp
notb
mov
mov
jp
inc
add
and
xor
scas
out
mov
push
mov
loop
dec
xchg
pop
btc
test
xor
cli
ficoml
shlb
dec
add
dec
outsb
push
outsb
lcall
xlat
lahf
cmp
fidivrs
jge
out
leave
pop
stc
daa
jg
sub
fidivrs
push
pusha
mov
lods
shll
pop
sbb
mov
pushf
insl
or
enter
notl
inc
scas
ja
jo
arpl
xchg
cmp
pop
outsb
rorl
test
dec
or
movsb
andb
cmp
sti
sbbb
push
or
pop
cld
movsl
pop
mov
pusha
add
hlt
mov
pop
xchg
arpl
test
shl
adc
dec
cmpsb
mov
pop
les
mov
add
in
inc
xchg
jp
in
cmpsb
cmpl
ret
lock
lcall
pop
mov
push
clc
mov
pop
mov
jp
pop
mov
xchg
lret
fisttpl
xor
sbb
sbb
mov
je
repz
dec
ljmp
aam
jg
imul
leave
imul
outsb
fsts
mov
push
pop
dec
addr16
jg
lret
bnd
xor
bound
cmpl
jbe
loopne
test
cmp
cmpl
mov
add
mov
mov
in
aaa
add
popf
inc
popf
stos
adcb
aam
xlat
int
add
lock
adc
mov
je
cmc
lods
sub
movsb
push
and
cmp
cmp
adc
jb
mov
lods
out
loop
iret
inc
hlt
or
xor
mov
add
fmuls
mov
xor
jg
mov
inc
mov
mov
or
inc
mov
out
sahf
push
or
mov
imul
fdivl
mov
lods
shrb
out
or
sbb
cmc
adc
or
stc
cld
ficompl
filds
filds
adc
cmp
adc
xor
clc
adc
add
daa
adc
popa
mov
clc
add
or
dec
js
out
mov
pop
cwtl
fnstsw
scas
xchg
push
sub
sbb
arpl
out
pop
or
int
push
push
sub
lahf
les
xchg
add
inc
and
adc
sahf
jb
popa
imul
push
xor
dec
pop
sub
xor
jne
sub
xor
popa
xchg
lock
call
xchg
and
mov
mov
das
cmpsl
inc
lds
cmc
loopne
idiv
shlb
jp
rcrb
mov
add
mov
pushl
clc
inc
lods
mov
or
mov
pusha
or
or
ficompl
and
int3
xchg
jae
mov
bnd
mov
sahf
ljmp
repnz
add
in
les
leave
out
ss
pop
fadd
and
pop
pop
ficompl
cld
pop
sub
xchg
sbb
mov
mov
rolb
aaa
into
mov
fs
int3
test
cmpsb
ret
icebp
push
adc
or
repnz
or
leave
test
jl
je
add
mov
fiadds
sbb
cmp
cmc
out
rolb
xor
sahf
mov
cli
ja
arpl
cmp
movsl
pop
jno
jmp
scas
dec
mov
insl
mov
push
push
cld
loope
inc
mov
adc
xchg
inc
mov
negl
or
jecxz
inc
outsl
xrelease
cltd
cs
fisttps
pop
mov
mov
jb
andl
cs
mov
iret
jo
les
out
aam
ret
fs
push
imul
adc
in
push
movsl
dec
fnstcw
fwait
jns
mov
outsl
or
xchg
popf
imul
push
imul
aas
imul
lock
rclb
pop
dec
mov
cmpl
mov
inc
sub
push
push
mov
mov
inc
push
xlat
adcl
adc
in
mov
dec
sahf
aam
mov
mov
fstps
pop
dec
sub
lea
in
js
pop
nop
inc
ss
push
popf
jae
int3
shll
cltd
lret
dec
and
dec
sbb
sbb
and
mov
cltd
leave
sbb
inc
outsl
and
jne
enter
leave
ss
outsl
lahf
pop
nop
pushf
pop
hlt
inc
aad
lods
pop
jb
loope
icebp
mov
ret
jne
test
cmp
push
pop
adc
movsb
sbb
ffree
fcmovnbe
inc
bound
lret
dec
lods
pop
adc
pop
fcomps
mov
dec
sub
test
xchg
xor
add
push
or
cs
cvtdq2ps
imul
sub
dec
mov
shlb
pop
xor
cmp
dec
and
mov
add
push
pop
xchg
sbb
pop
shl
sub
adc
aaa
fisttpll
adc
push
fs
les
xlat
into
popf
xchg
xchg
sbb
fs
cmp
xor
dec
push
fdivrl
or
imul
and
leave
or
out
mov
xchg
dec
inc
xchg
sbb
notl
push
cltd
dec
pop
and
cmp
out
lds
xor
pop
push
test
mov
repnz
mov
mov
test
hlt
stc
xchg
xrelease
dec
nop
shlb
cli
mov
int
mov
popl
xor
sti
jp
orb
shlb
push
adc
mov
cmp
nop
idivl
mov
inc
xor
adcl
sub
push
and
mov
add
mov
mov
outsb
pop
cmp
push
mov
scas
jbe
iret
scas
jns
mov
dec
pavgw
cli
and
repz
ficoml
push
testb
mov
dec
xchg
inc
dec
dec
sarb
push
stos
test
lea
lea
out
mov
negb
or
aas
mov
test
add
add
out
mov
mov
xchg
movsb
pusha
cmp
mov
push
inc
sbb
pop
xchg
push
or
in
aam
mov
decb
inc
inc
xchg
fbld
mov
jle
rcrl
ds
sahf
mov
pop
and
sub
and
outsl
cmp
test
repz
sbb
call
push
pushf
cmp
mov
out
js
lea
addb
ret
bound
es
mov
ljmp
pusha
jae
sbb
cltd
jecxz
mov
loop
call
jb
jp
xor
or
daa
cmp
xchg
gs
sarb
data16
loopne
adc
cltd
mov
mov
cmpsl
lea
test
pop
jns
bound
in
dec
cmp
in
adc
add
push
std
nop
mov
jae
cmp
xor
roll
mov
or
push
shll
shll
ss
outsb
cmp
xor
lds
push
leave
lea
xrelease
xchg
pop
inc
movsb
negb
dec
adc
movsb
addr16
adc
inc
iret
fidivl
ja
repnz
push
or
outsb
push
xlat
iret
add
out
test
jl
lcall
or
jmp
rclb
scas
fs
lret
xchg
push
or
aaa
inc
lock
stos
nop
sub
dec
pop
mov
adc
push
out
pop
jmp
add
inc
xor
sub
mov
pop
fldcw
mov
sbb
faddl
jo
cmp
push
pop
push
pop
sbb
jmp
test
rorb
pop
neg
mov
mov
push
imul
clc
ljmp
and
icebp
sbb
rorl
pop
out
jnp
jnp
mov
or
add
les
or
adc
adc
outsl
iret
test
pop
shr
xor
push
aas
xchg
in
les
out
pop
call
cmp
add
cmp
dec
inc
push
pop
dec
push
dec
cmp
movsl
mov
add
jmp
mov
mov
aas
call
lock
call
mov
pushf
cmp
cmp
gs
aad
add
sbb
sbb
pop
inc
aas
scas
mov
adc
mov
aam
in
lds
push
fidivl
jno
mov
aaa
mov
in
sub
jno
lock
or
movsl
je
xchg
mov
lods
mov
lcall
mov
and
mov
lods
inc
fsubs
aas
or
sbb
das
lahf
jns
mov
gs
push
xor
sub
fisttpll
pusha
xorb
out
lds
jle
popa
cld
cli
push
or
pop
lret
sub
dec
rcl
cmp
and
stos
xlat
insl
sub
pop
mov
xchg
cmp
and
aam
ss
adc
cwtl
imul
cmp
mov
insl
int3
mov
mov
sbb
out
pop
psrlq
mov
mov
ja
fistpl
rorl
add
adc
mov
out
mov
jl
icebp
imul
mov
imul
add
out
arpl
fcmovne
pop
lea
push
ja
mov
das
inc
xor
fists
stos
and
jns
jns
mov
xchg
test
push
mov
rclb
push
sbb
movsl
sbb
xchg
mov
shr
js
inc
inc
scas
fisubl
jmp
cmc
jg
mov
out
add
pop
push
jle
test
fld
push
lods
jo
jg
das
mov
test
inc
cs
inc
add
data16
into
gs
movsb
xchg
jno
sbb
js
cld
xchg
in
mov
push
push
pop
pop
sub
ljmp
inc
sub
imul
arpl
cmpsl
lcall
cmpsl
sbb
sbb
pop
push
ds
fisttps
sbb
lcall
xchg
inc
mov
rolb
pusha
or
mov
cli
icebp
stc
aam
add
or
adc
sub
jne
pusha
repz
pop
ficoms
push
and
push
mov
nop
cs
adc
sahf
push
pushf
pop
loopne
xor
out
ret
mov
xor
sbb
mov
data16
iret
push
jp
sbb
or
sub
and
mov
lahf
inc
rcrl
clc
popf
and
push
adc
pop
imul
mov
fidivrs
cmpsl
test
xor
ljmp
ret
pop
push
inc
inc
ret
std
sbb
sbb
sbb
clc
ds
add
call
push
sub
imul
jno
mov
xchg
push
das
push
and
popa
push
mov
dec
xor
roll
cmp
mov
fisttps
mov
sarb
inc
sbb
outsb
lods
pop
icebp
push
notb
das
push
fildll
mov
out
clc
add
dec
push
popa
sbb
sbb
das
sub
push
adc
dec
insl
test
or
cmp
loope
inc
test
cmp
pop
mov
dec
push
push
fs
xor
pop
pop
jge
mov
push
xor
lret
in
inc
xchg
or
jmp
pushf
lock
cwtl
repz
pop
sbb
ja
negl
in
sub
push
mov
loopne
jle
adc
loop
loope
inc
clc
push
cmpb
cli
repnz
or
gs
or
stos
adc
cmpsb
mov
pop
and
push
push
lods
imul
or
in
out
fstpl
outsb
mov
dec
shlb
mov
divl
ret
inc
in
xchg
aas
aad
mov
cmpsl
pop
and
push
lods
cmc
inc
and
cld
out
xor
ror
out
jo
bound
out
adc
mov
push
loopne
shrb
push
pop
jb
mov
test
jne
imul
ds
clc
nop
sbb
mov
and
push
or
push
xor
sarl
push
pusha
notb
cmp
jmp
pop
lea
sbb
call
inc
jle
and
jb
mov
mov
insl
popa
mov
insb
xchg
jnp
pop
cmp
sbb
mov
rcll
inc
mov
lea
cltd
shr
icebp
aam
fucompp
aas
adc
aas
ljmp
pop
loop
loopne
xor
mov
mov
jns
inc
add
imul
incb
hlt
daa
xor
or
and
out
push
repz
push
mov
hlt
and
push
pop
ret
sbb
sub
es
push
loop
xchg
inc
fs
fiadds
push
fwait
fs
xchg
pop
gs
stos
push
pop
shrl
shl
sti
pop
out
push
movups
pop
outsl
pop
push
jb
cld
insb
leave
dec
cltd
sub
push
and
xchg
xchg
add
and
ffree
int3
jmp
sti
stos
inc
fiadds
ljmp
mov
rolb
cmc
popf
sub
mov
mov
ss
sub
cld
mov
sbb
mov
les
cs
dec
xchg
dec
testb
mov
out
data16
pop
pop
mov
sahf
fidivrs
cltd
je
pop
mov
inc
insl
dec
ret
add
std
mov
test
or
call
sub
scas
xchg
add
mov
sbb
cld
test
mov
loopne
leave
inc
sti
test
xor
pushf
das
jecxz
sbb
mov
ret
gs
and
je
icebp
jp
push
add
outsl
jbe
lcall
cmp
mov
adc
dec
mov
mov
xor
in
insl
inc
idivl
fldt
gs
mov
sti
dec
or
xchg
mov
and
xor
jl
es
leave
push
inc
cmp
cmp
mov
ss
iret
xor
xchg
es
mov
insl
test
shrb
jo
mov
mov
int
adc
sbb
adc
jno
jb
adc
adc
mov
pop
push
xchg
adc
hlt
lret
daa
xchg
adc
xor
add
lret
pop
or
jno
xchg
sbb
imul
sbb
sub
xor
xchg
lods
inc
fucomi
hlt
mov
xchg
add
push
or
cwtl
sbb
cmp
cmp
sahf
fildl
adc
fyl2x
or
test
push
int3
push
adc
mov
std
ss
push
out
rcll
pop
or
xchg
jmp
inc
repnz
mov
fldenv
mov
and
inc
les
adc
xchg
js
mov
xchg
int3
push
int
lahf
call
mov
jb
dec
jb
sub
test
insb
jl
dec
std
or
fdiv
out
addr16
xchg
push
pusha
push
out
mov
mov
cwtl
pop
pop
loopne
icebp
and
fcmovu
fwait
hlt
shrb
and
xchg
mov
push
and
ja
inc
mov
fists
lret
add
stos
jecxz
mov
dec
jge
into
sbb
scas
repz
js
inc
pop
mov
xor
lea
data16
mov
push
mov
mov
push
jmp
mov
popa
roll
sahf
dec
outsb
cmp
add
or
out
adc
jg
xor
arpl
xchg
cmc
mov
test
mov
movsl
repz
add
jne
xor
arpl
xchg
cmc
mov
test
mov
movsl
repz
pop
inc
sbb
adc
addr16
xchg
cmc
mov
test
mov
cmpsl
pop
push
out
divl
jae
inc
add
mov
jl
cmp
in
loop
or
mov
mov
add
adc
insl
xor
divb
ret
repz
pop
cmpl
out
repz
ret
sub
cmp
lret
xor
add
adc
arpl
push
iret
repz
mov
lods
imul
ret
sub
cmp
shlb
jecxz
xchg
cmp
mov
adc
push
ret
inc
scas
outsl
mov
mov
stos
inc
mov
inc
ss
inc
dec
push
push
nop
xchg
mov
mov
js
repz
xchg
loop
das
lret
fs
cmp
lcall
push
xlat
inc
daa
mov
movsl
jl
js
imul
fistpl
jae
and
jmp
add
jecxz
dec
pop
jl
insl
test
jle
xor
mov
xchg
dec
and
adc
test
mov
mov
loopne
xchg
xchg
insb
imulb
icebp
sahf
aam
sub
adc
pushf
dec
lock
pop
mov
jecxz
jl
nop
ret
repz
xor
scas
cld
adc
ds
stos
stos
jmp
and
adcb
xchg
ret
cmp
add
jg
arpl
jmp
push
dec
and
jb
bound
xor
test
or
xor
ret
pop
shrl
push
mov
sbb
mov
fcoms
fbld
mov
push
jns
jnp
sbb
lret
add
jae
push
mov
inc
stos
push
mov
subl
jecxz
repz
sub
cmp
lret
xor
add
adc
arpl
push
mov
subl
jecxz
repz
sub
cmp
lret
test
das
add
loopne
add
ja
pusha
fsubrs
fsub
pop
mov
pop
xchg
xchg
sahf
arpl
mov
std
xchg
loopne
push
push
mov
ret
pop
inc
stos
rolb
cmc
testl
mov
cmp
stos
nop
mov
cmp
in
popa
or
dec
loope
push
adc
xchg
mov
outsb
call
in
ds
sub
ljmp
movsl
aam
mov
push
aam
lcall
dec
cwtl
push
mov
mov
adc
cmpsl
rcrl
jl
pop
sub
icebp
sarl
inc
dec
pusha
pop
dec
enter
xchg
jo
imul
insb
mov
fisttps
shlb
xchg
adc
lret
sahf
pop
xlat
jle
jo
enter
arpl
sub
or
ret
call
loopne
mov
pop
in
lcall
clc
mov
lret
dec
pop
add
sub
jns
jb
andl
mov
dec
xor
das
outsl
std
sbb
vmovupd
xor
int
pusha
adc
xchg
jno
cmp
hlt
push
aam
dec
mov
adc
push
mov
adc
arpl
call
out
gs
push
lcall
repnz
inc
dec
jmp
xor
push
pop
xchg
or
xchg
out
fs
sbb
jp
inc
jb
int
sbb
push
shlb
clc
lret
shrb
in
loopne
imul
cmp
test
scas
adc
mov
jecxz
dec
adc
or
jl
test
xchg
lods
jp
jo
lret
inc
push
aam
jbe
mov
push
scas
push
ds
aaa
dec
jnp
and
sub
bound
outsl
pop
sti
pop
or
jb
cli
std
adc
dec
and
jmp
int3
mov
sub
jle
xchg
int
dec
mov
fisubrl
add
fsub
cmp
lret
and
and
mov
jno
xchg
jns
add
ds
mov
mov
fsub
loop
cmp
pop
and
mov
mov
pushf
pop
ja
inc
pop
adc
pop
mov
mov
test
add
add
jge
repz
movsb
mov
mov
rorl
dec
adc
and
xor
adc
adc
loop
fldenv
inc
mov
push
imul
fcoml
popf
mov
movsb
ret
sub
push
ret
sbb
lret
mov
gs
fsubrl
dec
push
adc
insl
inc
arpl
pop
pop
xlat
mov
lahf
fidivrl
mov
add
jae
arpl
xchg
bound
pushf
and
sub
jl
iret
cmp
enter
add
jle
aam
xchg
movsl
sub
out
dec
adc
xchg
jle
inc
test
ja
push
imul
mov
shrd
loop
js
mov
int3
in
fimuls
jecxz
icebp
xor
iret
jg
das
mov
cwtl
mov
mov
popf
je
push
push
xchg
in
push
addr16
stc
call
adc
sti
push
or
mov
jnp
xchg
push
push
call
in
xchg
or
lahf
fidivl
xchg
hlt
add
xchg
inc
mov
icebp
leave
inc
cmp
out
push
arpl
mov
movsl
faddl
jnp
psadbw
mov
adc
dec
xor
xchg
outsb
inc
xor
xor
mov
jb
lock
add
in
mov
mov
test
dec
pop
in
dec
pop
sub
mov
imul
jmp
mov
ficoml
inc
adc
sbb
aas
xchg
mov
mov
mov
rcrl
mov
jle
sub
mov
lock
fs
je
mov
xchg
inc
adc
into
mov
popa
int
dec
xchg
inc
ja
jbe
js
push
leave
jns
cmp
sti
sub
rorl
mov
inc
cmp
push
mov
mov
push
jle
cmc
out
inc
rcl
mov
repnz
mov
dec
or
inc
xor
add
in
inc
outsl
hlt
dec
ficoms
mov
in
popa
je
pop
aas
ljmp
sbb
jb
adc
or
out
in
shlb
jo
sbb
jno
push
push
call
sbb
nop
adc
rolb
aam
loopne
sub
clc
into
add
pop
in
stos
cmp
and
rcrl
mov
push
fcomp
inc
ja
jecxz
movsl
lds
daa
ret
or
xchg
call
push
push
aad
popa
mov
stos
push
mov
xor
repnz
or
cmpsb
in
lahf
add
dec
add
jecxz
fldenv
imulb
xchg
int3
pop
lret
and
pop
fnstenv
cs
popa
out
push
and
xchg
loopne
es
pop
mov
mov
cmp
adc
jae
sbb
pop
les
and
mov
add
inc
out
pop
shll
or
insb
insl
sbb
fidivl
xchg
push
sbb
out
pop
dec
jnp
inc
mov
lahf
cli
sub
mov
push
push
xor
jno
sbb
stos
pop
lea
les
add
xor
pop
mov
in
jae
mov
leave
test
insl
in
or
push
sbb
mov
adc
gs
mov
adc
mov
and
test
int
dec
scas
test
rorl
fisubs
int
and
fisttpl
int
aad
ret
xchg
clc
pop
mov
xchg
cmpsl
xchg
or
ss
dec
shlb
and
dec
dec
hlt
xchg
int3
rcrb
xchg
inc
jbe
dec
mov
ljmp
add
mov
cli
cwtl
and
inc
mov
jnp
cmp
cmpsb
inc
movsl
scas
loope
push
cmpl
inc
add
enter
popa
inc
xchg
fnstsw
enter
rol
scas
lods
sbb
mov
and
sbb
jmp
subl
das
adc
out
lahf
movsl
pushf
mov
pop
mov
add
mov
xor
out
xchg
jl
pop
jno
sahf
dec
imul
icebp
dec
aad
divb
jae
shlb
and
sbb
in
mov
cmc
xor
test
imul
sub
cs
or
mov
xchg
cmp
clc
pop
xchg
outsb
into
imul
cmp
test
mov
fs
pusha
aas
cmp
icebp
or
xchg
xchg
ret
shl
sbb
mov
frstor
xchg
add
xor
xor
push
jle
xor
or
jmp
push
dec
inc
test
sbb
push
or
in
dec
or
adc
call
es
jo
jnp
cmp
jmp
sbb
jae
call
mov
dec
int
mov
sub
push
int3
sahf
push
in
out
inc
inc
xchg
cmp
pushf
rcl
enter
sbbb
inc
fwait
scas
push
add
mov
push
es
les
or
lods
fucom
push
addb
sahf
dec
mov
add
insl
je
addl
hlt
aad
xor
xchg
js
mov
scas
and
dec
cmp
pop
xor
xchg
adc
daa
or
enter
pop
xchg
sub
hlt
adc
fcmovb
push
popa
adc
mov
lods
xor
mov
xchg
shr
mov
sarb
mov
cmp
gs
xorb
dec
mov
mov
sub
clc
movsb
cmp
js
pop
hlt
das
data16
jle
inc
push
mov
es
and
inc
fs
xlat
int
mov
mov
insb
shrl
lahf
xlat
pusha
mov
neg
xchg
mov
or
insl
fnsave
pop
or
inc
in
mov
lock
rep
pop
and
or
iret
add
out
arpl
pusha
mov
push
xlat
lcall
movsl
cmp
and
dec
or
loopne
or
push
test
ja
rolb
rolb
movsb
push
lahf
out
fldt
repz
idiv
lods
mov
notl
push
gs
xchg
je
inc
fcomi
imul
mov
add
mov
add
call
lret
pop
test
pushf
xchg
fldenv
test
jmp
repz
xchg
stc
xlat
inc
ret
and
xchg
lret
xor
js
loope
jae
stos
and
sub
loope
push
mov
je
xchg
loopne
scas
int
out
pop
xchg
in
lods
push
mov
movsb
fmull
lods
movsb
aad
add
movsb
divl
xchg
insb
test
hlt
addl
add
mov
mov
jg
ljmp
loopne
jo
jmp
test
jno
dec
mov
fwait
les
cld
jnp
cmpsl
mov
jg
and
sahf
outsb
cld
xchg
or
xchg
out
shl
ljmp
cmp
mov
sbb
rcrl
lds
enter
adc
sub
jno
pop
mov
mov
les
fisttpll
das
or
add
ficomps
push
ret
jecxz
rcll
stos
mov
fwait
stos
xchg
jge
add
adc
mov
fwait
pop
call
mov
or
aaa
inc
daa
pop
push
bound
lret
inc
jne
repz
test
clc
in
and
orb
je
push
ret
ds
int3
jl
jo
mov
sub
pop
je
dec
das
xchg
xchg
out
cmpb
addr16
pop
int
iret
enter
xor
adc
or
test
pop
and
stc
mov
cmp
and
dec
ja
enter
test
lods
out
stos
call
inc
js
push
stos
xchg
xor
dec
push
shrl
sub
push
out
push
imul
xchg
or
ds
in
rorl
push
jo
in
out
xchg
div
je
imul
push
popa
or
lock
mov
imul
lret
xor
push
in
bound
dec
push
lcall
enter
popa
lret
inc
xchg
sub
fdivl
mov
repz
nop
jle
sub
sbb
loop
adc
mov
adc
dec
sti
push
arpl
push
push
mov
jno
leave
das
dec
xchg
push
mov
jmp
or
sub
mov
bnd
sbb
add
mov
xchg
add
mov
mov
mov
outsl
jp
ja
mov
xchg
imull
fnstcw
in
out
mov
cmpsl
filds
and
cmp
push
jnp
push
test
sub
mov
cmpsl
hlt
inc
std
jo
cmp
das
and
sbb
inc
inc
cmp
je
mov
je
sbb
adc
mov
jne
mov
mov
ds
sub
sub
sbbb
cltd
popf
cmp
int3
stos
jg
orl
sbb
outsb
push
ja
mov
addr16
cmpsb
jmp
sbb
loop
adc
arpl
and
push
and
sub
inc
ret
mov
xor
fstl
outsl
xorb
sub
clc
mov
cmp
js
out
xor
jne
es
cmp
xlat
push
and
stos
or
ficoms
lea
outsb
push
sbb
data16
scas
sub
bound
inc
add
ficoml
sbb
push
add
jle
ds
fdivrl
nop
fdivr
cmp
pop
xchg
and
js
jne
insb
cmp
and
cmp
inc
addr16
leave
inc
push
das
inc
jns
push
fs
sub
xchg
loopne
or
ret
mov
dec
xchg
xchg
cld
loop
loope
jecxz
xchg
in
fsub
jne
psrlq
shrb
xor
pop
movsb
rorl
push
cmp
inc
push
jb
sub
cmp
fistl
mov
push
jne
push
in
in
dec
sarb
pushf
cmp
jo
mov
std
add
sbb
mov
sbb
xor
sbb
push
rorb
xchg
push
xor
or
or
rcll
sbb
out
mov
dec
std
sbb
pop
shr
mov
stos
mov
aad
cli
jae
stc
xchg
js
pusha
sbb
xchg
inc
int
cmp
mov
sub
test
js
or
push
pop
fildl
inc
mov
inc
xor
add
ss
push
and
jmp
push
iret
cmp
inc
mov
imul
outsl
add
fisubrs
mov
stc
jecxz
jle
int3
call
or
sub
popf
inc
jb
cmp
xor
arpl
aad
mov
pop
dec
inc
or
lock
cmp
jno
fs
mov
aam
sbb
insl
popl
stos
arpl
adc
mov
or
push
add
jmp
mul
mov
insb
sahf
xchg
into
mov
push
jl
cmp
rolb
rcrb
sbb
aas
stos
jmp
pushf
pop
arpl
ss
stos
jge
orb
bound
cmp
dec
bound
cld
test
adc
dec
inc
jmp
cmp
mov
mov
gs
push
pop
inc
add
scas
std
cmp
shl
ss
arpl
jle
pop
jae
dec
or
mov
mov
mov
jecxz
pop
add
outsb
ret
aad
mov
out
or
and
pop
test
std
ret
sbb
cmp
dec
mov
lock
cmp
mov
icebp
ss
cmc
movsl
mov
jns
sub
xor
lea
push
sub
ret
xor
push
dec
jbe
jge
lock
xchg
and
adc
sbb
aaa
push
dec
add
pop
int
pop
lret
popa
xchg
push
dec
insb
sub
lods
loop
xor
test
testl
aad
dec
xchg
into
fistpl
loope
sbb
rcrl
add
sbb
pusha
mov
xchg
std
jp
test
add
pop
jp
and
pop
enter
mov
push
pop
lahf
test
outsl
pop
sub
das
je
hlt
lret
adc
jne
jp
lds
outsl
cli
mov
and
out
mov
push
adc
in
out
jg
repnz
dec
mov
sti
aaa
xchg
sbb
and
int3
push
into
dec
mov
mov
dec
xor
nop
push
jb
sub
and
cmp
push
fildl
ss
scas
aas
push
push
aas
je
fistps
cmpsb
mov
out
lds
ja
mov
adc
imul
add
sub
mov
imulb
adc
inc
std
pop
xchg
mov
push
ss
push
or
pop
out
subl
fstp
mov
out
cld
and
pop
mov
dec
mov
rcll
cli
psrlq
stos
hlt
mov
mov
sub
mov
ljmp
std
mov
in
mov
bswap
push
mov
xchg
jmp
dec
mov
pop
out
cmp
and
mov
cs
jns
insb
xchg
pop
sub
shll
xor
daa
pop
push
mov
jmp
cmpsl
popa
dec
cli
pop
push
xchg
and
in
cmp
ljmp
cmp
jb
xor
sbb
movsb
inc
push
ljmp
sub
aad
push
daa
jb
test
add
jo
push
mov
or
pop
xlat
mov
inc
push
rorb
loop
adc
fcompl
pop
mov
into
inc
out
mov
popa
push
pop
stos
push
andl
std
int3
xchg
test
add
mov
sbb
mov
jo
add
jne
iret
dec
sahf
inc
push
sbb
cmpsb
xorb
adc
out
cmp
dec
pop
mov
push
jge
loopne
ljmp
dec
sahf
inc
int
enter
dec
and
mov
or
mov
sub
inc
or
mov
mov
pop
jbe
xor
les
pushf
faddp
movsb
insl
scas
mov
cs
in
stc
jbe
jp
in
mov
mov
lods
movsl
std
ret
sbb
dec
ja
ret
int3
pop
cmp
pop
stos
fwait
jmp
and
fistps
lea
roll
sbb
daa
mov
fiadds
pusha
fldcw
repnz
andb
js
lods
sbb
adc
addl
fistl
shrb
aam
add
jl
loope
xor
cmpsb
test
test
and
sbb
mov
mov
iret
and
fidivs
popa
aad
movsb
sub
es
cltd
lds
push
int
cld
xlat
and
dec
addr16
cmp
and
and
jns
push
outsl
inc
xlat
test
insl
out
dec
pop
push
xor
das
push
or
jmp
dec
pop
pusha
mov
mov
lock
rolb
lods
mov
sub
out
mov
pop
or
movntq
out
shlb
mov
scas
adc
push
push
jns
fnstenv
push
jmp
loope
xchg
xchg
or
inc
rcr
mov
pop
cmp
dec
mov
mov
andb
jp
flds
pop
push
mov
inc
pop
scas
mov
int
jne
sbb
add
mov
mov
mov
icebp
mov
xor
push
lret
mov
push
dec
xchg
adc
imul
decl
dec
aad
dec
ljmp
addb
cmp
pop
jp
xor
test
mov
jg
xchg
add
push
dec
cltd
out
fstpt
lods
lret
mov
jle
add
jb
out
adc
add
sbb
push
shll
mov
mov
fistl
jg
mov
jbe
divb
inc
and
sub
cli
and
adc
movsb
jne
lea
cwtl
loopne
push
mov
fwait
lret
enter
loope
mov
daa
mov
add
adc
mov
add
jl
cmpsl
dec
cmp
stos
pop
cwtl
lret
xchg
xchg
enter
mov
mov
in
mov
rorb
movsl
jp
repnz
jecxz
fsubrs
stc
orl
lahf
aam
xchg
iret
btr
enter
cs
pop
sub
test
or
mov
mov
test
andb
cmpl
xchg
int
into
iret
xor
fnstcw
imul
aam
loope
out
leavew
movsb
sbb
sbbb
fdivrs
jae
in
fmull
pushf
sub
movlps
ljmp
std
sbb
lret
or
shlb
sub
mov
mov
int
stos
in
out
dec
and
jg
add
sub
repnz
or
xchg
mov
xchg
jno
in
and
popa
sahf
fs
ljmp
mov
lahf
pop
cmp
push
adc
cmpsl
adc
push
fnsave
sbb
bound
cmc
cmpsb
into
xor
xchg
fstl
imul
cmc
aaa
cmp
jge
push
and
bound
mov
ret
pop
out
hlt
adc
push
stos
add
fisubrs
loopne
pusha
pop
aam
mov
ficompl
mov
xor
jl
roll
pop
xorl
push
leave
dec
arpl
adc
cld
sub
popf
mov
cld
call
dec
pop
cmp
cmp
adc
popf
jno
dec
ljmp
sarl
pop
dec
gs
xor
pop
cltd
adc
mov
test
sbb
jnp
test
out
lods
test
mov
adc
lcall
test
aad
mov
lods
and
xchg
mov
mov
shl
imul
push
mov
xchg
mov
xchg
call
pop
jg
or
xchg
jecxz
push
lret
xchg
add
loop
jbe
push
dec
push
aam
movsl
dec
roll
mov
repz
stos
xchg
mov
gs
es
and
cmp
xor
xor
sub
mov
cli
dec
sbb
mov
pop
add
mov
scas
push
int
inc
jnp
mov
push
sbb
push
pushf
ja
idiv
lods
sarb
xchg
out
fstp
inc
cmp
jnp
fisubrs
icebp
mov
adc
ljmp
pop
adc
ficompl
fwait
mov
sbb
pop
cmpsl
sbb
cmp
rcr
pop
lcall
sbb
pop
orl
pushf
adc
or
jb
jecxz
arpl
orb
dec
movsl
or
xchg
sub
or
sarl
test
jo,pn
sahf
lret
cs
mov
jmp
cmpsl
sub
adc
iret
cmp
or
and
or
pop
pop
ret
push
stc
inc
adc
insl
movsb
lea
or
mov
imul
dec
lahf
ja
movsb
inc
int
clc
cmc
fiaddl
int
jge
pop
out
xor
roll
xchg
add
adc
aad
inc
les
out
fnsave
rorl
dec
aaa
data16
roll
xchg
xor
ficomps
repnz
sti
arpl
push
mov
subl
jecxz
repz
sub
cmp
lret
xor
add
adc
arpl
push
mov
subl
jecxz
repz
sub
cmp
lret
xor
adc
adc
bound
push
mov
mov
jg
or
sbb
das
jecxz
cmp
pop
fisttps
mov
inc
stos
sarl
dec
dec
icebp
sub
or
cmpl
push
sub
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
and
shr
or
pop
fisubl
add
add
pop
add
pop
or
add
add
adc
data16
add
add
add
add
adc
cs
add
add
add
add
addb
add
add
add
add
add
add
add
popa
add
add
cmp
add
add
add
inc
add
add
add
pop
add
add
leave
add
add
add
add
add
add
add
add
add
add
scas
add
add
enter
mov
pop
add
add
add
add
add
add
add
add
add
add
sbb
or
add
inc
add
add
add
add
or
add
add
add
mov
add
add
add
adc
mov
add
add
add
add
add
add
ss
add
add
imul
imul
adc
and
lods
add
cltd
add
cs
add
add
mov
add
in
add
add
add
add
das
add
add
add
add
faddl
or
add
cltd
add
pop
add
dec
add
add
add
add
add
out
fildl
pop
add
cmp
mov
xchg
pop
add
add
add
add
mov
loopne
fiadds
mov
sbb
mov
add
add
add
mov
add
pop
add
add
add
add
add
add
enter
mov
add
add
add
insb
add
add
and
add
in
add
pop
add
add
or
roll
pop
add
add
add
mov
add
add
add
add
add
add
out
fildl
inc
add
add
add
add
mov
add
add
add
add
sbb
nop
add
add
add
insb
add
add
add
add
add
add
inc
add
add
add
add
sub
adc
inc
add
add
add
add
add
add
sub
sbb
xor
xor
add
add
add
fldl
aad
lahf
add
add
mov
add
add
add
add
add
dec
add
add
popa
add
pop
add
add
add
add
popa
add
and
xchg
and
dec
add
add
add
add
adc
cwtl
add
add
sbb
roll
jno
and
inc
add
add
sbb
aad
pop
add
add
add
add
add
jmp
mov
and
mov
add
add
add
add
add
add
inc
add
jo
fildl
imul
add
test
lahf
add
popa
add
inc
add
add
add
sub
dec
add
add
add
add
add
push
add
adc
dec
add
add
add
add
add
imul
add
add
add
insb
add
add
nop
add
add
add
ja
adc
pop
stos
sets
pop
pushf
dec
add
fnsave
xchg
mov
rorb
cwtl
cld
inc
rcll
jne
cltd
stos
scas
lcall
xchg
cld
jge
and
sub
in
mov
or
mov
push
fldt
popa
out
mov
inc
popa
inc
test
dec
jge
pop
int3
cltd
into
push
test
lret
data16
xor
mov
adc
ret
mov
mov
inc
loopne
ds
mov
mov
pop
adc
negb
xchg
into
fidivrl
jmp
mov
and
fstpl
xchg
popf
outsb
ljmp
cmp
pusha
lods
mov
mov
mov
sub
or
inc
mov
scas
iret
cmpsl
xchg
mul
and
jo
dec
jmp
lea
push
or
sbb
xchg
clc
cmp
xlat
test
push
cs
push
cmp
adc
pop
sbb
ret
cmpsl
xor
pop
xor
sub
cwtl
inc
mov
pop
arpl
jno
cld
push
fcomps
jecxz
mov
int
or
jne
add
push
sub
ret
js
arpl
push
mov
mov
and
in
gs
jae
lcall
push
or
cs
dec
fnstcw
cltd
xor
mov
jb
fsubl
andb
push
lods
bound
enter
sbb
in
inc
arpl
adc
hlt
lea
xchg
arpl
call
or
adc
push
xchg
hlt
sarl
movsl
es
xchg
pop
data16
mov
mulb
xor
popa
xchg
mov
sbb
scas
fistps
repz
cmc
cmp
rcrb
jns
aad
dec
pop
lahf
outsb
lahf
push
into
data16
and
loopne
repz
scas
adc
jnp
sub
enter
nop
push
push
out
add
adc
mov
nop
sbb
ds
push
imul
data16
cmc
into
and
lea
insl
adc
xchg
cmpsb
xchg
sarl
pushf
mov
push
test
bound
pop
jge
push
xchg
cmc
xchg
adc
mov
mov
pop
movsb
adc
sub
scas
xor
pop
popa
mov
imul
cmp
repz
outsb
xchg
adc
sbb
out
cmpb
subb
dec
pop
adc
adc
push
or
lods
push
mov
icebp
push
push
inc
je
nop
add
jecxz
mov
mov
sub
dec
hlt
jns
scas
addr16
jb
fucomi
sub
mull
rcll
pusha
sbb
aaa
or
pop
mov
imul
les
and
xor
xchg
dec
cmp
ret
sbb
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
