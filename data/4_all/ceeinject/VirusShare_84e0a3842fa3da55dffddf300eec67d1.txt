call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
cmpsl
jge
xchg
lret
xor
div
cmp
jp
dec
and
das
inc
cmp
bound
jb
cmp
lret
mov
ret
mov
lcall
and
sub
sbb
adc
dec
or
mov
or
ljmp
cmp
adc
imul
xlat
lods
out
cmc
lcall
cltd
sub
jns
inc
loopne
jb
mov
sub
or
push
cli
ret
inc
mov
daa
xchg
dec
mov
scas
inc
stos
xchg
mov
mov
mov
lret
ljmp
test
aad
mov
stc
mov
addb
ret
mov
cwtl
or
pop
pop
movsl
into
cmpsl
inc
cmp
outsl
xchg
pop
jp
icebp
sbb
push
out
xchg
into
ljmp
mov
pop
xor
adc
push
pop
jae
lea
cli
das
xor
test
cpuid
arpl
xchg
add
sub
bound
neg
cmp
lret
mov
mov
and
test
aam
xor
outsb
and
or
sbb
rorb
les
sti
xchg
or
sbb
pop
inc
sub
pop
adc
jb
ret
adc
out
jmp
inc
das
inc
ss
pop
adc
jg
pop
sbb
repnz
shr
cmpsb
mov
repnz
jp
dec
and
sub
push
or
jb
cmp
lret
mov
ret
mov
lcall
and
sub
push
or
jb
cmpb
bound
test
ljmp
jp
inc
test
imulb
repz
push
es
and
fwait
pop
pop
repnz
call
or
aas
cmpsl
roll
test
and
mov
into
add
xchg
add
in
lret
cmp
sbb
into
out
ja
push
inc
xchg
fs
fistl
xorb
repnz
addb
es
cmp
pop
iret
xchg
sbb
aam
rorb
pop
out
jno
in
jae
sub
push
adc
ffreep
dec
jle
scas
fmul
adc
leave
and
xchg
add
out
dec
pop
push
in
pop
lcall
jmp
stos
sub
dec
inc
movsb
xor
mov
and
call
sbb
adc
dec
imulb
jnp
push
dec
push
std
dec
mov
icebp
jbe
mov
cmpsl
in
pushf
fldl
xor
dec
pop
mov
insl
and
loope
sar
mov
pop
xor
push
mov
stos
aam
or
pop
push
jle
xchg
mov
hlt
sub
jnp
push
pop
push
shl
inc
movl
mov
aam
add
scas
test
icebp
dec
loop
imul
test
shll
cld
sbb
je
nop
insb
jb
rcrl
or
pop
inc
add
sub
sbb
mov
movsl
xor
fldl
cmp
cltd
and
adc
cmp
mov
cmp
sub
lods
mov
and
scas
jns
adc
jecxz
sahf
jmp
je
in
in
or
andl
in
push
sbb
push
js
add
mov
outsb
sbb
or
lods
inc
pusha
sub
xor
cmp
pop
mov
sahf
pop
fcompl
mull
idivl
xchg
lods
lahf
pushf
jae
and
mov
aad
inc
stos
inc
pop
incl
ja
xor
xlat
cmp
jle
inc
psubw
push
jb
pushf
outsl
adc
dec
xchg
cmp
inc
sub
rcrl
into
xchg
std
xor
pushf
jl,pt
pop
sub
loope
mov
push
jns
repz
test
pop
adc
push
mov
sahf
xchg
push
jmp
xor
pusha
lods
push
mov
mov
add
sub
mov
imul
pop
out
imul
fistpll
add
aas
and
in
out
int
add
addl
dec
mov
jae
xor
imul
and
stos
mov
push
insl
mov
ret
cmpsl
out
aam
in
fdivrl
mov
mov
inc
out
jb
lea
stc
lds
scas
imul
pop
jno
sbb
sub
fcoms
mov
mov
ja
std
mov
les
add
js
test
shl
aad
add
sbb
cmp
loopne
ja
mov
out
repnz
xor
pop
push
dec
add
fcomp
xcrypt-ctr
cmpsl
push
inc
push
loope
dec
paddusw
rcll
cmp
testl
nop
jne
divb
push
movsb
sahf
inc
adc
pop
xor
imul
or
jnp
lret
jp
sar
xchg
fistl
fsubl
iret
es
pop
repz
cmp
fidivs
pop
fnclex
and
in
sub
push
jmp
inc
int
sub
jmp
adc
jnp
shrl
dec
popf
sbb
lcall
popa
fdivl
push
push
sbb
inc
xlat
jge
clc
adc
pop
inc
push
xor
int3
jecxz
std
mov
in
out
and
adc
mov
cltd
mov
mov
jmp
decl
sbb
aas
or
xchg
sub
ficompl
xor
inc
into
cmp
stc
xlat
jnp
sbb
decb
xchg
popf
aas
subl
je
jo
pop
rclb
shlb
fwait
fs
jmp
mov
jae
mov
popa
push
scas
lds
push
add
pop
dec
push
inc
pop
lcall
int3
xchg
mov
jno
sar
jge
mov
inc
cmp
fldt
fsubl
dec
repz
rcll
cmp
cld
lock
in
and
dec
repnz
dec
sub
dec
push
sub
in
add
jnp
lods
idivb
inc
jb
dec
test
pop
mov
mov
add
cld
mov
mov
xor
or
jno
or
and
les
inc
mov
imul
push
les
imulb
test
insl
mov
inc
ss
icebp
out
sarl
jmp
mov
mov
out
push
mov
out
aam
jnp
cmp
loopne
mov
cmp
mov
mov
and
dec
jle
push
xchg
test
sbb
lcall
pop
sbb
mov
fstl
insl
vmwrite
adc
adc
movsl
outsb
outsl
push
mov
loope
xchg
das
cmp
mov
sbb
scas
or
pushl
lods
pop
in
popf
insb
lods
pop
fdivrl
inc
lock
data16
mov
push
test
mov
ja
stc
subb
push
add
xor
push
subl
mov
adc
popf
cmpsl
adc
mov
adc
and
inc
ret
or
xor
pop
mov
sar
lods
push
call
dec
sbb
xchg
lods
insb
lcall
jbe
imull
jp
add
lret
push
fucomip
push
add
outsl
cli
mov
inc
jecxz
mov
push
xchg
fildl
inc
test
cltd
lret
negb
lcall
lcall
cmpsb
in
dec
arpl
jmp
pusha
xchg
out
push
daa
or
lret
lret
mov
mull
xor
adc
hlt
add
pop
or
and
das
cmpsb
xchg
out
add
mov
add
aas
adc
sub
outsl
mov
jecxz
mov
dec
pushf
cmpsl
ret
orl
jne
pushf
xor
xchg
int
popa
push
and
inc
sub
mov
ss
enter
sahf
and
lods
imul
adc
and
fistps
inc
pop
pop
jno
mov
push
mov
std
test
mov
stos
sbb
jp
loop
and
and
addb
jg
push
inc
pop
push
sbb
xchg
cmp
mov
mov
cltd
fimull
add
adc
push
in
mov
cmp
mov
mov
arpl
mov
add
lds
push
or
mov
or
out
xchg
jnp
and
add
out
inc
cmp
jle
inc
scas
add
mov
out
adc
shrb
aaa
mov
test
fstps
push
daa
out
jecxz
std
mov
mov
mov
leave
mov
add
jnp
pop
lds
aad
mov
push
sbb
orb
insl
inc
lret
lods
adc
xchg
cmp
mov
aas
pusha
xor
jl
pop
xorl
js
lret
xchg
mov
push
add
push
pop
cs
jbe
cwtl
add
jg
mov
push
fstpl
push
jno
cmp
rcr
imul
out
xor
leave
call
inc
ja
cltd
pop
inc
inc
pop
test
add
loopne
dec
jns
pop
mov
jne
hlt
sbb
mov
xlat
mov
adc
mov
jo
and
push
adc
mov
addr16
push
mov
std
lcall
xor
scas
stos
aad
adc
dec
inc
cs
addr16
shl
jl
mov
sbb
mov
ret
sub
push
push
cltd
sbb
negl
adc
jmp
pop
cmpsl
add
fwait
sbb
xchg
cmp
and
into
sub
mov
sub
or
push
inc
mov
iret
daa
std
arpl
jl
jno
popa
sahf
pushf
jmp
jns
mov
xor
xchg
pop
or
jns
sbb
sub
push
dec
jmp
mov
xor
popl
mov
mov
call
jg
pop
test
or
push
inc
and
mov
xchg
int3
popf
andl
pop
scas
int
mov
inc
push
xchg
jmp
test
jbe
cmp
sub
push
andb
pusha
jo
icebp
pop
jae
or
sub
cld
pop
fmull
mov
gs
imul
mov
imul
popf
arpl
outsb
lahf
or
cmc
incl
push
xchg
push
ja
or
dec
adc
lahf
and
ljmp
or
test
fisttps
fs
rorl
mov
sbb
xchg
mov
lods
xchg
xor
inc
cmp
fistpl
scas
jl
mov
out
mov
xor
int3
jmp
pop
out
jbe
mov
push
divb
addr16
insb
dec
dec
mov
imull
cmp
ljmp
fnsave
xor
adc
stc
adc
add
xchg
outsl
jge
pop
sub
inc
cmp
jmp
cmp
cmp
pop
cmp
and
leave
nop
sub
clc
shl
ds
int3
mov
sbb
xlat
int
mov
pop
test
mov
push
sbb
mov
arpl
mov
adc
mov
loope
popf
faddp
xchg
adcl
push
movsl
filds
or
cmc
int
mov
aad
arpl
out
push
in
pop
adc
jle
jno
repz
pop
push
mov
mov
orl
sub
cmc
xor
mov
cmc
outsl
cmpl
lock
pop
xor
xchg
rorl
sbb
adc
add
lea
call
testl
daa
inc
inc
insl
scas
sub
mov
nop/reserved
jnp
add
lds
ret
mov
subl
jo
adc
pop
clc
adc
mov
aas
std
push
out
mov
pop
lock
push
mov
loopne
nop
clc
pushf
enter
fisubl
outsl
insl
inc
add
mov
add
das
data16
mov
adc
adc
or
or
icebp
arpl
jmp
nop
in
fsubl
xor
jp
mov
test
fidivrs
ret
out
sbb
cltd
push
inc
mov
popa
or
jmp
lret
stos
ss
mov
jle
lcall
or
inc
pop
nop
mov
scas
push
aaa
sahf
inc
lret
cmp
dec
es
cmp
sahf
daa
into
add
orl
sub
lods
xchg
dec
aas
xchg
sub
add
lods
push
cmp
popf
inc
adc
push
jns
dec
notb
lods
xchg
aas
out
imul
adc
ds
jns
int
add
mov
enter
dec
mov
sbb
push
xor
lret
mov
cmp
mov
sbb
test
xor
push
cmc
fistpl
mov
push
addb
push
mov
mov
or
jb
sbb
pop
push
test
jbe
jbe
lret
stos
int3
fstps
xchg
and
leave
sar
popf
or
mov
cmp
mov
mov
mov
sbb
add
xor
ror
dec
lcall
jbe
sbb
xor
popf
fcom
call
scas
mov
jbe
xor
lcall
outsl
popa
adc
out
stc
nop
fwait
add
rorb
loope
xchg
pop
mov
insl
inc
lcall
xchg
je
pop
sbb
cmp
ja
xor
mov
pop
adc
cmpb
pop
cld
sti
repz
shll
adc
dec
cltd
mov
in
lea
pop
stc
mov
ficomps
dec
out
in
lea
mov
js
mov
inc
mov
lods
in
mov
xchg
rorl
sahf
mov
cmp
pop
xchg
ds
sbb
mov
test
sub
dec
sbb
hlt
ss
mov
sbb
testl
sbb
add
inc
cmc
add
ss
or
mov
into
shl
repnz
icebp
pop
lahf
xchg
aam
dec
and
out
and
jge
addb
pusha
into
lods
loopne
cmp
push
pop
test
pop
jmp
jne
jbe
jnp
jb
fsubrs
outsl
mov
js
nop
push
aam
push
lahf
sbb
xchg
jecxz
mul
or
ss
in
mov
jb
stos
xchg
mov
lahf
jl
in
push
cmc
int3
mov
data16
mov
clc
mov
hlt
iret
in
loop
push
sbb
repnz
jmp
jge
lock
test
iret
cmpsl
push
scas
or
je
mov
push
pop
lret
push
imul
hlt
enter
test
out
sbb
ss
sub
jne
mov
mov
jmp
mov
jmp
imul
fldcw
or
adc
push
pop
and
pop
mov
addl
les
es
stos
inc
iret
mov
push
int
xchg
jnp
xor
fadds
daa
jns
shl
nop
stos
adcb
xchg
fiaddl
push
mov
icebp
imul
or
cwtl
lret
jo
jb
and
add
mov
cmpsl
stos
push
fwait
sbb
xor
jl
add
dec
iret
pop
fdivr
mov
dec
shl
mov
jne
outsb
cli
push
jno
jbe
lret
add
pushf
imul
push
jbe
pop
dec
xchg
push
aaa
sub
adc
lea
test
xchg
push
inc
jne
adc
pop
inc
mov
inc
push
xchg
pop
mov
or
jmp
scas
and
insb
dec
aas
cmp
je
cmpsb
push
icebp
push
inc
in
fnstcw
adc
aaa
adc
cli
inc
push
cli
mov
cmp
jmp
and
addr16
aad
mov
pop
popf
ret
xor
cli
lea
sbb
lcall
movsb
inc
imul
cs
stos
mov
push
jl
test
or
bound
test
and
out
lods
or
or
mov
addl
add
test
or
jmp
sub
pop
adc
pop
inc
ss
cltd
repnz
orps
rorl
or
ja
test
pop
pop
jb
sbb
lret
into
jle
cmp
add
jl
mov
jg
sub
mov
pop
enter
xchg
mov
inc
xchg
dec
js
inc
das
ds
inc
xchg
iret
nop
add
sbb
rcl
jle
out
mov
inc
shrb
js
sti
pop
shlb
scas
mov
roll
bnd
lahf
sbb
movsl
ds
dec
ret
test
fists
push
fadd
lea
add
daa
aam
fmull
cmc
sbb
imul
inc
cmp
es
cld
mov
ret
push
gs
je
mov
das
scas
nop
dec
pop
in
js
pop
push
test
add
jle
mov
push
aas
add
insb
repnz
outsb
cmp
mov
pop
inc
out
scas
mov
xchg
dec
cmp
lock
add
loop
add
cltd
in
popa
push
je
sub
jp
add
popf
cli
repnz
adc
pop
jno
aaa
adc
imul
mov
push
mov
daa
add
and
fwait
js
outsl
test
jbe
xchg
rcrl
jne
and
push
sub
cmp
lcall
insl
test
js
xchg
push
rolb
out
enter
test
in
inc
xor
ss
dec
or
sub
nop
and
fadd
mov
mov
jp
daa
cmc
push
dec
and
lds
mov
popf
push
ret
inc
in
lahf
xchg
mov
and
loopne
mov
jle
out
sbb
add
cld
jne
fldl
mov
sub
xor
in
mov
mov
insl
sbb
and
stos
mov
inc
jge
pop
jg
jle
loope
and
arpl
jl
add
faddl
fdivrs
xchg
in
into
jmp
mov
pop
jno
jmp
xor
or
mov
and
push
or
adc
andb
test
loope
lock
or
imul
in
int
cmp
mov
adc
push
or
sbb
dec
inc
xchg
enter
sub
pop
mov
xchg
mov
fs
fwait
mov
imul
push
cmpl
lods
add
xchg
xor
fwait
movsl
mov
fidivrl
nop
or
repnz
test
ds
ljmp
dec
repnz
cmp
pop
leave
fbld
push
into
outsb
mov
mov
lret
xor
adc
mov
aad
iret
jno
lock
adc
lds
push
add
cmp
and
pop
mov
xor
and
dec
test
dec
popf
cmp
cmc
jge
movsl
shrl
test
div
fmuls
adc
cltd
ds
xchg
orb
in
add
jg
outsl
or
xchg
push
fldt
dec
jmp
lret
loopne
enter
push
mov
cmpsb
loope
cli
mov
ljmp
cmp
jg
test
outsb
in
into
das
out
pop
cmc
mov
mov
arpl
jmp
cmp
pop
vunpckhps
lock
jmp
sub
or
push
ja
mov
inc
sub
pop
repz
dec
insl
push
pop
xchg
cmp
es
fisubl
adc
xor
cli
lods
mov
dec
lcall
in
pop
arpl
push
xor
inc
jne
imul
mov
insb
lds
add
sbbl
or
call
cmp
mov
notl
dec
push
loopne
dec
scas
ret
mov
popa
out
mov
sbb
jns
cld
xor
pusha
test
mov
scas
or
pop
mov
cmpsb
cltd
loop
jns
test
cld
xchg
in
call
dec
jb
push
xor
loopne
sti
cmp
mov
jnp
lock
test
cmp
cmc
sub
pop
das
int
push
out
int
xchg
add
pusha
lcall
adc
cwtl
repnz
adc
push
add
scas
rorl
jo
sbb
cltd
or
adcl
xor
dec
mov
out
push
xor
fcmovne
cmpsl
aaa
nop
lret
pop
mov
pushf
pop
imul
sahf
adc
push
call
add
loop
xor
cmp
test
ret
xchg
hlt
sbb
stos
xchg
sbb
mov
call
jmp
mov
stc
xor
in
insb
xorl
sbb
xchg
add
mov
sbb
dec
push
mov
stc
add
das
imul
in
lahf
fs
jbe
repnz
fistps
bound
jns
loope
dec
push
jnp
pop
inc
fs
shlb
lds
and
mov
cmp
sbb
decl
mov
stc
lds
pop
ja
sbb
sbb
inc
add
out
add
lods
dec
aaa
push
andb
adc
inc
fidivl
int3
cltd
outsl
lods
scas
ja
xchg
push
sub
mov
add
cltd
rcrl
mul
fldenv
popa
fcomps
in
sub
mov
mov
cmp
jbe
gs
movsw
mov
movsl
sbb
lahf
push
lcall
mov
cmpsb
push
loop
aas
cmp
insl
clc
mov
lds
fnstsw
cmc
aam
cmp
movsl
loope
scas
jnp
lock
sub
out
jb
jg
mov
lcall
aaa
inc
test
push
mov
stc
sti
jl
lock
lret
int
sub
loop
xor
inc
sbb
xlat
pop
loope
ja
repz
add
addr16
cmpsl
lock
and
pop
sub
aam
jle
cmp
pop
adc
popf
repz
lret
pop
inc
jge
jmp
cmp
test
ficoms
pop
stc
jno
mov
sbb
loopne
xor
aaa
pop
in
sbb
pusha
mov
mov
lods
daa
orl
sub
imul
lods
and
push
scas
dec
add
or
push
dec
leave
push
fildll
push
sub
sub
mov
ljmp
xchg
inc
sub
dec
mov
jl
ljmp
int3
xchg
push
push
dec
cld
adc
mov
in
cmp
outsl
add
push
mov
xchg
sbb
lea
das
xchg
lock
ret
fstpl
cwtl
add
arpl
je
xor
jmp
adc
sub
mov
xchg
cmp
mov
ret
mov
lcall
and
sub
push
or
jb
cmp
lret
mov
ret
mov
lcall
and
sub
push
or
jb
cmp
fcmovu
fidivl
mov
fwait
repnz
fidivrl
inc
and
sub
push
push
inc
sub
adc
inc
mov
stos
rorb
std
test
pop
lret
cmc
popf
in
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
out
nop
movsb
adcb
scas
hlt
shrb
add
xor
je
and
push
jo
pusha
mov
mov
mov
aam
loopne
adc
jo
and
inc
push
xor
nop
mov
mov
int3
lock
xor
das
add
jo
pop
adc
sub
fucomip
icebp
cld
pop
sbb
out
cmp
or
gs
lret
pop
js
mov
xchg
xchg
pop
xor
aas
and
or
jmp
or
mov
enter
inc
inc
int3
mov
mov
or
in
inc
lock
fisttpll
popl
add
mov
cmp
les
add
dec
insb
adc
pop
jo
cmp
mov
push
jo
jg
xor
and
in
arpl
fistl
iret
add
fiadds
mov
push
push
movsb
jg
or
movsl
outsl
dec
xor
out
add
fildl
jmp
add
xchg
movsb
adcb
rcl
fucom
sub
xor
inc
push
jo
or
inc
xor
loopne
nop
mov
test
je
pop
push
sbb
add
xor
and
xchg
sbbb
loopne
push
jno
adc
pop
sub
xchg
shl
fadds
aam
loopne
adc
adc
add
je
fs
push
jo
pusha
mov
movsb
adcb
rcl
loopne
adc
adc
add
je
fs
push
jo
pusha
mov
addr16
int
in
out
sbb
jl
mov
ljmp
inc
pop
push
jmp
and
mov
imul
bound
jne
jnp
jns
mov
jge
add
aas
cmpsl
loop
setns
pop
and
mov
adc
adc
sbb
jecxz
push
pop
mov
and
mov
loopne
jb
cmc
or
jmp
lods
mov
push
xchg
divb
sbb
pop
fwait
jbe
inc
mov
shl
out
lods
aas
gs
jp
xchg
sahf
xchg
jae
leave
mov
ljmp
popf
push
sub
jmp
cs
jle
das
jno
sbbl
shl
lcall
dec
lahf
xor
push
ja
sahf
adc
outsl
out
push
sub
and
mov
pop
imul
loope
sbb
fwait
sbb
and
inc
data16
mov
or
pop
push
or
mov
loope
cmpl
jmp
lock
in
cmpb
cwtl
mov
inc
sahf
sub
lret
int
lret
ljmp
cld
add
push
loop
jbe
jno
dec
popa
hlt
sbb
fidivrs
mov
add
es
sub
mov
jge
inc
js
cmp
mov
outsb
jmp
int
mov
wrmsr
rclb
dec
into
rclb
outsl
ss
in
stos
push
inc
pop
fcmove
shlb
and
cs
mov
aam
sub
lock
xor
cmp
and
cmp
mov
jecxz
cmp
cmpsl
es
mov
popw
sub
mov
inc
data16
fnstenv
movsb
cltd
lds
mov
push
sbb
enter
std
cli
pop
daa
ficomps
fisttpl
dec
clc
xor
ljmp
push
inc
jle
jmp
lds
sub
inc
mov
sub
dec
xchg
xor
pusha
daa
inc
lea
add
jo
mov
xchg
push
call
push
cs
outsb
sub
or
jnp
xchg
and
sub
pop
inc
popa
xchg
mov
das
or
mov
xor
jne
sbb
inc
mov
inc
fistpll
mov
jmp
mov
cli
sbbl
repz
push
test
xor
push
inc
int
data16
lret
sub
mov
or
lea
int
paddusw
out
data16
js
insl
adc
das
pop
pop
out
xor
xchg
mov
popf
mov
gs
sbb
lods
loop
fsubrl
je
mov
push
pop
das
cld
dec
out
xchg
pop
shll
loop
popf
rolb
mov
addb
lods
repz
mov
mov
ss
cmp
mov
mov
lods
jecxz
in
cmpsl
mov
jae
dec
or
push
sbb
jle
mov
aam
lods
sub
pop
test
imull
and
adc
mov
cmp
inc
and
das
loop
loop
les
bound
sbb
pop
pop
call
cmp
xorl
call
sub
test
out
inc
mov
push
into
mov
roll
cwtl
fs
pusha
and
cwtl
adc
mov
aam
xlat
mov
hlt
sub
mov
pushf
ret
dec
in
mov
mov
add
cwtl
sub
nop
adc
inc
push
in
xlat
movsb
insb
lods
mov
sbb
sub
pop
xor
es
les
mov
push
jmp
xchg
cs
push
push
sbb
add
lahf
jne
lods
pusha
in
adc
fnsave
pop
les
dec
int
sub
jecxz
loop
pop
out
xor
mov
hlt
jb
adc
cs
and
lcall
mov
into
in
mov
sbb
loope
mov
popf
insb
call
inc
cmp
ret
add
xor
jae
aam
mov
lcall
mov
out
sbb
rolb
arpl
adcl
jecxz
xor
and
lods
test
enter
push
inc
jp
andl
popf
sub
add
xchg
cli
push
jl
arpl
aad
iret
and
test
xor
jae
xlat
dec
dec
out
cmpsl
ficoml
and
or
push
add
add
xlat
jno
repz
push
push
jns
icebp
movsb
dec
addr16
imul
lods
sbb
add
mov
or
in
jae
pusha
jg
jmp
xchg
or
mov
test
pop
add
xlat
push
push
inc
jb
inc
clc
and
icebp
loope
lret
fld
xchg
stos
psllw
test
xchg
inc
push
push
cmp
aas
lods
ja
adc
lock
and
imul
jge
sbb
add
es
dec
sub
jecxz
add
add
hlt
sbb
shrb
jmp
pop
iret
popf
sbb
enter
mov
int
inc
incl
and
sbb
insl
and
rolb
push
out
fimull
fisttpl
xchg
out
ds
push
jp
jl
aaa
lret
lcall
in
jge
push
roll
jmp
or
icebp
push
mov
adc
fisttps
popaw
fcomp
aad
sub
outsb
inc
xor
dec
je
mov
xchg
mov
add
dec
xchg
fiaddl
jno
out
mov
outsl
pshufw
cld
mov
sub
xchg
rorb
xchg
add
xor
dec
aad
mov
xchg
ss
jbe
out
jns
sbb
sub
shll
jecxz
mov
fsubrl
inc
test
dec
jnp
mov
cs
cli
jbe
lret
out
add
xchg
lock
insb
addr16
dec
inc
inc
inc
flds
repz
jg
jmp
roll
mov
mov
pop
movsb
daa
jo
fiaddl
fdivr
ja
out
in
mov
sbb
or
inc
pop
pxor
jo
cmc
daa
int
pop
adc
add
jae
sbbl
seta
xchg
inc
or
push
imul
jae
sbb
or
or
stos
roll
add
dec
xchg
jp
pop
rolb
pop
xchg
das
iret
outsb
add
jnp
jle
rcrb
idivb
psrlq
aaa
jle
xor
push
ja
inc
and
jae
fisttps
pop
lea
pop
hlt
sar
lret
fisubrs
es
loopne
sub
sahf
and
mov
bound
mov
jb
arpl
pop
mov
cwtl
ljmp
and
std
stc
push
inc
inc
mov
int3
mov
xor
mov
fcomps
fisubl
adc
jp
frstor
ja
xlat
inc
aad
jmp
sub
xor
clc
divl
push
sar
mov
push
sub
ja
jmp
mov
add
out
jle
sub
les
mov
movsb
mov
pcmpeqd
or
aad
mov
mull
jg
lock
add
rclb
xchg
pop
vpaddsw
pop
lcall
in
mov
int3
loope
inc
adc
fisttpll
test
sbb
negb
jg
out
popa
sbb
lret
push
fiaddl
xorl
adc
mov
ds
test
xchg
loop
and
subb
mov
mov
push
jmp
out
push
or
js
or
jecxz
xor
cli
lods
in
sub
movsb
mov
mov
lahf
arpl
sub
rcrb
xor
es
stc
mov
mov
ljmp
daa
or
xor
insl
mov
push
repz
xchg
or
inc
js
jge
mov
dec
push
ret
dec
mov
test
lahf
mov
inc
xor
nop
mov
push
fidivs
or
fildll
out
pop
sbb
mov
stos
pushf
push
add
lods
test
or
cmc
into
ss
inc
shl
fnsave
mov
inc
fs
mov
add
push
mov
mov
xchg
push
mov
mov
ret
jmp
je
fcmovne
je
out
cmp
outsb
fldl
sub
jne
sub
imul
repz
gs
aad
arpl
dec
imulb
out
in
sub
lds
std
test
and
and
jecxz
loope
push
xchg
mov
jp
pop
clc
stos
imul
xchg
mov
pop
fdivrp
inc
lods
cmp
sub
ficomps
lds
push
pop
inc
pop
xor
sbb
adc
xor
xchg
lea
and
jne
pop
xor
dec
sub
imull
ss
push
inc
dec
cmp
dec
fsub
jae
jmp
sbb
shlb
and
jno
cmpl
or
outsl
pop
mov
in
cmp
scas
out
add
mov
fstps
enter
shlb
cmp
ljmp
mov
jg
sbb
jae
ret
cmp
push
sbb
push
cmp
xchg
aam
push
in
icebp
fdivrl
xchg
pusha
inc
outsb
outsl
bound
fsts
mov
cmp
fsubrs
and
je
fsubrs
arpl
xchg
sahf
test
jle
cmp
cmp
cld
fwait
hlt
loop
dec
pushf
adc
push
rorb
addr16
dec
fstpt
sub
rorl
push
aaa
aam
leave
push
mov
jno
fdivs
lea
xor
jno
cmc
xchg
out
xor
dec
arpl
fisubl
mov
int3
std
or
aad
adc
dec
pop
sub
lret
aam
sar
pop
add
jns
jge
or
xor
sub
jge
xlat
jmp
sahf
ror
stos
movsl
fists
ret
push
popf
push
aam
mov
scas
int3
fwait
cs
xchg
repnz
xor
inc
data16
adc
push
sbb
call
jge
hlt
cmp
dec
sbb
hlt
jnp
sub
inc
pop
testl
push
jo
mov
fldenv
adc
popf
push
jmp
mov
sti
sbb
sarl
ja
cmp
dec
test
push
inc
repnz
or
cmp
sub
scas
icebp
mov
or
pop
imul
jno
adc
adc
leave
xor
cwtl
mov
add
mov
test
js
push
imul
push
scas
sbb
jns
cmpsl
add
xchg
outsl
or
push
cmp
inc
inc
stos
hlt
rcll
das
add
cmp
cltd
pop
sub
or
les
xchg
push
mov
scas
in
cmp
add
jg
mov
mov
ret
test
inc
mov
in
in
push
ret
cmp
out
fcompl
gs
into
sbb
cltd
fdivrl
and
sub
ds
cmp
xor
xchg
xchg
aas
mov
inc
test
inc
jae
inc
mov
pop
js
cld
push
fs
xor
and
cmp
cmovns
and
fnsetpm(287
push
pop
cmpsl
or
popf
add
sub
adc
std
cli
adc
or
push
cld
outsb
jmp
out
rclb
push
rcll
add
jno
pop
dec
movsb
jle
inc
pop
push
shr
aam
lods
rcrb
jp
psllw
and
fisttpl
loopne
lea
sti
cmp
sub
stos
add
cmp
push
add
jne
mov
xor
mov
push
push
outsl
dec
jno
rol
and
not
mov
or
xor
mov
pop
xchg
gs
xchg
cwtl
lret
jmp
sub
add
jne
inc
jnp
jns
scas
mov
xor
int
or
pop
add
aam
pop
push
aad
sbb
sbb
adc
and
pop
fisubrl
or
sbb
mov
pushl
push
and
xchg
push
aaa
mov
adc
shlb
and
mov
push
shlb
fdivrl
dec
push
mov
mov
dec
insb
mov
aas
jns
je
adc
jmp
dec
orb
out
outsb
xor
add
cmpsl
shrb
add
push
or
jae
cli
pop
jecxz
adc
pop
cmpsb
xchg
jp
fadds
push
jno
ljmp
sbb
mov
movl
cmp
push
push
add
cmc
or
mov
sbb
fstpt
jae
pushf
js
sbb
xchg
mov
outsb
dec
adc
adc
push
mov
jbe
mov
jnp
xchg
addr16
icebp
enter
test
scas
cli
adc
pop
xchg
dec
movsl
lcall
mov
jne
jmp
sub
mov
sbb
push
ds
in
sub
adc
mov
sub
test
aaa
mov
cmpsb
in
push
scas
fdivs
sbb
notb
popa
daa
pop
inc
dec
jp
cmpsb
mov
fdivrp
call
in
fs
xchg
in
sbb
das
outsb
and
xchg
push
pop
lret
mov
repz
inc
addb
mov
and
sbbl
in
insl
mov
xchg
push
mov
cmp
aam
out
jno
jnp
mov
loop
push
and
cmc
test
push
iretw
daa
test
aaa
push
mov
sbb
dec
inc
and
pop
mov
mov
jae
inc
or
repnz
or
jge
popa
leave
mov
add
and
lds
or
push
xor
stc
cmp
outsl
cmp
dec
push
and
ljmp
roll
adc
daa
aaa
mov
jmp
inc
pop
aaa
imul
adc
mov
xchg
pusha
or
sahf
jmp
aad
inc
bound
movsl
pusha
leave
mov
inc
mov
hlt
fidivrs
or
js
and
je
sahf
sti
cmpsl
js
push
arpl
jnp
push
xchg
dec
or
ss
mov
mov
int
loop
add
xchg
cltd
add
subb
les
lret
mov
pop
frstor
adc
pop
push
das
pushl
pop
cmc
stc
mov
shrl
fistl
mov
jecxz
loop
cmp
xchg
test
iret
aad
push
inc
fisubrl
out
inc
sub
popf
jl
and
jb
push
jbe
cmp
add
add
cltd
pushf
sbb
adc
push
test
es
pop
cwtl
sub
mov
das
in
insl
and
mov
mov
xchg
pop
pop
lds
ja
inc
sarb
cmpsb
xchg
fcmovb
inc
xor
xchg
sub
callw
xor
aad
dec
lock
or
aad
or
mov
mov
mov
dec
stos
iret
fstl
imul
les
jnp
and
pop
push
rcr
out
stc
out
outsb
sbb
sbb
push
insl
push
xchg
fldcw
push
hlt
stos
pop
xchg
repnz
fwait
adc
subb
ret
in
adc
mov
aad
pop
and
sub
es
jecxz
cld
mov
in
adc
mov
imul
sarb
sarl
scas
loop
push
loope
jo
repz
mov
inc
in
lds
xchg
push
inc
cmp
pop
mov
push
je
out
jae
enter
je
pop
push
test
mov
push
or
mov
sti
mov
cmpsb
int
dec
loop
xchg
sub
adc
jmp
jns
call
xor
cli
inc
aad
cmp
pop
or
jnp
pop
call
int
push
fidivrs
lret
jb
imul
aad
add
ffreep
sub
mov
or
xchg
imul
sub
cmp
mov
adc
adc
mov
cmpsl
mov
push
jp
das
and
inc
push
data16
mov
movsl
testl
in
icebp
jl
or
mov
dec
dec
sub
mov
int3
pop
icebp
mov
gs
mov
push
sti
rolb
pop
add
addr16
scas
aad
lods
fisubl
adc
clc
pop
jne
inc
ja
sbb
mov
roll
ljmp
shlb
jecxz
test
pushl
dec
and
mov
fnstenv
enter
jbe
out
push
jmp
ja
push
adc
jbe
dec
or
sbb
cmpsl
roll
test
and
sahf
mov
repz
ljmp
call
mov
imul
and
fwait
dec
scas
enter
mov
mov
test
shll
aaa
sbb
jae
mov
imul
lds
xor
imul
add
test
mov
hlt
mov
and
jnp
push
push
mov
mov
repz
cmp
pop
mov
pop
leave
ret
ds
pop
xchg
mov
mov
insl
repnz
fisubrl
hlt
lds
cmp
and
jl
cwtl
xchg
popa
xor
les
stos
add
pushf
mov
dec
ror
lret
sub
mov
push
aaa
mov
ljmp
hlt
js
xlat
cmpsl
mov
lods
es
pop
mov
icebp
dec
adc
popf
popa
fisttpll
out
movb
cmp
ficompl
sub
idivb
hlt
in
mov
and
inc
into
pop
xorb
pop
mov
mov
jecxz
js
es
idivl
loope
push
fs
lock
pop
inc
push
outsb
mov
cmp
test
cmpsb
repnz
fdiv
jecxz
xchg
mov
xlat
stc
dec
cmp
jge
inc
aam
adc
dec
sbb
insl
xchg
and
dec
sbb
xchg
lods
sbb
mov
inc
mov
push
push
loopne
rol
mov
sbb
test
inc
cmp
jecxz
inc
ja
pop
je
lea
shrb
mov
inc
add
pop
and
rcl
mov
xchg
rclb
push
push
into
data16
cmp
or
mov
std
inc
mov
push
aam
push
aas
cmovne
outsl
mov
add
sub
aaa
push
hlt
lods
jmp
add
sbb
loopne
add
add
lret
inc
icebp
inc
pop
out
sbbl
lods
sub
xchg
xchg
stc
jge
in
cvtpi2ps
dec
sub
sar
cmc
cmp
add
ss
insb
cld
cs
addr16
inc
ja
cltd
incl
dec
hlt
ljmp
jnp
cmp
jb
jnp
repnz
xor
jl
bound
jl
mov
std
adc
mov
pop
pop
sub
inc
or
push
faddl
fwait
lcall
xor
mov
adc
add
cwtl
push
cmpsl
xchg
inc
cmp
outsl
clc
out
lea
pop
jno
cs
adc
and
repnz
pop
push
aad
pusha
enter
cmpsb
sbb
add
mov
dec
pop
lock
and
rorb
lock
cltd
orl
cmpsb
clc
sub
mov
xchg
dec
mov
sub
pop
sub
iret
add
js
shrl
add
jnp
icebp
cmp
xchg
sbbl
push
dec
fwait
pushf
lret
inc
scas
fdivrl
jmp
je
movsb
add
mov
in
sbb
or
add
mov
xlat
daa
and
lock
lds
adc
adc
sbb
push
mov
loopne
mov
pop
inc
sbb
jmp
or
adc
pop
movsl
push
ljmp
test
or
mov
add
stos
fadd
push
mov
pop
jno
jge
pop
mov
mov
inc
mov
mov
adc
orl
imul
push
sbb
add
dec
mov
xchg
cmpsl
loop
loop
inc
dec
push
jp
adc
cmp
daa
inc
push
stos
test
addr16
xchg
and
xchg
pop
and
and
insl
dec
fwait
add
adc
out
subl
add
out
stos
fmuls
and
aaa
fnsave
stos
add
mov
jp
insl
lods
mov
mov
pop
inc
fnsave
lret
add
orl
scas
or
adcl
sbb
aad
ja
pop
aaa
mov
mov
jno
enter
leave
add
jnp
add
add
icebp
adc
mov
push
xchg
or
ljmp
lds
xchg
out
or
sbb
lods
out
dec
and
jno
dec
imul
std
loopne
pop
shr
inc
stos
int
je
adc
data16
hlt
sti
xchg
xorl
and
movsl
dec
in
jae
test
aam
loopne
adc
adc
add
je
fs
push
jo
pusha
mov
movsb
adcb
rcl
loopne
adc
adc
add
je
fs
push
jo
pusha
mov
movsb
add
in
aam
loopne
nop
and
adc
add
je
pusha
inc
push
jo
pusha
adcb
mov
push
lock
loopne
adc
stos
mov
fsubr
mov
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
xchg
xchg
stc
cmpsl
leave
mov
leave
mov
cltd
pop
imul
pop
inc
sub
sbb
xchg
xchg
stc
cmpsl
leave
mov
test
negl
push
imul
jmp
xchg
xchg
stc
cmpsl
shll
mov
pop
mov
inc
push
cmp
pop
das
push
sbb
into
jmp
lds
inc
xlat
pusha
insb
pop
or
repnz
dec
fs
ret
ljmp
mov
in
and
in
add
adc
jmp
mov
mov
or
jle
xchg
aas
mov
lcall
mov
out
fidivrs
add
mov
ret
stc
ror
ss
sbb
lahf
popw
cmp
xchg
jp
xorl
shl
sbb
ss
cmp
inc
out
negb
aaa
or
pop
lret
mov
or
js
scas
sbb
leave
push
adc
xchg
push
pop
sbb
jge
fistps
jnp
push
dec
negb
or
jmp
mov
test
testl
inc
xor
or
rorl
stos
lcall
hlt
inc
add
add
and
and
and
in
idivl
mov
cmc
bound
adc
sbb
pop
add
gs
out
test
pushf
into
test
lods
mov
negl
daa
dec
aaa
pop
inc
sub
or
xchg
xchg
stc
cmpsl
leave
mov
test
negl
daa
dec
aaa
pop
inc
sub
or
xchg
xor
call
jnp
pop
xor
pusha
adc
push
out
cmpsb
and
add
lret
leave
int
mov
popa
out
sbb
jb
sti
int
iret
mov
mov
sbb
lock
mov
dec
mov
stos
mov
insb
mov
jnp
mov
mov
or
pop
sbb
aaa
inc
rcll
mov
mov
mov
mov
push
pop
movsl
bound
pop
mov
jmp
jno
in
jnp
pop
mov
mov
mov
inc
dec
outsl
xchg
jb
movsb
push
or
xchg
hlt
sub
les
mov
icebp
ret
xor
ret
shll
ret
dec
jno
notl
addb
aad
mov
dec
dec
push
stc
rcr
add
sbb
mov
and
mov
out
sbb
sar
roll
xchg
ret
loop
add
cmpsl
ljmp
aas
xor
pop
push
sbbb
daa
add
xor
rcll
jecxz
aas
imul
ror
jl
es
faddl
mov
inc
rcll
outsl
adc
sub
jge
or
inc
in
jle
ja
mov
outsl
lods
gs
cmp
lea
ret
test
into
cmpsb
sar
rorb
test
mov
mov
jo
mov
adc
cltd
pop
adc
sbb
push
cmpsb
mov
or
or
inc
mov
cwtl
adc
mov
out
and
inc
iret
xchg
add
sub
mov
outsl
inc
mov
stc
inc
call
mov
fistps
sub
movsl
pcmpeqb
and
fistpll
or
sahf
shll
fs
inc
lcall
push
jmp
mov
adc
in
sbb
push
shr
xor
adc
loopne
adc
cmp
xchg
lret
mov
loope,pt
fisttps
jecxz
sub
lea
leave
xor
jp
cmp
jo
push
and
lcall
xlat
push
repz
pop
cmpsb
add
decl
jnp
test
movsl
cmp
cmp
sub
cmp
pop
nop
sti
mov
test
jmp
xor
in
call
rol
inc
pop
adc
mov
jle
or
xchg
push
mov
add
cmp
pop
repz
lods
rcl
add
sahf
xor
adc
and
and
push
pop
addr16
outsl
cmpsl
mov
js
and
mov
lds
push
stos
mov
adc
daa
jecxz
out
mov
movsb
div
test
jae
inc
sub
daa
push
popl
jbe
lret
xchg
adcb
sub
mov
jb
leave
pushf
sbb
int
push
sbb
insl
out
sti
test
enter
mov
aas
and
popa
xchg
inc
dec
jo
mov
and
enter
xor
repz
std
mov
cmp
dec
adc
inc
cmp
cmc
mov
icebp
das
movsl
pushf
movsb
cmp
push
cmp
push
movsl
sub
mov
xor
es
rcl
and
push
test
outsb
add
cmpsl
mov
pop
stc
shrb
push
fwait
xchg
push
sar
pop
push
ret
xor
les
jno
and
daa
fsubrl
sbb
out
cmc
sbb
sub
xor
mov
ds
cmp
leave
or
cmp
lock
inc
insb
dec
iret
inc
jns
shrb
fcomi
mov
gs
pop
adc
imull
popf
ficomps
push
out
mov
mov
cmpl
out
call
push
cltd
loope
mov
incb
jns
cmp
popf
ss
push
pop
bound
jnp
mov
inc
xchg
jg
xchg
loop
mov
jo
aaa
push
aad
mov
adc
push
jl
dec
pop
cmpsl
inc
mov
pop
or
adc
fildl
cmp
cwtl
stc
xchg
jecxz
dec
mov
shlb
ljmp
and
es
push
sti
cmp
jecxz
jno
xor
lret
xchg
je
xchg
mov
xchg
pop
cwtl
xchg
xorb
inc
or
insb
int
dec
jl
gs
or
aaa
inc
xchg
inc
and
cmp
int3
xchg
adc
popf
or
imul
lods
mov
dec
cld
fwait
jbe
pop
pop
popa
loopne
stos
pop
movsb
fiaddl
lea
push
sub
or
in
repz
mov
mov
cld
in
add
shr
mov
inc
mov
lret
test
inc
or
movsl
js
push
lret
stos
jbe
lret
cmovle
movsl
cld
mov
daa
jne
add
sbb
aad
sub
lret
push
add
faddl
adc
popf
lea
hlt
sbb
fnsave
sub
inc
iret
into
mov
sbb
test
and
mov
daa
cmp
pop
inc
aad
cmp
adcb
xchg
push
jecxz
das
cmc
sbb
add
mov
push
cmp
rcrb
pop
loop
pop
adc
push
inc
mov
mov
dec
test
cmp
into
pop
jbe
dec
loop
cmp
cwtl
fcomps
dec
stos
adc
jnp
xchg
sti
jb
cmc
mov
cmp
mov
inc
pop
xchg
mov
xchg
adc
js
jne
mov
mov
add
xchg
addr16
inc
mov
mov
imul
aad
cmpsb
lret
jae
out
jge
scas
mov
mov
lret
xor
ds
and
repnz
inc
out
testb
xor
insb
in
pushf
mov
xchg
add
into
jl
cmp
negb
repz
cli
out
mov
cmp
mov
pusha
popf
sbb
mov
loope
adc
mov
out
add
mov
mov
push
sbb
dec
adc
push
je
jmp
push
mov
sbb
xchg
xlat
scas
dec
sbb
mov
pop
decl
pop
mov
mov
sbb
push
mov
fadds
mov
leave
mov
cmp
push
xchg
stc
in
xlat
jnp
xor
mov
cli
lcall
les
dec
jns
lods
mov
fisubrl
mov
mov
sbb
jmp
or
sub
shll
pushf
fs
mov
jo
push
mul
or
jb
push
mov
adc
aam
sub
jnp
test
sub
lock
je
mov
mov
scas
outsb
pop
iret
cmp
subl
jecxz
jge
fmul
sarb
imul
iret
ljmp
sbb
in
fs
push
popf
jbe
inc
add
outsl
mov
mov
je
test
xchg
pushf
cmpsb
call
xchg
pusha
movsb
out
in
test
and
lea
push
mov
cmp
inc
dec
test
fmull
mov
or
pop
push
shrl
mov
pop
je
sbb
sbb
pop
jge
shlb
mov
xor
or
cmp
fcmovbe
std
shll
iret
jmp
out
cmp
dec
sarb
cli
scas
jge
sub
add
rcr
xchg
mov
mov
and
in
add
mov
ret
xchg
frstor
cmc
aad
jae
fsubs
push
cmpsl
inc
dec
mov
sti
les
in
daa
jg
test
notl
and
rolb
aad
adc
push
stos
mov
outsl
pop
xlat
cld
xchg
cmc
xor
push
into
in
cmpl
fsub
jmp
adc
out
mov
popa
pop
dec
push
dec
xor
ljmp
sub
mov
aaa
gs
mov
or
mov
imul
popf
lret
sub
dec
mov
inc
aad
loope
cmpsl
aam
mov
push
pop
jo
rcrl
insb
lret
and
or
jg
sbb
int
jecxz
out
mov
outsb
xlat
mov
and
jmp
mov
sbb
pop
imul
lret
jno
dec
mov
or
arpl
add
scas
cmp
fildl
enter
mov
test
mov
cmpsb
ss
mov
fnsave
sub
fcmove
cmp
js
cmp
xchg
inc
xchg
mov
in
rolb
fildl
push
push
pop
je
dec
push
xor
imul
dec
inc
mov
adc
ja
test
xchg
xchg
mov
clc
xchg
dec
pushf
loope
and
mov
or
inc
loopne
popf
stos
fsubl
movsl
std
mov
cmpsb
mov
out
es
add
in
dec
out
imul
bound
ljmp
das
cmp
fs
mov
inc
popa
repnz
and
add
push
sub
xchg
sub
loopne
mov
and
lea
inc
out
in
xchg
clc
bound
jns
push
mov
xor
stc
fidivs
vmread
pushf
ss
pusha
lods
aad
inc
mov
in
or
add
leave
stos
mov
mov
cmp
stc
std
int3
mov
or
sub
out
pop
jp
push
cmp
scas
dec
sarl
jg
xchg
stos
ljmp
sub
idiv
add
in
mov
cli
filds
bound
pop
int
loopne
push
fsubrs
sbbb
and
jle
movsl
sbb
and
fdivs
fsubl
imul
comiss
stos
andl
sbb
out
out
pop
add
xchg
out
rolb
lret
ja
jmp
sub
mov
cs
lret
ret
in
xchg
mov
test
add
xor
xlat
dec
xor
xchg
repnz
mov
icebp
inc
sbbl
inc
loope
xor
push
aad
mov
push
sub
adc
iret
movsl
cli
es
aam
push
fsubs
xorl
es
nop
cmp
clc
inc
stos
fwait
mov
sub
call
sub
jecxz
cmp
xchg
jnp
outsl
mov
jbe
daa
xchg
ret
ljmp
and
sbb
mov
jo
mov
in
sbb
addr16
jmp
mov
fisubrs
mov
mov
push
mov
sub
sbb
jno
cs
or
icebp
ljmp
mov
mov
inc
les
xlat
or
xorl
in
mov
aaa
addr16
inc
inc
lret
sysret
pop
and
js
sub
fimuls
andb
sti
mov
mov
push
jmp
jecxz
or
jbe
mov
shrb
and
cwtl
and
int
aaa
cmp
notl
cmp
or
dec
dec
in
sub
test
xchg
add
mov
pusha
xchg
cmp
mov
adc
xchg
cs
rorl
adc
dec
dec
and
sahf
popa
cmp
jle
cmp
and
ja
adc
into
dec
pop
cmp
fnstenv
repnz
adc
xchg
sbb
je
and
mov
dec
mov
lds
add
and
call
loope
dec
mov
fnsave
loopne
push
int
lea
nop
push
cmp
mov
ljmp
xchg
cmp
cmc
xchg
inc
pushl
mov
sub
cmpsl
jge
xchg
mov
pop
cmp
and
aaa
push
out
adc
cltd
sub
add
into
out
mov
jae
push
test
repz
leave
xchg
popa
ret
sbb
push
push
movl
imul
or
test
push
leave
push
push
test
push
movsb
sbb
lock
mov
std
push
push
mov
ja
arpl
mov
sbb
adc
rcll
in
and
and
sub
jmp
adc
jae
pop
js
stos
nop
xchg
mov
loop
mov
mov
jno
adc
fxch
jge
aas
aaa
mov
jle
out
loopne
mov
cmp
mov
addr16
mov
enter
pop
jle
into
cmp
ds
fnstenv
data16
xorb
fdivr
adc
sti
mov
or
jnp
mov
jecxz
push
push
inc
cmpb
sbb
add
imul
daa
lods
mov
lea
dec
mov
insl
lods
or
push
xor
lret
cmpl
shlb
mov
lcall
mov
sub
in
sbb
adc
ds
jge
ljmp
pusha
mov
mov
incl
and
jle
pop
ss
pop
outsb
or
or
mov
mov
aam
cmc
adc
pushf
push
xchg
rolb
lret
fstps
icebp
ficompl
push
scas
sbb
movl
int
rcrl
pop
leave
sbb
add
fisttps
popf
jb
sub
and
ljmp
movsl
icebp
ficompl
rolb
fwait
push
loopne
or
adc
lods
and
pop
or
or
out
lock
push
push
scas
gs
mov
xchg
xor
mov
cmpsl
aaa
xchg
lock
pop
test
xchg
lea
test
aam
lahf
xchg
das
xor
mov
cmp
inc
xor
sbbl
xor
rcll
xlat
mov
add
pusha
out
jb
mov
push
dec
lea
sbb
sahf
jmp
add
xchg
je
loop
into
and
mov
sub
loopne
xor
fldcw
outsb
or
xchg
bnd
sbb
pusha
mov
push
lret
xor
adc
add
in
outsl
pop
jmp
adc
and
or
mov
lods
cli
mov
push
xor
sbb
pop
mov
xchg
dec
inc
xchg
das
movsb
out
or
iret
arpl
into
aaa
dec
mov
test
out
cld
mov
and
jnp
sub
jecxz
xchg
popa
pop
clc
adc
jle
sbb
xor
cmpsb
sub
or
cmpl
mov
sbb
int
mov
clc
mov
mov
pushf
mov
xor
shlb
or
xchg
fisubs
push
setnp
adc
je
fwait
xlat
insb
scas
xchg
aaa
mov
fs
cli
stos
push
or
mov
les
clc
test
pop
scas
mov
cld
jmp
cmc
scas
stc
sub
mov
addr16
mov
outsl
add
out
jnp
addb
fisubrl
push
icebp
loopne
ss
movsb
jmp
stos
cld
out
les
cwtl
jge
pop
add
cli
in
pop
jl
pusha
or
in
in
gs
jnp
jbe
dec
cs
rorb
ret
dec
roll
fdivl
mov
ficoms
jns
push
cmp
inc
incl
stos
push
adc
arpl
jnp
lcall
ljmp
xchg
aad
mov
fildll
xor
inc
in
es
ss
xchg
mov
sbb
push
hlt
pop
ja
das
ret
ds
cltd
inc
xor
rorl
sub
push
push
mov
out
cmp
add
rcll
aas
jb
shlb
ja
jne
aad
cmpsl
js
push
pop
mov
lods
in
xor
test
add
fadd
pop
add
push
int
inc
and
dec
ljmp
xor
out
lock
fimull
mov
mov
mov
inc
scas
scas
ss
imul
movsb
cmpsl
pusha
jne
cli
sti
mov
push
lods
push
adc
fs
xor
dec
ret
jns
notl
fiadds
std
pop
mov
je
sub
push
test
dec
int3
pop
flds
push
mov
ljmp
jle
jno
mov
out
fsubr
sub
fstpl
cmpl
bound
ret
adc
in
cmp
dec
pusha
aaa
rclb
pop
test
popf
and
js
aas
loop
mov
outsb
outsb
and
insb
jae
xor
stos
mov
fisubs
stc
adc
jp
mov
mov
pushf
psubsw
cli
xchg
pop
adc
pusha
adc
imul
mov
or
iret
push
jecxz
hlt
add
shrb
pop
dec
lds
out
jl
fwait
mov
sbb
cmpsl
xor
imul
add
push
lahf
xlat
cld
inc
into
sub
jne
repz
push
inc
or
sahf
xor
and
xchg
popa
adc
fists
cltd
movsb
bound
cs
mov
roll
cmp
mov
out
ds
sbb
scas
xorl
mov
sub
lcall
add
shrl
out
push
aaa
iret
inc
cs
ficoml
int3
mov
pusha
shlb
adc
scas
mov
loop
add
mov
or
push
loope
jne
fsubp
insl
push
lock
in
les
jle
xchg
jnp
sbb
xor
hlt
shlb
push
mov
in
cmp
bnd
xlat
mov
or
add
inc
movsb
add
and
pusha
pop
dec
roll
pop
popa
add
adc
mov
das
mov
dec
aam
testl
mov
mov
cld
pop
loopne
or
dec
inc
jo
fsubrl
clc
ja
cmp
cltd
xlat
pusha
push
outsb
push
lds
ficomps
push
pop
std
sub
movsl
nop
dec
movl
jp
dec
icebp
scas
out
mov
ret
cli
fisttpl
xchg
cld
bound
fs
aam
inc
add
in
and
aaa
jp
repnz
test
or
inc
pop
out
inc
loopne
inc
ja
sbb
mov
js
push
xchg
mov
sbb
sbb
scas
pop
jbe
out
push
dec
sub
cmpsl
push
and
push
dec
and
add
mov
sub
pushf
lods
ds
and
les
sub
sub
xchg
mov
mov
fcomp
mov
and
lret
rcl
aam
push
fs
xor
jmp
aas
in
add
icebp
ljmp
jno
sbb
clc
or
outsl
push
xchg
call
cmc
mov
test
testl
sbb
sbb
jge
push
orb
mov
sub
movsb
ja
sbb
insb
incl
pop
icebp
adc
lds
jbe
stc
mov
clc
xchg
fwait
jge
and
mov
inc
cmc
in
dec
cld
mov
jge
mov
push
fstl
push
out
mov
pop
sahf
nop
sub
xor
mov
out
loop
shll
sub
xchg
les
sub
xchg
jnp
cmpl
cmp
or
mov
fsubrs
cwtl
pop
outsb
jle
push
testb
mov
mov
dec
stos
xchg
and
xchg
dec
sti
inc
out
and
decb
pop
ja
outsl
xor
das
jp
push
jmp
mov
cmpsb
cmp
je
cltd
in
fdivrs
stos
cmpsl
cld
pop
outsb
movsl
cmpsl
lds
mov
pop
push
pusha
js
aas
xor
or
in
mov
sti
jne
cmc
insl
cmp
adc
and
or
daa
sti
sbb
push
out
out
scas
sahf
fmuls
das
and
lock
lock
inc
out
dec
mov
pop
jbe
cltd
pop
sbb
js
daa
mov
scas
adc
adc
fiaddl
mov
scas
xor
imul
nop
sub
add
or
sbb
stos
lahf
xor
push
in
test
and
lret
push
pop
sub
fsubl
or
pop
xor
mov
aad
rol
imul
push
movsb
mov
push
or
cltd
lods
outsb
push
and
mov
insb
clc
sahf
cmc
add
int
out
ja
jl
dec
hlt
cld
pop
in
in
jmp
ljmp
test
rcr
scas
cld
jo
outsb
mov
call
and
cmp
sub
mov
jmp
cmc
das
clc
xor
push
and
bound
or
popa
add
insb
adcl
cmpsb
pop
repz
ljmp
inc
xor
xchg
mov
je
mov
inc
xchg
xor
in
ja
outsl
xlat
mov
sbb
aaa
pop
scas
cltd
or
lock
mov
xchg
mov
rcrl
cltd
adc
stos
push
pop
jnp
aaa
xchg
dec
sub
and
lret
icebp
sbb
mov
stos
pop
jb
push
mov
pop
add
out
dec
std
lods
loope
mov
movsl
mov
mov
xchg
jg
stc
adc
cmc
test
fs
cs
ss
push
aaa
jns
ret
fimull
mov
pop
pop
mov
sub
adc
jns
pusha
btsl
adc
add
jp
jae
dec
sarb
addl
iret
xor
cmpsb
jb
mov
mov
dec
icebp
adcb
jae
pop
loopne
mov
lret
xchg
cmpsb
dec
jmp
add
into
fucomip
cld
hlt
daa
test
test
mov
test
negl
daa
dec
aaa
pop
inc
sub
or
xchg
xchg
stc
cmpsl
leave
mov
test
negl
daa
dec
aaa
pop
inc
sub
or
xchg
xchg
stc
cmpsl
leave
mov
test
negl
daa
dec
aaa
pop
inc
sub
or
xchg
xchg
stc
cmpsl
leave
mov
test
negl
lea
xor
mov
mov
leave
add
lret
in
fidivl
test
mov
pop
lock
cmp
or
sbb
jmp
add
jno
popa
mov
mov
mov
pop
icebp
inc
loope
rorl
rcrl
jmp
add
jno
popa
mov
mov
mov
cmp
scas
push
lcall
cli
mov
stos
add
xor
shlb
std
insb
jne
xchg
lods
jno
xchg
inc
pop
jo
outsb
cmp
xorl
enter
or
push
lock
cmp
jmp
pusha
fbstp
jmp
fidivrl
int3
mov
icebp
hlt
adc
dec
cmp
cmp
test
xor
in
mov
dec
mov
mov
int
mov
roll
sbb
popf
fisubrs
cltd
and
push
jecxz
mov
shll
cmp
out
insb
and
test
test
js
sub
mov
dec
test
loope
rorb
rorb
and
adc
add
jno
popa
mov
mov
mov
pop
icebp
sub
cmp
or
jo
in
gs
xor
add
push
iret
and
fsts
adc
sub
sub
mov
mov
lods
dec
fsts
cmp
jecxz
int3
add
sbb
cmp
inc
xchg
cmp
lods
cmpxchg
and
mov
mov
mov
pop
icebp
sub
cmp
or
sbb
jmp
add
jno
popa
mov
mov
mov
pop
icebp
sub
cmp
or
sbb
jmp
push
sbb
and
mov
cmpsb
cmp
adc
fdivrl
divl
sbb
push
inc
cmpsb
call
fdivrp
imul
jl
out
adc
xor
push
enter
out
fstpt
xchg
cmc
push
push
idivl
roll
pop
xchg
addb
sti
pusha
jg
jo
sub
repnz
cmp
paddusb
sahf
xchg
inc
cmc
lods
sub
ret
lds
movsl
mov
in
xchg
xor
subb
xlat
xor
sbb
push
aas
mov
mov
ljmp
mov
je
aad
mov
push
adc
mov
and
cltd
out
outsl
dec
ds
pop
dec
iret
or
xchg
add
imul
lret
mov
clc
pop
mov
sub
sbb
pop
int3
adc
mov
dec
jmp
inc
sub
fcomp
stc
les
pushf
test
jge
leave
mov
cmc
sbb
addr16
aad
bound
sub
pop
loope
add
rcrl
sahf
repnz
xor
shll
xor
or
push
or
fucomi
loope
int
ss
and
sarb
nop
aam
push
sti
imull
jmp
mov
add
test
or
je
sti
sbb
aam
mov
stos
hlt
ja
cmpsb
es
adc
std
mov
divb
cld
xchg
or
dec
inc
call
xor
out
dec
inc
cmc
scas
cmpsb
jle
imulb
xchg
dec
iret
sbb
aaa
shlb
insl
repz
in
cmp
movsl
xchg
iret
arpl
lret
leave
mov
je
mov
push
bound
call
adc
in
stc
and
xchg
adc
mov
pop
mov
outsb
cmp
cs
adc
ss
ret
fnstenv
fldl
test
push
movsl
lret
test
sarb
out
xlat
pop
jmp
shll
xlat
ds
push
lock
scas
scas
test
push
in
xor
loope
adc
xor
push
movsb
inc
mov
in
ljmp
and
mov
sub
mov
xor
sub
mov
lret
mov
jecxz
enter
pop
nop
cs
push
sub
sub
or
ret
jne
inc
mulb
dec
pop
aas
sbb
lcall
ss
push
push
ret
shl
or
xor
push
jb
test
out
xchg
ja
rcrb
cmp
xor
outsl
inc
xor
mov
clc
dec
fwait
jg
add
xor
cmp
mov
mov
xchg
sbb
xor
dec
dec
scas
sub
mov
cmp
bound
pop
dec
pop
push
pushf
push
fcomip
inc
lahf
push
push
xorl
push
sahf
out
stc
pop
cltd
pop
sbb
xchg
xor
scas
mov
mov
adc
pop
into
rorb
ds
fwait
mov
and
pop
out
shrb
xchg
or
sbb
push
pop
lcall
pushf
mov
ret
lea
clc
out
bound
xor
lret
lret
cli
cmc
loope
insb
jle
add
inc
xor
jae
mov
lcall
mov
gs
ljmp
sbb
nop
jne
xchg
int
mov
xchg
sbb
jns
push
xor
gs
sti
jbe
test
imul
xchg
mov
cmpsl
lret
faddl
mov
fisubrs
add
xchg
and
mov
mov
mov
js
scas
mov
add
mov
mov
cmp
daa
or
stos
push
mov
leave
and
fwait
insl
clc
in
test
pop
cwtl
mov
mov
cwtl
popa
out
cmp
mov
lahf
test
and
out
jb
aad
inc
fldl
xchg
test
mov
sub
mov
in
mov
mov
bound
cmp
fisubrl
mov
and
dec
popf
cmpsl
or
push
add
jmp
enter
cmp
push
mov
dec
movsl
aad
int3
jle
jae
pop
mov
jg
mov
mov
adcl
cmp
xor
ds
or
call
add
fldt
scas
mov
es
mov
xchg
imull
loop
ljmp
aas
add
inc
inc
cmp
rorl
call
iret
push
xor
js
xchg
rolb
cmp
lods
add
cwtl
out
sahf
push
inc
dec
add
sbb
pusha
sub
fwait
pusha
mov
loop
cmpsl
lret
xor
ret
add
or
jp
repz
ds
xor
fldt
lcall
cli
push
xchg
dec
xchg
aaa
fimull
fcom
pop
pop
fwait
mov
fsubrl
fwait
outsb
adc
jecxz
outsl
mov
ret
xlat
mov
clc
imul
mov
in
pop
pop
lods
jne
jnp
sbb
lcall
pop
scas
or
les
iret
fwait
sbb
cmc
nop
gs
icebp
jo
and
pop
jmp
inc
lea
cwtl
xor
int
out
dec
outsl
xor
mov
pop
and
out
mov
ret
mov
dec
repnz
jns
jb
ficoml
test
cmp
or
cmp
in
xor
mov
ret
or
push
inc
inc
test
repnz
and
jle
or
loopne
jb
sbb
and
popf
or
and
xchg
aas
popf
shrb
xchg
xor
imul
and
pop
sarb
inc
ds
shlb
or
inc
shrl
mov
scas
jmp
inc
mov
mov
and
sbb
pop
jge
inc
push
outsb
pop
mov
loop
popf
fidivl
push
and
leave
fwait
add
lock
rorb
and
cld
push
rcrl
and
lock
repz
inc
test
gs
push
sbb
and
adc
popf
sbb
in
lahf
dec
mov
das
cmp
imul
adc
push
pop
inc
loop
jno
push
pop
cmpsb
ficoml
idivb
int3
mov
call
test
int3
iret
jne
pop
pop
sub
or
xchg
push
pop
xor
test
push
cli
xchg
scas
subl
push
sub
bound
mov
jl
pusha
sbb
mov
lods
mov
fcompl
inc
lock
cld
loop
adc
cli
dec
fsts
aad
aam
shll
dec
pushf
hlt
andb
or
and
adc
enter
stc
bound
push
jmp
jo
add
bound
hlt
inc
jo
cmovno
adc
mov
adc
mov
fildll
orw
push
and
test
ljmp
mov
sub
test
bound
push
push
das
sbb
push
mov
jns
xchg
pop
clc
pop
fdivrs
xchg
add
mov
cmc
cmp
popf
insb
ja
sbb
inc
and
sub
data16
xor
and
iret
stos
mov
aad
lcall
test
inc
mov
xor
fnstenv
int3
fs
mov
cmp
pop
clc
cs
adc
pop
xchg
and
mov
jecxz
inc
push
push
adc
add
sbb
dec
mull
jmp
cmp
dec
jo
mov
or
mov
add
jne
hlt
test
jne
xor
sbb
mov
icebp
jmp
jg
add
in
sbb
and
mov
rcr
test
cli
and
test
andl
ja
fs
inc
and
hlt
mov
pusha
sbb
mov
add
dec
in
ljmp
scas
lock
js
test
into
mov
sti
mov
gs
test
add
fmuls
adc
out
js
jp
push
out
or
addb
xchg
repnz
pop
mov
add
mov
dec
hlt
inc
imul
out
adc
pop
mov
popf
out
out
cwtl
rcr
outsl
xchg
repz
cs
in
dec
sub
sbb
in
nop
addr16
in
lret
out
or
popf
pop
hlt
ss
sub
hlt
bound
cwtl
ret
insl
andb
clc
pop
lret
hlt
lcall
dec
in
inc
push
fistl
adc
jmp
insb
dec
push
daa
dec
iret
flds
inc
push
sbb
popa
mov
jl
xor
sti
dec
out
ja
add
fdivrl
mov
sub
lahf
dec
sub
cmp
lods
lods
xor
xchg
adc
pop
or
call
vsqrtsd
data16
shlb
xchg
rsm
xchg
cmp
xlat
imul
dec
aaa
iret
cld
cwtl
pcmpgtb
pop
arpl
mov
cltd
sub
pop
cmp
cmpsl
shlb
inc
cli
mov
pushl
lret
push
pop
mov
fwait
xor
push
stos
mov
je
mov
push
jge
ja
scas
test
pop
out
mov
addr16
nop
in
mov
orb
or
xor
jns
shrb
das
jns
ret
jae
cltd
mov
mov
and
stos
xchg
cmp
jmp
mov
idiv
push
sub
lret
f2xm1
inc
je
mov
ljmp
add
lods
sub
call
adc
pop
sbb
cmpsl
lret
stc
nop
xchg
adc
jnp
push
lahf
ja
adc
aaa
push
sub
scas
or
scas
aas
test
aam
jne
dec
xchg
out
clc
sbb
bound
movsb
cmp
cmp
adc
enter
or
loopne
or
test
imul
test
rorl
nop
out
push
mov
jne
xchg
outsl
add
lods
cwtl
mov
ds
push
or
adc
aaa
lret
inc
add
add
ja
sarl
push
fwait
psrlq
insl
or
adc
lods
pop
neg
pop
mov
add
addl
gs
cmp
in
pop
mov
mov
mov
cvtps2pi
sub
and
xchg
lret
or
mov
dec
cmp
push
and
pop
fdivrl
mov
sbb
cs
push
cmp
daa
outsb
repz
sbb
aad
sbb
xchg
aaa
and
movsb
divb
pop
mov
movhps
int3
shrl
pop
repnz
clc
jns
mov
adc
nop
sub
fisubl
fsubr
pop
andb
idiv
inc
es
cltd
mov
shll
adc
mov
test
cmp
movsb
cmp
test
xorl
xchg
cltd
pushf
mov
shl
repz
push
popf
mov
mov
add
push
sub
pop
mov
or
mov
and
adc
sbb
mov
sbb
leave
int3
and
insb
nop
add
fisubl
shll
ret
ret
jp
push
mov
out
add
xchg
test
outsw
and
add
inc
das
aas
lds
and
mov
sbb
ret
jne
testl
mov
sbb
fstpl
ret
sarl
mov
mov
cmpsl
or
insl
inc
pop
pop
mov
jg
ffreep
jbe
mov
inc
xchg
lods
std
lds
rcr
sbbb
loope
shll
ds
inc
repz
arpl
add
push
cmp
push
or
in
adc
addb
dec
fisubrl
add
sbb
sbb
insb
aas
and
mov
movl
add
mov
shlb
mov
add
adc
jnp
int
mov
dec
adc
fimull
insl
ja
mov
mov
and
shrb
xchg
lcall
outsb
adc
mov
fisubs
add
mov
je
pop
hlt
imul
shlb
xchg
cltd
jge
sti
xchg
adc
inc
js
and
or
push
push
sub
cmp
ss
and
dec
xor
adc
mov
cmp
cmc
mov
loopne
fcmove
add
decl
shlb
pop
mov
mov
push
std
aaa
jne
shrl
cmpsb
fs
inc
pop
mov
hlt
cmp
es
sahf
test
mov
lret
xchg
xchg
lcall
idiv
or
pop
dec
leave
adc
dec
jo
stc
test
ror
in
clc
rorl
fdivrl
cmc
call
pop
dec
out
add
in
inc
das
hlt
out
mov
aas
pushf
dec
and
out
ljmp
pushf
jl
mov
lods
ja
xchg
inc
scas
mov
inc
jo
imul
sbb
cmp
loope
pop
out
or
inc
sub
push
cmpsb
inc
and
dec
out
mov
fnclex
icebp
addr16
pop
pop
mov
cltd
push
bound
push
pushf
dec
xor
cltd
and
inc
or
push
lods
rorb
popf
jo
inc
jo
sarl
mov
push
push
int3
xor
push
push
mov
ret
xchg
loope
repnz
and
cmpsb
lret
rol
int
dec
adc
in
loopne
ret
mov
pop
mov
ja
bound
push
cli
insl
das
cmc
es
ss
imul
push
ret
dec
jo
test
out
mov
add
push
jp,pn
lock
lea
sbb
push
aad
jnp
fistpl
jne
scas
jg
movsb
outsl
mov
pop
inc
and
and
aad
xchg
xchg
add
xor
out
xchg
outsl
xchg
xor
mov
out
or
in
imul
mov
imul
jo
addl
jmp
test
test
mov
aad
mov
mov
rorb
pop
lcall
out
push
or
in
rcr
shr
and
sti
xchg
xchg
push
inc
jns
insl
adc
sbb
scas
mov
adc
sbb
mov
ja
mov
sub
cmpl
mov
mov
ss
mov
outsb
mov
lret
jmp
cli
xchg
popa
mulb
lea
pop
ret
push
mov
lods
addl
insl
ja
sti
int
push
sub
insl
mov
push
inc
out
subl
or
push
push
push
mov
pop
add
lcall
dec
jnp
fsubs
jae
xchg
fbld
scas
push
adc
mov
popf
std
jecxz
and
call
sbb
pusha
push
sbb
lcall
sti
fdivl
lret
fwait
xor
inc
mov
xor
cmc
push
xchg
push
lea
je
lods
mov
push
movsb
or
jle
push
pop
std
push
mov
or
xchg
dec
or
mov
out
inc
cmp
cmp
inc
push
or
dec
or
jo
ds
cmp
push
mov
pop
mov
inc
jp
mov
sbb
jg
int3
or
pop
ds
inc
iret
lds
lods
or
ucomiss
mov
int3
cli
pop
adc
nop
shrl
push
add
dec
subl
das
popl
add
pop
xor
stos
pop
in
shrb
rcr
pop
les
movsb
xlat
dec
xor
add
xor
stc
jo
push
aas
arpl
cld
adcl
enter
daa
xor
testl
and
ret
xchg
pop
pop
rolb
loopne
lret
xchg
rcr
cmpsb
pop
jns
outsl
fimull
cwtl
mov
setp
icebp
out
ljmp
push
mov
jg
clc
lock
dec
mov
or
inc
xchg
ret
sbb
and
push
add
lea
shll
dec
dec
popa
movb
jmp
push
outsb
movsb
fs
and
inc
and
or
icebp
cltd
sub
adc
dec
add
ds
cmc
mov
mov
stos
movsb
jnp
sbb
jg
scas
pop
nop
push
stos
xlat
dec
cwtl
lods
inc
aam
in
cmpsl
inc
cmp
iret
inc
sbb
xor
and
rcll
cmp
ljmp
in
sbb
push
cltd
loop
pusha
loop
mov
orl
jmp
fldcw
add
aaa
popf
sub
cwtl
sti
mov
clc
cmp
add
dec
jg
repnz
mov
jne
out
lea
aas
ret
xor
jg
movsb
dec
adc
test
jno
jne
mov
jae
mov
aam
adc
adc
lret
aad
and
push
cmc
ret
sub
jne
xor
daa
repnz
push
pop
aas
shlb
lret
dec
scas
arpl
push
pop
inc
daa
add
aas
inc
lret
negl
push
sub
mov
outsb
fs
ret
jp
das
popf
xor
pop
mov
pop
jb
and
shlb
xor
sub
fwait
dec
xchg
xor
cmp
cmp
ss
mov
loopne
pop
ret
popf
mov
movsl
pop
test
mov
push
arpl
mov
pop
inc
dec
ljmp
pushf
std
xchg
fcmove
cld
push
pop
into
jl
dec
sub
mov
sti
in
rcll
xchg
sbb
dec
xchg
cmp
in
mov
and
and
dec
test
ljmp
sub
xchg
sbb
mov
mov
inc
sub
fwait
inc
xchg
mov
inc
inc
mov
lods
repnz
dec
xor
out
jle
adc
and
cmpsb
sub
inc
sub
test
mov
sahf
push
mov
push
notb
orl
cmpsb
repz
rcll
push
popa
in
mov
adc
sahf
lahf
les
call
mov
in
jne
fisubrl
add
sub
push
jno
adc
getsec
mov
xchg
lods
ljmp
pop
pop
add
mov
daa
xchg
in
lock
mov
aaa
dec
shll
inc
sub
cmpsb
pop
bound
lcall
and
sub
test
adcl
jae
inc
repnz
dec
or
cmp
push
push
pop
mov
sub
repnz
sbb
cmp
mov
push
ljmp
inc
mov
int
cmp
lret
push
mov
bound
iret
sub
popa
lcall
scas
popf
pop
mov
jae
mov
lahf
jmp
cmpsb
or
daa
add
xchg
jnp
xchg
out
jnp
les
jge
pop
jno
enter
in
out
dec
stc
jp
cmp
repz
xor
mov
jnp
lgdtl
cmovle
les
add
sub
fwait
xchg
adc
cmp
in
test
or
sbb
les
movsb
inc
fiadds
push
and
shll
daa
push
sbb
sub
mov
out
ljmp
xchg
rol
popf
inc
lret
adc
mov
cmp
ret
lahf
dec
sub
mull
xor
add
clc
inc
std
test
stos
xchg
jle
iret
sub
mov
add
pop
scas
add
sbb
out
sub
stos
dec
jns
lock
or
ret
inc
and
lahf
jmp
popa
jne
sub
imull
sbb
daa
jne
inc
inc
jae
xor
pop
adc
inc
jmp
jnp
mov
test
mov
jns
dec
mov
lods
adc
cmp
es
xorb
mov
daa
and
and
inc
aam
xchg
inc
outsb
std
sbb
cmp
dec
lcall
and
dec
subl
and
divl
int3
xor
push
xor
dec
gs
lahf
pop
sbb
jp
loopne
gs
bound
iret
jae
fs
leave
cmp
loope,pn
xchg
jb
cmp
push
add
adc
popa
xor
lods
or
sub
stos
push
sub
inc
sbb
repz
jno
mov
das
or
cld
test
cmp
stos
push
jle
adc
test
mov
jae
mov
shll
enter
das
mov
rclb
incl
popa
mov
mov
push
mov
pop
arpl
divb
pop
mov
sbb
cmp
mov
repz
dec
jecxz
fidivrl
xchg
dec
ljmp
push
push
lcall
pop
mov
out
sub
leave
ds
lds
push
incb
dec
jno
push
dec
cmp
es
fs
and
lock
aaa
mov
dec
movnti
pop
iret
and
shlb
fsubl
push
shl
stos
out
test
out
cmp
rclb
pop
xchg
push
sbb
subb
xchg
pop
push
cs
and
lcall
add
out
mov
dec
mov
cli
jl
rcr
por
gs
lea
pop
in
mov
imulb
test
xchg
cmp
or
mov
rcrb
cmp
incb
and
mov
xchg
scas
inc
mov
enter
and
stos
and
icebp
dec
xchg
and
add
jno
popa
mov
mov
mov
pop
icebp
sub
cmp
or
sbb
jmp
add
jno
popa
mov
mov
mov
pop
icebp
sub
cmp
or
sbb
jmp
add
jno
popa
mov
mov
mov
pop
icebp
sub
cmp
or
sbb
jmp
add
jno
popa
mov
mov
mov
xchg
ds
or
inc
sub
daa
and
or
push
lcall
jmp
sbb
jbe
inc
sub
es
ss
imul
mov
mov
ret
sti
mov
xchg
xchg
add
jbe
inc
xor
es
arpl
imul
out
aad
mov
movsb
ljmp
fs
cmp
dec
fnstcw
gs
xor
lret
jns
push
lcall
dec
mov
push
mulb
ret
mov
adc
in
divl
cwtl
imul
lock
testl
or
pop
sbb
sbb
push
verr
push
adc
mov
mov
push
push
and
lret
push
jo
jmp
dec
cmpsb
xchg
movsb
lods
push
fnstenv
push
fwait
push
fwait
sbb
mov
cmc
lret
cmpsb
add
sti
jbe
aas
jmp
jl
aam
movsb
imul
fs
repnz
mov
sub
xchg
imul
inc
sub
es
ss
jb
and
mulb
cmpsb
shll
ja
outsb
divps
pop
pop
sub
inc
arpl
fwait
xchg
out
enter
fcmovnbe
scas
icebp
mov
xchg
je
push
push
push
pop
xor
jnp
cmp
fadds
ljmp
jecxz
ret
addr16
adc
ss
imul
out
idivb
cmpsb
lret
mov
xchg
xchg
sbb
jbe
inc
sub
es
ss
imul
out
idivb
cmpsb
lret
mov
xchg
xchg
sbb
pop
test
pop
xchg
aaa
shrl
mov
push
scas
repnz
mov
add
lds
int3
ja
dec
fadds
js
pop
repz
adcb
cmp
pop
jl
scas
out
int
addr16
xor
mov
ljmp
sbb
cmp
mov
inc
mov
xor
jmp
xchg
inc
scas
add
notb
pop
xchg
lock
mov
cmpsb
xchg
insb
jl
inc
loop
jae
addr16
add
xchg
pop
es
je
sbb
sbb
in
popa
nop
mov
imul
cmpsb
pop
stos
pop
nop
ss
jmp
cs
jmp
xor
and
xor
or
jle
mov
mov
mov
aaa
orb
ret
sub
xor
ret
mov
push
fnstcw
cmpsl
test
sub
loopne
dec
cmpsb
xor
jns
pop
mov
cmpl
insl
cmp
inc
sbb
jle
jae
arpl
cld
ja
push
mov
cmp
inc
int3
jmp
xchg
lock
fsubp
or
mov
or
xor
fnsave
push
dec
movsl
jmp
push
ljmp
mov
cmc
inc
leave
ss
mov
into
mov
lea
pop
icebp
dec
aam
sbb
enter
leave
and
insl
cmc
adc
push
in
sub
cmp
adcb
push
add
mov
mov
jecxz
imul
dec
adc
xlat
mov
mov
or
loop
and
sti
lahf
cltd
pop
das
inc
in
sub
leave
sahf
movsl
mov
jp
cmp
jae
mov
xchg
push
jge
ret
loopne
imul
imul
adc
pop
ret
adc
shl
mov
jecxz
cmp
test
adc
ja
mov
push
mov
mov
pop
and
out
dec
shrb
ret
in
mov
mov
lahf
add
xchg
loop
test
cmc
or
int
es
pop
jb
das
rcr
xchg
xchg
test
dec
ljmp
lea
sti
les
mov
aas
lcall
xchg
ret
dec
stc
cmp
add
and
cmp
xchg
je
jbe
stc
into
pop
add
enter
dec
add
inc
out
jl
adc
mov
cli
add
shll
in
mov
sarl
or
arpl
gs
das
mov
js
pop
cmp
aaa
pop
jo
mov
mov
arpl
pop
arpl
out
ficoms
das
jns
sarb
xchg
lods
xchg
xchg
pop
cmp
call
test
and
cmp
cmp
pop
fldenv
mov
mov
ror
push
js
ret
push
aas
inc
stos
int3
push
dec
mov
loop
lock
rcl
adc
lcall
ret
xchg
or
fildl
mov
nop
mov
adc
jbe
xor
xor
jmp
mov
test
xor
sbbb
dec
cmp
inc
push
sti
ret
inc
cmpsl
lock
adc
mov
popl
scas
idivb
mov
fsubrl
into
lret
pop
xor
sbb
xchg
call
push
xor
lcall
mov
add
push
mov
push
dec
call
js
sub
imul
sahf
adcb
push
pop
mov
mov
mov
in
pusha
mov
pop
stc
call
fidivrl
add
shlb
out
shll
cli
gs
iret
jnp
fs
or
stos
xor
mov
mov
out
fstl
or
aaa
mov
add
or
or
or
xchg
dec
xor
outsb
ret
in
shlb
sbb
sub
and
inc
stos
es
fnstsw
je
or
mov
stos
out
adc
rcr
push
jno
repnz
xchg
mov
jmp
stc
jg
aas
jg
lods
xchg
add
repz
xor
add
xchg
xor
sahf
push
sbb
sbb
cmp
push
xor
test
loope
sti
roll
cmpsb
xchg
xchg
or
pop
out
jecxz
insl
mov
xor
aaa
xor
out
xchg
jp
mov
sbbl
xor
in
test
xlat
testb
push
pop
mov
scas
aam
mov
jg
cmp
mov
mov
mov
add
push
call
jge
mov
mov
test
mov
push
hlt
sti
repnz
insl
or
repnz
int3
sar
test
clc
test
cmp
xor
imul
and
in
movsb
lea
pushf
mov
push
into
jne
sbb
cmp
jbe
mov
fisubrl
popf
and
scas
cmp
call
jg
push
sub
ljmp
in
les
dec
mov
sub
sub
adc
mov
mov
movsl
xor
cwtl
mov
inc
pop
and
add
test
pop
cli
test
insl
adcb
pop
jne
or
dec
push
adc
mov
mov
call
mov
fisubrl
dec
fs
or
push
std
fisttpl
pop
movsl
cmp
cmp
and
jmp
cld
sbb
lds
in
pop
cmp
cmp
mov
fdivrs
pop
xor
lds
jge
sub
out
xchg
enter
jmp
mov
and
repz
mov
dec
xor
push
clc
cmpsl
sub
adc
push
and
mov
in
ret
mov
cs
xchg
mov
std
mov
les
cltd
cld
pop
inc
xor
lock
or
outsb
rcll
pop
and
repz
push
sub
xchg
mov
jg
sbb
pop
sbb
pop
pop
loope
bound
xor
outsb
inc
fnsave
sbb
dec
int3
sahf
jbe
inc
fsubs
cmp
mov
lcall
sbb
jno
in
movb
imul
les
jne
pop
push
imul
shll
jnp,pn
cwtl
fstpt
sub
ds
or
loopne
cmpsb
cli
pop
sub
adc
sbb
mov
xchg
jns
mov
add
aaa
test
pop
roll
pop
aam
ja
cmp
xchg
push
aaa
test
sub
arpl
mov
lods
mov
sbb
xor
imul
cmp
inc
fnsave
iret
jbe
rsqrtps
pop
pusha
sahf
dec
push
mov
or
xor
push
in
mov
popf
fwait
cmc
fcoms
or
fwait
inc
call
clc
sbb
or
inc
ljmp
pop
ret
test
and
enter
fs
mov
test
roll
aaa
outsl
jns
fndisi(8087
std
test
jne
mov
mov
mov
lret
jl
jl
pop
popa
mov
popa
cwtl
xor
adc
cmp
aas
mov
dec
cld
gs
push
outsb
out
cmp
inc
shrb
sbb
cmp
mov
negl
std
outsb
mov
push
adc
leave
in
es
xor
repnz
pop
push
lods
xchg
pop
rol
iret
xchg
shlb
sbb
jmp
enter
sub
popa
mov
jno
push
inc
hlt
jg
adc
insl
icebp
push
cmc
xchg
cmp
sbbb
stos
mov
fisubl
xchg
ljmp
xchg
and
aaa
xchg
jmp
lods
push
jp
hlt
cmp
mov
jl
aaa
popf
add
sahf
mov
jge
jb
es
jnp
xchg
ret
cmpsl
in
adc
popf
pop
mov
pop
cmpl
adc
xchg
ljmp
cmpsl
cmp
shlb
lret
in
mov
xor
pushl
sub
mov
shl
mulb
push
cld
jo
xchg
xor
out
mov
es
in
movsl
jbe
lds
cmp
xchg
push
in
xchg
xchg
lcall
sahf
xor
aad
mov
pop
xchg
leave
push
cmp
sarb
and
lock
icebp
cmp
jns
and
mov
sub
xchg
or
jae
shlb
jno
and
pop
iret
xchg
sarb
jno
jl
adc
push
mov
iret
dec
jg
stc
cmpsl
andb
inc
inc
and
mov
and
jne
sbb
rclb
xor
leave
push
jb
incb
pop
sar
ret
add
imul
sub
nop
jmp
fcompl
or
inc
push
stc
ret
in
imul
pop
in
fwait
leave
mov
dec
xor
or
lcall
inc
fiaddl
xor
jecxz
outsl
pop
loopne
bound
mov
fidivs
adc
notb
movsl
scas
jl
insb
into
rclb
or
mov
loop
sbb
mov
or
push
inc
jmp
jbe
lods
lcall
sbb
add
cmp
mov
movq
mov
out
call
xor
xchg
les
push
inc
and
data16
sbb
jne
push
insl
adc
sbb
cmp
sets
shll
mov
sbb
punpcklbw
xor
scas
std
pop
dec
pop
xchg
add
loop
push
pop
call
mov
pop
jge
mov
hlt
shl
xor
cmp
sbb
push
inc
xchg
fisubrl
mov
cmp
loopne
inc
idivb
cmp
aam
gs
dec
dec
dec
aad
adc
xchg
xor
inc
xlat
sub
sbbb
mov
lret
mov
fcom
repz
push
loopne
enter
sbb
ret
dec
in
xchg
bound
mov
ds
bound
jbe
or
shll
adc
into
cmp
push
out
xchg
xchg
push
mov
xchg
mov
adc
mov
inc
adc
mov
mov
pop
mov
frstor
pop
scas
mov
fstl
mov
insl
push
out
inc
mov
dec
aad
inc
rorb
xlat
inc
add
xor
ret
js
decb
push
out
popf
lea
dec
cmp
inc
popf
in
sub
sub
mov
jmp
adc
mov
add
popf
push
sti
sbb
sahf
mov
xchg
push
push
push
and
ja
ss
xchg
jmp
xchg
add
adc
inc
sub
clc
dec
pushf
xor
rorb
daa
ret
movsl
lods
mov
dec
xor
jecxz
subl
repnz
push
inc
mov
push
hlt
or
adc
mov
adc
addr16
pushf
into
lret
sbb
jg
mov
or
out
mul
loopne
push
mov
mov
mov
enter
cld
imul
push
fidivrs
popa
push
add
and
push
fldenv
sbb
popa
rol
daa
push
in
xchg
add
cli
lret
inc
and
outsl
dec
jnp
int
mov
or
ficompl
imul
mov
fstps
dec
ljmp
xlat
jb
out
ljmp
xor
cmp
insb
add
call
das
aam
or
push
mov
adc
repz
jo
aaa
ret
xlat
jl
xor
int3
sub
cmp
mov
cltd
jb
push
out
loop
inc
je
fst
hlt
enter
cs
icebp
popa
je
mov
fwait
imul
sbb
or
xchg
inc
pop
lds
int3
xor
dec
xlat
push
xchg
sbb
outsb
inc
bnd
cmc
test
addr16
jg
dec
xor
pop
push
lret
cld
mov
int3
push
jmp
cld
ljmp
ret
and
jg
repnz
fmull
mov
inc
jo
jb
addr16
lods
cmpsb
xor
push
push
lret
mov
mov
popa
or
loopne
lods
repz
gs
jle
cmp
push
pop
pop
jns
fwait
fwait
and
sub
push
insb
sahf
mov
mov
pop
loopne
push
cmp
mov
xor
cmpsb
pop
aaa
into
xor
jle
push
inc
mov
ds
or
movsl
pop
movsl
sub
addr16
push
or
loop
fiadds
aad
rorl
jg
sub
xor
and
xchg
ds
jbe
sbb
mov
mov
and
int3
ficoms
aam
jge
dec
xchg
rol
cmp
xor
xchg
loopne
fsubrs
ret
repnz
mov
push
cmp
insl
arpl
sbb
pop
and
pop
push
repnz
imul
add
in
mov
les
lea
mov
loope
dec
lea
dec
push
mov
roll
sub
adc
dec
negl
sbb
jne
sub
arpl
int3
fadds
mov
push
ds
leave
add
mov
cltd
pop
push
cmpsb
stos
sbb
fisttpll
sub
pop
fldcw
int3
aaa
stos
dec
bound
loopne
inc
js
testl
push
daa
ret
mov
aam
mov
imul
shrb
in
in
push
mov
imul
scas
jns
mov
testb
rorl
jo
out
mov
mov
test
popf
lret
mov
cmp
repz
nop
out
cmp
call
push
mov
addr16
xchg
fs
out
movsb
sbb
test
repnz
dec
lock
dec
xor
andb
sub
and
mov
lock
adc
popf
mov
negb
sbb
aam
push
mov
fstl
push
ror
cltd
ficoml
imul
push
call
xchg
jnp
push
jg
mov
xor
bound
or
or
out
fnstenv
sub
shll
jb
dec
insb
jmp
icebp
xchg
mov
sysexit
in
scas
div
pusha
cmp
scas
mov
push
daa
int3
es
mov
in
fstl
ficoml
insl
mull
cwtl
hlt
or
popa
faddl
cs
pop
mov
jb
sti
sbb
xor
sub
push
inc
push
fwait
rolb
push
mov
adcb
fisubrs
dec
shll
or
adc
lcall
add
add
popa
inc
adc
sbb
mov
mov
xchg
stc
ret
push
and
jo
add
jne
pusha
or
mov
jmp
arpl
arpl
or
aam
arpl
dec
movsb
scas
pop
cld
es
xchg
xchg
pop
enter
jge
jne
in
push
fldt
mov
mov
adc
imul
xor
je
fcompl
lds
stos
cltd
outsb
fwait
mov
xchg
ja
pusha
je
aam
lods
imul
pop
jno
js
shrb
imul
push
sbb
in
xchg
push
les
pop
mov
sarb
push
push
loop
and
xor
arpl
push
ja
inc
and
js
mov
dec
push
inc
repnz
loop
loopne
pusha
and
into
dec
push
add
aad
and
ret
jno
add
movl
push
ja
inc
leave
call
adc
iret
fstpt
dec
imul
test
es
iret
sbb
inc
movsl
push
jmp
xor
leave
adc
mov
dec
dec
in
mov
inc
push
aam
int
xor
jp
and
jle
daa
addr16
xchg
mov
add
inc
nop
hlt
xorb
mov
push
pop
imul
iret
sub
and
push
push
cmpsl
and
jg
pusha
add
pusha
aas
inc
fsubrs
adc
cmp
jb
insb
cmp
xchg
aas
fldenv
into
lret
aam
jg
or
inc
fistpl
sarb
mov
cmp
out
pop
xor
and
repnz
adc
leave
pushf
push
mov
mov
out
mov
cmp
stc
repnz
adc
idivl
in
dec
loop
xor
leave
sbb
cmc
dec
mov
mov
scas
pmaxub
dec
pop
mov
sahf
in
mov
scas
cmp
adc
or
xchg
push
jo
dec
jmp
or
pop
dec
daa
jo
pop
push
inc
repz
or
pop
xchg
movsl
jbe
add
inc
lock
add
inc
lods
mov
out
stos
rcrb
dec
pop
push
mov
adc
aad
or
push
rcrl
jl
lods
fmulp
jmp
push
jle
mov
incb
cmp
out
hlt
enter
mov
xchg
jmp
clc
in
test
inc
ds
rol
xchg
data16
add
jmp
add
outsl
jno
loopne
mov
sarb
ss
mov
lea
les
outsb
xor
pop
insl
hlt
dec
das
xchg
dec
sub
cmpsb
ret
pop
add
lret
lds
inc
out
mov
jnp
dec
icebp
loopne
stos
add
dec
xor
fidivrs
outsb
push
mov
ss
insl
das
xchg
pop
lahf
imul
ljmp
cmp
sub
movsb
mov
push
cmp
ss
xchg
push
mov
sub
daa
push
test
out
aaa
in
push
push
into
shrl
nop
push
fistl
or
push
pop
cmp
dec
push
cli
movlps
movsl
xchg
aaa
mov
pop
or
test
pusha
pop
pop
cmp
lock
inc
divl
mov
mov
pop
jae
enter
adc
lock
movsb
je
in
js
out
std
cmp
in
xchg
das
dec
jno
fldcw
int
sarl
xchg
inc
movsl
xor
dec
xchg
test
stos
inc
repnz
dec
loope
orb
pop
loop
sbb
cld
mov
decl
mov
rorl
data16
or
and
das
xlat
incb
add
mov
mov
cmc
mov
pop
push
out
sub
fcmovne
popa
fsubrl
xchg
inc
fnstenv
mov
mov
incb
add
fsts
xchg
inc
push
push
or
mov
adc
adc
sbb
inc
jae
arpl
and
sbb
pop
movsl
mov
out
pop
add
and
and
test
or
dec
out
xor
jnp
stos
test
jecxz
add
add
fistl
popf
cmp
jne
in
ffreep
movsl
xchg
push
std
push
in
adc
sub
pushf
aad
aam
sbb
pminsw
icebp
xchg
std
mov
push
add
lds
test
and
fnstcw
test
jge
adcl
movsb
pop
mov
inc
das
cltd
pushf
hlt
push
pop
xchg
inc
gs
xorb
roll
sbb
pop
in
mov
pop
adc
push
inc
hlt
movb
and
push
iret
lcall
lret
adc
inc
das
mov
ss
cmp
xor
aaa
das
int3
or
mov
mov
jne
sub
repnz
pop
add
pop
or
shl
repz
xchg
je
cmp
out
into
adc
or
mov
push
insb
jg
mov
call
popa
imul
and
xor
add
cmp
idivl
lret
xchg
ret
fstpl
pushf
out
pop
xor
in
fbld
push
sbbl
jle
addr16
adc
xorl
fimull
sbb
je
ret
sbb
push
inc
stos
mov
inc
xor
jno
cwtl
sbb
imul
add
jl
insb
xchg
inc
push
jmp
sub
sbb
dec
add
dec
mov
or
sub
jo
push
cwtl
in
shrl
cltd
test
ud0
sub
out
jp
shll
inc
sub
mov
mov
jb
mov
or
cmp
in
fnsave
rcr
out
orb
add
xor
push
add
stos
xlat
xchg
loope
mov
cmpsb
push
fiaddl
cltd
sub
daa
xlat
repz
test
dec
mov
dec
dec
addr16
sub
into
and
es
adc
add
scas
enter
test
sub
sbb
jnp
das
or
inc
adc
test
adc
push
add
cmpsb
xchg
imul
mov
mov
imul
fisubrs
adc
fdivp
cli
pusha
push
mov
pop
mov
scas
adc
adc
dec
into
and
mov
outsl
loope
ja
sbb
mov
jbe
fnstenv
rorl
aas
iret
cmp
lret
sub
aas
test
out
pop
iret
add
mov
test
mov
popf
les
or
cltd
mov
push
repnz
sbb
inc
pop
xchg
cmpsb
rcrb
dec
cmc
and
inc
sub
es
ss
imul
out
idivb
cmpsb
lret
mov
xchg
xchg
sbb
jbe
inc
sub
es
ss
imul
out
idivb
cmpsb
lret
mov
xchg
xchg
sbb
jbe
inc
sub
es
ss
imul
out
idivb
cmpsb
lret
xchg
xchg
sbb
jbe
inc
sub
es
ss
push
jmp
fs
pop
adc
stos
mov
add
adc
dec
inc
pop
push
imul
js
dec
xor
lret
aam
icebp
stc
in
test
mov
inc
pop
push
imul
add
leave
leave
jmp
negl
mov
pop
pop
dec
imul
or
leave
cltd
pushf
pushf
orb
rcr
cmp
add
adc
int
aam
mov
add
repnz
jecxz
testb
int3
movsl
inc
cmpsb
fists
jne
out
fcmovbe
lret
push
sub
mov
or
in
lret
call
dec
mov
xor
add
sub
jecxz,pt
pushw
int3
aad
jl
mov
adc
movsl
mov
stos
stos
lcall
jo
cmp
or
push
js
mov
xor
in
lcall
aad
mov
enter
fs
sbb
jne
mov
jmp
xchg
mov
and
mov
xchg
or
lret
cmpsl
mov
inc
imul
sub
fxch
jmp
popf
cltd
lea
inc
cmp
das
add
adc
je
dec
mov
aad
loope
nop
pavgb
xchg
int3
lret
aas
sub
cmp
push
cmp
insb
add
jl
mov
cmp
jle
cld
xchg
rol
shrl
pop
push
das
add
dec
sbb
leave
vpmullw
in
cmc
mov
mov
push
imul
adc
leave
vpmullw
in
cmc
mov
mov
inc
hlt
loop
ja
mov
mov
cmpsb
sub
or
std
xchg
mov
xchg
call
mov
popa
mov
aad
cmp
out
gs
fists
in
jae
pop
adc
insb
xchg
cld
adc
ret
enter
lea
or
pop
mov
movsb
sub
adc
in
xchg
shr
outsl
jmp
into
jmp
or
add
mov
jge
popf
inc
pop
fs
in
rclb
popa
or
icebp
xor
iret
mov
mov
popf
add
jno
sub
and
shl
xor
and
daa
les
movsl
xchg
lahf
inc
pushf
dec
fsub
adc
movsb
into
fwait
inc
ret
sbb
pop
mov
pop
loop
or
lods
ret
mov
mov
inc
jo,pn
push
in
shrl
repnz
mov
in
and
unpcklps
cmpsl
jnp
pop
adc
inc
inc
push
jnp
jns
hlt
inc
cmp
iret
and
movsb
lret
call
imul
inc
xchg
fidivrl
pop
push
aad
push
sarl
xor
loop
inc
xor
jp
test
add
pop
sbb
mov
in
or
inc
cs
ds
pop
xchg
out
iret
pop
lock
roll
shll
insl
popa
out
stos
inc
cmp
ret
and
xchg
mov
je
push
je
jl
mov
sbb
sub
mov
ficompl
dec
cwtl
lret
cmpsl
adc
jmp
xor
or
jno
cmp
jmp
js
pop
aaa
incb
movsb
dec
mov
mov
aad
push
or
repz
push
icebp
out
aas
dec
or
lock
push
mov
push
inc
pop
enter
sbb
jmp
xor
out
mov
fcompl
push
dec
add
jne
cli
enter
pushf
xor
sub
ror
pusha
jnp
add
mov
pop
inc
in
and
test
cmpsb
pushf
mov
shlb
std
jge
push
push
loop
cmp
ret
nop
inc
xor
pusha
sub
xchg
cmp
inc
xor
mov
inc
pop
mov
sarb
test
or
out
or
xor
pop
push
jecxz
jae
sub
stos
in
cmpsb
jne
dec
mov
jl
scas
cmpsl
pop
fs
xor
mov
jne
out
insb
lret
popf
adc
fwait
out
mov
clc
cmc
adc
or
ss
lahf
mov
inc
outsb
inc
stos
xchg
addr16
pushf
push
inc
sahf
insl
dec
popa
dec
xlat
leave
xor
ret
int3
scas
mov
sub
inc
jp
inc
pop
arpl
sbb
sub
in
dec
jmp
hlt
push
lock
add
add
and
sub
mov
into
lock
in
sub
arpl
xchg
scas
xlat
ds
add
adc
test
pushf
adc
bound
sub
jne
shll
ja
std
and
mov
xor
jg
push
xchg
add
pusha
mov
lds
loop
mov
cwtl
add
out
and
in
dec
and
sahf
dec
adc
push
pop
cmp
xchg
xchg
jge
enter
rcr
bsf
negl
fisttps
sahf
push
ds
das
mov
out
pop
movsb
leave
ljmp
jns
mov
lods
or
lock
loop
sarb
das
xor
and
cwtl
test
pop
or
imul
outsb
add
xlat
ret
xor
icebp
sbb
cli
mov
pop
nop
ljmp
scas
rorb
push
jae
popf
in
sub
das
mov
pop
arpl
mov
add
lods
movsl
cltd
xchg
loopne
sarb
mov
cmp
dec
or
jg
fs
cmp
les
test
aam
mov
lret
add
lahf
pushf
outsb
sub
lods
js
clc
push
cmpsb
lds
mov
ss
xchg
push
pop
dec
in
push
push
inc
add
cmp
insb
sbb
add
dec
fst
in
imul
add
insl
stc
daa
cmp
add
jecxz
insl
insl
xor
dec
pop
sarl
ret
jns
push
push
aaa
rolb
or
push
adc
repz
push
and
rcrl
sbbl
inc
scas
pop
mov
test
lods
ja
stos
in
jecxz
data16
cs
rcr
xchg
inc
out
stos
test
rorl
inc
fwait
stos
sti
jmp
scas
cmp
ret
out
sub
insb
gs
ret
jle
xchg
mov
adc
pusha
bound
mov
xor
mov
in
jns
xchg
cld
push
rorl
push
sub
mov
cmp
adc
jns
test
cmp
cmpsb
jmp
das
lods
nop
incb
mul
inc
test
adc
mov
mov
subl
cltd
cmp
cs
pop
popf
lds
leave
hlt
cmp
xor
add
or
sbb
push
stc
aas
pop
or
mov
sub
cmp
aaa
add
pop
mov
pop
movl
dec
jge
out
out
jb
std
add
inc
push
sbb
movlps
jae
shrb
and
test
xchg
push
jg
stos
loope
in
shrb
ficoml
les
and
xchg
nop/reserved
nop
mov
bound
sbb
dec
jg
in
imul
sub
mov
jo
aaa
enter
dec
loopne
jbe
ja
jne
sub
stc
es
and
repz
aaa
pop
jge
enter
in
inc
push
mov
lahf
mov
aad
cwtl
jp
call
aas
mov
sbb
outsl
in
sahf
ds
cmp
inc
roll
sbb
cwtl
loop
outsl
mov
jecxz
pop
ljmp
ja
adc
add
and
out
xorb
enter
cmpsl
cltd
adc
imul
push
mov
wbinvd
push
in
xchg
mov
lods
xlat
add
jne
mov
mov
int
sub
roll
pop
jae
scas
cmp
jecxz
cwtl
cs
mov
stc
jns
cs
push
push
ret
adc
adc
sbb
jecxz
add
je
rclb
insb
ror
les
daa
mov
sbb
in
sbb
jge
jns
das
scas
lcall
lret
dec
cli
roll
sub
lea
lahf
sar
imul
push
push
stc
jo
or
sub
pop
jo
xor
mov
or
and
mov
jno
mov
dec
in
push
pop
sub
mov
push
jg
sbb
aad
adc
dec
cltd
sub
lock
fldl
inc
mov
and
mov
mov
xchg
mov
movsl
add
bound
sub
cmpsb
jno
sub
xchg
and
or
dec
je
mov
lds
xchg
dec
jmp
push
or
outsb
fisttpll
add
call
jo
jecxz
rcll
lock
push
stos
repnz
cmp
outsl
out
stos
jl
dec
fisttpll
xor
test
jp
js
outsb
inc
mov
cld
mov
dec
je
and
dec
jno
cli
push
xchg
mov
dec
dec
lods
out
or
lods
push
mov
dec
int
stos
mov
dec
cmpsb
repnz
push
pushf
dec
cmp
xor
fimuls
aas
dec
add
into
push
add
lock
mulb
cmpl
das
enter
fmull
shl
in
cmp
mov
mov
lea
sbb
inc
inc
repz
aam
mov
arpl
icebp
sti
aad
int
xchg
mov
push
in
sahf
xchg
nop
xchg
jae
dec
shl
pusha
test
pop
rorb
ficoms
jecxz
cmp
push
pop
mov
xchg
push
cmc
add
sub
mov
cli
stos
xlat
and
inc
push
mov
mov
add
inc
xchg
shll
cmp
jl
cltd
out
insb
jns
sbb
int3
add
rcll
insb
jbe
jb
shl
movsl
movsb
mov
dec
and
xchg
lods
loope
sub
or
fldcw
push
dec
sub
jl
in
and
das
xor
andb
mov
xchg
imul
nop
cmp
push
mov
fildll
mov
fidivrl
movsl
rcll
jb
push
in
popa
mov
push
icebp
pop
inc
mov
popa
lds
jo
pop
insb
or
or
sbb
and
jae
push
dec
in
dec
adc
inc
fwait
scas
dec
mov
xchg
cwtl
pop
xchg
pop
fs
in
mov
mov
jg
xchg
es
ds
outsb
lea
dec
lods
adc
lret
out
idivl
push
subb
mov
test
in
gs
popf
aad
scas
pop
in
mov
xor
stos
mov
push
cmp
and
push
imul
lods
popa
adc
inc
dec
int
xchg
das
iret
insl
bound
addr16
frstor
pop
xlat
pop
addl
pushf
pushf
mov
jg
push
lea
pop
fsubrs
loop
inc
adc
xchg
mov
mov
pop
bound
sbb
inc
or
inc
xchg
fdivr
test
lea
pop
sti
inc
and
adc
out
sub
jle
push
stos
push
gs
jmp
daa
addr16
mov
add
cmp
icebp
push
das
fwait
jno
cld
push
out
shl
mov
inc
cltd
cmp
andb
sbb
cmp
fists
out
xor
sar
out
xor
mov
lods
loope
and
movsl
dec
sbb
push
outsl
push
pop
popf
rcrb
inc
addr16
mov
gs
rorl
dec
cwtl
adc
mov
and
mov
sub
insl
into
add
pop
xchg
push
and
out
into
sbb
in
icebp
popa
fistpll
stos
lret
add
out
jbe
arpl
clc
repz
das
aam
and
and
mov
clc
adc
mov
xor
inc
fs
pusha
mov
std
hlt
ja
loopne
mov
lock
adc
lret
adc
or
dec
jecxz
nop
repnz
mov
push
mov
pushf
xchg
mov
jl
inc
std
push
insl
cltd
push
movsl
ret
fadds
pop
rcl
stos
mov
xchg
cltd
ljmp
cld
loop
or
cmp
test
cmpsl
lea
mov
movlps
fisttps
shl
sbb
xor
mov
out
rorb
jp
push
jge
xchg
jbe
inc
jl
add
and
ret
xchg
pop
imul
imul
sbb
and
sbb
fsubrs
test
mov
sbb
pop
or
mov
bound
inc
addr16
lea
out
ja
sbb
mov
xor
insb
cmp
out
ret
or
inc
shll
mov
popf
adcb
ret
push
orb
adc
cmp
lds
insb
xchg
mov
push
fs
icebp
ds
pop
out
cltd
orl
aas
or
xor
mov
jo
pop
movsb
cmp
sar
test
mov
push
cmp
outsb
movsl
addl
sub
sub
addl
cmp
cmp
fisttpll
cmp
repz
test
adcb
movsl
mov
aam
scas
in
jg
and
js
cmp
adc
push
sbb
mov
imul
frstor
inc
pop
adcl
lahf
inc
cltd
inc
lods
push
sahf
cmp
mov
shlb
mov
jge
cli
and
movsl
test
sub
push
daa
orb
pop
mov
imul
ja
cmc
fsubrl
in
mov
mov
dec
icebp
dec
adc
xlat
std
sub
push
out
jne
dec
in
cmp
sbb
mov
pop
hlt
push
mov
xchg
xchg
inc
addl
jbe
dec
push
scas
ret
test
sub
adc
data16
and
or
adc
dec
adc
pushf
jg
push
mov
dec
push
lea
mov
icebp
insl
into
das
sbb
neg
push
clc
in
fsubs
and
rorb
xor
xchg
sti
add
idiv
mov
add
xor
jp
in
subb
mov
mov
inc
xor
insb
push
outsl
jnp
aad
jns
shrb
mov
dec
aad
or
into
mov
xchg
testl
ret
mov
cmp
inc
aaa
loope
sub
and
stos
mov
mov
mov
adc
or
sbb
jno
aam
loop
scas
mov
pop
enter
icebp
in
and
sahf
cmp
lcall
pop
mov
lret
das
sub
in
mov
jno
js
mov
adc
jnp
and
out
loope
adc
dec
shlb
mov
in
add
les
stos
lahf
sub
jb
xor
movsl
adc
sti
dec
ret
sub
xor
or
ficompl
repz
mov
jg
fisubrs
outsb
out
pop
and
lds
fistps
jo
int
push
cmp
sahf
out
cmp
stc
rorb
aad
pushf
adc
lcall
orl
pop
or
insl
inc
decl
filds
mov
cli
mov
in
cmpsb
imul
mov
ficoms
out
jge
aas
nop
cmp
push
push
inc
iret
lods
sub
in
sbb
lret
inc
cwtl
add
paddq
adc
lret
aaa
int
cmpb
add
test
rcl
pop
dec
mov
ja
loopne
xor
aas
fs
sbb
stc
jmp
push
roll
test
xchg
outsb
jo
inc
adc
mov
sub
movsl
jecxz
add
and
cmp
pop
cmc
sbb
mov
data16
out
adc
pop
mov
fmuls
pusha
mov
stc
or
or
jb
push
xchg
jle
shlb
fwait
les
sub
cmp
lock
or
xor
insb
pop
adc
adc
sub
and
lock
lods
fs
jbe
push
lods
sti
insl
cwtl
or
pop
xor
pop
mov
int
jbe
dec
pop
mov
lcall
xchg
stos
rol
int
push
mov
inc
sub
mulb
adc
push
dec
sbb
pop
sub
gs
cmp
xor
and
jnp
jae
int3
inc
lods
js
ja
adc
nop
push
push
fwait
lcall
loopne
add
dec
fisttpll
int3
jle
jp
or
dec
stos
mov
lea
das
mov
sbbl
arpl
adc
cmp
test
jmp
enter
jp
push
adc
lret
or
push
pop
adc
cwtl
mov
jo
jbe
mov
sbbl
sbbb
sbb
cmpsl
popf
pop
cltd
mov
pusha
mov
dec
push
mov
js
les
sbb
arpl
rorb
push
push
adc
mov
xchg
iret
jae
mov
push
pop
repz
addb
pop
dec
push
clc
xor
adc
pushf
push
sub
mov
add
xchg
fisttpl
inc
addr16
push
movups
mov
xor
int3
pop
stos
adc
cld
imul
mov
pop
xchg
clc
push
fs
not
pop
movsb
mov
add
cmp
aas
int3
mov
outsl
ja
jp
lods
testl
movb
ret
inc
scas
sbb
sbb
push
nop
sbb
into
cmpl
movb
ret
mov
leave
jbe
cli
pop
icebp
outsb
insb
out
out
mov
ds
sbb
lahf
sti
push
mulb
or
lret
sub
pop
test
mov
inc
mov
repz
inc
fnstcw
cmc
int3
push
jne
fidivrl
test
xchg
push
xchg
inc
xchg
mov
or
mov
loope
enter
sbb
sbb
insb
xlat
push
cld
jg
xlat
sub
in
add
ret
out
fidivs
xorb
cmc
sbb
mov
stc
lods
enter
ja
push
rorl
jo
mov
cld
push
idiv
out
jnp
js
aaa
mov
mov
or
movsb
push
push
mov
mov
and
gs
sbb
insl
mov
mov
adc
jbe
fstpl
push
adc
or
push
cmpsl
imul
ret
insl
and
push
enter
and
xor
unpckhps
out
test
outsb
xrstor
mov
add
push
fists
dec
mov
mov
jbe
aas
xchg
movsl
fimuls
ss
push
push
mov
xchg
mov
push
lcall
push
mov
sbb
mov
fdivrs
loope
push
lock
dec
lods
jnp
fidivrs
dec
sbb
test
fsubrs
loopne
icebp
cld
xchg
and
std
sbbl
loop
mov
jo
adcl
out
mov
dec
mov
mov
cwtl
xchg
xchg
and
repz
dec
insl
or
mov
leave
pop
daa
sti
ret
imull
sbb
cmpsl
add
xchg
adc
cmp
jns
imul
push
popa
test
push
mov
xor
add
or
cmc
add
or
aas
into
sti
adcl
mov
sbb
xchg
call
loopne
decb
push
lock
inc
aaa
out
in
add
xchg
je
inc
mov
call
repz
inc
dec
adc
xor
roll
cmp
loop
and
cwtl
ljmp
cmpsl
sbb
and
mov
aaa
jb
lret
cltd
fistps
ds
in
rcll
push
wbinvd
pop
pop
aas
add
movl
cld
add
fistps
push
inc
xchg
dec
cs
xchg
mov
ljmp
jae
jae
lretw
jp
pop
adc
xchg
sbb
in
sub
add
aaa
bound
movsl
fs
push
and
jb
aam
inc
ret
pop
cwtl
aam
popf
shr
xor
fnstcw
sub
and
or
shll
out
out
dec
sub
les
cs
fs
lock
icebp
movsl
clc
dec
inc
lods
jp
push
insl
and
pop
dec
push
into
fidivrl
jo
lahf
push
push
imul
rclb
hlt
jno
jae
adc
ret
pop
in
dec
rcr
mov
xor
cld
daa
jno
lret
ljmp
mov
jmp
cmp
and
or
add
jo
jno
in
sbbl
cmc
inc
les
dec
das
sahf
out
mov
mov
enter
pop
pop
daa
xor
sbb
fs
cvtdq2ps
mov
sbb
nop
repnz
push
sub
dec
fildll
jb
xchg
rcrl
or
push
push
and
xorl
in
xor
pop
inc
lock
lock
test
or
cmp
scas
ficompl
out
push
mov
push
pop
mov
sub
xchg
fwait
pop
jne
iret
pop
faddp
fisubrs
popa
jne
cs
pop
sbb
xchg
cmp
test
cmp
aas
xchg
xchg
xor
mov
inc
adc
shl
and
lods
arpl
mov
cmp
cmp
xlat
jle
pop
pop
or
jge
and
jno
cmpl
fistl
mov
add
cltd
cs
sbbl
jl
vmovntps
mov
xor
sbb
mov
test
fnstenv
mov
push
in
mov
dec
mov
je
lret
loopne
iret
xor
push
and
ss
movsl
mov
mov
jb,pn
clc
out
fisubl
test
pop
js
hlt
xor
addr16
xchg
sub
sar
push
or
pop
add
fisubs
rclb
in
test
addr16
mov
add
scas
in
stos
aam
push
jecxz
push
lods
orl
popl
mov
js
mov
ret
sbb
and
jl
loopne
insl
in
pop
dec
push
loop
pop
push
pop
in
rcr
out
jne
nop
push
adc
cmpsb
addb
enter
icebp
rclb
inc
push
mov
and
cmp
mov
xor
aas
cwtl
insl
mov
and
mov
xor
inc
push
outsl
imul
inc
xlat
addl
roll
fisubs
lods
in
xchg
in
mov
or
leave
xor
dec
mov
mov
push
push
andb
aaa
dec
push
dec
es
addb
push
push
and
dec
jne
movsb
pop
cmc
pop
adc
inc
and
loopne
xor
inc
push
lock
bnd
pop
call
fwait
cmpb
stc
dec
mov
shll
mov
arpl
icebp
add
stos
or
sbb
inc
iret
in
jmp
mov
scas
arpl
call
jns
or
cmp
jmp
test
mov
inc
pop
push
imul
adc
leave
vpmullw
in
cmc
mov
mov
push
imul
adc
enter
jmp
test
mov
inc
pop
push
imul
adc
lds
jg
in
cmp
adc
push
fiaddl
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
lret
in
jmp
sti
faddl
jmp
pushf
dec
insb
pop
jl
dec
jp
or
jl
or
sbb
in
jmp
sti
fmull
mov
jl
dec
jnp
lret
sub
cmp
or
sbb
in
jmp
sti
fmull
mov
and
cmp
pop
or
pop
pop
imul
jmp
xchg
xor
adc
popl
sub
sub
dec
mov
in
xchg
aad
in
mov
je
fwait
inc
push
addb
rcr
sbb
dec
test
in
sbb
fwait
stc
shrl
in
cmp
aaa
and
jb
pop
sub
cmovle
cmp
or
mov
pop
fisubrs
mov
mov
test
push
cmp
or
add
shrb
lret
or
outsl
pop
in
jns
or
and
sub
jo
dec
imul
stos
insl
xchg
dec
push
pop
pop
rcll
sbb
in
jmp
sti
fmull
mov
jl
dec
jnp
or
cmp
or
pop
mov
xchg
lcall
mov
adc
or
inc
dec
mov
scas
lods
mov
mov
jecxz
pushf
sub
adc
jnp
or
push
inc
jns
jb
mov
xchg
test
rcrb
dec
insb
pop
jl
dec
jnp
or
cmp
or
sbb
in
jmp
sti
fmull
mov
jl
dec
jnp
or
cmp
or
sbb
in
jmp
jne
cltd
stos
inc
fisttpl
jne
mov
popl
push
sti
std
xor
and
add
mov
ret
scas
nop
repnz
lea
data16
into
outsl
and
sahf
in
int3
int
shrb
ret
aaa
fadds
leave
jge
testb
sub
mov
mov
daa
je
in
push
cltd
pop
xchg
iret
or
xchg
mov
shll
dec
xor
or
test
fidivrl
nop
pop
push
xorb
cltd
andb
jno
sarl
add
adc
adc
ja
dec
imul
push
add
inc
aam
int3
rcll
shll
repz
ja
mov
lea
ljmp
sbb
jmp
bound
stos
movsl
mov
test
mov
mov
lods
mov
scas
and
cmp
xchg
lahf
aaa
imul
pushw
mov
jmp
lret
cltd
mov
cmp
mov
imul
or
jb
mov
dec
xor
rorb
dec
xchg
ds
roll
outsl
adc
lds
jl
mov
xchg
cmp
mov
adc
cmp
dec
inc
jecxz
jl
or
mov
mov
mov
mov
jnp
xchg
mov
push
andb
arpl
pushf
ljmp
repnz
fs
dec
inc
sbb
ficomps
xchg
out
jmp
outsl
xchg
insl
cli
outsl
es
imul
lea
cmp
inc
mov
rorb
fwait
ljmp
repz
je
gs
cmc
call
lahf
jns
popa
or
fwait
xchg
or
pop
rcrl
jno
outsb
fadd
ljmp
scas
sbb
adc
or
lret
cmp
mov
loope
testl
bnd
or
adc
or
mov
xchg
test
or
movsl
inc
fwait
aas
cmpsb
cld
push
mov
xchg
or
push
mov
mov
dec
pop
mov
jns
lret
mov
subl
jnp
mov
loop
into
adc
cmp
adc
dec
add
jl
jae
inc
add
and
fs
push
or
lahf
mov
cmp
mov
lods
push
notb
adc
jg
jp
mov
jae
push
and
adc
jmp
insl
mov
pop
or
out
sbb
aam
xor
outsl
add
pop
jmp
mov
inc
or
cmpsb
ljmp
test
sub
xor
mov
loop
gs
push
shll
imul
lods
test
shll
filds
ss
mov
push
jbe
cmp
lahf
push
cmp
mov
int
xchg
push
adc
sub
xlat
push
jns
xchg
mov
enter
inc
in
andb
mov
bnd
arpl
icebp
mov
out
adc
mov
imul
and
and
out
aam
inc
mov
in
mov
fistpl
ret
scas
push
mov
push
lock
and
mov
notl
fcompl
mov
incl
into
sub
xchg
inc
xor
xor
dec
mov
or
mov
push
sbb
inc
jno
pop
shl
and
out
shlb
mov
sbb
or
or
cmp
out
ds
and
jl
dec
jnp
test
cltd
dec
cmpsb
pop
adc
sub
sbb
movb
jmp
aam
fisttpl
lock
pop
push
out
dec
and
addr16
aas
adc
xchg
and
adc
adc
sahf
dec
out
or
call
insl
xchg
out
sub
lret
xchg
fmuls
imul
inc
repz
jmp
and
add
jmp
dec
movsb
mov
fnop
fwait
lock
fs
clc
ffreep
jp
mov
iret
in
lods
stos
stc
and
mov
pop
fcoml
lods
nop
int3
idivl
inc
pop
pop
das
out
mov
sbb
mov
inc
cmpl
cmpsl
fdivrl
cld
xchg
fsub
jb
mov
dec
mov
sub
pushf
jbe
and
push
push
xor
popf
dec
imul
and
jge
lods
mov
mov
popa
pushf
cmpsl
xor
shlb
xor
popa
mov
mov
adc
mov
or
pop
push
fmul
stc
pop
inc
adc
add
xchg
ret
imul
mov
push
pop
sub
pushf
lods
jmp
cmpl
rcrb
or
push
or
call
stos
cmp
jbe
cli
loop
lahf
repz
enter
icebp
mov
lock
or
mov
roll
aam
mov
mov
pop
dec
mov
add
xlat
or
ret
cs
notl
and
icebp
std
int3
bound
xlat
mov
addl
data16
aad
mov
xchg
jns
int3
aas
xchg
call
push
andl
push
aam
dec
add
mov
inc
mov
push
jb
push
sbb
mov
sahf
xor
cwtl
jp
pushf
add
sbb
outsb
dec
fmull
insb
dec
adc
mov
mov
lcall
or
pop
push
out
mov
jp
xor
or
push
lret
jae
xchg
mov
xchg
jmp
stc
stos
cmp
adc
stc
sbb
aas
jecxz
or
repnz
outsb
jg
fwait
push
pop
xlat
adc
loope
jns
mov
jmp
push
push
mov
std
jne
mov
sbb
movsb
mov
mov
ffreep
int
xchg
inc
mov
outsl
fs
jbe
xchg
push
bound
clc
cs
outsl
cmp
or
imul
clc
add
lcall
dec
xor
call
ret
or
xchg
mov
or
cld
or
out
push
lods
test
fisubrl
push
into
pusha
sbb
cmpsl
icebp
stos
push
test
sbb
mov
xchg
adc
addr16
lret
sbb
in
fisttpll
pop
push
testl
mov
cmp
mov
mov
or
aam
aas
adc
jp
and
dec
dec
pop
pop
es
cmp
dec
or
push
jp
adc
stc
int
fisttps
mov
mov
out
scas
femms
adc
test
cs
cmp
mov
loop
xchg
jbe
push
xchg
inc
daa
xor
push
and
into
imul
adc
xchg
cmp
out
sbb
fs
es
rolb
je
xor
add
pop
inc
mov
mov
inc
push
fs
xchg
pop
push
js
mov
xor
sahf
in
cmpsl
aas
mov
jb
push
xor
leave
add
sub
sbb
sbb
or
sbb
or
jns
jl
imul
cmp
jbe
xorb
push
cmc
push
inc
loope
rcrl
add
call
jge
sbbb
mov
lods
scas
sbb
adc
shufps
lods
cmp
push
xchg
mov
jns
daa
repnz
mov
aam
inc
add
push
outsl
jl
or
std
mov
pop
mov
test
aas
lods
test
add
dec
cmpsl
or
fdivrl
ss
into
xchg
pop
mov
xchg
inc
loop
fiadds
adc
pusha
or
std
lret
dec
sbb
sbb
lock
adcl
ds
mov
lfs
or
in
out
adc
faddl
add
hlt
js
lea
lret
cmp
or
lods
jo
out
jg
dec
jge
mov
mov
dec
mov
xor
pop
sbb
fnstsw
cmp
push
loope
aad
cmp
mov
xchg
outsl
mov
imul
mov
jns
inc
daa
sub
mov
sahf
stc
cmpsl
stc
jae
leave
mov
and
jne
cld
mov
push
sbb
dec
or
aad
adc
dec
pop
pop
pop
pop
and
shll
xchg
lea
push
xchg
adc
sbb
test
pop
sahf
lret
fcoml
xor
push
xchg
mov
add
lock
inc
jns
lret
dec
lcall
icebp
iret
test
lret
xor
movsb
jl
subl
and
dec
mov
cmp
movsl
and
xchg
push
xor
mov
pop
inc
push
addr16
or
add
or
inc
push
ret
pop
sti
and
pop
sahf
and
test
ja
mov
subb
adc
lcall
mov
je
push
sti
inc
ja
les
stos
pusha
pop
loope
dec
daa
stos
inc
ret
adc
cwtl
jo
add
ret
inc
fdivrs
pop
cmp
xchg
xchg
bound
mov
icebp
and
sub
sbb
inc
inc
movsl
cmpsl
xchg
lds
mov
rclb
sub
cmpsb
std
inc
mov
pop
pop
gs
cmpsl
stc
pop
inc
sub
mov
push
dec
sbb
scas
ret
push
sbb
pushf
pop
fdivl
clc
nop
daa
cmp
sahf
dec
xchg
xchg
popf
inc
push
dec
bound
ds
fstl
fbstp
nop
hlt
bound
inc
or
insl
cld
into
stos
xor
test
push
push
xchg
fcoms
jle
outsb
lret
jbe
mov
in
and
mov
mov
sahf
dec
pop
daa
mov
aas
pop
arpl
sbb
cld
aas
jne
pop
cmp
shrd
xchg
or
sbb
lods
push
out
mov
adc
xchg
dec
mov
or
fistpll
andb
repz
movsb
add
test
pop
int3
pop
cmp
cmpsl
daa
shll
movsl
jns
fisttps
sbb
fstpl
mov
fdivrp
ja
shl
and
xchg
call
sbb
pop
pop
jl
xor
arpl
lea
sti
pop
popa
out
add
into
stos
sbb
insl
mov
leave
arpl
aas
mov
push
clc
mov
mov
insl
dec
cmp
sub
push
dec
cmp
and
vmovntps
jp
loop
push
pop
or
repz
xor
jo
or
add
xor
xchg
not
pop
cli
dec
lds
and
shll
mov
sbb
jae
aaa
pop
pop
jge
shll
lock
mov
iret
inc
push
mov
add
dec
push
ja
scas
push
test
loopne
xor
repz
dec
jge
lret
popf
adc
arpl
call
jmp
jbe
stos
enter
dec
push
inc
xchg
inc
jp
les
add
dec
loope
pop
idivl
cmp
push
lds
fwait
rcrl
mov
icebp
sub
cmc
out
xchg
jno
test
mov
leave
ds
mov
xor
mov
pop
jge
mov
and
shrl
and
push
mov
popf
pop
fidivrl
push
sbb
push
pop
sarb
mov
popf
movsb
cltd
push
jmp
push
and
ficomps
idivb
push
std
add
inc
and
cmp
or
lahf
shll
arpl
ret
or
gs
dec
repz
hlt
mov
add
leave
or
adc
jl
in
idivl
sub
adc
dec
aas
jle
xchg
xchg
jl
mov
cwtl
lods
je
sub
xchg
insb
push
cmp
sub
test
daa
inc
xor
jae
xchg
xchg
shlb
fs
adc
mov
inc
shlb
add
adc
pop
mov
sub
push
mov
jp
loopne
int
int
shrb
mov
outsb
adc
and
cmp
movsl
dec
dec
ss
aaa
sbb
int3
cmp
sbb
test
sbb
pop
arpl
adc
stc
add
xchg
and
mov
xor
mov
jle
jbe
cmp
and
lods
mov
inc
daa
gs
ficompl
lods
and
or
daa
stos
jne
fxtract
loop
mov
push
out
ret
jg
jmp
jns
data16
dec
addr16
in
fwait
out
imul
ficompl
out
lret
shll
xorl
pop
pop
adc
stos
movsl
pop
shrb
mov
pop
push
lods
rorb
andb
insb
dec
icebp
mov
xor
frstor
ret
andl
movsb
inc
inc
cld
mov
aaa
std
mov
mov
out
push
adc
inc
scas
sub
in
jne
push
lea
sub
adc
cmc
mov
or
aad
push
jg
cmp
lret
jle
adc
sub
mov
mov
pop
std
and
push
lods
out
mov
jl
out
mov
in
test
push
leave
xchg
lock
es
mov
imul
movntps
clc
dec
xchg
js
int
lds
fwait
mov
adc
mov
imul
jg
add
pop
mov
addr16
inc
jge
adc
std
xchg
rcrl
pop
mov
inc
call
adc
roll
lcall
jb
stos
cmpsb
in
xchg
add
outsl
sbb
xlat
xchg
icebp
and
loop
and
cli
xor
xor
mov
pop
adc
pop
shll
jg
fwait
adc
lahf
iret
adc
jae
in
pusha
mov
add
fldt
popa
arpl
and
mov
ja
ss
jno
in
int
sbb
orl
push
adc
cmpsb
shl
cmp
jp
fsubs
orl
inc
lock
xchg
loopne
shlb
add
shll
fbld
jecxz
je
add
sbb
add
mov
mov
imulb
scas
push
mov
jle
inc
movsl
jp
push
mov
mov
lock
out
cmp
inc
nop
add
fs
repz
xchg
bound
outsl
int
shrl
dec
in
push
dec
movsb
repz
push
adcl
sbb
sarl
cld
xor
mov
mov
in
mov
pop
dec
scas
push
push
lret
movsb
mov
mov
push
lret
and
cmp
in
xor
das
jl
mov
sti
rcrb
rorl
insl
xchg
test
add
and
jge
stc
sbb
or
or
jae
jmp
insl
inc
xor
dec
out
lcall
cmc
push
jo
jge
dec
bound
es
jle
push
xor
mov
leave
sub
inc
add
stc
je
xchg
inc
stos
xchg
xchg
dec
add
pop
mov
movsb
mov
push
or
out
mov
adc
jl
cwtl
imul
xor
jp
out
mov
push
sbb
adc
out
jg
daa
adc
adc
movsl
mov
push
jb
icebp
inc
mov
sbb
enter
add
sub
enter
dec
sbb
mov
fdivr
or
in
cwtl
pop
fistpl
xchg
out
pop
xchg
sbb
inc
loop
out
xor
sahf
jge
pushf
sbb
mov
movsb
xchg
aaa
xor
mov
xor
xchg
mov
movsl
dec
mov
mov
mov
push
dec
ja
ret
scas
xchg
adc
arpl
add
sahf
mov
jb
popa
xchg
jl
and
dec
mov
mov
fstpl
aaa
sti
fst
mov
stos
mov
dec
scas
loope
mov
cli
add
adc
icebp
jbe
jb
scas
in
stos
icebp
push
push
fcomi
stc
stc
mov
or
push
cmpb
ficoms
fnstsw
sti
mov
aam
jmp
push
push
stos
push
addr16
pusha
cmpsb
outsb
xor
shlb
js
xor
rcrb
rcrl
jmp
into
xchg
imull
out
mov
leave
sahf
shll
iret
stc
js
or
push
mov
stos
push
mov
aad
sbb
inc
push
add
dec
jno
sbb
aaa
sahf
leave
cmpsb
pushf
lds
negb
daa
xorl
xchg
mov
mov
imulb
sbb
push
jg
mov
inc
push
adc
sub
adc
sub
dec
mov
mov
ja
stc
or
add
pusha
or
shl
jns
sarl
mov
dec
insl
mov
movsb
xor
das
mov
or
test
das
movsb
pop
stc
sub
dec
or
mov
int3
mov
testl
pop
data16
stos
cli
mov
je
fisubrl
cld
or
leave
xchg
push
xchg
sbb
popa
push
daa
ret
popa
jge
jne
sub
add
inc
sbb
scas
mov
sbb
decb
cmpsb
pop
gs
sti
jo
pop
mov
jns
in
sub
mov
pushf
add
jl
loop
inc
in
xchg
xor
mov
mov
int3
jae
das
inc
cmp
push
cmp
xchg
push
xchg
iret
or
push
rorl
push
sbb
cmc
dec
xor
ficoml
lcall
fisubl
xchg
xlat
scas
pop
dec
ja
in
incl
push
addr16
ja
sbb
push
sub
mov
add
sub
dec
mov
ss
cs
scas
mov
lret
xchg
repz
inc
stc
add
stos
and
mov
fildll
and
xor
cmp
xor
jae
lcall
jno
xchg
inc
pop
jmp
and
out
xchg
mov
jle
dec
sub
das
fcomps
mov
adc
pop
mov
push
inc
sub
pop
cwtl
test
push
mov
push
xchg
pop
sbb
mov
popa
push
addr16
fstps
mov
sbb
mov
pop
push
and
test
pop
loopne
cmp
sub
addr16
mov
mov
int3
arpl
mov
xor
sub
repnz
cmp
test
mov
inc
imul
inc
xchg
idivl
adc
lods
fidivl
sbb
loope
jb
mov
pop
sbb
cltd
mov
mov
xchg
dec
jbe
inc
fnstenv
push
jecxz
push
fsub
adc
xchg
fs
mov
idiv
push
mov
std
cmpsl
xchg
sarl
jmp
in
dec
adc
pop
xor
arpl
fcmovnb
cmc
jno
jecxz
fs
ja
mov
jb
xor
rcrl
mov
data16
cli
push
lds
ds
mov
add
lods
jmp
fs
pushf
jne
xchg
cmpsl
mov
mov
lea
lahf
stos
cmp
cmp
and
mov
popa
cmpsb
push
aad
shrl
fnsetpm(287
clc
xlat
pop
int3
fsubrs
sbb
push
dec
jecxz
dec
sbb
lods
sbb
jns
out
sahf
xor
aaa
shrb
in
and
jne
push
jle
in
daa
xchg
cmc
mov
push
fdivp
std
xorl
popf
mov
imul
scas
push
push
or
mov
test
cmp
sub
data16
nop
es
paddusb
adc
in
pop
jmp
adc
and
ss
sbb
test
mov
sub
inc
es
mov
in
dec
push
fcoms
in
xor
insb
lea
mov
cmp
push
mov
jle
ret
outsl
sarb
xor
fnstcw
gs
sbbb
je
pop
fs
out
push
loope
mov
in
xor
pop
fs
aas
cmp
sti
sub
push
sbb
notl
gs
insb
pushaw
ja
add
sarl
pop
lds
xor
decb
mov
pusha
aam
jno
pop
lret
push
nop
les
enter
sbb
dec
nop
nop
loopne,pt
adc
jge
in
repz
and
xchg
fsts
cmpsl
loope
and
ljmp
cmp
stos
mov
pusha
mov
mov
xchg
or
mov
ljmp
jne
aas
add
pop
cld
cld
sbb
pop
iret
cmp
pushf
mov
jae
nop
cmp
pop
pusha
cmpsl
ds
outsl
out
xor
cmp
cmc
xor
and
fstpt
jb
mov
stc
subb
cs
call
xor
push
int3
mov
sbb
push
out
pop
adc
arpl
sbb
and
mov
inc
sti
and
xchg
mov
test
dec
inc
sbb
and
pop
or
cmp
fucomp
fwait
inc
push
jnp
jno
xlat
loop,pn
inc
xchg
daa
dec
inc
loop
push
adc
aad
pop
aaa
sub
sbb
out
ljmp
mov
dec
insb
pop
jl
dec
jnp
or
cmp
or
sbb
in
jmp
sti
fmull
mov
jl
dec
jnp
or
cmp
or
sbb
call
sti
fisttpll
lods
fwait
mov
dec
insb
pop
jge
dec
jnp
or
cmp
in
jmp
sti
fmuls
or
arpl
pop
rorl
movsb
imul
repz
jecxz
push
dec
pop
jge
insl
cmp
dec
add
dec
sub
mov
mov
or
adc
insl
cmp
push
push
fisttpll
in
mov
mov
lods
mov
dec
add
adc
pusha
sub
mov
negb
icebp
sahf
xor
pop
jge
add
sbb
mov
lcall
push
fcoms
mov
or
lds
pop
shll
jne
data16
adc
test
bound
inc
or
lret
dec
mov
mov
in
inc
lea
enter
xchg
cmp
cwtl
cmpl
ret
neg
bswap
jp
push
adc
mov
faddl
pop
xlat
lock
test
stos
cmpsb
xchg
test
test
fsubs
mov
in
pop
xchg
ljmp
sbb
fxch
lret
sbb
adc
scas
nop
push
xchg
cmp
insl
cmp
dec
jne
cmp
mov
mov
xchg
repnz
enter
jne
inc
adc
aaa
dec
pop
sub
ljmp
jecxz
aam
enter
sub
or
je
push
dec
mov
clc
xchg
mov
test
fcmovbe
in
mov
jns
cli
sbb
ds
dec
push
or
jp
mov
lcall
fidivrl
or
jge
insl
cmp
push
jp
mov
lcall
fidivrl
or
dec
mov
sub
popl
lds
loopne
cmp
add
popa
fs
cmp
call
push
aad
test
aam
aas
shl
decl
sub
fimuls
mov
lret
iret
int3
in
adc
push
mov
cwtl
inc
sub
sbb
sarw
mov
push
cmpsl
sbb
xchg
push
pop
jmp
lods
pusha
push
nop
lahf
aaa
pop
mov
das
xor
pushf
or
pop
pop
popa
sarb
les
popa
fs
movsb
adc
xchg
mov
sbb
nop
outsb
sbb
outsl
out
xchg
hlt
mov
xchg
jns
sub
subb
cmp
aaa
out
out
push
cld
outsl
mov
sub
and
inc
mov
or
xchg
lods
adc
into
addr16
jecxz
cmp
sbb
mov
pop
bnd
int3
mov
mov
ret
stos
popa
shl
scas
push
jle
xchg
loopne
daa
ds
cli
fsubl
pop
dec
addr16
and
pop
xchg
in
pushf
xor
inc
jbe
les
shlb
stos
adc
cmpsl
std
or
ljmp
xchg
mov
enter
int
fcompp
add
inc
adcl
fdivs
fldt
stc
or
xchg
push
inc
loope
fs
dec
pop
mov
sbb
xor
std
xchg
insb
inc
inc
shrl
and
adc
pop
out
dec
lods
outsb
loope
in
mov
sarb
fbstp
stos
and
or
ja
mov
push
mov
add
push
xor
xchg
mov
test
ja
and
mov
jp
xchg
sbb
ljmp
jno
or
inc
scas
outsl
and
and
pop
fildll
repz
in
add
jecxz
in
jecxz
add
test
dec
and
pop
inc
dec
lcall
lods
pop
push
iret
int
jp
or
xchg
push
push
xchg
mov
and
ljmp
push
inc
int
mov
iret
lods
jnp
imul
sub
push
int3
sbb
pop
js
cmp
xchg
sub
add
dec
out
aas
xchg
and
xchg
inc
cltd
lods
addr16
ret
hlt
aad
arpl
leave
push
inc
mov
lods
fisttpl
fcomip
mov
repz
jnp
ds
mov
divl
jge
push
pop
jp
xchg
adc
dec
add
jge
add
ja
adc
mov
addr16
shlb
sbbb
sahf
pushf
mov
jecxz
add
mov
or
or
insb
cs
lret
or
aad
pushf
pop
inc
adc
int
insl
or
ljmp
movsb
sti
jno
xor
inc
dec
adc
cld
test
ds
dec
daa
stc
mov
aaa
dec
mov
adc
cmpb
mov
sbb
icebp
es
cmc
popa
and
gs
std
push
icebp
lcall
cmp
ret
je
dec
fisttpll
mov
jo
addl
in
mov
add
push
xchg
xor
or
into
mov
rclb
or
xchg
aaa
mov
insl
mov
stos
ds
adcb
sar
pop
jmp
add
xchg
cmp
pop
cmpb
mov
in
sub
cmp
adc
fists
arpl
out
dec
mov
iret
insb
out
sbb
push
aas
xchg
push
jns
fnstcw
pop
ror
dec
mov
ds
pop
addr16
sub
ret
repnz
inc
inc
or
testb
or
cld
mov
fistl
pushf
movl
add
cwtl
cwtl
dec
call
decl
mov
hlt
pushf
jmp
lds
push
mov
mov
bound
fildll
inc
in
pop
test
test
sub
pushf
loopne
xchg
xlat
js
fists
fdiv
aas
mov
push
ret
hlt
lods
mov
loope
lea
loope
push
sbb
es
je
dec
out
jns
mov
enter
mov
mov
subb
or
clc
jae
pop
or
into
and
and
lods
mov
mov
adc
pusha
or
imulb
dec
outsb
push
cmp
fmulp
pop
es
mov
mov
shlb
jnp
clc
jge
movl
add
jne
mov
sbb
pop
cwtl
pusha
xchg
push
pop
loop
sbb
cmp
inc
imul
adc
cmc
add
fsubs
add
test
imul
cli
rclb
pop
dec
sbbb
bound
mov
push
mov
bound
xor
pop
test
addr16
mov
jge
xchg
testl
adc
inc
mov
xchg
rcl
loope
adc
xchg
mov
daa
dec
dec
inc
or
mov
mov
shll
out
cmovs
cmp
std
jle
mov
push
mov
sti
aam
jp
fs
pop
add
adc
call
push
outsb
inc
jle
sbb
push
stos
and
jne
pop
dec
imul
ud1
roll
add
sarb
inc
pop
dec
sbb
adc
out
inc
lock
gs
sahf
push
add
adcb
sbb
sbb
stos
jle
mov
pop
cs
adc
add
push
incb
add
jp
cli
int
mov
iret
push
je
imul
sub
test
repz
xchg
test
adc
cmpsb
cmc
imul
lahf
mov
xor
add
cmp
xchg
pop
add
inc
stos
test
or
in
imul
mov
pop
lret
mov
jno
add
inc
ja
in
xchg
inc
jp
jp
pop
jns
sahf
adcb
pushf
cmpsb
cmc
bound
mov
cli
cmp
mov
fsubs
loopne
fadds
ljmp
sahf
out
push
lods
popf
inc
xor
cmpsl
mov
cmp
lahf
jg
mov
daa
xchg
jl
scas
imul
addr16
adc
pop
iret
add
push
dec
cmp
fistps
xchg
mov
cmp
mov
sbb
aas
aad
es
cld
add
clc
inc
cmp
jmp
inc
icebp
movsb
pop
sub
xlat
addl
xor
sub
push
sbb
cmpl
sbb
and
sbbb
outsl
iret
or
cmpb
adc
sbb
cli
cmp
sti
push
rcll
or
int3
imul
mov
add
xor
pop
cwtl
into
out
repnz
ds
jg
jo
jmp
out
daa
sahf
cld
sub
movsb
mov
pushf
std
jb
jl
cmp
cmp
cmp
rcrl
push
cs
mov
aaa
orb
rorl
wrmsr
cltd
cmp
leave
rclb
pop
cld
cltd
loope
mov
aas
pop
adc
or
outsl
div
sahf
cmpsl
or
jns
test
out
xchg
pop
inc
or
xchg
jnp
notl
cwtl
adc
mov
out
sbb
int
jecxz
pop
push
int3
cmpsl
fisubl
xor
and
sahf
pop
and
cwtl
inc
or
addl
mov
xor
pushf
and
xchg
clc
lcall
mov
out
or
divb
sub
push
into
or
mov
xchg
adc
scas
xor
jnp
lcall
mov
push
inc
loop
or
sti
mov
jl
pop
gs
enter
inc
mov
mov
pop
sub
fmulp
adcl
insl
or
call
adc
mov
sbb
orb
loop
jo
inc
mov
fnstenv
push
test
sti
pop
iret
adc
jno
mov
pop
jmp
xchg
xor
cmp
push
sbb
fwait
cmc
pop
jmp
inc
mov
xchg
pop
dec
lcall
lahf
loope
movsl
arpl
inc
lret
xchg
imul
sbb
dec
adc
mov
adc
lods
dec
xchg
notl
sbb
jne
arpl
dec
pop
sub
test
push
pop
mov
adc
and
pop
mov
xor
enter
aaa
sbb
lds
mov
mov
adc
icebp
rorl
lock
hlt
pop
pop
loopne
sbb
xchg
cmpsl
ffree
movsb
inc
gs
ficoms
scas
movsb
insl
and
push
hlt
mov
test
int
test
int
jecxz
shlb
sub
jmp
jecxz
sahf
jecxz
popa
sbb
jne
mov
std
icebp
call
in
mov
imul
mov
and
int3
push
repnz
jmp
lret
call
inc
adc
rolb
and
aas
repnz
sbb
in
mov
and
jns
dec
push
mov
mov
jae
inc
xorb
insl
add
jnp
movl
sbb
sub
add
sub
jne
or
clc
dec
aam
xorb
hlt
mov
jbe
push
pop
mov
incb
cmp
aas
or
sbbb
and
data16
sbb
aas
imul
cmp
call
ss
push
ret
popf
pop
jmp
loope
sub
push
fstl
inc
mov
lret
mov
das
rcll
mov
cmp
push
sub
in
and
rcrb
mov
sub
stc
jl
inc
enter
shrb
ret
and
add
popa
jo
ss
add
and
decb
xor
outsb
test
fnsave
shlb
sbb
inc
and
push
jle
jo
pop
fcomp
adc
mov
pop
dec
fwait
ss
enter
mov
push
fnstsw
gs
or
pop
xor
cmp
aas
pop
push
push
stc
fisubs
movsb
mov
bound
shlb
jl
test
dec
cli
push
cmc
pushf
pop
rcrl
push
shlb
fsubr
ds
push
push
fcompl
mov
pushf
dec
lods
sbb
in
pop
dec
cmc
in
nop
inc
xchg
sbb
sub
dec
or
stos
icebp
adc
adc
scas
push
jl
or
sti
jp
out
das
xor
test
or
dec
jl
push
cmp
pop
inc
inc
div
test
xchg
bound
pop
mov
scas
jo
xor
loope
adc
add
push
nop
mov
addr16
stos
mov
pusha
pop
fcoms
popa
mov
cmp
imul
push
fisubrl
dec
pop
cmp
repnz
loop
add
mov
cmp
ret
mov
addr16
mov
pop
lock
add
imul
fs
in
les
rcrb
adc
dec
sbb
adc
pop
dec
dec
fisttpll
lock
dec
mov
lods
inc
mov
bound
icebp
mov
inc
pop
adc
test
lret
cmp
sub
inc
test
sub
enter
call
and
jg
or
or
data16
cmp
cmp
push
jno
rcrl
push
adc
adc
push
push
movsb
stos
or
andb
in
inc
cwtl
test
pop
das
inc
push
sbb
dec
xchg
in
into
jbe
inc
sub
xchg
negl
enter
adc
pop
inc
rolb
xchg
shrl
aam
fisttpll
push
push
jle
cmp
fsubrl
and
dec
scas
push
aad
lcall
and
and
out
sahf
fs
je
in
mov
jge
fbstp
sbb
js
lcall
out
jmp
or
pop
mov
inc
xor
call
in
jp
jno
inc
sti
inc
push
jp
cmp
push
adc
dec
mov
add
leave
jne
rorl
in
pminsw
jb
pop
add
aad
push
jge
rclb
push
mov
sbb
xchg
xor
mov
test
data16
je
fisubrs
lea
neg
insl
sub
sbb
test
cmpsb
and
in
dec
jmp
inc
enter
cmpsl
mov
loope
sub
imul
mov
rcrl
and
lret
and
scas
imul
sbb
xor
orb
mov
cmp
nop
fistpll
push
pop
jo
jecxz
lods
adc
push
xchg
push
insb
pop
popf
add
mov
mov
xchg
out
mov
out
jmp
cmp
inc
repz
inc
das
or
cmpsl
push
push
subb
or
rcl
out
mov
sub
mov
dec
out
popa
cwtl
fiadds
dec
xchg
shl
xchg
cmpsb
dec
mov
fstpl
aad
pop
imul
or
iret
shlb
sub
and
push
mov
sbb
repnz
jmp
jmp
insl
in
xor
fcoml
insl
in
inc
xchg
scas
mov
jl
jne
mov
aaa
lea
or
sbb
movsl
mov
decl
out
int
mov
inc
lahf
leave
ja
push
xchg
pop
inc
ffree
ss
mov
call
sbb
adc
dec
inc
test
in
jecxz
sbb
or
jge
pop
in
iret
sar
pop
mov
xchg
adc
std
dec
jb
lods
push
push
pop
pop
push
popa
xor
mov
repnz
ret
xchg
xchg
je
push
jb
jp
in
jne
inc
out
int3
sbb
cmp
cmpsb
imul
shrl
daa
lret
sarl
loopew
inc
xor
xchg
iret
inc
or
dec
xor
cs
jb
rorb
loop
adc
adc
pop
fidivl
sub
and
push
popf
and
push
test
xor
movsl
mov
outsl
or
hlt
xlat
rcr
jb
xor
adc
rcrb
jle
push
or
gs
sub
pop
xchg
pop
gs
stos
mov
dec
adc
dec
shll
dec
add
push
mov
xchg
ljmp
into
data16
stos
jb
std
or
cmp
push
mov
dec
mov
fwait
lea
cmpsb
clc
and
cmp
inc
loop
dec
pop
bound
xor
ret
lods
xchg
outsl
in
mov
or
xor
jmp
pop
stos
push
lahf
incl
mov
dec
arpl
xor
sbb
or
scas
sbb
mov
dec
push
and
or
pop
movsb
mov
cmp
jne
dec
mov
dec
unpcklps
xorl
adc
loope
subb
xor
js
inc
pusha
mov
mov
xor
loope
or
dec
ficoms
iret
or
sub
xchg
push
in
dec
dec
jmp
aam
jbe
je
pop
cmp
and
lods
add
add
cmp
xchg
jb
and
cmpl
in
xchg
test
pop
pop
mov
pop
lret
push
dec
adc
in
or
icebp
jbe
mov
jne
negb
adc
sarl
sub
outsb
imul
sub
data16
je
sub
loope
inc
sbb
xchg
cmp
call
movsb
inc
dec
add
xor
int
in
cwtl
cli
sbb
enter
mov
push
xchg
xchg
imul
or
push
cwtl
clc
enter
pop
xor
jnp
popf
pop
fimull
push
in
fildll
mov
mov
lcall
pop
test
outsb
ja
xchg
xchg
xor
push
sarl
jne
pop
imul
lret
jl
jl
dec
push
ret
pop
cmp
mov
and
xchg
and
icebp
cmp
mov
dec
lods
push
mov
jl
pop
sub
sbb
adc
rcll
pop
sub
mov
jg
xor
inc
jl
mov
loop
or
dec
insb
dec
lret
xchg
mov
js
xchg
dec
mov
pop
and
mov
mov
dec
icebp
fsub
sbb
pop
lds
mov
push
icebp
les
xchg
sahf
lret
arpl
xchg
lea
add
inc
mov
add
add
enter
pushf
sub
or
inc
dec
xor
cmp
mov
jle
ljmp
sbb
test
rcrb
and
adc
xchg
pop
icebp
xchg
xor
cmp
push
test
adc
fstp
xchg
xchg
loope
cmc
fwait
sbb
jl
inc
rcrl
scas
dec
addr16
data16
mov
add
pop
mov
dec
shll
dec
mov
int3
inc
mov
fs
pop
jnp
jns
push
mov
jae
mov
lret
fucom
xor
mov
push
or
or
sub
les
pop
push
push
loope
sub
dec
jl
and
daa
adc
dec
push
aam
dec
ds
mov
inc
or
pushl
test
sahf
aas
push
imul
aas
pop
jl
inc
inc
add
ret
sub
xchg
outsl
sbb
sbb
test
or
outsb
add
sbb
push
popa
push
xor
cmp
mov
xchg
mov
dec
popa
or
insl
cli
shlb
sti
iret
sbb
outsl
fisttps
or
add
out
movsb
es
jmp
xchg
cltd
add
sti
loopne
es
jae
movl
push
inc
add
mov
sbb
jmp
lret
or
je
std
cmp
aad
dec
push
fs
mov
and
and
cmp
jns
jne
pusha
push
in
xor
xor
jecxz
dec
out
push
loopne
push
jno
popf
mov
loopne
stos
jo
mov
pop
stos
sbb
cmc
outsl
mov
lret
dec
in
mov
insl
lock
pusha
sub
jmp
out
cld
outsl
xchg
or
fdivrp
stc
lret
int
movsb
mov
cmpsb
push
adc
into
dec
jb
mov
sub
fdivrs
mov
les
mov
std
rep
mov
mov
lods
pop
add
push
cmpxchg8b
je
push
xchg
adc
shlb
mov
sbb
repz
mov
and
or
and
push
ja
xor
jnp
fisubrl
mov
das
inc
or
daa
or
out
rcl
sub
push
pop
mov
ficomps
sbb
and
cmpsl
xchg
insb
xchg
pop
faddl
cltd
and
out
inc
sub
dec
mov
mov
ljmp
adc
dec
adc
ss
cmp
clc
dec
mov
pop
xor
in
aas
scas
in
jb
nop
in
std
aaa
and
xchg
clc
shr
xchg
cmpsl
test
mov
dec
push
addb
pop
sbb
imul
pop
fdivl
lods
dec
cmpsl
pop
nopl
xchg
or
sbb
loop
movsb
add
in
jp
decb
subb
lea
dec
pop
mov
sbb
jno
jne
sbb
adc
stos
faddl
pusha
mov
mov
pusha
leave
cmp
mov
mov
mov
clc
fcmovnbe
rcrb
shl
ss
aas
in
add
aas
jo
ret
mov
cmpl
or
dec
or
fucomip
scas
jno
xor
xor
aaa
inc
out
gs
es
shlb
movsb
jmp
mov
mov
pop
xchg
adc
lock
imul
and
add
aas
dec
repnz
jp
outsl
lds
mov
xchg
cli
loopnew
loope
aaa
arpl
repnz
inc
jecxz
push
aas
mov
and
and
andl
pop
imul
sbb
mov
mov
dec
arpl
mull
mov
pop
adc
cmp
int
fsubr
out
aas
fs
xchg
das
xchg
mov
adc
clc
xor
inc
insl
jl
repz
shrl
push
incl
and
out
out
sti
or
ss
sub
mov
sti
cld
fwait
sbb
aaa
enter
mov
mov
mov
xor
add
push
jle
or
daa
scas
xchg
out
mov
xchg
lods
xchg
incl
sbb
jns
push
lock
sub
rcr
mov
jne
fdiv
test
xchg
xchg
or
andl
repnz
test
xchg
and
mov
pop
adc
bound
dec
xchg
popa
stc
dec
mov
sbb
and
daa
dec
gs
push
adc
jecxz
stc
cs
pop
and
movsb
dec
stc
add
enter
inc
jmp
inc
xchg
mov
jecxz
adc
xor
xchg
push
aas
fsts
jne
jb
pop
test
xchg
and
jo
push
dec
or
mov
out
call
and
push
xchg
or
cld
cmp
movsl
adc
int
pop
aam
out
sub
or
icebp
cmp
jno
jns
enter
xchg
or
and
rclb
mov
mov
jb
sbb
pop
inc
and
mov
add
mov
push
push
sbb
das
insl
cmp
push
jp
mov
lcall
fidivrl
or
jge
insl
cmp
push
jp
mov
lcall
fidivrl
push
jge
sbb
dec
or
jp
mov
sahf
or
into
popf
fidivrl
out
adc
daa
into
dec
jp
dec
sbb
mov
push
stos
in
int
mov
mov
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
ljmp
int3
add
mov
loop
add
add
or
add
add
add
add
pusha
add
and
dec
add
add
add
add
add
sbb
add
add
add
into
add
add
sub
mov
add
outsl
add
add
add
add
add
mov
add
add
xchg
popl
dec
add
aam
sbb
add
sub
ss
add
add
push
inc
add
add
add
add
add
icebp
add
add
add
add
add
mov
verw
jp
and
add
add
add
pop
add
add
add
add
mov
outsb
add
adc
movsb
add
add
and
movb
add
dec
add
cmp
outsb
add
aam
test
add
add
add
aaa
add
cmp
xor
xor
add
in
add
add
add
add
int3
add
add
add
dec
add
add
add
pusha
add
add
add
add
add
dec
add
add
add
xchg
add
add
add
sub
movsl
add
add
add
add
adc
adc
aam
testb
add
add
pop
add
add
add
add
add
sahf
add
ljmp
add
xchg
add
add
add
jns
xor
dec
add
add
add
add
add
add
add
push
add
add
add
add
add
testb
add
xor
xor
bound
movsb
add
add
out
add
add
add
arpl
mov
jno
cmc
add
add
sub
and
mov
movsb
add
add
add
filds
hlt
add
add
add
add
add
dec
add
mov
add
add
add
dec
add
add
cmp
out
add
add
add
add
jns
insl
add
aaa
add
dec
add
xor
or
bound
jl
testl
mov
pop
add
add
add
pop
add
mov
add
add
add
xor
aam
clc
add
add
add
add
imul
add
add
or
cmp
dec
add
sbb
pusha
add
outsb
add
add
addr16
addl
dec
add
add
add
add
sub
sbb
mov
movsb
add
add
add
add
xchg
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
mov
add
jnp
add
add
inc
add
add
add
add
add
add
add
add
adc
add
add
pop
add
inc
add
add
add
insl
add
add
add
add
add
add
add
add
add
add
data16
add
add
add
add
add
add
add
add
add
add
in
add
outsb
add
add
mov
jg
mov
push
xor
jmp
sahf
mov
stos
inc
jbe
lds
xor
cmp
mov
mov
push
ds
xchg
mov
or
fwait
sbb
jg
and
test
std
mov
pusha
xchg
pop
push
add
jne
int3
sbb
sbb
shrb
sbb
xor
jmp
mov
cmp
notb
cltd
pop
fcom
cmp
and
sbb
jns
dec
pop
lahf
fcomi
or
mov
sahf
les
mov
gs
xchg
rolb
bound
je
loopne
sbbb
rclb
mov
ret
adc
rcrb
mov
sbb
lds
mov
sbb
mov
pusha
outsl
inc
repnz
lock
das
in
lods
popa
cld
or
inc
push
mov
mov
outsl
xabort
and
cmc
je
inc
rcrl
cmc
and
xor
sub
sbb
addr16
stos
hlt
clc
mov
jae
ret
mov
loopne
in
mov
rcrl
xor
mov
test
xlat
in
cmp
sub
cmp
mov
mov
leave
jecxz
sub
mov
fcomps
out
fnstsw
test
in
sbb
push
and
xchg
leave
pop
dec
mov
xor
hlt
cmp
sbb
fmuls
or
jbe
sbb
int
out
mov
ficomps
pop
or
dec
loopne
jns
push
ret
and
cmp
xchg
sbb
mov
cmp
jns
sbbl
jmp
insb
lock
inc
add
dec
mov
xor
sti
cmc
push
adc
add
je
xor
das
pushw
mov
mov
xchg
into
dec
push
fistps
cmc
vshufpd
sub
mov
mov
mov
sti
adc
ss
lods
ljmp
dec
pop
push
orb
mov
push
push
loope
pop
sbb
inc
dec
mov
sub
push
sub
jbe
mov
les
inc
test
xchg
loop
lret
les
and
sub
insl
subl
dec
xor
inc
jge
cmp
mov
sbb
push
sbb
stc
cltd
push
call
pop
ljmp
and
xor
mov
leave
dec
inc
jg
and
cmpb
mov
fstps
jne
and
mov
dec
sahf
cmc
hlt
add
adc
and
push
mov
in
adc
ljmp
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
