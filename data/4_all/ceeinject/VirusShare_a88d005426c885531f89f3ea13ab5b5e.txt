call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
aaa
imul
dec
pop
pop
xor
dec
pop
sub
sub
hlt
iret
std
fildll
popf
lahf
jp
jge
jge
pop
pop
sub
nopl
out
std
ljmp
cmpl
push
aad
sub
and
adc
out
neg
mov
cld
lock
std
hlt
sti
sbb
sbb
cmp
mov
ficoms
fs
xor
ja
mov
jo
aam
insb
lock
ljmp
loopne
adc
add
xor
adc
adc
loopne
jge
add
lahf
scas
arpl
cmp
pop
incl
out
popf
into
and
push
pop
clc
inc
daa
pop
pop
pop
mov
dec
pop
or
sub
in
sbb
pop
int
sbb
int
je
lea
sub
sbb
int3
add
pop
lds
lea
rorb
in
jg
push
adc
mov
lods
cli
insl
arpl
pop
dec
cmp
cmp
hlt
out
in
aad
movsl
push
lea
sbb
sub
cmp
dec
mov
jo
cltd
lods
std
mov
call
clc
imulb
jge
sub
xor
push
insl
popa
pop
sub
mov
mov
loopne
mov
add
dec
lahf
sub
pop
xor
cmp
pop
in
out
std
dec
iret
fstp
lods
scas
mov
lahf
insl
outsl
jge
dec
dec
pop
pop
sub
nopl
in
out
std
dec
iret
fstp
lods
scas
mov
lahf
insl
outsl
mov
mov
dec
adc
mov
inc
and
mov
ljmp
xlat
xor
jle
fwait
xlat
push
push
jg
cmp
mov
insb
lods
mov
cmpsl
into
sub
jle
mov
pop
iret
dec
sub
vmread
mov
mov
push
inc
shl
cmpsl
shrl
sbb
sub
xor
push
xchg
sahf
pushf
incl
xchg
pop
shrb
fldenv
xchg
into
sub
dec
pop
pusha
cli
icebp
and
insb
pop
shrl
mov
inc
fsub
pop
mov
insb
shll
jae
add
mov
mov
cwtl
mov
addr16
in
or
les
daa
lret
cmp
popa
out
mov
lea
xor
mov
repz
es
mov
sub
movsl
or
mov
dec
add
into
in
out
cmpb
outsl
inc
dec
lea
inc
mov
sar
mov
jo
xor
add
idivb
fs
repnz
mov
cmp
mov
cmpb
adc
jbe
jae
rcr
scas
fdivr
mov
push
cmovnp
jbe
cmp
sbb
testl
cwtl
mov
adc
cmpsb
aas
xor
jae
xor
push
hlt
inc
cld
jmp
lods
test
rorl
dec
jge
les
inc
lret
sti
call
cmp
sub
cltd
jne
inc
mov
inc
xchg
cmpsl
fs
adc
jb
inc
cmp
cwtl
int
lret
adc
lods
mov
aam
ficoms
xchg
jmp
into
xchg
push
mov
lds
adc
ljmp
mov
pop
sub
mov
fwait
cmp
bound
idivl
lods
xchg
xchg
cmp
data16
data16
sub
add
scas
xchg
test
add
cltd
fisubrl
adc
cwtl
clc
cwtl
xchg
pop
mov
std
jp
sbb
hlt
sarl
cmpsb
or
js
or
fnsave
mov
dec
dec
fmuls
jmp
pop
cmp
and
lret
mov
mov
int3
loopne
or
hlt
jbe
call
aas
adc
lret
out
sbb
pop
and
pop
imul
adc
outsb
push
ljmp
sarb
aas
mov
lcall
loopne
dec
and
and
adc
addl
xchg
dec
add
test
push
mov
pop
sar
cmp
mov
aam
mov
xorl
iret
in
xchg
dec
sub
mov
adc
arpl
or
pop
dec
call
jecxz
inc
inc
cmp
adcl
or
push
lret
and
cmovnp
stos
jae
and
xor
inc
js
sub
fpatan
in
or
xchg
jle
or
push
and
inc
dec
xor
xchg
fs
mov
cmpsb
add
xor
mov
mov
popa
inc
mov
pop
jecxz
lods
mov
pop
test
mov
dec
adc
mov
sub
push
pop
sub
mov
aad
out
and
into
das
dec
sub
pop
lcall
sub
mov
push
daa
sbb
and
inc
mov
insb
lahf
adc
in
jg
xor
js
aad
insb
and
adc
sub
jo
popa
add
fistps
addb
adc
mov
add
ret
cmp
or
pusha
xor
jle
in
gs
dec
xchg
test
sbb
pop
jmp
push
sti
jle
mov
mov
lods
fstpl
dec
push
pop
cmp
call
test
sti
andl
push
push
pop
xchg
fsubs
lods
add
dec
xchg
dec
push
movsl
fwait
xchg
push
fists
jg
fcmovu
sub
push
pop
lahf
and
testl
mov
fnsave
push
les
cmp
imul
iret
adc
push
push
xchg
jp
fwait
mov
xchg
mov
in
repz
push
es
xchg
sbb
out
adc
gs
sahf
cltd
push
sub
mov
sti
cmp
adc
imul
scas
lret
nop
xor
stc
cwtl
stos
test
sbb
ror
stos
mov
cmpsl
daa
stos
jb
mov
lahf
xor
lret
das
cmp
push
mov
mov
popf
add
cli
loop
jl
movsb
dec
add
in
adc
mov
push
cwtl
push
pcmpgtw
mov
dec
mov
mov
mov
xchg
xor
in
xchg
inc
push
das
jno
andl
stos
cmc
pop
ret
push
mov
mul
in
fnsave
sub
ret
aas
xor
in
inc
xlat
and
loope
sti
dec
mov
adc
mov
add
sub
mov
jmp
jb
sub
xlat
mov
push
div
push
fsub
and
cmc
adc
dec
aam
popf
jecxz
sti
pop
iret
imull
and
pop
addl
push
inc
icebp
xchg
addr16
aad
lods
repz
mov
in
push
mov
cmp
jno
adc
fidivrl
test
mov
imul
aaa
ficoms
adc
arpl
shlb
xor
cli
int3
mov
fwait
in
xchg
iret
mov
mov
jae
popa
xchg
mov
push
push
cmp
das
push
movsl
adcl
push
dec
icebp
mov
or
shrb
aam
sub
and
fists
ffree
icebp
cmp
in
repz
out
pop
hlt
insb
push
hlt
cmpsb
xor
xor
mov
outsl
in
es
xchg
stos
clc
mov
cmp
adc
lret
enter
std
cmp
fwait
push
cltd
sbb
sub
pushf
mov
xor
js
push
mov
mov
sub
sbb
pop
cmp
mov
mov
movsb
es
cltd
iret
sub
and
and
or
mov
adc
jmp
dec
call
add
sub
int
shl
xchg
pop
clc
push
in
loopne
xor
ljmp
fists
cmc
sub
push
leave
and
dec
iret
test
xchg
adc
fwait
loope
js
jg
test
pop
fsub
into
lret
sbb
aaa
sbb
pop
pop
decl
aad
and
or
lret
ljmp
lcall
sbb
add
cmp
dec
pop
xchg
sbb
xorb
adc
and
lcall
fwait
jno
leave
mov
lea
push
fnstcw
xchg
shl
or
inc
xor
call
enter
ss
stos
addr16
movsl
xor
mov
sub
les
xchg
leave
add
rcll
mov
mov
fcoml
or
imul
into
leave
push
lahf
in
or
mov
ljmp
xor
mov
mov
push
xor
dec
shrl
push
lret
imul
loop
jnp
cmp
mov
inc
jns
adc
xlat
sbb
add
mov
aad
fists
ror
adc
xor
mov
or
rcll
loope
add
sub
test
dec
scas
aam
push
jne
into
adc
out
xchg
mov
xchg
mov
cmp
jnp
and
mov
mov
dec
shrb
mov
xchg
call
inc
ljmp
scas
jne
and
gs
fldenv
incb
mov
sub
loope
sub
mov
ljmp
adc
push
or
mov
jno
mov
aaa
pop
nop
in
aaa
icebp
ds
scas
pushf
cltd
xor
shll
dec
push
pop
sahf
mov
or
xor
cltd
dec
pop
pop
fs
fbstp
or
sub
aaa
es
xchg
or
int3
roll
clc
rcrl
cmp
mov
out
and
shll
mov
ror
sbb
pop
insb
addr16
cltd
pop
pop
daa
mov
cmp
arpl
adc
push
outsl
and
icebp
in
lods
sub
movsl
xchg
outsb
insl
and
rclb
cli
cmp
add
xchg
in
push
test
in
push
aad
clc
dec
mov
mov
mov
roll
js
or
xor
sahf
adc
out
call
in
xchg
mov
icebp
jbe
out
test
loope
cwtl
pop
sub
push
movsl
jb
rcl
ficompl
jo
adc
sbb
adcl
fdivr
xor
mov
movsb
push
leave
add
add
pop
adc
shlb
adc
push
shr
hlt
push
mov
les
xlat
push
add
mov
xchg
xchg
push
shlb
lret
sbb
les
fstp
cmp
cmpsb
imul
fiadds
pop
xorb
jns
sarb
test
in
cmpsb
jge
jne
add
imul
pop
jbe
pop
dec
adc
insb
or
sub
mov
pop
outsb
sub
mov
sahf
push
push
sub
cmp
cwtl
icebp
ss
lock
out
inc
inc
into
and
xor
cmp
jmp
and
fcom
scas
mov
dec
and
lret
dec
push
mov
or
popf
and
mov
es
mov
xor
aam
pop
sbb
mov
mov
adc
popa
lret
sub
xor
xchg
bnd
out
loope
mov
sahf
and
jle
jmp
adc
lahf
or
iret
je
mov
stc
shr
enter
and
pop
dec
xor
test
xchg
test
pop
add
sbb
mov
xor
cmpsl
dec
jns
jg
jne
inc
leave
das
jne
push
cwtl
int
and
mov
pop
push
adc
cmp
inc
call
ja
and
mov
nop
call
lret
xor
pop
cmc
or
adc
dec
stos
pop
addr16
xchg
pop
push
roll
nop
fistpll
mov
movsb
pop
lods
orb
sub
or
popa
mov
bnd
rcl
andl
add
add
cmp
xchg
jns
pushf
icebp
sub
in
lods
pop
dec
xchg
inc
inc
mov
data16
xor
cmpsb
pushf
jg
cmp
in
sub
scas
lret
fisubrs
mov
dec
pop
pop
ds
and
les
popl
adc
pop
mull
adc
jg
loope
adc
leave
xchg
jae
pop
fsubr
xlat
xchg
pop
cmc
roll
cs
push
push
jmp
incl
sahf
out
data16
aas
scas
xlat
ja
out
stc
adc
add
sbb
jl
rcr
sub
mov
and
std
sbb
hlt
mov
lds
and
sbb
bound
mov
lods
roll
repz
dec
test
clc
call
ds
cmpsl
inc
jno
push
pop
fcoml
cmpsb
sub
fistps
inc
xchg
cli
sahf
dec
jb
jle
ja
or
push
pop
rcrb
lods
ljmp
jnp
sbb
loopne
pop
ds
int
int
mov
lret
in
ds
pusha
cli
subl
outsl
cmpsl
adc
mov
imul
xchg
popa
aam
mov
int3
sub
sarb
jmp
lock
mov
jmp
xchg
mov
fwait
insb
add
aaa
jae
repnz
mov
or
xchg
aam
xor
sbb
jg
shll
out
inc
sahf
test
mov
outsb
or
sub
aaa
xchg
push
add
mov
or
cmp
fsub
lods
jns
aaa
call
dec
sahf
push
loopne
sbb
lret
ss
push
not
inc
cmp
push
mov
mov
lcall
sbb
lock
jbe
vxorpd
sub
mov
pop
bound
adcl
jb
pushf
xchg
dec
dec
xorb
mov
xor
mov
aaa
in
cld
ret
xor
cs
mov
pusha
sub
sbb
sub
cltd
insb
ffreep
dec
jge
insb
or
pop
dec
dec
scas
xchg
popf
fiaddl
in
test
mov
loope
fwait
mov
fdecstp
sbb
pop
and
cmp
out
lods
or
movsl
shlb
mov
ss
insb
jbe
xor
sub
pop
xchg
pop
pop
push
sub
cld
mov
adc
in
mov
push
sub
test
push
in
mov
aad
ja
loope
dec
dec
xor
in
gs
pop
jge
adc
add
mov
sub
sbb
inc
adc
jg
out
pop
pushf
inc
push
lahf
mov
xor
outsb
je
movsb
cli
inc
scas
subb
lea
ds
dec
idivb
gs
out
sub
xor
hlt
sub
test
ret
enter
iret
mov
push
mov
hlt
sub
imul
daa
push
add
pop
push
mov
shrl
cmp
cmp
pop
dec
inc
inc
in
rorl
cmc
cmc
ret
dec
jmp
add
cmp
cmpsl
jns
jl
or
dec
push
movsl
mov
rclb
cmp
imul
ja
popf
sarb
or
call
sbb
mov
jmp
sub
loopne
lods
insb
pop
cmp
xchg
xchg
sub
pop
mov
aas
xchg
sbb
mov
in
stc
outsl
fildll
std
std
stc
int3
push
in
movsl
mov
andl
sub
jmp
dec
stos
movsb
lea
pop
inc
jno
aas
outsb
scas
aas
xlat
in
mov
pop
cmp
dec
mov
jmp
mov
pusha
ljmp
lea
add
xor
pop
sbb
pop
sub
filds
sbb
fistl
loopne
fs
and
jbe
mov
cmpsl
sub
cmp
ror
dec
or
pop
push
mov
push
and
cmc
xor
lds
lea
xchg
xchg
repnz
push
fdivrs
pop
aad
mov
mov
inc
aaa
jne
mov
inc
stc
arpl
lahf
cmp
in
mov
mov
lods
mov
pusha
lahf
cmpsl
cmp
outsb
in
dec
and
jne
inc
ret
push
inc
mov
jp
pop
push
sbbb
and
inc
in
lods
sbb
mov
mov
cmpsb
ja
ljmp
sbb
and
or
mov
push
mull
fists
in
scas
jecxz
push
mov
jmp
push
ljmp
lea
movsl
or
out
sbb
ds
sub
or
mov
inc
daa
jmp
and
push
aaa
iret
fdivl
daa
xor
dec
dec
mov
les
jl
and
sahf
lcall
inc
aaa
push
or
adc
int
aad
psllw
xor
jne
fiadds
adc
call
inc
inc
push
insl
scas
enter
je
add
sbbb
jne
jno
dec
shr
clc
fwait
sub
mov
jge
push
mov
xchg
xorb
jl
push
or
fwait
loop
cmpsb
shl
bound
jle
out
push
test
enter
sub
pop
mov
pop
ljmp
mov
out
cmp
shrb
jmp
push
inc
and
push
pop
pop
sub
loope
lret
jle
xor
push
shrb
dec
mov
or
pop
scas
xchg
cwtl
mov
adc
xor
sbb
shrb
adc
push
loope
out
mov
hlt
pop
cmpsl
mov
push
adc
lds
pop
push
sub
pushf
xor
xor
sbb
dec
inc
or
mov
dec
cmp
mov
lock
sub
push
sbb
bound
leave
xor
int3
and
mov
xor
cmp
hlt
or
mov
orl
push
fdivl
sub
cmpsl
dec
xor
sbb
xchg
stos
lods
or
xor
pop
repz
cwtl
dec
test
and
add
xor
cmp
sbb
dec
es
pushf
push
dec
or
pop
outsl
dec
out
push
stos
pop
int3
scas
sbbl
rcll
mov
loope
mov
dec
out
rorl
out
mov
sbb
gs
nop
lock
xor
lret
fimull
inc
and
inc
mov
aaa
fldenv
push
mov
inc
jl
call
aam
pop
or
lahf
jmp
add
sbb
test
add
xor
mov
fwait
mov
pop
fisubs
cli
imul
mov
jp
mov
into
test
pop
sbb
push
push
mov
mov
jo
std
movsl
shl
ror
aaa
pop
jg
pushf
les
fnstcw
fistl
daa
aam
dec
ficompl
je
movsl
push
cltd
ret
mov
aad
or
je
mov
jl
push
repz
pop
imul
jnp
cltd
shrb
cmp
jmp
out
stos
xchg
pop
out
or
shlb
mov
dec
stc
cwtl
or
adc
mov
jbe
mov
outsb
inc
dec
bound
mov
pop
or
sub
jnp
sahf
mov
mov
cmp
aas
cmp
push
push
lds
lock
mov
dec
push
and
pop
mov
rcll
mov
hlt
int
adcl
sub
addr16
cmp
notl
outsl
aam
jge
aas
enter
mov
mov
test
jle
dec
mov
cmp
adc
xor
scas
hlt
pop
loope
aad
sbb
ljmp
add
out
xchg
jo
cld
lret
adc
inc
cmpsb
mov
into
nop
aam
inc
cs
jp
or
int
dec
mov
xchg
iret
jno
jns
mov
lds
mov
jb
xchg
cmp
cmp
in
lods
cmc
push
xor
add
mov
pop
ss
and
add
dec
lret
loop
stos
cmc
std
and
sub
call
imul
addr16
jae
jp
mov
das
sbbl
bound
push
les
in
daa
jg
cmp
cwtl
imul
jae
adc
cmpl
mov
mov
inc
xchg
sub
xchg
fcomip
mov
mov
or
in
leave
loope
fcom
adc
mov
jns
jecxz
loope
je
addr16
mov
xchg
push
mov
inc
testb
inc
pop
popf
rclb
fs
push
push
and
and
dec
or
push
pop
cmp
xor
xchg
aad
bound
push
fnstcw
into
inc
jecxz
mov
adc
mov
stos
xchg
sub
xor
pop
mov
ret
xchg
imul
add
pop
outsl
loope
pop
fsts
in
lret
into
decl
push
sti
mov
cwtl
mov
mov
test
clc
ss
rclb
pop
mov
fst
dec
cmp
ficomps
lret
mov
xor
jns
in
fildll
shll
mov
push
popf
pop
push
xchg
cmp
call
mov
or
sti
fstp
lea
sti
out
popf
xchg
loop
outsb
icebp
divl
clc
js
out
pop
out
cwtl
lret
mov
das
lahf
mov
ret
orl
push
or
adc
mov
data16
adc
push
insb
push
fwait
and
or
push
pop
add
mov
filds
sbb
jbe
sbb
sub
sti
or
dec
fsubrs
mov
stos
pop
das
push
addr16
fxtract
dec
sarl
loope
arpl
xchg
mov
and
mov
and
mov
addr16
push
xchg
in
mov
int
testb
push
mov
test
call
add
sbb
mov
stc
and
xchg
sbb
mov
push
push
jecxz
rclb
and
subb
or
fsubrl
inc
push
xchg
dec
inc
pop
xchg
adc
adc
aam
fidivrl
cmp
jbe
hlt
xchg
inc
xchg
out
iret
dec
mov
pop
sub
cmp
fldl
adc
and
and
cltd
pop
cli
imul
aas
cmc
mov
repz
or
sub
repnz
pop
je
mov
das
cs
dec
add
mov
imul
mov
ja
jno
out
je
xchg
xchg
hlt
inc
loopne
std
lods
cmp
and
aas
push
sub
imul
push
xor
test
jmp
cmp
xchg
push
repz
xorl
jb
ss
inc
mov
inc
inc
mov
xor
mov
aas
mov
pop
jge
mov
rolb
scas
loope
xchg
sahf
cmp
fs
and
mov
cmp
inc
fxch
imul
jo
push
fucomip
xor
cmc
cld
xchg
xor
aam
jbe
sub
fists
imul
mov
outsl
push
mov
and
add
pop
sarl
shlb
mov
xor
xor
cltd
adc
jmp
pop
sub
nopl
in
out
std
dec
iret
fstp
lods
scas
mov
lahf
insl
outsl
jge
dec
dec
pop
pop
sub
nopl
in
out
std
dec
iret
fstp
lods
scas
mov
lahf
insl
imul
push
pop
pop
sub
or
sti
leave
iret
fst
lods
stos
mov
jnp
mov
jnp
pop
pop
sub
popf
fists
adc
push
addr16
jb
out
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
cmp
or
aas
mov
stos
das
lcall
fiaddl
inc
cmp
or
pop
aad
mov
out
adc
add
ficoml
inc
cmp
or
pop
aad
lds
jo
imul
movsb
xor
sub
imul
push
rcl
mov
js
jo
push
dec
cld
cli
adc
mov
out
incl
push
dec
and
movups
in
xor
ret
rolb
inc
and
jnp
daa
push
movsb
push
mov
adc
cli
pop
mov
mov
cmp
mov
orb
movsb
frstor
and
pop
shrl
fisubl
enter
pop
pop
jo
xor
pop
test
stos
lret
mov
add
cmp
adc
cmpb
dec
ljmp
cli
fs
ficoml
mov
sbb
push
pop
aad
lds
adc
ljmp
mov
fdivrl
outsl
les
mov
xchg
aas
mov
mov
inc
scas
cmp
inc
out
lahf
add
and
fstps
dec
cmp
push
mov
fists
push
push
lahf
adc
adc
dec
divb
or
jp
push
pop
aad
lds
adc
ljmp
mov
movsl
sbb
push
pop
aad
lds
adc
ljmp
mov
lea
add
data16
push
and
and
fcom
jae
pop
push
sbb
push
jg
push
daa
arpl
popf
lret
incl
dec
dec
xor
popa
pop
fidivl
nop
cli
call
fistl
repz
mov
jne
pop
jnp
rorb
jbe
mov
push
or
jne
outsl
lret
popa
in
dec
inc
loopne
jle
out
sbb
test
xchg
inc
push
icebp
dec
out
jle
dec
fcompl
push
lods
outsl
inc
addr16
jnp
sub
lods
nop
insb
add
or
xchg
inc
aas
sub
sub
lcall
push
je
popf
outsl
jg
imul
ret
xchg
fwait
cmpsl
cwtl
cli
push
push
popl
xor
ja
jno
sub
aam
push
push
mov
hlt
cmpsb
dec
inc
xor
inc
adc
add
adc
mov
addr16
mov
pop
cmc
addl
rcrb
inc
test
mov
ret
js
loop
ja
cmpl
mov
pop
pop
inc
push
imul
dec
mov
push
les
out
push
repz
jae
hlt
subb
mov
test
xchg
je
popf
pop
jle
xchg
xchg
mov
push
into
pop
mov
adc
dec
adc
call
jle
sub
jle
aaa
lea
loope
pop
sub
mov
pop
movsb
into
xor
out
cmp
inc
stos
mov
lahf
sub
jle
scas
or
pop
sbb
test
xchg
xor
adc
popa
bound
cmpsl
sti
xor
xor
loopne
bound
or
add
rolb
adc
into
lea
mov
fsubrp
xchg
pop
mov
inc
and
aad
or
arpl
push
cmpsl
mov
stos
test
in
mov
pop
loopne
aaa
test
sti
shrl
loope
cld
mov
push
pop
sbb
cmp
dec
outsb
push
scas
jecxz
stos
popa
call
or
dec
jne
mov
or
xor
out
enter
aad
push
xor
call
xchg
adc
jb
dec
pop
mov
pop
ljmp
inc
cmc
sbb
cli
and
lahf
ja
sbb
ljmp
aam
cld
push
imulb
mov
push
jl
push
andb
lds
jno
inc
decl
sbb
pop
xor
jae
fcomps
and
mov
cmpb
sbb
fisubrs
popf
subb
cmp
pop
dec
jb
lods
aam
or
jo
xor
fadds
out
jbe
faddl
dec
mov
and
or
shlb
push
mov
xchg
xchg
data16
dec
stos
lret
adc
fwait
adc
lods
and
je
jne
and
lods
mov
popf
pop
cli
sub
out
jge
xchg
mov
cmp
cmp
jmp
sbb
inc
test
pop
mov
test
mov
jo
in
lock
ljmp
cwtl
xchg
lock
stos
mov
in
call
mov
fucompp
dec
lret
mov
lret
sub
imul
pop
jnp
shlb
popf
jmp
mov
mov
icebp
pop
stos
and
sbb
aad
and
jge
cwtl
ljmp
fst
xchg
xor
sbb
pop
out
or
cmc
outsl
pusha
pop
inc
dec
lret
and
mov
pop
mov
aaa
xchg
mov
call
push
fwait
sbb
ret
cld
jno
sti
cmp
sbb
xchg
mov
and
pop
push
and
xchg
add
or
stos
addr16
ljmp
ljmp
into
and
fidivl
in
dec
rol
mov
sbb
fadd
or
mov
bnd
xorl
jl
call
mov
inc
cmp
cmpsl
loopne
push
dec
sarb
sub
in
iret
mov
xchg
rcll
test
sub
pop
adc
mov
dec
xchg
addb
mov
push
aam
cmp
negb
inc
jmp
or
jp
rcrl
jle
xchg
cwtl
cmp
jle
mov
gs
fwait
cmp
movsb
and
add
jecxz
lahf
hlt
fistpl
add
ss
in
ret
jmp
pop
ljmp
push
subb
lock
mov
call
and
push
mov
ljmp
stos
xchg
or
push
addr16
cli
add
mov
icebp
bound
lods
or
push
add
jbe
xor
adcl
lods
xor
sti
cmpsl
ljmp
orb
pop
nop
popa
inc
pop
je
xchg
movsb
mov
mov
pop
push
aas
aam
sub
pushf
dec
xor
test
in
les
cmpl
sub
add
cltd
mov
pop
bound
jl,pn
and
scas
push
xchg
xchg
stos
xor
pop
enter
push
mov
mov
je
dec
adc
cmpsl
insb
mov
mov
iret
addr16
aad
cmpsb
das
dec
pop
pop
scas
and
aad
sbb
pop
arpl
out
pusha
popf
mov
adc
inc
jns
iret
das
push
xchg
ljmp
xor
mov
dec
xor
leave
imul
loope
loopne
in
rcll
cmp
or
cld
dec
xor
mov
daa
cld
aad
inc
sbb
rorl
mov
pusha
and
in
inc
push
xchg
sbb
pop
insl
add
repnz
fs
out
jg
ljmp
mov
sbb
adc
sbb
pop
add
imul
add
xchg
xor
ja
ljmp
lds
mul
movsl
inc
xchg
mov
xchg
inc
int3
mov
cmpb
push
rcrb
add
gs
lds
out
pusha
filds
addr16
test
push
out
xchg
xchg
aam
xchg
sar
notl
test
pop
push
in
xor
icebp
xchg
pop
push
xlat
adc
jne
enter
and
mov
pop
aam
cmp
cld
push
push
push
leave
ret
repz
popf
enter
sbb
sbb
mov
pop
mov
out
mov
pop
jbe
and
xor
jo
dec
icebp
mov
add
in
xchg
insb
push
push
and
push
sbb
lea
leave
fildll
pusha
inc
push
std
and
jns
fldcw
lods
in
cld
pop
arpl
aaa
xchg
icebp
ja
je
ss
push
movsb
leave
leave
sub
adc
rcrl
ret
repz
nop
mov
idivb
sbb
mov
ljmp
xor
orl
xor
daa
cmp
mov
test
jne
lcall
pop
mov
jmp
in
loope
cmp
nop
xchg
jg
dec
pushf
pop
int3
cmp
aad
add
test
nop
jae
jg
mov
bound
adc
xor
jecxz
jl
mov
or
push
arpl
inc
inc
inc
cmpsl
pop
mov
int3
test
mov
aas
pop
adc
icebp
or
or
int3
mov
adc
inc
imul
add
ret
jl
inc
mov
aam
inc
mov
negl
push
scas
push
shr
add
push
cli
in
inc
pop
insb
mov
ret
dec
jecxz
push
nopl
jecxz
daa
loop
or
inc
and
aam
pop
adc
shr
sarl
aaa
sub
lock
cli
test
in
or
cld
int
dec
mov
sti
mov
lcall
mov
clc
sbb
xorl
cli
cltd
int3
and
fwait
dec
cmp
insl
or
lret
repz
nop
test
dec
sbb
clc
stos
jmp
loope
add
lds
mov
bound
bound
inc
clc
out
xchg
aad
scas
cltd
stos
cmp
in
jecxz
mov
je
mov
scas
inc
inc
repnz
mov
int3
mov
mov
or
negb
pop
test
mov
test
enter
mov
lods
jp
addr16
fcoms
add
insl
negl
int
fstl
dec
outsb
das
push
and
xor
cmp
mov
jecxz
pusha
cmp
out
dec
mov
or
jne
std
ljmp
popa
mov
scas
cmpl
push
cmpb
cltd
shrb
cmp
jo
push
in
add
in
xchg
dec
push
leave
lds
inc
dec
mov
aas
or
push
test
insl
pop
mov
xchg
out
lret
add
ja
fst
inc
shrl
sbbb
mov
push
out
icebp
xlat
xchg
xchg
sbb
lods
lahf
sub
mov
add
xorb
mov
pop
lock
pop
outsl
sub
ret
or
test
sbb
nop
lock
add
leave
sub
mov
fimuls
pop
mov
pop
add
jne
xchg
cs
push
and
xlat
xchg
cmpsb
outsb
pop
aas
int
insl
push
rclb
or
mov
lea
and
and
aam
jp
sbb
sbb
mov
mov
arpl
clc
or
xor
jp
jo
int
sbb
adc
in
sbb
inc
movl
push
test
rclw
in
sahf
and
inc
es
sbb
push
fists
push
hlt
std
iret
inc
mov
jmp
sub
cltd
push
insl
jbe
jns
insb
lock
dec
xchg
pop
push
fs
inc
stos
jae
ror
dec
stos
sbb
mov
loope
push
int
dec
aaa
int
cwtl
push
fcmovu
shll
out
fadd
dec
repz
test
pop
dec
and
mov
and
in
xchg
test
mov
mov
aam
test
pop
pause
popa
push
lcall
test
adc
mov
ret
xor
lods
and
inc
notb
add
mov
ss
out
xchg
popa
cmp
push
or
xchg
push
iret
mov
cmp
adc
in
mov
mov
arpl
xchg
cmp
sub
sub
imul
mov
xor
jo
les
pop
test
sahf
dec
xchg
or
ja
pop
push
ret
add
jl
jno
fs
add
adcb
dec
pushf
push
pop
push
push
inc
mov
mov
push
pop
stos
rolb
shl
fiadds
pop
out
push
mov
outsb
xor
and
adc
adc
int
rolb
xor
sub
and
jne
ja
ret
fcmovu
fldl
xor
add
adc
mov
outsl
jle
mov
int3
ds
pop
sbb
aaa
jecxz
aaa
cmp
adc
fimuls
lcall
loop
setne
push
sahf
mov
dec
sub
push
cmp
cwtl
jno
push
dec
icebp
sub
icebp
test
insb
es
cmpsl
enter
dec
nop
and
mov
test
inc
push
adc
mov
add
fisttps
push
lock
test
sti
mov
in
pop
shll
ds
sub
out
fcoml
pop
lds
popa
movsb
cltd
out
and
add
ret
pop
ljmp
mov
lcall
push
lret
push
fistl
push
outsb
test
xlat
out
add
rclb
stc
out
loop
mov
and
ret
pop
fildl
push
ja
inc
repnz
jp
add
test
xor
in
repz
mov
or
cmp
jle
or
xor
std
sub
int3
test
test
jno
push
push
xor
xor
cmpsb
js
sub
test
out
stos
frstor
ljmp
cltd
addr16
mov
jecxz
sti
daa
or
rorl
sti
jae
sub
adc
popf
icebp
pop
repz
stos
pop
cltd
shrb
or
fs
jae
idivl
nop
fsub
rorb
xchg
ret
into
out
push
int3
xor
shlb
or
cs
mov
jmp
dec
fdivrl
sbb
stos
sub
call
cmpsl
aad
andl
imul
xor
jle
ss
push
mov
icebp
xchg
lds
in
test
add
cs
pop
sti
cmc
orl
and
pusha
imul
cld
or
lds
jp
sub
push
add
sbb
xlat
lods
xor
push
xchg
daa
out
cmc
pusha
je
pop
push
pop
mov
dec
mov
inc
je
cvtps2pi
or
add
mov
in
loop
adc
sbb
movl
fistpll
sahf
lds
repz
xchg
test
cmp
push
pop
push
sub
std
aam
jg
ljmp
aam
lret
insl
mov
stos
dec
dec
add
in
lock
push
iret
adcb
adc
pop
mov
les
push
std
adc
je
addr16
popa
and
push
push
and
je
xchg
mov
fisttps
shl
inc
lcall
xchg
fwait
mov
jns
out
inc
fcomp
inc
jns
jb
or
in
push
inc
push
fwait
pop
mov
das
stos
inc
mov
inc
push
or
mov
and
mov
outsl
and
popf
or
inc
dec
xlat
fcoml
outsl
ljmp
inc
mov
icebp
mov
jo
imulb
mov
or
mov
xor
add
inc
jb
or
stc
mov
dec
mov
fcoml
std
lret
mov
xlat
test
jp
test
cwtl
add
pusha
mov
sub
shll
aas
daa
aas
jecxz
mov
iret
add
inc
gs
sbbb
rorb
cltd
leave
rcl
ret
dec
mov
gs
jp
push
pop
inc
lcall
cmpsb
ljmp
or
sti
icebp
push
imul
cli
cld
aam
jns
fidivrs
orb
cmc
jmp
jns
insb
inc
pop
sbb
je
push
xor
sub
cmp
popf
dec
out
jae
sbb
inc
sbb
or
sti
out
out
xchg
enter
mov
ss
pop
pop
push
sarb
cld
jo
pushf
jg
adc
push
xchg
imul
xchg
or
roll
hlt
jle
cli
sbb
adc
imul
jbe
aaa
aam
bound
push
lods
add
cwtl
notb
sbbl
push
pop
and
dec
or
jo
fs
pop
or
stos
push
sbb
bound
into
stos
loope
jno
jae
jle
xchg
dec
mov
fsubs
bound
jae,pn
adc
add
pop
sub
mov
pop
lds
sbb
sub
out
pop
adc
mov
fsubp
std
out
fs
cltd
fildll
dec
imul
dec
test
insb
sub
cs
hlt
popw
fwait
in
or
and
test
test
out
push
inc
xchg
adc
in
movsb
push
rcl
lret
push
arpl
xchg
scas
ret
add
adc
jae
rolb
dec
push
inc
es
stc
lock
mulb
scas
fcmovbe
aaa
mov
mov
sub
ret
inc
loopne
mov
data16
mov
sahf
fldcw
mov
xchg
pop
test
jp
dec
test
xchg
and
pop
xchg
pop
xchg
jmp
sub
dec
mov
cmp
sar
xchg
cmp
mov
ret
push
jg
xlat
lahf
in
mov
clc
roll
mov
mov
insb
data16
cmp
ds
sub
frstor
dec
ds
cmp
aaa
aas
lods
adc
ficompl
fisubrl
add
push
nop
clc
mov
adc
sub
call
imul
rcl
sbb
shll
and
rolb
cmpsl
cmp
cmp
lret
sbb
jl
fistl
jecxz
push
push
push
dec
or
push
xchg
je
das
push
in
mov
idivl
add
xorl
mov
iret
js
loop
lcall
cs
mov
mov
pop
or
or
stos
out
cmp
loope
lcall
cltd
imul
ret
mov
mov
lds
lret
lret
loope
cmp
sub
jge
mov
clc
dec
push
fists
imul
repnz
xchg
cwtl
cmp
or
fidivs
outsl
cmp
int3
and
pop
adc
mov
push
push
inc
push
mov
cli
in
and
sbb
inc
dec
test
mov
cli
sbb
and
repz
inc
dec
sahf
or
dec
nop
dec
loope
xchg
sbb
inc
cld
leave
nop
stos
stc
inc
popa
inc
dec
js
add
sbb
jne,pn
add
arpl
xchg
lods
ret
jecxz
leave
push
xlat
gs
add
or
push
xchg
cli
or
and
sbbl
mov
jp
addps
or
mov
outsb
push
js
outsb
mov
dec
and
ds
mov
in
iret
add
cmp
cs
and
xor
inc
mov
xchg
fwait
sarb
hlt
incb
and
pop
rcrb
popf
add
and
pop
xchg
lea
sub
adc
decb
mov
add
xor
mov
cmpsb
xlat
test
sub
jne
in
movl
cmp
stos
mov
jno
inc
mov
inc
jns
xor
loopne
jecxz
push
fnsave
sti
xchg
dec
mov
sub
add
dec
stc
out
mov
and
dec
sbb
dec
inc
pop
push
xchg
andb
iret
lods
xor
or
rolb
outsl
dec
pop
aas
push
add
dec
enter
es
mov
jnp
lock
mov
xor
jb
dec
pop
xchg
adc
push
cli
xchg
mov
lcall
scas
test
push
mov
arpl
rclb
sub
add
push
fistpll
subl
mov
inc
xor
jmp
shlb
xchg
lods
das
jo
mov
push
into
cld
adc
test
out
xor
dec
xor
mov
lcall
jb
cmp
rcl
push
jnp
rcll
push
adc
add
insl
addr16
insb
adc
dec
addr16
ret
xor
and
fsubr
sbb
xchg
fildll
outsb
stc
xlat
push
xor
push
cmp
loope
mov
stos
jmp
jmp
in
mov
test
mov
pop
mov
ret
pop
jp
and
cmp
adc
mov
mov
pop
out
dec
sub
outsl
test
push
arpl
lret
into
jno
inc
cmp
jmp
and
pop
push
xchg
jge
mov
imul
inc
fcmovne
ror
mov
repnz
aam
jmp
daa
xor
xor
push
mov
sti
sub
sbbb
mov
sbb
and
pop
sub
bound
push
fists
adc
fdiv
adc
sub
xorl
pop
stos
into
fidivrs
mov
lret
add
push
fstl
outsb
xor
mov
aas
jecxz
rorb
xor
aam
sarl
je
popf
mov
orl
pop
xor
iret
aam
icebp
pop
scas
inc
out
shll
insl
into
dec
push
adc
icebp
mov
inc
dec
popa
xchg
or
sbb
jbe
push
imul
or
scas
sbb
test
mov
push
push
push
dec
pop
jge
mov
sub
leave
push
sub
nop
or
mov
hlt
push
addr16
push
lret
neg
data16
sahf
push
cmp
bound
les
jg
cmp
jecxz
in
add
in
jnp
xchg
popa
mov
sbb
lret
daa
xor
xchg
cmpb
movsl
into
mov
into
xchg
xchg
out
jmp
push
sbb
pop
daa
and
dec
jecxz
fnstcw
jb
pop
ja
cmp
push
pop
lock
mov
sbb
jl
mov
push
add
clc
cmp
xchg
pushf
inc
popa
lcall
push
or
jl
sub
into
lds
bound
or
popa
test
lods
sbb
push
adc
iret
arpl
or
test
imul
enter
ret
xorl
add
das
popl
in
mov
in
inc
dec
dec
inc
mov
xor
negl
mov
arpl
fwait
jnp
and
mov
mov
dec
push
xchg
pop
pusha
popa
xchg
pop
fstpl
xchg
flds
mov
add
lds
add
psadbw
out
cld
push
lahf
ret
in
add
into
dec
out
sbb
movsb
and
mov
pushf
and
test
stos
loop
pop
loop
movsl
dec
xchg
or
pop
aad
lds
adc
ljmp
mov
movsl
sbb
push
pop
aad
lds
adc
ljmp
mov
movsl
sbb
push
pop
aad
lds
adc
ljmp
mov
movsl
sbb
push
pop
aad
add
xor
bound
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
jg
outsl
dec
pop
jge
insl
repnz
pop
outsb
jno
add
int
std
into
in
mov
mov
outsl
dec
pop
jge
insl
aas
sbb
andnps
fucomp
int
std
iret
in
jg
scas
lea
pop
outsl
dec
pop
jge
insl
aas
sbb
cvtps2pi
out
mov
iret
mov
shl
fisubs
or
adc
movsb
or
mull
push
xor
xchg
sti
fsubr
popf
into
ss
aaa
push
in
add
mov
rcrb
daa
add
xor
enter
das
pop
addr16
pop
pop
cmp
adc
push
js
mov
mov
cli
cmp
imul
push
psrlq
push
and
or
sbb
mov
sbb
xchg
das
test
mov
jmp
iret
mov
nop
rcrb
lds
int3
pop
sahf
and
and
fidivrl
outsl
dec
pop
jge
insl
aas
sbb
cvtps2pi
fucomp
int
std
iret
in
mov
mov
sbb
jge
insl
aas
js
fs
or
int3
fistps
scas
call
sbb
or
cmp
and
jno
inc
addr16
pop
dec
lcall
mov
jmp
ret
outsl
add
jae
das
or
fucomp
int
std
iret
in
mov
mov
outsl
dec
pop
jge
insl
aas
sbb
cvtps2pi
fucomp
int
std
iret
in
mov
mov
dec
and
shrl
hlt
mov
outsl
mov
push
fdivrl
fimuls
dec
pop
test
xchg
mov
dec
cmpsl
sti
in
sbb
fstpl
fs
push
xchg
cld
std
shll
mov
lcall
adc
xor
or
iret
cmp
loope
mov
inc
out
xor
fld1
jno
mov
addb
inc
out
jo
shlb
out
into
xchg
or
push
push
hlt
mov
inc
xchg
mov
cli
into
sti
std
popa
add
daa
push
mov
inc
lods
aas
sbb
xchg
outsl
mov
or
sbb
sbb
and
adc
mov
into
xchg
notl
out
loop
dec
test
mov
popa
loope
repnz
ficoml
xchg
sbbb
bound
stos
sti
repz
mov
mov
outsb
ja
stc
xchg
mov
lret
shufps
out
fstps
out
xchg
in
stos
jae
push
pop
xchg
fisubrs
push
addl
testb
daa
and
cmpsl
dec
mov
push
inc
hlt
popa
fistps
and
pop
jne
test
or
mov
mov
xchg
enter
and
pop
mov
insb
mov
push
out
cmpsl
repnz
dec
vmulps
pop
push
jmp
hlt
ljmp
mov
sbb
dec
xchg
aam
fnsave
jno
shl
ret
push
cmp
mov
and
jb
sub
je
sub
nop
test
mov
xorb
and
rclb
pusha
push
movsl
pop
cmc
lods
fsubrl
sahf
add
subl
insb
loope
ds
cs
mov
es
dec
or
stos
mov
ss
or
add
fs
lret
add
inc
insl
xor
inc
and
adcl
fs
aad
dec
addb
out
sub
push
jae
push
add
int
push
nop
ret
pop
add
hlt
cltd
mov
mulb
icebp
lcall
inc
sub
cmp
jmp
test
mov
cwtl
imul
dec
adc
clc
ret
mov
push
in
sti
sti
sub
inc
push
xchg
into
inc
and
ret
scas
fisubl
repnz
push
scas
rcll
sbb
mov
mov
stos
out
push
ret
icebp
lret
cli
cmp
inc
sbbb
testl
or
clc
push
icebp
pop
and
dec
jo
subb
push
push
scas
movsb
lods
push
mov
and
imul
sahf
out
cmp
and
popf
out
cmovne
xlat
sbb
icebp
repnz
sbb
or
or
mov
enter
cwtl
jae
or
cmp
setg
out
push
add
pop
push
push
sbb
add
jb
and
mov
sbb
in
sbb
stos
xchg
lds
ss
add
leave
popa
ss
out
int
pop
movsl
data16
xor
add
outsb
and
adc
xchg
sub
lods
sub
sub
pop
inc
or
pusha
add
das
dec
dec
fs
mov
push
and
dec
mov
mov
outsb
xchg
popf
loop
xor
or
or
push
mov
pushf
fcomi
das
cltd
sbb
xor
lods
push
inc
mov
stos
ljmp
jg
jmp
outsl
or
popf
add
sbb
mov
jge
sbb
xor
fstpt
and
in
loope
add
sub
pop
pop
mov
mov
shll
push
dec
cmp
add
icebp
pop
jp
movsl
jbe
jo
mov
mov
pop
or
pop
mov
cmp
les
mov
outsb
ret
xorl
push
and
sub
adc
test
ret
es
and
push
mov
mov
fwait
test
scas
in
repz
aas
pop
jge
xchg
adcl
jbe
jae
push
or
lea
push
in
and
lods
loopne
and
sarb
and
insb
or
and
subl
cmp
pop
inc
ds
iret
jbe
fistps
and
cmp
and
fmulp
mov
xchg
inc
jle
out
filds
mov
out
pop
lods
dec
adc
sti
mov
mov
and
mov
pushf
inc
test
fisttps
dec
xchg
daa
push
repnz
inc
cmpsl
dec
add
fs
xchg
xchg
testb
jns
inc
push
pop
leave
shlb
jae
call
cmp
lods
rcll
adc
or
call
fdiv
scas
testl
inc
add
lahf
out
xchg
iret
andb
pushl
pop
xor
dec
add
sub
xor
xor
or
xchg
jecxz
out
fsubs
xor
dec
std
scas
aad
jmp
sub
mov
inc
pop
push
test
roll
xor
dec
enterw
outsb
dec
add
cltd
sub
aaa
insb
pextrw
adcb
xchg
xchg
dec
xlat
outsb
mov
rorl
xor
add
jnp
inc
lds
dec
daa
xor
movsb
outsl
dec
sbb
push
pop
repz
out
inc
mov
nop
mov
std
pop
xchg
scas
icebp
outsb
mov
enter
mov
shl
fisubrs
jle
jmp
punpcklbw
jge
ret
mov
xchg
add
movsl
pop
mov
lret
sub
fmuls
rcll
cmp
push
sbb
xor
or
cmpsl
mov
adcb
sub
repz
dec
mulb
push
inc
jg
nop
fwait
cmp
cli
add
ljmp
jne
inc
push
int
dec
aaa
cmpsl
aas
dec
jb
inc
loopne
incl
mov
loop
loope
mov
cmp
lds
fwait
call
aas
jle
pop
sbb
mov
adc
mov
fdivrs
sub
push
neg
xchg
pop
or
lret
mov
ret
shll
insl
cmp
mov
dec
pop
jle
xor
inc
in
hlt
add
sbb
inc
subl
add
in
push
sub
je
pop
mov
in
jl
dec
adc
ja
stc
or
lods
push
sub
pop
movsb
mov
jbe
mov
mul
mov
mov
sub
jle
mov
aas
popl
pop
out
ds
mov
sbb
sbb
and
cmp
int
mov
repnz
insb
sbb
dec
popf
rorl
add
or
mov
and
in
jo
mov
out
sub
and
mov
xor
dec
jne
cmp
sarb
sub
aas
mov
mov
daa
in
mov
sbb
xor
push
mov
xchg
cmp
sbb
push
cmp
mov
cs
lds
inc
add
mov
add
out
popa
cmc
cs
add
pop
and
pusha
sub
add
push
dec
ret
into
sti
aam
xor
into
add
stos
aaa
xchg
mov
inc
or
pop
pop
scas
push
jnp
inc
dec
cmp
cmp
sbb
cmp
jle
out
cwtl
nop
pop
into
push
jle
fimuls
or
dec
inc
ljmp
adc
mov
shlb
cltd
add
leave
test
imul
mov
xchg
mov
jns
pop
inc
popf
and
pop
arpl
mov
push
es
push
inc
outsl
cmp
and
jp
enter
adc
outsl
xor
movsl
lcall
jne
jmp
xchg
cld
psubusb
mov
clc
and
and
fisubrs
scas
lods
mov
popa
das
xlat
popa
dec
shll
inc
test
inc
je
fldt
dec
fnstenv
jbe
pop
cmp
cmp
xchg
out
or
xchg
inc
xchg
jns
out
bound
in
mov
out
jmp
xchg
sub
sub
mov
xor
mov
jecxz
aas
ret
xchg
lods
outsl
lret
dec
add
push
fadds
mov
xchg
adc
or
push
sbb
xchg
imul
add
int
sbb
jecxz
adc
je
dec
adc
push
rcrl
mov
sub
jno
nop
aam
jae
adcb
in
mov
insb
cmp
adc
add
xchg
inc
push
shlb
out
out
dec
testb
mov
mov
mov
mov
dec
lret
repnz
lret
mov
mov
test
jecxz
push
rorl
in
repnz
sbb
adc
xchg
xchg
and
inc
mov
jns
or
lahf
sub
roll
cmp
mov
dec
push
pop
xchg
push
std
cltd
imulb
out
xor
mov
test
dec
sub
mov
rcrb
and
stos
scas
repnz
call
jns
test
fwait
outsl
inc
pop
in
xchg
dec
notb
push
ret
inc
cwtl
dec
xrelease
pop
or
stc
dec
addr16
mov
movsb
xchg
insb
in
xchg
jb
jle
es
pusha
fmuls
outsb
in
mov
jg
js
xchg
sub
xchg
rolb
popf
daa
add
divb
std
pop
aam
push
xor
add
aaa
mov
fisttps
scas
push
xchg
sbb
xchg
pusha
rclb
add
adc
iret
movsl
mov
mov
es
rclb
mov
pusha
lods
inc
or
or
xchg
orb
mov
push
lock
sbb
pop
push
in
adc
xchg
fstl
imulb
mov
and
addl
imul
std
cwtl
jbe
fsubrs
sub
lods
lods
mov
scas
out
cmp
sub
shlb
dec
sbb
push
nop
fistpl
push
test
mov
jl
insb
icebp
test
out
inc
jmp
sbb
xor
push
sbb
xor
and
add
mov
push
out
xor
jb
inc
das
lods
nop
lods
pop
sub
push
lea
scas
jae
sahf
decl
ljmp
xlat
call
dec
ljmp
sbb
mov
jmp
mov
call
testb
sbbb
sub
enter
lcall
xor
push
mov
aas
dec
es
inc
mov
jne
mov
stos
sti
fimull
into
cmpsb
mov
pusha
test
shll
ds
xor
out
mov
in
out
pop
sub
pop
or
or
adcl
jbe
dec
push
push
fstps
ret
pop
push
les
jecxz
mov
aad
mov
outsb
add
xchg
stos
mov
adc
xor
mov
xor
jo
lea
aas
call
cmp
and
and
cwtl
xor
cmp
add
das
addr16
mov
mov
cmp
lcall
leave
jge
xor
xchg
push
in
mov
mov
sbb
fdivl
mov
cmp
lcall
mov
in
mov
jl
mov
inc
push
inc
adc
xor
imul
es
out
mov
or
into
in
mov
lea
adc
inc
sbb
xlat
aaa
insl
sahf
mov
inc
in
mov
loope
pop
push
sub
divb
out
add
into
pop
js
mov
xchg
add
pop
aas
push
dec
rolb
in
repz
or
xchg
imul
fs
adc
xchg
inc
ret
addr16
sub
cwtl
mulb
jmp
inc
inc
cld
add
cmp
sbb
push
daa
movl
and
xor
in
sub
mov
ret
test
loop
cmc
aaa
push
cmp
les
jle
inc
mov
iret
scas
outsb
pop
aaa
mov
fdivrl
mov
call
dec
xor
jo
cltd
adc
pop
add
cmp
and
idivl
mov
xchg
shll
leave
nop
inc
push
push
sbb
sbb
inc
push
addr16
mov
lods
test
sbb
out
es
fadds
cmp
fstpl
xlat
in
mov
out
in
es
or
bound
sub
or
and
out
add
push
sub
mov
fidivrl
outsl
icebp
pop
daa
loope
and
fstps
out
stc
xor
rcrb
mov
mov
data16
dec
rep
or
cwtl
push
jae
cmpsl
xchg
add
sbb
mov
lret
inc
mov
mov
das
shrl
cmp
mov
test
stos
adc
add
cs
into
add
int3
inc
outsb
add
shl
pop
idiv
sbb
pusha
pop
pop
je
cltd
mov
int
outsb
icebp
mov
pop
jge
vpshlw
pop
jne
sbb
sub
into
sar
or
mov
inc
dec
and
adc
cld
pop
mov
sbb
jmp
sub
sbb
adc
mov
cld
xor
push
dec
popa
cmp
nop
inc
ret
inc
imulb
and
cmp
cwtl
and
xor
cmp
dec
and
mov
cmp
call
hlt
dec
fisubs
cmp
inc
inc
push
ret
sbb
xchg
and
jmp
sub
push
out
inc
sbb
xchg
jle
rcrl
data16
out
lret
cs
xor
or
xor
daa
adc
dec
sarb
mov
rcrl
adcb
roll
stos
adc
stos
stos
pop
movl
xor
rclb
js
mov
jae
shl
test
repz
push
testl
sub
sbb
jo
add
or
xchg
inc
sub
lods
jecxz
stos
mov
pop
pop
mov
fisubrl
jmp
sbb
add
and
popf
clc
mov
sbb
or
mov
dec
outsb
cmc
xlat
or
mov
xchg
ds
into
es
mov
adc
inc
sub
mov
sub
popa
cmp
xchg
xor
ja
lret
daa
mov
xor
in
dec
push
sub
inc
push
lcall
sahf
xor
mov
xchg
test
push
aas
mov
dec
lods
lds
cld
mov
adc
push
pusha
xchg
mov
pop
mov
js
pusha
pusha
repz
iret
pop
mov
insl
loopne
sub
push
scas
lock
push
mov
mov
fidivrs
popl
lea
pop
inc
cmp
inc
out
add
mov
and
loop
cmp
mov
pop
adc
test
iret
fucomp
out
or
add
push
shrl
hlt
es
dec
xchg
clc
cmpsl
mov
inc
inc
stos
dec
mov
jge
fwait
and
inc
or
test
ret
push
movsb
mov
sbb
mov
dec
cmc
or
add
mov
faddp
xchg
mov
and
and
cmpsb
mov
jle
sti
push
push
push
xchg
or
jle
int3
or
jbe
xchg
clc
mov
xchg
sub
dec
or
insb
lock
stc
cmp
int3
jae
adc
pop
or
cmp
xor
adc
mov
pop
push
out
lock
clc
jmp
cmp
lods
stos
ror
out
rcll
pusha
es
dec
cmp
int
mov
outsb
push
lcall
sbb
push
sbb
pop
mov
in
scas
ret
jl
jae
sub
repnz
cmpsl
sub
rcrb
sub
es
in
mov
adc
cmc
jne
add
push
es
jns
rclb
insl
mull
mov
push
ret
pushf
icebp
outsl
mov
mov
inc
loope
aas
mov
inc
cmp
dec
mov
or
dec
push
mov
dec
mov
pusha
sbb
jmp
out
imul
loopne
jecxz
les
or
leave
pop
push
pmuludq
jl
stos
movsl
and
mov
test
jge
adc
mov
mov
adc
aas
or
xor
fsubs
fdivrs
xor
inc
push
mov
dec
in
lret
mov
loopne
sbb
xor
repnz
inc
cmpsl
adc
rolb
test
add
dec
lret
and
pop
int3
lds
mov
lods
cmp
aam
test
pop
cs
sti
lock
icebp
pop
fwait
movsb
fisubrl
mov
or
dec
adc
bnd
mov
aaa
sbb
pop
lret
movsb
cmpb
pop
xchg
out
test
adc
sbb
in
rorl
and
ds
inc
fistpl
daa
icebp
mov
popa
dec
dec
dec
repnz
ss
popf
stos
or
insl
cli
push
call
mov
xchg
jmp
jns
dec
cmp
lods
mov
mov
jmp
add
test
repnz
js
mov
in
sti
mov
dec
sbb
push
and
scas
and
jo
dec
sarl
push
orl
out
adc
movsb
sbb
dec
call
sti
rol
fsts
out
inc
popa
loope
ss
stc
stos
iret
pusha
mov
shl
add
dec
and
lahf
sbb
add
xchg
jo
pop
fsts
or
popa
cwtl
inc
test
cmp
fsubl
rcr
fcompp
movsb
mov
enter
xchg
dec
push
dec
dec
lods
lahf
inc
pusha
mov
pop
ss
lret
ds
dec
loopne
fiadds
add
xchg
inc
inc
xlat
fsts
pop
daa
aam
sbb
insl
mov
xchg
mov
bound
lea
sldt
mov
int
sbb
push
hlt
subb
je
fsub
mov
lods
in
push
push
fiaddl
or
xor
pop
xor
inc
sbb
mov
sub
cmp
mov
push
inc
jbe
jb
out
inc
pop
js
cmp
outsl
lahf
jnp
fwait
loopne
lods
test
xor
xchg
mov
dec
push
rorl
loope
lods
sbb
jns
cmc
sub
jbe
dec
out
sbb
int3
jne
and
scas
cmp
pop
mov
into
cmpl
out
xchg
loope
or
jp
ja
popa
adc
je
cs
loope
cwtl
mov
push
jl
add
jl
test
lock
aaa
xor
mov
push
cmp
pop
stos
rcrb
mov
xor
jnp
sub
roll
lea
jb
jecxz
push
pop
xor
jne
enter
pop
xor
jns
inc
sub
and
add
xchg
inc
int
fwait
mov
ds
test
test
leave
stos
js
xchg
xor
mov
mov
jle
mov
in
ds
or
mov
in
pop
cli
cmp
pop
fucomip
push
jo
ret
push
lahf
cmp
stos
push
fld
or
cmp
xchg
repz
and
inc
sbb
dec
call
pop
ljmp
jo
dec
mov
pop
andl
lar
pushf
or
mov
popf
add
aas
push
mov
shrb
daa
mov
or
mulb
movsl
add
mov
jmp
sub
mov
push
mov
xlat
arpl
dec
in
call
inc
outsl
lock
stos
pop
iret
jecxz
adc
mov
scas
bound
ret
repz
xchg
daa
cmp
jne
cmp
xchg
into
movsl
fdivrs
insl
jge
jmp
sbb
and
scas
and
lock
cld
xchg
sbb
sahf
insl
gs
pop
imul
dec
xadd
insl
cmp
sbb
xchg
push
and
outsl
lcall
div
pushf
mov
xchg
hlt
push
sub
imul
mov
stos
int
push
xor
cmc
push
ret
stc
jmp
add
mov
or
in
cmpsl
push
xchg
pop
mov
dec
imul
and
jle
dec
push
push
fidivl
mov
sti
xchg
xor
and
xchg
cmp
cmp
sub
dec
sbb
inc
movsl
jo
or
sti
outsl
jl
clc
out
inc
or
sbb
mov
scas
jno
int3
stc
in
fmuls
mov
jne
js
adcb
shrl
insb
mov
or
std
xchg
or
insb
loop
xchg
add
mov
xchg
nop
repz
loop
adc
pop
dec
sub
daa
jp
mov
push
ljmp
lret
push
lret
inc
cmp
jo
jo
or
pop
lock
add
faddp
outsb
mov
cwtl
fildl
dec
jns
clc
dec
cs
cmp
xchg
andl
mov
addr16
aas
bound
je
stos
movb
test
sub
rol
addr16
repnz
in
mov
hlt
in
xor
loope
sbb
adc
mov
sub
mov
ss
and
in
enter
insb
jbe
loopne
dec
xor
dec
insl
aas
sbb
cvtps2pi
fucomp
int
std
iret
in
mov
mov
outsl
dec
pop
jge
insl
aas
sbb
cvtps2pi
fucomp
int
std
iret
in
mov
mov
out
dec
fistpll
insl
mov
cmp
out
int
std
iret
in
mov
mov
outsl
dec
pop
jge
insl
aas
sbb
cvtps2pi
fucomp
addr16
iret
lcall
call
out
mull
iret
movsl
fadd
cmpsl
fsts
daa
inc
aaa
push
inc
daa
push
mov
pop
addr16
jecxz
xchg
test
cmpsl
xlat
mov
xchg
xchg
pop
addr16
pop
inc
inc
aaa
push
pop
daa
push
aaa
addr16
ja
aas
out
divl
cmpsl
mov
stc
xchg
xchg
arpl
xor
dec
and
sub
and
pop
jmp
test
xchg
pusha
xlat
push
cmp
stc
and
js
mov
mov
imul
sub
and
dec
push
jp
icebp
arpl
mov
push
mov
mov
mov
out
mov
mov
xchg
stos
push
es
scas
clc
dec
sahf
pop
repnz
pop
xlat
cmp
imull
mov
leave
pop
mov
clc
ja
js
lcall
cmpsb
pop
mov
daa
fwait
xchg
and
mov
push
lret
lahf
clc
jnp
js
or
cmpsb
mov
cmp
bnd
adc
ja
push
ret
push
lret
lock
fsub
shl
mov
and
push
xchg
shll
push
inc
pop
push
pop
aaa
push
pop
ja
out
mov
not
scas
iret
mov
xchg
leave
test
inc
das
push
adc
add
repnz
aad
movsl
scas
out
mov
adc
mov
add
es
cmp
inc
cmp
ss
jmp
sti
movsb
scas
in
xchg
cmpsl
xlat
mov
xchg
xchg
pop
addr16
ja
inc
aaa
push
inc
daa
push
aaa
addr16
ja
xchg
xchg
mull
cmpsl
xlat
mov
xchg
xchg
pop
addr16
ja
inc
aaa
push
inc
daa
push
aaa
addr16
ja
xchg
xor
or
or
test
sub
xchg
fcmovbe
mov
mov
mov
js
jle
ret
scas
push
jl
cs
or
outsl
xor
mov
jbe
leave
leave
cltd
call
lea
push
sub
jne
cmpsl
dec
sbb
imulb
int3
add
stc
pop
inc
aam
mov
dec
push
int
scas
push
in
mov
rcl
jae
push
and
mulb
cmp
faddp
dec
leave
in
adc
out
lds
adc
mov
push
sbb
pop
lcall
inc
out
lret
jns
adc
mov
es
inc
mov
inc
xor
rorb
or
push
iret
mov
or
stos
dec
repnz
lahf
nop
addl
sahf
movsb
icebp
lods
or
dec
aam
jne
out
xchg
lret
fs
and
mov
pop
push
push
notl
lea
add
out
add
fldt
adc
push
jmp
rcrl
cmp
subl
jb
sub
addl
jg
xlat
ror
jbe
shll
push
insl
inc
outsl
shr
lods
mov
aaa
movsl
dec
and
dec
test
or
hlt
filds
xchg
mov
lahf
rcr
jp
insb
cwtl
pop
ja
xchg
pop
inc
or
enter
push
loop
sahf
pop
or
pop
out
lcall
mov
adc
pop
scas
mov
pop
hlt
adc
add
lret
jle
jne
popf
push
or
inc
stos
lcall
mov
mov
sbb
and
rolb
out
insl
push
test
or
pop
inc
add
inc
xchg
repnz
xorl
push
sbb
xchg
mov
mov
aam
xor
fidivrs
or
xchg
inc
test
adc
push
dec
push
pop
jb
and
jae
les
pop
stos
or
ret
or
cmc
out
repz
fs
scas
or
addr16
adc
test
mov
rcl
rorl
or
sarb
sbb
cmp
nopl
iret
xchg
sub
or
xchg
movsb
out
pop
jmp
dec
xor
fcom
push
movsl
ds
push
sbb
mov
add
mov
sbb
mov
rclb
inc
mov
mov
xlat
jmp
arpl
adc
rclb
hlt
movsb
and
fadd
cs
cli
test
stos
cmpsl
add
adc
xor
inc
mov
xchg
cmp
pop
mov
add
pushf
test
mov
cli
addr16
xchg
lret
negb
dec
inc
aas
push
jae
mov
jns
daa
add
in
add
pop
xchg
mov
xorl
fdivs
inc
jo
shr
push
and
dec
xchg
into
sub
fldl
das
out
xlat
dec
stc
pop
xchg
mov
sub
loope
loopne
test
push
stos
inc
test
mov
test
sbb
sbb
movsb
pushf
and
je
ljmp
cmp
pcmpgtb
ds
add
pop
sub
dec
xchg
pop
or
int
sarl
insl
xor
rcr
cmc
mov
test
lcall
lods
push
xor
rorb
jnp
in
dec
xchg
pop
dec
sub
jne
mov
nop
sub
pop
fucomi
aam
fwait
pop
mov
in
mov
inc
inc
adc
mov
scas
adc
cmp
ljmp
cmp
mov
or
dec
jno
or
daa
shll
pop
lahf
pop
or
cmp
cltd
addr16
xchg
fcompl
clc
andb
cmp
xor
mov
movsl
out
sbb
adc
mov
add
cmp
jne
fldt
fisubl
xchg
ficoml
loopne
popf
mov
mov
mov
imul
xor
aam
push
aam
fwait
sub
push
pop
hlt
pop
mov
nop
xchg
repz
out
dec
inc
and
iret
xchg
mov
in
mov
mov
fldenv
push
mov
lods
insl
mov
xor
pusha
inc
aaa
mov
and
cs
mov
inc
jns
pusha
je
mov
leave
in
sbb
call
pop
mov
pusha
jge
fidivrl
mov
imul
mov
push
xchg
loop
push
jns
ljmp
push
mov
loop
out
adc
adc
nop
sub
notl
test
sbb
addr16
aad
sbb
xor
iret
cmp
push
shll
xchg
push
out
int3
xor
aas
jp
icebp
std
jns
loope
loopne
inc
xchg
repnz
cmpsb
fdivrl
and
jae
mov
pop
outsb
pop
scas
les
test
imul
lds
xor
sbb
ficoml
xchg
xchg
jle
jae
xor
int
pop
adc
mov
insl
sbb
add
and
mov
and
mov
add
pop
iret
jmp
gs
test
scas
xor
in
xchg
lock
imul
jecxz
mov
dec
es
into
mov
test
cli
xor
sbb
popf
fildl
cmp
stc
push
movsb
xor
mov
aam
pop
xorl
addr16
mov
dec
out
adc
test
btc
push
mov
popa
mov
mov
jl
lret
cmpsb
insb
int3
incb
lret
cmc
std
lret
and
int
adc
outsl
sar
scas
add
mov
xor
fnsave
ret
sub
aam
and
fsub
ror
dec
icebp
push
cltd
repz
xchg
faddl
shll
add
add
jl
mov
jo
dec
cli
mov
add
aam
or
loopne
cmpsl
imul
mov
dec
call
jle
pop
mov
dec
mov
ja
push
xchg
fldl
test
pop
mov
fadds
out
add
loop
pop
pop
call
push
mov
jecxz
loop
out
mov
add
pusha
testl
lret
out
pop
stc
push
cmpsl
pusha
xor
xor
add
inc
inc
mov
adc
dec
and
mov
push
dec
lcall
xor
pop
aam
push
pop
loope
add
inc
cmc
push
jp
ljmp
or
push
lds
ficompl
push
pop
and
cs
mov
jle
leave
loop
xor
sub
and
js
or
out
xor
leave
movsl
pusha
mov
cmp
inc
fwait
lahf
dec
pop
aas
daa
and
mov
test
es
add
pusha
sub
loop
dec
gs
push
hlt
sbb
mov
lock
and
icebp
in
xor
ja
push
das
mov
pushf
jae
cmpsb
or
aas
mov
sub
xor
push
icebp
popa
mov
outsb
pop
shlb
shrb
scas
insl
fnstsw
add
shlb
daa
loopne
xor
fldl2t
inc
and
test
rep
add
popf
lret
daa
or
mov
mov
or
test
outsb
aaa
es
call
out
mov
ficoms
idivl
adc
insb
aad
jae
inc
orb
sbb
cmp
mov
mov
push
push
outsb
adc
subb
pop
imul
repnz
pop
js
xchg
cmp
jl
or
int
sbb
or
icebp
je
in
addr16
mov
aas
sar
sub
popf
xor
iret
inc
dec
add
shr
add
push
and
push
mov
test
fistps
mov
sub
and
out
and
cmp
jns
xchg
lock
scas
cltd
jle
out
movsl
adc
dec
mov
lret
in
sbb
xchg
mov
fildl
div
add
movsl
xchg
sbbb
push
sub
adc
xchg
es
jp
orl
dec
fnstcw
mov
mov
jg
inc
jnp
adc
cmpsl
bound
mov
mov
dec
sub
push
add
lods
pop
sar
mov
int
sub
popa
cwtl
xchg
sti
mov
cmpsb
ss
and
dec
jne
adc
or
js
movb
fs
cmpsb
iret
fs
fistps
push
dec
pop
cwtl
ja
ret
pop
mov
push
push
pop
xchg
cwtl
lods
dec
popf
inc
add
or
fidivl
jno
rorl
lods
add
je
out
and
add
sbb
inc
sbb
cmp
or
in
dec
or
cmp
sahf
lret
les
inc
inc
pop
fsincos
mov
push
aaa
pop
ja
push
das
cmp
push
mov
sub
lahf
sbb
add
jns
icebp
lds
aam
ret
inc
fwait
insl
call
jo
cmpsl
and
test
adc
in
roll
dec
cmp
and
rorb
hlt
test
pop
dec
adc
xor
pusha
sti
jns
pop
mov
stc
push
mov
fs
jp
andb
push
xor
push
int
pushf
or
jmp
ds
les
add
outsb
daa
lods
ret
in
or
std
xchg
insl
movsl
es
cmc
lahf
lea
das
dec
call
jl
andnps
pop
push
test
xor
bound
add
mov
cmp
aaa
aad
dec
ss
shrb
jp
mov
aas
xchg
mov
pop
mov
cld
mov
lock
add
dec
ss
xor
rclb
testl
in
adc
lret
xchg
pop
and
cli
push
rorb
mov
sub
fnstenv
into
rcrl
mov
lcall
imul
mov
push
add
adc
pop
push
imul
adc
mov
push
dec
enter
lret
gs
mov
sbb
fsubrs
mov
daa
ret
mov
scas
das
scas
mov
mov
out
adc
sub
add
dec
and
xchg
addl
iret
mov
cmp
jle
xor
mov
into
mov
cltd
jp
movsb
jmp
mov
push
mov
and
mov
inc
mov
in
inc
add
or
push
mov
rorl
mov
imul
es
sub
data16
aad
push
fnstsw
rcrb
pop
mov
stc
inc
rorl
rol
mov
cld
ss
inc
lret
cmp
xchg
xor
in
jp
lock
inc
fsubs
das
jb
push
sbb
clc
movsl
out
mov
add
cmp
shr
addr16
in
mov
mov
sbb
cmc
adc
arpl
repnz
mov
sbb
mov
cmp
popf
int
pop
clc
sbb
incl
sub
sub
xchg
fisubl
mov
or
gs
cmpsb
jno
adc
das
clc
sbb
pop
ljmp
xchg
clc
push
inc
sub
jb
mov
push
int3
jo
in
xchg
and
sbb
cld
ja
bound
xchg
div
insl
in
ljmp
leave
lahf
sub
inc
sbb
inc
push
lret
cmpsb
add
je
jmp
inc
ja
pushf
sub
fstl
fwait
jbe
jnp
scas
adcl
je
adc
sub
lods
mov
dec
dec
fldt
pop
xchg
sub
xchg
imul
cmp
pop
dec
dec
push
xchg
and
add
shr
ja
push
xchg
sbb
xchg
pop
enter
mov
xor
add
int
push
enter
inc
call
cmpl
pop
icebp
sbb
or
mov
adc
sbb
addb
sbb
out
aad
int
sbb
dec
pop
push
cmp
sub
sbb
mov
adc
loope
stos
sbb
push
adc
loop
mov
adc
cmpsl
push
push
adc
mov
add
les
mov
rcrl
enter
adc
inc
arpl
xor
bound
dec
dec
mov
pushl
clc
add
mov
pusha
stos
rorb
jne
enter
in
jno
adc
lcall
fcomps
aam
jecxz
movsb
mov
adc
pop
out
push
dec
movl
inc
sub
lcall
push
xor
add
cmc
cmc
in
mov
cmpb
sar
in
enter
dec
lea
xacquire
sbb
or
cltd
mov
xchg
jns
into
mov
mov
mov
repz
jb
inc
pop
dec
mov
subb
sub
jge
lods
rorl
nop
jp
xor
push
jb
push
aam
mov
mov
dec
push
push
outsl
mov
sbb
repz
and
push
std
jge
imul
jbe
cmc
mov
xchg
cmp
mov
mov
loop
xor
movsb
lret
icebp
fcoms
mov
popf
leave
mov
add
lahf
test
outsb
push
cmp
int
into
rclb
jb,pt
call
mov
cmpsb
js
jno
pop
cltd
cmpsl
test
pop
pop
aam
lods
push
aad
lret
cmpsb
mov
imul
xor
and
inc
mov
inc
push
je
ficompl
das
into
cwtl
movsl
or
jo
fidivrl
data16
bound
and
cmp
mov
or
test
add
fistl
fistl
mov
lret
punpckhbw
inc
fs
leave
mov
loope
lods
cmp
jno
inc
outsb
adc
stos
or
xchg
pop
or
andl
inc
xor
dec
dec
or
mov
ret
cmp
in
std
aas
xor
orb
cmp
pop
popw
mov
es
pop
mov
dec
das
or
fdivl
xchg
mov
mov
in
sbbb
jo
rorb
mov
test
sbb
dec
sbb
lret
dec
sub
into
mov
inc
rclb
xlat
pop
add
push
jbe
dec
cmpsb
mov
enter
mov
push
xor
jg
int3
cmp
adc
pop
nop
mov
inc
sub
dec
pop
sub
sub
test
inc
adc
jle
cmp
pop
jno
and
outsl
xor
int3
es
pop
call
arpl
and
ja
add
test
int
testl
add
mov
lahf
test
out
jns
cmp
jmp
in
loop
jge
loop
adc
neg
add
push
jno
ret
lret
inc
ds
sbb
roll
shll
lods
xor
xor
xor
sub
lock
pop
adc
mov
in
mov
mov
clc
and
not
jns
cmpsl
mov
loopne
pop
bound
or
sub
pop
ljmp
add
xchg
test
pop
std
cmp
popa
addb
and
add
jge
pop
xor
ret
outsb
jo
add
adc
push
into
cmp
cwtl
leave
push
jge
jp
adc
sbb
inc
rcrl
out
addr16
or
mov
movsb
mov
divl
jg
add
cmpsl
adc
or
mov
fcomi
mov
jecxz
loope
and
pop
mov
xor
arpl
sub
mov
cld
mov
push
mov
fstpt
out
inc
cmc
jl
test
stc
or
and
call
cs
mov
mov
cmp
pusha
in
lret
loope
mov
fdivs
arpl
mov
sarl
add
sbb
xor
repnz
mov
pop
mov
ret
push
frstor
call
ja
pushf
stos
push
imul
push
mov
adc
mov
mov
inc
sahf
mov
lret
js
push
adc
sbb
fwait
push
cmp
lcall
popf
cltd
mov
or
je
sbb
xor
leave
and
int
bound
mov
lret
jge
lds
add
mov
jmp
in
cmp
ret
mov
sub
pop
and
push
je
jecxz
das
cmp
in
pop
hlt
mov
mov
xorl
negl
in
adcb
jmp
movb
lret
pusha
adc
push
dec
pop
sbb
pusha
popf
stos
scas
nop
into
in
cmp
and
sarb
mov
or
push
cmc
cmp
pop
inc
pushw
adc
loopne
lcall
in
fmull
fs
inc
jno
scas
mov
xchg
imull
mov
mov
jno
gs
std
and
test
cwtl
aam
imul
cld
imul
pusha
fwait
push
mov
xchg
and
add
pushf
or
cmp
cmp
or
inc
mov
jmp
iret
mov
and
aaa
sbb
lahf
push
push
int3
adc
lret
push
jno
fisubs
pop
orb
incb
mov
testb
add
loopne
jmp
fs
mov
nop
ljmp
movsb
dec
push
jno
mov
pop
jbe
sti
mov
and
jns
push
loop
push
cmp
jle
aad
cmp
pushf
push
add
mov
mov
fidivrl
jae
mov
lret
mov
xchg
stos
daa
push
mov
faddl
mov
insl
fiadds
rcl
sbb
lods
cmp
adc
cmp
stc
mov
inc
mov
add
pop
add
mov
inc
nop
out
cli
add
inc
or
aam
mov
lret
pop
imul
je
int3
fistl
mov
xchg
jo
popf
and
sbb
dec
nop
pop
les
je
sbb
xchg
test
inc
inc
jge
inc
fs
cmc
push
mov
pop
popa
les
jg
adc
cmp
pop
dec
push
push
mov
pop
movsl
xor
fwait
or
dec
stc
mov
push
pusha
lahf
adc
xchg
adc
enter
sahf
pop
push
mov
insb
ret
in
add
aad
jmp
pop
lret
hlt
sub
add
push
pop
jo
jnp
into
add
test
mov
inc
aaa
push
cli
dec
sbb
out
push
or
dec
cmc
clc
in
cmp
dec
lret
imul
and
clc
jmp
stc
jnp
mov
mov
inc
jl
lahf
cmp
movsl
push
inc
dec
out
inc
dec
shll
jecxz
dec
mov
inc
push
mov
cmp
inc
popf
int3
es
dec
adc
xchg
outsl
daa
orl
mov
loope
fidivs
pop
pop
notb
mov
lds
mov
std
push
mov
mov
std
pop
mov
in
xchg
jge
and
and
gs
xchg
rclb
push
scas
fcomp
shll
mov
neg
lret
in
jae
xchg
lock
mov
dec
sub
into
fisttps
shll
enter
pop
xchg
scas
xor
mov
sbb
les
loop
pop
push
sbb
sub
cltd
insl
das
cld
ret
sub
mov
pop
sbb
xchg
addr16
jg
out
xchg
mov
lret
dec
ja
mov
icebp
push
les
cmc
cli
mov
sti
ret
bound
gs
cmp
sbb
push
inc
cmp
into
scas
outsl
xchg
call
leave
rcrl
lods
sahf
push
xchg
fwait
sub
mov
out
test
imul
adc
pop
loop
xchg
push
addl
jae
and
loopne
xor
mov
pop
jnp
mov
sub
push
aad
adc
loop
dec
xor
pushf
jmp
xor
xor
mov
jmp
cmp
push
mov
leave
insl
adc
adc
inc
xchg
mov
adc
cmp
pusha
gs
sarl
daa
aad
fdiv
imulb
cli
inc
jecxz
pop
jae
mov
movsl
jmp
lret
jl
call
pop
in
call
mov
imul
movsl
jno
mov
faddl
add
cmp
jnp
pop
dec
sub
push
jns
fucom
dec
inc
cld
mov
xor
dec
push
mov
ss
ds
mov
mov
sub
mov
inc
pushf
mov
xchg
jl
scas
dec
jb
add
sbb
in
les
mov
cmp
call
mov
outsb
out
fmuls
loop
mov
push
fsubrl
out
movsb
pop
sbb
jp
xchg
icebp
fwait
or
imulb
cmc
stos
mov
cs
pop
mov
and
out
inc
jmp
adc
test
gs
mov
xor
push
dec
imul
push
xchg
in
sbb
push
fisubrl
lods
pop
lock
adcb
xchg
ss
jnp
loope
or
push
mov
lock
or
mov
inc
lea
mov
jmp
and
mul
mov
cmpsl
xlat
mov
xchg
xchg
pop
addr16
ja
inc
aaa
push
inc
daa
push
aaa
addr16
ja
xchg
xchg
mull
cmpsl
xlat
mov
xchg
xchg
pop
addr16
ja
inc
aaa
push
inc
daa
push
aaa
addr16
ja
xchg
cmpsl
ja
inc
mov
push
cmpsl
xlat
aaa
out
aaa
xchg
pop
out
ja
inc
aaa
push
inc
daa
inc
aaa
addr16
lahf
pop
xchg
out
idiv
xchg
xlat
cmpsl
mov
xchg
pop
addr16
and
scas
cwtl
clc
mov
push
inc
mov
cmp
and
enter
mov
jnp
imul
call
stos
cmp
dec
jmp
fldt
enter
xchg
cmp
mov
ret
stos
mov
loop
repz
ret
nop
rcrl
outsb
leave
or
cmp
pop
mov
pop
add
adc
xor
or
pop
and
nop
lea
cmpsl
fsts
adc
pop
ljmp
mov
push
push
in
inc
sbb
jne
inc
or
pop
pop
jns,pt
gs
dec
inc
sbb
les
jmp
scas
push
daa
fdivrs
push
mov
imul
movsl
mov
pop
jmp
stos
inc
fwait
jge
pop
xor
imul
test
push
hlt
push
sub
xchg
in
rcll
and
fs
pop
cmp
and
pop
mov
sub
stos
or
adc
out
pop
popf
mov
mov
dec
fwait
lea
shll
pusha
cmp
mov
sub
push
mov
mov
inc
xchg
pop
sti
or
js
rcl
push
sbb
pusha
add
jl
pop
mov
push
jle
jl
inc
mov
lods
cmp
cmpsb
stc
push
leave
push
call
push
cmpsb
cmp
subb
mov
fsts
sbb
dec
stos
or
cs
cmp
dec
cli
imul
js
push
sub
jnp
imul
call
stos
cmp
dec
jmp
fldt
cwtl
cmp
or
jnp
imul
call
sub
mov
daa
mov
addr16
fldt
ja
dec
add
xchg
jbe
cmc
sub
js
popa
sbb
and
mov
add
fmuls
or
push
mov
push
imul
cmp
xor
inc
xadd
push
lock
mov
les
lds
out
push
push
icebp
dec
push
cli
sub
es
icebp
mov
in
lods
pop
lahf
mov
mov
sbb
add
lret
aaa
cmp
inc
lods
int
sahf
sti
xor
pop
into
jmp
adc
gs
dec
pop
sub
or
std
mov
call
std
testb
insb
and
addr16
push
pop
sub
adc
push
mov
cmp
stc
jmp
pop
xchg
jg
and
dec
loop
fwait
aaa
mov
in
addr16
dec
sti
inc
rolb
ficoml
mov
stos
pop
mov
add
pop
dec
fiadds
insl
movsb
mov
call
shlb
dec
sub
pop
les
iret
push
into
xchg
jo
lcall
cmp
xor
cmp
inc
popf
or
out
repnz
sub
test
outsl
xchg
jb
push
cmp
pop
loopne
inc
cmp
pop
movsb
cmpsb
add
sahf
xchg
add
cltd
lods
int
das
scas
stos
inc
jnp
outsb
push
in
lods
dec
adc
out
arpl
push
xor
push
cs
and
or
mov
or
dec
xchg
in
xchg
sbb
fcmovne
stc
outsl
unpckhps
cmp
fsts
xchg
jns
orb
mov
sbbl
sbb
ljmp
jmp
rcrl
or
mov
stos
and
sarl
inc
cmp
int
mov
shlb
xor
sub
cwtl
or
je
int
adc
cmpsl
mov
inc
push
js
mov
xchg
inc
mov
outsb
push
lock
outsb
mov
mov
or
cmp
dec
push
and
mov
shlb
and
mov
push
lretw
xor
mov
xor
shll
popa
shll
mov
or
pop
cmp
mov
fwait
jecxz
pop
stos
mov
call
jmp
push
in
adc
icebp
lods
ret
mov
mov
or
lret
xchg
dec
into
sahf
loopne
push
lahf
cmp
jge
imul
pop
mov
lock
and
and
movsb
je
mov
in
push
pop
leave
pop
jb
sub
inc
in
mov
enter
jl
es
lea
pop
cmovne
cmc
fnstenv
movsl
movd
dec
into
lods
dec
xor
xchg
and
push
xor
leave
mov
fstl
inc
jno
in
and
mov
test
jecxz
lret
movsl
mov
push
push
out
test
stc
fisubs
addl
pusha
mov
xor
xlat
mov
inc
into
pop
test
push
jmp
in
adc
ds
cwtl
xchg
mov
xor
scas
movsl
jae
data16
or
jl,pt
or
popa
lea
mov
cmp
cwtl
xchg
push
sub
pop
adc
repz
rcrb
testl
ficomps
jge
dec
lds
loop
sub
jno
xchg
lcall
cli
adc
aam
rclb
fidivl
cmpsl
cwtl
sti
xor
cmp
cld
pop
aad
ret
jno
inc
dec
push
cld
stos
adc
fsubr
dec
test
add
movb
adc
mov
ret
je
in
pop
ja
notb
dec
out
dec
adc
mov
and
fwait
or
ljmp
std
xchg
mov
clc
popa
out
jns
daa
cmpb
shlb
repz
push
jmp
lret
push
cmc
iret
lcall
push
adc
ljmp
popa
adc
das
xchg
push
in
adc
pop
popf
xorb
lock
push
cwtl
pop
jnp
bound
cwtl
mov
in
jo
inc
jg
push
test
cmp
test
imul
xor
aad
mov
test
adc
nop
jmp
mov
lahf
mov
jl
out
inc
sub
cmp
je
scas
jns
xchg
insl
fistps
jle
roll
cmpsb
sbb
xchg
adc
lahf
push
fisttpll
ficoml
into
cmp
mov
adc
push
in
cmpb
movsb
lock
adc
popa
fwait
loopne
movsb
sub
xchg
out
lret
cmp
ret
and
fs
pop
xor
adc
push
ss
mov
fdivr
push
sub
fsub
outsl
or
int3
repnz
sub
imull
in
lcall
push
or
jb
hlt
outsl
add
add
mov
fdivl
lea
jo
cmpsl
in
fidivrl
xchg
sub
mov
in
mov
push
mov
iret
and
inc
ret
fcomps
xlat
cmp
push
inc
outsb
adc
push
cmp
aaa
or
shr
lahf
decb
jecxz
dec
and
pop
add
xchg
push
stc
push
jecxz
mov
fsts
push
stos
and
or
mov
xchg
mov
fiadds
arpl
movq
stos
mov
fisubl
add
pop
dec
push
lahf
ja
mov
sahf
fsub
idivb
xorl
cli
cld
test
sbbl
hlt
and
pop
ret
adc
pushf
pusha
or
clc
std
pop
pop
scas
mov
sbb
pop
inc
cld
std
es
jmp
sti
mov
jecxz
or
jg
pop
xor
inc
inc
inc
or
jg
adc
cli
cmc
mov
les
and
fcompl
xchg
push
jle
insl
loopne
cwtl
fs
inc
out
movsl
stos
mov
jp
inc
sbb
xor
fidivl
sub
aam
loopne
or
repz
and
bound
mov
and
jge
or
fstl
xor
add
scas
mov
push
das
mov
cli
jnp
mov
jmp
adc
add
and
in
in
cltd
fcompl
ret
mov
jl
jle
mov
shrl
and
ja
imul
lea
enter
out
stc
jle
mov
leave
lods
inc
dec
jne
inc
loope
cmp
dec
lret
or
jae
stos
jo
jae
mov
es
dec
fimuls
xor
hlt
push
mov
mov
and
push
sbb
repz
mov
imul
aas
lods
mov
mov
cmc
push
ret
and
jnp
sub
cld
add
fwait
inc
loope
adc
stos
or
mov
jbe
into
roll
xchg
icebp
dec
mov
sti
fwait
pop
rclb
xlat
push
push
xlat
lahf
cmpsl
mov
cmc
mov
cwtl
int
xor
leave
xchg
shlb
shll
dec
dec
mov
mov
les
sub
cmpsb
cmp
adc
in
addl
aad
jae
push
arpl
inc
sub
fsubrs
in
dec
or
fstl
sub
dec
test
out
add
shlb
les
movsb
leave
psrad
cwtl
jnp
jbe
pushf
es
xor
into
sbb
pop
hlt
fidivrl
out
jmp
mov
cmpsb
xor
std
daa
mov
cli
and
adc
out
cwtl
xchg
addr16
jns
mov
aas
loopne
mov
fnstenv
xlat
mov
in
cli
sub
add
cmp
dec
ds
ret
and
sub
xlat
sbb
adc
cmp
call
push
loop
adc
cmc
insb
outsl
jne
lock
addr16
outsb
mov
mov
lret
sbb
sti
mull
in
mov
dec
pop
fbstp
sbb
mulb
jno
cltd
jmp
sbb
add
call
mov
gs
xor
xor
dec
fdiv
aad
sti
push
shlb
push
std
rolb
popa
out
and
add
inc
pop
adc
movsl
cmp
push
outsl
jge
xchg
stos
int
push
sub
pusha
ret
or
sbb
push
scas
cwtl
mov
xor
cmpsl
dec
pop
pop
je
push
das
jp
fwait
push
mov
sbb
adc
mov
ficompl
push
dec
out
popa
jb
cmp
dec
dec
cmpsl
loopne
repnz
out
scas
sub
insb
in
incl
cmp
loop
add
outsb
loop
push
mov
add
pop
xor
add
jge
sbb
mov
cmp
mov
or
fildl
movsb
or
push
xor
mov
cld
push
divl
and
into
jecxz
rcrb
push
loopne
outsb
cmp
xchg
mov
sbb
jg
add
xlat
and
scas
in
mov
xchg
aam
mov
inc
daa
adc
stos
mov
mov
mov
ret
adcl
xchg
mov
mov
pusha
cmpsl
push
loop
outsb
lods
loope
sub
jmp
leave
sub
dec
mov
test
dec
in
jo
sahf
and
loopne
mov
mov
ret
lock
or
mov
roll
dec
sub
and
in
push
in
lahf
cld
aam
cli
jp
lock
or
sub
mov
and
pusha
push
push
sub
dec
shl
mov
pop
cmp
jmp
ret
das
popa
and
inc
scas
repnz
stc
push
pusha
in
mov
sahf
or
and
mov
inc
out
addr16
dec
xor
xor
in
pop
jno
jl
or
pop
inc
out
add
ljmp
pop
sub
push
mov
push
stos
xor
jle
das
pusha
fdivrs
bound
sbb
sbb
pop
sub
scas
add
or
scas
cli
aam
dec
lods
movsb
push
lods
lock
sbb
sbb
rorl
es
push
mov
pop
rcll
mov
jno
sub
mov
nop
lds
and
stos
sbb
xorb
out
fldt
test
mov
jp
push
xor
ja
dec
test
int3
inc
data16
bound
dec
inc
mov
cltd
cli
and
out
inc
mov
insb
mov
cmp
inc
repnz
je
shl
pop
cltd
add
sub
inc
jge
sbb
in
arpl
popa
inc
popa
push
dec
mov
adc
jmp
cmpsl
shrb
ljmp
jae
and
iret
fbstp
cmp
mov
stos
sub
fsub
popf
push
or
push
leave
dec
xchg
leave
popf
aam
cld
xor
or
ss
popa
push
mov
xchg
sub
jl
mov
add
leave
cmp
arpl
les
sub
testb
out
xchg
lock
pop
les
mov
sub
xlat
mov
mov
mov
pop
out
bswap
adc
dec
inc
cmp
push
or
pop
mov
das
add
sahf
mov
gs
sbb
insl
xchg
dec
push
push
jl
jo
popa
inc
leave
pop
push
dec
push
xor
cmp
mov
es
int3
popf
cmp
fisttpll
stc
and
dec
cs
push
push
xor
adc
sub
in
xchg
sbb
lahf
xchg
push
dec
arpl
lods
jno
fwait
sbb
xchg
xchg
inc
and
cltd
add
adc
dec
call
push
sbb
repnz
enter
adcb
rorl
jg
ret
adc
test
insb
cmp
pop
or
movsl
sbb
mov
gs
push
xor
inc
dec
sbb
insl
lods
jmp
cmp
loope
rcrb
ss
lcall
jge
popf
mov
jae
movb
or
sub
icebp
or
jns
mov
adc
adc
adc
push
sbb
xchg
mov
pop
lret
ljmp
pop
pinsrw
nop
mov
loope
mov
in
lret
push
pop
mov
clc
xor
push
pop
jle
pop
sub
leave
ljmp
inc
push
jp
push
pop
xor
mov
push
cmp
pusha
cmp
mov
push
stos
in
and
dec
clc
xor
xlat
push
sarb
cmp
pop
adc
cld
adc
xchg
push
out
rolb
or
adc
pop
test
cmc
sbb
sub
in
out
dec
outsl
sub
xchg
mov
mov
jmp
call
sub
fwait
mov
lods
lds
push
stc
xchg
test
fsubrs
cmp
mov
push
jp
or
mul
imul
mov
clc
xchg
add
sti
xchg
adc
les
pusha
xor
sbb
push
sbb
mov
aam
stc
fisubs
aaa
adc
les
shld
sbb
add
movb
mov
stos
insb
daa
inc
push
push
repnz
xchg
mov
ret
arpl
push
lret
fldcw
loopne
scas
adc
cmc
gs
aas
stos
sbb
out
leave
inc
iret
mov
stos
xor
aad
and
jmp
lea
sti
pop
or
and
es
mov
sbbl
push
xchg
jl
test
pop
and
outsl
jbe
rclb
inc
lds
cmpsl
fildll
push
jo
cld
push
xor
xorl
cmp
popf
sub
aam
sub
repz
jns
cli
jp
cwtl
xchg
outsb
dec
mov
inc
test
pop
sub
xor
insl
mull
or
test
ud2
xor
test
push
jne
rol
fidivl
and
inc
mov
bound
push
sub
xor
loop
jo
push
xchg
andl
xor
psadbw
mov
aas
and
out
pushl
mov
sub
adc
sar
add
push
push
pop
and
inc
setp
loopne
push
addl
jae
or
mov
push
mov
adc
or
sub
sbb
mov
movsb
rcrb
dec
mov
and
scas
fstpl
bound
call
inc
popa
sarl
and
push
or
loopne,pn
fstps
xchg
ret
nop
jge
aam
mov
imulb
int3
sbb
xchg
in
mov
dec
xchg
mov
adc
sub
test
stc
cli
cmpl
dec
xorl
arpl
fcoml
or
push
imul
int
inc
loop
scas
das
dec
in
pop
sbb
sbb
shlb
data16
mull
sbb
cwtl
dec
loopne
sbb
and
pop
xchg
mov
popa
loopne
adc
dec
xchg
enter
adc
mov
xor
ja
cmp
xchg
dec
cwtl
shrl
dec
dec
jo
xlat
mov
jnp
pop
push
popf
daa
std
outsb
call
lahf
fsubs
arpl
sub
mov
jb
pop
jp
cli
lods
repz
cmp
mov
push
mov
push
orb
sbb
sahf
xchg
aas
add
jge
out
xchg
loopne
mov
push
fs
inc
mov
sub
outsb
je
mov
xchg
jne
push
push
sub
add
lret
push
pop
inc
imul
mov
fildl
cmp
cmp
dec
jbe
push
nop
cltd
mov
mov
popf
push
or
rolb
mov
sbb
fiadds
jg
loop
shlb
pop
pop
sub
mov
imul
dec
dec
jl,pn
mov
sbbb
mov
mov
adcl
sbb
outsb
gs
or
nop
sahf
jmp
aad
dec
leave
pop
and
xor
sti
push
mov
ret
push
dec
mov
inc
fs
mov
add
mov
outsl
push
mov
xchg
xor
arpl
shlb
xchg
jl
push
and
loope
aam
mov
mov
jp
dec
mov
in
push
out
subl
dec
shrl
fisubrs
xor
or
int
adc
inc
jo
cwtl
push
movsb
add
aad
pop
insl
lods
dec
sbb
mov
cltd
push
mov
mov
movsb
push
inc
nop
outsl
stos
push
cltd
shr
xchg
mov
cmc
cwtl
xchg
mov
in
pusha
mov
inc
clc
mov
int3
nop
jmp
out
lret
push
out
sti
or
gs
push
in
fsubs
fisubrl
ffreep
fnstcw
cmp
aad
cmc
sbb
adc
testb
lcall
inc
push
movsl
mov
push
xor
jbe
and
cwtl
mov
sbb
idivb
xor
or
jmp
es
out
cmp
dec
fwait
and
out
mov
inc
mov
dec
fdivrl
cmp
pop
push
push
ja
xchg
out
neg
popa
lock
xchg
cltd
mov
andl
lcall
or
mov
xor
push
fwait
dec
jecxz
loop
xchg
stc
and
jge
flds
cmp
aas
cwtl
jmp
icebp
es
data16
jne
push
add
push
inc
dec
rolb
cmc
mov
pop
fst
jg
mov
mov
loopne
xchg
push
pop
std
mov
fstps
faddl
push
and
icebp
sbb
jne
jnp
lods
push
jbe
inc
jbe
mov
js
and
mov
xor
fstpt
adc
jge
aas
inc
inc
inc
mov
aas
ret
lock
cmp
cmpsb
push
rclb
dec
mov
and
popf
cmp
mov
push
mov
push
push
mov
sti
xor
int3
fs
cli
lds
push
movsl
lret
mov
mov
into
add
aaa
stos
pop
movsl
and
sub
arpl
pop
mov
lds
nop
and
and
mov
lock
sbb
cmp
add
scas
xor
test
xlat
or
fwait
out
jbe
jns
ret
push
pop
mov
or
jl
stos
mov
imul
enter
out
pop
aam
sbb
sar
adc
push
jg
shll
and
and
outsb
cmp
jnp
subb
out
jecxz
push
stos
shrl
int
sub
pop
adc
or
incl
xor
mov
insl
jmp
dec
rolb
and
adc
popa
iret
xchg
xchg
pop
xchg
mov
arpl
stos
nop
inc
cmpsb
sbb
sub
negb
pop
mov
fscale
test
in
pop
ja
dec
enter
sbb
dec
pop
push
jns
popl
lcall
aas
sub
sbb
je
cmpl
cmp
push
mov
mov
jp
mov
mov
ja
mov
mov
and
imul
dec
push
mov
add
jge
in
cmp
xchg
shl
scas
mov
stos
das
hlt
ds
hlt
inc
sbb
or
sub
lock
sahf
pop
jecxz
xor
mov
pusha
clc
xchg
xchg
sub
inc
or
jl
ret
pop
or
jns
lret
adc
fldcw
pusha
mov
dec
xchg
rcrl
cmp
cltd
jle
roll
jo
push
pop
mov
popf
mov
cmp
push
add
xor
fwait
sub
xor
call
cld
scas
lret
add
mov
pop
add
fistl
cld
mov
out
and
sub
sub
shll
out
mov
insb
pop
jmp
ds
adc
dec
out
xor
push
jns
movsl
cmp
movsb
sahf
pop
popf
xor
sub
in
inc
enter
or
out
inc
jmp
xchg
into
daa
mov
int
roll
cmp
es
lret
dec
imul
cli
lret
adc
push
push
add
rorb
adc
cwtl
mov
inc
xchg
lret
fs
add
mull
out
fbstp
and
pusha
sub
cmp
cmp
nop
mul
fstpl
add
sti
gs
mov
fsubrl
insl
push
outsb
xor
pop
lods
fiadds
dec
inc
jae
pop
cmc
insb
lods
cmp
in
jae
mov
cmpsb
leave
pop
jnp
mov
or
mov
mov
sbb
cmc
jbe
inc
in
sub
push
jne
in
xor
dec
xor
shrb
out
std
push
out
xchg
or
cltd
pop
add
dec
iret
pop
testl
cmpsl
push
fiaddl
jae
and
jmp
dec
movsb
xor
clc
adc
pop
pop
cmpsb
fucom
rolb
mov
in
adc
xor
pop
sti
dec
jmp
fldt
cwtl
cmp
or
jnp
imul
call
stos
cmp
dec
jmp
fldt
cwtl
cmp
or
jnp
imul
call
stos
sub
dec
jmp
fldt
pushf
cmp
or
jnp
imul
fmuls
mov
add
js
call
adcl
repz
xchg
pop
movsb
pop
mov
push
fnstsw
test
cwtl
fmuls
pop
cmp
jge
or
dec
cmp
mov
jmp
mov
sbb
jge
or
or
mov
aad
lds
idivb
sbb
outsb
adc
push
pop
mov
cld
xchg
int3
sbb
jb
aad
add
lret
jp
adcb
pop
and
and
call
push
fwait
icebp
or
imul
dec
insb
aam
test
mov
fdivrs
loop
rep
dec
mov
or
xchg
jns
mov
test
in
bound
mov
cmp
in
push
mov
sahf
mov
add
int
mov
dec
jp
sub
into
negb
pop
cmp
cmpsb
icebp
imul
jp
mov
push
popf
notb
add
push
aas
fisttpll
test
std
xchg
jmp
mov
ljmp
jge
or
dec
cmp
mov
call
mov
cmp
cmp
push
pop
or
mov
call
lret
clc
mov
dec
cmp
insb
jge
cli
cmp
inc
sub
stos
stos
fstps
stc
lods
leave
mov
cmp
jge
or
dec
cmp
mov
jmp
mov
cmp
jge
or
dec
cmp
outsb
jo
xorb
xchg
and
push
outsl
adc
adc
mov
inc
sub
stc
adc
push
jmp
or
pop
movsb
and
pusha
mov
sub
cs
jbe
xorb
sbb
andb
ds
pop
pmulhuw
cmpsl
fldl
addr16
ja
shrb
mov
fwait
cmp
movsb
inc
lods
pop
mov
mov
xor
xor
xchg
adcl
lock
aam
push
push
xchg
xor
adc
add
hlt
push
add
push
leave
cmp
gs
mov
imul
inc
add
bnd
xchg
lcall
movsl
jge
mov
jne
push
cmp
iret
pop
lods
cmc
cmp
xor
lahf
push
jns
or
data16
push
stos
test
or
sbb
into
mov
cwtl
inc
mov
and
les
xlat
enter
pop
fsubr
push
stc
xchg
adc
sub
ja
jl
enter
gs
xchg
fdivl
mov
aas
mov
stos
mov
loop
adc
data16
xor
adc
in
test
lock
lods
rcll
push
hlt
mov
dec
pop
pushf
xor
movsb
sbb
fldt
sub
dec
shl
mov
or
das
add
sahf
test
or
push
lahf
mov
mov
jmp
sub
and
jns
fmulp
pusha
jno
jmp
bound
insb
in
stc
inc
test
mov
push
pop
mov
push
je
pusha
lret
or
movsl
lret
push
adc
lahf
lock
arpl
pop
cs
inc
pop
stos
pop
lahf
imul
jle
ficoms
loop
pusha
hlt
jg
sarl
sbb
pop
sub
xorl
lods
inc
shlb
sti
mov
fsubl
fdivl
or
fstpl
pop
push
or
sub
cmpsl
insl
jecxz
jb
add
pop
sti
je
pushf
popl
je
stos
and
fdivr
lods
imul
ljmp
insb
loope
push
jo
decl
cld
es
inc
mov
jle
lods
or
mov
stos
nop
ljmp
and
or
out
mov
adc
sub
sbb
jns
push
or
pusha
insb
fnstsw
inc
clc
add
loopne
mov
pop
icebp
jb
mov
sub
imul
data16
imul
fldenv
jbe
nop
sub
adc
outsb
pusha
int
test
sub
sbbb
iret
dec
rcrl
inc
pop
fisubrs
test
adc
mov
xlat
sub
push
and
push
movsl
lret
int3
sbb
int
pcmpeqb
sub
aas
cld
scas
dec
leave
cmp
in
hlt
imul
ret
sub
push
sub
call
xchg
xchg
xchg
mov
jnp
mov
cmpsb
add
xor
mov
pop
enter
enter
inc
or
lahf
mov
jg
mov
insl
pop
dec
or
inc
fwait
sbb
jmpw
in
mov
ret
sbb
or
popa
aas
loopne
xchg
fsubl
pop
sub
shlb
sahf
inc
jo
jno
das
dec
or
out
and
sbb
or
pop
dec
xor
cmp
xchg
xchg
ss
lcall
push
lock
test
in
leave
push
mov
mov
scas
adc
cs
mov
adc
scas
and
imul
sbb
mov
js
xchg
scas
push
lcall
fwait
pop
aad
dec
jle
fsts
popa
adc
inc
push
dec
mov
stos
mov
fistps
rorb
add
sub
pop
loop
stos
jb
ret
and
lea
stos
jmp
lahf
test
scas
lods
out
mov
inc
scas
adc
test
ds
pop
pop
out
lcall
xor
sti
cmp
adc
lods
cwtl
insb
lds
push
cld
pop
mov
sub
sub
mov
add
repnz
pop
push
arpl
mov
das
movsl
inc
xchg
jns
dec
mov
popf
adc
jmp
push
fcoml
mov
loopne
add
sub
pop
fstps
scas
out
loop
mov
xchg
jo
lahf
std
arpl
xlat
lods
fstl
stos
dec
mov
imul
jae
xor
sbb
cmpsl
mov
in
in
sub
ds
sbb
ret
loope
stc
mov
repnz
call
push
xor
mov
pop
shrl
scas
inc
pushf
lods
fisubs
inc
je
imul
lret
insl
ficoms
leave
stc
push
imul
add
inc
cmp
ror
iret
mov
scas
daa
nop
cmp
aam
mov
xor
pop
lock
push
cmp
dec
adc
shlb
cs
movsb
jno
js
jg
bound
push
sbb
mov
stos
push
ret
cmpsl
xor
pop
sahf
jns
xor
lcall
adcb
and
pushf
popa
jns
faddl
xlat
jb
fwait
out
mov
leave
stos
xlat
iret
sub
fwait
or
inc
mov
and
sub
sarl
mull
sbb
inc
loope
push
xchg
add
mov
or
mov
test
in
and
xlat
test
outsb
das
sbb
sub
outsb
outsb
movsb
fisubrs
loopne
or
das
lret
mov
imul
inc
dec
pop
repnz
std
jne
insb
xor
rol
pop
les
nop
inc
aad
sbb
inc
repnz
popf
xor
push
mov
andl
js
pop
dec
cmc
out
mov
subl
repnz
push
andb
arpl
fadds
out
or
pop
or
jle
mov
push
inc
jne
mov
add
out
jle
not
sbb
mov
add
mov
test
sbb
neg
rcl
xchg
sbb
pop
gs
leave
mov
sbb
inc
das
shll
push
sbb
sti
add
testb
out
jg
jp
dec
jecxz
sbb
outsl
cli
xor
lods
fs
sub
jp
nop
pop
mov
jecxz
pop
hlt
xchg
dec
pop
sub
fmull
in
mov
inc
arpl
mov
inc
sub
cs
pushf
sub
outsb
shlb
mov
jl
aad
or
subb
jnp
pop
mov
jl
cld
sbb
andb
and
sub
mov
cwtl
je
push
cmp
xor
fdivr
sub
xor
ja
loop
cmpsl
nop
jno
mov
hlt
sbb
pushf
dec
jns
stos
add
mov
cmpb
sarl
xchg
lcall
lahf
mov
call
pop
roll
test
jo
fsubrs
arpl
addb
mov
ja
mov
push
mov
mov
lea
pop
xor
and
aad
orb
orl
dec
sbb
rcl
mov
xchg
call
or
cli
popa
iret
jb
jns
sbb
sbbb
ret
dec
test
out
sub
sti
sbbl
hlt
mov
jg
pop
jmp
or
add
mov
inc
add
rolb
in
push
orl
loopne
mov
sbb
dec
inc
mov
lahf
fildl
ret
push
cmp
dec
or
dec
rcrl
push
xchg
push
cltd
push
jmp
hlt
cmpl
ja
lods
mov
sbb
cmp
dec
mov
xchg
rol
pushl
dec
dec
sbb
push
in
test
cmp
or
int3
inc
clc
stc
xor
cltd
and
es
les
cltd
mov
sub
pop
sbb
call
xlat
fwait
imul
inc
imul
push
dec
ljmp
popa
cmpsb
pop
dec
pop
mov
dec
movsl
sbb
xchg
xchg
pop
out
adc
xchg
add
out
test
nop
sub
mov
sti
pop
iret
cmp
out
movsl
int3
hlt
incb
sub
mov
lret
repnz
addr16
mov
push
push
xchg
andl
mov
push
xchg
mov
aam
push
jle
cmpsb
enter
in
dec
fidivl
filds
jo
sub
xlat
aaa
sti
push
add
cli
aas
aaa
xchg
sub
mov
ret
nop
in
adc
jg
jg,pn
cmp
pop
mov
or
leave
xchg
jmp
shl
lock
or
call
mov
sbb
push
mov
jo
inc
xchg
xlat
pop
pop
pop
and
stc
in
not
arpl
xchg
xlat
and
mov
ficoml
push
sub
pushf
loopne
lds
mov
ficoms
push
xchg
rcr
cwtl
pop
mov
imul
test
or
cld
adc
jmp
mov
sub
jnp
aam
jno
add
xchg
dec
add
enter
lcall
jecxz
mov
sbb
pop
or
test
push
fcmovnu
pop
in
ja
loop
decl
lret
iret
inc
ret
xchg
sub
imul
sahf
add
testl
mov
sbb
mov
fwait
jnp
jns
es
add
mov
jae
push
mov
testb
cmpsb
pop
add
mov
pushf
das
pop
mov
mov
xor
push
adc
sbb
jbe
sub
idivl
and
pop
mov
or
test
mov
pop
mov
scas
dec
add
mov
popa
xor
xchg
mov
out
arpl
jg
insb
push
mov
into
inc
jno
sti
popf
sub
insl
push
test
xchg
mul
sub
inc
xor
nop
xchg
test
daa
or
rcrl
cmpsb
xor
cmpsb
push
outsb
enter
js
vrsqrtss
sbb
add
and
stc
call
andl
sub
cs
repnz
fs
push
roll
push
fildll
data16
fldcw
out
scas
addl
andb
test
dec
jbe
imul
scas
in
insb
repnz
leave
popf
pop
xchg
inc
mov
cli
test
dec
or
decl
std
cwtl
mov
pop
dec
jp
pushf
div
adc
fucomp
clc
and
leave
int3
shr
cli
orb
filds
cmp
inc
mov
xchg
adc
lea
sub
scas
popa
in
or
fdivrl
lret
stos
daa
pop
push
sbb
sub
sbb
adc
adc
fs
push
dec
mov
adc
pusha
xor
sahf
imul
jecxz
add
mov
mov
out
mov
sub
pop
push
or
jnp
sbb
mov
movlps
cmp
out
jmp
adc
testb
xor
push
sub
dec
jbe
add
idivb
dec
call
icebp
push
rcrl
mov
dec
or
out
push
sarb
mov
adc
sbbl
dec
dec
mull
in
and
test
or
and
clc
frstor
ljmp
or
lods
testl
hlt
bound
fsts
and
mov
cmp
fldl
roll
test
jmp
push
bound
xor
jb
mov
or
ss
pop
test
hlt
popa
jnp
mov
repz
pop
dec
je
push
xor
fsubl
das
inc
je
imul
jne
imull
mov
gs
jbe
xchg
inc
mov
stc
jmp
sub
or
mov
pusha
int3
ds
xor
das
fistpll
dec
pop
xor
cld
xor
out
iret
loop
addr16
jae
lahf
mov
mov
ficoms
xor
jne
adc
push
dec
lds
cwtl
push
push
pop
sub
xchg
add
inc
and
nop
add
addb
or
mov
ret
xchg
dec
in
das
pop
sub
lret
pop
mov
pushf
jns
inc
loopne
test
mov
jb
push
rcll
inc
fcomp
xor
xchg
jbe
inc
xchg
xchg
je
dec
mov
dec
test
inc
mov
lret
or
inc
mov
test
inc
out
xchg
sub
popa
and
sbb
scas
dec
lahf
xchg
lcall
bound
xchg
loope
sbb
sub
sbb
dec
xchg
sbb
repz
leave
rcll
out
les
aas
pop
sbb
dec
pusha
adc
in
in
cmc
and
repnz
sbb
mov
jns
dec
xchg
movsb
jbe
movsb
adc
dec
dec
mov
fimull
fcoml
in
leave
adc
rorb
sbb
pushl
xchg
xchg
das
mov
dec
jp
int
and
push
popa
pop
inc
jle
dec
mov
cmpsb
into
data16
mov
jo
push
scas
scas
pop
std
jno
pop
subb
bnd
ret
and
out
xor
dec
aad
adc
insb
popw
insb
shlb
or
mov
inc
movsb
push
lock
in
or
gs
es
cmp
js
and
movsl
cmp
rol
push
mov
pop
inc
repz
and
std
mov
gs
outsl
fisubl
pop
shl
mov
mov
lret
push
gs
sub
xchg
pop
mov
xchg
fwait
ljmp
shlb
adc
dec
jno
mov
ja
mov
or
jmp
lock
lcall
rorb
mov
frstor
add
stos
in
ret
and
out
pop
jb
mov
ret
in
dec
aam
push
lea
pop
cltd
fldenv
push
cltd
in
or
dec
lahf
pop
add
pop
popf
iret
push
invd
mov
xchg
aad
enter
lock
out
scas
stos
cwtl
mov
popf
aad
sbb
pushf
jge
mov
mov
ss
sbb
xchg
sahf
jecxz
jne
int3
rcll
mov
add
cmp
cs
push
push
in
es
out
mov
int
sub
call
lea
push
push
inc
xchg
mov
outsl
pop
mov
push
jmp
movsb
pop
scas
clc
imul
adc
pop
add
mov
push
cmp
jle
mov
add
in
or
push
aaa
adc
faddl
testl
mov
and
bound
out
pop
scas
ss
add
dec
push
push
call
push
and
mov
gs
push
mov
jg
xor
adc
out
jg
adc
sti
dec
sub
adcl
loop
mov
mov
inc
movb
adc
jge
and
cmp
inc
sub
stc
je
divb
je
sub
cmpsl
push
out
add
add
lock
inc
scas
xchg
adc
pop
loop
cwtl
mov
or
jmp
js
jle
xchg
dec
fdivr
fists
jb
xor
xlat
jns
fs
sub
push
aam
aad
mov
mov
notb
aad
loope
mov
or
and
dec
sub
out
loop
adc
cmp
pop
fisubl
jge
setbe
mov
or
jp
cld
into
roll
inc
xor
inc
out
cmpsb
adc
loop
mov
sar
xlat
jne
xor
xor
cmp
js
mov
dec
xchg
repnz
ret
dec
stos
sbb
pop
rcll
mov
mov
xor
xor
xchg
test
and
lret
dec
sarb
sbb
sub
les
loopne
shrb
inc
jg
sub
mov
test
mov
js
stc
lcall
decl
pop
jae
mov
jns
mov
mov
mov
jmp
insb
loopne
and
mov
cmc
mov
sbb
mov
test
adc
dec
je
repnz
and
push
mov
adc
inc
mov
adc
fwait
jbe
mov
sbb
jg
xorl
clc
dec
push
xorl
pop
stc
fdivs
in
out
aam
in
cmp
lret
rcll
jns
mov
imul
dec
jl
fwait
mov
ffreep
jae
clc
cmpsb
cmp
repz
xchg
arpl
outsb
pop
int3
imul
pop
add
adc
sbb
das
pop
test
leave
les
and
pop
dec
mov
icebp
sub
insl
out
pop
pop
rcll
jge
push
sub
rolb
lods
mov
popf
push
das
sub
inc
shrb
adc
lods
fst
cmp
adc
xor
add
pusha
mov
mov
sbb
mov
shrb
mov
imulb
mov
xchg
les
cmp
imul
cltd
out
dec
mov
jp
movsl
insl
jg
jne
sahf
mov
clc
add
lock
lock
lock
iretw
sbb
test
scas
jae
icebp
fwait
push
sub
imul
call
push
and
mov
frstor
inc
loop
push
lods
add
sti
popf
xor
pushf
arpl
outsl
lock
movsl
imul
idivb
imul
cmp
cmp
pop
adc
jge
daa
mov
sahf
mov
mov
mov
imul
mov
adc
add
stos
out
jns
in
sbb
rolb
jnp
and
jne
adcb
das
cli
jbe
and
mov
mov
pop
jmp
fidivl
mov
ret
push
mov
rol
fdivl
xlat
test
in
jecxz
lret
or
mov
fcmovne
fnstsw
and
push
cmp
jmp
add
fcmovbe
cwtl
push
shll
idivl
push
fcmovne
jbe
ret
loop
ljmp
icebp
add
sub
cmp
sti
add
pop
sahf
std
sbb
inc
xor
repnz
add
add
test
xor
int3
add
mov
sbb
inc
and
fstpt
add
pop
ss
popf
pop
xchg
mov
or
pop
sbb
mov
jno
inc
sbb
test
test
clc
sti
mov
das
jmp
add
cmp
inc
cli
sub
jp
mov
insl
push
mov
mov
ljmp
jecxz
adc
dec
add
or
push
fadd
call
int3
ret
je
sahf
shll
sbb
and
add
mov
mov
pop
call
scas
rorl
push
pop
sub
ljmp
pusha
loop
pop
cmp
add
rcl
scas
enter
int
into
xchg
shll
imul
lock
add
nop
mov
mov
das
aam
nop
or
into
and
adc
stc
fcom
cmp
jne
pop
lret
fisttpll
fsub
mov
aaa
shlb
out
jae
outsl
nop
jmp
cmp
rcll
lret
mov
push
pop
xchg
cmp
aaa
xchg
xor
test
xchg
xchg
mov
out
ljmp
add
addr16
arpl
dec
iret
xor
push
bound
lret
inc
add
inc
dec
inc
push
rcrl
or
mov
xchg
bound
push
stc
inc
nop
push
sub
pop
push
lods
xchg
lret
outsb
test
notb
aas
je
clc
aad
jns
loope
mov
mov
mov
shrb
imul
shlb
dec
push
mov
in
mov
lret
jge
xor
loopne
fst
pop
inc
xlat
inc
mul
inc
imul
mov
shrb
add
mov
xchg
inc
divb
cli
add
and
sbb
ljmp
test
divb
mov
scas
mov
dec
add
sub
bound
cmp
out
mov
cltd
or
lods
cmpsl
lea
pop
and
rorb
mov
mov
xchg
jg
popf
sbb
mov
xlat
and
add
and
out
sub
jne
aad
mov
lock
decb
fsubrs
sarb
dec
mov
push
aas
ja
hlt
mov
mov
es
adc
in
orl
es
roll
fisttpl
push
pushf
popf
mov
inc
sub
lahf
decl
cmp
movsb
mov
fcomi
movsb
test
clc
out
in
or
mov
pop
jle
dec
stc
mov
mov
mov
push
cs
or
sbb
iret
sbb
pop
movsl
lds
xor
or
xor
jle
inc
mov
insb
jns
fcmovne
xor
inc
daa
dec
insb
sub
aas
iret
mov
mov
stc
or
xor
push
int
mov
jmp
mov
cmp
jge
or
dec
cmp
mov
jmp
mov
cmp
jge
or
dec
cmp
icebp
in
icebp
std
cltd
jmp
mov
cmp
jl
or
imul
cwtl
jmp
cmp
xchg
or
jp
xchg
xchg
mov
cmpsb
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
ja
addr16
addl
or
int
jmp
mov
movsl
daa
xchg
addr16
aaa
cmp
cmp
sbb
jl
hlt
out
xlat
fmul
enter
stos
xchg
cwtl
xchg
dec
inc
pop
push
and
xor
add
adc
clc
lret
mov
enter
shl
push
xor
sbb
xor
fs
jmp
jno
sbb
pop
fcompl
and
mov
idivb
loop
push
sti
sbb
out
divl
into
push
sub
mov
xchg
push
fwait
add
mov
push
mov
mov
aaa
mov
pop
adc
es
sahf
cmpsl
arpl
enter
call
sbb
push
loop
cmp
test
cwtl
daa
std
ljmp
clc
aas
pop
pop
adc
pusha
testl
jno
mov
xchg
or
adc
and
pop
or
xchg
aaa
repnz
hlt
dec
xchg
lcall
push
inc
inc
dec
and
aaa
sub
sbb
adc
clc
push
iret
rcr
scas
mov
xchg
xor
inc
dec
pop
je
insl
notl
mov
stos
in
ljmp
sub
daa
pop
cmp
popw
insb
push
cmp
xchg
mov
int3
test
jmp
cld
adc
push
jg
daa
sub
sbb
or
clc
out
xlat
fadd
enter
test
cwtl
xchg
push
pop
inc
dec
aaa
cmp
sub
sbb
or
clc
out
xlat
fadd
enter
test
cwtl
xchg
call
mov
mov
ret
popa
cmpsl
adc
rcr
dec
dec
repz
jmp
fsubl
mov
sub
incl
sub
ds
enter
dec
adc
pop
jg
addr16
xchg
aas
push
int3
imul
fiaddl
mov
lods
sbb
inc
fs
mov
cmp
xchg
clc
mov
jne
daa
adc
out
or
addb
and
or
scas
adc
test
stos
ds
popf
stos
repnz
idivb
nop
loopne
bound
lret
mov
pusha
repz
or
xchg
out
out
cmp
out
pop
pop
loop
cmp
mov
iret
pushf
xor
scas
lret
pop
sub
dec
daa
mov
call
les
movzwl
outsb
dec
outsb
sbbl
jge
cmp
and
jle
xlat
insb
mov
inc
mov
mov
jbe
iret
ja
add
pusha
ss
es
mov
popf
push
ds
sbb
xor
and
adc
popf
mov
push
fnstcw
in
push
mov
push
outsb
mov
pop
adc
nop
sar
inc
cwtl
jmp
mov
cmc
lods
jo
and
sub
push
adc
jb
pop
cmpsb
dec
cmp
xlat
insb
xchg
cmp
jecxz
sub
add
das
call
das
push
movlps
mov
jns
int3
ret
and
pusha
movsl
push
pusha
aad
fidivs
dec
mov
aam
inc
cmp
addl
mov
xor
sub
jns
sbb
cmp
push
js
sub
incb
xchg
pop
cmp
les
pop
scas
daa
outsl
lds
testl
lods
mov
mov
rcrb
mov
pop
iret
pop
leave
outsb
pop
xor
mov
mov
inc
cltd
jecxz
pop
mov
jns
cmp
fwait
lods
pop
mov
out
out
test
cmpb
sbb
jo
cmc
lods
cmpsb
sub
jp
mov
sbb
xchg
jle
mov
push
ljmp
dec
xchg
call
fs
and
outsl
roll
lods
cld
add
jb
add
nop
lret
repz
cltd
ss
mov
pop
sub
mov
es
clc
jle
jnp
dec
shrb
mov
push
lea
ljmp
dec
mov
pop
imul
outsl
loope
jge
cmpsb
lods
push
shrb
and
cwtl
xor
in
push
fs
cmpsb
movsb
test
mov
pop
push
aas
jecxz
fstp
outsl
jge
out
xlat
xchg
aas
jge
adc
mov
add
cs
jne
inc
sub
pop
cmc
jmp
pushf
pop
xlat
add
out
mov
aas
dec
mov
or
jnp
adc
pop
sbbl
lods
lea
movsb
cmpsl
bsr
sbb
dec
dec
and
mov
lret
cmp
fpatan
lods
lea
lock
addr16
or
inc
mov
repnz
mov
into
out
jb
mov
mov
mov
dec
pop
sbb
div
add
sti
push
ret
pushf
pop
rcll
and
jle
sbb
lods
or
dec
cmpsb
and
jge
mov
xchg
push
or
cmc
push
xor
dec
dec
scas
fs
pop
inc
in
stos
ficoms
out
inc
inc
repnz
xchg
mov
dec
test
adc
or
in
dec
push
cmp
mov
or
lret
ja
ret
repz
out
pusha
addb
and
jbe
dec
std
pop
cs
ret
ret
sub
dec
dec
dec
inc
xchg
testl
cmp
int
aaa
xor
fiaddl
scas
jg
fiaddl
sbb
cmp
ljmp
leave
xor
xor
jbe
imul
out
add
xchg
ss
int
stos
shrl
mov
mov
or
mov
fmuls
add
push
mov
mov
mov
mov
fsub
jle
test
mov
push
push
inc
xchg
in
cmp
push
xchg
cmp
movsl
int3
pop
loope
mov
push
fnstenv
pop
das
sub
adc
jle
adc
test
jecxz
fs
pushf
les
push
lods
pop
inc
push
push
jmp
call
fildll
sbb
aad
and
imul
lcall
outsb
lds
rolb
sub
lret
push
jl
cmp
in
or
adc
dec
je
pop
shlb
pop
ficoml
mov
pusha
adc
repnz
dec
inc
jp
dec
mov
addr16
sbb
shl
inc
add
cs
dec
out
lea
sub
dec
push
iret
cs
fcmovnu
outsl
loopne
sub
loopne
and
imul
sub
dec
mov
ficompl
aad
cmp
fisubrl
gs
lods
ljmp
aam
in
imul
jbe
cmpb
sbb
imul
pusha
mov
jle
imul
xor
mov
pop
stos
loope
and
mov
mov
sahf
cltd
xchg
cld
mov
pop
add
clc
hlt
dec
lock
jg
movsl
adc
in
mov
sbb
and
loopne
dec
test
adc
add
add
cmp
aas
rcrl
cmp
sub
popf
por
inc
test
aas
push
imul
aaa
lahf
ja
add
mov
stos
pop
fisttpl
repnz
mov
jb
fstpt
out
in
subb
adc
cmpsb
aad
cmpsl
push
and
out
jno
adc
fadds
pop
fnsave
jp
inc
add
ror
add
sub
xchg
icebp
divb
mov
dec
rolb
inc
adc
cmp
jle
push
sbb
fwait
jmp
fisttpll
and
lret
orb
xchg
cmpsb
es
sub
je
jb
cmp
xlat
fiaddl
lods
xor
jg
xlat
out
out
xor
ds
cmc
fsubl
cltd
cmpsb
jmp
jno
sbb
mov
sub
cli
clc
ret
call
cmp
xchg
xchg
inc
js
mov
cmc
idivb
mov
ljmp
scas
aad
inc
inc
sbb
pop
and
sbb
push
mov
pop
mov
in
sub
or
or
rcll
xor
cmp
or
les
sub
xchg
fnstsw
lret
sub
int3
mov
into
xchg
xor
pop
adc
fwait
int
add
adc
cltd
push
inc
add
sarb
es
and
inc
mov
pop
aas
insl
loope
push
sti
aam
push
push
jno
test
mov
sub
fsubl
pop
lcall
mov
loope
mov
inc
add
ret
xor
ss
mov
testl
push
loop
push
test
inc
sbb
cmp
subb
pop
vaddps
pop
insl
ljmp
fwait
scas
add
stc
push
xchg
lret
lret
fwait
and
lods
adc
mov
inc
jp
gs
sahf
dec
gs
movb
arpl
dec
xchg
mov
xchg
or
fldt
mov
jl
shl
adc
bound
push
jns
neg
cltd
mov
push
sub
jo
arpl
fmull
mov
fwait
hlt
dec
and
lcall
cmp
mov
mov
mov
xor
jp
inc
insb
repz
mov
popa
pop
lret
stos
mov
adc
dec
into
shrb
add
cmp
aas
mov
imulb
sbb
addl
arpl
mov
push
dec
stos
push
xor
repnz
cmp
pusha
ja
mov
das
addr16
arpl
cmpsb
hlt
dec
repz
push
pop
inc
lds
cmpsl
lods
lret
lods
or
jns
push
adcl
cld
xor
inc
mov
frstor
mov
dec
nop
sbb
enter
in
pop
mov
pop
sub
imul
leave
adc
adc
mov
push
aam
rcrl
addr16
adc
mov
icebp
cmc
pop
std
rorl
fs
jp
outsb
enter
push
adc
es
push
sub
dec
cmp
adc
movsl
nop
mov
cs
jmp
xorb
and
aam
inc
movsb
mov
daa
in
pop
shlb
stos
stos
pop
aad
cmp
sbb
sub
je
push
popf
in
mov
add
aaa
pop
test
cmp
in
stos
scas
call
andb
pop
out
pop
lret
mov
in
mov
mov
lea
sbb
cmp
dec
adc
xchg
idivl
or
out
cmpl
rcl
add
into
or
imul
sub
mov
jae
cs
in
lret
add
js
sub
push
out
push
shrb
fldt
and
jno
imul
add
push
es
mov
test
cmpsl
jno
jmp
out
jle
pop
movsl
add
push
movsl
mov
aam
pop
mov
in
insb
cwtl
pop
stos
in
dec
fimuls
sti
ds
xchg
add
dec
adc
jl
pop
sbb
arpl
in
in
lahf
call
mov
int3
pop
fisttpll
mov
xchg
arpl
mov
imul
adc
lea
cmpsb
mov
popa
test
lods
in
je
mov
rcrl
jb
xor
scas
and
pop
add
xor
push
movsl
dec
add
pushl
xor
add
xchg
dec
vrcpss
adc
mov
lcall
and
pop
idivl
cmp
dec
inc
fcoms
mov
lahf
gs
iret
lods
lds
repnz
nop
hlt
stos
adc
fwait
push
hlt
pop
xor
mov
outsl
jno
adc
jno
dec
push
jne
fstpl
out
mov
es
or
jo
jb
cltd
fsts
dec
lods
push
ja
ds
sbb
into
daa
stc
push
xchg
insb
push
rorb
mov
das
dec
mov
xchg
ja
sbb
and
mov
scas
add
and
sbb
push
hlt
dec
jge
cmc
cmp
enter
ljmp
mov
jmp
movsl
push
aam
push
xor
sub
xor
mov
push
sti
inc
out
inc
fmuls
and
sahf
insb
shr
jnp
dec
rcl
data16
sbb
inc
xchg
and
fidivrs
lea
xchg
push
sub
push
pop
out
xchg
mov
test
call
lcall
cmp
cmp
lahf
lock
push
lmsw
cmp
or
xor
mov
and
pop
adc
xchg
imul
cmp
loope
loope
pop
mov
sub
xor
mov
add
mov
fwait
call
je
mov
cmp
or
repz
shrl
mov
popf
adcl
or
ficoms
jl
push
rcl
shrl
and
cmc
and
dec
or
bound
fists
outsb
and
add
mov
add
add
movsl
mov
popa
ss
outsb
dec
and
inc
stc
es
pushf
pop
dec
gs
xchg
imul
lcall
insl
jecxz
and
adc
add
inc
fidivrs
xor
pop
mov
enter
jmp
cmc
jecxz
inc
jl
int
jno
fucom
pop
mov
sti
cwtl
aas
popfw
jmp
mov
imul
test
lahf
repz
or
xor
popa
cld
cli
add
inc
repz
mov
mov
jbe
ret
dec
enter
xchg
jne
xchg
pop
add
andb
fwait
cltd
xlat
nop
cmp
fisttpl
ljmp
xchg
sub
test
repnz
mov
push
jo
bound
or
mov
test
cwtl
pop
in
pop
out
sub
xchg
cli
jp
ljmp
into
mov
mov
sbb
xchg
lods
push
hlt
mov
xchg
aaa
fwait
xor
or
ja
sarb
lret
test
int
aaa
or
pop
xchg
mov
jmp
jl
orl
jp
adc
dec
mov
mov
mov
add
lcall
and
or
dec
insb
shlb
mov
rol
sub
lods
jae
mov
add
les
xchg
or
sahf
in
xchg
int3
pop
loopne
mov
sahf
mov
mov
fs
xchg
inc
stos
pop
sahf
rcl
push
sbb
mov
int
inc
rclb
out
xor
mov
movsl
shll
adc
ljmp
inc
add
jo
and
pop
or
sbb
inc
std
pop
push
or
leave
scas
lea
inc
jmp
sbb
imul
fnsave
shr
lret
stos
ret
and
idivl
mov
mov
push
scas
adc
sub
xor
sarl
je
or
shr
ljmp
pusha
fs
sbb
sbb
jnp
rolb
shlb
mov
nop
movsl
and
ljmp
dec
dec
sub
std
pop
pop
pop
mov
fisttpl
sub
stc
dec
or
fisttpll
inc
and
and
add
cmp
lea
lret
mov
push
xor
pop
lret
jbe
cmp
imul
mov
lret
sti
ja
xor
fs
mov
mov
mov
jno
lahf
imul
pop
push
scas
sbb
or
jb
fisubs
sbb
inc
pop
subl
jbe
pushf
xchg
mov
xchg
xchg
rorl
jns
movsb
in
fisubrs
push
icebp
rcl
mov
push
sbb
imul
cmpsb
dec
hlt
pop
mov
or
psllw
sbb
fs
das
push
cli
and
sub
mov
push
cwtl
nop
lods
cmpsl
mov
sub
int3
ds
pusha
into
push
xlat
arpl
cmpsl
out
mov
push
fdivrl
add
mov
pop
jbe
xchg
inc
xor
std
xchg
mov
add
cltd
mov
xor
and
mov
andb
shll
jno
mov
stos
xchg
add
movaps
xchg
outsl
mov
orb
int3
inc
out
jo
mov
inc
xor
pop
adc
aad
inc
xchg
into
in
mov
hlt
sahf
sub
jmp
mov
imul
ret
aam
inc
lcall
mov
repz
xchg
jmp
pop
adc
adc
outsb
iret
dec
xor
jnp
ljmp
and
jmp
cltd
nop
and
in
fnstsw
sbb
mov
fs
rorl
rolb
xchg
sub
pop
dec
bound
mov
cld
cld
mov
iret
lret
lret
pushf
das
push
shl
sub
xchg
jle
dec
jne
fsubrp
imul
and
in
cs
nop
xchg
mov
imulb
xlat
xor
fmulp
mov
sbb
je
mov
mov
lret
cmp
hlt
adc
inc
dec
xor
xor
shl
sub
clc
movsl
add
inc
xorl
insl
push
pusha
mov
into
xor
jg
addr16
dec
add
mov
addr16
iret
xchg
inc
xchg
push
bound
pop
addl
mov
test
xchg
mov
mov
stc
mov
cld
subb
add
dec
out
add
aaa
enter
hlt
inc
subb
inc
ljmp
cmp
push
jne
xor
aad
inc
test
add
add
sbb
stos
rorl
fildl
mov
mov
fs
jbe
inc
sbb
sub
add
sub
test
test
je
std
jg
jg
lcall
push
arpl
ret
clc
mov
fisubs
divb
rcrl
mov
cld
pop
push
movsb
scas
in
leave
icebp
out
sbb
fbld
subb
andb
mov
in
aaa
cmpsb
lret
cli
out
cmp
js
aad
add
dec
adc
pushf
push
scas
mov
arpl
lds
adc
jmp
cld
repnz
testb
cmpsl
mov
mov
lcall
scas
lret
mulb
xor
adc
lcall
jbe
and
jp
xbegin
mov
xchg
sub
cmp
popa
mov
aas
lahf
dec
cmp
insb
push
ret
bound
imull
mov
pop
lea
mov
inc
dec
inc
inc
repnz
aaa
xlat
int
push
ljmp
xor
iret
repnz
or
cmp
sahf
test
inc
or
add
clc
jl
add
cli
lret
insb
les
inc
xchg
jmp
stos
lods
std
outsl
mov
mov
int3
mov
jno
mov
or
fldl
inc
loopne
pop
pop
shr
mov
pusha
adc
icebp
push
inc
jns
mov
adc
fisubrl
xor
rol
or
cltd
and
imul
and
xchg
in
sub
iret
iret
jb
sbb
pop
into
mov
out
lods
fidivl
cmp
lods
clc
clc
int
and
mov
in
cmp
mov
jno
lcall
mov
data16
sbb
ds
addr16
cmp
or
ljmp
dec
cmc
es
mov
mov
pop
mov
leave
repz
loope
out
mov
pop
dec
jp
rcl
hlt
clc
pop
cs
sbbl
cmp
fdivs
imulb
or
and
inc
imul
scas
call
out
jg
push
bt
aaa
out
mov
push
ss
xchg
imul
cld
int3
aad
dec
shr
mov
pop
ffree
hlt
sub
cmpsb
push
mov
or
mov
cmp
dec
mov
cltd
jmp
adc
dec
mov
xchg
pop
xor
cmc
cmpl
jo
fstpt
or
je
lods
out
jmp
test
hlt
mov
mov
imul
or
and
inc
in
std
add
in
into
push
jmp
lret
dec
add
xor
add
cmc
aaa
push
test
xchg
shlb
mov
mov
es
mov
sbb
add
sbb
sbb
cmp
rcrb
ret
repnz
xor
push
jne
out
inc
jecxz
dec
xor
and
pop
or
int
and
cmp
xchg
mov
stos
pop
dec
xor
das
pop
dec
and
fldcw
shlb
inc
jp
shl
inc
les
fstp
imul
ss
mov
popf
cmc
dec
dec
sub
inc
or
data16
aad
xor
gs
arpl
push
push
enter
sub
cmp
mov
dec
repnz
jmp
mov
cs
mull
fcom
in
sub
decl
xchg
imul
popf
lods
adc
nopl
jnp
in
data16
jb
jmp
pop
rcrl
inc
in
dec
lods
push
iret
insb
xor
les
arpl
negb
gs
aad
adc
mov
and
and
pushf
xchg
push
repz
cltd
test
mov
loope
xlat
adc
int
imul
ret
sbb
in
mov
xor
aad
mov
cmp
mov
outsl
decl
imul
enter
inc
sbb
jp
fwait
std
and
mov
inc
mov
out
les
sbb
jns
js
imul
in
das
xor
fs
cmpsb
sbb
addb
inc
rorl
pop
dec
sub
sahf
adc
fimuls
scas
std
adc
lret
mov
mov
sbb
in
fiadds
cmpsl
cmp
adc
dec
in
jno
repz
cmpsl
push
jmp
inc
jbe
add
xchg
adc
cmp
iret
and
cs
pop
jge
mov
and
popa
xchg
aam
call
stos
sub
jmp
mov
je
loope
push
bound
aaa
sbb
test
cmp
fistpll
pop
push
bound
jge
push
cld
sbb
mov
out
rolb
adc
aam
scas
cs
fwait
or
std
shlb
sub
adc
subl
popf
add
stc
roll
ljmp
add
arpl
or
test
pop
mov
mov
cmpsb
sbb
das
sub
push
aaa
cmp
sub
sbb
or
clc
out
xlat
fadd
enter
test
cwtl
xchg
push
pop
inc
dec
aaa
cmp
sub
sbb
or
clc
out
xlat
fadd
enter
test
cwtl
xchg
push
pop
inc
dec
aaa
cmp
sub
sbb
or
clc
out
xlat
fadd
int3
mov
cmpsb
test
pushf
test
pop
inc
dec
xor
sbb
inc
jge
mov
push
cmpsb
out
xchg
fiadds
shlb
outsb
pop
pop
push
dec
ja
outsb
inc
push
inc
push
mov
cmpsb
out
xchg
fiadds
scas
sahf
mov
jle
outsb
ja
push
dec
jbe
cs
push
inc
push
mov
cmpsb
out
xchg
fiadds
scas
sahf
mov
inc
xor
arpl
insb
cmovp
sub
cmpsb
lcall
outsl
sub
bound
sbb
repnz
int
jecxz
sub
testl
xchg
dec
pop
mov
cltd
movsl
pop
push
mov
cmp
jmp
mov
ss
stc
mov
cmpsb
sbb
jno
cmpsb
out
mov
push
idivb
fisubs
dec
loopne
pop
mov
xor
das
dec
arpl
lds
xchg
xor
mov
fcomps
push
outsl
inc
mov
push
imul
mov
push
sbb
add
cs
add
leave
xor
dec
add
data16
inc
push
jmp
fiadds
scas
sahf
mov
jle
outsb
push
pop
push
dec
jbe
cs
push
inc
dec
ret
cmp
mov
sub
sti
mov
pop
jns
bound
add
push
cmp
movsb
loop
into
cltd
xchg
fildl
mov
add
arpl
cmp
imul
scas
mov
mov
out
sahf
mov
jle
outsb
push
pop
push
dec
jbe
cs
push
inc
push
mov
cmpsb
out
xchg
fiadds
scas
sahf
mov
jle
outsb
push
pop
push
dec
jbe
cs
push
inc
push
mov
mov
pop
test
mov
and
stos
xchg
add
xor
loop
hlt
sbb
push
out
push
repnz
or
in
push
lret
scas
or
loop
lds
push
stos
xchg
cmpsb
mov
cmp
leave
xor
repz
push
lods
rep
add
xor
shr
sub
and
mov
mov
and
push
jbe
or
insb
add
push
sbb
les
sbb
subl
xchg
mov
call
pop
xor
fwait
cli
dec
fmull
arpl
data16
ja
sub
sbb
jp
mov
cmpsl
xchg
push
pusha
es
sti
sbb
sbb
xor
popf
inc
les
push
push
pushf
mov
bound
and
mov
cli
xlat
icebp
sbb
jecxz
xchg
movsl
jl
lods
aas
mov
cmp
bound
mov
ret
inc
std
outsb
xchg
leave
leave
push
cmc
inc
int3
adc
jle
mov
outsb
or
sub
out
inc
icebp
sub
lahf
inc
sub
icebp
lret
push
leave
xchg
fdivrl
add
mov
clc
jb
fs
add
movsb
cltd
mov
fstl
sub
cmpsl
pop
sub
mov
roll
sbb
in
or
xchg
mov
adc
jl
es
fwait
jae
sar
aam
loopne
xchg
xchg
push
pop
sahf
or
xor
fisubrs
jae
jne
lret
cltd
push
data16
xor
test
xor
mov
orb
lock
adc
les
sbb
orb
repz
movsb
adc
and
and
sbb
cmp
adc
loop
test
insl
ds
dec
les
jp
xor
dec
xchg
add
clc
inc
gs
push
ja
dec
addr16
xlat
add
aad
mov
dec
or
cli
iret
rcrl
in
xchg
popa
aas
inc
ds
push
pusha
in
cmpb
push
shrb
sbb
and
jns
sub
ja
jb
nop
gs
add
xchg
outsl
push
scas
leave
push
push
aas
aam
sbb
or
sub
mov
nop
out
mov
push
pop
divb
mov
add
or
or
loope
rcr
pusha
mov
adc
push
pop
push
lock
mov
bound
int
dec
pop
push
xor
arpl
leave
mov
dec
leave
inc
insb
pop
shrl
mov
push
into
sub
cmp
ret
nop
and
mov
out
das
loopne
insl
jp
jge
jg
cwtl
jns
or
cmp
cltd
pop
test
shl
lea
add
mov
cmp
les
stos
faddl
cmp
ror
dec
shlb
dec
push
es
lret
push
popa
dec
lret
xorb
and
or
dec
popf
insl
test
shll
aaa
adc
push
or
mov
xchg
lcall
lds
add
pop
aad
add
push
jns
add
inc
inc
inc
fistpl
or
leave
loope
mov
loop
mov
inc
push
add
cli
lds
add
mov
inc
incl
jl
in
mov
jno
xor
jmp
push
or
push
mov
repz
push
xchg
loop
gs
aas
mov
sub
sub
dec
je
dec
add
fwait
mov
pusha
cmp
jl
imul
mov
mov
fidivs
sbb
loop
inc
lret
and
fucompp
or
add
mov
jle
ds
repz
add
in
mov
xchg
icebp
jl
ss
sub
jno
fistl
enter
add
lret
std
pop
dec
rclb
push
xor
imul
insb
repnz
mov
xor
idivl
mov
xor
cmp
stos
pop
xor
xor
dec
push
ret
in
add
gs
jno
adc
adc
sbb
pop
stc
jnp
scas
rcrl
sbb
or
stos
fdivrp
xchg
jmp
jae
leave
mov
movsl
jnp
add
mov
mov
mov
inc
test
loop
pop
xorb
outsl
lock
fwait
inc
fidivrs
mov
pop
cmpsl
fldt
adc
push
imul
addr16
filds
inc
not
in
jae
adc
jo
stos
sbb
pop
dec
loope
fidivrl
fcoms
testl
sti
insb
jle
loope
fcoml
inc
fstpt
adc
addr16
movsl
jbe
push
add
mov
test
jnp
mov
mov
mov
xor
out
add
jbe
pop
jno
xchg
dec
mov
inc
stos
jle
outsl
sub
pop
dec
mov
mov
mov
out
pop
jne
out
pop
subb
pop
sbb
cmpsl
hlt
out
jo
cmp
jl
xor
xor
xor
inc
popf
push
cwtl
loop
push
sub
mov
loopne
leave
icebp
jl
insl
pop
inc
sti
popa
sahf
pop
test
mov
pop
and
out
pop
fs
pop
xor
int
iret
cmp
sbb
lea
mov
ret
xchg
addr16
loop
je
clc
or
mov
cmpsl
fxch
lahf
pushf
clc
ljmp
insb
cmovg
fwait
subl
lea
and
cmp
mov
or
pshufw
popa
iret
mov
pop
mov
sbb
mov
xchg
out
icebp
xor
in
mov
mov
and
push
inc
out
xlat
xorl
out
sysenter
dec
cmp
mov
mov
jp
daa
lcall
jb
fildl
js
mov
cmp
dec
hlt
mov
lret
rorl
xor
daa
xchg
jae
out
les
sub
pop
outsb
loop
sbb
sub
fisttps
in
mov
jge
push
and
xchg
ljmp
pop
dec
lea
fsubrs
scas
add
xchg
jbe
stos
sub
adcl
cmp
xlat
das
subb
mov
iret
mov
in
imul
and
daa
vmread
inc
dec
into
pop
imul
push
cld
xchg
fisttps
xchg
loopne
sbb
inc
ja
ja
add
pop
popl
xor
dec
mov
mov
lea
insb
into
mov
mov
adc
movsl
out
in
test
enter
xorb
ja
cmp
scas
imul
ss
and
ss
mov
pop
popf
repz
pushf
adc
xor
push
ljmp
in
lea
fsub
jno
push
mov
mov
int
shlb
push
push
fbld
in
jno
icebp
es
mov
repnz
xchg
xchg
lcall
mov
daa
pop
add
int
cmp
mov
bound
cmpsl
addl
mov
lahf
and
mov
fbld
dec
and
lret
outsb
adc
in
loopne
arpl
sub
pop
xchg
inc
loopne
mov
xchg
pushf
inc
mulb
outsl
rcrb
or
add
ds
jmp
push
scas
push
in
mov
jo
test
in
or
adc
test
cmp
je
xor
dec
jo
jnp
int3
roll
mov
ljmp
enter
mov
ds
js
cltd
icebp
add
notb
fld
je
mov
mov
ficoml
cwtl
cld
adc
smsw
cmp
popf
pop
repz
cltd
jp
jno
pop
push
dec
leave
out
stos
lret
pop
mov
fisttpl
jmp
cmp
xor
and
pop
or
pop
dec
in
dec
enter
aam
xchg
ljmp
stos
sahf
mov
fisttpl
call
push
push
stos
outsl
jg
mov
in
andb
cmp
pop
mov
adc
fs
pushf
mov
pop
rolb
inc
push
out
sub
sub
cmp
sbb
sbbb
sub
stc
fsubl
inc
roll
add
sub
or
lock
xchg
push
fldt
sbb
dec
insb
es
into
pop
ret
inc
inc
mov
inc
or
inc
movsl
ss
stc
push
xchg
fs
out
sub
pushl
loope
push
adc
loope
mov
or
push
mov
mov
aad
stos
daa
mov
out
or
imul
pop
mov
aam
xchg
iret
push
or
inc
add
imul
mov
mov
push
in
push
cwtl
mov
movsb
clc
imul
gs
push
xchg
add
icebp
sahf
push
mov
stos
ja
lahf
cltd
out
loopne
jmp
rorl
cltd
sbb
mov
popf
aas
xor
mov
gs
add
stos
jne
out
aad
popf
lcall
and
lods
mov
shll
inc
lock
adc
cmp
xor
ret
sub
data16
leave
fdivrs
or
cmp
pop
mov
xchg
sub
pop
fnstcw
dec
sub
loopne
mov
loopne
aaa
fisttpll
sub
or
cmp
xor
insl
inc
cmp
popa
out
sbb
and
jmp
or
jecxz
fwait
dec
xor
cs
push
dec
inc
cs
addr16
sti
sti
push
std
lds
xchg
fisubrs
xchg
inc
jg
aam
outsl
test
and
push
mov
lock
xchg
aas
mov
dec
nop
nop
adc
xchg
out
sahf
dec
adc
aam
mov
test
repnz
inc
scas
xchg
mov
jns
icebp
and
inc
inc
inc
lods
rolb
mov
jmp
sbb
xor
scas
sti
cmpsl
hlt
adc
es
inc
jecxz
xchg
sub
fmull
int3
and
or
cmp
xchg
mov
das
lock
mov
das
clc
jae
shll
aam
shrl
adc
sub
dec
xor
jne
jne
ljmp
mov
aad
test
in
cmpsb
jl
js
xor
ds
not
xabort
cmp
sbb
push
mov
and
inc
jne
shlb
bound
mov
sbb
xchg
inc
mov
sbb
xor
sti
aad
mov
mov
mov
stos
xor
mov
and
cmp
add
sub
out
jae
mov
push
mov
inc
aas
iretw
popf
pop
std
out
xchg
pop
mov
pusha
push
dec
cli
push
mov
inc
stos
push
lock
outsl
jl
stc
push
xor
lret
popa
push
push
int
scas
cmp
clc
in
clc
pop
xor
cmp
add
xor
xchg
dec
icebp
mov
xor
or
cmp
dec
ret
outsl
sahf
std
rclb
movsl
xchg
xchg
mov
inc
dec
popf
xchg
out
fcoml
mov
sbbb
sub
add
jb
jg
inc
jne
jp
je
popf
ficoml
popa
cmp
inc
das
aad
rcrl
mov
mov
orb
and
and
pusha
xchg
pushf
sahf
push
shrb
and
out
jge
pushf
mov
xchg
sbb
test
cs
jns
aas
outsl
icebp
mov
pop
lock
jp
aam
popfw
jp
out
jl
fldl
out
mov
xor
fs
sti
cli
inc
add
test
clc
arpl
mov
push
xchg
call
fstl
jns
xchg
ret
xchg
pop
inc
xchg
push
leave
es
adcb
dec
jns
inc
jecxz
stos
or
fwait
mov
xchg
push
fists
scas
mull
mov
insl
or
add
lret
push
inc
jmp
lret
xchg
or
push
mov
pop
cmp
out
rcrl
aaa
icebp
dec
push
fistpl
and
inc
ret
nop
ds
dec
xchg
pop
adc
mov
or
push
mov
hlt
add
adc
iret
sarl
push
xchg
jae
mov
ds
das
push
es
inc
fwait
xor
fmuls
out
push
mov
aam
xor
dec
push
push
sti
loop
pop
sub
ljmp
xchg
pushf
or
pop
ret
jno
sub
scas
jne
imul
adc
aas
xor
aas
fdivrl
cmpsl
pop
call
xchg
xchg
sbb
shrb
pop
bnd
daa
or
push
cmp
dec
arpl
scas
cmc
out
jae
repnz
sbbb
fcmovu
sub
aas
cld
jge
cli
sub
movsb
xor
cmpsl
mov
mov
fisttpl
loope
cmp
les
test
sbb
insb
mov
xchg
les
scas
and
sub
icebp
adc
jg,pt
or
inc
out
inc
inc
jl
fisubl
shll
pop
scas
out
sub
cld
stos
int3
cs
inc
in
loop
jl
or
cmpsb
daa
fcomip
lret
inc
push
add
jbe
jns
xor
incl
jb
or
pop
adc
fs
mov
or
in
scas
mov
mov
daa
popf
ja
adc
pop
sti
cmp
xchg
jne
popf
cmp
and
in
and
xchg
cmpsl
pop
lret
jmp
mov
ja
push
mov
cmc
leave
push
ljmp
leave
cmp
stos
decb
sbb
mov
mov
xchg
dec
inc
mov
fstps
fldl
js
mov
inc
pop
jne
int3
dec
mov
xlat
pop
repnz
jg
push
out
pop
cmc
xchg
pusha
popa
popa
push
popa
aas
jae
lret
sbb
xchg
es
jmp
pop
add
mov
adc
mov
pop
cmc
outsb
mov
orl
sarl
sti
test
fldenv
dec
sbb
xchg
scas
sub
or
pushf
mov
xchg
out
inc
inc
mov
test
stos
stos
push
outsb
imul
into
add
mov
icebp
popf
sti
sti
jb
stos
test
or
fdivs
call
and
xlat
and
sub
pop
inc
shrb
or
fisubrl
fidivs
inc
or
stc
addr16
es
and
jo
sti
addr16
sbb
jmp
in
mov
cwtl
daa
popa
jg
dec
hlt
xor
in
push
in
mov
imul
es
and
loopne
insb
test
pop
or
out
aaa
subb
xchg
pop
mov
sbb
jnp
xchg
loopne,pt
sbb
add
das
inc
sub
inc
mov
stc
ret
lods
sbb
xchg
or
or
sub
add
sub
mov
jb
push
dec
pop
addr16
add
ljmp
push
inc
add
xchg
and
push
jg
pop
jmp
dec
insl
inc
and
mov
xor
mov
sbb
lahf
stos
jo
adc
add
sbb
mov
rcrb
adc
sar
jb
fwait
leave
inc
dec
rcll
cs
test
mov
mov
add
sbb
adc
mov
dec
sbb
out
mov
sub
inc
mov
push
out
out
shrl
pop
push
test
mov
lods
or
int
pop
test
push
ret
mov
stc
dec
or
cwtl
push
xlat
or
scas
adc
pop
test
in
xchg
int3
out
mov
jbe
xchg
jl
dec
mov
repnz
icebp
fsubs
mov
and
data16
inc
fnsave
sub
cmc
and
test
sub
sbb
nop
ss
push
sbb
fwait
gs
roll
mov
or
sbb
pop
xor
add
ret
mov
mov
pop
jns
iret
subb
xor
rolb
gs
jg
movsl
dec
pop
bound
in
mov
xchg
repnz
xchg
fisubrs
out
inc
pop
mov
sub
je
aaa
push
xchg
lock
insl
inc
mov
sub
jecxz
sbb
call
in
mov
lret
fs
mov
and
jnp
leave
jg
lahf
clc
mov
in
sub
bound
sbb
sti
adc
in
inc
adc
data16
ret
mov
imul
decl
imul
and
addr16
cld
aad
and
ret
addb
adc
icebp
lods
daa
lcall
xchg
sti
push
std
adc
mov
ds
aas
adc
pop
ficomps
sub
xchg
out
out
mov
xor
xchg
dec
imul
into
repnz
ss
hlt
jne
in
mov
push
push
out
shlb
lret
xchg
cmp
inc
jmp
js
xchg
ret
icebp
dec
ret
jp
ja
push
jecxz
in
lahf
andb
fbstp
mov
in
push
xor
mov
dec
lods
pop
push
xlat
mov
sbb
outsb
in
jo
dec
add
push
shrw
mov
mov
lea
roll
dec
lret
popa
and
inc
xchg
and
iret
push
add
mov
xor
ret
js
sub
mov
aam
outsb
jns
lahf
inc
imul
negl
fcmovne
push
cs
addl
orb
sbb
push
aas
mov
fcomps
mov
sbb
mov
jno
and
push
aas
out
mov
jecxz
add
in
js
jnp
addr16
inc
fs
xchg
test
xchg
ss
js
adc
push
ds
cmpsb
ja
cmp
mov
pop
sbb
xor
and
imul
out
mov
cmp
out
lock
aas
and
imul
mov
xchg
inc
pop
mov
mov
dec
dec
fists
add
mov
shrl
mov
loope
push
sti
mov
lea
push
mov
andl
rcll
repnz
or
mov
scas
sbbl
insb
jl
aas
mov
lahf
in
jb
cmp
test
sahf
fisttpll
jp
and
stos
pop
int3
mov
sbb
mov
sub
ja
jno
inc
mov
xor
add
xchg
fadds
cld
gs
loope
cli
or
loope
lcall
sbb
and
lods
mov
mov
popa
cmpsl
mov
cmc
rclb
pop
push
pop
rcrb
and
adc
bound
inc
gs
xor
dec
imul
mov
cmpsl
jl
xchg
imul
mov
hlt
icebp
push
loope
push
decl
cmp
dec
fcos
jo
push
sub
inc
imul
xchg
out
inc
pop
fdivrs
sub
xchg
ds
pop
sbb
sbb
scas
nop
icebp
cmc
movsl
repnz
cmp
movsl
popf
cmpsb
xlat
jg
pop
jle
adc
mov
outsl
cmp
push
jp
xchg
ret
fsubp
dec
fcoms
out
or
sub
lds
aaa
aaa
cli
cli
popl
rcr
es
xlat
and
stos
jmp
fimull
and
and
addr16
cmp
imulb
icebp
daa
sbb
pop
and
push
jns
movsb
sahf
outsl
divb
arpl
dec
orl
and
mov
or
push
popa
pusha
pop
ret
loope
sub
mov
lret
imul
jo
sub
ljmp
scas
imul
jecxz
adc
dec
adc
xor
cwtl
mov
mov
or
or
fldt
sbb
stos
pushf
sti
ret
adc
cmp
aas
pcmpgtd
jnp
inc
aad
xor
addr16
cmp
test
cld
mov
insb
aad
or
push
subb
paddsw
mov
pop
xor
cld
data16
cmpsl
xor
popa
mov
and
jl
fadd
and
int
mov
add
sub
movsl
int3
imul
sub
jno
pop
lock
mov
out
lods
mov
gs
ljmp
int
fcmovne
ficoml
jge
jns
sbb
xchg
mov
pop
enter
loope
sbb
xchg
out
jge
add
xchg
leave
aad
sbb
shrl
popf
lcall
jecxz
int
jp
adc
enter
ss
outsl
fdivrl
sub
enter
insl
cli
xor
adc
dec
movsl
sti
lea
ds
xor
cmpsl
inc
repz
sti
cwtl
popa
mov
sub
pop
dec
pop
xchg
add
inc
jge
shll
mov
xchg
ret
xchg
dec
cld
pop
aaa
add
mov
ja
rep
sahf
ds
lahf
inc
sahf
mov
push
or
push
pop
inc
mov
clc
mov
sbb
lods
aaa
icebp
in
jle
loop
cmp
adc
push
arpl
scas
add
mov
mov
xor
cwtl
mov
lret
push
lods
fmuls
cmpsb
lea
jne
push
push
sbb
jmp
shlb
fisttpl
fcom
adcb
xor
arpl
xorb
pop
lahf
daa
mov
iret
clc
lret
shll
clc
int
add
insb
or
xchg
cmp
int
add
mov
and
test
daa
mov
mov
subl
pop
ror
cli
push
iret
out
sbb
xchg
idivb
mov
jle
outsb
push
pop
push
dec
jbe
cs
push
inc
push
mov
cmpsb
out
xchg
fiadds
scas
sahf
mov
jle
outsb
push
pop
push
dec
jbe
cs
push
inc
push
mov
cmpsb
out
xchg
fiadds
scas
lahf
mov
jle
outsl
push
pop
push
dec
jbe
cs
push
inc
push
mov
cmpsl
out
xchg
fiadds
cs
push
jno
andl
cmp
mov
shrl
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
sbb
xorl
addr16
push
movsl
mov
call
add
push
add
pop
add
push
add
mov
pop
add
add
add
jo
sub
add
or
cmp
add
add
pop
add
push
insb
add
push
add
add
add
add
add
add
push
add
add
add
add
add
imul
mov
test
add
nop
add
add
faddl
stos
add
add
mov
mov
pop
add
add
add
add
add
daa
add
add
mov
add
add
add
add
add
add
add
add
add
roll
add
add
add
clc
add
add
add
add
add
add
add
add
enter
mov
dec
add
add
and
and
in
daa
add
add
add
add
add
pop
add
add
add
add
add
add
cltd
add
cmpsl
add
add
lods
add
add
movb
add
add
add
add
add
add
add
add
bound
mov
add
add
xchg
sbb
dec
add
int
mov
add
add
add
and
dec
add
xchg
cmc
add
add
add
pop
add
add
add
add
add
add
add
enter
arpl
addl
mov
insl
add
mov
sbb
push
add
add
add
add
add
pusha
add
imul
add
add
add
add
add
add
add
add
add
add
add
add
enter
and
add
pop
add
add
rolb
in
add
pusha
add
add
or
repz
add
add
add
add
add
nop
add
mov
add
roll
dec
add
rolb
mov
and
cltd
add
add
sbb
repz
add
add
add
add
cmpsl
add
add
push
add
add
popf
add
add
add
add
sub
pop
add
roll
push
add
add
add
add
add
add
add
add
add
add
bound
sub
loop
sub
add
add
add
add
lret
add
add
cmp
add
outsb
add
add
add
dec
add
add
bound
dec
add
addl
jo
jo
cmp
bound
or
pop
add
rolb
add
cmp
add
loopne
mov
mov
pop
add
add
sub
loop
repz
add
add
add
loop
dec
add
add
add
add
add
add
js
mov
push
stos
add
push
add
jl
pop
add
add
add
add
add
add
xchg
add
inc
add
cmp
bound
push
add
push
add
add
add
add
add
add
add
add
add
add
dec
add
push
add
add
add
addr16
add
add
insb
add
add
cmpsl
add
add
add
pop
mov
arpl
jecxz
pushf
mov
sbb
mov
jp
pop
out
es
fwait
fidivl
sbb
adc
sub
xor
add
mov
inc
xchg
mov
and
and
mov
push
sub
idivb
jmp
scas
jb
cmc
mov
pop
pop
dec
pop
js
and
imul
scas
dec
movl
cmp
inc
sti
lahf
repnz
aaa
jp
mov
cwtl
fldl
mov
xchg
cmpsb
test
sub
cmp
popa
aad
push
popa
jo
xchg
adc
adc
adc
mov
xor
sub
mov
or
xlat
ss
inc
add
dec
inc
addr16
mov
sub
call
fisubl
lods
fisubl
push
fsub
pop
popf
lahf
jne
inc
push
mov
pusha
int
xchg
add
jl
xchg
and
int
xor
stos
out
push
rcrb
notb
cmpsl
data16
sbb
sub
or
rol
sub
std
cmp
adc
pop
sub
cmpb
xchg
mov
add
fmul
fbstp
mov
push
push
out
lods
xchg
pop
sbb
pusha
cmp
pop
dec
pop
incl
add
dec
out
push
xchg
jbe
das
mov
dec
jl
ror
cwtl
and
dec
dec
stos
xchg
out
test
mov
sub
push
xchg
and
nop
or
fwait
adc
pop
inc
aam
or
in
or
fmull
mov
int
cmp
xchg
imul
andl
jns
imul
adc
adc
and
mov
mov
mov
repz
xor
ja
jg
adc
sysret
lret
adc
aad
cld
scas
lea
xor
sub
dec
pop
outsb
mov
stos
shrl
jbe
push
int
sbb
mov
repz
cmp
mov
mov
cmpsb
jp
outsb
dec
cmc
pusha
scas
xor
pop
lods
lahf
jnp
lock
sahf
insb
addr16
cmpl
orl
enter
clc
mov
neg
stos
jle
arpl
lods
imul
fs
sub
fildll
sub
and
add
clc
inc
mov
mov
jl
cmp
les
xor
popa
inc
aam
imul
js
mov
daa
inc
push
mov
and
es
push
sti
enter
sbb
lcall
out
fdivs
ret
jge
sbb
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
