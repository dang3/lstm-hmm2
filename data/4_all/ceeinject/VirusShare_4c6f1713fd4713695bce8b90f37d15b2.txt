call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
mov
mov
scas
sti
incb
lret
xor
and
lar
jb
bound
mov
mov
scas
repnz
iret
sar
ret
pop
and
adc
add
jb
arpl
jg
outsl
mov
mov
fptan
out
loop
shl
ret
pop
add
pop
addr16
jb
adc
adc
ret
into
xchg
in
jmp
std
shlb
cs
xchg
or
sbb
incl
add
dec
insl
lret
jg
repnz
add
adc
sar
and
hlt
adc
dec
test
pop
cmpsl
xor
sbb
popf
mov
push
aaa
pop
add
xchg
jae
jmp
test
lahf
test
lcall
lcall
and
ret
leave
adc
dec
daa
jb
inc
jg
or
ds
adc
cmp
pop
lahf
fisttps
pop
lods
sub
loop
pusha
pop
jo
lret
fsts
shr
jne
addr16
loop
push
or
adc
scas
repnz
iret
sar
ret
pop
and
jb
bound
xlat
lahf
shl
rol
ret
xchg
jp
mov
inc
pop
inc
jg
lcall
aaa
or
push
leave
icebp
int3
ret
ret
xchg
lea
faddl
inc
jp
insl
add
test
pop
dec
cmp
sub
shl
ret
mov
loop
sar
ret
pop
and
adc
add
jb
bound
jg
outsl
mov
mov
scas
repnz
iret
sar
ret
pop
and
adc
add
jb
bound
jg
outsl
mov
ret
ret
and
pop
rolb
scas
outsl
mov
outsb
daa
repz
repz
jg
sahf
inc
jo
mov
out
in
loope
movsb
or
lds
push
mov
lds
xchg
les
xchg
icebp
mov
gs
add
jl
lods
jne
sbb
inc
xor
jnp
testl
xchg
jns
pop
xor
in
enter
jnp
in
loopne
imul
mov
adc
xchg
mov
jl
scas
inc
mov
sub
or
loope
cli
pop
jno
and
dec
cmpsl
and
pop
xor
lcall
test
fsubrs
mov
enter
push
mov
repz
lods
nop
ljmp
lret
xchg
xchg
out
sbb
xchg
lock
ret
into
fisubs
movl
bound
sti
mov
pop
mov
mulb
mov
pop
in
test
fmuls
jns
pop
cmp
pop
push
shlb
jae
cld
arpl
test
push
std
cmpsl
imul
jb
sbb
dec
test
orb
scas
scas
insl
cmpsl
jmp
jnp
and
push
cmpsb
mov
push
mov
mov
jo
mov
gs
jg
fiadds
sbb
bound
mov
cli
fsubr
test
xchg
fs
sar
es
lret
outsl
push
lahf
repz
sbb
repz
pop
fisubl
stos
adcl
push
push
inc
outsb
mov
sub
scas
lret
pushl
sbb
push
cs
and
inc
test
or
in
lea
int
mov
xor
inc
sub
and
sbb
cltd
push
xchg
pop
lds
or
add
add
xchg
outsb
mov
in
fcmovne
addb
mov
add
imul
ds
fistl
mov
repnz
sbb
push
pushw
fidivs
sbb
xorb
popf
mov
in
cmp
add
jl
pop
ret
mov
dec
mov
mov
or
pop
daa
mov
insb
push
cmc
pop
mov
pop
in
aad
testb
aaa
ds
cmp
mov
adc
pop
ret
jns
mov
iret
loope
lret
pushf
and
pop
std
lcall
xchg
pop
adc
test
pop
jne
add
sbb
mov
sbb
jns
push
loope
add
adc
fs
popa
test
aaa
dec
movsl
mov
xor
lods
dec
mov
jge
cmp
pop
sub
lds
fwait
and
ficoml
andb
fxch
imul
pusha
addb
adc
mov
addb
xor
dec
inc
and
popf
lods
arpl
or
arpl
movsl
mov
fst
scas
mov
out
in
mov
adc
fmuls
sub
call
decb
cmp
stos
outsl
test
das
daa
and
ja
inc
idivl
stos
mov
jmp
divl
lret
fwait
aam
stos
jnp
and
lds
xlat
out
xchg
dec
cwtl
add
pop
lea
jmp
push
stc
xor
cmp
icebp
aaa
cmpsb
scas
sub
je
addr16
dec
insl
stos
roll
mov
movsb
add
dec
mov
ds
or
mov
pop
scas
xchg
dec
jg
and
sub
test
sbb
add
mov
mov
xor
push
inc
jl
adc
or
lea
dec
incb
pop
testb
stos
roll
hlt
imul
lahf
mov
cmp
inc
nop
mov
loop
mov
sub
mov
test
mov
xchg
in
repz
adc
outsl
cmp
loope
push
cmc
data16
insb
sub
movsb
xchg
mov
test
outsb
cli
xchg
bound
xor
push
sbb
cld
test
jp
in
cmpb
xlat
sti
fsubr
or
xor
pushf
insl
or
pushf
and
and
add
push
sahf
rorb
mov
lds
lea
inc
fistpll
dec
jle
adc
sbb
in
xchg
cltd
dec
movsl
mov
movsb
lcall
jecxz
sub
add
xchg
dec
mov
mov
leave
jl
fcmovne
push
xor
mov
mov
stc
jns
repz
cmp
jb
fwait
push
pop
test
loop
sahf
mov
mov
aaa
sub
sarb
imul
mov
mov
das
repnz
arpl
push
sub
imul
mov
cmp
adc
loopne
push
in
xchg
cmpb
cmp
fs
out
ds
add
inc
and
into
ljmp
es
lahf
jo
icebp
mov
mov
push
xor
add
aad
add
aad
adc
rolb
test
mov
stos
push
ja
fildl
fisubl
xor
and
xlat
sarb
inc
dec
enter
movsl
bnd
mov
inc
int
fiaddl
sti
push
dec
fwait
aaa
test
mov
adc
je
ficomps
pop
cli
lock
adc
add
and
mov
das
rclb
jns
outsl
and
sub
into
addr16
in
dec
push
jnp
stos
leave
fisubs
and
cmp
pusha
jmp
mov
fldt
mov
sarl
fs
sub
dec
cmp
daa
ja
inc
push
mov
push
call
mull
and
jecxz
lahf
mov
push
pop
sub
test
push
jle
mov
add
fcomp
sub
xchg
outsb
loop
push
outsl
cs
ds
fisubl
push
push
lret
scas
je
mov
xchg
mov
aam
push
popf
cmpl
push
cli
ret
mov
and
xchg
aam
movsb
into
ror
ffree
mov
push
cmpsb
sub
insl
add
mov
jae
push
push
sbb
int3
div
jae
iret
jg
ds
mov
or
or
adc
arpl
and
sub
add
shr
mov
in
jl
scas
inc
add
jb
mov
out
rclb
insl
sti
cli
cs
pop
and
lret
cld
roll
sub
inc
xchg
je
lds
adcb
and
call
xchg
in
jle
lea
les
daa
fwait
ret
les
mov
cmp
inc
sti
jle
fsub
cmp
int3
enter
js
lret
mov
out
cmp
mov
fidivrl
dec
arpl
mov
lret
ror
ret
nop
pop
outsl
aas
cmp
cmp
xor
dec
out
in
sbb
jl
mov
push
js
pop
int3
mov
movsb
call
call
into
mov
dec
xchg
stc
jo
sbb
mov
outsl
into
sbb
or
ret
or
or
loopne
mov
out
mov
fsincos
jg
cmpsl
fwait
popa
xor
test
test
aad
mov
in
test
add
cld
nop
repnz
into
pmaddwd
hlt
loopne
sbb
and
imul
outsl
and
pop
cli
jle
cli
das
push
push
add
les
mov
jle
pusha
jbe
sub
jg
jmp
pusha
sub
jmp
insl
jbe
fdivs
gs
cmpsb
mov
lods
lret
loop
andl
sarb
outsl
repz
inc
movl
jno
and
cmpsb
inc
pop
xor
movsb
in
and
int3
jns
jg
daa
cmp
sbb
aas
mov
sarb
xor
and
int
stc
shlb
lods
mov
adc
cmp
fucomp
jecxz
movsl
imul
sub
add
xor
dec
push
out
add
mov
push
dec
stos
push
pop
stos
imulb
and
sbb
jmp
add
mov
xlat
adc
mov
enter
xchg
xor
and
pop
stos
xor
icebp
mov
dec
or
pop
cmpb
push
jae
and
sbb
scas
sub
cmp
pop
mov
int3
pop
ja,pn
jmp
mov
lcall
push
inc
in
pop
push
xor
xchg
out
adc
mov
out
xor
jbe
push
cmp
mov
mov
inc
sti
loop
mov
cmc
or
outsb
frstor
fmull
pop
cmp
mov
mov
mov
sub
mov
bound
data16
fildll
aaa
dec
rorl
mov
or
jne
pushf
imul
dec
pop
in
out
adc
cmp
cltd
std
faddl
push
mov
lods
stos
int
xor
insb
imul
lahf
and
ror
push
sarl
clc
inc
sbb
pop
int3
cwtl
mov
pop
orl
test
and
cmc
jecxz
loop
pushf
or
sahf
stc
cmp
ret
fstl
subb
int
inc
xlat
xchg
je
std
pop
mov
adc
fninit
pushf
enter
mov
mul
fisttpll
or
sti
and
mov
cmp
pop
mov
mov
pop
sbb
lea
jmp
jle
sub
sub
in
inc
sbb
insb
mov
add
xor
push
mov
sub
rolb
daa
xor
lcall
or
and
repnz
push
inc
cli
sub
push
loop
add
call
mov
shlb
std
xchg
jle
xor
sbb
insb
roll
jmp
adc
dec
mov
lret
xor
mov
dec
icebp
sbbl
ss
or
mov
cmp
fcmovb
push
mov
jecxz
xor
out
push
mov
aaa
das
test
lock
sbb
aas
inc
mov
jne
mul
iret
stc
insl
mov
pop
andb
int3
adc
dec
in
fs
mov
push
ret
xchg
je
or
and
xchg
ss
push
pop
adc
mov
sbb
es
imul
sub
ss
sbb
std
mov
adc
call
xchg
add
push
lock
inc
add
sbb
lods
orl
jl
fs
clc
add
sbb
icebp
aaa
mov
push
sbb
jmp
or
imulb
mov
add
push
add
pop
imul
inc
sbb
inc
xor
xchg
fsincos
cmpsb
aad
sub
lock
lods
int3
sub
add
cmp
mov
pop
pusha
jmp
or
cmc
imul
mov
in
fidivrs
repz
xchg
nop
and
enter
push
inc
pushf
imul
cmp
aaa
mov
pop
std
jns
pop
mov
pushf
cld
or
sub
out
xchg
pop
jb
movsl
inc
repz
stos
mov
push
sub
cmpsb
scas
addl
pop
insb
push
rclb
int3
ret
mov
lock
xchg
inc
push
and
mov
mov
cld
xchg
mov
dec
mov
pop
cmpsb
cmpb
xor
stc
aaa
xor
push
into
aam
fisttps
imul
iret
pop
mov
push
mov
jl
pop
mov
push
jl
rorl
jmp
sahf
dec
jmp
jge
and
fidivl
xchg
iret
pop
push
dec
scas
loope
xor
sub
bswap
mov
jle
ja
mov
xchg
rcll
hlt
mov
hlt
test
mov
fiaddl
popf
sti
test
jo
cwtl
loope
sub
lcall
push
dec
adc
in
subb
mov
cmp
lods
lock
mov
push
xlat
mov
jle
mov
cli
dec
xor
out
push
nop
aam
inc
inc
aad
cmpsl
and
add
out
cmp
repz
jge
cwtl
inc
in
or
add
xor
xchg
mov
imul
aad
nop
jns
dec
pop
pusha
mov
xchg
ret
int
stc
out
mov
insl
rclb
pop
cmpl
mov
add
mov
xor
inc
push
add
mov
jbe
or
mov
jns
or
int
pushf
insb
or
imul
rorb
xor
lods
and
jle
aad
jge
hlt
movsl
jne
pmaxsw
xor
mov
inc
addl
stc
jl
sbb
test
push
mov
cld
sub
std
jns
mov
popa
xor
daa
adc
ljmp
xchg
fists
jbe
adc
and
or
in
cwtl
mov
stc
aaa
inc
push
lret
xor
out
adc
mov
xchg
js
stos
dec
dec
std
popf
xchg
sbb
adc
cltd
sahf
cmp
aad
jne
inc
mov
call
lods
jno
ljmp
jl
movsl
xchg
xchg
stos
adc
fs
dec
push
mov
mov
insb
jnp
xor
or
shlb
cli
xor
xchg
dec
or
shll
iret
repz
push
jnp
int
into
in
xor
and
dec
adc
sahf
mov
adc
cmc
mov
leave
out
clc
add
test
and
hlt
dec
jge
dec
test
dec
mov
xor
fcmovnu
mov
cld
incl
fisttpll
repnz
mov
pop
and
ss
xchg
cltd
mov
cwtl
lahf
xor
cmp
and
mov
insl
jae
imul
jp
or
imul
and
push
lcall
lods
inc
pusha
lret
inc
popf
aam
sub
mov
push
repnz
out
pop
add
and
push
mov
loopne
fiadds
int
jecxz
lods
in
pop
dec
dec
out
mov
out
push
sub
mov
jmp
movb
pop
cs
jmp
mov
or
jo
dec
out
loope
out
or
mov
std
or
push
ret
add
xchg
in
loopne
clc
fnstenv
xlat
jbe
pop
sti
in
push
sti
rcl
les
les
xor
hlt
dec
sbb
cmpsl
mov
out
xchg
mov
inc
stos
push
lahf
pushf
mov
bound
pop
dec
push
aaa
loope
fs
outsb
insl
jns
dec
xor
jecxz
jmp
mov
lds
inc
repnz
fiaddl
inc
cmp
and
adc
enter
mov
pop
cld
or
pop
stc
xor
dec
add
mov
adc
pop
pop
cmp
inc
and
rol
pop
and
out
xor
repz
ret
in
stos
adc
or
aam
jbe
fcoms
out
leave
adc
jnp
movsl
xchg
lea
les
aas
in
push
adcl
popa
ljmp
dec
or
push
push
aam
shrl
mov
test
les
div
ljmp
arpl
push
insb
jo
cmp
iret
test
or
mov
aam
jnp
lds
xor
rolb
mov
jb
les
scas
popf
inc
sub
call
repnz
sbb
and
dec
ss
sti
lea
fstpt
and
inc
inc
mov
test
jle
xor
push
es
loop
fbld
mov
lods
or
add
ja
rcll
insb
inc
sbb
push
pop
jnp
pop
sub
aam
push
add
setp
fisubl
push
cltd
inc
cmp
in
test
imul
popa
sahf
jae
push
or
mov
and
jmp
cmp
das
pop
mov
lea
neg
dec
add
sub
fwait
adc
cmp
xchg
and
push
xchg
adc
mov
mov
sub
push
dec
fs
addl
sbb
xchg
mov
and
adc
push
jo
jbe
nop
sar
out
xchg
stos
ror
sbb
sarl
daa
nop
inc
outsb
pop
dec
test
pop
mov
or
imul
adc
mov
ss
xchg
fnstcw
popa
std
mov
repz
or
dec
scas
je
mov
daa
pop
lcall
and
cmp
dec
ds
inc
xchg
in
cmp
aaa
lcall
stos
ret
fistl
andl
dec
rcr
cmp
and
les
xor
clc
dec
push
mov
stc
jbe
jb,pt
xchg
int
out
iret
rolb
dec
data16
lea
pop
push
inc
cmpsl
scas
pusha
call
dec
pop
imul
xor
arpl
test
cvtps2pi
mov
cld
in
in
cmc
mov
aad
insb
dec
fnstsw
in
cmpsl
test
mov
leave
out
imulb
mov
loop
and
xchg
or
rorl
inc
push
or
xor
fwait
orb
xor
or
add
fs
push
cwtl
jle
stc
je
int3
pop
pop
addr16
push
pop
pop
pop
test
sbb
pop
sub
and
jecxz
ds
and
mov
fisubl
cs
lahf
mov
cmc
prefetcht1
lds
mov
add
mov
adc
aad
pop
push
inc
xchg
mov
rcr
jp
mov
jns
fwait
push
rcll
jg
mov
cltd
cs
js
mov
mov
and
adc
scas
ljmp
sub
bound
cmp
push
mov
jmp
mov
jle
ja
and
addb
ds
lahf
stos
popf
xchg
pop
jmp
call
test
in
push
sub
call
shll
fisttpll
pop
jge
testb
cmpsb
cli
cmp
out
popa
push
xor
mov
stos
inc
and
in
lea
rol
aam
mov
xchg
out
insl
jg
push
mov
sahf
popl
icebp
cld
and
mov
inc
jg
inc
imul
movsl
movsl
lahf
lea
ret
mov
test
jmp
push
mov
jecxz
loop
lret
dec
rcll
subl
push
stos
inc
pushf
fdivrl
shlb
push
mov
sbb
cld
mov
inc
xchg
adc
sub
arpl
aam
jle
les
mov
sahf
aad
push
call
inc
mov
jno
in
jbe
test
jbe
out
dec
sbb
and
sub
rcr
mov
and
out
jbe
es
sbb
mov
lahf
mov
dec
and
push
sub
fs
rcl
scas
cwtl
arpl
add
pushf
iret
daa
pop
rolb
stos
and
jp
lret
mov
xor
out
daa
push
push
cmp
and
pop
dec
mov
sub
gs
inc
aaa
ja
sbb
mov
adc
cmpsb
je
jnp
fmuls
xchg
rcll
add
and
shll
ja
shlb
fimuls
and
pushl
and
and
push
or
fimull
mov
cmp
or
mov
ja
mov
pop
push
repnz
xor
mov
loope
cmp
test
mov
xlat
lods
sub
scas
xor
sub
imul
imul
ja,pn
sarl
mov
push
mov
push
add
cmp
les
in
push
mov
lret
inc
push
imul
stos
ret
cmc
neg
fidivl
dec
repnz
jbe
dec
xchg
out
add
mov
xchg
addl
push
test
sbb
jnp
push
jbe
jns
mov
popf
ficomps
mov
xor
inc
xchg
imulb
mov
mov
adc
push
mov
sbb
loopne
dec
mov
les
add
inc
fdivrs
push
call
jae
sub
bound
shrl
jmp
and
xlat
mov
mov
lds
xchg
jl
dec
mov
and
jmp
stc
sub
mov
and
xchg
lods
mov
fistl
orw
repz
sub
dec
es
clc
dec
call
test
cmpsl
outsb
shrb
enter
adc
insl
sbb
mov
std
sub
aas
pop
pop
jmp
daa
lret
mov
xlat
mov
stos
add
insb
ds
daa
mov
fs
pusha
lahf
jp
mov
mov
ds
add
scas
das
sub
jnp
test
int3
jae
jp
mov
mov
or
repnz
jae
adc
xlat
rcll
divl
xchg
insb
inc
pusha
cmpsl
or
adc
stc
imul
and
lods
and
lcall
push
fsts
bound
loope
inc
mov
roll
add
adc
jle
pop
in
dec
imul
lret
xchg
jl
aad
pop
scas
adc
mov
xchg
fsubl
mov
mov
hlt
and
mov
and
mov
inc
imul
push
push
nop
xlat
push
xchg
inc
xchg
out
lret
rorb
idivb
stc
mov
sub
push
popf
or
pop
xchg
cmc
popa
sbb
xor
fsubl
mov
loop
sar
ret
pop
and
adc
add
jb
bound
jg
outsl
mov
mov
scas
repnz
iret
sar
ret
pop
and
adc
add
jb
bound
jg
outsl
mov
mov
stos
repnz
movsb
sar
ret
push
and
adc
add
jb
bound
jbe
mov
pop
sub
iret
push
jg
das
int
frstor
add
pop
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
xlat
and
lret
addr16
ja
mov
hlt
push
stos
pop
xlat
inc
out
imull
sbb
sub
push
lret
data16
ja
pop
fwait
pop
mov
mov
xlat
dec
xchg
imul
mov
inc
ret
jcxz
repnz
adcb
daa
mov
xlat
jno
push
xchg
imul
xchg
sub
fistl
sub
aaa
push
fsubl
aam
call
lock
lock
cmp
adc
ss
push
adc
jne
xor
mov
sub
jp
push
retw
dec
push
int
mov
xchg
cmp
push
or
push
lret
inc
sti
fildl
mov
aaa
push
xlat
or
mov
fwait
pop
xchg
addr16
hlt
mov
mov
sub
bound
out
mov
aaa
stos
scas
mov
imul
incl
mov
sti
repnz
mov
icebp
cmp
pop
xchg
outsb
jp
repz
xchg
jle
les
fsubl
ja
pop
fwait
pop
mov
mov
xlat
push
out
divl
add
dec
xor
cmp
inc
int
in
xlat
push
scas
xor
mov
xchg
add
jbe
pop
lret
inc
sbb
aas
out
call
dec
xchg
and
sub
imul
dec
xor
push
sahf
inc
notl
mov
mov
xlat
dec
out
imull
sbb
sub
push
lret
addr16
ja
pop
fwait
pop
mov
mov
xlat
dec
out
imull
sbb
sub
push
dec
ljmp
out
push
pop
ret
inc
ror
mov
fs
stos
xchg
and
dec
jbe
mov
inc
out
mov
or
mov
mov
addr16
cld
mov
mov
cwtl
pop
push
inc
fmull
addr16
rcrb
aaa
adc
dec
adc
cmpsb
pusha
push
inc
or
in
mov
adc
repnz
xor
out
xchg
xchg
mov
lret
push
scas
or
fnstcw
lea
pop
jns
arpl
jl
imul
pop
out
mov
out
adc
or
inc
imul
xor
inc
sub
sahf
enter
xorb
adc
cmp
push
push
and
clc
imul
cld
mov
adc
in
mov
dec
push
mov
push
repz
jmp
pop
mov
scas
adc
jl
in
lret
fsubrl
jge
xor
xor
scas
push
int3
popf
cmp
or
mov
imul
fnsave
or
std
fwait
mull
mov
fstpl
xchg
cmpsb
inc
pushf
jbe
aam
add
repnz
cmp
mov
sti
addl
and
fstp
fs
pop
xchg
fisttps
sbb
jns
or
sub
nop
jecxz
fsts
push
sbb
pop
add
fistps
jne
in
insb
adc
bound
fbld
iret
jae
inc
outsb
dec
clc
repnz
aam
xor
pop
clc
jo
in
pop
mov
or
sbb
int
sub
xor
fstpl
test
mov
sbb
sbb
cmp
cmpsb
clc
inc
test
aas
jno
ror
in
adcl
sub
push
in
dec
push
sub
lds
data16
jo
pop
cs
xchg
pop
xor
lock
cs
repnz
sbbl
inc
in
xor
movl
and
add
lods
pop
test
jnp
in
cmpsl
ljmp
and
inc
mov
push
daa
and
notl
das
lock
daa
pop
pop
jp
insl
or
mov
and
sbb
leave
inc
xchg
or
cs
lock
lret
inc
fdivs
jecxz
xor
mov
push
shll
je
ret
insb
adc
push
arpl
dec
mov
lods
or
pop
lretw
notl
sub
fsubr
sbbl
inc
inc
push
xor
jbe
js
pop
sbb
add
arpl
dec
ljmp
and
and
mov
mov
icebp
lea
jg
lret
out
test
adc
clc
push
aad
movsl
xchg
and
sbb
daa
sub
icebp
jp
and
pop
inc
sub
adc
inc
inc
mov
shlb
clc
add
fcompl
ds
sub
xchg
cmp
stos
jnp
mov
rol
cmp
popa
mov
xchg
or
movsl
cmp
inc
std
jbe
fidivrs
jnp
add
test
pop
add
lcall
xchg
lcall
push
push
cmp
mov
into
xchg
fucom
addr16
mov
cmp
jmp
push
loop
sub
test
ljmp
sub
xor
sbb
loop
cmp
aad
insl
call
lcall
sbb
sets
loopne
out
das
enter
out
jmp
push
fistps
or
and
mov
mov
fwait
xchg
mov
hlt
or
pop
add
mov
add
in
xor
sub
mov
mov
inc
pminub
dec
js
sub
jg
idiv
test
mov
out
jne
sbb
test
push
xchg
cmp
mov
imul
into
orb
sub
lret
dec
adc
inc
add
push
gs
in
stos
int
push
push
ja
inc
loop
out
js
bound
xor
jns
arpl
rcrb
test
cmp
and
jb
call
inc
pusha
sub
gs
and
push
inc
movsl
iret
or
aaa
jl
mov
sbb
rorl
sub
icebp
in
scas
stc
dec
outsl
push
fsub
movsb
mov
dec
mov
sbb
push
sar
les
and
add
cmp
pushf
sbb
stc
cs
cmc
insl
les
cmp
jbe
cmp
fs
lret
push
jmp
ds
fwait
lret
push
lods
inc
sbb
push
inc
outsb
and
and
add
pushf
mov
jbe
or
adc
jecxz
lret
xchg
jmp
popa
movsb
push
mov
cli
adc
pop
ret
rcrb
fs
sahf
xor
adc
push
and
sub
pop
and
push
sahf
fwait
stos
jmp
xor
faddl
addl
jb
inc
jp
pop
mov
mov
or
ds
sub
push
sbb
dec
mov
divb
inc
scas
sub
js
fldenv
int
and
int3
fisubs
xchg
and
shlb
add
jmp
in
mov
add
into
jns
xchg
xchg
jnp
movsb
and
or
rcl
es
fdivrl
fistpll
xor
lock
cmpl
in
movsl
ljmp
outsb
imul
xchg
out
cmp
jb
fstl
stc
jne
cmp
int
lods
psubusb
popf
outsb
xlat
ds
push
pop
inc
in
nop
jmp
push
jns
inc
xlat
inc
mov
vmwrite
lcall
imul
insl
pop
add
std
in
dec
jecxz
rcrb
dec
aas
into
inc
inc
or
lret
outsl
mov
mov
lret
sub
push
pop
and
jnp
lods
unpcklps
xor
out
jae
inc
ret
jb
mov
iret
lret
outsl
inc
pop
sub
lods
cmpsl
mov
mov
adc
pop
clc
dec
test
mov
sbb
testl
scas
call
lods
mov
sub
jb
daa
push
mov
mov
cwtl
roll
mov
stos
adc
orl
xor
lock
sub
outsl
subl
out
push
or
std
fwait
ljmp
arpl
imulb
lods
jmp
inc
imul
and
sbb
xor
scas
add
icebp
loope
jl
das
lea
lock
movsw
sbb
mov
lret
loope
pusha
push
jno
lock
mov
cltd
in
aad
push
pop
pop
xorl
adc
xor
mov
pop
sub
shrl
lret
pop
pop
jbe
add
test
mov
fwait
sub
pop
lcall
fldcw
or
mov
pop
icebp
push
stos
xrelease
jno
test
mov
fnstenv
jecxz
xchg
xor
inc
cmp
inc
sbb
mov
dec
subl
je
inc
clc
repnz
mov
push
fucomp
orl
lahf
stos
pop
cmpsb
in
pop
mov
insl
jp
std
push
js
mov
rcrl
mov
pop
movsl
mov
incl
adc
jg
shrl
pop
dec
or
cmpsl
add
jmp
and
xchg
sti
sub
push
stc
mov
pop
and
xor
push
fistps
inc
jne
fs
loope
or
pop
add
rol
inc
cli
dec
adc
in
push
inc
xchg
test
loop
insb
mov
lock
dec
addr16
decb
add
sub
sahf
enter
adc
jnp
cmc
and
orb
mov
inc
add
pop
sar
iret
adc
adc
lods
xchg
leave
lret
sbb
invd
add
movsb
mov
push
jb
clc
sarl
jecxz
or
test
adc
mull
lea
rorl
sub
cmp
cld
test
in
mov
mov
push
outsb
dec
mov
cmp
ss
inc
mov
daa
sbbl
xor
sbb
mov
xor
ds
cmp
add
sub
and
xchg
fs
jb
or
imul
lods
ja
sub
fdivs
andb
iret
jmp
cmpb
loopne
jnp
and
cli
sbb
sbb
adc
mov
mov
dec
lock
mov
mov
xor
jns
pop
mov
pop
je
add
mov
push
int3
cmp
test
std
movsl
mov
dec
subl
pop
or
outsb
push
loop
js
ss
and
in
out
lods
lock
stos
rcr
adc
shll
dec
cmp
mov
jmp
pop
fidivl
inc
mov
cmpsb
mov
and
std
int3
or
mov
pop
push
jo
mov
loopne
je
mov
xchg
xchg
fwait
jb
jp
mov
cmp
sbb
icebp
mov
dec
mov
inc
fstpt
jmp
push
push
sbbl
or
lock
cwtl
cld
add
xchg
inc
fnstenv
lock
cmp
rorl
cmp
dec
inc
adc
jb
fisubrs
ljmp
cs
cmp
ja
mov
or
jo
lods
mov
or
pop
push
and
pop
inc
adc
jl
mov
test
fsub
sub
loopne
or
cmpsb
add
push
pop
mov
rcrl
mov
lock
rcll
xchg
enter
iret
test
push
lcall
xchg
cmp
xchg
test
jns
fstpl
jno
cmpsl
pop
les
shlb
int
js
sub
jmp
pop
xchg
push
cld
mull
insl
mov
sbbb
mov
pop
cmp
mov
insl
xchg
push
outsl
cmp
add
ds
dec
push
stc
xchg
cmpsl
pushf
icebp
out
cmp
push
or
sub
iret
ret
cmp
or
cmpsl
stos
push
hlt
cmc
inc
loopne
jno
mov
lods
add
movsb
arpl
scas
inc
sbb
inc
jecxz
cmc
mov
fimull
jge
add
in
call
pusha
jne
add
jo
lret
jo
sbb
aas
loope
out
cmp
xlat
pop
sbb
lret
jno
add
cltd
out
mov
jae
mov
adc
insl
or
inc
xor
mov
fcomps
out
pop
xchg
fstpl
shlb
stc
jecxz
xlat
shrb
sub
negb
or
in
mov
icebp
xchg
mov
imul
jo
lret
sbb
jg
push
mov
cmp
xor
repz
jmp
and
cmp
jb
push
mov
addr16
inc
movsb
lcall
mov
cmp
mov
adc
jne
jno
jl
adc
fisubrl
mov
inc
mov
adc
push
sub
fisubs
fldt
cmp
lret
lock
xor
push
test
ret
mov
insl
push
cmpsl
nop
mul
xchg
aad
repnz
fstpt
test
dec
dec
les
jmp
jns
lahf
aaa
push
mov
mov
pop
mov
pop
fldcw
or
dec
xchg
mov
imul
and
dec
movsl
pop
mov
cs
ljmp
and
and
repz
test
sub
dec
out
lock
sarb
pop
lock
pop
lahf
pop
inc
cmp
orl
xchg
sbb
dec
inc
lock
or
stos
mov
jecxz
xlat
sbb
dec
scas
or
hlt
jmp
mov
pop
push
enter
inc
movsl
push
clc
jnp
arpl
dec
jg
push
dec
outsl
xor
adc
test
sbb
es
out
scas
jns
es
fwait
rcll
rorl
add
leave
call
dec
pop
clc
int3
shlb
vphaddubq
and
push
test
mov
jbe
outsl
gs
mov
xchg
or
pop
pop
push
fiaddl
dec
push
jecxz
mov
mov
lea
out
daa
pop
fisubl
mov
jnp
in
cwtl
mov
push
xor
mov
fcomps
fs
mov
out
sbb
btc
mov
xchg
jns
xchg
pop
popf
xlat
stos
es
outsl
sbb
inc
outsb
fsubl
jno
aad
xor
test
loope
mov
scas
cmp
mov
leave
clc
pop
jmp
roll
adc
mov
mov
push
sti
adc
and
xchg
or
sub
xchg
jne
add
inc
sbb
outsl
rorl
jmp
cmp
and
scas
lret
clc
inc
aas
sbb
dec
pop
and
adc
sarb
inc
stos
in
xchg
in
stos
je
add
mov
test
and
ret
pop
dec
mov
adc
mov
xor
iret
cld
jmp
add
in
pop
mov
sub
xchg
push
xchg
test
push
add
and
or
mov
cmpsl
movsb
push
pop
pop
pcmpeqb
imul
loop
movsl
dec
ds
outsl
pop
adc
jno
shrl
push
mov
inc
cltd
out
divb
mov
cmp
in
inc
fidivrl
mov
nop
inc
mov
xor
cmc
and
or
lret
adc
in
jne
dec
mov
cmc
in
in
mov
mov
xor
loop
outsb
fwait
mov
shl
enter
out
cltd
cmp
xor
movsb
pop
in
inc
out
jecxz
outsl
jecxz
outsb
std
pop
daa
cmpsl
push
imul
xor
xchg
jmp
or
jmp
pop
pop
dec
repnz
push
push
clc
gs
rcrb
and
pusha
vsqrtss
push
and
mov
sbb
pop
out
nop
jle
jb
inc
jecxz
cmp
mov
into
xchg
dec
aad
test
in
inc
jb
test
pop
roll
sbb
cmpsl
jbe
xchg
sbb
fnstcw
mov
jle
adc
mov
ds
pushl
lds
out
aam
das
mov
sbb
mov
mov
xchg
in
fs
out
test
inc
jae
pop
push
popw
jne
daa
dec
push
aaa
mov
xchg
adc
or
les
mov
or
subl
fcoms
fbstp
push
pop
sti
and
inc
movsl
int3
mov
mov
orl
in
add
idivl
or
pop
inc
mov
add
push
dec
jmp
test
testb
add
push
mov
inc
pop
jno
outsb
inc
test
mov
sub
push
scas
notl
add
and
mov
xchg
movsl
hlt
fbld
mov
xchg
mov
mov
add
pop
adc
in
mov
out
jl
pop
stc
sbb
or
mov
sqrtps
or
mov
enter
mov
popa
cli
inc
pushf
repz
jns
clc
push
pop
jmp
jo
sub
cmp
xchg
sti
sbb
into
scas
inc
clc
add
scas
mov
icebp
ret
cmp
jge
adc
cmp
inc
cmp
push
mov
jp
daa
in
fcom
push
mov
inc
push
out
jb
cmp
inc
and
pop
dec
inc
fistl
popl
setl
fidivl
mov
dec
in
pushf
test
inc
cmpl
je
inc
sahf
call
mov
mov
in
mov
cmp
push
pop
mov
xchg
andl
repz
loope
jb
dec
je
jecxz
imul
stos
testb
jno
std
cmp
or
in
push
mov
pusha
pop
data16
lret
mov
dec
hlt
mov
fsubr
jl
cli
or
lods
inc
roll
and
lods
test
cltd
movsl
data16
add
xlat
and
enter
mov
mov
sbb
jns
into
pop
xor
adc
test
dec
fsubrl
mov
addr16
inc
repnz
nop
shlb
jns
fisubl
les
or
incl
mov
cmp
in
inc
orb
cmc
call
pop
in
inc
imul
je
adc
pop
sbb
test
cmp
dec
and
pop
out
pop
xor
push
adc
jecxz
mov
cwtl
mov
dec
dec
sub
push
and
xor
mov
aas
cmp
mov
cmp
iret
pop
sub
push
insb
subl
rol
std
cli
ja
push
adc
mov
adc
adc
and
aaa
jecxz
mov
dec
fsubr
push
ljmp
aam
mov
inc
or
insl
jecxz
jmp
mov
inc
sbb
or
mov
jge
inc
outsb
scas
push
jns
test
data16
xchg
inc
leave
or
cmpsl
cld
cmp
add
xor
rol
push
pop
jle
or
jns
pusha
dec
sahf
pop
sub
lods
jg
idivl
dec
cmpsb
fdivrs
mov
outsb
fstps
lock
imul
or
inc
xchg
jbe
call
sub
stos
shlb
imul
dec
out
inc
pop
sub
cmp
ljmp
mov
xchg
xchg
lcall
xchg
sbb
scas
push
aad
negl
jns
xor
pop
and
out
jge
and
sub
inc
jmp
movsl
push
clc
dec
push
bound
adc
adc
inc
inc
mov
and
lret
lret
es
mov
iret
idivb
push
mov
mov
outsl
les
mov
emms
mov
and
jecxz
mov
jno
mov
pop
sbb
mov
es
pop
loope
or
lcall
adc
mov
jo
stos
push
cmpsl
pop
add
int3
bound
xorl
orl
movsl
cwtl
push
xor
test
xchg
cltd
xor
andb
jns
fprem1
ret
mov
loopne
push
adc
xrelease
outsl
xchg
sub
sbb
lods
ljmp
ja
bound
inc
inc
inc
insl
mov
cmpsb
jp
and
aam
jnp
ret
or
in
data16
mov
call
push
aam
inc
repnz
and
fcmovnbe
sub
addr16
insl
movsb
ss
mov
in
das
xor
mov
scas
xchg
push
jmp
out
ss
jge
outsl
fs
int
rclb
cmpsl
mov
adc
sub
lret
mov
jmp
insl
xchg
shl
inc
aam
repnz
cld
aad
pop
insl
ss
add
bound
mov
mov
scas
jno
push
popa
mov
mov
addr16
icebp
or
inc
mov
repnz
push
pop
dec
sub
xor
adc
lcall
inc
cmp
sar
sbb
psubb
mov
inc
or
pop
lret
cltd
adc
push
fldenv
daa
fcompl
jns
jb
cmpl
int3
xor
sbb
jg
xchg
jae
mov
stos
adc
xor
and
and
lret
popa
dec
scas
mov
sub
push
or
iret
insb
sbb
in
xchg
enter
mov
xchg
call
push
jge
push
inc
movsl
loopne
xchg
inc
imul
sub
test
out
repz
fsubl
das
imul
jo
inc
push
cltd
mov
mov
mov
inc
or
call
xor
cmpsb
insb
ficoml
ja
das
dec
insl
inc
lods
sbbb
sbb
xchg
xchg
rclb
sbb
fsubs
inc
pmulhuw
popa
push
mov
push
cli
mov
jns
fs
shrl
mov
adc
mov
add
shlb
sbb
scas
sub
fstl
sub
cmpsb
jb
mov
sub
sti
sub
out
add
or
sahf
cmpsb
mov
int
xor
ljmp
repnz
mov
mov
mov
jl
jnp
hlt
and
adc
add
jg
add
cli
je
jne
push
cmp
inc
aad
cmp
pop
scas
fdivr
sbb
pop
jno
mov
in
cmp
clc
sub
push
cltd
and
gs
add
and
mov
inc
push
mov
and
in
sbb
scas
xchg
ja
jecxz
push
inc
ljmp
out
scas
inc
aam
mov
sbb
or
or
fldcw
ds
scas
jo
adc
xchg
jne
cmpsb
cs
push
std
jl
data16
aad
adc
mov
repz
jmp
fwait
pop
mov
mov
xlat
dec
out
imull
sbb
sub
push
lret
addr16
ja
pop
fwait
pop
mov
mov
xlat
dec
out
imull
sbb
sub
push
lret
addr16
ja
pop
fwait
pop
mov
mov
xlat
dec
out
imull
sbb
sub
push
lret
data16
ja
pop
fwait
pop
mov
mov
xlat
loope
jnp
sbb
xchg
pop
hlt
pop
les
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
xchg
xchg
jno
stc
mov
cmpsl
xchg
fwait
loopne
int
out
pop
dec
pop
jns
imul
cmp
rcll
stc
mov
cmpsl
cltd
xlat
mov
mov
pop
dec
pop
push
aaa
imul
cmp
add
jg
das
cmpsl
mov
rol
notl
pop
pop
and
inc
cmp
push
adc
pop
adc
in
into
mov
test
insb
push
dec
jb
loop
ret
push
jl
sbb
aad
sahf
xadd
pusha
and
xlat
jbe
xchg
ljmp
clc
xchg
addb
cwtl
mov
xchg
adc
clc
inc
int
xchg
mov
inc
mov
xchg
ja
inc
test
bnd
pushf
shlb
lock
je
mov
call
xchg
xchg
push
or
pop
jecxz
xlat
push
out
sub
or
popf
loope
cltd
call
push
ljmp
cltd
pop
adc
or
cmpsl
dec
out
jno
cmp
push
mov
js
imul
jl
cmp
xchg
leave
xchg
mov
cmpsl
cltd
xlat
int
mov
pop
fildl
mov
push
pop
inc
cmp
push
stos
xchg
mov
cmpsl
divl
enter
or
sub
push
jo
and
outsb
sub
repnz
loop
shlb
cmpsl
lock
fiaddl
sbb
add
inc
dec
and
stos
sar
iret
mov
test
fdivr
mov
mov
pop
dec
pop
jns
imul
cmp
fsts
stc
mov
cmpsl
cltd
xlat
mov
mov
pop
dec
pop
jns
imul
cmp
fsts
push
pop
mov
aad
out
fnstcw
movsl
sbb
clc
pushf
pop
ja
inc
lea
lcall
mov
jecxz
lahf
test
rolb
mov
hlt
mov
pop
mov
stos
mov
aaa
arpl
lock
jge
fwait
iret
and
pusha
fs
imul
jle
or
popf
jno
cmp
movsb
mov
inc
jae
inc
adc
lret
roll
mov
rol
mov
loope
cmpsb
jge
arpl
add
divl
cmpsl
test
mov
mov
push
daa
jge
pop
mov
jnp
inc
outsl
xchg
dec
rorb
repnz
pusha
mov
jbe
and
pushf
cmc
push
cmc
out
outsl
sbb
imul
dec
cmpb
fsubrl
mov
aas
adcb
cli
sbb
cwtl
mov
out
jae
out
cmp
dec
xchg
test
mov
jg
mov
xor
add
gs
cmp
mov
aam
nop
mov
or
pop
mov
icebp
xor
mov
xchg
mov
push
sbb
jns
sti
or
pop
xchg
test
cwtl
add
mov
pop
pop
fcomp
mov
std
xchg
data16
sahf
dec
push
js
rolb
rolb
daa
mov
or
repnz
xchg
jp
pop
push
mov
push
and
addl
or
cmp
push
dec
std
mov
cltd
xor
mov
xchg
andl
jbe
pop
lods
add
pop
test
xchg
inc
and
mov
test
xor
repnz
nop
pop
xor
pop
aad
xlat
sub
rcll
jmp
jns
dec
inc
mov
pop
lcall
nop
and
jge
cmp
or
mov
subb
lock
xchg
inc
xchg
iret
adc
outsl
fmul
jecxz
pop
popf
and
sbbl
mov
lds
popa
mov
shrl
jmp
dec
sbb
insl
arpl
push
jle
fcompl
jb
je
add
out
ja
jo
ss
adc
sbb
pop
dec
mov
or
xchg
jno
jle
jg
fwait
xchg
mov
mov
push
pop
add
cmp
scas
stos
jg
dec
xor
lods
add
in
inc
pushf
adc
pop
xor
fisttpll
es
sub
pop
adc
and
cmc
scas
pop
pop
xchg
rcl
xchg
in
mov
mov
aam
lea
rcll
cmp
ror
sub
cmp
fdivs
je
dec
ds
xchg
or
jmp
in
in
cltd
jns
scas
pop
std
sbb
push
pushf
movsl
dec
mov
fcomps
and
and
pop
outsb
inc
jecxz
pop
int3
fisubl
jl
mov
mov
sub
aad
dec
lea
mov
int
mov
in
mov
dec
jle
cld
mov
push
lods
adc
fcom
movsb
and
aam
popl
dec
leave
pop
xor
inc
or
add
sub
ret
jg
sbb
mov
dec
hlt
fs
push
sti
push
jp
sbb
or
xchg
xchg
inc
enter
jb
int3
rorb
addb
rclb
push
pop
sbb
add
pop
aad
stos
or
pop
out
mov
push
fs
subb
mov
jl
push
enter
jne
lods
pusha
mov
xchg
fisubs
aaa
mov
test
rcll
and
jne
pop
push
rcl
xlat
inc
cmp
mov
adc
into
inc
push
cmc
mov
dec
lds
lret
lahf
mov
aaa
mov
divb
je
testb
mov
or
push
jns
cwtl
sahf
dec
aaa
out
mov
push
mov
push
mov
aaa
rcll
mov
inc
imul
xchg
cmp
loop
ficoms
out
mov
jg
and
dec
dec
daa
in
sbb
sub
fidivl
popf
pop
aam
inc
out
and
xchg
xchg
xorb
mov
jb
push
roll
sub
rclb
pop
dec
cltd
mov
scas
cli
repz
lret
jl
adc
lds
fisttps
push
adcb
and
mov
push
popa
cmp
xorl
jecxz
sub
push
cmc
in
daa
or
insb
cmp
push
jmp
cmp
push
jae
jmp
sbb
pop
sub
push
test
sbb
dec
push
imul
add
in
adc
cmp
jns
icebp
jmp
push
xchg
and
movsb
push
clc
fld
aas
movb
xchg
ret
pop
jl
mov
lock
push
xorb
fs
jbe
mov
imul
hlt
mov
je
xchg
pop
andl
pop
mov
add
jmp
cmpsb
pop
xchg
mov
xor
pop
sub
jmp
pop
lds
and
adc
imul
inc
pop
imul
insb
push
mov
jbe
cmpsb
stos
push
add
daa
mov
add
cwtl
mov
insb
outsl
sbb
popf
xor
adc
loope
leave
jg
std
data16
add
mov
and
inc
shlb
dec
mov
jg
adc
cld
pop
shrl
push
cmp
jbe
sub
outsb
ret
dec
fstl
in
scas
push
adc
jo
cs
mov
jb
lods
and
gs
cmp
lods
sar
mov
scas
adc
xor
pop
lcall
test
pop
xchg
sbb
ljmp
stos
push
cmp
mov
jae
movsb
xlat
mov
push
cmpsb
mov
cs
sub
and
adc
xchg
arpl
jns
cltd
mov
dec
or
mov
out
fstpl
lock
push
inc
adcb
rolb
xchg
pop
cltd
lock
mov
mov
push
icebp
loope
mov
push
inc
add
cli
add
cmpsb
adc
push
jnp
cmc
push
lret
mov
dec
adc
lods
mov
fildl
fildl
stos
cmp
repnz
imull
mov
aad
xchg
mov
mov
bound
stos
test
or
mov
and
pop
and
lock
mov
mov
inc
outsb
and
push
jb
adc
jmp
icebp
mov
push
js
fsubrs
mov
scas
pop
or
push
sub
movsb
inc
movsb
insl
sbb
sub
enter
ss
jbe
xchg
xor
jbe
jecxz
inc
mov
and
sahf
push
or
jmp
jno
test
push
cmp
cld
cmpsl
inc
sbb
es
jg
aam
push
fwait
and
nop
lock
mov
mov
in
pop
fwait
xor
bound
mov
outsl
stos
sub
push
imul
divl
mov
out
leave
xchg
sub
test
int3
stos
sub
jne
and
sbb
movsl
stc
stos
ds
ret
pop
loop
scas
imul
lds
adc
pop
pop
xor
cli
add
lods
inc
lahf
xchg
cli
mov
ljmp
mov
shll
jae
mov
notl
nop
mov
sub
test
add
sub
pop
adc
loopne
loopne
mov
stc
dec
inc
dec
fiadds
xor
out
rcll
stos
repz
dec
push
leave
jbe
add
inc
icebp
stos
push
push
add
pusha
dec
xchg
data16
daa
pavgw
sub
sbb
outsb
loope
sub
push
insb
push
push
pop
enter
add
inc
movsb
mov
pop
xor
sub
inc
adc
fdivs
out
inc
mov
xor
adc
movsl
mov
mov
cwtl
fldl
out
dec
xchg
xor
stos
iret
xchg
mov
xchg
jb
add
and
pop
int3
cwtl
cmp
pop
jnp
jne
loope
mov
repz
jae
out
add
sbb
imul
xchg
fsubl
mov
and
bound
pop
std
dec
hlt
mov
ficompl
movsb
repz
cmp
mov
pushf
sar
and
mov
fsqrt
lret
ss
or
test
dec
cmp
ss
pop
and
and
lcall
mov
fs
shll
in
lret
lock
insb
out
mov
mov
inc
jne
add
pop
sub
pusha
jnp
xchg
cmp
push
pop
jo
cwtl
test
pushfw
loope
out
dec
js
inc
inc
imul
aad
sbb
push
aas
adc
cmp
xor
pop
inc
mov
pusha
jo
push
dec
mov
or
dec
out
std
bswap
inc
xchg
repnz
and
sahf
data16
scas
jmp
popf
pop
popa
lahf
jge
push
mov
je
inc
pop
pop
dec
loopne
sub
and
aad
adc
test
shl
fstpl
xlat
movsb
movsb
enter
cmp
int
movsb
lock
mov
clc
adc
mov
stos
sbb
mov
filds
outsl
sub
fcmovbe
fsubrs
test
lods
cmpsb
cmp
and
sub
arpl
xchg
push
dec
sub
movsb
cwtl
call
mov
sarb
hlt
stos
inc
cmp
mov
imul
outsb
push
xor
imul
cmp
pop
insl
mov
push
add
sti
gs
ljmp
insb
cmp
fidivl
sbb
loope
in
jg
inc
testb
and
ljmp
push
sub
pop
pop
mov
iret
ja
ljmp
jns
and
movntps
pop
sub
fsubrp
idiv
mov
stos
mov
push
inc
nop
popf
sub
scas
sbb
dec
xchg
scas
push
adc
call
lahf
aas
repnz
icebp
mov
lret
sarb
ljmp
jmp
jnp
pop
int
inc
bound
scas
je
pop
push
mov
testb
call
jl
jge
das
xlat
xchg
and
scas
sub
movsl
cmpsb
iret
addr16
fsubs
pop
sbb
mov
xor
or
gs
cld
cmpsb
mov
pop
frstor
popa
addb
mov
xchg
test
jns
jp
lret
and
cmp
adc
xor
icebp
js
into
sbb
mov
aad
fstpt
dec
mov
lods
arpl
dec
andl
push
test
xchg
dec
lods
loope
test
fs
adc
xchg
clc
shl
mov
js
adc
mov
mov
arpl
jge
push
jnp
sub
inc
inc
adc
clc
popf
mov
fbld
fisubrs
jl
mov
pusha
dec
push
cmc
jl
add
pop
dec
cmp
test
jle
ss
es
xchg
mov
cmp
movsl
hlt
mov
in
cvttps2pi
sub
sbb
lret
out
add
jbe
xchg
sub
outsl
outsl
and
pop
jno
cmp
stc
mov
jle
cmpsb
push
bound
inc
dec
jno
xor
fisttpll
cs
sub
and
adc
lods
dec
inc
xchg
push
mov
push
jns
rcr
rcll
push
push
into
jmp
push
mov
ds
in
cs
push
fs
sbb
jmp
mov
mov
hlt
std
pop
rcr
shl
mov
sahf
fdivs
cmp
adc
pop
and
inc
addb
sahf
push
adcl
cmp
and
dec
mov
xchg
daa
outsl
ss
movsb
sbb
xchg
scas
addb
pop
loope
into
sub
or
aam
xor
dec
lret
xchg
jo
or
xor
adc
xchg
mov
incl
fimull
pop
in
push
call
jle
std
shlb
mov
sub
xchg
mov
jecxz
add
jecxz
lcall
pop
pop
mul
cmp
shlb
mov
or
fistl
push
stos
lret
sbb
lods
mov
xchg
insl
mov
imulb
pop
push
sub
leave
jae
je
pop
iret
movsl
clc
call
cmc
mov
mov
or
andl
xchg
sahf
popf
or
jl
dec
imulb
sti
add
mov
bound
mov
call
pop
dec
sbb
fisttpl
int
ret
and
dec
imul
pop
lods
dec
mov
pop
cwtl
repz
outsb
push
sub
sbb
jns
xor
jl
mov
bound
push
cmp
js
xchg
ret
mov
add
daa
xor
xorb
mov
pop
jb
cwtl
add
inc
mov
mov
in
daa
in
dec
push
in
mov
faddp
mov
xchg
adc
jnp
iret
sub
ret
shrb
cmc
lock
outsb
jge
pop
movsb
clc
lods
out
mov
mov
mov
outsb
imul
arpl
imul
mov
outsl
sbb
cwtl
adc
imul
adcb
mov
push
cwtl
dec
test
jae
aas
fistpll
jne
aam
mov
popl
mov
dec
xor
das
movsl
inc
mov
fists
divl
inc
imul
leave
adc
sub
add
dec
sahf
pop
ja
and
out
mov
ds
aam
push
ljmp
shrb
push
mov
mov
aas
add
movsl
add
cmp
and
xor
jae
aas
out
adc
sub
aad
loopne
mov
pop
inc
repz
cs
push
xor
int3
mov
add
and
imul
mov
push
lds
pop
loope
pushf
and
fbld
cmp
add
dec
pushf
lahf
andl
cli
push
jmp
hlt
xor
shll
jo
mov
outsl
insl
filds
pop
es
mov
jae
sbb
hlt
xor
scas
lods
cmpsb
push
sbb
loop
cmp
icebp
push
pop
and
mov
xchg
sbb
ja
js
or
sar
fisubl
xchg
out
dec
daa
in
arpl
js
dec
popa
scas
subl
dec
jp
cld
mov
shr
out
sub
fptan
push
sub
add
xor
xor
lds
orb
notb
fdivrl
mov
aam
imul
in
cmpsb
mov
or
push
enter
clc
sbb
jo
mov
repz
mov
out
xor
mov
mov
dec
push
mov
sub
dec
add
mov
sub
pmulhw
dec
shr
ret
jg
popa
inc
sbb
pusha
xchg
or
setle
xchg
subl
mov
dec
mov
lcall
ss
and
xchg
pushf
inc
shrl
js
arpl
jae
test
insl
mov
icebp
sbb
or
scas
bound
adc
dec
add
inc
adc
jmp
jmp
adc
cmp
mov
pop
lahf
out
mov
jecxz
add
adc
or
movsl
jb
push
sub
pop
xchg
in
add
mov
repz
pop
add
lds
sub
hlt
iret
cmp
or
jae
mov
sbb
out
pop
sbb
lods
out
stc
xchg
test
js
xchg
and
xchg
mov
addr16
xlat
lea
mov
jo
outsl
pop
sbb
mov
push
sahf
aas
dec
mov
pop
and
xor
and
lcall
adc
sbb
pop
leave
shll
movsb
outsl
lret
mov
add
cmp
sbb
adcl
sub
loope
cwtl
dec
shlb
pop
movsb
jb
arpl
xor
mov
jne
pop
fldenv
rcrl
pop
frstor
call
or
mov
xor
in
mov
jl
adc
push
xor
push
test
aaa
jno
out
popl
enter
popf
jmp
inc
xorl
sahf
ficoml
xor
movsb
fldl
jmp
jecxz
icebp
js
cmp
pop
fcompl
lret
outsb
mov
inc
jno
ljmp
pushf
jne
mov
aas
enter
mov
push
or
insb
ret
ss
mov
in
dec
xchg
sub
js
push
mov
xor
dec
fadd
ficoml
das
and
ds
jo
xchg
sub
lea
in
lea
mov
out
cld
sahf
nop
scas
mov
cmp
cmp
jecxz
addl
clc
xchg
fnstsw
adc
js
fistpll
push
xchg
out
stos
in
mov
sti
mov
and
inc
mov
clc
popa
push
cmpsl
pusha
out
dec
xchg
push
push
mov
mov
add
mov
insb
pop
xchg
lds
mov
xor
popf
adc
pop
adc
aas
mov
loopne,pn
jp
pop
roll
mov
ja
test
and
mov
push
stc
cmc
inc
mov
fwait
das
xor
mov
mov
jge
int
jbe
scas
push
notb
push
xor
xchg
inc
int3
mov
das
mov
jb
cmp
popa
or
sub
pop
imul
pop
adc
mov
mov
sbbb
jno
iret
aaa
cli
cmp
cmp
cmp
dec
xchg
ss
push
jne
rcrb
out
pushl
dec
jecxz
into
dec
imul
ljmp
lahf
sub
ds
mov
push
jl
paddsb
in
dec
mov
inc
cmp
fdivp
lods
mov
xchg
sbb
popa
fisttpl
xchg
mov
pop
dec
hlt
test
add
and
scas
push
mov
cmp
ja
jo
mov
dec
xchg
adc
rcrl
sub
xchg
fistpll
xor
or
loopne
mov
clc
inc
xchg
sti
xchg
inc
lahf
and
pop
xor
mov
mov
std
test
scas
div
test
rolb
xchg
into
adc
jp
and
jb
into
sub
push
pop
les
rcrl
add
add
int3
loop
shrl
fnstcw
push
xchg
int
xor
bound
jle
test
lock
cmpsb
push
addr16
les
xor
push
cmp
mov
push
cmp
push
cmpsl
jns
xchg
inc
mov
in
and
sbb
pop
stc
pop
pop
stos
outsb
inc
mov
mov
push
inc
lcall
mov
ficoms
mov
jg
or
adc
adc
xchg
ficoml
adc
dec
je
in
les
leave
cmpsb
cmpl
scas
rcll
pop
cld
cmp
inc
mov
mov
mov
subb
ljmp
sub
daa
sahf
or
pop
stc
fstpl
shrb
xor
imul
mov
lock
sbb
imul
mov
loop
sbb
cmp
or
push
or
repnz
pop
int
sahf
jg
addr16
and
movsb
sbb
push
std
push
lret
repz
and
fldl
mov
sub
push
mov
jmp
adc
out
push
inc
mov
std
mulb
popf
sub
call
insb
aaa
mov
push
mov
insl
sbb
xchg
dec
notb
sbb
dec
shll
and
daa
fs
jl
test
neg
dec
gs
fldl
hlt
jge
icebp
mov
xchg
sub
bound
lahf
cmp
pop
lea
add
jg
lea
push
inc
push
imull
jnp
inc
scas
loop
fistps
in
sahf
mov
or
int3
daa
inc
dec
ret
mov
dec
sahf
insl
pop
jb
sbb
pop
mov
into
mov
sbbl
imul
jae
xchg
cmc
andl
iret
jmp
mov
nop
es
sarl
das
mov
jl
inc
stos
push
xchg
jl
daa
cli
sti
and
in
add
and
pop
and
in
sbb
xlat
pop
lret
inc
js
ja
loop
orb
xchg
clc
dec
mov
dec
test
or
add
and
sub
clc
subl
or
repz
mov
or
jecxz
nop
push
mov
sbb
mov
data16
xor
lods
repz
scas
jae
fwait
sub
into
stc
dec
and
pop
pusha
incb
insb
adc
adc
imulb
or
lret
add
std
sub
jmp
cmc
notb
mov
pushf
mov
cmpsl
cltd
xlat
mov
mov
pop
dec
pop
jns
imul
cmp
fsts
stc
mov
cmpsl
cltd
xlat
mov
mov
pop
dec
pop
jns
imul
cmp
fsts
jmp
xlat
mov
pop
dec
pop
jo
insl
daa
sbb
inc
cmp
xchg
in
jno
shll
imull
out
pop
mov
shll
imul
mov
cwtl
sbb
jb
sbb
jge
dec
xchg
rorb
mov
cmp
jb
add
insl
and
dec
enter
xchg
xchg
in
mov
cmp
push
sbb
insl
cmp
dec
ret
lods
mov
xchg
shrl
push
jb
jb
pop
or
lret
dec
cmp
sub
idivb
outsb
data16
aad
cmovb
lods
bound
repnz
xchg
rcrb
or
sbb
mov
add
aas
pushf
iret
gs
aas
sub
mov
dec
lock
inc
sub
jo
cld
xlat
sub
xchg
sub
adc
or
lret
mov
mov
bound
adc
and
mov
cwtl
push
repnz
jl
js
dec
and
lret
cli
mull
dec
sub
xchg
adc
and
mov
jnp
hlt
mov
sub
lods
cmp
repz
subb
leave
mov
cmpb
or
and
dec
fstpt
jmp
lcall
movsb
xor
sub
adc
and
pop
sbb
nop
cmc
pushf
lret
out
pushf
negb
inc
cmp
jo
jbe
jl
dec
sub
rol
fsubs
sahf
loope
sarb
pusha
jle
jne
push
and
dec
ret
lods
loop
repnz
fnsave
sub
add
insl
and
dec
ret
lods
loop
repnz
fnsave
cmp
rcrl
pop
mov
dec
ds
and
scas
stos
pop
dec
out
cmpsl
pop
and
shll
xor
jg
mov
or
dec
jmp
lock
mov
push
mov
rclb
xchg
push
jno
lret
xlat
test
out
pusha
lahf
cmp
mov
jg
xchg
xchg
inc
xchg
xchg
mov
adc
nop
mov
arpl
cmp
xor
xor
push
push
dec
xor
cmpsb
pop
testl
mov
std
aas
pusha
or
pop
aad
push
lcall
push
xor
sub
bound
push
or
inc
adc
mov
cmc
sbb
daa
mov
jbe
les
outsl
cmp
mov
clc
mov
inc
dec
not
adc
stc
jnp
cmc
dec
outsb
cmc
aad
push
sbb
int3
arpl
pop
cmpsb
xchg
and
stos
sbb
insb
movsl
cmp
outsb
inc
sar
mov
xor
call
mov
frstor
cmc
add
ljmp
out
dec
lret
jb
cmp
movsl
or
xor
push
shl
jo
xchg
lret
jns
fdivl
push
movsl
pop
mulb
inc
adc
bound
das
or
jbe
lods
jecxz
decb
mov
fsubrp
out
jo
in
jns
mov
jo
and
dec
enter
xchg
jbe
push
loop
pop
fdivl
mov
rcrb
push
sub
dec
or
inc
and
test
mov
add
pusha
clc
ja
adc
dec
test
lods
add
xchg
fwait
lock
imul
je
adc
push
xchg
dec
out
adc
inc
or
scas
xchg
jb
test
fmul
push
xor
or
ss
lock
cwtl
pop
ret
mov
shlb
xor
jne
sub
fnstsw
jmp
clc
das
pushf
mov
adc
xor
xchg
mov
movsb
mov
mov
jbe
fs
sbbb
loop
mov
sbb
xor
in
dec
add
aas
mov
cmpsb
and
xchg
movsb
adc
push
sub
add
or
fwait
cmpsb
mov
lret
leave
test
popf
pop
sub
arpl
or
fdivrl
jne
push
dec
pushf
movsl
test
ds
lea
inc
lret
dec
test
jne
jl
sarb
and
shlb
stos
jb
shrl
stc
jb
out
clc
bound
outsb
push
push
adc
and
adc
fwait
lods
jo
aaa
nop
sbb
jmp
cmp
stos
ss
mov
xlat
xor
rcll
pushl
icebp
ret
lea
jmp
and
inc
add
xchg
int
inc
sub
xor
xchg
jno
sub
jno
dec
call
cmp
dec
xchg
sub
adc
fwait
or
cli
bound
iret
adc
pop
push
cmp
in
add
lret
lods
cli
xchg
test
outsl
xchg
sar
into
pop
sub
xchg
stc
das
mov
fwait
dec
out
pop
mov
add
imul
mov
jp
shlb
aas
es
das
insb
and
fdivs
lock
jmp
adc
idivb
cmp
sti
ljmp
rcrb
dec
outsb
pop
fwait
out
jge
sub
arpl
popa
xor
data16
and
insl
sbb
js
mov
pop
sub
inc
pushf
daa
or
lahf
cmc
cmpsl
xor
push
nop
lret
pop
xchg
sbb
and
inc
insl
or
lret
pop
pop
adc
and
xchg
pusha
xchg
mov
cli
in
or
lcall
cmp
sbb
cltd
cmpsb
pop
push
divl
bswap
xchg
mov
fstpl
and
fnstsw
or
push
jno
insb
scas
mov
icebp
popf
push
and
fwait
pushfw
adc
push
jmp
sbb
mov
cli
sub
clc
xchg
cmp
mov
cmp
xchg
xchg
or
xchg
cmp
pop
dec
mov
add
inc
js
lods
and
and
mov
dec
cmp
sbb
test
scas
jae
cmp
cmp
lds
and
mov
adcb
add
pop
loope
jbe
mov
or
xor
pop
dec
mov
les
sub
cmc
test
clc
adc
and
sub
out
jl
cld
inc
lahf
out
aaa
cwtl
je
dec
inc
mov
xchg
shlb
inc
or
fstps
pop
inc
sub
jo
push
addr16
jno
adc
lock
gs
xchg
aam
xlat
in
in
xchg
test
push
xchg
lcall
rorl
add
mov
aas
xchg
leave
xlat
dec
fmull
jge
jnp
out
dec
sbb
inc
ljmp
movsl
repz
in
sbb
cmc
aaa
add
or
sbbl
adc
cmpsl
adc
lea
out
sub
adc
push
sbb
fisubrl
inc
decl
dec
pop
jle
call
jge
jne
add
lea
push
pop
mov
push
out
shrl
shlb
mov
testb
mov
add
cmp
imul
lods
addl
leave
pop
lods
push
subl
and
imul
stc
out
outsl
or
std
subb
push
das
insb
pop
dec
insl
stc
or
movsl
jmp
mov
in
imul
loopne
aad
mov
movb
cmp
adc
or
dec
pop
stos
cli
ficoml
out
push
fistl
int3
shlb
je
sub
test
les
cli
mov
in
dec
sbb
or
mov
outsb
outsl
xchg
jno
inc
js
addb
ret
and
iret
test
jne
push
out
push
int3
push
xchg
xlat
pop
repnz
aaa
sub
jecxz
ljmp
sub
mov
jl
out
ret
call
pusha
lcall
test
pop
inc
sbb
mov
stc
cmpsl
mov
ret
sbb
xor
or
ret
inc
sub
jns
cld
pushf
jge
push
fwait
ja
adc
imul
movsb
dec
fstl
rcrb
dec
cltd
dec
xor
dec
push
add
je
mov
add
mov
fbld
insl
mov
mov
andl
subb
push
sbbl
xor
push
mov
and
loope
imulb
jo
push
bound
mov
sbb
xchg
adc
int3
sbb
jge
pop
lock
xorb
dec
jl
sbb
jmp
sub
dec
outsb
push
iret
mov
ljmp
push
sbb
out
or
jno
sbb
dec
shll
pushf
jno
mov
sbb
xchg
cmpl
cli
pop
sub
sub
fdecstp
xor
pop
sbbl
and
fldl
mov
inc
xchg
test
add
stc
sub
sbb
insl
jns
jne
pop
or
daa
jmp
push
dec
xchg
addr16
mov
fwait
xor
dec
adc
rcrl
shrl
xchg
push
or
mov
mov
adc
enter
cmp
stos
das
lea
cmp
scas
xor
mov
push
and
pop
cltd
dec
in
iret
repnz
fwait
mov
sti
xor
add
fs
aam
jbe
xchg
mov
shl
mov
xchg
jmp
daa
add
in
rclb
inc
mov
xor
push
repnz
loopne
lahf
stos
and
jae
lds
mov
xchg
std
cmc
call
dec
sub
enter
test
call
int
xor
push
jle
mov
pop
xchg
xor
cli
cltd
add
aas
into
push
pop
cmpsl
and
cwtl
outsl
adc
xchg
xlat
and
aaa
rcrb
cmp
ljmp
movsb
inc
sub
inc
ficompl
rorl
xchg
or
jns
sub
xor
icebp
pop
xor
sbb
add
ret
fmuls
and
fbld
ja
es
xor
addb
aad
ds
add
dec
cwtl
inc
cmpsl
enter
xchg
mov
into
cmp
dec
mov
mov
sub
push
jnp
mov
pop
cmp
mov
mov
and
shll
cmpsl
lcall
push
push
xor
sbb
pop
roll
push
out
movsl
cli
push
push
hlt
jnp
sbb
je
mov
or
je
inc
les
dec
mov
outsb
out
hlt
add
into
pop
xchg
add
adcl
inc
hlt
add
jmp
jno
ss
jmp
and
mov
lds
sarb
popf
pop
adc
outsl
xchg
xor
ret
add
or
ror
dec
andb
mov
movsl
les
out
mov
fdivr
sbb
cmp
xchg
popf
pushf
test
pushf
popa
sbb
aas
cmovl
and
jnp
sub
dec
inc
or
jl
or
ss
dec
cmp
jb
sbb
or
mov
je
rcll
lret
aas
test
shll
mov
movsl
sbb
scas
sub
neg
call
inc
pop
mov
xor
cs
incl
dec
add
fisttpll
or
mov
inc
push
cmpxchg
test
xchg
push
push
cmp
js
mov
sbb
loopne
pop
xor
adc
or
dec
mov
test
sbb
fs
adc
jge
adc
push
xchg
sub
mov
push
insl
in
add
add
in
test
jle
pop
jbe
clc
loop
jge
xchg
add
not
inc
dec
dec
imul
xor
mov
adc
mov
stc
mov
aas
out
ret
repnz
push
push
shl
stc
rolb
sub
pop
push
xchg
sbb
dec
push
xor
mov
leave
push
sub
sub
cmpsb
adc
in
adc
jp
arpl
std
xchg
mov
movsb
sti
pop
and
cmpsb
mov
mov
jnp
inc
mov
pop
test
cs
lret
mov
jp
adc
push
outsb
lret
push
iret
push
cmp
sbb
fnsave
dec
xchg
test
fadds
jne
xchg
adc
cmp
dec
mov
sub
les
jmp
mov
jp
add
mov
pop
adc
push
mov
fsub
cmp
out
iret
ds
arpl
es
not
mov
andl
xchg
or
popf
sbb
or
push
test
pop
sahf
and
aaa
in
mov
mov
int3
dec
xchg
xor
push
lret
dec
decb
lods
fmuls
in
pushf
pusha
out
test
and
inc
cmp
jecxz
lods
int
lret
and
and
mov
shlb
sub
mov
or
mov
daa
popa
stos
dec
fcoml
movsb
and
hlt
sbb
jl
lahf
mov
cmpsl
mov
pop
add
arpl
ret
mov
adc
push
or
imul
mov
nop
push
movsl
mov
or
adc
out
sbb
push
sub
and
or
loop
pop
adc
sahf
pop
clc
loope
adc
fdivs
mov
jo
sub
jae
xchg
and
cs
loopne
std
mov
outsb
sarl
pop
sbb
aam
imulb
push
inc
mov
mov
mov
pop
or
repz
inc
mov
out
scas
fwait
sbb
add
shlb
push
popf
mov
push
inc
in
jmp
fcomps
xchg
je
ret
enter
xorb
inc
pop
cmp
pop
jbe
stos
aaa
je
dec
cmp
cmc
cmp
imul
bswap
jecxz
mov
xor
test
scas
xor
or
ss
cmp
and
push
out
jbe
addb
jecxz
je
das
adc
pop
push
xchg
fidivl
inc
add
pop
mov
cmpsb
sbb
cmc
lock
shlb
aas
sbb
pop
lds
mov
clc
inc
out
fbstp
test
or
fdivr
inc
data16
cmc
lret
insl
dec
pushf
cltd
or
push
push
xor
mov
dec
dec
aas
insl
ljmp
xchg
fsts
xchg
jmp
jl
mov
push
push
add
jle
push
inc
sbb
fists
repnz
addr16
dec
out
xchg
out
xchg
mov
pop
and
sbb
out
iret
and
fwait
fwait
lea
insb
shll
pop
sbb
cmp
gs
jae
pop
loopne
push
or
add
and
sbb
daa
add
inc
xor
xor
lahf
les
ret
out
mov
add
xchg
sbb
mov
mov
jl
sbb
lret
clc
enter
mov
xlat
adcb
ss
rcl
cmp
push
iret
inc
adc
dec
mov
loope
jo
aam
hlt
adc
mov
dec
jl
push
and
sub
sarb
cmp
sbb
xchg
mov
bnd
repz
push
stos
shrl
aad
mov
push
pop
push
fistl
gs
imul
sub
sti
pop
sub
fidivrs
aas
push
mov
xchg
xchg
aaa
aas
adc
xchg
repz
cltd
je
xchg
cmpsb
hlt
je
pop
int
push
pop
out
add
ljmp
cmp
into
dec
je
jb
setp
mov
pusha
mov
aas
test
and
cld
lcall
hlt
sbb
addr16
fiaddl
push
dec
xchg
xchg
stos
jnp
movsb
sub
cltd
or
xchg
mov
pop
nop
adc
add
lret
dec
inc
xlat
fidivrl
repz
rcrb
lcall
out
int
mov
sbb
mov
or
arpl
xchg
dec
push
mov
dec
call
pop
pop
test
and
popf
stos
jno
pop
cmp
jmp
into
sbb
mov
sub
movsl
mov
jge
inc
jg
rclb
sub
sbb
mov
mov
enter
sbb
lods
xor
sbb
movsl
scas
repz
repnz
dec
lret
popa
sbb
adc
pop
sbb
mov
pop
push
and
mov
lods
js
mov
mov
lea
insl
inc
leave
xchg
sub
dec
dec
fsubrl
data16
fiaddl
into
pop
out
inc
js
add
out
out
fisubs
xchg
addr16
xchg
and
push
loopne
shlb
fists
adc
lret
adc
cld
sub
xor
sbb
es
xor
addr16
dec
lret
sbb
mov
mov
fidivrl
inc
std
stos
nop
out
rclb
jno
or
pop
sahf
pop
mov
fsubp
lock
push
sub
inc
or
xor
dec
add
js
push
mov
pop
roll
ds
pop
mov
mov
adc
xchg
mov
inc
pop
adc
mov
ret
mov
or
or
jge
aaa
lods
stos
or
imul
outsb
push
add
adc
mov
scas
addr16
mov
cltd
push
mov
mov
mov
repnz
pusha
lahf
xchg
cwtl
pop
pop
mov
sbb
lret
mov
popf
adc
jno
xchg
jmp
and
stos
xlat
aad
cs
mulb
es
mov
nop
jb
cwtl
add
pop
push
shll
push
xchg
push
mov
jp
mov
in
cli
pop
dec
and
mov
jle
dec
inc
fstpl
fsubl
jge
pop
mov
jl
mov
fs
add
mov
mov
sarl
xchg
inc
test
add
mov
sub
pop
push
out
dec
cmp
mov
inc
inc
push
push
dec
aas
outsl
mov
sub
into
test
mov
pop
lret
iret
xchg
movsb
cmp
lret
andl
int3
or
inc
outsb
mov
fmuls
popf
les
je
mov
nop
popf
mov
jb
adc
fucomip
dec
arpl
lcall
jle
enter
aaa
lcall
jnp
out
sahf
mov
je
push
add
xchg
lods
xor
inc
lea
inc
sbb
dec
sub
stc
aad
jge
dec
pop
cmp
dec
in
ja
adc
js
push
je
mov
dec
push
orl
rcl
cwtl
imul
paddw
test
adc
inc
cmp
ror
es
mov
fimuls
push
repnz
cmpb
icebp
and
mull
ljmp
mov
lret
mov
or
ret
das
pop
adc
dec
mov
or
hlt
test
xor
sbb
jo
lcall
pop
dec
jg
loop
inc
adc
cmp
adc
xor
dec
std
out
lea
fcompl
je
pop
fistl
dec
cmp
mov
out
nop
outsl
shrb
dec
js
ljmp
movsl
mov
es
jecxz,pt
adc
mov
bound
mov
cmp
push
inc
fstpt
inc
push
and
subl
mov
int3
xor
pop
push
mov
jne
adc
and
outsb
add
pop
out
pop
into
xchg
mov
test
mov
hlt
add
into
scas
sub
dec
sbb
mov
insl
mov
stc
xchg
xor
xchg
adc
icebp
lock
cmc
rol
sbb
jo
cmp
repz
cmc
test
stos
in
cld
jecxz
add
inc
sbbb
dec
mov
addl
out
cmpsb
add
or
xchg
mov
xchg
xchg
cld
cwtl
out
sbbl
dec
cmp
or
push
xchg
mov
mov
inc
clc
mov
call
insb
rorl
pop
pop
sub
loop
stos
fidivrs
adc
xchg
lock
jmp
sbb
iret
sub
xchg
sub
loopne
aam
adc
rorb
aaa
clc
add
mov
insb
mov
mov
scas
clc
lret
mov
mov
lods
xchg
xchg
or
pushf
pop
lahf
cld
iret
pop
es
add
loopne
dec
mov
xor
lods
in
sbb
or
pop
jbe
jb
xor
jmp
int3
popa
or
jge
pop
ss
mov
add
int3
sbb
mov
pop
mov
stos
nop
aas
mov
sub
stos
clc
pusha
in
dec
aas
or
out
cmp
mov
iret
inc
jl
inc
test
and
mov
dec
push
sti
into
sbb
stc
add
xor
add
xchg
add
je
scas
xchg
mov
jnp
psubsw
lock
imul
or
jle
sti
aad
call
hlt
lret
popf
pop
mov
mov
jl
dec
push
int
scas
jmp
mov
stc
push
mov
outsl
add
jb
xor
or
inc
fwait
pop
hlt
or
or
loope
mov
cli
sahf
sub
loope
fstp
decb
lods
jne
mov
mov
daa
bnd
ja
jns
dec
mov
stc
and
les
push
or
pop
mov
or
jle
lret
ss
push
adc
stos
jae
lret
out
sti
push
adc
cmpsl
sti
repz
fcomi
push
pop
leave
into
push
jnp
lahf
push
lret
adc
clc
imul
push
mov
inc
lahf
xchg
xor
das
jge
fsubrs
fcompl
shlb
sbb
aam
mov
sub
fnstcw
cmpsb
adc
popf
icebp
mov
inc
adc
imul
adc
ja
rcll
adc
xchg
mov
and
adc
aam
adc
imul
mov
mov
xchg
mov
outsb
xchg
sbb
lret
fs
sbb
bound
xchg
movl
jp
adc
in
inc
or
pop
js
mov
repz
sbb
outsl
and
jg
or
jb
adc
int3
jge
sbb
lret
jo
scas
inc
cmpsl
movsl
or
mov
jmp
inc
pop
and
xchg
mov
jl
cld
int3
lea
xlat
aas
push
cmpb
sbb
xor
sub
in
add
je
push
idivl
std
loop
scas
adcl
iret
adc
sahf
aas
lret
out
sbbl
arpl
and
jmp
cmp
mov
cmp
sbb
cmp
mov
xchg
pop
mov
sub
jns
inc
adc
adc
lcall
xchg
or
sbb
sub
test
jbe
es
sub
pop
mov
pop
test
jmp
cld
mov
ficoml
cmp
imulb
iret
iret
lcall
clc
adc
add
fiaddl
fdivs
jae
jns
pop
inc
je
sbb
jae
dec
or
add
insl
and
dec
ret
lods
loop
repnz
fnsave
sub
add
insl
and
dec
ret
lods
loop
repnz
fnsave
lods
bound
adc
and
dec
ret
lods
out
repnz
fldl
sub
add
insl
mov
mov
repnz
cmc
jne
adc
dec
xor
mov
data16
jle
adc
push
and
out
add
mov
movsb
rclb
and
push
add
ss
stos
push
push
inc
jb
mulb
lock
cmpsb
rcl
rolb
incb
inc
jo
pusha
sbb
inc
push
mov
mov
mov
loope
iret
sahf
loop
xchg
and
arpl
jb
xor
pusha
lods
fisttpl
mov
pop
pop
adc
xchg
lock
sbb
std
pushf
ja
or
cli
pop
aaa
in
pop
push
mov
inc
rorl
movzwl
rcll
stos
arpl
dec
mov
gs
sub
jnp
arpl
ljmp
push
add
inc
cmp
scas
in
sub
mov
mov
sbb
mov
pop
sarb
aad
arpl
add
imul
inc
push
mov
adc
jge
loop
xor
sbb
push
inc
loopne
mov
movsl
scas
push
lret
cli
loopne
lret
sub
fmulp
mov
pop
rclb
and
jo
pusha
es
int3
inc
xchg
movb
rclb
dec
data16
gs
xor
mov
mov
xchg
out
xor
inc
aaa
arpl
pop
or
push
js
push
xchg
mov
mov
mov
and
push
add
push
push
inc
push
mov
mov
lock
cmpsb
rclb
and
push
add
ss
es
push
inc
push
mov
mov
lock
cmpsb
rclb
test
stos
scas
int3
add
fnstenv
xlat
mov
mov
insb
jns
push
mov
add
sbb
popl
sarb
in
adc
cli
mov
or
cld
mov
adc
mov
lret
dec
out
popf
addb
mov
lods
xor
mov
pop
xchg
cmp
out
push
cltd
roll
fadd
dec
jge
mov
xor
cld
xor
inc
repnz
cltd
mov
xchg
clts
pop
std
xor
ss
rcll
xor
nop
pop
sahf
fildl
mov
adc
mov
xor
xchg
inc
pop
fidivrl
sub
movsl
xor
xchg
imul
add
jp
test
addr16
mov
xorb
sbb
mov
mov
xchg
jns
fmuls
or
mov
loopne
mov
fdivr
aam
mov
cmp
sbb
pop
adc
loope
push
in
aam
lcall
outsb
fwait
cmp
mov
cmp
sti
out
jmp
dec
stos
and
xor
sbb
and
pop
xchg
aaa
lret
into
xor
mov
and
imul
inc
int
bound
jo
xchg
sub
mov
movsb
out
scas
fadd
movsl
imul
aaa
lahf
clc
lods
sub
xchg
imul
fucomip
xchg
sbb
cltd
cmp
loopne
pop
dec
jno
dec
and
mov
idivl
out
push
jns
mov
push
push
neg
bound
out
xor
in
push
jo
int3
in
and
jmp
inc
cmp
inc
std
divb
mov
sti
ss
mov
mov
out
stos
xor
cmp
loop
xor
rcr
push
cmc
push
mov
sub
repnz
jmp
lods
stos
call
lret
decb
daa
xor
mov
popf
inc
enter
xor
and
cmp
sub
test
aad
mov
repz
mov
cmp
lock
pushf
cli
push
scas
dec
or
dec
mov
push
jecxz
pusha
jmp
lods
imul
shl
push
push
xchg
mov
and
testb
subb
scas
scas
arpl
mov
lds
adc
aas
xchg
clc
in
cli
add
or
mov
xchg
push
out
pop
lret
mov
nop
out
imul
mov
jnp
test
jl
push
data16
lods
push
out
cmp
dec
jae
in
xor
xchg
dec
shlb
movsl
dec
pop
sahf
js
inc
mov
mov
sub
pop
and
jle
mov
mov
sbb
xchg
out
or
pop
pushf
inc
bound
repnz
in
push
push
jl
test
xor
outsb
and
mov
mov
jb
push
jne
mov
ret
inc
in
fcoml
sbb
push
sbbb
and
or
mov
orb
movsl
pop
cmp
dec
jns
mov
mov
mov
test
mov
int
test
ljmp
daa
mov
and
adc
insl
mov
out
inc
mov
push
adc
rorb
mov
popf
sbb
fstps
das
std
sbb
lret
jl
loope
add
or
xchg
rolb
jecxz
pop
xor
lcall
in
cmp
mov
mov
daa
sbb
xchg
add
sbb
pop
lret
test
test
mov
repnz
inc
sbb
pop
fldcw
adc
sti
pop
jno
pop
fs
flds
ja
xchg
ret
pop
es
lcall
sub
pushf
test
test
and
rcrb
shrb
mov
jmp
or
push
mov
or
xchg
cwtl
jle
xor
ficompl
clc
adc
int3
adc
cs
cmpl
pop
out
sbb
cmp
xchg
insb
sbb
mov
fistps
sti
jbe
clc
push
mov
pushf
mov
inc
bound
push
movsl
xor
adc
mov
mov
sub
dec
xchg
movl
jmp
dec
cmp
dec
lock
add
in
adc
cli
add
cmp
xor
jg
icebp
inc
movsb
or
sbb
push
lds
ror
das
mov
in
push
movsl
xor
fisubrs
push
lea
stos
jl
and
div
jo
clc
xor
mov
sub
ljmp
pop
es
xchg
inc
jns
lcall
or
sub
xor
dec
inc
icebp
not
adc
call
mov
andb
lods
push
xchg
iret
outsl
and
xchg
roll
sbb
icebp
pmuludq
push
mov
das
pop
push
xor
aad
je
adc
mov
xchg
pop
mov
sub
enter
stos
pop
cmp
ret
lahf
mulb
mov
mov
mov
shlb
mov
sbb
adc
sbb
push
inc
pop
pop
nop
push
xchg
or
push
push
lods
mov
rcll
negb
sub
movsb
pop
dec
and
inc
sbbl
and
pop
and
mov
or
out
mov
nop
nop
add
test
xor
cmp
mov
daa
mov
sahf
xlat
flds
enter
inc
jns
push
cwtl
cmpsl
scas
mov
mov
cmpb
call
dec
in
inc
cwtl
test
xchg
sbb
fwait
xlat
inc
pushl
sub
int3
and
pop
outsb
mov
adc
push
or
xchg
fwait
jno
pop
test
call
xor
imul
scas
loopne
and
fmulp
pusha
lahf
mov
push
sub
pop
lods
insb
adc
or
add
inc
jl
cmp
jnp
xchg
cmpsl
pop
push
mov
jmp
icebp
sbb
cwtl
pop
mov
inc
mov
jmp
push
outsb
out
xchg
sahf
out
jno
ficomps
or
xchg
push
loope
and
sahf
xor
dec
cmpsl
test
xchg
cwtl
push
lds
inc
pop
jecxz,pt
and
test
ret
std
in
sbb
jmp
or
push
push
push
lea
cmc
mov
cmp
cmpsl
jmp
adcb
jl
popf
sbb
mov
mov
mov
sbb
scas
sub
insb
cmp
sub
cmp
ja
mov
jl
fstps
xor
outsb
add
inc
sbb
cltd
repnz
pusha
dec
sub
jae
sahf
cmp
imul
test
jno
sahf
push
add
subl
jmp
outsb
sub
cmpsl
mov
or
pop
mov
divb
push
cwtl
push
fcmovnu
pushf
push
cmp
fisttps
pushf
outsl
test
add
cmp
jno
or
sub
pop
and
cli
imul
cwtl
mov
xor
daa
add
xchg
ret
int3
mov
das
and
pop
shl
dec
out
push
shll
sub
mov
out
and
sub
push
gs
pop
movsb
dec
dec
xor
pop
pop
ljmp
jbe
xor
fucomip
pop
arpl
or
adc
pop
pop
cmpsl
js
pusha
mov
dec
jne
inc
fmul
and
adc
jl
inc
jmp
add
sub
addr16
push
cmp
subl
inc
and
enter
lods
aam
repz
jae
jg
pop
add
add
mov
dec
push
inc
jge
mov
int3
ja
icebp
insb
add
fisubrs
shlb
mov
out
out
xchg
es
add
adc
dec
mov
data16
test
popa
jb
mov
push
dec
das
out
cli
enter
cwtl
daa
inc
fldenv
popa
ljmp
cmp
sub
jp
mov
jmp
adcb
adc
mov
mov
iret
lods
xor
cs
xchg
imul
xor
nop
loop
out
xchg
mull
fsubrs
aam
jle
push
xchg
repz
xchg
jnp
je
adc
mov
data16
shrb
cs
xchg
lea
adc
pop
cmp
pop
ss
xchg
scas
arpl
xchg
dec
dec
xchg
insl
fdivs
fwait
pop
dec
sarl
stc
cld
sarl
popf
inc
js
in
and
cwtl
jnp
cmc
sub
addr16
rorl
adc
xchg
adc
cmp
lret
sbb
xor
xchg
ds
xchg
dec
xor
push
sbb
or
cmp
aas
outsb
push
or
xor
insb
and
mov
or
cltd
stos
jae
arpl
stc
push
xor
cmp
sub
xor
clc
cwtl
int3
cmpsl
popf
jbe
cmp
push
dec
mov
inc
cmp
clc
mov
xchg
xchg
add
xor
sub
out
out
jns
adc
daa
addr16
xchg
adc
fs
inc
dec
clc
inc
out
xchg
dec
out
jl
std
fstps
icebp
xchg
es
mov
jns
int3
pop
xor
sar
mov
out
dec
cmc
cmpsl
imul
not
dec
pop
dec
push
rclb
shr
pop
mov
add
in
push
pop
xor
xchg
and
in
push
mov
roll
aam
sti
sub
movsl
hlt
fdiv
cmpsb
add
jecxz
mov
loopne
inc
and
incl
sub
test
mov
out
sub
pusha
int3
mov
ds
cmpsl
add
jle
cli
stos
lret
jp
rcrb
gs
popa
ret
mov
aaa
push
sbb
xchg
dec
jns
dec
mov
jbe
int
jecxz
push
push
xchg
pop
ret
mov
push
ds
inc
pop
mov
adc
cmp
arpl
and
in
mov
add
lds
lret
outsl
xchg
mov
xchg
mov
popf
jo
mov
jo
lcall
mov
out
aas
andl
fwait
clc
jo
scas
popf
in
dec
cld
mov
inc
cmc
xlat
mov
bswap
pop
jl
add
and
pushf
sub
lret
incb
sahf
lea
jge
pop
rcr
cli
dec
stos
addl
dec
fidivrl
jecxz
testb
pop
jge
in
mov
mov
flds
les
dec
int
adc
ret
and
and
jno
std
mov
bound
sub
jg
add
push
outsb
xchg
cltd
rolb
and
ljmp
divl
push
scas
add
test
insb
pushf
cld
pop
mov
sti
ljmp
pop
and
loopne
aad
sbb
js
sysret
in
fisubl
out
rcl
in
imul
or
aam
popf
xor
fistpl
xchg
sahf
or
xchg
lcall
adc
dec
mov
jmp
flds
es
fbstp
jbe
loope
xchg
aas
sbb
imul
arpl
and
out
daa
lcall
adcb
arpl
or
out
je
and
pop
mov
mov
xor
test
dec
fsubrl
dec
sbb
lds
inc
jl
push
outsb
inc
enter
shl
sub
pop
call
xor
test
adc
repnz
test
xor
ljmp
scas
pop
adc
pop
jg
call
iret
ret
mov
mov
xchg
jo
inc
and
mov
mov
xchg
xor
movsb
ret
pop
xorl
dec
dec
movsl
xor
daa
pop
mov
jbe
sub
inc
jnp
daa
sbbb
and
xchg
rorl
push
lds
sub
pop
mov
cs
lahf
jne
gs
pop
sbb
sub
pop
daa
mov
push
sarb
xor
mov
xchg
push
imul
shr
dec
lahf
sbb
aas
cmp
cltd
jmp
pop
mov
jbe
lret
cmp
fsubs
sub
xchg
sti
jl
push
mov
out
sbb
push
test
out
movb
inc
iret
mov
and
jge
pop
fimull
imul
insl
insl
mov
add
out
mov
gs
das
ljmp
fldcw
mov
loope
icebp
mov
int
mov
add
shlb
das
dec
dec
push
xchg
call
sub
mov
pop
add
leave
lcall
dec
mov
xor
push
inc
push
and
dec
adcb
xchg
xchg
sbb
lea
cmpsb
out
cltd
sub
add
inc
shr
hlt
sbb
xor
mov
dec
pop
cmp
pcmpgtd
pusha
add
in
test
jns
cli
inc
mov
xchg
xor
std
inc
mov
jns
jno
mov
adc
fistps
push
push
xchg
dec
mov
or
les
jecxz
xor
xor
fwait
shll
lods
push
rcll
mov
xchg
scas
xchg
out
in
popf
and
sub
loop
iret
shll
pop
pop
sbb
jl
inc
clc
and
cld
inc
lock
aam
sub
mov
shlb
jmp
dec
sbb
test
or
into
bnd
hlt
jmp
fisttps
push
adcb
out
mov
jnp
in
mulb
jno
mov
cmp
call
or
fistpll
dec
push
mov
out
popf
add
cmp
dec
lods
shll
xchg
nop
adc
shll
jnp
stos
push
daa
sub
adc
push
mov
lods
push
stos
cli
lahf
pop
punpckhdq
daa
mov
sub
pop
inc
gs
mov
lea
in
fucom
jp
lret
loop
ja
dec
mov
fmuls
cwtl
data16
xor
shll
jmp
xchg
pop
std
cmp
test
fcoml
sahf
jmp
jg
rorb
test
mov
jae
push
or
dec
paddsb
or
fistps
icebp
cmp
cmp
movsb
or
sbb
or
into
loope
cmp
inc
jl
dec
cmp
jmp
mov
outsb
js
push
cli
mov
pusha
fcoms
mov
mov
inc
jg
pop
xchg
xchg
stc
xor
push
dec
ss
and
popa
ficoml
insb
sub
dec
sbb
jb
xor
test
lock
cmp
push
js
pop
enter
pop
sbbl
sbbl
jns
mov
mov
test
out
mov
pop
mov
repnz
aam
cmp
pop
jp
cmpsl
or
jb
dec
mov
add
in
push
xor
lahf
inc
push
test
push
imul
pop
es
cmp
hlt
cmp
pop
add
push
in
inc
js
loopne
xor
gs
inc
popf
sub
mov
icebp
adc
addr16
push
jae
lret
insl
call
cmp
pop
jne
xchg
push
dec
push
pop
mov
icebp
jp
out
sub
jno
fidivrs
call
fdivrp
mov
mov
movsl
int3
mov
cmpsb
cmp
shr
loope
push
aas
rclb
cs
mov
nop
and
pop
fiaddl
nop
jmp
lea
repz
hlt
mov
xchg
test
imul
xor
pop
inc
add
in
movsb
adc
dec
sbb
pop
out
enter
and
mov
cmp
adc
mov
add
aad
mov
jae
fistps
jo
pop
or
mov
jbe
neg
rolb
daa
in
cmc
mov
movsl
inc
lods
fildll
inc
movsb
jo
sub
and
or
xchg
xchg
mov
lds
pop
les
xchg
dec
inc
arpl
jne
test
subl
mov
mov
jle
pop
xor
jne
sub
jmp
ret
or
lock
test
adc
aaa
cmp
pop
mulb
aas
aad
ret
lds
test
out
mov
out
or
daa
pop
data16
jno
pop
sub
imul
imul
jns
and
xor
in
jmp
adc
cmp
dec
dec
cld
nop
dec
call
mov
adc
int
mov
rcrl
push
mov
arpl
mov
adc
push
daa
cmpsb
mov
int3
or
fbld
mov
sub
hlt
xchg
xor
outsl
pop
push
sub
xchg
cmpsb
pop
aad
arpl
mov
xor
movsl
jecxz
popf
imul
pop
fsubrs
jle
scas
ret
cmc
call
movsb
cmp
repz
mov
jnp,pt
cmp
mov
inc
shll
dec
mov
neg
out
dec
pop
mov
movsb
iret
dec
das
push
pop
inc
push
fimull
lcall
les
aad
inc
test
inc
jae
or
pop
push
sub
xor
dec
jnp
sbb
notl
push
lea
push
mov
sub
xchg
lods
xor
dec
inc
mov
mov
outsl
mov
or
cmp
popf
pop
and
dec
add
into
add
adcl
jge
arpl
jmp
cmp
sub
popa
in
out
shlb
pop
mov
je
cld
xor
cmp
add
iret
nop
cmpsb
cltd
adc
imul
push
stc
and
imul
fcmovu
int3
cmpsl
dec
stos
mov
scas
fstpt
sbb
shr
cltd
jmp
ss
and
in
push
mov
add
paddusb
inc
adc
jge
and
sub
jg
fcomps
adc
push
aam
mov
test
pop
mov
jecxz
cmc
gs
jae
jae
push
stos
repnz
xchg
adc
adc
or
cld
out
iret
stos
push
scas
out
cmc
mov
jmp
fsubrp
scas
push
cmp
loopne
pop
jge
xchg
and
cmpb
add
push
add
push
mov
push
pop
push
daa
stc
pop
mov
repnz
xor
sbb
bound
sbb
rclb
cli
cld
cmp
jmp
out
sub
adc
ja
sbb
push
scas
xchg
and
sbb
rol
ret
lods
testb
and
mov
sub
fsubs
gs
je
xchg
stos
sbb
mov
mov
in
jmp
leave
loope
subl
repnz
lret
rclb
mov
hlt
adc
bound
xor
daa
shl
jge
jbe
jbe
jae
and
xor
fbld
fcmovne
pop
loopne
jge
cmp
inc
lcall
jae
push
subb
inc
jnp
clc
and
mov
data16
jl
jecxz
aaa
in
cwtl
sahf
jp
rcl
push
out
addl
dec
push
pushf
fimuls
repz
loop
dec
jmp
add
sti
stc
sbb
cmp
pop
testb
stos
mov
test
cmp
xlat
icebp
dec
push
mov
lret
test
dec
add
xchg
jp
in
cmp
aaa
sub
push
and
ficoml
rcll
or
mov
ds
sub
and
rclb
fnstcw
mov
add
mov
popf
loop
dec
adcb
outsb
and
xor
push
dec
and
rcr
xor
les
jg
iret
jns
fsubs
jo
int3
jns
sub
add
mov
xchg
btc
cmp
lahf
ds
sub
imul
sub
sbb
dec
and
lock
outsl
jne
add
std
shl
gs
jae
repz
mov
aas
fwait
xchg
mov
sbb
data16
mov
xchg
or
pop
push
jo
dec
ja
movsb
fidivs
push
jns
dec
and
popf
mov
sti
and
imul
and
mov
adc
sbb
adc
pop
fidivs
xchg
mov
fmull
lahf
mov
sbb
jmp
mov
loop
out
pop
sahf
xorl
mov
jns
jne
out
leave
mov
imul
aaa
imulb
jp
mov
dec
adc
lock
or
and
inc
and
xor
das
adcl
dec
in
jnp
hlt
jg
inc
cs
cmp
jecxz
sbb
and
jo
mov
test
jg
bound
push
in
faddl
mov
mov
cmpb
add
mov
shll
sbb
jmp
mov
or
or
lods
popa
aas
out
or
xor
and
dec
push
mov
nop
mov
cs
pcmpgtb
adc
out
ja
dec
lret
xchg
cli
mov
mov
loop
outsb
frstor
cmp
pop
out
add
stos
inc
pop
lret
jp
scas
in
inc
xchg
lods
in
pop
rcll
mov
xchg
cwtl
lods
push
sarb
jb
call
ss
es
push
inc
push
mov
mov
lock
cmpsb
rclb
and
push
add
ss
es
push
inc
push
mov
mov
lock
cmpsb
rclb
and
adc
add
ss
mov
inc
push
mov
mov
lock
cmpsb
shlb
and
push
add
ss
es
xchg
inc
push
mov
mov
mov
ds
jns
outsl
xchg
dec
cmpsl
pop
xlat
jnp
push
xlat
pop
leave
pop
pop
out
out
aaa
iret
daa
fists
inc
pushl
ja
rep
xchg
dec
cmpsl
pop
xlat
das
aas
testl
pop
call
daa
fists
scas
inc
mov
das
outsl
jne
and
das
cmpsl
aas
jmp
shll
pop
mov
xor
lahf
stc
outsl
lret
or
jmp
int3
cld
push
repz
push
test
addr16
arpl
addr16
aaa
pop
and
jp
push
loope
jae
mov
fcmovnu
test
sbb
cwtl
arpl
ret
mov
xchg
das
pop
add
lret
inc
scas
add
nop
out
jle
dec
dec
dec
sub
das
or
out
push
faddl
ljmp
inc
out
jbe
addr16
xchg
cltd
cmp
jl
insb
dec
aaa
stos
test
aaa
xor
adc
cli
mov
push
dec
pop
sub
in
cmp
rcrb
mov
push
adc
ja
fs
int3
outsl
sarl
dec
cmpsl
pop
xor
mov
pop
shr
popf
incl
pop
fistps
scas
dec
mov
incb
cmc
lods
ret
or
sbb
push
outsl
pop
adcl
inc
mov
ret
push
or
loop
lds
or
pusha
mov
jo
push
xchg
aaa
cltd
pop
mov
shrb
push
cli
es
sti
aas
jmp
cmp
sub
out
pop
out
pop
pushl
iret
daa
fists
inc
mov
xchg
outsl
xchg
dec
cmpsl
pop
xlat
das
aas
testl
pop
pushl
iret
daa
fists
inc
mov
xchg
outsl
and
mov
das
sub
div
cmp
cltd
lret
in
scas
jle
pop
in
imul
leave
xor
bound
xor
mov
cmp
add
int
outsl
lea
xlat
imul
rcll
cld
aaa
add
jne
pushf
pop
adc
imul
lock
dec
mov
clc
mov
mov
or
mov
add
and
in
fs
dec
cmp
add
mov
mov
mov
scas
sbb
aam
outsb
cltd
in
loop
jp
lcall
push
lds
xor
jbe
fs
lahf
into
js
mov
sub
push
mov
or
lods
push
mov
xchg
jo
jo
and
out
sub
rorl
fldt
adc
int3
cld
lahf
xor
hlt
xchg
push
xchg
enter
outsb
mov
inc
das
add
mov
inc
cmpsb
inc
insl
sbb
mov
int
add
aaa
outsl
rcrb
xlat
ficomps
xor
repz
popa
movsl
les
add
fwait
mov
add
insl
fs
daa
lds
mov
pop
jmp
pop
cmp
jb
test
and
fadds
js
add
outsb
adc
iret
ret
add
dec
subb
inc
test
ficoml
sahf
cmp
sbbb
xor
inc
lods
push
and
arpl
repz
push
add
inc
mov
adc
dec
outsl
adc
fwait
jbe
aad
mov
lock
pop
push
adc
insb
add
test
popf
pop
fisttps
or
aam
mov
jp
fsubrl
push
push
clc
dec
loope
jg
andb
int
clc
popa
sbbl
cmp
pop
dec
adcb
dec
data16
repz
xor
dec
xchg
xchg
add
aas
mul
scas
daa
ja
jb
bnd
je
add
cmp
mov
dec
xor
inc
fs
adc
addb
mov
sub
dec
movsl
pop
adc
adc
pop
leave
xlat
lds
ss
and
inc
push
enter
add
fldt
mov
sbb
jg
ret
movsb
daa
arpl
lahf
fbld
push
ljmp
aam
sub
incl
aam
insb
jge
cli
ror
mov
gs
rcrb
mov
push
cmp
xor
mov
mov
fnstenv
ja
jo
neg
fnstcw
addr16
cmp
cwtl
inc
aas
mov
popf
mov
push
dec
jmp
into
dec
mov
cld
movsb
and
xor
pop
mov
ljmp
cmc
aad
fwait
rolb
ficoms
jle
push
xchg
inc
cmpsb
push
sahf
jne
cmp
out
or
mov
mov
imul
jmp
mov
xlat
adc
xor
pop
clc
xchg
and
stos
inc
in
orl
insb
popf
jb
push
mov
and
xor
xlat
xchg
push
je
scas
fs
lret
jle
cmp
jge
rorb
dec
pop
sub
mov
inc
pop
divl
adcl
stc
mov
mov
xchg
xorl
pop
negl
clc
sub
clc
cwtl
ja
lea
mov
cmpb
into
les
dec
pop
ljmp
out
adc
clc
xor
lahf
add
sbb
ds
stc
cltd
mov
sarl
stos
push
sbb
inc
push
fstl
mov
daa
ret
shrb
push
jge
insb
subl
int
jecxz
dec
sahf
out
mov
xchg
mov
das
xchg
lods
je
enter
mov
mov
inc
xor
xor
cmpsb
outsb
cmp
bound
stos
sub
pop
xor
test
cmpb
inc
js
notb
ss
and
leave
cmp
pop
fsubr
adc
sbb
out
mov
je
sub
iret
mov
loopne
cmpb
dec
inc
or
rcrl
ret
jge
ret
mov
js
mov
mov
clc
cmp
lea
sbb
ret
les
dec
or
push
out
xor
call
faddl
sbb
testl
sub
add
ret
pushf
test
aaa
push
jno
push
ja
lret
mov
and
mov
mull
mov
pop
int3
es
cmc
jp
arpl
jp
push
cmp
or
shlb
in
push
shll
rcrl
lret
or
sbb
mov
sbb
cltd
mov
mov
lea
es
outsl
pop
cs
push
xor
jecxz
fldenv
xor
sub
lds
mov
xchg
mov
dec
xlat
dec
mov
idiv
push
sub
adc
hlt
clc
ret
in
dec
mov
cmp
sub
push
pusha
insb
push
xor
sub
std
push
aaa
add
addr16
out
dec
inc
dec
push
dec
in
mov
in
pop
add
add
les
push
dec
sub
insb
jns
testl
pop
out
mov
dec
daa
or
inc
sbbb
inc
stos
clc
mov
out
testb
fadd
int
dec
sbb
mov
iret
mov
inc
lock
and
add
fs
pop
jle
push
lahf
test
jno
or
lcall
mov
cltd
adc
fldl
outsl
push
int3
and
sbb
inc
test
sti
mov
xchg
je
popa
cmpsl
pop
shrb
jmp
int3
cmc
aad
xchg
lds
jge
loope
pop
ficoml
aas
xor
outsl
mov
lret
push
mov
pop
inc
aaa
xor
push
ljmp
sbb
adc
push
mov
iret
jge
cmpsb
push
ret
pop
lods
test
imull
cltd
int
fsin
xor
add
shl
and
sbb
add
fistpl
cmp
xorb
ss
mov
jmp
jno
insb
or
adc
xchg
jo
xor
sub
divl
clc
dec
xchg
jl
push
dec
jle
push
cmc
out
inc
je
dec
daa
fbstp
lods
add
orl
into
sbb
sbb
insb
inc
mov
test
xchg
jle
push
push
mov
jne
iret
dec
xchg
inc
or
push
push
fbstp
jg
mul
pushf
lods
shll
fcompl
push
dec
insl
mov
cmp
adc
mov
in
inc
mov
mov
mov
outsb
dec
mov
push
mov
repz
decl
fsubrl
jge
fs
pop
jp
adc
inc
cmp
pop
mov
pop
cmp
or
sahf
pop
aas
das
ljmp
imul
pop
sub
xchg
mov
xchg
or
cmp
sbb
mov
shlb
fdiv
icebp
loope
mov
xor
adc
clc
popa
sbb
or
adcb
mov
push
sub
rclb
xchg
dec
jbe
xchg
sub
dec
xchg
push
push
jb
out
jns
aas
rcr
scas
mov
scas
add
inc
outsb
mov
inc
sbb
nop
cli
xor
test
mov
repz
ret
dec
bound
mov
and
negl
sarl
or
data16
sub
in
sahf
xchg
daa
push
dec
and
mull
dec
mov
aaa
lret
ja
leave
ja
or
lcall
push
mov
fisubrl
sarb
int3
xor
push
ret
out
adc
js
or
andl
or
loope
lods
mov
pop
scas
dec
test
xchg
adc
add
es
xchg
in
mov
insb
adc
js
nop
inc
or
xchg
idivb
ds
fsts
push
cmp
jne
imul
dec
hlt
mov
imul
push
pop
mov
inc
cltd
mov
mov
jae
pop
das
pop
mov
jl
push
mov
fxam
arpl
out
lds
popa
xchg
fyl2x
xor
in
std
cld
ss
mov
shrb
stos
push
adc
out
stos
jg
or
sub
cmp
mov
and
add
lods
out
stos
or
icebp
adc
test
cmp
das
jb
pop
outsl
ss
cld
loope
in
aas
ss
mov
push
push
test
jl
sbb
sub
inc
out
js
shl
nop
fcmovnu
and
jne
mov
testl
mov
add
es
lahf
push
enter
push
fcoms
repnz
movsl
rolb
repz
ljmp
mov
roll
lods
in
jne
in
add
loope
fisttpll
cmpsl
and
outsb
ret
push
repz
mov
inc
push
cmpsb
or
mov
fmuls
lods
out
or
push
mov
push
or
xor
dec
xor
inc
pop
lret
add
les
negb
and
negb
inc
jmp
lds
cs
cmp
out
sub
xchg
rolb
arpl
mov
lods
mov
imul
clc
jp
scas
and
dec
shr
out
popf
stos
sbb
repnz
ss
xor
icebp
adc
pop
hlt
or
mov
mov
mov
jnp
je
sbb
cmp
sbb
aaa
aam
sbb
outsb
cltd
leave
dec
mov
fmull
add
push
jecxz
jae
xchg
push
stc
gs
push
push
or
pop
push
imul
sbbb
xchg
dec
movsb
addr16
xchg
jle
clc
sarb
adc
pop
mov
shrl
xor
cmp
cli
push
clc
sub
jnp
int3
xchg
pop
scas
sub
ljmp
jp
aam
dec
inc
cmp
mov
mov
cmp
xchg
mov
and
xlat
shl
push
mov
fnstenv
movsl
iret
push
mov
add
stc
insb
mov
bound
xchg
in
dec
jecxz
sbb
adcl
mov
cmp
imul
popa
es
fistps
cwtl
js
push
jae
pop
sbb
sqrtps
ljmp
fld
sub
into
cmp
in
fwait
mov
aad
jae
loopne
jecxz
mov
or
mov
mov
sbb
sahf
add
inc
push
outsb
lahf
hlt
out
jg
dec
loopne
xchg
jmp
mov
mov
inc
popf
loope
jno
into
adc
sysret
ss
cmp
jne
aad
mov
xorb
cmc
gs
sub
jl
dec
push
pusha
push
out
aas
aas
pushf
mov
sub
jae
xchg
and
pop
mov
jae
sub
das
jb
adc
andl
shll
loopne
iret
jmp
sub
xor
mov
sub
adc
test
aad
out
gs
in
sbb
sahf
test
fldenv
xchg
in
push
push
dec
pop
movsl
adc
inc
sbb
mov
mov
xchg
jecxz
les
les
outsl
push
out
pop
adc
add
test
dec
xchg
add
mov
push
lcall
fisubrs
sbb
data16
icebp
test
inc
pop
jecxz
add
pop
mov
inc
ja
testl
jle
jo
rolb
ds
nop
push
inc
cmpsb
int3
daa
xorl
cmpsb
fdivs
pop
sub
lahf
cmpsb
mov
in
out
fstpl
pop
xchg
andb
sbb
fimull
pop
in
mov
in
mov
dec
stc
fldl
cli
cltd
mov
mov
and
push
mulb
push
mov
cmpsl
arpl
or
popa
lcall
divb
sahf
jg
addr16
int
test
aas
int3
sub
push
and
xchg
icebp
mov
jae
pushf
ss
ja
sub
push
lahf
jecxz
and
lea
add
cmpsl
fmull
mov
lahf
jmp
inc
call
mov
lret
ja
dec
dec
sbb
adc
jne
push
cmp
jnp
orl
ret
mov
pop
cld
insb
jmp
xchg
lcall
cmpsl
push
add
mov
dec
xor
and
aam
push
test
inc
push
dec
sub
out
sub
sbb
stc
gs
ret
imull
fisttpl
outsb
inc
mov
pushf
mov
pop
and
lock
mov
xchg
dec
iret
push
data16
push
push
push
inc
leave
adc
int3
data16
xchg
and
adc
sbb
and
dec
mov
mov
loop
inc
push
adc
sub
in
or
shl
and
shrl
pusha
test
cmpsl
iret
and
adc
mov
cld
orb
xchg
aam
sub
popa
xor
pop
rcll
test
ja
mov
jbe
mov
xchg
rolb
inc
adc
pop
mov
xor
gs
mov
fldcw
fstps
in
dec
adc
push
call
jg
mov
inc
out
adc
insl
lods
xchg
and
jno
inc
fistps
imul
dec
aam
stos
mov
xlat
pop
fisubs
add
std
mov
pop
loopne
mov
dec
int
xor
adc
in
pop
cmp
jo
cmp
loop
add
fsubrs
cwtl
call
outsl
xchg
bound
rolb
jp
push
clc
sbb
mov
add
and
sub
fdivrs
daa
lods
mov
pusha
push
int3
xchg
add
out
nop
mov
jmp
rorb
fsubrl
xchg
movl
dec
shrb
xor
aas
inc
mov
ds
pop
adc
jns
call
mulb
pop
mov
movsb
xor
adc
mov
decb
into
push
jns
out
mov
insl
lock
and
jns
and
and
pop
sub
mov
pop
jns
sbb
test
lods
es
mov
jns
popf
test
lret
xorb
cmc
push
push
ljmp
add
fcoms
xchg
out
inc
or
popa
icebp
sti
pop
aas
enter
sbb
push
imul
pop
scas
cmpl
in
cmp
cmp
in
xor
pushf
pop
repnz
push
sub
orl
clc
mov
mov
lea
inc
push
cmp
ds
enter
adcl
adc
jno
movsb
sahf
pop
pop
and
pop
jmp
aaa
ljmp
sbb
stc
mov
outsl
xor
jae
pusha
in
add
jb
xor
sbb
cs
sub
jmp
add
shrb
inc
aad
pushf
pushf
lock
daa
aas
xor
push
dec
popf
jns
cmp
loop
cld
test
lods
pop
or
xor
mov
call
push
ficoms
mov
dec
mov
push
idivb
or
outsl
add
xchg
adc
jl
lods
push
or
push
lods
ss
into
gs
shll
and
xor
xchg
testb
pop
scas
pop
daa
xchg
dec
les
mov
jo
push
add
mov
or
shl
into
push
les
adc
ret
cmpsb
out
sub
arpl
cmp
jecxz
lret
inc
mov
test
outsb
je
jns
imulb
and
test
sarl
ret
cltd
adc
aaa
mov
ja
daa
push
insl
sahf
stc
sarl
orl
sub
cmpsl
inc
inc
ds
add
pusha
inc
test
jno
jns
out
imul
daa
aad
bound
pop
pop
pushf
in
add
addb
cmc
sub
xchg
inc
dec
jecxz
pop
rolb
push
xor
xor
jb
pop
aad
scas
test
jb
in
shld
pop
adc
sub
pop
movsb
push
mov
fstpt
cmpsb
cmp
ficomps
loopne
cmp
mov
or
repnz
outsl
mov
push
dec
mov
fwait
add
ja
fidivrs
cs
arpl
loopne
std
loop
insb
fcompl
loope
xchg
adc
insl
lcall
dec
lods
sbb
sti
jg
sbb
lahf
cmp
aas
fildl
aas
push
popf
stc
cmp
sub
inc
sub
sti
divl
push
stos
lret
outsb
jb
and
cmp
inc
pop
pop
pop
sub
inc
stos
iret
mov
push
loopne,pn
je
fst
push
shrl
rcr
imul
pop
cmpl
push
or
add
arpl
icebp
inc
das
imul
push
in
inc
push
push
cmp
aaa
cmpsl
and
add
stos
addr16
push
test
mov
ds
aas
inc
pop
sub
pop
popf
cmpsb
jl
test
in
shll
xchg
movsl
sbb
cmp
jg
cli
sub
ds
repnz
and
in
out
fwait
cmc
loopne
stos
jmp
xor
push
xchg
xor
cmp
pusha
sahf
sub
shl
jb
in
aaa
icebp
movsb
cld
subl
insl
cmp
aam
call
sbb
andb
gs
mov
dec
lods
inc
sub
out
xlat
pushf
popf
mov
mov
sub
inc
or
pop
pop
jae
cvttps2pi
iret
imul
sub
in
add
mov
fbstp
cltd
cmpsl
fsubrs
pushf
sarb
mov
mov
aad
outsb
mul
fbstp
mov
and
test
mov
xor
jg
stos
test
in
mov
xor
mov
jp
push
add
shufps
cltd
pop
cmc
flds
rcrb
cmp
add
fisttpll
out
push
idivb
pop
addr16
jle
ljmp
arpl
xchg
xor
push
ja
push
add
xchg
lods
mov
movsb
lahf
xchg
sbb
push
add
or
inc
pop
xor
sahf
jecxz
dec
clc
mov
jne
mov
fildl
pushf
clc
jbe
adc
fnsave
mov
sti
or
xor
adc
std
pop
xchg
das
sbb
in
adc
mov
mov
xlat
cli
jle
pusha
add
mov
das
xchg
out
jmp
jmp
jl
cmp
ljmp
into
sti
int
fsincos
out
mov
inc
ret
push
dec
mov
lds
icebp
lock
mov
rclb
and
xchg
out
insb
aaa
das
add
lods
fbld
adc
adcb
mov
call
jb
inc
dec
or
icebp
inc
add
nop
push
push
sbb
les
dec
insb
aad
fcoms
in
jo
mov
mov
adc
imul
mov
mov
dec
loope
or
jns
push
sbb
test
lret
popl
jae
test
jns
push
js
xor
lock
pop
mov
insl
or
mov
adc
daa
into
xchg
pusha
aaa
into
cwtl
aaa
faddl
inc
xchg
push
add
push
cli
imul
and
js
repnz
push
fwait
ds
test
fsubs
mov
out
push
lret
rcrb
ljmp
das
and
fstpl
sbb
jg
jg
sub
loopne
adc
sbb
pushf
fwait
xor
bound
mov
jge
out
fwait
in
addb
vpaddw
jnp
outsl
mov
sbb
dec
test
push
repnz
test
scas
daa
gs
int
decl
push
enter
addr16
js
pop
cmp
fnop
scas
cwtl
and
adc
rorb
dec
add
into
ret
push
xchg
pop
into
sahf
sbb
cmpsb
cmp
jmp
lret
movsb
inc
and
dec
jne
es
orl
lods
test
into
push
fstps
mov
pop
lock
mov
jne
orl
pusha
jae
mov
mov
cwtl
mov
mov
cli
clc
fdivrp
das
xchg
ja
fs
push
push
testb
mov
sbb
call
jl
int3
push
mov
ret
xor
mov
fdivr
sub
inc
dec
add
mov
sub
jg
xor
inc
push
adc
fdivp
data16
dec
es
mov
lods
cmpsl
sbb
out
arpl
or
sub
cmp
push
or
daa
push
call
lea
jge
mov
cmp
ficomps
xlat
idivl
dec
and
xor
aam
cli
push
testl
loop
mov
xor
js
add
adc
jg
dec
cmpsl
pop
xlat
das
aas
testl
pop
pushl
iret
daa
fists
inc
mov
xchg
outsl
xchg
dec
cmpsl
pop
xlat
das
aas
testl
pop
pushl
iret
daa
fists
inc
mov
xchg
imul
inc
das
aas
testl
pop
inc
iret
daa
fists
push
mov
subl
in
dec
xchg
das
xlat
mov
pop
adc
push
popf
iret
daa
test
daa
iret
inc
mov
pusha
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
xchg
incl
iret
arpl
ljmp
pop
daa
dec
push
ds
packuswb
xchg
incl
iret
xlat
mov
out
pop
jg
outsl
aaa
pop
sub
pop
ja
ja
addr16
fistpll
scas
out
lahf
out
push
jg
dec
push
jns
jae
jp
js
mov
lahf
mov
shrl
ss
and
mov
mov
pop
scas
loopne
lret
push
js
iret
mov
inc
std
scas
and
jb
xchg
outsl
cs
lret
mov
push
je
cmpsl
cwtl
pop
push
or
inc
popa
jl
daa
dec
inc
jg
outsb
mulps
adc
addr16
xchg
jb
cli
jle
sbbl
xchg
out
pushf
addl
add
inc
iret
cld
push
vmptrst
or
cmp
inc
ret
filds
into
pop
pop
add
mov
inc
aas
mov
out
jg
addr16
lock
pop
sub
lds
adc
mov
sub
adc
adc
ja
addr16
lcall
iret
sarb
push
jg
outsl
das
pop
ds
dec
aas
pop
das
insl
pop
addr16
sti
jmp
xchg
rcrb
mov
sti
pop
packssdw
or
aas
push
dec
and
insl
or
xchg
out
fcoms
ljmp
bound
push
pop
sub
add
pop
repnz
iret
mov
scas
negl
pop
outsl
aaa
pop
daa
dec
push
aas
inc
das
ja
addr16
xchg
mov
cmpsl
iret
xlat
mov
out
pop
jg
outsl
aaa
pop
daa
dec
push
aas
inc
das
ja
addr16
test
or
movsl
sub
enter
outsl
inc
jno
sub
adc
or
js
mov
aad
mov
popa
jae
sub
lret
int3
xlat
push
sbb
aas
fadds
neg
xor
mov
sbb
subl
pop
cmc
decl
pop
cmp
mov
xlat
mov
push
scas
mov
dec
inc
mov
jnp
lods
out
cmpsl
movsb
push
pusha
bound
pushf
aam
and
mov
sbb
cs
mov
jl
mov
lods
xor
in
pop
push
inc
cmp
std
push
cmp
mov
sbb
lods
idivb
add
lds
in
lock
aam
cmp
test
push
sub
mov
xchg
imul
scas
push
test
mov
jne
xchg
lret
mov
icebp
adc
int3
push
jo
movsl
jo
decb
pop
loopne
push
pop
lahf
adc
scas
ljmp
pop
sbb
add
in
dec
loop
pop
mov
cld
adc
les
out
dec
fmull
jl
sbb
jl
clc
call
mov
scas
scas
in
lahf
push
into
mov
test
push
pusha
mov
lahf
dec
push
out
jge
call
mov
addb
ret
sti
add
cltd
enter
push
stos
xor
repnz
jle
and
sbbb
mov
sbb
xchg
cltd
mov
out
fidivrl
ds
lock
lock
adc
dec
sti
lret
sub
pop
mov
movsb
adc
imul
imull
dec
or
ret
cs
lds
fwait
mov
and
adc
insb
xchg
cltd
std
jmp
jg
mov
pop
test
lret
mov
dec
cltd
lock
dec
mov
mov
or
pushf
push
popa
pop
sub
orb
sbb
pop
stc
push
add
mov
dec
mov
pushf
in
pop
sub
xchg
hlt
xchg
adc
test
loop
push
jle
test
xor
cwtl
lock
aam
mov
jns,pn
dec
bound
imul
roll
mov
dec
les
mov
movsb
test
lret
xchg
jecxz
stos
mov
pushf
mov
jno
xchg
sub
xor
or
scas
in
sub
lea
aaa
and
aam
cmp
cmpsb
stos
mov
mov
jmp
inc
mov
sub
in
or
lods
loopne
in
jne
test
sarl
fnsave
aaa
fldenv
fnsave
cmc
mov
pusha
aam
je
imul
rol
daa
mov
push
dec
fwait
inc
mov
mov
stc
iret
cmp
mov
je
cmp
lods
popf
idivb
mov
mov
outsb
jne
push
sbb
loopne
dec
dec
lea
jle
add
cmp
insb
sbb
aad
sti
add
sbb
test
aam
sbb
leave
gs
fst
loopne
int3
push
popfw
and
lds
xchg
repnz
sbb
jl
sbb
popa
push
xchg
and
adc
aad
mov
in
jge
push
xchg
or
or
adc
cmp
cmp
mov
into
push
pop
jle
call
or
leave
ret
xor
mov
xor
in
fidivrl
adc
incb
push
push
xlat
outsl
or
push
fs
lods
std
or
mov
xchg
sub
int
cwtl
adc
int
xchg
les
stos
shlb
dec
and
hlt
xlat
in
sbb
shlb
je
repz
add
mov
mov
inc
int
lea
add
gs
pop
clc
xchg
adc
jl
ret
icebp
aaa
mov
lahf
or
pop
jmp
push
push
xchg
fs
and
sub
std
loop
pop
xor
inc
and
jo
test
push
add
cmp
leave
mov
cmp
sbb
cmc
dec
gs
stos
punpcklwd
jns
loop
icebp
adc
lods
inc
mov
or
icebp
call
fucom
lret
fdivl
xchg
push
jp
xchg
subb
addr16
sub
mov
pop
cmpsb
xlat
imul
sbb
xor
jecxz
test
ret
xor
dec
or
cmp
jns
into
jns
mov
rcll
ljmp
jg
out
pop
xchg
sub
xchg
dec
imul
xor
xchg
nop
in
popf
cmp
add
push
sar
int3
xor
pushf
mov
or
mov
mov
lds
hlt
xor
pop
fists
ud2
jl
ds
add
add
mov
popa
inc
fdivrp
sbb
into
rclb
jge
ljmp
mov
loop
sbb
xor
push
leave
out
scas
or
add
cmpsl
mov
out
sahf
cli
test
insb
lods
cli
into
pop
jp
jns
pop
enter
out
dec
divl
mov
mov
test
sub
sub
sbb
jne
lods
insl
imul
lcall
leave
iret
xor
stos
mov
testb
lods
test
insl
clc
std
test
and
add
pop
push
sbb
push
inc
subb
mov
and
lcall
into
ja
and
push
mov
call
dec
fsubl
iret
xchg
sti
sbb
popf
ret
cli
adc
or
mov
mov
lret
inc
mov
pop
and
dec
es
push
jne
adc
stc
and
andl
daa
out
test
pop
pop
test
and
dec
pop
mov
aaa
cmpsb
insl
jl,pn
inc
dec
fucomi
pop
jae
pop
jns
iret
aad
pop
add
pop
mov
scas
xchg
jle
jbe
popa
out
or
xchg
adc
lods
or
xchg
icebp
mov
ja
enter
pop
ss
out
adc
add
out
and
nop
repz
fldl
pop
cld
lret
js
jg
jo
mov
ljmp
add
stos
add
jmp
pop
and
mov
outsl
inc
mov
aaa
or
popf
xor
in
pusha
cmp
fwait
and
lcall
push
les
mov
test
ret
cs
xchg
mov
inc
cmp
or
fbld
dec
lods
dec
push
cs
scas
inc
xor
out
mov
mov
out
push
pusha
dec
xor
inc
lods
aaa
mov
fadd
andb
add
test
push
aad
sub
sbb
cltd
sbb
iret
lret
bnd
jae
iret
jnp
mov
mov
inc
inc
jge
ret
or
add
push
leave
jmp
call
pop
add
imul
xchg
push
pop
mov
scas
neg
cli
mov
cmp
xchg
ret
popa
cli
sbb
sbb
repnz
mov
mov
icebp
inc
push
and
gs
cmc
inc
out
stos
mov
pop
inc
loopne
subb
ljmp
mov
rcrl
mov
lds
loop
xchg
dec
daa
sbb
pop
es
loope
jbe
dec
jge
shll
scas
in
test
sbb
daa
fistps
int
insl
mov
mov
mov
test
push
and
mov
ret
add
mov
popf
pushf
jno
shrl
push
inc
mov
mov
data16
movsb
jge
popf
pop
test
dec
or
jecxz
sbb
jl
cmp
xchg
push
cwtl
das
pop
push
push
rol
adcb
sahf
icebp
out
sahf
mov
jecxz
sar
adc
push
or
xchg
dec
adc
add
mov
add
arpl
mov
cmp
cs
and
pushf
add
push
push
into
inc
orl
cwtl
test
mov
test
call
adc
inc
aas
or
imul
sti
jge
fwait
out
setbe
aam
pushf
sub
and
sub
sbbl
in
jne
mov
pop
jl
and
pop
pop
cmp
and
loope
ret
push
testl
int3
lea
or
jns
test
mov
enter
fistps
call
insl
pushf
lds
adc
xchg
lahf
mov
xor
icebp
push
stos
insb
pop
push
mov
fst
ljmp
add
xchg
inc
rolb
cmpsl
lods
xchg
ret
ret
nop
xchg
inc
and
imul
dec
sub
cwtl
mov
cmp
stos
insl
loop
sub
cli
scas
test
repnz
jno
mov
in
fmul
arpl
pop
adc
ja
loopne
movsl
jns
sbbb
push
ds
jbe
mov
xchg
lds
popa
pop
add
mov
dec
fucom
sti
inc
dec
cmp
ret
pop
xor
aad
nop
paddsb
adc
cmp
xor
roll
push
cmp
movsb
xchg
and
rcrl
mov
xchg
pop
mov
lock
imulb
sub
fsin
adc
in
push
je
fidivs
int3
push
call
push
enter
xchg
and
pop
mov
lea
in
lahf
push
mul
xlat
arpl
popf
mov
data16
mov
fst
inc
mov
cmpsb
mov
add
xor
xlat
ss
jno
push
push
inc
dec
fwait
popl
jbe
enter
shlb
mov
out
mov
pop
jae
adc
sub
aad
addr16
xor
lea
pop
shlb
out
out
lcall
jecxz
test
int3
mov
testl
sbb
aam
adc
sub
imul
adc
jo
pusha
adc
daa
pop
scas
push
outsb
pop
dec
rcrb
aad
cld
out
arpl
aas
xor
and
lcall
insb
shll
arpl
dec
imul
xchg
mov
push
jge
outsb
mov
mov
mov
int
cmp
push
and
add
dec
jo
sbb
sbb
les
xor
xlat
stc
test
jne
or
cmpsb
mov
daa
lock
movsb
hlt
jb
mov
sub
fsubrs
cltd
andl
jge
aam
enter
cmpsl
xchg
dec
shlb
repz
jle
add
cmpb
repnz
add
fisttps
push
pop
hlt
lea
pop
push
inc
sahf
out
and
iret
mov
sub
jmp
push
bound
inc
out
adc
sub
rcrl
and
out
repnz
fwait
cmc
sbb
or
popa
push
adc
pop
push
mov
in
and
xor
xchg
incl
sub
in
hlt
push
and
adc
fsubl
arpl
movsl
jbe
mov
aad
movsb
scas
dec
xchg
xchg
dec
jle
fdivrs
jge
mov
adc
rcrb
daa
xchg
mov
dec
inc
sbb
and
adc
std
pop
jle
cmp
int3
xor
iret
mov
lret
mov
and
insb
push
xor
popa
inc
hlt
aas
lock
cmc
mov
stos
jo
mov
add
iret
mov
fucomp
icebp
pushf
cwtl
mov
push
iret
mov
xchg
jle
lahf
sahf
add
mov
movsl
lock
sarl
js
sahf
adc
cmp
das
notb
xor
and
cmp
orb
ds
pop
pop
ret
les
sti
or
test
jno,pt
cmp
outsl
bound
mov
mov
mov
cmpsl
xor
cwtl
or
loope
xor
adc
xchg
jnp
xchg
jns
jp
fwait
lods
and
jbe
es
fisttps
out
out
or
push
gs
rcr
mov
repz
imul
aad
loop
insl
xchg
or
insl
jb
xor
fwait
scas
hlt
inc
je
adc
les
xchg
adcl
inc
lods
cmp
add
jno
xsha256
cmpsb
aam
out
lods
aas
xchg
or
jge
xchg
jecxz
clc
aam
lcall
jno
in
pop
stos
or
and
add
lods
loopne
sbb
mov
sbb
pushf
es
sub
xor
dec
int3
adc
pop
mov
jge
sub
icebp
lods
into
cwtl
outsb
andl
insb
or
ljmp
js
movsb
jbe
test
fcmovnb
xchg
sub
scas
test
pop
fiadds
into
sbb
dec
pop
popa
mov
mov
fwait
pop
push
arpl
adc
mov
add
mov
loop
pop
sub
xor
stos
popf
mov
pop
jne
dec
xchg
ficomps
or
inc
outsl
push
shlb
setl
movsl
push
js
test
adc
div
fcomp
stos
mov
mov
pop
std
xlat
dec
aam
int3
adc
xchg
inc
imul
sub
in
clc
rclb
iret
cmpsb
out
arpl
aam
inc
into
notl
js
mov
cmpsb
inc
sbb
cs
in
aad
xor
popa
sub
cmp
leave
sub
xor
sub
popf
in
mov
sahf
ret
xchg
or
dec
cwtl
repz
inc
data16
mov
iret
push
ret
pushf
push
or
stos
sti
add
and
xor
pop
lahf
lret
daa
mov
xor
adc
aas
dec
mov
pop
aad
leave
rcl
mov
clc
push
insl
push
jnp
jns
cmp
xchg
jmp
jae
xchg
clc
add
pop
roll
cmp
xor
test
daa
pop
movl
or
imul
andb
push
in
repnz
adc
pop
insb
mov
dec
andb
push
jo
popf
ficompl
mov
mov
das
jle
push
das
and
xor
ja
mov
pop
add
shrb
dec
jmp
sbb
call
ret
jnp
push
xor
cmp
dec
xor
stc
bound
movsb
or
daa
xor
inc
js
pop
pop
push
lea
pop
test
mov
adc
mov
shr
notl
sti
movsb
mov
cwtl
jns
sbb
mov
adc
mov
filds
mov
shrb
out
lock
roll
or
push
push
push
jns
cmp
cmpsb
fwait
sbb
or
mulb
mov
cld
push
call
stos
fldenv
adc
mov
gs
inc
ljmp
sbb
mov
arpl
or
push
inc
inc
xchg
add
lcall
xchg
add
js
xchg
dec
xor
or
in
je
mov
scas
int
xor
sbb
dec
fadds
cld
mov
push
xor
pop
mov
mov
jge
rcrl
sub
lea
ror
jmp
adc
sahf
out
fldt
fs
scas
push
jno
pop
add
mov
xor
lret
jge
sbb
push
nop
pop
push
aas
inc
and
push
mov
jp
insb
mov
ret
arpl
lds
mov
mov
sbb
mov
pusha
xor
inc
xor
jns
aad
cmp
scas
imul
mov
mov
enter
pop
push
lods
xor
xor
jl
lret
rol
jne
push
cmp
test
pop
xchg
pop
sub
scas
jp
dec
lods
loopne
cli
aam
dec
and
in
lock
daa
xchg
cmp
xor
lea
inc
or
iret
in
jecxz
push
add
imul
ljmp
dec
aaa
mov
aaa
push
xchg
mov
sti
ret
les
pop
xchg
cwtl
xor
push
jo
jo
cli
sub
jno
cwtl
cmpsl
xor
push
or
jns
and
push
add
jecxz
and
ret
dec
cmp
pop
cmp
ds
inc
mov
sub
push
stc
push
movsl
and
loopne
fstpt
push
adc
jnp
mov
andb
addl
mov
mov
sti
pusha
pusha
faddl
xor
rorl
and
pop
scas
fnstenv
clc
push
movsl
or
or
outsb
in
fdivs
sti
jo
out
xor
leave
or
mov
xchg
or
or
jbe
mov
mov
out
push
cmp
add
xor
vpmacswd
pop
call
xchg
lea
rclb
and
mov
les
sub
and
sbb
or
js
sbb
inc
cs
mov
mov
lcall
xor
push
fisttpll
push
adc
dec
in
inc
mov
clc
pop
es
push
xchg
and
dec
sarl
in
outsl
pop
jmp
imul
rcl
mov
xlat
push
inc
mov
lret
jns
mulb
sbb
repnz
xchg
mov
sarb
scas
test
and
ficoms
dec
adc
inc
xchg
clc
xlat
lahf
xchg
mov
cmp
out
imul
aam
shll
pop
aas
es
aam
cmp
icebp
adc
arpl
mov
xchg
addr16
pushf
or
data16
decb
xchg
aad
mov
add
lret
aam
out
arpl
repnz
jg
std
in
dec
std
ja
lcall
sbb
and
push
into
push
sbb
subb
jns
and
fucomi
pop
imull
imul
cltd
mov
test
mov
or
pusha
mov
dec
sbb
dec
fwait
lcall
rorb
push
adc
inc
inc
jecxz
xchg
mov
popf
mov
mov
fmull
loop
inc
jl
mov
jge
addr16
sbb
mov
fistpl
or
enter
movsb
mov
add
neg
mov
andl
dec
aad
cmc
mul
cmp
dec
ficompl
xor
sbb
lods
jns
leave
mov
ja
int3
leave
cld
nop
lea
add
sar
adc
mov
fstpl
or
mov
arpl
sbb
stos
jmp
jle
inc
mov
scas
pop
lahf
popf
out
shr
pop
sarl
cmc
pop
daa
dec
inc
into
mov
pop
lea
sub
addr16
fdiv
jnp
std
out
fsincos
ret
daa
dec
negl
mov
or
push
les
pop
mov
fs
es
pop
out
fwait
js
mov
ret
in
addr16
xor
ja
cltd
adc
fiaddl
and
stos
cmpsl
push
shll
push
jmp
mov
cmp
in
adc
addr16
mov
mov
pop
int
push
repz
enter
lret
xor
jns
add
andl
or
jmp
xor
orl
mov
addr16
rcl
repz
ja
sub
test
dec
orb
in
xchg
add
shll
addl
sbb
lock
dec
dec
inc
push
push
add
arpl
sahf
inc
pop
dec
cld
inc
cmp
test
pop
push
pop
bound
out
adc
mov
and
dec
adc
in
push
fildl
sbb
sbb
loopne
mov
lret
mov
cld
sbb
pop
adcl
and
out
rcrb
mov
mov
fistpll
ds
mov
adc
jl
lods
and
adc
insl
sub
inc
pop
xchg
loop
mov
fdivrs
mov
pop
dec
cmp
in
lea
icebp
incb
addr16
push
shrb
stc
lret
cmp
std
movsb
pop
mov
adc
sub
push
fstpl
out
dec
bound
inc
rorl
lock
sbb
mov
repz
popf
mov
call
push
adc
stos
pop
scas
sub
int
movsb
or
mov
in
icebp
pop
add
dec
ret
mov
dec
test
repnz
pop
inc
in
bound
sarl
jmp
in
add
sub
sub
dec
inc
xchg
lods
into
cmp
leave
jo
cmp
bound
sbb
cld
mov
or
mov
xlat
lea
xchg
pusha
add
add
call
inc
sbb
cmp
push
es
dec
ljmp
movsb
xchg
popf
push
cmc
ljmp
aam
in
fsubrl
outsl
scas
dec
push
lods
rorb
loop
and
jno
mov
cmpb
push
stc
ljmp
mov
xchg
fsubrl
dec
mov
fdivr
adc
mov
mov
pop
xor
sarb
out
xorb
les
cmp
mov
push
mov
push
pop
rolb
push
cmp
jno
dec
test
mov
push
inc
adc
in
fdivrl
cmpsl
loop
repnz
ds
xchg
cmp
out
cld
stc
cli
inc
adc
int
adc
mov
jge
pop
ds
and
pop
and
test
cmp
je
out
out
mov
mov
out
pop
jg
outsl
aaa
pop
daa
dec
push
aas
inc
das
ja
addr16
xchg
mov
cmpsl
iret
xlat
mov
out
pop
jg
outsl
aaa
pop
daa
dec
push
aas
inc
das
ja
addr16
xchg
mov
cmpsl
iret
xlat
mov
out
pop
jg
outsl
aaa
pop
daa
dec
push
aas
inc
das
ja
gs
test
mov
cmpsl
iret
aad
scas
ja
addr16
call
pop
daa
cmp
mov
rorb
add
ja
addr16
sti
jne
pop
or
xchg
divl
xchg
cmpsl
repz
add
ja
xor
inc
pop
inc
aaa
arpl
pop
xlat
pop
xchg
mull
xchg
mov
cmpsl
repz
sbb
ja
sub
pop
pop
dec
aaa
jnp
imul
xchg
mov
cmpsl
ret
pushf
or
arpl
or
mov
mov
or
jle
es
cmp
pop
out
mov
cltd
sub
cwtl
arpl
xor
mov
sub
or
sbb
xchg
pop
lahf
dec
js
adc
insb
pushf
enter
push
jns
xlat
adcl
data16
push
jecxz
mov
pop
inc
in
sbb
inc
adc
pop
daa
negb
inc
insl
or
push
sbb
jecxz
xchg
inc
dec
addl
mov
bound
aas
jg
insb
jb
lcall
mov
jbe
cld
mov
mov
mov
jmp
stc
or
jmp
xor
loope
cmc
fwait
adc
add
xor
inc
pop
push
aaa
arpl
push
add
idivl
xchg
mov
cmpsl
repnz
add
popa
push
inc
push
push
pop
inc
jne
push
push
xlat
in
mov
xchg
cmpsb
xchg
aam
loope
xor
jp
push
or
inc
sbb
mov
xchg
div
out
xchg
mov
rcr
test
xchg
add
sbb
jbe
jo
push
aaa
arpl
jae
add
mull
xchg
mov
cmpsl
repz
add
ja
xor
inc
pop
push
aaa
arpl
jae
add
mull
xchg
mov
cmpsl
repz
add
ljmp
int
lods
shrb
imulb
mov
notb
scas
lods
test
dec
xchg
scas
xchg
int3
jmp
ret
xor
cmp
dec
xor
stos
pop
pop
nop
jl
cmpsl
out
push
inc
sti
dec
xchg
mov
add
pushf
mov
jne
fisubrs
clc
cs
xchg
lock
data16
fsubr
inc
mov
addr16
sbb
adc
add
loop
mov
jb
test
std
jmp
jle
scas
lret
xchg
or
in
scas
jecxz
pop
je
mov
xor
cmp
adc
mul
jae
pop
add
mov
gs
adc
adc
jne
xchg
shlb
jo
into
je
cmc
mov
push
sbb
movd
pop
popa
jbe
cmp
dec
cmp
ss
fiaddl
fstpt
int
gs
dec
mov
cmp
mov
sti
push
jae
cmp
arpl
stos
xor
dec
ljmp
xorl
jmp
and
aaa
in
xchg
sbb
test
decl
hlt
dec
int3
scas
movsl
xchg
jl
add
rcr
jmp
or
lock
addb
popf
icebp
cltd
add
in
cwtl
jns
xchg
jo
or
je
daa
pop
dec
mov
jnp
mov
sub
push
popa
arpl
cmp
mov
dec
ljmp
cmpsl
jmp
jno
sbb
orb
sub
jle
and
xor
movsl
push
out
xlat
xchg
insl
inc
filds
lret
shl
lods
test
inc
inc
pop
popf
js
sbb
jne
inc
jae
jp
testl
fistps
mov
sbb
and
push
mov
je
rcrb
dec
iret
pop
popa
inc
push
fwait
xor
sub
or
jb
mov
mov
xchg
in
out
jl
pop
or
dec
dec
mov
jb
jnp
cmp
test
in
outsb
cmp
je
jae
in
lret
fdivl
jmp
xorb
pop
mov
push
push
gs
outsl
shlb
ficoml
sbb
shl
loope
mov
mov
nop
scas
outsb
dec
fdivrp
mov
push
xchg
pop
shlb
mov
push
les
mov
in
or
mov
rcr
pop
fst
out
dec
or
pop
fimuls
daa
fbstp
fdivs
jne
push
cmp
adcl
leave
in
sub
mov
ret
push
pop
cmpb
popf
xchg
sub
ret
push
insl
aam
rclb
jo
and
dec
push
lcall
cmc
push
mov
jecxz
test
adc
mov
xchg
mov
mov
cmpsl
mov
lahf
adc
jmp
dec
test
jp
hlt
pop
cmp
jne
loop
ljmp
fbld
outsl
cmc
movl
mov
jb
mov
rcrb
mov
pop
mov
loope
pop
adc
dec
addr16
outsl
test
movsl
jne
xlat
push
ljmp
xchg
jb
loope
jns
mov
jp
xor
out
mov
insb
lcall
stc
loop
or
mov
dec
mov
push
adc
aam
ljmp
out
rorb
xchg
stc
cmpsb
add
or
repz
jo
lcall
icebp
pop
mov
ficoms
iret
aad
cltd
xchg
lahf
fmull
fsubrl
adc
bound
cmp
sub
rorl
sbb
shrl
xchg
repnz
ds
std
lahf
clc
mov
inc
dec
enter
repnz
aad
sti
pop
in
or
or
cmp
cmc
fdivrl
loopne
ljmp
mov
jne
push
mov
mov
cld
lock
mov
mov
pushf
in
outsb
pop
push
add
push
push
icebp
sub
std
rorl
push
add
pop
test
xchg
or
test
jnp
in
lret
adc
frstpm(287
andb
cmpsl
xchg
movsb
xor
sub
adc
xchg
push
or
dec
xchg
xor
mov
sbb
sub
push
jmpw
adc
sahf
das
xor
insl
stos
mov
test
mov
lret
enter
push
push
pop
push
jl
addr16
push
jg
lods
push
sub
dec
add
les
lds
pop
out
push
shl
jno
aas
arpl
or
push
dec
es
cmp
xchg
cmp
add
popa
mov
les
mov
scas
in
mov
int
pop
arpl
dec
xchg
loopne
aam
out
xor
arpl
stos
mov
push
ret
mov
sub
in
mov
cltd
add
and
test
mov
lods
test
adc
imul
mov
pop
insl
stos
mov
ljmp
adc
pop
dec
shrb
push
ficomps
jecxz
popf
xor
mov
pusha
add
rolb
pmaxub
mov
aam
test
pop
mov
jecxz
ret
fldcw
movsb
repz
or
clc
jae
leave
scas
std
shrb
push
lds
pop
in
neg
push
cld
pop
insb
jo
cltd
sbb
dec
insl
mov
jl
mov
push
cmp
sub
inc
or
xor
sbb
xor
outsl
add
clc
cld
stc
dec
jle
test
add
push
mull
jge
hlt
mov
mov
push
fimuls
xchg
bound
or
add
out
cmp
inc
or
test
inc
push
data16
test
iret
or
sbb
push
jp
push
rol
cmp
pop
jb
vmovhps
ja
outsl
push
add
mov
sbb
or
jecxz
pop
add
outsl
mov
test
xor
jnp
int3
jmp
int
adc
xchg
push
lea
pop
movb
or
sbbb
aas
mov
in
dec
dec
in
ret
adc
sub
pop
sub
and
rorb
xchg
outsb
pop
movsl
int
roll
add
lods
adc
mov
cmpsb
repz
push
mov
lds
inc
lret
push
lcall
addl
mov
test
xchg
addl
jnp
xchg
mov
pop
lret
push
or
and
or
sbb
add
push
mov
cmp
xchg
mov
jg
orb
push
in
imul
xchg
mov
inc
sbb
ret
popa
insb
nop
js
push
sbb
daa
addr16
js
movsl
mov
mov
insl
cld
push
ljmp
dec
add
fcom
mov
fisttpl
ljmp
outsl
sbb
pop
rorl
mov
mov
push
pop
mulb
xchg
fildll
add
mov
mov
in
and
fidivrs
lods
imul
outsb
lods
xchg
push
pop
jp
jo
mov
mov
adc
cli
push
mov
xchg
xor
sbb
popa
pop
jae
xorl
aas
stos
insb
push
xor
cmc
stos
scas
int3
fbstp
cltd
mov
jbe
jmp
mov
pop
push
fcomip
mov
leave
jle
and
adc
jns
sub
mov
adc
inc
stos
push
movsl
sub
xchg
lea
pop
mov
cs
enter
or
mov
shlb
inc
addb
dec
mov
out
lcall
test
push
loopne
mov
mov
inc
movsl
lods
idivb
xlat
and
push
mov
xor
add
sbb
sbb
mov
pop
inc
or
sub
cmp
cmpsb
stc
add
jo
sub
push
icebp
sbb
insb
sahf
push
movsl
xchg
or
mov
out
aas
sub
lock
sbb
int3
int3
pop
mov
testb
in
xchg
out
jbe
xchg
ss
cmp
dec
ret
xchg
cmp
hlt
and
addr16
popf
mov
lods
jb
mov
stc
gs
incl
js
addr16
jne
fmull
sbb
push
mov
cli
das
mov
adc
lcall
sbb
add
dec
or
cli
movsb
mov
add
mov
mov
mov
cmpsl
imul
ljmp
pop
shll
out
sahf
mov
sub
pop
cmpsb
jnp
repnz
adc
dec
and
inc
xchg
das
mov
or
sbb
into
and
scas
adc
stos
dec
mov
mov
dec
or
inc
push
into
mov
daa
subl
icebp
aaa
das
mov
mov
cmp
jne
jg
inc
imul
push
mov
fists
pop
mov
scas
rolb
jl
out
mov
loope
inc
stc
add
xchg
mov
imul
xchg
jne
adc
inc
xchg
inc
sahf
push
jecxz
xchg
mov
adc
imul
mov
jecxz
sub
add
sbb
xor
outsl
ss
fisubrs
setle
ret
sub
aas
inc
pop
into
sub
jae
jnp
in
add
add
sub
rorl
in
ret
test
sbb
mov
sub
jl
rorb
mov
leave
outsb
xor
mov
mov
inc
addb
push
push
stos
jae
adc
cmpsb
add
mov
mov
add
xchg
mov
pop
adc
adc
int3
mov
out
and
sti
push
lods
dec
ficomps
cmp
mov
sub
dec
fs
jge
inc
shl
fcompl
lret
addl
adc
lods
cmp
mov
orb
sahf
sbb
pushf
test
mov
repz
mov
loope
sahf
push
punpckhwd
pusha
jo
dec
bnd
cmpsb
loop
jne
leave
xchg
gs
popf
cmp
add
adc
adc
rcl
sbb
lock
jl
mov
repz
xor
mov
ss
push
pop
push
sahf
jp
and
les
insb
leave
push
and
ljmp
dec
pop
and
ss
fildll
leave
outsb
sbb
cmpsb
jg
int3
lret
scas
cmp
popa
sbb
js
jg
sbb
stos
cwtl
add
mov
mov
lods
movsb
cli
popl
jp
inc
mov
dec
lods
mov
add
jmp
mov
mov
add
sti
loop
lock
mov
jp
mov
sbb
sub
ficompl
jge
stos
pusha
or
xlat
mov
jnp
loope
cmp
pusha
pushf
push
mov
stos
mov
daa
mov
push
adc
arpl
ret
mov
mov
mov
sub
cmc
inc
mov
js
jbe
pop
or
sbb
fidivs
addr16
mov
adc
pop
sbb
cmp
cmc
jo
leave
out
add
pop
pop
into
and
push
mov
leave
and
jnp
xchg
mov
cmp
mov
pop
mov
lock
in
pop
test
pop
inc
lret
imul
in
aas
add
mov
add
out
pop
imul
in
jg
sub
popl
mov
inc
roll
push
and
jne
test
stos
clc
decb
fcmove
sub
mov
fs
cmp
jb
cltd
push
add
popf
ret
cltd
jge
or
mov
sbb
movsl
js
fcmovb
rcrb
in
insl
in
movsl
out
cli
and
repz
lods
mov
mov
xchg
int3
inc
cli
inc
pop
out
loop
pusha
call
jge
in
inc
or
mov
or
dec
daa
mov
js
clc
and
cmpsl
adcl
mov
mov
mov
and
pop
fldcw
adc
bound
jge
sub
test
sbb
js
or
push
enter
cmp
aaa
out
and
pop
fwait
xor
mov
cmpsb
mov
mov
xchg
mov
cmp
jl
nop
ret
dec
icebp
mov
jns
xchg
and
adc
jmp
jmp
mov
fldenv
mov
and
es
sbb
clc
fs
clc
jne
mov
inc
mov
sbb
mov
cmp
push
sahf
cltd
sbb
rcll
pop
fimuls
adc
mov
bswap
outsl
arpl
or
popl
aas
fwait
shll
mov
faddl
sbb
nop
jge
pushf
jno
dec
pushf
push
nop
xchg
ss
sbb
cmpsb
cld
pop
lea
jp
push
arpl
sub
pop
jae
popf
push
fbstp
mov
nop
mov
adc
dec
jp
hlt
pushf
aad
and
neg
out
pop
cmc
add
orb
int
dec
mov
inc
xchg
mov
test
and
loop
in
daa
push
aas
aaa
push
adc
dec
cs
repnz
mov
test
mov
add
dec
inc
cmp
lea
pop
xchg
stos
push
jb
push
arpl
rclb
pop
popa
xor
lock
xor
out
dec
mov
add
inc
enter
std
or
xor
pop
fcoms
data16
scas
lcall
sbb
dec
mov
movsb
sar
sbb
stos
movsb
mov
or
mov
and
cld
ss
pop
and
push
rol
ds
push
fadd
or
mov
aad
cmp
stc
repnz
add
shr
addr16
adc
test
cmpsl
xor
stos
fld
mov
push
push
push
sbb
aad
xchg
pop
adc
dec
or
ss
cmpl
push
ret
mov
jo
cmp
mov
adc
stc
lods
push
hlt
add
icebp
mov
out
lods
push
sti
add
sub
dec
stc
lret
loopne
inc
lret
push
movsl
fsts
stos
adc
add
cwtl
ljmp
xor
jecxz
jp
jle
mov
adc
xor
rcl
ret
xor
mov
jmp
xor
sub
in
push
sub
mov
gs
mov
shrb
pop
popf
adc
inc
dec
sahf
push
pusha
int
mov
fcmovu
pop
std
outsl
dec
mov
pop
pop
xor
dec
insl
xchg
mov
cs
rcll
les
mov
xchg
cltd
push
jno
pop
hlt
pushf
mov
mov
popa
outsb
sbb
subl
cmp
xchg
daa
inc
jle
adc
push
inc
dec
xor
jge
dec
xchg
aad
push
call
add
adc
pop
popa
fldenv
sbb
sahf
pop
test
loopne
ss
inc
adc
dec
sbb
and
stos
push
ss
cmpb
fisttpl
shrl
rorl
nop
fimuls
leave
call
mov
or
insb
xchg
add
push
ss
ljmp
shlb
lock
sbb
jbe
pusha
inc
mov
nop
pop
stos
mov
and
sub
roll
or
rcrl
pop
mov
sarl
fldz
test
adc
jns
in
inc
es
sbb
sbb
mov
hlt
andb
lcall
pop
outsb
mov
pop
xchg
stos
das
fisttpll
pop
xor
rcrl
and
insl
les
sub
rorl
fisttps
or
or
push
push
jno
push
fs
fdivrl
out
in
mov
iret
pop
outsl
outsl
adc
or
xchg
ficomps
insb
adc
adc
jbe
add
sub
out
call
or
cmp
jp
test
jbe
ret
cmpsb
or
inc
fldenv
gs
dec
lret
mov
sbb
addr16
es
add
adc
push
pop
inc
push
leave
or
add
bsf
jb
in
rorl
sbb
shr
movb
sub
repz
mov
pop
sub
adc
aad
xchg
aas
lea
pop
sar
push
test
adc
rcll
out
inc
or
test
loope
fwait
mov
into
mov
push
lods
je
push
and
mov
rorb
mov
add
std
pop
xchg
xor
xlat
pushf
cmp
andb
sti
lds
pop
xchg
imul
movsb
mulb
adc
add
sub
sub
push
or
or
mov
fsubr
pop
add
push
lret
ret
fdivs
stos
dec
lea
pop
cmpsl
das
lds
pop
scas
mov
movsl
jbe
daa
cltd
jp
or
das
mov
jg
inc
xor
jne
out
shrb
ljmp
jb
dec
mov
mov
fiaddl
psubw
lret
ret
xchg
jp
shlb
movsl
in
sarl
mov
mov
mov
inc
jl
or
or
jbe
jo
hlt
mov
pushl
aaa
rorl
daa
clc
cwtl
lcall
push
mov
shr
and
sti
adc
jnp
push
push
popa
mov
mov
push
fdiv
sbb
popf
xlat
mov
aas
loope
xchg
mov
into
and
xlat
clc
add
cmp
mov
add
sub
or
loope
mov
mov
divb
sub
ds
bound
xchg
arpl
les
push
lret
xchg
test
jl
shlb
cmc
jg
xchg
mov
out
stc
fdivr
xlat
dec
xor
ror
sarb
cmpsl
xor
imul
ficompl
sbb
out
ljmp
push
inc
push
add
out
std
mov
orl
inc
inc
filds
xchg
push
js
mov
adc
popf
xchg
js
test
fdivr
out
lods
sarl
push
pop
gs
lods
add
pop
cmp
pusha
out
stos
aas
xchg
outsl
lock
dec
or
jl
lret
push
push
into
mov
mov
sti
pop
mov
push
add
mov
shlb
insb
add
xor
mov
test
aad
inc
scas
fisubrs
sub
xchg
add
test
jnp
or
orb
in
incl
xchg
and
adc
inc
ss
out
iret
mov
xchg
sbbl
in
daa
fsubs
cld
stos
rorb
fldenv
nop
sbb
out
mov
aam
stos
cmp
add
or
adc
pop
frstor
fmull
lret
movsl
xchg
sub
mov
or
cmp
test
in
and
adc
cmp
rcll
int3
add
pop
sbb
adc
insb
inc
push
cmc
mov
xlat
aam
xchg
mov
jno
xor
cld
cmp
xchg
or
cli
mov
imul
mov
insl
adc
pusha
dec
lret
rcrb
lcall
addr16
or
inc
movsb
add
mov
add
push
outsl
ljmp
push
sbb
adc
out
lods
mov
sahf
aad
pop
pop
popf
sub
jno
gs
mov
lds
orb
repnz
pop
jecxz
ds
ja
cltd
sbb
xchg
sbb
jle
fisttpll
sub
sti
lahf
inc
fstl
into
enter
push
cmp
xchg
sub
and
xor
dec
xchg
mov
sarb
lret
mov
repnz
adc
jp
inc
mov
pop
orl
jmp
sub
or
dec
mov
cs
enter
loopne
adc
pop
pop
loope
or
pop
lea
andl
ljmp
adc
jmp
test
roll
pcmpgtd
dec
imulb
das
inc
ds
outsb
in
dec
cmp
push
std
sbb
sti
push
fadds
lret
cltd
leave
jnp
rolb
xchg
mov
mov
scas
adc
dec
jge
cmp
add
ret
leave
shr
es
push
adc
ja
lods
mov
ss
lods
scas
xor
and
scas
aas
cmc
int3
cld
sbb
ret
mov
xor
push
in
loopne
mov
lcall
aam
pusha
inc
add
fcoml
xor
dec
sahf
dec
mov
add
idivb
push
jmp
sbb
jge
pop
shrb
negl
push
adcl
sbb
jmp
cmp
mov
inc
cmpsl
mov
in
cmpl
jno
cmp
cmp
sbb
cmp
ret
shlb
je
popw
dec
fcmovnu
outsl
jp
outsl
push
lock
mov
enter
icebp
and
rorl
inc
mov
shll
lock
icebp
jl
xor
add
jp
add
xchg
and
and
stos
loope
dec
fidivl
flds
push
mov
mov
xchg
and
fisubs
hlt
add
pusha
jnp
xchg
mov
mov
ret
jmp
xchg
push
enter
decb
sub
cs
xchg
and
clc
xchg
jns
shll
mov
jp
mov
adc
xor
inc
pop
push
aaa
arpl
jae
add
mull
xchg
mov
cmpsl
repz
add
ja
xor
inc
pop
push
aaa
arpl
jae
add
mull
xchg
mov
cmpsl
repz
add
adc
and
xchg
inc
pop
push
aaa
arpl
xchg
mull
xchg
mov
cmpsl
notl
inc
pop
ja
xor
inc
pop
push
aaa
arpl
mov
add
pop
mov
imull
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
flds
xor
or
pushf
jp
popa
xor
add
add
add
pop
add
add
repz
dec
add
add
add
push
add
push
add
filds
pop
add
add
add
add
add
add
ret
add
add
loopne
lcall
add
jecxz
jle
add
and
les
jp
jb
add
inc
add
add
popf
add
add
add
add
add
push
jb
rolb
add
add
add
add
add
add
add
add
add
add
filds
mov
add
add
pop
add
add
add
repz
add
add
add
add
sbb
jg
iret
add
add
add
add
add
mov
add
add
or
xlat
add
add
or
jp
sub
add
add
add
add
add
add
add
add
add
mov
add
and
sti
add
jbe
xor
popf
add
dec
add
add
pop
add
add
addb
add
add
add
lahf
add
mov
xchg
add
add
add
mov
add
add
add
add
add
add
inc
add
dec
add
add
add
add
lcall
add
add
add
nop
add
add
add
add
test
mov
add
add
add
add
inc
add
add
add
add
add
xchg
add
add
popa
add
enter
das
add
jecxz
ss
add
sti
add
iret
add
add
lcall
add
add
mov
add
add
add
add
mov
add
jo
sub
cmp
dec
add
add
add
add
mov
push
test
mov
add
cmp
test
bound
xor
cmp
inc
add
cmp
jp
pop
add
add
int
pusha
add
sub
test
stos
add
add
add
mov
xchg
add
add
or
pop
add
pop
add
xor
push
add
aad
or
jp
dec
add
add
add
add
add
push
push
add
add
add
add
add
add
jp
pusha
add
scas
add
mov
pop
add
sti
add
add
add
add
add
add
das
add
add
add
test
or
cmp
jb
pop
add
loopne
sbb
insb
add
inc
add
add
mov
add
add
add
dec
add
add
add
mov
add
add
jbe
xchg
in
add
sti
add
add
add
add
add
inc
add
xchg
add
add
add
lods
add
add
push
add
add
add
add
jp
testb
add
add
add
add
add
add
add
add
add
add
add
sub
test
add
mov
stos
mov
repz
xchg
push
test
cmp
mov
xchg
das
ds
xchg
xor
cmp
movsl
mov
and
xor
xchg
orb
bound
mov
push
jge
ljmp
jno
rcrl
xor
repnz
mov
cli
aaa
leave
dec
inc
mov
addb
sbb
loop
scas
into
jecxz
xor
je
movsb
movsb
mov
mov
inc
pop
mov
ss
inc
xlat
out
je
jae
mov
and
xor
sahf
cmp
sub
notb
pusha
xor
mov
xlat
jp
in
bound
dec
je
insl
imul
mov
aad
loope
scas
xor
sbb
or
lret
ret
test
test
or
dec
arpl
push
call
dec
rcll
xor
sub
mov
std
cmp
sub
sub
int
mov
aas
push
mov
test
fcmovnbe
in
add
jnp
repnz
mov
ret
pop
cmc
mov
or
mov
idivl
jb
imul
movb
sahf
inc
sbb
fldenv
cmpb
push
push
or
add
xchg
push
xor
das
dec
mov
inc
or
cmp
dec
daa
mov
mov
mov
loop
mov
cmpsb
stc
sub
mul
inc
out
mov
xor
ss
fsubrs
mov
mov
movnti
push
sub
inc
or
aam
xor
int
cmp
push
push
xor
and
xchg
inc
daa
dec
sub
fildl
inc
pop
pop
mov
sub
setb
scas
lret
or
fldt
inc
cmpsb
cmp
mov
and
add
ja
sub
sbb
dec
mov
in
outsb
enter
xchg
adc
cmp
xchg
xor
imul
aad
in
es
stos
inc
or
js
movl
or
xchg
ja
and
imul
addr16
ret
or
mov
call
out
xchg
fistpll
pop
or
mov
cltd
dec
jo
lcall
sub
aas
call
div
shlb
jmp
mov
cmp
pop
mov
pop
dec
or
pop
sbb
mov
mov
incl
inc
into
dec
cmp
cmp
insb
aad
enter
pop
or
mov
sahf
repnz
push
arpl
mov
jmp
test
ss
xor
jge
testb
inc
es
dec
ret
aad
ss
rorb
mov
sbb
jp
mov
and
into
sbb
in
mov
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
