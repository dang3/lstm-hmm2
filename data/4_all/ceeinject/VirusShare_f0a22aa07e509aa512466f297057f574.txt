call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
mov
xor
add
adc
push
mov
pushl
jmp
sti
mov
test
xchg
pmulhw
adc
aam
and
xor
add
pushl
fists
aas
mov
in
xchg
pmulhuw
outsl
les
dec
and
xor
add
adc
fs
je
inc
aad
std
movsb
aas
mov
in
icebp
jge
sub
or
sub
xor
dec
int3
inc
ljmp
addr16
and
pop
cmpsl
pusha
arpl
mov
push
jo
ljmp
rol
dec
rcr
loopne
pop
sbb
xor
aam
add
jne
pusha
adc
push
iret
das
and
push
imul
mov
inc
mov
scas
and
clc
fs
fbld
jb
test
jl
add
cmpsl
loop
mov
lret
push
push
bound
jo
int3
jl
inc
push
push
xor
sbb
js
call
inc
or
ret
xor
mov
xchg
pop
test
xchg
into
pop
insb
bound
leave
sbb
pop
hlt
sub
mov
and
add
adc
pushl
fists
aas
mov
test
hlt
add
mov
pop
jecxz
pop
adc
int3
jl
pop
jmp
lock
nop
cmp
es
ja
jo
pop
jecxz
lods
adc
negb
pop
cld
dec
icebp
aas
scas
xor
cmp
int3
sbb
repz
and
fists
aas
mov
test
xchg
pmulhuw
outsl
les
dec
and
xor
add
adc
pushl
fists
aas
mov
test
xchg
pmulhuw
outsl
les
dec
and
xor
mov
inc
popa
pop
cwtl
jg
ss
lock
in
push
pop
mov
fwait
in
mov
mov
or
push
cmp
lret
cmp
decl
jbe
mov
pop
dec
sbb
repz
add
imul
pop
in
sub
cltd
subl
loope
js
sub
mov
cmp
scas
cmp
xor
dec
addl
or
cmp
ljmp
mov
xor
test
fisttps
testb
cli
ret
cmp
fisttpl
adc
xchg
inc
loop
out
adc
sbb
fcoms
mov
sub
adc
gs
sub
cmp
mov
xchg
subb
mov
arpl
out
imul
xor
mov
loop
into
cmpb
cld
ret
and
xor
insb
ja
push
add
xor
fstl
sbb
or
and
aas
test
jno
sub
jb
xchg
nop
add
das
pop
jmp
xchg
sbb
fidivl
jmp
add
inc
ret
or
dec
jecxz
xor
cmc
jo
fldt
mov
movsl
lea
ljmp
test
call
add
sbb
sub
sbb
sti
in
movsl
push
stos
call
jno
and
sbb
and
push
cltd
cmp
or
fcompl
imul
push
pop
xchg
das
mov
aas
add
xchg
xchg
sbbl
jge
stc
xchg
fmulp
xlat
das
or
cmp
ss
or
mov
insb
xor
jo
pushf
rorl
fbstp
std
push
jo
je
dec
int
sbb
push
mov
mov
xor
pop
lods
sub
push
or
push
fwait
pop
push
pop
adc
stc
inc
arpl
sub
sub
add
jmp
fs
in
or
outsl
es
push
cmpsb
or
mov
int3
inc
add
fwait
aad
mov
xor
pop
test
add
jl
mov
stos
sub
movsb
jns
xor
lcall
pop
xchg
incb
mov
jecxz
rclb
out
push
test
mov
data16
and
cmp
in
jmp
cmp
xchg
and
mov
into
loopne
xchg
inc
pop
fs
xor
mov
mov
xor
add
mov
imul
mov
cmpsl
mov
mov
mov
pop
in
aaa
pop
loop
add
or
inc
in
bound
cwtl
or
inc
data16
xor
inc
inc
cmp
xchg
into
je
xchg
pop
ja
lahf
pushl
mov
adc
pop
call
pop
test
out
ljmp
sub
xchg
mov
cmpsb
push
stos
into
sbb
xchg
testl
daa
mov
xlat
sbbl
std
daa
xchg
sbb
inc
jle
jnp
xor
xor
aas
xchg
test
and
lahf
cmp
add
xchg
pop
push
xor
inc
loop
dec
shl
mov
sbb
lea
rorb
dec
and
xor
mov
pop
cltd
xchg
push
xchg
pop
ja
stos
xor
mov
ljmp
mov
insl
and
sub
xchg
xchg
outsl
cmp
aaa
mov
lcall
negb
mov
jb
and
clc
test
pop
ror
push
popa
bswap
sbb
imul
idivl
ja
xor
add
or
adc
leave
add
imul
jge
subl
push
fcmovnbe
roll
je
mov
xchg
dec
push
repz
sub
shll
ret
mov
shll
add
jmp
aad
inc
mov
sbbb
mov
mov
push
inc
sbb
jnp
mov
cmp
cld
imul
ljmp
std
fnstcw
aad
shlb
pop
mov
mov
xor
xor
and
mov
jle
push
dec
adc
fsubrs
lea
lock
push
jmp
mov
rcrl
lret
test
jl
inc
mov
jle
or
aas
cmp
jae
dec
cmp
and
nop
mov
out
and
push
jmp
mov
push
cltd
pop
pop
cli
jmp
mov
les
sbb
pop
mov
fidivl
cmpsb
add
cmp
les
dec
mov
lods
cmp
jbe
xchg
sub
lret
inc
inc
pmulhw
cmpsb
jae
lcall
scas
inc
lahf
jg
xor
sub
je,pn
into
mov
or
jno
add
mov
mov
stos
jecxz
jae
nop
rclb
hlt
addr16
sahf
popa
aam
cmp
dec
jl
inc
xchg
rolb
ret
jns
scas
cmp
or
mov
mov
jnp
aas
inc
mov
out
in
cwtl
sub
mov
cmpsb
dec
xlat
jbe
xchg
ss
pop
adc
mov
mov
loope
movsl
movsl
fisubl
leave
out
add
std
and
rolb
test
adc
sahf
pop
push
mov
mov
bound
shl
push
mov
imul
inc
or
int3
adc
jno
popaw
int3
sbb
xor
test
and
int3
in
or
lret
dec
fcom
shr
adc
or
ret
or
push
fmuls
cwtl
inc
push
test
insb
les
pop
loopne
push
lcall
loop
scas
mov
out
imul
in
xchg
clc
mov
lods
cmp
lods
scas
outsb
mov
mov
push
icebp
fisttpl
into
push
fimuls
mov
dec
stos
testb
xchg
mov
xchg
out
gs
jnp
sbb
jns
rep
mov
add
pop
mov
push
popa
add
xor
mov
shll
mov
dec
xchg
fwait
out
adc
insb
jecxz
lret
out
push
cmp
mov
je
jle
shl
repnz
jg
sub
loope
push
jbe
push
adcb
mov
lock
mov
cmc
xchg
mov
adc
mov
hlt
push
pushf
iret
dec
xchg
shlb
sub
mov
clc
dec
pusha
push
xor
adc
pop
scas
test
jae
stos
sbb
enter
addl
or
and
lret
xor
or
sbb
das
out
mull
leave
push
imul
aas
cmpb
mov
push
sub
and
sub
mov
pushf
popa
push
adc
int
dec
push
pop
ret
stos
in
push
xor
lods
iret
jge
and
imul
adc
and
enter
add
daa
cmp
push
lods
testb
cmpl
mov
xchg
or
fisubl
mov
fwait
push
test
jle
shrl
mov
mov
push
adc
leave
pop
mov
rorb
test
arpl
pop
sub
mov
sahf
jp
jne
sti
mov
ret
int3
ja
pop
mov
mov
mov
pusha
dec
and
jns
add
scas
push
iret
push
in
mov
into
sbb
add
add
lds
mov
into
fstpt
ret
and
sahf
mov
pop
aaa
inc
sahf
stc
dec
cmp
mov
xor
mov
mov
jle
inc
sahf
bound
je
push
mov
stos
push
jns
or
shll
rorl
push
jecxz
fadds
cmp
test
and
std
mov
pop
pushf
inc
xchg
subl
sub
push
mov
jmp
or
jmp
lahf
sub
sti
out
push
clc
push
pop
or
loope
fistps
std
and
loop
rep
jbe,pn
insl
or
rorl
add
xchg
test
lret
fcomi
rcl
adc
push
xor
loope
cltd
subb
push
inc
add
in
add
lea
sub
bound
sbb
push
rcl
dec
lods
leave
cld
lahf
rol
xchg
cltd
testl
add
jge
xlat
popf
in
out
leave
ds
or
pop
cmpsb
adc
mov
in
jno
jns
jg
push
sbb
pop
jo
push
shl
jg
xchg
or
mov
mov
mov
lods
jmp
mov
fldenv
sarl
lods
mov
jge
jle
ret
aam
xchg
jnp
mov
push
add
sub
pop
orb
mov
cmp
shl
jno
sti
mov
in
xlat
or
adc
sbb
xchg
fsts
out
outsb
pop
sbb
push
leave
ret
mov
pop
mov
icebp
jns
aas
out
outsl
mov
data16
lret
push
mov
xor
push
sub
cmpsl
mov
aam
inc
sub
lahf
sbb
mov
jp
mov
adc
add
adc
sub
popl
xor
clc
das
out
lret
clc
nop
aas
cmp
mov
and
mov
add
jl
arpl
mov
or
cmp
and
pop
dec
mov
shlb
add
pop
dec
loope
outsl
shlb
insl
mov
inc
shr
dec
cmc
fldenv
mov
jo
sub
jo
cld
inc
jno
xor
dec
or
cmpsb
lods
sbb
jns
or
popa
test
fmulp
inc
mov
or
push
or
mov
sti
jg
mov
mov
or
xor
adc
test
jo
adc
mov
inc
mov
dec
xchg
fisubrl
pop
jmp
jnp
imull
or
mov
and
mov
or
in
aad
dec
push
and
mov
movsb
jg
pop
push
ret
incb
xor
jle
pop
dec
repz
and
mov
or
cmp
das
cltd
sub
and
xor
jmp
push
bound
add
sbb
shrl
sti
mov
loope
add
xchg
mov
cli
mov
mov
jae
jl
mov
push
or
in
lods
mov
cmpsl
inc
push
xor
cmp
cmpsb
call
pop
lret
jg
mov
shl
add
hlt
jl
cmpsl
pop
xchg
push
xor
outsl
pushf
jp
ffree
roll
mov
dec
or
push
arpl
mov
sbb
mov
lea
sub
jecxz
stos
nop
dec
push
cmp
jbe
inc
push
jmp
mov
aam
mov
movsb
clc
inc
aam
xchg
dec
jno
mov
mov
popf
mov
ljmp
outsb
fs
test
cmp
ret
fstpl
xor
iret
iret
mov
mov
mov
ja
imul
mov
leave
test
jle
int3
sub
dec
sub
and
adc
dec
cmpsb
dec
add
cmp
xchg
lods
xor
out
fcomip
jnp
stc
out
lret
mov
mov
mov
aam
dec
cmp
stos
cmpsl
fdivs
mov
cmpb
in
cmp
fnstsw
pushf
loopne
into
fldt
test
push
mov
in
cmpsb
setnp
mov
outsl
movsl
push
sbb
outsb
or
jl
pop
lods
fcmovnbe
dec
jae
lods
push
dec
mov
rolb
lods
dec
inc
adc
aas
xor
xchg
or
xor
gs
xchg
inc
and
data16
aam
fstpl
inc
jge
cmc
pop
test
pop
ficoml
out
sbb
int3
daa
mov
into
push
movsb
popl
fstps
xor
subl
cmpsl
adc
mov
push
sub
jo
add
inc
mov
dec
test
add
rorl
div
mov
inc
mov
add
jnp
clc
iret
push
jbe
fdiv
inc
xchg
xchg
sbb
and
pop
rol
ja
adc
jne
push
sbb
and
jle
std
mov
dec
and
mov
xor
ret
popf
fcompl
xor
xchg
add
jge
xchg
pop
mov
or
repnz
insl
mov
in
in
shll
mov
dec
jne
sahf
je
gs
leave
sbb
scas
in
out
adc
pushf
gs
scas
inc
int
pop
pop
pop
loopne
je
mov
mov
xchg
add
clc
jecxz
mov
sbb
xchg
cltd
fldenv
or
movsl
lret
out
mov
sbb
stos
pop
jb
adc
lods
jo
out
inc
cli
mov
dec
dec
lret
ret
stos
loop
cltd
adc
roll
ljmp
std
mov
pop
andl
fwait
mov
mov
and
push
inc
jg
daa
inc
fistl
or
std
xchg
xlat
xor
pop
stos
push
jle
xchg
repz
cmpsl
jb
sub
ret
inc
cltd
stc
push
shrb
gs
fnstcw
icebp
xchg
cs
int3
fldenv
hlt
xchg
aad
lahf
cs
adc
pop
je
in
push
repnz
cmp
mov
fildll
xchg
in
jno
shll
pop
std
or
mov
imul
mov
xchg
pop
mov
mov
dec
cli
and
xchg
cmp
xor
and
cmpb
aas
loopne
sti
xchg
sbb
push
add
cmpsl
xor
add
cmp
mov
dec
pusha
push
faddp
xchg
adc
adc
xchg
push
pop
in
lds
cmp
or
hlt
mov
nop
clc
ret
pop
leave
fisubl
cmpsl
sbb
stos
shll
insl
or
repz
sub
mov
loopne
or
and
mov
mov
xor
ss
popa
clc
mov
in
inc
aas
push
iret
in
lea
and
cmp
ja
pushf
fidivs
stc
sub
mov
add
mov
clc
in
jl
adc
mov
test
push
cltd
repz
inc
pop
pop
outsb
cmp
daa
les
daa
popf
imul
add
fisubrl
fdivl
push
insl
xor
shl
imul
lock
push
shlb
mov
push
in
outsl
test
filds
mov
fistpll
sbb
arpl
out
mov
adc
sub
int
cmp
jno
add
cmc
fwait
stos
aam
cld
mov
dec
cmp
fisttpll
int3
push
ret
loope
vmovupd
jb
xor
cmpl
add
pop
movsb
add
mov
aad
sub
aam
nop
int
cmp
or
pop
sbb
sbb
xor
mov
jbe
outsl
pop
mov
mov
xorl
mov
xchg
mov
imul
add
mov
adc
int3
testl
mov
ljmp
fisttps
gs
dec
arpl
popa
pusha
dec
push
insl
mov
lods
inc
mov
sub
out
jae
jg
cld
lods
out
aaa
pop
or
cmpsb
rcrb
mov
div
imul
ljmp
jb
in
dec
loopne
out
push
push
sbb
gs
fcoml
movsb
mov
mov
sti
dec
lret
sbb
loope
dec
inc
stos
ljmp
int
push
push
cs
clc
push
int
dec
sub
xchg
pop
jmp
push
sub
sub
jb
int
pop
fistl
outsb
popa
daa
pop
cmp
sub
rcrl
subl
gs
jl
iret
pop
jl
sbbb
push
jbe
lret
cmp
xlat
mov
daa
in
mov
xorl
push
push
mov
lods
fwait
lret
mov
pop
inc
aaa
pop
xchg
mov
dec
hlt
cmp
imull
cmpsb
xchg
loopne
push
mov
sbb
shlb
ret
ds
push
cmp
into
cmpsl
mov
push
dec
stos
movsb
pop
xchg
push
aam
or
ret
out
mov
adc
lea
rorb
fildl
roll
pop
shll
ss
cmpsb
jbe
icebp
push
adc
scas
or
jb
ficomps
mov
mov
add
mov
inc
aad
ss
pop
lock
xor
sub
mov
xchg
scas
pop
das
push
test
js
jns
jl
push
jno
repnz
and
mov
mov
clc
xchg
dec
stos
pop
mov
ja
fdivrl
aad
pop
imul
dec
out
addl
out
or
shll
or
mov
push
data16
pop
dec
out
repz
mov
fcmovnbe
test
pop
sbb
xor
dec
mov
divl
pusha
mov
int3
sbb
fisttpl
xor
push
or
dec
xchg
fwait
mov
xchg
loop
insb
call
push
incl
push
and
sbb
imulb
pop
jne
sbbb
mov
mov
popa
shrl
adc
pop
cmp
call
xchg
imul
xor
ucomiss
or
push
add
sbb
xlat
add
call
inc
dec
cmp
mov
push
mov
jbe
and
inc
loope
inc
arpl
jae
push
aaa
movsl
pop
pop
es
mov
dec
dec
sbb
xchg
in
jnp
shrb
push
adc
push
adc
inc
cs
cmp
fcoms
jo
int
imul
dec
mov
ss
push
sar
in
jae
nop
cmp
add
push
sbb
gs
stos
jle
inc
pop
or
out
cli
push
adc
cltd
mov
jg
sahf
roll
jnp
dec
jae
xor
mov
lahf
scas
sub
pop
xor
adc
ret
cmpb
test
push
dec
jae
mov
xchg
xor
cs
lock
jno
stos
push
xor
mov
ss
test
sub
push
in
pop
sub
mov
jnp
addr16
jo
aas
mov
and
lock
adc
iret
sub
pop
push
test
leave
sub
xchg
add
hlt
mov
popa
cmp
and
mov
dec
or
pusha
xor
mov
daa
sub
mov
lods
sbbl
ficoms
call
cmp
jb
pop
xchg
cmpsb
in
rorb
std
and
retw
pusha
icebp
xchg
push
lret
mov
jecxz
loop
mov
and
sub
ja
dec
or
lods
shr
outsl
loope
testl
ljmp
fcoml
mov
std
cmc
pop
test
loopne
sbb
cmp
mov
frstor
sub
xchg
cli
repnz
cwtl
cmp
pushf
leave
aaa
jne
xor
js
mov
es
daa
mov
add
popa
lock
fsub
dec
pop
sub
out
and
xor
rorb
fwait
leave
stc
push
pop
test
sarl
fwait
int3
pop
ficompl
fwait
sub
int3
mov
pop
and
push
ffreep
jnp
push
or
sbb
lcall
pushf
scas
call
fldenv
mov
insl
and
in
cmp
pushl
cmp
gs
add
inc
fs
test
cmp
rcr
movsb
dec
or
adc
xor
push
into
dec
adc
mov
mov
or
jl
jbe
jb
cmp
mov
fstl
hlt
push
xor
movsl
cmp
jae
push
ss
in
pop
addb
rolb
enter
std
add
and
add
sbb
movsb
int
lds
jbe
icebp
in
lret
lock
fnstcw
push
out
loope
fwait
push
and
xorl
or
push
inc
lahf
in
js
mov
jnp
dec
xor
push
adc
int3
or
in
xor
shr
das
xchg
call
call
or
sbb
add
push
mov
mov
outsb
mov
outsl
dec
push
adc
ds
dec
jge
loope
pop
mov
adc
push
xorl
les
daa
bound
jmp
xchg
inc
hlt
jae
std
cmp
rolb
cmpsl
imulb
jmp
clc
imul
data16
or
call
mov
cmpl
movsl
inc
mov
out
out
mov
sahf
jge
xrelease
sub
sub
rolb
xchg
fidivrl
sbb
push
pop
xchg
sbbb
inc
or
mov
test
lods
mov
add
call
insb
jbe
push
pop
and
das
enter
adcl
or
outsl
push
in
ja
rorl
fistps
mov
dec
ljmp
jecxz
pop
jae
lods
mov
xchg
jp
out
xchg
loope
aas
in
je
xor
out
pop
add
fwait
push
gs
pop
inc
enter
pop
jge
add
and
mov
imul
dec
std
mov
pop
adc
int3
mov
xchg
rorl
xchg
cld
scas
inc
daa
xchg
aam
stc
adc
push
sub
pop
loope
outsl
scas
jnp
adc
pushl
fists
aas
mov
test
xchg
pmulhuw
outsl
les
dec
and
xor
add
adc
pushl
fists
aas
mov
test
xchg
pmulhuw
outsl
les
dec
and
xor
add
adc
pushl
fistl
ds
test
xchg
push
in
hlt
outsl
les
stos
and
jnp
iret
pushl
pop
push
shld
test
pop
xchg
js
pop
jl
cmp
sub
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
pushf
popa
mov
inc
lods
push
shlb
pop
cltd
push
mov
sbb
or
cmp
sub
pop
mov
insb
xchg
pushf
popa
mov
inc
lods
push
fsubl
int3
xor
add
adc
or
dec
shrl
mov
insb
xchg
pushf
popa
mov
inc
lods
push
fsubl
int3
xor
add
adc
or
dec
mov
shll
das
aad
in
xchg
aad
mov
pushf
out
lock
pop
repnz
movsb
hlt
sarl
cmpsb
pop
imul
imul
scas
neg
dec
into
testl
test
cmp
xchg
insl
fs
cmpsl
je
and
xorb
addl
data16
les
cld
mov
lods
nop
fstps
sub
and
call
sbb
mov
or
mov
jg
mov
cld
clc
xchg
xchg
lods
addr16
into
std
in
inc
or
lock
movsl
loop
imul
arpl
mov
sti
inc
dec
and
ljmp
dec
push
data16
lds
pusha
pop
dec
inc
jl
add
ret
jno
inc
lods
push
fsubl
int3
xor
add
adc
or
cmp
sub
pop
mov
insb
xlat
fimull
pop
mov
test
lods
popa
pop
lea
cwtl
pop
scas
inc
mov
cmp
cmp
lahf
and
cmp
inc
leave
push
lcall
adc
push
popf
jge
imul
cmc
xor
add
fmull
xor
add
adc
or
cmp
sub
pop
mov
insb
xchg
pushf
popa
mov
inc
lods
push
fsubl
int3
xor
add
adc
or
cmp
sub
pop
mov
insb
xchg
pushf
popa
sub
mov
inc
push
rep
jne
jnp
scas
lcall
mov
xchg
inc
loopne
pop
inc
test
dec
in
sbb
movl
xchg
push
add
ret
sbb
iret
sub
dec
mov
sarl
adc
adc
fisubrl
pop
pop
xor
cmp
xchg
xchg
push
cwtl
cld
push
ja
dec
cwtl
lds
jnp
jmp
sbb
sub
push
inc
fimull
test
fisttpl
int
xchg
fnsave
stos
and
dec
mov
add
je
dec
cmc
adc
loopne
test
sbb
xor
cmp
or
fucomi
adc
mov
cmpsl
mov
and
mov
mov
lock
dec
and
add
jl
in
inc
jae
sub
jnp
adcb
sbb
popf
adc
mov
push
popf
bound
jle
out
add
push
movb
cmpsb
in
aad
sub
cmp
repz
aaa
mov
das
sbb
push
jnp
je
mov
add
inc
mov
jp
icebp
pop
cmp
shrb
popf
mov
cmp
mov
xchg
inc
push
sbb
jg
ja
js
push
sub
xchg
and
int3
mov
mov
mov
vmwrite
jbe
xorl
xor
dec
xchg
dec
push
xor
sbb
mov
fcmovb
fcoms
test
and
mov
push
mov
dec
add
movsl
lods
addb
fwait
insl
mov
sub
pusha
sub
mov
movsl
jl
inc
jbe
lods
jge
fidivl
sub
mov
mov
test
fsub
add
dec
js
enter
pop
sub
sbb
lea
add
cbtw
lret
mov
jg
push
sbb
lods
in
ret
jge
rclb
cmpl
mov
sbb
sahf
push
pop
mov
faddp
roll
cmp
test
push
adc
adc
mov
cmpsl
lea
cmp
dec
add
stc
and
pop
scas
rcl
stos
cmp
cs
stc
lret
fwait
in
pop
es
ljmp
sub
imul
mov
xor
lcall
mov
mov
mov
xor
sbb
movsb
pop
enter
iret
adc
pop
xor
outsb
dec
xchg
rclb
sub
enter
jg
dec
jae
int3
mov
hlt
sbb
jp
jmp
add
pop
and
xchg
push
sub
xor
shrl
xor
xlat
stos
jno,pt
pop
cmp
or
repz
or
rcrl
mov
add
push
addl
dec
cld
fcoml
push
or
mov
out
xchg
cmp
push
mov
lahf
adc
adc
mov
cmp
faddl
sahf
hlt
push
xchg
adc
mov
xlat
leave
ljmp
shl
mov
sbb
sub
test
imul
adc
movsl
in
in
pop
es
adc
mov
mov
cmc
pop
mov
xlat
imul
and
or
aaa
frstor
fwait
push
les
jmp
or
jno
sbb
or
adc
inc
pop
jle
add
push
jbe
fisubs
push
pusha
inc
daa
test
dec
mov
sub
outsl
je
in
cmp
bound
cmp
loop
repz
popf
or
imul
xchg
dec
mov
pop
sub
daa
jne
jbe
sub
je
push
cld
dec
or
mov
mov
cwtl
je
add
scas
add
mov
faddl
stc
sub
push
lcall
cmp
inc
pop
xor
gs
dec
xchg
mull
xchg
scas
stos
push
enter
adcb
std
out
adc
jnp
inc
inc
adc
lret
xchg
test
loopne
pop
mov
jae
add
pop
je
lea
call
pop
jle
test
mov
insl
loope
adc
bound
push
sbb
lock
add
adc
push
cmpsb
xchg
bound
lcall
movsb
mov
inc
push
and
sbb
pop
clc
push
mov
rcl
cld
insb
cmpsl
loop
jbe
imul
icebp
lds
dec
ljmp
cmc
xchg
add
dec
or
push
gs
enter
pusha
fincstp
fsubrl
fwait
push
call
and
ss
mov
call
mov
aam
xchg
dec
daa
sbbb
inc
mov
mov
dec
fbld
dec
int
sbb
pop
dec
jno
cmp
jns
sbb
leave
xor
adc
out
mov
cmpsb
mov
or
cmp
outsl
in
lock
gs
xor
fldt
pop
and
and
and
jg
shrl
mov
jp
mov
pop
scas
or
pop
or
xchg
lahf
mov
push
jne
xor
cld
nop
jecxz
xor
jp
inc
aam
add
lret
mov
mov
imul
push
or
jo
xchg
inc
cbtw
stos
cmp
fidivl
into
push
xchg
jbe
push
or
jo
loope
adc
jnp
adc
pop
fs
out
rorl
push
push
loop
lahf
and
fisubrs
rorl
daa
stos
mov
sbb
mov
mov
repz
mov
xor
and
mov
faddp
inc
iret
pop
mov
and
inc
int3
fmuls
mov
xor
das
popf
sbb
jo
xchg
rorb
add
inc
dec
dec
andb
xchg
into
push
out
cltd
fimull
pop
das
xchg
xchg
mov
dec
icebp
cmp
jle
mov
push
ljmp
jecxz
hlt
dec
int
mov
dec
pop
jne
mov
xchg
movsl
mov
aam
fbstp
mov
inc
dec
cmpsl
ret
in
jb
aam
mov
aad
in
fstpl
mov
arpl
mov
sahf
dec
cmp
add
adc
sbb
xor
test
movsl
inc
mov
call
cmp
xlat
cmpsb
mov
fsubl
loope
hlt
xor
mov
and
shr
in
jge
add
insb
sub
inc
pop
out
test
cmp
adc
cld
sub
sub
pop
les
hlt
sbb
inc
pop
lods
lcall
stos
pop
sbb
push
sbb
and
andb
adc
sbb
mov
jecxz
adc
sbb
mov
out
xor
hlt
cld
clc
loopne
mov
inc
mov
jae
xchg
repz
mov
arpl
xchg
das
pop
test
call
cmpsl
rclb
addb
cmp
pop
push
shrb
push
pop
mov
mov
into
je
rolb
sbb
rclb
jl
mov
call
add
and
pop
jbe
sub
xchg
push
incl
int3
test
sub
mov
cld
pop
mov
sub
or
push
ret
lcall
lods
sub
xor
sbb
test
dec
inc
fisttpll
rcll
or
iret
sub
dec
mov
clc
inc
stos
loope
das
adc
xor
pop
rcrl
mov
xchg
and
scas
jns
out
lock
inc
popa
jg
and
outsl
and
pop
out
pop
arpl
lea
adc
inc
inc
lea
out
mov
pop
pop
or
stos
add
adc
and
inc
jbe
jbe
hlt
sub
aas
xor
dec
adc
frstor
cmp
stos
jns
jns
lea
mov
out
fildll
inc
subb
xor
add
jnp
out
push
dec
leave
mov
sub
cmp
inc
fs
sbb
cmp
or
fisubrs
pop
fisubrl
xchg
pop
or
xchg
insb
inc
jp
xchg
lods
mov
jnp
repz
cmp
mov
scas
into
call
mov
test
fldcw
push
jns
inc
mov
test
stos
es
sbb
pop
push
add
imul
int
xchg
pop
sub
jns
mov
js
daa
sub
sub
jmp
sbb
clc
shr
jae
or
push
or
mov
pop
xor
orl
push
cmpsl
sbb
dec
int3
inc
cmpsb
sti
lret
mov
pop
jmp
sbb
das
dec
pop
call
mov
add
push
adc
add
repz
mov
lea
add
outsb
jp
inc
test
cld
or
push
push
mov
sub
push
xchg
scas
rcll
mov
xchg
cmp
and
xchg
stos
cmp
dec
inc
and
cltd
dec
cmp
fisttpll
and
xchg
inc
pop
sbb
cmpsb
in
cwtl
sub
in
add
jb
into
cmp
adc
aam
push
jnp
dec
fisubrs
mov
in
push
mov
pop
xor
mov
ds
out
xchg
cld
fcoms
mov
xor
jb
adc
imul
cltd
orb
lods
cmp
mov
in
dec
into
xlat
inc
sub
fwait
stc
inc
pop
mov
adc
and
add
dec
rorl
lock
mov
sub
fsubs
popa
or
jmp
xchg
icebp
add
xchg
mov
sbb
hlt
clc
inc
push
cmp
mov
add
mov
test
cmp
outsb
les
sbb
fwait
xchg
lods
jnp
loope
test
inc
aas
or
jl
std
sbb
outsl
fmull
daa
xor
pushf
addr16
sub
lret
mov
cwtl
pop
cmpb
popa
xlat
or
pop
shll
stos
fwait
jecxz
loopne
mov
hlt
daa
dec
and
jle
xor
in
xor
or
mov
mov
mov
sub
and
mov
lahf
push
in
cmp
adc
inc
and
cmp
jle
fwait
loop
movsb
pop
pop
or
push
sub
sub
mov
lret
lds
mov
cmpsl
sub
cmp
push
add
lret
push
xchg
push
call
clc
pop
xor
mov
inc
pop
or
inc
pusha
or
pop
inc
aas
adc
sub
insl
jle
pop
xlat
push
fcoms
div
in
incb
xchg
lods
push
xchg
cmpsl
mov
bswap
push
cmc
les
movsl
or
and
scas
fimull
push
mov
jecxz
movsb
lea
cmp
push
mov
mov
or
push
xchg
mov
jb
dec
enter
cld
mov
mov
xor
leave
mov
popa
aad
mov
jb
imull
loope
dec
rorb
pushf
fidivl
or
jne
rol
and
add
lock
xor
mov
lahf
pop
pop
jns
fstps
scas
sub
jb
lods
rclb
mov
pop
mov
jmp
mov
xor
out
jge
test
push
inc
out
sub
push
adc
stos
sbb
sbb
stos
enter
pminub
xchg
jnp
hlt
adc
mov
repnz
cwtl
lock
daa
add
in
daa
cwtl
jg
in
xchg
jnp
xchg
mov
push
jmp
mov
arpl
fidivrl
sbb
popf
add
iret
dec
subl
adc
inc
adc
jbe
fucom
shl
add
cmpsb
mov
pop
cli
mov
out
cmp
inc
shl
std
sub
std
iret
pop
scas
in
cmp
addr16
push
and
mov
mov
stos
mov
pop
jle
addr16
pop
add
fistpl
push
xchg
xorl
out
add
repz
dec
mov
xchg
add
and
jnp
insl
xchg
enter
cmpsl
fwait
mov
push
xor
pop
fucomp
clc
sahf
mov
aam
daa
xchg
bound
cmc
mov
adc
inc
sar
xor
sbb
pusha
test
xchg
sub
push
movsb
dec
inc
movsl
xor
hlt
daa
in
or
mov
daa
jmp
mov
cmp
shrl
inc
out
jmp
jbe
sbb
stc
dec
testl
adc
shl
fwait
push
int3
jnp
inc
jno
lods
ss
nop
lret
push
mov
pop
mov
mov
jb
mov
in
cmp
jecxz
xor
pop
mov
lea
lcall
push
mov
imul
shrb
mov
lock
xlat
cmpsl
push
push
lock
ss
pop
mov
cmpsb
xchg
imul
les
and
insb
jns
cmpsl
jge
dec
push
aaa
in
gs
push
jo
xor
sahf
xchg
and
push
sub
pop
cwtl
outsl
cltd
sbb
call
psllq
add
pop
sti
push
loopne
fsubs
dec
scas
cmc
add
dec
mov
mov
mov
mov
iret
pop
adc
push
and
stc
movsl
stos
xchg
adc
daa
mov
dec
sti
sbb
shlb
and
leave
stc
dec
testl
ret
notb
stos
or
pop
fimull
sub
fwait
sbb
ret
test
sarl
scas
mov
popa
addr16
test
insl
out
sbb
jns
jne
imul
mov
mov
cmpsb
sub
dec
in
outsb
mov
int
xchg
push
loope
mov
sub
fidivrl
insl
jecxz
test
pop
add
int3
popf
and
outsb
xchg
rorl
cmp
pop
int
mov
popa
and
cli
push
cltd
shlb
jb
lcall
dec
xchg
sbb
sub
je
out
pop
sahf
lock
and
div
test
push
pop
cmp
loope
scas
mov
das
sahf
pop
pop
mov
sub
xor
inc
cmp
or
mov
add
enter
cld
add
out
popl
pop
mov
repz
nop
jge
add
jmp
and
sbb
pop
jecxz
gs
mov
mov
adc
cwtl
testb
add
lcall
shr
lods
adc
push
or
jbe
orb
sbb
repz
arpl
out
cmp
sbb
xchg
or
mov
shrb
jge
sbb
jae
xchg
mov
rolb
push
or
addb
in
or
and
cmp
pop
dec
push
mov
jae
mov
mov
loop
jo
inc
xchg
fxam
mov
jns
pusha
add
mov
mov
je
xchg
mov
push
scas
xor
mov
mull
sbb
xor
mov
jnp
cmp
push
jo
pop
xchg
subl
aaa
adc
dec
dec
outsl
imul
daa
adc
dec
fs
insb
mov
ret
adc
add
or
push
cmp
addr16
xchg
mov
pop
xor
outsb
fs
rolb
cmp
push
mov
cs
add
lret
in
pusha
insl
dec
cmp
js
dec
add
xor
xchg
mov
lret
add
mov
fcomi
jae
shl
jmp
jno
cmp
and
adc
pop
inc
jmp
push
jle
sub
xor
mov
and
outsl
test
mov
pop
sub
xchg
or
pop
pop
loop
daa
jb
jns
inc
dec
cltd
mov
mov
xchg
mov
lret
jbe
cmc
mov
and
aam
xor
in
subb
jle
sti
pop
das
loop
stos
ja
sbb
and
mov
clc
mov
adc
or
in
sub
daa
push
lods
in
sbb
in
mov
ficompl
mov
rorb
jmp
fdivr
repz
cwtl
adc
movsl
adc
cld
mov
inc
and
mov
arpl
xchg
xor
bound
dec
dec
adc
xor
pop
shll
mov
mov
jnp
jns
stos
adc
insl
stos
lret
pop
add
pop
es
repnz
fdivs
mov
push
mov
movsb
sub
lahf
jmp
pushf
cmp
aaa
sti
sti
add
or
jbe
mov
repnz
es
add
jae
int
jb
jg
xchg
ret
roll
shl
fistpll
inc
xor
clc
fld
and
cwtl
and
pop
aad
je
adc
iret
stos
fsubrp
ss
les
dec
jae
cmp
push
adc
ds
mov
cmpsb
sub
push
or
and
rcrb
ret
iret
cs
idivb
ss
pushf
xor
imul
sub
inc
jo
movsb
xlat
fnsave
sti
pop
insb
aad
insl
fadds
repz
pusha
frstor
lods
in
mov
pop
insl
adc
cmp
jbe
xor
movsb
movsl
into
inc
inc
sahf
push
mov
gs
ficomps
mov
decl
cmp
shl
out
and
inc
out
into
cmc
lahf
pop
mov
push
cmp
jl
xchg
cld
lods
dec
inc
jl
xlat
dec
jno
insl
iret
imul
shrb
je
mov
pop
fdiv
outsb
cmp
outsw
inc
sbb
pusha
aas
imul
iret
xchg
jbe
xor
push
movsb
xor
jae
mov
cmp
bswap
fidivs
iret
or
stc
outsb
daa
sbb
lock
test
add
les
push
or
adc
addr16
ret
mov
adc
inc
mov
xor
mov
xchg
cwtl
stos
pop
adc
sub
adc
enter
dec
sub
mov
mov
out
xor
test
add
stos
and
sub
aad
testl
jmp
movsl
push
test
jne
dec
icebp
push
push
mov
test
inc
mov
push
push
pushf
std
jns
into
imul
or
outsb
add
int3
mov
push
loope
test
push
mov
mov
lods
inc
sbb
lods
push
xchg
jmp
push
xchg
mov
dec
jbe
mov
cmpsl
sbb
stos
adc
fadds
mov
dec
xlat
mov
jecxz
mov
and
out
or
mov
enter
jae
daa
int
mov
mov
or
out
adc
fnstcw
dec
and
pop
jnp
into
cwtl
rcrb
insl
js
xor
xor
pop
pslld
sub
es
push
loopne
ljmp
je
cld
ret
jecxz
scas
add
loopne
mov
daa
test
pop
xor
pop
out
dec
test
mov
dec
daa
outsl
in
ret
pop
cmp
pop
pop
and
lods
test
jb
sbb
adc
mov
fisubrs
mov
daa
jmp
add
dec
stos
movl
out
add
push
xchg
jne
sbb
mov
mov
ljmp
mov
rcrl
mov
xchg
or
mov
int
jge
pop
pop
lock
sbb
push
sub
repnz
mov
dec
pop
dec
xchg
pop
sti
mov
xchg
sub
cmpsl
movsb
inc
hlt
xor
clc
test
cltd
lods
or
loop
addr16
push
out
es
aam
jle
xchg
ja
repz
sub
xor
dec
call
push
inc
repnz
and
aaa
adc
inc
enter
xchg
lods
dec
jge
xor
movsl
adc
xchg
mov
pushf
push
push
inc
jmp
jnp
lret
je
movsb
jl
stos
shrl
jb
mov
jno
pop
xchg
jns
das
cmp
rcrb
jmp
or
pop
xor
pop
pushf
fsub
mov
inc
jmp
xchg
mov
enter
ret
incb
test
and
out
das
aam
cmp
fucomip
das
cmp
insb
or
mov
or
push
test
inc
cmp
and
and
inc
mov
inc
push
adcl
mov
cli
xor
lret
fxch
mov
push
pusha
mov
out
push
inc
xchg
add
lock
pop
inc
xchg
xor
stc
popa
clc
test
fsubs
adc
icebp
into
jne
jge
aam
dec
xor
pop
adc
std
iret
out
adc
test
subl
push
mov
cmp
xchg
lods
sbb
dec
sbb
add
adc
mov
mov
xlat
outsl
pop
pusha
clc
jb
mov
mov
sub
push
pop
call
and
and
xor
je
lds
in
filds
inc
icebp
mov
jnp
pop
inc
push
in
popf
push
int3
sub
in
jge
fs
js
sub
adc
mov
je
jno
inc
lods
push
fsubl
int3
xor
add
adc
or
cmp
sub
pop
mov
insb
xchg
pushf
popa
mov
inc
lods
push
fsubl
int3
xor
add
adc
or
cmp
sub
pop
mov
insb
xchg
pushf
mov
inc
lods
push
fsubl
int3
xor
add
adc
or
cmp
sub
pop
mov
insb
xchg
pushf
popa
mov
inc
lods
push
fsubl
int3
mov
sub
pop
xchg
shrl
sub
dec
cmpl
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
and
xor
add
adc
xlat
int
fidivl
movsl
pop
xchg
mov
inc
xchg
push
jecxz
icebp
mov
add
xor
add
adc
arpl
push
xchg
mov
mov
addl
jecxz
ret
xor
cmp
sub
sbb
or
jp
imul
int
jne
and
push
jecxz
pushf
pop
lahf
ja
adc
add
jae
sbbb
and
adc
shr
loop
mov
mov
mov
jae
movb
mov
insl
fdivs
push
sub
fdivrl
push
mov
enter
hlt
cwtl
dec
mov
and
cmc
ret
cli
rcrl
or
aad
movsb
jb
mov
mov
insb
add
dec
cli
rcrl
mov
sub
mov
and
xor
ret
cwtl
lret
jae
or
sub
shlb
mov
pop
jne
adc
jne
push
ret
push
cmpsb
xor
adc
in
cmc
add
adc
je
arpl
mov
inc
mov
and
sarl
push
cmc
data16
addr16
push
lret
push
lds
sub
xchg
inc
mov
mov
imull
cmpsl
paddsw
inc
repnz
andl
jecxz
cwtl
pop
mov
mov
inc
lods
pop
cmpsb
outsl
lods
jnp
sub
push
xchg
mov
inc
xchg
push
jecxz
repz
and
xor
add
adc
arpl
push
xchg
mov
inc
xchg
push
jecxz
repz
and
sbb
mov
imul
push
addb
nop
sbb
cmpsl
xor
lcall
adc
push
test
sbb
and
repz
or
inc
scas
inc
dec
xchg
neg
adcb
outsb
or
inc
ljmp
add
xor
add
arpl
das
cs
push
sub
das
xchg
mov
mov
jl
aam
push
sbb
lods
mov
mov
aam
lret
mov
push
xchg
das
xchg
test
dec
leave
shrb
fisubrl
bound
fmull
jb
xchg
add
jge
sub
jb
shrl
cmp
inc
xor
cmp
jne
adc
ficoml
jbe
jns
push
mov
mov
mov
adcl
xlat
dec
inc
cmp
ficomps
ret
js
je
stc
sub
cltd
xor
dec
or
xor
jmp
jge
out
push
je
subb
sub
arpl
pop
dec
sub
jecxz
ljmp
shll
xchg
inc
popa
mov
push
inc
scas
lahf
sub
and
imul
cld
add
mov
in
in
and
cwtl
shl
scas
inc
add
lret
xchg
out
repnz
add
mov
out
pop
or
dec
rcrb
mov
imul
jmp
and
pop
push
loopne
js
pusha
in
out
push
icebp
or
mov
andb
mov
insl
in
ret
outsb
stc
mov
fists
sub
push
pop
aam
or
stc
xor
mov
aam
cmpsl
mov
mov
lock
or
xchg
mov
test
aaa
mov
fisttpll
negb
daa
enter
cld
xor
das
imulb
mov
add
mov
roll
stos
cmp
adc
cmp
movsb
inc
dec
cld
lock
dec
dec
xchg
rclb
sbb
jmp
nop
jecxz
xor
mov
adc
dec
pop
pusha
std
icebp
mov
mov
jecxz
push
mov
add
aam
fildll
das
ja
cmpsb
or
shrl
std
inc
test
lods
into
sub
xchg
xor
addr16
push
sti
and
push
rcr
mov
movsb
inc
daa
mov
jnp
sub
bound
push
sub
push
outsl
lods
test
cli
decl
arpl
invd
mov
jns
arpl
sub
in
jo
and
or
xchg
movsl
inc
add
jp
adc
mov
inc
add
lds
inc
ret
sub
lock
sub
push
pop
adc
push
jmp
jecxz
pop
sbb
inc
dec
push
aaa
loopne
je
cmp
loopne
dec
xchg
and
xchg
aam
orl
cli
faddp
jo
xor
mov
push
cmp
aas
fnstenv
orb
push
add
mov
sbb
lcall
loop
jp
idiv
mov
mov
pop
xor
or
cmp
aaa
out
or
sarl
popa
shll
cli
lods
aad
sub
mov
cmpsb
inc
jae
aas
jbe
outsl
pusha
push
fildll
ss
dec
push
push
sarl
popa
fs
add
loopne
cld
cmp
cwtl
mov
fimuls
inc
xor
sub
dec
jae
add
pop
pusha
test
xchg
test
mov
loop
shrb
subl
in
out
fxch
in
inc
mov
inc
inc
outsb
fisubrl
leave
mov
in
enter
adc
stos
push
pop
sbb
test
lret
xchg
out
adc
mov
out
mov
add
test
daa
inc
fstpl
imul
cmp
cltd
test
inc
push
adc
call
test
or
test
ss
jne
mov
jns
sub
jp
je
mov
xchg
daa
xor
mov
xlat
cmp
xor
mov
push
ds
push
mov
mov
jae
enter
adc
ret
sub
js
mov
outsl
xlat
adc
add
orl
pop
push
sbb
sbb
inc
mov
jo
adc
and
in
add
inc
mov
aam
xchg
and
xchg
daa
movsl
and
jmp
int
xchg
cmp
sarl
lds
cmp
out
mov
mov
mov
sahf
pop
lock
out
inc
jl
out
mov
pop
or
cmc
xlat
arpl
int3
or
jmp
dec
ljmp
mov
inc
add
and
mov
xchg
or
xchg
pop
adc
mov
call
and
loopne
daa
rorb
cmpsb
xor
mov
inc
inc
cmpsl
mov
cmp
push
push
repnz
insb
sbbl
pop
pop
push
jecxz
lods
scas
bound
xchg
add
cld
mov
inc
test
mov
ja
stc
decb
mov
fisttpll
mov
insb
popw
sub
loop
std
mov
ds
push
loopne
add
xor
mov
pop
loop
scas
stos
into
inc
dec
in
lcall
xlat
sbb
push
cmc
xchg
test
or
ljmp
popa
sbb
or
fnsave
sbb
push
sbb
sti
std
lods
mov
jle
sub
cli
cmp
mov
mov
inc
out
cs
lret
push
int
push
idivl
dec
pop
outsb
mov
cmpsl
movb
jbe
jmp
cmp
aam
dec
lock
dec
test
cld
sarl
dec
jns
mov
cmc
ficoms
cmpsl
cwtl
pop
out
or
xor
mov
add
fstpl
push
ljmp
cs
fldenv
cmc
xlat
sub
lods
fwait
and
aad
lcall
dec
xchg
cmc
int3
je
xor
inc
adc
into
movsl
xchg
fists
fdivrl
dec
cmpsl
xchg
pop
rcr
add
inc
dec
sarl
mov
das
sar
addl
insl
cmp
adcl
push
push
iret
or
shll
stos
movsl
adc
rcrl
loope
mov
adc
dec
std
push
xchg
mov
lcall
nop
stc
mov
mov
clc
out
filds
andl
hlt
cwtl
cmpl
sbb
add
gs
dec
push
pop
sar
cld
sbb
cmc
iret
sbb
adc
fldenv
xchg
repz
or
arpl
rcl
daa
jns
pusha
add
push
jns
xor
aam
cld
jp
push
pusha
dec
push
mov
jle
in
dec
jp
jns
xor
aas
ss
or
stc
mov
xchg
je
xor
cs
and
mov
stos
add
or
mov
mov
mov
inc
push
es
sbb
sub
sbb
xchg
adc
leave
or
push
insb
sub
decb
push
adc
sahf
fwait
add
daa
xor
ja
jae
xlat
adc
dec
lods
jmp
jge
andl
pop
gs
es
xchg
out
ret
and
and
xchg
or
push
mov
lods
test
mov
ljmp
cltd
mov
iret
movsb
loope
aas
sbb
pushf
inc
sbb
lds
cmpsl
mov
dec
add
push
and
out
movsb
add
sbb
and
out
pop
out
sbb
pop
mov
adc
pop
ficomps
jb
or
xchg
lds
in
bound
das
and
sub
mov
out
mov
lods
jb
and
push
push
ret
cltd
ja
in
cmc
aam
jns
push
push
fstp
mov
cs
sub
and
dec
mov
bound
jnp
or
imul
xchg
jle
arpl
jmp
xor
idivb
ud0
lret
dec
or
xchg
in
in
or
xlat
cmc
dec
cmpb
xchg
or
test
lcall
and
mov
cmp
adc
aam
cwtl
adc
mov
push
mov
push
sbb
xchg
movsbl
push
mov
mov
cmp
shl
loopne
adc
fists
test
ss
sbb
push
xlat
cmp
and
ret
add
push
adc
shrb
push
cmp
scas
pushf
pusha
sub
pusha
cmpsl
and
lahf
and
cld
push
test
xchg
mov
mov
dec
ret
xchg
and
pop
popf
testl
and
rorl
popa
and
mov
jmp
outsb
sub
jb
stos
repnz
fisttpl
cmp
bndldx
jns
mov
ror
xor
ljmp
or
push
xchg
jns
mov
ss
xor
bound
jno
cmpsb
cmpsl
mov
xchg
sub
stos
mov
popa
ficomps
imul
fbstp
rcrl
movsl
xor
inc
inc
mov
mov
cld
call
cld
call
cmp
inc
gs
mov
xor
pop
fst
push
dec
fistps
mov
cld
xorb
movsb
cmp
or
dec
ljmp
das
outsb
jg
pusha
and
mov
pop
sahf
in
mov
fisttps
mov
inc
jns
stc
stos
adc
and
and
fcmovnbe
jne
in
data16
cmp
pop
fsubrl
lods
pop
add
jne
xchg
lcall
mov
jae
jno
xchg
xchg
notb
sbb
sbb
jmp
bound
sub
xlat
mov
scas
out
in
dec
push
loop
inc
push
xlat
das
sbb
ficompl
mov
cmc
popf
cwtl
dec
insb
sub
xchg
call
sbb
xlat
jg
inc
sbb
inc
in
idivl
sub
sbb
lock
loop
fiaddl
xor
pusha
pop
pop
loop
testb
inc
jo
inc
mov
dec
clc
adc
xor
xchg
mov
mov
jne
sti
fisubl
sbb
bswap
dec
in
je
and
and
mov
popa
sub
push
in
pop
dec
jp
in
insl
dec
scas
push
pop
push
dec
les
adc
fsub
loop
sub
leave
push
adc
arpl
test
xchg
jg
inc
mov
cmc
test
jge
mov
xor
lret
nop
mov
js
jge
shrl
and
pop
loopne
stos
push
dec
fiaddl
cmp
cmp
std
mov
push
lcall
push
mov
movsb
jae
test
xchg
ror
into
xor
imul
int
js
shlb
lahf
aad
jns
inc
mov
mov
xchg
mov
rcll
adc
out
pop
jmp
cld
stos
xchg
lcall
pusha
pop
clc
and
jae
in
push
mov
or
push
mov
jp
arpl
mov
cmp
mov
sbbl
push
jns
mov
pop
fcomp
aam
in
dec
or
xchg
lds
jecxz
xchg
test
add
xor
imul
mov
movsb
inc
out
imul
sub
daa
movb
push
sbb
shr
sbb
mov
sub
daa
ds
and
in
sbb
lods
inc
xchg
scas
test
xor
ja
test
pop
and
sahf
mov
jno
movsb
xchg
xchg
cmc
movsl
mov
jnp
clc
mov
arpl
mov
jb
jo
add
mov
xor
lock
ret
xorl
jae
add
inc
ret
lahf
test
mov
push
int3
lock
mov
int
sbb
call
faddp
cwtl
sbb
cmp
cmp
pop
lods
sti
jb
pusha
popa
or
mov
stos
mov
sub
dec
push
sarl
cmp
sbb
mov
sub
dec
std
sbb
loop
negb
popf
les
push
dec
sahf
int3
imull
xchg
pop
sti
dec
addr16
nop
pop
test
xchg
push
push
es
data16
add
aam
aam
dec
dec
aas
sbb
and
popf
sbbb
mov
pop
je
and
stos
std
push
ja
pop
push
sub
push
mov
orl
hlt
js
mov
sti
in
out
stc
out
shll
jl
shrb
bound
mov
xchg
adc
xchg
into
mov
sub
inc
xor
cmp
and
rol
mov
lea
mov
xchg
cmc
adc
lret
mov
sahf
add
js
push
push
add
mov
outsl
mov
add
jns
stos
frstor
pop
ds
aad
cmp
movsb
mov
push
and
out
je
test
adc
sub
inc
ret
add
adc
jae
push
out
dec
in
loop
xor
jb
mov
bound
out
push
add
cmpsl
scas
mov
or
negb
jecxz
xchg
mov
sbb
jae
jno
dec
test
dec
mov
cmpsb
dec
movsl
jle
jmp
mov
in
and
roll
cmpsl
xor
sub
leave
inc
int3
jl
lcall
jno
mov
jl
bnd
fnstcw
loopne
enter
mov
jge
popf
jno
add
sub
test
lret
sub
int3
mov
ss
jae
inc
inc
push
dec
cmp
mov
xchg
je
decb
gs
movsb
dec
cwtl
leave
mov
mov
sti
negb
xchg
fs
dec
mov
std
or
and
pop
xchg
and
sbb
mov
ret
popa
pushf
jmp
and
cli
into
sub
std
push
lahf
bound
push
push
push
push
xor
pop
pop
rolb
loop
mov
mov
jnp
das
mov
cmc
adc
outsb
mov
sub
insb
dec
jge
sub
fimuls
add
push
bound
enter
mov
add
fldt
mov
pop
or
or
fwait
in
sub
hlt
jno
test
popf
movsb
test
and
and
int
int
mov
add
pop
ljmp
mov
mov
fsubl
push
testl
jo
adc
fiadds
jge
gs
out
leave
or
sahf
imul
repnz
mov
insl
jno
ret
lds
outsb
and
pop
push
adcb
push
cs
inc
jl
sub
sub
imul
lret
test
pop
sbb
sub
mov
in
and
insl
jg
inc
fwait
js
jne
and
movsb
lds
jmp
and
stos
pop
int
in
fisubl
jnp
cmc
sub
inc
out
insl
jno
stc
jno
mov
sbb
clc
sbb
dec
or
jnp
je
and
push
test
repz
outsb
or
adc
out
sti
mov
push
stos
mov
sub
outsb
fiaddl
add
adc
pop
pop
mov
adc
push
rcr
mov
mov
inc
mov
ljmp
push
xchg
outsb
xchg
mov
dec
jbe
add
and
adc
cmp
mov
mov
or
jb
mov
pusha
xchg
xor
mov
les
call
adc
sbb
mov
pop
dec
xchg
mov
les
and
lcall
and
movsb
into
ljmp
into
je
js
sti
loope
hlt
add
jo
dec
inc
jg
stc
std
mov
ja
aas
aas
pusha
fs
xor
mov
cmp
cmp
icebp
mov
fwait
das
inc
sbb
shlb
mov
lcall
fnsave
mov
sub
push
test
cmp
jb
push
sbb
shlb
hlt
loope
dec
punpckhbw
sahf
cs
push
xor
movsl
inc
xchg
mov
mov
add
cmp
xor
xchg
ja
mov
sbb
sub
cmp
sarl
add
out
fsubr
jo
dec
icebp
dec
call
dec
das
mov
push
jbe
cltd
sub
sbbb
repz
push
push
mov
nop
pop
bound
xor
pushl
add
imulb
mov
xchg
adc
and
jge
cmp
mov
gs
or
pusha
fdivr
into
in
push
outsl
inc
xor
mov
insl
cmc
cld
jno
adc
xor
stc
popf
inc
dec
movsl
gs
je
push
in
and
movsl
push
dec
pop
mov
xor
in
lahf
out
cli
ja
sti
sub
icebp
sub
ss
sbb
clc
xchg
fisubrs
pop
iret
insb
call
or
shll
shl
es
jno
jo
cli
xchg
mov
jns
pshufw
fistpll
jb
adc
lcall
incb
adc
ret
sbb
jbe
mov
enter
mov
jae
pop
or
pop
icebp
push
jnp
xchg
jae
cmp
dec
aas
mov
adc
arpl
push
int3
leave
or
xchg
cmp
imul
push
sub
daa
movsb
xchg
popf
rolb
test
bound
int
jno
jmp
adc
adc
pop
addr16
test
and
cmp
leave
push
mov
inc
jl
out
dec
into
mov
mov
and
add
add
sti
fidivl
mov
gs
inc
shlb
inc
shl
sub
xchg
adc
mov
inc
popa
ficomps
jle
mov
data16
cld
std
iret
mov
arpl
xchg
cmp
push
xchg
scas
sbb
xchg
sub
and
and
lea
fsubs
test
fs
fwait
mov
inc
popa
aas
sub
push
insl
fstl
movsl
jl
cmp
jb
shrd
mov
or
pop
jecxz
inc
and
jp
call
and
aas
outsb
aad
es
inc
inc
push
jle
sbb
imul
sahf
fidivrl
inc
jae
add
divl
insb
sub
mov
add
cmp
jns
rclb
outsb
sub
mov
inc
jno
sub
ret
test
ljmp
cwtl
pop
outsb
dec
jb
mov
or
aam
into
into
in
mov
add
mov
in
push
mov
mov
mov
xor
pop
sbb
addl
imul
test
call
ret
aas
mov
cltd
xchg
xor
add
hlt
enter
inc
mov
push
cld
cmp
inc
inc
int3
pop
lahf
es
mov
fnstenv
add
cmpb
push
loop
popa
les
sub
push
xchg
fcomps
clc
out
xor
in
movsl
xchg
fistpl
add
cmp
pop
pop
inc
test
std
sbb
or
mov
test
popf
aaa
pop
sub
sub
outsl
and
add
test
ljmp
add
push
dec
bound
int3
mov
add
lods
bound
orb
fsubl
std
subb
jae
js
cmp
mov
in
cmc
push
add
push
out
fldenv
rcl
sub
arpl
mov
push
fsubrl
fcomi
out
and
je
xchg
adc
dec
test
sbb
push
sub
mov
lret
pop
cmc
lret
sub
lea
adc
pop
sbb
mov
push
fwait
push
adc
mov
pop
cmpsb
ror
dec
lret
sbb
test
cmp
loopne
sbbl
mov
inc
xor
popf
repnz
aaa
xchg
push
mov
xchg
jbe
call
jbe
push
jo
leave
test
int
pcmpeqb
ja
sbb
movsb
mov
pop
outsl
lods
adc
lret
inc
or
int3
cld
sub
repz
xor
loopne
clc
jnp
adc
xor
mov
jnp
mov
sti
adc
sub
ret
out
cli
cwtl
push
inc
shlb
adc
inc
lock
jecxz
arpl
mov
push
adc
loope
xchg
sbb
sub
inc
add
ret
inc
and
lods
in
ficompl
adc
sbb
fcmovb
lret
mov
and
pusha
xor
jnp
jb
push
xchg
loop
jmp
enter
mov
lock
push
sbb
and
nop
mov
cmc
mov
dec
jmp
lods
jle
frstor
fiaddl
or
cs
adc
jne
add
xchg
jmp
sub
add
hlt
sub
lcall
mov
sbb
jl
xchg
lock
push
fwait
in
cmpsb
imul
ret
mov
sbb
shll
icebp
arpl
data16
daa
xor
out
add
mov
inc
push
lret
dec
into
pop
test
fists
daa
and
pop
pop
push
sahf
sti
in
adc
xor
push
inc
add
lods
aaa
sarb
mov
std
mov
push
lret
jne
mov
cmpsb
aas
cmpl
lret
lods
add
incl
sti
mov
push
cltd
in
pop
cmc
or
adc
arpl
push
xchg
mov
inc
xchg
push
jecxz
repz
and
xor
add
adc
arpl
push
xchg
mov
inc
xchg
push
jecxz
repz
and
xor
inc
adc
arpl
push
xchg
mov
inc
xchg
push
jecxz
repnz
and
xor
add
adc
popa
movsl
jae
ret
test
xchg
pop
gs
fildll
inc
xchg
and
sub
sti
out
jmp
fcmovne
lret
jae
fadd
lock
pop
dec
dec
pop
cmp
movsb
push
sbb
or
sti
out
jmp
fcmovne
lret
mov
fwait
mov
jle
outsb
imul
dec
decb
sub
sbb
or
loop
repnz
into
sarl
orl
xor
dec
ds
pop
imul
mov
mov
and
fs
mov
vprotq
in
jb
sti
gs
adc
fwait
inc
lret
scas
pop
pusha
fs
addl
rcrl
dec
jmp
repz
addr16
fld1
mov
adcb
cmp
xor
xchg
jnp
push
dec
movsl
out
adc
and
cwtl
cltd
mov
mov
repz
jmp
mov
pop
outsb
scas
popf
in
sbb
jle
adc
and
mov
sbb
xchg
xchg
sarl
dec
dec
jle
sbb
xor
lcall
mov
adc
or
faddp
into
lret
mov
fwait
mov
pop
inc
dec
push
and
xor
add
or
mov
fmul
cli
testl
aas
pop
sub
dec
addr16
xchg
mov
mov
out
fdivrl
pop
ds
dec
aas
dec
inc
sub
jnp
fwait
sti
out
jmp
mov
scas
stos
sahf
fwait
mov
pop
pop
dec
dec
cmp
sub
sbb
or
sti
out
jmp
fcmovne
lret
mov
fwait
mov
pop
pop
dec
dec
cmp
sub
sbb
or
sti
lret
clc
inc
pop
loope
inc
xor
or
pop
xchg
pop
inc
ja
mov
push
add
and
and
inc
mov
xor
cmp
and
xchg
jne
or
push
sbb
pushf
rcrl
push
pusha
sub
pop
into
in
jae
jmp
icebp
bswap
mov
cmp
and
dec
xchg
cmp
adc
xor
mov
push
pop
inc
int
and
mov
dec
test
inc
movsl
mov
icebp
insl
dec
lcall
or
cmpl
xor
push
add
inc
inc
testl
rsqrtps
cmpsb
test
call
addr16
pop
cmp
xchg
jge
push
sbb
push
jmp
jecxz
push
jg
aad
dec
ret
jbe
jl
xor
pop
mov
aam
push
lock
jbe
fists
test
mov
sub
nop
cwtl
or
sub
mov
cmp
push
shrl
call
pop
hlt
stos
nop
inc
cs
cs
in
and
push
cld
addr16
sbb
mov
lock
and
int3
push
out
rorl
mov
aas
jb
aaa
clc
les
dec
or
orl
loop
cmp
cld
cmc
adc
mov
test
ja
jnp
adc
pop
std
scas
test
or
or
or
test
pop
jne
icebp
faddl
inc
jo
dec
and
les
in
jecxz
push
jmp
or
sarb
rcl
in
stc
lret
ss
call
ret
and
mov
into
adc
sub
aaa
and
mov
lock
jl
pop
ljmp
in
mov
inc
pop
xorl
add
adc
out
andb
fs
aad
or
cmc
and
outsb
sub
neg
add
mov
testl
or
cmp
fidivrl
jb
jmp
repz
imul
xchg
and
sub
enter
scas
std
sub
mov
cmc
pop
jns
negb
pusha
aas
test
inc
pop
pop
pop
subl
shlb
data16
mov
in
lock
rcl
les
sbb
pop
lahf
xchg
outsb
call
pop
insl
mov
adc
stos
push
mov
pusha
push
lahf
std
fiadds
outsb
add
lret
cli
or
mov
aad
push
ds
mov
xlat
mov
cs
aam
mov
lea
add
xor
pop
cmp
cmp
adcl
pop
scas
mov
sbb
lahf
scas
cwtl
fildll
xchg
arpl
adc
fstl
xlat
and
pusha
cmp
cmp
and
dec
dec
in
int3
int
inc
lods
subb
mov
push
or
sbb
call
aam
cmp
repz
or
ret
dec
xchg
cltd
add
lea
mov
mov
incb
pop
mov
idivb
and
mov
arpl
and
icebp
outsb
fld
test
push
jne
pop
popf
sub
test
nop
or
ss
bound
imul
push
jmp
mov
hlt
ja
cmc
sub
push
pop
repz
push
xchg
mov
adc
fldenv
xorb
xor
mov
jne
adc
xchg
mov
fldenv
xchg
scas
adc
lds
pop
cmpsl
xchg
xchg
jecxz
sub
inc
xchg
mov
in
pushl
pop
xchg
inc
loop
jecxz
mov
cs
mov
movswl
dec
insb
test
xor
sti
mov
mov
dec
loope
out
clc
dec
cmp
push
mov
sub
sti
jle
movsl
aad
sbb
jecxz
lods
imul
imul
push
mov
pusha
xor
mov
ja
inc
int3
inc
outsl
stc
pop
xchg
add
aad
cwtl
leave
idiv
stc
xchg
xchg
fcoms
cmp
xor
cmpsb
fld
jno
or
xor
in
xchg
jo
dec
jle
pop
jns
in
rolb
out
jge
sub
ret
scas
jecxz
push
pop
in
pop
lret
xlat
jl
cmpb
insb
push
xchg
xchg
idivb
inc
adc
shll
xchg
sahf
ret
xchg
dec
jbe
out
test
dec
loop
jae
sub
inc
add
inc
lret
mov
sbb
push
bound
push
iret
imul
xor
fwait
inc
rcll
dec
cmpsb
imul
cltd
mov
idivb
lods
shlb
lahf
mov
mov
adc
jle
icebp
add
mov
pop
pop
pop
mov
test
jmp
jb
mov
and
call
lock
sti
es
inc
add
addr16
out
sbb
sbbl
lea
fistpl
push
shll
pop
mov
movsl
mov
mov
cmp
sbb
dec
loopne
jae
ljmp
xchg
fstl
jns
testb
sub
dec
lds
dec
inc
or
jp
int3
pop
adc
sbb
pop
js
loope
xchg
lods
cmp
inc
jmp
test
cmp
in
jle
jns
lea
add
dec
push
mov
movsl
daa
pop
mov
shlb
ljmp
pop
repnz
mov
data16
or
pop
shrb
repnz
mov
loop
pop
lods
iret
in
int
bound
jno
insl
push
icebp
and
pop
arpl
add
sbb
jge
mov
adc
dec
xor
mov
cmp
outsb
gs
push
fwait
mov
inc
inc
inc
fcomip
sbb
decl
rcll
std
sub
out
lods
pop
sub
test
fildll
pushf
lods
pop
jae,pt
push
cmpsb
inc
test
bound
dec
cwtl
cmp
and
dec
addr16
cmpsb
fnstenv
push
fs
gs
xor
xor
add
or
push
cmp
sub
ret
add
xor
fildl
or
int3
mov
pusha
and
jnp
stc
xlat
lcall
and
in
stos
adc
negb
cmpsb
andb
mov
in
dec
xchg
out
add
scas
pop
rclb
les
inc
cld
arpl
hlt
jne
sbb
push
sbb
and
pop
xchg
jp
xor
cli
or
push
pushf
icebp
xchg
mov
add
mov
mov
lds
or
mov
pusha
inc
movsl
add
or
ja
ret
shlb
sbb
push
pop
fnstcw
pcmpgtw
lahf
or
fcompl
int
or
out
popa
mov
xchg
and
mov
mov
sub
cwtl
inc
pop
push
in
data16
mov
pushf
mov
or
mov
call
push
or
mov
daa
inc
iret
fsubs
sbb
add
pop
cmp
daa
mov
jg
loopne
pusha
roll
pushf
repnz
insl
sbb
jg
shl
imul
jecxz
xor
lcall
sub
scas
mov
push
push
imul
cmp
sub
xor
lods
or
and
xor
cltd
mov
mov
pusha
add
aam
sbb
mov
push
dec
push
mov
adc
and
cld
xor
dec
aas
cmp
mov
jecxz
mov
lods
test
scas
int
arpl
in
mov
rorl
fmull
push
mov
sub
or
jl
loopne
dec
mov
sbb
sub
repz
sarl
pushf
push
fdiv
orb
addb
arpl
ljmp
xchg
jmp
jecxz
mov
rorb
xchg
gs
xor
test
lcall
push
inc
mov
xlat
xchg
xor
test
cmp
test
sbb
mov
rcr
retw
jle
inc
jecxz
adc
sbb
repnz
xor
mov
cli
aas
inc
mov
lock
pop
mov
imul
adc
fldenv
movl
lret
mov
and
sbb
xchg
addr16
mov
push
cmp
push
mov
pop
cs
rol
pop
es
inc
or
sub
mov
xor
sbb
gs
int
jge
mov
orl
mov
sbb
shrb
cmp
sbb
out
jmp
dec
out
sbb
in
cmc
subb
lods
pop
push
pop
mulb
nop
ret
es
mov
xchg
lcall
cmpsl
test
mov
outsl
jo
lock
mov
test
scas
push
test
in
lcall
insl
rcl
mov
fldl
mov
jbe
rorb
pop
inc
mov
and
add
scas
fsub
loope
dec
push
jmp
adc
inc
adc
mov
push
add
aad
loopne
sub
rcrb
clc
aas
add
or
call
rcrl
sbb
shl
jbe
xor
adc
pop
test
mov
mov
movsb
xor
arpl
pusha
dec
or
and
pop
test
arpl
inc
inc
sbb
cmc
push
mov
in
sub
cmc
pop
clc
xchg
out
arpl
sbb
incb
sub
insb
or
xor
in
popa
in
in
xchg
loopne
push
sbb
shrl
ja
push
mov
inc
aaa
lods
sub
pop
pop
add
jecxz
add
loope
ds
push
adc
pop
int3
xchg
ljmp
mov
dec
adc
fcompl
sub
xchg
jmp
cmp
mov
pop
es
js
fistl
xchg
jbe
sub
adc
jbe
in
les
or
xchg
pop
ja
std
dec
push
inc
or
aam
pop
pushf
out
ret
ss
fs
jne
enter
popf
xor
sub
jae
pop
test
jle
push
outsl
and
cwtl
dec
shrb
and
xor
mov
dec
ds
sub
icebp
cs
arpl
test
pop
mov
dec
dec
insl
mov
mov
lahf
xorb
js
mov
sbb
call
pcmpgtw
dec
and
fdivrl
xchg
testl
xor
cwtl
in
lcall
and
pop
xor
sbb
shlb
cmp
xchg
dec
mov
xchg
or
cmpsl
mov
xchg
mov
cmpsl
mov
sbb
jae
hlt
jecxz
movsl
nop
call
cwtd
jae
jecxz
mov
jl
pushf
and
in
jnp
pop
sbb
mov
inc
push
push
mov
pop
mov
in
push
loope
pop
movsb
leave
inc
cmp
arpl
sbb
pusha
popa
scas
and
sbb
inc
jb
xchg
outsl
outsb
or
sahf
push
or
sbb
adc
lret
mov
cmp
jl
push
call
scas
in
xchg
and
imul
or
aaa
push
xchg
fdivp
inc
sar
dec
push
je
mov
in
inc
dec
cmp
pushl
xor
pop
aam
popa
shrl
sub
testb
push
or
pop
fldcw
mov
jbe
dec
pop
in
mov
dec
adc
jge
cmp
fwait
cmp
test
mov
out
stc
lret
fldl
and
or
inc
jl
sub
in
add
or
jnp
jns
xor
push
push
ret
decl
jae
std
push
fwait
jecxz
and
in
mov
and
rolb
outsb
inc
push
pop
dec
inc
adc
out
mov
sbb
and
sub
dec
jns
pop
and
add
fmull
and
inc
and
xor
js
inc
fs
and
jle
add
sub
rolb
popf
fwait
test
mov
scas
xchg
aas
sbb
movsb
lods
pop
shrl
and
or
jmp
divb
leave
outsb
out
stos
test
xchg
fiadds
mov
inc
jb
icebp
lock
test
jbe
sub
adc
lea
mov
xor
shlb
sub
inc
mov
sarl
inc
or
sbb
iret
lret
sub
cwtl
test
cs
mov
dec
sarl
fsubl
pop
xor
jge
pop
mov
fcomps
push
xor
jo
hlt
xchg
sbb
call
aad
adcl
andb
int
nop
fsubp
xor
pop
sbb
aaa
dec
inc
cmp
xchg
sarl
mov
fmulp
sub
and
push
push
mov
hlt
clc
push
clc
enter
das
cli
lds
mov
sbb
inc
fmuls
fdivs
cwtl
andl
sarl
das
outsb
dec
fmull
std
sbb
push
out
scas
fs
loop
xchg
or
outsb
shlb
jbe
ficomps
int
les
adc
cld
mov
fidivrl
xchg
rcrb
inc
and
xor
lods
cmp
mov
push
push
push
pusha
inc
stc
pushf
clc
inc
fistpll
xchg
xchg
loope
jnp
sti
pop
add
inc
out
cmc
loope
loopne
ret
clc
test
adc
or
xor
out
sbb
dec
sub
mov
mov
inc
xchg
loop
lods
adc
cmp
pushf
cmc
out
jbe
push
sub
xchg
xor
sbb
or
add
push
adc
jns
push
mov
jecxz
push
loop
add
andb
adc
xchg
sub
cmp
dec
push
enter
sub
push
ffree
jge
jmp
bound
sub
jno
fprem1
jp
lea
lock
sbb
lock
fnstenv
ljmp
add
sahf
inc
adc
mov
arpl
mov
vpmulhuw
mov
push
popa
cli
imul
pop
xor
xchg
cli
inc
push
jg
push
sub
rcll
sub
cmpsb
pavgb
lods
stos
pushf
fidivs
mov
scas
std
and
pop
sub
mov
jge
in
mov
jns
sbb
faddl
mov
xchg
outsb
sarb
pop
cli
inc
ret
outsl
ds
popl
dec
test
shl
cmc
adc
sarl
add
int3
addr16
pushf
cmp
imul
sbb
imul
or
cmp
adc
popa
test
and
ja
out
test
xor
cltd
popaw
xor
lret
xchg
gs
lret
vmovdqa
push
ret
xor
adc
pop
xchg
push
xchg
dec
sarb
mov
xchg
scas
lods
mov
cmpsl
leave
clc
xchg
mov
mov
mov
add
or
and
mov
cmp
dec
or
jmp
sbb
and
inc
lds
and
test
add
inc
rcl
xchg
pushl
leave
xor
ljmp
or
mov
jbe
lock
popa
fldt
movsb
adc
rclb
push
out
enter
push
rcrl
xor
and
jge
cwtl
jno
test
das
xchg
outsl
mov
mov
jae
mov
sub
loope
int3
sub
jge
pushf
mov
js
adc
sbb
sbb
test
mov
mov
push
mov
je
jmp
push
jns
xchg
std
inc
and
outsb
lret
pop
scas
fists
cld
mov
and
aam
je
pop
inc
addl
loope
jae
ss
xor
dec
in
mov
adc
adcl
add
rclb
scas
ret
mov
push
cmp
inc
adc
sbb
inc
or
jnp
insb
xor
lcall
push
popa
insb
push
cltd
mov
hlt
enter
cmpsl
incl
push
jp
cltd
mov
scas
hlt
ss
gs
pop
jecxz
and
femms
push
sub
pop
pop
sbb
jl
cltd
mov
add
and
outsl
xchg
mov
sti
hlt
out
and
test
jge
xor
insb
aad
adc
mov
movsb
add
push
mov
sahf
test
stos
jb
ds
jnp
adc
xchg
sbb
sbbl
mov
mov
sub
loope
cltd
jg
mov
es
dec
mov
mov
clc
pop
nop
jl
test
inc
xor
outsl
in
scas
cltd
xor
push
xchg
mov
adc
shr
xchg
ror
imul
push
mov
mov
push
jnp
rclb
movsb
xlat
xor
jmp
cmp
sbb
ror
pop
xchg
or
mov
orb
mov
mov
and
loopne
add
in
jae
and
insl
icebp
inc
in
or
loope
loope
xorb
push
das
sbb
dec
fs
add
sbb
into
rclb
pop
mov
cs
clc
andb
std
xor
outsl
adc
scas
popf
leave
or
xor
popa
lods
sbb
sub
pop
ljmp
or
lods
jge
sub
das
mov
je
lods
fisttpl
inc
scas
xlat
dec
stos
fdivrl
lcall
mov
xchg
add
or
popf
xor
inc
add
mov
adc
repnz
jae
pop
xlat
daa
lds
movsl
insb
add
pop
lods
cwtl
pop
es
xor
xchg
fcompl
or
adcb
pusha
outsl
daa
cmc
cs
jge
inc
lock
mov
mov
cwtl
lods
daa
dec
call
rorl
mov
ds
mov
or
js
jbe
jb
out
rcrl
pop
push
ds
mov
push
std
add
jl
or
popl
inc
mov
push
pop
lods
aas
xchg
xchg
or
xchg
or
xor
lock
jg
loop
inc
jl
mov
pop
mov
adc
inc
fldenv
jge
loopne
dec
call
mov
push
cmpsl
mov
in
push
or
jae
pop
lret
loop
cmp
mov
jne
ljmp
or
into
ds
lock
inc
xor
add
or
icebp
xchg
lret
push
ja
jmp
mov
add
mov
aad
ret
aam
adc
push
sarl
decb
imul
imul
add
fwait
out
orb
push
cmp
addr16
leave
fimull
test
idiv
pop
xor
xchg
ficompl
fimuls
inc
aaa
aam
cmpsl
outsb
cmp
in
pop
repnz
sbbb
mov
inc
sub
jmp
ds
push
jo
dec
insl
or
xchg
pushf
mov
shl
push
jle
mov
dec
mov
sbb
sub
cmp
cwtl
pop
and
adc
sub
shr
jle
stos
adc
xchg
icebp
adc
hlt
pop
mov
sti
inc
inc
scas
xor
ds
out
dec
call
enter
xchg
not
movsb
out
movsb
mov
xor
cmc
insl
insb
and
pop
push
xlat
sub
cmp
or
pop
shl
rcr
cmp
lret
add
in
dec
pop
repnz
mov
mov
icebp
and
cmpsl
ds
cwtl
ja
xor
popf
inc
adc
sub
xchg
sbb
incb
inc
dec
adcb
je
aad
jb
lret
sbb
repnz
ljmp
fidivrl
popa
in
inc
dec
mov
fidivrs
test
sbb
xlat
adc
push
into
lahf
sbb
mov
jp
or
mov
push
pop
mov
stos
mov
mov
and
js
and
push
popa
cmp
out
and
xchg
inc
cmc
jbe
sbb
fists
in
sbb
daa
adc
xor
mov
sbb
orl
dec
dec
lahf
mov
shlb
jae
ret
iret
je
out
xor
pop
and
shrb
xchg
sbb
sar
loop
or
adc
mov
inc
xlat
sub
xor
xchg
xor
jp
scas
adc
mov
mov
fsubl
sub
cmp
sub
xchg
out
scas
xor
mov
or
out
popf
push
push
popa
orl
jl
mov
popf
adc
push
pop
scas
mov
inc
cld
lret
and
cwtl
in
stos
mov
shl
xchg
ret
test
inc
fistps
cmp
sub
xchg
stos
mov
cmp
pop
mov
mov
pop
daa
jb
in
sub
sbb
push
mov
enter
lcall
jl
jecxz
cli
sub
ret
and
fdivr
cmp
nop
jb
pop
scas
cmp
push
xchg
mov
inc
das
aam
sahf
mov
push
out
lahf
inc
ficoml
mov
xor
js
mov
add
stc
jecxz
inc
icebp
daa
push
add
xor
jb
inc
push
push
sarl
and
sbb
es
mov
mov
mov
into
lret
mov
fwait
mov
pop
pop
dec
dec
cmp
sub
sbb
or
sti
out
jmp
fcmovne
lret
mov
fwait
mov
pop
pop
dec
dec
cmp
sub
sbb
or
sti
outsb
jmp
fcmovne
lret
ds
push
mov
outsb
imul
dec
cmp
sub
pop
push
paddd
out
out
into
lret
mov
fwait
mov
jnp
shl
dec
cmp
mov
push
outsb
fs
dec
js
xchg
outsb
cmpsl
jle
pop
or
pop
mov
fcoml
out
daa
aaa
mov
push
scas
addr16
xchg
outsb
cmpsl
jle
push
push
pop
cs
or
fidivs
out
daa
aaa
mov
lahf
push
scas
daa
mov
xchg
outsb
movd
or
out
into
fdivr
je
js
inc
mov
in
ds
adc
ja
xchg
stc
outsb
rclb
loop
lock
pop
das
push
add
lods
in
stc
ja
mov
stc
sub
std
orl
push
sub
cmpsl
mov
and
adc
daa
flds
xchg
clc
out
cli
mov
xor
add
aaa
cltd
pop
xchg
int3
out
in
popa
jl
mov
xchg
stos
jnp
addr16
addr16
inc
jns
lods
mov
pcmpgtd
loope
ja
or
clc
push
inc
movlps
lret
fiadds
test
xor
jg
hlt
xorl
jecxz
xchg
shr
mov
iret
push
pop
arpl
jne
ficoms
push
push
jbe
mov
cmpsb
sub
lea
cmpsl
or
fcoms
imul
outsb
and
push
push
xlat
cs
out
aaa
jg
imul
sub
cmp
cltd
imul
xchg
mov
push
mov
and
es
push
cmp
sub
or
test
in
mov
mov
inc
push
jns
sti
sbb
push
aam
sub
pop
shrb
negl
aam
mov
ds
daa
aaa
mov
push
scas
addr16
xchg
outsb
cmpsl
jle
push
push
xlat
cs
test
daa
aaa
mov
push
scas
addr16
inc
repz
ficomps
hlt
jle
mov
jg
inc
xchg
popf
cmpsl
and
push
and
loop
icebp
add
pop
leave
pop
xorl
in
sti
sub
orb
and
lret
cmp
push
xor
add
mov
stos
pop
into
inc
rorl
shlb
ficomps
je
pop
repz
sub
xor
mov
pop
jae
and
add
jo
into
loop
cmp
arpl
fildll
flds
mov
dec
push
loope
push
fnstsw
jno
pop
push
or
outsb
cmp
mov
ficompl
cwtl
dec
shrb
push
out
mov
in
adc
aam
pop
mov
fnstenv
pusha
hlt
pop
push
jp
mov
xchg
fmuls
jne
std
loope
fsubrl
push
adc
mov
xlat
mov
aam
mov
mull
arpl
es
or
add
arpl
pop
and
cmp
mov
and
push
sbb
jmp
sar
or
jle
pop
aam
test
test
outsb
cmp
sbb
push
popf
dec
mov
out
mov
test
std
ret
pushf
jle
jo
inc
in
inc
mov
cmp
lds
mov
push
cmpsl
lahf
iret
fmuls
repz
mov
repnz
decl
repz
push
outsl
push
add
aas
jecxz
push
loopne
popf
cmc
and
pop
mov
es
das
push
jecxz
jg
sbb
xor
mov
push
push
repnz
xchg
push
xchg
ds
out
and
pop
mov
mov
lods
nop
push
mov
js
sbb
inc
mov
lcall
fcoml
arpl
sub
out
stc
icebp
jnp
xchg
scas
aam
lods
dec
push
js
rcr
or
xchg
jg
pushw
shrb
in
enter
je
mov
and
jnp
pushf
fnstsw
or
pop
int
mov
or
bound
pop
push
push
jns
lods
outsb
aaa
push
pop
fidivrl
mov
or
sbb
or
and
ret
pop
out
pop
pop
cli
pop
xor
ds
rcrl
int3
and
pop
push
test
jno
xchg
inc
add
xchg
inc
sbb
push
mov
add
or
stos
xchg
pop
call
mov
test
scas
or
inc
aam
stc
pusha
cwtl
outsb
mov
lock
pop
push
in
jb
mov
stc
add
or
mov
aaa
jnp
cmp
mov
ret
xor
out
jecxz
inc
loop
jg
sub
cmp
mov
into
push
negl
or
xlat
fmuls
aas
push
rcrl
inc
ror
adc
mov
cmp
movsb
sub
and
cli
inc
jg
pop
or
push
out
add
in
dec
add
out
lock
pop
imul
test
fcmovne
fcoml
rclb
xchg
xor
adc
test
lret
rcrb
pop
mov
or
jge
movsb
jmp
jns
lret
xor
dec
and
icebp
mov
lods
xchg
dec
movsb
jmp
cmp
jbe
pop
rcll
fwait
shl
jbe
mov
pop
push
pop
or
ficompl
adc
adc
rcrl
push
jo
cmpsb
in
fdivs
pop
xor
sbb
cs
enter
dec
push
xor
dec
scas
jo
loop
sbbb
xor
rorb
data16
outsb
and
adc
jmp
sub
testb
out
fsubp
ja
sub
and
inc
or
rcll
enter
cmc
ss
dec
test
ret
in
jg
xchg
mov
std
out
pop
sarl
jge
adc
pop
sub
roll
sbb
nop
out
push
sbb
lret
inc
cmp
xchg
es
or
or
mov
and
push
dec
inc
mov
lahf
in
xchg
jmp
clc
sbbl
stos
and
mov
outsl
cltd
pop
das
mov
xchg
sub
in
fbstp
pop
mov
inc
mov
in
xchg
push
push
lret
inc
mov
imul
jg
mov
test
xchg
cmpsb
loop
xor
push
push
pop
mov
dec
mov
fildl
addr16
je
outsb
and
cmpsl
in
addr16
sti
lret
mov
rcl
ret
fmul
mov
mov
and
aad
repz
xor
outsb
and
aad
gs
insl
scas
dec
imul
lock
shll
bnd
mov
por
pop
jle
push
dec
imul
mov
ds
push
cltd
mov
or
jp
ss
mov
xor
mov
jmp
pop
jnp
cmp
adc
jecxz
mov
addb
sbb
jnp
sti
jl
sub
add
pop
jmp
ret
and
and
inc
popf
pop
xchg
pop
mov
push
xchg
dec
inc
cmc
mov
inc
out
repnz
push
inc
sub
jl
sbb
in
loope
jae
xchg
sub
iret
sarl
inc
mov
xchg
aam
test
push
jbe
push
add
iret
sub
or
mov
xchg
xchg
pop
ret
stos
or
lahf
pop
hlt
jmp
or
sbb
mov
andb
leave
daa
pushf
and
aaa
pop
lret
push
nop
push
mov
setl
lret
or
or
nop
sbbb
daa
bswap
fs
dec
jno
stc
stos
jmp
xchg
xchg
pop
test
cmp
repz
sub
push
imul
push
mov
lret
jo
insb
pop
cld
mov
mov
out
cmp
in
inc
test
es
dec
push
cmp
jle
jno
mov
pop
or
dec
adc
outsl
into
mov
mov
lods
pop
xchg
add
test
and
sbb
js
lcall
enter
ss
repz
mov
mov
mov
xor
adc
or
lret
pop
repnz
cwtl
mov
or
popa
cmp
dec
cltd
fcomps
outsl
mov
lahf
inc
dec
mov
aaa
inc
ror
lods
stc
jl
out
in
push
stc
inc
jae
imul
test
mov
mov
in
insb
xor
sub
jp
ds
fnstcw
mov
push
jmp
pop
in
jmp
pop
ficoml
testl
repz
test
ds
mov
or
rcl
test
adc
push
call
lods
mov
addr16
in
out
daa
iret
loopne
aad
xor
dec
push
pop
adc
push
adc
dec
jb
test
aaa
cwtl
and
sub
icebp
mov
xchg
mov
pop
cld
loopne
stos
sub
or
jo
sbb
test
mov
ret
jg
cmp
push
and
mov
cld
dec
xchg
pusha
xchg
leave
int
sbb
sub
mov
adc
or
in
fprem
imul
je
aaa
xor
cmc
psubusw
mov
adc
stos
mov
xchg
cmp
add
mov
dec
cs
cmpsl
sbb
push
insb
rcll
jle
jmp
pop
or
test
mov
xor
add
inc
ja
dec
jle
xlat
lods
test
mov
inc
pop
push
dec
xchg
loope
push
test
and
ficoms
sub
fucomip
mov
jmp
lahf
std
insl
sbb
cmc
repz
inc
outsb
or
jnp
xor
hlt
insl
in
lods
jnp
xorl
cmp
aas
mov
sahf
push
and
push
ret
pop
scas
icebp
sub
sbb
pop
xchg
add
andb
mov
jmp
addr16
mov
xchg
dec
call
mov
cwtl
movsl
adcl
in
add
xchg
add
dec
xor
stos
xor
out
mov
mov
xorb
out
daa
movsb
ljmp
push
sahf
inc
stc
imul
jmp
enter
mov
add
aas
in
jge
or
jbe
popa
ljmp
cmp
outsl
push
test
and
inc
mov
sbb
cmp
and
test
pop
popa
sub
idivl
sbb
mov
mov
and
aaa
xchg
ret
inc
and
jecxz
xorb
in
and
xchg
incl
add
mov
jl
aaa
jge
sbb
je
into
sub
jg
pop
call
sub
call
in
mov
jle
inc
inc
pop
xlat
mov
pop
fcoms
shlb
mov
xchg
cmpsl
pop
call
mov
into
hlt
inc
jge
repnz
lea
daa
jnp
popa
aam
loope
ret
push
jae
lds
mov
cmp
repz
push
sbb
or
subb
jns
xor
ja
into
cmp
mov
aas
sub
and
xlat
xchg
cmp
shll
call
lds
fwait
cmp
ljmp
mov
xor
adc
hlt
fildl
jno
cmp
cld
dec
in
cmpsl
hlt
js
in
jno
jnp
insb
sahf
xchg
jb
sti
jle
mov
pop
mov
in
xor
inc
push
push
sbb
sti
jmp
pop
mov
fildll
add
mov
cli
into
add
pop
sub
mov
or
add
xchg
jmp
out
out
mov
in
add
add
stc
scas
sbbl
ljmp
sarl
clc
je
inc
scas
sbb
pop
sbb
or
sub
lret
pop
xlat
cmp
cmp
loope
add
mov
and
push
fmull
inc
adc
xor
sub
pop
or
jmp
inc
push
push
xchg
push
push
mov
inc
sahf
jno
scas
ret
loopne
shr
dec
cld
sbb
cmpsb
pop
push
in
stos
enter
divb
repz
pushf
xchg
fildl
sbb
invd
cld
addr16
add
mov
popf
scas
mov
aam
cmpsb
repnz
jecxz
xchg
mov
addr16
popf
pop
jecxz
lahf
rolb
jle
rcrb
pop
nop
movsl
pop
out
test
pop
adc
adc
jecxz
lahf
icebp
mov
jnp
dec
in
std
dec
adcb
pop
or
pop
mov
jne
inc
pop
popf
fsub
das
jge
std
mov
jnp
movl
xor
push
nop
mov
pusha
sbb
pushf
push
scas
mov
repnz
push
pop
fmuls
sub
es
lods
inc
les
fistps
daa
fldl
cli
sbb
movl
sar
ret
rep
xorl
addb
pop
inc
fdivrl
bound
cmp
mov
gs
inc
pop
jp
lret
loopne
push
jnp
push
sti
mov
adc
arpl
sti
cmpsl
fistps
arpl
loope
pushf
call
jne
add
jbe
and
loopne
in
sbb
aam
push
lea
in
lret
lods
xor
cmp
or
mov
popl
test
sarl
in
mov
out
and
xchg
imull
lock
fcompl
popf
cmc
dec
mov
xchg
xor
repnz
jo
pop
push
inc
out
push
jns
lret
pop
cmp
int
ds
cmpsl
out
adc
fadd
lea
jle
mov
add
cmp
mov
mov
inc
inc
pop
inc
adc
jge
fwait
mov
lea
push
sbb
stos
sbb
push
clc
shrb
mov
or
test
jp
repnz
cmp
popl
adc
xor
xchg
pop
adcb
and
and
or
jmp
pop
xor
mov
aas
scas
xchg
xchg
out
fldenv
fwait
lcall
cmpsb
shll
adc
xchg
push
mov
jae
popf
out
into
pop
outsb
push
sbb
pop
sbb
test
idivl
outsl
popf
mov
push
mov
sbb
out
xchg
push
mov
cmp
push
cmovb
mov
rorl
or
js
leave
loopne
in
sbb
jo
insl
xor
jp
add
or
dec
pop
push
jne
mov
push
loopne
loopne
xchg
loopne
mov
outsb
mov
inc
sub
dec
pusha
je
add
cld
pop
xlat
pusha
mov
jne
push
inc
in
mov
add
daa
push
inc
cmp
sub
shll
mov
lcall
gs
loop
stc
aaa
outsl
and
pop
inc
adc
sub
push
shll
mov
outsl
scas
xchg
outsl
or
ljmp
cltd
jge
out
jbe
test
and
xchg
ficomps
inc
imul
test
sahf
sbb
mov
sub
xchg
subb
divb
xor
arpl
cs
sub
sub
and
pusha
sahf
arpl
xchg
stc
sub
jne
dec
mov
adc
in
xchg
std
fs
and
fiaddl
sbb
push
cmpsl
popf
movsb
mov
and
ds
mov
xchg
pop
jle
shl
xor
addr16
stos
clc
je
lahf
and
mov
xlat
insb
scas
mov
sbb
clc
insb
sbb
shl
int3
in
mov
mov
out
jle
fldl
insl
xchg
loope
sbb
pusha
add
xlat
sub
lret
sti
mov
jg
xor
jge
pushf
imul
sbb
pop
mov
fwait
in
mov
jle
mul
nop
popf
cmp
sbb
in
rcll
xor
xchg
pop
jnp
ljmp
cs
fdivp
mov
dec
mov
pop
popa
enter
mov
xor
stos
jecxz
xchg
lret
inc
and
jle
sub
mov
lods
sarl
mov
into
sub
fadds
lods
cmp
fwait
out
int
arpl
divb
mov
or
jl
fs
mov
test
fbstp
jp
and
cmp
jbe
cmp
pop
push
inc
jg
add
loope
int
lods
push
outsb
cmp
pop
mov
xchg
pop
clc
and
cmpsb
movsl
dec
bound
ljmp
daa
mov
inc
in
out
cld
pop
cmpsl
pop
mov
push
je
push
out
dec
jmp
xchg
fildll
idivl
aam
mov
pushl
or
pop
jl
add
ror
lahf
rolb
sbb
push
adc
mov
jns
jnp
pop
or
out
pop
jecxz
jno
in
mov
jecxz
jb
lods
jne
test
push
jno
pop
jp
lret
ret
adc
test
inc
push
and
mov
jl
ret
sub
test
stos
xchg
sub
or
mov
pop
cmp
jecxz
xor
mov
push
cmp
gs
pop
std
mov
jge
lods
push
test
xlat
push
pop
adc
inc
repnz
arpl
pop
jns
xor
cmpw
adc
movsb
cmpsb
pushf
jmp
loop
ja
jne
addr16
shrl
pushf
mov
ror
pop
mov
xor
in
cmp
dec
mov
mov
and
adc
test
xchg
rcrl
cltd
xchg
iret
dec
push
push
aad
ds
sbb
xchg
cmp
push
faddp
add
cmpsl
pop
add
xor
stc
cli
scas
in
mov
shll
mov
out
and
pop
fdivrl
sbb
jp
lcall
mov
push
scas
test
insl
mov
pusha
push
and
add
cld
cmpl
outsb
fimull
sub
add
insl
fidivrs
ret
in
cli
adc
movsb
xchg
xor
popa
loopne
adc
jp
iret
sbb
clc
repnz
or
cmp
std
mov
xor
sarl
test
je
in
gs
adc
fildl
out
lea
mov
fwait
pop
scas
adc
int3
xor
mov
sahf
cmp
mov
into
pop
and
das
fisubrl
jmp
aam
jb
lahf
dec
and
push
aad
cmp
test
push
popf
jns
cmpsb
push
sub
push
jnp
mov
enter
fsubl
xchg
xchg
fwait
push
push
cmp
es
jle
push
push
dec
inc
mov
repnz
int3
outsb
es
cmpsl
fwait
enter
adc
arpl
in
cld
mov
xchg
xchg
xor
jno
aam
iret
aam
add
movsb
cmp
and
add
cmp
pop
cmp
jno
dec
lahf
jg
mov
cmc
cwtl
cmp
mov
push
int
in
mov
and
inc
inc
movl
sub
or
mov
leave
ret
insl
mov
rcr
fwait
cli
in
lcall
mov
pop
sbb
push
push
jbe
sahf
dec
mov
shr
lret
fs
dec
mov
subl
inc
iret
sti
add
jo
std
inc
ds
int3
popf
lahf
jle
or
add
mov
jnp
pop
aas
pop
xor
xchg
mov
xchg
movl
cltd
sahf
test
outsb
mov
loopne
aad
ret
lret
test
push
xlat
mov
cli
rolb
loopne
idivb
leave
and
jle
push
mov
add
inc
lcall
jmp
pop
sub
pushf
jae
movsb
roll
mov
jno
and
gs
popf
je
pop
xor
pop
mov
rcrl
push
rcrb
jp
push
pushf
stos
and
ffreep
add
stc
nop
push
cmp
loope
mov
and
xchg
int
jne
pop
pop
subb
cmp
mov
xchg
negl
lcall
cmp
in
mov
test
push
sbb
lods
cs
rorb
sbb
pop
stc
xchg
and
cs
inc
cmp
dec
lds
xor
sub
scas
mov
sub
and
jg
pusha
loop
out
call
out
push
outsl
fstpt
fsubs
pop
in
xchg
dec
aaa
inc
add
mov
fsubrl
shlb
addb
cli
cwtl
negb
dec
aad
cmc
jne
dec
iret
pop
aad
mov
mov
lahf
cmpsl
xor
push
lret
xor
and
jp
mov
xchg
push
xlat
dec
mov
dec
sub
xchg
lods
cwtl
jne
or
clc
pop
pusha
out
cld
fisubs
inc
mov
test
sarb
push
pop
push
pop
adc
adcl
in
fildl
push
and
mov
mov
das
mov
push
addl
pop
out
xchg
lahf
adc
inc
cmp
push
mov
stos
ret
push
push
push
jbe
pop
jne
dec
jb
pop
clc
xor
mov
sahf
jbe
lret
je
dec
scas
in
stc
cld
je
cmc
test
and
jecxz
dec
push
sahf
jmp
mov
icebp
pop
divl
scas
mov
stc
jg
std
fsubp
inc
mov
jg
popa
dec
movsl
xor
sub
push
xor
jecxz
int3
xchg
xor
addr16
mov
xor
dec
push
mov
and
test
dec
shrb
adc
pop
xchg
hlt
dec
mov
pop
aaa
data16
mov
data16
cld
sbb
aaa
imul
dec
aam
dec
lret
dec
test
out
dec
jne
xchg
xchg
push
inc
xor
scas
mov
mov
push
mov
mov
stos
cwtl
nop
add
lcall
ret
mov
cld
dec
fsubrs
add
mov
push
enter
shrb
xchg
or
lods
int3
push
sub
jno
cwtl
or
nop
cld
jb
out
mov
cmpl
pop
push
xlat
and
scas
mov
in
push
movb
mov
jbe
loopne
mov
scas
ret
xor
popf
dec
pop
dec
inc
test
out
sub
popa
nop
fnstsw
sub
aad
mov
pop
push
push
xor
in
jge
or
push
xchg
shrb
jnp
repz
testb
xchg
lods
scas
inc
mov
push
dec
dec
add
sub
aam
inc
push
pop
std
popa
jle
loop
sbb
es
aas
xchg
cltd
ror
aam
cwtl
sub
movsl
clc
jbe
daa
cmpl
cld
dec
jbe
xchg
sub
xchg
jl
and
in
sub
shlb
mov
jnp
sbb
je
shrb
js
je
mov
mov
sbb
push
loop
imulb
in
xchg
sub
push
xor
pop
xchg
mov
mov
dec
cmc
and
movb
cmpsb
call
push
adc
adc
jb
adc
sbb
mov
mov
dec
rcl
adc
xchg
sarl
test
mov
add
xor
fwait
mov
call
pop
sub
test
jg
rcl
xor
scas
pop
lds
pop
xor
cmp
dec
cmp
inc
mov
mov
cmpl
imul
or
outsl
xchg
insl
push
add
out
adc
lcall
dec
jne
sub
repnz
dec
aas
loopne
es
mov
inc
add
inc
adc
jmp
cmpsb
xchg
push
lret
jle
push
push
xlat
cs
test
daa
aaa
mov
push
scas
addr16
xchg
outsb
cmpsl
jle
push
push
xlat
cs
test
daa
aaa
mov
push
scas
addr16
fildll
jle
push
pop
jg
out
test
daa
pushl
mov
push
scas
inc
mov
xchg
outsb
cmpsl
jle
push
push
xlat
scas
addr16
mov
stc
iret
push
test
cwtl
inc
mov
rcrb
sub
cmp
dec
pop
sub
dec
adc
les
mov
out
call
aas
sbb
inc
pop
cmp
dec
jg
outsl
push
mov
mov
aas
call
es
data16
inc
js
in
pop
mov
mov
mov
sub
test
mov
rcll
xor
and
fwait
xor
shr
and
xchg
in
in
test
mov
xchg
in
cmc
jle
in
inc
sub
jp
mov
test
test
inc
imul
dec
mov
mov
out
popf
out
and
iret
aam
jo
int
aam
mov
pop
scas
xchg
pop
js
mov
cwtl
push
sub
inc
jo
lods
fcoms
jmp
pop
adc
out
mov
rclb
test
sbb
lea
hlt
xor
xor
les
gs
ret
pushf
mov
inc
lods
mov
push
aas
dec
cmp
lods
jg
outsl
push
cmpsl
add
and
clc
fcmovu
clc
stos
popa
pop
push
pop
push
inc
push
daa
sub
add
js
mov
lret
xlat
int
fucom
mov
fistps
das
pop
outsl
pop
or
or
pop
popf
cmp
into
test
ror
lea
stos
fs
dec
dec
jle
jp
adc
push
mov
mov
out
call
aas
sbb
sub
cmp
dec
jg
outsl
push
mov
mov
out
call
aas
mov
sbb
inc
mov
push
jecxz
cmpsl
loope
imul
adc
cmp
xor
pop
fadds
jp
movsb
nop
popa
adc
xchg
cmp
daa
lret
out
clc
adc
cmpb
stc
std
test
sbb
test
or
or
les
imul
movsb
out
jg
mov
stc
push
stos
mov
loop
mov
jp
cwtl
sti
fbld
xor
imul
dec
fwait
out
xchg
ret
sbb
mov
push
insb
jb
mov
mov
mov
jl
mov
inc
pop
int3
mov
xlat
into
cld
push
push
aas
and
or
stos
int3
repz
cmp
cmp
insl
xchg
push
lods
sub
aas
mov
adc
mov
sbb
inc
scas
jae
adc
jmp
mov
clc
sub
addl
mov
flds
ljmp
outsb
and
pop
pop
dec
cli
hlt
loope
pop
xchg
sarl
mov
push
ds
push
imul
push
mov
in
pushf
push
mov
mov
pushf
into
cmpsl
mov
call
xchg
frstor
mov
out
jno
pop
jnp
pop
mov
and
cmp
popa
nop
jbe
adc
jmp
mov
sub
xlat
jno
mov
aaa
int
and
sub
popf
loopne
and
mov
add
mov
in
push
pop
mov
popf
loope
sahf
push
hlt
xchg
jmp
cld
mov
hlt
ret
or
add
lret
sbb
cmpsl
sub
adc
fucom
xor
add
mov
les
dec
pop
das
dec
cmc
lea
jle
loop
frstors
jmp
imul
dec
xchg
add
repz
mov
notb
adcl
mov
int
shll
nop
or
or
mov
andb
loopne
test
xor
add
add
pop
call
inc
xchg
and
add
pop
in
sbb
push
enter
add
loop
aas
lret
sub
fimull
aad
pusha
xchg
sub
and
mov
mov
push
jp
sbb
push
inc
jmp
repnz
xchg
push
add
xor
pop
and
js
mov
push
dec
mov
push
sbb
hlt
cmp
les
sbb
xchg
sub
inc
pop
inc
mov
push
jl
pop
jo
mov
inc
jbe
jno
sahf
arpl
dec
dec
mov
push
dec
test
dec
pop
mov
jae
fwait
jge
cld
imul
sub
pop
mov
xor
aas
pop
roll
push
nop
mov
xchg
in
roll
iret
inc
fmull
or
lods
insb
mov
and
popa
xchg
cld
sahf
nop
push
ss
inc
cmpl
test
call
cld
or
xor
xor
mov
loopne
lret
push
sub
das
aam
push
push
je
lcall
adc
cmpsb
xchg
outsb
mov
ret
dec
lock
sbb
or
test
leave
or
pop
dec
mov
dec
dec
jg
ror
xchg
add
jge
mov
aad
mov
inc
jmp
mov
inc
rorb
imul
call
out
pop
cmp
push
adc
and
mov
or
sar
std
stos
shrb
outsl
fld
pop
jns
dec
test
xchg
lea
dec
cmp
pop
cs
jb
data16
test
mov
outsl
lahf
int3
xchg
adc
fldt
xchg
add
aad
cli
imul
xchg
les
inc
sub
dec
fildll
xor
inc
or
leave
hlt
in
jb
sahf
ja
je
sub
into
cli
sbb
or
push
sbb
ljmp
adc
jo
sti
jecxz
pop
dec
pop
dec
sbb
inc
xchg
int3
das
sbb
push
mov
testl
call
dec
shll
mov
and
inc
xchg
js
pop
jecxz
outsl
xor
loopne
push
pusha
dec
mov
and
xchg
scas
test
push
sub
push
mov
aam
testb
out
data16
aad
jb
mov
hlt
and
movsb
nop
lods
adc
xor
popf
pop
rcrl
and
mov
adc
inc
fchs
or
xor
fwait
in
jge
cmp
loope
mov
inc
std
mov
pusha
jg
mov
repz
shlb
fdivrs
js
adc
repz
ss
shlb
xor
outsb
pop
lahf
pop
shl
push
shrl
sahf
sub
pop
xchg
fwait
cli
rcll
push
imul
and
push
xchg
xchg
iret
and
push
cmc
mov
test
cmp
popf
and
mov
cwtl
xchg
js
adc
push
sbb
stos
pop
push
aad
dec
sbb
xor
imul
out
divb
push
mov
jl
cwtl
ret
shrl
fld
or
dec
and
pop
mov
out
adcb
pop
jo
xor
xchg
loop
jecxz
in
mov
or
add
pop
mov
mov
sub
xchg
mov
inc
aaa
mov
push
daa
nop
jne
in
ror
xlat
xchg
setge
or
mov
and
xchg
sub
push
fcmovnbe
or
stos
cmpsb
jle
cwtl
and
outsb
dec
mov
movsl
ret
xchg
shll
push
repnz
jne
jmp
sub
jno
adc
mov
sub
test
cmp
jl
cmpsl
pop
jns
and
mov
mov
jl
add
int3
xor
cmc
hlt
popf
xor
mov
and
pop
push
xor
mov
inc
js
add
or
jo
add
mov
xchg
imul
sbb
mov
outsl
aas
mov
out
ljmp
aaa
add
mov
push
and
mov
bound
les
in
mov
loopne
cmp
in
xchg
pop
test
xor
or
aaa
shrb
mov
mov
sarl
or
hlt
movsb
nop
sub
xor
jmp
ret
fisubrl
or
cmp
mov
or
jnp
lods
cmp
imul
mov
and
out
mov
xlat
aad
xchg
out
mov
out
jne
mov
js
sub
and
lds
ja
mov
mov
add
jno
jno
outsb
mov
mov
pop
repz
mov
xchg
xchg
jecxz
stos
shll
pop
fisttps
mov
mov
test
jp
lock
dec
out
push
sbb
pushf
dec
ret
iret
xor
inc
jl
adc
cmc
sub
cmp
xchg
ret
fcoms
leave
js
sbb
cmp
adc
cs
sub
sahf
fistpl
lret
dec
sub
jbe,pt
lcall
xor
xchg
push
jecxz
and
mov
shlw
sahf
data16
or
sub
and
lret
out
dec
jae
and
dec
dec
js
shll
mov
inc
aaa
shlb
fildl
imul
addr16
xor
leave
adc
cltd
sbb
js
insl
cmpsb
sub
mov
xchg
mov
xor
xlat
pop
out
mov
xchg
cmpb
pop
push
movsb
sbb
test
pop
fcompl
jle
imul
push
and
mov
sub
and
push
mov
and
packssdw
adc
aas
pop
xor
xor
sbb
loopne
mov
jl
insl
loopne
fcomp
sti
mov
sub
lahf
push
lahf
dec
addr16
mov
clc
xchg
cld
push
adc
and
pop
add
sub
dec
fcom
add
jmp
sbb
aad
ret
arpl
xchg
push
mov
mov
mov
dec
ja
sub
xchg
bound
rolb
add
jno
movl
negl
pop
pop
in
fdivl
in
cwtl
in
inc
lahf
adc
rorl
repz
fidivrl
or
adc
xor
imul
xchg
test
ret
ficoml
mov
scas
push
loope
stos
scas
iret
and
mov
or
push
mov
mov
clc
jg
dec
xor
inc
jecxz,pt
fs
faddl
lock
fisttpll
xchg
test
cli
add
push
cli
adc
daa
rclb
cmp
in
outsb
frstor
and
pop
fsub
cmp
push
dec
rcl
mov
mov
std
mov
imul
sti
sbb
jb
sbbl
add
aad
lock
add
dec
jns
adc
cli
cwtl
or
sub
repz
aad
xor
and
inc
xor
mov
in
inc
inc
sbb
mov
shll
es
xor
fsts
popf
and
jmp
inc
aas
mov
dec
pop
xchg
xor
and
mov
fistps
xchg
insl
aam
sbb
and
shlb
xchg
ljmp
aaa
sub
shll
stos
scas
jmp
mov
insb
pop
stos
es
mov
inc
add
push
decl
inc
sti
push
lods
shlb
jge
insb
jns
dec
rcrb
jae
jl
xor
cmp
jnp
out
pushf
fistl
mov
cmp
xchg
adc
cmp
stos
push
mov
dec
loop
mov
rcl
mov
cs
lret
add
xchg
push
aaa
sub
out
mov
mov
jne
dec
mov
mov
aaa
ja
ja
rorb
cmp
das
fiaddl
mov
popa
adc
out
push
out
dec
mov
movsb
mov
bound
push
jns
mov
sbb
xor
popf
les
inc
and
or
or
fiaddl
adc
stos
and
movsl
repz
int3
inc
orl
push
pop
in
fwait
mov
jmp
imul
out
push
dec
mov
xchg
add
cli
fs
popf
and
xor
shll
and
lds
lret
jns
loop
mov
stos
in
sub
in
scas
inc
out
or
add
test
cmc
repz
cmpb
and
ror
push
adc
pop
fcoms
ret
sbb
andb
mov
cli
jbe
jb
jbe
inc
fst
addr16
dec
sti
xchg
add
pusha
andl
mov
in
mov
js
inc
fcomps
imul
pop
adc
pop
add
ficoms
test
into
xor
pop
je
adc
psrld
mov
pop
scas
mov
pop
push
inc
shlb
loope
pusha
sbb
loop
add
mov
xor
in
add
and
adc
adc
xchg
enter
add
mov
mov
xchg
sti
sub
sub
sbb
mov
or
ljmp
loop
popl
push
mov
lods
mov
xchg
lahf
pop
xchg
fwait
enter
mov
jge
ficoml
imulb
insb
pushf
dec
aad
mov
popa
push
loop
mov
dec
inc
add
sub
outsl
stos
inc
adc
inc
mov
mov
dec
movsl
and
popa
out
andl
xor
push
addr16
pushf
add
jmp
inc
mov
xchg
shll
cmpb
or
jge
pop
subb
aad
mov
push
jp
aad
sbb
dec
push
mov
cmp
shl
aam
ret
or
pop
push
je
aad
test
sbb
xor
test
rcrl
add
mov
xchg
or
mov
inc
inc
jnp
sub
addr16
jmp
mov
mov
mov
sub
jg
scas
cmp
xchg
cmpsl
icebp
mov
sarl
stc
cmp
or
and
push
pusha
movsb
insb
fcmovb
repnz
outsb
repz
into
pop
sti
lcallw
jo
xchg
daa
sub
pop
fwait
scas
lock
xor
sbb
pop
ja
cmp
or
inc
xor
xchg
push
sub
mov
stos
add
fimull
adc
sbb
lods
add
push
cltd
mov
lds
cmp
xchg
adc
shll
xchg
leave
xchg
fdivl
shl
mov
iret
test
cmp
mov
pop
jne
pop
daa
jmp
mov
enter
xor
jge
popf
sub
xlat
shll
lods
sbb
cmp
inc
add
or
mov
inc
out
inc
fwait
pop
xchg
fimull
dec
cwtl
filds
loop
add
push
outsb
jnp
or
jmp
scas
es
pop
js
mov
jecxz
jle
mov
testb
aaa
cmp
popa
addr16
mov
outsl
jp
aam
les
aam
test
add
jecxz
es
das
stc
mov
xchg
add
pushf
cmpsl
cmp
ds
xor
mov
push
pop
jns
mov
pop
hlt
stos
pop
jecxz
daa
in
mov
xchg
mov
js
dec
test
es
jno
or
loope
orl
and
test
leave
mov
and
stos
jnp
pop
addb
scas
xchg
test
adc
inc
mov
fdivl
cmp
or
jns
es
scas
pop
stc
in
test
and
add
into
cld
sub
mov
inc
mov
movsb
mov
test
push
and
jno
aam
shlb
setg
divl
movsl
out
ret
fiadds
inc
loopne
popa
shrb
adcl
in
iret
adc
mov
add
or
shr
daa
xlat
test
sahf
and
sub
jnp
rcr
repz
pusha
add
aam
mov
out
jno
movd
xor
frstor
gs
or
mov
jle
or
jl
lock
adc
jmp
jae
or
xchg
pop
push
rdtsc
xor
xor
imul
sbb
pop
mov
clc
sbb
or
es
push
mov
xor
scas
xchg
shlb
cltd
cmpsl
ja
test
cwtl
test
sarb
lret
and
pushf
mov
adc
gs
and
cmpsb
xchg
mull
jmp
test
lock
jle
lret
lahf
mov
mov
bound
incb
jp
int
enter
jecxz
pop
push
adcb
addl
lea
fsubrl
test
and
int3
fcomps
dec
sbb
xchg
pushl
stc
ds
lea
xor
repz
int3
out
push
xchg
jg
aaa
fisubs
mov
cmp
fsts
das
fcoml
jp
jae
imull
dec
lret
dec
in
mov
or
pop
sub
xor
pop
xorb
mov
inc
out
or
pop
push
and
int3
cmpsb
push
jge
push
out
push
mov
dec
repz
pop
adc
in
cmpsl
or
dec
loopne
ja
test
stos
aas
mov
popf
movsl
mov
and
xchg
xchg
in
mov
xchg
inc
das
aam
fidivl
xchg
push
mov
stos
imul
cltd
jns
or
cli
aas
daa
shlb
dec
or
aaa
lods
shl
mov
xchg
jbe
push
outsb
scas
pop
xchg
adc
lea
mov
je
mov
dec
inc
push
cmp
sub
pusha
jl
mov
mov
test
ss
dec
push
es
movsl
adc
xchg
jle
mulb
pop
lret
aaa
add
movb
dec
jmp
movsl
cmpsb
add
mov
xchg
adc
sbb
popa
lcall
loopne
hlt
mov
jecxz
and
fsts
push
test
adc
dec
sub
pop
sahf
inc
push
jge
push
mov
ficompl
mov
mov
enter
imul
xor
adc
pop
adc
mov
in
testl
subl
lahf
cwtl
into
jmp
sub
mov
or
ja
cmp
outsl
loop
out
or
daa
andb
out
aaa
mov
clc
repz
les
push
pushf
cmp
ljmp
or
rcr
test
xchg
mov
push
or
inc
push
jns
insb
mov
pop
leave
mov
dec
push
fsubrs
push
xchg
in
push
jne
int3
dec
jo
jo
mov
jne
imul
xor
jle
cli
pop
adc
xorb
or
stos
es
xchg
ds
loope
and
cmp
lahf
test
out
loope
sub
clc
pusha
xor
lahf
mov
ret
push
jbe
outsb
xor
jae
test
jnp
daa
jg
flds
jbe
nop
add
pop
sti
or
dec
and
xchg
inc
popf
sbb
pop
xor
loop
lock
cmp
and
mov
sbb
pop
ret
jmp
imul
cwtl
cmovbe
incl
xor
loopne
cmp
cmp
mov
aad
lea
mov
xchg
fptan
lods
movsb
xor
pushf
jle
cmpsl
out
ljmp
xchg
or
pop
inc
mov
addr16
jo
ficoms
out
add
add
jnp
dec
das
bound
imul
xor
xchg
scas
or
push
add
sub
movsb
mov
mov
incb
int3
jl
lahf
push
xor
mov
xor
jae
xor
fnstenv
xor
adc
or
or
push
and
inc
arpl
inc
movsb
or
push
sub
pusha
fistpll
sbb
subb
xchg
add
fists
sahf
hlt
mov
pusha
sub
mov
jae
mov
scas
call
pop
mov
sbb
repz
mov
repz
dec
push
xorl
mov
idivl
push
cmp
push
xchg
push
push
cmp
scas
ljmp
xchg
sub
leave
mov
sarl
and
insl
notl
push
dec
mov
andl
xor
cmp
sbb
mov
add
xchg
out
fidivs
jle
xor
rclb
ficoml
mov
sub
lret
outsl
cmp
add
cli
xor
ffreep
inc
mov
xchg
stos
mov
inc
xchg
arpl
and
repnz
aaa
repnz
dec
outsl
inc
addl
fwait
xchg
int
mov
lret
pop
jb
les
das
gs
enter
sti
cmc
jmp
add
repnz
and
and
filds
sti
sub
daa
inc
add
sbb
add
inc
cmp
mov
enter
push
mov
push
aad
jle
add
inc
mov
jns
or
icebp
test
mov
push
cmpsb
shll
inc
pop
xchg
and
in
std
dec
fs
pushf
sub
dec
sub
testb
enter
aam
sub
adc
sbb
sarl
jae
les
jno
push
mov
push
mov
test
repnz
and
mov
popf
inc
shll
daa
and
dec
sahf
test
pop
sub
loop
clc
stos
idivl
lea
adc
inc
sti
mov
pop
mov
mov
jns
push
add
stos
daa
jbe
les
es
mov
je
loopne
std
js
inc
loope
or
inc
adc
sub
sbb
int
pop
jl
ds
jmp
cmp
xchg
outsb
mov
iret
adc
scas
sbb
inc
movsb
lret
aad
pop
js
call
lods
fists
jle
dec
insl
lcall
jno
lods
jb
add
xchg
push
icebp
adc
mov
sub
out
cmp
xchg
insl
fsubl
push
rcl
out
fwait
je
push
and
sahf
jb
inc
sub
inc
push
js
data16
adc
ja
jge
mov
testl
addr16
sti
test
dec
fisttpl
fsts
lea
test
loopne
cmp
sub
and
in
loop
push
adc
xchg
inc
cld
mov
clc
inc
pop
sbb
jl
loopne
mov
sub
cmp
pusha
mov
push
lds
hlt
and
dec
sbb
jge
add
jge
mov
ja
stc
pop
arpl
dec
in
xchg
sti
pop
cmp
pop
es
jno
test
inc
mov
mov
not
dec
js
cmp
ret
iret
mov
pop
sbb
jo
lahf
ret
sbb
loop,pn
iret
add
fwait
test
xchg
insb
orl
sbb
in
lea
es
loope
push
or
dec
push
stos
mov
xchg
cmpl
movsb
test
push
jb
imul
fildll
xchg
add
aad
and
push
pop
xchg
xor
out
into
das
outsl
lock
dec
jg
outsl
push
mov
mov
out
call
aas
sbb
sub
cmp
dec
jg
outsl
push
mov
mov
out
call
aas
sub
dec
pop
cmp
fdivrs
outsl
push
mov
mov
out
call
aas
inc
das
jb
sbb
dec
jg
outsl
push
mov
mov
adc
and
xor
in
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
mov
mov
cwtl
movsl
jmp
in
aas
xchg
push
pop
or
cmp
jns
pop
or
test
mov
mov
enter
sub
or
js
dec
or
test
mov
mov
enter
sub
ss
jbe,pt
cs
sub
ljmp
push
push
pop
test
stos
xchg
les
loope
or
cli
test
test
loop
adc
push
inc
push
mov
xchg
movsl
testl
div
xchg
ja
ljmp
movsl
stos
mov
xchg
sbb
xchg
cmp
push
mov
lds
int
sub
inc
into
lahf
jmp
mov
dec
aam
pop
into
push
popf
mov
cmp
adc
xchg
ljmp
fdivs
xchg
sub
nop
cmp
push
sbb
ljmp
cmpsl
and
inc
mov
cmp
jge
out
jns
sub
dec
or
fimull
mov
lcall
cmp
push
sbb
push
adc
mov
scas
scas
mov
pop
push
sub
push
jg
outsl
cmp
mov
stos
les
js
push
pop
outsl
aas
dec
pop
or
or
jmp
lret
fisubrl
fdivrs
push
pop
or
cmp
js
dec
or
test
mov
mov
enter
sub
pop
or
cmp
js
dec
or
test
nop
and
pop
xchg
sbb
sarb
cmp
movsb
jp
iret
xchg
lcall
and
clc
sti
xchg
jl
fs
jo
mov
cld
push
sahf
sbb
nop
jmp
jmp
std
inc
xchg
push
arpl
repz
cli
lods
and
ficomps
mov
cmpsb
mov
popf
add
sbb
fs
int
sbb
insb
scas
push
lods
adc
mov
ja
bound
or
mov
mov
jnp
xchg
fdiv
push
add
mov
in
ret
adc
das
mov
mov
ret
outsb
jno
stc
outsb
xor
adc
insb
or
adc
mov
in
ror
xor
shrl
in
fcmovu
xchg
test
orb
fimull
es
jns
es
jne
movl
sbb
add
push
imul
add
inc
stos
aad
add
mov
sbb
fnstsw
mov
jo
push
add
aad
lds
xchg
add
sub
ret
fsub
xor
cmp
jnp
clc
jne
arpl
and
ss
insl
pop
xchg
jnp
and
push
mov
rorb
cmp
rolb
jae
xchg
sub
sub
and
sub
mov
js
cmc
imul
fldl
das
mov
or
jecxz
nop
adc
out
fiadds
clc
jl
dec
xchg
ret
xor
mov
ror
mov
ffreep
cld
adc
ret
mov
xchg
mov
xor
scas
jo
jl
subl
testb
scas
jg
jmp
mov
xchg
mov
lds
add
int3
jle
inc
push
mov
pushf
fdivr
in
mov
jg
js
pop
sub
sbb
mov
shlb
out
push
aaa
xchg
pop
or
cld
pop
jle
push
addr16
jb
sub
mov
lret
or
imul
out
jo
sbb
xchg
and
lods
xchg
cmpl
or
xor
mov
lret
ljmp
sbb
in
ss
push
insl
inc
es
sbb
out
into
push
xchg
bound
repz
jge
out
cli
mov
or
movsl
push
sbb
push
mov
push
jmp
cli
lock
jns
stos
sub
adc
and
pop
xor
jns
xchg
decb
rcrl
lahf
jle
subb
pop
sub
sub
xor
lcall
adc
outsl
jnp
pop
mov
popa
or
push
xchg
jne
cmp
and
push
dec
push
in
scas
sub
lcall
add
sbb
jnp
pusha
mov
dec
call
dec
loope
mov
xor
adc
and
or
cld
adc
test
idivb
jp
or
movsb
ljmp
test
jae
jb
dec
mov
jp
mov
loop
in
hlt
test
sbb
add
add
inc
xlat
mov
std
adc
inc
inc
popa
fs
mov
mov
jns
cmp
sbb
out
in
mov
adcl
push
shll
push
adc
les
mull
mov
adc
xchg
push
pop
cltd
pop
mov
cld
sarl
mov
adc
xchg
cs
mov
shr
and
inc
pop
pop
dec
orb
sbb
aad
mov
movsl
pushf
mov
cmp
icebp
cmp
adc
iret
or
pop
hlt
push
clc
mov
push
fcompl
xorb
xchg
stos
pop
push
pop
or
into
lods
ret
dec
adc
clc
sub
enter
ficoml
aad
and
inc
imul
sahf
jg
out
and
out
cltd
mov
int3
mov
lcall
pop
mull
mov
inc
push
xchg
loope
jg
mov
pop
test
inc
and
imul
dec
dec
xorl
fdivrs
dec
pop
stc
scas
xchg
andl
jmp
test
jnp
rcr
cld
lahf
lds
popa
outsb
pop
das
fiaddl
daa
int3
dec
outsl
gs
xstore-rng
cmpsl
test
stos
je
cld
jb
mov
xchg
aam
outsl
cld
iret
push
inc
ja
pop
repz
lret
cmp
and
inc
cmp
call
test
sbb
sbb
pushf
call
jle
lret
xchg
inc
jg
mov
nop
mov
add
cs
cmp
das
mov
std
mov
pop
rcrb
insl
and
and
fisubl
sbb
into
dec
jmp
popf
xchg
ja
mov
out
faddl
push
add
rcll
out
out
inc
addl
push
pop
lea
mov
loop
in
sbb
pop
or
test
cmp
aad
add
pusha
jge
hlt
clc
mov
daa
mov
jno
push
xchg
cwtl
push
cld
push
insl
or
fnstsw
xorb
cmp
sub
in
add
and
add
pusha
ror
push
stos
int3
rcrl
lret
cmpb
test
push
mov
dec
push
or
es
fisttpl
iret
and
addr16
inc
pop
sbb
push
fs
push
xchg
loope
shll
or
arpl
ja
mov
and
out
aas
xchg
jmp
cs
popf
in
repnz
push
loope
pop
cmpsl
lret
and
xchg
adc
add
pop
in
jno
popf
inc
lds
enter
lds
xchg
test
mov
jmp
inc
bswap
jb
xchg
pusha
push
mov
mov
pop
aas
push
push
mov
sub
adc
arpl
sbb
mov
cmp
cld
fdivr
push
cwtl
adc
sbb
xchg
mov
sahf
push
movsl
dec
aas
int3
out
inc
push
out
xor
or
sahf
inc
hlt
lcall
call
sbb
hlt
dec
stos
lods
inc
sahf
or
test
xor
xchg
in
test
xchg
mov
cmp
push
cmpsl
push
cwtl
jle
mov
popf
sbb
shrl
ffree
dec
mov
ret
pop
arpl
fstpl
insb
lret
xchg
jo
push
ljmp
adc
out
fs
xor
xchg
xchg
or
aam
dec
jl
fcomps
aad
jb
dec
cmpb
adc
roll
stos
jnp
jbe
adc
jbe
mov
jp
push
mov
aam
dec
ret
ret
test
cmpl
les
jns
cmp
pop
sbb
pop
js
bound
lock
lea
addr16
mov
xchg
mov
aaa
add
inc
jb
addr16
repz
cmp
pusha
jl
movl
push
arpl
sbb
mov
sub
mov
xchg
adc
ja
jp
aaa
dec
push
mov
dec
cmpsb
mov
add
adcl
mov
mov
jbe
sbbb
test
addr16
xor
mov
cld
cmp
mov
stc
push
icebp
mov
dec
adc
in
mov
repz
mov
or
repz
loope
inc
push
xchg
inc
pop
sub
lods
pop
pusha
adcb
imul
outsb
es
dec
mov
int
fidivs
jno
in
les
mov
lret
inc
push
jg
or
xor
int
xor
dec
mov
xor
das
clc
jecxz
mov
cmc
sub
insb
stos
mov
or
movsb
cmp
inc
cld
dec
mov
add
cwtl
lods
ss
push
adc
sbb
shl
xor
inc
or
jns
mov
inc
movsb
orl
stc
mov
dec
xchg
ss
repnz
mov
add
mov
int
stc
test
lock
ss
xchg
lea
in
je
lds
jb
mov
or
xor
adc
imul
pusha
dec
mov
and
nop
inc
fucom
adc
add
shll
fsub
xchg
aaa
xchg
xor
jmp
adc
mov
cmp
jnp
aad
mov
arpl
add
in
fcom
pop
into
cmp
ja
push
lods
xchg
mov
or
fcmovbe
xor
jns
js
push
sub
dec
daa
push
jb
loopne
cs
lahf
mov
dec
jg
push
std
inc
fwait
mov
aaa
outsb
jl
adc
in
mov
cltd
roll
jmp
mov
mov
mov
jae
cld
xlat
icebp
sub
mov
fcoml
cmpsb
mov
mov
lods
sub
stos
pop
push
lds
idivl
adc
insl
stos
jbe
add
loopne
movsb
push
xlat
pop
mov
test
into
aas
cmp
adc
lea
xchg
xchg
and
repz
and
sbb
sbb
mov
pushf
pop
enter
jb
jp
adc
scas
xor
inc
inc
loopne
shrb
or
add
bnd
iret
jbe
aam
pop
push
ret
cltd
lea
dec
pop
xor
popf
loopne
jns
das
out
push
mov
push
lock
gs
xor
add
sbb
je
xchg
xchg
add
and
movsl
pop
rorb
cli
adc
xor
std
and
xorb
mov
outsb
subb
and
sbb
fdivl
scas
mov
test
pop
pop
rorb
outsb
mov
mov
sahf
add
cltd
test
add
lahf
sarb
mov
mov
outsb
stc
leave
pusha
scas
and
push
pop
fisubl
vmread
fwait
das
faddl
jecxz
adc
pop
jecxz
neg
add
cmp
lret
mov
jl
fabs
in
mov
mov
std
aas
arpl
xor
sahf
mov
adc
outsl
popf
sub
push
mov
mulb
inc
xchg
mov
mov
stos
push
rclb
mov
dec
fmull
or
insb
imul
sub
cli
fimuls
fidivrs
pop
shl
sbb
xlat
insb
inc
cmp
ret
das
rolb
jle
fucom
jb
dec
shl
test
les
push
mov
dec
insl
dec
pop
mov
movsb
nop
imul
mov
add
fcomp
mov
fs
mov
inc
jno
cmp
stos
mov
mov
mov
mov
or
cmp
shlb
jg
leave
mov
aas
sub
pop
outsl
cmp
js
mov
jbe
bound
xor
cmp
and
jns
xchg
push
xchg
xchg
das
mov
insl
xor
into
jbe
or
das
fisubrl
pushf
mov
mov
or
outsb
push
xchg
out
bound
sbb
mov
cmp
jbe
cmp
dec
xchg
dec
int
fs
adc
add
test
je
scas
mov
clc
pushf
mov
add
test
insl
pop
and
adc
xor
aam
xor
popf
aaa
shrb
call
adc
rcll
lods
inc
sbb
int
push
dec
mov
pop
outsb
xor
lock
xchg
mov
mov
push
cmp
out
stos
aad
dec
or
shrb
dec
lret
aad
jp
pop
cs
nop
imul
jecxz
cmpsb
xchg
outsl
jns
aaa
sub
jecxz
push
jno
stos
scas
adc
mov
sub
or
fs
mov
mov
pop
ja
or
and
movsl
cmpsl
mov
mov
frstpm(287
lock
adc
xor
cmp
ret
pop
sahf
in
shrb
fcoml
loop
xor
loope
adc
pop
int
mov
sub
xchg
adc
add
inc
cmpsb
mov
sbb
xor
lea
adcl
mov
pop
fs
mov
cmp
mov
jg
and
push
add
ffreep
in
xchg
pop
push
in
lcall
or
add
mov
fstps
sahf
push
push
sbb
out
lahf
mov
fs
fs
mov
lods
pop
or
and
leave
popl
inc
xchg
sub
add
fcmovu
cwtl
popl
jl
mov
into
mov
push
imul
push
mov
pop
cwtl
dec
inc
xor
xchg
xor
push
adc
aas
mov
pushf
inc
and
push
pop
push
or
data16
adc
dec
fincstp
filds
loop
fwait
sub
and
mov
in
jo
mov
in
loope
pop
je
aad
out
repnz
xchg
xor
cmp
aaa
cmpsl
push
leave
adc
mov
lret
fwait
scas
adc
pop
jo
push
jns
jno
fstl
mov
pop
scas
adc
pop
xchg
jns
sbb
test
cltd
aam
pop
mov
fildll
mov
mov
push
sbb
adc
mov
inc
dec
pop
cmp
inc
not
pop
sbb
hlt
outsb
add
adc
pusha
add
add
push
xor
popa
adc
das
adc
in
addl
test
xchg
pop
call
pop
cmpsl
incb
xchg
addl
mov
dec
clc
decb
xchg
roll
mov
xor
pop
dec
sub
mov
xchg
add
iret
lcall
shrb
mov
lods
xor
notb
shrb
ret
add
shll
stos
adc
ja
cli
in
hlt
pop
jp
push
repnz
jl
add
adc
imul
outsb
mov
enter
xor
hlt
sahf
fsub
aam
dec
xor
jmp
push
fisubs
cli
dec
pop
js
fwait
outsb
jge
filds
inc
shll
mov
div
lock
adc
imul
rolb
pushf
xor
into
gs
xlat
mov
adc
mov
cmp
aaa
xchg
aad
std
xchg
hlt
leave
jnp
pop
push
es
rcrb
dec
pop
pusha
cltd
sahf
or
sti
mov
and
xor
push
and
push
pop
ror
cmpsl
pushf
cmp
shlb
ds
cmp
mov
pop
inc
gs
dec
inc
clc
sub
sahf
das
stc
rcll
jnp,pn
adc
cmp
stos
popa
push
sbb
out
jbe
pushl
jno
sbb
fidivl
sub
adcl
pop
lds
cli
insb
shl
mov
js
fst
mov
push
outsb
loope
jno
xchg
jae
iret
push
ret
je
leave
xchg
and
fisttps
lods
adc
rclb
icebp
add
xor
aad
test
loop
mov
fdivl
add
lret
mov
or
mov
jo
mov
mov
jl
inc
push
fisubrs
and
pop
inc
dec
icebp
es
testl
xchg
mov
sub
xor
aaa
repnz
les
outsl
push
pop
mov
pop
lret
int
leave
pop
mov
mov
cmp
xchg
pop
frstor
insl
mov
mov
jle
adc
repnz
jge
imul
mov
cmpps
push
sub
adc
fcomps
iret
cli
adcl
xchg
push
bound
mov
cld
mov
mov
mov
clc
ja
idivb
ds
push
hlt
xchg
outsb
xchg
rcl
and
adc
fcoms
out
sbb
mov
popa
cld
pop
or
pusha
adc
ret
mov
bound
inc
sub
or
pop
jl
aaa
push
sub
cwtl
test
mov
sbb
cmp
inc
fsubrs
inc
pop
data16
inc
mov
mov
loopne
cli
mov
lret
shl
iret
and
cmpb
loope
jno
loopne
inc
ljmp
out
movsl
sbb
push
popa
and
inc
sbb
dec
testl
jns
andl
loop
iret
roll
and
pop
pop
push
ret
loope
sbb
sbb
lret
leave
dec
jle
ret
ljmp
rclb
imul
hlt
lods
dec
sbb
pop
adc
and
mov
aad
in
xchg
aam
insl
xchg
loopne
arpl
adc
fisubrs
clc
xor
aad
pop
stc
cmp
adc
or
loopne
pusha
pop
and
in
inc
cmp
rcrb
and
in
ja
in
fidivrl
arpl
in
repz
push
fidivl
adc
xchg
cmp
dec
sbb
sahf
dec
xchg
mov
xor
sub
shr
popf
xlat
pushf
rorl
leave
cmpsl
push
ret
std
jbe
add
outsb
mov
sbb
clc
outsl
stc
icebp
fs
mov
rcrb
movb
test
mov
mov
test
push
and
inc
adc
stc
push
xchg
ljmp
cmp
fs
mov
and
mov
xor
push
xchg
repnz
sbb
mov
aaa
inc
je
ds
cmpsb
rolb
js
xor
mov
inc
mov
mov
ds
inc
addl
inc
cmp
jb
arpl
inc
mov
aas
add
inc
inc
int3
xchg
cmp
cmp
aad
sub
dec
sub
jo
jae
cmp
jle
std
cli
mov
mov
adc
aaa
jmp
xchg
jle
aaa
cltd
rcrl
popa
mov
dec
icebp
popl
push
insl
mov
sub
std
sbb
out
xlat
in
shlb
loop
or
scas
lea
ljmp
sub
loopne
jg
sbb
mov
mov
scas
push
ret
dec
inc
mov
or
cltd
inc
jno
loop
inc
push
addr16
or
orl
mov
mov
mov
push
mov
inc
insl
mov
push
push
sbb
pop
cmpl
nop
subl
cmp
fldt
aam
fstps
push
ja
adc
loope
or
loopne
jae
add
gs
jl
mov
ss
popf
fs
fsub
lret
out
jmp
mov
dec
mov
in
cld
push
cmp
xchg
xor
hlt
data16
cmp
ja
rclb
fmull
mov
adc
cmp
cli
mov
mov
ja
mov
jns
sub
fdivp
les
test
sub
pop
push
adc
and
inc
in
fidivs
enter
push
int
mov
pop
jno
dec
mov
jae
dec
mov
call
addr16
mov
test
aaa
popf
jle
mov
out
mov
sbb
pop
push
inc
iret
ret
sbb
xchg
push
push
movsl
out
adc
andb
mov
mov
xor
iret
jae
stos
mov
mov
pop
cld
stc
jo
pop
aad
lret
mov
add
popa
inc
mov
fsub
sub
test
pop
adc
test
xor
in
inc
mov
inc
pop
jl
mov
push
sbb
imul
je
fcompl
mov
inc
and
rol
cmp
and
and
pop
xchg
movsl
pop
add
jno
push
je
roll
test
fisubrs
dec
fidivrl
xor
lea
lret
nop
mov
in
xor
jg
lahf
lds
xchg
push
movsl
adc
sbb
cmp
icebp
in
nop
fdiv
loopne
in
rcl
rcrb
lcall
fmuls
enter
icebp
jne
insb
jae
dec
add
loopne
outsl
fdivrs
inc
int
enter
es
mov
cs
fsubrp
adc
shll
xor
aam
shrb
outsb
sbb
ret
imul
or
rol
xchg
test
idivb
gs
gs
les
jmp
pushf
lahf
jp
push
xor
and
test
stc
fucomp
ja
mov
hlt
lret
outsl
in
fstps
test
sbb
mov
pop
cmpl
mov
orb
shll
dec
adc
and
adc
bound
cmc
fwait
push
sub
mov
inc
addr16
mov
add
loop
sub
inc
fistpl
in
incb
mov
imul
psubq
and
insb
test
scas
in
jp
test
shll
cwtl
and
mov
pop
stos
repz
jbe
addb
sub
aas
xchg
fldl2t
stos
lcall
mov
in
icebp
mov
cmp
sub
test
add
inc
xchg
xchg
stc
aaa
and
inc
and
test
scas
mov
enter
aaa
mov
scas
dec
sahf
cmpsb
lods
mov
daa
cld
das
sbb
or
mov
cli
cmp
mov
les
ret
pop
cmp
ret
push
in
movsl
push
dec
das
pop
jge
outsl
jbe
mov
dec
or
repz
insl
fisubrs
stos
or
and
dec
adc
es
push
pop
movsl
sub
cs
fidivrl
jo
je
test
pop
filds
out
out
ds
add
sub
sbb
popa
adc
pop
rcrb
gs
in
cmp
fiadds
push
mov
cwtl
mov
enter
sub
pop
or
cmp
js
dec
or
test
mov
mov
enter
sub
pop
or
cmp
js
dec
or
test
mov
mov
enter
sub
pop
or
cmp
js
dec
cmp
test
mov
mov
enter
sub
outsl
dec
loopne
xchg
mov
cmpsl
mov
adc
add
jo
inc
and
mov
xor
and
adc
add
cld
xor
and
adc
add
test
and
mov
xor
inc
loopne
rolb
xor
adc
add
jl
je
or
adc
js
arpl
les
js
add
push
loope
nop
fildl
aad
pop
iret
clc
out
mov
lock
pop
xor
test
dec
dec
test
jo
in
pop
add
les
in
lock
xchg
rorb
sub
cmp
aad
loopne
mov
sub
lret
in
loopne
push
pop
js
jne
add
cmp
popa
xchg
cmp
pop
inc
adc
pusha
mov
shll
jo
inc
add
dec
clc
daa
jmp
mov
xor
stos
outsl
inc
test
mov
jno
jno
in
sub
popa
inc
cmp
test
pop
jge
mov
inc
xchg
mov
and
push
rclb
aam
test
mov
loopne
xchg
push
cmp
xchg
pop
adcb
adc
pusha
test
nop
adc
or
leave
and
hlt
pop
mov
test
inc
mov
push
insb
inc
xchg
jne
add
sbb
sub
cmp
and
sti
and
in
sahf
inc
loope
xchg
xchg
movsb
bound
pusha
xchg
push
test
mov
mov
xor
and
adc
add
hlt
xor
and
adc
add
test
mov
mov
xor
and
adc
add
hlt
xor
dec
jl
fwait
ret
lret
hlt
fnstsw
add
pop
aad
jae
fwait
in
cs
jnp
mov
pminub
mov
daa
mov
and
xchg
jns
mov
mov
inc
pushf
xchg
or
and
ja
adc
and
add
jmp
lds
fcompl
je
inc
sbb
sbb
jae
mov
pop
sbb
pusha
test
xor
enter
or
sbb
mov
stos
je
pop
xchg
subl
xor
mov
mov
jg
cmp
scas
flds
add
les
cmpsb
lods
jne
cltd
sti
fiaddl
and
and
and
in
lea
jno
xor
sti
dec
mov
lods
mov
repz
inc
int
jbe
jg
add
cmp
mov
lock
add
and
jp
sub
dec
mov
xor
dec
and
jns
xchg
xchg
outsb
push
leave
mov
xchg
mov
dec
adc
inc
nop
lods
jno
hlt
sub
cmp
fwait
cmc
scas
aam
cmpsl
pop
enter
push
and
stos
ja
jb
sbb
push
xchg
xchg
mov
pop
sub
and
cmp
mov
idivb
imul
dec
js
addr16
mov
fcoms
in
sbb
scas
pop
fadds
mov
addb
lods
mov
iret
or
addr16
jl
pop
shll
xor
adc
sbbl
add
add
push
or
std
xchg
aaa
scas
cmp
xchg
stos
or
repnz
ds
enter
add
test
mov
or
loopne
lahf
fs
fldenv
jecxz
mov
jecxz
std
mov
test
daa
popf
pop
popl
bnd
iret
or
and
lds
dec
sar
int3
xor
insb
sbb
jg
dec
gs
xchg
jg
cmc
mov
push
rorl
fnstcw
sbb
data16
repnz
inc
and
add
imul
lods
jp
mov
popf
icebp
push
call
xchg
loopne
jno
ja
hlt
fadds
out
out
cwtl
pop
rorl
cltd
das
lret
out
out
das
test
andb
loop
dec
or
fstl
xchg
inc
adc
mov
sahf
mov
movsb
sub
sub
push
adc
inc
push
cld
into
xchg
test
in
xchg
scas
jo
je
sub
mov
je
xor
rcll
clc
lds
jno
aaa
inc
cmc
xlat
add
in
insb
hlt
stc
fs
test
sahf
and
pop
push
mov
lret
imul
idivl
mov
push
sbb
xlat
bound
sbb
nop
sti
sti
xor
mov
popa
insl
adc
push
int
xchg
jns
out
adc
push
jg
scas
add
sti
add
stos
ss
inc
stos
xor
popl
and
xchg
jge
popa
and
mov
jg
js
sbb
sub
inc
adc
adcb
aad
jmp
aaa
and
inc
faddl
dec
or
cmc
mov
or
add
in
push
xchg
adc
add
fildl
jns
mov
mov
mov
jb
mov
xchg
ljmp
int3
pop
sbb
ljmp
sbb
fwait
loop
adc
addr16
dec
push
sub
movsl
add
pusha
lock
jmp
into
imul
sbb
shlb
push
repnz
sbb
xor
mov
xchg
lret
sbb
aam
adc
xchg
push
or
jbe
jmp
inc
test
out
push
and
adc
dec
in
push
cmpsb
cmpsl
rcrl
or
jge
movsb
pushf
inc
pop
and
pop
inc
mov
jl
into
cld
aas
and
testb
aaa
add
sahf
pop
push
push
fpatan
lret
outsl
loopne
xor
cs
and
imul
popf
hlt
lahf
inc
das
sub
fidivs
xchg
inc
mov
inc
xchg
mov
push
sti
mov
lea
lods
mov
xor
fs
out
stos
sub
mov
lds
in
add
stos
out
pusha
and
pop
cmp
aas
jp
aad
mov
dec
mov
js
lods
in
int3
ret
insb
repz
iret
sub
das
in
adc
scas
pop
jmp
inc
clc
or
ds
icebp
push
mov
jg
dec
ljmp
cmp
sbb
dec
cli
shrb
sahf
xchg
int
xor
pop
imul
aaa
jmp
cmpsb
mov
std
es
xchg
push
sarl
jns
xor
cmpsb
into
adc
loop
cli
mov
loop
mov
leave
pop
mov
int
push
test
lods
dec
mov
bswap
mov
aam
fnstenv
out
mov
xchg
sub
pop
repz
xor
arpl
and
in
inc
fnstenv
jnp
xor
xchg
cs
and
push
int
cmp
mov
pop
xchg
pop
mov
push
imul
adcb
adc
pushf
add
ja
xchg
push
sub
jne
ss
jp
sub
and
sbb
push
mov
gs
mov
fnstenv
addr16
insl
test
push
iret
data16
rorb
mov
mov
dec
push
subl
mov
in
rcr
jbe
mov
shr
push
mov
es
adc
mov
nop
sbb
jge
pop
arpl
test
pop
lds
frstor
jge
sbb
decl
out
lods
sbbb
stos
cmp
or
pop
js
adc
icebp
popa
mov
loopne
das
sub
jle
add
adc
add
test
filds
cmp
or
fisubl
test
shr
nop
mov
lds
movsl
or
lret
sbb
aaa
pop
cmpsl
lock
lods
add
cmp
sbb
imul
jp
adc
out
jb
push
ja
call
insl
sbb
mov
std
lods
ror
ds
bound
pushl
rep
push
push
pop
cld
xchg
mov
mov
mov
mov
dec
out
mov
daa
sbb
sahf
dec
push
push
orb
cmp
mov
sub
xor
cmpl
repnz
inc
jno
addr16
inc
sbb
leave
mov
lods
adc
pusha
add
xchg
xchg
mov
xorl
add
lcall
movsl
test
inc
inc
or
xchg
lods
mov
mov
mov
les
fdivr
inc
xor
scas
mov
mov
out
mov
jns
daa
sbb
bound
int3
cld
dec
push
jge
or
push
nop
and
insl
ds
scas
pop
pop
cmovg
lock
push
or
adcl
stc
push
insl
rorl
lret
cmp
jae
sub
xorl
jmp
jp
ret
jl
mov
mov
xchg
cmp
pop
push
cmp
dec
and
rcr
shll
repnz
pop
sbb
or
dec
cmpl
rcpps
push
sti
into
pop
das
addr16
out
jg
push
jmp
lret
pop
sti
sahf
sahf
xchg
xorw
add
and
inc
pop
push
fisttpl
sbb
daa
and
addr16
sti
jnp,pn
sub
pop
es
mov
mov
test
pop
rcr
inc
xchg
push
shll
outsl
iret
aam
test
and
dec
or
aad
push
sbb
jg
rorl
sub
inc
repz
stos
push
and
bound
xchg
les
mov
cmpsb
sar
adc
into
fidivl
jne
mov
imul
loope
dec
scas
inc
inc
push
mov
bound
stc
push
or
xor
pop
xlat
pop
ljmp
and
loop
shr
adc
dec
cmp
das
call
pop
enter
push
fistl
ss
push
js
movd
loope
lea
xor
adc
lea
jmp
and
mov
jle
aaa
push
sbb
mov
aas
cmp
jns
jno
adc
pop
sub
lock
cmp
xor
cld
iret
fwait
pushf
pop
add
pushl
arpl
test
enter
scas
lods
stos
xor
jne
push
or
and
clc
gs
push
xor
cmp
mov
mov
adc
jno
frstor
mov
mov
inc
imulb
xor
stos
dec
cltd
cmpsl
push
lds
neg
push
cld
sbb
fstl
jecxz
push
lds
adc
dec
jl
and
dec
cmpl
jae,pt
and
inc
movsb
in
sub
jp
and
clc
mov
sbb
lea
jbe
out
or
outsl
mov
aaa
cmc
add
cld
push
inc
push
inc
xchg
jmp
and
mov
insl
imul
push
ja
lret
mov
sub
testb
test
lods
cmp
repnz
cwtl
dec
cmp
es
dec
xlat
and
or
adc
and
inc
push
mov
push
push
xchg
lods
push
in
dec
push
push
jbe
pop
insl
out
ja
xchg
xor
add
sbbb
sahf
adcb
mov
mov
cmp
test
pop
sub
xlat
inc
rclb
xor
jmp
jecxz
ds
and
cmp
fcomip
lds
test
cmp
sbb
mov
push
adc
and
sub
jo
xor
cmpsb
lahf
pop
push
fisubl
daa
xor
xchg
imul
lods
cld
mov
push
dec
dec
sbb
clc
pop
out
outsb
xchg
inc
movsl
out
adc
push
into
mov
loopne
mov
jl
xor
cmp
nop
xchg
push
cmp
scas
not
cltd
ret
dec
mov
jb
fldt
add
pusha
aaa
stos
xor
inc
and
push
push
cld
shrl
mov
js
nop
stos
pop
pushf
or
stc
test
sub
dec
lcall
inc
popf
scas
cmc
insb
or
pop
sahf
ds
push
sub
test
sahf
adc
arpl
into
pop
mov
pushf
sub
sub
pop
lcall
mov
jmp
mov
or
adc
xorl
data16
xlat
push
adc
or
add
pop
sahf
dec
mov
insl
sub
daa
push
loop
add
add
outsl
xor
bound
lret
inc
dec
ds
test
mov
xlat
mov
inc
in
push
out
lock
cmpsl
popa
rcr
adc
inc
mov
ljmp
cmp
cmp
push
pop
push
pusha
shlb
jl
cmpsl
int
dec
loopne
inc
rclb
outsb
test
jnp
mov
mov
jbe
dec
fidivrl
in
aam
ja
outsl
pop
or
in
sahf
sbb
jns
dec
rcll
xor
into
stos
adc
cmp
push
nop
sar
ja
negb
test
aam
test
mov
loopne
outsb
scas
sbb
je
pop
fiaddl
jo
dec
call
int
dec
dec
xchg
dec
push
push
cmpsb
pop
call
mov
lcall
push
vrsqrtps
xor
jbe
jae
jmp
cmp
cmovne
shll
dec
xor
mov
jl
inc
lock
and
dec
xchg
mov
dec
mov
out
push
movsl
enter
iret
shrl
sbb
lods
push
push
jle
pop
push
adc
addb
push
jae
arpl
cld
aam
shrl
pop
stc
lods
call
test
jb
imul
sahf
jnp
push
mov
fisubl
and
jae
and
lret
adc
mov
push
test
push
jnp
enter
dec
push
test
xor
mov
icebp
cld
fwait
rorb
or
mov
mov
shl
mov
sub
mov
or
mov
lods
sbb
dec
add
adc
or
add
mov
das
push
cld
out
loopne
testl
mov
xchg
push
adc
call
xor
jno
test
sahf
imull
nop
outsb
out
inc
jo
ss
movsb
imul
sbb
test
jmp
repnz
lcall
pop
ror
jg
push
loope
std
cli
adc
sar
or
fdivs
icebp
mov
lea
adc
popf
orb
jo
enter
push
mov
movsl
clc
scas
xor
nop
mov
mov
aam
or
mov
ds
mov
xchg
mov
ds
mov
sbb
test
int3
icebp
ss
iret
mov
and
int
xor
jge
jae
rorl
mov
movsb
push
cld
loopne
loop
test
bound
lods
je
inc
xchg
xchg
mov
pop
push
ret
in
fwait
sub
sahf
jp
mov
push
aam
outsb
das
dec
lock
and
repz
cmp
or
mov
fcoml
and
push
mov
mov
xchg
jmp
jnp
sarb
js
cmp
les
lods
rep
in
scas
jno
mov
xchg
jae
andb
push
int3
outsb
enter
ror
mov
test
iret
push
movsb
sbb
scas
lds
mov
jge
and
push
xor
pop
dec
aaa
jmp
sub
push
stos
mov
adc
and
mov
and
lock
mov
adc
pushf
mov
rep
and
addr16
pushf
mov
cmp
sbb
inc
adc
addr16
cld
mov
lock
fs
lods
mov
orb
addr16
movsb
shr
aaa
loop
xlat
dec
test
lea
mov
clc
dec
jle
mov
add
shlb
xor
lcall
test
adc
mov
ds
sahf
pop
inc
sahf
or
addr16
and
jo
notb
arpl
and
fidivl
mov
les
lret
inc
xlat
jg
outsl
inc
imul
test
movsb
add
push
fcmovb
movsb
jl
je
push
jns
fldl
gs
fsubrl
mov
adc
movsb
adc
cmp
int
cmc
test
jp
ror
xchg
and
in
pop
filds
fadds
inc
cmp
addr16
sub
mov
xchg
xorb
repz
dec
sbb
and
cli
fidivrl
sbb
ja
adc
push
int
sub
inc
fldcw
mov
jmp
xchg
lret
xor
testl
pop
sbb
out
call
fists
lret
test
lds
mov
sub
test
les
add
mov
adc
nop
enter
ds
sbb
loope
cmpsb
rol
fisttps
outsb
cmp
jmp
fwait
mov
hlt
add
daa
pop
xor
xchg
pop
bound
insl
dec
out
arpl
stos
xchg
xchg
test
add
sub
popa
sbb
pop
shrb
dec
adc
and
dec
sub
dec
mov
push
mov
inc
test
cmp
sbb
push
push
and
loop
mov
inc
mov
out
sbb
sub
jp
adc
adc
ss
gs
aad
jmp
scas
pop
test
xchg
inc
lret
test
fnsave
xchg
cmp
enter
mov
sbb
lahf
cmpsl
sbb
negl
std
leave
mov
sbb
pop
push
inc
sahf
es
repnz
das
je
pop
rcl
mov
xchg
jge
mov
in
xchg
sbb
fwait
push
call
mov
mov
mov
sbb
addr16
dec
cmp
loope
jo
pushf
movsb
xchg
outsl
push
ja
inc
lret
dec
int3
push
jbe
xlat
ror
jg
cmp
jns
fisttpl
lods
push
es
xchg
cmpsl
loopne
pop
leave
sub
inc
jmp
lret
int3
mov
cmp
ret
lret
movsl
push
mulb
nop
or
loope
xor
and
lret
shll
pop
ret
adc
ds
cld
pushf
lret
xchg
rorb
xchg
xchg
les
cmp
mov
cmpsb
or
pop
ss
shrl
lret
imul
lds
or
push
fisttps
stc
inc
adc
inc
and
shl
out
popa
adc
popf
mov
jg
push
jp
enter
jae
adc
repz
mov
mov
repnz
push
stc
mov
in
int
lret
aam
mov
and
sbb
into
in
jns,pn
mov
xchg
stos
sbb
jae
test
push
sub
sti
cmc
jne
rcrl
hlt
mov
insb
mov
mov
cmc
sbb
out
test
out
insl
shll
sub
jmp
mov
xor
in
pop
mov
mov
push
push
data16
mov
push
ss
aam
ljmp
test
int
cmp
daa
mov
scas
xor
std
mov
mov
xchg
rcll
out
out
cwtl
scas
hlt
xor
cmp
ret
fnstsw
in
sub
push
std
ja
js
xchg
cwtl
dec
jl
cmp
js
out
aas
scas
dec
ret
into
push
xor
xor
stos
stc
mov
adc
outsb
cmp
dec
inc
pop
mov
sub
push
cmp
mov
idiv
lret
leave
cmp
dec
adc
xor
in
fcompl
ja
push
mov
aad
shrl
subps
test
mov
loop
xchg
inc
adc
mov
and
mov
pusha
or
ret
fistpl
sbb
fnstcw
mov
push
xlat
jp
outsb
rcrb
je
lods
xchg
and
dec
mov
lret
mov
jle
xor
ret
js
stc
add
xor
dec
mull
cwtl
ds
mov
push
and
rcl
xor
inc
cmpsb
mov
mov
pop
sbb
adc
push
sbb
popf
mov
jp
mov
jns
aas
fiaddl
inc
adc
inc
in
mov
push
das
in
cmpl
fnstcw
cmpsb
int
bound
aaa
iret
std
dec
jl
push
adc
mov
sbb
test
ud0
pop
in
lret
or
sbb
imul
stos
xchg
shrl
mov
ss
out
orb
ficoms
and
fidivrl
and
jae
cmp
shrl
add
lea
sahf
fsubrs
mov
cs
xlat
int
out
inc
inc
dec
daa
lds
popf
push
pop
das
repnz
orb
ljmp
lret
push
sbb
rcr
cmp
mov
nop
cwtl
out
fbld
imul
popf
adc
lods
int
fistpl
inc
jp
movsb
xor
aaa
xor
ret
pop
push
and
pop
cmp
daa
pop
xor
insb
inc
pop
mov
cmpsl
stos
sbb
fiadds
mov
and
xchg
inc
pop
pop
push
jne
pop
xchg
out
aad
call
cwtl
enter
inc
and
cmpsl
xchg
push
jb
adc
dec
out
rcrl
repnz
push
sbb
repnz
dec
jb
in
sub
cmp
shll
push
sarl
and
push
xor
es
pop
jb
data16
push
pop
pusha
push
lods
inc
aas
dec
insl
pop
shll
iret
ss
xchg
and
push
mov
inc
aad
push
jg
in
xchg
inc
es
jo
sbb
pop
icebp
cmp
fcomip
sub
insl
popf
inc
rcrb
gs
rcrl
jns
int3
js
and
xchg
test
inc
sbb
jnp
shlb
adc
fsubrl
pop
daa
inc
imul
loop
add
push
loopne
mov
sbb
dec
dec
jmp
inc
lock
cli
int
cmpsb
inc
idivl
daa
jae
push
xlat
sahf
xor
xor
imul
notl
call
add
sub
in
cld
xor
push
cmc
xor
sbb
lds
inc
flds
push
shll
jne
int
adc
daa
xchg
push
inc
xor
movsl
mov
es
or
jp
xchg
imul
in
sbbl
adc
mov
sub
pop
mov
jb
inc
mov
xchg
or
and
iret
xchg
mov
mov
cmp
mov
mov
sarb
jp
test
mov
sbb
jmp
faddl
mov
je
jo
dec
stos
daa
push
mov
add
ret
push
lret
mov
fldenv
testb
adc
test
lret
fidivrl
mov
into
je
push
fcmovbe
add
cmpsb
xchg
ja
xor
sbb
lret
in
ret
push
rep
adcb
xlat
mov
test
push
pop
mov
loope
push
push
out
jge
sbb
mov
xor
xor
ffree
mov
dec
pop
testb
cmp
insl
mov
sbb
inc
fistpl
pop
cmp
and
into
xor
aad
inc
movsb
mov
cmp
in
and
mov
mov
mov
push
jno
lret
cwtl
clc
mov
add
test
mov
mov
xor
and
adc
add
hlt
xor
and
adc
add
test
mov
mov
xor
and
adc
add
hlt
xor
and
adc
add
push
test
mov
mov
xor
cmp
shr
enter
in
add
add
je
fwait
or
nop
inc
testl
sti
aas
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
hlt
sti
es
or
dec
stc
mov
mov
ljmp
add
or
add
add
add
out
add
ja
pop
add
pop
add
add
add
add
add
add
jno
add
add
add
push
add
add
add
add
add
jne
adc
inc
add
add
mov
add
add
cmp
stos
add
test
push
add
add
jne
or
roll
xchg
sbb
dec
add
flds
stos
add
mov
sub
xor
sub
lret
add
add
lcall
add
add
add
pop
add
add
add
add
pop
cmp
sub
fadds
add
cmp
sbb
xchg
add
push
add
add
inc
add
jae
fadds
add
add
add
add
add
push
add
movsb
add
add
jno
or
das
add
add
pop
add
pop
add
push
add
add
push
add
add
add
add
add
add
popa
add
add
mov
add
jno
xor
mov
or
stos
add
add
inc
add
lods
add
push
add
add
add
add
add
dec
add
add
add
add
add
mov
inc
add
add
add
bound
push
add
add
add
jmp
daa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aad
stos
add
add
pop
add
add
add
pop
iret
add
add
add
add
add
adc
repz
add
push
add
sahf
add
out
add
dec
add
xchg
add
add
add
sub
dec
add
inc
add
je
xor
pop
add
add
jg
inc
add
xchg
add
lcall
add
add
add
add
add
add
add
add
add
dec
add
add
add
xor
cmp
add
add
add
add
add
push
add
add
ja
lods
add
mov
add
add
add
and
pop
add
add
add
add
mov
push
add
movl
out
add
add
add
jae
sbb
add
add
add
push
add
jne
mov
or
stos
add
add
add
add
add
in
sub
testl
stos
add
add
pop
cmp
add
add
add
add
jns
push
add
add
add
jno
add
add
add
add
add
add
add
jae
sbb
add
add
add
add
add
add
roll
or
xor
cmp
insb
add
or
scas
add
incb
movsb
add
add
push
add
movl
push
add
add
add
add
add
mov
add
add
pop
add
into
add
movl
push
add
add
pop
mov
add
add
movl
push
add
add
movsb
add
jmp
pop
add
push
add
inc
lds
mov
and
hlt
mov
imul
mov
insb
jl
add
push
sahf
fs
jno
mov
fiaddl
jge
sbbl
cmpsl
pop
fcoms
scas
jno
scas
test
lods
nop
cmp
fs
shll
cli
push
cmp
mov
pop
sub
in
sbb
scas
cmp
inc
fimuls
push
imul
push
frstor
les
jb
xchg
cmc
pop
cmp
cmc
repz
in
sbb
and
outsl
mov
cmp
rol
cmpsl
xor
jl
fwait
adc
push
xchg
mov
mov
or
mov
daa
out
outsl
aaa
fcoms
push
int3
mov
cmpsl
shl
shr
adc
addr16
and
cmp
nop
shlb
mov
sbb
pop
jle
jno
out
lret
add
add
xor
fnstcw
sbb
insl
das
dec
jne
add
in
std
mov
adc
shlb
stc
jecxz
push
cmp
jp
jb
inc
adc
aad
cmp
in
xchg
inc
call
fcompl
ret
pop
and
pop
mov
fs
jmp
fwait
xchg
ret
inc
cs
adc
nop
nop
fdivr
jo
add
cmpl
ret
xor
lahf
int
lret
push
xlat
cmc
or
fmull
mov
add
cmp
cmc
jmp
mov
add
mov
jae
xchg
adc
int3
cmp
outsl
adc
bound
ja
fadds
mov
and
sub
mov
push
data16
cmp
sahf
jmp
ds
mov
jae
xor
dec
dec
ror
insl
hlt
xchg
addr16
jno
xchg
pusha
and
mov
shlb
jbe
ljmp
dec
mov
test
aaa
xchg
subl
fdivs
cwtl
pop
xor
inc
mov
lods
dec
ja
mov
or
test
test
imul
dec
cmp
cmpsb
and
fcompl
out
stos
cmpsl
jae
fnsetpm(287
xor
push
out
imul
cs
stos
xchg
in
scas
sbb
outsb
mov
adc
xchg
push
shll
xchg
mov
and
rcll
imulb
idivl
jmp
test
in
popa
mov
sbb
cli
mov
aas
lods
xor
adc
jns
jl
xor
movsb
pop
dec
js
lcall
out
and
ja
push
in
movsl
push
bound
sub
push
pop
xchg
inc
test
xchg
and
addr16
xorl
jnp
add
sub
mov
jbe
cmpsl
pop
clc
xchg
cmp
scas
adc
loop
hlt
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
