call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
mov
cmpsb
push
push
fcoml
xor
xchg
inc
out
test
divb
out
push
data16
cmpsb
inc
xchg
push
test
jbe
out
xchg
inc
out
mulb
push
push
es
and
dec
push
mov
xchg
inc
pushf
push
mov
jbe
inc
out
repz
gs
inc
out
mov
cmpsl
dec
test
in
mov
gs
daa
std
mov
mov
lods
ljmp
dec
jae
mov
cmp
jns
int3
imul
lcall
or
popf
cs
mov
ja
bound
pop
int
and
cmpsb
ja
jbe
push
imul
loope
ss
sar
data16
push
or
test
movsl
stos
jmp
leave
sbb
add
mov
push
jp
push
ret
xor
mov
mov
pop
sahf
xor
sub
mov
mov
xchg
pusha
repz
xchg
pop
mulb
cli
xlat
insb
jns
movb
push
data16
cmpsb
inc
xchg
push
adc
jbe
into
xchg
out
test
push
xor
divb
push
pop
stos
and
jecxz
ror
add
jmp
jno
dec
stos
bound
mov
add
adc
inc
ljmp
mov
pop
fistl
incb
jbe
jns
es
jae
jne
test
push
gs
jbe
inc
xchg
push
xchg
push
xchg
inc
out
mulb
push
push
divb
out
push
data16
cmpsb
inc
xchg
push
xchg
push
xchg
inc
out
mulb
push
push
divb
mov
stos
inc
sub
aas
mov
sbb
lret
shl
shlb
mov
jnp
push
shll
cwtl
sbb
test
in
xchg
mov
sub
pop
xor
mov
xor
imul
arpl
mov
mov
shr
mov
inc
or
xchg
jp
ja
pop
add
sbb
cmp
das
out
mov
or
arpl
dec
push
arpl
int3
je
xor
ficoml
sub
pushf
cli
xor
or
xchg
int3
into
cld
inc
lcall
or
dec
gs
xchg
jl
mov
inc
rep
lods
jo
adc
iret
stos
jbe
pop
sbb
and
repnz
icebp
xor
aad
leave
mov
push
sar
push
int
sbb
dec
push
xor
int
adc
ror
fucom
addb
cmp
and
inc
pavgb
push
ret
aam
inc
push
inc
cmp
add
es
ljmp
push
pop
roll
ret
push
int3
cs
mov
scas
loop
push
mov
xor
in
xor
mov
xchg
cwtl
es
cmpsb
sub
flds
xor
push
aam
ja
fbld
pop
mov
xchg
js
adc
insl
adc
wbinvd
jge
cmp
int3
ret
js
jmp
in
sahf
rcrl
xchg
sti
stos
mov
fisttpll
or
jnp
and
mov
jae
pop
push
xlat
jg
and
cld
inc
cmpsb
int
mov
mov
add
lahf
repz
mov
inc
insl
mov
cmovns
sub
mov
daa
fadd
or
inc
dec
or
jecxz
aas
js
sbb
ret
stos
es
xchg
mov
cmp
mov
pop
insl
shll
jae
xor
jbe
cmp
mov
scas
xor
subps
jae
fwait
daa
sub
pop
and
test
mov
or
rorb
add
das
insl
sub
arpl
lahf
popf
std
mov
push
test
xchg
pop
pop
sarb
dec
hlt
dec
sbb
push
stc
stos
dec
jmp
fstl
push
jnp
cwtl
out
cmpsl
xlat
adc
js
pop
add
jmp
fwait
dec
pushf
jp
mov
scas
inc
pop
mov
pop
dec
pop
fmuls
inc
push
sub
xorb
ret
lahf
pop
pushf
sbb
pop
cli
outsb
jnp
loop
jns
mov
out
fisttps
xor
imul
jle
js
nop
pop
ds
movsb
mov
jnp
fcoms
inc
or
xchg
mov
xor
lock
mov
jg
mov
inc
ffree
dec
test
fmull
aam
or
gs
popa
ja
nop
test
sbb
je
jo
movsl
push
mov
mov
mov
cmp
xor
jg
cmp
lea
push
cmp
loop
sub
xchg
repz
mov
mov
mov
add
and
into
cltd
stc
and
add
jge
mov
into
inc
adc
cmp
mov
push
lcall
push
push
add
inc
orl
jnp
mov
xor
fmull
mov
jecxz
mov
mov
in
in
in
fimull
cmpb
and
xor
sub
or
rorb
std
movsl
shrd
rorl
rorl
add
dec
jne
mov
aas
mov
pop
xchg
inc
push
icebp
pop
jnp
mov
xchg
lret
mov
aas
roll
fs
mov
lret
ret
sub
add
jae
movhps
mov
call
lods
pop
stos
enter
pop
sbb
stos
add
pop
loopne
pop
out
mov
cltd
cmpsl
negb
lret
sub
outsb
sub
cld
loopne
cmpb
pop
cmp
test
lods
into
lret
mov
clc
and
adc
adc
out
call
sub
leave
mov
or
lock
jle
dec
je
bound
mov
pop
arpl
add
pop
jmp
jg
inc
pop
jo
ficomps
push
lea
movsl
jb
lahf
mov
sub
cmp
sbb
xor
cltd
xor
pop
add
hlt
popf
dec
cwtl
arpl
outsb
fdivs
jae
outsb
int
popf
or
mov
pop
imul
mov
out
pop
rorb
dec
xor
arpl
dec
repnz
out
gs
mov
popa
arpl
hlt
in
xor
fisubrs
test
sbb
inc
xor
push
fstps
adc
sub
sub
inc
nop
cld
into
into
shlb
pop
pop
dec
fidivs
or
mov
jb
pop
test
imul
sub
icebp
ret
inc
aam
push
xchg
or
xchg
jae
push
pop
mulb
pop
sahf
pop
cmp
test
and
lcall
cltd
testb
divb
xchg
repz
xchg
test
jno
test
mov
xchg
xchg
cli
ljmp
test
out
fdiv
add
ret
push
sbb
das
ljmp
into
cld
add
fwait
je
ljmp
fs
mov
mov
jbe
rorb
mov
or
dec
arpl
xchg
dec
sti
cmp
pop
sub
es
xchg
arpl
cmp
out
inc
outsb
iret
loop
inc
or
jae
xchg
into
bound
inc
jecxz
mov
lcall
or
push
ret
inc
sbb
data16
scas
pop
pop
adc
jb
and
adc
push
lock
das
dec
aad
insl
mov
jle
jl
jp
lret
repnz
sbb
or
aaa
xorl
adc
fistps
fcomip
jmp
xor
into
cli
xor
sub
pop
sbb
pop
in
sbb
sub
or
dec
push
dec
or
movsb
mov
test
ss
sbb
sahf
lds
mov
add
pusha
add
adc
sbb
add
mov
mov
ja
loopne
mov
ror
cmp
xor
je
adc
out
pop
sub
pop
lods
cmpsl
fadds
mov
in
dec
jne
xchg
dec
leave
cmp
fists
dec
les
int3
negb
loope
popa
jmp
mov
idivl
and
jge
iret
xchg
sub
jo
mov
dec
test
inc
push
iret
shrl
xor
mov
cli
dec
cltd
and
push
mov
jg
iret
out
cmp
pop
cmp
cmp
mov
fdivp
fld
add
or
or
adc
and
cmpl
movsl
ret
bound
arpl
dec
sahf
mov
and
xchg
cmp
enter
loopne
jae
pop
icebp
fldcw
lods
sbb
pop
sti
pop
cli
lcall
ret
cmpsb
out
test
imul
sbb
jae
jl
push
mov
cmp
push
dec
nop
ret
sbb
loope
mov
xor
cmp
and
push
ficoml
movsl
push
and
xchg
fs
hlt
ds
add
jnp
push
xor
scas
xchg
jge
xchg
mov
xchg
push
out
lret
mov
dec
cli
mov
dec
jb
pusha
push
inc
test
xchg
scas
mov
inc
adc
pop
and
jl
mov
hlt
mov
mov
fs
inc
test
add
mov
adc
jns
inc
popf
loopne
daa
sti
adc
pop
lock
cld
xchg
movsb
ja
or
mov
push
or
test
pop
daa
xsave
sbb
jge
into
lock
aaa
mov
and
cmp
xor
push
cmpsb
lea
mov
xor
int
xor
mov
stc
cs
add
cmp
mov
cwtl
jno
in
xchg
jb
addr16
pop
les
pop
imul
inc
insb
shr
sti
mov
xchg
pop
fidivrl
pusha
gs
push
mov
movsb
rolb
in
cmp
cmp
push
xchg
aas
mov
xchg
les
sub
hlt
lock
nop
pop
inc
push
adc
sbb
dec
and
pop
adc
sar
push
iret
xlat
into
adc
in
imulb
or
rdpmc
xchg
jne
fadds
pop
dec
cltd
jmp
lret
stos
sbb
lcall
movsb
push
add
push
testl
fs
sub
pop
inc
xchg
repnz
out
dec
and
mov
and
lret
xor
into
lods
push
add
mov
xor
pop
push
nop
xor
decb
cltd
xor
jp
xchg
stc
ss
aaa
cld
lahf
out
sub
mov
fdivrl
inc
adc
lods
outsb
pusha
jl
fadd
mov
addr16
mov
out
aam
mov
mov
sti
adc
mov
xor
inc
aad
mov
inc
mov
or
jb
pop
xor
hlt
sbb
mov
clc
mov
out
push
push
daa
cltd
inc
lds
fldl2t
repnz
xchg
hlt
addr16
outsl
sub
sub
cmp
lea
mov
xor
jmp
xor
sbb
aas
mov
fnstcw
in
xchg
in
test
cld
jnp
push
xchg
in
pop
push
and
and
dec
rorb
fidivrl
popf
addr16
xchg
lcall
dec
dec
pushf
add
lock
loope
flds
mov
sbb
mov
sub
sti
in
pop
inc
out
or
jno
and
cmp
outsb
aad
fstpt
mul
dec
push
repz
add
mov
lret
stc
into
cmpsl
icebp
inc
sbbl
insw
fimuls
divb
cld
push
fidivl
add
ds
fucomi
mov
in
lret
jmp
das
pop
cmp
inc
or
push
cmp
jle
xor
icebp
pop
ret
pop
lea
lret
sub
xchg
ja
negb
mov
stc
mov
xchg
mov
pop
adc
mov
mov
mov
push
ljmp
mov
sub
pusha
xlat
inc
gs
cmp
repnz
bound
mov
mov
in
outsl
fstp
xchg
aas
ret
sub
jmp
xchg
mov
cltd
xchg
mov
jmp
cmp
sti
add
sub
loopne
push
or
out
and
mov
sbb
ss
pop
jmp
mov
jg
xchg
and
adc
orb
rolb
aad
stc
aam
stos
jb
push
ja
mov
jp
gs
mov
push
sub
pop
jl
arpl
out
ds
push
shl
fcom
or
in
shl
ss
out
mov
cs
gs
movsb
add
int3
mov
inc
call
mov
xor
out
fdivrl
scas
hlt
cmp
sbb
mov
or
es
arpl
rolb
add
loop
push
mov
sub
cmp
iret
pop
sbb
imul
sbb
ss
insl
aad
in
aad
es
xor
popf
xchg
mov
push
add
into
ret
and
mov
xchg
and
mov
rclb
cld
xchg
jbe
std
push
jle
cmp
push
scas
dec
ret
cwtl
dec
mov
gs
ja
xor
jno
insb
repnz
dec
cmp
push
daa
loopne
stc
sbb
push
aas
pushf
sub
mov
stos
movsb
sahf
cs
repnz
lea
lea
lock
out
and
scas
int3
push
cmp
insl
outsb
xchg
or
sbb
sbb
mov
push
fcomp
adc
sub
sti
pop
gs
or
sbb
mov
adc
in
stc
jmp
and
movsl
jns
xor
mov
mov
mov
test
mov
mov
sbb
and
sbb
idiv
bound
dec
sbb
stos
push
mov
test
pop
stc
pop
push
xor
mov
sahf
insb
add
fstpl
cld
or
aad
mov
jg
pop
mov
xchg
gs
pop
xor
mov
jno
dec
test
in
fmul
mov
es
cmp
cltd
sub
jp
dec
push
or
xchg
jmp
inc
jl
jb
sbb
iret
sbb
fisubs
dec
cmc
fisttpll
nop
lea
shl
outsb
cmpsl
ljmp
fnstsw
sti
out
rorl
pop
pop
pop
cs
jmp
jecxz
sti
cmp
int
gs
xchg
cmp
loope
fwait
push
repnz
pop
lds
jb
cmpsb
jge
mov
pop
and
testl
outsl
lahf
enter
cmp
fdivrp
aas
add
dec
aas
push
jnp
mov
push
push
push
iret
mov
insb
xchg
popa
cmc
lret
push
out
pusha
call
or
clc
xchg
push
inc
xor
nop
and
pushf
mov
dec
jg
inc
out
test
movsl
filds
xchg
xor
jmp
push
bound
loopne
mov
or
out
out
sub
fwait
call
xor
rcrb
hlt
shl
or
push
jmp
bound
sub
adc
repz
dec
jg
ss
lcall
aam
cmp
sub
out
or
inc
iret
or
call
mov
repz
lret
and
inc
fstps
insb
jae
pop
ljmp
mov
add
cmp
cld
cmp
out
dec
lcall
cmp
cmp
jae
ds
add
flds
xchg
int
repz
into
int3
mov
inc
or
xor
arpl
sbb
and
push
lahf
cmp
notb
push
test
sbb
dec
insl
pushf
adc
adc
dec
xlat
dec
das
out
mov
enter
ss
popa
pop
nop
ret
into
bound
dec
xor
les
mov
outsl
cmp
in
push
imul
aas
test
inc
xlat
inc
cltd
outsl
int
test
cmp
imul
iret
imul
pop
or
mov
aaa
mov
adc
mov
pop
mov
loopne
jmp
xlat
fucomp
fst
andl
sarl
test
stc
sbb
inc
mov
cmp
adc
iret
aas
out
adc
rcll
iret
xor
cmc
stos
jp
das
or
test
mov
push
pop
in
out
add
inc
data16
xlat
adcl
xchg
and
or
gs
mov
pop
insl
xchg
mov
dec
sti
sub
sub
or
aaa
jne
lea
flds
movsb
cwtl
cmp
mov
jb
shll
adc
mov
dec
int
add
imul
add
pop
mov
repnz
pusha
in
mov
push
test
dec
into
mov
fidivrl
aam
jnp
jne
pop
cmp
sbb
or
xchg
xchg
mov
arpl
dec
addr16
add
sbb
fnsave
jbe
and
xchg
ret
inc
sahf
cli
dec
shrl
or
mov
cmp
insl
nop
int
data16
insl
xchg
test
mov
fwait
inc
cld
std
mov
lods
pop
stos
xor
lock
jge
scas
xchg
adc
ficomps
insb
in
sti
repz
jno
mov
test
inc
mov
add
inc
jo
ja
and
lcall
jae
push
inc
and
test
imul
sub
stos
dec
pop
pop
xlat
sbb
insb
jmp
aas
loope
adc
and
aam
xor
loope
mov
add
mov
lock
lret
mov
in
cs
popf
mov
stos
pop
push
jge
or
test
mov
clc
pop
in
out
add
sub
imul
outsl
fnsave
loop
jae
call
adc
les
jns
pop
insl
movsl
push
push
mov
xchg
js
jecxz
cli
pop
xor
inc
and
cmc
fdivrs
inc
sahf
jp
cmp
xor
sbb
sub
in
fsubrs
test
add
fnstcw
inc
inc
fmuls
test
in
mov
lret
xorl
in
fwait
jbe
sub
pop
add
mov
adc
aas
push
add
sub
fstpl
mov
movsb
push
sahf
cli
xchg
fs
movd
mov
lahf
ret
push
iret
dec
sub
outsb
lcall
hlt
adc
outsl
outsb
pusha
lret
cmp
dec
sub
push
movsb
into
imul
div
push
pop
jl
leave
or
ss
repnz
cmp
mov
in
or
xchg
test
cmc
mov
rorb
scas
div
or
xor
sbb
inc
hlt
in
jmp
adc
ret
add
adc
adc
imul
test
mov
and
ds
sbb
mov
and
dec
scas
out
push
sub
sbb
dec
call
mov
xchg
lock
cli
pop
fdivl
sub
ss
xchg
movsb
fmuls
les
fists
jle
sub
sub
les
sti
jne
rcrb
adc
xchg
data16
bnd
aam
pop
pop
lret
jae
scas
popa
xor
sub
push
arpl
mov
aam
rclb
pop
push
jp
and
stc
lock
test
cmp
pop
adc
xchg
dec
ret
out
sub
shr
fcoml
add
lods
and
add
pop
in
aam
xchg
sbb
movsl
out
cmp
repz
aam
mov
jl
lret
cmp
test
add
stos
mov
ds
mov
dec
push
imul
fs
lds
jnp
adc
jo
pop
std
test
test
push
mov
inc
push
leave
repz
out
jb
xor
fadds
iret
test
push
dec
fsubs
js
mov
in
xchg
sbb
cmpsl
pop
adc
mov
cs
jp
push
jmp
dec
test
sahf
aad
lods
lock
xor
inc
push
sub
xlat
xchg
subb
pop
dec
fisubrl
fmuls
pusha
xor
mov
mov
and
out
sub
daa
dec
sub
rorb
aaa
addr16
xor
out
loope
in
addr16
call
inc
icebp
aad
sub
push
mov
outsb
dec
or
push
cmp
js
insl
imul
ret
sub
leave
loopne
ss
adc
pushf
adc
push
je
and
jb
xchg
addr16
adc
xor
fnstcw
fdivrl
or
xchg
fbstp
push
dec
sbb
or
int
pop
dec
movsb
cmp
inc
lret
and
icebp
movsb
enter
lahf
jno
adc
dec
popa
mov
dec
inc
les
and
cmp
dec
push
out
cmp
repnz
add
bound
and
pusha
push
inc
xchg
dec
inc
fimuls
adc
dec
lock
cmp
lds
sbb
movsb
hlt
in
mul
adc
insb
fcompl
cmp
insb
dec
push
mov
ds
and
ja
imul
jl
mov
stos
jl
sarl
xor
jg
xchg
outsl
into
sub
jp
pushl
inc
repnz
mov
and
cmp
lcall
xchg
les
test
leave
pop
fldt
mov
mov
in
push
in
int
cmpsl
jp
cmpsl
xchg
call
mov
je
sahf
mov
or
int
mov
xor
cmp
add
cwtl
test
push
xchg
push
das
ljmp
iret
shlb
mov
lret
popw
mov
popf
pusha
testl
es
mov
jmp
arpl
sbb
adc
sahf
dec
jno
or
inc
adc
fiadds
sarb
lahf
lods
and
inc
inc
jmp
adc
out
das
push
jns
dec
movsb
int
popa
xor
mov
xchg
std
lahf
mov
lret
cmpsb
mov
lods
xchg
lcall
ficoml
pop
dec
mov
push
imul
call
push
dec
jno
roll
inc
and
stos
xchg
rcll
mov
adc
jle
nop
addr16
hlt
fldt
xchg
pop
sub
loope
sbb
and
push
mov
pop
xchg
dec
dec
gs
xchg
ret
jmp
jge
scas
jne
sbb
or
sbb
scas
mov
xchg
and
insb
ret
pop
adc
loope
imul
or
xlat
pop
movsl
ss
push
or
mov
movl
xchg
cmpsl
or
shrl
fdiv
push
loope
pusha
jmp
pop
test
jmp
rcll
data16
cmpsb
inc
xchg
push
xchg
push
xchg
inc
out
mulb
push
push
divb
out
push
data16
cmpsb
inc
xchg
push
xchg
push
xchg
inc
out
mulb
push
push
es
data16
int
xchg
push
xchg
push
xchg
dec
out
mulb
pop
xlat
loop
adc
add
xor
xchg
jbe
inc
push
push
inc
cmpsb
mov
xor
outsb
sub
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
mov
insl
ss
cmc
push
mov
push
shrl
fcoms
sbb
xchg
add
adc
int
aad
in
cmc
push
test
jbe
inc
mov
adc
xchg
add
xor
arpl
xor
xchg
fnsaves
inc
dec
push
inc
cmpsb
cmp
and
mov
cmc
inc
mov
cltd
mov
and
fstp
outsl
push
andl
adc
andb
insb
jl
aad
push
mov
xor
shll
addl
mov
mul
aam
rorl
popf
lea
lcall
lret
push
subb
inc
test
jbe
dec
mov
push
pop
push
dec
jne
mov
mov
pop
push
xor
sub
sbb
xor
cltd
loope
std
push
test
mov
divb
inc
ss
jg
and
mov
insl
std
and
dec
fistpll
repz
xor
cmpsb
pusha
and
ss
cltd
push
test
jbe
inc
or
mov
xchg
gs
mulb
mov
push
jmp
loopne
mov
aam
and
adc
xor
xchg
jnp
push
mov
mov
dec
pop
pop
mov
and
js
ret
adc
add
sbb
jbe
jo
push
mov
out
xchg
arpl
movsl
inc
mov
inc
cmpsb
push
mov
xchg
add
xor
ss
cmc
push
test
jbe
inc
mov
inc
cmpsb
push
mov
xchg
add
xor
push
dec
imul
mov
mov
test
hlt
stos
inc
xchg
test
ja
jp
jae
test
icebp
xchg
das
mov
outsb
adc
mov
mov
imul
out
testb
fidivl
xchg
cmp
jbe
fwait
imul
lock
inc
mov
outsb
les
not
lods
xchg
adc
adc
ljmp
push
mov
sarl
fnsave
push
push
inc
pop
aaa
sub
and
pop
stos
test
jmp
fadd
sar
lret
push
mov
mov
pop
das
inc
jae
std
lods
lods
and
push
pop
push
cmpsl
gs
jp
xchg
scas
lret
out
mov
nop
cltd
jbe
popf
hlt
inc
repnz
sub
aas
jae
scas
pop
outsl
test
jns
mov
stos
shrb
adc
xlat
dec
and
scas
testl
cmp
int3
aam
adc
addb
gs
mov
fadd
mov
ja
mov
mov
xchg
jo
jae
mov
dec
or
xchg
mov
jl
add
test
ficomps
cmp
and
gs
add
fidivs
inc
cmp
clc
sarb
xchg
pop
in
pop
and
mov
je
enter
pusha
addb
arpl
test
inc
and
mov
hlt
iret
xor
ret
jnp
dec
jns
fldenv
nop
iret
fisubs
int3
shll
addr16
aas
push
mov
jno
add
out
in
lret
notb
out
mov
add
data16
lock
or
je
mov
roll
data16
and
hlt
and
xchg
cmp
ljmpw
in
mov
dec
std
dec
sub
testb
push
scas
les
icebp
adc
std
mov
xchg
mov
mov
or
ljmp
imul
dec
jecxz
je
cwtl
xchg
sbb
out
leave
mov
jg
aas
les
in
enter
push
nop
fildll
inc
aas
or
pop
push
insb
inc
movsl
lock
dec
faddp
jb
jb
subl
or
and
mov
fcompl
pop
out
jns
nop
call
or
ljmp
lods
icebp
mov
fisttpll
and
ja
repz
push
aam
daa
xchg
mulb
xor
xchg
jb
stos
repnz
xchg
dec
stc
push
cmpsb
popf
lock
add
cmp
push
xchg
popf
add
enter
dec
rcrb
jb
pop
out
testb
pop
das
jl
test
ljmp
xor
adc
pusha
inc
ljmp
and
xchg
pop
and
inc
inc
test
ret
dec
test
jno
mov
ret
leave
pop
dec
cmp
pop
add
rol
sub
lahf
adc
inc
jbe
push
mov
mov
int
jae
xchg
push
bound
sub
loope
pop
or
jbe
adc
sarl
dec
fisttps
movsb
cltd
jmp
pop
xchg
sarl
or
push
mov
cmpl
mov
scas
in
xor
sbb
push
xor
mov
push
call
sbbb
mov
mov
das
push
add
cmp
jmp
clc
mov
pop
xor
call
insl
jnp
pop
jno
jno
sbb
jbe
xchg
jb
mov
cmp
sub
mov
cmp
mov
nop
shlb
jno
sub
xchg
mov
xchg
shll
xchg
pop
mov
pop
addl
cltd
lods
xor
sahf
orl
imul
aad
pop
shl
fcoms
int
in
adc
adc
cs
or
xor
repz
loope
int3
rcl
and
mov
and
mov
clc
xchg
aas
aaa
jb
pop
sbbb
jmp
adc
or
dec
sahf
cmp
mov
jle
add
ret
negl
cwtl
and
rcrl
pusha
dec
mov
inc
lret
cmp
repz
aaa
in
test
cltd
push
cmpl
or
cmp
or
inc
jae
mov
xchg
repnz
clc
cwtl
sbb
bound
and
mov
mov
mov
insl
and
insb
add
ss
idivl
adc
mov
adc
stc
pop
outsl
inc
orl
lock
rcrl
les
pop
adc
outsl
mov
in
fstpl
xor
inc
and
and
in
adc
je
aaa
mov
lods
dec
push
and
rcrb
push
push
dec
cld
and
add
addl
jmp
xlat
cmovae
sbb
stos
sarb
ljmp
jo
add
in
mov
mov
xor
int3
xchg
mov
bnd
loopne
dec
aad
or
add
fbstp
pop
ss
dec
pushf
pop
test
and
push
out
jp
cmpsb
xor
das
push
int
xchg
push
cmc
push
repz
daa
test
insl
pusha
or
mov
cmp
mov
or
sarl
jbe
rorb
adc
out
push
test
pushf
cli
push
xchg
repz
cmp
les
insl
mov
gs
jecxz
sub
xorb
sbb
mov
icebp
push
mov
and
xor
pop
lret
pop
outsb
jge
pusha
ret
inc
jle
adc
ja
dec
stos
inc
test
cmc
fsubrs
shl
mov
inc
xchg
xor
xor
push
fdivrp
mov
pop
or
push
in
notb
popf
dec
jmp
push
jp
sbb
int3
roll
dec
mov
jns
in
push
cmc
cmp
jo
sbb
fisubs
mov
les
movsl
inc
loope
mov
mov
mov
fs
cmpsb
scas
out
mov
ret
jno
adc
repz
xor
lret
inc
and
xor
imul
pop
stc
andb
xchg
dec
fwait
mov
add
test
add
aaa
cmp
fsubrs
ja
lret
cli
popf
lea
adc
insl
add
outsb
push
es
rcr
imul
mov
lret
test
mov
mov
imul
lcall
shlb
pop
xor
rolb
clc
fistps
push
sbb
jge
mov
mov
stos
dec
mov
xchg
adc
mov
mov
xlat
xor
andl
loop
subl
mov
cmpsl
add
insl
movsb
pop
int
sub
outsl
test
sub
jecxz
or
push
jb
adc
pop
jno
jo
ret
jae
push
push
dec
cmpsb
jbe
adc
mov
dec
cmpsl
and
aaa
dec
leave
dec
jl
xchg
call
mov
xor
pop
insb
jmp
jb
mov
pop
jbe
sbb
inc
inc
rcrb
in
xchg
insl
pop
fdivrs
mov
pop
push
lock
in
iret
dec
mov
cmp
pushf
adc
adc
adc
adc
rcrl
movsb
loopne
lret
sub
pop
mov
lahf
int3
lods
sbb
addl
out
shlb
jb
cmp
cmp
add
mov
cmp
mov
pop
popl
add
scas
jl
stc
das
cmpsl
out
xchg
sbb
push
push
test
lahf
dec
mov
ret
cmp
ficoms
enter
push
cmp
and
fdivrs
xor
mov
lods
stos
outsb
xchg
cs
movsb
mov
addr16
jge
push
imulb
or
mov
icebp
add
int3
cmp
mov
js
lds
pop
ss
add
bound
imul
mov
sbb
in
xchg
aam
mov
adc
cmpsb
lods
fmulp
mov
ret
mov
push
mov
push
pop
repnz
jno
neg
stc
mov
insb
loop
xchg
cld
pusha
sbb
xchg
cmp
insb
cmp
sub
or
clc
ret
scas
cltd
push
nop
shlb
pushf
inc
xor
sub
jecxz
lods
popf
jecxz
inc
stos
mov
xor
xor
pop
mov
mov
ljmp
pop
cmp
xchg
add
stos
imul
sub
aas
dec
lahf
mov
jo
stc
mov
notl
adc
scas
and
lcall
pusha
xor
rolb
inc
sub
add
cmp
lcall
fnstcw
aaa
add
std
inc
mov
xchg
rcr
int
mov
es
pop
es
cltd
testb
push
btc
cld
or
out
rclb
loop
fstpt
sub
adc
aam
push
fiadds
sub
mov
notb
addr16
ja
fistl
mov
jp
xor
push
mov
sti
insl
lods
je
sub
or
add
lods
testl
pop
and
ljmp
mov
cli
cmp
mov
leave
mov
lcall
fsubrs
sbb
inc
shl
cmpsb
jge
mov
sub
rcl
mov
mov
xor
fimuls
into
ljmp
jbe
xchg
sahf
push
cld
jmp
loopne
fcmovnb
adc
fsts
mov
dec
mov
or
cli
mov
fiadds
cs
sub
mov
xor
or
and
inc
das
jecxz
cmp
sub
lods
popf
inc
inc
cmc
jns
xor
inc
in
lods
cmp
sub
xchg
pop
rcr
ljmp
jnp
pushf
or
fcmove
jge
and
jmp
mov
pop
cs
icebp
push
xchg
lea
push
and
add
enter
jl
inc
cmc
mov
jg
sub
push
xor
xor
std
cmpsb
andb
cs
cmp
pop
xor
leave
das
pop
jnp
test
rclb
popa
mov
mov
adc
pop
inc
lods
sti
daa
pop
sahf
mov
dec
dec
cmp
clc
test
adc
sub
xor
mov
lock
gs
mov
out
nop
dec
ss
jg
add
in
out
outsb
cmp
in
daa
dec
icebp
xor
sti
loop
pop
ljmp
or
push
daa
ja
jb
adc
inc
inc
inc
lock
enter
dec
inc
testb
fwait
nop
pop
jecxz
xor
push
imul
adc
arpl
xchg
push
sub
jns
xor
js
jmp
test
adcl
sbb
add
sub
test
push
loope
stos
int3
pop
nop
xchg
aad
pop
cwtl
mov
sahf
cld
ja
out
pop
push
out
pop
mov
daa
out
jecxz
stc
pusha
movsl
mov
cwtl
add
cmp
sub
adc
ljmp
lcall
jnp
push
js
int3
add
push
push
lock
pop
xchg
dec
daa
fcomp
cmpsl
mov
push
lods
js
add
outsb
mov
mov
sbb
pop
lcall
test
sub
push
mov
xchg
dec
setne
push
popa
fnstenv
mov
sti
loope
call
push
jnp
in
sbb
pop
mov
out
lock
aad
push
icebp
cmpsb
lods
xor
aad
ss
inc
aas
jo
or
lret
sub
stos
mov
pop
mov
xor
mov
int
push
ret
jge
jae
push
insl
aam
loopne
xchg
pop
insb
sbb
sahf
cmc
fidivrl
mov
ret
mov
and
cs
shlb
xchg
xchg
fisubrs
cwtl
sub
pusha
mov
mov
jbe
xor
leave
shrb
fs
jmp
adc
push
push
lea
and
mov
sbb
jl
int3
sub
call
push
fdivrl
mov
into
fcom
scas
loop
add
jge
scas
pop
ljmp
xchg
outsl
xchg
sahf
xchg
orl
dec
rolb
cltd
xchg
loop,pn
mov
pop
fistpll
inc
pop
popf
adc
mov
popf
fcom
in
cmpsl
stos
sbb
cmpl
or
nop
in
leave
fbstp
or
and
loop
mov
aad
popa
sub
push
std
sbb
pop
pop
xchg
ret
ret
sub
cmp
sbb
loope
sub
cli
dec
or
sbbb
addl
mov
fs
jecxz
mov
adc
ret
jno
jb
sub
into
in
cmp
sbb
jno
mov
sbb
cli
in
bound
sbb
shl
sub
shrb
jmp
ds
fsubs
popa
sbb
inc
xchg
insb
bound
and
jecxz
push
add
or
jne
idiv
stos
push
jge
test
adc
dec
sti
es
outsl
dec
notl
std
repnz
pop
fdivp
out
xchg
mov
in
mov
mov
neg
mov
movsl
mov
std
lea
pop
mov
xchg
mov
int
mov
sbb
mov
xchg
mull
push
in
inc
adc
jb
push
sbb
mov
cmp
test
insl
int3
fidivrl
jae
xor
out
inc
repnz
inc
mov
aad
push
push
stos
movsb
je
push
push
inc
push
outsl
pop
jp
sbb
mov
mov
and
cmovns
mov
icebp
cwtl
inc
and
lahf
sub
jmp
pop
or
pop
mov
das
fdivrl
jns
aas
and
pop
std
stc
fisttpll
pushf
cmp
push
push
and
cmpsb
sahf
bound
adc
loopne
aas
dec
leave
fninit
leave
jb
sarl
mov
fdivp
adc
push
cmp
xor
lods
mov
in
test
out
xchg
scas
aam
addr16
lahf
sahf
pusha
lea
mov
mov
jle
mov
lahf
arpl
xor
sub
xor
bound
inc
xchg
or
nop
dec
jno
jl
mov
mov
cmp
testb
jae
clc
loopne
xor
add
jbe
in
rol
sbb
rcrb
inc
out
sub
sub
std
dec
jecxz
sarb
jo
adc
dec
loopne
pushf
mov
bound
scas
jp
dec
lcall
add
push
cmp
sbb
loope
push
std
cmp
xlat
repz
inc
ret
stos
hlt
and
pushl
pushf
fbld
cmpsb
popf
fnstenv
xor
lods
jp
insl
mov
adc
sub
mov
push
shl
inc
mov
test
jg
or
mov
pop
mov
lds
test
out
and
fdivrp
adc
jb
aaa
push
dec
hlt
aaa
loopne
xchg
addr16
push
shrb
aam
push
pop
in
xlat
push
and
mov
pop
add
dec
jnp
mov
andb
xor
lret
test
shl
or
xlat
dec
rcl
inc
dec
xchg
xlat
mov
sub
ret
test
mov
inc
cmp
inc
ficoms
lret
stos
ja
push
jae
jg
mov
sti
mov
and
xor
sub
dec
cmp
and
jge
cmp
mov
push
pop
out
jmp
add
fisubrs
rol
xchg
xor
mov
jge
aad
or
movsb
inc
out
mov
rcr
xchg
fisubrl
arpl
imulb
or
xchg
fcompl
xchg
push
in
rcr
xchg
xor
push
pop
xlat
and
and
mov
xor
jge
subl
das
mov
decb
shll
test
xlat
jno
mov
mov
mov
lahf
and
cld
fcmovb
stos
fcompl
inc
mov
push
arpl
mov
push
xor
xchg
ss
push
push
es
xchg
lock
jbe,pn
xor
mov
in
add
xchg
sahf
call
jp
adc
test
jp
sub
inc
inc
mov
in
orb
jae
in
cwtl
data16
movsl
xchg
enter
in
dec
ds
push
mov
gs
jp
xchg
out
mov
gs
push
test
xchg
inc
sbb
jge
jle
fbstp
and
enter
inc
mov
adc
into
sub
ja
add
es
push
dec
fistpl
insl
lds
into
or
sbb
inc
and
pop
lods
push
push
shlb
sub
mov
jbe
cmc
sbb
jecxz
popa
sbb
add
adc
and
scas
add
cld
pop
add
fucomi
andb
or
test
rcrb
inc
pop
in
test
dec
sub
shll
jne
dec
divl
adc
or
or
pop
mov
std
fsubl
ljmp
adc
mov
xchg
mov
or
mov
jae
mov
dec
sbb
movsb
mov
lods
mov
fldenv
dec
inc
mov
test
xor
or
push
fsubs
jae
pusha
insl
xchg
dec
repnz
mov
mov
inc
int
xchg
push
inc
outsb
jmp
ja
lcall
hlt
cmp
std
jecxz
int
pop
je
jo
cmp
add
aas
out
cmp
push
int
out
cmp
xchg
out
sbb
mov
lods
lea
mov
loop
push
add
movsl
pop
mov
or
stc
fmul
ss
and
and
loope
inc
push
push
fnstcw
je
jge
lods
lock
lds
iret
fdivr
dec
dec
xor
dec
inc
test
sub
rcll
xor
testl
rcrl
push
leave
dec
push
mov
mov
pushf
and
xor
in
inc
mov
cmp
sbb
push
jle
pop
xor
or
cld
data16
nop
dec
mov
adc
push
test
xchg
data16
int
pop
jbe
das
mov
xor
add
nop
cmpsb
jae
stos
stos
push
andl
aas
xchg
imul
aas
ja
negb
and
mov
imul
fucomi
cmp
leave
mov
xor
sub
call
mov
or
mov
adc
mov
in
int3
inc
gs
cmp
das
lods
jp
pushw
mov
cmp
sbb
mov
mov
std
ret
xor
mov
enter
stc
or
lods
and
mov
adc
test
add
sbb
sbb
lods
sbb
xor
jl
dec
movsl
push
loopne
pop
push
das
fsubrl
mov
fwait
js
mov
mov
add
sarb
xor
sbb
xlat
cmpsb
mov
aas
push
and
fsubrs
rolb
add
stc
mov
nop
das
jl
xor
push
sub
addb
inc
xor
movsb
cmpb
aam
insb
pop
lret
mov
inc
aad
sbb
cmpsb
or
imul
xor
xor
xchg
push
test
stc
inc
jl
or
adc
pmulhw
dec
enter
jnp
fildl
pop
adc
jb
sbb
sub
mov
and
nop
imul
test
sub
xor
sub
push
movsl
push
cmp
jno
testb
fildl
or
mov
iret
aam
and
es
sahf
inc
xchg
xlat
ljmp
fbld
jmp
inc
mov
sti
jle
mov
cli
push
add
arpl
jp
shlb
nop
mov
out
rorb
or
mov
xor
fadds
insl
mov
out
leave
jne
lcall
and
fistpl
lcall
adc
in
cmc
pop
ja
xchg
adc
push
cmp
cmc
and
ja
jecxz
jmp
enter
ret
jl
lahf
pop
pop
in
sti
lea
and
pop
mov
jb
xor
inc
and
jb
pop
jp
movsb
or
cmp
and
rorb
cmc
in
sarl
or
cmp
cmp
addl
clc
test
hlt
das
push
adc
pop
xchg
lds
inc
subl
inc
ror
jmp
mov
xlat
addr16
mov
push
mov
xchg
pop
lahf
or
xor
or
or
cltd
mov
stos
jp
test
loope
sub
fneni(8087
scas
add
inc
mov
mov
lret
sahf
in
flds
adc
mov
ffreep
jae
enter
mov
fcoml
jae
test
adc
mov
sbb
jno
mov
push
xor
push
sub
out
and
xor
inc
xchg
push
notb
cmpsb
xchg
pop
push
push
imulb
mov
fstl
xchg
clc
sbb
dec
loop
xor
xchg
inc
out
cmp
mov
jp
fisttps
scas
lcall
jae
cli
sbb
push
stos
rcl
inc
hlt
pop
dec
add
je
cmp
jae
jge
push
push
mov
imul
cld
xorl
fdivrs
jne
sbb
dec
cmp
sub
jo
jmp
jbe
inc
mov
inc
cmpsb
push
mov
xchg
add
xor
ss
cmc
push
test
jbe
inc
mov
inc
cmpsb
push
mov
xchg
add
xor
ss
push
cmc
push
test
jbe
inc
mov
inc
cmpsb
push
mov
xchg
add
movb
insl
push
fstl
test
jbe
inc
xor
sbb
xchg
jb
popf
or
cmp
sub
in
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
mov
movsb
push
xchg
test
dec
xchg
jbe
add
and
adc
add
je
fs
push
movsl
inc
mov
inc
movsb
push
xchg
test
add
les
lds
je
fs
push
movsl
inc
mov
inc
movsb
push
xchg
test
add
les
addr16
sub
lret
sub
std
movsb
sbb
or
in
pop
scas
aas
mov
fsubrl
inc
je
fldcw
add
aas
push
sbb
popa
cmp
lock
xor
ret
sub
test
push
movsl
mov
pop
pop
jae
or
sub
xchg
dec
pop
jmp
outsb
movsl
aam
in
xchg
xor
test
loop
add
adc
dec
lods
lret
xor
xor
cltd
popa
and
push
scas
inc
mov
xor
add
dec
out
pushf
aad
lds
add
icebp
stc
xchg
mov
push
dec
dec
rcrb
add
sub
dec
xchg
sbb
gs
push
movsl
sub
ljmp
jne
add
les
adc
add
je
fs
push
movsl
inc
fdiv
inc
int
icebp
gs
cwtl
pusha
lods
jl
arpl
aam
subb
or
sti
mov
xor
add
jne
imul
lods
push
mov
nop
adc
xor
add
sbb
hlt
sub
adc
xor
and
adc
add
je
fs
push
movsl
inc
mov
inc
movsb
push
xchg
test
add
les
adc
add
je
fs
push
movsl
inc
mov
inc
add
jno,pn
cli
insl
stos
sub
dec
xchg
aad
xchg
pop
fstpl
pop
xchg
fadds
jecxz
fwait
inc
ss
lds
fildll
pop
jo
scas
xor
jecxz
mov
mov
pop
xchg
out
icebp
and
jg
movsb
mov
dec
pop
dec
das
rclb
adc
int
xor
shrl
repz
into
imul
popf
clc
lret
sub
mov
jmp
mov
imul
clc
imul
dec
cmc
lods
sbb
mov
aam
fistl
sti
sbb
push
int
jae
push
mov
jp
imul
cmpsl
xchg
dec
sbb
dec
push
jns
xchg
jbe
inc
movsb
nop
imulb
ss
out
aam
adc
cs
fdivp
rcrb
flds
pop
xor
xor
into
lcall
loopne
ret
adc
push
jle
inc
xor
int
test
dec
orb
mov
scas
inc
push
js
mov
lods
pop
mov
xor
jo
fiaddl
add
in
sub
xor
mov
inc
mov
push
mov
fistpll
push
jae
cwtl
or
xor
mov
addl
mov
pop
dec
outsb
push
sub
push
idivl
jle
jne
cs
jno
inc
mov
mov
mov
stos
and
or
cs
dec
repnz
scas
sub
adc
jl
movsl
mov
or
sbb
sub
sar
xor
sti
sbb
rorl
adc
cmp
sbb
pusha
mov
and
sub
nop
imull
stc
scas
pop
jp
in
das
mov
aam
int3
or
and
cmp
jp
mov
psubq
dec
push
enter
mov
xchg
mov
xor
dec
dec
xchg
jl
xor
je
inc
sti
adc
pop
push
mov
in
movsb
push
cltd
aas
loop
jmp
pop
adc
mov
pushf
shrl
repz
jnp
mov
adc
scas
imul
inc
hlt
xchg
jg
std
popa
sbb
xor
ds
int
shlb
arpl
cmp
xchg
insb
adc
and
loope
insb
xlat
or
sti
inc
sbb
mov
pop
loop
inc
test
in
jbe
mov
lcall
shl
in
jb
mov
dec
in
iret
xchg
ret
loop
dec
enter
mov
cs
xlat
std
xlat
or
shll
gs
loope
xor
pop
aad
sar
jbe
dec
lret
inc
or
or
loopne
or
ljmp
xor
dec
xorl
lds
shrb
or
ja
rcll
push
adc
push
pop
fisubrl
jmp
cs
pop
loope
push
mov
mov
xchg
loope
mov
dec
lret
xor
xchg
sbb
fsub
movsb
idivb
dec
or
shl
dec
sti
mov
test
outsl
mov
shlb
push
out
je
cmp
add
pop
repnz
dec
mov
mov
ja
xchg
push
jp
push
pop
mov
push
mov
imul
inc
pop
cmpsl
mov
lret
ja
test
imul
test
out
sbb
jbe
xor
pop
inc
outsb
mov
dec
mov
lahf
cs
sti
inc
jb
dec
rcrb
rcll
repz
adcl
sti
outsb
aas
xchg
mov
lcall
pop
xchg
mov
mov
push
push
test
rcrb
pop
cmpsb
and
adc
movsb
dec
mov
lods
rcr
jge
test
jmp
sub
test
fistl
mov
data16
dec
lahf
and
subl
push
lods
mov
loopne
mov
mov
xchg
pop
aas
dec
pop
cld
mov
push
add
sub
aad
ret
jp
jno
loope
push
inc
shl
cltd
jne
lea
scas
out
mov
xor
lret
mov
sub
xchg
push
cmpl
cmp
or
arpl
inc
ljmp
xchg
or
jb
aaa
fbstp
data16
add
xchg
fnsave
fimull
pop
sahf
inc
adc
fs
mov
loope
mov
inc
push
cmp
adc
add
push
push
dec
out
bound
push
out
adc
gs
es
mov
dec
push
cs
sbb
ja
push
lret
xchg
lock
cmp
mov
pushf
cmp
sbb
push
mov
fmuls
test
sbb
das
mov
sub
loopne
pop
insb
mov
stc
sbb
mov
push
xchg
or
lods
sbb
bndldx
lods
ja
jl
fwait
jnp
inc
xchg
mov
fdivs
or
mov
push
in
pop
xchg
push
ret
fucomi
mov
inc
sub
adc
xchg
cmp
loopne
cmp
stos
mov
jns
ret
js
dec
nop
bswap
scas
dec
and
out
mov
daa
pop
sbb
pop
out
mov
xor
call
mov
pusha
sti
push
inc
xor
adc
dec
adc
or
push
mov
outsb
frstor
and
mov
and
pop
jbe
mov
dec
push
mov
xchg
push
lea
int3
or
popf
movsb
cmp
shrl
fdiv
sub
mov
mov
stos
or
adc
das
js
push
ljmp
xchg
jle
in
mov
xchg
outsl
jle
pop
fdivrl
lcall
ret
loope
xchg
push
add
call
sub
dec
sub
add
scas
lock
std
gs
push
mov
fcmovbe
pushf
xor
mov
xor
testb
pop
mov
mov
xor
rcrb
sbb
jmp
xchg
popf
dec
xlat
sarl
scas
ljmp
push
cmp
jb
pushf
scas
iret
pushl
mov
aas
push
rol
ljmp
fists
pop
mov
add
pop
fwait
mov
push
xchg
inc
xor
pop
sub
inc
lret
movsb
xor
shll
les
push
push
dec
ja
loope
cmp
inc
ljmp
data16
cmc
adcl
aam
mov
sbb
inc
xlat
lea
push
or
nop
pop
ret
and
or
arpl
call
xchg
xlat
mov
lock
dec
push
mull
sbb
inc
enter
xlat
int3
and
jg
aad
ficomps
jnp
jl
sbb
ds
and
loope
es
cmp
subl
push
cwtl
out
enter
out
sbb
pop
inc
push
jns
pop
ficoms
inc
lcall
mov
fisubrl
ret
xor
adc
movsb
aam
in
push
dec
jbe
adc
je
pop
and
fbld
out
pop
xorl
jns
mov
or
in
fcmovu
mov
pop
test
fbstp
cvtps2pi
pop
stc
or
mov
cmpsl
cmpsb
inc
xchg
mov
outsb
xchg
fwait
lahf
out
cmp
dec
cmp
adc
and
jne
in
pop
ror
test
out
pop
mov
sub
popa
jecxz
lahf
or
nop
and
cmp
xor
test
cmp
out
orb
xchg
dec
sar
popl
add
jmp
mov
mov
pushf
popf
hlt
add
pop
outsb
mov
repnz
pop
push
and
jae
mov
pusha
and
add
out
sbb
mov
pop
es
imul
sub
mov
jmp
mov
push
test
fstpl
and
cmpsb
test
dec
sub
movsl
insb
dec
andb
mov
jns
les
imul
pop
and
cltd
lods
cmpsl
mov
cs
rcrb
fwait
cmpsl
cli
jl
fwait
ja
add
mov
fisttps
or
imul
jno
fs
cmpsl
adc
pop
les
je
xchg
jnp
lea
das
mov
mov
imul
leave
mov
rcrl
das
lods
aas
rclb
fdivrl
ret
ret
and
or
cli
insb
dec
stc
inc
fsubrs
adcl
cmp
into
call
sub
add
popf
pop
aad
jnp
insb
aad
mov
sbb
push
jne
pop
adc
stos
addr16
pop
mov
imul
xchg
test
push
lock
aam
push
into
xchg
ss
add
fsubp
mov
jbe
fwait
outsb
add
adc
push
inc
push
roll
jno
aad
test
das
mov
push
dec
lahf
in
push
aas
daa
jnp
dec
stos
and
pop
pop
mov
cs
adc
mov
mov
mov
sub
movsb
sbb
jg
push
jmp
ja
jge
cs
inc
pop
cmp
jns
mov
nop
outsb
adc
jmp
pop
das
mov
call
mov
mov
hlt
pop
into
mov
cmpb
mov
jmp
mov
sbb
adc
fmull
out
scas
jl
pop
inc
add
popf
lret
mov
sub
cmp
sub
test
call
stos
jb
cmpsl
jb
lea
addr16
enter
and
int3
push
sahf
mov
jge
movsb
mov
call
test
jbe
or
call
and
fmul
movsb
fildll
arpl
xor
jns
ret
insl
loopne
or
and
mov
sbb
mov
xchg
ds
xchg
mov
and
mov
adc
shrl
es
out
xlat
and
fcoms
bound
sbb
mulb
outsb
aam
stc
jne
paddw
fildll
dec
sub
sub
xor
nop
ret
pop
cwtl
lret
inc
fidivl
adc
push
mov
fimull
daa
mov
movsl
jbe
fildll
xchg
test
sub
push
movsb
pop
loop
leave
push
lahf
and
enter
jp
das
lret
and
inc
jge
and
std
fs
xchg
sbb
cmpsb
jne
out
add
dec
xchg
nop
mov
inc
pop
jmp
test
test
adcl
out
rclb
add
ja
das
push
clc
xlat
into
xor
adc
outsb
adc
pushf
shlb
sbb
addb
cmp
mov
mov
xchg
js
or
sub
cmpsl
adc
sbb
jl
mov
js
sbb
pop
add
ret
into
clc
inc
jbe
dec
scas
daa
xlat
jbe
dec
in
pop
push
pop
xchg
push
loopne
lcall
stc
push
out
outsb
mov
cmpsb
cmp
sti
mov
test
xlat
xor
sub
cld
xchg
scas
xor
jns
or
cmc
jo
sbb
add
cs
pushl
xlat
cltd
decb
outsb
or
ds
in
lods
and
cmpsb
or
imul
dec
mov
push
sub
not
hlt
cmp
pop
sub
mov
mov
and
iret
pop
mov
flds
adc
push
mov
or
sbb
add
data16
mov
mov
out
xor
hlt
cmp
mov
pop
push
xchg
les
jmp
pop
inc
out
les
mov
sahf
lcall
sbb
movsb
sub
pop
icebp
enter
jl
icebp
sub
in
mov
add
lds
rorl
mov
test
inc
fcmovb
int
push
sbbl
xor
jge
inc
add
notl
inc
jbe
ss
mov
shll
xchg
popa
cs
aad
cmp
fucomip
imul
cmpsb
sub
add
pusha
cli
shrb
cltd
cmpl
shr
sti
rorb
mov
enter
dec
inc
mov
or
ret
ds
cmc
repz
lds
in
xchg
pop
shll
add
push
lret
outsl
js
fstps
dec
stos
push
dec
or
pop
mov
leave
pusha
dec
cmp
in
mov
push
or
jg
lods
fidivl
rclb
jle
int3
sbb
pop
jle
stos
jne
mov
push
rorb
je
js
jle
loop
pop
icebp
jmp
je
and
mov
je
repnz
nop
sbb
int
xor
outsl
jmp
ret
rorl
mov
lahf
xchg
mov
mov
mov
movl
in
fisubrl
lahf
fs
xor
iret
stc
ret
mov
imul
cmp
jne
fldl
sbb
lods
jo
pusha
in
xchg
daa
dec
out
inc
jo
xchg
xor
xlat
cmp
cmpsb
xchg
push
xor
out
xchg
mov
push
int3
divl
les
mov
inc
adc
rcrb
negb
stc
or
xor
xchg
mov
add
xchg
std
jge
mov
mov
sbb
stos
fs
xchg
addr16
leave
in
push
inc
mov
inc
das
mov
movsl
scas
push
pushf
cli
cmp
dec
add
subl
stos
pop
imul
mov
pop
mov
fdivl
pop
inc
adc
dec
sbb
sbb
fsubrl
ds
popa
fdivs
hlt
add
addr16
cmp
sbb
jne
xor
or
movsl
sub
add
pop
movsl
sub
push
sbb
xor
or
nop
imulb
icebp
or
push
les
fistl
mov
outsb
clts
pushw
jl
adc
cmpsl
lahf
pop
fiadds
dec
mov
cmp
adc
stos
jne
push
lea
cmp
jmp
aaa
out
pop
jge
xchg
inc
popa
call
add
mulb
test
dec
jg
popf
mov
fnstcw
rorb
jo
push
gs
in
jg
and
add
cs
imul
sub
scas
sub
sbb
jge
mov
adc
xor
pushf
sbb
xchg
mov
test
subl
ja
sarb
xor
xchg
mov
sub
aam
mov
or
cmpsb
ja
imul
inc
notl
add
jns
mov
xor
jl
pop
mov
xor
mov
inc
ss
or
pushf
inc
stc
cmp
add
sbb
cmp
sar
lret
jmp
ss
adc
adcb
or
adc
or
lahf
mov
mov
jle
mov
push
frstor
xlat
adc
jp
push
data16
inc
daa
gs
pop
pop
and
pop
in
mov
and
or
stc
fisttps
dec
or
mov
jno
fimull
bound
lret
test
xor
xlat
lods
mov
xor
hlt
inc
mov
jmp
or
dec
dec
mov
inc
sbb
das
inc
pop
lcall
fiadds
aam
cwtl
or
push
std
inc
lcall
inc
xor
pop
mov
dec
xor
and
dec
mov
sbb
xor
pushf
xchg
repz
arpl
dec
ljmp
into
push
repnz
dec
pop
push
aas
mov
loope
sbb
dec
push
popf
and
dec
cwtl
sub
in
lcall
mov
sub
cmc
mov
xor
in
lret
push
jae
dec
xchg
jbe
sti
mov
cld
mov
or
cmpsb
lahf
xchg
fstps
je
stc
sbb
xchg
jmp
testl
pop
pop
xchg
lret
aad
jl
xor
in
add
bound
fwait
lock
lock
or
pop
call
sub
rcll
add
xor
xorl
cld
inc
pop
pop
out
daa
mov
or
pusha
test
ja
jle
jge
xor
cmp
rclb
shlb
aas
ds
loope
add
sub
xorl
sub
scas
push
pop
pop
add
fcoml
pop
and
notl
cmp
mov
lahf
mov
mov
cmp
aad
lret
dec
xchg
arpl
mov
adc
je
shrb
in
push
lock
adc
and
pop
dec
xchg
pop
lods
pop
imul
sub
jmp
adc
and
xor
xchg
mov
popa
inc
mov
inc
adc
push
repz
out
movsb
ret
mov
into
mov
push
incl
inc
mov
rorl
ja
jp
aam
aam
dec
in
add
insb
cld
stos
jmp
jecxz
dec
aas
jo
cld
pop
push
iret
mov
int3
push
add
adc
jno
sub
loope
inc
push
int3
ret
lret
test
int
pop
aas
xor
xchg
xchg
fdivrl
pop
mov
push
fsubs
add
sub
cmp
inc
fcoml
int3
std
out
mov
sbb
sub
lcall
push
cmp
into
pop
scas
daa
dec
or
dec
out
cmc
loopne
mov
xor
and
push
out
fnstcw
les
movaps
and
fistpll
mov
imul
gs
aad
ret
pop
mov
outsl
inc
pop
mov
pop
ss
out
test
fnsave
gs
push
jg
pop
pop
xchg
cmp
cmp
sub
dec
pop
push
or
push
rolb
icebp
pop
mov
mov
iret
xchg
add
dec
or
imul
in
and
hlt
or
cld
lret
add
xor
out
push
outsb
lds
icebp
insl
icebp
lret
insb
jl
paddsw
cmp
cmp
int
pop
fmul
jg
bound
test
dec
sbb
mov
sub
xor
sub
es
jl
cmp
or
mov
sub
adc
jp
sub
mov
sub
mov
lock
inc
mov
popa
lcall
clc
mov
imul
arpl
cmp
mov
hlt
imul
push
aad
cmp
sbb
lret
pushf
jg
jp
mov
cmpsl
iret
movsb
add
stos
icebp
mov
fldl
sbb
sub
lea
adc
push
dec
push
insl
jbe
mov
mov
lock
adc
outsl
inc
xchg
xor
dec
sbb
aas
mov
loope
sti
mov
mov
push
rcr
enter
jo
mov
push
mov
cltd
lock
pop
fnsave
sbb
jbe
or
dec
lods
xchg
adc
add
fldt
lret
mov
and
popa
test
gs
sub
inc
fsubrl
loop
cwtl
in
clc
dec
and
popf
fidivrl
sbb
lcall
jecxz
adc
icebp
shl
subl
lret
sahf
in
test
test
test
mov
pop
mov
xor
icebp
or
add
push
mov
clc
stc
cld
jecxz
mov
iret
lods
pop
dec
push
jo
inc
test
xchg
clc
jmp
das
push
pushf
or
or
jmp
dec
lret
pop
push
sbb
push
jle
jnp
orb
jae
stos
mov
and
xchg
push
loope
adc
push
xchg
lods
add
adcl
mov
insb
out
xchg
aam
decb
push
add
jecxz
dec
adc
movsl
mov
cmpsb
push
or
outsb
sbb
insb
pop
sarb
lods
fwait
nop
aaa
jmp
mov
mov
test
lret
pop
and
shll
jmp
out
mov
ja
out
mov
jl
pushl
lcall
imul
add
adc
fsts
or
jnp
mov
or
add
add
mov
fmul
or
push
sub
jo
and
test
and
mov
repnz
daa
xor
aaa
enter
jne
mov
call
leave
test
aad
pop
icebp
pop
fcmovnu
dec
mov
out
leave
cmpb
div
push
das
into
add
jb
repnz
mov
lcall
dec
pop
and
pop
arpl
fsubl
out
mov
es
pop
add
stos
mov
jo
loopne
push
pop
stos
mov
and
inc
and
xlat
inc
sti
pop
into
mov
aas
shll
cmpsl
sarl
icebp
mov
fstl
dec
cmp
sbb
push
jmp
in
mov
clc
and
xchg
in
lret
loopne
xchg
rcrl
push
stc
cltd
pop
and
gs
pop
cs
or
sub
xchg
mov
cmpl
xor
faddp
hlt
sub
jmp
jle
loopne
lods
mov
lcall
xor
shrl
pop
push
push
adc
sub
xorl
imul
std
jb
cmp
in
add
scas
mov
fmull
lahf
cmp
out
inc
lock
mov
test
add
les
adc
add
je
fs
push
movsl
inc
mov
inc
movsb
push
xchg
test
add
les
adc
add
je
fs
push
movsl
inc
mov
inc
movsb
push
xchg
test
add
les
adc
add
je
fs
push
movsl
inc
mov
inc
movsb
push
xchg
test
add
les
mov
or
mov
out
iret
pop
cmp
lret
mov
dec
outsl
pop
jg
dec
jle
push
das
sbb
ds
pop
into
out
fdivrp
out
iret
fisttps
mov
pop
outsb
dec
jo
push
inc
cs
cs
ds
xlat
jge
push
addr16
xchg
xchg
xchg
push
mov
sbb
adc
sub
js
push
jb
imul
out
mov
sahf
xor
xchg
jns
enter
out
es
push
rcrl
mov
dec
cmovno
and
xchg
xchg
inc
arpl
sub
lret
dec
ja
xchg
daa
orb
push
cld
cs
rcll
aad
icebp
dec
cld
sbb
sbb
mov
rorb
psrad
cs
ds
das
into
out
daa
addr16
lahf
xlat
push
je
pusha
lds
andl
sahf
cli
push
pop
arpl
cli
jecxz
dec
lahf
dec
cmp
outsl
outsl
mov
rcrl
loopne,pn
das
ds
test
call
mov
mov
rcll
adc
dec
shrb
ds
pop
out
pmaxsw
aad
scas
mov
push
jmp
addr16
push
add
xor
jno,pt
mov
mov
std
shl
out
cli
dec
sub
cmp
inc
jnp
pop
dec
push
jle
stos
mov
cli
loop
sahf
mov
or
sub
aas
cmp
jg
jae
outsb
pop
je
mov
xchg
mov
scas
mov
jg
dec
jle
push
das
push
aas
cs
pop
into
out
fdivrp
out
iret
fisttps
mov
jg
dec
jle
push
das
push
aas
cs
pop
into
out
icebp
sub
repz
cld
pushf
lods
sarl
outsl
scas
push
pop
subb
cmc
cmc
dec
dec
das
data16
push
xor
iret
jno
cmp
inc
cwtl
push
xor
cmp
adc
in
in
and
cmp
sbb
fisttpl
nop
sbb
sbb
pop
stos
rclb
bound
push
cmpsb
pop
inc
or
out
scas
addb
loop
or
ficoml
push
aad
cmpsl
push
sbb
mov
inc
mov
xor
pusha
xchg
dec
icebp
es
lret
pop
xchg
mov
ds
cmp
mov
push
cld
sti
mov
and
or
inc
aam
add
jno
int
pop
sbb
jbe
repnz
push
add
loopne
fwait
or
aas
or
bound
pop
xchg
aad
loope
fsubr
jo
lret
mov
fs
stos
out
sub
sub
jne
push
in
movl
jnp
jo
pusha
lahf
push
ret
inc
mov
pop
mov
xor
adc
and
into
push
or
call
inc
cmp
lods
mov
rcrb
pop
out
lahf
jbe
push
hlt
mov
rcrb
mov
cs
ss
pop
sub
cmpsl
mov
mov
jno
lods
inc
push
hlt
shrb
mov
lret
mov
jmp
ja
pop
out
mov
leave
lret
and
fildl
mov
dec
rcr
mov
add
loopne
cmc
out
lods
mov
push
andl
push
push
mov
sub
pop
add
xlat
or
mov
mov
lea
sub
lods
push
bound
jne
outsl
aad
mov
push
xorl
mov
mov
mov
jg
ss
pop
sub
push
adc
xor
leave
cld
rorl
adc
ret
sub
cmc
cmp
inc
xor
daa
int
xor
pop
out
ja,pn
push
cli
sub
or
xchg
insl
loop
push
iret
push
or
fdivs
inc
dec
xchg
outsl
sti
test
inc
cmp
push
mov
jno
data16
aam
es
adc
bound
fidivrl
inc
iret
cmpsl
mov
pushl
or
shrw
out
outsl
xchg
or
dec
fidivl
push
jmp
lea
stos
leave
loopne
je
out
lret
cmp
faddl
pop
loopne
mov
jmp
mov
add
pop
test
push
incb
iret
clc
roll
shrb
lcall
or
or
test
bound
dec
es
mov
out
fwait
repnz
jb
clc
jne
repz
mov
jg
cmp
into
es
mov
push
aaa
lret
or
jp
testl
xchg
pop
inc
orb
into
xchg
push
pop
push
test
icebp
mov
mov
in
aad
xor
mov
stc
xchg
call
movsb
imul
pusha
out
loop
xor
loop
cli
mov
or
jnp
cmp
xchg
out
pop
and
ds
sbb
adc
adc
into
xchg
scas
dec
xor
jo
dec
dec
ret
cltd
dec
sub
pop
insb
xorl
loopne
fwait
sbb
scas
fistpll
fdivrs
ds
mov
adc
sahf
or
mov
in
dec
mov
cld
mov
fmull
fdivs
sbb
and
aad
sub
jmp
fnsave
push
daa
repz
bound
xchg
and
movsb
int
sti
jecxz
ret
sub
int
addb
pop
movsl
pop
and
test
into
pusha
int
inc
stos
jo
aaa
inc
mov
mov
sub
andl
aas
and
lahf
inc
mov
mov
movsl
nop
push
add
divl
pusha
fnstenv
daa
jmp
xchg
push
pop
adc
in
popa
iret
mov
aas
mov
loope
in
in
xchg
mov
sbb
and
or
fildl
sahf
add
xor
xorl
push
sub
fldenv
jge
dec
mov
lcall
jo
lahf
pop
ror
call
iret
in
inc
out
ja
push
cmpsl
aaa
sub
mov
dec
insb
decb
in
outsl
push
pusha
pop
les
pusha
mov
push
cld
test
pop
mov
mov
insl
cmc
lret
idivb
adc
dec
push
in
mov
lock
mov
xchg
into
xor
lahf
dec
pop
add
ds
mov
negb
jle
and
aam
sbb
decl
sbb
adc
mov
shlb
cmpsb
int3
icebp
jbe
imul
dec
shlb
push
sub
nop
mov
das
cmp
lods
mov
loop
dec
or
rcrl
or
jnp
sub
fdivp
cmp
int3
inc
test
loop
pusha
aad
shrl
xchg
das
xchg
arpl
outsl
popa
lods
mov
in
sub
lods
pop
xor
je
sub
cli
fisttps
sub
aas
std
icebp
movsb
push
pop
xchg
call
xlat
popa
and
pop
push
and
lret
mov
jae
mov
add
pop
addr16
pop
dec
pop
in
arpl
decb
popa
cltd
push
ljmp
imul
inc
mov
mov
mov
es
scas
mov
or
sub
dec
jmp
or
xor
lret
jnp
push
mov
xlat
add
aaa
lock
mov
call
pusha
push
push
mov
ljmp
xlat
sub
enter
lret
ret
pop
iret
inc
adcl
inc
mov
xchg
sbb
add
mov
imul
add
mov
adc
mov
mov
scas
insl
je
and
pop
movd
push
pop
ret
inc
cli
xor
push
movsb
stos
fbstp
cmp
mov
xchg
lods
sarl
pop
out
sub
clc
add
mov
pop
mov
dec
xor
imul
pop
push
lea
push
xchg
fsubrs
add
cltd
ja
iret
jno
mov
xchg
rorb
add
xchg
fsubr
mov
lods
rcl
inc
ret
bound
into
jmp
jmp
jo
inc
insb
dec
cmp
mov
jo
bound
hlt
mov
ljmp
call
jp
inc
lea
adc
cwtl
insl
jae
testl
or
pop
test
add
imul
lea
std
push
setb
add
in
push
push
cmpsl
inc
mov
jge
clc
insl
subb
pop
inc
add
sbbl
nop
xor
adc
push
sti
daa
and
setne
in
fstpl
mov
stos
sarl
testl
mov
push
mov
push
jns
xchg
mov
pop
sub
insb
es
mov
inc
arpl
in
and
daa
nop
sub
setnp
pop
xchg
je
pop
inc
add
jbe
sub
lcall
sub
cmp
mov
mov
cli
leave
xor
int
test
jbe
jae
xor
hlt
jl
pop
ss
xchg
jmp
mov
jmp
add
negb
pusha
and
js
sbb
sbb
jno
sub
cmpsb
pop
cmc
fstpl
push
dec
inc
divl
jle
mov
mov
inc
and
mov
mov
pop
test
jbe
sarb
aas
inc
idivb
mov
mov
adc
stc
ljmp
sarb
mov
xchg
ret
shlb
pop
in
xchg
pop
imul
sub
stos
sbb
push
and
popf
test
bound
lds
pop
mov
iret
out
xchg
mov
jl
sahf
mov
imul
cmp
push
scas
pop
orl
xor
imul
ficomps
cmp
inc
lret
mov
out
out
outsl
and
push
das
sahf
out
xor
pop
gs
adcb
scas
jns
mov
xor
test
sti
xchg
mov
dec
sbb
sbb
sbb
sarb
dec
and
mov
out
mov
add
ds
es
add
hlt
xchg
cmpsb
push
add
pop
push
or
std
xchg
lret
fdivrs
jle
cmp
push
jle
test
pop
ficomps
mov
inc
fisttps
add
mov
lods
ds
push
pusha
arpl
test
iret
xor
pop
insb
movsl
cmpsb
enter
ljmp
pop
pop
mov
daa
insb
jecxz
add
pop
jae
ljmp
std
jl
and
inc
sbb
mov
mov
mov
js
fs
push
xor
lods
mov
adc
jae
out
das
adc
sti
lret
pop
mov
in
xchg
dec
cld
ja
fsubs
push
cmp
fsubrs
jp
push
dec
stos
cli
mov
imul
xor
add
idiv
aaa
inc
mov
nop
shr
cmp
pop
xchg
add
xor
clc
popa
filds
cmp
daa
xchg
ds
loopne
lods
jecxz
xchg
add
call
out
fadd
pop
push
in
add
aad
sbbl
xor
ficoms
pop
fyl2x
aam
mov
insl
or
iretw
aas
mov
jge
add
jge
clc
xchg
cmp
out
scas
js
repnz
out
mov
fldt
iret
mov
stos
xchg
insb
dec
mov
in
shl
sbb
in
dec
sub
ret
cld
pop
jmp
lret
inc
xchg
add
ja
cwtl
sbb
rcll
push
lods
mov
mov
stc
dec
jnp
in
aad
lock
lods
dec
mov
cmpl
push
in
js
dec
in
pop
push
xchg
xor
mov
xor
xchg
pop
mov
mov
hlt
ret
jp
je
jno
call
dec
outsl
andl
out
arpl
jae
int3
shll
push
jnp
call
enter
jns
mov
jge
jmp
dec
into
lcall
movsb
inc
sub
or
push
xchg
jne
push
decl
mov
mov
mov
testl
mov
loopne
icebp
inc
daa
aaa
addr16
jmp
cs
mov
push
cmp
mov
or
push
out
mov
cld
mov
dec
adc
pop
xchg
jno
jle
repnz
iret
mov
mov
lds
rclb
mov
das
sub
lea
cmp
ja
scas
ss
and
fwait
xor
testl
cmpsl
xchg
sbb
popa
icebp
cli
rcrb
imul
les
stos
sbb
add
xor
test
push
cmc
inc
mov
pop
sub
fs
sbb
push
loope
addb
aas
jp
lcall
or
mov
inc
pusha
leave
mov
adc
mov
mov
imulb
dec
sbb
jnp
clc
adc
xchg
lcall
jno
mov
fcompl
inc
fwait
lcall
stos
insl
out
pop
stc
pop
lret
movsb
out
xor
in
leave
pop
mov
arpl
and
cmp
mov
cli
fcomp
add
loope
jl
in
jo
fadds
cli
push
cmp
xchg
xor
stos
jno
lods
sahf
out
and
stos
inc
mov
mov
or
into
dec
jp
sahf
je
in
jecxz
push
roll
pop
shll
inc
outsb
and
int3
pop
decl
fldt
sub
jae
push
ficoml
fs
sbb
push
inc
notb
icebp
or
test
nop
xchg
shrb
mov
int3
add
dec
push
mov
ljmp
fcoml
aad
enter
inc
and
dec
dec
and
inc
insb
mov
sbb
leave
push
or
adc
add
xor
fsubrl
push
lock
jecxz
clc
ja
pop
xchg
fbstp
pusha
mov
sub
roll
pop
push
pop
push
outsl
loop
mov
je
push
ret
xchg
adc
ret
mov
dec
and
insb
jmp
je
mov
add
dec
scas
flds
int
mov
stos
or
adc
adc
popf
dec
inc
sbb
data16
lcall
sub
add
dec
aad
xchg
scas
or
jbe
jo
cmc
sbb
and
push
sbb
mov
imul
push
daa
and
call
dec
ljmp
adc
add
jns
jl
fwait
jnp
cmp
decb
les
add
lahf
test
or
xor
xor
sub
xchg
pop
insb
xchg
out
icebp
jns
pop
insb
xor
idivb
sub
in
inc
adc
in
pop
shlb
inc
push
mov
into
pop
in
jecxz
or
jno
pop
add
scas
cmpsb
pop
add
js
cmpsb
jl
mov
stc
fimull
fistpll
testb
and
inc
pop
add
imul
ja
xchg
push
pusha
jnp
les
add
inc
dec
or
and
orb
lret
mov
mov
aas
ret
mov
movsl
ss
pop
xor
loop
sub
push
push
lcall
outsb
xchg
in
push
test
std
pusha
jp
sahf
enter
and
ljmp
xchg
xchg
mov
pop
pop
decb
adc
bound
mov
test
push
sbbl
mov
movsb
adc
int3
jno
mov
fwait
or
inc
mov
adc
push
sub
xor
js
insb
add
lea
mov
in
cmp
repnz
mov
cmpsl
adc
mov
in
movsb
xchg
int
mov
fidivl
mov
pop
jns
cmp
ljmp
sbb
inc
jne
mov
sbb
mov
or
cmpsl
notl
fbld
jae
cmp
jge
mov
push
imul
loopne
scas
ja
ret
frstor
enter
cmp
addl
jns
into
xchg
pop
imul
ss
outsb
decb
out
lret
xlat
cmp
imulb
ret
and
push
into
adc
rcrb
loope
cltd
out
stos
sbb
hlt
jge
les
pop
dec
cmc
in
out
xchg
cmp
inc
push
mov
hlt
dec
and
adc
mov
mov
jae
inc
push
sub
push
movsl
ss
ret
add
dec
dec
lods
arpl
pop
and
sahf
sbb
xor
add
push
mov
lock
test
test
leave
xchg
lods
inc
gs
icebp
popf
cwtl
cld
hlt
mov
push
nop
mov
mov
imul
jp
out
lcall
leave
sub
jno
mov
popf
subl
pop
lods
xorl
xor
faddp
jbe
jmp
add
and
pop
imul
dec
xchg
clc
fbstp
xchg
and
or
fcomi
shrb
jmp
mov
mov
loope
ljmp
test
mov
jnp
push
popf
int3
cli
dec
push
std
fidivs
jecxz
test
pop
jge
jae
xchg
sbb
mov
cmpsl
sbb
sbb
out
mov
dec
jp
loop
cmp
push
ret
inc
jbe
out
stos
mov
fcmovu
xchg
loope
mov
aad
int
inc
jmp
and
je
test
push
rcll
push
int
xchg
push
mov
repz
mov
fistps
movsl
and
jecxz
sbb
adc
xchg
cmp
and
es
stos
fcompl
inc
mov
in
and
nop
decl
sub
push
inc
adc
insb
aas
mov
sarb
jno
mov
mov
cmp
cmp
movsl
les
sbb
je
lcall
ret
mov
stos
pop
popa
push
mov
ja
mov
mov
lea
mov
cmc
daa
das
pop
mov
jmp
cmpl
neg
cmp
arpl
je
mov
mov
add
jne
pop
dec
mov
sbb
mov
shll
mov
mov
in
fimull
lea
mov
sbbb
xor
jg
lret
test
imul
gs
dec
add
cld
mov
xor
in
les
stos
mov
mov
pop
scas
rcrb
pop
std
pop
jae
or
jle
movl
and
fcoml
into
dec
popa
lret
dec
stos
loop
dec
test
es
mov
cltd
xchg
cmp
sti
inc
cli
lods
fs
fcoms
xchg
mov
loopne
sti
loope
dec
mov
lods
dec
dec
dec
sbb
pop
sti
mov
and
ljmp
mov
jp
lock
call
outsl
xchg
into
mov
stos
popa
jb
stos
inc
xchg
fdivr
mov
mov
push
frstor
into
ret
and
or
dec
mov
test
mov
jno
mov
mov
inc
mov
dec
aam
sub
sti
aad
sbb
subl
and
aaa
push
cmpsb
cmp
aas
pop
ret
or
and
or
dec
loopne
jmp
in
arpl
inc
inc
mov
mov
mov
cli
cmpb
getsec
and
pop
and
add
imul
pusha
pusha
sbb
ds
test
cli
jle
std
in
jb
sbb
cmp
jle
ljmp
std
push
lcall
xchg
adc
mov
jb
add
xor
outsl
cmp
lret
push
mov
repz
dec
mov
adc
or
hlt
ret
das
and
xor
iret
loop
inc
or
ficoml
mov
js
push
addl
mov
push
cmp
push
jecxz
cmpsb
adc
sbb
or
into
mov
das
outsl
cmpb
shl
sti
pop
dec
mov
clc
or
adc
cltd
sub
xor
sahf
adc
fldz
mov
or
lds
adc
xor
test
lds
loopne
adcb
mov
shrb
je
imul
notb
sarl
test
dec
ret
out
or
test
test
ficomps
daa
xlat
mov
inc
mov
and
pop
push
xchg
push
push
add
cmp
shll
push
rdmsr
repnz
mov
sbb
leave
mov
inc
or
test
imul
pop
sti
cmp
aad
je
inc
inc
push
cmp
nop
test
mov
adc
add
stc
pop
rcl
rcr
adc
lods
jbe
adc
xchg
xchg
mulb
rol
out
fwait
mov
hlt
mov
ja
jmp
jae
xchg
loopne
call
adc
mov
loop
icebp
idivl
sarl
test
dec
call
out
sbb
pop
cmp
filds
pushf
xor
sub
ljmp
and
xor
mov
xchg
ret
or
jno
dec
out
cld
lods
js,pn
jmp
and
arpl
cli
adcb
test
and
pop
mov
iret
xor
mov
xor
mov
call
aam
sbb
repz
repnz
jl
iret
cld
jae
cmp
mov
icebp
mov
dec
or
inc
jecxz
cmp
loope
xchg
mov
sbb
xor
popa
sbb
cmc
cmp
sub
std
fcomps
shrb
lahf
out
and
in
int3
jo
jnp
ret
jle
xor
sbb
xchg
sub
jmp
loop
sub
sbbl
xor
jb
cltd
mov
mov
mov
inc
data16
js
sub
es
lea
imul
adc
lock
xor
outsl
call
add
lock
mov
push
fs
sub
push
aad
call
or
xchg
sub
pop
cwtl
push
fisttps
cmp
fildl
mov
mov
mov
jbe
rorl
jmp
pop
adc
dec
mov
sub
or
lds
cmp
dec
hlt
popa
lret
push
mov
mov
pop
adc
mov
testl
out
mov
lahf
iret
ss
mov
cmpsl
sahf
xor
loopne
sbb
cmpsl
jo
xor
cli
mov
stos
or
mov
outsb
jg
jg
lods
loop
sar
mov
push
or
xchg
shrl
mov
cmpsb
mov
push
mov
fisttpl
movsl
imul
fidivrs
sbb
stc
shlb
adc
mov
aad
xchg
xchg
fdivrp
dec
imul
int
adc
popf
pop
inc
or
ficoms
adc
xchg
cmp
pop
sub
cmp
sbb
mov
pop
xchg
cwtl
in
je
int3
xlat
push
cs
aaa
nop
cld
and
xor
outsl
inc
loopne
lret
outsl
sbb
jmp
mov
sahf
mov
dec
outsl
pop
jg
dec
jle
push
das
push
aas
cs
pop
into
out
fdivrp
out
iret
fisttps
mov
jg
dec
jle
push
das
push
aas
cs
pop
into
out
fidivs
mov
mov
jg
dec
jle
push
das
pop
aas
cs
cmp
into
out
fdivr
out
iret
fimuls
ds
mov
mov
sub
xchg
rcl
shl
inc
in
aad
lds
loopne
mov
jbe
and
inc
or
adc
mov
lds
xchg
filds
das
push
aas
inc
sysexit
sbb
mov
cmc
cmpsb
in
aad
lds
xchg
movl
sysexit
ds
add
insb
dec
cmpl
bnd
push
push
mov
sbb
mov
mov
sbb
sub
cmp
je
adc
insl
inc
leave
mov
mov
cmp
push
add
inc
vprotb
jmp
test
fisubl
lret
mov
rorb
mov
ret
lahf
ret
fistps
int3
xchg
shlb
and
and
push
pusha
cmp
filds
into
je
insl
das
fcomps
pcmpgtw
movsl
loop
pop
add
dec
out
lahf
cmp
cs
xor
xchg
inc
xor
and
movsl
or
pop
shrl
sbb
mov
in
aad
lds
xchg
movb
push
push
inc
push
xor
pop
add
scas
xchg
sahf
orl
mov
mov
es
add
adc
pop
jne
add
scas
mov
test
sarb
add
imul
or
outsl
sub
mov
out
xchg
filds
das
push
pop
inc
sysexit
jg
outsl
adc
mov
lds
xchg
filds
das
push
pop
inc
sysexit
jg
outsl
adc
mov
mov
mov
arpl
daa
test
sub
sbb
adc
sub
loope
addl
lret
inc
jg
mov
or
xor
or
shrl
push
mov
lahf
pop
lock
jmp
dec
jno
ret
incl
adc
cmpsb
mov
imul
aad
mov
rorb
rcl
cmp
mov
and
pop
nop
and
sar
je
aam
sbb
out
xchg
inc
fnstenv
dec
hlt
leave
out
ljmp
push
jp
pop
mov
insl
lcall
push
cli
pop
inc
negb
inc
mov
pop
sar
push
and
push
in
lcall
dec
push
std
fstps
loopne
movsl
jmp
sub
adc
aam
push
push
arpl
adc
bnd
adc
mov
xchg
pusha
jp
sbb
jbe
clc
mov
push
addr16
cmp
jecxz
push
addb
fistpll
ja
add
xchg
dec
inc
push
jmp
js
aam
add
push
test
adc
or
sbb
inc
inc
mov
cmc
adc
mov
sub
hlt
xchg
xor
jb
testb
shrb
lret
sbbl
or
dec
pop
lods
cltd
mov
or
out
and
cmpsl
and
jmp
loop
inc
mov
outsb
push
int3
ja
and
xor
or
pandn
sti
shrd
xor
pop
nop
sbb
adc
mov
inc
sub
push
lods
iret
sbb
cmpb
fsts
std
ja
shrb
xor
movsb
and
jb,pn
into
sub
aam
in
xchg
push
shrl
adc
inc
jge
and
mov
push
jp
pop
ret
dec
out
xlat
sub
das
les
test
mov
mov
xchg
jle
or
mov
sub
mov
mov
aam
lods
dec
dec
pusha
mov
ficoml
xchg
xchg
push
jne
xchg
jo
mov
and
ds
data16
insl
call
adc
pop
sub
in
pusha
aas
fistps
ljmp
ret
mov
into
dec
jnp
leave
push
out
lahf
pushf
xchg
or
add
arpl
sub
test
cmp
int
push
jae
stc
push
pop
addb
out
adc
test
mov
mov
leave
sbbb
in
jb
insb
pop
subl
jno
dec
in
insl
jae
fstps
cmp
add
mov
out
xchg
test
mov
daa
sub
mov
adc
pop
mov
outsb
loope
xlat
jb
imul
xor
push
adc
adc
mov
mov
clc
fwait
jb
cltd
inc
inc
scas
add
lret
mov
pop
fst
xchg
inc
and
jb
pop
push
scas
xchg
mov
sti
pushf
and
jne
ja
jae
mov
cltd
jae
insl
leave
lds
push
xchg
adc
lret
js
es
es
add
movsl
mov
fcmovne
pop
cmp
scas
fcmovnu
xor
sar
sub
dec
pop
mov
cmp
fadd
cmp
les
loop
sbb
xchg
js
mov
dec
fbld
xchg
xor
sub
xor
test
mov
int
mov
mov
cmpb
sahf
cmp
push
mov
pop
hlt
cmpsl
adc
in
out
ror
test
shll
cmpb
dec
xor
out
mov
daa
icebp
mov
cwtl
mov
scas
fnclex
mov
or
negl
pop
in
cmpsl
test
push
shll
stos
xor
sub
nop
xor
mov
push
sbb
in
imul
and
sub
repnz
dec
mov
insb
push
sbb
test
add
push
aam
add
xor
push
mov
pop
imulb
lret
pop
or
push
cmp
push
xor
popf
sub
mov
pop
mov
jns
into
scas
mov
sub
sub
inc
pop
jns
test
add
xor
sbb
push
nop
mov
push
arpl
lods
cmp
or
bound
pop
clc
lahf
into
push
int
lock
les
fistl
stos
xchg
mov
dec
test
not
jae
arpl
iret
cwtl
dec
movsl
add
movsb
xlat
fldl
jmp
dec
mov
pop
mov
movsl
cs
mov
push
sbb
xchg
inc
xorl
mov
adc
lock
sbb
xchg
and
pop
scas
lret
lods
push
mov
mov
outsb
or
lock
cmpsl
xchg
aaa
jae
push
setne
jmp
fwait
mov
ret
fnstsw
mov
push
in
in
pop
jle
ja
int
cmp
and
fwait
dec
add
cmc
lret
add
movsb
push
cld
or
fimull
je
lahf
jae
rorl
jnp
das
and
and
stos
sbb
test
ret
dec
aam
or
jmp
mov
pop
in
add
mov
outsl
or
cli
cmp
xchg
adc
into
popl
adc
das
rcr
scas
stos
jg
std
sbb
inc
sbb
lcall
pop
cmp
mov
or
arpl
aad
aaa
and
mov
adc
pop
addr16
cli
bound
insb
in
rorl
or
popa
stos
xchg
cmpsb
repz
das
aad
push
push
loopne
popf
dec
mov
sub
mov
daa
shrb
pop
arpl
adc
or
xor
nop
int
mov
enter
leave
fwait
ret
pushf
adc
sbb
ret
in
in
out
sarl
and
ret
les
notb
jl
cld
add
hlt
mov
push
xor
mov
xor
jbe
cmpsb
jae
pop
sbb
mov
rclb
out
lds
lds
int
inc
pusha
and
xchg
mov
or
or
scas
xchg
loop
or
adc
sub
movl
mov
inc
bound
adc
loop
cmp
sbb
sbb
dec
mov
push
std
adc
add
mov
int3
loope
xchg
inc
or
imull
jno
cmpsl
jle
add
rclb
loop
add
es
dec
sbb
xor
xor
stos
insl
xor
push
sub
and
or
mov
gs
add
faddp
repz
insl
add
repnz
stc
stc
jne
mov
dec
aam
adc
daa
lret
and
xchg
sbb
fwait
stc
cmp
ss
test
sbb
sub
cmp
jmp
cmp
cld
inc
sbb
push
lret
in
dec
enter
and
jmp
out
pop
and
cmp
test
or
stos
test
push
cld
cld
jle
dec
cltd
repz
sub
incl
mov
repnz
sub
lods
and
mov
xlat
mov
xchg
pop
loopne
jecxz
dec
jbe
lret
sbb
push
mov
nop
pusha
fsubr
aas
mov
pop
sub
push
jae
lods
push
mov
in
or
shll
xorl
shrb
rcl
iret
jecxz
pop
mov
rcrb
sub
mov
pop
and
push
lods
out
push
aaa
movsl
hlt
cmpsl
push
notl
aam
xchg
dec
sbb
in
pop
mov
mov
push
cwtl
jge
jg
jbe
orb
adc
mov
pop
adc
les
arpl
daa
mov
lods
pop
mov
cld
push
pop
cmc
inc
inc
mov
roll
test
cmpb
or
arpl
push
call
shr
out
xchg
fwait
cmp
xchg
stos
mov
sbb
inc
insb
jo
inc
pop
add
mov
lock
adc
inc
pushf
js
std
dec
inc
loope
rcl
mov
icebp
push
xchg
loope
jle
push
loope
pop
outsb
popf
mov
mov
sbb
xor
push
call
and
or
mov
dec
push
mov
mov
repz
pop
and
mov
or
mov
scas
sbb
jne
aas
and
stos
nop
lcall
mov
cmpsl
add
fisubl
mov
dec
es
in
mov
jp
mov
mov
mov
cmp
mov
xchg
push
les
push
aam
xor
jp
dec
sbbb
push
aam
dec
sbb
lock
data16
mov
xchg
mov
fs
pop
std
inc
mov
jb
cli
out
pop
fnsave
push
xor
inc
push
sarl
mov
or
sbb
jl
adc
cmpsb
jp
es
adc
lcall
push
pop
sub
ds
ds
sub
jno
pop
pushf
and
hlt
inc
jno
and
sub
pop
nop
enter
int3
push
and
push
cli
lea
test
cmpsl
out
and
aad
xchg
mov
aaa
mov
mov
adc
mov
xchg
jge,pn
andl
and
out
iret
sahf
mov
inc
loopne
aad
pop
icebp
imul
stc
pop
rol
inc
add
xchg
push
push
mov
shlb
gs
call
lret
insl
xchg
add
test
orb
push
jl
and
mov
mov
mov
sbb
loopne
push
sub
mov
mov
outsb
push
add
movsl
sub
dec
lahf
out
inc
sub
mov
sub
mov
lds
xor
nop
xor
xor
mov
pop
pop
aaa
lcall
or
add
in
mov
stos
add
shll
mov
xchg
addr16
decb
mov
sub
fdivp
lcall
shrl
fwait
stos
fdiv
dec
in
mov
std
cmp
pop
sahf
jns
fsubl
jecxz
nop
insb
ja
jl
jb
adc
mov
movsb
mov
mov
pusha
popf
mov
cmp
xor
int
idivl
xlat
lds
mov
mov
dec
subl
inc
mov
mov
insl
inc
movsl
test
ret
cwtl
fistpll
pop
and
daa
sahf
gs
cmp
pop
cmp
push
ds
int3
data16
clc
fimull
pop
push
enter
sbb
lods
fbld
push
into
sbb
push
pop
inc
mov
ds
adc
inc
xchg
popa
and
sub
in
jmp
lds
movb
sarl
sbb
xchg
and
cmp
stos
and
mov
loopne
je
iret
cmc
dec
xor
notb
decl
repz
es
insb
enter
icebp
or
or
das
xchg
inc
repnz
push
push
dec
jp
mov
cmp
nop
fldcw
sub
mov
xchg
pop
fisttpl
dec
mov
inc
xor
xchg
sar
mov
shlb
inc
pop
mov
dec
ret
cmpsl
sub
add
hlt
cmp
clc
loope
mov
pop
cmc
arpl
xchg
mov
inc
ds
adc
jmp
je
cmp
out
mov
cmp
add
sub
cli
mov
out
xor
jl
pop
inc
add
cmp
dec
stos
inc
insl
in
cmp
xor
test
je
sbb
push
out
repz
sbb
es
jl
push
orb
fsubl
mov
adc
lcall
jno
jg
iret
ret
mov
xor
xor
or
mov
dec
fmull
add
lock
jg
push
and
sub
mov
nop
insl
sti
lea
fmul
pop
fildl
test
xchg
jle
xor
jb
jo
fadd
movsb
sbb
or
pop
stc
add
inc
sub
mov
call
xor
scas
xchg
ds
fisttpll
imul
es
dec
xchg
loop
sbb
jle
inc
scas
pushf
adc
mov
or
mov
movsb
out
iret
sti
scas
fcmovb
jne
arpl
outsl
cmpxchg
sbb
nop
sti
xchg
pushf
aad
or
jmp
mov
inc
xchg
dec
rcl
mov
cs
lret
nop
mov
xchg
add
cmp
jp
dec
sub
movsl
jbe
push
bswap
fmull
xor
jb
pop
pop
sbb
enter
into
cmp
and
ja
pop
push
dec
adc
sbb
out
push
rcrb
pop
dec
push
fcmovu
xchg
data16
pop
pop
pop
jmp
pushf
jns
mov
xchg
das
push
test
jbe
loope
jbe
mov
aas
fbld
ss
pop
inc
test
ret
mov
inc
adc
je
jne
push
push
punpcklwd
xor
insb
and
mov
dec
pop
aad
mov
inc
daa
push
loopne
aas
sub
inc
fisubrl
movsb
or
dec
and
adc
inc
fisubs
fistps
or
mov
sti
mov
xchg
pushf
cmp
leave
fldcw
jbe
push
or
mov
mov
xchg
out
push
push
sbb
xchg
test
je
mov
imul
pop
dec
test
sbb
push
aas
sbb
mov
test
mov
test
filds
cmpsb
and
notb
and
aad
shll
jne
mov
cmp
sbb
iret
clc
push
push
insb
rorl
nop
into
dec
mov
adc
xor
or
lea
push
push
aas
adc
or
fadds
mov
sub
data16
add
outsl
cmp
call
mov
cmp
lea
gs
aas
mov
daa
loop
hlt
int
scas
push
push
push
je
adc
aas
and
jmp
jmp
mov
lock
pop
cmp
push
aad
clc
or
add
cmp
fsubrl
popf
mov
lahf
cli
ja
daa
sub
mov
xchg
es
inc
jmp
mov
cli
fdivp
mov
pop
pop
mov
or
xor
mov
mov
mov
iret
test
cmpsb
xchg
pop
clc
cmp
or
sbb
dec
ret
das
mov
shll
inc
fsubrp
bound
ds
rcr
popf
cmpsl
pop
mov
repz
int
adc
out
das
sub
mov
mov
mov
adc
popa
cmpsl
repz
das
adc
xlat
psubusw
jnp
dec
ljmp
ljmp
fs
in
push
mov
js
gs
xchg
sub
xchg
sbb
rolb
jmp
sbb
fsts
loopne
data16
outsl
cli
jns
js
out
mov
call
movsl
mov
fwait
mov
mov
outsb
les
adc
lods
lods
push
adc
lods
subb
icebp
push
mov
mov
push
es
mov
pop
pop
in
dec
pop
jae
sub
sbb
push
addr16
int
xchg
pop
das
ljmp
xchg
ljmp
cmp
sti
loopne
cmc
imul
jle
xlat
arpl
jecxz
incl
cli
jecxz
popa
ja
dec
cmp
xchg
shrb
lods
xchg
vmovdqa
cmp
pop
roll
xchg
cmpsb
in
int
lret
or
or
in
push
adc
stos
stos
iret
gs
out
cld
sbb
inc
and
cld
lods
jns
insl
jo
dec
mov
ja
outsb
push
adc
or
push
or
or
sbbb
cli
dec
test
push
dec
cli
bound
sbb
jg
dec
lock
inc
pop
push
add
push
fisttps
and
sbb
mov
mov
pop
or
or
das
or
movsl
lret
mov
pop
rcrl
mov
dec
clc
out
ljmp
add
inc
or
xchg
cs
icebp
mov
out
sti
sub
or
xlat
stc
add
xchg
dec
fstps
outsb
fildll
mov
lds
fsubrp
ja
cmp
aas
xor
data16
push
adc
inc
testb
repz
test
lods
and
sub
xchg
mov
mov
ret
lret
mov
dec
icebp
add
sub
in
sub
fstp
mov
clc
mov
out
in
es
loop
das
jp
jp
dec
test
test
lea
push
jb
pop
pop
add
xlat
fidivrs
jg
xor
push
mov
icebp
sar
insl
cld
mov
inc
add
stc
and
mov
push
sub
sub
pop
jmp
mov
and
insl
sti
out
inc
dec
sbb
pop
popf
dec
hlt
sub
ljmp
nop
inc
arpl
pop
push
repnz
push
int
out
mov
and
in
imul
mov
pushf
add
xlat
aad
ret
xor
rcrb
sar
or
cmp
loopne
add
out
loop
cs
fwait
fs
pop
rorl
xor
mov
shrl
dec
push
loopne
fldenv
xchg
sub
lcall
cld
mov
sahf
xchg
push
sbb
mov
xchg
lahf
cmp
scas
sbb
in
mov
loop
dec
xchg
mov
sub
dec
fcmovb
mov
xchg
ds
repnz
mov
mov
push
pop
gs
bound
push
ret
and
movsb
sbb
pop
mov
popa
clc
push
inc
shlb
xor
nop
cmpsl
stos
lret
lret
popf
fnstsw
mov
iret
in
sub
aam
lock
mov
mov
adc
rclb
jnp
cmp
add
loope
movsb
add
xor
shr
push
outsl
scas
xchg
out
les
mov
lock
push
pop
scas
mov
dec
cmp
cmp
shlb
lds
cmp
and
pop
sub
sub
mov
mov
int
sahf
aad
cmpsb
dec
fcoml
ljmp
lahf
dec
push
pop
repnz
xor
mov
lods
or
vunpcklpd
adc
inc
jge
aad
mov
jbe
jbe
cltd
jns
jb
mov
add
nop
or
or
cs
test
out
icebp
cmpl
push
jnp
loop
xchg
repz
divl
pusha
pop
dec
and
sub
ficoml
adc
fwait
pop
xor
xchg
shll
mov
dec
pop
jb
data16
ror
into
out
mov
cmp
push
imull
fsubs
lahf
pop
mov
data16
scas
or
jb
push
or
dec
hlt
clc
jbe
jbe
adc
add
xor
pop
lret
and
fcoms
jne
rcll
add
sbb
fwait
jmp
lock
daa
add
adc
xchg
adc
inc
fsubrs
test
scas
inc
pop
imul
rcr
add
push
mov
mov
jno
mov
rclb
and
and
mov
js
add
call
pop
mov
jmp
aas
pop
push
add
ss
fildll
adc
ret
insl
cmpsb
fidivl
adc
insb
mov
sbb
mov
out
int3
bound
ret
mov
xor
dec
jbe
lcall
add
dec
cmp
mov
aad
xor
sub
iret
add
mov
mov
xchg
and
and
jmp
push
xor
push
es
sar
rcl
nop
push
fs
jmp
jns
icebp
push
test
jmp
pop
mov
int
pop
sub
or
cmp
into
int3
dec
fisubrl
cmpsb
xchg
adc
daa
cwtl
pop
stos
sarl
out
sbb
daa
jmp
or
and
inc
sbb
cmpsb
in
lods
lea
nop
xchg
lahf
fidivrl
test
xor
and
dec
mov
sbb
pop
and
jae
hlt
sub
sbb
loopne
and
pusha
dec
int
cmp
add
jae
sbbb
push
xor
jae
test
daa
es
xor
scas
inc
sarl
fdivrs
cmp
rcll
dec
into
push
call
mov
mov
ss
jmp
mov
or
or
mov
lds
or
xor
adc
imul
xlat
out
sarb
cmp
subl
insb
jne
test
mov
cmp
mov
push
fs
sub
sbbl
push
or
cwtl
jbe
cmpsb
jno
inc
call
fstpl
aas
std
popf
es
pop
and
inc
loop
cmc
jmp
xchg
mov
or
stos
insl
idivl
pop
leave
xchg
jge
pop
pop
or
fs
ljmp
loope
aaa
mov
out
cmp
sarl
icebp
ret
movsb
sub
and
in
lods
jecxz
xchg
xchg
mov
inc
push
cmpsb
push
jge
push
jmp
adc
sub
xchg
scas
adc
cld
push
add
or
push
sub
mov
fisubrs
xor
mov
es
js
mov
imul
lds
xchg
filds
das
push
pop
inc
sysexit
jg
outsl
adc
mov
lds
xchg
filds
das
push
pop
inc
sysexit
jg
outsl
adc
mov
lds
xchg
filds
das
push
pop
inc
push
xor
pop
add
scas
aad
lds
adc
aas
lcall
imull
mov
shll
loope
cmp
cmp
push
add
jno
add
inc
and
shr
loope
icebp
loope
icebp
xchg
shll
xor
adc
add
inc
arpl
sbb
inc
rcll
loope
icebp
incl
shll
imul
or
mov
inc
icebp
jb
jnp
mov
filds
pop
pop
xor
hlt
and
jno
inc
sub
dec
xchg
dec
push
add
jno
dec
cmpsl
pop
icebp
xlat
test
in
cld
sahf
je
std
inc
jno
pusha
pop
cltd
hlt
ret
hlt
push
xchg
leave
loope
pop
ja
xor
jno
xor
mov
insl
mov
fs
icebp
xchg
ds
lcall
sahf
imul
ficoms
pop
and
sbb
mov
xor
mov
push
mov
adc
mov
push
sub
addb
sbb
aam
push
adc
jo
adc
inc
xor
out
and
mov
out
stos
push
ja
and
add
jae
push
pop
enter
cmc
mov
cwtl
mov
lahf
xchg
mov
shl
and
and
adc
bound
and
in
rcl
repz
orl
test
add
imul
sub
int
fldl
mov
icebp
xchg
shll
push
add
jno
add
inc
and
mov
loope
icebp
loope
icebp
xchg
shll
push
add
jno
add
inc
and
mov
push
push
mov
dec
sbb
dec
mov
cmp
push
testl
cmp
mov
jne
flds
out
cmp
sub
repnz
in
int3
test
enter
es
pop
cmp
xlat
inc
in
xchg
out
inc
pop
adc
cmc
mov
jno
fsts
sarb
push
add
pop
cwtl
pop
jp
pop
push
sahf
or
inc
pop
mov
fisubl
and
imull
cmp
fsubs
fiaddl
scas
and
out
push
cld
jae
wrmsr
mov
fs
push
cltd
mov
mov
or
loopne
add
jae
cmpsb
int3
jb
scas
xchg
xchg
jo
xchg
mov
dec
cs
or
add
xor
cmpsb
call
daa
fisttpl
popf
negl
push
lret
roll
test
pop
cmp
andb
aaa
rcrl
jno
fcomi
std
arpl
push
pop
mov
out
push
sbb
pop
leave
test
test
sub
push
int3
test
cmpl
lahf
sbb
dec
and
movd
and
lcall
add
dec
xchg
dec
mov
adc
mov
inc
sti
lock
jp
jge
lea
or
mov
pop
rcrb
cmp
mov
pop
sub
pop
int
pushf
cmp
loopne
call
dec
pop
jle
dec
mov
lods
dec
mov
adc
in
ret
pop
int3
pop
in
sbb
push
cli
push
stos
pop
add
cmp
fildll
or
lods
mov
or
orb
out
pop
notb
scas
xor
jp
mov
mov
repz
rcr
dec
or
xor
jo,pn
dec
into
sub
jecxz
popf
xchg
cmpsl
push
dec
mov
test
cmpsb
and
adc
mov
insb
cli
pop
and
and
push
sbb
pop
or
mov
xchg
xchg
pop
loopne
mov
aaa
sub
add
data16
add
sub
nop
inc
jl
adc
les
cmp
xor
lea
ret
insb
int
test
das
sub
popa
scas
test
xchg
data16
mov
dec
cwtl
fs
ja
fldl
push
mov
pop
iret
and
fsubrl
repz
dec
inc
mov
inc
xchg
xlat
mov
jecxz
xor
in
cli
cltd
adc
dec
jb
mov
mov
sbb
add
mov
lods
lods
or
push
ljmp
pop
xchg
in
fnstcw
mov
je
ljmp
movsl
inc
add
jbe
pop
sti
jmp
and
or
pop
in
push
cs
cmp
lcall
xchg
or
loop
daa
in
test
or
push
mov
lods
mov
sub
inc
mov
jl
imul
push
mov
dec
mov
lods
mov
mov
sti
iret
stc
loopne
adc
add
dec
into
sarb
xor
jle
outsl
andl
pop
inc
or
lret
fbld
cmp
mov
xor
mov
dec
add
inc
mov
dec
or
or
mov
adc
jno
add
sbb
sub
mov
ds
stc
push
sub
jmp
outsb
dec
inc
mov
push
mov
adc
cmp
mov
sub
ljmp
jnp
imul
pop
je
imul
pop
mov
clc
mov
in
mov
loope
int
out
lock
xchg
mov
sub
repnz
daa
sbbb
xor
jo
aad
shlb
fsubrl
into
ja
scas
std
mov
dec
les
add
es
adc
notb
push
enter
pop
cmp
pop
sar
mov
test
sub
andl
js
pop
mov
ret
lret
popf
xor
jns
pop
pusha
fildll
addr16
daa
dec
pop
fcoml
pop
push
test
out
mov
jge
inc
arpl
or
jecxz
insl
lret
repz
fucomp
aam
sbb
stos
pushf
adcl
scas
push
arpl
xchg
xchg
mov
ja
xchg
push
pusha
imul
pop
rcrl
xchg
adc
push
adc
push
dec
es
cmp
aaa
sub
inc
imul
lea
or
mov
push
jp
sbb
ljmp
inc
dec
sbb
cmp
aaa
in
sub
or
sbb
in
lea
lret
xchg
add
dec
inc
out
dec
or
mov
sti
rdmsr
cmpsb
cmp
cmpsb
sarb
sub
test
xchg
ss
mov
mov
sbb
notb
adc
mov
adc
packuswb
sub
fisubl
jle
xor
and
sub
add
test
sbb
push
clc
or
sub
push
mov
sub
jmp
lahf
mov
sub
fsubrp
jmp
mov
pushf
mov
das
stc
inc
xor
arpl
xor
pushf
into
in
inc
mov
rclb
or
and
xor
xlat
pop
sbb
xchg
lcall
sbb
push
out
ds
lods
jl
dec
test
push
pop
pop
js
mov
mov
sti
cmc
pop
sub
in
ss
daa
and
xchg
xchg
sub
jne
loop
jp
hlt
adc
cmp
mov
subb
sbb
cmp
push
pusha
fiaddl
cld
cmp
pop
pop
outsl
and
inc
pop
popf
jb
xchg
aaa
push
xlat
cs
pop
call
fnstsw
push
out
hlt
stc
imul
scas
sbb
push
and
jmp
lods
aaa
bound
lock
jmp
xchg
add
cmp
mov
push
sub
fwait
mov
jns
scas
jnp
mov
fisttpl
leave
out
mov
pop
mov
add
jl
inc
fwait
pushf
scas
pop
lea
enter
add
ror
jnp
mov
xchg
push
ficoms
pop
sti
sbb
lods
sbb
inc
movsb
push
xchg
scas
push
int
std
stos
repnz
pop
pop
cmp
jbe
sbb
dec
pop
push
push
push
fdivl
clc
in
jle
sbb
addr16
push
mov
leave
test
dec
loope
cmp
ljmp
outsl
pop
mov
sub
or
fwait
test
idivb
inc
insb
push
dec
js
mov
rclb
jp
ds
js
les
lret
add
or
in
or
sub
sbb
push
xorb
pop
icebp
dec
sahf
movb
pmuludq
nop
push
sbb
rcl
sub
mov
inc
pushl
cltd
push
push
push
inc
movsb
test
mov
adc
jg
jns
ror
iret
test
dec
pop
cmp
lods
jecxz
add
jle
ds
xor
subb
sub
jle
shll
stos
clc
outsb
jnp
mov
lret
sub
mov
or
ss
inc
jbe
arpl
clc
faddp
rclb
inc
sub
roll
imul
mov
mov
sbb
or
addb
sbbb
xor
ss
fstl
or
mov
pop
shrb
cltd
mov
out
jp
mov
inc
mov
sbb
out
inc
mov
in
add
lcall
rclb
call
push
subl
push
adc
sub
dec
xchg
cld
data16
stos
xchg
mov
mov
movsb
pop
push
push
xchg
inc
lahf
outsb
xchg
ret
mov
jae
and
outsl
xor
xor
lock
lret
daa
gs
add
or
aad
enter
xchg
inc
test
into
das
enter
outsb
adc
aas
out
outsb
pusha
mov
sahf
cmpsb
bound
mov
pop
btr
xorb
jge
cmp
xchg
loope
mov
arpl
mov
push
mov
movsl
lds
cmp
int3
ss
cwtl
dec
ret
adcl
in
mov
dec
inc
inc
cltd
gs
sbb
in
inc
push
jns
outsl
sub
andb
mov
pop
int
fisubrl
fbld
mov
mov
jl
sub
jg
inc
rcrl
fwait
mov
add
iret
adc
pusha
shll
dec
mov
popf
ror
inc
mov
mov
ret
xchg
xchg
jle
push
xor
push
dec
cltd
rcr
jmp
xor
xor
xchg
out
cwtl
stos
or
mov
lods
jl
test
or
xor
inc
mov
loope
jb
out
pop
sub
jae
and
pusha
out
cmp
push
sub
mov
repz
mov
aad
test
call
jns
sahf
rorl
push
jmp
cmp
push
mov
mov
cmpsb
scas
jb
xor
lds
icebp
push
or
or
mov
or
adcl
iret
sub
repz
repz
rcll
xchg
cmpsb
push
sbb
and
test
and
pop
data16
dec
leave
jp
xor
xchg
lret
lret
cmp
push
push
rcrl
mov
std
add
cwtl
notl
pop
nop
loopne
fdivl
inc
add
push
dec
inc
inc
inc
xor
pop
xchg
mov
adc
adcb
and
xor
nop
test
inc
pop
shll
push
arpl
pop
lahf
inc
roll
dec
dec
sub
inc
in
push
inc
arpl
lret
call
add
cmpsl
xchg
xchg
mov
adc
adc
loope
and
iret
nop
cs
adc
cmpsl
and
std
call
mov
mov
arpl
lds
inc
pushl
cs
pushf
cmpsl
das
xchg
jge
loope
cltd
mov
push
stc
fwait
jp
dec
add
or
divb
cmc
shll
cli
sub
iret
add
inc
int3
idivb
cmp
adc
or
jo
out
sub
lds
jmp
push
lods
aad
test
sbb
cmp
imul
and
cs
int3
divl
xor
sbb
aas
dec
adc
dec
imul
ret
loopne
faddl
addr16
xor
pushf
mov
imul
pop
lcall
or
lahf
xchg
je
mov
xchg
sbb
test
jne
inc
push
fsincos
jl
inc
into
or
adc
in
sti
out
ret
insl
pop
mov
fwait
cmpsl
fdivs
fcomps
pushf
inc
add
sti
and
into
mov
dec
pop
cld
xor
xchg
sub
nop
cld
repz
test
push
out
int
add
loopne
outsl
scas
dec
jb
jne
mov
out
push
push
mov
lea
xchg
shlb
fadds
outsl
sub
mov
mov
sub
xlat
mov
lods
jae
xor
dec
fstpl
and
push
inc
push
pop
xchg
out
lahf
int
imul
cld
gs
fmull
pop
cld
add
movsb
daa
push
mov
fwait
repnz
movsb
and
sarl
pop
jle
bound
adc
outsl
pop
mov
mov
repz
sub
repz
lret
add
push
movsl
inc
sbb
inc
mov
imul
and
out
add
push
adc
loop
int
lret
pop
xchg
inc
cltd
leave
aad
jnp
out
and
mov
ds
and
into
cmp
movsb
adcl
mov
and
cmpsb
pop
dec
push
sbbl
shl
mov
xchg
fistl
xchg
dec
maskmovq
and
mov
test
cld
mov
arpl
sti
jge
sub
icebp
scas
sbb
push
xor
testb
cli
pusha
ds
ljmp
in
sbb
aaa
mov
lcall
int3
mov
in
dec
lea
inc
xor
lds
mov
and
jb
lcall
or
push
mov
pop
je
cmp
inc
jp
mov
scas
add
mov
bound
dec
xchg
insl
fsubr
insb
push
pusha
cmp
orb
adc
pop
inc
or
xchg
ljmp
push
and
cmp
test
cmp
cwtl
mov
cld
mov
pop
test
pushf
xchg
and
jecxz
xor
cmpsl
mov
sub
mov
mov
imul
outsl
dec
outsb
cmpb
mov
or
cltd
mov
adcl
ficoms
stos
sahf
movsb
lcall
lock
inc
jp
sub
mov
lret
and
sbb
add
out
mov
sbb
cmp
mov
jl
push
loop
jle
popa
jne
mov
or
lret
cmp
mov
mov
outsl
iret
fcmovnb
push
setge
dec
mov
sub
xchg
adc
out
fsubrl
or
mov
in
pop
bound
jae
ret
popf
adc
cmp
ja
pop
bound
outsl
aas
cli
rcrl
and
aad
sahf
xchg
jns
push
mov
mov
sub
xor
xor
inc
bound
lds
clc
xchg
and
aad
or
and
test
xor
and
cmp
mov
arpl
jbe
in
mov
cli
inc
mov
stos
in
and
sbb
lock
sub
mov
mov
xchg
xor
dec
push
out
cld
sbb
roll
push
push
outsb
mov
jle
lcall
and
repz
xlat
pop
sub
lods
push
jbe
mov
cld
cwtl
cmp
loope
pushf
fs
test
mov
sbbl
loop
jecxz
jnp
xchg
movsl
mov
jae
test
and
mov
out
loopne
or
int3
sub
push
sub
sti
mov
lcall
lods
test
popa
push
xor
sub
call
jnp
out
aam
call
sbb
mov
gs
xchg
rcrl
fcomps
mov
popa
jae
testl
ljmp
adc
and
and
mov
pop
or
int
lcall
or
sbb
xor
lock
fnstsw
mov
dec
ljmp
aaa
out
xchg
lahf
pop
shl
fiaddl
sub
and
mov
adc
inc
dec
loope
jg
mov
xor
aaa
or
call
adc
insb
sarb
jmp
loope
scas
add
insb
bound
cmp
mov
and
stos
in
sbb
mov
ret
add
mov
not
mov
cmp
fcmove
and
ficoms
clc
lds
stos
clc
cltd
add
mov
test
clc
insl
adc
jg
or
ljmp
xor
jo
mov
cmp
call
cmpsl
jp
les
xor
cmp
inc
jb
push
mov
enter
mov
test
jecxz
push
enter
xor
out
fbstp
pop
pop
add
or
aaa
inc
inc
sbb
lahf
jns
mov
dec
iret
lock
dec
xchg
pop
cltd
mov
jecxz
cwtl
inc
dec
cld
mov
mov
pop
imul
mov
lret
sub
mov
stos
pop
cmp
lret
mov
cmp
lds
xor
lret
jns
pop
flds
das
mov
xchg
inc
mov
lock
pusha
xchg
adc
cmc
or
loope
das
mov
xor
sub
data16
xor
call
xchg
int
test
jb
push
inc
enter
int3
out
jle
jb
fstp
mov
mov
inc
push
in
xchg
sbbl
xor
or
dec
fnstsw
cmp
mov
inc
out
in
cmp
sub
adc
jno
dec
add
jge
imul
mov
sbb
fistpl
out
xchg
ror
int3
jno
sar
jb
pop
cmp
mov
or
outsl
xor
aaa
nop
out
xor
pop
sub
aam
xchg
dec
sarb
and
mov
mov
mov
push
mov
int3
cmp
popa
pop
xor
jge
imul
out
cmp
ret
dec
jl
dec
sub
push
inc
in
in
das
lods
xor
les
jmp
adc
repz
mov
int3
sahf
nop
lods
sub
or
xlat
lcall
imul
bound
in
fldlg2
andb
stc
faddp
js
push
jle
lock
sarb
mov
push
rcrl
mov
insb
test
aas
sahf
int
mov
inc
punpcklbw
sbb
sub
push
sub
out
test
xchg
movsl
jns
mov
sub
jecxz
shll
dec
xor
xor
gs
enter
cmpsl
data16
out
mov
pop
dec
arpl
add
or
inc
inc
dec
addr16
or
lret
inc
adc
movsl
ret
inc
cmp
cmp
imul
cmp
jmp
xchg
or
sbb
rcr
arpl
mov
lcall
dec
jo
stc
test
sbb
fs
mov
push
in
fimull
xchg
inc
jo
cmpsb
push
fwait
dec
lods
movsb
insb
pop
xchg
jp
cwtl
mov
mov
mov
or
test
lods
filds
sub
pushf
mov
movsl
mov
xchg
xor
xchg
adc
xor
cmp
mov
mov
lock
addr16
adc
mov
cmp
rcrb
repnz
jne
fstpl
add
arpl
fs
and
mov
enter
hlt
imul
mov
xchg
lods
jb
fisttpl
iret
and
add
xor
les
fninit
scas
popa
and
test
fcmovbe
int3
xchg
loope
xchg
pop
cmp
push
arpl
cmp
dec
xchg
dec
popa
and
inc
in
xor
cmp
mov
mov
mov
mov
jle
insb
or
inc
cmpsl
les
sahf
jbe
sbb
xor
loope
push
sbb
fcomps
lea
sbb
push
loope
ja
add
add
bound
adc
pop
sbb
stos
icebp
mov
mov
stos
sti
cmp
pop
mov
mov
stos
cmp
nop
daa
or
mov
cwtl
dec
pop
inc
mov
inc
inc
lock
orb
inc
mov
xor
mov
mov
sbb
in
lock
mov
iret
in
cs
sub
xchg
add
mov
jp
imull
mov
mov
push
int
shl
fdivr
and
cs
loopne
call
sti
push
jo
loope
xlat
push
dec
into
ret
add
cld
or
jae
add
mov
jg
std
sub
fmull
xchg
jecxz
or
fisttpll
dec
push
in
movsb
xchg
pop
and
sbb
mov
bound
nop
mov
repz
test
nop
insb
filds
imul
in
mov
xchg
scas
lea
iret
ret
adc
test
jg
mov
aas
xor
ss
mov
stos
popa
lret
inc
in
pop
xor
jg
outsl
rcrb
mov
popaw
mov
and
aad
fwait
es
or
fcomi
push
std
test
xchg
pop
push
and
pusha
ss
cmpsl
jmp
cmp
mov
inc
sahf
ljmp
inc
mov
sbb
stos
cmp
jbe
pop
mov
imul
lahf
incb
fstpt
outsb
rcll
pop
xchg
nop
add
jmp
sub
mov
aad
in
arpl
aaa
push
hlt
inc
dec
fimull
js
loop
xor
and
aad
fldcw
inc
popf
or
dec
ljmp
rorl
mov
sub
mov
mov
call
mov
subb
repnz
sti
pop
scas
pusha
gs
lret
rolb
xlat
adc
not
jns
test
sbb
inc
sbb
aam
ret
inc
stc
popa
and
hlt
pop
jns
out
shr
adc
dec
xchg
addr16
push
shrb
sbb
cwtl
jge
inc
lds
in
scas
and
pop
ret
or
xchg
jbe
mov
jbe
call
ljmp
popa
in
aam
mov
push
lock
nop
leave
lods
data16
data16
test
sar
fwait
inc
lea
jne
jp
push
in
dec
jns
sti
inc
enter
dec
push
xor
pop
imul
fs
dec
cmpsb
jge
popf
sarb
and
push
sub
mov
inc
cmp
add
xor
sub
cmp
insb
pop
cmp
push
cmp
sbb
push
fbstp
push
and
jg
in
cmpsl
push
mov
pop
test
call
stc
loop
in
scas
or
mov
arpl
mov
std
adc
dec
xchg
add
ljmp
clc
hlt
jbe
mov
imul
push
mov
mov
insb
mov
mov
rol
loope
icebp
loope
icebp
xchg
shll
push
add
jno
add
inc
and
mov
loope
icebp
loope
icebp
xchg
shll
push
add
jno
add
inc
and
mov
popa
xchg
icebp
jno
icebp
adc
mov
xor
popa
adc
add
inc
and
rcr
loope
icebp
loope
loope
shll
sti
stos
popa
adc
push
mov
out
mov
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
mov
mov
sbb
cmp
pop
xor
pushf
jo
pusha
mov
mov
mov
sbb
insb
loopne
rorb
xor
pushf
mov
pusha
cld
push
int3
inc
fdivl
or
sbb
insb
loopne
rorb
xor
add
test
les
push
imul
mov
jmp
xor
and
adc
int3
sbb
loopne
cs
cmp
fsubr
mov
popf
sub
ja
int3
int
loopne
test
xchg
sti
cmc
jo
cmp
fnsave
insb
je
adc
sbb
fnsave
or
cmc
insb
push
movsl
rorb
push
mov
jne
dec
mov
shlb
loope
insb
loopne
push
mov
or
jmp
jge
and
mov
dec
test
or
cmpsl
adc
xchg
fldenv
shrb
and
in
or
sub
cmp
or
sbb
insb
loopne
rorb
xor
pushf
jo
pusha
cld
push
int3
inc
lcall
jmp
cmp
xor
inc
aad
loop
bnd
pusha
test
dec
push
mov
cmc
or
dec
lock
pop
push
jmp
add
jno
push
xchg
cmp
xor
dec
js
push
rorb
xor
pushf
jo
pusha
cld
push
int3
inc
fdivl
or
sbb
insb
loopne
rorb
xor
pushf
jo
pusha
cld
push
int3
inc
fdivl
scas
int
test
aaa
and
adc
xlat
cmp
hlt
ret
cmpb
mov
sub
addr16
cld
ss
in
cmp
adc
push
jecxz
test
movsl
filds
mov
adc
xchg
std
cmp
mov
pop
cmp
and
mov
sub
imul
aad
in
test
pop
loope
dec
mov
jae
push
jle
icebp
repnz
pop
and
cmp
mov
cli
mov
pop
rclb
push
outsb
cmpsl
xchg
fs
gs
jecxz
das
push
fstl
or
xchg
aad
push
xchg
push
lcall
xchg
adc
jl
jbe
adc
inc
in
in
push
and
iret
in
push
test
add
lcall
lods
xor
mov
push
xor
lret
jne
push
jp
call
cmc
cmp
xchg
es
cmc
mov
cmp
fldenv
sbb
pop
imul
mov
test
mov
dec
inc
or
jl
fwait
subl
repz
jnp
cmp
mov
test
jl
jno
out
or
jmp
cli
mov
test
imul
ret
add
lret
enter
cs
mov
jmp
fsubrl
inc
repnz
mov
cltd
pop
xchg
cli
dec
xor
inc
fstpl
lds
jg
out
addr16
dec
mov
inc
mov
sarb
add
jge
scas
jge
mov
in
in
and
cmp
and
xor
lret
pop
mov
arpl
jl
push
or
xor
inc
sub
adc
fwait
xor
inc
clc
inc
stc
mov
inc
lds
fmull
jmp
push
xor
ljmp
pop
insl
cmp
mov
ds
sbb
das
xchg
ss
test
mov
xchg
push
arpl
nop
fisttpll
cmp
mov
fsts
sbb
mov
inc
push
and
and
push
mov
push
clc
add
jge
insl
mov
outsb
nop
dec
xchg
cmp
cmp
pop
cld
pop
mov
btc
test
les
push
add
sbb
and
mov
inc
rorl
mov
stc
in
insl
xlat
push
shld
shll
nop
pop
and
mov
cmp
lods
mov
jns
dec
nop
push
xchg
mov
stos
push
cmp
pop
lahf
xor
inc
mov
sbb
jle
sarl
call
fnsetpm(287
cmp
or
fnstsw
fdivrl
ds
ja
and
adc
rolb
xor
xchg
mov
shlb
xchg
lods
inc
mov
lds
in
sub
jp
ror
cld
xor
sbb
push
out
dec
leave
and
sub
xor
push
cmp
nop
repz
push
mov
ja
pop
push
in
xchg
mov
mov
scas
xlat
sbb
popf
sub
and
cmp
aaa
adc
cltd
fs
xor
dec
ret
ret
sbb
or
insb
inc
add
clc
and
pusha
cmp
mov
ljmp
mov
lcall
xor
adc
sbb
sbb
adc
push
cwtl
mov
mov
std
mov
xchg
jb
fsubs
test
rolb
push
pusha
cmc
mov
in
inc
pop
push
cmp
mov
add
repz
mov
xchg
loope
adc
xchg
das
in
int
cmp
add
mov
ret
rcrb
jp
flds
ret
sub
xor
cmpsb
insb
mov
mov
cwtl
shll
and
outsb
stos
mov
mov
or
and
sbb
lods
push
or
pop
pop
decb
push
je
stos
or
jl
inc
lret
mov
jb
pop
xlat
add
adc
push
or
jae
arpl
test
ret
lods
outsl
das
mov
rolb
sbb
pop
xor
dec
or
lahf
mov
mov
mov
add
pusha
lret
sub
pop
neg
aad
sbb
cmp
sbb
scas
dec
stc
push
add
aam
hlt
adc
inc
xor
in
out
lods
adc
mov
std
int
xor
mov
mov
dec
sahf
mov
jecxz
xchg
in
mov
iret
ret
shl
mov
jle
les
fbld
insb
loop
push
sub
mov
je
cmp
mov
push
sbb
xchg
iret
or
push
cld
das
imul
sbbl
lock
dec
add
push
sub
mov
sub
adc
cmp
adc
hlt
lock
pop
jl
loop
jae
imul
inc
pop
sub
dec
pop
jne
push
daa
inc
mov
sub
sbb
lea
sub
pop
dec
inc
icebp
sbb
mov
jo
fiaddl
dec
je
dec
arpl
cs
stc
xchg
jae
jecxz
sti
jne
fists
jle
push
push
jl
stos
pusha
stos
sbb
dec
adc
ljmp
sub
or
mov
repnz
inc
xchg
jle
int
bsf
or
cmp
push
xchg
insb
pushf
mov
pop
aam
xor
mov
inc
notb
es
pushf
je
enter
mov
mov
sbb
and
dec
cmpsl
inc
jmp
dec
xchg
inc
dec
fidivrs
cwtl
int
int
test
mov
pop
sub
mov
call
sti
lods
xorl
pop
push
cmp
dec
jl
stos
mov
data16
jno
ljmp
mov
mov
cltd
lock
ds
testb
lret
call
shl
aas
lea
xchg
addr16
xchg
mov
lret
push
test
int3
dec
or
invd
mov
jne
cmp
mov
ja
jb
cmp
mov
sbb
aaa
xor
cmp
stos
jl
cmp
sbb
inc
xchg
rcll
lret
fxch
mov
je
push
jge
scas
mov
inc
and
push
pop
je
jne
xchg
je
lds
jno
stos
mov
loope
and
nop
mov
push
dec
pop
sub
aam
mov
shrb
fnstenv
inc
fsts
or
in
shlb
or
int
repz
int
lock
sbb
icebp
pop
mov
mov
sub
sahf
adc
pop
into
imul
sub
jmp
adc
pop
mov
mov
pop
jg
mov
insl
jne
jnp
sbb
jb
mov
shr
gs
lods
cmp
jmp
jne
push
fsub
notb
sti
nop
dec
pop
and
push
ss
sbb
dec
in
sub
mov
mov
mov
sub
fmuls
stos
outsb
xchg
push
sbb
scas
pop
pop
mov
jg
fcmovb
push
lods
push
cmpsl
into
push
fists
test
test
dec
std
sti
je
or
pop
jno
mov
xor
fistps
imul
push
lret
mov
rol
adc
and
xchg
cltd
adc
ljmp
inc
test
or
xor
ja
pop
pop
jg
jmp
push
xchg
mov
lahf
jae
sub
xchg
pop
mov
jg
mov
sub
and
or
fucomi
fwait
add
out
movsb
sub
les
cmp
xor
lcall
fbld
push
xchg
sarb
incb
popa
dec
nop
mov
test
lcall
loop
lret
jne
adc
mov
faddp
cmp
dec
or
add
test
sub
movsb
and
into
xchg
add
and
js
fildl
add
pop
dec
jb
cmp
mov
or
dec
in
jo
decb
mov
fcmovbe
aad
dec
ds
jp
movsl
int3
loopne
test
aas
filds
test
mov
push
xlat
pushf
cs
dec
mov
in
or
dec
bound
sbb
or
aad
mov
insl
or
xor
sbb
sbb
in
push
icebp
inc
in
clc
cmpsb
xchg
mov
mov
lret
push
mov
fwait
lret
cmc
out
lret
dec
repnz
fdivs
punpckhwd
pusha
ss
push
pop
pop
lret
in
cmp
mov
xchg
mov
stos
mov
inc
dec
sub
icebp
aam
mov
ss
push
add
inc
inc
fnsave
jg
lods
or
dec
pop
pop
or
push
int3
xchg
lock
jne
inc
popf
stos
adc
push
xor
sub
pop
movsb
xor
inc
pop
sub
in
push
rorl
fnstsw
js
mov
rorb
scas
sub
stos
scas
movsb
mov
and
cmp
movsb
cmc
mov
xchg
or
daa
cmp
jge
int3
aam
dec
or
out
push
push
jo
mov
mov
outsb
mov
push
mov
cmpsl
pop
mov
xchg
jb
lret
or
mov
xchg
lahf
pop
ss
jl
loop
fdivrs
imul
data16
jnp
movsl
sbb
ljmp
jecxz
dec
pop
cli
stos
xor
pop
mov
in
out
std
pop
or
mov
fadds
mov
push
pushf
push
pop
fwait
jno
push
mov
fdivr
mov
gs
fwait
stos
lock
subl
add
loop
adc
adc
test
xchg
cmpsb
and
mov
jb
cld
pop
push
loope
shrb
out
jecxz
shll
icebp
ds
testl
xchg
clc
pop
fistpll
sbb
mov
xchg
xor
imul
scas
test
imul
fcmovnu
mov
outsb
stos
lret
xor
push
xchg
test
jp
push
jg
dec
fdivs
bnd
xor
dec
ja
or
cmp
insl
sbb
shrl
sub
push
add
or
mov
jle
xchg
adc
repz
push
cld
xchg
mov
inc
jle
cmp
loope
cmp
cltd
daa
cwtl
stc
adc
in
pop
mov
mov
sbb
je
mov
lods
add
imul
or
jnp
dec
les
in
shrl
sbb
rcr
mov
lahf
cwtl
sbb
dec
add
ljmp
xchg
inc
ds
addr16
fidivrs
iret
nop
jnp
sti
leave
mov
pop
mov
push
jns
sbb
jecxz
outsl
inc
cmp
push
and
xchg
dec
or
andb
jle
movzwl
flds
inc
or
or
out
pop
mov
pop
je
ficoms
clc
cmp
les
andl
push
call
jecxz
repnz
pop
push
aad
add
and
aad
aam
jo
arpl
inc
shl
testb
rcl
inc
add
jnp
fldl
scas
and
adc
pop
fbld
lods
mov
and
mov
je
push
ja
fcmovbe
repz
sahf
sub
push
pop
adc
inc
test
mov
xchg
dec
adc
cld
in
or
aad
loopne
outsl
movsl
andb
sub
fisubl
inc
adc
inc
jmp
stc
xor
add
icebp
add
jno
gs
psllw
call
dec
rcrl
ret
or
xor
nop
lcall
aaa
or
negl
pop
out
push
mov
add
mov
popa
adc
fisttpll
mov
cmp
lods
push
das
stos
and
jmp
in
jp
pop
cmp
and
test
cmp
mov
daa
pushf
lock
add
outsl
dec
roll
pop
cmp
xor
jge
add
in
cmp
enter
cmpsl
xchg
inc
inc
pop
outsl
adc
out
lret
pop
or
fists
dec
mov
pop
lods
jns
mov
in
mov
cmp
in
dec
sbb
mov
out
movsl
xchg
xchg
test
mov
ret
and
sub
aad
or
mov
mov
mov
out
je,pn
sub
cmp
in
repnz
shll
scas
js
ljmp
fwait
jae
icebp
fisubrs
adc
pop
lahf
out
std
push
sub
xchg
or
push
pop
jmp
test
dec
push
jl
inc
inc
inc
mov
cmp
dec
shrb
jle
or
or
lea
into
sub
je
icebp
test
in
cmp
pusha
ret
fsubrs
daa
inc
xchg
jmp
xorb
cli
mov
test
pop
cli
pop
out
fs
cmpsb
cs
arpl
xor
mov
mov
nop
or
ljmp
aad
push
cmpsl
sbbb
mov
or
and
jmp
test
bound
cmp
in
rolb
sub
inc
and
mov
aam
inc
mov
xchg
jo
fs
lock
sbb
push
add
mov
cltd
arpl
push
inc
in
adc
inc
add
sub
fs
loopne
add
inc
popa
int3
cmp
in
out
sbb
test
xchg
out
mov
mov
out
aaa
mov
inc
mov
es
dec
cli
mov
loopne
push
bound
xchg
les
shr
and
add
in
cltd
outsl
iret
inc
add
adc
cli
test
loope
jle
mov
int
cmpsl
fstpt
sub
cli
rclb
in
mov
enter
fnstenv
test
push
dec
roll
sub
stos
ss
cmc
xor
cmp
mov
sti
xor
out
adc
fnstsw
or
ficompl
adc
inc
setns
test
sub
inc
repnz
xchg
les
cmp
int
cmp
inc
gs
mov
fdivrl
psubd
cli
sbb
ds
dec
mov
xchg
clc
fcmovnu
mov
add
fists
and
icebp
mov
movsl
clc
and
xor
fadds
and
cmpsb
lcall
test
adc
test
shr
xorl
jno
lods
scas
push
and
mov
aas
xor
nop
inc
xchg
or
dec
shll
out
mov
stos
sbb
cmpsl
xchg
loopne
ret
and
pop
scas
mov
mov
inc
dec
je
add
mov
mov
fsubs
clc
push
lods
inc
ds
jg
jae
mov
ss
mov
stos
in
mov
lret
pop
xchg
dec
aas
push
lcall
inc
mov
nop
lcall
test
xchg
lret
jmp
into
fadd
jecxz
mov
hlt
lret
ret
repnz
mov
rep
lea
sbb
clc
std
lahf
aam
fildll
fistpll
dec
ret
jle
xor
jno
adc
push
int
lods
push
out
adc
and
push
cmc
xor
sub
pop
cmpsb
decl
mov
outsl
imul
push
out
test
cmpsl
cli
or
in
pop
mov
xor
xchg
mov
mov
gs
pop
clc
push
ljmp
push
lds
xchg
loopne
rcrb
jbe
xchg
sbb
mov
dec
mov
cmp
shlb
mov
lret
in
pushf
xor
bound
mov
mov
cmp
jbe
xchg
ss
lods
movsl
push
pop
push
fidivrs
xchg
mov
stc
scas
pop
rorb
jo
mov
filds
cmp
and
repz
js
imul
in
gs
pop
gs
sbb
mov
mov
adc
jmp
mov
cmp
outsl
jp
xchg
jle
in
mov
testl
iret
fistpll
jne
xlat
dec
add
push
lahf
in
loope
rcl
mov
adc
sbb
add
pop
cmp
cltd
test
pop
sti
lahf
int3
into
out
inc
xchg
scas
ds
sub
ret
sbb
sar
leave
jp
mov
mov
mov
into
mov
imul
lret
add
push
jnp
dec
sbb
movb
add
mov
sbb
repnz
cmc
xchg
nop
adc
sbb
sti
fistpll
out
shl
test
mov
sub
push
stos
mov
pop
sub
push
fadd
or
push
add
dec
jp
or
testb
cmpsb
std
rep
xor
neg
aas
ljmp
pop
je
lahf
xchg
xor
outsb
cli
idivb
sbb
xchg
test
or
bound
mov
mov
bound
aaa
test
dec
mov
jmp
rorb
ret
lds
push
outsl
or
js
loopne
mov
js
lcall
xlat
jecxz
dec
xor
in
out
mov
xchg
fadd
jecxz
sub
gs
sbb
and
icebp
cmp
dec
scas
mov
arpl
insb
lds
aad
das
pop
sub
cmpsb
loopne
vmovdqu
cltd
sarb
pusha
inc
fucomip
add
shll
xchg
xchg
push
or
testb
xor
cld
nop
mov
mov
cltd
ret
pusha
add
sbb
jo
andl
jg
inc
fistps
jo
add
loopne
cmp
push
jl
ljmp
outsl
inc
jo
out
fisubs
mov
add
mov
jbe
or
cs
in
jno
xchg
addr16
mov
add
xor
cmp
in
dec
mov
les
cwtl
mov
mov
lods
out
neg
cli
push
pop
imul
ljmp
jb
xlat
lea
and
xlat
test
loope
sbb
dec
and
jecxz
adc
xor
mov
or
stc
inc
fcoms
bound
frstor
xchg
sbb
fsts
inc
insb
xor
xchg
popf
push
aas
ficoms
mov
int3
dec
pushf
aad
std
cld
sbb
add
and
push
push
mov
ljmp
sub
push
cmp
sbb
lods
jl
and
adc
dec
in
rcll
addb
test
xchg
mov
xor
fstpl
mov
mov
xchg
cltd
daa
movlps
and
rcr
mov
insl
push
push
mov
aas
xor
adc
sbb
xchg
rcr
aam
xchg
jg
jnp
test
imul
into
aam
arpl
mov
jecxz
jp
sub
cli
mov
sub
into
sbb
xlat
jae
mov
rol
es
inc
lcall
jmp
clc
adc
pop
xor
push
daa
sbb
decl
sbb
mov
arpl
decl
pop
pop
in
popa
inc
adc
int3
out
je
xchg
or
pop
mov
faddl
popa
push
and
in
cwtl
test
sbb
out
push
push
adc
outsl
mov
int3
cmp
add
add
cli
jmp
mov
pandn
sub
inc
out
and
scas
ds
pushf
fs
sarb
sbb
cltd
jae
lods
pop
enter
clc
ja
add
and
stos
or
cli
into
cli
test
ljmp
dec
mov
faddl
cmc
jbe
inc
inc
xchg
cld
sbb
test
das
bound
pop
sub
dec
or
popa
data16
dec
dec
rcl
push
into
pop
mov
or
xchg
xor
mov
int3
adc
adc
mov
stos
decb
pop
cmc
sub
mov
pushf
stos
add
sub
sub
movsl
sbb
stc
stc
xchg
pop
scas
adc
push
add
jge
or
nop
std
jbe
xchg
call
and
inc
outsb
js
filds
pop
pop
and
into
jle
out
cmp
add
es
pop
ret
movsb
loope
mov
fldcw
sub
in
xchg
in
sub
pop
push
in
shll
mov
mov
sbb
sbb
arpl
xchg
sbb
into
xchg
fstpt
gs
rcrl
rolb
sub
inc
mov
test
int
es
adc
xchg
push
ret
mov
leave
in
mov
pop
je
xchg
jne
cli
jecxz
xor
stos
and
and
in
test
rorb
fs
push
das
mov
sti
fnclex
flds
add
mov
push
jnp
aad
adc
cmp
inc
xchg
mov
inc
push
mov
mov
dec
inc
test
push
cmp
sub
cmp
ja
fidivs
push
dec
xor
aad
cwtl
inc
mov
les
jo
cltd
loopne
fldcw
jg
mov
mov
pop
psubsw
ret
jge
outsb
inc
clc
add
aaa
add
scas
or
xor
mov
aaa
repnz
repnz
pop
add
js
push
es
push
xchg
das
outsb
or
stc
js
daa
dec
cmp
repz
std
push
out
jno
mov
outsb
jmp
xchg
aad
or
jmp
in
mov
aaa
scas
push
jp
mov
inc
loop
push
xlat
inc
adc
inc
dec
out
push
inc
in
adc
stos
out
xchg
xor
imul
pop
or
xchg
or
loopne
rorb
xor
pushf
jo
pusha
cld
push
int3
inc
fdivl
or
sbb
insb
loopne
rorb
xor
pushf
jo
pusha
cld
push
int3
inc
fdivl
or
sbb
rorb
pop
xor
pushf
jo
pusha
cld
push
int3
inc
fdivl
or
sbb
insb
loopne
ror
shlb
mov
jmp
adc
and
xor
jbe
cmp
or
sbb
jae
jb
jmp
or
int3
pop
fmull
mov
sbb
insb
jl
dec
fistps
xor
in
or
fmull
cmpsb
and
xchg
jne
notl
aad
aas
mov
loopne
call
sbb
repz
inc
cli
jb
fs
subb
cmp
and
inc
bound
jo
cwtl
xchg
in
mov
mov
or
or
stos
popl
xor
inc
shll
xchg
lock
pop
stos
xor
scas
push
mov
and
inc
lods
and
pop
in
inc
xchg
scas
aas
inc
das
fdivl
lock
mov
or
loope
push
in
pusha
xchg
fmull
imul
cwtl
rorl
scas
ljmp
ret
push
push
pusha
push
lcall
inc
rcrb
jge
jg
or
lret
cmp
inc
addr16
add
lods
fidivs
push
push
inc
inc
jae
popf
lock
in
sub
fmull
test
mov
jl
out
dec
filds
mov
movsb
aaa
xchg
push
test
hlt
addr16
int3
inc
lds
mov
js
or
adc
fcoms
das
sbb
push
sbb
and
cmp
imul
adc
scas
dec
mov
or
mov
mov
sbb
adc
jl
dec
fistps
aas
mov
paddsb
outsl
int3
pop
fmull
mov
sbb
insb
jl
dec
fistps
aas
mov
paddsb
outsl
int3
pop
fmull
mov
je
inc
je
jno
adc
andb
pop
push
mov
adc
sub
sub
or
fsubs
andl
inc
rcrl
mov
pop
push
sub
dec
mov
movsb
loope
jg
imul
mov
std
imull
cmp
xor
movl
push
in
mov
in
lahf
or
int3
sub
sarb
call
lds
in
push
popa
outsl
imull
lcall
std
sahf
inc
mov
icebp
or
outsb
push
daa
adc
out
popf
mov
pop
cmp
loop
mov
cmp
aam
pop
out
outsb
daa
mov
jns
jns
mov
inc
ret
mov
clc
xor
rcrl
sbb
ds
pusha
jp
xchg
fwait
jge
ja
ljmp
js
scas
mov
mov
das
rep
out
enter
fwait
ret
jbe
add
jns
pusha
mov
fcoml
lea
push
rcrb
mov
mov
lds
jnp
inc
jmp
dec
jno
lahf
xor
inc
int
mov
fwait
outsl
out
int3
lods
lock
xchg
clc
adc
mov
adc
lock
push
add
popa
lock
mov
sti
imul
loopne
hlt
push
cwtl
inc
inc
scas
lods
out
and
lcall
sbb
mov
scas
sbb
mov
je
aam
push
in
aas
jnp
jmp
cmp
lods
push
dec
jnp
xor
cmpsb
push
loope
mov
pop
cmp
cwtl
cmp
int
shrb
push
imul
not
xchg
jno
cmp
cmpsb
sbb
mov
xchg
dec
push
test
or
inc
es
cli
and
xchg
mov
sbb
mov
and
incl
jnp
jbe
loopne
pop
testb
in
xchg
sbb
lcall
hlt
outsl
push
xchg
aas
dec
push
xchg
int3
lahf
stos
add
dec
jns
fcmovnu
idivb
and
lcall
cwtl
mov
mov
push
xchg
push
aaa
cs
sbb
ficomps
popa
lds
nop
cmp
hlt
movsl
cmp
cmp
mov
fs
out
movsb
or
test
pop
cltd
and
dec
jg
xor
js
std
ja
outsb
and
mov
jo
inc
and
sbbl
test
lcall
dec
jne
cmp
jle
xchg
pop
xchg
jb
in
mov
xor
sub
push
daa
into
cmp
in
or
mov
shl
leave
jle
pop
pusha
adc
xor
cmp
xor
mov
paddusb
nop
enter
aad
push
add
inc
mov
jne
mov
out
scas
xchg
jo
insl
sar
in
dec
addr16
je
xchg
stos
cmpsl
mov
lret
aas
xor
xchg
pop
imul
mov
cmp
push
and
enter
xor
call
xor
iret
arpl
fmull
pop
jnp
lods
insb
int
jle
movsl
imul
pop
into
stos
inc
xchg
xor
stos
mov
fsubrl
jmp
popa
movl
orb
cli
xchg
mov
inc
popa
adc
sub
test
mov
popf
adcl
lahf
in
test
pop
xchg
xchg
push
lea
mov
xor
in
xor
aad
jl
cmc
inc
add
jge
dec
jge
pop
jno
popa
and
xchg
mov
idivl
nop
pop
mov
and
hlt
push
cli
add
fbld
dec
jl
fs
xlat
add
movsl
mov
lcall
les
clc
and
stos
add
and
lahf
cmp
mov
fisttpl
jmp
stos
push
or
and
ss
and
cmc
ss
mov
aaa
cmpsl
pop
cmc
out
push
shlb
fs
ljmp
out
and
ja
mov
mov
ret
sti
popa
shlb
cltd
lods
and
sbb
xor
pop
jbe
cmp
adc
daa
and
dec
add
sbb
sub
mov
sbb
outsl
aam
xchg
push
adc
rclb
or
je
aad
xor
pusha
pop
fldcw
mov
xor
or
shlb
pop
sbb
push
mov
lret
adc
jl
mov
mov
cmc
mov
pop
test
inc
cmp
outsl
nop
xor
push
push
ret
lret
ja
dec
sbb
inc
out
mov
pop
in
mov
push
fstl
dec
imul
adc
mov
xchg
out
xlat
add
in
movsb
in
mov
js
push
int3
mov
mov
mov
mov
dec
cs
cli
or
incl
jne
mov
ljmp
inc
fdivl
icebp
cltd
jb
notl
jo
jne
enter
fnstenv
dec
mov
lret
pop
addr16
mov
pop
jo
pop
ja
lahf
xor
xchg
xchg
xor
push
xor
add
std
setne
sub
add
inc
mov
cli
stos
jge
enter
ret
test
outsl
pop
dec
inc
xorb
icebp
inc
stos
xorl
arpl
je
cmp
movsl
hlt
jecxz
das
cmp
xor
loopne
jnp
jb
pop
loope
stos
push
jp
and
test
ds
ret
mov
rcrb
out
rcrb
fdivrs
fwait
mov
pushf
sbb
ficoms
fisubl
push
ret
aad
sti
cli
adc
test
fisttps
sub
push
and
push
cmpb
adc
ljmp
cmp
or
xbegin
lods
sub
mov
sub
push
add
mov
iret
iret
xchg
mov
sub
idivl
inc
pop
fadd
adc
xor
ss
rcll
jg
xchg
mov
add
adc
push
imul
cli
aad
ret
cmp
cmp
mov
jne
xor
mov
popa
int
cmp
ss
inc
daa
cmp
sbb
dec
xchg
pushf
sbb
addr16
jae
je
scas
sbb
mov
sbb
fs
in
push
ljmp
jae
out
scas
lods
lahf
fstpl
test
popf
icebp
aas
cmpsb
daa
lds
out
adcb
outsb
jnp
mov
mov
mov
xor
adc
sbb
loopne
arpl
and
daa
mov
pushf
pop
mov
loopne
dec
aad
push
mov
mov
cmp
xor
dec
add
pop
jge
cmp
fisubrl
leave
scas
js
inc
ret
in
push
inc
stos
sub
rclb
push
push
and
imul
pop
sbb
add
or
enter
or
shl
cmp
xor
sub
sbb
ds
xchg
mov
xor
inc
arpl
ror
sti
fwait
fwait
cmp
outsl
push
fbld
sbb
dec
in
pushf
cmp
adc
mov
sbb
sahf
sbb
xor
shlb
rol
mov
jmp
sar
mov
in
and
insl
cwtl
dec
push
out
sti
cmp
xor
lds
jbe
lcall
inc
and
sbb
mov
out
sbb
iret
out
sbb
cld
repz
sub
dec
mov
jbe
pop
mov
in
nop
loope
or
jns
cmpsb
int3
pop
mov
mov
out
sub
inc
mov
addb
mov
je
cld
mov
xchg
icebp
add
push
mov
sub
imul
push
or
pop
mov
jnp
xor
repz
ret
out
lcall
and
jo
outsb
mov
pop
push
lods
adc
adc
popf
adc
hlt
orl
lahf
xchg
pop
imul
pushf
icebp
mov
xor
popa
or
add
xchg
pop
test
push
jl
inc
pandn
cld
fs
in
mov
xor
dec
es
fstl
push
icebp
cmc
leave
sbb
xchg
cltd
cmp
mov
push
jno
int
dec
or
xor
daa
bound
dec
jns
les
js
rcr
pop
ret
jbe
ret
cld
sbb
lret
in
scas
mov
xor
data16
cmp
add
mov
mov
in
movsl
pop
loop
mov
xlat
dec
ret
in
and
xlat
adc
hlt
jnp
rorl
dec
idivb
jo
adc
dec
mov
stos
jmp
cmpsl
xchg
xlat
movsl
mov
mov
or
shrl
sbb
sbb
jl
mulb
out
pusha
xchg
shll
loop
loopne
push
iret
das
dec
lret
sbb
mov
cmc
ss
divb
push
pop
fisttpll
cs
mov
adc
pop
cld
pusha
cmpsl
mov
xor
or
popf
sub
jg
ds
push
sub
out
mov
xchg
stos
shll
cmpsb
sbbl
adc
pop
loopne
ret
dec
xor
push
ljmp
insl
out
sub
push
mov
jno
std
out
or
inc
xchg
lods
pop
dec
loop
data16
mov
insb
adc
ds
rcll
pop
in
sub
inc
mov
fs
mov
and
sti
sbb
test
sub
ja
insb
inc
repz
jg
in
loope
dec
jl
add
aad
mov
mov
mov
sbb
push
int3
mov
in
jle,pt
mov
mulb
dec
imul
mov
sbb
ret
mov
push
or
mov
lcall
stc
inc
add
movsl
shlb
in
push
mov
adc
jecxz
dec
xchg
imul
inc
dec
xor
scas
divb
fwait
push
fwait
ss
jmp
xchg
shrl
jecxz
gs
cli
cmp
push
xor
jle
aad
in
xor
fidivrs
push
jg
popa
push
xchg
in
dec
push
or
scas
out
mov
xchg
mov
lret
push
xor
mov
xor
pop
fnstcw
sub
push
sbb
and
lahf
fs
sub
sub
test
jg
or
fldt
outsb
xchg
lea
pop
rcrb
push
jno
mov
dec
lea
dec
xor
cmp
stos
xor
add
jmp
in
fldenv
push
pop
stos
test
jbe
cmp
sub
fwait
sub
out
scas
int
jl
addl
loopne
lahf
sbb
xchg
mov
out
daa
sbb
subl
xor
fildll
xchg
xor
or
and
dec
lahf
sub
mov
nop
cmp
decl
test
gs
or
das
cmp
out
int
sbb
lret
lahf
shlb
cs
or
das
mov
js
iret
cmp
pop
push
mov
mov
mulb
pop
ljmp
fcmovnbe
jecxz
xchg
mov
mov
mov
into
jo
mov
sbb
es
adc
mov
cmp
movsl
lret
es
lcall
dec
lods
or
movsb
ret
stos
pop
call
pop
mov
push
jge
inc
into
and
mov
mov
call
fists
mov
or
jne
hlt
shl
jae
mov
cmp
mov
pop
sub
movsb
ss
jge
je
lret
popa
lods
movsb
sub
lea
addl
out
mov
test
idivb
cmp
test
insb
add
out
xchg
out
sbb
lret
lods
dec
rcrb
rclb
mov
in
gs
out
adc
mov
pop
out
adc
mov
or
fdivs
clc
leave
mov
test
mov
lock
mov
lcall
pop
or
mov
sarl
ds
outsl
push
test
mov
stos
jg
xchg
cmp
insb
jnp
lcall
jns
xor
push
sbb
sarb
rorb
fisubrs
aad
lods
aam
xchg
push
pushf
push
enter
push
pushf
rclb
out
dec
or
jl
faddl
pop
sti
or
sbb
jp
hlt
add
sbb
arpl
ffreep
mov
xor
sbb
fs
and
out
mov
in
inc
inc
scas
sbb
mov
mov
adc
sub
adc
dec
sbb
ljmp
xlat
fisubl
in
xchg
ss
enter
adc
iret
dec
adc
mov
fsub
ss
ret
or
mov
adc
xchg
das
int3
cli
mov
and
sub
rol
mov
loope
js
shll
js
xor
adc
dec
imul
rcrl
push
out
test
xchg
pop
js
and
jo
xlat
lret
je
add
dec
fnsave
xchg
lret
xchg
xchg
mov
inc
loope
cmp
mov
push
push
push
pop
aad
sbb
shrb
movsb
int3
xor
mov
jle
aaa
aas
xchg
push
pop
xor
inc
cltd
imul
fsubl
add
loopne
cwtl
jbe
mov
mov
scas
test
mov
movb
or
jmp
pop
es
jp
test
clc
mov
dec
movsl
mov
xchg
out
mov
dec
aam
adc
aaa
xor
inc
adc
cli
jno
jg
dec
out
in
sbb
add
push
lret
inc
jae
cmp
out
jo
jg
lea
jnp
inc
lret
sbb
arpl
adc
stos
dec
jl
jbe
mov
bound
es
pop
subl
jo
imul
or
lods
mov
repnz
nop
and
add
sub
dec
xor
jb
clc
movsl
sub
cltd
cmp
push
cs
cmp
movl
pop
mov
incl
dec
mov
and
pop
adcl
fistl
adcl
fsubs
adc
inc
inc
mov
lret
and
inc
lods
je
mov
dec
mov
and
jmp
fcom
mov
mov
sbb
mov
lods
pop
pop
sub
push
mov
arpl
cmpl
xor
jo
mov
std
push
cltd
sbb
push
pop
mov
int3
cld
and
not
adc
addr16
and
mov
add
mov
mov
cmp
bound
xchg
dec
repz
pop
out
cli
repnz
xchg
mov
in
imul
pop
fstp
inc
std
add
pop
adc
xchg
and
rcr
std
faddl
les
imul
jle
loop
lret
inc
pop
mov
lret
js
jnp
mov
mov
jle
sbb
and
dec
pushf
fs
xor
dec
jecxz
pop
stos
test
test
in
loope
fs
push
sti
loopne
inc
flds
movsl
mov
pop
push
notb
pop
xor
dec
jmp
xor
cmp
sahf
or
push
sub
dec
lahf
pop
scas
scas
xor
mov
jbe
jle
sub
mov
lret
cmp
test
pusha
loopne
mov
fldpi
leave
lods
mov
jo
jno
push
fdivp
ds
xchg
sub
testl
dec
push
xchg
pop
dec
add
repz
add
sbb
popf
mov
into
insl
call
add
es
test
dec
fistl
sub
pop
mov
adc
xlat
push
icebp
pop
push
inc
inc
or
mov
int
mov
bound
dec
jl
fisubrs
cli
outsb
les
aad
out
loopne
xchg
push
mov
lcall
insb
dec
xor
and
into
xchg
pop
rcll
pop
and
pop
in
nopl
pop
pop
xchg
jb
push
jne
jbe
ficoml
shrb
ror
ret
xor
dec
cmp
sahf
push
sti
mov
mov
pop
das
add
jg
fdivrl
cmp
stc
leave
mov
mov
pushf
mov
push
call
push
lcall
jge
lret
adc
cmp
aad
xor
cmp
pop
push
fists
and
pushf
loope
imul
sbb
out
cmpl
sti
daa
jle
fldenv
cmp
xchg
dec
rcrl
scas
rsqrtps
lods
stos
xor
or
inc
lock
sbb
je
dec
pop
rcr
rorb
ja
clc
mov
movsb
pop
out
push
in
inc
jl
movsl
cltd
shl
inc
adc
cmp
xchg
mulb
adc
stc
adc
xchg
gs
pop
add
cltd
jmp
popf
cmp
push
jmp
fwait
mov
out
push
mov
push
jo
xchg
pop
cmp
test
insl
pop
push
inc
loopne
cmp
xchg
mov
xchg
pop
mov
adc
or
and
in
fidivl
test
or
in
sbb
data16
enter
ret
out
cmc
adc
scas
sub
or
ret
js
or
insb
or
xor
loope
ret
jae
fmull
push
dec
scas
xor
mov
imul
scas
dec
int
xchg
mov
icebp
cmpsb
in
jne
jnp
push
jg
addr16
mov
cmp
fildl
test
cltd
sbb
pop
test
scas
jns
xor
jmp
mov
adc
loop
mov
adc
xor
fsub
into
loop
shrl
mov
cs
mov
push
pop
movsl
and
gs
jnp
mov
xor
lods
mov
outsb
std
popa
and
cmpsl
mov
sub
xchg
shrl
lods
mov
popa
jg
aaa
add
cwtl
xchg
imul
or
xor
sub
sbb
dec
in
fnstenv
jp
pop
xchg
mov
stos
scas
enter
inc
movsl
push
mov
dec
fimuls
add
insb
cwtl
in
cwtl
popf
shlb
test
cs
push
repz
xchg
addr16
cli
jmp
leave
cmp
shlb
mov
add
adc
loope
sub
xlat
icebp
push
pop
sub
lds
jbe
pop
movsl
fiaddl
out
shll
pop
xor
into
gs
mov
clc
add
xchg
in
scas
adc
jl
or
dec
xor
mov
pop
adc
out
sar
xlat
scas
in
adc
outsb
lods
enter
mov
mov
mov
into
sbb
adc
xchg
cmpsb
xor
neg
inc
mov
add
loop
les
cld
pushl
push
push
imul
sti
dec
cmc
dec
sub
jae
xor
mov
add
nop
loop
push
sbb
fs
cld
aaa
test
jns
xlat
and
fs
cmpsb
mov
mov
dec
addb
sarb
test
add
sub
stc
inc
pop
arpl
and
ds
add
out
rorl
sub
push
je
xchg
inc
negl
inc
rol
setg
mov
stc
sub
int
into
or
mov
stos
and
cli
mov
into
mov
adcb
mov
adc
adc
jbe
push
sbb
mov
std
aam
inc
ret
sbb
cmp
mov
je
add
stc
cmp
pop
or
dec
cmpsb
mov
xor
aaa
icebp
mov
pop
in
xchg
imul
dec
cld
mov
sub
mov
xor
adc
mov
fwait
jle
cs
or
and
cmpsb
inc
out
pop
sub
inc
mov
pop
inc
adc
cmp
incb
cmc
movsl
out
int
sbb
push
das
sub
push
or
mov
mov
in
imul
daa
cs
ja
loop
or
jle
enter
popa
xadd
outsb
add
xor
xchg
xor
jmp
stos
outsl
pop
incl
lcall
jo
loopne
cmpps
mov
hlt
cld
imul
mov
jg
jno
xchg
pop
or
ljmp
cmp
dec
sbb
cmpl
insb
mov
fistpll
dec
gs
sub
in
in
jmp
cmp
inc
mov
inc
sbb
adc
mov
dec
or
flds
in
pop
adc
loope
adc
mov
sub
cmp
cwtl
jb
aam
adc
cmp
addr16
push
fsubr
int
aam
repnz
mov
push
rclb
mov
imul
cltd
xor
inc
dec
dec
cmp
test
adc
in
cmpsl
sub
lds
fistpll
cli
out
mov
dec
gs
ljmp
lcall
pop
xor
push
lahf
sarl
xor
pop
push
mov
popa
pop
xchg
pop
xor
out
pop
hlt
out
outsb
xchg
sbbb
mov
dec
add
out
test
nop
inc
sub
jbe
xor
insl
test
xor
inc
movl
sti
xchg
rcr
push
je
xchg
cmp
loope
add
scas
in
lahf
sbb
insb
jl
dec
fistps
aas
mov
paddsb
outsl
int3
pop
fmull
mov
sbb
insb
jl
dec
fistps
aas
mov
paddsb
outsl
int3
pop
fmull
mov
sbb
insb
jl
dec
fistps
aas
mov
or
jg
outsl
int3
pop
in
dec
sbb
sbb
insb
jl
int3
rcpps
inc
test
pop
pushf
js
divl
and
xor
in
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
lds
repz
mov
dec
jecxz
and
add
add
push
add
pop
add
add
add
pop
push
dec
add
add
xor
add
test
xor
sti
add
xlat
add
add
sub
flds
lods
add
add
add
add
inc
add
add
add
sub
sub
int3
add
add
add
sbb
sub
adc
cmp
out
add
add
mov
add
sbb
sub
in
add
add
jne
addb
add
add
popa
add
add
cmp
mov
out
add
add
add
add
dec
add
add
add
and
daa
add
add
in
movsb
add
pop
add
cltd
add
add
pop
add
and
cmp
or
jnp
roll
xchg
add
sti
add
add
mov
add
popa
add
scas
add
add
mov
add
add
add
cmp
pop
add
add
movsb
add
dec
add
dec
add
dec
add
add
add
add
push
add
pop
dec
add
add
dec
add
add
cmp
xchg
add
add
in
add
add
xlat
add
add
addb
add
add
add
test
add
sub
jns
add
mov
add
add
sbb
repnz
pusha
add
add
dec
add
add
add
push
add
mov
lahf
add
add
add
add
pop
add
jnp
movsb
add
add
add
inc
add
add
sbb
sub
mov
add
add
add
add
add
add
add
add
movsb
add
inc
add
add
add
cs
add
pop
add
inc
add
add
add
add
add
and
roll
sbb
pusha
add
add
add
addb
add
cmp
and
sub
mov
dec
add
add
add
out
add
add
add
ja
xor
add
add
test
add
add
add
push
add
mov
add
add
add
jno
or
lea
ja
cmp
xchg
add
add
add
add
add
add
add
addr16
push
add
add
add
movsb
add
pusha
add
add
add
and
add
add
push
add
cmp
in
add
or
xchg
add
in
movsb
add
add
and
xlat
add
add
mov
add
pop
xchg
add
add
inc
add
add
out
add
push
inc
add
mov
add
add
add
lds
dec
add
add
add
cs
add
push
add
add
add
sub
out
add
push
add
add
inc
add
add
mov
fiadds
popa
add
add
mov
add
add
ret
add
add
add
inc
add
incl
pop
add
add
add
add
mov
test
add
add
ja
addl
push
lret
add
add
add
add
add
add
jae
or
add
add
mov
add
add
movsb
add
add
mov
add
add
add
add
add
cmp
pop
add
popl
add
nop
cmpsl
lret
stos
jle
cli
in
jo
fidivrl
mov
push
mov
rcrl
outsb
push
xchg
out
vmaxsd
ljmp
or
or
scas
push
add
iret
fcoms
pushf
pop
pushf
mov
loope
and
push
sub
xchg
js
inc
pop
jo
cmp
ss
mov
xchg
iret
pusha
ja
sbb
pop
ds
xchg
in
iret
test
mov
pop
xacquire
fwait
add
enter
or
sub
sbb
pop
shr
push
fcomps
pop
xchg
repnz
leave
push
addb
jge
add
sarl
addr16
fbstp
sahf
xor
nop
mov
xor
inc
xchg
push
imul
inc
push
scas
insb
cs
lcall
rcrb
arpl
bound
hlt
outsl
dec
fdivl
xor
in
in
lea
or
mov
scas
std
dec
sbb
stos
inc
and
shll
into
pop
insb
mov
mov
outsb
pop
or
mov
adc
pop
dec
cli
add
imul
jo
out
clc
add
push
xor
test
jmp
mov
stos
xchg
insb
mov
jl
mov
popa
lock
fdivl
faddp
scas
xchg
pop
rcr
js
fcompl
rcr
mov
notb
movsb
mov
fs
jno
mov
pop
andb
dec
daa
pmaxub
pop
gs
data16
adcb
jmp
ds
out
add
or
xor
mov
ret
sub
cli
push
mov
incl
orl
cld
subb
pop
mov
xchg
aas
out
sbb
add
nop
xchg
xchg
mov
test
les
fidivl
dec
pop
divps
cmpsl
arpl
aad
mov
fimull
in
movsb
gs
add
pop
aas
outsb
aad
pushf
std
out
lahf
jns
jbe
push
test
lcall
xchg
jge
xchg
divl
aas
adc
and
jl
push
imull
hlt
bnd
pop
imul
fs
cmp
shrl
fidivl
dec
dec
mov
mov
sbb
adc
sarl
sbb
shr
mov
jns
frstor
xchg
push
sub
fsubs
orb
lods
loopne
cmp
inc
xlat
test
lret
or
push
jge
cmpl
test
pop
adc
jae
mov
add
pop
and
sub
bound
mov
insb
push
test
inc
mov
jge
jb
movsb
fidivrl
inc
lds
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
