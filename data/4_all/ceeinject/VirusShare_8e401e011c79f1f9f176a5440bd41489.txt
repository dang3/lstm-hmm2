call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
orl
xor
jg
push
arpl
adc
aas
xchg
jno
aad
out
mov
sahf
jecxz
jecxz
adc
pop
xor
jg
cmovae
jae
arpl
iret
sbb
out
mov
lahf
repz
jecxz
adc
pop
xor
jg
cmovae
jae
arpl
xchg
iret
cmp
mov
xchg
mov
stos
ret
ror
mov
arpl
add
jg
jae
fdivs
push
cmp
dec
andb
mov
mov
push
push
ljmp
mov
add
dec
xchg
stc
cmpsl
push
mov
fistpll
adc
ljmp
sbb
xchg
pop
add
push
inc
leave
sar
hlt
push
cld
xchg
iret
rcr
in
pop
add
add
aam
add
jp
sub
outsl
pop
xchg
daa
arpl
xorl
and
lahf
nop
jg
fucompp
mov
pusha
nop
ss
test
jae
arpl
sti
xor
lret
mov
jbe
sbb
jmp
add
shll
xchg
mov
push
fcmovnb
lcall
repnz
loop
dec
dec
add
outsl
and
cmovae
jae
arpl
xchg
iret
sbb
out
mov
lahf
repz
jecxz
addr16
inc
es
cs
adc
imul
dec
sti
mov
cmpsl
sti
fcomps
and
inc
daa
imul
daa
pop
jae
sbb
shrl
lods
cwtl
ljmp
gs
sub
pop
adc
arpl
xchg
iret
sbb
out
mov
lahf
repz
jecxz
adc
pop
xor
jg
cmovae
jae
arpl
xchg
iret
sbb
out
mov
lahf
repz
jecxz
adc
ja
add
and
dec
pushf
add
fildl
sub
in
xchg
hlt
in
adc
mov
jg
inc
dec
lahf
test
mov
adc
repnz
push
and
sahf
mov
iret
call
in
ret
test
fisttpl
mov
ds
ret
jbe
or
enter
lret
xor
cld
shrl
sub
popf
insb
data16
sahf
inc
test
cmc
gs
or
stc
in
ja
call
cmpsb
daa
sub
cs
and
or
leave
xlat
xchg
pop
mov
adc
mov
or
xchg
dec
imul
jnp
rorb
or
popf
test
mov
ds
xchg
ja
cwtl
xor
insl
mov
cmpsl
test
mov
lea
sbb
clc
push
orb
pop
adc
xchg
fs
jle
sbb
mov
dec
leave
pop
addr16
adc
out
xchg
pusha
testb
cmp
pop
int
mov
mov
rcr
add
or
fdivrp
adc
rolb
fstl
pop
dec
mov
push
xor
pop
ja
jg
pop
sub
fldenv
jmp
movsl
inc
faddp
stos
cli
add
out
lcall
sti
lock
fmuls
daa
jg
inc
cmp
aaa
push
jae
pop
sub
int
hlt
or
loope
mov
fists
pusha
fwait
gs
loop
dec
adc
clc
sbb
test
aad
xchg
mov
pop
mov
sub
dec
inc
aam
push
inc
ljmp
sti
jg
stos
and
cmpsb
pop
sub
pop
or
rcl
push
outsb
push
lods
and
xchg
cmp
shr
std
inc
sbb
stc
pop
sub
inc
jecxz
ljmp
push
fwait
rcrb
or
sbb
aad
cmpsl
aas
sbb
sti
mov
ret
sbb
fdivrp
nop
adcb
cs
xlat
xchg
add
popa
jg
sbb
loop
add
dec
xor
lea
mov
outsb
les
scas
sarl
xchg
cmp
iret
fimull
sub
pop
int
or
mov
insl
fwait
mov
fidivl
push
stc
movsl
xchg
adc
mov
xchg
push
std
jge
insb
jae
divl
jbe
insl
jg
test
repnz
movsl
sub
sahf
dec
dec
icebp
loopne
pusha
fcomps
xchg
lea
or
push
xchg
xchg
adc
sahf
and
and
enter
dec
hlt
loop
push
jle
icebp
es
scas
imul
das
cli
mov
push
das
adc
push
pop
popa
xchg
addr16
iret
lret
cmpsl
jge
insl
mov
repz
mov
push
fistpl
ljmp
popa
mov
dec
cmc
aas
cmp
pop
loope
cmpsb
cmp
fisttpll
xor
subb
pop
inc
sbb
int
cmp
sub
sti
pop
sbb
out
in
insl
loop
sbbb
push
inc
stc
bswap
jle
pop
ss
dec
pusha
jns
mull
test
sbb
ds
push
inc
inc
mov
sti
sub
sti
clc
xchg
lret
cli
cmp
and
lcall
add
dec
lods
nop
mov
mov
daa
push
push
daa
fisttps
adc
add
xchg
sbbb
lcall
mov
mov
rorb
xchg
mov
pushf
fdivrp
rcr
nop
xchg
into
add
int3
jbe
iret
outsl
ret
sub
sbb
lods
frstor
jl
ja
adc
push
inc
jno
aas
push
cmp
inc
sbb
shlb
push
fistpll
xchg
pop
pop
daa
inc
daa
cmp
mov
push
and
pusha
std
pop
pop
jmp
fsubrs
and
xchg
pop
xor
addr16
mov
push
dec
push
mov
adc
out
out
mov
lahf
fcmovu
out
mov
sahf
es
lret
sbb
bound
inc
das
mov
push
sbbl
sbb
jns
enter
addb
negl
add
out
add
cwtl
and
or
push
lahf
out
js
je
or
movsbl
push
in
jbe
sbb
mov
push
pop
ret
cmp
loopne
and
cmpsb
es
mov
xor
ret
call
inc
adc
mov
dec
ljmp
dec
mov
push
pop
xor
mov
aaa
test
icebp
cs
sahf
adcl
lds
lock
push
fmull
clc
mov
inc
lea
adc
lods
or
xchg
stc
sub
fs
int
ljmp
gs
mov
cmp
add
ret
add
das
subl
adc
jg
mov
xor
cmp
push
push
imul
insb
fbld
mov
add
arpl
lods
fnstcw
pop
cmp
push
jmp
fsubrl
cli
lcall
test
inc
lret
or
jbe
fstpl
lret
cmp
fimuls
mov
adc
nop
ja
insb
push
adcl
daa
pop
adc
in
add
pop
cwtl
clc
pop
adc
scas
adc
sbb
add
fstpl
sarb
pop
xchg
xor
or
fldenv
xchg
into
mov
jnp
xchg
roll
xchg
mov
cmp
pop
mov
out
int
es
push
xchg
push
cmp
imul
into
fnstcw
xor
je
subb
shrl
push
lock
cmp
sub
pushf
sbb
notl
pop
int3
jae
mov
icebp
dec
jge
dec
stc
mov
aam
mov
rolb
sbb
insl
test
or
inc
xchg
mov
dec
and
aas
rcll
out
enter
hlt
xchg
mov
mov
nop
inc
lea
mov
imul
mov
push
mov
stos
pop
insl
movsb
xchg
pop
mov
xor
pop
sub
jo
in
cmpsb
dec
jae
cmp
ret
outsb
insb
movsl
int3
ljmp
add
or
push
mov
leave
int
cmc
cmc
sti
and
clc
mov
mov
xchg
shr
fsubs
xor
jnp
dec
xor
sbbb
mov
inc
xor
sbb
in
xchg
dec
push
mov
outsb
xchg
popf
xchg
push
mov
decb
pop
andl
lcall
and
scas
sbbl
sbbb
fiadds
dec
cwtl
xor
push
dec
add
cwtl
xor
pop
test
mov
jg
add
ja
push
sbb
out
and
xor
in
push
cmp
loope
aaa
movsl
test
shrl
arpl
aas
mov
lret
imul
movb
cmpsl
cmp
cmc
jge
or
test
push
fwait
lahf
in
mov
arpl
loope
add
xchg
and
or
loop
add
insl
cmp
and
jge
lock
sti
pop
xchg
jp
scas
and
pop
stc
mov
jecxz
ret
mov
push
or
inc
jmp
lcall
mov
xlat
test
clc
mov
icebp
fidivs
shlb
mov
stos
mov
fdivrs
and
aam
xchg
sub
addb
dec
outsl
push
outsb
out
lret
xchg
sub
dec
xchg
out
adc
into
fdivl
or
mov
jl
pop
jmp
push
push
push
sub
adc
shll
insl
jb
test
adc
sahf
ja
jb
mov
ss
xchg
rclb
or
push
mov
xchg
jae
pop
push
in
add
add
cmp
stos
jo
jno
lock
xchg
push
pop
cltd
inc
subl
jo
xor
in
xchg
jne
and
cli
pop
lds
lret
push
repnz
dec
imul
mov
outsb
mov
inc
cmc
movsb
les
scas
pop
scas
insb
sbb
push
sbb
lea
dec
mov
stc
xchg
add
std
inc
sbb
scas
mov
leave
or
push
orb
push
mov
fs
dec
sbb
in
es
and
orl
inc
stos
dec
daa
jo
or
aam
cltd
or
push
adc
and
cmp
jns
out
mov
lahf
outsb
or
mov
inc
xchg
mov
xor
pop
fidivs
push
mov
lock
outsb
xchg
in
cmc
pusha
out
xor
incl
ljmp
cmpsb
lret
enter
xor
push
test
sub
gs
add
push
lahf
cs
mov
add
push
sbb
negl
xor
pop
inc
inc
sbb
dec
push
jecxz
inc
mov
xchg
xor
push
xchg
in
jnp
xor
dec
pop
mov
test
imul
stos
repnz
adc
mov
cmpsb
jecxz
lahf
sbb
in
mov
movsl
sub
jmp
pop
popl
or
das
fmulp
lea
inc
mov
leave
nop
inc
mov
push
jp
popw
sbb
add
stos
in
push
aas
lret
fnstcw
sbb
imul
into
xor
cmpsl
mov
testb
adc
mov
xor
pop
ds
repz
lret
push
push
push
iret
out
loope
std
mov
or
xor
icebp
jl
jmp
mov
fs
into
push
jg
xchg
scas
jle
mov
loope
cmpsb
pop
push
test
pushf
shrb
or
and
lahf
mov
push
imul
pop
nop
imul
cmp
and
repz
call
out
push
cmpb
jae
push
stos
dec
mov
ficompl
push
subl
and
jge
stos
xchg
inc
fwait
test
int
jg
push
sahf
mov
clc
xor
fwait
mov
xchg
add
mov
push
rcr
inc
dec
int3
or
push
std
clc
pop
jge
into
idivb
lods
sbb
mov
xchg
test
ffreep
inc
cmp
rcl
mov
xchg
cmp
add
mov
or
arpl
je
sarl
shll
xchg
iret
ror
jns
push
adc
sub
sahf
out
pushf
push
sahf
shll
daa
testb
and
daa
test
mov
adc
mov
xchg
jno
mov
inc
mov
sub
rcl
xorl
mov
mov
and
sbb
adc
xchg
pop
arpl
in
jecxz
and
fcoms
inc
inc
arpl
test
xor
movsb
inc
insl
mov
or
in
mov
fwait
subl
mov
jo
stos
xor
mov
shrb
cmp
mov
lods
push
xchg
imul
daa
popa
or
and
jae
call
cmp
sbb
pop
jno
arpl
sub
push
mov
xchg
add
dec
rcrl
xor
jl
ret
je
sahf
cmovb
adc
shl
or
dec
pop
push
or
pop
jecxz
cmp
add
stos
xacquire
push
add
movl
sbb
int
mov
dec
dec
lret
loopne
mov
mov
mov
pop
andb
aam
push
xchg
mov
aaa
call
je
lret
inc
test
repnz
push
cmp
mov
pop
mov
and
sti
repnz
clc
scas
js
sub
std
push
int
pop
dec
out
imul
clc
push
mov
es
hlt
in
or
xchg
mov
je
jne
xchg
and
xor
dec
test
pop
mov
lcall
cmc
mov
mov
out
jmp
test
mov
push
adc
popf
lock
mov
pop
ljmp
add
cmp
movsb
clc
sub
in
mov
sbbb
loope
lret
hlt
pop
outsb
xor
sahf
leave
jno
or
testb
push
sub
inc
xchg
es
dec
sbb
jecxz
js
push
push
mov
xchg
rcrl
add
gs
pop
stos
ret
test
fistl
mov
xor
insl
adcb
cmc
jge
cmp
cmc
push
fiaddl
in
femms
xchg
std
std
add
mov
popf
roll
test
adc
jbe
or
cmpsb
arpl
sarl
sub
incb
dec
push
lret
push
ss
bound
xchg
jecxz
pop
gs
cmpsb
fdivrl
sub
outsb
movsl
es
lahf
mov
pop
push
or
dec
dec
fdivr
outsl
loope
loopne
xchg
mov
lods
popa
clc
lea
nop
xchg
jne
ret
jnp
add
jecxz
int3
clc
cmp
test
xchg
ja
or
and
sarl
in
lret
mov
fsubrl
push
pop
shl
add
jne
add
gs
xchg
int
jno
mov
jnp
push
cmp
adc
movsl
jle
xor
sub
or
ja
popf
adc
jge
stc
ret
cltd
icebp
and
aaa
ja
jns
stos
addr16
clc
inc
outsb
arpl
sub
jbe
sub
leave
das
cmpl
push
jbe
mov
sbb
add
cmp
pop
icebp
and
ss
fdivp
fnstenv
mov
test
mov
xchg
in
sbbl
xchg
popa
fsubp
test
jns
test
gs
jge
add
dec
dec
arpl
cmp
push
pop
inc
lock
inc
xchg
out
jl
mov
inc
sub
xchg
cmp
loope
cld
push
notl
push
and
dec
imul
add
enter
test
out
dec
push
xchg
xor
add
pop
lock
xchg
or
jmp
xchg
mov
jecxz
pop
xchg
les
test
mov
fmull
xchg
test
adc
jl
jnp
fucompp
insb
and
inc
or
fbstp
push
in
pop
stos
xor
rcrb
negb
cmova
out
xor
mov
sbb
rorl
pop
mov
push
dec
cli
clc
testb
test
pop
cmp
iret
mov
xchg
jnp
mov
ficomps
inc
shr
mov
adc
fsub
fcoms
cmpsl
jg
rcr
xchg
or
pop
call
mov
dec
test
mov
jns
test
pop
ficoml
dec
sahf
push
lret
pop
vmaxpd
adc
fxam
push
jp
cwtl
gs
lea
mov
shlb
push
or
cmp
inc
mov
rclb
idivl
fwait
cmc
jecxz
mov
push
out
mov
sub
add
out
mov
adc
int
ja
xor
pop
xor
xchg
pop
insb
jbe
call
fiaddl
scas
out
jmp
hlt
add
xchg
icebp
popa
int3
aas
jnp
mov
stc
mov
fsts
mov
mov
movsb
outsb
and
fimuls
push
inc
adc
and
in
mov
ss
shll
inc
daa
add
nop
mov
jecxz
shl
aaa
fcomip
cmp
pop
lds
adc
and
pop
int
mov
sub
xor
sbb
loop
or
xor
dec
rcll
lahf
xor
xlat
and
push
cmp
pusha
pop
js
test
jno
nop
xor
shrw
das
movsb
test
stos
gs
rcr
imul
dec
scas
sbb
mov
mov
call
mov
add
pop
enter
dec
jg
lods
leave
mov
cli
call
mov
xchg
xchg
pop
push
inc
stos
sub
nop
dec
loope
test
and
jge
jge
mov
sar
inc
mov
jbe
shrl
xor
js
xchg
xchg
shlb
iret
and
cmp
push
aas
test
loop
roll
sbb
mov
sti
jno
popf
andb
sub
add
sub
push
dec
arpl
out
lcall
push
push
test
xchg
adc
call
js
cld
xlat
push
adcb
ret
aaa
mov
out
xchg
push
mov
mov
pop
push
add
repz
push
test
fistpll
das
sub
cmp
in
mov
movsl
notb
push
in
sbb
or
cmp
xor
jmp
rorb
out
mov
stos
bound
sbb
lods
je
add
xor
pop
fldcw
divl
inc
mov
stc
fnsave
xor
dec
lods
daa
enter
dec
lds
lds
mov
push
int
lea
sahf
lret
lea
loop
cmp
dec
popf
xchg
push
mov
xor
add
adc
lods
push
in
fsubs
mov
pop
int3
addr16
dec
subl
sbb
cs
jmp
loopne
psrlw
jl
cwtl
push
sub
fsts
iret
gs
add
jbe
cmp
mov
cmpsl
ffreep
jl
popf
inc
les
rol
xchg
push
mov
mov
mov
jnp
or
sbb
xor
mov
adc
lods
xor
rcrl
sarl
push
lds
xor
pop
pop
shrb
pop
dec
and
mov
mov
push
sub
xchg
adc
and
ja
pushl
pop
jb
sbb
popa
popa
imul
or
and
loop
ds
std
sti
add
outsb
in
cmpsb
shll
adc
sub
dec
aaa
and
add
ljmp
or
or
mov
push
subl
in
add
imul
inc
jp
movhps
add
enter
mov
dec
xor
je
adc
rcrl
ss
and
pop
dec
jne
rorl
and
mov
popa
push
lock
rclb
add
rcpps
sub
sbb
aas
xchg
ljmp
sahf
nop
insb
adc
dec
jmp
ss
pushf
jno
sub
mov
clc
sub
sbbb
or
decb
fldt
cmovns
sbb
or
shld
sbb
and
mov
es
imul
fcmovnu
cwtl
cmpsb
aas
fmull
mov
rorl
fldl
jecxz
mov
call
add
ds
lret
mov
cmp
and
stos
add
push
out
fldl
lock
pop
sbb
xchg
cmp
scas
dec
jp
clc
rolw
and
pop
pop
adc
mov
outsl
jle
jo
lcall
int
test
sub
fstps
push
or
mov
fwait
mov
inc
xchg
sar
mov
xchg
pop
movsb
test
fcmovnb
add
xchg
or
jbe
mov
sti
es
jecxz
fcmove
or
inc
inc
cmp
push
aaa
add
iret
cmp
dec
xchg
add
shl
addb
pop
aam
or
lcall
cmp
jp
xchg
ljmp
jecxz
in
push
js
mov
aas
fstl
push
inc
and
mov
jecxz
sub
ja
fadds
push
ljmp
shrl
test
adcl
mov
push
or
lods
insb
mov
dec
jne
mov
cmp
sub
dec
mov
adcb
pop
dec
fidivrl
jle
sub
push
jg
inc
mov
inc
rolb
movsb
pusha
mov
lcall
push
cmp
insb
lea
lcall
or
xlat
in
repnz
sarl
push
lret
out
das
xor
cmp
xor
out
mov
xchg
dec
sub
sub
xor
aad
mov
xchg
mov
mov
es
ljmp
bound
les
and
stc
mov
int
jmp
mov
jl
or
sbb
xchg
and
pop
in
push
rclb
xchg
xor
movsb
jmp
inc
or
scas
fcoml
push
sub
sub
mov
addr16
mov
sti
pop
pop
fsubl
jb
sbb
cmp
and
cmpb
call
cwtl
sti
into
leave
xchg
mov
jle
ljmp
pop
repz
in
outsl
xchg
jo
movsl
sbb
lock
sahf
movsl
bnd
gs
sarl
mov
xor
pop
sbb
mull
jmp
hlt
sub
fidivrs
xor
xchg
mov
mov
dec
push
sahf
pop
in
push
sbb
push
xlat
and
pop
jno
shlb
in
rcll
and
addr16
push
leave
mov
mov
data16
xchg
outsl
popf
jp
and
jnp
fsub
lock
adc
outsb
inc
add
addr16
jg
inc
fdivrl
icebp
pop
outsb
test
mov
pop
inc
pop
leave
mov
jno
shlb
jg
je
push
je
mov
push
lahf
add
mov
shr
or
sbb
ljmp
sbb
lret
push
fildl
jnp
cmp
adc
pop
jne
sub
mov
call
jge
pusha
pop
pusha
icebp
cli
jl
add
xor
dec
fwait
mov
mov
xor
and
sahf
mov
stc
rcll
cmovae
jae
arpl
xchg
iret
sbb
out
mov
lahf
repz
jecxz
adc
pop
xor
jg
cmovae
jae
arpl
xchg
iret
sbb
out
mov
lahf
repz
jecxz
adc
pop
xor
jg
cmovae
jae
arpl
xchg
iret
sbb
out
mov
lahf
repz
loop
adc
pop
xor
jg
cmovae
jae
arpl
xchg
iret
xorl
mov
pusha
or
sbb
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
adc
add
xor
and
push
jb
sub
fcoml
mov
ret
lock
jecxz
adc
add
and
inc
inc
jo
pusha
arpl
xchg
mov
adc
repz
test
repnz
dec
and
imul
jo
mov
mov
movsl
mov
push
inc
dec
test
mov
dec
mov
out
mov
cmc
xchg
cmp
push
pmulhuw
mov
movsl
fistpll
sarb
adc
imul
pushf
xchg
lock
scas
out
in
inc
test
ss
cltd
add
push
pop
push
addb
mov
ret
cmp
push
adc
sub
xchg
ret
cmpb
pop
das
add
icebp
jns
mov
sub
ret
lods
jae
mov
mov
add
xchg
mov
in
sbb
sbb
jecxz
xor
call
mov
cmpsb
push
mov
adcb
dec
adc
xor
and
mov
cmp
push
jp
mov
fwait
stos
nop
mov
ret
xchg
jb
inc
xor
aas
add
pusha
push
nop
cli
sar
aad
mov
test
inc
inc
inc
cmp
and
maskmovq
shl
mov
fsub
test
lahf
mov
push
push
jae
add
inc
inc
jo
pusha
arpl
mov
mov
lock
adc
add
xor
and
push
push
inc
inc
jo
pusha
arpl
mov
mov
lock
adc
cmpsb
test
adc
xor
iret
ret
add
mov
sub
inc
addr16
outsl
mov
mov
push
out
xchg
aad
mov
loop,pt
push
jl
xabort
into
aam
das
sbb
std
dec
dec
mov
andl
adc
jl
sbb
loopne
mov
xchg
lods
sub
cmp
cmp
sub
aam
pop
dec
adc
push
imul
js
mov
int3
lret
push
lods
pop
pop
jp
lahf
cmpsb
push
mov
fs
in
in
jns
inc
push
inc
loop
aad
aas
mov
push
in
fwait
movsl
pop
sbb
dec
push
and
arpl
rcl
nop
lret
dec
add
push
xor
jg
inc
stos
stos
jge
pop
mov
out
shll
or
popf
push
je
add
inc
mov
or
cli
insl
xchg
add
test
and
in
pop
ror
jo
inc
insl
mov
jmp
pop
lretw
movsb
mov
repnz
xchg
mov
mov
popf
mov
mov
in
les
test
out
push
loop
jmp
lods
dec
clc
ds
je
add
xor
push
pop
in
pop
mov
sbb
insb
mov
jge
pop
push
and
mov
mov
lahf
xlat
scas
push
xor
add
scas
mov
roll
mov
aas
mov
jle
xchg
lock
iret
jmp
call
loope
push
mov
mov
jnp
push
lahf
iret
mov
lcall
cltd
fwait
in
jnp
push
scas
sub
and
or
jg
adc
or
push
cmp
into
xchg
scas
inc
mov
inc
out
jp
rcr
mov
rcrb
dec
push
xchg
sti
fcom
pop
mov
inc
jb
inc
mov
lods
in
jp
adc
xor
xchg
pop
jecxz
pop
pop
fwait
imul
mov
ror
cmpsl
jle
xor
and
fistl
arpl
xchg
dec
or
sub
cmp
push
aad
popf
in
inc
mov
sub
ds
js
mov
pop
lcall
test
mov
loopne
gs
lods
xchg
cmp
loopne
mov
sbb
mov
out
lahf
push
cmp
scas
iret
xlat
sub
sbb
clc
dec
int
mov
add
cmpsb
jo
lahf
pop
adc
add
or
out
aaa
insl
test
cmp
bound
les
imull
repnz
mov
push
dec
push
dec
bound
cmpb
dec
xchg
out
mov
mov
mov
cwtl
xchg
je
aam
fcmovu
or
ret
les
imul
in
xchg
sub
mov
ss
pop
fs
icebp
dec
and
xor
push
ljmp
jp
fcompl
dec
inc
dec
inc
or
or
fwait
imul
push
cmp
mov
into
jl
add
imul
adc
or
clc
cld
or
lret
lret
dec
sahf
mov
pop
or
clc
add
sbb
xchg
xchg
subb
adc
gs
idivb
aaa
cltd
mov
pop
jmp
testl
push
push
mov
addr16
ljmp
jp
dec
mov
dec
in
mov
bswap
fldl
jmp
add
mov
jp
xchg
jne
dec
push
mov
jnp
push
gs
dec
mov
imul
mov
fldenv
repnz
sahf
stc
repnz
jo
sub
hlt
xchg
fists
insl
jg
jo
sub
xchg
lret
pop
adc
xchg
xchg
add
cld
push
loop
dec
sbb
xor
and
add
or
daa
cld
sbb
sbb
push
adc
dec
lea
clc
shlb
outsb
mov
icebp
ljmp
outsl
sub
ret
xchg
xor
movsb
xchg
jo
pusha
sbb
pop
xchg
out
test
push
insl
stos
mov
pop
sub
jle
and
sbb
xor
inc
nop
inc
push
std
cmpl
adc
cwtl
fbld
fs
jmp
fs
push
push
ret
jbe
subb
push
jno
in
sub
jbe
movsl
jmp
scas
mov
fimull
je
ficompl
sbb
insl
lods
popa
adc
in
cmpsb
cwtl
adc
sarb
mov
push
cmc
adc
pop
or
mov
adc
test
out
rorb
inc
and
aad
outsb
adc
sahf
mov
inc
xor
lret
sub
and
mov
sbb
xor
adc
cmp
rorb
cltd
jl
mov
add
test
adc
ficompl
cmc
out
mov
pop
insl
test
xor
popa
push
push
jae
xchg
mov
call
add
adc
pop
lea
add
cmpsl
fsubrs
cmp
mov
xchg
push
stos
arpl
xor
hlt
dec
inc
pushf
xchg
shrl
sahf
mov
or
or
or
jo
jnp
pop
xchg
xchg
cmpsb
dec
inc
or
add
cmp
add
stos
cwtl
pop
ds
fstpl
mov
shll
lods
rorl
push
jo
icebp
adc
jl
pop
lods
jge
mov
pop
add
jae
inc
push
inc
cmp
les
loope
inc
or
subb
push
cmp
addl
and
xchg
and
xor
fimuls
xchg
in
mov
aam
rorb
jecxz
addr16
std
es
shlb
jbe
fs
jo
mov
mov
mov
lods
pop
push
lock
stos
shl
cmp
pop
in
sub
adc
std
and
out
xor
mov
pop
pop
cltd
jmp
ret
fistl
lock
fs
pop
dec
jle
shll
xchg
cmpsl
icebp
ss
in
or
sbb
lods
add
std
jmp
std
fisubrl
pusha
daa
push
xchg
xlat
icebp
jg
lock
pop
and
aaa
xchg
xor
out
into
pop
psubsw
sub
dec
in
cmp
mov
jp
rcll
push
insb
inc
or
dec
adc
mov
nop
adc
movsb
mov
in
shrb
push
out
in
scas
mov
jle
repnz
mov
push
enter
call
aaa
pop
pop
sub
scas
jo
jae
fldenv
cmp
stc
pop
test
mov
or
xor
mov
outsl
inc
jecxz
fs
cmp
sub
movsl
push
xchg
mov
adc
mov
std
jae
mov
jbe
sbb
and
mov
or
mov
cli
push
cmp
mov
out
pop
es
mov
call
repz
mov
fstl
push
pop
pop
add
repnz
out
rcr
test
gs
add
insl
dec
dec
sbb
lods
inc
test
sub
inc
shl
jbe
sahf
mov
xchg
sub
cmpsb
jne
xlat
imul
rolb
adc
rcrb
mov
mov
dec
faddl
or
sahf
dec
nop
xchg
xor
roll
mov
shl
icebp
mov
je
loope
enter
out
xlat
mov
pop
mov
push
mov
jae
sub
ret
cmp
insb
arpl
jo
add
sbb
out
push
pop
cltd
fadd
in
test
inc
jp
jge
std
mov
insl
popa
pop
push
cmpl
adc
cs
frstor
mov
mov
mov
int
push
pop
jmp
and
inc
xchg
mov
loop
lret
lods
fcompl
arpl
mov
sub
add
dec
imul
mov
sahf
push
addr16
fidivs
inc
inc
out
loope
nop
sub
xchg
das
pop
add
jbe
add
out
push
sub
test
jnp
fbstp
cmp
pop
sarl
and
jno
or
mov
pop
jne
pop
jnp
clc
xor
mov
test
mov
out
dec
mull
in
push
imul
push
xor
lds
insl
cli
lods
xchg
fbld
pushf
push
push
push
in
sub
es
cli
cmc
clc
xor
popf
fwait
je
and
sub
lahf
inc
in
adc
out
sbb
mov
sti
push
pcmpgtd
mov
pop
push
test
sbb
jne
rorl
add
jg
jne
aas
fidivl
push
mov
test
jae
fsubs
push
bound
leave
pop
lods
ret
cmp
inc
jp
orb
cli
fisttpl
hlt
imul
and
inc
arpl
fs
cld
cli
nop
gs
push
ret
push
popa
inc
pop
cltd
sbb
hlt
xchg
in
bound
div
push
into
test
cld
adc
xchg
scas
movaps
xor
jo
mov
pop
orl
adc
mov
inc
pop
mov
mov
out
scas
and
pop
in
divb
xlat
dec
cmp
ficompl
popa
or
add
mov
aam
jl
mov
loop
into
movsl
add
push
mov
lock
repz
dec
fidivrs
lods
pop
mov
arpl
es
loop
pop
inc
cmpsb
faddl
push
pop
jge
xchg
dec
and
dec
lret
xchg
in
ss
je
xor
cmp
rcrb
cmp
adcb
test
mov
sbb
scas
or
pop
mov
cmp
in
aaa
test
jecxz
iret
jmp
adc
arpl
mov
das
pop
jmp
mov
popf
mov
push
dec
iret
lods
aas
lcall
lret
dec
lahf
dec
test
xchg
out
in
sub
mov
test
adc
or
clts
mov
pop
push
cld
sbb
dec
mov
sub
je
stos
cmp
fsubs
jnp
adc
mov
adc
lods
addr16
repz
xchg
adc
inc
sub
test
inc
andb
dec
pushf
mov
imul
cmp
loop
testb
aad
loop
pop
ljmp
or
mov
ja
or
cld
test
pop
xlat
lds
lret
inc
dec
fmul
cmp
pop
hlt
inc
xchg
cmpsb
leave
fbstp
in
nop
jecxz
call
aaa
dec
out
stos
or
inc
mov
mov
stc
stc
out
jb
xor
or
mov
dec
jb
insl
jle
dec
dec
sub
adcb
lahf
cmp
mov
sbbb
out
pop
movsl
es
xchg
push
and
mov
lock
popl
mov
mov
sbb
in
dec
jp
push
pop
mov
test
mov
or
or
movsl
arpl
stc
add
jbe
rorl
or
mov
cwtl
push
fwait
adc
clc
dec
add
testl
inc
ret
xchg
xor
in
test
pop
call
mov
cmp
jmp
adc
mov
movsb
inc
push
lods
loop
push
imul
mov
ja
inc
mov
adc
les
push
jns
push
out
fidivrl
cli
or
pop
cmp
xchg
nop
jp
cwtl
cwtl
jns
bound
nop
sbb
nop
sub
xchg
orl
inc
paddusb
sbb
iret
fs
in
divb
rcrb
pop
inc
mov
nop
sub
cwtl
or
inc
insl
push
mov
test
fbld
pop
rcrb
repz
jmp
jp
in
sti
data16
out
pusha
jae
sbb
aam
aam
sub
fsubl
dec
idivb
movsl
push
pushf
mov
add
ljmp
push
lret
fisubrl
movb
or
sbb
jae
ds
cmp
xchg
ljmp
jg
inc
fiadds
loopne
add
xchg
divl
std
lds
mov
bound
xchg
add
sub
ja
xchg
mov
push
movsb
stos
mov
enter
imul
cmp
mov
int
iret
test
pop
mov
lret
pop
sub
scas
xchg
into
xor
inc
lret
jge
fs
std
xor
and
push
insb
mov
fcoms
mov
movl
ss
out
hlt
mov
mov
jecxz
sbb
dec
fidivrl
xorl
out
mov
or
in
sbb
add
fsin
or
mov
mov
enter
loope
xchg
cmc
xchg
pusha
pop
out
inc
push
cmp
adcb
int3
int3
addb
adcl
js
xchg
jae
cmp
push
lret
dec
cmpsl
ja
push
push
mov
jnp
dec
jne
ja
and
mov
adc
dec
jle
nop
sbb
int
push
cmp
in
movsb
add
bound
push
inc
popf
outsl
ret
xor
xchg
jecxz
xor
push
int
scas
mov
mov
pop
fucomip
jcxz
dec
imul
push
jb
scas
jge
push
jne
call
lcall
adc
clc
sarl
mov
sub
pop
sub
mov
jl
jns
stos
mov
xchg
enter
xor
enter
xchg
in
not
sub
bound
mov
rorl
hlt
xchg
mov
xorb
jno
inc
or
mov
iret
xchg
mov
push
lea
or
pop
jl
mov
inc
rorl
loopne
mov
int3
jl
out
mov
pop
xor
xlat
xchg
jg
ror
dec
andb
cli
and
sti
data16
pop
fnstcw
sub
mov
pushf
rcrb
jo
inc
or
xor
lcall
and
push
cli
mov
inc
aam
arpl
xchg
out
cwtl
fs
mov
notl
pop
xor
adc
cmp
stc
lock
sub
int
push
pop
xchg
lahf
mov
les
mov
fbstp
sbb
in
sti
push
dec
add
add
addr16
ret
shl
ss
cmp
and
pop
jno
lcall
sub
stc
orl
jle
stos
popf
inc
sub
out
mov
inc
and
push
in
push
lea
sbb
nop
test
rcrl
and
shrl
rcrl
aas
dec
push
mov
fldl
inc
sub
int
cmpsb
or
mov
sub
sub
fnclex
fmul
mov
lods
stos
pop
adc
cmc
scas
test
lcall
lea
pushf
dec
jmp
xchg
mov
enter
jl
jle
les
or
xchg
ds
xor
lret
aaa
popf
pop
fcmovnb
inc
cli
repz
jns
jle
and
ljmp
aad
insb
repz
mov
cmp
std
fildll
hlt
xchg
icebp
sub
fbld
inc
sarb
scas
jmp
push
adc
cmp
xor
fbld
mov
out
cld
daa
xlat
rolb
dec
adc
jmp
jno
xchg
das
or
inc
in
call
cmp
je
and
jmp
test
lahf
call
es
mov
push
and
scas
ret
mov
iret
aad
mov
xlat
ljmp
imul
dec
insl
or
dec
pop
out
lret
jmp
xor
faddl
jg
enter
inc
iret
adc
cmp
shrb
negl
enter
sbb
lret
rcrb
pusha
fstl
arpl
fcoms
int3
stos
push
jge
xchg
push
popa
pop
mov
pusha
leave
repnz
xchg
sbb
fmul
daa
dec
jge
or
sbb
mov
mov
jns
out
jmp
pop
test
pop
mov
lods
sub
hlt
xchg
push
mov
inc
fwait
and
in
and
pop
dec
in
mov
push
imul
mov
rorb
pop
divb
sub
loopne
scas
pop
push
mov
jge
inc
mov
pminub
mov
loop
pop
insb
dec
fisttpl
or
and
mov
dec
add
lahf
jle
jnp
mov
imul
sti
jmp
mov
dec
dec
dec
shl
mov
nop
push
sbb
hlt
pop
pop
jo
jmp
adc
push
inc
jmp
stos
shll
les
pop
mov
push
mov
hlt
shlb
out
jns
sub
fdivrl
mov
push
ret
stos
aam
in
daa
out
cmc
int3
add
lock
std
rcr
hlt
iret
sub
sub
or
ret
sbb
loope
subl
pop
jecxz
outsl
inc
pop
in
jmp
mov
mov
stc
or
push
mov
mov
movl
test
cmpsl
and
pop
cmp
xor
xchg
ds
inc
sbb
out
ja
rorl
loop
mov
add
jl
arpl
fs
pop
jae
out
push
mov
sbb
fimull
pushf
pop
stos
stos
cmp
jnp
dec
int
cmc
pop
std
add
mov
mov
shlb
sahf
roll
add
rcr
dec
test
push
xor
fiadds
mov
dec
xchg
push
mov
in
mov
ds
jnp
mov
push
cs
pop
sbb
mov
and
xlat
xchg
mov
pop
sbb
out
sub
test
jne
movsl
ja
push
jle
sbbl
lods
loop
addr16
lahf
xlat
xchg
push
mov
push
lcall
pusha
cmp
xchg
and
add
adc
test
push
push
repz
push
lret
mov
cmp
inc
mov
sub
jno
jno
or
imulb
cmp
fldt
xor
mov
mov
lods
dec
icebp
ret
insb
imul
mov
outsb
leave
int
sub
xchg
mov
lock
fcoms
push
movl
cmp
sub
xor
mov
ret
divl
subl
jp
daa
sub
cmp
inc
pop
mov
faddl
mov
gs
xlat
inc
sbb
pop
out
loopne
in
out
push
dec
dec
shll
in
or
mov
popa
lods
fcomp
jae
leave
push
jno
or
int
inc
mov
and
hlt
xor
je
push
cltd
fs
mull
xor
mov
cmp
cmc
test
mov
enter
fs
and
and
out
outsl
pop
xor
dec
dec
inc
cmp
bound
push
sahf
pop
sahf
jp
popa
cmp
loopne
aad
inc
cmp
adc
or
test
xchg
in
lret
fwait
or
dec
push
leave
nop
movsl
lcall
cmp
mov
repz
sbb
mov
xor
subl
dec
mov
pop
lds
push
push
sub
push
push
rcll
mov
dec
xchg
nop
inc
popf
pop
aam
dec
xorl
add
adc
xchg
ss
jno
scas
repnz
sbb
lahf
inc
cmp
or
fmull
sub
out
adc
xchg
rorl
lret
aaa
jmp
jno
xor
pop
jnp
or
mov
fdivrs
or
add
jnp
jb
loop
cltd
mov
imul
clc
sub
test
arpl
adc
not
cmpsl
xchg
mov
push
imul
icebp
push
sub
popf
inc
push
les
sbb
xchg
testb
sub
popa
mov
shll
or
or
inc
mulb
out
push
cmc
rorb
es
dec
mov
xor
mov
mov
inc
fs
es
repz
mov
or
rclb
adc
ja
sub
int3
cmp
pushf
xchg
test
pusha
xchg
ss
clc
and
cwtl
imul
mov
filds
movsb
mov
rcrl
pop
lahf
jno
lods
stc
xlat
mov
sbb
sub
jg
loopne
int3
xor
in
xor
ss
movsl
shll
stos
jmp
inc
mov
lea
rcr
fdivs
push
mov
push
out
mov
cmc
lcall
movsl
xor
jnp
mov
lcall
mov
out
pop
imul
out
cmpsb
stos
dec
pop
cmp
pop
repnz
pusha
test
inc
aas
mov
xlat
mov
adc
mov
add
mov
mov
cmp
nop
xchg
cmp
jno
test
insl
push
mov
fstpl
cmovs
sbb
shr
or
xor
xor
ret
pusha
loope
sub
or
xor
mov
add
and
push
push
inc
inc
jo
pusha
arpl
mov
mov
lock
adc
add
xor
and
push
push
inc
inc
jo
pusha
arpl
mov
mov
lock
adc
xor
push
xor
and
push
inc
inc
jo
mov
addl
mov
lock
add
pop
add
add
push
push
push
inc
jo
loopne
nop
xchg
jg
sbb
dec
cmp
or
sbb
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
mov
not
mov
call
inc
fistl
push
loop
bnd
add
ss
into
jb
inc
notb
and
pushw
loop
rorb
jbe
push
int
mov
ret
sbb
push
jb
ljmp
mov
dec
or
cmp
es
dec
fistl
inc
xchg
xchg
sbb
aaa
addl
mov
loope
dec
imul
push
aas
arpl
pop
int3
lret
arpl
sbb
and
lea
push
ret
mov
andl
pop
xchg
arpl
ja
pop
jbe
push
jno
or
movsb
mov
cltd
dec
mov
sbbb
andl
ljmp
mov
push
sbb
mov
mov
leave
roll
lcall
adc
adc
add
push
mov
xchg
inc
insl
inc
mov
push
push
and
out
mov
cmp
push
dec
arpl
and
lcall
fmuls
xchg
mov
les
shrb
data16
dec
adcb
xor
jl
push
jecxz
mov
xlat
ja
movsb
pop
mov
mov
mov
push
ret
jno
daa
pop
xor
dec
testl
jle
pop
movsb
add
jae
push
jecxz
stc
mov
in
xchg
adc
xor
loop
bnd
push
mov
ss
jb
inc
notb
and
adc
push
bnd
push
mov
ss
bound
movsl
dec
loope
jle
mov
rcrb
and
lcall
test
fidivrl
enter
aad
cmpsb
cltd
out
xor
addr16
in
cli
mov
push
mulb
mov
gs
or
fstps
or
into
inc
stos
xor
sahf
pop
pop
mov
dec
and
jb
lods
cmpsl
and
in
subl
iret
shrb
push
add
inc
or
test
inc
xchg
mov
xorb
popa
dec
imul
or
add
jl
xor
or
pop
movb
mov
rcr
hlt
add
pop
xchg
pop
push
dec
xor
jnp
add
fldl
sahf
imull
imul
inc
jno
je
frstor
popa
repz
aam
mov
push
jns
outsl
inc
sarb
sbb
jae
mov
icebp
enter
dec
xor
rcl
cmc
out
cmp
push
loop
inc
jg
cmc
cmpsl
cmpsl
mov
outsl
stc
shr
rcll
fnsetpm(287
xor
or
mov
jnp
xchg
adc
xchg
loope
xchg
fs
xchg
mov
popf
cwtl
add
pop
inc
ja
cmp
fisubrs
sbb
pop
pop
cli
and
ret
mov
test
insl
flds
fidivrs
hlt
into
dec
lcall
mov
pop
jp
dec
popf
jmp
int
mov
ja
test
dec
xlat
int3
pop
push
jp
sahf
scas
jo
jge
roll
mov
in
fwait
mov
js
mov
aaa
lret
add
in
pop
push
add
pop
xor
scas
and
jmp
jo
ficoml
pop
hlt
adc
imull
jp
cmpsl
outsb
hlt
dec
sbb
shlb
ss
rcr
imul
movsb
out
or
notl
pop
xchg
ss
add
inc
cmpsb
lock
loopne
fcomip
dec
xlat
js
push
stc
cltd
mov
js
pop
fisttps
mov
dec
mov
push
pop
imul
xchg
insl
xchg
rcrl
out
xchg
dec
mov
mov
outsl
shl
lret
adc
dec
jae
adc
enter
icebp
cmp
push
sub
lea
sub
xchg
clc
stos
push
dec
mov
sub
fs
xchg
cs
fxch
pop
inc
cmc
inc
add
insl
inc
stc
push
or
into
arpl
in
loope
rolb
cmp
in
cltd
pushf
xlat
xchg
cmp
jnp
inc
mov
ret
ficompl
mov
jb
cmp
outsb
cltd
in
bound
jnp
sub
enter
mov
push
mov
addr16
sbb
push
rorl
int3
push
call
mov
mov
pop
mov
xchg
mov
xor
mov
mov
int
cmpsb
es
lret
bound
jae
pop
fstl
adc
stos
pop
mov
rcrl
jb
jp
pop
scas
cmpsb
sbb
js
in
aaa
xchg
ret
push
xor
push
shll
xor
sub
cmp
xor
fisttpll
lret
pop
push
imul
jp
dec
and
push
fidivs
mov
into
das
int
or
fstpt
into
adc
inc
loopne
aaa
xchg
mov
sbb
jecxz
ffreep
loope
clc
mov
or
xchg
mov
imul
out
lret
xchg
fildll
xchg
add
loope
mov
mov
and
jae
stos
mov
mov
mov
scas
xlat
out
ret
sbb
std
and
push
xchg
popf
sbb
inc
cmp
int
outsl
add
and
jns
xor
mov
push
add
push
sbb
rol
pushf
inc
inc
cs
mov
push
pop
xchg
push
xor
sub
add
inc
scas
xchg
faddl
aas
xchg
pop
xor
fsubl
int
in
sti
pop
lret
sub
fldl
dec
add
lret
jmp
in
xchg
jmp
scas
push
call
in
pop
xor
das
repz
movsl
movsl
clc
cltd
push
push
jg
mov
xor
addr16
mov
and
adc
jmp
mov
outsb
mov
mov
inc
xchg
push
cmp
jbe
ljmp
ret
mov
mov
push
xor
xor
push
sub
mov
loopne
and
sub
add
out
cld
sub
lahf
pop
dec
inc
dec
xchg
in
lahf
pusha
dec
xor
push
mov
roll
sub
adc
dec
pop
mov
sbb
or
sbb
or
pop
les
aam
outsl
les
sbb
and
movsb
push
test
in
adc
inc
and
push
push
inc
or
lds
add
shll
jl
lahf
sub
or
call
mov
in
xchg
cmp
ljmp
clc
mov
scas
mov
repz
ds
mov
jno
sub
loope
ret
ljmp
call
mov
and
mov
rolb
sbb
jle
rcl
adc
imul
aam
mov
popf
jge
push
out
loop
jnp
dec
sbbl
mov
jecxz
stos
and
xor
orb
hlt
out
xor
adc
adc
daa
mov
xchg
jae
arpl
setle
add
fadd
xor
hlt
pop
add
leave
int
test
pushf
mov
icebp
jb
xchg
mov
lahf
pop
jmp
or
and
addr16
cwtl
nop
xchg
inc
jecxz
loop
gs
lcall
push
mov
insl
inc
dec
int3
and
pop
std
mov
scas
push
mov
jbe
sbbl
jne
xchg
pop
mov
mov
cmp
jge
out
rol
notl
sbb
imul
push
cmp
push
fistl
ljmp
int
and
mov
sahf
xlat
pop
sbb
or
fs
fwait
je
lret
mov
sub
push
adc
mov
sbb
mov
jecxz
and
stos
insb
cmpsb
fnstcw
jbe
jp
rorl
xor
xor
xorb
sub
mov
xchg
inc
push
loopw
lret
xor
std
mov
outsb
mov
add
stos
dec
cltd
mov
xorl
into
sbb
cmp
lret
cmp
jmp
dec
ret
loop
inc
jle
fdivrp
addr16
rcrb
sub
mov
ret
inc
xor
sub
popf
jmp
movsb
inc
pop
data16
inc
pop
xchg
data16
lret
jnp
sbbl
sahf
xchg
in
out
add
add
xchg
lcall
dec
jge
mov
out
cmpsb
movsl
out
icebp
dec
dec
xchg
inc
mov
js
inc
mov
roll
test
nop
int
loop
or
xor
dec
pmulhuw
jmp
cmp
daa
fsts
jbe
stos
add
aad
lods
push
xchg
add
mov
xchg
xor
test
push
push
xchg
push
or
sahf
lods
lahf
repnz
dec
testb
aam
jnp
iret
cwtl
dec
mov
sar
das
mov
test
or
repz
sub
cmp
movnti
mov
dec
adc
push
cmp
adc
sub
imul
or
jns
cmpsb
jo
inc
loop
aaa
js
cmp
shr
cmp
das
xchg
sub
int
pop
mov
fstl
fisubrl
push
int3
sbb
xor
mov
sti
dec
sub
loop
sbb
mov
mov
ret
pop
fwait
mov
and
jb
cs
and
and
cmp
pop
lea
out
mov
jp
test
dec
mov
fwait
out
jae
cmp
sub
in
aas
push
or
push
dec
outsb
popa
adc
mov
xchg
sbb
pop
jl
sbb
shll
in
and
mov
adc
xchg
in
shll
test
xor
test
movsb
imull
je
inc
out
pop
out
sbb
and
dec
dec
jle
xchg
imul
pushl
cmp
ret
pop
scas
insl
mov
lret
push
adc
and
jnp
mov
int
ljmp
dec
pushf
into
aad
iret
data16
mov
mov
jmp
repz
lods
cld
sub
or
aam
push
movl
fs
cmp
test
out
jo
mov
lahf
js
jle
pop
test
inc
lret
add
jne
dec
mov
lods
jo
punpckhdq
mov
mov
push
or
movsl
cltd
cmp
jo
jb
or
lahf
call
movsl
fstl
test
mov
ret
xor
push
test
in
xchg
push
aad
leave
addr16
cmp
addr16
bound
mov
adc
imul
mov
adc
nop
ds
pop
mov
jle
mov
cmp
lods
dec
pop
fadds
fcmovnu
adc
enter
mov
xchg
cmpsl
mov
leave
jno
add
dec
dec
push
out
pop
push
gs
mov
loop,pn
add
jae
sub
fs
lock
fdivs
outsl
dec
jae
push
push
or
int
jg
push
loop
mov
push
fisubs
pushl
inc
cmc
inc
clc
repz
fdivr
test
mov
movsb
dec
cli
iret
pop
pop
jmp
cmp
mov
lods
flds
out
rorb
sbb
mov
and
inc
mov
test
lret
jb
scas
xor
daa
pop
cmp
cwtl
mov
js
shl
insb
sahf
orb
dec
data16
cmp
incb
aad
pop
xor
mov
cs
shrb
sahf
add
jge
sbb
nop
fldln2
out
push
push
push
aaa
add
adc
fistpl
adc
mov
iret
je
std
sbb
push
lret
test
mov
mov
and
xchg
aas
mov
mov
mov
enter
jg
jle
js
cld
add
in
jo
sub
in
pextrw
aad
jno
jg
out
dec
es
pusha
add
insl
out
fbstp
or
sub
add
adc
arpl
test
mov
sub
sarb
push
inc
in
sbb
pop
aas
ja
outsl
dec
push
subb
popa
in
dec
mov
std
ljmp
pop
sbb
loop
push
aaa
ret
leave
push
xor
push
jmp
xor
inc
pop
dec
adc
paddsw
ljmp
jp
mov
and
mov
sahf
push
stc
jns
jne
dec
into
movsl
pusha
in
pushf
popf
cltd
pop
adc
push
adc
test
bound
fstpt
mov
stos
mov
inc
js
pop
cli
mov
push
cltd
scas
mov
sbb
xchg
data16
ljmp
insb
lea
in
andb
shlb
jl
ret
sbb
nop
cmpb
ret
add
out
fnstsw
nop
lock
push
fidivs
lock
mov
iret
jg
int3
cli
xlat
and
adc
loopne
inc
js
pop
pusha
or
insl
add
inc
sub
jnp
fdivrl
jmp
add
cs
ljmp
dec
mov
cmpsl
and
cmp
int3
mov
mov
pop
or
pusha
or
ret
lcall
mov
fdivrl
push
inc
pushf
insb
sub
jnp
sub
mov
lcall
movsb
lea
repnz
cmp
rorl
and
cs
push
fwait
mov
fnstcw
jge
std
shll
push
sub
test
jge
add
dec
xor
ret
xchg
addr16
pop
jb
lcall
out
or
sub
inc
push
push
stos
stos
aas
inc
sbb
push
and
mov
gs
movsb
inc
bound
xchg
cwtl
stos
and
notl
or
lds
fistps
nop
sbb
sbb
out
pop
cld
cmpsb
push
adcl
mov
push
inc
sbb
in
pop
hlt
mov
dec
lret
jne
fbstp
inc
cmp
out
add
pop
loope
mov
pop
and
mov
loope
or
sub
lret
or
sbb
ja
xor
popf
and
mov
mov
jge
pop
cmp
jmp
push
test
xchg
mov
add
sub
clc
pop
cmpsl
scas
sub
vmaxpd
jle
inc
xor
adc
jl
loop
xchg
es
ja
repz
or
push
sbbl
cmpsl
add
ss
aaa
mov
mov
cmp
js
dec
das
sub
cmp
lods
pop
sbb
ds
mov
xor
leave
mov
dec
mov
mov
imul
rcrl
mov
mov
sbb
fcomps
xor
movsl
inc
lea
sub
xor
lods
and
pop
jle
adc
xchg
push
fcmovu
stc
orb
cmpsb
jae
shlb
out
sub
mov
cmp
xlat
mov
adc
sub
aas
punpckldq
ret
mov
jg
in
aam
cmp
loopne
jns
xlat
into
insb
adc
inc
xchg
sub
adc
push
pop
pushf
sbb
add
and
icebp
and
pop
repz
ljmp
lods
dec
mov
mov
pop
test
shl
sub
add
pop
fwait
sbb
in
dec
adc
and
imull
mov
add
sbb
sbb
aaa
sbb
out
enter
sbb
sub
adcb
xor
ljmp
mov
data16
shlb
inc
jmp
push
xchg
in
and
ficoml
pop
mov
std
fidivs
in
pop
xor
mov
insl
mov
inc
sarb
popa
into
les
push
and
pushf
lcall
rcll
pop
xor
inc
bound
xchg
jle
adc
incb
push
xchg
add
and
fisubl
jp
adc
mov
sbb
cmp
or
jb
stos
call
xor
pop
cltd
stos
cmp
in
flds
inc
jge
jb
scas
pop
call
jp
and
aaa
add
jmp
icebp
sub
ja
outsl
inc
mov
sbb
nop
aas
mov
xor
stos
cmp
xchg
mov
push
js
into
inc
fadd
into
cmp
pop
adc
dec
mov
sbb
jmp
dec
fdivrs
and
push
xor
cmp
mov
sub
mov
dec
mov
add
cmp
mov
nop
fiaddl
pop
insb
stos
and
push
sbb
sub
cmpsl
jge
pop
in
js
pop
inc
xchg
xlat
push
gs
mulb
rorl
xchg
out
lahf
push
push
adc
imul
add
mov
cmp
daa
insb
inc
mov
lret
mov
and
pushf
mov
mov
into
sarb
lret
sub
test
jmp
sub
and
pop
inc
mov
inc
pop
mov
xchg
lret
int3
jno
icebp
push
cmp
dec
repz
cmp
mov
and
jbe
xchg
pop
cli
xchg
pop
aad
dec
or
loopne
inc
cld
xchg
orl
int
cmp
inc
dec
jnp
or
dec
test
cmp
xchg
xlat
sarl
ja
fimull
das
ret
inc
xchg
or
jp
pop
mov
int3
mov
cmp
mov
xchg
adc
mov
pop
out
pop
insl
and
insb
cld
iret
sub
scas
shlb
lret
and
jmp
lret
inc
push
lods
daa
in
or
cmp
ret
mov
dec
std
scas
addb
sbb
arpl
jmp
cmp
jb
sbb
addr16
push
imulb
dec
mov
inc
mov
aas
jae
mov
decl
xchg
sti
mov
fs
and
scas
ret
clc
sub
push
in
mov
mov
add
and
stos
nop
in
adc
ds
scas
clc
jo
xchg
out
xorl
nop
mov
cmpb
mov
sbb
arpl
lods
lret
std
sar
cmp
push
ss
jbe
pop
and
jno
inc
push
jg
dec
ljmp
in
test
jle
push
gs
jae
imul
xor
out
nop
pop
mov
mov
leave
jge
xlat
rcrl
mov
loopne
jno
scas
or
addr16
repz
mov
add
insl
inc
fs
jnp
mov
sub
js
lods
and
inc
in
jnp
pop
push
jle
in
xchg
add
cli
jb
inc
addl
adc
rclb
inc
loop
inc
adc
scas
std
call
jnp
rorl
add
fwait
stos
repz
aam
jbe
mov
dec
hlt
scas
mov
out
mov
fsts
fadds
movsl
loope
in
pop
int3
or
shrl
repz
ret
adc
push
cmp
popf
inc
mov
dec
push
lret
jne
fs
arpl
pop
lret
rcrl
rcrb
insb
rcrl
cld
cmp
ds
sbb
inc
push
fs
popa
mov
and
jp
xchg
mov
pop
bound
xor
data16
out
out
pop
jp
push
call
mov
mov
leave
mov
aaa
cmpsl
sti
jl
dec
adc
mov
aam
jbe
xor
adc
or
or
test
push
mull
mov
stos
orb
dec
lea
push
loopne
out
int3
mov
mov
in
pop
aaa
repz
loop
add
cs
or
jnp
ret
jbe
pop
and
dec
jmp
lods
fnsave
hlt
push
push
inc
inc
out
or
pop
add
test
daa
xchg
std
adcl
mov
fldenv
push
jb
lret
xchg
lea
test
pop
stc
test
mov
inc
daa
inc
lret
enter
movsl
xor
and
loope
cmp
cmc
push
xor
sbb
xor
fwait
es
or
or
jae
inc
rorl
jbe
testb
fsts
mov
pop
adc
das
xchg
xchg
sbb
mov
dec
jle
lret
dec
and
sub
fildl
push
mov
pop
cmp
jb
addb
call
mov
pop
xchg
jg
out
js
xlat
popa
pop
bound
orl
adc
outsl
mov
ja
sahf
dec
enter
stos
dec
shl
icebp
mov
mov
ljmp
fs
mov
lret
sbb
cmpsb
inc
pop
mov
fistpl
arpl
pop
movsl
iret
add
jno
clc
inc
in
loope
inc
scas
mov
mov
ret
mov
or
je
pop
sbb
iret
xchg
mov
cli
into
jmp
add
push
sbb
and
add
leave
in
push
and
mov
mov
jne,pn
iret
xlat
rcrb
fcompl
and
adc
jle
lahf
mov
add
mov
adc
jno
popf
jmp
push
jbe
sbb
out
loop
je
jb
hlt
lret
stos
repnz
pop
mov
cmp
les
adc
out
adc
mov
movsb
arpl
aaa
mov
pushf
in
std
das
mov
outsl
int3
fbstp
inc
hlt
das
mov
aam
jno
xchg
in
mov
das
mov
lock
mov
lret
pop
sbb
jnp
jge
subl
fwait
xlat
cld
enter
push
mov
dec
ljmp
xor
sbb
cmp
pop
cmpsb
fisttpl
jle
inc
pusha
outsb
scas
or
jg
outsl
mov
mov
push
xchg
ds
lock
pop
fisttpl
xchg
mov
pushf
push
inc
jle
inc
mov
lret
dec
sets
sbb
xor
pop
loop
lret
aad
pop
cmp
fldcw
sub
sbb
adc
cmpsb
and
pop
pop
scas
mov
enter
pop
add
lds
adc
sbb
stc
lret
and
mov
push
addr16
sti
daa
add
mov
popa
ds
ja,pn
ret
push
test
call
cltd
push
sarl
outsb
insl
js
hlt
out
test
lret
gs
test
pop
call
shrb
ss
lret
mov
sub
bound
mov
dec
dec
int
pop
inc
lret
add
xlat
push
cltd
test
sbb
inc
sbb
and
lods
pop
aas
or
bound
sub
and
cld
sub
roll
paddusb
pop
mov
sti
loope
sub
or
and
xor
or
cli
gs
rorb
push
test
push
add
xor
pop
mov
bound
sub
fistpll
loop
lock
in
mov
jns
cmp
xchg
cs
cmpb
sub
ss
insl
popa
icebp
and
out
ja
fs
pop
sub
jmp
imul
enter
mov
sub
push
cmc
mov
add
jbe
stos
mov
jge
push
inc
pusha
dec
decl
lods
test
lods
in
nop
xor
fstpt
addr16
das
push
fidivl
push
pop
xor
sub
mull
jns
sarb
in
jnp
in
insl
inc
lret
je
mov
mov
mov
mov
scas
cs
add
bnd
push
mov
ss
jb
inc
notb
and
adc
push
bnd
push
mov
ss
aad
idivb
notb
and
adc
push
repnz
ret
push
mov
push
xchg
fisubs
jb
inc
ficoms
and
adc
test
movsl
jno
sahf
dec
fnstcw
insl
pop
lock
loopne
shlb
rcrb
into
adc
add
mov
cmpsl
inc
xlat
xor
pusha
notl
out
pop
lock
loopne
shlb
rclb
mov
xchg
jo
pusha
ret
push
cmpsl
inc
xlat
xor
and
adc
add
lock
loopne
shlb
rclb
mov
xchg
dec
xchg
and
inc
mov
lock
xchg
inc
mov
sub
jbe
popa
cld
xchg
pushf
arpl
pop
xor
pop
aaa
xlat
clc
jp
cmpsl
leave
pushf
clc
mov
aas
jge
ret
pop
jl
xchg
mov
test
inc
sub
shrb
out
in
jmp
scas
lods
or
push
sub
xchg
mov
xchg
mov
sahf
dec
push
int
ja
dec
adc
clts
loope
shll
mov
jns
rclb
scas
cmpl
call
push
pop
cmp
jbe
data16
xchg
jae,pn
clc
lds
adc
push
call
rol
mov
jnp
mov
in
jno
push
loop
jmp
aam
add
pop
loopne
shlb
rclb
mov
xchg
jo
pusha
mov
cmpsl
inc
xlat
xor
and
adc
inc
push
popf
outsb
xor
inc
xchg
fisttps
loope
cmc
es
sbb
or
ds
cs
scas
pop
mov
mov
adc
jne
rolb
adc
sub
repnz
loop
mov
xchg
dec
test
outsb
jle
arpl
faddl
ja
adcb
mov
cmpsl
inc
xlat
xor
and
adc
add
lock
loopne
shlb
rclb
mov
xchg
jo
pusha
mov
cmpsl
inc
xlat
xor
and
adc
add
lock
adc
js
imul
push
pop
push
jbe
ss
or
xchg
leave
jg
add
push
or
mov
inc
sahf
pop
mov
mov
cmovb
stc
dec
sbb
lds
xchg
sti
mov
dec
mov
sti
das
xchg
loopne
push
lods
inc
lcall
pop
xchg
call
stos
lds
sub
push
sahf
shll
pop
mov
ror
aam
js
xchg
inc
divl
jge
lcall
enter
xchg
rcll
nop
jmp
into
mov
incl
stos
sub
jl
sti
jbe
negl
iret
jo
dec
or
push
fsubrs
addl
jp
xor
out
dec
dec
cmpsb
mov
dec
mov
stos
mov
inc
popf
pop
xchg
aad
hlt
cmp
int
inc
cmp
mov
cmovo
cmp
add
aam
fcomps
adc
pushf
insb
jg
popf
adc
push
hlt
jb
idivl
mov
arpl
negb
push
jg
int
stos
adc
and
aad
adc
scas
cwtl
imul
outsb
cwtl
sub
stos
xchg
xor
mov
xchg
addb
imul
pop
cltd
fwait
roll
scas
jae
into
fldcw
add
pop
jg
test
inc
jae
and
shrl
push
and
pslld
mov
push
daa
mov
sbb
lock
nop
jl
xor
scas
or
rcll
inc
adc
loope
mov
inc
cmpsl
pop
into
cld
mov
in
xchg
sahf
jg
test
or
adc
iret
in
mov
std
das
imull
pop
outsl
pop
inc
mov
pop
mov
ret
pusha
pop
push
out
lret
outsl
pop
test
adc
xor
cmp
lahf
mov
mov
lods
mov
jnp
lahf
fisttpll
cmc
outsb
adc
mov
into
dec
inc
fists
jmp
jne
faddl
mov
mov
imull
outsb
scas
mov
fsubrs
sti
xchg
xlat
xchg
cmpsb
je
fistpll
or
fimuls
shlb
xchg
push
iret
cmp
pop
push
rclb
enter
push
add
movsb
cmp
je
ss
insb
pop
shlb
imul
lods
in
push
adc
push
sbb
in
in
dec
lods
jecxz
fcompl
mov
movsb
mov
inc
iret
sub
pop
add
xchg
cmp
loope
and
in
jg
dec
je
inc
dec
test
dec
mov
cmp
jecxz
pop
loop
mov
pushf
mov
ret
mov
cli
inc
xlat
int3
iret
mov
dec
popf
hlt
dec
lods
add
dec
lods
sar
adc
xchg
out
pusha
loope
and
icebp
pop
mov
cmpsb
lods
or
repz
mov
mov
xor
stos
and
cmp
jp
mov
adc
test
sti
orl
and
pop
test
js
push
ret
push
pop
jecxz
sub
mov
push
adc
aad
in
imul
and
or
fdivl
xorl
adc
jl
shl
mov
fsubr
and
and
mov
imul
and
data16
jb
jbe
fcoms
aam
cmpsb
push
out
jl
xor
xchg
int3
sbb
add
in
sub
mov
in
pop
fistpll
cmp
cmp
ret
pop
or
jl
cwtl
arpl
out
into
push
imulb
in
pop
sbbb
mov
lods
filds
or
mov
inc
mov
shl
lea
cmp
xchg
mov
ret
mov
push
loop
mov
inc
add
adc
xor
sbb
cmp
lcall
dec
cmp
idivb
orb
adc
pop
dec
mov
inc
cmp
jne,pt
das
pop
dec
pop
jecxz
and
xor
adc
popf
push
jns
xchg
cld
mov
jno
fistpll
jmp
scas
ds
insl
jbe
or
jbe
pop
in
out
shr
out
sub
mov
stos
xchg
ficoms
cmpsb
fstp
inc
adc
pop
mov
ljmp
fwait
sarl
ss
mov
mov
xchg
inc
js,pn
imul
dec
push
fwait
adc
add
decl
fcmovb
xor
sbb
xor
pushf
dec
xlat
inc
adc
push
xchg
jne
or
push
xchg
imul
cmpsl
xchg
or
fcompl
gs
aas
mov
cmp
mov
test
out
adcb
rorb
jg
les
sti
inc
ja
sahf
cmpsb
push
mov
dec
test
cwtl
cmpb
sbb
lret
testl
clc
mov
jmp
xor
aam
xor
xchg
pop
xchg
mov
push
and
stc
incb
sti
xchg
out
int3
test
jbe
sbb
xorl
fildll
es
pop
cmp
cmp
clc
push
mov
icebp
mov
or
jle
dec
lock
cmp
into
add
sti
fisubrl
insl
jecxz
hlt
pop
bound
clc
in
fcmovne
inc
call
push
push
adc
pusha
mov
sbb
pop
mov
jmp
jl
and
je
mov
ret
and
and
insb
push
ret
fisttps
fcompl
push
push
idivl
test
cmp
outsl
dec
or
fistps
jae
xchg
add
int3
xor
xchg
rorl
ds
push
mov
adc
push
xchg
add
lods
bound
bound
movsl
mov
rol
popf
subb
inc
cmpsb
ss
addr16
mov
push
call
push
cmp
lcall
pop
imul
je
mov
jb
aam
fcmovb
inc
sbb
xchg
xchg
adc
cmp
pushf
arpl
pop
xchg
or
dec
pop
xchg
movsl
mov
pop
ja
imul
test
jns
pusha
or
test
pop
add
fwait
adc
outsl
push
cmc
mov
ljmp
insb
fisubl
sbb
jno
aaa
or
mov
addl
jb
in
mov
jne
add
movl
xchg
lea
imul
mov
out
popa
pusha
mov
sbb
xor
xorl
lods
sub
push
sbb
fwait
ss
cmp
sarl
jg
lock
das
fs
addl
push
dec
orb
aad
lods
sbb
xor
xchg
test
jge
imul
iret
push
ss
push
xor
push
mov
cmp
cmp
add
sub
lods
pop
xchg
sbb
fidivl
dec
jl
adc
sbb
push
imul
mov
sbb
push
mov
sub
test
xchg
fstpt
fwait
or
leave
ret
pop
idiv
int3
out
mov
aas
sbb
jg
mov
cmpb
cmpsb
xchg
ss
int
lret
and
or
aad
fwait
xor
cwtl
cmp
lds
insl
add
xchg
iret
inc
sub
mov
shlb
and
je
repnz
mov
ret
jg
xor
lea
and
test
aaa
fistpll
clc
mov
movsl
sub
cmpsb
sti
aam
push
cmp
lods
sti
cltd
push
movsl
add
pop
divl
lcall
push
pop
ss
adc
shl
lds
icebp
mov
int
or
mov
or
hlt
insb
push
jle
popf
ret
int
mov
repz
outsb
xorl
jge
xor
mov
fbstp
xor
or
sbb
mov
add
push
cmp
push
fstpl
jecxz
xorb
adc
mov
mov
mov
mov
mov
addr16
xchg
mov
xor
push
in
inc
jo
cltd
xor
ret
pop
arpl
les
mov
pusha
scas
lea
cmpsb
xchg
ror
mov
clc
mov
pop
add
movb
into
add
mov
ds
mov
push
cmp
push
dec
add
adc
cwtl
mov
push
dec
sbb
adc
fimull
sbb
pushf
or
push
cltd
loope
loopne
fwait
loope
xor
lock
movsl
sbb
and
mov
inc
fdivrs
test
push
fisubrs
daa
mov
lcall
cmp
lcall
enter
cmp
cmpsl
test
fistpll
mov
js
sub
rcr
mov
jp
and
test
lcall
adc
xchg
mov
and
mov
movsl
std
add
xchg
push
aaa
and
ret
mov
movb
ljmp
push
arpl
mov
mov
mov
xchg
popa
fdiv
ljmp
pop
add
adc
out
mov
xchg
jmp
mov
orb
mov
sarb
ret
out
lcall
bound
inc
arpl
xchg
shlb
loop
stos
sub
ret
flds
daa
ja
scas
cmp
push
push
xor
jns
lods
pop
fsubs
repnz
xor
xchg
adc
fdivrp
xchg
push
iret
scas
dec
loopne
jge
mov
adc
xor
add
shll
xor
add
aas
push
mov
dec
lea
push
jmp
push
sub
xchg
dec
mov
pop
xchg
lcall
cs
cld
mov
pop
movsl
lea
cltd
cmc
xor
pop
pop
or
shlb
mov
mov
js
fdivrl
pushf
fildll
sbb
xor
ja
lock
dec
in
in
pop
cs
rclb
addr16
push
in
cmpsb
popa
pop
sbb
or
inc
mov
mov
lret
stc
aas
mov
mov
js
push
adc
mov
xrelease
in
push
cmpsl
xchg
test
cmp
int
inc
xchg
add
js
add
das
insl
pop
cmp
push
jp
sahf
pop
cltd
sti
mov
cmp
xchg
in
dec
negb
dec
mov
or
inc
enter
push
aas
jle
xchg
pop
sbb
push
test
dec
pop
icebp
enter
adc
push
inc
mov
xor
jnp
ja
decb
xlat
jecxz
xor
icebp
movsl
mov
mov
dec
lcall
push
push
imul
push
fdivs
or
rcr
inc
je
in
imull
push
xchg
push
mov
push
and
add
jg
sub
and
xchg
imul
jb
mov
lds
jl,pn
aaa
pop
rcl
jnp
iret
inc
jl
orl
fcmovb
repnz
add
popf
cmpsb
xchg
inc
andl
xchg
pop
mov
xchg
cmp
cmp
das
mov
jb
das
xchg
nop
inc
adc
bswap
mov
fcmovnb
iret
cmp
jmp
xchg
pushf
sbb
icebp
popa
cltd
lret
es
adc
inc
jnp
das
jecxz
jbe
dec
push
daa
dec
inc
popf
ror
mov
adc
mov
hlt
pop
sarb
fistpl
in
add
mov
arpl
jbe
imul
int
outsl
inc
rorb
xlat
lcall
insl
push
sbb
pop
popa
stos
or
inc
lds
das
jnp
xor
fidivl
cmp
ficompl
jo
push
js
mov
inc
pop
incl
sbb
xor
adc
push
imul
xor
imull
xchg
rorl
pop
jmp
daa
lds
jle
ss
mov
rcll
fstpl
mov
add
push
push
daa
pop
daa
inc
test
jo
cmp
repnz
sub
sub
push
pop
imul
inc
out
and
rorb
inc
shrb
test
pop
in
repnz
pop
lds
push
int3
int
jmp
mov
cmp
mov
xchg
add
mov
into
and
adc
mov
adc
int
pop
push
clc
adc
lahf
lcall
icebp
sbb
push
daa
pop
pusha
and
xor
pushf
mov
das
adc
push
push
fwait
arpl
imul
pop
lock
jno
out
and
mov
iret
pusha
out
dec
pop
add
add
dec
jle
sti
xchg
cltd
jb
or
mov
loopne
add
loop
xchg
test
movsb
inc
push
aas
add
cmpsl
dec
rorl
lahf
jmp
mov
fmull
jp
les
dec
stos
addr16
sub
call
mov
lret
cmpsl
jle
fnsave
and
clc
dec
mov
jns
and
or
mov
sub
sub
sbb
dec
sub
inc
clc
outsl
sub
mov
mov
jg
dec
push
mov
imul
lods
jae
mov
jg
fcomps
loop
sbb
mov
in
inc
lret
ret
jg
jae
dec
je
sub
sbb
int3
jle
lret
mov
test
jo
mov
mov
lea
aaa
xor
stos
xlat
in
xchg
add
push
pop
mov
and
aas
adc
and
inc
ljmp
or
mov
jle
and
shr
int
arpl
and
jnp
lahf
ficoms
addb
mov
aam
out
xor
test
jno
lods
in
arpl
xlat
movsb
pop
dec
stos
arpl
cmpsl
fidivs
lods
jae
sahf
xchg
dec
js
jmp
push
and
fists
lcall
mov
mov
or
call
adc
unpckhps
in
fucom
fisttps
lahf
and
sub
xor
mov
mov
sti
testl
sti
aad
roll
cmp
mov
test
xchg
push
mov
xor
pop
or
fcmovnbe
and
jnp
or
jle
mov
jne
jle
pop
std
mov
jmp
repnz
xchg
add
insl
mov
popa
sub
ja
jns
mov
and
test
xor
push
or
out
sub
xchg
xchg
lahf
je
xchg
stos
sbb
mov
xchg
dec
push
push
ror
imul
inc
adc
dec
sahf
mov
adc
mov
add
jo
cmp
or
ja
aas
sarb
scas
les
aam
ret
mov
popf
cwtl
mov
mov
mov
mov
add
aad
cmp
out
icebp
popa
add
into
in
add
lods
cmc
adc
js
cwtl
or
jmp
sub
scas
aas
das
je
jae
data16
and
mov
inc
push
cmp
lret
pop
sbb
dec
mov
aas
jecxz
push
cmp
mov
mov
push
jecxz
call
jnp
jno
ljmp
mov
inc
into
mov
dec
icebp
fdecstp
xlat
xchg
imul
adc
mov
and
sub
pop
imul
mov
imull
lret
pop
jo
cmpsl
icebp
mov
and
in
cmpsb
ja
dec
outsl
aas
xor
and
aas
push
sbb
and
xor
fsubr
iret
cld
adc
sar
testl
aam
mov
inc
push
sbb
mov
mov
cltd
arpl
push
cmp
cmp
push
cld
sub
popl
dec
mov
or
call
xor
fiaddl
out
mov
sbb
cmp
add
or
dec
loopne
or
shll
mov
push
mov
enter
ret
adc
xchg
xchg
dec
mov
je
pusha
and
xchg
aam
fwait
adc
movsb
lea
ficoms
xchg
cltd
xchg
call
mov
arpl
ficoms
cltd
mov
xchg
push
mov
or
fsubrs
sub
mov
jbe
test
sub
push
out
lret
lcall
sub
loop
insb
xor
aad
dec
bnd
imul
mov
xchg
loop
fwait
push
sub
cli
inc
in
xchg
inc
jae
rcrb
jae
pop
push
push
adc
decb
scas
lods
fs
adc
inc
sub
jp
mov
fdivl
mov
cmpsl
jge
mov
popf
sbb
push
pop
icebp
aam
cmp
push
shrb
hlt
gs
ficoms
xlat
push
xor
aam
aad
mov
add
mov
mov
nop
fcomip
iret
cs
cmp
shll
xor
gs
mov
inc
add
loope
ja
jo
and
jns
out
mov
add
push
mov
lahf
sub
cli
xor
popf
imul
addr16
cli
call
orb
add
movsb
cmp
or
std
loope
dec
jle
into
pop
shll
ljmp
mov
fsubrp
pushf
push
call
push
cmc
lret
out
stos
in
js
mov
imul
mov
push
mov
sahf
cmp
addl
aaa
xchg
mov
xchg
in
fs
movsb
and
out
ret
ds
jnp
outsl
out
imul
stc
push
add
xlat
repnz
add
dec
mov
insl
jmp
cmc
ficompl
subb
sub
je
lret
scas
pushf
in
sar
dec
inc
push
adcb
stc
xchg
insl
jns
insl
scas
sub
out
test
icebp
jge
aas
dec
adc
das
cltd
in
adc
jbe
icebp
cli
cltd
sub
pop
cmpsb
psrlq
lods
adc
cld
mov
mov
cmp
icebp
adc
sbb
and
xor
xchg
jp
hlt
dec
mov
fwait
int3
leave
xchg
dec
lds
adc
jmp
repnz
push
aam
push
xchg
outsl
js
adc
lahf
push
sbb
or
nop
xchg
int3
imul
sbb
dec
cwtl
sbb
mul
loop
xor
aam
or
icebp
leave
cmp
xor
add
xchg
jecxz
mov
xor
pop
stc
xor
lock
imul
sbb
or
mulps
lea
mov
cwtl
mov
mov
pop
stos
popf
mov
inc
and
cmp
xor
mov
or
jns
popa
mov
int3
movsb
int
loopne
scas
inc
xchg
mov
push
call
jae
cmc
dec
test
clc
js
adc
jb
sbb
dec
mov
push
inc
movsl
mov
or
lock
or
aad
adc
adc
in
in
clc
out
test
add
cmpsb
dec
rorl
xchg
and
add
mov
pop
jle
fisttps
xlat
leave
sbb
cmp
pop
dec
pop
imul
add
xor
add
fcoml
rolw
xchg
bound
dec
or
mov
xchg
shrb
mov
push
xchg
cmpsb
mov
lods
out
xchg
cld
inc
and
mov
pop
test
mov
lret
cmc
cmp
mov
insl
mov
mov
add
xchg
sbb
ljmp
jo
or
lds
mov
test
les
cmpsl
test
mov
mov
push
adc
cld
dec
jg
pop
mov
and
mov
sbb
sbb
xor
mov
les
pusha
out
pop
stos
insl
lods
out
mov
jne
mov
push
adc
and
sub
js
push
add
aas
iret
call
lret
repnz
cmp
and
mov
pop
mov
test
enter
leave
push
loope
add
or
lahf
mov
xchg
adc
fcoml
add
cltd
movsb
jo
cmp
fcoms
pop
sub
lret
push
lock
aad
cmp
lds
jp
fprem1
sti
shlb
popf
xor
add
nopl
pop
jo
mov
stos
roll
divb
insb
jl
faddl
lcall
fwait
iret
and
aad
dec
orl
xor
cmpsb
hlt
sbb
rcl
jae
jb,pn
jne
mov
les
sub
mov
aas
out
and
mov
dec
divl
and
xor
ss
das
mov
cli
call
aaa
mov
xor
jne
xor
jae
push
pop
dec
adc
cwtl
out
push
aas
mov
xchg
jb
roll
jmp
jl
rolb
inc
fsubrp
inc
les
jp
sbb
ljmp
dec
mov
enter
adc
gs
fs
inc
lcall
xor
cmp
imul
jecxz
jne
jg
dec
repz
fdivs
add
push
push
push
cmp
inc
mov
mov
cmpsb
xor
insl
rcl
sbb
jle
rcrl
mov
pushf
xor
mov
jns
lcall
fs
xor
es
inc
stos
sub
push
mov
jg
add
inc
cwtl
test
mov
jp
insb
int
xor
sub
xlat
fs
mov
cmp
or
dec
adc
or
inc
aad
iret
push
cmp
mov
sbb
stos
imul
xchg
loopne
sbb
xchg
loopne
shll
rclb
mov
xchg
jo
pusha
mov
cmpsl
inc
xlat
xor
and
adc
add
lock
loopne
shlb
rclb
mov
xchg
jo
pusha
mov
cmpsl
inc
xlat
xor
and
adc
add
hlt
pop
loopne
shlb
rcll
mov
xchg
jo
popa
mov
cmpsl
inc
xlat
xor
and
adc
add
lock
loopne
shlb
les
inc
and
addr16
popl
aaa
mov
out
sbb
or
sbb
sub
cmp
imul
mov
xchg
stos
lcall
cli
ljmp
sub
cmp
dec
dec
pop
pop
push
jp
lcall
mov
ljmp
fdivl
mov
dec
push
jp
adc
jp
xchg
mov
enter
mov
arpl
pop
sub
pop
sbb
mov
or
popa
gs
loop
ret
xor
in
push
pop
xchg
pusha
pop
pop
shr
xchg
out
test
jne
push
push
inc
ljmp
add
inc
fnstenv
lret
fisubs
fisttpll
aaa
inc
lret
es
sbb
cs
cmp
stos
jnp
add
fwait
jp
push
inc
mov
popa
adc
xchg
out
xlat
fcmovb
mov
inc
pop
daa
stos
mov
stos
dec
dec
dec
xor
ljmp
pop
add
jb
jne
pop
lret
ljmp
push
cli
nop
ret
xchg
cmp
pop
cmp
pop
dec
dec
pop
push
arpl
xchg
mov
xchg
test
lock
enter
jne
inc
dec
push
cmp
cmp
daa
pop
jp
mov
imul
fcompp
lret
mov
sahf
xchg
xchg
gs
jnp
inc
pop
dec
push
sbb
push
sub
jmp
out
stos
clc
sti
mov
test
mov
jbe
inc
inc
push
push
add
pop
pop
push
jp
mov
mov
ljmp
sub
cmp
dec
dec
pop
pop
push
jp
mov
mov
ljmp
xchg
push
dec
aam
sub
mov
loopne
cmp
popa
mov
sahf
push
sbb
mov
aad
and
ljmp
pop
jmp
jmp
pop
add
lea
aam
loopne
pop
out
xchg
jnp
ds
sti
jno
loop
dec
sbb
pop
sbb
loop
push
mov
sub
mov
push
mov
add
ret
stos
pop
stc
divl
xchg
int
into
leave
mov
lret
cwtl
fwait
daa
or
push
imul
lret
mov
mov
inc
xchg
ljmp
lods
cmc
sbb
cld
xor
or
and
testb
mov
enter
mov
pop
mov
or
shrl
sub
in
and
shll
stos
mov
adc
outsl
ljmp
call
pmulhuw
or
fcompp
lret
les
or
cmp
je
pop
repnz
mov
and
cmc
fcmovnb
cltd
shl
inc
adc
mov
add
dec
cld
rol
shl
or
hlt
or
popf
pop
bound
ret
scas
ja
out
ficoms
aaa
add
fstp
xchg
dec
jae
add
cmpsl
mov
cmp
mov
pop
pop
xchg
and
mov
mov
mov
popa
inc
jge
sbb
prefetch
cwtd
xchg
pop
rorb
fists
icebp
arpl
fistpl
mov
and
jp
movsb
mov
adc
into
adc
jns
cwtl
inc
insb
clc
pop
mov
loop
xor
pop
fs
jge
ds
fisubs
inc
push
mov
repnz
testb
nop
icebp
pop
mov
loopne
or
push
outsb
jns
lea
rcrl
mov
pop
or
push
pop
push
or
bound
push
in
xchg
adc
stos
and
rcrl
lcall
insl
or
sub
hlt
fisttpl
fiadds
rcrb
jo
adc
pop
repz
stos
addl
dec
arpl
loope
imul
pop
cld
aas
jnp
repz
dec
push
pop
movsl
mull
pop
pusha
out
cmp
xor
iret
push
notb
stos
add
out
jae
cmc
xchg
aad
in
mov
mov
cmp
gs
inc
dec
xor
dec
call
add
lods
push
mov
lods
scas
sbb
rcl
lret
adc
imul
enter
jmp
int3
adc
sti
popl
call
test
bound
xor
pop
outsl
and
adc
dec
jl
sarb
movsl
lcall
cmp
add
lret
loope
adc
fsubrl
xchg
xor
stos
cs
das
nop
mov
and
push
jp
cmpsb
stc
add
in
pop
loope
or
outsl
movsl
cmp
daa
fstpl
lahf
rcr
in
push
lods
mov
inc
mov
das
mov
jae
addr16
add
xchg
inc
loopne
jo
inc
out
shll
xchg
lods
out
pop
jle
iret
pushf
push
push
dec
insb
cmp
stos
fistps
movsl
fnstenv
xchg
push
mov
int3
cmpsl
cmp
mov
mov
sbb
cmp
jbe
sbb
jb
cmp
movsb
cmp
fwait
mov
dec
mov
frstor
push
les
add
outsl
dec
inc
jecxz
movsl
sarb
sbb
cli
inc
xchg
aas
hlt
mov
int
and
lock
add
roll
shll
cwtl
adc
inc
push
dec
ret
pop
lahf
mov
xchg
cltd
add
pop
adc
movsl
sub
idiv
in
sbb
cmpsl
rcpps
adc
lcall
mov
pop
enter
dec
sbb
cmp
dec
xor
sysret
mov
mov
pop
pop
adc
xchg
and
inc
ljmp
mov
sbb
movsl
sub
inc
dec
dec
mov
push
cwtl
sar
push
dec
xchg
movsb
mov
xlat
pop
jge
add
fbstp
jns
sub
push
dec
dec
js
cmpsb
jbe
daa
lcall
and
out
inc
nop
mov
sbb
popa
pop
dec
jg
sar
fwait
cmp
xchg
jns
idiv
call
push
stos
inc
jl
clc
sti
xchg
out
scas
daa
aas
inc
out
jge
repz
fistps
inc
outsl
dec
lret
sbb
cmp
ret
xchg
subb
mov
dec
pusha
aad
jg
jne
xchg
fwait
mov
lret
sbb
fsubrl
lret
xchg
pop
mov
call
add
sub
push
pushf
gs
outsl
push
cmp
mov
sub
and
aam
push
mov
fs
mov
nop
mov
push
int3
loopne
sub
rol
movsl
push
in
outsb
in
cmp
sbb
jl
and
adc
push
or
filds
or
fisubs
sbb
popa
and
inc
cmpsl
std
mov
lock
push
add
testl
clc
cmp
in
sarl
fs
push
ficoms
add
lea
dec
outsl
mov
in
or
mov
popf
adc
mov
pop
lret
xlat
sub
icebp
mov
inc
das
imulb
jbe
les
lret
cltd
in
imul
orl
dec
push
xchg
push
add
sti
and
jecxz
movsl
test
mov
ficompl
and
xchg
clc
mov
push
in
loop
dec
lret
mov
in
fiadds
push
add
lds
adc
inc
je
mov
add
dec
jae
mov
push
or
jle
pushf
push
shlb
adc
pop
add
pop
sbb
jmp
adc
dec
pop
inc
mov
cmp
fmuls
loopne
mov
mov
inc
or
pop
xor
xor
mov
sub
mov
sbb
pop
mov
add
add
cld
push
testb
subl
cltd
ljmp
cmpsl
loope
xorps
jge
add
push
int3
xchg
jno
lods
loopne
jnp
xor
mov
adc
out
das
stc
loopne
pop
xchg
xor
cmp
inc
scas
jbe
shl
ss
clc
addb
aaa
jl
in
jnp
jg
std
pusha
arpl
jbe
fwait
adc
repnz
pop
push
mov
jbe
cmp
push
mov
mov
call
inc
mov
sub
out
mov
add
jp
shl
xchg
xlat
sbb
push
cwtl
jmp
addb
mov
rclb
or
pop
mov
cmp
xchg
xor
test
inc
mov
rcrl
mov
inc
xor
les
testb
sbb
ja
mov
sub
lret
arpl
add
jns
push
sbb
and
mov
rol
orl
fiadds
std
mov
mov
nop
cltd
rol
and
sub
cld
ds
cwtl
std
lret
cmp
jecxz
aad
pop
mov
lds
sub
adc
into
dec
aas
sbb
cmp
cmpsb
mov
fwait
adc
push
jno
xchg
inc
dec
fidivrs
cs
lret
insl
js
push
and
mov
mov
xchg
lds
adc
xchg
pop
xchg
add
stos
std
mov
mov
sub
lds
data16
out
and
sahf
aas
int
outsl
ret
js
subl
out
loopne
push
mov
insb
jmp
mov
xor
cmp
mov
mov
xchg
movsl
das
sbb
js
pop
xlat
mov
mov
sbb
jno
mov
and
testb
jo
sahf
and
jnp
fdivl
xchg
fldenv
call
sub
fmulp
pop
pop
lret
jge
popa
das
xor
out
test
xchg
outsl
fisubl
cmpsb
frstor
mov
push
adcl
add
adc
pop
pop
in
enter
adc
xchg
and
xchg
stc
pop
pop
push
xlat
dec
jae
popa
cmp
xchg
cmpsl
mov
jmp
cld
cmp
and
and
ja
icebp
push
repnz
push
cmp
mov
scas
rol
jbe
sub
aas
movsl
xchg
orb
add
sbb
mov
lea
and
dec
xchg
lahf
test
repnz
neg
inc
movsb
cwtl
aam
ret
aam
arpl
xor
cmc
rcrb
add
imul
lds
repz
out
fldl
mov
xchg
push
sahf
or
ret
jl
test
pop
ja
es
stos
jno
jmp
sti
in
call
inc
stc
inc
imul
mulb
mov
test
inc
sub
and
sub
loop
mov
aad
xchg
mov
push
sbb
arpl
sub
mov
imul
cli
aaa
in
add
jns
test
in
mov
jns
test
adc
sbb
in
fistpl
movsb
sbb
pop
xchg
addb
push
push
adc
mov
inc
cli
pop
lea
xchg
pop
sbb
lret
cmp
and
sub
jmp
adc
dec
jnp
mov
addb
gs
xorb
mov
scas
jg
cld
repz
mov
xchg
dec
dec
mov
push
sub
cmpsl
jnp
adc
out
xchg
cltd
jle
add
mov
pop
push
xchg
popa
pop
pop
jmp
gs
jno
testl
aad
das
clc
add
xorb
int
rorl
fwait
int
mov
jmp
mov
or
inc
sbb
push
pop
adc
dec
ja
xor
xchg
mov
mov
sbb
lcall
scas
and
dec
sti
add
push
xchg
pushf
pop
ss
pop
pop
scas
or
or
fstpt
mov
push
jns
sbb
jecxz
pop
lcall
popa
call
xchg
call
mov
mov
adc
adc
mov
icebp
cli
movsb
jo
sti
mov
fs
dec
adc
xchg
es
dec
pop
pop
pop
insb
push
icebp
xchg
dec
cmp
popa
or
jne
mov
addr16
shrl
fisubs
inc
fldl
les
andb
jl
ja
sub
mov
gs
adc
inc
and
loope
mov
ret
fsubrl
jns
in
jne
cmc
stos
loop
fidivrs
mov
mov
sbb
out
sub
mov
movups
and
pusha
mov
push
or
and
and
cmpsb
pop
sub
and
addr16
add
loopne
inc
int
and
push
cmp
or
cmp
dec
fldt
in
mov
inc
int
fimull
jle
gs
cmp
or
stos
push
push
pop
sub
mov
adc
and
repz
sbb
mov
xchg
cmpsl
mov
push
fstpl
pop
sub
xlat
and
ds
lea
add
gs
cli
and
jno
lds
outsb
mov
sahf
rcrb
stos
push
nop
out
dec
dec
pop
popa
push
fistl
sub
icebp
ret
scas
push
mov
cmp
fcomps
xchg
push
les
or
mov
sbb
in
push
push
mov
and
xor
and
mov
jecxz
adcl
std
scas
filds
fs
lcall
xchg
movsb
bound
repz
add
sbb
or
mov
rorb
das
sub
inc
into
outsb
inc
and
repz
insb
lret
lret
cmp
sub
or
dec
imul
out
push
arpl
ss
ret
fucomp
sub
mov
pop
pop
fsubs
mov
adc
adc
xchg
pop
das
addr16
stos
lods
xchg
push
cld
pushf
out
aam
outsb
jb
push
stos
lods
push
lret
aam
sbb
mov
or
xor
and
xor
push
jnp
mov
mov
and
add
inc
add
je
xchg
xor
mov
or
xor
pop
out
lea
sbb
int3
shrb
repnz
inc
inc
mov
jmp
hlt
out
xchg
inc
ss
stos
inc
popf
int
les
sub
push
xchg
movsl
pop
jge
ljmp
addl
fcoml
test
sub
adc
sbb
dec
mov
ss
sbb
bound
adc
mov
and
mov
lret
xorl
arpl
pushf
mov
or
jmp
dec
push
iret
lret
dec
sub
les
loopne,pt
add
loop
arpl
mov
push
roll
imul
sarb
into
insb
stos
bound
jnp
imul
lahf
lret
out
ss
test
arpl
leave
jne
xor
int3
sbb
mov
or
mov
mov
repz
out
fs
idivl
cmpsl
push
pop
adc
rolb
mov
or
das
orb
dec
cli
sahf
mov
cmp
jg
dec
mulb
dec
and
in
dec
data16
xor
sbbb
pop
dec
das
in
std
fwait
sbb
dec
cs
adc
repnz
mov
mov
mov
push
add
out
xchg
arpl
jae
push
in
test
stos
fmul
pmulhw
add
pop
aad
out
sahf
testl
push
mov
inc
icebp
xor
or
add
aam
push
cmpsl
je
int3
call
gs
sbb
nop
and
rcll
cmpsb
jecxz,pn
rol
lcall
push
lcall
inc
xchg
movsl
inc
pusha
imul
sub
aam
mov
outsl
rolb
push
icebp
mov
lea
stos
mov
cltd
cmp
and
jb
inc
out
testb
shrb
jb
push
test
cli
dec
test
lcall
ret
jno
add
movsb
inc
sbb
stos
outsb
push
std
test
pushf
pop
imul
daa
insb
stc
mov
dec
or
repnz
and
sbb
out
xlat
xor
lahf
lret
addr16
ds
mov
das
push
aas
xor
imul
test
lcall
and
daa
pop
clc
out
add
push
adcb
insb
push
aam
jbe
push
cmpsl
and
insb
mov
lcall
sbbl
dec
sarl
leave
lds
mov
test
ds
lods
js
inc
dec
jg
aam
out
adc
xchg
orl
inc
jo
cmp
notl
cmp
sbb
pop
fistpl
rcll
xchg
lret
adc
ret
fcmovbe
add
inc
dec
xchg
ljmp
addr16
cltd
inc
xchg
pushf
js
movsb
add
pop
sub
mov
jmp
xchg
iret
push
sarl
mov
repz
fldcw
dec
jle
cmc
popf
add
mov
outsb
lahf
negb
les
xchg
lea
fidivrs
clc
sbb
mov
popa
push
imul
inc
mul
mov
stc
and
jns
mov
jl
repz
xlat
pop
add
leave
dec
add
adcl
pop
fmull
mov
popf
cmp
cmp
xchg
add
loope
and
sti
xchg
push
jmp
stc
dec
dec
leave
sahf
frstor
test
or
icebp
xchg
push
in
cwtl
jae
ret
sbb
xchg
jle
mov
repnz
jno
loop
aas
fwait
lods
adc
fwait
mov
push
scas
jmp
jl
xchg
pop
sub
les
xchg
xor
mov
and
das
leave
in
push
lret
and
sbb
shrl
out
mov
outsb
cmpsb
add
sti
inc
cltd
mov
insb
pop
ficoml
jno
dec
xor
stos
adc
test
jne
jmp
inc
cld
shrl
xchg
loope
jecxz
aas
cmp
xchg
pushl
adc
push
into
mov
jns
push
movsl
and
or
fcoms
cwtl
pop
ret
mov
rcrb
pusha
push
cmp
mov
nop
add
in
int
add
lods
sub
pushf
xchg
cmp
stc
aam
xor
fimull
out
pop
push
daa
cmpsl
iret
cltd
cs
mull
ja
unpckhps
insb
lock
jno
push
sahf
ja
xchg
mov
inc
fldl
enter
pop
or
mov
pushf
jae
ret
daa
jno
movsb
cmpsl
sub
sbb
sti
cmp
or
addr16
jmp
jg
pop
inc
inc
outsl
dec
cltd
cmpsb
mov
push
mov
push
cs
mov
xorb
and
iret
pop
push
dec
mov
out
ja
mov
mov
xor
adc
das
aaa
fistpl
sbb
pop
int3
sbb
stos
cltd
inc
cmp
mov
or
pop
pop
add
js
ret
outsb
sub
outsb
xchg
xchg
push
mov
lret
pop
jae
jae
or
push
and
lahf
add
push
cmc
sbb
sar
and
dec
cld
xlat
ret
out
inc
xor
clc
mov
xchg
repnz
rolb
in
not
pop
in
sbb
or
sub
push
movb
cmp
mov
xor
add
aas
or
inc
popa
pop
aad
xor
aad
jo
je
dec
mov
fistpll
pushf
mov
mov
pop
xchg
mov
jge
addr16
pop
fwait
jmp
xor
test
fnstenv
ss
jg
fldt
pushfw
xchg
les
mov
loop
cmpb
dec
subl
rorb
cmp
jnp
mov
and
adc
shrl
mov
int
ja
bound
mov
jge
and
add
mov
pop
xor
add
push
mull
push
test
mov
out
sbb
dec
out
jmp
stos
cmpsl
lock
std
daa
mov
sbb
ljmp
out
sbb
add
adc
push
addr16
jge
push
mov
clc
cld
push
jae
shll
add
jp
pop
pop
orl
lods
mov
ja
sbb
pop
jne
jl
call
inc
jge
xlat
lcall
adc
or
lcall
add
into
loope
rol
ret
outsb
and
fnstcw
sbb
jo
popf
idivb
adc
inc
out
inc
mov
adc
push
rol
xor
fwait
lods
jo
sbb
das
cmp
adc
repnz
mov
scas
out
ficoms
fisubl
dec
or
sub
jl
fidivs
mov
jmp
inc
nop
lcall
iret
and
fwait
push
fdivrs
push
cmp
cli
stos
inc
jmp
mov
or
in
ret
ljmp
outsb
lea
mov
into
shl
cmpsb
lret
leave
jae
das
in
je
gs
fisttpl
subl
cmp
and
xor
or
adc
ds
icebp
dec
dec
jge
mov
and
push
movsb
and
stos
mov
push
out
lcall
sbb
enter
sarl
mov
aaa
and
push
daa
jbe
mov
in
push
inc
lret
lea
test
pop
mov
mov
cmpsl
inc
test
pop
push
cs
pop
jnp
lea
sub
repz
push
test
inc
ss
lea
ja
iret
fsubrl
iret
mov
mov
in
andl
sbb
insb
mov
test
add
mov
fadd
icebp
push
mov
sub
push
inc
jge
leave
sbb
xchg
loopne
pop
push
sub
sub
cli
fstl
lds
int
jbe
test
ljmp
bound
push
pop
cs
out
in
fbstp
pop
push
lods
pop
mov
jbe
fimuls
lret
fwait
pop
scas
add
inc
xor
mov
flds
mov
daa
add
shlb
cmp
mov
sbb
fwait
xchg
cmp
les
stc
push
push
cltd
insl
xchg
int
stos
lcall
sarl
movsb
ss
test
mov
cmp
add
sahf
push
fidivl
pushf
add
test
jmp
mov
cmpsl
or
sbb
or
xor
push
leave
jg
or
push
xchg
in
mov
mov
daa
cltd
cmp
insl
cld
cmpl
pushf
adc
sub
mov
inc
jl
inc
pop
mov
and
sbb
daa
outsl
and
and
sahf
out
hlt
lock
or
pusha
fs
cmpl
divb
or
lods
xchg
push
cmc
clc
and
or
add
leave
xor
cltd
mov
jmp
or
or
jns
es
fcompl
subb
sbb
int3
pop
divl
jns
repnz
sbb
mov
aam
movsb
mov
and
cmpsl
rcll
hlt
jb
push
mov
scas
test
test
cld
movsl
fcoml
mov
test
adc
fisubl
adc
and
cmp
dec
dec
pop
pop
push
jp
mov
mov
ljmp
sub
cmp
dec
dec
pop
pop
push
jp
mov
mov
ljmp
sub
cmp
dec
dec
pop
xor
jp
mov
mov
jecxz
push
or
sbb
sub
cmp
dec
pop
pop
ljmp
xor
stos
mov
mov
jns
imul
insb
movl
fldenv
leave
aaa
mov
mov
xchg
pop
cmpsl
dec
mov
sub
sbb
or
stc
pop
jmp
aaa
mov
and
imul
sbb
or
stc
scas
lret
inc
lods
aaa
mov
adc
or
pop
enter
add
repnz
ret
jb
mov
andb
jno
into
mov
rcll
dec
cmp
in
loope
inc
out
fs
out
xor
es
add
insb
dec
sti
push
shll
cld
call
mov
cwtl
mov
jns
dec
adc
imul
xlat
inc
push
fs
fdivs
addr16
cwtl
add
sub
push
mov
ret
xorb
inc
push
fadds
jmp
cwtl
mov
inc
adc
dec
adc
sbb
mov
aaa
mov
nop
pop
jae
jbe
xchg
pop
cmpsl
dec
mov
sub
sbb
or
stc
pop
jmp
aaa
mov
mov
or
pop
stos
inc
xlat
jbe
lea
stos
dec
mov
es
ss
or
pop
bound
mov
bound
int3
cmp
add
daa
push
into
imul
jl
sub
sbb
or
stc
pop
jmp
aaa
mov
mov
xchg
pop
cmpsl
dec
mov
sub
sbb
or
stc
pop
jmp
aaa
mov
mov
xchg
faddp
adc
fldt
cltd
xchg
xor
cmp
mov
cwtl
push
movsl
adc
out
dec
inc
push
cmp
das
inc
test
fsubrs
out
dec
call
stos
ljmp
mov
pop
lds
cmc
adc
sbb
and
fidivrl
addr16
loopne
sub
pop
aas
mov
mov
movsl
cmp
movsl
mov
gs
sub
inc
aas
out
or
std
and
fucomi
in
xchg
test
cld
movsl
fisttpl
out
adc
das
cmp
into
mov
movsb
aaa
icebp
loopne
pop
lcall
lock
push
inc
fstpt
push
and
jg
xchg
testb
mov
inc
test
sub
leave
aaa
into
inc
inc
xor
and
aam
xchg
fs
daa
mov
xor
aam
adc
sti
dec
mov
loope
enter
jp
sub
in
cmp
shlb
push
xchg
rcll
jnp
mov
and
cli
ja
int
orb
es
mov
jmp
cltd
pop
add
je
dec
sti
mov
adc
cmpsb
lahf
mov
sub
sbb
push
in
jae
mov
add
lods
adc
lea
adc
xchg
aaa
xchg
xor
lea
inc
and
fsubl
dec
mov
arpl
ja
inc
lods
xor
ficoml
dec
test
mov
sub
push
mov
dec
mov
xor
pop
push
shl
loop
rcrb
in
jl
mov
mov
inc
repnz
jns
fwait
inc
jns
cmp
hlt
jae
mov
clc
es
cmp
mov
inc
dec
pop
notl
in
xor
cs
xlat
lock
add
ja
jns
stos
lock
shl
push
jae
adc
mov
xor
mov
or
xor
xchg
push
pop
es
out
jae
jns
dec
movlps
lcall
xor
pop
insl
adc
jns
dec
mov
and
adc
imul
inc
xor
or
add
mov
pop
jle
and
clc
dec
or
dec
popa
mull
adcb
inc
nop
sub
mov
gs
cmp
or
mov
sahf
cltd
stc
call
jmp
in
xchg
cmp
scas
jae
cmp
jecxz
xor
or
mov
test
sub
xor
xor
sbb
sub
testb
cmc
adc
jae
cmp
je
add
sbb
dec
mov
sub
mov
scas
sbb
sub
sbb
xchg
mov
jg
sbb
pop
test
and
insb
mov
push
push
mov
xor
ljmp
mov
test
ljmp
mov
enter
stos
jmp
out
int3
xchg
pop
push
dec
insl
or
add
inc
or
lea
aam
cmp
push
sbb
cmp
sub
mov
dec
ret
aaa
mov
lods
loopne
lahf
mov
dec
leave
pop
pushf
push
xchg
nop
into
mov
test
sub
push
inc
shlb
int
mov
aad
mov
mov
add
add
ds
xchg
shll
pop
pop
push
out
jno,pn
fsubs
scas
sub
xchg
sbb
xor
inc
aad
add
pop
test
dec
jge
in
test
xor
lods
in
rclb
or
mov
test
cmpsb
bound
pop
in
inc
jmp
jae
fcmovu
jbe
push
hlt
push
daa
adc
add
call
bound
scas
mov
jae
jg
fst
popl
sbb
cld
pushf
fildll
cmpsl
add
push
cmp
or
jmp
outsl
aam
mov
mov
int
rol
jb
sub
outsb
js
dec
in
repnz
mov
aam
ja
jl
testl
jmp
jo
inc
mov
pop
add
mov
adc
mov
cld
xchg
fstl
scas
cmovbe
jo
lret
std
push
call
dec
cmc
and
xchg
insl
rcrl
jae
lods
add
insb
cmpsb
movsb
inc
and
inc
pop
outsb
adc
add
mov
adcb
jbe
push
fidivl
mov
and
xor
push
mov
scas
ss
cltd
enter
mov
sbb
pop
jmp
out
mov
mov
out
or
mov
sub
mov
fildll
je
movsl
pop
lods
cltd
fs
outsl
or
popa
out
fcompl
mov
xchg
mov
or
adc
or
pop
mov
jge
mov
in
fbstp
xchg
daa
cmc
leave
push
dec
fiaddl
popf
mov
pop
pop
jns
call
shrb
xorb
jecxz
dec
roll
xchg
int
pop
jp
cld
fs
or
and
inc
icebp
je
sti
add
or
xchg
pushf
loop
aaa
rolb
ret
dec
fisttpll
popf
push
jne
push
push
and
fnstsw
movb
jp
js
xchg
mov
adc
xchg
adc
mov
pushf
inc
out
adc
enter
rorl
ss
ljmp
pusha
lds
inc
pop
jbe
xor
jp
sub
mov
ds
dec
popf
stos
fistpl
sub
adc
xor
jbe
inc
and
movsl
cwtl
subl
sub
lcall
icebp
pop
cmp
inc
push
in
push
sbb
test
pushf
ret
xor
pop
aam
lock
mov
xor
pushf
iret
xor
add
out
push
cmpsb
inc
push
subl
xor
in
jne
and
stos
push
sub
add
sbb
and
jecxz
repnz
mov
push
ds
sbb
imul
cmp
xor
out
add
jne
stos
or
push
and
cs
jnp
mov
mov
shrl
jmpw
mov
aas
popf
aaa
sub
push
sti
mov
pushf
into
aaa
jg
lds
aas
out
sub
sahf
shrl
sbb
inc
jle
dec
daa
icebp
xchg
loopne
xchg
fiadds
pop
je
insb
int
fcoml
xor
insl
jmp
push
ja
jp
stos
iret
loopne
sbb
mov
punpckhdq
inc
jge
sub
and
lcall
aaa
sbb
or
sbb
push
shl
test
dec
inc
fldenv
pop
in
std
add
sbb
ljmp
pop
sbb
out
in
add
adc
jmp
shlb
pusha
xchg
out
andl
aad
mov
outsb
jbe
adc
pop
mov
les
aam
popa
xchg
in
rorb
cs
repz
mov
xor
jne
inc
xor
push
xchg
xchg
adc
repz
xlat
pop
jo
repnz
das
cld
fs
test
int3
sbb
dec
stc
jae
imul
cld
outsb
test
int
dec
pop
movsl
add
and
xchg
in
mov
or
test
add
ds
or
inc
mov
inc
stos
pop
xchg
sub
jp
imulb
jmp
inc
cmp
in
adc
shl
pop
fsubrs
data16
and
adc
jg
int
add
adc
mov
inc
pop
fcomps
cli
shr
push
shl
jne
loopne
xor
sbb
negb
subl
adc
addl
inc
ret
push
inc
push
fwait
dec
or
mov
lea
mov
add
ss
lds
mov
cmpsb
jle
sbb
scas
sub
ret
mov
xchg
dec
push
inc
nop
js
push
xchg
sbb
and
xchg
icebp
lea
test
pop
xchg
cmp
sub
cli
jmp
pop
les
pop
call
jne
sbb
mov
jno
mov
xlat
and
mov
fdivl
hlt
jmp
ret
push
jmp
jae
fdivs
fidivl
adc
xchg
je
jns
fistpl
and
sub
shrb
adc
stos
jbe
repz
adc
inc
push
outsl
lds
cmpsl
ljmp
add
inc
add
and
ds
mov
xor
jbe
fnstenv
addr16
jno
fldl
mov
fdivl
adc
push
adc
cli
outsb
popa
subl
pop
je
push
adc
or
lea
addr16
test
stos
mov
push
cltd
dec
roll
ret
mov
je
repnz
insb
es
cmpsb
pop
pop
insb
push
sbb
mov
jne
scas
bnd
jo
ss
mov
negb
or
cltd
pusha
pop
or
and
cmc
jne
and
lret
imul
mov
sub
inc
out
outsb
add
jmp
add
je
out
push
fdivr
pop
pop
ss
stc
xchg
inc
repnz
stos
mov
scas
bound
shlb
ret
pop
mov
aaa
std
inc
push
push
mov
jnp
xchg
cwtl
xchg
ss
lahf
in
out
mov
add
pop
jb
cltd
pop
stos
pop
cwtl
mov
outsb
loopne
dec
push
xor
mov
add
xor
in
push
out
cli
push
sub
out
repz
push
pop
ljmp
popa
xchg
xor
shll
xlat
aas
and
fldcw
loopne
mov
dec
shlb
xlat
inc
inc
push
test
nop
repz
ds
and
subb
jae
inc
xchg
add
and
and
mov
gs
test
add
cmpsb
and
in
outsb
jnp
push
xchg
icebp
sbb
mov
loopne
xchg
inc
icebp
push
shll
data16
stc
xorb
iret
dec
gs
adc
and
or
cmp
cld
andl
add
add
loop
dec
in
xchg
jecxz
inc
shrb
adc
add
bnd
insl
pop
and
fs
leave
fiaddl
jge
jne
or
xchg
mov
xchg
cmovbe
ja
mov
in
mov
adc
pushf
lods
mov
inc
lret
jp
mov
dec
leave
mov
push
test
sub
sti
fxch
out
sbb
mov
cwtl
pop
sub
sub
stos
mov
or
pop
sub
push
or
cwtl
push
dec
push
mov
or
xchg
xchg
faddl
sub
adc
inc
fst
push
adc
lcall
fdivl
adc
cmpsb
dec
sbb
fs
pop
push
dec
scas
add
jo
jecxz
xor
cmc
shlb
mov
sahf
fcmovne
or
leave
nop
rolb
pop
xor
iret
sub
jnp,pt
push
cmpsl
jge
adc
dec
in
nop
mov
and
test
inc
aam
xchg
and
movsb
test
dec
das
sbb
cmpl
inc
ret
out
xor
imul
rolb
ret
idivb
jg
fs
imul
sbb
lret
ds
cmpsb
shll
addr16
leave
mov
js
add
cmp
in
or
mov
jbe
mov
mov
imul
pushf
out
jmp
ljmp
pop
pop
nop
pop
push
lock
cmp
loop
inc
cld
pop
test
arpl
pop
inc
nopl
pop
jbe
jnp
shr
mov
cmpsb
sbb
push
cmp
aam
push
scas
into
movb
test
mov
mov
divb
scas
aad
and
mov
jle
mov
hlt
out
add
negb
je
in
ss
pop
xor
sub
daa
pop
xchg
ret
enter
mov
ljmp
daa
in
jnp
int3
and
ss
jl
push
lods
lcall
cmpsl
mov
mov
or
mov
inc
xor
xor
hlt
mov
imul
or
dec
push
inc
aam
and
mov
gs
push
andb
jo
ds
push
xchg
clc
scas
pop
adc
scas
push
or
jb
insb
jns
cmp
adc
lods
aad
inc
sarb
mov
loop
lods
xor
out
jl
aaa
mull
adc
cmp
xchg
das
jno
adc
adc
sbb
pop
mov
push
mov
pop
adc
lcall
push
imul
mov
jp
int3
jns
push
sub
in
lock
test
sub
bound
outsb
mov
mov
jp
shrl
push
popa
fs
inc
data16
jb
sbb
lods
or
js
sbb
xor
pop
sbb
movsl
jl
mov
sarl
dec
mov
pop
inc
adc
lea
pop
push
scas
and
aas
mov
dec
out
and
fisttps
subl
fiaddl
xchg
inc
pop
dec
pusha
mov
jne
iret
pop
hlt
mov
lods
dec
std
push
test
lahf
inc
pop
xor
inc
adc
jb
sub
mov
shll
jno
aad
sbb
loope
pop
or
xchg
cmpsb
out
ss
and
das
dec
movsl
decl
mov
dec
and
stos
sub
mov
or
out
arpl
in
sbb
test
xchg
rol
mov
dec
ljmp
cmp
movsl
dec
clc
cmp
jle
pop
sub
test
sbb
push
push
out
fwait
xchg
lahf
add
xchg
inc
jp
inc
test
sub
cld
aam
inc
pop
adc
fcoms
jmp
shlb
test
mov
repnz
add
data16
movsb
js
cmp
lods
lods
or
inc
jnp
add
fildll
inc
fmul
rolb
add
mov
lcall
lods
or
vmovd
das
cltd
stos
cmc
or
mov
vmovapd
fldcw
push
pop
jge
aad
shll
adc
mov
stos
inc
push
jbe
pusha
sbb
icebp
insb
xchg
pop
jle
rep
repnz
mov
pop
mov
jb
pop
jge
negl
xchg
popa
add
cmp
fldenv
adc
subb
mov
bound
leave
dec
jecxz
nop
nop
jl
out
cli
bound
pop
push
or
add
sti
lret
push
shlb
scas
push
mov
mov
push
inc
daa
leave
dec
mov
mov
rcr
in
mov
mov
jle
addr16
shlb
inc
and
push
inc
fmuls
inc
push
lret
lret
xor
pop
jge
filds
sbb
sbb
ds
sbb
xor
or
int3
sub
xchg
call
fldl
cmp
xor
movsl
dec
sti
scas
nop
mov
jl
xchg
dec
xor
sti
jb
test
jecxz
mov
neg
std
push
cli
insl
insb
ficompl
mov
in
pop
scas
xor
xchg
add
pusha
dec
nop
adc
cmpsl
mov
fbld
sub
inc
outsb
out
mov
fistpll
add
mov
cmovl
adc
insb
push
add
inc
xor
cwtl
nop
jne
cltd
sub
fadds
dec
ljmp
push
ja
xchg
scas
dec
mov
movsb
into
xchg
incb
out
int
dec
leave
pop
movsb
out
xor
pop
cmp
lcall
repz
es
jp
inc
test
add
xchg
fstl
fs
lcall
adc
xorb
call
add
sti
add
dec
mov
leave
jo
out
xor
repnz
add
sbb
xor
jle
cmp
call
shrl
sub
jecxz
adc
fsubl
dec
lahf
mov
xchg
and
dec
pop
shlb
rorb
ret
sub
push
mov
subl
mov
or
sbb
test
pop
inc
mov
cmc
and
push
test
sqrtps
add
inc
sarb
popf
jle
cmp
inc
jae
inc
cmp
pop
in
pop
cmp
add
aad
fistpll
xlat
push
mov
xor
iret
sbb
out
sahf
push
out
dec
lods
int
inc
insb
imul
ret
loope
leave
xor
sarb
mov
lock
fimull
lahf
testb
pop
mov
je
dec
bound
push
imul
imul
and
lcall
or
sbb
cmpsl
pop
paddsb
cmp
mov
lret
dec
adcl
jp
sub
sbb
sub
mov
push
mov
ja
daa
outsb
lret
lahf
jb
add
iret
xor
and
pop
adc
scas
mov
xor
iret
fnsave
pop
pop
adc
ljmp
cmpsl
aad
loopne
outsb
imul
lea
mov
out
movb
inc
pop
fdivs
shll
ss
xor
shll
cmp
imul
mov
cwtl
mov
test
call
call
aad
add
cli
mov
das
mov
add
pop
data16
adc
in
js
mov
mov
pop
cmp
dec
jns
pop
push
xlat
scas
xlat
sub
push
xchg
out
es
sahf
inc
scas
jle
jns
sub
int
iret
pop
insl
popa
rcrb
test
je
fcoml
xchg
stos
pop
sarl
fimuls
adc
jns
push
daa
inc
in
inc
lods
icebp
jns
jns
fsts
icebp
push
icebp
aaa
out
xchg
and
sub
dec
movsl
and
mov
cmp
push
push
jmp
addr16
std
xor
dec
xchg
mov
pop
scas
or
push
fs
push
inc
cmp
sbb
repz
mov
insb
add
or
push
fdivr
ret
xor
push
jmp
push
sub
mov
ret
rcrl
imul
lret
jne
add
inc
int
jo
add
push
sbb
sbb
add
jns
sub
cs
fstpt
insl
jle
aam
inc
fnstsw
mov
js
sub
cmpsb
movsb
pop
cmpsl
fs
sub
mov
adc
mov
dec
sahf
mov
call
mov
jl
mov
push
jo
mov
and
mov
ja
sbb
scas
cmp
mov
mov
test
ds
pusha
fcmovu
inc
inc
pusha
jl
daa
xchg
push
push
xor
ja
int
out
and
adc
and
in
adc
or
sti
sub
pop
jo
cmp
inc
inc
and
sub
loopne
divb
lds
mov
fisubrl
mov
xchg
ret
sub
enter
or
jmp
jmp
hlt
xchg
mov
int3
mov
cltd
adc
push
inc
push
push
push
mov
inc
dec
lcall
nop
add
sub
pop
mov
adc
int
xor
and
shl
mov
outsb
mov
cmp
adc
enter
sbb
sub
pushl
add
cmpsl
mov
loopne
rclb
sti
push
inc
lods
jne
jae
subl
les
add
into
fidivs
aaa
leave
dec
mov
mov
arpl
mov
les
paddd
and
mov
mov
sbb
jo
sbb
out
push
inc
arpl
fiaddl
push
jnp
jmp
push
lea
int
dec
pusha
cmp
dec
mov
cmp
fdivs
testl
push
lret
or
out
shll
push
sub
inc
faddl
popl
push
std
push
pop
xchg
mov
push
adc
mov
mov
jno
inc
mov
and
adc
xor
stc
push
mov
ja
push
aad
dec
inc
dec
push
popf
fdivl
imul
pop
out
pusha
loope
push
inc
pop
out
cwtl
cltd
mov
idivl
pushw
cmpsb
push
mov
xchg
mov
mov
mov
ficoml
add
popf
dec
imul
adc
sbbl
jb
shl
sub
sbb
xor
scas
sub
sahf
push
add
arpl
cmp
cmp
mov
scas
sub
or
push
push
xchg
movl
negl
mov
or
mov
jecxz
js
add
mov
sti
das
test
jns
jmp
fs
scas
cli
jp
pop
xor
cmpsb
idivb
hlt
movsl
fcompl
loop
xchg
shll
sbb
cmc
add
mov
pop
cltd
mov
es
xchg
lcall
mov
push
mov
and
mov
div
cmpl
popa
lret
xchg
int
test
and
clc
out
sub
jno
into
sbb
mov
flds
aaa
rorb
out
jnp
or
dec
fwait
mov
les
rclb
stos
pushf
das
fdivrs
mov
sub
sbb
or
stc
pop
jmp
aaa
mov
mov
xchg
pop
cmpsl
dec
mov
sub
sbb
or
stc
pop
jmp
aaa
mov
mov
xchg
pop
daa
dec
mov
sub
out
idiv
xchg
pop
fldenv
enter
test
ja
xchg
pop
cmpsl
dec
mov
sub
cltd
out
testl
daa
leave
inc
into
iret
and
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
dec
and
imul
imul
arpl
push
leave
in
fdivs
mov
cltd
repz
and
imul
sbb
inc
cmp
leave
mov
stc
xchg
dec
cltd
repz
and
imul
sbb
inc
cmp
mov
stc
repnz
xlat
mov
imul
jbe
enter
inc
push
pusha
dec
cmp
int
fsub
clc
dec
mov
mov
mulb
not
dec
les
xlat
pop
dec
push
xchg
push
divl
cwtl
cmp
ret
xor
sbb
push
outsb
imul
leave
cmc
lea
jmp
mul
repz
inc
mov
pop
add
jns
rorb
sub
lods
inc
pop
pop
dec
pop
pop
xchg
jae
jecxz
or
mov
mov
sahf
push
jmp
cli
stos
sub
pop
ljmp
xchg
fidivl
mov
mov
lret
jmp
movsb
dec
cmp
sahf
mov
loopne
jnp
xchg
jecxz
mov
test
pop
xor
jns
or
jae
inc
cmp
mov
stc
xchg
mov
cltd
repz
daa
sub
adc
push
imul
add
mov
out
mov
lcall
or
adc
aas
push
sub
lods
call
stc
testb
int3
mov
push
jno
jbe
dec
sbb
inc
cmp
mov
stc
xchg
mov
cltd
repz
and
imul
sbb
inc
cmp
mov
stc
xchg
mov
cltd
repz
and
out
push
shl
pop
sbb
dec
call
testb
mov
lahf
mov
push
shr
xchg
aam
adc
pop
pop
xor
pop
loopne
dec
aaa
xchg
mull
adc
jecxz
adc
stos
test
mov
jp
pop
jae
arpl
jmp
les
push
stos
adc
rorb
and
jnp
dec
xorl
adc
add
xchg
inc
cmp
cli
add
pop
shrl
ret
aad
mov
inc
adcl
ds
outsb
pop
inc
negb
hlt
cwtl
or
pop
push
jns
mov
arpl
in
js
push
adc
int
addr16
repnz
dec
not
push
dec
xchg
jnp
sbb
pop
push
cs
push
inc
mov
add
dec
fdivrs
mov
sbb
cmp
lock
or
sti
lods
adc
cmp
sti
sub
mov
sbb
je
mov
lret
movsl
xor
add
sub
cmpsb
push
mov
negb
loope
add
pop
lahf
fucom
cmpsl
xchg
mov
fists
push
push
push
dec
in
nop
or
and
fbstp
hlt
jnp
fdivr
lcall
push
or
cmp
or
in
cmp
outsb
int3
hlt
sbb
and
cmp
lret
pop
dec
iret
adc
xchg
fbstp
cmpsl
inc
cmpsb
xlat
adc
jbe
dec
aaa
xchg
mov
cs
pop
dec
xor
stos
insl
shrl
mov
mov
scas
rcrl
sub
arpl
mov
faddl
es
fs
cmpsl
scas
xchg
fbstp
addr16
or
sbb
or
repnz
mov
ds
scas
std
icebp
xchg
inc
shr
shll
sahf
inc
mov
or
fcomi
daa
lea
xchg
rclb
out
not
inc
and
cvtps2pi
sbb
xor
inc
push
fs
leave
dec
iret
cs
in
les
and
into
enter
out
cld
mov
inc
cmp
adc
sbb
push
aaa
sub
dec
sbb
rcr
push
iret
fxch
push
push
or
cmp
scas
push
dec
fwait
imul
mov
cld
or
jns
loop
mov
insb
sub
test
sbb
sbb
or
xchg
mov
shll
test
aam
shll
jne
movsl
jo
cwtl
pop
pushf
lahf
cmpsl
cmp
push
mov
mov
divb
xlat
lods
inc
int
subl
add
adc
test
fsubrs
mov
mov
dec
mov
or
enter
mov
mov
outsl
jg
lret
jge
jecxz
mov
and
lods
fs
push
sbbl
sahf
jns
mov
xor
xchg
sub
and
push
and
xchg
icebp
jl
jp
daa
mov
mov
xchg
xor
pop
mov
popf
lods
lods
das
inc
enter
mov
and
or
clc
mov
mov
arpl
ds
mov
jno
repnz
push
lea
and
jl
cli
add
pop
push
popa
mov
pop
cmp
sbb
cmp
cltd
insl
ret
dec
and
or
outsb
and
sbb
mov
das
xor
ja
push
lods
push
js
jge
jb
insb
outsl
jg
mov
and
outsl
sti
inc
cmp
lods
inc
mov
push
jl
test
call
andb
mov
inc
push
add
les
mov
orl
add
jmp
push
sub
jo
mov
and
push
mov
or
inc
or
add
sub
roll
jl
xchg
daa
xor
movsb
sbb
imul
xor
das
mov
mov
xchg
out
cmc
mov
sbb
divl
mov
push
lds
aam
out
sub
arpl
mov
out
inc
lods
pop
ss
out
repz
arpl
jo
mov
aad
in
pop
loop
repnz
lock
icebp
sarb
sub
pop
sub
and
fmuls
cmp
repnz
inc
mov
js
popa
cmpsb
test
adc
rclb
cmp
roll
add
fnstenv
push
jne
fildl
rdmsr
in
mulb
xorl
push
or
popa
int
or
sbb
cltd
pop
sahf
dec
repz
sbb
jb
cmp
jbe
fnstenv
sbb
push
jle
lods
cmp
mov
inc
dec
adc
adc
jg
sbb
mov
push
pop
cmp
mov
pop
inc
outsb
sbb
mov
adc
jne
je
mov
fistpll
insb
nop
jb
lret
jo
or
sahf
movsb
mov
aad
lods
out
mov
adc
loopne
mov
out
leave
imul
lret
mov
stos
ss
sub
rorl
dec
daa
pop
cmpsl
sbb
lcall
mov
insb
ds
lock
sub
aad
or
mov
add
dec
int
andb
mov
pusha
cmp
mov
mov
in
outsb
mov
push
lods
pop
inc
bound
xchg
clc
mov
mov
add
rorl
sarl
pusha
sub
out
mov
jmp
in
cmp
cli
scas
push
cmp
sub
popa
je
ret
loopne
mov
outsb
lds
insb
xchg
xchg
cld
dec
cmpsb
adc
xor
jp
lea
push
imul
rorl
js
adc
or
sbb
inc
mov
shlb
sub
andb
repnz
scas
out
mov
sub
sbb
insl
push
cmpsl
movsl
sti
repnz
mov
vrcpps
int3
push
rcrb
loope
mov
inc
mov
mov
sub
sbb
jo
ss
dec
testl
jp
lret
mov
sbb
addb
or
xor
or
call
xor
cmp
inc
mov
popf
into
mov
sbb
pop
dec
pop
popa
loope
cmp
in
pop
fstpl
jb
scas
roll
add
xchg
outsb
jo
and
shrb
sub
loopne
jno
pop
bound
lods
cmp
mov
push
lods
orb
xor
ja
mov
sbb
aaa
add
int3
pop
ja
inc
inc
cmp
decl
leave
dec
push
out
scas
push
mov
jae
fildll
lock
das
outsb
pop
mov
and
push
clc
out
jmp
and
pushf
sbb
call
xor
or
loop
cmpsl
pop
sub
ljmp
dec
sub
ret
int
fdivs
mov
scas
adc
pop
icebp
stc
leave
lahf
push
pop
jo
fisttpl
xor
movsb
fcomp
sahf
fcoml
xchg
out
je
ljmp
into
addr16
push
push
dec
add
repz
sbb
pushf
addr16
mov
mov
out
std
add
xchg
aas
pop
jbe
jp
xchg
dec
mov
sbb
jle
lret
cld
iret
adc
xchg
stos
mov
mov
aas
xchg
add
xchg
mov
cs
dec
sub
mov
sbb
fisttps
cmp
negl
test
lods
sarb
adc
out
movsl
mov
imul
cmpsl
inc
daa
cli
sub
lcall
in
pop
pusha
xorl
mov
add
int3
xchg
pop
pop
int
cmpsl
cmp
push
test
sbb
and
mov
cwtl
dec
fnstcw
inc
hlt
rclb
out
sub
fidivl
stos
jmp
adc
and
dec
xchg
xchg
ficoml
dec
arpl
enter
and
testb
aad
icebp
cmp
push
mov
pop
push
sub
inc
aam
mov
mov
aam
and
and
or
and
pop
pop
les
sub
push
cli
lea
inc
leave
inc
xchg
mov
push
lock
add
mov
jb
dec
cltd
xor
lret
fnstenv
jecxz
pop
out
xchg
jns
mov
xchg
mov
push
rcrl
mov
fcomi
je
jle
cmpsl
aaa
aam
int3
xor
inc
int3
cmp
clc
add
data16
push
cltd
cmp
and
xlat
push
inc
inc
inc
push
repnz
sbb
test
inc
aas
jb
sbb
add
sub
jmp
mov
cmc
fnstsw
notl
cld
pop
addr16
and
jno
push
mov
arpl
mov
ret
in
jns
test
sbb
xchg
cmpsl
aaa
cli
lds
add
push
lock
mov
icebp
push
cmpsb
rorb
pop
xor
or
daa
fdivp
or
mov
lcall
imul
pop
sbb
sub
mov
xchg
bound
rorl
testl
lea
dec
not
jno
lahf
fs
shrl
decl
inc
scas
call
lea
insl
outsb
inc
js
jae
adc
cmp
xor
insl
jmp
shlb
rol
or
cli
xorb
mov
adc
imulb
mov
xor
jecxz
and
sbb
nop
idiv
stos
adc
dec
mov
enter
xor
pop
dec
movsb
into
mov
dec
test
cmc
xor
test
fstl
inc
cmpsl
lods
cwtl
inc
ret
lock
lret
adc
sti
add
pushf
xchg
mov
sub
ss
xchg
sti
popa
mov
sbb
loop
xor
into
divb
dec
fdivrl
jnp
into
add
inc
and
insl
adc
bound
fcomi
into
mov
xor
mov
pop
imul
scas
rcr
adc
xor
xor
ret
push
mov
clc
mov
sub
jg
cs
shlb
push
out
dec
fwait
adc
fidivs
sub
push
jne
mov
lcall
cmp
jo
test
cmpsl
fsubl
fdivrl
dec
sbb
out
sbb
lds
mov
mov
push
cmpsl
adcb
hlt
sbbl
out
pop
imul
xchg
es
xor
jl
pop
or
test
std
cmp
rolb
sbb
or
jg
mov
xchg
cmp
icebp
je
push
aam
mov
add
icebp
push
iret
pop
mov
pop
dec
jg
dec
in
dec
push
insl
mov
adc
jne
add
jl
cmc
cmpsb
xchg
fistpl
fldenv
icebp
rorl
je
or
fsts
xor
int
cltd
shlb
aaa
add
xor
or
jle
mov
cmp
hlt
lret
call
dec
jl
std
call
in
jmp
lock
jno
aad
les
mov
insb
dec
jge
add
int
xor
jns,pn
mov
inc
insl
in
sub
int
lar
xor
loope
sub
pushf
or
in
jns
dec
jae
dec
push
pop
push
cmp
call
mov
iret
pop
add
sub
outsl
jl
jno
inc
mov
cld
fidivl
rolb
popf
mov
icebp
sbb
xchg
ss
pop
mov
pushf
lcall
push
out
aaa
clc
push
push
pusha
cmp
xchg
xor
sarb
sbb
and
and
ss
pop
test
outsb
or
xor
mov
add
fs
jbe
and
jl
outsb
lahf
inc
fstpl
xchg
inc
pop
sahf
mov
stos
imul
outsb
sbb
cmp
cmpsl
test
cmpsl
or
cltd
jb
les
xorl
in
xor
rclb
sub
fwait
nop
mov
aaa
nop
cmpb
xchg
sub
outsb
cmc
and
sbb
ljmp
fnstenv
cmp
imul
sbb
std
mov
or
pop
test
jle
or
xchg
push
fwait
cmp
mov
les
incl
mov
shrl
cwtl
ret
jbe
fiadds
orl
fcoms
movsl
andb
mov
outsl
imul
call
test
ss
movsb
add
mov
xchg
adc
inc
mov
repz
int
sub
sbb
mov
or
frstor
popf
xor
push
sbb
cs
je
fsubrp
loop
inc
dec
cli
jo
out
pop
adc
shl
out
lock
test
fimull
xchg
cs
xor
movsb
xor
imul
xor
xchg
and
shll
sbb
xor
gs
mov
or
jae
mov
scas
cmc
mov
jge
pop
scas
pusha
cmp
dec
sahf
jp
xchg
lret
bound
dec
scas
dec
jns,pn
test
sti
jo
scas
scas
sahf
sbb
dec
xchg
xchg
or
aaa
mov
sahf
das
cwtl
or
orb
push
push
into
add
in
fsub
xor
dec
push
sub
add
jmp
stos
pop
and
mov
push
in
ljmp
lret
mov
pusha
cs
cs
ss
arpl
idivb
cmp
incl
pusha
roll
or
pop
cld
or
push
xchg
dec
dec
shlb
test
jmp
pop
mov
push
push
das
lds
xchg
cmp
dec
shlb
adc
pop
mov
fbstp
mov
mov
stos
mov
popf
dec
cmp
push
cmpsb
sub
fxch
fisttpl
popf
repz
xchg
mov
sub
fldl
popa
imul
orb
mov
aad
cmp
pop
popf
sub
inc
mov
inc
pop
push
jecxz
jecxz
ds
cmp
cltd
outsb
pop
jnp
shll
jg
jmp
sbb
push
mov
pop
jmp
outsl
out
adc
jne
pop
test
arpl
pop
mov
bound
andl
lods
lock
mov
adc
in
fcoml
sbb
jnp
call
cwtl
or
mov
outsb
sub
fdivs
fbld
mov
pushf
add
jge
sahf
inc
push
test
out
mov
mov
add
scas
pop
or
arpl
push
lds
addb
sub
pop
push
pop
xor
pop
inc
lret
xchg
cmp
mov
je
loope
ret
shll
mov
jnp
daa
adc
fldt
hlt
jbe
repnz
std
mov
sbb
adc
fsubr
or
cmp
adc
leave
dec
mov
lea
fstl
mov
lret
rcl
sub
adc
ret
fildl
movsl
scas
orl
imul
pop
jo
subb
lahf
xchg
xor
js,pn
push
test
aas
icebp
jg
add
mov
pop
inc
lret
jmp
xor
fldcw
mov
enter
or
std
gs
call
cmc
sub
sarl
mov
arpl
es
jbe
mov
xchg
call
jnp
cwtl
add
add
jle
inc
or
jbe
adc
push
mov
xchg
and
call
xchg
xchg
cmpsb
idivl
sub
pop
mov
rclb
sub
stos
lret
imulb
xchg
pop
in
insb
lret
lea
jecxz
sub
ss
cs
shrb
lods
jmp
repnz
adcl
insb
addr16
inc
outsl
in
pop
or
push
mov
sub
inc
pushf
dec
out
push
pusha
dec
pop
push
dec
incl
jg
pushl
hlt
sbb
mov
repz
push
lcall
fs
mov
mov
push
mov
lea
lock
aaa
rcl
sbb
jnp
call
xor
and
out
pushf
xchg
pop
and
xlat
jnp
cmc
mov
adc
fldcw
gs
or
dec
flds
and
pop
jne
cmp
push
push
xor
xlat
out
imul
add
mov
sbb
mov
test
ljmp
fdecstp
mov
push
js
add
ljmp
cmp
xchg
inc
popf
test
xor
xchg
sbb
adc
inc
xor
pop
out
aad
lret
mov
push
dec
lods
iret
fiadds
lea
pop
fs
dec
fsubp
ljmp
pop
shll
adc
cmc
cld
jecxz,pt
andb
inc
pop
dec
inc
popf
push
sub
test
xor
ds
pop
push
rclb
xchg
mov
cmp
roll
cmc
scas
inc
pop
adc
fiadds
ljmp
cld
pop
xchg
jecxz
dec
mov
rcr
inc
repz
xlat
xor
sub
or
pushf
rolb
arpl
push
push
jle
dec
sbb
inc
xor
xchg
movsl
and
pop
cmp
mov
jmp
subb
jns
leave
scas
repnz
jecxz
sbb
xchg
adc
pop
jns
mov
hlt
pop
test
cmpl
push
fidivl
adc
mov
mov
dec
cmp
sub
nop
mov
xor
pop
jb
or
pop
inc
adc
int
mov
jbe
pop
cmp
cmp
fidivl
dec
xor
leave
ret
fmull
lahf
mov
jae
mov
cmp
mov
dec
adc
cmc
lahf
adc
or
inc
and
loopne
arpl
shrl
lcall
sbb
js
cmpl
push
into
pop
xlat
fs
js
ja
mov
push
push
out
cwtl
add
imul
pop
dec
dec
mov
fbld
and
mov
jno
and
je
in
mov
lods
in
cmp
les
clc
mov
repz
xor
loope
mov
pop
aas
cmp
xor
ds
out
aas
filds
push
call
add
or
repnz
icebp
outsb
dec
push
clc
movsl
pop
xchg
cmp
fyl2xp1
rolb
stos
jbe
mov
dec
aas
mov
mov
xor
iret
jne
sbb
daa
jle
outsl
mov
mov
and
stos
insb
pop
lcall
cli
mov
add
or
sarl
sahf
bound
sub
or
mov
dec
mov
xor
pusha
mov
sahf
std
jmp
mov
int
ds
mov
movntq
enter
cltd
shlb
test
or
dec
jae
mov
mov
dec
mov
pusha
out
adc
sbb
sbb
add
sbb
inc
in
sub
das
inc
xchg
add
sbb
fs
or
push
cmp
mov
xchg
fwait
jmp
xchg
mov
add
pop
test
cltd
lret
orb
fstps
xchg
push
mov
cmc
fisubl
dec
push
xlat
enter
or
and
out
sub
push
mov
in
leave
and
jns
push
ss
cmp
pop
xchg
shlb
sub
mov
and
inc
sub
out
xchg
ret
add
inc
sub
push
xchg
leave
fldl2t
sub
add
jg
in
andb
dec
and
inc
data16
xor
cmpsl
popa
fwait
jecxz
push
jae
mov
inc
les
adc
pop
dec
or
lret
scas
scas
movsl
aas
mov
inc
jge
addl
pop
aam
in
jg
cmp
cli
fdiv
and
xchg
leave
addr16
xor
jno
pop
add
out
mov
test
cmpsl
in
jb
mov
mov
outsl
xor
jns
jae
add
fistpl
mov
callw
and
xor
jbe
das
cmp
push
cmp
cwtl
int3
mov
mov
cmpsb
les
dec
push
mov
jns
adc
push
jne
cs
cmp
mov
cmp
xor
mov
or
sub
jb
xor
mov
cli
dec
in
push
or
xlat
adc
mov
icebp
cmpsl
cmp
xor
inc
push
jns
lea
sub
cmp
hlt
negl
mov
push
jns
cwtl
push
shrl
and
lcall
cwtl
jmp
push
dec
mov
mov
dec
outsl
movsl
mov
test
movsb
add
add
jecxz
jmp
arpl
into
lea
and
fwait
dec
push
mov
pusha
mov
lahf
popa
pop
lea
sti
out
dec
xchg
hlt
ficoms
cmp
stos
sub
orb
xchg
dec
loope
repz
lea
jl
push
arpl
jae
inc
cmp
mov
stc
xchg
mov
cltd
repz
and
imul
sbb
inc
cmp
mov
stc
xchg
mov
cltd
repz
and
xor
add
mov
jae
inc
mov
mov
cmp
mov
cltd
repz
and
imul
sbb
inc
cmp
mov
stc
in
imul
fnstcw
sub
push
or
sub
cmp
pop
push
and
loope
lds
xchg
mov
stc
mov
movsb
push
push
or
sub
dec
adc
xor
push
xchg
fmuls
in
out
xchg
mov
movsb
add
pop
and
inc
or
jle
cltd
aam
out
fstl
mov
or
sbb
xor
adc
push
fdivl
lret
bound
jno
jo
inc
out
insb
xor
fstpl
push
test
cmp
xor
fs
mov
mov
cmp
movsb
sbb
sahf
ficoml
enter
inc
jmp
pop
lahf
dec
das
imul
jns
aam
jmp
xor
leave
or
mov
jl
pop
adc
inc
imul
pop
test
add
shl
mov
or
mov
cmp
dec
xchg
sub
lods
or
pop
jae
enter
adc
stc
stos
or
jbe
movsb
out
in
ret
xor
jbe
inc
or
sbb
or
ds
adc
add
xor
cmp
mov
mov
pushf
stc
scas
lock
push
insb
ss
adc
cmp
pop
add
in
mov
movl
sbb
sub
sub
inc
sub
fwait
mov
fsub
mov
shr
shlb
cmp
sub
and
dec
add
xor
and
aam
les
xchg
leave
test
mov
movsb
sbb
cmp
pop
adc
add
xor
and
aam
les
xchg
leave
test
mov
movsb
sbb
pusha
repz
data16
gs
cli
cmp
sahf
mov
gs
hlt
stc
inc
mov
mov
divl
cmpsl
fprem1
out
jbe
std
cmp
or
jecxz
mov
cld
dec
andl
andb
or
sub
push
push
ss
xchg
push
and
insl
movsl
mov
cmp
out
mov
sbb
je
adc
adc
aaa
daa
cmp
push
dec
inc
sbb
dec
xchg
cmc
sbb
mov
xor
test
call
add
dec
cmp
pop
jae
enter
jo
mov
xor
out
in
cmp
sub
ret
lods
aam
mov
imul
xorl
cwtl
outsl
pop
rcll
mov
or
in
push
xchg
inc
fwait
pop
lret
mov
sbb
add
xor
pop
xor
xor
fwait
lock
push
pop
cltd
dec
mov
mov
jp
cmp
lea
lcall
pop
sub
ret
and
mov
stc
mov
test
lds
and
aas
dec
loop
clc
insb
dec
sub
das
add
cs
fisubrl
pop
and
scas
sub
sub
ret
subl
in
lea
fdivrs
fs
lods
outsl
sub
test
jmp
pop
cmp
outsb
test
inc
pop
and
jbe
mov
mov
mov
data16
in
sbb
dec
xor
lods
ds
xchg
test
cvttps2pi
dec
in
mov
popa
sbb
fnstenv
sbb
dec
and
inc
daa
cld
les
pop
imul
or
icebp
jnp
mov
stos
les
xchg
lds
in
push
add
fbstp
cmpsl
fcmovnbe
cltd
popa
fdivs
cmp
ja
clc
lret
mov
outsb
mov
std
icebp
jns
out
out
leave
sti
cs
mov
loop
xorl
cld
pop
add
jmp
dec
jns
dec
jns
xor
mov
push
ret
int3
jae
fmull
add
popa
xor
xchg
stos
incb
mov
jg
inc
movsl
dec
xchg
pop
add
rolb
and
cmc
and
adc
mov
sub
lret
add
push
inc
push
push
xlat
mov
ss
dec
sbb
push
fsub
xchg
mov
jnp
dec
dec
sahf
scas
stc
fcmovnbe
sbb
enter
adc
scas
scas
inc
jne
adc
into
pushf
bound
faddp
stos
jle
sub
or
pop
frstor
pushl
mov
adc
clc
push
mov
aaa
adc
dec
jmp
movsl
xor
xlat
cmp
mov
add
test
insl
sbb
xchg
mov
aas
in
daa
test
sub
xorb
add
pusha
xor
sahf
sahf
and
iret
cmp
ret
adc
cmpsb
inc
imul
mov
dec
mov
test
repz
test
sub
push
adc
out
and
xchg
cmc
dec
addr16
sti
fsubrs
movsl
test
ja
dec
cmp
bound
shll
es
xchg
push
aam
mov
sub
inc
ds
mov
sahf
cltd
mov
sarl
push
and
push
push
inc
cmp
mov
xor
imulb
fdivrp
pop
ficompl
in
mov
aad
pusha
push
gs
call
xor
or
mov
stos
sti
call
cmp
xchg
push
jge
enter
and
add
sar
or
outsb
mov
push
mov
jl
and
adc
lcall
psllq
lret
dec
xorb
cmpsl
fldl2t
pushf
jl
pop
mov
sbb
inc
adc
push
push
cmc
aam
cmpsb
cmc
ret
and
fldt
out
cwtl
js
sbb
js
in
arpl
pusha
jno
cli
aad
push
mov
data16
cwtl
addr16
xlat
adc
popa
xor
mov
xor
mov
stos
out
mov
push
mov
mov
inc
lea
jmp
test
jge
sub
pop
fs
out
and
push
sbb
adcl
popa
iret
xchg
pop
divl
push
mov
push
lds
inc
cmp
rcrl
mov
shrl
out
add
xor
nop
adc
bsf
jbe
cmpsl
aas
ds
insl
pusha
xchg
pop
xchg
imul
sbb
inc
or
adc
xchg
fbstp
clc
roll
or
jmp
mov
jo
mov
insl
inc
pop
out
inc
xor
mov
cmp
insb
insl
lea
and
add
popf
dec
ljmpw
mov
sub
hlt
xchg
rcl
loop
rol
popf
dec
and
rcl
das
mov
out
inc
imul
addr16
ljmp
or
push
add
cmp
int
sub
ret
pop
je
push
loopne
dec
and
popa
dec
mov
lea
lds
xchg
stos
sbbl
mov
jns
lcall
out
mov
mov
pusha
test
fmull
rcr
test
mov
jg
push
sub
jne
add
adc
aaa
leave
lock
orb
repz
xor
cmovo
fldz
jbe
fimuls
xchg
es
paddusb
sbb
xorb
outsb
es
outsl
mov
xor
in
stc
dec
fsin
jno
dec
or
jae
fnsave
jmp
sub
das
stos
addr16
pop
push
push
xchg
rorb
mov
jmp
sub
loopne
lcall
inc
mov
lods
jo
mov
inc
leave
mov
movsb
jge
adc
push
xchg
lret
inc
jge
lret
es
inc
push
cmpb
int3
mov
inc
adc
js
scas
mov
add
ds
das
iret
rorl
outsb
mov
pop
rolb
sbb
sub
push
sbb
dec
fsubl
mov
mov
das
test
cmc
adc
mov
sbb
dec
jp
dec
xor
das
and
jnp
mov
insl
lahf
mov
xor
dec
xor
and
loope
popa
repz
dec
sbb
push
jno
push
sbbl
mov
in
jne
andl
cwtl
in
loope
pop
in
push
mov
scas
mov
cmp
cmp
push
pop
test
jnp
push
pop
pop
jmp
aas
pop
dec
mov
xchg
mov
leave
jbe
daa
dec
ljmp
or
or
dec
mov
data16
imulb
out
push
je
cmp
mov
lods
jne
pop
jg
cmp
or
mov
adc
add
sti
stos
cld
cld
xchg
xchg
les
add
int
fistpl
adc
fwait
add
dec
add
adc
dec
sbb
dec
or
je
pop
test
inc
pusha
scas
movsl
push
lret
adc
std
push
lret
xchg
imul
xlat
in
pop
call
es
sbb
jno
in
rcrl
repnz
push
sarb
dec
out
pop
gs
jo
push
inc
incb
pop
jne
cmp
xor
test
and
lcall
add
cmp
enter
sub
dec
push
daa
test
je
sti
mov
ret
cmp
lods
mov
scas
negl
cmp
push
gs
imul
dec
cmp
cmpb
ret
mov
sbb
dec
xor
adc
dec
dec
lret
das
iret
into
add
jge
out
add
scas
cltd
data16
push
fiadds
jo
in
push
gs
hlt
and
jb
and
inc
add
lahf
mov
idivl
icebp
sti
sbb
pushf
lret
ljmp
je
jg
mov
jl
stos
inc
imul
out
ret
out
adc
jae
mov
lods
push
pop
je
movsb
js
xor
or
jbe
xor
jne
test
imul
int3
jle
gs
inc
lods
jae
or
sub
mov
mov
test
pop
and
cmp
bound
xlat
mov
mov
jle
xchg
pushf
js
je
and
test
dec
daa
or
pop
xlat
sub
in
clc
or
inc
inc
out
pop
test
sub
pop
or
pop
jo
jbe
stos
jmp
insb
int
leave
arpl
jo
adcb
jle
ror
or
mov
jns
push
pop
push
adc
inc
imul
ret
or
andb
insl
not
lock
and
fs
cltd
inc
fxch
push
outsl
xchg
jg
mov
xchg
cli
in
imul
aaa
out
data16
dec
and
bound
mov
lcall
sar
push
pop
xchg
pop
bound
in
cmpsl
outsb
loope
add
mov
cld
sbb
cmpl
rcll
lds
mov
idivb
test
les
pop
test
dec
push
fcomps
call
xchg
mov
cmc
pop
jg
jno
imul
jae
aad
imulb
mov
in
rorl
icebp
mov
lret
lret
mov
test
or
imull
lcall
aaa
cmp
add
dec
sbb
pop
pop
cltd
and
or
test
sbb
add
mov
lret
cmp
pop
es
mov
xor
test
mov
test
xlat
cltd
cmp
mov
adc
inc
dec
movsb
xor
cmpsw
mov
cmp
mov
cmp
jbe
cmc
dec
jle
rcll
adcl
xor
mov
scas
sbb
cmp
or
loop
rorb
ret
pushf
jge
jae
bound
sbb
pop
pop
imul
ljmp
inc
outsb
and
sbb
xorb
xchg
xor
inc
in
out
jle
scas
xchg
pop
imul
jns
inc
xchg
xor
and
fimuls
lds
adc
cmp
ret
pop
icebp
xlat
lods
cmpsb
arpl
stos
daa
inc
out
push
sbb
mov
and
fwait
ss
push
ret
imul
jle
inc
incb
sub
dec
or
pop
xchg
repnz
mov
push
xchg
jmp
popf
jg
push
insl
jbe
mov
and
mov
sub
fcmovb
push
mov
xlat
add
jmp
ja
adc
mov
in
in
lea
pop
jecxz
insb
inc
jmp
push
mov
sbb
add
movsb
pop
insl
hlt
dec
test
cmp
or
mov
cmc
xor
and
lahf
repnz
out
das
mov
mov
ljmp
insb
lock
js
jp
lods
xchg
add
pop
sbb
inc
cwtl
out
lods
lret
pop
jmp
mov
out
dec
outsb
popa
leave
push
mov
push
add
pop
sub
push
rclb
xor
xlat
fs
aad
bound
sbb
and
cld
jle
cld
dec
or
push
subl
mov
and
loop
pop
mov
les
testl
in
pop
pop
pop
rcrl
mov
push
iret
xor
sahf
bound
aaa
xchg
push
mov
mov
outsb
mov
popl
int3
in
fsts
xchg
pop
mov
pushw
incl
or
mov
add
xor
inc
cwtl
and
movsb
bound
mov
jmp
adc
and
or
xlat
jb
or
lock
mov
inc
in
xor
mov
and
int
inc
mov
and
push
cli
xor
out
add
sets
rolb
jae
insl
jge
or
add
enter
xlat
fs
in
in
jle
mov
loopne
or
sub
jp
push
mov
imul
test
and
pop
mov
add
cwtl
xchg
fbstp
sbb
mov
add
xchg
pusha
inc
xchg
inc
adc
pop
mov
lret
clc
pop
or
jno
loop
mov
call
mov
inc
or
cltd
mov
jecxz
and
push
sub
icebp
add
enter
cld
cmp
mov
push
push
add
push
sub
push
jmp
dec
or
xchg
je
pop
push
ljmp
inc
jmp
ss
loop
sub
fstpl
mov
add
sbb
loope
ret
mov
mov
js
mov
mov
inc
jg
xchg
cmpsl
adc
mov
adc
mov
inc
mov
in
pop
out
adc
shrl
movsb
incb
addr16
inc
std
aaa
addb
int3
xor
lret
xchg
outsb
inc
and
mov
xor
adc
int3
stos
push
jle
fs
scas
arpl
bound
inc
xor
je
mov
repz
pop
pop
xchg
mov
jno
scas
cmp
js
mov
ljmp
jb
add
stc
repnz
add
inc
dec
jnp
fiadds
cwtl
cmp
cmp
stc
mov
lret
ret
loopne
mov
jp
aas
test
mov
pop
mov
cmovge
mov
xchg
cmp
cs
cmp
adc
push
xchg
bswap
mov
int3
push
jo
fdivrl
dec
mov
sub
lods
inc
enter
jo
cmp
xchg
inc
add
mov
xchg
or
aas
xchg
pop
xor
fs
lock
dec
mov
lret
loope
mov
out
popf
cld
cmp
pusha
ret
ss
and
sub
push
iret
mov
xchg
xchg
mov
fsubp
enter
outsb
clc
pop
dec
cmp
add
add
daa
xor
lcall
xor
sbbb
xor
pop
test
ret
cmpsb
pushf
jbe
mov
pushf
push
xor
xorb
xor
popf
lret
pop
xor
std
mov
mov
jp
lds
rolb
pusha
adc
imul
dec
iret
lret
loopne
test
push
adc
inc
jnp
addr16
lret
add
jp
fldcw
fs
sub
pop
leave
idivb
mov
push
mov
iret
or
sub
aam
ret
cmp
xchg
test
ss
mov
ror
mov
cmp
add
in
jb
fs
pop
sysenter
inc
or
stc
aad
in
mov
pop
xchg
adcl
in
aaa
enter
scas
adc
push
ljmp
mov
xchg
call
mov
mov
inc
push
inc
or
add
sub
adc
lock
out
std
mov
clc
push
addl
push
jae
xchg
xchg
pop
mov
pop
cmp
js
das
data16
adc
rcrb
adc
mov
xlat
adc
adc
rcrl
lcall
enter
ljmp
pop
mov
lds
cmc
dec
js
push
jo
push
movsl
int
mov
jns
arpl
dec
mov
in
xchg
iret
pop
sub
inc
jae
and
sub
adc
xlat
jne
leave
jno
add
flds
rcll
aam
imul
pop
and
push
mov
idivb
in
push
pop
inc
cmp
addr16
or
fldl
mov
daa
inc
andl
out
ss
and
xor
aam
xor
fisubl
in
mov
call
psubsw
and
add
movsl
jb
sbb
in
pop
push
xchg
jecxz
sub
sub
cmpsb
sub
push
add
loop
adc
dec
sub
xchg
aaa
adc
xchg
lret
popf
test
rcr
sahf
or
jbe
sti
sbb
xlat
mov
inc
call
faddl
imul
mov
xchg
mov
push
hlt
xor
or
mov
ss
stc
scas
mov
daa
rcl
lods
cmp
loope
das
sahf
lea
push
mov
dec
mov
xor
xchg
or
push
pushf
cwtl
mov
lahf
push
popf
arpl
mov
mov
xor
sub
sub
stc
sti
jo
dec
cmpsl
sub
lds
add
push
xchg
pop
hlt
and
test
mov
jge
fwait
mov
out
mov
loopne
lds
cmp
pushl
rcll
mov
fistpl
xchg
xchg
cmp
loope
jg
into
cmpl
iret
xchg
pop
mov
push
xchg
es
push
jne
lret
xchg
jnp
test
loop
cmpsb
push
xchg
out
out
dec
dec
inc
sub
pop
scas
mov
sbb
dec
mov
adc
sub
arpl
bound
jge
or
push
fwait
addr16
xchg
lds
icebp
shlb
les
sbb
xor
jp
mov
repz
vpunpcklqdq
addb
push
or
and
fwait
mov
mov
mov
int3
or
push
xchg
push
cwtl
int3
mov
mov
sbb
pop
and
movb
xchg
jb
push
adc
repz
push
xor
mov
dec
jmp
stc
sti
test
lea
cmp
out
sbbl
cmp
adc
mov
inc
inc
orb
push
imul
cmp
adc
sub
jle
push
and
mov
mov
pop
or
imulb
lret
mov
popf
in
icebp
push
addb
rcll
or
pop
inc
test
out
out
fsubrs
jmp
jmp
pusha
mov
clc
xchg
cmp
jno
pop
stc
insl
push
sbb
xchg
mov
mov
or
in
clc
int3
cli
ret
jo
aaa
mov
jb
fwait
jp
jge
rep
outsb
loopne
imul
cmp
mov
lret
sub
jno
lcall
out
xchg
dec
notl
stos
jmp
fwait
outsb
call
sahf
nop
mov
enter
xor
movsb
pop
push
xchg
fwait
or
icebp
sub
int
ds
fwait
outsl
js
std
or
mov
dec
cmp
cs
std
bound
add
jbe
cmp
push
icebp
cli
cltd
jne
roll
test
lahf
cmpsb
call
sti
jecxz
xchg
push
pop
jmp
loopne
into
addr16
cmpsl
clc
ds
insl
jns
push
dec
lds
in
sbb
lahf
cmc
sbb
movsb
insl
lahf
fisubl
sub
jnp
push
sub
in
scas
in
inc
hlt
out
aam
test
rcll
jo
mov
loop
movsb
das
mov
repz
cld
mov
mov
xchg
push
xchg
lret
jno
lock
mov
mov
gs
clc
push
fldenv
cmpl
mov
jl
adc
mov
jp
mov
scas
loope
mov
mov
sub
and
pop
test
into
aad
push
decl
daa
cmp
scas
adc
lcall
lcall
out
xchg
lcall
andl
xor
inc
adc
sbb
insb
inc
rol
in
and
mov
mov
loop
dec
xchg
out
jbe
lahf
adc
xchg
jmp
dec
enter
lods
jg
scas
and
repnz
xlat
mov
or
ret
sbb
add
insl
sti
mov
pop
hlt
and
nop
mov
fistpl
mov
inc
fdivl
dec
mull
es
in
pop
inc
xchg
hlt
popa
adc
adc
xchg
inc
push
pop
fidivl
das
cmc
sub
mov
dec
das
xor
jp
popf
popf
ds
jl
cmp
jmp
pop
sti
or
nop
or
dec
popf
mov
aam
lods
insb
mov
fwait
call
lods
rcll
xchg
mov
push
and
cltd
mov
mov
adc
mov
pop
pop
fsubs
cld
cwtl
jno
mov
push
mov
xorl
lret
rcrl
and
insl
data16
mov
int3
ss
hlt
lods
leave
jae
sbb
xor
insb
xchg
sbb
push
jno
jnp
inc
pop
pop
imulb
std
fisubrs
pop
mov
loopne
jne
jg
pop
mov
lcall
lret
pop
pop
mov
mov
insl
xchg
pusha
into
or
add
incb
ret
repnz
jb
xor
xchg
pop
inc
repz
xchg
dec
dec
fiaddl
jbe
pop
adcl
daa
shrb
punpckhwd
pop
test
lahf
jnp
or
xchg
pop
inc
pop
adc
inc
xor
xor
insl
push
sahf
push
adc
aas
subb
or
adc
in
sub
rorb
lods
jae
xor
in
pop
ss
jae
sarl
stos
and
flds
jne
mov
and
dec
or
jb
add
and
jae
sbb
mov
fistpll
insb
or
jp
adc
jne
out
lods
jb
cmp
gs
call
out
mov
xorb
add
or
lds
scas
enter
sub
dec
add
xor
and
aam
les
xchg
leave
test
mov
movsb
sbb
cmp
pop
adc
add
xor
and
aam
les
xchg
leave
test
mov
movsb
sbb
cmp
pop
adc
add
xor
and
aam
les
xchg
int
stc
mov
mov
pshufw
pop
adc
add
xor
in
aam
outsb
adc
test
sti
push
lret
push
fistl
in
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
sbb
adc
movq
pop
inc
sub
decb
add
add
add
add
pop
add
add
add
inc
add
add
add
add
add
adc
add
add
mov
mov
push
add
aad
jae
mov
push
add
add
sub
add
add
mov
pop
add
push
add
add
add
dec
add
loope
adc
push
add
add
add
add
add
add
dec
add
add
xor
outsb
add
add
add
filds
inc
add
lods
add
add
add
add
repnz
or
data16
mov
mov
jae
inc
add
mov
loope
jo
in
add
add
add
add
add
add
xchg
add
add
inc
add
add
add
test
adc
xchg
add
add
add
add
add
add
push
add
add
add
add
out
add
cmp
loope
filds
add
lods
add
add
add
add
xchg
add
add
add
ret
add
add
inc
add
cwtl
add
add
pop
add
add
add
movb
add
add
add
add
loopne
cld
add
cmp
cmp
push
add
add
add
add
pop
add
mov
inc
add
add
inc
add
add
add
add
add
add
add
add
jnp
outsb
add
jno
movb
add
mov
mov
sbb
les
xor
add
add
add
add
add
data16
add
add
mov
add
add
add
add
add
add
pop
add
inc
add
pop
add
add
add
cmp
les
cmp
out
add
add
add
add
mov
add
add
add
add
mov
inc
add
add
mov
jae
test
push
add
add
movsb
add
fs
lcall
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jns
mov
inc
add
add
add
inc
add
cwtl
add
add
mov
push
add
add
add
lldt
add
add
add
adc
fiaddl
fs
or
inc
add
outsb
add
adc
pop
add
cld
add
outsb
add
adc
add
add
add
add
add
add
add
dec
add
add
pop
add
add
add
push
add
add
add
add
mov
add
add
cmp
cwtl
add
add
push
add
mov
clc
add
add
add
add
push
add
add
out
add
add
add
add
and
je
mov
jle
or
add
add
mov
clc
add
add
add
add
add
add
add
add
outsb
repnz
pop
sbb
pop
mov
xor
mov
mull
sub
mov
pop
sbb
scas
gs
push
mov
dec
repnz
cmpsb
test
mov
cmp
sbb
test
xor
int
mov
jl
sub
and
cmp
cmp
cli
mov
or
insl
or
jp
push
and
push
loop
cmc
ljmp
lret
or
inc
out
test
mov
jne
stos
add
adc
push
sub
jb
out
mov
jg
push
jle
sbb
lret
loope
scas
icebp
push
lcall
mov
inc
aad
add
das
icebp
arpl
lahf
push
int3
add
hlt
shlb
xchg
rorb
cld
fldt
clc
jp
xchg
fwait
mov
jo
ja
jmp
sbb
sub
mov
loope
ljmp
das
xchg
jne
jns
push
lods
dec
jmp
push
xchg
jmp
push
subl
or
aas
rcll
cmc
fiaddl
pop
cmp
packsswb
xor
xchg
sbb
mov
cmp
sub
rorl
cli
xor
out
test
push
mov
divb
insl
mov
cmp
ss
mov
cltd
js,pt
icebp
xlat
xchg
adc
cmp
dec
cld
xor
out
stos
cmp
xchg
lcall
sbb
and
dec
cli
mov
lcall
lds
pusha
mov
test
notl
push
mov
sti
daa
pop
ljmp
leave
mov
dec
lahf
xor
repz
gs
lods
divb
xchg
stos
imul
sbb
popa
adc
add
mov
pop
add
js
stc
dec
or
dec
fcoml
movsl
outsl
fnstcw
popa
pop
cltd
xorl
psubusw
ljmp
imul
xor
daa
push
pop
ret
loope
or
add
jns
mov
adc
aam
pusha
test
ret
inc
pop
rcll
ds
or
sbb
std
jae
or
loop
xchg
mov
test
mov
push
data16
outsl
fistps
cmpsl
popa
jl
mov
sbb
int
push
push
cmc
fiaddl
cmp
mov
or
out
mov
lret
iret
test
ljmp
aaa
push
mov
mov
cmpsb
clc
loopne
mov
mov
int3
cld
fcmove
lock
cwtl
orl
loope
je
inc
mov
rorb
xchg
movb
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
