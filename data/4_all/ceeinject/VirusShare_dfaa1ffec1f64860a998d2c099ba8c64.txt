call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
hlt
es
inc
push
push
push
sahf
ficoms
data16
jo
in
hlt
mov
xchg
aam
movsl
out
jns
xchg
fs
inc
push
push
push
and
xor
add
adc
in
hlt
mov
xchg
xchg
movsb
xchg
mov
test
xchg
fs
je
inc
push
push
push
and
xor
add
adc
in
hlt
xchg
movsl
pushl
andb
inc
or
jno
scas
adc
jmp
idiv
lret
addb
sarl
pop
scas
xor
stc
mov
and
mov
or
pop
imul
insb
loope,pn
jne
dec
xor
mov
or
cmpsb
movsb
mov
in
sub
inc
je
pop
rcll
fs
mov
data16
adc
hlt
inc
xor
jns
sbb
jae
cmp
leave
pop
stc
inc
int3
cmpsb
cmp
add
adc
mov
dec
xchg
jle
das
mul
fsub
add
je
into
rcrl
inc
rolb
sbb
and
mov
pop
imul
les
es
pop
push
push
and
xor
add
adc
in
hlt
scas
les
mov
test
xchg
xlat
adc
xor
sbb
fs
pop
inc
sub
mov
inc
mov
xorb
jmp
dec
aaa
pop
xor
jns
push
cmp
insb
fs
cltd
sarl
not
mov
pop
ss
bound
push
xor
add
adc
in
hlt
mov
xchg
xchg
movsb
out
testb
ss
push
push
push
and
xor
add
adc
in
hlt
mov
xchg
xchg
movsb
out
testb
and
push
in
aas
call
repz
lods
dec
inc
sahf
mov
movsl
pop
jecxz
lcall
cli
clc
add
pusha
cli
push
hlt
mov
ss
lcall
decl
dec
push
push
leave
xor
xor
cmp
xchg
jg
xchg
mov
popf
push
xor
pop
adc
das
je
mov
ror
dec
xchg
sub
xchg
ja
jbe
pop
sub
or
mov
mov
das
sti
mov
xchg
out
shrb
test
mov
sub
mov
xchg
mov
jp
push
jle
push
mov
xchg
out
add
add
xorb
and
daa
xor
pop
movsb
jmp
mov
xor
out
mov
test
mov
mov
cmp
add
rol
ficomps
in
xchg
or
pop
adc
jo
ficompl
decl
popa
push
and
sbb
jae
das
xchg
xor
lock
mov
push
mov
pusha
inc
xor
add
stos
movsb
call
xlat
mov
aas
hlt
push
sub
movsb
adc
dec
jnp
outsb
ljmp
sbb
sbb
jmp
jnp
inc
sbb
dec
rorl
mov
sbb
push
in
daa
cmp
mov
jo
arpl
xchg
push
lcall
add
sbb
arpl
jge
out
adc
jmp
icebp
sub
xor
je
sub
loopne
adc
leave
sbb
aas
cmp
mov
jns
addr16
test
data16
outsb
mov
stc
dec
dec
lcall
in
mov
push
aas
fs
sbb
xor
push
mov
ret
dec
ljmp
std
fwait
mov
rep
loopne
push
mov
and
lds
jb
fs
adc
out
repnz
std
ret
mov
pop
adc
or
movsb
pop
jo
lods
test
inc
stc
dec
lock
add
nop
mov
fld
jo
out
adc
sbb
push
arpl
enter
sub
sub
data16
dec
cld
or
push
push
mov
repnz
push
fstps
fcmovu
adc
xor
aaa
jp
cltd
divl
in
add
std
xchg
dec
xor
jmp
pop
fcmovnb
mov
lcall
cmp
mov
mov
dec
adc
jb
pop
jmp
jl
out
imul
jmp
ja
lods
shl
jp
repnz
mov
adc
xorb
inc
xchg
test
adc
pop
pop
xchg
movsl
hlt
clc
mov
pop
mov
inc
or
add
xchg
fwait
sar
pop
test
xchg
add
ljmp
scas
cmp
sbbl
sbb
dec
cmp
fstpl
mov
stos
mov
xchg
lods
and
call
mov
roll
lret
xchg
sbb
adc
push
inc
flds
out
xchg
push
lret
jbe,pt
add
mov
js
mov
aam
jae
mov
cmp
cld
cmp
lahf
pop
push
test
or
fnstsw
int
lock
adc
rclb
ja
scas
jae
sti
sbb
mov
jl
outsb
sahf
mov
les
or
push
js
add
scas
mov
mov
shlb
loop
jbe
das
dec
mov
or
out
sbbl
sub
test
xchg
lret
subl
and
movsb
push
cmp
sbb
adc
mov
lds
dec
and
xchg
xor
int
stos
mov
jne
and
mov
xchg
push
gs
cmp
inc
data16
cltd
xchg
pop
js
mov
sarl
jg
movsb
mov
lret
fdivrl
gs
and
repz
testl
stos
enter
test
leave
jp
mov
aaa
cmp
jns
jg
push
inc
lahf
adc
sub
push
jg
rclb
aaa
xchg
xor
jg
and
fists
lea
mov
insl
xchg
shlb
nop
xlat
inc
movsl
dec
repz
fistl
xchg
jg
mov
xchg
jecxz
jbe
xor
nop
mov
push
xchg
cmc
in
and
mov
rclb
mov
shrb
ds
xorl
or
mov
add
xor
popf
xor
js
adc
add
es
fiadds
popf
push
or
push
pop
adcb
movsl
mov
das
movsl
mov
pop
aas
jb
icebp
push
outsb
jne
movl
and
push
add
pop
aad
sti
mov
pop
mov
mov
and
dec
adc
fisubl
nop
outsl
add
test
lcall
jl
push
rol
adc
fiadds
xchg
js
cwtl
repnz
lds
out
std
and
loop
xchg
dec
shl
jae
mov
mov
dec
pop
inc
cmp
inc
cmc
pop
pop
popa
test
outsb
mov
cmpsl
cmp
and
and
and
lret
xchg
mov
popf
push
cmp
aaa
stc
js
stc
and
enter
lahf
scas
out
mov
icebp
jmp
shl
push
mov
sbb
les
inc
fnstsw
mov
arpl
xchg
daa
ss
adc
cmp
sarl
xchg
mov
dec
and
mov
mov
pop
inc
vpcmpgtd
stos
inc
test
jb
fnstsw
jecxz
xor
mov
cmp
sbb
cld
nop
adc
pop
and
mov
add
inc
xor
imul
fs
jno
ficoml
xor
jp
sbb
out
fldt
movsb
sahf
dec
jbe
jo
out
add
push
dec
loop
test
loope
pop
adc
jns
ds
shrb
jg
ret
out
es
push
jnp
inc
push
pop
or
in
neg
lock
gs
inc
aaa
pop
xchg
aam
jp
jmp
sti
xor
xor
iret
push
icebp
test
fldenv
xchg
xor
cwtl
inc
shrl
mov
add
in
adc
sub
mov
inc
mov
pop
pop
jns
mov
inc
adc
xchg
fstpt
pusha
mov
push
popa
fdivp
es
aam
aaa
xor
cmp
leave
adc
dec
mov
jmp
cmc
mov
and
mov
test
test
xchg
xor
push
xchg
jl
mov
inc
inc
xor
xor
dec
mov
jp
add
xor
dec
sub
push
inc
pop
gs
sub
mov
adc
sub
int
cld
jae
in
in
fnsave
fsubs
mov
je
push
add
scas
out
and
mov
in
xchg
push
or
movsl
jle
mov
fwait
xor
pop
cs
mov
or
repnz
out
push
ja
out
fistpll
sbb
pop
aam
lcall
in
dec
hlt
mov
xchg
jl
fcmovnbe
sbb
jbe
mov
or
dec
mov
enter
aas
fwait
sub
das
push
daa
daa
and
mul
daa
pop
adc
jle
jmp
movsl
push
int
insb
jo
iret
mov
in
aad
push
xchg
pop
sub
mov
lret
xchg
mov
iret
out
loop
jp
lcall
divl
push
int3
push
ret
or
fdivrp
mov
dec
aaa
cmpsb
mov
mov
inc
ret
pusha
pop
jne
repz
pusha
sub
jecxz
aad
mov
movsb
insb
sbb
dec
sbb
dec
xchg
mov
sti
add
sbb
into
jg,pt
jno
lock
push
cmp
jns
mov
daa
jbe
popa
jae
add
shrb
ja
sbb
jp
jg
add
pop
cmp
or
jb
jl
or
sbb
push
xchg
ss
sub
data16
and
xchg
aam
add
jmp
sub
cwtl
lods
push
jo
jno
fnsave
test
divl
pop
jmp
dec
mov
pop
or
adcb
pop
sub
int3
test
jns
jmp
jle
sub
inc
fstl
push
popa
cld
and
aas
daa
sbb
leave
and
into
mov
pop
sbb
das
mov
add
add
lcall
pushf
or
mov
xchg
add
gs
mov
push
xor
mov
fbld
mov
add
mov
jecxz
push
fidivl
and
mov
repnz
dec
imul
sbb
mov
movsl
add
in
mov
push
mov
mov
cmp
and
imul
dec
adc
mov
test
movsl
dec
scas
int3
test
push
xchg
jno
mov
mov
jge
shrb
popf
cmp
imul
inc
imul
push
mov
xchg
push
bound
jae
xor
jp
xchg
lods
fnsave
add
or
jle
mov
jl
pop
or
jl
cmp
ss
ljmp
jo
jp
mov
mov
xchg
pop
mov
insl
mov
pop
out
and
xlat
shl
adc
aaa
pop
test
lds
or
loope
dec
fmull
sub
fs
stc
xchg
push
pop
in
callw
aaa
js
out
mov
adc
xor
sbbl
pop
pusha
jbe
inc
imul
cmp
in
xor
cmp
xchg
push
dec
add
add
mov
xchg
inc
cwtl
scas
adc
clc
lcall
mov
rcr
and
notl
push
inc
dec
iret
sbb
jl
or
rcrb
cmp
add
jae
pop
dec
pop
pop
cmpsl
push
jns
mov
cltd
pusha
xor
mov
or
mov
daa
add
iretw
jmp
into
fucom
mov
pop
stos
pushf
insb
xor
mov
sbb
xchg
sbb
call
lret
hlt
insl
xor
out
lock
dec
push
enter
gs
pop
cld
ss
jb
xchg
ret
imul
xor
not
aad
mov
mov
add
mov
dec
cmpsb
bswap
aam
pop
fldt
cmpsb
jbe
mov
adc
cld
xor
xchg
pop
push
imul
jecxz
add
cmp
xchg
lods
dec
outsl
fimuls
arpl
xchg
jmp
push
mov
inc
repnz
stos
adc
imul
stos
xchg
push
bt
cltd
push
into
in
in
fistps
dec
push
out
shl
or
cmp
pop
xchg
mov
dec
sahf
jne
and
fdivrs
aas
jb
clc
icebp
test
cld
sbbb
xchg
mov
cmp
rclb
scas
call
pushl
and
fwait
pop
mov
pop
pop
fnstenv
ds
orl
inc
or
dec
dec
and
sbb
xor
out
jge
push
imul
and
paddsb
sbb
inc
femms
or
insl
loope
loop
sbb
push
in
movsb
inc
xchg
lea
jg
ljmp
les
add
adc
add
pop
lcall
nop
mov
adc
fwait
cli
fcmovnbe
and
jmp
xchg
ds
add
xlat
mov
insl
xchg
xchg
cwtl
sub
js
cmp
sahf
fstps
xor
xlat
in
addr16
lret
or
pop
in
arpl
movsb
lcall
pop
pop
add
scas
mov
and
nop
mov
mov
ds
dec
popf
in
out
mov
test
mov
arpl
cmp
movsl
pop
xchg
or
mov
inc
mov
xor
fdivrs
das
in
divb
outsb
add
cmp
mov
and
adc
ret
xlat
lcall
or
jb
in
sub
dec
mov
sub
andl
and
push
scas
sbb
jb
jmp
cltd
adc
out
and
insl
call
dec
jns
out
pop
jmp
pop
fs
add
add
adc
jns
rcl
dec
and
add
lss
fisttps
insb
cmovbe
push
aaa
rorl
hlt
ss
addb
insb
and
lret
push
jecxz
test
inc
outsl
mov
into
mov
into
push
mov
or
mov
inc
shlb
pop
xchg
push
and
imul
into
cwtl
outsl
repz
sbb
cld
outsb
ret
imul
pop
push
dec
ljmp
push
pop
xor
sbb
imul
icebp
pop
pusha
jge
cltd
fbstp
mov
pop
lret
call
fcomps
out
out
aad
lret
mov
je
rcr
xchg
leave
xchg
jns
mov
sub
or
mov
add
inc
jb
data16
enter
out
mov
mov
lea
clc
adc
push
jge
xlat
jg
xchg
mov
mov
jne
add
mov
je
mov
jg
scas
mov
ljmp
sbb
inc
xor
xchg
stos
dec
jbe
loope
out
push
jge
inc
pop
outsb
sub
mov
mov
push
pop
cmp
add
repnz
mov
xor
aad
cmp
xor
nop
adc
mov
popa
repz
mov
lods
stc
hlt
push
inc
mov
and
mov
lret
add
mov
stos
cmp
mov
mov
xchg
into
leave
push
xor
sbb
movsl
das
sub
jo
push
insl
jns
jmp
mov
jp
cmp
popa
repz
daa
sub
loop
push
add
mov
shrb
or
stc
adc
adc
jle
sti
inc
cwtl
sbb
cli
push
mov
hlt
or
xchg
lcall
ret
dec
xor
js
lret
in
iret
mov
jae
outsl
lea
push
adc
pop
xlat
pushf
ja
mov
sahf
das
out
push
mov
fimull
shl
push
pop
fists
sahf
jbe
lock
push
sbb
sub
xor
cmpl
into
dec
cli
adc
dec
mov
push
out
sarb
fucom
cmp
mov
shrb
mov
adc
pop
mov
jo
adc
add
pop
sahf
add
fadd
mov
data16
jns
int
fdivl
push
flds
fs
cmp
imul
sahf
xor
inc
inc
test
sbb
inc
xchg
or
inc
cmpb
icebp
sbb
mov
jg
fisubl
cmpsl
das
cltd
sbb
inc
addl
sub
add
cmp
inc
push
xor
mov
daa
mov
sbb
push
test
mov
sub
mov
das
popf
stos
and
inc
push
stos
fsubrs
aaa
out
xchg
lahf
aad
and
bound
jns
scas
repnz
subl
lods
iret
mov
jne
add
imul
and
pop
xor
mov
test
enter
out
pop
insb
sub
fldt
insb
pushf
push
xchg
outsl
addr16
flds
fwait
loop
leave
mov
mov
sub
shlb
sarl
mov
icebp
rclb
mov
mov
pop
loopne
inc
dec
mov
dec
sbb
and
add
cmp
pop
fdivrs
cmp
outsb
outsb
testb
jp
mov
out
sbb
mov
cmp
mov
cmp
mov
call
sub
adc
lock
add
jno
cmp
push
push
adc
js
push
loopne
es
sbb
ficoml
and
fdivs
ds
or
push
loope
xchg
ficomps
loopne
inc
sub
add
push
aad
repnz
stos
scas
jp
nop
loope
pop
movsb
and
dec
inc
aaa
stc
lods
aad
mov
cmp
lods
xor
fsubl
std
fstpt
lcall
cmp
imul
jno
xor
cmc
sbb
test
cltd
inc
lahf
jno
cld
pop
clc
push
in
test
ljmp
call
or
adc
emms
and
push
cmpsb
push
pushf
mov
out
int3
add
pop
arpl
mov
pop
sub
icebp
jae
push
mov
movsb
outsb
mov
adc
xchg
mov
fldt
mov
mov
adc
repz
adc
jnp
sbb
sub
jnp
lods
jp
xchg
push
jb
xchg
mulb
inc
cmp
sahf
xchg
or
mov
mov
enter
popf
cmp
push
repz
inc
ja
mulb
insb
push
sahf
cmpsl
daa
jb
lret
adc
mov
and
popf
insl
loopne
adc
imul
in
mov
jae
rep
out
leave
lret
push
loopne
dec
pushf
fistl
sbb
je
push
or
xor
sarb
or
pop
popa
jb
cltd
inc
dec
out
xchg
sub
aaa
fwait
fwait
mov
dec
adc
xchg
push
in
inc
scas
fistps
pop
jmp
in
xor
cmp
jo
les
fisubl
mov
sahf
aaa
push
in
and
insb
xorl
push
add
xchg
loop
sub
cmpsl
lcall
mov
mov
sbb
xchg
and
mov
mov
cmp
imul
push
adc
sub
or
das
mov
outsb
dec
adc
adc
jg
jge
jns
mov
call
lock
push
and
xor
lcall
mov
and
outsl
adc
loopne
xchg
adc
add
test
push
pop
ja
adc
xchg
cmp
inc
jnp
jecxz
cmp
push
cmc
or
mov
les
jne
cmp
andl
dec
and
loop
dec
fstps
mov
cli
or
jne
push
outsb
pop
fidivrl
cmp
pop
push
lahf
dec
pop
push
jno
jg
cwtl
cmp
jge
mov
cmpsl
jne
jbe
dec
div
sbb
push
fs
fnstenv
pop
sbb
push
movsl
push
pusha
xor
pop
mov
mov
add
cmp
ljmp
sbb
loop
pop
push
icebp
sub
sub
xor
push
jecxz
cmp
push
test
sahf
xchg
rcll
dec
jne
fnstcw
insb
pop
inc
cmp
fs
pop
mov
mov
jno
fsubs
sti
pop
sbb
aaa
cmp
mov
xchg
sti
cli
mov
sbb
jl
add
push
mov
mov
sub
lods
decl
outsl
lods
or
push
push
lods
adc
outsb
stc
out
sub
sub
mov
out
sbb
cmp
jl
imul
repz
loope
jl
or
repnz
dec
inc
aas
dec
sti
neg
mov
sub
sahf
out
arpl
les
ljmp
inc
pop
gs
cmpl
inc
cmp
jnp
xor
outsl
addr16
leave
je
pop
shl
cmp
insb
es
loope
scas
int
xor
fstl
sub
cltd
outsb
in
jb
js
std
inc
jno
call
add
shlb
adc
fcomi
mov
insb
les
and
dec
cmp
dec
outsb
scas
or
aaa
add
dec
jp
cltd
push
int
xor
outsb
jl
cmp
mov
test
sub
or
xor
lods
xchg
setnp
add
lock
in
and
pop
lret
fwait
jbe
and
jno
jge
psubsb
push
push
jne
mov
pop
in
jp
push
lahf
stos
dec
andb
aas
lret
mov
das
adc
test
out
push
cmc
dec
out
mov
ret
lods
test
ret
stos
mov
and
push
mov
pop
xchg
call
or
mov
push
in
xchg
test
xlat
adc
push
mov
sub
and
jb
adc
pop
fs
fdivrs
pop
sub
add
and
stos
push
and
outsl
adc
pop
add
sarb
cmc
aad
int
jns
lods
mov
fdivrl
out
test
cmp
mov
mov
inc
imul
and
fcomps
imul
or
or
popf
inc
mov
lea
movsb
push
int3
sahf
scas
mov
inc
lret
adcl
xor
ret
repnz
jno
add
inc
and
lods
jbe
scas
sbb
pushf
jle
fiaddl
pop
movaps
loopne
sbb
adcl
mov
jo
pop
sbb
iret
push
mov
jl
fdivrs
pop
gs
in
lods
xlat
xchg
sbb
cmp
sbbb
inc
addb
push
and
scas
popa
xlat
lahf
lock
cld
inc
jge
ficompl
mov
xor
dec
mov
mov
pop
popa
mov
outsb
ss
push
push
push
and
xor
add
adc
in
hlt
mov
xchg
xchg
movsb
out
testb
ss
push
push
push
and
xor
add
adc
in
hlt
mov
xchg
xchg
movsb
out
testb
ss
push
push
push
and
xor
add
adc
in
hlt
mov
xchg
xchg
movsb
out
testb
xor
push
push
and
xor
add
adc
in
hlt
sbb
xchg
loope
outsb
cmp
jnp
imul
sbb
jne
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
and
jb
inc
adc
dec
push
pop
xor
pop
adc
ret
loope
icebp
aaa
roll
jb
inc
adc
and
inc
add
mov
ret
loope
lock
rcl
and
jb
inc
adc
and
inc
add
mov
cmpsb
hlt
shl
out
fldl
bound
add
shrl
jl
cli
mov
jp
sub
into
repnz
and
lods
popa
mov
mov
or
mov
icebp
pop
xchg
rolb
pusha
imul
jecxz
inc
push
pop
pop
movsb
or
loopne
jp
inc
jge
sbb
ja
icebp
ret
push
or
mov
sbb
cmp
pusha
cmp
icebp
dec
cmp
pop
jb
mov
test
in
lods
sahf
and
mov
push
mov
adc
jge
pop
sbb
and
stos
dec
push
cli
mov
out
hlt
bnd
sti
roll
xchg
rcll
add
push
popa
and
inc
add
mov
ret
loope
icebp
mov
adc
inc
or
push
cmp
push
xor
dec
aad
roll
aam
addr16
mov
movsb
andb
bound
and
cmp
jne
adc
lcall
push
rcll
sub
and
je
and
jno
inc
add
mov
ret
loope
icebp
mov
adc
and
jb
inc
adc
and
inc
add
mov
ret
loope
icebp
mov
adc
and
cmp
orl
add
mov
push
shlb
fucom
movsb
arpl
orb
ret
xchg
shll
fnstcw
test
jl
and
push
leave
mov
test
xchg
jns
jne
fdivrp
and
jg
push
push
inc
inc
or
test
lods
scas
cmp
mov
jg
sti
js
hlt
and
inc
insb
mov
and
jl
cmp
pushl
pop
jns
jne
and
leave
pop
mov
int
dec
scas
loope
xor
test
in
shrb
in
test
push
jecxz
push
adc
xor
mov
arpl
addr16
sbb
test
xor
add
cmp
inc
test
ljmp
adc
inc
daa
andl
fldt
xchg
lret
jns
shlb
addr16
js
cmp
insl
popa
mov
xlat
dec
mov
push
jns
lods
fbld
jne
or
push
xchg
mov
jle
loop
push
lds
js
add
xor
jmp
add
sarl
inc
mov
push
out
mov
cltd
sub
adc
cli
push
inc
push
enter
jbe
dec
xchg
flds
push
mov
mov
cmpsl
fs
pushf
pcmpeqw
sbb
pop
add
cwtl
out
jno
xchg
fwait
mov
std
adc
stos
sti
sbb
fs
stos
aad
pop
mov
sbb
int3
cmpsb
int3
scas
cltd
shlb
call
xchg
out
jle
adc
fs
dec
aad
shlb
sbb
adc
mov
in
aas
sbb
mov
sub
inc
dec
pushf
and
sbb
and
notl
push
inc
cmp
es
jle
jns
subb
add
dec
lock
xchg
jl
daa
cmpsb
popf
repnz
aas
jl
push
push
rorl
loope
bound
lods
test
pop
sub
daa
or
ljmp
and
fldl2e
fimull
or
pop
push
pusha
push
scas
addr16
and
mov
fimuls
xchg
cmp
mov
fwait
or
into
add
or
mov
push
sarb
pop
xor
fxch
xchg
lret
dec
orb
std
les
sarb
insb
xchg
flds
ds
clc
or
test
jae
outsl
xchg
orl
mov
and
dec
lret
mov
xor
inc
add
lahf
push
mov
adc
lret
or
or
cmc
ja
cmp
dec
jnp
push
sub
data16
js
test
popf
aad
imul
inc
aas
push
leave
mov
rclb
out
cld
shr
mov
mov
repz
push
es
cmc
sysret
pop
jmp
dec
out
stos
fbld
push
jg
adc
and
dec
mov
js
mov
rcl
push
lods
pop
aad
sub
mov
rcrl
leave
jp
je
mov
arpl
sbb
out
pop
sbb
inc
aam
stos
mov
lock
sub
xor
mov
addl
out
jb
repnz
xchg
mov
outsl
push
add
jb
ret
cmp
jnp
dec
inc
sbb
inc
xor
lods
xchg
push
xor
cmp
add
aam
fsubl
testb
mov
out
nop
leave
pop
add
mov
incb
mov
add
repz
xor
bound
jo
test
adc
xor
leave
leave
adc
xchg
sub
rcr
dec
out
inc
xor
cmp
xchg
adc
lret
loop
xor
sbbl
push
push
out
jp
mov
rdpmc
into
das
mov
or
ds
ljmp
jp
push
xchg
push
and
push
mov
dec
cli
push
jnp
pop
popa
dec
pop
rclb
xchg
push
xor
and
jb
testl
pop
inc
addr16
ljmp
pop
adc
enter
mov
arpl
push
lea
lock
adc
mul
mov
xchg
mov
bound
push
movsb
lcall
mov
xlat
inc
loopne
popf
jl
shlb
mov
std
sti
fdivrp
pop
adc
cmp
xlat
sub
fists
pop
push
jmp
jmp
insl
aas
into
icebp
cmp
fistl
adc
testl
fnsave
lret
movsb
dec
cs
pop
push
nop
pop
ss
jecxz
mov
pushf
fdivs
add
jl
shll
push
xlat
pop
mov
mov
lret
pop
lret
or
gs
dec
jl
scas
imul
mov
stos
xor
sti
mov
adc
jmp
in
push
fwait
and
insl
enter
sahf
jge
clc
test
xchg
adc
pop
movsb
and
jecxz
adc
dec
mov
push
loopne
sub
pop
bound
push
mov
sbb
mov
push
adc
fcompl
xchg
shl
nop
cld
xor
xchg
mov
sahf
push
jp
inc
imul
adc
sub
iret
and
sbb
mov
stc
xchg
jmp
mov
ss
ljmp
and
push
mov
insb
pop
adc
sbb
pop
dec
aaa
jno
rcl
insl
or
mov
in
scas
xchg
aam
push
js
fadd
mov
xorl
sarb
cltd
xchg
jb
push
arpl
movl
scas
xchg
fisubl
daa
cmc
das
insl
and
mov
sbb
mov
mov
xor
sti
lods
mov
push
jo
inc
dec
jnp
dec
movsb
clc
xor
xchg
mov
fdiv
std
gs
xchg
pop
cld
sarb
subl
dec
xor
mov
sub
and
mov
adc
scas
rorl
xchg
fs
jns
mov
addr16
xchg
das
ficompl
aad
sbb
rcr
push
xor
iret
mov
ret
outsb
pop
ret
push
jmp
xchg
mov
movsb
jbe
pop
loope
addr16
cmp
adc
test
in
push
inc
dec
xchg
cmpsb
pop
mov
in
jl
xchg
push
dec
clc
push
sahf
fistps
imul
cmpsb
add
push
outsl
inc
sar
or
xchg
jns
mov
add
push
hlt
adc
or
imul
sbb
mov
and
xor
sti
mov
mov
dec
jno
outsl
pop
dec
and
cwtl
add
bound
mov
inc
mov
sbb
and
fisttpl
aad
mov
sub
cmpb
fsubrs
outsb
xchg
mov
es
jno
fstpl
xor
jg
xchg
ds
adc
imul
mov
mov
arpl
adc
pusha
dec
mov
add
inc
xchg
mov
lods
divl
and
test
jae
mov
dec
pop
fildl
jg
push
sub
shl
pusha
out
or
xchg
pop
sub
dec
cmc
stos
das
push
pop
xchg
loopne
cmp
xchg
push
jae
mov
pop
add
filds
cmp
xchg
fstpl
shll
addl
popf
ficompl
or
in
ss
insl
movsl
stos
ret
add
roll
push
and
mov
clc
xchg
jne
sbb
lock
cmp
inc
push
loope
or
sbb
in
dec
mov
push
bound
xor
stos
add
int3
loope
jbe
ror
inc
xchg
dec
sbb
in
sbb
rolb
xchg
mov
inc
mov
int
sub
push
dec
cmp
shll
pop
insb
mov
adc
bound
fldenv
pop
xchg
lahf
adcl
cli
rclb
push
dec
rcll
ss
mov
out
fistpl
jo
push
stc
out
pop
lcall
add
xchg
hlt
adc
std
ficompl
fstpt
push
or
movl
adc
push
pushf
aam
pop
enter
mov
ds
xchg
popa
bound
xchg
psubw
push
test
jecxz
movsl
sbb
xor
cld
sub
push
je
aaa
mov
cmpsl
mov
mov
clc
mov
mov
rcll
and
scas
insl
adc
mov
arpl
cmp
add
adc
das
pushf
pop
repnz
dec
mov
sub
dec
std
insl
xchg
outsl
sbb
addr16
push
lods
mov
cs
aad
fildl
mov
mov
insb
scas
loope
cmp
cmpsb
xchg
sub
push
das
pop
jo
je
arpl
stc
xor
add
test
mov
arpl
pusha
mov
push
inc
movsl
gs
js
add
outsl
adc
ss
lods
inc
aas
jno
call
ffreep
ss
mov
mov
dec
lds
xchg
enter
xchg
std
mov
sub
les
fs
ret
lds
and
xor
mov
dec
jne
stos
lret
ret
repz
adcl
fnstcw
mov
and
jg
and
dec
shl
pushf
mov
xor
sbb
mov
outsl
hlt
cmp
cld
fsubr
inc
in
mov
jbe
push
pop
push
xor
mov
mov
push
pop
or
sub
push
cmp
jns
sahf
sub
sbb
dec
roll
push
lods
pop
jae
sub
repnz
lea
in
and
movntq
and
movsl
mov
sbb
stos
xchg
mov
roll
aaa
daa
ljmp
adc
inc
jae
xor
int
xor
sbb
or
mov
pop
lret
lret
mov
dec
xchg
arpl
sbb
jg
fldlg2
adc
sbb
aas
xchg
shlb
and
jnp
mov
call
loope
or
push
out
cmp
push
push
mull
shll
test
push
ret
dec
add
sahf
add
loope
inc
add
mov
jnp
dec
inc
insl
fildl
leave
popw
aad
lret
jnp
fisubs
cmc
jle
mov
aaa
fsubs
shrb
jae
es
arpl
int3
xor
push
data16
or
add
xchg
inc
and
call
mov
pop
fidivrs
mov
dec
out
mov
cmp
add
mov
sub
pushf
add
sub
insl
sbb
fs
push
divl
leave
rorl
lods
lcall
mov
sub
cmp
push
js
push
mulb
jge
fwait
adc
hlt
cmp
mov
outsb
daa
jbe
shr
popl
loop
xor
push
cmp
jecxz
push
stos
inc
lcall
fmuls
jo
and
movsl
int3
stos
imul
notl
adc
insb
dec
iret
out
jge
lahf
mov
mov
xor
data16
jne
mov
inc
fisubrl
popf
sub
adc
xchg
cmovle
shlb
push
inc
fsts
jge
insl
repnz
jns
paddb
mov
test
cmc
test
jp
add
sti
cs
stc
pop
push
sbb
sbb
pop
dec
out
mov
in
loope
test
pushf
repnz
cli
std
fldenv
out
push
orl
pop
test
and
insb
addps
imul
rclb
cmp
mov
xor
jbe
xchg
jnp
inc
cltd
cld
xchg
out
fisttps
jae
pop
psubsb
mov
std
inc
sarl
sbb
jno
shl
movaps
mov
stc
add
xor
add
mov
xor
adc
cmp
and
test
sub
or
pop
out
sti
cmpsl
pop
and
lret
push
aad
cmp
inc
mov
mov
jnp
out
pop
test
pop
cmp
inc
cmc
and
sub
xor
arpl
cmp
pop
add
ret
out
pop
popf
call
pusha
in
and
cmp
popf
arpl
push
fisttpl
xchg
jnp
int
add
add
ljmp
call
divps
xchg
imul
add
pushf
cmp
arpl
mov
push
gs
repz
push
pop
orb
es
icebp
fucomp
sbb
cli
mov
pop
push
inc
mov
repnz
push
rcl
jne
push
out
repnz
imul
fisubs
xlat
aad
shrl
lcall
test
jmp
xchg
xor
inc
lock
movsb
and
ret
mov
jbe
test
loop
sub
insl
mov
xchg
mov
psubb
addl
sahf
adc
cmp
mov
push
xchg
je
addr16
pop
jns
std
sti
stc
enter
adc
jge
fists
inc
adc
mov
mov
mov
out
ret
pop
ret
dec
out
pop
repnz
add
cmp
mov
in
mov
pop
adc
cmc
out
dec
fistpll
mov
into
or
pop
or
mov
clc
xor
push
scas
js
and
jb
sub
ljmp
andb
mov
loope
mov
aas
aaa
movsb
pop
and
mov
push
or
pop
xor
xchg
cmc
aas
popf
xor
sbb
pushf
fiadds
add
rorl
loope
aad
lods
cld
or
inc
mov
xchg
add
add
aad
or
je
jno
orb
inc
jae
popa
pop
call
sbb
test
ss
pop
loop
shll
mov
pop
inc
fwait
bound
inc
xchg
mov
lea
cwtl
cld
add
jg
and
mov
enter
scas
or
enter
inc
fsts
sub
fists
rcrl
addl
cmp
mov
les
push
in
push
push
cmpxchg
jecxz
mov
lods
cli
pushf
arpl
add
mov
lcall
mov
std
cli
cmp
fists
loope
xchg
stos
lds
test
fcoml
out
in
mov
popf
and
dec
out
and
clc
loope
imul
imul
mov
ret
test
mov
xchg
cmp
pop
fnstenv
sbb
test
mov
cmp
cmp
cmp
loopne
sbb
rorb
dec
push
int
pop
xchg
mov
in
out
pop
sbbl
xchg
mov
dec
pop
push
cs
shll
icebp
outsl
sbb
xchg
hlt
xor
ss
leave
and
xchg
xchg
mov
inc
lods
sub
and
push
mov
fs
aaa
inc
popf
mov
xchg
cmp
pop
loop
mov
mov
fmull
test
gs
jbe
repz
jecxz
inc
push
cli
imul
aaa
jnp
inc
fdivl
and
and
add
dec
rcl
push
push
out
jbe
movsl
and
add
cmp
xchg
pop
fcomip
das
repz
mov
ret
lret
sqrtps
subb
pushf
pop
mov
pushf
inc
jl
mov
or
gs
mov
sbb
stos
mov
mov
mov
ljmp
xor
enter
push
adc
add
pop
jge
test
es
sub
xor
inc
popf
push
jb
pop
mov
xchg
or
push
mov
and
test
clc
dec
jg
std
fistpl
pop
adc
lahf
add
popa
adc
hlt
fdivrs
mov
loop
dec
aam
add
pop
mov
cld
jmp
mov
mov
test
jp
dec
jb
mov
inc
xor
cmp
mov
sub
rol
dec
pop
ret
jb
push
dec
mov
test
movsl
sahf
lock
xor
adc
adc
sub
outsb
sub
out
fisttps
dec
push
cmp
push
fdivrp
push
adc
ja
enter
adc
gs
sbb
into
mov
nopl
mov
insb
mov
jbe
cmp
and
lahf
aad
in
iret
test
sub
movsl
jbe
imul
jge
mov
aaa
clc
fists
and
jl
pop
mov
inc
int
sub
dec
jb
testl
and
xchg
pushf
fidivrl
aam
imul
jl
push
or
jle
xchg
xchg
leave
adc
mov
or
add
cs
sub
cmpb
in
lahf
push
aaa
test
mov
dec
cwtl
adc
adc
das
adcl
jecxz
ss
jbe
add
adc
sub
rorb
and
add
dec
fisubrs
divb
daa
sbb
stc
mov
jae
pop
mov
sbb
loopne
jo
sbb
ret
lea
add
or
pop
add
mov
xchg
adc
mov
testl
stos
fildll
xchg
arpl
out
cmpsl
xor
mov
cmp
mov
ds
dec
es
cmp
data16
leave
push
or
dec
mov
inc
push
add
cmc
cmpsl
rorb
jb
mov
add
pop
cmp
outsl
int
rol
and
fmull
mov
rcrb
loope
pop
mov
data16
lahf
icebp
rol
jge
gs
xor
addr16
js
loopne
and
in
ret
negb
icebp
dec
push
in
mov
into
daa
and
sbb
int3
jnp
and
fwait
pop
scas
dec
xchg
popa
mov
or
lret
ret
inc
ret
popf
xchg
les
cmp
xchg
addr16
adc
push
and
mov
in
ss
dec
loope
pop
or
pop
insb
stos
cmp
in
mov
out
imul
xor
xchg
mov
or
js
add
or
xacquire
cli
imul
sbb
lahf
nop
cltd
jnp
in
imul
xchg
sub
sbb
lahf
iret
lahf
sub
inc
fsub
fidivrl
mov
xchg
cmp
sub
xchg
jo
aam
ret
addb
cmpsl
pop
sub
lea
flds
les
sub
cmp
fmul
ss
stos
xchg
push
je
mov
cld
add
nop
mov
aam
xchg
jl
mov
inc
xor
outsl
and
mov
jo
add
jg
push
pop
sub
inc
sarl
dec
cmp
repz
or
dec
cmp
xchg
ss
push
cwtl
aad
lea
cmpsl
push
xchg
dec
nop
jmp
xchg
int
and
push
jle
and
cltd
ja
push
push
adc
shr
pop
xchg
mov
pop
adc
imul
mov
iret
icebp
push
loope
and
arpl
stos
mov
lret
or
jno
imul
jg
in
mov
push
lock
aad
enter
xchg
cmpsl
faddl
xchg
dec
adc
mov
lods
fs
push
dec
outsl
sub
incb
and
cmc
and
mov
imul
std
push
pop
pop
loopne
ffree
add
rcll
fwait
mov
rol
or
mov
int3
add
xor
sbb
or
mov
pushw
dec
or
testl
dec
nop
and
cwtl
ss
mov
mov
cltd
rorl
sbb
enter
jle
pop
add
pop
imul
decb
xor
psubw
icebp
out
mov
in
xchg
xchg
jmp
xchg
sbbl
loop
out
in
cmp
push
sbb
int
aad
icebp
push
repnz
roll
stc
test
cmc
pop
divb
jl
cmp
lods
push
mov
pop
xchg
stos
dec
mov
cli
jnp
push
lahf
cmp
sbb
jne
test
fwait
push
dec
mov
std
sarb
or
dec
fwait
ss
out
fsts
mov
xchg
mov
insl
sbb
sub
call
adc
mov
push
add
dec
push
repz
pop
in
ret
jp
sub
push
andl
jno
sti
test
sbb
jl
dec
xchg
xchg
push
inc
push
pop
es
test
inc
sar
filds
adc
aaa
icebp
xor
jmp
aad
in
and
cmp
jo
inc
popa
cmpsl
bound
sub
cmp
push
aad
test
mov
sbb
sbb
xchg
pop
mov
rcll
add
mov
scas
leave
xor
xchg
pop
sbb
rolb
das
adc
cs
je
lods
sarb
push
jp
xor
fs
xchg
stos
cli
in
insl
shlb
lock
test
sbbb
fwait
je
pop
mov
jno
sbb
gs
push
in
and
push
add
andl
jbe
add
add
rcr
mov
sbb
outsb
mov
inc
adc
and
inc
add
mov
ret
loope
icebp
mov
adc
and
jb
inc
adc
and
inc
add
mov
ret
loope
icebp
mov
adc
and
repnz
adc
and
inc
add
mov
ret
loope
icebp
mov
adc
and
jb
inc
adc
and
roll
adc
dec
pop
sub
xchg
movsl
xchg
sub
cmp
insl
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
icebp
and
lret
sar
ret
mov
lods
stos
ds
addb
inc
imul
sub
sub
sti
ret
fwait
mov
stos
jb
bound
pop
inc
imul
fistl
cmp
sub
adc
inc
jecxz
repnz
add
mov
inc
jno
push
daa
imul
gs
insl
pop
sub
stos
pusha
mov
mov
push
rclb
or
lock
push
movl
mov
inc
pop
pushf
adc
jne
xor
and
mov
pop
adc
std
data16
cmpsl
dec
cmpsl
movsb
aam
jnp
jecxz
lcall
mov
inc
out
and
addr16
lds
sub
mov
fisttpl
mov
push
jae
bound
dec
and
adc
out
sub
add
or
sub
jmp
stos
push
loope
push
ds
imul
xchg
cmp
aam
aam
sub
sti
cmp
dec
mov
mov
inc
pop
pop
fldt
jnp
dec
jno
adc
add
test
jmp
icebp
push
fimull
mov
clc
push
and
jb
jp
sub
cmp
dec
fwait
mov
mov
in
xlat
add
xor
xor
cs
add
jbe
pop
jnp
addr16
mov
mov
mov
adc
dec
imul
sahf
lcall
loope
mov
stos
jb
bound
jnp
imul
and
adc
add
repnz
lret
sar
ret
fwait
mov
stos
jb
bound
jnp
imul
and
adc
add
repnz
fiaddl
clc
jge
dec
out
cld
pop
and
int
and
icebp
imul
push
movsb
stc
into
out
and
xchg
lea
mov
lcall
cmpsb
inc
rclb
loop
mov
sub
inc
addr16
and
js
ds
je
aaa
jecxz
leave
mov
nop
or
jns
iret
xchg
clc
ret
add
pop
ret
or
lods
stos
cmpsl
jle
mov
mov
xor
sahf
fbld
test
add
out
push
push
sub
movb
jl
and
ss
or
cmp
mov
add
test
jp
push
xchg
ds
sub
xchg
nop
cmp
cmp
test
xchg
movsl
jp
add
push
jo
sbb
mov
and
dec
enter
or
dec
addb
xchg
addl
and
jne
pop
into
cmc
je
xchg
aam
loope
imul
inc
push
xchg
jg
rcll
add
in
aaa
push
sub
out
js
or
clc
nop
sbb
sbb
subb
push
xchg
jp
inc
sti
movsb
push
popf
test
rcrb
inc
jnp
gs
dec
in
sub
repnz
out
aas
jne
jp
jae
daa
mov
js
xor
fwait
pop
xchg
mov
sub
shll
cmp
mov
fnstcw
adc
cmp
push
sti
add
jnp
pop
mov
adc
cwtl
mov
mov
in
test
pop
dec
popw
repnz
repnz
rorl
leave
sub
loope
push
push
push
cltd
xchg
loop
pop
add
mov
sub
les
jb
popa
push
xchg
popf
mov
push
rcrb
out
jno
mov
insl
jl
cld
pop
flds
cltd
jo
dec
xlat
rorb
gs
setg
ja
imul
fistpl
sahf
jp
pop
sarl
sbb
inc
cltd
pushf
push
or
dec
fdivr
dec
test
or
push
lds
push
jl
out
mov
mov
xchg
sub
add
xor
dec
pop
sub
inc
mov
aaa
mov
jl
and
dec
mov
in
xchg
sub
mov
scas
out
dec
xchg
repz
fistpl
add
std
or
data16
pop
lods
pop
pop
inc
xchg
fs
mov
dec
sub
pop
sbbl
mov
mov
and
push
push
push
add
jno
in
ret
cmp
push
inc
or
stos
adc
cltd
adc
and
push
push
es
aam
sbb
ror
jg
xor
fs
mov
mov
and
mov
add
push
pop
mov
and
fdivrs
cmpsl
lock
or
ret
mov
dec
mov
xchg
pushf
jo
push
sub
enter
enter
mov
and
add
bound
jbe
mov
lret
pop
mov
or
mov
sub
mov
jne
cmp
repnz
mov
inc
pusha
lret
fbld
xchg
sbb
repz
sbb
xor
fisttps
cmp
mov
nop
adc
and
mov
sbb
adc
icebp
jge
js
sub
loopne
in
inc
inc
jne
dec
cltd
les
imul
cltd
push
in
pushf
inc
or
mov
inc
shrb
push
outsb
test
outsl
test
in
clc
sub
icebp
mov
adc
shrb
jl
push
int
mov
je
jge
push
dec
shlb
fcmovne
test
outsl
mov
dec
lret
les
mov
dec
mov
xchg
inc
xchg
push
pop
xor
push
mov
xlat
push
or
das
rcrl
jl
xorb
add
aas
xchg
out
sbb
adc
pusha
in
push
sbb
aam
lret
mov
pushf
jbe
lret
sti
cmp
cld
outsl
into
mov
inc
push
jecxz
scas
lahf
and
push
loop
in
fwait
jmp
push
out
fstps
inc
add
xor
dec
dec
scas
notl
fsts
add
pop
mov
mov
pop
xor
fisubrs
ja
sub
testb
mov
ret
movsb
jg
xor
imul
xchg
sti
lahf
or
add
cli
fstpl
mov
pusha
lods
xchg
dec
jnp
iret
and
mov
push
cmp
mov
xlat
xchg
int
adc
inc
inc
into
fadd
and
les
jg
sbb
aam
insl
inc
push
shll
icebp
ret
cmp
xor
lock
clc
sbb
sbb
fdivrl
jmp
cmp
xchg
ja
inc
or
jp
or
int
xchg
cwtl
or
lock
push
lcall
mov
xlat
dec
xchg
xchg
push
stc
out
mov
lahf
jmp
ds
fisubl
xor
add
sar
repnz
add
fnstcw
inc
les
push
sahf
fidivl
mov
cmp
lahf
xor
xchg
frstor
test
or
call
pop
or
jno
inc
ficoms
xor
mov
sbb
dec
push
insl
cmpsb
lret
mov
sub
xchg
mov
xchg
aaa
ret
inc
push
inc
mov
lahf
xor
push
sbbl
mov
cli
jge
xor
fildl
xor
pusha
jne
in
cli
lods
mov
fcmovu
fldcw
outsb
push
ret
into
mov
dec
mov
nop
xchg
jp
xor
cmpsl
lahf
out
out
push
mov
mov
xchg
cmp
fcompl
mov
cmp
inc
xchg
pop
adc
enter
cmpsl
les
add
sub
and
adc
pop
rcrl
cmp
xchg
cmpsb
sbb
mov
in
test
jge
fs
and
daa
mov
dec
xchg
dec
in
arpl
imul
mov
inc
push
pop
rcll
daa
and
cmpsl
les
out
sub
loopne
push
mov
or
dec
test
int
lcall
adc
sub
loop
sarb
mov
aaa
push
icebp
fstps
mull
mov
out
int3
adc
or
aad
push
bound
and
inc
lret
mov
mov
push
sbb
or
mov
movsb
jp
shrb
in
hlt
rorl
aaa
aas
ljmp
cli
outsb
insb
daa
insl
jo
in
jbe
ret
pop
push
mov
push
test
add
adc
mov
push
stos
into
lds
popf
jno
cmp
nop
clc
stc
xchg
adc
sarb
cmp
daa
lods
add
push
div
addr16
xor
shlb
lock
fwait
mov
mov
nop
inc
xor
jle
or
dec
inc
jp
or
cs
rcl
or
test
fildl
sub
push
lods
imul
imul
jo
fwait
insb
fstps
icebp
pop
add
rclb
out
rclb
jb
aaa
mov
sbb
jno
and
sahf
stos
ja
pop
push
mov
push
jnp
aad
cmpsl
cmpsl
add
mov
pushf
imul
cld
out
xchg
in
xchg
dec
lret
insb
mov
mov
jbe
or
push
pop
je
sbb
lds
jbe
inc
cltd
das
push
add
pop
adc
pop
adc
sbb
fdivs
adc
nop
adc
add
fimuls
rclb
into
mov
arpl
sub
add
gs
xchg
test
fnsave
push
mov
push
xchg
das
cmpsl
dec
xchg
inc
pop
xchg
add
clc
ret
jne
xchg
xor
jg
dec
push
xor
cld
data16
dec
hlt
in
and
mov
xchg
scas
adc
cmp
lds
sub
loop
fsubrl
std
mov
rclb
outsb
mov
push
rorl
xchg
cmp
notl
out
stos
addr16
fnop
or
or
insb
inc
popa
pop
dec
pop
aad
xchg
cmp
lock
fldl
rol
subl
xchg
cs
push
mov
mov
sbb
popf
scas
xchg
flds
incb
xor
loope
frstor
cmp
or
mov
push
ret
adc
arpl
leavew
lret
pop
push
adc
movsb
and
push
mov
mov
jnp
lahf
pusha
and
cmp
jg
mov
cmp
pop
inc
lods
popa
js
ficoml
inc
cwtl
push
push
mov
lock
setg
mov
pop
mov
fisttps
inc
pushf
outsb
pushf
addl
loop
nop
push
inc
sahf
inc
jge
gs
or
mov
mov
jb
stc
cmpsl
xlat
xlat
mov
cmp
test
test
jg
push
repnz
dec
push
sub
push
sub
in
hlt
ds
push
lods
and
sub
mov
mov
cmp
dec
sub
aam
je
xor
fs
scas
jge
mov
aad
push
dec
mov
mov
cmp
lock
jo
stos
cmp
pop
stc
jg
or
sbb
xchg
imul
fistps
xorl
mov
fldcw
cltd
dec
call
mov
jl
dec
sub
jge
loopne
test
sbb
cmp
dec
ja
out
sarb
inc
ret
push
and
cmc
xlat
adcl
loop
andb
in
or
rcrb
mov
outsb
loopne
inc
out
aam
stc
xchg
cmp
icebp
xor
addr16
and
scas
dec
aad
or
jmp
mov
shl
push
and
inc
fwait
and
loope
test
push
popf
and
cmp
xchg
inc
push
in
jg
js
pop
sbbb
lods
and
push
and
mov
movsb
cmp
mov
jmp
mov
xor
jae
and
push
loopne
call
testl
add
fucom
idivb
xor
adc
fadds
jle
dec
sbbl
push
jns
mov
sbb
sub
xor
and
mov
sti
cmp
bound
movsb
mov
jg
inc
and
dec
rcrl
cmp
ljmp
sub
leave
mov
inc
fadd
test
jnp
adc
jl
jnp
stc
pop
stc
dec
jno
cmc
pop
adc
es
push
insl
test
pop
lret
test
push
xchg
aas
out
scas
push
jno
jp
jge
xchg
or
xchg
and
orl
sbb
ret
and
push
pop
pop
lret
cli
icebp
pop
mov
je
insb
mov
inc
cmp
sbb
xchg
jb
sub
xchg
ja
adc
push
insl
out
xor
mov
rcll
out
lea
mov
or
jnp
imul
call
mov
loopne
cmp
sub
mov
lock
loop
mov
imul
pop
xchg
loopne
rclb
sbbb
xlat
rol
add
pop
sbb
fnstcw
push
jecxz
pusha
test
jg
lahf
ja
nop
jmp
dec
or
mov
xchg
mov
dec
je
push
rclb
fs
xchg
xlat
cltd
xor
pop
pop
jg
dec
cmp
pop
ds
adc
jg
aas
call
insb
mov
sbb
aad
inc
mov
mov
or
inc
adc
mov
mov
js
mov
dec
dec
mov
lret
imul
addr16
fnstenv
pop
dec
push
xchg
into
out
movsl
jmp
adc
mov
cltd
ja
sbb
mov
jne
stos
sub
pop
mov
outsb
into
stos
xchg
lock
push
shll
push
adc
test
sbb
fwait
cld
dec
or
lahf
mov
sub
dec
orl
mov
or
addr16
notl
mov
fsts
inc
sub
dec
mov
jb
jecxz
sub
inc
clc
xor
lea
test
cmpsb
js
mov
scas
xorps
xor
jb
mov
sub
sub
xor
scas
int3
outsl
fisttps
xchg
push
mov
imul
jmp
mov
sahf
ss
aaa
es
mov
jae
cmpsb
movhps
stos
nop
push
jb
mov
popa
ret
xchg
lahf
dec
js
push
push
xor
jno
test
jmp
push
xor
scas
lret
inc
test
das
jb
and
add
add
mov
in
lock
mov
xor
popa
shlb
pop
outsb
pop
andb
sub
lock
mov
les
jecxz
loop
xchg
jmp
inc
into
imul
pop
push
cli
test
std
and
outsl
mov
lret
inc
lock
mov
fs
addr16
fbld
add
mov
cmpsl
adc
or
push
cmp
pusha
mov
shll
mov
mov
fdivs
jmp
outsb
sub
fwait
xchg
inc
jo
push
xor
push
push
push
loop
setg
fs
mov
std
dec
loopne
cmc
pop
addr16
cli
push
bound
xchg
inc
jbe
aaa
sbb
jb
andl
dec
sub
dec
les
imul
jb
mov
xchg
jb
inc
ds
fbld
in
dec
cltd
leave
repnz
fisubrl
add
icebp
adc
loopne
imul
sti
push
dec
test
in
leave
in
mov
negl
xor
into
aaa
pushf
mov
and
popf
ret
jp
cmpb
nop
xor
sub
bound
pop
jnp
and
cmp
mov
mov
test
mov
fmull
push
nop
jno
inc
shrb
sub
or
mov
nop
rorl
push
fstl
fnstsw
pop
iret
or
mov
pop
popa
insl
xor
insl
aam
stos
inc
inc
out
fdivrp
lods
add
insb
sahf
rcll
jle
xchg
mov
pop
clc
cmpsl
lea
push
lods
pusha
cmpsl
xchg
jb
adc
xchg
in
in
or
push
inc
lcall
movsb
jle
daa
mov
leave
dec
or
jecxz,pt
out
adc
fiaddl
jno
bound
xchg
mov
pop
popa
adcl
push
in
adc
xor
mov
mov
push
sub
retw
stos
xor
jbe
shlb
test
loopne
dec
inc
movsb
stos
pushf
ja
xchg
in
jl
push
or
out
mov
cmp
out
outsl
cs
leave
iret
aaa
xor
xor
fldenv
std
and
mov
pop
mov
push
and
adc
pushl
int
insl
dec
and
cmpsl
inc
sbb
sbb
push
jnp
les
xor
mov
push
hlt
mov
data16
and
or
sub
or
xchg
xor
jl
jle
cli
shufps
icebp
jb
dec
adc
daa
stos
mov
clc
or
jmp
loopne
mov
mov
movsb
jae
leave
push
mull
arpl
add
push
pop
add
cmp
inc
jo
cmp
or
and
fistps
jae
or
mov
outsl
dec
outsb
int
ret
jmp
xor
aad
inc
jno
or
jnp
mov
add
fwait
xchg
jge
sbb
aaa
jmp
not
push
ficoml
push
movsl
ret
rorb
loope
xor
xchg
jmp
add
jb
sbb
fisttpl
ss
loope
clc
jne
ja
bound
pop
andl
mov
mov
add
dec
adc
sub
shll
xchg
and
insb
push
push
sub
ja
xor
xchg
xor
xor
or
mov
movsl
cmp
inc
jg
or
fnstenv
daa
aam
subl
inc
add
fcomp
test
shl
icebp
mov
neg
add
mov
stos
popf
lcall
in
dec
mov
dec
xchg
xor
and
push
adc
or
mov
in
push
shlb
daa
push
push
out
outsb
add
lcall
sbb
mov
rcll
pop
sub
insl
or
pop
stos
and
imul
arpl
gs
inc
pop
dec
push
xchg
pop
push
fsub
xchg
ret
and
xchg
scas
icebp
pop
push
add
pushf
cmp
add
lret
and
lcall
sbb
int
push
hlt
sub
ret
jbe
test
cmp
data16
xorb
xor
inc
fidivs
test
and
fwait
jnp
int3
test
ret
in
adc
test
push
add
out
cmp
lea
dec
sarl
and
in
and
ret
fdivl
sbb
jno
xchg
out
push
mov
jle
jae
jge
dec
mov
loopne
pop
mov
std
pop
inc
cmpsl
lret
mov
and
hlt
push
sub
pusha
mov
outsl
mov
ss
subb
mov
into
ret
xor
lahf
and
cltd
cmp
inc
cli
les
ficomps
bound
ficoms
insl
sbb
xchg
sti
cmpsl
nop
fcom
pop
cld
cli
fadds
mov
mov
stos
and
movsl
jbe
xchg
jl
jmp
les
std
pop
test
sti
sti
repz
sub
adc
popf
ss
movsl
call
aaa
fildll
push
popa
ror
int
or
es
pop
fstpt
enter
in
mov
int
sbb
and
insl
pop
lea
xlat
sbb
fidivl
inc
mov
aad
arpl
mov
es
aam
mov
daa
push
or
cmpb
aad
test
jb
mov
divb
jl
dec
movsb
cltd
cmp
pushf
leave
hlt
loope
cmp
test
icebp
mov
pop
sub
jg
xor
inc
daa
mov
std
cmp
fcomps
and
lock
cmc
or
in
sete
orb
stos
insl
sub
sbb
cs
test
push
stos
in
xor
int
lock
addl
test
inc
std
icebp
jbe
sub
sub
sbb
pop
xor
addr16
loop
sahf
adcl
ret
les
xor
ret
add
lret
fcoml
push
push
add
icebp
cmp
and
lret
shr
xor
sub
fs
mov
popf
sbb
mov
shlb
test
addl
leave
xor
das
mov
xchg
outsl
lods
sti
ljmp
sub
mov
fmuls
shll
xor
in
cmpsb
pop
mov
das
dec
or
test
jo
enter
outsl
inc
ss
and
mov
fbld
pop
sub
ret
lahf
cvttps2pi
ljmp
insl
sti
inc
add
dec
mul
pop
movsb
in
stos
out
push
hlt
cwtl
daa
loopne
xchg
and
mov
jnp
sub
inc
or
imul
imul
loope
jecxz,pn
adc
sbb
xor
adc
inc
jle
mov
pop
arpl
fwait
and
pop
xchg
loope
pop
jno
sub
cltd
imul
mov
jmp
jnp
add
movsl
xlat
movsl
push
dec
jle
adc
mov
fidivrs
scas
push
push
push
sbb
int
cwtl
subb
mov
and
ljmp
push
sarl
ret
in
in
sub
pop
sub
hlt
scas
mov
movsl
xor
dec
xchg
add
push
push
cwtl
push
out
shrb
push
leave
jne
fisubs
mov
stc
inc
fimuls
lea
out
aas
push
lea
xchg
adc
dec
push
jno
aad
test
push
movsl
xor
aam
dec
ret
xlat
dec
fmull
inc
lcall
pop
test
pusha
stos
add
add
inc
int
repz
mov
stc
ja
das
and
out
inc
sbbb
adc
les
cs
movlps
test
mov
and
sub
sbb
loopne
or
das
jbe
cmp
dec
pop
push
shll
xchg
sub
ds
aam
or
cmpsb
pop
sbb
popf
jl
gs
icebp
in
call
add
cmp
cwtl
dec
push
cwtl
in
cmp
out
fs
dec
xchg
push
cmp
push
jae
sub
cli
xor
push
push
sarb
jns
lahf
lods
jecxz
inc
mov
push
int3
add
xor
adc
pop
push
ficoms
cmp
addb
inc
mov
lods
daa
add
fsubrs
xchg
into
sbb
jns
mov
add
cmp
mov
lods
or
sti
xor
xor
std
or
stos
inc
push
mov
cltd
popf
fadd
inc
mov
pop
popa
imul
out
jne
mov
cwtl
out
cmp
adc
shlb
out
pop
lret
xchg
adc
jmp
fwait
mov
stos
jb
bound
jnp
imul
and
adc
add
repnz
lret
sar
ret
fwait
mov
stos
jb
bound
jnp
imul
and
adc
add
repnz
lret
mov
ret
fwait
mov
stos
jb
bound
jnp
push
sbb
or
cmp
sub
fstpt
jmp
fwait
mov
xchg
mov
popf
loope
jnp
sbb
xchg
stos
hlt
in
std
aam
fstpt
out
jne
or
push
xor
inc
mov
outsl
ljmp
das
cmp
lcall
out
push
jp
dec
mov
mov
outsl
ljmp
das
xor
or
add
push
mov
popf
stos
pop
mov
out
out
sbb
mov
fwait
cmp
bound
mov
mov
cmp
push
add
rcl
sub
mov
or
test
inc
xchg
push
arpl
xchg
aas
push
or
bound
cmpsb
fcomps
and
jnp
pop
dec
inc
hlt
test
inc
pop
fidivrl
xchg
adc
jmp
call
ljmp
mov
sahf
fcmovbe
scas
mov
test
push
lret
xor
outsb
adc
lods
mov
push
mov
lahf
lcall
insb
and
inc
mov
jl
iret
jno
push
or
pop
jne
fwait
add
sub
fiaddl
push
cmp
or
pusha
cmp
xchg
jge
push
repnz
loope
daa
ret
sbb
outsl
xchg
jle
push
cmp
loop
lret
ficomps
aas
clc
or
pop
sahf
pusha
scas
dec
mov
mov
sbb
es
pop
pushf
test
mov
pop
push
mov
mov
lods
or
outsl
xchg
sbb
dec
mov
mov
outsl
ljmp
das
sub
cmp
or
sbb
push
jp
dec
mov
mov
outsl
ljmp
das
sub
stc
cltd
push
xorb
clc
push
xchg
push
add
je
lods
sti
push
stc
dec
mov
addr16
pop
and
inc
int
jmp
jne
inc
xchg
roll
mov
mov
icebp
push
inc
sbb
cmpsb
jmp
lock
repnz
in
fcmove
jle
add
fnsave
jo
popf
jp
adc
mul
cltd
mov
sub
je
xchg
clc
cli
xor
and
lock
mov
mov
mov
std
idivb
int3
mov
dec
inc
lea
out
mov
mov
lods
lar
cmp
xor
popa
into
fwait
dec
mov
cs
fs
int
pop
cmp
les
out
xchg
lds
int
enter
xchg
xchg
dec
xor
lods
fnstcw
nopl
imul
sbb
sti
adc
xor
inc
mov
sbb
outsl
pop
sbb
aaa
aas
pusha
or
sbb
sub
cmp
aad
gs
not
gs
sbb
jb
pop
xchg
scas
adc
dec
pop
stos
scas
pushf
mov
pop
rorb
xchg
mov
int
add
sti
push
rorl
adc
pusha
frstor
lock
nop
xor
fbstp
scas
loope
es
adc
hlt
movsb
cmp
add
pop
mov
call
push
test
test
xchg
cld
stos
pusha
je
mov
jp
popf
push
test
push
push
movsb
adc
cltd
scas
out
loop
pop
dec
out
xchg
test
xchg
lret
inc
dec
iret
and
cs
pop
repnz
adc
out
xchg
push
in
in
mov
sub
addr16
cmp
add
cmp
dec
push
jl
stos
lods
movl
pop
mov
cmc
or
hlt
and
dec
mov
cmp
xchg
arpl
sarb
imul
sbb
xchg
in
test
in
lahf
sbb
and
push
pop
pop
out
stos
repz
mov
sbb
ret
es
bound
lcall
or
dec
jbe
jmp
leave
sbb
dec
push
lds
mov
lahf
sub
push
lret
mov
push
add
jno
sbb
loopne
cwtl
icebp
dec
add
adc
arpl
add
lret
daa
sbb
fistps
pop
jnp
cs
fstpl
push
push
mov
imul
das
push
ds
add
cmp
push
push
test
lcall
push
nop
dec
adc
cmpsl
inc
andl
adc
cld
clc
xchg
pushf
out
jge
sbb
and
lea
push
test
sub
cmp
cmp
mov
aad
sbb
test
in
test
jp
fdivl
and
inc
pop
xor
cmp
cs
addr16
xchg
mov
sbb
pop
insl
mov
push
insl
movsb
pop
arpl
outsb
xor
clc
dec
stos
lods
ror
in
aam
pop
rorl
push
add
dec
popa
stc
xlat
loopne
mov
dec
loope
popa
mov
sbb
jno
push
adc
test
pop
andl
fst
call
js
mul
movsb
pushf
mov
jg
cwtl
loopne
pushf
je
mov
jl
xor
movsb
mov
lahf
mov
insb
cmp
xor
mov
iret
movsl
mov
xchg
fucom
dec
xchg
mov
rolb
cmp
cmpsl
xchg
cmp
aas
arpl
pop
adc
push
mov
cmp
pop
int3
bound
in
out
ljmp
lock
mov
add
test
fistpl
jg
pop
jg
stc
mov
add
loopne
push
sbb
adc
stos
dec
xchg
cmp
vcvtps2pd
sahf
inc
data16
data16
les
xor
in
sti
ds
cmp
hlt
mov
decw
inc
mov
inc
fs
pop
push
std
xchg
call
outsl
xchg
push
adc
sar
mov
jo
sbb
decl
pusha
xchg
jl
in
mov
lcall
rorb
mov
mov
xchg
xchg
movsb
lcallw
call
mov
in
push
aad
clc
je
test
cmp
mov
and
mov
inc
xchg
add
mov
jmp
scas
in
mov
cmc
pop
das
sarb
outsb
mov
or
adc
cmpsl
xchg
sbb
outsl
add
jne
rclb
pushf
lret
mov
pop
dec
adc
mov
dec
inc
mov
lret
shrl
sub
outsb
jp
in
aam
repz
cmp
dec
sub
push
insl
xchg
mov
es
adc
cmp
fsub
mov
iret
test
shll
loopne
insl
pop
movswl
jbe
jnp
test
into
jl
bound
sub
sbb
movsl
inc
bound
add
sbb
sbb
ja
push
fstps
pop
cmp
mov
sub
sub
or
out
lret
ror
mov
lahf
loope
ss
inc
fsts
xchg
jle
movsl
es
cltd
dec
adc
jmp
outsl
and
js
fnstcw
adc
mov
mov
mov
and
add
pop
xchg
es
js
hlt
mov
cmp
push
or
dec
mov
inc
mov
push
mov
inc
add
push
rcrl
xor
pop
in
loop
mov
mov
lods
loopne
jnp
inc
add
outsb
or
xor
mov
ja
dec
add
xchg
inc
lret
push
cld
mov
fistps
pop
and
inc
mov
jns
clc
fists
shlb
popf
xchg
push
pusha
sti
mov
arpl
mov
loop
xor
sub
jo
jge
mov
iret
and
sbb
push
pop
and
push
in
outsl
ss
int
push
jbe
mov
add
sti
aad
mov
popa
insb
push
or
test
stc
fiaddl
arpl
xlat
inc
jbe
lahf
repz
test
shrl
imul
nop
fsubl
pop
mov
mov
or
dec
sub
xchg
sub
dec
cs
pop
push
mov
push
inc
mov
push
js
aad
or
fdivr
stc
into
arpl
add
add
push
dec
pop
pop
inc
add
loopne
insl
out
mov
xchg
outsb
add
int3
cmp
fiadds
or
push
pop
daa
xor
pop
arpl
xchg
loopne
leave
hlt
adc
and
adc
es
shlb
adc
sub
cmp
cli
inc
insl
xlat
out
sbb
test
outsl
aam
sub
push
pop
call
nop
nop
inc
in
cwtl
sbb
mov
sti
cmp
fsqrt
or
in
jae
add
mov
sbb
and
arpl
add
push
addl
xlat
pop
mov
ds
and
or
adc
sbb
push
or
icebp
out
movsl
imul
inc
iret
xchg
scas
xor
add
mov
clc
cwtl
fimull
sub
jne
jp
jnp
insb
jbe
jecxz
sahf
loope
sbb
or
repz
aas
addr16
mov
inc
leave
addr16
inc
sbb
ja
out
push
clc
sub
movsb
mov
jbe
push
outsb
and
gs
add
and
insb
movsl
cwtl
test
inc
mov
sub
sub
loope
lahf
cwtl
test
dec
ret
mov
out
divl
jmp
xchg
adc
lea
ret
jo
jmp
push
int3
int3
mov
enter
sub
stos
mov
or
lds
outsw
aam
das
lds
adc
pop
xchg
fistl
cmc
outsl
pop
adc
push
dec
add
mov
lret
push
push
stos
add
cmp
pop
adc
leave
xchg
sbb
fcomi
sub
aad
mov
push
rcrl
arpl
pushf
cmp
mull
push
adc
xor
js
lods
leave
in
push
cld
rcrb
rcrb
inc
cli
inc
sahf
xchg
js
xchg
jmp
std
sbb
or
inc
lea
and
cmp
xlat
inc
xchg
jae
inc
je
or
ds
sub
xchg
jo
sbb
mov
cwtl
mov
xchg
cld
fxch
fs
mov
xor
sub
stos
arpl
ja
xchg
jp
mov
ja
mov
in
mov
in
leave
lods
shr
push
jecxz
lds
sub
dec
mov
aad
or
xchg
add
shrb
pop
dec
jg
cltd
push
ja
jo
scas
inc
xor
mov
sbb
fimull
push
movsb
mov
lods
cltd
scas
out
cs
xchg
orb
sar
sub
or
sti
xchg
push
or
cmpsl
fwait
testb
jne
push
ljmp
out
fs
test
push
addb
mov
xchg
add
imul
test
int3
dec
rclb
test
sub
sbb
mov
or
aaa
dec
orb
dec
xchg
add
sub
pop
lret
cmp
pop
push
xor
lret
outsb
nop
sub
test
xchg
cmpsl
imulb
mov
sahf
repnz
pop
inc
testl
pop
in
hlt
icebp
inc
push
sub
adc
mov
aaa
mov
jo
outsb
inc
movsl
jns
mov
mov
mov
sub
add
cwtl
fisttps
jmp
loopne
xchg
and
insl
adc
jno
imul
jno
scas
mov
add
inc
mov
ds
inc
inc
mov
mov
out
push
rsm
dec
inc
xchg
clc
cltd
push
jns
not
lock
dec
popa
jle
andb
test
mov
add
mov
js
sbb
dec
scas
das
cltd
test
cmp
fwait
test
fs
jge
pop
imulb
push
nop
pop
in
sbb
cmp
jmp
idiv
sbbl
in
cmpsb
insl
pop
es
mov
decb
push
in
jecxz
pop
roll
lods
rorl
inc
test
test
push
adc
stos
and
loopne
into
test
pop
push
push
jge
ja
pop
jecxz
rcll
sbb
addr16
cmp
cmp
add
push
and
ljmp
ficoms
adc
out
mov
cmp
push
xor
cmp
add
xor
aas
pop
lcall
into
sub
cs
movsl
cmp
aas
push
repnz
test
mov
mov
cli
push
and
inc
flds
xchg
sbb
lds
and
lds
pop
mov
sub
jp
and
bound
jbe
mov
mov
push
rcll
gs
sbb
push
ds
or
adc
and
in
adc
xchg
mov
lock
or
push
inc
xchg
xchg
imul
leave
lods
mov
repnz
mov
or
add
dec
popf
jno
out
arpl
mov
fiaddl
add
jp
scas
push
aaa
jns
ret
sub
stos
and
or
xchg
jmp
in
xchg
jne
dec
nop
leave
int3
es
outsb
add
push
jmp
out
jae
mov
xor
push
sbb
mov
ss
std
ds
imul
add
pop
lds
scas
mov
mov
in
sub
jno
pop
fisttpl
lea
ljmp
enter
ss
ret
adc
enter
outsl
fmulp
ret
jb
dec
xor
adc
cltd
loop
dec
push
ja
sub
in
addr16
add
rcl
stos
lods
xchg
mov
dec
mov
mov
xchg
inc
sbbb
mov
inc
push
sub
pop
insl
repz
or
and
out
xchg
mov
xor
jle
scas
jns
push
movsb
stc
xor
sti
or
cmp
and
js
pcmpgtw
xor
or
ja
leave
jns
sahf
or
inc
add
popa
or
xor
add
pusha
shrl
mov
sub
sahf
repnz
pusha
jecxz
out
adc
sahf
aaa
hlt
stos
and
repz
repnz
popf
jmp
sarl
les
push
push
jae
mov
dec
jnp
in
jp
orl
add
sub
xchg
dec
and
lret
xchg
and
sub
clc
jge
add
sbb
inc
popa
jge
pop
push
je
fisubs
add
je
jle
add
xchg
mov
mov
and
enter
repz
fidivrs
int
xor
jnp
jp
dec
mov
adc
adc
push
test
imul
nop
lods
xchg
cmp
lcall
sbb
mov
jo
mov
popf
inc
and
das
and
pop
and
sbb
ja
jnp
cwtl
popa
iret
pop
int3
incb
dec
scas
add
inc
xchg
add
mov
cmpl
dec
addl
push
add
jnp
mov
jae
fsubs
comiss
push
sbb
push
or
les
mov
fdiv
pop
lea
and
dec
aas
or
and
mov
mov
sub
or
imul
fisttpll
sahf
push
es
and
popf
bound
xchg
dec
es
fcomp
mov
lock
aam
mov
pop
jmp
pop
or
add
pop
fbld
das
jbe
iret
test
add
xchg
adc
or
insb
es
je
dec
adc
push
call
jo
mov
stc
or
je
xchg
jl
fdiv
lods
aad
lret
mov
pop
inc
adc
dec
xchg
jns
fldl
arpl
int3
es
add
lods
ret
pop
inc
imul
add
pop
lock
jge
adc
mov
xchg
pop
jle
sbb
clc
xchg
out
sub
add
popf
outsl
push
pop
cmp
adc
cmp
roll
dec
sbb
cmpsl
mov
adc
test
pushf
stos
or
adc
sbb
push
or
mov
xor
into
cmp
xor
fwait
push
sub
xorl
mov
xor
sbb
jp
xchg
pop
lcall
leave
pop
xchg
pop
movl
xor
or
push
jno
rcr
xor
fildll
fs
sahf
fcomps
nop
in
clc
test
xchg
jmp
add
shl
stc
xor
sub
push
out
and
std
jnp
sub
scas
jae
mov
mov
jecxz
xchg
jl
xor
fldcw
lahf
out
dec
je
cld
mov
cmc
pop
je
jmp
gs
sub
xor
mov
and
jb
test
cmpsl
bound
mov
repz
mov
push
push
ds
aaa
lcall
sbb
jl
and
or
inc
or
ror
popa
ret
mov
mov
lds
adc
cmc
pop
adc
add
cmpsl
jmp
push
hlt
ret
jae
xchg
jno
adc
cs
push
sahf
loop
push
lock
addb
mov
dec
inc
testl
pop
jge
jne
xchg
es
cmpsb
in
imul
fincstp
sbb
pop
arpl
or
popl
or
sub
inc
imul
xchg
xor
icebp
adc
mov
sti
xchg
test
and
mov
and
popf
hlt
dec
add
mov
xchg
aas
mov
jb
sbb
loop
mov
mov
push
xchg
mov
jbe
movsl
mov
add
mov
out
jle
mov
insl
cld
push
jecxz
jns
xchg
jmp
jne
into
sti
movsb
adc
dec
sahf
pusha
fsubr
add
adc
cld
cmp
pusha
mov
pop
sbb
mov
jae
cmp
mov
xor
mov
test
iret
insb
dec
ret
mov
mov
xor
leave
xchg
mov
jns
add
adc
sbbl
inc
sub
fwait
sub
pop
mov
jb
popa
in
sahf
pusha
fbld
push
mov
pop
xor
jg
jge
aam
test
js
and
stc
cmc
fsubrl
stos
xor
int3
jns
xor
mov
out
jbe
mov
hlt
gs
mov
adc
pop
sub
mov
mov
push
and
cmpsb
pop
fsubs
cmp
subb
jl
sbb
pop
sub
fidivrs
dec
add
mov
push
xchg
data16
ss
fbstp
movsb
idivl
sub
lahf
cld
arpl
jmp
push
lods
add
cmc
arpl
repnz
shlb
push
ss
jmp
stos
fsincos
imul
aad
xor
mov
leave
cmp
div
xor
xchg
leave
in
fsubrs
gs
pop
frstor
adc
sub
inc
testl
rorb
aas
pop
ja
insl
inc
js
jns
out
mov
enter
or
into
cwtl
sub
test
mov
dec
dec
es
aad
cld
dec
outsl
cmp
lret
daa
aaa
adc
ret
inc
inc
sub
movsb
push
mov
mov
fs
leave
mov
lret
fistpll
jp
das
stc
das
jmp
add
pushf
loope
cmpl
mov
js
shlb
push
sub
insb
mov
cmp
pop
rol
icebp
fildll
jbe
stc
lds
mov
flds
add
xor
pop
push
call
inc
sub
out
or
shl
aaa
cmp
or
adc
sub
pop
in
nop
pop
les
popa
mov
arpl
cwtl
mov
add
sbb
sbb
or
or
popa
sbb
push
pusha
jb
fcompl
mov
add
aam
add
sub
movl
jecxz
mov
cmpsb
cmp
push
and
je
inc
movsb
popf
mov
sbbl
adc
mov
mov
jmp
and
nop
icebp
int
imul
xchg
in
lds
addr16
clc
push
pop
xor
cmpsb
mov
insb
mov
push
jo
pop
add
fildll
inc
and
mov
jp
int3
arpl
pop
adc
sub
sub
jge
push
ret
pop
cld
hlt
bound
test
test
fs
into
scas
cmp
or
lret
add
dec
rclb
push
jl
fadds
shrl
iret
xchg
sub
sbb
shrl
jg
mov
mov
push
test
leave
inc
sbb
pop
imul
sub
cmpsl
pop
ljmp
dec
aas
andl
lods
decb
cwtl
mov
and
jae
dec
outsl
loop
jo
xchg
inc
jno
or
scas
fildll
outsb
int3
movsl
cmp
inc
scas
mov
xor
jmp
daa
shlb
cmpsb
sbb
scas
daa
mov
arpl
bound
fsubrl
jb
lahf
fsubl
or
cmp
pop
out
jnp
in
cmpsb
jle
cld
add
movsb
lods
and
subb
jbe
mov
les
sbb
cmp
mov
dec
scas
lods
xor
xchg
sbb
stos
and
add
or
cmp
add
push
fistpl
pop
lock
std
leave
inc
stos
adc
in
xor
call
nop
lods
imul
sbb
and
hlt
inc
cs
add
mov
push
inc
xchg
or
ja
pop
psubq
lret
push
in
dec
cld
xor
pop
dec
adc
pop
pop
mov
jge
arpl
push
testb
adc
fnstcw
js
jecxz
cmp
pop
sub
mov
out
mov
ficomps
sbb
mov
cs
aas
sbb
mov
inc
push
cmp
cmovg
mov
xchg
mov
jne
push
inc
scas
repz
fbld
mov
shrl
repnz
call
xchg
outsl
lock
push
lock
cltd
loop
push
sub
xor
jp
sbb
pop
jl,pn
loope
xchg
push
icebp
dec
cmc
pop
mov
aam
cld
cwtl
bound
fs
mov
jmp
xor
lcall
outsb
ret
sub
test
stc
popf
push
lea
inc
pop
out
jmp
mov
jl
fisubrs
jns
mov
and
addr16
xchg
leave
flds
ljmp
imull
xor
loopne
nop
popf
mov
jnp
and
or
repnz
jge
xchg
aad
sti
aaa
mov
stc
adc
mov
or
cmp
xchg
andb
scas
push
fistpll
std
or
jmp
xchg
test
sbb
fisubs
inc
test
pop
sub
xor
adc
push
mov
xchg
pushf
pop
mov
sbb
imul
addr16
mov
out
addr16
cli
mov
cwtl
push
sub
cmp
gs
lods
iret
inc
cli
sbb
push
jp
dec
mov
mov
outsl
ljmp
das
sub
cmp
or
sbb
push
jp
dec
mov
mov
outsl
ljmp
das
sub
cmp
or
sbb
push
jp
dec
mov
mov
ljmpw
ss
push
cmp
sub
sbb
lret
outsl
push
mov
lcall
inc
and
sub
sbb
or
jnp
cmpl
shrl
add
adc
and
xor
inc
jnp
imul
dec
cmpl
shr
loope
icebp
lret
add
adc
and
xor
inc
jnp
imul
dec
addl
mov
lret
pop
cmp
and
out
mov
mov
sub
xchg
xor
xor
hlt
mov
push
mov
push
adc
pop
fwait
dec
mov
cmp
pusha
mov
jl
push
cs
es
inc
addr16
loopne
pop
das
lret
lds
sahf
jno
xchg
sti
lods
fadds
adc
dec
sbb
pop
data16
jnp
mov
sbb
adc
pop
xchg
mov
cmpsb
icebp
xlat
ror
negb
jnp
xchg
loop
xor
imul
int3
mov
mov
lock
cld
mov
mov
push
inc
popa
mov
xchg
add
pop
movsb
into
jno
int
adc
and
xor
inc
jnp
imul
dec
cmpl
shr
loope
icebp
lea
gs
dec
pop
pop
dec
inc
adc
sub
xlat
hlt
ret
leave
in
xchg
rcll
fs
popa
inc
sbb
inc
push
adc
sbb
dec
in
rol
int
out
xchg
mov
movsl
imul
dec
outsl
pop
jg
pop
push
imul
dec
cmpl
shr
loope
icebp
lret
add
adc
and
xor
inc
jnp
imul
dec
cmpl
shr
loope
icebp
lret
add
xor
mov
mov
xchg
mov
aad
mov
inc
and
mov
add
fiaddl
xchg
rcll
cmp
xchg
sbbl
mov
test
icebp
push
popf
push
stos
sub
insl
dec
dec
sbb
dec
and
add
cmp
addr16
mov
cmpsl
insl
out
orb
inc
subl
out
sub
xor
pop
pop
sbb
mov
cli
test
pop
imul
or
sub
ret
jle
inc
xorb
repnz
mov
movsl
stc
or
push
push
or
imul
mov
lea
lds
call
rclb
cmc
sar
add
or
insl
pop
sbb
push
or
fmull
sahf
xchg
aam
fcomps
fidivrs
and
or
jecxz
pop
and
lcall
iret
mov
rcl
mov
inc
jae
jnp
xchg
sub
lret
add
mov
stos
fxtract
addl
cmp
loopne
cmp
ss
out
xchg
push
cmpsb
inc
mov
scas
inc
sarb
je
lcall
push
jno
mov
not
call
cmp
jge
stos
out
loope
mov
cld
movsl
mov
pop
fisttpll
repnz
jne
cs
cwtl
mov
cltd
add
xchg
push
out
push
out
inc
pop
sub
adc
adc
mov
and
imul
inc
add
and
and
push
popa
cld
mov
inc
int
adc
jle
out
mov
fabs
lret
roll
mov
leave
mov
mov
mov
inc
int
adc
mov
sub
subb
xchg
arpl
jns
lea
push
rorl
jb
cltd
loopne
or
mov
outsl
push
pop
pop
sub
cwtl
cld
or
or
push
pushf
mov
xchg
lret
pushf
add
lods
mov
jb
push
add
enter
inc
mov
sbb
std
inc
mov
xchg
add
mov
and
sub
loopne
mov
mov
lret
out
push
loope
fwait
test
shrl
cmp
push
add
js
lds
pop
sub
sbb
inc
jl
pop
ret
insl
sbb
xchg
jecxz
into
icebp
push
sarb
leave
dec
xlat
hlt
incb
outsb
ljmp
sti
stos
pop
aad
lods
xor
and
das
add
push
sub
shll
fstl
sub
push
mov
inc
pop
push
roll
in
adc
sbb
addr16
or
mov
popa
mov
stc
xchg
movsb
int3
adc
mov
test
push
scas
mov
rcll
hlt
push
push
sub
dec
sbb
xor
adc
lock
movsl
push
cmp
dec
cld
xchg
jl
adc
icebp
xchg
orb
fbld
inc
xor
sbb
into
leave
or
imul
xchg
dec
lock
pop
divl
xor
in
mulb
xchg
js
out
xor
ficompl
mov
lods
dec
aaa
xor
in
gs
movsl
sbb
pop
cli
mov
add
ss
mov
fucomip
in
scas
cwtl
and
push
cmc
sub
inc
mov
adc
in
scas
cmp
jnp
out
jnp
loopne
fldcw
cli
dec
xor
mov
hlt
or
xor
mov
loop
fucomp
cmp
mov
xchg
out
cmp
cmc
movsl
mov
sbb
adc
divb
jle
cmp
or
divl
sbb
fwait
push
idiv
test
xor
sbb
nop
int3
stos
inc
mov
mov
add
aaa
out
out
clc
lea
jo
lods
stos
adc
cmp
dec
mov
movsl
movsb
xor
sub
xor
test
cmova
shrb
pop
pop
xor
inc
cmpsb
inc
jecxz
push
pshufw
xchg
cmp
sbb
negl
or
xchg
push
mov
es
pop
into
and
test
sbb
mov
push
movsl
cmp
jne
xchg
mov
out
push
cmp
sub
inc
insl
and
imul
outsb
jl
jmp
loopne
fildl
dec
mov
or
xor
icebp
mov
lods
xchg
sbb
dec
xchg
xor
mov
or
push
nop
push
data16
xchg
test
push
movsb
mov
adc
in
pop
daa
pop
cmp
repnz
out
xor
xchg
xchg
rorb
iret
jp
scas
dec
mov
fidivl
das
jmp
ficompl
inc
mov
fndisi(8087
clc
xorl
fstl
jmp
rolb
outsb
push
repnz
inc
lock
xor
xchg
lret
lock
pop
cltd
adc
push
add
push
pop
xor
test
test
mov
test
add
icebp
enter
sti
outsb
aam
xor
mov
mov
in
ja
lcall
pop
add
outsb
add
gs
mov
pop
and
mov
idiv
lcall
cmc
and
cs
xor
push
mov
les
mov
cmp
jne
dec
les
cmp
loop
enter
ja
in
test
gs
mov
xchg
xchg
pop
insl
jne
test
fcomi
mov
pop
mov
sbb
nop
sbb
sub
call
into
or
cmp
push
subl
sub
jae
sub
leave
in
and
mov
push
mov
add
sub
jge
popf
jmp
mov
jmp
loope
xchg
loop
sub
xchg
push
in
xchg
ljmp
xchg
mov
rcrl
or
in
xorl
xchg
push
jecxz
out
push
test
mov
out
ja
lret
cmpsl
pop
js
stos
mov
sbb
in
test
xchg
in
dec
add
jge
pop
hlt
and
pop
jg
arpl
mov
iret
dec
jb
and
or
pop
shlb
lcall
aaa
jnp
xchg
lret
add
loop
lea
je
iret
mov
or
add
es
in
cs
jae
add
mov
in
mov
sarb
sbb
adc
rorb
pop
lcall
adc
or
cmp
mov
cmp
mov
pop
ljmp
ret
inc
or
pop
inc
push
mov
push
mov
or
dec
fbld
mov
cwtl
scas
xchg
sbb
inc
or
orb
pop
xchg
imul
inc
xor
mov
in
mov
out
lds
or
ja
loopne
bound
aam
aam
xchg
push
mov
add
xrelease
outsb
scas
add
sub
sbb
adc
xchg
sti
jmp
mov
div
je
cltd
pop
inc
imul
int3
and
jb
push
push
decb
repnz
shlb
adc
in
jo
lret
xlat
addl
xchg
xorb
scas
stos
xchg
mov
loopne
lret
into
stos
sahf
mov
loopne
cwtl
mov
sbb
mov
test
dec
mov
push
ret
add
fadds
and
out
mov
cmpsb
dec
ljmp
xchg
je
pusha
rcrb
mov
or
mov
scas
adc
add
inc
sahf
add
adc
xlat
add
adc
inc
push
cmpsl
push
cli
jle
add
inc
scas
stos
mov
xchg
lret
pop
insl
sbb
xchg
mov
push
sub
sarl
pop
sbb
jno
cmp
sub
mov
gs
sbb
add
hlt
inc
cmpxchg
mov
rep
jo
add
push
xorb
dec
js
push
gs
mov
loope
sub
mov
dec
mov
add
aaa
mov
out
sahf
arpl
stos
dec
adc
mov
adc
sbb
cmp
call
cmp
pop
sub
jmp
add
out
mov
cmp
into
scas
ljmp
ret
popa
add
inc
jbe
scas
out
and
loop
xor
lock
out
scas
cwtl
daa
pop
ss
sub
xlat
mov
ficoms
clc
lods
sbb
pop
fstps
cwtl
inc
jg
jg
negl
out
daa
mov
mov
bswap
bound
out
pop
das
ds
fildll
add
lret
lret
mov
inc
scas
cmpsb
out
or
pop
sti
sbb
inc
idivl
imul
nop
test
out
mov
addr16
nop
je
sub
push
push
dec
ret
jg
sub
sub
cmpb
fildll
loop
xlat
cmp
arpl
loopne
in
cmpsl
mov
sub
sti
clc
inc
ja
popf
cmpsb
inc
and
sbb
adc
scas
sarl
lods
mov
inc
stc
clc
bound
and
adc
dec
sbb
inc
xor
xor
sbb
test
fsubs
scas
cmp
mov
out
and
adc
jns
jb
shll
leave
xor
int
xchg
push
sbb
in
mov
mov
inc
fidivl
js
popa
mov
pop
dec
mov
sbb
pop
loop
xlat
rcrl
outsl
imul
lods
inc
aaa
jmp
pop
cmp
jge
ja
or
insb
int3
popf
jno
mov
pop
push
and
fcmovnb
fadd
lock
pushw
imul
std
adc
push
mov
and
mov
cltd
pop
mov
in
add
das
arpl
xchg
shrl
dec
inc
jne
ss
insl
xchg
out
out
jmp
test
mov
mov
mov
mov
dec
test
xchg
stos
pop
sub
adc
fcomps
and
xor
xor
sub
adcb
xchg
sahf
pop
or
sbb
cli
xchg
dec
xchg
jo
ds
out
mov
mov
int3
out
jge
cmp
mov
inc
adc
mov
lods
bswap
movsl
gs
aaa
and
mov
shrl
pop
ds
pop
mov
mov
xorb
stos
sub
pop
add
lock
mov
cmp
pop
pop
push
mov
jmp
js
push
push
sbb
popf
xchg
int3
adc
adc
jge
out
jge
addr16
sub
cmpsb
mov
push
imul
dec
outsb
sti
ss
imul
ret
push
ljmp
mov
je
daa
out
sbb
test
xlat
loope
xor
sbb
add
pop
jp
fs
pop
test
je
or
lahf
cmp
mov
testl
stos
js
push
push
jne
ret
mov
adc
cmp
or
push
fstl
push
inc
jle
sti
movsb
mov
test
sbb
repz
push
sub
xor
add
mov
xor
ljmp
gs
push
out
scas
sahf
mov
scas
jnp
mov
nop
xchg
cs
test
dec
or
mov
rcrl
and
pop
pop
xor
bound
imul
enter
mov
mov
mov
pop
pop
dec
mov
out
mov
in
js
xor
pop
fidivrl
push
xchg
in
movsl
cmpsl
repnz
mov
lret
out
mov
out
mov
pop
mov
pop
movswl
repz
dec
lret
jno
push
aad
pop
dec
mov
add
mov
or
xor
cld
mov
nop
cltd
inc
fdivrl
sar
sbb
cmpsb
push
and
pushf
aaa
pop
wbinvd
jo
mov
adc
push
cmp
cmp
scas
hlt
mov
or
out
cmpsl
xchg
inc
inc
jb
test
scas
inc
es
pop
negl
jbe
subb
out
mov
push
sbb
mov
dec
push
cmpsb
cmp
divl
bound
fwait
sahf
out
stos
and
jmp
cwtl
movl
xor
rcrb
mov
push
shlb
sbb
add
push
pop
add
notl
dec
cli
mov
cs
inc
xor
xchg
xchg
in
ficoms
movd
adc
jecxz
xchg
mov
and
cmp
mov
sub
add
jne
cmp
flds
shl
jae
daa
mov
add
aam
jo
loop
faddp
push
sbb
test
bound
or
mov
jle
mov
sbb
mov
inc
or
enter
out
xor
xchg
nop
add
mov
andb
or
and
insb
andb
and
add
push
daa
push
push
mov
mov
cmp
scas
getsec
jne
pop
out
adcb
mov
sbb
mov
xchg
test
sbb
roll
dec
mov
and
pusha
cmp
mov
and
jp
rorl
inc
lds
push
or
daa
sbb
add
dec
out
inc
lods
sub
cmp
xor
jl
sti
pop
mov
lcall
adc
inc
cli
adc
jg
adc
cwtl
jmp
cmpsl
adc
xchg
cwtl
arpl
sar
fucomi
arpl
adc
adc
or
je
shlb
dec
mov
dec
jbe
mov
loopne
sahf
mov
testb
or
aad
lret
xchg
and
clc
mov
pushf
inc
inc
xlat
lahf
jmp
test
cmpsb
test
mov
mov
packsswb
mov
and
adc
push
out
pusha
pusha
nop
hlt
and
negl
into
popa
je
pop
xchg
push
sahf
data16
gs
push
insl
leave
lods
daa
test
xchg
data16
dec
jne
sub
sahf
gs
push
dec
pop
push
push
ffreep
mov
fisttps
clc
dec
loop
sub
repnz
cwtl
sub
test
mov
movsb
mov
pop
xor
js
and
lds
xchg
adc
ret
cld
jo
fiadds
mov
shll
fnstsw
rcl
lods
rclb
xchg
mov
imul
pop
sub
xchg
push
icebp
cmp
sbb
lcall
jae
push
movsl
adc
dec
mov
or
lahf
rcll
call
push
shrb
push
push
mov
rcr
adcb
orl
fwait
dec
mov
cmp
adc
scas
rcrl
push
imul
data16
mov
xchg
jg
dec
dec
call
mov
pop
cmp
pushf
shll
lcall
test
adc
dec
mov
and
and
and
or
push
lock
aad
pop
imul
adc
subb
das
mov
or
jl
int3
lahf
cmp
jp
in
out
ret
adc
hlt
aaa
push
scas
sbbl
test
lcall
sbb
jle
pop
fnstenv
pop
test
sub
pop
pop
xchg
cmc
pop
lret
lret
addr16
inc
and
cltd
jns
inc
sbb
push
enter
or
cmp
mov
jnp
fucomi
mov
cltd
cmpsl
jle
int
lahf
xor
rorl
stc
mov
lock
lock
inc
xchg
or
lds
pop
xor
sbb
cmp
fdivr
into
scas
jne
push
sbb
cmp
add
test
stos
mov
dec
iret
scas
dec
iret
incb
jmp
cmp
iret
cmpsb
shlb
loop
ficoms
push
add
add
das
stc
lea
fisttps
es
jae
jae
add
jg
fbstp
and
dec
pop
jle
xchg
cmp
loopne
or
inc
mov
sbb
stc
inc
lods
jb
dec
xchg
outsb
fwait
mov
inc
test
movsl
rolb
mov
pop
mov
jl
cmc
jo
aam
icebp
rorl
jbe
add
jmp
push
rol
sub
push
add
adc
test
stos
cmpsb
dec
push
and
mov
and
mov
pop
mov
dec
add
adc
push
push
xchg
mov
andl
nop
xor
cmpsl
fs
pop
imul
stc
xlat
xchg
jne
pop
test
fildll
into
mov
mov
add
cli
push
bound
mov
cwtl
sti
cmp
cmpb
inc
mov
inc
gs
fs
bound
int
out
cmp
fcmovu
add
sub
enter
aaa
xchg
sbb
call
call
jae
jge
or
push
ds
pop
fdivrl
add
dec
popf
sub
imul
xchg
es
sbb
and
mov
mov
sub
push
dec
sbb
jle
pop
mov
icebp
cmp
mov
rcrb
subb
pop
fdivrs
sbb
repz
xorl
jno
out
dec
outsl
and
outsb
push
outsl
sti
je
xchg
pop
stc
jb
cmc
dec
stos
cmp
mov
out
mov
arpl
mov
inc
stos
and
pop
pop
stc
pop
les
dec
mov
mov
shrl
mov
mov
push
cmp
les
push
fbld
sbb
push
add
shll
jg
push
sbb
xchg
cs
cmp
lahf
jmp
xor
out
movsb
sub
ficomps
xchg
into
mov
sbb
dec
xchg
movl
incl
in
xor
adc
in
dec
mov
mov
inc
sbb
clc
les
jle
dec
mov
sub
sbb
cmp
sbb
daa
inc
xchg
xor
test
adc
adc
lock
repnz
cmc
fwait
jnp
fstp
lea
in
add
lods
or
insl
xchg
adc
pop
jge
sarb
cmp
cmc
js
fisubl
lds
jg
lret
or
mov
fdivrp
addl
fnstcw
push
cli
testl
jae
cmc
adc
inc
stos
inc
js
xchg
push
sub
mov
into
fistps
xchg
jle
sbb
fucomi
mov
xor
xor
add
pop
gs
cmc
dec
dec
xchg
sbb
in
cmp
sbb
pop
or
aad
dec
imul
xchg
in
xlat
cwtl
mov
loopne
mov
loopne
arpl
cmpl
imull
cmc
sbb
xchg
adc
and
and
jae
mov
popf
outsb
mov
scas
xor
xchg
jno
cmc
xor
cmp
inc
push
inc
enter
mov
cmp
addb
inc
push
xchg
lret
sbb
lcall
pop
mov
fwait
mov
aaa
mov
inc
lds
or
pop
movsb
aad
cmp
xor
fidivrs
icebp
jg
pop
lea
inc
or
jp
ficompl
and
scas
addl
movsb
push
stos
std
xchg
inc
scas
or
fwait
int
push
xchg
xchg
mov
cmc
movsl
inc
sub
inc
cmp
xchg
in
orb
sarl
fwait
enter
lcall
cmp
popw
adc
xchg
and
arpl
add
in
jae
mov
pop
sub
push
subl
loope
pop
sbbl
sahf
orb
frstor
repz
xor
nop
jl
lret
adc
inc
jnp
int3
int
adc
mov
mov
sti
pop
lahf
xchg
addr16
push
jbe
add
pop
pop
and
incl
pop
int
dec
add
and
cmp
xorl
sub
stc
push
pop
inc
push
jp
xchg
add
pop
xchg
or
pop
xchg
icebp
dec
lret
cmpsb
bound
xchg
pop
loope
std
xor
les
outsl
jns
jb
andb
and
sub
shl
inc
popa
and
fisubrl
adc
out
roll
dec
test
bound
inc
rorl
std
cwtl
mov
or
push
into
daa
pop
leave
mov
or
lret
adcl
and
mov
outsb
outsl
add
or
push
in
or
lock
pop
repz
addb
loop
adc
popf
je
idiv
fldenv
in
xchg
sub
jbe
push
outsl
xor
in
lods
xchg
lahf
or
popf
or
movsl
mov
sub
push
lret
sbb
xchg
mov
pop
and
stc
rcrb
call
and
add
nop
xchg
fisubrl
inc
addb
jnp
sbb
adc
rcrb
aas
jmp
sub
mov
pop
lret
bound
dec
jno
and
xlat
in
or
sub
add
test
in
fistpll
mov
and
aad
mov
enter
aaa
pop
andl
idivl
int
jle
or
into
jp
xor
inc
adc
add
cwtd
jp
pop
dec
mov
xor
inc
jnp
imul
dec
cmpl
shr
loope
icebp
lret
add
adc
and
xor
inc
jnp
imul
dec
cmpl
shr
loope
icebp
lret
add
xchg
sub
jnp
imul
dec
cmpl
shr
loope
icebp
lret
add
adc
and
xor
inc
jnp
jmp
addl
mov
mov
xor
cli
cmp
or
sbb
fdiv
adc
ds
mov
dec
in
cmp
sub
sbb
or
cmp
or
sbb
insb
mov
pop
repnz
pop
xchg
dec
in
push
int3
sub
sbb
or
fiaddl
jne
fs
push
lcall
shrl
in
in
outsb
xchg
jge
je
jns
mov
or
push
aas
lcall
sub
les
in
std
cmp
in
push
lods
test
mov
das
leave
xchg
leave
subb
xchg
xchg
jo
bound
mov
sbb
pop
sar
shl
mov
int3
scas
mov
sub
imul
in
das
add
int3
lahf
fdivl
popf
xchg
sbb
mov
pop
je
test
stos
adc
cld
aam
adc
or
mov
xchg
xor
lock
stos
lods
test
lea
cld
sub
sbb
hlt
les
addr16
lret
xchg
mov
push
iret
push
imul
icebp
mov
scas
jns
sbb
pop
in
and
lret
insb
stos
dec
lcall
xchg
pop
test
cmp
sub
sbb
arpl
pop
stos
imul
sbb
add
pop
fisubrs
clc
ds
jns
dec
mov
lahf
pop
arpl
jl
dec
repz
out
xor
adc
xchg
sub
mov
je
and
jl
dec
lcall
mov
dec
in
cmp
sub
sbb
or
cmp
or
sbb
insb
mov
pop
mov
pushf
dec
in
cmp
sub
sbb
or
adc
add
push
inc
dec
adc
cld
icebp
pusha
sbb
test
mov
push
std
sahf
jmp
cmp
and
fwait
outsb
std
scas
push
inc
stos
iret
adc
cmp
mov
inc
jo
les
jb
sti
repnz
or
sbb
xor
in
inc
xor
or
sti
jo
push
cltd
test
cmp
repnz
pop
fcoms
push
mov
out
sub
aaa
repz
cs
sub
test
mov
stos
inc
mov
jae
jp
cmp
cmc
stc
sub
andl
sub
adc
dec
ret
sub
test
cs
jnp
or
and
sub
arpl
pop
rcl
inc
vmwrite
loope
jae
outsl
nop
icebp
and
push
cltd
xor
and
dec
mov
jmp
push
mov
cmp
lret
jge
outsb
mov
push
lods
je
js
and
cwtl
outsl
nop
pop
aaa
jne
movsl
push
flds
in
add
in
fisubrs
mov
fwait
andb
imul
xor
pop
push
jg
shrb
push
pop
movl
sub
jb
out
push
push
aad
jb
imul
cmp
xor
mov
xchg
mov
add
outsb
inc
inc
jl
lods
push
repz
inc
adc
js
xchg
inc
pop
or
push
push
cltd
je
xor
and
xchg
xchg
ret
dec
ja
in
ror
mov
adc
pusha
xor
data16
xchg
mov
lret
sbb
outsl
mov
and
cmp
pop
xchg
lods
adc
add
adc
sbb
mov
negl
icebp
ss
jae
push
icebp
stos
add
sbb
cwtl
pop
dec
mov
xchg
cltd
loopne
dec
loop
testl
mov
mov
push
inc
pop
test
gs
fxsave
dec
fmuls
xchg
mov
xchg
scas
nop
mov
push
cmpsl
mov
or
pop
dec
int
dec
pop
push
out
xor
aad
sub
sbb
push
xor
and
pop
roll
or
movsl
push
and
test
rol
ret
push
xchg
nop
sarb
push
adc
dec
mov
jno
adcb
push
adc
dec
scas
xor
xor
inc
pop
cwtl
mov
xchg
sbb
stc
xor
push
pop
jl
push
xor
sub
xchg
in
inc
aas
loopne
pop
insl
xor
sbbb
cmp
mov
jge
lret
and
push
mov
pusha
iret
idivb
fnstsw
xor
frstor
pop
fwait
pop
inc
lock
mov
fs
xchg
or
or
in
test
mul
bnd
int3
or
jae
push
fildl
mov
mov
jae
pop
test
js
shll
ja
inc
push
scas
ret
out
sbbl
pop
stos
pop
jno
inc
pop
jns
inc
push
fwait
push
loop
outsl
push
xchg
xor
xlat
xchg
bts
repnz
push
icebp
sub
push
shll
out
and
repz
xchg
jg
dec
pop
leave
jo
jg
das
jae
aaa
pop
sub
jnp
sub
fmull
mov
pcmpeqd
adc
loope
lahf
mov
mov
and
out
out
fsubs
leave
pop
push
int
inc
scas
pop
jbe
pop
js
push
mov
push
lods
faddl
xchg
mov
dec
mov
mov
pop
cmpsb
add
cmpsb
adc
int
inc
pop
adc
lods
jo
add
sub
mov
out
faddp
sbb
sbb
loop
movsl
movsl
inc
popa
scas
jp
rcr
fcoml
jnp
int
xchg
ja
nop
in
int
fyl2x
fistpl
int3
xchg
push
insb
lahf
mov
out
loop
xor
jb
lods
fs
sbb
push
jae
insb
push
and
js
push
xor
lods
ljmp
lret
cwtl
inc
sub
sarl
mov
mov
arpl
jno
std
sub
shrb
sahf
and
pop
sub
pop
mov
and
push
push
or
pop
fwait
into
andl
sbb
adc
cwtl
push
mov
gs
pop
push
sbb
xchg
sti
cli
cmc
sub
push
pop
dec
out
sbb
out
das
rorb
test
sub
jmp
loope
imul
push
xchg
mov
fisttpl
leave
into
fisubrs
pusha
lret
ret
test
xor
lods
jnp
xor
cmp
inc
xor
inc
pop
outsb
mov
jb
mov
inc
push
cmc
loop
cmp
outsb
imull
loopne
push
outsl
fistps
and
cmp
insl
outsb
adc
icebp
iret
dec
and
arpl
sub
pop
out
ljmp
imul
mov
clc
outsl
and
mov
mov
inc
bound
jne
lods
leave
mov
cmp
fnstsw
movsb
mov
xchg
orb
add
or
jmp
pop
int3
cmp
ret
sar
mov
fisubrl
scas
mov
mov
add
inc
mov
push
adc
pop
jecxz
mov
pop
movsb
into
dec
lret
sahf
enter
pop
dec
loope
insl
jecxz
gs
clc
rorb
or
sbb
and
mov
ffreep
push
stos
jnp
sbb
mov
push
inc
test
jl
jb
xorl
jns
adc
pop
lea
mov
lock
mov
jbe
lahf
adc
adc
es
xchg
inc
mov
dec
imul
das
xlat
daa
cld
jl
cmp
pop
in
out
adc
mov
xchg
in
aas
loope
or
mov
mov
pushf
xrelease
leave
xor
or
cmpsb
pop
mov
mov
cmc
mov
mov
pop
loop
jmp
lcall
or
mov
jnp
sbb
push
mov
and
adc
out
or
mov
mov
mov
sub
shlb
pop
scas
shl
or
int3
xchg
aas
and
push
inc
in
into
dec
nop
cmp
mov
and
fsubl
es
dec
push
pop
aaa
test
mov
add
scas
pushf
addr16
mov
dec
call
cmp
xchg
test
int
aaa
sbb
jp
dec
rcll
cmp
mov
jne
arpl
xchg
or
in
lock
sub
aas
adc
out
pop
sbb
daa
mov
dec
btsl
xor
dec
xor
xor
cmc
xchg
pop
cmp
add
sbb
ja
xor
fbstp
mov
and
cmp
sar
cmc
mov
push
cs
daa
dec
ret
pusha
dec
sub
push
cmc
push
xor
lea
sbb
aaa
fadds
loopne
xlat
arpl
neg
popa
mov
xchg
int
jns
xchg
inc
sbb
in
jb
xor
sbb
push
sub
cmpsl
push
lret
leave
cmp
mov
dec
int3
cmp
out
das
xchg
push
xchg
out
mov
fdiv
adc
add
mov
push
bound
jb
mov
stos
push
dec
jns
inc
repnz
mov
pop
int3
idiv
dec
pop
cmp
pusha
mov
xchg
aaa
lret
mov
ja
inc
lock
hlt
repnz
or
xchg
lret
mov
mov
test
jecxz
setbe
push
cmp
push
fcomps
outsl
sbb
ret
mov
jbe
mov
rolb
mov
pop
sbb
xor
shrl
mov
and
aaa
jmp
sbb
in
mov
clc
gs
andnps
xor
push
dec
xor
std
pop
or
sub
sbb
scas
test
dec
sbb
rorl
pushl
orb
shl
rol
dec
or
pop
fisubl
in
iret
outsl
xor
xchg
push
sub
pop
rcpps
xchg
mov
imul
cmp
mov
popa
jp
lods
cmp
cld
popa
sbb
adc
add
das
stos
std
jge
sub
add
fcmovnbe
and
xor
test
das
mov
shlb
jns
rorb
stos
roll
inc
lods
out
sub
sarl
cmc
or
out
cmp
imul
mov
xchg
pop
inc
negb
faddl
popf
adc
push
fwait
pop
movb
mov
lahf
dec
fisubrl
stc
cltd
mov
adc
imul
pop
mov
cmp
jbe
test
jnp
popf
or
js
inc
adc
push
dec
test
push
jae
push
call
dec
mov
mov
shll
in
pop
mov
jae
popf
add
jb
mov
int3
pop
test
ret
inc
sub
mov
and
repz
test
mov
mov
movsb
and
lahf
pop
inc
je
push
xchg
aad
xlat
cmp
call
dec
mov
ss
pushf
push
mov
ss
scas
or
enter
loope
xchg
push
filds
inc
test
daa
sti
adc
mov
mov
add
pusha
add
pop
pop
pop
popa
jmp
sbb
dec
mov
adc
fldcw
xchg
mov
and
out
stos
es
sub
xor
or
ds
sbb
aam
jae
cmp
hlt
cli
jl
and
pop
or
aam
leave
mov
jmp
cmp
lds
dec
jns
pushf
add
les
xchg
xor
pop
scas
imul
dec
outsb
daa
xorl
std
cltd
int
pop
mov
push
je
pop
or
mov
arpl
add
add
jns
imul
cld
cmpsl
loope
jb
scas
loopne
lcall
jo
adc
bound
leave
and
dec
cmp
dec
or
push
sahf
xchg
jns
fmuls
pop
in
mov
adc
push
xchg
mov
sahf
or
jl
sti
es
scas
fidivrl
inc
movsb
inc
fcompl
clc
xlat
xor
cmp
inc
popl
fsubrl
dec
sahf
gs
clc
rcrb
daa
mov
push
in
inc
jle
outsb
xchg
sub
sbb
fwait
pop
int
icebp
inc
je
out
je
stc
add
popf
test
pusha
pushl
cltd
mov
dec
mov
dec
mov
div
insl
xor
cmpsl
adc
jb
shrl
mov
mov
aaa
sahf
aaa
inc
std
out
loope
shll
lea
loopne
jmp
lds
jnp
mov
xor
push
arpl
inc
lret
jb
xchg
aad
mov
lods
ret
cmp
inc
xchg
mov
jne
fistpll
xor
iret
outsl
dec
lcall
push
mov
mov
mov
cmpsl
inc
in
mov
and
out
movsl
enter
fldt
push
out
sub
das
hlt
jge
and
adc
or
pop
sbb
pop
mov
push
push
test
push
call
in
xchg
pop
push
xchg
imul
sub
aad
sbb
mov
lahf
call
push
dec
sbb
jno
ja
scas
xor
nop
push
addr16
xor
mov
in
mov
mov
aas
les
rcrl
mov
push
pop
pop
int3
jg
xor
mulb
pop
add
mov
push
and
add
enter
gs
xchg
stc
das
insb
test
fisubrl
sti
shll
cld
jno
icebp
stos
lock
popf
test
dec
fildl
and
je
or
inc
out
xchg
jg
mov
push
sbb
cmp
pop
inc
xor
cmc
int3
push
pop
mov
and
fistl
inc
push
mov
loope
jo
jl
mov
ret
inc
lret
pop
pop
pop
xchg
mov
mov
int
mov
inc
or
dec
lret
je
movsl
ret
ljmp
aas
pop
dec
mov
xor
push
popa
inc
or
xlat
xchg
sti
jns
mov
loop
lcall
repnz
adc
lods
mov
mov
pop
popa
cmp
test
insl
outsl
adc
pop
fisttpl
fsubp
sub
orl
and
sub
shll
lret
cltd
xchg
xchg
fistps
push
push
xchg
sub
xchg
imul
cmp
cmp
clc
mov
mov
mov
sub
xchg
mov
pop
mov
jns
or
fwait
or
xor
push
rolb
stos
das
fistpll
fdiv
push
imul
popf
insb
sbbb
adc
xchg
loope
inc
mov
xor
movsl
fisubrs
ret
mov
inc
pop
test
ret
cmp
add
call
push
movsl
out
pusha
test
sub
ljmp
in
icebp
stos
adc
mov
push
mov
es
cmp
outsl
movsb
clc
test
xchg
mov
adc
jno
sub
call
mov
stos
or
out
xor
fcomi
jge
popa
push
jbe
pushf
js
pop
mov
mov
mov
jl
xchg
lods
or
imul
xchg
mov
push
stos
ljmp
and
jp
mov
xchg
sbb
push
inc
ss
ret
fisubrs
inc
bound
cmc
and
adcl
notl
js
and
add
dec
loop
nop
std
fdivrp
rcrb
pop
mov
mov
mov
cmp
xor
pop
aam
mov
xor
addb
ficoms
mov
in
lret
mov
dec
sub
mov
dec
and
stos
in
movsb
enter
aad
cltd
outsl
add
jmp
fldenv
mov
jp
out
inc
scas
push
test
inc
mov
fwait
imul
dec
jnp
jo
out
mov
jo
mov
insl
inc
jnp
filds
jp
pop
and
in
push
push
or
lods
ljmp
sbb
lea
es
out
mov
loop
imul
addl
fdiv
ljmp
lret
repnz
or
in
jbe
mov
push
sub
mov
jb
dec
dec
pop
pop
out
inc
fdivrs
fisubs
int
adc
sub
and
cmp
mov
mov
dec
ja
aam
pushf
jne
hlt
inc
push
pop
mov
popf
xchg
mov
js
adc
stc
add
js
add
mov
adc
sarl
leave
test
test
ret
inc
or
pop
push
fwait
lds
stos
mov
sahf
in
or
dec
std
sbb
addr16
js
ret
insl
xchg
adc
shll
mov
pop
lret
mov
push
scas
xor
sub
sbb
cli
out
lock
sbb
or
fld
xor
sbb
fiadds
sti
push
jecxz
aaa
roll
dec
push
adc
adc
stc
mov
pushf
and
cltd
fucom
add
inc
jge
dec
adc
and
jge
jge
pop
or
push
fsubl
jecxz
xchg
mov
mov
mov
call
addr16
and
pop
mov
cwtl
dec
repz
xor
jecxz
and
inc
xlat
shr
fsubr
jp
test
imul
ds
mov
add
and
ja
es
out
sub
cmc
and
pusha
cmc
popa
pop
in
mov
out
inc
cmp
adc
sub
lcall
mov
and
cmp
out
fbstp
ss
mov
jmp
ja
popa
arpl
mov
dec
shl
addr16
dec
jl
jae
jns
movsb
imul
or
xchg
inc
pop
jbe
arpl
push
inc
popa
jecxz
add
add
fidivl
adcb
sahf
fstl
inc
int3
mov
and
lret
sbb
xchg
mov
pop
add
dec
dec
into
mov
out
cs
dec
test
mov
rcll
mov
lahf
mov
in
xchg
adc
int3
push
mov
adc
lds
outsb
and
mulb
cwtl
dec
and
mov
and
fiaddl
test
pop
inc
push
adc
scas
jecxz
inc
ret
arpl
inc
sti
and
push
call
mov
sbb
push
mov
outsb
add
mov
cld
add
add
xor
in
bound
cmp
fistl
and
pusha
gs
outsl
push
scas
test
dec
cli
jno
jmp
icebp
rol
pop
cmp
push
call
add
push
dec
dec
repnz
inc
cmc
xchg
mov
aas
and
inc
pop
sbb
cs
jge
enter
xchg
add
fwait
mov
jp
call
clc
hlt
shl
sbb
inc
outsl
and
es
imul
jnp
roll
out
add
pop
repnz
or
divb
xchg
jle
push
aam
hlt
push
push
in
mov
adc
sub
scas
sbb
out
jl
clc
arpl
xchg
addr16
lret
or
enter
push
ffree
push
mov
pop
or
add
call
loopne
cwtl
xchg
pop
pop
mov
xchg
cmp
adc
bound
lret
dec
fiaddl
aad
push
sti
fneni(8087
lods
lock
jo
pop
and
fdivrs
jnp
sub
sti
xchg
mov
pop
dec
movsb
xor
jo
cmp
fs
adc
mov
lcall
pop
out
and
idivl
xlat
xor
fistpll
gs
cwtl
push
mov
lcall
cmp
add
or
das
dec
and
cmc
add
dec
test
mov
inc
push
out
lcall
std
cmp
sbb
cld
hlt
xchg
mov
dec
loop
add
je
mov
incl
push
sub
out
xor
orb
mov
fdivrs
pop
sub
inc
lret
fs
js
cmp
loopne
xor
out
leave
test
cmp
mov
dec
push
xor
push
sbb
cmp
test
ret
in
jne
sub
lods
push
jg
fildll
lret
arpl
movsl
pop
xor
or
mov
cmc
data16
cld
je
fsub
add
mov
lahf
mov
and
bound
movsb
mov
push
pop
add
test
mov
mov
ds
xchg
xchg
and
lret
cld
pushf
sahf
add
pushf
aas
dec
jo
aaa
pop
leave
push
xor
outsb
movsb
stc
das
xor
loop
mov
mov
int3
test
and
loopne
insl
sbb
mov
ljmp
jle
adc
fisttps
idivb
ret
xchg
jns
xor
test
jnp
shufps
aad
and
movsl
inc
vmread
or
das
dec
ja
repz
jb
jmp
clc
sub
sub
jp
mov
test
pop
lods
prefetch
fs
mov
stos
sbb
jp
xor
int3
pop
add
adc
adcl
arpl
dec
lahf
jnp
stos
mov
xor
inc
push
mov
xorl
pusha
dec
cmp
or
sarb
cmp
jns
dec
dec
or
mov
pushw
loopne
pop
push
and
xor
or
jbe
xchg
pop
sub
jno
xor
jb
cmp
or
hlt
imul
insb
cmp
leave
add
mov
aam
lea
dec
or
xchg
jne
dec
sti
mov
push
mov
addl
lcall
int3
xchg
aam
push
mov
push
mov
dec
aaa
lret
into
jp
stos
addl
call
in
shll
add
cmp
arpl
adc
std
mov
fsubs
push
jmp
aam
nop
adc
xchg
mov
stc
rclb
ret
mov
mov
cmp
cmpsb
xor
or
jb,pt
or
xchg
mov
mov
dec
fisubl
adc
pop
sahf
fidivrl
ja
cmpsl
data16
fs
jge
push
js
fsub
cwtl
sub
fstps
gs
jecxz
cmc
adc
loop
inc
and
pop
xor
jmp
in
and
and
daa
jbe
in
push
sub
pop
adcb
pushl
inc
cmp
jg
sbb
mov
pop
pop
scas
ds
adc
aam
xor
add
pop
loopne
testl
std
sub
lods
sar
sub
sub
dec
adc
scas
xchg
stc
xor
adcl
fcmovnb
inc
loop
mov
cmp
mov
or
in
dec
dec
ja
int3
int3
cld
arpl
cmp
add
mov
cld
into
adc
xor
je
ljmp
in
out
ljmp
mov
bound
lret
popf
add
negl
lret
fsubrs
xchg
cmp
sub
xor
jo
sbb
adc
sar
lret
jmp
jmp
daa
fwait
pop
push
movsb
cmp
xchg
mov
pushf
mov
push
ficompl
insb
mov
pop
mov
pushf
dec
in
cmp
sub
sbb
or
cmp
or
sbb
insb
mov
pop
mov
pushf
dec
in
cmp
sub
sbb
or
cmp
or
sbb
insb
mov
pop
mov
pushf
dec
in
cmp
sub
sbb
or
ds
jl
int3
lcall
es
pushf
cmp
xor
and
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
shll
jecxz
popf
shl
imul
fnsave
arpl
adc
and
rep
jecxz
xchg
or
mov
std
pop
in
arpl
adc
add
rcr
ret
pop
repz
xchg
xor
and
add
pusha
hlt
jge
dec
mov
sbbb
sub
cmp
in
into
cltd
addr16
jno
adc
jg
push
aaa
outsb
sarl
push
jg
call
out
in
mov
pop
xor
pop
cmp
push
int
xchg
and
push
inc
sub
pusha
or
lods
mov
xchg
ret
jge
lds
lret
ret
push
fadds
in
mov
xor
out
sub
mov
cltd
ds
sub
mov
and
mov
std
sahf
fiadds
pushf
sarl
loopne
jl
inc
imul
dec
insl
sub
add
sub
das
mov
bound
lods
dec
cmp
jmp
sbbl
dec
inc
sbb
arpl
xor
stos
pop
xchg
xchg
jns
jb
inc
loop
adc
sete
push
ja
ja
rorb
mov
mov
out
cs
mov
mov
mov
lcall
and
mov
cmp
sbbl
int
fnsave
arpl
adc
and
rep
jecxz
xchg
or
mov
fnsave
arpl
adc
and
dec
into
push
dec
xchg
das
or
jbe
or
xor
out
mov
repnz
pusha
lcall
popf
and
fnsave
jnp
jo
clc
jno
pusha
mov
icebp
mov
jae
leave
int
sub
cld
in
adc
insl
cld
das
es
out
rcr
push
push
aaa
pop
dec
fiaddl
sub
mov
lret
pop
lods
xchg
cmpsl
mov
stc
lock
sbb
push
inc
xchg
vcvtpd2psy
ror
lea
or
test
neg
fxch
jp
mov
xchg
cmpsb
add
aas
or
and
xchg
adc
mov
xchg
dec
loope
notl
and
and
popf
out
jg
leave
arpl
mov
xchg
wrmsr
and
js
push
sti
ret
lods
negb
enter
pop
jnp
xchg
jecxz
pop
sbb
mov
js
dec
cmp
or
push
inc
stos
arpl
mov
dec
mov
dec
arpl
or
pop
jne
shrb
inc
fcmovb
std
mov
leave
popf
dec
aaa
lock
mov
push
dec
rol
hlt
xchg
dec
sbb
or
aam
fnsave
inc
ja
sarl
dec
jp
sbb
repz
inc
push
sahf
xor
ljmp
fwait
and
push
in
repnz
xor
mov
fsubr
sub
or
add
pop
hlt
dec
subb
loopne
icebp
push
iret
jns
jo
fldpi
cltd
and
jg
sbb
mov
cmova
out
lods
sbb
pop
adc
fisubrs
mov
push
inc
lods
sub
addr16
out
test
jp
fmull
outsl
xchg
rcll
sbb
scas
cltd
push
cltd
push
popa
xchg
in
loope
sbb
lock
fstpl
dec
sbb
add
andl
fwait
roll
xchg
sbb
mov
stos
outsl
xchg
out
es
cmp
jne
dec
xor
outsl
jg
mov
negl
aam
or
xor
push
hlt
test
or
push
lds
mov
mov
lcall
jp
test
mov
lods
cld
pop
pop
lcall
insl
insb
xor
repz
js
stos
mov
imul
dec
pop
adc
fiadds
sbb
xor
test
ret
imul
shll
loopne
out
inc
arpl
gs
adc
sub
xchg
jo
shll
and
call
xchg
mov
rcl
push
push
mov
sub
ljmp
sub
lcall
sub
sti
cmc
je
push
iret
shrb
add
and
fiadds
cli
imul
mov
fisubs
xor
and
inc
std
inc
adc
push
loope
testl
mov
test
jbe
xlat
lea
mov
sub
mov
push
adc
movsb
cmpb
push
pop
mov
inc
movsl
xchg
roll
or
pop
xor
jbe
test
popf
pop
and
pop
test
cmpsb
fs
call
adc
test
out
outsl
inc
adc
cld
jle
movsl
in
xor
jne
push
sub
enter
adc
mov
cmp
in
cs
popa
inc
jb
or
xlat
stc
add
add
test
sarl
mov
xchg
mov
js
hlt
jae
imul
pop
inc
add
add
cwtl
push
cmp
xchg
or
out
dec
mov
jle
repnz
loopne
es
fisubrl
aaa
pop
aas
push
xchg
fcmovnb
outsb
icebp
add
cmpsb
cli
pushf
fbld
movsl
ljmp
sbb
leave
pop
dec
nop
or
test
and
cmp
cmp
push
je
inc
arpl
sahf
cmp
xor
sub
movsl
cwtl
les
popf
arpl
fs
xchg
jnp
je
mov
sbb
imul
leave
jnp
into
sbb
mov
or
jbe
inc
and
imul
cmp
mov
inc
cmpl
fcomp
and
jnp
and
or
add
cmp
data16
out
add
stos
jae
out
dec
ljmp
inc
clc
mov
lods
or
test
pop
sub
ds
rcrl
aad
adc
fstpl
or
inc
andl
adc
xlat
jns
fwait
cs
imul
jmp
fnsave
repnz
in
jbe
arpl
arpl
dec
push
mov
sti
sub
adc
pop
sbb
mov
mov
stos
xor
mov
and
sub
in
xor
in
jg
das
mov
jbe
push
cld
cwtl
xchg
mov
lods
rorl
imul
mov
addr16
sbb
add
add
pop
push
cmp
orl
xor
pop
cmp
mov
pop
movsl
dec
call
cmpsb
and
jne
lret
dec
mov
xor
or
and
xchg
leave
inc
icebp
repz
sahf
f2xm1
sub
pop
ret
lahf
scas
and
in
jmp
sub
scas
mov
mov
inc
xor
push
or
lahf
shll
popf
xor
andl
dec
or
mov
add
dec
cmp
daa
push
push
dec
inc
aad
stos
shll
and
mov
inc
jnp
adc
nopl
sbb
inc
enter
sbb
push
aaa
push
lods
mov
les
add
lock
and
stos
pushf
ljmp
xchg
and
and
sub
mov
mov
and
push
and
ss
mov
test
fwait
out
pop
in
jg
inc
add
push
mov
inc
loopne
out
addl
xchg
pop
lods
add
rsm
scas
sub
adc
inc
hlt
scas
mov
imul
fisubrs
inc
xchg
jne
dec
adc
fisttpl
and
cmp
pop
dec
je
mov
add
movsl
mov
dec
push
lock
jmp
and
jle
iret
sub
imul
repz
adc
fisttpl
jnp
mov
rclb
sub
in
test
mov
loopne
add
push
out
mov
mov
test
pop
and
aad
and
popf
pop
aaa
sahf
inc
loopne
sbb
jle
xlat
fmuls
icebp
in
jb
push
push
dec
cmpsl
cmpsl
ret
xor
xchg
jp
and
ss
cmpsb
sub
add
push
bound
std
lods
loope
jno
in
shrl
push
push
mov
push
in
mov
pop
sub
add
call
popa
lods
mov
shrb
gs
pop
pop
xorl
outsl
pshufw
pop
std
addl
xchg
dec
loop
scas
loopne
pop
lahf
int3
sub
sub
sarl
shr
in
imul
shll
sti
xchg
int3
push
add
and
stos
sub
mov
popl
and
cmc
mov
call
stc
adc
data16
push
mov
mov
mov
orl
shl
dec
inc
pminsw
rcll
jecxz
xchg
pop
lods
scas
insl
cmc
out
and
xor
xor
std
pop
cmp
adc
add
inc
js
popl
imul
aad
out
jne
fldcw
xchg
in
daa
cmp
xchg
dec
fsts
ficoml
loope
mov
aam
pusha
inc
icebp
cmp
xchg
faddp
je
mov
addr16
pusha
xchg
mov
hlt
bndldx
inc
xchg
or
ljmp
lahf
and
sub
in
popf
out
sub
pushf
pop
xchg
dec
mov
mov
iret
mov
jmp
cmp
decb
pushf
nop
test
or
inc
jle
mov
and
xor
add
cltd
and
pop
jnp
movsl
add
fwait
in
push
scas
jae
sbb
mov
ds
xchg
loopne
add
shll
dec
fisttpll
cmp
divl
and
fcompl
dec
xor
jmp
lret
into
jle
mov
stos
in
mov
adc
and
sarb
test
insb
mov
adc
lds
scas
mov
pop
mov
inc
dec
add
and
aas
out
pop
jle
or
addl
inc
scas
stc
pop
xchg
loop
js
insb
bound
scas
and
pop
shl
mov
dec
lahf
inc
jmp
mov
scas
lret
leave
mov
es
xor
xor
bound
int3
sahf
add
xor
dec
sub
fs
pusha
outsl
dec
mov
and
push
rolb
xchg
cmpsb
xchg
into
or
gs
movsl
sbb
dec
cltd
pop
mov
enter
data16
mov
ret
je
sbbb
xor
and
sub
into
subl
xchg
or
pop
adc
add
fs
jbe
pop
mov
js
iret
xchg
movb
xor
dec
inc
add
popf
insl
in
std
fsincos
aad
add
inc
push
push
mov
mov
mov
adc
movsb
jle
jb
aam
mov
pop
movsl
mov
lcall
pop
jne
ljmp
and
mov
fldt
ja
or
out
xchg
xchg
sub
test
or
jb
testl
test
jnp
in
push
mov
outsb
pop
mov
add
lret
ss
dec
mov
adc
dec
rolb
lds
mov
sahf
rorb
in
or
out
pop
inc
rclb
cltd
icebp
pop
fidivs
jmp
sarb
push
xor
pop
sbb
scas
mov
ret
daa
ljmp
iret
xchg
inc
in
inc
cmpsb
shrl
dec
imul
mov
idivb
dec
fdivl
std
testb
sub
loope
and
mov
insl
sets
scas
nop
fstpt
xchg
cmpsl
es
lahf
fdivl
mov
addr16
or
into
imul
xchg
adc
or
or
or
sub
jg
js
pop
xor
cmp
ret
stos
mov
fucomi
clc
insb
xchg
cmpb
sbb
pop
inc
vmread
and
push
mov
push
shll
pop
jmp
imul
mov
push
mov
sbb
ss
lods
es
jns
pop
xchg
mov
frstor
bound
loopne
outsl
dec
sbb
adc
jge
mov
clc
aas
pop
and
dec
dec
out
clc
arpl
pop
in
imul
scas
sbb
pushf
in
sbb
jp
xchg
test
mov
sub
int3
or
mov
aas
push
repnz
sbb
test
mov
xor
or
pop
repnz
jmp
mov
cs
adc
push
fldl
movsl
inc
lods
aas
pusha
inc
sub
xor
dec
dec
adc
mov
jmp
mov
repz
jae
mov
and
inc
or
lahf
sub
jmp
and
in
imul
dec
das
add
xlat
cmpsb
out
jg
inc
sub
imul
lahf
or
fisttps
inc
outsb
mov
sbb
jg
addr16
sbb
and
mov
jae
fisubl
cmp
push
sub
push
outsl
daa
in
mov
mov
adc
insl
incb
fistps
sahf
lods
stos
les
fisttps
add
jp
cmc
mov
sahf
pop
fbstp
ljmp
fwait
orl
xor
and
mov
mov
jle
mov
pop
sub
and
push
push
das
jecxz
shl
hlt
icebp
inc
insl
iret
sbb
inc
dec
into
aam
sbb
mov
pop
mov
mov
ret
push
icebp
jbe
sub
enter
stc
xchg
movsl
ret
cli
xchg
roll
mov
lret
inc
sarb
lahf
xor
test
idivb
daa
mov
push
lss
mov
mov
or
repnz
jl
dec
aaa
cmp
fxch
scas
imulb
cmpsl
mov
rclb
test
mov
sbb
push
addb
xorb
and
pop
jp
ds
mov
lret
mov
xor
loope
sbb
xchg
mov
les
repz
adc
inc
push
in
loop
xor
test
lods
fmull
loop
mov
ja
cmpsb
xor
mov
nop
pop
mov
nop
add
xor
loope
push
std
mov
mov
and
sub
jo
insl
movsl
dec
nop
cs
negb
sti
jmp
icebp
aad
pop
cld
adcl
outsl
sbb
lcall
pop
mov
mov
pop
js
fidivs
push
fwait
mov
pop
jecxz
sarb
sub
inc
bound
roll
aad
hlt
push
out
adc
sahf
push
inc
vhsubpd
cmpsb
shll
mov
xchg
jae
insb
jno
cld
sti
cmpl
pop
out
inc
lock
out
xlat
std
fdivl
les
push
xor
mov
mov
sbb
sub
or
xchg
or
fdivrl
cld
or
mov
xchg
sub
inc
cmc
scas
mov
sub
aad
or
mov
cmp
xor
xor
dec
hlt
add
add
scas
and
leave
and
jecxz
dec
sub
das
inc
cmp
imul
int
xchg
or
cmp
popf
xchg
or
icebp
and
cmp
inc
aaa
and
mov
imul
iret
xchg
cmp
jmp
outsl
dec
sub
inc
jmp
sahf
jle
sub
loopne
hlt
pop
aaa
jp
dec
aam
stos
add
sbb
sbb
adc
sbb
cs
nop
sbb
cmp
add
cmp
pop
xchg
outsl
mov
cmp
add
mov
inc
push
fcoml
mov
xchg
or
lcall
aad
push
and
popf
loopne
cs
arpl
mov
lahf
repz
sub
xchg
cwtl
in
pop
cmpsl
daa
dec
mov
jae
jl
fdiv
push
jmp
jmp
inc
jne
cmp
xchg
adc
arpl
and
lahf
inc
sub
xor
inc
xlat
or
push
mov
fstpl
sub
fisttpll
sbb
jbe
xchg
pop
test
fnstsw
lret
add
in
das
sbb
repz
inc
popf
repnz
imul
out
lret
loope
into
add
pop
daa
shlb
sti
divb
jne
xor
dec
mov
and
test
xor
jp
or
frstor
pop
xor
push
in
lock
aaa
push
mov
push
mov
mov
inc
imul
lds
inc
lds
push
popf
fs
jo
rcll
std
xor
xchg
pop
pushf
das
lds
loope
mov
mov
pop
cmp
outsb
rcrl
and
test
mov
or
xchg
cli
jle
mov
mov
xchg
add
daa
push
ja
mov
cmp
mov
cmp
pop
pop
jb
aaa
movsl
cmpsb
push
mov
es
into
mov
adc
jmp
push
add
not
pop
push
rol
ficompl
push
mov
popa
jo
or
lea
push
sbb
add
in
mov
out
repnz
adc
jne
in
ljmp
lea
xchg
cmp
shrl
pop
shll
arpl
mov
icebp
mov
dec
ljmp
outsb
ss
mov
xchg
sbb
xor
add
mov
iret
inc
jns
insb
notb
cwtl
cli
mov
sub
xchg
pushf
leave
mov
repz
mov
divb
in
subl
cmp
in
mov
orl
outsl
pop
sub
xchg
mov
xchg
or
daa
adc
rcr
add
add
shlb
dec
and
cmc
mov
cltd
cld
mov
shl
std
fadds
sbb
mov
movsb
popa
push
dec
ds
es
sub
arpl
xchg
pop
pop
loope
ret
mov
dec
push
cmp
or
push
outsl
jae
outsl
sbb
adc
ljmp
js
ja
sbb
test
lret
incl
cwtl
lods
xchg
dec
xchg
das
inc
sub
xchg
mov
nop
push
jmp
mov
lock
adc
mov
mov
push
sahf
fsts
push
clc
xor
add
or
adc
out
movsl
inc
mov
fisubl
into
ds
icebp
in
rclb
inc
jmp
pop
lds
fidivs
je
and
mov
sub
sar
mov
js
popa
in
sbb
notb
add
jle
out
dec
fmull
mov
and
mov
mov
push
pop
les
popa
adc
xchg
jmp
aaa
cmp
in
and
inc
pop
loop
cmp
jbe
add
lret
inc
scas
mov
and
mov
sub
pushf
adc
stos
xlat
ja
lret
jnp
fbld
lcall
stc
faddl
adc
loopne
mov
imul
xchg
outsl
imul
mov
or
cmpsl
addb
and
and
aam
mov
arpl
into
incb
mov
or
imul
push
xor
test
jmp
out
xor
imul
iret
cmp
jl
repnz
push
sub
add
adc
or
insb
pop
scas
and
enter
adc
pop
aam
fsubrl
test
aam
xor
dec
adc
mov
adc
scas
push
iret
stos
sub
call
xchg
cmpsl
pop
outsl
mov
mov
dec
loope
pop
ja
adcl
jmp
mov
add
inc
jl
mov
sbb
outsb
ret
loopne
xchg
dec
hlt
gs
sahf
cmc
mov
scas
subb
fcmovb
adc
push
lock
stos
repnz
leave
stos
jmp
out
stc
or
repz
or
divl
cmp
aad
sub
imul
sub
scas
cmp
push
shufps
dec
dec
fadd
stos
sub
gs
cmpsb
sub
jecxz
out
jo
xor
add
inc
adc
add
mov
rcrl
jno
rcr
pop
jg
imul
cwtl
loope
jb
ror
jnp
mov
nop
stos
std
mov
mov
dec
aam
mov
ret
and
mov
insb
movsb
cwtl
aad
add
push
push
imul
ds
adc
and
lret
clc
test
pop
push
lret
icebp
pop
pop
xchg
cmp
gs
dec
dec
cmp
lcall
mov
lcall
pop
push
inc
bound
push
aad
mov
es
jmp
in
mov
push
adc
std
mov
sbb
fprem
sbb
mov
stos
and
lret
add
int
mov
int
fmuls
aas
mov
imul
push
inc
adc
push
mov
or
out
int
and
cld
movsl
in
jb
push
rcr
mov
pop
xchg
ja
and
inc
lret
xor
test
inc
pop
leave
je
out
dec
cmpsl
daa
adc
das
ss
insl
icebp
jle
jno
and
mov
clc
adc
sub
gs
jnp
enter
or
scas
mov
lret
cs
rcll
or
orl
ret
decb
inc
loopne
pop
jmp
andl
or
xchg
push
fwait
jmp
out
push
jno
popf
clc
fs
lods
pop
and
mov
test
aaa
or
adc
rclb
std
and
push
nop
insb
adcl
mov
outsb
dec
fiadds
mov
fs
in
xor
aas
and
cmp
adc
popa
pop
mov
sahf
je
int
mov
movsl
int3
jb
fs
push
add
and
mov
mov
jmp
dec
and
sub
inc
ja
out
movl
mov
and
and
outsb
and
seto
lahf
rorb
cld
sbb
jbe
lds
divb
cmp
je
pop
pop
sub
adc
icebp
cmpsb
les
add
fwait
jns
jno
out
xchg
push
dec
push
sbb
cmp
scas
xor
je
ret
pop
cs
gs
dec
mov
dec
out
gs
ficompl
jo
inc
pushf
jne
inc
inc
stos
cmc
jg
mov
test
sarl
ja
rolb
aaa
out
mov
jno
dec
lods
daa
fbstp
or
pop
pop
pop
ret
cmp
jecxz
mov
faddl
cmp
int
sbb
int
mov
push
mov
ret
xor
rcr
jmp
popf
dec
adcl
or
mov
fnsave
arpl
adc
and
rep
jecxz
xchg
or
mov
fnsave
arpl
adc
and
repz
xorl
adc
arpl
adc
and
rep
jecxz
xchg
or
mov
ja
in
arpl
int3
push
faddl
sbb
or
cmp
sub
pop
dec
insb
arpl
push
cmpsl
and
xchg
mov
cmpsl
int
in
xchg
jg
addr16
cmp
sub
pop
daa
dec
pop
jl
or
mov
ret
int3
xchg
cld
xchg
lods
sbb
or
cmp
sub
pop
outsl
dec
cmp
negl
ret
sti
nop
loopne
hlt
fwait
ss
inc
jl
outsl
xor
out
mov
les
in
fsub
dec
out
push
loop
rolb
mov
jnp
xor
push
into
mov
cmp
and
mov
jae
inc
sub
xor
ss
push
inc
or
push
out
jmp
adc
arpl
sbb
dec
and
lock
and
xchg
pop
sbb
sub
jp
pop
fmuls
add
jae
jp
sub
int3
movsl
sub
mov
repnz
and
xlat
movsb
mov
aaa
arpl
lods
inc
cmpsl
fadd
xchg
repnz
inc
sbb
and
adc
xchg
idiv
in
pushf
pop
mov
leave
push
xor
cmpsl
pushf
sar
xchg
adc
or
cmp
sub
pop
arpl
mov
mov
mov
mov
stos
add
jge
insl
pop
sbb
add
data16
out
cmpsb
test
mov
mov
mov
out
pusha
adc
pop
pop
inc
or
je
iret
stc
cmpsb
mov
stos
inc
mov
mov
daa
pop
push
push
jb
daa
dec
pop
jl
insb
negl
lods
mov
cmpsl
int3
xchg
cld
xchg
ja
addr16
cmp
sub
pop
daa
dec
pop
jl
insb
negl
lods
mov
cmpsl
int3
xchg
cld
xchg
ja
mov
jmp
test
arpl
lock
sbb
mov
xor
outsb
neg
or
push
mov
mov
pop
lock
jmp
or
mov
mov
test
fcoml
pop
sub
insb
mov
mov
insl
push
and
push
test
stos
adc
fdivrl
or
jo
lret
xchg
gs
cmpsb
xor
loope
or
xchg
xor
pop
inc
push
or
mov
or
push
cwtl
xor
push
fsts
inc
pop
xor
fistpll
adc
cmpb
mov
les
cmp
xchg
xor
shlb
push
mov
mov
push
and
cmp
in
movl
mov
insb
leave
inc
fwait
add
push
mov
cwtl
insl
push
xor
nop
je
js
sub
leave
sbb
mov
xor
orw
arpl
xchg
or
les
insl
dec
mov
or
add
inc
inc
adc
jp
call
pop
mov
mov
popa
jmp
out
dec
sahf
push
fdivrs
mov
jge
hlt
push
enter
in
lods
xchg
xlat
jmp
insl
pushf
shr
mov
or
sub
mov
movsl
cmc
push
jge
scas
xor
mov
fists
xchg
mov
lods
popf
jge
jl
enter
push
mov
lock
push
xchg
cmp
into
dec
fwait
mov
mov
sti
pop
pushf
test
mov
fcmovbe
push
push
lcall
mov
xlat
cli
dec
fidivl
mov
call
cmc
dec
cmp
inc
xorl
jecxz
test
cmpsb
arpl
xor
and
idivb
je
daa
mov
stos
in
sub
rclb
jns
jns
movsl
sub
cmp
mov
mov
mov
jns
pop
inc
cmpsb
xor
mov
xor
lock
gs
fcmovbe
inc
negl
sti
dec
lahf
imul
or
adcl
jnp
daa
aam
and
push
adc
insb
xchg
sub
fisttpl
out
cmp
hlt
fstl
movsb
adcl
add
arpl
out
rcrl
je
pushl
adc
es
pop
jns
fistpl
ficompl
leave
orl
adc
sbb
dec
iret
data16
inc
pop
sbb
adc
sbb
arpl
in
mov
xchg
movsl
lret
inc
dec
jp
dec
bound
mov
rcl
outsb
jae
inc
dec
sbbb
cs
enter
inc
inc
ficomps
lock
cmpsb
add
add
js
mov
js
sbb
fcmovb
loopne
aad
scas
icebp
lock
jmp
rclb
mov
inc
cmpsl
dec
clc
sub
dec
leave
cmc
mov
sbb
data16
gs
mov
cmovl
cltd
int
stos
rcr
ljmp
insb
cmp
popa
mov
dec
idiv
arpl
std
push
ja
fadds
adc
sti
cmp
push
push
in
ss
cs
daa
gs
mov
les
adc
add
pop
aam
ficoms
inc
mov
repz
pop
rol
mov
add
pop
xchg
lds
or
lret
xchg
xchg
aaa
loopne
adc
xorb
push
aas
jae
push
mov
sbb
jmp
mov
jp
push
leave
inc
std
adc
nop
pop
adc
adc
cmp
jae
push
std
cmpl
stc
in
test
roll
dec
and
int
ror
lea
scas
fldenv
pop
jp
xchg
lods
mov
adc
leave
sbbb
pop
arpl
pop
lcall
mov
jg
jo
cmp
fdivr
jp
sarb
popf
inc
call
cmpsb
pop
xlat
notl
fistl
loope
mov
or
cld
out
mov
sub
popf
movsl
jno
insb
and
roll
sub
adcl
movsb
movsb
and
push
lock
inc
scas
sbb
mov
sub
negl
adc
mov
or
scas
std
inc
fbstp
adc
cmpsl
repnz
loopne
ds
jae
int3
in
leave
repz
js
xchg
aam
mov
inc
mov
cli
inc
jle
dec
xchg
cmpb
test
loop
jbe
cmp
mov
popa
movsb
addl
out
ss
test
out
push
mov
inc
adc
movsl
or
loop
fdivs
push
mov
shlb
in
popa
shrl
rol
loopne
ret
stos
roll
sarb
imul
add
stos
mov
pop
cmp
mov
int3
nop
jne
and
aaa
adc
andl
movsl
push
lret
add
sbb
test
xorps
jmp
adc
dec
and
hlt
push
push
bound
clc
jg
cmp
jl
inc
dec
paddsw
stc
lods
fucompp
xchg
sub
mov
mov
dec
popf
int3
mov
hlt
sbb
mov
testl
aad
fsubl
icebp
fcmovb
inc
sub
pop
sahf
sbb
adc
cltd
les
fmul
cltd
les
cwtl
call
xchg
ret
mov
dec
testl
cltd
dec
mov
sbb
stos
lcall
jns
out
cmp
dec
push
cmp
in
inc
ljmp
addb
iret
rol
and
pop
jge
aad
sub
lea
inc
insl
add
sbb
inc
popa
mov
mov
and
push
imul
mov
cmp
je
fists
pop
xchg
mov
pop
test
movsb
and
lcall
rcl
lods
aam
sub
gs
inc
stos
inc
add
js
or
fldcw
xor
in
jb
fsubr
cmp
adcb
inc
dec
jmp
in
sub
outsb
add
mov
adc
jb
mov
into
fstl
out
insb
daa
nop
mov
push
ffreep
push
lock
dec
xor
fcomps
in
lahf
xor
inc
test
aam
cmpsl
fsubrp
out
incb
xlat
inc
bound
stos
shlb
test
ret
or
xor
xor
inc
js
lock
xchg
fwait
dec
in
scas
cmpsl
or
xor
and
loop
test
dec
imul
data16
xor
out
dec
repnz
aaa
pusha
push
xor
aaa
enter
xor
aad
inc
mov
add
sbb
jg
dec
mov
inc
xor
pop
pop
fsts
movl
mov
and
insb
enter
fstl
stos
sub
aas
out
pop
push
aam
sarl
or
xor
pop
push
push
mov
divb
and
jl
movsb
jo
inc
pop
sbb
in
scas
test
cmpsb
test
sqrtps
push
pop
pop
inc
sbb
pop
mov
mov
lods
cmp
xor
fiaddl
shl
add
pusha
mov
mov
scas
je
sub
test
or
xlat
sub
filds
mov
mov
xor
sbb
int
mov
in
lahf
cmpsl
pushf
std
aad
xor
filds
ljmp
pusha
daa
mov
xor
and
sahf
inc
adcb
int3
icebp
jge
sub
loopne
sub
movb
push
outsl
jecxz
aas
cltd
or
stc
dec
pop
xlat
mov
shl
and
xchg
test
jecxz
xchg
fmull
enter
dec
stos
mov
cltd
inc
mov
dec
gs
xchg
iret
jno,pt
sub
or
add
inc
mov
adc
pop
add
imul
lcall
jg
rolb
inc
cmp
pusha
iret
daa
insl
mov
sarb
lcall
fs
or
pop
test
bound
js
fcmovu
sbb
mov
add
lock
icebp
in
sub
jecxz
and
int
mov
in
sarb
add
jmp
pop
aas
bound
mov
setb
dec
dec
mov
push
sti
stc
mov
mov
int3
in
ss
and
int3
pushf
lahf
imul
int3
adc
inc
lock
pop
mov
mov
mov
add
sub
mov
loopne
xacquire
imul
and
jle
adc
sub
stos
adc
mov
cmp
and
cltd
and
mov
mov
push
ret
subl
sub
mov
jb
loope
dec
repz
inc
test
inc
call
mov
xchg
in
add
repz
inc
and
outsb
or
xchg
lods
test
mov
sti
mov
dec
adc
lahf
ffree
xchg
out
lods
out
sub
sbb
cmp
rcr
movsb
jo
jno
call
pop
adc
sahf
sti
call
bnd
jp
sarb
add
mov
xchg
pushf
sub
aad
test
mov
int
mov
or
sbb
aad
adc
out
pop
adc
add
cmpsb
and
or
jne
add
mov
out
mov
cld
sahf
in
nop
sbb
insb
push
jecxz
xchg
cltd
in
das
pop
jle
jb
popf
xchg
and
and
ds
les
inc
jecxz
sub
jl
cmp
mov
imul
scas
hlt
ds
cmp
std
shr
sub
cltd
mov
scas
scas
mov
fwait
mov
sbb
pusha
aaa
lahf
ja
xor
add
pusha
ret
sti
aaa
and
adc
xchg
sti
aam
imul
arpl
sub
out
mov
and
in
mov
push
arpl
js
inc
or
call
mov
mov
push
or
dec
imul
inc
sbb
dec
inc
sub
or
fs
nop
add
out
enter
jle
mov
repnz
dec
shll
dec
in
xor
js
roll
mov
lret
rcrb
adcb
dec
pop
adc
sbb
mov
and
pop
dec
lds
in
movsl
xor
movsb
imul
dec
xchg
sub
and
mov
mov
cli
cs
sti
mov
cmp
hlt
out
xchg
addr16
mov
mov
add
dec
push
and
out
lock
and
sbb
insb
shlb
cmp
loopne
dec
inc
cmp
sub
xor
div
mov
lret
ret
jno
mov
xor
fisubs
fsubs
add
mov
pop
into
fcmovb
je
pop
xchg
jo
aas
dec
pop
jns
xchg
jmp
lahf
inc
jge
out
pusha
mov
mov
lds
and
jg
add
fwait
or
sub
or
es
adc
fnstenv
ret
js
cltd
pushf
xchg
cli
mov
mov
xorb
ret
sub
dec
inc
fcoml
ss
addr16
inc
dec
lret
arpl
sarl
fildll
scas
xchg
dec
adc
jle
push
mov
push
mov
pop
outsl
adc
adc
jo
cs
mov
rcll
fimull
imul
fimull
jle
loopw
cmp
rcl
imul
sub
mulb
mov
lock
fisubrl
cmp
nop
arpl
stos
mov
aad
movb
xor
push
lret
fs
and
and
test
lahf
jbe
out
pop
test
or
mov
mov
mov
popf
xchg
addr16
mov
fstl
test
sbb
inc
xor
cmpsl
cmp
xlat
xor
and
test
neg
or
jnp
add
add
fidivrl
les
dec
add
pop
and
out
ds
mov
aas
add
stos
pop
sbb
leave
stc
mov
icebp
repz
push
adc
shll
test
in
xchg
inc
xor
pop
adc
cli
scas
dec
add
xchg
gs
lea
test
adcl
aad
pop
and
les
repz
je
scas
aad
push
daa
inc
lea
lahf
icebp
push
movsl
jb
xchg
in
test
lret
push
clc
xchg
and
icebp
cwtl
lock
lds
cmp
cmp
push
adc
jl
stc
lcall
fcom
adc
jecxz
and
cld
jo
scas
js
call
cmpsb
pop
cmp
mov
xor
frstor
sbbl
popaw
adc
xchg
shll
in
pop
ret
popa
jmp
imul
cltd
bound
push
adc
mov
outsl
fimuls
xchg
loop
lea
pop
jnp
inc
sub
and
mov
repnz
shrb
loopne
es
xor
sub
adc
out
dec
inc
pop
test
gs
jecxz
mov
or
mov
mov
add
rorb
and
sarl
insb
out
loopne
sub
push
add
xor
test
aam
ljmp
cmp
mov
shlb
jbe
adc
mov
and
inc
cli
add
mov
lea
std
lcall
jbe
push
dec
bound
jne
push
cmp
add
dec
insl
add
mov
and
push
add
sbb
mov
jge
aad
gs
clc
cmp
pop
and
mov
xchg
cmpl
ds
test
aaa
imul
into
lds
insl
inc
sbb
int3
sahf
lods
loop
das
push
fs
xor
push
aas
dec
addr16
sub
fidivl
cmpsb
movzbl
lcall
ret
ret
scas
inc
fld
imul
std
dec
inc
jno
jns
xlat
cs
arpl
and
out
out
fcoms
pushl
popa
ja
adc
jp
jmp
mov
out
xorl
lods
aas
js
pusha
loopne
adc
add
dec
jmp
jne
pop
pop
sub
in
movsl
sbb
dec
push
mov
jle
jne
lcall
shlb
jae
xchg
lret
push
pop
add
enter
inc
leave
inc
sahf
cmp
pop
int3
lods
and
push
pop
repnz
rorl
xchg
and
sbb
jmp
sub
pop
sahf
pop
ds
cmp
jle
sub
dec
nop
outsl
dec
aam
call
loopne
adc
arpl
repz
insb
jae
idiv
fstl
repz
push
cmp
dec
pushf
mov
das
pop
or
pandn
xor
and
jne
lahf
and
mov
hlt
jae
inc
lds
mov
adc
jg
iret
or
dec
inc
or
or
jns
std
mov
mov
std
push
xchg
pop
add
repnz
leave
rorl
xchg
out
ret
add
idivb
lret
pop
xor
or
xchg
in
inc
xor
inc
fildl
stc
mov
adc
imul
push
je
cld
or
mov
push
mov
adc
push
mov
jb
lods
cmp
aaa
sub
repnz
mov
cmpsl
out
out
and
jecxz
addr16
adc
mov
or
scas
addr16
clc
sbb
adc
lcall
push
dec
ljmp
lock
inc
pushf
pop
scas
pop
or
push
jg
pop
leave
jno
daa
inc
fldcw
jb
movsl
data16
scas
pop
xor
imul
pushf
and
popf
mov
jecxz
inc
dec
inc
mov
int
xchg
sub
int3
scas
into
popf
fwait
aas
xchg
imul
jle
xor
adc
jl
xchg
push
xlat
stc
ffreep
pop
outsb
fsubrs
iret
scas
push
orl
subb
call
mov
rolb
je
sahf
iret
push
sub
pop
adc
mov
add
sub
test
stos
xor
ja
int
mov
and
or
je
sti
aam
lret
jecxz
adc
mov
das
in
and
push
shl
loopne
and
pop
inc
add
loope
xor
hlt
aad
scas
lcall
pop
cmp
pop
stos
jno
mov
add
dec
test
scas
stc
mov
or
subb
int3
adc
mov
mov
jp
pop
pop
mov
popf
pop
call
mov
sbb
pop
pop
mov
add
xchg
call
pushf
repnz
and
in
mov
push
popa
int
xchg
test
add
sub
push
leave
jmp
aaa
xchg
dec
lahf
add
nop
dec
in
loopew
sub
pop
shll
and
cmpl
loope
fwait
out
add
adcl
xchg
jmp
jecxz
bound
aad
mov
push
pop
pop
sub
outsl
ret
pop
xor
mov
outsb
dec
or
jmp
jmp
xlat
popf
jbe
data16
daa
xor
bound
push
and
setae
push
sub
mov
xor
cmp
fcmovu
lea
lods
mov
and
mov
std
sbb
outsb
test
jnp
mov
adc
xchg
fadd
cmpsl
push
dec
jmp
negb
test
mov
lahf
xchg
push
stos
arpl
test
movaps
inc
out
sub
idivl
ljmp
sbb
int
aad
loop
add
jmp
insb
or
cmp
rcrb
cmp
and
stos
jecxz
int
sbb
std
pop
pop
push
popf
xor
mov
xlat
add
inc
xchg
xor
pop
push
pop
pop
icebp
adc
xchg
cmc
mov
lds
clc
mov
lods
sbb
sub
mov
in
add
fsubl
int
leave
rolb
pop
xchg
dec
mov
stc
cltd
jg
xchg
pop
dec
dec
dec
sub
loop
xchg
adc
insl
negl
inc
sub
jae
push
mov
aas
inc
pusha
loop
dec
adc
and
sub
mov
dec
pushf
aas
add
pop
cmpsl
roll
rclb
adc
pop
fwait
adc
jecxz
pop
mov
xchg
dec
into
mov
cwtl
arpl
hlt
stos
aad
push
ficoml
fimuls
jmp
push
bound
sarb
add
xchg
pop
mov
imul
clc
jno
xor
push
pusha
push
and
pop
jge
push
push
mov
pushf
add
hlt
out
neg
outsb
xchg
enter
xchg
inc
repnz
mov
and
cmpsb
cmc
imul
push
bound
cli
jbe
movsl
pop
mov
sub
inc
ret
rol
test
xor
mov
in
fldcw
sbb
xchg
mov
pop
imul
mov
adc
push
mov
ret
stc
int3
movsl
test
jmp
mov
sbb
sbbl
lret
cwtl
pop
mov
leave
loopne
mov
mov
outsb
call
in
mov
pop
rcll
and
sub
loop
popf
mov
xchg
in
jecxz
pop
fimull
push
cmp
subb
lea
dec
fwait
adcl
push
inc
lcall
arpl
push
cmpsb
or
sbb
scas
sar
scas
bound
pop
popf
mov
xor
dec
inc
cltd
lahf
push
xchg
mov
sub
add
xchg
lcall
push
adc
jb
adc
cwtl
aaa
imul
inc
jg
fcoml
jne
enter
push
in
lods
mov
pusha
inc
dec
mov
mov
std
pop
aaa
cs
popf
mov
arpl
rcll
mov
push
pop
stos
adc
imul
roll
cmpb
add
test
test
lea
imul
sbb
stos
xchg
fsubrs
test
stos
dec
leave
dec
adc
repnz
repnz
nop
pop
pop
outsl
xor
fstp
pop
mov
loopne
ret
adcl
ljmp
inc
push
and
pushf
pop
and
sti
ror
jle
nop
push
pushf
cmp
add
ja
mov
mov
lods
mov
cld
jg
jae
mov
das
mov
push
lock
nop
dec
push
movl
loop
pop
je
xor
add
out
arpl
adcl
lock
add
cmp
ret
ja
loope
lds
mov
bound
mov
rcrb
push
jnp
out
das
jge
fnstsw
add
xchg
aam
add
and
sbb
outsb
dec
pop
push
jo
sub
scas
test
xchg
inc
mov
out
add
stos
mov
rcr
fadd
adc
and
sbb
inc
inc
cmp
cmpsl
daa
jmp
pop
sub
pop
daa
dec
pop
jl
insb
negl
lods
mov
cmpsl
int3
xchg
cld
xchg
ja
addr16
cmp
sub
pop
daa
dec
pop
jl
insb
negl
lods
mov
cmpsl
int3
xchg
cld
xchg
ja
fs
cmp
sub
pop
and
push
insb
repz
out
fidivrs
int3
xchg
cld
mov
outsl
sbb
or
cmp
sub
pop
aaa
dec
pop
jl
lods
negl
fcmovnb
push
das
xor
js
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
ja
data16
sub
push
xlat
das
push
icebp
inc
xor
pop
add
add
pop
add
add
add
add
pop
add
add
roll
xor
add
dec
add
add
add
cmp
jnp
add
add
push
add
add
dec
add
cmp
push
add
add
add
add
add
add
jle
adc
mov
add
add
add
add
add
add
add
pop
add
add
add
arpl
mov
add
add
mov
add
pop
add
add
addb
add
add
add
add
or
cmp
push
add
add
add
add
pop
add
add
leave
add
add
add
imul
add
add
add
sub
add
add
add
add
add
or
jl
cmp
xor
xor
xor
add
aas
add
add
leave
add
sub
jle
xor
ja
adc
jnp
outsl
add
add
add
add
add
push
add
add
add
add
add
add
add
add
sub
lea
push
add
add
add
add
and
pop
add
add
add
add
jne
addl
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
push
add
add
inc
add
sub
inc
add
or
mov
add
add
add
inc
add
arpl
je
jl
pusha
add
add
leave
add
cmp
aad
mov
add
inc
add
add
add
add
add
add
add
add
inc
add
add
pop
add
jecxz
lahf
add
add
add
outsl
add
add
xlat
add
add
add
add
add
add
push
add
add
add
pop
add
or
pop
add
add
add
inc
add
stos
add
jnp
ja
adc
cmp
imul
pop
add
add
add
add
add
push
add
add
add
add
jnp
mov
addl
add
add
js
xchg
add
mov
add
add
add
add
dec
add
add
mov
add
add
add
inc
add
roll
xor
addl
add
add
sbb
push
add
ret
add
dec
add
add
cmp
push
add
add
sub
pop
add
add
sbb
mov
add
add
outsb
add
add
push
add
add
add
and
mov
movl
pop
add
add
pusha
add
pop
add
add
outsb
add
add
add
add
add
add
add
add
add
das
add
add
add
add
insb
add
add
add
add
sub
push
add
add
add
and
stos
inc
shll
jno
fstpt
ja
lret
not
or
jle
or
or
bound
or
jbe
inc
shlb
inc
or
push
in
out
out
iret
ds
adcb
xchg
repnz
push
jle
push
enter
repnz
adc
xor
cmp
push
xchg
into
mov
lcall
and
push
cmc
inc
push
out
insl
pop
jl
mov
push
and
push
xchg
and
sbb
adc
insb
pop
adc
imul
dec
cmpl
dec
and
pop
cmp
xlat
push
not
dec
jnp
ret
mov
ret
int3
push
jo
fnstenv
int
cmp
sbb
loopne
add
fldl
jle
and
xchg
cmp
or
shr
mov
cmpsl
fdivl
push
pop
call
xchg
adc
loopne
mov
push
xchg
and
mov
mov
cmp
sbb
inc
and
adc
fcompl
mov
pop
push
push
adc
pop
inc
inc
jmp
adc
fwait
popa
push
lock
add
push
fidivrs
adc
or
jnp
daa
jp
jmp
add
inc
and
mov
mov
call
mov
pushf
mov
sbb
out
mov
mov
inc
in
shlb
movsb
movsl
add
imul
xchg
or
dec
out
aas
xor
loopne
mov
rcrb
push
sbb
lock
hlt
push
pushl
out
mov
dec
jbe
fistps
mov
sub
lea
fsubl
mov
int
popf
subb
fs
and
jbe
or
es
repz
pop
std
cs
fs
cmpsl
adc
loopne
mov
mov
add
push
jns
adc
sbb
adc
pop
js
js
mov
and
add
outsb
inc
les
jecxz
js
jbe
xchg
in
mov
enter
mull
sbb
imul
icebp
imul
jp
out
adc
imul
dec
inc
loope
dec
pop
sarb
push
push
imul
push
frstor
jb
out
inc
adc
stc
inc
or
jle
push
mov
or
jg
lcall
sub
dec
push
ss
jae
lret
test
xchg
int3
mov
fnstsw
in
ds
or
shl
adc
inc
lea
pop
lea
rcl
aad
mov
stc
inc
adc
stos
testb
xchg
jp
out
mov
test
fimuls
loope
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
