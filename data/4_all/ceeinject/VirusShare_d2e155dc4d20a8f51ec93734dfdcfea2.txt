fsubr
loopne
decl
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
fs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
push
push
push
push
call
push
lea
push
push
call
add
leave
ret
aam
les
ja
addr16
daa
push
loop
je
notl
add
xor
and
aam
les
ja
addr16
pop
test
mov
movsb
push
push
fildl
mull
in
test
and
aam
les
outsl
in
xchg
push
test
mov
movsb
cmp
pop
mov
jl
addr16
dec
enter
aaa
xchg
xchg
add
filds
xchg
or
aaa
in
outsl
adc
mov
push
js
add
aaa
mov
enter
sub
stc
cmpsl
loope
jmp
adc
xor
lret
dec
sub
inc
insb
cmp
pushf
xchg
sub
add
jp
xlat
cs
mov
lea
push
mov
loop
or
mov
xchg
pop
xchg
pop
dec
inc
int3
mov
stc
or
ljmp
mov
shlb
adc
xlat
jb
aas
movsl
dec
inc
sub
pop
cltd
xchg
push
xchg
aam
xor
sub
add
insb
popf
inc
mov
add
lods
mov
and
sub
dec
mov
hlt
outsb
in
xchg
pop
test
mov
movsb
ds
xlat
inc
fbstp
adc
add
xor
and
xchg
push
lods
xor
clc
adc
in
adc
repz
jo
jo
xlat
ds
movsb
add
or
pop
call
adc
xor
out
xchg
and
mov
adc
and
movsb
daa
push
xlat
inc
je
fs
xchg
add
xor
and
aam
les
ja
addr16
pop
test
mov
movsb
daa
push
xlat
inc
je
fs
xchg
add
xor
and
aam
popa
push
dec
lock
sub
cmp
out
ss
data16
cmc
cli
mov
inc
and
sbb
inc
mov
imull
pop
fwait
lcall
mov
cmp
cmc
insl
das
in
sbb
sahf
sub
test
mov
ss
push
mov
call
fadds
bound
jmp
inc
loopne
mov
loop
push
popf
xchg
imul
orb
sbb
shlb
dec
xchg
cmp
bnd
push
rorl
mov
and
jl
test
mov
and
out
jmp
dec
std
cmp
pushl
loopne
lea
out
testl
cmp
mov
inc
movsl
fisttpl
sbb
scas
or
into
sub
fs
mov
mov
xor
fucom
push
xor
imul
jae
out
fucomp
sub
mov
ljmp
test
xchg
cmc
pop
stc
adc
lret
loopne
and
jg
aaa
jecxz
addr16
mov
adc
adc
xchg
mov
inc
sti
add
jp
pushl
imul
pop
fcompl
pop
xchg
adc
mov
inc
jge
dec
loop
xchg
sar
cmp
lcall
lock
inc
jo
scas
lahf
lods
mov
adc
inc
jnp
jns
sbb
stos
rorl
mov
mov
hlt
xchg
cwtl
jl
adc
xor
repnz
aas
fildll
mov
gs
sti
pop
imul
mov
movl
add
cli
push
push
nop
aaa
fistpl
inc
lods
dec
jecxz
in
sbb
push
push
rol
scas
sbb
jl
cmpsl
jae
loop
int
popa
and
cwtl
sub
sysenter
loopne
bound
xchg
or
ja
fdivp
add
lock
adc
lea
rcll
sbb
sub
fdivl
in
inc
adc
cmpsb
xchg
stos
sbb
imul
sub
mov
movsb
addr16
shl
je
mov
std
jecxz
xor
sbbb
cmp
xorl
in
xor
hlt
sub
out
sti
inc
movsb
push
mov
ljmp
inc
scas
fsts
repnz
repnz
sub
repnz
mov
mov
mov
stc
xor
dec
enter
mov
cli
popa
push
inc
fsubl
or
lods
mov
pop
das
mov
pop
add
fdivs
jg
mov
lods
pop
je
dec
fnstenv
gs
cmp
sbb
imul
das
lret
jecxz
push
sbb
push
andl
out
mov
add
stos
fsubrl
lahf
cld
loope
lods
jae
xchg
ror
in
sub
push
out
pop
jns
pop
jbe
and
jmp
sub
xchg
mov
pop
pop
pop
aam
xor
xchg
in
lahf
add
in
popa
cmc
lods
fsubrl
inc
hlt
xor
add
mov
mov
cmp
pop
cmp
inc
das
icebp
push
adc
pushf
sbb
mov
xchg
push
pop
test
and
orb
movsl
ss
clc
adc
stos
les
xor
shrl
xchg
popa
or
jmp
jne
mov
adc
stos
stc
scas
out
pop
jo
dec
mov
mov
addl
fdivl
mov
inc
push
pop
sbb
enter
imul
sahf
push
and
and
push
repnz
jg
push
call
inc
inc
sbb
imul
xchg
mov
sub
xchg
sbb
cli
dec
std
jbe
or
sti
mov
adc
lahf
repnz
mov
cwtl
cmp
addr16
fwait
cltd
and
xchg
push
outsl
mov
push
sahf
mov
and
inc
jecxz
sub
pop
mov
je
push
lods
adc
pushf
xor
scas
jecxz
jge
add
pusha
jns
std
add
mov
stc
in
movsb
jmp
jg
cld
mov
mov
aad
xchg
nop
jne
inc
xchg
jo
in
mov
out
ljmp
push
pop
stos
pop
cmp
addr16
out
pop
out
ds
jg
adc
mov
or
ds
adc
pop
inc
inc
arpl
lds
jmp
or
rorb
daa
sbb
sbb
mov
mov
jnp
test
pop
das
pop
add
cmpsl
mov
imul
add
fnstcw
out
cld
mov
sub
add
mov
mov
fcmovbe
inc
or
sbb
cmp
jns
push
movsl
and
jns
shll
les
iret
ss
imul
test
imul
shll
lea
aaa
lahf
mov
mov
out
push
mov
add
xor
push
fwait
out
lea
mov
shlb
neg
fadd
mov
loop
mov
jmp
enter
dec
dec
mov
cld
daa
sahf
mov
mov
scas
repz
or
or
cpuid
in
mov
jae
adc
test
shl
cwtl
pop
pop
pop
out
scas
cmp
into
in
xchg
notl
cmp
pop
jge
and
and
ror
popa
icebp
adc
ficompl
dec
xchg
mov
nop
rolb
sub
push
in
push
jl
mov
add
fwait
test
jg
or
jl
inc
inc
mov
pop
add
mov
xor
outsl
loopne
cmp
das
xchg
out
jl
or
xchg
mov
lcall
in
dec
mov
xchg
or
xchg
jmp
test
adc
pop
into
adc
cld
cs
mov
push
fsubrl
inc
negl
xchg
out
or
jb
cs
sarb
stc
ficompl
pop
push
sbb
popa
pusha
add
ret
pop
lock
xlat
xor
sub
test
insl
pop
sbb
stc
xchg
out
stos
mov
arpl
negl
mov
test
enter
and
ss
inc
push
and
scas
or
inc
mov
js
das
pop
sub
mov
movsl
jns
dec
lods
or
add
lret
loop
stos
jno
mov
out
mov
xchg
and
xchg
dec
sti
sbb
xchg
jecxz
xchg
imul
cmc
mul
xchg
adc
imul
fucomi
or
push
cld
pusha
push
pop
inc
test
pop
inc
in
mov
push
push
add
mov
inc
add
stos
jnp
pushf
aaa
dec
outsl
movsb
fsubp
cli
call
mov
inc
ja
and
fsubs
xchg
mov
ret
enter
hlt
rep
jge
sbb
andb
jmp
xlat
pop
icebp
imull
pop
mov
jge
or
std
sub
or
pop
popa
mov
mov
jp
cld
mov
push
notl
xchg
cwtl
loop
ret
mov
cwtl
lock
cs
enter
xchg
inc
mov
out
scas
cli
ret
cmp
and
sarl
loopne
stos
pop
cmp
repnz
sti
or
mov
push
mov
scas
sbb
lods
imul
or
xorb
inc
notl
ret
xor
mov
movsb
mov
add
rclb
out
stc
sub
push
arpl
push
icebp
gs
and
add
aaa
cmp
je
test
inc
pop
outsl
lea
stos
in
dec
cmpsl
sub
jno
add
xchg
lock
mov
sti
stc
cmp
add
xor
fsubr
push
pushf
jne
mov
rorb
mov
and
xor
pusha
loope
inc
mov
and
xor
mov
and
mov
roll
movsl
sbb
mov
sbb
mov
jno
xacquire
mov
in
cmp
mov
cmpsb
mov
pop
movsl
iret
lods
ret
push
cmp
sub
popl
ljmp
pop
mov
mov
dec
outsl
mov
insb
dec
lahf
sbb
xchg
das
xchg
mov
inc
ffree
mov
lret
add
mov
mov
cmp
dec
into
dec
adc
mov
mov
ljmp
mov
xor
pop
into
int3
sub
pop
pop
mov
push
cmp
ja
xchg
test
scas
imul
mov
cmp
pop
mov
lret
xchg
dec
les
mov
push
and
push
mov
jecxz
xchg
mov
cmp
cld
rcr
stos
mov
pop
out
cmp
and
out
rclb
pop
fsubl
std
mov
mov
sti
mov
and
fdivs
mov
sub
dec
das
sub
jns
mov
adc
adc
or
stos
push
sahf
pop
sbb
lds
add
mov
add
out
mov
jbe
sbb
mov
ljmp
pop
cmp
and
data16
stos
shll
fsubrs
jo
mov
inc
push
adc
push
jmp
mov
iret
mov
aaa
cmpsb
and
or
bound
dec
mov
aaa
and
xchg
sti
push
cmp
jmp
insb
pop
push
mov
std
call
pop
popf
add
lahf
pop
pop
xor
xchg
out
sub
mov
ja
and
mov
ds
pop
sub
ds
add
das
repz
fwait
test
inc
mov
lret
inc
dec
insl
or
xchg
dec
dec
dec
mov
mov
hlt
fstl
shlb
jne
sbb
in
movsl
movsb
icebp
mov
imul
cld
call
pusha
pinsrw
or
mov
sti
sahf
les
sbb
sbb
pop
arpl
cmp
loopne
repz
iret
fidivl
xlat
inc
or
cmpsl
add
push
push
hlt
xor
and
jae
cmp
mov
fisubrs
pushf
lcall
jo
test
sbb
push
dec
add
pop
jae
leave
add
push
fs
jbe
dec
cmp
daa
out
std
int3
les
jbe
ffree
mov
pusha
push
ljmp
mov
in
xchg
mov
adc
mov
xor
push
push
cmp
push
dec
imul
sub
push
dec
push
push
popa
rcl
push
lods
adc
xor
popf
mov
jo
imul
out
fldt
cld
mov
or
mov
xchg
mov
jno
inc
dec
mov
and
jmp
adc
xchg
insb
cmp
inc
mov
dec
ret
hlt
add
dec
in
jg
call
aad
adc
loope
mov
imul
sub
mov
idivb
fildl
xchg
ja
in
inc
jbe
pushf
mov
addr16
cmp
subl
mov
or
cmp
xchg
fs
mov
int
push
arpl
cmpsl
mov
daa
out
test
icebp
lret
scas
sarb
mov
or
add
imul
jb
mov
out
mov
and
add
xchg
xchg
addr16
and
icebp
aaa
leave
mov
std
xor
push
add
push
dec
dec
movsl
stos
mov
jnp
mov
cli
enter
cmp
cmc
fs
lea
test
sti
cs
jp
mov
scas
inc
inc
pop
add
test
repnz
fs
push
cli
mov
lds
lds
push
dec
xlat
push
adc
pop
xchg
or
xchg
jae
sahf
mov
loope
or
negl
outsl
push
dec
test
mov
mov
cmp
test
mov
mov
jmp
cmp
sub
stos
int
pop
xor
mov
call
cs
fnstenv
insb
dec
inc
popf
fwait
mov
cmp
jg
aam
jmp
scas
mov
pop
ret
pop
sub
mov
pop
sbb
sub
mov
sbb
scas
repz
jp
dec
clc
int3
jg
jg
popf
pop
or
pushf
loop
pop
or
jns
in
in
pop
sti
mov
pop
mov
rclb
inc
movsb
sub
aad
out
daa
rorl
and
lahf
push
inc
pop
cli
inc
fwait
mov
mov
sbb
dec
jo
push
xor
push
add
lods
jmp
dec
es
jae
inc
popf
or
outsl
nop
cmp
adcb
inc
or
out
xchg
cli
adc
and
mov
call
adc
add
push
mov
repz
xchg
out
push
pop
cmp
xchg
out
jb
fsubs
mov
cmpsb
loop
pop
and
cmp
sbb
jo
fisttpl
les
in
adc
pop
mov
mov
push
dec
sbb
sbb
imul
jb
mov
stos
xchg
daa
lea
xchg
test
insb
jb
ret
pop
andb
lock
pop
xchg
aaa
mov
popf
and
xor
jb
je,pn
xlat
in
repnz
shll
xchg
pop
fldl
cltd
mov
inc
aad
adc
scas
push
adc
fsubr
lret
out
xchg
loope
push
adc
sbb
jle
xchg
cmpsb
xor
jl
dec
fdivl
pop
inc
add
repz
addl
pop
hlt
imul
cld
movl
add
loop
pop
fbstp
shll
movsl
dec
or
xor
ljmp
or
inc
sub
adc
orl
cmp
xor
jl
xorl
jmp
and
cmp
dec
test
aaa
lcall
adc
adc
jns
leave
jle
cld
popf
jp
test
jno
out
loop
scas
loope
out
mov
icebp
repz
leave
adc
lods
fildl
sub
inc
mov
lcall
adc
adc
cli
cmp
sahf
jo
xor
add
mov
jle
mov
cltd
aad
outsb
push
fsubs
negl
xchg
mov
pop
xchg
mov
push
xchg
mov
das
dec
icebp
outsb
cmp
sbb
or
xor
inc
das
das
mov
cs
xchg
dec
movsb
sub
nop
into
clc
push
out
int
inc
add
jns
jmp
jle
das
mov
cwtl
sub
or
inc
mov
fcomps
mov
pop
and
aas
imull
sub
inc
or
fistpll
test
addr16
adc
jo
push
and
push
xlat
cs
jg
imul
sub
jne
sbb
loop
inc
rcll
gs
push
jmp
nop
cwtl
push
sub
mov
fsub
negb
push
add
mov
sti
stc
sahf
pushf
loopne
inc
leave
movsl
jne
clc
pop
xor
push
push
rorb
mov
push
out
push
push
xor
cmp
insl
jb
clc
lea
sub
jae
mov
fidivrl
test
movsl
mov
enter
sti
cmp
push
mov
std
out
or
mov
fstpl
cwtl
outsl
jne
loop
and
fisttpll
and
pop
jno
movsb
ficomps
fisubs
and
push
data16
dec
or
or
inc
cwtl
addr16
mov
cmp
xchg
cmpsl
cmpsb
or
fs
rorl
xor
jns
mov
aam
xlat
and
and
roll
push
push
push
sub
scas
cltd
ljmp
movsb
icebp
loopne
lahf
or
xchg
mov
and
das
xchg
sahf
mov
mov
nop
stos
in
in
lea
sub
push
jle
mov
pop
stos
push
loopne
shll
xor
test
imul
xchg
shrl
sti
pop
inc
or
in
aas
sub
inc
and
jae
lret
jmp
xor
mov
inc
dec
and
push
ljmp
cmp
and
scas
dec
les
int
dec
popa
nop
clc
lahf
daa
inc
mov
inc
in
pop
and
in
push
inc
push
ret
aad
mov
out
pop
cmp
daa
dec
shll
cmp
test
sub
mov
leave
adc
or
mov
clc
jmp
in
mov
inc
inc
or
iret
push
ret
negl
das
cmp
sahf
sbb
mov
add
xor
cmp
xor
popa
sub
mov
mov
mov
cmp
ror
adc
jmp
addr16
cmp
push
shl
mov
pop
pop
pop
mov
cwtl
or
ret
lods
dec
xor
aaa
and
mov
mov
pop
rorb
rcll
lods
int
movsb
into
add
lds
sub
lret
jno
mov
movsb
mov
mov
xor
cli
es
mov
push
cli
and
add
ffree
dec
push
dec
adc
leave
sbb
fildll
out
push
in
les
xchg
mov
cmp
sahf
pop
mov
or
and
les
or
xorb
cmp
out
outsl
cwtl
or
imul
and
test
jg
test
mov
xchg
in
int3
pop
mov
xchg
cmp
jmp
in
pusha
test
inc
cmp
movsl
cmc
xchg
in
fldl
add
into
and
loopne
ds
mov
nop
daa
loop
pop
jle
and
rorl
mov
inc
mov
loopne
pop
adc
test
repnz
jo
inc
mov
push
or
mov
push
test
outsl
or
jns
fsubl
mov
notb
ret
imul
repnz
fwait
outsl
mov
push
les
lret
cmp
cmp
outsl
jl
push
hlt
jp
adc
sbb
popf
aam
push
push
lret
jbe
jecxz
jecxz
cld
xor
add
in
jno
pop
scas
mov
int3
sbb
das
pop
dec
pop
negl
cmpsb
arpl
dec
stos
addr16
das
push
mov
nop
and
push
popf
lret
and
push
in
shl
dec
das
xchg
jns
andl
pusha
sbb
mov
and
pushf
aaa
and
mov
cwtl
xchg
sub
addr16
pop
mov
inc
xacquire
movsl
mov
pushf
mov
shrb
aad
ja
nop
popf
adc
jge
cli
cld
clc
fldt
push
or
pop
sahf
xchg
js
inc
flds
pop
out
lock
aad
jmp
inc
pop
stc
sub
adc
dec
lcall
add
scas
out
lods
xor
daa
ja
jle
cmpsb
sbb
loop
aad
in
mov
hlt
jbe,pn
cld
mov
leave
sub
jmp
into
in
dec
push
jge
mov
mov
enter
shl
or
mov
lret
in
popw
xlat
fmull
mov
dec
push
mov
fists
call
bnd
add
std
negb
fcomps
stos
sahf
aas
xor
jmp
mov
sahf
icebp
sbb
push
and
jne
mov
fldl
jecxz
cmc
inc
outsl
adc
or
dec
dec
dec
fwait
pop
mov
popf
inc
test
xchg
add
stos
adc
ss
push
jp
fwait
xor
out
xor
xchg
mov
mov
fiadds
fwait
add
push
insb
adc
cli
add
xor
jns
cmp
sub
aad
test
jl
cmpsl
mov
mov
push
xchg
dec
add
and
or
mov
inc
sbb
negb
test
pop
stos
or
sub
arpl
adc
stos
sbb
sbb
inc
aaa
add
push
inc
test
in
ja
mov
outsb
sarl
data16
add
mov
outsl
jl
inc
std
sbb
mov
pop
cld
mov
js
pop
pop
cmp
jmp
jle
cmp
dec
mov
testl
idivl
negb
in
repz
xchg
inc
pop
push
add
scas
add
push
mov
jle
or
leave
add
xchg
insb
or
in
in
mov
inc
aam
jo
lock
push
addl
shr
jae
lea
iret
fdivrl
inc
inc
add
inc
or
xlat
stos
mov
out
lahf
iret
mov
jbe
mov
in
mov
xor
ficoml
test
cmpsl
mov
jg
jbe
push
mov
data16
xchg
cmpsl
push
cmp
call
in
inc
push
mov
pop
jns
xchg
fiaddl
sbb
or
add
sar
sub
jnp
pop
jg
pusha
mov
jge
movb
in
mov
cmp
cltd
int
sub
clc
ficoml
jnp
cmpsl
into
hlt
lods
into
test
adc
ljmp
jno
inc
aas
cmp
not
loopne
movsb
je
inc
sbb
mov
pop
in
xor
leave
add
sti
push
add
outsb
movsb
psadbw
fcmovnb
jge
push
or
lock
xor
mov
mov
push
cmp
mov
jge
ret
push
ljmp
test
data16
jb
push
subl
inc
cmpsb
jge
sahf
or
mul
loopne
inc
pop
xlat
fldl
jmp
addb
ja
addr16
pop
test
mov
movsb
daa
push
xlat
inc
je
fs
xchg
add
xor
and
aam
les
ja
addr16
pop
test
mov
movsb
daa
push
xlat
inc
je
fs
xchg
add
xor
and
aam
les
ja
addr16
pop
test
mov
movsb
daa
push
xlat
inc
je
fs
xchg
add
xor
and
aam
les
jae
addr16
pop
test
mov
movsb
out
xlat
inc
insl
fdivp
fs
arpl
mov
lret
enter
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
outsb
pop
and
adc
add
imul
popf
je
sub
icebp
and
hlt
arpl
and
add
je
fs
ret
inc
sarl
and
hlt
add
mov
sub
fwait
sbb
insl
cli
jge
dec
fistl
mov
scas
or
jbe
adc
and
push
inc
mov
push
jl
cwtl
sub
mov
mov
orb
or
test
outsl
mov
fwait
or
jge
pop
fldt
mov
dec
out
cmp
push
mov
fadd
idivl
mov
repz
mov
aas
mov
pop
repz
mov
push
in
xor
hlt
orl
mov
jae
int3
xchg
jecxz
in
jno
mov
xchg
leave
sub
push
dec
jl
jae
ret
movsb
cmove
pop
xor
or
pop
inc
cmp
aam
and
pop
orl
mov
outsl
pop
dec
and
imul
add
hlt
push
xor
les
mov
adc
push
ficompl
lods
cmp
in
jnp
fs
fnsave
inc
movb
andb
mov
popf
push
scas
sub
out
ljmp
inc
mov
mov
repz
xchg
add
add
shll
push
xchg
adc
ss
loop
jno
add
or
fs
ret
inc
shll
test
hlt
arpl
jae
inc
les
mov
add
je
fs
ret
inc
shll
test
hlt
arpl
jae
inc
les
mov
insb
sbbb
xchg
jmp
sbb
lcall
pop
dec
sbb
outsb
imul
or
and
push
mov
jg
enter
adc
mov
leave
aaa
inc
popf
cmp
sbb
clc
mov
stos
enter
mov
xchg
fwait
and
mov
push
ret
jne
mov
jge
sbb
repnz
lea
leave
ret
arpl
dec
jne
cmpsl
sarb
lahf
mov
inc
cwtl
sub
xchg
data16
rcrb
fdiv
xchg
daa
test
cmp
aaa
popf
addb
push
pusha
int3
adc
loope
jp
ljmp
lcall
std
je
mov
push
pop
pop
and
nop
pop
jne
loop
je
dec
scas
pop
imul
mov
fwait
lahf
sbb
test
mov
shlb
sub
push
or
scas
and
pop
jnp
and
jne
fadds
loopne
mov
lcall
imul
addr16
ja
out
mov
cmpsl
push
mov
das
test
push
out
sub
jmp
je
dec
adc
rol
xchg
fisubrl
pushf
sub
or
cmc
lahf
mov
add
adc
and
lahf
pop
repnz
and
dec
ret
mov
jnp
mov
and
jecxz
jno
cltd
pop
jp
pop
pop
outsl
fiadds
xchg
lods
xchg
xchg
pop
jmp
shrl
dec
ret
notb
in
push
sahf
popf
lock
jmp
std
lret
subb
or
add
push
sbb
fcoms
out
push
jl
imul
subb
loope
in
pop
jl
cmc
mov
jo
mulb
mov
jp
pop
inc
stc
xchg
rorb
sti
mov
and
je
fistpll
sub
and
dec
sbb
cmp
es
jge
movsb
test
data16
ljmp
adc
push
rcrl
in
ja
jne
mov
mov
dec
rcrb
movsb
outsl
xchg
dec
xlat
sub
mov
xor
pop
lock
add
bound
sbb
outsl
out
push
jle
sub
aad
push
sahf
aad
inc
jno
repz
icebp
mov
xor
cltd
push
jnp
adc
dec
and
fsubr
out
fbld
fst
sbb
outsl
fucomp
dec
insl
jle
mov
pushl
jg
das
xchg
dec
and
sub
adc
cs
ret
cmp
sub
xchg
push
scas
xchg
add
outsl
shl
stos
test
xchg
inc
pop
adc
jecxz
stc
xor
xchg
push
pop
and
add
jns
xor
aam
push
lods
sub
xor
das
push
dec
ret
add
jle
idiv
inc
aas
jae
scas
cmc
daa
xchg
or
rorl
out
xchg
not
dec
jbe
or
out
andl
jno
mov
push
cwtl
pushf
subl
and
nop
mov
fs
cwtl
lods
lock
mov
jo
lahf
andb
jle
mov
test
scas
mov
inc
arpl
push
jno
movsb
lret
scas
and
je
or
add
rclb
test
shl
mov
ss
bound
or
mov
or
jg
jno
fwait
pop
mov
rclb
pop
push
out
rcll
mov
aad
out
sahf
nop
xor
push
adc
std
popl
cmp
mov
out
mov
inc
inc
mov
inc
inc
nop
adc
adc
outsl
in
jge
ss
xchg
ljmp
pusha
or
adc
lea
xor
loopne
push
jno
pop
aas
inc
js
or
mov
and
bound
sub
fldl
repz
out
push
jg
dec
rorb
loopne
mov
or
call
shll
lcall
cmpb
mov
gs
and
or
ret
mov
nop
cmp
sbb
mov
jg
sub
ficoms
mov
call
xchg
adc
mov
popf
xor
mov
in
in
sarl
and
xchg
pushf
dec
xchg
cs
push
pop
aam
cs
addr16
orl
fldl
insb
add
sbb
adc
outsl
mov
jnp
cmp
add
int3
je
roll
ja
mov
rclb
clc
or
lods
cmpsb
cld
mov
imul
mov
sbb
sub
shrb
jno
divb
lods
pushfw
and
test
fidivs
jl
lds
adc
dec
shr
fmull
imul
into
cld
movsb
cmpsb
popf
imul
mov
cmp
fnsave
imul
xchg
pop
mov
adc
or
sbb
cmp
cmp
incb
stc
add
xchg
ja
xor
add
nop
shrb
add
inc
into
jb
in
or
out
jo
mov
decl
jl
pop
dec
mov
sub
cld
and
lcall
cmp
cmp
stc
leave
iret
dec
mov
sub
push
xor
mov
cmpl
xchg
rcll
setle
push
movsl
cwtl
repnz
sbb
outsl
mov
into
lods
xor
cmpl
xchg
scas
call
inc
gs
repz
out
jmp
daa
push
fcmovnu
mov
into
mov
stc
xor
xor
cmp
push
les
in
xchg
push
mov
pop
xor
jno
push
lcall
mov
es
cmp
fld
xor
xchg
lock
leave
fucom
scas
ret
mov
int
out
lahf
loope
bnd
divps
iret
push
data16
out
in
pop
xchg
sub
ret
cwtl
mov
fidivs
arpl
mov
std
jb
test
cmp
lods
pop
inc
add
into
dec
test
and
and
es
cmp
sbb
inc
xor
mov
stc
hlt
mov
mov
xchg
das
stc
mov
jl
insl
adc
loopne
sbb
jmp
lret
cltd
stc
jno
jle
and
adc
mov
sahf
dec
add
jnp,pt
push
mov
orb
outsb
xor
cmp
xchg
into
pusha
imul
test
mov
testb
sub
popf
mov
ja
call
movsb
mov
and
xor
int3
cmpsl
jb
stc
cld
icebp
ja
outsl
or
out
iret
shrl
sub
jl
adcb
xchg
dec
pop
cmpsl
fdiv
fwait
jnp
dec
fdivl
notb
pop
xchg
cmpb
push
mov
andnps
inc
fdivrs
lea
hlt
sbb
adc
cmp
pop
mov
xlat
cmp
push
sar
jnp
rcll
cmc
sbb
mov
or
mov
pop
daa
dec
mul
out
daa
xor
hlt
mov
sub
mov
cmp
cs
aas
mov
test
dec
movb
sub
sbb
lahf
dec
sbb
add
mov
cmp
sbb
es
jb
enter
js
fwait
jne
mov
xchg
pop
sub
xchg
repz
sub
xor
push
scas
bound
cli
push
jnp
js
nop
xchg
push
xor
xlat
xchg
sahf
mov
inc
sbb
call
push
arpl
pusha
mov
cmp
xchg
inc
hlt
sarl
and
js
or
les
jno
dec
lret
jle
mov
sub
push
shll
jle
clc
xor
add
mov
and
dec
rcl
stos
fs
icebp
imul
pop
jle
push
in
mov
pop
daa
cwtl
push
jle
mov
das
cmpsb
jnp
sub
das
mov
jmp
aad
and
aam
mov
sub
xchg
test
dec
push
xchg
cmp
cmp
jb
sbb
inc
dec
out
lcall
xor
iret
xor
cwtl
ffreep
popf
sub
xor
or
pushf
and
test
or
mov
mov
imul
bound
insb
mov
jl
std
mov
fnsave
mov
test
addl
xorl
mov
lret
jae,pn
lcall
aad
aaa
xchg
lods
ja
push
or
sbb
adc
jns
mov
es
sti
repz
lods
les
adc
pop
int
aad
jno
pop
fdivrl
sub
push
les
ficomps
shrl
outsb
xchg
lret
int3
sub
push
dec
xchg
in
adc
imul
mov
mov
imul
adc
jmp
adc
mov
cli
push
mov
insb
xchg
js
je
lock
adc
mov
sbb
je
or
inc
aas
push
out
dec
pop
push
stos
dec
xchg
fiadds
cmc
push
test
roll
push
cld
jmp
fdivl
stos
popf
int3
push
clc
loope
sub
xor
movsl
aad
cmp
push
pop
sti
xchg
jle
test
and
or
xchg
jmp
orl
dec
imul
push
sbb
sub
fisubl
fnsave
dec
sbb
shrb
popf
je
cmp
push
shrl
cmp
push
adc
pop
jp
mov
out
fsub
ret
jae
and
fwait
or
js
or
clc
clc
jmp
test
mov
xchg
pop
inc
push
mov
fimuls
dec
negb
mov
lods
divl
shrl
mov
fildl
ret
jg
mov
mov
shl
fcompl
in
mov
add
in
push
push
mov
lret
dec
mov
mov
xor
fs
test
jp
dec
dec
xchg
mov
les
iret
ret
psrlw
fwait
and
pushf
lret
imul
jne
sub
repz
push
std
shlb
mov
xchg
imul
hlt
out
push
mov
xchg
loope
rcl
jae
cwtl
jmp
cmpsl
and
ja
call
test
fdiv
lea
jb
cli
jg
test
test
out
fidivrl
mov
outsl
outsl
fnstenv
push
lahf
lcall
add
add
mov
xor
sub
xor
iret
mov
push
jmp
fistpl
les
adc
mov
out
or
push
pop
in
cwtl
stc
adc
imul
adc
jmp
into
mov
out
xchg
rcll
xchg
push
ljmp
pop
out
push
inc
cmpsl
mov
push
pusha
lret
fcoms
jns
imul
out
mov
and
inc
cmp
dec
ds
loope
test
sahf
popf
adc
mov
push
xchg
sub
and
fadd
jnp
add
push
pushf
cmp
pop
iret
push
test
xor
jmp
sbb
add
xor
adc
pushf
mov
cs
sub
push
shr
lcall
in
add
xor
andl
add
sti
jae
pop
or
cmp
pop
mov
or
push
or
add
sbb
push
roll
or
push
xchg
fiaddl
and
push
stos
movsl
push
testb
iret
sub
xor
gs
aam
dec
icebp
mov
mov
mov
popa
xchg
fidivl
cld
pop
dec
cmp
ret
pop
xchg
scas
and
bound
xchg
imul
stos
sarl
add
pop
or
cltd
xor
ret
cmp
bound
data16
daa
pop
push
or
and
ficoml
fcompl
mov
push
sbb
dec
sbb
xor
dec
mov
sbb
cmpsl
test
cs
push
in
nop
xchg
cmp
add
out
mov
and
xchg
sti
sub
insl
lock
mov
cltd
aam
inc
jmp
dec
mov
or
ficomps
or
in
data16
push
aaa
inc
add
repz
sub
lret
cwtl
xorl
pusha
push
mov
xor
daa
ja
and
dec
imul
into
or
pop
and
int3
xchg
lock
dec
sub
inc
sub
push
imul
sahf
jnp
and
add
aad
test
pop
cmp
arpl
or
cmc
cmp
ja
mov
roll
jge
dec
mov
jo
push
dec
add
add
xchg
ljmp
mov
movsl
addr16
mov
mov
mov
divl
dec
or
mov
xor
fbld
dec
push
mov
mov
stos
imul
or
sbb
ds
and
dec
ja
out
jle
cmp
and
or
pop
aas
sub
clc
jnp
xlat
inc
ljmp
mov
add
sti
and
push
fmull
mov
in
fldcw
add
sub
lock
jecxz
pop
jle
cmp
sahf
imul
repnz
xchg
aam
iret
in
cmp
jmp
dec
push
xorl
xchg
mov
inc
lea
aad
clc
aam
popf
adc
add
and
stc
into
and
and
in
mov
sti
cmpsl
dec
insb
dec
xchg
cmp
jge
iret
sahf
pop
les
inc
jp
movsb
or
imulb
mov
inc
shll
or
lods
daa
test
jg
fistpll
cmp
adc
sarl
and
or
fcoms
aad
jae
insl
bound
or
jp
test
mov
push
adc
aas
das
scas
inc
push
add
jae
mov
loop
sub
inc
daa
or
cmp
push
mov
sub
aaa
insb
cwtl
jnp
sahf
rolb
cmc
imul
jne
pop
sarl
jge
jl
push
mov
cmp
pop
cs
aad
fisubrs
xchg
fs
out
daa
jno
pop
aad
out
testl
mov
ss
adc
xchg
adc
xchg
js
add
mov
sti
cmc
mov
int
aam
jno
adcb
in
xchg
mov
pop
jg
out
xor
fwait
inc
js
pop
push
std
in
adc
add
repnz
and
mov
aad
pop
adc
loopne
cmp
or
fistpl
push
fstpl
test
mov
les
stos
ret
aas
mov
mov
pop
mov
lgs
rolb
cmp
sti
roll
icebp
and
jmp
pop
cmc
test
adc
jo
and
and
les
mov
sti
mov
sbb
or
xor
jnp
and
ficoml
lods
xchg
dec
out
jmp
mov
push
outsb
push
adc
loope
hlt
ret
in
imul
es
sub
push
daa
in
dec
inc
sbb
sbb
pop
cs
fninit
jo
lret
sub
mov
rorb
fistpl
and
cmpsb
mov
cmpl
fdivs
add
fdivr
scas
test
sub
xchg
mov
or
out
test
cmpsl
mov
dec
push
ficomps
or
dec
gs
or
push
andl
je
jge
add
cmc
lods
pushaw
lcall
lcall
cmc
dec
or
lret
push
mov
test
lock
rcl
scas
mov
cltd
out
sub
pop
sbb
adcl
push
ret
mov
lods
cltd
lea
mov
cmpsb
xor
andl
in
roll
jno
push
sbb
cmp
inc
jmp
xchg
push
leave
add
xchg
out
jnp
mov
shrl
into
adc
gs
lret
xlat
daa
cmpsl
ja
les
adc
ret
jae
mov
jnp
push
adc
dec
outsb
mov
push
pusha
fmull
cmc
add
jbe
outsl
push
test
ret
or
mov
jne
adc
outsb
inc
cmp
icebp
test
mov
sbb
rcrl
out
fstpt
mov
mov
dec
mov
shrb
adc
into
adc
mov
mov
fadd
dec
inc
outsb
test
sub
pushf
push
loope
leave
jns
dec
mov
arpl
cmp
dec
iret
xlat
stos
jecxz
shl
and
cld
adc
push
and
test
in
lea
jns
or
mov
jmp
insl
sti
cmc
pushl
daa
shl
add
xchg
mov
pop
xchg
sub
testl
dec
sbb
jge
inc
pusha
call
cmp
push
daa
into
mov
mov
pop
push
ss
or
xchg
add
sub
stos
jp
dec
add
ds
xor
ds
das
mov
js
mov
dec
mov
mulb
dec
or
fwait
cltd
mov
sar
xchg
jp
int
cmp
mov
mov
cmpsl
dec
add
sbb
xchg
or
inc
out
cmp
push
fadds
lods
das
dec
aas
out
inc
xor
or
cmpsl
pushf
aas
pusha
push
mov
xchg
inc
lcall
xor
cwtl
fnstsw
add
mov
int3
lret
aas
mov
inc
cmpsb
repz
dec
adc
xor
add
sahf
aad
repnz
sbb
pop
or
jno
je
cmp
lock
lock
jl
clc
push
test
mov
idiv
xchg
test
scas
inc
fdivrs
lcall
sub
cmp
xchg
mov
std
mov
xor
jle
in
arpl
mov
sbbl
jno
pop
lods
rorl
imull
movsl
fnstenv
pushf
jle
mov
adc
cld
rcr
add
adcb
lcall
mov
aad
sbb
in
add
mov
nop
push
cmp
fwait
xor
lcall
mov
pop
cltd
sbb
push
sub
test
sbb
xor
xor
adc
sub
push
into
fmull
call
mov
repz
iret
sub
sahf
push
sti
inc
and
mov
aam
jae
add
push
stos
cmpsl
repnz
ret
sbb
fucomip
test
push
cmpl
arpl
clc
inc
fisubrs
imul
js,pt
dec
je
pop
mov
sbb
data16
jmp
sub
mov
cmc
jp
xchg
pop
push
inc
sbb
inc
stos
int3
dec
lret
mov
pushf
test
pop
adc
call
jo
jne
mov
aam
inc
mov
jb
iret
pop
adc
ja
out
cmp
lods
push
mov
xor
pop
pushf
pop
cld
xchg
cwtl
jno
insb
cmp
and
xchg
stc
push
jl
div
and
mov
mov
mov
ret
lret
push
add
pushl
jmp
lods
xor
inc
std
jmp
pop
stos
xchg
movsb
je
mov
jmp
addr16
hlt
pop
imul
lock
xchg
lock
in
cmp
cmp
movsb
jp
mov
and
xor
movsbl
test
xor
fdivl
into
cwtl
fstl
dec
les
jg
sti
push
inc
outsb
xchg
inc
stos
mov
cmp
mov
pop
pop
pop
xchg
sbb
out
push
and
mov
fnsave
leave
adc
jns
icebp
cmp
jnp
arpl
pop
sbb
fimull
incb
mov
mov
cs
mov
mov
call
or
jge
xchg
sub
test
jbe
movsl
pop
insb
ret
mov
fnstsw
roll
pop
ror
pop
xchg
mov
cltd
rcr
and
mov
mov
dec
xchg
jle
bound
mov
xchg
nop
stos
mov
cmpsb
inc
jge
pushf
cmp
mov
xchg
repnz
arpl
ljmp
pop
sub
adc
push
cmp
je
sbb
or
es
jp
loop
jg
sub
in
ret
jo
lcall
pushf
jno
mov
jge
imul
xor
in
mov
pop
outsl
cltd
adc
ror
jb
mov
push
enter
loope
push
orb
cltd
outsb
out
imul
int3
in
ret
mov
insl
mov
or
or
icebp
jg
jp
decb
pop
rorb
xchg
cmpl
jb
push
in
mov
ja
ds
flds
mov
pop
jo
inc
push
in
pop
lret
adc
sahf
add
pop
push
ja
jle
imul
cmp
out
push
imul
jo
int3
and
jmp
stos
or
pushf
jle
fiaddl
mov
push
nop
lar
test
imul
push
xchg
ffreep
rclb
jno
mov
pop
xchg
pop
inc
jno
loopne
pop
arpl
jae
cwtl
bnd
or
je
fs
ret
inc
shll
test
hlt
arpl
jae
inc
les
mov
add
je
fs
ret
inc
shll
test
hlt
arpl
jae
inc
les
mov
add
je
fs
ret
inc
shll
test
hlt
arpl
jae
inc
cmc
push
add
add
je
fs
rorl
pop
cltd
add
sub
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
inc
pop
dec
idivb
sub
cmpsb
sub
push
ret
bound
ja
data16
pop
popf
pop
lea
lods
lods
pop
dec
idivl
xchg
sbb
or
cmp
dec
push
faddl
pop
std
data16
push
stc
push
mov
mov
dec
idivb
xchg
sbb
or
cmp
sub
faddl
pop
cltd
add
push
cmpsb
adc
cmp
das
mov
sbb
aas
xchg
sub
pop
inc
xor
aaa
cmpsl
sbb
lods
push
adcl
loope
or
cmpl
mov
stc
jmp
stc
xlat
ds
std
push
dec
mov
scas
xchg
cmp
fcoml
int
cli
cltd
adc
xor
adc
pop
imul
or
xor
int3
inc
and
imul
leave
sub
sub
popa
jle
mov
mov
cmpsb
sub
and
fldenv
add
inc
iret
outsb
pushf
mov
pop
jl
arpl
dec
xchg
pusha
movsl
test
mov
adc
push
fdivl
mov
dec
idivb
xchg
sbb
or
cmp
sub
faddl
jbe
data16
push
pushf
push
mov
mov
xorb
pop
jecxz
icebp
pop
ret
pop
lods
hlt
aad
scas
add
into
push
leave
mov
test
xorb
repz
loop
mov
fiadds
add
sub
pop
stc
jne
data16
clc
mov
sbb
adc
xchg
cmp
sub
faddl
jbe
data16
push
pushf
push
mov
mov
dec
idivb
xchg
sbb
or
cmp
sub
faddl
jbe
data16
push
pushf
push
mov
mov
ret
fs
mov
in
lea
inc
int3
pop
shl
mov
cmp
call
sub
sbbb
mov
cmpsl
inc
out
mov
movsb
sarb
push
dec
push
sub
sti
xchg
loopne
fcmovnb
push
out
shll
xchg
loopne
lods
push
sub
lea
cmp
test
jne
dec
push
in
jns
dec
fdivs
dec
push
or
loop
sahf
gs
frstor
ja
repnz
or
fildll
gs
or
dec
pop
jno
mov
push
rcr
sahf
lods
daa
sbb
aam
sub
cmpl
sub
ret
lods
dec
out
repnz
mov
test
mov
int
nop
or
or
enter
push
inc
leave
mov
icebp
aam
jmp
movsl
repz
out
xchg
push
xor
push
addr16
gs
jb
pop
dec
jmp
jbe
pop
and
push
jo
add
jl
or
rcl
out
or
rol
stc
loop
add
into
cmpsb
cmc
in
repnz
jae
push
jmp
mov
jnp
jmp
loope
sbb
cmpsb
cld
sub
or
jg
out
out
sbb
inc
lret
cld
notb
cmpsb
in
int
enter
fisttpll
jmp
and
and
scas
push
jae
lods
cmp
test
movsl
xor
sbb
jmp
adc
jbe
out
push
push
mov
inc
cmp
jno
sti
sub
inc
mov
jle
lea
sbbb
or
cli
pop
mov
push
lock
js
clc
sbb
in
dec
add
dec
xor
fwait
add
lods
push
xchg
fcomps
movsl
aam
fucomi
stc
pusha
rcr
dec
mov
mov
sub
lea
push
push
mov
in
adc
imul
and
negl
sbb
add
cmp
clc
sbb
std
xchg
test
xchg
in
sbb
mov
or
dec
pop
nop
mov
cmpsl
pop
inc
xchg
add
push
es
inc
fs
xchg
leave
mov
test
ss
inc
pop
adc
mov
addr16
mul
test
or
mov
pop
movsb
add
inc
or
mov
cmovns
inc
mov
push
mov
cltd
lods
shrl
sbb
lret
mov
lret
sbbb
mov
pop
out
inc
in
movsb
lock
pop
adc
and
fdivs
out
or
rclw
cmp
repz
mov
and
out
or
lret
or
ja
and
faddl
and
fistps
mov
out
mov
push
cmpsb
jae
stos
fwait
dec
xor
pusha
fs
out
cmp
sbb
or
stos
test
sub
adc
addb
fcmove
xchg
stos
push
sub
loopne
dec
inc
jno
mov
mov
repz
adc
imul
pop
cmp
nop
insb
inc
icebp
lret
or
mov
mov
dec
jne
mov
or
mov
mov
ror
mov
in
mov
add
fwait
pop
mov
mov
pop
push
pop
sti
push
pop
cmp
ret
jne
adc
sbb
into
dec
pop
pushf
inc
mov
push
pop
inc
pop
dec
test
arpl
push
imul
movsl
dec
push
xchg
xchg
ffree
sbb
in
icebp
call
ret
push
dec
ds
fs
add
mov
lods
cmpsb
xor
dec
aam
test
pop
popf
loop
scas
sarl
je
and
lahf
sbb
pop
mov
pushf
loop
lock
shlb
or
mov
gs
push
dec
mov
sub
test
lock
out
push
xor
cld
inc
cmpsl
stos
stos
lea
pop
mov
pop
mov
ljmp
test
mov
xor
test
popf
push
out
pop
nop
mov
fdivrp
std
push
ret
cmp
jnp
sub
lret
daa
pushf
lock
aas
mov
xorl
inc
cmp
xchg
sbb
lods
xor
leave
mov
or
jns
xor
adc
pop
sbb
jae
mov
les
add
data16
pop
cmp
icebp
jo
jb
sti
dec
cli
negl
outsl
stc
add
pushf
fldl
sub
cwtl
cs
pusha
sbb
xor
arpl
insl
cld
paddusb
sub
mov
mulb
push
xchg
add
mov
xor
cmpsb
ss
das
mov
flds
lea
stos
clc
dec
mov
pusha
lret
nop
xor
lods
sti
jns
xorb
jmp
lods
repnz
mov
mov
xor
das
sbb
sub
call
cwtl
andb
loope
cmpsl
popf
loopne
mov
outsl
add
ja
inc
gs
inc
loopne
aad
loop
push
add
lcall
subl
xorl
fbstp
scas
xchg
pop
jo
lds
repnz
arpl
pop
vcvtss2sd
mov
call
fprem
add
vmovss
rclb
ds
pushf
mov
and
sarb
int3
out
mov
push
ret
pop
and
push
mov
ss
je
push
call
cmpsb
popa
xor
xlat
pop
or
or
iret
mov
mov
sbb
aas
sti
repz
pop
or
xor
insl
popf
lock
addr16
mov
cmpsl
cmpsl
jbe
scas
lods
dec
dec
gs
dec
and
scas
je
repnz
pop
fstpl
movsl
pop
xor
jecxz
js
lahf
mov
sbbb
xchg
cmp
push
cmp
mov
out
and
clc
out
and
int
std
inc
ficompl
jg
mov
mov
aad
icebp
enter
int3
pop
cmp
mov
xor
addr16
cltd
loopne
inc
mov
cmpsl
clc
fcomi
jl
mov
ret
mov
lea
or
cld
push
out
sub
xchg
call
arpl
lret
jl
jns
fldt
loopne
les
mov
lret
sarl
jl
jle
scas
cli
or
es
sbb
mov
adcb
lods
cmp
outsl
jg
mov
push
adc
mov
push
fwait
insb
jl
mov
movsl
insb
pop
outsb
add
out
push
stos
ficoml
fsubrs
xchg
dec
mov
int
inc
mov
stos
jb
nop
xchg
cs
sub
add
and
enter
inc
out
adc
test
adc
pushf
jnp
add
andb
cmp
pop
dec
subl
mov
lret
outsl
or
nop
stos
mov
iret
inc
movsl
inc
pop
push
jl
push
test
outsb
mov
mov
repnz
sahf
pop
sbb
fwait
repnz
xchg
das
sbb
inc
jg
ret
repnz
out
push
xor
popf
pop
jne
dec
arpl
push
push
mov
cmp
mov
testl
mov
mov
aas
xchg
ja
pusha
push
mov
push
stc
xor
inc
loop
push
repnz
push
aam
sub
xor
shlb
sbb
mov
jp
cltd
mov
mov
cld
fwait
adc
cmp
sub
xor
pop
fmuls
or
or
movsb
ja
inc
arpl
push
or
mov
mov
sub
dec
xchg
mov
fs
outsb
push
lds
out
fistpl
rcrb
aaa
cmp
push
divl
jae
stc
push
cmpsl
xchg
dec
adc
push
dec
xor
or
hlt
scas
lock
icebp
cs
mov
sbb
pop
mov
bound
cmp
push
inc
adc
dec
pop
push
or
jbe
and
push
outsb
xchg
lock
sbb
inc
pop
sbb
sahf
shlb
mov
add
cmp
shl
pop
push
mov
lcall
test
sub
ss
cli
mov
pusha
mov
push
out
test
xor
into
push
mov
insl
adc
leave
dec
mov
ret
xchg
inc
mov
into
push
add
stc
add
pushf
push
jp
cmp
or
movsb
jl
cmpsl
popa
jecxz
arpl
push
negb
xchg
inc
inc
fisttpl
aam
cmp
in
or
cli
pop
and
sbb
push
push
push
movsb
rorl
pop
stc
jo
xor
inc
addb
mov
lods
push
popf
lret
lcall
movsb
mov
outsl
cmp
inc
push
dec
int3
icebp
mov
enter
xchg
outsl
lahf
adc
loope
ja
mov
ljmp
mov
call
xor
adc
mov
sub
scas
adc
repnz
les
add
stos
jns
add
xchg
jecxz
insb
fwait
out
jg
add
pop
mov
arpl
pop
cmp
push
enter
push
inc
xchg
cmc
test
imul
push
cmp
popa
jle
mov
mov
jge
lea
or
mov
stos
push
xor
pop
xchg
adc
imul
xor
jmp
cltd
adc
pop
dec
call
int3
test
pop
adc
sub
pop
push
or
mov
jle
jne
test
adcb
jg
cmp
sub
mov
cmp
dec
cmpsl
and
cmc
pop
rcrl
mov
xor
xor
and
lds
nop
xchg
dec
mov
push
jp
gs
push
in
xchg
sbb
arpl
adcl
dec
dec
push
or
pushf
mov
add
icebp
add
scas
add
js
push
testl
add
imul
popf
out
push
or
jmp
in
and
adc
daa
or
and
dec
inc
push
je
and
out
dec
add
mov
pushl
rcrl
mov
imul
mov
xor
jmp
std
cmp
pushf
outsb
xor
dec
testl
jmp
in
aaa
sbb
dec
ret
rorl
mov
jae
mov
cmp
out
test
test
pop
lret
mov
decb
xchg
inc
inc
add
mov
jecxz
xchg
inc
aaa
les
push
xchg
cmp
bound
or
out
mov
pusha
cmpsb
pop
sub
rcrb
popf
or
xchg
push
int
xchg
mov
in
push
lods
adc
xchg
les
pop
push
jl
scas
or
dec
mov
dec
inc
lret
mov
sub
insl
mull
mov
in
push
stos
loope
ffreep
adc
mov
add
out
pop
cwtl
xchg
push
inc
xchg
test
scas
add
cmp
cltd
mov
lret
lock
cwtl
dec
js
mov
faddl
and
xchg
sahf
xchg
mov
cmpl
pushf
scas
lds
test
filds
mov
das
jae
aaa
inc
jge
and
addl
mov
iret
inc
add
fisttpll
push
or
sub
insl
jno
dec
imul
int3
loope
pop
jle
movsb
in
cmp
jp
aam
mov
scas
inc
cmc
cmp
add
outsl
and
mov
call
and
push
adc
lret
inc
cwtl
mov
dec
adc
daa
std
add
repnz
aaa
pop
mov
mov
inc
testl
fsubl
mov
orl
js
call
cmpsb
lret
ret
jb
pop
test
dec
lock
lock
out
in
and
adc
aaa
xor
fsub
ret
push
dec
jge
insb
xor
cmp
stos
xchg
sar
dec
out
imul
jp
aad
cmp
mov
mov
lcall
lds
pop
movl
push
stc
fistps
sbb
adc
push
mov
int
inc
dec
and
hlt
sub
sbb
lret
sti
cmp
insb
sbb
inc
movl
sbb
jecxz
mov
jmp
in
xorl
cmp
mov
dec
xchg
sub
sub
cmpsl
roll
add
stos
gs
cmpb
into
lret
fisttpll
ret
sbb
insb
incb
mov
push
movsl
mov
xchg
mov
shl
popa
sub
sbb
push
fcmovb
icebp
sbb
scas
pop
mov
jl
and
add
mov
inc
sub
cmp
jl
lock
int3
aaa
rorl
inc
ss
scas
imul
jo
decl
das
cmpsb
out
into
or
pop
out
jecxz
js
and
jne
push
cltd
dec
pop
ffreep
sub
fisttpll
mov
mov
adc
insl
test
mov
hlt
sub
js
sub
inc
push
push
lds
mov
aam
adc
lcall
jmp
lret
fnstcw
test
stos
add
addr16
cmc
pushf
out
mov
xor
pusha
pop
je
dec
cmp
xchg
mov
jne
mov
sbb
iret
loop
jb
lods
bound
nop
and
loop
xchg
in
jmp
push
loopne
inc
test
sub
sub
pop
push
or
mov
enter
push
push
stc
pop
pop
adc
jecxz
or
mov
pop
push
push
cmpsl
add
cmp
iret
inc
sbb
and
movsb
lret
push
xchg
lcall
loopne
insb
cmp
cltd
in
push
push
push
cmp
xchg
mov
mov
jg
cmp
push
int
sub
loop
repz
ds
sbb
std
lret
rolb
sub
pop
stos
push
popl
shrl
dec
mull
sub
fiadds
cmp
mov
add
and
adc
scas
icebp
in
incb
pop
fwait
push
shrl
dec
or
jno
cli
fwait
or
xor
cmp
pop
and
jp
fsubl
ret
das
push
sub
pop
inc
pop
aas
mov
stos
dec
mov
out
cld
xor
roll
sub
iret
call
and
push
xor
add
jo
adc
and
dec
and
and
lods
dec
sbbl
ret
fisttps
gs
and
cltd
jecxz
jl
in
lahf
lock
shrl
cmpsl
cmpsl
push
xor
mov
lock
js
jo
jne
mov
addb
daa
ficompl
out
scas
lock
lret
pop
movsl
das
push
xchg
dec
fisttpll
add
push
jno
mov
call
mov
int
cmp
sarb
push
mov
sbb
in
popa
cvtps2pd
imul
adc
fildl
test
rcl
pop
xchg
jmp
pop
stos
pop
dec
pop
test
inc
icebp
sub
push
and
xchg
icebp
xchg
arpl
int
int3
cwtl
jle
out
mov
stc
fadds
xchg
jp
outsb
arpl
ficoms
mov
sti
pusha
pop
scas
in
sbb
fimuls
pop
cmpsb
push
xlat
adc
jmp
fnstsw
sahf
mov
neg
adc
inc
sub
jmp
popf
xchg
sub
dec
inc
into
mov
cmp
repnz
mov
push
fildll
add
pop
xchg
jmp
outsb
xlat
sti
push
adc
push
lock
xor
out
inc
jmp
stc
xor
adcb
mov
pop
dec
pop
xorl
mov
nop
sahf
sub
pop
in
mov
addr16
daa
dec
lods
cmpsb
les
mov
daa
call
std
mov
mov
xchg
mov
jns
sbbb
push
mov
aad
out
xchg
je
pop
xchg
xchg
lret
aad
icebp
out
movsl
stos
push
add
and
fwait
idivl
mov
outsl
push
imul
mov
adc
push
in
mov
jbe
cmc
push
ds
sub
push
pusha
fucomip
aam
xchg
int3
mov
push
aam
cmpb
mov
cmpb
jno
and
push
jne
mov
xor
adc
shrb
orb
adc
pop
mov
mov
pushf
leave
cs
ds
sub
lahf
push
add
adc
js
mov
das
push
inc
in
lods
and
jmp
fs
dec
lret
cmp
aam
sbb
mov
add
jnp
mov
aam
fnstcw
shll
insl
fwait
sub
push
mov
mov
or
inc
add
sbb
jp
loopne
loop
sbb
adcb
pop
mov
cmpsl
xchg
in
leave
ficomps
adc
sub
cmp
daa
ds
mov
push
add
jmp
test
enter
in
mov
jecxz
repnz
xlat
jnp
xor
mov
pop
je
push
or
aas
and
lods
or
pop
ss
sbb
ja
jnp
mov
rolb
cmp
or
mov
push
jns
loope
jbe
or
ret
ret
das
jbe
xchg
leave
in
clc
sub
mov
cmp
aaa
popf
sub
mov
movsb
mov
out
inc
mov
jb
outsb
cmp
sub
das
inc
out
sub
mov
gs
cmpsb
leave
xchg
sbb
cmp
jmp
add
jg
call
sarb
mov
cmpsb
or
push
add
jmp
mov
outsb
in
ja
push
mull
push
in
cmp
lcall
mov
sub
hlt
lahf
mov
jnp
inc
sbbl
shll
jmp
push
jl
scas
arpl
xchg
mov
lock
iret
cmp
mov
popf
test
sbb
and
pop
cmc
push
iret
in
add
inc
addl
insb
xor
and
fimuls
mov
rcrb
adc
clc
jle
inc
mov
lret
cmpsb
or
sub
popa
dec
test
popa
dec
dec
jl
sub
mov
aaa
jae
ja
lret
jge
rclb
adc
mov
sub
jmp
dec
enter
sbb
pop
add
sbb
stos
mov
test
and
jmp
call
push
inc
stc
cmp
inc
and
mulb
dec
loope
push
mov
push
jle
sub
ds
xchg
jecxz
mov
flds
xor
addr16
push
icebp
stos
or
int
pop
cs
push
in
push
mov
inc
dec
xchg
scas
aas
cmp
roll
les
mov
mov
fs
loope
pushf
lock
bound
mov
dec
test
xchg
sbb
ljmp
cmpsb
or
push
inc
jo
in
jae
fwait
scas
lcall
gs
mov
xchg
rcrl
test
push
xor
std
and
sbb
xor
lods
es
mov
xchg
mov
push
xchg
les
mov
pop
cmpsl
mov
js
and
dec
add
call
int3
push
mov
sahf
xor
mov
aas
and
xlat
in
push
mov
xchg
ljmp
mov
dec
inc
mov
jae
outsb
lret
add
testb
pop
mov
push
mov
sub
pop
bound
aaa
add
fcoml
adc
into
call
out
sub
into
mov
sub
cmp
mov
jns
shll
sub
adc
test
sarl
pop
cmp
je
cmp
insl
mov
dec
enter
adc
rclb
loope
aad
push
mov
and
sbb
cmp
pop
test
add
fcomps
push
add
popf
lret
in
inc
jp
aas
inc
xor
mov
rcr
sub
xchg
and
in
ljmp
lcall
mov
pop
adc
fwait
push
push
in
iret
jne
mov
stos
cltd
fs
pop
and
push
add
jbe
push
adc
pusha
gs
hlt
js
pop
xchg
aas
test
insb
imul
stos
mov
in
push
cli
jmp
mov
mov
inc
scas
mov
dec
jo
fcoms
sub
fisttps
imul
xchg
in
imul
loope
insl
mov
sub
ror
dec
mov
and
add
ret
movsb
pop
dec
jge
sbb
js
jg,pt
push
fdivr
adc
pop
push
aaa
sub
mov
repnz
mov
push
inc
mov
xchg
imull
arpl
xor
nop
mov
lock
addr16
stos
inc
dec
inc
test
pushf
cltd
push
inc
popa
push
imul
dec
lds
xor
in
lods
jmp
movsb
cli
cmp
and
xor
pop
gs
push
rcrl
hlt
pop
xor
repnz
imul
rorb
out
xchg
and
xor
inc
repnz
fimuls
flds
loop
mov
imul
bound
icebp
mov
les
sub
loopne
rcrl
pop
xor
nop
out
adc
pop
jl
insb
xchg
sbb
or
cmp
sub
faddl
jbe
data16
push
pushf
push
mov
mov
dec
idivb
xchg
sbb
or
cmp
sub
faddl
jbe
data16
push
pushf
push
mov
mov
dec
idivb
xchg
sbb
or
cmp
sub
faddl
jbe
data16
push
pushf
push
mov
mov
dec
idivl
xchg
sbb
or
cmp
in
push
faddl
fdivr
data16
popa
adc
jae
inc
fsts
movsb
iret
mov
test
xchg
lahf
mov
fwait
lahf
in
aam
and
xor
add
adc
psllw
inc
aas
push
mov
test
xchg
lahf
in
hlt
mov
and
push
push
add
adc
pcmpeqb
push
das
push
movsb
cmp
xchg
and
scas
aam
mov
pusha
or
and
imul
push
mov
sub
jmp
lds
push
test
sbb
loop
pop
mov
sub
jg
push
mov
ud2
xor
and
add
push
cwtl
aas
adc
add
mov
clc
push
imul
cmp
push
outsl
jmp
idivl
cmpsl
aaa
sbb
xchg
pusha
in
hlt
inc
dec
scas
sub
dec
pop
sti
sti
xchg
inc
loopne
jnp
and
filds
jb
arpl
pop
loope
shll
jg
int3
arpl
sub
pop
je
mov
mov
push
dec
loop
insl
pusha
xchg
data16
mov
xor
push
dec
xor
adc
adc
aas
push
sub
test
xchg
jnp
div
mov
and
xor
add
adc
fs
cmp
mov
xchg
std
lock
hlt
lret
mov
inc
sbb
insl
add
dec
adc
lea
nop
dec
mov
aam
pop
sbb
jnp
pop
pusha
pop
push
and
mov
mov
icebp
int3
in
hlt
mov
and
xor
add
adc
pcmpeqb
inc
das
push
fbld
xchg
lahf
in
hlt
mov
and
xor
add
adc
pcmpeqb
inc
das
push
fbld
rcll
addr16
sarl
mov
roll
xor
loope
addl
aaa
aad
scas
mov
xchg
and
es
push
pop
stos
fstps
test
mov
pop
dec
fisttpl
fisubl
enter
lods
push
xlat
aaa
mov
xor
jno
xchg
xchg
and
imul
or
insl
nop
arpl
cltd
stos
jae
and
sub
adc
cmp
cmp
mov
outsl
push
pop
lahf
push
mov
pop
decl
lock
fstpt
fs
hlt
cmp
lods
mull
push
cmpsl
xor
fdivr
jl
pop
adc
adc
push
arpl
and
leave
lods
bound
sub
inc
lret
aaa
or
inc
xchg
je
pop
out
jle
repnz
and
dec
mov
mov
sub
adc
xchg
jecxz
loop
stos
dec
sahf
rcll
xchg
sbb
adc
test
int
in
sbbb
pop
dec
push
test
fildll
mov
gs
popa
sub
dec
and
imul
sbb
xor
xor
xchg
jmp
sbb
pop
inc
pushf
rcr
jnp
fwait
xchg
dec
ficomps
mov
test
mov
ret
jecxz
dec
cmp
adc
jnp
jne
filds
ficompl
mov
lret
xchg
movsl
push
fwait
or
repnz
fs
push
dec
subb
in
add
push
push
fisttpll
lret
popf
dec
jge
mov
pop
mov
sar
adc
leave
inc
repz
outsl
mov
negl
cmc
int3
in
scas
inc
pop
jne
and
pop
test
mov
sbb
fldenv
test
mov
dec
fcoms
and
xchg
ds
push
mov
imul
repz
out
jnp
lcall
iret
dec
loopne
or
rorb
ret
inc
test
jbe
addr16
mov
loope
xchg
push
scas
or
mov
or
jmp
jmp
std
rcrb
adc
pop
es
adc
sub
cmp
xchg
cwtl
inc
shll
inc
cld
call
stc
mull
mov
xchg
xor
loope
mov
sbb
lret
ja
or
fdivs
add
loope
fs
popa
mov
mov
pushf
loop
dec
dec
cmp
outsl
adc
dec
or
subb
sub
pop
insb
aam
mov
and
inc
push
ficoml
push
outsl
xchg
add
or
into
cltd
inc
pop
mov
and
movsl
add
fisttpl
hlt
adc
lret
mov
cmp
mov
cmpsb
pop
jne
add
mov
pop
cmp
sub
mov
dec
pop
sub
les
jbe
cmc
pop
push
or
movsl
add
push
je
pop
dec
test
push
push
push
add
sahf
imul
lock
sbb
pop
xchg
adc
xchg
lret
outsl
aas
push
sbb
dec
clc
clc
enter
push
adc
data16
incl
mov
es
popf
fnstsw
stos
out
push
pop
test
or
push
pop
aad
stos
sub
xor
dec
inc
sahf
xchg
test
cmc
cltd
cs
jo
mov
or
inc
pop
js
int
jae
push
fistpl
aad
jnp
daa
inc
xor
ja
fimuls
in
mov
insb
in
mov
pop
mul
mov
lcall
lret
xor
je
dec
dec
lret
clc
sahf
lret
aam
add
scas
js
mov
mov
jle
jmp
add
jb
movsl
push
and
mov
mov
das
aas
push
pop
add
mov
xchg
dec
ds
dec
and
dec
out
rcrl
cmpsl
xlat
dec
sarl
fdivl
mov
and
cmp
pop
inc
roll
mov
push
aas
rcrb
stos
repz
jne
loop
testb
in
add
mov
lahf
out
sub
cs
scas
add
sub
push
cmp
rorl
bound
or
jl
mov
ret
jge
sub
cmp
dec
lock
test
cld
and
push
add
lret
sbb
out
call
add
out
pop
fldcw
cmp
xor
add
cmp
repz
sbb
adc
jno
push
jo
inc
mov
pop
adc
cld
push
xchg
aad
ljmp
lods
lret
sub
sbb
mov
cwtl
insb
sbb
cmpsl
sahf
lret
aas
into
aaa
leave
repnz
sbb
cmp
out
cmpb
insl
inc
xchg
icebp
mov
sbb
dec
icebp
dec
mov
push
roll
enter
out
xchg
push
mov
mov
sbb
and
enter
xchg
rorl
mov
icebp
mov
and
ret
sbb
outsl
inc
push
les
adc
mov
std
push
fbld
mov
pusha
cmp
movsb
jbe
or
stos
mov
pop
inc
cmp
cltd
ficomps
popf
cld
xor
sub
cmpsb
lahf
xchg
adc
iret
sub
aad
xchg
aas
ljmp
cwtl
out
movsb
imul
mov
or
sub
icebp
lods
test
imul
jmp
xchg
fucom
loop
mull
adcb
xor
mov
loopne
jo
outsb
mov
in
les
xor
xor
or
pop
sahf
or
xor
xchg
iret
xlat
lcall
je
sub
pop
xchg
mov
mov
inc
dec
mov
mov
adc
mov
xor
push
sub
int3
imulb
lds
mov
fistpl
daa
mul
lock
pop
mov
inc
js
loop
push
sbb
xor
xchg
loope
imulb
fidivs
dec
and
in
dec
orb
sbbl
sub
and
xor
mov
mov
jg
sbb
jl
mov
add
pop
lret
pop
and
add
cli
push
jle
das
leave
lods
push
dec
mul
sbb
hlt
xchg
loop
aaa
pop
insb
fimull
int3
sbbb
pushf
stc
adc
arpl
xchg
jg
es
fmuls
xor
sbb
pop
lcall
mov
or
fisttpll
adc
dec
mov
mov
movd
out
lcall
jg
inc
sub
bound
stos
cs
imul
cmp
xchg
jb
inc
adc
jecxz
push
mov
fidivl
or
pop
mov
testl
test
mov
sbb
xchg
sub
add
arpl
icebp
lods
add
xchg
dec
andl
int
or
bound
adc
pusha
push
mov
sti
mov
mov
mov
outsl
call
jno
sarb
sub
add
aam
or
push
mov
inc
push
mov
adcb
sbb
jg
cmp
movsb
xchg
cwtl
addr16
jno
cmp
int
out
hlt
cmpsl
ret
unpcklps
inc
cmpsb
decl
and
push
inc
aad
fbld
sbb
xor
or
mov
cltd
scas
loop
mov
push
mov
mov
cld
jg
push
mov
jae
pop
cmp
sbb
pop
cwtl
cli
lea
or
xor
shrb
scas
std
sub
aam
dec
cld
out
sti
stos
mov
cmp
movsb
xchg
xchg
test
jg
test
je
lcall
add
inc
in
pusha
int
push
push
and
insb
pop
cmp
sbb
add
aaa
jb
aad
js
mov
test
xor
dec
push
outsl
loopne
bound
or
testb
lods
jg
fs
subl
jecxz
fwait
add
add
adc
sti
repz
int
mov
jmp
pop
pop
loopne
lods
xchg
cmp
cwtl
outsb
cmp
ljmp
or
movsl
cmp
xchg
push
dec
push
mov
ss
jbe
repz
or
or
shrb
lds
fisubl
xchg
or
test
lahf
fbld
jb
movsl
mov
push
xor
jns
mov
imul
and
sbb
xor
test
mov
cmp
scas
xor
mov
sbb
mov
das
cld
cwtl
cmp
mov
aas
mov
inc
cmp
out
scas
xchg
idiv
fmulp
mov
pop
cmovae
out
fs
ret
insb
cs
cwtl
pop
push
ret
xchg
sbb
sbb
mov
mov
push
xor
stos
adc
xchg
lods
lcall
aam
xchg
arpl
mov
outsl
test
ficoms
js
fs
adc
add
rcll
out
pop
add
lahf
movsb
cmpsl
sbb
mov
mov
and
jle
lods
push
sub
call
inc
inc
mov
jle
in
pop
mov
xchg
cmp
outsb
aas
jge
loope
lret
inc
pop
popa
addl
shll
xchg
mov
push
ret
iret
xchg
push
pushf
xchg
jo
sub
jne
stc
pop
pop
sbb
loopne
or
test
or
mov
mov
sbb
movsb
jg
fiaddl
pushf
jnp
ja
mov
mov
mov
out
inc
lods
fisubs
cli
pop
leave
cmp
pop
rorl
push
mov
xor
nop
jbe
adc
mov
shlb
fldl
add
pop
inc
ret
push
push
mov
mov
mov
arpl
fldcw
fmul
lret
popa
adc
jne
inc
jecxz
loope
cltd
sbb
pushf
jno
enter
in
mov
cmp
pop
sub
gs
iret
push
insb
fiaddl
cmp
jns
lds
lahf
pop
lock
xchg
mov
push
inc
push
xor
fildll
testl
mov
mov
je
addl
fdivrl
neg
les
pop
icebp
inc
rorl
sbb
imul
int3
in
mov
mov
sub
jg
push
push
lods
mov
dec
adc
adc
fimull
aas
fnstcw
pop
xchg
ljmp
inc
pusha
repnz
inc
popf
outsl
fcomp
add
adc
movsl
ret
test
sub
xor
cmp
push
adc
fisubs
and
add
test
ljmp
scas
pushf
add
imul
negl
ret
pop
dec
cmp
mov
sub
xchg
aas
mov
push
mov
mov
push
inc
pop
pop
stc
mov
in
loope
add
fsubr
sub
out
andb
les
ds
ds
cmp
out
sahf
pop
pop
adc
cmp
hlt
scas
jge
loopne
inc
outsl
pop
dec
stc
out
cmpsb
mov
dec
pusha
adc
mov
sbb
in
jl
sub
mov
cmp
jns
repz
or
movsb
xchg
mov
xor
orl
mov
xor
call
mov
push
movsb
aas
movsb
xchg
and
push
iret
adc
pop
scas
leave
in
sti
lcall
lods
mov
jge
pop
xor
out
adc
add
lods
aam
inc
mov
inc
and
mov
xchg
pop
jg
ficoms
inc
add
add
sub
jo
and
mov
les
mov
xchg
mov
out
out
cmp
loope
xorb
sub
mov
adc
jae
decb
sbb
stc
sbb
jmp
fwait
inc
mov
das
add
mov
enter
roll
dec
jecxz
pop
in
imul
sbb
imul
outsl
add
repnz
adc
es
mov
daa
pop
mov
fmul
and
movsl
nop
movsl
xor
push
add
test
and
mov
mov
test
or
fyl2xp1
cmp
ljmp
jnp
ss
xchg
cs
outsb
adc
pop
scas
add
cld
out
mov
or
adc
gs
shll
sub
mov
or
sbb
and
mov
test
pop
dec
cld
dec
lods
xchg
xchg
xchg
das
inc
mov
pop
stc
popa
jno
add
fmul
sbb
imul
lret
xchg
test
aaa
jbe
fwait
sub
imul
stos
cli
mov
xchg
das
enter
testb
adc
mov
lcall
repnz
push
lret
imul
mov
add
push
imul
sub
mov
andl
adc
ds
mov
jp
dec
lret
xchg
mov
sub
test
mov
cld
mov
lods
pop
loope
mov
dec
outsl
mov
roll
jg
cmc
inc
dec
mov
sbb
xchg
cmp
call
gs
test
fs
insl
int3
pop
ljmp
mov
jecxz
dec
pop
xor
cmpb
sbb
scas
dec
mov
jle
pop
mov
repnz
popf
shll
cmp
mov
push
pop
fwait
xor
leave
xor
adcl
pop
in
jns
sbb
xchg
sbb
dec
sbb
iret
sbb
inc
jge
cmp
jl
adc
into
or
les
add
inc
cmp
pop
loop
int
push
jge
test
pushf
xorl
push
sarb
fcoml
dec
xor
cmp
aaa
int
xor
add
out
mov
xchg
xchg
dec
and
xchg
fsts
mov
test
xor
iret
inc
int3
in
pop
iret
lock
cmp
mov
lret
dec
pop
loop
pop
xchg
shlb
jmp
mov
and
sbb
shl
jno
in
lods
mov
add
xor
push
mov
hlt
add
cwtl
push
jns
xor
xor
insl
data16
in
aaa
fisttps
sbb
push
test
push
loop
out
mov
sahf
mov
jg
inc
push
xchg
dec
or
testl
sub
xchg
mov
dec
aad
or
inc
sub
test
cmp
divb
or
lods
scas
movsl
mov
fdivl
jnp
stc
sbb
scas
es
mov
cmp
loope
loop
shlb
lds
dec
and
dec
nop
mov
scas
mov
stos
outsb
pop
jle
in
aam
aas
mov
add
addr16
mov
pop
xchg
dec
pop
push
orb
lret
sub
shlb
dec
pop
and
mov
lods
pushl
out
out
cmp
sbb
jge
jecxz
es
lret
sub
loopne
cs
imul
ficompl
stos
in
jp
xor
mov
push
mov
out
mov
cmpsb
lcall
or
sbb
mov
cmpsb
lods
lock
insb
das
dec
push
cltd
push
cmc
lea
es
jmp
mov
inc
out
and
fiaddl
or
rcr
jge
call
sub
je
arpl
adc
mov
pop
rcr
jo
pop
jo
pop
in
inc
fwait
jb
push
rolb
adc
adc
in
push
mulb
fbld
sub
fcmove
or
jg
add
push
pcmpeqw
or
std
cmpsl
sbb
mov
xlat
ds
sub
sbb
hlt
or
xor
lret
lcall
sbb
iret
incb
mov
inc
jno
pop
js
rclb
xchg
std
pop
mov
sbb
loop
dec
in
inc
shlb
mov
fldcw
or
fidivrl
xlat
adc
adc
cwtl
jo
ljmp
popf
add
jle
sbb
mov
out
and
pop
inc
push
out
outsb
in
add
pop
cmp
mov
jmp
inc
xlat
int3
push
pop
jne
fildl
idivl
iret
pop
pop
jo
inc
orl
lahf
test
sbbb
and
cld
xchg
push
insb
aaa
mov
push
push
daa
adc
sub
pop
xor
cli
dec
mov
in
ljmp
scas
xchg
mov
push
mov
xchg
or
mov
push
push
das
xchg
sbb
xchg
hlt
jle
adc
movsl
lret
movsb
inc
rcrb
mov
ljmp
out
cltd
fistps
push
shlb
pop
and
mov
repnz
add
pop
jmp
xor
jmp
cmpsl
add
or
sbb
adc
jae
jp
iret
jg
icebp
add
dec
movsl
pushf
cltd
xchg
inc
lcall
pusha
pop
flds
clc
push
cmp
pop
int3
aas
roll
test
aam
sti
or
je
addr16
pop
push
divb
mov
pop
cmp
adc
and
lret
test
mov
lcall
push
in
mov
push
notl
insl
xchg
decb
fcmovnu
insl
inc
pop
fldcw
loopne
fbstp
sub
mov
add
mov
inc
pop
mov
dec
push
or
adc
xchg
push
outsb
adc
aaa
sub
xor
mov
mov
popa
fcmovnu
xor
pop
sbb
inc
out
jbe
fwait
rcl
loop
jge
iret
sarl
sbb
cli
cmpsb
repnz
sti
rorl
mov
dec
pop
add
xchg
add
mov
cmp
rorb
mov
lcall
inc
push
xchg
mov
dec
push
lock
jns
adc
mov
jmp
xchg
and
mov
fdivl
adc
inc
sahf
ret
stos
sub
push
and
mov
sbbb
add
jae
arpl
bound
incb
out
int
out
or
jne
rorb
xor
adc
ja
lods
cmp
pop
je
inc
shll
pop
shrb
push
sub
leave
cli
les
repnz
xchg
movsb
mov
sarb
icebp
lock
xchg
lcall
sbb
and
jg
ss
insl
repz
in
or
push
xor
jmp
test
lods
orl
sub
mov
hlt
fldt
xchg
movsl
popf
cltd
dec
jns
shrb
and
pop
pop
cs
into
mov
dec
test
cmpsl
xchg
int
pop
sbb
fcomip
mov
jge
dec
mov
sub
mov
dec
push
cmp
xor
sbb
xor
cmp
mov
xchg
loopne
lds
outsl
jns
test
jno
fwait
jno
cmp
cmpsb
push
xchg
fldenv
pop
fs
cli
mov
cmpsb
das
cmc
xchg
in
rcll
test
dec
mov
dec
testb
xor
push
push
add
push
ror
xlat
pop
dec
lahf
aam
or
xorb
jg
pop
pop
ss
lods
ret
sti
lahf
cmpsl
std
add
notb
adc
jmp
test
mov
mov
push
mov
cmp
mov
bound
xor
mov
shrb
iret
pop
enter
dec
movsb
notl
pop
sbb
push
sbb
dec
repz
jnp
adc
iret
js
and
es
jg
out
lods
push
add
sbb
jl
fnsave
dec
jecxz
mov
arpl
mov
pop
inc
mov
mov
adc
lret
mov
pop
rcll
sar
xchg
jne
xlat
lret
repz
and
adc
in
pop
hlt
inc
xchg
add
push
jb
call
mov
jmp
add
adc
sub
mov
fnsave
sbb
mov
inc
bound
jl
mov
aam
sub
pop
dec
inc
mov
aaa
xchg
mov
xchg
xor
sahf
jae
mov
mov
cmpsl
fbstp
adc
adc
jg
push
rcll
cltd
jge
push
pop
adc
jge
dec
mov
out
mov
cmp
cmp
adc
jecxz
into
mov
sbb
in
adc
repz
loopne
stos
ficomps
xchg
inc
and
jo
xorl
mov
jmp
sbb
clc
mov
and
xchg
ja
push
and
add
pop
icebp
ds
cmpsb
pop
push
cmp
mov
mov
pop
pop
imulb
out
call
inc
fsincos
es
xor
dec
xchg
in
mov
or
addr16
xor
sahf
xorl
dec
outsl
adc
mov
out
adc
idivl
stos
and
gs
loopne
xchg
filds
mull
fimull
push
aas
and
and
or
cmp
dec
aam
out
test
cli
jecxz
in
sbb
in
iret
test
pushf
nop
dec
std
cmc
push
leave
pop
inc
inc
or
mov
and
pop
or
cld
shlb
sub
pop
mov
movsb
push
mov
or
in
es
pop
dec
cltd
sbb
xchg
xchg
sub
inc
insl
pop
jae
mov
in
hlt
mov
and
xor
add
adc
pcmpeqb
inc
das
push
fbld
xchg
lahf
in
hlt
mov
and
xor
add
adc
pcmpeqb
inc
das
push
fbld
xchg
pmulhuw
aam
movsb
dec
xor
add
adc
fs
je
inc
push
lret
movsb
xchg
mov
test
xchg
lahf
in
hlt
mov
and
sahf
aad
outsl
arpl
xchg
or
push
inc
sub
rcrb
xchg
jbe
les
inc
movsb
ss
test
xchg
push
divb
push
and
xor
add
adc
in
hlt
inc
les
inc
movsb
pop
mov
test
push
fs
inc
jle
les
xor
add
adc
in
xlat
add
movsb
popa
dec
std
push
adc
adc
xchg
sub
lahf
pop
sub
into
xchg
roll
sub
aas
stos
insb
push
rcrl
jge
idivl
mov
pop
clc
cld
les
jns
cmp
sub
aaa
mov
rclb
lds
cs
sbb
sahf
into
xor
pop
sti
loope
aam
push
lret
movsl
push
aas
es
xchg
push
fs
testb
lret
into
pop
insl
adc
adc
jns
and
aaa
mov
jl
pop
push
aaa
jecxz
push
roll
jecxz
sahf
lahf
xchg
and
pop
inc
hlt
gs
jnp
xchg
stc
pop
mov
stos
cld
psllw
jp
jbe
push
xor
mov
flds
xchg
andb
push
int3
and
xor
add
adc
in
hlt
mov
movsb
sbb
add
call
imul
jecxz
xor
das
and
push
loope
in
adc
adc
xchg
inc
clc
push
ljmp
aam
push
shrw
ja
insl
add
xor
add
adc
in
hlt
les
inc
movsb
ss
test
xchg
push
divb
push
and
xor
add
adc
in
hlt
les
inc
movsb
ss
test
xchg
push
notb
ljmp
mov
push
mov
push
sti
xor
ss
cmpsl
shrl
adc
adc
dec
and
inc
loop
call
and
mov
jns
test
enter
jg
jnp
and
jl
jmp
inc
ss
inc
push
loop
dec
sti
mov
mov
inc
cmpsb
testl
iret
jb
insl
push
stos
std
pop
out
dec
sti
int3
mov
and
xor
popa
push
sahf
cmp
cmp
fdivs
xchg
test
neg
mov
push
aaa
or
sbbb
and
dec
mov
pop
jbe
mov
mov
xor
iret
and
or
insb
jmp
jbe
dec
pop
cmp
inc
lods
je
adc
rclb
mov
clc
inc
and
jae
push
mov
test
inc
add
ror
test
mov
add
int
mov
divl
xchg
inc
test
or
cld
mov
jno
int3
jbe
adcb
repnz
fs
aad
cmp
bound
popf
mov
sti
xchg
push
push
pop
les
add
push
push
jg
out
push
sub
push
push
js
iret
int3
cmc
add
pushf
iret
add
cmp
and
sub
test
cli
jmp
mov
cmc
dec
repnz
push
mov
and
arpl
sub
xchg
or
mov
inc
sti
mov
jmp
lea
push
arpl
or
xchg
sarb
xor
jns
scas
jecxz
dec
push
fmul
dec
mov
ficomps
inc
popf
cmp
and
test
je
or
cmp
jo
das
les
xor
pop
pop
pop
pop
xchg
das
int
mov
push
mov
mov
jnp
sub
jns
mov
push
in
jle
popf
rorb
jle
pop
jge
nop
icebp
clc
jge
inc
rcrl
mov
xchg
jno
pusha
jp
dec
test
pop
enter
push
dec
mov
shll
mov
xorb
add
data16
ret
aad
dec
fadds
cld
bound
out
jne
je
and
dec
lcall
xchg
fisttps
push
outsl
sbb
xchg
mov
mov
xlat
fwait
inc
and
mov
fsubl
push
insb
scas
je
loope
mov
jnp
call
sub
dec
pop
sarb
adc
adc
xchg
pop
mov
repnz
aam
add
icebp
jb
mov
push
jecxz
mov
xchg
inc
add
in
cmp
mov
int3
mov
mov
rcll
mov
sti
stos
sahf
rorl
pushf
clc
inc
sar
sub
cmpb
lods
sbb
inc
divb
xchg
mov
xor
dec
pop
inc
dec
outsb
lret
aaa
mov
fs
pop
add
jo
add
test
sub
test
insl
xchg
daa
outsb
dec
push
sub
fcoms
bound
fisttpll
xchg
and
inc
push
in
imul
xor
mov
add
ffreep
push
xchg
and
add
or
or
lret
jmp
data16
out
pop
add
xchg
cmpsb
push
cs
imull
std
dec
insl
xor
vfrczps
test
xlat
xor
jae
pop
push
in
insb
stos
cmp
movsl
shl
mov
sbb
push
or
jge
adc
notb
xchg
xor
in
push
cwtl
cmp
xchg
xor
dec
jecxz
fmull
jb
xor
imul
mov
insl
dec
mov
xlat
push
cmc
adc
sbb
aas
cmp
and
adc
xchg
in
sub
test
cmpsl
out
pop
stos
gs
test
lret
jb
ja
xor
orb
scas
xor
mov
mov
cli
data16
jg
xchg
cmp
lahf
jae
mov
sub
je
daa
dec
test
jmp
adc
mov
push
sbb
test
jp
push
xlat
fldl
pop
ljmp
or
jnp
mov
pop
rorb
dec
and
cmpsl
xor
xchg
outsb
out
dec
mov
sub
daa
sbb
xor
mov
ja
rcll
rcrb
test
in
and
pusha
int3
or
cmp
xchg
and
shrb
repnz
sub
mov
xor
sahf
mov
sbb
jo
cmpb
ds
add
fnsave
or
repnz
xchg
movsl
sahf
pop
jo
sbb
push
xor
andl
pop
pop
push
daa
stos
je
add
cs
push
or
fidivrl
in
push
pop
movsl
jne
imul
ret
jge
mov
ljmp
dec
dec
repz
sbb
sub
aas
mov
and
lods
addr16
pushf
sbb
push
push
outsb
fcmovb
ljmp
out
int3
and
and
mov
cmpb
popa
push
lea
adc
out
ret
inc
jle
cmp
scas
mov
xchg
rcl
cmp
and
xchg
xor
cmpsl
or
popf
movsl
cli
dec
and
or
out
mov
inc
and
adc
addb
jp
mov
ds
mov
data16
dec
loop
mov
aad
adc
pop
mov
inc
sbb
loope
out
mov
adc
mov
ds
dec
lods
movsb
fdivrs
inc
pop
mov
inc
stos
mov
mov
inc
pop
hlt
xchg
sbb
pop
sahf
push
aam
test
fcmovb
or
push
push
sbb
pop
pop
lcall
loope
fwait
mov
std
out
fidivrl
push
adc
adc
out
ret
xchg
inc
pop
sbb
fcmovne
push
ret
push
aad
das
or
or
mov
ss
or
ficoms
mov
push
rorb
loop
outsl
mov
jb
mov
jbe
pushf
stos
sahf
daa
xchg
add
push
aam
jo
call
inc
push
jae
jns
adc
and
pop
sub
push
std
ds
xchg
inc
dec
ss
xor
sbb
mov
xor
xchg
and
jno
sar
xchg
mov
xorb
cmp
rclb
sbb
inc
jae
push
sub
mov
jno
pushf
xor
lret
out
movsl
rolb
xchg
rolb
pop
inc
xchg
xchg
xor
out
fcos
sti
jmp
pop
jmp
dec
in
adc
pop
sbb
mov
jge
sub
pusha
addb
das
push
and
cwtl
leave
subb
ja
sbb
jae
stc
fisttpll
stos
faddl
jmp
adc
mov
cmc
or
jg
iret
xor
inc
mov
mov
scas
pop
ret
pop
xchg
lods
arpl
or
dec
lea
xor
xor
ja
scas
lret
mov
stc
xorl
scas
lret
add
xchg
pop
xchg
rorl
sub
mov
and
or
mov
dec
test
sbb
push
lds
adc
cmp
sub
shll
sub
sbb
insb
out
jmp
fwait
sbb
and
jl
sub
negl
add
sub
jns
sbb
mov
adc
mov
inc
dec
cmp
movsl
scas
xor
cmp
pop
dec
faddl
repnz
or
gs
in
or
cmpsl
imul
mov
sahf
lods
sbbb
mov
data16
mov
sbb
adc
cli
inc
cmp
into
jle
dec
icebp
fsts
mov
jb
inc
pop
outsl
mov
ret
inc
pop
sub
test
push
jns
int
pop
jae
cmp
xchg
and
and
shlb
ja
and
mov
nop
mov
pop
scas
or
adc
stc
mov
rcll
push
jo
and
aaa
fdivl
jne
fcomip
outsl
cmp
or
fdivrl
popf
mov
ret
pop
dec
xchg
fiadds
sbb
mov
sbb
or
and
mov
mov
lahf
outsl
xor
mov
sub
xchg
lret
imul
cmp
xchg
ja
std
je
pop
mov
cs
add
sub
ds
leave
inc
jg
leave
inc
dec
mov
scas
sahf
jmp
mov
pop
mov
cmpsl
mov
out
push
push
push
pop
push
out
pushf
inc
and
dec
out
in
xor
icebp
xchg
int
mov
loop
push
sbb
adcb
mul
sbb
paddq
xchg
adc
in
sti
mov
inc
loope
sbb
fldl
lods
loopne
push
imul
inc
inc
out
lcall
pusha
xchg
in
cmp
fwait
iret
hlt
inc
clc
or
jb
xor
rcrb
inc
fs
xchg
xchg
orb
xchg
je
sbbb
mov
mov
pop
push
sbb
push
mov
add
inc
dec
cmp
adc
decl
sbb
int
daa
or
jp
mov
adc
inc
js
rolb
xor
inc
sub
jb
dec
mov
add
xchg
cltd
popf
leave
sbb
mov
sahf
test
cs
jg
inc
sbb
cmp
divb
mov
adc
adcb
shrb
movsb
popl
aas
inc
leave
pop
outsb
leave
fs
lret
jg
mov
ja
mov
fidivrl
lock
dec
xor
cmp
in
ret
sub
negb
dec
add
adc
mov
push
mull
xchg
inc
sub
mov
cltd
gs
test
das
aad
cmpsb
int3
sbb
mov
ds
mov
sub
repz
add
xchg
add
lods
add
pop
dec
inc
mov
adc
hlt
movsb
and
nop
jg
test
pop
cmp
gs
xchg
sbb
test
and
mov
inc
sar
imul
push
adc
cmp
cli
out
xchg
add
mov
or
sbb
xor
mov
cld
repz
push
cmpsl
and
ret
adc
jo
pop
jnp
cwtl
mov
test
push
call
jge
xchg
fwait
jnp
lock
orb
test
sub
or
mov
ja
pushl
jae
push
lock
out
iret
inc
scas
out
jp
jnp
lods
fwait
icebp
push
adc
les
adcb
mov
xor
loop
mov
lcall
enter
sub
cmp
nop
notl
shr
in
mov
das
es
sbb
pop
adc
xchg
loopne
jne
push
jmp
icebp
adc
shrb
add
aam
aas
sarl
mov
ds
cmp
dec
iret
popl
mov
inc
sbbb
lret
shlb
inc
sub
mov
sub
gs
jle
repz
mov
pop
adc
or
shlb
jns
mov
pop
addr16
es
push
sub
dec
aad
pusha
sbb
insl
mov
or
addb
aam
test
xor
jp
sbb
rep
imul
fistpl
mov
in
out
adc
pop
pusha
lds
jp
mov
sub
mov
pop
fistl
stc
pop
jge
jnp
mov
das
mov
sti
cmp
adc
shrb
xchg
dec
or
or
fucom
int
jnp
daa
mov
pop
adc
add
inc
ficoml
inc
icebp
dec
mov
dec
stos
xor
cmp
enter
lret
dec
imul
stos
mov
rclb
xchg
add
xor
or
loope
pop
and
mov
sub
xorb
imul
dec
sbb
arpl
sbb
lret
daa
mov
or
sub
jnp
mov
mov
push
bound
popf
jmp
cmpsb
and
xchg
add
cmpsb
pop
adc
rorl
sbbb
cmp
or
outsb
aad
mov
dec
clc
sbb
mov
das
divl
pop
sti
pushf
mov
insl
sub
fcmovb
js
dec
into
mov
mov
inc
and
sbb
cmpsl
dec
mov
dec
popa
push
xchg
mov
leave
or
popf
fistpll
test
mov
clc
popa
cwtl
xor
or
jns
push
sti
std
pusha
ss
fbld
rorl
or
push
add
insb
sbb
movsb
andb
hlt
sbb
or
push
adc
mov
mov
pop
xor
movsl
in
push
pop
repnz
sbb
mov
mov
cmc
jbe
cmp
adc
jl
mov
add
stc
vpshaq
popa
shrb
shl
test
xchg
shl
sti
lret
sbb
call
pop
or
test
lods
xchg
inc
sub
pop
frstor
mov
mov
cmpsl
scas
pop
gs
cmp
dec
ret
cmpl
lcall
mov
int3
pop
push
jne
or
cmc
xor
mov
repnz
sub
arpl
scas
cmp
je
loop
sbb
dec
jmp
sub
out
and
es
xchg
xor
shr
movb
push
enter
mov
mov
push
inc
xchg
in
mov
fisttpl
mov
push
add
test
pop
fiaddl
mov
mov
sub
inc
sbb
sub
pop
lahf
xchg
push
sub
imul
mov
rolb
sbb
lahf
ja
xor
jge
enter
sub
daa
arpl
push
cmpsl
shll
cmc
sahf
pop
call
sahf
dec
xchg
mov
adc
cmp
push
inc
cli
cld
es
adc
xchg
and
add
movsl
lds
dec
dec
inc
xchg
cmc
mov
aad
or
mov
cvtdq2ps
mov
pop
adc
add
cs
ficoms
xor
pop
and
sti
dec
data16
js
mov
pop
rclb
test
push
les
inc
insl
cmp
stos
arpl
push
stc
xor
sbb
mov
lea
negb
sub
mov
mov
jle
sub
push
call
mov
add
mov
mov
jecxz
push
jp
outsb
loopne
add
lods
inc
cmp
leave
xchg
shlb
adc
add
dec
pop
xchg
fcompl
jo
cld
mov
lds
pop
bound
push
jmp
js
mov
jl
es
or
loope
insl
cmpsl
xor
rolb
adc
jl
sub
sbb
mov
mov
int
add
stos
dec
shr
rcrl
daa
test
loopne
mul
or
es
shrl
inc
cmp
jo
popf
lcall
push
pop
add
xchg
jns
mov
add
stos
outsl
mov
xchg
dec
adc
or
inc
lods
ja
sbb
xchg
or
sub
sahf
fcompl
adc
jmp
cwtl
dec
lea
mov
and
shlb
sub
outsb
test
stc
jne
inc
xchg
int
dec
cmp
mov
xchg
jp
jns
pop
cmp
loop
pop
push
or
add
subb
cmp
sahf
cmp
lahf
pop
jbe
cwtl
push
or
iret
imul
cltd
mov
jno
popf
stos
orl
or
iret
push
sarl
sub
leave
pop
adc
push
inc
test
insb
lcall
jg
inc
sub
push
loope
in
lret
cmp
lret
sahf
stos
repnz
je
fs
lods
add
mov
popf
es
mov
and
mov
pop
sub
jl
or
push
mov
jmp
sti
mov
sbb
inc
andb
aad
xchg
or
mov
clc
movsb
or
mov
cmpsl
mov
xchg
ficoms
sub
jle
mov
add
repnz
fisubrl
sbb
xor
and
enter
out
sahf
out
fnstenv
rcll
fmull
lret
icebp
test
fs
shl
pop
addb
mov
or
sub
shlb
scas
sbb
outsb
inc
pushf
pop
xchg
inc
jecxz
dec
xor
xor
pop
sub
lods
andl
jge
iret
mov
mov
fs
dec
add
mov
lds
and
xchg
push
popf
ja
jae
jg
mov
roll
filds
dec
pop
out
jmp
flds
in
inc
cmp
push
and
fadds
fimull
mov
ljmp
in
xchg
sbb
loope
stc
sti
psubusw
cmpsb
lods
cmc
mov
adcl
add
arpl
push
sbb
movsl
dec
arpl
int
rorb
pop
frstor
test
popa
out
enter
adc
cwtl
dec
jb
mov
push
and
adc
push
sub
notb
repz
dec
mov
pop
jbe
adc
popl
push
cmp
mov
es
inc
dec
icebp
lret
insl
mov
scas
iret
sahf
lret
data16
and
rcrl
hlt
xchg
xchg
cmpl
push
mov
sub
sbb
jnp
outsl
inc
lods
jbe
popa
mov
aam
outsl
roll
jns
inc
outsl
lret
repz
daa
fmull
pop
nop
mov
push
jp
cmp
inc
arpl
mov
ficoms
lock
hlt
out
lret
pop
aam
jecxz
imul
lods
pop
lret
lea
jmp
pop
sub
pushf
mov
xor
mov
adc
sub
aam
sahf
scas
outsl
stos
inc
or
push
es
ret
cmp
cmp
leave
repnz
enter
push
push
insl
aad
pop
sub
dec
cmp
push
imul
ja
test
xor
mov
fdivs
xor
push
aad
inc
mov
loopne
lods
aaa
sti
lea
aad
in
jns
pop
pop
addr16
push
jg
enter
loop
jmp
xor
mov
mov
cmp
mov
jo
clc
or
out
add
add
ret
sub
rcrb
pusha
mov
pop
notb
sub
cmp
cmp
mov
and
popa
sub
mov
das
sbb
push
add
push
adc
jnp
cmp
and
sub
adc
pop
or
add
inc
hlt
gs
test
lock
push
outsb
mul
std
setp
into
cmp
aaa
mov
movsb
mov
jae
xchg
inc
lahf
out
int
test
dec
iret
in
and
mov
and
adc
jg
push
cs
inc
popf
add
daa
xor
sub
push
out
sbb
ja
push
inc
sub
lock
lods
xchg
mov
sub
xlat
mov
or
mov
sbb
andb
adc
in
lcall
loopne
adc
rcll
fstpl
fs
fidivl
call
inc
and
sub
jno
orb
jge
mov
addr16
data16
pop
push
idivl
or
insl
cmp
lret
sbb
std
test
mov
je
pop
xlat
lods
adc
repnz
call
cmpsl
jo
mov
scas
or
push
push
int
add
in
xor
pop
dec
pop
out
insb
xor
fstps
mov
push
jle
cwtl
repz
adc
cmp
call
icebp
lret
or
lahf
xlat
dec
mov
ret
sbb
mov
adc
popa
stos
mov
jo
aad
sub
test
jp
jns
cmp
loop
cwtl
loopne
setl
pop
std
test
scas
subb
jae
decl
test
aas
fwait
inc
outsl
lret
test
sub
mov
mov
adc
cmpsl
sub
push
jle
lahf
flds
mov
or
push
mov
and
loope
daa
sub
aaa
jle
push
pusha
mov
icebp
mov
fxch
popf
int3
xchg
cltd
aas
outsl
imul
loop
sbb
data16
stc
repnz
mov
call
das
clc
and
dec
aas
fsincos
xchg
xchg
std
sbb
das
test
cld
lahf
mov
add
sub
aad
sub
insl
pop
xchg
das
sbb
mov
pushl
addb
mov
scas
sbb
xor
dec
xor
sub
dec
test
cld
push
dec
xchg
cmc
test
cmpb
mov
dec
jg
cmpsb
xchg
inc
sub
icebp
int
cltd
pop
push
add
add
mov
sub
jecxz
fdivrs
add
jno
pushf
push
in
in
and
pop
call
push
sbb
jl
mov
pop
loopne
iret
in
cli
sbb
pop
sub
inc
loopne
aam
dec
dec
imul
mov
push
and
xor
add
adc
in
hlt
les
inc
movsb
ss
test
xchg
push
divb
push
and
xor
add
adc
in
hlt
les
inc
movsb
ss
test
xchg
push
divb
scas
push
and
xor
xchg
scas
hlt
les
inc
movsb
ss
test
xchg
push
divb
push
and
xor
test
xchg
xchg
mov
int3
outsb
push
aam
sarl
insb
stc
xchg
scas
xchg
sbb
in
ficoms
pusha
pop
ds
daa
push
push
outsb
inc
jle
dec
pop
xchg
scas
xchg
out
test
cmpsb
push
cs
ds
es
xchg
add
jbe
pop
xchg
scas
xchg
out
test
ficoms
cs
jg
cmp
sub
and
sub
mov
lret
into
dec
sti
std
inc
push
push
ja
leave
dec
mov
sub
outsb
daa
lds
fdivrp
or
sbb
out
jnp
sbb
jmp
add
sbb
jp
outsb
inc
mov
dec
jmp
scas
mov
pop
out
jle
cmp
push
mov
push
out
push
jnp
jle
lret
data16
jmp
lcall
sar
jae
out
fwait
roll
test
inc
push
pop
imul
pop
adc
movsb
mov
jb
icebp
pop
sbb
dec
addr16
jns
jne
sub
ss
out
inc
aas
imulb
testb
push
outsb
lret
sub
pop
scas
xchg
out
test
ficoms
cs
ds
es
push
outsb
inc
jle
dec
data16
xlat
stos
repnz
fisttps
mov
xchg
mov
mov
push
arpl
imul
sub
and
repz
jecxz
shr
lret
addb
jae
push
inc
xor
es
add
jg
sbb
xor
ljmp
lcall
ficoms
cs
ds
es
push
outsb
inc
jle
dec
pop
xchg
scas
xchg
out
test
ficoms
cs
ds
es
push
outsb
inc
jle
dec
pop
xchg
scas
mov
pop
sub
adc
dec
pop
jnp
mov
cld
cmpsb
hlt
insl
dec
jo
add
ret
popa
filds
inc
xor
adc
add
adc
sbb
lahf
aad
sbb
daa
dec
nop
and
lods
xlat
xor
jae
fldcw
in
jp
cmp
cmp
inc
dec
mov
lahf
aam
cmp
dec
jle
fidivs
and
sbb
pusha
icebp
test
dec
in
pop
xor
mov
inc
inc
jno
mov
outsb
sub
in
push
ret
dec
xchg
jb
addb
mov
incl
cmp
inc
xchg
mov
rorb
es
fsincos
test
push
jno
out
imul
adc
jl
jmp
jo
les
sbb
mov
stos
sbb
jns
frstor
dec
pushf
xor
push
adc
test
jp
push
adc
popf
jle
xchg
lcall
cmp
clc
negl
enter
inc
ljmp
bound
arpl
test
fisubl
push
xchg
movb
cmp
pop
rorb
std
ds
loope
and
dec
mov
icebp
xor
leave
mov
imul
inc
shrb
fidivl
stos
add
sti
data16
mov
mov
daa
dec
xchg
sbb
scas
mov
enter
xchg
lock
or
iret
mov
cmp
pop
dec
mov
dec
mov
mov
rolb
cmp
mov
inc
shrb
xor
in
pop
xor
mov
jp
sub
push
repz
std
fildl
loopne
pop
ljmp
fbstp
inc
add
add
imul
mov
stos
les
test
repz
adcl
popa
js
xchg
icebp
mov
sub
hlt
mov
jbe
lret
push
push
and
movsl
out
rcr
mov
hlt
jno
in
arpl
add
cmp
mov
sbb
or
push
aaa
fiaddl
test
or
int3
jns
int
push
in
mov
cwtl
push
add
les
in
jb
insl
aaa
pusha
lods
scas
dec
adc
inc
int
jbe
sbb
adc
cmp
pop
lds
clc
dec
nopl
pop
or
inc
sbb
orl
rep
jae
outsb
xor
push
test
add
pop
cmp
mov
mov
jle
enter
rolb
orl
lds
aad
popa
ss
out
xor
pop
add
out
inc
stos
or
insl
out
inc
inc
inc
or
mov
mov
sbb
mov
bound
sbb
imul
or
pop
jp
xlat
or
mov
rolb
dec
fcmovnbe
in
inc
mov
xchg
sbb
shrb
jbe
lock
pop
pusha
add
das
pushf
fsubp
neg
xchg
pop
dec
push
adc
dec
cmpsb
mov
add
xor
nop
cwtl
lahf
jmp
adc
mov
int
pop
adc
fadds
push
nop
bound
scas
jno
mov
adc
js
in
icebp
and
mov
and
loop
dec
pop
sub
mov
in
das
and
push
inc
daa
enter
adcb
aad
or
mov
ds
xor
jge
add
xor
cmc
add
adc
cmp
rol
add
mov
arpl
mov
xchg
fldl
mov
lcall
jnp
or
pop
cmp
inc
lods
or
and
push
and
jmp
inc
addr16
pusha
pop
pop
imul
test
xchg
dec
outsl
es
aaa
cmp
xchg
cwtl
jne
add
into
mov
sbb
fldcw
fs
sbb
push
cmp
sbb
jno
inc
jo
test
insl
push
lods
inc
insl
inc
jmp
xchg
mov
les
jae
test
inc
or
cmc
push
mov
call
mov
aaa
or
xor
mov
sahf
cmp
push
xchg
mov
fwait
stos
test
fs
mov
ret
fmull
aas
ja
imul
sahf
aad
outsl
imul
outsl
sub
inc
dec
and
shrl
cmp
sbb
or
in
outsl
insb
mov
dec
pop
arpl
cmp
xchg
push
xchg
lea
lds
ret
test
enter
movsb
xchg
sub
into
xlat
je
arpl
insb
ja
nopl
jge
adc
mov
rcll
or
dec
loop
fnstenv
or
out
test
lcall
and
mov
or
addr16
fiaddl
jle
or
pop
mov
fcoms
pop
mull
inc
fdiv
sbb
call
mov
shrl
jns
in
lea
jle
dec
icebp
mov
adc
clc
inc
cmp
and
mov
fwait
insl
add
sub
faddl
repnz
mov
nop
mov
mov
xchg
jb
adc
shrl
xchg
jns
pop
ret
sub
pop
filds
cmp
push
popa
and
push
fimull
dec
cmp
jge
push
and
adc
and
dec
mov
xor
aam
imul
loope
pop
orl
clc
imul
loope
push
sarb
sub
fdivp
pop
cs
jl
push
mov
clc
cs
xchg
lods
sahf
dec
or
mov
test
inc
add
clc
pop
add
pop
add
jmp
cmp
out
xor
pop
push
or
push
out
je
in
sbb
js
mov
dec
inc
test
gs
fdivl
cmpsl
out
lret
sbb
inc
enter
loope
incl
loop
mov
xchg
inc
js
or
into
outsb
mov
mulb
mov
ds
dec
push
jno
mov
jb
xor
arpl
pop
xor
jns
stc
gs
sub
and
hlt
arpl
subb
jmp
pop
ds
and
cmp
pop
fmull
sub
std
jno
mov
or
and
data16
adc
cmc
lahf
test
inc
lahf
out
mov
jg
pop
out
outsb
pop
test
ljmp
add
jmp
sbb
add
insl
dec
xor
gs
pcmpeqd
ja
jnp
in
xchg
dec
jp
add
test
mov
add
jne,pt
jge
add
int3
movb
cmp
stos
lods
scas
and
and
push
jae
punpcklwd
clc
outsb
mov
sub
mov
in
mov
mov
aad
lcall
clc
jno
add
pop
and
inc
cmp
mov
cli
push
dec
cmc
sub
xchg
push
imul
sbbb
data16
dec
sbb
mov
xor
in
subb
mov
sub
xchg
mov
in
sbbb
and
sbb
pop
out
pop
pop
bndldx
cld
jb
sbb
shll
sbb
aas
push
push
fsubrp
pop
add
sbb
dec
or
data16
dec
jg
add
mov
gs
xchg
push
idiv
movsb
dec
rclb
scas
mov
jecxz
sub
cmp
hlt
and
adc
loope
sbb
jb
lock
jbe
frstpm(287
or
std
push
nop
mov
or
aaa
and
cld
and
cmp
out
shll
ss
and
cmp
mov
cmp
loop
xor
or
adc
pop
mov
mov
loope
mov
pop
add
jge
jo
hlt
and
insl
xor
mov
es
dec
and
add
fnsave
xor
mov
pop
cmpsl
sahf
dec
out
addr16
movsb
cmc
decl
out
movsl
xor
jb
nop
sarl
sar
xchg
pop
push
mov
mov
loope,pn
xorl
popa
sub
sub
xchg
int
push
popa
imul
mov
jno
xor
xorl
or
jge
sub
and
call
xchg
xor
push
les
test
jmp
cltd
pop
imul
idivl
add
ds
fsubp
sbb
data16
pop
out
jno
sbb
lds
lahf
and
inc
clc
or
sub
jns
xor
xor
inc
mov
inc
ljmp
sub
adc
adc
xchg
shll
xchg
xor
in
ret
sbb
out
call
in
add
and
or
cmp
cmpsl
scas
dec
inc
pusha
xlat
movsl
inc
nop
repnz
mov
roll
rolb
repnz
jo
add
push
push
daa
and
sbb
sahf
push
popf
mov
shl
sbb
cltd
popf
and
sti
cmp
mov
lock
push
xor
in
call
cmp
imul
add
stos
test
jg
pusha
outsl
imul
jo
test
fsubs
les
mov
enter
sbb
int3
add
push
push
fsubs
stos
and
pop
jns,pn
shrb
fiaddl
int
mov
movl
movsb
in
loopne
inc
aas
adc
clc
fists
adc
mov
lret
and
scas
enter
roll
addl
pop
fisttpll
pop
jp
xor
mov
cltd
jne
pop
insl
sub
fcmovu
cmpsb
insl
rol
cld
sub
jbe
ja
push
add
cwtl
fwait
outsl
jb
hlt
pop
xor
sbb
rolb
in
xor
or
mov
negl
mov
and
enter
xor
inc
cmp
sub
pop
fmul
insl
cmp
imul
xchg
rorl
jbe
lret
mov
sarl
mov
lea
mov
enter
or
imul
pushf
mov
mov
lret
adc
mov
push
dec
or
icebp
test
sti
add
or
dec
fs
jnp
test
mov
rol
aaa
add
mov
dec
cltd
jle
sarl
or
jns
mov
xchg
mov
and
pop
push
popf
dec
imul
push
enter
cmc
xchg
icebp
mov
mov
int3
lods
mov
mov
mov
mov
add
sbb
mov
aam
aam
push
rclb
mov
dec
cmpsl
jge
push
mov
in
jg
mov
lret
push
jo
dec
push
jg
pop
push
fs
xchg
jns
jecxz
je
stos
pop
test
xchg
dec
xor
mov
aaa
addr16
push
jl
stc
in
push
cmpsl
cmpsb
dec
movsb
cmp
xchg
mov
cmp
outsb
adc
das
sub
mov
inc
ret
sub
out
loope
sbb
movsb
lock
jae
mov
add
mov
or
mov
cmp
jp
mov
lds
cmp
clc
int3
flds
fimuls
rcll
dec
lods
and
mov
jecxz
mov
push
testl
inc
sarb
mov
mov
push
in
js
jle
pop
or
mov
outsb
mov
mov
decb
cmp
or
fnstcw
push
dec
add
and
adc
arpl
lcall
imul
mov
nop
stos
movsb
fldcw
and
stos
jb
popf
divl
lahf
iret
xchg
nop
in
rcrl
cmp
fbstp
fcoms
mov
inc
insb
movsl
mov
das
imul
mov
xor
or
outsl
cld
pushf
xor
pop
repnz
outsb
push
push
imull
int3
fdiv
xor
cli
mov
mov
and
push
mov
hlt
pop
mov
outsl
lahf
xor
and
jns
test
iret
dec
testl
mov
loop
xchg
and
out
pop
popa
jle
pop
xchg
cmc
int3
outsl
aam
sbbl
sbbl
movsl
js
test
adc
adcb
push
fisttpl
dec
and
js
push
push
mov
inc
mov
daa
fmuls
fwait
out
lea
and
cmpsb
leave
pop
daa
fwait
mov
fistpl
dec
js
and
pop
cmp
lcall
sub
in
jne
lea
dec
jl
xchg
push
add
imul
hlt
mov
insl
jne
jno
lret
sbb
xchg
or
xchg
push
fidivs
mov
and
xchg
into
pushf
nop
jle
sbb
mov
inc
fs
adc
jg
inc
mov
xchg
insl
xchg
push
and
inc
inc
lcall
mov
mov
inc
std
filds
jmp
xor
sub
mov
xor
fwait
sbb
push
andl
lahf
xorb
lods
mov
pop
push
out
add
cwtl
lahf
sub
xchg
add
mov
ud2
jns
ficoms
and
addl
scas
fcmovne
xorl
mov
cmpsb
fstl
or
addr16
mov
imul
push
mov
xlat
dec
sub
sub
repz
leave
outsl
arpl
lods
aad
dec
jg,pn
push
popf
ss
mov
inc
jb
jnp
out
movsl
push
stc
out
or
movsl
cmp
inc
adc
lea
sbb
mov
mov
xchg
push
cli
inc
ds
push
packssdw
mov
push
inc
inc
add
imul
sti
or
inc
imul
addr16
leave
aas
jno
ss
scas
mov
je
imul
dec
lods
test
push
mov
mov
push
pop
popa
bound
in
fisubs
in
or
out
lea
repz
and
mov
sarl
and
mov
fst
push
inc
lcall
insb
inc
fidivrl
lahf
adc
lret
add
test
daa
insb
mov
xchg
pop
cs
jae
fsubrl
arpl
lret
jno
sub
arpl
gs
loop
jno
mov
jnp
mov
xchg
xchg
cwtl
ret
adc
mov
push
insl
dec
pop
add
int
sbb
cmp
repz
or
pushf
adc
in
ret
aad
dec
inc
jbe
mov
ljmp
lods
xor
inc
pop
popa
lock
data16
mov
stos
rcl
lea
sbbb
mov
pop
add
mov
into
loope
call
enter
push
push
cmp
jle
xchg
adc
xor
xchg
cmc
mov
push
jne
add
in
mov
rorl
and
sub
outsl
sub
out
mov
adcl
jmp
enter
pop
xchg
je
addb
in
inc
lods
fs
mov
iret
lds
or
xchg
insb
mov
jmp
insl
hlt
jbe
jo
xchg
movsl
out
test
and
mov
xchg
cmc
inc
outsb
push
aad
test
pop
xor
imul
bound
mov
mov
testb
pop
dec
jbe
adc
imul
test
clc
pop
or
fwait
aam
repnz
xor
xorb
dec
jae
je
xchg
sbb
lods
push
dec
push
cli
iret
lock
xor
pop
add
xor
stc
inc
xor
aad
and
sub
jno
ret
dec
push
pop
mov
daa
por
out
push
push
insl
fadd
mov
lods
gs
scas
sub
cld
icebp
sbb
push
int
fbstp
cmpsl
scas
push
test
flds
or
loop
ret
orb
sub
lcall
iret
mov
or
fcompl
aad
push
icebp
in
test
mov
cmp
push
addr16
call
inc
les
inc
out
push
movsl
dec
add
dec
ficoml
adc
xor
into
data16
in
cmp
enter
mov
mov
mov
inc
add
xlat
shlb
mov
je
in
mov
and
out
lods
ret
xor
sbb
adcb
cmpsb
adc
in
jmp
xchg
dec
hlt
lcall
jae
pop
std
cmp
mov
adcl
rolb
pop
sub
inc
fs
int
adc
inc
cwtl
xor
mov
mov
lahf
repnz
cmp
lds
xchg
dec
mov
add
push
cmpsl
sub
or
outsl
out
xor
jae
in
into
rorb
sub
jo
scas
outsb
cld
dec
xor
fucomip
and
aam
jnp
aaa
js
divb
loopne
xlat
lcall
dec
jb
cltd
or
rolb
inc
and
sub
sub
push
xorb
dec
mov
bound
mov
cmpsb
int
imul
adc
outsb
cmp
cmpsb
and
or
mov
mov
int3
sub
mov
ret
mov
dec
adc
mov
ret
dec
mov
xor
jbe
rorl
cmc
mov
or
mov
pop
ds
pop
xchg
sub
sti
mov
cmpl
dec
loope
sub
jmp
inc
inc
rolb
sbb
mov
pop
data16
imul
scas
rcrl
or
dec
dec
mov
enter
int
pop
jne
add
add
pop
push
fimuls
xchg
les
ja
cmp
xchg
add
idiv
je
inc
mov
mov
in
sbb
push
sub
lret
mov
enter
pop
or
lret
jns
insl
imul
xchg
shrl
dec
push
mov
pop
pop
int3
out
test
add
aad
sbb
xlat
xor
subl
xchg
jb
adc
sub
xchg
sbb
sub
push
loope
sub
inc
addr16
std
adc
outsb
mov
out
push
ljmp
xor
je
jbe
dec
subb
cltd
fwait
scas
dec
push
sbb
test
xorl
mov
clc
notl
cmpb
jne
cmp
xchg
mov
sbbl
mov
jge
jp
pop
fisubs
shrb
in
xor
stc
in
lods
dec
mov
dec
mov
dec
jnp
jmp
xor
inc
clc
loopne
aam
outsl
rclb
adc
shl
out
cld
popa
scas
imul
adc
lcall
shl
call
inc
or
mov
in
mov
fisttps
fcmovb
out
push
sbb
cmp
jg
test
xlat
adcl
gs
lock
xchg
add
lcall
mov
enter
repz
pusha
shrl
ret
inc
lahf
dec
adc
xlat
hlt
rol
cmpsl
inc
pop
cld
arpl
push
inc
xor
rcl
int
inc
jbe
ja
fiadds
push
mov
sbb
ret
aam
jmp
jg
or
push
insb
mov
jecxz
test
loopne
popa
cltd
push
mov
xchg
das
pop
sbb
int
lock
adc
dec
mov
out
sbb
push
xor
sbb
mov
repnz
xor
int3
jbe
pop
ja
les
idivl
sti
call
xchg
dec
clc
leave
push
popf
mov
xlat
cmpl
add
pop
fbstp
daa
jbe
xorb
arpl
and
adc
adc
in
xchg
add
lds
out
aad
dec
inc
jp
push
arpl
adc
sub
or
negl
xor
das
fsubrl
in
daa
dec
subl
negb
mov
outsl
sub
out
sbb
arpl
pop
rcrl
enter
loope
pop
pop
push
cmp
push
arpl
cmp
je
movsb
test
jmp
sbb
mov
cltd
xchg
pop
lods
jb
sub
dec
mov
out
test
dec
repz
xchg
into
jecxz
dec
inc
pop
loopne
movsb
or
in
xor
and
leave
movsl
loope
aam
push
pop
xor
aas
jle
in
jl
inc
pusha
cli
or
xlat
xor
push
sub
mov
mov
mov
dec
scas
out
jae
fucom
cmc
shrl
ljmp
adc
jbe
das
add
pusha
in
mov
out
test
ficoms
cs
ds
es
push
outsb
inc
jle
dec
pop
xchg
scas
xchg
out
test
ficoms
cs
ds
es
push
outsb
inc
jle
dec
pop
xchg
scas
push
mov
push
out
test
ficoms
cs
ds
es
push
outsb
inc
jle
dec
pop
xchg
scas
xchg
out
test
ficoms
cs
xchg
pushf
push
imul
mov
mov
in
mov
add
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
and
xor
add
adc
aad
push
adc
sbb
stos
mov
orl
rcr
and
xor
add
adc
popa
push
jp
dec
push
pop
mov
mov
orl
rcr
cmp
sub
sbb
or
js
imul
xchg
xchg
out
cli
jmp
sahf
popf
scas
xchg
dec
sub
add
divb
lods
jno
orb
daa
mov
out
or
lock
inc
loopne
mov
sbb
test
inc
les
pop
cwtl
fidivrl
outsl
fwait
mov
loope
ror
fidivrs
int
repnz
push
jbe
cmp
xchg
fcomi
push
inc
mov
ljmp
and
and
enter
sahf
imul
mov
mov
mov
outsb
gs
mov
sar
jno
mov
out
push
test
ja
xorb
sbb
icebp
mov
leave
scas
rol
inc
or
outsl
sahf
mov
pop
fistps
cmp
cld
mov
lcall
rcr
call
or
sbb
popa
jp
dec
dec
pop
mov
mov
cli
fcmovne
rcrl
dec
gs
adc
push
sub
in
hlt
loope
xchg
xorl
push
jo
or
or
and
aam
sbb
lcall
jp
dec
insl
jle
outsb
sub
jno
inc
dec
push
pop
mov
mov
cli
ror
fisubl
sub
cmp
or
sbb
jno
inc
dec
push
pop
mov
mov
cli
ror
fisubl
sub
das
mov
scas
adc
xchg
and
mov
jle
rorl
mov
mov
cmpsl
dec
adc
repz
je
sub
imull
cltd
aas
andl
mov
icebp
add
fs
sti
or
ds
ds
gs
jl
sbb
xor
sbb
test
or
mov
cmovl
xor
lock
clc
mov
mov
jmp
xor
icebp
dec
dec
adc
cld
or
iret
dec
inc
inc
add
inc
and
sar
sbb
arpl
fs
add
aad
dec
int
fs
jg
lds
dec
xchg
shr
mov
rolb
faddl
add
mov
xor
mov
scas
movsl
push
jl
in
enter
gs
insb
inc
push
mov
mov
imul
mov
test
push
push
dec
xchg
dec
adc
pusha
sub
inc
mov
jb
sbb
push
inc
sbb
out
jmp
fbstp
mov
lret
xlat
push
in
xchg
inc
xor
cmp
insb
jno
mov
pop
cwtl
lcall
stos
jecxz
jmp
inc
leave
decb
jmp
dec
call
adc
mov
movsb
test
mov
jno
jne
lret
imul
outsl
pop
sub
in
ds
dec
imul
adc
sbb
test
mov
mov
pop
xchg
or
pop
xchg
sbb
popa
adc
cwtl
sbb
xchg
popf
pop
jb
pushf
xchg
dec
insb
lcall
push
sbbl
push
inc
dec
lret
jle
adc
loopne
mov
dec
stc
mov
mov
cli
ds
pop
mov
xlat
mov
mov
mov
faddp
dec
add
and
fsubs
sub
xor
jbe
loop
mov
dec
movsl
mov
mov
adc
sbb
shrl
int
add
pop
mov
shlb
imul
into
subb
ja
xchg
inc
cmp
dec
xchg
lock
jne
rol
leave
in
adc
stos
stos
pop
sarl
cmp
daa
mov
sub
mov
cmp
clc
push
mov
jp
xchg
jae
mov
loope
sbbb
sub
xor
push
orl
mov
out
sti
movsb
mov
fimull
lcall
cwtl
in
aad
in
lods
int
mov
mov
push
hlt
idivl
stc
int
cltd
shrl
shr
sarb
lods
inc
lret
mov
leave
adc
aam
imul
adc
fucomp
adc
sub
adc
into
insb
jno
xorb
fdivs
cmp
shl
sbb
movsl
addr16
pop
jge
fstl
lods
xchg
movb
lea
sub
jns
pop
mov
les
lods
cmp
dec
sbb
xor
cld
sub
xor
add
push
out
push
hlt
adc
add
jl
movsb
pop
stos
mov
enter
jp
stos
jno
out
hlt
js
scas
shr
loop
test
sahf
stc
pop
or
pop
test
cmc
jle
aad
clc
inc
jmp
imulb
rcll
cmpsb
jae
cwtl
shlb
or
sbb
add
cmp
adc
jle
push
repz
loop
jge
mov
scas
jno
dec
les
jbe
cmp
addl
mov
lea
or
push
dec
into
sub
repnz
pop
mov
xlat
dec
popf
ror
push
ret
mov
test
aaa
sub
adc
xchg
js
pop
push
icebp
push
rcrl
cmpsb
xchg
jge
pop
push
sub
ja
xchg
cltd
mov
mov
in
int
adc
mov
adc
mov
sub
lahf
insl
ja
mov
fimuls
movsl
arpl
lock
jb
xchg
lret
icebp
add
test
testl
inc
out
dec
lods
fnsave
sbb
stc
inc
sti
aaa
cld
pop
xchg
stc
xchg
scas
add
testl
popa
arpl
and
outsb
rcrl
or
mov
pop
stos
mov
loope
negb
subb
xchg
pop
sub
ja
adc
cmpsl
push
leave
test
lret
add
repnz
inc
sbb
sub
mov
add
scas
hlt
cmp
clc
inc
jge
push
scas
and
test
xchg
fdivs
out
in
sub
mov
dec
insl
dec
stos
inc
jge
std
or
sbb
adcb
mov
movsl
xor
mov
add
leave
sub
dec
cmp
jae
xchg
mov
loopne
scas
mov
nop
add
or
mov
sahf
mov
loop
inc
insb
dec
and
loop
add
pop
adc
fbstp
mov
clc
aam
pop
pop
cltd
mov
fsts
dec
jb
jae
sbb
movsl
mov
rcll
ret
mov
dec
jmp
shr
aad
jg
test
nop
lock
jmp
sub
aas
mov
in
rcrb
adc
daa
cmp
jle
pop
and
iret
lret
les
leave
cs
jbe
stos
stc
movb
xor
imul
cmp
pop
subb
push
jo
or
mov
into
push
test
arpl
repz
sahf
bound
in
sahf
scas
dec
test
mov
lahf
pop
ret
jge
cmp
jbe
dec
cmpb
inc
xor
pop
pop
jb
and
je
jg
jp
sahf
inc
add
push
cmpsl
jp
push
dec
pop
sub
mov
xor
lret
fisubs
gs
xchg
sbb
filds
xchg
pushf
pop
ffreep
int
mov
repz
fcomps
mov
xchg
sub
hlt
mov
xchg
fcoml
dec
pop
push
sbb
dec
lea
lret
fdiv
or
stos
mov
out
xchg
add
mov
mov
stos
sub
push
fisttps
test
or
movsl
leave
dec
xchg
pop
test
jno
stc
sub
push
pop
pop
or
arpl
sbb
ja
sti
xchg
push
in
mov
inc
mov
cli
ja
push
jb
fsubrs
mov
mov
jecxz
leave
cwtl
add
ror
cs
sbb
cltd
mov
mov
pop
xchg
jp
mov
mov
pop
cmpsb
out
sarl
mov
dec
ds
dec
and
pop
repnz
fistl
adc
and
dec
jbe
pop
pop
cs
mov
aad
cmp
mov
pop
xchg
adc
leave
mov
mov
or
lcall
jmp
ja
imulb
inc
inc
in
sbb
sbb
dec
lcall
or
ljmp
sbb
inc
std
jg
rcll
cld
stos
adc
test
lds
inc
push
jno
fdivrs
mov
xchg
dec
inc
movsl
cmpsb
or
sub
dec
dec
pusha
jnp
test
clc
cli
flds
aas
les
outsb
sub
mov
xor
pop
mov
test
scas
leave
mov
push
adc
fstpl
in
cmp
cltd
rclb
outsb
lea
aad
cmp
and
scas
xor
out
mov
jne
cmp
mov
stos
mov
cmp
out
clc
int
lcall
mov
pushf
out
jl
inc
sahf
ret
push
aam
ja
cld
pop
push
std
inc
popa
aam
adc
fucomip
out
pushf
scas
jge
mov
adc
imul
das
mov
jb
inc
add
fdivrs
and
sti
sbb
loop
cltd
fst
mov
pop
inc
cmp
cli
loopne
cmp
negb
cmp
xor
jl
stos
jbe
and
fistl
jg
fdivs
pop
pop
sbb
jg
addl
ret
sarl
cmp
jecxz
fst
cmpsl
loope
test
inc
and
arpl
ret
std
sahf
adc
xor
stc
push
sub
cmp
fisubs
jecxz
dec
dec
iret
jg
imul
int3
cmp
mov
cmc
std
fists
fwait
inc
push
in
mov
mov
sbb
mov
js
mov
xchg
xchg
and
pushf
test
adc
xchg
movsl
mov
xorl
pop
rcl
push
pop
cmpsb
or
rcrl
icebp
inc
jle
icebp
inc
in
ret
test
cmp
mov
ja
movsb
jnp
in
sbb
aaa
push
jecxz
adc
jo
out
dec
add
test
lods
ret
add
cmp
jmp
out
and
repnz
sahf
or
ret
arpl
sbb
je
subb
or
testl
lret
mov
mov
jb
inc
push
push
out
mov
imul
pop
dec
sub
loopne
das
sub
push
mov
aad
push
jne
sub
cmpsl
jecxz
xchg
or
loopne
test
ss
lret
sbb
xlat
rcrl
lea
or
sub
clc
mov
lcall
sbb
aas
in
mov
adcb
mov
or
jg
fs
xchg
ljmp
mov
inc
rorl
dec
mov
cmp
sbb
jl
cli
test
fcmovnb
in
push
aas
leave
test
xor
mov
pop
std
push
aam
outsl
adc
push
push
bound
scas
pop
mov
cld
scas
mov
xor
cld
lock
mov
sub
push
pop
mov
adc
out
sbb
cmpsl
fmul
mov
out
pop
inc
push
adc
xor
mov
mov
xor
out
sarl
mov
xor
jg
mov
adc
mov
ss
xchg
pop
sbb
daa
jge
sbb
out
dec
pop
aas
jb
adc
add
dec
stos
cltd
sbb
mov
or
ficoms
mov
pushf
test
scas
outsb
jb
xor
lods
push
jmp
and
jecxz
xor
mov
jecxz
sbb
movsb
shlb
loopne
fs
stos
inc
jno
lods
sub
cmp
mov
sbb
mov
inc
lods
aam
sbb
fisubl
into
cltd
jne
lock
lods
lds
fdivrl
sbb
lret
icebp
mov
mov
push
cmp
dec
pop
lods
lea
jb
test
mov
and
jno
repnz
inc
sbb
fidivrl
sbb
push
out
addr16
sbb
pop
adc
xchg
aas
fbstp
or
mov
push
je
mov
mov
shll
or
les
mov
push
hlt
mov
mov
setne
popf
test
mov
mov
repz
test
dec
cmp
adc
stos
icebp
iret
in
vpaddq
sbb
ret
rcr
inc
cmp
pushf
iret
sbbl
sarl
jge
xor
adc
xor
gs
add
ss
cmp
dec
lcall
popa
popa
andl
pop
das
fmull
jo
into
and
or
jge
imul
in
and
dec
fcomip
in
pop
mov
notl
leave
pop
in
subb
pop
pop
push
into
mov
add
dec
xchg
xor
push
jno
cmp
sub
fbld
mov
sub
or
mov
sub
xchg
aaa
std
and
in
adc
sbb
test
loope
jne
mov
hlt
pop
cmp
scas
mov
jno
push
mov
addr16
adcl
pop
loop
lds
and
sbb
lahf
int3
je
mov
rcr
xor
or
mov
jmp
imul
in
xor
mov
fwait
hlt
jae
and
inc
sbb
mov
repz
scas
add
into
call
cld
fisttpl
enter
cmp
pop
insl
jmp
add
pop
scas
jbe
pop
test
pop
xchg
aas
mov
lret
jecxz
mov
mov
xchg
sbb
ret
les
add
in
jmp
and
add
sbb
push
add
les
lret
iret
push
adc
sti
or
outsl
in
mov
outsb
cs
mov
pop
dec
push
mov
and
sbb
or
mov
inc
mov
sbb
repnz
push
jne
or
ja
fcomp
je
push
ja
arpl
loope
rcrb
insb
adc
and
addr16
cmp
ret
enter
arpl
add
jo
mov
stc
cmp
loopne
in
inc
sub
push
and
ja
xchg
popa
ljmp
insb
pop
xchg
mov
xor
dec
mov
or
das
clc
cmpsl
adc
mov
jb
pop
test
push
xor
and
mov
or
test
dec
test
out
out
mov
loope
pusha
in
add
ljmp
bound
xchg
test
mov
inc
imul
push
pusha
xor
mov
add
jno
popa
mov
cmpsl
cmp
add
call
out
pop
and
test
push
and
xchg
arpl
into
jecxz
mov
in
mov
jae
iret
addr16
mov
mov
fstp
cmp
incl
jg
out
faddl
ss
add
int
or
aas
xchg
fwait
stos
push
mov
adc
mov
cmpsl
mov
fcomi
lret
stos
dec
aad
fmul
xchg
inc
out
inc
loopne
adc
mov
sub
xchg
push
aaa
imul
jle
popa
nop
xchg
icebp
clc
mov
sub
testl
mov
outsb
cli
adc
mov
fcmovb
sub
fldcw
outsl
xchg
add
fisttpl
push
xor
mov
lret
add
xor
jbe
jns
cld
mov
mov
das
mov
stos
ja
clc
adc
sbb
mov
fnstsw
xchg
sbb
aam
pop
mov
push
push
jns
imul
subl
inc
in
mov
iret
test
pop
cmc
inc
mov
ja
outsl
in
sti
pop
push
out
or
jg
sarb
movsb
fwait
scas
nop
pushf
aad
and
adc
cltd
cli
xor
test
xor
mov
clc
popa
ds
outsb
repnz
rcl
or
add
cwtl
aaa
loope
stc
or
lcall
cmc
lock
push
cmpsb
jbe
ficomps
fisttps
mov
mov
test
jecxz
gs
or
fs
pop
ljmp
and
loopne
fucomp
dec
rcll
sbb
fmull
jg
sbb
mov
sub
jns
mov
std
jg
arpl
sub
ret
into
subb
mov
sbbl
jmp
clc
pop
push
cmc
push
flds
jae
mov
arpl
jb
cwtl
popa
in
dec
xchg
xchg
into
pusha
dec
xor
ret
fs
pop
and
test
xchg
nop
push
data16
mov
push
mov
and
mov
int
mov
add
fcomip
adc
iret
aam
xor
lret
push
jecxz
das
lcall
test
adc
jecxz
in
scas
loop
and
fsubrs
sub
xor
je
in
pop
cmp
nop
rorl
jns
stc
mov
daa
in
movsb
scas
push
adc
push
rcrb
das
jmp
loop
test
mov
cwtl
mov
mov
fisttpl
icebp
andb
test
xchg
sbb
dec
cltd
loopne
fldcw
sub
arpl
scas
stos
push
jg
xchg
les
jo
jae
out
mov
cmp
andl
jl
movsl
sub
mov
dec
clc
mov
cmc
nop
or
dec
inc
cli
xor
push
or
je
inc
dec
cmc
push
push
int
stos
jl
xchg
adc
adcl
icebp
enter
pop
dec
adc
mov
lcall
rolb
aam
or
fnstcw
adc
push
sub
cmp
ljmp
in
jmp
add
dec
adc
jne
jecxz
fadds
sbb
sti
das
enter
outsl
repz
in
aas
negl
push
push
sub
or
int3
mov
test
push
adc
sarb
jae
xchg
fwait
sub
xchg
mov
pop
xchg
pop
push
outsb
leave
stc
imul
clc
sti
cmp
xor
pop
dec
xchg
sbb
push
divl
std
mov
outsb
xchg
or
jnp
cmp
jnp
popf
and
pop
sbb
mov
mov
jmp
add
mov
cs
sahf
out
into
out
ss
movsl
out
ror
push
sbb
cwtl
fnstcw
in
mov
push
sbb
push
lcall
add
les
pop
mov
mov
cltd
push
pop
add
mov
xchg
and
arpl
jbe
inc
fstp
jbe
repnz
mov
sahf
ss
std
xchg
in
insb
ljmp
push
mov
jnp
aaa
ret
inc
fdivrs
sahf
dec
jmp
xchg
adc
in
test
enter
xchg
in
in
cmp
pop
dec
jbe
sbb
shrb
mov
jns
mov
mov
cmp
popa
loopne
inc
jne
dec
and
or
test
ss
fisttpl
push
cmpsl
jmp
push
lahf
adc
sub
test
pop
adc
mov
rcll
or
cmpsb
adc
inc
es
dec
and
push
xchg
inc
and
gs
add
cmp
sbb
shll
pusha
leave
sub
mov
aad
push
xor
jecxz
pop
cmpsl
dec
mov
xor
clc
movsl
icebp
in
lea
in
out
xchg
aam
pop
in
inc
push
cmpsl
or
inc
lods
cs
pusha
lods
cmpsl
cmp
loope
xor
stos
in
or
xchg
and
mov
daa
mov
js
fbld
popf
xchg
mov
cmpsl
ret
pop
xchg
out
or
mov
nop
ficoms
sarb
fsubr
xchg
enter
sub
andb
lods
outsb
inc
int3
xor
test
adc
mov
pop
adc
das
mov
sbb
adc
add
xor
cld
repz
push
sbb
and
mov
outsb
push
outsl
insl
push
ds
pop
and
into
cmpsl
adc
pop
ljmp
inc
aam
shlb
cwtl
addb
iret
mov
jb
and
jmp
cmp
add
loop
jg
iret
sub
out
push
add
stos
std
adc
or
mov
sarb
cld
push
aaa
mov
sub
and
push
popf
out
dec
or
rclb
or
mov
pop
outsl
test
mov
cmp
mov
pop
rcrl
iret
push
cmpsl
xor
enter
jo
cmp
adc
mov
or
xchg
xchg
std
and
pop
cmp
es
xchg
lcall
pop
mov
and
pop
in
fcmovne
and
pop
in
ficompl
mov
sbb
ficoml
hlt
outsb
in
jmp
fstl
adc
and
int3
xchg
lock
dec
loopne
iret
cmp
mov
or
jbe
add
or
ficoml
pop
push
mov
mov
cmp
into
add
dec
mov
push
pop
push
or
push
pop
lret
sbbl
int3
cmc
inc
jo
xchg
stos
inc
andl
iret
mov
loope
sahf
jo
fstpt
cli
mov
mov
ret
sub
sbb
adc
clc
sub
adc
pop
jp
add
pop
jecxz
imull
mov
adc
bound
lds
pop
xor
mov
pop
cmp
push
data16
int
ret
iret
out
xchg
cs
repz
insb
push
ret
pop
inc
jae
xor
clc
loop
xchg
or
dec
popf
fstl
sti
cltd
push
mov
jmp
dec
jle
add
inc
rcll
dec
sahf
push
in
dec
inc
xchg
int
jmp
repz
test
pop
inc
push
sub
lcall
dec
outsb
addl
std
lret
insb
test
lods
fldt
sbb
mov
inc
outsb
out
lea
jns
out
mov
stos
jns
in
andl
fsubrs
jae
mov
jb
inc
shll
push
movsl
push
adc
das
and
push
sarb
fyl2x
hlt
dec
adc
shrl
push
rolb
mov
sub
mov
aam
lods
stos
das
rorl
xchg
cli
cmp
jg
xor
dec
push
mov
xchg
sbb
cmp
sub
mov
adc
sub
jmp
jb
std
int
sahf
lods
pushf
fdivrs
cmp
lods
outsl
dec
mov
dec
stos
enter
adc
std
pop
jns
mov
lcall
outsb
lahf
scas
sbb
test
mov
lret
movsb
mov
movsl
xchg
sub
repnz
or
sbb
jno
inc
dec
push
pop
mov
mov
cli
ror
fisubl
sub
cmp
or
sbb
jno
inc
dec
push
pop
mov
mov
cli
ror
fisubl
xor
add
adc
popa
push
jp
dec
push
pop
mov
mov
cli
ror
fisubl
sub
cmp
or
push
arpl
cli
ror
movsl
pop
push
dec
adc
mov
add
pop
push
mov
pop
aaa
sub
add
adc
rcll
in
sbb
add
xor
and
push
push
inc
push
je
fs
test
lcall
xchg
mov
cmpsb
into
lock
inc
es
pop
cmp
adc
call
xchg
hlt
lds
ret
and
jo
push
add
sbb
pushl
addr16
pop
xchg
mov
dec
orl
or
lods
cltd
add
mov
fsts
sub
dec
or
push
adcl
cmp
adc
xor
movsb
xchg
fdivr
xor
jge
xlat
jnp
dec
negl
sub
jp
bound
inc
dec
jb
push
add
stos
adcl
out
add
loope
sbb
xchg
cmp
lret
mov
cltd
stos
and
sub
push
cmc
aam
dec
push
cmpsl
push
daa
cld
les
xchg
test
xorl
insb
test
and
mov
hlt
int3
daa
fiaddl
xor
dec
push
push
add
je
fdivl
hlt
mov
push
push
jb
jo
dec
or
mov
imul
popa
cmc
xchg
lds
mov
ret
adc
mov
jae
out
or
pop
pop
adc
shll
xchg
and
or
pop
inc
push
je
fs
test
mov
movsb
out
xchg
les
adc
add
xor
and
push
push
inc
push
je
fs
test
mov
movsb
out
xchg
les
adc
rclb
or
sbb
unpcklps
xor
jb
jo
cmp
cltd
xchg
fs
xchg
leave
pop
xchg
clc
adc
cmp
sarl
fwait
testb
mov
push
push
fmuls
jo
loope
movsl
lcall
fs
call
cmpsb
adc
mov
mulb
push
sahf
mov
subb
jno
ja,pn
in
sub
mov
cltd
repz
iret
push
divl
inc
rolb
adc
call
addr16
out
repz
daa
retw
test
scas
fwait
ret
jmp
xchg
cmp
inc
in
push
or
daa
push
test
ja
dec
inc
mov
dec
stos
stc
pop
fistl
and
sub
ljmp
mov
xchg
add
bound
xchg
insl
faddp
cmp
mov
dec
sbb
mov
cld
add
mov
push
test
ret
adc
sbb
jbe
dec
movsb
das
mov
popf
clc
mov
add
jp
insl
adc
jb
xor
jecxz
mov
shlb
aam
add
fwait
loopne
push
call
cmp
xchg
cld
scas
mov
sbb
pop
push
and
call
int
fmull
sahf
loop
mov
cmp
out
push
aam
sub
nop
rcr
testb
push
dec
push
mov
aas
cmp
into
jne
bound
dec
pusha
mov
dec
sbb
rcrl
push
mov
jp
mov
dec
ja
lds
cmp
pop
testb
mov
aas
hlt
mov
jl
mov
pop
adc
fistpll
mov
adc
mov
frstor
and
pop
mov
negl
out
jnp
stc
mov
pop
jmp
jmp
out
or
adc
sahf
jae
inc
or
es
jbe
jecxz
cmpsb
mov
mov
pop
test
or
addr16
popf
ror
insb
xchg
jecxz
es
dec
dec
stos
jbe
roll
add
jns
mov
int
bound
or
repnz
xchg
xchg
lock
push
jnp
dec
jle
imul
mov
cmp
scas
dec
mov
enter
and
mov
xor
pop
mov
push
scas
mov
push
mov
mov
das
cmp
and
xchg
fbstp
or
cmp
stc
mov
push
xlat
inc
sbb
sbb
pop
add
outsl
test
sbb
popf
fisttpl
push
lahf
and
sub
dec
scas
push
mov
gs
daa
xchg
mov
lods
pop
aas
jo
test
stos
or
or
sbb
mov
push
dec
xor
add
and
mov
xchg
das
shrb
sub
adc
inc
mov
dec
and
loopne
jae
mov
xchg
fwait
mov
dec
xor
lea
das
mov
sbb
mov
in
and
dec
pushf
arpl
ds
pop
out
xorb
cs
sub
mov
xchg
not
mov
inc
ljmp
inc
adc
jns
push
in
sub
dec
mov
add
dec
int3
adc
popf
pushf
pop
dec
clc
jge
enter
dec
into
cmp
sti
pop
decl
in
xchg
push
mov
in
push
inc
adc
adc
lods
xor
pop
and
imul
mov
mov
mov
aaa
xchg
leave
dec
mov
mov
outsl
xchg
dec
sbb
lds
push
push
aam
nop
jne
and
pop
imul
and
jge
jle
pop
imul
insb
ret
rolb
xlat
jmp
xchg
jle
mov
inc
cmc
and
dec
dec
mov
jae
add
push
pushf
in
rcrl
dec
ret
das
fcmovu
or
push
in
lret
lret
stc
jb
aad
mov
jb
xor
xor
stos
jmp
jo
mov
jle
xchg
orb
inc
fisttpll
adc
pop
cmp
pop
inc
inc
pop
pop
or
into
cltd
cmp
cmpsl
jmp
adc
cmp
mov
leave
fdiv
notb
cmp
lock
sbb
fistpll
xchg
add
cld
add
sahf
mov
enter
dec
xor
in
repz
lret
jns
or
xchg
xor
mov
cli
sub
shrd
adc
sbb
pop
scas
into
add
mov
out
sub
das
in
in
jp
adcl
jge
mov
lahf
jno
pop
gs
pop
aad
inc
or
sahf
add
repnz
mov
jo
ljmp
adc
xchg
pop
sti
fdivrs
xchg
call
jle
lods
adc
fnstenv
arpl
mov
test
ds
orb
in
adcl
mov
cltd
adc
mov
xchg
jle
inc
xlat
shlb
jl
adc
movsb
push
sbb
jb
dec
std
adc
mov
xor
pop
or
lcall
call
scas
das
mov
enter
xchg
in
out
mov
adc
sub
jmp
ss
mov
mov
testl
hlt
cmp
dec
movaps
js
mov
sub
das
mov
and
stos
sbb
add
cltd
add
push
pop
xor
mov
js
data16
lock
adc
cmp
mov
xlat
add
and
outsb
inc
mov
cmp
leave
mov
dec
inc
fisubs
stc
dec
loopne
mov
fcompl
push
pop
inc
imul
out
add
or
int3
outsb
mov
push
cmp
lcall
lods
fldl
xor
push
fisttpl
adc
inc
jnp
addr16
mov
sar
or
jo
je
scas
rcl
cs
sub
dec
out
rorl
scas
fdivs
sbb
iret
xchg
fimuls
fwait
fwait
xlat
rorb
or
popa
in
jno
faddl
cld
scas
mov
pop
mov
lahf
push
adc
das
lods
mov
aas
jmp
mov
xor
pop
aas
xchg
mov
imul
sub
or
out
insl
testb
push
je
lods
or
sbb
sti
idivl
jb
mov
hlt
ffreep
test
aad
pop
in
ljmp
and
imul
fnstcw
cmc
iret
fstpl
int3
mov
sbb
adc
or
mov
xchg
movsb
ficoml
es
mov
enter
or
xlat
pushl
jne
imul
movl
pushf
popa
mov
mov
inc
jmp
inc
in
test
dec
jp
jns
xor
sbb
nop
sub
test
cmp
pop
pop
ds
inc
or
xchg
fbld
jp
sbb
aad
rorl
cmpsb
push
clc
das
std
pop
imul
dec
iret
jecxz
out
mov
jp
inc
inc
out
data16
sbb
fldcw
xlat
aad
or
sub
sbb
lcall
lds
in
and
sbb
inc
lods
push
int3
inc
insb
fistl
insb
xchg
xor
push
mov
and
fstps
in
jns
test
jp
adc
mov
jnp
dec
adc
jmp
int3
adc
js
cmp
fs
cmpsb
adc
lock
jl
mov
mov
cmc
gs
imul
cmp
mov
test
ret
fsubl
and
dec
aam
into
push
inc
es
popa
lret
mov
inc
in
cmpsb
jecxz
mov
int
push
mov
add
push
addr16
jbe
enter
or
stos
loop
mov
jnp
aad
dec
jbe
cltd
cmpsl
dec
cwtl
ss
adc
adc
es
mov
mov
jae
flds
popa
mov
faddp
pop
lahf
movsl
clc
inc
mov
inc
mov
cltd
popf
insl
divl
push
iret
cmp
push
mov
pusha
sub
cld
popa
repz
push
sub
lret
pop
sbb
pop
cmp
mov
sarb
loope
add
pop
or
in
sbb
mov
inc
sub
out
cmp
jecxz
jb
pop
mov
dec
icebp
pop
jne
sub
mov
aam
mov
or
pop
out
mov
das
cli
call
ss
cmp
cmp
imul
mov
in
and
int3
mov
mov
mov
lret
pop
pop
imul
in
ja
lock
ret
mov
test
fidivrl
das
pop
repz
xor
je
cmp
dec
adc
xchg
adc
or
xchg
xlat
insb
or
sbb
fsubr
or
mov
cmpsl
xor
out
icebp
daa
je
xor
loop
in
mov
lods
add
outsl
push
insl
bound
in
and
jl
sti
les
aas
outsl
ficomps
pop
in
or
pop
cwtl
sub
out
int3
dec
stos
cltd
cmp
lcall
xor
aam
adc
loopne
dec
jno
push
pop
mov
mov
fdivrl
cmp
inc
or
push
mov
into
fsubrp
mov
jmp
ja
sarb
js
mov
shl
adc
adc
outsl
in
fmuls
xchg
out
js
jmp
cmp
cmp
inc
xchg
or
nop
cld
cmpsl
lcall
imull
stos
dec
inc
aad
pop
ss
jmp
aam
popf
imul
in
fildll
leave
sub
pop
orb
test
push
fiaddl
shll
jmp
clc
cs
cmp
push
cld
jns
int
push
aas
pop
xor
add
sub
cli
mov
inc
or
lods
in
jno
ret
mov
cmove
ret
adc
in
dec
fiadds
filds
cmp
adc
loop
ret
mov
sub
ja
and
xchg
pavgw
insb
mov
dec
inc
ret
push
movsb
add
cmp
les
js
into
leave
incl
pop
lea
sub
sbb
mov
subl
or
cmc
pusha
dec
bound
out
imul
repz
or
push
dec
daa
out
repnz
mull
or
sbb
xchg
fmull
out
loopne
lds
loope
flds
cmp
aad
xchg
dec
ja
jno
mov
xor
or
lods
jmp
push
es
shl
push
sbb
sub
pushf
adc
adc
sbb
push
sbb
push
or
xor
outsb
dec
sub
mov
popa
fdiv
jp
cwtl
xchg
roll
jecxz
aam
xchg
ss
xor
in
lea
pop
or
xchg
mov
xchg
mov
shlb
out
mov
mov
repz
cmp
lds
shr
cmpsb
cld
push
cmp
adc
mov
pop
xor
dec
sub
andb
sbb
loop
pop
lahf
cli
test
lret
lret
add
mov
inc
loopne
stos
pop
pop
out
mov
pushf
mov
aaa
mov
adcl
and
jp
cmp
add
iret
mov
mov
and
push
stos
imul
addr16
lea
pop
daa
movsl
xchg
sub
inc
xor
sub
xor
jne
daa
gs
scas
jge
enter
arpl
leave
cmpsb
inc
mov
out
and
push
mov
popf
mull
ja
dec
mov
xchg
dec
int3
sbb
push
inc
stos
lds
pop
sub
mov
sbb
hlt
movsl
mov
nop
adc
rclb
das
cmp
mov
repnz
dec
cld
lret
add
call
scas
call
repnz
pop
add
adc
iret
add
ljmp
rcrl
cs
roll
push
push
shlb
pushf
lds
sub
aad
add
popa
icebp
push
mov
or
inc
shll
cmp
adc
in
pop
and
mov
lds
sub
mov
hlt
push
dec
mov
inc
sub
xlat
xor
adc
xor
sti
sbb
ja
adc
jae
loopne
xor
addr16
adc
xchg
jo
push
jmp
pop
xorb
add
jne
and
loope
cwtl
movsl
gs
sbb
ret
mov
pop
sub
pop
out
sub
stos
aas
adc
scas
xadd
popa
mov
pop
sbb
call
dec
test
shl
xchg
setle
jg
sarb
cwtl
xchg
in
lea
push
cmpsb
fwait
inc
outsl
filds
and
and
xor
cmpb
shlb
outsl
or
insl
xchg
push
stos
lahf
jbe
sub
xorl
jns
sbb
imul
out
addr16
jp
daa
in
in
adc
movsb
out
sbb
std
add
mov
jge,pn
ss
addb
das
stos
mov
cltd
or
xorb
inc
xlat
repz
int3
mov
outsl
cmpsl
movsl
cmpl
aam
xchg
inc
outsl
call
xor
jl
leave
mov
mov
add
dec
insl
sub
xor
popf
popf
call
push
sarb
movsl
mov
data16
imul
dec
sbb
jnp
mov
js
rolb
les
and
push
and
ret
jb
xchg
xchg
xor
dec
mov
push
sub
or
sahf
xchg
xchg
sbb
cwtl
xor
xor
dec
inc
mov
cmp
inc
jo
xchg
jmp
das
in
aaa
es
dec
ret
sub
lds
mov
jnp
mov
dec
int
shr
stos
subb
pushf
pop
idivb
mov
inc
mov
inc
inc
out
xchg
gs
mov
pop
inc
outsl
test
push
lahf
fmuls
nop
xchg
mov
cltd
das
imul
popa
push
pop
push
aas
out
mov
inc
test
fwait
lea
out
scas
fdivrl
fs
add
iret
loop
sub
push
bound
mov
int
in
les
int
arpl
pop
iret
into
lcall
sub
inc
hlt
push
lret
in
test
js
fwait
loop
cmpsb
push
jnp
pushf
cmp
xchg
lret
ret
fildll
repnz
ror
shll
fs
int
lcall
xchg
outsb
test
cwtl
mov
cmp
scas
jmp
cmp
movsb
dec
pushl
xor
xchg
pop
jp
lret
or
aad
sub
and
cmp
pushl
xchg
xlat
jo
ja
xchg
xor
mov
cmpsl
sub
pop
outsl
mov
cwtl
fs
lcall
adc
mov
int3
loop
xchg
je
push
cli
inc
pop
fwait
shl
icebp
daa
pop
dec
dec
sti
inc
or
testb
movsl
add
add
pop
pop
fs
in
ljmp
arpl
arpl
pop
test
inc
xor
fisubl
test
data16
shll
ret
sbb
cld
adc
sub
stos
adc
cmp
push
rorb
notb
add
and
cmp
adcl
add
mov
fcomp
int
movsl
orl
dec
sub
repnz
xchg
test
out
aas
jns
or
bound
insl
out
faddl
cmp
loop
sub
xchg
inc
ret
fists
in
sti
clc
cmpsb
lods
jno
dec
add
cmp
inc
mov
idiv
cmp
inc
data16
rcl
sarl
inc
addb
xchg
pop
inc
add
push
into
insb
push
lds
fidivrs
dec
and
dec
cs
bound
jmp
ja
inc
sbb
test
fiaddl
or
or
add
insl
xchg
aaa
scas
jge
sbb
imul
xchg
dec
or
push
xchg
jno
data16
lret
popf
mov
dec
push
jne
scas
cmp
js
pushf
lret
dec
jge
xchg
cmp
mov
das
push
cmp
xchg
rcr
cmc
psubusb
sbb
sbb
fs
mov
scas
and
pop
sub
push
or
cmp
je
mov
adc
in
pop
sbb
jecxz
sub
cmpsl
fpatan
fsincos
cld
sbb
pop
nop
push
lods
loop
fistpl
out
fstl
adc
iret
scas
adc
or
fiadds
imul
dec
ficomps
push
mov
lret
inc
stc
stos
mov
movsb
ja
dec
cmpb
outsl
cs
outsl
xor
shlb
sbb
nop
dec
inc
clc
outsl
jno
add
call
dec
lahf
or
cwtl
mov
fwait
int3
xchg
add
js
test
inc
lcall
adc
int3
push
xchg
xorb
lcall
and
inc
out
in
pop
mov
mov
and
dec
jmp
mov
mov
inc
popf
sub
andl
cmp
das
ret
push
outsb
dec
mov
cld
mov
pop
cmp
gs
aam
fdivl
mov
jnp
push
mov
lock
mov
cmp
mov
lods
lods
dec
shl
push
rcrl
cld
fisubrs
loop
dec
jae
jp
lock
sbb
mov
subl
xchg
inc
into
test
into
je
cmpsl
das
lahf
jo
loopne
and
sbb
inc
sub
hlt
test
je
dec
insl
adc
xchg
xchg
xchg
push
lea
mov
add
cmp
lds
jp
xchg
into
xchg
mov
outsl
mov
jp
sbb
jge,pn
or
dec
dec
lahf
bound
sbb
xor
or
mov
mov
jge
mov
jmp
xchg
stos
push
xlat
push
scas
adc
fcomip
repnz
cmp
divl
jbe
enter
fdivrs
cmp
neg
sbb
popa
ret
sub
lds
jb
imul
in
adc
das
mov
xor
and
inc
dec
xor
lea
hlt
repnz
jo
mov
call
lods
push
imul
clc
cmc
jns
stc
orl
mov
in
lods
popf
jo
sbb
mov
ret
jle
or
test
xor
mov
andl
std
xchg
movsl
pusha
adc
mov
add
or
cs
je
push
or
lds
popa
mov
mov
push
mov
push
push
pop
pop
imul
out
in
cmc
dec
stc
mov
inc
pop
mov
fcomi
insb
je
in
mov
pop
jb
sar
aaa
xor
bound
dec
cmc
in
inc
nop
int3
and
ret
out
aas
cmp
xchg
repnz
das
sub
bound
lods
inc
push
xchg
movsl
in
push
ss
jne
ja
jmp
cmpsb
push
mov
idivb
lret
and
loop
test
cld
out
cmpsl
adc
sti
int
mov
jp
pop
xorl
aam
std
pop
mov
dec
sahf
subb
lds
test
adc
aaa
adc
mov
enter
out
lcall
push
inc
lds
xor
jmp
inc
lea
cmp
addr16
push
push
in
add
mov
jl
dec
sahf
in
fiaddl
call
pop
pop
shlb
jb
les
or
aad
mov
out
inc
mov
out
add
lahf
cmp
mov
scas
pop
cmp
pop
pop
outsb
adc
ss
inc
mov
mov
in
xlat
jmp
xlat
pop
sar
push
cmp
mov
orl
pop
xchg
inc
mov
mov
iret
sub
xchg
sub
jl
xlat
inc
lds
jne
and
sub
rcl
icebp
fs
je
out
cmp
cmp
cmpsb
add
inc
pop
xchg
cmovb
jge
lds
inc
ss
push
js
aam
rcrl
stos
lds
mov
shrb
cwtl
xor
cli
push
mov
aaa
jge
js
gs
xor
sahf
mov
xor
xchg
cs
sbb
push
movsl
jno
mov
loope
cwtl
sbb
jecxz
jmp
push
or
mov
imull
js
pop
daa
push
jo
fiadds
adc
aad
sbb
xchg
jp
lods
mov
int
ljmp
mov
push
dec
pop
divl
pop
rorb
jbe
out
lods
and
enter
call
scas
mov
adc
sub
sub
ret
mov
mov
test
jmp
or
mov
ljmp
jne
into
and
push
mov
daa
jge
sbb
aad
cwtl
out
or
or
out
and
scas
pop
push
mov
aad
lcall
sbb
ds
pusha
inc
pop
jae
push
push
inc
push
je
fs
test
mov
movsb
out
xchg
les
adc
add
xor
and
push
push
inc
push
je
fs
test
mov
movsb
out
xchg
les
adc
pop
dec
and
and
push
push
inc
insl
je
gs
xlat
test
mov
xchg
fldl
or
sub
push
push
push
push
je
in
xchg
sub
push
mulb
or
sbb
adc
aam
xchg
pop
pop
push
movsl
cli
scas
and
or
add
add
add
push
add
add
add
and
pop
add
add
add
add
adc
mov
test
jmp
das
add
add
lea
pop
add
sub
mov
add
add
add
xor
sub
hlt
add
add
add
add
add
add
add
add
add
add
add
add
fiadds
xor
push
add
add
sub
jmp
add
add
imul
add
add
inc
add
add
add
mov
outsb
add
add
add
add
add
leave
add
add
add
add
sbb
test
dec
add
add
nop
add
add
push
add
add
add
add
add
and
pushf
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
pop
add
add
add
add
add
sbb
add
mov
push
add
add
add
add
add
add
add
insb
add
add
adc
push
add
add
mov
add
mov
in
add
add
add
icebp
add
add
add
add
add
mov
add
add
add
add
jne
add
push
add
add
add
inc
add
jge
insl
add
sbb
adc
test
and
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
enter
jns
cmp
ret
add
add
sbb
adc
leave
add
stc
add
pop
add
xor
sbb
xchg
add
add
add
add
sub
add
add
add
add
add
add
add
scas
add
add
add
arpl
and
dec
add
add
add
add
inc
add
add
add
fiaddl
cmp
and
add
ds
add
add
add
add
add
in
add
add
add
add
add
add
add
add
imul
add
and
js
imul
add
add
add
out
add
in
add
adc
pop
add
leave
add
add
add
add
push
add
add
mov
dec
add
mov
xchg
addb
add
test
sbb
sbb
aad
lret
add
add
add
add
add
adc
add
add
inc
add
flds
and
inc
add
mov
and
ret
add
add
add
add
add
jne
dec
add
add
aad
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
dec
add
add
add
movsb
add
arpl
adc
add
add
add
add
add
add
add
add
sbb
add
inc
mov
out
rcrl
or
adc
jns
cli
add
out
notl
scas
mov
bound
add
xor
xchg
and
mov
stos
loope
jo
mov
xchg
sarl
and
inc
sahf
pop
push
dec
xor
xchg
roll
xor
cmp
mov
das
mov
movsl
stc
xlat
in
in
adc
gs
outsb
cmp
sub
inc
into
movsb
lahf
push
adc
dec
daa
rorl
mov
pop
mov
sub
sbbb
lods
stc
pop
xor
int3
or
mov
dec
pop
lcall
mov
enter
mov
sbb
jo
out
in
fldenv
sub
pop
mov
ffreep
imul
mov
push
pop
mov
stc
ds
mov
shll
jno
in
and
mov
mov
mov
adc
push
pop
scas
test
lahf
jl
push
mov
scas
pop
data16
jle
jb
dec
cmp
ret
int3
push
jnp
mov
inc
cli
mov
push
adc
cltd
cld
lss
push
test
testl
add
adc
xchg
ljmp
mov
push
inc
xlat
out
mov
lea
ja
shlb
mov
xor
dec
jo
cs
adc
jmp
or
cli
push
xlat
sbb
and
sbb
sub
pop
cs
iret
mov
insb
xchg
xor
mov
mov
rcll
dec
add
dec
mov
adc
retw
in
int
into
lahf
andb
jnp
stc
bound
add
jo
xorb
es
mov
std
dec
jmp
mov
jle
pop
popf
push
ret
cmp
push
out
push
sbb
frstor
mov
in
push
cmp
jg
or
jl
lds
add
cmp
jg
addl
cmpl
jnp
in
jne
loope
loop
ljmp
jbe
fisubrl
rcll
movsb
jp
xchg
fsts
or
jno
and
jbe
cmp
xor
dec
das
imul
push
inc
push
jmp
fldcw
les
pop
mov
push
pop
sub
data16
and
int
mov
xor
sub
xor
icebp
cwtl
std
xor
adc
or
pop
ror
rorb
push
sbb
mov
mov
subl
out
adc
popf
fs
push
enter
repz
mov
addr16
xchg
jecxz
inc
aas
xchg
push
xchg
ret
adc
out
and
scas
and
xchg
in
psrld
fidivs
gs
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xor
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
dec
clc
add
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
or
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
clc
add
jl
add
nop
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
or
add
sub
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
movsb
stc
add
lods
stc
add
mov
add
mov
stc
add
int3
stc
add
aam
add
out
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
add
add
or
add
sbb
add
sub
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
