call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
in
scas
sub
mov
or
push
mov
stos
sbb
cli
das
call
test
scas
sub
jp
out
pop
iret
ds
lcall
pop
lcall
xchg
notb
mov
push
aas
gs
jae
jnp
push
lods
and
iret
cmp
pop
testl
xchg
les
jecxz
or
xchg
addr16
lahf
inc
xchg
mov
inc
lahf
mov
jnp
xchg
das
sbb
or
lahf
sar
loopne
add
mov
ret
cmp
and
sub
push
int
xlat
sarl
lock
sbb
ljmp
mov
mov
jp
add
mov
inc
cli
pop
scas
push
jbe
sti
cmp
pop
xor
ret
sti
scas
pop
das
das
iret
push
fisttps
jmp
jp
ror
mov
pop
cli
scas
xchg
rorb
add
inc
cmp
in
sarb
xchg
mov
fimull
jg
scas
ficompl
jp
push
adc
es
insb
pop
mov
ret
ja
pop
ficoml
int3
push
jmp
fwait
push
addb
cld
das
out
insl
out
popa
jecxz
xchg
or
mov
jnp
das
mov
mov
cmp
jp
sbb
dec
mov
cli
dec
out
push
pop
iret
dec
aas
mov
jp
pop
fimull
mov
sbb
push
pop
iret
dec
aas
mov
jp
pop
fimull
mov
mov
ret
dec
pusha
add
add
jp
ret
cmp
ret
cwtl
push
dec
loop
lret
push
mulb
out
lds
and
int3
push
and
sbb
repnz
pop
jle
add
repz
data16
dec
sbb
or
mov
adc
pop
dec
sbb
js
push
adc
mov
xchg
cmp
jne
push
popa
jno
jb
dec
std
in
jp
scas
sub
cmp
inc
sbb
jo
xlat
fpatan
fsubl
rolb
cmp
pushf
or
mov
pop
incl
sub
or
mov
cmp
or
repz
mov
dec
fistps
pop
adcl
pop
hlt
push
push
dec
sbb
and
push
inc
jbe
pop
test
lcall
lret
push
imul
ret
xchg
sub
or
add
ja
inc
cmpsb
ret
adc
push
adc
jge
aam
fsubs
jno
sub
cwtl
jne
shl
dec
sbb
mov
rcrl
aam
jne,pt
jmp
iret
hlt
sbb
cmp
data16
add
leave
adc
dec
sti
and
lcall
add
xchg
xchg
fimuls
gs
dec
data16
scas
sbb
test
loopne
lahf
div
adc
xchg
mov
mov
js
testb
mov
mov
in
xchg
sbb
jg
outsl
xchg
sahf
push
cwtl
cmp
sbb
jmp
outsb
stc
jne
outsb
or
fsubrp
fidivs
daa
sbb
sbb
cld
jl
sub
cmp
jne
repnz
movsl
aad
push
sti
ja
cmpb
mov
jae
test
ljmp
adc
subb
lods
dec
adc
jle
jp
xor
std
aam
mov
fcoms
fcmovne
add
jp
mov
jp
sub
hlt
push
test
mov
lds
out
xchg
cmp
sti
pop
and
shlb
fisubl
sub
cltd
pop
jp
cmpsb
inc
or
insl
fwait
idivb
ja
lret
scas
mov
mov
xor
adc
js
adc
out
divb
cmc
dec
out
xchg
loope
jmp
enter
sbb
daa
ss
cwtl
cmpsb
call
dec
sub
and
push
les
push
dec
das
mov
jmp
testl
xchg
stos
pop
in
das
aam
xlat
cmc
jecxz
xchg
nop
mov
icebp
xchg
or
cmpsb
negl
xor
mov
jecxz
loop
repz
lret
mov
push
jmp
adc
rorb
mov
adc
shrl
mov
add
ja
mov
xor
jno
mov
dec
addl
cmpsl
xchg
sar
or
shrb
mov
call
movntq
icebp
pop
into
rorl
mov
stos
sbbb
mov
mov
xor
pusha
or
popf
jbe
mov
orl
lret
ret
sbb
imul
mov
inc
mov
ds
cmp
push
inc
repnz
cltd
pop
cmpsb
popf
xor
dec
inc
sub
mov
scas
ds
mov
jle
shrb
dec
mov
or
push
push
inc
in
dec
imul
scas
dec
aam
jns
push
pop
ja
lods
jg
aam
jno
mov
mov
mov
adc
xor
pop
aaa
sahf
fs
shlb
out
inc
outsb
jg
mov
addr16
pop
jl
movsb
mov
dec
ret
mov
cmp
ljmp
mov
movsl
pusha
cmp
cmp
sbb
jge
cli
enter
cmp
into
roll
das
popa
stc
aam
lds
fdivrp
jne
lcall
push
adc
add
jmp
cmp
jmp
push
fistl
mov
in
dec
sti
es
mov
sbbb
push
clc
push
and
and
sub
xchg
popf
xchg
fcompl
dec
xchg
mov
andb
inc
inc
in
dec
mov
in
sbb
test
stos
outsb
and
xor
insb
pop
aaa
out
mov
decl
ja
andl
add
orl
or
outsb
test
xor
cmp
shl
xor
xor
and
fstpt
cwtl
dec
into
psadbw
pusha
aam
cmp
jne
add
push
push
inc
push
adc
pop
and
xchg
testb
pop
mov
cmp
pop
or
out
and
bound
stc
clc
adc
xlat
ja
or
je
pop
test
inc
adc
shlb
jo
or
xchg
mov
mov
cmp
sub
sbb
lock
addr16
add
sbb
xor
filds
in
push
fadds
push
gs
stc
xchg
or
inc
xchg
mov
inc
es
mov
ljmp
addr16
xor
mov
sbbl
fists
test
adc
fidivrl
test
add
cmpsb
gs
cmc
add
movsb
or
adc
andl
lahf
xor
aad
pop
inc
bound
xor
add
mov
dec
adc
and
rcll
dec
pusha
jbe
incl
arpl
pop
xor
add
mov
dec
push
arpl
jle
test
xor
add
xor
sar
fcmovnu
xor
shlb
js
add
repz
scas
jmp
aas
rorb
sbb
dec
aaa
or
subb
xchg
xchg
and
test
xor
push
sbb
sub
outsb
or
and
jl
mov
bound
cmp
cmp
sub
inc
sub
lds
pop
and
adc
xchg
aam
jnp
sub
popa
rorl
sahf
jecxz
loope
out
enter
and
rcr
mov
je
testb
push
shrl
stos
push
shl
cld
or
aas
push
mov
or
mov
adc
repz
mov
pop
xor
push
pop
mov
ds
pop
dec
ljmp
pop
cwtl
add
cmp
xor
scas
add
sarb
addb
mov
mov
pop
sub
xor
fbld
jns
stos
sbb
sbb
cmpsl
lret
push
in
es
xorl
popf
andb
ljmp
add
add
cli
inc
enter
xchg
loop
fisubs
pop
mov
iret
pushf
cltd
aaa
pop
jno
loop
add
xor
and
lahf
popf
mov
xchg
cmp
sub
xchg
popa
push
rorl
or
mov
ret
data16
adc
in
or
add
mov
out
into
into
pop
jns
nop
sbb
cltd
or
push
push
xlat
es
adc
pop
mov
inc
lret
out
les
mov
and
dec
cwtl
lret
xchg
inc
roll
fnstcw
mov
push
loope
nop
cmp
sbb
ficoms
mov
lods
cmpsb
cmp
and
sbb
stc
xor
cmp
sti
push
pop
add
xorl
fadd
xchg
adc
movsb
xor
and
imul
cmp
es
pop
fs
icebp
test
pop
aam
or
psrlw
daa
fsts
xchg
cmp
aaa
stos
or
es
xchg
es
inc
sbb
rcrl
pushf
popa
stos
cli
stc
lahf
sahf
add
mov
movsb
rcrl
dec
mov
dec
or
adcl
movsl
jle
fdivrs
fisubrl
imul
pop
dec
mov
mov
fwait
inc
jbe
repz
in
aaa
dec
jnp
jp
fnstenv
in
dec
cli
pop
ss
xchg
and
test
ss
loop
mov
aam
outsl
push
xor
cmp
fidivrl
out
or
mov
xchg
jp
mov
cmc
gs
scas
xor
jne
mov
jae
pop
test
sarl
jge
lret
add
cmp
inc
sub
sub
in
push
sbb
inc
fmulp
or
imul
shrl
das
test
call
loope
cld
mov
divb
and
nop
bound
and
pop
pop
mov
test
xchg
repnz
popf
or
mov
int
fadd
sbb
jge
push
lret
fistps
loope
push
pusha
movsl
test
loope
cmp
mov
int3
add
push
test
sub
aaa
jb
stc
or
sbb
mov
ja
mov
into
ljmp
shlb
js
int
cmp
aad
flds
pop
dec
lret
loopne
fisubl
scas
mov
xchg
and
testl
sub
scas
cmp
cmp
repnz
inc
inc
inc
into
sbb
call
icebp
adc
cmp
lods
das
sbb
mov
dec
fidivs
xor
out
imul
xchg
pop
lret
push
pop
rcrl
leave
orl
jo
ja
and
enter
and
dec
jo
pop
mov
jno
lods
push
jne
fidivs
cmp
cmp
idivb
repnz
movsl
push
jbe
in
xchg
movsl
insb
aad
ds
aas
addr16
pop
out
repnz
dec
dec
ss
xor
and
mov
std
and
cld
in
xchg
and
cli
outsb
ds
dec
scas
xchg
bound
sti
ds
hlt
ss
jne
fists
lea
sub
dec
push
inc
xor
lods
stos
fisttpll
xor
mov
insl
cmp
push
inc
mov
cmp
or
sub
xchg
cmp
repz
jmp
pop
jnp
outsb
pusha
out
nop
shll
jae
test
loop
bound
andl
inc
jp
int3
jmp
repz
jne
outsl
je
in
inc
fistl
rcl
loop
out
sub
dec
lods
pop
mov
mov
adc
mov
cwtl
iret
push
push
orl
shr
aas
dec
push
ss
or
aam
dec
sub
loope
and
push
push
dec
addr16
mulb
movsl
dec
out
test
imul
lcall
inc
mov
stos
imul
jno
int3
scas
jns
pop
dec
shl
call
mov
loope
nop
push
in
mov
jae
pushf
push
jp
dec
push
or
arpl
cwtl
packuswb
in
aam
arpl
xor
loop
sbb
push
inc
sbb
pusha
pop
jno
pop
in
sub
iret
insl
call
or
xlat
or
mov
gs
dec
lret
sti
in
adc
sub
fists
mov
push
inc
jno
shlb
es
adc
mov
pop
sub
or
mov
aas
mov
xchg
js
ss
js
or
movsl
pop
inc
sbb
pushf
sub
or
dec
inc
pusha
test
jl
ret
xchg
mov
xor
mov
ficoml
dec
xor
fnsave
push
sub
push
adc
test
lcall
ljmp
sbb
jle
subl
jle
cmp
popf
xchg
lret
inc
stc
fldt
es
bound
inc
leave
add
jne
mov
cmpl
jno
lods
jnp
leave
sub
test
push
hlt
push
popa
bound
aam
test
ds
scas
sub
mov
dec
int3
scas
pop
push
test
insl
stos
test
or
mov
cmpsl
aad
mov
lods
imulb
push
mov
cmp
adc
notl
cmp
xchg
ss
jge
divl
lret
or
xchg
inc
cmp
mov
imul
mov
test
dec
or
dec
mov
adc
ljmp
das
inc
push
or
cwtl
movsb
push
inc
push
es
pusha
xlat
movb
adc
mov
faddl
xchg
dec
loopne
repnz
jns
scas
fwait
loopne
inc
shrl
push
dec
fadds
mov
lds
mov
xlat
dec
dec
sbb
dec
sub
adc
jg
sbb
add
push
xchg
pop
and
or
sub
inc
std
rorb
push
dec
push
aaa
out
into
mov
decb
addl
xchg
add
dec
pusha
flds
lock
lret
push
hlt
mov
mov
mov
sbb
nop
dec
push
into
jecxz
je
clc
cmp
mov
insl
fadds
lock
frstor
shrb
lret
addl
insl
aaa
shl
or
call
mov
jge
scas
mov
push
std
jp
frstor
mov
cwtl
out
sbb
xchg
cld
jl
divb
arpl
jbe
jmp
add
push
jae
iret
fwait
pop
xchg
push
pop
out
adc
xchg
das
into
adc
imul
fidivl
insb
push
sbb
in
cs
add
rolb
mov
dec
push
pop
clc
shlb
pop
lret
sub
pop
fwait
pop
and
push
js
gs
inc
mov
xchg
jle
or
push
mov
mov
sub
mov
sarl
ss
or
aaa
cmpsb
shr
jb
loopne
and
lahf
dec
out
mov
testl
jb
mov
repnz
pop
xor
xchg
mov
daa
loope
jge
pushf
pop
fisttps
dec
add
mov
inc
xchg
xchg
pop
rcll
xor
mov
add
orl
mov
sub
cmpsb
xchg
dec
adc
push
into
or
out
jp
mov
add
stos
in
push
out
xor
loop
and
sub
fs
out
sahf
stos
mov
jl
ljmp
add
ret
dec
cmpsl
jns
jecxz
mov
shrb
inc
fcoml
sub
shrb
pop
aad
int3
mov
mov
loope
leave
iret
stos
cmp
sub
lea
push
mov
leave
popf
test
jp
inc
push
shrb
lock
xchg
cmc
push
push
xchg
insb
or
andb
es
movsb
pop
inc
push
popa
push
and
lods
xchg
adcl
xchg
movsl
or
call
call
into
jo
dec
and
push
add
outsl
or
inc
mov
mov
push
in
lahf
jnp
shlb
pop
out
icebp
xor
push
sti
cmp
fsubl
add
out
in
pop
repnz
mov
xor
mov
pop
pop
in
std
stos
jne
inc
jle
movl
add
test
ja
shrl
cmpsb
int3
push
xor
jb
call
mov
popf
sti
aam
mov
shll
mov
sbb
pop
cmp
out
mov
xor
in
in
jnp
inc
cmp
ljmp
aas
add
pop
je
lock
fists
outsb
and
cmpsl
cli
je
shll
cli
nop
inc
fiadds
inc
pushf
sahf
sub
lods
sbb
xchg
inc
pusha
cmpsl
out
fcompp
cs
adcl
repz
adc
xor
xor
cwtl
add
in
push
add
pop
push
and
pop
je
mov
jnp
nop
mov
mov
std
jl
fcmovu
mov
in
mov
adc
sub
pop
xchg
push
scas
fdivs
mov
xchg
jle
push
fldt
push
inc
xor
push
out
stos
stc
jle
loopne
notl
cmp
rcrl
mov
inc
mov
das
cmp
insl
cs
idivb
sbb
or
jmp
daa
in
inc
arpl
mull
lret
inc
lds
test
sbb
into
loop
lcall
aas
sub
ret
push
pop
outsb
xchg
inc
loop
pop
jp
mov
js
mov
repnz
jns
mov
out
cmp
inc
inc
lods
jbe
ss
push
add
or
push
jbe
jecxz
sti
aas
inc
xor
lock
insb
mov
sbb
mov
add
pop
inc
push
in
loopne
movsl
xchg
pop
rolb
sub
mov
mov
sub
jo
cmpsb
jmp
js
test
cmp
mov
ja
push
ds
mov
add
scas
hlt
and
mov
fisttpll
pop
mov
pop
mov
into
adc
jmp
mov
or
pop
and
xlat
pop
lret
pop
arpl
scas
lds
fimull
push
jne
ss
bnd
lock
mov
jo
pop
cmpsl
scas
faddp
cmp
mov
lcall
mov
sub
addr16
lret
in
aas
inc
test
sbb
inc
push
mov
adcb
xchg
xchg
sbb
push
xchg
or
cmp
into
xor
pop
stos
loope
stos
cmpsl
mov
inc
sahf
add
push
decl
jns
lcall
inc
pop
cwtl
scas
mov
adc
jecxz
push
bnd
and
adc
push
pop
call
and
xor
jae
leave
lds
or
xor
adc
pop
pop
sbb
jp
xor
xor
test
add
mov
outsb
cmp
lods
xor
mov
xchg
lahf
sbb
lods
xchg
inc
outsl
lret
jo
pushf
rcl
mov
dec
movsl
std
pop
pop
jb
aaa
inc
mov
mov
jle
popa
es
jbe
out
push
in
xor
out
push
sbb
cld
add
xor
shrl
fcoml
lods
xor
repz
and
movsl
lods
jge
cli
jae
xor
jae
aaa
std
mov
fucomip
ret
cmp
mov
jl
outsb
ja
jmp
insb
stos
test
xlat
push
sbb
mov
pop
mov
sbb
mov
xor
call
int3
lahf
daa
out
lcall
negl
push
jp
mov
in
insl
call
add
add
mov
je
mov
or
inc
jp
inc
test
nop
out
popa
aam
rorb
cld
adc
mov
and
fcmove
shl
sti
test
lret
shl
sub
mov
inc
and
leave
std
jl
lods
in
icebp
xor
subl
data16
mov
push
rclb
repnz
jg
push
inc
adc
adc
jl
insl
dec
pushf
mov
fistl
mov
int
jns
lea
and
jns
sti
push
mov
fimull
outsl
lds
jecxz
and
fidivl
sbb
test
fidivrl
mov
out
mov
or
mov
cld
sub
jne
gs
mov
xchg
lds
sbb
cmp
lods
bound
out
nop
std
inc
sub
psrlw
fistpl
push
aaa
adc
push
adc
in
aam
jge
push
xchg
sub
mov
loop
push
dec
jmp
repnz
jmp
mov
ljmp
push
addb
or
adc
aaa
xchg
rolb
xchg
hlt
add
ret
xorb
lods
mov
xchg
sub
out
add
xor
mov
popa
fists
jae
mov
mov
lahf
xchg
dec
out
or
pop
mov
dec
fdivp
and
jge
dec
dec
fimuls
pop
adc
dec
js
es
inc
cmp
xor
mov
jle
je
jnp
push
push
pextrw
pop
testl
cmpsb
outsb
mov
jp
cmp
cltd
and
add
push
enter
and
xor
add
outsb
push
rcrl
inc
fdivrs
pop
xchg
or
cs
rcrb
sti
test
gs
nop
jbe
outsb
lods
ror
mov
add
mov
dec
clc
xor
adc
adc
xchg
pop
nop
dec
sub
xor
and
mov
jecxz
jl
push
loop
in
fs
adc
mov
add
fildll
jns
jge
sarl
insl
repz
inc
cmpsb
sbb
jne
pop
xchg
flds
subb
mov
dec
and
ss
lods
jo,pn
lret
jne
flds
je
and
xlat
cmp
adc
or
dec
pop
push
fcompl
and
add
inc
mov
das
stc
and
lret
xor
bound
loop
push
xchg
movsl
lock
lcall
ds
cmpsl
jp
lret
add
popa
js
flds
nop
jle
insb
adc
inc
dec
rcrl
stos
sub
push
cli
or
mov
insb
add
mov
sub
lods
lods
cmp
ret
enter
pop
jne
sahf
xchg
xor
rcrl
jb
or
add
and
and
mov
push
xchg
mov
or
or
fisttpll
stc
pop
dec
je
ffree
xchg
or
pop
sub
mulb
sbb
mov
aam
add
test
mov
dec
sbb
ljmp
mov
push
cmp
imul
popa
adcb
imul
mov
fisttpll
sub
jp
push
pop
iret
dec
aas
mov
jp
pop
fimull
mov
sbb
push
pop
iret
dec
aas
mov
jp
pop
fimull
mov
bound
ret
iret
dec
aas
bound
stos
sbb
imul
cli
jle
mov
fwait
sub
jp
push
fimull
rolb
mov
paddw
jb
adc
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
or
cmp
add
jo
mov
fwait
push
stos
add
fisubrl
or
cmp
push
jp
mov
mov
inc
ljmp
inc
sub
cmp
dec
in
lea
jp
mov
mov
and
sarl
sub
push
rolb
andb
push
cli
and
into
mov
cs
xchg
xchg
inc
jbe
lds
rcrb
or
stc
push
lret
xor
ja
pop
std
adc
sub
cmp
cmp
add
into
adc
lcall
mov
inc
mov
movsl
insl
rorl
xor
pop
in
lret
xor
mov
sbb
inc
cli
js
dec
lds
out
jmp
ss
push
das
aad
aad
aas
and
call
jmp
lcall
fldl
push
push
jecxz
dec
lcall
shufps
movsl
sub
cmp
push
jp
mov
mov
stos
ljmp
ljmp
sub
mov
jne
nop
ret
adc
sub
sarl
dec
push
leave
dec
xchg
xchg
adc
jo
addr16
inc
xchg
push
outsl
out
gs
fsts
push
cltd
pop
lds
jp
mov
mov
inc
ljmp
test
mov
movsl
dec
aad
lds
jp
mov
mov
inc
ljmp
shll
mov
int3
sbbl
test
mov
cmp
call
mov
lock
mov
loop
sbb
push
and
lock
and
repnz
push
shlb
push
sar
and
jecxz
outsb
add
jecxz
add
lret
outsb
lock
cmpb
push
sub
xlat
hlt
and
je
dec
mov
sbb
idiv
subl
and
xchg
mov
push
testl
jecxz
subb
aaa
sbb
inc
enter
and
jmp
shlb
and
sub
imul
notb
outsb
les
inc
mov
test
or
movsb
loop
imul
or
xchg
into
cmp
or
sahf
xlat
stc
mov
insb
inc
ficompl
sbb
loop
pop
xchg
mov
xor
movsl
scas
jb
adc
stos
les
cmp
and
adc
mov
imul
xchg
mov
xchg
movsb
sub
insl
push
mov
inc
push
stos
mov
int
xor
idivb
sbb
test
dec
inc
adc
lea
pusha
inc
outsl
imull
jbe
mov
jl
loopne
xor
bound
adc
stos
pop
inc
add
xchg
sbb
inc
sbbl
int
dec
push
addr16
mov
out
ret
sbb
dec
std
cmp
es
in
sbb
mov
imull
mull
imull
pop
mov
cmc
mov
addl
inc
cmp
lahf
mov
pop
push
and
pop
mov
dec
stos
mov
icebp
jno
ret
dec
addr16
mov
ja
mul
outsb
in
add
and
rol
inc
insb
mov
movsb
lea
popa
test
shll
arpl
jb
adc
insb
int
lret
xor
jns
jmp
sub
cmp
xchg
scas
mov
stos
push
inc
or
sbb
mov
mov
or
add
push
mov
mov
cltd
rolb
xchg
or
incl
push
adc
mov
xor
sbb
ljmp
xchg
or
cltd
dec
inc
sbb
and
sub
push
inc
jnp
inc
in
sahf
sub
push
inc
mov
xchg
add
jns
into
insb
cli
rolb
je
mov
lret
fdivr
push
jbe
mov
aad
loop
or
mov
sbb
fwait
leave
ficoms
pop
add
dec
push
push
xchg
icebp
cld
lret
sbb
clc
mov
inc
es
xchg
lcall
nop
daa
jge
sub
xchg
in
enter
or
ss
xor
dec
lret
cmp
ret
jp
mov
jp
or
aaa
mov
les
fst
or
in
stos
int3
loop
out
mov
dec
cmpsl
call
enter
or
sbb
mov
jnp
and
data16
push
xchg
mov
cmp
addr16
xor
pop
pop
pop
cmpb
cmp
pushf
mov
testl
jbe
xchg
pop
add
lcall
jae
sbb
sub
lea
pop
orl
leave
out
imul
movnti
adc
in
sub
mov
je
aaa
sti
jns
or
push
lds
inc
add
sub
sub
out
pop
into
jns
popf
aas
sbb
stos
je
lret
fmuls
insl
outsl
orb
xor
dec
ja
mov
sbb
lea
sbb
mov
jmp
hlt
cmp
sbb
sahf
pop
xchg
add
and
push
mov
sbbb
add
mov
or
xchg
ret
loop
sbb
ret
or
sub
repnz
rclb
inc
cmp
cs
push
test
and
dec
rorb
mov
cmpsb
mov
inc
pop
adc
jno
cld
in
push
or
rcll
xchg
hlt
nop
int3
andl
js
je
out
jo
xchg
out
inc
cmp
mov
pop
ret
roll
stc
outsl
lahf
inc
fmull
ja
imul
pop
out
mov
mov
fnstcw
ja
into
fmuls
push
addl
mov
or
mov
jb
xor
fldenv
or
and
xchg
jo
mov
sbb
movsb
and
pop
fsts
push
insb
mov
adcl
cmc
andl
push
mov
sub
outsb
or
pop
add
sub
rcrl
data16
rol
pusha
popl
and
fisttpl
addr16
and
push
xlat
inc
cltd
sbb
or
xor
mov
out
loope
push
aad
fisttpl
inc
test
pop
jmp
adc
dec
pop
imul
pushf
std
das
inc
sti
dec
pop
cli
sbb
daa
popf
and
fdivs
mov
xchg
or
iret
inc
add
aaa
mov
fnstsw
jae
lret
fiaddl
cwtl
push
cmp
stos
mov
scas
jb
in
inc
cwtl
mov
dec
notl
dec
xchg
icebp
dec
jl
jecxz
push
jno
cmp
push
jae
pop
outsb
jmp
dec
cltd
test
fs
divb
pop
shr
mov
jl
ja
jb
push
test
or
mov
sbb
das
sbb
fwait
mov
cltd
cmpsb
pop
mov
jnp
inc
daa
scas
sub
adc
push
out
pop
jge
cli
mov
sbb
stc
loope
cmc
out
lret
mov
add
dec
mov
aad
push
lock
movsb
cmp
and
imul
test
jb
pop
xor
jns
cmp
fwait
xchg
pusha
enter
adc
lds
dec
sub
je
mov
insl
lret
cmp
mov
xor
dec
xlat
out
bound
mov
les
lock
sahf
aaa
dec
in
out
inc
ss
sbb
test
addr16
fiadds
aaa
jle
cld
cmp
ret
lods
stos
sub
inc
cmp
mov
jns
and
add
or
fbstp
dec
cli
or
daa
scas
adc
dec
inc
out
fsubrp
iret
in
test
cmpsl
popf
jle
push
fmull
es
mov
repnz
sub
popa
int
stos
mov
cmp
in
adc
xorb
jp
insl
cmpsb
and
push
insb
jl
pop
data16
mov
and
jae
fmuls
xchg
lret
mov
lret
into
mov
mov
pushf
dec
pop
cmp
dec
js
int
jb
mov
shl
pop
lcall
stos
stos
adc
in
fdivrl
cltd
repz
aaa
adc
ds
repnz
rclb
insl
mov
cmp
shl
add
dec
xchg
push
adc
daa
inc
lret
sbb
mov
push
cwtl
out
push
adc
popf
cmp
mov
mov
ret
mov
in
push
callw
mov
roll
test
mov
pop
cmp
bound
in
push
and
popf
xchg
rsqrtps
push
test
dec
add
test
fsubrs
jg
xor
sub
jne
outsl
mov
sbb
psrad
cmp
mov
rorb
in
push
rolb
or
or
dec
lahf
pusha
data16
lcall
mov
mov
popa
jno
lds
push
fidivrs
fwait
mov
or
pop
popa
movsl
loopne
clc
push
stos
pop
xchg
and
lock
mov
pop
js
push
jo
cmpsb
ret
imul
daa
stc
ficompl
adc
sarb
sbb
dec
mov
ficoms
inc
xchg
jp
out
sti
enter
jg
andl
jge
jno
jne
inc
mov
jnp
sbb
cld
cli
lds
and
xor
jnp
popa
mov
fcomps
jmp
mov
stos
leave
fs
or
cwtl
bound
mov
popl
andb
add
mov
mov
cmp
and
leave
enter
call
cltd
in
sbb
pop
leave
in
ss
loope
fdivrl
xor
inc
pushf
push
enter
xchg
push
push
das
out
lock
js
clc
cli
jp
dec
push
and
ljmp
xchg
xchg
pusha
inc
xor
in
sub
ds
test
pusha
push
mov
sbb
hlt
add
daa
pusha
jno
sub
inc
dec
rcr
scas
inc
jmp
clc
push
sbb
clc
fisubl
jp
add
jg
add
jl
dec
pushf
orb
push
mov
mov
sub
xor
adc
test
cmp
sub
mov
stos
inc
dec
je
sbb
push
or
and
inc
ljmp
add
pop
pushf
imul
adc
loopne
push
outsb
sub
xchg
mov
cld
pop
test
push
xchg
pop
std
mov
in
xchg
fcoms
inc
stos
mov
int3
cmpsb
add
cmp
dec
jae
out
dec
pop
dec
ss
add
in
mov
and
adc
imul
add
dec
lahf
in
repz
push
aam
or
mov
inc
jp
and
jnp
sbb
push
fidivrl
adc
pop
xchg
jb
lret
adc
loop
js
inc
adc
fdiv
out
popa
cmp
mulb
xlat
out
ja
lea
cmp
pop
inc
test
pop
scas
mov
mov
push
out
add
inc
xchg
fadd
outsb
sbb
repz
call
and
jecxz
stc
jmp
sub
lret
or
xchg
aam
fs
jo
cmc
xor
test
popf
or
mov
ret
cmp
add
and
push
scas
call
xorl
jbe
and
jbe
xor
cld
mov
and
push
js
out
scas
mov
not
mov
fs
arpl
adc
or
dec
push
jle
dec
aaa
push
push
jae
pop
sahf
mov
cmpsb
call
repz
sahf
cwtl
test
std
es
sahf
and
enter
cmp
lods
push
std
fwait
mov
push
test
lahf
cmp
insb
mov
hlt
cwtl
add
das
sbb
mov
in
or
sbb
dec
mov
gs
mov
fists
aaa
scas
or
stos
js
xchg
js
sbb
cmpsl
sbb
loope
fbstp
aad
mov
jg
and
adc
nop
rol
sub
cmp
jge
hlt
popa
les
adc
mov
push
std
fdivrs
xchg
out
mov
clc
stos
pushf
mov
sbb
push
jns
mov
pop
adc
fmuls
jp
jecxz
dec
ficomps
jns,pt
mov
aaa
pop
in
inc
jae
mov
sbb
inc
mov
mov
inc
xor
mov
pop
lahf
and
jae
aam
repnz
jmp
jp
rolb
cltd
hlt
mov
lods
lret
dec
cmp
push
jmp
icebp
mov
push
inc
leave
dec
lahf
movsb
les
sub
mov
add
movsb
push
inc
cmc
daa
cwtl
jae
mov
int
out
and
loop
dec
les
sbb
shl
ficompl
push
cltd
pushf
lods
arpl
sub
cmpb
push
aaa
fbld
pop
cmp
cli
rol
cmp
inc
stos
mov
iret
mov
mull
sub
scas
shll
pop
and
mov
and
loop
out
push
fimull
packssdw
imul
in
in
into
popa
aas
inc
mov
cmp
popf
mov
test
fucom
add
mov
mov
xchg
imul
mov
and
push
xchg
xchg
mov
mov
stos
shlb
fstps
inc
lds
clts
mov
lret
roll
rcll
lret
cwtl
mov
push
in
popa
mov
gs
jne
lahf
aas
bound
or
inc
cmc
jp
xor
rcl
jb
orl
xchg
push
fsubrl
adcl
pushf
outsl
insl
mov
aaa
lea
mov
fs
sub
pop
es
xor
jbe
je
mov
sbb
ret
and
test
imul
sbb
adc
add
jno
sahf
out
iret
adc
cmp
xor
mov
jae
push
shlb
cmp
mov
pop
jne
data16
ljmp
push
in
movsb
movsl
subl
xor
test
mov
fnstsw
sbb
fldenv
inc
adc
pop
pop
push
mov
cmpsb
pop
pop
fisubs
inc
dec
stc
inc
xor
mov
je
std
fisubs
cmp
pop
fimull
fwait
lcall
jo
mov
mov
or
cld
outsl
rcrl
cld
add
cmpsb
ret
adc
mov
rcll
out
mov
dec
mov
scas
xchg
xor
jecxz
ret
daa
cli
jp
and
js
loopne
add
rol
mov
inc
xlat
jns,pn
dec
pop
mov
cmp
add
lret
inc
out
adc
mov
cwtl
adc
sub
cwtl
push
dec
aam
mov
negb
and
cmp
adc
jl
dec
push
mov
cs
push
pop
popf
orb
cmc
xor
adc
or
leave
adc
xchg
es
push
imul
and
pusha
adc
stos
in
lods
fwait
add
jle
aaa
enter
lock
or
dec
add
cmp
inc
or
inc
sbb
mov
les
push
jge
mov
in
mov
aad
xchg
sbb
xor
or
js
and
stos
mov
and
pop
dec
inc
lret
mov
cs
mov
mov
sbb
pop
sbb
fmuls
dec
stos
mov
pusha
in
cmc
cmp
lock
mov
movsb
adc
mov
jne
adc
sub
lds
add
and
orb
mov
in
out
insl
inc
fwait
gs
xchg
shrw
cld
and
sarl
mov
decl
or
mov
hlt
jle
and
sub
inc
out
sbbb
lods
ret
sub
xchg
lea
add
flds
dec
loopne
dec
xchg
mov
mov
cmc
scas
adc
sub
popf
jecxz
push
push
in
cli
push
dec
cli
xchg
dec
test
rcll
adc
pop
sbb
rorb
pushf
inc
xchg
imul
mov
pop
or
or
jne
sbb
jecxz
inc
and
ljmp
pusha
and
aaa
push
jmp
mov
pop
or
cmp
cwtl
jp
add
jmp
clc
xor
lds
xor
scas
add
das
xchg
das
outsl
shrb
and
cmpsl
aam
leave
movsl
data16
insb
aam
cmpb
aas
mov
shlb
jne
xorl
jne
mov
cwtl
push
outsl
mov
ds
adc
jb,pt
ret
sti
or
cmp
mov
mov
jae,pt
cmpsb
lock
jo
mov
jns
movsb
adc
sub
jg
arpl
and
xchg
cmp
jp
mov
jbe
das
data16
insb
je
in
in
lret
cli
dec
xor
popa
inc
insb
mov
xchg
jg
mov
outsb
mov
mov
in
cmp
mov
data16
inc
jnp
rcll
adc
dec
push
dec
in
inc
bound
and
lret
adcl
or
push
movsb
jle
jp
jns
ret
ljmp
loope
incl
shl
ja
int
xchg
xchg
xlat
call
jb
add
stc
in
pop
in
jns
rcrb
xchg
outsb
push
sub
adc
cltd
dec
jnp
jbe
repz
ja
cmp
sbb
pop
xor
push
sbb
jo
pop
imul
jl
stos
notb
pop
mov
sbb
cmp
popf
das
iret
push
test
dec
push
and
imul
jl
lock
adc
rclb
add
imul
push
int
out
shrb
movsb
xchg
adc
jp
movsb
cmpb
test
add
and
push
mov
cld
jae
aad
sbb
inc
cld
out
js
add
pop
aam
in
pop
cmpsb
cli
cmp
xor
in
pop
or
add
push
stc
int
lea
push
sbb
sub
cmp
ja
out
int
std
dec
adc
iret
sbb
jns
mov
push
mov
loopne
sahf
in
loop
push
adc
mov
scas
cmp
sbb
cmpsl
test
jp
or
lret
iret
pop
mov
sbb
jns
rcll
pop
jp
mov
outsl
in
push
mov
sbb
sub
popf
out
lods
imul
mov
into
mov
mov
inc
mov
cld
jnp
daa
into
das
cmc
enter
ljmp
mov
pushf
movsl
insl
push
cltd
cmpb
loop
xchg
test
ret
sarb
mov
clc
sub
sub
add
mov
loopne
mov
inc
adc
sti
ret
pop
mov
jbe
cmp
iret
ja
mov
nop
add
mov
jle
pusha
mov
adc
inc
arpl
and
xor
mov
shlb
sahf
mov
outsl
and
adc
pop
sbb
icebp
mov
hlt
cld
inc
ss
add
add
clc
or
jo
push
fwait
outsl
xchg
mov
stc
or
shlb
jg
daa
gs
daa
sbb
mov
xlat
adc
inc
dec
push
cmpsb
and
jae
insl
adc
into
arpl
stos
pop
jno
int
sbb
stc
add
mov
repnz
lret
cwtl
mov
jno
mov
inc
aaa
mov
enter
jno
adc
inc
dec
mov
addb
fsub
mov
adc
test
aam
stos
xor
sub
sbb
pop
fdivs
ss
mov
filds
jb
adc
movsb
fldcw
insb
jmp
adc
adc
add
icebp
push
pop
pop
jb
out
mov
jnp
shr
xor
and
mov
push
in
push
jge
xchg
push
mov
gs
push
pop
and
cli
dec
fcmovnu
jo
pop
aam
mov
les
push
dec
cltd
xchg
jno
iret
add
xor
imul
jae
scas
add
jne
and
inc
das
inc
pop
sbb
inc
mov
xchg
in
fsubr
xchg
outsb
xchg
mov
ds
jp
loope
shrl
sbb
cmpsb
fisubrs
aas
pop
in
add
shll
test
jne
sbb
cmp
adc
lds
pop
or
cli
inc
pop
mov
sub
iret
sahf
mov
xchg
fmuls
test
cmc
pop
int3
cmp
not
pop
push
dec
add
clc
adc
test
cltd
test
sbb
test
cmc
mov
jne
xor
mov
xor
enter
adc
test
int3
hlt
ret
mov
xchg
enter
jbe
rolb
in
andb
push
aas
xor
es
or
lock
cltd
fcmovu
mov
inc
sbb
arpl
lahf
cmp
loope
aad
adc
mov
scas
loope
cmp
roll
lret
and
cld
stos
cltd
adc
mov
jb
jecxz
idivl
or
cmp
jl
mov
cwtl
cld
fmuls
mov
or
jg
sub
sub
ficoms
dec
nop
mov
xor
lds
fidivs
xchg
or
cmp
inc
les
mov
add
jnp
add
cld
mov
xchg
xor
insb
pop
or
adc
icebp
xlat
add
sbb
fdivr
xchg
loope
add
push
scas
add
movsl
jbe
inc
add
int
jle
sahf
mov
cmp
fs
ds
jb
fnstenv
imul
or
inc
xor
or
mov
lcall
mov
into
pop
sub
jg
pop
adc
mov
dec
dec
icebp
mov
push
fisttps
stos
pop
pop
jl
in
int
lret
mov
jmp
lea
jle
push
sbb
into
adc
adc
loop
cwtl
insl
pusha
cmp
adc
stos
je
into
pop
mov
in
test
aaa
xor
adc
pop
add
sbb
fsubl
ret
lock
or
mov
mov
lods
out
mov
push
push
das
pop
mov
stc
and
mov
and
dec
jae
test
xor
fnstcw
xor
xor
shrb
xchg
fmul
dec
idivb
push
subl
ret
leave
sub
test
pop
xor
inc
mov
inc
xchg
push
rol
into
jp
sub
inc
ret
push
pop
and
pop
icebp
push
mov
addr16
movsl
dec
aad
lds
jp
mov
mov
inc
ljmp
test
mov
movsl
dec
aad
lds
jp
mov
mov
inc
ljmp
mov
aad
scas
push
cli
in
adc
add
push
fiaddl
jl
orl
push
cmp
dec
aad
lds
jp
mov
lcall
sub
mov
inc
or
adc
add
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
jno
bound
dec
inc
pop
xor
push
push
xor
sbb
fcmovb
fdivs
lcall
ds
inc
pop
xor
and
adc
add
bnd
ret
leave
mov
lcall
lcall
adc
add
mov
rcl
lcall
sub
lds
jecxz
xchg
sub
mov
shll
into
dec
mov
inc
mov
rcrl
cmpsb
sbb
mov
xchg
add
xchg
adc
fimull
out
xchg
mov
mov
push
ds
jl
cmp
jle
mulb
ret
mov
mov
jp
dec
scas
push
or
cli
in
push
add
repz
cmp
dec
stc
mov
lock
fwait
jb
fistpll
cltd
pop
mov
shlb
cli
rorb
mov
lea
lcall
lret
fucomi
xor
xchg
shr
out
pop
fbstp
lret
icebp
iret
xchg
jne
mov
push
insl
push
pop
inc
inc
sub
adc
movsb
add
js
movsb
shl
ret
cli
mov
lods
mov
movups
dec
cmp
jl
push
data16
xorl
rol
jmp
aas
adc
jp
cmp
pop
pop
pop
inc
or
outsb
push
jbe
xchg
mov
sarb
int
sti
out
lcall
sub
pop
xor
adc
popa
inc
and
adc
add
repnz
mov
mov
lcall
inc
pop
xor
and
adc
add
repnz
mov
mov
lcall
orb
lret
mov
repnz
jl
xchg
mov
jmp
xchg
dec
cmpsl
and
xchg
scas
mov
into
adc
dec
out
out
fwait
addb
or
sub
jp
xor
and
mov
pop
mov
subb
lods
test
adc
mov
out
arpl
clc
loop
adc
cmp
std
jne
jge
clc
stos
cmc
in
mov
inc
pop
insb
lret
push
cli
or
stc
push
and
lea
dec
loop
inc
in
mov
pop
scas
fdiv
and
dec
add
add
add
lds
enter
mov
bound
inc
aaa
xchg
cli
test
inc
xchg
pop
xor
in
xor
loopne
sti
fidivrs
cmp
xchg
sbb
pop
add
in
pop
aad
xchg
sub
fidivrs
jbe
in
or
es
fcompl
test
dec
jns
mov
mov
mov
cs
push
cwtl
lea
ret
ror
and
imul
mov
sbb
and
sbb
pushf
push
xor
pop
int
add
test
jg
out
sar
pop
cmp
sbbb
test
inc
pop
cmc
cld
addr16
add
loopne
repz
mov
and
fdiv
scas
jmp
mov
jmp
xchg
in
cltd
dec
sbb
fidivs
xlat
push
lea
cld
push
out
pushl
xor
ret
mov
fcomp
adc
ljmp
push
cli
cld
andb
jmp
mov
dec
and
arpl
arpl
pushf
int3
jne
inc
jne
fsubrs
mov
xor
rcll
push
nop
lret
pop
dec
cld
push
xor
xlat
xchg
cli
sub
add
xor
bound
mov
adc
cld
sbb
mov
add
xchg
mov
or
aas
cli
sbb
pop
stos
out
jo
sub
fisubs
imul
popl
push
in
stos
mov
or
mov
add
jmp
es
sub
xor
inc
mov
adc
or
ret
bound
xchg
cmp
lock
fbstp
loopne
mov
sahf
jecxz
leave
inc
inc
repnz
and
xor
cli
sbb
ljmp
add
insl
sbb
ja
inc
aaa
and
adc
mov
lods
mov
outsl
xchg
pop
jno
inc
sub
sbb
stc
push
mov
ja
push
or
cmp
outsb
ljmp
and
repz
shlb
popf
xchg
je
jle
jb
sti
stos
sub
inc
add
inc
jecxz
lret
imul
cmpsl
les
in
inc
leave
pop
jmp
ja
out
xchg
adc
cmp
fistpll
inc
rol
inc
faddl
ficoml
mov
rcrb
push
sbb
fsts
pop
jnp
fdiv
int3
lea
sub
cmp
add
jl
dec
sub
icebp
mov
push
mov
dec
jle
jo
addr16
xchg
xchg
or
fs
data16
pusha
pushf
stos
adcb
mov
shl
xor
pop
lock
aaa
shlb
xchg
jne
popa
aas
sbb
sbb
adc
loope
fnstcw
cmp
add
jp
cs
add
sbb
pop
push
mov
jnp
xchg
rclb
ljmp
inc
fiadds
addl
or
aam
pusha
jle
sub
mov
or
scas
push
sub
int3
push
sahf
jmp
dec
lea
mov
fidivrs
cmc
aas
sbb
js
fs
add
fiadds
lock
inc
pmaxub
xlat
mov
imul
std
pop
aad
cmp
int3
pop
sub
inc
inc
js
dec
cmp
sbb
xchg
sti
stos
scas
xchg
ss
jae
jb
lds
das
xor
mov
stc
aaa
fisttpl
sub
aad
adc
mov
cmpsb
fs
jae
xchg
pusha
push
pusha
adc
xchg
or
add
movsl
add
mov
jl
test
add
adc
xor
test
int3
mov
test
test
je
aam
sub
push
sub
inc
in
mov
mov
daa
and
sbbb
jg
stos
in
in
into
mov
cmp
or
cmp
shll
mov
incb
out
jae
dec
jno
jne
push
into
repz
pop
inc
adc
push
icebp
xchg
cmp
inc
mov
repz
out
sbb
dec
and
cmp
jns
lret
fbld
insb
cmp
cli
mov
sub
test
jecxz
addr16
mov
mov
mov
cmp
test
sbb
xor
push
out
mov
sbb
or
dec
testl
addr16
aas
xchg
lcall
lock
rolb
in
dec
loop
push
sub
inc
rol
imul
ss
std
ret
mov
add
pop
adc
pop
lahf
push
xchg
call
push
push
sub
mov
xchg
arpl
jle
sbb
sub
cs
mov
lret
call
xor
stos
mov
dec
mov
shl
bound
stos
dec
shll
es
cmp
ds
adc
mov
jo
mov
dec
fisttpl
push
das
scas
outsl
push
add
dec
mov
mov
pop
xchg
icebp
cmp
loopne
mov
bound
dec
xchg
mov
mov
leave
lea
adc
push
add
into
and
in
fldl
cmp
cmp
test
jbe
in
into
xlat
mov
cmpsb
cmpsb
lret
and
jo
xor
inc
mov
sbb
shrl
xchg
add
or
in
push
testb
pop
or
mov
iret
es
push
or
es
fwait
mov
inc
xchg
mov
jl
sub
ds
and
pop
clc
sti
mov
rorb
lock
pop
and
or
jno
or
push
jmp
into
lret
adc
xor
xlat
jecxz
pop
icebp
dec
test
sub
cmpb
jp
cmp
imul
outsl
sub
jg
mov
adc
in
leave
subps
mov
xor
aad
or
adc
sbb
frstor
xlat
iret
sub
jle
stos
and
sub
mov
dec
gs
into
pop
pushf
pop
sarl
sbb
jge
mov
and
cmp
sbb
popf
inc
shl
push
mov
inc
and
add
loope
lcall
pop
in
pop
sti
pop
mov
dec
lahf
in
xlat
dec
ret
enter
ret
test
pop
mov
cs
dec
rorl
imul
or
std
std
jno
adc
sahf
mulb
mov
filds
jae
mov
and
push
ds
sbb
jno
test
mov
andl
scas
pushl
dec
jmp
push
js
sbb
push
mov
ficoml
xchg
cmp
mov
dec
jno
push
pusha
push
sbb
shl
jo
cs
int
loopne
cmp
mov
sar
scas
gs
cmp
loope
adc
hlt
repnz
lock
outsl
cld
sub
mov
pop
push
add
xorl
mov
scas
dec
test
in
fwait
cmp
inc
sub
jle
add
adc
loop
aad
js
imul
div
sti
push
cmp
aas
mov
jbe
mov
xlat
dec
ror
inc
jo
jg
xorb
mov
adc
xchg
movl
mov
dec
xor
mov
sti
jb
in
rcll
sti
test
push
add
mov
push
xor
mov
out
subb
les
xchg
pop
and
popa
xor
jge
sub
mov
dec
out
and
test
cmp
ljmp
inc
cmp
arpl
xchg
mov
fidivrs
push
jae
addb
inc
push
loop
mov
lds
cmp
jecxz
mov
lods
ljmp
lahf
adc
sub
sbbb
stos
mov
cs
pop
sbb
mov
cmp
jns
testb
cmp
lcall
or
bound
add
xor
jnp
test
add
xor
xor
dec
out
les
push
or
push
fadds
stc
nopl
lcall
cmc
ret
push
pop
adc
loope
mov
dec
push
adc
fwait
cmp
mov
arpl
inc
add
jne
int
out
push
pop
mov
adc
hlt
incb
push
inc
mov
dec
or
sub
cs
mov
pop
stos
addl
push
clc
aam
pop
pop
roll
pusha
fstps
pop
fiadds
pop
call
enter
add
fucomip
imul
mov
lcall
mov
push
mov
addr16
stos
inc
or
sub
mov
push
mov
iret
imul
add
push
icebp
dec
dec
cli
xlat
mov
dec
adc
add
rcrl
or
jb
sub
jecxz
pop
sbb
test
das
fdivrl
mov
pop
outsb
addl
mov
sub
ds
inc
xchg
arpl
cmpsb
jae
lcall
out
hlt
lds
xlat
xchg
fs
jge
jne
mov
xor
xor
cs
loope
loope
sbb
and
stc
stos
push
scas
call
cmp
dec
xor
test
pushf
bound
mov
cmpsb
add
jl
ljmp
gs
pop
cli
mov
add
movsl
sbb
xchg
fisubrs
cmpsb
fbld
or
sbb
inc
jb
sub
dec
jne
inc
inc
mov
and
and
mov
ja
ljmp
into
std
xchg
cmpb
imul
in
sub
cltd
out
das
das
mov
sub
xchg
xor
aam
aas
push
in
push
pop
or
shl
inc
jecxz
dec
or
int3
aad
inc
jnp
sbb
fdivr
test
stc
aas
call
cmovae
inc
mov
pushl
icebp
sub
psubusw
cli
sub
dec
js
xor
sbb
mov
mov
push
outsb
dec
sub
mov
fildll
mov
rolb
sbb
mov
pushf
mov
adc
dec
aad
xchg
sahf
jae
insb
mov
pop
jmp
shlb
sbb
pop
ret
sub
xchg
jp
add
jb
test
add
cs
stos
pushf
into
test
test
push
xchg
sbb
je
fs
mov
jnp
sub
xchg
jecxz
clc
jge
fbld
lds
sub
mov
outsl
cld
movsb
mov
jmp
push
mov
pop
pop
or
sbb
cmp
jg
cmpsb
cmc
pop
mov
rorb
jns
stc
jno
addb
sbbb
repnz
es
jle
add
and
add
icebp
sub
cmovge
inc
loopne
addr16
sub
repz
xorb
int3
int3
jmp
push
push
out
xor
in
jge
mov
aaa
and
fld
mov
and
inc
mov
xor
js
shr
fucomi
add
or
push
fmull
jge
ja
push
mov
test
xchg
add
in
mov
scas
and
push
push
orl
or
sbb
in
mov
xor
add
jle
xchg
gs
stos
pushf
out
cltd
mov
jae
push
and
xorb
mov
jnp
inc
filds
inc
insb
sbb
add
pop
xchg
fldcw
dec
and
aaa
mov
and
decl
in
xor
sub
icebp
fldenv
and
adc
jbe
xor
or
popa
jbe
shrb
sbb
mov
sbb
and
and
js
push
jno
lods
insl
jl
bound
xor
xchg
shll
adc
add
call
outsb
mull
jmp
and
sbb
lret
dec
jge
loope
cli
xchg
icebp
jno
push
test
cmp
int
and
add
and
out
not
movsb
pop
mov
cmp
inc
nop
pop
icebp
sub
mov
fists
scas
add
cmpsb
scas
xchg
jp
fsubrl
repz
es
in
push
dec
loope
outsb
cwtl
mov
repnz
xchg
cmp
sbb
repnz
sbb
mov
mov
in
mov
es
mov
es
lret
pop
daa
mull
mov
fstpl
push
pop
dec
enter
dec
popf
outsl
pop
sbb
adc
iret
fadds
mov
and
lcall
leave
or
add
mov
adc
shrb
cmpsb
inc
mov
add
inc
test
je
mov
data16
or
pop
mov
aaa
jb
xor
sbb
adc
orl
rolb
stc
mov
je
cmpsl
pop
xor
addl
daa
iret
xor
int
mov
bound
push
inc
sbb
cmc
inc
into
test
lahf
mov
out
pop
sbb
shlb
sub
aaa
push
sbb
mov
lea
adcb
mov
mov
mov
adc
pop
arpl
xchg
or
ret
icebp
lret
adc
lods
vpunpcklqdq
pop
pop
mov
push
ja
repnz
sti
andb
add
fnstcw
outsb
and
xor
sub
cmpsl
push
push
ret
insb
push
ds
or
cmpl
fildll
add
cmc
xor
lds
mov
ret
pop
aad
pop
rolb
shll
push
mov
add
cli
xchg
jmp
xchg
cmp
mov
adc
fcompl
mov
mov
lahf
data16
cld
out
das
fisubrl
pop
xchg
mov
mov
mov
stos
pop
dec
out
add
mov
in
adcb
mov
ds
sbb
test
pop
jecxz
xor
inc
movsb
addb
mov
and
sarl
shll
data16
inc
mov
repz
sbb
leave
into
lahf
mov
ret
dec
or
add
fisttps
in
pop
into
lds
fisubs
xor
mov
push
xchg
js
ljmp
stos
outsl
fsubs
pop
int
and
lahf
dec
addr16
jo
pop
mov
pop
jmp
rep
rclb
mov
outsb
cmp
mov
lret
jecxz
test
pop
inc
fbstp
out
in
gs
jp
mov
pop
xor
xchg
and
inc
mov
cmpsb
add
xchg
mov
push
rcrl
add
gs
push
xchg
cmp
push
call
sub
jecxz
pop
xor
psubb
je
or
lea
xor
pusha
dec
sub
mov
insl
out
mov
sub
ljmp
xor
dec
add
into
or
pop
pop
sbb
arpl
aam
xlat
les
in
es
insb
push
clc
and
push
mov
insl
mov
popa
scas
add
je
pop
jns
xchg
pop
imul
or
lds
lock
jo
jae
or
imul
out
call
mov
push
movsl
fmul
xor
lret
negb
movsb
icebp
lods
leave
jnp
jmp
ss
pop
adc
mov
ja
jb
mov
pushf
movsl
dec
into
sub
pop
cmc
jbe
pop
mov
xor
sarb
mov
dec
sub
movsl
inc
mov
cmp
sarl
test
aad
loope
mov
sub
and
es
add
notl
rcrb
mov
push
lds
outsl
inc
fwait
mov
in
push
nop
xor
lret
sub
adc
and
fstl
fdivs
push
jns
int3
mov
and
xor
sbb
or
loopne
mov
adc
mov
sti
test
xor
jbe
daa
xchg
xlat
sub
dec
dec
jae
push
mov
add
adc
mov
jmp
lock
in
sub
jle
clc
pop
test
repnz
mov
fists
int3
dec
xor
push
adcl
js
sub
xchg
js
imul
cmc
mov
sub
sbb
add
or
inc
std
xchg
mov
jnp
or
imul
cmp
jnp
aas
lods
mov
rcrl
push
ja
outsl
out
repnz
outsb
dec
inc
mov
push
test
cmp
lahf
lods
ds
pop
push
fwait
pushf
jae
clc
jecxz
jg
fs
xchg
xlat
cmp
je
mov
fimuls
push
adc
fdivrl
out
mov
inc
add
mov
pop
lea
jecxz
inc
inc
movsb
and
dec
cli
popa
repnz
lcall
call
mov
out
movsl
xchg
cmc
js
mov
sbb
andl
push
mov
sub
jno
into
int
mov
and
lea
jb
push
les
ror
pop
adc
cli
lcall
jg
pushf
fldl
jge
sub
jns,pn
ja
pop
js
push
adc
fistpll
cmpsl
cld
arpl
mov
ja
mov
js
bound
lods
mov
call
pop
mov
jge
jae
fidivrl
cmp
mov
fsubrs
inc
loopne
lods
lods
sub
cmp
in
pop
push
sarb
mov
adc
scas
bound
das
jno
pop
in
stos
test
cmp
or
sub
cmpsb
dec
lret
int3
shl
loop
das
add
addb
mov
into
push
jne
mov
xchg
mov
mov
sahf
movsb
je
jge
sti
lock
xchg
pop
stc
lods
mov
loop
ret
rcrb
xchg
pop
cwtl
pop
in
inc
sahf
inc
ret
inc
add
adc
xlat
jl
pop
mov
push
test
dec
hlt
mov
lods
orl
test
shlb
mov
jnp
xor
add
push
lahf
push
pop
imul
add
test
push
ret
add
insl
mov
mov
int3
lret
push
popa
jle
inc
sbb
xchg
stos
xor
mov
aaa
arpl
stos
lret
add
loope
add
inc
mov
fsubrl
jno
mov
or
repnz
jnp
movsl
push
pop
stc
jg
jo
sbb
or
enter
adc
and
pop
outsb
popa
cltd
test
cmc
daa
or
movsl
in
push
arpl
cmc
bswap
and
mov
ds
sub
mov
jg
mov
push
ja
test
pop
rolb
movsb
inc
xor
push
int3
cmp
lret
lahf
insb
jbe
arpl
sub
dec
push
mov
jle
xchg
mov
add
pushl
or
dec
test
icebp
int3
stos
outsl
push
hlt
inc
xchg
mov
aaa
push
test
arpl
pusha
movsl
dec
sub
nop
nop
jmp
fstpl
out
add
sahf
es
cmc
fsubs
pusha
mov
ljmp
cmpsb
inc
xchg
xchg
add
xchg
sub
shl
xchg
jmp
xor
std
jns
cmp
int3
nop
es
mov
loopne
lea
and
call
mov
data16
iret
or
pop
ret
mov
fldenv
clc
sub
fmuls
or
rcrb
pop
adc
mull
pop
cmp
aad
test
push
daa
aam
test
xor
or
fcoml
or
scas
push
lret
dec
push
adc
or
aam
mov
in
jns
fcoml
jno
lea
push
stc
dec
outsb
aaa
pop
ftst
mov
outsl
fs
cwtl
jbe
push
jns
call
adc
cmp
xor
and
imul
pop
jmp
cmp
push
scas
ror
insb
imul
ja
repz
cwtl
lods
mov
push
pop
imul
jbe
xlat
add
and
mov
sub
sbb
push
mov
push
mov
dec
ljmp
ljmp
push
loopne
push
lea
fwait
js
or
jp
movsl
inc
pop
xor
and
adc
add
repnz
mov
mov
lcall
inc
pop
xor
and
adc
add
repnz
mov
mov
lcall
inc
pop
mov
or
sbb
ljmp
mov
mov
xchg
mov
pushw
jp
dec
bound
sub
cmp
or
push
js
ret
and
inc
insl
jne
gs
xchg
mov
push
mov
out
push
push
push
ds
push
dec
ret
outsb
jbe
data16
xchg
mov
into
imul
out
push
push
data16
pop
push
jle
jle
outsb
xchg
mov
out
out
out
mov
push
es
adc
sub
add
notw
fdiv
lea
into
and
cwtl
mov
push
mov
jbe
push
xchg
dec
int
jle
movsb
pop
shlb
rclb
pop
hlt
push
into
cmp
jnp
fwait
daa
stc
ret
stos
push
and
jle
xchg
aaa
popa
into
jb
dec
inc
call
pop
jne
or
icebp
stc
push
mulb
xchg
outsb
out
lahf
sbbl
and
iret
movb
out
sbb
leave
shll
cmp
mov
into
jbe
jns
xor
and
shll
ljmp
cmpsb
inc
dec
mov
jbe
outsb
jns
rclb
and
out
loope
addl
es
sbb
cmpl
xchg
xchg
faddp
div
out
push
push
push
es
es
push
push
inc
fs
pslld
jmp
fcmovnu
fcmove
lods
mov
out
mov
jae
jb
pop
dec
pusha
pop
aaa
sub
icebp
xchg
out
test
mov
aam
sahf
into
mov
pop
outsb
imul
outsl
dec
pop
xor
or
sti
aad
faddp
ret
xchg
into
imul
out
push
push
push
ds
push
dec
inc
jle
outsb
data16
xchg
mov
into
imul
out
push
push
push
ds
push
dec
inc
jle
outsb
data16
xchg
mov
loope
sbb
aas
hlt
dec
pop
shrb
sbb
add
xchg
mov
scas
cmp
pop
jb
lods
fistpl
je
fstl
out
and
xlat
outsl
dec
aad
cmp
sbb
sahf
mov
mov
lods
jp
not
push
les
lcall
dec
mov
dec
or
pop
inc
cmp
mov
and
and
movsl
movsb
lahf
leave
jmp
mov
jmp
ljmp
movsb
xchg
aad
lea
rcll
mov
pop
insb
push
mov
mov
inc
xchg
lods
dec
jge
out
insl
shlb
shlb
sub
out
mov
mov
ss
je
pop
adc
repnz
and
cmp
popf
loop
push
les
cmp
mov
fsubl
pushw
int
push
addb
aas
jg
xchg
add
lock
mov
into
in
pop
adc
xor
popf
inc
jp,pt
movsb
sbb
mov
rol
out
pop
adc
cwtl
shll
gs
jo
push
sbb
push
xchg
xchg
jge
mov
addl
leave
mov
inc
mov
call
cmp
jno
sub
adc
mov
lahf
test
pop
mov
in
cmp
cltd
icebp
cmp
jl
cli
inc
sahf
dec
sbb
push
and
repz
mov
scas
mov
movsbl
in
inc
add
sub
ret
in
pushf
and
insb
mov
xlat
stos
adc
arpl
xchg
push
aad
jno
mov
jl
xchg
mov
xor
pusha
jmp
imul
test
pop
insb
push
push
dec
inc
fidivs
adc
test
sub
inc
movsl
stos
pop
mov
adc
imul
int
xor
fldt
fwait
push
mov
xor
movsb
mov
movsl
ds
leave
dec
adc
push
out
dec
popa
rorb
hlt
jmp
add
repz
cltd
sbb
fs
loopne
xor
cmp
jmp
push
jle
stos
shrl
scas
in
or
clc
loope
stc
or
xchg
imul
mov
sbb
mov
leave
faddl
adc
int
sbb
push
xor
dec
or
orl
and
std
cmpsb
clc
adc
or
mov
scas
imul
mov
repz
insl
lods
inc
leave
shr
push
pop
insb
mov
clc
icebp
cs
push
std
les
jae
or
das
shll
mov
pop
pop
shrb
inc
xchg
xor
adc
push
loopne
push
push
bound
mov
add
popa
or
jo
loopne
out
pop
sbbb
pop
cld
ds
rol
repz
push
inc
add
imul
cmp
or
inc
rorl
xchg
add
daa
adc
test
sub
adc
xor
sbb
outsl
hlt
int
jmp
dec
pop
loop
sub
and
in
adc
pop
imul
loop
aaa
push
xchg
jno
negl
mov
xor
subb
sbb
fwait
lds
pop
mov
xor
movsb
lock
iret
mov
xor
jbe
sbb
clc
das
loop
scas
outsb
push
mov
repz
push
fmul
xchg
cld
inc
sbb
cmp
pcmpeqw
push
push
and
test
mov
cmp
jns
in
jae
lods
into
dec
mov
lret
xchg
fildl
movb
sbb
jno
mov
lock
sub
dec
mov
insl
push
mov
mov
pop
inc
push
add
hlt
cltd
rcrl
mov
xlat
test
repnz
mov
cmp
ret
push
loop
push
in
scas
daa
mov
push
and
in
insb
ficoms
cmp
add
mov
dec
orl
mov
gs
mov
ret
jle
stc
shrl
mov
in
sub
in
cmp
lret
pop
add
fiadds
icebp
ds
out
sarl
ljmp
inc
mov
sbb
or
ficoml
iret
cmp
jo
pop
dec
negb
or
push
inc
cwtl
fsubl
mov
into
dec
cmpsl
popa
stc
mov
adc
jns
fwait
mov
inc
mov
movq
and
and
ja
jge
adcl
sub
fildl
loopne
int3
inc
out
inc
imul
movsl
ret
repz
stos
mov
inc
loopne
out
mov
pop
into
insb
mov
sbb
adc
mov
and
loopne
lcall
push
out
cmc
add
sbb
popf
arpl
and
rcrb
mov
mov
nop
xor
cwtl
rcrb
pop
pusha
dec
add
mov
jmp
mov
sub
aaa
aaa
lahf
mov
fwait
xor
jo
sbb
dec
cmpsl
xchg
sbb
adc
mov
flds
sub
sub
adc
adc
and
int3
ficoms
jbe
mov
pop
jecxz
push
or
addl
xchg
xchg
xor
pop
fsubrl
dec
mov
pop
mov
add
lea
imul
jp
jmp
call
or
mov
and
cmp
mov
insl
pop
inc
call
mov
xchg
iret
pushf
mov
in
jle
jnp
test
and
in
mov
pop
mov
inc
std
or
add
rep
sbb
lods
pusha
imul
xor
mov
jecxz
xor
sbb
mov
mov
dec
xchg
das
insl
in
sbb
cmp
lret
into
xchg
ljmp
lret
xor
nop
xor
mov
xchg
loop
mov
sub
or
les
lds
int3
push
cmp
dec
sub
in
icebp
out
sti
les
adc
or
mov
push
cltd
scas
sbb
add
mov
sub
inc
ss
flds
repnz
jle
cmp
notb
das
fs
mov
pop
mov
xor
xchg
add
rcll
addr16
mov
xor
idivl
push
and
sbb
outsb
lods
add
movsl
or
out
jne
jnp
int
fcmovbe
testb
fisubrs
decb
ja
push
pop
mov
mov
mov
fnstcw
pop
or
pop
repz
jae
sub
dec
add
pop
dec
gs
cmpsl
mov
js
lock
mov
pop
lret
push
les
movsl
push
inc
adc
jg
cmpb
sbb
inc
adc
sub
lods
sbb
mov
xor
jnp
mov
sbb
cltd
rorl
mov
cli
mov
aas
shlb
xchg
inc
mov
cwtl
lahf
mov
mov
mov
subl
mov
or
cltd
mov
cs
outsl
fnstcw
mov
or
dec
push
pop
out
jns
xor
inc
push
xor
mov
ja
loope
shrl
stos
and
std
movsl
cwtl
movzwl
lods
sbb
inc
cmp
out
push
repz
mov
mov
mov
xchg
jg
pop
out
jbe
ret
dec
fcoml
xor
movsl
dec
cltd
enter
popa
or
or
ror
pop
add
mov
cmpsb
pop
xchg
clc
adc
cmp
add
sbb
lea
lret
jne
cmp
idivl
fcoms
jb
or
imul
into
lods
xchg
mov
nop
ror
in
jle
repnz
pop
inc
mov
enter
xchg
jp
scas
or
cld
or
bsf
add
loope
jmp
push
ja
jbe
ret
inc
lods
lret
pop
leave
icebp
sub
lea
sbb
dec
cmp
sub
ret
pop
xlat
cltd
cli
imul
adc
cmpb
mov
adcl
jb
loop
call
mulb
cs
and
mov
movl
addl
sti
cmp
aad
idivl
and
xor
pop
pusha
pop
sub
sbb
js
xor
cld
aam
pop
sbbl
je
push
addr16
xchg
pop
lret
fnstenv
xchg
adc
mov
mov
dec
xchg
sub
add
adc
xor
adc
ljmp
vmovq
mov
xchg
movsl
inc
mov
inc
push
add
xor
xlat
in
xlat
mov
sub
jns
popa
push
mov
fistpll
push
popf
into
jb
dec
ret
dec
mov
xor
test
mov
and
jecxz
test
lds
das
mov
mov
mov
xor
jnp
divb
sub
pusha
mov
pusha
negl
scas
push
xor
jmp
push
jb
dec
push
loop
lcall
fldt
sub
lds
shlb
pop
test
data16
mov
add
inc
lret
or
dec
xchg
lret
xchg
xor
leave
mov
mov
push
out
das
loopne
lea
int3
in
sub
sbb
lods
or
not
int3
subb
shrl
out
cmp
sbb
mov
popf
jae
mov
sbb
test
mov
call
push
or
jge
jns
mov
in
xchg
inc
cmpsl
int3
loopne
xor
mov
fidivrs
popa
imul
pop
pop
adc
mov
mov
fadd
cmpsl
stc
fldcw
mov
cmpsb
mov
inc
clc
cli
daa
inc
xchg
stc
imul
mov
jg
add
je
outsl
xchg
mov
mov
mov
cmp
pop
jl
add
movsl
dec
cmp
scas
aad
xor
pop
rclb
or
enter
lock
mov
idivb
xor
cmc
mov
mov
jbe
sahf
sub
inc
inc
inc
daa
lcall
mov
pop
cmp
imul
loop
or
sub
inc
test
xor
push
into
mov
mov
iret
bndldx
insb
push
insl
ljmp
xchg
add
das
or
mov
and
push
push
jle
pop
push
cmp
add
scas
ljmp
test
cltd
pop
fidivrs
jns
ret
add
mov
xchg
ds
stc
rorb
mov
add
adc
inc
sbb
popf
bound
cmp
lea
add
xchg
jo
mov
ficomps
or
xor
lcall
rcrl
xchg
imul
add
ret
mov
adc
pop
mov
fadd
mov
mov
add
push
bnd
sbb
jb
xor
add
xor
mov
ret
mov
or
jo
sbb
push
jecxz
xlat
js
xor
int3
mov
xchg
jnp
xor
inc
icebp
mov
lcall
inc
cltd
and
scas
in
cmc
jno
dec
arpl
pop
lods
mov
add
cmp
frstor
pop
ja
enter
gs
dec
jb
and
mov
rcl
dec
aam
sub
repnz
adc
add
sarl
setae
fwait
int3
xchg
imul
and
and
cld
push
sbb
sar
adc
pop
outsb
xchg
cmpsb
je
cmp
push
or
jge
int
xor
lods
cld
pop
pop
pusha
nop
mov
or
loope
or
xchg
stos
lds
pop
jl
cmp
stos
cltd
cld
leave
push
xlat
icebp
inc
mov
rorb
xorl
ljmp
stc
xchg
jg
lods
sub
pop
in
push
jmp
dec
psraw
mov
mov
scas
pusha
adc
pop
iret
and
mov
addb
popf
and
jnp
int
sub
sbb
cltd
je
insb
je
call
shrl
xchg
adc
ret
imul
pushf
es
or
jno
scas
cmpsl
jle
mov
xchg
push
jp
fdivrl
icebp
adc
out
popa
stos
dec
aaa
mov
add
popa
iret
push
fnstsw
jge
cmpsb
xor
stos
add
stos
addr16
sbb
or
xlat
loop
add
mov
je
cmp
pop
mov
cli
call
mov
push
adc
sbb
hlt
insl
mov
ss
add
sub
aaa
dec
jb
push
sub
xlat
je
gs
jns
rclb
dec
fcoms
pop
sbb
subb
mov
inc
mov
jmp
fdivp
ret
adc
xor
cmc
mov
ss
imulb
ret
lods
and
and
in
push
mov
out
das
push
cmpsb
or
mov
outsl
bound
inc
xchg
lret
jne
vmread
jno
cmpsb
and
xor
sub
std
add
ret
loope
mov
xlat
add
inc
imul
sbb
inc
outsb
dec
xor
sbb
mov
daa
sbb
jne,pn
adc
repnz
mov
loop
ds
int3
and
int3
xor
xlat
ret
jmp
out
loopne
andb
fwait
mov
mov
ror
or
xor
iret
icebp
cmp
xchg
sbb
cmpsl
push
stos
lods
and
fstps
adc
addr16
int3
int3
push
dec
lret
into
loope
unpcklps
loop
loope
cmc
mov
add
sbb
or
pop
inc
inc
sub
fmull
mov
gs
andl
popa
and
sbb
fdivrs
sbb
sub
mov
es
enter
test
xor
lret
test
scas
jle
mov
aam
ja
iret
sub
outsb
inc
sub
pop
mov
dec
add
stos
scas
push
cmpsb
xor
dec
jecxz
enter
xchg
mov
pusha
adc
pop
lahf
cmpsl
insb
fcoms
cmp
pop
mov
jmp
push
ds
test
fwait
mov
cli
jg
mov
xchg
in
xchg
out
fcomps
loop
push
lret
fdivrs
xor
pop
int
mov
pop
paddb
stos
or
test
xchg
dec
outsb
sbb
jo
mov
adc
mov
xchg
mov
cmp
mov
mov
aam
iret
es
rol
ret
daa
imul
lods
js
data16
ror
xlat
jle
push
jl
pop
mov
pop
push
or
popa
imul
aaa
push
xchg
outsl
inc
mov
jge
jl
cmp
es
call
ljmp
adc
inc
add
and
insl
rolb
out
fs
pop
andl
xor
adc
mov
adc
mov
or
jge
in
sahf
pop
rol
push
xchg
lods
mov
sbb
adc
pandn
dec
xor
les
jne
mov
jmp
push
xlat
cmpb
sub
fnstsw
cmovno
cmpb
fwait
cmp
adc
or
xlat
sub
add
and
sub
movsl
cmp
nop
push
shlb
mov
mov
or
les
dec
add
stos
push
sub
fwait
and
xor
dec
add
inc
or
mov
dec
cmpb
cmp
sbb
add
push
or
xchg
mov
push
arpl
xlat
ret
cmp
sub
cmc
xor
sbb
popa
xor
sub
std
cmpsl
or
das
push
icebp
lret
cmp
aam
ficoms
repz
sbbb
jbe
das
gs
les
jae
pop
mov
jmp
or
dec
sub
jmp
push
mov
mov
sub
mov
insb
es
jmp
jb
negl
sub
sbb
cs
insb
sub
lods
andb
insl
nop
sbb
sub
fistpl
out
sbb
or
into
sbb
adc
clc
xor
andb
cli
xor
inc
inc
sbb
add
mov
in
mov
and
pop
repnz
sub
inc
sub
mov
lods
inc
lret
sub
popw
rol
sub
rcrb
repnz
and
pop
dec
lds
movsb
in
mov
ja
mov
push
lret
hlt
xor
rorb
cmp
insb
ljmp
mov
push
jecxz
es
fwait
out
das
clc
ds
push
xor
lret
xchg
push
cmpsb
xchg
pushf
leave
xchg
add
jae
adc
mov
and
and
lods
mov
std
dec
call
jp
jns
xchg
inc
or
ret
sbb
sub
lods
in
cmp
add
clc
dec
icebp
push
add
dec
jmp
adc
adcb
sub
idivb
mov
dec
jecxz
lret
jbe
jge
jle
iret
sbbl
or
push
dec
pop
or
test
je
bound
cmp
pop
ret
mov
das
xchg
lock
out
fmull
adc
xor
test
push
add
jno
lahf
jl
push
push
push
out
xlat
sarb
arpl
ret
fyl2x
jg
adc
popa
je
mov
xchg
jmp
aas
addr16
xor
sub
loop
scas
testb
sbbl
pusha
test
sahf
push
imul
sbb
pushw
mov
jl
cmc
ljmp
sub
cmp
fisttps
out
adc
cmp
sti
cmpsb
aas
push
inc
test
or
mov
sub
push
divl
mov
xor
lods
outsb
js
and
popa
fildl
stos
push
les
and
js
xor
push
push
pop
flds
je
jecxz
adc
xchg
mov
popa
and
loopne
mov
stos
sbb
sbb
add
xor
xor
cli
jno
ss
ret
mov
inc
fidivl
aam
shll
mov
or
dec
xchg
inc
sti
xchg
sahf
imul
push
mov
aas
cli
sbb
out
shlb
mov
mull
cmp
mov
fisttpl
lahf
jae
cmc
push
pop
cld
and
pop
lret
les
loopne
in
movsl
mov
jmp
ficoml
gs
aas
xor
mull
push
test
ja
out
std
mov
add
and
fsubl
sbb
mov
xor
and
sub
out
loopne
jno
dec
mov
scas
inc
adc
mov
push
cmpsl
lahf
push
insl
cwtl
mov
or
ret
jns
inc
repnz
xchg
and
mov
in
popa
jno
sbb
jns
outsb
xchg
add
add
test
mov
mov
cmp
std
pop
sbb
sub
jb
int
dec
jg
test
inc
mov
loop
cli
push
mov
push
scas
mov
popf
or
rclb
push
push
mov
pop
adc
inc
xchg
jb
sub
sub
mov
int
and
inc
ljmp
lods
cmp
cmc
iret
out
in
call
sub
rclb
mov
jmp
push
xchg
cmp
aam
lock
inc
mov
pop
jmp
sub
clc
mov
incb
int
jb
inc
loope
shll
dec
insl
xchg
pcmpeqw
repz
cmp
xor
test
mov
adc
jecxz
pop
aaa
push
jae
repz
xor
icebp
mov
lods
int3
aas
movaps
inc
inc
or
cld
bound
arpl
push
push
out
mov
jne
sub
mov
shrl
into
jl
jne
lds
out
or
loopne
je
loop
jbe
push
push
jbe
mov
push
ret
test
aas
pop
cltd
adc
push
in
cmp
arpl
adc
test
leave
cmp
mov
lahf
push
add
jmp
bound
lock
aas
and
call
aad
stc
sub
sub
out
inc
mov
push
adc
sbb
ds
add
xchg
fiadds
shlb
mov
mov
and
std
test
fsubrs
push
sub
inc
xchg
xchg
fldenv
dec
in
jb
mov
ret
jns
and
loop
xchg
push
lea
push
loopne
sbb
addb
xor
push
mov
adc
sub
fcmovne
jle
icebp
cmp
ss
sbb
imulb
sub
addr16
adc
int
sbb
sub
adc
aaa
shl
dec
inc
jno
cmp
mov
cld
repnz
jg
or
mov
rorl
daa
xchg
into
imul
out
push
push
push
ds
push
dec
inc
jle
outsb
data16
xchg
mov
into
imul
out
push
push
push
ds
push
dec
inc
jle
outsb
data16
xchg
mov
mov
into
inc
imul
out
xchg
push
push
ds
push
dec
inc
jle
insb
data16
xchg
mov
into
jle
outsb
out
push
icebp
lods
xchg
ss
sub
mov
out
add
lcall
inc
mov
jp
cmp
or
sbb
outsl
mov
in
xchg
pop
test
push
lcall
adc
add
hlt
cmp
and
sbb
push
push
movsb
dec
xchg
pop
test
cmp
pop
inc
cli
xor
and
adc
add
lret
insb
movsb
jnp
dec
out
sarb
lcall
repnz
out
call
xchg
xchg
mov
aas
jl
pop
imul
in
and
inc
adc
loope
pop
or
dec
movl
xchg
xlat
js
popa
stos
mov
mov
mov
push
lds
cmc
shl
add
mov
xchg
mov
mov
notl
push
jmp
add
push
aas
imul
out
js
pop
push
movsl
das
jmp
pop
mov
mov
xchg
push
ljmp
negl
xchg
das
aam
icebp
mov
xor
add
dec
fbld
adc
rcrb
out
dec
jp
jno
mov
inc
ljmp
add
hlt
test
rcl
add
or
ret
int3
mov
adc
add
mov
lea
jnp
add
adc
ds
sbb
cs
push
adc
jnp
add
mov
mov
jbe
sbb
pop
lret
aas
loope
ljmp
scas
pop
cli
and
adc
add
hlt
cmp
or
sbb
push
jp
dec
xchg
pop
test
push
lcall
adc
add
hlt
cmp
or
sbb
push
jp
dec
xchg
pop
test
cmpsb
lds
stos
inc
mov
and
lcall
lret
leave
enter
in
nop
out
cmp
test
data16
scas
daa
aaa
shll
pop
xor
call
fstps
cmp
dec
imul
jle
adc
mov
scas
sti
mov
adc
mov
mov
and
fildll
in
stc
cmp
pop
sub
je
fxch
mov
add
jg
imul
addl
stos
and
or
xchg
jb
nop
xor
or
rol
shlb
fisubs
inc
sbb
pop
sub
mov
adc
xchg
mov
mov
sub
or
jo
std
gs
adc
cmp
inc
cmpl
sub
push
xchg
mov
dec
jle
hlt
test
lahf
and
idivl
cmpsl
ss
ljmp
insl
out
clc
loop
sbb
test
insb
cvtps2pi
test
fdiv
mov
stos
cmp
ret
inc
push
dec
dec
js
xchg
int3
jmp
xchg
xlat
push
jb
mov
mov
mulb
sarb
mov
test
ss
dec
enter
dec
or
or
xchg
out
mov
daa
pop
loop
xchg
sar
test
scas
push
mov
insb
mov
fldt
adc
xchg
sub
imul
mov
pop
jp
cmp
jle
call
sahf
inc
add
sbb
movsb
aam
adc
insl
fmuls
pop
out
sbb
lahf
jnp
pop
and
mov
inc
sbb
lahf
adc
arpl
dec
jmp
adc
xor
jmp
repnz
cmpsb
jae
lret
enter
cli
push
or
pop
sbb
pop
pop
pop
mov
js
shl
mov
les
add
mov
cmp
sbb
pop
jb
adc
mov
jmp
lret
mov
cmp
aas
cmp
test
jl
ret
pop
jno
jl
or
sub
jns
je
mov
mov
aam
arpl
pop
sub
push
filds
out
jnp
data16
movsl
xchg
xor
rep
mov
test
insl
fs
push
jmp
jle
dec
push
sarb
es
fmul
daa
mov
mov
fadd
push
aas
add
fnstenv
sbb
cmp
jp
sbb
cmp
xchg
nop
sub
dec
cmp
pop
jno
and
lods
adc
lods
sbb
shr
xor
adc
jno
out
repnz
inc
add
cmp
clc
cmc
mov
xor
ds
cmpsb
and
mov
js
les
insl
pusha
dec
aad
push
aam
pop
push
mov
sub
mov
test
sarl
lcall
icebp
dec
repnz
movsl
cmpsl
jle
xor
mov
loope
outsl
xlat
jns
movsl
int3
pop
bnd
clc
test
mov
mov
cltd
pop
or
push
push
and
xor
jne
inc
jl
jmp
je
push
sbb
sti
xchg
nop
cmp
push
mov
test
mov
stc
stos
cmp
clc
icebp
jmp
pop
stos
or
mov
test
setbe
dec
mov
fs
loope
lock
into
push
lcall
adc
dec
lock
daa
mov
cmpl
addr16
xchg
shrl
scas
xor
dec
testb
xchg
test
in
movsb
movaps
ret
fstpt
sahf
fsubrl
rolb
pop
add
mov
in
mov
movsb
add
or
div
arpl
insb
push
push
xor
adc
mov
xor
mov
repz
fisubs
mov
and
xchg
daa
loopne
repz
fs
pop
jbe
jmp
pusha
jbe
test
pop
mov
xor
dec
shrl
push
int3
dec
mov
cmp
scas
testl
or
aas
add
mov
mov
xchg
push
mov
in
add
adc
jbe
jae
push
repz
ret
int
xor
call
pop
pop
out
imull
xchg
addr16
std
cli
sti
jecxz
pop
shr
sbb
sahf
xor
push
and
and
cwtl
jnp
push
repz
adc
cmpl
int3
cmpsb
xor
lea
ret
mov
or
inc
in
in
shlb
cmp
sbb
out
mov
faddl
sub
or
add
push
push
fmul
mov
push
mov
push
jl
xchg
fisubrl
xor
js
lret
mov
jb
lcall
adc
or
dec
roll
shr
and
mov
aas
ljmp
aad
addr16
ficompl
sar
cmp
xchg
xor
addr16
outsb
jae
sub
call
repz
ljmp
sbb
mov
movsb
adc
push
sub
iret
push
add
lods
test
adc
jbe
xchg
mov
pop
pop
cli
cs
mov
popf
test
mov
mov
xchg
or
xor
icebp
les
or
addr16
push
sti
incb
popa
xor
dec
subb
jo
jne
mov
loope
je
inc
sbb
adc
test
sti
movsl
or
insl
loope
and
je
out
push
clc
mov
out
inc
mov
lds
sbb
sub
lahf
xchg
imul
cwtl
dec
fldl
and
data16
jmp
shll
lea
cmpsb
dec
xchg
xchg
xchg
in
mov
test
push
push
jle
pop
mov
and
add
inc
dec
sub
lcall
lds
xchg
mov
sub
mov
movsl
movsb
pusha
in
sbb
mov
loop
fmul
imul
dec
movsb
push
jnp
or
int3
std
sub
mov
mov
outsl
sarl
imul
jp
cmp
imul
dec
scas
std
mov
mov
mov
or
push
movsb
daa
mov
setb
or
xor
negb
pop
leave
rolb
imull
in
pushf
lret
adc
mov
mov
inc
pop
adc
or
adc
mov
faddl
out
push
stos
stos
inc
pop
repz
cwtl
test
and
pop
mov
or
push
pop
xchg
fisttps
mov
and
insl
fwait
aam
outsb
es
test
loope
fidivl
sub
outsb
xor
sub
push
aam
xor
lock
mov
nop
sub
add
aas
xchg
xlat
jmp
inc
mov
xlat
popf
cmpsb
popa
sbb
inc
sbbb
loope
sbb
stos
popf
ss
mov
lods
jp
sbb
or
xchg
lods
mov
sbb
xlat
dec
inc
dec
addr16
lea
lods
jmp
mul
es
jp
ds
cmpsl
sbb
xor
xchg
out
popf
aaa
xor
aam
xchg
mov
mov
loop
fs
push
jns
jae
ret
mov
fisubl
pushf
gs
xchg
rclb
mov
pop
push
dec
pop
ja
aaa
jecxz
lret
lods
stos
or
enter
xchg
jmp
loopne
jge
push
aad
add
inc
jne
fdivr
daa
or
adc
cli
sub
adc
dec
bound
daa
sub
inc
dec
jb
add
mov
adc
je
popa
lret
xchg
mov
mov
into
adc
xor
mov
mov
repnz
or
xor
rep
adc
and
cli
and
mov
ss
scas
arpl
daa
add
xor
add
sbb
sti
sub
mov
push
mov
scas
and
jne
mov
pop
mov
stos
add
ja
xor
fstps
jmp
in
xchg
clc
nop
std
mov
lea
push
into
aad
repnz
xor
dec
neg
repnz
dec
inc
divl
lods
jp
jbe
loopne
mov
out
adc
mov
lds
inc
xchg
mov
cwtl
fisttpll
mov
pop
mov
push
pop
cld
cltd
xchg
xchg
int3
icebp
sti
or
mov
dec
add
mov
xchg
cmp
nop
imul
jb
outsl
add
or
test
bound
scas
sti
pop
xor
mov
test
std
add
lea
outsb
pop
roll
xor
loopne
adc
cltd
lods
hlt
push
movsl
shr
imul
das
fcomps
pop
cmpsl
dec
xchg
xor
jg
divl
sbb
xor
stc
jg
jg
pop
sbb
fucomi
jmp
pushf
inc
leave
xlat
lahf
and
pop
adc
and
addb
sahf
xchg
pusha
lahf
adc
dec
xor
dec
sbb
pop
xchg
pop
adc
out
in
dec
stos
nop
cwtl
test
pushf
jmp
aam
mov
or
das
or
jl
mov
daa
xchg
xor
mov
sahf
pop
lods
xor
xor
daa
pusha
or
mov
loopne
or
jns
cld
pop
mov
jbe
sbb
push
or
and
mov
in
jl
daa
xchg
pop
xor
or
mov
enter
out
std
xchg
xchg
mov
dec
fcmovbe
mov
cmp
xchg
push
mov
orl
dec
jmp
sub
popa
jnp
pop
or
in
pmullw
inc
icebp
dec
push
int
or
xorb
out
fst
dec
pop
jmp
pop
mov
movsb
add
in
cld
imul
xchg
pop
add
hlt
int3
xchg
ds
push
xor
and
push
pop
inc
cmc
clc
inc
arpl
insb
or
xlat
stos
imul
mov
and
insb
mov
jo
adc
pop
sub
pop
loop
leave
sub
mov
mov
or
call
dec
mov
dec
push
mov
xchg
sti
mov
push
ljmp
adc
inc
outsl
scas
insb
mov
pop
mov
or
shlb
fwait
inc
in
stos
lahf
sbb
pop
inc
loop
test
xchg
inc
pop
ss
daa
imul
or
mov
and
mov
aaa
loop
sbb
and
nop
add
jae
into
addl
xchg
dec
stos
xlat
sub
repz
cmpsb
mov
add
test
mov
mov
mov
pop
or
push
xorl
sarl
inc
nop
repnz
mov
dec
mov
bound
aam
lret
push
push
dec
scas
xchg
push
ss
fimuls
call
ret
cwtl
push
jae
xor
fisubrs
pop
icebp
mov
fsubr
fidivrl
or
data16
xchg
mov
cmp
xor
mov
dec
sub
cmp
je
dec
inc
xor
rorb
out
xchg
jmp
inc
lcall
imul
stc
sub
clc
and
lds
xor
scas
test
sbb
icebp
cmpsb
ja
ja
jg
cmp
in
call
into
xchg
jg
jns
xchg
std
je
test
sub
xor
imul
enter
jbe
xchg
jmp
add
popa
sub
pop
clc
adc
mov
push
imul
cs
pop
add
leave
mov
sbb
sub
cmp
cltd
in
or
out
adc
imul
mov
xor
dec
sub
shrb
cwtl
xor
push
sub
stc
out
jle
rorb
adc
mov
xchg
std
mov
adc
inc
lods
iret
inc
mov
mov
addr16
jae
jne
das
aaa
inc
sub
fcoms
xchg
add
xor
daa
jno
addr16
popf
loope
shlb
ds
push
in
mov
dec
cmp
mov
lods
fiaddl
ret
cmp
xchg
addr16
cwtl
std
sub
inc
sti
and
out
cmp
sbb
adc
push
cmpsl
dec
adc
dec
outsl
xor
aaa
in
mov
movsl
inc
mov
ja
xor
in
int
mov
dec
sub
mov
mov
dec
cmp
jg
push
cli
mov
mov
in
dec
mov
daa
push
mov
iret
add
pop
lahf
loope
push
xchg
dec
lcall
dec
jl
shrl
inc
jnp
fidivrl
sbb
mov
jl
jns
js
gs
jne
dec
shll
or
mov
jne
sbb
movsb
jl
cmp
xchg
loope
inc
jb
jb
add
mov
pop
fisubl
sar
jnp
dec
mov
xlat
lret
mov
push
sti
gs
pushf
xchg
adc
jne,pn
inc
push
ja
dec
repz
dec
xor
roll
cld
sbb
or
mov
mov
arpl
cli
add
sbb
mov
lods
or
paddsb
sti
lock
je
xchg
or
inc
inc
mov
mov
pushl
inc
add
fisubrl
xchg
add
call
fsubrs
lcall
jnp
push
cmp
addr16
shll
push
push
sbb
mov
inc
xor
mov
insb
jl
dec
arpl
fwait
adc
jne
sub
cltd
dec
cmp
gs
cltd
test
adc
dec
push
mov
fwait
sahf
push
sti
mov
gs
mov
fildll
mov
xor
ret
nop
inc
inc
sarl
out
clc
call
xor
mov
repz
sub
add
push
dec
loop
test
popf
inc
icebp
lahf
adc
movsl
nop
nop
push
xor
aas
insl
jmp
xor
fadd
dec
xor
ret
sti
aad
int
push
daa
dec
into
jne
or
sar
cmp
mov
js
dec
aad
pop
fnstcw
xchg
mov
mov
pop
jmp
mov
scas
jb
adc
adc
in
ljmp
xchg
sub
push
into
aam
xorb
mov
push
sahf
cmpsb
push
or
loop
in
push
jecxz
cmp
aaa
aas
ds
mov
mov
add
sub
pop
xchg
lret
xchg
loop
sahf
jg
loope
mov
jp
pusha
insl
push
scas
adc
sbb
fldenv
jmp
negl
cmpsb
leave
in
shrl
popf
sub
mov
lret
xchg
icebp
adc
and
add
push
out
mov
dec
loop
mov
dec
sbb
in
out
push
jecxz
stos
in
mov
or
mov
add
dec
je
and
dec
pop
bnd
jp
insb
icebp
ffree
inc
pop
ja
mov
stos
inc
sub
cmp
mov
push
mov
push
bound
push
lcall
cwtl
loop
rclb
jns
fdivrl
orl
push
divl
popa
pop
shrl
and
lods
addb
es
push
lret
push
mov
aad
xchg
mov
inc
fcmove
jo
push
sbb
outsb
jmp
imul
mov
jle
mov
jo
lret
ss
push
fs
in
pusha
or
adc
dec
push
mov
jl
push
movsb
sbb
inc
jns
inc
lret
sub
or
std
test
pop
fsubrp
or
cmp
imul
iret
filds
frstor
push
cmpsl
lret
mov
mov
add
dec
push
in
popf
stos
inc
mov
lods
sub
into
push
aad
push
fildll
push
dec
push
pop
das
iret
xchg
sti
cld
lds
mov
mov
arpl
mov
jmp
xor
push
pushl
fs
mov
outsl
and
sub
adc
jl
fs
fs
mov
sbb
or
inc
xchg
mov
jnp
sbb
mov
enter
jle
lcall
and
out
adc
mov
add
jge
inc
add
mov
jae
inc
xorl
mov
lea
sbb
lock
loop
xorl
mov
pop
ret
outsb
inc
gs
jns
fistpll
sub
mov
leave
scas
sbb
inc
loop
pop
cmp
lcall
hlt
repz
aam
aam
lds
push
mov
mov
and
test
xor
push
mov
popa
inc
out
movsl
out
fwait
ja
sar
or
push
push
clc
pop
int
mov
dec
scas
es
push
push
je
insl
dec
sarb
shl
or
sbb
test
xchg
sub
xchg
sub
in
inc
bound
inc
inc
lret
cs
pop
xchg
sbb
sarl
xchg
xchg
jecxz
mov
mov
shrb
inc
xor
sbb
test
cld
fsts
aaa
pop
mov
adc
sbb
push
lock
mov
nop
stos
pusha
cs
repz
rclb
mov
jnp
dec
cmp
sub
cmp
gs
stos
mov
pusha
lods
push
std
outsb
mov
fidivrs
and
pusha
popl
rcll
fdivrs
cmp
aas
outsb
pop
js
inc
cmp
mov
xlat
repz
rolb
ffreep
jmp
sahf
cmpb
or
mov
jle
js
jmp
out
addr16
je
dec
adc
xor
sbb
shll
mov
mov
adc
mov
dec
mov
ds
in
mov
fstp
bound
jnp,pt
mov
mov
cmp
gs
cld
pop
adc
adc
push
push
sar
inc
sub
pop
call
add
sub
stc
bound
movsl
push
sub
sbb
or
insb
inc
cmp
add
in
pop
lds
mov
add
add
fldz
insb
push
mov
sub
mov
cld
lea
dec
adc
jnp
fcmovbe
insl
mov
push
push
mov
aam
lea
clc
es
lahf
imul
xor
inc
mov
inc
sub
xlat
in
pop
cmp
lahf
stos
jl
into
dec
cmp
fstpt
stos
push
ss
rcll
jb
xor
mov
pop
outsb
mov
jb
in
js
xchg
sbb
sti
mov
adc
stc
cmp
mov
or
jle
shlb
sbb
sub
push
inc
insb
sub
xor
repz
ret
mov
inc
cli
mov
push
jg
mov
fldenv
shl
inc
sbb
outsl
ret
cmp
mov
push
dec
aad
lea
cmpsb
dec
lret
std
adc
dec
mov
fldl
loopne
leave
push
cmp
adc
jne
ds
push
mov
jae
mov
mov
mov
or
xor
je
out
mov
jno
adc
stos
aaa
aas
iret
xchg
addr16
or
test
mov
jl
push
inc
add
mov
das
mov
cmp
imul
lods
xchg
jne
clc
loop
jge
mov
sbb
lods
cmpsb
rol
bound
push
pushf
incb
repz
adc
stos
sub
test
mov
dec
loop
rcll
out
scas
out
xor
jo
pop
jg
popf
jo
sub
mov
jb
iret
xchg
lods
cld
lahf
mov
jg
push
jmp
inc
das
into
add
adc
dec
mov
ja
and
repnz
inc
adc
cmp
xchg
lods
addr16
sub
add
es
lods
push
int
sub
jmp
bnd
jne
push
jmp
pop
xchg
pop
enter
mov
cmp
inc
popf
push
or
jp
jle
pop
mov
imul
lea
sub
shrl
dec
bound
push
popa
sbb
addl
test
arpl
mov
mov
nop
lahf
push
mov
pop
mov
lahf
subb
cwtl
add
or
xorl
movd
and
scas
push
insb
ror
sub
mov
push
push
adc
shll
inc
loope
out
xor
insb
cmp
scas
adc
adc
adc
cmc
daa
je
xor
push
mov
cli
outsl
addr16
je
and
adc
mov
inc
add
sub
loope
pop
mov
pop
push
jno
loopne
and
into
jmp
xchg
cltd
xchg
lods
into
movsl
lea
or
dec
test
xor
inc
xor
mov
sub
movsb
xchg
jge
test
and
call
sbb
fs
pop
int3
cmp
enter
out
dec
ret
imul
mov
rolb
fs
cmp
sub
inc
and
out
test
lret
push
sti
shll
or
mov
iret
cwtl
in
arpl
push
pop
and
cmp
adc
jg
adc
mov
xchg
cli
and
adc
add
hlt
cmp
or
sbb
push
jp
dec
xchg
pop
test
push
lcall
adc
add
hlt
cmp
or
sbb
push
jp
dec
xchg
pop
test
push
lcall
adc
cmp
add
push
les
arpl
je
add
ljmp
sti
sub
lds
aam
mov
cmp
pop
mov
movsl
jnp
lock
loopne
shlb
ret
xchg
mov
addb
pusha
daa
push
aaa
inc
inc
xor
adc
xchg
xchg
loopne
shlb
mov
pop
jo
pusha
daa
push
aaa
inc
inc
pop
push
and
ja
xchg
xchg
loopne
shlb
mov
pop
jo
inc
push
and
inc
fs
and
push
jae
xor
cmpsl
mov
andb
xchg
cmp
sub
jne
xor
mov
dec
inc
mov
and
mov
inc
enter
push
jmp
js
std
in
int
inc
xchg
mov
test
mov
or
and
xchg
ja
xchg
mov
scas
adc
mov
testl
push
ficomps
test
mov
orb
cmp
sub
cli
jl
push
pop
sub
scas
mov
and
jne
insl
popf
rorb
mov
push
inc
popa
push
xor
test
push
mov
adc
inc
lock
loopne
shlb
mov
pop
jo
pusha
daa
push
aaa
inc
inc
xor
adc
loop
hlt
mov
mov
jae
ja
jb
push
xor
push
inc
add
dec
icebp
xchg
jecxz
les
pushf
in
mov
cmp
pop
add
and
push
inc
sbb
test
mov
xlat
mov
pop
jo
pusha
daa
push
aaa
inc
inc
xor
adc
xchg
xchg
loopne
shlb
mov
pop
jo
pusha
daa
push
aaa
inc
inc
xor
adc
xchg
testb
les
ret
sti
sbb
pop
and
pop
stos
nop
fimuls
test
sbb
loope
mov
fnsave
addb
jnp
lret
push
push
xchg
and
aam
mov
push
leave
jge
fwait
lret
mull
out
push
sub
adc
adc
test
jb
lods
pop
aas
jne
pop
dec
aad
shlb
cmp
out
in
dec
and
or
notl
xor
xor
pop
pop
outsl
negb
or
add
cmp
lods
pop
xor
pop
shrb
mov
pop
jl
lcall
inc
ud1
xchg
or
mov
mov
xor
mov
and
sar
and
cs
mov
int
cwtl
dec
repnz
popa
cmc
or
dec
aam
lcall
fcoms
rclb
jo
jb
jae
sbb
cmpl
push
push
ss
loopne
mov
add
mov
sub
and
mov
sub
pop
xor
pop
xorl
pop
out
mov
push
dec
decl
cmp
out
aaa
or
mov
inc
aam
pop
mov
out
pop
mov
imul
jge
adc
push
cs
push
xor
cmp
cmc
push
pushf
sbb
aas
jl
push
daa
mov
insb
test
lret
add
ss
sbb
dec
jb
mov
add
xchg
sub
cmp
mov
dec
and
xor
xor
lret
sub
loop
sbb
aas
movsl
mov
or
es
jne
inc
repnz
jo
fdivs
jp
jmp
popa
xchg
push
adc
mov
jmp
loopne
push
or
push
push
daa
movsl
std
in
cmc
cld
sub
push
jmp
dec
cmpsb
sub
mov
pop
push
iret
lods
lods
cs
sar
xchg
js
js
iret
mov
out
cwtl
mov
lock
xchg
jge
mov
scas
xchg
pop
dec
out
in
sub
pop
mov
arpl
cmpsl
inc
pop
outsb
xchg
cmp
sbb
jmp
jno
clc
shll
cmpsl
div
adc
outsb
arpl
push
inc
popa
sbb
ds
or
repz
loop
popf
or
or
test
jae
or
jg
dec
mov
cmpsb
ss
sub
add
fisubrs
test
lahf
repnz
jg
int
jno
ljmp
or
ja
ljmp
sahf
lods
add
loope
imul
outsb
imul
pop
mov
add
push
leave
stc
mov
adc
roll
dec
into
cmp
popf
inc
nop
cltd
into
lds
jle
ljmp
out
and
fstpt
jb
adc
imul
mov
gs
mov
cmc
lds
jmp
xor
push
xor
xchg
std
inc
in
aam
xchg
cwtl
sub
jb
leave
dec
aad
push
jge
adc
fs
adc
stc
cmp
cmp
adc
push
pop
adc
addr16
push
rolb
cmpsb
ja
mov
sbb
fbld
mov
jp
imul
jbe
popf
mov
sbb
icebp
xchg
or
mov
and
inc
push
andb
or
dec
inc
xor
mov
mov
les
fiadds
fwait
stos
lods
mov
mov
xlat
outsb
xor
iret
test
adc
lods
rclb
pushf
loopne
mov
lcall
out
icebp
ficompl
arpl
mov
das
adc
or
in
pop
pop
jp
loope
xor
call
cmp
mov
and
mov
into
xchg
sarl
dec
popa
adc
popf
sarl
test
pop
sbb
jecxz
push
add
cmp
insb
jne
lea
inc
jo
in
nop
pop
int3
xor
mov
hlt
mov
fsub
sbb
sub
mov
cmp
mov
cmp
sti
cltd
lods
loop
into
xor
or
leave
in
ljmp
lods
dec
xor
mov
orl
mov
and
mov
arpl
mov
pusha
mulb
mov
inc
push
xchg
sub
lods
les
pop
jle
push
stos
psrlq
or
ljmp
aad
repz
pop
aas
push
cmp
sbb
or
test
cmp
push
movsl
dec
sub
or
ds
xchg
mov
mov
cmpl
dec
fdivs
cwtl
or
mov
fdivrs
les
leave
test
sub
mov
imul
mov
lahf
and
ds
jae
mov
push
lds
dec
mov
nop
sbbb
or
pop
sub
mov
cld
cmpb
xchg
mov
ljmp
lcall
popa
dec
xchg
sti
push
movswl
adc
mov
or
or
stos
and
mov
or
out
adc
adc
daa
in
dec
ljmp
xchg
mov
or
or
insl
sbb
and
int3
cmpsl
push
sbb
mov
jbe
mov
addr16
iret
mov
or
sbb
cmc
shll
dec
imul
lcall
scas
push
mulb
dec
mov
out
shrb
xor
addr16
in
je
and
addl
popa
je
mov
pop
xchg
mov
and
inc
pop
mov
je
stos
and
lea
idiv
inc
movsl
shl
in
leave
leave
scas
sbb
cmp
sub
or
cs
xor
and
mov
or
and
cltd
lret
out
cmp
lock
rolb
movsl
lcall
push
jg
dec
arpl
shr
xchg
mov
dec
stos
movsl
lods
fdivs
sbb
imul
lret
xchg
andl
pop
fs
fnstcw
adc
xchg
sbbl
dec
sub
pop
adc
hlt
lods
mov
pxor
pop
pop
add
sub
repz
pop
in
mov
xchg
pusha
push
shll
mov
dec
jno
inc
out
sahf
xor
out
inc
jle
jg
jmp
into
jb
shr
sbb
call
sbb
jns
sub
or
mov
hlt
mov
or
cmc
decb
daa
dec
fcoms
ja
jecxz
daa
shlb
out
jge
sub
xchg
orb
sarl
pop
push
or
int
shr
add
mov
fcoml
jp
aam
cmc
cli
pop
push
sbb
inc
and
mov
pop
xchg
js
mov
add
ret
xor
mov
and
jmp
jbe
push
lods
xor
mov
test
xchg
scas
nop
sub
jmp
jp
js
inc
bound
push
test
push
faddl
movsl
lds
sub
int
xor
loope
xor
sbb
mov
fs
jo
adc
je
sbb
movsb
jmp
addr16
popa
ds
test
daa
xlat
xchg
lods
aas
fst
and
ret
xchg
mov
jo
or
jb
sbb
push
addr16
in
rcrb
or
bnd
mov
cmp
mov
jl
stos
and
fsubl
scas
daa
xchg
fimull
out
fldl
loopne
xor
leave
orl
inc
and
in
xchg
int3
aad
adc
pop
mov
xlat
dec
sub
lods
adc
pop
sub
jnp
xor
or
xor
push
into
outsl
jno
outsb
shl
pop
loopne
shll
push
add
fwait
cltd
aas
lret
inc
loope
insb
pop
xor
jnp
xor
dec
lock
aam
loope
in
scas
xchg
mov
es
out
js
lcall
test
divb
jge
movsb
sbb
push
sub
jg
test
mov
shll
or
sub
movq
test
dec
jbe
inc
scas
rcrb
out
jno
dec
sbb
mov
adc
in
cmp
inc
mov
jge
and
mov
subl
fcmovbe
cmp
loop
outsb
push
adc
test
inc
dec
push
cmp
pop
push
sbb
test
popa
fsub
mov
and
inc
pop
movsl
push
push
inc
push
insl
cltd
arpl
push
push
jb
xchg
hlt
inc
cmp
test
fisttpl
bound
or
mov
stos
cmp
adc
neg
cmp
lods
sbb
fs
pop
icebp
scas
push
xlat
jmp
xor
cmpsb
lods
xchg
mov
adc
jge
stc
jno
ss
ficoms
xor
fwait
pushf
jne
mov
scas
or
lret
mov
and
cmp
jns
leave
negb
aad
aad
xchg
lea
lahf
lret
and
fwait
jns
outsl
pushf
pop
sbb
out
xchg
adc
insl
push
repz
mov
pop
mov
or
sbb
movsb
popl
mov
lock
pop
inc
data16
add
pop
mov
dec
mov
push
pop
inc
int3
mov
inc
xchg
push
jae
lret
lahf
or
in
dec
pop
xchg
int
enter
mov
xor
pop
jecxz
push
in
sbb
ret
xchg
cltd
xchg
or
mov
lcallw
fwait
addr16
repnz
pop
mov
and
lret
shll
push
ss
sub
sbbb
adc
sub
push
les
out
test
mov
cmc
fildl
sbb
cmp
ret
ljmp
mov
xor
int
out
repnz
sbb
and
xchg
movsb
sti
or
jno
mov
negl
sub
xor
dec
data16
jbe
int3
jg
repnz
xor
test
mov
inc
fs
icebp
imul
xor
xchg
movsb
test
ljmp
fistl
push
icebp
pushl
stc
pop
mov
jne
jnp
test
sub
pushf
add
cmc
mov
jl
sbb
adc
imul
mov
mov
pusha
icebp
sub
sub
mov
add
xor
cltd
ss
sub
mov
fldl
sti
or
popa
cmp
enter
addr16
push
pop
bound
sbb
fdivs
xor
sbb
mov
jbe
arpl
sbb
xlat
mov
and
adc
enter
xor
mov
popf
xchg
test
sub
outsl
and
outsb
gs
mov
add
and
imul
pop
mov
roll
mov
rcl
xor
cmc
in
leave
pop
shlb
inc
push
mov
pop
test
ret
add
rolb
dec
push
out
outsl
bound
dec
aaa
inc
enter
adcl
jne
and
clc
xchg
loop
ret
sub
jmp
xor
iret
js
icebp
sbb
sbbl
dec
mov
sarb
out
jo
add
cwtl
add
mov
jge
shll
cmp
sbb
push
loope
out
push
and
xchg
mov
imul
ds
out
in
sbb
out
push
cmp
jecxz
lods
dec
xor
sahf
pusha
add
dec
mov
push
add
lar
add
mov
lcall
stc
pop
add
jae
mov
cmpb
out
adc
fs
pushf
out
lea
sbb
cmpsl
stos
cwtl
adc
push
je
lahf
imul
lahf
sub
mov
outsl
out
stos
mov
or
mov
adc
jno
mov
in
mov
add
aas
add
or
mov
xchg
xorb
fdivrl
mov
dec
adc
andb
pop
mov
pop
iret
sbb
fcmove
ds
sarl
xor
add
adc
out
addl
aad
in
cmpsl
mov
shlb
or
mov
inc
and
mov
mov
push
ja
fsubrs
sti
aam
daa
sbb
jecxz
sahf
fs
cmp
mov
or
lret
pop
mov
xor
nop
xor
cmp
icebp
push
std
and
xchg
push
aaa
rcll
pop
out
into
ficomps
xchg
dec
push
mov
sbb
call
cmc
ds
lret
sbb
jno
jg
iret
jb
mov
dec
es
in
pop
rep
rcr
push
dec
pop
mov
int3
je
nop/reserved
call
mov
lods
daa
cmpsb
incl
stc
repz
push
xchg
js
or
dec
jle
ss
fiadds
pushf
push
int
negb
push
fwait
ja
xchg
mov
clc
jo
and
pop
adc
add
lahf
push
in
jns
cli
xor
hlt
sbb
lds
or
pop
mov
jg
push
xchg
sub
mov
cmp
mov
xor
mov
test
scas
insb
call
xchg
or
and
adc
out
mov
add
xor
mov
xchg
xor
ja
adc
pop
clc
push
mov
and
divb
push
popa
push
pop
orl
lods
roll
scas
mov
je
and
ss
mov
mov
mov
push
push
xorl
loope
adc
bound
inc
icebp
xchg
int3
loope
daa
imul
cmp
mov
dec
and
jle
mov
fdivp
dec
dec
inc
or
ds
sbb
sbb
fsubrl
popf
jbe
xor
js
add
and
fidivrs
pop
mov
push
or
sub
out
and
sbbb
push
aaa
inc
mov
and
jecxz
push
test
and
adc
mov
sbb
jle
pop
add
bound
mov
sub
das
inc
adc
dec
add
fidivl
push
mov
test
cmp
adc
push
inc
cmp
pop
xor
xor
cmp
shlb
fdivs
mov
pop
loopne
dec
pop
cmp
std
mov
push
mov
rorb
ljmp
cmc
mov
adc
inc
jl
jmp
jb
sbb
ficoml
loope
in
daa
lret
pop
xchg
fs
fistpl
cmp
aam
aaa
aaa
data16
aaa
cli
lret
in
dec
adc
pop
pop
ljmp
sub
je
cmp
or
sub
pop
push
out
inc
sub
inc
mov
or
popa
push
and
cmp
andb
mov
mov
ror
iret
icebp
mov
jne
js
lret
clc
insl
sbb
push
xchg
jecxz
cmpsl
bound
jne
mov
jg
enter
fwait
push
fnstenv
loope
fildl
push
sub
gs
push
fs
mov
rcl
aas
hlt
dec
in
std
push
stos
cmpb
mov
aaa
lahf
sub
sub
lret
or
es
outsl
or
mov
cmp
push
sbb
push
cmc
push
in
ret
xor
jne
mov
mov
pop
sub
shll
push
pusha
cli
add
out
jmp
jae
loop
loope
dec
push
fdivrl
and
add
cmpsb
cs
subb
push
adc
sub
push
push
mov
std
test
addr16
addr16
popf
mov
test
aam
enter
aaa
push
pop
pop
dec
icebp
cmp
xchg
int3
fdivp
xchg
pop
imull
jae
out
hlt
xor
jnp
ret
sub
push
je
pusha
fdiv
cmpsb
cmp
lret
jp
fnstenv
ret
inc
push
add
sub
mov
push
stos
adc
xor
push
in
fcomps
xor
flds
and
adc
cmpsl
xor
je
add
das
inc
jns
mov
pushf
adc
cmp
fs
or
xchg
les
outsl
xor
repnz
out
fucom
jle
pop
sti
ljmp
ss
or
in
pop
and
addb
dec
mov
dec
mov
inc
adc
fisttpl
outsb
andb
daa
mov
ret
cmc
fbld
imul
jg
cmp
les
cmc
add
test
jne
sub
xchg
ss
and
nop
enter
lcall
ret
jle
or
inc
leave
jge
dec
xchg
push
sub
jmp
leave
in
and
cld
sub
faddl
xchg
sub
dec
pop
aad
and
in
test
push
js
leave
dec
aad
lds
jo
or
sbb
and
daa
lcall
and
push
lret
ret
inc
adc
jnp
scas
scas
pop
or
mov
testl
jl
push
pop
popa
jle
outsb
aam
dec
mov
or
inc
outsb
flds
inc
ss
jl
dec
in
call
sub
fdivr
data16
and
inc
dec
and
aad
mov
fiadds
into
in
idiv
lcall
pop
aaa
dec
push
cmpsl
cmp
shl
std
xchg
xchg
inc
dec
push
lret
xor
movsb
je
fs
mov
and
test
les
jne
mov
or
popa
xor
mulb
jl
mov
lret
cmpsb
pop
ret
mov
repz
xchg
arpl
pop
sub
outsl
lahf
xor
mov
sub
sbb
inc
jmp
rolb
addr16
mov
sub
xchg
fcoms
jle
lret
pop
fnsave
dec
cmpb
push
mov
push
cld
mov
aaa
push
mov
mov
cmp
out
imul
adc
and
repz
aas
cs
test
inc
adcl
stos
sbb
aad
pop
push
scas
and
and
cld
test
pop
sti
rcll
pop
cltd
push
dec
mov
xor
lods
jge
imul
sbb
xor
dec
aas
call
adc
mov
push
and
das
jg
sarb
movsl
mov
es
out
mov
pop
dec
lahf
in
xchg
sbb
xchg
pop
popa
mov
push
pop
xchg
les
int
xlat
xor
popa
int
rorb
jecxz
adc
popf
mov
inc
dec
in
call
lret
mov
mov
stc
mov
sub
js
test
scas
enter
arpl
out
aad
xchg
pop
in
cmp
in
sub
mov
js
inc
inc
idiv
jmp
lcall
scas
add
add
sbb
stos
inc
cwtl
ljmp
jmp
aaa
push
data16
mov
xchg
lret
add
cltd
mov
mov
mov
cltd
in
imul
push
and
xor
cmp
push
das
out
xor
dec
pop
pcmpgtd
hlt
jp
scas
hlt
pop
xchg
jnp
sub
adc
mov
lret
bound
ljmp
cmp
in
insb
or
cmp
andb
jmp
out
js
or
fidivrs
repz
mov
and
inc
jb
mov
stos
jl
or
mov
push
adc
sti
sub
cmp
sub
cmp
std
mov
fwait
jno
inc
xchg
andl
cltd
xor
gs
mov
mov
inc
push
and
bound
push
repz
loopne
not
jbe
xchg
xchg
inc
mov
pushf
adc
add
ja
shlb
or
jnp
sarl
xlat
sbb
fidivs
mov
popa
push
dec
popl
arpl
es
jge
call
push
bswap
mov
pop
jle
ja
and
mov
ret
xchg
cld
adc
mov
mov
pop
fcoms
jge
dec
jg
out
roll
sbb
testl
and
push
dec
aaa
and
sarl
fdivs
mov
fwait
bound
nop
icebp
adc
mov
rolb
jbe
fs
fs
sub
cmpl
sbb
and
mov
and
dec
adcl
jecxz
jnp
jle
push
fdiv
mov
xchg
cmp
push
adc
aas
jb
js
dec
sbb
jbe
scas
insb
jle
sti
xor
ret
arpl
lahf
data16
cltd
repz
ret
xchg
add
pop
test
movsl
jo
xchg
out
leave
pop
pop
adc
sub
leave
mov
insb
xchg
sub
sarb
xchg
or
push
jp
mov
cmpb
in
dec
lea
je
cmp
addl
pop
arpl
pop
in
push
lods
inc
ret
xchg
rep
pusha
xchg
jae
mov
pop
push
test
in
add
fwait
push
leave
test
repz
cmp
outsb
push
push
int
fwait
xchg
push
dec
jno
jl
xor
add
jmp
daa
jbe
enter
test
add
jns
cmp
cld
das
mov
or
rclb
mov
mov
pop
jo
pusha
daa
push
aaa
inc
inc
xor
adc
xchg
xchg
loopne
shlb
mov
pop
jo
pusha
daa
push
aaa
inc
inc
xor
adc
xchg
xchg
loopne
shlb
mov
push
jo
pusha
daa
push
ss
inc
xor
data16
xchg
xchg
loopne
shlb
mov
clc
jo
lret
aaa
aaa
xor
call
in
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
ljmp
and
jmp
jp,pn
dec
mov
mov
or
sbb
ljmp
and
jo
add
ds
mov
or
sbb
ljmp
and
jo
pusha
push
jp
cmp
je
inc
xchg
pop
pushf
inc
xchg
je
mov
arpl
scas
add
gs
mov
jmp
pop
sub
popa
adc
aas
pop
push
lods
addb
cmp
push
jg
dec
fbstp
or
mov
add
add
push
out
sbb
je
push
adc
mov
mov
outsl
jge
sub
popf
sti
adc
stos
push
stos
inc
je
repnz
jg
jbe
and
or
mov
mov
pusha
jp
xchg
cmpsl
cmpl
ljmp
push
lea
jnp
jne
adc
cmp
pop
pop
push
sarl
or
jb
mov
cli
add
xor
and
jo
pusha
push
jp
dec
mov
mov
or
sbb
scas
jno
popa
pop
repz
adc
jle
sub
rorb
push
xchg
dec
test
jl
insb
lcall
add
pmaddwd
or
pop
repnz
mov
push
js
sbb
push
fistpl
bound
pusha
push
jp
dec
mov
mov
or
sbb
ljmp
and
jo
pusha
push
jp
dec
mov
mov
or
sbb
ljmp
out
movsl
push
ret
xor
test
ret
mov
dec
orl
xor
jbe
test
aas
cli
mov
push
icebp
xlat
xchg
std
gs
pop
stos
gs
dec
dec
xchg
pushf
shl
and
push
subl
adc
vmovntps
inc
push
xor
adc
mov
je
cmp
sub
inc
hlt
loop
ret
test
and
imul
fmuls
jns
icebp
xchg
dec
addr16
jle
cmp
enter
cmp
in
push
inc
rclb
test
mov
addb
test
push
pushf
push
fildl
lods
in
xchg
xchg
dec
or
add
mov
xchg
dec
lds
clc
dec
int3
outsb
or
ds
lcall
push
fldcw
cmp
aad
ret
insl
mov
or
xchg
repnz
mov
fmuls
adc
loop
dec
push
out
sbb
aad
je
fisubrs
dec
push
hlt
popa
int3
mov
mov
out
insl
popa
or
insb
xchg
sar
push
out
data16
rclb
jns
jp
sarb
sbb
push
movsl
ljmp
loope
sbb
popf
xchg
mov
mov
ret
ret
jnp
add
rcrb
mov
dec
pop
or
mov
sbb
mov
lret
pop
in
jb
mov
test
loopne
test
adc
and
mov
negl
movsl
inc
inc
iret
and
xchg
mov
jno
hlt
fwait
clc
cmp
dec
sbb
notl
out
or
xor
movsl
mov
test
mov
sbb
jle
inc
fs
out
add
mov
popa
imul
cs
push
and
pusha
sbb
clc
mov
push
ljmp
lock
popa
add
lret
insb
cmp
sbb
js
outsb
cmp
mov
lds
and
mov
inc
icebp
cwtl
and
xor
inc
jmp
loope
rolb
dec
mov
jecxz
lret
imul
stc
scas
rcl
add
jae
mov
jbe
dec
test
shlb
out
mov
stos
dec
xchg
sbb
or
loop
fiaddl
xor
shlb
mov
cwtl
xor
xchg
lahf
test
loope
jns
xchg
pop
add
popa
test
pop
mov
flds
sub
test
push
push
call
adc
fidivs
push
arpl
ljmp
mov
loope
lods
mov
pop
in
xor
js
adc
int3
or
push
call
cmpsl
aad
or
roll
sub
pusha
inc
adc
ficomps
inc
sarl
aam
xchg
push
jns
pop
scas
xchg
aam
pop
jae
pop
mov
pop
cli
fucomi
leave
sub
push
iret
xchg
pop
xchg
push
dec
das
inc
jno
adc
dec
inc
and
sbb
push
push
mov
cli
push
lds
mov
mov
xlat
imul
fstps
fst
cmp
bound
pusha
inc
loop
adc
cmc
sarl
inc
ror
lods
arpl
sub
je
jmp
mov
push
nop
stos
ret
jle
fimuls
add
lahf
push
movsl
add
lods
aam
mov
mov
insl
mov
movsb
xchg
mov
scas
imulb
mov
movsl
es
fxch
push
lret
xorl
mov
push
cmpb
cmc
dec
pushf
cmpb
sbb
into
mov
or
inc
inc
jo
mov
frstor
movsl
mov
jno
pop
out
fnsave
jge
jge
and
out
fsubl
les
test
lahf
inc
add
iret
ljmp
int3
sub
ret
out
loope
popa
push
lock
mov
jno
bound
cmp
cltd
push
add
bnd
mov
push
mov
das
push
adc
pop
out
inc
mov
fcmovnb
inc
xchg
push
bound
mov
rcll
bound
push
movsl
psubd
rcl
jbe
dec
loopne
pop
js
rcrb
test
sbb
or
mov
xor
jle
sbb
es
mov
fdivp
mov
mov
xchg
cltd
repnz
jl
out
xchg
idivl
mov
test
adcl
lret
das
fwait
push
pushl
fdiv
push
and
inc
rorl
push
mov
or
insl
cmpb
test
fistpl
jp
or
dec
test
repnz
into
fldenv
mov
xor
and
ljmp
int
subb
lcall
jle
out
in
or
pop
xchg
mov
lret
lock
je
pop
and
fdivrl
loopne
dec
mov
mov
loopne
xchg
xchg
ljmp
xlat
push
sbb
mov
mov
iret
in
sbbb
push
in
inc
loope
movsl
enter
xchg
dec
int
xor
test
sbb
rcrl
aaa
pop
test
lcall
test
lock
push
push
test
ss
mov
hlt
add
popa
jmp
js
lret
mov
dec
inc
inc
cmpsb
movsl
or
jmp
push
dec
xchg
sbb
sbb
mov
mov
dec
push
pusha
test
fs
je
shlb
mov
cmp
shrb
add
adc
xchg
jno
xor
test
lods
pop
or
cltd
movsl
and
subb
adc
pop
mov
test
mov
and
sub
cmp
scas
enter
cs
inc
lret
out
jge
cmp
adc
lods
cli
scas
mov
or
add
mov
add
and
cmpsb
orb
pop
inc
adc
xchg
sub
pop
iret
into
xchg
mov
jl
xor
xchg
test
fstp
fs
leave
fwait
mov
add
test
data16
pusha
data16
ret
adc
gs
dec
repnz
repnz
iret
leave
mov
adc
add
das
add
dec
imul
add
cmp
fists
rorb
adc
ss
or
mov
mov
test
negb
push
cli
pop
jne
gs
jle
lahf
ds
inc
mov
stc
push
fistl
or
ss
cltd
stos
mov
inc
stos
aas
push
xor
inc
push
xchg
pusha
add
je
inc
andb
mul
pusha
test
jo
test
jns
into
int3
xchg
dec
decb
arpl
mov
pop
loop
sbb
and
pop
push
les
lds
shlb
cmc
inc
xchg
pop
out
xchg
xchg
or
dec
fsubl
push
div
ja
inc
insb
mov
loope,pn
jno
push
hlt
adc
movsw
rcrl
repz
jmp
lock
sbb
outsl
mov
mov
nop
mov
add
lock
push
jnp
out
lea
mov
mov
mov
in
fbstp
fldl2e
sti
adc
inc
inc
inc
xchg
inc
cwtl
lods
fsts
or
mov
test
xchg
lret
lea
rclb
fnstenv
nop
pop
cmpsl
fcmovnb
dec
push
fwait
inc
out
cmp
mov
cmp
dec
sbb
and
jmp
out
mov
out
xor
mov
pop
mov
mov
push
enter
aaa
push
pop
stos
movsb
pop
or
shrl
jno
xor
or
flds
call
mov
or
jae
push
in
jge
popf
jp
push
cmp
loop
sub
dec
test
and
xor
push
xor
xchg
push
enter
jnp
or
mov
jne
adc
xor
enter
lret
arpl
or
lret
les
imul
in
jge
cwtl
cwtl
mov
inc
push
mov
mov
adc
aas
cmpsb
sbb
and
stc
jecxz
cmpsb
sub
cmpsb
fstpt
ds
and
in
fisttps
cmc
mov
shlb
push
ds
mov
pop
mov
cld
mov
test
dec
stos
jae
xor
xchg
adc
ret
jae
and
call
push
ja
insl
dec
cltd
cmpsb
ret
cmp
or
jge
mov
cwtl
push
stos
dec
mov
mov
aam
mov
sub
push
cmp
mov
outsl
jne
mov
cmp
mov
cmp
inc
daa
daa
das
add
sbb
lock
insl
adcl
push
cmp
mov
into
jecxz
push
jo
jnp
xchg
xchg
jnp
fidivrs
rcrl
popa
xor
shlb
fiadds
jbe
hlt
push
test
in
pop
pop
xchg
mov
test
sub
or
and
pop
pushf
xor
cmc
test
scas
jle
sbb
aas
cmpsb
push
mov
cmp
dec
int
sub
loop
mov
dec
cltd
push
test
xlat
push
or
pop
andb
adc
sahf
fistl
inc
in
cmp
fimull
neg
push
cmpsb
movsl
mov
push
je
mov
rolb
mov
mov
dec
dec
sbbl
test
inc
xor
mov
dec
insl
inc
xor
push
push
aas
push
xor
push
push
int
or
mov
pop
push
xor
mov
mov
push
shlb
push
fisttpl
dec
jae
xor
add
push
push
sahf
rcll
loop
sub
call
subl
pop
popf
in
in
inc
cmpl
inc
inc
mov
iret
mov
push
xor
dec
mov
jl
sbbb
sbbl
push
xor
mov
call
je
xchg
or
orl
aam
aas
mov
xor
enter
outsb
or
mov
push
and
nop
jmp
movsb
iret
or
push
add
inc
jno
movsb
push
sub
mov
and
push
xchg
jns,pn
mov
add
mov
dec
xchg
mov
fdivs
xlat
xchg
ds
push
adc
dec
jns
popa
mov
sub
repz
dec
push
push
outsl
lret
cs
pop
loopne
imul
out
cmp
pushf
mov
sbb
sbb
xchg
cli
pop
out
fidivrl
sbb
add
mov
xchg
lret
push
ficomps
into
leave
push
sbb
test
cmp
or
mov
pushf
xchg
jmp
jle
mov
cmp
inc
jo
pop
mov
in
aam
test
test
scas
ja
mov
sahf
add
fcomi
adc
jb
cmp
cltd
jecxz
mov
ss
popa
ss
cmp
dec
sahf
mov
dec
scas
adc
cmc
cmp
mov
pop
cmc
add
mov
dec
xchg
ljmp
dec
cmp
sbbl
into
pop
addr16
shlb
xchg
add
push
jae
test
push
jg
into
dec
adc
fimuls
imul
dec
lret
adc
add
mov
aas
dec
imull
aas
in
pop
push
mov
dec
xor
dec
mov
adc
push
xchg
push
dec
push
add
dec
add
mov
dec
fwait
test
mov
sbb
and
push
loop
imul
jne
or
adc
cltd
fistpl
inc
sbb
out
jmp
loope
aas
mov
sub
fsubr
mov
add
push
jnp
xchg
sbb
jae
js
js
cmc
jns
dec
aas
ret
test
ljmp
sbb
or
cltd
push
mov
jmp
cmp
es
jo
lahf
pop
adc
jge
push
mov
popf
enter
xchg
mov
pop
push
jnp
test
mov
bndldx
int
lods
lods
or
rcrb
xchg
mov
out
cmp
adc
inc
push
and
lea
lfs
loope
data16
sbb
data16
jge
aaa
sbb
sbb
jp
jb
cmp
cli
clc
xchg
xor
enter
fwait
notl
or
jmp
les
xor
nop
lret
push
std
mov
dec
or
xor
je
movaps
ret
or
clc
add
adc
out
mov
test
loopne
inc
aam
repnz
push
mov
repnz
lea
xor
lcall
mov
into
add
int
cld
jmp
sbb
enter
mov
lods
or
push
out
mov
adc
addps
fsubl
mov
outsb
rorb
adcl
cmp
mov
push
dec
rorb
sub
xchg
sbb
dec
sbb
adc
xor
add
sub
push
push
and
cli
jb
pop
jae
mov
mov
lahf
andl
cmpsb
mov
xchg
rol
pop
xchg
out
arpl
push
cld
out
lods
lahf
roll
xchg
and
pop
outsb
rdtsc
iret
mov
je
push
and
lds
xor
cmpl
test
inc
lds
negb
test
ds
add
pop
and
scas
fs
jne
push
pop
and
and
sbb
fnstcw
fcompl
fldlg2
scas
xor
scas
add
and
xor
adc
ret
int3
or
insl
aaa
das
lods
loope
iret
mov
sub
jbe
mov
jmp
inc
jno
lods
add
out
inc
sub
xchg
lret
sbb
loopne
test
jmp
push
and
outsl
add
lea
leave
pushf
xchg
lods
les
ror
js
movsl
rolb
daa
movsl
or
xchg
in
sbb
mov
rolb
pop
test
cmp
scas
xor
mov
lods
mov
push
add
mov
cmc
popf
and
test
xchg
xor
push
lods
or
in
xor
mov
stos
repz
inc
into
inc
inc
add
scas
out
hlt
pop
cmp
jae
aas
in
aam
xor
jbe
cwtl
cmpsb
fmull
inc
daa
dec
popf
push
test
cli
mov
jle
add
dec
push
mov
lds
orps
jmp
das
in
aam
mov
loop
outsb
outsl
jle
cmovg
into
jl
outsb
imul
aaa
dec
push
pop
insb
xchg
clc
lahf
daa
cli
in
stos
cwtl
and
mov
mov
sub
hlt
or
xor
cmp
hlt
mov
mov
iret
cli
and
jle
lds
dec
loop
sub
push
add
sarl
push
mov
sbb
int3
ja
rorl
jns
mov
push
insl
fst
xchg
mov
lods
dec
push
or
xlat
mov
push
mov
xchg
jne
jbe
pop
xorb
les
repnz
cmp
lock
js
std
or
adc
sub
movsb
adc
pusha
fwait
mov
loopne
arpl
pop
push
jnp
mov
lock
repz
cmpsl
rcrl
jbe
das
les
rorl
xor
push
mov
xor
dec
cld
pop
or
faddl
push
sub
fistpll
cld
imul
cmp
sub
rorb
push
ret
imul
stc
sub
dec
add
jge
mov
aad
out
cmp
xor
addr16
testl
aam
cmp
xlat
js
jmp
cmpsb
dec
pop
bound
ret
imul
mov
out
jae
int3
cmp
push
or
sub
jbe
and
mov
sti
and
es
frstor
sbb
push
sub
add
mov
mov
dec
mov
stos
jecxz
fstpt
sbb
mov
insb
dec
or
repz
ds
cmc
movsb
xor
jae
lret
pop
push
sub
jb
hlt
into
dec
dec
sub
sbb
jp
xchg
mov
inc
test
test
imul
mov
add
or
mov
int
aaa
aas
sbb
lret
sbb
or
lock
pop
pushf
dec
xor
je
fldt
cmp
jne
into
jb
es
out
mov
dec
mov
xorb
ds
fs
jae
dec
test
and
inc
mov
mov
jg
bound
cs
cmp
push
je
inc
aad
inc
add
and
pusha
push
lcall
mov
shrl
data16
incl
mov
cmp
mov
in
sbb
je
lret
stc
testl
popf
cld
mov
add
scas
shlb
pop
sbbb
jne
push
and
stos
loope
sub
imul
or
sbb
scas
loop
mov
hlt
cmp
push
or
and
xchg
movsb
loopne
xor
add
push
iret
iret
scas
cwtl
repz
pop
xchg
cmc
ror
jnp
pop
xchg
jl
add
in
mov
lock
inc
mov
add
lahf
cmp
repz
and
fisubrs
lret
inc
inc
push
ljmp
adc
js
dec
test
mov
inc
pop
fimuls
cld
jecxz
pop
mov
leave
pop
lock
stos
pop
or
movsl
sub
or
mov
clc
sbb
jp
gs
out
lret
inc
mov
mov
fwait
dec
push
mov
add
mov
out
mov
cltd
or
icebp
mov
mov
movsl
dec
addr16
or
mov
pop
or
mov
insb
jae
dec
adc
mov
jo
ja
or
jl
cmp
rcrb
lods
mov
and
aas
les
pop
cmp
rep
fwait
sub
cmpb
mov
dec
outsb
xor
jb
jl
loopne
cwtl
dec
adc
pushf
mov
stos
xor
sub
notl
aas
adc
scas
jp
sbb
mov
lods
fdivr
sub
pop
jns
ljmp
pop
loop
lahf
mov
or
adc
jmp
rcrb
lcall
call
jge
jp
lcall
shrb
cmp
bnd
fdivl
movsb
arpl
mov
out
xor
inc
cmc
outsl
mov
cmp
gs
out
aad
ret
jns,pt
mov
outsl
jnp
push
fidivs
mov
adc
outsb
mov
in
inc
mulb
aam
cwtl
jle
push
aad
mov
cmc
int
fdivr
and
out
inc
mov
ficomps
cs
les
push
xchg
cld
lods
dec
push
mov
push
cltd
pop
mov
mov
sub
mov
cmp
les
es
xor
xor
js
push
jno
cmpb
xchg
sti
adc
ret
jae
dec
ljmp
ljmp
push
cld
test
cmp
pop
mov
fidivrs
sahf
jns
mov
cmp
mov
dec
leave
push
movsb
mov
ja
loope
clc
xlat
and
add
jns
sbb
cmpsl
and
push
dec
nop
or
das
mov
ds
shlb
test
mov
push
jecxz
mov
xor
sbb
adc
pop
shrl
push
mov
or
or
mov
aas
lret
cmp
jnp
xchg
jmp
sbb
dec
je
and
or
xchg
notb
shll
dec
movsl
aad
arpl
stc
and
test
popa
mov
mov
mov
xor
xchg
data16
es
add
xor
icebp
pop
and
ret
cmp
ret
jp
test
add
xchg
or
stos
xor
or
rolb
xlat
jno
jmp
or
adc
scas
xor
cmc
ja
mov
outsl
mov
xor
mov
jno
inc
aas
int3
jnp
xchg
or
dec
ljmp
mov
imul
movsb
mov
in
sub
pusha
aaa
sbb
pop
bound
adc
stos
dec
add
popa
mov
scas
mov
xlat
fdivl
dec
xchg
fmuls
aad
fcomps
ds
mov
and
and
mov
pop
adc
mov
imul
pushf
xchg
movsb
adc
scas
sti
ret
test
sub
out
dec
push
outsl
insb
cmp
test
pop
scas
dec
iret
imul
je
out
mov
lock
outsb
push
ljmp
inc
ret
cld
aam
jmp
shll
loope
dec
and
or
push
xor
xchg
or
std
fs
and
xchg
repnz
stos
pop
inc
cmpsl
cli
ss
inc
aas
scas
inc
sub
inc
xor
cmp
aaa
mov
pusha
gs
inc
sbb
jno
xchg
loop
cmp
loope
sbb
iret
stos
or
jp
fnstsw
and
outsb
cmp
out
sti
or
add
lcall
push
enter
xchg
add
in
pop
loop
pop
push
movsl
movsl
sarl
sub
loop
mov
dec
fdivr
enter
cmc
pop
add
int3
jge
es
test
add
mov
xchg
je
xchg
cltd
repz
and
or
roll
notb
sbbl
cwtl
je
out
dec
fisubl
jmp
adc
pop
nop
pop
dec
arpl
out
dec
aas
push
push
or
dec
xor
and
jo
pusha
push
jp
dec
mov
mov
or
sbb
ljmp
and
jo
pusha
push
jp
dec
mov
mov
or
sbb
ljmp
and
jo
pusha
push
jp
dec
mov
mov
or
sbb
ljmp
and
jo
mov
loopne
pop
xlat
pop
pop
mov
cmc
pmulhw
hlt
jl
insb
inc
pop
push
dec
sahf
test
data16
or
leave
hlt
in
fsubl
pushf
xchg
mov
insb
inc
pop
push
dec
and
xor
add
adc
in
hlt
in
movsl
int3
movsb
into
mov
test
jne
inc
push
push
and
xor
add
adc
in
hlt
iret
movsl
movsl
mov
repz
movsb
out
sti
jecxz
xor
cmp
scas
hlt
adc
jmp
jecxz
mull
test
and
shll
cmc
xor
xor
sbb
dec
cmp
mov
popa
repz
add
adc
fmull
mov
loope
jne
dec
outsl
xor
pop
das
popa
push
in
movsb
in
xchg
mov
xor
sbb
pushf
ror
mov
mov
sbb
push
xor
lds
cmp
inc
and
xchg
arpl
xchg
pop
mov
cmp
add
adc
mov
adcl
idivl
imul
xorl
rol
les
rcrb
and
rclb
mov
imul
push
dec
and
xor
add
adc
in
hlt
hlt
movsb
movsb
mov
test
xor
sub
sbb
addr16
dec
inc
jo
imul
clc
scas
jmp
adc
sbb
inc
cmp
bound
insb
ds
cltd
mov
lods
aam
mov
adc
daa
cmp
sysenter
sub
sbb
or
cld
hlt
in
int3
movsb
mov
xchg
mov
insb
inc
pop
push
dec
and
xor
add
adc
in
hlt
in
int3
movsb
mov
xchg
mov
jg
fildl
dec
push
mov
mov
shl
adc
lods
adc
mov
lcall
dec
xor
mov
out
sub
test
test
jl
or
jl
scas
dec
pop
das
ss
pop
pop
cmp
xchg
push
pop
aad
testl
mov
jp
test
fcomps
mov
orb
dec
inc
jb
xor
repz
mov
xor
and
test
inc
add
scas
sbb
clc
xlat
lock
adc
in
dec
or
fnstsw
call
hlt
xchg
testl
push
es
repnz
jns
popa
mov
add
mov
jmp
cmpsb
pushf
xchg
aam
mov
lods
adc
dec
cmp
sbb
mov
sbb
sub
xor
inc
es
cmp
les
les
arpl
stos
mov
xchg
push
dec
push
mov
xchg
scas
cmp
leave
mov
push
adc
push
stos
mov
out
sbb
mov
cmpsb
dec
int
jb
mov
push
adcb
sti
xorb
xor
subl
mov
mov
xchg
sbb
arpl
shll
out
xchg
nop
rol
lds
and
mov
mov
mov
jno
repz
dec
stc
lds
fwait
jp
mov
push
hlt
lea
pop
add
mov
push
push
test
cmp
add
or
repnz
mov
sbb
inc
push
sub
adc
call
gs
fucomip
dec
outsb
adc
push
inc
mov
adc
cmp
mov
out
mov
leave
push
adc
ret
loope
push
jnp
cltd
or
push
xchg
or
mov
xchg
and
xor
xlat
loope
rcll
xchg
cmp
fisubs
dec
and
or
mov
pop
pop
fnstsw
ss
sbb
inc
xchg
dec
dec
xorb
aam
arpl
dec
or
addl
pop
xlat
repnz
repz
loope
shlb
dec
repz
dec
dec
dec
out
push
imul
fs
cmp
cmpsl
loop
jl
pop
jge,pt
ja
out
popf
xchg
jecxz
mov
push
ret
dec
jecxz
gs
adc
test
imul
mov
xchg
xchg
cli
sti
lahf
dec
pop
rorl
inc
push
stc
jmp
push
jb
mov
dec
sbb
lcall
pop
popf
dec
inc
sbb
pop
pop
sarb
fstps
mov
add
je
call
in
stc
push
jp
out
loopne
xchg
out
sub
lea
es
pop
sub
adc
test
cmp
cld
cmp
fs
adc
pop
sti
add
popf
mov
pusha
iret
fs
inc
push
xchg
scas
xor
mov
fcmovbe
bound
scas
sbb
push
push
inc
mov
cmpsl
movsb
cmp
mov
outsl
and
cld
and
lret
xchg
nop
gs
arpl
mov
xor
insl
mov
push
lret
pop
mov
xchg
mov
insl
std
in
pop
sub
sti
jae
cmp
xor
fcomip
sub
movsb
daa
push
addr16
lock
mov
lds
add
cs
fisubrl
pop
jl
adc
push
int3
cld
jg
inc
mov
insb
pop
jmp
je
stc
inc
icebp
xchg
cwtl
das
or
call
fcomps
out
push
je
jnp
push
fs
sti
inc
jl
jmp
aaa
adc
fstpl
ja
test
pop
dec
mov
les
jo
xor
cmp
xchg
push
aad
cmp
rolb
add
and
adc
imul
daa
dec
pop
and
movsl
dec
dec
xor
jp
nop
test
dec
inc
add
push
subl
mov
mov
sub
mov
adc
pop
mov
out
sbb
rol
dec
or
jge
or
sbb
xlat
nop
enter
xchg
clc
jmp
aas
ja
cmpb
sub
cld
adc
push
push
cmp
mov
fs
sbb
jb
mov
shrl
arpl
ja
pop
jns
and
addb
mov
aam
xor
xor
inc
inc
loopne
jge
adc
jbe
fadd
repnz
dec
pop
xchg
je
fwait
in
or
xchg
pop
sub
mov
fmuls
jns
outsl
add
mov
inc
fistps
lcall
mov
subl
jecxz
test
xor
or
sub
push
sub
push
xchg
or
adc
sti
stos
push
pushf
xor
dec
into
iret
cwtl
sar
sbb
stc
jbe
sbbb
inc
jl
push
pop
xor
xor
int
mov
mov
inc
loopne
sbb
mov
add
popa
dec
dec
xorps
es
popl
adc
add
mov
ja
jmp
mov
mov
xlat
scas
jle
hlt
outsb
sub
in
or
sub
lds
xchg
in
jecxz
aam
adc
pop
mov
or
mov
xor
in
mov
fcoms
repz
outsl
sbb
jecxz
js
bound
mov
jecxz
add
mov
xor
fcomip
mov
lcall
xor
dec
jbe
mov
xor
dec
and
sahf
mov
loope
repnz
xor
dec
nop
mov
pop
daa
scas
pop
add
cmp
adc
dec
sub
or
movsb
xchg
lods
notl
hlt
sub
cmp
test
les
jb
add
mov
ret
add
inc
lahf
cmp
ds
fucomi
mov
and
scas
jno
js
sbb
lret
add
add
in
aas
push
dec
pop
lods
inc
in
mov
vpsrlq
fwait
sbb
jnp
orl
in
pushf
fdivrp
sahf
adc
decb
xchg
xor
pusha
cmc
or
popf
and
popa
sbb
dec
and
testb
jge
adc
pusha
int
cmpl
mov
lcall
jecxz
stos
iret
inc
outsl
test
test
push
repz
addr16
dec
dec
ret
mov
mov
jle
pop
jbe
jno
or
adc
jmp
dec
or
push
mov
sbbl
jl
icebp
cld
adc
push
xchg
hlt
orb
mov
adcl
jmp
dec
repnz
dec
adc
xorb
arpl
addr16
mov
test
movsb
stos
mov
outsb
dec
xor
aam
ret
inc
adc
cmc
and
mov
jne
pop
fcmovbe
std
pop
pop
in
fnstenv
not
push
shrb
xorl
xchg
dec
inc
fwait
shlb
cmc
xor
enter
lret
and
es
sbb
push
inc
nop
and
dec
hlt
or
lock
and
jae
xchg
xchg
insb
sub
cltd
nop
leave
or
pop
dec
out
popf
movsl
mov
add
dec
and
arpl
adc
mov
cmpsl
mulb
xchg
adc
loopne
jp
add
jp
repz
int3
sbb
clc
xchg
jns
in
insl
rol
ja
and
imul
into
popa
and
push
sti
out
stos
adc
xchg
jae
adc
popa
mov
sub
pop
pop
adc
jle
pop
pop
xor
sti
adc
xchg
fxam
add
mov
lds
mov
jns
aas
aam
je
push
out
in
data16
dec
test
test
xchg
std
ja
test
in
cmp
jmp
lea
dec
or
push
adc
sub
and
adc
mov
xchg
stos
add
sbb
dec
mov
adc
mov
scas
or
in
shrd
add
pushf
jns
arpl
xor
mov
divb
inc
test
dec
addr16
loope
mov
addr16
loopne
mov
shl
mul
clc
pop
shr
jnp
jmp
and
add
insl
or
xchg
in
and
sbb
rolb
cmp
inc
pop
out
push
dec
xchg
fs
jle
sub
lea
insl
push
pop
fistpl
adc
vmovhps
add
mov
push
lret
fdivs
mov
cmpsb
cwtl
movsl
loopne
mov
decb
lock
fwait
jmp
adc
mov
inc
mov
push
inc
out
xchg
fs
adc
mov
out
ja
mov
dec
call
and
into
add
mov
mov
fsts
test
mov
sahf
cmpsl
mov
dec
jp
and
stos
mov
clc
in
or
int3
xchg
sub
add
dec
out
out
ret
push
scas
dec
lret
and
pop
mov
lret
clc
in
push
divb
aam
mov
xor
mov
inc
fidivrl
add
loop
outsb
aam
inc
dec
add
pop
in
adc
das
imul
mov
xor
jnp
sbb
mov
ja
adc
ret
mov
sahf
and
jmp
int
or
scas
pusha
fbstp
and
movsl
or
adc
xchg
adc
sub
cli
xchg
mov
mov
or
adcb
movsb
sbb
cltd
mov
lret
mov
cld
cmpsb
mov
enter
sbb
imull
shll
mov
xchg
sub
sbb
jp
out
dec
das
cmc
sub
jl
inc
xchg
pop
lcall
sub
push
enter
es
xchg
jmp
popf
adc
and
mov
and
or
fdiv
test
mov
xorl
adc
mov
je
repnz
cmpb
xchg
push
inc
push
inc
cmp
mov
stos
insb
out
in
test
cli
jecxz
mov
dec
frstor
jbe
sub
test
push
mov
insb
fildll
int3
inc
push
jo
cld
sahf
adc
mov
das
and
push
jmp
pusha
xchg
ja
mov
lret
and
cmp
or
pushf
xor
dec
push
mov
and
lock
ss
pop
mov
push
sub
pop
push
sbb
in
mov
push
pop
sub
nop
mov
daa
mov
sub
push
sub
fwait
iret
int3
sub
sub
and
jle
scas
dec
imul
xor
je
adc
adc
pop
lret
sub
in
les
inc
jmp
sbb
lock
sub
pop
es
addl
add
pusha
adc
bnd
cmp
filds
call
popf
aaa
jo
add
or
sti
repnz
test
push
push
das
pop
jbe
or
je
jnp
aas
out
cmp
xlat
or
or
jbe
aas
adc
scas
xchg
or
dec
adc
data16
pusha
outsl
icebp
xlat
xor
pusha
push
dec
movsl
lods
jno
inc
cmpsb
ja
in
mov
mov
imul
loop
les
inc
mov
shrl
add
sub
push
sub
shlb
cmp
mov
insb
dec
cmpsb
rcr
dec
xchg
mov
dec
popf
sub
mov
arpl
cli
cmpsl
testb
js
mov
fsubr
jno
or
sbb
shll
fidivl
cmp
mov
jne
pop
cltd
daa
pop
mov
mov
mov
and
xchg
jbe
xchg
xor
fisubrs
stos
daa
jmp
xchg
ds
sti
inc
mov
je
adc
ds
mov
addr16
fldt
cld
cs
outsl
sub
push
adc
fmull
in
cmp
jp
add
sub
sbb
xor
pop
mov
and
insl
dec
sbb
cmpsb
pop
sub
push
je
push
ja
fimull
add
adc
mov
adc
cwtl
ret
add
lahf
dec
negl
sub
push
fsubrl
pop
inc
lahf
sub
gs
adc
sub
cwtl
jecxz
cld
xchg
push
es
ficomps
inc
xor
mov
push
pushf
push
dec
mov
jmp
inc
fdivl
mov
dec
pop
outsl
jno
fsubrl
fbstp
sti
pop
fs
push
inc
push
mov
bts
mov
push
icebp
push
mov
scas
cmp
shrl
sahf
int
adc
mov
jge
add
test
dec
pop
pop
in
jg
push
mov
sbb
sub
sarb
push
push
mov
fs
xchg
sub
and
push
mov
lcall
inc
test
pop
fwait
in
fs
pop
mov
fwait
ret
cltd
add
pusha
mov
adc
daa
cmp
cwtl
sub
bound
cmp
sub
jno
xchg
scas
mov
xchg
loopne
mov
mov
flds
jl
mov
into
pusha
cmpsb
scas
imul
es
lock
adc
or
aas
in
imul
cmpb
xchg
xchg
loopne
arpl
lods
fidivrl
idiv
push
mov
je
and
or
mov
inc
pop
rclb
test
mov
test
lret
add
fdivrl
xchg
shr
and
dec
std
popa
mov
jae
sbb
les
fdivr
adc
xlat
call
adc
mov
mov
xor
addr16
pop
insl
dec
out
push
ror
in
arpl
insl
lcall
aaa
insb
add
dec
adc
sbb
es
js
or
mov
insb
outsl
negb
or
sbb
add
int
mov
out
sahf
inc
mov
inc
push
loopne
int3
insb
aaa
shrl
pop
aas
sbb
mov
jmp
imul
loop
sarb
imul
imul
mov
mov
cs
mov
call
lock
push
push
add
ret
sti
lock
xchg
or
jno
pop
jmp
and
je
xchg
pop
lea
inc
and
sbb
mov
cvtps2pd
es
out
jae
xchg
incb
jo
pop
dec
mov
je
popa
jne
sub
xchg
outsl
pop
dec
pop
orb
test
adc
dec
sub
inc
pop
sub
push
test
mov
mov
inc
jge
hlt
xchg
dec
ljmp
mov
dec
xchg
jnp
hlt
incb
cmp
icebp
in
addr16
repz
pop
fsubs
lcall
cmpsb
cmp
dec
outsb
jb
es
sti
rclb
jl
ja
pop
hlt
popa
cmp
jl
cmp
pusha
scas
cmpsb
jb
dec
xor
loopne
loop
pop
fcmovb
mul
stc
mov
mov
cmp
push
stc
and
int
push
xor
push
loopne
push
push
mov
pop
inc
pop
and
mov
push
mov
adc
shlb
test
jne
sti
adc
xchg
aad
mov
popf
das
mov
fldt
push
mov
outsb
cmpsb
adcb
xorl
mov
xor
jnp
lock
sbb
test
inc
dec
mov
xchg
mov
or
add
insl
add
stos
in
aam
repnz
shll
decb
daa
cmc
stc
leave
test
jns
lahf
adc
or
fnstcw
bound
push
xchg
inc
int3
mov
pmulhuw
xor
and
fsub
jp
mov
mov
lock
lahf
ss
cs
add
add
cltd
mov
movsl
out
pushf
push
xor
mov
mov
ljmp
mov
stos
xor
xor
inc
or
mov
inc
inc
dec
shll
jp
pop
clc
and
or
lcall
js
cmovge
pop
mov
inc
in
movsb
inc
dec
mulb
cltd
cltd
and
adc
insb
fnstsw
sub
pop
rolb
jo
fists
cmp
push
stos
mov
jns
add
daa
leave
sbb
or
xor
in
lods
ja
xchg
fldl
sbb
stos
cltd
ret
test
iret
in
out
sub
inc
and
push
push
jle
cwtl
jge
negb
cmp
mov
push
std
or
push
int
cmp
aaa
push
lock
fdiv
test
pushf
jno
xor
cwtl
sub
ja
enter
ljmp
mov
sub
xchg
sub
xchg
xorl
lret
and
nop
jl
test
and
mov
mov
lock
push
jns
jmp
cmpsl
cmc
jg
ja
push
and
xchg
test
push
int
push
movsb
pop
xchg
call
out
addl
or
repz
pusha
popa
gs
sub
cld
xchg
rolb
and
sbb
cli
scas
jge
pop
cmpsb
mov
mov
rcrb
and
jg
popa
js
xor
ret
inc
repz
popa
icebp
xchg
pop
call
int
dec
call
mov
push
in
jbe
test
andb
leave
cld
test
into
rcrl
insb
mov
fistpl
aas
mov
inc
or
imul
mov
push
ret
cwtl
adc
adc
lock
mov
sbb
mov
sarl
stos
jnp
dec
imul
pop
test
daa
jns
addr16
rorl
scas
icebp
mov
rorb
push
adc
andb
stos
fsubrp
and
jle
mov
ljmp
push
pop
and
pop
cs
mov
imulb
lock
mov
lret
add
cltd
ret
and
xor
pop
outsb
push
cmp
icebp
push
jecxz
movsb
in
jno
int3
and
push
mov
add
int3
lock
jle
inc
jg
popa
adc
in
outsb
fidivl
dec
adcl
ret
movsl
mov
cltd
push
nop
pushf
hlt
push
jno
stc
pop
imul
fsubrs
mov
loop
and
adc
rorl
sbb
dec
stos
dec
push
and
dec
sub
and
shll
dec
xor
mov
je
sbb
mov
mov
popf
xchg
adc
mov
sub
inc
movsl
mov
shll
ss
lds
push
enter
mov
add
negb
jne
push
data16
push
cli
xchg
out
lret
mov
je
pop
out
xor
mull
das
push
fisubs
lahf
repnz
mov
popf
inc
shll
jb
test
idivl
in
lock
stc
orl
arpl
lret
cmp
cmp
add
mov
mov
out
addb
mov
mov
sub
dec
test
js
jmp
pop
jno
insb
fidivrs
test
into
mov
testl
stc
ror
lahf
xchg
arpl
xlat
pop
ljmp
inc
add
loope
mov
mov
dec
jl
pop
ss
loop
pop
fdivrs
adc
jle
enter
add
inc
stc
mov
data16
mov
nop
inc
stos
incl
in
movsb
mov
cmp
xchg
dec
mov
or
in
mov
push
pop
in
fmull
movsb
mov
inc
fdivl
xchg
inc
add
add
clc
scas
add
mov
hlt
sbb
es
mov
int
inc
lahf
jp
push
fcmovnbe
aam
adc
pop
loop
inc
push
pop
lret
lret
xchg
pop
fnsave
xorl
add
pop
ja
sub
xorl
cltd
sub
pop
cmp
movsb
in
xchg
mov
jg
jle
fwait
xchg
push
movsl
dec
clc
jne
inc
aas
xchg
iret
or
scas
pop
cmp
xorb
ss
out
stos
xchg
mov
mov
pop
and
jg
mov
xchg
je
pop
mov
xchg
nop
jno
scas
fisubrl
lds
call
jp
cld
and
int3
push
inc
inc
mov
cs
mov
dec
and
dec
mov
subb
repz
lahf
std
sub
and
and
fwait
inc
je
xchg
nop
test
stos
fwait
adc
icebp
cmp
add
lea
das
fcompl
add
pushf
or
mov
aad
mov
xor
test
or
rep
pop
rol
loope
pop
test
neg
cwtl
mov
pop
dec
add
mov
and
sub
fwait
inc
lret
sbb
pop
lret
cwtl
pop
iret
bound
inc
mov
stos
out
or
push
sbb
outsl
insl
inc
rolb
pop
xchg
rolb
adc
jo
int
mov
cmp
lods
jg
mov
sub
and
mov
xchg
iret
aad
and
orb
mov
adc
nopl
stos
mov
jge
dec
mov
pop
inc
add
sbb
bound
pop
jmp
je
ja
add
aas
xchg
dec
xor
cmp
fwait
mov
mov
and
jl
iret
shlb
xchg
fmuls
in
pop
xlat
sahf
add
lcall
and
xor
add
adc
in
hlt
in
int3
movsb
mov
xchg
mov
insb
inc
pop
push
dec
and
xor
add
adc
in
hlt
in
int3
movsb
mov
xchg
mov
insb
inc
pop
push
dec
and
xor
add
adc
in
hlt
in
enter
lods
test
jne
inc
pop
push
dec
and
xor
add
adc
in
hlt
inc
outsb
mov
jnp
imul
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
stos
mov
orl
add
add
add
or
push
add
add
add
add
add
add
sub
push
add
cltd
add
add
add
dec
add
add
add
add
add
add
clc
add
xchg
add
add
pop
add
mov
outsb
add
add
add
add
add
add
add
aam
outsl
push
xchg
add
add
add
add
filds
imul
add
add
add
or
cmp
add
add
add
add
add
add
add
hlt
add
add
add
sub
push
add
out
add
popl
cmp
aaa
add
pop
add
faddl
lea
xor
mov
dec
add
add
or
aaa
add
add
add
add
add
popa
add
add
add
xchg
add
or
mov
add
mov
mov
add
add
add
dec
add
add
add
add
push
add
sub
add
add
add
lods
add
add
xchg
add
add
add
in
cmp
add
add
add
add
mov
popa
add
add
fadds
jno
cmp
addl
pop
add
add
add
add
dec
add
add
add
add
lahf
add
add
add
add
add
add
out
add
sub
hlt
add
add
or
clc
add
add
popl
mov
add
cmpsb
add
add
add
xchg
outsl
add
or
add
add
push
sub
pop
add
add
add
popl
roll
add
dec
add
add
add
add
add
addl
repnz
add
add
add
add
and
adc
js
or
add
mov
popl
jns
or
add
lds
xchg
add
add
or
clc
add
add
add
add
leave
add
inc
push
fildl
add
add
add
add
add
mov
clc
add
add
add
add
add
clc
add
popa
add
and
mov
mov
mov
add
sbb
push
add
add
add
xchg
add
add
or
addb
add
add
add
imul
add
add
add
add
add
jno
jnp
and
aad
test
sbb
xchg
add
add
sbb
add
add
add
add
popl
pop
add
add
test
clc
add
cmp
aaa
add
mov
push
add
add
add
roll
add
add
add
add
add
cmp
sbb
outsl
add
add
sbb
flds
inc
add
add
add
add
add
sub
rolb
add
cltd
add
add
add
add
add
add
add
add
add
add
add
xor
imul
push
xchg
stos
clc
lret
iret
push
mov
add
jge
cmp
jne
sub
inc
mov
fsubrl
int3
and
push
pop
pop
dec
in
int
xor
sbb
bnd
pop
xorb
and
out
and
stos
mov
movsl
adc
clc
xchg
inc
pop
push
flds
lea
cmpsb
dec
stc
aad
cmc
inc
sbb
out
imull
or
aad
xchg
jno
inc
aaa
mov
das
add
xor
inc
roll
mov
add
push
xchg
xchg
mov
mov
mov
es
cwtl
mov
dec
cmp
inc
pusha
xor
leave
mov
dec
jbe
dec
gs
inc
add
add
out
adc
xchg
mov
xchg
inc
fst
dec
and
das
lahf
mov
nop
add
and
ficompl
dec
cmpsl
in
mov
sbb
xchg
data16
pop
xchg
xchg
mov
mov
mov
pop
outsl
jbe
nop
add
dec
mov
repz
pop
xlat
inc
in
cltd
das
pop
mov
jl
pop
cmp
mov
cld
shrl
in
cmpsl
ljmp
iret
sbb
fidivrl
xor
cli
out
shlb
xor
sub
in
inc
rolb
loope
sbb
int
or
jl
aad
mov
scas
int3
jne
loope
inc
roll
popf
jno
jmp
rcl
outsl
xor
dec
pushf
pushf
jp
push
pop
lock
ja
cli
pop
jne
mov
outsb
je
pusha
xor
push
into
inc
andb
decl
movsl
call
nop
lods
cmp
in
bound
mov
cli
int3
aaa
sub
jne
or
push
sti
movsb
shll
xor
dec
rcll
in
push
sub
push
xchg
or
addr16
mulb
or
mov
and
sbb
adc
or
xor
loope
lahf
push
push
stos
sub
outsl
jbe
ret
xchg
stc
inc
in
cmpsl
sub
dec
and
ss
test
pop
xchg
adc
dec
dec
push
cld
and
aad
imul
and
in
mov
inc
or
out
adcl
adc
aad
push
outsb
jmp
or
pop
or
jp
xchg
bound
jg
je
scas
clc
adc
out
daa
sbb
or
cmp
dec
adc
faddp
test
lds
sub
mov
mov
cmp
pop
aas
sub
cli
cld
frstor
sbb
push
in
xor
mov
int
cmp
divb
jle
popl
int3
cmpb
lock
sub
imul
push
adc
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
