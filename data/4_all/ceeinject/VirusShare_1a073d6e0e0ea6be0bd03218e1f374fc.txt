adc
decl
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
imul
gs
xor
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
push
push
push
push
call
push
lea
push
push
call
add
leave
ret
sub
jl
insb
sub
outsl
aaa
sbb
sub
xchg
out
aad
out
mov
out
xchg
mov
addr16
addr16
insb
aaa
sbb
or
cmp
push
std
fsub
int3
mov
add
mov
pop
jle
dec
jl
insb
cs
or
cmp
sub
fsubr
out
mov
enter
shr
filds
das
addr16
aas
cmp
or
cmpsl
or
pop
mov
ret
fstps
lahf
aaa
mov
ja
ljmp
sbb
mov
xor
es
xor
jmp
lock
jnp
or
cli
pop
addr16
push
push
test
adc
mov
mov
inc
xchg
loop
cmp
sbb
mov
int3
cmp
mov
pop
rol
and
or
pushf
hlt
jb
mov
lods
xchg
sub
loope
xchg
out
pop
push
pop
or
and
add
call
sbb
rcrl
lret
sbb
sub
or
sbb
ja
mov
ja
xchg
push
jl
insb
daa
sbb
or
cmp
sub
fdivr
int3
iret
cld
fsubrp
scas
pushf
mov
lds
add
push
jns
gs
movsl
out
movsl
cltd
test
jmp
ja
sub
sbb
inc
jo
inc
jnp
inc
dec
cmc
xchg
out
xchg
scas
mov
shl
aam
out
xchg
push
sbb
xor
inc
or
daa
or
cmp
sub
fsub
int3
xlat
cld
in
mov
cmpsl
mov
pop
addr16
push
jl
insb
aaa
sbb
or
cmp
sub
fsub
int3
xlat
cld
in
mov
cmpsl
mov
pop
movsb
and
xchg
das
scas
sbb
jecxz
mov
outsb
fnstenv
lock
inc
pop
push
lcall
lods
lock
ror
pusha
das
test
stc
or
pop
pop
mov
addr16
mov
movl
or
mov
push
dec
xchg
xchg
add
lods
inc
icebp
push
and
mov
sub
das
repz
cs
mov
xor
mov
adc
lods
dec
popf
push
adc
lret
ljmp
mov
out
fs
insb
int3
cmpsb
sub
mov
mov
xchg
mov
jmp
in
gs
sahf
and
xchg
push
movsl
mov
push
xchg
inc
adc
fsubl
ds
std
push
sahf
xchg
test
lods
lock
sub
cmp
call
in
in
sbb
scas
add
jle
mov
jns
cmpb
clc
dec
add
idiv
sbb
ss
push
inc
push
jg
pusha
sub
mov
xor
jl
push
jns
ret
out
lods
mov
cmp
mov
shll
jmp
pop
stos
or
or
lods
sub
jno
nop
jb
mov
repnz
add
fdivl
pop
push
cmp
push
jne
add
xchg
outsl
imul
xor
pop
insl
pop
into
jnp
das
xor
xchg
sub
push
das
jle
movsb
fmuls
sub
jns
push
cmp
or
cltd
imul
jnp
out
aaa
cmp
push
add
pop
jp
cmp
pusha
mov
mov
jnp
ret
sahf
sbb
nop
cmpsl
add
stos
cmp
mov
mov
add
lods
xchg
mov
add
lcall
dec
fidivs
js
or
ljmp
mov
mov
fxch
pop
push
jmp
cmp
mov
inc
cld
cmpsl
sub
test
aas
std
cmp
sahf
dec
das
adc
jbe
addr16
or
mov
into
mov
jb
xchg
daa
outsl
mov
roll
int3
inc
xorl
movsb
aaa
jge
xchg
test
test
jbe
mov
add
cmp
or
bound
imul
cltd
repnz
xchg
cli
mov
dec
add
rcr
mov
notb
mov
pop
jae
mov
jmp
pop
fwait
sarl
mov
push
sbb
outsb
cmc
fnstenv
push
mov
and
loope
lcall
dec
or
hlt
xorl
jp
sbb
pop
dec
cvtpi2ps
pop
aaa
test
jle
sarl
sbb
adc
dec
cli
pusha
in
xchg
daa
inc
jae
sub
cli
enter
test
sarb
and
mov
push
icebp
jno
in
xchg
rcr
aad
daa
ljmp
cmp
sbb
and
adc
mov
pop
shlb
xor
rcrl
negl
push
repnz
les
leave
lcall
loopne
cwtl
push
inc
rcr
sbb
or
hlt
cs
pop
sub
dec
aad
cli
pop
cltd
mov
out
in
neg
and
mov
sbb
aad
xchg
sub
mov
fisttpl
or
mov
andl
in
adc
or
inc
sti
ficompl
mov
test
push
out
dec
and
add
rcll
repnz
nop
push
xor
scas
int
push
push
push
and
cltd
cmp
mov
or
filds
push
pushf
stos
mov
cmp
pop
xchg
out
jo
in
outsb
inc
or
test
xchg
and
push
outsb
mov
or
mov
imul
pop
aam
or
inc
je
adc
xchg
bound
jp
int
call
xor
mov
xor
out
mov
pop
pop
push
adc
loopne
das
aad
sti
nop
inc
mov
clc
push
shr
push
jne
ror
out
adc
xchg
fiadds
and
addb
mov
mov
sahf
push
pop
enter
cmp
jle
dec
inc
or
cmc
pop
jl
dec
loop
cmp
test
xchg
lcall
push
decl
cmp
pop
loopne
mov
and
and
dec
rolb
sbb
xchg
mov
insb
addr16
ljmp
mov
xchg
fs
loop
mov
jne
fldl
out
push
jo
add
pop
mov
mov
cmp
inc
add
fadd
sub
and
cmpsb
dec
dec
cmpsb
dec
enter
inc
sbb
popf
icebp
dec
cmpsb
aad
mull
mov
push
sbb
leave
lcall
iret
arpl
or
xor
dec
dec
gs
sub
pop
ficompl
sarb
movsb
repz
movsl
cmp
xor
ja
push
jae,pn
jo
subb
call
pop
icebp
cmp
jno
mov
dec
icebp
adc
fsubrs
dec
ja
add
ss
fs
out
xchg
jb
add
sbb
dec
or
mov
aam
xor
mov
adc
or
fmuls
cmp
lahf
push
push
mov
or
pop
add
mov
sbb
xchg
mov
outsb
xchg
repz
dec
fldenv
dec
hlt
sarb
int3
scas
add
mov
xlat
pushf
cmpsb
daa
mov
xchg
lods
je
xchg
addr16
jle
mov
out
push
ss
jb
or
mov
jno
and
and
clc
testb
andb
das
aad
roll
test
ret
ret
jae
cmp
in
push
sub
shrb
iret
sbb
ret
das
out
and
and
je
jle
mov
jnp
dec
cmp
cltd
mov
adc
adc
lcall
ss
xchg
xchg
xchg
outsl
cmp
scas
and
cmp
aad
mov
cmp
aad
fdivs
xor
rcrb
dec
lahf
fnstsw
popa
push
push
cmp
lods
mov
cmpsl
push
js
xor
jg
into
adc
jle
cmp
mov
or
mov
mov
fucom
cld
aas
lock
shrl
jne
loopne
push
push
xchg
xchg
xlat
jg
mov
fnclex
fnsave
loop
jnp
stc
mov
test
push
sbb
mov
in
mov
hlt
sbb
push
leave
inc
push
notb
movsl
das
fcomps
clc
lret
mov
jmp
popf
adc
pushl
mov
jmp
sbb
test
jns
lds
into
clc
test
out
ja
sub
sub
dec
adc
pop
xor
into
jbe
pcmpeqb
iret
jp
pop
divb
inc
sub
loopne
push
int3
scas
into
aad
cltd
cmpsb
test
int3
scas
push
pop
jno
xchg
repnz
int3
sbbb
out
cmp
cmpsb
dec
push
fxch
cld
and
cmc
pop
stc
es
stc
rcll
das
jnp
mov
jo
cmp
mov
lret
xor
and
jl
testl
cli
or
push
movsb
add
ret
xor
iret
mov
daa
xor
pop
dec
sbb
xchg
dec
lock
adcb
mov
push
popa
xor
inc
add
jno
sub
jg
les
fldt
ret
aam
xchg
sub
xchg
or
iret
loop
cwtl
pop
or
jae
aad
fwait
arpl
xchg
mov
sub
pop
mov
fldt
sbbl
xor
cwtl
les
mov
gs
dec
test
xchg
jmp
xchg
xchg
mov
jnp
mov
sbb
popf
dec
ss
lock
xor
lods
and
in
adc
dec
movsl
mov
pusha
jae
fdivp
js
pop
inc
fnstsw
push
jg
out
sti
adc
out
je
sub
inc
rorb
push
std
sbb
js
outsb
bound
mov
mov
adc
push
or
dec
outsb
inc
lea
pop
or
sbb
mov
jmp
pop
mov
shrb
push
popf
lret
push
fcomip
popa
rorb
in
add
pop
fnstsw
nop
ss
out
jb
clc
jns
pop
aaa
mov
xchg
clc
jae
xlat
mov
jns
lahf
dec
decl
sahf
out
mov
mov
mov
cmpsb
test
in
inc
cwtl
popf
outsl
fbld
add
int
or
jl
jns
cltd
jecxz
push
pusha
xchg
movb
cltd
push
pop
cmpsl
pop
imul
je
rcll
fs
and
mov
push
pushl
int3
loop
push
push
xor
aas
push
push
pop
out
andb
xchg
mov
in
xor
or
movsl
fisttpll
sub
cwtl
add
fdivl
or
or
xor
or
pushl
scas
mov
jl
adc
jge
popf
cmp
sbb
cld
dec
fnsave
mov
mov
js
movsb
xchg
insb
lahf
cmpsb
frstor
fidivs
sti
aas
push
mov
xchg
dec
jge
in
imul
into
dec
hlt
faddl
es
mov
sub
pop
inc
jg
add
add
lds
cmp
or
sbb
stos
fdivrs
mov
mov
xchg
and
jg
in
aaa
pop
popa
imul
mov
inc
shl
cmp
cmp
mov
sbb
xor
push
aas
mov
into
mov
gs
xchg
sbb
into
jmp
gs
xchg
xor
xor
xor
bound
add
popf
xor
cld
loope
inc
jp
sub
jns
imul
dec
add
aas
jb
push
test
int3
mov
xchg
jge
aad
repnz
add
stos
clc
in
lret
xor
add
leave
stos
dec
movsl
mov
sbb
xor
les
jmp
cli
stos
out
aaa
sahf
mov
inc
dec
call
add
or
mov
pop
cmp
inc
cmc
stos
inc
in
and
mov
repnz
insb
outsl
add
les
add
or
push
cmp
push
or
xchg
or
or
test
push
mov
aas
pop
jecxz
fs
ds
and
xchg
out
adc
jne
popa
ss
shrl
or
cmp
out
xchg
in
enter
test
lret
int3
mov
rorb
mov
cmc
push
negb
loope
enter
mov
lock
test
pushf
int
sbb
je
int3
mov
xchg
and
adc
and
ret
adc
mov
and
ss
sbb
leave
inc
dec
imul
sarb
in
adc
or
popf
lods
nop
xchg
jge
mov
test
sbb
and
out
stos
rorb
loopne
imul
cmpsb
add
xor
jge
xor
cwtl
lret
pop
repz
ja
out
out
push
movsl
and
imul
hlt
pop
push
jmp
sarb
cmpsb
xchg
cmp
scas
jno
addb
xchg
and
in
push
icebp
jge
jnp
dec
pop
mov
stc
mov
dec
xor
push
jbe
outsl
repnz
fucomp
mov
shll
pop
rcll
jnp
enter
and
sbb
sub
add
lret
or
mov
cmc
pop
shl
scas
imulb
mov
or
jmp
adc
push
outsb
sarl
cbtw
je
rolb
sar
cli
jno
xor
cmp
stos
adc
loope
das
mov
and
mov
in
je
daa
sub
sti
and
stos
push
dec
aad
enter
and
fs
imul
jbe
add
and
xchg
rcll
pop
movsb
mov
inc
shl
and
adc
xchg
push
add
sub
xchg
int
outsb
adc
clc
xor
inc
inc
push
cmp
pop
repz
push
scas
dec
cmpsb
and
out
les
dec
inc
xor
addb
leave
mov
mov
in
push
sbb
lods
sub
mov
js
rclb
cmp
jb
adc
mov
std
and
mov
lret
and
testb
cltd
push
or
loope
xchg
out
aam
ljmp
xchg
aaa
iret
in
data16
lahf
mov
filds
xchg
test
or
test
pop
sub
fldl
lods
lea
ss
mov
jne
mov
mov
popf
pop
pop
iret
sub
pop
jno
mov
xchg
cmp
add
scas
icebp
call
and
mov
insb
mov
dec
xchg
xchg
dec
pop
mov
mov
mov
and
or
and
imul
fwait
js
cmp
push
push
jge
out
mov
xchg
ficoml
push
test
jns
cmp
inc
or
or
loope
bound
std
push
xchg
dec
adc
add
lods
dec
dec
outsb
cmp
movsb
dec
dec
fisttpll
es
mov
aaa
fldcw
xor
movsb
pop
repz
jb
dec
xchg
xchg
push
test
js
and
lods
mov
fimull
out
out
add
pop
arpl
sahf
mov
out
pop
sahf
pop
jnp,pt
dec
xchg
cmc
push
int3
lret
aam
sub
std
inc
repnz
roll
xchg
add
in
lock
hlt
fisttps
bound
fs
insb
es
inc
sub
rorb
xchg
outsb
sub
xchg
mov
lods
jg
bound
adc
push
scas
xchg
pushf
push
loop
cmc
das
xor
sti
aam
nop
dec
push
rcl
inc
push
retw
test
cmc
jno
sahf
dec
xlat
out
bound
xor
pop
jae
ja
xchg
add
inc
mov
xchg
sbb
out
loopne
jp
stos
push
hlt
mov
sub
sbb
fs
xchg
xor
ret
fstl
ret
mov
xlat
scas
ss
jmp
jnp
out
lock
lods
push
popa
aad
xchg
inc
sbb
cs
shlb
sbb
pause
insb
mov
cmpsb
cmpsl
xlat
xor
dec
and
mov
icebp
mov
mov
or
popa
loopne
fisttps
mov
add
and
add
and
jb
push
sbb
ds
outsb
insl
add
pop
jbe
push
jne
push
nop
push
sub
pop
lahf
cs
pop
test
pop
fidivrs
aas
adc
lds
or
shlb
in
hlt
or
adc
test
fldcw
xchg
ss
pop
push
xchg
in
and
mov
mov
add
dec
sti
xchg
daa
jnp
cld
jl
sbb
mov
loop
sub
out
stos
fmulp
dec
jp
xchg
loop
cli
jl
sub
aaa
and
arpl
inc
punpckhdq
and
scas
daa
fstl
and
cltd
popa
jecxz
imul
fisttpll
sub
and
sub
mov
mov
subl
iret
call
arpl
inc
mov
or
pavgw
dec
fidivl
cli
loop
aas
fldl
inc
stc
jl
fs
stos
cmp
dec
out
sarb
pusha
cmc
fcoml
and
xchg
and
sbb
ficoms
adc
cmp
fs
mov
test
add
loope
adc
add
decl
cmpsb
mov
das
cwtl
pop
mov
arpl
cwtl
jg
hlt
std
mov
mov
icebp
xor
dec
xchg
mov
mov
stos
ljmp
fs
mov
je
and
jnp
jnp
inc
fwait
pushf
and
int3
cmp
in
out
emms
aad
pusha
div
jne
mov
adc
bound
stos
jns
xorb
pop
cmp
xor
sbb
push
dec
imul
sbb
push
xor
inc
js
sahf
pushf
pusha
aad
mov
or
push
orb
mov
mov
addr16
xchg
out
loopne
cltd
fs
sbb
jge
fsts
xor
sub
in
jnp
lock
sbb
sub
mov
in
cs
movsb
fisubrs
je
lret
fs
inc
cmpsb
fisubrl
inc
jge
push
faddp
roll
mov
sarb
adcb
in
aaa
sub
sub
fprem
cmp
push
mov
jecxz
dec
cmp
cli
mov
jo
insl
cmp
or
push
fcomps
jae
das
inc
mov
push
psubd
inc
inc
add
push
popl
out
loop
jecxz
arpl
xlat
loopne
pop
mov
xchg
hlt
scas
add
fisttps
mov
pushf
jg
cwtl
arpl
xchg
or
lock
fbstp
popf
scas
stos
lock
mov
or
sub
mov
pop
movsl
fsubrs
cmpsl
mov
bound
and
cmp
orb
sbb
cltd
sub
mov
push
xchg
xor
jl
xchg
push
stc
es
imul
dec
cmc
fimuls
scas
or
fists
test
js
iret
mov
dec
movl
mov
fdivrl
xchg
xor
sub
mov
repnz
insb
in
aaa
push
dec
dec
xor
lds
push
sub
mov
rcrl
lock
in
xchg
inc
aad
cmp
ljmp
push
popf
jb
clc
sbb
sbb
add
in
ljmp
test
xor
jp
ljmp
cwtl
nop
pop
lret
jp
popf
insb
mov
jo
mov
jnp
das
adc
fwait
xchg
sahf
orb
push
jge
pusha
mov
pop
adc
and
lret
movsb
inc
icebp
pop
das
inc
mov
call
push
dec
call
jp
xor
push
jb
fstpl
inc
push
cmp
lahf
dec
into
test
movsb
add
push
add
jmp
jmp
adc
pop
fdivl
mov
mov
push
push
pushf
push
fistps
popf
mov
fs
nop
add
fcmovnbe
out
mov
adc
mov
fnsave
mov
push
mov
test
out
sbb
repz
sti
jae
mov
in
insb
popf
shlb
or
jae
dec
mov
test
xchg
adc
and
and
or
cmp
mov
dec
int3
push
jne
aam
or
jmp
xchg
xchg
jnp
jno
test
std
mov
xor
cld
lahf
pop
sbb
pop
aad
sbb
aam
adc
out
cmpsl
js
insl
and
cs
and
mov
into
orb
in
fucomip
add
cmp
daa
sub
cmc
lods
mov
pop
xchg
or
adc
push
inc
scas
lahf
cwtl
sub
mov
sahf
mov
inc
or
test
std
out
push
movsb
test
pop
das
fisttpll
jbe
jp
inc
stos
push
mov
popf
hlt
push
sub
pop
fimull
pop
xor
popf
mov
and
in
push
push
pop
push
jbe
jae
int3
jp
das
push
icebp
dec
cmp
data16
mov
jno
lret
bound
add
aas
xchg
cmp
xchg
or
jp
jecxz
cs
dec
cmp
scas
inc
add
add
cmp
icebp
fadd
push
dec
push
adc
lea
pop
xor
push
sbb
sub
test
pop
add
mov
xor
sub
mov
out
les
lahf
pop
icebp
xlat
test
mov
in
ficoml
repnz
imulb
std
scas
add
pop
inc
adc
jnp
imul
sub
sub
aam
adc
int3
mov
xchg
cmp
mov
adc
ja
pop
sub
hlt
push
int
out
or
jae
rcr
xchg
fmuls
xor
lock
adc
imul
dec
or
pushf
adc
sub
sub
adc
hlt
pop
and
inc
adc
and
loopne
lahf
jp
mov
in
rolb
inc
iret
xlat
add
mov
les
jle
insb
dec
xor
xor
push
push
pop
jge
sub
out
repnz
pushf
movsl
lret
mov
jo
outsl
das
jnp
cli
es
jo
repnz
pop
leave
mov
add
fdiv
scas
jp
cwtl
mov
bound
popa
mov
ss
fstpt
xchg
das
push
iret
cmp
pop
stos
push
and
sti
cmpsl
test
test
sub
aad
add
not
jmp
int
add
test
dec
addr16
lret
jge
xor
add
push
xor
jae
movsb
sbb
test
test
adc
xor
shrl
scas
adc
add
into
imul
gs
pop
aad
inc
add
xchg
sarb
iret
arpl
div
xor
in
dec
dec
inc
add
testl
dec
rorl
or
fildll
jg
sbbl
test
dec
sub
xchg
xchg
popf
lock
in
push
js
push
aam
das
jne
fisttps
add
je
inc
insb
aaa
sbb
or
cmp
sub
fsub
int3
xlat
cld
in
mov
cmpsl
mov
pop
addr16
push
jl
insb
aaa
sbb
or
cmp
sub
fsub
int3
xlat
cld
in
mov
cmpsl
mov
pop
addr16
push
jl
insb
aaa
sbb
or
cmp
sub
fsub
int3
sar
in
mov
mov
lods
inc
pop
push
dec
popa
jl
insb
aaa
sbb
or
cmp
sub
fcompl
data16
fwait
rclb
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
sub
arpl
jl
and
jecxz
loope
xchg
cli
or
fisubl
or
arpl
jp
dec
xor
stos
sarl
jecxz
lock
push
lret
mov
or
jp
or
dec
sub
stos
xor
jecxz
rclb
mov
or
jbe
mov
lods
mov
dec
add
pop
mov
js
mov
bound
mov
push
sti
in
xchg
cwtl
jp
mov
cmpsl
stos
push
push
aas
sub
gs
push
sti
popf
mov
out
jp
xor
or
inc
lsl
inc
add
stos
push
out
add
addl
sub
cmp
jae
push
dec
xor
iret
imul
cmpl
je
lock
sarb
aad
fisubl
xor
jp
leave
arpl
and
in
ret
movzbl
jecxz
sti
add
pop
xlat
pop
lds
test
mov
or
std
rorb
jne
mov
mov
dec
pop
mov
push
cmp
sbb
adc
dec
sub
stos
lret
mov
cli
ljmp
imul
inc
arpl
bound
or
pop
pop
dec
stos
mov
loop
jmp
cli
shrb
sub
outsl
add
push
aas
xor
push
or
stos
jmp
mov
xchg
in
cmpsb
fildll
es
es
add
pop
and
repz
mov
mov
or
arpl
jp
dec
xor
stos
sarl
jecxz
xchg
cli
or
fisubl
xchg
push
xor
mov
inc
mov
outsb
jmp
rcrl
and
in
lret
stc
dec
out
jb
negb
mov
pop
insb
push
js
popf
mov
bound
add
pushf
dec
dec
sub
dec
add
ss
or
or
addb
or
pushf
fwait
push
sbbl
sahf
insb
pop
adc
arpl
jecxz
bound
or
push
pop
adc
out
daa
out
push
scas
stc
xchg
push
fs
lods
jne
add
les
pop
push
out
stos
mov
lcall
jno
xchg
daa
jno
cli
sub
insl
daa
jb
pushf
jb
pop
mov
jmp
les
add
push
test
jg
mov
cmp
dec
stc
popf
aad
sub
or
jbe
std
adc
negl
xor
xlat
and
add
dec
pop
push
pop
or
incb
cld
stos
fnstcw
cld
addl
cmp
lock
jmp
add
mov
jnp
imul
dec
mov
hlt
js
sub
in
stos
aaa
jae
stos
cmp
push
push
fwait
lods
movsb
test
xor
jnp
inc
nop
insl
xor
sub
sbb
cli
jl
xor
in
push
inc
nop
lock
xor
pushf
cmp
sarl
pop
test
and
je
adc
call
cli
xor
cltd
sub
dec
cmpsb
stos
lock
nopl
sub
mov
movsb
cmp
jmp
rep
stos
sbb
or
pop
pop
mov
aaa
jmp
mov
sbb
shll
pop
adc
cmpsl
fmull
or
inc
into
push
subl
aad
lods
fnsave
bnd
dec
pop
inc
inc
movsb
fisubs
xorb
lcall
arpl
popa
orl
out
mov
jge
rolb
inc
repnz
mov
popw
add
xchg
stos
out
fldcw
inc
or
push
arpl
ja
jl
pop
add
jb
leave
cld
or
xor
xchg
cmp
addr16
and
xchg
add
cwtl
mov
addr16
lret
sti
mov
adc
lcall
and
inc
adc
xor
jnp
sbb
or
inc
xchg
dec
adc
sub
cmp
call
stos
sub
xchg
xchg
sub
inc
dec
scas
arpl
sbb
sbb
mov
mov
xlat
mov
std
adc
pop
push
push
mov
pop
pop
dec
dec
push
adc
xlat
pop
lds
dec
test
push
out
push
and
lcall
mov
xchg
subb
pop
stc
int3
cmp
jbe
cmp
scas
sub
ja
jne
cmp
in
push
andb
mov
movsb
cmpsl
adc
and
pop
push
lods
push
in
out
dec
push
or
pop
inc
sarb
and
mov
fistpl
ficoml
mov
mov
rcll
cmp
es
adc
enter
pop
dec
push
mov
pop
pop
push
loop
xor
rcr
and
inc
jb
jae
idiv
dec
stc
pop
cs
jl
mov
lcall
inc
insb
ret
ss
adc
xor
jbe
mov
add
sub
pop
lret
sub
in
cs
out
pop
jns
sahf
push
ja
fiadds
test
lcall
lcall
pop
dec
mov
adc
outsl
lret
hlt
out
mov
mov
pop
push
dec
cmp
js
cmp
lret
mov
loop
sub
jmp
enter
cmp
inc
push
mov
rcrl
sbb
mov
pop
jl
dec
cmc
and
adc
dec
pop
adc
pusha
jg
inc
cltd
push
push
js
in
imul
sti
scas
loope
es
inc
jl
push
mov
cmp
mov
mov
push
mov
rcll
out
pop
lock
cmp
in
in
xchg
insl
rclb
adc
sbb
int3
popf
dec
and
cmp
push
or
aam
push
filds
and
pop
popf
dec
testl
std
stos
mov
cmp
xor
push
adc
push
jbe
imul
sti
mov
cmp
stos
outsb
and
clc
out
jns
mov
or
pusha
xchg
mulb
fldl
jbe
inc
mov
aaa
sub
outsb
cmp
mov
std
sbb
dec
out
imulb
mov
and
mov
out
mov
xchg
les
mov
test
test
pop
xor
jne
cltd
pop
sub
jl
push
push
icebp
hlt
cld
mov
sub
je
outsb
pop
xchg
mov
add
mov
out
xchg
dec
stos
jns
xchg
adc
inc
imul
mov
mov
lea
inc
fwait
stc
cmp
mov
sub
lods
cmpsb
push
xlat
mov
pop
movsl
push
mov
cmp
mov
icebp
outsl
sub
sahf
push
es
jp
inc
cmp
push
pop
pop
xor
lret
cmp
cmp
jae
pop
add
nop
repnz
push
sbb
inc
add
sti
int3
jne
psubusb
mov
sbb
scas
in
js
xor
stc
faddl
jecxz
sub
enter
nop
mov
cmc
out
and
lcall
and
outsb
cmp
xchg
js
cmpsb
ds
inc
popf
jbe
dec
sahf
ljmp
ss
jne
xchg
or
inc
xor
cmpsb
xchg
icebp
test
ja
mov
push
xor
xchg
add
xor
jbe
shrl
adc
jae
mov
mov
rol
pop
inc
pop
mov
fimuls
xchg
std
mov
push
xor
loopne
lods
test
cmp
outsb
lcall
imul
negl
test
lods
mov
pop
cmp
dec
xor
or
popf
sub
hlt
int3
mov
testl
fsubrp
jno
push
inc
mov
inc
push
lods
inc
int3
rorb
sbbl
lcall
test
into
into
fldl
adc
adc
add
std
addl
pop
ret
adc
xor
sahf
xchg
int
add
and
fwait
xchg
cmp
mov
jno
and
or
mov
jnp
cmp
mov
shrl
and
xchg
fistl
jl
mov
rcrl
ficompl
bound
mov
scas
popa
in
mov
dec
mov
add
xchg
pop
fcomp
dec
arpl
mov
add
xchg
sarl
mov
ljmp
pop
leave
push
push
ret
xor
lahf
mov
add
fdivrl
movsl
stc
mov
minps
lods
cmp
cmp
sbb
push
jg
lea
aam
jg
je
inc
and
out
fsubrs
addl
adc
ret
cli
js
push
loop
xor
jl
push
or
lods
mov
pushf
ss
push
sub
sub
nop
loope
mov
sbb
out
dec
xor
dec
add
clc
sub
sbb
push
ss
adc
xchg
lock
stos
mov
loope
cmpl
out
jge
cmpps
dec
lea
fnstsw
mov
rol
mov
popf
inc
clc
imul
push
hlt
pop
call
outsl
push
cltd
pop
inc
movsb
jne
push
cmp
mov
ficomps
or
xor
dec
lods
mov
jl
scas
mov
or
jmp
xlat
mov
sbb
adc
bound
push
push
cs
mov
jg
mov
push
mov
rcll
mov
push
cmp
xor
fildll
cmp
inc
popa
adc
jle
jmp
std
sub
in
xor
sub
ret
xor
push
pop
adc
sbb
ljmp
lahf
adc
popf
xchg
scas
lcall
push
mov
push
mov
sub
xchg
outsb
into
cmpl
into
push
mov
cmp
rorl
jp
mov
mov
loope
inc
sti
jecxz
jb
dec
push
daa
movsb
fisubs
lock
sahf
and
stos
cltd
add
stos
popa
xor
pop
pushf
xor
out
test
jp
js
gs
imul
inc
dec
shlb
add
sti
push
mov
das
or
add
mov
subb
mov
mov
cmpsb
arpl
shr
sbb
hlt
sbb
sbb
test
repz
sarl
add
lret
fs
dec
out
les
outsl
pop
icebp
add
outsl
out
pop
inc
mov
loop
cwtl
gs
icebp
jo
adc
lret
pop
xorl
mov
nop
test
fmul
jne
hlt
rolb
sbb
test
mov
sub
aas
lret
stos
push
cs
pop
cmpsb
in
inc
mov
push
sub
pushf
inc
jo
inc
out
xor
xlat
iret
js
mov
ficomps
sbb
in
cwtl
push
mov
dec
mov
mov
push
lock
pop
dec
bound
fnstsw
imul
xchg
sbb
sub
fcmovu
aas
gs
fcomip
or
std
push
je
push
mov
adc
test
filds
fsubrp
testb
xor
sbb
roll
xchg
loope
cli
push
and
imul
test
pop
cmp
loop
sbb
mov
lcall
or
xorb
sbb
jo
rclb
cmp
dec
in
jmp
int3
inc
into
sub
pop
jmp
imul
lahf
in
fwait
add
decb
leave
mov
sbb
pop
popa
or
sbb
das
nop
adc
sti
bound
lret
sti
cmp
jne
jbe
rorb
ds
imul
mov
ja
add
mov
xchg
pop
sub
arpl
loope
fwait
cltd
in
jbe
in
mov
push
adc
add
sar
push
inc
rcll
stc
mov
cmp
inc
adc
mov
mov
mov
daa
xchg
int3
repz
xchg
test
ret
outsb
out
pop
sbb
or
push
lahf
sub
inc
lods
lods
sub
mov
imul
mov
test
adc
stc
fbld
iret
cltd
leave
data16
add
xor
add
xchg
test
mov
xchg
xor
or
arpl
xor
cmp
cmp
out
xlat
fcompl
mov
adc
and
cld
jns
and
or
lcall
sbb
iret
push
push
nop
call
out
sub
mov
daa
cwtl
mov
mov
mov
ss
dec
pop
mov
mov
fcmovnbe
pop
bound
push
in
pop
dec
lea
ficoml
hlt
push
add
mov
dec
jne
jp
inc
aad
ljmp
int
out
lea
inc
rorb
ret
push
popa
aaa
pushf
iret
orb
push
pusha
xor
mov
fsubrl
mov
xor
or
roll
mov
pushf
mov
insl
lods
jecxz
cmp
mov
clc
jo
xor
lret
mov
jns
xchg
movsl
mov
sub
in
adc
push
fsubrs
sahf
add
xor
or
xor
int3
cmpb
cwtl
out
arpl
xchg
fdivp
pop
lock
pop
mov
jne
inc
sbb
in
rcrb
test
sbb
test
or
xchg
fs
push
jecxz
and
mov
mov
iret
lock
rclb
push
roll
sbbb
cltd
lock
fidivrl
jae
imul
push
sbb
pop
negl
and
aaa
ja
jbe
aam
pushf
mov
cs
pop
pop
pop
inc
outsb
mov
mov
aaa
mov
test
mov
out
rclb
arpl
or
pop
xchg
ja
pop
in
jge
xchg
inc
mov
lahf
nop
xor
repz
lods
in
mov
leave
subl
mov
iret
pop
scas
xor
pop
mov
movsb
test
mov
clc
add
xchg
jns
jp
sbb
movsl
mov
test
push
inc
jb
stc
xchg
xor
aas
fidivrs
push
enter
jmp
mov
sub
dec
fldenv
fisubl
dec
sbb
mov
repz
in
push
imul
gs
repz
and
mov
popa
dec
fistl
loop
mov
push
jmp
lcall
sub
sub
fsubrl
sbb
int3
or
arpl
out
mov
sub
jl
stc
mov
rol
test
cmp
into
in
leave
pop
rorl
xchg
lea
adc
mov
xchg
inc
lods
ja
pop
push
and
popf
jmp
jno
imul
int3
test
or
orl
jno
mov
mov
sub
jo
inc
push
ds
adc
pusha
fstpt
jae,pn
cs
push
jno
cmpsb
xor
mov
js
or
dec
mov
inc
arpl
jno
outsb
idiv
mov
inc
xor
inc
push
filds
movsb
mov
add
aam
cs
iret
fcoms
jp
addr16
or
in
sbb
push
and
sub
cmc
dec
fucomp
inc
cmp
test
sub
xor
enter
jno
xchg
sarl
jle
xchg
pop
scas
jge
cmp
jge
fs
push
jp
pushf
pop
mov
andl
pop
int
movsb
cld
cld
sub
dec
jnp
xlat
sahf
push
jns
mov
sti
sbb
xchg
dec
pop
xor
add
leave
in
lods
push
int3
bound
sub
pusha
roll
pop
repnz
mov
into
outsb
mov
fs
xor
faddl
test
pop
fidivs
in
inc
xchg
in
loop
aas
adc
pop
cmp
mov
ds
test
add
mov
lock
pop
lahf
fdivs
and
in
inc
xchg
das
int3
lds
arpl
pop
pop
shrb
bound
pop
sbb
add
mov
mov
insb
fidivrs
scas
or
imul
jmp
lcall
mov
add
insl
bound
pop
add
enter
outsb
movsl
pop
call
enter
loop
test
shll
subl
int3
dec
mov
roll
mov
adc
dec
rcl
iret
out
jmp
loopne
fs
jg
cmpsl
pop
std
stos
stc
int3
xlat
jecxz
loopne
orb
adc
adc
test
jp
sbb
xchg
lahf
push
lods
imull
bnd
mov
jnp
inc
and
adc
bound
xchg
in
clc
loope
sbb
mov
shlb
not
push
mov
xlat
mov
sahf
mov
std
push
dec
cmpsb
xchg
push
jl
fisttpl
out
dec
inc
repnz
js
sbb
sbb
push
stos
lock
push
adc
adc
int
push
lahf
mov
dec
inc
push
addl
inc
aam
pop
test
dec
sub
loop
mov
mov
out
cmp
mov
rcl
sub
pop
lea
pop
or
mov
jne
icebp
mov
fnstsw
iret
push
cmp
mov
movsb
xchg
pop
test
mov
dec
aam
mov
daa
pop
push
aaa
fiadds
fwait
push
inc
cmp
push
mov
out
push
mov
ss
add
add
pop
pop
and
xchg
addr16
inc
pop
cltd
push
jge
fistpll
rcl
adc
push
mov
inc
clc
mov
scas
icebp
lea
dec
insb
scas
pop
and
mov
hlt
inc
dec
jge
jns
fnstsw
sahf
repz
or
push
push
sub
test
mov
aam
lds
js
pop
sub
jmp
lods
xchg
mov
sbb
shl
popa
ja
outsb
mov
loope
jne
pop
cmp
xor
jo
insl
xchg
rcrb
pop
in
dec
cmpsl
shrl
ja
inc
jae
jl
pmulhuw
lock
imul
shl
ret
pop
jae
adc
adc
and
jnp
sarl
into
inc
mov
cwtl
fldl
dec
adc
movsb
sahf
fiaddl
shlb
mov
imulb
mov
daa
pop
outsb
sbb
sbb
adc
leave
out
stc
stos
pop
mov
loope
xor
xor
incb
jae
repnz
repz
iret
push
rcrb
xor
bound
and
lcall
mov
and
popf
xchg
and
cwtl
add
adc
add
cmc
xor
push
hlt
adc
lret
int3
cwtl
std
inc
dec
push
sbb
pop
rolb
jl
cmp
test
inc
fisttpl
mov
or
dec
xor
mov
nopl
xchg
sbb
xor
mov
call
mov
sarb
pop
ds
sub
mov
cmpsb
jmp
int
sbb
lcall
jecxz
push
and
mov
mov
push
fsubrp
daa
aad
lret
sbb
arpl
loope
mov
jle
mov
sbb
cmp
cmp
fldl
out
xor
es
loopne
xchg
mov
xchg
out
mov
lods
and
aaa
adc
std
mov
mov
ljmp
incl
add
aam
and
xchg
mov
mov
mov
popa
dec
nop
adc
adc
sub
and
add
mov
inc
push
repz
inc
cwtl
mov
ss
idivl
dec
cmc
adc
cltd
adcl
mov
mov
dec
lods
int
loopne
stos
jp
cmp
mov
sub
pop
mov
fs
in
ret
or
cmp
mov
add
in
lret
sti
cli
mov
jecxz
cmp
inc
sub
mov
mov
push
add
sbbb
aaa
enter
mov
jl
dec
imulb
leave
mov
les
addl
mov
rcl
dec
fcompl
add
in
lods
idivb
mov
sbb
xchg
dec
xor
ret
je
jecxz
jae
out
pop
mov
jne
es
imul
hlt
repnz
shrb
mov
sbb
xchg
adc
adc
sub
insl
adc
push
outsl
aas
xor
xchg
int
outsb
addb
cmp
jecxz
mov
in
adc
adc
sar
pop
fisubrl
lret
pushf
lret
cmp
jle
std
out
enter
into
mov
push
mov
mov
dec
and
insl
sbb
loopne
cli
ret
scas
adc
rorb
mov
push
psubq
xlat
pop
jecxz
jnp
xchg
mov
push
insl
push
or
mov
and
imul
addr16
sub
or
add
jmp
pop
xlat
lds
rcrb
sbb
aam
mov
push
ret
mov
xor
mov
inc
or
repnz
xchg
scas
jb
stc
fidivs
push
mov
or
xchg
inc
xlat
push
scas
orl
addb
adc
jbe,pt
sub
lock
xor
jne
scas
lock
or
cltd
sbb
or
ja
sbbb
cltd
jne
mov
inc
push
jo
jno
xchg
jp
adc
mov
sbb
cmp
outsl
and
ds
jno
rol
clc
into
sbb
pop
lods
xor
xlat
ficoml
outsl
adc
lret
mov
ljmp
mov
dec
xlat
cmp
std
mov
adc
sti
test
cmp
rcll
lret
cli
mov
mov
not
pop
add
sbb
fdivrl
out
repnz
jnp
add
test
and
xlat
out
add
adcb
call
mov
test
leave
cmp
cmpsl
es
sub
into
loop
andl
sti
push
hlt
daa
or
test
mov
ret
cmp
add
es
ror
les
es
ss
lcall
lret
sbb
jge
flds
enter
daa
mov
nop
sub
inc
dec
insl
pop
add
into
fdivrl
dec
shrb
js
adc
out
adc
xchg
fcomi
ljmp
std
out
shrb
mov
fs
xchg
enter
mov
popa
xchg
lods
imull
lods
inc
hlt
scas
pushf
xchg
add
stc
shll
stc
dec
in
jno
mov
dec
vpmaddwd
ds
cmp
inc
incl
scas
jle
mov
arpl
mov
pop
insl
sub
mov
lea
cmc
add
or
cmp
pop
push
jp
sub
jno
jecxz
outsb
mov
inc
rcll
pinsrw
cmp
ljmp
stos
out
dec
push
sub
sub
out
loope
jmp
pushf
sbb
adc
dec
xor
stos
sarl
jecxz
xchg
cli
or
fisubl
or
arpl
jp
dec
xor
stos
sarl
jecxz
xchg
cli
or
fisubl
mov
arpl
adc
dec
xor
and
repz
mov
mov
or
arpl
jp
dec
xor
stos
sarl
xchg
lcall
pop
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
mov
mov
dec
cltd
pop
testb
stc
sbb
sub
cmp
dec
mov
jnp
mov
imul
sbb
jge
stc
sbb
sub
xor
test
xchg
jmp
imul
idiv
adc
cmp
dec
out
xor
aaa
in
sub
loop
hlt
pop
stos
sub
sbb
push
cli
loopne
mov
inc
pop
and
fmull
or
fs
add
cmc
loope
fcmovnbe
outsb
pop
outsb
dec
mov
xor
sbb
test
js
insb
pop
inc
std
or
adc
cmp
adc
dec
cltd
cmpsl
test
mov
lahf
icebp
xor
fiaddl
loop
testb
les
loopne
jnp
fldt
or
xor
ret
insb
cmpsb
adc
or
stos
sub
lret
leave
mov
pop
test
mov
arpl
inc
jae
jle
stos
sbb
cmc
hlt
stc
xchg
adcl
or
cltd
jnp
inc
jns
cltd
stos
fnstsw
sub
ret
loop
adc
das
xor
and
jno
jnp
out
imul
dec
mov
insb
or
pop
mov
sbb
push
call
les
lret
insb
cmpsl
push
fistpl
jmp
test
dec
pushf
jle
sub
in
clc
pop
loop
das
imull
or
sub
sbb
or
stc
sbb
sub
cmp
dec
mov
jnp
mov
imul
sbb
or
stc
sbb
sub
cmp
dec
mov
jnp
mov
mov
cmpsl
mov
ds
sub
pop
add
fisttpl
mov
es
loope
sbb
cltd
fisubl
into
cmp
inc
add
out
mov
xchg
iret
out
ret
mov
cli
pop
js
int
xor
and
xorb
cmpsb
adc
mov
mov
fcmovnu
lret
out
in
add
dec
dec
xchg
add
sbb
daa
movsl
xor
fildll
xor
inc
cmp
in
and
movsl
push
mov
addl
sbb
inc
mov
add
cs
dec
popa
mov
dec
in
pusha
rol
add
movsl
inc
mov
repnz
into
pushf
fistps
jb
cmpsl
jbe
fcoms
xlat
push
adc
adc
repnz
faddl
fisubl
icebp
xor
jp
mov
and
xchg
adc
pop
push
mov
lea
and
shll
shll
cmp
gs
lods
in
ss
notb
xchg
fsubs
sti
mov
sub
popf
add
lret
mov
mov
mov
out
test
arpl
stos
mov
mov
adc
mov
dec
stos
lahf
ret
pop
inc
cmp
sbb
pop
nop
jmp
arpl
fidivrl
mov
cmpsb
faddp
cmpsb
out
orb
or
mov
xor
leave
push
sbb
pop
jo
cwtl
push
scas
sub
mov
in
pop
add
lcall
mov
imul
xor
movsl
dec
xorb
cs
mov
jbe
mov
loope
pop
shrb
xchg
fwait
push
pop
repnz
test
fdivs
cmp
jb
jg
xchg
lds
scas
and
or
cli
xor
xchg
in
movb
and
and
adc
or
or
cmp
and
aaa
rcr
lods
push
cmp
jle
sti
inc
addr16
fsubs
lods
push
out
add
xor
aaa
mov
aas
sbb
bound
add
sahf
out
lret
mov
pushf
add
xchg
dec
jle
mov
mov
jmp
btc
and
jp
pushf
xor
jl
ss
stc
xchg
hlt
xchg
inc
and
or
dec
out
shrb
shl
dec
fisttpll
popf
jmp
iret
in
call
dec
mov
xchg
jne
stc
in
movsl
int3
das
jl
xor
inc
dec
outsb
setle
movl
xor
pop
sbb
jp
or
ja
xor
aas
lahf
je
ret
jl
add
pop
loop
cmp
int
push
out
inc
ja
nop
xor
and
cmp
cmpsb
xor
inc
je
xor
xchg
test
movsb
mov
push
xchg
sub
add
or
pop
hlt
push
dec
pop
sub
sbb
dec
xchg
iret
ljmp
cmpsl
mov
fcmovu
cli
hlt
sub
cli
add
movsb
aam
in
sbb
mov
out
ret
imul
arpl
mov
jl
and
xor
or
insl
arpl
nop
in
sub
fsubrs
push
or
mov
or
popa
pop
mov
or
inc
test
insl
mov
mov
adc
stos
test
mov
fldcw
push
cmc
pop
cmp
jp
push
add
mov
dec
mov
or
fcoml
cli
mov
fwait
pop
fisttpll
cmovnp
ljmp
lret
lea
sbb
pop
lea
mov
aam
xchg
out
add
loopne
mov
lret
push
xor
icebp
xchg
mov
icebp
call
mov
mov
xchg
jecxz
rcl
mov
fidivl
inc
adc
les
mov
stos
sahf
les
or
sub
adc
xchg
repz
clc
leave
imul
pop
cmp
xor
push
pusha
jo
xchg
mov
dec
inc
or
fnstenv
mov
shrl
lods
mov
jle
cmc
push
pop
cmp
shrl
mov
test
push
loope
dec
dec
popf
stos
mov
dec
sbb
mov
jno
cltd
add
fsts
aaa
and
inc
jno
xchg
adc
xchg
cltd
mov
stos
add
mov
lcall
int
jecxz
daa
js
les
pop
lret
mov
push
lcall
mov
lcall
xor
cs
add
mov
std
in
jle
int3
int
sub
cld
and
movsb
mov
fwait
xchg
pop
scas
xor
iret
pop
add
inc
dec
clc
mov
push
inc
and
lcall
or
data16
fistps
jl
add
call
push
aaa
in
and
pop
xor
shlb
aas
leave
pop
adc
fstl
leave
pushl
movsb
sbb
or
and
xor
ds
adc
or
lods
push
mov
shld
lret
push
lret
cli
fdivrs
and
popa
xchg
add
cli
ffree
pop
fs
adc
fcmovu
xchg
jle
jns
es
fildll
pop
jne
loope
sarl
jo
repnz
js
dec
rorl
lret
mov
fs
bound
xlat
add
repz
leave
clc
sub
sbb
inc
cmpsl
std
xchg
mov
js
dec
test
enter
cmp
fistl
std
add
std
cltd
xchg
into
test
clc
mov
xchg
rorb
pop
jle
sbb
xlat
sub
mov
pop
push
pusha
or
jle
imul
mov
mov
cwtl
inc
or
mov
out
cmpsb
in
dec
lret
mov
in
loopne
mov
adc
leave
ja
scas
repnz
add
inc
pusha
cli
sahf
mov
sbb
inc
mov
dec
repz
lahf
shll
fadd
push
add
mov
mov
sub
ret
cmc
sub
js
adcb
push
mov
loopne
xorl
mov
xor
sbb
or
adc
jmp
out
pop
lea
subb
jns
rcll
xor
dec
fsubrp
icebp
hlt
in
into
out
lahf
movsl
mov
sbb
fdivl
mov
pop
rorb
sub
mov
lea
loope
sbb
loop
bound
bnd
mov
push
fwait
fs
sbb
loopne
jecxz
std
int3
repnz
fcmovu
mov
bound
insl
or
or
dec
fistps
xchg
cs
sub
rcrb
lods
pop
dec
mov
add
insl
cs
fsubs
mov
xorps
mov
jb
int3
mov
push
mov
xor
movsb
nop
stc
inc
testw
jo
repnz
arpl
fdiv
leave
fneni(8087
xlat
in
mov
jb
inc
test
and
xor
add
cmp
ja
sub
jns
insb
cmp
inc
xor
in
cmpsl
inc
push
fsubrp
jnp
stc
lods
andb
andl
mov
out
imul
push
filds
out
sub
push
cmp
test
xor
flds
movsb
add
push
pop
pushf
lahf
dec
loop
cmp
andb
xchg
mov
in
out
add
xor
int3
cmp
push
add
or
sub
pop
stos
cmp
add
mov
cmpsb
fcomi
fistps
pop
outsl
dec
add
jmp
icebp
and
mov
inc
in
and
mov
stos
outsb
or
mov
xchg
fcoml
sbb
push
jns
inc
jp
fcoml
int
aas
bound
fidivs
pop
leave
mov
imul
xchg
and
incl
pop
mov
pusha
or
add
sahf
xchg
mov
or
sbb
sahf
lock
push
inc
cmp
pop
push
or
adc
std
jbe
xchg
leave
cmp
lods
push
adc
cmp
or
sub
aam
lahf
mov
pop
jl
movsb
push
lahf
test
or
mov
push
push
lock
mov
mov
push
mov
mov
xchg
push
sub
or
lahf
lods
sarb
imul
pop
sub
in
push
pop
jb
push
xlat
test
jge
inc
popf
mov
dec
add
imul
mov
fnstenv
add
sarl
xor
pop
rclb
cmp
cmp
add
dec
test
push
cmp
ror
xlat
cmpl
add
mov
or
mov
mov
loopne
adc
xchg
jns
pop
cmpsl
inc
out
rorl
xor
nop
push
fwait
cwtl
clc
push
movsl
sub
inc
and
test
fiadds
push
add
mov
fmuls
jnp
mov
pop
cmp
adc
mov
dec
add
movsl
lcall
push
nop
fldenv
push
out
mov
outsb
nop
lea
dec
fidivrs
rcr
shrb
test
xchg
loope
mov
out
je
mov
test
adc
sub
in
add
popf
in
loope
arpl
add
inc
clc
cmp
test
fcmove
add
ja
dec
xor
das
pushf
or
xchg
sahf
dec
bsr
call
fwait
sahf
pop
xchg
xchg
sub
fldt
pusha
mov
stc
add
cmpsb
stc
hlt
das
or
in
mov
push
stos
dec
sbb
and
mov
inc
insl
jbe
pop
sbb
shll
xor
inc
fcoms
lds
shll
mov
mov
sub
inc
pop
inc
pop
jns
repz
fsubrs
inc
pop
sbbl
push
mov
mov
adc
loop
pushf
jns
jnp
iret
jmp
mov
out
add
jp
sub
cmc
les
out
sbb
jle
xchg
sub
fistpl
scas
shl
cmp
jno
cmpsl
daa
cmp
aas
adc
xor
push
pop
stos
push
in
inc
es
je
cmp
into
sahf
les
and
jo
and
sub
fstp
shll
push
pop
xlat
push
out
cmp
shl
mov
iret
or
insl
or
push
mov
jecxz
add
popf
mov
aaa
sahf
shlb
dec
sbb
loop
jmp
add
cmpsl
xchg
dec
jb
xchg
xor
orb
test
in
push
dec
sub
inc
adc
jne
sbb
cs
nop
rorb
xchg
scas
dec
jb
test
pop
xor
sbb
dec
xchg
loopne
add
js
rcll
dec
mov
out
push
jo
xor
or
insb
sbb
std
std
xchg
dec
inc
lods
loopne
xor
sbb
lods
sbb
dec
mulb
hlt
pop
ljmp
insb
inc
insb
aas
mov
xchg
movsb
mov
inc
xor
fmuls
and
notl
hlt
jns
adc
sub
imul
adc
dec
sub
pop
xchg
cmp
mov
pushf
aaa
fnstcw
loope
pop
cmp
xchg
fdivl
ret
xchg
mov
xchg
lret
loop
icebp
mov
out
clc
xchg
divl
sub
or
push
jg
pop
adc
mov
or
inc
test
lea
inc
jmp
add
mov
push
daa
mov
enter
loop
sub
sub
adc
jle
sbb
pop
je
inc
or
outsl
push
push
jnp
mov
dec
push
xchg
cmp
pop
sbb
xor
imul
inc
jae
xor
out
pop
rcll
dec
sahf
mov
jae
push
aas
mov
shlb
and
pop
out
arpl
fwait
mov
mov
outsb
xor
fs
das
pop
xor
push
leave
dec
and
add
hlt
test
rolb
mov
fwait
mov
fs
xchg
fsubrs
inc
repnz
int3
jne
xchg
sti
push
jl
mov
xor
in
daa
sbb
jbe
mov
cmp
add
enter
push
in
inc
mov
jg
inc
sub
add
hlt
adc
orb
pop
std
neg
rorb
inc
ficoms
sar
ficomps
mov
into
and
mov
pop
aam
xchg
mov
inc
inc
inc
fdivrl
outsb
addr16
and
mov
dec
mov
out
ljmp
jl
cmp
jnp
cli
cs
call
fucom
cmovns
jecxz
rcll
sahf
icebp
inc
xchg
xlat
out
call
push
jg
mov
int
and
cmp
sub
iret
mov
jo
sti
cltd
cmp
es
mov
adc
mov
shlb
add
push
and
sub
and
mov
ror
push
adc
pop
dec
add
inc
pop
faddl
xor
fwait
enter
int
out
adc
cmc
dec
dec
cmpb
std
fisubrs
nop
mov
dec
shr
mov
jae
ja
sub
mov
adc
jle
or
mov
push
adc
mov
lret
adc
cmp
jae
mov
sbb
clc
leave
ror
pop
addr16
in
data16
popa
push
mul
repz
xchg
cltd
jnp
clc
xchg
xchg
sahf
pop
mov
xchg
arpl
orl
jmp
and
pop
lds
scas
pop
mov
sub
mov
insb
pop
mov
pop
push
repz
sbb
fidivl
pop
shlb
jno
xchg
dec
mov
aam
mov
adc
cmp
loope
adc
cltd
jns
in
insb
insb
aas
push
xchg
mov
inc
gs
sub
ret
loope
dec
jno
sub
sbb
scas
in
inc
dec
popa
stos
pop
movzbl
sbbl
mov
idivb
cmpsb
data16
jl
cld
std
dec
xorb
or
imul
xor
dec
sahf
xor
jmp
xchg
xchg
and
daa
lcall
inc
mov
or
jg
add
adc
lret
aaa
inc
push
cmp
dec
testl
xor
ljmp
stc
popf
inc
and
popf
push
loope
arpl
inc
adc
popf
adc
pop
cmp
xchg
out
add
dec
es
jle
inc
dec
ljmp
cld
mov
push
insl
les
lret
mov
test
cmp
dec
mov
jno
dec
sbb
add
inc
mov
mov
rcll
fnstsw
movsb
test
push
jl
add
pop
inc
dec
gs
fsubl
cmp
lahf
repz
cld
adc
cmp
mov
xor
xchg
inc
inc
stc
arpl
xchg
iret
imul
pusha
dec
push
iret
jge
jp
adc
enter
mov
mov
pop
lds
and
pop
cwtl
and
push
lods
int3
fidivrs
jmp
imul
or
xor
aad
repz
adc
mov
in
ljmp
jae
dec
push
cmp
xor
das
ss
in
mov
pushf
xlat
xor
cmp
add
adc
jmp
mov
scas
and
repz
ja
imul
xchg
inc
mov
imul
aas
loop
mov
decb
int
nop
std
mov
lods
in
jl
ss
push
mov
sub
fistpll
mov
and
mov
xor
mov
rclb
call
lods
pop
mov
imul
scas
adc
mov
inc
repz
addr16
inc
fildl
loope
ret
fmull
cld
xchg
mov
jl
xorl
mov
popf
notb
out
push
add
jne
cmp
add
clc
test
push
dec
into
in
icebp
repnz
mov
mov
push
dec
xor
fs
push
sar
xlat
mov
clc
js
sbb
into
arpl
ja
lds
sbb
fsubs
mov
rcll
jmp
jnp
xchg
pop
call
mov
pop
icebp
mov
xor
or
adc
in
repnz
js
jae
stos
adc
ret
roll
shld
ljmp
int
scas
loopne
xor
faddl
cld
lahf
xchg
dec
adc
ds
dec
jae
add
in
dec
add
xorb
dec
aaa
mov
lods
or
lahf
cmp
dec
movsb
fsubrs
insl
pop
adc
nop
nop
fstpt
or
fs
imul
sbb
cmp
adc
clc
jo
movsb
mov
fadds
clc
sub
pop
xchg
mov
cwtl
hlt
pop
fcoml
movsb
xor
sub
jbe
lods
xor
aas
hlt
sbb
cmp
mov
or
pushf
mov
pop
push
push
sarl
mov
xchg
test
dec
or
mulb
and
sbb
and
add
dec
fidivrl
movsb
xchg
sbb
mov
idivl
out
push
inc
push
inc
ljmp
bound
popa
scas
les
cmc
xbegin
shlb
ret
sub
add
sbb
stos
sahf
pop
push
sbb
xlat
xor
loope
xor
push
mov
fstpt
sti
roll
bound
jmp
int
bnd
mov
es
mov
pop
add
pmulhuw
xchg
mul
xor
lods
xor
std
cmp
imul
pop
aad
lea
inc
shll
ret
add
aaa
jae
ljmp
push
insb
mov
sbb
jno
or
cmpsl
lds
mov
fnstsw
dec
sbb
adc
mov
fstpt
in
add
push
in
cmp
dec
insl
pop
jmp
clc
or
sub
hlt
sbb
lcall
push
lcall
pushf
jle
inc
add
push
loopne
and
scas
outsl
adc
pop
test
cmp
in
or
add
ljmp
pop
mov
jge
mov
mov
sub
cmc
outsl
adc
mov
frstor
es
xchg
sbb
mov
xlat
hlt
push
or
stc
les
rorl
push
pop
iret
lret
inc
dec
adc
imul
xchg
xchg
dec
fnsave
xor
add
sbb
icebp
mov
lret
mov
jae
jmp
jecxz
lahf
insl
mov
adc
movntps
jp
mov
xor
xor
repnz
xchg
sbb
stos
lret
out
xor
rorb
lods
fsubr
sbb
and
shlb
lret
scas
jmp
mov
inc
cmpl
lds
lods
fisttpl
lock
mov
sub
enter
cmp
in
imul
jp
mov
mov
iret
jae
cs
xor
bound
nop
icebp
in
push
sbb
loop
mov
inc
mov
out
fstpl
fcompl
mov
cwtl
cmp
mov
sti
fsts
sub
inc
out
das
xchg
mov
lods
mov
cmp
jmp
stc
int
mov
mov
and
cmp
lret
shll
mov
outsb
pop
push
push
mov
mov
sbbl
xchg
pop
push
mov
xchg
jno
push
lret
js
mov
xchg
sarb
mov
mov
mov
das
mov
inc
outsb
xor
xchg
aad
aam
out
mov
ret
stos
aad
sub
push
dec
shr
test
mov
out
setl
roll
in
loope
cwtl
mov
stos
dec
dec
or
pop
jns
or
cmpsl
daa
mov
sub
push
xchg
sbb
xor
hlt
or
jno
test
jecxz
out
add
push
pop
sbbb
notb
es
fwait
sub
jnp
cmp
ret
out
xchg
outsl
inc
xor
mov
jl
ror
mov
dec
leave
out
es
jp
xor
mov
call
dec
mov
sub
rorl
sti
enter
sub
and
fists
adc
add
dec
fwait
adc
out
or
adc
sahf
lds
jge
lea
xor
mov
push
add
or
sub
mov
loope
cwtl
xchg
and
cld
sub
and
lock
adc
fcmovnu
xchg
sahf
cmp
outsb
cmp
sbb
jl
scas
sub
or
test
icebp
out
test
push
xlat
push
pop
push
xor
sbb
stos
inc
sbb
mov
aam
mov
negl
fildll
jb
inc
testb
out
push
or
ja
push
mov
dec
cmpsb
pop
and
in
mov
or
adc
ja
push
ljmp
jno
andb
cld
and
mov
jp
inc
gs
and
std
cld
jo
in
jle
add
outsb
jle
sbb
movsl
pop
ss
adc
lea
mov
xchg
pop
imul
sbb
or
stc
sbb
sub
cmp
dec
mov
jnp
mov
imul
sbb
or
stc
sbb
sub
cmp
dec
mov
jnp
mov
and
cmp
sub
and
jmp
dec
mov
jns
mov
imul
cltd
jnp
hlt
push
in
sbb
rcll
data16
fwait
mov
stos
pop
mov
movsb
pop
fisttpl
jmp
sbb
sub
pop
ret
into
repz
imul
add
push
fildl
jae
arpl
ret
sbb
sub
pop
cmpsl
dec
repz
imul
orl
fisttpl
lret
pop
sti
fwait
jmp
mov
or
pop
ret
push
lahf
and
or
aam
aam
cli
fcomps
sub
pusha
out
mov
outsb
sub
mov
shrb
or
stos
push
add
xor
std
out
pop
repz
dec
cmp
push
cs
cmpsl
jb
outsb
cmp
adc
fistl
sbb
mov
jl
dec
sti
pop
sub
dec
mov
test
dec
ja
stos
push
fidivrl
xchg
shlb
les
xor
mov
test
xchg
jnp
je
jecxz,pt
lods
fcmovb
fidivs
out
sub
out
pop
dec
les
mov
test
je
fldl
inc
testb
or
dec
ret
mov
fwait
add
push
fildl
lret
jae
fucomi
popa
sbb
or
mov
dec
repz
add
jne
ja
dec
ret
ss
pusha
mov
mov
jecxz
ret
cmp
sub
fwait
mov
cmp
adc
stos
arpl
jle
pop
iret
inc
mov
push
mov
fadds
into
push
fildl
jae
arpl
xchg
sbb
sub
pop
ret
dec
repz
imul
add
push
fildl
jae
arpl
xchg
sbb
sub
pop
ret
dec
repz
imul
mov
pop
pop
sub
adc
xor
mov
push
dec
pushf
or
mov
inc
shll
es
cmp
lds
scas
nopl
and
ret
xchg
adcl
adcl
dec
cmp
sbb
sbb
push
push
nop
shl
lods
subl
xchg
scas
test
es
aas
or
lods
inc
lahf
sub
jp
cmp
aaa
mov
xor
xor
cli
dec
je
push
cwtl
rorl
popa
pop
push
lods
fimull
rorl
push
sub
dec
or
push
icebp
pop
and
add
aas
loopne
mov
cmp
mov
sbbb
ljmp
movntps
push
arpl
push
mov
sahf
scas
jl
jg
cwtl
xchg
and
loop
xchg
sub
cwtl
push
out
aas
xorb
jnp
xor
jns
sub
fsubrs
and
adc
jo
std
mov
gs
mov
cpuid
jo
in
sub
add
xor
das
lcall
fs
mov
and
mull
or
aam
inc
mov
add
cmp
and
jb
pop
jne
pop
xchg
lds
and
adc
xor
jo
outsb
jns
xor
add
jg
mov
int3
popf
fs
ss
push
fs
inc
lcall
out
fcomi
push
inc
sti
adcl
es
sbb
test
adc
outsb
sbb
insl
xchg
jno
add
push
push
clc
icebp
std
aad
xor
cmp
inc
jp
into
or
push
sahf
push
inc
rcrl
cltd
cmovle
rorb
test
xchg
into
lock
divl
sbb
push
mov
aas
and
or
mov
dec
fldl
dec
or
pop
call
cli
bound
mov
addr16
popa
imul
out
cwtl
int3
lock
iret
push
leave
rsqrtps
pop
xor
push
shl
dec
sahf
das
adc
lock
popf
inc
mov
mov
insl
jle
dec
inc
clc
mov
bound
nop
and
movsb
in
andl
sub
sub
mov
fsubl
lret
test
mov
repz
mov
push
jl
sub
cmc
cwtl
aas
dec
adcl
sub
xchg
addr16
sti
dec
lcall
aaa
aam
xor
jmp
sbb
loop
movsl
xlat
ds
sbb
push
pop
stc
xor
sbb
dec
cmp
mov
or
add
test
incb
movsb
gs
mov
jp
in
adc
xchg
jb
mov
ljmp
sbb
mov
dec
sub
mov
add
pusha
push
or
packsswb
push
outsl
mov
imul
cmpsb
xchg
push
pop
cli
rclb
cltd
xor
lods
ds
sbb
andb
lds
pusha
pop
aad
mov
sarl
pop
xchg
xor
xchg
fwait
cmc
cmpb
xor
fwait
stos
sar
or
gs
push
jne
int
xchg
nop
adc
pop
mov
mov
test
mov
int
test
add
ljmp
je
and
sti
ss
int3
xor
hlt
push
sub
xchg
pop
xchg
mov
mov
push
push
out
mov
rorl
int3
xchg
mov
xor
andb
pop
in
ljmp
add
ljmp
sub
pushf
loopne
xchg
ds
push
addb
adc
aas
jb
xchg
adc
dec
or
cld
out
ss
pop
das
lahf
leave
out
jnp
movsb
sub
lods
add
ds
sub
add
lds
fimuls
inc
addr16
cmc
aad
in
sbb
cmp
out
fs
arpl
aam
gs
lret
mov
fisubs
xchg
dec
push
mov
inc
fdivr
inc
jl
xlat
push
fcomps
rep
push
push
aam
sub
mov
sahf
inc
cmp
iret
clc
fwait
fs
into
add
sbb
jg
sub
xchg
or
mov
push
fwait
add
js
adc
mov
shrl
lret
mov
push
xor
xorl
gs
int
lcall
xlat
pop
adc
xor
mov
daa
popf
fimuls
cmp
push
sub
push
fmul
push
mov
sub
pop
xor
or
out
cld
jl
push
inc
mov
lds
lret
pop
add
fnsave
jp
and
insb
icebp
imul
jl
dec
loopne
filds
push
sbb
into
subl
xchg
add
adc
lahf
ret
and
jo
cmpl
lea
jle
mull
rclb
xchg
xchg
mov
push
xchg
insl
daa
scas
push
out
sbb
adc
lods
rclb
mov
lcall
jnp
sub
adcb
stos
std
hlt
icebp
movsl
mov
jno
sbb
leave
dec
mov
xchg
leave
ds
mov
lds
dec
stos
mov
test
fimuls
push
imul
stos
xor
mov
inc
sub
mov
in
adc
fnstenv
mov
movsb
mov
rolb
push
pushf
push
or
mov
popf
mov
sub
lret
faddl
std
cs
xchg
jp
push
adc
cmp
pushf
in
and
rorl
dec
dec
sbb
lcall
fwait
lahf
setle
mov
std
popa
stos
idiv
in
add
int
mov
cmp
imul
mov
fisubrl
pop
pop
push
out
out
mov
aam
test
and
pop
test
shrb
mov
jno
adc
mov
in
pop
loopne
enter
cld
cmp
addb
xchg
daa
std
mov
outsb
pop
and
clc
cs
xchg
gs
mov
xlat
xchg
cmp
xchg
sub
stos
test
or
or
lods
test
and
push
sub
out
inc
jb
xchg
mov
fs
popa
add
or
mov
test
xchg
cmp
sub
out
lods
cld
inc
jns
adc
ljmp
sti
cs
decl
mov
mov
adc
adc
inc
mov
adcb
cmp
jge
lds
adc
push
imul
sub
mov
shrb
or
dec
cli
adc
scas
xchg
in
sub
inc
push
cmp
shll
cmpl
mov
add
in
mov
sub
push
jmp
mov
lds
sub
les
jno
jno
jae
mov
cmpsl
repz
dec
pop
sbb
pop
push
add
mov
inc
insl
mov
mov
std
add
xor
pop
lahf
add
lods
jl
lret
jo
add
out
outsb
xchg
imul
or
fisttpl
les
insb
push
add
or
mov
add
jge
das
dec
inc
daa
mov
into
int
aad
loopne
push
xor
add
addr16
sbb
ret
in
addr16
test
imul
dec
lods
repnz
popa
gs
jae
xor
mov
fldt
sahf
and
dec
rolb
xor
pushf
aam
sbb
adc
es
adc
cli
movsl
pop
pop
xor
fcmovnu
mov
push
loope
daa
fcompl
in
cmp
xor
add
adc
adc
and
hlt
test
es
cmpsb
and
addr16
mov
clc
addr16
div
sbb
add
ret
fbld
xchg
rep
leave
loope
aad
loop
add
xor
lret
dec
xor
ret
adcb
sub
jmp
push
fcom
test
inc
icebp
dec
dec
fwait
inc
subl
int
inc
xor
pop
inc
dec
out
lcall
mov
jno
and
push
fs
sbb
pop
mov
cli
fbstp
insl
dec
cld
adc
jbe
je
xor
sahf
es
jo
insl
cmp
mov
out
fpatan
ss
cmp
aam
movsb
pop
sbb
cmc
jl
pop
and
xchg
sub
sti
xchg
push
sarb
leave
fs
js
idivl
pop
pop
lds
orb
lret
negl
dec
cmp
jb
jmp
add
sbb
sub
jge
addr16
or
pcmpeqd
pop
inc
test
rcrb
push
push
pusha
mov
cmp
std
push
cld
xchg
gs
inc
xor
xchg
xor
sbb
push
inc
xor
fiadds
xchg
fwait
pop
push
mov
sub
mov
push
mov
rcll
insl
icebp
bound
mov
push
sub
test
xchg
std
in
dec
aam
xchg
jbe
cmp
mov
dec
push
adc
das
sub
hlt
push
xor
sti
mov
mov
mov
aaa
insb
out
push
pusha
lret
out
pop
jb
mov
add
mov
mov
and
sbb
nop
sub
scas
pop
mov
push
cltd
bound
push
mov
xchg
aas
push
orl
dec
insl
in
mov
call
cmpsb
std
inc
mov
testl
push
std
andl
aas
lods
imul
aam
das
xor
lea
mov
pop
je
push
cmp
mov
fstl
fbld
adc
inc
mov
out
cmp
pop
pop
lcall
mov
jb
iret
push
cmp
popa
mov
daa
xor
fldenv
jae
ds
sbb
jne
sub
mov
lret
add
pop
loopne
pop
jecxz
sub
notb
mov
ret
pop
into
iret
adc
cmp
mov
bnd
out
jns
enter
lret
icebp
xchg
or
lcall
das
cmp
pop
sbb
test
sti
mov
pop
test
pop
fsubr
stos
xor
movsb
adc
dec
insl
aaa
call
fistpl
inc
ret
ja
mov
mov
cmp
out
mov
sbb
mov
xchg
pop
je
xor
into
mov
cmc
fs
fidivl
cmp
sti
dec
and
adc
xlat
repnz
push
xlat
movsl
lock
mov
mov
sahf
aaa
mov
or
fstps
dec
hlt
cmc
icebp
iret
sarb
nop
aad
int
mov
jnp
mov
sub
mov
test
cmp
test
inc
lods
ficomps
ds
iret
loopne
push
scas
mov
add
lcall
fcomp
movsb
jp
imul
pop
aad
adc
rcll
ret
clc
fmuls
dec
cmc
push
pop
jmp
fisubl
gs
cmpsl
add
rcr
aas
test
mov
pusha
cmp
lret
sbb
aad
xchg
adc
pop
push
out
mov
mov
jmp
daa
cwtl
popf
lds
mov
out
xlat
push
mov
ss
mov
sub
jle
je
sti
js
enter
xchg
stos
jg
cs
jns
sti
rcrb
fists
add
mov
out
scas
cld
xchg
inc
test
inc
into
sub
mov
rorb
jne
mov
inc
icebp
cmp
fnstcw
and
mov
gs
popf
jo
stc
adc
inc
adc
and
and
imul
mov
xchg
shrb
inc
imul
mov
insb
lock
or
push
in
in
imul
fnstsw
inc
icebp
mov
add
or
push
loopne
push
push
push
lods
xor
mov
or
dec
jmp
dec
mov
fs
adc
lods
inc
arpl
xchg
cmp
mov
in
jnp
int3
repz
outsb
adc
repz
jne
inc
pop
or
jb
lcall
cwtl
movsb
nop
push
mov
add
movsb
test
mov
push
popa
mov
pop
mov
movsl
push
outsb
fnstcw
cmp
decl
addr16
arpl
fildl
into
clc
mov
add
imul
ds
pop
pop
ss
test
push
lret
lcall
jae
cld
dec
xchg
repz
cmp
fidivrl
daa
mov
mov
setb
popf
jl
pop
sbb
daa
xlat
and
pop
orb
mov
add
or
loop
dec
iret
mov
sti
inc
inc
sub
cmpsb
mov
mov
push
push
cli
add
out
ja
dec
lds
movsl
repnz
stos
inc
or
inc
cli
mov
out
pop
rorb
mov
mov
add
js
out
mov
pop
xor
ror
fidivl
sarb
cmp
xlat
movsb
adc
pop
imul
fwait
subl
push
in
sub
orl
pop
lahf
sysexit
xor
cli
push
mov
inc
mov
inc
movb
inc
xor
clc
pop
sub
mov
push
adc
ja
or
insb
mov
leave
sub
repnz
xlat
cmp
pop
push
sbb
imul
sti
xchg
mov
adc
les
pop
and
pop
lock
xchg
das
adc
popa
mov
mov
scas
jp
mov
xchg
outsb
mov
int3
push
push
lock
xchg
xlat
sbbl
pop
clc
enter
mov
sub
loope
lods
iret
ja
rcr
shrl
test
popf
cltd
mov
sbb
push
cld
int3
mov
test
icebp
mov
outsl
or
imul
into
out
insl
scas
add
aaa
lcall
sti
mov
ljmp
clc
data16
outsl
xchg
scas
pop
adc
loope
pop
sub
inc
mov
clc
cmp
jne
stos
mov
mov
and
add
mov
inc
mov
insl
push
divl
aaa
dec
add
add
loopne
mov
inc
xchg
cwtl
mov
cmpsb
cld
fistl
pop
mov
xchg
cld
inc
adc
push
pop
pop
push
hlt
out
jmp
cs
adc
xor
jg
xlat
sarb
inc
xor
fisubs
adc
xor
jb
aas
inc
enter
mulb
adc
push
adc
icebp
jno
out
daa
cmpsb
lods
dec
arpl
insb
das
cwtl
in
hlt
adc
in
ret
out
adc
test
insl
repnz
imul
mov
sub
mov
cmp
sub
decb
mov
mov
aaa
lahf
cmp
gs
test
pop
pop
movsb
cwtl
ds
lods
add
jo
push
mov
jbe
notb
andl
mov
loope
mov
ficoml
movsb
xor
cmp
add
sub
xchg
or
in
xor
div
mov
popf
push
loopne
add
shld
mov
inc
addr16
mov
out
xor
lahf
inc
jnp
or
cmp
subl
mov
aam
popa
pop
pop
popf
mov
push
sbb
cmpsl
mov
ja
test
adc
mov
xchg
push
lods
mov
shrl
lock
inc
push
out
clc
mov
inc
adc
into
mov
mov
mov
int
push
add
into
push
push
in
addl
mov
and
lret
xchg
add
movsb
pop
insl
pop
fiaddl
mov
mov
sti
push
xor
std
inc
rep
xchg
inc
cmc
xchg
sahf
or
inc
js
loop
xchg
pushw
push
xor
mov
movsl
push
ret
outsb
lret
ficoml
mov
divl
add
mov
and
push
pop
ret
outsl
and
das
dec
and
inc
dec
lret
mov
jo
pop
out
jmp
je
lods
pop
stos
hlt
icebp
dec
mov
or
inc
inc
pop
cmpsb
cld
fsubs
shrl
outsb
dec
outsl
in
fsubr
lea
push
cwtl
mov
fdivrp
sbb
lods
out
xlat
cmp
cmp
mov
mov
mov
int
sub
jae
xchg
and
jbe
push
sbb
fisttps
pop
lds
mov
dec
mov
cmp
into
adc
inc
sub
xor
push
sub
imul
fwait
arpl
mul
pop
push
stos
xchg
xor
sub
rolb
mov
pop
push
jle
loope
movsl
inc
pushaw
jnp
or
add
not
xchg
and
push
iret
dec
aaa
daa
sub
dec
out
icebp
and
dec
ret
dec
dec
lret
test
jne
adc
mov
and
test
jnp
or
dec
dec
jl
cld
daa
clc
xor
sbb
or
fwait
gs
add
add
mov
mov
adc
jns
call
sti
dec
add
add
ds
rorb
xchg
adc
repz
clc
jo
mov
dec
push
push
lods
pop
in
jmp
out
dec
nop
paddd
stc
jg
mov
pop
pop
pop
loope
fldenv
cld
xchg
mov
repnz
mov
adc
scas
jge
sbb
push
pusha
xchg
and
aam
hlt
cltd
into
ja
push
adc
cmp
and
jle
adc
jns
sub
add
movsl
mov
push
or
inc
push
or
push
loop
outsl
cli
push
fwait
sbb
cltd
inc
mov
pop
xlat
mov
xor
xchg
sti
lret
push
test
jecxz
add
cmp
lret
cmp
push
pop
insb
fldenv
mov
gs
je
sbb
cmp
sarl
negl
sbb
ficoml
stos
push
mov
xchg
add
imul
pop
jmp
add
adc
or
xor
in
jb
fcoml
or
mov
popf
pop
and
pop
adc
mov
test
cs
and
arpl
inc
int3
stos
jne
mov
mov
cmc
lock
lret
fdivr
jecxz
pop
aam
sub
pop
sbbl
adc
test
xlat
insl
pop
inc
dec
test
pusha
mov
jns
aam
mov
ficompl
mov
mov
cmp
pop
out
dec
adc
sbb
pop
pushf
sbb
xor
popf
xchg
aas
lcall
ret
test
stos
mov
fsubrl
xlat
dec
adc
add
mov
js
push
repnz
lret
pop
enter
cmpsl
jg
sub
out
mov
cmp
aam
and
lret
mov
fadd
pop
mov
mov
dec
repz
push
ja
int3
lahf
fistpll
jbe
sub
imul
lret
sbb
xor
leave
dec
popa
and
cli
dec
bound
popa
cmp
mov
xchg
cwtl
lods
ficomps
mov
cltd
mov
lea
jecxz
and
mov
cmp
rcll
mov
fadd
outsl
adc
jae
test
call
push
fidivrl
mov
pusha
clc
xor
sbb
in
cmp
adc
lahf
or
fistl
sbb
aas
cmp
pushf
lock
push
jmp
sbb
sbb
movb
jecxz
mov
imul
lea
cmp
scas
aam
clc
fisubrl
and
call
xchg
scas
jmp
cmp
lods
lods
xchg
cwtl
cld
xor
jb
jge
pop
mov
inc
inc
pop
jmp
cmp
rcl
mov
mov
inc
jp
xor
mov
pop
lea
and
push
out
cmc
inc
pop
mov
shll
jl
fldenv
shlb
xlat
daa
jbe
scas
mov
clc
mov
imul
in
and
sahf
push
add
cs
or
dec
ret
cwtl
dec
inc
add
dec
pop
ret
mov
cwtl
and
mov
das
arpl
stos
xchg
es
imul
xchg
add
repz
iret
ljmp
mov
inc
mov
cmpb
jnp
fstps
inc
stos
pushf
mov
inc
push
pop
inc
in
mov
mov
mov
pop
lock
xchg
push
fimuls
scas
xchg
inc
aad
or
xor
cmpsb
popf
cld
sub
nop
add
nop
mov
fstp
sub
dec
nop
pop
idivb
imul
outsl
cmp
gs
mov
imul
xlat
pop
aam
ret
mov
mov
js
and
push
jns
imul
adc
sub
aaa
cmpsl
and
jno
ljmp
fildl
jae
arpl
xchg
sbb
sub
pop
ret
dec
repz
imul
add
push
fildl
jae
arpl
xchg
sbb
sub
pop
ret
dec
repz
imul
add
and
and
jae
jmp
fwait
orl
cmp
dec
idivl
imul
das
mov
fistl
jae
jecxz
xchg
sbb
cmp
mov
test
mov
fimull
les
jp
push
pop
cmovp
outsl
push
sbb
mov
fimull
stos
fistps
das
push
pop
cmovp
outsb
sub
dec
or
fimull
stos
fistps
or
outsl
sub
jg
sbb
sbb
es
cli
into
sahf
lahf
mov
mov
imul
pop
or
mov
or
push
repnz
stos
pusha
lret
jb
incl
push
and
mov
dec
sub
outsl
mov
inc
out
lds
in
cmp
or
pop
mov
fsub
dec
or
fisttpl
mov
iret
dec
mov
mov
imul
in
sub
jb
add
inc
fdivrl
aas
daa
imul
out
outsl
mov
jg
adc
jno
test
js
push
out
pop
gs
fwait
lds
cwtl
cmovge
jl
scas
ljmp
out
stos
fistps
das
push
pop
cmovp
outsl
sub
dec
dec
ficoml
leave
mov
decl
dec
push
dec
add
and
push
cs
cmp
lcall
mov
dec
push
bound
mov
inc
outsl
and
sahf
fldcw
out
stos
fistps
das
push
pop
cmovp
outsl
sub
dec
or
fimull
stos
fistps
das
push
pop
cmovp
outsl
sub
dec
or
sub
sbb
jg
mov
mov
scas
and
bound
adc
js
jmp
lods
mov
mov
mov
ljmp
sti
aaa
lds
cmp
std
int3
jge
mov
mov
dec
push
dec
jb
sub
pop
and
xorb
movsl
xchg
insb
push
pop
rcll
mov
aam
jge
insb
jo
mov
jbe
stos
cmp
cmp
xchg
aam
inc
push
inc
adc
pop
cmp
mov
ret
lret
div
lret
subb
inc
jg
cmp
aas
ds
out
cld
xor
sbb
bound
loopne
in
mov
push
test
ljmp
rorl
dec
or
inc
push
lods
cmp
movl
xor
adc
mov
aaa
cmp
cld
jl
imul
mov
inc
repz
push
dec
stos
pop
aaa
jbe
out
mov
sub
inc
add
repz
daa
fwait
fs
das
cmpb
cmp
xchg
mov
or
flds
cmp
push
lods
stos
iret
cmp
and
xor
call
adc
data16
clc
xchg
mov
jae
cmc
and
popf
lcall
das
mov
xor
or
cmpsb
mov
mov
outsl
cmpl
fwait
call
aam
daa
popa
cmpb
xchg
jg
or
je
js
inc
jo
int
pop
jbe
jo
adc
push
mul
xchg
xchg
ds
sub
xor
dec
mov
xlat
sbb
xchg
movsb
test
sbb
data16
dec
jbe
mov
sbb
popa
adc
jnp
mov
mov
out
push
imull
imul
push
jmp
daa
jns
out
into
inc
mov
loop
sub
scas
es
dec
adcl
mov
lret
mov
sub
mov
add
pop
mov
lahf
cli
jl
push
push
add
test
lcall
mov
loop
xchg
xor
push
imul
mov
sub
aas
sub
push
pop
xorb
lds
and
pop
movb
pop
mov
test
pushf
js
pop
sbb
testb
mov
cld
nop
jl
xchg
dec
push
movl
and
xchg
cli
jmp
mov
cmp
xor
dec
xchg
xchg
lods
sbb
mov
push
push
cmp
div
lock
lds
mov
jae
jno
add
dec
mov
and
fstl
cltd
push
les
inc
mov
pop
sbb
dec
inc
hlt
push
aas
mov
ja
test
jge
cs
rcll
stc
fwait
push
inc
lods
hlt
sub
push
orl
xlat
sbb
jecxz
int
fbstp
fimull
lods
inc
std
jle
movsl
sub
lcall
popf
scas
cs
xchg
and
adc
add
inc
jnp
sub
add
insb
fnstcw
jmp
jo
mov
lret
call
adc
pusha
cmpsl
mov
jl
mov
mov
in
pop
sbbl
hlt
add
test
imul
scas
subl
loopne
lret
ljmp
mov
dec
cmpsb
mov
std
and
or
mov
and
sbb
test
ljmp
stos
dec
and
push
jl
mov
mov
mov
pop
pop
jl
jae
push
les
jae
arpl
jne
dec
shlb
leave
inc
cmpl
inc
lahf
sarl
add
push
stos
add
repz
xchg
or
lds
pop
sbb
mov
and
pop
mov
sbb
cmp
sahf
push
fistpl
rcrb
xchg
in
mov
sub
push
or
shlb
pop
xchg
fcmovnb
sahf
pop
clc
adc
bound
add
lods
movsb
cmpsl
es
jmp
jg
cli
sub
rol
pusha
inc
iret
or
sbbb
mov
outsl
push
inc
jmp
setns
addl
fwait
jmp
repz
push
arpl
clts
fwait
mov
mov
xor
fsubl
cmpsb
pop
inc
lea
push
movsb
orb
cmp
xor
mov
adc
fs
stc
xchg
mov
jns
movsl
fsubs
mov
push
mov
inc
test
adc
fwait
add
aas
movsb
pushf
addr16
leave
das
xor
pop
js
pop
iret
fucomi
nop
add
xchg
adc
inc
in
adc
mov
dec
fs
push
pop
fmulp
out
aam
out
mov
mov
push
cmp
into
int3
ja
fs
pop
pop
sbb
mov
nop
popa
fmuls
scas
int
bound
ljmp
out
mov
aaa
les
mov
in
ret
lcall
repz
leave
call
scas
sbb
pushf
fists
dec
sbb
stos
jl
sbb
stos
jl
fistpl
dec
repz
push
call
mov
in
sub
adcb
movsb
bound
rolb
repz
lret
mov
jne
lret
mov
xchg
cmp
test
outsb
or
xchg
popf
push
mov
add
jle
je
cmpsl
mov
adc
leave
cmp
mov
shrb
mov
push
mov
out
es
in
loope
call
mov
stc
notb
mov
push
pusha
pop
jno
xchg
lret
ds
shl
test
push
sbb
push
lock
jbe
lods
pop
sarl
inc
divl
dec
mov
add
push
or
xchg
mov
insb
in
sbb
push
jmp
cmp
mov
movsb
jb
scas
loopne
test
ret
mov
inc
in
sub
shl
push
mov
int
pusha
push
inc
std
inc
lods
ret
rorb
mov
jno
add
push
pop
insl
rclb
xchg
adc
test
mov
cmc
mov
fiaddl
and
add
sti
sbb
xchg
pop
mov
jnp
mov
rorl
mov
add
repz
jle
cmp
cmp
pop
xor
cltd
xor
mov
sub
cmp
mov
mov
loopne
xor
pushf
dec
subb
mov
xchg
cmc
cwtl
add
add
xchg
mov
cmp
lahf
data16
dec
push
aam
xchg
neg
cmpsl
push
pop
mov
jl
lret
sbb
mov
roll
daa
mov
jo
scas
sti
sub
inc
pusha
add
inc
mov
sarb
sub
dec
loop
bound
cmp
dec
dec
jp
cmp
aad
mov
xor
scas
icebp
cwtl
clc
lock
in
or
enter
movsb
jo
add
dec
xor
lret
pop
add
jp
pop
xor
mov
pop
pop
mov
bound
rorl
pop
data16
add
loopne
mov
cs
pushf
jbe
fnsave
dec
inc
push
iret
sub
rolb
je
in
shlb
iret
addb
pop
jle
xor
fcomip
dec
in
cmpb
les
lahf
mov
mov
push
mov
fcmovnbe
push
xlat
icebp
jno
leave
dec
dec
xchg
inc
mov
sub
mov
sub
fdivrl
sub
jecxz
xlat
or
out
aaa
loopne
int3
mov
add
push
nop
test
jbe
push
adc
pop
sub
cmp
rolb
mov
rolb
and
and
cli
popf
repnz
cli
jg
mov
cmpl
xchg
dec
pop
cmpsl
std
xchg
inc
add
outsl
add
movsl
das
cmp
test
cmp
stc
pushf
sti
lds
out
add
push
xchg
add
out
xchg
inc
out
push
lods
jns
mov
popa
xor
call
jle
mov
mov
daa
cwtl
jle
ljmp
fsubl
sbb
mov
inc
sbb
lods
cltd
sbb
lods
and
mov
fnstsw
inc
and
fists
xchg
jb
mov
jge
in
or
insb
cmpsl
xchg
and
das
scas
fucomp
clc
dec
jbe
nop
lret
aaa
mov
cmp
mov
or
stos
fistps
jne
pop
enter
mov
clc
mov
aad
inc
and
push
outsl
cmp
nop
negb
sbbl
cmpsb
mov
adc
scas
mov
sbb
outsb
push
pusha
loop
icebp
call
add
sub
std
sbbb
adc
dec
sarb
mov
adc
xor
fisubrl
xor
jg
iret
shrl
fmull
push
xorb
mov
clc
pop
lods
ljmp
push
mov
mov
push
aad
xchg
cmp
mov
mov
mov
out
inc
push
jl
add
loop
movsl
repnz
aad
mov
lea
imul
in
test
sarw
xor
mov
mov
cli
and
mov
jecxz
xchg
cwtl
daa
sarl
dec
jp
jno
fwait
jno
movb
stos
add
push
ja
test
nop
inc
pop
and
ss
or
dec
lret
jmp
std
sahf
push
and
jl
xlat
and
mov
outsl
adc
ror
push
pusha
ret
pushf
movsl
test
sub
jge
stos
addr16
xor
scas
js
aaa
stc
jmp
fisttpl
adc
fsubl
lea
aam
adc
les
mov
inc
mov
inc
les
call
inc
xor
aad
push
jl
mov
leave
lods
mov
stos
xchg
sub
pop
movsl
sti
mov
sub
pop
leave
jmp
jmp
popa
pop
mov
mov
lock
sti
push
cmp
fmulp
pop
inc
and
cmp
mov
data16
cmp
mov
pusha
subb
dec
aad
pop
jge
sub
das
adc
into
add
inc
rolb
xor
mov
mov
sarl
cwtl
or
shrb
insl
test
je
aas
pop
inc
or
xchg
out
fsubl
pop
mov
decl
sub
mov
sbb
cs
or
popa
repz
out
int
add
xlat
fisttps
push
xor
xchg
jmp
or
popa
xor
pop
mov
mov
pushf
pop
sub
inc
sub
xor
mov
jo
inc
stos
inc
xor
ja
in
scas
test
addr16
mov
adc
xchg
push
aaa
lock
jmp
lret
sub
test
aaa
jne
scas
aad
sub
sub
mov
pop
sbb
stos
mov
movsl
repnz
mov
jl
mov
insb
xchg
mov
push
lret
and
call
pop
dec
enter
push
std
inc
mov
pop
repz
lret
push
mov
movsb
loop
lock
adc
loope
loop
cmp
mov
mov
mov
andl
mov
push
mov
popa
push
js
push
dec
pop
mov
ljmp
cltd
fisttpll
push
aam
aaa
mov
js
cmc
mov
cwtl
jbe
jmp
fiaddl
push
rclb
das
pop
and
dec
xchg
fwait
cmp
movsl
jg
fisttpl
mov
jno
cmp
adc
divl
jne
stos
jbe
or
hlt
or
and
gs
fs
bound
cmpsb
xchg
push
jle
and
addr16
mov
fidivrl
in
mov
jecxz
hlt
and
ret
jnp
xor
lret
cmp
sub
pop
fwait
jns
gs
xchg
lods
je
orl
dec
bound
fldcw
cld
pop
scas
mov
xchg
fsub
imul
xlat
pusha
pushw
mov
pop
daa
mov
mov
mov
cmp
pop
xchg
aas
xor
enter
cwtl
lea
cmpsl
test
arpl
push
mov
push
jns
xchg
sub
in
mov
arpl
mov
adc
rcll
insb
pop
loopne
pop
xchg
xorl
add
arpl
in
mov
xor
cmpsl
xor
pop
lea
add
mov
insb
sbb
jns
movsb
or
add
imul
xor
adc
inc
mov
insb
fdivl
or
jl
scas
gs
cmp
add
out
add
cmpl
mov
inc
sbb
or
xchg
in
fcoml
add
dec
mov
xor
cld
sbb
sti
xor
jl
dec
bnd
mov
jle
lock
sbb
in
pop
mov
pop
js
push
push
bound
jecxz
push
ds
dec
xor
push
adc
loop
inc
cmp
les
xchg
xchg
dec
mov
cwtl
icebp
ret
fucomi
pop
int
xchg
sbb
xchg
stc
ss
mov
mov
mov
mov
int
jecxz
cmpsb
lret
orl
insb
mov
sub
cmp
mov
sbb
push
cld
or
cld
mov
mov
pusha
idiv
mov
test
cmpsl
decl
ds
test
dec
and
mov
xlat
add
lea
push
or
jbe
mov
pop
mov
pop
scas
mov
mov
xor
mov
sbb
clc
cmpsl
mov
stos
or
dec
data16
pop
xlat
lahf
and
or
scas
push
xor
jecxz
lahf
inc
fs
xchg
pop
inc
in
xchg
sti
inc
loop
jne
js
lods
cmpsl
mov
lcall
pop
and
in
mov
iret
add
fsts
xchg
and
adc
mov
adc
jmp
cli
pop
rol
adc
aad
add
mov
xor
int
mov
outsb
fstp
lcall
sbb
loopne
and
add
adc
out
sbb
outsl
popf
inc
jge
cmpb
imul
neg
and
clc
ljmp
into
jo
bound
lret
es
lea
jns
sub
push
add
cltd
cmp
add
mov
adc
js
or
adc
and
inc
in
out
fs
movsl
add
cmp
xlat
xor
fs
xchg
cs
jp
mov
fwait
mov
mov
xor
cmp
repz
or
mov
sub
clc
cmp
mov
adc
pusha
inc
or
cwtl
jae
pop
cmp
js
jbe
jmp
xchg
sbb
fs
add
orl
outsl
aam
sbb
sbb
sbb
sbb
fstpl
dec
test
mov
push
adc
jl
adc
sbb
aaa
pop
fists
and
mov
aad
and
mov
loopne
push
in
cwtl
mov
mov
lret
xchg
mov
out
andl
insl
ret
test
xor
adc
mov
shl
test
inc
jnp
jge
js
in
ljmp
jb
mov
lahf
mov
into
or
out
in
jbe
int3
pop
sub
jg
imull
lret
sbb
dec
decl
dec
test
mov
sbb
xlat
pusha
jmp
sbb
push
fwait
in
xchg
rorl
ss
outsb
andl
push
mov
mov
movl
out
pop
dec
imul
jb
repz
xchg
int
and
mov
mov
push
pop
fbstp
xchg
inc
mov
push
mov
repnz
jle
call
xlat
ljmp
lock
mov
mov
rcr
stc
sbb
movsl
cmpsl
inc
or
cmp
mov
mov
pop
and
jno
push
cmp
dec
imul
mov
mov
mov
adc
ljmp
adc
lods
dec
sbbl
fstpl
enter
jle
and
pop
shrl
ja
sahf
mov
pushf
mov
out
mov
sahf
and
push
add
or
pusha
xor
pop
inc
dec
and
dec
push
xchg
inc
hlt
add
push
es
test
mov
pop
pop
dec
sub
ja
pop
cltd
in
xchg
stos
inc
repz
popf
fisubrs
fcom
jb
jmp
and
dec
sub
ja
xor
test
iret
test
dec
in
jp
mov
cmp
bound
mov
in
pop
arpl
sbb
mov
cmc
cltd
stos
fnstenv
sub
imul
sbb
mov
cld
pop
ds
dec
outsb
xchg
adc
dec
jge
inc
icebp
js
int3
sbb
dec
mov
cs
push
mov
xor
push
xchg
add
mov
and
adc
pop
mov
lock
add
adc
add
fwait
xor
cmp
mov
rcrb
call
sbb
xchg
mov
mov
int
adc
xor
subl
shll
sub
sbb
xor
dec
xor
push
out
push
xchg
repz
das
xor
lods
jp
iret
fs
sbb
rcrl
test
shrl
movq
jl
mov
aad
xlat
dec
pop
sub
cwtl
lods
fwait
test
mov
sbb
cmp
lods
ficoml
data16
jne
xor
mov
push
add
mov
aas
int3
stc
insb
in
sbb
xor
ret
mov
xchg
movsl
xor
mov
and
movsl
or
into
push
popf
in
in
xchg
in
jge
pop
dec
cmp
call
popa
hlt
inc
movsl
or
xchg
mov
dec
fstp
pop
mov
inc
dec
shll
pop
fildl
xchg
inc
cmpsb
cmp
pop
bsr
jge
add
int
std
lods
idivb
mov
xlat
mov
pop
cli
into
lock
les
pop
data16
xchg
jp
xchg
ja
mov
repnz
sar
mov
fwait
int
push
jno
in
jb
push
divl
imul
out
jne
shlb
pop
arpl
push
repnz
adc
movsl
pop
lods
out
out
mov
push
cmpb
in
push
mov
mov
aad
cltd
scas
push
jo
and
mov
pop
std
jnp
sub
or
arpl
cmp
outsl
add
push
lret
bound
cmp
jbe
outsb
lahf
mov
cltd
inc
dec
inc
lock
aad
cmp
scas
sbb
push
hlt
stc
mov
mov
pop
jae,pn
pop
pusha
lret
leave
call
xor
xlat
push
fiadds
lods
ds
std
or
test
das
mov
mov
sti
sub
xor
push
cmp
iret
jo
jecxz
adc
xchg
sub
push
mov
idivl
push
cmp
lcall
sbb
jp
push
push
pop
mov
mov
in
pop
mov
push
fcoms
xchg
adc
adc
jp
add
push
lcallw
or
ljmp
jg
pushf
outsb
jno
lea
sbb
out
ljmp
jle
add
mov
mov
jnp
addl
ja
sub
xor
xchg
inc
call
mov
mov
mov
test
xor
insl
xchg
ja
adc
mov
out
pop
outsb
mov
lret
jg
into
in
push
xchg
cld
out
lock
push
or
and
mov
push
add
fs
push
sbb
jecxz
jns
cmp
stc
xor
test
ret
rcl
dec
xchg
loopne
pop
shlb
pop
pop
sbb
xlat
sbb
mov
jns
push
movsl
popf
and
pop
adc
pop
inc
xchg
mov
fwait
add
mov
sti
jbe
and
jne
inc
fsubrl
sbb
lret
int3
jecxz
mov
cmc
mov
xchg
xchg
push
std
insl
pusha
push
dec
xchg
push
int3
pop
loope
inc
and
adc
mov
popa
adc
mov
insb
and
imul
mov
push
clc
or
ret
mov
pop
test
xlat
rcrb
pop
das
mov
cmp
fldcw
ljmp
in
push
sarl
ss
out
mov
pop
cmp
add
rcrb
dec
jge
add
aas
xor
or
jbe
push
pop
or
xor
push
shl
mov
dec
stos
pop
out
push
dec
das
xchg
fs
loop
push
xor
mov
fdivrl
lahf
jb
lahf
mov
lea
cmp
mov
sub
jecxz
push
jecxz
les
push
rorl
in
or
out
dec
push
int3
cmpsl
inc
addl
outsb
scas
sti
sti
inc
mov
aaa
jb
or
les
mov
cld
pop
into
in
xchg
push
jmp
mov
pop
cmovp
cmp
mov
pop
mov
mov
andb
mov
cmp
movups
sub
inc
adc
cmp
ja
fdivs
mov
popf
mov
cmp
fwait
ret
pop
sub
lret
xor
mov
inc
cmp
add
sbb
mov
out
test
xchg
push
push
cmpsl
outsb
sarl
mov
jp
sahf
add
pop
mov
test
int3
addb
adc
mov
push
xor
fisubl
fisttpl
stos
fistps
das
push
pop
cmovp
outsl
sub
dec
or
fimull
stos
fistps
das
push
pop
cmovp
outsl
sub
dec
or
fimull
stos
fistps
das
imul
push
dec
jg
outsl
sub
dec
or
fimull
sub
dec
jne
test
shlb
out
cmpsl
in
cmc
mov
lcall
fldcw
push
or
orl
jp
mov
lcall
popa
fisubl
inc
cli
and
pop
cmpl
repz
jp
mov
lcall
js
imul
mov
adc
and
adc
ret
insl
lcall
test
add
loop
imul
add
es
loopne
pop
and
or
cld
pop
xor
cmpsl
sarl
scas
imul
sub
adc
xor
dec
xchg
ljmp
or
push
outsb
ljmp
xchg
iret
jg
into
fdivr
cmp
popa
lret
xor
or
jle
sbb
fnsave
je
js,pt
jne
out
into
sar
gs
roll
dec
sti
cmp
pop
out
cmp
sub
jecxz
loope
xchg
outsl
push
jne
mov
fwait
xor
sbb
adc
leave
jo
sarb
outsb
jbe
pop
adc
adc
aam
lcall
popa
fidivl
inc
cli
dec
or
cmp
push
jp
int3
and
inc
iret
fbstp
xchg
adc
into
push
mov
test
das
test
repz
cs
cli
jb
jle
popa
mov
ljmp
aam
in
xchg
das
xchg
push
icebp
sbb
xor
gs
jno
inc
cli
push
or
cmp
push
jp
mov
lcall
popa
fidivl
inc
cli
push
or
cmp
push
jp
mov
aas
and
xchg
out
push
in
arpl
insl
dec
mov
adc
xor
add
fsubl
movb
push
fildl
or
cwtl
daa
mov
test
pushf
xchg
sahf
jl
rolb
pop
xor
mov
adc
and
inc
cmc
mov
arpl
push
out
sub
nop
pop
mov
subl
popa
pop
push
xor
lcall
int3
jnp
sahf
cli
mov
sub
inc
mov
sti
push
into
sbb
scas
imul
push
imul
sub
jg
xor
mov
lock
xchg
mov
fimuls
stos
dec
cltd
fcoms
test
or
test
cli
mov
jno
mov
inc
push
lods
and
ss
int3
mov
lods
insb
xor
sbb
ret
inc
std
jo
cmc
or
cwtl
cltd
in
shrl
mov
shl
sub
jg
movsb
fcomps
pusha
popa
testl
sub
sub
mov
paddusw
popf
mov
data16
xor
and
outsl
pop
enter
cmpsb
shlb
mov
pop
cltd
and
mov
test
mov
and
movsl
fbstp
mov
or
ficoms
shll
or
push
js
push
mov
imul
stc
jne
lahf
mov
xor
addb
sbb
cmp
or
xorw
add
mov
mov
push
ds
or
xor
jbe
xor
xlat
cmpl
icebp
mov
cmp
mov
xchg
adc
lds
adc
jmp
cmpl
fisttpl
ss
cmp
mov
popf
lock
adc
mov
cli
lea
lahf
jge
sbb
or
mov
mov
ss
mov
or
and
fnstsw
out
mov
add
fs
mov
leave
cmp
lret
lcall
daa
adc
cli
sbb
stc
daa
mov
in
adc
lcall
or
std
scas
or
fimull
adc
adc
pop
jmp
nop
rolb
push
push
sbb
shlb
sbb
stos
je
out
adc
mov
dec
cwtl
imul
pop
xchg
add
pop
push
inc
ja
dec
icebp
xchg
pop
rcl
push
mov
and
xchg
push
push
cmc
cmp
xlat
dec
lea
ljmp
xor
sbb
out
sbb
rolb
sbb
in
or
pop
sbb
mov
or
outsl
gs
outsl
jp
sub
cmp
push
lods
adc
in
mov
mov
dec
push
scas
push
loop
out
xor
mov
push
xchg
arpl
ja,pt
les
insb
fsub
mov
sub
sbb
push
adc
lret
test
xchg
adc
cmp
adc
jae
out
lea
xchg
pop
std
arpl
cwtl
cld
cmp
cwtl
test
push
dec
pop
out
mov
int
or
fstps
xor
jnp
cli
sbb
inc
sbbl
bound
mov
or
movsb
loop
mov
ss
add
std
imul
add
push
test
sbbl
pop
lods
movd
dec
mov
xchg
sub
adc
aas
jmp
adc
mov
jno
loope
pop
mov
das
cltd
or
mov
stos
cwtl
push
imull
out
ret
sub
cmpsl
gs
push
dec
sbb
lock
inc
xor
jbe
into
shll
rol
mov
mov
mov
jmp
pushl
adc
add
ret
pop
mov
movsb
mov
sub
xor
push
dec
and
ds
pop
out
pop
lret
pop
mov
lret
mov
cmp
cmp
mov
push
inc
mov
ficoml
sbb
mov
pusha
out
ss
mull
add
add
ss
cli
ficoms
outsb
shrb
subb
push
enter
adc
gs
adc
xchg
and
pop
or
shrl
dec
cli
fsubs
out
inc
push
inc
fldenv
loopne
dec
in
loopne
cmp
and
sti
adc
inc
push
dec
inc
mov
iret
pop
loop
inc
pop
jmp
mov
arpl
mov
sbb
mov
xor
cld
cmpsb
xchg
jp
cld
and
xorl
out
or
aad
jmp
pop
imul
out
mov
push
push
jl
les
push
mov
outsl
jge
mov
leave
mov
stos
mov
push
xorl
repnz
inc
sbb
inc
ljmp
or
xor
std
aas
ret
mov
ss
push
lea
jae
int
mov
push
fwait
sub
test
jp
xchg
scas
cmp
fisttps
gs
push
mov
cwtl
push
in
mov
sbb
mov
xchg
sti
sahf
ret
out
sub
mov
add
adcl
pop
adc
cs
jge
push
int3
ds
or
dec
sub
push
lods
jb
mov
jge
cmp
pop
cltd
int
push
jae
dec
loope
mov
in
mov
out
inc
jl
gs
and
mov
mov
fdivrs
lcall
aam
pusha
pop
test
jne
scas
push
lcall
dec
mov
int
inc
jbe
dec
ds
xchg
fsubl
mov
lds
fs
lods
adc
sbb
imul
into
js
cmc
js
mov
xor
sbb
lcall
pop
fcompl
sbb
outsb
in
xor
int3
sub
add
jns
insl
cmp
mov
or
jle
mov
out
xor
mov
inc
inc
std
sbb
mov
xchg
mov
int3
push
xor
inc
int3
in
mov
jp
sub
orl
mov
sbb
add
jmp
inc
ds
xor
gs
test
xchg
xor
mov
fwait
call
stos
push
rorl
mov
push
cli
inc
sub
dec
adc
icebp
mov
shrl
aaa
mov
stos
adc
jmp
cmpl
push
cmp
cmpsb
outsl
scas
xchg
xchg
fwait
mov
cmp
loope
fmuls
adc
mov
sub
pushf
inc
or
jo
je
jns
shl
push
pop
or
notb
test
xor
lret
push
and
mov
loopne
cmp
push
imull
xor
loop
mov
mov
push
subb
cs
mov
push
and
pop
out
sub
test
mov
lahf
hlt
fdivrs
aas
loopne
pushf
xor
out
jg
gs
std
lcall
dec
push
arpl
cmp
adc
mov
shrb
xor
cmpsb
dec
cmp
mov
cmc
bound
and
aad
xchg
cmp
lock
imul
cmp
fwait
test
xchg
in
pop
and
fcoms
jg
pop
dec
mov
lret
xor
lea
dec
sahf
ret
and
and
mov
loope
sub
mov
loopne
adc
sahf
mov
or
add
adc
pop
sub
jecxz
fbld
pop
aad
outsl
jmp
repnz
je
adc
cmpsb
inc
fisttpll
mov
ss
push
add
dec
pop
movsl
or
adc
and
outsb
pop
push
aaa
mov
lds
mov
adc
aad
fistpll
sbb
in
dec
jle
lds
outsb
and
push
cmovno
cmp
andb
sub
std
mov
fstps
push
or
push
shll
xchg
scas
jl
xlat
dec
adc
pop
or
mov
cs
cld
daa
dec
xor
adc
js
scas
clc
jne
mov
test
mov
pop
xchg
pop
ljmp
lods
out
int
mov
adc
fsubrl
sub
shlb
lret
mov
inc
and
sub
sahf
test
jne
adc
xor
mov
mov
cwtl
mov
pusha
insb
push
mov
adc
xchg
mov
fcomip
pop
pop
nop
mov
pushf
jg
ss
mov
scas
stos
andb
popa
das
ja
xchg
mov
cli
fwait
jecxz
loopne
mov
clc
and
and
insl
in
adc
stos
xor
ljmp
inc
xchg
adc
rcll
repnz
sub
mov
je
or
cmp
icebp
fisubrs
jl
pop
sub
mov
and
xor
pop
jns
mov
and
lods
push
gs
inc
pop
cmpsl
pop
xor
adc
cmpl
repz
sti
cmpsl
pop
inc
mov
cmc
xlat
pop
sub
xor
adc
dec
xor
repnz
push
fists
jge
ljmp
in
or
rorb
sahf
js
xlat
cmp
idiv
xorb
fisubrl
and
div
pusha
or
mov
es
add
jb
int
ds
gs
mov
jne
fdivs
test
sbb
faddl
in
fcomps
jb
dec
lret
mov
pop
in
es
add
repz
lret
mov
mov
imulb
cltd
push
js
xorl
aam
dec
mov
ss
adc
in
xchg
movsb
cmp
out
pop
xor
xorb
andl
daa
les
adc
jge
push
dec
pusha
xchg
push
adc
push
cmp
cmp
ds
mov
jl
ljmp
pop
jmp
push
dec
imul
out
xor
mov
ss
clc
fisttps
lahf
test
mov
pop
insb
push
sbb
out
or
mov
inc
cmp
aas
pusha
xor
aam
fucom
data16
movsb
nop
jb
pmulhw
inc
imulb
mov
out
nop
xor
mov
loopne
push
push
mov
rcrl
sti
or
lret
imul
jmp
cmp
icebp
sbb
mov
pop
xchg
cmp
dec
aas
and
dec
push
xchg
es
test
rcr
fwait
pop
dec
add
xchg
insl
dec
sub
js
out
inc
ja
jp
inc
sub
dec
jno
push
push
lock
insb
aam
jne
sbb
int3
cmp
stc
jmp
sub
test
inc
push
mov
jno
add
stos
or
dec
mov
ret
mov
repz
mov
icebp
in
inc
inc
push
repnz
clc
pusha
stc
push
lds
mov
pusha
xchg
mov
jnp
aas
aaa
dec
mov
cmp
mov
sbb
inc
jnp
mov
dec
es
stos
push
and
iret
addr16
daa
inc
dec
lods
fnstsw
int
push
dec
or
xor
sbb
xchg
clc
push
add
mov
mov
rcrb
das
mov
clc
dec
push
xchg
fnstenv
mov
mov
pop
cld
mov
les
inc
popa
and
or
lret
inc
cmp
sub
push
jne
jbe
repz
xchg
test
int3
scas
or
inc
or
xchg
jge
sub
daa
call
inc
les
sbb
sub
movsl
lds
sti
clc
and
mov
in
scas
leave
inc
or
scas
jg,pn
lods
repz
movsb
int
inc
lea
loop
sbb
pop
lcall
nop
push
dec
sti
pop
lcall
cmpsl
xor
fistpl
test
notb
sub
cmpsl
xchg
enter
or
data16
ljmp
imul
dec
cs
fcmovnbe
and
outsl
push
pop
into
in
jl
mov
movsl
add
pop
ljmp
xchg
xor
push
xor
lret
cmp
test
xor
mov
icebp
jo
inc
xchg
in
pop
scas
add
fs
sbb
mov
sub
adc
test
jo
lods
and
xor
nop
out
xchg
push
imul
fisubrl
imul
sarl
insb
fldcw
pop
cli
stos
and
pop
imull
movsl
std
mov
mov
in
stos
pop
out
and
push
jbe
fimull
dec
mov
push
add
jbe
add
out
mov
cmp
jbe
std
aas
mov
aam
or
add
pop
mov
imull
arpl
mov
and
inc
cld
in
shlb
push
aas
int
mov
faddl
cltd
cmp
dec
icebp
pop
insl
fldenv
les
or
rol
sti
jbe
lea
loop
jne
stc
push
negl
mov
inc
pop
pop
test
or
or
loop
dec
dec
aam
push
addb
in
fnsave
sub
mov
mov
in
dec
and
insl
cmp
insb
lret
imul
mov
sub
mov
xor
scas
fs
mov
xchg
in
xchg
repz
ss
movsl
lcall
ret
push
repz
dec
adc
sub
ss
lock
push
add
bound
push
sub
mov
mov
xor
and
xor
gs
out
les
pushf
pop
pop
fisttpl
cmp
leave
aad
insb
fdivrs
cmpsb
jbe
ss
jo
xchg
push
loop
test
ffree
mov
int
sub
sbb
adc
out
sub
mov
lahf
aam
fdivrl
jmp
cmpsb
or
jo
lcall
xlat
and
cwtl
jecxz
fmuls
sbb
movsb
and
jnp
loopne
fisubl
or
shll
cli
gs
or
pop
stos
cmp
dec
push
push
or
jbe
dec
in
xchg
inc
or
fsubrl
scas
testb
dec
jmp
sub
push
jb
xchg
sti
jno
testb
pop
or
test
ss
xor
popf
xor
js
and
mov
add
xor
fsts
pop
xor
push
in
push
ficomps
lcall
lods
test
mov
xchg
add
adc
push
lods
fbstp
cmp
repnz
ja
dec
lock
jmp
push
mov
pop
es
dec
mov
outsb
sub
cmp
stc
cmp
inc
xchg
ljmp
mov
ja
idivb
mov
inc
adc
mov
jb
adc
add
pop
jle
mov
cmp
scas
dec
sub
push
or
cwtl
jbe
lods
adc
ds
push
and
and
aad
std
inc
xchg
out
sub
xor
mov
mov
insl
pop
push
addl
stos
loopne
jnp
or
xor
add
add
jo
sahf
hlt
test
fs
data16
aad
push
lret
pop
aas
push
cmpsb
mov
lock
mov
mov
stc
pusha
xor
fdivl
jo
repnz
cmp
mov
inc
or
test
ss
or
xlat
mov
movsb
hlt
or
cli
das
scas
imul
daa
into
loopne
pop
fcompl
xlat
adc
jne
shl
or
sarl
push
js
push
push
loopne
mov
mov
sub
sti
fstl
bound
inc
repnz
out
inc
cli
test
out
mov
cmpb
scas
push
ss
loop
cmc
xor
pop
in
jbe
push
mov
push
out
cli
ret
sbb
fcomp
loope
sub
pop
push
subb
sahf
mov
ret
mov
sub
inc
mov
cmp
cs
scas
mull
lods
shll
js
ljmp
pop
xorl
adc
repz
jl
mov
or
mov
mov
pop
cltd
movsb
arpl
jo
add
fimull
pop
push
push
sahf
call
mov
in
dec
mov
imulb
imul
xchg
xlat
rolb
enter
pop
cmp
sahf
into
fiadds
out
lahf
test
ja
imul
ja
xlat
test
sbb
lret
outsl
add
mov
mov
outsl
mov
xor
setnp
cmp
pusha
dec
mov
test
pop
clc
es
cwtl
sbb
and
lret
inc
inc
mov
cmp
mov
xlat
jl
push
mov
adc
xchg
mov
popa
into
mov
push
mov
sbb
mov
mov
push
stc
jg
add
scas
push
test
cld
dec
xor
add
xchg
adc
call
jge
push
inc
jno
and
int
pusha
scas
arpl
xor
and
push
inc
mov
in
bound
mov
jne
pop
sarl
popa
mov
scas
push
dec
jmp
inc
jns
inc
mov
sbb
lcall
sub
sbb
lods
or
jle
add
jecxz
xor
or
push
test
push
in
mov
inc
rorl
xor
sub
test
repz
mov
out
mov
cli
rcrl
sbb
aas
inc
jmp
cmp
jo
ret
insb
sub
lds
or
xchg
xor
add
repz
loope
out
roll
xchg
js
cmp
lds
xchg
jecxz
push
dec
test
mov
lock
rol
mov
mov
jle
enter
test
or
iret
data16
lret
js
xor
and
add
add
filds
aaa
rep
dec
es
js
repnz
xor
iret
neg
cltd
dec
ja
mov
in
push
mov
pop
enter
mov
fwait
mov
das
sbb
xor
test
xor
mov
stc
inc
ljmp
xchg
lock
and
out
push
ja
jno
or
and
push
and
sbb
fmul
lcall
mov
pop
pop
aas
pop
add
xor
and
jnp
in
push
push
and
jbe
cld
push
and
inc
sti
out
cmp
add
push
jno
push
cltd
outsl
add
push
and
sub
and
push
push
mov
popa
mov
cmpsb
outsl
jg
xchg
in
dec
popf
jbe
loope
pop
fidivrl
and
push
push
inc
or
arpl
or
call
lds
dec
and
xchg
movsl
add
out
xor
jnp
inc
fld1
mov
mov
les
jnp
mov
mov
push
out
cltd
adc
push
insb
push
jnp
sbb
jo
sbb
sbb
aaa
mov
andl
jg
inc
jg
out
jl
iret
je
adc
cwtl
scas
orl
xchg
nopl
pop
je
scas
addr16
lods
mov
push
fld
test
sarl
or
aas
dec
imul
dec
and
push
mov
xor
xorb
jo
adc
out
sbb
pop
cmc
clc
mov
imul
pop
out
mov
cmc
pop
ret
ror
jmp
mov
insl
out
push
add
cmc
shll
sub
xor
inc
xchg
stos
pop
xchg
jl
cmp
sti
loopne
in
pusha
fidivl
jecxz
sub
outsl
test
out
out
xchg
mov
fwait
push
push
fdivrl
xchg
std
pop
ficompl
lahf
out
dec
ret
xor
inc
shll
dec
dec
aam
push
pop
or
aam
sub
cltd
sub
rcrl
scas
imul
push
in
out
dec
adc
adcb
or
pop
movsb
ret
scas
and
data16
jnp
loop
push
jecxz
clc
mov
jl
pop
cmp
sub
push
adc
dec
mov
pop
pop
sub
aam
push
jns
outsb
setge
push
test
pop
jo
cmp
push
or
inc
jge
fs
add
sbb
pop
jle
dec
xor
pop
cmp
mov
rorb
ljmp
sub
sbb
or
mov
int
das
jecxz
xchg
repnz
je
daa
cs
xchg
das
out
push
clc
or
lret
xchg
mov
jae
xor
jbe
cmp
push
push
mov
pop
out
jnp
jl
mov
aad
or
and
rcrl
xchg
roll
adc
rol
stc
xor
out
xchg
pop
leave
aad
pusha
outsb
inc
std
xlat
mov
sub
dec
test
and
loope
and
sub
push
loope
push
and
mov
mov
jno
inc
cli
push
or
cmp
push
jp
mov
lcall
popa
fidivl
inc
cli
push
or
cmp
push
jp
mov
lcall
popa
fidivl
inc
cli
push
or
cmp
push
jp
mov
mov
jno
inc
cli
xchg
or
cmp
cmp
mov
in
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
push
hlt
add
rclb
rcll
movsb
fnstenv
inc
aad
vpmaddwd
cmc
add
add
rclb
mov
xchg
jo
pusha
aam
movsl
inc
xchg
push
lds
cmc
adc
add
dec
std
mov
andb
icebp
jo
inc
fnsave
shlb
arpl
fs
dec
mov
push
mov
dec
inc
sar
mov
ljmp
sub
out
loope
stc
repz
and
movsl
lds
clc
outsl
call
pushf
xor
cltd
jg
fwait
sbb
cwtl
inc
mov
pushf
pop
add
jge
push
fcmovnb
jno
jo
push
movsl
mov
cmp
lock
loopne
aam
shrb
gs
xor
lds
ljmp
aas
test
push
out
jl
push
push
aaa
mov
loopne
nop
pop
lds
ljmp
adc
loopne
andl
pop
xchg
gs
cld
out
dec
jl
shlb
cmp
adc
pop
enter
jl
or
into
or
xor
popl
pop
lods
cmp
gs
xchg
xor
adc
cmc
shlb
ja
dec
pushf
subb
pusha
cmpsb
inc
mov
and
cmp
mov
adc
adc
lods
jg
and
imul
push
cld
inc
mov
xchg
jo
pusha
mov
movsl
inc
aad
lds
cmc
adc
add
shlb
mov
xchg
jo
pusha
mov
movsl
inc
aad
lds
cmc
adc
add
lods
in
lcall
mov
rorl
sub
inc
into
push
cli
dec
xor
inc
fst
lahf
xchg
movsb
push
or
popa
jno
jmp
push
adc
pop
mov
add
dec
push
xlat
or
out
dec
add
mov
scas
inc
mov
loope
push
enter
lret
mov
outsb
inc
data16
jge
sbb
in
jns
mov
incb
int
scas
sub
daa
test
shlb
or
insl
mov
xbegin
ja
icebp
fld1
adc
outsb
popf
or
pusha
std
ljmp
inc
push
mov
insl
rol
into
jg
call
push
sbb
movsl
daa
jb
scas
fsubl
pop
mov
clc
movsb
daa
pop
mov
test
fwait
mov
xlat
movsb
cmp
xor
jle
lods
fs
jg
add
cmp
cmp
jge
ja
std
not
cmpsl
je
addr16
xchg
mov
mov
ljmp
adc
lods
movsl
imul
popa
xor
xchg
cmp
out
in
test
sub
lcall
pop
push
sub
or
aad
pop
dec
jg
sti
xlat
dec
sub
sub
dec
fldcw
lock
push
ror
add
inc
ret
cmc
xor
jmp
push
daa
sub
mov
pop
push
or
xchg
mov
aad
jns
xor
movsl
cmp
lahf
icebp
sub
out
and
jp
cmc
arpl
insb
shll
dec
jb
stc
dec
call
lods
cmpsb
push
je
hlt
cmpsl
sub
cltd
sub
and
jno
add
mov
jle
addr16
jb
loop
inc
dec
loop
test
fidivrl
hlt
xor
popa
jecxz
psrld
fmuls
test
xchg
xor
cmpsl
mov
xchg
jmp
sahf
vfrczss
pushf
cmp
ret
jb
data16
sbb
sbbl
inc
push
aaa
cmp
inc
and
fwait
pop
arpl
or
inc
shll
cmovno
nop
sub
mov
hlt
jl
lcall
fs
gs
mov
ljmp
sub
lock
inc
add
popa
repnz
sbb
adc
xlat
das
stc
sbb
pop
mov
dec
pop
bound
fistpll
dec
jl
loopne
push
dec
mov
adc
mov
divl
inc
jnp
xchg
subl
scas
outsb
inc
mov
je
orl
and
add
movsb
mov
xlat
cld
insb
dec
mov
mov
xor
js
adc
xchg
mov
mov
pop
adcb
push
hlt
fsubrl
push
outsb
jno
mov
pop
sbb
pushw
mov
mov
jnp
cmp
mov
xorb
add
cmc
lods
pop
xor
mov
sub
stc
inc
popf
xor
adc
mov
inc
mov
mov
add
mov
aad
aas
std
xor
fimuls
jbe
int
sbb
sbb
int3
push
jmp
xlat
inc
bound
xchg
sub
test
cwtl
xchg
loope
sub
out
lret
aam
aas
adc
xor
mov
or
cmp
test
mov
mov
pop
sbb
sahf
push
adc
inc
and
imul
dec
insb
js
mov
insb
mov
insb
mov
sub
test
outsl
jl
and
sbb
jns
xchg
std
sti
lods
inc
sbbb
jno
div
stos
insb
push
loope
in
lods
jae
add
dec
mov
rcl
push
scas
xor
lock
sub
adc
test
adc
ljmp
xchg
add
scas
xchg
mov
pop
mov
and
addl
lret
adc
cli
or
inc
popa
push
imul
sbb
mov
fcomps
ss
in
mov
inc
insl
arpl
mov
cmp
icebp
out
jle
push
pop
mov
adc
fldcw
xor
movsb
jae
jecxz
mov
jmp
int
sbb
dec
test
cmp
scas
lds
xor
xchg
inc
gs
ret
dec
clc
aas
outsb
mov
test
shrl
fs
xor
outsl
jno
and
ljmp
cli
xor
adc
jecxz
pop
daa
js
insb
xchg
hlt
pop
jbe
or
dec
sbb
xor
mov
dec
mov
imul
inc
add
into
daa
jo
sub
call
sbb
test
sub
pop
mov
xor
imul
sbb
out
jle
enter
jns
ds
repnz
sahf
inc
ret
repnz
push
outsb
xchg
ret
jl
pop
xchg
pop
mov
inc
mov
mov
icebp
mov
inc
cmpsb
mov
mov
imul
pop
push
mov
cmp
mov
cmpsb
nop
sahf
sub
jmp
es
addl
pop
fiaddl
mov
arpl
mov
lock
jnp
sub
out
jno
pop
inc
xchg
adc
xor
lock
fnstsw
in
add
ret
jl
cmp
mov
or
and
inc
stc
notb
cs
xor
add
jbe
jmp
mov
loope
leave
sub
shrl
data16
out
sub
cs
cmp
cmp
pop
fwait
scas
mov
pop
push
fnstsw
mov
pop
push
fwait
and
push
pop
inc
out
dec
push
xchg
xchg
pop
sub
add
pop
jecxz
mov
xor
inc
mov
stos
mov
xchg
sub
repnz
lock
lcall
ret
jae
fs
push
call
cli
jo
in
movsb
mov
or
ljmp
push
dec
mov
bound
pop
lcall
test
test
insl
in
stc
in
out
lods
imul
dec
add
mov
ret
xor
fsubp
sub
inc
cltd
enter
repz
and
xchg
adc
mov
test
out
sbb
inc
cwtl
mov
sbb
addl
cmpsl
or
test
xchg
push
mov
sarb
insb
pop
je
xchg
outsl
and
gs
push
push
jl
adc
stos
mov
loope
cmp
mov
mov
push
cmp
mov
out
clc
shrb
jle
sub
add
pop
fimuls
sub
xor
jp
xchg
lcall
jae
cs
pop
sbb
mov
fwait
push
leave
shl
pop
mov
out
lret
mov
orb
xchg
push
cmp
mulb
adc
add
push
jp
repnz
ret
cmpsl
das
or
test
stos
mov
jne
cld
adc
mov
xorw
rorb
sti
mov
mov
add
sbb
test
cmpsl
and
fmuls
pop
jecxz
movsb
jne
out
cmp
xor
mov
sub
or
cmpsb
lret
jg
cmpsb
xchg
out
cmp
std
xor
pop
ja
add
pop
shrb
mov
and
mov
pop
std
imul
or
fcompl
mov
out
insb
shrb
loop
in
fsubrs
push
aam
loop
aaa
leave
add
lret
pushl
mov
pop
int
cmpb
test
and
jae
shll
mov
xor
dec
ret
out
pop
and
mov
enter
pop
pop
adc
cmc
push
dec
int
and
test
mov
sub
add
dec
mov
mov
cmp
xor
insb
adc
adc
mov
jb
inc
pop
cmp
sbb
jecxz
cli
and
xor
add
jecxz
cmp
sbb
jbe
mov
mov
mov
out
and
push
sti
shl
mov
cwtl
test
inc
pop
inc
push
add
jp
pusha
push
fcoms
push
pop
pop
xchg
mov
test
push
jg
cld
pusha
push
xor
testb
inc
xor
push
lea
adc
pop
or
ljmp
in
cmp
jae
stos
cltd
add
mov
dec
adc
neg
in
stos
mov
sarl
imul
jo
mov
popa
or
push
add
adcl
fstl
sbb
lea
and
mov
es
stos
loope
jns
adc
data16
lret
in
xchg
mov
adc
push
out
or
or
fldt
fildll
fucomi
mov
xchg
scas
stos
dec
divl
jb
es
test
test
scas
xor
pop
push
jns
jmp
stos
lock
scas
bound
fimull
push
out
sub
push
into
add
loope
cli
lea
shl
movsb
decl
xchg
popf
xchg
outsl
loope
cmpsb
je
xorb
adc
shr
movsl
mov
imul
hlt
popa
cmp
mov
test
cwtl
into
dec
cmp
je
lcall
fists
cmp
and
mov
test
fildll
mov
jl
in
stc
or
pop
in
mov
pop
adc
imul
jge
test
dec
sbb
call
and
scas
arpl
popf
mov
decl
pop
repz
jecxz
lret
aad
cltd
arpl
pushf
or
insb
xchg
aam
sti
jns
jg
sub
pop
cmp
jno
mov
jecxz
push
fidivrs
dec
jge
rclb
in
mov
adc
mov
cwtl
insb
idivl
add
and
aam
cmc
in
into
xchg
pushf
sub
leave
pop
add
in
nop
jle
iret
insb
addr16
lea
aam
imul
pop
add
jno
roll
out
xor
bound
cmp
adc
mov
sub
call
adc
cwtl
mov
arpl
ret
add
jmp
cmp
adc
adc
insl
js
stos
cmp
push
add
adc
imul
or
or
push
push
mov
inc
lret
xchg
outsl
push
pop
mov
pop
hlt
mov
mov
sub
cltd
sub
dec
mull
nop
or
imul
ret
dec
dec
rcr
sub
sub
scas
pop
mov
jbe
icebp
jmp
sbb
xor
cmp
aas
sub
mov
mov
adc
test
rcrl
pusha
mul
adc
dec
out
out
cmpsl
mov
aaa
inc
inc
inc
inc
sbb
repnz
xchg
fcmovne
mov
fistl
mov
push
fdivs
cwtl
xchg
scas
mov
iret
sbb
std
add
scas
inc
cwtl
test
jb
xor
xor
and
and
pop
subb
test
adc
outsl
lods
mov
fcmovnu
sub
xchg
or
imul
adc
xor
jg
push
adc
mov
push
das
cmp
in
adc
xchg
mov
fucomp
fxch
sub
mov
jno
xchg
insl
mov
data16
sbb
jo
and
nop
pushf
bound
mov
pop
leave
int
xchg
and
dec
inc
cmp
pushf
lcall
cmp
jo
sbb
sbb
int
push
inc
adc
push
cmp
mov
enter
fstl
adc
cld
cmp
xchg
mov
shll
int3
jge
bound
jo
stc
jb
xor
aam
mov
dec
push
jl
ljmp
inc
sub
mov
negb
or
fidivrl
rcrb
lods
in
push
xchg
mov
pop
out
add
loope
std
js
fcompl
inc
mov
stc
inc
inc
stos
add
je
push
test
icebp
leave
insl
fwait
lret
dec
hlt
fwait
sbb
mov
jp
in
outsb
out
jnp
sub
cltd
mov
add
sbb
insb
pop
ljmp
loope
dec
call
fistl
fmul
negb
pop
mov
iret
mov
aam
fucomp
pop
xorb
scas
lea
mov
push
addl
lock
rcll
adc
pop
out
pop
pushf
mov
arpl
sti
dec
push
imul
mov
mov
mov
js
hlt
arpl
cmpb
cmp
fs
das
aas
mov
daa
das
mov
jg
jle
fucomip
sbb
iret
dec
cmpsl
inc
mov
movsb
push
enter
pusha
aad
add
adc
fwait
dec
mov
cmp
mov
in
jbe
in
cmp
and
ret
sbbb
fstpt
mov
out
push
cmp
sbb
negb
fsubrp
iret
mov
mov
mov
cmp
sbb
out
lahf
xor
pavgb
xchg
dec
stc
cmpsl
mov
sub
ret
jnp
loop
and
imul
test
xor
cmp
xor
dec
flds
and
ljmp
shl
or
pop
add
mov
jl
ret
mov
movsl
movsl
push
pop
push
and
push
pop
pop
scas
push
in
push
mov
imul
fmulp
push
rcrb
sub
ret
cmp
leave
jge
std
pushf
mov
xchg
imul
les
cmpsb
nop
xlat
rorb
out
push
out
aaa
push
jne,pn
andl
call
out
xchg
adc
ret
rclb
mov
sbb
inc
mov
repz
rcr
pop
push
mov
bound
jo
lods
repz
js
push
sbb
test
js
fwait
inc
rcll
or
dec
and
cltd
mov
cld
fidivs
aaa
mov
push
fistps
sub
in
fidivl
rolb
and
or
sbb
cs
movsb
add
mov
adc
xchg
or
push
outsl
loopne
push
mov
push
inc
xor
mov
testb
sarb
inc
sbb
or
or
or
test
sub
xchg
icebp
aaa
sbb
xorb
lahf
popf
test
sub
fldcw
out
das
aas
mov
outsl
mov
fwait
inc
popf
rorl
mov
mov
rcl
notb
cltd
or
mov
mov
rcrb
repnz
add
insb
mov
mov
dec
lret
sti
gs
shll
movsl
std
mov
pop
insb
mov
fidivl
dec
xchg
mov
mov
sbbl
inc
push
pop
jno
xchg
xchg
lea
xor
movsb
xchg
fisubrl
push
or
sub
out
stc
push
xor
and
adc
sbb
add
pop
pushf
push
mov
pop
vminsd
inc
jge
mov
cmp
imul
push
inc
test
and
pop
es
fcompl
jnp
ret
in
pop
push
jo
xor
add
jo
push
xchg
sahf
xor
lret
outsb
inc
test
jno
cmp
lea
mov
aad
gs
lahf
shlb
add
jmp
xchg
stos
lea
popf
inc
fimuls
add
inc
add
adcl
jo
sub
sbb
sbb
push
jae
call
mov
push
iret
add
and
xchg
mov
leave
cltd
subb
and
std
pop
imul
pop
icebp
jl
adc
cmp
call
mov
inc
xor
out
lcall
xchg
lret
xchg
out
cld
pop
sub
xor
and
ss
outsb
xorl
xchg
repz
sub
mov
call
xor
mov
xor
lcall
mov
pop
mov
and
xor
scas
sub
enter
rclb
adc
pop
mov
mov
fcompl
xchg
add
xchg
lods
fs
push
lahf
xlat
out
stc
aas
sbbb
hlt
cmpsb
aam
test
loope
cmpsb
stc
gs
pop
jecxz
mov
nop
test
push
push
mov
xor
jb
inc
sbb
push
xor
fsubs
mov
xor
pop
add
shr
scas
adc
sub
cmp
lods
je
imul
mov
pop
push
scas
jmp
push
mov
movsb
lods
xchg
test
and
daa
out
mov
fstpl
dec
or
lret
sbbl
cmc
sub
jns
nop
pop
rclb
loop
mov
push
sub
frstor
insl
xchg
push
les
pop
roll
out
sub
jmp
clc
cmpsl
cmpb
inc
out
inc
ror
stc
stos
pop
pop
test
push
jmp
sti
push
aas
mov
aad
mov
jge
xlat
pop
insl
xchg
cli
push
sbb
inc
pusha
adc
sbb
dec
pop
mov
pusha
push
adc
dec
cmp
mov
push
fbstp
ds
orl
call
xchg
adc
das
fdivrl
dec
mov
mov
iret
cli
jmp
xchg
dec
and
bound
mov
add
cmpsl
or
popa
jle
dec
aad
or
or
inc
fstpl
int3
sbb
jb
ret
in
out
mov
lds
dec
adc
shll
mov
shrl
adc
es
cmpsb
add
sub
push
dec
lds
loop
in
mov
out
dec
bound
fwait
push
adc
push
fsubs
test
mov
and
shrl
psubq
push
mov
iret
out
push
fidivs
dec
das
or
lea
cmp
xorl
test
and
mov
mov
jg
iret
cmc
pop
ljmp
sbb
pushf
clc
int3
cmp
scas
mov
push
jo
int3
sub
mov
loop
icebp
out
jl
push
jns
xchg
cwtl
sub
cmp
jbe
fwait
pop
sub
loopne
cltd
xchg
and
xor
ss
cmp
orb
xlat
stos
pop
ss
cmpsb
xor
push
inc
stc
scas
and
scas
pop
and
xchg
sub
aam
jecxz
push
mov
adc
mov
movsb
mov
insl
sbb
movsb
push
sbb
js
inc
push
and
aaa
xor
mov
popf
lret
iret
cmp
scas
pop
lret
pop
mov
sbb
mov
cmp
stos
cli
and
push
aam
fisttpl
aaa
push
enter
xchg
sub
add
leave
jmp
mov
dec
repz
xchg
inc
push
ficoml
sbb
sbb
aad
dec
insb
or
imul
mov
aad
adcb
pop
movb
hlt
sti
nop
enter
rcrl
inc
mov
xchg
repnz
adc
jle
pop
push
mov
mov
push
cltd
or
js
sbb
sti
cmpsb
sbb
shr
rorb
add
loop
mov
fcomp
stos
jle
bound
push
mov
dec
lret
mov
or
pop
push
xlat
xor
jge
lcall
sbb
jo
jbe
test
mov
ret
mov
adc
aam
jp
push
inc
jne
fadds
add
gs
icebp
insl
or
push
jge
outsl
mov
push
mov
jl
mov
cmp
lret
test
sahf
hlt
mov
daa
out
sub
icebp
jno
pop
sarl
mov
ljmp
jmp
and
int3
lcall
mov
pop
cmp
and
fsubrl
fiadds
or
pop
rorb
insb
les
movsl
mov
xor
push
jecxz
bound
aad
nop
out
ror
cmp
imul
and
inc
into
dec
cld
jge
mov
outsl
lret
pop
mov
mov
xor
insb
cmp
lods
lret
rorb
dec
fisubl
fadds
lock
push
or
fldcw
push
sub
orb
or
sbb
push
xor
idivb
mov
lods
pop
mov
dec
scas
outsb
insl
aam
inc
frstor
dec
es
out
mov
mov
sub
in
ror
sahf
fildll
loope
add
mov
mov
jbe
and
jge
loope
push
les
shll
mov
fidivrl
out
add
adc
sbb
jmp
lret
mov
jmp
ljmp
pusha
sub
ret
imul
inc
iret
sahf
addl
in
push
and
xchg
mov
mov
inc
hlt
dec
in
xor
incl
pop
adc
cwtl
push
push
xchg
push
addb
stos
mov
xor
mov
and
inc
pop
mov
push
mov
cmc
test
push
sub
rcrl
xor
jns
shr
jae
jae
ljmp
nop
repnz
ss
push
sub
outsb
add
jecxz
dec
lock
lret
push
cli
lret
mov
or
cmp
fnop
jbe
mov
fs
aaa
jg
add
insb
jns
loopne
aad
rclb
mov
xchg
jo
pusha
mov
movsl
inc
aad
lds
cmc
adc
add
shlb
mov
xchg
jo
pusha
mov
movsl
inc
aad
lds
cmc
adc
add
enter
mov
lret
jne
movsl
adcb
movsl
dec
aad
aad
cmc
sbb
add
xor
adcb
mov
xchg
jp
pop
push
movsl
aaa
mov
push
mov
mov
scas
xchg
adc
sbb
pop
pop
js
js
mov
mov
int
fstpl
insb
sub
pop
dec
push
mov
mov
int
sub
dec
js
push
push
adc
insl
or
mov
frstor
fnsave
ss
std
lods
mov
in
jae
jae
shr
sbb
xor
in
fdiv
push
inc
pusha
test
pop
sbb
out
xlat
nop
sub
inc
shlb
pop
cmpb
jmp
xor
sbb
loop
shll
sbb
mov
rcr
sub
hlt
sti
out
out
cmc
mov
pop
sbb
inc
ficoms
mov
inc
cmc
aaa
int
inc
testl
sbb
cwtl
push
sarl
mov
xchg
jno
or
sbb
pop
nop
sbb
or
xchg
mov
mov
int
sub
sub
pop
dec
push
stc
loope
jmp
cwtl
lods
mov
popl
bound
dec
sbb
pop
and
sub
stc
loopne
fisttpl
mov
push
push
dec
js
es
inc
sub
leave
xchg
lret
out
int
shrb
clc
sub
sub
pop
dec
push
mov
mov
int
sub
sub
pop
dec
push
mov
jg
cmp
sub
sbb
pop
inc
out
insb
sub
xor
stc
mov
mov
push
mov
in
pop
cmp
add
adc
filds
mov
adc
int
cwtl
cmpsb
movsb
cmp
adc
push
pop
loop
mov
imul
pop
ds
xchg
push
fildll
dec
lahf
or
repz
or
sbb
pushf
push
xchg
pop
icebp
xchg
xchg
aad
jg
repnz
adc
xor
mov
cld
add
sbb
pop
outsl
outsb
xor
aaa
dec
mov
lods
sahf
dec
xchg
and
fmull
into
dec
push
lret
pop
push
lahf
icebp
jae
adc
cli
sub
js
push
test
enter
testb
push
fbld
cmp
pop
rorl
fildll
pop
pop
scas
add
adc
stos
adc
xor
fnstsw
push
push
cwtl
test
or
int
pusha
sbb
inc
dec
pop
loop
dec
test
in
and
stos
fiadds
int3
mov
rorl
xor
mov
sbb
pop
jo
cld
sub
int3
out
int3
pop
jo
mov
in
push
dec
push
or
aas
loope
ss
hlt
mov
push
pop
jo
fisubrs
sbb
lret
and
sub
lods
jns
mov
jo
aas
xchg
leave
push
add
iret
ret
sbb
jp
mov
cli
pushf
cmpb
jge
and
adc
mov
mov
sarb
lret
lods
sbb
iret
bound
push
stc
inc
aad
out
bound
mull
sub
popa
frstor
push
out
in
xchg
mov
cs
mov
push
dec
testb
sub
sub
fistpl
shlb
addb
or
and
xor
cltd
jl
jbe
mov
nop
pop
and
adc
mov
mov
sti
or
push
loope
cli
pop
lods
push
jno
mov
mov
cmpsl
add
ss
in
sbb
pop
movsl
cltd
jge
imul
rclb
xor
mov
outsb
add
stos
xor
int3
mov
jl
ss
insl
jne
sbb
adc
insb
jg
dec
jns
or
xchg
mov
idivb
xor
out
daa
pushf
sbb
shrl
pushf
loop
lods
loopne
and
inc
xchg
std
mov
xchg
push
js
mov
icebp
pop
dec
dec
ja
jne
inc
push
push
out
xchg
or
jmp
mov
scas
or
loopne
push
cld
repnz
sub
lret
cld
lods
xchg
and
cmp
and
pusha
sbb
push
add
dec
lcall
xchg
fildl
xchg
lret
jecxz
jg
lahf
mov
mov
movsb
aaa
inc
call
fcomps
fwait
insl
rcrb
lods
pop
xor
in
js
mov
mov
cmpsb
jae
lea
and
mov
xchg
mov
cmc
sub
mov
or
inc
xchg
fs
fdivr
call
fmull
inc
mov
xchg
addb
les
push
push
in
push
ja
sub
jb
mov
xor
pop
fwait
ds
icebp
fwait
sbb
imul
insl
jecxz
and
mov
jmp
ljmp
mov
cmpsb
scas
lock
in
cmp
adc
pop
loopne
lods
jp
inc
jb
adc
push
mov
fdivrl
xor
loopne
popa
and
sub
lret
scas
data16
adc
cmpsl
and
xchg
xor
xlat
leave
sbb
shl
andl
jmp
mov
push
and
roll
mov
xchg
xor
mov
cmpsb
popf
sub
inc
inc
repz
loopne
add
xchg
cwtl
sub
jmp
dec
test
cmpb
popf
pop
cmovp
push
mov
mov
cmp
sbb
xchg
pop
pop
clc
mov
js
xchg
mov
loop
stc
fdivl
or
roll
jmp
cmp
adc
xchg
jecxz
std
out
lret
and
xor
mov
cwtl
pop
insb
enter
jns
and
xor
mov
xchg
or
test
mov
jp
sbb
sub
pop
mov
ja
outsb
mov
adc
cwtl
jp
into
mov
mov
clc
dec
jge
stos
lcall
mov
fsubrs
pop
jl
enter
pop
sbb
push
jbe
lret
jg
sti
mov
das
push
rorl
popf
push
insl
lcall
or
in
cs
xor
inc
push
in
mov
jb
imul
stc
jle
insb
and
shlb
inc
loopne
test
cmpb
repnz
xor
push
sub
mov
outsl
mov
fsub
clc
push
add
xchg
pop
sub
sbb
fnstsw
pop
xchg
cmc
add
stos
jmp
ret
in
mov
inc
and
imul
pop
inc
mov
ds
xor
xor
adc
sbb
mov
add
jne
leave
test
iret
xchg
mov
sbb
shlb
shrb
inc
mov
dec
mov
xchg
pop
into
pop
and
jl
es
mov
or
inc
lods
movsb
loopne
mov
js
push
idivb
ss
imul
mov
mov
mov
fisubl
inc
mov
mov
xchg
add
jg
pushf
adc
dec
mov
test
movsb
push
mov
sub
std
mov
sbb
cwtl
mov
enter
and
fisubl
xchg
and
adc
daa
xchg
xchg
jl
jae
insl
out
ja
out
or
iret
loope
jo
add
xor
ficomps
jp
sub
mov
lcall
out
or
lods
test
cwtl
bound
jne
lret
in
add
pop
sub
test
int3
mov
andl
mov
sbb
loop
insl
loop
in
push
aaa
mov
cld
mov
xor
jg
out
jns
lret
push
insl
fwait
lret
mov
imul
jb
push
in
cmp
lock
aad
fisubrs
or
subb
clc
inc
fcoms
sbb
pusha
pop
push
test
leave
dec
test
xchg
push
out
pop
lock
clc
mov
xchg
sub
cmp
fs
and
xor
sbb
push
mov
cmpsl
cmpsl
stc
mov
add
cmp
sub
mov
mov
pop
in
leave
divl
mov
cmpsb
dec
test
or
push
mov
or
aam
and
es
lcall
enter
aam
mov
pushf
sbb
adc
and
mov
mov
mov
and
cmp
insb
notb
fs
inc
rclb
or
popa
loope
std
xor
pop
dec
mov
pop
ljmp
gs
mov
adc
and
jns
sbbb
mov
sub
xor
dec
mov
aaa
adc
in
sub
mov
or
push
push
insb
xor
adcl
xor
or
mov
daa
jae
dec
pushf
xchg
sar
dec
push
mov
sub
push
lea
call
outsl
ret
addr16
push
hlt
adc
popf
xlat
sub
and
xor
test
shrb
jae
sahf
xor
enter
mov
rclb
test
in
mov
xchg
imul
mov
mov
sub
das
inc
cmp
sub
pandn
iret
sahf
jg
pop
adc
push
sub
ret
add
stc
inc
in
imul
jp
sub
push
push
inc
cltd
xor
mov
mov
xchg
fdivr
pop
test
repnz
je
xlat
and
mov
xchg
sti
fnstcw
out
sbb
rolb
lcall
and
mov
sar
cmpb
andb
sbb
mov
fs
mov
xlat
sti
js
push
test
pop
mov
pop
pop
rcrl
mov
and
incl
xor
out
rorb
repnz
sete
xchg
push
data16
sti
pop
cmp
loop
cmc
mov
sti
xlat
or
mov
adc
cs
mov
lods
loopne
sbb
pop
jl
incb
jecxz
in
ss
jg
movsl
out
inc
and
flds
js
xor
int3
dec
cmpl
inc
neg
lods
sub
xchg
jmp
fs
xchg
cmp
cvtps2pi
jnp
add
push
jns
dec
dec
das
mov
inc
out
stos
and
adc
jecxz
orl
cli
in
jae
jnp
pop
mov
jo
addl
inc
xor
sbb
xchg
dec
outsb
or
xor
stos
pop
jl
sub
mov
fadds
or
cmp
pop
lods
mov
push
je
pop
mov
cmc
cld
jb
leave
ja
pop
rcr
pop
adc
adc
movsl
push
enter
les
into
cmp
xchg
mov
minps
pop
in
mov
mov
je
or
enter
cmp
sahf
cld
ja
mov
cmp
push
out
data16
adc
mov
cmpsl
adc
add
setp
fildl
push
cmp
cmp
and
sub
jl
mov
lods
add
cmp
mov
ljmp
sahf
test
nop
push
fistpll
jno
repz
popf
xlat
repnz
xor
cltd
mov
cmp
sub
shlb
imul
cli
scas
fbstp
jns
in
fstl
lods
adc
add
mov
inc
repnz
mov
lea
pushf
pop
jg
sbb
xor
sub
repnz
xlat
cld
int
sub
jmp
movsl
pop
push
cld
sarl
adc
xor
fnstcw
stc
lock
push
in
stc
out
testb
mov
cmp
sbb
mov
cltd
xor
test
fildll
out
mov
sbb
dec
pusha
pop
pop
dec
rorl
addb
popa
sti
std
popa
or
fisubrl
call
enter
lcall
mov
sbb
dec
cmp
push
arpl
test
ss
stos
sahf
out
cmp
scas
jne
imul
icebp
sub
andb
push
shll
push
aaa
loope
pusha
xchg
jle
mov
push
imul
cmp
aas
add
into
xchg
sub
cmp
xor
adc
xor
mov
jmp
dec
pop
push
mov
sbb
adc
in
mov
dec
push
or
jb
mov
jno
sub
int
jns
sub
mov
dec
push
mov
mov
jg
sbb
imul
dec
and
into
xchg
push
cwtl
add
jo
add
mov
inc
push
pop
sub
mov
sub
mov
xchg
push
icebp
push
pop
ljmp
test
faddl
mov
push
test
jecxz
sub
scas
shl
push
mov
mov
icebp
inc
in
jge
movsl
insb
into
mov
adcb
negl
jge
or
lret
or
std
icebp
xchg
mov
pop
stc
cmp
pop
jp
jp
push
adc
movsl
stos
data16
ja
imul
adc
lds
cltd
movsl
mov
clc
push
xchg
mov
lret
dec
fldt
mov
adc
lods
lea
inc
add
imulb
ret
adc
pandn
ds
jnp
cmpsl
pop
fcoml
ret
cmc
pop
fcoms
mov
ja
add
mov
stos
shrb
pop
adc
lret
ret
mov
popf
xchg
test
repnz
mov
mov
mov
insb
or
or
popa
add
mov
out
push
adc
push
aas
push
dec
lret
lret
sbb
xor
inc
ficomps
frstor
xchg
cmp
cltd
in
loop
testl
add
dec
sub
cld
dec
jae
repz
mov
add
mov
xchg
jo
xchg
mov
jge
popa
cld
xchg
add
push
jecxz
mov
sbb
adc
xabort
mov
aaa
fbstp
les
push
and
add
or
icebp
mov
enter
add
call
ss
repz
xchg
je
lea
imul
sti
aam
je
call
ja
mov
fcmovnbe
adc
push
mov
test
or
push
mov
jle
scas
xchg
xchg
jmp
cmp
jno
push
mov
cmp
jmp
leave
pop
shlb
mov
mov
jbe
loop
mov
cwtl
dec
or
cmpsb
repnz
mov
cwtl
xchg
cmp
loope
mov
sbb
pinsrw
in
in
xchg
cli
add
or
cmpl
mov
aad
add
jmp
xchg
inc
sbbl
or
jp
idivb
mov
daa
mov
inc
iret
aad
sub
add
push
mov
mov
mov
inc
fsts
dec
fstl
pop
push
and
pushf
pop
scas
mov
into
or
in
mov
in
or
jmp
insl
cmp
jge
xor
clc
enter
and
or
push
sahf
iret
mov
movsb
and
dec
popa
jns
sarb
and
je
fimuls
hlt
outsl
mov
pop
stos
sub
ficoms
jns
aam
push
xchg
ret
sbb
push
aas
popf
les
fsts
shll
push
cmpsl
orb
aaa
movsl
jo
inc
mov
jne
xchg
or
mov
mov
lods
adc
pop
or
cmc
or
rcr
mov
roll
pop
test
leave
xor
cmpsb
adc
inc
dec
jne
ds
xor
xor
lds
fsubl
pop
dec
or
fisubl
testb
lahf
call
imul
lds
mov
fnsave
pop
or
pusha
or
add
sti
test
sbb
or
iret
pop
adc
xor
and
jmp
mov
or
je
cld
xlat
xor
addl
aaa
bound
sahf
inc
mov
nop
xorl
xchg
adc
lret
cmpsb
imul
popa
bound
cld
sub
fnstenv
sahf
inc
sahf
jae
test
addr16
ret
pop
repnz
jle
call
sti
mov
inc
sbb
pop
adc
cwtl
outsl
aas
out
mov
popa
fwait
ja
xchg
xor
add
pop
cltd
in
pop
xchg
inc
stos
pop
sub
sbb
add
jp
mov
cmp
mov
push
add
out
aam
outsb
xor
fstpt
and
mov
jo
cs
push
xchg
in
sub
inc
adc
sub
mov
sti
mov
stos
mov
dec
xchg
push
mov
popf
inc
fcoml
sbb
add
mov
sahf
or
jnp
lds
mov
cmp
jp
cmpsb
faddp
xchg
xchg
sub
mov
pop
inc
fsubl
fs
mov
outsb
inc
sub
out
mov
dec
das
mov
inc
mov
movb
popa
and
inc
and
inc
out
test
ds
cli
stc
dec
mov
jl
jge,pt
push
mov
mov
insl
xchg
xchg
loopne
adc
or
loope
and
jmp
xchg
aas
sub
or
xchg
outsb
push
cmc
test
xor
pop
lret
mov
sub
test
add
sar
xor
aam
and
sub
popf
imul
call
and
cwtl
mov
movsb
mov
pop
shlb
pop
movsb
fsts
movsl
ret
pop
mov
aas
and
pushf
inc
xchg
add
pop
inc
mov
xchg
pop
out
jg
and
inc
test
or
lock
xor
neg
idivb
mov
mov
ret
stos
lcall
push
in
push
lea
clc
pop
pushf
sahf
mov
jl
adc
testb
sbb
shl
icebp
andl
fdivl
enter
inc
xchg
adc
inc
ja
adc
sbb
xor
dec
into
iret
push
pop
mov
mov
stos
cmpsb
inc
int
dec
aaa
hlt
pushf
dec
and
call
sub
add
adc
iret
inc
sbb
inc
push
push
in
test
ds
aaa
jl
fwait
add
and
cmp
rcl
and
mov
hlt
into
cmpsl
mov
ja
pop
or
mov
loope
rcrl
loopne
mov
jno
aad
fnsave
mov
ror
jp
xchg
lods
test
jmp
lret
pushf
popa
adc
jg
lock
pop
pop
ljmp
xor
dec
shrb
and
out
xchg
add
fisttpl
adc
popa
push
jle
adc
rcrb
in
and
xor
out
movsl
mov
dec
pop
imul
jbe
xchg
bound
dec
mov
xchg
sti
push
mov
xchg
pop
inc
shrl
cmp
imulb
movsb
movsl
add
fcmovne
xchg
aas
lods
scas
sub
shrl
mov
shlb
jp
xor
mov
insl
xchg
pop
lret
sub
repz
cmp
mov
popa
sbb
insb
jb
push
fisttpl
das
aaa
std
repz
daa
cmp
jge
repz
adc
jbe
jmp
call
pop
jno
push
mov
pop
push
mov
and
fisubrl
daa
testl
dec
pop
and
xchg
movsl
jl
lock
add
addr16
xor
xor
das
fsin
out
mov
mov
sahf
rolb
loop
fistl
faddl
ret
scas
sub
sbb
sbb
das
jmp
sahf
ficoml
das
sub
jae
test
pushf
add
adc
sub
dec
jmp
iret
pop
sbb
dec
aaa
rolb
lods
push
rcr
push
pop
dec
cwtl
insb
xlat
mov
and
dec
mov
sub
mov
filds
or
enter
push
sbb
and
rclb
pop
jmp
sbb
out
jns
movl
pop
enter
fsubrs
movsl
and
jb
cli
outsb
fwait
cmp
xlat
popa
pop
aaa
xchg
int
cmp
sub
test
js
cltd
push
pop
dec
xchg
jmp
pop
push
jb
inc
sbb
xchg
call
push
xor
jge
incl
cmpsl
mov
icebp
pop
aam
cmp
test
and
xchg
push
test
dec
enter
xchg
mov
enter
clc
pop
mov
push
testl
lret
out
sub
ror
ret
cmc
sub
pusha
mov
shlb
mov
aas
pop
cli
pop
mov
sahf
gs
dec
or
js
xchg
mov
mov
cmc
in
mov
je
dec
mov
push
aas
scas
int
pop
cwtl
sbb
push
fcmovnu
xchg
into
and
and
fs
mov
icebp
js
jo
cmc
jge
lods
or
dec
lock
pop
mov
mov
pushf
push
push
cmpsb
div
or
lahf
sahf
lods
mov
jo
pushf
add
jns
or
rorb
lret
push
sbb
sub
or
lods
pusha
loope
and
rorb
aad
mov
cld
icebp
arpl
loope
push
addr16
add
je
ret
cmp
in
leave
mov
lcall
lods
dec
imul
daa
std
shlb
outsl
ss
push
fstl
aad
adc
mov
dec
xchg
aam
shl
pop
inc
push
jae
sub
test
adc
inc
addl
push
popa
jae
stos
lret
xor
je
add
add
cmp
xor
and
xchg
inc
bnd
mov
mov
sbb
dec
incl
daa
push
mov
pop
pop
pusha
out
cmc
jmp
out
mov
cld
ja
add
cltd
dec
adc
dec
mov
dec
cmpsb
test
adc
xchg
into
add
gs
cmp
xor
and
insb
jae
and
daa
add
push
stos
sub
js
outsb
add
nop
enter
mov
leave
mov
std
mov
enter
add
xchg
pop
jecxz
loop
outsb
stc
pop
sar
mov
xor
nop
pop
push
stc
mov
dec
fcomps
jl
xchg
jle
pop
lret
push
lods
mov
jb
pop
inc
adc
mov
jmp
mov
inc
imul
ror
xchg
jmp
lea
pop
mov
mov
push
jg
fcom
cwtl
fisubrl
std
fmul
call
cmp
cmp
jge
dec
push
mov
mov
int
sub
sub
pop
dec
push
mov
mov
int
sub
sub
pop
dec
push
mov
mov
int
fnstsw
sub
sub
cmpsl
mov
mov
mov
mov
push
jne
hlt
xchg
add
or
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
lea
inc
add
add
add
add
stos
add
add
add
add
push
add
add
cmp
add
add
add
add
add
add
add
add
sbb
or
jmp
movsb
add
add
inc
add
add
add
jb
pop
add
add
add
add
add
add
add
add
sub
dec
add
add
add
fiadds
movsb
add
cld
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jno
dec
add
add
add
mov
inc
add
mov
add
add
jno
loope
sub
add
pop
add
and
cmp
add
add
add
push
add
add
add
add
mov
add
add
popf
add
inc
add
add
iret
add
add
add
mov
push
add
js
testl
add
add
add
add
push
add
add
add
stos
add
add
and
clc
add
pop
add
inc
add
filds
dec
add
add
cmp
nop
add
sub
lea
pop
add
add
add
add
add
add
add
stos
add
lret
add
add
add
xchg
add
dec
add
add
or
add
or
add
add
inc
add
movsb
add
dec
add
jb
ljmp
add
add
dec
add
add
inc
add
add
add
jbe
mov
add
add
add
add
jno
push
add
es
add
add
add
add
jb
mov
mov
cld
add
add
add
add
fildl
dec
add
add
add
add
add
add
add
add
add
or
mov
add
loopne
or
add
sub
ss
in
fiadds
fadds
cmpsb
add
add
cltd
add
add
inc
add
add
int
stos
add
add
add
clc
add
push
add
add
add
or
inc
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
ljmp
add
testl
sahf
add
add
add
jo
sbb
test
add
add
or
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
sbb
loopne
pop
add
dec
add
add
add
add
mov
mov
cmpsb
add
sub
or
inc
add
add
add
add
add
add
inc
or
out
xor
cld
jb
xlat
dec
push
mov
scas
xor
cwtl
pop
ds
mov
int3
and
pop
pop
inc
inc
orl
lret
dec
jo
test
stos
insb
pop
xor
out
mov
fcos
jp
call
shrb
push
daa
in
int3
sahf
or
mov
xchg
sahf
mov
ret
adc
loope
iret
pop
or
mov
push
sti
iret
or
push
pop
jns
test
jecxz
pushl
mov
cmovae
cltd
or
sbb
push
shrw
adc
pop
pop
mov
or
jle
mov
dec
or
aaa
gs
fdivs
jns
jo
arpl
ds
faddp
sbb
jl
icebp
push
in
sub
sbb
mov
gs
push
clc
inc
cmp
in
xchg
test
test
test
cwtl
aas
xchg
or
mov
xchg
cli
sub
bound
and
bound
push
cli
lret
js
mov
inc
ficoml
mov
pop
mov
cmc
lock
ffree
stos
push
aaa
xchg
lock
jns
cld
jbe
jnp
jmp
daa
lods
mov
and
mov
cmp
test
xor
jl
dec
loopne
jmp
rol
arpl
xor
ja
push
out
insl
mov
jae
cmpb
and
sub
mov
negl
icebp
push
push
sbb
loope
cltd
add
mul
mov
dec
jne
insl
mov
imul
or
shlb
mov
add
bound
and
dec
push
repz
stc
pop
mov
cwtl
enter
insb
or
adc
mov
pop
stos
outsb
jb
add
or
cmpb
sub
dec
mov
or
sti
pushf
xchg
cmpsl
ds
mov
sub
ror
aas
and
lahf
or
add
data16
mov
push
filds
adc
sti
lods
bound
insl
xor
push
stos
fadds
xchg
repz
push
dec
and
arpl
inc
jne
in
int
out
lcall
std
xor
test
jmp
push
jae
lret
fdivrs
jbe
push
cwtl
call
mov
shrb
mov
jle
and
xchg
je
rorl
notb
jecxz
cwtl
lods
cmpb
test
pop
mov
lea
mov
rcrb
subl
lahf
and
inc
sub
imul
fs
sbb
cli
bnd
xchg
loop
or
ds
mov
orl
sbb
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xor
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
dec
clc
add
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
or
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
clc
add
jl
add
nop
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
or
add
sub
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
movsb
stc
add
lods
stc
add
mov
add
mov
stc
add
int3
stc
add
aam
add
out
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
add
add
or
add
sbb
add
sub
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
