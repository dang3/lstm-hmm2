repnz
add
mov
call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
packssdw
outsb
gs
xor
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
mov
movzbl
sub
je
inc
cmp
mov
jbe
call
mov
mov
movzbl
jmp
movzbl
sub
je
call
incl
call
mov
mov
movzbl
sub
jne
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
push
lea
push
push
call
add
leave
ret
mov
pop
nop
dec
loopne
orb
sub
in
out
adc
pusha
mov
inc
pop
jg
outsl
in
pop
nop
dec
loopne
lock
rcrb
and
pushl
out
popa
xlat
adc
and
push
sbb
inc
test
decb
nop
ficoms
sarb
push
in
add
adc
or
into
cmp
orb
in
lock
sbb
adc
popf
and
addr16
inc
pusha
push
les
lods
add
adc
movsb
dec
loopne
lock
add
and
lahf
lahf
stos
sub
inc
adc
ret
cmc
ss
push
xchg
enter
jbe
xor
adc
dec
xor
dec
jl
fsubrs
pop
jl
pop
sub
pop
aas
andb
xor
test
out
into
lahf
stos
jo
inc
pusha
push
repz
test
or
cs
ficomps
add
mov
add
push
aas
and
int3
pop
add
sub
lahf
pop
jo
fdivrl
outsl
in
adc
movsl
in
xlat
and
inc
jae
in
repz
subb
dec
add
mov
rcrb
popf
out
stos
inc
jbe
and
sub
push
mov
hlt
xor
and
push
dec
and
lods
adc
push
shrb
xor
sub
sub
and
jbe
cmp
sahf
bound
sbb
pop
scas
sub
adc
int3
or
loope
ret
and
pop
rorb
and
xor
add
adc
pusha
mov
push
mov
pop
nop
dec
loopne
lock
rcrb
mov
xor
add
adc
pusha
mov
push
mov
and
das
pop
pushf
lods
dec
push
inc
arpl
xor
pop
add
outsb
cld
repnz
adc
xorb
or
or
popa
shll
ret
rcr
insl
std
mov
cmc
jmp
sub
insl
xchg
pop
push
rcl
push
aas
aam
xlat
jae
xor
and
ret
in
ret
push
int
jle,pt
imul
adc
cltd
jno
adc
mov
add
mov
imul
inc
popf
insb
pop
mov
in
mov
pop
into
add
shlb
pop
xlat
or
ss
pop
xor
dec
pop
sbb
ret
dec
shll
test
sbb
mov
mov
pop
pop
jecxz
pop
sub
inc
sub
cmc
and
xor
aas
bound
movsl
pop
push
inc
loope
lock
cltd
or
push
inc
cmc
rcll
repnz
shrl
pusha
sti
mov
pop
cmpsl
mov
jnp
mov
jno
sti
fwait
and
xchg
insl
fcmovne
xchg
fisttpll
sub
mov
pop
cmp
sub
push
dec
out
xlat
fs
jle
loope
rcll
cmp
pop
fcmovu
mov
mov
or
and
icebp
lea
inc
dec
call
jb
out
sub
mov
sbb
popf
sbb
push
cmc
test
enter
test
push
out
pop
paddusb
push
mov
loopne
inc
out
cmpsl
hlt
cwtl
mov
push
lahf
lahf
sbb
sbb
ja
xchg
pop
xor
xchg
test
insb
xor
cmpsb
pop
imul
push
mov
xchg
pop
pusha
jb
sbb
cmp
sub
mov
jge
call
mov
mov
lds
push
popa
mov
dec
mov
mov
lods
or
mov
aam
inc
jmp
push
imul
jns
test
adc
push
mov
leave
movsb
xchg
sbb
frstor
dec
orb
xor
push
and
jg
pop
dec
jns
jns
xorb
xlat
test
cli
pop
cmp
aad
fnsave
or
notb
xchg
pop
lahf
pushf
cwtl
das
mov
pop
push
aaa
xchg
inc
jae
dec
jle
shlb
aad
idiv
jnp
and
sar
sub
mov
mov
dec
imulb
aad
dec
out
sahf
push
mov
jnp
add
add
in
mov
je
inc
je
scas
ret
pop
cmp
icebp
xchg
sub
xchg
mov
mov
sub
xor
jae
mov
imulb
jmp
pop
xchg
add
mov
xchg
lods
lret
repz
out
stos
mov
les
aaa
pop
mov
pop
fsubp
push
push
add
mov
sbb
rclb
sar
mov
xor
jbe
cltd
mov
push
jmp
mov
pop
cwtl
dec
mov
dec
enter
pop
test
mov
push
add
mov
mov
adcl
add
add
imul
sti
inc
bound
aas
sub
pop
stc
sbb
or
adc
sahf
add
pusha
inc
xchg
jmp
out
push
dec
lods
xlat
jecxz
insb
leave
stos
pop
pop
xchg
pop
push
or
gs
or
loop
cmpsl
ret
pop
out
cmp
stc
int
in
dec
pop
sbb
add
push
addr16
loope
idivl
mov
test
sbb
stos
push
add
out
stos
pusha
adc
xchg
push
push
xchg
push
push
xorb
aaa
mov
mov
jmp
xor
sbb
dec
lret
loope
aas
sbb
repnz
add
pusha
lcall
scas
jae
enter
outsb
sub
cmpsb
aad
cmc
xlat
dec
mov
add
and
sbb
daa
pop
insl
ss
insl
ret
sbb
and
rolb
cltd
fnstcw
xchg
xchg
lcall
je
in
jne
icebp
bound
xchg
cmc
js
jno
frstor
les
mov
adc
ficoml
push
cld
mov
fsubs
push
or
mov
sbb
jno
push
les
mov
or
lahf
sti
xor
mov
in
mov
rcrb
dec
roll
enter
out
imul
fs
lret
ret
jmp
jae
iret
cmp
cwtl
pop
lds
xlat
inc
mov
push
mov
push
in
xor
nop
jp
mov
pop
cli
push
xor
es
out
mov
data16
or
adc
test
sub
es
test
leave
out
mov
insl
inc
xchg
ret
xlat
in
mov
mov
pop
push
cmc
and
dec
stc
das
outsl
xor
daa
sbbl
into
mov
dec
cmp
xchg
icebp
and
fisttpll
nop
iret
mov
out
ja
xchg
dec
icebp
outsb
sbb
sub
popf
testb
adc
gs
cld
adc
xchg
loop
cmp
cmp
pop
out
lahf
dec
mov
pop
int3
mov
mov
into
hlt
pushf
and
xor
or
sbb
popa
aas
pop
gs
stc
scas
xor
mov
rol
aad
out
and
adc
fiadds
js
or
movsb
cmpb
out
pop
and
enter
cmp
jle
cs
or
lods
into
rclb
mov
mov
stc
sahf
inc
sbb
hlt
mov
jo
int3
mov
movl
dec
in
data16
inc
cli
mov
lret
test
ds
js
inc
pusha
das
loopne
inc
adc
out
hlt
cs
ss
sti
scas
xchg
xchg
je
movsb
test
push
inc
push
or
or
mov
sbb
les
outsl
in
iret
mov
mov
es
pop
adc
bound
mov
scas
in
xor
repz
andl
dec
xor
insb
adc
imul
push
in
out
inc
mov
cld
pusha
xorb
mov
shll
lahf
sbbb
mov
or
mov
and
mov
lretw
mov
bound
loope
and
mov
ret
rclb
push
push
repz
jb
xlat
movsb
xchg
loop
bound
cmp
stc
inc
push
lods
mov
pusha
ret
jno
enter
xchg
scas
popa
inc
xchg
movb
cmpsl
mov
and
imul
pop
stc
repnz
sub
pop
inc
loope
bnd
repnz
inc
pop
fwait
mov
out
cmpsl
pop
repnz
adc
push
add
inc
or
aaa
sbb
int
xchg
and
mov
and
mov
roll
data16
in
xchg
movsb
insl
dec
nop
enter
cmovp
fs
and
stos
jecxz
data16
sbb
movsb
cmpsl
xor
xor
sub
es
stc
pop
adc
xor
cs
jmp
outsb
xchg
lcall
mov
stc
enter
push
ret
adc
shlb
data16
sbb
fs
sub
push
sbb
je
xchg
gs
insb
sub
mov
popa
jmp
fstpl
mov
cmc
mov
and
or
and
xchg
bound
mov
inc
or
leave
int
in
loope
sub
cmp
and
pop
sbb
xchg
mov
data16
mov
stos
mov
das
push
adc
xchg
lock
ss
xchg
aam
and
xchg
ljmp
jbe
call
fcompl
dec
pop
add
xor
mov
ret
pop
outsl
fstp
sbb
xchg
sub
push
inc
mov
mov
or
pop
lds
pop
mov
add
jnp
jge
jbe
pop
inc
inc
js
das
pop
mov
fs
cld
movsl
push
mov
gs
insb
xchg
scas
pop
pop
or
or
cs
mov
insb
inc
frstor
adc
cld
xlat
dec
mov
dec
scas
jge
enter
aam
cltd
outsb
lea
shr
std
xor
cmp
mov
movsl
shrb
int3
xor
mov
cs
mov
jae
in
in
aas
sub
mov
aaa
xchg
xor
scas
xchg
jge
insb
and
sbb
jb
and
cmp
mov
loope
lcall
sahf
adc
dec
ret
pop
int3
adc
jmp
mov
xchg
inc
rorl
push
jmp
push
cmp
cmp
adc
into
fimuls
fsubl
mov
jge
cwtl
es
jnp
nop
popf
jbe
or
fs
inc
push
xor
inc
mov
adc
and
adc
mov
sbb
popf
sahf
dec
pop
inc
subl
cmp
and
jp
test
in
pop
mov
xchg
jg
add
into
popf
aad
mov
dec
cmp
cmp
pop
mov
scas
popa
pop
sahf
mov
cmp
xor
daa
mov
out
aad
mov
clc
add
dec
pop
jae
fildl
pop
test
jge
sub
jno
inc
outsl
pop
fcmovnu
es
and
adc
sub
pop
xchg
lahf
jns
ret
or
xor
sub
aas
lods
mov
in
pop
pop
cmpsb
movsb
push
mov
mov
pop
les
pushf
push
inc
popa
call
frstor
into
loope
gs
mov
fsts
add
push
xor
ds
das
xor
outsb
std
iret
stos
push
adc
lcall
jns
call
rcrb
lods
or
pop
mov
addr16
sahf
gs
mov
ja
add
mov
mov
jno
inc
ret
xor
push
xchg
lahf
inc
rorl
dec
cmpl
imul
popf
out
add
cmovns
ss
push
mov
ret
mov
mov
lea
decb
fisubrl
int
cmp
shll
xor
mov
test
sub
fwait
and
mov
negl
ret
loop
mov
fxch
lock
iret
movl
adc
das
call
pusha
xchg
mov
and
js
es
sub
imul
dec
mov
or
xchg
lret
std
jge
jg
rcrb
inc
scas
adc
iret
mov
cs
fisubl
mov
xor
mov
out
jnp
push
in
int
and
adc
jmp
ja
xchg
in
jp
pop
push
or
mov
cwtl
adc
pop
lods
push
pop
add
sub
mov
jbe
aam
ret
or
push
mov
sbb
pop
out
into
mov
pop
cli
xchg
mov
inc
test
mov
mov
jae
addb
mov
andb
into
xor
xchg
fbld
repz
ja
std
sbb
pop
mov
sahf
xchg
mov
push
mov
and
ret
sub
cltd
pop
int3
mov
filds
and
sbb
enter
jno
cmp
in
lods
imul
popa
fcomi
mov
data16
testb
movsb
loopne
adc
ret
xchg
add
push
fsubrl
mov
push
testb
inc
cmc
lods
sbb
pop
mov
out
jb
aad
loop
xor
sti
sahf
xor
gs
push
dec
outsb
imul
mov
jns
repnz
repz
ret
cwtl
ljmp
pusha
jge
scas
or
sbb
dec
pop
test
daa
push
push
jl
sbb
sub
inc
and
lret
fstps
fsubrl
ja
sarb
insl
add
in
xor
mov
cmpsl
arpl
mov
int3
and
mov
mov
ficoms
mov
adc
stos
cmpsb
cmp
pop
push
mov
rcrb
pop
xor
in
or
test
testb
adc
xor
sbb
hlt
add
cmc
pop
cli
popf
pop
and
adc
push
xchg
or
imul
repz
imul
mul
dec
or
fyl2xp1
cld
das
shlb
cmpl
fwait
addb
stc
jmp
out
push
outsb
push
arpl
jno
mov
pop
pop
lret
push
xor
sub
mov
xor
add
in
or
inc
sbb
mov
sub
imul
sub
mov
lret
dec
mov
outsl
pop
adc
mov
push
lea
push
mov
pop
fmull
dec
mov
mov
inc
mov
fcmovnu
and
popf
add
lods
mov
ret
icebp
jp
jmp
es
mov
cmc
jl
test
cmp
pop
mov
push
fistpl
jnp
push
dec
xchg
push
mov
daa
mov
jo
clc
sbbb
mov
arpl
xchg
je
jmp
outsl
fstps
out
or
sbb
pop
mov
or
or
push
mov
mov
jnp
out
jne
imul
cltd
xchg
test
pop
in
in
or
clc
stc
lock
in
and
lretw
push
lret
mov
mov
push
mov
and
stc
xchg
out
mov
repnz
sar
call
bound
std
fsubrs
mov
mov
fsub
adc
jbe
loopne
adc
int3
fwait
fwait
loop
rcrb
outsb
imul
std
or
push
test
and
pop
fidivrs
addb
xor
lcall
mov
fsubrs
add
insl
iret
loopne,pn
inc
jecxz
add
test
fs
jbe
fiaddl
mov
mov
or
mov
mov
pop
enter
cmpsl
push
cmovs
jb
test
test
repz
pusha
movsb
aad
cmp
lahf
lods
inc
sub
mov
cs
fcmovbe
fwait
cmp
shld
mov
inc
adc
stos
ret
outsl
loope
fs
cli
jmp
pop
insl
push
sbb
mov
xchg
mov
add
sub
sbb
fs
inc
cli
fisttpl
adc
pop
bound
fsubs
cvtpi2ps
rcl
cmp
xor
mov
stos
clc
mov
dec
xchg
cld
cli
mov
fldl
shrl
mov
das
sbb
es
mov
adc
loopne
inc
sbb
shl
inc
or
cmp
popa
sbb
cltd
lods
inc
call
sub
fistpl
jp
enter
movsl
mov
sub
mov
test
enter
xchg
cmp
and
loop
jae
aad
repz
testl
cwtl
imull
inc
sarb
out
aad
adc
push
pop
mov
fidivs
push
cmp
jbe
and
into
push
inc
inc
adc
mov
call
jge
stos
mov
xchg
and
sti
aam
jl
jg
or
xchg
lahf
or
cs
ret
sarb
mov
adc
negl
inc
mov
int
push
mov
push
inc
cmp
mov
sbb
inc
aam
lds
push
pop
add
test
sbb
lcall
inc
hlt
imul
sub
fildl
jp
arpl
stc
pushf
pop
in
pop
aam
jle
mov
cmp
rcl
dec
fwait
push
jle
aad
das
pusha
clc
jne
push
loopne
sahf
lahf
test
or
imul
mov
jp
push
lahf
xor
adcl
cltd
add
ret
ja
push
and
and
aad
push
and
push
fnstsw
xor
and
gs
gs
inc
out
fwait
test
sbb
sbb
adc
dec
cli
xlat
xor
adcb
jo
loopne
pop
in
sbbl
in
cmp
outsb
mov
loope
out
and
cmc
mov
fisttpll
gs
xor
push
push
pop
push
ss
and
pusha
xor
push
aam
push
xor
jp
sub
test
imul
leave
andl
mov
sbb
aam
add
mov
mov
pop
mov
add
push
clc
inc
aad
out
push
pop
dec
nop
int3
inc
nop
scas
jno
sahf
enter
loope
sub
cld
dec
cmp
jge
jnp
out
sub
jl
mov
fcom
iret
mov
mov
scas
mov
incl
push
push
ret
int3
or
sbbb
pop
mov
sub
in
lret
bound
sbb
and
lret
sbb
lock
cmpsl
dec
mov
sahf
dec
inc
lret
mov
jns
pop
pop
jno
lret
clc
aam
jg
jns
or
into
sub
icebp
and
add
fwait
popa
ds
push
xchg
sti
insl
mov
repnz
sub
mov
ds
cmp
rol
ds
jp
sub
pop
testl
int3
aad
lock
mov
int3
popf
lret
imul
std
push
cmp
insl
inc
fisubrl
xchg
mov
clc
cltd
rclb
mov
lahf
ret
vmovups
gs
dec
mov
or
jl
leave
cmp
xor
cli
cmp
push
pop
cmp
mov
lret
push
fwait
out
push
or
repz
and
sbb
out
dec
mov
je
push
sbbl
stos
or
pop
or
push
mov
test
in
sub
loop
lret
dec
xchg
fldcw
bswap
out
push
sahf
repnz
add
xor
jecxz
movsb
cmp
pop
testb
add
jle
jmp
cmp
cmp
lods
fmull
mov
inc
lock
scas
loopne
sbb
pushf
faddp
xor
xor
mov
lds
cmpsl
ffreep
xchg
xchg
sub
lret
sar
inc
aad
lret
aam
add
xchg
mov
dec
xchg
shll
ret
adc
jbe
push
and
jl
test
jne
lock
mov
imul
xchg
lcall
cmp
cltd
addl
call
xor
xor
sub
addr16
mov
cmp
jp
cld
mov
push
mov
sub
xchg
lods
jle
dec
lock
cmp
push
mov
mov
into
sbb
in
mov
push
jmp
push
sub
hlt
fidivs
icebp
lods
sbb
in
cmp
xor
aaa
das
mov
push
int3
inc
sub
mov
loop
movups
shrb
addr16
sub
pop
jge
and
mov
jle
lock
idivl
mov
pushf
dec
or
repz
loopne
xor
sub
add
das
fidivs
xor
pop
jb
dec
ljmp
mov
in
mov
lods
cld
mov
or
in
push
lret
or
int3
popf
jge
pop
cli
mov
cmp
pushf
dec
pop
addr16
pop
leave
in
shll
cmc
dec
cli
iret
lret
xor
clc
fs
addr16
mov
int3
fstps
aaa
cmp
les
mov
pop
mov
movsl
aaa
jbe
inc
add
dec
push
dec
ret
shl
outsl
lods
sbb
stc
popa
test
mov
in
lret
lret
rcr
ss
in
cmp
jg
sbbb
sub
xor
rolb
mov
enter
dec
fisubrs
rolb
aaa
cmp
in
push
pop
fs
sub
mov
popa
xorb
mov
sahf
sub
pop
sub
orl
dec
mov
out
and
aas
mov
cli
cmp
lahf
jp
jecxz
jmp
sbb
pop
dec
sarb
add
cmp
fsubp
inc
popf
mov
cli
pushf
sbb
shrb
cli
or
sbb
jge
int
test
test
push
mov
fcomip
inc
ja
mov
xchg
pop
ja
mov
jge
cmpsl
inc
cmpsl
pop
cmpl
iret
sti
mov
std
push
inc
jg
cmp
adc
push
xor
mov
ja
shrl
int3
mov
push
mov
mov
fldt
xor
mov
sbb
ss
sbb
xor
mov
popf
icebp
gs
movsb
add
into
push
movsl
in
sub
cmp
dec
mov
cltd
sub
dec
and
in
hlt
jge
adc
mov
test
popf
push
or
insl
mov
lcall
stos
aad
inc
inc
outsl
push
nop
mov
and
sub
push
std
xchg
pop
lds
sbb
mov
mov
ljmp
ss
mov
cld
cmc
outsl
cmpsl
add
dec
hlt
adc
loope
lea
xchg
xchg
or
hlt
sub
fnstcw
or
pop
lods
negl
loope
and
inc
pusha
dec
popf
data16
jb
sbb
jmp
cmpsl
inc
hlt
push
xchg
insl
adc
push
inc
jb
in
or
xlat
push
cltd
imul
loop
and
push
jbe
and
mov
pop
push
adc
out
pop
cmpsb
push
sub
jb
filds
scas
lock
adc
jnp
jl
mull
pop
cmp
mov
sbb
jnp
lods
xchg
add
insb
test
mov
andb
ja
test
mov
mov
jmp
enter
pop
xlat
sbb
js
outsl
pop
nop
dec
loopne
lock
rcrb
mov
xor
add
adc
pusha
mov
push
mov
pop
nop
dec
loopne
lock
rcrb
mov
xor
add
adc
pusha
mov
push
mov
inc
nop
dec
jo
lock
rcrb
mov
xor
lock
pusha
mov
mov
mov
mov
loopne
rcrb
inc
stos
fists
mov
mov
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
jg
outsl
push
pop
gs
jne
insl
pop
jp
add
out
aad
in
cmc
mov
movsl
mov
inc
outsl
push
pop
gs
jne
add
sysexit
inc
out
mov
in
cmc
jg
scas
xchg
lahf
out
mov
inc
outsl
push
pop
gs
jne
add
sysexit
ljmp
aad
or
cli
ljmp
or
and
ret
adc
divl
sahf
pop
and
push
mov
jo
inc
ljmp
adc
aad
add
ljmp
push
and
xor
lock
jns
cmc
add
das
sbb
cmp
mov
pop
les
mov
or
test
push
cli
pop
cmp
push
outsl
xor
add
adc
jb
push
and
movsl
movsl
inc
out
out
push
pop
mov
stos
mov
add
add
mov
xor
iret
pop
mov
adc
stos
pushf
add
mov
jo
cwtl
xchg
push
pmullw
cmc
out
out
nop
and
mov
mov
inc
outsl
push
pop
gs
jne
add
sysexit
inc
out
aad
in
cmc
mov
movsl
fdivrl
sub
push
ss
sbb
imul
jmp
mov
mov
cmpsl
leave
hlt
sbb
push
cmp
pop
aas
dec
push
addr16
pop
xor
fldl
repz
sbb
push
xor
das
adc
inc
out
aad
in
cmc
mov
movsl
mov
inc
outsl
push
pop
gs
jne
add
sysexit
inc
out
aad
in
cmc
mov
movsl
mov
inc
dec
sbb
xlat
pusha
xor
leave
mov
inc
stos
and
xchg
xchg
es
and
shrb
inc
mov
push
xor
int3
leave
or
jmp
push
aad
mov
outsb
cmp
xchg
cli
add
jns
xorb
push
cld
iret
mov
xchg
enter
divl
fcmovnu
add
dec
jae
je
dec
outsl
and
int
pop
add
mov
das
data16
mov
out
jl,pn
mov
imul
cmpsl
xchg
rclb
add
nop
movsl
mov
xor
xchg
pop
pop
xchg
dec
lahf
mov
xor
cmpsb
jb
cmp
sub
in
xlat
jle
cmp
inc
es
adc
xor
fldt
fisubs
std
test
or
jns
pop
dec
popf
enter
stc
lcall
mov
cmp
jecxz
leave
push
mov
scas
jb
fistl
imul
mov
lcall
or
imul
inc
lahf
and
out
and
push
pop
stos
je
rcl
dec
mov
mov
stos
daa
xor
inc
es
sar
js
divb
pop
fisttpll
cmp
xchg
sbb
rcll
adc
mov
in
enter
cmp
xchg
shl
test
adc
and
mov
add
adc
cmpsb
imul
fwait
sbb
mov
lcall
xchg
out
jo
popf
adc
jle
cwtl
lock
fisubl
pusha
repz
mull
clc
mov
scas
adc
insb
cmp
negl
test
mov
or
movsb
sbbl
adc
outsl
dec
insl
push
xchg
add
xorb
pusha
xlat
and
xchg
jmp
inc
mov
pop
js
aas
fisubl
jecxz
pop
je
mov
aaa
adc
mov
mov
xor
dec
lock
out
mov
repnz
sub
jmp
cwtl
addl
cmp
adc
pop
inc
aas
xlat
pop
mov
pop
outsb
fwait
push
dec
inc
and
push
push
movsl
mov
repnz
aaa
pop
xorl
loope
sbb
ret
jno
test
xchg
push
cmp
int
in
call
mov
sbb
xchg
sub
adc
ljmp
lret
sti
pusha
inc
out
pop
in
mov
test
test
enter
shrb
in
push
dec
icebp
jnp
pop
scas
mov
add
cwtl
inc
incl
aas
sahf
shl
outsl
ljmp
ret
ror
hlt
cld
mov
and
mov
shlb
inc
sbb
aaa
push
add
popf
inc
push
std
mov
divl
xor
xchg
or
hlt
nop
outsb
out
push
or
xor
stos
pop
dec
loope
mov
mov
inc
sub
push
ss
std
rorl
std
and
popf
int
lret
lcall
jmp
test
inc
adcl
mov
icebp
mov
mov
push
cmp
push
movsl
sbb
scas
movsl
xor
xchg
xchg
shrb
iret
repnz
adcb
sbb
clc
or
fsts
adc
aad
in
push
aam
mov
lea
cmpb
xor
inc
cs
int
test
xor
hlt
dec
das
andl
jo
pop
add
pop
dec
cmpsb
std
pop
movsl
mulb
lods
dec
sbb
or
int
inc
call
xor
push
aam
out
fidivl
sti
cmpsl
jo
lcall
std
cmc
inc
lock
test
test
mov
xor
inc
lret
xchg
or
bound
push
jb
cmp
cli
push
push
das
jecxz
ret
mov
addb
xchg
mov
mov
sbb
icebp
mov
rdtsc
adc
cmp
ds
jecxz
inc
repz
sbb
mov
jb
adc
mov
test
mov
sub
out
xor
inc
adc
aam
pop
inc
mov
jmp
xchg
xlat
outsl
and
rol
and
xor
xchg
mov
push
mov
into
out
push
push
jb
sub
std
test
int
mov
or
xchg
andb
mov
cli
movlps
js
movl
dec
xchg
pop
frstor
pop
out
fdivs
jns
fildl
cmp
std
aaa
inc
cmpsl
lock
bound
fsub
call
addb
mov
mov
push
lods
cmpsb
nop
mov
adc
fcoml
and
add
sbb
rcll
push
out
faddp
push
cmpsb
and
ljmp
gs
in
daa
dec
xchg
int3
test
push
call
push
jl
and
jmp
cmpsl
push
icebp
fsub
mov
movsb
xor
iret
jno
outsl
mov
popf
xlat
or
fwait
mov
std
inc
ss
es
xchg
or
movsl
mov
stc
or
movsb
push
and
aaa
cmp
pop
aam
fldt
imul
xor
ja
arpl
push
repnz
loopne
jns
cmp
out
and
push
bound
movsb
push
dec
rcl
jp
xor
jmp
add
out
push
pop
dec
xor
jnp
jmp
push
push
lods
jmp
in
sub
arpl
adc
xchg
sbb
xor
mov
inc
fcmovbe
mov
inc
mov
ret
inc
cmp
insb
fptan
aam
cmpsb
es
xchg
sub
cmp
add
sbb
out
out
adc
rorb
fmull
dec
mov
mov
inc
outsl
mov
sbb
js
push
js
mov
imull
add
data16
cmp
inc
and
aas
mov
sbb
fimuls
dec
sbb
jg
shll
sbb
ljmp
iret
jecxz
roll
ficoml
adcl
inc
aas
loop
in
jecxz
cwtl
ds
loop
pop
into
sub
pop
xlat
fisttpll
stc
pop
or
sbb
cs
outsl
adc
aaa
fmuls
imull
pushf
mov
mov
pushf
andl
xor
shlb
sbb
jne
in
mov
sub
mov
add
or
rcrb
ljmp
xchg
jns
sbb
pusha
outsb
loop
push
push
cmp
out
in
or
clc
loop
testb
mov
into
mov
or
push
test
nop
in
arpl
xor
xchg
mov
pop
std
leave
ret
jmp
mov
jbe
jne
add
aam
loope
dec
fnstsw
mov
adc
call
int
lahf
iret
add
mov
inc
push
aaa
lret
mov
dec
outsl
scas
mov
xchg
not
test
aas
leave
mov
lods
lcall
xchg
push
cmp
xchg
dec
imul
xchg
ret
cmc
and
test
movsb
iret
loope
aaa
xchg
xchg
test
icebp
mov
mov
icebp
adc
psubb
or
xor
push
mov
arpl
xor
sbb
dec
xor
loopne
lods
ficomps
add
xor
rorl
xchg
lcall
es
sub
xlat
dec
pop
daa
mov
cmp
lcall
sub
sahf
xchg
push
gs
push
iret
pop
jmp
sub
inc
andl
push
movsl
adc
into
mov
mov
inc
xor
cmp
sub
mov
sarb
out
stos
xchg
aas
xchg
inc
push
shll
lret
or
mov
das
pusha
xchg
xor
bound
pop
jb
aas
loop
outsb
lea
rcrl
cmc
or
int3
or
dec
aam
jb
xchg
cmp
scas
outsb
cmpsl
loopne
shll
pusha
hlt
push
addr16
imul
jno
mov
bound
xor
inc
mov
rorl
cmc
xor
jo
inc
imul
inc
lret
cmp
mov
xchg
cmp
mov
cmp
sub
out
scas
mov
inc
adc
repz
fnstenv
rcrb
mov
popa
cwtl
jecxz
and
cmp
sub
sbb
xor
adc
jne
ret
cmp
inc
cmp
je
les
or
push
adcb
addr16
loope
add
dec
cmp
add
stos
fcoml
lock
rcrl
add
cs
adc
pop
cmpsl
xchg
and
inc
stc
roll
mov
xchg
dec
mov
or
sub
add
mov
push
xchg
adc
cmp
stc
data16
inc
sbb
fdivrl
jnp
mov
mov
repnz
loope
cmp
mov
mov
in
sarl
subl
jle
stos
sbb
test
mov
cmp
jg
incb
fstpl
in
imul
nop
js
scas
popw
mov
enter
popf
in
rorb
movsb
std
jns
in
mov
sbb
lock
jp
imul
cltd
jo
insl
mov
push
pop
outsb
stos
cs
je
bswap
shll
popf
js
sti
les
pop
push
stos
daa
fcoml
test
js
aam
shll
jg
insl
scas
sbbb
or
inc
aaa
lret
fisubl
clc
sub
test
sbb
test
push
aas
inc
add
out
outsl
inc
sub
mov
incl
out
inc
mov
int
xchg
inc
aas
in
adcl
js
push
adc
out
push
fdecstp
sbb
fs
lock
adc
es
cmp
dec
cli
mov
cmp
fsts
add
adc
mov
clc
test
or
sub
cltd
sti
push
xor
cs
jns
nop
sub
cmpb
jne
stos
cltd
sub
lret
out
pushl
mov
paddq
je
cmp
sub
jl
rcrb
mov
jp
stos
push
pop
arpl
sti
add
pusha
mov
add
mov
sbb
cs
mov
shrl
mov
insb
sub
jne
lods
inc
cmp
cmpsl
mov
stos
jns
mov
jg
rorl
mov
xor
cmpsb
add
dec
ret
push
jmp
pop
addr16
in
add
lods
jbe
int3
cmpsl
inc
ret
adc
jecxz
lahf
push
jo
adc
sub
int3
sti
mov
inc
xchg
xchg
idiv
inc
dec
dec
push
inc
cmp
aas
sbb
mov
int
out
pop
mov
sbb
in
sub
mov
stos
add
push
aad
idivb
cmp
and
cld
add
cmp
pop
les
pop
sub
into
sahf
and
idivb
pop
ret
stc
vpxor
arpl
xor
aaa
out
inc
scas
pusha
imull
scas
or
out
jbe
adc
cmp
cld
jg
push
sub
xchg
push
mov
enter
cs
mov
xlat
cmp
mov
push
cld
sti
cmc
loopne
xor
pop
mov
dec
mov
out
xchg
in
mov
fwait
stc
ds
mov
sub
xor
insb
std
icebp
shlb
popa
mov
push
mov
dec
push
and
sub
mov
mov
loopne
mov
cmp
movsl
ud2
fistl
flds
mov
mov
addr16
sbb
pop
js
mov
int
aas
punpckldq
out
rcrl
or
ficomps
mov
pop
test
mov
xor
xchg
cltd
inc
iret
sub
sub
daa
jecxz
out
inc
scas
test
mov
js
in
inc
pop
xor
iret
mov
sub
sbb
pop
cmp
push
imul
popl
shl
xlat
adc
add
sbb
rcrb
pop
mov
sub
sahf
std
pop
push
push
out
or
cmp
cld
test
add
mov
sarb
mov
enter
inc
mov
imul
fwait
xchg
xor
sbb
das
jae
arpl
inc
bound
fidivs
mov
adc
dec
inc
fdivrl
movsl
sbb
sbb
cmp
inc
sbb
outsl
cmpsb
or
icebp
add
lea
sbb
clc
je
jge
dec
and
push
sub
addr16
and
test
cmp
dec
add
into
ljmp
push
mov
les
and
sub
lds
cld
dec
dec
mov
pushl
xlat
inc
jns
cltd
ret
mov
in
jle
add
mov
and
mov
mov
push
sub
rcll
push
insl
inc
ret
dec
test
in
enter
push
adcl
mov
mov
push
push
loope
movsb
sub
cli
std
aad
jnp
mov
stos
push
xor
cwtl
xchg
into
js
xchg
pusha
jl
jmp
mov
xlat
pop
jb
cmpsl
lea
imul
call
pop
lods
push
fsubl
mov
scas
ljmp
pop
sti
scas
pop
sub
cmp
jo
negl
lods
sbb
pop
mov
cmpsl
xor
in
lods
mov
mov
xchg
sub
scas
xor
mov
dec
dec
sub
push
loopne
nop
and
das
sub
ljmp
andb
dec
mov
cwtl
movsl
test
outsb
pop
or
pop
mov
lret
xor
stos
in
enter
popf
fwait
cmp
mov
movsb
mov
ret
daa
imul
mov
bound
adc
mov
mov
data16
popf
xchg
lcall
cltd
lods
pop
push
xor
push
pop
dec
lret
test
repnz
enter
je
insl
jo
sub
lret
xor
mov
sub
jg
or
lods
cwtl
dec
jo
scas
and
shrb
ffreep
push
lods
adc
push
xchg
xor
insl
mov
icebp
inc
xor
hlt
pop
sub
sub
std
mov
xor
notb
leave
clc
in
lahf
jne
test
int
mov
pop
rcrb
push
fisubl
mov
pusha
pop
lret
add
out
in
stos
pop
xchg
adc
outsb
dec
into
push
lock
dec
lods
out
int3
push
adc
push
jl
movsb
mov
xor
leave
pop
ljmp
and
mov
mov
pop
push
mov
js
mov
loope
clc
shr
xor
fcomps
adc
jnp
or
mov
pop
add
mov
enter
dec
jne
pop
mov
lods
je
nop
mov
jmp
mov
movsl
sub
iret
inc
mov
fs
iret
push
xor
mov
subb
adc
pop
xchg
push
out
add
cs
or
scas
jg
ljmp
notb
or
xchg
imul
mov
cmp
cmp
add
stos
mov
data16
adc
cmp
mov
add
orl
mov
lahf
jmp
adc
jg
mov
fldcw
adc
scas
and
daa
adc
pop
adc
inc
aaa
fidivl
dec
push
mov
pop
pop
xchg
insb
xchg
xchg
adc
mov
cmpsb
pop
cmc
or
pop
sbb
cmc
xchg
xlat
push
dec
fildl
or
xchg
movsl
inc
adc
dec
xor
or
inc
jp
add
mov
mull
xchg
dec
pop
xlat
test
or
ja
test
push
cli
mov
mov
pop
lret
hlt
lods
sbb
adc
cld
loop
jecxz
mov
mov
fdivrl
xchg
inc
enter
mov
mov
dec
fldt
insb
lret
mov
mov
sbb
mov
mov
stc
and
mov
loopne
or
inc
pop
lcall
outsl
incl
in
inc
sbb
pop
mov
adc
mov
jb
psrlq
mov
cmpsl
movsb
gs
lret
scas
jnp
icebp
adc
fwait
sbb
jb
cmp
dec
test
xchg
arpl
jp
fisubl
push
dec
pop
mov
add
pop
lods
hlt
lea
adc
stos
outsb
and
add
sbb
lods
xor
xchg
sti
jp
mov
pop
pop
cmp
push
pop
cli
cltd
lods
push
pop
filds
rolb
rcll
xor
sbb
dec
dec
push
sub
icebp
aaa
pop
cli
jne
shrb
aad
inc
in
mov
push
bound
daa
roll
ljmp
fnstsw
hlt
dec
pushl
mov
cltd
lahf
jnp
dec
out
dec
push
sbb
push
or
dec
jg
lcall
jmp
and
add
or
and
mov
ljmp
cmp
imul
cs
push
and
jns
lcall
pushf
and
adc
js
xchg
xor
xchg
fsubl
dec
rorl
sbb
in
mov
pop
fstpt
ficompl
lods
push
out
push
dec
push
addl
inc
pop
and
or
or
mov
cmp
test
imul
sub
and
bound
ret
outsb
xor
adc
lods
int3
adc
repnz
inc
out
cmp
out
xchg
xlat
adc
cmp
jge,pn
filds
xchg
jne
popa
add
mov
pop
lahf
aaa
rcll
sbb
in
aaa
dec
cmp
pop
scas
inc
pop
out
mov
mov
and
ror
lods
mov
lock
bound
adc
mov
shlb
mov
out
insb
cmpsl
jno
fld
mov
jmp
call
into
lcall
cld
and
push
hlt
repnz
push
jle
test
pop
pusha
push
cmp
xchg
ljmp
ret
dec
push
in
sti
sub
jge
or
xor
push
data16
xchg
or
pop
rcrb
jg
sub
popf
mov
add
pusha
enter
lea
std
dec
les
lret
xchg
pop
mov
jb
aas
ja
out
xchg
pop
in
jecxz
push
mov
frstor
in
xchg
pop
and
inc
imul
sub
mov
cltd
insb
and
dec
cmp
icebp
pop
xchg
or
adc
xchg
xchg
out
idivb
imull
je
cmpsb
mov
fs
add
or
and
mov
ss
js
xchg
jne
xchg
jns
mov
or
mov
push
icebp
lcall
test
push
sarl
mov
lock
hlt
es
and
push
leave
ret
inc
mov
ret
int3
jecxz
cltd
push
aad
mov
mov
or
push
xchg
aas
pop
ss
push
shl
loopne
and
lret
pop
mov
pop
in
push
mov
shlb
and
jp
add
cli
int3
stos
mov
mov
test
test
shll
add
clc
iret
pushw
loopne
inc
enter
xlat
push
fisttps
inc
loope
ss
shll
fldenv
jnp
sbb
fistpll
stc
dec
inc
dec
jg
clc
pop
push
sbb
sbb
mov
pop
test
push
enter
rcll
adc
js
and
fnstcw
test
adc
loopne
clc
dec
mov
in
das
or
inc
sbb
mov
sti
mov
jb
out
shll
daa
setns
rolb
test
mov
mov
mov
jb
inc
push
lds
fwait
adc
aad
out
jmp
outsl
inc
cmp
add
rcrb
xchg
add
nop
or
nop
dec
int3
pop
adc
cwtl
dec
push
or
icebp
jecxz
mov
pop
push
cwtl
dec
gs
mov
pop
loopne
lcall
jge
dec
cld
int3
xchg
das
in
mov
or
lret
jnp
cmp
mov
jne
aas
adc
out
cmpsl
cwtl
mov
pop
or
jb
popf
stc
cs
clc
dec
mov
add
icebp
push
outsl
dec
push
xchg
and
fcmovbe
int
roll
mov
add
popf
lea
jg
loope
add
fmulp
sub
outsb
jnp
shl
mov
sub
int
popf
jo
mov
js
push
push
push
decl
test
jge
add
push
mov
xchg
ss
pop
push
sbb
mov
mov
push
incb
shlb
ficoml
mov
aad
stos
insb
mov
out
jns
mulps
add
or
int
movsl
shl
popf
push
int3
pop
or
xchg
aaa
stc
xchg
bound
push
stos
outsl
aad
dec
sub
scas
popa
test
add
xor
int
idivl
pop
lods
jge
ror
jmp
addl
sub
and
js
movl
clc
sarb
lea
sahf
xchg
popf
jbe
cmpsb
fdivrl
and
fisttps
sbb
out
cmpsl
leave
fnsave
repnz
lret
push
es
cmp
gs
jne
add
sysexit
inc
out
aad
in
cmc
mov
movsl
mov
inc
outsl
push
pop
gs
jne
add
sysexit
inc
out
aad
in
cmc
mov
movsl
mov
inc
out
aad
in
jne
add
xor
iret
cmc
mov
movsl
mov
inc
outsl
push
pop
gs
jne
add
sysexit
inc
out
jg
in
or
fildll
pop
decl
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
lea
movb
push
movb
call
mov
movzwl
mov
mov
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
not
mov
pop
mov
or
mov
leave
ret
push
call
call
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
shr
stc
mov
in
fcmovu
test
or
dec
or
sub
cmp
push
jmp
stos
test
ljmp
dec
call
cmp
push
sub
stc
mov
test
std
cltd
sbb
pop
push
cmp
jne
pop
outsb
or
push
lcall
rorb
adc
loope
repnz
add
cs
mov
jb
gs
lcall
pop
sbb
andl
xchg
pop
daa
cmp
xchg
or
dec
pop
jmp
push
cmp
jp
int3
sbb
cmc
hlt
push
aad
movsl
cmp
cmp
mov
fstpl
and
adc
ljmp
int
mov
cmp
sbbl
popf
jne
jecxz
ficoms
or
ljmp
xor
lock
cmp
or
je
fldenv
cltd
addr16
jno
add
sub
mov
dec
lcall
or
jmp
mov
mov
add
jns
dec
xor
sub
jp
jae
jmp
leave
into
fnstcw
iret
xchg
outsb
adc
js
sub
sub
pop
jo
push
lcall
fldcw
loopne
std
sbb
or
jg
pop
cmp
inc
cmp
or
jbe
lods
mov
mov
cli
mov
cltd
sbb
jns
dec
sub
sub
jp
push
lcall
test
ljmp
dec
sub
sub
jp
push
lcall
sbb
fstpl
cmp
mov
push
sub
mov
mov
pusha
jno
out
nop
shrb
mov
pushf
sub
popf
sub
push
push
daa
lea
mov
stos
test
xchg
and
jbe
and
leave
and
setne
pop
lock
ss
fwait
out
loope
lods
mov
mov
jl
movsl
cld
mov
icebp
mov
sti
cmp
pop
in
push
testb
mov
daa
jge
test
lcall
fstpl
insb
stos
repz
popa
push
jmp
dec
cltd
mov
pop
or
xchg
insb
lock
addr16
adc
sub
stos
cmovl
aaa
add
push
sahf
das
pop
imul
and
push
mov
lcall
dec
mov
ret
pop
xchg
pop
and
les
gs
imul
mov
in
sbb
xchg
outsl
push
xchg
insb
inc
clc
mov
push
mov
mov
test
sub
xchg
cli
xlat
jno
fs
and
ret
scas
adc
insl
sti
dec
iret
pop
add
add
incb
lds
push
daa
mov
xor
out
jmp
xchg
jbe
jo
add
adc
add
sahf
cmc
loope
and
jae
aad
sub
add
insl
adc
pop
push
je
outsl
cmp
das
push
call
stos
mov
lods
fmul
sub
jecxz
jno
out
sbb
ss
out
aam
jge
lcall
push
adc
mov
int
mov
imul
je
cmpsl
aam
mov
pushf
add
jmp
fnstenv
stc
sub
adc
rcrl
mov
sbb
fidivl
dec
jle
xchg
xor
or
mov
shlb
inc
pop
lret
sub
jmp
sahf
jns
aaa
mov
mov
cmp
enter
adc
stos
ret
ret
addr16
mov
push
dec
push
inc
lock
sub
jnp
xchg
popf
add
mov
es
sahf
mov
inc
adc
jmp
adc
into
pushf
or
adc
nop
and
cmp
mov
in
sbb
mov
push
mov
insb
sub
xchg
es
xchg
jle
jle
push
lcall
mov
inc
inc
lods
orb
lret
push
push
into
mov
jbe
jg
jns
filds
pushf
cmp
jl
out
jecxz
nop
or
xchg
push
sbb
fiadds
aam
aad
lods
and
mov
cvtdq2ps
out
gs
outsb
repnz
jmp
hlt
jns
sub
imul
cmpsl
repnz
inc
enter
scas
insl
or
aam
pop
push
fisubrl
pop
iret
or
icebp
mov
adc
dec
jno
fsubrl
xchg
cmp
js
xchg
cmp
pop
pop
dec
pop
fstpl
mov
and
ljmp
mov
push
out
jmp
dec
ljmp
mov
into
pushf
lcall
call
dec
test
ret
lods
add
cwtl
outsl
test
sbb
rorb
or
or
or
adc
sbb
push
ffreep
jo
jno
sub
or
sbb
dec
test
jmp
stc
fstps
pop
dec
movsb
cs
add
jbe
mov
dec
ds
clc
in
lock
mov
push
mov
cld
es
int3
jo
in
stc
shll
inc
fldln2
mov
dec
cmp
cmp
mov
mov
push
mov
mov
test
je
lods
aam
pop
xor
lea
scas
lock
imul
push
lea
mov
mov
mov
pop
mov
gs
icebp
mov
cmp
popa
jmp
xor
sbb
cwtl
loope
adc
or
inc
int
lcall
xor
fldenv
xor
inc
cmp
std
mov
movl
inc
shrl
hlt
push
lret
jle
andb
sub
adc
jecxz
stos
test
pushf
js
data16
imul
sbb
aam
inc
lret
mov
outsb
out
jnp
dec
mov
ret
andl
imul
fdivr
arpl
fmuls
ds
adcl
popl
pop
clc
imul
xlat
jno
add
loopne
or
mov
jmp
ja
es
in
cmp
fildll
push
dec
mov
dec
adc
ss
push
or
sbb
inc
add
stc
pusha
fisubs
jg
add
dec
std
pop
mov
xchg
in
fisttps
test
les
adcl
sub
adcb
xor
pop
je
out
pop
sbb
lea
jg
sti
es
popf
xchg
push
jmp
and
sbb
loope
inc
sbb
fcmovbe
lea
xchg
enter
test
stos
fwait
in
loopne
fcmovnu
sbb
pop
ljmp
call
dec
nop
pusha
fcom
into
aas
and
insb
add
lea
inc
pop
int3
push
push
sbb
sub
aam
leave
pop
shll
cmp
rcrl
xorl
jae
jp
sub
loop
sub
rcrl
ret
mov
fcmovnb
mov
inc
fcomps
sahf
push
xor
test
out
shl
push
pop
sub
outsl
pop
xchg
fsub
xor
dec
ret
stc
cmc
jne
out
les
xchg
shlb
pop
cmp
mov
push
clc
fsub
xchg
inc
mov
jle
and
bound
imul
or
xor
sub
int
xor
popa
in
pop
xchg
dec
xchg
adc
js
or
cli
out
hlt
cmpsb
dec
in
inc
xlat
mov
sbb
ljmp
mov
pop
fs
and
into
adc
rolb
mov
cmp
sbb
int
lret
xchg
xor
mov
mov
push
mov
mov
int3
aam
push
cmpsl
xor
imul
xor
adc
mov
and
addr16
fisubrl
negb
in
push
cmp
cmp
push
imul
add
mov
scas
cmp
xchg
jl
fwait
push
in
mov
cmp
or
push
out
mov
data16
mov
xchg
pop
in
pusha
mov
aaa
or
ret
or
adc
cmp
add
mov
hlt
sbb
sub
addr16
call
out
xchg
or
dec
or
testb
in
mov
imull
test
dec
dec
mov
add
fistps
stos
test
mov
loope,pt
xor
das
inc
mov
rorb
out
bound
jl
dec
es
sub
mov
pop
aam
mov
call
dec
nop
test
mov
jne
add
sahf
test
int
mov
je
lods
cwtl
jne
lcall
pushf
xor
push
sub
jo
movl
push
cmc
scas
sub
mov
cmp
cmp
add
sbb
fsubr
mov
decb
adc
dec
ss
xor
jne
mov
mov
out
incb
xor
fsubrl
xchg
push
popa
mov
jle
lret
clc
clc
push
repnz
in
ror
movsb
or
clc
or
inc
das
rolb
xchg
stc
cmp
and
mov
push
cld
loop
sbb
mov
xchg
movsl
mov
mov
xchg
xchg
cld
push
mov
jmp
xchg
lret
shl
jg
push
adc
xchg
xorb
lock
loope
jns
mov
int3
mov
pop
lret
inc
fcoml
mov
insb
add
imul
pop
mov
cmpsl
mov
mov
insl
mov
das
push
jmp
and
mov
loope
fdivrp
inc
inc
sub
jge
sub
sub
push
cwtl
inc
mov
xor
in
movsb
dec
sbb
sbb
in
add
je
aam
jecxz
lods
pop
rcrl
repnz
mov
popa
ret
xchg
rcrl
mov
ljmp
and
cmpsb
cmova
pusha
mov
dec
push
adc
pop
int3
xor
les
adc
xchg
lods
xchg
pop
out
in
push
aam
mov
divl
mov
sbb
jb
aad
cmc
leave
sub
pop
jl
lret
pop
loop
iret
ficompl
movsb
mov
push
das
xor
sbb
dec
mov
jmp
insb
jecxz
sbbb
fstpt
scas
dec
dec
mov
pop
mov
rolb
mov
rorl
out
xor
rorb
test
adcl
aam
movsl
dec
add
nop
jl
push
inc
js
mov
sub
pop
repz
push
sub
cli
xchg
sub
loope
adc
outsb
jb
loopne
aas
mov
rcl
mov
rcrl
push
dec
jae
cmpsb
ja
pop
ss
mov
sub
sub
std
fsub
cmp
scas
mov
lret
hlt
mov
mov
lcall
or
mov
push
mov
pop
jge
adc
jnp
mov
push
cmp
push
iret
hlt
stc
movb
aaa
aad
inc
xlat
dec
cmp
imul
mov
mov
and
rclb
or
sub
aad
or
dec
or
xor
add
mov
xchg
jnp
ret
insl
repz
ss
lea
ss
test
ja
xlat
sub
inc
xchg
mov
das
adc
repz
sbb
adc
dec
frstor
test
sbb
jns
cmp
mov
adcb
fisttpl
loop
mov
pop
test
cmp
leave
xchg
dec
dec
call
shll
mov
rep
fstp
pushf
pop
push
dec
shrl
push
roll
mov
fwait
enter
cmp
fstpl
add
mov
add
xor
sub
xchg
iret
aam
sbb
add
pop
lods
mov
ja
xor
frstor
push
js
inc
push
mov
xorl
stc
test
sub
fsubrp
rorl
fisubl
xor
ret
jp
rclb
add
mov
jb
push
xchg
sbb
stc
dec
push
push
aaa
rcr
jae,pn
jbe
cmp
push
lock
inc
sarl
add
jo
xor
insb
inc
xor
mov
shr
adc
jbe
cltd
push
cmp
mov
repz
add
test
jle
xor
and
adc
int3
xor
movsl
insb
push
mov
pop
xchg
mov
sub
push
mov
pop
xor
add
lea
jbe
testl
xchg
mov
ljmp
xchg
mov
cmp
jb
loopne
or
or
dec
cmp
aad
in
pop
cli
shr
dec
sbb
sbb
jp
and
mov
scas
adc
xlat
andb
test
shlb
and
repz
pop
xor
jmp
inc
sbb
dec
sub
xchg
add
pop
mov
adc
outsl
mov
rcr
inc
dec
or
and
adc
xor
je
vmovntpd
repnz
add
pop
pop
xchg
outsl
std
mov
mov
data16
aam
add
fucomp
dec
jl
and
frstor
cmp
shrl
outsl
data16
inc
fisubs
mov
sbb
inc
pop
pop
out
mov
xor
or
fldz
jg
push
mov
pop
jne
inc
mov
push
sub
and
mov
roll
mov
xchg
cmp
adc
insb
scas
fstpl
cmp
lock
out
xor
and
mov
repnz
sub
out
in
and
lea
stos
mov
dec
dec
or
inc
icebp
xchg
cmp
jne
stos
icebp
in
cmovg
dec
mov
and
int3
inc
jmp
or
mov
jo
movntq
cmc
ja
jl
enter
dec
sub
jecxz
mov
cltd
cmp
lea
mov
nop
stos
ret
enter
lods
xor
es
mov
lss
test
fwait
xor
daa
test
nop
sbb
sub
in
lcall
add
lock
push
loope
adc
js
jnp
loop
pop
popf
sbb
cmp
lods
gs
pop
sahf
cmp
or
hlt
sub
into
push
addb
mov
out
pop
in
test
jae
xchg
inc
lods
mov
sahf
add
daa
outsb
aas
arpl
cmp
aad
lock
and
xor
jl
xchg
cmp
sarb
mov
and
ss
test
xchg
stos
daa
or
sbb
lret
shl
in
fldcw
xchg
jno
sub
lcall
ror
cltd
mov
das
and
test
mov
int
or
xchg
test
xchg
into
ljmp
movsl
cmp
aaa
test
pushaw
mov
fisttpll
ljmp
lock
pop
insl
in
xor
mov
mov
cmc
jbe
arpl
repz
jg
or
push
out
push
repnz
or
int
test
adc
sub
pop
stos
je
mov
jp
dec
dec
cs
jecxz
bound
test
xchg
mov
or
lods
pop
mov
sub
cli
adc
popf
xor
daa
in
pop
nop
dec
and
pop
mov
mov
jne,pt
or
xchg
iret
fs
out
push
clc
mov
and
jge
push
cmp
lret
cmpsl
and
inc
and
call
dec
je
mov
mov
inc
mov
shll
js
sub
sahf
add
outsb
aad
cmpl
push
in
jno
and
dec
xor
xlat
adc
xor
cwtl
mov
sbb
loope
xchg
mov
pop
jbe
mov
imul
cmp
shl
sarb
xchg
push
or
pusha
xor
daa
mov
jne
arpl
rorl
cs
jbe
rorb
jb
xlat
call
lods
push
or
arpl
xor
cmp
shl
xchg
stc
xor
int
orb
dec
les
loopne
adc
add
scas
pop
push
and
add
or
je
test
inc
roll
and
pop
out
jp
pop
lahf
inc
sub
mov
adc
jno
sbb
int3
and
mov
sub
pushf
out
repnz
and
cltd
lds
sahf
idivl
int
ret
pop
mov
push
test
inc
sub
nop
mov
aas
rorb
insl
aad
clc
or
stc
mov
dec
adc
enter
jmp
push
sub
or
fbstp
mov
mov
cmp
test
dec
adc
rorb
xchg
test
pop
js
xchg
pushf
mov
sub
inc
add
sub
dec
add
inc
adc
pusha
stos
ret
je
or
xchg
fs
adc
cmpsl
pop
fs
ljmp
aas
push
xor
mov
loopne
insb
xlat
or
inc
nop
stos
pop
cmpsl
adc
subl
frstor
cli
mov
movsl
test
repz
repz
mov
pushf
ja
mov
push
out
and
jne
inc
pusha
pusha
gs
jp
sub
pop
jecxz
mov
nop
lcall
adc
out
cmp
mov
incl
aad
ficomps
testb
jg
pop
in
scas
insl
jle
xor
stc
adc
dec
xchg
jnp
mov
xor
outsb
shl
push
cltd
sbb
mov
repnz
int3
outsb
and
mov
mov
adc
mov
jns
popa
xchg
sbb
jb
in
es
and
xor
lahf
jl
mov
cmp
mov
loop
into
out
pop
cmpsl
das
jo
lods
push
inc
sti
insb
mov
leave
dec
cmc
out
leave
mov
push
sbb
fnsave
dec
loope
mul
push
xchg
cmp
or
pop
js
sub
sbb
and
add
inc
xchg
sbb
pop
div
ja
xor
lds
xor
xchg
lret
or
add
cmp
mov
mov
sub
test
sbb
jnp
inc
and
sarb
jno
out
pop
cmp
movb
cwtl
sub
jns
lods
clc
aad
mov
xchg
stc
gs
xchg
mov
mov
cmpb
data16
mov
xlat
in
pusha
xchg
or
in
mov
cmp
add
sti
cltd
cltd
dec
xor
sbb
iret
pop
popa
ficomps
lods
stos
xchg
mov
mov
push
mov
adc
push
and
test
test
pop
xchg
nop
and
xchg
shlb
jp
ds
stos
or
xchg
rorl
clc
mov
cmc
xor
shll
cld
add
std
loope
or
ret
pop
dec
stc
mov
fwait
mov
push
ret
xor
xlat
rcrb
cmp
jge
xchg
mov
aad
outsl
scas
int
lds
push
sahf
and
stos
pop
or
cmp
scas
jbe
ret
pop
mov
movsb
imul
adcb
inc
shll
jl
les
add
fnstcw
mov
in
add
cmpsl
cmp
sbb
sub
sbb
xchg
popa
and
mov
out
je
in
xchg
int
jmp
icebp
data16
xchg
scas
pop
ss
fs
dec
mov
inc
popf
cli
rcrl
into
loopne
rorl
xchg
into
ss
xchg
or
xor
add
clc
fbld
add
loop
out
push
push
xor
jae
adc
sub
xchg
ljmp
inc
dec
ljmp
lock
loopne
inc
loopne
jl
js
push
pop
jnp
insl
cmpl
mov
xchg
pop
ret
add
mov
cs
outsb
pop
popf
push
mov
imul
movl
clc
dec
push
push
jecxz
sbb
outsb
pop
mov
mov
aaa
sbb
divl
jo
pop
mov
and
pop
lret
insb
pop
lret
sub
sbb
nop
dec
cmp
dec
push
ljmp
stc
out
sbb
clc
jne
adc
jecxz
lahf
mov
pushf
dec
mov
adc
mov
or
arpl
in
lea
shr
mov
xchg
xchg
data16
sbb
or
outsb
loop
mov
pop
fwait
mov
fld
and
sub
jl
cmp
xlat
jecxz
aaa
sbb
xor
in
adc
or
ret
dec
push
imul
xor
cmp
and
push
and
jl
add
sub
mov
mov
es
dec
imul
loope
lea
mov
pop
sub
stc
cmp
jo
inc
and
push
imul
clc
mov
cmp
xchg
pop
sub
push
outsl
imul
pop
or
sbb
or
push
sub
aad
icebp
xor
mov
push
das
push
mov
cmp
orl
sub
sbb
jb
xchg
lahf
jmp
loope
lods
je
loop
mov
das
xor
xor
xchg
cld
in
decb
xchg
xchg
xchg
pop
inc
xor
mov
je
sub
jg
mov
insb
fsubrs
cmp
xchg
sub
cwtl
popf
leave
cmpsl
dec
arpl
shll
dec
lret
dec
lods
dec
mov
xor
dec
mov
fistpll
movsl
inc
lods
pop
ret
push
push
loopne
filds
sub
inc
inc
outsl
arpl
mov
inc
in
popa
rcll
mov
adc
sti
inc
clc
cmp
push
mov
fwait
pop
fnstenv
sahf
fistl
in
sub
pop
jge
gs
dec
fmull
scas
in
adc
pop
push
mov
andb
shlb
and
mov
cmp
imul
inc
je
ficompl
or
xchg
sbb
adc
push
and
fbld
dec
inc
mov
std
jg,pt
pop
test
sbb
mov
jge
or
inc
jns
mov
dec
ja
push
push
mov
loop
dec
push
mov
push
rorb
int
call
fadds
push
xor
or
icebp
inc
pop
pop
adc
xor
cltd
imul
in
jnp
sub
dec
sbb
leave
scas
xor
mov
fsts
or
shlb
add
je
inc
inc
dec
jbe
adc
leave
push
pop
clc
push
cmc
jle
push
dec
daa
mov
cmp
scas
jo
mov
ss
jmp
fmuls
fsubl
jg
xor
push
call
ss
lock
test
ljmp
dec
sub
sub
jp
push
lcall
test
ljmp
dec
sub
sub
jp
push
lcall
test
ljmp
dec
sub
sub
jp
pop
sbb
leave
stos
test
push
in
cmc
rcll
mov
xchg
out
in
hlt
jl
insb
aam
lock
inc
xchg
mov
cld
inc
in
push
cltd
and
je
add
adc
in
hlt
jl
insb
aam
movsb
or
cmp
sub
mov
rolb
pushf
and
xor
add
adc
in
hlt
cli
les
mov
test
xchg
fcompl
sub
jbe
push
lret
popa
fists
mov
dec
jne
xchg
ja
js
and
inc
add
leave
in
stc
popf
fstl
sbb
pop
repz
pop
mov
adc
inc
pop
push
sbb
sbb
call
jl
in
mov
dec
adcl
inc
adc
sti
repz
add
cmp
sbb
insl
cs
leave
push
lahf
popa
in
mov
mov
push
xor
adcl
sub
movsb
dec
js
fs
pushf
jne
mov
mov
add
dec
or
xchg
outsl
hlt
mov
dec
aad
and
xor
std
inc
in
push
sbb
mov
stc
adc
jl
add
sbb
dec
mov
test
and
repnz
cld
and
xor
add
push
mov
daa
cmp
jns
das
loope
in
or
cmp
dec
loop
enter
pop
movsl
les
jne
insl
lcall
lea
cltd
adc
pop
leave
jno
jp
mov
orb
mov
cmp
sub
fsubl
cld
inc
in
push
pushf
and
xor
add
adc
in
hlt
jl
insb
aam
movsb
or
cmp
sub
fsubl
cld
inc
in
push
pushf
and
xor
add
adc
in
loope
xor
negb
cs
xor
scas
movsl
sti
sti
inc
mov
push
or
add
mov
pop
cld
dec
add
into
push
lret
add
add
add
imul
sbb
std
cmpsb
in
fs
mov
imul
ret
jl
adc
lret
addb
push
lret
cmp
into
movb
add
inc
jle
inc
pop
and
mov
out
addb
adc
sbb
imul
jbe
dec
adc
xchg
call
lods
dec
mov
push
jp
or
pop
pop
fwait
mov
inc
cmpsl
outsb
std
jl
lret
imul
mov
cmp
lods
push
mov
cmpsl
inc
daa
cmp
mov
pop
mov
lret
imul
push
gs
cmp
xor
mov
out
push
add
pop
add
repnz
push
xchg
fsubr
fildll
or
lret
push
and
or
push
mov
pop
sub
nop
xchg
jae
cmp
movsb
je
popf
jmp
out
ret
sub
loop
arpl
nop
out
loopne
dec
cmp
cmpsl
daa
das
or
inc
daa
iret
and
jmp
std
or
mov
dec
inc
mov
bound
xchg
dec
push
into
fnsave
cld
fsubrl
roll
leave
mov
jno
ret
pushf
out
fcoml
or
iret
outsl
cmpsl
int
dec
movsb
icebp
sti
pop
movsb
push
and
push
mov
mov
cld
xchg
mov
xor
cmp
sbb
test
leave
fadd
dec
ja
inc
movsb
dec
jb
xor
enter
int3
jmp
ret
xor
aaa
add
cltd
nop
xchg
dec
rorl
pushf
adc
dec
mov
mov
or
pop
fstp
fsubrs
mov
orb
jb
add
push
addl
out
pop
push
subl
add
cmp
sub
cmp
push
pop
mov
mov
xor
adc
test
fsts
lcall
nop
xchg
add
sub
iret
sar
dec
test
in
mov
push
add
jmp
out
xchg
mov
aas
js
rclb
stos
sbb
mov
pop
cmp
mov
scas
js
mov
push
or
daa
mov
movsb
pop
ss
mov
int
flds
pop
lods
push
sbb
pop
lret
stos
pop
xchg
sbb
dec
jb
mov
add
les
fcmovbe
push
inc
sbb
inc
adc
movsb
ret
aam
mull
out
sub
or
adc
mov
push
repz
fs
xor
cmc
dec
dec
jecxz
int
xor
push
ret
sbb
mov
dec
jb
insb
out
pushf
inc
mov
lret
jns
jno
cmp
lock
sub
shll
sbb
mov
jo
mov
mov
sub
ret
call
xchg
or
push
fimuls
dec
inc
ret
aam
int
jae
pushf
imul
aam
or
add
lret
adc
adc
sbb
out
push
cltd
pusha
gs
lcall
add
std
push
jns
or
fisttpl
mov
mov
and
loop
push
hlt
or
cmp
aam
arpl
andl
out
enter
sahf
adc
ret
push
nop
sub
mov
jnp
sub
jmp
pop
xchg
mov
sub
mov
cmc
cmc
shll
jne
fwait
rolb
dec
lea
jle
add
and
stos
cmc
fbstp
mov
ds
out
pushf
push
orl
sub
sub
rolb
sub
cmp
aam
das
xchg
cmc
popa
jle
rolb
stos
popf
adc
push
rcr
sub
jns
pop
inc
fimuls
insb
jl
pop
cltd
sti
dec
push
ljmp
mov
jp
fwait
or
movsl
out
icebp
sub
push
push
push
pop
or
loope
or
jns
pop
and
mov
clc
add
or
shll
cmp
jo
aad
add
cmp
sti
add
sbb
jge
jmp
cwtl
add
popf
arpl
insb
testl
sbb
push
stos
lds
pop
repz
push
out
cmc
cli
pop
mov
aaa
jne
rolb
shll
outsb
xchg
add
xchg
push
jno
popa
sub
sbb
add
jp
pop
or
jecxz
icebp
fcmovnbe
inc
sti
xchg
cli
sti
push
inc
mov
scas
in
sbb
fbld
mov
call
cmpsb
lcall
mov
cmp
les
cmp
jns
int3
adc
jno
shrb
and
in
cmp
xor
jl
pusha
loope
aaa
test
imul
mov
mov
mov
in
xchg
mov
iret
jae
imulb
imulb
scas
mov
add
popa
dec
and
add
psubq
sti
push
inc
insb
adc
sub
jae
call
inc
xchg
pop
int3
lock
xchg
xlat
add
in
jo
inc
xor
xor
fstpt
decl
sbb
ucomiss
pop
sub
and
dec
push
adc
dec
ret
enter
sub
adc
add
lahf
outsl
dec
fbld
addr16
sti
mov
repz
lret
scas
into
test
daa
xchg
jno
and
insl
mov
pushf
add
movsb
pop
pop
repnz
cltd
mov
lcall
ret
aaa
or
push
mov
jp
stos
push
test
pusha
aaa
dec
adc
jg
pop
adc
outsb
jp
faddp
and
mov
adc
cmp
mov
mov
fiaddl
js
ret
fs
add
fs
pusha
jl
xor
fldt
adc
push
inc
in
cmp
or
dec
mov
jne
push
enter
sbb
or
sub
in
bound
mov
adc
leave
outsb
mov
fdivp
ror
inc
xor
ffreep
xor
jecxz
push
fimull
xchg
pop
pop
icebp
xor
inc
jno
setle
movsb
scas
insb
lret
mov
mov
hlt
dec
cmpsb
push
add
sub
hlt
inc
or
std
nop
arpl
push
scas
inc
cmpsl
fwait
lret
mov
or
ret
inc
jmp
std
inc
add
iret
pop
mov
stos
nop
mov
movsb
int
mov
sbb
push
popf
add
push
sbb
mov
push
dec
mov
add
das
jle
js
fdivr
jb
cld
pop
mov
and
mov
push
popf
or
pop
lock
sbb
adc
add
xlat
js
cmp
sub
shll
mov
or
sbb
mov
xchg
mov
dec
mov
out
cmp
aaa
lahf
cmc
adc
ss
dec
ret
sbb
push
bound
mov
mov
dec
xchg
inc
pop
pop
ficoml
sub
lea
negl
xchg
mov
jp
adc
inc
cli
mov
dec
sub
sbb
adc
mov
dec
push
push
popf
inc
sbb
std
jge
aas
pop
mov
stc
xor
sti
pop
xchg
push
fwait
xchg
adc
push
sbb
imul
cmp
inc
inc
test
jl
loope
add
mov
cli
and
jo
loopne
sub
test
pop
movsb
sbb
aam
and
push
adc
cmc
sbb
les
cmp
jmp
add
inc
push
xorb
stc
or
out
cmp
ss
mov
adc
mov
daa
fidivrs
mov
es
inc
popf
mov
add
jg
dec
inc
mov
rcrl
repz
leave
adc
dec
fsubs
sahf
jae
xor
mov
in
enter
movlps
mov
loop
dec
or
cmc
loop
std
add
popa
jb
mov
test
outsb
mov
and
cmp
lret
aam
xor
mov
es
mov
dec
inc
sub
in
aas
aam
icebp
xchg
mov
jl
test
add
jno
cmp
pop
ljmp
dec
and
xchg
popf
ljmp
pusha
mov
jno
sbb
jo
enter
fs
cwtl
jns
clc
pop
sahf
mov
sub
lret
hlt
in
ret
cli
sub
outsl
xor
xchg
sbb
inc
lea
sub
add
jo
jp
mov
push
or
or
sub
pusha
mov
aam
psrld
mov
sarl
and
adc
dec
ds
push
cmpb
rep
push
in
push
ds
in
ja
mov
sub
call
incb
in
push
add
push
fisttpl
inc
fists
bound
jecxz
mov
mov
inc
ret
inc
dec
pop
adc
jge
cltd
inc
divb
cmc
xor
loop
addr16
xchg
lods
pop
dec
xor
rolb
call
leave
out
pop
xor
sub
stos
push
test
jbe
and
nop
and
push
mov
push
cltd
leave
out
jle
cmp
cltd
sub
adc
pushf
jecxz
or
xchg
xchg
push
sahf
gs
neg
cli
fists
ljmp
push
dec
add
dec
push
int
sub
fidivrl
inc
push
imul
sub
cmpsb
mov
enter
stos
adc
jae
sub
loopne
add
inc
jo
ljmp
mov
std
div
jg
cltd
mov
sub
cltd
add
ja
xor
xlat
jno
arpl
pop
mov
rcrl
test
jle
sbb
movsl
jne
pop
cmpsb
sbb
mov
cld
repnz
enter
sbb
out
jle
out
or
dec
dec
sub
xor
mov
adc
and
add
je
stos
push
mov
ficoms
aam
scas
les
aad
loope
cmpsl
push
jae
jl
xor
outsl
repnz
adc
mov
inc
fnsave
sub
insb
xchg
pop
jnp
aaa
sti
outsl
int
xor
mov
loop
enter
mov
mov
fwait
jno
sbb
outsl
mov
push
xorl
inc
mov
xchg
mov
mov
leave
add
jbe
mov
cltd
std
test
mov
pop
mov
mov
pop
push
data16
ret
xor
adc
or
push
movsb
mov
in
jo
adc
sub
ljmp
insl
std
pop
loope
jb
shlb
scas
sbb
or
inc
dec
inc
inc
jbe
jo
cs
icebp
pop
std
jno
repz
mov
or
fistpll
jecxz
rorl
adc
mov
push
ret
mov
jl
xor
cmp
scas
dec
clc
dec
sub
mov
and
cltd
xchg
inc
mov
arpl
lret
push
cwtl
cmp
icebp
daa
mov
xor
daa
hlt
pop
lock
rcrl
and
mov
int3
imul
scas
bound
orl
imul
xor
movsl
shlb
daa
outsb
cmp
lret
in
xor
sub
push
fstpl
int3
dec
lahf
lahf
enter
lcall
cli
pop
mov
mov
jg
adc
sub
or
or
rcrl
cs
xlat
mov
or
insl
adc
mov
in
out
jnp
stos
xchg
push
aad
mov
out
jae
out
push
addl
pusha
je
xchg
inc
rcrb
aaa
inc
imul
push
pop
aaa
imulb
cmc
ss
add
shlb
dec
fdivp
xchg
xlat
test
sahf
ss
cmp
icebp
sub
sbb
xor
jg
pop
fimull
cmp
adc
or
and
nop
inc
inc
and
arpl
das
xor
aam
xor
add
pop
mov
jge
add
add
cld
fs
mov
pop
ret
xchg
mov
fbstp
lcall
test
cmp
addr16
int
test
fbstp
es
jnp
je
cs
into
pop
pop
or
fisubl
adc
xor
bound
pusha
inc
vphsubbw
xchg
stc
jno
ds
push
pop
pushf
enter
mov
sub
or
pop
push
dec
fiadds
or
imul
jo
aad
pop
mov
xchg
jb
loop
pop
ljmp
daa
mov
or
mov
mov
jl
sbb
xor
pop
mov
push
adcb
addr16
jae
xchg
pushf
loope
dec
and
pop
add
sub
fadds
lea
shlb
hlt
cmp
sahf
xchg
sbb
jle
lahf
cmpsb
imul
jne
ljmp
je
mov
or
cmp
addb
sbb
jl
push
inc
pusha
dec
and
cmpl
pop
or
pop
sbb
call
subb
movsb
es
dec
insl
inc
jmp
aas
fnstsw
aas
jo
daa
rcll
cmp
int
or
iret
shlb
sub
clc
xlat
mov
jo
xlat
test
dec
xor
movsl
fdivs
mov
addr16
jg
mov
pop
js
inc
and
mov
adc
ds
shll
aam
adc
mov
test
cmp
or
ljmp
js
outsb
fidivl
mov
insb
jne
out
jae
aad
mov
rcrb
adc
jg
pop
push
sub
shlb
inc
addb
hlt
jns
inc
out
xor
fisubs
fdivrl
sub
cmp
xor
popf
pop
mov
int3
add
js
aam
xor
dec
cs
jne
out
mov
push
adc
fdivrl
adc
movsl
inc
js,pn
mov
jl
cs
mov
test
fisubs
fcompl
xchg
popf
cmp
addr16
daa
outsb
adc
sub
iret
sub
loopne
pop
fsubrp
movsl
stc
popa
mov
add
xchg
fidivl
mov
or
cmpb
push
gs
out
ret
js
push
andb
mov
imul
adc
sbbb
sahf
std
dec
inc
mov
or
mov
enter
pop
pop
jno
mov
imul
push
das
imul
rorb
fdivrs
and
pop
loope
pushf
ret
push
arpl
vpcomuw
addr16
repz
mov
mov
fnsave
mov
cmp
fs
orb
push
fcoml
cmp
and
adc
imul
sbbl
mov
mov
mov
xchg
stos
jl
xor
hlt
enter
imul
mov
mov
in
mov
jg
in
insl
std
jp
je
jbe
bound
xlat
and
test
fcmovnu
push
jp
lret
jp
push
sti
add
icebp
xchg
adc
dec
xchg
push
ss
or
fidivs
adc
shll
stos
cmp
sbb
out
jp
add
jno
popa
push
cwtl
mov
or
std
fwait
add
test
push
iret
insb
inc
pop
les
xchg
xchg
nop
jp
push
js
aaa
ret
call
sub
sti
pusha
data16
sub
hlt
imul
clc
mov
insb
dec
jg
cwtl
jge
xor
sbb
adc
out
sbb
jnp
arpl
outsl
dec
jmp
dec
sub
stc
addl
notl
push
jmp
lret
test
mov
addb
negb
aas
xor
and
jmp
repz
sbb
mov
ds
jbe
dec
push
or
call
das
dec
sbb
imul
nop
mov
or
fdivs
and
popf
xor
add
stc
jnp
daa
pop
inc
add
dec
dec
pop
andl
loopne
mov
jbe
xchg
fistl
xchg
lcall
fdivp
sbbl
pop
push
jbe
insb
iret
cmpl
adc
adc
js
xchg
sbb
pop
mov
pop
mov
cmp
or
aam
mov
cwtl
mov
jns
push
cmpsb
outsb
dec
sti
xchg
out
mov
ja
enter
aaa
add
jb
xlat
es
mov
rdtsc
cmpsb
roll
sbb
pop
jns
js
add
inc
mov
sbb
inc
cwtl
ret
mov
mov
push
add
xor
enter
push
sub
mov
scas
test
leave
cltd
fisttps
daa
sbb
test
pop
scas
movsl
fisubs
rorl
xchg
das
lea
ja
roll
xchg
and
es
or
add
mov
xchg
inc
cwtl
xor
gs
mov
push
mov
mov
dec
in
out
imul
sbb
xchg
imul
push
repnz
inc
insl
mov
aaa
add
xor
pop
ljmp
in
mov
push
xchg
shlb
ret
adc
fildl
push
arpl
scas
scas
int3
dec
sbb
adc
mov
add
xchg
lcall
push
clc
es
cmp
jp
xor
testl
cmp
push
pop
mov
leave
xchg
ret
inc
adc
rorl
push
gs
dec
or
sbb
testl
mov
subl
inc
mov
jae
cmp
and
mov
and
dec
enter
pop
cld
mov
and
iret
test
sbb
push
push
add
sbb
sbb
push
or
xchg
ja
push
mov
test
sub
movsb
jbe
cmc
out
cltd
fs
inc
add
sahf
dec
or
shlb
mov
fcmovnbe
movsb
out
xchg
fnstcw
pop
mov
xchg
in
iret
jns
les
fdivrp
mov
js
xchg
jp
xlat
push
mov
aad
and
xor
lds
push
dec
cs
dec
and
inc
jno
sbb
sub
push
adc
out
int3
inc
jne
pop
xor
adc
add
aaa
js
sbb
inc
stos
or
leave
jne
ja
jge
pop
lods
and
xor
fucomip
fidivrs
xchg
cli
pop
jp
sbb
mov
add
or
or
xchg
mov
mov
mov
loop
mov
pusha
add
and
sub
mov
and
push
data16
sbb
imul
inc
add
sbb
nop
xchg
sub
or
add
dec
out
push
scas
pop
xchg
push
add
mov
divl
xchg
xchg
ja
fucom
xchg
add
mov
imul
arpl
mov
aad
pop
sbb
sub
or
adc
sbbl
sbb
aas
mov
xchg
push
add
add
inc
sbb
xchg
popf
out
into
jmp
push
popa
cld
add
cmpsb
xchg
dec
cwtl
je
push
jp
mov
dec
jnp
orl
push
lret
push
outsb
or
jae
stos
call
xor
fs
and
xchg
cld
test
test
cmpsl
sarb
push
shl
dec
mov
divb
out
adc
lcall
fnstsw
stos
jp
xchg
dec
movsl
jmp
in
sub
jge
into
icebp
loopne
inc
movsb
nop
fistl
mov
and
daa
clc
mov
or
out
jmp
pop
shll
lods
jmp
adc
dec
pop
mov
xchg
test
fwait
mov
mov
jge
sti
int3
loopne
mov
add
pushf
ret
mov
test
cmc
and
leave
jecxz
dec
and
rcrl
call
ret
add
test
andl
in
bound
fisttps
dec
xchg
sub
adc
loop
popa
rcrl
inc
leave
xor
cli
and
mov
cli
hlt
push
fucomp
nop
xchg
inc
scas
insb
xchg
jge
outsb
loope
sub
dec
xchg
push
dec
sahf
sbb
or
scas
mov
and
push
ret
xchg
repz
test
mov
cmp
mov
sbbb
push
push
mov
stos
cmp
pop
dec
subb
lods
mov
rcll
cmp
mov
pushf
jnp
dec
mov
dec
fisubrl
bnd
mov
pop
mov
pop
mov
inc
lea
add
mov
sub
dec
loop
loopne
inc
jmp
divb
lds
out
and
outsb
inc
pop
rolb
pop
add
and
mov
outsb
xchg
push
adc
js
push
jg
sub
jbe
add
jmp
fisttpl
cs
mov
push
jne
mov
pop
and
push
test
sub
dec
xor
jl
jb
push
test
lds
sbb
or
cmp
sub
fsubl
cld
inc
in
push
pushf
and
xor
add
adc
in
hlt
jl
insb
aam
movsb
or
cmp
sub
fsubl
cld
inc
in
push
pushf
and
xor
add
adc
loopne
hlt
insb
les
movsb
or
fs
jne
inc
call
xor
add
adc
in
hlt
hlt
les
movsb
sbb
cmp
lods
imul
xor
push
inc
in
and
lods
add
inc
sti
push
jmp
sub
cmp
or
sbb
shlb
pop
inc
lahf
push
mov
add
adc
lret
shrl
cmp
or
sbb
dec
mov
inc
cmpsb
push
mov
add
xor
shll
and
adc
add
push
mov
inc
stos
push
cltd
add
adc
bound
pop
mov
rorw
outsl
mov
mov
shlb
outsb
mov
cltd
or
xor
pop
mov
add
mov
mov
movsl
xor
scas
inc
cmp
cld
gs
mov
movsb
sub
leave
and
push
out
cmp
push
sub
pop
inc
stos
add
mov
lret
push
je
vpmaddwd
push
ds
push
dec
xchg
inc
pusha
jne
pop
loope
inc
jg
xor
lds
stos
cltd
pop
inc
mov
sub
inc
xor
and
jns
movsb
cltd
into
pop
cmp
rorl
bnd
popa
loopne
fistps
ja
mov
jne
gs
adc
and
xor
sahf
cmp
icebp
sbb
dec
mov
inc
stos
push
mov
add
adc
and
xor
mov
xchg
dec
lea
jg
push
aam
sub
jecxz
push
mov
clc
dec
movsl
inc
mov
inc
xchg
push
xchg
jns
jne
push
xor
ds
push
sbb
adc
dec
lcall
mov
cmp
pop
xchg
jp
dec
mov
inc
stos
push
mov
add
adc
and
xor
shrl
cmp
or
sbb
dec
mov
inc
stos
push
mov
add
adc
and
xor
shrl
sub
sbb
loope
xchg
inc
iret
pop
lahf
sti
ret
rclb
and
test
cmp
ds
or
pop
out
and
ljmp
repnz
sub
outsb
or
int3
or
sbb
subl
jo
es
and
fistpl
or
xor
stc
push
dec
inc
push
dec
push
fildl
sbb
xchg
mov
jp
outsl
movsb
loopne
add
inc
push
stos
cmp
cmp
int3
mov
test
pop
and
and
mov
shlb
and
push
imul
es
and
adc
adc
jecxz
push
xchg
push
ljmp
jmp
and
add
cltd
push
sbb
test
and
mov
dec
cmpsb
pushf
mov
sti
lret
lods
lcall
cmp
sub
pop
rorb
adc
inc
jmp
or
stos
imul
lods
pop
enter
mov
jnp
or
in
inc
push
nop
xchg
xor
insl
sarb
icebp
push
xchg
push
or
or
push
xor
jecxz
push
inc
dec
scas
movsl
and
xchg
int
jae
xor
fisttpl
test
outsl
fdivl
adc
in
push
add
cld
push
and
pop
pop
lods
mov
jmp
outsb
fwait
cld
or
push
cmp
mov
icebp
mov
outsb
test
insl
lods
mov
push
inc
lahf
dec
dec
ds
xchg
mov
fidivrs
cwtl
dec
adc
bound
pop
adc
sub
push
jl
push
xchg
and
stc
add
xchg
adc
stc
in
test
adc
sbb
out
xlat
test
idivb
sahf
rol
cmc
mov
jg
mov
fadds
fstpl
xchg
test
repnz
jbe
in
sahf
orl
icebp
lds
cmpsl
cwtl
dec
jle
lret
cmp
call
pop
dec
ss
movsl
lods
mov
loopne
stc
js
xor
cmp
jo
mov
hlt
jge
popf
push
dec
pop
leave
adc
push
insl
xor
scas
pushf
hlt
sub
sub
and
adc
shl
cmp
jae
add
jns
xchg
jno
testl
popa
loopne
inc
mov
cltd
xor
sbb
fisttpll
xor
decl
adc
mov
mov
pop
dec
inc
ss
loope
jns
arpl
sti
ja
ss
call
scas
jb
mov
or
or
or
pop
out
fcoml
mov
cltd
fdivrl
psrlw
dec
pop
sub
ds
ss
nop
lods
insb
inc
and
les
push
push
push
movsb
jl
stos
jmp
orb
int3
test
movsl
inc
cltd
mov
iret
inc
scas
fiadds
mov
inc
and
push
movsb
sub
and
dec
stos
int
and
addr16
sbb
sti
rcrl
xchg
add
inc
jo
es
mov
test
cmp
xchg
push
fmul
sahf
loop
cltd
scas
dec
addr16
adc
xchg
jle
or
sbb
aam
cli
sbb
out
mov
xchg
push
ret
ficompl
add
xchg
andb
lahf
inc
push
jmp
jae
cld
mov
or
jp
dec
sub
es
and
sub
sbb
xor
fnsave
dec
or
into
inc
mov
and
int
cs
sub
fists
sub
jl
push
or
jae
dec
lock
daa
popa
in
jns
inc
daa
cmpsl
add
dec
mov
inc
jmp
jecxz
icebp
jbe
mov
sub
call
adc
out
mov
lcall
fmuls
rcr
jecxz
clc
push
inc
movsb
shrl
std
xor
in
mov
adc
jne
popf
xor
daa
addl
cmpsb
lea
xor
push
movsl
test
inc
pop
add
stos
lods
pop
jae
fidivrl
add
add
movsl
repnz
test
mov
test
popf
push
mov
nop
cmp
add
pop
cwtl
lea
stos
nop
loopne
mov
jl
fnstenv
pop
push
ss
and
and
jns
and
ret
pop
notb
fwait
or
xchg
adc
loope
test
xchg
stc
mov
mov
aas
fs
movsb
sub
mov
leave
push
sub
outsb
sti
mov
add
inc
addr16
cmp
aaa
sbb
clc
call
adc
cmp
push
dec
push
mov
aas
int
into
into
dec
ret
clc
adc
in
add
std
and
outsl
pop
stc
xlat
jbe
jg
lea
shrb
inc
cs
cmc
in
pop
bound
dec
subb
lcall
outsl
push
movsb
jnp
adc
lret
lahf
je,pn
cmp
in
sbb
add
cmp
fs
push
pop
jbe
inc
pop
stos
or
xchg
loope
push
loop
xchg
cmp
roll
pop
lahf
mov
xor
in
or
or
xchg
and
jbe
fidivrs
push
inc
sbb
dec
sub
xchg
dec
scas
xor
cli
mov
jne
call
imul
xlat
sub
rcrl
mov
pusha
adc
cli
call
cmc
sarl
xor
data16
adcl
dec
ja
mov
adc
in
maxps
test
or
std
imul
hlt
sbb
test
lock
jo
inc
jb
sarb
cltd
push
mov
push
and
sbb
jl
dec
xchg
sub
inc
cld
inc
ss
lea
out
push
lods
mov
mov
pop
stos
repz
movsb
push
cli
fisttpl
out
mov
in
jns
fmuls
xchg
inc
leave
sarl
xchg
stos
mov
dec
data16
push
jo
jb
test
rcl
lret
add
pushf
sub
repz
nop
mov
aad
mull
sti
std
push
jge
pop
or
insb
add
test
test
and
xchg
out
stos
push
jecxz
fdivrs
addr16
ss
fsubrl
imul
pop
mov
mov
jo
add
jle
enter
fxch
push
xor
xor
ss
sbb
js
imul
xor
lahf
fiaddl
mov
dec
fldenv
rorl
push
cmc
jno
push
scas
mov
daa
jae
stc
je
aas
xchg
xchg
aad
je
idivl
pop
or
nop
dec
out
ljmp
iret
adc
sub
mov
repz
fbld
fistps
clc
fidivrl
pop
add
jb
dec
pop
jno
les
dec
and
mov
es
inc
or
inc
das
mov
add
and
inc
or
dec
pop
cli
in
pop
clc
xor
xor
aad
push
shlb
pop
rep
cmpsb
inc
xchg
arpl
stc
dec
and
popf
cmc
add
cmp
adcb
push
imul
and
aas
dec
bound
lds
inc
andl
lea
pop
jne
inc
rcrl
stc
je
push
sub
push
pop
push
mov
ds
mov
mov
xchg
mov
and
sbb
mov
xor
stc
repz
addr16
ret
adc
arpl
sbb
mov
mov
mov
out
and
ret
pop
cmp
movsb
and
jno
stos
add
cmpsb
and
jmp
test
lahf
jne
out
sti
jmp
and
aaa
cmp
adcb
ret
cmpsl
sbb
in
es
testl
repnz
xor
fidivl
dec
inc
data16
mov
sub
dec
jle
or
out
pusha
sbb
fldl
mov
cmp
mov
nop
fsts
jae
mov
popf
scas
arpl
sub
sbb
insb
popf
cs
inc
lahf
ss
and
cs
sub
pushl
mov
mov
es
decb
jo
sbb
lea
add
cmc
mov
jbe
xor
in
leave
clc
mov
mov
xor
cmpsb
mov
lret
test
fmuls
int
sbb
aad
stc
push
mov
jle
mov
dec
lods
sahf
mov
and
movsb
jo
loop
lock
cmp
sbb
xlat
jl
push
fcmovb
icebp
pop
push
jbe
mov
into
adc
sbb
mov
mov
xchg
xchg
xchg
aaa
inc
leave
in
movups
inc
outsl
subl
mov
mov
mov
inc
push
adc
mov
xlat
inc
pushf
leave
jbe
push
cmpsb
pop
cmp
jnp
lods
arpl
pop
mov
icebp
pop
xor
notl
mov
pop
mov
stos
cmp
sti
sub
mov
add
shll
testl
test
orl
inc
mov
ret
cmp
into
inc
xchg
push
in
gs
push
fidivs
add
cmp
ret
adc
fs
mov
icebp
push
sbb
ds
add
add
mov
je
jmp
sbb
testb
sar
xor
sbb
pushf
insb
push
std
or
sbb
divl
mov
aad
sbb
rcl
mov
les
pop
je
cmpb
or
sbb
fcmovnu
mov
jp
cmp
iret
dec
xchg
repz
mov
add
add
sbb
push
push
stos
and
add
insl
pop
push
negb
mov
inc
aad
add
mov
aam
adc
pop
sub
and
mov
inc
mov
inc
out
dec
out
fstpl
sub
push
sub
sarb
in
stos
fs
scas
sbb
test
cmpsl
jp
mov
scas
lret
pushf
adcb
add
out
and
cld
mov
pop
shlb
add
in
adc
or
fcoms
idivl
jne
fdivp
imul
shlb
xor
mov
push
adc
sbb
jae
add
fsub
ja
mov
pop
sbb
int3
mov
arpl
enter
mov
pop
dec
mov
add
adc
imul
or
sbbl
ja
add
fdivr
ficoml
inc
ljmp
inc
clc
add
out
xor
mov
imul
cmp
lahf
dec
cmpsl
sbb
rclb
filds
test
sub
inc
fnstsw
pop
add
mov
pop
mov
cld
test
scas
cld
jno
push
das
cmp
mov
pop
leave
cs
js
jecxz
push
outsb
add
hlt
adc
bound
pop
pop
pop
sub
cmpsl
mov
fiaddl
cli
push
imul
sub
inc
insl
arpl
lret
subb
int3
mov
decb
mov
jge
adc
les
mov
xchg
popf
adc
inc
mov
lret
mov
sbb
push
ss
mov
add
clc
jmp
push
sub
test
mov
rcrl
std
cmpsl
ret
lea
dec
fwait
test
push
cmp
dec
pop
mov
addr16
jns
jmp
xchg
inc
pop
mov
es
loope
mov
insb
fldenv
addr16
loope
leave
cld
sub
adc
and
adc
mov
push
nop
cmc
fadds
and
lock
lret
push
stc
cmp
cs
pop
mov
xor
bound
dec
test
or
mov
cmp
sbb
sar
pushfw
adc
clc
cmp
xor
mov
sbb
xchg
leave
bound
in
sub
stc
mov
in
pop
mov
adc
inc
xor
jns
mov
stos
jmp
mov
add
iret
or
push
aad
inc
jb
dec
mov
and
shlb
cmpsb
mov
imul
js
addr16
jns
call
add
xchg
xchg
out
cli
jnp
adc
sti
lods
out
push
into
add
and
subb
or
mov
arpl
adc
imul
repnz
movsb
lds
xor
lds
inc
jp
hlt
push
inc
adc
sub
adc
adc
insb
jns
push
test
pop
pusha
jns
std
mov
popa
and
cmp
rol
push
xchg
js
xor
shll
dec
mov
mov
sbb
jmp
outsl
pop
inc
add
dec
push
xchg
ret
daa
stos
push
daa
xchg
adc
adcl
pop
adc
and
sti
pop
repz
leave
sti
cmp
and
test
push
lret
push
cwtl
lret
pusha
outsl
jg
push
mov
fstp
into
cli
movsl
rcl
ds
test
dec
fdivl
xchg
sbb
mov
gs
mov
aam
test
xrelease
lahf
mov
stos
sbb
sub
ja
div
movsb
pop
daa
add
adc
test
jo
lahf
out
push
pop
cmp
push
cmp
std
sarb
mov
aad
jp
or
adc
pop
ja
mov
jecxz
leave
pop
test
fsubl
and
adc
sub
mov
lods
lods
sub
lret
xlat
int
pop
xchg
mov
clc
xchg
rcrl
ja
out
sub
mov
pop
mov
fidivrs
xor
jb
and
and
js
stos
imul
jle
push
xchg
cmp
faddl
sub
mov
and
movb
lret
jnp
jp
and
aaa
clc
pop
loop
sbb
xchg
lds
inc
test
fimull
cmc
cmovnp
jns
push
dec
push
enter
cmpsb
mov
xor
std
pop
stos
repnz
inc
aad
and
mov
shrb
insl
inc
hlt
std
xchg
push
or
pop
mov
stc
xchg
adc
inc
mov
or
arpl
sbb
es
adc
out
ret
inc
push
test
sti
ljmp
pop
les
testb
mov
xor
shlb
add
inc
dec
sbb
test
cmp
mov
push
xorl
xor
mov
xorb
mov
dec
iret
icebp
stos
fwait
push
into
xchg
pusha
lahf
lahf
fucomi
test
out
sbb
cwtl
das
lods
cwtl
fldt
movsb
adc
mov
cmp
pop
xchg
xor
shrb
add
adc
push
lods
mov
ret
shrb
sub
frstor
push
addl
push
cmp
das
lahf
sub
aad
rcrl
int3
and
push
adc
lods
mov
sub
popa
inc
sarb
mov
xor
cmp
mov
jg
sti
enter
mov
push
mov
loopne
xor
lahf
loope
aad
nop
adc
cmc
pop
or
js
testb
pop
in
jecxz
mov
test
xor
imul
je,pt
push
xchg
or
iret
rorb
or
xchg
fsubp
leave
and
adc
outsl
or
mov
mov
pushf
xchg
adc
sub
ror
in
xchg
mov
icebp
or
xor
or
mov
xchg
stc
in
out
cmp
cmc
xchg
xlat
gs
rcll
out
icebp
cmp
pushf
fidivl
std
jnp
mov
add
push
test
outsl
out
fs
sbb
xor
push
inc
pop
fsubrs
mov
xor
cmp
push
jge
or
mov
push
lcall
mov
jecxz
xlat
stos
sahf
rcrb
out
mov
lret
jo
cltd
repnz
dec
pop
lcall
pop
jp
xchg
enter
outsl
push
negl
cmp
push
cmpsb
push
call
mov
pop
inc
dec
xchg
pop
pop
or
xchg
lock
lret
stc
mov
out
int3
push
add
imul
rorl
cs
test
xor
scas
dec
stos
mov
xlat
aas
jle
jmp
adc
adc
dec
out
mov
scas
into
sbb
lock
scas
mov
in
in
jle
into
inc
fiaddl
mov
clc
jle
in
sti
push
test
std
sbb
cld
inc
fists
popf
mov
fbstp
push
mov
shll
addr16
out
mov
lea
dec
sub
aad
lds
movsb
or
fisubrs
out
cmp
mov
movsb
xor
sub
pop
out
add
xchg
add
cltd
lahf
scas
sbb
lods
sbb
clc
add
cmpsl
inc
adc
push
or
mov
or
cmp
movsl
daa
sti
notb
jmp
stc
sub
insb
addr16
cwtl
inc
cltd
and
mov
clc
dec
ljmp
add
mov
push
xchg
jno
mov
or
pop
lcall
cld
push
mov
out
pop
test
sub
aas
divl
cmp
jecxz
shlb
comiss
push
les
fidivrs
pop
xor
icebp
jmp
addr16
je
movsl
test
sub
xchg
and
cli
loopne
fldcw
sbb
mov
cld
daa
imul
lret
insl
mov
aam
xor
lahf
inc
js
aam
cli
movb
stos
add
pop
ja
lock
or
mov
das
js
bnd
mov
add
xchg
or
pop
test
push
or
outsb
aas
dec
out
mov
das
mov
repnz
iret
stos
xchg
xchg
push
outsl
sbb
loopne
push
add
pushl
call
mov
leave
aam
pop
mov
nop
loope
lret
cmpsb
sub
imul
mov
or
jle
lea
cmpsl
cmp
add
lahf
jmp
sub
inc
sub
jne
mov
jns
sub
or
jge
xlat
leave
ljmp
adc
cmp
cmc
int3
mov
xor
mov
shll
pop
fisttps
mov
sbb
neg
fisttps
push
fdivs
dec
lcall
scas
pop
in
jo
outsb
cwtl
dec
std
mov
xor
test
testl
mov
jbe
pusha
lods
push
jle
cmp
sbb
aaa
in
inc
mov
jne
hlt
mov
imul
mov
xor
lret
cld
orl
cld
cli
aas
aam
mov
cwtl
xor
push
test
xchg
in
mov
mov
mov
ret
sbb
adcl
push
pop
stos
or
mov
inc
loopne
jae
call
je
push
xor
iret
fcompl
je
jmp
addr16
xchg
test
repz
or
imul
or
movsb
out
enter
std
jg
mov
and
mov
insb
push
fmul
sbb
xchg
pop
mov
mov
insl
mov
sub
lock
and
push
add
lock
xchg
dec
aam
lahf
or
in
mov
scas
jns
lods
jns
into
cmpsb
dec
ror
xchg
out
mov
mov
mov
pop
cmp
call
lret
push
push
les
push
aaa
jb
mov
pushf
and
adc
shlb
hlt
xchg
sub
notl
jae
sarl
adc
icebp
adc
xchg
cmp
mov
popw
xor
not
dec
jno
test
jge
bound
sbb
cmpsb
aas
inc
insb
pop
mov
xchg
jb
test
roll
mov
dec
xchg
fcmovb
into
fcomp
pop
orb
and
adc
rorl
push
mov
adc
jae
dec
adc
jae
adc
int3
sub
and
scas
loop
pop
out
cmp
pop
andl
fxch
fidivrs
jmp
push
mov
mov
cli
mov
js
aaa
dec
pop
xchg
or
mov
and
ss
minps
out
scas
xor
int
xorb
std
out
dec
fxch
clc
lods
pop
test
xor
ficomps
push
rcrb
mov
jp
ret
inc
inc
push
loopne
mov
pop
arpl
repnz
scas
mov
lea
fwait
movsl
add
iret
or
or
sbb
fnstenv
or
in
mov
in
sbb
xchg
xchg
iret
mov
jbe
jbe
insl
xchg
jnp
xor
or
pop
ds
in
jle
cmp
xchg
pop
and
inc
or
push
daa
jl
les
jl
dec
sub
mov
mov
mov
push
mov
adc
inc
dec
lcall
bound
sti
add
sbb
mov
jl
in
mov
sub
push
insl
subb
dec
xor
pusha
in
inc
or
inc
test
das
pop
stos
mov
test
loopne
bound
sbb
dec
mov
inc
stos
push
mov
add
adc
and
xor
shrl
cmp
or
sbb
dec
mov
inc
stos
push
mov
add
adc
and
xor
shrl
cmp
or
sbb
dec
mov
inc
stos
push
mov
add
adc
and
xor
shrb
loopne,pt
icebp
sbb
dec
mov
inc
stos
push
adc
mov
jbe
cltd
test
mov
movsl
mov
cmpsl
in
xchg
fldl
int3
mov
jge
insl
pop
pop
pop
dec
ja
addr16
push
sbb
cmpsl
in
xchg
fldl
and
popf
stc
aaa
jge
dec
pop
pop
pop
dec
ja
sub
inc
or
xchg
jne
iret
testl
add
add
ja
adc
adc
cs
xchg
test
cwtl
clc
mov
push
jle
xlat
sbb
shr
mov
jbe
cld
push
mov
das
iret
mov
cmp
and
out
add
orb
call
mov
cmp
call
jbe
in
sub
mov
cmp
int
jne
mov
jb
subb
daa
cmp
shrb
call
jp
or
dec
lea
cs
jge
lcall
test
inc
repnz
js
fdivr
insb
jae,pn
xlat
jno
jge
add
xchg
cmp
rclb
std
cmpsl
sbb
idivl
or
pop
dec
pop
add
push
sbb
in
rcrl
mov
mov
cmp
sub
icebp
push
es
xor
sarl
call
xchg
repz
sbb
push
pop
sub
jl
data16
loop
mov
out
xlat
popf
lea
jge
insl
pop
pop
pop
dec
ja
addr16
mov
cmpsl
in
xchg
fldl
lods
xlat
popf
lea
jge
insl
pop
pop
pop
dec
ja
addr16
mov
cmp
jle
loope
and
mov
sbb
addb
mov
inc
icebp
fbld
ljmp
jne
aad
push
stc
sbb
dec
and
sub
add
hlt
adcl
scas
push
or
sub
sub
cmovge
mov
push
jbe
and
divb
push
rcrb
or
rcr
pop
xor
xlat
adc
je
mov
mov
outsl
jge
push
int3
call
jnp
popf
div
xchg
nop
aas
rorb
add
push
sub
and
leave
ljmp
push
pop
dec
andb
imul
or
test
push
lock
hlt
jp
into
std
push
inc
cmp
dec
sbb
stos
jo
and
daa
addr16
mov
shrl
xor
mov
sub
into
fisubl
dec
cmpsl
dec
pop
adc
repz
jnp
sub
add
mov
popf
fldt
dec
negb
aad
ljmp
out
push
imul
xchg
pop
insl
and
dec
rcl
std
lret
outsb
ret
xchg
jo
jmp
push
imul
leave
xor
out
daa
push
mov
das
sti
or
sbb
sahf
je
push
cmp
mov
cmp
mov
mov
loopne
sbb
out
pop
cmp
imul
lcall
dec
aas
addr16
inc
push
or
pop
cwtl
loop
out
adc
cld
inc
inc
and
lret
sub
push
mov
cmp
jmp
lcall
icebp
sbb
icebp
das
lcall
xchg
loop
or
inc
push
cmp
fcoml
dec
ret
cs
popf
fucomip
sub
push
popa
pop
nop
mov
add
aam
push
push
insb
xchg
and
adc
push
xor
scas
add
scas
iret
xlat
sub
sub
pop
and
mov
stc
stos
mov
je
std
dec
dec
pop
inc
test
pusha
or
pop
fcomi
enter
cmp
ss
lea
pop
adc
jecxz
nop
daa
cwtl
cmpsb
insl
enter
hlt
sub
jp
sti
jle
sub
push
mov
mov
lcall
lods
sub
out
xchg
dec
sbb
inc
add
jbe
cmp
sbb
pop
xor
movsw
and
aas
add
ljmp
lock
popf
dec
xor
sub
test
jecxz
fsubrl
sub
xchg
lret
rcrl
pop
adc
mov
and
mov
int3
iret
xor
pop
fidivs
addr16
lods
sub
sub
sbb
mov
loop
lahf
push
dec
bound
rorl
sbb
fwait
jne
movsl
cmc
aam
scas
ljmp
jo
push
outsl
sub
shrb
loope
xor
dec
or
push
xor
adc
xor
sub
not
arpl
xor
xor
xor
push
rclb
jns
aam
sub
fimull
push
jne
pop
jno
repz
pop
in
into
mov
jns
add
popf
iret
iret
cmpsb
lock
lret
nop
loope
ret
mov
pop
xchg
popa
and
jbe
sub
cmp
jg
movsb
loopne
push
sarl
push
push
dec
lods
mov
mov
inc
push
mov
jecxz
xor
test
sub
mov
adc
lret
dec
adc
repz
xchg
arpl
mov
mov
and
inc
cmp
cltd
ja
cwtl
jecxz
in
xor
cmp
mov
lea
cmp
sbb
aad
test
cld
xchg
dec
cmc
sub
loope
rorl
push
in
push
stos
pusha
fwait
enter
nop
dec
loopne
xchg
xor
jg
lods
mov
incb
pop
pop
jb
ret
or
push
xor
data16
pop
and
fisttps
xor
repnz
movsl
pop
sbbb
insb
pushf
mov
mov
jmp
fiaddl
inc
and
pop
arpl
adc
push
and
aaa
mov
xchg
mov
pop
test
sti
cmpsb
adc
das
or
pop
cmp
push
mov
mov
cmp
popf
scas
fsubs
sub
rorl
mov
mov
out
lock
rolb
pop
shll
jl
push
iret
in
mov
jmp
sbb
scas
cltd
sbb
pop
bound
fwait
bound
mov
movsb
imul
pop
adc
lds
cmp
addr16
cmpsl
lret
fs
pop
dec
mov
ret
or
and
sbb
jg
std
clc
sub
arpl
mov
or
mov
or
or
gs
or
cmp
dec
in
sbb
jg
dec
push
cmp
lds
adc
adc
xor
fs
and
xchg
mov
loopne
push
mov
pop
out
nop
insl
divps
cmp
rcll
dec
addl
inc
jecxz
rcrl
ret
lahf
pop
dec
popa
inc
push
lea
jp
add
loope
rcl
sbb
cmc
call
dec
jb
fs
jl
push
jb
pop
mov
out
je
roll
mov
js
in
out
cltd
cmc
cld
sahf
xchg
incl
mov
xchg
and
incl
gs
pop
dec
arpl
movsl
fwait
int3
jge
mov
in
dec
popf
das
mov
stos
les
lds
cmc
shll
shll
lcall
push
jbe
pop
sub
dec
jo
jg
xor
cmp
je
jb
sbb
ret
inc
imul
sub
cwtl
xchg
mov
push
and
jbe
push
in
call
sbb
jl
repnz
bound
insl
push
sti
xor
sbb
add
lea
xchg
pop
push
cmp
adc
and
jmp
mov
into
std
cmpsl
sbb
mov
ror
daa
jecxz
push
hlt
xor
push
push
dec
outsb
pop
in
nop
push
jae
arpl
add
jne
push
gs
jmp
aam
divl
add
mov
movsb
lods
fidivrl
pop
mov
push
fildll
xchg
cld
out
nop
dec
mov
mov
dec
lds
dec
cmp
fs
test
jmp
ja
aam
inc
pop
or
add
add
mov
jg
clc
fcmovnbe
aam
inc
dec
loop
ret
xor
xchg
jno
stc
stos
roll
jg
jp
sub
mov
push
lods
lds
mov
jg
xchg
lods
xor
add
dec
adc
mov
inc
mov
repnz
jns
lahf
mov
push
mov
out
mov
xor
sub
mov
fbstp
cmc
mov
sbb
xchg
loope
outsl
arpl
scas
cltd
ret
stos
mov
cmc
jno
xchg
push
inc
sahf
inc
mov
sbbl
mov
popa
shlb
xorl
push
lret
nop
cmp
cmc
xor
jmp
sbb
pop
push
inc
gs
jno
leave
movsl
or
or
or
mov
jno
sti
inc
dec
std
inc
loop
ficoml
or
test
mov
xchg
cltd
pushf
cmpsb
pop
jno
pop
inc
jb
dec
push
pop
mov
xchg
lret
jmp
mov
pusha
arpl
push
iret
pop
jmp
scas
je
dec
sbb
add
mov
ficomps
or
test
pop
das
std
hlt
inc
xorl
stc
mov
push
pop
outsl
popa
out
sbb
mov
inc
push
aam
sub
dec
ret
xchg
pop
push
jbe
push
or
mov
mov
popf
pusha
lahf
jb
shrb
push
into
mov
or
push
imul
push
test
dec
sbb
push
pop
xchg
shl
jmp
and
inc
jns
scas
pop
int3
push
sub
add
std
cmp
pop
jae
pop
dec
sub
jg
or
ficoml
imul
ja
shl
push
rcrb
outsl
sub
nop
push
cmp
mov
cmc
mov
mov
pusha
mov
or
pop
cmc
jecxz
sbb
test
pop
add
push
adc
mov
iret
repz
dec
adc
mov
lods
in
repnz
mov
sahf
mov
jp
and
sbb
notb
or
gs
sahf
scas
or
shl
imul
ds
scas
pop
jnp
in
xchg
insl
je
cmpsl
or
out
inc
sub
inc
ljmp
mov
stc
add
sti
xchg
mov
pop
mov
lret
pop
pop
xor
xor
xchg
out
test
popf
push
loopne
jecxz
pusha
add
adc
xchg
aam
repz
add
mov
int
jne
lret
nop
push
mov
fsubrl
test
xor
bound
add
push
jecxz
scas
in
adcl
fisubl
rcr
test
lods
stos
sti
scas
jns
push
das
lahf
and
jle
enter
fwait
and
mov
sub
sub
pop
into
popf
sub
and
mov
sti
aaa
stos
out
jmp
popa
push
or
sbb
pop
mov
xor
mov
lcall
sbb
lods
lods
loop
loope
push
fldl
xchg
daa
fsubrs
push
stos
fs
mov
mov
adcl
imul
dec
mov
fcmove
imul
cli
stc
cmc
jb
cmc
or
fwait
jge
or
inc
push
sti
mov
pop
mov
rcrb
dec
jge,pt
mov
orl
add
pop
dec
out
push
insb
mov
ja
push
inc
push
repnz
pop
ds
fs
ss
jb
fildl
into
enter
cmp
xor
xchg
sbb
in
lods
xor
sti
out
mov
mov
add
jmp
pop
mov
clc
fsubrs
in
push
mov
lahf
loop
sahf
xor
push
frstor
cld
leave
dec
jne
xor
pop
jno
nop
ss
sti
jno
ret
iret
shrb
mov
mov
sub
shlb
cld
xchg
imul
test
loopne
sbb
ret
cmp
icebp
jp
insl
jp
jmp
sbb
lahf
jecxz
pop
rolb
hlt
loopne
mov
sub
pop
dec
cmp
mov
cwtl
sahf
jnp
dec
mov
leave
popf
ret
in
out
dec
in
adc
test
addl
xchg
cmpsb
sbb
lods
addr16
adc
lcall
mov
lods
pop
push
ficomps
inc
ds
popa
push
mov
mov
mov
dec
xor
dec
arpl
push
mov
mov
xchg
jl
loopne
xchg
lret
sub
adc
and
sub
xchg
into
and
xor
cmp
pop
outsl
mov
sarb
and
fmull
inc
sbb
push
test
addr16
sbb
jns
fmul
mov
pusha
adc
mov
rorl
or
in
mov
arpl
mov
add
xchg
mov
sbb
loopne
adc
pop
stos
insl
js
out
fimull
lcall
not
dec
test
mov
and
divb
mov
push
icebp
mov
push
gs
pop
and
imul
imul
mov
cld
jbe
jmp
fcomi
arpl
rol
adc
cld
in
adc
insl
pop
jl
aam
mulb
xor
mov
mov
popa
shll
clc
out
mov
and
push
push
test
xor
pop
in
xor
sbbb
insb
enter
mov
lret
or
loopne
dec
xchg
xor
jb
mov
incl
in
sbb
test
adc
xchg
sub
test
adc
sbb
inc
xor
sbbl
lock
sbb
aaa
or
shrb
test
mull
popa
mov
mov
ficomps
out
int3
or
lret
mov
lret
sbb
mov
stc
fwait
data16
jle
loope
int3
adc
into
mov
mov
and
lea
xchg
pushw
mov
xchg
xor
ror
add
cltd
int
jmp
in
or
add
cmp
or
and
cmpsb
push
clc
shlb
sub
mov
dec
xchg
es
call
sbb
cld
mov
inc
loop
xor
imul
xchg
out
cmp
lods
shrl
and
fmull
xchg
and
xchg
pop
mov
push
fistps
inc
arpl
inc
push
jbe
das
xchg
cmp
mov
dec
out
ja
cmp
push
push
aam
jge
stos
fldcw
cmp
sbb
lds
nop
sbb
mov
shrl
fdivp
pop
adc
cld
mov
ss
lcall
rcll
fisubs
mov
cmc
cmpsl
mov
jg
mov
aam
inc
pop
or
je
or
bound
repnz
xor
out
mov
int3
pop
test
test
clc
adc
dec
out
sub
mov
pop
and
je
stos
daa
sub
mov
push
mov
scas
ret
test
daa
fsubs
stos
pop
push
mov
xchg
push
xor
sbb
xchg
or
test
jne
jle
lock
js
lea
lret
test
add
addr16
adc
and
fwait
mov
lret
mov
adc
in
iret
es
and
fisttpll
dec
sbb
in
sub
movsl
mov
jmp
push
add
xor
xor
mov
xlat
inc
xor
imul
ds
jnp
push
push
sti
sbbb
dec
jo
push
sub
int3
shlb
mov
iret
les
jns
adc
rcrl
mov
sub
pop
shr
sbb
das
aaa
in
xor
in
testb
inc
popf
insl
cwtl
mov
or
add
mov
rcll
popf
cmpsl
cmpsb
xlat
outsl
imul
add
clc
xor
insb
sub
inc
ds
aaa
loopne
nop
ret
push
xchg
loope
dec
mov
push
sub
mov
rcl
jecxz
fimuls
addr16
pushf
vminpd
fwait
mov
sub
or
sbbb
lods
iret
mov
xchg
push
outsl
js
outsl
jns
cld
push
xchg
push
fucomip
sahf
jno
jle
stc
mov
pop
int
nop
add
adc
ljmp
add
lea
and
mov
movsl
mov
adc
push
ds
adc
inc
xchg
stos
ds
loope
xor
xor
pop
ja
push
aam
xchg
iret
test
fldt
clc
insl
cmp
xlat
dec
ret
mov
adc
js
sub
mov
add
push
pop
cs
in
push
data16
in
xor
xchg
leave
sahf
sbb
cli
std
ljmp
in
xchg
sbb
lcall
or
sbb
addr16
cmp
mov
cmp
sbbb
scas
das
stos
and
pusha
into
mov
and
aam
das
dec
jp
xor
scas
arpl
mov
mov
pop
add
or
cmpsb
mov
xchg
pop
inc
scas
shll
adc
les
mov
xor
imul
iret
mov
call
sub
cli
into
aam
adc
mov
xchg
fisttpll
adc
cmpsb
mov
mov
int3
ljmp
or
xchg
ljmp
push
push
jl
fisttpl
xor
sub
adc
aam
stos
jno
in
movsb
mov
sub
lock
or
outsl
rolb
cmp
jg
dec
or
repnz
fs
jmp
stc
jbe
or
insl
cld
test
ss
add
bound
add
dec
int3
xchg
cli
or
test
test
push
iret
or
add
iret
lret
push
int
aad
push
shll
and
mov
add
nop
jo
popa
lret
xchg
data16
pop
push
outsb
daa
add
or
lds
add
pushf
jge
roll
jmp
push
push
pop
pop
sbb
pop
mov
dec
movsl
je
sub
or
cmc
out
ljmp
dec
sbbl
mov
out
aaa
ret
int
sub
gs
adc
gs
mov
pop
bound
cwtl
subl
dec
loopne
cld
inc
or
mov
add
fstl
cmp
int
push
push
or
mov
fsubrl
or
xchg
in
mov
imul
sbb
mov
dec
push
jle
rcl
or
push
mov
mov
lret
jbe
cli
enter
jbe
pop
test
test
inc
mov
jle
in
xchg
iret
mov
mov
xchg
adc
push
jno
push
sub
mov
inc
dec
test
sub
jns
pusha
mov
je
sbb
sarl
mov
movsb
dec
fisttpl
loop
lea
filds
in
clc
sub
jae
mov
push
jb
sub
jp
cmp
pop
sub
adc
into
adc
out
fnsave
ljmp
movsl
outsb
data16
mov
stos
pop
fidivrl
mov
adc
sub
cltd
jbe
pusha
push
scas
push
cmc
addr16
imul
mov
fistpl
dec
push
cmpsl
pop
jmp
xor
mov
mov
jbe
int
add
adc
xor
cmp
adc
jp
fsubs
daa
es
and
fcomi
in
push
xor
pop
mov
xor
adc
mov
sub
mov
mov
push
mov
imul
test
adc
adc
mov
sub
mov
rdmsr
jp
rdpmc
jp
xchg
lahf
xchg
push
adc
adc
jp
push
into
push
cmp
std
sbb
rclb
imul
and
int3
mov
into
pusha
push
push
mov
les
insl
ds
pop
jbe
add
jmp
into
dec
mov
lret
cmc
scas
popa
cmpsl
aas
lock
out
mov
xchg
dec
shll
jle
mov
pop
movsb
mov
jg
sub
scas
jle
adc
aad
lret
shrl
and
jb
shl
xchg
sahf
mov
mov
sbb
cwtl
mov
gs
call
mov
div
test
inc
inc
test
sbb
push
addr16
add
cmp
add
jb
in
cmp
fmull
cwtl
xor
mov
jle
lcall
gs
push
out
and
mov
icebp
dec
xchg
xorb
pop
es
insl
stc
and
jnp
cmp
and
sahf
negl
lcall
fwait
lock
push
cs
dec
push
cld
sub
mov
sti
sbb
or
ss
xor
mov
mov
lods
cmp
rclb
shl
mov
mov
sbb
pop
pop
aas
mov
dec
cmp
xor
jecxz
mov
sub
cmp
cmpsb
push
mov
popf
testb
dec
outsl
notb
push
orb
mov
and
xor
shll
dec
fidivl
push
sbb
in
cmpsb
mov
adc
push
push
ds
and
test
imull
add
rcll
cltd
adc
nop
inc
sti
in
andb
out
mov
xchg
psubsw
ds
outsb
std
xor
cmpsb
ja
mov
lcall
and
cmp
cli
arpl
fidivrl
inc
aam
out
and
inc
sub
daa
test
dec
mov
sub
out
sub
insl
or
pop
stc
lods
ret
mov
xor
inc
in
push
stos
mov
repnz
in
adc
fidivs
scas
lret
subl
mov
shll
leave
shrl
mov
or
sahf
imul
ja
or
sub
adcl
test
xchg
mov
push
out
jns
mov
imul
inc
iret
and
inc
movsb
lds
and
mov
int3
sbb
jne
movsb
mov
dec
inc
mov
data16
clc
daa
mov
mov
faddp
xor
xlat
xor
enter
daa
sbb
and
push
mov
cmp
mov
std
and
xchg
and
push
adc
or
test
cwtl
sbb
lcall
and
inc
adc
xchg
fdivrl
int
mov
sub
push
pop
rcrl
jmp
mov
outsb
scas
mov
jo
ss
mov
or
and
ret
or
scas
mov
lods
xor
fidivrs
fwait
dec
enter
leave
xlat
popa
adc
lods
xor
push
mov
sub
leave
xchg
cmp
or
cmpsb
mov
sub
push
mov
adc
or
nop
loope
stc
inc
cmp
adc
into
in
test
xchg
idivl
lea
jge
insl
pop
pop
pop
dec
ja
addr16
mov
cmpsl
in
xchg
fldl
lods
xlat
popf
lea
jge
insl
pop
pop
pop
dec
ja
addr16
mov
cmpsl
movsl
xchg
movsl
xchg
idivl
lea
movsl
daa
insl
pop
pop
push
dec
ja
addr16
mov
cmpsl
in
xchg
fldl
lods
push
sbb
fadd
mov
mov
shrb
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
push
push
pushl
call
push
mov
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
add
movsl
and
and
xorl
shll
inc
icebp
inc
add
xor
popa
aad
lds
xor
shll
add
pushf
inc
in
push
std
popa
int
filds
pusha
lahf
add
scas
add
int3
push
loope
push
add
push
cmp
dec
mov
mov
loop
dec
sahf
rcrl
mov
mov
lods
in
sbb
aad
push
xchg
mov
int
add
les
loopne
invd
stc
dec
lcall
mov
lahf
sub
test
pop
test
adc
inc
aad
and
andl
cli
aas
es
das
decb
or
aad
sbb
jo
xchg
mov
cmp
add
mov
xchg
rorl
iret
nop
add
out
cli
dec
shll
xor
hlt
adc
loope
cltd
push
pop
mov
mov
test
lahf
inc
cmc
push
in
int3
jno
subl
shll
push
icebp
and
js
inc
xchg
push
test
mov
xchg
pop
ret
push
sbb
sub
int
movsl
jno
push
addb
cmp
test
loopne
hlt
inc
movsb
pop
test
xchg
cmp
and
jne
dec
hlt
xor
inc
cltd
push
in
aad
lds
adc
shll
push
icebp
inc
add
xor
popa
aad
lds
adc
shll
push
icebp
inc
add
adc
insl
adc
gs
push
cwtl
div
sbb
test
push
cli
and
dec
add
pop
fmulp
aad
shlb
mov
es
add
jb
jo
mov
add
pop
fld
stc
mov
jnp
dec
xchg
aad
fmul
pop
adc
pop
aas
out
pop
adc
push
push
push
mov
dec
repnz
sbb
cmp
sahf
fucomip
push
xor
icebp
repz
and
xor
push
scas
push
mov
lcall
je
leave
stos
pushf
dec
pop
popa
gs
int3
xchg
push
sub
jl
push
iret
xor
clc
cmp
pop
dec
cwtl
inc
outsb
adc
mov
cmpsb
adc
jne
jo
add
adc
jg
mov
dec
or
cltd
outsb
in
es
in
push
roll
pop
add
adc
mov
and
mov
das
pusha
mov
mov
pop
fwait
inc
push
leave
loopne
adc
sahf
and
xor
sbb
add
sub
es
pop
jecxz
gs
mov
in
lea
push
mov
xchg
jbe
fcompl
jge
test
jmp
imul
loopne
lss
int
adc
jnp
sti
movsb
sbb
xchg
rolb
jo
cmp
pop
sub
inc
inc
lds
adc
fmul
sub
outsb
cwtl
or
lret
dec
jle
pop
inc
inc
sub
aaa
int
or
enter
icebp
imul
mulb
mov
xchg
andl
int
mov
dec
xor
mov
cltd
push
jl
iret
push
push
jns
jnp
mov
pop
repnz
lea
pop
andb
cltd
test
jmp
mov
pusha
test
cmp
loopne
cmp
jnp
nop
stos
xchg
inc
fisubrs
jbe,pt
cmovp
push
mov
ret
int3
xchg
adc
imul
sub
jnp
pusha
daa
ja
inc
jnp
inc
fiadds
insl
cmp
and
lcall
mov
es
in
add
lea
push
inc
push
dec
cmp
push
popa
enter
jb
repz
jnp
ftst
lods
gs
jb
pop
jge
mov
call
or
push
pop
push
sub
subl
mov
mov
lret
jp
inc
sahf
push
add
inc
sub
jle
pushf
daa
or
lahf
dec
pop
cmc
jle
scas
xor
push
not
testl
dec
shrb
dec
dec
out
icebp
add
call
lods
dec
mov
js
mov
ret
push
inc
push
mov
mov
iret
adc
sti
subl
push
cld
pop
xchg
dec
dec
xchg
or
insl
stos
fwait
jne
outsl
push
dec
xor
dec
das
enter
ret
ja
lahf
addl
arpl
or
int
fwait
jmp
call
sbb
inc
jnp
jecxz
lods
xchg
adc
jo
andl
dec
sbb
loope
movsb
ja
or
sub
pop
mov
or
mov
pop
sti
mov
jbe
or
inc
pop
push
jnp
dec
cmc
or
das
xor
mov
inc
aam
dec
je
pop
mov
jae
sti
and
mov
pop
cltd
adc
inc
fwait
cmp
fbstp
mov
xor
pop
sub
inc
mov
ret
lret
xchg
jecxz
stos
cwtl
idivl
cwtl
rorl
adc
pop
out
push
ret
jbe
jmp
fdivs
dec
cmpsb
repnz
shlb
or
jns
js
popa
mov
xchg
push
xor
in
or
sbb
fs
and
or
inc
fcomps
mov
sub
adc
gs
in
pop
out
pop
das
js
push
dec
inc
loopne
loopne
mov
into
jge
lret
gs
lcall
fxrstor
insl
push
and
cmc
add
loopne
pop
cmp
test
push
cmp
jo
xor
pop
xorb
and
mov
js
in
push
sbb
xchg
jl
or
cltd
xchg
inc
and
push
mov
adc
mov
and
pop
mov
fidivrl
je
cmp
das
or
das
data16
cmp
add
rcll
push
rcrl
push
lahf
mov
hlt
addl
jle
jns
or
movsb
xlat
xor
pushl
cld
mov
sbb
rorl
mov
cmp
in
stc
add
jnp
mov
xchg
push
in
sub
mov
sahf
lahf
sub
jmp
adcl
cmp
stos
sub
mov
xchg
inc
jns
iret
fwait
and
in
insb
or
test
lods
insl
shrb
jg
scas
cmp
jnp
adc
je
jb
add
pop
cmp
scas
fucom
aas
inc
dec
dec
or
subb
inc
cmp
outsl
xchg
xbegin
xchg
mov
cwtl
cmc
roll
push
or
or
mov
or
push
inc
pusha
decl
pop
out
fs
push
cmp
aam
fildll
dec
popl
mulb
cwtl
repz
int
push
es
pop
lock
push
pop
movsl
mov
pop
mov
and
fs
cmc
pop
out
cmp
cli
les
aad
sub
iret
sbb
dec
and
es
mov
cmp
pop
pop
or
repnz
add
jle
pop
repnz
add
mov
mov
fdivrl
adcl
or
outsl
push
leave
push
dec
sub
dec
jge
in
push
bound
or
mov
aam
jl
push
xor
dec
shll
stos
pop
add
stos
cmp
fisubrl
adc
inc
cmp
paddsb
mov
xor
dec
inc
lods
xor
lret
les
adc
ss
imul
cmc
in
dec
mov
lahf
and
dec
jecxz
mov
pop
mov
sbb
xor
jg
aad
dec
stos
lahf
jl
jns
sar
fcom
push
jmp
push
pop
fldt
mov
test
lods
test
pop
push
cmp
jmp
es
aad
rolb
rol
push
cld
or
dec
add
xchg
jg
icebp
lret
mov
cltd
mov
xor
xor
mull
and
mov
sub
jg
mov
das
loope
imul
add
leave
repz
and
outsl
mov
mov
xchg
mov
in
ss
mov
js
and
pop
jmp
inc
daa
inc
bound
mov
jmp
inc
sahf
push
and
xlat
cmc
or
mov
ret
jmp
push
sub
into
mov
lods
xlat
mov
sbb
sti
popf
in
adc
xchg
and
call
xor
test
push
popa
sbb
jno
ss
and
in
xchg
into
cmp
add
call
xchg
outsl
lods
and
fnstsw
enter
lea
test
adc
cs
mov
outsb
inc
out
lcall
xchg
jb
jbe
fdivl
xlat
mov
rcl
push
jmp
inc
stos
sarl
inc
pop
sub
decl
mov
or
push
jmp
in
fisttpll
push
push
je
mov
das
ljmp
cmpsb
insl
test
inc
iret
sub
jno
jo
xor
xor
add
pop
mov
clc
xchg
mov
test
leave
add
out
ds
int
cmp
push
pop
push
std
inc
inc
scas
jg
jno
sahf
push
clc
add
pop
insb
jns
cmp
out
mov
mov
push
inc
push
mov
adc
fcmovne
cmp
inc
cld
jae
orb
inc
out
cmc
outsl
scas
shrl
jmp
icebp
aaa
sbb
push
jg
or
dec
xlat
lret
in
out
loope
aam
push
mov
addr16
jbe
cmc
dec
sahf
mov
xlat
test
sub
push
frstor
cmpsl
inc
or
pop
roll
inc
jg
fdivr
or
mov
push
mov
enter
subl
out
xor
sti
jg
push
add
les
fldcw
jp
lea
loope
negl
insl
push
sub
rcll
sbbb
sahf
push
je
pop
bound
bound
xchg
sbbl
cwtl
sti
mov
mov
push
jo
cmp
and
or
and
pop
adc
in
pop
test
mov
jo
popf
cmp
insl
mov
subb
js
jp
cmp
sti
not
push
xor
adc
mov
iret
pop
inc
fisubrl
cltd
push
add
lret
int3
xchg
out
insb
push
xchg
mov
mov
adc
mov
stc
push
mov
mov
movsl
inc
jns
cmp
mov
adc
aas
repnz
sbb
sbb
test
roll
je
inc
lods
pop
push
pop
jae
jg
xor
aad
push
push
test
jne
jle
adc
xchg
loopne
sub
loope
loopne
sti
popa
repnz
lds
lret
outsb
mov
imul
jns
movsb
cmp
ss
popf
fisubrl
repnz
mov
call
sub
fpatan
xchg
jmp
pusha
push
xchg
cld
stos
dec
xor
inc
adc
out
jle
ja
xlat
add
cltd
mov
ljmp
loope
push
mov
adc
scas
mov
ficomps
aam
mov
xchg
cwtl
and
fldcw
xor
pop
jns
aaa
mov
xor
daa
stc
notl
jo
mov
or
or
inc
or
inc
in
mov
jbe,pt
iret
xchg
les
fs
mov
lret
sub
cld
cmc
inc
and
add
stc
adc
xchg
push
push
xor
pop
add
shll
mov
scas
xor
fcompl
aas
sbb
insl
sub
aad
js
lret
jmp
jecxz
inc
shr
scas
lea
idivl
pop
xlat
adcl
sbb
rcrl
add
iret
cmp
sub
rcl
cmp
imul
mov
fsts
or
clc
pusha
cmpl
pop
nop
aam
pop
popf
push
jecxz
mov
sbb
sahf
or
cmc
stos
mov
xchg
jmp
icebp
sbb
jbe
or
lock
lret
inc
sbb
fucomp
dec
or
dec
xchg
popa
stc
jo
adc
fucomi
add
jl
loop
in
ret
mov
movsb
rclb
xchg
test
mov
ds
enter
arpl
lods
cltd
pop
inc
mov
xchg
shrl
cmpl
jmp
aam
je
mov
lock
icebp
dec
sti
loop
mov
dec
pop
ljmp
xchg
push
rclb
fisubl
out
mov
xchg
pop
in
or
int
lea
push
add
cmc
int3
rcrb
xchg
sbb
bound
jg
mov
push
xchg
adc
fnstcw
xchg
mov
imull
lods
movsl
aaa
fdivrs
cmp
sbb
push
jnp
dec
movsl
or
es
pop
das
jg
mov
push
fadd
sahf
push
in
into
arpl
enter
sbb
mov
adc
je
xor
push
pushf
push
insl
imul
sbb
movsb
fnsave
sbbb
dec
iret
push
shl
jns
pushf
stc
add
out
lret
jmp
dec
fdivs
stos
jb
mul
movsl
sub
mov
sbb
sti
mov
std
maxps
sub
add
aam
das
adc
push
rorb
xchg
mov
je
or
or
sub
adc
inc
loopne
and
movsb
and
push
test
xchg
pusha
pop
cs
pop
in
and
add
pushf
mov
adc
inc
cmp
lret
push
dec
mov
push
jp
xor
push
popa
push
mov
out
jge
xor
jp
mov
aas
in
add
sub
lahf
sub
push
inc
dec
mov
daa
jg
lock
push
orl
testb
std
adc
sub
mov
adc
into
and
dec
inc
sub
in
jle
stos
inc
push
aam
mov
mov
mov
and
inc
sub
cmp
out
orb
out
int
jo
les
js
fldenv
sub
xlat
aaa
iret
xchg
sahf
mov
aad
testl
sub
jge
xchg
dec
adc
std
xor
inc
movlps
cmpsb
pushf
jmp
scas
or
les
aas
es
add
and
jbe
push
pop
fsubrl
js,pn
and
arpl
rclb
lret
sysenter
or
cmp
ss
mov
and
adc
in
loope
push
jbe
lds
push
icebp
cwtl
mov
push
add
push
test
mov
call
pop
roll
sub
inc
leave
les
loopne
cmp
andl
jo
and
pop
push
jae
xor
sbb
iret
push
icebp
dec
sahf
jo
scas
scas
lods
in
sub
test
inc
stos
adc
xor
jecxz
adc
cmp
outsb
push
test
fsubs
push
in
int3
dec
sbb
add
out
roll
ret
lods
js
mov
jge
push
add
jo
in
in
xlat
hlt
js
fcmovnb
lret
leave
inc
fcmovnbe
test
mov
fnsave
int3
push
and
or
jnp
sbb
data16
xor
mov
add
xor
loope
orb
inc
aam
xor
in
adc
aas
imul
xchg
fstpt
jp
and
push
dec
xor
adc
comiss
jns
lahf
faddp
dec
ret
sti
mov
fcomps
mov
xchg
sub
and
lods
ljmp
pusha
icebp
push
lahf
sub
push
inc
int3
jp
or
sub
mov
mov
or
shll
fldcw
ja
add
lcall
pop
pop
push
iret
xchg
and
dec
idivl
arpl
pop
shll
mov
jp
loopne
js
ror
into
lret
aad
ja
loop
scas
mov
insl
xor
mov
ret
pop
loop
dec
lcall
adc
sarl
xor
in
mov
dec
dec
mov
sbb
test
cs
into
inc
mov
stos
or
and
ljmp
mov
inc
jmp
in
and
sub
out
jne
cmp
jb
jge
in
lret
sub
push
mov
fwait
mov
ss
ror
jl
add
out
mov
enter
mov
dec
pop
out
outsb
and
clc
push
xchg
hlt
adc
aas
jle
lret
xchg
and
add
pop
mov
and
sbb
sbb
push
fisubs
mov
inc
push
cmpsb
cmp
xor
dec
dec
sub
sub
loop
sti
jns
xchg
or
or
sarb
sti
and
les
adc
xchg
pop
mov
cwtl
cmp
jnp
filds
cld
scas
lods
dec
jecxz
or
push
jg
adc
add
sahf
arpl
xlat
dec
sub
movsb
stos
add
outsb
stos
repnz
fldcw
fsubr
data16
or
fsubrs
aaa
jmp
popa
outsl
push
or
std
hlt
mov
stos
sub
outsb
pop
jecxz
or
lret
cmp
int3
or
dec
popf
fsub
sbb
push
rolb
mov
mov
sbb
ds
pop
pop
rolb
fisttpll
rorb
paddsb
sbb
pusha
xchg
test
cmpsl
push
and
ss
fs
ret
pop
icebp
mov
outsb
pushf
sti
aam
inc
mov
adc
mov
pop
inc
data16
mov
sbb
aas
stos
push
fs
popf
xrelease
ja
xchg
cmp
outsb
or
movsl
out
fcmovbe
sub
xchg
sub
int
insb
and
or
cmp
cmp
fwait
push
insl
jne
push
fnsave
lods
sub
jae
pop
fs
pusha
pop
pushf
xchg
mov
pop
xor
in
dec
in
jmp
ja
mov
lods
sti
sbb
mov
inc
cmp
and
sbb
lea
notb
mov
xor
enter
add
inc
mov
cmc
xor
mov
pop
mov
ds
in
ljmp
mov
psraw
jl
imul
outsb
lret
mov
sbb
loope
enter
test
inc
jo
inc
or
out
loope
mov
in
shl
aad
addr16
mull
jecxz
test
lret
ret
cmp
mov
inc
das
je
push
sub
inc
jae
mov
inc
sbbb
xlat
dec
or
movsb
jns
or
int
outsb
jbe
pop
push
scas
iret
ja
ret
inc
int
sbb
xchg
stos
jl
sti
sti
ss
ds
ret
inc
add
inc
imul
test
aas
dec
pushf
mov
mov
leave
iret
daa
sahf
lock
stos
jne
push
mov
icebp
push
inc
bound
stos
repz
mov
dec
sbb
cmpl
repz
lahf
adc
lret
pop
add
or
inc
lret
inc
xchg
sub
push
out
jecxz
pop
cmpsb
mov
and
sbbl
leave
add
jns
jl
push
testl
mov
xor
cmpsl
xor
lcall
xchg
test
jo
xchg
push
out
jmp
push
lcall
adc
lretw
scas
pusha
shrb
imul
psubq
sahf
push
fsts
movsb
cmp
mov
adc
sub
rorl
push
cmpsb
or
sbb
ds
add
xchg
lahf
xor
mov
fsubs
or
dec
lea
vsqrtss
dec
iret
mov
inc
mov
iret
mov
icebp
jle
testb
pop
loop
mov
xor
xchg
notb
imul
sbb
pop
in
mov
fldcw
icebp
xor
cmp
arpl
and
mov
arpl
movsb
clc
or
xor
fcoml
repz
mov
mov
lret
jo
sub
pusha
or
test
std
add
and
jb
xor
rcrb
sbb
sbb
or
shrl
int
cmpsl
cmc
push
adc
jg
mov
or
mov
icebp
setl
inc
mov
ljmp
inc
fnstsw
dec
ljmp
cld
mov
jb
cli
js
jne
jnp
and
pmuludq
and
cli
jge
inc
sti
inc
es
jle
ret
nop
fstps
adc
xor
pop
pop
cmp
mov
loop
mov
dec
push
insb
dec
pop
mov
rorl
sbb
fsubr
and
je
push
push
and
mov
movsl
sahf
imul
adc
leave
leave
jg
mov
shll
jns
jno
mov
rorl
and
lods
hlt
jle
movsl
mov
shll
xchg
idivb
cmp
cld
push
mov
sbb
insl
popa
gs
shl
popf
lret
gs
je
mov
mov
roll
rorl
mov
mov
or
add
arpl
mov
int
icebp
mov
in
xor
movb
pushl
mov
dec
es
lea
dec
jnp
mov
mov
dec
and
dec
mov
mov
insl
scas
dec
and
out
pusha
mov
and
mov
and
fs
cld
jp
push
mov
stc
pop
loope
icebp
call
sarb
jmp
add
pop
lcall
push
mov
iret
adc
xchg
mov
push
in
lcall
mov
loopne
mov
xchg
xchg
cld
std
dec
or
mov
call
and
sub
xor
rorl
pushf
adc
sub
mov
adc
fisubrs
dec
cs
adc
jno
sarl
fwait
fwait
sar
mov
or
mov
push
call
mov
sub
sub
sahf
stc
jnp
mov
popf
adc
mov
inc
je
or
leave
sahf
lahf
sbb
ret
mov
or
pop
fucomp
sbb
adc
lock
in
inc
pop
inc
std
adc
ret
int3
sbb
and
xchg
mov
dec
sahf
push
outsl
adc
pop
mov
xor
add
fdivl
imul
sbb
std
push
jle
dec
fs
inc
dec
and
sbb
vpminuw
sbb
inc
andb
ds
pop
mov
ffree
sbb
dec
les
fsubrs
orl
mov
and
inc
jle
outsl
dec
leave
cmpl
loopne
fimull
inc
ret
shll
sahf
shr
sub
repz
ljmp
daa
inc
dec
and
adc
je
mov
pop
arpl
jl
adc
lahf
dec
cltd
xor
lcall
or
push
sub
iret
or
xchg
movsl
jns
xor
popa
aad
lds
adc
shll
push
icebp
inc
add
xor
popa
aad
lds
adc
shll
push
icebp
inc
add
xor
popa
aad
lds
adc
shll
push
icebp
inc
add
xor
popa
aad
lds
adc
pop
lcall
jge
dec
xor
cltd
push
push
arpl
adc
sub
frstor
popf
jecxz
jecxz
adc
dec
xor
sub
jae
push
std
xchg
std
or
shll
repz
jecxz
adc
xor
xor
and
arpl
xchg
fisubs
lods
xchg
rcrb
add
adc
pusha
sub
jmp
fisubl
adc
jg
call
mov
daa
in
adc
scas
pop
inc
cmp
jmp
xor
std
ret
lods
cwtl
lea
mov
add
in
push
mov
mov
cmc
mov
pop
lods
sub
decl
sahf
insl
push
test
jns
rclb
inc
bnd
andl
jl
jne
es
ret
mov
jecxz
shl
cld
ror
cs
and
arpl
insb
cmp
push
cmpb
test
adc
rcrb
enter
ljmp
lea
out
xchg
repz
sbb
adc
xor
cmp
inc
or
xchg
in
aad
les
xchg
repz
movsl
add
sbb
jb
bound
pop
aaa
inc
push
sbb
lcall
fadds
jg
outsl
and
inc
inc
adc
dec
scas
negb
icebp
lods
mov
push
sti
xchg
stc
mov
push
adc
push
xor
inc
or
xchg
std
or
frstor
repz
jecxz
adc
dec
xor
sub
jae
arpl
xchg
std
or
frstor
repz
jecxz
adc
repnz
cs
cmpsb
cmp
cs
ret
xchg
fstps
xchg
pop
pop
test
push
xlat
aad
aad
push
adc
and
xor
scas
sbbb
or
aas
mov
arpl
cmp
mov
out
xor
clc
in
mov
lret
add
in
ljmp
repnz
sahf
notb
imul
jns
jno
into
cltd
inc
jmp
insb
sbb
enter
jo
mov
sahf
adc
fsubl
mov
mov
aad
cmp
push
lcall
jg
lcall
aam
movsb
xchg
push
adc
mov
push
adc
jb
fucomp
call
insb
scas
daa
add
int3
aad
dec
popf
mov
jle
mov
fnsave
xchg
xchg
xor
int3
cmc
sbb
aaa
sahf
out
push
adc
push
lret
cmc
sbb
dec
sbb
arpl
mov
popa
outsl
aad
push
and
lret
xchg
test
push
gs
pop
outsb
fstpt
ret
ss
sub
lret
shl
xor
stos
sub
xchg
hlt
out
into
in
xchg
pushf
in
sub
rcll
xor
mov
xchg
cmp
es
cli
adc
shll
ss
push
call
push
push
imul
dec
bound
push
xchg
popa
push
mov
sbb
sbb
jbe
in
and
sbb
adc
jg
jecxz
adc
stos
mov
dec
push
add
stc
mov
cmpsb
cs
xchg
jg
in
inc
movsb
movsb
out
lods
pop
mov
pop
rcll
mov
mov
push
enter
push
mov
adc
mov
ret
cmpsb
cmp
scas
out
lret
hlt
mov
sbb
dec
add
xchg
sub
cmpsl
pop
stos
or
push
or
adc
push
pop
cld
push
sbbl
js
shlb
ljmp
mov
in
push
push
pop
pop
xor
adc
out
push
daa
inc
or
cmp
push
cmp
push
push
sub
ret
cmpl
js
cltd
mov
inc
sti
scas
dec
inc
and
shll
in
mov
lods
mov
insl
xchg
loopne
adc
xorl
or
jmp
or
stos
imul
out
mov
add
xchg
ret
outsl
loope
jmp
adc
add
pop
repz
mov
rcl
push
in
inc
int
sti
nop
mov
in
push
mov
or
cmp
lods
xchg
lret
fisubrs
sub
addl
shll
sub
orb
dec
aaa
and
adc
or
xorl
mov
dec
jne
ret
jno
notl
orl
push
xor
js
rcr
xor
scas
sar
xchg
lods
sub
aas
repz
cmc
pushl
inc
jg
push
inc
fwait
push
test
aas
hlt
pop
jge
jg
or
pop
add
rolb
gs
xor
es
or
mov
push
repz
ret
hlt
loop
icebp
jmp
inc
xor
cmp
lods
mov
jecxz
dec
sti
sbb
cmp
lahf
fdivs
push
cmp
iret
cmpsl
stos
jbe
shl
lahf
fabs
ss
and
mov
dec
adcb
mov
pop
daa
ffree
fwait
sub
inc
or
and
xchg
sub
clc
xor
insb
add
nop
pop
ret
mov
lods
aad
cmp
mov
adc
mov
mov
mov
sub
and
sarb
jno
xor
sub
pop
outsb
fdivrl
dec
push
mov
scas
push
mov
std
sbb
call
test
into
dec
cmpl
xor
das
push
inc
ficompl
xchg
xchg
push
mov
aas
dec
adc
fidivrl
mov
adc
push
out
arpl
imul
fcmovbe
and
and
test
les
inc
cmc
lods
or
lock
fs
das
mov
mov
dec
cmp
inc
decb
insl
pop
stc
test
and
repz
fnstenv
scas
jo
mov
les
mov
inc
sub
ja
out
sub
jecxz
add
push
jae
dec
pop
in
xchg
ja
jns
push
les
jnp
cmc
xchg
cmp
ljmp
outsl
rcrb
das
repz
jae
add
ljmp
cli
es
cwtl
addr16
push
into
dec
dec
fcom
jmp
rep
push
das
stc
stc
push
add
xchg
inc
bnd
xor
out
mov
inc
push
out
cmp
lret
lahf
xor
test
gs
and
jo
iret
iret
pop
rolb
in
mov
movsl
xor
fstps
aam
lret
mov
cmpsl
aas
or
jbe
cli
daa
adc
cmpsb
jae
lcall
je
inc
imul
clc
dec
jne
push
or
fbld
dec
lcall
jge
aam
mov
add
xchg
add
popa
sub
sub
or
cmpsb
pop
loop
pop
sbb
arpl
fs
adc
jl
stc
gs
mov
xchg
push
jmp
mov
lods
cmp
add
push
dec
sti
fs
pop
mulb
inc
mov
test
sub
test
inc
ljmp
cltd
pushf
mov
js
and
imul
mov
jl
xor
test
or
inc
cwtl
inc
jmp
sarl
add
je
or
shlb
dec
clc
pop
mov
fsubrp
ficomps
inc
push
cltd
jge
sti
mov
cld
push
orb
lret
xchg
repnz
stos
mov
cmp
xor
cmpsl
fs
or
sub
in
aas
xor
and
aaa
lods
punpcklwd
cmp
ficomps
inc
xchg
cmp
sbb
jnp
xor
movsl
or
scas
dec
popa
ja
rclb
lds
enter
xor
in
cld
xchg
popa
cs
test
push
sub
mov
cli
push
ja
arpl
jle
fs
jae
call
ds
sub
inc
aaa
adc
jp
mov
std
cmp
bound
aad
je
sbb
xor
mov
push
and
clc
mov
daa
shll
pop
das
aam
loop
mov
jge
mov
stos
sbb
mov
fwait
repnz
mov
jb
jne
pop
mov
xchg
pop
jae
sub
dec
dec
mov
adc
inc
xchg
dec
clc
aad
fidivrl
movsb
int
lahf
pop
lock
mov
aaa
pop
lds
push
mov
pop
dec
dec
ret
iret
lahf
jns
lret
mov
add
out
xor
stos
dec
jnp
rolb
mov
adcl
popf
mov
xor
mov
or
pop
ret
test
and
dec
shr
repnz
fwait
push
jo
loopne
jne
test
js
mov
xlat
hlt
packuswb
scas
mov
jbe
mov
and
icebp
fimull
insb
cmc
cmp
sbb
ror
inc
jno
cmp
movsb
jecxz
scas
and
adc
imul
mov
xlat
mov
fs
fs
lcall
icebp
fdivr
lret
gs
lock
out
and
bswap
inc
hlt
test
jo
cmc
mov
out
sub
and
mulb
inc
sub
incb
popa
add
fs
out
movl
insb
data16
fdivrl
out
jbe
cli
xchg
arpl
push
adc
xor
lods
push
xor
aaa
push
mov
mov
repnz
inc
xchg
mov
jmp
int
pushf
pop
pop
lret
jle
ja
cli
pop
add
aad
jb
std
xchg
testl
loop
sub
jecxz
mov
dec
fsubl
out
jmp
loop
ja
push
in
sub
lcall
ret
ficoms
test
mov
jle
out
jge
xchg
inc
mov
into
dec
repz
push
aad
push
and
xor
and
mov
scas
pop
mov
shl
push
or
sti
addr16
sub
leave
pop
bound
sbb
push
cmc
inc
jns
loope
or
fdivs
and
xor
mov
push
std
scas
out
cmp
xor
icebp
cs
sbb
mov
mov
push
xchg
call
push
shlb
je
subb
push
sbb
mov
icebp
mov
dec
sti
ja,pn
pop
pause
lea
jbe
cld
push
sti
sbb
sbb
pop
jae
jmp
insb
adc
movsl
fcmovnu
aam
or
dec
pop
or
push
and
mov
in
or
je
jnp
mov
cmpsb
push
sahf
aad
push
xchg
arpl
fbld
popf
mov
xchg
mov
or
outsb
fldt
pop
cmp
mov
movsb
in
movsl
nop
ret
negl
fldt
fmul
cltd
test
cld
push
jo
mov
cmc
jp
loope
push
mov
into
jecxz
mov
jne
adc
sti
popf
mov
xchg
sbb
pop
adc
jmp
dec
add
flds
loopne
mov
pop
dec
clc
adc
pop
es
pop
push
jno
pop
push
xchg
aam
dec
xchg
cmp
jne
jmp
sbb
lea
out
dec
adc
out
inc
jb
inc
adc
cli
mov
mov
vmread
movsl
out
js
sbb
sbb
add
mov
mov
xchg
jecxz
lock
fsubrl
mov
and
dec
or
js
push
lcall
pop
mov
sbb
sub
inc
in
loopne
jl
cli
push
push
outsl
ss
xchg
imul
mov
fwait
test
data16
and
pop
cmp
xor
mov
mov
insl
out
out
stc
mov
add
or
rcpps
cbtw
push
clc
cmp
bound
jmp
push
add
loop
repz
jge
mov
js
sbb
icebp
insl
js
dec
bswap
jbe
int
inc
xor
fisubs
adc
push
rcrl
and
mov
mov
scas
mov
test
jl
mov
out
and
dec
sbb
mov
fnsave
cmp
pop
xchg
ja
xchg
adc
sbb
mov
fbld
fs
movsb
and
add
push
xchg
adc
add
test
and
adc
lret
jp
rol
push
js
and
inc
imul
sahf
add
icebp
inc
rcl
cmp
movsl
ret
sbb
pop
add
sub
or
icebp
sub
push
repnz
in
lret
and
mov
inc
push
sub
dec
adc
lods
lods
mov
scas
mov
lcall
mov
cmp
xor
add
mov
movsl
je
cmp
push
mov
lret
fnstenv
sbb
sub
loop
repnz
bound
hlt
mov
mov
jnp
xchg
lcall
es
lret
xchg
xchg
jg
pop
fbld
stos
add
lret
jle
mov
pop
sub
add
enter
mov
call
int
mov
jecxz
mov
and
std
in
iret
test
outsb
mov
and
sbb
xchg
xor
jmp
jg
call
lret
lods
sub
xchg
lret
dec
in
dec
xor
mov
cmp
adc
notb
xchg
cmp
sbb
sub
into
mov
out
rcl
push
push
jecxz
mov
or
imulb
mov
lcall
push
cmpsb
mov
lea
mov
mov
jmp
fiadds
or
pop
fisttps
cmpsl
andl
jp
in
rcr
mov
xor
inc
shll
push
or
jne
inc
jbe
sbb
lcall
shlb
add
inc
jmp
in
movb
and
cmpsl
in
packsswb
xchg
jmp
push
xor
stos
pop
sub
out
xor
jl
movsb
adc
enter
lahf
sub
imul
test
setns
dec
xor
fwait
aaa
jecxz
aas
xchg
in
ret
addr16
mov
push
out
in
adc
jmp
popa
jae
mov
pop
dec
sub
rorb
push
enter
enter
jb
push
das
int3
lock
bound
push
cmp
jmp
jnp
cltd
pop
enter
pop
popf
dec
lret
insl
nop
inc
mov
inc
cmpsb
loope
mov
enter
insb
xchg
aas
pop
sbb
mov
mov
dec
sub
daa
pushf
imul
xchg
stos
in
dec
push
iret
pop
push
mov
sub
scas
xchg
inc
inc
std
or
mov
ljmp
cwtl
ss
mov
arpl
icebp
mov
mov
xchg
sub
inc
popf
in
pop
cmp
add
movsb
in
mov
in
insl
lds
pop
jns
mov
cmp
push
mov
iret
test
mov
stc
cli
jae
repz
cs
xor
stos
mov
dec
pop
or
jne
aas
icebp
xor
cwtl
filds
sub
xor
xchg
and
mov
repz
add
daa
push
pop
addr16
lcall
sub
jecxz
cwtl
pusha
fidivl
in
jae
leave
mov
and
mov
push
dec
xchg
les
push
imul
fcomps
js
sar
jns
add
lret
clc
scas
lods
mov
pop
pop
sti
pop
fwait
inc
sub
push
push
xchg
mov
shr
lods
pop
sbbl
mov
mov
adc
faddl
sbb
movsb
pop
call
fistl
jl
pop
leave
inc
jge
push
stc
test
addr16
pop
mov
mov
cmp
adc
xchg
or
loop
mov
sub
pusha
ja
nop
mov
cli
xchg
pop
dec
jbe
push
and
sub
out
scas
jno
xor
jmp
dec
stos
stos
mov
mov
xchg
negl
imul
adc
aad
gs
es
xor
divl
cmp
mov
test
imulb
cmp
lret
jge
inc
enter
fistpll
hlt
inc
dec
and
xor
aas
call
jae
addb
inc
shll
xlat
bound
lock
jp
sbb
inc
cmp
add
andl
nopl
jns
lods
cli
in
mov
outsb
jp
in
stos
iret
pusha
inc
lock
mov
jo
xor
xchg
jbe
mov
mov
das
lahf
xor
pusha
inc
int3
aaa
aad
data16
xor
loop
test
sbb
stos
ss
push
pop
data16
or
pop
popa
xchg
lahf
ss
mov
rorb
test
push
inc
mov
pop
cltd
lods
mov
mov
nop
pushf
sbb
addr16
imul
pop
jmp
mov
fwait
or
jns
stc
pop
cwtl
lcall
cmp
ror
imul
stos
imul
mov
mov
lods
mulb
dec
cld
xor
inc
xor
or
outsb
ret
mov
pop
aad
pop
pop
mov
shlb
fistpll
test
adc
fs
or
stc
repnz
xchg
inc
mov
cmp
clc
sub
movsl
iret
fmuls
mov
adc
sub
or
gs
jge
xchg
fisubs
xchg
ja
add
arpl
out
jmp
hlt
push
pop
test
ja
popf
mov
lret
dec
imul
jg
test
dec
jno
dec
test
enter
pop
lods
jnp
jno
jle
push
cs
into
inc
imul
push
adc
repz
sbbb
xor
testb
xlat
pop
cmp
mov
xlat
cwtl
fwait
in
or
sub
add
push
scas
inc
dec
stos
mov
pushf
sbb
sub
mov
mov
xchg
pusha
cmp
mov
stos
mov
or
sub
mov
stos
int
cmp
std
cmp
fwait
cmp
icebp
sbb
jg,pn
xchg
jl
fcmovu
ss
cmp
insb
fucom
rclb
enter
add
inc
xchg
add
xor
xchg
mov
or
lret
test
adc
inc
cwtl
dec
pushf
xchg
orl
or
ret
int3
push
add
xchg
dec
jge
cmpsb
cmp
cld
in
outsl
xchg
mov
imul
xchg
push
out
adc
sub
mov
insb
sub
pop
push
in
sbb
xchg
inc
push
adc
leave
pop
lret
dec
pop
je
mov
pop
xor
lahf
outsb
les
xor
push
int3
inc
andb
mov
push
xor
cwtl
mov
je
int
out
push
add
clc
push
shll
jb
insl
push
repnz
mov
sarb
ret
popa
pop
xor
sti
movsl
adc
jmp
xlat
xchg
adc
jno
cltd
loop
dec
jb
jl
push
dec
sbb
jge
stos
out
cwtl
and
add
cmp
mov
fs
sbb
repz
pop
loopne
adc
inc
adc
xlat
mov
je
sahf
in
call
sub
sub
sahf
or
lahf
lods
out
fisttps
or
sbbb
lahf
lea
mov
lock
pop
into
or
pop
mov
or
xchg
clc
sbb
or
pop
repz
inc
fdivrs
cltd
xchg
bound
fistpll
jp
pop
add
es
sub
push
sub
scas
mov
cmc
mov
or
mov
add
jg
adc
adc
shlb
loope
push
xchg
cmp
in
aaa
push
or
popa
add
sbb
mov
aam
lods
jle
aaa
test
or
fldt
aad
test
lahf
dec
push
popa
cmp
mov
inc
pop
in
xchg
addl
shrb
lcall
sti
push
adc
test
mov
jns
nop
loopne
pusha
adcb
cs
push
xor
aam
mov
cmpsb
sbb
push
pop
pop
cmp
inc
pop
jmp
adc
jg
xchg
ss
and
fisttps
mov
das
add
pushw
sbb
xchg
push
andl
sbb
test
mov
std
cltd
punpckhwd
mov
notb
adc
mov
and
lahf
leave
inc
jae
xchg
sti
popf
aaa
test
shll
dec
icebp
pop
mov
pop
mov
or
pop
adc
mov
fnsave
xchg
cmp
lock
mov
nop
sarl
mov
shrl
mov
mov
add
lahf
adc
push
pop
dec
pop
mov
int3
mov
mov
fisubl
cs
push
insl
insb
cmpsb
in
ja
xor
push
bound
jbe
int
bound
jl
mov
lods
jecxz
test
je
stos
aam
lcall
inc
dec
dec
mov
push
push
fs
add
jnp
add
jb
inc
and
cmp
out
cmc
arpl
pop
push
sbb
xchg
push
dec
in
mov
mov
xchg
xchg
shrl
out
jle
stos
dec
cmp
or
sbb
ja
rorl
and
sub
adc
push
insl
and
mov
fbstp
adc
into
loope
sub
js
push
lock
insl
or
aas
mov
rolb
and
mov
jne
arpl
mov
clc
cwtl
mov
and
aas
shl
fwait
xchg
cwtl
xor
jb
and
aad
mov
xchg
repnz
pop
mov
fdivs
popa
or
or
loope
je
and
sub
lret
roll
adc
push
lea
cltd
sbb
jnp
lcall
adc
mov
sbb
inc
fcomps
lret
and
adc
inc
aad
mov
sbb
mov
cs
add
pop
cmp
pushf
bound
sub
std
adc
mov
sarb
ret
cmp
clc
add
push
cmp
movb
ljmp
mov
stos
mov
dec
clc
mov
xor
fidivrs
jo
push
jmp
out
lret
inc
aas
mov
xor
ss
pop
mov
outsl
aaa
xchg
fs
jbe
div
sub
imul
ror
adc
mov
pop
imul
lcall
xchg
xchg
inc
jmp
push
ja
adc
adc
bound
dec
and
xchg
pop
adc
cwtl
in
mov
mov
adc
or
popa
loope
stos
jnp
sbb
lret
adc
bound
fstpt
ret
xor
mov
stos
mov
add
dec
adc
or
pop
dec
adc
cmp
mov
cmp
sub
in
mov
xchg
sub
cld
scas
push
mov
aam
loopne
mov
pop
into
cmpl
ffree
shll
and
jae
arpl
xchg
std
or
frstor
repz
jecxz
adc
dec
xor
sub
jae
arpl
xchg
std
or
frstor
repz
jecxz
adc
dec
xor
sub
jae
arpl
xchg
std
or
frstor
repz
jecxz
adc
dec
xor
das
push
cmp
mov
addr16
aam
pop
xor
sbb
fwait
ret
add
sbb
icebp
mov
add
add
add
add
dec
add
add
add
cmpsl
add
add
mov
add
push
add
add
jns
sahf
add
add
rolb
add
add
add
pushf
add
xchg
jns
flds
mov
adc
ret
add
add
add
sldt
add
add
add
mov
add
add
add
add
add
add
add
add
add
or
adc
pop
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
inc
add
add
sti
add
add
add
add
add
add
add
add
push
add
add
and
add
add
mov
add
add
push
add
add
add
add
add
in
add
xchg
inc
add
add
add
add
add
add
add
add
add
adc
int3
add
add
add
add
add
lcall
add
add
add
insl
add
push
add
add
add
add
add
jg
add
add
xchg
dec
add
add
and
lcall
add
add
add
add
add
jbe
inc
add
add
add
add
lcall
add
add
add
addb
add
add
add
add
add
add
add
test
loopne
add
add
sahf
add
add
add
add
pop
add
roll
testb
push
mov
add
add
add
add
fiaddl
mov
add
add
add
adc
and
add
add
add
add
add
add
adc
push
add
add
add
push
add
into
add
cmp
jns
mov
bound
fiaddl
mov
jl
pop
add
add
in
add
into
add
add
add
add
jb
data16
add
gs
add
push
add
add
add
str
add
push
add
dec
add
fwait
add
xchg
add
sbb
or
cld
add
add
add
jae
lcall
add
ja
xor
xor
sti
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
stos
add
add
add
add
add
add
add
add
add
add
add
pushf
add
add
add
add
add
pop
add
sub
pusha
add
add
add
pusha
add
jo
add
popf
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
adc
push
ljmp
add
add
popl
pop
add
add
adc
cmp
inc
enter
pop
test
pop
fisubrs
add
mov
insb
mov
xchg
dec
xchg
dec
fbstp
or
or
mov
js
daa
ret
xor
fst
pop
xor
and
imull
push
and
lock
lret
jns
add
stc
testl
inc
mov
repnz
sbb
int3
gs
leave
inc
out
fnstenv
sbb
pushf
int3
jge
loope
mov
sbb
push
sbb
push
mov
mov
lcall
cwtl
call
jnp
aad
add
push
cwtl
leave
aas
xor
ds
xchg
shl
lahf
xchg
lods
ss
cmpxchg
pop
inc
mov
mov
pop
jge
fsubrs
pop
lods
lret
ret
pop
sti
mov
push
iret
xorl
data16
sar
add
mov
and
adc
jle
mov
cmp
mov
test
in
addr16
addl
outsl
pop
xchg
mov
pop
xchg
push
xchg
outsb
inc
inc
cmp
je
fimull
or
cmpsb
clc
mov
mov
lret
lock
movsb
aaa
dec
xor
daa
imul
xlat
xchg
dec
dec
clc
aam
push
scas
cmp
cmp
pop
cld
add
call
cmp
inc
add
xor
insb
sub
or
leave
mov
std
daa
test
ljmp
lods
push
and
popf
inc
and
sahf
adc
fs
add
dec
mov
add
or
mov
mov
and
mov
sahf
std
clc
sti
and
bnd
in
jno
aaa
jne
sub
cmpsl
fs
sbb
test
sbb
sti
xchg
xor
fistl
adc
mov
test
enter
jg
adc
int
mov
inc
cmp
scas
imul
sub
test
int
jo
pop
stos
ds
pop
pop
or
dec
loop
mov
out
aad
xor
cmp
inc
lahf
jecxz
xchg
xchg
and
movsl
and
es
ss
push
iret
inc
into
inc
repz
pop
cmpsb
push
enter
mov
cld
mov
lahf
imul
aad
into
and
test
sbb
lock
popa
add
xor
fistpll
push
insl
jo
shll
fcmove
enter
add
or
inc
es
mov
xor
mov
jne
xchg
add
sub
jl
ret
fs
mov
sub
cmc
lret
mov
int3
sbb
roll
dec
idiv
aas
jo
ss
add
scas
mov
pop
dec
sub
into
sbb
add
andl
cmovb
sti
mov
pop
add
add
add
add
rolb
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
orl
movl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
push
pushl
call
mov
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
cmpl
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
lock
sbb
add
inc
hlt
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
mov
hlt
add
movsb
hlt
add
pushf
hlt
add
xchg
hlt
add
mov
add
test
add
jl
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
fdiv
add
loopne
add
in
hlt
add
add
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
js
add
cwtl
cmc
add
shl
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
adc
add
sbb
add
and
add
sub
add
xor
add
cmp
add
inc
testb
push
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
jo
add
js
add
mov
add
pushf
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xor
add
pop
testl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
push
add
in
testl
add
testl
add
testl
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
sbb
add
and
add
sub
add
inc
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
clc
add
add
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
push
stc
add
pop
stc
add
fs
add
insb
stc
add
je
add
jl
add
test
add
xchg
stc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
add
mov
stc
add
fdivr
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
