call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
mov
push
pushf
fildll
mov
mov
outsl
adc
dec
cmp
pop
jl
jl
mov
pushf
fildll
fcompl
push
outsl
sbb
or
cmp
das
dec
mov
insb
and
mov
movsl
scas
aad
les
out
add
cmp
cmp
or
jl
mov
fdivrs
add
dec
xchg
sub
push
cmpsl
push
pop
nop
ds
repz
inc
out
inc
push
and
xchg
hlt
mov
leave
mov
xor
repz
fdivs
lcall
aas
mov
mov
in
xchg
push
jl
fcoml
mov
mov
add
cmp
dec
int3
mov
mov
sub
push
jp
adc
push
subps
sub
fstpt
sbb
imul
insb
jp
jp
out
jl
lods
push
xor
push
cmp
xchg
dec
sub
pop
das
sub
pop
insb
int3
mov
mov
mov
jmp
lahf
cmc
aaa
in
adc
add
xor
xor
insb
imul
jmp
mov
mov
sub
push
gs
push
push
and
imul
hlt
addr16
cwtl
faddl
mov
cld
nop
inc
jne
jge
pop
and
ds
xor
dec
sbb
int
leave
cli
mov
cld
jg
outsl
sbb
sub
cmp
dec
das
pop
pop
insb
decl
mov
lahf
in
cld
jg
outsl
sbb
sub
cmp
dec
das
pop
pop
insb
decl
scas
repz
sarb
lcall
stos
ss
inc
dec
push
xchg
mov
sub
pushf
cmp
lds
mov
add
int
enter
popf
fnstsw
mov
mov
ja
jle
push
insl
cmp
lods
ss
test
lgs
test
loope
pop
fsubrs
mov
cmpsl
dec
in
pop
xchg
pop
pop
mov
and
xchg
scas
pop
outsl
jl
ss
lock
jmp
outsl
or
orb
lret
jo
xchg
xchg
push
lret
mov
clc
cmp
and
and
insl
mov
cmp
cmp
lods
jl
push
mov
clc
int3
std
jns
jg
test
sbb
dec
adc
std
rcr
stc
push
rcr
loope
dec
mov
pusha
loope
push
xor
sub
add
or
loope
sti
jno
adc
repz
inc
jle
xor
jnp
sbb
test
cmp
mov
shrb
std
sbb
lock
jl
sarb
mov
sbb
ljmp
mov
mov
data16
sub
sbb
and
sbb
pusha
lret
pusha
test
sbb
adc
mov
adc
inc
ljmp
idivl
ljmp
and
aad
cld
loopne
mov
cmp
inc
insl
ret
inc
sbb
xchg
pop
loopne
icebp
into
jmp
rcrb
xor
xchg
dec
cli
sbb
inc
or
loopne
mov
xchg
jle
push
inc
or
mov
scas
push
mov
mov
lea
mov
jmp
in
das
add
lods
mov
cmp
pop
inc
sbb
mov
xlat
xor
ljmp
sti
repz
bound
orb
loopne
frstor
andb
mov
push
stos
imul
pop
adc
pop
stc
into
xor
mov
in
fs
fldcw
in
icebp
lods
mov
push
sbbb
pop
repnz
call
inc
cmp
or
sbbb
xlat
ret
repnz
out
lret
pop
das
in
out
je
add
mov
repnz
das
cmp
loop
adc
aaa
enter
adc
call
pusha
cmp
xor
and
fwait
loope
imulb
push
add
xchg
dec
inc
or
rclb
push
lods
jbe
mov
sarl
push
jmp
movsl
jmp
dec
out
ret
xor
push
push
subb
sarb
fneni(8087
outsl
mov
and
add
and
mov
jmp
testl
mov
icebp
dec
insl
rcll
outsl
xchg
addr16
out
aad
xchg
pop
jno
in
mov
test
push
popa
xor
mov
sub
xor
jns
or
and
shl
ret
sub
in
test
aad
cmp
push
ljmp
inc
xchg
push
mov
cwtl
out
lods
pop
scas
lret
cmp
mov
push
stc
push
lods
or
mov
pop
ret
lahf
xchg
mov
stc
add
rcr
mov
loop
cs
push
loop
adc
sub
sahf
sub
mov
cmp
dec
fs
mov
push
andl
push
dec
inc
sub
add
lods
int3
jmp
out
push
test
xchg
scas
aad
jp
sarb
cmc
adc
mov
or
jl
jg
fcmovnbe
iret
inc
lods
loope
jmp
sub
xchg
out
and
movsb
out
stos
xchg
xchg
outsb
idivl
xchg
ret
enter
loop
lock
or
dec
and
sti
jb
dec
sub
sub
shll
push
gs
dec
in
bound
les
push
cmp
pop
dec
faddl
bound
push
int3
je
jno
xchg
jmp
mov
pushl
fbstp
fisubrl
jg
cmp
fisubl
ss
push
xlat
outsb
push
or
or
stc
fnsave
popf
test
xor
lcall
mov
fmull
push
cmp
sub
imulb
inc
dec
mov
cmpl
insb
xor
or
pop
or
xorl
lcall
movsb
sahf
jae
sub
rol
ret
imul
pop
jecxz
cmpsl
nop
inc
mov
mov
mov
testb
mov
pop
mov
cmc
adc
cltd
push
dec
inc
out
dec
jle
repnz
xchg
cmp
add
jae
push
or
add
adc
cmp
lret
xchg
or
sub
pop
and
jmp
dec
or
jecxz
int3
pop
dec
mov
jne
insb
scas
outsb
xor
sbb
mov
or
out
or
push
jne
cmpsl
fdivr
dec
sub
subl
insl
fs
and
ja
jb
jecxz
mov
pop
sub
addb
outsb
stos
fwait
dec
xchg
loope
adc
sub
xchg
cs
push
rorl
push
xchg
test
jp
xchg
adc
mov
lods
testl
mov
jg
out
lock
das
cltd
push
and
adc
int3
ja
int3
loopne
adc
mov
jg
filds
shlb
sub
gs
ja
in
rcrl
pop
imul
je
rdtsc
cmpsl
jne
inc
cld
dec
fisubs
shrl
mov
cmp
inc
mov
jmp
int3
xchg
jmp
pop
jnp
out
shlb
xlat
xor
xchg
mov
push
cmp
xchg
jl
pop
andb
jp
icebp
sbb
jo
fadd
inc
bound
dec
rcrb
mov
sbb
and
scas
mov
pop
pop
or
jae
stos
aas
pop
add
addr16
pop
sbb
into
cmp
mov
cmp
sub
mov
inc
jg
loop
lea
mov
sti
mov
cli
jecxz
cmp
test
mov
sub
lods
stos
pop
push
std
lds
mov
es
push
dec
fisubl
pushf
mov
les
xchg
adc
mov
dec
mov
add
mov
dec
negb
xchg
jnp
push
rclb
pop
cmpsl
mov
clc
fistpl
inc
out
or
push
subl
movsb
outsl
mov
pop
cmp
imul
jae
test
or
mov
sbb
xchg
repz
loope
pop
in
cmp
rolb
pop
outsb
out
das
lcall
das
cmp
test
stc
mov
loope
push
push
pushf
jbe
push
xchg
pusha
fstps
jne
cmp
inc
mov
in
hlt
imul
mov
mov
icebp
and
sbb
mov
jnp
add
fwait
lcall
outsb
lcall
inc
push
out
stc
fildl
jge
xlat
fwait
mov
rcl
inc
dec
push
daa
bound
iret
je
stos
fistpll
popf
mov
mov
in
mov
xchg
xchg
stc
pop
mov
lods
or
scas
int3
fldcw
int
lahf
mov
andb
mov
inc
lahf
add
out
mov
xchg
test
push
icebp
jns
inc
cmp
ljmp
and
sub
mov
nop
imul
mov
fistpll
rcll
iret
xchg
fldcw
push
mov
sbb
inc
fwait
xor
in
sbb
lcall
or
lahf
lods
push
inc
xor
loope
mov
push
shll
lea
pop
cwtl
xor
cmp
mov
push
scas
es
and
inc
aam
lcall
je
mov
adc
stos
sub
ss
ljmp
and
mov
mov
pcmpeqb
mov
add
dec
push
mov
mov
int
cmpsb
pop
out
xor
and
fwait
and
ljmp
pop
aad
popa
mov
jp
add
movsb
add
std
int3
jp
cwtl
xchg
inc
push
xchg
popa
in
cmpsl
repnz
add
sbb
xchg
pop
jae
mov
into
popl
dec
xlat
inc
enter
loop
fcompl
push
jmp
adc
ljmp
lock
jbe
mov
pop
inc
xchg
sbb
fwait
in
iret
jmp
jns
cmp
sub
insl
push
jb
adc
into
cld
pop
mov
cmp
or
pushf
dec
repz
sub
jb
insb
xor
inc
lock
dec
sbb
dec
test
mov
divb
push
sub
daa
xor
push
sub
les
mov
lret
push
ljmp
gs
dec
cwtl
dec
pusha
loope
aaa
mov
or
mov
sahf
dec
cmp
clc
fiadds
movsb
cmc
push
xor
loop,pt
jae
jecxz
and
mov
mov
push
jmp
sub
popa
mov
popa
shlb
mov
cwtl
movsl
xchg
xchg
add
sub
mov
or
inc
cmp
sbb
stos
shrb
imul
lret
lcall
push
popf
rolb
pop
loopne
sbb
aam
pop
or
pop
cmc
mov
leave
add
repz
push
je
int
inc
mov
and
mov
arpl
jae
insb
jbe
in
je
cmp
loopne
testb
shr
sbb
movsl
sbb
jl
sub
inc
cs
and
shl
ret
pop
movsb
enter
adc
xchg
xor
cli
es
decl
lret
nop
cmpb
addr16
sbb
sahf
push
add
addb
ja
stos
pop
aad
dec
mov
pusha
movsb
sub
pushf
fwait
lock
shl
daa
cmp
xorb
out
push
pop
mov
inc
int3
sub
sbb
int
lret
popf
xor
inc
xorb
popf
je
sbb
cltd
mov
enter
bound
sub
je
adc
addl
sbbb
int3
mov
inc
call
mov
flds
cmp
call
xchg
jo
or
xchg
lods
aam
rcll
gs
xor
pop
mov
fwait
stos
sbb
push
push
ret
adc
fistps
mov
repz
and
stc
lods
mov
fnsave
dec
movsl
fs
xchg
imul
add
sahf
or
and
mov
insb
test
inc
cmp
mov
fsubrs
or
out
pop
add
sub
xchg
shlb
push
pop
ret
sahf
fildll
push
test
sub
jnp
push
inc
and
adc
push
jl
mov
and
cmpl
shrl
cmp
xlat
in
adc
or
cmc
je
and
jno
xchg
mov
jg
shll
scas
pop
xchg
stc
fnstsw
cmc
subl
mov
outsb
cmp
jl
jecxz
loop
add
aam
dec
adc
push
push
inc
jbe
pop
xchg
insl
addr16
fmuls
in
or
pop
inc
gs
pop
mov
pop
adc
inc
lock
mov
inc
mov
pop
bound
xchg
ljmp
sbb
pop
mov
adc
jne
out
push
pop
rcr
xchg
sbb
push
and
jl
fsubs
mov
fwait
orl
negb
rolb
orl
mov
sub
outsl
pop
or
cltd
push
in
fs
pop
jl
loopne
stos
outsb
add
lock
jle
nop
add
shl
sbb
sbb
out
and
lret
mov
aam
and
in
cmpl
pop
inc
jne
inc
jo
fsubl
and
ret
aaa
lods
sbb
cmc
jmp
arpl
lahf
in
fcmovu
movsb
movsl
xchg
movsl
xorb
scas
or
adc
fildll
xchg
mov
jl
xchg
or
mov
sub
and
xchg
cmp
lret
in
ja
repnz
dec
je
dec
cmp
sbb
scas
loopne
xchg
adc
jmp
pop
cwtl
dec
mov
add
pop
outsl
mov
ljmp
enter
rolb
loopne
mov
nop
mov
ret
xor
bound
clc
out
and
loop
pop
sub
mov
into
mov
sbb
cmp
popf
cmp
out
mov
jecxz
jne
in
cltd
daa
and
push
clc
sbb
mov
ss
push
mov
mov
cmc
sarb
jbe
iret
sarl
roll
sbb
ds
das
sahf
sbb
das
add
mov
jmp
or
sahf
iret
sub
cmp
adc
mov
push
sbb
and
mov
pop
mov
dec
out
push
ds
aam
stos
inc
cmp
mov
push
mov
rorl
xor
jg
pop
lods
mov
pop
cmp
imul
mov
inc
xor
arpl
push
sub
test
in
lahf
cmp
mov
pop
rcll
andb
jbe
mov
xor
les
or
sub
cmp
out
int
lahf
mov
mov
push
cli
je
aas
cld
clc
cmp
enter
into
loopne
lds
in
dec
mov
pop
popa
adc
sub
cmp
aad
pusha
cmpsb
add
sub
test
pop
sub
push
fldt
xchg
mov
push
jae
ret
cld
rcrb
push
mov
repz
and
addb
xor
andl
or
sub
push
test
mov
aas
negb
jl
mov
xlat
es
testb
pop
das
icebp
dec
popa
cmpsb
push
inc
pop
push
cld
xor
rcll
aaa
shlb
lret
leave
in
subb
into
bound
mov
and
adc
movsl
aas
mov
dec
mov
test
xor
inc
sar
ds
daa
fbld
in
xor
in
mov
cmc
cmpsl
mov
hlt
iret
inc
sub
push
cmp
inc
pop
into
loopne
es
pop
or
push
dec
xor
das
imul
mov
fcoml
pusha
fdivr
jg
push
mov
sub
push
inc
sti
adc
mov
ljmp
imul
add
lcall
sbb
stos
ja
sub
ds
pop
vpackuswb
pop
mov
or
sub
inc
mov
and
jmp
jae
jmp
stos
mov
mov
mov
jb
inc
and
lahf
lods
decb
and
je
lods
outsl
adcl
repnz
scas
insl
xor
nop
insl
adc
mov
subb
fs
pop
sub
jl
pop
push
fcoms
sbb
sbb
dec
cmp
xchg
adc
jle
push
rorb
adc
pusha
out
or
cmpsl
lcall
xlat
cmp
aam
jmp
aaa
push
dec
fs
mov
jnp
jnp
movsl
and
scas
push
popa
push
jno
pop
xchg
mov
call
cmpsb
js
insb
mov
or
xchg
xchg
cmp
inc
cltd
repz
mov
push
xor
aad
xchg
add
mov
sbb
shl
dec
stos
addr16
out
jbe
sbb
dec
fistps
mov
cs
cltd
repz
push
movsl
jg
sub
dec
xor
imul
mov
lahf
ficoms
jns
popl
xor
fdivl
cltd
sbb
jb
jb
ret
mov
sub
push
sub
cmpsb
sbb
ss
or
fs
cmpl
cmp
mov
adc
pop
lea
xchg
iret
cltd
xor
test
inc
rorb
jb
cltd
lods
insb
fsubl
cli
xor
xor
mov
adc
sub
jecxz
lods
and
fs
dec
cmp
push
xchg
sub
pop
inc
push
xchg
flds
stc
pop
pop
lea
dec
jg
cwtl
and
xlat
fs
rcr
and
sub
mov
xor
shlb
sbbl
mov
std
ret
jg
pop
sahf
mov
cmp
cwtl
rcl
pop
jnp
nop
add
rcl
test
and
sbb
xlat
jle
mov
pop
test
inc
in
jne
cli
call
or
gs
xor
dec
rcl
out
add
or
push
xor
xchg
lods
lret
inc
sbb
jnp
cmp
sbb
popf
call
or
pop
shll
insl
mov
fcmovb
and
fstpl
ret
hlt
rolb
fcomip
or
mov
sub
lahf
sub
cmp
add
into
ffree
js
aad
pop
pusha
push
mov
or
xor
shl
stos
mov
lcall
xchg
out
test
jo
pushf
or
mov
mov
lcall
or
xchg
jb
popa
mov
sub
push
jle
inc
push
rcll
loopne
ret
fistpll
cmp
xchg
sahf
or
or
aam
add
jmp
mov
mov
mov
vpcmpeqw
pop
push
add
lea
and
addr16
jp
mov
leave
dec
or
lcall
add
inc
aad
mov
loop
hlt
std
imul
lcall
stos
sub
sbb
pop
out
pop
lea
out
pop
int3
jl
adc
mov
lea
push
adc
sysexit
pusha
or
jo
xchg
xchg
leave
cmp
scas
aas
loope
cmp
dec
mov
or
fstpt
mov
dec
dec
cmp
adc
lods
and
loope
and
xor
add
out
pop
or
call
or
scas
pop
jo
scas
lret
jno
js
repz
inc
movsl
data16
leave
pop
jp
jle
and
xor
jbe
in
ret
sub
mov
and
test
call
xchg
dec
mov
popa
mov
cmp
push
std
pop
cmc
out
pop
insl
xor
push
popa
and
pop
addb
dec
das
dec
xchg
std
cwtl
push
cmp
sub
cmp
jl
addr16
outsb
jae
dec
data16
xchg
jle
mov
sub
push
xor
push
xor
xor
jle
mov
xor
stos
and
add
sahf
mov
sub
fwait
iret
add
imul
fs
mov
pusha
sub
sbb
mov
adc
ss
into
jbe
pop
sub
call
iret
mov
push
pop
mov
fcompl
lea
dec
mov
icebp
pop
inc
adc
fisubs
mov
sbb
bound
dec
pusha
xor
fisttpll
popa
jge
sbb
jo
or
inc
jecxz
cmp
jge
or
sbb
and
dec
cwtl
jg
push
sbb
inc
shr
dec
js
mov
nop
push
rcrl
cmpsl
testb
clc
movsb
enter
fsub
mov
orl
mov
outsl
xchg
adc
imul
xchg
outsl
sub
rorl
dec
lea
enter
mov
fcoml
and
shlb
fstpt
mov
divb
mov
push
outsb
xchg
loopne
aas
mov
xor
xlat
mov
bound
mov
lods
cmc
ss
mov
pop
cmpsl
arpl
fisubs
mov
add
jae
and
movntq
xchg
test
aas
repz
cmc
push
or
adc
cmc
sbb
rcr
je
adc
mov
and
add
insb
or
xor
sub
lcall
push
clc
jl
jnp
mov
fwait
mov
clc
dec
mov
insl
or
or
aad
pop
scas
mov
and
outsl
ja
mov
call
or
decb
or
mov
sahf
add
xchg
rcll
inc
test
dec
ds
mov
mov
inc
add
shlb
xlat
outsb
imul
pop
dec
imul
and
popf
shll
jno
or
cmp
aam
dec
adc
cwtl
and
cwtl
cmp
gs
js
push
push
inc
adc
ds
daa
or
jle
out
mov
cmp
push
xor
in
jne
lea
or
cmc
jnp
cmp
lahf
mov
imul
mov
lahf
in
cld
jg
outsl
sbb
sub
cmp
dec
das
pop
pop
insb
decl
mov
lahf
in
cld
jg
outsl
sbb
sub
cmp
dec
das
pop
pop
insb
decl
mov
lahf
in
mov
jnp
outsl
sbb
sub
cmp
sbb
jl
mov
pushf
push
lods
out
mov
in
paddb
nop
mov
sub
dec
dec
les
adcl
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
mov
push
xchg
push
loope
adcl
outsb
lcall
scas
sarl
popa
out
jno
inc
into
inc
faddp
cs
in
push
xchg
push
loope
icebp
jle
dec
rcrl
scas
xor
pusha
mov
sahf
and
jno
inc
mov
sbb
inc
adc
dec
push
ljmp
jle
dec
rcrl
push
adc
or
or
popa
andl
popf
sbb
mov
fistpl
inc
push
sbb
js
mov
iret
in
jno
dec
dec
pop
push
xlat
inc
inc
inc
test
sub
pop
jbe
sub
stc
xchg
jecxz
scas
leave
push
loop
ja
xor
dec
adc
out
xor
mov
insl
push
jge
fnstcw
push
outsl
icebp
jle
rcl
and
rolb
test
inc
xor
pop
into
mov
loope
outsl
jns
dec
pop
pop
fldl
push
mov
add
pop
and
jno
mov
mov
outsl
out
sbb
repz
mov
mov
and
inc
ficoml
cli
cs
orl
mov
dec
ja
out
stos
mov
sub
jnp
jae
push
mov
inc
ret
ds
addr16
jle
add
push
and
lret
je
adc
xor
in
cs
repz
lock
mov
xchg
sbb
test
arpl
add
imul
sub
retw
outsb
icebp
jle
dec
rcrl
scas
xor
popa
out
jno
inc
into
push
fisubs
push
xchg
push
loope
icebp
jle
dec
rcrl
scas
xor
popa
out
jno
inc
into
push
fisubs
mov
sbb
scas
xor
dec
dec
ret
pop
cmp
sbb
notl
xor
and
movb
testl
cmp
sti
lahf
sub
imul
cmpsl
not
imul
jbe
fildl
loopne
dec
in
or
shlb
and
fmulp
push
pop
outsl
lea
jmp
hlt
fcomps
call
lods
mov
fdivrs
mov
in
xchg
sub
clc
cltd
jecxz
push
loop
mov
lahf
sbb
or
daa
xchg
nop
js
inc
sti
or
scas
xor
mov
cmp
cwtl
adc
std
scas
mov
mov
les
je
pop
xchg
push
ret
inc
fyl2x
fldl
cmp
pop
inc
mov
jo
or
jecxz
and
sti
mov
push
add
arpl
or
and
mov
push
fs
aam
mov
dec
out
cmpl
scas
outsl
mov
add
sbbb
sub
pushw
shll
inc
xorb
mov
mov
sub
push
lret
push
xchg
pop
mov
jle
sbb
or
mull
out
repz
jnp
adc
xor
dec
cwtd
cmp
popa
jno
sub
pop
ja
aas
imul
ljmp
movsb
push
mov
gs
cmp
mov
std
and
dec
jo
xor
stc
rcll
mov
in
cmp
jge
dec
cld
mov
sar
scas
jg
add
adc
mov
push
fwait
jge
xchg
std
es
push
fisubs
in
mov
addb
pop
aad
jno
adc
push
mov
lock
add
mov
inc
mov
iret
scas
mov
rcrb
sarb
cmpsb
ljmp
cmp
fstpl
stc
imul
mov
or
fisttpl
lods
stc
or
mov
push
aam
pop
jne
or
test
movsl
adcb
test
in
ja
push
jge
mov
pop
mov
jb
and
loope
jae
mov
push
mov
jmp
lret
fs
js
pop
inc
add
into
sbb
aas
jne
lret
int3
cltd
iret
imul
xchg
outsl
mov
lock
cmpl
jp
sub
aam
adc
clc
fldt
orb
sbb
lods
popa
loop
dec
mov
pop
cmp
ss
adc
mov
jmp
dec
fwait
bound
add
push
hlt
dec
inc
inc
mov
sarl
stos
test
movsl
mov
popa
and
or
in
or
out
jb
add
jl
imul
iret
mov
in
sub
mov
mull
mov
adc
xchg
test
xchg
adc
popf
adc
dec
and
rorl
or
mov
sbb
outsl
jns
lock
loop,pn
ret
jns
xchg
stos
popf
pop
in
adc
sub
dec
aaa
mov
cmp
je
in
popa
cmpsl
xor
cmp
aaa
es
pushf
sub
popf
cmpsl
test
cltd
fistpll
push
or
jg
adc
mov
sbb
sbb
sub
iret
notrack
repz
es
rep
adc
scas
push
mov
mov
stos
fimull
push
jle
or
push
jae
cli
mov
jb
dec
dec
fs
mov
mov
pop
sbb
dec
cmpsb
les
scas
mov
lea
dec
notl
popf
js
sbb
stos
femms
mov
mov
jno
pushf
sbb
popa
cwtl
xor
int
jl
mov
dec
mov
fistpll
and
hlt
add
cli
ss
sbb
push
loopne
sub
mov
cmp
mov
mulps
in
sub
sbb
test
cmc
lea
dec
repz
adc
sbb
daa
ret
mov
cmp
orl
pop
push
and
int
mov
jb
aad
xchg
mov
js
mov
rcrb
pushf
dec
mov
and
sub
dec
dec
adc
mov
pushf
jno
scas
push
mov
jp
sbb
lock
jb
pop
fdivs
mov
sbb
mov
add
sub
call
cmpsb
in
out
xor
mov
call
or
adc
out
out
dec
imul
push
int3
cld
or
fnsave
imul
enter
repnz
das
xor
jnp
mov
aad
cmp
sub
cmp
or
dec
push
adc
insb
ss
mov
lret
mov
and
out
cli
or
stos
cmp
mov
xorb
add
mov
jl
mov
adc
or
xor
jle
arpl
pop
imul
into
xor
int3
orb
pop
aaa
dec
push
and
or
jmp
inc
xor
pop
outsl
xchg
cmp
lret
xchg
addb
mov
test
shlb
lods
outsl
ror
cmp
push
adcb
push
aam
adc
aaa
mov
sbb
sbb
imul
insl
fcmovb
mov
xlat
push
mov
in
cmpsb
jg
cmpsl
push
repnz
pop
ret
test
cmc
pop
cmpsl
jne
cmc
xlat
xchg
mov
jg
dec
add
cs
sub
psubb
lock
xchg
add
sahf
mov
in
pushf
inc
mov
stos
add
insb
scas
loopne
clc
xor
fmul
mov
fimuls
mov
out
filds
add
adc
mov
cmp
add
inc
ficoml
jb
movsb
dec
or
add
cmc
lock
lock
add
sbb
inc
fiadds
lock
sbb
or
lahf
shll
fisubs
lahf
pusha
andb
mov
jl
or
mov
test
sbb
lret
ds
data16
xchg
cmpsb
rorb
mov
ljmp
out
push
pop
mov
ss
pop
fldenv
cmp
lea
adc
inc
cmc
gs
sub
out
push
pop
mov
call
cmp
sub
popa
push
rorb
add
xchg
iret
int3
mov
sbb
jnp
not
sbb
fisttps
fwait
lods
mov
mov
mov
jno
ja
mov
sub
mov
cmp
push
arpl
test
jg
insl
arpl
dec
xlat
aad
fimuls
mov
jae
fwait
and
xor
addb
sbb
repnz
push
push
pop
std
mov
push
out
mov
ja
mov
es
data16
inc
jnp
jecxz
push
fidivrs
imul
imulb
jno
xchg
call
push
mov
sbb
je
mov
stos
push
mov
imulb
mov
lods
pop
xchg
jecxz
sub
xor
jnp
sub
sbb
ficompl
sub
das
shr
pop
sub
dec
rcrl
mov
jno
pop
adc
sub
cmp
mov
push
mov
dec
add
stc
je
shll
popf
shrb
dec
push
scas
or
adc
mov
lahf
mov
xchg
lea
pop
icebp
or
jns
leave
mov
pop
pop
mov
jecxz
push
aam
mov
cmpsb
xor
mov
je
sub
subl
cmc
fisubl
adc
and
testl
nopl
sub
jbe
cmp
pusha
add
addr16
mov
fdivp
mov
cmp
lahf
fsub
inc
push
rcrb
roll
jge
lret
push
jnp
repnz
mov
rcrb
push
cmp
stc
faddl
mov
bnd
js
sbb
das
cmpsl
stos
fwait
jne
fisttpll
dec
xchg
mov
lcall
shll
pop
int3
leave
cmp
fwait
pop
mov
loop
cld
les
dec
and
fists
call
lcall
jo
js
out
outsb
imul
push
arpl
dec
rorb
sahf
inc
jnp
sarl
push
adc
out
test
clc
or
mov
sub
aaa
in
pop
push
lret
cmp
lret
mov
mov
lahf
inc
mov
jo
xchg
xor
pop
sub
cmpsl
mov
sub
xor
mov
xchg
mov
out
mov
dec
fcomi
push
aas
jno
jmp
cmp
dec
div
ljmp
addr16
insb
fs
dec
mov
in
add
scas
mov
and
test
outsb
add
es
fidivl
scas
jns
xchg
xchg
or
subl
ret
add
mov
mov
mov
mov
in
and
sahf
sti
xor
jbe
pop
addl
xchg
mov
sub
dec
inc
push
ret
frstor
sub
cmp
or
mov
mov
push
add
js
pop
xor
inc
cmpsl
inc
mov
mov
cmp
ret
dec
div
dec
xor
icebp
out
lods
mov
aas
mov
adcb
imul
xor
pop
xchg
inc
add
data16
mov
movsb
insl
push
push
dec
test
es
xor
or
hlt
xor
in
lcall
lahf
loope
leave
xor
pop
aam
xchg
mov
inc
fcoml
lret
jns
pop
add
push
mov
out
and
inc
jg
in
shrl
bound
mov
jmp
push
fld
bound
or
cmp
into
mov
add
repz
loopne
mov
cmp
lods
cmc
xchg
pop
cmp
test
in
lret
imul
mov
ljmp
leave
mov
subl
jae
cli
cli
shrb
push
and
leave
xchg
mov
inc
push
jns
in
and
push
mov
sarl
jl
mov
das
xor
adc
adcl
sahf
stc
dec
lcall
inc
bound
mov
in
jnp
mov
stos
pop
nop/reserved
mov
jne
jl
fcoms
lods
jp
fcmovu
mov
push
nop
xor
pop
out
cmp
jmp
pop
push
adc
test
and
popa
leave
sub
fildl
mov
ret
test
aas
bnd
dec
add
js
gs
push
add
push
ja
adc
aaa
pop
jl
in
and
stos
mov
cmpsb
cs
push
mov
add
addr16
cmpb
pop
popf
imul
xlat
jecxz
jecxz
insl
adc
pusha
fisttpll
rcrl
xchg
popa
xor
into
clc
into
je
cld
mov
lcall
inc
push
mov
movsb
jmp
stos
popf
loop
data16
mov
mov
stc
jb
cmp
xor
dec
jl
inc
mov
cwtl
cmpsl
mov
mov
jno
jns
or
roll
ret
jp
test
sbb
or
cmpsl
js
pop
xchg
jo
pop
popa
sbb
mov
mov
mov
adc
xor
sbb
pop
mov
lahf
aam
out
decb
dec
mov
mov
lret
nop
push
pop
push
dec
mov
mov
xchg
mov
sub
out
adc
popa
es
cwtl
mov
jo
push
not
jo,pn
ret
pop
push
sbb
cs
test
mov
pushf
shlb
add
inc
add
cli
ret
sbb
cmp
in
jb
pop
and
movsb
push
mov
jle
add
in
je
in
dec
jmp
adc
movsb
or
fcoms
cltd
and
sahf
faddl
scas
mov
mov
jmp
fnstenv
das
sub
enter
add
or
movsl
out
test
rclb
sub
adc
jge
fsts
sub
icebp
xchg
mov
xchg
mov
sub
out
or
jl
cltd
test
out
outsb
pusha
or
test
repz
sub
xchg
scas
lret
shrb
pop
adc
les
dec
imul
inc
and
hlt
and
das
mov
dec
fcomps
pop
cmpsb
mov
movsb
lods
mov
aas
mov
inc
inc
sbb
imul
sbb
test
sbb
push
clc
jb
andb
mov
roll
inc
test
adc
mov
mov
or
outsb
fidivrs
mov
jecxz
lods
mov
dec
mov
sub
cltd
cmp
push
jb
xchg
scas
cmp
xchg
lcall
add
lock
lret
push
repnz
js
into
push
mov
inc
add
iret
aam
fs
jmp
out
and
xchg
xchg
movb
pop
loopne
in
and
jg
cmpsb
adc
loop
mov
outsb
data16
cmpsl
pushf
jae
das
or
pop
cmp
mov
jnp
sbb
dec
outsb
xchg
push
inc
clc
xor
orl
sbbb
fwait
ror
xchg
sahf
lret
aad
sbbb
addr16
mov
iret
imul
insl
xor
cmp
movl
xor
andl
aas
xchg
stos
testl
jnp
call
mov
popa
sarl
pop
pop
sbb
pop
xchg
out
mov
sub
mov
testl
out
data16
out
dec
fisubl
stos
pop
addr16
pop
lds
or
push
imull
test
mov
cld
mov
in
ljmp
jae
hlt
imul
data16
xor
sub
in
push
mov
or
nop
bound
mov
mov
dec
pop
cltd
lds
or
out
cmp
outsb
icebp
xor
imul
jne
test
and
jle
inc
push
test
adc
fstl
dec
pop
out
push
xchg
fisubrs
xor
mov
xchg
or
jns
in
dec
das
push
mov
imul
add
dec
adc
pop
mov
xor
dec
push
or
fwait
push
adc
mov
and
enter
enter
and
fwait
daa
push
orl
push
mov
sub
dec
out
testl
or
cwtl
call
mov
jae
imul
jmp
push
std
pop
outsb
fwait
adc
arpl
dec
add
sub
stos
insb
fisubs
adc
test
mull
cmp
inc
dec
or
jmp
popf
je
or
scas
pop
push
les
mov
fucomip
jne
mov
aam
adc
and
jmp
mov
mov
arpl
and
cmp
xchg
cmp
adc
push
mov
jp
cmp
pop
std
xor
daa
int
xchg
pop
pusha
mov
mov
adc
mov
xor
add
stc
pop
adc
xlat
or
add
or
jmp
jge
stos
sbb
cmp
jp
es
or
inc
push
sub
jo
mov
call
mov
and
test
dec
and
mov
mov
mov
andb
jae
hlt
mov
js
jmp
xchg
shr
es
sub
arpl
lods
mov
sbb
popa
sbb
xor
not
movb
cmp
mov
shlb
addr16
xor
pop
aad
mov
mov
fwait
mov
filds
jbe
fnstcw
jo
popa
jg
cmpsb
or
push
stos
les
xchg
cmp
outsb
fidivrl
mov
loope
imul
jae
and
cmp
mov
daa
leave
or
mov
mov
lahf
jb
loopne
pop
pop
jnp
xlat
cmp
gs
lock
push
push
push
inc
xchg
push
dec
outsb
stos
jb
cld
or
sub
and
or
sub
pop
cli
or
in
andl
lock
pusha
ja
ds
push
ja
shlb
scas
popa
lds
sbb
aam
mov
fldl
into
adc
push
mov
icebp
pop
out
inc
fs
repz
sbb
push
dec
clc
pop
sti
int3
sbb
cwtl
jl
mov
mov
add
aam
fldcw
mov
negl
outsl
xchg
inc
loope
adc
sbb
xor
clc
push
imul
lods
out
out
addr16
push
sub
outsb
xchg
cmpsb
cmp
or
dec
aaa
rol
jb
cmp
push
out
xor
data16
lock
leave
ret
inc
mov
sub
xor
sbb
js
xchg
sub
cmp
fdivl
icebp
or
add
int
inc
ja
cli
mov
pop
push
negb
inc
cld
dec
fidivrl
sbb
rcr
pop
jmp
test
cmp
subb
insl
mov
imul
adc
sub
push
or
sub
and
ret
cmp
mov
jbe
inc
and
cmp
fwait
cmp
mov
call
xchg
fwait
adc
jecxz
push
xchg
or
out
out
movsb
mov
roll
or
in
cmpsb
test
pop
test
jmp
jne
arpl
jae
inc
pop
ljmp
push
cltd
mov
mov
xchg
sub
lds
dec
push
addr16
mov
pop
mov
jns
mov
pop
repz
mov
jl
test
jge
cmpl
in
pop
cltd
and
sub
call
lods
js
movmskps
jbe
dec
popf
mov
jp
adc
in
lods
popa
lods
iret
pop
test
mov
gs
in
repz
fidivrs
jno
pop
jns
cmp
push
in
ficoms
adc
mov
gs
xchg
sti
jmp
icebp
pop
push
into
out
xchg
inc
jge
ds
out
adc
sbb
add
dec
pop
jnp
push
fsubrp
stc
mov
daa
jbe
jns
in
es
pushf
jmp
loope
jg
add
jne
sub
mov
xchg
hlt
dec
sub
xlat
push
call
xor
cwtl
mov
jmp
imul
push
adc
std
js
aam
pop
cmpsl
adc
ficoml
ret
mov
pop
add
int3
pop
ja
cmp
sub
stc
push
push
xor
addb
loope
pop
cs
or
inc
inc
movzbl
dec
movsl
jae
mov
dec
jbe
push
add
adc
mov
int3
xlat
mov
xchg
mov
sub
or
fwait
shrl
inc
mov
mov
psubusb
mov
push
adc
inc
jno
pushf
mov
std
mov
clc
add
sub
jge
mov
icebp
xchg
pusha
sub
scas
sub
rcll
xor
mov
push
mov
inc
lea
lods
sbb
out
into
out
ja
xchg
shll
jo
mov
leave
cltd
xchg
clc
in
lods
nop
out
test
mov
inc
sub
mov
add
aad
jge
repnz
ds
repnz
dec
adc
mov
dec
adc
outsb
loop
out
or
loope
jns
addl
inc
xchg
mov
lret
jge
and
sti
dec
jp
outsl
or
leave
addl
xor
push
or
jle
sub
xchg
adcb
xchg
cltd
mov
testb
or
dec
push
mov
ficoml
pop
jecxz
adc
mov
add
out
test
test
insb
cmp
xor
lret
xor
rcrl
aaa
das
in
cmp
rorw
int
int3
in
or
inc
movsb
test
out
and
pop
mov
xorb
loop
in
jns
bound
add
sub
pop
loop
push
fstl
sbb
out
or
sub
push
shll
insb
pop
jp
adc
sub
add
xchg
sbb
repz
leave
cmp
rcrb
xchg
cs
testb
xor
psubsw
adc
mov
sub
cmp
cmp
jne
ret
xor
nop
mov
sub
mov
mov
inc
in
repnz
popa
jge
movsb
iret
jbe
clc
pop
push
inc
xor
adc
and
xor
adc
movsl
push
add
mov
fisubs
fsts
pop
push
aam
sbb
cmpsb
popa
xchg
hlt
jmp
xor
shlb
les
mov
push
inc
xchg
cwtl
fidivs
outsl
push
stos
out
outsb
mov
mov
into
mov
xchg
mov
out
lds
pop
mov
cwtl
sbbl
lret
adc
sahf
ds
push
xchg
push
loope
icebp
jle
dec
rcrl
scas
xor
popa
out
jno
inc
into
push
fisubs
push
xchg
push
loope
icebp
jle
dec
rcrl
scas
xor
popa
out
jno
inc
into
push
fisubs
mov
inc
dec
adc
xor
popa
out
popa
incb
mov
fisttpl
mov
loope
loope
rorl
and
adc
push
data16
add
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
ret
cmp
insb
jecxz
repz
pop
cld
or
inc
js
cmpsl
arpl
add
fdivl
int3
ret
cmp
sub
sbb
or
jl
insb
mov
mov
jge
add
and
and
xor
ficompl
jmp
lcall
jle
mov
or
add
fs
js
insl
jecxz
test
jae
xchg
fbstp
aaa
test
ljmp
loopne
and
xchg
sub
fwait
push
xchg
out
mov
jp
lahf
arpl
mov
push
int3
cmpl
mov
inc
nop
pop
xchg
sub
mov
add
out
adc
or
or
cmp
sub
sbb
or
push
mov
enter
push
arpl
test
xor
outsb
loope
repz
mov
popf
inc
mov
lahf
xchg
sti
bound
sti
xchg
adc
fmull
xor
movsb
imul
push
sub
dec
mov
dec
and
inc
xchg
inc
test
or
repz
jl
insb
mov
mov
push
sbb
or
cmp
xor
scas
cmp
inc
xchg
pusha
lock
add
sub
fcoml
cmp
out
add
pop
movsl
lods
jp
push
outsl
andl
xchg
mov
fnsave
fldenv
xor
mov
mov
pusha
lret
xor
dec
inc
mov
jae
add
adc
and
xor
ret
cmp
sub
sbb
or
jl
insb
mov
mov
jae
add
adc
and
xor
ret
cmp
jp
popa
and
sbb
mov
repz
or
inc
push
imul
dec
or
jb
mov
add
adc
flds
arpl
or
jg
aaa
test
outsl
xor
outsl
sbb
enter
xchg
mov
ljmp
ds
out
cltd
sahf
jae
push
loope
mov
jne
pop
push
mov
push
jbe
sub
fsts
or
dec
push
jp
cmpsl
adc
loope
mov
xchg
pop
in
addb
lds
dec
cld
in
push
sub
and
jb
or
arpl
pusha
cld
movsbl
xchg
ljmp
mov
nop
ss
loop
adcl
fisttpll
mov
sub
aad
int3
xchg
sbb
addr16
lahf
clc
pop
push
adc
mov
js
cmpb
icebp
push
mov
popa
in
paddb
scas
aaa
xchg
std
dec
mov
inc
sbbb
push
in
rolb
lret
dec
cli
push
decb
call
cmpsb
add
or
fdivl
mov
stos
fisubl
jp
dec
pop
and
add
in
cmpsl
loopne
test
adc
push
cmp
xor
add
sar
inc
cmp
mov
lea
push
fwait
aas
data16
outsb
inc
ficoml
sub
inc
lret
rorl
ror
jmp
ja
dec
xor
gs
scas
dec
xchg
push
test
pushf
sbb
xlat
xlat
dec
scas
lea
push
aaa
sub
lock
notl
pop
push
mov
je
inc
jp
repz
pop
sbb
mov
sbb
adc
or
inc
or
cld
inc
addr16
cmp
in
cmpsl
aas
sub
mov
xchg
mov
mov
jno
jnp
mov
sbb
movsb
or
call
fldl
cli
adc
cwtl
test
sub
pop
xchg
fisttpl
mov
add
or
in
adc
fbld
and
sub
xchg
int3
jns
inc
pop
sbb
loop
sub
jb
pop
xchg
mov
rol
sbb
push
xchg
fs
and
popf
cmp
xor
cwtl
int3
mov
push
lahf
into
sbb
xchg
sub
inc
mov
xchg
xorb
mov
dec
or
push
sbb
out
js
or
sub
lret
mov
push
pop
cmp
dec
push
add
aaa
push
cmpsb
jg
jp
or
test
mov
inc
fwait
sbb
push
add
scas
les
in
ret
fs
pop
jns
push
jo
cld
ret
cmpsl
sub
hlt
xchg
inc
mov
cmpsl
and
cmp
xchg
mov
js
pusha
rcrl
push
sub
fnstsw
cmp
aam
int3
gs
mov
loopne
push
mov
sub
ret
frstor
xchg
lahf
fsubr
mov
ret
out
jbe
lcall
push
movsb
xchg
push
shrb
mov
mov
add
shlb
repnz
fucomp
xor
sbb
in
xchg
push
xlat
andl
or
mov
fs
mov
jecxz
cmp
test
inc
lea
sbb
call
cmp
cmp
out
and
mov
cwtl
into
jge
imulb
inc
add
add
cmp
mov
push
add
fisttps
cmp
xor
cmpsb
daa
sbb
imul
popf
jns
or
sarl
push
cli
es
or
jne
cmc
imul
popw
lods
fs
adc
sbb
fst
xchg
pop
cli
fstps
jmp
scas
fwait
add
add
decb
xchg
cltd
repz
cmpsb
and
cmp
sbb
in
and
insb
adc
add
jg
sbb
loop
sbb
imul
sub
lock
int3
pop
jae
or
out
mov
mov
imul
ss
jno
jae
sti
adc
cmpxchg
add
inc
pop
add
in
repz
xchg
cmp
mov
push
repnz
inc
cmp
loope
adc
jns
jb
sub
pusha
xchg
fidivrl
ret
jo
sbb
dec
fldl
sbb
mov
inc
mov
scas
fs
pop
fucom
call
enter
dec
aam
jno
loopne
and
ret
cld
in
hlt
stc
arpl
lahf
jno
xorl
xchg
lcall
in
out
mov
inc
add
dec
data16
mov
xor
enter
mov
js
sbb
test
repnz
shr
js
insb
into
sub
adc
inc
mov
andb
xchg
pusha
mov
mov
dec
aad
movsl
lret
sbb
in
jmp
xor
movsb
stc
mov
xor
sarl
jnp
clc
xchg
sar
adc
mov
inc
repz
mov
ss
test
add
mov
and
jo
jge
cmc
mov
movsl
in
aad
xor
sub
xor
jecxz
dec
push
sbb
testl
xchg
mov
mov
dec
mull
push
mov
cs
bound
jns
xchg
inc
fistps
mov
loop
push
bound
loop
mov
or
je
data16
xchg
cli
adc
in
mov
sbb
sub
int
add
xor
add
addl
nop
rcll
out
mov
pop
mov
xchg
shlb
orl
push
enter
fdivrl
cmc
adc
push
xchg
mov
ffree
mov
sub
jno
sub
xchg
pop
imul
push
xor
lock
xchg
int3
gs
pop
test
mov
scas
inc
pop
mov
lcall
lods
inc
cltd
mov
aam
push
sub
insl
mov
stos
jmp
or
mov
lahf
mov
lds
shrb
xor
mov
in
xchg
jmp
push
lahf
packsswb
popf
imul
mov
insl
and
pop
jno
insb
jae
mov
in
pop
repnz
stos
add
in
push
shll
adcl
test
mov
jnp
cmp
jae
mov
cmp
ret
pop
xorps
cmp
cli
aam
lds
movsb
sub
je
call
push
in
fdivrs
pushf
push
hlt
push
outsl
imul
int
cmp
mov
mov
into
sbb
shlb
mov
push
outsb
pop
and
daa
inc
mov
cmp
stos
push
out
cmp
scas
out
ss
fs
decb
xor
lea
stos
mov
xchg
and
pop
insb
js
push
xchg
je
ds
mov
icebp
shll
and
data16
and
and
cmpb
dec
and
sar
push
jmp
std
pusha
fcompl
cmp
mov
and
outsb
dec
adc
mov
int
fwait
xchg
loop
scas
jne
popw
cmp
mov
and
aas
sub
iret
push
jno
imul
imul
xor
adcb
ds
sub
adcl
outsl
mov
lret
fs
jecxz
stc
cmc
pusha
aam
ss
lock
sub
addl
or
push
xor
inc
dec
mov
sub
mulb
aad
ret
xchg
pop
ret
jle
xor
cwtl
push
int
dec
sbb
vmread
or
test
cmpb
mov
push
inc
cmpb
inc
xchg
pop
pop
lret
add
adc
or
xchg
xor
je
mov
lahf
dec
leave
icebp
lock
xor
ja
jmp
pop
lock
sub
xorb
add
mov
fld
or
ljmp
jecxz
cmp
jne
movsl
mov
lds
sahf
movsl
loopne
outsb
loope
mov
movsl
add
stc
mov
sbb
into
fists
cs
mov
mov
ljmp
aam
inc
arpl
ret
mov
cmpsb
lret
mov
sbb
fmuls
adc
push
add
mov
or
js
pop
or
sahf
mov
int3
push
sbb
hlt
bnd
pop
or
adc
mov
cmp
gs
mov
clc
test
std
cmc
mov
pop
rclb
lahf
dec
std
push
mov
rcrl
push
out
mov
xchg
mov
sbbb
xchg
inc
dec
cmp
cmp
mov
mov
add
sbb
mov
lods
andl
scas
les
inc
jle
lods
les
sub
movsl
jae
add
dec
popl
aaa
out
pop
jg
mov
daa
and
xor
adc
xchg
or
push
loope
xchg
fidivrs
mov
jno
icebp
xchg
xchg
sub
fwait
xor
xchg
sub
out
es
test
imul
fdiv
jnp
sbb
bound
lock
push
inc
xor
out
mov
lcall
sub
es
mov
or
in
jb,pt
add
loope
out
dec
and
mov
cmp
adc
sbb
and
imul
fdivl
adc
pushf
push
pop
pop
pop
in
shll
stos
or
scas
cli
xorl
nop
mov
adc
pop
sbb
out
or
loope
sbb
push
rol
fdivs
and
and
mov
dec
imul
enter
mov
and
scas
jle
shl
xor
icebp
fmull
xsavec
jns
inc
and
shlb
push
test
pop
enter
xor
clc
movsl
outsb
adcl
sub
ds
decb
fs
divl
pop
lds
cwtl
daa
add
aas
fcom
pop
adc
jl
movsl
sahf
ljmp
enter
mov
ljmp
lock
ret
and
inc
mov
es
sub
jns
mov
repz
inc
pushf
add
jno
dec
mov
push
cmp
movsl
shl
js
je
std
push
mov
pop
cld
push
subb
lcall
adc
cmovbe
cli
insb
cld
push
clc
xchg
fcomip
movsl
add
jle
lds
lcall
jno
adc
push
fwait
xor
xor
adc
and
into
xchg
sub
and
push
sub
addl
jl
lahf
lcall
mov
aad
jmp
pop
mov
mov
mov
aad
shll
pop
bswap
adc
out
fcompl
fnstcw
ljmp
ret
jl
imul
mov
cld
nop
call
rcrb
das
jno
sahf
cwtl
sbb
out
movsb
mov
push
inc
mov
mov
in
nop
sbb
ss
and
leave
sahf
inc
mov
push
and
in
test
shlb
push
sub
fdivrl
mov
lods
push
sbb
mov
dec
daa
xchg
dec
fwait
xchg
test
push
outsl
adc
scas
or
pop
mov
mov
ja
jns
enter
dec
push
pop
xor
insl
movsb
sub
add
push
mov
jecxz
mov
movsl
mov
in
cmpsb
mov
push
push
xor
shlb
pop
push
mov
loope
mov
mov
mov
or
lret
cwtl
mov
and
cmpsb
out
xor
lods
lods
jecxz
fadds
fcmovne
push
out
arpl
mov
stos
je
lock
xchg
loope
add
nop
inc
push
jo
dec
test
test
mov
xchg
add
xchg
jmp
sub
arpl
repz
pop
stos
lret
jecxz
pop
jp
inc
mov
lods
pop
out
push
dec
data16
pop
pop
mov
jg
mov
das
or
imul
xor
hlt
movsl
inc
fs
mov
jo
cli
shlb
mov
mov
testl
fisubl
shlb
and
inc
jge,pt
iret
inc
and
cs
mov
jno
lret
mov
mulb
push
ficomps
pop
mov
les
mov
mov
adc
add
rol
jge
aam
and
add
cmp
fwait
repnz
cmpsb
cli
cmp
adc
cmp
jle
dec
mov
pop
shll
mov
jae
cmp
push
mov
in
cwtd
push
in
cmc
cmpsb
outsb
sub
sbb
mov
add
stos
cli
sub
ss
pusha
and
add
ljmp
js
pop
in
outsb
es
ja
push
fimull
test
ret
fiaddl
jecxz
mov
decb
add
pop
push
rorl
cs
aad
mov
imul
adc
jg
fs
icebp
sub
fiaddl
popf
mov
pop
pop
and
mov
or
hlt
inc
xchg
pop
adc
aas
test
fs
pop
xchg
xchg
xchg
cmp
movsl
pop
lods
fldt
mov
pop
lahf
xchg
cmp
adc
adc
mov
mov
fisttpll
mov
and
mov
jne
sub
stos
sbb
shrl
jg
rorl
or
push
stos
push
push
fisttpl
shrl
mov
add
xor
xchg
test
iret
push
jg
insl
sarl
insl
jp
nop
mov
iret
adc
pop
scas
jno
fbstp
add
adc
xor
jno
negl
jnp
je
out
cmp
out
lret
pop
aam
data16
xor
adc
add
popf
or
mov
xor
das
test
mov
fcmove
out
sub
addl
xchg
sbb
and
mov
negb
mov
int
rolb
mov
push
movsb
inc
inc
jo
in
stc
cmpsl
daa
add
jb
xchg
cs
push
movsb
sub
jl
mov
cmp
inc
int3
add
cmp
and
inc
inc
inc
and
sbb
xchg
ds
addl
idivl
jl
sahf
pop
into
dec
mov
jne
out
mov
fistpll
dec
scas
std
jecxz
fsubrl
inc
iret
jg
popa
or
mov
jmp
stos
mov
js
adc
jb
subl
pusha
pop
push
mov
sbb
push
leave
fcoms
arpl
sub
xor
shl
jns
jae
xchg
sub
shr
cld
pop
jnp
sub
cwtl
mov
and
jle
data16
cmpsl
jmp
loope
repnz
fldenv
scas
mov
inc
les
lock
cmp
mov
push
cltd
mov
movsl
jmp
xor
out
test
mov
push
out
cmpsl
outsl
pop
jo
mov
testl
xchg
push
xor
pop
cmp
cmp
mov
fimuls
add
push
xor
xor
pusha
xchg
ss
sub
pop
fwait
push
jle
cmp
or
insl
dec
sub
mov
insl
jno
pop
inc
dec
adc
push
clc
addl
lds
lods
sbb
mov
scas
jns
aaa
ja
outsl
fstps
lock
dec
in
jle
pop
adc
lahf
lea
and
leave
out
xchg
aam
into
gs
cmpsl
roll
sub
pop
xchg
aaa
negl
add
inc
cli
or
lahf
jl
movsl
and
xor
push
ljmp
cltd
pop
shll
lret
repz
mov
add
or
out
push
or
mov
inc
scas
cltd
sahf
mov
out
mov
aas
xchg
scas
inc
xor
gs
hlt
push
mov
or
dec
jbe
dec
adc
out
add
add
out
inc
pop
testb
cmp
mov
fcoml
in
lods
mov
xor
sbb
mov
or
mov
int
sub
and
jb
iret
lahf
iret
mov
jp
stc
mov
dec
push
leave
push
cs
mov
ret
loop
and
and
mov
cs
and
repnz
and
or
loope
in
outsb
call
jp
hlt
and
les
push
ffree
push
loope
add
xchg
jl
jmp
cmp
pop
add
xlat
push
int3
popf
or
insl
je
outsb
mov
cmpsl
jns
lods
or
inc
adc
sbbb
sub
pop
jne
leave
push
ficomps
sarb
push
inc
fidivrl
inc
xor
inc
in
mov
cmp
mov
imul
inc
xchg
dec
fwait
imul
sub
push
lds
dec
add
adc
xchg
push
sbb
push
push
cmp
pop
mov
sub
push
mov
movsl
add
fstl
adc
cmc
je
gs
mov
push
outsl
fwait
in
bound
pop
movsl
jle
mov
sub
shll
cli
push
mov
clc
loop
addr16
leave
scas
test
dec
cmp
out
and
outsb
std
stos
ret
psrlq
mov
add
lds
cmp
inc
dec
bound
cmp
gs
je
int
hlt
cmpsb
ljmp
pusha
cltd
mov
sbb
popa
dec
jecxz
popa
push
lret
in
mov
sbb
nop
sub
fs
out
add
lret
and
shlb
daa
mov
or
xor
clc
ss
clc
or
or
test
sbb
es
and
fisttpll
xchg
or
pop
cmp
mov
sub
fisubrl
mov
pop
or
adc
push
mov
sub
enter
sub
rolb
cwtl
jne
xchg
add
xlat
inc
xchg
mov
dec
and
xor
stc
loope
jns
xchg
jge
out
pop
incb
movsb
xchg
push
loop
imul
push
cmpsl
cmpsl
sbb
clc
xchg
pop
dec
andb
jle
repnz
or
mov
add
mov
js
dec
repnz
popf
xchg
mov
dec
cld
out
sbb
roll
aam
in
lods
inc
jl
lret
testl
adc
cmpsb
bound
adc
sti
aas
imul
push
int
lock
insl
enter
es
rolb
xchg
jno
ljmp
xchg
xchg
bound
dec
or
hlt
stos
scas
adc
adc
mov
mov
cmpsb
jne
sbb
or
inc
addl
or
roll
pop
in
imul
pop
dec
xor
mov
leave
push
pop
mov
and
insl
scas
sahf
cld
sbb
repz
pop
xor
out
xor
subl
jg
mov
jmp
inc
popa
jno
ret
mov
cmp
ret
dec
and
iret
pop
cmp
adc
add
cwtl
mov
push
ds
lret
lods
jp
pop
pop
loope
xor
leave
adc
out
sbbb
sub
dec
add
adc
data16
sbb
mov
mov
pop
jge
dec
fdivp
pop
fimuls
inc
aas
adc
mov
sbb
push
or
and
movsl
push
dec
icebp
dec
push
stc
aaa
push
mov
mov
pop
stc
aad
xor
aam
rcrl
jle
dec
push
sbb
adc
das
gs
mov
loope
mov
xor
inc
and
and
cmp
stc
dec
inc
jecxz
and
movsb
fnstsw
icebp
mov
xchg
mov
imul
sti
testb
and
out
andl
aad
mov
lea
stc
decl
push
jnp
mov
andl
test
push
push
lret
aaa
out
inc
int
adc
sub
xor
mov
inc
mov
jl
call
cli
pop
jo
lret
aaa
jp
add
scas
daa
push
ss
aas
push
mov
nop
add
sub
inc
sub
mov
mov
adcb
out
xor
and
pop
dec
push
and
xchg
mov
ljmp
xchg
xchg
jle
jne
aad
stos
cmc
mov
or
inc
das
mov
mov
mov
aaa
sbb
adc
imul
cmp
repz
insl
das
inc
bound
sbb
or
mov
adc
cmpl
icebp
jns
xchg
pop
dec
mov
mov
mov
test
xchg
pop
dec
mov
adc
cwtl
sub
lcall
movsb
inc
xor
movaps
push
daa
subb
pop
or
push
lock
mov
inc
and
and
fcompl
xor
add
iret
push
notb
mov
jg
pop
inc
loop
fistps
stc
decb
call
enter
ja
jp
jns
dec
pop
loop
test
jne
test
mov
addr16
mov
lret
xlat
lods
outsl
cmp
out
dec
sti
xchg
outsl
mov
jmp
jl
insb
mov
mov
jae
add
adc
and
xor
ret
cmp
sub
sbb
or
jl
insb
mov
mov
jae
add
adc
and
xor
ret
cmp
and
add
or
pop
mov
inc
mov
jae
add
adc
and
xor
ret
fcom
enter
dec
cmpl
mov
pushf
jae
je
fwait
xchg
fsubl
sub
sbb
or
adc
aaa
pop
dec
movsb
pop
mov
xchg
imul
leave
xlat
leave
daa
cmp
sub
sbb
or
ja
inc
pop
push
sub
mov
xchg
mov
pushf
imul
leave
daa
cmp
sub
sbb
or
ja
inc
pop
push
dec
cmpsl
mov
repnz
mov
mov
pop
pop
dec
jle
push
pop
fmull
pushf
push
ret
push
jl
das
es
or
clc
jae
test
ja
mov
test
push
mov
popa
xchg
insl
lret
pop
into
xor
mov
mov
adc
push
jl
inc
push
xlat
add
les
pop
vmread
test
pop
push
or
lods
pop
leave
je
mov
and
add
repnz
xchg
inc
mov
mov
mov
sub
pusha
iret
aas
cmp
ss
loop
roll
loopne
repnz
ja
std
jbe
call
aad
in
aaa
sub
sbb
or
ja
inc
pop
push
dec
cmpsl
mov
xchg
mov
stc
imul
popl
push
push
inc
pop
push
dec
add
sbb
xlat
leave
shlb
popa
lea
lods
push
push
inc
inc
fs
push
push
cmp
add
adc
xchg
fistl
pushf
xchg
jg
mov
aaa
jp
jl
jno
dec
ja
inc
pop
push
dec
cmpsl
mov
xchg
mov
stc
imul
leave
daa
cmp
sub
sbb
or
ja
inc
pop
push
dec
cmpsl
mov
xchg
mov
stc
imul
leave
daa
cmp
lcall
ljmp
fs
jmp
pop
into
lcall
faddl
xor
ja
in
ja
mov
lods
lahf
xchg
pop
les
js
dec
pop
sub
and
stc
pop
lret
xor
out
adcl
jno
sbb
xchg
cs
push
inc
mov
hlt
int
in
bound
pusha
lock
add
testl
out
fisubl
dec
push
sbb
cwtl
lcall
ds
int
pop
sub
dec
lods
iret
out
pop
mov
xadd
jno
mov
dec
icebp
jbe
shl
fstl
hlt
pusha
popa
mov
movsl
mov
jmpw
mov
push
jne
jp
pop
mov
or
jo
ja
outsb
pop
in
into
sbb
mov
addr16
stc
addr16
lea
rcll
insb
in
aad
outsb
pop
pop
idivb
iret
das
lock
ja
ds
mov
ljmp
hlt
mov
cmp
rdpmc
jo
nop
scas
jmp
mov
jecxz
sti
cmpb
xor
in
sub
enter
insl
iret
or
repz
repz
fisubl
dec
mov
mull
cmp
cmpb
cmpsl
scas
out
andl
jo
mov
sti
jp
dec
loop
xchg
mov
addr16
and
dec
adc
ret
jne
frstor
fadds
shl
aad
pop
pop
jns
dec
inc
ret
sub
dec
dec
cmpsl
dec
xor
aam
pop
mov
mov
inc
andl
cmp
sahf
ret
and
pop
es
dec
push
inc
push
pop
inc
imull
lods
das
inc
mov
or
jnp
in
sub
pop
arpl
xchg
dec
jne
nop
dec
shll
inc
mov
ret
shlb
movsl
stos
cmpsb
inc
dec
and
idivl
xor
ficompl
insb
xor
lods
hlt
mov
hlt
cwtl
je
sub
jno
lcall
mov
out
cmp
pop
fcoms
out
data16
adc
push
decl
pop
sub
in
and
jne
sub
fldl
and
push
out
mov
push
dec
push
add
out
xor
stc
andb
clc
sub
add
dec
and
mov
addr16
mov
stos
mov
pop
gs
cmp
ljmp
jno
and
pop
push
ds
mov
lea
jbe
mov
mov
outsl
and
pop
inc
popf
pop
sbb
sbb
insl
xor
inc
das
adc
stos
and
lahf
shll
outsl
mov
subl
ficoms
adc
sub
jno
push
jo
xchg
xor
sub
lahf
xchg
cwtl
lret
pop
sti
orl
scas
shrl
loope
mov
iret
std
test
test
fstps
adc
test
popa
insl
adc
out
in
aad
std
cmp
mov
call
sub
andl
pop
shrb
xchg
add
jbe
out
mov
dec
sub
jl
xchg
repnz
test
lea
inc
mov
lcall
ror
cld
sti
sub
shll
fstpl
in
mov
adc
aaa
mov
cmp
fldcw
mov
pop
icebp
or
fwait
sbb
in
or
add
arpl
mov
sub
push
jp
xchg
and
xor
imul
dec
ljmp
mov
cwtl
nop
cmp
xlat
addr16
aas
aam
add
mov
bound
mov
jbe
pushw
test
pop
jo
iret
jecxz
lock
test
pop
mov
pop
in
dec
test
mov
jmp
enter
mov
xchg
sbb
inc
mov
je
mov
fbld
jmp
int3
out
test
dec
pusha
mov
lods
dec
mov
push
rcrb
dec
xlat
push
add
clc
aam
adc
mov
pop
jmp
stos
jp
inc
loop
sub
mov
inc
xchg
sbb
add
xor
xchg
jb
jbe
adc
mov
or
movsb
loop
jl
jge
jb
loopne
loop
outsb
in
pushf
jo
outsb
aas
stos
fbld
movsb
cmp
lea
fdivrp
add
pop
movsb
xchg
movsb
stc
push
inc
fcomi
xor
inc
dec
mov
mov
xchg
mov
loop
inc
add
sbb
add
adc
cmp
push
call
mov
adc
and
add
cmp
pop
push
data16
jnp
inc
push
movsl
outsl
add
es
and
xor
lods
sub
call
or
aad
rcrl
push
imul
jmp
push
pop
jl
cmp
jmp
cmpsl
ss
cmpsl
outsb
imul
or
vpmaxsw
ja
aam
dec
rcl
lods
iret
pop
fmulp
sbb
cmp
addr16
test
add
fdiv
inc
cmpsw
test
lahf
mov
and
loopne
cmpsb
mov
cmp
insb
out
adc
push
push
cmp
push
jb
int
loope
mov
imulb
adc
dec
inc
and
out
push
dec
adc
xor
push
xor
or
add
mov
inc
mov
or
sbb
inc
inc
mov
hlt
es
sahf
sub
xor
inc
adc
decb
pop
jno
loopne
xchg
cmc
jno
xchg
mov
or
iret
lods
cmovbe
int3
xchg
daa
adc
xor
mov
nop
and
inc
jo
inc
mov
push
push
fisubs
jne
imul
jmp
push
pop
repnz
xor
fcmovnbe
cmc
rorl
dec
push
fcmove
fisubrs
pop
sar
clc
jnp
push
xor
dec
sub
xchg
mov
cmp
inc
add
sbb
mov
xor
pop
jg
in
pusha
out
pop
jle
mov
iret
cmp
add
adc
pop
stc
mov
shrb
insb
jbe
std
bound
and
lds
mov
add
fcmovnbe
int
dec
jg
cltd
cmp
xor
sub
mov
in
mov
pop
aad
fs
xchg
mov
les
or
lcall
ds
notl
push
test
cmp
inc
jmp
movl
mov
das
cwtl
call
mov
sbb
jmp
enter
pushf
pop
pop
adc
cmp
jae
mov
lret
lahf
dec
add
mov
sub
lret
in
mov
mov
fistl
inc
bound
arpl
mov
in
xor
in
daa
and
pop
xchg
outsl
pop
adc
mov
test
jmp
in
and
das
ja
in
mov
flds
scas
xor
mov
xor
stc
lret
ret
add
cmp
inc
cmp
fidivs
mov
push
sub
dec
out
add
push
cmpsl
stos
aam
or
test
jg
pop
or
lret
adc
and
mov
mov
lds
xor
mov
aam
cmp
fbstp
push
mov
xor
lods
int
lcall
sub
push
mov
inc
or
add
stos
lret
cltd
xor
adc
xchg
adc
add
imul
nop
ja
imul
add
dec
cmp
mov
sub
outsb
inc
pop
arpl
xorl
jne
sbb
cmpsl
mov
sti
xor
loopne
inc
popa
jno
or
jg
bound
push
pop
lds
je
and
jno
inc
pushf
xchg
or
imul
dec
ret
sub
mov
iret
sbb
mov
xchg
orb
cmp
dec
sub
add
js
lcall
xchg
movsb
sbbl
arpl
lock
ja
in
fstpt
and
cmpl
divl
pushf
stos
aad
mov
cmp
in
rcll
lock
xchg
cwtl
cld
pop
or
in
iret
add
ss
cmp
sbb
jl
lock
pop
pop
mov
cmp
xchg
fldt
les
pusha
popa
xor
xchg
mov
jecxz
pop
mov
pop
stc
ds
imul
clc
xchg
faddl
xchg
sarl
or
leave
push
pusha
jno
or
aad
mov
mov
stos
ds
out
xor
int3
xchg
push
sbb
gs
leave
and
les
jb
mov
lock
jno
loop
pop
addl
int3
decl
repz
or
clc
pop
mov
push
sbb
iret
jp
mov
inc
xor
or
loopne
mov
or
cltd
pop
shrl
inc
es
data16
pop
jl
aas
imul
sbbl
pop
push
mov
orb
clc
ret
scas
test
jne
sub
loop
repz
lcall
mov
imul
mov
mov
sbbb
int3
ds
mov
roll
sbb
pop
popa
pushf
scas
or
dec
inc
in
mov
outsl
iret
and
xor
popa
xor
jnp
out
cmp
int
mov
xor
jp
lret
inc
pusha
inc
sub
ja
shlb
ljmp
rolb
mov
outsl
jecxz
inc
jbe
imul
jbe
xchg
stos
out
sbb
ja
adc
test
fcompl
mov
xor
fstpl
or
aad
int3
cmpsb
aam
add
lea
out
mov
push
push
inc
sub
and
add
lock
pop
push
dec
mov
outsl
mov
bound
mull
pushf
and
pop
out
xor
xchg
cld
push
pop
pop
sahf
adc
mov
stos
cmp
js
out
and
add
mov
fs
data16
in
mov
adc
std
out
jns
pop
or
aas
mov
inc
aam
mov
mov
pop
leave
fidivrl
xor
sbb
jg
out
popa
mov
mov
int
push
nop
jnp
in
mov
addr16
adc
sub
cmp
loope
mov
push
mov
jle
mov
jl
mov
insb
jecxz
xor
ljmp
dec
adc
add
js
jb
jae
movsl
aaa
mov
push
dec
mov
pop
repnz
sti
add
pop
shll
gs
mov
pop
push
nop
ss
incb
icebp
sbb
jl
xchg
push
adc
mov
mov
fldt
cmpsb
push
mov
cwtl
stos
movsl
popf
call
mov
xchg
stos
jb,pt
sub
in
pop
push
cmpsb
mov
pop
hlt
mov
dec
mov
push
or
mov
cwtl
pop
cmp
loope
stc
inc
testb
sahf
loopne,pn
pop
ficomps
sbbl
sti
jno
movhps
leave
cmp
mov
add
fstp
add
jg
mov
mov
mov
rclb
mov
add
js
mov
pop
or
cwtl
sbb
push
pop
out
outsl
ja
rep
and
aas
mov
push
stos
call
lds
imul
jl
sbb
ljmp
mov
push
mov
mov
push
cmpl
fcompl
jmp
cmovnp
repz
xchg
inc
out
jmp
andb
pusha
outsb
enter
jno
xor
lea
adc
orl
ret
lock
ja
sbb
mov
xlat
sbb
ret
push
adc
mov
div
mov
aas
dec
outsb
bnd
iret
mov
roll
aas
scas
insb
lock
iret
pop
mov
mov
hlt
mov
cmp
into
es
pushf
push
jns
pop
jecxz
mov
pop
cmc
pop
repnz
loope
fadds
jp
cmpsb
cmp
sub
xchg
iret
inc
movsb
mov
mov
fucom
inc
inc
mov
out
and
lea
xchg
fnsave
in
pop
push
dec
xchg
xchg
add
loop
in
loop
xchg
subb
dec
in
int3
dec
adcb
int3
andps
fisubl
in
push
in
mov
add
sub
mov
pop
xlat
iret
call
adc
sub
inc
and
mov
adc
int
add
sbb
out
ret
pop
jno
shll
stc
aam
ja
pop
cmp
xchg
cmp
repz
rolb
pop
add
movsl
addl
outsb
std
leave
lret
sub
outsl
in
xchg
rorb
push
je
jo
stos
sub
push
les
sub
jb
ret
gs
aam
adc
mov
cwtl
add
mov
cmp
repnz
cmpb
ljmp
dec
inc
cmp
and
jg
outsb
ftst
sbb
insb
cmpsl
and
cmpsl
or
call
shrb
adc
adc
xchg
mov
jle
out
sub
pushf
sub
cmp
mov
jp
movsb
rorl
xchg
cltd
ret
arpl
inc
aas
or
daa
mov
sbb
sub
iret
or
mov
ret
mov
into
pop
mov
sbb
inc
sub
out
mov
cmp
fmull
popl
test
push
xchg
scas
cs
or
sbb
inc
sub
inc
lds
cmp
xor
jnp
xchg
push
cmp
fdivrl
jmp
int3
mov
push
mov
ret
push
je
pushf
out
fstpt
xorl
idivl
out
xor
xor
fsubl
lea
scas
pop
pop
pushf
in
test
dec
mov
jl
gs
sub
xor
or
hlt
enter
ja
out
xchg
adc
scas
mov
push
in
cmpsl
in
mov
lock
dec
fistpll
aam
fsts
and
jne
xchg
xchg
pop
and
fmuls
cmpsl
in
sub
add
daa
insl
and
out
mulb
sbb
jno
int3
or
add
inc
and
or
mov
mov
pushl
or
or
pushf
cmp
mov
push
xchg
adc
sarl
fdivl
sbb
pop
inc
dec
xor
add
scas
sbb
mov
pop
sub
mov
jge
lds
inc
dec
dec
sbb
outsb
out
adc
adc
mov
mov
jle
sub
pushf
inc
cmp
lods
adc
cmpb
das
cmp
adc
not
adc
or
cmp
nop
cmpsl
orb
in
jle
xchg
add
lret
test
push
clc
stc
xchg
mov
es
xchg
inc
xor
jmp
pop
fldl
jbe
push
cli
xor
arpl
iret
sub
push
popf
xchg
jp
push
cmp
sub
fcmovbe
stos
sub
adc
mov
cmc
mov
adcb
inc
ss
sub
mov
popa
sbb
pop
inc
or
push
cmp
imul
dec
movsl
insl
in
push
fs
lret
pop
fstpt
clc
pushl
mov
sbb
stos
push
dec
sbb
int3
mov
jbe
sbb
push
mov
cld
and
aad
ja
sbb
inc
and
mov
cmp
inc
mov
iret
ja
popa
insb
mov
fwait
sub
mov
or
je
xchg
dec
test
hlt
loopne
mov
lret
les
xchg
pushf
es
xchg
idivb
jg
mov
in
ret
sbb
mov
sub
fiadds
add
aad
imul
cmpsb
or
adc
sub
mov
test
roll
iret
jbe
insl
xchg
jmp
adc
cmpsl
in
jnp
sarb
mov
dec
addr16
push
in
xchg
dec
push
and
sub
movsb
sbb
xor
cmpsb
xor
int
mov
out
imul
cmp
mov
into
mov
ror
das
push
sahf
and
xchg
leave
leave
fs
pop
sub
sbb
bound
lret
mov
or
inc
testl
xor
jo
cld
sbb
adc
pop
dec
cmp
lret
mov
push
mov
ljmp
xchg
movsl
jne
or
and
mov
push
or
xor
inc
in
fsubrp
adc
lock
subb
pop
add
mov
mov
dec
cmc
imulb
aam
ds
leave
mov
dec
out
jb
iret
mov
dec
mov
cltd
divl
sub
fwait
out
imul
cld
cmc
or
pop
fcoml
test
daa
mov
cmpsl
scas
js
mov
cmp
aaa
mov
divb
inc
adc
loopne
enter
cmp
adc
test
jecxz
fnstenv
and
int3
pop
inc
inc
pop
mov
add
jns
and
lock
jp
out
insb
mov
add
pop
inc
sub
ja
sti
xor
cwtl
aam
std
jno
inc
jmp
ret
cs
mov
es
sahf
xchg
imul
repz
hlt
and
fcomi
jge
and
xchg
xorl
xor
or
andl
test
sbb
movsl
push
hlt
mov
jecxz,pn
fdivrl
mov
pop
xchg
popf
cmp
adc
sub
pushf
cs
lods
or
pop
aad
sti
xchg
dec
lods
int
adc
or
xor
dec
mov
cmpsl
out
sub
test
pop
das
sbb
popf
jl
bound
clc
call
xor
adc
lcall
cld
inc
mov
jbe
add
loope
cmp
dec
movsl
mov
fwait
fwait
pop
add
xorb
mov
icebp
mov
cmpsl
adc
adc
movsl
or
repz
aad
xor
sbb
lods
in
loopne
xchg
jb
jb
ret
and
lock
out
dec
jl
fstps
arpl
movsb
adc
nop
xorb
mov
add
push
push
xchg
call
mov
lahf
ds
icebp
mov
mov
es
dec
push
fucomi
lods
out
mov
pop
mov
cltd
mov
ljmp
jbe
sub
push
and
mov
fidivs
or
pop
fldl
dec
stos
xor
fisubl
xchg
mov
mov
mov
jb,pn
add
ret
gs
cmp
loop
add
and
repz
mov
inc
mov
out
pusha
adc
pop
push
ja
pop
sbb
mov
std
mov
mov
shll
fnstsw
arpl
arpl
insb
ja
cltd
dec
and
aaa
faddp
repz
mov
cmpsb
lock
fcomip
mov
mov
repnz
fldenv
fsubl
push
inc
lea
xor
imul
cs
mov
arpl
lret
sahf
loope
out
incb
sub
mov
loopne
dec
popa
imul
insl
adc
cmc
in
xchg
addl
jmp
or
aad
fs
popa
mov
sahf
xor
xor
fsubrs
dec
jmp
mov
xchg
fwait
or
rsqrtps
sbb
mov
fs
js
mov
stos
inc
xchg
gs
xor
int
cmp
enter
cltd
or
lahf
lret
mov
data16
inc
dec
push
rcll
pop
sbb
mov
add
push
mov
mov
outsl
mov
hlt
sub
hlt
ja
ljmp
cmp
push
mov
inc
out
imul
jle
xchg
inc
das
lret
cmp
call
mov
sub
sub
or
inc
adc
data16
add
pop
dec
push
adc
mov
aad
sub
adc
add
jns
test
push
cmp
icebp
out
adc
xchg
sbb
jge
scas
and
daa
out
jge
lock
aas
insb
pop
std
or
push
mov
adc
mov
std
ja
inc
ds
inc
inc
mov
adc
push
pop
lret
mov
jp
iret
addr16
push
stc
shll
inc
data16
xor
cmp
ds
leave
andb
mov
in
incl
outsb
inc
xchg
test
jecxz
je
xchg
adc
imul
add
data16
inc
addl
scas
xchg
xlat
enter
cmp
ljmp
in
push
iret
xchg
mov
cld
push
repz
fwait
cltd
js
mov
push
out
sbb
xchg
push
jmp
push
mov
imul
aaa
or
ljmp
push
in
int
cltd
cwtl
and
jbe
xchg
int
jl
or
mov
ss
cld
cmc
lods
push
inc
push
sbb
lods
fldt
test
and
cmp
movsb
pushf
mov
mov
adc
iret
pop
cli
fcomps
sahf
ffreep
aas
push
sbb
out
cmpl
ds
bnd
xchg
push
jp
mov
and
or
in
enter
adc
leave
pop
xchg
inc
daa
mov
pop
or
ja
inc
pop
push
dec
cmpsl
mov
xchg
mov
stc
imul
leave
daa
cmp
sub
sbb
or
ja
inc
pop
push
dec
cmpsl
mov
xchg
mov
stc
imul
leave
daa
cmp
sub
sbb
or
jbe
inc
pop
push
dec
cmpsb
mov
xchg
mov
stc
imul
leave
daa
cmp
sub
sbb
or
ja
pop
xlat
mov
dec
add
jno
push
aas
es
ss
enter
call
in
call
dec
dec
js
imul
cmp
sub
fcmovne
lret
clc
sti
call
mov
pop
dec
dec
js
push
or
cmp
sub
fcmovne
lret
clc
sti
call
mov
imul
or
sbb
outsl
dec
pop
inc
sub
lahf
test
push
pop
add
mov
xchg
icebp
jnp
cmp
sbb
shrl
sub
nop
roll
movsb
ljmp
inc
mov
mov
xchg
push
fisttpl
subb
xlat
mov
rcrb
int3
std
add
mov
sbb
js
test
dec
sbb
pop
les
sub
and
lret
call
fwait
cmp
push
add
lds
aaa
sbb
mov
in
std
mov
push
dec
std
xchg
dec
push
pop
aaa
xor
cli
arpl
xor
movsb
mov
imul
jge
test
adc
enter
call
mov
pop
dec
dec
js
push
or
cmp
insl
cltd
mov
sbb
hlt
cli
lret
stos
fistpl
sub
add
pop
mov
lods
sbbl
aam
stos
cmp
sub
fs
dec
pop
inc
mov
popl
mov
pop
dec
dec
js
push
or
cmp
sub
fcmovne
lret
clc
sti
call
mov
pop
dec
dec
js
push
or
cmp
sub
fucomi
fisubs
cmp
mov
das
inc
jns
jnp
push
sub
call
aaa
add
dec
add
ret
and
pop
ret
loope
inc
sbb
sbb
call
fnstsw
xchg
mov
fdivs
sbb
and
mov
jl
pop
cmp
aad
xchg
cld
xchg
xchg
dec
dec
pop
inc
int3
push
leave
dec
adc
loop
mov
ja
jp
adc
iret
imul
dec
inc
sti
dec
inc
cli
notb
pop
test
mov
push
mov
and
aaa
nop
xchg
aas
rorb
mov
out
sbb
inc
je
fsubrs
rcrb
mov
push
pushf
or
jno,pt
pop
inc
mov
xchg
rcrl
jae
je
and
mov
insb
imul
aas
cltd
sub
test
popf
jno
pushf
fmuls
std
ljmp
push
add
xchg
testb
xor
test
in
sub
add
hlt
scas
push
cld
mov
pop
shll
shr
adc
push
jb
and
mov
jae
lret
inc
xchg
aaa
sub
xor
test
decl
pushl
fstl
stos
or
loopne
fnstenv
sub
hlt
push
fwait
xchg
lods
mov
xor
inc
insb
add
and
mov
push
inc
add
insb
dec
not
adc
sbb
cmc
loope
mov
xchg
sbb
hlt
data16
mov
repz
in
xor
jb
dec
cli
cmp
ja
incb
add
incb
jns
jmp
fcompl
call
lret
push
jecxz
outsl
call
cli
rolb
movsb
xchg
inc
jle
jb
mov
repnz
push
xchg
imul
scas
xchg
jae
sub
into
arpl
sbb
insl
mov
add
stos
stos
sub
cmp
pop
dec
dec
dec
cld
mov
cmc
push
lea
mov
cmp
sahf
dec
ret
jp
scas
xor
sub
xchg
shlb
loop
jno
ficoms
subb
sbb
outsl
and
pop
jne
lahf
arpl
pop
test
out
je
or
pop
enter
inc
ret
hlt
ret
lea
sbb
push
inc
push
fists
popa
push
push
call
xor
pop
sbb
subb
push
inc
fwait
in
jnp
fcoml
fwait
scas
aam
xchg
adc
and
and
xchg
mov
mov
cmp
inc
lret
stos
push
enter
aaa
imul
pop
push
jo
push
mov
lcall
sbb
jno
out
mov
inc
mov
sbb
push
in
dec
xor
add
fsubs
adc
or
shll
hlt
pop
leave
arpl
outsb
sub
xor
sub
test
dec
subb
sbb
inc
mov
sarb
pusha
push
inc
fcmovne
push
add
cmp
xor
ror
jl
pusha
mov
ja
inc
stos
loopne
jb
cmp
enter
jae
fsts
ds
sbb
xorl
test
sbb
loope
push
or
hlt
divl
mov
aas
sub
adc
pop
jb
ret
and
jb
gs
mov
xchg
lods
jno
out
test
pop
xchg
and
ret
xchg
scas
mov
mov
ret
rorl
rcrl
mov
mul
mov
jg
outsb
adc
out
fisubs
gs
push
mov
xlat
mov
jle
dec
inc
addr16
mov
sbb
adcb
mov
loopne
mov
dec
loope
int3
xor
insb
sbb
xor
pop
pop
popa
repz
out
dec
adc
push
sub
mov
movsb
jne
mov
test
mov
clc
push
dec
jbe
sahf
push
jmp
push
sbb
pop
fstl
int
nop
adc
and
cld
adc
and
pop
push
lock
mov
cmpsl
push
cmp
jg
push
aas
cmpsl
mov
jmp
ret
out
xor
call
adc
adc
mov
aad
lcall
pop
jmp
xchg
sub
mov
cli
mov
mov
sbb
xchg
inc
bound
cmp
inc
aad
cmc
call
jno
lahf
mov
shlb
inc
into
xlat
pop
arpl
lahf
sub
dec
sub
push
mov
sub
inc
test
sub
add
movsl
shll
nop
mov
cmpl
in
adc
mov
lcall
or
movsl
or
add
dec
fldcw
mov
mov
lds
xchg
sbb
mov
lcall
inc
bound
in
div
jge
jecxz
rcrl
push
dec
lcall
lcall
push
aad
out
rolb
xor
push
cmp
adc
jecxz
test
cwtl
dec
cmc
jne
push
movsl
in
in
lea
ret
or
and
mov
mov
sbb
or
negl
fs
add
dec
cmp
cmpsb
add
scas
test
jl
jns
leave
pop
imul
vfmaddpd
add
sbbl
int3
ficoml
inc
inc
rcr
jo
push
int
loopne
adc
idiv
xor
mov
push
cld
mov
jmp
sub
int3
testb
sahf
les
push
mov
in
popa
sub
movsb
jno
shr
rol
in
adc
cli
xchg
mov
js
stos
mov
xchg
mov
jge
subl
xor
xchg
inc
dec
movsl
add
pusha
inc
sbb
test
fwait
pop
leave
inc
es
cwtl
stos
xor
js
xchg
inc
mov
sub
pop
add
xchg
test
pusha
push
and
push
jnp
cwtl
hlt
mov
nop
repnz
test
and
popa
shl
add
outsb
or
ss
jl
sahf
inc
inc
push
push
fs
cmp
stos
xchg
push
test
dec
outsl
mov
xchg
lret
mov
mov
or
mov
adc
test
sub
dec
cld
pop
mov
sbb
dec
push
out
jecxz
cmp
repnz
mov
iret
push
pop
dec
cmpsl
stc
sub
pop
pop
sub
pop
inc
hlt
out
int
adc
fcompl
mov
push
jbe
aad
push
popa
ds
movsl
xor
sbb
popa
sarb
lcall
inc
xchg
add
sub
loope
nop
popa
mov
lods
mov
dec
mov
addl
dec
xchg
mov
sbb
cmc
jle
sub
or
rclb
subl
rorb
mov
dec
push
movsl
mov
xlat
jl
pop
setg
add
outsb
addb
es
push
lahf
inc
das
sub
fimull
mov
ds
cmc
std
push
insb
push
inc
adc
imul
nop
ret
xor
pop
loope
out
test
lods
sahf
sbb
pushf
rorl
jae
xchg
mov
orb
dec
stos
dec
outsb
sub
out
stos
sub
mov
or
pop
outsb
mov
imul
sub
mov
sbb
xor
sahf
mov
andb
pop
ja
inc
adc
adc
dec
push
into
outsb
ljmp
pop
ret
jp
sbb
fst
iret
je
pusha
pop
iret
fstps
sti
sti
cmpsb
mov
adc
push
mov
popf
lds
and
mov
mov
hlt
test
mov
das
repz
jge
insb
or
addr16
rolb
lcall
sbb
and
or
addr16
lret
cmp
ret
pop
ljmp
xor
inc
adc
lds
inc
cld
inc
fwait
adc
rol
mov
mov
xchg
xor
test
push
xchg
cmp
movsb
leave
hlt
js
in
add
adc
dec
push
jns
and
and
sub
sbb
sub
adc
sbbb
sub
pop
jl
sub
and
pop
out
dec
loopne
scas
jnp
fwait
stos
dec
fs
or
stos
mov
or
fstpt
repnz
sbb
xchg
test
xchg
stos
stos
aad
sub
and
jecxz
push
loop
ret
pop
imul
adc
dec
xorl
call
outsb
add
cwtl
jle
sub
push
push
pop
pop
stos
push
in
push
pop
pop
or
mov
es
mov
aas
push
pop
and
clc
mov
jnp
mov
ret
lcall
xchg
mov
jbe
sbb
mov
movb
fcoml
out
mov
enter
popa
push
fdivrl
mov
lret
and
and
fwait
mov
pop
psubw
cld
ret
mov
inc
cltd
insl
shlb
pop
xchg
mov
cmp
cmp
push
jae
aad
dec
shrl
rcrl
pop
push
adc
dec
xchg
repnz
xchg
sti
int
push
fistpl
xlat
jmp
ds
dec
sbb
mov
push
test
adc
leave
sbb
arpl
int
or
adc
and
xor
add
or
sti
test
cmpsl
push
mov
ljmp
rol
sub
or
xchg
xchg
cltd
xchg
mov
ja
leave
push
jno
push
aad
test
mov
mov
adc
test
test
test
adc
imul
bound
xchg
loopne
pop
js
add
fisubrs
mov
inc
cmp
sbb
and
mov
jno
fcmovnu
std
inc
push
xor
xchg
cmp
mov
mov
sbb
test
aaa
gs
mov
dec
push
cmp
movsl
mov
inc
xchg
jbe
lret
mov
mov
adc
addr16
pop
fisubrs
cmp
ret
pop
push
aad
xor
fmuls
mov
daa
lcall
sarb
pop
xchg
pop
jae
mov
inc
cld
dec
mov
pop
xor
inc
jb
or
jp
cmp
hlt
xchg
mov
test
dec
cld
jmp
inc
sub
shrl
movsb
sub
xor
sbb
leave
test
daa
xor
mov
push
cmp
cwtl
lods
add
ljmp
push
sti
jl
outsl
cmp
cli
sbb
pop
call
mov
rcr
cmp
flds
mov
and
fst
push
jbe
adc
mov
xor
test
fidivl
pushf
push
ret
xchg
or
add
pop
repz
cmp
ljmp
aam
imul
lods
test
in
jo
cli
jle
adc
xchg
aad
scas
and
stc
and
jle
mov
inc
mov
and
jge
stos
jae
jp
mov
call
psrlq
pop
cltd
or
cmp
jo
add
stc
or
add
fwait
inc
sub
loope
mov
jecxz
cmp
leave
mov
cmpsl
mov
imul
pop
ljmp
sbb
das
inc
cltd
neg
arpl
dec
push
aam
addr16
push
aas
repnz
clc
cli
mov
push
popf
out
hlt
mov
mov
pusha
xchg
cmpb
jno
push
xchg
adc
or
jo
inc
jp
leave
psadbw
lret
cmp
xchg
lds
jecxz
in
adc
and
add
xchg
lock
popa
cli
mov
cld
push
ja
popa
or
xchg
push
pushf
lea
ss
push
and
xor
shrl
push
push
das
jle
push
mov
jno
sbb
aam
stc
cmpsb
movsl
cmp
jbe
stos
push
push
jge
aam
aas
mov
lahf
repnz
pop
mov
inc
xchg
cmp
outsl
or
fidivrs
xlat
push
movb
lods
divl
movsb
mov
xor
hlt
jge
add
jp
lcall
rclb
jl
pop
leave
in
call
mov
add
push
in
fisttpll
xor
dec
insb
pop
cmp
cli
in
jns
mov
jp
jg
fists
sub
sbb
stc
cs
fdivl
movsl
and
popf
lahf
es
jne
dec
mov
sub
popf
fldcw
lods
jge
mov
in
jae
push
cltd
loop
push
loopne
test
roll
pop
xor
mov
imul
jne
sub
cmc
sub
hlt
addr16
and
test
jb
pop
lods
lcall
ljmp
cmp
pop
jle
cmp
and
popa
sbb
lods
xor
mov
mov
lods
shrb
xor
cwtl
lret
jae
pushf
loopne
add
mov
push
push
call
arpl
stc
sbb
icebp
mov
inc
cmp
push
pop
les
sbb
jnp
stos
push
call
jae
scas
jo
push
in
insb
mov
mov
bnd
add
push
mov
idiv
and
outsb
mov
dec
jp
daa
add
mov
jge
push
enter
xorb
loop
mov
xlat
cmc
add
rcrb
in
cmp
xlat
pop
pop
xchg
rolb
mov
ljmp
sub
imul
and
pushf
mov
xor
cli
jge
cmc
jmp
jbe
aad
imul
jl
and
cmpsl
dec
sti
xchg
fadds
divb
negb
dec
test
adc
jge
in
cmp
inc
test
add
inc
and
jecxz
mov
stc
mov
aaa
jmp
ds
xchg
and
mov
aaa
lods
call
mov
mov
sbb
pop
nop
jp
or
imul
add
dec
cmpsl
push
mov
cmp
add
xchg
js
call
fstpt
mov
jge
pushf
mov
mov
lds
ret
fisubrl
andl
push
jo
shr
lahf
out
aad
in
cmp
lea
insb
adc
insb
repz
pop
daa
pop
jb,pn
bound
push
mov
orl
cld
arpl
sub
movsb
lds
push
int3
jmp
sbb
pop
outsl
loopne
jns
les
add
cmpsl
js
in
inc
cmp
cmp
daa
sub
cmc
loopne
loopne
mov
mov
pushf
xchg
mov
cmp
nop
or
mov
adc
push
cli
sbb
fiaddl
cli
outsb
sti
clc
data16
pop
mov
sbb
cld
or
mov
jno
jne
add
xchg
mov
repnz
fs
push
out
xlat
add
and
inc
das
leave
and
lds
icebp
or
pause
jecxz
add
adc
xor
loope
aad
imul
je
cmp
adc
lret
pop
loope
sahf
cmp
cmp
dec
insl
jnp
movsw
mov
enter
decb
shlb
mov
cmp
lock
pop
iret
jl
movsb
mov
fisubs
adc
call
inc
es
mov
push
subb
xchg
cli
std
das
xchg
or
je
and
pop
lret
mov
jecxz
cmp
int
pop
mov
sbb
iret
mov
shr
or
adc
loop
movsb
or
sub
mov
pop
imul
sbb
cmp
pop
cwtl
shrl
jo
test
out
cwtl
jp
test
les
xchg
push
std
inc
and
or
cli
rcll
fdivrs
cli
cmpsb
pop
mov
sub
xor
inc
mov
adc
adc
mov
mov
add
sahf
test
inc
pop
lret
in
fistpl
cwtl
in
icebp
push
xor
sbb
add
xlat
or
in
mov
in
xor
push
add
imul
jmp
cs
fcmovb
mov
push
push
sar
dec
mov
enter
mov
insl
repnz
or
push
sbb
ljmp
shll
jecxz
cltd
cmp
sbb
inc
jecxz
pop
add
xor
mov
aad
sbb
rclb
xor
stos
dec
fisubrs
xchg
xchg
test
repz
pop
je
sbb
lods
and
cmc
fsubrl
daa
xchg
sub
das
cmp
jp
pop
ljmp
popf
add
sub
inc
sub
movl
shll
movsb
shlb
fstl
mov
dec
dec
inc
sbb
scas
pop
gs
mov
and
cmc
fiadds
mov
jb
mov
lret
std
lret
ss
arpl
fcoml
cwtl
popa
fnstenv
fnstsw
insb
js
pushf
mov
mov
mov
sub
sub
or
push
lret
cmpsb
push
inc
xchg
jg
fs
pusha
in
es
out
dec
mov
xor
jmp
js
daa
mov
push
push
mov
out
add
mov
jae
ficoml
out
inc
xor
neg
xor
outsl
sbb
mov
adc
mov
push
dec
sub
mov
mov
fcmovnu
arpl
lods
adc
or
ss
in
jo
xor
loope
bound
cli
fdivs
xchg
cmp
jge
lcall
sub
push
loop
and
dec
bound
and
aam
dec
pop
mov
in
dec
movsl
xor
movsl
and
das
dec
pop
jae
pushf
push
mov
inc
dec
insl
cmc
out
and
push
repz
cmp
push
add
mov
aaa
movsl
pop
fisubl
inc
or
sub
mov
gs
into
or
or
inc
sub
sub
jnp
inc
adc
fstpl
xchg
scas
xor
cmpsb
dec
inc
out
clc
dec
sbb
xor
push
pusha
jg
ss
push
and
xor
sub
mov
pop
insl
mov
ds
jns
add
das
push
push
aas
mov
sbb
pop
pop
cmp
push
or
sub
into
rcr
rclb
sub
pop
dec
cwtl
add
jle
lahf
daa
dec
icebp
cmp
fstpt
rorb
mov
inc
adc
cmp
push
mov
addb
mov
mov
or
int
xchg
ss
loope
jb
jbe
in
fimuls
ja
cmpl
and
adc
push
popa
mov
mov
shrl
cmp
dec
lds
dec
mov
outsb
xchg
sub
nop
and
enter
loop
xor
loopne
add
pop
adc
xchg
push
cwtl
sbb
subl
xchg
leave
mov
pop
jns
enter
pop
xor
jne
sbb
add
xchg
or
rcrb
fcmovnu
jae
out
aam
fcmovbe
sub
ds
push
mov
in
cmpb
jmp
xor
mov
loop
xor
xor
adc
lret
mov
cmpsl
sbbl
mov
mov
xchg
pop
cmc
xchg
or
jecxz
call
xchg
and
jmp
jle
mov
add
arpl
push
add
lcall
dec
ret
outsb
mov
mov
lods
sbb
xor
setae
sbb
pop
lods
int3
mov
dec
mov
loop
sbb
rclb
addr16
adc
lahf
sub
inc
pop
sub
mov
aas
pusha
imul
in
cld
gs
jns
jge
fcoms
jge
ss
ss
lret
inc
jnp
repnz
aad
cli
lea
pop
xchg
mov
xchg
loope
adc
sti
cmp
push
sti
ror
xchg
push
jmp
cmp
push
movb
cmp
das
jnp
dec
mov
mov
mov
fmull
mov
std
pop
lcall
dec
or
pop
shl
add
xchg
sbb
movsb
leave
xchg
sti
and
push
jb
in
out
fisubrl
cmp
lahf
ja
stos
test
xchg
cmp
add
and
mov
lahf
xchg
cli
data16
and
jg
aad
mov
rclb
push
inc
sub
and
push
mov
movsl
ret
pop
inc
into
mov
pop
pop
pusha
mov
roll
mov
dec
rcll
jl
cmpsl
mov
shr
je
adc
or
gs
mov
nop
dec
sbb
inc
xor
add
das
ret
xchg
leave
push
push
pusha
xchg
int3
fnstcw
fcomps
loop,pn
aam
push
out
mov
insl
repz
add
or
out
add
iret
xor
or
mov
insl
mov
or
inc
xor
adc
aas
shll
or
ljmp
cmc
inc
jmp
loopne
and
es
push
push
jge
pusha
ret
cmpsb
mov
stos
gs
imull
jmp
loopne
aad
jmp
xlat
xor
cmp
cmp
dec
mov
push
inc
in
sahf
sbb
fsts
or
lods
xchg
pop
daa
out
mov
inc
loopne
fstpl
jp
pop
pop
and
or
or
cs
or
cltd
popf
mov
rorl
mov
mov
sbb
xchg
cmpl
lret
stc
cli
call
mov
pop
dec
dec
js
push
or
cmp
sub
fcmovne
lret
clc
sti
call
mov
pop
dec
dec
js
push
or
cmp
sub
fisttps
js
call
mov
pop
dec
dec
js
push
or
cmp
sub
fcmovne
lret
clc
sti
call
or
movsb
dec
loope
jnp
sbb
xchg
js
dec
les
inc
call
jecxz
sub
mov
cwtl
push
pop
inc
jns
pop
arpl
sub
mov
or
sbb
call
jecxz
xchg
test
test
mov
js
dec
arpl
pop
add
xor
and
shl
ret
loope
shl
rclb
mov
pop
adc
push
sub
adc
ja
movsb
ret
mov
pusha
mov
ja
mov
xor
pop
rclb
popa
xchg
dec
jb
shll
cmp
addr16
mov
cmpsl
out
dec
cld
cmp
fneni(8087
push
je
xchg
cld
sti
addb
mov
adc
and
mov
pop
adc
ret
pop
shll
jnp
push
cld
mov
xchg
mov
repz
mov
cs
cmp
mov
push
mov
xchg
mov
loope
sub
mov
fcompl
jns
push
jae
dec
sbb
lods
add
cmpsl
add
fdivs
or
push
mov
ret
call
xchg
test
mov
push
push
arpl
xor
and
adc
sbb
lods
lods
mov
hlt
in
std
cmp
icebp
js
dec
pop
cmp
pop
addr16
je
addl
divb
sbb
sbb
pop
pop
jo
arpl
insb
movsl
call
ret
popf
rcrb
mov
js
dec
arpl
sub
cmp
or
sbb
call
jecxz
xchg
test
mov
push
push
arpl
sub
cmp
or
sbb
call
mov
loopne
mov
roll
inc
icebp
sbb
fsts
inc
xchg
lahf
fcom
pop
xor
cltd
or
push
or
dec
ja
stos
ja
or
sbb
addl
leave
pop
xlat
mov
mov
adc
xorl
lcall
mov
jmp
push
sub
cmp
in
inc
ljmp
push
cmpsl
sbb
jmp
xchg
jmp
js
push
cmpsb
or
std
lods
sar
cmpsb
jnp
nop
and
lock
xchg
decl
lret
data16
mov
fs
outsb
add
xor
int3
mov
mov
push
arpl
inc
cmp
inc
xchg
mov
xchg
orl
aam
sub
jns
sbb
jo
sub
xor
push
mov
cmpsb
pop
xor
sbb
cmc
inc
pop
dec
btc
or
jg
jmp
sbb
mov
sar
inc
push
mov
nop
mov
mov
mov
cmp
mov
and
repnz
rorb
in
mov
push
pushf
pop
and
mov
add
outsb
rcl
mov
and
pop
mov
int
or
lods
enter
lcall
sub
imulb
mov
and
mov
sub
mov
or
out
js
scas
jnp
enter
or
xor
mov
imul
fnstenv
push
xchg
jecxz
pop
jle
fs
std
pop
insl
pop
xor
pop
inc
ss
scas
mov
sub
cmp
pop
sti
loope
sarl
inc
xor
inc
test
rcl
adc
ja
mov
mov
jnp
stos
cmpsb
or
xor
es
aas
int3
rcl
popf
mov
dec
jmp
cmp
orb
fidivrs
or
sbb
aas
jge
das
mov
sub
js
outsb
mov
sbb
ss
fistps
or
and
or
std
sti
sbb
jno
xlat
push
or
jg
fwait
pop
xchg
pop
repz
cmpsl
mov
data16
in
repz
push
fists
mov
mov
cmc
cmp
js
mov
nop
mov
sbb
adc
adc
rolb
mov
imul
jge
loopne
jl
loopne
xchg
pop
push
cs
mov
pop
mov
test
sub
sti
or
inc
pop
xor
sbb
pop
add
lret
pop
sbb
jge
rolb
xchg
cld
jg
jnp
movsb
sbb
dec
rclb
movsb
fbstp
xor
subl
jnp
mov
adc
lcall
scas
mov
mov
add
not
rclb
and
push
jbe
lahf
imul
fmuls
pop
xlat
pop
jae
sbb
mov
xchg
and
movsl
les
xlat
adc
mov
add
xor
rolb
or
sub
mov
mov
andb
xor
or
cmp
xor
loop
jns
pop
inc
adc
xor
inc
pop
popa
and
inc
in
fidivs
es
and
ret
pop
fistl
fwait
adc
inc
xchg
dec
test
fiaddl
mov
lret
add
mov
lea
mov
iret
xchg
icebp
or
pop
inc
dec
push
add
sub
xchg
pop
sbb
cmpl
push
test
ret
and
aad
lods
push
gs
rorb
stc
in
jno
iret
loopne
inc
push
xchg
pop
stos
push
jne
push
lret
add
mov
and
jmp
ljmp
xchg
mov
adc
jge
int
inc
sbb
add
lahf
nop
mov
addr16
sbb
stc
and
xlat
int3
dec
mov
jl
icebp
jo
cmp
scas
mov
ljmp
push
lcall
add
into
lret
and
icebp
jg
inc
shll
push
xor
push
andl
rorl
dec
inc
cmc
cwtl
cli
lds
mov
mov
push
or
inc
shrb
push
cmp
jmp
mov
test
movl
arpl
fs
fdecstp
sbb
clc
xor
mov
mov
ja
inc
imul
push
in
ja
movsl
xchg
cwtl
xor
or
xor
sbb
push
out
test
fldenv
es
js
jg
dec
mov
xchg
lock
jg
dec
ret
inc
inc
lret
pop
jne
inc
inc
aam
addr16
pop
into
pushf
gs
cld
mov
in
xchg
not
fcomps
shll
imul
mov
cs
imul
in
dec
or
rclb
mov
xchg
or
loopne
sahf
pop
negb
mov
bound
sbbb
jns
mov
xor
xor
lcall
lods
test
adc
ficoms
call
lret
xchg
or
daa
insl
int
jle
mov
mov
add
jg
loop
jg
dec
das
pusha
dec
inc
dec
lcall
mov
push
mov
shll
fdivrp
cli
aas
dec
imul
jecxz
jg
cmc
aad
jl
jg
add
jns,pt
cmp
add
inc
adc
sbb
jmp
sub
lods
lock
adcb
pop
fisttps
dec
mov
sbb
jmp
or
js
in
cmp
xor
xor
push
mov
or
mov
and
das
lods
ds
lea
icebp
cld
push
or
fimuls
or
mov
shll
xor
sbb
lcall
dec
cmp
lahf
insl
cs
lea
pop
lret
sbbl
mov
nop
or
inc
or
xlat
and
hlt
test
bound
loope
fiaddl
push
jg
jecxz
pop
scas
add
dec
sub
insb
mov
push
push
movsb
insb
jp
xor
sbb
and
into
push
pop
xchg
cmpl
add
out
and
testl
dec
sub
inc
mov
push
ja
add
mov
adc
test
popa
adc
xchg
sub
dec
shrb
jecxz
lret
leave
xlat
jnp
sahf
push
arpl
sub
pop
js
mov
jecxz
pop
push
int
std
dec
in
aas
mov
test
fwait
mov
jp
inc
and
xchg
sti
adc
ret
push
xor
mov
stc
mov
mov
xor
ret
add
push
dec
in
rcl
popa
push
fildll
into
or
aam
cmp
dec
mov
into
jae
dec
lahf
jle
fnstcw
jg
xchg
movsb
call
inc
in
inc
pop
pop
sub
bound
add
mov
fldt
push
jecxz
mov
add
lret
int
and
or
mov
or
and
into
out
test
scas
pop
lock
xchg
or
push
cmp
mov
insl
sbb
lea
cltd
cmp
mov
mov
xchg
and
test
sarl
testb
aaa
aaa
std
int3
pop
cli
lea
mov
mov
add
mov
lret
jmp
push
and
adc
call
and
or
loopne
pop
jns
mov
cmp
lods
mov
xor
lahf
push
shlb
sarl
cmp
dec
loop
push
cmp
scas
pop
imul
mov
sbb
sbb
scas
ret
aam
mov
cli
popa
sbb
aam
adc
add
out
inc
scas
mov
sub
jne
xchg
rclb
cmc
imulb
ror
sbb
sub
into
ds
push
fnstsw
test
lods
div
fisubl
add
mov
call
incb
cmp
js
repnz
xchg
popw
ficomps
push
push
pushf
mov
xor
repz
orb
lret
and
daa
and
imull
jecxz
cmp
ror
dec
lea
cmp
aam
pop
nop
aaa
push
test
add
cmc
lods
scas
cmpb
fxch
pusha
lds
push
jp
mov
xor
loop
mov
subb
repz
xchg
jecxz
mov
mov
iret
mov
jge
das
pop
andb
and
out
daa
push
out
popa
cmp
pop
ja
and
shlb
daa
xor
mov
push
or
mov
loopne
dec
shr
aam
mov
fnstcw
cld
gs
mov
clc
popf
inc
add
jnp
sub
sub
out
pop
loopne
inc
lock
mov
lods
arpl
dec
xchg
xchg
xchg
ss
popa
loopne
adc
push
int
sbb
scas
call
xchg
movsb
dec
loop
sbb
xchg
xchg
movsl
jg
mov
out
mov
inc
jae
shll
lcall
fcomps
pop
jnp
inc
push
int
ret
push
xchg
loop
mov
fwait
lcall
shl
daa
orl
cmp
and
sahf
or
rorb
ljmp
or
xor
mov
mov
mov
pop
mov
cmp
mov
push
pop
jns
add
movsb
xor
lahf
bound
sbb
jo
outsb
add
xor
sub
std
in
xchg
pop
cmpb
orb
dec
push
inc
sbb
adc
test
cmpsb
js
mov
inc
loop
clc
add
movsl
jle
daa
inc
or
push
dec
mov
out
add
stos
xlat
pop
sbb
les
stos
repz
mov
fadds
bound
adc
mov
sbb
int
push
sub
dec
lret
xchg
mov
mov
in
cmpsb
mov
push
negl
pop
dec
push
mull
xor
ja
adc
repnz
push
mov
std
dec
pop
xchg
sbb
subl
cmp
out
xchg
or
shlb
add
pop
add
call
outsb
or
xchg
mov
mov
dec
dec
push
imul
test
pop
push
and
pop
and
and
daa
jns
lods
mov
in
inc
sub
pop
add
inc
loope
aad
icebp
aad
aad
jge
mov
ret
das
data16
ja
inc
xor
cmp
shlb
in
mov
pop
cltd
popf
shrl
insb
push
int
mov
jne
pop
inc
lods
roll
imull
add
repz
add
jecxz
jge
leave
shll
or
outsl
stos
dec
cmp
sub
addr16
dec
sbb
sarb
dec
shrl
jnp
cmp
sbb
jbe
test
enter
xchg
pop
add
xchg
mov
js
popf
add
jnp
dec
cmp
adc
ja
sbb
push
inc
mov
push
outsl
sbb
mov
imul
jl
pushl
mov
in
cmp
fwait
out
repz
adc
xor
popa
jecxz
scas
data16
mov
ljmp
mov
mov
lock
mov
test
jae
repnz
fcmovb
sbb
lods
mov
test
and
ja
mov
pushf
daa
outsb
aad
add
push
clc
sbb
inc
sub
movsb
lock
inc
aam
jns
lods
out
clc
movb
faddl
xchg
bound
lods
pop
pop
sbb
aam
xlat
jne
pop
pop
shlb
gs
jecxz
add
rol
xchg
jno
pop
mov
add
xor
idivb
das
cmpsl
shlb
jle
fnstsw
insl
call
loopne
sub
cs
inc
sub
mov
push
add
fnstcw
pop
add
dec
outsl
andb
jns
cltd
shlb
daa
adc
gs
jecxz
out
divl
orb
dec
jb
fxtract
in
in
loope
pop
sbb
addb
adc
idivl
cli
into
push
mov
mov
out
pop
cwtl
dec
mov
push
call
jns
add
adc
leave
adc
xor
push
imul
int
jns
repz
shl
ds
clc
xor
xchg
das
cmp
xor
fadds
sarb
xor
cmp
push
adcl
cmc
sahf
xor
push
pusha
repz
stos
cmpsl
imul
lock
je
inc
loope
loop
loopne
pop
fwait
and
mov
movsb
jge
rclb
addr16
push
filds
ja
lea
enter
inc
jle
sbb
and
mov
pop
or
dec
imul
sub
jo
mov
ss
xchg
jg
mov
adc
cwtl
lock
pop
insl
mov
int
mov
shll
push
sub
outsl
or
xor
adcl
dec
xchg
push
popf
or
xchg
jb
pop
sub
leave
pop
lock
mov
push
add
lods
fimuls
mov
imul
addr16
adc
add
fsub
test
jno
pop
in
arpl
jb
into
jno
jmp
sub
test
pusha
xor
cld
mov
push
cltd
fcmove
test
ja
mov
adc
xor
daa
sbb
dec
dec
fs
dec
fistl
popf
sub
jl
dec
in
mov
rcl
jge
add
and
sbbb
jg
mov
mov
jbe
in
cmp
mov
xchg
addr16
hlt
fcomp
push
or
stos
cmp
cmpsl
inc
sbb
mov
xchg
inc
in
daa
cmp
xchg
or
je
sbb
push
and
popf
pop
ja
jmp
das
lods
xchg
jbe
fld
and
ja
add
mov
dec
cmpb
out
in
xchg
dec
or
insl
and
std
stos
popa
sbb
cmc
add
fs
mov
mov
sbb
jp
mov
adc
xchg
out
sbb
jge
cs
push
je
xor
mov
aas
lds
push
aam
add
cmp
and
nop
adc
lods
pop
loope
adc
pop
movhps
pop
pusha
cmp
or
pushf
jns
xor
inc
icebp
push
sbb
cmp
mov
push
addr16
xor
out
dec
add
leave
mov
jb
xchg
mov
dec
and
rol
fnstenv
in
lret
nop
cmpsl
cmpsb
int
lods
std
pop
push
pop
or
mov
jns
xchg
adc
imul
test
xor
add
fwait
mov
stos
into
xchg
mov
and
or
xorb
pop
rcrb
sahf
mov
mov
lock
xchg
stc
rcl
daa
clc
dec
icebp
or
call
sahf
push
mov
loop
jl
pop
dec
js
mov
test
xor
repz
sub
adc
ds
sti
mov
push
lea
and
xor
or
cmpsb
or
jno
sub
ss
aad
dec
push
and
and
pop
mov
jbe
daa
test
aas
jle
adc
fs
xchg
xor
and
adc
sarb
mov
outsb
mov
pop
mov
jp
sub
mov
cmp
scas
gs
adc
sbb
mov
shr
jne
push
cs
ret
jle
push
cwtl
jb
sub
jne
int3
mov
xchg
push
cli
or
push
arpl
negb
in
cmp
jo
inc
pop
mov
dec
xchg
cmc
xchg
sbb
aas
dec
adc
loop
inc
push
dec
dec
test
aas
sbb
stc
aad
les
push
add
add
daa
mov
bound
cli
loopne
icebp
jb
clc
jb
lods
xchg
lods
lea
call
sbb
lds
in
xor
push
mov
loope
outsb
loopne
inc
cmp
dec
out
neg
xchg
jnp
fsubp
loopne
inc
push
mov
dec
or
mov
inc
cs
fimuls
xorl
fcmove
dec
jns
xchg
xor
ja
loop
popa
je
mov
push
lret
jnp
jnp
add
push
gs
lret
inc
inc
orb
xor
lret
pop
les
repz
jnp
sbb
leave
outsl
lods
dec
pushf
inc
icebp
mov
loope
xchg
das
gs
mov
jns
inc
outsb
push
sub
push
fnsave
ja
lods
test
gs
inc
jmp
inc
rorb
push
jecxz
and
inc
cs
mov
adc
jge
jnp
sarb
mov
dec
pop
or
cmpsl
lret
cltd
jg
hlt
pop
mov
push
ja
cmp
mov
adc
pop
into
lock
rclb
mov
jno
das
push
aas
adc
rolb
cmp
je
in
adc
xchg
xchg
xchg
add
leave
jae
pop
test
xlat
pop
pop
pop
dec
loope
repz
int3
rol
add
in
ret
roll
mov
imul
pop
cmp
sub
push
cwtl
push
outsb
adc
and
mov
rcrb
mov
mov
mov
cmc
cs
test
xlat
fs
cmp
and
stos
mov
inc
add
push
neg
pop
and
movsl
sub
mov
push
and
cmp
add
xor
cli
sti
fdecstp
pop
outsl
and
gs
cmp
dec
call
push
xchg
add
pop
mov
mov
out
call
cmp
xor
sarl
dec
push
mov
popa
subb
pop
dec
and
lret
inc
int3
mov
gs
and
ret
aam
inc
mov
or
jle
rclb
pushf
stos
mov
pop
int3
adcb
sub
xor
scas
out
and
jmp
cmpsl
adc
ja
lcall
in
mov
in
cmp
sar
push
mov
fldcw
sbbb
or
pop
inc
movsb
int
andl
sbb
iret
xchg
xor
xchg
shlb
arpl
das
clc
je
xlat
mov
and
sub
js
inc
xor
pushw
rolb
scas
xor
ficompl
pop
clc
dec
push
sbb
push
pop
xchg
pop
pop
pusha
arpl
mov
mov
in
add
dec
or
push
enter
stos
cld
pop
es
mov
push
xor
add
adc
inc
mov
cld
inc
inc
fdivrl
jmp
call
jo
mov
mov
add
into
movsl
out
or
arpl
mov
inc
inc
outsb
mov
sub
xchg
mov
inc
sub
sahf
dec
dec
mov
or
cmp
stos
xchg
loop
pop
cs
sahf
scas
push
cltd
xchg
out
add
push
fs
jecxz
mov
rol
dec
notb
jge
mov
jg
data16
pop
adc
call
push
cmpsl
loope
movsb
sbb
jnp
ja
das
jg
negl
mov
repz
xor
xlat
push
jl
movsb
adc
test
inc
adc
or
divb
cld
push
dec
mov
xorb
push
xchg
jbe
test
daa
dec
pop
push
loopne
add
mov
out
test
mov
sub
cmp
scas
and
mov
clc
xor
mov
push
scas
in
je
sbb
xchg
pushw
fcompl
daa
xchg
leave
mov
enter
push
adc
nop
std
xor
sarl
adc
jg
rcrb
sub
sarl
sbb
xor
mov
add
sahf
inc
popa
mov
fmuls
shll
xchg
and
cmc
cld
push
lock
xchg
mov
hlt
xchg
ljmp
pop
sub
cwtl
ds
jbe
sub
mov
out
cmp
add
rcr
cmc
pop
movsb
mov
stos
mov
sbb
imul
adc
mov
mov
lods
pushf
dec
jb
call
jno
jb
fistpll
leave
pop
jmp
dec
dec
sbb
or
hlt
sar
negb
mov
lret
mov
push
pop
sbb
jp
negl
ja
xorl
lcall
mov
inc
aas
ja
lret
mov
fimuls
mov
adc
dec
bound
mov
ljmp
mov
rol
push
out
mov
lea
xlat
mov
aas
inc
sbb
addr16
push
outsl
out
sahf
sbb
inc
rcl
cs
scas
lea
pop
jmp
sub
mov
push
xchg
push
push
outsl
addb
xchg
fstpl
push
paddq
lcall
adc
pusha
sub
push
sbb
test
stos
cld
popf
popl
pushf
dec
pop
or
cmp
pushl
enter
lods
in
aaa
dec
addr16
cmp
sub
push
push
imul
xor
ror
push
adc
stc
sub
lds
mov
push
pop
xchg
dec
ret
repz
inc
clc
leave
enter
test
mov
push
push
arpl
sub
cmp
or
sbb
call
jecxz
xchg
test
mov
push
push
arpl
sub
cmp
or
sbb
call
jecxz
xchg
test
mov
push
push
arpl
add
xor
sbb
in
ret
int3
jecxz
xchg
test
mov
push
push
arpl
mov
fsubl
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
pop
adc
sti
jp
push
adc
jp
pop
iret
dec
fisubrl
jnp
dec
ljmp
or
sti
jp
push
sbb
sub
fisubrl
pop
mov
pop
lcall
sbb
dec
sti
jp
push
sbb
sub
mov
sub
jl
push
hlt
jg
sbb
jmp
xchg
or
or
mov
roll
push
mov
mov
dec
ljmp
xchg
out
xor
sub
in
ja
outsl
dec
sub
xchg
mov
shl
cmc
inc
clc
sbb
mov
cmp
add
push
pop
sub
or
jmp
sbb
inc
ficoml
cmpsl
fs
les
adc
cwtl
push
pop
mov
subl
lret
imul
arpl
js
cmp
mov
inc
cmp
in
lret
cmp
lret
mov
adc
mov
inc
cmpsb
sub
lahf
add
dec
or
push
sbb
sub
lret
pop
ljmp
or
sti
pop
mov
cmc
jbe
inc
aam
loop
fwait
sub
xchg
incl
decb
jp
scas
cmp
pop
les
cmp
sub
mov
cs
cmp
jnp
ja
push
jo
mov
imul
mov
fisubrl
jnp
dec
ljmp
or
sti
jp
push
sbb
sub
cli
dec
ljmp
or
sub
push
cmpsb
cwtl
adc
shlb
sub
cmp
jnp
xor
pop
push
mov
mov
or
and
mov
inc
ret
es
pop
xchg
push
andb
jns
cltd
pop
ret
ljmp
je
in
roll
push
xchg
push
add
pop
cmp
sbb
jo
jl
add
pusha
pop
mov
es
imul
es
inc
pop
ret
imull
sbb
mov
cltd
mov
outsl
or
shll
das
out
cmp
frstpm(287
daa
sbb
sahf
mov
mov
dec
push
lock
negl
test
sub
lret
out
push
mov
loope
sbb
dec
cli
sahf
lcall
jns
pop
cld
add
out
inc
popf
fwait
mov
imul
lret
adc
enter
pop
xchg
xchg
stos
xor
in
pop
or
push
insl
add
push
jmp
int3
mov
push
lret
es
or
mov
cs
daa
int3
fsub
adc
in
push
cli
ljmp
imul
pop
outsl
std
push
cwtl
lods
inc
push
repz
jmp
inc
ficompl
sahf
insb
sarl
inc
imulb
xchg
mov
or
int
insb
stos
sub
sbb
jnp
push
jg
inc
fbstp
out
sbb
sbb
loop
mov
mov
dec
push
jge,pn
sbb
scas
rcrl
test
push
pusha
ljmp
and
push
scas
shrl
mov
cmpsl
movsb
fdivrp
jbe
or
out
cmp
fisubs
int
out
or
mov
adc
rcll
inc
push
pop
mov
mov
dec
pop
movsb
fidivrl
movsl
stos
fs
xchg
popa
aad
sub
mov
xor
jns
cmp
pop
popf
xchg
ret
mov
stos
pop
aas
mov
push
add
pop
sub
movsb
aam
fildll
cmpsb
imul
pop
pop
js
pushf
mov
stos
cwtl
out
xor
fidivrs
mov
adc
movsl
orl
add
and
and
and
and
repnz
jg
cs
aam
add
je
mov
xchg
jns
popf
call
test
lock
xor
aad
stos
jge
shll
out
loop
pushf
mov
push
aam
enter
adc
das
cli
adc
shrl
pusha
jno
fwait
sbb
das
push
dec
je
sahf
in
inc
push
push
push
and
jns
repz
cli
push
popa
cmp
lret
loop
insl
lret
outsl
or
leave
mov
mov
dec
scas
scas
mov
cmp
jne
adc
mov
and
push
push
pop
and
adcl
pop
mov
push
fcomp
dec
scas
jo
jnp
xchg
push
xchg
jno
xor
push
dec
hlt
ljmp
push
rol
and
inc
cwtl
adc
sarb
push
dec
sub
and
push
shld
pusha
addr16
ss
sar
test
fsubl
xlat
add
sbb
loopne
mov
adc
mov
fs
or
mov
cld
andb
daa
nop
mov
adc
daa
sar
push
dec
stos
or
pop
xchg
dec
jmp
add
jmp
xor
in
movsl
icebp
mov
push
pop
jmp
mov
sub
push
jmp
dec
js
hlt
push
cmp
pusha
orl
inc
subb
sub
or
adc
fnstsw
or
sbb
sub
sbb
cltd
add
cwtl
xchg
xchg
lds
in
gs
push
les
shrl
mov
sub
shrl
leave
ret
cltd
rorb
loope
negb
push
cmp
jns
in
stc
push
insb
test
fistpll
xchg
dec
jge
inc
rolb
xor
insl
stc
pushf
inc
cs
mov
loope
adc
jle
push
cltd
dec
dec
xchg
push
mov
sti
or
adc
jle
xor
cmp
or
loopne
sahf
or
dec
aaa
incl
mov
push
daa
mov
mov
adc
outsl
xchg
mov
pop
leave
repnz
cmpsl
sarb
jns
xchg
add
xorb
test
sub
bound
and
mov
sbb
pop
dec
pop
xchg
fdivp
subl
fdivl
iret
add
push
fisttps
call
fisttps
hlt
scas
push
sbb
jmp
jge
mov
sbb
or
ret
in
add
sbb
cmp
les
loop
mov
xor
mov
pop
sub
adc
sub
call
test
out
or
mov
push
adc
xlat
mov
adcb
fdivrl
push
icebp
xchg
fiadds
add
adc
mov
movsb
adc
or
xor
test
fs
sar
mov
test
fcompl
adc
or
cld
jmp
ficoms
jbe
fwait
addr16
sub
cmp
mov
imul
je
into
mov
mov
arpl
sub
mov
mov
inc
ret
fs
lock
int3
nop
enter
xchg
iret
inc
push
push
mov
pop
aad
jo
jp
daa
shl
mov
xor
stos
jno
mov
xor
into
pushf
test
out
in
jb
mov
pop
xchg
pop
out
or
mov
mov
daa
stc
addr16
aad
or
aas
cmpsl
xchg
mov
testl
mov
push
dec
fidivl
in
mov
or
xchg
adc
arpl
imul
pop
push
mov
shll
dec
mov
mov
and
push
data16
pop
pop
fstpl
bound
pop
imul
jp
mov
and
xchg
fs
push
stc
ljmp
outsb
mov
xchg
inc
or
mov
or
jl
aam
push
movsb
jg
push
xor
inc
dec
ljmp
cmp
fcomp
es
subl
cmp
push
push
inc
inc
lahf
ss
ficomps
lods
notl
pushf
or
pop
fadds
adc
cli
gs
fcomps
jne
ret
and
xor
mov
pop
data16
data16
std
push
mov
push
sub
adc
fwait
or
add
fucomp
movsl
xor
inc
ficoml
rorb
scas
jnp
leave
aas
inc
cltd
and
jnp
into
ljmp
test
loope
xor
loope
out
mov
lahf
xor
inc
lods
inc
adc
leave
inc
mov
sub
adc
add
push
enter
push
fidivrl
ja
outsl
jno,pn
sbb
sub
push
call
imul
push
popa
sbb
add
add
mov
push
mov
out
jmp
out
jl
mov
push
in
in
cmp
fwait
xchg
xchg
cli
mov
push
mov
ljmp
cltd
adc
repz
jnp
dec
inc
mov
xchg
mov
mov
sarl
dec
in
mov
data16
dec
cli
mov
cli
ss
jnp
dec
xchg
push
loopne
lods
cmp
es
add
in
jle
xchg
cld
xchg
ret
into
ss
add
sar
hlt
hlt
mov
stos
test
sub
adc
orl
mov
cs
mov
inc
rcll
fistps
nop
in
leave
cmpsl
or
fstpt
cmpsb
mov
dec
mov
incb
sbb
or
push
xchg
mov
inc
inc
enter
rorb
loope
jg
int
xor
pushf
xchg
xchg
int3
adc
cmc
adc
jae
mov
xor
cmp
fiaddl
testb
push
ret
mov
test
or
sub
jno
je
push
sub
lock
sbb
call
xor
leave
call
rcr
pop
pusha
jecxz
xchg
mov
fsubs
jae
inc
cmpsb
aas
cmp
cmp
inc
push
pop
insb
popa
or
pop
jns
push
rolb
stos
xchg
ss
mov
add
push
cmpsl
hlt
push
add
scas
jmp
dec
add
inc
ffree
xchg
pop
pop
adc
shrb
mov
sbb
xor
pop
in
clc
lahf
nop
add
mov
hlt
mov
imulb
rcll
jmp
cmpsl
mov
cli
push
stos
in
sbb
cmp
jb
push
sahf
push
xchg
insb
mov
out
cli
into
arpl
ds
cmp
and
inc
ds
fbld
out
inc
jno
aas
inc
pop
mov
aam
out
sti
push
test
and
sbbl
push
dec
stos
int3
push
insb
inc
leave
mov
push
loop
fiaddl
xor
cmp
les
notb
pop
sbb
sbb
in
xor
jp
cmpsb
push
cmpxchg
sub
lcall
mov
popf
push
aad
xchg
push
mov
or
sbb
in
sarl
jg
cld
lods
pop
adc
lcall
and
pop
fcmovnbe
addr16
loope
aad
mov
aas
shll
loop
fnstsw
xor
xlat
mov
aad
or
xlat
loop
insb
mov
pop
xor
cmpsb
push
sub
push
lock
xor
out
xor
sbb
fisubl
inc
mov
ror
pop
fnsetpm(287
addr16
sbb
rorb
pop
and
lock
lret
mov
dec
add
lods
faddl
gs
stc
ret
pusha
xor
out
inc
xabort
jae
orl
adc
std
out
outsb
xchg
push
jecxz
out
mov
adc
push
imul
cmp
mov
movsl
addb
sbb
push
adc
cld
inc
jle
popf
ja
inc
test
roll
jo
add
add
push
call
ds
or
pop
mov
je
push
dec
lods
sbb
adcb
ret
mov
rclb
insl
xor
mov
xor
sbb
sub
cmp
mov
arpl
lret
dec
or
sbb
ja
sub
mov
movsl
js
mov
adc
mov
mov
pop
xor
or
mov
les
mov
out
lahf
and
or
not
js
lret
je
int3
xchg
inc
mov
lea
out
adc
insl
lahf
inc
test
push
in
aaa
mov
cmpsl
sarb
dec
nop
add
add
ret
sbb
push
or
xor
xor
or
mov
mov
xor
nop
push
xor
sub
popf
pop
ret
pusha
dec
jb
aad
sbb
and
add
icebp
pop
ljmp
xchg
mov
aaa
cmp
inc
out
iret
cmp
push
adc
scas
fimuls
icebp
xchg
imul
aas
popa
xchg
xchg
pop
dec
fs
roll
inc
push
mov
andb
dec
jno
mov
jp
inc
dec
mov
repz
sarl
jl
insb
int
sbb
int3
inc
push
popf
out
inc
repz
or
jge
push
movups
pop
rolb
jb
dec
shrl
push
mov
mov
cmpsb
mov
out
insl
inc
insb
out
lret
insb
jbe
jne
sub
bound
mov
mov
fwait
in
mov
lret
dec
das
dec
insl
xchg
lea
out
dec
loope
xchg
jo
sub
cmp
mov
dec
or
or
sarb
imul
addr16
jns
in
scas
mov
mov
gs
leave
ret
clts
dec
push
lcall
pusha
and
push
mov
es
cmp
ret
lcall
test
in
cld
cld
jo
outsl
lea
add
and
cli
xchg
lcall
andl
adc
lret
pop
mov
clc
roll
cmp
jno
push
xor
les
jg
lret
lods
or
ja
sti
popa
cmpb
pop
rcl
in
in
data16
pop
cltd
push
rorl
mov
inc
outsb
add
push
mov
xchg
xor
or
xchg
in
loope
js
jp
sub
mov
je
xchg
cmpsl
aas
ja
divb
dec
jno
add
fcomi
cmp
and
loop
pushf
ljmp
xchg
sbb
jbe
popa
sub
scas
push
cli
cmc
mov
push
call
dec
out
add
jnp
insb
aaa
pop
or
mov
pop
mov
mov
xor
aas
loope
jae
out
mov
dec
xchg
fldl
inc
mov
or
les
mov
mov
sbb
dec
or
mov
lods
inc
sbb
ss
sbb
jo
outsl
dec
das
inc
jne
mov
jo
ret
fldcw
mov
mov
call
xchg
loop
jne
lods
fdivrs
cmp
cmp
dec
mov
es
popf
inc
faddl
dec
fisubs
sub
arpl
dec
add
dec
test
xor
call
mov
adc
inc
sahf
gs
cmc
mull
xor
stos
cmc
push
jg
daa
cmp
dec
xchg
js
pushf
add
ffree
pushf
cld
insl
loop
or
mov
mov
cmc
shl
std
xor
pop
sbb
dec
dec
cmp
dec
and
dec
imul
or
sub
ret
push
ret
mov
cmp
mov
insl
popa
pop
adc
pop
lods
dec
xor
scas
mov
mov
lock
jmp
pop
lret
lds
rcrb
mov
cmp
bound
jb
mov
inc
jb
sbb
out
mov
push
enter
push
enter
out
adc
jb
mov
pop
push
pop
push
ret
push
mov
inc
inc
and
sbb
xchg
mov
pusha
mov
pusha
push
sub
cs
adc
xchg
mov
xchg
rcrb
movsb
jae
push
xchg
test
adc
pop
push
dec
shlb
scas
incl
adcl
sbb
addr16
dec
jbe
mov
push
aaa
gs
cmp
push
pop
xorb
inc
rol
cwtl
inc
imul
inc
dec
pop
cmpsl
inc
or
push
out
pushf
jmp
sub
js
es
ret
adcb
mov
sub
xchg
dec
pop
cmp
inc
ret
jb
adcb
adc
clc
and
scas
or
xchg
cs
jl
dec
arpl
mov
test
ja
mov
push
mov
cs
adc
cltd
push
inc
xor
lahf
jmp
add
cli
and
inc
andb
and
xor
xchg
push
adc
gs
scas
mov
std
shrb
cld
xchg
sub
stos
rcl
dec
lahf
inc
cmp
ss
mov
rol
add
cli
add
lret
popf
mov
fnstsw
std
dec
inc
mov
sbb
lods
mov
enter
andb
jl
jns
mov
call
xlat
mov
mov
xchg
cli
add
inc
in
pop
inc
mov
inc
xor
xlat
icebp
fwait
mov
and
lldt
mov
xor
pop
shlb
insl
hlt
cltd
pop
clc
int3
loop
int3
sbb
push
shll
mov
inc
xchg
pop
pop
sahf
and
and
jnp
les
jmp
sbb
lock
je
adc
push
cwtl
rcrb
mov
movsl
popf
jg
rcll
jmp
jbe
in
stos
pop
fdivl
sbb
test
xor
cmc
bound
push
xor
cmpl
inc
pop
repnz
xor
mov
rcrb
leave
xchg
mov
outsl
and
loop
xchg
sbb
cmp
pop
repz
adc
movsl
cld
pop
push
data16
fwait
into
outsb
mov
xor
mov
imul
inc
inc
jae
lds
inc
jae
mov
pop
mov
int3
insb
sbb
xor
stc
mov
int
cmp
fdiv
insb
fldenv
lds
xchg
jg
ret
dec
xchg
ds
sahf
inc
lea
push
shrb
mov
mov
shrb
and
and
inc
idivl
popa
mov
mov
mov
push
cld
and
test
push
fwait
xor
push
mov
sahf
push
adc
xchg
clc
fists
jle
sbb
insb
out
jmp
outsb
mov
xor
mov
aaa
imul
rorl
push
ret
outsb
pop
pop
int
int
pop
shll
cmpsb
pop
push
fstl
in
adc
push
and
shlb
sbb
inc
add
and
aad
in
cmp
cmc
and
in
arpl
push
jae
inc
popf
push
dec
dec
mov
negb
mov
sbb
rorb
repnz
fcomi
fs
rcr
push
rolb
add
js
jb
pop
xlat
jmp
xchg
popa
out
lcall
sub
imul
mov
sub
lahf
xchg
or
aas
mov
dec
bound
out
pop
xchg
pop
fidivrs
sub
push
ss
pop
adc
mov
data16
bound
mov
pop
mov
mov
dec
lcall
mov
pushf
pusha
or
movsl
and
addr16
dec
lahf
jns
rolb
out
adc
push
cmpb
movsb
inc
fistps
push
adc
repz
xchg
adc
and
sub
jo
popa
mov
nop
mov
mov
xor
mov
xor
add
icebp
sahf
jne
enter
push
add
push
in
mul
les
inc
mov
lea
xor
fisttps
or
outsl
mov
jg
dec
cmc
jb
adc
cmp
insl
jns
or
mov
das
dec
movsl
lahf
mov
repz
sbb
imul
jg
in
add
or
sbb
pop
mov
jecxz
add
loop
pushf
mov
jne
push
mov
movsb
lcall
mov
rcll
xorb
fsubl
dec
aam
pop
aaa
pusha
add
call
add
sbb
dec
shlb
out
push
test
stos
xor
les
sbb
jo
push
iret
ret
and
sti
pop
js
jmp
sub
nop
lods
pop
or
fwait
sbb
stc
in
jns
jecxz
dec
aad
jge
mov
xchg
or
mov
xchg
mov
dec
jae
mov
pop
lret
int
sbb
sahf
sbb
sub
cmp
mov
jne
movsb
mov
ljmp
lds
shrb
jle
jle
xor
ret
or
stc
movsl
jb
push
inc
add
sahf
push
sahf
mov
dec
loop
aad
push
jg
jbe
movsb
aad
lock
dec
repz
push
jns
sub
inc
xchg
hlt
dec
iret
inc
shll
pop
push
dec
jno
rcll
rolb
add
ret
push
lods
cmp
dec
popa
jbe
inc
xchg
call
mov
add
xor
jne
insl
add
mov
or
xor
pop
std
dec
and
in
mov
pop
das
cmp
scas
hlt
movsl
sub
push
adc
adc
add
pop
jp
xchg
sub
mov
stos
or
dec
fmulp
cmc
fcmovbe
jo
notb
xor
push
leave
mov
cmp
bnd
and
clc
iret
adc
clc
popa
ljmp
cmp
data16
pop
loop
adc
push
loope
decb
mov
rcrb
enter
pop
add
fcoml
jno
mov
lock
in
lahf
lret
xor
inc
cmp
mov
and
push
sub
jle
mov
cwtl
dec
shll
dec
jbe
cmp
jnp
fldt
cmc
adc
cmp
mov
jne
xchg
std
xchg
pushf
xlat
dec
sbb
sub
dec
push
shlb
adc
lods
pop
pop
lds
faddp
mov
cs
ret
js
aad
imul
ret
data16
cld
or
xor
xor
clc
xchg
mov
xor
repnz
dec
enter
addr16
dec
lahf
loopne
mov
xchg
cmp
jo
dec
dec
mov
sbb
outsb
push
dec
mov
and
mov
arpl
xchg
out
scas
pop
aad
jb
xor
lock
jnp
jle
int3
outsl
and
je
es
jnp
int3
inc
imul
fcom
fcompl
xchg
pop
cs
lahf
das
mov
movl
inc
adc
daa
and
orl
cld
push
and
insb
lods
push
cs
mov
adcb
cmp
dec
out
or
outsb
push
movsl
outsb
std
mov
ds
aam
xor
mov
xchg
testl
adc
loop
jnp
or
jle
or
add
loope
jnp
adcl
out
inc
xor
fildll
into
mov
mov
shrb
hlt
shll
int
mov
sbb
hlt
lods
mov
jns
and
gs
test
movsb
sbb
cli
rcll
xchg
add
cld
loope
divl
sbb
xchg
xor
fistpl
stos
or
fisubrl
jnp
dec
ljmp
or
sti
jp
push
sbb
sub
cli
dec
ljmp
or
mov
mov
fistpl
stos
or
cmp
lret
dec
ljmp
sub
sti
jp
push
sbb
sub
push
dec
ljmp
hlt
push
in
jb
bound
jle
inc
aad
mov
push
mov
add
mov
xorb
test
inc
aad
lds
cmc
adc
jp
repnz
ret
inc
mov
mov
bound
xor
and
adc
add
mov
or
push
cld
or
in
test
stc
cmp
inc
fstl
cmp
cltd
sbb
out
adc
xchg
cld
sbb
mov
jge
push
xchg
and
ljmp
cmp
faddl
sub
cltd
xchg
call
outsl
cld
cmp
fwait
cmp
mov
pop
movsb
cli
outsl
gs
xchg
stos
cmpsl
add
inc
aaa
xchg
inc
push
jp
adc
sbb
or
jns
shlb
mov
in
add
iret
test
cmc
and
sub
inc
mov
jne
test
cli
inc
sub
push
sbb
inc
ljmp
xlat
xchg
mov
icebp
xchg
xchg
gs
push
jb
bound
xor
and
adc
add
sbb
ret
pop
mov
out
loopne
rclb
inc
mov
test
notl
popa
mov
mov
icebp
and
adc
add
xchg
pop
test
shlb
cmpsl
inc
mov
jnp
popw
mov
push
cmpsl
xor
mov
cld
ss
shlb
movsl
daa
lods
sbb
and
adc
add
shlb
mov
xchg
jb
bound
xor
and
adc
add
shlb
mov
xchg
jb
or
mov
jmp
inc
cmp
jbe
lret
xchg
adc
js
enter
in
es
subl
jb
and
mov
adc
xor
loop
sbb
aam
jmp
int
mov
ror
push
clc
fnsave
iret
sub
adc
jnp
xchg
pop
pop
popf
cli
or
mov
sub
inc
sub
pop
inc
iret
cli
add
imul
jae
xor
aaa
loopne
popf
in
jne
ss
pop
into
inc
out
pushf
pcmpgtb
sti
test
push
add
sub
sahf
sub
mov
mov
dec
fcmovnbe
ja
fbld
push
int
lret
adc
popf
sbb
imul
pop
clc
xchg
adc
or
stos
push
pusha
pop
jns
stos
dec
mov
xor
test
mov
cmp
mov
adc
mov
test
mov
inc
jo
lods
mov
fisttpl
out
mov
or
scas
jne
push
cmpl
push
mov
dec
ret
mov
movsb
ja
imul
data16
test
cmpsl
int3
je
pusha
pusha
xchg
scas
popl
js
sub
mov
daa
cltd
adc
fistps
xchg
sub
adc
sub
mov
cmpb
jns
and
test
cmp
pusha
add
lock
gs
and
les
rclb
dec
mov
inc
inc
fs
add
pop
xchg
or
inc
xchg
rorl
cltd
cwtl
ss
or
aam
sub
push
push
adc
xlat
popa
lahf
dec
jg
lea
jge
jl
rorb
jbe
sbb
ja
out
dec
adc
addl
pop
in
cs
and
push
lock
aas
push
outsl
mulb
push
push
in
cmp
ret
xor
test
push
mov
push
mov
mov
xchg
dec
aam
xchg
push
lock
cmp
roll
scas
push
nop
cltd
fcmove
aas
cmpsl
dec
mov
push
jno
and
call
cmp
cmp
adc
jb
mov
push
js
into
ja
sub
or
mov
dec
push
mov
out
mov
int
xchg
sub
lds
nop
inc
or
aam
iret
pusha
fildll
test
aam
xchg
add
test
mov
insb
test
int3
sub
xchg
inc
and
push
sbb
fiaddl
jg
or
pop
mov
jnp
lcall
es
dec
mov
iret
cmpsl
mov
in
fstpl
and
push
lods
add
push
addb
sub
push
xchg
sbb
and
push
and
mov
popa
nop
adc
dec
adc
xchg
cmpsb
or
out
lock
cmp
js
insl
push
fcompl
in
adc
jge
xor
xchg
jle
or
or
adc
push
cmp
loope
jnp
data16
pop
daa
mov
arpl
xor
aas
lods
xchg
int
jecxz
mov
push
dec
mov
and
sahf
xchg
test
addr16
mov
sbb
jno
into
icebp
pusha
jno
pop
in
ficoml
sub
jbe
sti
inc
lcall
in
pop
out
sub
dec
imul
out
cwtl
cmp
dec
inc
aad
in
rorb
aam
push
inc
xchg
push
jo
call
cmpsb
jo
test
scas
jae
dec
inc
pop
testb
push
pop
dec
lds
cmp
ret
sbb
dec
aas
out
pop
inc
out
ja
and
xchg
fstp
cltd
shll
aam
mov
lret
jl
bound
pushf
pop
lea
cmp
test
hlt
imul
movsb
jns
mov
insb
mov
in
fidivs
iret
fwait
fs
mov
in
xor
mov
mov
call
cmp
mov
cmp
imul
push
jg
mov
pop
and
dec
ds
imul
add
fnstenv
rcrl
pusha
and
add
mov
subl
in
repnz
xor
inc
sub
rcr
adc
push
add
test
pop
mov
mov
push
notl
or
dec
fstps
push
jmp
inc
dec
mov
xchg
test
scas
loopne
sbb
mov
cmpsl
outsl
fcmovb
add
adc
dec
mov
xor
inc
mov
push
mov
scas
cmpsb
mov
push
jbe
and
dec
daa
leave
push
cmpsb
ja
in
jmp
adc
adc
fcoml
jno
ja
leave
add
test
sbb
mov
mov
ss
dec
dec
xchg
bound
mov
ja
sti
jecxz
and
cmp
adc
xchg
mov
ret
xor
cmpsl
inc
aam
jns
xchg
lods
cmpsl
inc
mov
aaa
xchg
movsl
movsl
fxch
xchg
fs
adcl
and
mov
mov
dec
ret
out
xchg
cld
fidivrs
pop
sbb
add
jb
movsl
stc
inc
popa
in
adc
lods
mov
arpl
loop
mov
cli
sbb
add
xchg
push
and
dec
cli
xor
or
mov
inc
inc
clc
dec
gs
mov
jo
cmpsl
mov
inc
xor
jb
adc
jne
iret
popa
in
imul
aam
inc
out
outsb
movsl
mov
jl
jns
nop
pop
js
roll
fisttpl
fstp
lcall
push
adc
xchg
xlat
jg
loope
repnz
sarl
in
fistl
stc
mov
dec
jecxz
dec
fs
movsb
mov
ja
divl
das
int3
imul
dec
repz
inc
out
fidivs
bound
cli
daa
in
xor
fadds
test
cltd
mov
mov
xchg
push
xchg
fnstenv
mov
lret
dec
subb
cmpsb
std
cltd
mov
push
cmp
pop
ret
test
mov
pop
xchg
outsb
xor
lahf
push
dec
mov
dec
sbb
movsl
mov
les
sarb
sub
inc
mov
pop
push
pop
in
mov
int
clc
mov
jne
movsb
dec
cmpsb
jmp
xchg
in
call
sbbl
ja
out
push
mov
fdivrs
aaa
ss
scas
ss
sbb
popa
sub
mov
inc
inc
jno
pop
scas
test
ss
pop
xchg
xor
push
mov
mov
xchg
mov
and
xchg
or
ret
mov
and
or
sbb
add
mov
aam
mov
pusha
mov
repz
push
lock
out
das
inc
sbb
ret
je
xchg
std
or
test
mov
in
ret
gs
xchg
cmc
mov
daa
inc
test
out
and
sahf
jle
aam
nop
mov
shrb
inc
aad
jbe
gs
and
push
add
push
lock
dec
dec
repnz
pop
xchg
and
in
or
dec
mov
dec
pop
addr16
scas
add
xor
push
mov
mov
hlt
inc
sbb
movsl
cmp
out
xchg
mov
dec
pop
cmp
leave
pop
dec
cmp
inc
lcall
inc
ljmp
ja
push
fldenv
rdmsr
pop
mov
push
lods
dec
mov
mov
das
pop
mov
mov
pop
ret
sub
rcll
xor
aas
xorb
mov
push
insb
test
mov
ds
inc
popf
push
loope,pn
mov
xor
lahf
test
xchg
inc
push
or
dec
push
mov
pop
adc
mov
mov
pop
leave
js
nop
aam
adc
ret
sbb
addr16
aaa
ljmp
in
mov
sahf
and
xor
cld
shlb
fadds
inc
sbb
push
nop
xor
jnp
inc
scas
sub
je
push
xchg
xchg
pop
jg
mov
insl
push
icebp
cld
popa
xchg
push
pop
push
adc
and
daa
jbe
cmp
aam
push
jno
mov
jmp
jae
add
xchg
aad
xor
mov
pop
and
xchg
jno
jl
dec
mov
es
je
and
repnz
sbb
popf
jnp
dec
push
mov
jae
test
andl
ja
test
mov
mov
testb
outsl
cmc
out
jecxz
loopne
ror
in
repz
adc
sub
and
push
mov
sbb
xor
lcall
inc
and
inc
icebp
sub
lahf
std
or
out
aas
jecxz
push
mov
mov
cmp
iret
mov
mov
hlt
popa
scas
js
push
pop
inc
call
and
jge
inc
and
xchg
push
in
adc
jp
dec
clc
add
mov
cmp
aaa
punpcklwd
lods
or
aam
mov
dec
rol
movl
mov
fwait
push
imul
daa
mov
ja
fistpll
push
and
popa
push
out
test
pop
pop
or
jecxz
stos
daa
sbb
xor
ja
pop
out
adc
mov
repnz
subb
sub
aam
adc
lds
outsb
lret
pop
fcmovne
or
mov
enter
cmp
sub
mov
mov
mov
xor
and
insb
sbb
int
notl
je
cmp
sbb
push
fdivl
in
xlat
fldcw
out
cmp
xchg
xchg
or
pop
ret
or
add
sbb
scas
pop
negb
cmp
push
out
push
cmp
out
or
mov
push
cmp
or
pop
movl
sub
mov
push
mov
push
mov
mov
add
xchg
int
mov
add
pop
mov
inc
pop
xchg
ficoml
mov
push
cmp
xchg
or
out
repnz
je
and
cmp
cmpsb
xchg
insl
lahf
bound
neg
sbb
mov
mov
outsb
and
repnz
mov
clc
mov
xchg
mov
ja
push
cmpsl
lret
test
scas
pop
nop
push
insb
arpl
dec
mov
or
pop
in
xor
sub
mov
arpl
mov
pop
test
test
mov
js
pop
adc
mov
in
inc
mov
and
and
lahf
fbstp
test
mov
sub
js
xchg
rcll
xchg
mov
mov
pop
insl
lahf
out
stc
fwait
outsl
loop
js
mov
loope
or
mov
pop
orl
cld
call
sub
or
das
arpl
stos
inc
incb
jns
jne
mov
stc
sbb
or
mov
inc
or
adcb
xchg
lods
sbb
mov
mov
pusha
pusha
repz
push
sti
xchg
ret
repz
out
aam
popa
mov
das
jae
mov
fwait
sti
mov
lcall
jb
jle
sub
dec
fisttps
out
aas
mov
andl
mov
dec
mov
pop
int3
shr
mov
dec
cmp
adc
repz
cmc
xchg
mov
push
and
fwait
and
push
lret
xchg
jg
mov
sub
jno
mov
lds
push
aad
xchg
push
dec
fiaddl
clc
jp
lret
mov
loope
cmp
xchg
mov
ss
aam
push
fwait
mov
and
push
insb
jnp
xchg
add
add
pop
mov
add
pop
mov
jnp
xchg
cld
and
pushf
in
xchg
mov
int3
or
aaa
add
loop
dec
add
xchg
jmp
and
iret
or
mov
div
imull
aas
mov
mov
add
add
push
aam
into
mov
out
add
pushf
decb
cmp
mov
jo
inc
xor
das
push
or
outsl
lret
out
aam
je
jmp
hlt
bound
insb
sahf
lea
into
sahf
xchg
lret
movsb
cmp
jl
adc
sbb
daa
repnz
ret
out
loopne
sahf
push
sbb
popa
dec
cmp
fdivrl
shlb
std
insb
mov
les
test
mov
add
jbe
shll
stos
outsl
xchg
mov
test
fdiv
rorb
add
xchg
lret
enter
cs
dec
dec
call
jl
bound
pop
pop
push
add
sub
or
push
cli
rol
add
cmpb
adc
sub
inc
lds
into
and
and
cmp
dec
inc
pushf
adc
scas
gs
int3
in
insl
cmp
jmp
sahf
fwait
sarb
inc
jnp
jecxz
cmp
xchg
jns
adc
xchg
push
arpl
jae
and
jae
fidivrs
xchg
jb
pop
mov
nop
or
fldcw
aam
adc
fisttpll
mov
cmpsb
inc
inc
mov
inc
es
and
inc
cs
lahf
jae
pop
icebp
cmp
adc
dec
pop
inc
mov
shrb
sub
fisubrl
xor
push
in
mov
mov
push
popa
sar
add
push
or
ret
ret
dec
fwait
xor
int
cli
add
or
pop
jo
dec
inc
shrb
test
lock
xor
andb
jl
mov
ljmp
mov
sub
pop
mov
cli
xor
lret
daa
lcall
push
dec
fs
negl
jecxz
jmp
lahf
xchg
cwtl
jo
cmp
inc
leave
pop
sbb
push
push
jmp
insl
jecxz
mov
inc
cmp
loope
push
cwtl
cmp
xchg
inc
pushf
mov
sub
into
pop
xor
sub
out
cmpsl
or
add
dec
xor
test
inc
push
inc
mov
xchg
dec
dec
loope
mov
ljmp
fcomip
mov
hlt
mov
dec
in
sbb
adc
cwtl
dec
cmp
cs
dec
repz
cmp
pop
xlat
repnz
out
mov
push
sbb
cmp
pop
push
hlt
adc
sbb
push
test
stc
enter
cli
jne
mov
stos
cli
daa
pop
lock
sub
test
fidivrs
mov
mov
and
daa
movsl
xor
xchg
mov
xchg
scas
inc
ja
jecxz
sbb
mov
inc
cmp
push
mov
xor
jo
push
and
cmp
push
jnp
aad
clc
adc
orl
and
lods
xchg
pusha
lock
or
mov
dec
stos
ss
xchg
xchg
xchg
lds
add
stos
test
mov
lods
cmp
cld
cmp
lock
test
nop
and
xchg
inc
test
ret
lret
pop
fsts
mov
shrb
aas
andl
inc
mov
dec
push
jmp
lods
fdivp
mov
popf
adc
and
imul
xor
mov
stos
notl
dec
cmp
push
cmp
enter
xor
cld
clc
jns
sbb
ret
ret
rcl
pop
outsl
mov
or
js
mov
jae
call
popa
pop
pop
mov
push
adc
push
andb
pop
dec
xchg
mov
call
xchg
aaa
das
arpl
daa
out
add
or
adc
movsb
sahf
xor
cmp
xchg
xor
push
cmp
add
lret
mov
lcall
jne
sbb
test
pop
pop
xchg
jo
pop
sbb
imul
pop
aaa
neg
cld
fwait
mov
in
test
int
int3
out
adc
iret
and
and
sti
inc
mov
cmc
adc
jp
dec
aas
add
outsb
adc
pop
cmp
sti
sub
leave
insl
xor
mov
aaa
push
adc
xchg
cli
je
movsl
jo
insb
loopne
push
or
movsb
cmpsl
jb
les
pop
repnz
jae
pusha
jmp
or
movsl
daa
xchg
cltd
or
push
lods
das
or
lds
imul
pop
push
sub
sbb
xor
mov
xchg
bound
rorl
cmp
cwtl
imul
bound
sub
scas
mov
out
shll
mov
pop
jl
mov
xchg
mov
push
mov
inc
pushf
mov
fidivl
test
jle
out
mov
mov
icebp
imull
andb
push
adc
mov
lahf
fidivl
clc
or
inc
dec
fwait
sbb
add
lret
nop
cmp
or
sub
jb
ror
faddl
adcl
push
mov
and
fwait
xor
push
pop
icebp
js
insl
testl
ds
and
movsl
mov
xor
jns
jnp
je
adc
mov
add
js
push
imul
pop
std
rorl
jns
decl
lret
sbb
cmpsl
push
pop
cmc
sbb
sti
sahf
mov
jmp
insl
inc
or
adc
popa
lea
lods
daa
pop
data16
in
add
shll
js
pushf
mov
cli
and
mov
les
rcll
cld
ljmp
sub
in
xchg
enter
xchg
cld
dec
call
mov
mov
adc
lret
mov
shlb
push
imul
inc
sbb
lock
xchg
jmp
mov
dec
arpl
mov
inc
sub
loope
mov
loope
push
mov
sub
js
out
xor
inc
mov
jge
popf
mov
mov
xor
xor
jmp
xor
stc
enter
xchg
jecxz
xor
clc
mov
orl
in
adc
inc
stos
push
ljmp
cmp
xor
jmp
sbb
subl
notl
dec
bound
stc
andl
lret
frstor
adc
xchg
je
loopne
int3
adc
xchg
inc
mov
in
cs
pop
cld
and
out
xchg
add
out
jg
mov
std
xchg
sbb
scas
test
jl
call
fs
inc
xor
add
inc
mov
std
pop
jmp
loopne
lahf
daa
sbb
in
mov
and
cwtl
hlt
mov
fucom
push
ljmp
jns
stc
addr16
and
fiadds
sbb
cmp
adc
add
arpl
cld
push
insl
xor
mov
fidivrl
and
dec
cmp
pop
push
push
cwtl
cmp
mov
int3
push
jns
xorl
push
pop
dec
mov
daa
jns
int3
fcoms
loopne
add
ficomps
mov
lods
add
fcoml
dec
cmp
xchg
cli
mov
mov
sub
nopl
push
lahf
inc
aad
or
mov
test
cmp
stos
out
movsl
inc
es
jb
lret
mov
mov
out
mov
das
in
push
dec
mov
xor
jne
rclb
and
jbe
fdivrs
sub
sahf
enter
and
fwait
or
and
cld
inc
adc
fstps
jns
dec
mov
jl
ja
adc
and
xor
les
sub
dec
xchg
andl
xchg
sub
cmp
pop
fmuls
outsl
rorb
out
mov
lds
mov
jmp
aas
and
movsl
jmp
imul
sbb
mov
sbbb
jmp
mov
and
fistps
idivb
and
mov
jb
les
or
cmp
xchg
pusha
mov
cmovg
enter
inc
insb
jecxz
adc
aaa
daa
add
mov
stos
cli
add
pushf
mov
add
xchg
pusha
loope
int3
stos
pop
mov
imul
mov
inc
outsb
sbb
enter
mov
jns
call
jb
and
push
shlb
ja
lea
lea
push
adc
pop
test
pop
mov
adc
xchg
imul
sub
and
test
mov
loopne
loopne
nop
dec
and
aas
testl
and
adc
shr
cwtl
mov
inc
repnz
xchg
dec
repz
idivl
cmp
mov
sub
add
aad
mov
movsl
sub
mov
ret
xor
stos
xor
mov
mov
loop
jno
push
mov
fdivrl
mov
inc
shll
daa
xlat
jle
and
mov
xchg
and
jne
and
dec
jge
fiaddl
out
movsl
rolb
fisubl
movsb
xchg
outsb
dec
inc
xchg
and
sub
jne
mov
push
dec
cmp
ds
je
push
push
out
or
push
fldt
xor
int
jp
clc
add
sbb
push
jl
insl
inc
add
jne
js
int
inc
add
add
scas
inc
inc
movsb
imul
cli
push
loop
xor
aas
mov
xlat
push
inc
sahf
stos
lock
fstps
add
mov
icebp
xor
sub
jno
cmpsb
lds
stos
and
pop
popa
xchg
sub
push
dec
mov
jg
adc
mov
inc
aad
lds
cmc
adc
add
shlb
mov
xchg
jb
bound
xor
and
adc
add
shlb
mov
xchg
jb
bound
xor
and
adc
add
shlb
mov
mov
push
movsl
inc
aad
lds
jne
gs
repnz
dec
lahf
shlb
pop
mov
jge
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
call
fbstp
xor
adc
pop
add
add
add
add
pop
add
add
add
add
add
add
add
add
movsb
add
add
add
add
add
movsb
add
add
sbb
and
jnp
jno
outsl
add
add
addb
add
add
enter
jno
addb
add
add
add
add
add
add
add
add
add
add
adc
loope
pop
add
add
jl
int3
add
or
push
add
push
add
add
data16
imul
loop
sbb
pop
add
pop
add
cmp
ltr
add
add
jo
adc
out
test
outsl
add
add
add
mov
add
int
rolb
add
add
add
add
add
mov
add
rolb
add
sbb
je
or
push
add
test
repz
add
add
add
enter
lcall
add
add
jnp
inc
add
cmp
xchg
add
pop
add
push
add
pop
add
add
add
icebp
add
sub
add
inc
add
add
add
add
fiaddl
popf
add
add
push
add
add
add
add
pop
add
add
add
in
call
add
enter
mov
add
add
add
add
dec
add
add
or
add
add
add
add
add
jle
or
movsb
add
add
add
add
test
je
mov
add
add
movsb
add
loope
add
sub
add
jb
addb
add
add
add
addb
add
add
add
push
add
add
lock
sbb
add
sbb
xchg
add
add
add
add
add
add
jno
jnp
push
add
mov
add
dec
add
add
jg
addb
add
add
add
movsb
add
mov
add
add
add
add
add
and
adc
jg
leave
add
add
and
movsb
add
add
add
add
add
test
je
pop
add
xchg
add
add
cmpsb
add
add
add
or
pop
add
adc
add
add
imul
jne
fwait
add
push
pop
add
add
imul
lcall
add
add
add
call
add
add
dec
add
sbb
addb
add
add
and
rolb
add
add
mov
push
add
iret
add
jns
movsb
add
xlat
add
add
add
or
pop
add
outsb
add
add
ljmp
add
add
repz
add
xlat
add
add
push
add
add
add
add
addl
addl
pop
add
cmp
repz
add
add
add
add
add
add
inc
add
xchg
add
add
add
add
stos
add
add
add
stos
push
aas
lods
popf
xor
fwait
cs
jl
test
add
lods
adc
mov
xchg
cmc
lods
sbb
mov
jecxz
add
ds
inc
lret
jmp
pop
push
sub
pop
xchg
mov
and
push
sbb
fwait
mov
xchg
ja
xor
push
das
adc
imul
adc
mov
loope
push
sti
es
mov
imul
adc
call
xchg
xor
adc
xor
pop
fnstcw
xchg
repz
mov
mov
ret
in
pop
mull
jne
cltd
scas
xchg
leave
movsb
into
dec
push
nop
in
in
shrw
aam
xchg
mov
jge
in
movsb
lods
dec
inc
xorb
outsb
enter
jmp
dec
out
fidivrs
adc
loope
xor
mov
je
out
fld
iret
daa
push
popa
adc
mov
cltd
xchg
dec
mov
and
cmpsb
in
push
popf
mov
loopne
cmp
mov
mov
inc
push
dec
leave
testl
out
cmc
pop
sahf
push
push
inc
ficoms
jecxz
mov
or
mov
dec
pop
scas
movsb
fwait
pop
scas
icebp
insb
and
cmc
popa
stos
mov
cli
xor
xor
mov
dec
jg
push
fwait
ljmp
ds
insb
cmpsl
jne,pt
rcll
push
push
enter
fs
mov
mov
xor
sub
mov
mov
lods
sub
xchg
xchg
push
inc
maxps
add
leave
movsb
adc
in
dec
cmp
xchg
stos
or
add
imul
pushf
mov
sub
vorps
push
xor
mov
xchg
jp
jae
or
clc
pop
shrl
pop
cltd
and
cmp
int
inc
mov
inc
sub
adc
xchg
push
leave
ret
cmpsl
fdivrs
cmp
loopne
test
aas
int3
scas
aas
add
rol
dec
icebp
aas
arpl
clc
sbb
loop
hlt
lods
mov
dec
push
xchg
pushf
scas
add
cmpl
xchg
movsb
mov
lahf
stc
push
mov
dec
fcompl
repnz
popl
sub
sti
pop
sbbl
je
mov
fidivrs
mov
push
mov
add
push
mov
es
push
inc
sarl
dec
push
stos
test
enter
jo
inc
jmp
mov
sbb
clc
mov
addr16
push
adc
and
jae
cwtl
gs
testb
out
ds
pop
sahf
imul
pop
nop
inc
xchg
shrl
sbb
pop
xor
aaa
popa
xchg
insl
in
je
ret
pop
adc
insl
adc
ret
add
sbbb
stos
std
push
add
push
jbe
inc
mov
sbb
incl
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
