call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
cmp
mov
orps
add
mov
sbb
insl
jge
pop
iret
pop
iret
lods
aas
mov
paddsb
outsl
int3
pop
fmull
mov
sbb
insb
pushf
jl
dec
fistps
es
push
in
data16
ja
inc
fcoml
pop
cmp
insl
ljmp
insb
mov
iret
fdivrl
mov
test
fdivl
lods
xor
and
fwait
dec
fldenv
call
xchg
stc
bound
outsb
stc
xchg
in
hlt
repz
inc
aad
pop
aas
ret
inc
push
xchg
xchg
jp
mov
sub
mov
imul
jbe
inc
sub
outsl
pop
and
or
out
mov
iret
imul
lods
pop
jo
in
pop
shrb
cmp
cli
push
or
lods
das
adc
movsl
push
pop
inc
into
fnstsw
mov
add
hlt
xchg
int3
paddusb
xor
pop
ficompl
aas
xchg
adc
leave
fbld
iret
push
pop
sbb
or
xor
xor
sbb
sarl
xchg
lahf
sbb
fcomip
aas
mov
adc
int3
inc
fcoml
cmpsl
cmp
or
sbb
insb
out
clc
dec
fistps
pop
clc
das
loopne
rorb
scas
sub
and
xlat
arpl
js
sbb
sub
clc
outsl
aam
mov
pop
int3
cmp
je
jns
daa
lea
sbbb
stos
fidivrl
dec
out
jle
jp
adc
outsl
int3
pop
fmull
mov
sbb
insb
jl
dec
fistps
aas
mov
paddsb
outsl
int3
pop
fmull
mov
sbb
insb
jl
dec
fistps
aas
mov
sbb
inc
testl
cmp
les
test
push
repnz
xchg
jb
or
scas
jecxz
insl
movb
lods
je
cmpsb
xchg
adc
mov
lret
lods
xchg
movsb
xchg
fwait
xor
lcall
in
clc
push
pop
ret
sbb
lds
leave
out
bnd
sub
lahf
cmp
addb
inc
pop
les
data16
sbb
adc
jne
aas
mov
stos
dec
jo
inc
cmc
mov
push
test
jae
mov
lret
popa
xor
xor
test
rolb
jno
mov
add
jo
and
xchg
pushf
sbb
out
sti
xchg
adc
stos
aad
jno
icebp
mov
stc
push
jno,pt
jae
mov
jp
ljmp
lods
adc
push
dec
dec
cmp
and
adc
and
adc
inc
add
cmc
mov
inc
cmp
lret
cmpsl
xor
filds
repnz
into
push
jno
jmp
sub
lcall
fisubrs
iret
shrl
mov
mov
sbb
adc
bound
mov
xor
nop
das
shll
inc
fistl
sub
xchg
shl
mov
divl
int
or
sbb
gs
ret
stos
add
inc
or
orl
cli
pop
insl
aaa
or
pop
pop
lea
fdivrs
pop
test
addr16
push
pusha
cmpl
ss
das
add
mov
shl
shlb
daa
inc
call
adc
fmull
cmpsl
daa
pop
ja
dec
in
je
jmp
nop
jo
fcmovnu
cld
sub
xchg
fiadds
int
lock
xor
pushf
jno
test
cs
pusha
sub
inc
ds
aas
into
inc
test
scas
cmp
cs
arpl
aaa
mov
cmc
mov
mov
les
cmp
lea
cwtl
xorl
mov
mov
inc
fstps
push
js
lret
mov
jnp
mov
or
xchg
add
movsl
stos
dec
in
insb
pusha
push
xchg
sahf
jp
mulb
cmpl
add
mov
sub
orl
sti
mov
mov
loope
mov
dec
add
sub
cltd
jae
fs
es
shll
gs
clc
mov
jnp
xor
push
pop
sbb
in
aad
repz
in
jecxz
mov
andl
test
push
outsl
mov
lods
testb
sti
xchg
jmp
xchg
rcrl
imul
cmp
mov
lret
scas
je
dec
push
mov
fwait
outsb
xor
jne
movsb
movsl
jns
je
insl
dec
push
ficoms
imul
mov
adc
inc
insl
stc
lds
pop
stos
mov
imul
addl
add
arpl
mov
mov
mov
push
add
fsubs
xchg
out
stc
fsubl
and
pushf
pop
imulb
jle
nop
sbb
out
or
mov
push
fdivrl
or
mov
xchg
adc
pop
sub
daa
or
inc
popf
xor
cli
test
pop
js
mov
add
aaa
and
or
aaa
pop
leave
sbb
jl
sbb
or
adc
mov
cmpsl
enter
push
scas
xor
mov
imul
imul
fwait
adc
ret
pop
xchg
aas
jmp
pop
scas
pop
cmp
mov
cmp
cmpsb
adc
dec
nop
inc
movsl
and
sbb
aad
dec
pop
outsb
push
mov
xchg
mov
mov
dec
add
jp
ret
test
inc
repnz
repz
dec
cmp
mov
push
aad
xchg
ret
cmp
lcall
xchg
lret
out
ja
push
cmc
test
pop
hlt
in
fs
cmp
outsl
push
filds
add
push
mov
push
mov
hlt
mov
inc
daa
aas
push
jmp
jle
xchg
jle
and
loop
ret
fwait
adc
inc
aad
jne
notl
xor
inc
fmul
pusha
sbb
mov
push
test
scas
push
xchg
fildl
aaa
xchg
pop
fs
dec
aaa
shrl
js
stc
xor
cmpsl
mov
cmp
ss
fnsetpm(287
cwtl
nop
aam
and
mov
xchg
push
dec
or
repz
add
inc
cmp
cli
fs
cmp
daa
divb
jno
fnsave
repz
jne
ljmp
fisubrl
aam
scas
cmpsb
aad
push
push
inc
add
js
cmp
aad
cmp
mov
add
xchg
test
pop
xchg
dec
jbe
repnz
data16
imul
push
sarb
pop
pop
push
or
mov
fnstenv
pop
jo
pop
push
ja
shlb
dec
lret
cmp
hlt
xchg
aad
and
lahf
jnp
xchg
clc
dec
mov
jecxz
mov
add
ret
xor
icebp
cmp
xor
sbb
fldt
mov
jg
add
mov
mov
fdiv
inc
ret
mov
push
popa
mov
addb
push
insl
push
mov
insl
fadd
fcoms
jb
sub
adc
gs
pushf
pushf
data16
imul
mov
rcrl
adc
dec
add
or
sbbb
mov
pop
inc
ficoms
int
xchg
mov
mov
shl
loop
and
orl
cmp
xor
pop
pop
push
pop
mov
sbb
ljmp
jl
cmp
iret
clc
test
rclb
cmpsl
adc
inc
shll
dec
sahf
loope
dec
out
or
fsubl
jge
je
stc
sbb
imul
mov
insb
sub
sbb
jno
lret
push
mov
add
lret
enter
in
icebp
ss
arpl
fstpl
push
sub
jmp
fstps
mov
shrl
popa
mov
out
aam
mov
and
mov
cwtl
testl
pop
mov
xchg
dec
and
fucom
mov
xchg
into
mov
gs
sti
pop
stos
loopne
push
push
shll
sbb
test
lea
mov
rol
stc
insl
out
xchg
and
xor
pushf
dec
xor
bound
rorb
hlt
xor
fwait
jl
out
int
call
rcrl
xchg
mov
loope
sub
out
in
dec
movsl
inc
fildl
sub
sbb
mov
inc
mov
xchg
and
arpl
shl
sub
mov
xor
inc
push
sar
lods
imul
pop
mov
mov
inc
es
and
inc
les
popf
loop
jnp
test
cs
mov
cmp
sbb
jno
cmc
sbb
addl
mov
jp
sbb
and
es
movsl
pushf
push
ror
mov
jo
xchg
or
xchg
mov
mov
push
sub
mov
ljmp
lds
popa
dec
icebp
mov
fidivrs
lods
jae
or
cs
ret
xor
sub
fcomp
insb
ja
inc
aaa
lret
nop
push
push
movsb
cmc
push
adc
fistps
jne
inc
scas
sti
shlb
or
push
and
dec
lret
dec
dec
cmc
scas
inc
or
inc
mov
inc
mov
es
sub
lods
xor
cmp
or
popa
dec
sarb
cld
leave
pop
in
dec
xchg
push
pop
cmp
push
lret
in
arpl
push
js
mov
scas
inc
xchg
mov
mov
je
add
aad
pop
loop
xor
lds
fwait
scas
jns
pop
lea
xchg
cmp
jge
mov
inc
pop
push
lahf
gs
push
gs
repz
dec
xorl
mov
iret
inc
mov
jle
pop
jno
jecxz
pop
and
andb
push
mov
or
fsubrl
mov
mov
iret
in
lea
sbb
loopne
inc
sub
xchg
pop
or
cs
test
mov
sti
sub
xchg
pushfw
jmp
les
jge
pop
les
mov
pop
lcall
push
lds
mov
add
jle
mov
mov
enter
push
popa
push
fsubrs
push
es
mov
jp
add
cmp
jnp
and
ljmp
fildl
sub
xchg
mov
subb
stos
pop
xchg
or
mov
in
jle
sub
leave
adcl
xlat
cli
pop
int3
jg
inc
insl
mov
stc
and
aam
js
repz
es
test
ds
push
or
out
divl
jns
mov
dec
adc
mov
add
xchg
in
or
xchg
mov
push
cmp
pop
or
aas
lods
enter
push
cs
mov
cmp
mov
sarl
lods
mov
insb
adc
cwtl
ss
jl
aam
sub
mov
out
sbb
scas
subb
imul
fmul
jge
push
cltd
daa
adcl
push
lret
pop
pusha
jl
cmpsb
sub
adc
jb
lret
inc
sub
pop
sub
cs
xchg
mov
mov
sbbl
loopne
ret
dec
mov
scas
push
outsb
cmp
xchg
mov
adc
ret
push
sub
dec
dec
jp
data16
xorl
outsl
call
out
xor
pop
ret
sbb
and
lock
jecxz
ljmp
sub
dec
test
xor
sub
adc
mov
decb
idiv
aad
dec
push
test
bnd
mov
and
stc
outsl
aaa
jo
cmpsb
push
jnp
imul
sub
mov
pop
test
adc
cmp
bnd
and
xchg
mov
adc
xchg
pusha
ljmp
pop
stos
jnp
jnp
jg
jne
icebp
loope
bnd
fcoms
mov
mov
mov
push
shll
mov
pop
mov
ret
ret
lods
arpl
sub
sbb
psubsb
xchg
mov
xor
dec
aad
xchg
sbb
sbb
inc
sbb
pop
jle
dec
sub
xlat
cmp
lcall
push
add
notb
mov
pop
cmc
fcompl
loop
dec
mov
test
sub
leave
into
adc
scas
pop
pushf
inc
mov
movlps
mulb
xchg
and
sbb
mov
das
inc
ret
sub
call
jne
cmp
push
or
push
push
or
jge
movsl
lret
sbb
fxch
cmp
imul
sub
stos
pop
cwtl
js
das
jmp
cwtl
mov
mov
push
mull
dec
nop
push
out
xor
cwtl
pop
dec
test
cmpl
ja
push
jbe
in
shlb
pop
shrl
aad
ret
stc
nop
std
adc
bound
dec
mul
ss
mov
mov
ja
popf
mov
imul
arpl
test
xor
sbbl
jl
cmp
dec
aad
scas
pop
dec
clc
pop
push
cmp
push
adc
mov
dec
xchg
js
mov
jnp
scas
sahf
hlt
test
cmc
insb
test
arpl
and
in
mov
sti
inc
dec
lods
call
and
or
jge
sbb
push
ret
jl
dec
mov
inc
cmc
pop
push
stos
out
xor
mov
nop
sbb
xchg
out
in
dec
or
int3
daa
xor
adc
mov
and
call
cmc
ret
pushf
movsl
lds
fimuls
push
xchg
pop
push
xchg
sbb
xchg
xchg
adc
inc
inc
sbb
pop
push
sarb
jns
adc
adc
cmpsl
and
mov
jmp
xchg
xchg
xchg
adc
aam
iret
xchg
sub
inc
push
sbb
push
lahf
lcall
adc
and
mov
mull
les
xchg
mov
xchg
loopne
fistpl
mov
xchg
add
shlb
dec
mov
xlat
cmp
xchg
inc
loopne
popa
sbbb
cmp
out
xor
hlt
push
rclb
in
sub
jns
iret
lea
roll
enter
mov
cmp
out
inc
daa
ficoml
cmp
or
sti
jo
pop
add
or
xor
fnstsw
inc
aam
push
or
cld
rcll
mov
mov
fsubr
add
xor
pop
out
mov
stos
repnz
aaa
fwait
in
xor
popa
frstor
jbe
and
ja
loopne
xor
fbstp
add
push
subb
dec
pop
mov
mov
mov
aas
and
dec
pop
lods
cmp
inc
out
test
xchg
add
mov
cltd
pop
or
repz
mov
fnstsw
xchg
inc
lock
jp
lcall
adc
adc
sbb
orl
imul
and
mov
xor
mov
mov
repz
in
xor
cmp
test
jb
xor
lret
movsb
push
xlat
in
adc
hlt
and
jae,pt
pop
push
pop
pushf
pop
icebp
addl
shlb
add
call
cmpsb
jbe
mov
icebp
sbb
test
pop
cmp
push
push
mov
test
add
or
test
aaa
fildl
pop
or
mov
mov
lods
rcll
mov
fucomp
mov
xor
icebp
in
mov
push
dec
jecxz,pt
test
jnp
ret
fsubrl
and
ds
in
mov
cmp
sub
mov
incl
dec
inc
adc
push
mov
inc
cmp
sarl
je
inc
xlat
cmp
fdiv
mov
jae
js
or
sub
dec
cmpsb
scas
add
loope
ljmp
jg
test
fisubl
inc
sub
call
jmp
adc
test
daa
sbbl
mov
inc
out
rcll
sbb
lods
adc
mov
adc
pcmpeqd
stos
cmp
and
mov
jno
xor
loope
inc
jg
cmp
push
movsb
xor
adc
sub
fbld
mov
cmp
fldl
inc
gs
cmp
xchg
pushf
mov
mov
andb
cmpsl
mulb
jle
xchg
outsb
imul
test
inc
fcoml
xor
xor
ret
pop
mov
jbe
out
xchg
jnp
jmpw
sbbl
inc
xor
xor
loop
mov
shll
xchg
jecxz
cmp
and
cli
lds
addr16
add
xchg
sbb
in
iret
xlat
push
cmp
es
xor
mov
inc
std
inc
insb
inc
sbb
sub
dec
popf
sbb
push
movsb
sahf
mov
adc
sbb
mov
lods
rcl
dec
popf
cs
in
xchg
pop
sti
push
jge
add
loope
vxorpd
fs
lock
add
inc
mov
shll
fcmovb
push
or
mov
sbb
cwtl
cmpb
fisttpll
xchg
fcompl
jbe
push
lods
xor
mov
cmp
mov
jl
rorb
cmpsl
cmpsb
aam
cld
or
cmp
leave
push
adc
in
test
test
push
aam
sti
push
cli
jge
jb
push
or
ss
rcl
inc
mov
ret
xor
rcll
push
es
sub
sub
subb
ja
lods
jmp
adc
les
aad
into
loopne
cmp
add
sbb
and
and
inc
or
and
add
sub
inc
loopne
xor
push
mov
test
aam
pushf
repz
cmpsb
ljmp
neg
sub
pusha
jne
rcrb
mov
movsl
push
xchg
jp
mov
jne
mov
jns
or
or
cmp
jb
adc
lods
push
mov
dec
push
lock
rcl
xchg
stos
sub
insl
ss
push
xchg
repz
int3
inc
add
jb
mov
cltd
adc
dec
cli
cmp
ja
mov
inc
in
inc
cmp
test
std
popa
inc
daa
sar
mov
cmp
cltd
sub
adc
idivb
xor
push
add
dec
mov
rolb
adc
fcomp
les
mov
add
and
add
data16
and
mov
jo
push
pop
and
insl
rolb
push
xchg
ljmp
inc
nop
mov
mov
xchg
shrl
mov
lret
mov
pinsrw
dec
jmp
cwtl
mov
jno
add
pop
dec
mov
out
stos
das
pop
dec
xor
or
or
mov
mov
jmp
push
outsb
or
arpl
push
dec
inc
push
push
std
xor
xchg
dec
loopne
or
test
xor
inc
lea
call
pusha
cld
rol
mov
mov
push
nop
ss
mov
dec
inc
stos
cmp
cs
insl
orl
mov
pop
mov
cmp
dec
in
iret
inc
ljmp
xchg
pop
fs
xor
jp
lahf
adc
push
cld
rcrl
dec
push
dec
mov
jge
dec
repz
inc
xchg
push
xchg
paddb
add
sub
sub
or
sub
or
sub
or
je
fildll
adc
mov
add
cmp
add
test
jp
cld
mov
add
cmp
gs
jae
ljmp
stc
popa
and
inc
jo
pop
mov
adc
mov
xchg
sbb
xor
and
pop
pushf
push
jmp
rclb
mov
bound
push
hlt
ret
dec
adc
data16
xchg
ret
insl
mov
mov
push
test
inc
push
jno
adc
loopne
sub
repz
pop
and
mov
xlat
pop
je
dec
mov
divl
sub
gs
mov
fstpl
jmp
mov
or
xor
fwait
pop
inc
imul
add
ret
lods
sub
mov
dec
xchg
lods
repnz
jae
fiadds
jne
andl
data16
inc
xor
sbb
sub
fnstenv
push
pop
pop
mov
mov
sub
sub
int3
das
dec
inc
jo
xchg
dec
push
push
das
icebp
lahf
push
xor
lret
outsl
ja
aad
in
xchg
in
cmpsl
shrb
cli
jp
and
mov
dec
jmp
mov
test
insb
fsubrl
xor
dec
movsb
xchg
ss
ret
rorl
sti
sarb
daa
das
and
inc
hlt
inc
pop
mov
scas
inc
and
jne
aam
pop
mov
sti
pusha
out
mov
sarl
and
jecxz
dec
mov
sbb
int3
dec
sub
jno
aam
jecxz
sub
xorb
mov
mov
in
adc
pop
cmpsb
je
je
mov
out
sbb
jns
push
mov
subl
out
cltd
mov
orb
lds
test
adc
fisttpll
mov
shl
mov
cmp
in
subl
mov
pushf
adc
xor
sbb
mov
popa
fstpt
shrl
sti
push
sarl
push
sarb
jae
adc
fists
jo
cmc
and
pusha
jg
shrl
dec
jmp
pop
mov
adc
sbb
lret
push
jae
gs
sti
sbb
cmp
cmp
sub
bound
inc
lcall
aas
cs
nop
lds
sbb
pop
loope
xorb
sbb
mov
mov
cmp
push
xchg
repz
test
adc
and
aaa
jmp
pop
dec
insl
xchg
mov
mov
ss
cmpsb
mov
cmp
pop
or
xor
xor
vaddsubpd
fucomp
out
push
inc
add
dec
rclb
lcall
test
sbb
in
push
in
fs
push
fldcw
inc
push
mov
aaa
out
inc
jb
lock
ret
cmp
push
dec
mov
pop
cmp
pop
mov
and
add
das
insb
or
repnz
cmc
fldcw
mov
out
dec
inc
jns
mov
and
push
dec
lret
xchg
and
imul
mov
push
and
lock
gs
movsl
data16
dec
xor
cmpsl
mov
movsb
es
call
xchg
mov
mov
fxtract
icebp
dec
mov
sbb
xchg
and
loop
dec
cmpsl
xor
rol
inc
in
rcrb
mov
dec
sarl
adc
roll
mov
mov
dec
mov
push
rcll
mov
jl
addl
push
stos
pop
imul
jecxz
or
daa
dec
jns
and
mov
dec
inc
fldenv
pop
cltd
repz
mov
aaa
fnsave
pushf
paddsb
outsl
int3
pop
fmull
mov
sbb
insb
jl
dec
fistps
aas
mov
paddsb
outsl
int3
pop
fmull
mov
sbb
insb
jl
dec
fistps
aas
mov
paddsb
outsl
int3
pop
fmull
mov
sbb
insb
jl
dec
ficomps
lods
aas
mov
paddsb
outsl
int3
pop
fmull
mov
sbb
sbb
adc
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
add
adc
and
xor
dec
add
adc
xchg
xchg
andl
hlt
loope
adc
and
xor
inc
push
push
inc
fs
popa
test
mov
rcl
shl
hlt
loope
adc
and
xor
inc
push
push
inc
fs
popa
test
lcall
xchg
lcall
push
inc
int
xchg
push
sub
popl
insb
mov
testb
sbb
mov
sbb
fisubrs
sarb
jb
mov
mov
in
or
in
mov
lret
lcall
mov
popa
rcrl
orl
adc
xor
lcall
xchg
sub
pop
cmp
test
mov
dec
out
fdivr
push
pop
mov
xchg
aam
xorb
test
loope
sti
xchg
sub
arpl
aam
mov
mov
nop
pop
mov
mov
in
pushf
loope
adc
and
xor
inc
push
push
inc
fs
popa
test
mov
rcl
shl
hlt
cmpsl
inc
jl
rolb
push
sub
add
call
mov
jae
test
push
dec
je
push
jbe
xor
outsl
fs
je
loope
xchg
in
in
icebp
int
mov
hlt
insl
inc
jo
dec
inc
xor
inc
fs
popa
test
mov
rcl
shl
hlt
loope
adc
and
xor
inc
push
push
inc
fs
popa
test
mov
rcl
shl
hlt
loope
adc
lock
xchg
clc
push
frstor
imul
mov
inc
ss
and
mov
lcall
cmpsl
cmpsl
movb
xchg
jb
mov
and
adc
js
mov
jo
add
push
jge
xchg
dec
je
insl
xchg
inc
xor
jle
popf
sub
add
mov
sub
push
mov
xchg
xchg
sahf
testl
push
pop
aam
push
repz
jmp
dec
or
mov
fincstp
cs
sbb
lds
into
sti
and
pop
xor
fstpl
mov
sahf
cmp
stos
or
mov
movsb
aam
pop
mov
cmpsb
push
and
push
aad
mov
or
int
fistps
aam
dec
cwtl
cmp
xor
hlt
push
push
add
loope
xor
popf
mov
mov
mov
call
sti
sub
pop
cmpsl
add
pop
lcall
cld
xchg
mov
jmp
lods
or
xlat
sub
repz
mov
and
gs
outsb
ret
ret
ss
xor
mov
popa
pop
xchg
fsts
rorb
xchg
sahf
test
mov
aas
pop
mov
filds
jl
jnp
inc
push
lods
je
popf
sarl
lods
shrl
inc
popf
repz
adc
loopne
shll
popa
rolb
pop
lahf
xor
stos
sbb
sbb
call
mov
adc
outsb
xchg
gs
add
jae
int3
cmp
push
push
mov
sub
lret
stos
inc
sub
sub
adc
cld
fstps
jg
jl
aaa
ja
and
jbe
addr16
cmpsb
adc
fistpll
and
jb
adc
or
mov
aam
rol
and
adc
fldenv
repnz
xchg
jbe
xor
cmp
xor
inc
mov
push
sub
xchg
adc
adc
in
lods
push
sbb
aam
out
mov
jbe
sbb
leave
bound
xchg
ret
jmp
dec
cmc
pop
popa
mov
lea
mov
cmp
ja
pop
outsb
ret
rcrb
filds
fnsave
repz
call
inc
adc
inc
inc
popl
add
test
dec
fistps
push
repz
dec
mov
out
dec
jae
loopne
mov
inc
lret
xchg
in
sbb
adc
jnp
push
mov
lfs
cwtl
cltd
or
or
test
insb
aaa
in
ret
ja
jns
addb
push
subb
je
pop
jo
scas
dec
test
pop
push
int
fisttpll
mov
push
inc
ficompl
mov
or
ret
jns
in
push
sub
subl
jmp
in
jne
xchg
mov
adc
lods
jnp
shll
and
xchg
mov
push
inc
into
pop
adc
add
cmp
jecxz
imul
sbb
xchg
xchg
xchg
mov
sar
shll
pop
out
fstps
cmp
cmc
and
aas
sub
lea
in
addr16
stc
es
or
out
mov
dec
ljmp
and
mov
cmpsl
pop
xchg
ss
in
pop
push
pop
sub
xlat
and
negl
dec
lret
gs
jno
lock
push
mov
and
add
inc
xchg
lcall
and
push
outsl
imul
jl
daa
repz
cmpsb
dec
cmp
and
inc
inc
lret
icebp
lcall
mov
adc
push
or
mov
push
sbb
xchg
imul
rolb
lahf
adc
sbb
frstor
pop
fs
fbstp
sub
add
push
mov
js
xchg
push
sbb
aad
sbb
sbb
addb
test
leave
mov
cmp
xchg
frstor
sbb
stos
or
iret
dec
mov
leave
aad
xor
cmp
nop
inc
es
fwait
jnp
jmp
cs
sbb
and
mov
adc
test
test
call
cmpsb
incl
inc
and
mov
jecxz
andb
stc
sbb
sub
in
cld
outsl
shll
in
push
jo
or
mov
subb
ret
psllq
aaa
sbb
push
cmp
out
lcall
cmpsb
adc
aam
out
imul
cmp
add
sarb
mov
call
pop
push
push
bound
pop
int
in
cld
stos
imul
inc
sbb
sub
push
lods
divb
das
enter
dec
imul
minps
clc
xchg
ja
xor
sbb
aaa
dec
xor
mov
shll
orl
ja
mov
shr
jns
js
in
pop
sbb
jae
idiv
adc
cmp
pop
mov
insb
insl
aaa
repz
stos
testb
and
pop
sub
dec
mov
inc
clc
call
sahf
xchg
mov
or
aas
sub
lcall
jge
in
push
xor
push
repz
pop
mov
and
xchg
adc
jne
incb
rclb
mov
loope
mov
in
mov
lret
ficoml
pop
sub
cmp
push
cmp
jg
ljmp
fcmovbe
pop
into
loopne
addl
into
xchg
adc
pop
push
mov
stos
mov
daa
xchg
cmp
mov
mov
and
shlb
jge
push
mov
jmp
pop
add
inc
je
outsb
xchg
test
leave
mov
flds
popa
js
inc
and
sub
sar
fsubrl
cwtl
mov
popf
sub
push
mov
dec
pop
push
outsb
in
into
outsb
mov
aaa
andb
repnz
adc
cmp
or
loopne
or
add
xchg
xchg
stos
jge
add
mov
sub
fcmovne
aam
mov
pop
subl
xor
fld
ljmp
popf
rclb
mov
cld
mov
mov
es
adc
dec
push
sti
sbb
inc
xor
test
imul
popa
inc
aad
ret
add
int
adc
shrl
pop
push
ret
pop
xchg
pop
aad
mov
mov
insb
sarl
cs
jecxz
or
add
pop
movsl
inc
stos
rorl
sub
test
add
add
mov
inc
cmp
notb
or
mov
int3
push
in
ret
or
fsubrs
icebp
pushf
sti
push
lahf
repz
fimuls
pushf
or
add
test
sbb
call
nop
sbb
pop
dec
inc
rol
movsb
popa
cltd
push
cmc
lea
cmp
inc
test
addr16
mov
sbb
icebp
and
inc
mov
lds
pushf
and
leave
and
dec
pushf
mov
jle
or
mov
or
fcomp
dec
imul
repnz
test
fistl
lret
and
jns
icebp
aam
dec
imul
mov
notb
in
les
int
ror
mov
inc
add
mov
add
push
pop
add
ljmp
mov
jo
jp
into
bound
pop
push
xchg
sub
test
inc
lods
inc
and
or
fmuls
xor
pushf
sti
mov
gs
std
aas
pushf
bound
jle
inc
ret
cmp
aad
jae
addr16
and
ss
cmpsl
add
ficoml
testl
aam
mov
mov
fwait
xchg
daa
ss
jb
adc
pop
inc
push
or
sarl
jmp
out
lahf
xor
adcb
shr
aad
js
repnz
mov
adc
sub
rol
sti
pop
sbb
inc
popa
movsl
push
mov
incl
or
dec
repnz
outsb
or
mov
dec
cmpsl
mov
and
in
mov
mov
popf
mov
or
xor
add
lods
daa
cmp
shlb
mov
loope
add
xor
dec
stos
pop
push
mov
cli
mov
add
adc
cmp
jecxz
xor
aad
and
sbb
sbb
inc
lds
pop
movsb
ss
adc
lea
or
pop
loope
cli
cli
inc
fcomps
mov
xchg
in
push
enter
shrb
pop
pop
subl
movsl
leave
inc
adc
dec
xchg
xorl
dec
arpl
icebp
imul
jb,pn
adc
and
sbb
mov
cmp
dec
pop
daa
or
ds
popf
cmpsb
sahf
stos
or
insb
loopne
popa
aas
inc
in
adc
sti
pop
or
gs
inc
in
dec
loopne
dec
pop
inc
jno
lahf
jecxz
push
call
aaa
sub
mov
sub
add
push
xor
fdivrl
imul
push
pushf
mov
inc
and
cmpsl
inc
mov
pop
mov
hlt
xchg
xchg
push
dec
bnd
mov
lods
testb
arpl
popa
fsubl
xchg
dec
cwtl
pop
xor
or
subl
cmp
lods
push
es
pop
dec
fiaddl
dec
int3
sub
leave
inc
mov
sbb
jg
cmpl
xchg
push
in
sub
dec
sbb
or
into
decb
ret
lds
mov
and
arpl
push
enter
xlat
mov
xor
das
ds
push
sub
sbb
xlat
xor
add
scas
into
cld
jp
dec
mov
lahf
fs
das
pop
addr16
cmp
shl
xor
out
loope
and
lds
rorb
pusha
mov
dec
jmp
mov
gs
in
pop
repnz
jns
lods
cmp
xor
out
lahf
jb
push
lds
lret
ja
push
sbb
fucompp
gs
cwtl
push
push
inc
pop
mov
stos
cmc
xor
into
add
push
outsb
push
push
insl
xor
push
sub
or
pop
arpl
xchg
hlt
enter
test
sbb
clc
scas
test
pop
jo
sbb
pop
pop
cmp
add
cwtl
js
jbe
filds
dec
dec
jno
aaa
add
pusha
ds
ljmp
jns
and
insb
scas
pop
lcall
fstps
out
leave
jae
xchg
cmp
jne
es
mov
jbe
adcb
or
or
mov
or
xor
jno
add
inc
jnp
push
scas
dec
ret
or
daa
not
pop
xchg
dec
cltd
jae
ljmp
and
pop
inc
lcall
push
lods
dec
dec
pop
xor
mov
les
mov
gs
in
inc
pop
les
add
xchg
fimuls
fnsave
lcall
imul
insb
xor
inc
sub
mov
jns
test
xor
jo
fildll
ss
and
movsb
nop
in
shl
or
jnp
adc
leave
jg
sub
ret
dec
sub
mov
das
je
insb
adc
xchg
adc
sbb
nop
mov
stos
in
sub
fs
adc
lods
imul
mov
outsb
xchg
aaa
imul
std
in
cli
adc
orl
xor
rcl
dec
addl
jo
push
dec
dec
icebp
dec
adc
jns
dec
and
mov
add
push
adc
test
inc
arpl
shlb
push
mov
push
loop
andl
push
pop
sub
xchg
mov
pop
pop
in
jecxz
pop
xchg
rcl
sub
xchg
arpl
sub
and
enter
xchg
inc
jne
cmc
icebp
leave
sti
imul
push
rcrl
xor
fsubr
push
or
dec
push
pushf
pop
out
les
xorb
inc
lods
fsubrs
fs
mov
shl
iret
idivb
push
lcall
push
inc
mov
hlt
imul
sbb
shlb
add
in
cs
pusha
xchg
xchg
mov
mov
lods
sub
in
test
adc
xchg
cmp
dec
pop
stc
jne
xor
test
dec
loop
ret
rorl
push
popf
cmpsb
pushf
lret
test
aaa
push
push
jmp
or
xchg
push
ds
mov
jl
mov
jae
and
imul
arpl
mov
insl
mov
mov
mov
dec
add
mov
shlb
jnp
cmp
push
adc
repnz
out
stos
pop
jle
lods
inc
into
mov
pop
push
or
push
inc
sbb
ror
xchg
pop
mov
in
jo
mov
inc
arpl
adc
ret
pop
adc
popa
cmc
inc
imul
in
leave
mov
cmp
jmp
scas
sbb
mov
or
dec
scas
jmp
mov
rclb
pop
cmp
lcall
lcall
fstl
arpl
sub
xorl
lcall
mov
xchg
call
sub
lcall
aad
pusha
mov
mov
sub
movsl
push
dec
mov
inc
inc
int3
dec
cmp
das
mov
cs
imul
add
out
dec
push
or
rclb
jbe
pop
jb
ret
mov
imul
negl
and
scas
sbb
adc
pop
rorl
cmpsb
add
inc
popa
loop
xlat
dec
orb
xchg
scas
jle
out
xchg
mov
dec
das
pop
int
lds
xchg
cmp
repz
xchg
repnz
lods
movsl
fcompl
mov
les
cmp
mov
add
fidivs
xchg
addr16
mov
xlat
jg
adc
incb
sahf
dec
aaa
daa
jg
out
stos
sub
js
scas
ret
testb
pop
dec
push
mov
lods
push
pop
mov
insl
sbb
sti
dec
enter
addb
shl
daa
sub
mov
pop
pop
push
in
mov
push
test
inc
mov
xchg
fiaddl
fstps
cli
push
sub
test
mov
dec
xchg
shll
inc
std
and
jle
add
mov
push
outsb
fbstp
test
je
loop
neg
lret
cltd
lret
nop
sbb
mov
inc
loop
fsubrs
or
or
scas
push
fdivs
cltd
jne
xchg
imul
in
mov
fldt
mov
xchg
ficoml
sahf
sub
and
aaa
jnp
push
mov
dec
cli
orl
mov
mov
popa
pushf
cmp
push
or
sbb
jb
or
cli
shl
or
movsb
dec
add
aam
jbe
push
out
jb
dec
aas
data16
inc
cmp
insl
cmp
flds
stos
jle
in
cs
call
mov
ficoml
inc
push
push
aaa
xor
or
lea
js
lds
or
and
mov
xchg
inc
inc
adc
jo
mov
shll
mov
enter
popa
ret
jle
and
shll
adc
js
lret
xchg
xchg
jecxz
rorl
leave
ret
popa
lcall
dec
fnstsw
xchg
jb
out
insl
in
adc
enter
mov
or
xchg
mov
mov
or
push
sub
shlb
outsl
lods
add
xlat
adc
mov
inc
aas
xlat
and
aaa
or
and
test
push
aad
mov
test
sub
or
inc
ss
fs
or
test
push
or
out
fldl
daa
add
xchg
dec
pop
inc
out
fdiv
repnz
inc
cwtl
sub
clc
push
sub
cwtl
pop
dec
in
pop
mov
dec
mov
leave
lret
push
push
lret
rolb
jl
sbb
call
adcl
xor
ja
cmp
add
loope
hlt
push
lret
call
cli
sbb
sbb
mov
in
jp
je
cli
push
test
sbb
sub
out
repnz
dec
lret
lret
lods
add
xchg
std
push
ret
add
or
inc
int
add
dec
aad
and
dec
fdivr
nop
xchg
rorl
xchg
push
mov
into
scas
mov
lods
cmp
jae
or
push
popf
sub
pop
in
push
negb
xor
out
in
add
faddp
push
xchg
pop
jae
add
push
mov
push
sub
into
and
xchg
jnp
les
fs
fwait
inc
and
sbb
dec
pop
xchg
lock
je
push
or
mov
push
sbb
dec
icebp
lret
dec
loopne
jle
or
js
pop
fists
test
mov
sub
inc
scas
outsl
dec
ret
pop
rcr
lods
or
xor
and
bound
aaa
dec
es
or
pushf
push
dec
jns
fnstcw
push
jo
cmpl
cld
mov
pop
jmp
sbb
push
je
adc
add
gs
loope
push
fmulp
cmp
jbe
mov
jmp
dec
xor
aaa
repz
mov
mov
addr16
int
in
xchg
aam
or
js
int
aas
add
outsb
in
cmp
scas
sub
in
cmp
push
sub
mov
add
rcr
adc
jg
or
and
push
addr16
adc
sub
sbb
pop
std
insl
daa
nop
out
call
test
adc
inc
xor
and
dec
sahf
aaa
cmpsb
shll
push
sub
inc
aad
xor
insl
mov
ljmp
adcl
arpl
or
lret
adc
jge
imul
out
out
xchg
mov
dec
sbb
std
push
inc
pop
xor
xor
pop
push
dec
xor
leave
xchg
pop
adc
sti
insb
mov
fwait
mov
jmp
push
stos
sbb
pop
push
push
mov
lahf
push
fstpt
push
sub
inc
cwtl
or
ljmp
movsb
leave
add
xchg
add
mov
out
cli
jb
dec
push
cmc
dec
xchg
movsl
add
adc
push
cmpsl
jo
fs
adc
dec
popf
cmovg
push
sahf
int
ret
insb
mov
jo
xlat
aas
mov
nop
data16
es
sub
add
test
les
cmp
andb
emms
and
xor
jl
icebp
jmp
test
ljmp
scas
or
stc
decb
adc
cmc
inc
adc
cmp
adc
lret
andl
shll
pop
gs
push
sbb
lcall
sub
leave
jnp
out
imul
push
adc
xlat
dec
loop
lcall
xor
cld
add
pop
dec
adc
inc
xor
mov
mov
and
push
arpl
in
dec
ficoms
test
lahf
lods
mov
jl
pop
in
pop
dec
pop
jg
jmp
rcrl
popf
push
and
mov
push
push
mov
test
jo
push
rolb
sub
jl
jle
sarb
sbb
test
aas
aaa
push
xlat
jnp
or
mov
and
sahf
insl
ret
movsl
mov
push
add
sahf
out
pop
mov
das
loope
or
pop
daa
cmp
cmp
add
xor
pop
push
stos
idiv
inc
int3
cmpsb
mov
mov
cmp
stc
jp
add
popa
jne
arpl
adc
fbstp
cmp
jle
pop
test
jns
mov
xchg
test
insl
out
mov
push
enter
dec
std
sub
and
mov
mov
mov
mov
sbb
leave
fwait
jmp
cli
call
pop
jp
dec
mov
add
xor
mov
mov
fisubrl
in
divl
ja
out
call
jb
std
cwtl
push
lea
jge
neg
fcoms
dec
and
daa
pop
lods
push
mov
push
outsl
or
dec
xchg
int3
fcomps
mov
jae
lea
mov
mov
xlat
sub
cmc
dec
lret
mov
adc
jp
mov
push
clc
mov
adc
dec
sub
mov
lds
mov
xor
call
outsl
rolb
icebp
jmp
orl
repz
js
in
push
adc
sbb
inc
mov
hlt
fiaddl
cmp
imul
mov
mov
incl
cmp
mov
jp
xor
xchg
je
neg
jb
sti
mov
mov
test
icebp
fsubs
test
nop
shrb
fildl
testl
and
inc
fs
popa
test
mov
rcl
shl
hlt
loope
adc
and
xor
inc
push
push
inc
fs
popa
test
mov
rcl
shl
hlt
loope
adc
xor
inc
push
push
inc
fs
popa
test
mov
rcl
shl
hlt
loope
adc
and
xor
inc
push
push
shll
test
sub
mov
mov
pop
sbb
or
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
popa
inc
jno
inc
push
jbe
outsb
pop
jns
push
sbb
loopne
icebp
shl
mulb
cmpsb
xchg
mov
inc
jno
inc
push
jbe
push
xor
add
adc
icebp
icebp
mov
out
mulb
in
mov
inc
push
jbe
push
sub
sbb
adc
clc
outsb
rcl
sahf
subb
fst
mov
inc
push
or
daa
daa
jb
xor
sar
xor
or
dec
mov
jae
inc
mov
pop
scas
mov
cmp
in
mov
test
jmp
fs
cmp
repz
out
push
lea
pop
sbb
mov
fidivl
es
or
pop
xchg
aas
pusha
push
popa
aad
stos
jne
fiadds
xor
test
lock
pop
in
mov
or
cmp
cmpsb
cld
test
fiadds
sub
dec
xor
mov
cmp
add
xchg
mov
jle
cmpl
push
add
fwait
repnz
sbb
push
mov
mov
xchg
loop
xorl
push
jbe
push
and
add
or
clc
jmp
idivb
cmpsb
xchg
fisttps
pop
push
push
push
dec
push
popf
mov
mov
movsb
cld
testl
and
push
inc
mov
xchg
std
test
sbb
adc
xor
add
adc
loope
icebp
shl
mulb
cmpsb
xchg
mov
inc
jno
inc
push
jbe
push
xor
add
adc
loope
icebp
shl
mulb
cmpsb
xchg
mov
inc
pop
pop
aam
xor
push
stos
add
lock
sub
jne
xchg
leave
sar
or
nop
inc
or
add
add
push
jp
ficoms
adc
fs
lcall
sbb
inc
mov
adc
sahf
inc
test
ret
xchg
lcall
push
sub
shrl
mov
cmp
jmp
fld
repnz
dec
outsl
pop
mov
xor
outsl
sarb
dec
jge
or
jo,pt
shlb
xor
mov
and
stos
stos
movsl
mov
dec
xor
stos
mov
je
negl
insl
adc
jae
lret
lret
pop
pop
mov
mov
aam
push
mov
insl
mov
mov
repz
xor
pushf
mov
sub
das
repnz
lret
push
rcl
pushf
push
add
or
xor
push
adc
dec
fisubs
popa
stos
cmp
mov
jg
jbe
or
out
adc
adc
daa
addr16
lcall
mov
in
cld
xchg
bound
verw
fistpll
push
jmp
and
andl
ret
out
leave
push
inc
pop
mov
mov
js
ret
add
adc
rclb
movsb
adc
sbb
mov
outsl
mov
cld
pop
pusha
push
scas
sahf
das
xor
xor
sahf
push
xor
cmp
sbb
repnz
jae
push
xchg
or
std
insl
repnz
mov
outsl
cmp
mov
les
lods
lock
or
pop
lea
addr16
add
inc
mov
pop
shll
inc
ss
dec
scas
test
fimull
cmpl
jo
cwtl
cmc
jg
lock
inc
lea
cmp
mov
imul
insb
xchg
lods
loop
cmp
sbb
or
inc
dec
mov
test
add
sti
fdivl
movsl
xchg
addb
lea
int
xchg
pop
insl
incb
and
jb
outsb
pop
fnstenv
cmp
jnp
loop
mov
mov
mov
add
rcrb
mov
out
push
or
push
loopne
cli
sub
je
leave
rol
dec
popf
xchg
cmp
into
movzwl
imul
sbb
add
sbb
into
cld
mov
cltd
je
cmp
int3
mov
xor
mov
or
add
imul
or
lret
es
and
cmp
or
push
sti
xor
lret
mov
inc
mov
ljmp
pop
adc
cmp
push
std
lahf
and
fwait
sub
stos
inc
clc
add
clc
lea
sub
pop
xor
cld
pop
leave
in
in
fdivp
xor
sub
fisubrl
lret
pop
push
aas
lret
jbe
push
mov
cmpsl
or
xor
fisttps
and
ja
inc
cmp
xchg
xor
adc
and
sub
mov
call
outsb
push
push
rorb
repz
push
rorb
out
push
sbb
mov
dec
rorb
adc
outsb
pop
adc
lods
add
cmp
or
cmp
lret
lods
rcrl
push
fldcw
scas
int3
loopne
div
sub
mov
fcompl
pop
cs
outsb
shlb
aad
sbb
mov
cmc
jb
pop
xchg
and
sbb
aas
imul
lea
rcrb
aad
das
int
data16
sti
repnz
push
or
and
fstpt
rcll
inc
inc
in
push
dec
ja
ds
mov
mulb
dec
adc
movsl
testb
inc
mov
mov
xchg
sbb
cltd
adcb
loope
stos
sbb
dec
mov
in
pop
int
popa
sbb
iret
mov
pop
mov
faddl
loopne
sar
mov
lcall
aam
mov
add
lods
out
std
xor
ret
rorb
jecxz
sub
mov
inc
inc
daa
dec
cmp
ret
stc
mov
fcompl
push
out
adc
repz
leave
push
xlat
cwtl
mov
jge
popa
pop
push
jo
xchg
fidivrl
adc
inc
mov
sbb
pushl
pop
test
jo
out
pop
fwait
adc
jo
push
sti
dec
lods
xchg
lods
js
inc
or
stos
cmp
mov
add
andl
xchg
jecxz
xchg
out
xor
dec
out
adc
jns
out
outsb
rcrb
mov
xchg
ds
adc
loop
or
mov
ficomps
sahf
push
add
iret
je
jo
pop
in
rcrb
scas
jl
dec
fwait
xor
daa
mov
cmp
xlat
gs
lret
inc
adc
inc
and
lahf
daa
pop
sbb
bound
fsts
push
jp
jb
iret
ja
or
and
mov
xchg
cs
dec
and
dec
push
popa
pop
arpl
lret
sbbb
test
add
repnz
fistps
ret
test
dec
push
arpl
sbb
sarl
ficomps
pop
jp
mov
lds
inc
lret
lret
ss
sub
mov
pop
pop
popf
cli
adc
cwtl
ljmp
pop
dec
loope
hlt
jbe
andl
or
xchg
jne
and
aas
inc
cmpsb
das
xchg
xor
mov
aam
je
mov
mov
das
dec
xlat
shl
sub
fcmovbe
stos
pop
xchg
imul
jo
xor
fisttps
pusha
push
leave
pop
movsb
int
sub
and
mov
ds
xchg
cwtl
pop
aam
test
push
mov
sbb
xchg
mov
shlb
mov
jo
lds
inc
out
mov
or
lret
movsb
and
pop
sbb
push
jb
jno
mov
xor
adc
push
and
aas
push
js
fs
notl
mov
cwtl
enter
or
and
and
jg
jnp
bound
push
pop
ljmp
sbb
push
push
mov
mov
cmpsl
sbb
jl
test
jnp
mov
mov
dec
cli
lahf
push
mov
test
mov
scas
cs
dec
add
aad
das
sahf
loopne
jne
dec
sbb
cmp
test
push
cmp
movnti
sub
lea
out
fst
lea
or
push
inc
out
xor
push
inc
adc
adc
inc
int
aad
es
adc
icebp
rep
cli
mov
cmc
xor
push
push
gs
popf
jnp
repz
fwait
jle
adc
insb
inc
fists
ret
cs
shl
and
imul
ret
call
sahf
pop
popa
scas
pop
in
clc
test
or
dec
cmp
add
and
mov
enter
out
jo
jne
shll
jle
jg
sub
lea
adc
sbb
push
and
mov
mov
loop
mov
mov
xchg
pushf
sbb
xor
ss
mov
test
fldt
mov
pop
push
stos
popf
std
mov
aam
addb
cmpb
cmc
cltd
outsl
dec
fdivs
cmp
ljmp
outsb
sub
sbb
repnz
jo
loop
out
int3
dec
cmpb
mov
test
lods
push
stos
pop
pop
cltd
cli
testl
and
out
ret
js
or
pop
xchg
adc
adc
nop
stos
mov
sub
mov
jp
shlb
repnz
mov
push
insb
loopne
cltd
jae
in
mov
fimuls
aas
rolb
js
mov
outsl
mov
aaa
outsl
inc
popf
int
and
movsb
divl
lret
sahf
jnp
mov
mov
jb
dec
ds
addr16
stc
sub
flds
std
push
mov
arpl
pop
cmc
xor
sub
xorl
movsl
pop
lcall
mov
lods
mov
lcall
and
push
sbb
sub
cmp
fisubl
ret
lret
pop
loopne
inc
push
xlat
sti
div
and
fsubrs
pushf
shl
dec
inc
cld
scas
cwtl
addr16
dec
mov
cmp
inc
leave
mov
popl
hlt
jno
out
clc
push
out
cmpsb
das
sub
fdivl
sbb
mov
fwait
dec
jnp
push
xchg
sbb
data16
mov
push
inc
decl
ljmp
xchg
inc
mov
call
es
jmp
fists
pop
popa
inc
add
int3
test
adc
clc
movsb
ja
mov
fwait
sub
pop
test
dec
jns
mov
lods
add
adc
fmuls
shl
push
outsb
pushf
mov
cld
lea
shll
lods
mov
movsb
add
mov
lcall
loop
sbb
ret
push
test
dec
out
aas
mov
fwait
push
loope
dec
jae
mov
push
mov
mov
test
adc
pop
call
inc
cmp
pop
mov
mov
sbb
orb
loope
sub
xchg
pop
leave
mov
inc
orl
xchg
mov
sub
movl
push
xor
sub
insl
lret
and
inc
andb
mov
daa
and
outsb
add
std
fs
dec
aaa
push
pop
jnp
out
fidivrl
jae
es
shlb
mov
jbe
jno
iret
sub
xchg
sub
fmuls
nop
sbb
fmull
ret
cmpl
aad
popa
dec
adc
shl
jno
gs
jno
sub
enter
fcoml
xchg
repz
sbb
out
ficompl
cmp
xor
or
sub
push
push
push
inc
in
adc
mov
pop
pop
xchg
jge
dec
inc
xor
loopne
fsts
jne
inc
out
dec
push
mov
stc
xor
shlb
and
js
xor
push
cwtl
subl
fistpll
stos
xor
xchg
in
out
push
pop
jae
in
in
aad
cmp
inc
inc
jg
xchg
adc
stos
cltd
into
sub
clc
inc
cmpsl
xchg
and
inc
mov
repnz
aaa
push
es
das
sub
or
jbe
fstps
ficompl
pusha
ss
cmpsl
ret
mov
or
es
or
pop
std
inc
mov
adc
cmpsl
xor
push
lcall
lods
dec
adc
das
pop
fmuls
or
sahf
push
xorb
andb
clc
pop
repz
cmp
in
andl
cmp
dec
sub
or
lret
sbb
jo
les
pop
ret
pop
push
xchg
push
xchg
pop
inc
sahf
and
int
in
lret
addr16
jecxz
fisubrs
mov
sarl
sub
loop
xchg
xchg
pop
push
fwait
xor
add
xor
xchg
imul
sub
push
stc
dec
js
jo
into
mov
mov
test
mov
sub
sub
in
xchg
jns
stos
jg
cld
or
adc
cs
push
mov
xor
fisubs
xor
xchg
daa
shrl
and
addl
cwtl
int3
lock
mov
cmp
pop
andl
fcoml
inc
inc
xchg
imul
push
lahf
jae
xchg
aam
xchg
inc
ret
call
dec
push
xchg
jnp
pop
rolb
mov
js
push
jbe
or
shll
add
popa
jno
lds
mov
xchg
push
jbe
and
std
enter
jmp
mov
mov
ret
in
test
mov
stos
inc
mov
dec
mov
insb
push
mulb
in
fsqrt
or
mov
shll
scas
in
push
pop
ret
mov
and
repz
add
clc
outsl
ret
std
lods
jle
inc
mov
scas
jnp
adc
jp
inc
push
sub
in
pop
pop
cld
and
stc
add
sub
xor
test
in
cmp
xor
repz
stc
shll
sar
cmpl
daa
lds
pop
cmpsl
rcl
dec
xchg
pop
mov
xchg
mov
shr
fistl
daa
mov
and
in
pop
pop
nop
cli
jle
mov
dec
lods
call
mov
sub
and
inc
inc
fnstsw
hlt
subb
or
mov
cmpsb
sbb
loop
and
out
cmpsb
jbe
adc
adc
sahf
je
enter
cmp
fucomp
mov
stos
mov
fstp
out
push
sbb
aas
sub
outsl
inc
pop
lea
in
adc
negl
ds
arpl
sub
fbld
xchg
dec
jmp
sbb
or
popf
in
pop
cmp
xchg
pop
gs
insb
sahf
mov
dec
repz
roll
push
sub
imul
sub
lcall
push
xor
outsl
adc
mov
imul
insl
inc
and
aam
lods
mov
in
pop
jmp
shrb
xchg
mov
dec
fbld
cmp
add
sbb
lcall
popa
cmpsb
and
or
mov
out
pop
outsb
ret
icebp
out
clc
dec
mov
lea
xchg
mov
mov
ljmp
pusha
in
mov
jbe
push
pushf
mov
mov
cmp
cld
push
mov
subl
or
stos
cmp
fucomip
fidivs
pop
mov
or
leave
shll
jns
dec
mov
pavgw
cmp
insb
dec
add
mov
movsl
sarl
sub
movsb
cmp
lahf
xchg
jno
and
popf
das
inc
orb
pop
mov
and
fpatan
test
add
inc
jne
mov
pop
lods
call
mov
pop
mov
test
insl
andb
sub
xor
jecxz
pop
stc
insb
or
leave
xchg
xor
imul
scas
lret
ret
ljmp
lods
stos
sbb
insl
pusha
inc
bound
or
mov
or
in
pop
cmpsl
cld
rorb
pushf
or
sub
orps
lcall
daa
push
sub
xor
std
xor
fimull
das
add
push
mov
xchg
dec
repnz
push
cltd
loop
popf
mov
fdiv
adcl
mov
nop
sub
xor
ret
jno
push
test
mov
in
lret
sbbb
lea
out
sti
movsl
mov
roll
les
div
jl
fldenv
mov
mov
stc
jae
sahf
cmpsl
ret
jecxz
loopne
mov
dec
pop
inc
adc
push
popa
xchg
test
rolb
jl
pop
jnp
jecxz
xor
pusha
adc
loopne
call
push
cld
test
roll
xchg
aaa
pop
push
ret
je
int
mov
dec
shll
test
imul
sahf
mov
nop
movsb
rcll
mov
sti
ljmp
cmp
push
popf
xchg
adc
and
or
pushf
push
or
inc
pop
in
dec
mov
and
ja
addr16
adc
loope
cmp
jge
xchg
call
add
dec
xchg
outsb
mov
sahf
gs
nop
repnz
imul
daa
lret
cmp
cmp
test
xorl
jmp
inc
add
loope
fstpt
out
inc
push
xchg
dec
jae
sub
in
stos
roll
ret
push
fbstp
cmp
xchg
lahf
sub
outsl
push
push
popf
js
jmp
shlb
and
lret
aaa
and
jmp
testb
stc
fisttps
inc
inc
xchg
push
stc
adc
imul
jle
insb
push
mov
test
cltd
iret
or
jle
popf
add
lods
into
mov
imul
ss
add
int3
dec
cmp
xchg
xchg
xchg
xor
std
jle
mov
sbbb
sbb
inc
mov
nop
mov
push
loopne
mov
sub
out
loope
cmpsl
fwait
xorl
adc
stc
loopne
sbb
mov
mov
into
cmp
enter
and
arpl
js
idivb
daa
push
cmc
daa
outsl
les
in
mov
xor
daa
je
mov
lret
les
stc
imul
pop
iret
xchg
ja
lea
cmp
xchg
icebp
decb
sbb
push
inc
test
mov
mov
xlat
insb
ss
sbb
fs
filds
fcompl
decl
push
out
xchg
jae
cli
dec
or
cmp
jbe
imul
xlat
adc
int
push
mov
insl
test
adc
mov
imul
stos
pop
add
or
je
jo
mov
and
ret
sbb
mov
cmp
push
adc
icebp
push
stos
add
and
enter
dec
js
jbe
xor
push
ror
fsubs
cld
jno
movsl
rcr
jb
jmp
xchg
fidivs
popa
xor
scas
cltd
sub
mov
repnz
sti
inc
push
call
jae
stos
mov
pop
mov
cmpsl
daa
sub
mov
sub
jns
movsb
loope
fildll
cld
addr16
mov
out
inc
mov
cmp
xor
repnz
outsb
addr16
dec
dec
jp
test
ret
pop
call
xchg
sarl
scas
mov
mov
roll
std
imul
repz
dec
inc
mov
pop
mov
and
fld
arpl
mov
lcall
repnz
add
arpl
add
cmp
cmp
mov
loopne
pop
enter
outsb
aam
mov
inc
mov
xchg
sub
cmpsb
xor
mov
adc
cltd
fnstcw
fcomps
inc
cmp
and
push
sbb
insl
shl
ljmp
pushf
movsl
sub
aas
shlb
call
sbb
mov
jae
ficoms
mov
lcall
fimuls
dec
and
shl
xor
inc
jl
push
aaa
push
and
mov
inc
cmc
cmp
adc
movsb
div
into
push
insl
sub
push
adc
out
or
adc
js
xchg
fisubl
cmpsb
out
loop
fwait
cwtl
push
and
mov
into
das
pusha
mov
lods
out
imul
shlb
mov
outsb
lds
mov
movsb
ljmp
mov
imul
mov
or
mov
push
mov
cs
or
xor
mov
ja
ljmp
inc
fadd
popaw
roll
cmp
in
push
mov
push
sub
test
cld
addl
mov
or
shlb
jle
mov
sbb
add
idivl
das
shr
loop
inc
inc
popf
or
sub
sub
outsb
pusha
xorb
fisubrl
ds
in
xchg
je
mov
xor
cli
mov
or
mov
cmp
loop
xchg
int3
insb
fdivs
loop
rolb
pusha
daa
lahf
add
sbb
sub
jbe
lea
fwait
jbe
mov
sbb
mov
push
push
push
cmp
mov
or
repnz
and
pop
popf
mov
xchg
jg
in
sub
pushf
sub
mov
mov
in
xchg
pop
and
arpl
xchg
popa
push
xor
out
sbb
inc
mov
in
mov
mov
js
sbb
add
xchg
xchg
stos
sbb
xchg
sbb
or
js
lret
in
ljmp
hlt
sub
add
add
xor
jl
mov
cmp
and
lahf
mov
imulb
push
mov
and
popf
adc
icebp
jmp
xor
je
dec
fiaddl
xor
sub
ja
mov
aaa
jae
fwait
pop
call
and
pop
mov
jmp
add
or
int3
divl
cmp
js
movsl
outsb
push
cmpsb
xor
lods
call
mov
mov
lea
cmpsl
or
iret
aad
xchg
push
fwait
scas
lds
es
mov
pop
mov
jbe
push
cli
inc
xchg
or
xor
mov
dec
fisubrs
cmc
inc
or
ljmp
sahf
sbb
push
mov
les
loop
mov
mov
mov
sti
cltd
mov
cs
sub
mov
outsl
pop
xor
das
adc
sub
xchg
fldenv
dec
popf
jne
mov
inc
in
in
int
add
cltd
lods
mov
scas
mov
das
stos
pop
sbb
sbb
sub
insb
es
xor
add
jl
test
scas
fadd
add
fistps
shlb
mov
or
and
push
mov
les
jno
inc
mov
sub
lcall
inc
fiadds
outsl
imul
xchg
dec
push
dec
push
jbe
push
xor
add
adc
loope
icebp
shl
mulb
cmpsb
xchg
mov
inc
jno
inc
push
jbe
push
xor
add
adc
loope
icebp
shl
mulb
cmpsb
xchg
mov
inc
jno
inc
out
jbe
push
xor
loope
icebp
shl
mulb
cmpsb
xchg
mov
inc
jae
inc
push
jbe
push
xor
andl
push
jl
out
adc
pop
outsb
dec
xchg
clc
test
mov
movsb
mov
mov
ja
xchg
xchg
xor
and
push
movl
pop
test
mov
movsb
aaa
aam
fcomi
addr16
adc
add
xor
and
push
test
xlat
je
notl
movsb
xor
hlt
mov
outsl
adc
daa
hlt
inc
clc
inc
les
mov
loopne
in
mov
int
fcompl
jnp
scas
faddl
neg
cmp
pop
pushf
mov
jnp
dec
jge
mov
inc
les
test
mov
lret
cmpsl
add
inc
adc
out
jp
push
out
adc
cmp
push
outsl
sarl
and
mov
xlat
mull
fs
mov
mov
pushf
in
in
mov
aad
fisttpl
movb
out
movsb
adc
pushl
je
mov
arpl
adc
outsl
outsl
ja
aam
xchg
xchg
mov
or
ss
or
push
daa
hlt
mov
inc
inc
pop
dec
scas
mov
pop
sub
pop
test
mov
movsb
cmp
hlt
mov
add
xor
and
push
jmp
das
je
fs
icebp
push
out
repnz
mov
stos
cmp
shll
shll
shrb
adc
loop
lock
xlat
inc
in
mov
fs
mov
rorl
shlb
xchg
pushf
repz
test
ja
push
xchg
and
push
hlt
addr16
adc
add
xor
and
push
movl
pop
test
mov
movsb
aaa
aam
les
addr16
adc
add
xor
and
push
movl
pop
in
sub
je
cmp
cmpsl
inc
xlat
decl
rorl
movsl
jne
dec
jae
mov
data16
shrl
sub
ja
mov
add
lret
push
jne
ds
pop
jnp
mov
pop
mov
mov
push
cmpsl
mov
cmp
cld
imul
fcmove
mov
dec
outsb
sub
nop
sbb
dec
sbb
scas
insl
or
std
cld
lahf
mov
inc
data16
pop
mov
mov
loope
inc
or
iret
lds
inc
jle
mov
scas
push
xchg
arpl
lods
mov
faddp
pop
xor
pushl
push
ror
xchg
fwait
jo
and
xor
notl
ss
rcr
loop
pop
rorl
jg
insl
movups
mov
xor
aad
mov
push
loopne
push
xchg
mov
adc
cmp
insb
arpl
enter
mov
mov
jl
lds
jge
loopne
sub
xor
xchg
inc
mov
pop
push
cmc
arpl
movsl
aas
inc
jle
add
dec
sbb
cmp
test
scas
stos
mov
lods
clc
out
push
mov
lret
shlb
or
dec
popf
xchg
cwtl
dec
jge
jne
and
sarl
aaa
outsb
ret
arpl
lahf
inc
popa
out
xchg
sub
cli
mov
dec
mov
push
popa
inc
ficomps
std
sbbb
fsubr
outsl
adc
aas
cmp
movsl
shll
dec
cwtl
and
sbb
xor
int3
adc
inc
sub
std
cmpsl
scas
lea
aaa
lea
and
fwait
jnp
jno
cld
ja
push
inc
sbb
aad
and
add
jns
adc
and
sub
xchg
dec
dec
hlt
outsl
filds
push
icebp
add
mov
pop
cld
pusha
insl
and
xor
out
fldl
pusha
ret
test
movsb
outsb
or
jo
sub
sbb
cmp
push
fwait
inc
jae
fsub
and
mov
push
test
push
dec
sbb
in
lea
lock
fnstcw
push
adc
xorb
push
imul
add
pop
clc
popf
orb
nop
or
arpl
jbe
sub
ja
fsubl
inc
ret
xlat
jge
jmp
xor
scas
jne
xlat
ret
ds
jns
push
pop
cs
cmp
lock
clc
jecxz
int3
push
je
clc
loopne
mov
in
jne
sbbb
fldenv
jecxz
inc
dec
push
adc
mov
ret
mov
jl
inc
adc
or
outsb
cmp
add
stc
mov
ja
rorb
push
xlat
fnstcw
pushf
movsb
test
ret
loope
xor
ljmp
push
lock
add
adc
sub
lock
clc
imul
dec
mov
push
push
loop
cmp
adc
aad
push
dec
xchg
adc
xchg
leave
dec
mov
pop
cwtl
pop
hlt
xchg
sbb
lret
scas
adc
outsl
call
call
adc
jp
aad
test
or
shll
mov
push
pop
cwtl
mov
test
inc
and
and
sbb
cmp
add
mov
pop
add
push
push
cmc
fsubrl
push
dec
inc
out
jg
push
negl
imul
pop
lret
pushf
xchg
mov
dec
xchg
xor
mov
ret
mov
push
mov
xchg
decl
sbb
jnp
cwtl
leave
loop
mov
jp
xor
dec
sti
add
test
jnp
jp
ficompl
push
push
sbb
fmul
adc
sbb
inc
jl
aas
stos
sbb
rcrb
xchg
notb
orb
enter
out
or
fmul
out
out
push
jl
pop
ret
xchg
or
inc
add
dec
and
xchg
inc
pushf
fldt
add
out
fists
call
aad
ret
inc
imul
stc
fstpl
push
push
xchg
int3
sahf
xrelease
cs
mov
adc
adc
sbb
mov
mov
lahf
mov
dec
mov
jecxz
jg
sar
xchg
test
pop
pop
cmp
jmp
mov
mov
push
cmpsb
or
in
ljmp
fwait
adc
add
ss
mov
shr
imulb
sbb
and
ljmp
movsb
stos
push
stc
or
ret
and
nop
mov
test
cwtl
stos
shrl
dec
adc
adc
scas
adc
fildl
xchg
sub
pop
xchg
inc
fists
sbb
jne
fldt
fistl
push
push
mov
add
mov
sbb
mov
jl
out
inc
lds
adc
mov
mov
shll
pop
stos
xor
xor
aad
mov
push
cmp
cld
or
repnz
push
mov
or
aaa
push
mov
arpl
stc
inc
into
stc
xor
mov
push
cwtl
add
ficoml
sti
icebp
cltd
xlat
mov
sub
jns
fidivrl
div
in
lcall
pop
les
int
sahf
and
inc
xor
sub
into
sub
std
fidivl
cmp
mov
pop
pop
sbb
rclb
pushf
ds
jno
mov
testl
fisubrs
or
leave
pushf
mov
sbb
pop
je
push
dec
fcmovne
add
cld
mov
aad
lods
invd
callw
inc
stc
and
jp
imull
hlt
xchg
sarb
push
jecxz
cltd
xchg
cmp
cmpsl
jo
cli
pop
inc
jb
loopne
sbb
mov
aad
and
xchg
test
popw
mov
bound
cli
in
jle
outsl
lods
mov
or
jo
out
loopne
jo
or
jno
dec
xchg
push
push
lahf
lret
push
cmpb
testl
aaa
xchg
mov
fidivrl
cmp
cli
dec
test
inc
cmp
pop
sti
outsb
jp
push
mov
icebp
out
int
sbb
cmp
adc
stc
add
jp
pushf
imul
mov
sarl
es
pusha
pop
out
mov
sti
xchg
das
sti
popa
inc
inc
arpl
icebp
lret
inc
stc
dec
loope
push
cld
and
sub
fadds
dec
inc
stc
dec
stos
jp
xchg
or
and
mov
pop
push
push
push
cmp
and
cmp
mov
adcb
mov
insb
sub
mov
add
hlt
mov
xor
adcl
add
jbe
outsb
xlat
loop
lahf
ror
mov
jae
sbb
mov
lahf
mov
stos
dec
lods
outsb
add
add
mov
pop
jp
ret
and
adc
and
xchg
or
mov
lahf
cmp
lea
push
imul
fninit
clc
out
mov
xchg
inc
xchg
sti
add
aad
insb
mov
fwait
test
push
sahf
cwtl
rorb
sub
inc
adcl
push
ds
out
mov
iret
les
lock
cs
or
dec
push
call
rolb
dec
fcmovnb
inc
leave
fisttpl
repz
xchg
cmp
imul
out
fsubs
inc
lods
fcomps
dec
inc
cmp
rclb
repnz
sti
cs
ud1
into
dec
sbbb
fisubrl
inc
or
push
jl
pop
int3
or
push
sub
ljmp
xchg
stos
push
enter
gs
aad
stc
pop
push
dec
repz
dec
xor
xor
mov
cmc
pop
adc
mull
insl
cmp
cmpsb
arpl
sbb
mov
out
pop
xchg
scas
mov
aad
xlat
mov
or
mov
sub
cmp
icebp
cli
ds
test
push
sub
sub
fildll
sbb
nop
inc
orl
rcll
and
out
mov
int
jmp
rcrl
add
jb
xchg
sub
push
or
mov
out
loop
pop
and
insl
xchg
into
je
adcl
mov
cmpsb
pop
cmpl
pop
inc
aam
jb
xchg
pop
cmp
cmpsl
mov
jmp
pop
lret
int3
xchg
neg
xor
mov
out
cwtl
negb
lret
push
rol
jg
divl
ljmp
pop
inc
orb
pop
stc
pop
leave
out
adc
cmp
ret
mov
sbb
loope
std
cmp
mov
fists
mov
jmp
icebp
xchg
or
mov
and
jge
sbb
and
xor
fistl
pop
in
or
out
push
rorb
jmp
iret
dec
mov
and
fmuls
xchg
aad
sbb
adc
mov
out
inc
adc
scas
daa
out
bound
shrb
add
popl
or
dec
cwtl
outsb
mov
mov
jb
mov
fsubl
push
adc
add
mov
insb
ja
rcpps
jg
nop
xor
fiaddl
xor
sti
mov
je
cmp
roll
or
push
sbb
inc
stos
sbb
outsb
cmp
mov
in
outsl
ss
push
fbstp
xor
xor
inc
dec
or
push
call
sub
aaa
push
dec
lods
sub
mov
popa
repnz
pop
call
push
inc
into
rorl
mov
stos
pop
xchg
daa
add
enter
lea
jmp
inc
stos
shrb
out
pop
loope
or
insl
in
xor
cmp
jb
std
add
insl
lahf
xor
loopne
addl
adc
add
int3
xchg
mov
ret
push
rcr
fists
xchg
clc
mov
jns
sub
lods
rcl
cmp
cmp
jbe
cmp
mov
test
xchg
imul
xchg
inc
test
out
jnp
and
xor
xchg
mov
xchg
sbb
dec
lea
rorb
xor
jbe
ja
mov
cwtl
les
repz
imul
adc
mov
mov
push
push
xor
insb
jecxz
jecxz
cltd
ja
in
pop
sahf
fistps
loop
js
cltd
xchg
and
inc
movaps
enter
ret
stc
sub
xor
jb
pop
gs
inc
mov
or
fcmovu
test
les
pusha
mov
push
fwait
roll
fcmovne
mov
loope
add
xchg
leave
out
xor
int
xor
mov
repz
rclb
push
fisubrl
adc
mov
xchg
fstps
shlb
inc
sub
mov
push
dec
push
lret
mov
jo
test
and
and
lcall
in
mov
js
ret
or
cmpsb
jg
idivl
dec
pop
cmp
and
movzbl
push
cs
cmp
mov
rcrl
test
aaa
push
arpl
imul
popa
mov
nop
push
and
stos
add
mov
lret
xor
sahf
insl
push
mov
jae
cltd
fidivs
test
mov
dec
cmp
mov
lock
insb
mov
fidivrl
sub
fcomi
sub
imull
clc
inc
jp
push
hlt
ret
and
hlt
scas
enter
aas
dec
mov
mov
pop
push
icebp
stos
pop
dec
js
push
mov
inc
push
daa
fstpt
pop
inc
adc
iret
pop
sbb
imul
call
inc
cmp
dec
loope
mov
nop
movsb
adc
daa
ljmp
inc
psraw
les
mov
add
aaa
lea
xchg
loop
insb
push
mov
mov
push
clc
push
aaa
inc
sub
cltd
adcb
fisubrs
out
mov
push
sbb
test
in
sahf
std
repz
addr16
lcall
jle
pop
clc
xor
mov
sub
movsb
fisubrs
repnz
das
mov
pop
out
in
xor
fucomi
scas
jmp
and
jb
nop
mov
fdiv
lock
sbb
cmp
push
loop
imul
clc
pop
xchg
push
addr16
dec
mov
sub
das
std
cmp
sub
popa
outsl
inc
xchg
push
gs
pusha
or
or
fistpll
daa
ja
mov
call
loopne
push
lahf
push
mov
mov
loopne
mov
lret
in
stos
dec
orb
outsb
push
jp
push
into
js
shll
fwait
nop
cmc
jp
mov
sub
loope
pop
movsl
push
adc
cmc
sbb
hlt
hlt
insb
and
jne
xlat
jae
adc
adc
pop
ja
aas
pop
and
mov
or
lahf
loope
fmul
add
enter
cmp
mov
inc
xchg
leave
pop
ficomps
mov
add
push
leave
pop
mov
cltd
scas
pop
fldt
sbb
test
in
fs
pop
gs
pop
pop
dec
or
in
mov
test
lods
xchg
add
stos
jp
xchg
dec
jbe
inc
pop
mov
mov
negb
adc
xchg
int
xchg
lahf
fildl
leave
pop
fildll
outsb
sbb
data16
sbb
push
gs
repnz
inc
insb
sbb
clc
jae
inc
ja
and
test
shll
sub
cli
sar
xchg
cmp
jp
push
dec
in
mov
and
outsl
lea
ljmp
aad
or
xlat
jl
mov
sbbl
sub
xchg
xchg
iret
and
ljmp
mov
mov
xor
icebp
xchg
scas
adc
mov
push
sub
push
test
push
mov
jne
add
push
lock
sahf
das
inc
adc
cmp
xor
das
pop
inc
jmp
pop
shrb
aam
outsl
xor
out
in
shll
adc
cmp
mov
hlt
mov
lods
insl
aas
test
cmp
push
insb
in
add
dec
movsl
xchg
loope
movsb
leave
movsb
xor
pushf
xchg
dec
pop
inc
cmp
sub
push
dec
dec
dec
pop
jecxz
mov
sbb
aaa
insb
inc
loop
push
pusha
stc
jno
jne
stc
mov
cltd
cltd
xchg
insl
add
cmp
cli
test
jmp
dec
xchg
cmp
add
and
gs
sbb
push
fnsave
sub
fisubs
aam
fadds
pop
xor
jle
cmp
fwait
mov
inc
adc
pop
dec
adcl
loopne
pop
jae
andl
pop
cmp
fldl
jnp
or
mov
fwait
inc
and
or
lds
xchg
jno
or
int
das
mov
pop
out
andb
popa
inc
pop
fstpt
mov
leave
jp
clc
pusha
sub
icebp
pop
ret
sbb
pop
adc
in
data16
imul
idivl
mov
test
sub
ret
push
test
mov
push
push
xlat
cmp
lret
mov
nop
cltd
jmp
icebp
jo
cld
cltd
loopne
cmpsl
xor
push
dec
jle
pushf
add
out
clc
jbe
jecxz
mov
sbb
mov
daa
fbld
outsb
call
into
or
pop
push
pushf
jae
push
inc
or
xchg
push
xchg
in
stos
repz
adc
in
arpl
rolb
loopne
je
addr16
test
aad
push
das
and
sub
mov
insb
mov
xor
in
jbe
lret
cmp
push
cmc
add
adc
jmp
push
sub
arpl
jne
mov
xchg
nop
adc
mov
scas
rolb
outsb
bound
sub
insl
test
popf
add
sbb
xlat
push
add
ret
mov
pop
push
les
mov
fistpll
imul
aas
lock
cmp
arpl
sbb
lcall
ss
lds
scas
pop
jno
cmp
repnz
out
cmp
dec
or
imulb
dec
jp
mov
stc
test
test
mov
or
ja
jmp
mov
rcl
fxch
jecxz
and
pop
scas
sub
insl
fisttpll
loop
daa
push
jp
scas
movsb
cmpsl
dec
jb
faddp
sbbl
mov
mov
mov
roll
aaa
or
mov
mov
dec
loopne
or
mov
lret
jbe
outsb
jns
adc
sti
dec
test
scas
fisubs
mov
jb
push
and
nop
icebp
das
shrl
insl
jns
das
int
adc
jge
das
lock
push
cmp
cmp
cmp
test
gs
xchg
in
pop
dec
mov
jno
stos
push
pop
or
pop
repnz
enter
int3
pop
ds
add
ret
das
enter
dec
sahf
xchg
sub
pop
mov
or
fadds
xchg
cmp
mov
dec
dec
cld
leave
mov
test
sub
inc
xchg
push
shl
andl
mov
add
clc
xchg
mov
mov
mov
mov
inc
daa
subb
cwtl
add
pushl
popa
jmp
test
jl
xor
insl
xchg
in
mov
lods
jl
mov
popf
add
lock
dec
sub
out
fwait
ljmp
lea
daa
insb
shlw
or
fiaddl
pop
ds
pop
xlat
and
and
popa
loop
out
adc
mov
or
inc
mov
rcl
fs
mov
xor
mov
adc
rcl
and
mov
rorl
jg
lret
mov
outsl
mov
push
and
imul
pop
idiv
push
lahf
repz
inc
pop
add
pop
adc
push
ljmp
jg
pop
xchg
out
repnz
outsl
push
lret
cmp
and
pushf
jg
xchg
cmpsl
icebp
mov
icebp
mov
leave
outsl
popa
mov
push
je
into
push
pop
jnp
or
xchg
test
decb
xor
repnz
es
sub
sub
sub
movsl
les
jmp
xor
sbb
scas
and
sbb
lcall
xchg
cmp
add
mov
jg
fldt
sbb
add
adc
lock
je
ret
xchg
jnp
sbb
inc
imulb
filds
or
adc
xor
pop
repnz
aaa
push
repz
add
out
fsubl
push
call
lret
push
popa
push
pop
js
inc
xchg
mulb
push
sbb
inc
popf
sbb
jb
orb
push
cmp
test
and
jo
inc
jmp
and
ret
clc
cld
std
dec
bnd
outsl
cli
xor
pop
xor
fs
mov
leave
lods
movsb
cs
out
xchg
cmpsb
cmp
ja
jge
push
mov
sbb
in
jp
lcall
out
popf
xchg
or
mov
sub
les
pop
xchg
out
ret
inc
sub
mov
cld
sbb
call
add
jmp
jno
sub
or
mov
arpl
pop
cmp
xorl
sarb
push
roll
mov
hlt
insb
xchg
js
jmp
cmpsl
jp
jbe
cmc
and
cmp
mov
sbb
fdiv
adc
sub
cmp
sub
daa
or
jp
cmp
movsb
xchg
xor
shr
mov
pop
jp
in
cmp
or
or
xchg
mov
in
add
push
jp
arpl
mov
insb
mov
fldcw
jg
jo
repz
scas
aad
addr16
push
fwait
sub
imul
mov
or
adc
jo
xchg
cmp
push
clc
sbb
leave
sbb
or
inc
lods
leave
jb
faddp
sbb
mov
pop
xchg
incl
or
xchg
lods
jl
shl
lret
loop
stc
jae
outsb
fnstcw
aas
push
mov
scas
nop
cmp
je
scas
int3
ror
rcr
dec
popa
adc
fucomi
test
mov
sahf
mov
leave
jecxz
shrl
daa
jmp
push
xor
xchg
imul
into
subps
test
out
je
rclb
leave
xchg
fcoms
aaa
dec
stos
cwtl
add
cmp
mov
dec
xor
cmc
jne
push
aas
jbe
xor
lea
cmp
xor
fsub
xchg
lock
dec
mov
loopne
mov
ret
pop
xchg
leave
adc
outsb
popa
jecxz
mov
sbb
jg
popf
addb
jne
ja
jae
sub
pop
ss
pop
popa
push
fimuls
jle
pop
cltd
mov
aas
mov
imul
inc
leave
bound
icebp
cli
dec
idivb
and
cs
mov
out
push
push
add
rorl
flds
repnz
ficompl
std
fldcw
inc
push
mov
cmpsb
insl
cwtl
fbld
push
mov
movsl
cmp
in
push
pop
mov
aaa
aam
les
addr16
adc
add
xor
and
push
movl
pop
test
mov
movsb
aaa
aam
les
addr16
adc
add
xor
and
push
movl
pop
test
pop
movsb
aaa
aam
addr16
adc
cmpsl
and
xlat
jne
notl
movsb
ss
les
out
ja
js
cmp
and
sub
sahf
cmp
imul
adc
mov
mov
lcall
outsb
sub
sbb
push
jp
dec
aas
push
stos
push
mov
push
pop
cli
outsb
lret
sub
or
shrb
jp
dec
pop
push
cmp
hlt
and
scas
and
scas
pop
xlat
jg
rcr
xchg
xor
aad
dec
sub
rorl
arpl
push
jp
bound
bound
cs
cmp
arpl
jae
clc
mov
ret
cli
add
jo
fcmovnu
test
pop
daa
lahf
mov
xchg
int
pop
stos
push
mov
pop
adc
inc
push
push
cmpsl
imulb
dec
pop
push
dec
xor
jp
inc
mov
stos
dec
rcrb
cli
pop
sbb
jle
jno
xchg
lds
loope
xchg
sbb
cs
popf
scas
jne,pn
lcall
jb
jno
add
mov
adc
and
lret
sarl
dec
gs
sti
or
and
scas
or
jp
dec
pop
pop
enter
pop
mov
lcall
jle
out
in
inc
fimull
pop
mov
das
cs
fimull
dec
fstps
cmp
xor
ret
inc
sti
push
faddl
jns
sub
je
iret
dec
enter
enter
insb
pop
scas
aas
mov
imul
iret
outsl
in
bound
dec
pop
push
stos
push
mov
dec
ljmp
mov
sahf
cmp
push
jp
dec
pop
push
stos
push
mov
dec
ljmp
mov
cmp
insb
gs
add
pop
mov
dec
clc
adc
xchg
mov
fsubs
test
lahf
mov
lods
in
xor
cmp
movsb
iret
xchg
and
lea
jbe
add
out
fcoms
pop
lcall
fildl
arpl
fwait
mov
push
out
cmc
ret
sbb
mull
into
sar
mov
pop
xchg
mov
or
xchg
or
outsl
dec
scas
xor
das
fldcw
testl
adc
mov
fimuls
js
mov
fsubrs
mov
iret
lret
sti
push
repz
mov
xlat
dec
adc
pop
and
mov
js
aas
lds
test
add
push
and
stos
pop
shr
movsl
cmp
mov
or
mov
clc
and
lods
ret
adc
adcl
cmp
out
push
mov
cmp
jnp
dec
push
pop
loop
dec
xchg
loope
clc
xlat
mov
repz
xchg
push
and
jo
adc
lock
adc
stos
adc
push
mov
jnp
sbb
sti
mov
mov
jae
xchg
dec
push
mov
fimuls
std
push
cmc
lock
je
cs
push
push
je
cmp
js
scas
pop
adc
xor
xor
insb
leave
xchg
insl
push
dec
fs
pusha
dec
iret
xchg
jno
rol
aam
aaa
jmp
push
jle
pop
push
iret
fisubs
or
loope
idiv
push
jbe
addb
xor
inc
sti
adc
int
cmc
in
aad
or
mov
inc
mov
mov
popf
and
push
adc
adc
aas
imul
xchg
loope
scas
decb
sti
mov
or
push
or
scas
adc
jae
clc
xchg
sub
push
stos
jbe
pop
sbb
pop
les
call
imul
fsts
test
mov
enter
xor
adc
cmp
dec
push
inc
dec
sub
xor
pop
xchg
insl
lret
fcomip
dec
pop
stc
push
xor
and
push
ja
iret
pop
sbb
and
mov
loop
mov
test
into
ljmp
jae
jb
xchg
movups
add
cmp
stc
mov
pop
dec
jne
jp
xchg
rcrl
pop
frstor
ficomps
push
add
mov
fstsw
push
or
test
or
jmp
mov
mov
stos
mov
and
or
ficomps
loop
push
push
dec
mov
fisttpl
insb
inc
fidivs
pop
add
testl
aad
xchg
mov
movsl
jmp
mov
std
dec
stos
mov
insl
into
jle
mov
hlt
add
push
movsl
das
out
pop
addb
mov
mov
and
xchg
mov
pop
mov
dec
pop
mov
dec
ss
or
cwtl
sbb
jns
popa
roll
stc
clc
adc
xchg
cmp
add
sti
in
sub
cltd
jb
loopne
xchg
lock
jb
aas
aaa
out
push
jbe
in
rolb
orl
popa
mov
pusha
rcl
xchg
sbb
popf
xchg
cmp
aas
mov
insb
push
sbb
ljmp
mov
fsubrl
xlat
faddl
add
cmp
into
repz
cmpsl
mov
call
fcoms
sahf
cmp
ja
jno
es
ret
stc
aad
push
dec
or
out
rcll
ds
subb
test
ror
cmp
fcmovne
stos
stos
mov
add
leave
js
cmpsl
int3
imull
in
add
popa
cmovl
dec
dec
push
fdiv
pushf
arpl
cmp
mov
jge
mov
jmp
sub
enter
add
jne
lods
mov
in
in
inc
cmp
das
xlat
or
stc
inc
sbb
push
arpl
add
push
lcall
cmpsl
mov
or
fnstcw
ret
insb
addb
mov
icebp
or
add
cmp
out
sub
cmpsl
adc
mov
jne
fmuls
mov
cmp
or
jl
sub
adc
xor
mov
test
push
cmc
insl
or
jle
add
pop
xchg
fs
mov
sub
ljmp
les
sub
jnp
mov
add
sbb
mov
das
xchg
cmp
xchg
xchg
lods
adc
stc
imul
ret
gs
add
xchg
negb
cmp
scas
push
cmp
xor
movsb
sti
cmpsl
test
mov
jmp
pop
test
notb
xchg
ss
insl
jno
aad
outsl
out
inc
dec
push
aaa
or
dec
cmp
sbb
test
mov
dec
fbld
imul
fistpll
fcompl
mov
jno
sbb
inc
xor
out
or
xor
or
dec
push
cmp
mov
inc
inc
cld
repnz
jecxz
outsl
xor
mov
mov
adc
mov
mov
sub
xor
inc
aas
clc
jbe
outsl
dec
filds
dec
pop
iret
sub
out
xlat
arpl
jno
add
or
fadds
jp
pushf
sbb
inc
mov
loopne
mov
xchg
inc
test
sti
sub
aaa
jle
insb
pop
cld
das
sub
imul
icebp
popf
add
xor
inc
stos
subb
lea
cs
dec
testb
test
lods
cmp
jno
xlat
and
loop
xchg
sub
dec
outsl
and
jecxz
adc
jno
cmp
subb
out
fisttpl
fistl
pop
adc
scas
add
sbb
or
out
xchg
aaa
jmp
gs
sti
in
sub
mov
cmpsl
push
fsubp
lret
dec
add
insb
pop
or
clc
jae
divb
leave
mov
xor
repz
stc
and
hlt
rclb
test
lods
sahf
cmpsb
fimull
jo
or
jl
mov
fsubs
imul
and
push
mov
dec
popf
je
lods
xchg
call
add
mov
jb
dec
xorl
dec
xor
xchg
push
jo
arpl
in
sti
in
sub
or
leave
jle
mov
pop
xlat
jecxz
mov
pop
dec
mov
add
mov
push
pusha
cmp
lods
in
vpcmpeqd
or
sub
mov
pop
mov
call
pop
mov
and
push
insl
pop
cmp
or
lds
inc
push
jmp
stos
or
mov
mov
lds
mov
jge
dec
shll
jno
pop
mov
imulb
enter
out
jnp
push
pop
xchg
jne
in
adc
outsl
pushl
pushf
jns
ds
jl
outsl
mov
or
jp
and
lret
sbb
cmpsl
jp
mov
roll
and
ret
adc
and
test
iret
add
mov
outsb
flds
out
and
lcall
and
imul
dec
xlat
fnstsw
js
jle
movsl
ficoms
jns
lock
cmp
jns
and
out
sub
cmp
dec
jle
add
xor
adc
pop
fs
or
ret
add
xor
test
sub
movsl
and
mov
loop
repz
cmp
jg
ja
inc
out
int
fildl
fsubr
into
decb
jg
enter
push
pop
mov
lods
jp
adc
xchg
lahf
les
pop
aas
stos
xor
shufps
mov
add
adc
lea
xor
loopne
mov
dec
inc
jle
in
inc
test
mov
fistps
and
cmp
ss
mov
fldcw
sbb
std
xor
aaa
fincstp
hlt
cli
add
in
pop
hlt
pop
out
into
es
arpl
pop
nop
add
sub
cltd
sub
xchg
mov
mov
jmp
jecxz
test
lret
mov
dec
mov
xlat
fimuls
mov
call
clc
cli
outsl
sbb
xor
jp
or
fcompl
cmpsl
ljmp
lods
pop
aaa
push
fstl
adc
cmp
mov
jmp
cltd
push
lcall
leave
sub
stc
and
nop
aad
cmp
pop
xchg
les
rcl
pusha
xchg
aas
push
lds
mov
sbb
and
ja
scas
outsl
movsb
mov
add
sbb
jo
cmpsb
hlt
les
leave
dec
jbe
xchg
cmp
js
fcompl
inc
cltd
add
xchg
cmp
rcrb
loop
sub
mov
das
or
cmp
push
call
jno
pop
cmc
mov
imul
clc
xchg
cmc
mov
cmc
sbb
in
dec
imul
clc
xchg
subl
rclb
push
inc
xchg
call
into
sbb
mov
pop
xchg
push
sub
in
pop
sub
or
aas
xchg
xor
inc
mov
mov
add
ljmp
insb
lods
inc
out
aad
into
add
mov
push
daa
stos
shl
pop
sub
mov
lret
movsl
fiadds
test
in
insl
mov
jmp
dec
test
shll
lods
cwtl
mov
rcrl
and
cmpsl
lret
xchg
fldcw
jo
cmp
out
or
xchg
pop
cmp
ljmp
xchg
push
lahf
pop
stos
dec
cmp
xchg
push
cmp
leave
popa
dec
jecxz
pushf
out
mov
sbb
xor
lret
or
pop
xchg
mov
jl
xlat
stc
mov
icebp
sub
xchg
mov
cmp
mov
aaa
cs
jnp
xchg
mov
hlt
mov
pop
mov
bswap
scas
in
test
mov
addr16
sub
mov
das
mov
outsb
xchg
pop
jbe
inc
mov
or
arpl
mov
fbstp
fisttpll
dec
xor
mov
cmp
iret
mov
mov
push
push
xchg
jp
adc
xchg
push
data16
pop
cmpsl
mov
shrb
mov
inc
push
sahf
cmp
data16
add
addr16
and
stc
lods
test
pop
fdivl
stos
mov
add
cmc
mov
in
sub
imul
rol
xor
ss
movsl
stos
outsl
xor
cwtl
cmp
pop
aas
adc
jmp
jmp
cmp
mov
sub
inc
je
mov
cwtl
test
daa
lcall
xchg
sbb
adc
imul
fs
fidivl
add
sub
cmp
mov
or
aam
test
push
repz
out
outsl
test
cmp
in
fisubrl
push
rsqrtps
orb
int3
pop
cli
inc
cltd
jno
fdivrs
add
sub
mov
jns
mov
icebp
add
lea
xor
inc
andl
cmp
mov
sub
and
popa
sub
and
sub
repz
rclb
vpandn
outsl
cmpsl
xchg
jmp
push
stos
fmuls
mov
add
call
shlb
lds
je,pt
das
les
dec
mov
mov
dec
pusha
dec
mov
addr16
adcl
mov
add
imul
stc
pop
mov
adc
lods
push
call
pusha
leave
and
fbld
out
jb
dec
adc
adc
popf
mov
scas
add
loopne
je
or
fsubp
xchg
sbb
push
cmp
push
push
out
repnz
add
push
push
push
ljmp
cmp
mov
icebp
pop
inc
sub
push
pusha
out
pop
mov
mov
loop
adc
push
dec
mov
out
shrl
out
fs
mov
loop
jl
shll
fadds
jbe
cltd
xlat
adc
lods
push
inc
and
inc
push
int3
int3
sbbl
call
xor
mov
test
sbb
into
add
push
cmp
pop
jae
push
jb
xchg
nop
mov
in
push
lods
jecxz
in
xchg
fistpl
cmp
push
pop
pop
ss
cmp
lods
mov
out
mov
jb
xlat
add
sahf
ljmp
outsl
dec
jmp
orl
cmp
lds
jb
add
add
das
idiv
lock
sbb
push
loop
into
enter
mov
js
mov
and
lcall
cmc
outsb
pop
jae
aad
popf
push
cmc
sti
dec
and
add
dec
push
insl
or
cmp
inc
cmp
jbe
movsl
cmpsb
into
insb
pusha
adc
mov
xchg
pop
add
test
push
mov
cmpb
js
sti
mov
and
xchg
imul
inc
mov
in
add
into
jne
and
mov
std
xchg
adc
test
mov
lret
xchg
ljmp
popa
shll
inc
and
mov
adc
push
push
mov
lret
icebp
dec
jl
push
sbb
inc
add
dec
ss
mov
sarl
imul
push
inc
jge
sub
pushf
sub
adc
data16
test
imul
enter
lock
cltd
push
pusha
jle
inc
pop
sub
push
jo
pop
jne
movsb
fwait
push
stc
sub
scas
sbb
cmp
in
fimull
loopne
cltd
push
add
xchg
jp
inc
mov
testl
sub
add
int3
fcmovnbe
test
in
xchg
adc
cmp
and
jo
icebp
movsb
pushl
mov
inc
push
push
mov
cmp
mov
outsb
leave
fsub
ret
mov
inc
int
shll
mov
mov
or
sub
ja
orb
xor
call
xor
pop
or
dec
jne
leave
test
sub
mov
lcall
rcl
test
jg
popf
rolb
popf
cmp
mov
mov
mov
insb
cs
adc
jecxz
fmulp
adc
pop
test
scas
in
aas
or
push
arpl
cmp
sbb
inc
ds
cmp
pushf
imul
mul
jbe
dec
mov
mov
loop
ffree
mov
jmp
cli
addb
pop
testb
ja
popa
inc
in
es
push
xchg
mov
iret
adc
xchg
mov
add
ret
test
loopne
mov
sbb
pop
cwtl
cli
loop
negl
jge
mov
xor
xlat
shlb
mov
adc
nop
jl
xchg
inc
dec
mov
cltd
fnsave
mov
leave
in
loop
cld
pop
add
or
notl
sub
sbb
in
cwtl
pop
sbb
clc
loop
hlt
mov
test
inc
cmp
call
outsb
cmpsl
xchg
fwait
pop
pop
pop
lret
aam
add
ror
sbb
xchg
notl
inc
in
jnp
call
ficompl
fmuls
pop
fdivr
pop
push
mov
inc
jge
stos
inc
clc
fnstenv
data16
cmp
repnz
ror
outsb
jb
push
adc
dec
dec
movsb
jl
in
ss
push
and
mov
mov
lcall
imul
filds
mov
cmp
mov
jbe
cltd
mov
jmp
test
sub
dec
daa
cmp
xchg
mov
push
lcall
popa
popa
xor
aas
scas
je
mov
mov
movsb
mov
ss
fistpll
iret
inc
sbb
lock
arpl
loopne
mov
ret
xor
jno
fst
lods
mov
mov
add
mov
dec
loopne
fildll
clc
daa
adc
fidivs
mov
or
pop
jbe
frstor
les
in
fninit
cs
ficoml
sbb
and
pop
jne
divl
out
dec
loopne
pop
cmpsl
pop
and
es
es
fwait
mov
sbb
clc
lret
jecxz
dec
ret
stos
mov
xchg
mov
push
dec
ret
adc
pop
lods
inc
xchg
repnz
cmp
cld
sahf
and
dec
outsb
stc
popf
mov
jb
ret
cltd
mov
outsl
jp
sbb
arpl
cmp
mov
xchg
lods
dec
push
out
ds
cmpl
and
jbe
mov
pushf
mov
imul
push
adc
push
fcmove
mov
cli
dec
out
xchg
xchg
adc
xchg
pop
inc
fnstcw
add
sbb
pop
mov
inc
dec
and
popa
leave
out
mov
dec
adc
mov
cmp
adc
mov
sbb
sbb
jo
sbb
mov
fwait
adc
add
or
in
rcll
scas
inc
cmp
test
scas
adc
les
gs
sahf
mov
out
test
shrl
sarb
jo
lods
out
or
adc
in
push
mov
aas
adc
dec
outsl
xchg
push
or
outsb
pop
ss
inc
cmp
cmp
test
bound
sbb
push
xchg
je
fiaddl
ret
pop
sbb
fildl
jecxz
xlat
fdivrs
xor
cmp
or
mov
dec
call
add
in
pop
sub
outsb
lret
repz
push
or
jmp
or
into
cmp
mov
test
aas
xor
les
push
fwait
test
sbb
dec
inc
cmpsb
add
pop
jp
dec
fidivrs
lock
jmp
push
sub
pop
dec
adc
int3
outsl
mov
xchg
jle
sti
in
or
inc
mov
shlb
dec
insb
mov
jl
lcallw
imul
sub
lcall
inc
imul
adc
fdivs
pop
mov
sub
imul
into
add
or
scas
mov
cmp
mov
xor
mov
xchg
arpl
addl
add
rorb
add
inc
into
xchg
cmp
in
aam
leave
mov
je
adc
push
vpminsw
dec
mov
mov
cmp
mov
rcrb
and
imul
shl
nop
subb
push
xchg
jnp
mov
push
data16
pop
xchg
cmc
mov
add
mov
aam
jne
cmp
ja
clc
mov
iret
add
out
sbb
test
xchg
lock
mov
or
xchg
das
sahf
ret
fists
add
adc
push
xchg
aaa
cwtl
sub
adc
inc
in
into
lock
fimull
in
cmp
fimuls
cmp
or
movsb
fwait
popf
ds
cmpsl
ficompl
insb
and
inc
mov
sub
dec
mov
test
iret
jmp
hlt
mov
push
repnz
pop
movsb
mov
adc
cmp
xchg
mov
ja
inc
and
in
xor
out
out
scas
jmp
cld
rcrl
lds
movsb
sbbb
jb
xor
sarl
iret
xchg
mov
bound
pushf
push
hlt
addr16
in
push
roll
jb
jns
xor
pop
ret
mov
out
addb
js
jge
jge
out
repz
cli
jl
popa
pop
sbb
and
mov
mov
movsb
out
dec
fs
push
inc
shlb
mov
test
lock
and
push
cli
jecxz
xor
or
cmc
aas
fidivrs
mov
adc
or
aad
mov
xor
sahf
into
jecxz
leave
inc
ret
adc
mov
add
dec
sub
lock
dec
call
mov
mov
stc
outsl
mov
or
xor
cwtl
aas
enter
mov
scas
aam
mov
jp
and
jge
inc
xor
test
out
mov
push
and
inc
mov
inc
cmp
cmp
mov
stc
cs
fidivrl
mov
outsb
mov
and
sub
lock
jae
inc
or
xchg
insb
mov
dec
pusha
aad
lret
mov
mov
or
push
xchg
fistpl
cld
in
mov
hlt
mov
enter
inc
dec
xor
cmc
cwtl
push
xlat
ss
jmp
mov
fadd
ret
fsubs
adc
jae
loope
imul
scas
xor
aas
mov
lds
sbb
adc
lret
or
sub
in
sbb
inc
in
lock
enter
cmc
jge
shrb
inc
xchg
movb
add
and
xchg
xor
or
push
fwait
inc
adc
push
sar
test
push
push
incb
cmp
or
jp
dec
pop
push
stos
push
mov
dec
ljmp
mov
sahf
cmp
push
jp
dec
pop
push
stos
push
mov
dec
ljmp
mov
scas
cmp
or
jp
dec
ds
push
stos
push
mov
dec
ljmp
lcall
sbb
push
jp
dec
jle
push
stos
loope
test
add
mov
cmpsb
enter
call
mov
insl
daa
dec
push
insb
pop
js
sbb
push
cmp
mov
cmpsb
enter
call
mov
es
push
js
push
push
cmp
mov
cmpsb
rcll
and
mov
pop
add
sbb
and
inc
jmp
popf
ljmp
pop
ds
push
sub
lahf
jl
imul
and
fsubrs
mov
sub
push
lret
cmpsl
mov
xchg
mov
push
add
lret
shl
inc
scas
mov
jge
xchg
mov
ss
jb
push
adc
xchg
es
inc
insl
mov
cmpsb
aaa
cld
pop
xchg
push
int3
sub
call
and
aad
jae
dec
pop
inc
aaa
jbe
jns
scas
pop
out
push
mov
rcr
jo
xchg
cmpb
sbb
lods
dec
daa
pop
mov
xor
adc
pop
mov
and
xchg
xchg
es
call
jp
cmpsb
fcoms
cwtl
out
mov
es
push
popa
push
jno
add
push
and
neg
sarb
negb
int
aaa
inc
dec
push
jl
or
xor
mov
mov
negb
xchg
lcall
push
push
push
xor
cmpsb
enter
lods
mov
mov
es
push
js
push
push
cmp
mov
cmpsb
enter
call
mov
es
push
js
push
push
cmp
mov
sbb
jg
ljmp
xor
adc
jmp
dec
nop
cmp
es
mov
cmp
cmp
push
xchg
jbe
inc
jp
cmp
jae
in
test
mov
mov
or
jbe
jae
pop
mov
cmp
jge
inc
testb
adc
mov
nop
pushf
push
jecxz
popf
pop
xchg
add
fisubrs
test
je
mov
gs
outsb
pop
inc
lock
test
or
xor
push
test
push
mov
lcall
inc
sbb
adc
pop
dec
mov
hlt
jmp
dec
pop
push
pop
cs
hlt
or
mov
cmp
aaa
std
les
movsb
test
push
out
gs
mov
cmc
push
mov
mov
mov
add
inc
jbe
adc
xor
push
movsb
lds
fistps
ss
ret
mov
into
in
les
xchg
hlt
dec
scas
xor
sbb
loopne
mov
fcoml
mov
jl
clc
mov
lret
andb
pop
jbe
xchg
xchg
aam
mov
sbb
add
push
ss
iret
arpl
pop
xor
mov
push
sub
scas
mov
sbb
or
dec
ja
xchg
xchg
lock
mov
xor
xor
inc
pop
xor
out
aam
xor
adc
fld
data16
sub
jp
outsb
imul
jne
cmc
adc
mov
in
ss
sbb
test
lods
addr16
test
sbb
pop
xor
pop
rolb
jbe
mov
adc
and
push
sub
cwtl
jnp
dec
cld
aaa
popf
mov
pusha
xchg
adc
addr16
and
jnp
dec
push
push
pop
dec
xchg
pop
lret
push
xor
or
mov
testb
cmc
cmp
mov
cli
out
lods
test
out
jle
push
xchg
sub
lahf
cmp
push
or
xor
clc
daa
pop
rorb
test
call
ljmp
pop
rorb
stos
or
leave
pop
clc
test
jecxz
sbb
jp
dec
shlb
sarl
lcall
sarl
adc
xor
sbb
or
xchg
das
aam
jae
and
movsb
inc
scas
flds
push
rolb
fstpt
xchg
jmp
dec
fdivrs
push
imul
test
cmpsl
mov
shll
add
loopne
add
in
pop
pop
iret
and
sub
and
out
fs
cmp
xorl
xor
mov
lahf
jg
shrb
jmp
sar
lcall
mov
aas
xchg
repnz
lret
into
fiadds
pop
jg
inc
repz
jle
add
mov
sbb
jbe
aaa
and
sbb
hlt
push
mov
jg
clc
adc
lret
call
xchg
iret
mov
ficoml
arpl
ja
xlat
test
mov
or
and
adc
shrb
cltd
mov
jge
cmpsl
sahf
rcll
in
mov
pop
scas
and
push
std
cmpsb
pop
inc
push
xchg
out
loope
push
and
xor
jg
add
cmpsb
pop
cltd
mov
push
push
pop
xchg
xlat
push
gs
add
and
xor
sti
add
cmp
fstps
add
cmp
mov
push
mov
dec
sahf
pop
bound
or
arpl
xor
mov
jno
cmp
popf
dec
cwtl
jae
jo
pop
sahf
jbe
lahf
mov
pop
cwtl
pop
xchg
imul
inc
int3
pusha
inc
fisttpl
sbb
out
pop
xchg
aas
arpl
pushf
movsl
mov
xor
inc
std
lds
aaa
lods
xchg
shll
enter
or
sub
ja
gs
mov
inc
movsb
jns
adc
or
sti
std
mov
out
imul
and
loopne
clc
gs
insl
les
testb
cmp
push
push
xor
arpl
mov
repz
gs
dec
pop
cs
adc
scas
inc
hlt
and
sub
dec
jp
mov
sub
lock
jmp
jo
nopl
or
iret
lahf
pop
popa
insb
adc
test
inc
mov
xchg
in
dec
popa
cmp
pslld
xchg
fs
jecxz
in
xchg
out
inc
pusha
scas
js
cmp
loop
sar
arpl
adc
push
movsl
cld
mov
loop
or
loopne
sub
sub
je
mov
pop
insl
inc
incb
jne
shll
mov
mov
jne
add
xor
and
cltd
fmuls
sub
int3
call
jg
xchg
cwtl
jae
in
and
push
mov
lahf
int
jae
pop
mov
dec
push
cmp
lea
stc
fsub
jno
jnp
jnp
subb
and
sbb
lret
lahf
hlt
or
mov
fcomp
gs
mov
incl
cld
test
and
adc
inc
push
shll
mov
pop
pop
xchg
cmp
pusha
inc
fldt
xor
jno
bound
test
mov
cli
xor
cmp
cmp
test
sbb
orl
pusha
out
enter
scas
mov
imul
cmc
mov
test
ss
mov
loopne
icebp
fsubrs
or
lods
mov
mov
data16
imul
stc
sub
stos
or
push
xchg
movsl
cmpsl
daa
ficompl
fwait
pmuludq
test
or
inc
mov
jl
mov
jl
cmp
sub
jl
push
xchg
and
pop
push
loopne
es
jmp
out
add
and
mov
and
pusha
push
ljmp
std
pop
inc
xor
pop
push
mov
aad
test
cld
push
xor
cmp
and
iret
xchg
pusha
xchg
sbb
cltd
popa
cmp
push
aam
pop
mov
mov
in
fdivl
mov
mov
js
inc
sub
popf
push
icebp
inc
xor
scas
jge
insb
fs
or
shr
rclb
outsb
cmp
ds
ret
dec
mov
cltd
jl
dec
incb
pop
mov
cmp
aas
pop
ret
jecxz
sub
fsub
mov
int3
loopne
das
cmpsl
mov
inc
sbb
mov
call
aas
insb
lods
xor
outsl
sub
dec
inc
loope
test
cmc
in
push
push
fsts
mov
aas
imul
jnp
mov
mov
mov
pop
movsb
dec
push
lret
and
adc
pop
monitorx
aas
int
and
inc
dec
bound
in
sub
ret
inc
dec
addr16
inc
outsb
cmp
lcall
sbb
outsb
jg
int3
adc
mov
dec
cmp
jnp
adc
int3
xchg
inc
dec
mov
pop
cli
sbb
xchg
int
xchg
insb
jmp
js
gs
push
jbe
sub
mov
popl
sbb
clc
push
das
mov
mov
fsubr
repz
cmp
adc
movsl
mov
les
je
sub
ss
sahf
in
pop
adc
roll
ds
xor
cmp
mov
and
icebp
jmp
xchg
outsl
loopne
sahf
out
push
push
in
pop
pop
xchg
add
rorb
mov
addl
pop
or
fidivs
push
idivb
pop
jle
out
mov
mov
ret
inc
rclb
cmpsl
jecxz
test
movsb
leave
xchg
cmpsl
insb
fdivrp
xchg
pop
sub
xchg
push
movsb
mov
add
jne
xor
inc
xchg
jmp
sbb
sbb
fnstsw
int
sbb
mov
cld
nop
ss
jo
test
insb
ret
movsb
popa
cmp
mov
add
or
inc
adc
lret
data16
push
je
mov
jl
sbb
imul
push
stc
sub
cmpsl
fwait
pop
incl
push
cmpsb
jg
cmp
xchg
push
aam
mov
push
test
inc
out
fs
lods
pop
popf
dec
pop
arpl
js
push
aad
or
mov
dec
cmpsb
in
add
mov
jmp
addr16
mov
sbb
and
popa
iret
inc
je
ret
mov
push
ds
adc
repnz
xor
adc
mov
addr16
and
adc
adc
ret
xor
cmp
and
push
pop
xchg
xor
push
pop
int
push
push
popf
addr16
or
xor
inc
jp
mov
stos
add
aad
insb
adc
loope
xchg
xchg
mov
add
jns
sbb
mov
int
les
loop
ds
ds
dec
and
cmp
lcall
ds
dec
stos
pop
and
movsb
lcall
outsb
and
jbe
mov
jge
aaa
sub
and
pop
lahf
sahf
and
mov
andb
adc
or
shlb
mov
xchg
inc
cmp
movsl
mov
xchg
das
xchg
dec
dec
aas
scas
or
mov
jle
jmp
xchg
outsb
daa
xchg
fcoml
clc
repz
dec
insl
pop
inc
mov
adc
icebp
imul
jge
cmp
lret
sti
scas
push
jne
jle
sbb
xchg
mov
adc
mov
ja
imul
jbe
lods
adcl
cmp
dec
sub
mov
jae
outsl
icebp
inc
arpl
xchg
xor
sub
mov
lcall
lock
jecxz
ljmp
jae
out
push
and
gs
xchg
inc
mov
lahf
shrb
cwtl
pop
shll
or
loopne
mov
ret
int
mov
xlat
flds
mov
leave
mov
ret
ja
js
sub
lods
adc
out
add
sub
xchg
push
mov
mov
lret
pop
add
xchg
mov
cmp
dec
or
mov
xchg
lahf
inc
scas
cmp
push
je
stos
xor
shll
nop
icebp
rolb
mov
sbb
mov
jp
push
dec
fisttps
test
push
xor
dec
enter
push
icebp
out
dec
aas
mov
mov
out
inc
clc
mov
push
push
in
mov
repnz
pop
repnz
add
cmp
sbb
movsb
mov
shlb
mov
lahf
inc
out
ja
rol
cli
mov
mov
fwait
icebp
push
jmp
add
jae
push
mov
arpl
jg
push
push
add
xchg
dec
test
repnz
mov
sub
sbb
shrl
sahf
mov
mov
mov
and
and
push
repnz
push
or
and
testl
sbb
pop
cltd
adc
inc
in
jecxz
inc
ljmp
lar
pushf
xchg
notl
out
push
xorl
pop
cmp
aaa
sub
cmp
outsl
cmpw
ljmp
and
sbb
fwait
scas
inc
xchg
fdivl
mov
or
mov
or
enter
out
mov
mov
aad
cli
mov
jg
mov
dec
loope
pusha
inc
fcoms
dec
pop
addr16
testl
or
andl
cmp
mov
gs
and
cmpsl
xchg
xor
mov
mov
ret
adc
fwait
hlt
out
adc
inc
push
adc
in
pusha
pushf
ror
xchg
jae
or
lcall
imul
shr
jl
cmp
cmp
scas
and
movsl
rolb
ret
or
test
pop
mov
stc
je
outsl
das
dec
xor
ljmp
stc
in
scas
jge
xchg
adc
push
jne
stos
popf
cmp
mov
jae
adc
xor
lret
dec
xor
adc
push
imul
add
jg
xor
pop
or
cmp
jge
mov
cmpsl
lods
push
in
notb
dec
xor
xlat
or
cmc
push
movsl
jnp
xor
fbld
inc
stos
push
daa
xchg
push
out
mov
add
das
loopne
and
jp
loope
fbstp
imul
out
jl
sub
jl
in
push
in
fcompp
mov
cwtl
jbe
dec
vmovsd
mov
mulb
orb
xor
insl
adc
cld
lock
xchg
lds
cmpb
jl
mov
pop
cmp
aaa
cmp
mov
add
ret
jmp
loop
jp
lds
outsl
cs
xor
inc
lcall
mov
and
dec
rolb
test
imul
jmp
mov
and
in
lock
inc
mov
leave
ret
jle
hlt
mov
popa
addr16
insl
test
int3
imul
xchg
int3
loop
add
imul
cmp
subb
in
imul
sbb
aaa
cmpsl
repz
fnsave
xor
jns
dec
pop
addr16
stos
or
pop
sbb
imul
pop
xor
inc
stos
jno
scas
mov
stos
in
fimull
add
dec
scas
pop
mov
mov
out
fmul
fs
nop
sbb
gs
sbb
in
inc
xchg
xchg
push
test
pop
fidivrs
in
dec
cmpsl
xor
mov
pusha
pop
sbb
in
dec
addr16
inc
call
int3
aas
push
sbb
xchg
inc
adc
dec
pop
or
inc
mov
insl
mov
loope
xor
call
jae
adc
push
xchg
jae
xchg
and
lea
sub
xchg
cmp
jno
ja
iret
daa
push
xchg
out
fsubrs
cmp
jo
inc
push
dec
loope
popf
pop
cmp
push
enter
repnz
sbb
inc
jo
sub
iret
jl
pop
fcoml
mov
insb
and
test
xor
adc
mov
adc
loopne
pusha
sbb
idivl
mov
mov
pop
add
sbb
mov
fdiv
pusha
xchg
xchg
add
out
dec
fxch
adcl
mov
jge
pop
sbb
push
jo
movsb
mov
xchg
int3
pop
cmpsb
push
icebp
pop
popa
mov
in
fstl
ja
adc
and
jp
dec
mov
mov
lret
add
in
fdivs
adc
out
movsb
jnp
shl
ss
int3
outsl
fs
jno
clc
dec
push
ja
xchg
es
and
push
test
fwait
jl
mov
shl
stos
fstl
lods
insb
pushf
andl
int
lock
insb
cmc
dec
hlt
ss
cli
add
add
inc
push
mov
or
scas
cmp
fcomip
mov
xchg
inc
jle
push
js
imul
push
dec
push
mov
cmp
fwait
sahf
jnp
lret
adc
jns
cmpsb
and
xchg
imul
sbb
lea
add
jmp
pop
pop
ljmp
sbb
loopne
loope
test
lret
mov
mov
ds
movsl
cmp
jne
imul
pop
push
xchg
jmp
loop
mov
xchg
pop
adc
jmp
movl
shlb
or
loopne
push
inc
xchg
jnp
into
mov
push
xlat
popa
push
dec
loopne
adc
pop
out
std
insl
add
xorl
mov
fs
test
cmpsb
adc
add
jo
pop
mov
rcrl
xchg
adc
repnz
add
dec
addr16
lea
pushf
cli
sub
jno
xchg
movb
mov
out
inc
dec
imul
xor
ljmp
dec
dec
sub
repnz
orl
sahf
cwtl
mov
xlat
or
enter
xchg
cli
sti
push
repnz
mov
push
ret
in
pop
leave
shlb
push
mov
sbb
outsl
cs
add
test
call
or
push
int3
ljmp
mov
test
inc
adc
xchg
xor
add
jmp
mov
mov
loope
into
mov
xchg
cltd
sahf
stos
adc
dec
aad
push
hlt
push
and
pushf
cmp
andb
push
xchg
dec
fimuls
push
push
push
pop
xchg
test
scas
popf
vsqrtps
loope
js
repnz
add
rcr
lds
jge
dec
dec
rcl
jne
adc
sub
jmp
add
jmp
jno
call
xchg
lret
stos
fwait
ja
mov
pop
or
xchg
push
lret
and
mov
mov
jge
cmp
push
xchg
xor
js
fmulp
xchg
js
out
push
repnz
jno
xorb
push
mov
lods
jne
push
lret
mov
in
stc
pop
xchg
rolb
fsubrs
cli
cmp
pushf
test
push
push
and
inc
sub
cmp
test
jb
pop
in
call
into
mov
imul
inc
xchg
insl
insl
inc
sbb
push
xorl
out
push
jbe
xor
test
sbb
pop
push
push
aaa
outsb
xchg
sbb
lock
fldl
insb
pop
aaa
icebp
xchg
xor
negl
and
adc
cmpsb
mov
cmpl
and
fucomip
scas
mov
or
jbe
add
imul
dec
pop
mov
push
addr16
lock
jge
adc
std
stc
mov
out
pop
lea
shrb
addr16
dec
into
aad
push
negl
fld
fisubrs
sbb
repnz
lea
adc
ss
movsb
fstl
mov
mov
dec
fnstenv
in
adc
cltd
stos
add
push
lods
movsb
loopne
push
pop
and
aas
mov
aam
add
dec
pop
or
mov
mov
or
lahf
rdmsr
outsb
cmpsb
xor
pop
adc
add
in
fs
outsb
xor
mov
and
das
enter
in
push
gs
add
push
cmc
mov
push
mov
mov
lcall
leave
mov
push
ret
adc
push
subl
mov
in
dec
jnp
add
pop
aaa
cmpl
aas
cwtl
inc
mov
arpl
mov
push
aad
add
loop
mov
cmc
and
sbb
cmp
mov
mov
stc
xchg
mov
out
jo
mov
enter
mov
es
les
pushl
ja
mov
fcomps
repnz
mov
xor
jno
rorb
xchg
pop
enter
pop
enter
add
fistpl
test
data16
adc
mov
adc
call
das
lret
ficomps
or
or
adcl
ds
sub
xchg
fcomps
leave
cmp
adc
in
int3
mov
iret
call
popf
xchg
rcrl
sbb
xlat
lock
lock
or
sbb
mov
and
pop
inc
ret
or
sbb
push
mov
lods
mov
movsb
cmpsb
inc
insl
in
and
das
js
xor
push
adc
psrad
push
sbb
rcl
push
mov
jb
cmpsb
jae
mov
jmp
cmp
mov
cmpsb
xor
and
cmp
jno
mov
lahf
sbb
or
sbb
in
mov
stos
and
adc
push
cmp
mov
push
cwtl
into
push
add
mov
in
dec
fwait
ds
add
add
mov
shll
or
outsl
or
and
pop
daa
push
and
and
sbb
movsb
loopne
xchg
cmpsb
cld
adc
into
fisttpl
loop
out
sub
movsb
sti
cmp
sub
in
outsl
push
mov
loopne
mov
divb
enter
mov
push
fisttps
pop
push
cmpsb
push
data16
jg
sbb
stos
mov
pop
push
lock
ja
loop
scas
adc
aad
inc
xor
popa
xor
dec
pop
test
sbb
cmp
js
xor
std
stc
inc
mov
sub
pushf
pop
sbb
jb
pusha
loope
call
add
roll
nop
xor
iret
mov
jbe
sbb
insb
lahf
mov
jle
and
popf
mov
push
adc
pop
repz
pop
fmull
mov
and
call
scas
lcall
push
mov
sbb
jo
insl
xchg
xchg
sti
dec
cmc
pop
sub
mov
fcomi
push
sbb
or
xchg
mov
mov
out
bound
imul
jne
mov
xchg
add
fmulp
in
xchg
mov
fs
pop
mov
mov
push
xchg
mov
ds
pop
sub
leave
lods
adcb
lret
test
xchg
jbe
mov
ja
cs
adc
jns
mov
jle
pushf
mov
enter
call
mov
es
push
js
push
push
cmp
mov
cmpsb
enter
call
mov
es
push
js
push
push
cmp
mov
es
call
mov
es
push
js
insb
jbe
data16
inc
sub
fsubl
call
mov
es
js
pop
push
nop
push
ja
inc
ss
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
fcmovnu
xchg
mov
mov
sahf
mov
inc
and
push
popa
cmp
xchg
fcoms
call
loope
icebp
xchg
pop
adc
jo
push
popa
cmp
cwtl
jle
push
mov
test
sar
out
add
imul
sbb
sbb
adc
dec
icebp
pushf
xchg
mov
stos
fisttps
sarb
or
shr
mov
cmp
xorl
jle
sbb
mov
add
inc
cmp
cmpsl
out
mov
xchg
std
or
cld
gs
xchg
xchg
call
je
jno
dec
jmp
pop
jno
into
xchg
mov
in
mov
push
fadds
call
or
and
and
add
popa
push
outsb
xor
xchg
stos
adc
or
pop
xor
xor
in
imul
out
lea
jl
pop
jnp
enter
or
sbb
scas
xor
xorl
inc
inc
push
xchg
call
rcrl
call
loopne
jp
push
pop
and
out
and
repnz
cmpsl
les
in
int
out
jne
adc
push
fstpl
sub
dec
adc
sbbl
mov
fwait
add
adc
and
and
adc
pop
call
xchg
mov
mov
mov
adc
js
push
popa
cmp
sbb
mov
rcrl
test
pop
adc
js
push
popa
cmp
sbb
flds
out
std
sbbl
bound
fucomip
push
cld
std
loope
insb
pusha
fcoml
int3
cs
divb
mov
pop
iret
push
mov
add
in
xor
jg
sub
fildll
clc
cmp
push
pop
mov
pushf
cs
add
rol
and
imull
sbb
rcrb
mov
into
fldenv
movsb
pusha
xchg
loop
sbb
lcall
and
mov
and
add
int
sbb
pop
cmp
xor
sub
xchg
xchg
xor
fimuls
dec
jmp
sbb
cmp
inc
subl
jle
jno
inc
dec
sahf
pop
loopne
or
pop
add
jne
mov
xchg
sbb
popf
push
imul
ja
in
cld
cmc
jnp
fidivl
test
mov
sbb
add
loop
mull
std
jge
sbb
jbe
jge
xlat
cmp
push
cmpsl
push
scas
fdivr
scas
adc
cmp
clc
roll
lcall
xchg
hlt
push
push
std
popa
out
nop
adc
test
das
cmp
loop
scas
call
notb
push
aaa
pop
pushf
sarb
fcomp
mov
enter
fwait
test
mov
jmp
cmp
addr16
enter
inc
int3
jns
inc
insb
sub
inc
pop
stos
add
adc
movsb
fs
lds
aaa
loop
pop
mov
sar
cmp
out
mull
push
rol
mov
mov
sahf
scas
daa
sub
push
push
xor
pop
mov
rcl
pushf
hlt
jb
aam
mov
inc
cli
test
inc
adc
push
mov
adc
lret
cli
icebp
lea
or
ds
xor
mov
mov
ljmp
and
nop
xor
xlat
stos
sbb
sahf
or
add
insb
add
leave
scas
lods
mov
dec
fs
jno
cmp
pop
scas
insb
xchg
inc
xchg
sahf
loop
pop
cmp
mov
and
rcrl
imul
sub
cmp
adc
dec
inc
inc
movsb
lcall
leave
test
add
pop
lcall
aaa
mov
outsl
xor
dec
mov
pop
jge
test
xchg
pop
push
fwait
mov
sahf
int3
mov
ljmp
jne
xor
pop
xor
loop
jge
push
pop
adc
in
es
pop
add
outsb
insl
sbb
adc
pop
repz
outsl
in
cli
or
out
mov
mov
pop
mov
out
xor
das
mov
dec
xchg
sub
pop
out
aas
pop
loop
dec
aaa
pop
stos
jge
xor
insl
or
pop
inc
ret
dec
setb
fisubrs
cmp
inc
mov
mov
mov
jl
xchg
pop
add
or
fnstcw
jb
iret
inc
hlt
les
lods
lods
pop
pusha
pop
popf
and
ficompl
push
xchg
or
stos
dec
hlt
xchg
xchg
jnp
mov
dec
lea
xor
out
sbb
cli
imull
popl
xchg
test
leave
shrb
push
push
xchg
cmpsl
inc
movsl
mov
das
cmpl
scas
jns
rclb
dec
arpl
cmp
jo
fldt
sbb
js
iret
xchg
cs
pop
dec
rolb
das
loop
lahf
or
cmp
xchg
and
in
imul
lea
jbe
mov
cld
lea
lret
jge
mov
jnp
cmp
or
call
lods
lods
sbb
jle
leave
and
push
fisubl
xchg
repnz
loop
pushf
es
xor
lods
mov
popf
xchg
push
sbb
lcall
andl
sarb
xor
sbb
leave
jns
xor
lret
dec
mov
out
lahf
decl
or
adc
sub
push
in
dec
pop
push
cmpsl
ret
inc
inc
stc
std
bound
pop
and
aam
lret
jnp
les
inc
cltd
scas
test
data16
leave
sub
test
enter
rorl
push
std
push
add
sbb
mov
insb
mov
jnp
insb
mov
mov
xchg
push
dec
add
ljmp
dec
test
pushf
lds
imull
pop
mov
inc
shrl
mov
imul
aam
add
loopne
push
test
or
arpl
xchg
push
and
push
xor
lods
fwait
jmp
fcmovnbe
mov
dec
cmc
pop
stos
xchg
hlt
fstpl
xchg
sub
jle
mov
mov
pop
pop
xor
mov
xlat
sbb
pop
pusha
fcmovnbe
mov
lret
pmulhuw
cmp
pushf
mov
add
loope
sbb
mov
xchg
pop
fisubs
cmpb
pop
loop
in
lds
mulb
aas
aam
push
ffreep
lret
mov
mov
jp
loop
lahf
hlt
or
lods
inc
xor
xchg
daa
cmc
clc
push
push
jmp
lret
xchg
xor
out
sahf
sarl
jge
mov
loop
cmp
pop
pop
lret
gs
in
iret
es
xchg
pop
add
notl
and
lahf
jb
cli
cltd
mov
sbb
pop
rorl
xchg
mov
push
mov
jg
add
adc
popf
notb
movsl
cmpsb
push
aam
xor
cld
out
subl
cmpsb
adc
call
xchg
and
scas
test
js
inc
cmp
mov
arpl
sbb
adcb
jb
dec
push
shrl
sti
pop
pop
mov
jae
mov
fcmove
dec
inc
cmp
mov
lcall
fsubl
repnz
test
icebp
jmp
xor
mov
subb
inc
test
mov
push
movsl
imull
in
xchg
xor
arpl
lods
push
jge
into
gs
int3
dec
ret
inc
fsubrs
add
inc
sbb
insb
pop
repnz
push
mov
mov
in
sub
push
mov
pop
xor
pop
dec
ret
cmp
into
or
insl
and
mov
addr16
mov
lret
es
inc
pop
or
xchg
and
mov
lcall
cmpsb
xchg
xchg
rclb
pop
push
inc
fists
xor
cmp
sti
out
mov
push
sbb
inc
lea
stos
inc
push
mov
dec
adc
jnp
arpl
sub
in
aam
sub
cli
fimull
outsb
jns
pop
mov
mov
and
cli
cmp
add
imul
imul
dec
fnsave
push
push
leave
repnz
or
idiv
cli
inc
cwtl
cmpsb
aam
pop
push
mov
xchg
fmul
mov
pop
ljmp
loopne
ljmp
stos
mov
cld
xchg
sub
mov
inc
xor
ss
pushf
and
repz
cmpsl
std
fisubrs
leave
push
cltd
inc
pusha
mov
cli
cmpsb
lcall
inc
lea
xchg
cmc
mov
mov
jecxz
mov
lods
pop
ljmp
inc
and
sub
imul
mov
mov
add
inc
dec
push
sbb
xlat
test
ljmp
insl
sub
call
shlb
int3
js
pop
dec
push
ficoml
in
pop
xor
cmpsl
pop
imul
jge
ja
mov
and
cwtl
xchg
hlt
cs
dec
test
lahf
std
sub
pop
popa
repz
flds
sub
loope
icebp
push
lods
add
adc
mov
popf
dec
or
xor
cmp
out
int3
cwtl
push
sub
mov
fcompp
fisttpl
lods
inc
scas
cmpsl
fisubs
mov
fs
gs
lods
stc
shl
imul
jbe
pop
mov
mov
popf
push
or
nop
mov
adc
sbb
cwtl
outsl
in
cli
frstor
and
cltd
dec
inc
adcl
leave
call
or
mov
mov
leave
mov
jb
paddsw
jmp
xor
arpl
insl
jmp
pop
jns
xorb
movsb
lea
xorb
xor
mov
xchg
in
push
push
ffreep
aas
test
dec
js
rclb
xlat
xor
mov
les
dec
add
push
jns
pop
push
jge
and
dec
add
aaa
and
insl
xor
test
popf
scas
ja
adc
adc
out
dec
sub
test
scas
sahf
testb
add
icebp
cltd
xchg
jmp
push
out
mov
jge
ficomps
out
push
jp
sahf
ljmp
pop
out
test
mov
std
andl
xchg
pop
xor
mov
test
xor
mov
mov
push
cmpsl
sbbl
mov
mov
pop
sub
push
pushf
xor
hlt
sub
or
aam
std
mov
movb
push
out
test
cmc
flds
or
test
dec
stos
in
jge
cmp
jl
sbb
jbe
js
loope
movsb
and
aas
fst
in
jb
popf
dec
cltd
lea
sti
aas
lods
mov
and
lahf
sub
ja
iret
add
dec
push
std
lea
nop
xor
fmull
clc
mov
sbb
mov
or
aaa
lods
xor
out
push
mov
or
je
test
adc
xchg
push
adc
fistps
sub
adc
xorb
mov
sahf
lods
jp
rorl
push
loopne
inc
fidivs
adc
adc
flds
imul
mov
xchg
fsubrl
lds
jecxz
push
cmp
sub
int3
mov
jnp
push
outsb
adc
cld
popf
xchg
xor
push
add
mov
mov
inc
sbb
sarb
pop
out
icebp
jl
les
out
or
cmpsl
aam
and
or
loopne
mov
mov
repnz
in
ja
push
mov
sub
push
das
xchg
adc
shlb
movsb
dec
add
popa
cmpsl
xchg
ret
dec
jl
lock
loopne
and
hlt
shl
cmp
stc
pushf
outsb
icebp
mov
out
jae
jb
xchg
push
setne
int
sbbb
pop
pop
and
outsl
xchg
xchg
rcrb
outsb
xlat
pop
mov
leave
push
cmp
out
cli
leave
mov
push
cmpsl
jl
pusha
xchg
pop
push
push
sub
lods
sbb
lret
sahf
xchg
add
adc
pop
clc
jne
push
fildll
xchg
imul
jp
addr16
xor
scas
push
cmp
mov
hlt
movsb
fsubs
ljmp
scas
int3
ljmp
orb
cmp
jg
mov
xor
outsb
xchg
fs
lods
and
sub
imul
adc
jnp
mov
dec
dec
es
pusha
mov
mov
fwait
push
xlat
mov
mov
pop
pop
sub
mov
jo
icebp
je
jmp
add
mov
je
pop
jae
sub
add
nop
aam
and
repz
out
dec
jb
lcall
cmc
iret
loope
cmpsb
rolw
pop
lods
ror
push
pop
bound
std
imul
inc
inc
jmp
sti
mov
xor
lds
mov
mov
lcall
bsr
pushf
mov
jno
subl
mov
xor
mov
cmp
jbe
jg
jmp
mov
or
leave
jle
dec
push
xor
pushf
lea
popf
mov
popa
sbb
and
pusha
int
cmpsb
pop
pop
arpl
push
fs
cmp
int
jno
loopne
xor
pop
sub
clc
mov
les
xor
and
faddl
pop
mov
xchg
lods
loop
lret
cmpsb
add
push
sbb
mov
clc
mov
add
cld
and
int
cmp
adc
push
movsb
mov
nop
cli
xchg
push
sbb
xchg
mov
mov
add
nop
subl
loope
mov
daa
into
push
jp
pop
insb
dec
test
stc
mov
addr16
sbb
xor
inc
pop
adc
cmp
cltd
insb
jae
mov
mov
mov
xchg
in
sub
lock
into
xor
ds
xchg
stos
lods
daa
jae
and
cwtl
dec
xchg
test
pop
lea
mov
mov
mov
mov
data16
dec
jmp
int
mov
xchg
inc
mov
loope
lret
dec
mov
mov
fisubrs
adc
cmpsl
mov
gs
xchg
push
push
cmp
xchg
into
pop
es
xor
cld
lret
je
pop
sbb
cmp
and
addr16
iret
stos
dec
adc
jbe
jl
push
roll
mov
xchg
dec
sti
xstore-rng
cmpsl
rcll
and
je
dec
adc
cld
xchg
sub
cmp
out
mov
es
push
xchg
bound
subl
add
movsb
gs
cmp
add
in
cmc
enter
xchg
aad
ret
cmp
mov
cmpsl
mov
daa
stc
jmp
mov
pusha
fcom
ds
lock
xchg
mov
mov
rcll
mov
cmpsb
adc
add
inc
int
jo
arpl
lret
pop
xor
cmp
cltd
adc
dec
jbe
jmp
inc
repz
pop
movsl
test
lods
lcall
and
dec
or
add
mov
addr16
pop
stc
out
pushf
xor
int3
aaa
scas
cwtl
out
in
jno
js
aas
dec
je
pop
push
cli
inc
mov
mov
xor
outsb
test
addl
popf
rorb
leave
adc
adc
adc
test
out
sbb
sub
test
fldl
push
xor
mul
stos
jb
sub
cmp
dec
bound
enter
sub
ja
dec
or
pop
cmpsb
pop
sub
insl
adc
xor
imull
xlat
cmpsb
ja
mov
sar
lock
stc
xor
fldenv
enter
popa
cmpsb
ljmp
pop
mov
xchg
cmp
gs
lahf
frstor
lods
daa
repz
mov
push
inc
xchg
pop
mov
mov
mov
stos
mul
xor
push
imul
fadds
pop
xor
outsb
push
stc
lcall
and
pop
pop
and
add
in
jno
cmp
mov
fwait
push
fnstenv
and
cmp
cli
jmp
in
add
arpl
push
and
add
pop
es
icebp
inc
dec
xchg
lret
daa
scas
xor
push
jo
dec
inc
rorl
lods
jmp
sbb
xor
adc
jns
pop
push
add
mov
hlt
negb
and
push
outsb
test
imul
popf
es
sbb
push
jl
sub
push
mov
xor
inc
aaa
shlb
lock
or
mov
aas
aaa
dec
adc
stos
leave
push
aaa
pushf
add
pop
and
nop
push
mov
stos
stos
jne
imul
fwait
mov
xchg
sbb
andl
lea
dec
push
cmp
xor
and
xlat
adc
cmpb
repnz
test
dec
ret
out
dec
fdivs
rolb
jb
mov
lcall
xchg
pop
les
add
ret
sti
lods
and
movsb
dec
mov
in
imulb
insb
mov
in
push
mov
xchg
lahf
jmp
push
mov
loope
ljmp
nop
pop
xor
test
hlt
je
or
cmc
pushf
push
adc
dec
in
mov
pop
jnp
test
arpl
or
add
jecxz
js
inc
fwait
push
or
test
clc
jmp
pop
cmp
inc
popf
rorb
mov
cmp
push
xchg
repz
call
push
add
scas
cmp
aam
pop
pop
sub
and
pop
sbb
sub
mov
outsb
mov
sbbl
xor
xchg
mov
data16
xchg
jnp
pop
popf
pand
pcmpgtb
sbb
add
xor
jp
fcomp
adc
add
loope
inc
out
jmp
cmp
fstpt
mov
movsb
push
fstpt
push
rcrb
out
mov
jae
cmpl
ds
jb
mov
int
cmpsb
adc
jb
adc
sub
pop
inc
mov
in
je
loopne
aad
jne
popf
fldenv
jg
cmpsb
push
dec
sbb
scas
mov
cmp
ljmp
ss
outsl
mov
inc
cmpl
adc
mov
bound
cmp
repnz
cmp
sbb
cmp
fwait
daa
arpl
mov
xlat
jmp
sub
mov
and
jbe
sub
mov
and
pop
and
mov
add
push
call
jne
lods
repz
xor
or
pusha
and
int3
mov
or
fsubrl
mov
inc
aas
pop
ror
aaa
loop
cmp
iret
test
ror
das
or
mov
and
xor
mov
adcl
rolb
ret
aaa
test
adc
fists
fnstenv
jmp
call
dec
pop
push
inc
faddl
in
sbb
and
bound
cmp
sub
into
dec
repnz
in
mov
scas
jle
aas
cmp
pusha
ret
pop
repz
outsl
xchg
sarb
das
or
xor
iretw
inc
and
ret
aaa
xor
test
pusha
cmp
push
pop
pop
mov
and
mov
or
mov
sub
jmp
jo
pop
mov
ja
loopne
nop
adc
adcl
push
jno
jo
xchg
jl
inc
cmp
andb
lock
movsl
sub
test
dec
inc
cmp
test
lcall
cs
fdivrl
sub
inc
daa
jl
and
fstpt
sub
pop
pop
xchg
cmc
bswap
sub
cmp
pop
inc
mov
or
aaa
pusha
lods
bsr
lds
lcall
hlt
jnp
adc
cmp
cmp
inc
ja
shrl
push
js
jp
or
and
push
mov
sub
scas
nop
sub
loop
push
xchg
add
ss
cmpsb
mov
dec
lahf
pop
popf
jp
into
mov
or
dec
pop
mov
adc
jno
xchg
dec
push
mov
js
ljmp
mov
adc
leave
mov
fidivrs
push
lret
cmp
mov
mov
mov
rorb
shrb
cwtl
iret
bound
xchg
push
test
mov
adc
pop
cs
dec
int3
fildll
popa
jg
push
jmp
xor
add
jns
lods
cld
repz
adc
lock
push
sbb
outsb
and
sub
mov
push
mov
lret
sbb
in
mov
jecxz
adc
addr16
ss
sub
movsb
and
xorl
xor
jne
and
sub
das
mov
jge
stos
push
clc
mov
adc
arpl
ja
inc
jle
in
sahf
cli
aam
push
sahf
aam
sbb
lock
cmp
cmpsb
adc
jge
pop
xlat
sub
mov
xchg
inc
add
push
xchg
int
pop
xor
std
xchg
movsl
push
fs
lret
js
loope
and
mov
xchg
fimuls
fisubs
xor
test
fbstp
outsb
sub
inc
lcall
sti
lea
loope
gs
ds
pop
push
push
mov
js
sarb
sbb
outsb
mov
mov
dec
sub
adcb
in
cld
inc
inc
popa
mov
orb
lret
mov
das
fldl
ds
xchg
jecxz
mov
insl
inc
xchg
mov
xor
and
ret
rolb
add
aad
add
or
mov
jle
gs
inc
inc
and
inc
dec
add
xchg
int3
repnz
in
pop
insl
dec
notl
and
insb
cmpsb
pmaddwd
adc
mov
inc
call
stos
inc
stc
cld
clc
mov
xchg
movsb
int3
adc
movsb
inc
mov
xchg
push
cmp
push
ljmp
pusha
test
cmp
negl
call
leave
push
movsl
sbb
mov
imul
cmp
dec
je
inc
in
xor
add
adcb
push
pop
mov
push
daa
mov
mov
push
sub
mov
xchg
lret
adc
push
fucomp
test
mov
pushf
adc
out
ret
adc
cli
sti
bound
push
mov
pop
or
push
shlb
adc
sub
dec
dec
rcr
les
gs
enter
call
loope
icebp
test
pop
adc
js
push
popa
cmp
sbb
mov
rcrl
test
pop
adc
js
push
popa
cmp
sbb
mov
rcrl
test
pop
adc
xor
sbb
or
inc
int3
mov
movsl
sub
sbb
test
cwtl
rorl
cmpsl
out
loop
js
pop
ss
fnstenv
inc
mov
and
push
jno
pop
ret
push
repz
dec
fcoms
call
inc
cwtl
push
test
mov
xchg
push
ret
sbb
sub
cmp
and
xor
arpl
xchg
out
mov
push
roll
shl
add
test
les
or
js
sub
btr
push
ljmp
in
call
bndstx
icebp
ss
ret
out
add
mov
in
pop
adc
inc
or
sbb
clc
mov
lret
imul
push
daa
sahf
pop
jp
arpl
adc
lret
or
mov
shrb
mov
or
clc
cmpsl
pop
roll
imul
xchg
repz
pop
insb
mov
or
mov
fdivr
aaa
jnp
cwtl
push
clc
arpl
int
pop
push
xchg
mov
repz
loopne
lods
jmp
mov
adc
inc
jmp
inc
cwtl
add
arpl
xchg
push
ret
pop
shrl
jecxz
repz
dec
adc
and
xor
inc
xchg
arpl
sbb
xchg
shrb
push
mov
cmpsb
insl
mov
test
inc
cltd
inc
loope
divb
fcompl
cmp
das
mov
popa
scas
jns
inc
mov
lock
cltd
push
jo
push
sti
sub
stc
sbb
imul
sarl
dec
in
sbb
sub
cmp
enter
call
inc
cwtl
push
test
mov
xchg
push
ret
sbb
sub
cmp
enter
call
inc
cwtl
push
test
mov
sti
rorb
inc
mov
cmp
insb
pop
mov
ljmp
sbb
or
sbb
sbb
pop
mov
add
add
sub
inc
and
pop
xor
aad
adc
mov
xchg
loope
dec
xor
outsl
clc
test
mov
xchg
inc
loope
fistps
test
fstl
leave
push
push
movsb
call
leave
adc
cmpsl
push
scas
inc
mov
pop
js
add
cmpsb
xor
mov
out
pushf
lahf
push
es
inc
shrl
sahf
pop
cmp
cs
out
inc
sub
add
mull
ror
push
adc
stc
mov
pop
std
pop
push
push
dec
aam
loope
nop
adc
sti
and
aaa
push
push
push
and
stos
ljmp
rclb
add
fcompl
int3
jle
loop
push
push
lock
fnstenv
pop
ljmp
pop
ficoml
int3
mov
in
sbb
into
dec
mov
push
cmp
outsb
mov
xlat
push
nop
jb
mov
pop
sbb
in
mov
loopne
push
and
xor
divb
add
icebp
adc
lock
in
pop
add
data16
inc
das
push
xlat
add
mov
stos
adc
out
and
sahf
xchg
mov
out
inc
scas
in
arpl
inc
fnsave
js
add
aad
inc
ret
xor
idivl
hlt
daa
mov
pop
cmp
addl
out
ficompl
or
lea
dec
pop
fs
ljmp
xorb
hlt
mov
xor
mov
stos
mov
mov
xorl
add
addr16
jo
jecxz
adc
insb
xchg
cli
sti
insl
sub
mov
std
int3
or
movsb
jns
inc
aas
mov
sub
pushl
xchg
cld
push
movsb
or
add
test
add
mul
mov
ret
push
cmp
shr
sub
fistpll
shr
sub
cmp
jge
xchg
push
xchg
adc
pusha
das
pop
cld
ljmp
testb
loop
cmp
leave
mov
xor
xchg
dec
jl
mov
test
sub
xchg
out
loopne
cmc
cld
and
movsl
icebp
push
rorl
or
ds
cmp
cmp
movsb
lods
loope
ds
notl
fidivl
hlt
lret
clc
pop
pop
stos
adc
sbb
imul
push
mov
test
inc
mov
sub
and
das
push
inc
icebp
or
sbb
lret
bound
orl
adc
push
xor
sbb
inc
mov
xchg
dec
dec
jp
ja
push
mov
ja
ja
js
sbb
sub
and
adc
leave
outsl
imul
fxch
sbb
sub
mov
xchg
fdivl
hlt
sahf
xor
int3
add
and
adc
or
ret
add
xchg
insl
inc
scas
cmpb
sub
pop
adc
dec
aad
test
cmc
pop
or
dec
mov
sbb
lock
sub
dec
cwtl
or
cltd
nop
mov
jl
jge
test
ret
in
test
call
nop
xor
test
jge
loop
or
jle
dec
push
dec
out
jne
pop
cmpsl
add
fwait
sar
fldenv
xchg
xchg
ljmp
rclb
aam
jge
repz
and
addr16
push
push
lods
mov
push
imul
incb
loope
jecxz
cmp
mov
dec
lods
stc
mov
push
cmp
ja
xchg
mov
shrl
jae
mov
ret
pop
mov
mov
mov
dec
inc
fsubr
imul
cltd
jg
inc
lds
add
in
lahf
xchg
push
call
jecxz
mov
sbb
push
shr
push
mov
lret
xchg
and
imul
jecxz
fs
fstpl
cmc
jns
rcrl
or
ret
mov
jl
in
dec
mov
cmpsl
xchg
jae
pushl
mov
mov
sub
mov
lods
xchg
and
sbb
das
arpl
mov
sub
xchg
mov
cltd
sub
cltd
pop
aaa
lret
xor
inc
xchg
and
les
and
pop
xor
sbb
xor
xchg
jle
push
cmp
out
dec
inc
jmp
xor
insb
ret
test
jp
int
fbstp
and
jge
and
mov
push
pop
gs
xor
inc
notb
xchg
adc
adc
jl
xor
push
dec
sub
rorl
pop
sub
lods
push
push
pop
aas
and
repnz
std
lahf
addr16
xchg
push
faddl
xchg
in
das
fcmove
aaa
stc
mov
fcmovnu
mov
repz
adc
jne
das
repnz
push
sub
popf
fisubrs
adc
repz
fs
xor
push
cmp
xchg
clc
out
in
cvtdq2ps
add
pop
inc
jns
pop
jmp
arpl
mov
pop
pop
out
hlt
dec
outsb
out
xor
mov
mov
sub
add
dec
test
lods
or
xchg
popa
push
and
insb
fcmovnb
clc
xlat
or
mov
mov
cmp
cmc
imul
inc
bound
xchg
call
rcl
int
mov
sub
das
and
aas
sahf
sub
mov
dec
mov
pop
insl
pop
stos
mov
out
out
mov
je
xor
test
mov
jns
enter
gs
cmp
push
pop
sbb
adc
jp
cltd
add
or
xor
stos
sub
lock
sub
pop
das
pop
pop
pushf
hlt
gs
outsb
inc
mov
inc
call
jmp
pop
xor
daa
sub
scas
jbe
shrl
dec
shlb
mov
pop
ret
dec
loope
pop
mov
and
add
aad
mov
mov
cmp
adc
daa
lahf
pop
xor
jne
out
imul
jns
adc
xor
pop
xchg
cmpsl
mov
gs
xchg
repnz
in
call
mov
mov
pop
int3
stos
xchg
out
bound
and
dec
dec
push
or
mov
pop
es
pop
xor
sub
pusha
scas
xor
insl
mov
fldenv
pop
popf
hlt
push
or
pop
rcrl
loope
rol
push
mov
dec
push
fistpll
lret
movsb
inc
and
movsw
adc
cmpsl
loopne
xor
or
out
test
pop
push
daa
jl
mul
push
sahf
rcrb
outsl
sbb
pop
push
sub
js
xchg
mov
test
mov
movsl
dec
jge
cltd
ss
mov
std
mov
jno
es
test
das
js
fwait
add
sahf
repnz
add
in
rcr
add
jle
das
xchg
lea
jge
sub
popa
push
pop
xor
arpl
pop
outsl
shl
rcll
pop
inc
xlat
mov
cmc
pop
sub
dec
bound
push
xor
or
fs
mov
xor
out
ljmp
in
fdivrs
or
jecxz
mov
bnd
int3
add
mov
jno
pop
xchg
pop
insl
sbb
push
adc
insb
jmp
and
pop
push
in
sahf
push
sbb
or
cmp
mov
or
cmc
in
mov
fnstsw
sbb
xor
jmp
mov
sti
lret
inc
sbb
ljmp
and
xor
std
push
pop
mov
ss
dec
jno
repnz
mov
ficompl
jo
daa
sbb
push
inc
rcll
stos
adc
pop
clc
in
ljmp
dec
inc
aam
xchg
inc
mov
or
dec
lods
fstl
mov
les
iret
mov
jmp
int3
cli
xchg
fdivl
leave
inc
add
mulb
or
dec
push
test
imul
adc
lahf
and
dec
push
or
jmp
jg
aaa
mov
pop
sub
dec
enter
fildl
adcb
cmp
fsincos
daa
lret
ret
jno
aaa
cmpsb
test
cli
push
xchg
sub
clc
mov
lcall
push
cmpsl
jle
imul
sbb
lods
loop
sub
fwait
cmpsb
adc
in
lock
lret
or
or
sub
inc
enter
add
xor
mov
xor
push
mov
sarl
add
push
pop
out
pop
sub
lods
cmp
fadds
cmp
sarb
arpl
xor
les
add
or
insb
fdiv
out
mov
pop
subb
and
aad
and
cmp
repnz
push
int
popf
daa
imul
adc
pusha
jecxz
push
or
in
rclb
shr
movsl
mov
pop
loopne
repnz
shlb
in
add
lret
sbb
push
sbb
cwtl
imul
imulb
pop
inc
xchg
pop
adc
lret
pop
inc
sbb
sub
cmc
cli
inc
lahf
out
or
nop
loop
mov
jl
std
stc
xlat
sub
or
xlat
subb
stc
mov
stos
cmpsb
out
push
and
popa
sub
dec
xchg
xchg
in
scas
frstor
paddb
jne
stc
imul
insb
out
cmp
sbb
mov
sub
lret
test
xlat
daa
mov
jl
push
filds
xchg
add
cmp
iret
pop
pop
push
ss
or
or
adc
dec
test
clc
sbb
sub
int
mov
and
push
shll
int3
jecxz
and
shrl
adc
mov
sub
notl
inc
jp
cs
inc
mov
out
loope
test
adcl
cmp
fsubr
dec
fstpt
pop
rcrb
inc
or
pop
dec
sub
clc
inc
lret
add
lea
nop
js
dec
into
jp
xchg
ret
test
mov
xor
je
ret
lds
xor
lods
idivb
xchg
mov
cld
test
jbe
sub
loope
movsl
lea
insb
mov
insl
push
or
test
cmp
lret
jecxz
fdivr
push
pop
push
lfs
jne
and
lret
add
adc
push
fwait
popf
lahf
sub
ror
lret
jb
bound
and
inc
push
and
mov
xchg
into
decl
data16
sub
xchg
add
inc
sbb
xchg
shrl
sub
adc
xchg
adc
inc
movsb
fists
test
adc
inc
arpl
negl
push
inc
mov
sub
orb
xchg
mov
mov
push
push
and
or
lcall
push
and
mov
addr16
cmp
pop
inc
xor
jle
int
pop
out
loop
das
xchg
mov
ret
dec
fmul
daa
mov
jo
cltd
xchg
out
mov
and
mov
add
add
int
bound
mov
rolb
pop
xchg
mov
mov
jle
lcall
cltd
les
sahf
sbb
call
sbb
ret
push
adc
loope
jecxz
das
lret
xchg
jbe
xchg
jo
push
iret
adc
sti
xchg
dec
dec
lock
out
push
adc
jne
pop
nop
xchg
xchg
insb
call
sahf
lock
mov
push
mov
jmp
cltd
push
push
adcb
lods
sbb
mov
push
jp
mov
mov
xchg
loopne
sub
lret
testb
fwait
and
fcomps
adc
fmull
sbb
jecxz
scas
gs
enter
lss
aad
pop
icebp
sub
xchg
sub
loope
xchg
ret
outsb
bound
dec
sbbl
addl
mov
nop
lock
mov
adc
or
sbb
mov
test
push
pop
out
test
pop
adc
add
mov
out
xor
pop
dec
or
int3
sti
jge
mov
shl
cmpsb
rcl
xor
xchg
xlat
cmp
jmp
adc
pop
outsl
cmpsl
xchg
xchg
add
cmpsl
push
xchg
jle
sbb
in
jae
pop
sbb
sahf
jmp
test
mov
popa
and
stos
xchg
jmp
orb
jae
mov
sarb
push
xchg
push
inc
and
out
cwtl
pop
scas
sub
pushf
dec
mov
inc
lods
das
sub
dec
push
mov
mull
in
inc
and
in
call
bound
divl
and
frstor
ret
dec
xchg
cmc
push
leave
fwait
mov
xlat
data16
xchg
push
pop
dec
repnz
cwtl
mov
aaa
jne
test
lret
and
pop
ror
clc
inc
and
sti
inc
mov
test
xor
adc
call
cs
lods
cli
inc
out
xor
pop
testl
sub
int3
mov
fsubs
insb
xchg
cmc
nop
push
cwtl
or
stos
jl
jnp
xor
jb
inc
dec
insb
or
cmpb
push
jg
es
jl
sub
mov
sub
clc
cmp
outsb
sahf
ds
jmp
shrb
sub
cmc
outsb
fcomip
scas
xchg
pop
xor
jl
lret
fdivl
adc
dec
cltd
xchg
ret
push
enter
shlb
xchg
sub
lahf
mov
mov
mov
jnp
jl
mov
lcall
pop
and
add
mov
inc
fucomi
ljmp
popf
in
adc
notl
mov
jae
sub
pop
int3
mov
add
cs
xor
pop
mov
ss
jge
sub
jb
loop
imul
cmp
mov
iret
xchg
ss
test
popf
mov
jb
cmpsb
inc
jl
in
sbb
xchg
mov
stos
sub
scas
xchg
mov
cmpsl
and
adc
aam
outsl
cmc
xchg
test
jp
pop
shrb
cltd
sub
out
popa
sti
push
xor
pop
cmp
aad
ljmp
adc
sbb
dec
lea
test
cmp
addr16
cmp
inc
push
and
mov
mov
pop
psubd
adc
pop
adc
push
sub
push
sbb
gs
pusha
xchg
addr16
pushf
or
pop
push
mov
ret
enter
pusha
pop
xchg
jge
xlat
aad
push
mov
mov
addb
ja
lahf
stos
pushf
mov
mov
and
fnstenv
sub
ljmp
fadds
xor
shlb
inc
fildll
imul
fst
pushf
or
cmc
out
add
dec
data16
js
icebp
ret
nop
scas
out
jnp
and
add
repnz
sbb
xor
push
mov
les
popa
push
dec
enter
icebp
fsubr
iret
sub
loopne
cld
dec
jb
adc
fidivrl
clc
das
mov
push
inc
data16
push
out
jno
and
inc
mov
adc
add
xchg
cwtl
cltd
xchg
mov
int
in
pop
jbe
mov
mov
insl
pop
or
test
xchg
push
imul
jecxz
lods
mov
jge
lods
in
mov
outsl
repnz
call
pushl
jecxz
dec
dec
cmpsb
dec
data16
mov
mov
lret
sahf
rcll
mov
add
push
cmp
and
mov
jno
inc
sbb
xor
push
popa
test
gs
int
mov
addr16
cwtl
jnp
push
jp
emms
call
je
dec
xchg
jle
or
sbb
inc
ror
outsl
pop
test
cltd
out
ja
push
rcrl
andb
orl
insl
in
mov
dec
mov
popa
scas
and
jno
add
rorb
les
or
add
test
or
mov
jge
or
test
jmp
mov
cmpb
jecxz
push
orl
fprem
cmp
mov
fdivl
movsl
add
push
xchg
add
sub
dec
int
sahf
jns
out
pusha
and
xor
jecxz
sahf
aas
push
xor
lea
sub
mov
add
cwtl
mov
jp
test
popf
inc
repnz
out
add
test
cli
aad
xchg
xchg
scas
movsl
lret
adc
dec
negl
fcmovnu
xchg
xchg
leave
sti
jno
mov
push
ds
sbb
lret
data16
mov
mov
popf
jb
scas
icebp
dec
mov
enter
call
in
cmp
inc
push
mov
daa
popf
push
xor
pop
adc
jb
enter
adc
jne
addr16
pop
mov
mov
xor
and
sti
sahf
imul
jmp
add
xor
cmpsb
stc
stos
mov
and
cli
aas
jne
mov
pop
das
loop
mov
sti
out
mov
mov
and
into
push
xchg
iret
arpl
aad
push
arpl
fcomps
mov
nop
test
mov
nop
in
jge
mov
and
mov
in
fisttps
rcrb
rcrl
test
mov
jecxz
push
call
movsb
js
loopne
sub
pop
arpl
and
popa
pop
nop
pop
fildll
sbb
cmp
popf
jne
adc
push
lock
jecxz
mov
or
dec
outsl
or
xchg
push
ret
fists
and
ret
push
or
test
int3
sahf
fmulp
lahf
xor
sahf
pop
in
adc
loope
adc
in
insb
rcr
fisubl
xor
inc
cltd
mov
mov
xchg
fstpl
outsb
test
out
stos
inc
add
ret
push
subb
mov
out
loope
push
xchg
jge
and
aas
inc
into
adc
cmp
dec
xor
movsl
or
mov
in
add
scas
xchg
cmc
ret
cmp
xchg
pop
mov
test
rcrl
fimull
sub
mov
mov
ficoml
fstpl
out
sti
shr
iret
add
mov
sub
pop
push
aam
and
mov
sti
adc
and
or
and
push
pop
jmp
jae
mov
xor
pop
cmpsl
enter
jne
push
xchg
int
add
outsl
mov
fwait
lret
mov
inc
mov
gs
sarl
jb
sbb
cmp
dec
adc
arpl
ret
mov
xor
xchg
movsl
hlt
jo
jns
lret
jo
popf
subb
in
mov
jp
pop
cmc
loopne
icebp
arpl
sbb
mov
shll
add
mov
insl
mov
test
ds
std
ja
push
pop
push
je
movsb
and
dec
cli
push
fstl
mov
cld
and
rol
pop
sbb
lret
test
add
mov
lods
movd
addr16
les
pusha
fldl
add
mov
mov
shlb
outsb
out
sti
pop
stos
lds
icebp
push
add
call
adc
mov
dec
sub
bound
data16
fdivr
pushf
inc
inc
loope
mov
jae
or
aam
aad
cmpsb
xchg
push
loop
pop
or
mov
imul
sub
shrb
inc
inc
sub
sub
mov
outsl
sbb
lds
mov
mov
sbb
pushf
mov
or
ret
test
and
leave
fcmovb
mov
rcll
test
add
repz
stc
sbb
dec
sub
cmp
dec
dec
xor
jo
dec
insl
pushf
adc
inc
inc
or
mov
faddl
xchg
push
data16
xchg
aam
stos
pop
and
or
mov
ffreep
push
insb
adc
mov
pop
inc
xchg
xorl
and
mov
push
mov
jg
xor
fadds
jo
inc
insl
sbb
lock
adc
aas
ds
call
jge
mov
or
push
imul
and
dec
testl
sbb
bnd
sub
cld
ret
sub
dec
movsb
cmp
mov
cmp
xchg
dec
std
and
mov
lods
data16
in
movl
mov
ljmp
sahf
mov
sbb
adc
push
add
aas
mov
stos
push
scas
mov
adc
jecxz
rol
push
sub
popl
pop
int
fs
movl
shrl
andl
mov
lods
loopne
pop
mov
loopne
inc
jnp
je
xor
fbstp
mov
inc
test
movsb
js
xor
lret
sarl
xlat
xchg
jge
sbb
xorb
mov
and
stc
int
nop
repnz
sub
test
jae
fs
ret
sbb
sub
cmp
enter
call
inc
cwtl
push
test
mov
xchg
push
ret
sbb
sub
cmp
enter
call
inc
cwtl
push
test
mov
xchg
js
js
or
sbb
sub
cmp
int3
add
adc
and
xor
arpl
xchg
loopne
push
mov
ret
or
sub
mov
mov
dec
adc
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
dec
subb
rcl
and
or
add
add
push
add
add
add
add
jge
push
add
add
rolb
and
pop
add
add
ret
add
add
add
add
add
add
add
mov
rolb
je
push
add
popa
add
add
add
add
add
add
add
sbb
jecxz
int
popa
add
add
add
pop
add
add
add
add
fldl
push
add
add
pop
add
add
add
add
add
jg
and
pop
add
add
insb
add
add
add
add
add
or
add
add
scas
add
add
fldl
mov
roll
roll
cmp
insb
add
add
add
add
add
add
add
add
add
add
add
add
pop
sbb
push
add
add
int
call
add
add
add
add
mov
add
add
add
pop
add
add
dec
add
add
add
xlat
add
add
mov
add
add
add
add
add
adc
cltd
add
add
add
xchg
add
add
add
add
ljmp
add
pop
add
outsl
add
and
rolb
loop
daa
add
add
add
add
push
add
add
add
add
add
popa
add
add
add
jns
sbb
push
add
imul
add
dec
add
add
add
add
pop
jbe
insb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
push
add
push
add
add
add
add
add
add
add
add
add
inc
add
add
add
or
xchg
add
add
add
add
popl
and
add
add
add
mov
add
add
add
add
add
add
add
sbb
xor
inc
add
mov
mov
dec
add
add
add
add
push
add
adc
push
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
data16
add
add
add
add
add
add
add
dec
add
add
add
add
cwtl
add
add
add
xor
pop
add
add
pop
add
lahf
add
enter
cltd
add
add
pop
add
lahf
add
add
add
add
add
or
les
in
add
dec
add
add
test
add
add
add
or
add
add
add
sbb
les
add
add
push
add
add
add
jbe
adc
sti
add
add
add
popa
add
adc
inc
add
add
add
add
add
add
dec
add
add
add
add
popl
dec
add
add
add
add
add
add
add
add
add
movb
add
enter
pop
add
cmp
add
adc
add
add
add
int
je
insl
add
add
add
add
jl
xor
push
inc
dec
movb
stos
inc
mov
jns
cmp
xchg
ja
in
inc
movsb
shll
pop
icebp
ja
je
mov
pop
push
xorb
mov
pop
test
loopne
cmp
xor
out
adc
and
shr
add
and
pop
add
popf
inc
movsl
bound
xchg
jmp
ret
cmpsb
lahf
mov
mov
into
adc
xchg
ret
cmpsb
xchg
adc
mov
pop
out
imul
dec
movsl
in
dec
mov
cmp
scas
or
and
sbb
repz
scas
sbb
std
imul
mov
sbb
sub
mov
test
mov
decl
pushf
ja
mov
les
stos
jge
push
into
push
xorb
mov
int3
jnp
insl
clc
test
int
outsl
or
in
dec
xlat
insl
es
stos
xor
xchg
insl
xchg
cmp
test
inc
xchg
in
adc
fmull
inc
jecxz
andb
loopne
pop
jae
lahf
movsb
jp
data16
cli
mov
push
movsb
lock
push
das
mov
shll
stos
out
pop
test
sbb
lods
ds
xchg
push
add
jb
push
pop
mov
daa
out
dec
outsb
out
add
pop
out
mov
mov
pusha
notb
leave
fiaddl
xor
adc
pop
dec
jmp
push
inc
mov
push
xchg
sahf
icebp
add
dec
sbb
jg
les
mov
xchg
addr16
repz
mov
clc
aaa
fs
ret
call
leave
cmc
jge
adc
add
fwait
dec
cltd
push
clc
sahf
push
or
mov
sti
push
xlat
data16
sbb
mov
sub
cmc
cwtl
out
dec
sub
jg
hlt
out
mov
popa
adc
fdivs
inc
scas
push
es
adc
movlps
cmp
shll
scas
adc
mov
clc
sti
icebp
and
pop
inc
pusha
sti
into
mov
xor
fcmovb
outsl
or
notl
icebp
sbb
cmp
fistpl
inc
int
icebp
xchg
pop
in
xchg
call
add
push
int3
mov
sbb
pop
jno
aaa
jp
adcb
sbb
push
and
or
or
cwtl
pop
mov
mov
mov
add
popf
ret
mov
out
ret
xor
lods
inc
pop
lods
sub
in
addl
das
cmp
dec
movsb
inc
push
sbb
inc
shr
aad
fisubrs
push
mov
sarb
je
test
test
sbb
add
inc
xchg
xor
add
popf
das
xorl
or
sahf
xchg
ret
das
xchg
sbb
pop
js
sbb
stos
xchg
lds
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
