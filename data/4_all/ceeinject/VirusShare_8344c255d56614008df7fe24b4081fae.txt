call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
dec
add
jmp
dec
dec
jbe
lret
sbb
cmpsb
pop
mov
ret
cmp
sub
sbb
or
sti
push
jmp
lret
inc
mov
jbe
jnp
dec
mov
dec
push
mov
out
testb
imul
xchg
dec
jne
xchg
xchg
cmp
insb
mov
outsl
test
inc
sti
test
inc
sahf
int
adc
bound
xchg
shrl
xchg
cmpsb
mov
jo
cli
push
cmpl
leave
add
cmp
pop
pop
inc
cmp
sbb
push
cli
push
out
shll
adc
imul
cmp
pop
sub
cmp
pop
lret
arpl
mov
je
xchg
test
cmp
cmp
aam
repz
out
jmp
aad
and
jnp
pushf
mov
xor
or
push
fxch
xchg
icebp
lret
cld
scas
sub
fisttpl
add
cmp
aam
sbb
xor
pop
pop
roll
stos
inc
into
or
lods
jle
test
cmpsb
pop
enter
xchg
gs
pusha
jmp
cwtl
pop
in
iret
and
jne
pop
out
out
xlat
imulb
xlat
and
pop
mov
push
mov
std
out
das
aam
cwtl
or
add
cmp
mov
mov
xchg
jp
pusha
je
and
test
fists
data16
jbe
xchg
imul
sub
sbb
or
sti
push
jmp
lret
inc
mov
jbe
xchg
imul
sub
sbb
or
sti
sarb
js
out
and
mov
lds
rol
daa
add
pop
inc
cmp
jmp
push
scas
mov
jae
pushf
push
fwait
gs
mov
and
jecxz
or
outsb
xor
ja
ret
xchg
decb
pop
loopne
sbbl
iret
push
dec
dec
push
jb
test
push
lods
mov
inc
inc
loop
xchg
sbb
pop
out
lahf
dec
jo
mov
inc
push
adc
mov
std
les
sbb
cmpsl
data16
filds
or
aad
movb
jb
mov
and
movsl
push
and
adc
mov
das
jp
aad
shll
mov
pop
cmp
cmp
addr16
mov
or
fsubr
jge
fwait
inc
mov
mov
cwtl
jns
pop
and
mov
mov
cmp
or
sub
jge
dec
insb
sub
out
push
aaa
dec
lret
and
sahf
sbb
sahf
jecxz
orb
xor
push
mov
mov
inc
xchg
arpl
sub
jbe
loope
jg
or
es
jp
pop
ljmp
test
adc
adc
lahf
mov
std
or
in
les
pop
iret
jmp
imul
or
ret
imulb
xor
es
je
sub
dec
imul
in
gs
xchg
sbb
adc
sbb
cld
cs
adc
shll
sbb
pop
xchg
fwait
std
jo
sub
and
and
add
xchg
les
faddl
fistps
imul
jl
sub
enter
in
sti
mov
adcl
daa
test
lret
ljmp
sub
faddl
mov
icebp
ret
sbb
mov
mov
xor
scas
mov
jmp
mov
push
ja
insl
jg
nop
rcr
fs
mov
sbb
or
push
mov
loop
dec
inc
jae
sbb
push
pop
pop
push
sub
or
scas
rcrb
add
ss
jno
out
mov
test
js
and
push
mov
push
imul
sub
into
clc
fwait
aad
shrb
mov
cmp
push
lds
jp
lcall
jp
mov
jne
pop
sbb
or
pop
sbb
sub
aaa
cs
inc
or
lret
popf
repnz
pop
push
sub
or
cli
cmc
stc
cmp
or
bound
rolb
call
push
into
push
xchg
adc
lds
testl
mov
and
mov
jb
mov
bound
cwtl
xor
repz
jo
ja
xor
leave
sarb
stos
mov
sub
rcrb
pop
xor
aaa
dec
cmp
lock
push
int
sub
mov
loope
data16
dec
xor
clc
inc
cmp
jnp
test
sbb
ret
pop
lcall
push
and
ret
lods
fmul
out
jae
fdiv
mov
push
jl
xchg
daa
lea
cmp
pusha
push
jg
dec
and
xor
dec
je
xchg
or
mov
dec
mov
push
shlb
jno
jb
outsl
inc
pop
enter
sub
jge
cmpb
lds
add
lock
inc
xor
sahf
insb
pop
pop
mov
sbb
mov
push
fwait
xchg
cmp
out
dec
and
lahf
push
xor
testl
pushf
subl
or
pop
mov
inc
nop
mov
mov
cmpsl
popf
xchg
scas
aam
ror
stos
addr16
mull
push
sbb
in
push
mov
out
push
mov
pop
stc
inc
jmp
inc
dec
decl
imul
xchg
cmp
fidivs
cwtl
loop
lcall
dec
ja
jmp
mov
cld
xchg
loop
xchg
subb
rcrl
cmpsl
dec
fsub
out
aas
scas
lcall
daa
out
inc
insb
mov
in
out
inc
stos
std
cmc
or
xchg
les
movsb
js
fisubrl
xlat
sti
inc
xor
sub
int3
mov
sbb
mov
lcall
dec
lock
fwait
mov
xorb
push
sub
jns
xor
cli
lahf
and
js
and
loopne
es
outsl
cld
sbb
cmpsb
jo
sub
lcall
xchg
push
arpl
leave
mov
mulb
adc
dec
test
adc
dec
xor
adc
jae
adc
mov
jne
mov
outsb
popf
sub
xchg
xchg
shrl
mov
or
fimuls
leave
idiv
mov
ljmp
fcmovu
xor
inc
mov
pop
push
hlt
and
pop
popf
inc
ficoml
xchg
xchg
mov
cs
daa
mov
enter
push
pop
mov
jno
or
mov
sbb
sbb
into
loop
and
rorb
ljmp
ds
inc
test
repz
jge
ret
jae
xlat
out
cmp
das
push
push
mov
inc
xchg
fsubr
insb
sub
or
and
cmpsl
dec
das
mov
sub
and
dec
xchg
jp
push
cs
xor
cmp
mov
paddusw
inc
jecxz
lcall
mov
dec
adc
jmp
lret
stos
pop
fdivp
mov
cmpsl
adcl
outsl
pop
sub
dec
xlat
out
out
icebp
insb
pop
push
repnz
arpl
int3
stc
cmc
std
out
and
mov
rorb
pop
mov
test
test
jne
jmp
lods
xchg
mov
movsl
fsubr
mov
fsubs
or
mov
sti
fbld
mov
insb
fdivl
rsm
push
mov
mov
inc
inc
ja
stos
add
and
sub
ds
xor
push
jge
frstor
shl
pop
roll
and
mov
sub
jl
pusha
xchg
fists
fneni(8087
mov
stos
cli
cmp
mov
xchg
std
fsubr
jecxz
shl
push
in
jge
sbb
enter
rclb
lock
das
push
xor
jns
fcomps
int
lcall
jns
pop
or
fwait
insb
push
loope
add
mov
test
jb
fsubrs
loop
stos
pop
dec
dec
push
adc
dec
mov
orb
jbe
xchg
enter
inc
jmp
sbb
sub
jo
test
xchg
decb
inc
out
jecxz
les
and
xchg
xor
mov
lock
jmp
inc
lcall
mov
mov
mov
sub
pop
sbb
scas
movsl
mov
cmp
cmp
shlb
out
xchg
push
sbb
pop
adc
xor
and
stc
pushf
adc
arpl
push
les
jmp
aam
icebp
mov
and
cmc
and
mov
mov
in
dec
cmpsl
mov
jmp
data16
stc
xchg
out
fmull
add
fs
in
or
dec
xlat
push
inc
rcr
xchg
mov
xor
pop
icebp
dec
cmp
andl
jg
daa
hlt
mov
cmp
mov
loope
xchg
mov
in
mov
imul
setne
cmp
mov
xchg
sub
insl
imull
push
sti
mov
test
or
add
call
loop
ja
and
daa
sub
pop
pop
out
mov
push
pop
in
add
in
cmpb
dec
neg
push
inc
fidivl
daa
cld
aaa
inc
mov
xchg
and
cmp
lahf
pushf
xor
loope
lcall
adc
addb
or
mov
sub
xchg
shrl
mov
pop
jo
dec
xchg
test
fcompp
jae
sbbb
push
xor
imul
les
fwait
xchg
jg
pop
call
test
push
fwait
out
xchg
and
cmp
movl
les
adc
pop
and
push
push
shll
mov
pop
fldcw
cmp
push
imul
push
xchg
mov
std
add
mov
dec
jp
aam
fbstp
es
adc
sbb
cmp
sub
jne
xchg
insl
jno
dec
jae
inc
shrl
aaa
push
jmp
fisubs
in
data16
push
inc
test
jne
ret
loope
test
scas
popa
sub
mov
test
es
or
jnp
sbb
jae
es
testb
sbb
sbb
mov
inc
push
pop
std
clc
repz
cltd
add
ja
insl
jnp
js
mull
and
scas
out
incb
adc
pop
inc
arpl
mov
xadd
or
rorb
test
fwait
sbb
xchg
lret
nop
push
mov
jmp
xor
jge
outsb
xchg
mov
jns
or
pop
stos
cmp
out
sbb
lock
das
jg
mov
xchg
js
loopne
cwtl
lahf
push
sub
mov
or
cwtl
xor
test
cmp
and
loopne
outsb
aad
dec
inc
jo
scas
cmp
pop
es
stos
sub
icebp
fdivrl
adc
repz
cmp
and
jo
or
std
gs
adc
call
xchg
in
push
adc
in
std
loop
jmp
push
mov
lock
inc
or
xlat
mov
xchg
or
cmc
int3
jmp
dec
jns
xchg
jge
sub
xchg
ljmp
jmp
ror
jne
add
sub
mov
in
aas
add
test
jp
mov
adc
das
xor
int
cmp
testb
mov
adc
lea
out
jo
fwait
in
or
sbb
mov
inc
test
and
xchg
rcrl
fdiv
and
mov
les
fldenv
stos
in
imul
enter
cmc
push
loope
xchg
mov
das
fs
ldmxcsr
lahf
jmp
sbb
rcrb
fidivs
or
arpl
xchg
xchg
adc
pop
daa
dec
lock
fdivp
push
jo
pop
inc
mov
cmp
arpl
jge
xchg
popf
jl
cmovg
cmpsl
xchg
lods
jns
fs
xchg
pop
add
or
jecxz
ja
mov
jle
dec
sub
xor
mov
and
lods
outsl
mov
out
xchg
mov
mov
addr16
mov
mov
push
out
sahf
add
mov
fidivrs
cmp
cmpl
in
hlt
adc
inc
push
orb
or
out
push
cli
subl
pop
hlt
in
or
pusha
fwait
xchg
push
pop
mov
data16
inc
push
out
cmp
popa
sub
dec
aad
cmpsb
cmp
mov
add
aam
and
repz
jae
or
enter
je
shrl
subb
loop
and
push
ss
mov
cmp
xchg
int
pop
ljmp
inc
adc
roll
movb
nop
mov
lea
adc
movsb
mov
scas
mov
cmp
cltd
fildl
cs
in
mov
int3
mov
pop
scas
divb
outsl
push
jo
sub
jp
rclb
cmp
xlat
jmp
add
adc
fprem1
inc
subb
sbb
int
faddl
idiv
rorb
les
lret
dec
mov
loop
cli
mov
mov
negl
add
loopne
iret
xor
notb
divl
stos
fwait
xchg
add
gs
push
dec
test
pop
cltd
push
in
out
xlat
mov
add
add
dec
xor
lcall
repnz
add
inc
add
lcall
and
flds
xor
xchg
js
stos
arpl
or
mov
pushf
test
cltd
mov
out
jns
mov
mov
inc
dec
and
les
test
and
jne
pop
push
mov
daa
sti
test
out
lahf
inc
or
xchg
mov
xchg
aaa
jmp
xchg
or
out
mov
nop
fisttpll
ret
sbb
pop
and
mov
push
xlat
test
icebp
mov
lcall
sub
pop
cmc
mov
pusha
ret
push
mov
sti
popa
sbb
pop
jp
cmpsb
xor
js
insl
jo
repz
cmp
outsl
cmp
mov
cmpsb
les
cmp
cmp
jne
rorl
and
lea
push
sub
jae
stc
push
cmpsl
sti
jae
fwait
fwait
or
sahf
iret
aad
push
add
dec
xor
mov
cwtl
sbb
lods
pop
pop
ljmp
xlat
xor
add
stc
out
stc
cmp
adc
divb
add
pop
and
pop
or
dec
shll
testb
imul
sub
mov
nop
or
xchg
push
lods
popa
mov
push
jns
cld
je
popl
cmpsb
push
jno
cld
push
aas
pop
repnz
andl
cwtl
daa
sbb
movsl
xor
gs
rorl
sahf
jne
or
aas
fisubrl
outsb
and
sbb
int
mov
cmp
mov
cmp
ds
pop
divb
ja
mov
gs
aad
or
cmc
xor
out
pushf
and
imul
addr16
push
les
sahf
xchg
pop
ror
rorb
test
push
notb
mov
js
push
xchg
out
data16
out
xchg
in
lret
cmp
sbb
inc
mov
pop
lods
popl
lea
mov
inc
or
sti
jecxz
loopne
mov
fisttpll
mov
jg
iret
test
mov
lahf
dec
xbegin
jle
jge
loopne
test
pop
xor
cmp
add
inc
jbe
jno
push
data16
push
clc
mov
dec
inc
dec
push
xchg
stos
xor
xor
cmp
mov
movsl
scas
out
sub
xor
mov
cmp
adc
jmp
or
fnstcw
or
sub
lret
mov
cmp
pop
mov
inc
xorl
pusha
add
rcrb
push
sarl
test
xchg
nop
ret
jno
mov
lods
jns
adc
out
das
jecxz
xchg
call
faddl
mov
lds
mov
push
mov
loope
xor
or
movq
repnz
sbb
or
cltd
cli
mov
jo
mov
sarl
dec
or
iret
jg
repz
enter
cld
xchg
mov
adc
cmpsb
xchg
iret
inc
jae
loopne
cmp
test
movsb
sub
dec
or
dec
mov
sub
call
sub
out
addr16
aas
lahf
xchg
mov
iret
and
out
sbb
mov
pop
inc
xchg
std
adc
adc
jge
adc
sahf
cmp
pop
or
xchg
pop
imul
and
scas
test
sub
imul
out
xchg
xchg
adc
and
test
cltd
pop
mov
push
sti
sub
inc
xchg
mov
mov
fdivl
xor
mov
call
subl
stos
stc
mov
jp
jmp
sbb
or
testb
sbb
mov
adc
adc
scas
cltd
bound
jae
cmp
mov
xchg
sub
lock
jecxz
lds
std
out
leave
in
sbb
push
call
popl
push
cmpsl
loop
dec
je
js
jns
jo
xor
jae
icebp
mov
imul
fistl
pop
xchg
push
add
scas
sahf
sbb
enter
push
push
add
push
jl
loope
mov
push
cmp
ss
mov
neg
outsb
in
daa
sahf
cwtl
adc
and
push
sub
bound
pop
pop
xor
and
pop
lcall
in
pop
roll
fcmovb
movl
sub
mov
xchg
hlt
mov
push
cltd
cmpl
xor
push
mov
rcl
inc
cmp
sub
lea
fmuls
mov
lds
clc
sbb
outsb
pop
fs
adc
add
cmpsl
cwtl
test
xchg
cmp
sbb
ja
sub
insb
inc
mov
stos
jg
stc
lret
icebp
mov
idivl
notb
xor
popa
pop
mov
jecxz
pop
mov
inc
jnp
mov
mov
ret
divl
sti
int
pop
and
enter
rol
inc
lods
pop
push
movsb
pushf
lahf
or
mov
fildll
cmp
sbb
daa
test
cmp
cmp
dec
sbb
repz
daa
insb
xor
dec
jb
inc
and
cmpsb
and
push
adc
std
mov
ss
out
jb
xchg
push
in
mov
loope
cmp
fdivrl
lret
jg
add
inc
add
pop
out
gs
inc
out
iret
jle
xchg
jnp
push
push
cmp
dec
add
push
mulb
fsubl
hlt
dec
cmp
push
xchg
lods
movsl
jp
imul
add
adc
cwtl
mov
cmp
jp
repz
shlb
inc
movsl
pop
push
loope
xchg
mov
loope
inc
lods
or
fadd
mov
add
push
push
push
inc
icebp
xor
pop
pop
js
jmp
stos
dec
addr16
in
scas
lods
call
cmpsb
add
pop
mov
pushf
in
sub
jg
jne
sub
lret
lock
enter
ds
cmp
xchg
push
sbb
popf
adc
stos
or
shlb
sbb
push
arpl
add
adc
dec
ja
xchg
cmp
loope
mov
sti
das
imul
pop
inc
adc
mov
repz
imull
mov
sbb
adc
jle
or
loop
jnp
and
je
jo
inc
inc
out
out
fwait
sub
push
adc
adc
xor
jp
pop
mov
mov
sbb
int
mov
jo
add
or
movsl
pop
push
lock
mov
sbb
inc
mov
aas
mov
pusha
inc
das
outsl
push
stos
sar
xchg
cld
movsl
xchg
lcall
test
out
shrl
pop
dec
mov
call
pop
mov
add
or
mov
ja
pop
ret
or
mov
inc
adc
js
inc
lock
scas
fwait
mov
fnstenv
dec
lret
js
xor
sub
jno
xor
cs
mov
ret
pop
mov
xchg
leave
add
movsl
test
aas
jp
mov
push
xchg
lret
sbb
mov
pushf
pop
add
popf
sbb
cwtl
sbb
jge
iret
sub
insl
mov
jne
stos
mov
out
push
mov
or
mov
pop
gs
mov
jnp
popf
pop
sbb
adc
test
cmp
xchg
fnstsw
mov
je
mov
or
out
or
es
xchg
push
cmp
dec
inc
into
pop
repz
push
push
mov
sub
leave
dec
pushf
xchg
sub
xor
inc
imul
ss
sub
adc
orb
push
ljmp
fisttpll
arpl
cmpsb
push
sbb
xchg
iret
push
dec
mov
jo
push
fwait
sub
sbb
mov
imul
dec
stc
aad
sbbb
mov
mov
sbb
cltd
push
cld
rclb
cwtl
sbb
sahf
popf
rcll
fdivr
mov
mov
or
or
inc
sahf
sub
lret
sub
popf
push
sub
ffree
sbb
mov
xor
cli
outsb
sub
cmp
mov
mov
cmc
lods
jge
lods
mov
fs
orb
jl
cmp
rolb
mov
mov
insl
mov
and
fsubrl
je
inc
ret
int3
mov
fsubs
or
movsl
jp
imull
mov
lds
sub
loop
test
xchg
push
inc
and
addr16
and
popa
cltd
adc
cmp
ljmp
mov
movsb
cli
pushf
hlt
cwtl
sbbb
jbe
lahf
cwtl
cld
mov
xor
and
mov
sub
stc
jmp
out
ljmp
lahf
and
inc
in
lcall
jbe
adc
outsb
cmp
fsubrp
lea
outsl
stc
cmp
loopne
in
clc
mov
xchg
xchg
sub
mov
leave
jecxz
ss
push
push
pop
rorl
push
fwait
xchg
jle
fwait
movsb
fisttpl
stos
nop
popf
add
call
loop
adc
xchg
xchg
cmp
pop
adc
mov
cmp
dec
fwait
notb
subl
mov
pop
xchg
stos
and
js
or
outsb
daa
movl
xor
fidivrl
rcl
cmpsb
mov
adc
add
inc
push
dec
add
and
movsl
ret
insb
nop
in
sub
pop
sti
xchg
inc
popf
push
in
push
outsb
popa
mov
push
sub
sbb
insl
sbb
add
mov
jbe
xchg
imul
sub
sbb
or
sti
push
jmp
lret
inc
mov
jbe
xchg
imul
sub
sbb
or
sti
adc
lret
inc
mov
ja
andb
dec
cmp
sub
cmp
or
sti
cmp
scas
fistpl
lret
inc
stos
sbb
mov
pop
mov
mov
pop
aam
in
hlt
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
repz
loopne
sarb
shrb
or
and
lahf
orb
fbld
adc
adc
xchg
pop
loopne
mov
pop
mov
outsl
jo
pusha
xor
and
adc
add
dec
pop
adc
inc
aas
sbb
scas
pop
rorb
subb
inc
sarl
iret
and
stos
inc
lcall
rcrb
ret
mov
mov
mov
adcl
mov
and
adc
add
sbb
sbb
push
cs
rcrb
jae
xchg
adc
aad
mov
inc
adc
call
push
or
inc
jns
loope
cwtl
js
out
es
pusha
jno
mov
gs
fadds
cmp
sub
mov
xor
pop
mov
aas
jno
pusha
lcall
and
jb
pop
rorb
mov
orb
push
mov
add
mov
decb
setp
sarl
ds
dec
xchg
dec
dec
outsl
mov
ljmp
mov
mov
ljmp
sarb
shrb
pop
fmuls
jg
outsl
mov
cli
es
sub
and
add
movsb
jns
imul
sbb
out
shll
mov
jge
mov
aas
mov
popa
gs
outsl
pop
fidivl
jecxz
jmp
dec
mov
pushf
dec
mov
dec
xchg
pop
jecxz
mov
outsl
jo
pusha
push
mov
and
adc
add
lock
loopne
sarb
shrb
pop
mov
outsl
jo
pusha
push
mov
and
adc
add
lock
inc
sbb
int
jg
dec
pop
sub
adc
xchg
jmp
leave
push
cmpsb
les
jo
cmp
push
test
lret
testl
test
aam
fwait
mov
lods
pop
mov
int
push
scas
movsb
enter
loopne
push
sti
in
push
clc
jae
data16
xor
and
pop
mov
mov
sti
mov
dec
and
and
dec
int3
add
notb
mov
xchg
adc
pop
idivl
ds
push
les
xchg
loopne
add
andb
iret
mov
lods
adc
rorb
dec
inc
out
cmp
add
mov
dec
leave
pop
es
fsubrs
incl
sbb
mov
imul
adc
addr16
imul
push
mov
rclb
fwait
leave
stos
sbb
outsl
adcl
xor
and
inc
and
cwtl
fcoml
jno
sbb
and
outsl
push
imul
xchg
lret
dec
add
jne
jb
push
aaa
divb
dec
jecxz
ret
xchg
clc
clc
cmpsl
iret
inc
lds
jns
loop
mov
push
lret
leave
mul
mov
mov
fwait
pop
and
add
sbb
jge
push
cmpsb
js
test
push
inc
int3
outsl
xorl
aad
rcr
mov
xor
dec
jno
jmp
ret
inc
jns
scas
push
push
aaa
out
jg
cli
andb
ret
out
imul
fwait
clc
popf
pop
test
xchg
xchg
mov
adc
decb
mov
nop
add
std
cwtl
pushf
push
idivb
imul
dec
mov
incb
aas
dec
xor
fisubs
sti
mov
sbb
rcl
out
idiv
pushf
lods
jge
std
aad
pop
push
jns
pushf
pop
lods
cs
sbb
xchg
adc
stos
pop
or
adc
sub
ja
sub
imul
mov
sti
cld
sub
cmp
or
fmul
inc
out
push
pop
or
inc
jno
pop
or
adc
cmp
pop
xor
fimull
rorl
ss
pop
sbb
mov
lods
movsb
xor
movsl
sbb
movsl
mov
dec
das
das
pop
mov
push
pop
les
mov
and
dec
lock
xchg
mov
stos
stos
add
inc
shl
push
cmp
mov
hlt
sub
mull
shll
mov
mov
and
lods
mov
cmpsb
fucomi
int3
mov
into
inc
mov
pushf
and
lods
popa
jae
int3
jo
mov
fbstp
andl
lahf
or
mov
sub
push
add
imul
fiaddl
mov
dec
daa
jecxz
inc
inc
rcrb
xchg
imul
fxch
pop
sub
sub
mov
loope
nop
fidivs
mov
jmp
xchg
xchg
sbb
xchg
cmp
pusha
jbe
ret
adcb
push
or
test
cltd
xchg
inc
mov
inc
int
inc
cmpsl
pop
inc
jg
leave
sub
xchg
jmp
jp
sahf
pop
dec
mov
mov
stos
mov
cmp
daa
fisubrs
jle
pop
jns
movsl
fdivl
out
fsub
inc
or
iret
mov
sti
mov
mov
mov
inc
out
cmc
or
sub
xchg
mov
xchg
ss
ret
xorb
cltd
in
pop
add
fimull
mov
sub
add
cld
lods
lods
dec
pop
test
jecxz
cld
dec
push
jb
ret
or
mov
sti
mov
scas
fucomi
inc
mov
mov
ret
pusha
and
and
push
les
pop
mov
mul
pushf
das
daa
scas
mov
or
mov
inc
inc
repz
mov
int3
pop
lock
or
clts
sbb
mov
and
xchg
pop
ds
test
push
insl
push
int
xchg
xchg
and
aam
addr16
fnsave
sbb
cld
fyl2xp1
jno
pop
sahf
jecxz
jl
cmp
cmpsl
push
shll
imul
insb
pop
cmp
pop
sub
jmp
mov
sti
add
call
flds
sub
call
arpl
jae
scas
fdivrs
jecxz
gs
and
inc
stos
arpl
sbb
sub
pop
adc
push
xor
movsl
cmc
repz
iret
mov
lods
mov
dec
stos
jmp
xor
adc
jg
daa
ljmp
movsb
imul
and
mov
inc
cltd
xchg
je
jg
test
loopne
outsb
icebp
mov
cli
pusha
popf
nop
mov
mov
sub
ret
rclb
push
push
adcb
outsl
jns
in
mulb
xchg
or
cwtl
lret
pop
fstps
push
jbe
lcall
mov
sbbb
pop
mov
int3
icebp
and
mov
mov
xchg
rorb
sub
test
test
mov
out
mov
jbe
xor
shrl
sbb
je
xchg
lret
popa
xchg
sbb
imul
daa
mov
cs
outsb
add
lods
fiadds
stos
mov
test
push
sbb
sub
adc
pop
test
lds
mov
leave
or
out
push
lods
cltd
nop
push
push
xchg
das
push
xchg
mov
push
adc
dec
popf
mov
mulb
pushf
mov
ret
out
or
or
scas
or
rorl
fcmovne
mov
mov
adc
addr16
mov
inc
sbb
mov
aad
out
or
aas
xor
gs
enter
insb
lahf
cmpsb
test
pusha
adcl
jno
add
maskmovq
testl
jne
push
in
xchg
mov
lret
pop
out
mov
push
xchg
cld
mov
test
lcall
jmp
int3
pop
aaa
jnp
leave
imull
icebp
jg
push
iret
cltd
test
je
aam
mov
dec
fadds
and
adc
mov
fscale
mov
lods
cli
jg
inc
or
leave
push
jge
push
sarb
roll
mov
sahf
push
jnp
test
scas
mov
in
pushf
insl
sub
xchg
fildl
cmp
in
push
or
jae
xchg
sub
clc
ret
cld
and
cmp
cltd
xor
push
popa
aad
test
dec
xor
push
add
adc
or
add
push
jb
in
fstps
in
and
push
push
adc
mov
xchg
sbb
push
stc
ret
ret
jle
aam
jb
in
mov
mov
imul
aas
xor
sub
xlat
pop
les
ret
mov
js
pop
jne
orl
add
mov
dec
sar
addr16
adc
mov
sbb
shr
xchg
xchg
mov
jge
inc
xchg
test
or
cmpsb
addr16
sbb
push
push
or
jbe
int
inc
xor
fwait
or
mov
sbb
call
test
xor
xchg
inc
jnp
dec
and
popf
scas
lahf
nop
ret
out
pop
enter
mov
pop
adc
lcall
ljmp
fs
call
clc
aas
aaa
xchg
test
fimuls
repz
adc
popa
fs
mov
mov
outsl
dec
fs
mov
lret
stos
or
hlt
push
mov
inc
aaa
lea
nop
cmp
aas
jg
adc
aas
adc
call
inc
sbb
lock
cwtl
jae
mov
add
and
mov
sahf
adc
clc
jp
and
mov
sub
jmp
dec
iret
push
and
and
pop
stos
popa
xor
mov
ss
fsubrl
movsb
arpl
lods
out
icebp
add
push
or
ret
cmpl
test
aad
out
mov
xor
orb
or
dec
lcall
xchg
xchg
insb
fnstenv
push
push
adc
pop
sbb
popa
icebp
mov
je
mov
lock
add
cmpsb
pop
mov
inc
mov
and
jae
add
inc
lods
mov
cmp
es
popf
ljmp
fs
adc
dec
aam
mov
lcall
adc
rcrb
cwtl
adc
jmp
shll
arpl
dec
xor
adc
jmp
fwait
add
mov
gs
mov
outsb
mov
and
or
mov
fisubrl
icebp
pop
lahf
push
rorb
out
insl
mov
add
pop
or
mov
push
enter
jp
icebp
in
out
ret
cs
mov
dec
pop
inc
rcrl
mov
mov
cs
fcoml
test
pop
add
inc
xchg
scas
push
ret
pusha
inc
gs
stos
dec
rcrb
cwtl
xchg
jg
out
xor
cmc
loopne
xchg
jecxz
adc
rcll
clc
inc
int
pop
sub
lock
insl
je
and
fisttpl
pop
cli
cmc
sti
sub
sub
aad
mov
out
sub
mov
sbb
or
scas
mov
dec
mov
out
inc
sub
adcl
xchg
mov
jp
fwait
repz
xor
lods
test
scas
jecxz
adc
push
movups
fiadds
cmp
inc
mov
mov
das
push
lods
mov
outsl
aam
cs
loopne
push
mov
jg
in
mov
jecxz
fsub
test
cmp
jbe
adc
fwait
lahf
add
xor
flds
and
lods
mov
or
and
lods
jnp
and
aad
cmc
push
sub
rorl
into
dec
jl
pop
push
mov
mov
push
gs
inc
movsl
cmp
fcoml
es
and
or
pop
enter
stos
push
sub
mov
icebp
imul
xchg
gs
lret
push
test
fcomps
loope
mov
faddp
into
in
mov
xor
add
xor
out
mulps
js
xchg
aam
inc
cmp
ljmp
arpl
cmp
in
lds
push
stc
rcrl
mov
test
inc
out
adc
lock
or
fsubp
mov
sub
xchg
mov
cmp
lds
shr
je
stc
adc
cmp
xor
jge
push
jb
pop
push
lods
dec
push
sbb
imul
inc
leave
pushf
mov
adc
test
out
pop
loop
aaa
in
jbe
xchg
mov
ja
or
stos
cmp
inc
dec
insb
loope
popf
fisubs
jg
mov
pop
xchg
cmpb
std
pop
jp
std
imul
mov
or
ds
mov
fs
push
popf
push
add
sbb
call
or
leave
jno
and
imul
mov
icebp
inc
stos
mov
adc
and
mov
ja
loop
addr16
xchg
rcl
stos
pushf
int
xchg
cltd
lcall
fistps
push
inc
repz
dec
pop
xchg
adc
dec
push
mul
in
jmp
rorl
xchg
es
fisttps
je
int3
notl
lods
mov
icebp
das
lcall
push
and
xchg
iret
cmp
inc
popf
mov
or
lock
pop
pop
pop
ljmp
jecxz
pop
jle
out
nop
mov
mov
mov
cmpsb
lret
adc
xchg
cmpsl
bound
clc
sbb
enter
dec
jne
jmp
sub
rclb
dec
jb
shlb
fsub
mov
jno
insb
mov
jne
sub
xlat
cmpsb
adc
in
jge
sar
cmp
ret
add
outsb
push
fwait
fwait
xchg
aam
int
xlat
loopne
and
cmp
xor
cmp
adcl
pop
and
insl
adc
dec
jno
push
pop
mov
out
clc
fwait
jns
daa
jno
adc
pop
sbb
rcrb
stos
std
xchg
jns
push
adc
jnp
pop
pop
in
add
out
mov
pusha
pop
jmp
mov
stos
sete
or
push
sti
add
aas
ds
in
pop
jg
xlat
je
or
jne
ja
je
inc
lds
cmp
andl
sub
mov
divl
mov
mov
repnz
xchg
cmp
or
and
lcall
fs
or
pop
mov
add
cwtl
jle
jl
xorb
sarl
pop
roll
xor
adc
jle
adc
shlb
aas
out
mov
jmp
push
push
clc
mov
negb
pop
xor
mov
cmc
pop
pop
lret
movl
lock
cmp
cli
xchg
and
add
stos
cld
jb
add
push
cmp
dec
mov
ja
cmp
cmp
iret
xor
push
push
xchg
shll
mov
mov
jo
or
out
lcall
loope
mov
jno
stos
js
fisubrl
imull
dec
push
cmp
adc
bound
push
ss
sub
xchg
sbbb
push
mov
lods
mov
loope
xchg
mov
imul
js
sahf
jge
imul
adc
aas
subl
sub
lcall
mov
bound
mov
jno
pop
icebp
push
loop
xor
or
pusha
jo
xchg
cmpsb
xchg
mov
mov
inc
jne
ds
push
divb
int
inc
sbb
popf
sbb
int3
pop
nop
xor
pop
imul
and
xchg
jae
aam
js
into
fnstenv
add
rolb
mov
popa
pop
shr
daa
dec
in
in
push
push
rorb
scas
mov
mov
sbb
mov
pop
nopl
push
ja,pt
sahf
mov
jbe
ret
cs
sub
ja
lcall
mov
add
idivl
push
mov
pop
jnp
sub
sbb
adc
sbb
adc
and
xlat
mov
cmpsb
xchg
iret
cmp
xor
gs
loopne
add
mov
inc
mov
xchg
cld
xchg
mov
adc
pop
mov
or
lahf
lods
mov
inc
ret
mov
out
insb
lock
jo
call
enter
jb
and
decb
lods
hlt
cmpsb
fidivs
fdiv
js
arpl
into
rorb
daa
mov
int
cltd
lcall
popa
jg
push
arpl
negb
popl
mov
xchg
inc
repz
lods
movsl
inc
pop
adc
subl
and
sbb
gs
cmp
xor
nop
dec
mov
add
paddq
ds
test
lret
push
push
imul
sbb
rcr
jbe
add
outsb
and
mov
mov
lcall
and
jl
adc
push
ds
and
adc
icebp
push
mov
sbb
cmc
cld
cmp
stos
inc
xchg
iret
pop
out
insb
mov
lds
in
and
sub
push
subb
mov
pop
push
mov
xlat
push
ja
add
xor
das
push
jnp
inc
adc
shr
jnp
or
mov
into
dec
cwtl
push
dec
push
and
mov
clc
push
adc
lahf
aaa
movsb
cwtl
fists
adc
dec
dec
pop
les
sbb
movsl
sbb
mov
adc
sahf
jmp
mov
xchg
fstpl
pusha
shlb
inc
dec
push
lea
dec
mov
int3
mov
lret
inc
add
pushf
sbb
xchg
call
jns
mov
lea
add
xchg
scas
test
push
pop
or
std
int
mov
out
push
inc
loopne
mov
sbb
mov
jle
es
hlt
xchg
sbb
and
pop
xchg
imul
ret
pop
and
push
mov
insb
loop
jl
mov
sub
mov
lret
mov
inc
cmc
stos
push
inc
xchg
lock
dec
push
enter
and
arpl
in
inc
push
xor
jmp
mov
push
cli
jo
add
mov
lea
jns
push
push
or
mov
lahf
push
or
pop
cwtl
jecxz
jge
xchg
daa
movsl
jns
stc
cmp
mov
std
sub
nop
loopne
je
inc
mov
adc
push
movsl
add
aaa
popf
sbb
xlat
enter
adc
inc
cmpsl
mov
lock
pop
hlt
adc
das
adc
inc
loopne
xchg
dec
dec
push
lds
push
xor
inc
jnp
mov
int3
sbb
je
and
cmpsb
jae
imul
xor
pop
fucomip
les
int3
dec
ja
in
xor
push
jb
fldcw
dec
sbb
movsl
add
iret
jg
cmp
fdecstp
loope
leave
mov
jae
sarb
int
in
dec
test
cltd
mov
and
dec
xchg
fwait
push
testl
fildll
gs
leave
or
dec
xor
js
sahf
and
mov
pop
inc
scas
lcall
mov
xchg
imul
mov
mov
rcl
jbe
dec
call
push
imul
mov
mov
and
add
fcoml
inc
adc
stos
adc
jl
pop
cs
push
cmp
push
pop
and
into
or
pop
mov
push
inc
into
mov
jbe
inc
ljmp
dec
outsl
jmp
cmp
adcl
rol
call
mov
xor
mov
ds
jp
mov
or
cmp
dec
leave
adc
sbb
add
jns
sbb
into
loope
fbld
push
pop
sub
roll
jecxz
cld
push
mov
jno
jne
inc
nop
lahf
scas
mov
andb
push
and
stos
cmp
fiaddl
rcrb
push
aaa
pop
xacquire
cmp
mov
cltd
push
or
repnz
mov
jle
sub
bound
jecxz
je
or
jo
shll
and
sub
test
int3
iret
dec
dec
cltd
dec
movsl
sbb
mov
insb
and
jl
jmp
xchg
cmp
push
or
pop
ficomps
lods
jbe
sbb
pusha
pop
pop
xchg
push
jnp
mov
cmp
pop
push
pop
gs
pop
out
movsb
add
pop
jns
inc
repnz
stc
hlt
out
mov
sub
sti
adc
ds
jl
inc
push
leave
adc
pop
popf
mov
ss
push
pop
or
push
push
mov
aam
mov
add
lret
push
mov
cwtl
andb
es
repz
xor
cmpsl
orl
mov
jb
inc
in
dec
mov
xchg
sbb
xchg
xlat
insb
mov
fsubr
roll
les
and
out
lods
js
jae
shrl
cmc
cmp
loop
stc
xor
sub
inc
fcmovnu
test
fs
jae
mov
jnp
xchg
push
sarl
aad
jecxz
aas
clc
jg
sub
xchg
shr
shll
xor
mov
sub
fistps
xor
mov
out
icebp
stc
adc
push
adc
mov
out
jecxz
inc
daa
ret
pop
and
xlat
sahf
sub
push
inc
lods
push
inc
mov
rorb
test
fmul
mov
push
xlat
movsl
dec
std
hlt
add
in
mov
sahf
mov
stc
jns
xchg
cmp
leave
mov
int
mov
notb
jns
jl
push
mov
xchg
je
dec
xchg
jae
outsl
xchg
sub
push
iret
mov
outsl
rclb
inc
jo
fucomi
add
push
dec
mov
nop
cmp
cmp
insb
push
push
or
mov
push
out
pusha
fwait
cmp
dec
mulb
xor
mov
xchg
pop
clc
lret
leave
rcrb
xor
add
xor
ret
cmp
add
fldt
xor
jno
xor
mov
dec
pop
test
lods
pop
js
and
arpl
adc
pop
scas
inc
xorl
js
or
mov
inc
enter
aaa
scas
fiadds
mov
mov
pop
pop
jbe
mov
in
xor
loopne
rolb
aaa
subl
ret
push
add
stc
or
xlat
mov
mov
add
pop
jge
inc
inc
rorl
mov
ljmp
mov
xchg
jg
pop
mov
popf
sti
push
mov
ret
lock
sarb
test
adc
sub
jmp
sub
shr
das
sbb
mov
adc
and
mov
ds
cltd
test
mov
rcll
negl
dec
icebp
loop
sbb
mov
roll
fisubl
addr16
addl
cmpsb
jecxz
inc
sub
fisubs
xor
mov
xor
inc
lret
fsubrl
inc
pop
mov
lock
inc
and
sub
ja
and
test
imul
sub
sub
adc
stos
fwait
pop
lcall
negb
pop
and
rcrb
xor
xchg
add
sti
adc
xchg
or
adc
jae
popf
push
and
sub
aam
mov
mov
add
push
push
add
seta
shrb
pop
mov
outsl
jo
pusha
push
mov
and
adc
add
lock
loopne
sarb
shrb
pop
mov
outsl
jo
pusha
push
mov
and
adc
add
lock
cmpxchg
shrb
pop
mov
outsl
jo
pusha
mov
fidivs
iret
adc
call
jp
pop
mov
nop
incl
nop
jo
lahf
and
inc
push
test
out
add
adc
in
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
cmpsl
xor
add
leave
xchg
cmp
mov
addr16
ja
inc
rcll
cmpsl
xor
add
jno
jno
push
xlat
xor
jae
pop
andl
push
shll
xchg
sbb
push
xlat
pop
daa
mov
xorb
movsbl
out
jge
push
hlt
je
cmpsw
mov
sub
in
in
in
iret
xchg
inc
sub
addr16
cs
mov
jb
sbb
add
int3
scas
and
mov
xchg
jle
xchg
bound
pop
lods
cmp
dec
and
pop
mov
bound
sbb
mov
mov
push
pop
and
xchg
test
outsl
mov
icebp
out
push
push
out
out
cmp
daa
pop
mov
or
int
fs
cs
rcrl
ret
fsubrp
out
scas
jne
mov
adc
pop
sub
dec
lret
pop
pop
imul
inc
pop
into
push
shr
mov
sti
les
push
pop
adc
pop
lret
ljmp
jle
fnstenv
inc
sarl
stc
es
xchg
xchg
add
jno
popa
push
xlat
pop
daa
mov
mov
addr16
push
shl
ficoms
je
mov
add
fidivs
mov
add
lods
movsb
pop
lds
fwait
das
and
xor
addl
and
xor
xor
and
jne
inc
out
mull
push
xlat
inc
daa
mov
mov
addr16
ja
inc
rcll
cmpsl
xor
add
jno
popa
push
xlat
inc
daa
mov
mov
addr16
ja
inc
rcll
cmpsl
xor
xor
mov
cmp
lahf
enter
inc
pop
xchg
mov
out
add
and
xor
push
cmp
mov
pushf
xor
test
leave
mov
aas
shrb
hlt
mov
dec
cs
cmpsl
andb
xor
mov
xchg
sar
inc
in
jb
sahf
push
loop
adc
pop
jmp
cmp
fisubrl
cltd
mov
pop
add
fsubrl
cli
mov
ret
fbstp
jo
aaa
adcl
repz
dec
adc
push
nop
xchg
dec
mov
mov
notb
nop
sahf
daa
inc
test
mov
ljmp
sub
loope
sti
loope
in
adc
jecxz
inc
or
imulb
cmpsb
or
sub
hlt
pusha
add
inc
popa
ss
sub
inc
imul
fnstsw
or
cli
xor
in
insl
test
sbb
xchg
cwtl
lcall
or
gs
mov
outsb
and
ja
out
notb
mulb
pop
dec
sub
or
adc
cmp
mov
push
mov
pop
pop
mov
cmp
add
inc
pushf
aaa
push
adcb
aad
inc
addr16
xor
jmp
ret
jno
sub
xchg
jns
jmp
cmc
and
sti
in
data16
ds
cmp
data16
mov
mov
cmpsb
das
test
xchg
cmc
mov
sbb
movsb
subps
dec
jg
jl
and
lret
pop
mov
push
sbbb
mov
cli
jne
in
imul
in
sti
jae
jge
mov
cmc
pop
xchg
je,pn
mov
lcall
test
mov
sbb
sbb
movsb
shl
mov
imul
arpl
dec
pop
mov
adc
cmc
adc
lock
jmp
ficompl
cmp
fiaddl
or
lods
stos
cmp
sub
iret
push
sub
or
mov
movsl
mov
pop
imul
arpl
sti
je
mov
leave
pop
outsb
leave
fwait
sbb
pop
lcall
fldcw
and
mov
fsubrs
stc
int3
mov
inc
loop
aaa
repz
inc
xchg
test
rcll
movsb
push
movb
fsubrl
cmp
xor
repz
je
xor
bound
cwtl
cltd
roll
stos
imul
jbe
mov
jmp
ja
sbb
icebp
scas
repz
mov
fsubs
adcl
jg
dec
out
cli
xchg
in
in
add
and
mov
jg
jae
push
enter
xor
repz
mov
pop
fsubrs
out
into
and
push
fcmovbe
jmp
lock
pop
add
mov
out
adc
gs
push
mov
xchg
mov
dec
lock
lahf
dec
pop
adc
sub
lods
arpl
xor
cmpsl
add
xchg
xchg
xor
pushf
shlb
pop
incb
cmpb
xadd
sbb
sub
pop
pop
sbb
hlt
out
jle
mov
cld
lds
xchg
lahf
add
adc
push
adc
push
dec
inc
adc
jbe
repz
or
xor
mov
lret
mov
push
sub
inc
mov
sub
mov
ret
cmpsl
inc
cmc
pop
stos
mov
addl
imulb
hlt
mov
lea
into
xchg
xchg
push
dec
fmuls
dec
not
dec
or
push
test
and
mov
gs
xor
cmp
cmp
shlb
rcrl
jmp
lahf
aam
sbb
jb
sbbb
ja
psubd
xchg
dec
out
mov
popa
stos
in
mov
test
cmpsb
fwait
inc
repnz
ds
shr
jo
adc
sub
cmc
cmp
xor
nop
repnz
mov
pop
and
push
push
lcall
in
adc
pop
insb
adc
sarl
mov
outsl
mov
gs
sub
adc
xchg
shr
aas
push
pop
mov
rcrb
lods
cmpsb
xor
pushf
mov
test
and
cwtl
adc
inc
in
xchg
pop
fcoml
push
in
mov
xor
push
xchg
add
test
push
iret
xchg
cmc
clc
bound
sbb
adc
loop
or
push
call
mov
dec
mov
push
pop
xchg
add
xchg
negl
inc
out
inc
cmpsb
sub
pop
bound
mov
pop
jne
shrb
insb
aaa
aad
dec
sbb
ljmp
jle
adc
imul
scas
cld
mov
mov
in
les
add
dec
arpl
fwait
adc
push
sbb
mov
inc
mov
mov
mov
and
loop
dec
and
in
push
repnz
mov
in
roll
mov
outsl
sti
ds
aad
mov
cmp
pop
fnstsw
lods
scas
ss
sub
dec
dec
xor
add
push
data16
and
push
cmp
sbb
cs
fmulp
mov
int
loopne
fwait
lods
xchg
fucomip
fcomps
in
mov
xchg
out
in
push
mov
sbb
adc
inc
lret
or
and
loopne
sbb
sub
add
inc
cmpsb
repz
iret
push
push
mov
test
jbe
jno
sub
or
fwait
inc
cmp
pop
adc
pop
inc
insb
push
jo
xchg
mov
stc
add
outsb
sub
jmp
mov
and
pop
pop
fcmovb
movsb
cmp
inc
mov
insb
jns
mov
in
rcll
sbb
pop
mov
ds
pop
pop
stos
cltd
xchg
inc
jne
pusha
sbb
push
cmpsb
iret
rolb
icebp
fisttps
mov
out
inc
push
inc
cs
sahf
and
leave
addr16
push
in
mov
sbb
inc
sub
xchg
fcoms
out
call
test
shll
loop
cli
lret
push
enter
xor
scas
in
dec
xor
or
rolb
ds
das
jne
lret
icebp
lods
rorl
stos
leave
aas
sub
cmp
ret
shl
std
adc
or
pop
dec
xor
cmp
xchg
push
lcall
and
cmp
fisubrl
daa
and
in
pop
jo
aam
jp
sbb
cltd
int
jbe
fucomi
movsl
cmpsl
jle
xor
xor
cmpsb
loop
push
add
inc
sub
outsb
xchg
sbb
jne
cmp
fs
sbbb
out
cmp
aas
push
daa
xor
jmp
mov
pop
bound
mov
scas
or
dec
push
lock
sbb
mov
dec
das
xchg
inc
out
pushf
jno
sbb
sub
xchg
sahf
inc
into
fiadds
shlb
idivl
imul
sbb
or
pop
sti
out
inc
jle
mov
je
add
mov
iret
ljmp
or
mov
push
je
inc
add
aaa
jnp
push
xchg
mov
cmpl
inc
mov
aaa
dec
roll
out
sbb
out
or
add
outsl
jmp
gs
inc
mov
mov
sbb
inc
mov
push
cmp
inc
shl
daa
sub
mov
push
call
jnp
inc
mov
push
idivl
loop
imul
xchg
cmp
outsl
mov
lahf
loope
inc
add
mov
mov
loope
add
jmp
add
cmp
cmp
pop
pop
cmp
sub
xlat
das
out
cmp
or
mov
pop
push
jle
lret
mov
sub
clc
xchg
daa
mov
andl
xchg
aas
ja
xchg
aam
add
dec
bnd
mov
test
repz
mov
xchg
push
hlt
pop
inc
dec
sub
hlt
dec
ret
jle
mov
les
in
mov
mov
stc
push
mov
sub
cwtl
pusha
jb
fcomip
out
jns
test
push
add
cs
pop
or
sub
lds
nop
jmp
shrl
jnp
insl
jl
fiadds
mov
outsb
cld
lahf
adc
mov
fsubl
daa
jg
mov
into
testl
xchg
push
lods
push
lret
fldt
xchg
push
shll
dec
mov
movsl
push
repz
mov
lret
inc
pop
ja
push
sub
inc
adc
cmp
ljmp
adc
sbb
pop
xor
pop
jp
push
cmp
in
pop
xchg
lea
insl
outsb
test
sbb
adc
jecxz
add
cmp
sub
popf
int
pop
je
enter
jl
fwait
cmp
popf
or
fwait
subb
rcrl
xor
or
inc
xchg
pop
stc
mov
or
icebp
mov
mov
std
mov
jb
sbb
leave
popf
in
addl
icebp
outsl
and
and
xor
or
shl
jg
pop
sbb
push
icebp
mov
adc
and
sti
or
fstl
jno
pop
out
mov
xchg
enter
test
or
fs
sub
lret
in
loopne
or
arpl
out
mov
inc
imul
fsubrp
lods
iret
mov
push
sarb
xchg
lret
mov
push
sbb
mov
mov
pop
jnp
stc
dec
test
jecxz
mov
pop
call
out
repz
mov
xor
lret
lods
cltd
xchg
inc
xchg
xchg
popa
jge
ffree
dec
inc
mov
mov
lret
pop
pop
loope
arpl
sbb
rclb
daa
sub
js
or
iret
push
popf
cmp
xchg
push
imul
adc
push
mov
push
mov
or
lods
or
xchg
push
frstor
dec
repnz
xchg
xorl
pop
rorl
or
inc
mov
dec
adc
cwtl
and
out
mov
xchg
pop
data16
pop
pop
fwait
inc
jo
mov
insl
inc
jecxz
mov
xor
pushf
rolb
inc
stos
call
dec
xchg
mov
popa
fnstenv
leave
int3
es
push
inc
jnp
out
rcrb
jae
adcb
sub
lcall
icebp
insl
cmpsb
dec
paddw
jb
mov
cltd
mov
hlt
dec
xor
stc
les
test
test
pop
int3
jo
add
jecxz
imul
mov
js
popf
rcrb
xchg
push
mov
cs
push
adc
xchg
xor
loop
hlt
cmp
sti
push
imul
mov
pop
cltd
cwtl
add
fsubrs
insb
mov
inc
sti
sub
pop
movsl
cwtl
pop
es
mov
jl
fwait
push
movsl
scas
in
leave
inc
or
jp
jmp
iret
jg
out
sarl
push
mov
jle
push
ret
cmp
inc
clc
test
mov
repz
mov
decl
lods
xchg
adc
sub
sub
stos
push
outsb
sub
mov
gs
ja
adc
push
shl
fimuls
dec
xor
mov
push
cwtl
pop
aad
or
mov
mov
sub
insl
mov
mov
push
pop
and
leave
pushf
test
mov
movsl
nop
jle
in
pop
out
xchg
jecxz
les
mov
xlat
adc
cmp
fnop
mov
xchg
std
test
in
push
cmp
pop
pop
lock
push
xor
inc
popf
divl
and
pop
mov
and
js
jecxz
popf
aas
bound
xchg
fidivs
mov
test
shrl
movl
adc
jg
icebp
cmp
add
fistps
stc
mov
or
cmpl
and
cmp
mov
push
sub
mov
out
popf
mov
sub
in
stos
add
aas
jge
and
cmp
ror
cmovns
add
push
push
sub
int
lahf
into
cmp
push
lock
mov
inc
dec
js
cmp
push
mov
inc
inc
subb
das
dec
outsl
std
pusha
shlb
jp
fwait
insb
orb
mov
gs
xor
aas
stos
pop
adc
es
push
mov
pop
cld
rorl
lahf
inc
mov
mov
inc
push
pop
call
iret
xlat
lret
sahf
orb
lret
push
fnstcw
jecxz
cltd
adc
ret
mov
cmp
add
cs
es
lea
cmp
ja
pusha
into
loop
imul
adc
lods
adc
sbb
jl
dec
pushf
lds
sub
das
shlb
out
dec
pop
xchg
cld
outsl
leave
jecxz
mov
std
imul
push
js
xchg
gs
test
adc
push
int
push
mov
pop
repz
push
cmp
hlt
pop
jmp
sub
mov
cmp
jne
movsb
nop
incw
jne
ja
testb
fcoml
ljmp
ds
lds
pusha
jno
jecxz
mov
jb,pt
les
lods
leave
push
out
notb
mov
push
pop
fisubs
xor
and
bound
fldl
je
std
cmp
and
push
rorb
add
add
mov
jnp
cmp
jbe
cltd
out
les
mov
cwtl
cmp
xlat
mov
sub
stos
mov
out
js
sbb
loopne
cmp
icebp
popa
jg
or
sbb
xor
cmp
cmp
les
sbb
add
repz
or
push
push
push
mov
and
push
in
dec
push
inc
xor
cld
cmp
cmpsb
test
lods
lea
mov
push
adc
addr16
mov
jmp
ds
data16
mov
test
mov
fsubr
mov
push
xor
adc
xor
repz
sub
push
stc
push
mov
outsb
test
nop
shrl
jg
xchg
ror
sub
fdivs
pcmpeqw
shlb
adc
loope
andl
gs
jne
clc
movsl
fs
int3
mov
mov
dec
pop
mov
mov
sti
fiadds
gs
jge
xchg
les
out
test
mov
lcall
movsb
mov
fbstp
arpl
sbb
push
and
push
mov
dec
cltd
cmp
clc
cli
mov
fdiv
xchg
das
in
jl
sub
mov
iret
and
dec
aas
mov
mov
adc
xchg
stc
mov
lock
push
sub
mov
gs
add
mov
testl
adc
jge
imul
fcoms
push
ja
mov
out
cwtl
lcall
dec
inc
or
js
mov
jl
lods
popf
push
fcoms
call
outsb
sbb
dec
dec
aas
xor
in
inc
sarb
push
mov
insl
xchg
mov
clc
xchg
push
shrl
lods
add
loopne
adc
daa
imul
dec
repz
mov
jbe
xlat
cmp
push
cli
in
pop
mov
out
xor
or
dec
or
pusha
dec
add
ljmp
lds
es
inc
mov
fwait
stos
mov
lcall
mov
lods
mov
jecxz
ffree
or
out
adc
movsb
xor
or
pop
mov
dec
pop
or
cmp
sbb
mov
jg
ss
mov
jo
inc
mov
cmp
in
xor
loop
jecxz
mov
adc
lret
pop
sub
test
in
sbb
test
fwait
adc
cmp
adc
mov
xchg
add
ss
or
fdivrs
das
arpl
jnp
jl
decl
pop
jnp
dec
jle
and
test
jg
in
outsb
cld
jo
mov
loopne
adc
push
jns
hlt
cwtl
cli
cli
sbb
movsb
daa
push
mov
pushf
fisttpll
int
aam
in
sbb
xor
cmp
push
inc
sub
repnz
inc
mov
ret
adcb
push
xor
jo
shlb
and
dec
outsl
xchg
out
xchg
fistl
ret
push
call
xor
jge
cmp
inc
jmp
and
inc
mov
movsb
rol
mov
jmp
out
push
inc
lcall
jb,pt
aas
cmp
xchg
mov
sub
mov
xorb
adc
dec
mov
add
arpl
mov
mov
shl
dec
call
fcoms
and
aaa
inc
outsl
mov
and
rcl
xchg
pop
pop
inc
or
fnstsw
and
call
mov
pop
addr16
xchg
repnz
mov
sbb
pop
scas
pop
daa
in
mov
addr16
inc
fisttpl
xchg
xchg
sub
mov
imul
jp
or
shll
mov
shlb
or
jge
dec
xlat
xchg
and
xchg
int
popa
cmpsb
sbb
xchg
insb
cmp
hlt
xorb
fstps
push
push
sub
and
xchg
sub
adc
cmpsb
inc
mov
test
push
fmul
xchg
pushf
mov
adc
int
mov
xor
enter
lret
xchg
inc
mov
or
dec
inc
or
aaa
fldcw
mov
pop
sarb
scas
loopne
mov
in
push
xor
adc
aad
fsubl
jnp
loope
loop
xchg
ljmp
imul
es
mov
cmp
nop
mov
sub
mov
adc
clc
xlat
cmp
pop
sub
mov
jnp
and
movsl
inc
es
cmp
pop
scas
and
and
push
addr16
enter
mov
mov
ja
mov
push
mov
dec
movsl
xchg
jnp
push
orl
push
lahf
inc
jno
stos
adc
sbb
pusha
jae
lods
and
sub
dec
mov
loopne
test
sbb
sub
lret
dec
movsb
adc
es
jb
sub
inc
dec
sub
loopne
dec
inc
stos
data16
scas
movsb
adc
sbbl
sbb
jl
dec
aas
aam
dec
fst
mov
xchg
cmpsb
out
lods
push
push
mov
popa
fnstcw
out
arpl
pop
inc
sarb
mov
xchg
and
stos
js
in
sti
dec
out
ljmp
mov
push
clc
shlb
xchg
out
iret
xor
inc
sub
iret
fstpt
lahf
addb
sbb
push
mov
fistps
jge
addb
insl
mov
or
lret
int
ffree
nop
dec
mov
jbe
push
outsl
int
jo
stc
into
mov
and
mov
xchg
inc
fs
inc
xchg
mov
push
xchg
arpl
cmp
xchg
mov
add
ds
dec
ss
fs
std
ljmp
clc
popa
aaa
ret
xlat
jmp
xor
jge
or
into
xchg
filds
jmp
fildl
aas
das
cli
call
aad
data16
xor
pop
dec
push
sbb
fidivs
inc
ffree
jecxz
loope
cld
hlt
repz
out
popf
inc
nop
ds
jge
adc
xor
jmp
inc
sub
icebp
dec
fld
enter
in
lret
dec
mov
lods
mov
mov
jmp
fadd
clc
cs
out
add
cmp
pop
push
jb
mov
add
mov
stc
add
test
mov
bound
mov
xchg
mov
aam
sub
and
mov
pop
iret
icebp
repz
xlat
js,pn
gs
add
rclb
lea
jno
xchg
push
and
cmp
insl
mov
je
insb
sarb
lds
outsl
lock
fadds
les
jl
mov
mov
xlat
xchg
std
add
lahf
jns
mov
add
sti
sarl
mov
dec
sub
test
push
rol
test
jle
dec
std
addr16
jo
psubw
cmp
insl
shll
lret
jmp
fiaddl
test
out
inc
rcrb
and
bound
je
cld
les
pop
sub
mov
jbe
sbb
push
bound
out
jae
lcall
daa
cmp
pushl
fnsave
stos
mov
pop
mov
jne
sub
loop
movd
cli
xchg
fisubrs
fmull
inc
cmc
mov
xor
push
xchg
mov
xor
icebp
enter
ss
ds
inc
push
in
pop
lcall
bound
pop
loope
jle
imul
aad
gs
aaa
mov
loop
dec
pop
outsl
mov
hlt
mov
jo
movsb
push
push
mov
test
mov
loop
leave
imul
shl
mov
inc
ret
fidivrl
fwait
lock
xchg
rolb
popf
jl
cld
push
push
or
cld
insb
mov
fiaddl
out
push
mov
hlt
loop
push
rolb
xor
ljmp
and
imul
aam
xchg
sbb
jmp
push
aad
push
int3
mov
push
and
sahf
xor
inc
outsl
js
xor
rorl
cli
xlat
mov
pop
push
adc
jo
and
xchg
add
jno
popa
push
xlat
inc
daa
mov
mov
addr16
ja
inc
rcll
cmpsl
xor
add
jno
popa
push
xlat
inc
daa
mov
mov
addr16
ja
inc
rcll
cmpsl
xor
add
jno
popa
push
xlat
inc
daa
mov
mov
addr16
ja
inc
aad
lds
adc
mull
push
xlat
andl
xchg
pop
notb
jns
sahf
mov
test
rorb
mov
or
aam
les
xor
inc
mov
das
cmpb
push
pop
mov
sarb
loopne
fisubrs
sub
push
iret
pusha
fbstp
es
push
outsl
lock
dec
ljmp
jecxz
lahf
inc
out
adc
adc
les
psllq
cmpsb
iret
hlt
sub
xor
mov
push
bound
stos
cwtl
mov
cmp
mov
push
aam
dec
nop
aad
pop
mov
mov
in
jo
pusha
pusha
adc
sets
push
cmp
or
push
in
or
les
add
and
mov
mov
mov
cmpb
movsb
pop
mov
aam
loopne
and
and
cmc
xor
push
mov
or
push
fildll
pop
loopne
ss
int3
and
or
and
inc
or
loop
mov
xor
std
sarb
outsl
int3
aad
pusha
lods
lea
ret
icebp
clc
push
dec
inc
jo
mov
mov
mov
jecxz
aas
mov
aam
mov
sarb
loopne
bound
and
mov
outsb
orb
int3
jbe
outsl
gs
mov
inc
fisubl
test
push
out
pop
aas
lods
adc
sbb
pop
push
jae
outsl
xchg
cmp
lret
lea
add
setno
add
aas
jo
int3
jae
and
lock
add
xor
inc
call
pusha
fbstp
cmpb
push
pop
mov
sarb
loopne
lock
add
xor
inc
call
pusha
fbstp
sbbb
xchg
fnsave
pop
xchg
cmpsl
jge
movsb
dec
test
fmuls
push
mov
movsb
imul
movsb
andl
or
enter
push
cli
jnp
dec
adc
add
push
adc
int
leave
cltd
out
lret
aaa
clc
inc
or
ds
popf
iret
aad
fisttps
fwait
dec
mov
sub
lea
xor
test
mov
iret
shrb
out
iret
pop
repnz
into
xor
xor
cmp
or
or
pop
js
shrl
push
repnz
scas
mov
test
jg
pushl
fiadds
cmp
mov
mov
cmp
xchg
pop
pop
cli
repnz
enter
mov
nop
mov
push
jne
aad
ja
xchg
mull
sti
xchg
test
jecxz
jge
sub
hlt
js
xchg
hlt
mov
pop
mov
nop
mov
and
cmc
jl
mov
jbe
xchg
int3
out
jns
sub
jecxz
fistpll
add
jge
dec
movsl
scas
nop
add
jae
mov
pop
and
lcall
pusha
xchg
icebp
push
mov
fwait
sahf
add
lods
push
nop
imul
inc
adc
inc
push
jecxz
ret
aam
negb
jno
xchg
fnstcw
sbb
adc
dec
and
cmp
push
jb
pop
jns
xchg
leave
xchg
pop
rorl
movsl
lods
cmpsb
call
ret
mov
and
jnp
push
stos
mov
or
insb
into
insb
cmp
cmp
inc
imul
push
mov
push
and
daa
jb
lods
adc
pop
scas
and
mov
lret
push
cmpsl
or
movsb
mov
jl
or
pop
inc
shll
pop
mov
dec
leave
cmp
cmp
inc
dec
push
int3
es
and
sti
sub
inc
sti
sbb
push
xor
sub
mov
xor
jo
adc
imul
sbb
out
leave
imul
fcomi
and
xlat
mov
shrl
outsl
and
cmp
push
rorb
fcoml
icebp
mov
mov
xchg
mov
call
hlt
rcr
shll
scas
in
das
sub
mov
and
xor
das
mov
in
sbbl
mov
movsb
mov
mov
and
mov
int
and
xchg
dec
dec
fiadds
mov
rorl
jmp
sub
adc
sub
cmp
push
mov
mov
mov
mov
movsl
adc
iret
test
insl
incb
ds
fmuls
scas
xchg
rcrl
outsl
addb
xchg
clc
mov
out
push
lret
add
dec
inc
mov
lret
mov
iret
enter
mov
dec
dec
mov
js
mov
push
stos
dec
dec
andb
sub
or
shld
jb
lret
fnsave
add
sbb
aas
out
shrl
insl
push
adc
lods
mov
dec
cmp
mov
loopne
iret
insl
out
out
sbb
addr16
cld
jg
fisubrl
xchg
arpl
and
inc
out
pop
add
jnp
stc
xchg
cmp
aaa
sub
and
cs
cmp
pop
leave
lds
iret
in
out
sub
rcr
add
xor
inc
into
xchg
adc
lret
adc
sub
pop
addr16
lds
fildl
aaa
cltd
out
adc
xor
push
shl
sbb
dec
and
mov
addl
push
cvttps2pi
mov
adc
movsb
aaa
xchg
mov
or
fisubl
ss
dec
loope
adcl
mov
and
in
stc
daa
xlat
into
cmp
out
es
xor
cmpsl
fists
sub
or
cltd
mov
popa
xor
dec
into
sub
lods
adc
ret
adc
mov
jae
lahf
lock
xor
mov
lret
mov
jbe
sbb
out
cltd
out
push
repnz
pextrw
push
mov
mov
sbb
jl
adc
ja
pop
jle
xchg
or
mov
mov
ret
xchg
rorb
movsl
xchg
dec
or
pop
ja
loopne
push
adc
dec
stc
push
mov
add
lock
or
push
fs
jge
dec
add
js
add
push
fsubr
adcb
xlat
inc
mov
mov
mov
push
jnp
pop
or
mov
add
rclb
pusha
pop
pop
fstp
xor
mov
in
testl
fwait
test
pop
dec
repnz
mov
hlt
adc
xor
xchg
xchg
xor
pop
ljmp
jnp
pop
xor
aad
add
ljmp
or
outsl
arpl
xchg
lods
dec
outsb
jae
cmp
dec
addr16
cmc
xchg
push
out
dec
push
into
loopne
icebp
inc
insl
xchg
and
test
in
loopne
pop
imul
sahf
xor
inc
jg
mov
xor
or
dec
sbb
iret
out
jp
jg
jge
or
cli
adc
mov
sub
mov
or
scas
mov
cld
pop
pop
lcall
jle
dec
std
fsubs
push
cmpsl
stos
xchg
cltd
in
gs
mov
loopne
mov
in
xchg
jns
mov
int3
pusha
inc
aad
shrb
push
xsave
mov
imul
dec
ret
mov
jge
cmc
repnz
ljmp
cltd
aaa
add
cmp
cli
neg
push
gs
gs
dec
imul
cltd
imul
das
xor
xchg
addr16
jbe
or
pop
je
aam
mov
and
mov
cwtl
int3
sbb
xchg
pop
push
sahf
mull
subl
je
js
dec
adc
and
cmp
je
push
repz
jmp
mov
jne
sub
hlt
mov
popf
insl
and
lea
js
popf
clc
and
mov
rcr
inc
aas
stc
pop
jge
lret
jl
sub
sbb
push
repz
fdivr
cltd
xchg
and
push
stc
data16
inc
cmp
shr
push
xor
push
insb
scas
dec
fcmovnb
xor
subb
push
dec
push
subb
or
cmp
xchg
mov
dec
adc
mov
movsl
add
push
sbb
or
cltd
jmp
lock
icebp
xor
andl
and
pop
lods
xchg
mov
test
rcll
sub
fs
test
cmp
leave
cs
fsubrl
out
call
loop
push
jns
mov
scas
push
xor
ficoms
jge
xchg
sbb
push
mov
repz
fs
into
addb
inc
in
sub
mov
in
jbe
in
in
iret
sub
fwait
stc
aad
inc
test
gs
jge
fimull
ljmp
fs
dec
add
jmp
sbbl
repnz
lds
dec
push
aad
and
jl
add
shrb
fs
lods
push
stos
shl
jle
cmc
cli
daa
push
fnstenv
enter
rolb
clc
cwtl
fs
fs
mov
dec
jb
and
pushf
in
push
cmpsl
jmp
pop
sahf
add
popf
and
mov
loope
sahf
lods
leave
lahf
xor
jmp
mov
pop
jp
mov
icebp
out
in
loope
mov
movsl
push
cmp
arpl
push
out
jno
mov
adc
xor
sub
or
stos
clc
std
popf
sbb
into
ja
rcr
cwtl
push
or
pop
icebp
cmpsl
inc
jae
pop
jbe
das
test
mov
into
inc
cli
dec
mov
push
ja
pusha
dec
fiaddl
leave
xlat
pop
cmp
in
aad
and
cmp
lea
movsb
push
sub
lock
sbb
cld
rcr
push
or
mov
inc
xor
mov
sbb
aad
sbb
dec
sbb
cmpsb
imul
push
xor
sbb
ljmp
out
xchg
or
cmp
sbb
insb
dec
jecxz
test
pop
ret
data16
or
adc
pop
jbe
push
clc
pop
in
jno
sti
cmovns
or
adc
rcrb
int3
pop
pop
mov
dec
aad
hlt
loop
sbb
jmp
imul
cmc
adc
mov
sti
mov
aas
push
push
lods
push
daa
test
mov
pop
jp
dec
inc
pop
loopne
out
lcall
mov
inc
insb
xchg
mov
pop
xchg
push
xor
inc
ljmp
cmp
lea
mov
dec
xchg
pop
push
sub
jge
jb
fistpl
xchg
outsb
js
fstps
sub
mov
cmc
outsb
mov
cmp
nop
lcall
repnz
inc
stc
int3
mov
gs
lahf
add
into
lds
mov
xor
rcrl
into
shll
push
hlt
jnp
inc
xchg
popa
push
jmp
rorl
push
int
add
orl
or
je
cmp
aaa
jo
mov
cmpl
push
test
mov
and
inc
dec
imul
xor
lretw
enter
push
lret
fmul
cld
inc
mov
sbb
jmp
sub
sar
xchg
and
fldt
ds
repnz
mov
addr16
aad
pop
mov
nop
pop
mov
or
arpl
fsts
inc
jp
push
inc
popa
insl
pop
xchg
jne
lret
jb
repnz
insb
push
decl
popa
sahf
shl
insb
ss
pop
dec
pop
add
or
mov
out
fwait
xchg
lret
repz
mov
out
arpl
push
sahf
xchg
pop
icebp
mov
aam
push
pop
lock
ss
cmp
leave
pop
ljmp
repnz
in
inc
pop
fwait
pop
cmp
dec
add
push
icebp
cwtl
mov
outsb
cmp
test
add
push
push
add
add
pop
or
mov
dec
addr16
movsl
imul
out
xlat
icebp
or
clc
push
push
inc
repz
movsl
enter
sbb
xchg
xor
dec
sub
dec
cmp
insb
mov
fnstsw
adc
mov
dec
mov
push
inc
pop
movsl
cmp
imul
daa
jg
xor
pop
pusha
arpl
sti
js
jmp
jp
jns
aad
jne
shll
pop
adc
inc
aad
ret
inc
leave
inc
in
xchg
lock
addr16
hlt
mov
cmp
cmp
jecxz
cmp
lret
mov
das
leave
pop
lcall
loop
cltd
nop
cmp
push
xor
xchg
jmp
bound
dec
fnstenv
loop
xor
push
or
mov
ljmp
scas
mov
sti
sub
dec
outsl
lahf
ljmp
mov
rcrl
inc
inc
mov
inc
dec
rclb
sub
fs
andl
in
test
mov
stos
mov
cmp
inc
add
mov
mov
lods
push
jo
cmp
aad
push
and
xchg
dec
test
xorb
imul
pop
data16
inc
nop
negb
in
push
mov
inc
jnp
sub
ljmp
ret
inc
mov
jl
xchg
inc
sub
sbb
inc
ss
sub
xor
movsb
iret
lods
mov
les
into
sub
jg
shl
je
mov
dec
mov
pop
push
scas
push
nop
push
loope
fyl2xp1
adc
adc
sub
mov
sub
jle
xchg
mov
cmovne
push
lock
inc
cmc
xchg
push
lds
rorl
sub
add
sbb
fdivl
aad
je
clc
aad
mov
aam
clc
mov
inc
sti
pop
es
pop
and
sub
inc
sub
pop
imull
aam
push
fwait
mov
pop
mov
call
mov
sti
sbb
or
shll
jmp
cmp
inc
lock
adc
aas
test
push
sbb
dec
jmp
sbb
xchg
sub
pop
out
dec
call
daa
or
stos
fdivrl
outsb
dec
and
fcmovnu
stos
push
xchg
xchg
and
dec
dec
mov
xchg
mov
nop
mulb
push
mov
pop
stos
xchg
inc
imul
adc
notb
daa
cmc
xor
enter
pop
stc
aas
ret
outsl
ljmp
pop
stc
mov
scas
call
test
jne
xchg
gs
js
shrd
mov
in
mov
mov
test
lcall
movsl
or
push
push
pusha
lea
sub
repnz
jae
sti
nop
sbb
sub
negl
push
push
cltd
push
shll
add
sub
mov
lret
xor
xlat
xor
or
adc
push
push
fdivrl
sbb
mov
pop
testl
jae
fisttpl
mov
icebp
test
gs
sbb
push
add
jg
sbb
mov
sbb
mov
ss
leave
sbb
mov
push
mov
push
fstps
test
add
or
in
mov
aad
call
test
mov
xor
xlat
rcr
test
or
cmp
lahf
and
sbb
call
call
xchg
loopne
fnstenv
cmp
xchg
mov
mov
push
add
sbb
stc
int
lods
mov
aas
xor
mov
pop
dec
pop
sub
movsb
or
outsl
cmp
ja
push
daa
dec
clc
fistl
ss
xor
pop
sub
lret
ret
xchg
mov
pop
sub
aad
lea
push
test
mov
shl
outsl
clc
popa
xor
out
inc
test
outsb
lods
sbb
mov
sub
mov
std
loop
add
jge
push
xor
movups
and
cmp
mov
fisttps
push
push
pop
mov
add
mov
cmp
bound
push
cmp
movsb
pop
jp
xchg
mov
cmp
bound
or
test
push
lcall
dec
arpl
test
das
stc
xor
movsl
mov
je
xor
xlat
xor
sbb
cs
cmp
test
jno
repnz
pop
xlat
xor
sbb
xor
inc
fisubs
dec
add
out
and
data16
clc
sub
ss
push
sub
mov
mov
mov
cmp
cmp
and
xchg
jmp
xchg
faddl
lods
std
pop
ljmp
shrl
add
in
add
adc
mov
mov
dec
push
xchg
xlat
popf
add
repz
push
add
xchg
dec
pop
dec
aad
or
adc
mov
and
jno
loop
adc
rclb
dec
stos
rcr
leave
mov
or
mov
mov
je
push
fadds
and
xor
in
xor
lods
add
stc
push
add
pop
inc
or
leave
mov
out
sbb
es
mov
hlt
or
aad
xor
pop
xor
mov
pop
and
inc
call
pushf
repnz
inc
out
jmp
test
shl
jl
add
nop
mov
xor
dec
fwait
jp
push
add
inc
jle
jbe
mov
into
mov
add
pop
and
dec
subb
xor
dec
push
movsb
std
pop
jae
xchg
test
xor
mov
xor
out
je
lock
inc
or
loopne
dec
pop
sub
je
mov
mov
leave
or
test
pop
mov
xchg
xchg
inc
popa
aaa
rol
pop
pushf
lret
loop
mov
lods
mov
cmp
xor
cmp
add
inc
mov
cmpsl
mov
lcall
fildll
cmc
pop
add
push
test
dec
loope
cmpsb
ja
lea
ss
movsl
add
ljmp
outsb
clc
fmuls
push
sti
mov
rcl
imul
dec
mov
dec
pop
mov
xchg
inc
aas
ror
pop
jo
mov
mov
loop
fildll
inc
fstps
pop
and
ja
fstpt
sbb
pop
pushl
test
xchg
cli
cmp
lock
cmp
ljmp
jns
cld
push
or
jno
jae
mov
cwtl
daa
sbb
aad
jbe
and
lahf
mov
js
stos
pop
adc
xchg
xchg
xor
xchg
jl
je
push
gs
fnstcw
sbb
or
sti
faddl
push
sub
loop
pop
mov
mov
mov
ret
lds
xchg
sti
imul
mov
and
push
sub
movsl
dec
pop
dec
nop
dec
sub
in
stos
xchg
inc
or
xchg
mov
or
add
mov
enter
cmpsl
xchg
push
popf
ss
es
sub
pop
scas
ja
aad
lds
inc
lahf
lahf
jg
loopne
cld
das
mov
pusha
pop
ljmp
insb
into
rcr
lret
addb
inc
or
cmp
or
out
pop
rorl
enter
push
roll
sub
ja
jns
dec
scas
call
jae
loop
jg
pop
and
or
dec
into
mov
mov
push
adc
outsl
push
in
mov
add
bound
sub
push
hlt
inc
addb
pusha
out
xchg
pop
inc
mov
lcall
dec
fistpl
dec
mov
mov
call
fld
and
lods
cmc
adc
pushf
adc
mov
ss
or
pusha
add
jo
aaa
addr16
imul
test
pop
mov
in
and
movsl
pushf
movb
cwtl
dec
xor
aaa
xchg
fmull
decb
jmp
mov
push
out
mov
sti
fistps
xchg
arpl
sti
cld
loope
sbb
jl
or
mov
popf
inc
ja
lods
ret
push
cmpsl
jns
test
int3
mov
sub
xor
sub
dec
jb
fstpt
movsb
fisubrs
sti
pop
sbb
jns
inc
xchg
test
nop
out
mov
std
loop
mov
cmpsb
lahf
cmp
popf
outsb
aad
stc
enter
mov
imul
int
xor
sti
aaa
loop,pt
and
rorb
ds
out
pop
push
add
and
or
xchg
or
cmp
in
test
cmp
mov
xchg
pop
or
cs
lds
or
dec
aaa
dec
push
inc
mov
or
sub
inc
inc
and
mov
scas
std
shlb
popf
sub
loope
sub
mov
push
and
jbe
mov
jl
out
jbe
fmuls
add
push
xchg
insl
inc
daa
jl
and
push
push
mov
cmp
mov
out
jne
aam
ss
dec
das
out
sub
into
dec
add
sbb
enter
push
jbe
movsb
xchg
adc
outsl
pop
jmp
push
sarl
ret
and
push
add
push
mov
adc
cmp
ret
mov
cmpsb
or
jp
push
cmp
fidivrl
inc
mov
pop
nop
movsl
lock
xor
sub
gs
mov
sbb
psllw
out
cmp
mov
in
push
daa
pop
mov
sbb
in
js
insb
jp
sbb
mov
mov
rorb
jnp
in
adc
lcall
in
xorb
movsl
aad
in
sub
cltd
dec
xor
imul
inc
xor
ds
sbb
sarb
pop
or
fmuls
jne
push
adc
adc
xlat
arpl
mov
jg
test
stos
aaa
xor
jnp
push
or
mov
sarb
inc
test
mov
test
aas
ror
cmc
addl
in
adc
popa
adc
mov
mov
lds
or
mov
push
fildll
xchg
ret
mov
add
sbbb
out
dec
pop
repnz
bound
repz
xchg
mov
xor
insb
aad
call
scas
xor
sbb
and
push
jecxz
pusha
ret
lds
push
stos
xor
aad
and
int
mov
cltd
pop
dec
mov
into
jns
jnp
jp
inc
imul
push
das
inc
xchg
dec
movsb
push
jp
pop
jno
aam
int3
enter
and
xchg
icebp
push
inc
dec
lds
test
in
out
xor
adc
dec
jecxz
and
xorl
push
xor
cltd
enter
and
ljmp
sub
shll
xchg
sbb
push
icebp
push
je
loopne
xchg
pop
es
shll
dec
mov
out
fsubrs
out
test
xchg
jb
test
sbb
mov
ljmpw
jns
rol
jbe
cmp
data16
and
icebp
and
aad
lods
mov
es
and
and
movsb
mov
and
jbe
ss
and
sub
outsl
sarb
loopne
lock
add
xor
inc
call
pusha
fbstp
cmpb
push
pop
mov
sarb
loopne
lock
add
xor
inc
call
pusha
fbstp
test
mov
sarb
in
lock
add
cmp
inc
call
imul
je
inc
pop
lock
sarb
pusha
pop
xor
and
sub
shlb
push
loopne
cltd
cmp
add
push
clc
inc
cmpsb
jo
pusha
xchg
testb
xor
and
shlb
shlb
push
loopne
nop
jbe
data16
mov
cmpsb
jo
pusha
xchg
lcall
shlb
shlb
push
loopne
nop
jbe
data16
mov
test
in
out
mov
dec
mov
inc
mov
push
lahf
push
xlat
arpl
sub
cwtl
push
imul
pop
addr16
popf
mov
neg
pop
addr16
cmp
aas
scas
cmovp
jecxz
pop
dec
dec
in
ret
mov
add
data16
jno
das
ss
sub
jle
out
movsl
call
out
loopne
sub
in
adc
mov
mov
and
jae
add
ds
clc
aad
addr16
dec
int
xchg
adc
sbb
fsubrl
jbe
inc
sbb
out
dec
cmp
push
dec
dec
ljmp
and
and
in
mov
stos
lret
inc
mov
pop
mov
pop
cmpsl
add
xchg
hlt
notb
not
and
adc
shlb
push
loopne
nop
jbe
data16
mov
cmpsb
jo
pusha
xchg
testb
xor
and
mov
cmpsb
push
cmc
adc
pandn
and
and
and
repnz
mov
adcl
mov
jae
push
cmc
sbb
sub
aas
in
and
daa
fisttps
cwtl
gs
orb
jb
outsb
mov
test
pop
andb
mov
cmpsb
jo
pusha
xchg
testb
xor
and
shlb
shlb
push
loopne
nop
jbe
data16
mov
cmpsb
jo
pusha
xchg
testb
xor
and
shlb
mov
les
jb
loopne
aas
add
pop
xchg
cmp
cmp
xor
xchg
test
ficomps
adc
test
and
adc
pop
inc
ret
jo
xor
int
mov
dec
cwtl
ss
stos
push
add
js
pop
orb
mov
xlat
daa
cli
arpl
scas
rorb
ljmp
stc
mov
outsb
fdivr
jecxz
fimull
and
bound
repz
jb
inc
inc
clc
xor
pop
lea
inc
or
xor
mov
dec
inc
lret
ds
push
mov
mov
mov
aas
add
fidivs
fnstenv
test
push
dec
insl
add
jecxz
fldl
jecxz
adc
add
push
lcall
mov
sub
inc
jno
imul
mov
arpl
xchg
leave
inc
push
ret
in
jmp
and
xchg
rcll
lcall
mov
fadds
xchg
pop
dec
jl
and
bound
in
bound
ds
pop
aad
xchg
xchg
int3
xor
dec
dec
aaa
test
dec
and
popa
push
ja
enter
call
jp
call
mov
dec
push
mov
cltd
inc
or
lods
mov
ss
fdiv
rcr
mov
enter
mov
stc
icebp
mov
popf
sti
pop
sub
sahf
xchg
mov
lock
clc
mov
scas
push
mov
adc
cwtl
ret
pop
xor
mov
inc
outsl
dec
and
lds
xchg
mov
inc
stos
das
add
and
xchg
pop
add
ficompl
jnp
scas
pop
xchg
ret
jne
and
inc
inc
mov
jge
ss
cs
inc
push
xchg
ds
jbe
xchg
nop
les
mov
lods
jecxz
std
clc
cs
mov
popf
push
sub
jno
das
je
in
dec
jb
xchg
dec
lods
pop
ret
mov
and
addr16
pop
test
mov
cmp
imul
ja
in
adc
inc
dec
ret
jmp
cltd
les
lret
aad
es
enter
testb
inc
push
inc
cltd
std
les
test
or
jb
push
dec
sbb
jge
sbb
inc
in
out
push
mov
mov
fcomp
adc
mov
sbb
loope
je
xchg
pop
shrl
push
add
jp
clc
rorb
pop
cltd
sbb
add
out
nop
cmc
dec
dec
dec
mov
or
adc
sub
lahf
cmp
pop
hlt
add
mov
jno
ret
mov
lods
or
daa
test
rcrb
scas
push
push
adc
mov
mov
cld
xor
aas
xchg
adc
scas
mov
nop
mov
sub
cmp
cmpsb
pushf
mov
or
jg
out
gs
loop
dec
sub
shlb
aad
into
mov
pop
pop
dec
sub
imul
and
outsl
cwtl
dec
out
xchg
bound
sub
pushf
mov
add
ja
xor
jb
leave
cmp
lcall
add
pop
popf
mov
xchg
inc
and
mov
pop
cmp
leave
xchg
ss
dec
mov
inc
adc
sbb
repnz
cmpb
out
sub
pop
jb
inc
lret
sti
fdivs
into
hlt
cmp
and
fbstp
subl
adc
dec
in
sub
and
or
mov
jmp
in
pop
iret
int
negl
push
mov
movsl
sbbb
mov
inc
xorl
xchg
addr16
xlat
nop
dec
adc
sub
les
aaa
insb
add
in
xchg
inc
jg
jecxz
xchg
outsb
dec
lret
or
out
push
and
loope
cmp
lods
mov
cmpsb
mov
push
and
add
cltd
push
repnz
lret
push
movsb
int
pushf
mov
xchg
add
push
push
pop
mov
jge
add
ss
add
jle
push
mov
mov
das
sbb
sub
cltd
sub
subb
xchg
lret
push
jae
inc
cmp
dec
shlb
es
pop
cmp
jnp
std
xor
sbb
jb
iret
and
add
push
adc
xchg
or
xor
and
sbb
gs
add
and
enter
fs
mov
mov
test
shll
sti
insl
fsubrs
adc
fwait
sbb
stc
add
mov
jbe
jmp
jne
lods
add
insl
lcall
xchg
ret
jmp
xor
leave
jp
lods
adc
pusha
cld
pop
mov
inc
xor
notl
push
fdivr
pop
jmp
jns
sti
repz
pop
mov
int3
sbb
push
pop
in
dec
adc
cwtl
mov
sub
jno
mov
sbb
push
jmp
movsl
push
outsb
jge
add
mov
enter
pop
mov
inc
mov
syscall
jnp
adc
cmc
cld
testb
xor
pop
pop
sbb
dec
and
int3
loope
into
mov
into
out
subl
jnp
ja
cmp
sub
mov
push
enter
pop
popa
into
lock
xor
xor
pop
mov
fs
or
mov
loop
pop
adc
push
shlb
xlat
sbb
dec
inc
mov
xchg
mov
test
ret
in
lds
sbb
shrl
mov
int3
jl
pop
push
mov
aas
cmpsl
stos
dec
xchg
test
movsl
mov
cmp
push
inc
mov
js
push
lcall
scas
mov
ficoml
add
push
mov
stos
inc
lret
cmpsl
or
in
fs
cmp
inc
pop
jle
jnp
adc
bound
xchg
cmp
push
mov
push
xchg
rorb
add
dec
cwtl
push
popf
jne
test
into
hlt
cmpsb
sbb
xchg
enter
sub
or
leave
lods
pop
shrb
popf
mov
pushf
test
shll
cmp
xor
subb
popa
pop
iret
add
lds
push
jb
in
dec
fildll
jmp
test
imul
mov
dec
pop
mov
inc
dec
mov
inc
sub
add
aad
repz
sahf
inc
stos
fwait
jns
add
ret
mov
push
xchg
cmp
test
call
mov
sar
ret
and
mov
cmp
and
mov
arpl
xchg
xchg
jb
inc
icebp
into
popa
int3
pop
jno
fs
sub
loope
stos
cmp
fnsave
adc
xchg
popf
sbb
add
sub
pop
in
sub
fistpll
or
or
jns
mov
sbb
mov
mov
push
mov
pop
fabs
xor
xchg
fidivrl
mov
in
push
and
dec
mov
stos
or
mov
fs
or
dec
lock
out
mov
mov
and
inc
add
pusha
pushf
add
pusha
cmpsb
mov
jne
or
push
add
lds
das
lea
popl
shl
scas
addl
adc
fcmovnb
out
enter
pop
imul
inc
cmpsl
les
lods
ret
ds
lret
scas
scas
and
scas
ljmp
movsb
sub
mov
sar
clc
ret
mov
out
push
sub
out
add
imul
ljmp
sahf
xor
jno
test
roll
or
jl
jle
sub
or
mov
sbb
xor
fmuls
out
insl
pop
dec
or
clc
cmpsl
dec
psadbw
jae
sbb
repnz
stos
cltd
add
xchg
jns
dec
mov
push
cli
push
jbe
dec
or
jnp
insl
cmpsl
add
lods
lcall
repz
pop
push
cltd
ja
inc
and
lds
inc
xor
cltd
outsl
cmpsl
adc
lods
lods
pop
loope
je
push
push
or
and
movb
cmpsl
xor
int
mov
arpl
inc
xchg
adc
mov
dec
and
in
cmp
lcall
or
and
adc
jecxz
iret
cli
pop
xchg
or
fxch
aad
and
out
das
mov
sub
arpl
int3
cltd
ficoml
cmp
pushf
or
lds
pusha
bound
test
jl
push
mov
lock
movsl
or
nop
adc
jo
imul
jne
inc
mov
inc
fmul
movsb
lcall
push
mov
jns
push
aad
or
pop
push
in
inc
in
mov
cwtl
dec
push
and
sbb
out
sbb
add
mov
addr16
mov
std
stos
push
pop
cmpb
xchg
lods
das
sbb
jl
mov
js
sbb
enter
mov
sbb
sbb
cmpsb
cli
mov
mov
sbb
fmull
icebp
jae
push
pop
push
hlt
add
add
in
scas
xchg
mov
outsb
scas
dec
xchg
and
mov
enter
pushw
jmp
xchg
shl
insl
pop
ret
xchg
mov
mov
cmp
adc
daa
lret
jp
icebp
mov
test
or
ret
stos
ja
mov
pop
add
xchg
push
lret
shll
loope
xchg
mov
pop
mov
mov
pop
pusha
cmpsb
cwtl
cmp
vpaddusb
pop
cld
add
mov
fdivrl
push
test
rcll
jns
mov
fistl
adc
loopne
fnsave
sbb
add
imul
jne
imul
jmp
push
or
fcomp
and
aas
jae
pop
push
xor
lret
xor
sub
repnz
cmp
dec
call
add
and
pop
mov
lds
andl
leave
cmp
xor
fcomps
xchg
daa
das
sbb
cmp
hlt
add
xchg
in
cmpsl
mov
jl
lret
dec
cld
data16
stos
les
jecxz
sub
dec
mov
cmp
ret
popa
xchg
jge
mov
out
int3
incb
lret
dec
pushw
out
mov
jmp
dec
and
jae
fs
xor
insl
mov
xchg
cs
lds
movl
sub
repz
fwait
imul
inc
mov
xchg
pop
jns
ds
inc
jecxz
mov
outsb
lods
lock
imul
push
dec
icebp
xchg
loope
test
bound
jmp
mov
lods
andb
mov
fstps
add
inc
lret
test
jge
xchg
push
add
les
insb
mov
in
popf
mov
subb
movsb
mov
pop
adcl
jmp
mov
inc
push
fsubs
jmp
mov
aaa
xchg
xchg
sbb
shrb
lret
jmp
mov
and
cmpsb
loopne
xchg
inc
inc
dec
jl
mov
movsl
mov
push
or
pop
adc
pop
sbb
test
dec
rolb
mov
fs
sbb
movsl
dec
pop
push
inc
js
call
movsl
lcall
bound
testl
lcall
imul
cld
and
rclb
sbb
push
lea
dec
dec
arpl
xor
inc
imul
mov
sbb
int3
add
adcl
mov
cmp
popf
sbb
push
in
lea
daa
xchg
pop
or
add
and
jne
fidivl
or
cmp
fsubrp
jne
ficomps
imul
cs
inc
call
insb
jne
test
push
lahf
mov
sbb
mov
icebp
scas
ret
pop
aad
ret
mov
push
or
add
push
add
into
mov
vmovshdup
dec
jb
push
rol
sbb
rcrb
pop
fwait
clc
lcall
push
das
or
sbb
scas
sub
mov
and
mov
jnp
add
fwait
outsl
call
data16
in
jge
fimuls
ds
push
mov
cmp
dec
or
inc
nop
imul
lock
loopne
ljmp
mov
outsl
lahf
push
sahf
ret
ja
jmp
pop
xchg
jl
xchg
call
cmp
push
ds
push
inc
jg
decb
sbb
mov
stos
cmp
enter
fstpt
adc
cltd
pushf
iret
movsl
push
shll
imul
cmpsl
cmpsl
pop
leave
arpl
lds
ret
dec
das
addr16
rcll
cltd
mov
out
and
movsb
in
dec
xchg
xor
dec
sbb
sbb
insb
test
lahf
clc
dec
aam
or
daa
rol
mov
int3
inc
stc
or
push
mov
rolb
loopne
inc
mov
popf
mov
pop
frstor
aam
xchg
fnstenv
fisttpll
jae
popf
fnstcw
std
dec
jp
xchg
lea
fmuls
jp
push
fs
ret
xor
sbb
repnz
and
push
xor
sub
bound
push
aas
or
xchg
mov
xchg
aam
cmpsb
add
lds
movsbl
outsl
jl
sbb
pop
ret
movsl
sub
mov
fisubrs
jp,pn
jle
enter
out
xlat
movsb
inc
sbb
jns
sbb
bound
jno
fisttps
xchg
or
shrl
cld
rolb
xor
sbb
jae
negl
jno
cmp
lock
andl
adc
shr
fists
cmp
sbbl
out
cmp
icebp
leave
sub
xchg
jbe
cmp
push
insb
sub
jle
and
push
xchg
inc
lods
adc
std
pop
popf
mov
add
ljmp
cmpb
sub
insb
cmp
cli
sbb
inc
cwtl
inc
sbb
rorb
mov
fsub
pop
jo
xor
lret
out
jae
lea
cwtl
mov
rcll
adc
xchg
aas
push
decb
data16
addb
stos
adc
jmp
out
es
inc
test
or
xor
imul
rcr
pop
inc
outsb
sbb
mov
es
adc
in
jns
mov
subl
push
mov
inc
add
push
inc
loope
es
mov
inc
cmpl
lods
sub
lea
or
sbb
xchg
in
adc
jbe
cmc
or
cwtl
imulb
sbb
inc
cmp
pop
sub
loopne
dec
xor
and
push
sub
ljmp
scas
das
repnz
rolb
xadd
into
test
int3
mov
xchg
out
or
cmp
test
cmp
xchg
outsl
rorb
or
pop
fndisi(8087
mov
push
outsl
dec
xchg
into
jbe
pop
xor
test
push
stc
daa
pop
xor
fst
pop
outsl
aaa
add
sub
mov
dec
mov
and
add
imul
dec
push
pop
das
repz
mov
sarl
and
dec
std
pusha
push
popf
xchg
xchg
and
jl
inc
push
cmp
xchg
or
loopne
es
sbb
jne
dec
aas
adc
pop
icebp
lds
movsl
adc
xchg
aam
fisttps
jmp
inc
pusha
leave
jnp
add
cmc
xor
test
mov
xchg
ret
std
xor
mov
loop
cmp
js
push
push
pop
lds
fsub
movsb
add
cs
shrl
std
repz
and
pop
push
and
int3
pop
loop
push
sub
les
out
out
pop
mov
test
pop
stos
adc
cmp
push
and
sbb
pop
pop
iret
jmp
inc
add
push
pop
cwtl
and
mov
mov
daa
ret
inc
xchg
and
push
jbe
jb
out
xchg
or
stos
je
loope
cmc
mov
xchg
lods
sbb
dec
dec
mov
scas
sbb
sub
sbb
pop
xchg
dec
push
test
xchg
mov
mov
xchg
dec
sbb
mov
out
es
lock
js
jl
es
jbe
leave
aaa
mov
xor
xchg
inc
bound
imul
aam
fidivl
fldcw
jmp
imul
ret
mov
mov
fldcw
pop
daa
push
and
bound
int
mov
xor
mov
mov
popa
pop
in
mov
test
push
inc
or
scas
pop
repnz
add
lods
fdivrp
sbb
push
gs
pop
xchg
test
loop
rolb
das
imul
dec
addb
and
jb
es
and
cmc
mov
inc
ficomps
push
pop
loopne
xchg
fucom
dec
xor
scas
lahf
les
int3
pop
add
mov
fcomps
mov
std
xchg
bound
clc
test
pop
fsubs
push
jne
lea
jp
scas
sbb
mov
xchg
jmp
stos
in
test
pop
in
jno
xchg
jg
push
dec
mov
cld
out
pop
out
sbbb
xchg
daa
test
mov
push
rcrb
cltd
popa
xor
lahf
cltd
ret
es
rorb
cmpsb
repz
adc
mov
sbb
sub
ret
sarl
cmc
es
pop
and
fbld
in
xchg
mov
sub
jp
push
mov
negb
sub
push
lods
les
pop
sub
jne
jp
pop
lds
push
sti
adcl
stc
insb
fwait
push
adc
xor
fadds
or
rorl
inc
fildl
cmp
out
out
lahf
imul
cwtl
outsl
in
fcompl
hlt
pusha
push
arpl
add
push
push
or
jmp
add
pop
cltd
es
inc
push
lea
jno
cmp
in
popa
pop
mov
dec
sbb
jmp
or
xor
xor
imul
jl
outsb
test
leave
fdiv
aam
repnz
cmp
fs
arpl
cmp
cs
push
stos
movb
push
inc
andb
push
nop
dec
add
out
cmp
jo
add
out
lods
pop
cmp
cmp
push
jg
inc
pop
mov
jmp
movsb
cmp
lret
mov
ror
jecxz
cld
adc
inc
cmpsl
xor
insl
push
jecxz
jnp
jnp
mov
clc
outsl
arpl
lods
mov
push
xchg
pushf
pop
cmp
dec
dec
or
cli
push
push
pop
mov
ss
adcb
ret
sbb
and
sbb
add
jg
xchg
pop
repnz
push
mov
leave
jae
cmp
mov
rcrb
inc
test
cmp
fcmovnb
aaa
cwtl
repz
or
jg
dec
cmp
addr16
adc
adc
aas
lahf
pop
aaa
jbe
lcall
push
es
or
lahf
dec
jb
xchg
xchg
ss
lahf
xor
pusha
jbe
inc
out
lret
out
sbb
mov
sub
lea
hlt
test
or
cs
cmp
sbb
dec
sub
cwtl
in
push
sbb
mov
and
test
lds
xor
mull
repnz
sbb
pushf
sbb
dec
insb
push
dec
mov
cmpsl
inc
mov
jge
push
sbb
out
sbb
shrl
mov
in
cmpsl
outsl
out
in
pop
sub
and
fisubrs
push
xor
pop
lods
add
sbb
xlat
leave
pop
dec
sub
push
out
loopne
or
scas
mov
fistpl
insb
sahf
jmp
jmp
ljmp
fcom
sbb
out
aam
loopne
std
cmpsb
cli
pop
out
sti
out
pop
rorb
jmp
push
push
call
mov
int
adc
xchg
dec
xor
dec
or
push
mov
mov
push
mov
cmp
or
push
fidivrs
icebp
sbb
push
je
mov
ret
lret
lret
repnz
push
pop
add
sub
jo
iret
jmp
xchg
and
aad
arpl
sbb
cmp
pop
inc
mov
add
xor
push
sti
repz
cmp
pop
clc
sahf
inc
push
xchg
adc
xchg
and
iret
stos
testb
inc
sub
out
clc
call
or
iret
adc
sbbl
xchg
enter
aaa
adc
adc
shr
iret
jmp
jecxz
xor
mov
push
xchg
dec
mov
fldl
jbe
xor
mov
jg
add
sar
and
movsl
jae
pop
dec
sti
es
and
scas
out
lods
mov
stos
stc
outsb
lret
out
ret
repnz
fnstsw
sarl
sub
inc
jo
and
dec
dec
push
int3
adc
push
inc
and
pop
sub
loopne
std
adc
dec
push
cmp
sti
in
mov
sbb
fdivs
and
or
push
cmp
xor
push
push
sbbl
cmpsb
sbb
fstl
adc
fdivl
in
icebp
and
and
xchg
xchg
inc
test
std
ds
sub
adc
and
cltd
addb
jmp
sub
push
or
mov
into
es
adc
push
pop
inc
in
outsl
mov
imul
loopne
int3
pushf
jns
ja
adc
push
movsl
ss
es
push
loopne
nop
jbe
data16
mov
cmpsb
jo
pusha
xchg
testb
xor
and
shlb
shlb
push
loopne
nop
jbe
data16
mov
cmpsb
jo
pusha
xchg
testb
xor
and
shlb
shlb
push
loopne
nop
jbe
data16
mov
cmpsb
jo
popa
xchg
testb
xor
and
shlb
shlb
push
loopne
nop
jbe
data16
inc
scas
mov
or
xchg
pusha
icebp
addr16
sbb
sub
cmp
cmpsb
or
cmp
das
idivb
mov
cli
inc
ljmp
xchg
xchg
sbb
imul
out
idivb
mov
sti
inc
jmp
jbe
xchg
xchg
sbb
imul
out
idivb
inc
out
ss
add
jbe
xchg
leave
push
leave
pop
out
add
mov
cwtl
test
xchg
jae
mov
cmpl
outsb
shlb
dec
jp
fs
loopne
mov
out
push
jmp
push
xor
shll
xor
mov
push
push
jg
loope
shlb
sti
jmp
inc
inc
sub
cld
xchg
sub
jnp
inc
mov
lcall
test
data16
dec
and
dec
xchg
arpl
pop
repz
jne
cli
fiadds
stos
pop
cltd
xor
ret
adc
imul
xchg
lea
inc
jae
push
out
ss
aaa
push
jmp
fidivl
ja
xchg
xchg
sbb
imul
out
idivb
mov
sti
inc
jmp
pop
dec
jmp
inc
fistpll
stos
push
sbb
cmpsb
shll
hlt
dec
out
jo
daa
cmpsl
and
xchg
outsl
cmpsb
inc
les
mov
mov
xchg
xor
jmp
inc
out
pop
mov
cwtl
cmp
dec
iret
add
sarl
imul
out
idivb
mov
sti
inc
jmp
jbe
xchg
xchg
sbb
imul
out
idivb
mov
sti
inc
jmp
jbe
xchg
fists
or
sub
repnz
sbb
mov
inc
jno
jo
test
lahf
cwtl
fmuls
lds
lea
into
dec
cli
dec
jmp
add
and
data16
mov
dec
adc
cwtl
or
or
jp
pop
fldl
sbb
jecxz
mov
add
xor
lcall
mov
shll
jnp
clc
dec
movsl
adc
add
sub
dec
xor
fistpl
orl
imul
in
and
sub
sbb
cmpsl
iret
fcoms
xor
jecxz
movsb
shll
cs
jae
push
leave
ja
dec
mov
mov
incb
jp
and
xchg
adc
mov
xor
mov
and
add
rclb
lds
daa
xor
sub
out
adc
add
out
cmp
jnp
jno
stc
pop
imul
mov
sbb
imul
cmp
mov
push
dec
mov
ljmp
sub
pop
loopne
bswap
xor
icebp
dec
sbb
orb
sbb
jbe
ja
xor
xchg
aam
insl
jecxz
adc
aam
stc
mov
mov
add
and
test
xchg
lahf
push
out
jo
scas
test
inc
push
scas
dec
data16
push
mov
pop
mov
pop
pop
adc
arpl
fsubrs
out
rcrb
mov
in
jl
jnp
mov
or
xor
push
cmpsb
adc
inc
inc
sbb
lods
lea
insl
inc
stos
dec
call
scas
mov
out
cmpsb
std
mov
inc
adc
outsb
lods
sti
ds
fnstenv
sbb
pusha
in
or
movsb
in
dec
insb
int
jnp
out
js
xchg
adc
inc
cld
mov
jge
arpl
ret
xor
test
mov
mov
sub
mov
mov
mov
cmp
adc
lods
mov
and
pushf
cmpsl
push
push
iret
lcall
inc
or
adc
mov
int3
mov
xchg
fwait
cmc
dec
mov
shll
and
pop
cld
mov
jle
repz
sbb
lahf
dec
push
mov
cmp
mov
mov
pop
or
mov
sub
fstpt
pop
shr
mov
jle
mov
cld
push
push
mov
push
mov
imul
mov
dec
jae
in
rcrb
or
loope
lock
pop
and
mov
aad
jle
ss
loope
dec
lods
push
adc
pusha
or
and
xchg
shrb
mov
pop
popf
xor
loop
fists
pop
push
sti
and
xor
lods
in
push
mov
in
sbb
cwtl
xor
cmp
mov
sbb
jp
int3
xchg
int
aad
fistl
mov
sbb
stos
add
out
lea
inc
xor
ret
and
loope
pop
and
je
jecxz
cmp
dec
imul
in
imul
or
cltd
lahf
imul
aad
push
dec
lret
scas
stos
cs
jl
jno
test
push
leave
call
and
inc
fs
adcl
test
orb
xor
fnstenv
lret
insl
ja
loope
fcmovbe
xor
mov
adc
adc
lods
data16
mov
out
push
dec
jp
xchg
add
inc
pop
stos
decb
not
push
push
repnz
rolb
push
sub
pop
pop
add
xchg
mov
jecxz
shll
rol
std
xor
scas
dec
mov
lret
ss
dec
lret
in
insl
testl
fstps
add
adc
add
cmp
mov
add
add
and
out
add
repz
jmp
lret
add
jb
fcoml
ss
mov
outsb
jns
sbb
std
movsb
pop
pop
mov
dec
dec
xlat
dec
mov
aad
ss
adc
push
cmpl
aaa
push
cmpl
not
adc
or
pushf
imul
pop
int3
jbe
mov
shr
push
aam
out
xor
pushf
test
xchg
jp
push
or
adc
mov
hlt
xor
lcall
dec
add
dec
xchg
ret
xor
call
inc
xchg
sub
lret
mov
xor
xor
test
dec
pushf
inc
popf
call
lods
jnp
cltd
popf
cmp
sti
sub
inc
out
dec
dec
pushf
mov
xchg
mov
gs
push
push
cmc
int3
sbbl
lret
dec
dec
out
js
fcoms
lods
mov
mov
cld
ljmp
xlat
sub
outsl
or
cwtl
xor
jle
push
imulb
test
test
adc
ds
scas
loop
fnstsw
repz
pop
sbbb
in
add
aam
mov
xchg
sarl
movsl
adc
mov
sbb
call
mov
shlb
push
jno
pop
xor
xchg
ds
mov
mov
inc
aad
cmp
adc
xor
xor
sub
pop
add
popf
and
dec
inc
mov
cltd
movsb
mov
and
push
maskmovq
sbb
or
repz
cmpsb
addr16
add
adc
adc
dec
mov
dec
das
leave
icebp
pop
ret
and
jle
mov
sub
cmpsb
adc
ret
jne
sar
into
les
cmp
add
ss
add
mov
cmp
mov
mov
and
jns
sti
out
mov
push
lahf
mov
outsl
es
subl
stos
daa
xchg
test
movsl
push
fidivrs
push
stc
or
xor
loop
and
inc
cmp
fbstp
add
sbb
in
out
mov
arpl
xor
push
dec
rcrl
mov
test
adc
outsl
daa
ja
and
movsl
bound
lods
add
cs
aam
push
incl
and
pop
mov
mov
or
mov
cmp
dec
pop
push
inc
pop
xor
div
outsl
lds
ja
loop
lcall
enter
and
das
nop
popa
cmp
cmp
div
hlt
sahf
xchg
loop
jmp
setne
fsts
mov
cmp
sub
jne
mov
add
inc
stc
ljmp
mov
inc
sbb
stos
ficompl
outsb
adc
jae
push
jne
sub
aam
sahf
cs
jae
fistl
movsl
mov
sbb
lcall
ds
pusha
sub
push
imul
mov
pop
mov
pushf
imul
push
into
add
imul
ljmp
inc
jae
int
mov
mov
std
lods
cli
sub
test
hlt
jne
pop
mov
cli
out
enter
mov
lret
das
jae
ja
mov
jle
scas
lcall
daa
sbb
dec
or
hlt
fildll
pushf
sub
or
in
out
and
or
lret
das
push
sbb
pushf
outsl
ds
insl
xor
mov
scas
push
sahf
xlat
mov
jg
jno
gs
add
and
imul
inc
pop
sub
mov
add
xor
adc
out
mov
hlt
sub
je
xlat
xchg
xchg
outsl
mov
stos
sbb
inc
jle
in
jo
jmp
insl
sub
ljmp
xchg
adc
push
or
call
push
clc
sbb
pop
xor
rorb
mov
addr16
mov
add
jne
mov
xchg
jg
pop
cmp
fisttpl
rol
xchg
pop
test
in
sub
adc
sar
shrb
aas
sbb
pusha
lods
cmp
rclb
rcrl
jmp
sbb
fdivrs
call
jg
sbb
push
jge
mov
adc
pop
ja
clc
test
xchg
ljmp
pop
imul
pop
mov
fildll
xor
rorl
dec
lock
cltd
inc
es
sbb
out
cmp
sub
pop
je
inc
inc
femms
cmp
dec
pop
stc
push
sub
or
jb
test
mov
fsts
dec
outsl
jns
ja
xlat
cmp
jne
xor
mull
mov
bound
shll
xor
or
xor
sub
gs
push
mov
xor
push
hlt
add
push
cltd
stc
fiaddl
arpl
push
inc
inc
jge
and
in
mov
jno
cmp
inc
jns
push
mov
sub
repz
xor
repnz
das
lods
mov
test
sub
cmpsl
pop
icebp
mov
test
mov
adc
std
mov
and
int
cmc
addr16
xlat
out
ja
add
in
repnz
sub
enter
xor
jne
pusha
addr16
sbb
scas
cmc
sarl
mov
test
imul
xlat
or
inc
mov
fldcw
dec
push
repnz
inc
loop
sub
icebp
mov
in
xor
sub
cltd
lds
inc
decl
lcall
inc
mov
and
adc
pop
int3
scas
pop
sub
mov
sbb
fwait
xor
cmp
test
mov
push
cmpsb
cmp
pop
stc
repz
dec
outsb
push
mov
pop
sahf
daa
mov
add
mov
mov
enter
push
sbbb
fcmovnbe
jl
jp
xlat
icebp
ficompl
lds
fwait
inc
mov
add
sub
in
mov
cs
cmc
adc
repz
inc
mov
push
and
and
jns
add
mov
iret
pop
loop
jp
sbb
dec
mov
or
sub
sub
dec
lock
cmpsb
pop
or
ffreep
jecxz
pop
ret
pop
jg
sti
rcl
pusha
aam
mov
leave
inc
mov
and
lret
push
pop
mov
cwtl
fcompl
in
fs
data16
xchg
push
cld
lea
stos
push
cmp
or
jbe
cmpsl
mov
into
pop
es
sbb
test
sub
cli
incb
enter
cltd
inc
cmp
cmp
bound
imul
xchg
scas
cmp
mov
xor
sub
sub
lahf
dec
sbb
mov
lock
xchg
jbe
inc
or
fxch
or
xor
lock
out
xor
xor
sub
test
and
clc
out
hlt
pusha
fmuls
push
xor
sbb
dec
cmp
push
jp
jo
push
das
addb
fistpl
push
pop
out
adc
clc
push
mov
mov
bnd
cltd
mov
or
jecxz
stc
mov
jne
sub
leave
sbb
inc
adc
jle
sbb
push
sbbb
xchg
sbb
mov
leave
les
sbb
fs
imul
mov
insl
cs
fadd
pop
test
ret
hlt
mov
or
sub
xchg
roll
fwait
mov
jnp
outsl
and
xor
and
loopne
xchg
jo
out
sub
lods
mov
js
scas
insb
pop
hlt
out
out
mov
int3
xor
test
inc
shrb
sub
adc
mov
rcl
push
adc
dec
rolb
nop
pop
adc
inc
sti
or
push
xchg
in
jl
hlt
cld
test
test
jns
cli
xor
jae
fistpll
cmp
pop
aas
adc
addr16
scas
mov
leave
loope
decb
sub
or
dec
aad
mov
nop
cwtl
neg
std
adc
push
sub
dec
add
xchg
adc
imul
insb
cmp
and
rolb
mov
pop
xchg
popf
jl
dec
jmp
loope
pop
push
fmul
xor
lcall
xor
call
and
push
aas
mov
out
cmp
in
push
lea
mov
sub
scas
andb
mov
mov
mov
cmp
daa
mov
pop
mov
add
enter
imul
fidivs
pop
pop
and
ja
mov
mov
icebp
add
push
jns
movsb
mov
ja
fildl
sub
mov
mov
mov
sbb
pop
popf
insb
jnp
dec
mov
mov
fimuls
add
sbb
int
sub
cmp
pop
jae
testb
movsl
dec
pop
xor
xor
pushf
ret
jge
jne
push
aaa
mov
cmp
std
aaa
jg
push
jle
adc
sbb
aam
pop
xchg
cmpsb
xor
cmp
in
sub
pop
int
outsl
dec
cmp
sub
sub
nop
xchg
sti
rorb
inc
out
aaa
mov
jne
cmp
dec
mov
or
movsl
xor
sbb
adc
push
and
sbb
jnp
dec
add
std
rcll
cmp
scas
pop
cld
stos
loop
movsl
xor
jg,pn
sets
mov
or
inc
jo
mov
jnp
les
movsl
xor
rorl
pop
sbb
xchg
dec
sub
or
addl
cwtl
sbb
xlat
mov
xchg
and
hlt
es
int
cmpsl
popa
cmpsl
dec
cmp
jmp
scas
add
stos
aam
pusha
jg
nop
push
notl
fdivr
and
inc
loope
loop
or
loop
insl
lcall
nop
push
movsb
sbb
mov
cmpsl
enter
dec
inc
ljmp
add
movsl
cmp
and
and
sub
inc
jmp
mov
pminub
cmp
add
dec
sbb
xor
ret
xor
push
leave
cmpsl
pushw
mov
adc
push
scas
mov
inc
mov
arpl
arpl
test
xor
inc
imul
call
rcr
xchg
and
jg
xchg
jmp
cld
pop
jl
push
fbld
mov
mov
aam
loope
mov
dec
jb
mov
push
fwait
sub
mov
push
push
jge
stc
xchg
clc
inc
loopne
xor
mov
aaa
sub
add
fwait
std
mov
jbe
xchg
add
add
jg
lret
jb
loop
sub
cwtl
and
pop
fisubrs
sbb
add
es
xchg
mov
or
or
nop
lret
cmp
pop
aas
fstpt
jg
xchg
xorb
xchg
mov
jg
cmpsb
sub
ss
sbb
inc
inc
ss
ret
or
mov
add
push
fcoms
or
cs
push
dec
inc
sbb
lods
out
test
mov
cmp
sub
cmpsl
sbb
lahf
movsb
dec
or
inc
lods
sub
push
cmp
xchg
mov
mov
push
jg
inc
dec
or
mov
clc
sbb
pop
ljmp
and
cmp
stc
or
pop
mov
insl
lock
pop
add
enter
jae
data16
mov
xlat
ret
sti
add
mov
mov
mov
rclb
jbe
roll
inc
xchg
sbb
jo
dec
cmpsl
mov
call
ret
dec
xlat
bound
scas
adc
push
push
push
push
sbb
enter
adc
inc
sub
jbe
sub
imul
jg
inc
call
sahf
dec
mov
stc
std
mov
aad
jnp
stos
push
pushl
push
inc
inc
sub
dec
xlat
or
out
popf
call
pusha
shlb
data16
rolb
dec
xchg
mov
mov
cmp
movsb
jbe
cwtl
and
xchg
inc
jecxz
addr16
cmpsb
mov
jge
pusha
push
jg
add
js
lret
xor
push
ljmp
xchg
inc
std
jo
mov
lcall
aas
mov
fdivrp
adc
mov
mov
shrl
sub
jge
mov
inc
js
js
jnp
xchg
shlb
or
mov
in
sbb
push
fwait
rolb
ret
lret
gs
mov
mov
pop
call
mulb
add
and
hlt
pop
xchg
jns
xorl
loope
push
rcrb
xorb
int3
push
lahf
jns
aad
jae
inc
popa
fldenv
out
movsb
mov
nop
mov
sarl
cli
adc
mov
adcl
sarl
mov
xorb
mov
sub
bound
test
mov
cmp
popf
push
dec
cwtl
sbb
imul
sar
fnstsw
int
ja
mov
jae
lods
movsb
or
pop
jns
mov
das
sti
mov
and
jmp
jmp
inc
dec
test
scas
lret
push
daa
aaa
sub
jg
mov
push
pop
jne
sbb
addl
gs
sub
cs
stos
lcall
xchg
mov
jecxz
sbb
into
xchg
cmpsl
inc
jnp
dec
add
fisttps
push
je
dec
lcall
pushf
mov
loop
add
cli
out
andl
je
push
lahf
mov
iret
lods
lods
into
js
mov
lods
sbb
mov
arpl
in
rcrb
mov
sbb
es
inc
repz
xchg
xchg
call
je
jmp
push
test
lcall
cmp
dec
dec
scas
push
in
into
pop
sarb
pop
mov
dec
scas
jmp
inc
jno
notl
mov
dec
adc
out
loope
sub
inc
insl
idivb
pop
fs
mov
xchg
rorb
jo
cmc
sbb
mov
sbb
iret
dec
sub
and
rol
mov
into
xchg
icebp
and
adc
jecxz
jbe
push
ljmp
push
add
loop
add
divl
ja
cwtl
mov
rcll
xor
sti
fidivrl
lcall
xor
sbb
add
pop
and
jge
sub
fsts
je
or
popa
push
lret
popa
insb
jge
jl
iret
fistps
ret
subb
inc
sbb
lahf
mov
call
int
jg
out
inc
push
aad
push
jns
pop
icebp
jmp
popa
pop
add
mov
pop
push
fsubrl
lcall
cmpsl
in
pushf
mov
or
iret
jb
je
sahf
shlb
jecxz
int3
mov
sbb
dec
cmp
mov
inc
test
ds
mov
sbb
sub
push
or
aad
cwtl
js
pop
daa
add
sub
jle
cmp
cmp
repz
mov
lods
jo
or
inc
cmp
sbb
push
lods
push
cmc
pop
mov
std
add
or
outsb
sub
xchg
adc
pop
xchg
rcrl
int
mov
mov
ja
mov
push
cwtl
push
jno
dec
jns
and
sbb
lock
nop
ds
push
arpl
pop
and
nop
insb
or
ljmp
cmpsl
jo
pop
cmp
push
dec
mov
pushf
add
mov
jnp
jmp
je
jo
aam
stos
mov
fbstp
push
mov
out
adc
sub
cmc
dec
xorl
sbb
pop
mov
or
mov
leave
daa
fbld
mov
add
loopne
incb
cld
icebp
lahf
adc
mov
popf
mov
nop
dec
ficoml
push
movsl
cmp
nop
aaa
lret
push
aam
popa
cmp
mov
and
or
xor
mov
sub
push
iret
push
adc
iret
orb
ficompl
adcb
sub
test
push
call
jae
arpl
in
sub
xchg
pop
mov
push
xor
sbb
mov
push
sbb
mov
cmp
int
aam
sbb
fstpl
adc
lods
lds
bnd
in
call
clc
mov
sub
xor
lcall
mov
cmp
jle
ret
jle
xlat
ja
ljmp
push
jne
pop
add
xor
jnp
cmpsb
jbe
adcl
je
jl
cmp
add
jo
cmp
jg
ds
cwtl
cmp
push
shrb
mov
cmp
ret
repz
dec
movsb
dec
rorl
cmc
adc
xor
jae
cmp
rcll
adc
popa
test
dec
or
pop
pop
dec
pushf
scas
fs
jb
aaa
add
fdivrs
pop
arpl
enter
jb
dec
cmp
nop
mov
addr16
mov
or
ret
cmp
xlat
fs
lret
jbe
bnd
adc
cwtl
mov
and
jae
push
addl
sub
push
je
add
fdivr
nop
xchg
sbb
daa
lds
imul
lahf
mov
arpl
add
ds
iret
pop
sarb
xchg
mov
daa
ja
movsb
in
mov
insb
inc
or
outsb
adc
add
cli
das
xchg
dec
xchg
ror
outsb
cmp
xchg
and
call
mov
psubsb
loope
xchg
sub
mov
aaa
push
cli
pop
out
jmp
imul
out
idivb
mov
sti
inc
jmp
jbe
xchg
xchg
sbb
imul
out
idivb
mov
sti
inc
jmp
jbe
xchg
push
sbb
or
pop
out
idivb
mov
sti
inc
jmp
jbe
xchg
xchg
sbb
imul
out
idivb
mov
into
arpl
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
push
lahf
pop
pushf
ficoms
jp
adc
and
psubusb
cwtl
dec
cwtl
dec
push
lahf
pop
out
or
sbb
clc
cmp
push
sbb
mov
jno
popa
scas
push
xchg
xor
and
adc
sbb
icebp
adc
test
xlat
add
or
dec
add
cs
adc
ss
inc
fisttps
outsb
mov
movsb
inc
sbb
push
push
mov
xchg
xor
in
add
lea
inc
insl
mov
es
test
mov
add
rcrb
jmp
mov
and
mov
inc
outsl
mov
push
mov
testl
daa
lock
sub
nop
add
cwtl
and
lds
outsl
xlat
fbld
adc
call
das
leave
pop
sub
push
pop
mov
mov
mov
dec
setg
push
sti
in
inc
pop
jne,pt
mov
mov
in
sub
sbb
mov
pop
xchg
aas
ljmp
out
or
add
icebp
daa
loopne
rolb
rcll
addr16
pop
cwtl
sub
sbb
mov
pop
addl
xchg
push
mov
adc
cmp
pop
cmc
and
sbb
inc
mov
fisttpll
mov
popf
dec
enter
test
roll
xor
sub
xor
pusha
xchg
cmp
or
sbb
call
pop
fmuls
test
mov
dec
push
lahf
pop
out
or
sbb
call
pop
fmuls
test
mov
dec
push
mov
pop
mov
arpl
daa
leave
test
lds
push
add
testb
nop
pop
das
call
dec
sbb
adc
pop
mov
nop
jg
push
push
adc
ja
out
fstl
cwtl
pop
mov
cltd
xor
insl
jae
ret
cltd
mov
ss
test
outsl
idivl
aam
dec
dec
shr
pusha
adc
push
aaa
stos
imul
jmp
in
movsl
ss
mov
fsts
xchg
push
nop
and
sub
mov
xor
mov
inc
les
mov
sub
shr
lret
sbb
iret
outsb
xor
cmp
cmp
add
mov
hlt
sahf
xchg
in
imul
and
add
mov
push
imul
enter
shll
and
pop
jb
test
add
jmp
test
mov
and
add
rclb
dec
sub
jnp
jne
adc
cmp
scas
fiadds
pop
mov
and
movsb
xor
dec
gs
inc
daa
mov
cmpsb
ja
inc
add
mov
inc
mov
cmp
outsb
pushf
out
sbbb
xorb
adc
sub
mov
int3
jo
fildl
dec
cmpsl
ja
mov
or
dec
ret
mov
lds
mov
and
push
add
dec
adc
inc
fistl
mov
fnstsw
xor
fisttpl
popa
push
ja
inc
test
lret
pop
mov
dec
sbb
sbb
fldt
or
es
lea
mov
loopne
pop
pop
adc
jnp
in
and
test
call
cmp
std
dec
cmc
jno
sub
dec
in
dec
test
test
mov
mov
push
lcall
pop
outsb
sbb
enter
ret
outsb
jecxz
clc
int
mov
pop
out
mov
dec
jnp
daa
jns
clc
outsb
cs
ficompl
xchg
loopne
loope
sub
ud1
mov
cmc
inc
pop
iret
nop
pop
push
lahf
rorb
enter
xor
and
add
dec
xchg
stc
stos
call
push
xor
sarb
mov
xor
or
pop
pop
xchg
dec
xchg
jecxz
cmp
iret
nop
bound
mov
iret
inc
dec
gs
shrb
std
and
jbe
ljmp
sbb
jnp
add
inc
push
xor
lahf
addl
pop
test
mov
push
xchg
rorb
dec
js
cmp
jno
sbb
into
fistps
mov
inc
dec
mov
repnz
das
adc
in
or
add
or
ret
clc
int
adc
cld
out
lods
jo
and
dec
int3
popa
lret
mov
fcomp
mov
cmp
jbe
loop
sub
rorb
dec
adc
pusha
mov
in
sbb
cmp
xlat
test
js
add
push
loop
jmp
push
out
sub
popa
stc
dec
mov
imul
enter
out
repz
fsubl
lds
imul
push
call
pop
aaa
ret
or
xchg
test
xor
mov
xchg
int
or
jle
cmp
fistl
or
sbb
push
cmp
in
daa
push
movsb
dec
adc
cltd
and
mov
aas
mov
mov
mov
lcall
mov
in
stos
pop
xor
out
xor
lds
ret
xor
test
dec
test
xor
pop
popf
xchg
jbe
es
enter
lds
ret
aad
call
dec
into
mov
pop
or
pop
jo
push
xchg
dec
push
cmp
das
dec
inc
cmpsl
inc
ret
xchg
mov
negb
sub
test
jns
mov
fstpt
add
imul
mov
subb
sahf
or
popl
js
es
jne
filds
jb
rorl
mov
insl
movsl
push
adcl
sub
inc
push
test
dec
pop
xor
stc
std
mov
not
mov
sbbb
xorl
and
mov
inc
dec
outsb
mov
mov
shll
dec
sbb
add
mov
jecxz
outsl
mov
scas
add
cmpsb
jnp
mov
in
test
ss
push
push
repnz
inc
xor
fsts
push
xchg
mov
xchg
push
inc
fistps
mov
cli
cltd
pop
pop
outsl
lret
bound
xchg
add
jl
nop
mov
addb
shl
cld
imul
mov
loopne
das
lds
ret
aad
xchg
adc
mov
rorb
imull
stos
pusha
sub
xor
mov
push
lret
aam
or
aam
and
outsl
gs
cmp
or
gs
add
pop
int
arpl
loopne
lods
and
pop
and
xchg
lret
fs
int
dec
popa
add
jmp
xchg
in
push
ds
cmp
push
jbe
jbe
mov
fwait
jae
test
pop
outsb
ror
in
mov
mov
ss
push
mov
fisttpl
enter
outsl
js
jnp
cltd
mov
or
sbb
and
add
mov
roll
stos
add
jl
dec
dec
xor
addb
fnstcw
lds
jle
fcompl
fstpt
sub
jg
data16
cmp
jb
ret
icebp
jge
mov
xchg
ljmp
fcmovbe
std
fwait
stc
out
leave
xchg
adc
xchg
insb
pushf
aam
pop
cltd
mov
sbb
rcrl
pop
or
inc
cmp
and
insb
les
dec
mov
push
sbb
in
icebp
sarb
jmp
mov
call
dec
outsl
daa
js
jns
inc
nop
movsb
enter
cmp
xchg
outsl
mov
dec
add
in
add
ss
test
imul
mov
jge
aam
scas
push
sbb
aaa
int
or
pop
xchg
pop
in
inc
icebp
adc
inc
lods
ror
rcrb
inc
rolb
adc
add
in
xor
in
aad
aad
xchg
inc
stos
fnstenv
loop
pop
jp
pop
cmp
pop
mov
cmpsl
lcall
nop
pushf
xchg
idivl
lcall
xor
repnz
xchg
insb
outsb
jl
scas
mov
lret
mov
jmp
jno
lea
cmp
and
pop
cld
inc
push
ja
push
mov
and
mov
std
ljmp
ljmp
in
js
push
add
or
das
bound
shr
pop
adc
push
jle
inc
mov
insb
push
mov
and
mov
and
mov
xchg
adc
setnp
dec
test
movsl
mov
xchg
jp
dec
dec
lret
mov
xchg
ja
jne
xlat
ljmp
sbb
bnd
jnp
push
dec
stos
xor
pop
bswap
into
stc
paddw
fcoms
filds
push
push
loopne
popa
mov
push
aam
mov
or
scas
cmp
or
mov
push
push
xchg
and
adcb
xchg
jne
pushf
sub
xchg
inc
pop
pop
sbb
push
sbb
jg
int3
rorb
or
dec
dec
and
add
cltd
insb
add
jbe
pop
sbb
fs
rorb
psubq
sub
dec
lods
out
xchg
or
mov
ficoml
jmp
lcall
mov
jb
shl
arpl
adc
sbb
jecxz
cmp
fists
xlat
xchg
orb
or
fisttpll
xor
lahf
loope
arpl
lea
lahf
cmp
push
xchg
sub
popf
mov
fldcw
push
jae
jg
test
pop
dec
push
sbb
add
xor
jb
mov
or
jo
sbb
shll
pop
adc
jp
and
nop
xchg
and
cmpsl
xchg
and
fildl
sub
leave
push
icebp
ds
out
jecxz
lcall
loop
mov
stc
fnstcw
cmc
outsl
jbe
addr16
xorl
inc
or
lock
fiaddl
movsl
jno
mov
sbb
in
mov
jns
les
sub
loopne
lcall
pop
pop
scas
loopne
xor
out
sarb
imul
dec
cmpsb
xchg
cli
cld
stc
add
or
xchg
sub
mov
jecxz
or
rorb
mov
inc
dec
xor
push
sar
movsb
int3
popf
mov
adc
mov
aad
pushf
subb
insl
jge
mov
das
test
mov
cmp
adc
inc
jns
add
in
arpl
sub
enter
mov
in
pop
pop
das
pop
imul
fbld
xchg
nop
outsb
xor
sub
leave
pop
aad
rcrl
imul
adc
cmp
mov
pop
out
mov
xchg
inc
cwtl
mov
stos
sub
inc
fwait
add
mov
and
pop
cmpsb
or
mov
repz
stc
inc
ret
lods
pushf
pop
xchg
mov
inc
test
cmp
adc
ret
repz
push
addb
jae
cld
dec
imul
jae
cmp
push
jle
lods
lret
gs
mov
sahf
sbb
lds
pushf
xlat
nop
pop
aad
int
xchg
cmpsl
push
xlat
sub
push
xchg
shl
outsl
test
insl
mov
gs
loop
xchg
je
insl
fstps
mov
adc
jne
xor
mov
xchg
pop
push
xchg
aaa
aas
mov
fnstcw
pop
cmp
js
lea
sti
sbb
addb
pop
test
cld
scas
or
stos
je
mov
add
adc
cmc
aas
imul
mov
mov
cwtl
in
in
sub
imul
adc
cmp
lea
mov
mov
fdivl
lahf
fs
sub
mul
in
cmpb
outsl
add
icebp
dec
xchg
test
adc
loope
jno
out
xchg
push
sbb
inc
fstpl
insl
out
or
or
out
push
fisttps
cld
int3
push
jnp
and
push
jl
pop
jmp
js
cmp
aam
sub
xor
xchg
mov
add
xor
xchg
sub
int3
jl
js
loop
mov
xor
shlb
sahf
addb
fwait
jno
xchg
sete
cmp
fidivl
stos
cmp
jecxz
sbb
in
out
jbe
mov
xor
pop
mov
sub
and
stc
pop
push
mov
enter
and
movsb
repnz
aaa
xchg
fwait
xorb
or
enter
aam
jecxz
data16
bound
pop
and
jne
add
cltd
or
push
xor
cmpb
in
cmpb
leave
inc
js
jae
adc
sub
sti
inc
jle
clc
loope
add
test
into
inc
dec
sbb
lret
clc
sbb
pop
xchg
cmp
fadd
mov
jo
pop
mov
test
mov
push
cmp
loope
or
in
into
lock
xor
je
les
xor
mov
stc
je
scas
lods
fcomi
ss
insb
cmpsb
cmpsb
ror
cmp
fdivr
es
daa
xchg
fcoml
sbb
mov
out
inc
mull
cli
sub
sub
inc
arpl
data16
test
out
adc
sub
push
mov
pop
in
and
jp
ficoms
movsl
ret
and
andl
xor
adc
mov
inc
shl
push
or
jecxz
fldenv
repz
or
int
xor
les
std
dec
ljmp
loop
jb
fcoms
dec
or
or
or
out
add
push
inc
in
popa
mov
xor
aam
movsb
rclb
cmp
cld
and
lds
orb
adc
add
cld
fstps
xor
cmp
dec
sbb
cmp
sub
sub
fimuls
mov
xor
orb
clc
add
fmuls
popa
jnp
xor
leave
call
mov
cmp
add
les
loopne
rcl
xchg
scas
jno
sbb
jbe
mov
aam
xchg
aas
dec
cmpsb
jo
xlat
sar
cmpsb
fisttpll
popf
imul
cmpb
clc
stos
and
push
stos
mov
inc
int
test
and
sbb
pop
inc
repnz
andl
mov
mov
leave
scas
push
push
iret
xlat
test
xlat
inc
mov
pushf
sub
xchg
push
jne
mov
xorb
ds
jmp
add
jmp
jne
stos
sub
lcall
lods
jge
jl
cmpsb
jne
mov
rolb
add
push
movl
mov
outsl
push
stos
stos
lods
sub
fs
hlt
dec
imul
push
mov
xor
mov
aas
xor
into
mov
xchg
xlat
inc
sub
jno
mov
dec
test
jmp
stos
inc
bound
rcll
mov
stc
jne
adc
fisubrl
test
mov
xor
mov
inc
orl
inc
xor
js
int
je
adc
xor
pop
xchg
mov
pop
push
shr
push
mov
xchg
xchg
jl
neg
sub
mov
xor
ljmp
jge
aas
aam
pop
rolb
lea
fistpl
mov
lods
mov
xchg
jbe
sub
sub
inc
sbb
adc
lcall
je
cmpsl
jp
xor
push
fstps
out
loopne
pop
sbb
pop
xlat
int3
push
cmp
fcom
xchg
std
pop
shlb
dec
rcll
scas
bound
mov
out
je
fldl
clc
mov
and
jmp
dec
stos
nop
fnsave
lcall
xchg
sub
jns
push
pop
and
iret
mov
mov
es
cmp
nop
arpl
ficompl
jno
cli
dec
ds
test
and
ret
aaa
mov
mov
pop
fdivrs
test
inc
sbbl
dec
sub
outsl
popa
pusha
mov
cs
das
insb
sub
hlt
fidivl
fsubs
mov
add
mull
sub
pop
stos
inc
fildll
push
mov
call
add
mov
and
push
inc
jge
cmpsl
xchg
ja
popf
sub
sub
xchg
sbb
xor
pop
push
mov
into
jne
inc
int3
fisubl
push
inc
lahf
scas
push
jbe
outsb
mov
lods
fdivr
imulb
icebp
xlat
test
sub
xorb
xchg
or
mov
pop
fdiv
mov
mov
into
jge
inc
rorl
sub
and
and
cmpsl
adc
sti
inc
push
out
cld
je
xchg
loope
sub
rcrl
rorb
loopne
pop
lods
lret
inc
xor
push
icebp
gs
ret
jo
ds
dec
inc
leave
pop
cmc
je
mov
out
mov
lock
inc
dec
or
aad
mov
ja
pop
cltd
fnstsw
inc
adc
pop
aas
in
imul
jp
pusha
pop
cld
cmp
imul
and
jmp
add
inc
or
test
jae
repz
sti
movsl
popf
and
xchg
jae
scas
pop
jns
sub
fnstcw
inc
int3
fistpl
push
clc
mov
mov
and
cmpsl
jmp
pop
inc
xor
dec
sub
mov
xor
jne
pop
dec
imul
xor
add
sbb
add
adc
sbb
xchg
jl
xorb
mov
cmpsl
mov
and
push
lret
fcomps
jp
add
cwtl
dec
add
data16
or
movl
pop
xor
nop
push
std
mov
mov
push
jno
push
fisttpll
mov
xor
xchg
inc
xchg
mov
movsl
mov
adc
jg
xchg
adc
cmp
addr16
into
jg
xchg
aam
push
clc
or
jbe
inc
adc
adcl
addr16
jns
jo
js
mov
inc
cmc
xor
jae
xchg
pop
jmp
jbe
mov
in
sbb
sti
rcrb
mov
rcll
mov
jae
mov
mov
jo
adc
popf
xchg
imul
cmp
xor
or
mov
mov
rorl
test
lcall
jb
mov
testl
jmp
cld
mov
mov
fbstp
fwait
sub
in
sub
lea
and
sub
test
jb
jb
and
pop
jg
repz
pop
rorb
add
mov
add
aas
lret
sbb
jne
aad
enter
xor
adc
push
shl
and
stos
pop
aas
cmpsb
movsb
jp
mov
pop
fldt
idivl
roll
rolb
mov
sar
sbb
and
sub
out
in
adc
mov
int3
in
rcrl
and
mov
into
xor
scas
cmp
pop
scas
test
add
or
lcall
sahf
xchg
fs
dec
cmp
pop
sub
ljmp
adc
popf
mov
xor
adc
adcb
pop
in
sub
es
push
mov
jne
dec
or
inc
cmc
pusha
fmull
or
add
or
out
or
outsb
push
xchg
mov
adc
push
jae
sub
mov
loope
dec
cmc
sbb
jbe
push
dec
xorl
ljmp
push
cmp
cltd
mov
dec
dec
je
mov
cmp
mov
scas
outsl
ret
pop
das
mov
add
mov
rorb
cwtl
in
outsl
fsubl
clc
lret
bound
lcall
lds
adc
xchg
push
les
add
popa
push
adc
sbb
dec
push
mov
cmc
mov
stos
push
mov
out
jmp
popa
inc
mov
sub
mov
inc
iret
add
push
aas
and
push
testb
data16
enter
test
aaa
inc
or
xor
leave
mov
and
mov
test
andl
loope
mov
or
popf
lds
ret
sub
popf
sbb
imul
repz
inc
push
sbb
xorb
inc
repz
cli
xor
lahf
and
insb
pop
inc
iret
or
sub
test
and
dec
fcmovb
jecxz
push
pop
orb
push
aaa
jecxz
lds
lods
clc
jp
fisttpl
fs
mov
and
xchg
arpl
jbe
out
fs
adc
mov
cmpl
pop
sbb
cmc
das
cmp
rorl
xor
stc
ss
mov
cmp
stos
repz
outsb
inc
dec
jnp
push
xchg
mov
cli
jmp
ffree
in
sti
test
fdivl
test
orl
inc
in
mov
mov
cmp
mov
lahf
push
imul
es
hlt
xchg
jns
popf
in
repnz
clc
xor
ljmp
dec
cwtl
popf
or
dec
popa
adc
mov
ret
push
fcomp
outsb
pop
push
int
stc
or
add
int
sub
data16
jne
lret
jg
jnp
dec
sbb
ljmp
and
mov
dec
xchg
movsb
incl
pop
pushf
jb
adc
mov
add
repz
sahf
or
or
cmc
mov
shrb
and
bound
and
fwait
dec
insb
gs
mov
pop
cmp
fstl
pushw
push
pushf
xor
jle
je
push
ror
jl
sub
adc
xchg
cmp
call
out
and
cmp
sub
pop
lahf
roll
mov
push
xchg
in
inc
sbb
fadds
or
jno
push
scas
sahf
push
fadds
pop
adc
sub
sub
ficompl
popa
xor
mov
mov
jo
xchg
push
dec
inc
jbe
fistps
jg
jl
inc
pop
inc
add
add
sbb
or
pushf
aad
push
inc
inc
in
dec
push
dec
outsb
add
sub
mov
cli
pop
sbb
popf
push
lahf
xchg
mov
sbb
rcrb
push
sbb
out
mov
push
dec
aad
fcmovb
and
icebp
push
xor
sub
into
mov
sub
mov
mov
outsb
leave
inc
dec
mov
jle
xor
jb
scas
stos
mov
inc
lret
outsl
or
dec
std
les
lds
xchg
mov
add
repnz
mov
sti
sarl
push
mov
bnd
xchg
and
icebp
xor
push
daa
sbb
int3
jb
sub
xor
aam
adc
xchg
cmc
mov
push
pop
fnsave
ljmp
xor
mulb
ja
out
fs
imul
pop
movsb
push
out
or
sbb
call
pop
fmuls
test
mov
dec
push
lahf
pop
out
or
sbb
call
pop
fmuls
test
mov
dec
push
lahf
pop
out
or
sbb
call
pop
fmuls
test
mov
dec
push
lahf
pop
out
mov
cwtl
iret
pop
aas
pop
test
fdivrs
divl
nop
ja
addr16
sbb
sub
pop
mov
adc
push
and
orb
cmp
dec
ljmp
mov
pop
cli
dec
lret
mov
cmp
push
jnp
dec
cli
pop
ljmp
subb
pop
jecxz
sarb
push
lcall
inc
pushf
aaa
xchg
cmp
mov
dec
loop
push
movsl
stc
jns
outsl
rcrl
ret
loope
loope
push
xchg
stos
sbb
sbb
dec
add
loopne
mov
jne
inc
pop
mov
cmpsb
inc
xlat
mov
ret
call
sti
test
mov
lds
xchg
and
popf
es
stos
pop
push
adc
out
dec
and
mov
push
jne
jl
das
out
lret
or
inc
cmc
rol
out
daa
mov
sub
push
lds
rorb
or
mov
and
jno
sub
icebp
jecxz
lcall
stos
lret
push
stos
cli
pop
adc
mov
lea
cli
pop
loopne
lret
push
lcall
jb
lret
inc
lods
fstps
fbstp
jnp
imul
mov
pop
ljmp
push
scas
push
lea
mov
out
jb
dec
sahf
sbb
sub
cmp
dec
movswl
pop
cmp
mov
pop
lcall
jp
push
lcall
push
jp
dec
cli
pop
ljmp
lcall
jp
push
lcall
push
jp
dec
cli
pop
ljmp
repnz
lds
orb
enter
mov
testl
dec
hlt
adc
outsb
mov
mov
xacquire
cmpl
shll
loope
sbb
mov
pop
inc
sbb
pminub
xchg
adc
sub
push
les
sub
xchg
pop
aaa
sahf
push
adc
pusha
inc
jl
repnz
push
adc
mov
lret
dec
test
in
sbb
mov
rcrl
rorb
add
bound
mov
fsubl
daa
mov
hlt
aas
sahf
arpl
movsb
adc
sub
jae
adc
arpl
dec
cwtl
mov
and
push
or
mov
push
mov
sbb
jno
xchg
les
insl
das
adc
rorb
dec
mov
jae
pop
shll
fisubrl
imul
adc
push
aas
call
push
in
fildll
mov
in
mov
test
jns
ret
mov
dec
sub
sub
xchg
sar
jp
nop
paddusb
mov
xchg
out
test
cmpsl
int3
lcall
jg
int
iret
gs
cmp
adc
push
cli
insl
add
xchg
xchg
mov
in
and
cmp
loop
pop
mov
outsl
pop
adc
jns
aaa
repz
cmc
movsb
inc
push
pop
jmp
push
sti
push
in
bound
cmp
pushf
mov
ds
dec
std
mov
pop
pop
jp
ss
fildll
pop
shll
add
adc
std
jmp
mov
cmp
repnz
aas
mov
xchg
rcrl
int3
ds
fisttps
loope
jns
cltd
dec
test
mov
inc
fwait
adc
aaa
push
fwait
sub
divl
test
pop
lret
pusha
repnz
shrl
inc
bnd
loope
mov
insb
cmp
imul
stc
les
add
push
hlt
push
and
xchg
lahf
and
loope
mov
ror
call
dec
js
and
jg
sub
lret
loop
mov
mov
pushf
jge
fnstcw
adc
inc
push
mov
sub
sbb
daa
jns
loopne
adc
into
sub
xchg
jb
cmp
and
mov
or
lods
jbe
add
push
and
ror
push
push
cwtl
pop
adc
mov
mov
sub
xchg
addb
inc
xchg
or
outsl
dec
test
cmc
test
mov
and
adc
mov
mov
xor
faddl
sbb
cmp
in
stos
in
mov
ficomps
jle
daa
cld
fwait
pusha
movsl
pop
jmp
push
jo
push
popa
push
adc
aam
pop
fidivs
jmp
repz
loope
outsb
push
cmpsb
dec
imull
stos
fcomps
add
lahf
lea
cmp
or
sbb
inc
addr16
add
sbb
ret
pop
jno
int
inc
dec
dec
mov
arpl
clc
pop
xchg
mov
movsl
lcall
xchg
sbb
mov
jbe
or
sub
pop
repz
cmc
adc
daa
aas
addr16
mov
inc
add
push
mov
jns
mov
stos
xchg
jl
fiadds
out
cmp
scas
lock
loop
loop
add
lock
push
cmpsl
push
jns
sub
mov
aad
je
call
push
inc
mov
cmpsl
clc
inc
pop
gs
divl
pop
cwtl
mov
sbb
pop
mov
cli
int
cwtl
rcrl
lret
push
out
lock
xchg
xchg
popf
into
orb
dec
cmp
adcl
lahf
ja
out
or
fmull
push
fistl
and
adcb
mov
jecxz
inc
xor
ss
mov
call
cli
pop
and
mov
cmp
mov
xchg
dec
jecxz
clc
inc
mov
es
mov
scas
inc
loopne
cs
dec
shlb
mov
test
rcrb
xor
inc
in
cltd
sub
aad
les
lret
lcall
jg
loope
xchg
sub
or
mov
or
mov
inc
xlat
repz
mov
dec
cmpsl
xchg
loopne
push
scas
mov
rcl
mov
aaa
jbe
xchg
lods
pop
imul
mov
push
addb
adc
xor
pop
pop
inc
mov
dec
mov
test
push
das
inc
es
dec
ja
mov
jmp
mov
enter
sti
push
subb
adc
inc
push
clc
out
movsl
push
adc
xacquire
aaa
cli
fldcw
int3
xchg
sub
adc
pop
push
inc
enter
adc
js
or
push
push
cmp
pop
cltd
test
push
popf
add
enter
icebp
jge
xchg
aam
lock
jnp
test
aad
and
aaa
insl
aad
fisubs
mov
or
dec
pop
loopne
popa
xchg
cmp
aam
adc
mov
gs
cmp
cmp
jg
ret
pop
ds
dec
xchg
adc
or
fstl
loop
adc
fs
add
mov
push
nop
sbbb
sub
arpl
dec
and
push
cli
dec
fs
enter
js
cmpl
cmp
mov
and
push
sbb
cld
inc
cmp
or
les
push
cld
mov
lcall
mov
mov
cwtl
mov
aam
push
jmp
pop
or
and
xor
mov
loope
scas
push
mov
inc
lods
movhps
stos
sti
test
popa
fnstenv
jmp
cltd
nop
aad
mov
dec
jecxz
cmp
cli
pop
mov
xchg
in
adc
in
nop
div
or
pop
lock
pop
xchg
sub
sbb
lahf
pushf
popa
cld
inc
xlat
sbb
mov
call
imul
rcrl
mov
cmpsl
lods
xchg
fstps
test
xchg
jno
test
out
in
push
movb
movlps
pop
cmovs
xchg
test
pop
and
jecxz
add
jae
sbb
pop
mov
aas
pop
js
ss
enter
repnz
inc
inc
sbb
notb
push
sbb
mulb
sahf
shrb
aaa
sub
aas
pushf
push
push
jnp
inc
sub
mov
pop
jp
out
push
in
movsbl
faddl
mov
pop
mov
je
lock
jne
scas
es
pop
sbb
sub
adc
test
in
xor
lahf
imul
jecxz
cmp
xor
scas
movsl
mov
jnp
add
ljmp
xor
mov
mov
sub
mov
mov
fiaddl
mov
js
xchg
sahf
xchg
mov
mov
pop
push
and
fxch
adc
bound
mov
rclb
xor
out
xchg
loop
cmp
pop
dec
mov
xor
xchg
fisttpl
adc
adc
cmp
push
add
adc
test
dec
jl
adc
in
dec
dec
cmpsb
stc
mov
jl
push
fldcw
or
jo
mov
cwtl
shr
xor
jno
imul
cltd
popf
mov
data16
cmp
cmp
flds
mov
and
xor
shl
adc
test
aam
loope
or
cld
insl
mov
shlb
push
ss
stos
lock
inc
xchg
insb
sub
mov
gs
out
jo
adc
in
mov
xchg
cmp
scas
sbb
sub
cmp
fucomip
inc
or
pop
mov
bound
pop
add
fcompl
stc
or
mov
sub
mov
mov
xchg
jae
pop
cmp
xlat
orl
inc
mov
iret
arpl
dec
out
mov
jae
push
jne
mov
movsl
js
and
fadds
icebp
or
add
in
fiadds
mov
clc
movsb
movsb
stos
mov
mov
test
aam
jne
pop
pop
and
mov
fidivrs
ja
stos
xlat
jl
stc
out
push
rolb
dec
cmpsl
push
jae
adc
mov
xchg
mov
movsl
dec
mov
add
xor
mov
mov
dec
push
cvtps2pi
adc
sub
sahf
and
push
and
scas
xchg
aas
mov
ret
jmp
popa
inc
sub
pop
out
sub
mov
xchg
push
test
lret
mov
mov
and
dec
mov
mov
pop
fnstcw
adc
push
cld
sub
fldenv
lsl
loope
mov
add
cmc
test
mulb
sub
push
les
inc
ss
ljmp
es
test
dec
mov
dec
in
jmp
cwtl
loopne
add
push
pop
jne
mov
dec
dec
dec
cs
xchg
and
aam
push
sub
popf
jne
xchg
clc
or
push
das
dec
xor
out
out
push
pop
xlat
sub
lcall
cmc
sbb
les
inc
push
iret
loop
inc
and
or
pop
out
lea
pop
sub
dec
add
lea
sbb
mov
out
mov
rclb
icebp
negl
adc
outsb
leave
fcompl
cmpsl
cmpsb
xor
cli
sbbb
imul
bound
xchg
xor
mov
inc
insl
aad
xor
lds
cmp
outsb
gs
icebp
jnp
pop
push
aas
mov
sub
pop
mov
loopne
add
mov
lock
dec
repz
jnp
push
aam
test
add
mov
push
sbb
mov
add
insb
mov
movsl
and
outsb
dec
pushf
xchg
loopne
insl
pushf
jl
sbb
and
shll
in
pop
in
mov
mov
inc
and
mov
sbb
stos
or
push
cmp
addr16
push
jae
sbb
shlb
jmp
ror
jbe
hlt
jne
sbb
mov
mov
dec
mov
xor
push
cmp
inc
enter
mov
dec
leave
clc
stos
pop
pop
xchg
mov
aas
pop
push
xchg
aad
nop
stc
mov
mov
dec
jg
addr16
fsub
pop
sub
ret
stc
xchg
push
clc
cmp
fs
mov
mov
hlt
cmp
xchg
mov
xchg
in
adc
stos
movl
dec
sbb
lock
sbb
and
lret
pop
sbb
clc
mov
xchg
into
xchg
outsb
divb
enter
add
ljmp
push
dec
push
or
mov
dec
adc
out
push
test
mov
sbb
cmpsl
mov
dec
push
sub
addr16
push
jo
test
fsubrs
je
pushf
faddl
jns
sub
insl
in
add
adc
ret
mov
jmp
mov
arpl
sbb
and
inc
daa
cmpsl
add
jne
fcmovu
aam
sbb
push
dec
fs
and
push
lods
pop
fwait
sbb
cwtl
fstpl
ljmp
nop
fwait
int3
lds
sub
cmp
or
cltd
xchg
jbe
stos
push
dec
jns
mov
cmc
push
and
mov
xor
cmp
adc
push
push
inc
push
insb
or
xchg
stos
gs
mov
pushf
hlt
movlps
adc
shll
fsincos
in
cmp
ss
jbe
testl
lods
push
je
xchg
test
mov
fcomi
cmp
bt
nop
mov
fbld
scas
mov
inc
imul
into
aas
iret
cmp
mov
pop
inc
movsb
fwait
dec
xchg
lock
or
mov
push
stos
lret
xchg
outsl
or
cs
outsb
aas
push
jge
jbe
adc
push
lahf
lods
dec
jne
cmp
movsb
addr16
fbstp
loop
shl
test
mov
mov
pop
clc
mov
xchg
rcrl
orb
arpl
jecxz
js
ljmp
daa
popa
inc
shll
lods
pop
sbb
lods
or
movsb
or
adc
test
sub
mov
call
ljmp
jb
es
test
sbb
mov
pop
dec
scas
inc
int3
mov
push
stos
cmp
out
or
and
sub
repz
add
ds
nop
pop
cli
pop
movsl
mov
lock
outsb
inc
pop
test
inc
jl
addr16
inc
call
arpl
xchg
mov
cmp
mov
js
pop
dec
arpl
jecxz
lods
sbb
lcall
mov
sub
movsb
cmp
adcb
fisubs
pop
fdivl
std
std
adcb
inc
xor
mov
xchg
push
ficomps
adc
mov
insl
sti
push
mov
leave
cltd
adc
adc
jecxz
hlt
fimull
mov
xchg
dec
test
sbb
mov
xor
movsl
lea
sub
adc
gs
repz
into
pextrw
push
repz
lock
inc
adc
rcll
in
jp
sub
test
bound
mov
ret
or
inc
ficoms
xchg
mov
sbbl
jl
fsubs
imull
iret
inc
outsb
adc
loop
out
add
and
push
adc
shlb
xor
jp
mov
stos
je
xor
push
mov
mov
adc
fs
cmpsb
mov
mov
add
cmp
pop
jns
fs
xor
add
aaa
int
leave
cmp
rorb
adc
push
inc
shlb
iret
pop
cmpsb
jmp
lcall
mov
movsl
or
lcall
mov
xchg
or
in
xchg
mov
imul
enter
loope
repnz
inc
add
adc
xchg
sahf
imul
pop
mov
mov
dec
out
xor
dec
adc
dec
push
jne
int
test
int
sbb
pop
add
aad
sub
push
ss
xchg
rorl
and
xor
inc
hlt
mov
mov
imul
insb
dec
dec
sbb
movsl
push
mov
jl
xchg
out
sub
push
jl
and
adc
sahf
xchg
out
mov
jbe
pop
xor
adc
xlat
mov
jge
ljmp
sbb
and
cmp
fidivrs
sbb
loopne,pn
in
aas
js
out
xchg
pop
mov
adc
push
loopne
mov
jb
dec
sahf
xchg
enter
sub
sbb
fnstenv
hlt
sbb
out
mov
jbe
sub
rcll
gs
adc
ret
ljmp
cmc
dec
add
lahf
out
xor
in
dec
int3
addr16
mov
pop
inc
in
sahf
int
ljmp
loopne
ljmp
mov
xor
subl
hlt
and
push
mov
fiaddl
roll
xchg
cmp
dec
pop
js
jp
xorl
test
sbb
int3
mov
aad
shlb
insl
xor
lcall
dec
sahf
leave
enter
lret
push
loope
or
cmc
jb
hlt
lea
bound
ljmp
cmc
inc
push
hlt
sbb
dec
jl
cmp
adc
orl
jno
int3
pushf
inc
adc
bound
cs
xchg
xchg
popf
andl
lret
or
rorb
sbb
sub
outsb
lret
pop
cmpsl
sti
out
mov
cld
adcl
mov
push
push
pop
xorb
pop
mov
pop
insl
in
mov
rcll
pop
popf
inc
scas
cmp
faddp
sub
int
stos
sub
mov
dec
outsl
sarb
xchg
mov
mov
sbbb
fisubrl
outsl
mov
loope
lods
lcall
sub
jnp
pop
mov
nop
jp
into
aam
daa
sub
repnz
sbb
xor
nop
push
push
xchg
pop
cmp
cmp
push
cmp
cmp
jmp
sbb
cs
loop
cli
fildl
sub
mov
ds
adc
or
test
movsb
mov
xchg
jmp
push
jns
cmc
xchg
in
push
jb
adc
repz
mov
iret
mov
xchg
arpl
inc
mov
lahf
pop
fdivl
push
dec
push
mov
pop
nop
mov
dec
ljmp
adc
jge
dec
adcb
out
hlt
xchg
pusha
sbb
test
inc
pop
cmpsl
ret
cwtl
fsubr
shrl
or
fsubrl
iret
rorb
cmc
mov
sti
sbb
sub
or
outsb
push
sbb
loopne
lahf
xor
mov
and
mov
movsb
cmp
mov
xor
jae
pop
mov
cmpsl
in
es
gs
inc
aas
fneni(8087
adc
sub
insl
gs
pop
xchg
into
push
sub
xlat
push
lods
fmull
fs
mov
aas
or
sub
sahf
inc
push
xchg
lods
inc
push
jle
ret
lock
ror
fmul
pop
cmp
imul
push
sbb
add
movsl
push
fldt
add
inc
cmp
sbb
push
jae
clc
sub
scas
inc
imul
fdivl
fwait
and
mov
pop
leave
in
inc
add
mov
add
cmpsb
xchg
xor
pop
adcl
addr16
cmp
inc
loop
adc
cwtl
adc
rcll
icebp
lock
xchg
mov
xchg
sahf
mov
rcl
in
add
shl
sti
or
pop
mov
sbb
or
cmp
ljmp
mov
into
or
outsl
lock
push
nop
sbb
fcoml
adc
add
dec
outsl
cltd
lcall
push
fwait
addb
sbb
fisttpl
sbb
out
popf
dec
and
add
fidivrl
fidivs
out
inc
out
cmp
mov
mov
xor
mov
pop
imul
jbe
out
in
jmp
popa
andnps
adc
add
cmp
rorl
insb
jb
imul
mov
pop
push
inc
pop
imul
pop
rolb
pop
fimull
push
pop
jmp
cmc
xor
adc
cltd
stc
sub
cmp
test
nop
outsb
jge
xchg
push
mov
and
push
decl
xlat
stos
or
cmp
push
adc
lock
pusha
sub
out
and
inc
cmp
xchg
mov
out
roll
inc
loopne
jns
psllw
and
loop
mov
insb
mov
dec
add
inc
xor
iret
xor
pop
mov
mov
or
pushw
mov
xchg
into
dec
dec
sbb
shll
mov
aaa
pusha
adc
add
dec
mov
mov
pop
movsl
jnp
mov
or
in
xor
sub
repnz
jbe
push
lea
xchg
xchg
mov
cmpsl
cs
ret
mov
aas
es
ret
cmp
jbe
rclb
jl
lock
cmp
stos
add
jno
xor
cmp
cmp
loopne
es
xchg
xchg
leave
pushf
xorb
inc
or
and
push
dec
dec
mov
in
mov
mov
xor
das
fsts
rorl
out
cs
inc
stc
aad
xor
ret
push
ficomps
notl
cmp
adc
insb
jge
loop
pop
xor
cmc
inc
popa
dec
push
pop
lea
rorb
in
push
loop
or
mov
cwtl
out
test
test
mov
sub
or
das
or
daa
sti
flds
add
addr16
dec
inc
lds
push
jb
leave
rorl
stos
sbb
xchg
imul
jbe
mov
mov
and
leave
data16
lret
call
mov
imul
dec
sub
mov
scas
mov
jg
mov
stc
je
movsl
imul
lods
jle
mov
in
sarl
mov
mov
mov
insb
mov
sbb
out
push
jns
cmp
mov
repnz
push
push
adc
inc
pop
sub
sbbl
mov
fbld
jle
xchg
mov
int
pop
mov
sbb
pop
ds
jne
fcoml
lods
mov
and
inc
shl
pop
inc
into
out
dec
pop
dec
outsb
xchg
imul
mov
adc
push
sub
lods
ficoms
cmpsb
mov
xor
inc
aaa
cmp
mov
mov
divl
sbb
add
and
stos
clc
cld
scas
and
fmuls
or
jae
sbb
adc
xor
out
adc
sbb
loop
adc
es
into
dec
mov
sti
dec
rdpmc
jbe
movsl
cmp
arpl
xor
fldenv
jge
mov
mov
or
cmp
dec
lret
push
lcall
push
jp
dec
cli
pop
ljmp
lcall
jp
push
lcall
push
jp
dec
cli
pop
ljmp
lcall
jp
push
lcall
push
jle
dec
cli
imul
sbb
sub
pop
cli
dec
dec
jp
stos
aad
lds
mov
push
repnz
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
push
stos
cmp
cmp
cmp
add
push
add
pop
add
add
imul
mov
add
in
add
add
jl
mov
jne
xchg
add
add
add
and
into
add
push
and
add
outsb
add
inc
add
add
add
add
or
push
add
add
test
and
xchg
jne
xchg
add
add
add
add
add
sub
xchg
add
pop
add
xor
xchg
cmp
arpl
cmp
movl
faddl
insl
add
add
add
outsl
add
add
or
xchg
add
dec
add
add
cmp
cmp
inc
add
add
add
add
add
xor
xchg
add
add
push
mov
add
jae
sub
push
add
add
add
add
add
add
add
fiadds
or
data16
add
add
add
add
and
xlat
add
ret
add
add
xor
add
popa
add
lcall
add
mov
insb
add
add
dec
add
add
add
mov
pop
add
add
add
jl
xor
add
mov
add
add
jmp
scas
add
add
add
jno
push
add
icebp
add
sbb
arpl
add
arpl
pop
add
xchg
xlat
add
add
imul
jns
cmp
mov
add
add
add
add
imul
icebp
add
add
add
add
cmp
pop
add
add
cmp
cmp
cwtl
add
add
add
pop
add
rolb
add
add
add
add
add
add
add
add
add
mov
add
add
addl
add
add
add
add
add
pop
add
add
add
add
xor
or
leave
add
add
add
add
jns
outsl
add
or
pop
add
jns
cmp
inc
add
add
add
fiaddl
add
dec
add
add
add
add
add
add
add
add
xor
lcall
add
add
add
dec
add
add
mov
inc
add
cmp
mov
add
add
enter
popa
add
add
add
xchg
cli
add
add
add
add
add
add
inc
add
insl
add
add
add
add
and
insl
add
cmp
addb
add
add
add
add
add
add
add
add
add
add
jnp
pop
add
pop
add
add
cmp
push
add
popa
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
jns
outsl
add
add
cmp
cmp
movsb
add
add
add
add
add
add
add
or
in
add
cmp
pop
add
dec
add
add
xlat
add
add
inc
add
add
add
xlat
and
or
push
bound
mov
xchg
adc
cmc
push
and
or
mov
pop
jae
ret
pop
sub
or
mov
test
leave
fcomp
cmp
fcmovnu
cmpsb
repz
adc
nop
jg
clc
pop
xchg
inc
sub
xor
mov
push
in
pop
lcall
or
add
adc
sub
sbb
and
mov
mov
adc
sbb
in
and
stos
or
dec
adc
popl
jmp
fstpl
jecxz
mov
ret
xchg
das
add
mov
into
sti
pop
jle
test
into
sbb
xchg
rep
or
pop
pusha
jne
in
xor
inc
adc
xchg
lret
or
and
mov
repz
imul
dec
lcall
sbb
faddl
jbe
pop
clc
test
dec
test
popl
mov
xchg
shlb
dec
xchg
mov
les
xor
xchg
jmp
movsb
jge
lcall
xor
pop
loopne
jmp
xor
mov
ljmp
or
outsb
sbb
xchg
pop
notb
cmp
pop
sub
out
stos
faddl
int
or
or
scas
insb
rol
mov
push
subb
xor
xor
cltd
gs
rorb
in
ret
aaa
loopne
inc
aad
icebp
jne
andl
clc
es
and
jge
rorb
xchg
jmp
xor
arpl
mov
mov
loopne
ficompl
cmp
pop
cmp
jp
cmp
jmp
mov
inc
pop
mov
add
in
mov
nop
adc
in
mov
xchg
stos
shll
lret
call
scas
cwtl
push
sbb
lret
inc
dec
outsb
sbb
enter
and
scas
mov
cmpsb
or
enter
adc
xchg
in
dec
mov
mov
imul
ljmp
mov
sbb
mov
jne
mov
xor
mov
insl
shll
fs
push
cmpsb
mov
mov
xchg
pop
pop
test
jns
push
and
pop
mov
push
mov
aad
das
mov
pop
mov
jp
add
and
jnp
stos
sti
xor
loopne
sub
lahf
jecxz
adc
aaa
mov
dec
add
in
jne
loop
xor
add
pusha
repz
insb
nop
add
scas
sub
mov
cmp
mov
mov
lret
push
lods
movsl
xchg
cmpsb
xor
sub
stos
adc
mov
test
mov
mov
xchg
cwtl
test
push
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
