call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
or
sbb
sub
cmp
inc
xor
negb
je
mov
pop
test
or
xchg
jmp
lret
sbb
sub
cmp
dec
mov
imul
mov
sbb
sub
cmp
rcrb
ret
cmp
dec
xchg
pop
subl
mov
fsts
fmull
leave
inc
stos
outsl
stos
pop
nop
push
jge
js
sub
push
pop
orb
inc
xchg
mov
mov
repz
nop
add
mov
push
loop
stos
dec
sti
pop
push
xor
cmp
sahf
imul
mov
push
jae
inc
fdivs
sbb
mov
aaa
dec
mov
add
enter
push
stc
jle
xchg
ds
adc
test
mov
jns,pt
adc
dec
xchg
inc
negb
aam
sub
pushf
and
adc
mov
jns
xchg
mov
xchg
movsb
and
xor
cltd
or
push
js
mov
adc
jno
add
ds
imul
pop
xchg
roll
sub
cmp
sub
cmp
dec
mov
imul
mov
add
xor
cmp
test
sub
ss
push
std
fdivrp
and
pop
fisubrl
push
dec
outsb
cwtl
sbb
insl
mov
cwtl
js
sub
adc
sub
cmp
sti
aas
ds
mov
sbb
lret
sbb
outsl
pop
mov
imul
mov
sbb
sub
cmp
lret
sbb
sub
cmp
dec
mov
imul
mov
sbb
sub
cmp
lret
js
mov
inc
stc
cltd
add
movsb
cmp
dec
cmpsl
xchg
jae
sub
cli
call
repnz
push
ss
adc
in
pop
jmp
mov
xor
popl
dec
loope
std
leave
add
and
hlt
or
mov
roll
mov
aad
mov
pop
pop
or
loop
xchg
lret
jns
pushf
fidivs
sub
mov
scas
enter
aam
pop
div
sub
xchg
ja
push
cmp
inc
ret
mov
push
cmp
jns
mov
ret
xchg
js
jno
mov
xchg
aas
push
mov
mov
jl
pop
test
ret
add
std
add
add
and
ss
shl
call
mov
out
repz
pop
mov
lret
fsubl
in
pop
sbb
pop
cld
cltd
outsb
inc
jecxz
inc
loopne
pusha
adc
mov
jmp
js
fdivrs
into
out
cltd
mov
add
test
cmpsl
xor
mov
xchg
cs
out
rorl
sub
and
mov
dec
push
adc
scas
and
das
or
dec
inc
es
js
popa
xchg
inc
inc
fiaddl
out
das
rclb
rorl
frstor
lret
mov
lahf
and
inc
notb
mov
cmp
and
sbb
out
clc
xchg
jb
xchg
imul
std
popa
mov
mov
enter
push
inc
xor
adc
es
sub
cld
lock
adc
mov
sub
shll
loop
insl
adc
adc
xchg
repz
xchg
cli
xor
in
mov
sarb
dec
fs
xor
enter
dec
hlt
dec
in
xor
iret
outsb
into
cmp
mov
mov
inc
xchg
js
lret
dec
into
stos
mov
daa
call
in
int
inc
imul
jne
in
call
loopne
xchg
adc
lret
sub
inc
jae
push
xlat
jno
sahf
cmp
xor
jb
mov
mov
shrl
insl
outsl
cmp
jo
push
pushf
repz
mov
mov
adc
gs
sti
mov
or
jmp
loop
jne
mov
mov
in
les
xchg
mov
add
out
and
sbb
int3
out
or
cmp
xchg
xchg
shlb
dec
push
out
mov
out
loope
push
sti
rcll
daa
cmp
mov
jne
mov
leave
mov
sub
jmp
jbe
push
pushf
mov
mov
lds
pop
lcall
outsl
or
mov
dec
test
divb
out
popf
push
shld
aas
xor
mov
sub
pop
or
ja
sbb
cmp
enter
nop
orb
jg
pusha
jbe
ja
fs
lds
add
add
aad
sub
fcomps
add
and
inc
pop
adc
ljmp
cli
add
and
cmp
jg
fcompl
aas
movsl
xchg
or
jno
out
call
jl
adc
push
or
push
push
jle
leave
push
jne
rclb
or
fwait
std
sub
push
mov
jno
sahf
mov
scas
loope
jmp
or
iret
icebp
mov
mov
jle
shlb
daa
xor
xchg
mov
stos
sub
or
dec
ss
not
mov
mov
or
and
sbb
push
repz
lahf
pop
mov
stos
mov
dec
mov
jns
push
jbe
fs
inc
pop
scas
sub
sub
xlat
nop
aad
pop
mov
js
or
ret
outsl
dec
enter
pop
inc
cmp
sbb
dec
cli
or
mov
jno
push
and
mov
hlt
incl
jl
test
stc
push
jp
push
or
mov
and
and
test
lahf
push
aam
lock
std
fs
jo
pop
imul
ljmp
lds
sub
mov
call
mov
ja
lock
jno
lahf
scas
adc
mov
pop
mov
rolb
cmpsb
pushf
cmp
xlat
ljmp
aad
cmp
in
popa
xor
add
add
ficomps
out
xor
pop
sbb
int3
dec
xor
pop
in
add
ljmp
xchg
mov
push
mov
cmp
adc
call
ret
xor
cmpsl
inc
jp
cmp
fstl
shl
les
lahf
ret
in
xchg
xor
aad
sbb
cli
aas
or
add
ljmp
sbb
mov
lcall
add
and
mov
aad
lock
sbb
add
js
stc
pop
xchg
out
or
and
push
popl
jae
or
ja
add
jmp
dec
mov
or
or
sysret
xchg
stos
jp
fsubl
jns
cmp
push
jns
dec
inc
aad
js
aas
aad
xchg
ja
mov
and
jmp
test
push
std
xor
inc
loope
sub
mov
pushf
cmp
fisubl
in
inc
xor
cwtl
push
dec
mov
ss
jo
fiaddl
filds
aad
dec
mov
data16
jo
adc
dec
mov
cmp
pop
lret
dec
pusha
inc
leave
mov
ret
cmpsb
leave
scas
fincstp
push
xor
loope
insl
cld
sti
mov
test
idivl
inc
adc
cmp
sub
xor
add
or
clc
and
scas
cmp
cli
or
cmp
inc
mov
into
push
lret
movsb
adc
sbb
dec
shl
mov
mov
inc
xor
sub
jne
adc
inc
ss
adc
push
jne
and
jae
mov
mov
sbb
pop
adc
jnp
xchg
movsb
cmp
into
fs
test
add
xchg
add
enter
mov
scas
cwtl
dec
aad
lea
inc
icebp
mov
xor
dec
adc
divl
in
popw
cmp
ret
dec
sub
add
rcrl
sbb
push
mov
scas
cld
add
pop
pop
mov
pop
fs
cltd
mulb
out
aam
aaa
repz
fmulp
xchg
negl
mov
in
sarb
fs
fcmovnb
mov
sbb
dec
mov
dec
mov
pop
xchg
pusha
inc
negl
add
imul
mov
mov
insb
ret
dec
into
mov
pop
loopnew
stos
inc
aaa
subl
push
xchg
jge
andb
pop
stos
and
dec
fisubrl
cli
xor
mov
sbb
cmp
sarb
iretw
ss
push
cmp
mov
cmp
les
rclb
fbstp
pop
sbbl
ret
push
ret
push
mov
jecxz
push
data16
imul
loope
mov
dec
cmp
mov
in
adc
stc
out
dec
pop
nop
mov
sub
ja
scas
sarl
push
pop
les
adc
pop
sti
in
mov
stos
insb
sub
or
inc
insl
loopne
mov
or
loopne
cmp
xchg
inc
mov
int3
ret
rolb
sbb
pop
jbe
jecxz
inc
cmp
xor
add
jp
call
aad
mov
fs
cmp
aad
or
and
ljmp
insl
pop
js
outsb
push
icebp
mov
dec
xor
pop
add
jnp
or
daa
test
or
dec
fstpl
sub
fists
pushf
dec
xchg
sahf
aaa
nop
js
cmpsl
push
mov
lea
sub
into
fucomi
mov
je
cwtl
shr
sub
add
dec
cli
sarb
jmp
mov
fstps
out
xchg
xchg
in
dec
jp
push
push
xchg
inc
add
mov
dec
cmpsl
mov
jp
push
out
push
xchg
out
aad
sar
ds
pop
les
dec
mov
or
sub
sti
cmp
xor
sbb
dec
arpl
inc
pop
dec
orl
repnz
adc
sbb
sub
fnstenv
xchg
jno
and
rcl
push
sub
das
jns
xchg
jmp
add
push
lea
out
ds
cmp
pop
cltd
lahf
popf
mov
pop
idivl
mov
and
lock
or
cmc
js
rolb
jg
or
inc
xlat
dec
dec
scas
sub
cmc
xchg
aas
cmp
pop
idivl
mov
inc
scas
ret
into
lods
xchg
and
movsl
jge
or
push
lret
orb
push
jo
in
inc
push
shl
arpl
sbb
pop
adc
add
gs
int
pop
test
ds
clc
sub
cmp
aas
scas
or
mov
lods
mov
inc
lods
aad
aaa
mov
dec
repnz
fcmovnbe
out
jmp
mov
push
xchg
out
ret
inc
cmp
xchg
sbb
sbb
test
js
cmp
ficoms
fbld
pop
inc
mov
fwait
pop
imul
jle
sub
ret
mov
popa
or
mov
cli
movsb
rolb
test
fcmovnbe
test
xor
sti
mov
cmp
mov
mov
adc
cmpsl
mov
lods
popf
movsb
loope
les
ljmp
lods
push
bound
cmc
enter
iret
ljmp
mov
stos
dec
dec
mov
out
shll
lea
mov
std
in
jmp
pop
imul
pop
arpl
xchg
arpl
repz
mov
xchg
cmp
and
xchg
push
and
cmp
pop
outsb
jnp
adc
pop
sbb
mov
sarl
mov
xor
mov
mov
lret
pop
stc
sarb
or
dec
and
lock
jo
xchg
mov
rolb
inc
xchg
fcomps
shrb
jp
jmp
sbb
xchg
test
dec
xchg
repnz
aad
movsl
rcrb
inc
imul
pop
or
cmpsb
mov
ljmp
mov
xchg
sti
or
sbb
xor
pop
cmpsb
out
jne
ret
cld
movsl
xor
test
sub
mov
fildl
std
sti
ljmp
lock
enter
jae
mov
xor
pushf
xchg
ret
arpl
leave
adc
mov
hlt
stos
jge
and
xor
push
lock
loopne
leave
int
ds
aas
mov
jne
jb
mov
in
xchg
inc
jbe
add
mov
aad
movl
jp
adc
inc
mov
rcll
rolb
in
push
sbb
lea
or
jmp
xchg
cmp
xor
lods
scas
dec
mov
fld
in
push
lods
dec
dec
lret
jg
xor
lret
in
inc
insl
mov
jnp
xor
xchg
sub
in
push
xor
jns
push
add
movsb
mov
sti
testb
mov
iret
add
push
sub
cmpsb
mov
cmp
dec
dec
and
rcll
mov
pushf
movsb
xchg
in
or
dec
aad
pop
dec
ljmp
jge
or
mov
dec
pop
jbe
test
cltd
mov
out
pop
pop
fwait
jo
les
push
mov
out
and
sarb
loopnew
mov
push
mov
iret
outsb
push
cltd
jl
scas
mov
xchg
into
xchg
add
mov
sub
bound
and
std
xchg
ret
pop
fdivrl
xor
add
add
cli
jns
xor
inc
cmp
fs
cmp
mov
stos
push
sub
push
mov
loop
cmpsb
jle
jle
out
push
xor
js
jmp
xor
xchg
xchg
arpl
xchg
add
fsubrp
movsb
inc
fistpll
lcall
nop
stos
sub
fwait
sbb
std
push
add
fcompl
pop
cmpb
cmpsl
ljmp
mov
cltd
sbb
out
cmpsb
and
cmp
mov
add
jae
popf
jns
mov
or
xchg
mov
xchg
jb
jno
std
popa
bnd
mov
negb
add
mov
and
pop
xor
sahf
add
into
dec
mov
cmp
mov
xchg
popa
cmp
push
sbb
dec
mov
lds
ds
mov
notb
imul
stos
mov
movsb
leave
sub
dec
insb
testl
inc
xchg
dec
data16
cltd
sbbl
mov
mov
ficoml
dec
pop
in
in
or
lods
push
jo
cli
dec
pop
xchg
fdivrl
add
jb
bound
lret
andl
xor
shll
mov
imul
imul
cwtl
popa
gs
lds
loope
cld
jmp
sbb
ret
test
jb
mov
jo
je
fs
in
lods
and
push
sti
mov
out
pop
lea
push
push
jno
cmp
and
mov
sbb
mov
sbb
jecxz
daa
add
or
sub
lock
fldpi
push
addr16
dec
add
cmp
out
ret
inc
cmp
hlt
add
shlb
dec
mov
aaa
test
pop
jecxz
jne
mov
repnz
push
shrb
roll
fsubl
cmpsb
mov
jmp
cmp
in
movsb
sahf
inc
mov
and
sbb
mov
call
in
cmp
out
jo
xor
das
aaa
mov
out
sub
pop
pop
push
adc
push
pop
cmp
mov
sbb
jne
mov
out
lcall
cmp
jns
shr
in
test
js
xchg
repz
sbb
or
cmc
ljmp
icebp
pop
and
into
xchg
dec
push
lds
jecxz
mov
or
cmpsl
pop
xor
jns
sbb
movsb
sar
xchg
mov
push
xchg
les
scas
std
push
ja
lods
mov
insb
out
call
inc
and
subb
adc
mov
aaa
jae
icebp
push
rcrl
cs
pop
sub
jae
inc
fnstsw
int
in
add
pop
outsb
xor
xchg
lods
data16
or
cld
dec
xchg
inc
daa
sub
dec
les
rolb
lds
add
shlb
push
mov
cmp
jo
sub
ja
sbb
push
mov
imul
add
jle
mov
fcomi
arpl
aaa
sub
in
adc
out
cmp
repz
mov
push
cli
mov
lods
fisttpll
sbb
xchg
xchg
adc
add
hlt
cmc
fstps
mov
out
call
cmp
mov
ret
int3
inc
mov
sbb
aaa
mov
cmpsl
jp
pushf
and
adc
mov
nop
xor
popa
decl
movsb
inc
push
mov
popa
sub
inc
and
rclb
mov
xchg
ja
das
mov
scas
stos
and
loop
xor
repz
bound
inc
xor
lret
push
and
pop
in
lock
sbb
call
add
out
data16
push
shll
rcr
pop
inc
adc
dec
mov
mov
cmp
mov
xchg
lock
outsb
bound
ret
add
shrb
lea
mov
lods
mov
dec
xor
jle
add
aaa
out
jns
cmp
data16
pop
sbbl
cli
js
icebp
cmovp
adcl
ret
sub
push
in
add
frstor
push
xlat
cmpsb
mov
push
mov
sahf
ret
xchg
or
mov
mov
inc
xor
lahf
aad
fldcw
pop
mov
push
inc
arpl
popa
movsl
adcb
xor
dec
inc
xor
cmpb
inc
push
jp
or
repz
lock
xchg
icebp
fiadds
mov
xchg
push
mov
xor
xchg
cmp
mov
bound
inc
out
lock
xchg
or
xchg
xor
push
sbb
aas
out
lret
outsb
ud2
stos
or
outsl
shlb
ficoml
outsl
das
and
push
outsl
pop
outsb
sub
or
and
cmp
mov
fbstp
dec
mov
jnp
sub
mov
adc
xor
sti
int3
mov
mov
sub
pop
add
or
popa
rorb
call
int3
rol
jns
xchg
rcl
pop
and
push
jbe
xchg
push
daa
jecxz
mov
mov
out
adc
add
inc
dec
mov
push
push
mov
adc
popa
xchg
divb
inc
pop
int
sbbb
push
mov
push
sub
dec
and
cmp
xor
pop
push
push
sub
mov
cmp
mov
call
xchg
mov
inc
scas
push
fwait
cmp
jl
movsl
inc
int
das
push
fidivs
shlb
aas
jle
outsb
jbe
jo
jg
cmpsb
fwait
sbb
stos
loopne
sbb
movsb
mov
dec
or
xor
pop
xchg
push
inc
aaa
mov
arpl
lret
leave
lock
mov
lret
jmp
and
inc
outsb
cli
sarb
adc
rdpmc
inc
or
idivb
mov
mov
scas
inc
mov
xor
cmc
or
in
mov
lea
dec
jecxz
movsb
shl
mov
mov
call
sarl
test
call
fdivl
test
inc
addl
add
or
bound
jae
fs
xchg
lods
std
mov
push
mov
sub
lret
jns
push
or
jnp
add
addr16
clc
mov
mov
mov
inc
pop
out
out
pop
push
orb
faddl
jle
and
sbb
mov
dec
mov
xor
fisttpl
pop
fisubl
adcb
and
clc
cmp
push
dec
jmp
dec
nop
mov
fstpl
jb
test
cmp
into
enter
mov
sbb
cmpsl
je,pn
mov
and
idivb
mov
xchg
lds
lods
repnz
data16
dec
lahf
insl
push
fnstsw
call
xchg
cs
xor
mov
push
mov
test
mov
fcomip
push
insl
cmp
jnp
fidivl
in
test
sar
dec
xor
lret
jo
lea
test
shlb
lret
add
mov
adcb
push
call
jle
push
push
inc
mov
orb
and
sbb
mov
mov
mov
xchg
and
int
mov
dec
pushf
scas
out
add
rclb
ss
pop
push
inc
out
pop
repnz
pusha
mov
adc
dec
add
imul
inc
mov
loope
cmp
addb
push
cmp
popf
adc
jmp
imul
out
inc
add
cmp
mov
cli
xor
pop
es
and
cwtl
dec
pop
gs
cmpsl
mov
xor
dec
push
inc
pop
movsb
test
mov
call
xchg
jne
imul
imul
pcmpgtd
or
lods
stc
fs
pxor
dec
xlat
inc
stos
loope
and
adc
add
testl
sbb
inc
inc
pushf
icebp
daa
orb
or
sbb
mov
push
std
and
add
ja
clc
int3
inc
inc
pop
daa
cmpsb
adc
pop
push
push
int
cmp
lahf
pop
cltd
loope
fidivl
dec
fmull
inc
nop
ljmp
xor
daa
aad
cld
addr16
ds
push
cmp
cmp
imul
push
push
in
lcall
inc
popa
sbb
sbb
add
lcall
cmp
mov
xchg
inc
inc
orb
xor
std
cmp
es
push
push
imul
jnp
ss
fldl
inc
ret
cmpsl
push
sti
xchg
push
jns
scas
nop
mov
lods
ja
adc
or
pop
jg
inc
lds
xchg
repz
jg
dec
aam
jae
add
sti
add
push
inc
gs
xor
xchg
lcall
int3
stos
nop
mov
rolb
jmp
sbb
movb
lcall
push
aaa
das
pop
ret
aaa
test
fs
xor
lock
fcomps
insb
inc
mov
loop
pop
stos
mov
mov
cld
inc
cmpsl
cli
pusha
cmpl
inc
xor
movsb
add
ljmp
loop
add
stc
inc
pop
cmp
sti
sbb
repz
add
lock
clc
cmc
jl
sub
jg
xchg
or
sbb
mov
cmp
sbb
je
mov
test
lret
dec
test
jne
test
shr
cmp
arpl
push
add
push
adc
mov
ds
pop
push
cmp
xchg
jne
mov
imul
pop
leave
jnp
mov
push
jmp
push
cmp
sbb
push
cmpsb
cmp
dec
addr16
lret
mov
push
loope
clc
and
fs
mov
loopne
in
popf
daa
xchg
push
push
sbb
inc
inc
add
push
add
xchg
sub
adc
push
mov
or
sub
mov
jns,pn
testb
fs
out
mov
cmpsb
loope
add
push
jmp
sti
dec
mov
imul
mov
sbb
sub
cmp
lret
sbb
sub
cmp
dec
mov
imul
mov
sbb
sub
cmp
lret
sbb
sub
cmp
dec
mov
imul
mov
sbb
das
stc
aas
or
sbb
sub
cmp
dec
mov
jmp
dec
data16
add
or
adcl
push
add
in
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
sub
jb
inc
push
push
sub
pop
jno
js
mov
cmc
repnz
shlb
adcb
inc
inc
push
push
and
add
bnd
aad
movsl
mov
xchg
xchg
mov
inc
xchg
push
xor
add
adc
fcompl
rolb
out
xchg
and
push
push
add
and
add
push
icebp
mulb
jle
lock
or
jge
fsubrl
cs
xchg
sbb
or
and
cmp
sbb
ja
movsb
inc
mov
lods
jne
mov
movsl
and
or
sub
pop
mov
lret
popf
or
inc
and
lret
jmp
inc
lock
sub
nop
jl
mov
decl
scas
fisubl
mov
inc
std
pop
inc
and
ds
loope
push
not
and
loopne
jne
mov
jmp
in
xchg
sbb
aad
and
inc
rclb
jb
inc
cmp
and
add
loop
repnz
mov
icebp
aam
lsl
dec
dec
inc
jae
addr16
test
mov
int3
iret
fcmovne
icebp
add
mull
std
cmp
inc
sahf
add
imul
sahf
mov
int
not
cld
pop
xor
xor
dec
xor
adc
loop
repnz
shlb
adcb
inc
inc
push
push
and
add
repnz
shlb
adcb
in
mov
subl
and
push
jno
cmpsb
sti
inc
ss
or
jae
je
movsl
dec
dec
lea
dec
push
in
push
rcrb
mov
inc
sbb
int
inc
sub
pop
enter
dec
mov
jecxz
mov
outsb
faddl
icebp
cmp
dec
lret
xchg
lds
inc
ret
push
add
push
cltd
sub
scas
xor
push
pushf
add
mov
fildll
sub
mov
inc
enter
test
fsubrl
push
cmp
cmp
mov
push
fcoms
testl
lcall
pushf
adc
ss
jmp
sbb
lds
cwtl
and
lods
mov
fistps
and
mov
inc
in
or
mov
pusha
hlt
lea
xor
out
sbb
outsb
sub
daa
shll
push
pop
sti
rcrl
mov
add
jmp
sbb
add
repnz
xchg
pop
mov
mov
or
loope
mov
loope
movsl
dec
pusha
and
jg
inc
aam
cwtl
sahf
xor
xor
cmp
aaa
rclb
cld
cs
insb
shlb
ja
cli
adc
lret
scas
ljmp
aad
out
ss
loope
mov
add
notl
sarl
dec
or
out
add
dec
dec
aad
movsl
psrad
es
jnp
jbe
mov
adc
sub
rol
pop
nop
add
or
je
cmp
mov
daa
sub
cmpsl
pop
mov
cmp
pop
pop
in
sub
or
push
out
inc
pop
xchg
cmc
xor
xor
cmp
out
rorl
sub
xor
das
dec
push
xorl
adc
int3
xor
movsb
aaa
mov
arpl
cld
dec
aam
push
cmpsb
inc
sbb
adc
rorl
lret
jno
nop
std
push
cltd
inc
jmp
mov
bound
rcrb
pop
xor
sahf
or
inc
addr16
jnp
adc
hlt
out
pop
in
xor
icebp
xchg
jo
fstp
lods
dec
inc
hlt
cmpsb
or
scas
loope
fwait
cmpsl
call
xlat
add
add
lret
fwait
or
jbe
cmp
mov
test
cli
pop
and
xlat
cmp
xlat
jb
clc
inc
pop
lds
add
mov
orl
call
pushf
fcomip
add
push
mov
cmp
lea
mov
les
cmp
and
nop
add
dec
push
adcl
xor
lahf
xchg
jle
ret
mov
push
scas
cmc
xor
daa
ss
nop
popf
add
les
mov
mov
mov
mov
aad
test
into
rcrl
pop
rcrl
and
lods
insb
inc
icebp
rcll
add
hlt
adc
mov
sbb
sub
enter
fdivrl
fwait
loopne
orb
mov
mov
mov
lea
in
jp
push
andl
add
sbb
add
iret
shll
cltd
lcall
lea
dec
repz
imul
cs
lea
xor
inc
insb
pop
jmp
repnz
pushf
dec
negb
adc
mov
js
sahf
lods
aaa
cmp
repz
mov
sbb
cmp
dec
mov
pop
pushf
cli
mov
adc
mov
adc
push
mov
jg
cmc
or
push
divb
stos
cltd
int
xchg
add
lock
out
push
lahf
and
enter
cmp
lock
orb
scas
pop
sti
mov
mov
sbb
dec
pop
xchg
adc
pop
and
dec
fmuls
xchg
insb
movsb
gs
push
inc
pop
iret
cmpl
and
mov
jo
jnp
pop
jge
nop
and
test
adc
mov
dec
adc
test
stos
xor
mov
or
js
jecxz
mov
xchg
xchg
nop
stc
and
je
pushf
mov
movl
mov
out
cmp
lret
xor
cmp
adc
push
pop
adc
xchg
sub
xchg
loope
mov
cmpsl
mov
test
push
inc
les
aas
pop
xor
and
int
jb
daa
jno
shrb
and
jle
mov
mov
dec
jae
shlb
lret
lcall
pop
ja
loop
mov
pop
jge
daa
or
cmp
std
lods
xchg
and
ror
pop
dec
add
lods
sbb
xchg
cmpsl
loop
mov
fnstcw
mov
mov
arpl
mov
fsubrl
xchg
test
in
test
loopne
xchg
pop
xchg
in
lods
jae
sub
sbb
dec
and
add
and
ret
inc
std
jo
gs
fistpll
dec
sbb
push
movsl
xchg
fstps
lahf
enter
xor
xchg
cmp
cltd
cld
adc
dec
push
adc
mov
int
sarl
push
stc
mov
js
lock
sbb
mov
mov
aam
cmpl
ljmp
call
mov
add
push
outsl
sbb
lods
push
cmp
xchg
fsts
scas
lret
sahf
call
add
fimuls
ret
andl
pop
bnd
push
daa
ja
sbb
pop
aam
ror
or
movsl
xor
and
dec
push
test
stos
shlb
dec
jl
out
sbb
sbb
xor
mov
jge
test
xchg
xchg
rorb
dec
cmp
jne
dec
mov
add
add
push
sbb
out
push
push
sbb
mov
loop
mov
iret
push
daa
mov
xor
sahf
push
mov
xor
or
or
mov
cmpsb
mov
sub
movsb
and
xlat
movsb
enter
and
cmp
jne
call
inc
ja
imull
enter
jne
cmp
notb
dec
test
insl
pusha
jbe
pop
sub
xor
inc
jmp
cmc
ss
add
ds
in
push
shrb
push
les
push
out
jg
lods
fwait
jbe
fldl
mov
or
fsubs
add
mov
xchg
lds
pop
lods
adc
or
repnz
or
scas
lods
cmpb
xor
dec
sbb
mov
imul
orb
leave
jmp
pop
stos
pop
leave
adc
imul
adc
xor
inc
pop
adc
aas
stos
fsubrs
fs
mov
jmp
cmp
adc
dec
and
idivl
das
ljmp
jmp
lahf
xor
cli
mov
leave
imul
jne
imul
jae
inc
mov
imul
mov
repz
xchg
ror
sbb
cs
pop
inc
outsl
cmc
daa
pop
pushf
mov
aaa
cmp
mov
jo
ret
fmull
ja
test
call
clc
push
fimull
js
jne
incb
jns
andb
in
repz
rorb
mov
fsts
cmp
dec
jnp
lahf
int3
stos
rol
test
jle
fwait
ret
scas
mov
fistl
sbbb
jbe
in
push
or
xchg
cmp
test
rcrb
mov
jg
xchg
hlt
lea
push
jmp
mov
xchg
je
cmp
stc
cmpsb
fsts
adcb
push
cmp
push
xlat
xor
cltd
push
aas
lahf
inc
mov
mov
dec
aad
dec
jg
push
out
lret
lods
pop
aas
jne
xor
xor
mov
jl
shrl
jecxz
clc
faddl
push
subl
lods
and
hlt
sub
cltd
xor
xchg
icebp
decb
test
push
movsl
pushf
fdivrp
nop
iret
push
pushf
mov
jns
incl
scas
ret
stc
faddl
or
cs
dec
add
test
lcall
mov
mov
push
or
data16
or
xor
insb
ret
enter
jmp
xchg
lahf
rol
in
add
ds
es
lds
sub
call
mov
dec
push
out
adc
or
sbb
mov
rclb
repz
hlt
shlb
adc
fistl
stc
jl
mov
out
or
pop
test
sbb
outsl
mov
repnz
rorb
push
cmp
sbb
sub
mov
pop
icebp
mov
mov
jecxz
inc
push
test
ljmp
lret
stc
add
aaa
and
push
cmpsl
fimuls
add
pop
filds
aas
cmpsl
int3
ljmp
pop
pop
sbb
dec
icebp
dec
push
jmp
xchg
lea
xlat
cli
jo
jo
xor
std
mov
outsb
cmp
mov
dec
test
les
fisttpll
cmc
mov
push
pusha
mov
aaa
data16
mulb
xor
xor
icebp
pop
jp
jl
jnp
jb
push
outsb
test
inc
int3
or
movsl
divb
fldcw
push
ljmp
ror
cmpsl
in
inc
add
clc
and
imull
lret
sbb
cmp
xchg
fwait
cld
lods
data16
or
mov
jae
aam
shrb
xchg
push
out
aaa
cmpsb
aad
lea
xor
popa
cwtl
std
jnp
cwtl
loope
dec
cmp
jg
pop
inc
push
add
call
mov
fs
fisttps
in
mov
aaa
mov
dec
mov
xchg
js
dec
call
cmp
mov
out
fcmove
sbb
leave
mov
jmp
push
cmp
scas
jne
push
cld
fwait
arpl
rcrl
adc
xchg
xchg
sub
neg
xlat
les
sbb
mov
stc
xchg
sti
popf
mull
mov
scas
in
mov
push
gs
adc
das
mov
sbb
popf
add
cmp
push
dec
inc
mov
rcrl
pop
lret
jne
pop
inc
xchg
mov
nop
jnp
mulb
pop
adc
mov
pop
lret
sbb
xor
add
push
sarl
and
jg
mov
jmp
and
in
xchg
data16
leave
movsl
dec
je
adc
or
loopne
loope
pop
xchg
dec
jecxz
dec
daa
sbb
or
inc
in
lahf
mov
mov
mov
pop
outsb
lret
fwait
push
pop
mov
ds
push
ficoms
xchg
jae
pop
xor
cmp
dec
movsl
sub
fnstenv
pop
out
outsl
adc
in
testb
pop
mov
insb
jg
inc
outsl
inc
fxch
in
in
ret
mov
out
pop
out
cmp
cli
stc
pusha
push
std
mov
mov
mov
shll
int3
insl
add
das
test
ret
sbb
or
das
out
iret
dec
inc
cwtl
dec
das
pop
popf
enter
scas
jns
jb
pop
pop
ret
fchs
push
iret
cmp
fwait
adc
fstl
push
adc
enter
pop
pop
fidivl
lret
inc
sahf
mov
in
sbb
xor
ja
cmp
scas
xchg
push
test
and
data16
dec
testl
or
shrb
in
sbb
mov
sbb
adc
repnz
shl
sub
lret
xchg
and
lahf
fcompl
or
cmp
scas
enter
cwtl
dec
mov
in
push
mov
imul
inc
xchg
sub
outsl
pop
sub
dec
xchg
lds
dec
icebp
frstor
add
js
lahf
ret
or
adc
cmp
fisubrl
das
cwtl
popa
negl
mov
inc
insl
pusha
xlat
inc
mov
rcrb
dec
jae
negb
mov
cmp
adc
aam
sbb
jmp
mov
cmpsb
dec
cld
rcll
mov
loope
xchg
aam
cmp
push
jmp
loope
dec
lea
dec
sub
ljmp
mov
sbb
push
push
push
jnp
mov
aaa
test
or
gs
cmp
push
lods
jl
pop
dec
mov
sub
ret
adc
dec
xchg
push
mov
sahf
in
mov
xor
cmc
dec
inc
stc
out
jg
inc
js
push
outsb
mov
inc
mov
sbb
sub
fdivp
dec
daa
int3
imul
fs
lret
mov
movsl
xor
inc
aaa
out
in
dec
enter
dec
sar
aas
cmpsb
int3
mov
addr16
jmp
sahf
mov
push
jmp
lret
js
adc
andb
dec
push
jmp
lods
popf
jle
cmp
or
loop
jbe
gs
in
xor
stos
jmp
jne
into
add
gs
lea
mov
leave
int
push
out
xor
lcall
mov
icebp
nop
sbb
cmp
addr16
xor
ret
repz
lcall
sub
loop
repz
mov
pop
inc
jnp
leave
stos
push
movsl
fld
push
pop
cli
dec
sarb
cwtl
gs
add
mov
cmc
pop
cmpsl
xor
pop
xchg
pusha
icebp
shll
aaa
and
in
movsl
mov
dec
jo
lcall
je
mov
or
mov
ret
dec
repz
or
add
lcall
adc
fidivrl
mov
lret
scas
popa
imul
imul
add
cmp
sub
notb
or
stos
adc
inc
stos
cmc
mov
movsb
outsb
ret
jne
repnz
xor
mov
dec
inc
adc
jb
shrl
dec
daa
fldenv
mov
xchg
cmp
cmp
cmc
movsl
sbb
ss
jle
dec
pop
xlat
push
push
dec
fisttpll
and
jg
mov
je
ror
fwait
mov
mov
cmpsl
daa
out
movsb
push
popa
pop
out
inc
mov
lret
out
sti
mov
mov
test
pushf
push
and
mov
test
in
lret
add
scas
data16
ds
mov
outsl
dec
cmc
leave
cmpsl
mov
and
ds
std
push
add
lds
cmp
jnp
adc
daa
movsl
mov
adc
jp
rcr
scas
sbb
mov
mov
and
pushf
push
mov
jp
fidivs
cwtl
fildll
call
dec
test
cmp
xor
dec
mov
mov
jno
inc
add
cld
stos
cmp
mov
mov
daa
push
xor
fmull
and
stos
or
xor
mov
jmp
cs
xor
aad
jo
mov
jle
lods
ret
into
jns
sbb
fistpll
fs
jmp
aaa
test
pop
out
mov
jmp
into
bound
xor
gs
cmp
pop
push
push
andb
and
mov
std
and
push
js
or
mov
adc
hlt
adc
sti
mov
ficoms
neg
sti
bound
pusha
jo
jg
scas
addl
cwtl
dec
lcall
fsubs
cmpl
leave
mov
cmpb
mov
xor
dec
push
out
test
pop
xchg
sbb
test
in
dec
lods
xchg
in
fisubs
sub
outsb
adc
test
jo
adc
repz
in
mov
enter
lret
dec
in
call
mov
loope
imul
test
cmc
and
xlat
cmc
mov
pop
mov
call
mov
sub
mov
xchg
adc
fisttpll
mov
sar
orl
cmpsb
lret
mov
xor
in
lret
lcall
std
jecxz
jne
fsubl
jmp
lahf
push
mov
insb
pop
jle
mov
inc
loopne
pinsrw
dec
js
xchg
push
loope
clc
nop
xchg
subb
pop
add
lods
cmpsb
cmp
inc
or
pop
repz
fs
xlat
inc
dec
dec
mov
sbb
ret
lds
xor
mov
out
dec
xchg
xchg
fildl
mov
xchg
and
aad
leave
sar
adc
int3
mov
pushl
mov
idiv
jg
mov
stos
daa
fdivrl
iret
ret
fst
inc
inc
fstps
ret
loope
cltd
cli
mov
dec
xor
cmp
pop
outsb
push
lret
cltd
sbbb
fcoml
sbb
xchg
jb
lods
add
adc
sbb
ss
pop
or
hlt
sub
mov
insb
adc
test
pop
push
mov
add
push
mov
lsl
repnz
cmp
popf
lea
mov
mov
sahf
testb
fbstp
testb
into
lods
lds
and
push
test
mov
int
sbb
xchg
cltd
in
push
fwait
icebp
pushl
shl
fisubl
or
fs
xor
aad
clc
pop
sub
push
mov
std
icebp
pop
lahf
inc
lods
imul
rcrl
iret
incb
push
pop
cmp
cmp
push
mov
popf
shll
adc
popf
out
mov
mov
repz
and
ret
cmpsb
outsl
pop
aas
mov
out
adcb
loope
mov
in
or
ljmp
dec
sbb
popf
addb
pop
lahf
push
mov
aaa
xchg
fimull
int
lahf
mov
mov
add
arpl
pop
arpl
aaa
pusha
sub
xor
inc
xorl
loope
pop
jb
ret
sub
andb
cwtl
xor
daa
xor
bound
loopne
adc
leave
popl
stc
dec
cli
ss
mov
stos
push
dec
dec
mov
popf
dec
mov
ljmp
sahf
or
add
and
xor
push
fsts
rclb
pop
fmul
add
and
sti
addr16
int
and
mov
adc
inc
push
push
in
add
mov
sti
jp
js
sub
sbb
mov
movsl
jns
outsl
out
sub
mov
test
shrb
lods
rcl
cmp
jnp
and
insb
cmp
movsl
push
mov
aas
fmull
sbb
js
mov
in
in
inc
mov
lret
mov
movsl
adc
scas
hlt
sahf
hlt
lret
jbe
mov
push
push
mov
stc
and
sbb
and
or
daa
and
sbb
inc
sbb
mov
shrl
inc
add
push
movsb
jo
ret
lret
cmpsb
ljmp
push
cltd
and
insl
cmp
lahf
pop
jns
and
jae
xchg
enter
aam
xchg
imul
sbb
stos
iret
inc
mov
ljmp
adc
out
jg
rcr
stos
cld
jg
cmp
inc
fwait
pusha
xchg
loop
adc
imul
push
dec
and
jnp
xchg
lahf
es
daa
sete
push
nop
lret
push
and
les
jbe
or
fiaddl
xor
sub
popf
xor
shll
xor
shr
dec
lods
sbb
dec
push
and
xchg
out
pop
lds
jns
idiv
inc
arpl
adc
mov
fildl
aad
xchg
inc
dec
fldcw
mov
mov
push
mov
push
inc
jp
pop
into
es
add
push
cmp
add
lods
and
dec
stos
enter
pop
ss
aam
ja
push
ret
fmulp
out
mov
imul
xchg
bound
sub
mov
sub
push
sbb
cwtl
mov
sbb
mov
sbb
mov
mov
bound
pop
mov
mov
mov
fmulp
jb
pushf
push
jecxz
jns
popf
add
xchg
or
mov
xchg
adc
repnz
inc
repz
pop
push
or
mov
jge
lods
add
xor
xor
xor
dec
mov
les
mov
pop
lds
cld
xor
mov
lea
nopl
and
sahf
xchg
cld
push
jle
sub
shl
lock
push
shlb
jno
mov
enter
xchg
jecxz
adc
pop
jg
lcall
das
imull
repnz
imul
call
or
or
xchg
sub
fsubrl
scas
enter
stc
pushf
frstor
and
mov
negb
jg
enter
inc
shl
xor
and
adcl
loop
xor
jns
stc
sbb
jb
mov
xchg
xchg
inc
das
mov
sub
dec
mov
es
jge
xor
and
int
faddl
sbb
push
sub
push
xor
sbb
sub
mov
arpl
pop
inc
out
cmp
es
pop
push
dec
das
popa
fmull
adc
rorb
aas
repz
sub
add
pop
jns
rorl
dec
out
mov
fists
cmpsl
ret
inc
mov
repnz
call
mov
inc
dec
push
and
add
repnz
shlb
adcb
inc
inc
push
push
and
add
repnz
shlb
adcb
push
inc
push
push
and
xor
add
loop
repz
ret
movsl
mov
movsl
xchg
jge
pop
jb
inc
jge
and
adcb
outsl
ret
shrb
cmp
insl
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
mov
insl
xchg
jge
sub
jae
fdivrl
add
adc
popa
lea
push
mov
mov
subl
sbb
xor
xor
add
pop
std
popa
out
inc
dec
inc
lods
push
mov
cltd
jne
fs
adc
add
cmp
adc
pop
cwtl
imul
sbb
dec
fidivs
sbb
divb
mov
cld
cmpsl
inc
lret
jmp
jo
cltd
push
pusha
out
adc
stc
in
or
cmpsl
inc
mov
dec
sbb
xor
popa
enter
lock
mov
fidivl
xlat
sbb
pop
jne
dec
pop
adc
jbe
into
sbb
popa
popf
lea
mov
insl
mov
push
sub
rol
stos
popf
xor
xor
out
add
daa
push
xlat
icebp
jne
mov
push
sub
and
inc
neg
add
jno
mov
inc
push
mov
push
aaa
repz
xor
fnstenv
jl
inc
in
and
and
inc
push
push
lods
push
jge
testb
sbb
cmp
sub
sbb
or
jns
imul
in
in
xchg
pop
xchg
jae
inc
rcll
movsb
pop
movsl
jb
jne
popa
loopne
into
xor
rcrb
sbb
icebp
das
rorl
bound
mov
aaa
shll
in
or
or
sub
xor
add
adc
popa
lea
inc
lods
push
mov
subl
sbb
and
xor
add
adc
popa
lea
inc
lods
push
mov
ds
loop
lea
xchg
js
xchg
adc
add
mov
addr16
lcall
lea
mov
inc
inc
sarb
shlb
cmp
push
mov
outsb
dec
sub
pop
int
aad
xchg
pop
es
dec
std
inc
roll
js
cltd
pop
loope
andb
orb
mov
xchg
mov
xchg
inc
pop
pop
fmuls
mov
stos
jg
dec
cmp
out
shrb
inc
cs
sbb
pop
out
sub
bswap
popa
xlat
xlat
out
and
and
cmp
push
ficoml
inc
push
and
addr16
imul
dec
arpl
or
sarb
inc
mov
lock
jae
stos
push
lods
shrl
add
enter
adc
iret
in
or
xchg
sbb
cmp
inc
fidivrl
pop
jne
mov
ss
mov
pop
push
ljmp
push
pusha
push
xor
cmp
pop
add
sbb
pop
adc
mov
jg
dec
mov
aaa
sub
add
divl
mov
dec
dec
out
jl
popa
xchg
aam
dec
js
ret
out
sti
xor
dec
jmp
jne
enter
xorb
dec
pop
movsb
jbe
dec
out
and
add
mov
pop
xor
jnp
push
andl
cs
loopne
fsubrs
bound
push
ljmp
sbb
jo
mov
push
dec
xor
out
in
mov
sub
mov
xchg
xor
ja
dec
sbb
ficomps
xchg
outsl
mov
xor
sbb
mov
sub
push
xchg
cmc
adc
loop
icebp
cmp
sub
xor
int3
adc
out
mov
jl
fidivrl
out
into
sub
dec
jecxz
jns
pop
push
aad
fisttpl
enter
mov
pop
sbb
xor
jo
pop
and
xor
dec
or
mov
mov
inc
jge
cmpsl
sbbb
fldenv
outsl
mov
jmp
adc
lods
pop
cmpsb
andb
iret
test
xor
and
sub
es
std
xlat
aam
call
cmpsb
cltd
dec
mov
inc
mov
cwtl
arpl
aam
xor
dec
aam
lock
mov
xlat
push
test
jl
out
bound
sub
xor
bound
insl
std
cmpsb
and
add
mov
mov
ss
andl
pusha
push
flds
fdivr
imul
es
or
lock
jb
push
ficomps
mov
cmp
pushf
arpl
dec
aaa
cld
repz
sub
push
push
sti
ret
in
dec
push
cmpl
sbb
mov
and
shrl
jecxz
les
loop
ds
adc
jbe
loop
popa
and
adcb
cmc
mov
pop
aas
jno
cmp
cmp
cmp
sti
icebp
mov
daa
mov
stc
or
pop
add
rcrb
pusha
inc
scas
pop
cmpl
js
sbb
stos
into
and
adcb
jp
es
inc
daa
jg
aas
mov
arpl
cmp
jg
sahf
shr
mov
dec
inc
cs
enter
fwait
pop
jo
and
sbb
xchg
pusha
pop
jmp
data16
jbe
test
jp
and
lods
adc
fildl
mov
mov
std
ja
jecxz
xor
push
aas
push
jns
jge
arpl
fwait
stc
incb
adc
test
sbb
icebp
ja
arpl
add
pusha
inc
rcrb
mov
test
ret
mov
ljmp
sub
mulb
push
push
sbb
pop
jp
insb
in
add
push
lret
or
test
sahf
mov
rorb
push
sub
popa
das
cmpb
movsb
or
jp
stc
push
push
jmp
faddp
push
call
pusha
jmp
out
loope
idiv
jno
dec
cli
push
xchg
mov
dec
mov
cmovbe
mov
ficoms
call
mov
pop
mov
ljmp
push
xlat
cmp
pop
mov
in
sub
lea
enter
ljmp
incl
mov
iret
popf
std
xor
cmp
adc
insl
mov
push
fmull
js
int
ja
push
jne
dec
adcl
leave
mov
or
scas
mov
cmp
popa
imul
pop
jne
dec
repnz
mov
xchg
insl
je
dec
mov
cmp
mov
dec
lcall
sbb
mov
adc
fidivl
fsubl
jg
or
jns
lret
scas
jbe
sub
jge
sbb
in
jns
mov
sub
cld
out
clc
les
lahf
gs
mov
mov
sti
pop
jbe
add
mov
xchg
sbb
cmp
jp
out
lds
imul
mov
inc
push
push
mov
fwait
and
push
dec
jle
clc
push
cmp
jl
andb
adc
cld
adc
les
out
insb
clc
xchg
mov
inc
lock
adc
sbb
mov
inc
and
jo
and
cmp
pushf
jbe
cmpb
mov
or
add
fcomps
push
xor
pushl
movsl
shll
xchg
aad
sub
cmp
and
xor
pop
roll
push
dec
cmp
dec
and
jb
rclb
and
inc
mov
push
sbb
movsb
cmpsl
inc
jne
out
lcall
rcr
inc
push
xor
pushf
aas
sub
sbb
out
jae
cs
pop
push
inc
cmp
in
push
push
lods
mov
cmp
shl
cld
mov
cmp
bound
je
insl
das
mov
decl
ss
lods
out
push
cmpsl
jno
xorb
je
inc
test
sahf
movsw
mov
sahf
xor
adc
cwtl
and
or
mov
mov
xchg
out
and
jae
lahf
jbe
int
pop
dec
adc
xor
inc
loope
xchg
dec
nop
repz
sub
iret
fcomps
aad
out
or
in
jno
enter
and
push
out
and
ret
and
add
in
in
popa
push
ret
jl
push
xchg
fildl
jne
and
pop
push
dec
mov
xchg
movsl
mov
or
add
adc
popf
inc
jne
and
addr16
out
out
adc
xchg
cmp
push
stc
inc
daa
outsl
idivb
push
or
pop
fs
xchg
xchg
mov
pop
ja
sbb
icebp
and
push
push
cmp
das
das
dec
nop
in
sub
add
fnstsw
repnz
push
clc
xchg
push
popf
and
outsl
sbb
push
mov
mov
mov
add
add
inc
mov
sub
and
pop
js
and
xor
mov
and
aad
jnp
xchg
inc
fildl
ret
icebp
pushl
pop
insl
shll
pusha
pop
cld
dec
mov
and
inc
cmc
es
and
roll
cwtl
inc
mov
imul
inc
mov
add
rcrb
leave
lret
add
rcl
aaa
add
jmp
cld
rclb
mov
loope
fistps
mov
testl
mov
push
aaa
inc
add
ret
les
inc
ss
xor
gs
fisubrs
fildl
pop
hlt
dec
sbb
xor
jbe
xor
shl
ds
mov
mov
dec
and
xor
inc
mov
pushf
ret
add
jbe
jl
xor
in
fdivrp
cmpsb
or
mov
mov
xchg
aam
out
popf
sahf
mov
jns
sub
shr
not
scas
cltd
rorl
les
dec
xchg
stos
cmc
enter
pop
add
cmp
push
push
loope
stos
test
jmp
cmp
push
mov
fs
cs
or
icebp
pop
pop
mov
jge
loopne
push
sub
pop
ja
and
adc
push
pop
mov
mov
mov
sahf
push
adcl
je
xchg
test
pusha
sub
add
insb
pop
out
bound
or
mov
dec
stos
shll
jmp
jnp
and
push
mov
je
mov
and
aam
daa
push
jp
std
test
stos
int3
inc
cwtl
pop
xchg
mov
cmp
sbb
out
movsb
ljmp
push
adc
fists
lret
and
add
inc
jo
lret
jle
sub
jo
jae
gs
mov
popf
jmp
mov
dec
push
or
xlat
stos
loop
xlat
es
mov
jns
dec
mov
pop
fimuls
push
pushf
inc
incb
lock
add
add
ja
mov
jge
mov
fs
daa
xchg
std
ljmp
enter
sbb
out
jmp
test
pop
xchg
jecxz
movq
pop
jo
cs
jno
pop
push
sbb
aas
cmp
inc
pop
sub
xchg
mov
add
es
movsl
or
xchg
cmp
shl
gs
setp
es
push
mov
xor
es
cmp
mov
cmpb
in
push
adc
lret
pop
mov
push
cmpsb
loop
jno
xchg
xchg
dec
test
sarl
lods
movb
inc
xchg
push
sub
popfw
xor
out
sti
jp
add
or
dec
mov
mov
push
cli
add
inc
cmpsb
pop
scas
mov
sbb
movsb
test
loop
mov
lea
pop
push
push
mov
sub
stos
pop
jp
leave
mov
addr16
ja
cmp
dec
out
inc
aad
into
outsl
mov
mov
out
clc
in
cmpsl
dec
stos
mov
inc
xchg
and
pop
sahf
test
pop
stos
xchg
out
ja
dec
adc
leave
sub
aam
inc
mov
jecxz
pop
loop
mov
jge
pop
das
xor
insl
mov
pop
lods
je
mov
ja
sbbb
pop
dec
mov
push
mov
das
sarb
cli
out
in
aad
mov
inc
lods
les
repnz
mov
out
out
arpl
pop
call
dec
xor
in
push
das
add
frstor
iret
mov
stos
push
out
jae
mov
lahf
push
adc
movlps
data16
in
imul
mov
iret
ljmp
data16
mov
lahf
cwtl
cmp
ret
sub
push
xchg
sbb
fistpll
lds
shlb
insb
or
jge
add
sbb
ficoms
mov
xchg
loopne
outsl
stos
push
fxtract
stos
roll
sbb
cmp
test
sti
adc
mov
xchg
inc
sub
mov
push
dec
out
mov
jl
aam
dec
movsl
movsl
push
pop
aas
jno
out
mov
dec
ss
pop
mulb
rorb
sbb
lret
loope
popf
ret
arpl
push
cmp
push
pop
mov
ret
mov
push
test
mov
std
add
sarb
add
push
cmp
jge
test
jle
pushl
cli
cmp
jmp
sub
mov
push
lds
jp
pop
stos
test
xlat
mov
or
and
jns
movsl
loop
fdivr
sbb
ss
gs
icebp
inc
lret
out
mov
ficoml
push
jno
jle
add
out
orb
cmp
or
add
push
pop
fisubl
push
gs
ss
add
popf
mov
xchg
ss
push
push
mov
add
fimuls
cmp
cld
hlt
add
ret
xchg
push
mov
pop
sarb
add
mov
inc
inc
pop
popa
xor
in
loop
lea
loop
call
dec
movsb
negb
pop
out
aaa
out
inc
enter
sbb
sbb
pop
filds
cwtl
xor
das
push
lret
or
xchg
stc
cmp
adc
add
in
je
inc
ss
push
sbb
push
cmp
jae
mov
dec
mov
adc
jns
cmpsb
mov
ja
adc
adcl
popf
push
and
xchg
xor
scas
fldcw
or
ja
push
stos
fbld
add
loope
sahf
sub
addr16
rclb
dec
xchg
loop
jge
or
lds
and
xchg
sub
in
inc
jae
push
pop
std
and
lret
xchg
inc
std
mov
stc
stos
decb
jno
dec
jg
in
gs
mov
mov
test
xchg
imul
push
fildl
pop
inc
pop
enter
inc
adc
mov
cwtl
sbb
xor
jne
inc
jge
cli
add
loopne
js
mov
inc
pop
push
mov
jp
ret
in
sahf
inc
mov
push
pop
mov
sbb
lock
cmp
inc
popa
inc
push
or
cmpb
push
dec
addb
sub
sahf
or
and
pop
leave
add
add
xchg
xchg
fiaddl
dec
pop
aam
lods
lods
adc
mov
insl
inc
cmp
daa
mov
push
mov
test
pop
sub
daa
pop
sub
xor
or
loop
lcall
push
adcl
xor
repnz
fildl
pop
push
aad
repz
es
shrl
mov
ja
xchg
repnz
mov
pop
push
pop
gs
sub
or
mov
daa
jns
inc
loopne
push
push
ljmp
mov
push
inc
ret
cmc
pop
ret
in
fcoml
or
je
jo
movsl
movsb
sbb
dec
jb
lret
push
insb
int
ljmp
cltd
test
pop
cmp
lcall
bound
jae
sub
adc
lods
fcoml
sub
mov
jl
stc
dec
pusha
sti
xchg
ret
repnz
mov
mov
pop
and
lcall
fimuls
push
and
jae
cmp
adc
stc
push
ja
pop
dec
ret
out
mov
fistpll
mov
inc
mov
or
cli
inc
stc
or
sbb
fs
bound
cmp
xchg
nop
addb
adc
jmp
push
sub
aad
js
jne
xchg
fadd
cmp
test
popa
movsb
and
and
mov
clc
fistpl
lret
push
test
sbb
fwait
cmp
fsubrs
and
aaa
lock
push
lcall
cmpsb
or
sbb
xor
add
rorb
ficoml
lock
dec
inc
jge
jge
enter
cltd
mov
mov
clc
aad
test
ds
mov
rolb
inc
repnz
or
ljmp
into
sub
movsb
inc
mov
repnz
insb
or
jne
dec
scas
inc
jmp
nop
test
sti
leave
test
cmp
mov
xchg
mov
sbb
mov
or
ss
repnz
cltd
and
mov
push
orl
movsb
cmp
jne
out
xchg
rcrb
pop
data16
push
sbb
repz
xchg
or
dec
in
movsl
push
xchg
ja
jecxz
mov
push
mov
and
adc
mov
call
mov
rclb
repz
stos
jmp
icebp
sti
andb
daa
subl
jl
pop
lock
xchg
pop
mov
xchg
test
mov
sub
mov
pop
mov
int
ljmp
arpl
aas
test
stos
xchg
in
mov
lret
jb
das
sub
das
sub
sub
fnstenv
jl
jecxz
jbe
xchg
and
jg
adc
sbb
pusha
jnp
iret
in
xchg
mov
xchg
push
xor
mov
adc
dec
dec
lods
rorl
pop
mov
repz
sub
inc
mov
xor
repnz
sub
cmpsb
dec
fwait
dec
int
push
push
insl
sahf
add
fmul
cld
mov
or
mov
fsubr
fcmovnb
out
jne
icebp
xchg
mov
xor
out
fwait
inc
sti
subb
lahf
and
mov
xor
xorb
adc
mov
sbb
and
pusha
leave
jg
data16
sbb
mov
aam
mov
test
orb
fiadds
cmp
pop
add
dec
jae
int
ljmp
mov
pop
test
cmp
lock
lret
xor
dec
enter
inc
out
je
sub
inc
dec
jge
in
shlb
cs
sbb
xchg
mov
out
cltd
jbe
into
subl
sti
fnstsw
pop
mov
mov
mov
jmp
add
and
ret
imull
and
mov
sub
inc
outsb
divl
sub
iret
mov
outsb
leave
adc
add
mov
inc
jno
sub
in
cmp
inc
sub
stc
xor
xchg
sahf
jno
dec
mov
jl
xchg
clc
pop
cmp
pop
mov
push
enter
mov
cli
jecxz
adc
test
xchg
dec
pop
repz
test
loopne
shlb
rcrb
and
pop
sub
xor
bnd
xchg
gs
aad
pusha
sub
add
xchg
add
or
outsb
mov
ds
inc
mov
jb
jnp
int3
cmpsl
cmc
in
mov
sahf
cmp
stc
add
push
adc
xchg
imul
loopne
xlat
insb
fcomp
dec
push
mov
test
aas
ljmp
insl
pop
lret
movsl
shlb
repz
push
push
sbb
imul
call
xor
les
insb
in
stc
and
xor
sahf
xchg
data16
jmp
push
mov
adc
mov
jno
adc
adc
xlat
divl
dec
pop
dec
into
or
sbb
xchg
mov
jo,pn
inc
fscale
adc
xchg
mov
popa
sbb
xchg
mov
cmc
push
ss
adc
cmp
shll
add
lods
mov
adc
lods
lods
fmuls
ss
jp
jle
fbld
mov
out
jns
jb
or
xchg
loopne
in
pop
xchg
and
rcll
dec
sub
mov
lret
and
fs
xchg
jbe
andb
cmp
mov
jb
mov
mov
imul
scas
fs
mov
add
dec
sub
outsb
repnz
inc
pop
xchg
mov
push
sbb
stos
jbe
iret
pop
xchg
imul
test
pop
subl
xchg
mov
or
incb
xorl
in
pop
outsl
pusha
fs
mov
fcmovne
nop
sarl
dec
pop
add
out
push
mov
sahf
js
xchg
cwtl
gs
lock
or
and
inc
xor
out
jmp
sbb
mov
push
sbb
cld
cli
dec
pop
ret
mov
dec
add
cmp
add
ljmp
leave
addr16
loopne
fists
ret
mov
push
sub
int
push
enter
out
ljmp
cmpsb
out
xchg
dec
lret
rol
add
rcrb
xchg
and
imul
out
pop
lcall
xor
scas
pop
subl
pop
push
pop
mov
js
or
shr
insb
inc
loopne
mov
stos
mov
jbe
aaa
lods
test
lea
leave
mov
xchg
lahf
jns
mov
mov
stc
mov
roll
pop
or
testl
pop
jg
movsb
mov
loop
iret
mov
mov
and
and
jp
jbe,pt
cmp
sbb
mov
pop
jg
aad
cmc
pushf
mov
jbe
mov
jge
movb
jne
popa
sbb
pop
pop
jno
adc
sbb
cmpsl
das
xor
push
mov
dec
jmp
sbb
jbe
and
hlt
movsb
imul
mov
push
adc
fcom
mov
out
xor
lods
nop
inc
xor
adc
xor
sub
cltd
popa
lahf
push
lret
inc
shrb
push
call
movl
ds
ljmp
inc
gs
mov
mov
pushf
in
mov
mov
or
xor
icebp
xor
jge
push
insb
test
shl
add
inc
imul
cmp
push
cmpsb
xchg
or
pop
loopne
dec
push
or
xchg
pushf
shll
jns
stos
mov
xor
das
jno
mov
das
pop
scas
fcomi
sub
pop
adc
icebp
shlb
dec
gs
pop
xor
cli
jle
pop
loope
movsb
ja
dec
pop
push
es
mov
add
push
xlat
fisubl
jg
mov
pushf
shrb
mov
icebp
cmp
jb
arpl
add
outsl
std
and
shlb
or
inc
pop
mov
gs
jbe
loop
ja
test
lods
push
rcr
push
sbb
inc
out
pop
ss
mov
jno
push
insl
mov
jne
out
xchg
mov
adcb
shrl
fldl
in
adc
popa
lea
inc
lods
push
mov
subl
sbb
and
xor
add
adc
popa
lea
inc
lods
push
mov
subl
sbb
and
xor
add
adc
popa
lea
inc
lods
push
mov
subb
jecxz
icebp
sbb
fmulp
into
ja
in
adc
mov
movsb
scas
dec
sahf
jnp
jmp
pushf
push
jg
sub
into
lret
push
sti
push
jmp
fwait
outsb
mov
pop
stos
ficompl
dec
bnd
imul
out
xchg
cmp
pop
fldt
jmp
sti
push
jmp
hlt
outsb
mov
dec
stos
push
leave
pop
dec
or
push
imul
aad
xor
or
cwtl
adc
iret
adc
sahf
push
out
cli
sub
addb
repz
sbb
stos
cmp
push
pop
decb
push
rclb
push
and
xlat
rcrb
outsb
notl
inc
imul
xchg
repnz
sbbl
jmp
jmp
cwtl
inc
aaa
dec
scas
xor
popf
std
mov
or
data16
mov
jb
bound
add
out
arpl
ror
aas
and
fwait
lcall
je
push
dec
clc
inc
dec
mov
out
add
dec
push
xor
push
mov
jmp
enter
stos
inc
push
inc
fwait
xor
lahf
push
push
add
and
xlat
or
add
repz
in
clc
mov
sbb
xchg
or
loope
stos
clc
pop
mov
push
mov
jae
mov
fmull
cmp
inc
xchg
outsl
andb
dec
ds
jge
jnp
imul
cli
sub
repz
lret
or
sbb
dec
xchg
je
cmp
push
fwait
inc
pop
mov
jbe
pop
lret
add
aaa
fimull
rcl
ret
sub
or
cmp
sub
fldt
lret
push
sti
push
jmp
fwait
outsb
mov
dec
stos
mov
jnp
imul
out
or
cmp
sub
fldt
lret
push
sti
push
jmp
fwait
outsb
mov
dec
stos
mov
fmuls
xor
insb
pusha
push
sbb
mov
jecxz
mov
inc
push
lret
xchg
inc
fcmovnb
lock
fs
shrl
pop
mov
pop
fs
inc
push
xchg
lret
addr16
xor
jo
or
pop
aam
loope
ret
in
push
push
cs
inc
mov
pop
cmp
pusha
fnstcw
outsl
stc
es
adc
inc
cmp
pop
dec
icebp
pop
push
mov
inc
cmp
bound
es
mov
aaa
enter
pop
gs
or
or
daa
xchg
cltd
add
xchg
pop
cmp
daa
ret
stc
xchg
popf
sarb
fisubl
int
push
aas
pop
mov
mov
test
adc
cltd
adc
dec
adc
mov
loope
ficoms
aaa
jne
arpl
push
fsts
jecxz
xchg
xchg
jnp,pt
inc
sbb
nop
push
nop
inc
lret
jbe
icebp
jle
pop
fsubrl
adc
shll
lods
adc
lds
mov
sbb
and
add
xorb
or
call
inc
pop
pop
cli
push
arpl
cld
nop
push
and
and
jge
sbb
test
mov
fcomip
pushf
mov
mov
movsb
mov
jge
idivb
xor
mov
loopne
mov
sub
cmp
cs
mov
mov
jbe
inc
movsb
pop
loope
sahf
mov
mov
aaa
sub
or
pop
xchg
dec
or
in
std
dec
imul
insb
push
or
inc
in
jmp
out
fmull
int3
insb
inc
add
insl
rcll
int
sbb
push
mov
sbb
mov
xor
mov
xor
and
jo
mov
movsb
pop
mov
dec
push
repnz
cmp
sub
enter
jle
push
inc
jge
cli
aad
adc
sub
out
jb
push
mov
shll
add
aad
mov
pushf
jae
inc
jecxz
cmpsb
adc
mov
cmpsl
jp
lret
lock
imul
fwait
sbb
cmpsb
ja
mov
pop
and
dec
call
xor
data16
scas
out
cwtl
and
xchg
dec
popf
mov
loop
insl
adc
xorl
cmp
decl
adcl
mov
hlt
repz
idivb
aad
ljmp
jne
lock
inc
imul
popf
and
imul
int3
testl
nop
add
iret
pop
shlb
insb
jns
jno
jns
lods
mov
das
pushf
ljmp
push
or
dec
sbb
push
aam
subl
cld
inc
push
test
les
cmpsb
fists
inc
sbb
mov
aas
iret
bnd
scas
daa
sbb
test
jecxz
outsb
cmp
xor
movsl
sub
adc
push
pop
repz
jg
jmp
lahf
mov
dec
pop
inc
int3
add
inc
add
sbb
scas
and
push
nop
ret
inc
push
dec
jl
xchg
test
or
jg
push
repz
hlt
loope
sub
and
dec
cmpsl
sub
mov
imul
inc
sub
pop
cmp
mull
adc
jnp
dec
in
pop
mov
test
cmp
sub
hlt
inc
lods
adc
xchg
andb
dec
cmp
push
push
and
test
push
loope
mov
mov
add
call
mov
repnz
ja
jmp
xor
sbb
and
pop
cwtl
inc
lcall
fwait
sub
xchg
add
out
or
ret
xchg
adc
sub
je
sbb
inc
jo
dec
mov
or
jp
xchg
lock
fsts
icebp
xchg
adc
test
lahf
repz
xchg
xchg
jmp
nop
fimull
cwtl
shr
jl
ljmp
inc
xor
call
rclb
loopne
adc
cmp
jg
inc
scas
rolb
shll
cs
outsb
mov
cmp
inc
repz
pop
shlb
add
fcmovnu
lcall
mov
cld
sub
mov
mov
stc
sbb
fucomp
lods
pop
or
jmp
hlt
sti
pop
xor
fdivl
jae
dec
movsb
pop
cmc
push
push
push
hlt
push
in
ret
lcallw
lods
push
rcrl
mov
add
mov
leave
sub
jecxz
pop
fwait
cli
cs
lret
popa
ret
cmpsl
pop
shlb
jecxz
loopne
dec
sub
jb
cmp
dec
and
sub
sbb
out
lods
dec
es
es
mov
cmpsb
cmc
sub
jbe
pushl
bound
cmp
lods
cmp
and
cmovnp
sub
mov
jg
xchg
dec
mov
aaa
mov
pop
nop
repz
add
ret
jbe
das
dec
jecxz
outsb
cs
inc
inc
test
inc
pop
lret
inc
mov
jecxz
daa
or
aaa
adc
push
fcomps
mov
stos
xor
cmpsl
lock
insb
mov
mov
pop
jnp
lds
sahf
jl
dec
sar
pusha
jp
inc
mov
and
imul
sbb
aas
and
push
mov
sbb
fadds
andl
mov
cmp
inc
mov
adc
jnp
out
cmpsb
icebp
cld
fwait
inc
push
cli
pcmpeqw
es
pop
repnz
mov
pop
jae
fwait
dec
jnp
mov
adc
push
mov
xchg
sub
les
lock
dec
in
lret
dec
jne
sub
lea
dec
das
in
sbb
dec
inc
and
cmp
neg
mov
inc
fdivrl
jge
cwtl
shl
sub
push
push
inc
inc
sarl
xchg
jmp
pusha
add
pop
fists
push
in
lea
adc
mov
mov
pop
sti
sbb
lret
mull
popf
mov
sahf
cli
loop
sahf
test
jl
mov
cwtl
test
fimuls
adc
movsl
rclb
lret
psrlq
pop
jae
xchg
pop
mov
xchg
lcall
test
or
pushf
stc
aam
cltd
mov
shll
or
jae
sub
in
or
jne
add
add
pop
sub
adc
stos
add
adc
bnd
jb
jno
pusha
mov
test
inc
gs
into
cmpsb
pushl
outsl
inc
loop
pop
insb
pusha
mov
xchg
or
mov
test
mov
sub
or
je
out
jmp
ljmp
pop
sti
call
add
inc
das
dec
mov
or
out
repnz
push
xchg
and
mov
pop
je
dec
xchg
add
fs
inc
test
mov
cmp
mov
xor
push
dec
and
mov
push
xchg
in
dec
pop
es
ficoms
push
les
mov
cwtl
notl
push
push
jle
nop
es
inc
xchg
pushf
enter
jle
inc
jbe
xchg
and
xchg
imull
test
sbb
test
subl
cmpb
lahf
mov
imul
das
or
in
sti
sbbb
loope
or
dec
in
mov
ret
pop
es
push
and
and
stos
mov
mov
xchg
js
cld
mov
loope
ds
mov
jbe
out
jno
test
xchg
mov
pop
sbb
inc
mov
es
jle
and
push
insb
cmpsb
syscall
jmp
adc
pslld
dec
rcl
add
sub
sti
stos
inc
sub
inc
popf
loope
hlt
dec
jb
hlt
cmpsb
sub
mov
adc
adc
fsubs
iret
push
sbb
and
popa
cmpsb
jle
dec
cli
and
adcl
mov
or
outsl
sahf
bound
mov
cltd
push
jnp
jl
cld
dec
stos
leave
push
adc
dec
pop
inc
or
aam
shll
stos
dec
xchg
gs
jnp
out
cmc
fcoms
int
imulb
insb
mov
sub
mov
mov
push
iret
test
lea
dec
je
test
adc
bound
sahf
jecxz
aam
push
addr16
movsl
jbe
jnp
and
mov
jmp
jp
add
jp
push
add
nop
xchg
adc
mov
inc
insb
xchg
jp
roll
aas
adc
mov
jp
jns
movsb
inc
test
sub
insl
iret
cmpsl
cmp
pop
rolb
out
inc
mov
rolb
pop
jno
ljmp
lcall
or
outsb
mov
into
mov
adc
dec
sbb
add
push
dec
sbb
push
rolb
imul
enter
or
mov
aad
cmc
aaa
xchg
inc
aas
jnp
sbb
ficoms
outsl
inc
xorl
leave
pop
in
subl
popa
popf
xor
inc
mov
shlb
and
nop
scas
mov
call
jae
lock
int
andnps
jmp
push
testl
jle
lret
dec
xchg
inc
push
and
aam
aaa
call
xor
cmp
adc
lahf
std
fnstsw
push
or
mov
loopne
loop
nop
fidivrl
cmc
and
imul
pop
lods
xchg
xor
jno
test
pop
gs
jecxz
inc
mov
insl
loopw
sti
cmp
sub
cmp
adc
xchg
movsb
pop
mov
les
jg
pop
mov
in
hlt
imul
fsubrp
bnd
xchg
aas
push
es
lahf
scas
into
push
xchg
fldcw
adcl
fdivr
mov
outsb
fsubr
mov
pop
aad
sarl
mov
mov
xor
es
lods
test
lret
push
es
shll
xor
or
cmp
flds
mov
pop
sbb
mov
andb
sub
mov
lds
xor
push
movsb
loopne
cltd
das
daa
jp
nop
out
xor
std
leave
dec
imul
sbb
sub
mov
rolb
push
add
xchg
orl
pusha
movsl
xchg
fiadds
pop
lea
push
rclb
outsb
xchg
call
js
sbb
mov
mov
icebp
fdivrl
cmp
mov
push
rcll
mov
inc
in
pusha
test
rorl
repnz
ds
inc
out
mov
adc
shll
add
mov
mov
fdivr
xor
bound
in
js
mov
movsb
insb
add
ds
push
or
ret
fucomi
sahf
popf
xorl
sbb
mov
fsubl
pusha
fldenv
or
stos
lods
cmpsb
and
push
loopne
jmp
out
mov
dec
inc
lcall
cmp
cmpsl
pop
cld
or
jbe
lret
movsl
and
in
nop
xor
gs
jmp
test
xchg
movsl
jle
movsl
cmpsb
popf
dec
ffreep
mov
leave
repnz
addr16
imul
jb
pop
jb
pushl
fcoms
mov
add
test
sub
jne
cmp
mov
mov
jmp
sbb
jbe
stc
xor
inc
xor
sub
xchg
shrl
add
xchg
orl
lock
mov
es
mov
insl
lea
aad
clc
pop
leave
ss
ret
or
jp
ret
sti
scas
loop
sub
dec
mov
mov
lahf
pusha
pop
xor
idiv
iret
mov
lahf
test
adc
mov
test
out
bound
enter
out
xor
jg
mov
mov
arpl
mov
cs
stc
sub
lret
or
negl
jno
adc
dec
shl
jmp
push
and
mov
call
addl
outsl
pop
div
mov
mov
adc
fsubs
cmc
adc
inc
dec
and
cmp
lahf
psllq
xchg
jb
into
inc
push
cli
push
hlt
subl
es
cmp
lret
loope
xchg
inc
lock
mov
cmc
cmp
inc
rclb
push
adc
jecxz
inc
pop
or
xor
jmp
pushf
pop
xchg
pushf
faddl
hlt
or
sti
sbb
outsl
popf
gs
repnz
sub
push
or
or
movb
mov
add
jg
xchg
js
fildll
pop
lods
dec
xchg
clc
shll
bound
popf
push
out
iret
push
loope
mov
hlt
inc
mov
mov
and
and
jbe
fisubs
popf
sbb
nop
outsl
in
movsb
fistpl
sbb
mov
enter
mov
add
mov
xchg
mov
das
jg
jle
fwait
xchg
sub
xorl
mov
jne
shlb
jmp
xor
jns
popf
adc
aaa
pop
lds
fistl
je
jo
xlat
fs
shl
mov
decl
sub
push
mov
pop
test
in
bound
dec
sbb
popa
pop
not
out
movl
inc
xorb
xchg
lods
jnp
mov
scas
std
xor
jg
add
push
int
inc
pop
cmpsl
je
in
sbb
inc
dec
int
and
cmp
ja
add
ss
pop
dec
push
repz
cmp
repnz
fsubl
std
sub
push
rorl
or
imul
mov
cli
dec
js
add
out
rcll
push
pushf
xlat
xchg
cmpl
sar
in
icebp
and
xor
out
mov
dec
dec
outsl
pop
subl
stos
xchg
adc
xor
lea
stc
leave
ret
sub
and
aad
xchg
xor
xchg
and
mov
loop
mov
or
inc
int3
dec
popf
cmp
ss
outsb
rolb
and
adc
mov
bnd
jo
outsb
bound
stc
in
mov
cmc
push
push
in
std
xor
mov
js
or
and
dec
subb
aad
daa
mov
push
mov
push
mov
lret
jmp
loop
jmp
push
leave
and
dec
xor
jecxz
mov
fldl
dec
fiaddl
dec
or
mov
xchg
aaa
aam
inc
popa
inc
lcall
in
pop
cmp
mov
sbb
std
mov
adc
add
shlb
inc
std
jecxz
orl
ja
push
pop
cs
inc
mov
dec
mov
fdivs
fildll
loopne
mov
into
pop
cmp
lret
lods
sahf
stos
js
pop
int3
test
data16
sub
push
imul
add
negl
sbb
lock
or
pop
pop
dec
insb
and
aad
mov
lock
scas
test
repnz
pushf
dec
pop
ror
sub
xchg
push
lea
cld
pop
sub
jo
jbe
jbe
pop
orb
mov
mov
xchg
insl
test
call
add
fildl
lods
sub
test
call
fs
xchg
xor
pop
pop
push
xor
push
rcrl
loope
in
xor
or
rol
xchg
das
shr
jnp,pn
lret
jp
aam
imul
xor
or
lcall
mov
cli
xor
pop
arpl
shlb
sbb
cmp
and
sarl
and
mov
push
xchg
xchg
inc
xchg
jnp
mov
push
push
mov
or
js
daa
mov
dec
cmp
in
push
mov
arpl
mov
sub
cmp
inc
and
mov
or
mov
sarb
jmp
mov
and
enter
lret
cwtl
divl
push
dec
popf
out
outsb
adc
pop
fadds
iret
das
jae
push
das
adc
aaa
mov
adc
add
mov
jne
movsb
mov
mov
add
mov
mov
xchg
ror
mov
adc
xor
ret
rcll
repnz
cwtl
mov
dec
and
push
jo
dec
lret
xor
mov
dec
mov
andl
inc
pushf
iret
cmp
in
loopne
pop
mov
movsl
adc
jb
push
pop
jns
icebp
mov
pop
rclb
push
std
mov
test
imul
mov
ds
pop
xor
mov
sub
push
lods
shl
decl
out
pushf
insl
or
fwait
in
xor
ja
shll
inc
cmp
pop
jmp
sbb
fcmovbe
jmp
xor
pop
pop
in
pop
inc
pop
cmpsl
cmp
iret
push
cwtl
adc
sub
mov
inc
scas
xchg
or
mov
aam
cmc
xorl
mov
xor
daa
pop
mov
add
test
rol
insl
les
xchg
mov
xor
lock
jae
push
mov
ljmp
lret
adc
ja
mov
dec
xor
jp
xchg
sbbb
notl
clc
pop
and
test
aaa
addr16
int3
push
xchg
je
inc
cmpl
or
in
ljmp
jae
jle
aas
loope
sbb
pop
imul
loope
stos
dec
in
cmp
xchg
es
mov
aaa
das
hlt
xor
pop
data16
xchg
out
adc
sub
add
add
sbb
or
pop
stos
dec
mov
inc
cltd
push
jo
paddsw
pop
in
pusha
dec
icebp
fistpl
jne
jg
xor
cltd
inc
add
ljmp
mov
xchg
xor
adc
mov
sarl
cmc
add
inc
xchg
mov
test
mov
lret
adc
addr16
push
dec
iret
jl
push
sbb
out
into
sbb
push
scas
mov
je
out
mov
dec
add
sti
or
push
sarb
scas
pop
add
xchg
jge
inc
in
adcl
xor
imul
pmullw
repz
stos
xchg
fsubs
fildll
cmp
adc
aas
cmp
push
pop
je
int3
cwtl
jbe
loopne
xor
sub
jmp
fistpll
inc
repz
sbb
inc
jbe
mov
inc
popf
or
pop
mov
jb
push
test
jns
cmp
cmp
in
jnp
mov
jne
xchg
xchg
lret
xor
xchg
loope
sub
sub
mov
repnz
daa
or
in
cmp
xor
push
mov
push
dec
push
mov
fs
dec
daa
mov
cmp
stos
push
mov
xor
bound
addb
into
push
std
and
pop
fistps
mov
mov
and
mov
ss
mov
cmp
push
cmp
or
jne
fcomi
cmpsl
clc
fnstcw
in
cmpb
jge
jnp
or
movsb
jle
jl
adc
pop
pushf
outsl
filds
jle
adc
inc
loop
cli
adc
xor
and
inc
xchg
push
lcall
xchg
aas
jl
jg
movsb
or
push
fcomps
jo
loope
adc
stos
lcall
in
pop
outsl
mov
std
cmp
or
rcrl
shl
push
and
aam
adcl
sub
cltd
loope
pop
mov
pop
xor
pop
insb
mov
in
aas
leave
pushf
or
add
shlb
push
inc
xor
sub
pop
or
es
inc
inc
pop
cmp
outsb
jle
adc
movsb
out
cli
les
out
lret
xchg
fsts
popa
and
push
sub
lahf
les
cmc
data16
adcl
divb
jbe
sub
sbb
enterw
cmc
dec
in
inc
adc
push
mov
adc
aam
js
scas
push
cltd
xorl
movb
ds
mov
int3
stos
fwait
xlat
xor
in
icebp
flds
xorl
fsts
test
adc
pop
into
and
imull
cmp
fimull
inc
push
bound
add
xchg
gs
pop
adc
inc
adc
xchg
mov
sub
bound
pop
inc
arpl
add
mov
push
sub
xor
cmp
in
icebp
dec
dec
out
leave
fwait
jge
mov
fdiv
inc
sbb
xchg
int3
push
rcrl
cmp
mov
out
scas
cs
outsb
popa
inc
decl
xlat
cld
or
loopne
jge
pop
mov
js
test
inc
xchg
push
popf
popa
push
out
cmp
lods
pop
adc
inc
cs
icebp
xrelease
ja
stos
lcall
jge
inc
aas
cltd
int
add
sbb
dec
roll
pop
lea
hlt
cmp
add
xchg
pop
sub
xchg
adc
in
fsubs
adc
in
outsl
inc
add
adc
out
clc
mov
jnp
pusha
dec
fs
test
jecxz
mov
inc
adc
push
outsb
add
aad
mov
add
pop
jp
fsts
mov
sbb
or
cmp
sub
fldt
lret
push
sti
push
jmp
fwait
outsb
mov
dec
stos
mov
jnp
imul
out
or
cmp
sub
fldt
lret
push
sti
push
jmp
fwait
outsb
mov
dec
stos
mov
add
mov
add
lret
out
sti
push
jmp
fwait
jle
pop
fwait
cmpsb
stos
stos
pop
repnz
les
push
sbb
or
mov
shll
sti
push
pushf
or
out
mov
or
test
ds
dec
mov
ret
or
pop
int
fnstsw
imul
mov
dec
leave
pop
stc
insl
jmp
popf
dec
lods
sub
jns
imul
mov
dec
leave
pop
stc
insl
jmp
mov
xor
pop
mov
jle
push
lret
cmp
jb
adc
fldt
call
rorb
sub
dec
jno
mov
repnz
ja
stc
daa
bound
pop
adc
in
xchg
lods
popa
or
and
xchg
fldl
arpl
hlt
inc
in
stc
fadd
fstpl
test
cmp
add
fstps
addl
cmpsl
int
and
imul
jns
dec
sarl
mov
clc
pop
call
shrl
push
mov
fstpl
mov
jge
dec
or
dec
pushf
arpl
rcll
gs
mov
add
or
test
pop
stc
insl
jmp
popf
cmp
dec
fnstsw
imul
sub
sub
or
leave
cmp
and
lcall
cmp
stc
add
sbb
in
insb
fdivrs
sbb
xchg
lock
in
push
rcrb
pop
fldenv
pop
stc
insl
jmp
popf
cmp
dec
fnstsw
imul
mov
dec
leave
pop
stc
insl
jmp
popf
cmp
dec
fnstsw
imul
add
incl
cmp
inc
loop
aas
jo
jle
stos
in
jnp
rclb
clc
pop
mov
jg
ret
test
pop
add
xorb
sbb
mov
xlat
xlat
dec
xor
outsl
push
sbb
stc
mov
movsl
adc
cmc
shr
enter
adc
addr16
das
clc
cmp
mov
mov
dec
and
sbb
jno
inc
shlb
imul
addl
push
mov
or
inc
imull
mov
jnp
xor
pop
mov
popf
or
sub
add
rcll
lods
imul
sbb
imul
and
sub
inc
xchg
ds
sarl
ds
mov
sar
adc
push
and
stos
stos
cli
mov
ljmp
inc
xor
sub
lcall
andb
cld
stos
and
cmpsb
push
popf
not
cmpsl
hlt
mov
ds
jge
mov
sub
mov
in
add
jnp
cmpsl
jle
sub
cld
loope
mov
mov
and
sub
mov
adc
nop
xchg
stc
adc
lods
mov
ret
cmpsl
push
adc
mov
mov
sti
ljmp
mov
negl
call
push
out
xor
cld
js
push
iret
xor
jge
xor
push
js
ret
mov
pop
ret
sbb
call
addb
orb
pop
mov
xchg
ljmp
cmc
cli
insl
jo
inc
das
mov
fcompl
inc
xor
mov
push
fs
iret
hlt
and
xchg
in
sbb
jecxz
push
inc
xchg
lcall
mov
sahf
scas
or
scas
mull
js
push
outsl
cmpsl
sbb
inc
outsl
sbb
mov
pop
lret
push
leave
adc
fimuls
jns
imul
pushaw
aas
xor
pop
mov
add
jo
iret
jl
or
aas
mov
test
shlb
add
repnz
xlat
in
and
arpl
outsl
clc
pop
sahf
dec
adc
xchg
push
sbb
or
ficoms
jnp
cmp
je
mov
je
mov
aas
jno
or
das
mov
lcall
mov
add
push
and
inc
outsl
adc
sub
aaa
into
repnz
mov
add
add
shlb
inc
push
jge
sarl
in
sarb
mov
data16
sti
jb
icebp
aaa
mov
xchg
ret
xor
aas
lock
lods
fisubs
dec
rcrl
movsl
dec
cltd
mov
ja
fcompl
ret
lcall
push
adc
cs
nop
and
jns
repz
rolb
arpl
lods
push
subb
mov
pop
mov
push
xchg
scas
imul
mov
sub
cmpsl
mov
sub
xchg
pop
xorb
lcall
lods
in
xchg
jg
cmp
add
out
sbb
xchg
or
loope
std
out
mov
loop
mov
jb
add
jge
cmp
fstps
jmp
xor
gs
xchg
sub
scas
test
cmp
add
jns
bound
push
sbb
into
pushf
fistl
mov
add
jae
out
int3
add
enter
enter
fildl
out
jb
scas
mov
in
mov
pop
jae
pop
and
xor
sbb
test
and
mov
notl
jae
push
xchg
dec
jo
inc
lret
stos
pop
push
inc
test
inc
lahf
and
inc
popl
stos
mov
push
add
pop
cmp
fwait
push
mov
movsb
mov
cmp
ret
jae
push
dec
jle
cmpsb
inc
pop
dec
les
push
jg
hlt
lahf
or
lock
lret
pushf
rcl
jge
popa
inc
mov
adc
pusha
lahf
out
movsl
popf
pop
popa
pushf
add
mov
aaa
out
arpl
std
dec
pop
and
loopne
or
pop
jge
adc
cmp
xchg
pop
fdivs
sbb
or
xchg
sbb
aas
xor
fisubl
lcall
into
xchg
leave
mov
arpl
cwtl
imul
mov
jae
mov
ret
test
cwtl
int3
inc
mov
sub
jns
sti
int
mov
out
push
pop
pmaddwd
mov
and
gs
leave
push
movsb
xor
lsl
into
mov
adc
push
pop
insb
into
mov
pusha
sbb
cmp
fs
jb
dec
push
and
mov
cwtl
push
push
push
inc
mov
addl
fsts
fiadds
jns
cmp
les
jne
and
std
push
inc
dec
ret
movl
or
dec
imul
jmp
imul
sarb
dec
call
daa
xchg
xchg
and
rcrb
push
pop
inc
mov
cmp
cmp
cmp
xchg
outsl
lahf
mov
outsb
and
ret
sti
and
jmp
std
and
or
pop
mov
sbb
mov
sti
dec
mov
xchg
fcmovnu
sub
push
cmp
mov
jnp
stos
xor
inc
sbb
cwtl
inc
jmp
call
shr
jbe
inc
ljmp
push
xchg
and
ret
xor
sbb
mull
pop
inc
mov
js
and
mov
js
add
pop
int
sub
xor
sbb
push
fdivs
adc
sbb
fsubp
adc
mov
pop
cmp
jg
push
xchg
jl
inc
adc
sbb
xor
rol
fmull
adc
sbb
push
sub
mov
mov
imul
test
les
pushf
or
inc
push
jge
ret
test
mull
daa
xchg
data16
pop
das
jae
pusha
or
jge
mov
inc
lock
dec
outsl
mov
dec
add
xor
add
push
mov
fnstsw
clc
jne
mov
inc
pop
repz
sub
clc
pop
shll
pop
jecxz
adc
mov
dec
aam
jns
iret
stos
movsb
fs
dec
pop
dec
int
in
mov
and
and
push
in
add
or
dec
pop
mul
stc
scas
out
ret
adc
or
sub
mov
cmp
jecxz
iret
test
sbb
mov
in
sub
or
mov
cmp
test
push
sub
in
bound
fadds
bound
mov
shll
rorl
adc
jo
sbb
imul
popa
gs
lret
or
lea
jno
pop
cmp
mov
hlt
leavew
pusha
add
es
jno
outsl
es
cmc
inc
add
xchg
ret
test
outsl
in
bound
fwait
push
inc
mov
roll
fcom
leave
cld
enter
pop
daa
xor
push
add
lods
sub
aas
sahf
inc
jb
cmp
shl
out
add
jmp
sahf
jns
mov
and
pop
icebp
adc
daa
dec
add
inc
sub
adc
or
inc
in
push
mov
mov
pop
daa
jae
pop
sbb
fisttpll
add
inc
inc
imul
hlt
lods
test
ljmp
or
mov
insl
push
int3
arpl
jecxz
scas
dec
insl
ljmp
out
pop
dec
andb
lahf
lret
jmp
sbbl
repnz
aam
and
adc
fisubs
xor
pop
jnp
sti
leave
lock
dec
fnstcw
out
xor
test
push
fwait
shll
stc
lea
cltd
enter
xor
xchg
pop
push
pushf
roll
push
pop
mov
xchg
stos
xchg
sbb
xor
in
xchg
mov
jno
lret
test
aam
imul
clc
cmpsb
or
cmp
push
out
add
mov
or
ljmp
jle
adc
jecxz
xchg
or
bound
mov
xchg
pop
int
arpl
and
or
push
xor
mov
movsb
mov
or
jnp
insl
ljmp
fnstcw
cld
pop
test
dec
aam
pusha
les
jl
ss
ret
inc
sbb
and
adc
jbe
shlb
xchg
ds
xlat
pop
or
pop
pop
cmp
add
jns
loope
inc
lods
std
ret
aam
xor
xchg
inc
lret
dec
adc
mov
ja
in
lods
cmp
cmp
stc
xchg
jnp
repnz
mov
jne
fcmovbe
push
std
sub
jl
loop
scas
ja
pop
js
xchg
mov
push
iret
and
adc
mov
mov
add
cs
xchg
shlb
jb
test
std
add
lds
popa
cmp
mov
pop
xchg
jo
outsl
push
cmp
pop
xchg
cmc
popa
ror
jg
movsb
or
nop
mov
sub
insl
ja
pop
lret
fildl
ficoms
push
pop
out
cmpb
or
or
pop
scas
outsl
imul
add
scas
cmp
aaa
inc
sub
xchg
xor
insb
cmpsb
cmc
int
inc
jl
adc
ljmp
mov
out
push
pop
xor
cli
int3
jl
pop
push
stc
and
jo
push
jle
push
xchg
bound
xor
mov
adc
outsl
xchg
outsb
add
jns
pushf
jae
es
cld
add
jecxz
in
xchg
push
mov
or
pop
mov
js
cmp
imul
sahf
aam
sub
shlb
loopne
fisubrl
out
cmpsl
pop
dec
or
jg
imul
mov
adc
cmp
push
std
jne
jo
dec
orb
jb
mov
outsb
cwtl
je
das
movsl
xchg
cli
pop
sub
jns
pop
pop
test
inc
testb
adc
sub
push
jno
int
data16
sub
mov
xor
gs
pop
aam
or
hlt
push
mov
cmp
sarl
jmp
push
mov
int
lods
sub
inc
outsl
lds
mov
divb
nop
ret
repz
pop
xor
pop
mov
mov
pop
test
scas
dec
xchg
or
xchg
dec
xor
aad
mov
add
gs
xchg
repz
mov
push
leave
push
sbb
mov
in
lahf
push
mov
enter
and
mov
xor
jno
notb
pushf
mov
dec
jle
movsl
jno
and
mov
ja
mov
sti
ljmp
dec
jp
pop
and
lods
sub
xchg
es
adc
pop
adc
mov
adc
dec
stc
sub
xchg
in
push
xlat
cmp
pop
call
push
dec
pusha
jle
es
loope
or
pop
or
pop
push
fs
lea
xor
sbb
out
jne
test
scas
push
sub
jl
repz
pop
neg
adc
xor
cwtl
scas
lret
ljmp
sub
xchg
les
test
and
and
mov
mov
sar
out
and
jns
cmp
cmp
movsl
dec
mov
cli
or
add
jge
into
iret
xor
push
pop
push
add
mov
jecxz
push
adc
inc
fwait
cmp
mov
xchg
sub
xorb
pop
push
out
js
not
ja
mov
and
mov
and
inc
inc
test
cwtl
lret
mov
and
sub
sbb
jne
imull
xchg
jg
and
mov
cmp
movsl
xor
push
push
pop
aas
pop
test
or
loopne
mov
xchg
scas
pop
push
jl
jno
jns
mov
xchg
addr16
ja
dec
aad
dec
push
dec
jle
test
movsl
cmp
xchg
mov
inc
sbb
mov
lea
sarl
loope
pop
xor
push
sbb
mov
imul
cmp
rol
mov
sbb
sub
jge
stos
sub
in
shr
out
test
out
lds
jne
ja
das
and
pop
mov
stos
pop
lods
mov
mov
mov
sbb
cmp
push
sbb
scas
ror
hlt
add
shrb
or
gs
call
jbe
or
jge
sbb
inc
and
fiaddl
jb
pop
pop
mov
jne
jmp
test
dec
adc
dec
pop
fstpt
scas
lods
popf
jae
imul
jb
push
fwait
lret
imul
push
xchg
mov
subb
fsubs
jecxz
dec
pusha
add
ficoml
mov
repz
jmp
mov
leave
xchg
clc
int
cld
sbbl
xor
mov
fucomp
mov
lods
sub
pop
es
aaa
cmpl
xchg
jecxz
fsubl
jle
out
gs
push
shrl
mov
pop
sbb
pop
mov
test
push
lcall
sub
lds
and
lret
int3
das
mov
shlb
dec
cld
pop
aam
bound
aas
or
stc
mov
mov
or
add
stos
push
fstpt
and
adc
cmp
out
pop
or
lods
ds
push
dec
xor
je
jmp
lret
cmp
and
imul
mov
outsl
pop
pop
push
add
or
mov
pusha
and
ds
xor
or
movsb
lods
out
jge
xor
leave
push
unpckhps
sbb
push
push
mov
cli
mov
xchg
inc
or
inc
mov
jle
jmp
icebp
movsl
imul
and
fildll
enter
xor
ret
inc
or
cli
and
sub
mov
sbb
dec
jge
push
push
sub
sub
xchg
das
push
xor
inc
push
fldenv
xchg
loop
xlat
ret
xchg
jmp
pop
or
shr
mov
outsl
xchg
pop
push
test
mov
call
ds
adcb
aaa
jnp
loope
dec
in
fists
mov
mov
mov
mov
lods
es
adc
test
pop
sarl
cmp
xor
mov
push
push
jns
outsb
pop
mov
inc
push
jge
inc
jbe
inc
mov
push
fs
mov
std
repnz
or
pusha
adc
daa
mov
clc
bound
std
mov
jae
les
loop
mov
rcrb
xchg
bound
icebp
xchg
push
ja
lahf
cwtl
lods
test
je
jge
mov
or
cmp
adc
adc
or
sub
push
in
adc
push
fstps
lcall
adc
hlt
dec
nop
cmp
test
ret
add
jmp
shrl
xchg
subb
push
push
mov
mov
inc
push
int3
int
repnz
cli
mov
lods
pop
xchg
scas
popf
fstl
xchg
aaa
mov
pop
loopne
imul
add
mov
xchg
push
jbe
insl
xchg
or
negl
ds
inc
icebp
aaa
cli
cmp
test
cmp
xchg
pop
ljmp
sbb
dec
adc
or
faddl
xchg
mov
arpl
rcr
push
xchg
test
ds
cld
ds
dec
sarl
mov
pop
pop
inc
sahf
andl
mov
icebp
mov
or
jne
push
in
repz
and
push
dec
dec
jno
int
nop
scas
out
inc
sub
adc
shlb
xchg
in
mov
dec
add
daa
xchg
or
cli
lea
lahf
xor
lods
inc
dec
add
addb
fnsave
sub
xlat
mov
iret
inc
cwtl
mov
jb
std
sbb
testl
or
sub
mov
jmp
cmp
scas
mov
push
std
popa
notb
mov
jo
push
mov
mov
movsl
add
faddl
xchg
inc
xor
lock
mov
mov
loop
push
ret
add
pop
test
fs
xor
push
loopne
lods
into
out
test
enter
xchg
or
fstp
nop
dec
adc
or
adc
stos
in
aaa
adc
daa
pusha
loopne
scas
fsubs
sub
adc
pop
stos
sub
cmp
dec
test
mov
adcb
sbb
adc
jb
sahf
adc
jg
push
inc
xchg
scas
mov
outsl
cmp
mov
jge
cmpsl
notl
jg
pusha
xchg
push
cld
fcompl
sub
xor
sub
sub
out
pop
inc
call
ret
jmp
mov
enter
in
sbbb
pop
sub
call
imul
daa
cmp
icebp
jb
cwtl
jo
movsl
shl
push
loop
jmp
mov
fldcw
sbb
addl
test
mov
sub
andl
loopne
clc
scas
int3
adc
xchg
frstor
push
xor
cmpb
cmp
jmp
inc
xchg
jno
push
shrl
pusha
ja
arpl
aam
cmp
ja
je
dec
lea
inc
gs
rolb
or
popf
outsb
lcall
pop
push
adc
mov
scas
aad
rorl
cltd
sti
mov
outsl
sub
cmpsb
xor
xchg
xchg
sub
subb
lahf
jo
cmovle
aas
in
sbb
nop
mov
sbb
dec
fdivs
and
repz
xor
cmp
loopne
cmp
lock
adc
mov
mov
mov
ret
hlt
mov
scas
into
dec
enter
ret
nop
out
das
insl
outsl
outsl
lret
fimuls
mov
out
sbb
dec
ljmp
out
pop
cmp
mov
jg
mov
loopne
push
popf
mov
mov
jl
clc
lahf
xor
mov
xlat
adc
xor
fstl
in
jg
dec
loope
jg
fcoml
bound
inc
mov
shl
je
inc
imul
mov
out
adc
or
lcall
fbld
data16
or
ficoml
bnd
aaa
imull
stos
pop
mov
mov
rol
movsb
adc
jle
and
xchg
dec
aam
xchg
push
scas
imul
cwtl
movsl
int3
lods
lret
sbbb
jg
int3
adc
movsb
inc
arpl
cmc
ljmp
xor
ret
or
sbb
mov
jae
call
not
and
mov
das
pop
mov
inc
mov
test
movsb
lock
pop
lock
sahf
push
dec
fcmovu
xchg
inc
scas
sub
js
mov
test
outsb
dec
mov
test
jmp
push
inc
repnz
rorb
xchg
and
mov
and
cmp
inc
mov
nop
aas
push
add
mov
inc
fs
out
int
ljmp
and
xchg
xchg
push
les
xchg
repnz
xchg
addr16
les
push
jnp
inc
mov
push
icebp
or
and
push
mov
test
pop
mov
mov
or
lret
add
mov
and
jmp
and
ljmp
jl
cmp
sbb
mov
dec
add
or
pop
lods
cmp
repnz
out
add
popa
mov
data16
mov
loopne
fisttpl
cmpsb
mov
cmpsb
push
cmp
pop
adc
pop
pushf
and
loop
push
adc
mov
push
sti
shrl
cmp
jg
pop
or
mov
movb
inc
push
or
and
xor
dec
bound
cmpb
cltd
call
mov
pop
ljmp
jge
pop
test
mov
leave
insb
or
adc
bound
pop
out
adc
cltd
bound
xchg
test
je
cmp
add
pop
in
dec
mov
icebp
xchg
dec
icebp
cli
in
or
inc
icebp
pushf
adc
mov
mov
mov
lret
push
cmp
out
fsubrs
insb
in
or
mov
push
inc
test
mov
sahf
data16
es
and
fisubrs
add
sub
add
cmp
xchg
dec
mov
pop
inc
fs
jp
lods
jmp
enter
jl
vmread
xchg
in
fisubl
pop
inc
mov
pushf
mov
dec
xor
mov
ficomps
frstor
push
mov
add
jnp
pop
xchg
xorl
sbb
scas
push
roll
loope
xchg
es
dec
xchg
mov
mov
inc
in
rorl
sti
mov
fmuls
imul
mov
cmp
leave
pop
stc
insl
jmp
popf
cmp
dec
fnstsw
imul
mov
dec
leave
pop
stc
insl
jmp
popf
cmp
dec
fnstsw
imul
mov
dec
leave
pop
stc
insl
jmp
popf
cmp
dec
fnstsw
imul
mov
dec
leave
pop
stc
insl
jmp
aaa
xchg
lods
sub
cs
shll
adc
dec
mov
push
lock
adcb
add
lds
pushl
out
inc
sahf
push
mov
jo
sbbb
mov
pop
rorb
loopne
lock
add
adc
inc
xor
inc
cli
push
pusha
mov
nop
dec
mov
pop
rorb
loopne
lock
add
adc
inc
lcall
inc
ficompl
fdiv
adc
or
lock
cmp
sub
movsb
popa
movsb
dec
push
cli
aaa
inc
sti
imul
sbb
loop
pandn
jne
out
xor
mov
aam
pop
mov
add
lods
shrl
imul
in
add
inc
into
jbe
iret
adc
pusha
nop
mov
xor
pop
subb
rcrb
aaa
lock
adc
xor
cmp
push
popl
outsl
jo
jp
jge
outsl
mov
andb
loopne
lock
push
add
out
adc
cmp
js
nop
pop
sub
xor
test
mov
cmpsb
ffreep
lret
push
mov
fbld
jno
fistps
dec
mov
pop
rorb
loopne
lock
add
adc
and
xor
inc
lahf
push
pusha
mov
aam
int3
ds
sbbl
cmpsl
pop
xchg
pop
push
lods
push
lahf
xor
sbb
or
xor
and
aaa
clc
or
pop
mov
loopne
mov
push
mov
push
mov
xor
outsl
sti
negb
mov
pop
subl
adc
and
xor
inc
lahf
push
pusha
mov
nop
dec
mov
pop
rorb
loopne
lock
add
adc
and
xor
inc
lahf
push
pusha
mov
xchg
addr16
ljmp
pop
iret
dec
shll
cld
pop
in
add
cmc
loope
mov
mov
mov
shlb
and
dec
xor
mov
das
scas
rcr
sub
push
push
mov
or
adc
in
loope
mov
aam
sub
jbe
fnstsw
stc
or
into
inc
rcrb
popa
mov
aaa
iret
movsl
out
mov
push
das
xchg
push
push
movsl
cmpb
inc
pop
cmp
cmc
mov
and
sti
movsb
and
adc
inc
pop
test
mov
shlb
sbb
fcoml
push
sub
jae
insb
test
out
cmc
inc
lcall
fnstsw
inc
mov
in
pop
sbb
xchg
push
in
xor
xchg
mov
scas
mov
pop
and
jg
push
pop
push
jmp
out
push
sub
sbb
pop
dec
cmc
mov
push
leave
test
xor
push
jnp
jns
scas
in
push
lret
jle
pop
adc
pop
fmuls
and
and
lea
enter
and
cli
sahf
cmp
lcall
lret
push
cli
sub
scas
int3
jecxz
addr16
shlb
add
xlat
add
inc
pop
pop
jo
mov
mov
dec
nop
ficoml
ret
pop
inc
or
dec
push
add
hlt
das
shlb
inc
sub
dec
out
lahf
lods
or
mov
pop
cmp
dec
cmpsl
sub
das
xlat
xor
out
jg
aas
test
loope
adc
lds
mov
int3
lahf
stos
dec
repnz
push
fstp
inc
push
add
mov
in
xor
fistl
xchg
dec
sbb
mov
ret
sub
xor
or
repnz
leave
popf
sub
pop
xchg
outsl
cmp
dec
in
cmp
sbb
pop
imul
dec
lret
aam
repnz
cmp
inc
xchg
in
sbb
in
jne
add
stos
cmp
cmp
sbb
int
jb
pop
add
xor
icebp
mov
dec
test
inc
insl
popf
and
pushf
test
out
test
sti
fst
lock
jns
lahf
inc
jno
push
mov
fsub
jae
jnp
daa
data16
mov
addr16
lahf
lds
insl
dec
out
mov
xor
cmc
mov
leave
in
or
add
push
mov
add
dec
lret
and
pusha
sub
out
xchg
mov
sub
cmc
jmp
dec
add
xor
cmpsb
mov
pop
pop
jg
cld
dec
bound
in
out
aaa
cmp
test
js
and
or
ljmp
in
or
push
adc
mov
and
fmulp
loopne
mov
daa
iret
movsl
mov
sub
mov
stos
adc
das
test
pop
mov
pop
push
mov
mov
cmp
fistps
notb
leave
lds
add
movsb
lret
aaa
mov
xchg
cwtl
ss
sub
jo
push
sbb
push
fstpl
stos
sbb
outsl
jge
xor
addr16
movsl
sarl
inc
cmp
jp
pop
leave
adc
mov
subb
xchg
cmc
aaa
ljmp
xchg
rcl
fbstp
shld
jb
pop
push
mov
nop
sbb
mov
jl
pop
inc
inc
lods
dec
and
ret
adc
daa
xchg
decl
std
fisubs
fwait
mov
int3
sub
mov
loopne
imul
push
out
lret
lcall
int3
testl
add
pushf
mov
cmp
loop
pop
inc
cmp
rcr
rcrl
push
pop
jecxz
out
es
mov
sub
push
push
iret
std
mov
fcmovne
in
inc
outsb
add
sbb
imul
push
mov
xchg
lret
out
adc
rorl
fucom
int
out
jnp
dec
test
push
arpl
mov
inc
push
dec
loop
add
and
and
xchg
lods
mov
dec
iret
push
xchg
add
mov
aas
ss
or
pop
pop
dec
daa
gs
jo
mov
cli
sbb
push
xchg
je
subl
je
lret
fsubr
scas
in
repnz
pop
xchg
push
jno
in
inc
notl
in
jl
loopne
and
fmul
js
mov
je
js
xlat
jbe
xlat
pop
cmpsl
loopne
js
mov
add
pop
inc
js
lds
dec
scas
push
lret
movsl
jne
dec
not
loopne
iret
lret
loop
aam
lret
inc
daa
sbb
dec
xchg
test
lods
shlb
jecxz
or
fisubl
aas
pop
sbb
call
mov
cmc
in
out
lret
xor
jl
aas
shlb
and
xchg
and
in
push
cltd
shl
dec
ja
gs
jecxz
jbe
xchg
sub
mov
pop
inc
push
cwtl
pop
clc
xchg
mov
xchg
adc
sub
cmp
das
pop
xchg
sbb
xor
test
push
mov
push
xchg
imul
xor
jl
addl
shll
jno
rcrl
js
xor
shrb
add
ljmp
mov
sub
lods
add
dec
stc
xor
mov
out
push
mov
inc
popf
jnp
in
and
repz
nop
cmc
scas
xor
popa
xor
rolb
and
int
movsb
sub
or
loope
push
xchg
cmp
jmp
lcall
add
lcall
bound
inc
scas
pop
and
fisubrs
jo
cmc
shrl
dec
call
repnz
pop
insb
loope
add
leave
mov
or
cld
mov
test
mov
dec
leave
cld
and
loopne
roll
pop
int3
std
sub
mov
aam
push
lods
sbb
je
clc
fldt
std
push
sbb
mov
iret
cmp
sbb
lds
aam
and
xor
scas
mov
pop
sbbb
adcb
sub
stos
cmpsl
lea
loopne
pusha
xchg
xor
shl
in
mov
adc
jb
xchg
rolb
mov
cli
sti
inc
outsb
add
push
mov
adc
aam
adc
xchg
mov
call
into
lds
rcr
stos
ret
cmp
sub
jns
fdivs
mov
jecxz
in
aam
and
pop
ja
lds
adc
cli
icebp
mov
jb
and
or
or
pop
vpcmpgtd
sti
or
pop
outsb
shlb
ljmp
jg
sub
call
add
sbb
adc
xor
je
jb
in
lahf
das
mov
stos
iret
jo
mov
cmp
jl
fwait
lea
ja
mov
add
cmpsl
dec
insb
push
sub
js
insb
mov
or
and
sub
int3
cmp
bound
push
mov
jbe
cmp
test
jmp
dec
enter
xchg
cmpl
push
mov
out
cmp
into
ret
in
aam
pop
and
ds
sbb
jecxz
sbb
dec
push
dec
xchg
mov
xchg
adc
ret
jae
outsl
sbbl
sub
mov
adc
and
pop
scas
add
out
movsbl
mov
fidivrs
mov
add
movsb
push
add
push
cmpsb
xchg
mov
sbb
shl
jbe
pop
movsb
dec
sbb
adc
test
mov
mov
dec
lods
xor
ret
or
leave
movsl
insb
mov
mov
cs
push
mov
outsb
mov
pop
aad
popa
ja
leave
xchg
adc
xor
scas
xorb
fnstenv
sbb
inc
dec
add
sbb
sarl
roll
mov
arpl
ja
insb
mov
lds
lahf
daa
sub
ljmp
dec
pop
pop
outsl
shr
jmp
lds
push
add
mov
sbb
icebp
xor
fwait
movsb
inc
mov
sub
push
test
cmp
push
push
mov
mov
sub
rclb
jno
imul
std
nop
addr16
aas
jnp
daa
mov
pop
mov
or
aaa
pop
mov
mov
mov
popa
jne
cmp
sbb
lds
jl
mov
lds
pushf
into
push
xchg
push
aam
or
push
andl
pop
mov
shll
xlat
in
or
popf
inc
das
ficompl
cmp
std
cmp
jo
cli
jmp
sub
mov
cld
push
imul
fidivl
add
jmp
add
push
mov
mov
push
xchg
jle
xchg
les
iret
bound
mov
shlb
test
movups
or
sub
aam
fcmovu
dec
ret
sahf
cmc
add
mov
add
sub
out
add
stos
push
int3
xor
outsb
sarb
xacquire
mov
movsl
sbb
mov
jno
push
xchg
cwtl
push
popl
and
cmp
xor
lods
fistpl
cld
inc
scas
sbb
mov
pop
cmc
popa
pop
ds
jbe
adc
int
lahf
or
mov
xor
add
add
cld
adc
inc
iret
pusha
mov
or
mov
mov
stc
cld
addr16
mov
aad
bound
adc
int3
sbbl
imul
inc
popa
xchg
sub
sbb
test
mov
dec
ljmp
test
outsb
push
aad
jge
js
fwait
stos
xor
nop
cld
insb
jno
sti
mov
dec
stc
movsl
and
cmpsb
inc
push
js
mov
bound
out
mov
pop
mov
fnsave
ds
push
shlb
cmp
or
add
aam
push
mov
add
xchg
cmc
popa
cld
test
clc
push
ss
jae
xor
sbb
iret
jecxz
in
lods
add
jbe
sub
iret
aaa
pop
mov
inc
mov
mov
xor
into
jmp
inc
lock
jecxz
dec
fsubs
or
adc
out
movsb
faddp
mov
push
pop
jl
mov
sub
dec
cmp
mov
je
pop
cmp
xchg
mov
dec
adc
push
cmp
lahf
dec
sbb
cmp
je
pop
les
int3
stos
pop
mov
sbb
int
sbb
push
xlat
jle
xchg
pop
sbb
in
mov
mov
mov
jle
dec
adcb
das
and
fisttpll
mov
mov
adc
push
les
or
rdtsc
stc
popl
cwtl
inc
jno
xor
imul
rol
je
jge
mov
imul
add
mov
push
ds
pop
inc
icebp
hlt
adc
adc
cltd
dec
push
loop
adc
dec
add
push
pop
lods
adc
test
rcrl
dec
fwait
in
imul
or
data16
sti
insb
cmpsl
test
push
stos
in
in
dec
inc
push
cli
dec
sub
rcrb
or
dec
inc
mov
divl
in
ss
scas
mov
xorb
pop
imul
scas
pop
scas
dec
xlat
sbb
leave
data16
pop
fwait
mov
jmp
inc
push
lahf
sbb
jg
sub
inc
or
cmpsb
insl
pushf
or
inc
ret
je
sbb
shrl
rcll
lods
jecxz
cld
add
loop
adc
fndisi(8087
adc
fstp
insb
loope
xchg
xor
scas
in
sub
mov
mov
or
mov
xchg
xchg
xor
scas
imul
test
pop
jnp
push
adc
mov
mov
bound
aad
inc
jae
es
xchg
mov
dec
sahf
lea
inc
sub
repz
mov
sub
ja
adc
adc
rcr
mov
pushf
test
outsb
fsubrp
xchg
jnp
mov
iret
adc
in
mov
cld
and
cmp
or
notb
mov
push
cmp
outsl
popa
xchg
ret
mov
sbb
mov
mov
repz
and
sbb
dec
out
fs
inc
lret
push
jg
mov
cld
dec
jb
jl
hlt
filds
mov
xor
and
adc
hlt
xlat
push
in
jbe
add
data16
or
enter
dec
jno
out
fadds
repnz
shll
je
jne
and
xchg
lcall
push
lods
insb
arpl
outsl
cmp
addb
stos
xchg
repz
xor
sub
loope
pop
xchg
add
mov
xor
sub
mov
imul
push
aam
xchg
mov
push
outsl
dec
pop
les
je
xchg
daa
inc
adc
add
shll
decl
ss
shrb
pop
lret
mov
mov
mov
lret
popa
sub
push
dec
or
mov
add
pop
in
push
in
pop
mov
cmpsl
adc
or
add
adc
lahf
ret
add
fldenv
sub
shlb
pop
push
inc
jecxz
or
pushf
push
je
xlat
or
jl
lret
adc
sbb
test
aaa
add
xchg
sbb
inc
xlat
aas
push
cltd
lds
outsb
mov
cmp
lock
pusha
ret
popf
lcall
inc
mov
mov
mov
movb
ds
adc
adc
pop
xchg
into
in
mov
mov
call
nop
add
fisttps
jecxz
mov
xorw
jl
xchg
pushf
pop
add
inc
in
cli
fwait
scas
mov
shll
inc
mov
inc
adcl
ljmp
sub
xor
lock
scas
repnz
out
pop
dec
push
sub
pop
ss
xchg
insl
sub
mov
xlat
sbb
cwtl
cmpsl
sbbl
adc
stos
std
cmp
dec
push
add
push
cmc
cmp
enter
sbb
fbld
dec
and
mov
and
pop
dec
sub
inc
inc
lret
mov
popf
cmp
add
in
pop
out
xor
imul
push
repnz
adc
or
int
mov
push
je
fldcw
sbb
roll
outsb
add
cwtl
sub
sti
lock
imul
lods
repnz
shr
and
repnz
or
xchg
daa
jge
scas
test
and
cmp
out
decb
push
and
outsl
jno
imul
push
fcmovb
cmp
or
aas
cwtl
mov
ja
pop
testb
outsb
lock
test
add
in
add
cmp
cmp
jns
inc
out
loope
fbstp
xor
shlb
lret
arpl
cmp
adc
mov
xlat
sub
scas
fcompl
fistpl
sbb
dec
out
xchg
xor
mov
pop
outsl
or
int
movsb
rcrl
rorb
dec
aas
or
das
lods
sbb
mov
fcompl
fsubrs
mov
mov
xor
clc
fistl
adc
iret
jns
push
scas
ret
mov
sbb
sub
jecxz
das
mov
add
push
inc
lods
nop
imul
sub
jl
enter
adc
mov
sub
out
mov
repz
jb
xor
je
out
lds
ds
xor
jle
or
bound
cmp
lods
rclb
prefetcht0
stos
adc
arpl
scas
jmp
sbb
aaa
push
xchg
mov
pop
outsb
mov
popa
out
lea
call
lret
test
xchg
repnz
xor
insl
jle
gs
mov
cmp
cmp
aaa
jmp
dec
mov
int3
mov
test
inc
inc
push
cmp
in
lock
mov
in
mov
sbb
pop
shrb
test
fcmovne
or
xor
adc
jo
mov
jg
inc
cmpsb
sub
in
pop
scas
push
or
mov
stos
jo
dec
roll
sub
out
or
aaa
ja
filds
push
pop
stos
stos
adc
sbb
inc
xchg
xlat
xchg
out
pop
jl
dec
xchg
push
repz
int3
mov
pop
loopne
popa
out
pop
or
int3
dec
cmpsl
inc
lahf
xchg
ret
xchg
in
cmp
mov
jbe
and
mov
mov
test
in
mul
out
aaa
jle,pt
push
xor
arpl
mov
popa
aaa
cmp
inc
mov
out
add
out
enter
dec
loopne
loop
in
orb
mov
fsts
add
push
pop
push
enter
gs
jg
jl
pop
stc
xor
mov
aaa
push
inc
sub
clc
mov
in
mov
mov
sbb
cmp
out
lret
popa
jle
ljmp
into
pop
cmc
in
xchg
jle,pn
ret
pusha
cmp
pop
nop
mov
pop
insl
cmp
jno
mov
andb
fidivs
stos
out
mov
adc
push
pop
int3
mov
inc
movsl
xchg
mov
push
sub
mov
data16
adc
jno
jae
aaa
incl
fisubs
popf
cmp
cmp
lret
fwait
out
insl
sbb
mov
pusha
add
add
cld
pop
nop
imul
adc
scas
aad
push
addl
add
add
or
adc
adc
mov
mov
mov
fs
rorl
lcall
jl
jo
add
fldenv
mov
mov
js
hlt
and
loopne
lea
f2xm1
stc
dec
xchg
sub
push
fs
jmp
push
sbb
add
shlb
lods
cmp
sbbb
lret
jl
int
lret
xor
lcall
and
test
fdivs
cmpsl
xor
incb
movsb
dec
mull
push
inc
iret
jno
dec
aaa
test
clc
and
xchg
insl
pusha
xor
sub
ja
jbe
cli
fmul
fisttps
lods
pop
add
mov
jae
sub
out
das
in
jo
fsubr
loop
mov
dec
dec
or
adc
push
ret
add
xor
jmp
jle
xchg
in
xor
or
pop
dec
in
pop
out
lods
test
mov
sbb
inc
push
mov
mov
mov
mov
into
loop
fisttps
testl
call
xchg
inc
scas
mov
add
pop
lods
mov
add
xchg
call
les
cmpl
pop
and
inc
lahf
adc
sub
std
mov
push
dec
jge
jb
pop
gs
or
jo
iret
xchg
dec
nop
cld
in
stos
dec
sub
stos
jmp
cs
out
dec
inc
mov
mov
inc
dec
dec
xchg
fnstcw
adc
test
js
xor
sbb
out
outsb
or
les
gs
or
popa
in
jge
imul
pop
push
out
jl
les
dec
int
insb
add
inc
push
sbb
bound
testl
inc
dec
adc
fidivrl
loope
xchg
sub
xchg
rorb
stc
inc
outsb
xchg
aam
rorl
cmpsl
and
push
sub
mov
xchg
adc
inc
add
scas
fdecstp
add
cmp
mov
lock
rcrb
stc
add
mov
jmp
loop
dec
push
lds
imul
mov
sbb
inc
divl
xchg
stos
lds
rcll
sub
test
arpl
inc
xchg
pop
enter
or
xchg
sbb
cmp
aam
adc
es
jp
mov
sahf
movsb
mov
jo
inc
adc
sub
mov
orb
cmp
mov
rorb
clc
mov
mov
ret
mov
mov
sub
lret
sbb
pop
push
test
rcrl
mov
stc
test
inc
sbb
pop
mov
cmpsb
jae
cmc
xchg
test
adc
sub
bound
test
scas
inc
call
sbb
int3
mov
inc
xor
rorb
clc
in
push
out
mov
mov
dec
sub
xchg
js
sbb
cld
movsl
mov
sub
dec
and
mov
xchg
call
in
mov
out
dec
ret
pushf
add
cmp
das
push
mov
lea
lretw
inc
xor
inc
imul
jecxz
fildll
loopne
andl
ljmp
pop
test
xor
fnstenv
dec
xor
xchg
dec
xchg
lock
test
push
fwait
pusha
jnp
jmp
popa
or
cmp
dec
cli
idivl
push
loop
ret
cmc
sar
xor
fcmovnbe
pop
xchg
sub
test
test
icebp
fcmove
jne
sub
xlat
inc
pop
sarb
pop
icebp
outsl
enter
out
mov
rorl
iret
in
push
pop
mov
pop
pushf
outsl
in
mov
cmp
pop
mov
adc
jb
mov
ja
jmp
jne
xor
movsl
lahf
jo
daa
out
push
jne
stos
adc
clc
dec
cmp
pop
rorb
loopne
lock
add
adc
and
xor
inc
lahf
push
pusha
mov
nop
dec
mov
pop
rorb
loopne
lock
add
adc
and
xor
inc
lahf
push
pusha
mov
nop
dec
mov
pop
rorb
loopne
lock
add
adc
and
xor
inc
lahf
push
pusha
mov
xchg
dec
mov
pop
rorb
loopne
lock
add
adc
pushl
cwtl
aaa
pop
fdivs
inc
push
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
hlt
loopne
lock
sarb
mov
gs
inc
inc
push
xor
and
adc
add
hlt
loopne
lock
shlb
test
push
inc
inc
push
hlt
and
adc
add
hlt
loopne
lock
shlb
test
cmp
push
xor
dec
pop
popa
jb
adc
scas
test
jge
das
push
lahf
pop
jl
adc
adc
popa
mov
mov
cmpsb
cmp
dec
and
mov
mov
faddl
mov
mov
mov
aas
sub
fidivrl
xor
and
jno
add
hlt
cmc
in
mov
mov
test
mov
cs
dec
fs
xchg
pushl
popf
or
add
xor
cmp
in
mov
rcll
pushf
xor
sarl
fcmovne
inc
incl
movhps
push
cmp
and
insb
push
fs
test
cmp
in
aam
shlb
test
push
inc
inc
push
xor
and
adc
add
mov
nop
lock
int3
mov
into
xchg
je
add
sub
xor
add
xchg
loopne
repnz
test
mov
loope
in
not
nop
adc
xor
aas
xor
gs
xchg
test
test
clc
mov
test
push
inc
inc
push
xor
and
adc
add
hlt
loopne
lock
shlb
test
push
inc
inc
push
xor
and
adc
add
hlt
loopne
mov
dec
insb
cmpsb
or
jae
add
jge
mov
push
xor
je
mov
sub
ljmp
popa
add
mov
lock
xor
fistpll
fimuls
jae
pop
rorl
sbb
pop
push
mov
movsb
adc
ret
call
adc
cmpb
xchg
jo
mov
xlat
jmp
scas
pop
into
and
jl
arpl
inc
xor
mov
cmp
adc
idivl
ds
jno
hlt
pop
cmp
mov
cmp
cmp
xchg
test
fdivl
test
and
ret
sub
sub
pop
cmp
aas
xor
xor
imull
jnp
inc
mov
mov
imull
push
shr
dec
sbb
jns
shlb
and
js
sbb
sbb
dec
sbbb
incl
pop
clc
fisubrl
and
jmp
jle
roll
jo
add
inc
mov
loop
clc
pop
loopne
popa
push
mov
outsl
and
mov
dec
jmp
dec
adc
daa
inc
push
cmp
cli
mov
rolb
clc
push
add
pop
fisubrs
jmp
leave
in
add
ja
lcall
frstor
pop
mov
xorb
xor
loop
shlb
in
push
cmp
cmp
jmp
dec
clc
cmp
leave
addr16
pop
fucomi
mov
pop
sub
cli
lret
daa
mov
jp
push
int
jp
mov
cld
xor
clc
je
test
cmp
pop
and
lret
sbb
inc
mov
xor
int3
out
sub
aaa
cmp
xchg
in
and
adc
xchg
inc
inc
jno
arpl
cs
jle
clc
adc
in
inc
ss
jnp
or
xor
test
test
fcmovb
push
adc
and
popf
adc
adc
in
mov
and
mov
mov
sbb
dec
popa
mov
pop
ss
xlat
rolb
xchg
cmp
rclb
clc
test
and
xor
sub
rcrl
push
jno
ljmp
jne
int
and
mov
lret
popa
loopne
xchg
mov
ret
movsl
popa
inc
xchg
out
ja
sub
jns
repz
xchg
mov
adc
dec
std
lret
mov
icebp
int
xor
inc
out
sbb
xor
loope
roll
inc
sub
and
xchg
test
shrl
int
pop
mov
xor
or
push
leave
movsb
mov
mov
leave
jmp
lea
roll
lods
and
jb
aad
mov
filds
insl
add
mov
xchg
fcomi
sbb
or
js
sbbb
mov
outsl
gs
mov
js
repnz
and
xchg
xor
inc
test
xchg
add
and
fiadds
cmp
iret
jmp
and
daa
lret
mov
xorl
xor
jbe
sub
lds
test
inc
in
pop
mov
inc
dec
mov
xchg
cmp
cmp
adc
ds
jo
mov
adc
cli
andl
inc
arpl
and
js
mov
int3
dec
or
cmp
jns
mov
frstor
cld
jnp
in
test
push
addr16
notb
cmpsl
shrl
inc
cmpsb
pop
dec
movsl
mov
leave
out
pop
stc
adc
or
mov
adc
xchg
movsl
mov
mov
fs
std
arpl
rcrb
shll
mov
shll
xor
and
jbe
mov
rcl
sbb
add
mov
mov
sbb
test
mov
cmc
adc
dec
lret
es
xchg
icebp
nop
clc
xorl
push
jmp
scas
inc
adc
and
nop
push
aaa
pmaxub
push
pop
mov
sub
fwait
add
lcall
popf
add
inc
inc
repnz
stos
jnp
ja
imul
jo,pt
sub
inc
mov
lea
xchg
in
fwait
icebp
movsb
and
push
pop
inc
rcrl
push
jns
mov
push
int3
dec
cmp
testb
call
add
fidivs
jb
add
jl
add
sbb
push
jns
xor
cmp
dec
jle
xchg
repz
mov
imul
lret
enter
adc
out
out
and
lock
sub
fstpl
test
in
les
in
xchg
sub
andb
mov
icebp
jae
out
push
sti
pop
mov
mov
sub
out
in
xchg
imul
cmp
aad
int3
inc
xor
mov
push
loopne
stos
inc
push
and
ss
dec
ljmp
xor
in
popf
in
fbld
loop
rorb
daa
aaa
das
cld
bswap
adc
sub
mov
sbb
mov
mov
inc
out
pushf
sbb
test
int
pop
imul
inc
mov
sub
xor
adc
add
mov
sbb
in
lahf
add
cmc
push
cltd
jae
outsl
inc
es
orb
jle
aam
gs
xchg
push
pop
negl
xor
outsl
mov
mov
dec
dec
push
adc
mov
inc
test
mov
mov
push
adc
lcall
fidivrl
fisubrl
cmpsb
scas
out
mov
dec
push
push
push
push
sub
jp
lods
push
and
add
int
and
jnp
ds
ret
cmp
jns
or
cltd
mov
xchg
sahf
cmp
push
mov
dec
and
sahf
add
cli
rorl
fwait
ret
stos
test
xor
dec
or
arpl
mov
or
push
pop
pusha
aam
ljmp
lds
xchg
imul
push
aas
mov
faddp
mov
fistpll
pop
daa
testl
lds
sbb
sarl
xchg
lds
xchg
repz
bound
jae
fldcw
jp
fwait
outsb
mov
cs
mov
int
inc
add
and
xchg
testb
int3
xchg
lds
stos
aaa
inc
sub
adc
xor
jb
jne
jge
jecxz
rcrb
test
ficoml
test
test
jge
cmp
jmp
lods
lea
icebp
cmp
pop
jl
movsl
pop
out
xchg
hlt
mov
sub
fucomi
je
les
push
pusha
mov
sbb
mov
mov
aas
xchg
push
loope
js
pusha
xlat
mov
int
fwait
nop
jp
adc
cld
icebp
dec
pushf
mov
ja
dec
push
iret
stos
mov
push
pop
test
addr16
sti
pop
jge
insb
cmpsb
push
mov
xor
sub
push
and
mov
shlb
or
loope
lea
mov
sbbl
xchg
pushfw
inc
loope
fisubs
mov
mov
sbb
inc
dec
movsb
fldt
add
mov
mov
xchg
je
push
jnp
mov
adcl
loop
dec
repnz
inc
push
jg
rcr
ds
adc
xorb
scas
xor
hlt
dec
xor
sahf
cmp
outsb
repnz
pop
lret
ja
mov
in
std
and
mov
add
das
out
push
adc
xchg
stos
sbb
pop
dec
imul
les
std
in
stos
lods
outsb
and
loope
xchg
push
push
inc
push
into
test
jns
lods
in
fisubrs
mov
arpl
and
inc
add
mov
pop
stc
dec
push
add
lcall
mov
mov
in
aas
mov
inc
and
xchg
ss
vhaddps
rdpmc
push
outsl
sarb
sbb
bound
pop
nop
cmp
call
mov
jnp
cmpsl
fldl
sub
fsts
fwait
push
dec
loopne
enter
hlt
and
or
lret
orb
in
push
mov
sahf
icebp
fs
lcall
leave
push
cmp
add
popf
fwait
xor
lea
jnp
xchg
lahf
push
mov
dec
push
mov
mov
pop
cs
pushf
mov
pop
rcrl
fs
sub
cmc
es
jno
mov
ljmp
jne
test
movsl
ret
mov
mov
sbb
in
xchg
jp
daa
mov
cltd
in
dec
xchg
gs
in
xchg
or
pop
out
lods
cwtl
cli
sub
icebp
aas
stos
stos
jno
and
dec
or
mov
or
add
enter
cltd
cltd
loop
push
fstps
rorb
and
cs
mov
mov
flds
movsb
scas
fdivl
outsb
fmuls
xor
pop
pop
and
fwait
rorb
push
push
push
mov
popa
xor
xor
aas
and
xlat
push
int
ret
outsb
int3
ret
test
jg
jo
push
das
aaa
movsl
in
pop
lret
lea
adc
mov
mov
jns
xor
pusha
rorl
testl
lahf
add
dec
cmpsl
push
dec
dec
sbbl
imul
outsl
adc
push
movsb
cmp
adc
adc
adc
outsl
clc
sub
mov
mov
test
push
div
nop
push
cmp
movhps
push
pop
jg
xor
or
bnd
mov
ss
sub
andl
mov
adc
or
push
repnz
test
xchg
inc
int3
gs
mov
imul
xchg
ljmp
push
push
mov
sub
fiadds
cmp
dec
mov
push
test
pop
fsubs
test
jbe
shlb
mov
mov
inc
cwtl
jns
jg
and
lahf
or
xlat
pop
leave
in
and
lods
fsub
int
xchg
ret
inc
adc
adc
call
in
push
gs
mov
movsb
push
ja
mov
out
adc
sti
rclb
or
pop
adc
js
cs
sub
mov
lahf
sub
shll
test
sub
jae
mov
xor
inc
lahf
push
fsts
cmpsl
je
push
push
cmpsw
insb
sub
mov
das
imul
mov
hlt
sub
rcrb
mov
icebp
mov
xchg
les
stos
mov
pop
xchg
sub
add
jge
pop
mov
mov
inc
movsb
inc
jmp
adc
ja
inc
mov
cwtl
lret
js
or
iret
repnz
cwtl
data16
mov
dec
inc
inc
lahf
sub
sbb
or
xor
fisubrl
lahf
insb
jo
lods
aam
out
call
out
out
in
sbb
dec
add
add
fwait
in
stc
mov
cltd
ljmp
cmp
in
insb
rcrb
leave
inc
adcl
lds
int
adc
or
jnp,pn
cltd
js
aad
and
lds
mov
test
es
xchg
jg
push
loopne
pop
aaa
stos
enter
test
push
loope
adc
adc
or
jb
das
and
inc
xor
out
mov
push
and
lods
or
mov
sbb
jns
inc
fwait
mov
push
add
leave
add
clc
dec
mov
outsb
mov
out
pop
sahf
rol
inc
push
push
xchg
test
dec
jno
insb
mov
mov
cmpsb
or
fdivp
and
jmp
loop
adc
inc
cli
sub
and
add
lcall
mov
and
cld
dec
mov
fimuls
mov
xorl
imul
mov
rcr
adc
pushf
xchg
push
fucomp
jae
popf
pushl
fstps
pop
test
inc
sbb
outsb
ficoms
out
pop
leave
fidivrl
test
mov
xchg
pop
lret
lret
push
ljmp
dec
mulb
ret
leave
push
mov
adc
push
sub
aam
or
jne
dec
pushf
movsb
movd
jge
out
mov
push
inc
jbe
sbb
imul
fmull
movsl
lahf
je
mov
call
jle
sbb
jmp
rclb
lea
shr
push
pop
pop
push
lea
fnsave
stos
adc
out
inc
ret
icebp
jmp
sbb
idivb
cmp
fdiv
repz
mov
repnz
mov
xchg
sub
enter
push
xchg
insl
scas
sbb
leave
divb
aam
div
orb
mov
xor
push
les
dec
in
push
aas
cmp
hlt
pop
fisttpl
xchg
mov
popa
mov
or
enter
pop
pusha
in
mov
jle
daa
stos
leave
ret
push
cmpb
dec
adc
xchg
and
jl
xchg
adc
cmp
mov
sbb
pop
popa
bound
dec
mov
cmp
mov
dec
xor
ret
or
jno
xchg
and
mov
daa
push
les
rol
es
cmp
aam
adc
mov
out
sbb
insl
sub
pop
mov
mov
push
xchg
dec
fs
push
ret
or
fadds
scas
xchg
shl
push
insb
cmp
notb
or
imul
or
testb
jns
sti
inc
push
mov
imul
mov
sbb
js
xchg
push
bound
sub
pop
xor
mov
std
or
mov
std
adc
jb
arpl
adc
pop
in
adc
mov
fsubs
add
pop
add
inc
mov
faddl
mov
and
jmp
cmp
clc
inc
clc
sti
jo
jno
aas
fdivp
iret
inc
repnz
sbb
mov
in
and
lret
sub
fisubrl
cld
ljmp
test
jg
sbb
cltd
jp
hlt
inc
sbb
add
push
dec
lcall
mov
sbb
add
stos
adc
in
sub
rorl
sbb
xchg
hlt
nop
in
inc
outsb
sbb
rorb
add
jno
xlat
dec
mov
popa
inc
cmp
mov
push
mov
out
std
jmp
sub
add
cltd
jg
sub
data16
clc
shrb
xor
inc
dec
cmp
adc
add
and
mov
xchg
pop
mov
jle
sub
test
repz
repnz
mov
sub
imul
add
mov
adc
cmp
inc
call
mov
inc
jb
dec
adc
ret
lods
lods
ret
push
push
mov
or
jbe
jle
scas
loopne
sarl
in
push
cmpsb
repnz
cltd
adc
jae
and
xchg
cwtl
jns
sbb
ja
loope
adc
dec
rclb
lret
iret
dec
jae
pop
stc
aam
in
lahf
cmp
out
test
notb
sbb
sbb
fldcw
shlb
out
add
sbb
pop
int
dec
out
test
lret
sbb
scas
in
insb
stc
pop
jl
push
cli
xchg
or
cld
in
and
loop
mov
mov
orb
xorb
dec
repz
mov
test
or
sbbl
stos
jp
adc
popa
outsb
jge
inc
push
js
xlat
paddusb
cmp
pop
flds
sbb
jo
mov
adc
cmc
enter
sbb
sti
inc
lret
out
cmpsl
lea
or
lods
mov
add
push
or
pop
in
aad
sub
xor
es
jne
imul
adc
les
sub
in
ljmp
js
mov
pop
mov
add
mov
sbb
in
mov
movq
addr16
xchg
xor
jg
sub
lea
mov
jle
cli
imul
push
fisttpll
shl
stc
shrb
out
mov
inc
testb
test
imul
and
sti
dec
jle
addl
xor
and
in
fisubs
xor
jb
inc
stos
cmp
xor
or
lret
jne
mov
sahf
jmp
int3
stos
pushf
sbb
sub
sub
lods
xor
std
lcall
push
sbbb
lods
std
mov
mov
outsl
sti
mov
xorb
int3
pop
push
das
push
or
push
js
mov
scas
movsb
mov
enter
jg
xor
les
mov
ja
pop
cmp
sub
adc
jo
shll
xchg
push
std
cmp
fcomi
gs
stos
aam
fistpl
jp
jg
mov
lods
sbb
mov
cmc
push
clc
test
insl
mov
jge
ja
lods
stos
call
fs
cld
adc
mov
shrb
popf
push
ret
shlb
scas
mov
jmp
mov
and
ss
adc
addr16
test
outsl
inc
into
dec
cs
inc
pushf
inc
jno
lret
int3
add
xor
popa
mov
lret
loop
sub
je
add
mov
call
popa
stos
xchg
dec
jp
xchg
cmp
sub
xchg
mull
pop
add
inc
bound
xor
lods
xchg
adc
xchg
insl
inc
or
inc
ret
cmp
in
lods
inc
add
mov
pop
and
stos
aaa
stc
outsl
test
stc
inc
insb
and
aam
cmp
mov
pop
push
xor
push
mov
loope
push
sarl
test
add
js
in
or
daa
scas
add
pop
lods
fwait
xor
add
cmp
inc
sbb
fs
adc
cmp
xchg
mov
push
ret
mov
mov
sub
sbbl
shll
dec
sub
push
mov
xchg
lgs
clc
ljmp
dec
pop
cmp
or
ja
dec
lock
mov
ret
test
push
lods
mov
mov
adc
push
push
cmc
add
fcoms
push
sub
xchg
fwait
cltd
xlat
rcrb
dec
inc
jge
scas
pop
xor
push
jnp
jne
shr
adc
adcb
pusha
mov
sub
andl
stos
jns
fwait
dec
xchg
jl
roll
dec
out
adc
movsl
test
mov
push
dec
pop
mov
pop
fcom
loopne
in
push
jns
pop
negb
sarl
enter
jbe
xor
xchg
xchg
fs
shll
fimuls
cltd
popa
insl
fsubrs
xchg
push
shr
dec
fucomi
dec
gs
push
mov
xlat
aam
jg
pop
daa
lret
scas
lods
push
jl
jp
ret
push
mov
cmpsl
xlat
and
mov
mov
mov
jne
add
dec
pop
pop
outsb
fwait
mov
xchg
mov
lock
cmp
cwtl
ljmp
out
aas
jo
scas
cmp
mov
dec
sub
or
lret
cmp
mov
cs
aam
gs
inc
push
dec
adc
push
notb
pop
inc
outsl
add
sub
aas
pop
cmpsl
inc
jle
xor
pop
xor
jnp
jecxz
std
adc
fmull
sbbb
cli
cs
rcll
xor
dec
stos
and
sti
int3
fstp
shl
mov
add
sub
lods
test
stc
mov
into
xchg
push
in
aam
jg
daa
ficoms
mov
insl
ret
in
add
inc
mov
mov
mov
insl
test
jo
add
pop
adc
pop
lds
sbb
aaa
xchg
aad
aaa
sbb
jbe
inc
pop
hlt
imul
mov
push
and
pop
das
or
jge
call
pop
or
jae
jp
mov
lahf
frstor
xchg
sbb
sbb
sub
and
cmp
addr16
gs
fisubs
xchg
imul
inc
cmp
cmc
fs
daa
insb
jmp
dec
add
cli
test
add
mov
sbb
push
push
cmp
pop
fnsave
mov
fadd
fcomps
dec
xchg
and
pushf
cli
testb
andl
jbe
scas
cmpsb
not
add
cmc
cmpl
mov
adcl
int
mov
test
fildl
aad
jg
sub
xor
in
test
xchg
mov
jbe
subb
mov
sbb
repnz
ja
fidivrs
inc
jne
mov
inc
das
in
dec
filds
dec
cmp
xchg
jno
jb
outsb
dec
sub
popf
fisttps
lods
fwait
hlt
out
xchg
iret
xlat
dec
mov
mov
ficoml
hlt
or
aad
push
lea
push
mov
loop
jo
sub
rcrb
rcrb
and
js
test
lods
shlb
cmp
mov
sub
inc
mov
push
cmp
outsb
xchg
jl
xchg
fmul
movsb
mov
lret
cmp
cmovns
or
out
mov
and
mov
jge
jne
jmp
xor
and
pop
jle
cwtl
or
xor
dec
xchg
push
dec
inc
iret
int
push
pushf
or
adc
dec
out
lahf
lock
shlb
test
push
inc
inc
push
xor
and
adc
add
hlt
loopne
lock
shlb
test
push
inc
inc
push
xor
and
adc
add
hlt
loopne
jo
inc
shlb
movsb
xor
fs
inc
inc
push
xor
and
adc
add
hlt
loopne
lock
shlb
test
incb
daa
inc
test
iret
pushl
xchg
insl
mov
outsb
mov
ret
push
xlat
mov
fstpl
out
adc
xor
arpl
xchg
pop
mov
sbb
ffree
add
adc
insl
pushf
push
lods
arpl
push
jne
lds
add
xor
add
xor
adc
xor
cmp
lock
add
pusha
les
mov
fdivr
fwait
popa
pop
movsl
pushf
mov
dec
adc
insl
xlat
insl
dec
lret
pop
fstpl
or
cld
and
adc
lock
push
lret
call
pop
lret
mov
sub
adc
add
mov
scas
pop
mov
mov
orl
cmpsl
divb
lds
cmp
repz
fsubl
fsubrp
pushf
push
shrd
outsb
xor
or
fst
cmp
and
inc
clc
ret
std
ret
daa
sub
lods
jl
insb
and
lock
xchg
push
repnz
inc
adc
cld
pop
dec
sub
sbb
xlat
push
sbb
jecxz
popa
aam
lds
xchg
jg
mov
cmpl
or
sbb
imul
mov
inc
frstor
xchg
cmp
pop
fcomps
dec
lds
or
jg
jns
jae
inc
mov
iret
frstor
jno
add
or
push
fldl
mov
jae
iret
jge
jne
sbb
repz
fstl
in
and
xor
arpl
xchg
insl
mov
sbb
repz
fstl
in
and
xor
arpl
lds
adc
ficoml
dec
scas
imul
movsl
sub
scas
sub
pop
cmpb
push
jns
xchg
cltd
jne
stos
stos
bound
mov
xorb
movsl
dec
adc
mov
fisubrs
and
addl
addr16
jae
rclb
pop
push
mov
pop
xchg
out
and
pop
push
jno
or
icebp
xor
cmpsl
dec
mov
out
xor
jne
sub
mov
clc
push
dec
leave
dec
pop
cmpsb
mov
loopne
fsubl
insl
iret
jne
ljmp
xchg
pop
push
fsubrs
out
or
popa
jne
inc
gs
dec
loope
mov
xchg
test
jg
mov
jmp
or
aam
or
or
cltd
scas
lock
movsb
pop
sub
push
mov
into
hlt
mov
fucomi
fucomip
or
jo
lods
jp
jg
add
bound
jmp
popa
mov
in
mov
jb
sarl
dec
lds
push
addr16
pop
xor
and
stos
fwait
pop
mov
sbb
shll
xor
xlat
int
xlat
pop
adc
push
pop
sbb
cmp
aaa
out
xorl
push
push
dec
in
lock
pop
jp
mov
dec
in
mov
mov
ljmp
jo
lret
cli
je
mov
sub
icebp
mov
shll
pusha
xchg
loopne
pop
cmpsl
into
call
mov
ret
fdivrs
or
pop
aas
adc
loopne
cmpsb
add
dec
fbld
and
mov
xchg
pop
cmp
xchg
cmp
push
jns
mov
push
sti
jb
lods
daa
dec
out
mov
rol
in
fwait
daa
test
mov
movsl
sbb
inc
xor
popf
outsl
inc
adc
sbb
mov
or
cmp
mov
add
out
imul
push
pop
loop
bound
cmp
mul
add
add
cmpsb
push
sti
orb
daa
out
fistps
shlb
sbb
out
dec
jns
out
aad
and
shr
cmp
arpl
int3
jl
mov
lret
push
outsb
lods
inc
imul
lods
jno
mov
push
jle
repz
shll
in
out
sbb
aam
jecxz
push
push
dec
jno
jmp
aas
pushf
sbbl
mov
test
pop
push
push
mov
aaa
dec
outsl
sub
cmpsb
sub
or
sbb
stc
daa
lret
orb
fists
mov
add
lcall
sub
loop
mov
out
jmp
sub
lods
imul
pop
xchg
inc
jnp
dec
dec
daa
pop
jno
jle
dec
and
lods
mov
pop
and
int3
iret
pop
mov
sbb
cmpsl
cmp
jle
repnz
jno
gs
lcall
fldcw
jg
push
bound
jmp
lock
sub
push
dec
pop
fildll
add
mov
loop
pop
and
pop
stos
test
jl
test
mov
jmp
dec
cmp
lahf
dec
push
lock
aad
cmp
jo
sahf
xor
sbb
divb
jns
nop
sub
dec
sbb
push
jns
inc
js
mov
push
sub
cmp
ret
jg
cmp
out
mov
daa
xchg
cmp
inc
cld
stos
sub
mov
mov
pop
inc
cmp
das
aad
or
jne
lds
testl
add
mov
rolb
or
in
xchg
fwait
cmp
je
cwtl
jle
or
and
cmp
std
jne
ret
dec
sub
ljmp
adc
out
fsub
data16
inc
sbb
inc
xchg
sahf
lods
int3
lds
arpl
jb
mov
lret
xchg
sahf
or
leave
xchg
add
movsb
decb
cmpl
mov
jmp
fildl
or
out
icebp
add
lcall
xchg
mov
jbe
dec
in
cs
pop
js
mov
repnz
imulb
jo
repnz
mov
in
or
xchg
sbb
sbb
xchg
lahf
mov
xchg
insl
jl
mov
jmp
loope
into
jnp
fimuls
add
lahf
inc
arpl
or
ret
sbb
call
sbb
das
testb
shlb
push
cmp
pop
mov
lea
adc
aas
xlat
outsb
fldenv
repz
jo
pop
lcall
sub
orl
add
xor
ds
or
iret
xorb
pusha
jo
ss
cld
dec
hlt
aaa
cmpl
subl
sub
call
mov
mov
lret
push
repnz
shrb
iret
sbb
cld
dec
jae
rorl
jecxz
xor
sti
mov
sbb
repz
into
das
sub
inc
xchg
cmp
out
into
cld
lods
inc
in
sbbl
decb
or
shr
adc
cli
cwtl
sarb
lods
and
and
sub
aaa
pop
sub
cmp
repz
jmp
icebp
ja
je
js
ljmp
mov
das
out
and
mov
sbb
js
sbb
cmp
mov
ret
lock
push
fisubrs
cmp
js
push
aam
xchg
es
pop
jno
sbb
sbb
xchg
xor
mov
scas
loop
outsb
xor
mov
das
lcall
jno
xor
mov
jbe
ficompl
out
sbbl
or
push
mov
pushf
rolb
mov
and
xchg
sti
or
pop
in
sub
jmp
stos
fs
nop
dec
loopne
pop
dec
clc
fisttpl
jp
inc
es
mov
sarl
inc
jno
sub
inc
mov
push
in
jb
int3
loope
inc
fisttpll
pop
negl
inc
insl
dec
aas
adcb
leave
shrl
subps
cmpb
lcall
jbe
faddl
stos
repnz
inc
jo
roll
jbe
arpl
inc
adc
fcompl
loope
mov
ljmp
jnp
cltd
fsubrs
dec
dec
add
jecxz,pn
pop
cmp
cmc
push
sbb
jecxz
xchg
into
movsl
pusha
pushl
xlat
in
decl
mov
xor
or
in
bound
cli
sub
outsl
pushl
mov
sbb
inc
andl
mov
or
lods
std
je
lret
jmp
outsb
repnz
sub
push
dec
outsl
dec
fsubrs
inc
or
cmp
lea
cli
or
cmp
mov
sbb
sub
cmp
jp
orl
arpl
xchg
je
stc
jno
jnp
push
or
pop
sbb
mov
xchg
pop
aas
lcall
in
jecxz
cmpsb
lcall
in
or
fwait
mov
pop
xor
sarb
xchg
jp
mov
and
mov
or
fwait
xor
mov
xchg
jno
mov
sbb
mov
leave
jge
negb
mov
sbb
inc
xchg
and
arpl
push
push
jb
adc
test
jo
jno
xor
aam
pop
lcall
cltd
pop
rolb
ljmp
dec
jbe
fsts
jae
jmp
jae
mov
int3
rcl
sbb
mov
pop
adc
xor
js
sbb
popf
fisttpl
xor
ds
xchg
xor
mov
je
pop
out
out
mov
adcl
ljmp
imul
cwtl
iret
fwait
xor
rorb
imul
pop
sub
fidivl
sub
mov
clc
scas
cld
into
addl
fdivr
clc
lret
mov
cmp
mov
mov
mov
in
imul
or
lds
push
pop
push
ret
sub
jmp
movsb
jmp
out
ret
test
inc
roll
lock
gs
and
pop
psrlw
jae
setne
ret
jo
rcrl
jmp
sarb
lret
popf
imul
mulb
bound
fs
sub
mov
pop
xor
out
ss
in
scas
shrl
mov
adc
leave
mov
lcall
out
pop
testb
dec
scas
enter
or
mov
xchg
mov
and
cmp
repz
ss
stc
loopne
sub
mov
mov
nop
jno
mov
loope
add
pop
and
add
popf
mov
mov
jo
sub
push
int
xor
add
push
les
in
or
push
and
mov
mov
inc
mov
es
lock
scas
pop
adc
scas
push
mov
mov
cmp
mov
adc
int3
loope
addr16
idivb
cli
loope
jmp
jbe
pop
inc
daa
mov
xor
bound
inc
xchg
lods
lret
sbb
and
xlat
cmpsb
pop
cmpb
fcompl
sbb
mov
inc
cs
test
imul
movsb
push
mov
jno
inc
xchg
mov
shrl
inc
mov
imul
jno
jno
push
arpl
movsl
sub
cmp
jns,pt
jo
int3
dec
fldcw
pop
sub
sbb
lds
jnp
aad
leave
loop
mov
jno
sub
mov
or
je
mov
in
out
sbb
lea
cli
mov
leave
cmpsb
sbb
in
cltd
push
out
nop
pop
inc
mov
test
sub
clc
imul
jo
test
push
cld
aaa
es
inc
mov
repnz
popa
sti
push
inc
and
enter
mov
pop
sbb
pop
dec
inc
in
test
mov
cmp
mov
cmp
jbe
xchg
inc
cmp
jae
or
dec
notl
xchg
pop
fwait
mov
xor
mov
je
sbb
and
pushf
pop
jp
inc
lcall
jmp
lds
and
mov
fisttpl
sahf
jge
inc
cmpsb
movsb
add
lds
or
nop
pusha
shlb
mov
lods
push
fdivl
movsl
push
imul
and
lcall
frstor
subb
pop
rcrb
mov
jns
jle
xor
mov
xchg
xlat
stos
in
mov
idivl
test
add
fcmovnbe
arpl
cmp
adc
lcall
jmp
lret
xor
pop
scas
ss
jnp
inc
scas
fwait
pop
sub
cmp
test
mov
xchg
jmp
les
sub
xlat
lcall
fs
cltd
lods
inc
or
out
sub
in
pushf
xchg
test
xor
repz
or
lock
testb
adc
mov
and
mov
push
sub
jo
and
add
gs
mov
test
fisttpl
mov
xchg
fmull
cs
insb
xchg
inc
mov
pop
lahf
adc
mov
dec
aaa
inc
sbb
aaa
mov
mov
lds
roll
mov
shl
jp
sahf
jl
xchg
sbb
sbb
mov
xorl
mov
dec
call
out
mov
dec
pop
xor
mov
jns
sbb
call
mov
adc
jb
out
cmp
xchg
adc
imul
call
out
movsb
outsl
mov
sahf
sbb
out
jb
fcoms
fstpt
xchg
xchg
sub
mov
insl
int
xchg
inc
or
clc
dec
je
xchg
outsb
sub
mov
sub
popa
add
sti
mov
imul
rcl
mov
jle
dec
ror
dec
mov
mov
leave
nop
add
ffree
sub
out
cmpsl
jns
xlat
sbb
lret
cld
stos
call
aas
xchg
sub
cmpsl
xchg
hlt
dec
inc
mov
mov
xchg
daa
jp
lock
jnp
cmp
sub
add
xor
js
test
xchg
inc
into
xchg
cwtl
in
jmp
stos
std
and
or
push
daa
xchg
mov
bound
aam
nop
sarl
cmpsb
cmp
and
lret
jmp
les
mov
pushf
jno
cmp
add
or
mov
mov
ss
add
push
lahf
adc
lds
mov
arpl
push
mov
scas
mov
inc
add
mov
shrl
mov
cmpsb
mov
pop
pusha
cmpsl
icebp
or
loope
ja
mov
fnsave
push
pop
in
cwtl
jb
dec
insb
mov
inc
lcall
sbb
fnstsw
or
xchg
xchg
sti
loopne
scas
cwtl
pop
test
adc
push
xor
dec
cmp
xchg
movsb
sub
mov
mov
and
sahf
rclb
dec
mov
xchg
repnz
cmp
jmp
or
sub
inc
icebp
xor
fistpl
add
rcll
pushf
or
jge
xchg
sub
pop
pop
or
int3
lahf
and
clc
push
movsl
sub
mov
mov
sbb
das
adc
cld
rcrl
js
in
xlat
adc
jo
iret
jnp
out
or
xchg
gs
cmp
in
sub
fdivl
out
out
cs
add
lods
bound
inc
ret
mov
test
xlat
daa
and
inc
mov
cmp
pop
lds
jnp
pop
dec
cmc
push
adc
cmp
lods
popf
lahf
and
outsl
xor
fidivrs
in
and
out
mov
mov
arpl
inc
cmp
rcrb
push
lahf
lds
pushf
xchg
jnp
lods
cmc
jae
pop
pop
adc
mov
sbb
scas
sar
fstps
lahf
inc
js
js
inc
mov
sarb
jnp
ret
pop
cwtl
pfpnacc
mov
add
dec
adc
dec
xlat
jb
sub
sahf
in
jno
aas
inc
dec
mov
das
or
jne
add
idiv
in
xlat
mov
jbe
mov
daa
insb
xlat
mov
imul
mov
push
nop
repnz
fmul
aaa
imul
push
adc
pop
sarb
add
sub
movsl
movsl
or
shll
and
cwtl
pop
lods
ss
dec
fwait
pushf
call
into
nop
outsl
xor
jae
jle
fldcw
push
sbb
jb
in
mov
or
sub
mov
inc
ffree
xchg
mov
lea
out
jl
aam
jmp
inc
pushf
mov
jns
sub
push
push
dec
fldcw
mov
lods
ljmp
or
cmc
push
xor
jg
loope
fs
lods
lret
sub
mov
jecxz
je
or
pop
aad
lcall
lock
test
cmp
xchg
mov
aad
xor
sub
jno
int
push
xchg
sub
sbb
push
fadd
add
mov
and
int3
pop
mov
mov
rorb
pop
or
aaa
stos
les
jle
mov
xor
mov
dec
outsb
xchg
mov
and
aaa
test
fildl
ret
mov
lret
push
xchg
insl
pusha
movq
rcrb
mov
imul
jns
jmp
pusha
std
mov
xchg
mov
mov
sbb
mov
xchg
call
fadds
mov
jecxz
push
pushf
je
xor
push
shrb
add
xchg
jle
popf
and
adc
lret
mov
pushf
enter
andl
gs
ficomps
mov
jmp
sub
push
in
lahf
inc
out
mov
mov
pop
pop
movsl
in
mov
dec
ja
aas
mov
aad
inc
inc
movsb
fidivrl
std
leave
stos
adc
sbb
ret
hlt
lods
cmp
daa
jo
adc
cmp
push
adc
inc
imul
int
sbb
jb
inc
sahf
add
or
push
in
dec
test
add
mov
or
sub
xchg
outsl
lret
sbb
mov
push
and
adc
lods
popf
lret
shll
std
xchg
enter
jns
insb
cmp
push
cmpsl
cmp
xor
jp
mov
push
out
sub
add
cmp
lret
cmpsb
add
popa
fldl
pop
fildll
nop
inc
pop
clc
and
out
mov
outsb
mov
add
sahf
pop
sub
mov
inc
test
adc
pushf
fs
add
mov
stc
es
sti
sbb
addb
push
les
int3
push
sub
mov
sub
dec
pop
jl
cmp
push
mov
inc
ljmp
sahf
notl
push
loope
cmpsb
imul
aas
movsl
in
pop
call
mov
ds
sub
lret
mov
cmc
cld
sarb
xor
mov
adc
stc
roll
mov
sub
adc
jg
dec
jle
push
jecxz
mov
rcrl
scas
cmp
movsl
ret
mov
lret
jbe
and
sarl
mov
or
movsb
or
sub
negl
stc
stos
push
loop
shll
int3
sub
mov
ja
in
pop
push
mov
add
dec
xchg
jmp
dec
push
or
test
test
or
xchg
mov
ljmp
pop
shrb
xor
insl
push
stc
fldt
lahf
gs
divb
push
dec
cs
aam
mov
inc
cmp
movsb
pop
or
aaa
add
sub
popa
jp
jle
fdivrs
gs
mov
sub
jmp
mov
repnz
adcb
push
jl
movsl
xchg
xchg
xor
pop
outsb
movsl
cli
or
mov
pushf
mov
subb
pop
mov
pop
mov
or
out
arpl
inc
sahf
xchg
mov
mov
sub
rolb
mov
sub
cmp
pushl
rol
xlat
and
mov
jmp
add
pushf
xor
mov
jmp
mov
pop
mov
adc
and
mov
jl
outsl
es
mul
stc
adc
fsubs
adc
cmpl
ds
fs
cmp
mov
stos
out
out
xchg
fldcw
imul
jle
jle
sub
jmp
or
mov
fidivl
je
cli
mov
push
push
sbb
mov
mov
and
pop
mov
xchg
lret
adc
ret
xor
test
daa
incl
hlt
dec
shrl
es
jae
ljmp
out
xor
dec
not
sbb
push
mov
ja
es
mov
cmp
push
ja
xchg
mov
imul
push
out
rcrl
sbb
xchg
fnstenv
xor
and
nop
ja
push
or
and
xchg
jo
dec
fldenv
cmp
mov
sti
fadd
cmpsb
aam
push
mov
push
dec
sbb
clc
scas
push
cmp
xor
add
cltd
add
test
daa
popf
call
je
in
je
ror
enter
andl
sbb
mov
nop
xor
add
subl
mov
dec
in
xor
jmp
and
mov
adc
or
cwtl
sbb
out
push
push
pop
cmp
out
stos
mov
fstps
frstor
mov
loopne
and
jle
push
jle
xor
rorb
pop
fsubs
shlb
mov
cmc
mov
out
pop
jnp
stos
dec
movsl
fdivrp
mov
jg
lcall
repz
popf
xor
jmp
adc
clc
push
aad
scas
lods
js
aas
into
pop
pop
stos
inc
pop
adc
roll
ss
mov
lods
int
std
cmp
jmp
roll
mov
mov
add
jle
movsl
add
std
xchg
xor
mov
dec
inc
aaa
sbb
cltd
fst
xchg
sbb
std
adc
jo
outsb
je
in
or
das
sbb
sbb
xchg
in
pop
push
aas
xor
cmp
in
mov
cmp
data16
or
data16
outsb
data16
arpl
adc
fwait
js
incl
scas
test
adc
fnstcw
jg
mov
push
and
test
fldt
ret
adc
lods
sahf
iret
out
inc
cltd
adc
dec
pop
loopne
mov
shll
int3
fldt
in
dec
mov
je
sub
mov
and
cld
mov
pop
add
mov
dec
jb
mov
pop
sti
fcompl
mov
out
sub
test
adc
notl
mov
or
movsb
sti
inc
inc
movsl
std
cmp
test
pop
sub
mov
mov
das
repz
outsb
xlat
call
jae
adc
lahf
inc
and
sar
push
xchg
bound
or
jecxz
repz
fstl
in
and
xor
arpl
xchg
insl
mov
sbb
repz
fstl
in
and
xor
arpl
popf
insl
mov
sbb
repz
fstl
jmp
inc
cltd
push
lods
push
xchg
jns
imul
ret
sbb
xor
cld
and
cli
cmp
or
in
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
gs
sbbb
ret
push
inc
insb
out
add
push
add
or
push
add
roll
or
das
add
add
add
sbb
ja
addb
add
add
add
add
add
add
add
add
add
xor
aas
add
xor
testb
add
add
add
add
add
add
add
add
add
add
jo
stos
add
add
add
add
mov
add
add
add
add
add
add
jmp
adc
jae
pop
add
add
or
dec
add
outsb
add
add
add
add
add
add
jmp
fiaddl
mov
add
add
add
add
add
mov
addl
jae
xor
stos
add
add
add
adc
xchg
cmp
lcall
add
add
add
add
add
add
add
pop
add
add
add
add
add
imul
xchg
outsb
add
jns
push
add
cltd
add
add
add
add
add
roll
aas
add
add
inc
add
add
add
add
add
add
adc
sub
mov
add
add
add
add
add
ret
add
stos
add
add
add
add
add
dec
add
add
pop
add
add
add
add
add
add
push
add
add
add
dec
add
dec
add
add
add
add
add
aas
add
jmp
cld
add
add
add
or
add
add
add
add
add
adc
mov
dec
add
add
add
add
add
and
inc
add
add
add
add
or
push
add
addl
push
add
mov
add
mov
push
add
out
dec
add
add
add
add
movl
jo
lock
add
or
in
pop
add
inc
add
add
roll
add
xor
adc
addb
add
add
add
add
add
add
add
dec
add
add
add
dec
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
adc
push
add
add
add
roll
incb
adc
adc
push
add
add
add
mov
cmpsl
add
add
jne
hlt
add
inc
add
add
or
adc
enter
inc
add
xchg
add
add
adc
enter
addl
sbb
lods
add
ret
add
add
jns
out
addb
add
jns
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
dec
add
mov
add
xchg
add
add
sbb
add
lcall
add
dec
add
add
add
add
add
add
ret
add
insb
sbb
xorb
dec
and
or
mov
and
dec
or
mov
cmpl
shrb
insl
out
lret
popa
adc
and
jnp
fistl
sbb
dec
movsb
xchg
add
in
dec
push
daa
sbb
mov
mov
mov
add
mov
mov
ret
rclb
jg
cwtl
jmp
cltd
mov
addr16
pop
pop
xchg
inc
popf
jp
xor
jmp
lods
dec
gs
pop
dec
clc
aaa
fnstsw
shll
lds
mov
pop
push
mov
inc
pusha
mov
imul
mov
fcmovb
sub
jbe
xchg
push
pop
adc
adc
pop
bound
addr16
les
push
sub
ret
test
jge
daa
je
aam
out
xlat
lea
cld
jge,pn
loopne
inc
xchg
jge
jno
mov
testb
out
add
or
xor
xor
loopne
dec
sbb
inc
xor
sbb
js
push
push
cli
out
cmp
dec
pusha
or
clc
or
push
mov
sub
xchg
cmp
out
pop
shll
push
xor
std
sub
pop
and
out
push
or
pop
pop
aam
cs
mov
and
ffreep
imul
iret
rorl
add
js
nop
inc
mov
pusha
ljmp
sub
enter
insb
xchg
or
or
enter
mov
push
cli
stos
jbe
je
scas
xchg
adc
xor
stc
jp
mov
mov
repz
jb
pop
add
mov
rcrl
es
jecxz
inc
test
mov
cmp
mov
fcmovbe
out
leave
clc
xor
mov
lds
or
daa
icebp
mov
xchg
bound
mov
pop
repnz
sub
sbb
loop
push
dec
mov
pop
sbb
aam
call
aaa
add
cmpl
xchg
sbb
and
jmp
push
nop
dec
xor
in
lods
mov
sbb
xchg
xor
faddp
imul
sub
mov
daa
xlat
xchg
xor
cmpsb
jns
xchg
mov
jne
shll
enter
mov
fs
adc
pop
jo
lret
jecxz
xor
and
jl
jns
fcoms
mov
stos
pop
pop
jp
fsubrs
arpl
or
sahf
cmpsb
push
repz
sub
das
lock
fcmovne
push
shr
and
push
push
loopne
out
rcr
push
test
scas
jno
jnp
sbb
out
out
add
dec
adc
insl
pop
imul
enter
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
