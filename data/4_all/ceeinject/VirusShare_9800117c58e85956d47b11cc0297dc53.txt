fsubr
loopne
decl
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
fs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
push
push
push
push
call
push
lea
push
push
call
add
leave
ret
push
inc
inc
adc
sbb
je
add
fdivp
aad
cmc
xchg
addb
inc
inc
push
je
fs
add
and
aam
aad
in
in
xchg
stos
test
push
jecxz
xchg
je
add
and
aam
testb
out
cli
xlat
lret
add
ss
adc
in
mov
dec
push
sub
mov
pop
pop
xchg
cltd
cmp
filds
xchg
adcl
sbbb
cmp
sub
popa
movsl
imul
clc
lods
sub
in
test
adc
outsb
aam
scas
lds
in
or
or
jb
inc
inc
push
add
jne
adc
aam
aam
jns
ret
nop
in
sbb
xor
scas
unpcklps
out
and
insl
add
push
divb
stos
xor
test
lret
push
scas
xor
xchg
scas
test
mov
shlb
inc
jne
adc
add
and
aam
les
out
leave
xchg
mov
movsb
xchg
inc
sub
sbb
dec
js
push
gs
xchg
movsl
xchg
inc
mov
lock
fcoml
adc
add
push
push
push
push
mov
mov
icebp
lret
mov
cmp
or
adc
add
xor
and
aam
aad
in
cmc
xchg
test
push
inc
inc
push
je
fs
add
and
aam
aad
in
cmc
xchg
test
push
inc
loope
iret
sbb
into
bound
or
je
popa
sbb
std
cmp
sahf
lret
add
pop
lcall
dec
push
ljmp
cmpb
push
cmp
cmp
push
push
mov
xor
pop
sub
xchg
cmp
push
xorb
sahf
sub
and
inc
push
pop
mov
lret
xchg
cli
mov
loopne
xchg
rcl
push
fs
pop
jp
and
hlt
adc
sub
scas
fistpl
movsl
pop
cmp
cmp
xor
inc
ficompl
lret
fwait
xor
ds
repnz
mov
cmp
movsb
cmp
movsl
mov
setle
test
inc
arpl
push
or
test
inc
dec
imul
cmp
adc
inc
or
popw
scas
push
mov
xchg
add
roll
or
or
jl
dec
cmp
or
inc
xor
push
fwait
imul
jns
lahf
fsubrs
ljmp
push
jno
or
scas
cmpsb
and
aas
mov
mov
pop
hlt
jp
adc
cli
sbb
loopne
mov
xchg
and
pop
scas
es
push
xor
test
or
ret
test
daa
mov
pop
fsubp
in
out
sbb
imull
pop
inc
jle
ret
je
lret
pop
aaa
aam
add
fisttpl
sbb
mov
lods
mov
sub
test
pop
add
jno
mov
sub
stc
inc
mov
popa
cmc
mov
and
cli
cmc
scas
cmp
in
mov
inc
popl
sbb
push
arpl
lds
in
adc
sub
mov
in
and
int3
mov
push
lea
loop
mov
xchg
push
andb
mov
loope
lea
jmp
in
pusha
mov
test
pop
pop
test
lods
sbb
inc
lods
cmp
or
repz
cmp
mov
push
mov
sub
mov
mov
sti
int3
pushf
mov
jl
jae
push
inc
outsl
jns
mov
mov
fsubs
cmp
cmp
mov
jo
mov
addl
test
scas
push
xchg
sbb
inc
icebp
sahf
push
add
test
ret
outsl
mov
xchg
mov
pop
addr16
repz
addl
test
ds
out
les
or
cwtl
xchg
mov
cltd
xchg
stos
in
repz
cmp
push
lret
inc
push
pop
jae
fldl
push
inc
add
ds
lock
inc
mov
xchg
fldl
rcrl
ja
cmpsl
call
push
pop
leave
or
cmc
into
adc
shl
fcomps
fwait
or
xchg
xor
xchg
add
and
cmp
and
pop
lret
clc
dec
popa
add
mov
aad
cld
aam
xchg
pop
int
mov
xchg
xchg
xor
inc
cli
mov
push
jmp
or
rcll
and
push
sbb
roll
dec
sub
sub
shll
mov
or
xchg
cltd
pop
popf
xchg
sti
lock
or
pop
mov
fstp
ja
jbe
jle
mov
cmovge
pop
jl
mov
add
pop
xchg
loope
lods
push
imul
jmp
mov
arpl
inc
testl
adc
mov
sbb
hlt
sbb
mov
pop
repz
loop
in
sub
add
scas
mov
arpl
mov
fmul
popa
sahf
mov
rclb
arpl
lods
add
icebp
cwtl
sbb
sbb
testl
pop
push
scas
addr16
inc
sbb
mov
dec
mov
ja
push
push
push
push
test
fwait
jl
adc
loopne
rol
ljmp
push
cmp
xor
mov
outsl
pop
jbe
and
pop
testl
xchg
and
idivl
call
jle
fdivrp
mov
mov
xchg
into
inc
or
mov
mov
dec
mov
mov
mov
fdivr
xor
xlat
mov
xor
sub
imul
imul
stc
dec
adc
sub
adc
test
sbb
in
add
and
xlat
dec
or
add
push
add
repnz
cmp
cltd
stos
mov
lods
inc
imul
add
test
mov
mov
jo
mov
sbb
mov
cld
adc
dec
inc
jmp
out
out
out
cmp
add
cmp
xchg
xchg
scas
sahf
xchg
sub
pop
xchg
cmp
mov
pop
nop
sbb
leave
shrb
pop
dec
jb
jp
ljmp
push
mov
leave
aas
pop
and
adc
outsl
jne
xchg
out
jge
sub
add
stos
fadd
adc
push
mov
sub
mov
mov
xchg
cld
stos
in
nop
popf
sub
std
cmp
push
sub
xchg
sbb
nop
int
mov
or
xchg
cltd
pop
cmpsl
stos
out
cmc
mov
pusha
xchg
std
sub
mov
outsl
and
mov
sti
mov
push
fisubs
inc
movsl
pop
mov
lret
mov
xchg
test
adcb
mov
add
inc
leave
shlb
nop
cmpsb
les
and
and
xor
jle
xor
loopne
jle
shlb
cmp
mov
out
inc
mov
movb
scas
add
or
push
orl
repz
imul
jns
and
rorb
dec
and
jle
fnstsw
push
fs
lds
dec
xor
hlt
out
mov
mov
aas
lds
lea
imul
aaa
jp
mov
movsb
fimuls
or
mov
mov
shrb
mov
int
lods
cmpsb
lods
xchg
adc
and
jno
test
lcall
sbb
pop
cmp
rcrb
gs
mov
and
inc
xor
xor
pop
sbb
add
cmp
xchg
ret
or
fstl
cmpsb
xor
sbb
xchg
jp
push
mov
mov
out
int3
xchg
int3
mov
fisubl
enter
fstpl
in
fstpl
imul
imul
in
sti
pop
jno
subl
cmp
sbb
js
push
push
pop
mov
inc
xchg
xor
mov
adc
sub
xor
ret
inc
mov
mov
leave
mov
pop
push
push
outsl
ljmp
lods
je
out
mov
xchg
clc
jmp
jle
les
iret
jne
xor
cmp
lods
cltd
cs
cmpsl
dec
jle
push
add
cmp
orl
mov
or
xchg
mov
push
testl
push
ja
cmp
es
jmp
iret
mov
dec
jae
pushf
or
jge
and
data16
into
lahf
dec
xchg
in
dec
repz
inc
jns
dec
insb
pop
jmp
lret
aaa
repz
sbb
sbb
popa
mov
int3
faddl
repz
insl
inc
cmp
push
scas
bound
mov
mov
sbb
sti
jmp
scas
jns
outsb
and
dec
mov
sbb
xlat
or
std
iret
aas
data16
movsb
mov
xor
mov
in
incl
fbstp
push
mov
mov
movsb
ljmp
adc
inc
cmp
outsb
orb
rorl
das
ret
sub
outsl
out
mov
xchg
in
pop
sub
insl
aaa
xchg
pusha
push
cs
jg
scas
pop
stos
pop
jl
xlat
mov
mov
push
jno
pop
jbe
push
or
inc
shlb
push
fcoms
mov
rolb
out
mov
mov
sbb
xorb
test
xchg
imul
aaa
jne
mov
adc
mov
stos
cmpsb
jo
je
pusha
cmpsb
in
mov
xchg
inc
mov
push
dec
lods
jle
lods
mov
dec
sar
xor
jne
xchg
push
cmp
dec
popf
mov
cmp
add
or
jle
imul
movsl
lds
insb
mov
fldcw
movsb
cmp
xor
test
inc
es
ret
fld
stos
or
or
nop
pop
ljmp
lock
rcrb
imul
in
inc
fwait
sbb
roll
in
movsl
daa
or
sub
outsl
push
dec
mov
lret
in
fisttpl
out
rcrl
mov
stos
fists
ja
adc
adc
ja
test
aad
out
ja
pop
mov
adc
dec
stc
push
cmpsl
dec
aad
cs
or
imul
imull
imul
ss
movsl
addr16
test
dec
testb
push
mov
call
mov
push
dec
loopne
dec
ja
iret
xlat
sub
mov
call
jo
jmp
in
loope
mov
out
mov
add
mov
je
rorl
in
in
rolb
js
imul
xchg
arpl
call
push
push
cmp
lcall
je
jle
jmp
sahf
es
repnz
xlat
fistpl
or
cmp
or
inc
add
shr
test
out
dec
cmp
arpl
enter
popf
insl
pop
out
jb
ret
xchg
inc
sub
pop
mov
adc
xchg
or
sbbb
and
das
fcompl
mov
rcll
jns
xchg
out
sub
sub
pop
insb
xor
and
jne
mov
mov
andb
dec
ficomps
cmp
dec
rorl
push
mov
cltd
push
dec
or
mov
sub
mov
jmp
or
movsl
lods
mov
lret
push
xchg
and
mov
cld
repz
xchg
sbb
outsl
sti
jbe
mov
imul
sbb
int
test
jb
and
fistpll
in
xchg
int3
movl
std
dec
jno
outsl
jecxz
gs
jb
addr16
in
pop
mov
loop
add
idivl
test
inc
push
mov
mov
mov
into
xlat
cmp
gs
aaa
data16
lcall
dec
add
jae
sbb
aaa
sbb
sbb
in
sahf
jnp
push
mov
stos
test
andb
sub
mov
jp
int3
xlat
mov
leave
into
dec
dec
repnz
mov
shll
fsubs
xor
or
stos
cld
pop
aam
roll
aad
in
xchg
add
jmp
test
les
bound
mov
lret
jne
xchg
jle
fmuls
push
xor
ja
pop
mov
movsb
sbb
mov
mov
sub
or
jp
gs
loop
pmaxsw
sub
sbb
popf
rorl
jecxz
pop
xchg
inc
dec
lahf
int
add
xchg
inc
jb
mov
jns
or
push
dec
or
xchg
in
psllw
pop
iret
sub
dec
in
push
push
jge
loopne
jno
mov
ja
fldt
jg
push
hlt
pop
pop
fsubs
pop
sbb
ljmp
cmp
sahf
dec
test
push
lret
das
xchg
lods
movb
xchg
test
or
push
sbb
pop
pop
and
pop
sub
pop
rclb
pop
push
xchg
fidivrs
xchg
daa
loopne
ja
sbb
xor
mov
add
clc
sub
insl
lahf
flds
adc
icebp
lock
std
and
js
pop
mov
popf
imul
clc
shlb
pop
scas
rcrl
add
scas
pop
pop
adc
inc
fsts
dec
jl
inc
pusha
pop
push
or
out
add
dec
pop
addb
and
icebp
xor
imul
xchg
inc
adc
jns
fwait
lods
dec
or
mov
mov
inc
cmp
mov
fsts
pop
nop
rolb
adc
ret
mov
dec
sub
popf
shlb
pushf
dec
sub
inc
loope
fstpt
and
cmpsl
or
insb
mov
or
outsb
xor
pop
adcb
movb
scas
sbb
shll
mov
jnp
dec
decl
inc
xchg
frstor
mov
shlb
fldcw
add
add
lret
iret
js
movsl
pop
popa
insl
and
popa
xlat
ss
and
outsb
and
mov
adc
ja
dec
daa
adc
cwtl
xchg
lret
and
sub
in
jne
jb
xor
inc
repz
test
sahf
mov
jns
push
in
aaa
lds
lock
call
mov
rclb
call
jmp
es
dec
out
jge
fnstcw
leave
sbb
jne
or
enter
pop
dec
std
out
stos
shll
mov
push
dec
sbb
stos
pop
inc
int
sub
mov
mov
push
sub
lods
mov
cwtl
imul
adc
cmp
push
fs
dec
inc
cmpl
jg
push
pop
push
orb
ds
lods
sbb
test
pop
icebp
fcmovnu
pop
sub
jbe
jle
xlat
test
gs
xor
icebp
mov
das
loop
mov
repz
mov
dec
mov
adc
dec
pop
adc
std
and
call
cmp
sub
and
shll
inc
test
add
aaa
scas
inc
add
push
jecxz
jmp
test
es
lret
pop
ss
cmp
stos
aam
in
daa
test
jecxz
pop
jmp
push
decl
call
aas
imul
sub
je
orl
mov
jp
adc
xor
push
add
fnstcw
jp
daa
inc
ror
and
aad
pushf
test
outsl
fcomp
into
mov
fldcw
lods
lods
push
inc
xchg
in
das
je
sbbb
lret
ljmp
mov
daa
lret
mov
popa
push
ljmp
dec
je
in
jecxz
sbb
mov
sub
add
clc
das
sub
lods
pop
pop
arpl
mov
pop
jbe
pop
js
popf
jge
xor
inc
enter
pop
mov
sub
jae
ret
out
and
fisttpl
cmp
inc
adc
scas
scas
imul
lock
scas
sti
pop
jae
movsb
pop
cmc
push
lret
fidivl
test
btc
dec
adc
lods
xchg
sub
cmp
dec
mull
shlb
push
rclb
sti
cmp
ljmp
push
test
or
inc
sbb
xchg
outsb
and
je
popf
mov
add
pop
ds
dec
ds
mov
outsl
inc
pop
aam
push
dec
insb
das
inc
mov
iret
repnz
cmp
jae
mov
xchg
push
stc
dec
sub
cmp
addr16
push
jbe
push
xchg
test
scas
jmp
imul
dec
jl
stos
ret
xchg
add
cmp
pop
sbb
movsb
out
adc
mov
popa
mov
jne
xor
xor
sbb
test
jno
dec
lret
jp
cmpsb
movsb
cmp
aas
mov
and
outsl
dec
aad
rcll
mov
decl
jl
jne
sub
test
sarl
mov
or
ja
scas
cltd
addr16
add
jl
ss
call
aad
ficoml
fadds
jnp
mov
lahf
jp
dec
mov
push
pop
stos
mov
mov
mov
xor
mov
sbb
sti
pop
jecxz
push
inc
imul
leave
insb
stc
lods
mov
popf
mov
and
pop
mov
or
fistl
mov
adc
bound
push
push
xchg
push
outsb
and
push
xchg
xor
or
add
add
pop
sub
mov
decb
cli
adc
das
cmp
movsl
inc
daa
js
push
pop
addr16
cmp
mov
sbb
arpl
or
movups
cltd
outsb
mov
add
push
rclb
mov
pop
test
mov
and
int
out
cmp
fmull
aad
js
out
xor
test
test
adc
insb
adc
push
stc
loope
inc
call
lret
aas
jno
sarb
rol
cmp
test
and
xchg
lret
push
dec
outsl
std
jecxz
cmp
jl
fs
out
movsl
mov
pop
sbb
cwtl
mov
ja
and
outsb
dec
imul
adc
pop
ljmp
pop
popa
dec
sahf
push
in
bound
jmp
push
shll
jp
jle
shll
inc
and
les
dec
and
xor
dec
iret
adc
in
arpl
in
jle
addr16
push
ret
ret
mov
mov
loope
ret
aas
mov
sti
xchg
jnp
in
and
test
arpl
scas
in
dec
cltd
push
cli
add
cmpsb
sub
std
jne
pop
cmpl
fstpl
insb
push
cmp
inc
cltd
lock
mov
repz
sbb
inc
ss
xlat
and
sub
cmc
push
lods
mov
pop
jmp
rclb
cmp
scas
icebp
bound
inc
movsb
rcrl
jle
lret
cwtl
mov
adc
dec
daa
cmpsl
clc
rcrb
jne
popa
xchg
xchg
or
jmp
outsb
dec
ss
fcmovnu
enter
or
dec
lret
mov
cmp
bound
roll
xchg
push
jno
fimuls
and
pop
mov
test
push
dec
out
add
out
and
cmp
jns
not
and
jb
and
dec
lret
inc
call
outsl
outsb
xchg
inc
loop
jae
add
sub
xchg
xchg
insl
cmp
add
pop
gs
sub
fnstcw
pop
sbb
cltd
icebp
mov
sahf
inc
or
xor
imul
xchg
fidivrs
jl
in
sbb
repz
sub
stos
push
std
xor
pop
fdivs
addr16
cltd
add
mov
cli
cmpsb
shlb
ret
lods
fs
xlat
adc
jmp
jge
xchg
cmp
mov
insb
push
mov
fwait
or
cwtl
hlt
jbe
movsb
push
or
lods
jecxz
xlat
xchg
push
mov
inc
pop
xlat
data16
pop
xlat
sbb
fcoml
je
xchg
insb
push
inc
jno
mov
jmp
mov
pop
nop
jnp
pop
pop
stc
push
mov
mov
fldl
xchg
sub
dec
xchg
push
mov
pop
push
repnz
xor
call
repz
pop
adc
sti
inc
out
stos
add
adc
fldl
adc
aad
jmp
push
xor
testl
fwait
sub
aaa
xchg
mov
inc
and
lods
lret
stos
jb
in
iret
fwait
inc
or
cmp
adc
cli
outsb
sbb
out
movsb
sbbl
mov
lds
stos
addr16
jecxz
in
rorb
xchg
mov
cmp
mov
push
fisttpll
aad
inc
pop
xchg
jge
fs
in
dec
sbb
das
cmp
mov
stos
clc
sahf
pop
jo
pop
jo
cmc
mov
scas
sahf
or
outsb
xor
insl
add
sbb
add
mov
outsb
ja
mov
xor
xor
push
fisubrl
jne
ret
fs
popa
xor
pop
jb
pop
dec
and
adc
inc
icebp
lods
repnz
sbb
popa
xor
daa
aam
inc
mov
and
rorl
les
subb
or
dec
sub
std
jecxz
push
pop
adc
cmp
xor
ret
adc
fimuls
stos
xchg
cwtl
fcomip
adc
mov
inc
jle
adc
sbb
jge
xor
pop
sub
cmp
popa
aam
mov
cmpsl
cmc
inc
lods
sbb
push
or
xchg
insl
fcmovnbe
mov
aad
int
fcomps
mov
mov
push
adc
mov
dec
cmpsl
insb
cltd
es
sub
or
cmpsl
in
adc
push
push
add
xor
cmpsb
fidivl
loopne
push
cmpsl
insl
push
notb
push
lock
or
sahf
rorb
int
ret
jle
jp,pt
insl
push
cmpl
push
clc
mov
into
or
xchg
rorl
or
push
cmc
in
fsub
add
xchg
pop
push
xchg
push
outsb
stos
cli
sbbl
adc
test
or
outsb
mov
jae
addb
iret
jge
pop
mov
cltd
push
es
add
fdivrl
pop
es
push
outsl
hlt
in
and
in
movsb
mov
sahf
stos
shll
push
xorb
xor
mov
es
fistpl
push
pop
push
add
mov
xchg
loopne
sbb
push
push
mov
pop
insb
inc
aaa
push
jle
les
xlat
mov
xchg
xlat
jmp
pop
loop
in
jp
jmp
fs
add
and
aam
aad
in
cmc
xchg
test
push
inc
inc
push
je
fs
add
and
aam
aad
in
cmc
xchg
test
push
inc
inc
pop
je
fs
add
and
aam
shl
in
cld
xchg
addl
je
fs
xor
and
aam
les
in
and
or
dec
fstpl
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
addr16
cmp
or
sbb
aam
adc
and
addr16
ss
es
int3
pop
fdiv
sub
cmp
or
sbb
insb
cmpsl
insb
xchg
dec
xchg
ja
addr16
aaa
sahf
daa
pop
int3
pop
fdiv
xor
movl
push
xchg
lods
addr16
ss
and
push
mov
push
dec
fwait
imul
mov
jbe
icebp
pop
mov
lahf
cmp
ja
xor
mov
sbb
sbb
push
cwtl
inc
push
fmul
arpl
mov
mov
jb
out
fdivrs
cmpsb
inc
mov
sub
add
aaa
mov
mov
inc
xchg
int3
inc
cltd
xor
ret
div
sub
insb
mov
xchg
addr16
mov
adc
shlb
xor
ret
test
shrb
lods
scas
or
push
adc
je
and
xchg
lahf
clc
pop
psrlq
dec
pop
hlt
inc
xchg
push
out
fldcw
inc
or
les
arpl
daa
sbb
into
push
fisubrl
adc
cmpsl
jl
dec
xchg
lods
movsb
push
xchg
inc
test
hlt
daa
in
pop
fldl
imul
cmp
ret
aad
cmp
imul
mov
movsb
push
mov
insb
ret
xor
fmuls
fldcw
jmp
push
cld
inc
stos
sbb
mov
out
negb
jl
dec
xchg
addr16
aaa
in
daa
cld
pop
int3
pop
fdiv
sub
cmp
or
sbb
insb
cmpsl
jl
dec
xchg
addr16
aaa
in
daa
cld
pop
int3
pop
fdiv
sub
das
pop
mov
loop
xorb
xor
sbb
ss
mov
jmp
jne
jns
push
inc
in
jns
jge
repz
mov
cmp
lahf
scas
in
roll
fs
lret
push
add
fidivl
cltd
stos
shll
flds
mov
fcoms
das
jnp
or
inc
lret
push
scas
lret
jae
out
jne
je
dec
lds
cmc
fnstenv
in
sbb
inc
mov
es
jl
pop
roll
jo
push
int3
cs
aas
aaa
jnp
popa
shr
popf
test
xchg
call
mov
fscale
and
loop
div
adc
cmp
std
and
fmull
icebp
sahf
dec
push
pop
hlt
pop
and
sub
mov
cld
fldcw
adc
xchg
aam
and
mov
hlt
scas
in
pop
outsb
sub
push
lods
out
or
xchg
sar
insb
outsb
out
cltd
xchg
or
xchg
push
fwait
sbb
cmp
scas
insl
and
sub
jnp
adc
push
fstl
lock
xchg
push
jge
loop
aad
iret
mov
daa
jae
jmp
loope
bound
and
enter
add
and
sbb
and
fisttpl
stos
pop
sub
stc
addr16
repnz
xor
popf
cmc
sahf
mov
stc
mov
scas
aas
inc
cmp
push
stos
cwtl
lret
cmp
jle
repnz
cmp
shll
out
mov
stos
fwait
int
jg
inc
hlt
enter
arpl
lock
ja
pop
jmp
icebp
lea
popa
mov
cli
int3
mov
mov
jp
mov
cmpsb
and
enter
xchg
or
cmc
aaa
outsb
or
popl
adc
negl
popa
fsubl
push
insb
pop
cltd
cmp
cmp
pop
jl
or
popa
push
sahf
mov
and
divb
mov
movsl
into
pop
or
pop
jp
mov
int3
adc
fisttpl
lret
mov
pop
mov
outsl
ljmp
cmp
popa
dec
xchg
cmp
sub
pushf
xchg
xor
ja
cmpsl
movswl
pop
mov
xchg
fstl
cmp
push
pop
jbe
notb
repz
insb
xor
imul
mov
cmp
adc
sub
movsb
add
sub
sub
jmp
out
scas
mov
out
xor
mov
outsl
xchg
fcomi
leave
insb
xchg
shlb
test
cmp
mov
lret
popa
rorb
mov
and
pushf
lret
jne
out
pop
push
xor
push
inc
ror
mov
mov
loopne
pop
add
inc
pop
and
mov
lods
and
lret
inc
call
sub
imul
aad
adc
cmp
rcrl
dec
sbb
add
pop
fisubl
std
pop
fnsave
bound
mov
aad
aas
inc
push
fmull
inc
pop
sub
bound
nop
and
movsl
xchg
add
adc
rcrb
lds
inc
ret
sbb
ffree
cmpsb
jl
lcall
mov
push
and
and
or
add
dec
mov
arpl
xor
popf
js
pop
push
jmp
ret
arpl
inc
push
lret
jp
push
jbe
cmp
or
dec
pop
and
and
js
cli
lock
push
das
loop
into
add
mov
lea
scas
or
mov
adc
sbb
in
push
lods
rclb
and
aam
in
cmp
sub
mov
push
das
xchg
cmp
mov
mov
addr16
mov
xchg
std
sbb
mov
lock
test
mov
mov
lds
and
fisubs
push
lds
push
mov
mov
mov
jae
stc
icebp
add
call
insl
xor
adc
push
sbb
sub
lea
fistps
mov
ret
jnp
xchg
mov
imul
into
dec
push
or
aam
icebp
lock
jnp
sub
pop
xchg
jmp
sub
push
xor
outsb
or
mov
into
pop
xlat
addr16
out
and
pop
mov
icebp
inc
push
cmpsb
ss
push
in
dec
mov
xlat
sti
repz
pop
mov
cmpsb
xchg
repnz
jmp
popa
mov
sub
or
dec
pop
push
ds
lds
pop
nop
sahf
gs
cld
mov
cmp
popf
insl
stc
outsb
icebp
test
mov
mov
dec
xor
dec
aaa
add
or
insb
and
xor
ficoms
inc
and
adc
mov
push
adc
adc
push
je
and
sahf
or
push
mov
sahf
xor
icebp
cmp
ja
xchg
fsubrl
stc
cli
in
mov
cmp
pop
inc
movsl
dec
add
bound
loop
ds
sub
xchg
lahf
loop
add
enter
movsl
imulb
enter
pop
out
xor
xchg
sub
cltd
nop
push
cmpsl
inc
clc
xor
ret
xor
push
lock
out
cld
movsl
inc
enter
clc
or
lret
cld
div
xchg
pop
xor
adcb
mov
insb
mov
loop
cmpsb
cmp
out
testl
dec
xchg
add
daa
repnz
pop
enter
add
pusha
inc
scas
jb
in
sub
sub
dec
ss
inc
push
mov
xor
clc
or
out
mov
add
fsubrl
mov
leave
test
pop
sbb
push
pusha
pushf
mov
repz
clc
add
jns
aas
shll
or
aad
mov
dec
cmp
push
pop
xchg
xor
xchg
jg
fcomps
adc
mov
test
scas
loope
dec
xchg
jmp
lcall
mov
ljmp
xorl
and
add
fsubl
scas
xchg
push
cs
dec
add
mov
mov
lods
sbb
mov
jmp
aas
je
repz
jg
std
aad
fnsave
in
and
and
mov
pop
scas
xor
pop
adc
mov
icebp
popa
cmovne
and
push
add
push
pop
int3
cld
fldt
sbb
inc
pop
outsl
dec
fisttps
sti
loop
xorb
jl
jle
andb
push
insl
jo
shl
pop
data16
clc
sbb
push
add
in
sbb
pusha
xor
lea
xlat
cmp
jp
sti
push
imul
jl
sarl
test
fisttps
in
dec
xlat
push
jae
jmp
cmp
push
pop
shlb
das
rcrl
out
add
bnd
or
pushf
sahf
mov
xchg
inc
cmpb
mov
mov
add
mov
mov
mov
mov
pop
stc
sahf
sti
xor
icebp
rclb
sbbb
loope
mov
mov
or
mov
pop
ror
in
rolb
sub
pop
mov
iret
and
xor
call
cmp
sbb
sub
in
and
lcall
mov
mov
ret
push
jle
stc
aas
fidivrl
je
cwtl
sbbl
xchg
call
pop
sub
cmp
ret
lret
push
mov
cmp
mov
out
cmp
pop
and
in
jo
push
shlb
sbb
repz
xchg
daa
mov
cmc
mov
sub
inc
mov
push
cmc
xchg
cwtl
ret
and
clc
in
xchg
jl
mov
push
stc
jae
aaa
test
jae
sbb
mov
xchg
fisttps
imul
imulb
loop
clc
or
fcomip
dec
ficomps
or
adc
stos
es
inc
aas
and
or
mov
mov
xchg
dec
mov
test
inc
daa
xchg
int
jge
int3
jl
inc
mov
pop
push
movsb
push
cmp
stos
mov
daa
in
add
lods
test
shlb
sahf
mov
sbb
add
icebp
std
fistps
testl
mov
sarl
mov
lock
into
sbb
mov
lret
mov
data16
leave
in
dec
dec
push
stos
inc
dec
cmpsb
push
loop
add
push
adc
test
stos
xchg
popa
jnp
aad
dec
sahf
aaa
fs
or
pop
xor
popa
in
or
dec
pop
cmp
orl
adc
push
xchg
cld
jae
fucom
addr16
lods
push
mov
xor
je
arpl
mov
push
lds
mov
inc
lock
jo
ja
push
pop
mov
mov
dec
xor
lock
fldt
daa
jmp
adc
stos
inc
and
shll
movsl
nop
and
dec
iret
int
daa
xchg
fsubrl
jns
adc
lods
xchg
hlt
nop
aaa
cmpsb
push
sbb
test
mov
xchg
sub
dec
outsb
addr16
lret
push
mov
rorb
xor
xchg
pop
cmc
push
mov
leave
lock
dec
cmp
dec
out
pop
mov
fldenv
dec
test
inc
sbb
adc
cs
jbe
test
add
adc
sbb
mov
and
or
and
testb
hlt
mov
hlt
loope
mov
pop
fisubl
mov
push
mov
and
jecxz
fimull
addb
mov
mov
sub
mov
inc
pop
in
add
push
add
push
adc
or
sub
in
dec
and
cmpsl
in
adc
push
xchg
mov
fnsave
out
push
outsb
sbb
dec
cmp
xor
imul
nop
jge
mov
dec
sbb
addl
and
out
data16
jb
pop
mov
mov
mov
push
addr16
cmp
cmp
test
mov
repz
xor
pop
inc
mov
sbb
cli
popf
sbb
pop
test
cmp
fisubl
rcrl
mov
cmc
cmpsb
xchg
lods
std
sub
xor
inc
jnp
jbe
and
les
dec
inc
pusha
test
scas
sub
lret
dec
sbb
pop
gs
pop
clc
lret
xchg
add
stos
shll
jl
scas
jg
std
sub
sbb
mov
inc
push
cmc
cmpsb
sbb
sahf
bound
lret
lret
sti
and
pop
in
cmp
lcall
pop
leave
outsb
mov
xchg
jno
adc
decb
xchg
call
pop
das
xchg
adc
dec
xor
add
push
cs
lcall
inc
jne
xchg
jge
addl
mov
xchg
pusha
adc
into
and
jo
dec
jno
or
jns
icebp
pusha
cld
or
dec
ljmp
sahf
sbb
pushf
mov
imul
dec
ret
pusha
cltd
add
bound
sbb
or
mov
sbb
jno
jmp
xchg
add
mov
stos
lods
xchg
adc
mov
insl
divb
or
scas
dec
adcb
aas
xchg
push
fdivr
out
outsb
pop
jp
fidivrl
pop
out
push
filds
dec
xor
jo
das
test
loopne
cmp
xchg
xchg
adc
in
fsubs
jmp
mov
jne
xchg
sbb
lret
test
mov
out
add
imull
mov
or
lret
push
dec
ja
xchg
aam
cwtl
cltd
inc
mov
loop
roll
insl
loop
xorl
and
jb
insl
dec
xchg
pop
add
add
fdivrs
xor
push
loope
jo
cmpsl
jmp
sub
and
out
call
fadd
xorb
test
jo
xor
mov
sarb
out
mov
pop
cmp
pop
dec
jg
call
or
in
sahf
sub
sub
mov
jge
in
imul
in
cmp
push
movsb
inc
stc
popf
outsb
pop
not
ret
or
cmp
out
fisubl
test
dec
xor
sbb
test
movsl
or
sar
sub
cmpsl
mov
repz
test
mov
dec
sub
hlt
fcmove
inc
dec
cmp
and
xor
test
fdivl
lods
enter
push
inc
or
hlt
insb
pop
lret
jnp
shl
jne
adc
fldcw
pusha
xor
repz
flds
and
out
cmp
outsb
jecxz
call
mov
das
pop
or
cmp
xor
mov
xlat
outsl
stos
lahf
mov
sbb
pop
sub
fldt
dec
and
add
das
xchg
push
data16
xor
jnp
loopne
bound
mov
push
add
mov
pop
mov
and
xor
xorl
xchg
cmp
fdivrp
mov
fsts
push
rcrl
xor
movsb
xchg
rcrb
mov
insl
jno
add
addr16
lea
xor
movsl
mov
fs
mov
push
add
into
push
shl
pop
arpl
cmp
mov
repz
dec
sub
mov
out
mov
pop
xchg
push
es
enter
xor
cltd
dec
adc
int
cli
jnp
lret
xchg
sbb
push
cmp
bound
rcr
in
mov
or
insl
mov
scas
mov
xor
lcall
mov
rolb
mov
jb
stos
test
rolb
gs
outsl
mov
lcall
push
add
stos
cld
sbb
in
cmp
lods
mov
pop
push
test
addr16
lret
cmp
mov
ss
mov
cmp
into
fs
jmp
nop
mov
sub
pop
adc
pop
sbbb
cmpsb
hlt
mov
and
xchg
lds
jecxz
roll
insb
bound
cld
add
pushf
push
jp
rcl
rcl
dec
aad
sub
mov
inc
sbb
into
push
jne
sbb
and
stos
pop
and
push
push
das
bound
xchg
popa
mov
push
lods
movsb
push
lods
lea
imul
mov
push
out
lods
jae
mov
mov
mov
add
iret
inc
xchg
push
cltd
pop
lret
push
aas
and
je
pop
es
addr16
pusha
fdivrs
sbb
movsb
std
jb
testb
sub
filds
xchg
xchg
mov
mov
outsb
push
pop
outsl
cmpsb
mov
fsubrs
xlat
xor
mov
inc
in
jl
lcall
or
xchg
pushf
stos
xchg
addr16
cmp
xchg
mov
aam
call
pop
mov
xor
ds
mov
cmp
jae
xchg
in
jno
outsb
xchg
fimull
xchg
clc
ja
outsl
xchg
insl
cmpsb
fidivl
pop
cmpsb
mov
xor
sahf
in
pop
push
dec
mov
sbb
fmull
inc
jae
xor
mov
in
int
into
lds
mov
scas
pop
fs
test
or
sbb
pop
push
inc
lret
fsubrl
ss
pop
cli
xchg
into
shlb
or
bound
or
inc
fsubrp
movsl
std
or
mov
lcall
inc
in
popf
test
aaa
jg
pop
rorl
sahf
jno
shrb
pop
jnp
push
xor
out
ret
jmp
pop
adc
data16
xchg
out
test
fcomps
jge
mov
arpl
leave
adc
out
data16
cmp
sub
sub
xor
fcompl
cmc
pop
xor
xchg
ss
cmp
add
sub
fdivrl
xchg
fwait
icebp
push
addr16
adc
xor
xchg
lock
in
xor
mov
inc
dec
enter
in
fisubrs
xchg
loop
mov
mov
xor
xchg
mov
push
push
unpcklps
or
std
imul
popf
stos
jle
push
nop
lods
lods
dec
subb
sbb
jbe
fcompl
test
push
xchg
sbb
or
xor
pop
dec
lahf
xchg
jge
pop
sub
cmp
pop
in
clc
xchg
daa
in
mov
mov
testl
xor
lea
adcl
push
ljmp
lret
inc
mov
dec
mov
xor
mov
mov
in
testl
imul
aas
addl
sbb
pop
fdivl
xchg
xor
jle
insl
lea
push
test
push
or
cmp
mov
xor
es
loope
jae
push
pop
sub
test
mov
pop
gs
dec
cmp
ja
into
sahf
mov
inc
mov
jo
cmp
outsb
call
cltd
pop
imul
inc
std
and
cld
stos
lds
mov
or
mov
cmpsl
push
jg
rcr
aam
loop
lret
enter
xchg
movsb
sub
inc
test
lret
outsb
fcompl
bound
je
xor
xchg
sti
je
arpl
mov
cli
cmp
ja
xor
dec
dec
cld
addr16
enter
inc
sahf
mov
push
fldl
push
scas
add
add
shlb
cld
inc
movsl
mov
push
jo
popa
xchg
pop
push
push
mov
and
rcr
push
rcr
sarl
loop
mov
push
andw
aam
dec
inc
stc
dec
add
cld
inc
pop
jnp
in
mov
dec
mov
sbb
daa
push
jno
mov
jb
imul
popa
push
cmp
lahf
and
xchg
popf
in
test
add
test
rcrl
sbb
cli
scas
sub
orl
outsb
insl
xorb
fs
test
xor
and
pop
xchg
xchg
jbe
push
sub
pop
xor
test
lcall
xchg
cmc
jmp
lock
adc
dec
jnp
xchg
inc
add
insl
out
inc
mov
mov
rclb
mov
jno
mov
loopne
mov
jp
mov
rclb
sbb
push
jbe
arpl
jmp
sbb
mov
repz
lods
movsb
pusha
imul
scas
pop
les
adc
add
mov
push
mov
clc
cmp
mov
pop
inc
addl
lods
inc
fisubrl
iret
shll
pop
mov
neg
enter
inc
mov
lods
stc
mov
xchg
jnp
push
mov
outsb
scas
mov
push
and
nop
jns
xchg
jmp
adc
add
ljmp
inc
pop
lret
icebp
lret
shlb
xor
xor
aas
and
loope
xorb
test
addr16
xchg
dec
or
jae
pop
fdivrp
bound
add
sbb
mov
imul
xchg
jge
mov
xchg
push
aas
hlt
cmpsb
add
dec
dec
fcoml
ljmp
sbbb
inc
gs
test
jns
mov
fdivrl
stos
add
repnz
dec
repnz
mov
fldt
gs
insl
xchg
inc
push
mov
xor
add
loopne
mov
sbb
sbb
xchg
adc
enter
in
insl
push
sbb
sbb
sar
pusha
inc
pop
pusha
fiadds
cmp
xchg
sti
js
xor
rolb
jp
in
mov
jo
pop
ret
test
icebp
dec
ret
out
push
pop
sbb
sub
ficoml
sbb
xor
cli
adcl
pop
pop
inc
cmc
and
ret
call
xchg
adc
scas
dec
insl
lods
je
jp
mov
lds
xchg
or
xor
das
scas
ja
lods
cmpsb
shlb
cmp
stos
fstp
data16
fidivrl
cmp
insl
movsl
mov
inc
cmp
mov
das
cs
dec
test
nop
xor
xchg
sub
add
cltd
adc
imul
enter
outsl
fcompl
push
add
inc
notl
arpl
enter
mov
mov
loope
stos
test
outsl
roll
push
stc
mov
or
mov
cmp
jo
arpl
aam
loop
jmp
jno
nop
jp
xor
je
sbb
test
dec
adc
inc
out
scas
cmpb
sub
xchg
sbb
loopne
jb
xchg
stos
lea
int
push
sbb
xchg
jge
outsb
call
addr16
pop
mov
mov
jne
arpl
subl
mov
pop
pop
mov
in
and
or
mov
dec
addb
or
js
sub
cmp
in
popf
fcompl
cmpb
mov
inc
xor
aas
in
lods
mov
mov
loop
mov
cwtl
mov
or
stos
jl
iret
lret
push
pop
inc
jge
ja
jmp
scas
pop
stos
add
rclb
sbb
fs
rolw
out
sbb
dec
cmp
sub
mov
and
pop
sbb
sbb
and
or
notb
jle
leave
popf
in
sbb
sbb
insb
cmpsl
jl
dec
xchg
addr16
aaa
in
daa
cld
pop
int3
pop
fdiv
sub
cmp
or
sbb
insb
cmpsl
jl
dec
xchg
addr16
aaa
in
daa
cld
pop
int3
pop
fdiv
sub
cmp
or
sbb
insb
cmpsl
jl
dec
xchg
addr16
aaa
in
daa
cld
pop
enter
sub
cmp
or
sbb
insb
cmpsl
jl
dec
xchg
mov
inc
fs
sub
clc
mov
inc
or
adc
add
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
addr16
subb
xor
mov
fwait
aaa
iret
cli
aas
mov
pxor
insl
lret
dec
and
sbb
dec
fistps
cli
aas
mov
pminsw
sahf
outsl
lret
dec
lock
fmull
xor
dec
in
inc
sti
jl
sub
dec
imul
enter
ret
pop
pop
cltd
cmp
xchg
test
adc
cmpl
es
mov
cmp
test
popa
lahf
fimuls
jne
jno
outsl
jle
lods
dec
pop
push
ret
sub
loop
or
jns,pt
inc
ljmp
adcb
test
jg
mov
imul
xchg
pop
xor
sub
addr16
nop
fbstp
movl
stos
push
xlat
adc
push
ljmp
sub
outsb
lcall
adc
mov
insb
iret
lahf
mov
inc
mov
lcall
pop
lret
mov
jbe
push
ds
dec
add
sub
push
je
xchg
lret
and
dec
scas
dec
fdivl
mov
sbbb
stos
lret
jns
push
imul
adcl
sbb
cli
mov
dec
shrl
es
mov
out
jp
push
mov
jmp
pop
in
das
fwait
jp
dec
fistps
stos
aas
mov
pminsw
outsl
lret
dec
sub
sbb
dec
fistps
stos
aas
mov
pminsw
outsl
lret
dec
sub
inc
mov
sub
or
jns
movsl
jle
imul
add
stos
roll
push
sbb
cmp
sub
hlt
and
hlt
int3
cmp
cmpsb
out
lods
sub
mov
add
je
daa
lahf
xchg
insl
in
mov
insl
mov
stos
xlat
add
sub
data16
push
or
ss
pop
addr16
imul
add
adc
rcll
outsl
imul
sub
lods
jmp
or
stc
sbb
lcall
outsl
or
push
leave
inc
xchg
dec
xor
adc
cld
xchg
addl
jmp
mov
pop
inc
movsb
aaa
stc
jb
xor
add
test
repz
test
aad
into
sbbl
int3
call
adc
mov
or
cli
in
mov
fmuls
mov
dec
mov
hlt
pushf
pop
popf
icebp
inc
or
sti
pushf
dec
push
jb
mov
pop
and
movsl
cmp
sub
jno
mov
stc
lahf
xchg
mov
xchg
sahf
sbb
movsl
flds
fcoml
dec
js
sti
cld
stos
mov
pusha
daa
outsb
cmc
hlt
mov
inc
sar
jns
pop
and
sbb
mov
or
mov
negb
and
ss
insl
clc
xlat
lock
mov
mov
std
cmpl
jmp
test
sub
xchg
mov
vpackssdw
jle
cltd
cwtl
sub
popa
cmpsb
mov
test
gs
les
pop
push
push
nop
jns
xchg
cmp
outsb
bound
out
or
xchg
shl
jae
adc
adc
xor
int3
xchg
xchg
sbb
xor
push
inc
mov
xchg
aaa
mov
loope
add
cwtl
adc
or
push
inc
out
and
repnz
or
xor
cmp
in
add
fdivp
cmp
jmp
or
push
cmp
sti
fimuls
jno
mov
mov
popa
scas
cli
and
xor
inc
cmc
sti
add
in
fisubrl
push
scas
jge
lods
iretw
jle
in
dec
inc
pop
inc
outsl
lods
mov
lahf
and
or
outsb
or
adc
or
push
out
iret
aas
shr
cld
dec
dec
cmpsb
jne
xchg
test
xchg
push
cmc
into
push
mov
imul
movb
out
test
out
push
mov
fistl
xchg
into
cmpsb
aas
mov
rorb
inc
das
push
flds
out
sbb
mov
bound
aas
lea
repnz
and
insl
sub
mov
mov
mov
jge
pop
jo
inc
mov
div
scas
fldl
nop
push
add
xchg
inc
sbb
je
mov
loop
dec
mov
daa
shll
inc
and
mov
movsl
add
scas
adc
dec
repnz
fsubs
jmp
iret
push
inc
xorb
xchg
mov
lea
adc
sahf
leave
xorl
sbb
push
es
daa
ljmp
xchg
push
repz
or
scas
in
popa
jmp
icebp
jmp
mov
push
dec
jge
fnstcw
int3
sub
stos
pop
lock
inc
call
addps
adc
mov
adc
inc
push
fwait
pop
sub
fildll
shrl
movsl
adcb
into
push
jno
nop
sub
mov
push
xlat
loopne
mov
lods
push
and
sbb
movsb
pop
jmp
call
or
add
mov
andl
pop
aad
pop
ja
sbb
scas
loopne
sahf
inc
inc
popf
fidivrl
mov
cli
ja
into
xchg
jp
pop
lods
jl
mov
xchg
dec
clc
sbb
adc
pop
orb
sub
sbb
or
mov
jae
mov
stos
dec
and
xchg
testw
andl
cmp
pop
push
or
sub
xorl
xchg
xchg
js
stos
repz
dec
orl
mov
xlat
ficompl
fldenv
bound
or
shrl
and
jg
scas
out
xor
push
popf
cmc
es
es
mov
fwait
out
pop
pop
test
xor
inc
sbb
icebp
rorb
sahf
shlb
shrl
mov
popf
jmp
mov
xchg
sbbl
xchg
inc
push
mov
cmc
fisttpll
jecxz
push
xor
subb
mov
mov
ja
mov
sub
push
sub
jl
iret
mov
jmp
push
or
inc
jno
or
push
pushf
icebp
and
pushf
sbb
xchg
adc
sub
jle,pt
lods
filds
lahf
jecxz
dec
inc
and
pushf
outsl
daa
or
jnp
sbb
fidivl
inc
mov
pop
cmp
push
jmp
leave
mov
cmp
neg
inc
xchg
cmpsb
cmp
mov
fsts
mov
call
cmp
add
xchg
sub
fbld
mov
mov
mov
mov
fisttps
dec
cld
mov
pop
and
jb
in
dec
push
fdivl
mov
cli
in
sarl
popa
mov
xchg
enter
mov
cmpsb
xor
insl
cmp
push
xor
push
pop
mov
shl
inc
inc
pop
es
bound
jb
and
xchg
push
xor
rcrb
in
inc
mul
adc
lcall
add
mov
movsb
test
pop
std
nop
daa
or
inc
daa
scas
insl
sub
mov
fmulp
xchg
dec
inc
add
add
pop
push
in
out
out
pop
mov
out
fwait
xchg
mov
mov
adc
scas
cmpsb
sbb
inc
shl
lods
cmpsb
int3
aad
mov
cmp
fmuls
out
pop
and
adc
cmp
xlat
pop
andl
fadd
add
movsl
or
jo
cmp
nop
jne
pusha
adc
nop
lret
gs
iret
pop
outsl
hlt
mov
jne
daa
popa
fiaddl
pop
mov
jae
test
mov
push
sbb
bound
add
rorb
pop
int
jae
and
movsl
and
mov
mov
and
clc
dec
es
push
cmc
pop
repnz
xchg
add
pop
call
push
adc
dec
add
cmp
dec
cs
adc
jecxz
fs
lods
xorl
in
or
or
mov
clc
xlat
aaa
data16
das
add
pusha
jecxz
mov
xchg
add
push
sub
hlt
popf
jge
stc
mov
sahf
testb
loop
adc
cmc
jl
mov
xor
test
cltd
fistps
dec
dec
inc
and
pop
popa
lods
fs
xor
xor
lcall
adcl
mov
sbb
stos
das
mov
or
sub
adc
adc
addl
mov
iret
pop
pop
or
adc
jp
sbb
jo
imul
xor
test
mov
cld
sbb
cmp
cmp
sub
xchg
and
adc
cmp
dec
popa
call
ss
or
xor
scas
mov
pusha
jo
mov
cltd
in
jnp
pop
sbb
aad
mov
sbb
mov
sbb
outsb
dec
test
popf
push
and
xchg
les
or
inc
mov
inc
push
jae
cmpl
lock
pop
adc
jg
or
add
and
dec
mov
xchg
aam
insb
out
scas
xchg
jp
pop
inc
cltd
inc
inc
dec
xchg
lahf
aas
push
bound
je
stc
stos
adc
pop
aam
mov
push
or
icebp
movb
push
addr16
mov
xorb
inc
adc
out
adc
out
or
inc
sbb
mov
xchg
mov
dec
pop
mov
add
pop
fldl
lds
xor
mov
push
call
dec
lcall
or
repnz
dec
mov
shl
inc
and
xchg
lcall
fimull
sub
cld
lahf
clc
js
jl
pop
and
ret
mov
dec
mov
clc
pop
sti
add
ljmp
push
pop
xchg
pop
sub
ja
mov
imul
add
inc
test
mov
inc
fistpll
aas
xchg
cmc
adc
mov
outsl
jmp
cmpsl
shll
fs
shll
jg
xor
rol
insb
mov
cmp
std
add
push
pop
or
dec
pop
xchg
les
add
sub
in
ret
stos
pop
sub
mov
jle
push
cld
sbb
fisttpll
addr16
dec
cmc
movsb
cltd
movsl
or
loop
out
es
mov
xor
push
sbb
pop
scas
push
sbb
sti
shl
cmc
jge
movsb
fucom
rcrl
and
xchg
jg
dec
aam
call
sarb
sti
inc
sahf
mov
cmp
or
pop
mov
addr16
dec
inc
aam
dec
in
mov
in
mov
jl
and
jmp
mov
cmp
add
sbb
dec
rclb
fdivl
adc
popa
fucomip
sbb
add
loope
sub
mov
and
or
frstor
xor
sbb
cwtl
lods
adc
pop
pop
sti
sub
sti
in
jg
xor
pop
imul
cwtl
aad
int3
or
mov
lods
popf
mov
imul
or
pop
testl
mov
bound
stc
cmp
movsl
mov
pop
lret
push
cmp
insl
rclb
xor
movsl
pushf
aad
stc
rcll
mov
loope
xor
pop
aad
push
popa
mov
loop
dec
mov
incl
mov
xchg
loopne
lret
cltd
into
fs
and
test
add
movb
cmp
aas
or
xor
cmp
ret
in
mov
xor
sarl
pusha
mov
inc
scas
mov
xor
jns
jg
cmpsb
xor
push
push
add
mov
xchg
aas
js
iret
xor
push
xchg
inc
test
int
call
add
aas
scas
aad
xor
imulb
and
xor
or
xlat
aaa
adc
and
mov
adcb
loope
out
bound
sbb
lods
xor
scas
out
arpl
sbb
sub
les
pop
inc
mov
inc
cld
jnp
iret
push
xlat
add
aas
bound
jp
int3
shufps
push
xor
mov
aas
xchg
lods
adc
mov
out
loop
int
push
in
orb
mov
scas
idivb
xor
cmp
lock
xor
fs
add
lds
push
pop
pop
fstps
mov
aad
aad
adc
mov
ja
negb
fs
mov
sahf
lods
jo
dec
pop
and
or
out
stos
cld
mov
lret
cmp
js
dec
lds
out
push
push
imul
aam
dec
adc
aam
leave
add
sbb
push
test
jg
repz
shrl
and
xchg
sbb
scas
cmp
out
cmpsl
stc
loopne
stos
test
ds
xchg
push
inc
xor
test
mov
fnsave
inc
test
fwait
lock
testb
scas
inc
mov
and
movsl
loop
ljmp
xor
imul
push
das
les
cli
mov
enter
push
cmp
jmp
inc
pop
xchg
dec
dec
enter
leave
imul
mov
ror
adc
xor
mov
xor
xchg
mov
jge
jmp
call
and
popa
jmp
fisttpl
adc
adc
add
mov
mov
leave
sbb
das
mov
int
mov
cmpsl
and
mov
xor
lret
pop
sahf
jne
enter
fcmovb
sbbl
test
or
mov
popf
out
fsts
lea
mov
mov
inc
inc
push
cvttps2pi
outsl
fidivl
mov
mov
fldt
fcoml
test
and
das
mov
mov
mov
push
or
pop
cmc
je
cltd
mov
xor
cli
sahf
mov
jne
inc
xor
and
in
pop
push
sbb
outsb
shl
fnstsw
cmp
jmp
rcrl
lock
dec
ret
mov
push
testb
push
dec
or
int
out
mov
arpl
jnp
pop
jns
sbb
mov
mov
and
loopne
mov
push
mov
jns
inc
inc
in
minps
sub
test
mov
jb
jbe
xor
cmp
adc
add
mov
mov
push
loop
inc
sbb
inc
movl
jg
sbb
scas
movsb
sub
xchg
pop
mov
xchg
xchg
lahf
jo
add
push
xchg
add
stos
loop
aas
cli
fdiv
mov
out
cmpsl
popf
lods
js
inc
cmp
loope
lcall
add
fst
sbbb
pop
in
mov
cmpb
aad
pop
push
pop
mov
sti
sub
and
aam
or
mov
cmp
fcomi
ret
lods
bound
mov
jle
popa
mov
bound
ret
mov
out
or
and
leave
jmp
adc
int
and
pusha
fwait
push
imul
subl
dec
inc
jge,pt
popf
push
mov
scas
jg
jnp
sbb
xor
push
rorb
shlb
push
and
dec
pop
sti
mov
fs
xchg
fnstenv
inc
mov
jle
insl
mov
xor
sbb
fnsave
push
sub
in
icebp
test
jmp
and
ret
imul
sub
clc
mov
mov
mov
test
or
ja
mov
fisubrs
jle
xchg
jl
mov
fists
mov
pop
mov
cwtl
cmpsl
imul
mov
pushf
fxch
pop
jle
aam
loope
cmp
loopw
push
cwtl
xor
dec
aas
jns
loope
rcrl
lds
ss
ret
aaa
inc
mov
and
cmp
cmpsl
shrl
scas
cwtl
lds
mov
jecxz
push
jb
fnstcw
and
push
push
aad
stos
int3
mov
cmpb
popf
loopne
cmpl
mov
lret
inc
rol
xor
pop
mov
dec
adc
cmpsb
or
xchg
enter
or
rcrl
inc
or
movsb
jp
out
jbe
stos
dec
jecxz
xchg
mov
fsubrp
push
adcl
mov
ret
push
sbbl
cmp
repz
sbb
ret
call
adc
sbb
test
and
dec
jnp
stc
out
les
popfw
shrl
test
movb
lods
aas
mov
cmp
dec
out
add
jg
mov
xorb
jne
xchg
shll
push
cmpl
nop
stc
fldt
mov
jne
pusha
inc
dec
jl
jnp
jmp
pop
lock
insb
mov
in
sti
std
loop
xchg
or
or
cmpsl
pop
or
lods
xor
add
fidivs
pop
jle
call
rclb
dec
lahf
push
inc
test
sbb
fisttpl
lret
and
hlt
ret
jl
int
mov
lods
ljmp
adc
loopne
aas
outsl
dec
insl
inc
and
test
sub
shr
movsb
lock
push
xor
pop
jno
pop
cmp
pop
dec
test
je
pusha
cmp
call
xchg
mov
jp
loopne
xor
ds
lret
arpl
sbb
jle
insl
lcall
lods
xor
xchg
jp
shr
mov
push
aam
jg
sbb
mov
rcr
jecxz
mov
pop
xchg
ret
pushf
fwait
mov
pop
jae
inc
shl
iret
call
mov
add
push
les
lahf
add
xor
jo
and
es
mov
loop
scas
shlb
hlt
pop
ljmp
adc
adc
clc
inc
inc
xorl
lds
aas
in
mov
add
je
adc
test
das
dec
subl
pusha
mov
xchg
cmp
xor
sub
jo
rcrb
idivl
ret
add
mov
data16
jl
sbb
aaa
pop
pop
lds
xchg
fnop
popf
ret
sbb
lahf
in
pop
hlt
xor
xchg
mov
pop
xor
into
mov
arpl
test
iret
xor
stc
pop
lods
arpl
sub
fildll
jp
pop
outsl
xchg
push
jns
loope
inc
mov
mov
mov
jecxz
ljmp
nop
imul
popa
sub
imul
aam
loop
into
xor
sti
sbb
fmuls
enter
add
in
mov
mov
or
fstpt
icebp
push
adc
mov
hlt
pop
mov
out
inc
ja
cmpsl
hlt
incb
push
and
jo
mov
icebp
scas
mov
movl
roll
and
mov
cld
jb
rorl
mov
jl
pop
dec
and
rcr
dec
imull
xor
fdivl
popa
xchg
lods
in
test
dec
mov
adc
pusha
fists
sub
sti
enter
mov
outsb
jl
sub
leave
sti
mov
and
mov
insl
mov
enter
xor
and
cmc
xor
decb
hlt
mov
jle
dec
jne
add
dec
icebp
repz
xchg
cmpsl
or
dec
popa
jno
cwtl
divb
repnz
push
adcb
leave
lret
pop
mov
mov
inc
cmpsb
mov
sub
test
jmp
or
mov
rorb
mov
ja
lret
mov
mov
mov
inc
and
jo
or
sbb
cmp
lcall
push
jo
or
dec
dec
and
rcrb
imul
adcl
push
fdivl
jno
cmp
shl
rcr
nop
mov
into
jno
sub
xchg
subl
mov
mov
fists
pop
push
xorb
mov
dec
push
in
lods
les
push
or
adc
imul
push
test
adc
xchg
gs
ret
outsb
sub
jo
cmp
mov
and
lcall
movsl
cltd
scas
and
or
pop
aaa
shrl
add
adc
push
lods
sbb
icebp
daa
or
adcb
xlat
mov
xchg
pop
pop
sbb
loopne
jl
mov
repnz
les
jbe
mov
rcl
in
test
popa
sti
mov
and
add
jno
jecxz
test
jbe
mov
jg
cmp
fmul
pop
jge
mov
fcmovnb
repnz
lret
xor
add
and
mov
push
mov
xchg
xor
mov
outsl
mov
pop
clc
sbb
nop
sbb
pop
mov
ja
dec
pop
rorb
mov
dec
pop
icebp
cwtl
inc
iret
mov
movsl
aam
clc
jae
pop
imul
insb
shrl
movsw
and
mov
out
subb
inc
mov
sub
aad
xor
daa
nop
mov
sbb
gs
xor
jecxz
inc
iret
outsl
lcall
inc
imul
scas
lods
aaa
sbb
or
int
stc
pop
lds
adc
test
jbe
pop
add
daa
movsb
cmc
inc
or
sub
sbb
jne
rcrl
xor
inc
mov
mov
repnz
fnsave
stos
and
fucomip
push
xchg
and
mov
xchg
popa
push
xor
add
sti
outsb
lret
xlat
mov
jecxz
xchg
sbb
mov
inc
jle
sub
push
movsl
test
bound
xlat
mov
pop
js
push
cmp
sbb
ljmp
out
push
in
xchg
or
and
in
cmpsl
movsb
jne
push
mov
scas
sbb
mov
push
insb
push
fstpt
mov
arpl
movsl
loop
pusha
jle
inc
push
nop
inc
xchg
sbb
jb
icebp
repz
sbb
imul
dec
sbb
je
sbb
push
ljmp
je
dec
subb
addr16
sarl
xor
js
mov
aas
sbbl
std
jnp
xchg
subl
fdivp
pop
xchg
fwait
jns
sahf
ljmp
push
fcmovnu
jg
cmp
and
jecxz
or
pop
and
mov
lods
fbstp
pusha
testl
xchg
dec
mov
xor
shrl
or
mov
push
aam
pop
call
mov
xchg
inc
lods
cmp
mov
lds
xchg
pop
cmp
outsl
out
enter
ret
sub
cmp
popa
lock
mov
adc
or
push
out
dec
fistps
stos
aas
mov
pminsw
outsl
lret
dec
sub
sbb
dec
fistps
stos
aas
mov
pminsw
outsl
lret
dec
sub
sbb
dec
fistps
scas
out
das
sbbl
pminsw
outsl
into
jg
dec
xor
xor
dec
pop
fcmove
stos
rolb
pop
lcall
mov
add
dec
cmpsl
xor
xlat
xor
add
jae
and
push
loop
add
xchg
and
jb
cwtl
xor
add
jae
arpl
push
loop
or
cmp
push
jne
xchg
or
add
and
inc
bound
dec
outsl
pop
xor
fwait
and
jp
jnp
dec
push
cmpsb
je
mov
adc
xor
mov
lret
pop
mov
dec
adc
call
lahf
cmpsb
add
fs
sbb
inc
push
nop
repz
loop
pop
ret
sub
lods
and
mov
ja
push
repz
ss
cld
push
and
imul
add
sbbb
jb
lcall
xor
ret
es
sbb
repnz
xchg
scas
imul
cmp
loopne
sbb
insl
int3
jge
dec
pop
mov
xchg
adc
inc
shlb
xor
jecxz
sarl
mov
lcall
jae
arpl
push
sti
add
push
aad
lds
pushf
das
mov
out
orb
int3
insl
mov
roll
jmp
es
sub
push
mov
orb
xlat
outsl
mov
mov
andb
sub
push
out
imull
lahf
inc
jecxz
shll
xchg
xor
add
jae
arpl
push
loop
adc
and
jb
xchg
xor
add
jae
arpl
push
loop
adc
dec
push
jge
outsb
cmc
int
cmp
dec
dec
xchg
inc
outsb
pop
jb
jmp
test
stos
sbb
sahf
jo
sbb
mov
mulb
xchg
dec
and
in
push
adc
cmpsl
bound
xor
stos
addr16
pop
movsl
mov
insl
std
cli
cmp
addl
xor
cmp
xchg
mov
frstpm(287
xchg
add
loopne
dec
insb
push
add
add
push
add
testb
aad
ds
out
push
lods
aad
xchg
mov
push
sub
dec
sbb
out
cmpsb
pop
int3
test
xchg
outsl
inc
jae
xor
mov
xor
add
cmp
mov
test
mov
cmp
call
jecxz
inc
sub
dec
sbb
test
imulb
xor
mov
shll
mov
rcll
in
xor
jne
push
xor
bound
setle
xchg
or
lcall
and
sbb
jecxz
adc
push
push
jns
lcall
or
cmpsl
repnz
mov
les
repz
mov
add
addl
or
xchg
test
cmc
inc
mov
clc
jb
pop
push
out
jnp
inc
mov
scas
mov
xchg
mov
lret
hlt
xor
bound
mov
pop
fsts
scas
stos
xchg
stc
mov
imull
mov
mov
xorb
sbb
sahf
mov
add
ss
in
icebp
and
and
push
jbe
mov
dec
bound
repz
mov
sub
filds
repnz
cli
add
push
jnp
pop
sub
xchg
mov
jae
jne
rcrl
loop
jno
adc
repnz
in
addr16
lea
icebp
xchg
arpl
sbb
cmp
aas
xor
jg
jne
xchg
mov
out
sbb
push
lock
gs
adc
jbe
in
pop
cli
jns
ljmp
call
mov
sub
ljmp
clc
stc
fiadds
xchg
adc
call
add
cmp
pushf
dec
into
mov
push
push
std
shll
es
fidivs
mov
sbb
xor
xchg
sub
pop
xchg
lret
jb
mov
hlt
inc
pop
or
sarl
cmp
sub
cmp
adc
cltd
fs
jge
imul
inc
movsb
mov
aaa
mov
adc
rcll
mov
push
mov
clc
out
not
dec
mov
push
ret
mov
mov
jp
daa
sub
lds
iret
es
mov
ljmp
and
pop
inc
adc
push
faddl
add
in
add
clc
out
push
sbb
push
push
mov
mov
xor
xchg
fmull
insb
aad
ja
sbb
sbb
sbb
jmp
pop
call
cli
cmp
cmp
insb
adc
sbb
fsubl
jp
rcl
jmp
lods
rorl
mov
test
pop
inc
mov
bound
or
push
rorb
cmp
test
int3
xor
add
or
adc
rclb
fistpl
xor
and
push
popa
push
gs
into
repz
sbb
inc
fsubrl
and
jb
mov
mov
sbb
and
push
sbb
fwait
sbb
cmp
inc
pop
cli
mov
pop
adc
push
jae
jns
out
mov
sbb
dec
push
daa
fldenv
scas
stos
out
and
imul
or
adc
or
mov
push
repnz
pop
paddw
pop
pop
push
lcall
imul
lret
sub
rclb
xchg
rorl
pop
and
push
sbb
cmp
mov
xchg
mov
xchg
xlat
add
cmp
dec
adc
mov
jae
push
cmp
add
inc
lret
in
jno
in
inc
in
in
pop
cli
in
mov
xchg
dec
cltd
add
mov
and
dec
mov
shlb
jb
scas
divl
inc
and
adc
ficoml
loope
cmp
or
add
scas
push
jecxz
push
inc
and
push
stc
dec
lea
scas
cmpsl
mov
cmp
cltd
cmpsb
rcr
mov
cmp
and
sarl
xchg
movsb
inc
xor
arpl
cmpl
inc
sahf
out
jmp
or
lret
hlt
or
loop
pop
loope
mov
aam
or
sbb
pop
mov
push
pusha
push
and
dec
inc
xor
xchg
call
test
lahf
aam
xchg
jecxz
xchg
mov
aas
pop
push
jecxz
cmc
je
jns
addl
push
stos
dec
push
into
les
dec
dec
cmpsl
mov
sub
loope
inc
outsl
dec
cmp
and
ret
sub
jmp
adc
scas
fdivs
ret
pop
addr16
icebp
mov
and
mov
mov
jl
or
xor
cmc
in
push
xchg
jns
sbb
ret
or
movsb
add
rcll
cmp
pop
and
outsb
xorb
nop
push
js
push
add
dec
sahf
dec
int
test
inc
lock
push
lret
fucomp
fildll
inc
es
inc
push
jns
xor
lahf
sub
notb
rcrl
in
outsl
or
or
int
movsb
mov
repnz
cmp
xchg
xor
jbe
dec
push
insb
sbb
sbb
rorl
daa
enter
cmc
mov
imul
cmc
jg
ret
pusha
sbb
jo
pop
push
mov
add
out
adc
mov
jle
mov
or
daa
daa
add
xor
jle
out
lret
adc
cmpsl
mov
test
dec
fistpll
wrmsr
xor
xor
or
push
call
movsb
orl
xor
jle
or
aaa
sub
mulb
int
sub
jmp
aad
cmp
xchg
fsubl
inc
int
jge
cli
ja
ljmp
sub
inc
cmpsl
mov
push
fs
fs
adc
pushf
xchg
jbe
jnp
sbb
xorb
mov
ss
jne
shl
and
lods
inc
adc
inc
ficoml
sub
add
sub
xchg
lock
popf
and
sbb
fidivs
push
mov
icebp
inc
popf
jbe
fiaddl
sub
rcrl
popa
shrb
xchg
jmp
adc
add
mov
mov
xor
lea
adc
mov
jns
insl
movsl
sahf
cld
scas
xorb
lahf
and
mov
adc
cmp
mov
and
lods
in
sbb
jg
sbb
lea
mov
push
sub
adc
fsts
repz
es
add
jns
test
fdivrp
push
outsb
mov
or
cld
jbe
in
sahf
shll
enter
sub
push
lods
sti
xchg
mov
jle
or
adc
push
sub
add
out
out
pop
fists
je
and
lahf
sbb
add
scas
scas
mov
gs
cmpl
mov
xchg
arpl
scas
pop
aaa
pusha
test
ss
jp
pop
insb
add
pop
out
adc
sub
repz
xchg
mov
out
sti
ret
sbb
test
popf
in
and
add
mov
and
cbtw
sub
add
dec
into
inc
jns
adc
mov
jne
mov
add
fstpl
dec
or
ret
insl
xchg
xor
aam
dec
das
jnp
mov
int3
jmp
ret
sub
mov
add
scas
lea
pop
mov
dec
sbb
jle
sbb
or
jne
scas
fucom
mov
out
xchg
frstor
fnstsw
dec
rcll
push
mov
mov
xlat
sbb
daa
cwtl
ljmp
aaa
mov
divl
mov
adc
fcmovnbe
call
sub
test
in
push
mov
cmp
sub
mov
leave
cli
das
iret
or
loope
movsl
lahf
mov
sub
jmp
inc
outsb
xchg
xchg
jle
aas
out
sub
jle
daa
ret
mov
cs
shrl
cwtl
cmpsl
test
xlat
scas
aad
adc
repz
int3
pusha
add
out
inc
shll
ljmp
jbe
movsb
add
cmp
add
push
adc
fmulp
std
scas
add
jg
cli
hlt
or
mov
mov
pop
add
or
cld
lahf
adc
iret
jnp
or
repnz
cwtl
outsl
cwtl
cmp
icebp
add
xor
jg
sbb
pop
pop
jbe
std
repnz
cmc
sbb
fwait
ret
xchg
ljmp
xchg
orps
sbb
stc
inc
rcl
sbb
adc
movsl
xor
xchg
xchg
js
hlt
stos
or
dec
mov
std
push
sbb
movsb
mov
popl
mov
mov
aas
jmp
jp
or
xor
sti
ja
pop
idiv
lcall
outsl
aaa
in
push
and
cltd
xchg
inc
push
gs
lret
pop
lahf
or
and
xchg
cmpb
loope
mov
ficomps
jbe
stos
dec
js
adc
negl
lods
imul
jb
inc
and
je
ljmp
jp
stos
pushf
cmp
add
pop
mov
sub
and
or
or
out
ret
fdiv
jns
arpl
add
in
mov
nop
mov
outsl
sub
sbb
call
push
insl
push
icebp
bound
add
aam
add
push
insl
xchg
add
push
mov
add
lea
je
sbb
sub
into
test
push
push
and
lods
ss
out
cmp
das
xor
pop
jne
jp
xor
mov
or
and
mov
out
cmp
adc
test
inc
sub
pop
jb
push
aas
shlb
xchg
lods
loope
or
shl
out
mov
push
add
jns
adc
xchg
pop
js
xor
dec
lock
cmp
xor
adcl
popa
mov
ret
mov
mov
insl
xchg
daa
fsubs
adc
mov
push
xlat
xchg
mov
push
cli
cmp
popf
jmp
iret
push
in
mov
mov
pop
int
filds
dec
inc
and
and
xor
push
lods
pop
addl
mov
stos
shl
push
dec
shl
adc
mov
and
push
xchg
dec
push
xor
rcrl
imull
rcll
popf
adc
push
dec
mov
movsl
sbb
jp
inc
loopne
js
adc
shll
inc
shrl
push
mov
xor
pop
xor
push
xchg
ficoms
add
xor
into
ret
movsl
nop
adc
std
ljmp
cmp
xchg
mov
mov
rolb
inc
mov
jne
xorl
outsl
inc
or
pushf
scas
push
cmp
pop
in
xchg
mov
xchg
jnp
mov
cs
aam
call
cmp
mov
xchg
cmp
scas
inc
loope
add
dec
add
jbe
aam
mov
xor
in
iret
call
dec
mov
xchg
aaa
int
pop
jl
xchg
fwait
inc
dec
fnsave
ret
lock
nop
push
sahf
jecxz
push
push
sti
cmpsl
dec
push
jo
pushf
scas
mov
inc
push
pop
add
inc
pop
push
mov
jb
cmp
dec
push
shrl
mov
cli
cwtl
fsqrt
aad
lret
xchg
add
adc
xor
inc
lock
fndisi(8087
push
mov
sub
xchg
ds
cltd
push
lods
xchg
cmp
inc
sub
inc
dec
je
movsb
jp
inc
outsl
clc
pusha
sti
mov
or
add
dec
mov
loope
xchg
jp
popa
sub
ret
mov
sbb
dec
inc
push
xchg
fstpt
je
ja
nop
xor
jno
sarb
xchg
pop
xor
xchg
and
movsb
cltd
add
cmp
xchg
xor
fwait
xchg
xchg
inc
add
mov
and
into
or
daa
dec
mov
in
dec
sahf
or
arpl
mov
sbb
sbb
adc
add
arpl
enter
push
es
ds
in
or
les
mov
cmp
add
jmp
stos
mov
dec
adc
mov
lret
sbb
push
lds
jp
cld
enter
aad
xor
movsb
dec
fsubrs
enter
movsw
xor
push
dec
mov
daa
push
sub
or
stos
rcrl
sti
test
in
push
leave
and
inc
xorb
or
fwait
xor
test
fstps
popf
outsb
xchg
cmpsl
and
into
cmpsl
shll
lods
ret
imul
adc
test
adc
push
pop
jge
mov
mov
mov
mov
movsb
ds
ficomps
cmp
dec
push
xlat
or
push
dec
addb
mov
push
out
sbb
outsb
cmp
sbb
push
cmp
cld
add
mov
jns
xlat
sar
add
arpl
push
push
divl
repnz
sarl
cmp
nop
sbb
push
dec
in
leave
fsubrs
cli
xor
imul
inc
xor
add
push
shl
rcrb
rorb
dec
adc
add
lock
xchg
loop
xchg
into
fistl
push
test
into
xchg
cmp
pop
mov
out
mov
xor
je
popa
repnz
test
inc
es
mov
mov
testl
lea
ficomps
xchg
in
ret
std
pop
in
push
incb
lods
add
adc
cmp
mov
add
das
not
andb
into
adc
mov
dec
pmulhw
mov
test
imul
jo
leave
or
jmp
mov
jns
xchg
or
out
inc
stos
xchg
cli
test
mov
es
sbb
sub
pop
repnz
push
pop
out
sarb
mov
inc
andb
jb
daa
jg
mov
arpl
push
faddp
jae
nop
mov
sbb
sbb
push
mov
xchg
mov
test
in
xchg
aas
pop
out
sub
fisttps
sbb
int3
sub
cld
lcall
pop
sub
ds
icebp
adc
adc
and
sbb
shll
xchg
mov
pop
lea
lcall
push
lahf
and
cmp
add
jge
pop
insl
pop
jl
dec
cld
js
in
bound
xor
jne
ficoml
test
mov
mov
movsl
push
mov
das
add
aam
jp
bnd
jae
roll
inc
bound
mov
int
mov
fdivrl
lcall
lock
fcmovnu
mov
fistps
lods
inc
cmp
jg
mov
xlat
repz
mov
lea
sbb
sbb
lds
mov
dec
and
fisubs
push
fdivs
add
inc
stos
insb
and
and
fsubrl
lods
add
mov
test
cmp
neg
and
add
pop
cmp
fists
cld
mov
stos
ja
mov
bound
lahf
mov
iret
mov
xchg
loopne
mov
add
mov
aaa
lods
and
xor
pusha
je
adc
out
inc
movl
scas
sar
outsl
mov
js
mov
push
adc
and
loopne
adc
outsb
aad
mov
xchg
mov
and
in
outsl
pop
loopne
mov
jle
pop
adc
jne
cli
cmpsb
adc
out
es
enter
and
ljmp
jbe
cmp
xchg
cmpb
les
xor
scas
ret
push
test
push
sub
add
push
lcall
or
or
out
mov
test
mov
mov
xchg
dec
jno
lcall
mov
movsb
mov
xchg
or
ficompl
sub
scas
sahf
ror
xchg
mov
int
mov
clc
mov
ficoms
sahf
sub
adc
pop
xor
call
insl
sbb
std
and
pop
shrl
mov
dec
stos
in
push
adc
js
stos
sar
add
and
pushl
push
cmp
xchg
inc
arpl
aas
aas
or
fdivrl
addl
mov
pop
push
sub
rcr
jnp
inc
sub
lret
aaa
cwtl
out
cmp
cmpb
data16
sbb
jb
cmp
pop
dec
or
sub
fisttpll
movsl
popf
pushf
xchg
xchg
loop
jecxz
in
mov
cltd
imul
dec
jl
movl
inc
cmp
adc
aam
mov
cmp
jo
psrlq
cmpsl
arpl
fdivrl
stc
xchg
in
sub
rcpps
out
ffree
mov
push
ret
icebp
mov
sbb
aas
cs
pop
mov
xchg
fdivrl
das
jnp
jae
arpl
cmp
pop
dec
ficoms
std
lret
fdivr
xor
divl
lret
add
xchg
push
add
cmc
mov
outsb
pop
xchg
jae
mov
stos
inc
jg
mov
cmp
sbb
out
dec
popa
add
js
sub
cwtl
out
pop
addr16
or
cmpl
loop
mov
sub
ret
ja
inc
xchg
js
mov
inc
jl
out
iret
clc
les
lock
inc
fisubs
or
mov
gs
popf
mov
xchg
in
pop
jge
sbb
in
dec
movsl
aam
add
icebp
push
lods
push
cmp
loop
aaa
pop
mov
test
cmp
inc
add
push
ds
push
mov
cmp
sbb
dec
pop
les
push
mov
mov
or
sbb
mov
clc
mov
adc
sbb
ret
ret
sbb
mov
jbe
xor
or
in
adc
mov
addr16
add
mov
sub
push
into
in
imul
adc
out
xor
cwtl
mov
mov
cwtl
mov
andl
adc
jmp
decb
jecxz
out
outsl
daa
roll
jbe
xchg
aas
sbb
push
mov
dec
dec
roll
rcrb
mov
pop
into
fwait
sbb
ljmp
js
push
das
dec
jbe
int
xchg
sbb
adc
mov
push
xchg
dec
test
je
out
xchg
xchg
jge
jae
fiadds
push
inc
pop
adc
aam
xor
fiaddl
scas
pop
jge
xor
inc
imul
xlat
sti
test
fs
cs
out
in
sbbl
pop
xchg
jne
clc
test
sub
repz
cmp
mov
lahf
jl
idivb
sub
inc
into
or
js
pusha
imul
ret
sub
cmp
js
psrlw
or
push
or
pop
xchg
outsb
ret
lods
inc
add
mov
clc
out
xchg
das
pop
fcom
loop
shl
dec
jae
mov
imul
fcoms
jae
into
fwait
pushf
mov
fisubs
push
rolb
jmp
jb
jne
roll
test
in
cld
mov
bound
mov
fstl
push
add
add
xorl
add
adc
scas
repnz
cmpl
mov
xchg
shlb
xchg
cmpsb
mov
in
jbe
adc
jmp
adc
or
jmp
addl
mov
dec
mov
or
adc
lds
sub
xor
cmc
and
rcrl
mov
jge
lods
ja
inc
fcoml
fbstp
repz
das
add
and
or
mov
cmpsb
mov
or
aaa
movsb
in
enter
cmp
inc
push
shll
sbb
mov
cmc
decl
sarl
jno
adc
sbb
jae
nop
mov
mov
punpckldq
lds
mov
and
aaa
push
ret
or
cmp
inc
into
cmp
xor
outsb
inc
cld
or
in
inc
ja
adc
repz
das
bound
ds
or
lret
xchg
cmovp
jns
and
fisttpll
sbb
enter
push
push
push
mov
inc
rorl
mov
push
push
xor
test
and
shlb
jg
ret
inc
dec
cmp
xchg
in
int
negl
sti
xchg
mov
clc
push
cli
movsl
jle
das
or
stos
rcl
and
sbb
xchg
mov
xor
push
mov
jo
add
sub
outsl
fs
add
leave
stos
jmp
sbb
out
sarl
int
out
pushf
jmp
test
loop
mov
loop
hlt
testl
repnz
addr16
out
or
out
xchg
xorb
lahf
mov
push
repz
jecxz
shll
xchg
xor
add
jae
arpl
push
loop
adc
and
jb
xchg
xor
add
jae
arpl
push
loop
adc
and
jb
xchg
xor
add
jb
arpl
push
roll
mov
mov
push
repz
arpl
push
loop
insl
int3
jge
sbb
mov
pushf
or
inc
repz
ret
shll
sarl
mov
aam
in
hlt
and
mov
inc
repz
scas
shll
mov
andl
arpl
jae
and
push
hlt
arpl
mov
inc
add
or
rcll
insb
push
aam
xorb
dec
roll
dec
mov
inc
mov
and
pop
mov
fcompl
fidivs
inc
xor
pop
lods
pop
jbe
adc
aam
add
lea
push
je
sub
sub
in
jns
icebp
outsl
js
hlt
in
in
sbb
inc
mov
lds
push
repnz
cmp
push
and
or
test
lret
pop
das
cmp
es
je
add
xchg
lret
bound
jae
sbb
imul
adc
sbb
stos
jecxz
dec
mov
cmp
or
sbb
inc
sbb
xor
xchg
xor
pop
pop
cmp
outsb
stos
ret
lea
cltd
jl
cmpsb
aam
mov
aam
hlt
cmpsl
cmc
scas
xchg
pusha
push
add
movsl
push
ret
shll
lret
adc
and
xor
jmp
hlt
imul
mov
adcl
fstl
push
arpl
ss
in
out
cmpsb
jbe
scas
inc
xchg
push
mov
mov
lret
jo
push
xor
mov
sub
push
push
in
or
adcb
add
adc
and
xor
les
inc
in
hlt
and
mov
inc
repz
ret
shll
mov
andl
arpl
jae
inc
in
hlt
and
mov
inc
push
sbb
insb
enter
pop
xor
or
orb
ja
xchg
fcmovbe
mov
mov
lods
sub
mov
aas
cmpsb
int3
dec
loope
inc
sub
or
dec
out
mov
and
rorl
cmp
and
adc
dec
sti
sar
ja
loope
pushf
jecxz
jbe
mov
cmp
fsubl
callw
shl
mov
push
cltd
adc
out
xchg
repnz
nop
aaa
mov
add
test
lret
push
mov
dec
or
dec
sbb
sbb
push
into
dec
lahf
mov
mov
les
add
xchg
sbb
jg
xchg
lcall
inc
lcall
jne
cmp
js
stos
imul
pop
push
cmpsl
andb
dec
imul
add
std
push
jns
les
sub
inc
xor
in
sahf
jae
fisubs
shll
mov
arpl
aas
es
sbbb
es
mov
push
clc
shrb
loopne
cmc
push
in
popf
ja
iret
ret
sti
add
mov
mov
ret
lock
pop
fbstp
mov
adc
inc
add
aaa
lret
hlt
je
pop
pop
cmpsb
adc
outsb
inc
jbe
mov
jge,pt
sub
xchg
out
lock
sub
cmp
mov
sub
pop
stos
and
movups
pop
ret
and
and
xor
sub
add
cli
fmull
jns
shlb
adc
fmul
pop
lcall
dec
loopne
sbb
pop
xchg
push
pop
xor
fisubl
popf
ss
sub
xor
mov
incb
adc
dec
shrl
daa
cwtl
fsubr
iret
in
sbb
pop
scas
lods
subl
push
imul
jg
xlat
xlat
mov
sbb
fldcw
mov
or
dec
mov
sbb
mov
or
fildll
inc
jmp
icebp
into
xor
push
repz
mov
jp
xor
inc
xchg
fiadds
jecxz
aas
out
pop
mov
jb
popf
pop
xlat
jmp
cltd
pop
inc
push
fadd
addr16
mov
push
push
repz
jne
fnstsw
dec
punpcklbw
sahf
jnp
pop
xor
jmp
ret
ret
mov
mov
jge
mov
mov
mov
inc
in
dec
inc
pop
sub
or
scas
data16
pop
push
add
inc
push
lea
mov
das
push
cmp
sbb
iret
and
cmpsb
int3
fwait
jl
jp
cs
repz
lahf
mov
xchg
imul
jle,pn
jbe
subb
std
data16
addl
fidivrl
cs
sbb
cmp
pop
xor
sub
pop
andb
popf
sub
iret
imull
movaps
aaa
sub
ficomps
pop
jno
in
xchg
mov
sbb
out
ss
add
pop
scas
popa
js
add
or
rcll
xor
flds
out
add
outsb
inc
fimull
xor
and
cmp
sub
cwtl
dec
sub
loopne
leave
add
adc
mov
cmpsw
cmpsb
mov
jb
push
push
ds
inc
cld
mov
arpl
mov
sbb
incl
mov
xor
push
hlt
faddl
pop
lahf
jnp
ret
and
pop
mov
cltd
pop
add
sub
cmp
fucom
mov
mov
lea
xor
or
in
mov
lock
cmp
jge
aaa
inc
push
lret
adc
out
ret
push
sub
adc
cmc
inc
scas
and
test
or
in
pop
orb
cmpsb
xor
sub
ljmp
add
test
or
out
xchg
in
push
jns
xchg
jp
mov
jg
mov
subb
in
mov
je
mov
sub
dec
jnp
adc
jnp
jb
imul
xchg
lret
pop
pop
jae
out
jmp
andps
pop
aaa
popf
adc
inc
js
dec
lret
in
inc
pop
push
imul
mov
cmpsb
lods
sub
inc
test
adc
decb
fisubrl
lock
sub
mov
out
cltd
ffree
push
cmpsl
mov
insl
fwait
stos
push
mov
cli
enter
xor
pop
cmpsl
icebp
xchg
sub
xchg
lret
mov
dec
dec
sbb
dec
add
repnz
les
lahf
adc
mov
mov
rclb
sub
pop
sbb
jl
mov
push
push
adc
cli
pop
iret
push
push
dec
dec
inc
jg
lahf
in
xor
or
lret
in
jp
into
stc
push
pop
js
fildl
aas
dec
iret
add
push
test
and
jle
xor
iret
das
sbb
dec
or
jae
or
jg
int3
xchg
fdivrp
lods
sbb
lcall
push
dec
call
inc
or
mov
push
arpl
repz
inc
lret
or
arpl
das
lret
loop
sbb
movsb
in
fdivrl
outsl
pop
nop
stos
add
aas
jge
dec
test
sbb
movsb
mov
pop
fsub
jmp
int3
les
das
mov
incl
jne
sub
pop
or
pop
pop
mov
aad
mov
pop
lea
cmp
adc
adc
stos
int3
pop
lret
outsb
movsl
loope
leave
dec
mov
or
jle
mov
subb
mov
mov
nop
mov
mov
xor
les
cmp
dec
popa
and
decb
push
jnp
jb
call
or
and
xchg
sbb
lahf
dec
scas
andb
inc
hlt
mov
xchg
test
cmc
xorl
jo
push
add
subl
xchg
jbe
ljmp
push
jge
lcall
push
sub
inc
xlat
push
jp
adc
loopne
push
dec
jns
das
cmp
push
adc
sbb
xor
rorb
out
adc
mov
clc
inc
adc
int
add
inc
fsqrt
jb
div
es
sbb
pop
xor
shll
push
jg
mov
jp
stos
gs
movb
jb
add
push
and
sahf
stos
dec
stc
out
fidivrs
gs
push
mov
xor
and
fiadds
cmp
mov
sub
sbb
jg
lret
mov
ds
cmp
mov
out
stc
ficompl
rcll
std
jmp
inc
cmpsb
jbe
cmpsb
mov
pop
sbb
mov
xor
fistl
pop
xor
scas
push
lods
addr16
ret
inc
pop
pop
add
inc
das
dec
mov
push
fimuls
push
mov
add
cli
xchg
push
adc
into
jne
loop
push
popa
adc
mov
fwait
lock
movsl
mov
xchg
sub
leave
fninit
out
cmpsl
in
ret
addl
nop
pushf
add
and
add
xchg
ret
xor
xchg
mov
sbb
xlat
dec
faddl
cmp
dec
ror
and
sub
pop
inc
pop
pop
sahf
pusha
mov
sub
icebp
and
inc
dec
xchg
xor
xchg
shrb
or
or
jne
out
sti
mov
jecxz
mov
out
add
pop
mov
aad
sbb
sti
hlt
fiaddl
daa
push
out
dec
in
mov
push
fmul
jle
lahf
push
mov
mov
mov
popa
add
repnz
movsl
dec
jno
push
push
mov
or
xor
mul
icebp
outsl
out
pop
xchg
fmulp
push
clc
out
xlat
mov
jl
int3
dec
mov
sub
sbb
pop
lahf
mov
xor
cmp
sub
jne
pop
test
jge
xor
jne
int3
mov
loope
test
test
lcall
dec
call
out
repz
icebp
scas
dec
mov
push
das
pop
mov
jmp
out
frstor
push
mov
in
jmp
mov
xchg
push
push
pop
mov
and
cmpsl
loop
cmp
add
jbe
dec
xor
push
push
aaa
xlat
arpl
sub
adc
or
sbb
sbb
add
movsl
jno
sbb
sub
cmpsb
jle
push
rcl
and
lods
loop
mov
dec
ror
notb
fcoms
push
sub
aad
xchg
sbb
mov
cmc
data16
push
lea
jp
or
and
mov
xor
dec
fstpt
push
xor
insb
addl
mov
jb
add
loope
stos
mov
bound
orl
out
imul
and
xchg
pop
iret
xor
xchg
or
jae
subl
hlt
andb
arpl
addr16
and
movsb
shlb
outsw
pop
cmc
mov
cmp
lods
fmul
out
mov
xor
sbb
fcoml
push
es
lcall
or
outsl
cli
jge
inc
xor
adc
cwtl
inc
ja
add
icebp
outsl
aas
xchg
cltd
and
sbb
pop
int
push
hlt
push
addr16
ss
mov
sbb
xchg
in
inc
or
inc
aaa
lods
movsl
push
mov
jae
mov
aaa
lea
mov
out
loopne
mov
pop
ret
je
pop
xor
ret
sbb
aam
jnp
das
enter
and
push
mov
xchg
lea
div
inc
xchg
push
ljmp
mov
test
mov
repnz
daa
loopne
fcmovnu
out
sub
addr16
jg
inc
shlb
or
inc
add
sahf
lods
ficompl
push
push
xor
mov
cmpsl
sbb
xchg
mov
in
ror
jmp
repnz
pushf
std
mov
adc
loop
xchg
sbb
dec
lret
dec
aaa
sub
push
cwtl
cmp
mov
mov
push
iret
mov
or
xchg
mov
cmpsl
fldenv
dec
cmp
or
mov
cmpl
mov
pusha
lock
shll
jecxz
lret
rcr
pop
sbb
push
nop
push
mov
pop
outsl
int
outsb
and
stos
cmp
mov
pop
push
pop
cmpsb
fwait
jae
xorl
lock
pop
xchg
xchg
aaa
addr16
inc
cmp
call
out
pop
shrl
pop
je
stos
xor
fistpl
inc
jge
cwtl
fwait
cmp
jb
aaa
enter
push
cmc
sub
jle
roll
inc
js
push
ret
push
inc
mov
cmp
mov
pop
sbb
loopne
add
and
sub
aaa
push
clc
fsub
jae
jle
mov
shlb
aaa
insb
jbe
mov
xor
sbb
fs
pop
js
dec
nop
pop
lahf
xor
gs
mov
mov
movsb
push
push
mov
cltd
dec
vcvtps2dq
inc
cmp
adc
test
rclb
sub
leave
inc
clc
push
out
xchg
int3
adc
lret
or
icebp
ret
rcrl
mov
mov
mulb
daa
cmp
add
aam
jecxz
pop
outsl
ja
cmpsl
jb
inc
push
rorb
sbb
and
out
push
in
ret
pop
jne
int3
sahf
in
insb
addr16
jb
push
xchg
inc
mov
and
jo
add
or
jbe
pop
sbb
pop
lret
lcall
das
xor
mov
sub
pop
fdivs
xor
insl
arpl
scas
sbb
popf
sbb
sti
bswap
out
popf
mov
stos
push
mov
push
cmp
stos
das
xchg
adc
xor
xlat
push
cwtl
cmp
pop
push
jnp
subl
das
xor
and
mov
scas
and
add
std
shrb
dec
xor
adc
mov
into
xor
ret
out
mov
xchg
lea
push
out
aaa
inc
out
loope
push
bound
popf
cld
push
jne
popf
in
mov
xor
stos
push
push
xchg
loopne
dec
pushf
sti
scas
mov
testb
inc
cmpsb
mov
push
fimuls
push
or
psrlw
imul
or
xchg
mov
add
ret
jge
sbb
subb
sahf
cmpsl
adc
loope
cmp
cmpsb
add
or
sbb
dec
xchg
add
sarl
in
sub
xchg
mov
sub
ja
push
lcall
fs
pushl
das
ss
ljmp
and
cli
mov
stos
scas
rclb
int
xchg
and
push
insb
cmpsl
repnz
rclb
xor
mov
hlt
jae
fwait
movsl
sub
fwait
popa
xor
sbb
cmp
rcl
xchg
mov
aad
out
pop
cmp
rorb
cwtl
or
cmp
enter
lea
mov
loope
pusha
not
and
jne
cltd
ret
movsb
xchg
xor
shll
push
fisubrl
dec
out
inc
repz
sub
lods
xchg
adc
sub
addl
imul
pop
xchg
add
and
addr16
stos
xchg
xchg
mov
pusha
mov
sub
or
clc
bound
ja
xchg
and
push
adc
add
xchg
outsb
push
cmp
jg
xchg
out
jbe
and
xor
and
mov
scas
mov
pop
lock
fcmove
push
inc
push
sub
scas
aaa
sub
adc
lods
inc
popf
ds
pop
sbb
sub
push
push
test
loop
fidivrs
adc
push
push
lret
mov
mov
jge
push
fcoml
bound
loope
ss
add
mov
stos
jp
cmp
outsb
jmp
jne
dec
scas
mov
mov
sbb
in
lea
addr16
push
mov
adc
dec
or
out
pop
jg
jne
ret
int
cmpsl
jo
out
std
or
icebp
popa
xor
cmpsl
int
test
std
mov
lret
out
aam
je
xchg
xor
cmp
pop
cmp
pusha
popf
xchg
idivl
xor
subb
cmpsl
jle
addr16
test
jl
xchg
iret
xchg
xchg
cs
xchg
mov
fistpll
cmp
dec
test
xchg
dec
mov
shl
dec
fcomps
jo
repnz
jle
dec
sub
leave
lds
rcrb
stos
fwait
inc
jbe
mov
into
popa
xchg
pop
out
dec
push
dec
mov
xor
lret
xor
add
and
mov
sub
dec
adc
lds
loop
arpl
fldenv
rorl
and
add
push
cld
jno
sbb
popf
xchg
out
pusha
cmpl
cli
dec
cmp
aaa
xchg
mov
repz
mov
mov
out
pop
mov
sbbl
pop
aaa
jmp
adc
daa
mov
insb
rcl
inc
dec
sub
pushf
loop
xchg
fcompl
rcr
cmpsl
pop
shr
xchg
sub
cli
pop
push
lret
xchg
dec
and
mov
js
insb
or
pop
inc
pusha
arpl
mov
fwait
sti
mov
inc
pushf
xor
mov
push
mov
pushf
fwait
shrb
ret
jge
lock
jl
add
mov
xchg
aaa
pop
adc
std
sub
pop
test
mov
out
inc
je
fstl
and
cs
xchg
iret
test
stos
adc
adc
mov
sbb
das
sbb
pop
sub
mov
bound
cmc
mov
jae
out
xor
cld
mov
stc
das
and
push
lods
push
sub
push
sub
inc
les
dec
icebp
inc
ss
jnp
insl
cmpsl
sbb
pop
jbe
mov
nop
cmp
out
mov
jmp
mov
push
add
sbb
enter
jmp
int3
mov
sbb
ficoms
xchg
xchg
push
mov
pop
andb
sbb
jbe
cmpsb
imulb
inc
leave
cltd
inc
jle
xchg
les
std
fs
push
inc
out
inc
loope
sbbb
add
js
test
mov
jecxz
jnp
mov
dec
xchg
cwtl
fldenv
pushf
outsb
and
pop
icebp
push
data16
in
fists
setno
xchg
lock
dec
popf
push
nop
mov
fs
sub
cmpsl
mov
xor
icebp
scas
cmp
add
mov
jne
dec
loope
loope
xchg
call
insl
sub
xor
push
ja
stos
cmp
addl
pop
jg
add
fidivs
push
lea
ret
push
add
adc
xlat
in
addl
lods
sbb
stos
jne
xchg
mov
fs
mov
dec
cmp
mov
mov
aaa
dec
repnz
fbstp
nop
mov
inc
testl
adc
imul
jle
cltd
xlat
sbb
dec
daa
outsl
decl
loope
cli
jno
mov
imul
mov
in
ds
sub
xchg
fsubl
call
das
insl
cli
lods
in
jno
jmp
jle
stc
dec
add
xor
fwait
mov
cmp
cmp
jnp
xor
les
push
xlat
rcrb
jns
adc
shll
adc
mov
std
shll
cmp
ja
mov
dec
cwtl
cmp
int
out
stos
imul
lods
inc
jg
inc
sbb
jmp
cmp
adc
nop
jle
or
lret
xchg
jmp
mov
cltd
jno
popa
mov
je
movb
jne
sbb
xchg
mov
xor
lret
stos
jle
sbb
inc
xor
repnz
jg
inc
ljmp
cmc
es
test
outsl
mull
and
test
mov
sub
shll
out
mov
push
insb
roll
daa
scas
sub
rcrb
fsubrp
popf
xor
popf
cmpb
push
cmp
es
mov
aaa
lock
mov
pop
or
jae
sub
scas
mov
lret
in
lret
push
addr16
clc
or
sbb
fs
inc
mov
sub
add
movsl
push
sbb
push
hlt
mov
mov
lock
cmp
xor
mov
cs
popa
mov
jno
sahf
xor
lahf
lret
clc
add
cs
push
inc
and
cmpsl
outsl
lcall
jg
jmp
add
or
jecxz
mov
adc
test
andb
pushf
fdivl
daa
push
sub
sub
insb
into
and
sub
jmp
add
add
add
push
dec
jecxz
in
and
xor
jecxz
std
mov
pop
inc
pop
sub
outsb
out
adc
xchg
cmp
push
inc
inc
push
sti
lcall
shrl
cmp
outsl
andl
out
aas
fwait
fwait
add
or
mov
jmp
or
sub
popf
jnp
dec
fsts
add
jg
sub
push
cwtl
dec
cwtl
lds
mov
push
xor
adc
push
ss
cmp
ds
sahf
mov
jnp
cmp
je
inc
inc
in
into
cs
add
hlt
dec
movsl
inc
mov
mov
xor
and
cmpsl
ljmp
inc
into
sbb
bound
roll
out
andl
enter
cmp
inc
lods
add
mov
notl
lret
add
xor
add
cli
xor
adc
test
jmp
push
xor
dec
xor
and
jg
popf
or
jno
addr16
icebp
insb
mov
or
mov
cmp
das
gs
sub
les
pop
ret
push
rcrl
test
jnp
fmul
push
mov
ljmp
or
fwait
mov
in
push
or
mov
push
pop
lods
sti
pop
outsl
pusha
sbb
sub
test
dec
nop
in
negl
add
and
in
push
lret
mov
mov
xchg
cwtl
sbb
movsb
je
movsl
sub
push
outsb
lea
dec
movsb
cmp
loop
cmpsb
or
imul
sti
loop
ljmp
repz
or
push
push
mov
addw
jp,pt
adc
aaa
cmp
ljmp
mov
pop
iret
notb
xchg
arpl
fwait
ret
loope
xlat
push
mov
and
test
sub
repz
andl
and
repz
mov
mov
mov
adc
incb
jmp
imul
enter
cli
push
sahf
je
je
push
addl
cmp
mov
inc
cmp
jno
lods
mov
sub
in
sub
sbb
mov
lods
mov
test
mov
and
xor
les
inc
in
hlt
and
mov
inc
repz
ret
shll
mov
andl
arpl
jae
inc
in
hlt
and
mov
inc
ret
aam
in
je
add
xchg
andl
arpl
mov
push
hlt
and
mov
inc
scas
push
cltd
fs
add
adc
and
xor
les
push
or
imul
in
dec
cmp
xchg
or
mov
fwait
inc
les
add
push
std
je
fldl
cmp
xchg
or
in
aam
les
xor
add
pop
in
mov
push
int
cmp
mov
cld
pop
int3
dec
fidivrs
popa
lea
add
int
loopne
lfs
out
push
dec
mov
fdivrl
dec
push
mov
test
pop
jne
cmpsb
in
sbb
js
jg
sbb
mov
int3
bound
add
icebp
in
xor
dec
and
loopne
mov
adc
mov
test
subl
in
movsb
ja
or
and
mov
xor
arpl
out
add
lods
fwait
pop
fdivrp
cs
inc
std
imul
and
insl
sbb
test
lds
sti
and
push
lock
sbb
jmp
sarb
dec
mov
out
dec
dec
ljmp
adc
daa
pusha
adc
mov
mov
test
in
int
fnstsw
or
in
jae
push
int
jl
pop
movsb
je
test
pop
mov
mov
enter
cmc
imul
in
aaa
mov
int3
dec
movsb
js
popa
cmpl
pop
test
dec
cld
inc
lahf
pusha
lea
push
orl
cmp
shll
icebp
xor
dec
les
adc
add
je
fstl
cmp
xchg
or
in
aam
les
adc
add
je
fstl
cmp
mov
xchg
or
xorl
sahf
mov
jns
pushf
dec
or
sub
rolb
and
jecxz
push
in
fdivrs
rcl
or
push
inc
mov
xchg
clc
mov
push
fninit
dec
lret
push
mov
cmpsl
add
out
push
jmp
dec
imul
mov
js
mov
faddl
sbb
incb
inc
mov
inc
pop
sbb
mov
psrlw
xor
shll
xchg
je
andb
ret
mov
lahf
xor
jno
insl
dec
cwtl
movsb
arpl
jae
and
subb
cwtl
cmpsb
mov
mov
adc
fcmovnb
inc
cmp
xchg
fidivl
sbb
aaa
jnp
lods
or
jmp
push
stos
sub
cmp
push
pop
sbb
fmull
xor
jl
and
cmpsl
mov
jne
lock
out
dec
ret
sub
sbb
and
pop
push
cltd
stos
jno
loop
mov
xor
jne
sahf
ds
push
fldl
ds
xchg
mov
jp
dec
imul
adc
cmpsb
std
pop
mov
stos
and
xchg
mov
icebp
dec
in
push
lret
dec
mov
add
jg
and
pop
jno
data16
loope
mov
xchg
sub
jae
sbb
inc
cmpsl
or
or
addr16
aas
fimuls
sub
sbb
xor
test
or
mov
add
dec
add
add
cwtl
xor
mov
adc
or
pop
add
pusha
into
loop
in
mov
mov
ds
sbb
xchg
cmp
iret
movsl
dec
les
dec
dec
lret
mov
jae
and
insb
in
mov
cs
xchg
mov
add
mov
add
jl
dec
aas
push
sbb
or
int
push
negl
ret
or
scas
sub
cmp
aaa
in
divl
dec
imul
adc
pop
pop
mov
push
shll
cmpb
jb
call
sbb
call
mov
xor
cmpsl
sbb
sub
outsb
cmp
mov
pop
inc
push
jo
push
and
aas
and
insl
jno
add
adc
fwait
pop
xchg
cmp
jnp
ja
fldz
enter
fwait
xor
fcomps
lret
ds
subl
lret
jo
cld
orb
xchg
cmp
adc
mov
dec
movsl
dec
sbb
cmc
movsl
jle
in
iret
sub
mov
push
notb
sub
cltd
dec
sbb
ds
scas
pop
push
cli
daa
sub
or
lock
ja
xor
push
pop
mov
push
aam
pop
adc
jle
push
in
dec
xor
lahf
fdivrl
cmp
je
cmp
iret
mov
xorb
mov
inc
cmp
mov
sbb
sbb
adc
data16
xchg
into
outsb
and
cmp
push
sbb
scas
divb
pop
mov
loopne
adc
insl
cmc
pushf
mov
pop
repz
ja
repz
loop
insb
add
movsl
loope
sub
rcrl
cmpsb
or
jl
pop
insl
in
shlb
cwtl
iret
aaa
inc
in
pushf
mov
xor
int
jb
xor
sub
sti
daa
push
mov
fcom
xchg
push
pop
pop
leave
xor
lahf
data16
rolb
dec
push
out
push
and
or
icebp
jo
out
cmpsl
dec
mov
icebp
shrl
imul
je
jnp
and
sub
outsb
js
jne
pop
mov
aam
xchg
cmp
jb
mov
mov
scas
push
fs
arpl
inc
sahf
mov
shll
fidivs
mov
mov
test
roll
jmp
push
jbe
jne
loope
and
les
xor
imul
cli
fwait
shlb
jg
loop
add
push
and
xchg
cmp
data16
in
test
lds
cmpsb
sarl
push
pop
dec
sbb
movsb
pop
rclb
sub
lods
add
int3
add
xchg
lods
sti
lret
movl
cmpsb
jecxz
int
push
test
scas
or
int3
leave
rolb
sub
cmp
dec
jge
pop
mov
inc
cmp
loop
sbb
lds
xchg
mov
mov
cmp
or
mov
xchg
push
out
out
add
cmp
jns
movsb
arpl
rorb
ss
adc
jmp
lcall
in
jb
call
pop
test
sbb
sbb
out
cmpl
jnp
or
cmp
and
push
inc
mov
mov
aas
and
fimull
mov
xorb
sbb
andl
jae
cmpsb
scas
mov
leave
cs
pop
jmp
jbe
andb
mov
and
mov
sbb
push
dec
arpl
dec
popa
push
xorb
dec
ret
cltd
aas
pop
mov
mov
and
test
scas
bound
test
in
iret
adc
sub
inc
addr16
test
loopne
fwait
jae
xchg
shll
jmp
jmp
xor
jo
jmp
or
int3
or
adc
pop
xchg
dec
loop
cmpsb
shlb
test
pop
push
mov
scas
mov
or
mov
ljmp
inc
cli
aam
mov
inc
sti
dec
adc
xchg
clc
inc
and
cmp
mov
dec
dec
sub
bound
mov
xchg
addr16
in
cmp
fdivs
stos
mov
and
push
jp
xchg
lahf
push
add
jmp
aaa
movsb
inc
addr16
js
sub
scas
xchg
fsubr
and
inc
lret
sahf
lret
jo
and
ja
int3
lcall
xchg
insl
cmp
outsb
push
adc
xor
sub
cli
andl
mov
sarb
outsb
inc
adcl
test
hlt
inc
xor
xor
dec
xlat
inc
pop
push
movsb
sbb
inc
ficompl
dec
imul
adcl
xchg
loopnew
insl
xchg
call
dec
dec
cmp
rorl
sbb
xchg
jae
scas
rcrl
and
test
test
mov
xchg
loop
jl
insb
cmp
cmp
xchg
cmp
mov
int
pop
in
push
add
cmp
push
aad
jno
sbb
cmp
xchg
stos
adc
call
lock
psubb
lcall
shll
mov
cmp
sarb
cmp
push
cmpsl
push
and
and
push
pop
test
dec
inc
pop
jp
sbb
xchg
xor
adc
jns
cmp
cmp
mov
sbb
xor
jbe
cmp
fidivl
cmpsl
pop
push
imul
xor
bound
mov
xchg
mov
fstps
mov
fwait
adc
sub
idivb
xor
add
inc
leave
mov
cmp
push
xchg
jmp
ret
sub
test
mov
dec
lahf
loopne
stos
push
out
cld
push
cmp
dec
cmp
int3
dec
mov
mov
xchg
es
jp
fwait
enter
insb
out
inc
or
sub
roll
xchg
into
icebp
aas
add
frstor
dec
nop
xchg
rcr
adc
inc
stos
lret
dec
mov
adc
dec
addr16
inc
sbb
rorb
and
daa
inc
data16
or
in
sti
jae
mov
outsb
and
mov
add
fistpll
xor
and
pop
test
psubusb
mov
or
rorl
push
xlat
filds
push
testb
xlat
stos
enter
mov
push
fwait
hlt
loop
repnz
jmp
lea
sbb
pop
arpl
adc
ret
jno
pop
aam
jle
mov
cmp
je
jbe
lcall
out
mov
xchg
ret
mov
fucomip
fisttpll
cmp
xchg
sbb
mov
call
sub
and
or
sub
and
leave
pop
mov
ror
addr16
sahf
loope
fcmovnu
mov
movsb
loope
pushf
xchg
js
repnz
es
icebp
jne
xor
jp
push
push
add
test
stc
mov
movsl
jmp
mov
fdivrs
mov
pshufw
add
out
test
pop
in
push
inc
mov
sbb
std
jb
and
test
imul
hlt
push
stos
dec
push
mov
pop
add
and
jo
cmp
or
and
vunpckhps
and
out
idivl
add
int
daa
jmp
jns
cli
pop
jmp
dec
addb
movsb
lds
push
out
stos
sub
or
dec
adc
xorl
jp
adc
xchg
sar
das
mov
dec
sub
dec
lret
movsl
adc
xor
lcall
sub
pop
xchg
jne
mov
enter
rcl
sbb
sub
insl
aad
sub
sbb
call
lock
call
call
sbb
mov
popfw
jbe
push
clc
push
sub
jl
ja
or
dec
pop
pushf
ret
lods
scas
loopne
fsubs
mov
pop
xchg
sbb
adc
shl
jmp
incb
cld
jecxz
sbbl
add
xor
xchg
mov
jmp
inc
mov
dec
imul
jle
mov
and
mov
mov
xchg
push
and
aas
add
lods
xor
test
cltd
ret
aad
mov
stos
sub
andb
mov
jle
push
cmp
imul
cmp
pop
scas
repz
imul
adc
jg
fnstcw
out
testl
outsl
jae
or
xchg
leave
inc
jnp
cmp
jo
sub
fcoms
loop
and
nop
test
or
stos
add
or
enter
pop
pop
mov
mov
jle
inc
add
inc
int3
adc
inc
popf
jmp
inc
mov
pop
adc
sbb
cli
dec
push
inc
jae
xchg
adc
int3
out
and
mov
adc
inc
and
xchg
addb
mov
aam
fsubl
sbb
mov
xchg
jle
hlt
dec
push
jg
fidivrs
lea
jno
call
shrb
stos
cmp
pop
and
add
cmp
jbe
sahf
std
inc
enter
cmpsl
add
cwtl
jne
lcall
or
lods
xchg
inc
loope
push
test
stc
test
mov
enter
inc
mov
scas
dec
xor
movsl
cmp
jno
call
jb
call
ja
iret
stos
ljmp
ss
add
rolb
out
les
cmp
iret
fstp
cmp
jecxz
clc
mov
insb
arpl
mov
dec
in
push
out
mov
push
pop
ficoml
pop
aas
cs
mov
hlt
pop
jnp
adc
push
bnd
lret
out
outsl
decb
imul
jne
incl
outsl
xchg
sub
mov
sarl
mov
push
or
out
push
addr16
xor
fidivrl
test
out
enter
popl
push
das
imul
cmpsl
in
or
or
repz
push
test
xchg
mov
testl
out
icebp
ja
mov
mov
mov
push
jl
add
push
cmp
test
movb
cmp
outsl
mov
pop
scas
out
sti
cwtl
cmpsl
fwait
cli
or
lcall
addl
mov
cs
mov
test
adc
out
std
jecxz
push
arpl
cmp
push
sbb
pop
pushf
adc
xchg
hlt
int3
mov
loope
push
popa
xor
push
aas
and
or
push
scas
push
mov
cwtl
jmp
xor
inc
mov
outsb
mov
adc
and
add
xor
add
out
and
mov
shll
inc
popf
je
test
scas
nop
sub
mov
inc
mov
xor
mov
mov
sub
mov
movsl
adc
sub
cmp
jge
test
cld
adc
in
jmp
jp
add
std
mov
rclb
movsb
xor
stc
icebp
subb
mov
cmp
jg
pop
add
jbe
sbb
into
cmp
lock
jne
xchg
mov
pushf
jno
imul
test
mov
cmp
xchg
and
adc
mov
popa
inc
jg
pop
lods
cmpl
xchg
pop
test
inc
dec
aad
rcrl
outsb
cmp
jnp
gs
rcrb
lahf
lret
and
dec
inc
shrb
pop
push
mov
mov
test
stos
mov
xor
mov
lret
ljmp
or
mov
inc
jg
cmpsb
xchg
mov
adc
into
mov
mov
and
xor
and
ja
ror
xchg
xchg
fs
xchg
inc
mov
cmp
rclb
fsubrl
or
push
test
or
sti
pushf
unpcklps
rcll
sahf
cmp
mov
xchg
pop
fs
pop
das
jne
in
rorb
sub
and
cmp
dec
and
clc
std
cmc
mov
cmc
mov
pop
mov
push
inc
and
test
or
push
mov
sbb
xor
cmp
cmc
jg
mov
jle
pop
push
dec
and
ljmp
leave
cmc
xchg
lock
jmp
sahf
nop
adc
mov
lods
std
mov
vmread
xchg
and
nop
push
sbb
jecxz
jb
push
into
pop
loopne
shlb
mov
mov
pop
xchg
mov
std
sub
cmp
iret
ja
and
push
pop
jmp
adc
add
xchg
cs
xor
out
pop
icebp
popa
and
pop
adc
aaa
ss
adc
imul
pop
rorb
ljmp
adc
jl
arpl
xchg
cmpsb
mov
mov
pop
in
or
mov
xchg
cmp
pop
and
and
jmp
jae
pop
pop
dec
add
inc
imul
jne
sbb
mov
aad
aam
add
push
pop
and
das
or
shlb
dec
and
adc
xlat
data16
mov
lods
mov
mov
add
arpl
mov
psubb
outsb
lea
xor
or
inc
ret
aad
xchg
inc
aas
outsb
les
adc
adc
sbb
pop
rcll
push
inc
xchg
mov
and
fsubr
scas
mov
adc
push
std
lret
sub
push
xchg
dec
cld
push
leave
or
and
cld
adc
rclb
movsb
inc
cwtl
mov
pop
aaa
out
and
icebp
roll
sbb
mov
loope
sub
jecxz
jno
mov
iret
dec
ret
rcrl
aad
lods
xor
cmp
mov
and
jno
add
add
push
cli
mov
pushf
loope
pop
and
fadds
pop
jl
fnstsw
lahf
add
mov
pop
cmc
jae
push
and
fcompp
das
data16
sbb
push
addr16
repnz
xchg
sahf
dec
cmp
mov
les
jge
and
je
and
in
jae
rclb
pop
mov
rcll
sub
dec
int3
sbb
repnz
insb
cmc
cmp
adc
pop
cld
das
adc
sub
dec
lock
std
cmc
cmp
cmp
mov
les
mov
in
mov
jl
dec
mov
dec
orb
aas
fcompl
inc
xor
mov
sub
xchg
in
push
jo
push
push
rcrb
and
dec
push
loope
aas
pop
mov
or
xor
test
addr16
jp
pushl
sub
and
fists
lods
or
mulb
shl
daa
pop
gs
cmp
jecxz
int3
in
rol
jge
mov
mov
mov
in
push
shll
clc
loope
dec
int
movsl
xor
sub
data16
pop
subl
ljmp
dec
push
mov
aaa
jecxz
sub
imul
dec
inc
jb
xor
jns
lret
nop
jae
inc
scas
cmp
or
das
aad
movsl
mov
movsl
popa
mov
lahf
inc
and
loopne
adc
cli
clc
pusha
repz
outsb
mov
or
arpl
add
call
mov
shlb
stc
mov
dec
aad
push
pop
mov
nop
xchg
xor
push
add
mov
or
push
xor
fldcw
adc
pop
dec
fistpll
insb
or
jbe
mov
std
xor
xor
rorb
ss
jo
ljmp
bound
xor
xor
push
push
mov
xor
push
cmp
mov
je
mov
test
sub
jge
test
sbb
pop
push
sub
jnp
xchg
sub
adc
or
jo
sub
test
cmp
daa
and
mov
nop
sbb
sub
mov
mov
shlb
das
lcall
repnz
push
sbb
sub
inc
lahf
mov
aam
mov
pop
or
cmpsl
loop
sub
aad
out
push
dec
and
or
pop
jne
pop
or
test
fidivrs
or
pop
mov
lret
test
xchg
sbb
roll
inc
mov
jb
out
rcrb
cwtl
pop
hlt
and
and
push
mov
mov
ds
inc
movb
xchg
ret
mov
rclb
cwtl
jne
sub
mov
push
mov
out
fcompl
xchg
orb
sub
dec
lret
leave
inc
fsubrs
xor
rcpps
int
inc
lcall
xchg
lret
pop
ret
cmp
adc
mov
xchg
pop
cli
jo
or
scas
fldt
add
out
inc
sub
leave
shrb
and
mov
in
stos
dec
in
mov
inc
movsl
mov
dec
mov
pop
or
jl
sub
mov
or
arpl
insl
xchg
je
test
scas
mov
push
iret
cmp
clc
cltd
cmp
into
push
jmp
iret
pop
jl
sbb
lock
dec
fdivs
pop
out
test
inc
bound
fwait
lea
and
sbb
out
and
push
mov
mov
sti
inc
jmp
mov
xchg
cmp
lret
push
scas
sbb
aad
test
push
dec
rorl
xor
movsb
js
shll
mov
stc
add
fisubs
mov
loop
into
sub
div
dec
add
mov
pop
and
nop
repz
and
mov
pop
xchg
loopne
jnp
or
mov
mov
cmpsl
mov
or
imul
cwtl
add
cld
es
cmpsb
insb
sbb
fildll
xchg
dec
stos
add
into
jge
into
xor
cmc
lret
pop
ja
inc
add
mov
pop
cmpsl
push
add
jnp
xchg
and
lods
pop
fstp
popf
cmpsl
fldt
in
outsl
push
fwait
pop
in
xor
enter
xchg
xlat
jae
inc
inc
mov
bound
sbb
jl
sahf
sub
mov
mov
cmp
xchg
lret
lcall
and
insb
pusha
mov
dec
in
mov
sub
mov
icebp
jecxz
or
repnz
adc
xchg
repz
xchg
jle
or
lds
cmp
das
mov
loopne
lcall
jecxz
bound
movb
outsl
and
push
fldenv
sub
ds
loopne
out
push
mov
std
and
jns
bound
enter
mov
incl
lcall
test
stc
pop
mov
jne
add
dec
push
xchg
in
loop
bound
sub
popa
mov
hlt
fiaddl
push
ret
loop
sub
fwait
mov
xchg
dec
jp
insb
add
pop
lret
jp
data16
push
pop
sahf
dec
ret
out
jecxz
push
mov
test
pusha
jb
push
sub
push
xchg
cld
mov
shll
mov
jmp
in
cli
roll
clc
mov
push
fsts
pop
stc
fwait
cmp
cli
sbb
pop
repnz
call
dec
cltd
icebp
mov
dec
in
pop
mov
les
mov
lods
mov
lods
fdivl
movsl
xor
jp
cltd
adc
arpl
add
and
xlat
out
scas
fs
pusha
sbb
stc
xchg
rorb
pop
dec
inc
fisubrs
clc
aas
sbbw
arpl
jecxz
int
xchg
and
insl
ss
pop
fs
mov
pop
add
fmull
or
xor
xchg
push
sub
push
cmp
in
cmc
orl
pop
aam
dec
fwait
add
add
sahf
std
push
test
sbb
or
in
aam
les
adc
add
je
fstl
cmp
xchg
or
in
aam
les
adc
add
je
fstl
cmp
xchg
or
in
aam
les
adc
add
fstl
inc
cmp
xchg
or
in
aam
les
adc
jae
cld
popf
fwait
lods
stos
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
jnp
imul
lret
inc
cli
imul
cmp
jp
jp
mov
pop
stos
dec
mov
sbb
or
fldt
lds
mov
push
jp
mov
inc
stos
push
mov
add
or
loop
enter
mov
mov
paddusb
pop
stc
cmp
xor
jge
adc
push
jno
jno
ret
stos
das
inc
xchg
mov
mov
shl
adc
sub
bound
in
aad
das
jmp
mov
sub
or
adc
xor
cmp
inc
lds
out
mov
pop
jnp
xchg
mov
sub
in
or
jo
ljmp
pop
stos
mov
sub
gs
push
stos
mov
inc
xor
sti
cmc
sub
cmp
stos
dec
add
mov
mov
les
add
or
cmpsb
pop
fwait
vcvttps2dq
or
mov
pop
stos
dec
mov
sbb
adc
loop
repz
sub
cmp
push
cmp
mov
jecxz
jmp
sti
dec
lea
push
or
test
scas
dec
mov
sbb
pop
adc
or
xor
cmp
push
mov
lahf
sbb
mov
dec
mov
das
ror
pxor
push
lret
pop
leave
aaa
iret
and
jae
sub
sbb
or
sti
or
sbb
sub
cmp
push
jp
mov
pop
stos
dec
mov
sbb
or
sti
or
sbb
sub
cmp
push
jp
mov
lds
jge
aas
dec
pop
sbb
stos
add
pop
in
inc
sub
xor
shl
push
imull
add
mov
inc
pop
insb
out
lods
xor
loope
test
addr16
mov
add
pop
clc
fdivrl
movsl
ja
je
fucom
fisubrs
jge
popa
mov
call
inc
clc
push
pop
sub
leave
cmp
cmp
or
dec
inc
test
mov
or
sub
add
push
out
sbb
frstor
push
lock
clc
idivb
scas
aam
repz
push
adc
dec
lods
fwait
enter
arpl
push
cmpsb
pop
test
mov
jg
push
mov
in
shrb
out
aam
fstl
loopne
negb
stos
pop
popa
add
test
adc
add
leave
xor
add
sbbl
and
fisubs
repnz
iret
jne
adc
cmpsb
cs
insl
daa
repz
in
cmp
xor
cltd
fsubs
lods
pop
icebp
sub
subb
in
push
ss
sub
mov
repz
mov
and
mov
repz
or
pop
pop
mov
cmp
outsb
xor
jo
cmp
cmpsb
mov
das
xlat
cld
test
xchg
xor
pop
int
jne
dec
ljmp
add
pop
subb
sti
popa
dec
aaa
call
and
data16
add
jg
lahf
and
aas
mov
in
rolb
jge
aaa
out
jl
add
sbb
adc
dec
imul
vmovlpd
rorl
add
insb
jge
insl
sbb
sub
and
lret
out
enter
in
movl
mov
pusha
inc
test
test
jp
pop
add
push
insb
sbb
sbb
repz
mov
push
dec
scas
std
sbb
mov
testb
jl
ds
add
mov
xor
sub
in
repz
pop
push
add
xchg
push
in
js
mov
sbb
xlat
push
add
stc
es
repz
xor
mov
mov
and
add
pop
or
sahf
sbb
xor
jp
jb
mov
pop
push
mov
jge
jp
mov
xor
and
push
popf
clc
int3
sbb
xchg
mov
xchg
fisubrs
pop
gs
cs
xor
mov
sahf
sbb
push
sbb
inc
fwait
jmp
inc
or
pop
fbstp
cmpsb
loope
pop
sbb
int3
jmp
loope
stos
sbb
and
mov
cmpsl
fsub
push
sti
lods
cli
mov
fdivrl
lods
jmp
fbstp
outsb
push
adc
fwait
in
xchg
or
add
and
dec
aad
sbb
push
sub
lea
inc
in
and
popf
or
lods
daa
ret
clc
push
das
mov
fdivl
adc
lahf
aas
xchg
adc
repz
lret
cmpl
jecxz
jl
mov
push
add
xor
lret
mov
aas
xor
add
mov
sahf
or
in
std
cmp
aad
mov
xchg
cmp
pop
inc
fbld
pop
xchg
jl
or
sub
iret
xor
dec
pusha
js
test
int3
nop
add
outsl
int3
fcomip
or
and
fcoms
or
fnsave
and
lret
inc
sub
xchg
sub
or
gs
dec
mov
clc
mov
mov
shll
icebp
outsl
movsb
add
dec
jg
std
mov
std
lods
xchg
ret
dec
adcb
repz
test
jnp
xor
sub
jecxz
sbb
ficoms
pusha
mov
dec
fidivrs
jno
lea
mov
out
in
notb
sub
mov
lret
add
xor
das
xchg
and
mov
xchg
pop
fistps
ret
jle,pt
mov
dec
mov
insl
add
test
pop
mov
stos
pop
sub
push
push
add
negl
int3
into
cmp
loopne
std
add
xor
pushf
fiaddl
mov
sahf
ret
sub
xor
mov
popf
mov
xchg
mov
fwait
mov
mov
scas
xchg
mov
xor
pop
mov
pop
mov
push
das
arpl
or
test
cmp
push
jge
test
dec
jbe
push
pop
or
fsubp
jb
cwtl
arpl
xor
and
sbb
sbb
mov
lods
lods
into
out
push
sbb
xor
arpl
jge
icebp
pop
out
insb
ds
enter
xchg
pop
fcoml
loopne
add
dec
cmpsb
shlb
in
dec
or
mov
add
sbb
dec
iret
incb
sbb
add
sbb
sub
cli
sub
mov
mov
dec
push
pop
ja
imul
jo
inc
push
mov
jl
or
leave
mov
in
test
clc
mov
les
cmp
dec
xchg
andb
dec
pop
sub
inc
or
mov
adc
add
imul
xchg
mull
outsl
sbb
mov
ret
jne
sub
test
inc
es
xchg
inc
cli
mov
rolb
ds
std
por
loopne
xchg
add
imul
or
roll
mov
fistpl
lret
push
xchg
and
pop
pop
push
sub
in
sub
adc
cld
mov
cltd
pop
and
sbb
in
xchg
dec
mov
mov
sub
adc
sbb
mov
lods
out
xchg
imul
data16
popa
in
aaa
mov
jno
scas
sbb
xor
scas
add
pop
mov
pop
and
pop
mov
push
paddb
mov
cmp
cwtl
or
ljmp
adc
xor
fnsave
mov
enter
push
data16
pop
leave
fmulp
cmp
in
scas
xlat
mov
clc
mov
or
aam
and
inc
jbe
fst
xchg
lret
clc
mov
test
cmp
xchg
pop
repnz
stos
imul
icebp
lahf
add
aam
pop
inc
mov
aad
inc
jnp
shrb
adc
pop
inc
mov
mov
mov
mov
and
ret
leave
mov
lds
lods
jbe
aaa
jecxz
mov
sub
or
nop
inc
sub
loope
jo
popf
mov
cmp
mov
and
cmp
or
sarl
out
daa
aas
mov
rorb
stos
xchg
adc
lcall
stos
push
jmp
push
push
mov
data16
mov
inc
adc
or
sbb
mov
stc
pushf
test
addr16
inc
jns
pop
lahf
pop
push
arpl
fldt
data16
cmp
sub
jns
jmp
jns
ljmp
mov
cmp
inc
inc
xor
lcall
sub
inc
outsb
inc
sub
push
sbb
mov
jg
push
push
push
mov
or
rcrl
popf
and
inc
int3
ret
in
movb
mov
push
adcb
lock
mov
pushf
inc
into
inc
ljmp
out
sbb
mov
xor
cmp
std
cs
ret
sub
and
cld
add
xchg
jmp
adc
cmp
push
popa
jmp
adc
repnz
pop
into
mov
je
mov
pop
push
push
aam
mov
jbe
dec
addr16
lods
popf
stos
sti
jo
cltd
ja
jmp
mov
inc
lods
jbe
imul
dec
cwtl
and
pop
mov
dec
out
jnp
jmp
jnp
rol
movsl
xor
ja
jbe
inc
cs
into
cltd
aad
ljmp
stos
sbb
push
pusha
sbb
imul
cld
testl
sub
add
ficomps
aas
mov
pop
add
xchg
dec
fcom
ja
popa
lea
pop
mov
nop
push
pusha
xchg
enter
inc
and
loop
or
mov
push
js
test
lret
mov
and
sbb
gs
cmp
sub
or
pop
cs
pop
jne,pn
je
popf
adc
pushf
inc
pop
outsb
inc
and
repnz
cmpsb
mov
xchg
push
iret
xchg
lea
call
aas
cmp
je
out
in
sbb
add
mov
pop
lret
pop
sub
movsl
outsb
mov
test
pop
test
stc
pushf
jno
jns
jne,pn
pop
push
and
andb
fisttpll
setp
cld
add
lcall
loope
cltd
enter
adc
push
inc
inc
je
into
lret
test
fisubrl
dec
or
insl
ret
xchg
sub
popa
cli
jecxz
xor
cmpsb
rcrl
xlat
pop
and
pop
icebp
fwait
inc
dec
loopne
inc
pop
pop
mov
sbb
cmpb
pop
mov
push
aas
mov
xchg
jb
push
incb
ljmp
orb
cmpl
out
lds
mov
popf
scas
or
in
enter
std
inc
add
xchg
out
data16
mov
mov
loopne
cld
mov
sub
rcr
cmp
adc
mov
fsubrl
testl
int3
arpl
sub
add
xlat
mov
jg
and
xchg
aad
xlat
xor
pusha
push
mov
push
sub
mov
ljmp
stos
dec
imul
cmp
jp
push
mulb
sbb
push
jae
lret
add
adcl
insb
loop
dec
sarl
add
jne
xor
mov
mov
add
jg
adc
ja
cli
cmp
or
jbe
lret
mov
push
mov
insl
push
test
hlt
and
into
stc
cmovl
jecxz
orb
aaa
pop
add
jecxz
in
scas
stc
mov
inc
xor
or
ret
adc
testb
lret
sbb
cmp
ss
pop
stos
or
add
xchg
inc
mov
sbbl
test
int3
push
leave
jnp
push
ret
dec
mov
lret
leave
lods
xchg
jge
pop
mov
ljmp
rcl
data16
int
jecxz
pop
xchg
cmpsb
vcmppd
movsb
lds
pop
ret
pop
push
push
pop
mov
clc
cltd
adc
and
dec
fists
sbb
xlat
std
fldcw
sbb
pop
std
mov
or
loopne
call
or
out
repnz
sahf
cmpsl
push
dec
or
pop
out
add
and
xor
add
cmp
cmp
add
xor
push
add
add
push
cli
stos
in
mov
lea
repnz
loope
xchg
mov
sub
ret
jns
push
stos
jl
sub
dec
sbb
xchg
mov
shll
mov
fnstcw
xchg
int
or
sbb
xchg
clc
pop
xor
sbbl
cmp
jae
xchg
repnz
mov
fwait
roll
push
pop
je
icebp
addb
stos
mov
je
fdivs
testl
mov
jg,pn
xchg
test
inc
out
in
jmp
lret
insb
and
or
or
jp
imull
aam
pusha
mov
jae
sahf
inc
mov
mov
mulb
add
int3
outsb
sub
jl
pop
inc
rclb
movb
add
lods
in
ficoml
jl
ret
cld
lock
adc
out
sub
outsb
adc
mov
enter
sub
lahf
dec
or
test
sbb
js
and
subl
daa
stc
nop
and
xor
fs
lock
cmp
lods
inc
add
xchg
xchg
nopl
dec
sahf
pop
jl
insb
cmpsl
in
int
push
add
jne
test
jae
mov
adc
nop
push
push
rolb
fcomps
mov
ljmp
daa
sahf
jb
cmp
pop
cmp
fldenv
cmpb
sbb
mov
data16
sbbl
add
jne
inc
jecxz
xchg
call
iret
and
jle
sti
mov
aaa
lods
cmp
push
xchg
add
lret
cltd
ret
mov
cmp
clc
cmp
xchg
sbb
test
clc
dec
and
xor
arpl
scas
imul
cmp
xor
rol
inc
dec
addr16
mov
jmp
cmp
xor
xlat
mov
pop
add
shrb
adc
sbb
cltd
lret
fisubl
inc
jae
or
add
xchg
ljmp
stos
or
push
inc
add
cmpsb
xchg
or
add
pop
div
call
sahf
xor
add
test
lcall
addr16
aam
xlat
mov
shlb
les
aam
mov
dec
cwtl
addr16
insl
adc
into
lahf
dec
pop
mov
hlt
mov
dec
xor
push
dec
fsubp
pop
sti
jmp
dec
push
push
mov
pop
lods
push
mov
inc
addr16
pop
mov
push
or
in
andl
inc
insl
mov
jl
addr16
data16
pop
mov
cs
xor
mov
mov
shl
ja
repz
scas
pop
add
xchg
stc
xor
loop
bound
insl
mov
mov
adc
mov
push
push
inc
fldl
pop
sbb
add
push
fisttpl
and
xchg
add
iret
cmp
and
push
aas
and
sbb
adc
shlb
fidivl
inc
mov
insl
outsl
loopne
jge
fsts
addl
popf
repnz
test
dec
sar
or
pop
fiadds
push
iret
pop
test
jg
rcrb
imul
stc
scas
mov
repz
mov
pop
ss
andb
ret
call
inc
mov
insb
push
xor
into
test
sub
scas
mov
nop
ds
loope
mov
and
dec
cmp
cmp
lods
lods
movsl
sub
inc
bnd
inc
xor
mov
push
clc
mov
in
test
sbb
mov
pop
test
cmp
pop
pop
and
mov
dec
fistpl
aas
mov
jae
sbb
mov
je
jg
sub
xchg
mov
push
lcall
push
cli
and
cmp
mov
jmp
dec
pop
dec
popa
pop
inc
cmp
addr16
ret
mov
sub
inc
or
aam
fdiv
cmp
pop
pop
mov
shlb
fdivrs
or
add
inc
aam
ljmp
mov
pop
or
test
popf
insb
pop
push
sbb
out
and
adc
jge
test
push
es
push
nop
rcrl
loope
sbb
adc
dec
adc
subl
imul
sub
pop
out
decl
loope
mov
lds
add
push
mov
and
aam
int
mov
inc
sarb
sub
pop
dec
sbb
push
stos
rclb
aaa
shl
cs
inc
inc
pop
xor
and
inc
mov
icebp
cmp
dec
sub
lods
adc
int3
dec
and
pop
addr16
loope
and
add
sbb
or
incl
fsubl
xorps
add
inc
out
mov
and
mov
insb
and
test
test
daa
fmuls
sahf
pusha
xor
push
hlt
mov
mov
incl
cmp
xchg
sub
lods
cld
xchg
pop
lods
roll
cli
shll
and
jo
mov
adc
fidivl
out
mov
xlat
stc
test
xor
dec
mov
pusha
pop
inc
mov
xchg
dec
cmp
push
fidivs
dec
lret
sbb
pop
or
adc
into
jmp
xchg
idivl
or
loop
lcall
cli
push
and
shlb
fsts
xor
sub
mov
popf
xchg
jnp
jo
or
and
cmp
push
cmpsb
dec
lret
pop
push
pop
enter
push
xchg
cmp
add
js
push
mov
test
addr16
mov
int3
push
sbb
icebp
jecxz
rcrl
mov
test
push
inc
lock
sbb
cmp
leave
decb
cmp
loope
push
mov
imul
negb
stc
out
popw
gs
mov
daa
imul
add
push
inc
xor
cmp
rorb
mov
mov
mov
sub
mov
outsb
ret
xlat
je
mov
xchg
out
outsb
daa
bound
or
add
inc
loope
cli
out
pusha
mov
jbe
cltd
mov
sub
test
sti
mov
xchg
xchg
inc
fucomp
clc
mov
pop
xor
insb
gs
fwait
cmp
xchg
xchg
push
inc
mov
movsl
les
or
andb
and
int
cmpsl
bound
sbb
out
into
ret
sub
dec
daa
bound
ja
jo
mov
icebp
add
add
adc
aam
shlb
sub
xchg
and
jb
outsl
dec
fdivrp
mov
subb
jp
sub
xchg
or
aad
je
aad
mov
cmp
sub
xorb
movsl
or
xlat
idivl
add
bound
ds
cmp
or
loop
into
mov
sar
ss
mov
pop
push
mov
leave
jbe
aad
or
jge
cld
mov
pop
es
xchg
into
lock
and
iret
push
fisttpll
jmp
mov
popa
cmp
mov
scas
and
aad
imull
cld
mov
add
adc
inc
cld
xor
popf
mov
mov
jle
loopne
sahf
call
push
sub
loopne
mov
mov
into
out
outsb
movsb
pop
pop
sbb
add
loopne
or
imul
imul
or
insl
nop
cmp
sub
push
gs
ret
in
shlb
js
jno
fstpt
jno
aas
pop
dec
movsb
and
xchg
cmp
jg
cmp
scas
vpunpckhbw
add
cmp
pusha
push
jecxz
pop
mov
popa
and
cmp
dec
mov
aas
mov
test
lahf
cli
jns
jmp
cmp
inc
aas
daa
lock
sub
in
mov
pusha
xchg
loopne,pn
mov
movsl
and
jno
cmc
push
push
dec
xchg
dec
push
sbb
out
pop
aas
movsb
xchg
mov
lahf
cmp
push
lcall
lcall
and
iret
dec
adc
sbb
test
sbb
pusha
jge
mov
sarb
scas
iret
sbb
pop
sbb
mov
sub
push
les
mov
es
sti
adc
adc
outsl
sub
inc
jae
push
stc
fwait
dec
adc
jmp
push
imul
push
stos
inc
out
call
and
and
cmp
sar
mov
shll
cmp
aad
push
stc
push
test
repz
scas
popa
mov
fwait
stos
dec
dec
inc
jecxz
and
xchg
fistpl
addl
jb
cmp
and
popa
jnp
scas
cwtl
inc
addr16
lcall
out
inc
fdivrl
sbb
dec
xchg
lea
int3
lret
and
rolb
jg
cmp
cmp
pop
je
inc
push
mov
stos
inc
sub
das
and
xor
lahf
pop
inc
jnp
dec
lds
adc
jnp
gs
pop
sub
sub
sarb
fs
nop
std
lock
popf
add
inc
and
jb
inc
push
xor
addr16
pop
lods
xchg
fstps
cmp
insb
cmp
popa
and
or
iret
pop
lret
xchg
dec
stc
test
mov
lods
mov
lahf
shlb
je
mov
mov
in
lahf
loop
mov
ljmp
dec
inc
xor
lret
scas
inc
push
fidivl
ficoml
mov
mov
jb
out
int3
cmp
rol
pop
cmpl
loop
dec
jb
jmp
and
in
out
xor
outsl
icebp
stos
push
int3
rclb
fcomps
ret
aas
adc
xchg
mov
mov
and
add
or
idivl
rorl
mov
mov
aad
iret
bound
test
and
xchg
mov
fneni(8087
fldl
mov
xchg
and
jne
ret
lret
pop
xor
out
or
mov
mov
call
cli
test
sbb
xor
xchg
jecxz
scas
lcall
sub
sbb
or
sti
or
sbb
sub
cmp
push
jp
mov
pop
stos
dec
mov
sbb
or
sti
or
sbb
sub
cmp
push
jp
mov
pop
stos
dec
mov
sbb
or
sti
or
sbb
sub
cmp
push
jp
mov
pop
stos
dec
mov
fwait
ljmp
jno
lret
dec
int3
ret
fs
je
scas
and
adc
sub
adc
out
cmp
nop
outsl
loopne
lock
rcrb
and
adc
pusha
pushl
inc
fildll
das
mov
pop
nop
outsl
mov
dec
rcrb
and
adc
pusha
pushl
inc
fists
mov
jp
outsl
mov
cmpsl
or
mov
loopne
test
and
push
inc
adc
add
movsl
hlt
loopne
dec
sbb
jo
bound
xor
pop
xchg
aam
dec
icebp
xchg
loopne
cmp
jg
sbb
push
adcl
push
mov
mov
add
pop
fstps
lock
inc
pop
push
dec
sub
jno
sub
scas
fistps
dec
out
add
jo
loopne
push
mov
aam
cld
push
cmp
push
bound
xor
push
jo
pop
aaa
cld
cmpb
aas
mov
lock
pop
cs
movsl
inc
mov
les
mov
push
js
test
rcrb
and
adc
pusha
pushl
inc
fists
mov
pop
nop
outsl
loopne
lock
rcrb
and
jno
add
adc
push
pop
add
fstps
jl
pop
in
mov
das
sahf
flds
push
in
ficoms
mov
cmp
sub
leave
jb
pop
cmc
cwtl
mov
icebp
es
xor
js
jb
jne
dec
pushl
inc
fists
mov
pop
nop
outsl
loopne
lock
rcrb
and
adc
pusha
pushl
inc
fists
mov
pop
nop
outsl
loopne
lock
rcrb
and
pop
adc
loopne
aas
adc
lahf
lahf
iret
inc
adc
jb
inc
ds
jb
jp
cmpsl
popf
jg
call
adc
mov
cmp
pop
icebp
outsl
push
popa
stos
pop
mov
jns
in
js
das
int3
in
lock
fcmovne
das
sub
or
dec
fistps
mov
inc
xorb
fsubl
sbb
pop
dec
mov
mov
scas
sbb
pop
loop
mov
cmp
mov
mov
xchg
push
sub
pop
or
bnd
dec
rclb
stc
js
stc
fisttps
push
fs
xor
push
nop
stos
pushf
into
addr16
loop
stos
out
ficompl
jns
rcll
sti
aaa
lret
sbb
les
mov
imull
iret
inc
cld
cmc
add
xor
mov
rep
fwait
aaa
fimull
fisttpll
nop
jae
jne
xor
ja
mov
in
jnp
in
mov
mov
jbe
add
sub
and
inc
bound
dec
mov
fldenv
sarb
jae
add
mov
or
xchg
mov
sbb
push
jb
jp
adc
scas
add
inc
sarl
shll
shrl
test
or
mov
aam
fistps
jns
cli
cmp
inc
xor
mov
sub
ret
xchg
cli
inc
mov
sbb
fsincos
add
sub
xchg
aad
adc
arpl
arpl
adc
xchg
arpl
das
outsb
mov
leave
aas
jmp
and
jg
add
daa
xlat
mov
and
ficompl
xchg
pop
fildl
cmp
pop
pop
inc
xor
mov
jmp
sub
xchg
call
push
and
in
mov
lds
addl
xor
repnz
sub
jb
jp
test
mov
leave
out
add
repz
mov
dec
mov
push
cmpl
test
cltd
stos
mov
shl
mov
push
mov
ss
pop
adc
xor
das
mov
mov
jns
or
cli
or
fst
insb
arpl
xchg
adcl
or
dec
inc
fmulp
adc
loope
mov
in
jb
ret
push
addr16
jp
in
daa
sub
pop
repz
dec
lods
ss
imul
out
or
out
sub
pusha
push
aaa
mov
fbstp
aam
pop
test
stos
sbb
and
sbb
xor
push
cs
mov
mov
push
xor
add
push
sub
dec
cld
js
xor
fwait
lret
pushf
jnp
stos
xor
jns
sub
and
lcall
icebp
mov
jl
mov
mov
sbb
sub
sub
jns
mov
test
mov
xor
adc
sub
call
inc
xchg
jg
lret
cmpb
jg
pop
jmp
int
decl
inc
scas
sahf
mov
lods
mov
push
aas
dec
cwtl
sahf
xchg
ret
cmp
dec
add
jns
ret
cs
adc
pop
pop
push
xor
lahf
xchg
sub
dec
imul
das
lahf
and
lret
sub
popf
sub
or
insb
mov
loope
iret
pop
mov
and
pushf
xchg
pop
bswap
ss
loopne
jmp
mov
and
cmp
mov
jge
loop
inc
mov
or
cmpsl
inc
jge
lods
loopne
mov
jns
in
repnz
xchg
mov
mov
icebp
dec
ficoml
cmpl
fldcw
mov
outsl
cmpxchg
xchg
cs
xorb
ss
into
loopne
lods
ret
subb
inc
mov
imul
dec
dec
cld
or
xchg
mov
adc
ret
mov
adc
jns
lcall
jns
leave
scas
pushf
imul
shlb
dec
cmpsb
test
nop
cs
jns
xchg
adc
jg
and
dec
nop
cmp
jbe
popf
mov
sbb
xlat
std
lahf
xchg
arpl
loop
in
fcompl
cmpsb
fdivrl
pop
jne
mov
dec
jns
scas
cli
sbb
jge
sub
mov
arpl
stc
enter
sub
push
xchg
adc
mov
lret
repz
lret
jae
and
mov
sub
and
mov
in
leave
and
popf
fadds
and
pop
repnz
pop
lahf
aas
push
adc
sbb
mov
and
pop
iret
out
faddl
cld
pusha
imul
lds
stos
imul
dec
push
cmp
mov
in
dec
lret
cmp
mov
and
leave
mov
lods
test
out
mov
mov
ret
gs
mov
jbe
in
mov
cmp
xchg
mov
push
dec
lods
jb
aad
or
add
xor
mov
add
addl
cmp
sbb
iret
cwtl
dec
sti
sub
or
adc
lods
ljmp
enter
sarb
pop
repnz
dec
xchg
out
and
xlat
or
xchg
mov
or
filds
push
dec
jg
fs
or
lea
jb
aam
rcrb
cmpsl
fstpt
inc
sbb
mov
mov
std
lea
push
mov
lods
cmp
in
sbb
jmp
mov
lods
sbb
mov
decl
cltd
xor
mov
push
pop
push
mov
inc
scas
mov
xchg
xchg
cmpsb
pop
push
mov
insl
jbe
push
fidivl
dec
jp
sub
incl
shll
xchg
enter
cmpsb
movsb
aad
ljmp
incl
mov
andb
sub
push
sbb
adc
cmp
dec
decl
jl
adc
loop
out
push
cmpsb
mov
into
push
and
sbb
gs
mov
mov
int
and
test
aad
fwait
stos
push
mov
outsb
stos
shl
lret
cmpsb
push
test
lahf
push
ja
mov
cmp
dec
push
xor
or
jne
jg
sbbb
test
dec
jmp
outsb
push
pavgw
sbb
xor
lret
sbb
fndisi(8087
lds
cmp
cmc
push
mov
stos
cmp
imul
push
sbb
xchg
sarb
inc
pop
xorb
in
movsb
pop
mov
data16
inc
nop
and
and
shr
stos
repz
jp
dec
inc
add
mov
int3
jo
jecxz
shl
and
xchg
inc
jg
jp
pusha
sti
add
testb
icebp
dec
and
shlb
ret
push
mov
fcomps
mov
lcall
jae
bound
negb
inc
add
lret
inc
fadds
mov
sbb
lcall
hlt
ja
or
or
repz
push
loopne,pn
and
ss
pop
jns
leave
daa
xchg
sub
dec
cmpsb
mov
dec
mov
movsb
xchg
or
mov
icebp
outsl
shlb
in
stc
xchg
inc
imul
xchg
sbbl
xchg
or
out
cwtl
push
repz
jno
call
xchg
imul
inc
movsb
mov
int3
js
bound
mov
lahf
mov
cwtl
inc
fmuls
out
or
or
arpl
iret
push
clc
pop
loopne
add
lds
and
and
loope
pop
in
jbe
sbb
cmp
and
mov
lret
mov
push
mov
lds
or
sub
pop
mov
xor
add
push
sbb
out
push
in
mov
lods
or
adc
pop
shr
arpl
lahf
jle
in
mov
iret
jo
sbbl
repnz
and
pop
pop
push
and
out
mov
mov
es
fmull
pusha
movsl
ja
insl
out
stc
jae
add
mov
out
push
hlt
mov
mov
aam
push
inc
cmpsb
sub
pop
shlb
cmp
xor
iret
jne
orl
mov
hlt
jbe
out
scas
mov
cmp
add
fbstp
xlat
mov
lahf
test
pop
mov
push
ja
in
lods
mov
push
fimull
xchg
cmpsb
test
fisubrl
cmp
xor
or
mov
ret
or
nop
mov
mul
mov
xor
rorb
jge,pt
sbb
test
daa
sarl
int
add
cmpsb
fsubrs
ja
es
push
pusha
lea
jbe
out
inc
scas
cld
in
xchg
pop
or
decb
cmp
loopne
sarl
cmp
adc
jo
and
inc
jae
rolb
push
test
stos
mov
sub
add
jp
insb
loopne
xchg
adc
xchg
add
adc
arpl
arpl
loopne
imul
mov
stc
int
pushf
push
lcall
lods
dec
icebp
ss
hlt
mov
filds
jno
mov
dec
or
mov
jbe
jecxz
sbb
arpl
cmp
clc
push
mov
cmp
xlat
cld
or
sbb
shr
bound
cltd
lock
sbb
mov
daa
cwtl
ret
aam
movsb
sahf
add
int
and
cmp
out
push
cmp
xor
scas
push
xor
mov
add
lret
scas
and
lret
dec
test
push
jg
push
mov
mov
ret
xchg
pop
mov
jge
stos
add
mov
push
push
push
lods
ret
clc
xor
ss
fiadds
repz
or
mov
cs
push
nop
cmp
shlb
xlat
inc
pop
xchg
repz
pusha
sub
je
fsubr
and
ja
out
mov
divl
rorl
mov
nop
push
pushf
or
add
outsb
mov
cmc
sbb
cmc
data16
pop
cltd
inc
inc
enter
dec
sub
xlat
mov
pop
popf
xchg
pop
repnz
int
lods
stos
mov
int3
shl
les
lret
hlt
daa
test
and
inc
push
xchg
data16
xor
push
rol
mov
xor
jbe
lea
jnp
or
test
sub
out
and
jae
inc
rcrl
xor
jno
loop
mov
scas
cs
push
adc
push
jp
mov
ret
in
call
pushf
inc
in
cmp
repnz
adc
rclb
js
mov
scas
rcll
rcrl
xchg
popf
mov
das
repz
arpl
jnp
outsb
or
lret
inc
lock
push
add
inc
shl
fsubr
xchg
or
lea
enter
in
pop
adc
jecxz
rorb
insb
je
sub
arpl
pop
loope
cmp
and
jbe
pop
int
or
dec
arpl
mov
xchg
dec
push
loopne
cmp
pop
mov
mov
and
aad
xor
jle
popa
fs
mov
xchg
jne
es
pop
xchg
movsb
cld
mov
jl
dec
dec
popf
sbb
add
mov
xchg
rclb
sahf
mov
mov
fs
outsb
subl
repnz
pop
cmp
sub
cmpsl
adc
pop
fiaddl
int3
adc
mov
shl
mov
pop
outsl
sbb
adc
stc
out
std
or
es
cmpb
adc
cld
lret
repz
mov
cli
rclb
mov
mov
dec
das
outsb
cmpsl
and
dec
jo
or
in
sahf
cs
into
inc
dec
mov
cs
xlat
cmp
mov
dec
ljmp
jge
jl
add
hlt
pop
mov
pop
icebp
test
jmp
sub
pop
das
mov
loopne
repnz
arpl
fsubrs
cmp
aaa
shr
mov
negl
lods
pushf
fists
scas
leave
xchg
gs
insb
mov
arpl
add
lcall
or
ror
push
cmp
or
push
xchg
push
sub
scas
and
dec
ret
pop
mov
xchg
test
adc
push
adc
pop
fistl
dec
fldenv
pop
xchg
jg
jne
mov
adc
add
fldt
or
mov
sbb
push
or
pop
in
jg
push
pop
lret
cmpsl
lret
repz
ret
jg
fidivs
or
adc
adcl
dec
mov
sarb
gs
mov
mov
imul
lods
aam
sbb
out
nop
mov
fs
add
adc
push
aad
xor
cmc
aas
cmpsb
mov
xor
js
jmp
aam
call
in
inc
mov
sub
shll
pusha
xchg
test
adc
nop
cld
inc
or
adc
fisubl
out
mov
loopne
push
outsb
repz
xchg
movsb
ja
stc
loop
mov
shll
call
lahf
push
cmp
test
adc
out
mov
fidivs
sbb
inc
xchg
push
test
out
xchg
mov
mov
xchg
dec
xchg
outsl
popa
mov
xchg
add
push
mov
jae
xchg
out
add
lret
cs
aaa
ja
loope
push
sub
sub
jae
xor
cmp
fisubl
arpl
je
aad
push
inc
pop
or
popf
mov
pop
clc
mov
ret
and
jo
sbb
inc
adc
sub
call
mov
inc
pop
xor
mov
or
dec
mov
mov
out
mov
mov
push
push
lahf
lods
push
push
ficompl
mov
shrb
and
sbb
push
test
outsb
add
and
pushf
adc
and
xchg
mov
orb
ret
lret
or
test
xor
iret
aam
lahf
jge
mov
and
mov
and
mov
icebp
xchg
fwait
or
jbe
cld
out
push
sti
or
fxch
fisubrl
in
jnp,pt
data16
mov
mov
ret
into
and
inc
imul
xchg
fwait
mov
stos
and
repnz
mov
xchg
or
fisttpl
stos
add
sub
arpl
bound
fisubl
out
out
lcall
call
ljmp
movsb
push
mov
repnz
stos
cli
ficompl
lods
pop
push
orb
cmc
pop
pop
push
cli
mov
flds
test
cmc
push
popa
scas
and
rolb
dec
int
loope
into
es
push
std
sub
loop
xchg
ficoms
hlt
outsl
mov
enter
lods
and
sbb
cmp
imul
fnstsw
xor
lea
mov
push
push
fs
xchg
jecxz
out
xchg
mov
pop
dec
test
pop
jo
mov
insl
mov
inc
sbb
xchg
pop
sbb
lods
fisttpl
cmp
pop
dec
call
cmp
out
popf
xchg
loop
mov
test
push
xchg
fwait
cmp
adc
addl
xor
push
in
out
adc
shrb
mov
mov
fdivrs
mov
lea
cmpsl
mov
pop
insl
adc
fiadds
mov
test
xchg
jae
pop
mov
dec
bnd
sbb
push
sti
jg
and
cmp
and
sbbb
movups
cltd
ret
mov
test
mov
push
adc
lods
jg
scas
into
mov
and
lock
jno
sub
pop
cli
xor
sbb
pop
sahf
push
sbb
ret
out
inc
adc
jle
and
fwait
dec
movsb
or
lahf
cli
loope
pop
mov
test
jno
adc
call
in
ljmp
push
lsl
cli
leave
std
jne
jbe
std
shll
test
cwtl
inc
sbb
xchg
jmp
pop
bound
xchg
adc
lea
and
mov
sbbl
mov
orb
icebp
dec
gs
sub
stc
jle
jbe
popf
mull
pop
arpl
test
mov
outsl
iret
repz
mov
ja
jl
clc
mov
xchg
lock
sahf
leave
bound
es
dec
stc
jno
jl
jmp
hlt
rcrl
xor
hlt
mov
shlb
mov
call
scas
inc
inc
cmp
inc
mov
mov
movsl
jo
fsubrs
xchg
mov
mov
inc
push
decl
js
cmp
and
xchg
add
xor
pushf
scas
and
daa
notl
push
jle
or
xchg
inc
lea
and
in
cwtl
call
fdivl
cmp
fnstenv
pop
sub
bound
dec
testl
mov
xchg
xchg
sub
mov
cmpsb
mov
pushf
and
lcall
jbe
pop
in
cmp
add
push
adc
divl
roll
out
xchg
test
dec
jae
mov
sub
gs
xchg
bound
hlt
repz
sub
xchg
and
in
add
jbe
xchg
lea
inc
and
adc
cmp
icebp
or
sbb
fsubl
dec
jnp
fs
mov
mov
push
lods
cmpsb
es
mov
orb
mov
js
std
cltd
insl
xchg
fmull
iret
insb
insl
dec
push
js
es
push
or
adc
xor
into
jge
push
cwtl
aaa
lds
mov
arpl
push
cmp
imul
inc
mov
hlt
and
shlb
inc
sub
jnp
and
adc
sub
andb
jo
add
and
aaa
and
xlat
leave
cs
test
xor
or
data16
sbb
mov
mov
fdivl
inc
leave
in
lcall
pop
mov
jmp
push
mov
addr16
mov
dec
fwait
stc
pushf
jmp
cltd
jecxz
enter
in
rcll
ret
push
cmp
dec
cmp
pop
adc
imull
adc
fsubs
loop
pusha
adc
lahf
push
jmp
into
scas
push
sti
jecxz
adc
fnstenv
cmpsl
rcl
sahf
push
je
xchg
das
in
jp
clc
inc
in
jmp
gs
scas
sub
push
repnz
test
adc
adc
fstps
lds
pusha
ret
mov
dec
push
stos
cli
sbb
sbb
pop
inc
fmuls
shr
out
sub
mov
loopne
daa
sub
jecxz
mov
outsb
pop
pop
rep
xchg
sub
dec
jecxz
xlat
sub
push
push
roll
in
fiaddl
and
xor
mov
sub
shl
fdivrs
stos
rcrl
adc
xchg
sti
cld
insl
push
jnp
fxch
adc
test
shl
mov
popf
sub
shlb
stos
pop
lods
push
cwtl
loope
int3
mov
cmp
sub
loope
push
push
mov
mov
sbb
mov
sub
daa
insb
adc
pop
pop
xor
mov
test
incl
mov
push
or
sbbl
and
xchg
inc
jge
jmp
inc
push
inc
movsb
xchg
movsl
or
loopne
pop
stos
push
inc
fnstcw
and
mov
mov
testb
push
fisttps
mov
cmp
loopne
mov
in
sbb
inc
jne
and
sbb
add
int3
mov
dec
adc
push
mov
ret
jl
movsb
aad
out
xor
movsb
in
nop
out
bound
icebp
adc
mov
push
inc
jo
cwtl
cmpsl
popf
push
out
mov
aaa
repnz
adc
mov
loop
pop
inc
sahf
inc
mov
xchg
sbbb
inc
data16
mov
fs
out
push
scas
add
jae
jne
outsl
sub
popa
mov
leave
mov
mov
lcall
icebp
jl
jno
mov
mov
add
cli
xor
icebp
out
xchg
xor
inc
in
mov
or
inc
push
sbb
test
filds
adc
mov
cmp
xchg
std
jbe
pop
mov
movl
dec
or
mov
ljmp
dec
sbb
lods
jae
pushf
jle
xchg
call
ret
js
enter
loope
es
xlat
enter
dec
fcmovne
adc
lret
adc
sub
inc
lahf
pop
ljmp
mov
push
inc
mov
sahf
mov
pushf
mov
stos
jne
sub
and
dec
jg
rcrb
push
cmpsl
jl
push
xabort
push
xor
adc
mov
rclb
add
mov
mov
jmp
mov
push
outsl
inc
fstps
jb
negl
sub
cmp
out
ljmp
cmc
mov
scas
inc
jne
nop
xlat
mov
lea
xchg
fiadds
mov
call
pushf
jb
jbe
xchg
push
mov
aam
testb
out
dec
clc
test
insb
xor
sti
in
push
sub
adc
pusha
pushl
inc
fists
mov
pop
nop
outsl
loopne
lock
rcrb
and
adc
pusha
pushl
inc
fists
mov
pop
nop
outsl
loopne
lock
rcrb
and
adc
pusha
jo
inc
fists
mov
push
nop
outsl
loopne
lock
rcrb
and
adc
pusha
pushl
inc
pop
push
shlb
pop
out
push
cmpsl
das
sub
cmc
push
out
test
sub
add
add
add
or
push
add
sbb
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
das
add
add
in
mov
fildl
push
add
add
add
add
add
roll
pop
add
add
add
insb
add
add
add
pop
add
add
add
add
or
and
add
add
and
roll
add
add
add
add
leave
add
add
scas
add
add
int3
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
mov
add
test
add
xchg
add
add
sub
xchg
add
add
add
flds
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
addl
jl
xchg
add
add
add
add
add
add
adc
mov
dec
add
add
add
add
add
add
add
add
add
stc
add
add
add
add
add
add
add
add
dec
add
mov
mov
addr16
add
add
aaa
add
add
add
add
add
add
add
add
add
movl
pusha
add
add
add
add
add
add
add
add
add
bound
sti
add
add
add
add
add
xchg
add
add
add
inc
add
add
and
and
lds
jne
out
and
sbb
add
add
add
add
add
add
add
add
add
imul
xchg
add
add
add
add
add
add
add
add
leave
add
add
add
add
add
add
add
add
mov
mov
out
mov
add
add
roll
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
movb
add
add
imul
sub
xchg
add
add
rolb
jns
out
dec
add
add
add
lods
add
fs
faddl
add
aad
mov
pop
xchg
add
add
add
add
add
pusha
add
add
add
add
add
add
add
add
cmp
mov
add
add
add
add
stos
add
add
mov
or
push
add
add
add
add
add
push
add
add
add
add
mov
pop
add
add
sti
add
add
mov
add
sbb
nopl
dec
jg
stos
mov
jno
pop
mov
cs
in
mov
pop
lahf
dec
in
dec
inc
decl
pop
jbe
xor
fistpl
rorl
xor
sub
insl
push
in
addb
fwait
icebp
push
outsb
sbb
mov
les
dec
movsl
sbb
daa
sub
and
or
push
pop
pop
add
cmp
lcall
notb
in
paddsb
jle
jmp
mov
and
cltd
sahf
cmp
or
xchg
lods
pop
pop
or
sub
fcmovnu
daa
jb
pusha
jge
ds
clc
xchg
loope
cmpsl
faddl
cmp
hlt
cmp
or
mov
pop
lcall
jl
js
mov
lock
sbb
lods
mov
loopne
pop
and
ret
dec
cltd
xchg
adc
lret
xlat
xchg
mov
aam
call
dec
adc
xchg
fildll
lods
iret
ljmp
xor
or
outsl
mov
lahf
fs
mov
jnp
xchg
testl
mov
clc
int3
sbb
or
pushf
repz
inc
imulb
aam
popf
sahf
xor
stc
out
xlat
sub
sbbb
jb
popa
sbb
dec
js
xor
mov
xchg
inc
cltd
cmp
sbb
repz
add
enter
repz
aad
in
test
pop
or
pusha
mov
mov
imul
sbb
jne
xor
mov
andb
jg
lock
cld
ret
mov
hlt
pop
lock
in
es
inc
std
xchg
jge
mov
sbb
aam
pop
das
lea
add
cwtl
adc
mov
repnz
inc
mov
mov
mov
cmp
dec
out
xor
cs
sti
mov
ljmp
jge
sbb
mov
pop
xlat
cmpsl
das
adc
jns
jp
xlat
xchg
xchg
pop
push
popf
out
fs
lods
mov
pop
mov
jbe
in
jo
xor
mov
mov
fstl
iret
mov
push
jmp
and
inc
or
cli
insl
add
pushf
scas
lret
xor
das
leave
movsb
mov
dec
in
cltd
mov
mov
pop
daa
loopne
iret
mov
fcomip
push
jae
pop
inc
dec
dec
sub
daa
mov
push
in
addr16
mov
fiaddl
mov
jg
sbb
mov
sbb
or
or
mov
fwait
or
cmp
aaa
shrb
daa
movsb
rorl
sub
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xor
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
dec
clc
add
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
or
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
clc
add
jl
add
nop
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
or
add
sub
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
movsb
stc
add
lods
stc
add
mov
add
mov
stc
add
int3
stc
add
aam
add
out
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
add
add
or
add
sbb
add
sub
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
