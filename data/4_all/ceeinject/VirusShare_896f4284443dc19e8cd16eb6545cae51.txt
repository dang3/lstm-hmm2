loopne
decl
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
xor
fs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
xor
lahf
adc
adc
mov
mov
cmp
sarl
jg
and
jae
arpl
push
out
inc
pushl
jae
shrl
jg
xchg
and
jae
arpl
push
testl
lcall
aas
repz
mov
cmpsb
cmp
notb
fldt
mov
jno
rolb
imul
shrb
inc
mov
lods
gs
imull
aas
or
loop
test
xor
sub
adc
jbe
clc
cltd
push
fwait
sbb
fists
pop
sahf
pop
mov
ret
jg
fbld
lahf
jns
add
mov
add
pop
es
iret
jmp
mov
int3
mov
jle
push
cld
pop
sub
arpl
sarb
cmc
pop
push
push
aas
mov
outsl
ret
sbb
shrb
xchg
ds
inc
jb
push
push
or
das
mov
nop
inc
outsl
decl
add
push
testb
pop
mov
es
jecxz
shrl
sbb
push
lahf
jp
push
jae
adc
mov
addr16
jp
push
repnz
or
outsl
test
push
testl
jae
es
sub
bnd
pop
cmpl
xor
into
and
jl
outsl
lret
arpl
push
out
inc
pushl
das
cmpl
dec
jecxz
shrl
jg
and
jae
arpl
push
out
inc
pushl
das
cmpl
dec
jecxz
shrl
jg
popl
sbb
repnz
mov
les
mov
jbe
inc
enter
sbb
cmp
adc
lret
add
movsb
aad
push
push
inc
pushf
std
ret
adc
and
fiadds
jno
repz
xor
out
pusha
and
mov
jno
xchg
nop
mov
and
jmp
lods
sub
xchg
mov
insb
jns
shlb
push
loop
xchg
lea
ja
clc
adc
or
test
aad
xor
jnp
dec
test
xchg
sbb
cld
cmpsb
push
mov
nop
pop
sarl
inc
cmp
addr16
cmpsl
dec
add
je
pop
movsl
and
and
inc
leave
push
xchg
jecxz
mov
mov
roll
sbb
les
inc
mov
shrl
mov
jns
jae
add
mov
addl
add
jge
ficomps
add
popf
pop
jnp
push
and
shll
sbb
inc
cmp
repz
adc
mov
leave
mov
or
into
aas
int
inc
inc
test
in
lret
loop
stc
pop
fdivs
rorb
stc
sbb
imul
movsb
out
ret
sbb
inc
dec
push
scas
push
js
sbb
pop
xor
lcall
or
ss
call
test
xchg
mov
lods
add
and
mov
fsubrs
push
dec
mov
in
xor
xor
shl
fs
imul
push
jae
jmp
mov
enter
cwtl
or
and
mov
and
jns
insb
sbb
int
mov
xor
pop
ja
scas
jle
push
push
cmp
test
test
icebp
xchg
inc
jns
push
inc
loopne
repz
addr16
mov
or
pop
push
mov
mov
insl
int3
out
cmpsb
ret
dec
aad
push
adc
test
push
mov
mov
or
int
in
out
movsl
dec
jnp
xchg
adc
sub
pop
adc
sub
cmp
xor
aad
out
inc
mov
push
xchg
jo
and
cmp
push
mov
iret
mov
popf
sbb
add
jp
xchg
pop
cmp
add
jbe
xlat
leave
xchg
outsb
jp
xchg
mov
cmp
sbb
mov
sub
cmp
mov
ds
je
jb
mov
dec
mov
pop
in
pop
xchg
mov
adc
and
jne
and
scas
cld
cmp
int
push
rcll
pop
jae
mov
mov
cmp
mov
test
xchg
cmp
addr16
es
cld
ss
call
lret
ljmp
mulb
punpckhdq
xchg
cmp
leave
sbb
std
cmpsl
pop
and
and
adc
call
cmp
mov
cmc
arpl
movsl
push
jmp
sub
sbb
mov
and
outsb
iret
xor
or
xor
loop
jl
repnz
cmp
jno
andl
enter
ficomps
push
sbb
movsb
iret
add
xchg
mov
and
outsb
xor
pop
je
xor
mov
inc
leave
stos
jo
clc
sbb
out
and
and
loope
repnz
in
cmp
push
push
mov
xor
mov
push
xor
push
mov
imul
xor
das
aad
ret
cmpsb
es
sbb
adc
mov
sub
fwait
and
lea
jne
mov
bound
jmp
xor
inc
and
popf
push
inc
xor
mov
dec
mov
sarb
outsb
filds
inc
inc
add
lcall
push
les
fidivl
std
insb
or
cmp
jle
sub
leave
push
addl
insl
jbe
iret
call
ljmp
inc
jae
cwtl
add
sbb
cmp
rcr
or
mov
inc
xchg
dec
inc
mov
sub
loope
jne
adc
pushf
mov
adc
ja
data16
imul
adc
adc
jo
das
jb
pop
sub
cmp
inc
jmp
jae
add
movsb
loopne
enter
jnp
bound
jno
jno
into
add
inc
lods
mov
cmpsb
aad
sbb
std
std
mov
mov
imul
int3
aaa
pushf
xorb
pushf
outsb
xchg
cmp
xchg
xchg
push
pop
je
in
jmp
xchg
js
in
jle
xchg
pushf
jmp
lods
aaa
sbb
and
ljmp
inc
xor
mov
data16
cmpsl
mov
clc
mov
and
fists
int3
jmp
bound
in
xchg
pop
mov
pop
les
stc
jecxz
movsl
pop
xor
and
test
out
cmp
mov
popf
sti
ss
adc
aam
test
in
push
xacquire
inc
mov
jne
and
shl
xchg
sbb
repnz
sbb
cmp
inc
inc
decb
ds
pop
add
dec
pop
out
leave
repz
cmp
jle
mov
add
jb
movsl
jno
push
outsb
popa
test
pushf
add
clc
sbb
xor
arpl
or
adc
leave
ds
dec
ds
jnp
inc
imul
and
xor
pop
push
push
sbb
inc
mov
paddusw
push
out
movsl
xchg
in
out
sbbl
je
and
cmp
mov
push
dec
clc
adc
in
fwait
fwait
jecxz
imul
sub
std
push
mov
and
inc
xchg
inc
popa
sbb
je
xchg
mov
sarb
xlat
pop
push
lock
aaa
jo
insl
lea
fwait
mov
pop
int
addr16
xor
out
xorb
cmp
xchg
aas
add
sbb
call
enter
addr16
cmc
add
bound
adc
das
iret
scas
int3
jo
pop
push
js
push
pop
or
jmp
mov
jbe
adc
hlt
dec
jle
lds
jae
daa
xor
push
test
loope
push
mov
adc
or
leave
out
out
and
jns
into
adc
sete
leave
stos
pop
mov
mov
sub
pop
mov
mov
outsl
adc
fs
lahf
cmp
or
das
loope
in
sub
mov
jno
movsl
inc
nop
cmp
lret
dec
xlat
subb
mov
fstp
cwtl
adc
sub
push
out
inc
or
das
popf
add
inc
jg
inc
jne
xchg
mov
cmpsl
adc
inc
scas
js
ss
pop
pop
and
rcll
popf
jl
xorl
fnsave
push
cmpsb
dec
mov
xor
out
lods
arpl
xor
jno
xlat
xor
and
jb
pop
xchg
test
out
aaa
and
in
es
imul
test
and
lahf
mov
and
sub
cwtl
xor
add
dec
out
insl
pop
push
les
les
ret
mulb
mov
xorb
idiv
pop
insb
pop
movsb
cmp
jmp
push
aaa
aam
and
out
shlb
and
xchg
scas
jge
push
lds
mov
sbb
out
and
aas
pushf
and
lret
imul
inc
jo
sahf
ds
sub
mov
jle
movb
xchg
jge
ja
adc
negb
mov
adc
das
pop
fneni(8087
sbb
xchg
ds
les
jmp
sbb
sub
add
and
dec
lahf
inc
sbb
inc
mov
pop
xor
cmpsb
jae
cld
call
or
iret
jg
fwait
and
ret
xor
xchg
out
cmc
dec
push
stc
imul
mov
iret
adc
clc
pop
add
cs
int
stos
daa
xchg
fidivrs
adc
lret
sar
outsb
imulb
jmp
testl
push
jno
mov
xchg
and
sub
bnd
shll
jbe
sbb
movsl
lcall
data16
fwait
aad
xchg
cs
rcrb
add
cmp
mov
pop
adc
jle
arpl
mulb
notl
fstps
sbb
mov
inc
sbb
imul
punpcklwd
jecxz
insl
xor
push
mov
push
lock
ret
inc
xchg
mov
inc
jns
jbe
pop
jnp
jl
lods
and
adc
lods
js
mov
lcall
sbb
lods
sti
arpl
cmp
popf
popl
fldl
or
rclb
popl
into
decl
sbb
pop
adc
movsl
dec
push
cld
or
test
les
fs
sub
lods
aam
iret
sub
pop
in
dec
adc
pop
popl
jp
icebp
aad
inc
cmp
insl
div
pop
mov
jne
sahf
subb
jp
mov
repz
leave
neg
push
inc
inc
clc
insl
les
in
jno
cld
incl
stos
jl
jb
xchg
loop
sbb
insl
jle
das
inc
cltd
jbe
xor
nop
fstpl
bound
or
aas
pushf
aam
jo
inc
cmp
fimull
sub
cld
into
and
fdivrs
xchg
outsb
icebp
jg
shll
push
jl
jns
fsts
push
nop
fcmovu
cmp
lds
xchg
fmuls
mov
xchg
mov
or
push
pop
inc
into
lahf
cmp
aad
and
jbe
lret
dec
daa
inc
xchg
cmp
adc
xor
and
int
shl
or
in
fsubl
movsb
adcl
xor
aad
fidivl
insl
aam
mov
adc
aaa
adc
push
scas
setle
mov
mov
adc
out
andl
movsb
outsl
stos
mov
jge
scas
fnstsw
xor
insl
dec
pop
xchg
cmp
add
push
xor
sti
push
ret
call
add
sub
mov
push
add
push
daa
js
mov
inc
fldcw
dec
test
jnp
pop
ljmp
iret
cltd
pusha
mov
clc
cmp
sbb
test
jg
xlat
lcall
mov
daa
push
mov
lret
xchg
std
lock
cmpsb
lods
imull
mov
bnd
popf
jnp
sarb
out
ds
inc
lret
aas
and
shlb
mov
mov
jle
add
lret
ljmp
sbb
pop
aam
pop
sahf
inc
adc
push
insb
push
pop
mov
dec
aaa
jnp
gs
sbb
sarb
iret
imul
clc
repz
cmp
adc
or
mov
cmp
stos
imull
clc
inc
and
add
dec
sbb
push
stos
xchg
aad
leave
mov
popa
hlt
outsb
add
mov
movl
pusha
inc
adc
pop
add
xor
aas
mov
sub
insl
cmp
testl
jge
rol
pop
mov
pusha
mov
fs
mov
adc
mul
out
and
lret
pop
fs
clc
movsl
fwait
cmp
mov
test
sub
mov
push
mov
push
mov
xchg
dec
xchg
pop
lea
pop
das
pop
test
lock
into
mov
xor
scas
cmp
adc
out
cwtl
cmc
repnz
push
sahf
and
jle
cmp
ljmp
mov
pushf
data16
ja
call
dec
orl
jns
jle
xor
shlb
lock
mov
and
idivb
mov
cmpsb
mov
mov
lcall
push
cli
fstp
dec
rolb
mov
mov
pushf
loope
outsb
sbb
push
je
mov
sbb
fwait
add
sub
lret
mov
and
pop
dec
xchg
dec
cltd
pop
std
push
mov
cmp
add
mov
sub
into
pop
sub
push
jne
mov
and
mov
sbb
fdiv
inc
fimuls
push
sbb
popf
mov
out
notb
out
in
and
iret
mov
jg
dec
push
xchg
fistpl
cmpsb
out
rcrb
inc
sbb
mov
pop
push
xor
pmaxsw
icebp
push
out
pop
mov
sub
jb
pop
xorb
fcmovnu
jle
pop
jbe
cmpsl
mov
sti
adc
cld
lahf
mov
lods
fs
add
adc
paddw
test
mov
frstor
std
mov
sub
mov
xlat
lods
aam
inc
push
xchg
jae
in
lock
lods
add
mov
dec
xchg
and
jnp
sbb
cmp
add
dec
cli
hlt
add
mov
pop
scas
loopne
push
hlt
jb
cltd
popa
inc
add
mov
pop
dec
xchg
xchg
inc
xor
inc
clc
push
push
push
pop
add
dec
inc
fsubl
ja
insb
jmp
lds
js
push
inc
ss
faddl
orl
rcll
cmpsb
pusha
jnp
mov
loop
paddsb
sub
fldcw
jl
adc
enter
lds
imul
inc
xchg
cmc
icebp
sub
xchg
cs
pop
add
xchg
mov
fwait
mov
shl
lea
push
add
lods
adc
int
fwait
out
cmpsl
push
leave
sub
mov
arpl
fldenv
adc
mov
out
sbb
inc
rcrb
out
lea
cmc
pop
or
push
mov
or
sbb
cmp
in
push
movsl
daa
sbb
sub
push
xor
xor
into
mov
cmp
adc
aad
sbbl
cltd
out
pop
and
adc
movsb
flds
or
cmpsl
push
movsl
xchg
hlt
sub
sub
imul
dec
jp
xchg
xchg
jae
jl
push
lret
dec
sarb
sub
lds
dec
js
data16
in
cmp
mov
cmp
out
aaa
add
push
lds
fistpll
icebp
call
ficoml
xor
dec
incb
cmp
xor
mov
add
fsubs
sbb
mov
and
mov
mov
pop
mov
cmp
gs
frstor
push
lds
repz
xchg
out
inc
push
loop
cmp
jbe
fistpll
xor
xlat
lods
stos
outsb
enter
out
shll
xchg
loopne
and
xchg
sbb
cmp
rcl
stos
mov
js
mov
out
testb
dec
ljmp
and
pop
and
push
sbb
or
mov
push
mov
push
stos
imul
andb
cmc
sbb
cld
xor
inc
daa
inc
push
mov
cmp
into
mov
and
in
aad
mov
es
test
xchg
mov
pop
imul
dec
add
xchg
mov
ljmp
sub
sub
mov
pop
push
xchg
xchg
aaa
adcl
ja
jp
ds
jmp
scas
aam
dec
push
xor
mov
rcrb
adc
andb
test
and
xor
popa
fmuls
inc
into
pushf
push
cmp
lret
cmp
cltd
int
mov
enter
lods
add
cmpsb
test
pop
sub
inc
pop
insb
or
sub
ret
lret
adc
rolb
mov
data16
xor
sbb
lods
movsb
mov
stos
xchg
xchg
lea
hlt
dec
adc
subl
sbb
ja
xchg
repnz
rol
int
ret
adc
or
cmp
and
mov
das
xchg
aad
add
sub
test
adc
aaa
sbb
jg
call
pop
out
ljmp
test
dec
repnz
call
mov
push
pop
imul
cltd
sbb
mov
xchg
filds
mov
out
aam
jae
push
ret
pop
mov
mov
push
adc
push
pop
icebp
aam
popa
iretw
fsubs
data16
and
lahf
add
or
xchg
add
lret
fiaddl
aad
dec
dec
lods
out
into
ss
aam
xchg
sbb
push
outsl
add
fstpl
mov
pop
and
xchg
test
insb
stos
lods
sbb
xchg
fidivrs
addr16
stos
test
shlb
aad
or
test
pop
inc
scas
pushl
push
or
ss
rorb
mov
pop
sbb
push
cmp
adc
jns
xchg
ja
sahf
ljmp
push
dec
ficoml
ret
sub
test
push
call
xchg
and
mov
mov
in
into
xchg
fwait
xchg
in
mov
xchg
adc
loope
mov
adc
add
in
gs
das
mov
sbb
fbstp
adc
clc
push
out
xchg
jmp
xor
jecxz
jae
jb
lret
and
repz
mov
clc
gs
mov
cmp
sbb
cld
xorb
or
mov
or
leave
cmpb
fsubp
js
dec
das
mov
jb
int3
sub
push
mov
and
clc
repz
imul
test
adc
jbe
cmp
push
aad
inc
in
sbb
cld
sbb
leave
movsl
dec
xlat
fistpll
stc
jo
xor
lds
mov
outsl
in
push
in
mov
sub
cmp
inc
nop
xor
mov
fwait
movsb
xchg
pop
sub
sbb
push
adc
mov
loope
decb
cwtl
pop
jle
push
mov
jns
inc
cmpsl
loope
and
dec
movb
add
xor
dec
jl
adc
into
stos
sub
pop
mov
cmc
or
cmp
jb
cwtl
dec
scas
inc
loop
add
jb
lahf
and
fwait
pop
sub
stc
push
mov
cs
inc
call
sahf
in
adc
xchg
clc
mov
push
cmc
test
jno
cmp
test
leave
mov
jbe
bound
iret
jb
mov
xchg
ljmp
adc
hlt
dec
add
sbbb
dec
popf
clc
rcrl
orb
sbb
mov
scas
pop
add
rol
cmc
lds
pop
add
sbb
push
xor
mov
xchg
inc
out
sbbb
mov
pop
pop
in
je
daa
xor
mov
push
icebp
movsl
jbe
push
popa
xor
cld
mov
or
dec
ficompl
fsubrs
adc
cmp
pop
and
popf
imul
mov
sbb
jge
cmpl
rcll
test
in
cmp
adc
out
cld
sub
mov
mov
xorb
push
loopne
insb
jg
aam
push
push
in
xor
lahf
mov
xchg
in
js
adc
xchg
inc
insl
rol
fdivs
sub
adc
pop
int3
lea
xchg
call
mov
xlat
hlt
sti
int
fucomi
movsl
mov
pusha
xchg
inc
aas
mov
aaa
in
and
push
pop
mov
inc
int3
test
call
ret
cmp
in
mov
xchg
push
popa
pusha
sub
lahf
adc
pop
cwtl
cmpl
sbbb
pop
into
pop
and
pop
std
push
xor
xchg
add
sti
and
mov
sub
or
inc
outsb
pop
add
cltd
fwait
das
cld
imul
fld
jo
xchg
and
bound
addr16
add
out
dec
and
mov
mov
sbb
mov
push
aad
push
xchg
push
inc
repnz
push
push
jne
mov
in
cmp
orb
fstps
into
inc
dec
mov
and
aam
aam
arpl
cld
mov
add
cmc
cwtl
jmp
jmp
scas
mov
push
xlat
and
movups
push
mov
mov
mov
sbb
imul
into
sbb
push
sbb
dec
jmp
inc
stos
stc
out
shrl
pop
pop
aaa
add
lahf
clc
ss
xorb
mov
pop
and
js
sbb
inc
sbb
pop
and
in
mov
daa
shrb
mov
imul
push
xor
sub
xor
cmp
pop
in
mov
inc
add
lret
sti
and
iret
repz
popa
mov
inc
dec
dec
push
xchg
mov
sub
sbb
inc
push
jo
in
pushf
jbe
xor
int3
mov
jo
pusha
test
push
jmp
jo
pop
es
xchg
mov
xchg
lret
fcmovnbe
pop
hlt
lret
xorl
mov
aam
adc
dec
adcb
dec
push
mov
xchg
aaa
mov
pop
mov
xor
mov
mov
lds
insb
add
mov
shld
iret
mov
and
cs
in
jno
cld
pop
in
rorb
ret
nop
outsb
pop
rcrl
filds
cmpsb
mov
and
sbbb
push
cmp
orl
sti
imul
lock
xchg
test
mov
je
imul
cwtl
hlt
add
xor
mov
les
push
inc
xchg
and
sbb
inc
mov
aaa
sub
fcompl
mov
inc
add
push
out
inc
pushl
das
cmpl
dec
jecxz
shrl
jg
and
jae
arpl
push
out
inc
pushl
das
cmpl
dec
jecxz
shrl
jg
mov
mov
push
out
ret
pushl
das
cmpl
dec
jecxz
shrl
jg
and
jae
arpl
push
out
inc
pushl
das
orl
xchg
mov
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
pop
sarl
jecxz
das
in
add
or
mov
cmpsb
arpl
adc
inc
divb
out
push
roll
ret
ss
xchg
inc
xorl
mov
cwtl
jae
arpl
adc
and
roll
jecxz
xchg
push
sbbl
mov
rolb
arpl
inc
lcall
shll
mov
xchg
push
paddusw
inc
jb
gs
movsl
dec
test
mov
adc
fistl
push
loop
sbb
imul
adc
jnp
dec
jae
bound
push
mov
imul
push
adc
faddp
aaa
or
mov
and
xchg
jns
dec
jbe
mov
add
sub
ret
jae
push
xchg
mov
repz
cmpsb
lea
pop
inc
les
int
add
and
lds
cs
push
push
inc
dec
movsl
push
and
xor
cmp
repnz
js
outsb
lods
jle
mov
cmpsb
arpl
divl
roll
ret
ss
jecxz
xchg
add
fs
adc
outsb
jae
arpl
xor
adc
dec
movsl
cmp
xor
gs
pop
shl
aas
sub
sbb
test
xorb
mov
in
mov
mulb
lods
sbb
adc
das
shll
mov
dec
xorl
adc
inc
xorl
mov
mov
cmpsb
arpl
adc
add
xor
and
roll
ret
ss
xchg
inc
xorl
mov
mov
cmpsb
arpl
adc
add
xor
and
rol
sahf
add
sbb
xchg
push
in
fst
dec
aaa
xchg
cmp
push
cwtl
mov
sub
ss
adc
call
sub
test
pop
xor
in
popa
mov
fidivrl
cmp
jmp
repz
ficoms
adc
ja
sub
or
add
mov
xchg
outsb
lahf
sub
jo
cmpsb
daa
inc
adc
pushf
xor
and
fidivs
stos
pop
inc
loope
aas
jnp
and
xchg
jle
clc
jae
inc
xchg
arpl
sbb
shrb
inc
lahf
int
lods
lret
sbb
lcall
sub
pop
arpl
pop
sti
pop
scas
stc
push
mov
mov
stos
pop
ss
push
mov
jmp
jne
popf
cmp
mov
adc
es
pop
repnz
loopne
mov
or
jle
mov
jle
roll
rcll
incl
fcmovnbe
js
insl
cmc
daa
insl
cmp
dec
mov
jmp
test
xchg
cmp
and
test
imul
adcb
mov
mov
divb
loop
xchg
cmp
sub
cmpsl
push
sahf
shll
jnp
jno
lock
dec
fidivrl
shr
lock
dec
incb
movl
cs
cmpsb
orb
test
add
neg
xor
in
clc
std
adc
mov
sub
or
call
mov
pop
decb
sbb
inc
xchg
pop
xor
pop
shl
pop
mov
and
pushf
fidivs
pop
or
aaa
or
mov
das
ret
scas
int3
pop
fcmovu
aaa
pop
popa
pop
fcomp
das
and
add
mov
mov
ficoml
js
or
mov
jp
repz
pop
mov
lret
mov
loope
imul
outsb
addr16
adc
dec
dec
fcomip
mov
dec
imul
jg
inc
in
inc
mov
icebp
sbb
xor
xlat
pop
xor
xchg
lds
mul
cmp
mov
push
xchg
push
ss
mov
jbe
push
lcall
sub
cmp
adc
and
and
sbb
dec
call
fbld
jbe
xchg
pop
fdivrs
adc
aas
push
xchg
mov
or
cs
push
outsb
pushf
cmp
mov
push
mov
sbb
psubsb
adc
xorl
pop
test
addl
xor
push
mov
fs
ja
dec
mov
adc
add
iret
jno
repz
jnp
cmp
ret
sbb
js
adc
inc
pop
add
ss
inc
les
lret
and
int
jns
xlat
in
cmp
icebp
jo
cld
dec
mov
or
cmp
xchg
lods
pop
fisttpll
ds
ffree
out
ficompl
hlt
fs
dec
mov
adc
or
push
mov
in
xor
dec
fcmovnu
or
jle
jmp
mov
hlt
pop
push
dec
pop
rolb
in
cmpsl
loop
rorl
shrb
fisttpll
outsb
xchg
es
pop
subl
js
jo
sbb
sbb
gs
frndint
iret
xacquire
nop
jge
subl
or
inc
std
sbb
js
sub
pop
jno
jae
sar
jnp
pop
mov
adc
sub
jbe
mov
pop
and
pop
sub
int
mov
mov
shr
jb
pop
insl
xlat
loop
push
sub
xor
lcall
push
insb
pop
dec
push
cmp
xor
loop
push
ja
cmp
pop
lds
add
lods
adc
shl
scas
scas
pop
add
dec
daa
adc
xor
lods
inc
fs
mov
aam
jmp
lock
shrl
rcll
rorl
push
std
hlt
leave
ss
push
inc
jae
jno
idivb
movsl
cld
lahf
daa
ret
lret
pop
push
popf
cwtl
xchg
pop
jge
adc
adc
lods
ja
xchg
push
mov
mov
outsl
ja
jle
mov
jp
scas
xor
fiadds
aaa
rolb
dec
movsw
push
arpl
xchg
mov
xchg
push
pusha
insb
add
rcll
xchg
pop
testb
push
mov
and
mov
xchg
jmp
jno
mov
popf
in
inc
jl
jle
fnstenv
or
push
movsl
pop
jle
int3
jb
mov
stos
add
addb
jb
scas
rcrb
push
jae
push
ss
sbb
rorb
out
int
push
ret
mov
in
mov
fdivl
cs
add
mov
mov
into
aad
stos
sub
adc
cmpsl
cltd
dec
pop
fdivrs
stos
mov
iret
sub
jmp
cmp
dec
xor
das
loope
cmp
clc
sbb
xchg
pop
adc
mov
loopne
cs
or
sarl
cmp
inc
jecxz
mov
dec
xchg
rclb
fildl
xchg
loopne
add
pop
iret
addr16
pop
pushf
mov
add
cmp
enter
push
cli
jo
jp
pop
into
int3
scas
xchg
stos
sti
xchg
pop
mov
scas
popf
push
inc
mov
int
mov
xor
or
jae
sub
sub
add
adc
adc
pop
mov
pop
jmp
dec
cs
mov
xchg
xchg
int
sbb
dec
jecxz
and
pop
cwtl
add
fsubrl
push
jmp
push
adc
xchg
cmp
out
adc
xchg
loop
push
ret
inc
adc
leave
sbb
add
and
mov
mov
mov
iret
pop
incl
push
push
sub
mov
shlb
sub
stc
je
dec
cmp
mov
inc
rcrl
push
mov
pop
pop
sti
pop
adc
xchg
pop
jmp
pop
adc
mov
test
in
stos
sahf
test
daa
push
cmpsl
ja
stos
sub
sub
dec
xor
loopne
lock
push
mov
aaa
jbe
mov
lock
lret
fildll
loope
or
sbb
dec
cwtl
clc
pop
cld
popf
std
or
gs
or
sbb
xchg
arpl
xor
xchg
xchg
iret
push
js
in
mov
adc
xchg
leave
jb
lret
insl
ret
pop
jg
jp
mov
fs
xor
aam
dec
xchg
pop
sbb
mov
arpl
loope
adc
ss
dec
xor
cwtl
pop
mov
daa
loopne
push
push
xor
inc
push
jb
sub
leave
in
mov
sahf
in
add
fwait
sbb
mov
loopne
dec
icebp
in
xor
mov
loopne
pop
sub
sub
xchg
nop
jg
sub
ds
mov
jp
or
jl
push
enter
in
jbe
loop
lods
xor
fnstcw
mov
inc
sbb
add
out
mov
mov
pusha
leave
add
stos
mov
cmpb
adc
ja
fidivl
sti
daa
sub
mov
sbb
out
dec
ja
icebp
repnz
push
pop
cld
or
mov
inc
pop
addr16
pop
jno
pop
out
lock
mov
sub
ja
mov
add
fcompl
repnz
mov
or
iret
jle
fisubl
pop
jmp
sbb
dec
sbb
and
fcomps
pusha
pop
cmpsb
mov
and
xor
cmp
cmp
repnz
clc
xchg
fadds
xor
mov
cmp
fincstp
push
xchg
outsb
lock
pop
mov
mov
xchg
inc
sub
cmp
dec
fistpll
mov
pop
xchg
test
aad
sbb
sbb
mov
xchg
mov
jbe
inc
mov
inc
add
pop
aaa
rcrb
movsl
push
les
or
dec
imul
imul
mov
js
notl
sbb
jno
push
lods
sbb
cmp
and
aad
push
xchg
mov
mov
sahf
mov
cmp
pop
cwtl
jno
add
mov
push
pop
scas
int3
stos
enter
jbe
pop
enter
arpl
mov
cmp
pushf
idivb
push
cmpsl
ss
cmpsb
sbb
fidivs
ss
xchg
mov
pop
negl
sbb
inc
push
cmpsb
xchg
mov
mov
push
push
inc
and
ficompl
mov
out
and
sbb
xor
rcrb
sbb
aas
out
jb
ret
cmp
stos
mov
jg
jmp
and
xchg
decb
push
sub
test
fs
test
daa
je
lret
aas
xor
xchg
shr
in
pop
xchg
jmp
adc
call
jl
dec
dec
insl
pop
xor
in
mov
stos
jmp
inc
mov
xchg
sbb
fisttpll
aaa
test
and
stos
jne
andb
pop
sbb
fidivs
mov
xchg
mov
fistl
sahf
call
out
pop
sbb
xorw
cmp
xchg
jle
jb
repnz
mov
mov
dec
out
pop
popa
jae
mov
in
leave
adc
pop
cmp
jno
sbb
enter
and
iret
push
fsubrl
and
dec
fbstp
cld
dec
xlat
adc
jno
aad
cmc
xchg
xchg
cmp
mov
sbb
and
xchg
imul
xor
hlt
arpl
mov
push
sub
mov
dec
cmp
mov
cmpl
insb
and
pushf
pop
gs
test
imul
lock
jecxz
mov
sub
shlb
mov
cmp
adc
or
call
test
pop
mov
push
or
lods
dec
lods
mov
inc
push
sbb
push
mov
xchg
or
lret
pop
jp
ret
inc
dec
stc
xchg
scas
cmc
pop
pop
je
mov
xlat
or
pop
inc
lods
or
push
pusha
inc
or
cs
cltd
adc
hlt
movsl
sbb
pop
adc
stos
pop
xchg
bound
and
testl
mov
pop
pop
sti
aaa
ss
insb
mov
in
inc
or
and
dec
inc
js
xchg
in
and
mov
lret
xor
xchg
cmp
sbb
mov
mov
aam
mov
outsb
int
shrl
mov
cmp
inc
or
mov
shl
push
je
xor
inc
or
stos
cs
out
xor
push
push
push
lods
rolb
or
pop
push
iret
mov
addr16
mov
xchg
sar
imul
int
fisttpll
insb
cmp
inc
xchg
orb
adc
orb
mov
push
and
das
cmp
subb
call
xchg
nop
jno
dec
addb
jbe
or
mov
aas
mov
rorb
out
outsb
xor
mov
aaa
test
call
cmpb
bound
push
data16
dec
or
mov
xchg
add
add
repnz
mov
iret
push
push
mov
add
test
cmc
cltd
xor
mov
xor
adc
out
int
pop
jb
fnstenv
mov
push
fimuls
pop
cltd
add
sbb
mov
out
in
data16
add
repz
sar
inc
ret
data16
inc
sub
out
mov
push
popf
sahf
jp,pn
jne
xchg
popa
and
xor
sub
jb
jmp
fs
into
fcmovnbe
enter
test
jg
loopne
imul
mov
shrl
mov
insb
jo
enter
sbb
adcl
lcall
push
scas
add
push
mov
pop
cs
mov
mov
lret
and
test
sub
pop
push
notb
dec
pop
sti
mov
lret
push
sbb
inc
mov
pop
add
iret
sub
pop
cmp
or
test
std
cmpsb
mov
testb
mov
daa
adc
lret
jmp
movsl
inc
mov
jge
add
cmp
inc
push
test
popf
jbe
insb
stos
mov
cmp
call
add
or
das
push
sub
xchg
dec
push
inc
add
shll
sbb
sbb
pop
push
cmp
lea
stc
popf
fxch
daa
out
mov
test
mov
sar
cmp
push
insb
and
scas
or
ljmp
push
push
sbb
cmp
mov
movsl
jnp
in
idivl
repz
xchg
aad
das
hlt
sbb
cmc
and
ret
repz
ss
xchg
js
xchg
lret
add
mov
push
or
int
stos
xchg
jo
sbb
inc
mov
or
add
mov
shrl
jg
pop
lcall
sub
mov
pop
adc
cmc
jae
inc
dec
mov
mov
imul
add
enter
mov
sbb
cmp
div
mov
dec
push
cmp
idivb
push
jl
xchg
std
testb
iret
mov
cmp
bndstx
dec
mov
loopne
rclb
sbb
sarl
cli
mulb
cmpsl
inc
shlb
push
fisubs
fidivrs
out
cmp
dec
add
mov
mov
orb
imul
in
dec
sbb
js
adc
lahf
xchg
cltd
out
sub
xorl
push
jb
dec
mov
addr16
add
loop
jge
stc
or
xor
mov
ja
dec
ret
jno
pushf
jno
cltd
push
fmull
and
cmp
roll
add
aad
jl
das
cli
jno
imul
in
lea
ret
js
cmpsb
out
and
daa
mull
mov
sub
mov
inc
js
lcall
mov
mov
pop
pop
jne
out
sub
and
hlt
cmp
push
addb
pop
push
adc
lea
lods
loope
mov
mov
arpl
popa
shll
inc
aam
and
cmpsb
jge
sub
inc
aad
fwait
sub
cmp
pop
out
xlat
insl
icebp
and
mov
push
inc
jbe
mov
jmp
cmp
fnstsw
ficomps
out
adc
leave
mov
dec
insb
popa
mov
in
test
dec
imul
add
jnp
aam
xor
call
loopne
sbb
mov
xchg
jmp
adc
cmp
sar
ret
in
jo
pop
insb
push
rolb
push
fcomi
out
xchg
dec
dec
mov
loop
sub
push
mull
push
inc
jl
pop
dec
jnp
outsl
and
jp,pt
mov
xor
mov
scas
nop
aam
add
shll
mov
loope
into
repnz
dec
mov
sbb
jae
repnz
mov
clc
pushf
inc
movsl
and
add
inc
stos
dec
mov
xchg
mov
js
pop
imul
sbb
test
adc
add
insl
fdivr
mov
jle
adc
sbbb
dec
jb
xor
dec
adc
cmpl
mov
pop
bndstx
out
jg
mov
mov
adc
jmp
repz
jbe
lds
das
adc
push
push
sbb
das
jmp
or
pop
leave
out
mov
lret
shll
cmp
mov
leave
xor
dec
js
xor
cltd
push
lcall
stos
inc
div
test
inc
jns
fidivs
fbstp
shll
dec
divl
ja
push
ds
pushf
addr16
push
and
pop
insl
pop
or
call
cltd
mov
fistps
mov
or
adc
push
pop
insb
into
sar
lea
out
mov
out
nop
push
jp
mov
sub
inc
clc
rol
idivl
push
push
outsl
sbb
jl
divl
mov
scas
lret
mov
and
jae
and
or
es
stos
sub
int3
cmp
es
ss
jp
out
mov
call
push
arpl
mov
movsb
adc
fcoml
mov
jno
mov
and
cmp
push
xlat
mov
bnd
mov
pop
ret
fisubrs
mov
and
jmp
push
in
dec
or
cs
insl
ret
xor
dec
sbb
cs
mov
add
cli
push
je
fdiv
mov
mov
and
mov
leave
dec
mov
inc
xchg
fcomip
stos
in
mov
mov
punpckhdq
mov
sub
jb
xchg
cwtl
bnd
ja
icebp
ret
js
fdivp
arpl
mov
jne
pause
dec
scas
mov
add
pop
xor
testl
aad
jl
int3
cli
cli
and
xor
mov
mov
pop
fadds
mov
pop
xor
std
outsb
aas
dec
bound
loopne
xchg
inc
pushf
shl
pop
data16
adc
popf
pop
pop
sbb
icebp
iret
call
inc
or
inc
shlb
das
push
fldt
xchg
mov
adc
sti
and
dec
and
push
gs
test
and
out
cmp
das
ds
iret
addl
popf
and
jae
inc
xchg
xor
imul
push
sbb
jo
sti
scas
popf
pop
push
rol
xchg
pop
lcall
outsl
prefetchnta
jne
mov
test
ret
ja
mov
or
sub
clc
out
push
xor
and
stos
out
adc
repnz
adc
sti
cmpsl
nop
fstpl
mov
mov
inc
mov
shrl
fisttpl
int
mov
insb
fcompl
adc
push
pop
repz
aam
rcl
fcompl
jns
add
adc
adc
xor
jb
pop
adc
add
jae
cmp
xor
stos
pop
sbb
inc
cmp
dec
push
push
mov
sbb
lcall
rcr
fsubrs
cltd
fwait
movsl
sti
jl
pop
scas
sbb
inc
cmp
dec
sahf
lret
pop
mov
mov
ljmp
jecxz
push
addb
sti
stc
pop
pop
sub
mov
in
jnp
push
jb
scas
and
pop
xchg
lea
xor
mov
cs
ja
add
jo
sub
outsl
js,pt
dec
insb
lds
or
pop
cmp
add
cli
cmp
pop
pop
inc
mov
ss
shr
scas
in
call
out
dec
sub
jnp
jb
or
push
lods
inc
adc
mov
mov
insb
jne
cmpsb
or
int3
jb
imul
stc
aad
mov
push
lods
xor
cld
xchg
pop
mov
jae
xor
adc
jne
cs
jb
jb
jbe
aad
ja
push
fdivrl
into
stos
sub
fildl
push
inc
cmp
adc
adcl
adc
stos
and
insb
xchg
mov
enter
add
pop
lcall
aam
pusha
arpl
sub
mov
dec
les
bound
clc
insb
and
pop
xchg
or
enter
movb
mov
jle
cmp
inc
mov
ja
xlat
push
nop
push
xchg
inc
loope
mov
adc
movsb
pop
js
xchg
add
mov
lea
out
std
lods
jae
and
sub
test
orl
add
lret
fisubl
lods
pop
dec
sbb
call
xchg
mov
stc
pop
lahf
int
mov
jns
sahf
out
mov
push
sbb
mov
pushf
add
mov
roll
or
stos
cmpsb
mov
sub
inc
cmp
into
insl
fwait
add
mov
cmp
das
xchg
xor
std
popa
jle
scas
jne
push
push
cmp
push
xchg
call
jge
or
dec
les
jnp
add
aad
mov
sarb
mov
jne
mov
mov
pushf
mov
and
cmpsl
nop
inc
xor
popf
push
cmp
sbb
ret
xchg
lret
fstl
test
imul
cmpsb
mov
dec
call
cmc
idivl
xor
jecxz
dec
icebp
test
mov
insb
pop
std
xchg
test
and
adc
xchg
sbb
out
inc
add
mov
cmp
cmp
cmp
or
hlt
cmp
pop
xlat
adc
mov
iret
loopne
mov
ficomps
and
xchg
inc
xchg
jno
movsl
movsb
hlt
jb
or
fidivl
push
or
imul
ja
jmp
lcall
or
ss
pop
dec
bound
dec
gs
ljmp
lods
push
movsb
and
scas
push
xor
fiadds
test
repnz
pusha
or
sarl
aad
pop
and
sbb
sahf
mov
inc
popa
jae
dec
test
xchg
xchg
or
int
mov
add
sarl
jmp
jle
or
pop
icebp
in
outsb
aam
push
icebp
mov
cmp
and
bnd
test
pushf
cmpsb
sub
sbb
leave
lea
popa
lret
inc
outsl
bound
sbb
add
arpl
mov
xchg
inc
xorl
mov
mov
cmpsb
arpl
adc
add
xor
and
roll
ret
ss
xchg
inc
xorl
mov
mov
cmpsb
arpl
adc
add
xor
and
xlat
add
loop
xchg
inc
xorl
mov
mov
adc
add
xor
and
shrl
ret
mov
xchg
push
add
out
xchg
lods
jns
sbb
cmpsb
adc
fwait
dec
cld
or
sbb
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
xor
and
adc
add
out
psubb
xchg
mov
mov
ja
pop
loop
shlb
aaa
xor
and
adc
add
jo
pusha
xchg
push
cmpsl
inc
mov
inc
mov
ja
pop
rclb
shlb
aaa
sub
cmp
or
sbb
imul
adcl
clc
ja
inc
js
push
xchg
aaa
pop
dec
mov
mov
and
je
jge
mov
fstps
sbb
fdiv
clc
shl
or
icebp
cmc
mov
fists
cmpl
xor
data16
mov
ja
iretw
lahf
fadd
jecxz
inc
fwait
mov
in
sbbb
pop
test
cmpsl
or
xlat
rcr
sarb
sub
popl
inc
dec
cmp
daa
loopne
pop
fadd
mov
popf
loopne
popl
mov
mov
data16
pop
loopne
das
fcom
mov
push
cmp
sbb
xor
jbe
adc
ss
cmp
adc
add
xchg
push
cmpsl
pop
mov
inc
mov
ja
pop
clc
pop
lret
pop
pop
test
xlat
jne
je
add
push
xchg
sbb
and
and
pmulhuw
lock
lods
jbe
movl
sbb
pusha
repz
rclb
mov
aas
lds
nop
push
rcrl
mov
movsb
addr16
mov
xchg
push
cmpsl
inc
mov
inc
mov
ja
pop
loopne
shlb
shlb
and
adc
add
jo
pusha
xchg
push
cmpsl
inc
mov
inc
mov
ja
pop
loopne
shlb
shlb
setle
dec
add
push
flds
or
mov
hlt
mov
cwtl
push
scas
xor
sarl
lret
mov
idivl
mov
sbb
cld
dec
js
mov
dec
cmp
rclb
cmp
pop
je
rcll
push
push
xor
dec
jge
shrb
and
mov
cs
stc
test
mov
add
int3
mov
lahf
mov
dec
add
push
das
cwtl
add
mov
add
fldcw
inc
sahf
call
jno
mov
movsb
xor
add
ja
bound
loopne
in
inc
or
cmpsl
cwtl
popf
or
xor
lds
mov
pop
mov
push
aam
bound
insb
lods
ror
call
iret
add
mov
emms
inc
dec
or
jbe
aas
sub
je
pop
push
lods
leave
and
lock
jmp
add
pop
sub
test
movsb
or
push
fcom
popf
xor
push
jae
iret
and
inc
or
xchg
mov
dec
cmp
repnz
sbb
cwtl
pop
cld
mov
push
jae
in
or
cmp
ja
jb
data16
lcall
fistps
xchg
rclb
mov
les
cmpsl
into
or
sbb
jge
shrb
mov
icebp
xchg
jae
repnz
mov
xchg
push
xchg
and
fistpl
aad
bound
sbbl
push
idivl
imul
movsb
mov
or
cmp
insb
fmuls
add
in
ret
adc
push
lahf
dec
mov
icebp
cld
push
pop
and
xchg
jp
lahf
and
mov
jbe
mov
add
outsl
inc
cwtl
mov
loopne
mov
lods
std
or
mov
dec
addr16
mov
cmp
nop
rcl
sarl
lret
pop
pop
fwait
sub
dec
bound
and
jns
stos
push
std
sub
mov
inc
jne
push
dec
inc
mov
push
jae
aam
int
pop
cmc
or
sub
lahf
pop
mov
lea
cmp
test
lahf
sub
int
mov
dec
stos
mov
loope
push
cld
dec
test
bound
jae
repz
scas
xchg
lret
scas
ret
cltd
cmpsl
mov
pop
and
pop
imul
fistps
test
or
push
cltd
xor
das
sub
adcl
ret
mov
mov
sahf
outsb
shlb
xchg
push
sub
pop
add
out
lods
dec
or
mov
mov
add
sbb
test
jbe
jmp
rorl
sbb
imul
outsb
mov
xor
mov
sbb
or
cmp
mov
cmc
mov
jae
lret
mov
mov
xor
mov
stos
inc
test
cwtl
mov
adcl
shrb
cmp
repnz
das
mov
mov
aaa
push
rcl
out
mov
mov
in
stos
in
or
mov
fldt
shll
add
xor
xor
xchg
imul
push
fidivrl
lret
jmp
or
mov
xchg
sub
jae
adc
jno
xor
fs
scas
mov
sbb
sar
inc
dec
or
add
stos
aad
jnp
lods
cmp
clc
daa
roll
into
je
mov
movsb
es
sbb
ljmp
push
xchg
incb
dec
mov
mov
pusha
xchg
jecxz
pandn
push
hlt
pop
cmp
inc
gs
sub
loopne
dec
adc
aaa
sti
ret
xchg
imul
xchg
inc
cmp
hlt
mov
xchg
jp
sbb
loopne
jmp
add
inc
mov
add
ljmp
cmp
test
jge
sub
in
pushf
hlt
loope
jb
rolb
adc
stc
cs
adc
sbb
clc
mov
aad
movsl
out
data16
div
cmp
jae
add
popf
mov
lcall
xor
sarl
fistpl
scas
xorb
push
mov
push
push
sbb
mov
or
adc
sarl
vmovaps
imul
mov
popf
insl
and
dec
push
je
push
sub
or
adc
or
arpl
std
dec
jp
dec
lret
daa
cmp
fidivrs
jae
hlt
mov
adc
or
jnp
insl
enter
pop
jl
xchg
xchg
stos
mov
inc
dec
outsl
mov
mov
leave
jg
int
fwait
sbb
std
call
data16
xchg
mov
cmp
out
cli
add
into
jg
ljmp
lahf
mov
jno
cld
sarl
out
insb
ds
aaa
add
cmp
add
lea
mov
xor
add
scas
lods
xchg
iret
lds
mov
push
dec
mov
test
xorb
xor
xor
adc
jo
and
sbb
inc
es
lahf
pop
clc
loopne
test
mov
enter
cmp
mov
cld
mull
cmp
and
inc
pop
divl
pop
pop
aas
cwtl
jle
in
and
loopne
cmpsl
lahf
sbb
test
insl
jbe
push
and
scas
jmp
ret
mov
dec
mov
mov
lret
sbb
sub
jg
jecxz
scas
xor
movsl
adc
icebp
pop
adc
call
addl
rsqrtps
inc
data16
or
mov
test
sbb
dec
push
insl
sub
leave
jns
pushf
je
xchg
cli
push
xor
fidivrl
shl
js
xor
inc
inc
lds
jg
sub
mov
dec
gs
insl
in
and
ret
mov
adc
daa
roll
pop
ja
mov
pop
adc
cmp
inc
aas
fxch
mov
pop
inc
loop
out
aad
lret
dec
cltd
xchg
imul
adc
xchg
push
adc
out
and
shrb
inc
subb
mov
roll
xor
xor
stc
pop
add
jno
pusha
in
cmp
repz
add
cmp
xchg
out
in
rclb
popa
pop
pop
sbb
aaa
sarl
addr16
add
adc
rcr
mov
adc
leave
xor
inc
mov
ss
inc
insl
sbb
pop
repz
lcall
lcall
pusha
in
lret
and
outsb
nop
sbb
hlt
xor
movsl
cli
inc
les
sbb
test
mov
dec
push
xchg
xlat
insb
aaa
aam
pop
adc
ljmp
bts
mov
and
cmp
adc
pop
cmp
inc
cmpsl
adc
push
ds
data16
or
push
mov
in
lret
jle
movsl
adc
pop
mov
jp
xchg
rcr
fisttps
stos
add
popf
jmp
cmp
test
insb
fadd
or
test
insl
decl
and
dec
sub
dec
shl
and
add
shrb
and
add
mov
sub
push
je
ja
mov
stos
mov
test
ss
xchg
cwtl
lahf
adc
mov
xor
aas
dec
mov
aaa
dec
test
mov
lock
imul
mov
adc
push
in
rcl
sti
fbstp
dec
cld
pop
xor
jne
pop
jae
push
das
loope
dec
insl
jno
stos
pop
out
icebp
jo
int3
jl
je
fnstenv
enter
and
sbb
xchg
pop
dec
inc
push
iret
inc
imul
pop
jge
mov
jno
mov
mov
or
lods
push
pop
lock
sbb
jne
jns
cmp
testb
shrb
and
and
sbb
imul
pop
fisubrs
sbb
js
sarl
add
add
mov
fs
femms
test
fisubs
icebp
inc
movsb
popa
loopne
push
mov
mov
xor
xor
cmc
nop
jge
out
xor
loope
xor
xlat
xor
loope
leave
or
enterw
sub
fldenv
mov
mov
fwait
pop
out
fildll
ss
inc
clc
adc
movsl
push
mov
bound
ficomps
jo
xchg
add
lcall
test
jae
mov
adc
dec
jne
adc
push
mov
rolb
push
dec
push
pop
outsb
fdivrs
mov
insl
imul
sub
mov
jnp
les
pop
push
aaa
cmc
cmp
mov
cwtl
mov
addb
push
movsl
or
add
mov
sub
shrb
fiadds
push
subl
scas
mov
imul
pop
hlt
pop
lds
imul
or
xor
adc
fs
or
out
orl
xor
sbb
je
mov
or
jge
xchg
mov
jmp
fisttps
scas
testl
pop
cltd
add
test
or
je
cmpsb
push
push
xchg
push
mov
push
sbb
mov
mov
push
int3
mov
popa
mov
in
ljmp
and
add
xchg
adc
lcall
jmp
std
shll
and
inc
div
adc
mov
sbb
sbb
in
ss
ja
push
push
jmp
xchg
das
inc
ds
stos
dec
mov
cs
or
jmp
jg
or
lcall
xchg
in
das
inc
inc
jmp
xchg
pop
push
or
mov
push
sbb
les
aaa
pop
imul
inc
out
mov
push
xchg
push
movsl
sub
fildll
mov
mov
lds
xor
xchg
out
daa
divl
mov
pop
pop
mov
push
pop
fwait
leave
and
das
or
jns
mov
push
xchg
in
faddl
inc
sub
popf
adc
mov
fadd
hlt
clc
aas
mov
jge
stos
mov
iret
out
addr16
cs
pop
push
enter
mov
push
ss
idivb
jmp
icebp
xchg
and
add
pop
mov
and
aas
sbb
test
mov
sbb
cmp
inc
arpl
bound
fdivrs
arpl
jne
mov
dec
xchg
pop
xchg
jbe
jle
fisttpll
mov
out
or
aaa
xchg
cmp
push
pusha
pop
lret
or
cmc
mov
loopne
andb
out
and
movsl
sub
mov
pop
lret
or
adc
mov
fidivrs
icebp
lcall
sbb
jg
jae
filds
mov
mov
mov
clc
inc
sahf
pop
lods
or
mov
test
int
clc
push
enter
faddl
leave
mov
cmp
test
or
loop
mov
pop
jp
mov
mov
jecxz
xor
adc
dec
outsl
ja
stc
sub
jge
or
sti
mov
rcll
repnz
cmp
lock
out
les
inc
sahf
fstpl
mov
lret
std
jg
inc
pop
mov
push
scas
xchg
push
and
ljmp
xor
mov
inc
ljmp
ja
fistps
ss
mov
jle
push
repnz
outsb
aaa
and
sarl
movzbl
cmp
cmpsb
sub
in
push
dec
fstl
push
popf
pop
sub
and
mov
sub
mov
mov
loopne
mov
jge
mov
fmull
cld
jns
inc
movsl
fwait
rolb
loopne
inc
xor
ss
adc
nop
aaa
mov
dec
ret
adc
sub
mov
pop
xchg
or
add
repnz
out
cld
mov
dec
pop
ja
mov
mov
loop
inc
and
xchg
loop
push
mov
adc
inc
popa
sbb
inc
dec
imul
lods
mov
in
adc
cld
sbb
std
dec
mov
aaa
inc
es
or
fistpl
mulb
push
inc
mov
xchg
mov
push
xor
in
xor
lods
es
sbb
outsl
adc
pop
popf
enter
xchg
in
mov
test
rcrl
mov
dec
sub
xor
inc
lods
lcall
imul
stc
cmp
std
ja
and
pusha
sahf
shll
stc
mov
fldcw
mov
adc
ss
cwtl
mov
fsubrp
adc
fwait
rcrl
cli
pop
add
sti
mov
and
cmp
movsl
xchg
push
insb
xchg
jae
fcompl
mov
and
lods
push
idivb
cmc
pop
jo
add
movsb
pop
jge
in
cmp
clc
repz
xchg
icebp
ret
pop
repz
sub
popa
adcl
dec
jo
imul
nop
push
imul
enter
lods
test
ljmp
sbb
lret
es
dec
mov
lret
lcall
mull
hlt
or
cmp
add
mov
aad
adc
shlb
dec
lds
mov
jp
ror
jbe
and
movzwl
inc
mov
inc
rclb
mov
ret
dec
mov
xchg
and
inc
fistpl
cmp
jbe
imul
xorb
mov
xorb
je
push
push
inc
and
icebp
lea
fcmovbe
xor
fldenv
lock
push
jmp
jno
xor
jmp
aas
fcoms
pop
loop
scas
mov
es
mov
je
lods
xchg
xchg
aaa
xchg
std
sub
out
scas
push
addr16
mov
out
mov
aam
mov
push
cs
push
stos
mov
les
ja
sti
hlt
inc
scas
test
jo
pop
xchg
mov
repnz
leave
rolb
std
push
in
mov
cs
inc
repnz
lret
std
xor
xor
adc
sub
adc
das
pop
xor
test
enter
or
clc
pop
repnz
das
mov
pavgw
fcoml
ficoml
adcb
lahf
jl
adc
dec
push
ljmp
and
mov
je
cmp
adc
dec
pop
sub
xor
xchg
popf
hlt
out
mov
push
push
sbbb
dec
sbb
mov
xor
add
aas
pop
mov
jns
mov
xchg
scas
lahf
daa
push
negb
cmp
loope
xor
or
scas
rcr
jb
xchg
jge
int3
pop
test
adc
ds
cs
fs
pop
inc
leave
fs
mov
push
test
cmp
es
fidivl
cmp
push
jnp,pt
mov
sub
outsl
sub
inc
in
lcall
sbb
mov
pop
clc
add
add
in
xor
mov
lods
push
cmp
push
xlat
ja
adc
cmpsb
aaa
daa
add
icebp
fcomip
insb
or
and
or
push
mov
add
pusha
test
pop
jmp
fcmovnu
in
outsl
pop
int
push
sub
in
push
test
loop
out
mov
and
mov
push
lea
push
or
rolb
sbb
add
sbb
xchg
repz
xor
repnz
out
inc
or
pushl
sbb
pop
in
fists
mov
push
add
stos
pop
scas
jb
cld
lcall
lret
cli
mov
adc
je
cmp
insl
fists
out
gs
repnz
xor
mov
or
sub
pop
push
sub
popf
mov
in
dec
mov
sub
stos
adc
negl
into
add
mov
pop
imul
test
xlat
add
xor
mov
roll
out
ss
repz
mov
push
into
inc
out
sbb
sbb
sbbl
sub
mov
pushf
loop
ret
sub
xor
xor
outsl
cltd
mov
sbbb
jne
out
jb
mov
outsb
cli
add
add
adc
rcrb
scas
xchg
pusha
adc
mov
fiadds
shrb
movsl
das
and
add
adc
mov
inc
sub
daa
pcmpeqw
jae
ljmp
sub
fmul
ds
aam
mov
repz
inc
mov
movsb
adc
pop
mov
add
or
mov
or
sahf
inc
push
cmp
push
inc
add
add
repnz
fwait
mov
push
mov
shrb
lret
insb
mov
repnz
pop
out
test
sub
divb
shlb
arpl
dec
mov
add
mov
and
pop
jno
add
push
mov
hlt
iret
lcall
mov
gs
ss
insl
pop
adc
jg
lds
pop
mov
lret
push
outsb
fcomi
bound
movsb
ja
dec
mov
sahf
xor
in
adc
popa
sahf
out
cltd
or
int
lock
lds
sbb
stos
mov
sbb
mov
sbb
sub
cmp
add
pop
rol
cld
adcb
mov
xchg
cmp
orl
popa
and
xor
js
jo
in
iret
leave
fnstcw
add
movsb
xchg
les
jge
clc
inc
xchg
mov
movsb
jnp
adc
test
idiv
xlat
cmpsl
scas
mov
push
popf
sub
inc
popf
mov
lret
out
movhps
lds
stc
sbb
mov
stos
add
and
cmp
add
repz
pop
add
sbb
divl
add
out
pop
xchg
fiadds
das
das
push
cmp
cmpsb
pop
repnz
pushf
mov
inc
and
dec
ret
ljmp
cbtw
lods
cli
mov
mov
dec
sbb
enter
adc
push
test
mov
cmc
and
xchg
ds
mov
push
jns
push
xchg
jb
lock
mov
mov
cmp
addl
shrl
dec
jmp
cmp
cmp
loop
add
lret
imul
jnp
pop
or
pop
jmp
call
js
movsb
fwait
jge
ja
daa
xchg
mov
dec
insb
out
flds
mov
addr16
stos
es
add
gs
mov
sbb
xor
mov
les
xchg
shll
sbb
push
jle
sbbl
jnp
imul
jmp
inc
mov
call
push
aam
test
add
mov
xchg
div
xchg
in
inc
les
adc
pop
xchg
pop
inc
jae
pop
add
and
cmp
cmp
adc
xchg
leave
xor
lret
dec
sbb
inc
gs
js
aas
in
aam
and
insb
cmp
popa
gs
repnz
push
test
jecxz
cmp
cld
or
imull
hlt
sar
mov
ficoms
mov
xlat
loopne
jo
pop
or
push
call
gs
or
ljmp
inc
lea
push
enter
sub
pop
jp
notb
mov
dec
int3
aaa
popf
pusha
and
push
in
inc
repz
mov
aad
bound
out
scas
rorb
jb
pop
cwtl
xor
mov
sbb
pop
xor
ret
adc
je
pop
add
scas
jbe
jcxz
getsec
or
shl
mov
pop
out
inc
jmp
ret
jg
inc
lods
push
out
ret
mov
push
dec
jbe
ds
out
mov
hlt
lods
adc
inc
or
inc
iret
inc
cmc
or
js
repnz
leave
xchg
aaa
push
pushf
sbb
adc
pop
fiadds
sbbl
pushf
aam
scas
pop
or
mov
popa
flds
push
sti
addl
iret
cld
test
add
test
jmp
nop
lahf
jbe
dec
xchg
dec
fistl
enter
stos
cmc
cmp
aam
popa
dec
in
ja
dec
sbb
pop
xor
mov
popf
aaa
push
lcall
not
aas
clc
or
gs
mov
into
fs
daa
sub
sub
sub
clc
cmp
cs
xchg
movsl
arpl
orb
stos
mov
dec
or
mov
divps
dec
fiaddl
mulb
sbb
push
or
xlat
nop
mov
int3
push
cltd
and
mov
cmp
dec
jecxz
stos
add
push
adc
add
fmull
jp
cmc
cmp
stc
push
das
add
jl
sti
push
mov
lods
rcrl
mov
fwait
dec
inc
dec
dec
dec
jbe
mov
ds
loop
mov
pop
dec
push
pop
lret
mov
jg
xor
jl
imul
and
cmpl
out
cmpsb
sbb
mov
repnz
mov
loop
scas
cwtl
iret
sbb
or
inc
pop
jle
outsl
add
nop
sub
and
lcall
pop
mov
jbe
fs
dec
rcr
cmp
fwait
or
inc
xor
aam
sub
sbb
add
jo
pusha
xchg
push
cmpsl
inc
mov
inc
mov
ja
pop
loopne
shlb
shlb
and
adc
add
jo
pusha
xchg
push
cmpsl
inc
mov
inc
mov
ja
pop
loopne
shlb
shlb
and
addr16
jo
pusha
pop
push
cmpsl
inc
mov
mov
ja
pop
loope
shlb
ret
and
adc
add
jb
pusha
xchg
shlb
pop
std
cmp
add
fdivrs
enter
mov
mov
sbb
sub
or
pop
call
imul
mov
push
popf
mov
cmp
dec
fdivrs
imul
mov
push
repz
inc
cmpsb
pop
nop
push
mov
jno
sub
imul
into
cmp
push
push
jp
jb
push
cmp
clc
ret
mov
mov
xchg
add
mov
stc
push
test
mov
notl
cmp
pop
mov
mulb
push
jns
and
sbb
or
loop
pop
cld
popa
lock
sub
inc
mov
js
js
cmpsb
lea
insb
mov
scas
movsb
push
gs
xchg
jns
sbb
jbe
inc
xor
ret
sbb
pop
icebp
dec
subl
pop
ljmp
data16
pop
inc
call
insb
cmpsl
clc
ret
mov
pusha
int
les
test
data16
cltd
sbb
push
lock
and
push
fsubs
push
jge
insl
int3
adc
and
stc
jbe
or
cmp
orl
lock
loopne
lret
flds
pop
lea
insb
fstps
popf
sub
push
cltd
dec
mov
or
js
push
jmp
cwtl
cmp
dec
fdivrs
imul
mov
push
jmp
cwtl
cmp
dec
fdivrs
imul
ds
mov
aaa
push
not
sbb
or
fidivrl
test
mov
xor
test
xorb
jge
or
std
shl
mov
sub
and
mov
jecxz
lods
outsb
out
lcall
sub
popf
mov
xorl
jno
sub
popa
and
sub
aam
and
sub
movsb
xor
fstpl
jno
pop
jl
pop
add
inc
ja
ror
cmpl
faddl
es
pushf
pop
sub
rcrl
imul
je
cli
mov
jnp
jl
pusha
aad
or
jmp
xor
mov
das
dec
pushf
aad
das
sarl
outsl
jae
cltd
dec
fcomps
in
cld
jle
pushl
inc
cs
jl
ficoms
jg
cmc
or
cwtl
push
fstpt
mov
jno
or
inc
mov
sub
mov
fs
js
loope
std
imul
into
pop
repnz
movsb
cmpsb
fwait
divb
lret
mov
and
xlat
fcoml
scas
sar
jnp
int
xor
dec
cld
hlt
rclb
cwtl
in
sub
sbb
je
jp
pushf
push
aas
sbb
lret
push
mov
xor
mov
or
fsts
fists
mov
xor
sbb
mov
xor
loopne
adc
mov
insb
or
pushl
mov
xor
enter
add
inc
push
inc
aam
in
xor
popa
fmuls
xchg
adc
mov
aam
int
mov
iret
sbb
xchg
sarl
inc
cmp
ja
sti
fs
push
jecxz
lods
cmp
ss
movsl
or
push
or
insl
testb
in
adcl
repnz
inc
mov
shl
sahf
pop
into
sbb
leave
outsb
jbe
rcrb
test
in
mov
clc
mov
icebp
fstl
addb
jne
sub
inc
mov
push
cmpsb
scas
clc
mull
adc
lds
outsl
hlt
cmp
sub
or
int
lock
lea
or
adc
addr16
cmp
mov
rol
mov
push
in
fcomps
and
add
push
jae
jo
fucomi
out
icebp
leave
pop
mov
fildll
insb
sahf
testb
in
push
movsb
cld
int3
fildll
sub
xchg
gs
leave
scas
add
mov
test
pushf
nopl
ficoml
mov
cmpsl
xorl
cmp
jge
or
mov
popa
movntq
adc
outsl
mov
adc
mov
mov
js
gs
in
pop
sub
lahf
test
in
and
jno
mov
gs
stos
mov
and
pop
aas
dec
stc
cmp
add
sub
push
sarl
stos
adc
xor
xchg
sahf
sbb
test
push
int
push
mov
ret
sbb
stos
jno
sbb
stc
dec
out
flds
std
cmc
data16
divb
and
or
push
in
leave
nop
enter
arpl
sbbl
sub
push
or
jb
xchg
or
fadd
fs
jno
stos
add
mov
ret
out
movsb
movsl
fmuls
or
or
cmpsb
jbe
xchg
lods
cmp
test
mov
jge
mov
scas
bnd
insl
mov
jae
push
test
sub
stc
push
cs
xchg
loopne
xchg
int3
int
cli
sahf
inc
mov
imulb
jns
push
pop
pop
xchg
into
in
mov
mov
push
fldt
pusha
imul
xor
dec
push
pusha
int
mov
pop
push
cmp
decl
test
pop
stc
inc
push
rorl
cmpsb
sbb
out
test
mov
sbb
push
mov
rclb
inc
dec
ds
mov
call
rolb
repnz
std
xorl
jne
add
shll
pop
mov
insb
in
fs
rcl
pop
pop
jle
sub
test
mov
jg
aaa
jp
in
and
mov
rcll
cltd
xchg
sbb
addr16
jmp
add
out
push
scas
ret
xchg
aam
or
jmp
ljmp
sbb
inc
inc
nop
dec
lret
jns
push
movsb
push
into
push
into
push
pop
push
orl
pop
inc
xor
adc
add
cmp
fucom
cmp
and
fstpt
xor
ss
jb
mov
mov
lock
movsb
xor
mov
lret
sti
cmp
test
lods
mov
shrb
sti
push
cltd
sbb
inc
inc
push
xchg
and
daa
mov
sbb
mov
push
fwait
sbb
pop
and
adcl
sahf
adc
into
xor
mov
stos
sarb
xor
dec
loopne
xor
push
pop
jne
or
lcall
loope
and
repz
mov
adc
add
pop
insl
adc
push
xorl
xchg
in
mov
dec
sbb
ret
inc
push
cmp
pop
push
ja
fildl
lahf
or
inc
sti
mov
adc
inc
subl
in
fldl
pop
or
sub
fbld
je
push
inc
insl
loopne
sbb
fcom
add
cwtl
lcall
leave
pop
ret
mov
iret
push
mov
mov
int
jbe
insl
pop
adc
fsub
outsb
pop
into
push
test
xchg
test
ja
sub
imul
xor
add
pop
xor
fiadds
inc
sub
cmp
sbbb
fidivl
inc
lret
mov
and
out
loopne
out
cmp
bound
mov
leave
xchg
addr16
dec
mov
or
and
imul
call
pop
leave
pushf
jle
aam
jmp
dec
aam
dec
mov
jp
add
imul
jmp
mov
fwait
dec
push
pop
and
xchg
jl
cmp
sahf
ja
repz
mov
lods
cltd
aam
or
pop
shl
add
inc
imul
incb
mov
cmp
and
sbbb
jae
fs
cmpsb
pop
fimuls
fnstcw
xor
push
sub
mov
cli
mov
pushf
inc
leave
subl
jg
arpl
adc
call
imul
loope
and
into
ja
mov
add
and
jg
orl
inc
jb
mov
or
dec
adc
fcomps
mov
sti
pop
nop
fs
inc
cmp
adc
add
sub
sbb
add
pusha
jb
mov
mov
add
js
jg
jo
in
sarl
test
jle
cltd
mov
sbb
mov
je
je
decl
jae
pop
rcll
adc
movsl
xchg
add
test
rorl
rcl
cltd
jne
stc
fwait
out
lcall
sub
mov
or
mov
aam
into
jle
movsb
fs
mov
jmp
scas
push
add
repnz
sub
sub
inc
xchg
nop
or
push
int3
dec
in
insl
lods
lret
dec
sbb
scas
add
negb
jmp
and
jmp
adc
xor
cmp
into
lcall
dec
scas
fstp
jecxz
mov
or
adc
jmp
je
aam
mov
lret
int
and
into
cmpsb
scas
rorb
test
mov
dec
xchg
imul
jno
aad
push
in
jle
cmp
iret
je
int
lret
pop
cmp
mov
stos
dec
mov
testb
je
mov
push
divb
ss
pop
ja
mov
mov
cmp
push
jecxz
sti
mov
lock
leave
pop
cmpsl
popa
movsb
pop
pop
push
test
adc
fucomp
sub
mov
pop
mov
sub
std
xor
out
pop
jg
das
ds
jae
enter
inc
mov
pop
out
sub
outsb
xchg
or
fdisi(8087
fsubrs
arpl
lock
ffree
rol
mov
push
les
adc
xchg
icebp
cmp
xacquire
mov
fsubrl
iret
lcall
sbb
imul
jmp
cmp
into
pop
jo
jno
ret
mov
gs
roll
mov
lods
cmp
mov
xchg
mov
les
cs
sub
mov
or
dec
inc
mov
pop
sbb
lea
xor
jae
xor
sub
lret
arpl
cmp
mov
and
push
test
jns
mov
sub
add
sub
mov
lahf
lods
data16
add
adc
sbb
out
movsb
push
mov
int
add
addr16
add
pop
adc
cwtl
lock
mov
out
pop
aam
setne
add
js
pop
mov
xor
aam
or
ja
cmp
push
mov
je
jl
mov
adc
lret
pushf
jne
add
mov
jb
add
inc
rolb
outsl
pop
cmp
cwtl
inc
in
xlat
add
xor
dec
insl
cwtl
adc
stos
imul
push
fists
sub
mov
sbb
dec
push
push
sti
rclb
loopne
lret
adc
insl
cmp
lea
lods
insl
sub
jmp
pop
lret
dec
call
pop
loop
fmull
inc
out
sub
push
and
push
pop
cld
sahf
mov
pusha
add
pop
push
sub
sbb
jnp
lds
jo
add
cmp
pop
adc
cltd
test
movsb
in
xchg
adc
mov
repz
jb
lahf
jb
dec
rclb
pop
dec
xchg
jns
popf
or
clc
mov
iret
sbb
pop
mov
insl
lock
or
loope
add
dec
mov
xchg
fdivl
inc
sub
popf
jno
and
ror
outsl
test
into
dec
out
xchg
aad
xchg
add
fiadds
push
push
inc
dec
jbe
add
adc
sbb
xor
jae
and
outsl
cli
shrl
fwait
sbb
xchg
push
and
mov
scas
jl
or
fwait
stc
outsl
decb
adc
iret
ljmp
iret
jne
outsl
mov
roll
pop
mov
out
sub
pop
mov
gs
jmp
xchg
imull
in
aad
sub
hlt
xchg
adc
mov
add
sahf
test
out
cli
jo
dec
dec
pusha
inc
fldenv
movd
cmp
fbld
aas
mov
repz
adc
pop
or
shll
popf
mov
xor
addl
in
mov
addl
faddl
push
xchg
sub
rcr
dec
movsb
js
or
mov
jbe
int
or
pop
push
dec
cmpl
pop
mov
pop
pop
bound
int3
lock
icebp
sahf
mov
lock
mov
xor
aaa
push
test
mov
xchg
std
cmpb
imul
or
sub
js
fwait
xor
rolb
nop
jno
pushf
jns
jecxz
push
add
mov
imul
push
stos
cld
sub
mov
jmp
jnp
add
mov
dec
xor
push
mov
jl
xchg
cmpsb
push
and
mov
or
push
movsb
ret
xchg
sbb
fildll
inc
mov
push
push
movsb
or
std
mov
test
gs
push
leave
fldt
outsl
mov
add
dec
mov
jns
inc
dec
pop
inc
ds
loopne
in
push
jno
popa
in
sub
adc
jbe
outsb
add
pop
out
shll
aam
pop
xor
add
cmc
xor
adc
lods
std
loopne
adc
xchg
cmc
add
sbb
scas
jl
in
test
adc
push
lahf
push
ljmp
and
mov
roll
gs
cmpsb
cmp
jecxz
loop
xchg
orb
ret
movsb
lea
shll
cmpsl
inc
jp
fstpt
sbb
xchg
ja
cmp
shlb
movsl
cmp
xor
dec
jmpw
xor
cld
les
cmpsb
ret
hlt
pop
hlt
lock
fistpl
xor
shll
imul
inc
movsb
xchg
push
aas
mov
xchg
int
idivl
aas
add
gs
xor
mov
pop
enter
sbb
cwtl
insl
pop
pop
jno
and
pop
sub
les
jge
pusha
push
pop
jmp
push
out
aas
int
xchg
fsts
lds
test
ret
cmc
js
jns
mov
jno
into
mov
movl
in
stc
mov
fcoms
or
lea
stc
cmp
add
lcall
idivb
jb
aam
jo
test
hlt
outsl
sub
xchg
cmp
insb
cmp
sub
adc
add
and
outsb
push
loopne
sbb
in
push
push
push
out
leave
push
insb
xor
xchg
pop
out
ja
pop
jne
jecxz
xchg
push
and
mov
out
xor
int
iret
stos
imul
and
pushf
or
pop
mov
add
js
push
add
fs
sbb
sub
lret
loopne
jge
xchg
jb
scas
xor
dec
ja
jle
mov
xchg
add
repnz
mov
jmp
outsb
bound
dec
test
daa
jns
mov
xchg
ljmp
push
xchg
out
pop
mov
cmp
insb
dec
verr
je
aas
mov
loopne
ja
imul
pop
fstps
jo
shlb
push
insl
dec
mov
aad
pop
loope
push
popa
lock
xchg
pushf
negb
mov
xlat
add
dec
scas
imul
je
mov
mov
in
adc
xchg
out
xlat
jp
xor
mov
dec
fdivrl
scas
adc
shl
push
cmpsb
mov
pusha
dec
inc
leave
not
nop
and
dec
mov
add
call
pushf
enter
aam
cmp
mov
subl
and
shl
xor
mov
lret
int
cs
mov
stos
jmp
sub
xchg
pop
mov
cld
mov
les
shll
push
lahf
imul
or
fsubrp
aaa
fiaddl
add
sbb
adc
lahf
inc
into
sbb
int
pop
lea
push
mov
adc
lahf
xchg
and
inc
xlat
adc
add
add
leave
or
rol
adc
xor
packssdw
jnp
shlb
outsl
cmc
xor
adc
out
loope
sub
dec
jl
lock
mov
adc
add
xor
sub
mov
push
jl
mov
mov
cmpl
mov
gs
scas
jns
icebp
mov
dec
mov
in
aas
dec
mov
loop
cwtl
out
add
lret
outsb
push
and
sti
mov
xchg
push
lea
pushf
imul
mov
inc
outsb
mov
jb
or
dec
fmull
jle
jno
repnz
cmp
sub
push
adc
loopne
jno
add
push
sahf
movsl
mov
mov
lds
fisubrs
pop
in
pop
pop
mov
mov
stos
mov
aaa
adc
gs
mov
or
lods
or
das
or
shl
bound
mul
jp
pop
int
and
xor
xchg
and
repz
lods
sbb
jp
cs
and
dec
pop
loop
push
jecxz
inc
loop
aad
aad
les
out
sbb
adc
icebp
test
iret
xchg
lds
jo
stos
pop
hlt
xchg
push
out
es
cmpsl
gs
or
pop
jns
adc
cld
jp
jge
lods
xor
ret
add
shlb
lods
and
dec
push
aas
lods
dec
fst
or
mov
xchg
lcall
push
xor
aaa
in
mov
mov
js
lods
hlt
cmp
mov
dec
dec
pop
or
xchg
jb
add
fmuls
sahf
jo
xchg
add
cwtl
icebp
pop
jmp
mov
fwait
out
lret
xorl
dec
adc
cmp
enter
mov
clc
sbb
sti
or
movsl
idivl
pop
and
inc
fidivrl
inc
lock
xchg
scas
testl
iret
in
cmp
lods
add
mov
cltd
int
aam
into
sti
sbbl
adcb
cmp
sub
scas
mov
popa
fwait
add
mov
pop
ret
mov
icebp
cmp
rcl
daa
xor
test
pop
sarb
jmp
xchg
mov
aas
xchg
lds
adc
mov
mov
mov
push
test
mov
adc
sub
push
jle
lods
mov
pop
lret
dec
fs
pop
mov
ljmp
adc
jb
out
jns
or
add
inc
pop
push
xor
sarl
push
shrl
test
out
into
or
mov
jne
mov
mov
cli
iret
sbbl
or
js
xchg
sub
sub
cmp
mov
jmp
pop
dec
fs
cli
or
sub
pusha
movb
push
push
pop
out
or
cmp
stos
cld
pop
out
jl
mov
push
and
test
xor
jbe
or
xchg
push
test
dec
loop
inc
scas
inc
fisubrs
pop
call
cltd
push
pop
imul
cmp
and
test
xor
inc
addr16
lret
adc
fisubrl
repnz
cltd
jae
mov
sbb
in
out
add
out
dec
pop
push
fs
loopne
lret
and
out
mov
ret
add
aaa
pop
dec
cmp
jno
dec
loopne
pop
mov
test
insb
loop
popf
jne
jnp
push
mov
push
add
mov
push
sub
sub
mov
outsl
mov
js
lcall
sti
mov
mov
enter
push
mov
lahf
xor
sub
mov
jmp
in
push
pop
rclb
xor
cwtl
jb
xor
imul
mov
leave
cltd
pushf
aas
fists
out
inc
in
fidivrs
cmp
mov
lods
out
loope
sbb
sub
es
jmp
mull
lcall
sbb
cwtl
inc
ret
xchg
jg
xchg
xor
int3
dec
sbb
test
mov
sti
fldcw
cmpsb
jno
mov
inc
push
lods
mov
outsb
pop
or
dec
xor
add
dec
mov
movsb
lcall
xor
jmp
movsl
xchg
jmp
jmp
std
lock
loopne
jle
pusha
pop
and
pushf
addl
push
jle
inc
pusha
loope
inc
push
jp
cmpsl
cmp
jbe
mov
insb
rorl
xchg
out
push
jns
xchg
jg
fwait
mov
dec
mov
and
popa
xchg
in
ficoms
cs
es
imul
nop
xor
and
push
lret
testl
sbb
dec
fcmovnbe
movsb
es
xchg
pop
mov
cmp
mov
dec
mov
fadds
stos
mov
mov
cmp
fisttpll
dec
or
imul
arpl
xor
sti
pop
mov
or
mov
fnsave
or
lcall
sbb
jb
cmpsb
pop
into
add
sub
xor
mov
mov
or
sub
mov
pop
push
fsubrl
arpl
push
mov
loop
push
fs
mov
mov
push
stos
dec
iret
ret
mov
inc
enter
push
sahf
nop
pop
jae
jb
popa
xor
push
push
adc
andl
incl
jno
pop
xchg
sbb
int3
push
dec
mov
sahf
nop
pop
mov
xchg
cli
jae
dec
call
not
mov
int3
cli
and
push
xor
pshufw
mov
mov
dec
rorb
outsb
movsb
stc
add
push
fidivs
jb
xchg
fbld
dec
jnp
pop
sti
ja
xlat
pop
mov
clc
gs
imul
mov
xchg
adc
jbe
xor
mov
and
jne
out
jo
cmpsl
popa
aam
and
lock
imul
negl
mov
fwait
mov
lods
arpl
add
mov
mov
dec
out
or
leave
movsl
sub
ret
mov
data16
les
sbb
push
imul
js
push
jmp
cwtl
cmp
dec
fdivrs
imul
mov
push
jmp
cwtl
cmp
dec
fdivrs
imul
mov
push
jmp
cwtl
cmp
dec
fdivrs
insl
cmp
or
pop
stc
dec
sub
cmp
ss
push
aaa
push
dec
sub
xor
and
pop
xor
push
repnz
cmpsb
aad
addb
andb
addb
loopne
pop
add
add
and
push
xchg
inc
or
pusha
rcrb
jbe
data16
push
lock
or
sub
in
stos
pop
mov
nop
mov
adc
addl
pusha
add
pop
mov
cltd
jle
push
js
jns
dec
movsb
ljmp
adc
xlat
xor
jp
imulb
push
dec
push
lods
jbe
pop
xchg
lds
insl
stos
popf
xlat
add
jns
loop
push
lds
bound
js
xchg
fstpt
loopne
pop
jmp
test
pop
mulb
rclb
shl
stos
pop
jne
push
out
cwtl
dec
pusha
pop
movsb
test
cld
lcall
or
ret
ljmp
imul
jo
cwtl
add
mov
pop
jge
sbb
lock
add
out
fsubr
ror
add
outsl
push
jg
dec
mov
stc
adc
loopne
rcl
add
xor
in
inc
xchg
pop
xchg
jns
mov
cwtl
subb
fdivr
lock
dec
arpl
enter
jmp
in
addb
add
bsf
jb
ja
inc
adc
and
and
cs
fsubs
adc
adc
add
push
loopne
jns
xor
sub
inc
xchg
pusha
cmpsb
nop
push
addb
mov
push
lock
adc
add
xor
and
push
xchg
inc
xchg
pusha
cmpsb
nop
push
addb
mov
push
lock
adc
ret
adc
dec
lret
insb
movsl
iret
call
repz
adc
push
std
mov
das
ror
mov
insl
add
stos
rclb
jnp
or
mov
push
pop
lds
ljmp
push
repnz
dec
push
in
ret
sbb
cld
and
mov
add
xor
in
fs
add
xor
int3
cmpsl
pop
push
int
ljmp
mov
push
sbbb
test
das
cs
jg
sub
shrb
ss
xor
leave
xor
sub
jle
cmp
call
int
fdivrs
out
fwait
in
aaa
addr16
mov
int3
mov
push
jg
out
push
je
xor
add
mov
cmc
sub
push
in
mov
test
shll
mov
ja
pop
cmp
mov
pusha
cmpsb
icebp
test
out
cli
xchg
xor
dec
repnz
cld
stos
push
push
lahf
push
inc
sub
fstl
pop
test
mov
inc
clc
cli
subb
aad
lret
enter
cmpsb
push
lock
push
cltd
loop
sbb
inc
ret
das
cmc
mov
roll
mov
cld
fldt
rorl
mov
sub
cld
mov
pop
and
or
jbe
inc
sbb
mov
leave
pop
cmp
ja
in
push
inc
mov
mov
mov
je
sub
adc
sub
or
out
aaa
movsl
lea
les
shl
or
test
movsb
lret
pusha
xchg
dec
push
jo
add
sbb
or
xchg
mov
das
mov
add
or
pop
imull
dec
int
xchg
adc
push
push
jp
cwtl
adc
hlt
inc
add
test
mov
rclb
mov
mov
jecxz
lahf
outsl
xchg
mov
pop
flds
std
test
push
and
scas
add
jno
and
dec
out
pop
cld
inc
int3
jo
andb
mov
in
xor
daa
push
xor
fwait
inc
movsl
push
mov
adc
jne
stc
fstl
mov
sub
jp
xchg
gs
mov
mov
mov
frstor
out
data16
fdivr
sbb
scas
xlat
mov
test
dec
insl
adc
loope
inc
or
fidivl
push
call
test
cmpsb
cmp
test
xchg
sti
mov
loop
mov
dec
das
mov
ficompl
dec
pop
mov
or
xor
lret
pop
mov
mov
pop
scas
andb
shll
mov
add
daa
adc
inc
test
mov
cmc
iret
jp
sub
fdivs
or
push
cmp
insb
stc
iret
roll
out
out
hlt
push
stos
fwait
popa
stc
pusha
aas
test
cs
in
clc
jno
packsswb
mov
adc
dec
ret
mov
cmp
les
xchg
and
std
divl
test
jns
scas
pop
xor
mov
xor
or
je
mov
jmp
add
xchg
jnp
scas
push
sub
push
sbb
mov
inc
cmp
loope
bound
scas
leave
pop
data16
jp
mov
mov
mov
mov
arpl
sub
imul
and
sbb
mov
fwait
push
test
mov
insl
xchg
stos
mov
push
leave
pop
and
lcall
xchg
pop
mov
xchg
sub
aas
les
mov
movsl
mov
test
push
cmpsb
add
je
aam
dec
xchg
add
pushf
adc
and
sub
hlt
stos
pop
or
sbb
push
scas
sub
ljmp
lock
lahf
sub
lds
xor
fsubr
inc
loop
arpl
rolb
jl
xchg
pop
mov
push
or
cwtl
inc
enter
cltd
mov
xor
sub
scas
aad
mov
jmp
pushf
cmp
int
inc
and
int
mov
out
push
push
aad
jle
movsb
or
jg
inc
call
stc
adc
fisubl
push
xor
lcall
in
jno
loop
aaa
dec
in
mov
cld
mov
sub
aas
out
das
mov
lock
jecxz
iret
mov
xchg
das
leave
sbb
out
adc
bound
xor
mov
adc
dec
add
push
or
je
add
sub
mov
mov
mov
repnz
shrb
jle
push
pusha
in
imul
xchg
pop
and
hlt
inc
or
mov
pop
jmp
shrb
int
imul
loope
aas
stos
arpl
fs
jl
ret
add
lods
mov
outsl
add
cmp
adcb
dec
aas
daa
xchg
std
sarl
mov
mov
adc
add
loop
push
pop
xor
add
rclb
sti
push
cmp
xchg
addr16
ss
fimull
sub
loop
jno
ja
adc
pop
xchg
pop
sub
addb
xorl
test
xlat
dec
scas
lock
mov
sub
adc
int
xor
add
pop
lock
orb
fbld
imul
pop
or
jle
push
mov
ljmp
and
inc
lahf
xor
adc
cmp
dec
xchg
icebp
mov
imull
test
das
inc
es
in
ror
std
jmp
fsubp
mov
cmp
inc
test
push
dec
mov
repnz
lods
jle
stos
rol
out
cwtl
mov
dec
add
mov
push
xchg
xchg
arpl
lods
jns
loop
jo
enter
adc
mov
dec
mov
cmp
xchg
lds
arpl
scas
addr16
stc
pop
or
arpl
xchg
pop
xchg
jb
mov
and
ja
int3
dec
or
xchg
mov
push
fldcw
ret
xchg
pusha
mov
loope
sbb
adc
push
data16
je
cmp
gs
xchg
lock
cli
jae
mov
mov
loop
je
les
mov
incl
jno
aad
fcomi
and
lock
test
push
mov
pop
xchg
movsl
sbb
xchg
repz
loop
adc
sub
outsb
push
cmp
insb
cmpsl
and
sti
outsl
xchg
mov
unpcklps
dec
mov
sbb
popa
pop
fmuls
lahf
pop
jle
sbb
shlb
xchg
mov
jecxz
subl
fwait
in
dec
xlat
ja
or
dec
jbe
jo
cmpsb
mov
jg
jmp
or
dec
mov
fs
push
mov
pusha
add
rcrl
mov
pop
xor
fcoml
lret
aas
dec
sub
jecxz
pop
xor
imul
jb
sbb
faddp
push
and
in
adc
fldt
and
and
cs
fwait
data16
adc
xor
mov
cmp
leave
xchg
pop
and
pop
and
xor
and
stc
jmp
adc
jg
mov
or
testb
pusha
dec
jae
fwait
rolb
pop
sbb
xlat
stc
jecxz
fdiv
mov
jl
in
ljmp
push
mov
inc
negb
mov
iret
fistl
xchg
cld
xchg
es
xchg
aam
mov
jne
xchg
cmc
mov
mov
bound
xchg
xchg
insb
inc
adc
pop
std
cltd
jmp
es
insl
cmc
mov
insl
mov
loop
add
dec
pop
inc
xchg
loopne
sarl
cmp
out
mov
mov
stc
aam
push
push
fisubs
cltd
aad
addb
imul
or
out
sub
insl
jnp
repz
dec
add
ljmp
loope
rorb
push
outsl
nop
gs
repnz
and
idivb
add
or
or
shrw
lods
js
pushl
jg
pop
jae
push
and
pop
stos
stos
adc
std
xchg
xchg
add
push
or
mov
push
shl
xor
mov
dec
xchg
pop
mov
jmp
stos
and
inc
mov
andl
add
jle
stc
pop
mov
out
out
xchg
push
jbe
aad
ds
repnz
pop
aas
decl
push
leave
push
pop
rorb
cwtl
mov
pop
sahf
mov
out
adc
cs
cltd
adc
xorl
lahf
lds
in
dec
popa
shll
mov
push
push
test
je
das
adc
adc
aad
pop
sbb
mov
jecxz
mov
dec
insb
popf
push
fmull
push
in
pop
cmp
movsl
mov
adcb
adc
xchg
in
mov
xor
push
repnz
ret
inc
adc
adcl
rolb
int3
xor
leave
xchg
test
push
cmp
loop
lock
fbld
lds
iret
repnz
pusha
add
pop
popa
mov
dec
sbb
add
repz
int3
jo
sbb
popf
sub
iret
mov
mov
jno
aad
push
stos
inc
sub
push
mov
in
mov
test
fcoml
cwtl
and
inc
sahf
fwait
push
imul
jg
out
adc
aam
cmp
gs
xor
lcall
in
lcall
popa
lds
lret
xchg
aas
stos
mov
ret
jle
loop
sub
mov
sbb
fwait
enter
scas
mov
dec
scas
jmp
ret
notb
sbb
rcrl
cld
mov
std
fisubrs
inc
rep
loope
cmovae
aad
jnp
outsl
sub
mov
hlt
dec
lock
dec
jl
test
jae
mulb
pop
cs
pop
int
cmpsb
mov
stos
shll
loop
int3
sub
ret
xchg
jmp
push
add
and
pushf
inc
bound
les
pushf
inc
dec
pop
mov
and
test
popf
repnz
cld
push
mov
cwtl
pushf
movsl
cmp
stos
push
nop
inc
xor
jb
test
sbb
xchg
repz
test
mov
loop
mov
js
jmp
or
mov
cli
fistpl
popf
outsl
popf
dec
add
test
and
clc
loope
mov
ret
stos
mov
pop
das
out
int
lea
pop
mov
xchg
lcall
hlt
popa
addb
mov
jno
jl
xchg
ret
outsl
mov
add
fisubrl
or
shl
jl
pop
out
pusha
fmull
mov
andl
push
jns
pop
jnp
scas
jmp
sub
and
bound
push
orb
pop
pop
andl
fsubr
jl
mov
movsb
test
lret
fsubrs
sbbl
cmpl
lds
lods
push
faddl
cmp
push
mov
stos
xor
sbb
testl
ficoml
dec
push
push
add
push
xchg
lods
cmpsb
and
addr16
aaa
cmp
shr
cmc
sti
mov
divl
lcall
or
adc
push
jecxz
outsb
jl
int
sti
pop
jae
mov
mov
jg,pt
out
lods
call
int
outsl
data16
xchg
cld
xchg
xchg
popf
cwtl
and
iret
push
addr16
sarb
mov
mov
xlat
fs
push
out
inc
pop
movsb
add
js
leave
scas
push
mov
jnp
add
inc
dec
mov
add
out
into
mov
lret
das
scas
sbb
or
andl
mov
and
jne
test
lret
and
inc
mov
and
rorb
adc
push
lock
inc
lds
sarl
scas
cmp
ds
daa
push
mov
xchg
push
mov
push
cld
adc
ja,pt
sub
xor
push
dec
mov
je
xor
sub
push
or
mov
dec
inc
out
cs
in
movsb
sti
in
and
mov
mov
loopne
push
repz
add
loope
add
push
jbe
lahf
jge
push
test
mov
mov
mov
dec
cltd
dec
sti
je
aas
aaa
addr16
icebp
shlb
jl
in
or
inc
cmc
aaa
pusha
mov
jnp
dec
addr16
dec
jecxz
inc
lahf
jno
std
stos
clc
mov
xchg
movb
pop
xor
out
inc
jo
sub
in
dec
imul
fs
in
into
repz
je
stos
mov
nop
inc
mov
mov
push
insb
les
sub
pop
sbb
fldenv
add
inc
orb
gs
imul
and
scas
mov
mov
jmp
ja
jae
mov
js
aam
and
jae
shlb
add
jg
jge
wbinvd
jecxz
dec
test
sub
push
xor
decl
cmp
mov
test
dec
fucom
sub
mulb
outsb
call
jl
push
notb
sbb
and
fisubrl
jne
push
xchg
int3
sub
leave
jecxz
jbe
addl
xchg
fcomps
pop
pop
inc
dec
cmp
pop
je
mov
push
lods
lds
or
ljmp
aad
pop
sub
jle
lods
xchg
xchg
insl
mov
mov
xchg
jb
addr16
popa
mov
repz
pop
lock
push
mov
add
sbb
or
incl
pop
ret
mov
dec
ret
sub
imul
cltd
xlat
nop
and
xchg
cmpsb
ror
push
adc
test
stc
xchg
jnp
jecxz
pop
push
push
int
sbb
adc
jl
mov
outsl
mov
clc
ss
cmpsb
xorl
cmpsb
gs
or
lret
aas
fsub
lock
out
cmp
adc
and
lahf
xor
pop
xchg
sub
pop
je
sbb
adc
or
pop
push
outsl
push
fisubrl
stos
mov
dec
cmp
jg
das
mov
jge
add
neg
stos
in
jno
xlat
inc
movsl
std
jecxz
imul
lods
sub
sbb
jo
cs
sbbl
daa
jge
mov
sub
movsb
in
popf
or
insb
aas
imul
push
dec
sub
sti
mov
mov
dec
or
sbb
sbb
repnz
push
leave
xchg
mov
or
mov
lret
mov
and
sub
cs
stos
rcrl
in
jge
xlat
push
pop
je
sti
rcrb
rcll
jae
lahf
cwtl
das
or
add
negl
cmp
xor
test
fstpl
sub
rolb
adc
mov
test
fstpt
imul
fbstp
jns
loopne
mov
pop
fcoms
stos
sahf
cwtl
sub
in
std
in
jae
dec
dec
fidivrl
jp
lcall
mov
inc
sahf
or
test
jg
inc
cs
add
and
cld
loop
outsb
xchg
movsb
push
shlb
call
adc
pop
rol
in
movsl
mov
iret
push
sub
sti
inc
xchg
cmpsl
pusha
and
push
out
add
pop
dec
jae
rcrl
subb
inc
js
dec
mov
adc
add
in
push
jne
enter
and
cmp
mov
xor
sub
jge
nop
xchg
xchg
das
aad
jbe
into
push
dec
out
scas
aad
notl
out
addr16
xor
adc
stos
cmp
xor
aam
addl
mov
faddl
cmpb
test
jns
xchg
sbb
lret
call
add
push
ret
dec
sub
sub
jbe
imul
push
push
push
push
pop
gs
cmp
xchg
std
icebp
lea
movsl
lret
inc
in
into
jns
out
lahf
xor
dec
icebp
pop
add
mov
or
pop
clc
adc
dec
sbb
adc
push
push
cmp
dec
or
sti
notb
and
sarl
dec
mov
lock
das
insl
subl
std
mov
loop
adc
sbb
es
sbb
in
push
je
aaa
outsl
es
push
fidivrl
icebp
sbbb
ret
std
pop
insb
rcll
sbb
int3
xchg
stos
cwtl
sbb
fwait
or
outsb
jle
outsb
cltd
out
lods
xchg
or
enter
dec
xchg
fcompp
inc
mov
jbe
sahf
add
mov
aas
arpl
das
lcall
cmp
and
js
mov
dec
divl
mov
testb
ja
arpl
scas
sbb
lods
push
cmp
enter
test
push
cmp
cmpsb
pop
dec
mov
cmc
dec
addr16
enter
sbb
int
jo
push
les
inc
mov
nop
stos
and
clc
pop
or
inc
mov
jbe
push
mov
pop
add
dec
cmp
and
adc
adc
fbld
in
cli
int3
jno
mov
mov
sahf
adc
jecxz
imul
sub
rolb
movsl
in
or
stos
enter
mov
xor
mov
lock
sbb
push
call
cmc
inc
push
add
ljmp
add
xchg
mov
mov
dec
mov
xchg
rcll
rorb
and
xor
das
jnp
adc
and
xor
cwtl
adc
jmp
adc
out
dec
aas
ret
and
out
js
shlb
iret
fdiv
push
pop
mov
iret
xchg
mov
jns
jnp
dec
push
mov
mov
sti
test
mov
js
popf
nop
movsl
sub
push
push
jle
cmp
inc
ljmp
fwait
mov
cmpsb
adc
pop
fildl
xor
sbb
in
mov
or
outsb
adc
xor
movsl
fistl
imulb
popa
jns
mov
les
lcall
das
jae
mov
and
xchg
in
push
pushf
lods
pop
cmp
test
lcall
sub
fsub
inc
cmpsb
ret
mov
pop
out
xchg
and
int
sti
or
mov
mov
or
stos
jnp
sbb
jbe
sbb
lret
loope
js
movsl
loope
inc
ds
jns
push
mov
ds
repnz
outsl
loop
xchg
rcrb
nop
pop
orl
mov
adc
movsb
mov
mov
push
mov
jle
fisttps
test
add
mov
adc
push
in
and
add
insl
scas
xchg
xchg
clc
pop
add
xlat
test
cs
das
pop
ret
sbb
cmp
and
xor
in
xchg
sahf
mov
inc
sub
push
int
push
rclb
pop
inc
and
xor
imul
push
pushf
out
adc
mov
xchg
arpl
dec
push
es
jl
xchg
jmp
lea
dec
iret
movsl
adc
mov
icebp
lods
cmp
js
pusha
popa
push
jp
or
lods
test
clc
mov
cwtl
and
fdivrs
les
adc
jne
fildl
ds
cmp
add
sub
adc
adcl
mov
arpl
adc
rolb
mov
andb
add
pusha
push
sti
or
cmpsl
cmpsb
fsubs
push
mov
push
and
xor
stos
mov
and
fcmovne
sarl
test
shlb
sbb
mov
lock
sub
lret
xor
jge
repnz
cmp
sbb
and
dec
xchg
xchg
xchg
sbb
mov
lods
aaa
inc
jge
mov
pop
test
xlat
jmp
dec
lods
adc
mov
out
or
push
ret
dec
adc
sbb
mov
inc
push
jno
push
xchg
addl
lods
adc
and
xor
into
outsl
jnp
dec
fisttps
mov
icebp
popa
lret
push
in
mov
lret
cli
pop
int3
in
mov
loope
lds
fisubl
xchg
jmp
xchg
cli
sub
and
inc
cmc
cmp
cmp
xchg
cmpsl
adc
leave
sbb
and
dec
inc
dec
pop
btl
jnp
dec
fwait
outsb
addb
jnp
push
orb
cmp
filds
into
fs
lcall
inc
in
rcr
repnz
mov
push
or
mov
or
imul
xor
cmp
mov
xor
in
testb
bound
jge
or
lock
aaa
pop
mov
pop
cld
icebp
push
jne
test
ljmp
push
mov
adc
jne
jp
pop
cwtl
push
xor
loopne
std
jmp
mov
stos
mov
inc
sub
xor
xlat
lcall
jo
pusha
cmpsb
nop
push
addb
mov
push
lock
adc
add
xor
and
push
xchg
inc
xchg
pusha
cmpsb
nop
push
addb
mov
push
lock
adc
add
push
xchg
inc
jo,pn
pusha
cmpsb
nop
mov
data16
les
lock
shll
and
xor
push
mulb
out
xchg
inc
xchg
ss
outsl
test
mov
stc
bswap
pop
flds
sbb
or
cmp
sub
aaa
sub
aad
mov
fcmovnbe
lret
loopne
lock
sbb
or
cmp
sub
push
dec
pusha
jnp
adc
mov
ror
loopne
lock
sbb
or
cmp
sub
push
dec
pusha
jnp
imul
aad
rorb
cwtl
je
jno
and
sub
pop
dec
mov
sti
loopne
js
stos
jb
rorl
pop
fisttpl
jo
mov
dec
out
sbb
int
inc
pop
push
into
pushf
jae
popa
cmp
sbb
iret
xchg
fcmovnbe
add
sbb
dec
push
jns
adc
mov
ds
push
mov
xor
lret
arpl
push
add
das
jecxz
aaa
jl
clc
scas
dec
cmp
jo
jo
sbb
dec
nop
fcmovnbe
xor
push
outsl
xchg
pop
movsl
imul
mov
adc
dec
andl
nop
mov
pop
sti
lock
sbb
iret
imul
add
pusha
cs
mov
fcoms
fidivrl
daa
sti
repnz
sbb
or
cmp
sub
push
dec
pusha
jnp
imul
mov
rcr
lret
loopne
lock
dec
cmp
and
cmp
cmc
mov
fdivp
filds
xchg
scas
test
outsb
inc
pop
jno
and
adc
repnz
mov
aaa
mov
lret
lcall
dec
push
dec
add
jnp
imul
mov
rcr
lret
loopne
lock
sbb
or
cmp
sub
push
dec
pusha
jnp
imul
mov
rcr
lret
loopne
lock
sbb
mov
das
mov
sub
jb
adc
add
inc
jns
popa
or
adc
inc
repnz
xor
mov
imul
add
pushf
lds
mov
cmp
adc
add
test
fdivs
jnp
mov
xor
sub
add
lret
into
or
adc
mov
movsb
or
jb
clc
arpl
inc
fmull
inc
xchg
sbb
daa
sbb
jno
inc
aas
std
and
sbb
push
je
jmp
pop
mov
movsb
shll
cmp
imul
test
mov
shll
mov
movsl
dec
xor
mov
in
add
sbb
adc
or
push
shrl
push
scas
nop
lods
push
call
xor
ret
push
not
pop
pop
pusha
jne
add
fidivs
jnp
mov
inc
and
rcrl
test
pop
lcall
fcmovnb
cmp
add
es
lods
inc
shlb
inc
outsb
lods
jns
lret
sub
ret
call
lcall
or
ja
cmp
insl
jge
or
fwait
sub
notl
mov
enter
fwait
dec
sbb
mov
mov
cmpsb
fbld
out
ss
fidivs
jmp
test
fs
push
push
push
icebp
push
jl
xor
push
nop
cmp
jge
sbb
movsb
inc
inc
out
or
mov
inc
out
fs
es
xchg
es
xchg
inc
jmp
scas
jbe
jns
pop
sub
fstl
xor
pop
scas
sub
sbbb
fwait
mov
call
or
inc
dec
in
adc
mov
push
xor
push
call
orl
call
rep
sub
lea
mov
add
jle
xor
ljmp
jbe
inc
jp
push
arpl
mov
sbb
iret
movswl
iret
jmp
mov
mov
mov
fwait
jge
loope
fs
nop
pop
jnp
xchg
roll
lods
lcall
cli
data16
sbb
cwtl
outsb
lahf
out
stos
cmp
or
sahf
incb
mov
pushf
sub
shrb
int
jg
cli
push
call
dec
adc
pushf
test
xor
and
jp
push
jecxz
mov
arpl
frstor
or
mov
rol
xlat
imul
pop
scas
sub
les
sbb
dec
or
imul
or
hlt
xchg
daa
pusha
push
lods
dec
cltd
aas
test
add
mov
incl
ds
adc
xchg
lds
xchg
cld
mov
dec
jp
lea
lcall
xchg
std
fisubs
int
les
lcall
and
les
fcom
ret
mov
dec
add
pop
push
std
rcrb
faddl
or
les
nop
outsb
xlat
cli
fidivs
addl
xchg
jnp
xor
xor
imul
int
icebp
inc
popf
sub
mov
iret
jns
fsubl
jle
rcrl
andl
test
mov
cmpsl
add
pop
and
je
out
mov
push
flds
scas
stos
jp
lock
jp
movsb
sub
fsubrl
mov
in
pop
leave
addr16
push
fwait
imul
insb
icebp
pop
mov
mov
pop
xchg
adc
push
xchg
push
cmp
inc
loopne
inc
test
xchg
or
mov
push
xor
test
test
shr
fisubrl
or
push
ret
je
hlt
dec
arpl
mov
dec
push
sub
mov
push
cld
sub
clc
aas
jne
sub
int3
gs
add
mov
mov
push
ret
in
push
out
push
stc
das
aam
adcl
xchg
stc
sub
xchg
aad
fstpl
jno
outsb
rorl
xor
sub
dec
mov
cld
cltd
pop
or
sub
iret
xor
mov
neg
dec
scas
cli
inc
in
sbb
outsl
test
mov
push
and
stc
inc
add
hlt
push
or
mov
pop
addr16
xchg
loope
jbe
xchg
and
fwait
mov
into
xor
xchg
jmp
std
lock
jp
loope
mov
sub
adc
inc
lahf
pop
shll
cmp
xor
stc
pop
inc
ret
bound
sub
sub
decl
mov
mov
inc
pop
sahf
lock
imul
mov
pop
orb
adcb
scas
inc
adc
lahf
push
pop
jmp
mov
ss
lahf
cltd
ret
adc
clc
mov
notl
fldl
xchg
or
fisttpll
add
cmp
pop
es
stos
xchg
mov
xchg
fs
mov
dec
clc
int
popf
jge
sti
imul
add
mov
jmp
mov
push
aam
push
imul
rorb
outsb
ret
sti
popa
pop
jnp
cs
mov
idivl
sbb
test
out
jl
xchg
cmc
nop
out
pop
mov
sub
xchg
inc
mov
push
popa
sbb
stc
iret
push
leave
arpl
xchg
sbb
scas
or
mov
sbb
xchg
adc
call
mov
pop
jbe
dec
add
mov
jnp
in
sbb
adc
scas
mov
xchg
scas
cmp
in
fdivrl
add
pop
push
dec
pop
movsb
push
fcoml
stc
pop
loope
ljmp
adc
pop
sbb
cmc
loop
aad
xor
pusha
xorb
push
xchg
and
int
inc
in
arpl
jmp
mov
dec
sti
jmp
orl
call
push
pop
test
pop
push
in
divl
notb
pop
lods
mov
outsb
imul
pop
test
lahf
adcb
test
sbb
mov
lcall
fadds
nop
mov
fsubrs
ss
ljmp
mov
xchg
mov
mov
jb
mov
mov
fs
adc
repz
cmp
or
aaa
or
push
int
sbbl
mov
in
clc
je
mov
cmp
nop
movsb
ja
mov
decb
mov
xor
aas
shlb
dec
sub
cmp
clc
sbb
jae
jecxz
aad
sahf
inc
xor
loopne
gs
les
add
insb
mov
gs
sbb
jnp
xor
out
or
lcall
sub
repz
fs
iret
mov
and
mov
cmp
adc
xchg
mov
lods
pushl
xor
aam
xor
shr
and
xlat
jb
std
xor
add
cmp
push
inc
fsub
in
sub
pop
mov
xor
sbb
fwait
ret
jmp
into
mov
lods
icebp
adc
push
stos
sahf
mov
jno
mov
jnp
mov
or
push
inc
sub
stc
clc
mov
mov
xchg
out
add
or
test
fldl
xchg
xor
jmp
mov
lcall
jo
fstpl
andl
add
gs
mov
stos
mov
in
push
push
lret
mov
mov
fdivs
shll
xor
dec
cmpsb
or
inc
test
xor
add
or
mov
sbb
sub
pop
and
aaa
add
inc
ja
aad
test
and
insl
jo
pop
and
loope
scas
cmp
decb
insl
mov
lcall
mov
gs
dec
add
adc
xcrypt-ctr
cmpsl
sbb
ds
add
mov
mov
lock
movsb
out
pushf
push
mov
lcall
aad
mov
inc
popa
or
mov
xor
and
pop
repnz
mov
ss
popa
inc
dec
jl
sti
mov
push
push
dec
andb
dec
mov
test
loope
mov
cwtl
adc
ficoml
das
std
push
dec
sbb
stos
sahf
push
ljmp
ss
ret
jnp
iret
pushf
imul
pop
xchg
dec
xchg
jge
iret
imul
int
push
push
pop
out
sbb
in
int
ds
jo
addr16
sub
adc
jno
sbb
mov
pop
sbb
mov
nop
mov
xchg
mov
mov
xor
nop
push
inc
xor
lds
cmp
push
lahf
mov
aaa
pop
movsb
rclb
jb
mov
and
fistpll
sarl
fdivr
fcoml
in
lea
lods
vphaddubd
out
mov
adc
cli
pushf
aam
jle
fildll
sbb
gs
mov
aam
jp
sbb
jge
xchg
adc
pusha
mov
outsb
mov
stc
js
arpl
loopne
push
and
lods
cmpb
aaa
movsl
and
dec
les
inc
int
enter
push
jmp
add
mov
jo
ret
insl
jl
or
mov
inc
xchg
pop
cmovle
hlt
ljmp
lahf
dec
pop
int
aas
pop
mov
scas
faddl
jo
sbb
adc
out
adc
mov
stos
mov
out
in
cmpsb
jmp
push
dec
adc
and
popa
mov
cmp
jp
mov
mov
push
shrl
lods
mov
enter
jle
add
pop
andb
imul
add
aas
into
push
cwtl
pusha
fdivr
out
mov
pop
adc
hlt
push
jno
and
jg
jo
pop
mov
sub
mov
movsl
jmp
decl
repnz
xchg
sbb
into
add
int
addr16
lahf
mov
test
js
mov
iret
lock
dec
lcall
std
add
rcr
fsts
popa
mov
call
mov
push
adc
pusha
loopne
add
xchg
orb
sbb
mov
jmp
push
out
pop
movsl
movsl
xor
in
clc
jno
mov
xchg
fwait
xchg
hlt
cmc
add
rcll
jo
loopne
inc
and
push
sbb
cmp
push
lock
sub
aam
push
dec
lods
stos
pop
inc
insb
jecxz
or
repnz
movsb
jmp
push
pop
daa
jl
imul
nop
rcl
or
cmp
mov
int
incl
xchg
mov
iret
cltd
inc
rol
dec
mov
xchg
std
xchg
xlat
pop
cmp
fbld
mov
or
loopne
jno
test
inc
mov
cld
xchg
xchg
adc
call
lods
pop
dec
pop
rcrl
aad
add
cmp
stc
out
sahf
sub
insl
ret
sub
call
sub
or
xor
sti
dec
jne
adc
pop
or
test
cld
xor
sti
stos
push
xchg
jg
ljmp
ljmp
addl
rclb
mov
iret
push
mov
icebp
inc
aaa
das
lods
xchg
dec
inc
inc
xchg
lds
xor
adc
cmpsl
call
insb
xchg
mov
mov
dec
jae
sbb
inc
and
jns
mov
add
push
dec
dec
orb
call
in
push
dec
mov
adc
mov
pop
xchg
adcl
push
push
cli
fucomip
pop
pop
jns
cld
or
out
jg
xchg
in
jbe
lods
pop
adc
push
inc
hlt
pop
out
inc
icebp
negl
xchg
sub
in
loopne
call
and
mov
cwtl
sbb
fmulp
lods
xor
lods
aam
sbb
dec
xor
leave
fists
jmp
jl
mov
insl
outsl
aaa
pop
in
mov
cmp
adc
jbe
data16
mov
mov
cmp
in
mov
push
sbb
add
push
mov
push
insb
pop
in
addr16
js
jns
cmp
sbbl
push
les
cmp
jge
cld
lods
inc
dec
jmp
and
mov
lods
js
or
mov
shrb
sub
adc
inc
stc
and
dec
addr16
fimull
shrb
push
int
cmp
lahf
repz
mov
out
xchg
cmpb
xor
add
arpl
out
push
aad
test
jo
mov
mov
jae
in
xor
cmpsb
mov
xor
adc
push
cli
divl
sbb
jg
lds
flds
xchg
sbb
xor
inc
adc
shrl
jb
mov
dec
lods
xchg
adcl
clc
and
fadds
push
jl
stos
mov
mov
and
xchg
and
sub
pop
xchg
ret
pop
push
inc
loopne
adc
xor
lea
in
adc
xchg
cmp
dec
mov
js
fs
in
lods
lret
xchg
mov
sbb
fsubr
movsb
cli
inc
sub
repnz
lea
loope
mov
insb
mov
int3
mov
mov
adc
xchg
in
xor
dec
jmp
decl
xor
rol
xchg
dec
inc
fisubrl
mov
cmp
xor
cmc
nop
adc
das
rclb
ficomps
jmp
xchg
jbe
mov
and
mov
pusha
lds
sahf
lock
add
sbb
test
cmp
ljmp
inc
sub
mov
xlat
xor
pop
dec
sbb
jb
sub
fnstenv
inc
loopne
rcll
mov
or
mov
scas
push
and
rolb
fndisi(8087
xchg
push
clc
jg
cmp
fiaddl
leave
adc
jecxz
push
outsl
mov
shrb
lods
pop
cmp
jmp
pushf
mov
out
cld
scas
les
shll
dec
fcoms
fcompl
add
mov
mov
jae
or
cmp
int3
dec
icebp
cmpsl
mov
mov
jmp
insb
jl
add
je
pop
lcall
xor
pop
mov
sub
ss
or
fscale
daa
scas
data16
aas
cwtl
lods
adc
xchg
shll
mov
mov
xchg
pushf
and
push
inc
xchg
test
dec
pop
xor
adcl
xor
pushf
xchg
xor
mov
incl
cmpsb
out
or
xor
movsl
push
fdivs
lret
pop
and
xchg
int
mov
or
testl
scas
mov
push
fsubrp
es
pop
fcoml
mov
fmul
mov
xchg
xlat
push
outsb
mov
sub
or
rcrb
sbb
fisubl
int3
stos
pop
rorb
das
pop
jmp
jl
out
and
push
gs
cmpsl
or
js
popa
andb
mov
or
int
rcll
into
mov
adc
inc
cs
or
hlt
ljmp
mov
xchg
xchg
mov
xlat
insl
inc
call
xor
cmp
dec
push
and
mov
push
mov
ror
and
lret
mov
pop
fs
stos
xor
or
cmp
addr16
dec
mov
int
mov
data16
les
xor
sub
mov
jle
jne
test
lock
in
aam
pop
mov
dec
mov
outsl
daa
adc
je
add
push
pop
inc
and
call
push
mov
and
fidivrl
xor
fldt
or
test
loope
jb
xchg
out
add
fmull
movsl
psubd
sahf
cs
jne
fsts
or
add
outsl
xor
or
in
push
adc
scas
adc
pop
sub
shlb
xor
mov
cmpsl
jg
xchg
iret
xor
test
cmp
xchg
push
mov
and
les
fdivs
or
outsb
xchg
push
jne
xchg
pop
jnp
inc
stos
clc
popf
mov
decl
jae
pop
fs
out
jecxz
jmp
enter
mov
xchg
in
aam
or
add
shrb
dec
mov
mov
jne
xchg
push
addb
nop
call
add
add
ljmp
dec
loopne
insl
xchg
das
addb
test
mov
aas
push
mov
jnp
clc
cmpb
arpl
lahf
jmp
mov
mov
or
add
or
fadd
dec
stc
sbb
push
int3
call
sbb
dec
push
xor
xchg
mov
mov
lret
loopne
adc
mov
mov
push
xchg
mov
and
insb
xor
and
dec
subb
inc
inc
push
cmp
pop
inc
test
add
div
fdivrl
xor
pop
ja
pop
not
jp
jbe
fidivrs
fstpl
stos
xchg
dec
jl,pt
dec
test
jp
jp
dec
xchg
sarl
jae
cli
inc
in
push
adc
icebp
sarb
and
adc
mov
aam
rolb
dec
add
add
int3
cmp
sbb
add
pop
xchg
inc
mov
inc
clc
mov
dec
outsb
nop
jl
mov
movsl
inc
out
inc
insb
sbb
jb
lods
addr16
je
pop
xor
sbb
mov
je
xor
mov
and
mov
push
and
bound
cwtl
sti
sti
aad
mov
jg
flds
addr16
aas
push
push
pop
mov
xchg
jo
inc
movsl
mov
sti
scas
pop
xchg
mov
xchg
mov
notl
adc
sub
leave
adc
pop
xchg
mov
jmp
pushf
jmp
iret
mov
in
imul
cmpsl
int3
in
xor
data16
mov
les
sbb
pusha
xor
jecxz
enter
push
insb
testl
push
into
pop
fcmovbe
inc
xchg
sahf
jg
bound
addr16
push
jb
lods
mov
std
sbb
jp
fistpl
add
insb
lret
xlat
movsl
xorb
dec
jge
insl
xor
xor
sub
sub
int
loopne
xchg
or
in
fucomp
lea
stc
mov
clc
jns
into
insl
test
jbe
cld
lds
jo
lret
aam
bound
jo
cltd
mov
jae
jbe
mov
mov
fs
xor
lods
sub
scas
xchg
mov
jmp
cmp
addl
xor
out
inc
mov
push
lock
dec
out
mov
push
dec
lods
and
mov
push
pop
push
adc
jecxz
cmp
xchg
out
cmpsb
or
jne
pop
lds
pop
pusha
shrl
stc
sar
aaa
mov
daa
sahf
mov
push
xlat
rcr
xchg
push
or
xor
mov
mov
shl
inc
leave
sbb
mov
dec
jp
pusha
call
add
pusha
jg
scas
cwtl
sti
adcb
movsb
push
fmulp
test
out
popf
lods
mov
mov
add
and
add
lods
cltd
mov
fs
sarl
out
sti
or
jecxz
mov
cltd
cmp
xchg
dec
pop
mov
cs
mov
std
sbb
stos
or
sub
jb
sahf
fs
nop
cmp
ss
aad
js
inc
jo
and
sbb
cmp
outsl
dec
cmp
les
sbb
imul
or
leave
fwait
iret
xorb
mov
mov
mov
cmp
movsl
xchg
inc
mov
popf
jae
iret
movsb
adc
call
push
cmp
fists
sarl
movsl
cs
cmp
add
push
pop
xchg
xchg
lret
movsb
mov
out
mov
push
adc
push
dec
ficomps
pop
sti
mov
fldcw
loop
lret
sbb
lock
mov
lock
imul
add
test
into
or
test
cmp
call
or
stc
mov
sub
aas
dec
aas
mov
mov
repz
mov
pop
stos
or
sbb
inc
sbb
faddl
js
out
stc
jbe
sbb
mov
call
mov
scas
shl
xchg
xchg
xchg
xor
inc
xchg
mov
pop
sbb
mov
fnstcw
xchg
cwtl
pop
push
fwait
cmp
xor
sahf
inc
pop
xor
dec
repnz
je
popf
loop
cld
jp
stos
dec
outsl
fucomip
rsm
xor
orb
mov
mov
pop
insb
sub
mov
push
cmp
xor
dec
das
lods
jns
es
sbb
popf
pop
and
mov
call
test
ret
jnp
std
loope
sti
stos
lret
sbb
jp
adc
mov
fldcw
fildll
mov
pushf
dec
inc
lock
icebp
lcall
shll
rclb
and
test
or
cmp
sub
push
dec
pusha
jnp
imul
mov
rcr
lret
loopne
lock
sbb
or
cmp
sub
push
dec
pusha
jnp
imul
mov
rcr
lret
loopne
lock
sbb
or
cmp
sub
push
dec
pusha
jnp
imul
mov
rcr
lret
loope
lock
sbb
or
cmp
sub
push
dec
loopne
lock
and
mov
pop
xor
add
adc
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
push
mov
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
popf
orb
faddp
mov
repnz
mov
xor
dec
push
jle
jle
cli
orb
faddp
into
sar
loop
xchg
push
add
adc
xor
daa
dec
push
jle
outsb
jb
cmpb
jbe
rol
shl
loop
bnd
sub
pop
xor
pop
xor
mov
js
cmp
pop
cmpl
daa
jp
push
jb
jb
ds
rorb
jae
arpl
adc
mov
push
adc
jle
xchg
and
lret
push
lret
jo
jne
sbb
cmp
xor
push
adc
and
int
mov
push
mov
pop
mov
in
ret
into
rolb
ljmp
mov
push
dec
mov
pop
outsb
jb
inc
subl
xor
jne
gs
lea
sbb
dec
inc
xchg
bound
mov
lea
pop
add
jnp
add
push
mov
fcmove
rcll
add
insl
lds
scas
mov
ret
loop
repnz
xchg
adc
push
xor
inc
inc
push
dec
bound
testl
mov
xchg
jb
or
dec
inc
sub
and
shr
jmp
int3
ljmp
or
pop
pusha
ds
push
pusha
daa
daa
and
pop
pop
das
es
loop
ffreep
std
lret
into
sar
loop
repnz
add
adc
and
xor
dec
push
jle
outsb
jb
orb
faddp
into
sar
loop
repnz
add
adc
and
xor
dec
push
jle
outsb
jb
subb
jl
outsb
jne
aaa
es
nop
mov
push
ja
std
or
push
add
cmp
fs
mov
push
lock
mov
lods
inc
xchg
pop
jg
dec
lret
ret
xor
aad
pop
imul
xchg
mov
nop
cwtl
pop
pop
imul
push
sbb
sbb
das
cltd
fs
adc
dec
adc
test
in
hlt
sbb
rclb
inc
fmulp
push
adc
shll
xchg
mov
les
call
dec
shll
mov
adcl
add
stos
into
xor
inc
mov
das
cmp
push
fidivl
inc
pop
shrl
int3
xchg
cmp
lock
test
inc
sbb
cmpsb
js
loope
aaa
pop
fwait
lcall
jmp
pop
scas
sub
mov
test
and
jnp
ror
rol
mov
add
sbb
dec
cmp
repnz
in
pop
fmul
imul
add
dec
loope
dec
stos
adc
cld
into
jno
xchg
pop
xlat
fisubrs
or
insb
lods
repnz
cltd
notb
jmp
in
mov
adc
mov
pop
add
sahf
cwtl
shrb
mov
pop
cmpsb
inc
into
repz
sub
jnp
std
jmp
fiadds
sbb
cmc
shll
fmulp
mov
mov
cmp
in
add
adc
jno
iret
enter
cltd
iret
adc
lods
xchg
pop
inc
aaa
push
adc
and
pop
sub
jle
bound
mov
fsubr
or
inc
test
pop
or
cwtl
out
add
add
sub
mov
and
dec
fidivs
jg
xor
mov
mov
inc
sbb
mov
sbb
fcomip
sbb
xor
scas
imul
xor
fldcw
push
sbb
xchg
stc
aas
jp
xlat
xor
shlb
adc
sti
cmp
rol
push
fimuls
in
dec
inc
sub
push
dec
cmc
push
bnd
out
mov
negb
js
mov
ficoms
xchg
ja
sbb
sbb
repz
sbb
aaa
xor
test
test
xor
pushf
xor
gs
inc
fcomps
sub
out
push
xor
pop
mov
xor
imul
mov
push
or
jae
jae
push
push
test
push
mov
and
push
insb
popf
enter
mov
enter
pop
jmp
lcall
jg
cmp
push
mov
hlt
loope
mov
ljmp
out
xor
and
mov
jp
xchg
mov
in
cmpsb
mov
jecxz
mov
push
mov
push
ss
scas
mov
sub
mov
and
pusha
mov
inc
aas
out
mulb
dec
or
scas
or
inc
add
ja
sbb
mov
jo
add
lea
scas
enter
icebp
push
jns
movsl
jno
jle
cwtl
loop
or
mov
pop
xchg
xchg
pop
mov
nop
mov
sbb
pop
rcl
stc
fcoms
fldl
pop
cli
push
push
daa
jno
jb
outsl
in
inc
repz
or
aam
inc
test
and
gs
add
inc
scas
inc
cmp
mov
call
mov
sub
fistl
mov
jno
aam
xchg
rcll
sbb
jns
sbb
mov
lcall
loopne
mov
mov
dec
sti
out
pop
mov
dec
pop
shl
and
cmpl
inc
push
mov
test
cmp
imul
xor
mov
and
js
call
ret
popf
stos
mov
sub
mov
sub
and
lods
push
cli
push
or
adc
inc
rol
pop
mov
sbb
ds
loop
xchg
imul
mov
cmp
mov
cmpsl
sub
mov
aas
cmp
aaa
inc
in
sarb
dec
popa
jbe
jae
test
ss
sar
xor
sub
sub
push
mov
push
mov
xlat
mov
jmp
mov
jae
loopne
jo
mov
and
mov
xor
sbb
jns
jle
ja
cmpsb
dec
mov
test
rolb
xchg
sub
outsb
stos
mov
clc
mov
mov
loop
out
mov
mov
and
dec
insb
cli
xchg
mov
mov
cwtl
or
or
lds
pop
mov
lods
lods
inc
adc
jae
in
das
xchg
add
sbb
dec
add
fnsave
adc
mov
mov
xchg
aam
jb
mov
mov
adc
pop
dec
dec
popa
xorb
ss
sbbl
stc
dec
stos
test
jne
inc
adc
xchg
or
or
mov
adc
push
stos
sahf
pop
mov
inc
dec
inc
jnp
shr
into
mov
xor
push
dec
xchg
loopne
aas
testl
sbb
cmpsl
jle
test
jnp
lock
mov
lds
cmpsl
pusha
incb
loop
and
fucomip
icebp
push
adcb
cs
inc
sub
sbb
mov
in
movsb
or
test
adc
incb
popf
aas
cwtl
add
out
rcl
fisubrs
dec
add
xchg
fldt
sbb
cmp
inc
xor
sbb
ss
pop
mov
push
clc
mov
sbb
fimull
push
xor
mov
mov
push
lods
push
lods
or
sbb
pop
repz
lret
push
je
insb
int3
orw
or
out
jge
int3
fsubr
xor
and
fsub
xchg
pusha
mov
xlat
inc
dec
push
dec
imul
sbbl
repnz
xor
lds
sbb
je
pop
jecxz
inc
sarl
dec
fiadds
inc
sbb
popa
int
and
stc
aaa
sbb
enter
sbb
fisttpll
test
xchg
ss
pop
sbb
shl
cmpsl
or
loope
arpl
xor
and
sti
incl
adc
xorl
dec
pop
fcmovnbe
arpl
or
ds
loope
fldt
cmp
test
jge
and
repnz
sarl
sbb
int3
int
lcall
pop
les
xor
imul
xchg
push
mov
out
roll
dec
push
stos
daa
arpl
jo
jb
mov
or
test
test
jecxz
flds
mov
pop
test
dec
mov
les
xchg
push
outsl
inc
sub
jmp
dec
das
test
repnz
hlt
jo
inc
jns
stos
and
mov
ss
mov
mov
mov
or
out
xor
into
les
repz
lcall
fistps
dec
sub
sbb
ds
je
cs
mov
pusha
mov
mov
pusha
or
cmpl
lds
out
test
adc
pop
out
adc
subb
xor
pop
push
cmp
xchg
add
call
fsubs
bound
xchg
and
movsb
cmp
sbb
dec
outsb
and
repnz
scas
ds
ret
cmp
xchg
fdivr
push
inc
push
jno
pusha
sbb
jmp
or
jg
and
popf
sti
mov
out
cli
dec
ljmp
or
dec
js
sbb
aad
fcomps
test
loopne
mov
push
push
jbe
jbe
lcall
ss
movsb
sarl
mov
imul
shrl
sub
and
push
das
es
xchg
dec
dec
imul
sub
outsb
clc
fldl
adc
repz
cmpsb
stos
in
ljmp
sub
or
xchg
ds
inc
dec
pop
loopew
imul
sahf
vlddqu
pop
popa
out
fcmovu
sbb
lods
clc
aad
xchg
cmpsl
xchg
mov
add
sbb
out
ret
mov
scas
mov
clc
shll
loop
bound
xor
fidivrs
mov
rcrb
clc
idiv
out
pop
aam
xor
add
jecxz
xor
jno
leave
push
add
dec
icebp
ret
dec
push
jae
shlb
pop
movsb
fimuls
cmp
lea
xor
xchg
mov
data16
popl
adc
test
xor
stos
sti
lahf
pop
loop
out
outsl
stos
loop
arpl
sub
add
or
pop
jmp
add
imul
push
fiaddl
imul
test
push
call
push
cmp
fstl
loopne
adc
inc
jle
sub
cmc
sub
leave
push
lods
pushf
push
inc
cwtl
insb
mov
inc
iret
addr16
iret
mov
mov
pop
stos
jmp
loope
sbb
addl
popa
mov
mov
call
cli
pushl
imul
mov
adc
push
sbb
stc
movsl
and
cmp
inc
iret
das
jecxz
mov
add
inc
loop
rclb
or
jecxz
ljmp
fstpt
sarb
bound
sbb
push
push
icebp
lahf
cmp
push
mov
and
mov
mov
mov
cmp
jns
mull
push
negb
xor
out
fimull
aaa
insl
imul
cwtl
mov
cmp
int
xchg
fs
int
inc
lret
mov
pop
icebp
aaa
jno
add
dec
mul
jno
mov
int
filds
dec
cs
jbe
data16
aam
cmc
push
inc
xchg
dec
bound
inc
jp
ss
mov
cwtl
mov
inc
inc
push
pop
mov
aam
stc
cmpsl
test
ljmp
jl
popa
and
jnp
insb
mov
or
testb
and
outsb
add
aaa
out
std
push
aad
popf
lock
in
or
lds
jecxz
inc
movsb
adc
push
cmp
insb
aad
call
stc
xor
cmpl
inc
xchg
test
xlat
dec
pop
pop
div
mov
fildll
addr16
aaa
das
lock
dec
das
lahf
dec
cs
in
add
mov
sub
lea
mov
insb
clc
clc
fbstp
stc
adc
and
sub
sbb
daa
pop
cmc
sub
enter
jns
lea
cmpsb
dec
aas
and
test
cmp
push
aad
popa
push
aas
mov
cltd
xchg
mov
pop
test
xor
sub
sub
cmc
adc
inc
fwait
ss
outsb
push
xor
jg
enter
jo
call
push
pop
push
pop
in
inc
hlt
cwtl
test
mov
call
les
in
out
orl
xor
imul
bound
sub
iret
push
fcompl
lahf
pop
mov
shlb
ljmp
out
mov
cmp
and
fidivrl
xor
or
mov
xchg
jne
cli
sub
mov
or
dec
push
pop
popa
aad
pop
add
xchg
arpl
pushl
sahf
lret
cltd
rcll
xchg
pop
into
insb
mov
mov
int3
and
dec
addb
xor
cltd
cmc
icebp
pop
stos
pushf
insb
cmp
cs
inc
in
std
out
jp
jnp
ficomps
rep
jbe
adc
pop
xchg
int
addl
inc
dec
lods
mov
aam
pop
sub
and
aaa
adc
bound
jge
mov
sub
adc
dec
push
in
pop
cmp
jmp
popa
dec
push
jle
mov
lcall
jns
mov
dec
jecxz
das
mov
xor
adc
imul
jp
test
add
cmp
add
inc
movsb
mov
or
js
fnsave
cmp
and
push
pop
clc
push
xchg
lret
imull
mov
xor
fildl
shlb
add
xor
pop
jle
push
dec
adcl
pop
pusha
cli
daa
mov
pop
mov
mov
mov
jl
mov
mov
sbb
popf
adc
sub
and
into
mov
iret
sub
fs
mov
jne
ja
mov
pop
repz
xorl
hlt
std
mov
hlt
xchg
push
call
and
mov
jecxz
movsl
sti
dec
enter
pop
fstl
push
cmp
icebp
mov
rol
int
js
push
xchg
push
mov
ss
add
test
repnz
rcrl
std
outsl
test
mov
mov
sub
dec
and
jl
aaa
lcall
mov
pop
sbb
fnsave
cld
push
in
sti
test
mov
cld
and
in
cwtl
xor
shlb
test
dec
sti
repz
imull
push
or
jo
roll
mov
enter
sbb
inc
leave
shrb
stc
shlb
xchg
ja
imul
mov
push
test
je
adc
punpckhwd
inc
pop
shll
pop
and
ret
push
dec
pop
pop
xchg
lea
out
xchg
or
insb
adc
add
cmp
add
andb
fucom
fadds
inc
push
or
add
and
pop
scas
xlat
gs
mov
sbb
movsb
data16
mov
lock
pop
pop
in
jns
adc
inc
sarl
nop
push
scas
or
clc
movb
xor
fisttpl
pushf
rorb
enter
subb
push
fsubrl
inc
pushf
jmp
inc
stos
in
repz
lock
std
sub
lcall
adc
xlat
sub
or
sub
movsb
aad
mov
push
push
stos
ds
jl
test
shlb
fcmovu
ss
rcrb
mov
jne
cmp
inc
push
pop
push
or
pusha
insb
sub
in
jns
cmp
je
loope
into
incl
nop
jo
mov
test
add
pop
inc
loop
sub
mov
out
pop
pop
jbe
je
addb
pop
fcomps
lock
test
push
or
decb
jae
xor
push
pop
stos
xchg
cmpsb
imul
test
mov
xor
popa
in
in
mov
xor
pop
lcall
xchg
inc
cmpsl
rclb
xchg
pusha
sbb
adc
and
out
cld
int3
add
add
pushf
mov
adc
mov
lret
add
xchg
ds
cmp
pop
lret
rolb
push
cmp
pop
and
cmp
imul
fistps
sbb
jl
xchg
repnz
xor
mov
pop
js
inc
repz
pop
test
js
lods
mov
mov
ficoml
sbb
jnp
jae
jb
push
insb
out
ds
sub
pop
cs
pop
jns
lock
push
dec
in
or
das
lret
mov
xchg
sub
and
xchg
push
ficomps
aas
push
jecxz
enter
jno
jns
sbb
mov
dec
jo
out
ss
pop
aam
and
test
iret
iret
lahf
add
std
incl
leave
mov
in
sbb
fs
imul
mov
clc
test
cwtl
lcall
jl
cmp
pop
mov
fwait
pusha
fdivl
dec
sbb
and
aaa
dec
xchg
add
sarb
dec
addr16
dec
xchg
fwait
daa
mov
or
pop
daa
out
mov
add
aas
insb
cmp
out
jg
mov
test
xchg
mov
lock
psubusw
ljmp
rclb
xor
mov
jnp
lods
adcb
pusha
inc
pusha
inc
inc
add
ljmp
inc
mov
daa
out
iret
loop
mov
inc
mov
push
dec
lods
les
imul
dec
sti
je
ficompl
sbbb
decl
and
out
out
adc
mov
out
inc
push
shll
scas
add
dec
inc
xor
dec
cli
push
insl
sub
mov
mov
jle
jge
mov
and
cmove
and
inc
into
fdivrs
loope
int
push
mov
aaa
fistpl
xor
dec
mulb
rcl
into
fldt
enter
mov
test
gs
scas
mov
es
sbb
pop
test
sub
inc
lds
inc
mov
dec
push
bound
mov
lods
inc
xchg
push
leave
mov
aad
push
push
lea
int
and
sahf
mov
pop
test
dec
mov
cmpsl
cmp
jp
adc
and
adc
je
push
sbb
arpl
in
cmpsb
cltd
or
ds
in
cld
fwait
test
dec
hlt
lds
push
jmp
vmovq
bound
repz
movsb
ret
test
popa
cmp
imul
int3
fsub
adcl
or
mov
mov
fwait
test
xchg
mov
in
inc
inc
fnsave
jmp
cmp
js
int3
dec
xchg
cmp
stos
cs
sarb
mov
enter
mov
pop
xchg
cs
lret
xchg
cmp
mov
push
xchg
iret
mov
sarb
add
add
inc
repnz
mov
test
adc
test
testl
push
adc
movsb
int
cltd
popa
inc
sub
cmp
add
sbb
sub
decb
mov
ljmp
inc
test
pop
sbb
loope
outsl
out
sahf
jo
arpl
and
add
mov
sub
jae
cmp
inc
add
cltd
xlat
and
cld
jge
adc
xor
mov
add
xor
fs
leave
xchg
xchg
pop
insb
adc
push
cmp
xchg
jmp
xchg
arpl
jns
lcall
cmpsb
daa
shrl
pop
pusha
idivl
cmc
into
aaa
fildl
sahf
mov
or
cld
es
dec
imul
adc
pop
sar
push
pop
hlt
sbb
mov
adc
adc
mov
and
cld
sti
and
pop
out
cli
es
pop
in
sub
pop
hlt
sub
lret
aaa
push
pop
insb
nop
fwait
add
push
mov
stos
fst
cmpsb
clc
andb
add
cmpsl
sub
aad
cwtl
pop
mov
push
add
stos
mov
pop
enter
push
adc
dec
subb
stos
rcrl
arpl
push
imul
or
gs
xchg
or
aad
fmuls
adc
orl
push
movsl
in
mov
movsb
adc
inc
push
pop
lods
add
jge
xchg
mov
call
scas
xchg
ficoms
clc
jae
jmp
sub
orb
daa
fidivl
mov
xchg
xchg
sbb
pop
lock
iret
mov
sub
jnp
mov
add
imul
lahf
pop
sub
rclb
aaa
jns
inc
data16
add
loopne
or
lret
imul
mov
jo
sub
test
push
pushf
hlt
incl
adc
leave
fstpl
popa
jo
add
or
leave
jno
xchg
repz
and
adc
mov
push
cmpsb
aaa
out
add
add
jns
jne
emms
or
mov
add
jl
push
sbb
mov
sbb
push
mov
add
push
in
or
loop
sbb
or
or
dec
mov
sub
add
fcoml
push
ss
mov
jnp
mov
lea
jo
jo
pusha
in
fidivl
mov
inc
js
out
mov
jmp
push
ss
clc
outsl
push
stc
test
in
sbb
lret
je
jb
cltd
cltd
cld
xor
mov
mov
mov
jmp
ja
mov
adc
jl
aad
and
xchg
mov
pop
push
dec
cmp
daa
sbb
cmp
stos
test
cmp
cwtl
jno
mov
dec
insb
xchg
cmpsl
mov
and
sbb
push
mov
out
mov
addr16
mov
lds
and
push
mov
das
adc
cmp
aaa
jnp
cmp
adc
push
jae
pop
stc
stc
mov
inc
push
das
pop
ss
out
das
ds
cmp
push
cmp
rolb
negl
sbb
lea
lds
nop
shrb
push
int3
push
sbb
test
mov
add
scas
push
movsb
and
lock
test
in
xlat
sub
fmuls
scas
pop
add
mov
and
mov
ret
sub
mov
jg
stc
mov
into
sar
loop
repnz
add
adc
and
xor
dec
push
jle
outsb
jb
orb
faddp
into
sar
loop
repnz
add
adc
and
xor
dec
push
jle
outsb
jb
cmpb
dec
ret
loop
repnz
add
adc
and
xor
pop
push
jle
xchg
adc
in
mov
loop
xor
add
mov
sub
lods
sbbl
test
bound
mov
sbb
or
cmp
sub
pop
xchg
dec
imul
mov
test
fcoms
add
xor
or
aam
les
sub
pop
mov
push
cmpb
enter
call
out
xchg
dec
xchg
cmp
and
pop
movb
call
daa
clc
add
call
in
pop
or
aaa
mov
andps
das
dec
jecxz
int
add
flds
jb
popf
fldt
idivl
popa
or
nop
jmp
mov
leave
xchg
fdivr
inc
std
jae
popf
jg
aad
aam
cmc
xlat
sbb
mov
pusha
sub
inc
cwtl
jo
fadds
in
sbb
call
and
or
in
sbbl
fsubs
ja
jmp
mov
add
jo
jge
push
and
pusha
stos
mov
cmp
testl
xchg
xchg
dec
and
sarl
into
fmuls
fcoms
add
xor
mov
aam
insb
cmp
sub
pop
test
push
lods
push
sub
sbb
or
inc
lea
xchg
mov
xchg
add
adc
adc
add
pop
loopne
mov
pop
nop
pop
dec
mov
mov
cmpsb
dec
aam
fstpt
test
shll
out
daa
cmpsb
movsb
fistpl
mov
cltd
pop
enter
call
les
hlt
sub
pop
xchg
dec
test
push
inc
mov
adc
add
xor
and
aam
les
hlt
sub
pop
xchg
dec
test
push
adc
jae
or
setnp
mov
jb
aas
data16
int3
dec
stos
push
sbb
inc
std
fdivrs
xchg
fisttpll
movsb
or
push
sbb
adc
rcll
call
out
dec
out
xor
push
sbb
xchg
paddusw
loopne
mov
out
jecxz
mov
xchg
mov
lahf
std
adc
xchg
cmpsl
shr
inc
cmpsl
inc
cmp
pop
shlb
dec
add
test
ljmp
pop
out
inc
xchg
in
and
fsubl
adc
dec
dec
mov
into
sahf
inc
or
inc
lods
insb
mov
or
mov
rcrb
push
adc
popf
pop
das
push
arpl
pop
or
jp
das
or
andb
mov
mov
pop
push
lret
out
mov
data16
lret
pusha
mov
push
dec
leave
mov
or
out
dec
pop
outsb
jb
mov
pusha
stc
clc
int3
fdivs
cli
bswap
jge
cmp
sahf
xchg
loope,pn
cmp
lds
cld
jbe
lods
cmp
mov
in
in
in
lds
xchg
mov
mov
insb
dec
cmp
push
stos
xchg
push
or
sub
stos
pusha
rorl
fsubrs
push
adc
add
pop
mov
cltd
std
lcall
mov
loope
jbe
scas
fs
jne
inc
jbe
hlt
and
inc
test
add
and
xor
clc
lcall
loop
push
jns
xor
push
mov
push
pop
pop
pop
lcall
stos
sub
lds
xor
xchg
add
std
mov
das
into
fdivrs
push
mov
push
subb
cli
jno
out
stc
pop
dec
or
into
stc
adc
dec
call
fdiv
sub
adc
rcl
out
pop
jns
call
ret
or
jge
push
std
xor
outsb
test
mov
adc
push
call
mov
arpl
dec
pop
jne
cmp
movsb
leave
int3
and
icebp
ss
out
scas
les
add
cmpsl
or
lock
mov
xchg
and
mov
arpl
xor
hlt
jge
and
jns
and
lret
daa
mulb
out
cmp
xor
push
lods
mov
and
adc
inc
push
xor
scas
sub
lcall
mov
or
hlt
hlt
aam
popf
mov
and
jp
push
or
mov
push
xor
insb
cvtdq2ps
bound
push
std
inc
ds
add
fmuls
lea
aas
push
cwtl
fistps
inc
mov
bound
jmp
cmp
cltd
test
shrb
rclb
lret
lahf
jle
inc
or
orb
and
fwait
push
loop
lds
sbb
andb
mov
stos
dec
lret
stos
fldl
pop
dec
sahf
push
push
cmp
mov
pop
icebp
fcomps
cmpsl
xchg
aam
adc
pop
jmp
in
and
adc
mulb
cli
pop
dec
sbb
fcmovbe
jg
dec
subb
test
lea
sub
test
xchg
lods
xchg
mov
daa
cmc
pop
rcrb
pushf
push
add
fwait
sub
cmp
mov
cwtl
fdivp
ffree
sarb
or
jle
dec
imul
ja
mov
mov
mov
adc
inc
cli
sbb
jecxz
mov
mov
sar
add
cmp
int3
lcall
cmpsl
inc
xchg
inc
jp
push
std
pushf
pop
xor
shlb
jbe
loopne
in
test
xchg
iret
mov
sbb
xor
mov
mov
repz
adc
ror
jle
aam
inc
imul
sbb
jle
mov
or
inc
stos
dec
jle
jmp
loop
imul
and
in
jnp
enter
imul
gs
test
jge
add
out
leave
dec
inc
sarb
and
add
sub
nop
cmp
xor
mov
mov
mov
fadds
lret
push
mov
or
ljmp
popa
fistpl
pop
dec
repnz
xchg
mov
xchg
enter
sub
adc
jne
sbb
insb
ret
inc
clc
jl
cmpsb
xchg
mov
sbb
pop
mov
lods
sub
shrl
xchg
push
and
and
nop
not
js
mov
cltd
pop
mov
out
subl
push
xor
push
mov
cltd
xchg
sbb
jo
fstpt
je
xor
or
fistl
test
mov
addr16
add
aaa
test
test
and
stos
negb
loopne
add
jl
aas
fwait
sbbl
pop
sbb
mov
addr16
push
cli
and
and
push
jae
mov
imul
jp
push
lcall
repz
or
rcll
mov
addl
cmc
push
mov
xor
fildl
push
jle
orl
and
pop
fsubs
xlat
std
cmp
fidivl
xchg
adc
imul
mov
lock
imul
arpl
mov
call
fldt
push
lcall
push
jb
xlat
sbb
cmpsb
mov
loope
mov
out
jo
mov
data16
mov
movsl
inc
xor
mov
outsb
push
mov
sbb
cmpsl
int3
xorb
jg
ret
inc
int
sub
jbe
inc
inc
xchg
add
push
ret
scas
pop
in
mov
push
pop
pop
ss
popf
mov
imul
hlt
mov
mov
sbb
je
fstp
push
fadds
mov
imull
or
jmp
jb
mov
incb
dec
dec
push
adc
and
pop
lods
sbb
dec
lock
cli
mov
cmp
adc
outsb
cli
mov
push
jo
test
test
pop
pop
push
mov
ret
xchg
insb
fsubr
push
jno
push
and
arpl
in
stos
inc
mov
push
fldenv
in
outsl
push
testb
test
out
push
adc
scas
mov
mov
jns
loop
jl
dec
outsl
mov
xor
dec
mov
add
stc
and
xor
ja
popf
push
pop
fcompl
movsl
sub
jo
loope
mov
adc
jle
pusha
jg
cltd
xor
lret
jnp
and
iret
call
xor
jns
pop
mov
pop
jo
cmp
jecxz
dec
jmp
dec
add
imul
pop
icebp
push
jo
pop
adc
rcrb
sarb
sub
sahf
push
enter
pop
pop
mov
lret
push
jp
pop
mov
jbe
mov
mov
add
push
cs
mov
pop
cmpsl
sbb
aam
jbe
jae
adc
and
or
pop
mov
mov
cmp
cli
repnz
jmp
test
cli
cmp
and
ror
inc
mov
or
inc
sbb
fs
or
cs
xchg
mov
mov
dec
test
inc
int3
adc
inc
mov
jg
stos
cmp
pop
jo
mov
mov
mov
mov
pop
xor
push
mov
sbb
mov
insb
stos
insb
cmp
daa
fistpll
xlat
inc
push
movsb
fs
jle
outsl
arpl
out
and
adc
jg
ficomps
sbb
repz
jmp
mov
test
popa
mov
mov
mov
rorl
xchg
in
xorl
mov
loopne
bound
pop
bnd
enter
and
int
xchg
mov
std
dec
jge
adc
sbbb
mov
ss
shl
and
and
fisubrs
pop
jmp
ljmp
jbe
fists
mov
mov
sbb
js
sub
sub
push
jb
bound
scas
adc
cmp
and
adc
push
lds
xchg
adc
add
cli
cmc
mov
xor
sbb
fbstp
movsb
inc
punpcklbw
mov
call
and
stos
lods
movsb
clc
clc
aas
test
lea
out
sbb
lock
fisubs
aam
cmp
jne
imul
lock
add
mov
std
in
mov
fldenv
jns
mov
and
add
je
mov
nop
movsb
adc
cmp
mov
gs
jo
popa
sbb
out
sbb
sbb
addb
sub
inc
aas
cmp
pop
sahf
popf
xchg
lods
leave
sub
add
fisubrs
adc
cmp
divl
mov
inc
imul
cmp
add
scas
mov
pop
push
enter
and
scas
in
pop
ja
fstps
imul
pusha
inc
andl
sbb
ss
cmp
push
adc
mov
or
imull
lds
jl
jno
mov
inc
jg
dec
loope
sbb
push
xlat
lcall
aad
repz
xchg
dec
icebp
ss
or
das
push
mov
pop
mov
push
sbb
ljmp
push
cmp
lahf
out
jo
int3
and
leave
dec
dec
aas
pop
sbb
popf
and
xor
into
mov
push
sub
orb
enter
imul
xor
clc
or
in
pop
aad
sbb
xor
or
xor
xchg
jmp
sbb
outsl
mov
push
adc
mov
test
inc
xchg
xlat
inc
dec
pop
mov
and
sbbl
add
ret
push
mov
out
pop
imull
fisttpll
lock
mov
xchg
add
push
notl
jne
cmp
xor
and
mov
jno
xchg
cmp
test
push
jmp
out
maskmovq
sbb
addr16
sbbb
lock
sbb
pop
repnz
push
dec
xchg
or
xchg
test
add
ss
push
cmp
jmp
in
lods
fidivl
or
pop
hlt
sahf
mov
push
mov
mov
and
out
dec
xchg
iret
movsl
mov
push
push
sub
jb
or
push
add
and
cmp
ret
cltd
hlt
dec
push
fistpll
push
test
and
fcoms
jnp
add
icebp
mov
push
jno
push
jle
out
push
xchg
out
mov
push
in
mov
xor
sub
xlat
inc
pop
dec
shr
sahf
ds
cmp
mov
push
shll
rorl
mov
scas
addr16
shrl
sbb
pop
scas
pop
push
sub
int3
jmp
ds
jl
pop
filds
xchg
xlat
sysexit
add
insl
dec
jl
push
nop
pusha
cwtl
push
clc
push
xchg
pop
nop
pop
mov
sub
sub
inc
mov
shll
in
dec
push
lock
cmc
scas
xchg
rcll
pop
rcl
add
icebp
push
fdivs
or
hlt
push
loopne
xor
mov
stc
xor
scas
inc
jne
mov
lcall
inc
scas
xchg
or
sbbl
fdivrs
sbb
repz
popf
fstpt
pop
sahf
cmpsb
inc
test
shll
dec
in
in
mov
and
shlb
scas
pop
pop
lret
push
jl
mov
dec
inc
push
leave
bound
mov
pop
leave
xchg
add
mov
and
or
pop
sbb
cmp
jle
out
hlt
sub
jae
xchg
repz
push
stos
cmp
cmp
push
mov
cmp
in
mov
mov
xchg
lods
lds
insl
cwtl
xor
in
loopne
imull
bound
andb
imul
stc
adc
adc
adc
mov
test
push
mov
test
xor
jb
xchg
mov
mov
and
sub
xchg
enter
mov
push
adc
sbb
jmp
jge
stc
mov
call
sbbb
cwtl
test
or
leave
inc
fsubr
lods
cmp
out
mov
xor
dec
mov
sbb
mov
push
mov
add
dec
xchg
leave
push
cltd
les
jo
les
cmp
les
xlat
sub
in
mov
push
pop
lock
jle
mov
push
dec
dec
sbb
inc
test
pop
or
in
xor
pop
mov
lods
push
pop
pop
mov
ret
cmp
mov
mov
fisubl
sub
jecxz
idivb
adc
sbb
pop
jns
aas
js
inc
jne
adc
iret
lret
jmp
clc
call
aad
inc
adc
loopne
cltd
jge
nop
imul
fisubrl
dec
outsl
mov
sub
push
mov
out
add
pop
sub
push
aad
or
addr16
data16
xor
sbb
stos
pop
jp
inc
aaa
ss
je
int
loop
mov
adc
scas
jae
out
inc
and
mov
fisttpll
stos
scas
mov
movsb
movsb
idiv
fcomps
jle
push
mov
cmpsb
mov
xor
sarb
and
out
cmp
rclb
or
dec
mov
inc
xor
push
push
push
gs
dec
cmp
cmpsb
iret
jp
sub
fcmovne
mov
fwait
and
nop
loope
push
cmc
dec
cmpsb
cs
xchg
insb
mov
in
sub
mov
stos
cltd
dec
sti
outsb
inc
jo
das
push
sahf
jno
jle
add
out
sub
mov
push
addr16
cmpsl
push
aaa
or
nop
xchg
out
cwtl
mov
ja
push
pop
pop
mov
add
es
sahf
xchg
push
xor
mov
xor
pop
fwait
popf
adc
fs
in
das
xchg
and
xchg
int3
shrb
ljmp
jl
imul
dec
mov
mov
aam
and
scas
movl
dec
push
cs
cmc
dec
out
push
xchg
addl
arpl
sbb
or
mov
mov
sub
sahf
cmp
repz
mov
loopne
xchg
ret
push
adc
filds
xchg
push
out
or
mov
fsubrs
rcrl
dec
out
mov
loop
mov
js
in
or
adc
xlat
jmp
out
pop
and
mov
lods
and
out
sbb
andb
enter
inc
lods
mov
mov
shll
cmp
xchg
adc
mov
sbb
into
xchg
es
inc
cld
into
mov
cmpsb
push
cs
jae
push
cltd
fldt
popa
andps
jmp
add
cmp
loope
loop
ret
adc
rorl
aad
adc
fs
hlt
lret
movd
test
mov
aam
jns
test
xor
mov
cld
pop
cmp
mov
test
pop
xchg
sbb
movb
push
jnp
fnsave
sbb
sbb
and
and
gs
fstl
mov
or
fimull
dec
les
mov
cmovb
loope
sub
add
ds
inc
push
cmp
or
out
popf
jecxz
fisttpll
shl
pusha
sub
cmp
adc
loop
dec
cmp
lock
xchg
aam
int
ss
lret
aam
in
bswap
cmp
das
imul
mov
jg
repz
push
xchg
shll
xor
jle
xchg
jno
dec
cmp
repz
loopne
ret
push
or
xlat
popa
mov
fdivrp
lea
popa
jle
xor
push
pop
ds
imul
mov
mov
cmpsb
sar
sbb
mov
inc
sub
adc
cmp
lret
cmp
xlat
xchg
xchg
dec
add
hlt
push
shrb
lcall
int
inc
fcmovbe
fnstenv
sbb
gs
sub
js
jmp
jne
mov
mov
loop
push
shll
movsl
xlat
fbstp
std
sbb
lock
adcb
out
xchg
ljmp
jb
andl
jae
dec
in
fstp
inc
cmp
ret
adc
inc
sub
sub
cmp
cmp
mov
ret
mov
aas
push
lret
ds
mov
inc
call
jge
xchg
repnz
sub
in
cmpsb
jae
mov
jo
inc
fstpl
in
mov
pushf
frstor
push
adc
dec
cmpsb
in
negb
xchg
add
repnz
not
pop
ja
pop
pushw
mov
mov
mov
dec
sbb
mov
jge
dec
ret
int
loopne
dec
test
or
mov
adc
mov
out
in
push
mov
cmpsl
fiadds
call
add
in
push
jge
xchg
sub
scas
sti
sub
mov
push
or
cltd
aad
jb
mov
jns
adcl
jmp
ret
popa
pop
xchg
ret
lret
loopne
call
push
dec
dec
mov
adc
sbb
cwtl
push
repz
mov
mov
ret
push
xchg
mov
xchg
cmpsb
pop
mov
or
out
jae
shlb
jl
fs
testb
imull
fnsave
adc
dec
add
push
fidivs
daa
xchg
shl
adc
and
scas
rorb
jo
pop
fidivrl
jo
sub
or
cs
js
fistl
cmpsb
call
arpl
sbb
arpl
sub
pop
push
fmuls
xchg
popf
ja
xchg
rorb
sub
mov
and
mov
cmp
cmp
jecxz
xchg
nop
repnz
scas
cli
bound
addr16
xlat
xchg
jg
xor
xchg
lret
neg
lret
xlat
and
lds
pop
data16
jo
inc
inc
add
ja
push
sub
jne
inc
push
enter
xchg
sub
nop
insb
outsb
xchg
xor
sub
lods
add
sahf
mov
adc
mov
fwait
andl
mov
pop
pop
das
das
dec
in
out
push
nop
xchg
xchg
loop
test
stos
call
mov
les
xchg
or
lcall
pop
xchg
or
mov
aas
push
mov
jo
arpl
rorb
test
ja
loop
in
enter
adc
repnz
sub
cmpl
mov
jns,pn
hlt
clc
mov
dec
outsl
test
mov
mov
inc
cwtl
jg
movsb
aaa
ja
push
add
cmp
dec
fdivl
fwait
sarb
mov
jae
mov
mov
fldl
shrl
addl
mov
inc
ljmp
stc
xchg
push
mov
cmp
add
fcoms
mov
es
jp
shrb
add
mov
repz
jnp
rclb
mov
mov
mov
pop
rol
in
mov
dec
push
xor
shlb
std
xchg
outsb
or
push
or
xchg
push
sbb
test
cmc
sub
mov
lcall
mov
ljmp
cmpsl
std
sti
mov
dec
das
add
xchg
ret
xchg
mov
sub
mov
mov
xchg
repz
mov
add
add
pop
gs
push
sbb
cwtl
mov
bound
cmp
es
sar
add
mov
jle
or
arpl
mov
ret
mov
lahf
out
out
fmul
jp
jnp
int3
xor
orl
cmp
aaa
or
sub
test
mov
in
test
mov
je
fistl
lahf
dec
popf
push
jno
adc
dec
subl
ja
loope
sbb
jge
test
add
pop
mov
cld
fistps
push
push
adc
jmp
push
imul
cltd
loop
mov
shl
repnz
or
or
dec
nop
lods
cmp
shr
inc
adc
xchg
and
sarb
sbb
iret
and
sbb
ds
xchg
lods
dec
jmp
or
ja
test
mov
syscall
sahf
mov
xor
subl
ret
inc
enter
jno
cmp
and
or
pop
dec
mov
xchg
aad
cli
pop
adc
test
jle
jge
push
ret
outsb
out
mov
fwait
les
jge
icebp
scas
inc
mov
pushf
xor
movsb
pop
jmp
mov
dec
sahf
repnz
mov
pop
pop
push
and
repz
push
movsb
lods
lret
cmp
push
mov
and
jge
lea
repnz
popa
dec
fwait
inc
fmuls
enter
dec
mov
test
lret
sbb
dec
lds
fs
pop
shll
sbb
inc
xor
fs
sub
fcoms
add
xor
and
aam
les
hlt
sub
pop
xchg
dec
test
push
inc
mov
adc
add
xor
and
aam
les
hlt
sub
pop
xchg
dec
test
push
dec
mov
adc
outsl
clc
xor
and
aad
sarb
sub
pop
nop
dec
test
imul
nop
test
fcoms
add
mov
in
sub
outsb
xchg
hlt
sub
xchg
xchg
fcoml
in
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
push
adc
xor
nop
mov
fiaddl
or
add
add
add
push
add
add
add
add
add
mov
add
sub
mov
or
and
imul
int3
add
add
add
add
in
add
data16
add
add
add
add
add
test
and
fwait
add
add
add
add
add
add
dec
add
add
add
add
iret
add
add
add
push
add
repz
add
add
imul
mov
add
add
or
cli
add
add
inc
add
add
add
pop
add
test
sahf
add
popf
add
add
add
add
mov
sbb
or
adc
cltd
add
test
aam
mov
sub
pop
add
add
adc
pop
add
add
add
addl
add
add
sahf
add
add
add
mov
or
daa
add
stos
add
add
roll
sub
dec
add
add
add
add
inc
add
add
add
add
add
pop
add
add
mov
add
add
add
jns
push
add
add
add
add
add
add
add
add
dec
add
xor
mov
jge
nop
add
add
add
add
add
add
add
add
pop
add
cmp
dec
add
add
add
roll
lods
add
add
add
add
jmp
add
add
add
add
cltd
add
add
add
add
add
add
jge
cmp
add
add
add
add
add
add
je
pop
add
add
add
das
add
add
add
add
add
add
add
add
add
add
add
add
add
cli
add
add
jns
sub
sub
pop
add
add
add
sub
or
jge
adc
iret
add
add
push
add
add
add
jge
fadds
int3
add
add
add
add
or
sub
inc
add
add
add
adc
push
add
add
add
add
add
arpl
adc
dec
add
add
sbb
pushf
add
add
jmp
add
add
add
add
int3
add
sbb
xor
xchg
add
add
add
pop
xor
push
add
imul
adc
xchg
add
add
sbb
imul
or
pop
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
and
aam
pop
add
add
add
dec
add
add
add
add
nop
add
add
add
add
xor
jae
movsb
add
adc
add
add
add
push
add
mov
add
add
or
sub
push
add
or
add
add
add
xchg
add
add
pop
add
add
add
add
add
add
add
add
add
je
jb
mov
lret
jecxz
xchg
push
push
aaa
sbb
cmc
fwait
xchg
sbb
out
fsubrs
dec
les
ds
es
sub
jo
sub
call
push
adc
bound
inc
push
xchg
push
inc
fdivrs
inc
and
lahf
mov
lcall
lods
add
adc
imul
adc
dec
or
orb
jo
dec
jmp
mov
arpl
push
out
mov
mov
jl
test
or
enter
insl
xor
lods
cltd
mov
mov
ds
cmpsb
xchg
mov
jne
push
add
add
mov
movsl
xor
popf
add
inc
inc
cmp
jp
pop
out
mov
pop
les
mov
jp
xlat
hlt
popf
out
loope
test
jno
int3
aaa
xchg
loop
aaa
pop
adc
pop
sub
sarb
push
sti
popf
pop
movsb
mov
or
rcll
xchg
jo
add
add
popf
movsl
hlt
adcl
pop
test
popa
fwait
xor
pop
jne
jmp
and
push
xor
and
mov
add
notb
push
xor
xchg
mov
inc
cltd
add
lahf
add
ret
dec
scas
jns
jle
call
fsubs
imul
jb
pusha
pop
out
dec
dec
push
add
test
mov
push
cmp
test
adc
std
ficomps
push
dec
hlt
xor
mov
in
fisubrs
fidivrl
dec
shl
mov
movsb
and
pop
pop
xchg
mov
fs
aaa
cld
addb
cmpl
nop
jns
sarb
ret
movsl
dec
outsb
cmp
lret
push
inc
pop
jge
std
adc
cli
rcll
xor
cmp
leave
jp
movsl
sub
out
inc
and
std
fsave
divb
xorb
repz
jo
das
or
sbb
dec
mov
xchg
cmp
xchg
add
pop
mov
movsl
pop
mov
inc
push
mov
cmp
fwait
js
je
sbb
test
cmp
pop
push
mov
mov
xlat
icebp
push
pusha
roll
movl
inc
mov
sub
insl
mov
in
cmp
lcall
insl
dec
xor
and
das
cwtl
cltd
int
sbb
fdivp
mov
jo
shufps
jno
scas
testb
cmc
shr
mov
pop
filds
pop
pop
ja
mov
lods
mov
xor
jp
mov
sub
add
push
test
cmpsl
mov
sub
xchg
push
cs
inc
xchg
test
mov
sarb
add
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xor
add
pop
hlt
add
xor
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
push
add
in
hlt
add
in
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
sbb
add
and
add
sub
add
inc
cmc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
cmc
add
add
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
push
testb
pop
testb
testb
insb
testb
je
add
jl
add
test
add
xchg
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
add
mov
testb
fdiv
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
adc
add
cmp
add
pusha
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
add
int3
clc
add
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
clc
clc
add
add
add
or
add
and
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cwtl
stc
add
mov
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
pop
cli
add
fs
add
ja
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
nop
cli
add
cwtl
cli
add
test
add
mov
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
