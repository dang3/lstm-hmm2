adc
decl
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
imul
gs
xor
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
push
push
push
push
call
push
lea
push
push
call
add
leave
ret
push
rcll
xchg
divl
out
mov
out
xchg
adc
cmpsb
inc
mov
adc
ljmp
push
divl
out
xchg
push
xchg
jbe
xchg
inc
sarb
addr16
cmp
pop
out
mulb
push
jno
add
insl
ss
inc
cmpsl
push
iret
mov
xchg
fs
cwtl
adc
test
cwtl
inc
dec
xchg
push
xchg
inc
addb
push
jle
xor
inc
fmull
xor
or
mov
aam
add
cmpl
insl
dec
sbbb
mov
aaa
cmp
ret
pop
out
or
mov
mov
jle
inc
cwtl
cld
xchg
push
pop
jbe
cltd
data16
sti
and
loopne
xlat
pop
push
repz
inc
addl
ja
sub
mov
mov
enter
add
dec
or
sbb
movsb
pop
xchg
ja
xchg
je
adc
jge
adc
fs
stc
sub
cmp
aaa
mov
std
cmpsb
add
pop
pop
mov
xlat
inc
out
sahf
dec
pop
pop
push
out
xorl
inc
xchg
push
xchg
jbe
xchg
out
cmpsb
jne
pop
sub
jmp
inc
xlat
jg
inc
fwait
push
mov
xor
ljmp
xchg
aaa
add
push
mov
dec
add
test
add
cmp
data16
jecxz
xchg
xor
and
addb
push
notb
jb
dec
fwait
aaa
mov
push
xchg
jbe
xchg
inc
cmpsb
ja
addr16
pop
pop
out
mulb
push
xlat
push
divl
out
xchg
push
xchg
jbe
xchg
inc
cmpsb
ja
addr16
pop
pop
out
mulb
push
xlat
mov
popf
mov
or
imul
dec
icebp
addr16
mov
xchg
xchg
mov
cld
std
fwait
push
lret
ds
push
sbb
int3
adc
cmc
inc
iret
daa
out
cmp
in
mov
je
popa
lret
inc
lock
dec
dec
std
lret
test
into
mov
les
adcl
xchg
popf
mov
test
pop
push
mov
push
rorb
jge
sbb
hlt
test
add
jle
xchg
mov
inc
cmp
test
and
fwait
cmp
arpl
mov
xor
sub
add
inc
test
sub
bound
rcr
lods
cmp
out
jne
xchg
sbb
mov
sbb
or
sub
imul
insl
mov
or
sbb
xchg
imulb
xchg
mov
sub
cld
adc
add
cs
scas
les
js
fadds
int
xchg
and
mov
pop
dec
sbb
mov
loope
xchg
gs
mov
daa
out
incl
sti
xor
cld
mov
je
push
pop
mov
dec
push
lahf
testl
and
aad
adc
push
cli
jecxz
push
dec
sbb
je
jno
int3
dec
pop
cwtl
mov
mov
lea
fs
in
or
cmp
outsb
das
sbb
outsb
and
jb
fisubl
jbe
sub
out
lahf
xor
add
push
je
neg
mov
dec
xor
jb
cmp
out
ret
rcr
mov
stos
add
int
dec
cmpsb
xchg
js
repnz
mov
xor
fisttpll
cmpb
pop
push
cmpsb
ret
inc
nop
shrb
sbb
cmp
jne
loop
adc
cmp
in
dec
pop
dec
aaa
pop
fwait
adc
in
inc
sub
pop
shrl
push
mov
push
out
push
pop
fs
shr
loop
out
pop
add
not
cmp
adc
fwait
add
push
aam
or
sahf
daa
cwtl
cltd
in
idivb
stos
test
frstor
sub
out
popf
fnstsw
push
mov
insl
push
push
enter
xchg
pop
sub
les
daa
and
movsb
into
jle
cmpsb
add
jne
mov
cmp
cmp
jnp
addr16
imul
xor
rol
sbb
mov
out
pushf
xlat
jg
sub
aam
xor
nop
stc
int3
ds
popa
dec
orl
and
pop
xchg
out
mov
dec
mov
mov
dec
lret
cwtl
dec
rclb
cmpsl
dec
negl
push
inc
fisttpl
fwait
push
xchg
push
stos
xchg
xor
dec
in
pop
out
dec
sarb
cmp
fisubl
pop
out
out
sahf
dec
call
int
mov
sti
lods
or
adc
mov
jle
stc
imul
xchg
add
ljmp
mov
outsl
sti
mov
lock
jb,pn
stos
xchg
lods
push
xchg
inc
xor
xlat
scas
sbb
push
mov
enter
jp
inc
mov
fxch
in
fwait
out
sub
xor
pop
mov
ljmp
sub
dec
sub
cld
mov
aas
lock
mov
xchg
push
mov
and
push
add
mov
in
popf
insb
push
outsb
xchg
fucomp
push
sbb
mov
add
pop
xor
push
mov
cli
dec
nop
jnp
lds
into
out
mov
and
mov
lds
js
and
out
idivb
addb
xor
dec
mov
jns
pop
mov
shll
sbb
sub
pop
enter
sbb
iret
sahf
sub
cmp
shlb
in
rolb
pop
std
scas
movsb
popa
xchg
paddsw
enter
in
es
jg
xor
inc
xchg
fs
or
push
sbb
mov
mov
insb
lock
xor
fiadds
xchg
sbb
cmp
ss
push
pop
hlt
out
mov
xchg
xor
sbb
adc
adc
mov
in
mov
imul
pusha
sahf
out
cmc
out
jb
mov
lods
sbb
jmp
mov
cld
or
and
and
aas
lahf
stc
jmp
cs
sahf
add
clc
add
insl
test
add
xchg
pop
sbb
xchg
xchg
popa
test
dec
sti
and
push
cmpsb
mov
loop
fwait
into
or
sub
xor
add
loopne
mov
cmp
and
sbb
fdivs
push
push
jo
or
pop
out
sub
loopne
clc
push
repnz
rorb
push
sbb
ljmp
lahf
or
sahf
insb
push
cmp
xor
stos
stos
cmpsl
pop
mov
ljmp
scas
lock
repz
pop
js
cmp
jp
int
in
mov
jmp
mov
test
cmpsb
adc
dec
ljmp
inc
cmpsl
lock
dec
xchg
std
xor
pop
sbb
rorl
sbb
insb
fnstenv
cmp
mov
xchg
mov
mov
and
movsb
insl
jns
inc
lds
or
ret
gs
push
dec
cltd
mov
outsb
mov
ja
sti
sbb
enter
inc
scas
cmp
xchg
xor
addr16
mov
push
xor
jp
xchg
fwait
xchg
movsl
stc
imul
xor
and
shl
inc
pop
bound
pop
jp
movsl
mov
dec
jl
jno
dec
cld
arpl
push
ret
and
xchg
adc
scas
jmp
bound
pop
mov
and
pusha
sub
pop
pop
aas
scas
jne
scas
push
ss
xor
lock
cmp
sarl
mov
lea
mov
jmp
mov
gs
add
jns
jecxz
jne
and
pusha
cmp
inc
add
insb
xor
in
lldt
cmpb
cmpsb
sub
insb
jge
dec
mov
arpl
xchg
into
sbb
push
lahf
xchg
fwait
pop
lds
iret
iret
xor
mov
inc
adc
mov
dec
in
sbb
cmp
push
subb
rolb
sar
iret
movsl
xor
orb
push
add
movsb
mov
add
movsl
push
cs
in
es
pop
mov
scas
pusha
fsubrp
sub
jo
out
test
lock
inc
les
sbb
mov
push
insl
adc
stc
ret
mov
cld
jo
cmp
inc
inc
mov
inc
pusha
js
scas
add
push
push
mov
and
push
stos
ds
and
push
sub
addr16
mov
add
pop
adc
pop
lret
int3
mov
adc
dec
mov
push
sub
jmp
mov
rorb
ss
jns
or
cltd
jne
fdivrs
or
xchg
pop
je
cmp
sbbb
sub
mov
sub
jmp
hlt
mov
xchg
maxps
imul
or
mov
fs
fildll
cmpb
les
cmp
mov
dec
sbb
push
inc
inc
add
fisubl
pop
push
or
ss
sarl
jb
pop
xlat
test
mov
pop
push
jmp
adc
mov
imul
popa
dec
dec
sub
mov
stc
push
or
add
pop
adc
mov
sub
aad
das
sbb
xchg
inc
out
frstor
arpl
cmp
push
daa
in
and
adc
sbb
pop
xor
sub
jle
lock
pusha
hlt
jbe
sarb
lods
jp
cmp
add
in
adc
outsl
push
rolb
out
mov
pusha
jle
in
aad
push
pop
sub
out
sub
mov
scas
pop
mov
nop
inc
push
lcall
pop
jl
mov
test
mov
push
fimuls
mov
add
mov
pop
mov
jl
sbb
loop
roll
gs
dec
leave
shrb
sti
inc
aaa
mov
insl
pusha
push
add
pop
sub
dec
pop
dec
mov
out
pop
or
aas
enter
inc
mov
int
mov
leave
mov
movsl
or
andl
dec
lock
shlb
pop
lret
js
in
push
rclb
and
mov
and
pop
shr
cltd
and
pop
mov
xor
out
push
lea
ljmp
xor
jae
jo,pn
nop
cmp
inc
cmp
stos
cmp
xchg
imul
and
push
xor
mov
sub
or
sub
leave
xor
mov
xor
push
std
and
mov
fwait
sbb
or
fisttps
add
add
pop
jmp
sbb
and
adc
xor
mov
pop
xor
cmp
test
lock
dec
xchg
xor
jecxz
call
mov
mov
push
sbb
aas
adc
and
inc
imul
sbb
xchg
clc
scas
pushf
test
jl
xor
push
int
jbe
inc
and
sub
ret
outsb
je
aas
inc
cltd
nop
rorl
fwait
stc
mov
stos
aad
sub
ret
shr
jo
pop
sti
inc
fiaddl
test
imul
je
outsl
mov
sbb
out
lock
lcall
mov
out
addl
xor
push
xor
xchg
adc
push
pusha
dec
lret
in
out
sbb
dec
mov
xor
out
movsb
dec
cmpl
mov
mov
adc
es
addl
int
test
testl
pop
sti
add
call
call
sbb
mov
ret
imul
xchg
mov
addr16
outsb
push
cmc
xor
aam
out
out
pusha
mov
repz
cmp
or
mov
into
push
js
jb
jnp
jmp
dec
mov
test
daa
cs
jnp
aas
add
lock
ficompl
fdivrs
in
cmp
imul
adc
pop
sahf
push
pushf
inc
xchg
sub
in
xchg
jp
out
stc
test
sbb
cmp
mov
or
in
out
fcom
loop
adc
jmp
lods
add
in
aas
xor
inc
jne
and
pop
iret
clc
jmp
xor
out
push
aad
cmp
push
mov
push
sub
out
movsl
rolb
pushf
das
ljmp
call
jno
push
ret
pop
push
jecxz
adc
dec
sahf
mov
fs
sbb
push
aam
clc
pop
pushf
xchg
stos
pop
popa
movsl
jle
xchg
mov
aaa
bound
sbb
cmp
int
lcall
mov
rorl
out
mov
cs
adc
mov
ljmp
jmp
in
cltd
clc
and
or
mov
mov
shl
nop
push
call
push
fsts
mov
fdivl
int3
test
icebp
fcom
or
pop
idivb
fs
inc
push
clc
data16
pop
pop
mov
pusha
sbb
jge
je
xchg
push
dec
cmc
xlat
dec
sarl
in
addr16
enter
out
sub
jge
daa
dec
mov
cmp
fwait
sub
xchg
test
cmp
cmpsl
mov
jnp
bound
push
sbb
pop
js
or
sub
push
xchg
fs
adc
clc
insl
ss
cmc
js
stc
aam
je
sahf
and
ds
xlat
jle
jno
es
stos
xor
rclb
out
sub
xchg
adc
or
out
or
mov
adcl
sbb
fdivl
pusha
sub
das
xlat
jno
jp
pop
pop
shll
jp
fcompl
pop
ljmp
and
mov
adc
jl
clc
pop
gs
sbb
or
hlt
shll
fdivrp
sub
in
repnz
ja
pop
lss
repz
cltd
out
sti
pusha
popf
cmp
aas
ss
pop
fsts
out
sub
ds
addr16
push
into
xchg
ja
test
pop
xchg
push
xchg
es
inc
into
stc
and
lahf
cli
mov
adc
outsl
int
bound
das
cmp
push
and
jmp
js
fwait
rcll
xchg
pushf
inc
push
fmul
sti
aad
stos
cmp
mov
rolb
out
call
xor
adc
cmp
sub
les
subb
hlt
lea
xor
nop
sarl
jno
in
cltd
pop
inc
lds
cmpsb
ret
lods
add
loopne
adc
xor
sbbb
mull
in
iret
jmp
add
push
rcr
cmp
add
and
jae
aam
and
add
dec
add
xchg
adc
lret
into
andb
sub
jns
ret
sub
and
cmp
pop
sbb
movsb
add
pushf
cmp
pop
push
cld
mov
add
mov
and
xor
sub
ljmp
push
fnstenv
mov
sti
push
sbb
inc
add
lods
xchg
inc
rcrl
mov
inc
ds
mov
int3
and
sbb
dec
out
and
fisubl
jno
mov
mov
sbb
and
xor
cmp
cmp
out
dec
in
das
sbb
ficompl
dec
mov
cmp
out
dec
jge
add
fs
sbb
mov
lret
stos
push
incl
enter
jb
cmp
lcall
enter
mov
and
outsl
out
and
rolb
mov
adc
inc
sub
lahf
jnp
enter
aam
cmp
fcoml
mov
icebp
inc
das
mov
cmp
icebp
je
jbe
sahf
fistps
int3
dec
shlb
mov
mov
sti
lcall
rcr
pop
sbb
in
pop
sbb
mov
mov
fldt
movl
mov
shl
mov
xor
fstps
dec
rcll
xor
push
ret
aam
pop
mov
js
jo
jno
das
or
out
xchg
adc
pop
leave
pop
xlat
shlb
iret
and
punpckldq
sarl
in
out
mov
ds
push
or
call
sarb
cli
lds
mov
jg
mov
insb
xchg
arpl
pop
scas
jge
and
inc
pop
mov
mov
and
and
jmp
fs
inc
pop
sub
in
xor
pop
pop
jb
scas
xor
loope
leave
jae
or
fstl
sub
cmp
mov
sti
inc
xor
loop
sbbb
mov
push
xor
mov
jno
imull
cs
loop
adc
dec
cmp
fimull
inc
and
mov
jg
lea
sarl
push
leave
sti
and
inc
rorl
push
xchg
cmp
and
dec
xchg
shll
inc
mov
pop
cmp
mov
in
std
outsb
sbb
push
push
cld
rorl
pop
int3
fdivrp
sti
xchg
out
push
popa
push
cmp
dec
push
or
sub
dec
mov
call
xchg
into
inc
jle
or
aas
fidivrs
ljmp
dec
in
sub
push
ss
mov
pop
mov
jbe
pusha
lahf
das
mov
pop
jno
mov
add
inc
jbe
pop
test
cmp
xor
and
jp
xchg
push
mov
inc
loope
call
jge
or
in
inc
sbb
and
mov
sbb
jp
adc
or
insb
lcall
add
arpl
and
push
pop
lcall
fsubp
loopne
sub
test
es
cmp
lds
push
or
mov
dec
loopne
or
pop
push
xor
cld
mov
popl
call
das
popa
in
pop
je
adc
dec
lret
clts
add
and
mov
or
xor
lcall
insl
push
jno
mov
hlt
mov
ds
daa
xchg
adc
arpl
cmp
scas
lods
mov
inc
addr16
out
addr16
call
mov
jmp
and
fsts
fcmovnb
mov
sub
movsl
inc
mov
fneni(8087
bound
imul
scas
mov
lock
inc
call
cmp
jno
adc
xchg
popa
mov
mov
sbb
test
in
fs
insl
arpl
xor
rcll
fbld
hlt
jmp
pop
mov
mov
dec
and
shrb
adc
ljmp
mov
out
cmpsb
cld
scas
push
fnstenv
pop
mov
lret
sbb
push
ror
dec
add
fmuls
mov
push
xchg
sub
and
std
mov
push
lret
int
pop
addl
insl
mov
mov
incb
lcall
cmp
cmpsb
cmpsl
dec
inc
cmp
dec
aam
mov
sbb
sbb
pop
cmp
into
adc
dec
jp
dec
jle
shr
leave
dec
notl
and
xlat
test
xchg
dec
xor
mov
mov
xchg
add
testl
sub
call
sub
out
jnp
jecxz
rorl
cmpsl
cmp
outsb
shll
mov
sete
mov
lods
cmp
sbb
incb
nop
push
mulb
mov
jmp
sub
or
gs
out
fdivrs
ljmp
arpl
out
mov
pop
push
sahf
fs
xchg
ss
inc
xchg
loope
fwait
out
push
test
lods
mov
jne
xchg
cmpsl
icebp
adc
mov
popa
mov
lcall
jne
jmp
leave
in
add
mov
adc
xchg
pop
stos
and
fsubl
cli
movl
push
add
mov
push
pop
pusha
hlt
cmp
inc
sub
inc
xchg
and
push
in
bound
repz
fbld
jge
pop
jl
add
fdivs
lock
sti
ds
jb
push
test
cld
push
adc
jo
jnp
movsl
xor
add
bound
cmp
push
nop
cli
cmp
mov
rcrl
daa
lahf
loop
pop
and
mov
or
jecxz
stos
sub
testb
cmp
push
icebp
mov
addl
popf
jl
lea
push
scas
mov
inc
push
test
xchg
into
dec
rolb
scas
push
pop
aad
in
das
call
std
test
sub
dec
call
or
jmp
and
je
in
addr16
pop
cld
into
bound
lods
pop
dec
stc
stc
adc
orb
fnsave
or
fcoms
ret
repz
lret
xor
cwtl
test
xorb
scas
adc
mov
and
push
push
xchg
sub
aaa
sub
mov
nop
or
mov
movsl
aad
add
jmp
hlt
mov
pop
mov
mov
sbb
mov
loope
fwait
stos
cmpsb
shlb
or
leave
lods
enter
mov
test
test
scas
cmp
sbb
pop
dec
out
ss
cmpsb
xor
aam
pop
mov
loope
aad
movsb
and
xor
xchg
rcll
sbb
sub
xor
mov
add
inc
popf
out
fistps
mov
fcomps
sub
shlb
sub
call
repnz
das
push
add
push
mov
test
fcomi
aam
sub
outsl
adc
stc
dec
xor
popf
lds
clc
mov
int3
scas
cmpsb
xchg
and
add
shrb
insb
sub
iret
jbe
mov
xor
dec
jmp
into
mov
insl
mov
jns
mov
gs
xchg
lds
cmp
mov
mov
or
test
adc
push
xor
stos
je
push
pop
cmovo
jno
xchg
das
ret
int3
and
xor
sub
js
and
xor
mov
aam
jne
mov
sub
daa
stos
mov
jno
fucomi
out
iret
ror
loope
sub
iret
xchg
fdivrs
cmpsl
push
dec
testb
adc
mov
xchg
adc
jle
addr16
add
fiadds
lock
and
xor
pop
add
xchg
mov
faddl
int3
and
outsl
stos
in
inc
xor
mov
mov
lods
mov
dec
pusha
test
pop
test
scas
adc
addr16
repnz
sahf
xchg
inc
cmp
daa
lret
sbb
jle
adc
xchg
jl
inc
pop
loope
fs
pusha
mov
out
icebp
adc
ds
xor
je
add
mov
fmul
xlat
pop
and
jns
jl
dec
fbstp
inc
xor
out
push
jnp
imul
mov
mov
es
outsl
adc
bsr
int3
int
mov
jno
mov
xchg
les
jno
dec
repz
cmp
out
cmpsl
nop
test
aad
fwait
xchg
or
or
push
dec
xchg
jb
inc
mov
adc
jmp
ret
mov
in
rorb
mov
call
lods
mov
jbe
pop
pop
cld
es
xchg
insb
adc
add
pusha
les
jae
ss
xchg
push
xchg
jbe
xchg
inc
cmpsb
ja
addr16
pop
pop
out
mulb
push
xlat
push
divl
out
xchg
push
xchg
jbe
xchg
inc
cmpsb
ja
addr16
pop
pop
out
mulb
push
rcll
leave
es
ss
xchg
push
in
data16
cmpsl
xchg
inc
cmpsb
ja
outsb
adc
pop
out
test
xor
and
adc
cmpsl
inc
xchg
push
xchg
jbe
xchg
mov
mov
pop
jg
dec
or
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
dec
aam
clc
hlt
call
out
xchg
int3
movsb
pop
sbb
jns
push
add
xor
and
aam
stc
hlt
call
test
push
dec
inc
sbb
sbb
add
xor
and
aam
clc
hlt
call
test
push
dec
sbb
jnp
popa
push
sbb
push
test
enter
mov
addl
dec
xor
cmp
push
pushf
adc
mov
inc
dec
lea
xchg
xor
mov
in
test
pop
aam
leave
negl
add
inc
pop
add
leave
cs
enter
insl
pushf
pop
xchg
enter
add
cwtl
aaa
movsb
test
test
dec
stos
mov
clc
adc
cli
sub
and
stos
movsb
std
imul
test
xor
push
add
xor
fisubl
push
enter
insl
movsb
js
inc
dec
inc
mov
sahf
pop
or
adc
push
cmp
xor
hlt
call
test
push
dec
inc
js
push
add
xor
dec
lods
rorb
fcomi
in
in
push
int
xor
or
insb
push
inc
popa
push
dec
pop
push
mov
mov
std
clc
in
enter
rorb
and
add
jnp
push
nop
out
fwait
xchg
sbb
mov
movsb
pop
push
dec
inc
js
push
add
xor
and
aam
clc
hlt
call
test
push
dec
inc
js
push
add
xor
and
aam
lods
jne
mov
imul
pop
out
mov
xor
xchg
mov
xchg
loopne
dec
adc
push
xchg
and
inc
outsb
shrb
and
das
inc
push
pop
jp
movsb
arpl
mov
jmp
jecxz
pop
stos
js
stos
rorb
sbb
jne
das
std
add
adc
and
rclb
adc
and
subl
or
lods
aam
or
sub
es
push
mov
stos
xchg
inc
cmp
daa
sbb
mov
push
pop
test
mov
pop
push
js
das
aaa
sahf
add
add
loope
sub
rcr
cmpsb
leave
outsb
es
hlt
inc
inc
pop
jae
pop
sbb
or
sub
pop
out
sbb
mov
dec
adc
or
hlt
jns
mov
mov
sub
jecxz
movsb
cmpb
sbb
dec
dec
lods
lock
xor
push
or
xlat
and
jns,pn
je
popa
test
mov
cmp
scas
inc
clc
int3
mov
cmpsl
aad
subb
sbb
sub
lret
cs
add
mov
push
xor
js
lret
jge
mov
ds
and
adc
jnp
dec
adc
repnz
cmp
loopne
test
das
adc
pusha
shrl
stc
or
repnz
fisubl
pop
lods
xchg
ror
or
js
movd
xchg
xor
cwtl
mov
mov
xor
push
inc
pop
push
cld
testb
mov
xchg
fwait
lea
popa
mov
out
outsb
shr
sarl
fstl
decl
jg
fistpl
adc
xlat
popf
jns
jns
and
hlt
jl
jne
jmp
jecxz
xorb
pushf
dec
dec
loop
pop
pushf
notl
cltd
icebp
daa
xchg
sub
enter
enter
mov
faddp
frstor
imul
out
mov
adc
arpl
pop
test
das
fs
sbb
or
stos
xchg
or
xor
cli
add
mov
sub
je
mov
shlb
add
filds
dec
push
inc
shll
movsl
ret
and
or
and
cmpsl
test
cmc
xchg
mov
mov
inc
les
je
lahf
mov
sub
les
jae
jp
mov
adc
xor
mov
xchg
mov
xlat
daa
aas
aaa
cmp
les
xor
pop
jns
lret
pop
std
adc
repnz
cmp
popf
mov
scas
loopne
jnp
sar
push
fwait
jnp
stos
inc
inc
popf
sar
mov
fdivrs
ja
scas
mov
repz
mov
jmp
sbb
push
aas
hlt
push
add
cld
or
ret
mov
ficompl
and
dec
cmp
push
mov
dec
sub
add
cmp
rcr
mov
ss
addb
in
push
call
jns
push
mov
popa
in
mov
cmp
xor
xor
cmp
sub
xor
arpl
pop
push
aas
outsb
jmp
nop
in
mov
pop
pop
cwtl
movsl
int
lret
push
test
jl
cs
jns
sbb
movsl
mov
bound
enter
xlat
inc
popa
ss
mov
stos
cmp
and
add
test
mov
mov
in
jbe
mov
inc
lds
imul
jb
or
inc
xchg
jnp
aad
adc
insl
cld
outsl
pop
dec
sbb
movsb
outsl
insl
jmp
js
fs
pop
inc
mov
lods
loop
push
xchg
pop
clc
lahf
mov
pushf
pop
and
mov
xchg
ljmp
pop
add
imul
in
ret
pop
cmp
je
mov
cmp
sbb
ljmp
pop
subb
or
sub
pop
jbe
xor
inc
divl
addr16
mov
iret
repz
push
cmpsl
add
cmp
pop
mov
in
and
lahf
fiadds
sbb
jmp
jns
rorl
sub
push
scas
mov
ret
mov
adc
adc
xchg
and
in
lods
scas
xchg
loopne
sub
loope
cli
cld
push
mov
push
xchg
test
xchg
pop
add
pop
cmp
inc
aaa
inc
sub
mov
mov
in
dec
mov
imul
fdivrl
cmp
into
or
notl
mov
enter
out
pop
lock
loopne
ja
push
dec
cmpsl
dec
cmpsl
cltd
sbb
xchg
push
fsub
sub
mov
and
xor
and
dec
sahf
mov
jns
mov
xchg
stos
sbb
mov
cli
cwtl
gs
and
jmp
and
add
push
nop
clc
into
mov
test
xor
xchg
mov
sbb
lods
jae
inc
adc
adc
xchg
push
aad
jbe
icebp
adc
sub
jnp
aaa
xchg
movsb
push
shll
add
mov
cmp
mov
or
notl
fdivrs
push
add
andb
divl
pop
and
mov
xchg
jns
add
push
or
in
ljmp
ljmp
jl
lahf
add
iret
pushf
and
dec
mov
and
sbb
scas
adc
jo
insb
mov
pop
out
pop
lahf
lods
loop
cs
popf
loope
shrb
or
sub
test
les
or
mov
xorb
mov
cltd
and
jae
push
es
push
and
cmp
jmp
roll
in
sar
in
xlat
sbb
push
mov
mov
xchg
xchg
in
lea
mov
cmpb
hlt
pop
xchg
es
dec
cmc
data16
icebp
or
sub
pop
sarb
xchg
inc
push
pop
dec
out
leave
test
stos
mov
rclb
pop
xor
dec
rcrl
mov
mov
pop
cmp
lea
ds
sub
addr16
jecxz
pop
lea
mov
cmp
sbb
sub
push
jno
lahf
and
stc
push
lods
mov
faddl
out
mov
mov
dec
popa
xchg
jmp
inc
pop
xchg
fld
lea
push
stos
push
cltd
enter
or
cmp
nop
inc
jg
movsb
xchg
or
pusha
push
adc
adc
mov
gs
mov
pop
and
push
ss
pusha
sti
mov
insb
xchg
enter
or
push
mov
jmp
data16
inc
or
lahf
xchg
notb
fstl
sti
or
out
sbb
mov
jecxz
inc
in
sub
aas
lret
mov
test
and
das
sub
inc
and
and
ss
out
mov
repnz
pop
loope
ficomps
cmpsl
adc
sub
fs
dec
jp
cltd
shrl
cmpsl
shlb
lcall
mov
cmpsl
adc
and
xchg
fadds
cli
cmp
cmp
les
xor
addb
cmp
movl
stc
cmp
cmp
push
into
repz
sub
jbe
inc
push
pop
jg
jl
cltd
push
arpl
fwait
arpl
fiadds
push
adc
jo
adc
inc
push
enter
lret
fwait
lods
mov
and
or
sbb
cmpb
popa
sub
xchg
inc
stc
testb
mov
movsl
xor
je
stc
lret
bound
movsb
mov
js
push
pop
lcall
adc
dec
inc
xor
pop
in
call
aaa
test
lahf
add
gs
push
cltd
mov
push
inc
aaa
jecxz
data16
jo
repz
call
enter
es
aaa
insl
dec
push
jae
movsl
xor
aam
mov
cmp
lret
mov
jmp
cmp
lahf
nop
mov
jle
mov
and
fs
roll
rcl
mov
inc
imul
lock
mov
pop
add
pop
sub
sub
loope
ja
lret
inc
jb
xchg
xor
push
mov
fldenv
mov
inc
mov
push
pop
push
out
stos
pop
scas
andb
xor
xor
adc
pop
loop
dec
pusha
jns
outsl
xchg
iret
ret
iret
pop
dec
cmc
das
mov
negb
cmpsl
mov
xor
push
sub
push
mov
or
and
enter
dec
call
jg
in
clc
xor
out
mov
sbb
sahf
push
popa
addr16
in
in
and
mov
jnp
lahf
add
xchg
insl
ss
pushf
repnz
roll
or
outsl
mov
sbb
xchg
mov
sbb
sti
add
insb
int
pop
jae
mov
test
es
and
and
sub
outsb
sbb
xor
outsb
sbbb
push
mov
aam
dec
bound
inc
adc
and
arpl
push
test
cmc
jb
cmc
mull
jns
lea
mov
inc
stos
jge
sub
mov
push
cld
out
rorl
mov
mov
inc
cmpsb
jb
into
pop
repnz
hlt
iret
leave
enter
push
js
gs
or
inc
push
inc
adc
fwait
ss
dec
in
cmp
aam
mov
dec
xchg
mov
outsl
or
xor
mov
into
add
add
sahf
jp
popl
out
aad
mov
mov
mov
fdivl
pop
inc
mov
in
orl
or
jmp
rcll
in
ds
dec
and
cmc
outsb
daa
xchg
jecxz
sbb
mov
iret
jle
jl
jecxz
sub
adc
jmp
or
jp
cmpsl
inc
sub
lcall
mov
xor
cmp
ljmp
ds
pop
push
js
repz
pop
push
ss
adc
mov
aad
jg
pushf
push
cmp
adc
or
cmc
sti
sub
outsb
loope
sbb
pop
divb
push
mov
jmp
jo
xor
xchg
dec
daa
jge
dec
or
or
jecxz
imul
adc
sarl
pop
movsl
stos
movsb
mov
shrl
add
addl
mov
fdivrs
add
enter
xor
cli
scas
in
mov
fisttpll
adc
test
mov
leave
imul
inc
mov
inc
imulb
test
or
aaa
push
mov
es
jae
fldt
fs
xor
lods
scas
flds
ss
stc
xchg
xchg
or
leave
int
cmpsl
out
mov
cltd
dec
mov
popa
shlb
arpl
pop
dec
dec
lret
roll
xchg
mov
scas
xchg
test
add
fmulp
xor
rcr
jmp
test
inc
mov
imul
add
jle
sub
jl
scas
jns
out
xchg
and
fnsave
dec
pop
mov
mov
add
push
push
mov
lahf
push
mov
sub
sub
daa
sbb
and
leave
test
and
cmc
shll
divb
pop
and
mov
mov
jmp
mov
push
subl
andl
xchg
lock
lret
jp
push
test
jnp
ljmp
loope
aaa
and
pop
add
cli
mov
dec
ret
xchg
xchg
mov
in
aam
cs
je
es
jae
stc
cmpsl
mov
icebp
push
inc
sti
daa
mov
jecxz
test
mov
mov
repnz
or
sbb
or
test
aad
cltd
adc
push
loop
notb
jmp
cmp
xor
rorb
pop
data16
add
test
dec
xchg
pop
jno
cmc
jb
dec
xlat
loop
sti
enter
or
cmp
inc
jle
mov
mov
and
shll
call
and
cld
mov
andl
cmp
in
arpl
jo
sti
test
das
push
mov
cmc
les
or
sbb
mov
sub
pop
and
sbbb
dec
into
inc
dec
fwait
cmc
and
pop
or
ss
div
imul
add
cs
or
jl
out
mov
add
mov
lea
andb
and
arpl
push
or
inc
add
or
ret
scas
addr16
outsb
sbb
mov
ds
imul
and
daa
sbb
sti
xor
or
mov
mov
and
icebp
or
mov
ret
ficompl
fmull
mov
pop
jns
push
adcb
pop
nop
xchg
ficoml
adc
xor
push
xor
loopne
ss
filds
xchg
cmpsb
adc
out
pop
adc
enter
adc
rolb
les
cmp
add
test
and
adc
or
adc
cltd
jg
pop
test
jbe
aaa
shll
push
jo
xlat
lcall
or
ljmp
scas
and
push
pushf
mov
dec
ljmp
stc
pop
nop
ljmp
mov
dec
sbb
mov
adc
xor
nop
cmpl
jae
ficompl
pop
mov
xor
test
lcall
arpl
es
popf
inc
lock
xor
int3
test
jnp
push
xchg
lret
imul
cmp
jbe
rcrb
fucomip
push
test
into
fiadds
mov
mov
aaa
inc
mov
sti
sbb
int3
stos
dec
scas
pop
jne
and
iret
pop
push
add
es
lock
sti
clc
shr
xor
les
jecxz
pop
xor
mov
dec
shlb
mov
test
lret
cmpsl
ljmp
mov
jbe
popa
test
push
fistpl
xor
xor
test
pop
std
or
stc
inc
ror
pop
cmpsb
cmc
adc
dec
ret
push
test
xorb
sarl
data16
push
mov
pop
test
stos
movsb
es
repz
add
xor
clc
sbb
idivl
cmp
jge
mov
mov
int3
mov
shl
das
in
notl
mov
sbb
jae
dec
push
push
xchg
sbb
sbb
pop
or
lds
push
mov
arpl
popa
shll
push
sub
sub
push
rclb
ss
mov
xor
mov
jns
repz
lcall
sbb
fwait
adc
and
cmpb
adcb
mov
lods
mov
xchg
out
mov
cmp
out
in
stos
add
lret
lods
add
mov
add
push
xor
jg
out
mov
aad
dec
imul
sbb
inc
imull
sub
inc
mov
mov
fcoms
add
outsl
mov
cltd
scas
popl
add
hlt
xchg
dec
in
js
mov
mov
cmp
fidivl
jl
sub
mov
sbb
push
fsubrp
stc
inc
insb
xor
mov
push
dec
adc
rcrl
les
int
jl
cmp
lods
loope
push
dec
jae
imul
dec
test
cmpsb
cmp
add
mov
xchg
jne
das
int
shr
iret
sbb
sub
mov
lcall
jae
gs
and
pop
lea
mov
arpl
xchg
fnstcw
xchg
and
jns
loope
leave
push
negb
scas
jecxz
push
mov
jmp
es
xor
lock
jnp
dec
adc
popa
jns
cmp
jg
out
inc
jbe
lods
mov
lahf
push
mov
scas
ss
cmp
mov
imul
aam
and
cmp
repnz
int3
addr16
les
inc
jno
xchg
loop
ss
test
jne
int3
je
loopne
jo
in
add
cmp
imul
sahf
xchg
mov
sbb
xor
fs
and
enter
xor
xchg
adc
cmpl
push
mov
lcall
ljmp
outsb
or
mov
adc
push
cld
test
jns
sbb
daa
jno
jne
mov
mov
push
xchg
in
dec
addr16
mov
sub
dec
in
push
push
mov
or
jmp
jne
jns
sbb
imul
shrl
add
aaa
push
xchg
add
mov
lret
and
stc
or
mov
mov
jne
mov
and
cmp
loopne
mov
movsl
mov
xchg
imul
movsb
repz
fildl
das
adc
cmp
jle
stc
cmp
stc
test
push
js
inc
mov
mov
mov
cld
or
test
or
or
mov
cmpsb
add
addl
sub
call
sbb
pusha
aaa
mov
repnz
lock
pop
jmp
insb
jg
cld
mov
fcmovnb
pop
mov
or
aas
and
mov
outsb
mov
mov
jns
or
push
add
pusha
fmull
add
and
or
fimull
xchg
sbb
mov
sahf
into
xchg
pop
sub
leave
cmpl
sbb
xor
cmp
push
xor
stos
fwait
xchg
mov
jne
jle
add
aad
aad
daa
movsl
or
xchg
stc
in
lahf
dec
jno
jecxz
movsb
in
pop
adc
je
xchg
sub
into
adc
sbb
mov
dec
cld
mov
mov
mov
push
sbb
xchg
lahf
out
xchg
cmpsl
xlat
leave
dec
lcall
pop
pusha
outsb
aaa
add
out
or
stos
cltd
cmp
pop
xlat
or
mov
dec
call
sub
sbb
sub
out
mov
add
popf
movsl
fcom
jle
mov
aaa
lret
movsb
sti
push
inc
fnstcw
pusha
cs
xrelease
call
xor
mov
mov
push
and
jle
or
xchg
inc
arpl
push
mov
scas
pop
xchg
mov
inc
pop
leave
mov
sbb
mov
popa
repz
mov
or
out
inc
lcall
pop
jg
ss
jbe
in
pop
pop
mov
popf
sub
in
mov
fidivl
xchg
stos
hlt
aas
sub
test
xorb
adcb
jge
jl
pop
and
mov
setl
icebp
sbb
pop
xor
mov
pop
cmp
icebp
mov
fldcw
add
loopne
add
sbb
xchg
push
popf
mov
in
lods
shrl
xchg
mov
pop
aad
and
and
sub
mov
subb
enter
inc
pop
add
mov
inc
sahf
cltd
js
ljmp
movsb
test
push
out
pop
cmc
ss
mov
pop
ja
xchg
jns
mov
jmp
or
jecxz
jb
loope
call
mov
push
mov
and
dec
mov
out
xchg
and
lcall
movsb
fstpl
fwait
or
xor
mov
xchg
jae
xor
int3
jge
fwait
xor
sub
stc
dec
push
xchg
push
test
pop
scas
mov
mov
sub
inc
inc
mov
push
ljmp
sbb
insl
jns
jns
stc
xchg
mov
inc
ljmp
lcall
imul
in
sub
fs
sbb
idivb
dec
jno
test
cmpsl
mov
sub
sub
gs
sahf
movsl
scas
popf
in
imul
jae
and
cwtl
sbb
cmpw
mov
mov
push
outsb
jnp
pop
outsb
jnp
sbb
inc
lds
fimuls
push
loopne
es
mov
mov
sbb
jns
mov
jp
or
lret
mov
sti
xchg
stos
leave
popa
xchg
pusha
sub
popa
into
inc
cld
gs
fstl
repnz
adc
cmpsl
outsl
jle
cmp
xchg
lea
pop
lds
sbb
adc
jno
adc
xchg
ret
notl
xor
dec
cmp
popf
mov
push
inc
and
dec
imul
call
mov
aad
fldenv
divb
adc
push
xor
fnstsw
mov
lds
pop
add
out
jne
inc
adc
pop
cmc
ret
flds
xchg
mov
cmc
push
adc
cltd
loopne
jg
push
out
mov
ret
out
dec
mov
lret
stos
enter
jns
dec
popf
mov
outsb
pop
dec
xor
gs
pop
xchg
sti
cmp
gs
mov
test
subb
sub
mov
add
mov
lret
cmp
xor
mov
xchg
stos
mov
adc
push
cmp
test
add
mov
stos
scas
cmp
pushf
inc
fnstenv
or
sub
movsb
mov
pop
mov
and
jecxz
and
or
jno
insl
xchg
xchg
pop
mov
jns
mov
sub
push
mov
or
rolb
fnstcw
das
dec
or
mov
add
aam
call
test
push
dec
inc
js
push
add
xor
and
aam
clc
hlt
call
test
push
dec
inc
js
push
add
xor
and
aam
clc
hlt
call
test
push
dec
inc
js
push
add
xor
and
aam
stc
hlt
call
test
push
dec
out
shlb
outsl
pushf
cmp
lret
xlat
fistl
in
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
xchg
in
or
cmp
stos
xchg
xchg
in
enter
or
dec
mov
stos
sbb
or
cmp
sub
aam
int3
or
cmp
sub
lods
pop
or
dec
stos
push
mov
push
jmp
mov
xchg
sub
mov
ja
xchg
push
jae
inc
and
sbb
or
mov
popf
sbb
gs
insb
leave
sarb
dec
xor
out
daa
dec
inc
jns
sbb
sbb
popa
gs
int3
pop
jae
xchg
cmp
sub
mov
xchg
mov
sbb
push
cld
and
or
jae
fstl
xorl
es
or
cltd
popf
pop
jae
mov
fs
fldt
push
xchg
fimull
xor
adc
mov
add
scas
arpl
push
clc
jae
imul
stos
out
mov
insb
ljmp
add
dec
adc
sbb
enter
xchg
movsb
fwait
mov
jge
insb
mov
fimull
jns
cmp
out
sbb
sti
cld
mov
enter
adc
scas
sbb
jb
jl
adc
cmp
dec
test
js
add
scas
adc
push
cmp
iret
or
mov
fcompl
dec
mov
xor
js
adc
or
int3
outsl
mov
dec
lcall
mov
dec
fnstcw
mov
jnp
imul
jl
insb
stos
sbb
or
cmp
sub
fcompl
int3
or
cmp
sub
lods
imul
jl
insb
stos
sbb
or
cmp
sub
fcompl
or
push
cwtl
mov
rol
jecxz
fsubl
std
jecxz
fnsave
fistl
lahf
test
or
xor
outsl
sub
mov
xor
xor
mov
outsl
sbb
lcall
mov
mov
cmpsl
xchg
sub
mov
js
testb
mov
stos
incb
inc
xchg
xor
inc
jle
fiaddl
testb
push
pop
add
das
adc
jg
repz
push
push
inc
sub
xor
pop
fsub
add
and
or
sar
out
or
push
je
dec
adc
out
push
xor
jecxz
dec
dec
stc
ljmp
notl
mov
xchg
sbb
popf
fstl
lds
xor
fistpl
insl
nop
ljmp
sar
mov
jb
mov
dec
aam
mov
call
push
dec
stos
fnstsw
push
fisubs
andb
add
js
jg
stc
and
outsl
cmp
push
lods
pusha
scas
or
cmp
mov
sub
lea
pusha
jl
aas
js
addr16
mov
push
insl
jg
loop
lods
lods
inc
les
addr16
xor
and
jno
add
mov
movmskps
std
popf
or
pop
mov
pop
adc
xchg
adc
jmp
iret
lds
lock
mov
addr16
stc
cmp
or
js
push
mov
arpl
push
cmpsl
cmpsb
cmp
or
and
outsb
dec
int
mov
xor
cld
pop
pop
pop
test
inc
mov
ss
xorl
int
xor
lods
addr16
in
xchg
outsb
push
sbb
movsb
andl
lea
aam
adc
or
sub
in
popf
add
repnz
sar
fistps
adcl
pop
imul
out
or
adc
mov
loopne
pop
adc
push
inc
xchg
jo
push
fcoms
dec
cmp
adc
dec
inc
jb
sub
mov
sub
outsb
mov
inc
pop
stos
rep
pop
inc
ret
fcoml
push
xor
rclb
push
sahf
mov
xchg
add
mov
mov
mov
lods
in
es
jno
mov
ficomps
jg
ficomps
push
dec
jge
add
cmp
repz
push
sub
xchg
fisubrs
test
pop
cmp
adc
loopne
inc
or
adc
mov
sbb
call
xchg
ret
ret
daa
pop
pop
mov
push
mov
mov
jge
mov
sbb
dec
lds
lods
sub
enter
loop
fsubrl
mov
repz
or
in
pop
jp
jge
or
fcoms
hlt
mov
mov
ret
fdivrp
les
inc
jno
inc
or
mov
jl
aas
add
data16
sbb
mov
dec
scas
icebp
call
out
lock
cs
cld
cmpsl
mov
rcll
mov
decb
aaa
popf
add
add
fistpl
sti
lahf
pop
daa
mulb
pop
lret
sub
shl
inc
jo
jae
loop
push
sbb
inc
cmpsb
cmc
es
imul
sbb
push
adc
mov
push
push
clc
and
adc
hlt
push
mov
lds
sbbb
jp
mov
out
xchg
push
push
and
ss
push
repz
or
out
fidivrs
in
cmp
imul
jae
daa
mov
call
imul
cld
jb
pop
insb
frstor
mov
repnz
mov
xor
and
pop
cmpsl
xchg
lea
add
xor
xchg
and
push
add
xorl
sbb
icebp
dec
sub
inc
inc
es
shlb
push
xchg
and
cmpsb
mov
push
pop
imul
push
push
out
pop
cwtl
call
adc
sub
jno
inc
stos
in
pop
jmp
stc
mov
xor
cmpsb
xchg
in
filds
dec
out
inc
cmpsb
mov
cmc
aad
test
cmp
mov
mov
sbb
insb
repz
adc
sbb
loopne
push
add
dec
movl
push
shll
addb
xor
enter
dec
test
mov
pushf
int3
xchg
icebp
xor
fsubrs
adc
jle
ds
inc
sub
xorl
or
jmp
int
cmp
outsb
lods
test
sub
les
adc
fstps
cli
clc
dec
pop
or
push
hlt
cmpsl
mov
in
stc
add
hlt
hlt
mov
test
jp
sbb
mov
and
dec
cs
iret
jnp
xchg
mov
sub
inc
push
cli
push
cmpsl
pop
idivl
inc
jo
pop
mov
sub
mov
outsb
pop
or
inc
add
stos
jo
jle
fimuls
gs
subl
rol
insb
call
adc
push
jle
insb
popf
into
std
jns
cmp
mov
ret
add
fldenv
int
xor
xchg
dec
xchg
rolb
xchg
test
inc
fidivrl
jecxz
aas
mov
mov
xchg
aas
sbbb
or
mov
xorl
xchg
xor
subl
inc
xchg
adc
or
int3
loope
adc
out
rcrb
push
and
ljmp
sub
enter
mov
sbb
in
les
inc
xor
mov
jmp
mov
movsb
fidivrs
mov
data16
mov
mov
mov
stos
inc
loopne
and
popf
hlt
and
ljmp
mov
clc
sub
jg
add
cwtl
pop
cmp
leave
sti
mov
ljmp
scas
js
out
push
cmp
add
bound
jp
push
fimull
push
outsl
fwait
mov
push
ss
and
inc
sub
shrl
or
adc
inc
test
xor
sub
cltd
pop
lahf
push
mov
jle
je
flds
sub
adc
jmp
outsb
sarb
xchg
out
jecxz
leave
lret
inc
cmp
push
sbb
and
je
mov
clc
call
dec
repnz
test
pop
retw
pop
aad
cmp
or
adc
pushf
lods
jns
subl
sbb
mov
add
push
xor
decb
ja
stos
mov
mov
sub
sbbb
sbb
xor
stos
stos
push
cmp
xor
outsl
pop
leave
lock
mov
movsb
pop
fadd
xor
jmp
xor
pop
mov
mov
jno
ss
pop
xchg
xor
add
mov
lea
sbb
xchg
ret
fisubrl
cmpsb
les
and
cs
xchg
pop
mov
scas
mov
and
loope
rorb
mov
stos
ljmp
jb
cmp
sub
or
dec
sub
fs
inc
in
rol
push
in
lds
scas
sub
mov
xchg
je
lret
adc
jmp
add
and
cld
inc
out
lret
out
jae
test
fisubl
xchg
gs
in
and
or
cld
xchg
clc
push
push
mov
pop
mov
adcl
xorb
inc
aas
ret
mov
jge
sbb
adc
aad
lcall
ja
or
icebp
ret
aam
mov
dec
outsb
push
insl
pop
subb
adc
pop
aam
out
lds
mov
and
aaa
mov
aaa
mov
cli
hlt
stos
dec
adc
jl
call
fildll
mov
xchg
sub
andb
ficompl
push
lods
hlt
pop
outsb
jp
cli
or
xchg
test
mov
or
roll
add
push
sbb
mov
ljmp
push
sti
mov
jle
inc
mov
push
dec
ret
pushf
fwait
ss
jg
iret
daa
out
mov
mov
pop
mov
cmc
push
push
xchg
pop
idivb
into
mov
and
enter
xchg
xor
out
dec
sub
cmpb
lea
jo
scas
aad
jo
sub
fbld
js
pop
add
mov
adc
dec
jge
pop
out
jge
pop
cmp
sbb
lcall
sbb
jo
inc
mov
mov
push
sbb
int3
out
das
sub
cwtl
pop
mov
xor
sbb
fidivrs
jo
cmp
xchg
fldt
cmp
cmp
out
aaa
leave
mov
in
adc
fsts
mov
or
sub
mov
int
lea
add
cmp
fs
sahf
xlat
jo
mov
jno
hlt
adc
cmp
dec
jb
outsl
dec
mov
jne
adcl
push
dec
data16
xor
add
arpl
fcoms
push
dec
pusha
xor
mov
mov
push
inc
push
ds
and
lret
inc
inc
pop
xchg
scas
icebp
cltd
lret
gs
mov
pop
mov
mov
or
and
xlat
push
cld
ds
fwait
shrb
inc
mov
xchg
test
mov
aam
jl
mov
jmp
aas
adc
or
mov
jle
mov
cmc
push
xchg
fs
das
pop
jae
jbe
mov
in
movb
jle
cmpsl
sub
aad
push
in
add
rol
iret
insb
std
sbb
add
cli
sub
pop
xor
mov
mov
mov
cmp
rorb
mov
mov
movsb
mov
mov
push
xor
into
outsb
or
int3
jae,pn
fidivs
sbb
add
sbb
aam
lods
mov
sbb
adc
mov
pop
and
and
mov
jns
mov
ret
daa
dec
rolb
xlat
sub
lds
dec
mov
inc
lods
scas
cmp
arpl
lret
fisubrs
dec
push
cmp
data16
fsubl
out
out
dec
push
rcrl
out
add
in
lcall
fisubl
push
in
iret
call
outsl
lock
xlat
jmp
mov
sbb
dec
jecxz
or
dec
jo
push
mov
into
ret
daa
mov
mov
push
push
or
cmp
int
lds
mov
pusha
lock
mov
or
jecxz
or
push
and
mov
out
or
and
fstpt
out
testb
mov
cmc
fldenv
icebp
sub
dec
mov
pop
sub
aas
and
cmc
mov
dec
push
loopne
lds
adc
ja
pusha
mov
pop
jecxz
xchg
or
mov
insl
sahf
test
mov
mov
mov
adc
fmuls
in
mov
push
xor
loop
hlt
dec
dec
in
mov
push
mov
mov
inc
mov
add
sbb
mov
idivl
sbb
xor
js
imul
push
xlat
push
test
int3
insb
mov
adc
inc
insl
test
add
cwtl
imul
das
into
add
jmp
nop
das
pop
inc
push
cmp
inc
or
int
adc
pop
std
sbb
les
loop
sbb
les
enter
push
adcb
sbb
pop
mov
sub
outsb
pop
iret
daa
iret
pop
or
adc
lds
popa
cvtps2pi
jle
push
sbb
js
in
push
push
xlat
cmc
arpl
shl
fwait
jle
mov
mov
mov
inc
cmpsb
and
scas
imul
and
and
jecxz
sub
pop
push
dec
xor
xor
cmp
jmp
in
adc
scas
test
and
pop
and
js
and
push
sahf
or
aas
jns
es
stos
xchg
sbb
sub
into
add
sti
sahf
pushf
sbb
stos
adc
je
jns
cmp
sbb
xchg
sti
testb
iret
jo
cld
leave
lcall
test
jmp
sbb
lcall
lock
enter
or
jbe
rorl
out
outsl
movsb
or
fcmove
mov
insl
shrl
popf
sub
push
or
stos
notb
add
inc
cld
cs
ds
push
adc
cmpsb
lods
mov
push
cld
in
push
cli
sub
push
fcmovnbe
mov
xchg
cwtl
fnstsw
lret
inc
sub
out
fadds
je
mov
jbe
gs
insl
or
nop
xor
cwtl
adc
lret
out
xchg
out
and
repnz
xchg
mov
dec
out
dec
jp
push
iret
popa
out
or
gs
or
imul
loop
shrb
xor
push
or
sbb
popl
rolb
xor
jecxz
in
lods
cmp
inc
std
mov
cmpsb
cld
fstpt
scas
cmp
xor
adc
xchg
clc
ret
gs
cmp
pushf
fwait
inc
stos
shlb
inc
xchg
mov
test
jo
or
iret
push
outsl
xor
daa
mov
jl
sub
cmc
rorb
movsl
xlat
enter
sbb
test
pop
imul
aaa
xchg
scas
into
imul
sti
pop
movsl
adc
push
aaa
mov
testb
mov
push
push
inc
pop
mov
out
push
cmc
fcoms
gs
lea
push
and
push
dec
nop
outsl
sub
rorl
jl
aam
fmuls
insl
push
add
jmp
cli
shll
cmp
aad
fwait
pop
mov
out
dec
mov
push
mov
xchg
mov
popa
or
ljmp
pop
push
xchg
sub
ja
stos
ds
lods
aam
sub
adc
ja
js
cmpsb
add
bnd
cmp
xchg
sbb
xchg
iret
lcall
jno
sbb
sub
lret
and
je
addb
and
push
ja
pop
nop
inc
and
xchg
inc
adc
out
pop
nop
xor
shlb
gs
imul
cli
inc
push
mov
push
fcmovb
mov
adc
push
arpl
pop
loope
addr16
popf
movsl
pop
les
lcall
mov
sbb
jmp
hlt
popf
inc
icebp
ljmp
aam
sub
add
cli
into
and
iret
incb
bound
sbb
adc
jbe
xchg
arpl
les
mov
mov
add
inc
pop
dec
xor
push
test
ss
mov
mov
dec
jo
xchg
push
pop
xchg
mov
pop
jle
cmp
sub
sbb
aaa
daa
sub
shl
mov
xor
cli
fld
jp
cli
into
push
dec
push
popl
inc
push
rorb
add
inc
in
mov
cmpb
xchg
adc
push
inc
inc
xchg
notb
dec
and
stos
inc
fsubs
sbb
fs
mov
stos
sbb
lea
cmp
mov
mov
pushf
outsb
mov
xor
dec
lret
lods
pusha
push
cmp
jbe
cmp
mov
inc
addr16
push
pusha
out
out
sahf
xchg
adcl
jmp
fsubs
mov
cmp
cld
mov
mov
sub
popf
leave
xchg
test
sti
mov
mov
aad
arpl
sarl
in
lock
sub
addl
shlb
cwtl
outsb
out
adc
mov
cld
mov
or
leave
sub
sub
mov
out
je
and
das
cmpb
xchg
mov
out
cs
mov
adc
sub
nop
sbb
int
inc
sub
xorl
fdivrl
lret
repz
cmp
jnp
sbb
jl
and
cmp
dec
push
sub
xor
mov
xor
mov
dec
divl
cmp
stos
imul
xchg
mov
add
cld
inc
loopne
push
mov
sbb
dec
mov
dec
inc
repz
call
add
xor
jns
lahf
cmp
dec
fs
inc
loop
orl
jecxz
dec
loope
idivl
in
stc
ret
push
test
imul
gs
fstl
and
test
push
dec
es
lahf
jo
xchg
jl
ds
out
jo
shlb
xchg
xchg
or
cmp
lret
pop
jbe
inc
cmp
ss
adc
cmpsb
push
dec
mov
lea
dec
das
icebp
ret
arpl
inc
cmpl
out
cli
and
imul
popf
sbb
test
xchg
popa
cmp
inc
cmp
lret
sar
lods
aas
bound
stos
sbb
push
mov
movsb
fst
sbb
mov
sti
outsb
lods
sub
mov
mov
cmpsb
pop
xor
push
and
sub
out
mov
and
xchg
addb
pop
xor
loop
mov
sub
xchg
xchg
mov
cmp
lahf
xchg
ljmp
cmc
add
pop
inc
clc
pop
mov
xchg
loope
out
test
mov
testb
adc
push
add
out
imul
int
data16
stos
mov
mov
add
mov
add
les
xor
adc
and
xchg
mov
imul
lock
pushf
shlb
pop
jecxz
mov
shlb
shll
xchg
jae
sbb
mov
sbbb
mov
cmp
in
lahf
ret
cwtl
cmpsb
adc
sub
addr16
push
in
or
test
jmp
lahf
and
mov
mov
mov
cmpsl
aas
or
call
ss
dec
in
fldl
dec
scas
nop
push
daa
in
mov
push
sahf
pop
sub
jae
jle
xchg
push
and
ds
out
sbb
or
aas
aam
or
jo
adc
ficomps
inc
push
xor
xchg
stos
clc
pop
lcall
sbb
xchg
or
or
lcall
and
xchg
inc
loop
out
gs
xchg
mov
xchg
add
out
loope
xchg
xor
xchg
data16
cmc
push
pop
lret
movsl
dec
push
add
sbb
dec
dec
and
dec
mov
fsubrs
int3
jmp
push
in
aas
dec
popf
sahf
fistpll
sub
xor
cwtl
xchg
or
mov
pop
xchg
gs
sub
clc
xchg
mov
mov
dec
bound
xchg
bound
loopne
push
repz
cli
test
sbb
divb
gs
movsl
call
int3
jns
adc
cmc
mov
jmp
lret
clc
test
loop
scas
mov
aas
inc
sub
rorl
in
stos
fcoms
adcb
call
xchg
sarb
popa
stos
sub
push
and
rolb
inc
popa
loop
sbb
adc
and
pop
push
mov
lahf
push
loope
inc
dec
and
call
mov
rorl
push
hlt
shll
push
sub
xchg
jb
rcrl
jno
sbb
leave
jo
mov
les
jno
iret
aaa
loop
cmp
push
and
inc
dec
cmpsl
mov
addr16
mov
mov
dec
push
inc
inc
inc
cmp
cmp
inc
mov
push
hlt
cmpsl
cmpsb
inc
jg
add
jns
hlt
add
gs
xchg
cmp
movsb
pusha
negb
sub
jne
cli
add
sarl
adc
mov
pop
test
pushf
xchg
cltd
lea
lds
shl
icebp
lret
cltd
xor
or
mov
mov
aas
cmp
xchg
xchg
sub
jo
popf
mov
jo
xor
add
negl
jb
shlb
hlt
or
sbb
jecxz
mov
popa
or
jmp
cbtw
sub
jmp
jae
or
decb
xor
xchg
push
mov
or
adc
stos
jle
push
test
pop
in
inc
std
pop
mov
icebp
nop
pushf
std
pop
loope
scas
shlb
pop
and
mov
inc
arpl
test
xchg
and
cli
pop
dec
cmp
test
add
xchg
test
and
push
mov
cmp
sub
sub
mov
xlat
imul
imul
pop
mov
int
mov
data16
je
pop
jle
ljmp
mov
stc
mov
outsb
sbb
sti
enter
lock
fdivrs
adc
in
mov
daa
js
sub
cmp
pushf
pushf
fcom
pop
cmp
and
pop
pop
lret
pushf
cmp
inc
mov
push
and
rcr
adc
mov
fildll
sub
sub
cmpsl
mov
mov
sbb
cmp
sarb
daa
mov
fwait
pushl
iret
stos
scas
ror
adc
shl
pop
xchg
sbb
mov
add
cmpsl
push
lock
lods
imul
jl
insb
stos
sbb
or
cmp
sub
fcompl
int3
or
cmp
sub
lods
imul
jl
insb
stos
sbb
or
cmp
sub
fcompl
iret
inc
in
inc
in
sub
jnp
imul
mov
push
lret
cmp
sbb
les
loopne
je
les
pushf
pop
pushf
dec
mov
fs
mov
test
add
adc
imul
pop
mov
push
mov
xchg
sbb
jmp
jnp
or
sub
xchg
pop
mov
fwait
cmp
jmp
jnp
dec
test
cmp
jns
and
sub
cmp
inc
js
add
imul
movsl
imul
fidivl
nop
sbb
xor
negb
sbb
das
cmpl
stc
imul
cmpsb
movsl
stos
sbb
es
pop
mov
enter
faddl
sub
enter
imul
mov
adc
push
jle
jnp
sbb
pop
adc
jl
cli
push
test
pop
je
fwait
cmp
out
xor
out
test
sub
adc
mov
xchg
int3
data16
ja
adc
sbb
lcall
sbb
sbb
jbe
adc
incl
ljmp
mov
jl
stc
js
pop
stc
loop
fadds
popf
cmp
jmp
sti
pop
outsl
sub
cmp
jmp
dec
flds
adc
mov
and
cmp
inc
mov
lea
mov
jne
inc
mov
xchg
jnp
dec
lcall
jle
sbb
or
lret
inc
in
jp
cmpsl
and
cmp
sub
sbb
pop
stc
imul
test
cmp
jmp
sti
pop
mov
fwait
cmp
jmp
jnp
or
cmp
sub
cmp
inc
in
test
ja
fbld
or
sbb
pop
mov
dec
inc
es
fldt
popa
test
cmc
mov
adc
pop
sub
adc
test
scas
ss
in
lcall
push
dec
fidivrs
jne
inc
clc
xor
rcl
xor
inc
ss
add
mov
cmc
dec
jo
enter
push
movsl
pop
cmpsl
lods
popf
pop
jns
fcoms
leave
fmulp
mov
outsl
aam
movsl
pop
lcall
flds
inc
iret
mov
lea
jnp
aad
jno
xchg
scas
fsubl
and
rorl
jo
int3
pop
sub
xchg
xchg
lret
popf
push
inc
mov
fcompl
inc
shlb
push
add
dec
mov
mov
push
testb
mov
jl
sarb
cmp
mov
push
sub
outsb
xchg
loopne
mov
inc
iret
pop
sub
xor
lock
call
add
xor
xorl
xchg
arpl
jl
addr16
mov
pop
inc
gs
test
mov
fs
not
iret
lcall
mov
sbb
fldenv
push
sbb
dec
out
mov
out
adc
mulb
xchg
mov
loopne
sbb
out
inc
aas
stc
fiaddl
mov
into
orb
xor
int3
jmp
inc
scas
push
xchg
or
and
inc
mov
xchg
or
stos
psubq
test
mov
mov
out
movsl
pop
xchg
icebp
cli
aam
mov
inc
jb
jno
rcll
add
inc
sub
jg
mov
pop
cltd
ljmp
mulb
xchg
insl
loop
dec
mov
sbb
call
std
adc
pop
jp
add
addr16
sub
jmp
push
iret
repz
pop
push
stos
add
push
ret
je
cmc
out
jecxz
xchg
lahf
mov
fldcw
bound
jl
fnop
imulb
and
stos
shll
out
stos
inc
stos
divb
mov
sbb
aad
xchg
xor
test
je
jle
les
mov
or
scas
minps
test
sahf
pop
dec
dec
mov
push
sbb
jns
clc
ret
dec
xor
in
mov
mov
lods
hlt
fisubrl
add
adc
sub
mov
adc
add
jnp
scas
lret
in
xchg
push
adc
incl
sbb
push
mov
or
dec
mov
mov
xor
push
fnstenv
inc
aas
and
imul
rcll
fldenv
cmp
std
mov
fs
jmp
sahf
mov
jne
sbb
nop
or
pop
std
aas
fcmovbe
stc
in
and
rcr
mov
iret
mov
sahf
pop
sarb
in
loop
dec
ds
mov
pcmpeqd
stc
cltd
loope
fsubrs
outsb
mov
stos
mov
fdecstp
into
aas
fmuls
cmp
xchg
sub
jbe
fucomp
leave
out
cmpsl
or
inc
sub
ficoms
push
push
fidivl
fs
js
xchg
outsl
cli
sti
shlb
mov
cmp
push
xchg
xchg
xor
out
stc
daa
pop
cmp
es
jo
loope
push
cli
ljmp
insl
adc
icebp
daa
xor
jns
mov
xchg
push
add
aaa
subl
add
add
je
cmp
sbb
and
hlt
sub
and
dec
and
xchg
adc
insb
imul
jl
pop
movsl
pop
push
fs
out
add
sub
clc
inc
jne
jnp
jbe
cmp
push
jp
fwait
test
add
insb
xchg
inc
push
or
nop
mov
push
mov
fbld
leave
pushl
sub
iret
fs
ret
sub
cmp
mov
inc
rcll
mov
in
add
popf
sbb
jne
outsl
or
inc
cli
pusha
sti
dec
idiv
pop
into
icebp
mov
lods
data16
jge
scas
push
daa
stos
rol
fs
sbb
xor
jb
sahf
lcall
aad
mov
leave
leave
pop
js
sub
and
nop
mov
lock
shll
fcmovnbe
ret
xchg
les
mov
mov
mov
insb
scas
ja
sbb
cld
dec
fnsave
lods
pop
out
inc
hlt
jmp
jnp
fdivl
adcb
jl
push
mov
cmpsl
add
test
push
jae
pusha
pop
adc
fiaddl
out
fisttps
dec
out
mov
sti
xchg
pop
xlat
inc
bnd
xor
ljmp
and
or
negl
mov
add
std
jmp
shl
int3
in
jg
pop
adc
lock
call
or
out
lahf
arpl
sbb
aaa
inc
cld
adc
adc
sub
push
and
xor
xchg
push
xchg
sub
sahf
fldl
xchg
mov
fdiv
lods
sbb
adc
movsl
pop
cmp
sub
sbb
loope
adc
jae
comiss
test
lcall
mov
mov
rcr
xor
dec
lock
scas
and
mov
sub
call
daa
jp
jnp
push
jne
dec
fistpll
dec
adcl
imul
mov
jle
ds
push
ret
sub
adc
daa
dec
int3
or
popf
out
cld
cmpsl
fidivrl
or
movsl
sbb
mov
xchg
dec
xor
inc
cmc
fs
jae
and
fimull
sub
mov
mov
xchg
mov
mov
int3
sbb
xor
mov
andb
int3
xchg
jg
imul
aaa
ret
sbb
mov
push
mov
ficomps
xchg
push
cmpsb
xchg
aas
das
in
jg
scas
mov
lock
mov
nop
rol
push
inc
int
clc
or
jo
mov
std
inc
add
stos
mov
cmc
popf
aam
rclb
xchg
daa
fisubrs
fucomp
arpl
cmp
cmp
test
xor
cmp
enter
or
test
pop
imul
xor
adc
mov
sub
lret
cmpsl
frstor
ret
or
cmp
jnp
jl
push
loope
inc
test
repnz
or
mov
fstpl
push
xor
out
jmp
xchg
aas
iret
std
jl
xchg
xchg
xchg
mov
inc
insl
sbb
push
xor
imul
jl
pop
sub
pushf
loopne
jle
aaa
mov
orl
into
je
xchg
out
xchg
or
jmp
mov
and
push
bound
dec
jns
hlt
dec
jne
xor
mov
jb
loop
xchg
lds
xor
xchg
pop
inc
mulb
adc
adc
ficomps
test
sbb
mov
ds
addr16
xchg
pop
cmp
fdivr
test
inc
enter
cmc
outsl
jg
rep
mov
adc
add
pop
out
aam
mov
sahf
cmp
and
or
xchg
jb
into
push
les
sar
lods
mov
mov
mov
pop
aad
fsts
or
sbb
repnz
dec
test
flds
or
mov
sahf
ret
movsb
xor
call
lds
lds
das
sub
in
push
pop
fwait
inc
std
imul
dec
mov
add
mov
in
pop
jne
icebp
fwait
jl
adc
hlt
lret
psrld
in
jnp
sbb
inc
add
sti
das
inc
out
lds
in
lea
sbb
push
sbb
int3
push
mov
movsb
xchg
pop
adc
orl
stos
inc
icebp
out
ret
mov
scas
rcr
adc
ja
xchg
stc
addr16
pop
sti
ficomps
pop
mov
leave
bound
int3
cmc
push
ja
sbb
mov
dec
and
pop
or
mov
pushf
popl
lahf
cmp
hlt
jge
or
mov
std
push
lods
add
pop
mov
js
insl
inc
mov
and
pop
sbb
add
mov
notb
pop
jnp
pop
icebp
in
cmp
mov
insl
arpl
push
ret
or
pop
cmp
ss
shl
in
lahf
aam
popf
arpl
pop
ret
mov
mov
das
sbbl
stos
cs
insl
fmul
ss
sbb
jmp
int
fisttpl
movsl
fldt
lahf
pushf
push
push
dec
adc
push
fwait
loop
test
mov
push
sub
nop
into
jne
or
out
xor
aam
out
mov
adc
and
pop
push
lods
int
lret
in
gs
sahf
filds
addr16
pop
jb
insb
cmpb
lods
rolb
mov
loopne
loopne
fs
sub
jmp
adc
xchg
xchg
push
fnstsw
inc
inc
cwtl
cltd
popa
xchg
mov
lods
sbb
imul
push
movsb
jnp
xchg
cwtl
icebp
add
scas
push
rolb
mov
mov
test
inc
mov
repnz
loope
loop
dec
jbe
xchg
mov
inc
cld
clc
test
loopne
mov
xchg
loop
mov
loope
clc
fs
lock
cmp
call
adc
jno
mov
mov
mov
dec
cld
push
js
adc
mov
sbb
fdivrl
cmpsb
fistps
aad
mov
fsts
add
xchg
test
push
push
stos
mov
stc
pop
outsl
rcll
je,pn
fidivrl
mov
mov
and
movsl
push
cmp
aas
sub
sub
es
push
cmc
cmp
clc
mov
sahf
xor
pop
jp
or
sbb
push
mov
pop
dec
cltd
or
imul
or
xchg
stos
pop
sub
lds
cli
pop
cld
jno
mov
ds
cmp
repz
test
mov
dec
outsl
hlt
lods
cmpsb
pop
cmp
dec
lds
js
add
out
pusha
jo
shr
or
jge
cmp
test
xchg
add
add
jns
pop
test
lcall
inc
lods
dec
jle
loopne
or
into
call
dec
cmpsb
dec
ljmp
aad
pop
stos
and
lret
xor
icebp
into
es
pop
repnz
and
roll
fcompl
aam
mov
cltd
push
add
addr16
xchg
adc
add
mov
add
or
scas
or
pop
popa
roll
aad
xchg
mov
pop
js
xchg
mov
jnp
roll
xchg
mov
lea
sub
movsl
ja
or
shrb
push
es
push
jno
int
icebp
sar
lret
mov
push
or
pop
ds
inc
jl
fndisi(8087
jne
jg
cmpsb
jle
dec
test
cmpsl
dec
sub
mov
inc
stos
mov
add
fldenv
rcll
fcoms
xchg
jmp
mov
pushf
sbb
mov
sbb
push
mov
inc
mov
outsl
daa
outsb
popa
or
jne
popf
push
fdivrl
neg
sub
repz
sti
xor
int3
add
cmp
dec
jg
inc
daa
mov
in
pop
fistps
fldl
out
icebp
xchg
fisttpl
or
testl
or
push
es
push
pop
test
fs
into
mov
es
lods
lret
lock
and
shll
push
lock
sub
les
aas
inc
ss
mov
fisttps
andb
push
inc
shll
insb
pop
cmp
mov
rclb
and
cmp
mov
or
xorl
or
repnz
fwait
jmp
jl
push
scas
fisubrl
stos
js
dec
sub
repnz
push
xchg
pop
xchg
inc
jno
mov
pop
cmpsb
jbe
mov
or
dec
mov
inc
repz
lea
shl
data16
cli
out
jne
test
xor
cmp
insb
ja
or
xlat
or
je
push
insl
jo
or
stos
push
jbe
xor
mov
inc
jge
loop
push
fbstp
sub
xor
hlt
xor
cmp
orb
jle
sti
dec
mov
inc
cmpsb
cld
std
push
cmpb
adc
rcl
mov
in
mov
lods
cmp
xchg
nop
fisubs
jnp
cli
and
fistpl
cmp
mov
dec
ja
cmpsl
lods
lds
loopne
mov
out
fs
mov
into
fwait
ret
adc
aaa
into
dec
xor
jmp
lock
push
aam
test
or
xor
xchg
aam
in
test
push
or
fdivrl
adc
dec
arpl
das
fistl
stc
push
fcomps
xchg
sbb
jae
jb
cmp
push
std
or
lock
xchg
jae
stos
push
sub
int3
adc
stos
xchg
mov
adc
mov
scas
inc
or
adc
loop
orb
and
jmp
gs
or
fsts
add
jmp
push
jae,pn
push
mov
sahf
mov
or
sbb
jns
mov
in
pop
rcll
mov
jne
pop
lods
lret
in
jl
push
loopne
sub
xchg
mov
sub
scas
sub
sbb
cmp
push
xchg
bound
mov
jmp
xchg
pop
dec
push
xchg
or
test
aaa
pop
inc
std
mov
repnz
sahf
adc
fldenv
push
lcall
pop
insb
aam
fidivs
dec
add
sbb
jae
negl
hlt
leave
pop
fsubr
mov
and
mov
lea
in
cmpsl
sbb
ss
mov
adc
mov
test
aam
in
dec
mov
add
fbstp
fwait
ror
nop
xor
sbb
pop
push
jbe
dec
cltd
lock
push
dec
scas
mov
pop
xor
sti
insb
cmp
and
push
aam
mov
mov
dec
jnp
and
pop
and
mov
mov
popa
xchg
test
addl
aam
jnp
add
jecxz
add
int3
out
in
sbb
addb
shrl
outsl
inc
mov
or
enter
dec
mov
or
mov
aas
loope
rol
add
add
mov
ret
inc
pusha
hlt
cmp
je
femms
cltd
out
sbb
mov
stc
cmp
add
mov
js
sub
dec
inc
imul
in
lret
test
icebp
sub
ficoms
jns
mov
jb
outsb
ss
add
mov
adc
ljmp
mov
js
sbb
mov
icebp
or
pusha
mov
fisubs
bound
mov
xchg
push
ljmp
mov
cmc
arpl
or
subb
or
popa
pusha
inc
bound
add
lret
cmp
xor
adc
mov
sub
and
push
mov
out
loop
xchg
jp
or
fimull
xor
mov
jne
cld
cmp
jp
call
mov
repz
dec
iret
cld
in
ret
xchg
cmc
enter
jo
int
dec
jb
sahf
mov
mov
aaa
out
or
and
jl
or
test
in
aam
jno
mov
jl
test
mov
cltd
pop
sbbl
enter
test
or
or
movsl
dec
and
in
xor
nop
scas
inc
jl
cld
and
mov
ret
xchg
sahf
mov
hlt
and
shlb
shll
sub
add
xor
adc
pop
xchg
sbb
es
cltd
and
inc
pop
cmpsb
bnd
mov
ret
call
mov
cmp
mov
xchg
xchg
fs
mov
hlt
xchg
xchg
stos
cmp
outsl
mov
sub
sub
pop
bound
xchg
lret
lret
cld
sub
negl
push
call
bound
sbb
mov
inc
mov
fisubs
insb
andl
std
movsb
lods
xlat
xor
pop
push
and
lcall
xchg
dec
inc
or
repz
fwait
lret
and
xchg
popa
mov
ds
add
xchg
dec
fs
xchg
mov
std
jl
test
mov
add
ss
out
cltd
dec
incl
mov
cld
das
test
mov
mov
das
cwtl
mov
dec
pop
sti
sub
clc
adcb
insb
gs
or
mov
inc
sub
mov
js
dec
push
push
xlat
push
gs
add
sar
xchg
test
ret
insl
arpl
pop
sahf
mov
movsb
clc
adc
xor
mov
call
add
icebp
mov
mov
lahf
insb
fwait
xor
repz
outsb
fucomp
xchg
out
xlat
jnp
xchg
sbb
push
stos
add
or
pop
sub
mov
movsb
sub
pop
rcll
iret
adc
mov
add
cs
cmp
xchg
sbb
sbb
jns
add
cmp
cmp
imull
std
dec
sub
cmp
push
inc
sub
xor
xchg
cwtl
xchg
mov
ret
dec
movsb
lock
mov
ss
fcomps
cmpsb
mov
jp
insb
imulb
jge
sbb
ror
or
aas
scas
add
add
test
inc
cmpsl
sbb
jecxz
loope
int3
rcr
and
pop
xor
aas
jns
dec
movaps
lcall
cmpb
movsb
pop
incb
xchg
imulb
lock
xor
cmovbe
push
xor
cltd
cmp
pop
lock
pop
cmc
nop
add
ljmp
in
fmul
or
push
orb
aam
mov
mov
sub
inc
mov
dec
cmpb
pop
imulb
divb
sbb
add
and
add
or
mov
lods
arpl
push
push
outsb
xchg
cmp
xor
cmpsl
inc
imul
mov
pushf
mov
and
mov
daa
fisubs
push
xchg
insb
cmp
mov
leave
xchg
test
adc
push
sub
xchg
jbe
mov
aam
rcll
rol
adc
mov
xor
mov
mov
cmpsl
jp
int3
rorb
les
jmp
popa
in
scas
jae
sbb
shr
mov
ret
imul
xlat
mov
in
fsubrs
repz
pusha
mov
fadds
dec
push
popa
in
inc
jbe
cmp
fnstcw
inc
icebp
adc
es
enter
sub
loopne
fs
xor
jne
and
xor
add
call
dec
cld
int3
lods
lock
aam
xchg
mov
loopne
mov
ja
rol
insb
sbb
pop
adc
outsb
push
mov
mov
fwait
jmp
xor
mov
push
pusha
push
mov
hlt
dec
adc
cmp
not
test
add
ret
mov
inc
dec
ja
cmp
cmovp
js
pop
insl
pop
mov
xor
inc
cmp
dec
rolb
arpl
repnz
or
dec
push
cwtl
adc
inc
pop
mov
fistpl
fcmovnbe
icebp
pop
mov
mov
jb
or
inc
cltd
mov
icebp
xor
mov
or
or
js
jl
js
mov
inc
jl
xor
push
insl
fdivs
xor
jmp
xorb
pop
push
cmpsl
stos
jle
push
shrb
fdivrs
shll
xor
nop
cmp
out
pop
and
data16
aad
push
cmp
jle
rorb
push
mov
sahf
dec
mov
pop
imul
xchg
pop
mov
les
pop
mov
mov
xchg
cld
cmp
stc
or
stos
test
mov
sbb
daa
push
add
or
hlt
cmc
mov
mov
out
movsl
push
dec
stos
or
enter
inc
push
and
data16
mov
fsubr
sti
pop
pop
cltd
pop
add
out
fwait
mov
add
in
imul
js
jle
push
inc
pop
imul
mov
pop
mov
into
loope
out
in
cmp
insb
lods
mov
cmp
nop
inc
dec
sbb
sar
pop
jmp
in
nop
add
xlat
dec
xor
ja
jp
add
push
dec
or
and
test
push
sbb
gs
sbb
ds
in
and
fsubs
mov
sarl
in
inc
sbb
das
icebp
mov
mov
inc
in
loop
imul
js
je
outsl
or
sub
sbb
addr16
gs
mov
pop
cmp
pop
movsl
insl
push
in
xorb
repz
push
orl
adc
ss
mov
cmp
movsl
mov
ljmp
xor
ss
enter
push
sub
cmpsb
orps
es
jae
add
out
sub
popf
sub
test
stos
stc
mov
pop
inc
in
add
push
jg
jle
fiaddl
ds
mov
gs
sbb
jns
dec
sti
pop
mov
fwait
cmp
jmp
jnp
or
cmp
jmp
sti
pop
mov
fwait
cmp
jmp
jnp
or
cmp
mov
sti
pop
sbb
fwait
mov
dec
imul
or
rcrl
mov
fistpl
sub
sbb
movsb
push
ror
scas
jl
xchg
inc
aam
les
add
and
mov
js
push
aas
xlat
fwait
out
divl
mov
mov
inc
add
and
pop
inc
pop
push
daa
popa
aaa
adc
adc
mov
movsb
cmpsl
shll
add
jg
outsl
xor
inc
sqrtps
popa
aaa
jno
xor
filds
test
xchg
dec
cmp
jb
push
push
sti
pop
mov
inc
add
jg
xchg
pop
dec
lret
mov
mov
xchg
outsb
sbb
movsb
xlat
roll
mov
xchg
repz
les
lahf
lods
mov
sub
xchg
imul
insb
mov
inc
mov
scas
xor
addr16
inc
push
push
fsubrs
xchg
dec
jge
outsb
shlb
xor
rcll
icebp
pop
rcr
ljmp
mov
jle
test
pop
pop
mov
xchg
xchg
rcrl
adc
lahf
mov
clc
push
adc
clc
cmp
cmpsl
dec
ret
andl
and
adc
push
daa
popa
jno,pn
or
mov
rorl
sub
xor
pusha
add
push
jno
push
aaa
add
xchg
repnz
roll
ficoml
imul
adc
ss
test
mov
out
mov
xchg
movsl
and
inc
or
dec
jae
push
daa
popa
aaa
jno
adc
mov
rcll
inc
add
and
pop
inc
pop
push
daa
popa
aaa
jno
adc
mov
rcll
inc
add
fmuls
imulb
jne
and
xchg
xchg
or
ljmp
pop
fxam
push
ret
sub
icebp
in
jge,pt
push
mov
and
adc
sub
xchg
mov
and
fmull
dec
std
decb
iret
xchg
dec
push
lods
fsubs
cld
arpl
xchg
mov
dec
add
adc
rolb
ljmp
adc
mov
fs
mov
mov
push
loope
mov
and
jmp
arpl
cli
mov
lcall
mov
jae
pop
int
fbstp
pop
rcrb
cmp
rcll
jbe
xor
fs
ja
add
aad
js
cmc
adc
cld
int
jmp
sbb
out
aas
mov
leave
clc
mov
mov
mov
shlb
sbb
jl
lahf
xchg
daa
fldcw
mov
xchg
daa
mov
loop
fimuls
lret
dec
pop
sub
leave
push
rcrb
jbe
cltd
repz
test
lock
xchg
mov
data16
les
out
pop
lcall
icebp
icebp
mov
sarb
cmp
mov
pop
add
movsb
lea
imul
roll
scas
stc
inc
mov
mov
in
in
aaa
pop
and
lods
aad
pop
loope
adcb
mov
xor
sub
dec
stos
ds
inc
jb
and
add
sarl
rolb
dec
cmpsl
rcll
jnp
stc
lods
pop
ror
fisubl
out
pop
xchg
jno
and
push
pop
mov
fiaddl
xor
leave
mov
imul
add
sarl
lahf
push
pop
jae
out
add
stos
jns
stc
bound
orl
xor
sbb
and
xor
loope
jg
out
dec
subb
ficoml
scas
dec
dec
test
scas
outsb
mov
js
pop
popa
push
mov
fwait
fs
mov
fidivs
dec
and
push
test
inc
and
je
mov
xor
or
lret
aas
in
rcr
sub
lret
inc
xor
insl
xlat
test
fsubr
shll
or
mov
bound
jecxz
mov
jae
adcb
test
dec
push
or
testb
inc
sub
outsl
xchg
push
inc
or
xor
out
scas
bound
rclb
test
fwait
loop
mov
sbb
dec
scas
or
out
sarl
fcompl
icebp
push
stos
scas
jnp
popf
lcall
out
dec
fs
adc
iret
jle
ljmp
mov
mov
call
push
outsb
ficoms
dec
inc
push
mov
repz
or
mov
push
in
fnstcw
or
cmp
std
mov
add
std
mov
cmp
cs
pop
jo
rcl
stos
sbb
ret
pushf
cmp
sub
rorb
fistpll
adc
xchg
fwait
aad
sti
sub
cmp
jg
push
pop
sub
inc
mov
mov
jae
add
mov
mov
fstps
popf
mov
or
xchg
iret
shll
and
ret
in
idivb
mov
push
jge
pop
andl
jle
or
test
rcrb
pop
cmp
pop
push
push
insb
ja
push
in
pop
mov
or
inc
cs
xchg
aad
stc
sbb
repz
lret
mov
inc
les
xor
pop
and
icebp
mov
sarb
fxam
adc
xchg
jne
add
inc
loopne
dec
fwait
pushf
adc
inc
mov
mov
adcb
jne
and
cwtl
shrb
addr16
fimull
xchg
rcll
aam
movsl
out
addb
push
mov
push
push
pop
js
mov
mov
mov
jg
call
out
in
mov
mov
dec
cmp
jne
add
lock
mov
sbb
xor
add
xchg
jne
in
or
mov
mov
xchg
jp
imul
mov
cmc
lds
outsl
push
popf
aaa
hlt
adc
loopne
lret
out
mov
inc
adc
lods
sub
mov
inc
stos
lds
xor
sub
int3
lock
xor
outsb
lods
std
adc
xchg
std
std
mov
das
mov
dec
mov
es
mov
lods
cmc
iret
sub
pusha
fsts
jbe
xchg
jp
jmp
cli
mov
jae
in
into
jo
pop
sub
xchg
das
loop
xchg
cmp
cmpsb
push
sbb
push
push
pop
cltd
iret
ror
pop
sub
push
sbb
lods
mov
enter
sub
sbb
add
repz
mov
sub
pop
pop
jecxz
ret
jo
les
in
and
xor
pop
push
push
adc
mov
or
xchg
roll
add
imul
add
lock
ja
push
mov
mov
int3
fptan
sub
arpl
lds
dec
xorps
loopne
mov
leave
sbb
icebp
scas
push
push
cmp
enter
fnsave
dec
mov
into
imul
inc
add
mov
call
ss
mov
jle
xor
ficoml
xor
enter
pushf
dec
roll
push
xchg
jmp
pop
roll
cltd
push
lods
mov
rorw
ds
imul
push
sahf
ljmp
cwtl
into
sub
adc
mov
imul
mov
test
jle
sbb
icebp
dec
mov
test
cwtl
inc
mov
inc
enter
pop
mov
mov
adc
mov
icebp
cmp
pop
lods
jb
outsb
mov
lods
adc
mov
mov
ret
xchg
scas
push
jge
fsubl
and
lret
cmpsb
jae
xchg
movsb
cmc
xor
imul
ret
jb
cmpsl
cmp
lcall
jae
pop
xchg
call
aas
inc
sbb
pop
out
add
dec
ret
push
andl
adc
sbb
fistpll
ds
repz
shl
inc
das
xchg
sub
icebp
mov
ret
or
fidivrs
imul
adc
clc
cmpsl
and
mov
aaa
iret
inc
cmp
jmp
pop
lock
in
or
xchg
int3
rclb
xor
pop
sub
mov
ss
push
pop
add
int
outsl
fwait
push
sbb
mov
nop
fsubrp
cmpl
pop
setp
jno
outsl
or
push
jge
iret
pop
in
jns
js
leave
scas
push
outsl
enter
push
es
adc
or
aam
imul
loopne
jne
outsl
pop
sarl
nop
sbb
or
out
pop
scas
movsl
lds
andl
cs
dec
adc
mov
out
push
adc
xor
in
ss
xchg
popa
sarl
pop
sbb
xor
ret
inc
mov
push
add
gs
mov
push
mov
lcall
push
mov
mov
mov
mov
mov
fwait
adc
inc
push
or
jb
sbb
pop
mov
jno
repnz
mov
arpl
xor
clc
jle
loope
jnp
cmpsl
pop
push
jae
gs
mov
cli
lods
xor
inc
fcmovne
std
pushw
xchg
sti
rep
les
adc
inc
notl
mov
pop
pop
addr16
mov
repnz
lret
jl
push
test
fisubl
ljmp
loope
ljmp
sahf
ds
dec
pop
dec
jae
xor
js
add
sbb
xor
jnp
pop
out
push
out
mov
shr
jns
or
add
push
hlt
xchg
outsl
or
scas
loope
pop
push
inc
push
fnstenv
lret
pop
or
movsb
lock
adc
mov
lahf
int
stos
imul
ss
les
inc
test
nop
cs
mov
pop
mov
push
adc
mov
mov
pop
in
sar
or
push
pop
or
fs
into
shrb
bound
int3
mov
mov
or
popa
and
jb
xchg
imul
jmp
dec
int
adc
xchg
repnz
clc
inc
popl
out
popf
mov
in
ss
sbb
test
xchg
xor
pop
inc
pop
rcrl
daa
not
ds
insb
repnz
mov
cmp
dec
mov
sbb
sarb
aam
inc
push
fcoms
adc
dec
xor
mov
addl
int
dec
movsb
sbb
cmp
xlat
jne
xchg
mov
jge,pt
arpl
out
popf
pop
or
cmp
fdivrs
loop
xor
sahf
sahf
or
push
ficoml
cmp
cld
mov
shrl
lds
jne
mov
and
push
lcall
inc
js
mul
xorl
push
push
xchg
lods
add
cvttps2pi
enter
out
pop
jns
mov
mov
jl
sti
pop
sbb
dec
pop
stos
sahf
scas
sbb
push
aaa
inc
xor
sbb
add
push
adc
lock
shlb
push
adcl
dec
aas
xchg
mov
dec
shrb
stos
cmpsl
xchg
jnp
gs
inc
cli
jb
jne
mov
dec
push
fmull
or
mov
push
pop
sub
popa
test
ficompl
or
repz
int3
add
stos
out
lods
sub
adc
cmpsl
push
fistpll
rolb
mov
push
loope
test
adc
or
pop
gs
jp
or
and
jnp
fstl
dec
mov
imul
pop
fcomps
cs
push
lcall
xor
mov
shlb
adc
mov
adc
sub
xchg
sbb
xchg
cmc
and
mov
fstpl
fstps
jae
orb
xchg
add
insl
dec
cmp
dec
or
ds
sub
mov
out
sbb
xlat
lods
jge
test
insb
out
cmc
daa
jmp
inc
xchg
add
xchg
addl
push
adc
jge
mov
hlt
call
stos
loopne
lock
rcl
cs
jno
les
lods
scas
cmp
sti
test
mov
push
pop
repnz
add
jns
xor
adc
out
xchg
loop
ss
jae
jno
lods
xchg
cmc
sub
dec
gs
popf
cld
fidivrl
lea
push
fidivl
into
cmp
jne
add
das
mov
lock
adc
notb
xchg
mov
pop
or
push
push
mov
pop
data16
in
add
jbe
shrl
mov
and
cmc
jo
pusha
push
sub
jl
push
mov
jmp
cmp
pop
jmp
call
enter
insb
cmpsb
in
sub
test
sub
ljmp
int3
cmp
sbb
ds
insl
das
ss
sbb
fiadds
popf
sub
sahf
shlb
test
dec
mov
nop
cmpsb
add
sti
loope
xchg
inc
sahf
fwait
cmp
pushf
lea
outsl
je
inc
sbb
add
loope
add
adc
xchg
test
jnp
xor
test
icebp
dec
rorl
addr16
mov
mov
out
jno
cmpsl
in
jmp
lret
mov
push
pop
jp
data16
stos
mov
xor
fs
sahf
adc
sub
out
stos
mov
shl
ja
movsb
sbb
xor
and
adc
cwtl
lahf
xchg
push
or
pop
stos
js
in
jl
pop
ss
jmp
mov
xor
pop
jp
or
pop
sub
pop
leave
loope
adc
jmp
les
jl
js
jb
aad
cli
or
iret
shrb
xchg
in
xor
leave
xchg
push
jg
or
pop
mov
xchg
fcoms
add
jp
cwtl
push
es
dec
outsb
leave
pop
cmpsl
pushf
popf
fsubrs
seta
dec
sbb
push
adc
lods
stos
leave
xchg
xor
mov
xlat
fadds
pop
pop
adc
jnp
dec
push
pop
mov
and
orl
dec
sti
mov
arpl
std
jl
jecxz
cltd
and
sbb
xchg
mov
test
in
subl
dec
adc
mov
cmp
scas
into
nop
pop
sbb
mov
jae
sub
sbb
cmp
push
jmp
fsubrl
xchg
add
jle
xchg
cld
arpl
enter
andl
xor
in
test
cmp
int3
mov
mov
mov
sbb
fiaddl
aad
icebp
jnp
push
jae
cmp
add
cld
sub
dec
jg
mov
je
sti
insl
clc
ljmp
lds
jb
cmp
pop
aaa
dec
or
fnsave
dec
mov
pusha
cmp
add
inc
lds
je
add
aas
cs
cli
adc
iret
aas
pusha
arpl
loopne
mov
insb
clc
test
push
data16
rcrb
mov
test
xchg
push
pop
and
mov
or
jl
rcrl
in
dec
push
int3
mov
fisubrs
into
adc
jns
imul
negl
test
std
jg
test
xor
mov
ja
inc
inc
sbb
ja
stc
test
and
and
xchg
or
and
pop
push
cmp
jb
cmp
xchg
lahf
data16
xor
or
sbb
cmp
sub
aas
in
or
mov
test
push
gs
add
mov
subl
mov
icebp
iret
stc
je
mov
or
or
outsl
addr16
adcl
jbe
arpl
dec
aas
les
jns
xchg
mov
loopne
or
or
iret
jmp
sub
xor
das
adc
sbb
inc
addr16
fsubr
gs
pop
int
mov
mov
test
jg
in
insb
dec
xor
loop
sub
sub
scas
jecxz
cmpsb
sub
cmp
dec
lea
xchg
and
mov
dec
push
adc
dec
mov
pop
std
pop
adc
adcl
mov
xchg
xchg
bound
lock
mov
pop
in
push
out
mov
jns
inc
xor
dec
data16
add
je
stc
add
ds
xor
pop
xor
subb
push
mov
xor
in
icebp
ds
xchg
push
std
push
xor
sbb
inc
ja
dec
mov
pop
int3
fstl
xor
sbb
xor
jp
icebp
int3
into
xorb
and
mov
add
lds
fsubs
out
mov
mov
lods
mov
daa
mov
sub
dec
movsb
xchg
jle
mov
xchg
jp
add
push
and
and
fwait
mov
test
notl
iret
pop
fiaddl
lret
pushf
mov
jl
ret
lret
jo
cli
and
mov
inc
mov
jp
jbe
sbb
lods
imull
xchg
push
js
push
sbb
pop
fidivrs
xor
arpl
sub
pop
call
and
push
mov
fcompl
popa
call
pop
in
pusha
adc
jbe
fdivs
and
dec
rcl
fisttpll
out
mov
lret
xor
fwait
arpl
das
sub
inc
imul
push
cli
cmpsl
or
fs
imul
dec
mov
xor
xor
enter
sbb
ja
jl
fistpl
mov
adc
mov
xchg
dec
cmp
cmp
inc
adcl
xor
cwtl
mov
clc
pop
cmp
int3
mov
dec
xorb
jge
xlat
or
sub
jnp
cmpb
icebp
lods
and
lods
sahf
adc
lock
dec
fisubl
mov
push
outsl
mov
pushf
cmp
add
and
bound
or
cmpb
test
adc
add
xlat
shrb
cli
push
cld
or
call
ds
dec
clc
push
and
jnp
jmp
cmp
in
mov
fisttps
pop
dec
jl
mov
popa
fisubrs
jns
pushf
ret
push
mov
fstpl
or
sub
lret
add
mov
rcrl
mov
push
fcoml
sub
ret
cmp
xchg
dec
push
scas
or
outsb
pop
sub
fs
push
and
rorl
hlt
hlt
push
and
and
xchg
test
in
pop
add
pop
jo
pop
iret
lods
add
js
pushf
loop
pop
mov
rorb
lcall
ljmp
mov
lods
jo
sub
xor
repnz
sub
lahf
test
pusha
fstp
test
adc
xor
xchg
push
ljmp
fs
stc
cwtl
lock
decb
dec
push
jb
rcrl
push
mov
add
and
outsl
and
ds
idivb
sbb
add
add
or
hlt
stos
stos
sarb
mov
sbb
mov
out
cmpsl
fists
cltd
icebp
ds
mov
leave
jbe
mov
sub
std
into
dec
loop
out
lds
shlb
insl
mov
mov
mov
loope
mov
pop
inc
xchg
pop
jbe
fwait
lahf
dec
and
dec
nop
daa
xlat
mov
pop
loop
push
inc
push
mov
jp
insb
je
and
mov
xchg
jno
es
stc
sbb
jnp
push
jecxz
popf
iret
mov
jl
mov
push
pop
iret
fs
pop
test
push
inc
and
es
ljmp
hlt
dec
inc
mov
out
dec
cld
std
repnz
mov
jp
je
out
cmpsb
movsl
lods
nop
dec
popa
out
in
cs
repnz
mov
mov
cltd
sub
clc
sbb
out
jns
pop
stos
push
mov
loopne
dec
push
jae
movsl
mov
scas
inc
xchg
or
icebp
leave
sub
movsb
lock
lock
jo
or
jp
aam
int3
insb
fs
imul
add
inc
fimull
pop
xchg
push
imul
push
gs
es
ss
iret
jne
jne
in
fstl
stc
mov
je,pt
mov
filds
stos
xchg
mov
fists
or
jmp
dec
addl
repz
cmpsb
adc
mov
dec
push
into
add
in
rcll
jmp
push
popa
sbb
add
lds
out
aam
push
mov
cwtl
push
dec
xchg
mov
mov
orl
cmpsl
sti
inc
cmp
or
sbb
out
addr16
iret
leave
xchg
or
xchg
hlt
nop
cmp
and
and
dec
out
fdivp
push
cmp
adc
dec
sub
add
mov
and
cmc
sbb
flds
and
lret
mov
push
enter
or
testb
imul
cmc
mov
stc
cmp
movsl
jno
lods
mov
lods
mov
add
jo
or
inc
es
fsubs
hlt
jbe
xor
aam
dec
jp
mov
mov
jae
aam
ljmp
popl
fs
xlat
mov
jae
lcall
and
xor
dec
xor
adc
sbb
jo
aad
addr16
xchg
nop
sbb
xchg
rol
sbb
pop
sub
addr16
xor
sahf
jae
xchg
and
add
cwtl
bound
mov
gs
or
enter
cmp
leave
setbe
push
fnstenv
mov
push
fs
hlt
pop
mov
mov
xchg
aam
inc
test
leave
popa
lret
mov
pop
inc
sub
in
rclb
insb
or
pusha
scas
xor
sub
xor
mov
dec
pop
sbb
pushl
lds
jb
dec
cmp
mov
leave
jbe
call
leave
mov
cmc
mov
outsl
cmpsb
gs
inc
insl
fptan
jae
cmp
inc
loopne,pt
cmp
jg
ss
cmp
sub
jo
dec
or
xchg
or
push
push
icebp
xchg
xor
test
mov
lret
into
lds
add
sbb
test
pusha
and
adc
or
cli
push
xor
sbb
dec
cld
out
cmpsb
cmp
testb
repnz
movsl
jb
aam
sbb
dec
cwtl
cwtl
pushf
sub
insl
mov
shr
sti
fs
sub
insl
push
mov
xchg
mov
stos
xchg
jmp
xor
xchg
xor
jl
xchg
cmp
loop
or
push
sub
ds
xchg
or
add
dec
sub
dec
fcom
pop
cmpl
outsl
fwait
adc
push
push
loope
je
data16
das
fsubl
test
in
insl
and
pop
inc
pop
push
daa
popa
aaa
jno
adc
mov
rcll
inc
add
and
pop
inc
pop
push
daa
popa
aaa
jno
adc
mov
rcll
inc
add
and
pop
inc
pop
push
daa
popa
aaa
jno
adc
mov
rcll
inc
add
and
add
popa
mov
cmp
test
pop
push
dec
push
orl
sbb
pop
mov
jnp
mov
fwait
and
push
fwait
arpl
jae
orl
sbb
dec
rcrl
imul
add
xor
arpl
jae
orl
sbb
dec
rcrl
imul
add
xor
push
mov
outsl
mov
lea
call
xchg
fmul
stos
stos
repnz
pop
int3
push
add
pusha
ja
lret
add
pop
cmp
mov
movsb
sbb
ss
sti
fsubrl
push
push
xor
incb
rcrl
fwait
int
fadd
push
dec
sbb
shrb
lods
cli
add
and
cs
xor
sbb
sub
dec
data16
mov
pop
inc
mov
adc
jae
inc
std
dec
lcall
sub
cmpsb
push
dec
mov
add
jle
insb
jecxz
sub
dec
add
repz
push
je
mov
scas
sbb
es
repz
dec
or
cmp
dec
rcrl
imul
add
xor
arpl
jae
ret
enter
jge
and
sbb
out
repnz
dec
aad
cmpsb
push
mov
out
notb
sub
insb
ret
cs
jne
add
jnp
into
inc
mull
std
xor
inc
movsb
cmp
xchg
out
xchg
outsl
int3
pop
fisttps
daa
rcrl
imul
add
xor
arpl
jae
orl
sbb
dec
rcrl
imul
add
xor
arpl
jae
orl
push
fstps
or
add
and
or
in
mov
fs
push
aas
sub
movsb
outsb
and
jmp
fidivrs
mov
loope
or
iret
testb
into
les
sbb
jnp
push
or
pusha
push
into
sub
push
shll
ja
rcr
mov
insb
cmp
mov
mov
sub
unpckhps
xchg
fcompl
icebp
stc
aas
fwait
xor
fmull
jge
add
out
push
xor
in
xor
rcrb
and
xorl
pop
pop
xchg
jno
mov
repz
xchg
jne
inc
push
mov
or
fcmove
mov
test
mov
rorb
sub
pop
mov
ljmp
pop
push
imul
and
push
sub
call
push
arpl
jnp
dec
imul
add
xchg
roll
sbb
adc
or
xor
push
out
loopne
inc
lods
cmp
cmpl
jg
xor
int3
jmp
in
mov
and
mov
test
test
in
sub
cmpb
push
loope
jle
loop
leave
push
or
fimuls
leave
jne
pop
je
pop
xchg
push
repz
sub
ficomps
sub
imul
and
pop
fwait
lds
or
les
sbb
pop
notl
jl
jl
inc
sbb
mov
cmp
arpl
loope
lea
rorb
add
mov
xchg
nop
enter
mov
enter
cs
add
aad
out
daa
test
push
iret
xchg
clc
sub
sub
jo
adc
or
cmp
adc
jne
push
mulb
or
notl
repz
lds
jecxz,pn
arpl
dec
xchg
and
mov
xor
push
mov
mov
in
sbb
xor
imul
sbb
dec
scas
inc
pop
add
xor
imul
jo
repz
out
cltd
and
rcl
push
dec
pushl
lcall
pop
loopne
lcall
lods
imul
test
clc
lock
ja
cli
stos
mov
and
and
and
loopne
fucomi
sarl
sbb
popf
sub
xor
sarl
sub
and
push
lcall
or
ror
inc
bound
movsb
xchg
clc
push
cmp
sar
pop
sbb
push
lret
push
pop
inc
shl
jo
adc
mov
pop
out
xchg
fadds
rolb
test
in
jl
clc
inc
and
icebp
in
cmc
push
lcall
scas
add
fwait
bsf
lret
push
out
out
mov
icebp
iret
sbb
add
sbb
push
cmp
mov
jo
push
xor
push
mov
jae
addr16
jl
pop
adc
jne
loop
je
adc
pop
rcl
imul
in
jo
cmp
sbb
ficomps
std
fistps
je
sbb
and
int
cli
xchg
aaa
jp
xchg
push
jle
xorb
jbe
fistpll
ret
notw
loop
ret
sbbl
hlt
push
or
sbbl
add
sub
xchg
aad
pop
xchg
sarb
fwait
jb
std
xor
movsb
push
outsl
dec
mov
mov
enter
sub
lret
in
and
pop
lods
es
jnp
shll
dec
movq
and
aad
sub
sbbl
pop
sti
leave
in
out
xchg
jg
jno
sbb
scas
mov
out
jne
les
pop
push
pop
cmp
xchg
xlat
pop
sahf
paddd
lock
push
adc
dec
mov
cmp
fucomp
fwait
lret
adc
mov
adc
bound
fldcw
sbb
movsb
xchg
cli
mov
jg
ret
sub
xchg
lds
push
in
push
loopne
test
stc
test
ret
mov
pop
mov
jmp
into
stos
adc
repnz
incb
decb
cli
pop
sbb
das
hlt
sbb
xchg
push
stos
dec
add
lods
imul
push
sub
outsl
sub
ss
or
mov
jl
stc
cmp
dec
sub
xor
or
dec
and
mov
dec
sub
fmuls
mov
fisttps
sbb
dec
jbe
addr16
push
mov
mull
sub
push
push
rcrl
lods
rcrl
jbe
adc
cwtl
shlb
gs
xchg
sub
cmpl
add
out
add
int
mov
jge
out
imul
cmc
arpl
cmovle
stmxcsr
loop
decb
scas
popa
adc
fstps
add
in
jmp
sbb
jno
inc
int3
repnz
jl
aad
clc
jecxz
mov
in
ja
inc
jp
and
mov
repnz
pop
mov
xor
push
rorl
sbb
lcall
xor
aaa
xorb
into
popf
xchg
dec
sub
testb
sahf
cli
into
popa
push
jbe
iret
mov
pop
lret
inc
lods
pop
jmp
and
pop
cmpsl
imul
insl
out
mov
imul
repz
imul
mov
stc
lock
mov
ret
mov
in
loopne
xor
ss
cltd
push
jno
push
outsl
add
shrl
loope
push
es
push
xor
cltd
sub
dec
cs
jae
int
mov
mov
pop
push
stc
push
rorl
clc
cmp
int
adc
cmp
mov
insl
hlt
in
pop
xchg
jne
mov
pop
repnz
mov
sub
mov
cli
lods
jo
stc
push
mov
repnz
dec
xchg
push
insl
jmp
xorl
dec
rcr
pop
or
xchg
dec
stc
inc
cmp
cmp
in
test
lds
sbb
push
int
mov
and
int
jmp
fdivs
mov
xor
sub
mov
test
mov
jno
stc
loop
push
pop
icebp
or
sbb
movsl
or
mov
fdivl
dec
hlt
insb
xchg
outsl
and
add
jl
cmc
fistl
or
loop
mov
stos
gs
mov
push
dec
into
ja
mov
in
ljmp
ret
cmc
jg
lds
repz
xchg
mov
xchg
or
loopne
call
adc
add
or
mov
and
push
cmp
cltd
out
and
sbb
push
shr
lret
mov
mov
dec
inc
gs
mov
test
lret
aam
jne
push
std
cld
iret
jl
mov
jne
test
cmovne
fnstcw
jb
fwait
sub
push
shll
cwtl
lret
bound
fistpl
je
mov
xor
jns
bound
in
sti
ja
stc
rol
xchg
cmp
push
int3
xchg
call
adcb
loop
int3
xor
test
inc
ret
loop
outsl
adc
push
lret
test
mov
lcall
pop
test
stos
or
push
ja
pusha
sti
jmp
mov
push
pusha
ja
adc
pushl
into
xchg
xchg
stos
push
outsl
insb
enter
add
sti
out
pushf
dec
sbb
cmp
xadd
gs
xchg
mov
movsl
stos
or
xchg
mov
cmp
lds
jp
inc
lahf
jnp
mov
pop
cli
mov
stos
sub
dec
jge
push
sub
push
mov
shld
jmp
xor
pop
hlt
lcall
mov
pop
mov
mov
push
repz
sbb
mov
shr
add
imul
data16
fbstp
test
mov
sti
cli
ror
dec
inc
jns
xchg
hlt
aad
nop
and
dec
adc
imul
mov
fyl2x
add
fnstcw
insb
xor
call
mov
and
lds
sub
fwait
inc
xor
cmp
sti
push
push
lahf
fcoml
xor
inc
adc
lods
pop
popa
pop
outsl
icebp
pop
sub
lea
sub
in
cmc
sbb
je
sub
test
stc
cli
lea
pop
cmc
sub
notb
js
mov
adc
fnsetpm(287
sbb
xchg
mov
and
push
add
mov
ja
lret
movsb
and
ret
cmp
scas
in
mov
adc
out
jge
push
jae
and
lahf
sub
outsl
adc
sub
out
dec
cli
lret
rolb
or
cwtl
movb
mov
es
outsl
clc
add
fs
in
pop
sbb
jle
call
mov
inc
ret
jae
sub
mov
imul
push
adc
dec
dec
dec
icebp
add
je
lret
daa
mov
out
push
jl
sahf
js
inc
mov
pop
outsl
sbb
std
jns
lock
out
ss
mov
repnz
mov
xor
inc
mov
pop
xchg
mov
mov
sbb
lahf
and
xchg
sub
imul
sub
pop
mov
rorl
loop
mov
ljmp
fucomi
mov
jmp
mov
icebp
xor
jbe
test
aam
scas
pop
data16
lods
lods
push
repz
push
pushl
or
dec
dec
xlat
outsl
mov
stc
dec
lea
repnz
add
jp
imulb
into
cld
ffreep
add
cld
xchg
fstpl
xor
jg
insl
push
pushf
cwtl
push
int
adc
xor
hlt
push
xor
add
mov
nop
xor
ret
xor
loop
aas
pushf
mov
cli
adc
icebp
nop
jp
rcl
frstor
jp
pusha
aad
movsl
cwtl
pop
nop
push
and
push
xchg
push
mov
sub
sbb
sub
push
js
ss
in
mov
lds
jge
pushf
insl
test
push
mov
mov
sbb
cmp
aad
scas
pop
xor
les
jge
sarl
mov
add
outsl
mov
or
adc
fwait
ret
int3
xlat
inc
sub
adc
dec
xchg
fwait
and
inc
xchg
mov
or
psllw
mov
or
ret
sti
pop
cld
push
mov
sbb
mov
inc
lds
pop
ffreep
stos
xor
dec
bswap
and
aam
fucom
out
xchg
mov
pop
jge
lret
ss
pop
adc
dec
mov
adc
scas
call
hlt
mov
int
jbe
jns
fldl
enter
bound
sub
mov
in
jbe
sub
xor
rorl
xchg
testb
es
scas
xor
xchg
test
xchg
dec
notl
add
enter
in
add
xchg
mov
lret
push
push
pop
jmp
dec
mov
dec
mov
incl
imul
pop
or
jle
xchg
lea
insb
mov
cli
sbb
add
mov
int3
xlat
sarl
adc
loope
mov
int3
xchg
shlb
ja
pop
and
jl
icebp
into
cmp
adc
ret
lods
jae
dec
adc
or
and
movsb
in
add
mov
mov
les
testb
or
out
mov
daa
pop
pop
lret
sti
push
das
mov
decl
sbb
bound
fdivs
aad
frstor
loop
jne
mov
push
test
es
lods
div
fcoml
je
pop
xchg
xchg
jae
or
dec
lret
push
jmp
int
xchg
push
bound
sub
pop
add
aad
stc
mov
push
push
pop
mov
mov
and
pop
loopne
sahf
mov
aad
out
jge
jnp
or
and
outsl
mov
sub
mov
rolb
js
lock
ret
xchg
shrl
push
push
call
jmp
cli
add
xchg
sti
loop
loop
js
or
adc
dec
leave
sub
lds
ror
loop
jbe
pushf
cmc
sbb
daa
cmp
sub
mov
add
cmpb
sbb
fs
jno
inc
push
and
ds
fwait
insb
fsubrs
stos
adc
push
adc
out
test
jbe
sub
sbb
cmp
in
sbb
lock
inc
adc
fdivrl
sti
sub
out
call
adc
jae
pop
adc
pop
scas
cmpsb
mov
sbb
xor
adc
xor
into
lods
lock
xchg
leave
inc
jne
dec
mov
push
in
lret
jns
sarb
int
push
jno
pop
and
arpl
cmc
inc
loop
push
dec
jb
loop
dec
xchg
sub
jb
test
ds
add
xchg
outsl
inc
inc
ljmp
in
imul
push
and
sarb
push
mov
sub
call
dec
movsl
fsubs
push
mov
xor
in
push
nop
clc
fidivrl
inc
push
inc
cmp
daa
mov
jge,pt
pusha
pop
ja
les
sub
sbb
push
out
pop
mov
dec
pop
lcall
iret
adc
cmp
inc
aas
inc
push
lock
jne
mov
test
call
push
ja
cltd
js
out
pop
fyl2xp1
mov
mov
out
jae
fdivs
scas
stc
push
fimull
outsb
lock
sbb
mov
and
stc
subl
or
mov
xchg
mov
adc
adcl
outsl
mull
dec
adc
repz
jbe
sahf
dec
mov
mov
pop
test
out
adc
ljmp
cmpsb
cmpsb
jb
mov
popf
cmp
out
xchg
mov
dec
movaps
inc
shrb
into
fcoml
lahf
jmp
dec
sbb
jge
inc
inc
jmp
and
push
lret
mov
fsts
push
cltd
push
scas
mov
push
xor
cmpsl
loopne
sub
mov
jne
inc
jmp
mov
loopne
mov
imul
adc
movsb
dec
mov
movsl
call
je
and
sub
fcmovu
test
loopne
lret
cmc
sub
mov
push
mov
mov
test
mov
sub
fisttpll
lods
sbbb
mov
push
mov
mov
les
sarb
sahf
cmp
jne
and
fmuls
jnp
xlat
loopne
testb
mov
push
jle
inc
lret
cwtl
into
push
nop
clc
lock
leave
addr16
mov
pop
xor
adc
cmp
dec
xchg
jno
adc
es
push
aas
jl
pop
xchg
dec
add
loope
lea
in
or
mov
iret
call
cmp
or
cmp
fcompl
shrb
fwait
pop
dec
es
xchg
std
subl
in
lcall
imul
bound
mov
nop
sbb
cmpsl
shll
aas
push
mov
lret
stos
xor
bound
mov
push
mov
or
mov
cmp
mov
imul
mov
arpl
cltd
or
push
popa
in
sbb
jmp
cmpsl
mov
shr
sbb
xlat
or
pop
cmc
cltd
nop
aam
mov
dec
scas
jae
or
pusha
jmp
add
push
call
repnz
outsl
outsl
mov
rcll
hlt
or
fisubrs
pop
push
and
xorl
call
xor
aad
mov
adc
cwtl
bound
mov
jno
pop
fistps
enter
xorl
popa
inc
orb
je
shlb
sub
jmp
gs
lods
pop
adc
jmp
sbb
lret
xchg
push
push
sub
mov
add
ljmp
pop
inc
jp
push
rolb
dec
jl
pusha
in
fmull
sbb
pop
call
add
jb
adc
mov
sahf
or
mov
bound
mov
cmp
push
es
push
jno
mov
cmp
sub
or
push
xor
test
sbb
test
js
fwait
and
lea
orl
mov
pop
fsubl
add
push
aad
lret
xchg
mov
addr16
xor
sub
roll
cmpsl
cmp
mov
xor
and
lock
lods
add
inc
fwait
mov
xor
jbe
test
cli
cltd
lods
jl
and
sub
test
repnz
mov
int
add
imul
xor
jge
aad
shrl
cmp
ret
mov
jae
push
repnz
mov
xor
sbb
test
and
push
negb
aaa
rol
decb
push
mov
and
sub
stos
test
adc
sbb
test
pushf
stos
mov
imul
mov
push
or
mov
in
into
mov
xor
sbb
lea
adc
pop
sti
lahf
mov
out
pop
pop
mov
or
add
inc
pop
push
push
sarb
mov
int
mov
fdivrp
xor
jle
int3
int
inc
shl
sub
adc
lods
sbb
sarb
cld
mov
out
cmp
mov
xchg
arpl
jp
fisttpl
insl
adc
pusha
dec
push
clc
cmpsl
mov
and
add
dec
adc
mov
outsl
sbb
lahf
or
sbb
rorl
loopne
mov
cmp
int
pop
mov
aaa
xlat
cs
pop
fdivr
push
mov
push
in
mov
imul
jns
jbe
adc
xchg
stc
sti
aaa
fmuls
and
cmp
rclb
adc
jge
or
inc
xor
ja
mov
and
add
movsl
mov
cmpsb
mov
fwait
xchg
jmp
mov
mov
xchg
jns
or
frstor
inc
and
pushf
pop
call
xor
mov
daa
loopne
jnp
inc
mov
shrb
mov
repnz
mov
mov
or
rclb
movsl
mulb
inc
inc
xchg
sub
cmp
test
pop
sbb
fstps
push
mov
lods
hlt
cltd
ss
mov
push
movsb
sub
jge
and
push
mov
xor
pusha
cmp
aaa
inc
int
fwait
adc
int3
jne
int
loopne
loop
jmp
sbb
mov
ljmp
or
push
ja
ror
sbb
mov
aam
xchg
mov
idivb
std
xchg
imul
pop
pop
test
incl
testb
lods
loope
sub
mov
lock
icebp
xlat
inc
lahf
data16
sbb
fldcw
in
ljmp
fsts
mov
mov
fisubrs
jb
nop
mov
cld
fwait
cld
rorb
andl
inc
sarl
outsl
sub
push
inc
stc
push
aad
rcrb
in
inc
sub
not
out
insl
outsl
rclb
cmp
add
inc
push
faddl
sub
push
and
or
jns
outsb
sub
repnz
mov
outsl
imul
xchg
sti
lea
sub
popf
enter
and
push
mov
repz
mov
ret
stos
test
das
fsubrs
loopne
js
add
adc
jnp
mov
and
sbb
or
mov
sub
cs
stos
xor
es
ffree
pop
jae
stos
xor
in
jno
repz
roll
das
cmp
lods
push
cmp
xchg
loopne
push
pop
sub
ljmp
test
cmpsb
inc
fdivrs
dec
dec
dec
fidivl
test
jge
or
mov
lods
and
push
cmp
fmull
insb
pusha
ds
push
mov
xchg
dec
mov
xchg
mov
mov
cli
test
push
cmp
ds
div
mov
cltd
call
int3
mov
lcall
cmpl
mov
sub
inc
adc
mov
shr
lret
jnp
xor
jg
dec
xchg
inc
call
push
vpsrad
inc
jae
outsl
xor
xchg
adc
bound
xor
lock
or
jnp
pop
cli
cmpsb
ret
lret
outsb
bound
or
fldenv
cmc
sbb
sbbb
sub
pop
jecxz
repz
mov
fwait
and
push
jae
orl
sbb
dec
rcrl
imul
add
xor
arpl
jae
orl
sbb
sub
pop
jecxz
jae
add
xor
arpl
jae
orl
sbb
dec
rcr
jecxz
repz
je
xor
inc
and
adc
add
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
notb
out
xor
and
sbb
adcl
es
push
lock
loopne
adc
add
xor
and
jo
adc
pushf
data16
mov
push
lock
loopne
or
sbb
sub
cmp
push
inc
mov
ss
push
mov
subb
pop
xchg
push
scas
inc
mov
xchg
or
int
mov
mov
decb
inc
cltd
sbb
sbb
mov
cmpsb
mov
outsb
lahf
lret
jle
loopne
pop
popa
mov
sahf
inc
add
or
jg
inc
fnstcw
inc
fcmovb
pop
aaa
jne
jns
lock
movsl
testb
adc
push
pop
push
iret
add
in
jo
jle
dec
mov
inc
out
jge
call
cmp
xchg
ja
outsb
jg
dec
int
data16
gs
je
enter
fisubrl
xor
clc
and
cmpsb
dec
sub
sar
jne
shl
add
xor
sub
and
jo
jns
nop
cbtw
push
test
fcoms
ljmp
nop
push
addb
leave
and
sbb
add
and
mov
ret
jbe
cmpb
mov
xchg
push
in
push
roll
push
add
add
sub
inc
mov
jg
insb
xchg
xchg
adc
add
arpl
pusha
jbe
data16
mov
push
lock
loopne
adc
add
xor
and
jo
pusha
jbe
data16
mov
push
lock
loopne
adc
and
push
faddp
mov
mov
imul
mov
xor
push
das
add
mov
mov
mov
lods
push
mov
imul
inc
mov
push
scas
test
enter
jo
arpl
test
lret
jbe
ds
outsl
sarl
insb
fnstcw
jae
sbb
stos
mov
push
jecxz
repnz
or
out
pop
notrack
add
inc
das
ss
out
repz
test
mov
outsb
jg
lea
das
stos
cmp
cmp
je
push
and
sbb
loop
and
jno
or
inc
icebp
aaa
daa
ret
or
inc
mov
insb
mov
sub
cmpsb
icebp
jno
add
pusha
mov
mov
movsb
pop
cmp
es
insb
jmp
or
mov
add
inc
push
mov
push
mov
cld
push
addr16
or
mov
inc
mov
push
das
fcoml
add
and
pop
testb
clc
lock
leave
mov
mov
mov
scas
xchg
enter
ds
ljmp
notl
das
adc
scas
ja
rcrl
pop
call
or
mov
jnp
add
push
aaa
jb
stos
cmp
push
jl
repnz
aam
adc
push
movsl
popa
jle
aam
iret
lea
mov
call
test
gs
push
and
or
or
hlt
push
stc
iret
test
mov
jecxz
xchg
std
jmp
pushf
pop
mov
pop
in
mov
pop
stos
repnz
in
push
and
movsl
mov
fsubr
sub
mov
mov
es
arpl
push
nop
fimull
mov
insb
icebp
sbb
jae
insb
cmp
pop
push
sbbl
sbb
push
into
cmp
adc
or
daa
pop
jb
and
xchg
rcrl
dec
pusha
mov
out
sahf
stc
je
fcmovnu
mov
lcall
lret
jo
repnz
push
lahf
pop
addr16
dec
dec
aad
bound
lret
jnp
sub
fs
pop
inc
jae
push
add
inc
push
mov
dec
or
ret
xlat
adcb
fcmove
adcl
fistl
fists
and
mov
ljmp
xchg
adc
insb
sbb
mov
push
xor
aas
pop
push
xchg
mov
lahf
push
fistpl
cmp
and
mov
inc
pop
aaa
testb
data16
imul
out
out
mov
inc
dec
mov
mov
or
inc
mov
xorb
sbb
dec
in
inc
jo
xchg
or
movsl
add
or
mov
pop
sub
sub
mov
sub
outsb
lea
or
mov
xor
mov
push
cmpsl
lods
ja
fstl
lods
test
clc
popa
adc
pop
movsb
add
pop
xor
scas
lock
adc
popf
push
and
push
inc
inc
pop
inc
and
xchg
pop
movsb
les
ret
jge
dec
div
add
stos
inc
out
sub
pop
pop
jecxz
pop
sub
and
cmp
mov
sbbl
fidivrl
dec
outsl
std
hlt
flds
fcmove
sub
outsb
mov
lret
and
jg
xor
sti
pop
ljmp
or
int3
lods
icebp
cmpsb
xchg
notl
hlt
xchg
push
xor
aad
xchg
lret
adc
imul
in
or
mov
test
xchg
mov
mov
aad
inc
rcll
xchg
mov
ja
jge
jmp
fsubl
cmc
hlt
mov
lea
adc
push
inc
sbb
shlb
fldcw
adc
test
out
cmc
lret
mov
lock
dec
int3
ret
mov
mov
add
test
mov
cld
xchg
push
jno
adc
cltd
cmpsb
xor
cmpsb
jge
sub
mov
nop
mov
sub
jge
cmp
into
roll
out
push
popf
adc
pop
cmp
dec
adc
lahf
iret
ja
out
out
push
mov
or
inc
mov
jae
pop
and
cmpsb
mov
adc
push
add
xor
mov
mov
xor
cli
lahf
clc
sub
jne
fwait
inc
lods
mov
or
adc
cmpsl
inc
arpl
movsb
mov
repnz
les
loop
sub
dec
push
insb
mov
lcall
lret
sbb
inc
xorl
stos
in
rcrb
sbb
sub
mov
jge
imul
push
and
lods
inc
mov
stos
push
lret
daa
and
pop
jle
xchg
jle
push
arpl
mov
test
rolb
push
and
pop
or
insb
ret
lock
and
call
dec
pop
mov
pop
sbb
pop
lods
ret
xchg
and
inc
xchg
rolb
lock
inc
dec
sarb
mov
pop
pop
insb
mov
shrb
ss
adc
jns
cmpsb
push
mov
clc
dec
std
popa
test
fisubs
jl
xor
mov
mov
repnz
cld
mov
aas
pop
dec
lods
jg
jbe,pt
pop
xlat
lods
mov
mov
mov
sti
push
xor
scas
xchg
fwait
mov
xor
mov
out
popf
clc
xchg
lret
or
stos
insb
lcall
subl
movsb
int
xor
in
jbe
imull
ret
lods
inc
pushl
jge
bound
cwtl
mov
stos
aaa
aaa
xor
mov
addr16
mov
lahf
or
pop
or
jmp
sub
jno
addr16
mov
or
orb
pop
test
cltd
jb
and
ja
pop
cli
cmp
outsl
iret
stos
fwait
mov
cmc
mov
jno
out
or
sbb
nop
es
sbbb
mov
or
push
or
mov
sub
add
test
xchg
push
out
jg
ret
lods
xchg
cmp
push
mov
jl
pusha
popf
or
add
inc
sar
push
pop
pusha
mov
mov
fsubl
xchg
jp
cltd
dec
jle
cmpsl
lock
out
push
fs
mov
rorb
testl
cmc
sbb
insl
sbb
pop
stos
lret
call
fwait
test
stos
nop
loopne
xor
ljmp
sar
add
jmp
fs
loope
scas
mov
add
mov
jno
and
mov
mov
mov
push
inc
pop
fsubrl
sub
in
or
mov
inc
jbe
inc
and
or
pop
movsb
outsb
ss
loopne
mov
lea
adc
ret
cmp
lock
mov
cld
and
loop
clc
je
test
mov
negl
icebp
sahf
enter
mov
push
jbe
inc
inc
dec
mov
data16
adc
inc
xchg
insb
outsb
arpl
push
xchg
pavgb
imull
loopne
les
sbb
cli
rclb
mov
cmc
xchg
ret
xchg
test
dec
lea
aad
xor
ret
pop
xchg
sub
adc
in
push
pushf
push
inc
ljmp
jcxz
jnp
and
pop
or
jo
int
leave
xchg
lods
xchg
mov
jl
scas
adc
xchg
dec
sbb
mov
into
add
push
ds
pop
push
cmpsb
cmp
inc
cli
aam
out
std
push
push
cmp
inc
fstpt
ret
in
or
repz
sbb
push
mov
ret
js
shll
xchg
in
cmp
leave
jne
push
mov
aam
mov
inc
push
test
pop
mov
mov
test
jbe
inc
dec
mov
mov
add
jb
shll
ljmp
adc
adc
in
xchg
lds
xor
push
hlt
leave
xor
cli
adc
and
es
repnz
mov
pop
mov
in
int
shll
add
int
xor
outsb
bound
mov
out
icebp
inc
gs
scas
fs
xor
mov
addb
push
sbb
repnz
add
push
jg
pop
out
cmp
repz
cmc
test
push
dec
pop
inc
leave
pop
ret
sbb
mov
je
iret
cmp
out
lcall
test
mov
sub
fstpt
and
inc
lcall
ret
imul
sbb
lret
sub
cltd
out
mov
lcall
lods
jl
mov
mull
push
leave
mov
test
mov
adc
jecxz
xor
pop
ret
fcmovbe
push
ja
arpl
dec
lcall
pop
data16
add
push
ja
inc
fwait
pop
icebp
scas
or
cld
push
leave
or
inc
lds
sbb
add
mov
pop
jl
xchg
repz
fnstcw
insl
add
cmp
imul
gs
inc
test
lock
mov
stc
scas
iret
xchg
add
mov
data16
cmp
ljmp
orb
js
rol
jae
and
mov
xchg
ret
jno
jg
sub
sbb
xor
mov
mov
dec
push
insl
in
sbb
adc
sbb
aas
pop
fdivrl
mov
inc
divl
clc
sbb
mov
movsl
ret
mov
xlat
or
outsb
test
fmull
push
or
in
pop
je
int
pop
or
adc
cmc
loope
add
jbe
hlt
push
add
popf
sbb
sbb
mov
xchg
test
adc
sub
pop
cmpsl
pusha
daa
int3
daa
or
fs
shlb
jno
pop
lea
test
inc
outsl
cmp
pop
lahf
cmc
mov
sub
inc
pop
cmp
pop
out
mov
lcall
jle
jb
inc
cmp
cmc
pop
rclb
adc
rcl
lods
mov
insl
es
int
push
dec
and
push
sbb
loope
xchg
inc
and
shl
mov
jl
add
into
mov
xchg
lock
push
loopne
les
mov
clc
inc
pop
rcl
pushfw
adc
imul
mov
mov
data16
pop
pop
and
mov
inc
dec
pop
fcmovnbe
push
inc
mov
or
sub
popaw
lods
ret
jno
mov
sbb
add
lret
add
cld
int3
dec
das
sub
xchg
mov
pop
es
cmp
and
stos
cmp
pop
mov
iret
sbb
int
dec
sarl
xor
mov
pop
pop
rclb
inc
push
xor
lcall
in
lock
call
dec
test
lods
adc
adc
cmpsl
sbb
mov
pop
pop
xor
sbb
cmp
icebp
fisubl
ja
mov
sahf
sub
arpl
jecxz
mov
cmp
sarl
cmpsb
cmp
das
jo
mov
scas
jecxz
sub
xor
add
push
mov
aad
add
dec
fists
sbb
mov
mov
aam
ret
cld
js
jae
jne
cli
pop
jo
and
and
sbb
mov
jae
push
icebp
insb
and
xor
andb
stos
mov
mov
and
int
xor
lahf
add
xchg
mov
pushf
or
add
aad
test
sub
cld
pop
repnz
jb
mov
dec
popf
push
cwtl
cmc
fs
inc
out
ljmp
mov
test
jo
std
inc
dec
int
xchg
lods
cmp
aad
mov
sbb
loope
jo
loopne
shll
js
adc
pop
ljmp
in
testl
lahf
and
rcrb
dec
dec
mov
cli
sbb
dec
daa
aas
idivb
push
cmp
jns
clc
filds
adcl
inc
jnp
xor
jne
jbe
test
aad
adc
or
addr16
cmp
test
pusha
js
mov
dec
push
call
add
dec
rorb
jl
inc
mov
add
ss
pop
mov
in
xchg
push
dec
hlt
popf
fildll
mov
ds
push
icebp
mov
pop
sahf
jns
in
add
inc
cmc
jbe
sarl
xor
jp
ja
pusha
js
pmulhw
scas
in
add
and
push
repnz
lahf
and
mov
roll
imul
movb
pusha
ret
adc
sti
jg
mov
dec
dec
out
xchg
push
xchg
decb
les
loopne
mov
inc
mov
clc
jge
insb
xchg
push
mov
mov
fstps
pop
test
popf
fiadds
or
and
outsl
pusha
cwtl
gs
pop
push
js
push
jbe
add
add
cld
or
pusha
movsb
adc
jae
sbb
sub
dec
int3
fs
adc
xchg
mov
in
push
je
pop
sub
push
aaa
movlps
mov
stc
in
cmp
mov
sahf
or
scas
loopne
imul
cmc
sbb
jge
loop
sbb
and
shlb
push
xchg
adc
xor
mov
adc
clc
lahf
mov
out
loopne
test
pop
fdivrs
push
xor
push
int3
adc
in
ja
or
xchg
inc
movsl
xchg
mov
clc
mov
push
daa
jb
and
push
cmp
fidivl
adc
pop
mov
ja
add
push
add
inc
adc
or
imul
mov
fimull
sarl
mov
mov
stos
loopne
sbb
sbb
outsl
pop
xor
pushf
jns
xchg
int
sub
push
inc
in
sbb
outsl
shlb
push
dec
mov
notb
fdivrs
lock
xchg
sub
rorl
sbb
sub
jno
lds
mull
roll
movsb
mov
and
ss
and
push
mov
xchg
mov
inc
fcoms
lods
dec
push
stos
pop
sbb
pop
push
fwait
jecxz
cli
iret
push
pusha
movsb
popf
xchg
and
sub
fcoml
push
out
push
inc
mov
xlat
xchg
shrl
push
dec
repnz
xor
sub
pop
popa
psubd
pop
dec
and
xor
cmp
or
sub
popf
sub
jecxz
outsl
cmp
mov
movsl
rcll
add
and
addr16
add
leave
sti
movsl
push
mov
test
lahf
mov
hlt
fstps
or
loop
jle
jnp
out
and
fistpl
loopne
cmp
dec
ja
scas
out
mov
jle
xchg
jle
cltd
int
mov
jl
sbb
das
push
sbb
mov
jns
push
push
and
orl
jbe
pop
and
xor
scas
movsb
mov
ljmp
inc
movsl
cmpsl
arpl
imul
lret
ds
pop
in
loop
pop
jl
jge
fcmovnbe
mov
pop
nop
aaa
inc
jg
cmp
fiadds
cli
xor
leave
mov
cmpsl
outsl
ja
add
iret
mov
mov
pusha
leave
add
call
push
repz
stc
pop
jecxz
adc
outsb
sti
pop
out
mov
mov
xlat
test
outsl
cmp
pop
mov
int
loop
cmp
jbe
inc
mov
movsl
dec
adc
insl
ss
inc
rolb
subl
mov
roll
sub
or
xor
pop
shrl
mov
fistps
fpatan
ljmp
notb
mov
movsb
jp
sbb
notl
call
mov
fildll
cld
mov
dec
aad
jmp
jno
xor
cmpb
mov
std
or
mov
fstl
in
mov
int3
push
in
outsb
add
repnz
in
or
mov
or
daa
aas
mov
enter
cmpsl
int
sub
in
inc
sub
xchg
xlat
jnp
subb
out
in
imul
pusha
ret
add
sub
int
lds
jg
ljmp
movsb
dec
iret
stos
lds
xor
xor
sub
adc
xlat
add
test
cmp
and
mov
pop
movsb
int
lods
inc
adc
cld
fs
inc
adc
push
mov
nop
int3
aad
sub
xor
jnp
push
dec
mov
sub
mov
cmpsb
popa
lea
xorb
test
divl
jbe
mov
cli
xchg
dec
pop
adc
mov
mov
push
mov
ljmp
or
xlat
stos
insb
cmp
movb
mov
jl
xor
xor
push
fmulp
push
pop
sbb
ljmp
dec
sub
roll
xor
ds
cli
mov
out
xchg
les
pop
imul
out
sub
sub
and
rolb
dec
imul
lea
add
xchg
sbb
adc
std
loope
mov
lahf
les
cmp
clc
jnp
cmp
scas
xlat
fwait
out
data16
mov
es
sub
mov
inc
pusha
or
push
mov
push
clc
std
loope
xchg
cwtl
add
cmp
xor
push
push
dec
sti
push
push
rep
shrb
pushf
or
cmc
jmp
outsb
xchg
cmpsl
fadds
xchg
and
cltd
sub
sub
and
push
in
pop
lahf
gs
rolb
fstl
hlt
mov
inc
xchg
xlat
push
xor
popa
push
pop
mov
adc
cmp
xchg
aam
xor
adc
cmpsb
lds
arpl
mov
fs
or
xchg
and
sub
xchg
jp
jae
stc
es
mov
das
clc
or
iret
rcr
test
fwait
sbb
cmpsl
and
cmp
mov
mov
test
sub
xchg
xchg
dec
out
mov
jge
dec
pop
sub
idiv
mov
jge
push
pop
xchg
sbb
lea
push
sbb
adcb
mov
jae
in
jno
mov
adc
out
push
loop
xlat
bound
fstp
mov
pop
je
std
orb
ds
loopne
xlat
repz
je
push
mov
xor
fmul
shr
push
test
pusha
fiadds
add
push
jge
inc
stos
and
into
fs
xchg
in
sbb
adc
mov
push
jbe
add
les
jmp
jg
pop
jecxz
out
scas
pop
imul
sub
icebp
mov
inc
jp
fidivs
std
or
addl
loopne
mov
imul
cmpsl
incl
mov
sti
or
mov
dec
pop
xchg
xor
fs
testl
sub
sub
mov
sub
test
pop
cmp
popa
mov
push
lahf
sbb
imul
lods
push
sbb
add
js
jecxz
movsl
dec
std
mov
mov
pop
and
lods
push
out
data16
loopne
and
in
xor
and
cltd
mov
shll
scas
mov
mov
les
jmp
popf
jb
dec
test
test
loopne
and
cltd
outsb
cmp
mov
adc
cmpl
sbb
jno
mov
ficoml
mov
adc
icebp
push
mov
cltd
imul
mov
popf
rorb
mov
mov
lahf
and
das
xchg
cmp
cs
testl
in
or
sahf
test
jmp
cmpsb
enter
mov
les
pop
ss
mov
imul
subb
xchg
stos
xchg
cmp
bound
lea
insl
cmpb
jne
push
xor
sub
or
pop
jns
das
rolb
pop
add
dec
rcl
lods
jnp
cli
scas
lret
orl
fisttps
jle
mov
pop
loop
push
xor
aad
push
mov
xchg
mov
mov
inc
mov
adcl
push
pop
or
in
sbb
les
data16
add
cmp
ds
ja
ficoms
lret
pop
inc
push
add
xor
call
and
aaa
and
xchg
pusha
insb
jnp
stos
mov
inc
and
imul
in
xchg
ret
call
sbb
cld
dec
test
std
shlb
out
xchg
inc
inc
jecxz
cmp
fistpll
leave
xor
inc
stos
sub
fcoms
or
cmc
or
test
xchg
les
dec
js
mov
jne
repnz
or
loope
xchg
in
sbb
gs
mov
jp
sbb
cli
rorl
leave
lods
arpl
lock
push
mov
loope
cltd
push
in
gs
push
scas
sarb
sbb
lahf
jp
pop
jge
inc
xor
scas
or
pop
cwtl
in
add
mov
mov
dec
pop
insb
add
cmp
test
xchg
push
xor
dec
add
xor
and
jo
pusha
jbe
data16
mov
push
lock
loopne
adc
add
xor
and
jo
pusha
jbe
data16
mov
push
lock
loopne
adc
add
xor
and
jo
pusha
ja
data16
movsb
shlb
rclb
push
in
adc
add
xor
and
jo
mov
cld
mov
xlat
inc
pop
scas
mov
lret
mov
mov
call
push
push
add
data16
add
jo
pusha
es
add
mulb
xchg
mov
cmpsb
sbb
push
push
loop
push
jne
jo
pusha
es
cltd
test
mov
sahf
call
mov
jl
add
push
or
es
subb
jns
pop
ret
sub
addr16
clc
int
jb
xor
outsl
jge
mov
sbb
sbb
sub
ljmp
in
xchg
pop
push
pushf
ss
imul
bound
loop
clc
dec
adc
incl
scas
push
add
es
xchg
cmc
mov
inc
sbb
loopne
and
push
cltd
aad
adc
xor
daa
jmp
mov
jp
out
cmpsl
sbb
incl
xor
data16
jle
mov
ss
fnstenv
andb
imulb
adc
out
push
call
arpl
jbe
inc
push
jae
leave
pusha
ss
adc
out
cld
rclb
mov
sub
jg
push
pop
adc
jns
jecxz
in
aad
out
shrb
fs
add
inc
and
cmp
and
adc
scas
add
xchg
mov
shlb
daa
jne
push
and
add
inc
stc
xchg
mov
aad
mov
xchg
mov
cmpsb
adc
inc
xor
push
push
inc
push
jo
pusha
es
add
mulb
xchg
mov
cmpsb
adc
inc
xor
push
push
inc
push
jo
pusha
es
inc
inc
jmp
stos
in
jecxz
or
sub
in
insb
lock
jge
int
jns
xor
mov
repz
pop
or
in
mov
push
cmp
dec
stc
rcrl
sahf
pop
sub
leave
popaw
test
fistpl
sbb
ds
loopne
out
sbb
lret
dec
sbb
mov
sub
sub
and
test
daa
loopne
xor
mov
inc
xor
adc
in
jge
mov
push
daa
stc
add
xor
xor
sahf
add
loop
mov
aad
repz
ja
lcall
mov
ljmp
aaa
push
inc
test
lea
ret
mov
inc
mov
push
pop
sub
imul
pop
pop
dec
sub
ds
pop
stos
mov
pop
inc
cli
jle
push
out
or
sbb
jge
hlt
jnp
sti
pushf
add
jno
call
adc
mov
daa
xchg
movsb
std
sub
adc
movsl
loopne
in
add
mov
mov
or
xchg
sti
cmp
loopne
lods
cmp
jge
pop
jne
mov
enter
push
je
fs
add
test
push
rcrb
nop
jg
je
pushaw
lds
push
jb
in
jl
int3
loopne
fs
imul
push
sbb
mov
insb
mov
mov
dec
cmp
jmp
lcall
js
loopne
inc
dec
sbb
push
ds
push
jle
pslld
push
mov
and
fnstsw
xchg
pop
adc
mov
bound
sub
mov
mov
sbbl
pop
lods
shrl
dec
loop
xchg
push
es
sub
jle
sub
in
fisubs
pop
adc
rorb
mov
movsb
into
incb
out
cmp
subl
sub
cli
add
inc
loopne
fisttps
les
cs
dec
test
pushf
subl
addr16
adc
out
sub
roll
jecxz
subl
popa
cmp
cli
fidivrs
dec
fistps
decl
movsl
int3
jno
xchg
pop
sbb
or
sub
mov
push
cld
push
xchg
mov
lock
sti
movsl
fsubrl
push
mov
add
jae
test
in
int3
pop
loop
push
sbb
repnz
xchg
mov
push
adc
adc
sahf
daa
mov
in
jne
out
ret
dec
bound
jb
mov
push
loope
jne
ret
mov
pop
jns
mov
daa
mov
pop
bound
decb
in
cmpsb
xor
pop
dec
mov
hlt
insb
gs
sbb
sahf
jl
inc
pop
sbb
das
xchg
jne
lods
and
adc
and
idivl
xchg
outsb
adc
sbb
test
ja
jmp
mov
dec
jb
xor
out
jmp
jne
mov
mov
fstl
or
mov
push
stc
xchg
jle
mov
or
ljmp
push
mov
push
adc
mov
push
pop
shlb
push
out
xor
outsl
or
cmp
test
int
and
std
aad
inc
mov
popf
test
addr16
sti
sub
jecxz
push
sub
les
pop
sbb
out
cmp
subl
in
jecxz
insb
xchg
divb
mov
gs
sub
in
push
les
outsb
mov
ffree
dec
xor
shrl
stos
mov
add
or
jo
pop
adc
add
rdtsc
sbb
cld
xor
cs
push
rorb
sub
shll
push
insw
insb
xchg
sub
push
fwait
dec
scas
pop
in
mov
dec
imull
mov
or
cmpxchg
xor
inc
cmp
adcb
jno
sub
lret
cmp
enter
jmp
sahf
xor
out
inc
push
cltd
xorl
push
cmp
cmp
push
nop
xlat
mov
aam
xchg
push
dec
xchg
fnstsw
xchg
iret
sarb
push
ret
test
sub
jmp
rcrb
fs
adc
jbe
push
cmp
popf
rorb
or
lds
rclb
dec
add
adc
dec
stc
sbbl
aas
mov
fwait
and
cs
test
je
xchg
add
loop
imul
sti
insb
xchg
popa
dec
mov
mov
xchg
scas
cltd
push
pusha
nop
pop
cmp
rcl
and
or
aad
sub
mov
in
lods
cwtl
push
das
pop
cld
dec
das
cmpsl
adc
xor
sarl
push
aad
in
mov
mov
and
and
iret
out
add
push
push
mov
into
in
in
mov
shrb
inc
je
leave
mov
fucomip
aas
fsubl
rolb
jne
insl
stc
sub
scas
mov
jge
div
mov
adc
add
jmp
mov
cmp
mov
dec
xor
out
stos
mov
pusha
push
dec
movsl
sbb
int3
test
loop
out
outsb
ss
stos
sub
or
mov
out
xchg
add
sbb
fsubrs
fwait
adc
in
test
popa
sub
mov
adc
lret
jle
rcrb
mov
add
ret
xchg
call
in
dec
sbb
movsl
cwtl
loopne
cmpsb
sti
fistl
sbb
pop
xchg
test
adc
inc
lods
cmpb
or
jp
stos
jge
pop
das
and
mov
in
cmp
xchg
std
js
imul
pop
xchg
cmc
inc
xchg
mov
push
sub
aas
push
mov
mov
sbb
pop
nop
pusha
add
xlat
cmc
and
fisttpll
std
rcr
mov
xor
test
leave
push
fisubs
out
and
inc
test
negl
lock
sahf
pop
mov
in
adc
mov
cwtl
mov
mov
mov
xchg
xchg
inc
clc
pushf
pushf
stos
mov
imul
inc
sub
jne
aas
push
fwait
add
pop
dec
mov
int3
sub
test
lds
ret
mov
jmp
xor
test
scas
aaa
cwtl
mov
xchg
pop
pop
inc
or
sub
xchg
mov
mov
mov
movsl
fwait
mov
pop
and
cmpsl
out
dec
mov
mov
lea
lock
dec
lahf
je
ljmp
or
test
clc
push
mov
adc
pop
ds
cmp
pop
mov
sub
pop
jb
jb
out
cmp
sbb
mov
sti
mov
imul
pop
jl
inc
add
or
in
pop
mov
push
imul
adc
dec
out
ss
or
or
jne
notb
loop
mov
cmpsl
push
outsb
jmp
and
iret
xchg
push
inc
dec
and
cmc
push
mov
mov
xor
mov
sahf
jnp
pop
inc
popf
xor
ss
mov
sub
jle
jg
sbbl
mov
jnp
xchg
xchg
test
rclb
into
mov
push
sbb
lahf
loope
push
movl
jo
lret
mov
in
xor
add
lds
iret
mov
mov
std
jnp
cmp
adc
mov
shll
sarl
mov
sbb
mov
cmp
leave
dec
repz
jge
test
sti
cwtl
movsb
in
movsl
mov
aas
adc
fiadds
cltd
mov
cwtl
pusha
push
lcall
fimuls
xor
out
fchs
stos
notb
fwait
pop
sahf
aam
fcoml
dec
sub
lods
fstps
xor
or
xchg
pop
cld
adc
pop
xchg
adc
sbb
lahf
jp
cmp
mov
into
ljmp
lret
daa
adc
pusha
outsl
js
test
or
test
movsb
les
mov
pushf
inc
fistps
mov
addr16
test
sub
aas
pop
jnp
xchg
xlat
and
int
jle
push
mov
pop
outsl
xchg
fwait
mov
stos
into
clc
cmp
push
push
rol
pushl
lret
das
dec
xlat
xor
xchg
jns
or
inc
push
out
pop
pop
xor
enter
mov
mov
mov
dec
out
int
or
cmp
arpl
dec
push
or
pop
and
mov
mov
test
js
lret
pop
pop
ljmp
es
jle
into
fldcw
push
in
dec
ret
add
lds
xor
pop
jns
repnz
xchg
adc
nop
pop
ss
sbb
dec
mov
xchg
sahf
mov
out
and
jnp
push
mov
add
or
fiaddl
sti
or
dec
mov
int3
push
pop
xchg
jmp
fidivs
push
push
jle
add
test
lret
xor
mov
cltd
jl
adc
jmp
pop
pushf
ret
xor
mov
mov
fildll
and
adc
xchg
push
push
dec
mov
outsb
xorb
cmp
add
lea
data16
add
mov
test
or
popf
fcmovnbe
outsl
mov
mov
loop
mov
jne
pop
gs
std
mov
in
adc
jo
loopne
push
in
mov
sbbb
or
cmp
fstp
push
push
call
insb
cmp
xchg
mov
fcoml
es
iret
sub
dec
idivb
add
fwait
daa
xchg
test
inc
inc
push
int
inc
lahf
popf
push
sbb
les
push
jne
cs
pop
or
inc
lcall
out
pop
cmpsl
outsl
loope
jl
jne
sub
bswap
lods
je
loope
loope
std
jle
xor
mov
mov
test
pusha
cwtl
ss
out
mov
add
bound
je
pop
xor
xlat
mov
push
dec
insl
sbb
add
loop
jnp
pop
jmp
sbb
push
pop
jle
xchg
ja
shrl
fcomp
cmp
stos
or
std
xchg
lret
sub
jle
pop
push
movsl
inc
mov
popf
ds
dec
imul
lods
cmp
outsb
xchg
add
out
or
aaa
std
dec
cltd
and
iret
xchg
sub
or
or
add
cmp
pop
push
mov
add
mov
cmp
dec
insl
inc
and
push
pop
out
nop
scas
mov
jmp
inc
dec
mov
jno
gs
push
or
sbb
mov
fwait
std
int
sbbb
shll
mov
popa
adc
cld
pop
xchg
ljmp
pop
fimuls
cltd
adc
gs
and
aad
mov
and
xlat
ja
cmp
sbb
and
enter
into
pop
scas
mov
test
sbb
fnstcw
subb
shrl
mov
lret
fidivrs
push
fcmovb
sbb
lock
fmul
mov
lcall
fistl
enterw
pop
mov
sbb
ret
pop
jns
xchg
or
cmp
rcll
push
cwtl
or
cltd
jne
cli
filds
mov
adc
add
repz
mov
mov
popa
sub
xchg
mov
mov
mov
push
mov
or
xor
pop
jmp
bound
mov
in
enter
mov
stos
mov
adc
ss
or
push
stos
mov
fdiv
cmpsl
push
xor
mov
lret
addb
lods
xchg
cmp
sti
frstor
jae
mov
in
out
aam
mov
xchg
push
test
and
lods
inc
cmp
xchg
and
fistps
jmp
movsb
in
in
push
ficoms
movsl
inc
enter
pop
xlat
movsb
loopne
add
outsl
imul
push
inc
fwait
rorb
add
lcall
inc
jo
jmp
aad
jo
lods
cwtl
arpl
fcoml
mov
push
add
jnp
imul
repz
lcall
mov
push
call
mov
test
add
jae
in
xchg
mov
sbb
xchg
or
mov
xchg
fidivl
out
jne
sbb
jne
and
jecxz
xchg
std
repnz
ret
lods
loop
loop
xor
daa
push
jnp
jne
push
push
fs
cli
ret
push
and
fdivrs
popl
and
mov
mov
bound
mov
jno
jle
or
dec
xor
adc
sbb
je
imul
ss
outsl
imul
fmulp
xchg
pop
in
cmp
mov
in
movsl
mov
pop
adc
xchg
fs
lahf
popa
in
jmp
xchg
sahf
push
pop
sub
loop
adc
xchg
imul
or
xchg
push
mov
mov
mov
push
mov
push
rolb
sbb
pop
mov
and
movsl
aaa
lret
das
sub
mov
xchg
pop
stc
aaa
jbe
pop
adc
jg
mov
cmp
sbb
movsl
dec
and
jo
in
sub
pop
lret
repnz
addb
ret
xor
data16
jno
and
js
inc
and
add
push
or
lds
xchg
adc
jmp
test
dec
mov
fwait
rclb
adc
cmp
adc
add
jns
inc
fwait
and
and
mov
xchg
mov
shlb
pop
push
scas
jb
fldcw
push
pop
adc
jge
jne
add
mov
inc
test
cltd
dec
jp
stos
in
push
inc
inc
adc
adc
mov
dec
leave
fstpl
int
add
add
mov
stos
add
xorb
stc
add
xchg
mov
loop
ficoml
popf
inc
and
lods
scas
xchg
push
fistpll
testb
push
sahf
repz
scas
aaa
push
test
dec
arpl
and
int
fildl
mov
aas
outsb
rorb
and
adc
leave
fwait
addr16
sub
cmp
pop
mov
inc
jne
adc
sub
or
sbb
inc
imul
repnz
mov
mov
sbb
adc
mov
int
cmp
std
in
pop
add
popa
sti
xor
lock
and
mov
adc
jo
inc
nop
jecxz
pop
out
sub
movsb
je
sbb
call
bound
add
push
dec
sub
lret
pop
mov
pusha
jno
xchg
sbb
adc
xchg
iret
sub
and
adc
sti
jns
and
lcall
add
and
cmc
push
fwait
loop
xor
movsl
jmp
leave
push
movsb
push
dec
fistpll
adc
or
in
and
cltd
mov
fsubrl
fdivl
jo
xor
pop
popf
mov
cmc
rcl
push
popf
fcomps
adc
aam
push
cmpsl
pushf
mov
mov
jne
test
jne
xchg
inc
mov
cltd
cmp
cltd
mov
mov
add
and
out
das
push
push
push
mov
adc
call
jmp
pusha
mov
dec
std
add
js
mov
in
jo
aas
loope
popf
and
mov
arpl
inc
or
lret
stos
cmc
cltd
mov
mov
ja
push
cltd
sub
dec
mulb
stos
mov
pop
inc
bound
cwtl
push
mov
test
inc
xchg
jns,pn
cltd
dec
fdivs
aas
dec
pop
fs
dec
adc
lgs
popf
adc
mov
inc
iret
repnz
je
pop
fisubrl
push
iret
movsl
sub
push
sbb
jg
int3
adc
add
bound
stos
inc
jge
push
out
in
leave
mov
push
scas
pop
mov
jp
into
xchg
pop
and
int
push
pop
imul
std
nop
mov
xchg
push
ret
pop
movsb
push
mov
stos
leave
mov
addb
inc
aas
jne
dec
adc
imul
push
xor
js
and
out
stos
and
push
filds
and
jae
movsl
outsl
in
dec
cmp
int3
mov
sub
repz
int3
add
jb
push
repnz
sub
out
mov
pusha
cs
aas
mov
xchg
or
std
xor
ljmp
loop
out
adc
and
ja
dec
adc
and
pop
aam
aad
fidivrs
and
and
cmpsl
sub
jb
cmp
jae
xor
aad
jp
pop
mov
lods
popf
pop
stos
mov
mov
icebp
hlt
ljmp
mov
mov
push
pop
or
std
imul
cmp
test
sbb
mov
add
imul
cmpsl
xchg
push
mov
push
or
fisubs
es
shl
push
dec
and
in
cmp
stos
imul
or
insb
and
adc
out
add
js
xchg
fwait
inc
sub
in
xchg
inc
mov
mov
imul
mov
in
cs
sahf
fidivs
inc
sar
test
pop
loop
xlat
push
and
dec
xchg
mov
mov
mov
dec
fcom
vxorps
xchg
test
jb
lret
pop
dec
loopne
and
jns
orb
mov
hlt
fldcw
cwtl
adc
mov
mov
popl
mov
fwait
cmp
mov
dec
mov
inc
adc
add
or
cwtl
pop
inc
test
and
cltd
push
sbb
sti
or
jg
stos
insl
scas
jb
hlt
sbb
aam
pop
mov
jbe
pop
and
imul
pop
ja
adc
hlt
dec
sub
or
rcll
xor
mov
pop
icebp
lock
or
std
fists
and
dec
jmp
fsub
nop
das
test
in
data16
daa
jecxz
insl
sahf
mov
add
sahf
jmp
das
inc
add
mov
push
in
daa
jecxz
inc
and
jbe
in
adc
mov
mov
pop
frstor
stos
jno
jns
fldenv
insb
mov
mov
sbb
or
adc
aam
jge
sub
sbb
or
aas
fdivr
ljmp
sbb
sub
cmp
or
push
ds
ja
cld
test
outsl
out
test
orb
pop
sbb
mov
jbe
push
das
je
jns
jne
fldcw
inc
fwait
in
dec
pop
arpl
sub
xor
cmp
outsl
cmp
xchg
test
xchg
dec
and
mov
call
push
cmp
jb
dec
fxch
pop
cli
xor
push
ljmp
call
jmp
cmpsb
adc
sbb
into
leave
orb
jle
inc
bound
bnd
mov
jecxz
push
cli
adc
loope
jno
mov
sub
dec
pop
loope
jns
or
or
push
xchg
xchg
out
lock
xlat
push
mov
insb
out
inc
test
sub
enter
jo
mov
xchg
lret
xor
lea
mov
cltd
iret
pop
mov
xor
iret
movsl
outsl
jmp
out
adc
addr16
cmp
sbb
shlb
mov
inc
inc
hlt
test
insl
xchg
in
flds
and
sbbb
mov
daa
mov
sahf
and
scas
pusha
je
aad
add
or
mov
jp
pop
lret
scas
outsb
dec
stos
imul
adc
stos
data16
jae
stc
dec
stos
ljmp
fxtract
jae
xor
inc
lret
mov
xor
mov
enter
iret
jnp
jp
out
push
jbe
mov
fsub
xor
xchg
popa
aam
rcrl
push
add
or
add
data16
loope
in
in
je
mov
sbb
shrb
push
and
cmp
int
xor
outsl
cmp
cld
in
xchg
lock
cmp
mov
mov
out
mov
fs
popa
lcall
movsb
pushf
leave
ds
xchg
test
repz
scas
sbb
xchg
fwait
pusha
dec
mov
mov
jl
jnp
aas
sub
xor
push
adc
and
xchg
hlt
lds
sahf
sub
sub
repnz
xchg
mov
cmpsb
xchg
lret
mov
scas
sub
inc
mov
lods
jg
dec
paddsb
repnz
stos
add
pop
addb
repnz
incl
sbb
popa
pop
loopne
adc
mov
lods
push
and
xchg
jle
jle
push
mov
sbbb
xchg
jnp
mov
push
ds
aaa
int3
jle
sub
stos
out
adc
outsl
fadds
rorl
add
and
hlt
lods
das
sub
leave
cmova
and
add
push
mov
ljmp
mov
shlb
test
fcomps
dec
popf
test
shl
rclb
ljmp
adc
cmp
aaa
lcall
out
xchg
rolb
push
add
jbe
push
push
inc
push
jo
pusha
es
add
mulb
xchg
mov
cmpsb
adc
inc
xor
push
push
inc
push
jo
pusha
es
add
mulb
xchg
mov
cmpsb
adc
inc
xor
and
push
inc
push
jo
push
movsb
mov
xchg
mov
xchg
pusha
cmpsb
out
push
in
lcall
stc
fcoml
lock
sbb
fists
fildl
add
add
add
add
add
add
add
push
add
add
add
add
add
sbb
loop
or
sbb
jnp
and
out
add
add
add
out
add
adc
imul
push
jo
or
add
add
add
add
add
imul
pop
add
add
add
add
add
out
add
add
add
add
add
add
add
add
add
filds
push
add
xchg
add
data16
add
add
add
add
add
add
add
add
add
add
xchg
add
push
add
add
xor
imul
add
dec
add
lret
add
push
add
add
inc
add
popa
add
add
inc
add
jmp
testl
or
dec
add
add
add
push
add
add
data16
add
add
add
jmp
add
mov
add
add
add
testl
test
add
mov
out
flds
push
add
ljmp
add
mov
push
add
add
add
add
add
add
add
add
add
add
add
add
test
das
add
inc
add
add
je
push
add
add
add
add
add
add
add
mov
add
rolb
add
add
add
fs
add
add
add
add
add
add
pop
add
add
mov
dec
add
add
add
add
pusha
add
add
add
add
jnp
xlat
add
jo
jns
push
add
pop
add
add
add
add
filds
push
add
push
add
add
or
scas
add
add
add
add
add
add
add
add
add
add
out
out
inc
add
add
add
mov
add
filds
fwait
add
add
add
add
ja
add
push
add
bound
or
arpl
sbb
sbb
cmpsl
add
add
add
add
insb
add
add
jae
push
add
xlat
add
add
add
add
add
adc
add
addl
add
add
add
add
add
add
add
add
sbb
mov
add
add
add
dec
add
testl
inc
add
pusha
add
es
add
add
add
adc
add
add
out
add
xor
add
pop
add
push
add
add
mov
insl
add
sbb
add
add
add
lret
add
add
xchg
mov
add
add
add
add
add
mov
add
add
sub
pop
add
add
and
dec
add
add
imul
or
push
add
add
add
push
add
add
add
roll
add
add
add
add
add
sub
pop
add
add
imul
add
or
jmp
add
add
add
and
fildl
pop
cs
dec
imul
sti
jbe
adc
pop
dec
inc
imul
addr16
hlt
jle
int
in
sahf
out
in
mov
mov
stc
and
cmp
dec
cs
adc
add
movsb
inc
and
sahf
rcrb
push
int
js
ret
xchg
jae
xor
in
call
in
in
jbe
aaa
xchg
fwait
sub
add
ss
cmpsb
outsl
or
outsl
insl
push
pusha
xor
ds
xor
mov
mov
pop
sub
cmp
stc
pop
sti
out
shrb
jle
and
lcall
cmc
hlt
mov
mov
push
pop
aaa
jmp
mov
lods
pop
cmovs
sub
sub
mov
or
mov
bound
or
mov
movsl
or
push
push
fsub
test
call
pop
imul
adc
cmp
xchg
outsl
ja
hlt
pusha
shlb
adc
mov
daa
dec
out
push
mov
mov
pop
xor
rclb
or
es
pop
decb
mov
fnstcw
call
pop
or
mov
ds
stos
daa
xchg
push
mov
cmpl
mov
loopnew
adcl
pop
pop
add
nop
mov
in
mov
xchg
fcmovnbe
data16
shrb
arpl
fiadds
sbb
pop
sub
out
std
std
cltd
pop
jmp
inc
lock
mov
push
dec
add
fstpt
sbb
jo
xlat
or
cltd
xchg
sarb
add
sahf
mov
jg
das
pop
lea
and
jecxz
jnp
sub
mov
mov
mov
cld
jmp
sbb
adc
add
sub
pop
add
adc
xchg
inc
cmp
dec
lret
lock
push
out
mov
add
pop
dec
outsl
ss
adc
jmp
icebp
nop
jae
clc
or
js
into
les
nop
xor
rcl
pop
sub
xlat
inc
cwtl
dec
pop
pop
ret
roll
mov
stos
daa
xchg
arpl
jg
dec
test
in
adcb
or
jmp
pop
out
jae
or
sub
mov
push
sbb
xchg
cmpsl
enter
push
mov
add
cmp
jecxz
sbb
test
sub
add
andb
aaa
rcr
adc
add
push
jle
pop
add
scas
ja
inc
mov
mov
pop
mov
fisttpl
dec
lahf
push
push
push
inc
mov
in
pop
add
jle
push
mov
dec
mov
ljmp
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xor
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
dec
clc
add
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
or
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
clc
add
jl
add
nop
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
or
add
sub
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
movsb
stc
add
lods
stc
add
mov
add
mov
stc
add
int3
stc
add
aam
add
out
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
add
add
or
add
sbb
add
sub
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
