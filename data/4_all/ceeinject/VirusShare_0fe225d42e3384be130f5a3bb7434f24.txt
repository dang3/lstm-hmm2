call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
daa
out
mov
ret
imul
mov
xchg
push
out
neg
movl
aaa
repnz
ret
addr16
inc
adcb
bound
push
out
divl
movl
aaa
xor
pop
pop
movsb
addr16
ja
inc
mov
cmpsl
bound
and
jo
jbe
cmpsb
aaa
mov
xchg
gs
lods
ja
int3
add
dec
add
mov
dec
std
xchg
pop
lods
loope
xor
mov
sub
dec
jge
insl
push
popf
cltd
mov
mov
loop
mov
pop
fisttps
lahf
and
dec
dec
cmp
leave
cmpsl
arpl
bound
std
lods
inc
sarl
mov
loop
bnd
xchg
shlb
cmpb
cmpsl
out
xchg
or
lahf
mov
fdivs
aas
das
sub
inc
inc
push
outsb
mov
dec
and
push
cmc
daa
daa
push
ret
sbb
testl
mov
xor
and
sarb
fisttpl
ja
out
mov
rolb
mov
shlb
ja
inc
adcb
bound
outsb
out
neg
sbb
and
pop
popf
bound
fbld
notl
aad
and
xor
jbe
jnp
movsb
inc
mov
mov
mov
inc
jmp
mov
adc
bound
xlat
popa
dec
xchg
push
adc
push
mov
inc
adcb
bound
push
out
divl
movl
aaa
repnz
ret
addr16
inc
adcb
bound
push
out
divl
movl
xchg
movsb
mov
sub
into
sub
les
push
pop
dec
jmp
scas
push
icebp
pop
mov
sar
xor
imul
or
or
cmp
dec
mov
add
bound
pop
xor
inc
adc
jb
das
add
imul
nop
pop
into
pop
mov
mov
cmp
push
aas
xchg
rolb
mov
cmpsb
push
int3
dec
xchg
iret
push
jge
cwtl
out
cld
or
add
ret
push
xchg
lret
dec
push
pushf
loope
or
aas
adc
hlt
sub
sbb
fisubs
lcall
out
jle
mov
scas
xor
iret
sub
adc
int
dec
push
lret
dec
sti
ljmp
mov
out
rorl
rclb
dec
xor
mov
mov
jp
jb
mov
mov
jnp
mov
add
and
mov
dec
xlat
push
shl
and
loop
inc
lea
mov
ret
pop
sub
lods
outsl
lds
imul
cli
fstl
inc
adc
xchg
clc
mov
loope
out
lea
sub
ss
pop
sbb
ds
hlt
aam
ret
loopne
rcrl
sbb
or
dec
jb
out
add
imul
cmp
out
fcomps
xor
adc
or
push
jne
pop
sbb
add
add
ss
mov
in
mov
hlt
insl
mov
push
inc
sbb
mov
add
mov
push
xchg
mov
daa
sahf
push
fstpl
xlat
or
push
push
rolb
sbb
out
adc
sub
jg
cli
xchg
ds
xchg
test
add
rorb
cmp
test
dec
sbb
mov
adc
adc
jecxz
xchg
bndldx
push
xchg
int
mov
jge
or
outsl
sbb
movsl
push
mov
cld
cltd
enter
hlt
nop
mov
sub
out
out
ljmp
xchg
call
sbb
mov
std
mov
test
leave
lds
shlb
add
pop
pop
or
mov
jno
xchg
push
out
stc
jbe
scas
std
and
pop
into
adc
sbb
sub
sbb
add
dec
sub
std
outsb
movsl
sub
inc
adc
mov
pop
mov
mov
xor
sub
push
dec
sbb
mov
jg
sub
sbb
cmp
and
add
dec
je,pt
sbb
bound
ficomps
aaa
out
movsb
mov
lea
jecxz
stc
popf
in
pop
cmp
test
mov
lods
rcrl
mov
push
movb
dec
out
mov
xor
push
dec
in
jns
in
testb
adc
pop
mov
pop
fldt
sti
cmp
xchg
push
pop
lea
aad
nop
pushf
ljmp
pop
adc
mov
mov
adc
and
mov
sbb
jb
and
and
dec
in
into
inc
lds
dec
clc
les
cmpsl
jg
insb
cmp
stos
xor
sbb
add
and
or
mov
imul
lods
mov
inc
add
inc
push
test
loope
stos
sub
jmp
aam
mov
lret
mov
jae
enter
inc
std
add
insb
pusha
mov
jge
subb
data16
cmc
out
sub
dec
jecxz,pt
sub
pop
inc
or
add
jp
pop
enter
insb
mov
addl
cmp
addb
lea
test
pop
loopne
xchg
dec
out
or
roll
loopne
jecxz
mov
add
loop
sbb
loope
fiadds
jp
adc
cmpsl
fnstsw
loope
lcall
mov
ret
daa
mov
popa
cmp
adc
outsl
dec
add
vshufps
out
lods
das
xor
pop
sbb
mov
int3
lds
cmp
ja
icebp
jnp
adc
pop
dec
dec
lret
pop
pop
cmpsl
cltd
sub
aaa
imul
sub
sarb
stos
insb
cli
xor
pop
push
xor
test
int3
mov
push
sbb
mov
mov
xchg
jmp
mov
jl
mov
sbb
lea
mov
xchg
sbb
pop
data16
jp
xlat
inc
mov
mov
xor
sub
sub
and
or
mov
xchg
pop
mov
movsl
in
aad
mov
jmp
faddp
cli
xchg
inc
cwtl
and
xlat
fs
js
jmp
fwait
cmpsb
mov
sbb
xor
xchg
and
sahf
ret
out
sti
jp
out
push
fidivrs
sbb
outsb
test
incl
addl
cmp
outsl
inc
mov
cmpsb
mov
xlat
pusha
jmp
scas
ja
arpl
loop
adc
sbb
ja
mov
lahf
int3
aaa
test
and
rclb
and
xchg
xchg
mov
sub
push
in
ljmp
rorl
imul
stc
adc
and
sbb
aaa
ss
jnp
jbe
cmp
cli
xor
loope
mov
std
stos
rolb
dec
or
es
inc
add
sbb
xlat
mov
in
in
pop
mov
lret
rcrl
pop
jno
test
pop
inc
mov
xor
push
jge
inc
inc
mov
mov
pop
rcr
out
iret
hlt
mov
cli
shlb
push
mov
mov
add
and
sub
pop
outsl
xchg
jp
jl
fs
out
ja
fisttps
test
push
hlt
cmc
jmp
cmpb
cmp
lea
shlb
fcom
mov
jmp
pop
inc
push
dec
and
push
mov
outsb
push
push
sar
call
fs
inc
push
pop
jo
push
mov
scas
pop
mov
sub
xor
push
out
lods
into
xchg
outsl
inc
inc
shll
mov
inc
push
push
dec
pop
jle
push
or
lret
inc
push
adc
pop
fnstcw
pop
mov
movsb
push
shlb
ffree
in
pop
mov
push
pop
andb
inc
cld
ret
jb
xchg
and
pop
cmpsl
ja
scas
rol
fildl
mov
cmp
pop
loope
repz
sub
cwtl
ret
sbb
sarl
shlb
aaa
inc
roll
dec
cmp
push
sbb
sub
jne
mov
xchg
sbb
push
or
aas
popa
jecxz
add
fwait
and
movsl
rcll
jge
pop
mov
loope
int
repz
sub
cmp
notl
cmp
lahf
pop
mov
push
xchg
loop
lds
shll
pop
xchg
mov
cmc
cld
or
aad
and
enter
fcomps
pop
stos
out
cmc
sbb
fisttps
sarl
nop
lcall
test
mov
in
test
xchg
ljmp
pop
insb
mov
sub
xor
add
mov
jns
add
out
xor
sub
sbb
sub
mov
inc
pop
mov
jne
frstor
mov
cmp
push
insb
adc
int
mov
inc
int3
dec
fwait
sahf
sub
sahf
in
cmpsl
aaa
add
mov
clc
les
jbe
sub
jbe
inc
adc
inc
dec
lods
rclb
imul
test
sbb
sub
cld
xlat
dec
pop
nop
xor
aaa
arpl
jp
lret
jnp
jecxz
mov
inc
sti
out
jae
in
shrb
dec
icebp
ror
daa
shll
xchg
es
and
in
lds
ljmp
out
inc
pop
xchg
sqrtps
mov
jmp
int
xchg
or
push
out
shll
jno
jae
lea
pop
and
arpl
lahf
das
xorl
cmp
decl
jle
out
cmp
dec
sub
or
xor
xchg
push
fwait
insb
mov
sbb
lret
in
adc
aas
adc
adc
dec
neg
cmpsb
push
xchg
pop
out
mov
or
lods
sbbb
fldenv
pop
push
pushf
sbb
mov
pop
jecxz
push
push
insl
pop
sub
sarl
push
shll
sub
jo
xchg
push
adc
sbb
sbb
fnstcw
xlat
mov
pop
sbb
andb
lret
and
cmpl
add
lret
gs
jl
sub
or
fisubl
mov
and
or
popf
jns
mov
mov
push
pop
mov
or
or
mov
and
dec
push
mov
shlb
and
xchg
adc
loop
mov
js
mov
sub
dec
outsb
mov
pslld
pusha
into
call
sbb
xchg
sub
ds
lahf
adc
mov
into
xchg
push
cs
pop
sbb
adc
repz
jnp
adc
lea
xchg
xor
incb
cs
lock
aaa
mov
hlt
or
mov
pop
loope
or
inc
inc
fsubrs
icebp
ret
pop
add
shl
xchg
jle
adc
lahf
fidivrs
push
push
mov
or
pop
jp
mov
mov
mov
sub
sbb
arpl
not
call
xchg
adc
jne
lea
incb
ja
out
lods
mov
pop
xchg
lods
xchg
scas
or
cmp
lock
gs
mov
push
jne
aas
and
mov
lds
pop
jmp
sbbl
in
pop
adc
xor
loope
mov
stc
pop
hlt
jmp
jge
out
std
scas
mov
cltd
scas
pop
and
into
hlt
xchg
mov
and
out
dec
xchg
shrl
dec
inc
lcall
xor
mov
roll
mov
xchg
xor
jbe
addr16
push
icebp
je
dec
cs
lods
or
fdivs
lret
hlt
xor
stc
or
xchg
icebp
cs
dec
outsl
or
sbb
outsl
pop
inc
mov
dec
jne
insb
out
scas
outsl
push
imul
push
subb
sub
lods
cmp
add
adc
addb
push
cmp
out
xchg
sub
push
jge
fcomip
mov
mov
push
sbbb
sub
lcall
out
cmp
movsb
fldl
inc
xlat
xor
mov
cmp
jb
sti
push
out
jmp
shll
push
jne
cltd
cmp
test
jmp
int
jl
jge
sti
icebp
jb
mov
mov
enter
and
dec
lahf
lcall
js
cmp
es
in
fs
ret
add
cmc
stc
jg
xor
add
and
fldcw
int
je
sbb
sub
cmp
or
out
push
sbb
add
pop
mov
lods
fcmovne
pop
jge
cmp
imul
addl
adc
and
test
dec
ljmp
rolb
in
scas
pop
in
push
repz
mov
push
ss
into
pop
dec
loop
std
dec
leave
sbb
sub
inc
push
je
push
test
jle
mov
arpl
les
xchg
cmc
push
mov
arpl
xchg
and
cmp
pop
sbb
jbe
imulb
movsl
mov
ret
stos
jns
testl
cli
loopne
adcb
mov
push
gs
adc
aas
jno
outsl
movl
jns
pop
pop
negb
gs
cmp
mov
gs
and
jne
cltd
add
sub
sbb
lea
mov
int
inc
iret
ficompl
pop
sahf
adc
ficoms
bound
aas
jecxz
cld
sbb
mov
add
xor
ss
or
in
pop
out
insb
loopne
hlt
mov
data16
inc
jmp
roll
pushl
mov
fistl
fstpt
addr16
inc
push
test
push
leave
inc
push
test
iret
mov
stos
cli
leave
popf
popf
add
lcall
mov
test
dec
out
fdivr
mov
pop
jae
push
ret
xchg
push
sub
mov
xor
je
or
pop
out
xorb
mov
ja
stc
lret
jle
xchg
in
bound
pop
mov
jns
xchg
dec
jmp
scas
fwait
std
shrl
add
int3
sbb
mov
out
stos
sbb
xchg
iret
push
fcoml
mov
dec
int
mov
cli
nop
aas
mov
movb
mov
or
daa
xlat
sbb
jle
ds
xor
xchg
sti
sbbb
clc
outsl
push
shrl
es
or
ds
adc
ljmp
add
pop
addr16
pop
gs
cmp
sub
push
aas
jp
jg
sbb
mov
add
fs
inc
leave
and
lock
nop
jge
inc
movsl
sbb
jg
std
outsb
adc
mov
movsb
ja
sub
cmp
add
scas
je
push
cs
lds
test
test
adc
xlat
jl
sbb
xor
add
jg
rorl
inc
inc
xor
pop
cmp
adc
movsb
dec
movsb
adc
jae
in
cmpb
test
lret
aaa
jno
das
mov
push
pusha
mov
push
test
jno
mov
movsb
ffreep
sahf
test
in
mov
jo
xchg
mov
xor
push
add
dec
lahf
in
fidivl
pop
scas
push
loope
inc
jl
fbld
js
add
pushf
cmpsl
pop
pop
leave
xor
jge
mov
sub
stos
pop
cmpsb
jb
push
lahf
dec
stos
dec
in
enter
in
sub
pop
add
sub
push
les
cmc
cli
data16
les
in
ja
scas
xor
xchg
add
insb
xchg
cmp
hlt
mov
int3
repnz
xchg
or
aas
into
or
push
sub
add
xor
pusha
xor
pop
jnp
and
rorb
push
inc
imul
je
jnp
insb
add
sahf
mov
ljmp
cld
subl
popa
fdivl
in
enter
fnsave
int3
dec
cmp
adc
rorb
add
pop
stc
sbb
or
sbb
inc
mov
out
jle
es
stos
fwait
sbb
xchg
mov
es
fmull
mov
jecxz
or
les
pop
pop
andl
adc
jl
test
or
or
insl
jg
xor
xorb
inc
mov
popa
shll
fldpi
sub
add
adc
fwait
inc
ss
xor
rcrb
fimuls
and
lods
adc
xlat
lods
enter
cmp
hlt
xchg
dec
push
mov
outsl
ja
xor
cmp
in
and
jns
loop
popf
addl
jmp
jns
dec
test
lahf
movsl
mov
mov
gs
mov
cmp
js
lahf
loope
roll
clc
je
in
dec
jg
lret
cmc
jb
jne
xchg
enter
mov
adc
ret
mov
lods
pop
adcb
aam
out
cmp
arpl
mov
pop
xor
mov
lea
xor
xchg
test
xchg
inc
xchg
mov
jne
loopne
inc
add
xchg
pusha
jo
fwait
inc
popf
repnz
sahf
js
push
les
test
loopne
arpl
bound
fdivrl
xor
mov
out
add
mov
gs
pop
or
dec
dec
in
cmp
out
aam
bound
mov
js
and
jmp
ret
xlat
pushf
ds
mov
repnz
stc
or
and
clc
mov
negb
cmc
aas
mov
push
or
in
ljmp
sarb
xchg
mov
mov
push
xchg
loopne
mov
rcrb
movsl
mov
in
inc
iret
bound
or
fbld
sub
ja
inc
mov
mov
mov
xchg
mov
jns,pt
out
cs
push
xlat
mov
lea
out
aaa
xlat
cmp
fimuls
dec
js
in
sti
imul
mov
pushf
xchg
inc
ret
mov
pop
adc
imul
scas
mov
mov
in
insl
jmp
mov
xor
xchg
mov
lods
mov
sbb
mov
mov
mov
lret
add
pop
sti
fidivrs
shrb
push
loop
cmp
pop
and
mov
or
pop
xchg
cli
xor
jp
aam
push
sti
jnp
into
lds
bound
mov
jns
mov
sbb
daa
pusha
ja
cmpsb
xchg
fdiv
ja
push
fbstp
sub
mov
push
imul
xchg
add
add
xchg
or
push
scas
inc
psubusb
fwait
xchg
dec
dec
das
sahf
mov
push
add
in
adc
and
cmpsb
pop
mov
stos
xchg
fs
je
push
mov
sub
inc
xlat
fs
mov
rorl
jl
mov
and
mov
cmp
mov
out
divb
cmp
jle
and
imul
call
adc
das
lret
aas
cmp
filds
pop
cmp
jo
sub
test
push
push
sti
jmp
jno
push
divl
push
aad
fcomps
repnz
imul
in
cmp
push
and
pusha
add
es
jg
mov
fxch
pop
add
mov
sbb
or
xchg
es
jle
mov
jge
mov
aas
xchg
in
fsubrs
inc
push
jmp
insb
lods
lcall
and
pop
js
call
inc
push
shll
insl
es
notl
cltd
jbe
add
mov
fisubrl
lods
cmpsb
jg
insl
inc
push
pusha
es
stc
adc
mov
in
mov
mov
andl
cmpsb
adc
fwait
push
mov
and
jo
push
lock
fwait
mov
mov
add
dec
stos
ss
mov
out
sti
sub
lea
scas
popa
inc
sub
mov
pop
sub
inc
sahf
mov
sub
int
pop
push
push
loop
mov
cmp
aaa
mov
pop
movsl
enter
das
mov
push
fwait
in
add
add
jne
stc
dec
push
nop
arpl
scas
pop
dec
and
idivl
out
mov
or
mov
test
or
inc
loop
sti
lret
shll
and
mov
inc
sbb
jno
int3
jl
sbb
enter
idivl
sahf
not
sub
int3
sub
jnp
scas
cmp
cmp
or
cmp
cmp
dec
jp
in
enter
adc
push
lock
and
mov
ret
cli
xor
in
aas
xlat
out
cmp
cmp
push
sub
ficomps
jns
sti
rol
aad
aas
jne
iret
push
adc
jne
rcr
ljmp
sbb
hlt
mov
lret
push
cmp
or
dec
jbe
pusha
pop
add
std
jge
adc
mulb
and
test
push
divl
mov
cmp
int
icebp
xchg
dec
scas
loop
jmp
dec
cld
add
shll
loop
scas
mov
sti
push
test
add
adc
int
scas
push
negl
mov
ficompl
inc
pushl
mov
push
cmp
mov
xor
push
or
stos
pushf
adc
out
mull
push
jno
mov
or
dec
aad
mov
jns
xor
xchg
sub
xor
push
lods
dec
mov
stc
cmp
xchg
mov
adc
pushf
fcomps
xor
popf
adc
test
jne
rcrl
add
xor
test
sbb
xchg
adc
shrb
lcall
adc
jns
xor
test
cwtl
jae
in
adc
scas
gs
adc
xor
lock
call
and
push
pop
add
mov
dec
mov
adc
xchg
jle
xchg
out
lcall
inc
cmp
pop
test
lret
pop
jp
sti
sbb
jge
ret
notb
movsl
jmp
push
stos
sbb
test
mov
xchg
xchg
cmp
xchg
es
movsb
jmp
mov
push
xor
shrl
mov
jecxz
mov
aaa
and
cwtl
lret
sbb
aaa
imul
lods
dec
mov
push
fbld
dec
pop
sbb
mov
jge
xor
mov
cmc
cmp
loop
push
adc
jo
or
jne
push
cltd
bswap
stos
fbstp
les
mov
or
fildll
daa
arpl
cmpsl
xchg
insb
push
add
and
sbb
movsb
lcall
pop
push
lahf
je
icebp
out
aad
jecxz
push
pushf
xlat
xor
pop
or
inc
pop
shlb
ja
inc
adcb
bound
push
out
divl
movl
aaa
repnz
ret
addr16
inc
adcb
bound
push
out
divl
movl
aaa
cld
pop
ficoml
addr16
inc
xchg
cmpsl
arpl
pop
out
divl
or
mulb
push
aaa
push
pop
es
xchg
addr16
inc
add
cmpsl
popf
mov
sub
pop
jg
cmp
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
xlat
mov
xchg
xchg
cwtl
pop
movsl
sbb
ss
addr16
push
fsubs
or
hlt
dec
sub
test
cwtl
mov
xchg
inc
mov
cmpsb
mov
xchg
sbb
push
testb
inc
es
jae
add
mov
mov
lret
dec
insl
pop
repz
stos
xor
fsubrs
loop
adc
cmp
repz
xlat
movsb
out
stc
test
sbb
leave
call
fwait
jmp
scas
push
and
mov
mov
divl
loop
jl
dec
out
mov
cmp
fmul
mov
lds
adc
popa
call
jp
out
ficoml
es
cmpsl
ss
lock
xchg
and
mov
dec
rcl
pop
sbbl
inc
pop
dec
sti
inc
test
dec
push
cwtl
xor
fldcw
test
adc
push
das
ds
or
movsb
fldcw
fwait
adcb
jbe
inc
enter
sub
adc
push
fsubs
cs
cwtl
push
shlb
jbe
inc
enter
jp
cmp
dec
fdivs
movsl
sbb
pop
andl
test
imul
cmp
insl
cmc
jns
imul
dec
es
xor
int
out
jle
jae
sub
test
cwtl
jg
pop
mov
cmpsl
or
js
dec
pop
es
mov
callw
inc
enter
sub
sbb
push
pop
es
mov
callw
inc
enter
sub
xor
icebp
std
pop
mov
and
xor
rolb
mov
call
daa
leave
or
jnp
and
sub
insl
push
imul
jnp
sub
out
ret
testl
aam
lods
sbb
sarb
sub
pop
push
pop
lea
inc
clc
call
or
mov
in
xor
push
dec
and
dec
inc
imul
mov
jle
mov
test
negl
cmp
iret
cli
dec
addb
xor
adc
xchg
xor
mov
ljmp
jmp
mov
and
mov
push
gs
leave
cmp
fnstcw
into
lcallw
and
ljmp
scas
js
mov
mov
addb
xor
je
push
test
add
xor
adc
sbb
cmp
das
test
dec
pop
add
sbb
sub
mov
pop
inc
std
sbb
adc
sub
and
sub
add
je
xorb
hlt
push
fisubrl
sbb
ret
stos
sbb
fstl
mov
sbb
and
jl
xor
adc
cwtl
pusha
aam
jl
enter
ljmp
jbe
push
pop
pop
push
pop
jmp
ja
popa
aad
iret
subl
repz
cmpsl
fisubrs
int
sub
dec
mov
dec
mull
push
imul
inc
in
push
cmc
out
push
mov
fwait
push
jo
imul
cmp
mov
hlt
pushf
mov
push
cltd
cmp
test
das
and
fistpll
pop
scas
inc
xor
imul
mov
and
call
fldenv
mov
sub
les
dec
movl
rcr
mov
xchg
inc
mov
mov
jecxz
pushf
cs
adc
push
mov
mov
sub
sti
xor
push
dec
andl
mov
xchg
xchg
je
repnz
mov
scas
xchg
xor
and
inc
add
shl
push
cs
iret
sub
pop
xchg
or
adc
push
fwait
loop
test
or
xor
iret
jne
push
pop
pop
adc
insl
pushf
dec
ret
mov
dec
mov
loop
xor
add
lret
out
jge
push
adc
adc
test
pop
push
subl
pushf
test
adc
fadd
mov
sti
and
imul
jmp
xchg
into
insb
imul
in
sub
push
pop
cli
aad
data16
add
nop
mov
vmwrite
loopne
sarb
mov
push
out
inc
or
fdiv
cmpb
clc
and
pop
xchg
sahf
out
mov
int3
jae
or
lret
inc
aam
and
int
push
sub
pop
xchg
aas
push
lahf
mov
adc
and
das
xor
xor
adc
xor
in
or
in
ret
pop
pop
cmp
lea
stos
ret
dec
cld
jmp
arpl
push
adc
pop
pop
mov
std
lods
out
adcb
dec
push
dec
push
jbe
and
aas
ss
addr16
sub
daa
xchg
fdivl
int3
sub
shl
dec
fidivrs
pushf
xchg
push
in
loopne
js
cmpb
xchg
and
jns
icebp
in
mov
cmpsl
xor
ret
sub
jl
pop
shll
mov
int3
in
aaa
cmpsb
dec
dec
or
xor
adc
ret
loopne
xor
fisubrs
mov
and
pop
jl
cmc
cld
cmc
je
jns
ret
stos
in
cli
js
mov
repnz
ficoms
lcall
jnp
sub
pop
adc
test
dec
inc
sub
out
jecxz
es
clc
dec
mov
mov
movsb
arpl
ret
inc
xchg
sbb
sti
cmp
sahf
insb
lock
cwtl
imull
lret
cmpsb
data16
lea
push
popa
addl
cmp
cld
xchg
je
dec
adc
lret
loope
push
mov
jbe
mov
insl
sub
jle
xlat
mov
lea
fnstenv
jmp
int3
or
and
mov
dec
and
xor
xchg
popf
insb
outsb
and
mov
test
adc
adc
or
hlt
push
shrb
inc
std
or
adc
das
enter
push
add
dec
sbb
popa
stos
subb
call
sbb
sti
outsl
pop
hlt
and
mov
mov
mov
pop
addr16
cmp
dec
std
xor
imul
fildl
inc
mov
inc
je
mov
adc
repz
push
jmp
push
cmp
into
and
fwait
in
or
out
or
push
clc
jle
push
or
stos
sbb
lds
mov
inc
lds
ljmp
mov
aaa
shll
ret
and
lds
or
test
push
add
xchg
dec
mov
leave
add
adc
in
das
dec
cmp
and
cmpsb
and
or
lret
xchg
or
push
adc
icebp
scas
fwait
sub
mov
subl
fisubrs
xchg
dec
mov
cmp
movsl
cmp
sbb
dec
lret
mov
int
xchg
out
adc
mov
dec
out
fnsave
in
adc
gs
push
push
mov
push
dec
sahf
jb
lret
sub
dec
fldl
jp
and
adc
mov
lret
testb
push
fcomps
loope
shrl
je
pusha
cs
scas
adc
add
push
repz
dec
pop
pop
pop
cmp
xlat
dec
push
adc
test
mov
dec
inc
repz
cwtl
jg
sub
inc
push
cmp
push
clc
in
bound
push
add
xor
push
sarb
nop
leave
mov
mov
enter
cmpsb
daa
out
push
jne
stc
dec
and
and
jns
pop
popf
mov
rsm
cmpl
pop
aas
or
sbb
shll
inc
idivl
inc
sub
mov
adc
mov
pushf
sub
mov
lahf
imul
daa
pop
dec
add
rcr
cmp
ss
pop
adc
sbb
les
jnp
dec
popl
or
insb
or
mov
cld
fistps
in
and
ret
and
sbb
pop
inc
push
add
ja
xchg
sbb
cmpsl
das
aas
mov
and
les
and
dec
fisubl
pop
dec
xlat
je
adc
test
sarb
int3
xchg
inc
stc
sbb
dec
adc
jbe
ret
pop
fdivrl
add
mov
loop
pop
stos
mov
sub
sar
cmp
lods
es
cmp
adc
mov
xchg
loopne
and
xchg
paddsb
cmp
cmpsl
jae
pop
stos
mulb
dec
mov
jne
addr16
mov
and
mov
cmpsl
and
jb
daa
pushf
pop
dec
pop
nop
dec
test
pop
xor
add
or
in
dec
push
popa
jecxz
mull
and
xor
jge
fidivrs
or
mov
xchg
add
jmp
lret
push
jmp
jge
ret
mov
xor
shrl
ss
test
adc
rcll
negl
aad
or
test
ja
dec
adc
add
sbb
gs
bound
adc
aas
imull
nop
inc
jecxz
out
enter
add
jns
inc
fnsetpm(287
jg
and
mov
divb
ficoms
push
dec
or
sbb
xor
ja
jb
mov
or
call
jo
pop
ja
add
loope
lret
xchg
imul
aam
and
lahf
mov
outsl
cli
adc
stos
cld
fisubrl
mov
and
outsb
js
inc
mov
xorl
xlat
fnsave
mov
push
mov
call
adc
movsb
push
movsb
test
xor
or
fcoml
mov
in
lret
iret
pushl
xor
push
mov
je
add
stos
scas
daa
xchg
mov
mov
icebp
adc
adc
test
in
incl
call
insl
dec
xor
push
sub
imul
loop
mov
outsl
mov
out
in
push
lds
fists
ds
dec
lock
add
and
je
xchg
pop
xor
sahf
xchg
xor
call
aam
or
pop
sub
lods
outsl
push
movsb
test
and
xor
and
xlat
into
pop
push
in
int
repnz
popa
mulb
add
push
pushf
je
es
fs
and
add
cmp
lea
mov
push
popl
loope
cmp
fnstsw
xchg
into
sbb
out
stos
xor
mov
mov
add
mov
xor
pcmpgtd
sahf
adc
cmpb
je
imul
cmpsl
shlb
icebp
in
ljmp
pop
sbb
jnp
mov
xor
xchg
sub
lret
out
dec
xor
imul
jmp
mov
jmp
inc
sbbb
cld
xchg
sarb
movsb
adc
test
dec
pop
mov
add
stc
pop
mov
cmp
es
test
cmp
cmpsb
movlps
xlat
sar
push
push
mov
dec
push
repnz
sahf
xchg
int
mov
mov
jo
sarb
insb
mov
data16
inc
hlt
or
mov
jno
xor
scas
dec
lea
shrb
pop
in
pop
pushf
cmp
sbb
es
dec
enter
jno
jg
pop
in
push
or
stos
push
sbb
jl
xchg
xchg
jmp
push
cmp
neg
lds
mov
cmp
pop
mov
xchg
or
cwtl
xor
push
scas
idivl
in
cmpsl
cmp
jge
jns
pop
add
jne
sub
into
cmp
nop
repnz
movsb
sub
dec
xor
adc
push
lock
loope
sub
push
pop
scas
adc
mov
loope
dec
xchg
xchg
fadds
push
mov
xor
adc
mov
add
jb
frstor
or
test
mov
insl
and
push
cmp
dec
and
imul
hlt
ja
cmpsl
jmp
dec
daa
xor
test
test
int3
stos
add
addr16
xor
inc
jmp
and
mov
inc
dec
sahf
mov
mov
push
xchg
pop
pop
ss
sbb
dec
inc
fsubs
jge
mov
push
xor
fcoms
pop
jle
push
or
push
arpl
ficompl
mov
repz
push
xchg
aas
push
lea
pushf
loopne
inc
mov
dec
dec
ret
mov
int3
aas
rorb
xchg
inc
xchg
out
xchg
dec
and
lret
lcall
out
rolb
fsubr
xchg
in
or
sub
inc
outsl
lcall
fsts
pop
xor
jbe
mov
xchg
xchg
xor
jae
dec
int
cmpsl
push
cltd
xchg
out
jge
loopne
pushf
xor
subl
test
jmp
inc
pushf
sbb
into
inc
adc
ret
pop
pusha
nop
in
xor
insl
mov
je
les
addr16
int
pop
ljmp
lock
loopne
jne
in
jcxz
in
mov
adc
mov
test
mov
dec
dec
lcall
dec
mov
int
shll
loop
scas
shrb
outsb
cmpsb
ds
enter
sbb
shlb
lahf
jmp
inc
jg
and
cmp
jecxz
pusha
sub
sub
mov
arpl
jne
addr16
std
fldt
mov
mov
pop
repz
mov
loop
cmp
sub
jg
or
sti
mov
sub
lea
negl
int3
and
mov
cs
insw
lds
push
les
popf
cmpb
cwtl
xchg
jp
lahf
pop
add
loopne
sbb
inc
stc
shr
add
pop
sub
arpl
repnz
xlat
push
add
lahf
mov
std
pop
push
sarl
es
pop
push
out
xor
xchg
ljmp
adc
adc
insb
inc
leave
ds
cmp
lcall
xchg
push
rclb
mov
cli
sbb
dec
jecxz
enter
xchg
mov
lcall
xor
cmc
adc
xchg
sub
js
iret
and
push
and
lret
movsb
adc
lahf
cli
fld
out
mov
inc
pop
inc
mov
test
push
je,pt
data16
adcl
jg
ds
pop
insb
lcall
hlt
out
and
pop
mov
inc
mov
sbb
add
push
stc
jno
add
enter
sti
add
and
xor
mov
push
lret
push
jns
iret
ds
in
xor
push
cmove
lcall
sbb
or
fistl
lods
push
lret
push
mov
ret
or
lret
sbb
aaa
mov
loope
inc
mov
aam
ret
int
add
adc
aad
mov
aad
dec
mov
cmp
inc
iret
cs
neg
inc
pop
cmp
xor
inc
add
inc
into
jl
add
or
out
xor
addl
movsb
ja
sbb
scas
mov
ret
mov
test
sbb
stc
push
dec
xor
clc
mov
pop
push
int
rol
cmc
push
or
xchg
jle
mov
js
dec
mov
dec
rcll
in
sub
jge
lods
filds
dec
repz
and
jne
or
aam
and
ds
cld
daa
scas
lret
sub
cwtl
pop
in
lods
test
mov
in
pop
xchg
jb
leave
outsl
sbb
ljmp
gs
stos
add
cmp
mov
dec
sbb
rorb
push
scas
jo
inc
and
andb
das
sarl
and
cmp
stc
push
dec
jge
in
adc
fisttpl
and
andb
cmp
pop
or
testl
ds
and
cs
test
xor
sub
jg
decb
int
or
push
sbb
lret
jo
aas
and
lahf
lcall
in
aas
sbb
and
es
nop
pop
lahf
push
fnstenv
push
pusha
push
jecxz
out
lahf
ds
shll
and
fnstsw
jbe
mov
add
sti
js
addr16
stc
clc
lea
pop
add
jno
ljmp
rorl
jb
mov
in
mov
add
xor
inc
or
dec
xor
std
xchg
sti
mov
mov
or
outsl
mov
sbb
lods
or
cmp
adc
in
stos
lods
mov
dec
and
lret
stos
out
and
mov
inc
mov
pop
cmc
dec
mov
jecxz
fldl
lods
and
rcr
xor
sbb
mov
jl
addb
int
cmp
test
test
and
popf
and
dec
imul
mov
in
mov
nop
lret
pop
ficompl
test
repnz
enter
lock
or
push
mov
jl
xor
loopne
addr16
add
push
pop
jnp
pushf
jae
cmp
pop
sbb
fsubrl
lods
mov
lret
fldl
and
dec
insb
std
iret
aas
sub
in
inc
and
jge
adc
sti
pop
repnz
insl
icebp
pop
scas
sub
pop
push
andb
push
jge
add
mov
inc
xchg
inc
jno
jecxz
and
ja
fdivrs
push
loop
int
imul
ret
cmc
ret
sub
dec
arpl
jo
ljmp
mov
jge
je
push
pop
mov
lods
dec
daa
bound
sarl
gs
pusha
imul
ljmp
sub
fists
loop
push
loope
inc
mov
xchg
mov
test
sti
mov
stos
or
inc
sub
jno
mov
sti
cmpsb
popa
scas
xlat
xchg
lods
mov
sbbb
mov
aaa
jge
sub
jecxz
sub
add
push
xchg
xor
fsubs
imul
mov
in
loop
loopne
mov
add
adcl
dec
mov
pop
jno
xlat
aam
into
pop
adc
pop
loope
test
stc
sti
pop
testl
movsl
cwtl
xchg
iret
xchg
push
cld
jmp
push
add
cltd
push
aaa
pop
dec
test
xchg
jp
cld
call
xchg
xchg
sti
jecxz
clc
cmp
pushf
imul
paddq
xor
test
fcomp
jae
imul
les
out
daa
cmpsl
repz
call
outsb
shlb
shll
test
push
dec
mov
sahf
mov
or
cmp
notl
pop
cmpsb
push
pop
xor
cmp
decl
pop
fidivl
push
jo
popa
imul
jno
inc
dec
sbb
cmp
shll
shll
xchg
push
xor
aad
arpl
sub
dec
sub
movsb
mov
out
push
cmp
test
adc
sub
out
push
or
out
pop
dec
shl
push
mov
sbb
push
xorl
popf
scas
add
shll
call
and
aaa
xchg
out
in
inc
int3
loopne
inc
scas
outsb
test
xor
dec
sbb
jb
in
sarb
adc
push
jns
je
paddsw
push
dec
popa
cli
fisttpl
adc
cmpsb
std
int
pop
jmp
pop
add
xor
mov
mov
arpl
sub
or
insl
ljmp
fiaddl
nop
out
inc
outsl
dec
icebp
test
testb
inc
pop
mov
aas
sbb
mov
stos
sahf
dec
or
or
out
jp
push
push
xor
pop
mov
lret
sbb
clc
mov
xchg
xchg
inc
or
loopne
pop
popa
in
mov
mov
cmc
dec
arpl
lods
xor
jnp
aas
outsb
add
cwtl
sub
push
mov
fistps
pop
das
mov
loopne
sahf
out
xor
or
cltd
cmc
xchg
pusha
dec
or
mov
clc
adcl
rorb
ja
xchg
jae
repz
pop
add
cmpsl
enter
adc
mov
imul
pushf
mov
add
in
jo
push
and
adc
and
cltd
insl
fistl
fidivrl
pop
sbb
mov
lods
lds
pop
or
add
mov
daa
inc
and
adc
out
add
xchg
int3
into
ljmp
test
daa
sbb
lahf
pop
hlt
je
ja
ss
mov
daa
mov
mov
dec
divl
sub
mul
test
jb
inc
divl
jl
pop
into
mov
repnz
test
push
xchg
push
cld
adc
xchg
cwtl
add
lahf
xchg
fdivrl
mov
inc
addr16
sbb
cwtl
cld
movsb
jae
cmc
loope
int3
xchg
das
and
and
pop
xor
mov
sbb
mov
and
mov
mov
imul
jne
ret
fldenv
or
test
and
fcmovbe
lods
inc
mov
xchg
or
ljmp
sahf
int3
loope
lds
mov
mov
jae
rcl
stos
sti
test
lods
jno
mov
push
addr16
push
push
and
lret
xlat
test
xor
mov
dec
push
cmc
cmp
lret
jmp
cs
push
mov
stos
mov
cld
mov
xchg
into
repnz
jae
pop
out
pop
add
inc
add
add
adc
bound
pop
rcrb
or
icebp
inc
dec
dec
add
add
dec
sbb
xchg
add
out
aas
test
dec
push
test
hlt
or
stos
inc
sbb
in
dec
bound
mov
jo
iret
sti
push
leave
call
test
inc
test
lea
lret
ss
push
int3
shl
popa
mov
call
mov
pusha
pop
dec
adcl
icebp
add
int
ds
mov
inc
cmp
insb
insb
popf
inc
test
int
mov
jle
xchg
and
pop
and
mov
out
mov
mov
sub
jl
stos
rcl
xor
arpl
aad
test
jbe
xchg
lret
inc
push
mov
cmp
out
sbb
rorl
xor
dec
rcll
inc
push
cmpsl
xor
inc
inc
aad
inc
mov
dec
stc
int
adc
std
jle
outsl
out
inc
roll
sbb
push
push
and
mov
xchg
movsl
mov
clc
leave
inc
add
push
cmc
cmp
mov
fistpll
and
or
xor
ficompl
dec
inc
sahf
aam
hlt
fisubl
adc
lods
sub
sub
out
idivb
dec
pop
es
mov
callw
inc
enter
sub
sbb
push
pop
es
mov
callw
inc
enter
sub
sbb
push
pop
es
mov
callw
inc
call
mov
xchg
xchg
sbb
push
pop
es
adc
incb
mov
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
call
adc
add
cmp
mov
sub
cmp
rorl
rorl
fildl
stos
jno
jno
push
fwait
xor
sub
cmp
or
sbb
push
sub
cmp
add
mov
fstpt
dec
fwait
pop
cmpxchg
and
ds
inc
mov
inc
scas
test
push
lret
je
scas
mov
mov
sub
dec
in
adc
subb
push
cs
mov
dec
sbb
test
cmp
popf
dec
maxps
shll
or
in
adc
and
pop
cli
cli
dec
andl
cmp
sti
pop
jle
push
jle
ret
shll
test
outsl
xchg
fisubrs
out
aaa
push
push
jno
jno
and
jnp
iret
outsb
movsl
or
int
or
sbb
adc
neg
jmp
inc
jne
mov
adc
pop
adc
dec
dec
clc
pop
dec
imul
icebp
repz
adc
push
lret
mov
les
adc
jg
ret
jle
fldcw
or
sbb
mov
lods
xor
or
add
ret
popa
mov
pop
lods
mov
mov
arpl
xor
cmp
sbb
xorb
push
mov
jae
add
cmp
sub
pop
xchg
push
jecxz
mov
sahf
dec
mov
jno
das
jle
into
jae
lds
les
and
bound
xchg
and
inc
mov
inc
imul
subl
rcrl
shr
sti
and
adc
add
push
fwait
inc
imul
subl
rcrl
shr
pop
xor
xchg
sbb
fs
push
jmp
lahf
cmp
sub
mov
fbld
rcrb
jl
and
clc
cmp
ds
jle
in
bound
ss
negl
add
inc
call
push
ret
pop
jl
inc
in
aam
xor
aaa
pop
push
pop
hlt
int3
push
adc
hlt
imull
testl
repnz
dec
mov
in
lret
mov
lds
ret
mov
mov
and
mov
fcompl
sub
lea
nop
addb
lods
xor
inc
dec
fnstsw
std
faddp
das
cwtl
divb
or
push
sub
pushf
test
and
sbb
aas
cmp
loope
mov
mov
clc
fadd
xchg
add
stos
cmp
push
sbb
jp
je
cli
add
cmp
out
insl
sarb
int
xor
xor
mov
je
imul
data16
dec
pop
jecxz
jns
adcb
cmp
cmc
pop
enter
mov
clc
or
pop
cmpsb
cmp
mov
loop
jne
cmp
gs
push
cmp
jo
or
out
cld
fmul
jnp
fs
push
mov
ljmpw
sbb
jns
clc
xor
nop
cmc
stc
fs
aam
jecxz
cs
iret
scas
inc
mov
stos
cmp
aaa
out
fiadds
sbb
test
fimuls
mov
xchg
fisubl
jp
rcrl
mov
mov
shr
jb
pop
push
rclb
dec
lods
mov
aam
adc
jmp
jmp
cmpsb
or
cmp
inc
enter
xlat
mov
pop
dec
scas
sahf
in
add
mov
mov
and
adc
cmpsb
popf
lahf
dec
test
or
xorb
fs
dec
xor
or
scas
ret
dec
and
cmp
imul
test
pop
in
xchg
push
xor
movsb
bound
dec
push
imul
movsb
out
jae
scas
out
dec
xchg
outsb
mov
mov
pop
addr16
mov
mov
data16
insb
idivl
add
faddl
aaa
xchg
inc
mov
dec
xchg
nop
dec
shlb
push
or
xchg
push
loope
xchg
push
or
icebp
faddl
test
and
dec
pop
push
scas
icebp
fwait
repz
pop
and
jae
xchg
push
outsl
lcall
insl
mov
mov
or
add
fs
and
jo
push
pop
and
or
adc
adc
mov
cmp
pop
shr
pusha
ret
hlt
fwait
xlat
dec
mov
or
jl
xchg
cmc
scas
jge
cmp
fdivrl
and
cli
fwait
popa
sbb
cmpsl
push
or
sbbl
or
movsl
and
test
sub
mov
or
test
ljmp
sbb
movsl
jnp
test
in
mov
dec
les
or
shlb
dec
enter
repz
mov
dec
xlat
xchg
clc
inc
or
out
pop
mov
dec
icebp
mov
jne
xchg
add
jg
jg
out
add
lahf
movl
cli
mov
push
xchg
fidivl
ss
or
jmp
fldl
sub
add
jl
xchg
push
lods
imul
cmp
jo
int
fistpl
xchg
jl
push
and
sbb
fists
sbb
mov
dec
pop
inc
in
add
inc
fwait
les
mov
pop
and
add
dec
push
xchg
xor
mov
cltd
jecxz
jns
in
inc
icebp
outsl
pop
push
nop
enter
and
lods
cmp
jle
xchg
gs
push
dec
sub
std
dec
jne
sbbb
leave
jmp
insl
movsl
das
cmp
jg
jb
lds
andl
popa
pop
popf
sbb
cld
lea
lret
popf
outsl
adc
dec
push
jno
fildl
enter
sbb
pop
lods
pop
ret
and
fstps
test
mov
and
dec
lret
pop
fcoms
pop
xchg
mov
mov
and
and
sbb
jle
xchg
inc
sub
fidivrl
cmp
mov
jg
int3
fimuls
into
pusha
int3
rclb
jne
ret
jne
add
std
fwait
push
inc
pop
imull
or
ljmp
cli
add
arpl
and
or
pop
cwtl
xchg
inc
dec
mov
mov
movsb
mov
in
jl
add
pop
sti
or
jle
mov
subl
mov
and
xchg
shl
jne
cmp
mov
loop
jg
adc
cmp
lds
in
pop
lahf
add
xchg
lret
push
stos
leave
jnp
jmp
cmpsb
jb
jmp
mov
push
cmp
adc
fsubrp
outsl
daa
fdivrs
xchg
imul
dec
stc
sbb
int
push
fnstcw
pushf
jmp
pop
mov
xchg
push
movsb
mov
fdivrl
movsl
sarb
inc
adc
mov
inc
adc
leave
scas
loop
or
addl
mov
fcmovnbe
or
pop
cmpsb
sbb
out
push
sub
out
lods
test
jae
aas
mov
cmp
xchg
mov
fsubp
xchg
mov
nop
or
je
or
lods
mov
and
add
nop
mov
add
repnz
adc
mov
pop
fwait
sub
mov
lock
mov
sahf
fwait
xchg
arpl
mov
dec
mov
lahf
popa
fnstsw
rorl
enter
mov
push
and
lret
jmp
and
outsb
lock
and
in
mov
fisttpll
mov
ljmp
push
out
xor
test
pop
and
or
lods
test
and
inc
pop
xchg
fmull
nop
aad
jae
push
rorl
enter
ss
pop
loop
jecxz
dec
mov
cmp
fwait
adc
sbb
mov
dec
push
cwtl
cmpsb
call
jle
or
mov
sbbl
cs
scas
xchg
pop
push
das
ficoms
add
jl
dec
mov
lods
mov
dec
arpl
aaa
mov
aad
leave
pop
dec
lock
fs
jg
cmp
sub
xor
mov
mov
and
cld
fmull
addr16
xchg
cltd
sbb
test
test
fiadds
push
mov
xchg
xlat
pushf
and
jb
xchg
outsb
xchg
outsl
add
dec
sbb
ret
out
push
pop
mov
xchg
adc
push
mov
loopne
jbe
loopne
add
mov
pop
sahf
pop
cmp
cli
mov
push
sti
mov
into
loope
push
xchg
jmp
fildll
mov
mov
adc
int3
or
fdivr
lods
iret
imul
xor
inc
jle
mov
sahf
aaa
sub
out
jne
roll
fcmove
iret
and
xlat
arpl
or
icebp
gs
xor
xchg
sti
mov
in
pop
or
mov
addr16
sbb
sti
cli
arpl
fimuls
mov
mov
test
fwait
in
or
jge
push
mov
cmpsl
cld
ljmp
mov
jg
das
mov
pushf
rclb
nop
scas
or
das
pusha
cmp
and
jno
adc
andb
mov
int3
inc
pop
add
ds
push
mov
pop
jecxz
inc
adc
icebp
jg
movsl
mov
aam
cmp
cwtl
test
and
sub
outsb
in
jg
mov
push
lock
stos
hlt
sbb
jo
fisubl
or
xchg
inc
xor
sub
das
iret
jecxz
xchg
xchg
sub
movsl
add
pop
jp
lock
jmp
mov
adc
shlb
je
sbb
cmc
jg
in
lret
arpl
mov
adc
add
or
ret
mov
out
insl
add
rorl
pop
xchg
movsl
mov
mov
repnz
mov
push
clc
push
inc
sub
or
jnp
push
mov
jb
pop
jno
xor
dec
sbb
sub
fldl
scas
pop
adc
mov
dec
and
cltd
lret
ficoml
into
jno
fldcw
out
sahf
nop
out
pop
sar
fldlg2
stc
aas
nop
loopne
mov
pop
and
and
sarb
cmc
adc
int3
push
into
insl
aad
ljmp
je
sub
dec
in
sarl
sti
imul
adc
push
mov
mov
clc
add
push
cmpsl
jbe
jg
adcb
dec
flds
mov
nop
inc
movsl
aas
cmp
in
stos
jg
adc
xchg
adc
add
movsb
jle
mov
nop
mov
sahf
mov
adc
mov
loope
inc
cmp
icebp
enter
rorb
iret
fldcw
push
call
xchg
nop
jae
sub
in
cmp
arpl
push
cmp
aas
mov
cmpsl
call
inc
outsl
pop
cmp
ficomps
fs
pop
jg
mov
mov
cwtl
push
pusha
call
and
pop
dec
enter
lea
or
jnp
mov
loopne
jl
push
orl
roll
pop
out
jge
adc
mov
in
lcall
pop
push
push
daa
into
imul
es
mov
and
movsl
xlat
xchg
and
stos
cmp
push
push
xchg
xlat
test
xor
pop
xor
adc
dec
push
mov
stc
notb
xchg
mov
jns
xchg
data16
jl
lahf
or
push
push
nop
fwait
mov
xchg
idivb
ret
push
inc
cmpsl
and
sub
popa
xor
cmp
sbb
push
enterw
sub
xchg
sbb
xchg
in
push
jnp
mov
push
push
mov
aam
scas
data16
shll
jae
sbb
mov
fwait
sti
insb
popa
lcall
push
pop
pusha
dec
iret
jmp
push
repnz
in
jmp
sbb
xchg
cmc
xor
and
mov
lahf
inc
mov
leave
jmp
and
je
cmp
inc
add
xchg
mov
mov
lret
push
adc
lcall
cltd
push
dec
dec
push
adc
aad
fdivrs
mov
mov
mov
pusha
and
dec
pop
sbb
fsubs
jecxz
fs
in
sbb
fiaddl
pop
sub
aas
push
arpl
xor
lods
lcall
cltd
inc
adc
mov
push
jle
mov
or
leave
push
dec
scas
jmp
mov
out
mov
and
push
sbb
les
jge
jnp
pop
int3
es
lcall
inc
out
dec
pop
bound
ficoml
jno
sub
stos
xchg
dec
mov
mov
movsl
xchg
xchg
mov
data16
pop
sub
rcl
hlt
push
jb
add
imul
and
jmp
jge
insb
fmul
in
ljmp
int3
inc
imul
movsl
stos
xor
insb
dec
imul
adcb
xchg
adc
pop
incl
pop
ja
lret
das
sbb
aad
lcall
mov
pop
or
xchg
imul
xor
mov
icebp
loopne
push
pop
add
jnp
dec
testl
mov
lret
out
mov
dec
mov
mov
and
mov
jecxz
std
mov
cld
bound
sub
testb
popa
push
mov
xlat
jae
out
jnp
and
bound
adc
fdivp
push
xor
cmp
inc
xchg
push
jns
mulb
adc
aaa
push
xchg
sbb
push
test
dec
xchg
sbb
loope
popf
out
cmp
iret
test
mov
push
add
sub
nop
sbb
push
into
xchg
loope
sbb
push
outsl
leave
nop
sbb
mov
push
mov
movsb
lea
xlat
ja
scas
repnz
xchg
or
xchg
lret
jge
or
xchg
repz
in
mov
jg
addr16
dec
mov
insl
mov
fbld
mov
fpatan
decb
jo
xlat
adc
cmpsb
jmp
mov
lods
push
movsl
sub
divl
pop
mov
lcall
xchg
and
xor
mov
sub
out
jecxz
jl
mov
inc
adcl
dec
mov
mov
mov
jle
lret
icebp
test
rorl
and
jle
jno
aad
pcmpeqd
lret
pusha
outsl
leave
push
adcl
push
in
xchg
loop
adc
out
cmpsb
arpl
xchg
arpl
xchg
and
xchg
push
pop
mov
popf
in
xor
xor
into
ljmp
push
add
jae
cmpsl
pop
sub
shrb
and
nop
mov
bound
mov
in
sub
add
pop
dec
pop
lret
mov
sbb
stos
dec
pusha
lea
jp
xchg
xchg
cmpsl
ja
sub
in
loopne
fwait
mov
xchg
pop
stos
pop
cmc
add
daa
or
jns
sub
pop
add
js
lret
xor
pop
inc
in
jno
sbb
mov
shll
sbb
enter
pop
dec
push
mov
ret
sbb
mov
sbb
mov
mov
dec
pop
add
into
cmp
jle
out
xlat
sarl
hlt
ja
loopne
jnp
sub
inc
jp
jge
pop
push
or
stos
xor
fcomps
movsl
and
mov
scas
fsubrs
aaa
push
dec
cmp
push
jne
imul
mov
push
mov
mov
jnp
xchg
pop
xchg
push
xor
cltd
shl
hlt
cmp
add
shl
test
popf
pop
ret
rorl
mov
dec
and
add
dec
push
push
addr16
les
js
movsb
dec
loope
lea
add
or
mov
int
cmp
cmp
sub
inc
cmp
dec
leave
mov
push
xchg
mov
xlat
test
fidivl
push
xor
in
addr16
or
ret
test
mov
and
outsl
sub
lock
sub
push
rcrl
mov
jb
xlat
fs
add
sti
push
stos
cmp
push
sbb
pop
scas
in
dec
les
jecxz
ss
outsb
or
inc
subb
sub
rcl
sbb
addr16
imul
cld
stc
mov
insl
mov
xor
xor
or
jae
sub
in
or
cmc
mov
jnp
mov
pop
xchg
rcll
inc
mov
jnp,pt
bnd
outsl
pop
push
out
push
addr16
jecxz
mov
dec
das
sub
enter
pusha
hlt
add
sbb
imul
mov
mov
and
jne
mov
adc
sti
data16
fwait
cs
test
xor
daa
sti
xlat
les
or
aad
lea
dec
sub
cmpsb
mov
push
fstp
imul
dec
idivl
insl
js
aam
cmp
popa
mov
loope
push
lods
add
xchg
mov
lcall
and
out
xor
iret
dec
add
and
mov
dec
mov
fstpl
sahf
imul
js
cli
dec
imul
mov
and
mov
xlat
cmp
jbe
jno
mov
sbb
xchg
neg
pop
dec
data16
dec
lods
cmp
xor
dec
xchg
mov
shrb
adc
dec
xor
clc
xchg
ret
adc
loope
popf
mov
fistpl
mov
and
pop
adc
scas
push
pop
std
imul
sub
loope
cmpsb
pop
pop
pop
mov
xchg
push
in
jb
jae
test
inc
arpl
inc
mov
or
jo
data16
mov
loopne
out
jae
lret
add
bound
or
repnz
add
nop
cwtl
push
andb
add
lods
fisttpl
nop
mov
shrl
cmpsb
test
cs
dec
jnp
cmpsb
loopne
mov
pop
popa
cmp
push
mov
das
push
jge
or
xchg
pop
fdivl
pop
mov
cltd
popf
addr16
mov
cmc
adc
lea
xor
mov
sti
xor
mov
xchg
insb
adc
loopne
clc
rclb
sub
dec
adc
xor
in
pop
push
pop
nop
xchg
push
cwtl
mov
push
inc
cltd
cmp
in
xor
cmc
int
imul
outsb
dec
push
insl
in
cmp
mov
sub
das
stos
shrb
xchg
inc
arpl
ret
xchg
cmp
std
clc
leave
sbb
and
push
gs
dec
lahf
mov
nop
xchg
daa
jl
pop
or
incl
stos
in
jae,pn
int3
shrl
aad
adc
xchg
sub
add
ret
ror
bnd
push
cld
cmp
xchg
repz
dec
adcb
inc
dec
mov
aas
cmp
inc
and
pop
movsb
js
mov
pop
xchg
call
scas
lret
inc
sbb
lock
call
ret
jno
push
mov
sarb
mov
shrb
sbb
add
loopne
sub
xchg
dec
sub
mov
shrl
push
cmp
jle
call
jb
out
jmp
repz
pop
popa
ds
xor
add
jp
sub
dec
add
mov
les
subl
sbb
dec
addr16
push
push
add
push
jmp
or
mov
push
dec
addl
pop
out
neg
mov
scas
sti
xchg
aam
xor
or
push
aas
mov
and
clc
adc
pop
popf
lods
cmpsl
mov
dec
lcall
repnz
add
mov
pop
jbe
mov
ret
out
adc
push
scas
and
or
addr16
inc
gs
test
fadds
add
jbe
xor
jno
mov
mov
mov
out
insl
stos
push
loope
scas
xorl
or
cmp
pop
mov
leave
fsubrp
xchg
scas
cmp
lea
int
inc
rcll
aaa
fistps
test
mov
add
xchg
push
insb
sub
in
xor
lret
xchg
fwait
stos
mov
xchg
das
iret
add
movsb
sub
fcoms
mov
adc
sub
lds
mov
mov
adc
lcall
call
int
cmp
orb
in
icebp
clc
push
mov
xchg
mov
cwtl
into
inc
push
aas
jns
mov
leave
sbb
ret
jb
jae
je
and
pop
jge
mov
int3
in
jle
sub
insb
or
js
lods
push
loopne
pop
cmp
cmp
fildl
or
pushw
sub
push
shr
jne
lret
aas
test
fsubl
xchg
fstps
adc
mov
xchg
and
test
cli
xchg
imul
fimull
enter
sbb
push
dec
and
das
test
jge
inc
pop
adc
leave
push
mov
mov
jns
jecxz
xor
add
out
adc
int3
adc
subl
hlt
adcl
aas
dec
dec
jge
sub
sub
sub
inc
sarl
adc
lock
popf
daa
sub
ficompl
ss
mov
fwait
mov
insl
jns
imul
imul
mov
and
lods
cmpsb
push
mov
inc
addr16
push
cmp
push
push
mov
push
mov
jge
mov
xorb
add
mov
fcomps
cmc
push
aam
pop
push
lret
test
mov
xor
bound
inc
lods
inc
jns
add
mov
in
mov
adc
imulb
dec
sub
pusha
lret
mov
xchg
xor
mov
inc
jle
inc
test
rcpps
in
dec
lock
sub
ret
inc
repz
lea
loop
jmp
add
pop
lret
movsl
inc
idiv
cmpsl
je
xchg
aad
cmp
mov
inc
xchg
sarb
imulb
mov
dec
pop
enter
nop
sub
fisttpll
xchg
sub
mov
ret
xchg
int3
add
and
pop
fldcw
das
lret
mov
xlat
test
cmc
push
insb
dec
dec
stc
sub
repnz
fists
ficoms
or
xchg
cwtl
scas
jmp
or
add
scas
add
cmp
add
jl
mulb
mov
outsl
fisttpl
pop
pop
aas
ja
loopne
ljmp
pop
testb
enter
xor
fldl
outsl
add
push
repnz
rorl
mov
shlb
adc
bswap
pusha
pushf
fildl
dec
addl
lcall
push
icebp
push
or
lea
add
cmpsb
dec
cmp
and
jb
enter
es
fucomp
iret
rcl
scas
lahf
xchg
test
lret
subl
mov
mov
jle
xor
and
aas
mov
cld
xlat
lds
add
in
mov
fildl
stos
jno
popa
mov
inc
imul
subl
rcrl
shr
sti
and
adc
add
push
fwait
inc
imul
subl
rcrl
shr
lret
and
jno
popa
mov
inc
imul
test
icebp
sub
or
repz
cmpsl
and
stos
jno
popa
mov
subl
pop
negb
sahf
hlt
scas
in
dec
sub
cmp
or
sbb
sbb
or
out
mov
shr
cmp
enter
sub
cmp
or
sbb
inc
js
dec
arpl
cltd
test
mov
roll
fmuls
sub
cmp
or
sbb
pop
js
dec
je
xchg
test
xlat
stc
cld
mov
mov
jg
dec
sbb
mov
shrl
jnp
jp
dec
loopne
lods
aas
call
adc
mov
push
xor
addl
pop
fdivrl
popf
scas
cld
outsl
call
outsb
mov
inc
clc
popa
mov
jl
jecxz
pop
enter
clc
pop
dec
and
ret
insl
adc
and
jns
and
cmpsl
push
jmp
mov
js
call
or
repz
cld
push
add
xor
and
fwait
push
jl
cmpsb
ja
pushf
jns
ret
enter
lods
add
out
imul
sbb
dec
jo
lea
call
jecxz
shrl
add
xor
xor
inc
push
jp
mov
mov
clc
repz
sub
jns
or
aaa
or
push
or
roll
in
mov
mov
xchg
adc
pop
push
insl
and
daa
add
xor
and
cmp
jecxz
shl
std
mov
mov
sbbl
jo
jp
jge
inc
inc
js
dec
arpl
test
mov
shr
ret
clc
repz
sub
cmp
or
sbb
inc
js
dec
arpl
test
mov
shr
ret
clc
repz
sub
push
push
dec
fidivrl
xchg
int3
cmp
mov
enter
ss
jb
jecxz
in
jns
fdivrs
or
push
lods
imul
inc
repz
mov
hlt
stc
lock
orb
cs
lcall
cmp
int
cmp
ljmp
sbb
mov
neg
add
and
ljmp
xchg
in
cld
jg
or
inc
or
push
add
cmpsb
imull
icebp
mov
mov
xchg
cli
lahf
nop
or
sub
out
sbb
inc
aad
je
mov
fcompl
lods
int
pop
gs
lret
lea
in
cmp
ficoml
outsb
dec
mov
bnd
in
mov
sub
enter
dec
pop
ja
mov
push
mov
xchg
inc
mov
pop
rcrb
add
insl
mov
cmp
adc
sub
and
sub
inc
cmpsl
mov
pushf
mov
and
dec
ror
pop
int
cmpsb
sub
jnp
idivl
sbb
hlt
sub
mov
notb
daa
loop
testl
add
sub
add
adc
hlt
out
es
iret
mov
pop
in
jl
cmp
cmp
ret
lods
rcll
adc
leave
aaa
mov
movsb
lahf
mov
adc
pop
pop
pop
int
fldcw
repnz
js
xor
lods
daa
in
nop
pop
mov
dec
pop
cmp
test
in
jo
lock
arpl
jne
sbb
dec
lds
cwtl
stos
mov
pop
or
mov
cmp
test
push
fcmovnbe
jno
mov
fwait
ret
pop
sub
and
dec
cmc
push
sub
rolb
xchg
xor
in
xchg
cmc
xchg
jge
ljmp
push
cs
stc
xor
stc
daa
add
inc
ds
cmc
lods
repnz
imul
out
pop
sub
sbb
shll
and
or
add
adc
ret
es
jne
mov
cmp
iret
arpl
shl
jp
jbe
shl
adc
in
outsl
sbb
outsl
lret
jbe
sub
sub
repz
pop
mov
movsb
inc
push
cmpsl
pop
addr16
testl
xchg
cmp
xchg
dec
pop
testb
pop
inc
or
mov
enter
into
or
into
push
sti
pop
pop
cmpsl
mov
push
call
pushf
lock
adc
fimuls
scas
scas
add
or
sti
loope
pop
mov
repz
xchg
and
fistpl
and
xchg
loopne
and
ss
mov
dec
mov
jl
movsl
push
jle
adc
dec
cmp
inc
inc
cmpsl
jnp
sub
jno
ja
mov
xchg
imulb
fsubl
imul
arpl
xchg
iret
seta
arpl
sbb
add
jl
or
les
sbb
cwtl
inc
add
adc
fwait
out
jns
inc
push
jbe
inc
rcrl
je
push
movsb
pop
xlat
jecxz
fnsave
outsl
test
push
xor
fs
test
rcll
lods
sbb
pop
dec
pop
imul
pop
jecxz
sbb
inc
push
push
mov
and
xchg
lcall
sub
add
pop
stos
dec
xchg
out
jae
fsubrs
xchg
repz
call
xchg
dec
push
fdivrl
mov
pusha
or
push
mov
lock
call
and
fmul
inc
sub
jle
outsb
scas
adc
jne
xchg
sub
pop
int3
dec
mov
sbb
jb
xor
nop
insl
mul
adc
out
in
mov
push
pop
xor
inc
shll
cwtl
or
out
cmp
mov
in
push
fists
gs
add
push
out
jne
call
pop
movsb
sub
aad
push
pushf
test
or
pop
fldt
dec
js
gs
xor
push
rolb
cld
jg
pop
and
bnd
push
out
les
cmp
xor
jg
inc
mov
jge
outsl
push
mov
into
out
repz
in
xchg
cltd
push
mov
mov
out
mov
adc
push
hlt
push
cmpsl
push
sub
mov
mov
stos
mov
xor
xor
push
mov
jl
mov
sub
divl
mov
mov
das
cmp
and
jbe
jae
sub
adc
or
pop
inc
inc
pop
cmpsl
push
daa
jo
inc
fcompl
or
adc
push
or
fsubl
addl
dec
cmp
dec
roll
adc
in
outsl
mov
ljmp
or
lret
push
sub
cs
add
lods
dec
pop
outsb
clc
xchg
notl
enter
xchg
xchg
aad
cmpsb
adc
and
testl
inc
mov
jmp
imul
pop
test
sbb
test
call
jne
aas
mov
bound
push
and
cmp
pop
xchg
sti
lea
pop
and
adc
sahf
inc
push
rolw
clc
mov
sub
out
cmp
adcl
push
pusha
out
xor
and
adc
scas
dec
xchg
push
dec
mov
mov
das
paddd
xchg
mov
stos
mov
hlt
mov
subl
das
adc
mov
into
or
mulb
jg
fdivp
lret
outsl
inc
push
fs
hlt
ret
mov
cmp
pop
cmp
mov
cmp
push
sub
outsb
dec
cli
mov
es
dec
rcrl
lahf
sbb
sbb
push
mov
scas
push
push
movsl
jne
jbe
fxch
rdrand
mov
addr16
sbb
rcr
int
cltd
in
cmpb
cmpsb
movsb
add
jp
push
test
int
push
mov
nop
inc
inc
jge
daa
or
lcall
and
es
mov
inc
out
fiadds
mov
ret
mov
fistps
out
ds
in
jae
mov
pop
mov
pop
ljmpw
lret
outsb
fdivrs
mov
jns
scas
cmp
mov
aad
push
mov
test
dec
fsubrs
ljmp
in
or
sbb
jl
bound
negl
jp
fsubrp
scas
dec
xor
or
dec
fnstsw
sbb
lret
loope
hlt
and
jno
hlt
jle
imul
dec
sub
fists
lret
mov
mov
stos
repz
mov
fildll
jmp
add
inc
xchg
movsb
push
pusha
xchg
inc
dec
test
cmp
sub
popf
push
sbb
movsl
aad
push
mov
icebp
mov
xchg
dec
fsubs
xor
push
xor
ret
jg
lods
test
xchg
jg
ficoms
pop
jp
pop
loopne
mov
in
xchg
int3
mov
push
sub
xorl
add
mov
test
inc
dec
test
cwtl
iret
lds
add
insb
inc
lret
pop
inc
fsts
sub
sbb
cmpb
sub
jge
lcall
inc
sarb
pop
push
add
daa
cmpb
xor
jp
fcmovbe
ja
xchg
pop
push
jnp
addr16
cld
cmp
push
mov
sub
in
pop
jbe
pusha
cmpsb
inc
push
cltd
outsb
sbb
jns
jp
divb
loope
mov
pop
je
jmp
stos
pop
movsl
mov
mov
notl
fs
inc
fisttpl
dec
inc
cld
sbb
lcall
fld
add
lret
ljmp
cmc
mov
sti
aad
icebp
pop
ss
mov
int
add
push
clc
icebp
imul
push
jno
les
js
les
insl
loop
sbb
mov
ds
xorl
shlb
add
dec
pop
maskmovq
mull
data16
subl
xchg
lds
shll
and
stos
adc
jmp
fisttpl
mov
pop
sbb
inc
xchg
call
fistpl
push
xchg
aad
lret
or
mov
xchg
shrb
lods
xchg
cmp
fisttpll
cmp
lcall
in
or
dec
push
out
addr16
shll
pop
ljmp
les
push
ds
jmp
iret
fisttpl
cwtl
aad
int3
mov
test
scas
decl
das
leave
xor
mov
outsl
mov
mov
xlat
mov
xchg
push
iret
fstp
insl
outsl
scas
ficoms
lahf
mulb
popa
arpl
addl
mov
pusha
xor
xor
out
pop
cmc
enter
xor
lcall
cmc
sbb
jo
cmp
dec
scas
daa
xchg
in
and
xor
add
or
je
adc
in
and
ficompl
mov
jmp
push
mov
push
inc
cs
and
xor
imul
adc
insb
es
dec
xor
cs
stc
dec
test
idivl
xor
mov
or
pop
loopne
push
xor
shlb
lahf
xchg
and
pushf
sbb
sbbb
pop
jnp
loopne
mov
fnsave
repz
lds
push
mov
push
fisubrs
rolb
mov
jmp
fcmovu
std
sbb
daa
aad
mov
sbb
aad
leave
adc
cmc
xor
test
out
mov
xlat
cmp
idiv
or
scas
insb
out
jno
cmp
int
fbstp
ja
cmpsl
xor
jbe
and
addr16
loope
lds
jae
pop
pop
rolb
clc
aaa
push
cmp
iret
icebp
out
call
push
mov
mov
inc
pop
ljmp
push
adcb
mov
lods
out
jmp
push
jl
scas
add
push
dec
mov
or
psubsw
xchg
lea
mov
and
cmp
andl
xor
inc
loop,pn
out
cmp
lods
scas
enter
dec
mov
lcall
stos
adc
push
out
cmp
adc
xlat
pop
dec
cwtl
nop
mov
push
repz
mov
add
mov
and
leave
push
mov
cmp
jnp
pop
mov
sbb
mov
lods
mov
popa
or
jle
mov
inc
std
and
dec
ljmp
mov
sub
call
lds
xchg
shlb
mov
mov
in
add
lahf
call
mov
xchg
lahf
pop
push
pop
pop
mov
test
data16
mov
nop
mov
push
insb
push
mov
lahf
jbe
push
ss
imul
daa
sahf
sbb
cld
mov
push
mov
adc
push
mov
arpl
push
cld
pop
push
xor
xor
pop
jns
fs
scas
push
push
aad
fdivs
insl
adc
shll
add
inc
in
push
push
inc
ja
add
jae
imul
js
nop
push
test
mov
mov
mov
cmp
dec
mov
les
inc
insb
pop
dec
xorl
ret
xor
pop
dec
and
mov
mov
adc
dec
push
add
mov
inc
arpl
stc
push
push
xor
sub
mov
jl
ds
mov
repnz
outsl
and
repnz
imul
shlb
repz
inc
negl
sbb
bound
cmp
sub
xchg
xchg
sbb
mov
fistps
lock
out
lea
dec
imul
imul
popf
ror
sub
pop
hlt
outsl
gs
or
and
xorl
out
sbb
push
fcmovb
sub
or
mov
lret
pop
cwtl
mov
mov
xchg
adc
xchg
push
lcall
lds
and
jge
sbb
mov
das
and
sbb
fwait
pop
repz
int
sub
fcmovnu
es
out
das
and
mov
in
popf
pop
in
loop
xor
sub
js
jle
stc
xor
das
aas
icebp
pop
mov
int3
xchg
ja
repnz
dec
ja
jp
push
xor
mov
mov
adc
mov
sbb
sub
popf
in
sahf
repz
add
jmp
iret
mul
inc
add
int
pop
stos
pop
mov
cmpsl
rdpmc
adc
or
jb
sub
inc
fwait
into
in
pushf
rcll
xchg
xchg
push
pusha
cmp
fdiv
add
jl
lret
test
add
icebp
and
xor
and
inc
push
xchg
xor
jcxz
fistpl
push
add
fxam
cmp
pop
dec
cli
jne
loope
cli
dec
lea
mov
pop
push
aaa
movsl
mov
arpl
in
shll
cltd
mov
cmpl
loop
and
fwait
repz
mov
cmp
push
pop
mov
xchg
test
dec
lret
or
push
mov
pop
jmp
cmp
cwtl
andl
jp
mov
jne
mov
sub
push
xchg
mov
sbb
lea
faddl
icebp
jno
pop
stc
divps
in
or
pop
dec
xchg
imul
push
lcall
dec
jb
lods
andb
scas
jl
imul
pop
push
fiadds
push
push
mov
mov
sbb
sbb
shrl
push
xchg
mov
daa
pop
pop
push
popa
popf
js
test
ret
cmc
jge
lock
cmp
insl
sbb
shr
or
lock
dec
or
or
not
xor
cmp
mov
and
int3
xor
dec
jne
push
dec
sub
call
mov
mov
in
pop
inc
shll
xlat
cmp
jmp
aam
fbstp
or
and
in
adc
mov
insb
inc
sbb
and
cwtl
call
sub
ret
push
mov
jp
cmp
lock
xor
repnz
lods
add
adc
out
jno
or
add
mov
push
popf
cmp
mov
push
dec
popa
sub
mov
and
add
mov
jmp
and
test
imul
adc
adc
mov
lods
mov
mov
shlb
push
fistpll
mov
cltd
andb
add
pop
inc
add
lret
sbb
jbe
scas
cltd
nop
add
loopne
ljmp
inc
cld
xor
jge
xchg
mov
or
loopne
push
push
or
jb
pushf
mov
shrb
and
lea
push
pop
push
inc
outsb
aad
pop
es
sbbl
mov
and
inc
sti
shl
cmp
hlt
movsl
mov
xor
stos
mov
add
jp
frstor
cltd
aad
hlt
pushf
test
sub
test
or
movsl
popa
mov
pop
ret
mov
mov
xchg
ss
data16
cltd
pop
xor
dec
imul
xchg
dec
xchg
lret
imul
pushf
outsb
test
aas
inc
scas
sub
mov
std
xor
repnz
cmp
add
and
jo
test
jns
or
cmpsb
mov
lret
sub
mov
mov
fwait
cmp
cmp
xchg
clc
jl
test
mov
jge
call
dec
lea
aas
push
lcall
les
pop
daa
jb
xchg
pop
and
into
lcall
sbb
shrl
jecxz
push
shl
xchg
in
pop
les
mov
stos
pop
test
xor
aas
lahf
fnstenv
shrb
inc
mov
fmuls
icebp
cmc
mov
jnp
movsb
and
jae
dec
dec
inc
pop
cmp
shrl
test
mull
or
sbb
loopne
sub
bound
pslld
gs
jle
paddsw
dec
push
mov
cmp
pop
je
shrb
inc
ja
into
imul
insl
iret
pop
push
mov
ja
xchg
in
sub
inc
xcrypt-ctr
cmpsl
pop
push
lcall
or
push
or
aaa
sarb
jmp
dec
loop
jp
popf
push
inc
push
xor
adc
rcrb
popf
xor
sahf
and
cli
add
xchg
inc
in
push
mov
xchg
sbb
loope
in
mov
stos
repnz
arpl
test
cmp
xchg
sub
inc
mov
imul
jmp
loop
daa
adc
mov
sbb
fcomip
inc
add
insb
lret
dec
in
jmp
mov
stos
push
in
or
or
ja
and
adc
push
orb
test
lcallw
adc
jp
add
cwtl
cli
mov
adc
inc
aam
stos
mov
imul
lea
stc
adc
push
xor
add
add
fildll
lcall
xchg
mov
inc
mov
movsb
hlt
ljmp
inc
ja
add
ja
movb
mov
inc
dec
imul
xchg
out
decl
repnz
xor
cmp
jmp
fmuls
cmc
jg
stos
inc
and
pushf
or
mov
lock
dec
pop
out
inc
scas
ds
lock
xor
or
push
pop
test
push
aad
shlb
inc
xchg
cltd
mov
mov
mov
push
sbb
stc
jnp
push
in
mov
aas
mov
jno
mov
fsubrl
incl
out
sbb
mov
mov
sbb
jecxz
das
adc
push
adc
or
push
pop
stc
loop
leave
mov
inc
stos
sub
jne
dec
rolb
sub
jno
dec
mov
pop
iret
xor
pusha
push
xchg
stos
outsl
fldcw
aad
cmp
fisubrs
loop
mov
adc
mov
and
mov
xchg
sbb
cwtl
mov
test
ss
or
jae
mov
movsb
mov
pop
ljmp
pop
fmuls
push
imul
sub
jmp
add
cli
push
mul
sbb
test
lds
sub
ljmp
gs
inc
pop
push
adc
ja
adc
push
mov
inc
jnp
pop
pop
aas
aad
dec
jge
test
imul
fcompl
push
pop
mov
inc
xlat
scas
fwait
sbb
out
aam
push
fs
lret
dec
mov
out
cmp
iret
xor
stc
into
mov
pop
aaa
sub
mov
dec
dec
mulb
adc
fwait
cltd
test
test
inc
dec
mov
cs
nop
pop
loopne
jecxz
inc
mov
cmp
inc
int
out
lock
push
test
stos
aad
dec
lock
mov
out
inc
es
jmp
sub
inc
stos
repnz
les
cmp
sub
icebp
mov
push
jg
inc
mov
out
insb
and
sti
imul
xor
pop
sub
pushf
xor
ficoms
repz
lret
outsb
mov
hlt
cmc
jle
jecxz
adc
add
aas
push
mov
push
fwait
rcll
pop
sahf
push
xchg
mov
pushf
fbstp
fnstsw
or
pusha
cmp
rcrb
xchg
push
mov
add
mov
jne
cmp
mov
xor
bound
cmc
adc
mov
dec
std
fs
or
mov
pop
sbb
fidivs
or
push
sub
dec
xor
js
jnp
inc
mov
lock
fisubrs
fdivrs
xchg
mov
and
jecxz
pop
out
fbstp
add
adc
sbbb
enter
movsl
gs
xchg
loope
pop
icebp
add
popa
lcall
pop
ret
test
jbe
je
or
insl
ficompl
testl
les
gs
pop
and
bound
push
lahf
push
cmp
cltd
rolb
mov
jle
hlt
jge
lods
cmp
mov
jo
fidivrl
je
xor
and
daa
xor
push
fs
dec
lock
rcrb
adc
pusha
xor
and
mov
or
lret
iret
xchg
cld
pop
jmp
sbb
mov
xor
insl
enter
ret
pushf
xchg
fdivrl
jae
jb
inc
scas
mov
add
popa
dec
rcll
faddl
mov
xchg
or
sbb
pop
and
sub
mov
sub
les
cmpsb
jne
das
push
mov
and
push
cmp
stc
adc
repnz
dec
mov
ret
imul
and
popf
jg
inc
fwait
cmp
mov
iret
mov
jl
adc
cmpsl
sbb
in
out
scas
das
ret
lahf
mov
out
pop
iret
gs
jnp
and
adc
outsb
dec
push
inc
dec
sbb
inc
dec
push
clc
xchg
loop
mov
sub
jbe
sbb
ljmp
push
arpl
test
mov
shr
ret
clc
repz
sub
cmp
or
sbb
inc
js
dec
arpl
test
mov
shr
ret
clc
repz
sub
cmp
or
sbb
inc
js
dec
arpl
test
mov
shr
xbegin
daa
sub
cmp
push
jecxz
insb
test
adc
mov
pop
or
sbb
mov
push
xchg
inc
push
popa
pushf
dec
mov
fiadds
add
adc
arpl
push
test
push
xchg
inc
jecxz
repz
xor
xor
add
sbb
movsl
inc
xchg
push
test
push
mov
xor
roll
pop
movsl
imul
out
rcrl
add
lret
adc
repz
push
adc
movsl
jmp
dec
xchg
imul
dec
and
and
leave
int
fiaddl
inc
or
call
in
les
jne
cs
xchg
lods
jns
pusha
dec
mov
mov
ja
dec
adc
test
sbb
rcrb
xchg
inc
push
test
push
mov
sbb
repnz
test
xor
ss
cmp
push
movsb
repz
jae
sbb
jmp
mov
and
mov
in
sub
negb
xchg
inc
aad
lock
popf
les
sbb
icebp
es
fildl
jle
inc
lds
dec
and
adcb
jne
adcl
hlt
xor
lret
cmc
sub
sbb
or
jnp
imul
sbb
mov
adc
add
jo
jne
cltd
pop
mov
ja
arpl
push
fdivl
pop
loopne,pt
xor
das
in
push
jecxz
push
repz
jp
add
add
sbb
xor
and
sti
xor
adc
xor
add
adc
arpl
push
test
push
xchg
inc
jecxz
repz
and
xor
add
adc
arpl
push
test
cmpsl
loopne
lock
xor
inc
push
jnp
in
jae
out
mov
sbbl
cmp
shrb
xorl
jl
imul
inc
jbe
jae
cmp
cmc
xchg
adc
hlt
pop
dec
in
add
cwtl
add
dec
sub
in
xchg
adc
in
test
push
sub
or
cmp
in
inc
push
loopne
out
push
test
pop
stos
pop
out
bound
shlb
es
xchg
xchg
xor
xchg
xor
xor
xchg
dec
adc
inc
scas
lret
cmp
xchg
test
neg
push
push
dec
cmpb
pop
out
mov
arpl
dec
and
xchg
xchg
bound
inc
inc
mov
pusha
in
mov
sbbb
jo
add
ja
jne
push
or
and
inc
ljmp
shlb
test
les
fwait
mov
adc
dec
lahf
aam
les
rorb
arpl
test
sti
jp
and
pop
pop
and
es
jne
cmpxchg
outsl
push
mov
testl
xchg
cmp
add
lods
out
mov
sarl
aam
xor
aaa
test
cmp
mov
outsl
xchg
adc
jg
cmp
lock
out
jmp
xchg
repz
inc
push
mov
add
or
pop
push
pop
mov
sbb
mov
sub
sbb
shrl
jb
outsl
leave
jb
jo
mov
or
insb
andb
enter
loop
add
or
push
test
push
mov
repnz
push
clc
shlb
lock
bnd
jbe
or
jg
loopne
sub
fsubs
push
xchg
mov
hlt
mov
inc
or
inc
xchg
adc
rclb
mov
jne
lods
mov
aad
sub
shrb
jle
dec
dec
scas
lret
daa
scas
shll
in
orb
imul
xor
sti
add
jp
inc
xor
jae
push
jbe
lods
pop
clc
aaa
push
stc
inc
sahf
sub
ja
or
cs
jne
xchg
inc
add
dec
jo
sbb
int
ljmp
inc
loop
orb
sbb
pop
repnz
jns
and
js
xchg
xchg
stos
ss
lret
lock
lret
lret
pop
inc
roll
orl
mov
ret
sbbb
cli
cmp
enter
mov
mov
in
mov
xchg
mov
and
clc
push
sbb
and
out
je
pop
mov
push
and
popf
dec
lret
mov
adc
lahf
xchg
hlt
jge
sahf
sub
dec
out
lea
dec
mov
es
aad
jecxz
insb
sub
add
cltd
insl
call
fcompl
add
xchg
std
lahf
andb
dec
xchg
cmp
xor
shlb
icebp
push
aad
inc
or
xchg
lods
shlb
push
push
aam
cmp
jne
jmp
mov
call
jmp
sti
sub
popf
pop
icebp
std
daa
jecxz
dec
push
or
cltd
push
xchg
rorb
cmpl
adc
mov
sub
and
call
mov
add
push
clc
loopne
jecxz
in
cmpsl
loop
out
add
popa
pop
sub
testb
testb
adc
adc
push
movhps
aas
shlb
in
add
cmpl
stos
adc
fldt
cmp
ror
int3
or
in
test
pshufw
cwtl
adc
test
mov
mov
xchg
in
sbb
mov
push
cmp
pop
inc
xorb
xchg
cmp
fnstcw
leave
fwait
sub
mov
js
adc
rolb
mov
xchg
fistpl
cmpsb
inc
push
pop
pop
jge
add
lahf
fs
xchg
addb
jecxz
dec
push
imul
insb
loopne
jmp
fcoms
in
popf
dec
add
xlat
jae
subb
xchg
scas
hlt
sbb
pushf
adc
jne
lret
and
into
cmpsb
sarl
mov
add
stos
fs
mov
jno
stos
call
pop
mov
push
out
icebp
cmp
movsb
dec
mov
lods
nop
or
aaa
ret
inc
push
pop
cmp
adc
cmp
mov
aad
notb
pusha
xchg
scas
mov
sbb
push
cmc
insb
outsl
pop
lahf
pop
loop
fldcw
sahf
orl
pop
outsb
ret
pop
cmpsl
mov
mov
mov
data16
jae
mov
iret
movsl
cmp
into
data16
test
and
jae
and
mov
inc
mov
sub
pop
aaa
dec
test
loop
sbb
decl
inc
aam
sbb
adc
cwtl
fcomp
dec
popf
cmova
inc
movsl
add
ficompl
stc
rol
lahf
xchg
repnz
movsl
fsubrl
mov
jnp
pop
dec
push
xchg
inc
test
push
jno
aam
out
enter
cmc
add
cmpsb
cmp
push
insl
lahf
and
nopl
cmp
xchg
cmp
outsl
fstl
ljmp
sahf
lret
iret
and
lds
mov
jl
fsub
les
mov
imul
xor
pop
dec
push
xor
test
icebp
aas
jl
mov
insl
pop
movsl
adcl
std
roll
xorl
and
fmuls
adc
cs
adc
mov
lahf
testl
cmove
divl
mov
mov
out
testl
imul
dec
push
or
jle
inc
xchg
jno
sbb
clc
jl
mul
das
dec
add
push
int
jbe
ljmp
insl
cmp
movsl
movsl
loopne
repz
dec
aaa
or
lahf
mov
cmpsb
add
mov
pop
ret
std
in
mov
cltd
jge
jb
sub
add
xor
mov
in
xchg
mov
and
lock
pop
push
mov
fisttps
mov
lea
lcall
lret
inc
or
fistpl
dec
ds
aad
pop
imul
jns
push
js
out
xlat
stos
push
jge
sbbl
movl
or
inc
inc
hlt
add
pop
push
jo
sbb
inc
jnp
sub
or
stos
roll
xchg
or
mov
pushf
mov
ljmp
and
jno
hlt
push
out
loope
mov
mov
and
xchg
add
lds
cwtl
lods
scas
lods
roll
roll
lods
cmp
jmp
pop
inc
jbe
adc
adc
rorb
jno
call
sbb
mov
mov
dec
jno
adcb
outsb
jg
dec
cwtl
das
sub
jl
shr
push
inc
divb
add
shufps
popa
jmp
cltd
mov
or
test
std
rorb
inc
fsts
lret
in
pop
data16
popa
dec
push
mov
mov
stc
in
ficompl
dec
cs
dec
mov
jae
out
call
jne
jecxz
ss
inc
xchg
sub
mov
out
adc
mov
jg
jbe
in
xchg
dec
push
and
mov
in
shll
xor
sbbl
pop
scas
ja
in
jecxz
mov
cmpsb
adc
fmuls
push
jg
mov
sbb
sbb
sti
test
jnp
pop
int3
adc
pop
fs
xor
and
xor
ret
mov
fnsave
jl
decl
fs
pop
mov
dec
xchg
mov
mov
es
sub
out
aaa
outsl
xor
ljmp
jp
sbb
mov
and
repnz
push
or
clc
pop
jge
adc
inc
jno
xchg
sbb
mov
fstpt
sbb
mov
mov
mov
hlt
dec
lahf
or
dec
dec
jbe
sub
js
xchg
sbb
call
add
aad
in
xchg
dec
fdivrl
orb
jbe
pop
add
imul
push
daa
jmp
in
or
hlt
mov
cmp
fs
in
ja
mov
cltd
cmp
add
add
or
cli
loope
jns
rol
pop
push
xchg
stos
sbb
fadds
lret
add
mov
inc
pushf
push
add
mov
movsl
lods
mov
adc
movsl
std
adc
das
mov
out
pop
lret
jecxz
jnp
mov
cmpsb
fnstcw
addr16
xchg
lea
out
shrl
bound
fyl2x
push
cmpb
test
cmpsl
sbb
jp
mov
add
dec
cmc
daa
and
mov
clc
rolb
loopne
mov
push
inc
pop
jne
adc
pop
cmpsl
leave
lods
outsl
push
sub
cmpsl
outsl
xchg
nop
fs
lahf
lahf
add
push
cli
cs
imul
ret
insl
outsb
jae
aas
xorb
adc
push
dec
int
xchg
adc
or
pop
pushf
mov
imul
test
jb
push
inc
sub
aaa
in
js
jne
sbb
pop
add
pop
aas
into
inc
in
nop
push
push
addr16
lods
add
subl
mov
filds
stc
clc
into
jg
adc
enter
shrb
dec
push
frstor
sbb
jae
xor
stos
jo,pt
popf
cltd
xor
div
in
jp
scas
or
adc
imul
imul
dec
inc
and
jg
mov
sbb
test
lods
mov
das
push
mov
jmp
nop
mov
push
xor
adc
mov
or
and
jecxz
js
in
cmc
xchg
jns
lea
sbb
es
xor
xor
adc
insl
xchg
pusha
jp
mov
imul
leave
sub
loopne
movsl
fisttps
mov
test
sarb
sub
loopne
jmp
mov
adc
xchg
cmp
mov
cwtl
shlb
inc
outsl
aam
or
mov
das
dec
and
push
dec
sub
xorb
lock
xchg
lret
cmp
mov
xor
or
push
cltd
cs
mov
je
sbb
sbb
test
mov
and
lahf
dec
cmp
in
in
sub
inc
mov
mov
rcrb
sub
sbb
leave
out
mov
test
fisubrl
dec
push
dec
ss
jl,pn
jae
lret
mov
cmp
xchg
and
popa
mov
mov
rcr
xchg
ds
fimuls
test
cmp
dec
sbb
adc
arpl
pushf
pop
ss
movb
cmp
das
mov
ja
push
stc
mov
mov
pop
loope
cmpsb
nop
test
leave
sbb
jnp
clc
call
cmpsl
shll
push
or
stos
mov
rcrl
cli
mov
imul
fistpl
std
mov
xchg
cs
inc
frstor
mov
mov
cmp
adc
je
mov
repz
pop
add
add
pop
clc
mov
out
pop
into
cmp
and
jnp
enter
iret
jle
pop
mov
mov
pop
popf
add
in
xchg
mov
lea
int
je
inc
ret
dec
xchg
ret
int
add
dec
xor
pushl
dec
sub
inc
add
or
stos
ss
mov
jbe
lretw
aaa
cmpsl
jbe
sub
in
pop
pushf
jecxz
insb
aam
mov
sbb
sbb
fcompl
cmp
dec
pop
arpl
sub
mov
mov
rolb
in
xor
in
jne
dec
push
lds
mov
add
fsubrs
inc
nop
and
cmpsb
rcll
add
mov
mov
mov
cmp
rcll
aas
repnz
dec
pop
pop
gs
cmpl
aad
xor
mov
inc
insl
int
les
arpl
sarl
test
xor
sti
icebp
in
test
or
add
in
pop
mov
adc
movsl
mov
cmp
dec
sbb
mov
cmpsb
flds
push
mov
imul
cmp
dec
loope
nop
inc
pop
jmp
adc
in
sub
push
inc
push
cmc
icebp
aas
bound
in
mov
jne
sub
mov
cwtl
xchg
fidivl
or
je
divb
push
or
clc
js
pop
ret
inc
mov
dec
add
mov
loope
jo
insb
or
and
mov
aaa
ljmp
pop
rorb
je
push
mov
mov
fwait
fs
pop
mov
push
lret
repz
pop
fbld
rcrl
inc
pushl
outsb
insb
into
gs
testb
mov
fbld
cmc
xchg
mov
xchg
ja
mov
scas
sbb
or
pushf
fdivrs
mov
and
ja
sub
sbb
dec
mov
mov
call
jno
xor
xchg
icebp
loopne
into
cmp
inc
clc
fcomps
adc
mov
mov
in
push
or
repnz
cmp
mov
xchg
aad
mov
xchg
ss
mov
mov
mov
xorb
clc
fsubl
int
xchg
sar
js
adc
ja
or
and
test
ds
insl
out
adc
dec
enter
sub
jb
cmp
jae
mov
sbb
das
jne
loopne
xor
adc
jne
test
test
sub
push
in
add
xchg
flds
test
push
or
pushf
leave
mov
aaa
into
sub
push
mov
ss
mov
ffreep
aad
leave
setle
mov
outsl
sti
outsl
fbld
lret
out
out
pop
sbb
cmp
push
mov
sub
int
or
arpl
xchg
int3
mov
aad
test
inc
xchg
inc
je
sub
fdivs
rclb
push
sub
dec
inc
test
mov
adc
imul
mov
push
push
stos
mov
cmpsb
jo
iret
sbb
lea
stc
adc
sti
fimull
pop
cmp
inc
stc
and
xchg
cmp
lock
or
loopne
icebp
dec
inc
sar
xchg
and
xchg
fdivl
xchg
sbb
cmp
fdivrl
aad
and
jae
pusha
ret
and
in
rorl
or
inc
leave
out
mov
dec
lret
aam
jbe
inc
sahf
sub
insl
fwait
dec
sub
mov
xchg
test
or
enter
out
add
ljmp
mov
sbb
sbb
dec
add
dec
mov
jae
out
mov
pop
mov
addr16
adc
outsb
sub
mov
jecxz
xchg
inc
dec
and
mov
ss
repnz
xchg
sub
or
lahf
xor
repz
aad
rorl
add
movsb
imul
cmpsl
flds
lods
dec
mov
adc
jae
mov
pop
mov
dec
mov
iret
mov
push
aam
js
push
in
xchg
sbbl
cmpsb
enter
mov
loopne
adc
shrl
jecxz
sub
mov
push
andb
aas
add
inc
fdivrl
cld
push
fldenv
dec
jmp
dec
leave
fmuls
pop
add
xchg
shl
xchg
dec
adc
orl
jb
push
movsl
xor
insb
or
sub
push
mov
pop
mov
pop
rcrl
int
mov
out
mov
mov
faddp
mov
sbb
mov
addl
test
adc
test
fistpll
add
lds
jo
cs
add
mov
push
mov
hlt
nop
mov
lea
fwait
and
adc
mov
popf
shl
ret
addr16
mov
mov
push
pop
mov
adc
xor
fimull
adc
inc
mov
fmul
or
push
shrb
mov
xchg
push
mov
das
and
pop
addl
xor
push
imul
test
inc
shlb
dec
mov
mov
and
inc
int
push
outsl
fdivp
movsb
xchg
dec
in
rorb
or
es
xlat
lret
fwait
cmc
adcl
pop
inc
ds
mov
ficoml
out
in
dec
popf
in
xchg
dec
or
dec
mov
cld
push
repnz
sub
adc
jge
lcall
jle
es
fimuls
dec
xchg
mov
in
mov
jbe
imul
add
mov
enter
movsl
loope
adc
cwtl
sub
stos
xchg
test
add
adcl
ljmp
sbb
jmp
stos
jmp
inc
mov
loope
lods
jg
pusha
test
fwait
dec
jns
popa
mov
les
leave
lods
xchg
mov
ss
or
pop
inc
daa
sbb
fldenv
popf
xor
sub
mov
aas
jns
rcrb
xor
mov
jp
jb
ret
sbb
cmp
add
sub
aaa
pop
dec
and
xchg
sub
sub
fisubrl
add
xor
inc
enter
shll
stc
aam
lret
inc
lds
xchg
testl
js
xchg
jb
jmp
inc
test
jp
ja
stos
or
aam
nop
mov
jge
push
sub
test
and
mov
in
mov
roll
out
mov
dec
jnp
aam
jb
inc
xchg
push
es
inc
push
jns
jbe
out
add
sub
xchg
jl
shlb
inc
push
test
xor
pop
mov
mov
xchg
pop
sub
out
lret
mov
fucomip
pop
cld
push
sahf
add
aas
dec
les
bnd
push
adcb
push
sbb
outsl
rcll
nop
call
xor
lods
lret
pop
push
fisubl
fcmovne
mov
fnstsw
dec
jno
mov
jno
sub
cltd
adc
out
movsb
pop
xor
lods
mov
das
fucomip
call
stc
test
mov
aad
mov
jmp
cmp
imul
cmp
add
adc
or
sbb
inc
je
shr
lods
cmpsb
shl
dec
bnd
jnp
add
jle
popf
xor
ret
data16
xchg
dec
rorl
push
pop
das
mov
outsl
xchg
les
adc
in
icebp
mov
xchg
out
jecxz
push
xchg
xchg
push
adc
pop
or
outsb
fwait
jnp
xor
into
mov
inc
pop
loope
repz
lock
int
jmp
fcmovbe
mov
lds
mov
aas
rorl
addr16
xchg
test
sub
ret
ja
cs
int3
cltd
and
xor
sbb
and
cmpsb
fcoml
outsl
and
mov
cmpsl
aas
nop
lret
fs
push
sub
push
daa
std
jns
mov
repz
mov
ljmp
popa
sub
mov
das
or
push
add
or
into
cmp
in
xchg
aaa
movsb
xchg
or
mov
sub
insl
sub
cmpsl
sbb
in
sbb
jmp
xchg
rorb
push
lods
loopne
xor
fimuls
imul
in
xor
add
mov
pusha
mov
orl
mov
pop
test
lahf
clc
popa
jl
pushf
shlb
iret
out
jne
xor
xlat
ret
loopne
jne
jmp
jbe
jg
outsb
push
lret
sahf
sub
and
popf
inc
scas
fwait
dec
mov
les
mov
ret
pop
int3
test
rcrb
push
sub
fisubrl
icebp
frstor
xchg
std
fisubl
cli
fidivl
test
test
flds
pop
jmp
adc
mov
sbb
mov
jmp
addr16
lock
or
imul
dec
mov
iret
adc
out
cmp
bnd
pusha
sub
xor
pusha
sahf
and
inc
xchg
and
cmpsb
ret
mov
push
cmp
sbbb
cwtl
mov
shrb
fbstp
clc
jo
cmc
sahf
add
movsb
aam
ja
aas
or
xor
adc
adc
je
lcall
inc
stos
inc
pop
push
or
sub
adc
out
inc
cwtl
fidivrs
arpl
fsubs
clc
dec
add
stos
cmp
hlt
cmp
mov
lods
push
daa
inc
jb
mov
sbbl
lahf
mov
maxps
adc
xor
enter
sub
push
and
loopne
jmp
sub
imul
mov
add
rolb
decl
mov
mov
inc
les
jo
jae
icebp
ds
cmp
callw
and
cli
rcll
lret
pop
mov
jecxz
repz
and
xor
add
adc
arpl
push
test
push
xchg
inc
jecxz
repz
and
xor
add
adc
arpl
push
test
push
xchg
inc
jecxz
repz
and
xor
add
adc
arpl
test
push
xchg
inc
loope
rep
inc
xchg
push
cli
fmull
int3
dec
test
cmp
lods
jp
jne
gs
push
loope
cwtl
pop
out
les
inc
in
aad
lds
mov
and
xchg
and
icebp
push
loope
xchg
xor
mov
test
popa
lds
mov
movsl
xor
and
icebp
push
loope
xchg
xor
mov
in
mov
lds
lock
jb
dec
test
cmp
pop
iret
sub
cltd
imul
andb
jb
fstps
ds
xor
xchg
mov
fimull
dec
inc
in
sbb
sahf
dec
inc
rolb
lds
cs
test
les
jmp
popa
adc
mov
push
or
pusha
out
xor
jle
call
cs
mov
filds
pop
leave
push
or
rcrb
outsb
xor
xor
sub
cld
sub
add
into
push
or
jecxz
lcall
or
push
addb
mov
and
push
loope
xchg
xor
mov
in
aad
lds
mov
movsl
xor
mov
sub
pop
out
and
and
and
xchg
aam
push
xchg
push
les
push
mov
inc
hlt
in
and
popa
stos
out
fs
pop
lock
aad
cmp
ss
test
aam
andl
jno
popa
lds
mov
movsl
xor
shll
loope
xchg
xor
mov
in
aad
lds
mov
movsl
xor
mov
add
jae
loope
ds
loop
xchg
mov
cmp
mov
loope
ss
and
jecxz
xor
cmpsl
gs
jbe
sbb
loopne
fwait
les
jo
cwtl
sub
jnp
bound
sub
jo
xchg
popf
pop
std
outsl
hlt
mov
adc
push
dec
sbb
in
arpl
adc
sbbb
add
cltd
cmp
mov
mov
jbe
jmp
aad
aas
dec
jl
mov
ret
int3
mov
push
inc
jge
test
mov
imull
cmc
mov
or
fidivrl
or
mov
iret
adc
rcr
int3
add
pop
es
loop
push
daa
adc
xlat
xchg
xlat
das
pop
shrd
loopne
mov
jb
addr16
and
push
aaa
std
push
xchg
pop
add
push
cwtl
rsm
call
inc
pushf
test
xlat
aad
lea
rorb
aad
cmpsl
xchg
mov
aas
ret
cmp
jg
or
lcall
inc
add
pop
mov
jecxz
aam
adc
inc
mov
lods
mov
sahf
cmp
das
jg
sbb
cmp
push
add
lods
sub
int
fimuls
lcall
call
flds
push
jo
add
enter
shrb
imul
repnz
pop
mov
and
scas
mov
dec
jns
mov
jb
adc
out
mov
ret
inc
rol
pop
inc
xchg
popa
jb
insl
jnp
or
xchg
jl
fldl2e
and
mov
call
cmp
jmp
das
mov
or
jmp
fidivs
addb
add
jmp
les
pop
test
mov
mov
xor
aam
jmp
xor
xorb
int3
into
adc
sbb
pushf
lahf
xor
dec
xor
add
xchg
cwtl
jmp
pop
in
xchg
mov
jmp
repz
stos
sbbb
fidivrl
lods
cmp
popf
popw
cli
jnp
push
jnp
mov
fld
ljmp
or
dec
push
fsubrs
int3
add
bound
jge
gs
rorb
dec
jp
or
test
jb
fnstcw
inc
sub
sbb
inc
mov
flds
cmpsb
mov
clc
add
mov
dec
out
jmp
shlb
xchg
fcmovnu
aam
ja
or
adc
into
jecxz
sbb
or
andb
mov
jnp
in
arpl
sbb
push
adc
add
std
call
xlat
push
test
dec
pusha
mov
or
xor
mov
popa
jae
pop
aas
lret
fmull
and
xorb
movsb
lcall
inc
xor
sti
push
sub
add
jecxz
data16
insb
adc
jg
scas
xchg
push
rcrb
out
std
mov
add
mov
shlb
in
or
sub
loope
lock
or
push
data16
lcall
push
iret
pop
bnd
stos
adc
stc
dec
sbbl
sub
roll
xchg
inc
cltd
mov
out
cmpsb
ss
xchg
pop
int3
or
ja
mov
popa
pop
scas
lahf
jns
ficomps
mov
push
cmc
inc
xor
push
fstps
xchg
sbb
mov
sbb
ret
inc
fwait
pop
shl
mov
aas
rol
fwait
subb
shll
dec
mov
push
stc
lock
sub
mov
lret
sbb
mov
ss
cmpsb
add
es
outsl
add
int
and
je
js
sti
cmp
pop
hlt
jge
bnd
fwait
outsb
dec
nop
int3
adcl
fdivr
inc
xor
insb
fnsave
jge
popf
rolb
dec
in
pushf
scas
jg
fistpll
sub
mov
inc
inc
mov
cwtl
and
rcrl
pop
pop
jl
ret
in
dec
fldl
loope
adc
outsl
test
jmp
or
inc
loopne
mov
mov
dec
je
hlt
mov
ljmp
sub
filds
sub
dec
add
in
fmul
aaa
dec
cs
aad
ret
mov
xor
push
adc
jle
mov
inc
inc
movsb
or
sahf
pop
xchg
testb
je
or
cmpb
imul
lret
inc
cmp
xor
adc
scas
adc
or
xor
adc
pop
in
lock
pop
movsb
dec
cmp
ja
sbb
xor
fcoml
out
dec
icebp
stc
mov
sub
repz
ret
jbe
and
push
icebp
sahf
push
cmp
jg
iret
rorl
or
pop
xor
push
mov
sbb
sub
dec
mov
push
loope
adcl
je
xchg
mov
sub
push
jnp
cwtl
xor
pop
clc
push
xor
fcoms
jae,pt
or
es
mov
fisubl
push
inc
mov
andb
sbb
loopne
sub
cli
jae
sub
aam
push
mov
mov
cmp
dec
xlat
aad
xor
push
ss
mov
test
out
repnz
add
iret
mov
int
ljmp
outsb
lahf
mov
jae
fldl
pop
shrb
xor
popf
ds
das
xchg
push
add
push
lahf
push
mov
popa
mov
jne
aam
push
cmp
jp
mov
ret
xor
popa
dec
sub
xchg
dec
testb
test
adc
stos
aas
icebp
add
arpl
mov
mov
jg
push
rcr
mov
adc
pop
rorl
cld
rclb
aam
adc
ret
xchg
ss
pop
out
inc
ficomps
rcrb
mov
sbb
test
jnp
addr16
jae
int3
mov
xchg
jmp
dec
mov
test
data16
nop
testl
nop
add
cmp
adc
mov
popa
sub
stc
push
add
cmp
sub
mov
mov
mov
inc
sbb
xor
sub
sub
scas
inc
pop
mov
push
repz
es
jnp
pop
fwait
pop
xor
push
cmp
add
lcall
cli
mov
pushf
into
out
push
add
movsb
sbb
xchg
pop
push
sbb
mov
lcall
leave
xchg
sti
inc
pop
mov
sbb
sbb
mov
sbb
aad
sub
pop
jg
lret
xchg
xor
sub
call
outsb
pop
mov
mov
rcrb
mov
add
xchg
inc
sub
test
or
ljmp
sub
cmpsl
ds
inc
outsb
sub
clc
aas
fsubr
mov
shlb
lods
and
or
lea
xchg
add
fwait
lahf
lcall
dec
je
dec
mov
ja
sub
inc
mov
xor
out
or
push
inc
push
mov
fdivr
std
mov
js
adc
cld
icebp
cmc
mov
pop
cmpsb
push
sub
xchg
jb
int
cmp
add
jae
out
push
es
cmc
in
adc
lahf
clc
fldcw
jae
leave
hlt
mov
scas
or
in
xor
popf
mov
dec
subl
les
pop
aad
dec
dec
mov
cmpsb
das
test
pop
fimuls
int
xchg
jp
and
clc
xorl
sub
jnp
imul
out
mov
jmp
sti
sbb
add
jne
add
std
test
hlt
data16
rcrl
sbb
lods
clc
pop
or
adc
mov
xor
pop
in
scas
lods
push
add
into
arpl
je
lret
push
jmp
mov
or
sbbb
jne
stc
outsb
mov
xor
dec
pop
icebp
mov
jns
jns
fisttpll
lds
outsb
lock
sub
mov
rolb
movsb
dec
or
or
xchg
sbb
mov
pop
lcall
inc
subb
mov
mov
jmp
and
pop
jo
xlat
cmp
pop
add
add
fucomip
cmpsl
repnz
inc
xor
iret
sti
and
mov
lods
pop
rolb
cltd
insb
popl
das
es
pop
xchg
nop
aam
fnsave
mov
mov
lock
cmp
push
push
shrl
rol
mov
or
jbe
test
leave
sub
and
in
inc
ds
push
ret
xor
and
imul
insl
cmp
xor
sbb
xor
and
outsb
cltd
sbb
pop
fstl
cmp
notl
jb
outsb
mov
or
mov
cmp
sub
mov
push
jnp
ret
sub
pusha
and
data16
push
jo
inc
movsl
andl
xor
pop
pop
sarb
ret
mov
clc
cmpl
mov
jae
push
cli
lods
sti
aam
test
add
adc
mov
cmp
xchg
mov
and
jo
int
pop
or
mov
test
push
out
cmp
xor
popf
xor
push
sub
int
lcall
lcall
push
test
fdiv
out
pop
ss
xchg
jns
cld
scas
and
fsubrs
xor
imul
loopne
mov
clc
repnz
adc
cli
in
add
cli
adc
loope
mov
mov
fistpll
xor
fcompl
movsb
pop
scas
mov
lds
test
aas
cmc
or
iret
xchg
sbb
adc
pop
jae
mov
int3
or
inc
outsb
lcall
cli
push
cmp
imul
movsl
and
add
xlat
mov
and
xchg
mov
push
out
sbb
push
cmp
or
fsubrl
loopne
add
push
in
adc
push
scas
mov
imul
inc
in
add
jae
pop
in
xchg
mov
jmp
xchg
and
fcomps
and
ja
sbb
mov
aaa
out
mov
ret
incl
push
out
lcall
or
movsb
push
aad
arpl
fisubl
imul
mov
arpl
xor
andb
sub
hlt
push
ficompl
gs
movsb
icebp
test
jge
cmp
cs
sarl
mov
into
mov
aaa
cmp
out
add
iret
cmpsl
pushf
cmp
pusha
pop
or
cmp
lret
iret
and
push
add
xor
je
pop
adc
add
xchg
jmp
sbb
pushf
adc
jae
xorl
mov
adc
outsb
das
mov
out
int
fsubrl
push
fstps
in
mov
mov
xchg
fisttps
jg
aas
push
pop
jbe
add
lea
push
jle
xchg
ja
jo
sub
lret
mov
stos
jle
pop
sub
andb
dec
lds
dec
adc
push
xorb
mov
leave
mov
pusha
jne
and
mov
ss
pusha
xor
idiv
leave
in
lods
push
jnp
xor
and
jg
push
jb
test
clc
or
push
inc
andb
in
jl
mov
pop
outsl
pop
jnp
rcr
inc
out
inc
rcll
lds
push
js
lock
inc
sbb
sahf
rolb
inc
push
test
test
or
imul
mov
rclb
mov
cmp
sbbb
pusha
pop
dec
pop
lods
mov
hlt
sub
addr16
sbb
in
mov
sbb
cmp
inc
push
repz
mov
pop
test
pop
das
imul
jmp
repz
push
sbb
mov
xchg
shll
popa
pop
push
xchg
imul
into
and
loop
mov
mov
imul
and
push
or
insb
add
and
clc
fwait
sub
cmp
aaa
fmull
push
add
dec
sub
push
jne
out
sar
add
pop
cltd
xchg
les
push
jne
cmpsb
sbb
mov
stc
and
xchg
xor
adc
push
out
dec
insl
outsl
shr
cmp
stos
adc
ror
inc
inc
fcom
mov
divb
xor
dec
insl
xchg
scas
push
adc
push
sti
cwtl
es
stos
xchg
xchg
add
outsl
or
jne
fimull
push
mov
push
mov
cmp
addr16
insb
out
cmpsb
push
push
dec
xchg
push
sub
in
std
flds
jge
jle
jle
push
pop
loopne
sbb
out
sub
gs
ja
adc
dec
jo
in
adc
in
fadds
cwtl
rorl
imul
stc
push
sbb
pushf
or
jno
cmpsl
icebp
notb
jb
test
orb
xchg
call
add
pop
jb
inc
shll
sub
add
mov
ret
mov
mov
cmp
dec
shlb
xlat
xor
sarb
xor
popf
pop
inc
xor
andl
cmpsb
ret
in
movsl
rol
popa
push
call
dec
mov
mov
adc
lret
mov
fsubrp
rcrl
xchg
xor
cmpsl
xchg
push
test
loope
fnsave
sub
xchg
mov
jecxz
cli
sub
push
mov
lods
repz
push
repnz
dec
or
sub
fisubl
hlt
inc
pop
dec
insb
imul
xchg
push
sbb
pushf
or
shll
sahf
push
icebp
ret
push
jp
dec
xor
pop
mov
jb
mov
testb
pop
daa
outsl
pop
insb
test
mov
pusha
inc
shr
imul
push
mov
popf
in
pop
mov
sbb
push
lahf
js
fxch
jns
or
cmp
xchg
std
outsb
xor
enter
xchg
lods
into
push
jne
fsubr
dec
add
push
add
sub
dec
pusha
int
xchg
jbe
test
pop
xchg
loopne
insl
addr16
mov
call
jo
test
addr16
test
mov
push
cs
in
xchg
and
ret
and
cmpsb
push
mov
mov
mov
cld
xchg
xchg
nop
shll
or
call
pop
lret
jb
jns
shll
into
ja
mov
out
mov
push
push
mov
adc
push
mov
cli
xchg
ret
das
push
xchg
cmp
xchg
icebp
hlt
je
xchg
xchg
pop
fcompl
int3
cwtl
or
lahf
shlb
in
into
dec
call
sbb
sub
ds
jbe
in
push
push
rolb
mov
aas
cmc
cmp
es
xchg
es
pop
mov
push
adc
sbb
aam
xor
inc
adc
pop
hlt
mov
imul
mov
test
dec
sbb
dec
inc
sub
mov
pop
jb
push
lret
xlat
push
dec
loope
push
adc
bound
subl
mov
or
or
or
dec
inc
xchg
jl
repz
mov
xchg
push
popa
and
mov
out
inc
sub
bound
ja
dec
mov
push
mov
arpl
and
pop
pop
and
sbb
lea
call
aaa
in
xchg
push
popl
mov
pop
mov
bound
push
and
push
ret
or
sub
cmp
and
js
inc
jmp
mov
ljmp
ja
lahf
ljmp
sbb
fisubs
jbe
shrb
dec
push
roll
andb
push
scas
call
dec
cmp
mov
mov
or
ljmp
add
popa
cmpsb
js
mov
icebp
push
es
cmp
js
stc
xchg
mov
jl
inc
iret
cmpb
cmc
scas
inc
outsb
and
dec
into
pop
mov
stos
cmp
adcl
dec
or
push
adc
out
fldcw
rclb
imul
in
fidivrs
fcmovbe
push
cmpsl
sahf
pop
push
sub
enter
mov
popa
popl
iret
push
sbb
mov
add
add
mov
adc
sbb
insb
mov
jecxz
add
je
jmp
xor
out
pop
sbb
jne
cli
mov
mov
lods
adc
jb
outsl
repz
js
jns
scas
cmp
inc
shl
fcomp
mov
rcrl
iret
inc
bound
cmp
shl
push
push
push
fwait
and
dec
inc
les
cmp
sub
jns
js
sbb
push
cwtl
call
xlat
mov
nop
mov
pop
sbb
sti
cmc
jle
dec
les
push
arpl
inc
dec
cmp
or
div
in
outsb
pop
xor
nop
xor
mov
cmp
push
xor
testl
daa
push
add
or
sub
mov
lahf
xor
or
clc
ret
sub
cmc
fisubrl
jns
jns
or
cmp
inc
cwtl
and
cmp
scas
jge
shl
sub
mov
pop
mov
sbb
loop
inc
daa
mov
sarb
xchg
gs
rcrb
testl
jecxz
sbb
mov
xor
push
mov
mov
jns
mov
jg
add
mov
inc
pop
mov
and
outsb
rclb
push
out
mov
lock
test
sarl
jg
ds
or
adc
pop
out
int3
xchg
cmp
fsubrs
out
mov
xchg
jmp
movsl
icebp
cwtl
add
jnp
xchg
jnp
mov
xchg
mov
fs
jecxz
icebp
jbe
out
and
ds
out
hlt
les
mov
inc
inc
sbb
fstl
jno
adc
popf
nop
jbe
push
dec
dec
aam
adc
fucom
mov
jmp
hlt
cld
nop
ljmp
sbb
fnstsw
sbb
movb
adc
fildl
dec
pop
mov
push
pushf
rorb
nop
mov
nop
enter
nop
int
mov
sub
or
cwtl
pop
push
in
push
cmp
jmp
fwait
or
push
nop
cmp
lret
orb
mov
ljmp
out
ret
popa
mov
xor
mov
inc
inc
fcoml
cmpl
ficoms
pop
imul
stos
andl
call
jp
test
cmp
mov
xchg
push
sbb
sbb
sbb
mov
mov
pop
sbb
adc
cmpsb
scas
call
ficoms
pop
xchg
mov
mov
gs
mov
or
leave
xchg
dec
push
add
out
icebp
xor
push
dec
cli
popa
out
lods
lds
xchg
inc
insb
out
insb
ret
mov
or
jl
push
add
out
jae
lea
cmp
inc
or
sub
or
inc
pop
sbb
pop
or
or
adc
cmp
into
inc
call
js
movsl
push
loopne
cmc
pop
cld
mov
shlb
subl
cmpsb
out
roll
clc
push
lods
sbb
outsb
nop
xor
fadds
cmp
adc
xor
hlt
sbb
xor
xlat
addr16
lret
popf
in
imul
inc
sub
cli
loope
xchg
push
or
mov
fsubr
adc
mov
mov
fisttpl
sti
fcoms
icebp
mov
fbstp
das
cli
lea
sub
jmp
jge
add
hlt
fldcw
in
enter
arpl
icebp
les
fimull
dec
js
adc
pusha
xchg
xor
cs
sub
pushf
fisubs
adc
pusha
leave
inc
insl
addb
mov
or
sti
xor
pop
push
jns
js
and
in
ljmp
outsl
scas
int3
clc
test
or
or
int
out
ret
or
pop
push
dec
addl
mov
rcrl
xor
mov
repz
jge
xchg
ljmp
ret
loope
mov
cmp
sub
dec
fs
xchg
ja
push
push
insl
out
push
adc
inc
mov
mov
xchg
adc
xor
push
dec
inc
pop
xchg
lret
decl
iret
and
or
std
int3
jp
inc
mov
negb
fistps
jae
add
outsl
dec
mov
aaa
pop
sub
call
inc
dec
pop
scas
loope
and
popa
sub
add
mov
mov
jp
orb
mov
or
mov
and
in
jge
mov
dec
ljmp
ja
pop
cmpl
scas
xor
dec
sbb
mov
pop
lock
or
fwait
sbb
mov
lcall
mov
push
in
push
sub
fdivr
jg
bound
and
popa
divb
das
or
jg
gs
push
loope
xchg
xor
mov
in
aad
lds
mov
movsl
xor
shll
loope
xchg
xor
mov
in
aad
lds
mov
movsl
xor
shl
aad
inc
xchg
xor
mov
in
aad
lds
mov
movsl
xor
shll
loope
xchg
xor
and
fcmovnbe
popa
mov
cmp
fnstcw
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
mov
dec
mov
push
cltd
push
mov
rcrl
out
sub
sbb
or
jnp
imul
outsl
stos
jg
dec
mov
das
jmp
fisttpl
lret
pop
cmp
sub
sbb
or
mov
dec
lahf
mov
push
mov
ss
fistl
lret
add
ja
or
jnp
add
fldenv
push
fwait
cmp
aam
shlb
xchg
xor
pop
fs
xchg
lret
lret
inc
orl
dec
repz
ds
jmp
and
outsl
scas
pop
in
hlt
filds
shr
nop
mov
cmp
sahf
aas
push
jnp
repz
aas
sbb
pop
sub
dec
lahf
mov
dec
mov
paddd
pop
push
lret
loopne
mov
popa
and
jle
inc
push
dec
sahf
jnp
je
mov
pop
mov
shll
lcall
xchg
xor
pusha
push
lahf
pop
dec
add
xor
fucomi
in
and
sub
out
push
jo
ja
stos
push
sti
das
jmp
fistl
lret
push
cmp
sub
sbb
or
jnp
imul
or
jg
dec
loop
sti
jns
push
mov
xchg
sbb
imul
or
jg
aas
out
sti
pop
scas
or
pop
xchg
jp
sbb
add
cli
fisubrs
stos
sbb
cs
mov
jmp
fisttpl
lret
pop
cmp
sub
sbb
or
jnp
imul
outsl
stos
jg
dec
mov
das
jmp
fisttpl
lret
pop
cmp
sub
sbb
or
jnp
imul
outsl
mov
push
outsb
movsb
dec
add
mov
testl
sar
aad
xchg
mov
pop
dec
push
add
fs
mov
stos
popa
jecxz
adc
mov
xor
cld
cmp
addl
les
enter
or
mov
fdivp
jbe
repz
fmul
push
mov
addr16
push
jge
ja
cmp
mov
hlt
sub
lea
push
xchg
adc
arpl
xchg
push
and
ja
jae
cwtl
pop
out
ja
adc
out
es
iret
outsl
dec
or
mov
test
inc
pand
inc
rolb
scas
cmpb
jp
mov
mov
fistpll
mov
jo
add
sbb
jmp
inc
je
inc
frstor
cld
jae
push
cmpsb
outsb
xchg
jbe
mov
rcrl
sub
mov
sti
adc
pop
xchg
xor
mov
mov
sub
sbbb
or
xorb
pop
jecxz
push
cmp
mov
lds
mov
or
sbbb
or
jmp
incb
cmp
push
fs
out
in
jnp
pop
cmp
loope
insb
mov
jbe
fbld
call
xor
dec
lret
push
into
pop
xor
mov
adc
xchg
inc
pop
mov
xchg
inc
pushf
dec
cmpsb
sbbl
cmp
js
mov
in
push
xor
push
hlt
scas
add
pop
xchg
pop
dec
and
fists
add
mov
mov
sar
aam
out
repnz
mov
ffree
outsl
push
adc
xor
aam
push
mov
and
sbb
outsb
xor
mov
push
mov
push
lods
arpl
pop
imul
add
aas
push
xchg
jecxz
daa
push
js
lahf
jne
cmp
sbb
or
adc
push
js
xlat
inc
inc
daa
add
mov
jo
inc
dec
movsl
xor
int3
jno
fcoml
lahf
call
and
xchg
mov
push
sbb
js
ljmp
popf
sub
bsr
mov
and
data16
mov
pop
cmc
iret
inc
inc
aad
cmpsb
std
xchg
xor
push
add
and
rcl
out
adc
icebp
bound
mov
and
mov
cld
xor
into
rcr
adc
push
loop
push
push
outsb
xchg
dec
or
popa
lcall
xchg
add
sbb
xor
cmpl
dec
push
pop
add
cmp
ret
js
call
adc
sahf
imul
xor
mov
xor
adc
cwtl
sti
cmp
xchg
mov
mov
fs
mov
out
je
stc
or
jg
sbb
mov
les
pop
or
mov
sub
jb
dec
jmp
jns
or
aas
jno
aam
dec
adc
leave
xor
mov
xchg
jo
cwtl
add
sub
in
sbb
sub
mov
jecxz
ret
dec
xchg
inc
nop
or
loope
test
leave
imul
xor
mov
sbb
in
add
fwait
mov
jle
jae
cmp
jnp
xchg
mov
fcomip
leave
fdiv
leave
xor
inc
icebp
sub
mov
fwait
jno
stos
mov
xor
push
in
add
orb
cmp
sbb
outsb
dec
xchg
push
clts
fisubrl
push
out
icebp
pusha
mov
aaa
inc
lea
sub
xor
pop
xor
jecxz
les
fisubrl
xchg
xor
push
add
and
out
pop
jecxz
insb
mov
or
mov
test
sbb
popf
mov
mov
das
and
inc
shrl
dec
dec
sbb
sbb
pop
mov
stc
push
xchg
add
push
rorl
addr16
stc
roll
out
ljmp
sbb
std
sub
push
pop
xchg
add
adc
ret
rep
outsb
stos
psllq
xor
push
lea
adcb
add
push
repz
outsl
inc
sbb
add
add
stos
xchg
adc
xchg
and
jp
mov
add
getsec
push
push
in
pop
loope
cli
inc
pop
dec
cmp
scas
adc
dec
dec
rorb
fisubrs
fcoms
dec
pushf
insl
or
push
call
fs
mov
movsb
push
pop
dec
out
in
lods
movsb
pop
sbb
xlat
dec
fsub
jge
subl
xor
sub
fistpl
push
adcl
ret
aam
jb
push
add
repnz
jl
mov
shll
or
pop
mov
and
inc
ss
mov
pop
fwait
sbb
iret
push
je
clc
sub
icebp
addr16
repz
fs
in
cltd
xchg
dec
aas
sub
dec
push
test
clc
push
mov
mov
daa
or
push
and
xor
andl
imul
xlat
or
jbe
mov
hlt
adc
hlt
pop
mov
sub
jnp
mov
out
fs
dec
xor
ljmp
in
fildl
das
mov
ds
cmp
jl
insb
scas
orl
mov
cmp
sti
aam
sbb
aaa
fisubl
popf
lock
je
lret
hlt
and
pop
stos
sub
mov
jae
pusha
stos
mov
or
sbb
les
add
push
xchg
imul
xchg
push
pop
adc
addl
sti
mov
cmpsl
dec
sbb
cwtl
dec
jbe
frstor
mov
add
mov
mov
sub
repz
shll
outsl
mov
test
cs
decb
cmp
movsb
outsl
leave
pop
pop
inc
mov
sahf
ja
arpl
test
inc
xor
inc
pushw
aas
push
pop
inc
jp
jle
xor
inc
push
sbb
sahf
adcb
xchg
fnstenv
add
notb
into
icebp
xor
sub
das
push
aaa
jle
daa
mov
lret
mov
cmpsb
outsb
in
dec
xchg
mov
sbb
fwait
mov
mov
xlat
sahf
repnz
scas
sub
mov
or
pusha
je
scas
adc
outsl
dec
into
xchg
push
shrl
jnp
or
xor
xchg
mov
cwtl
ljmp
cli
test
jmp
leave
xchg
shr
push
popf
and
div
dec
or
loope
fidivrs
movsl
or
int3
jo
jne
js
lods
sub
in
mov
shll
gs
imul
mov
xchg
jp
popa
push
add
mov
push
cmpsb
lcall
mov
imul
mov
into
adc
cmpsb
movhps
cwtl
shr
pop
xor
out
dec
cmpsb
xchg
cltd
inc
lea
sub
push
adc
arpl
mov
pusha
inc
imul
cltd
loop
cmpsl
stos
enter
push
mov
dec
add
jno
pop
imull
mov
lcall
lahf
push
cmpsl
sbbb
cmp
in
push
add
icebp
and
ss
daa
cltd
pusha
int3
sar
jge
out
je
sub
cmp
scas
xorb
or
and
inc
fwait
add
mov
mov
test
ljmp
xchg
add
pop
mov
mov
lret
pushf
sar
out
cld
add
popf
push
aad
xchg
aad
xchg
add
sbb
fmulp
and
dec
and
das
mov
xchg
lods
inc
push
pushl
add
push
addl
mov
xchg
bound
fdiv
loope
mov
pop
pop
in
mov
sbb
push
mov
add
pop
hlt
sub
testl
je
sub
push
loope
outsb
lock
or
outsl
dec
xchg
dec
xchg
sub
inc
ret
xchg
adc
mov
sbb
mov
in
or
mov
push
decb
cli
add
or
jnp
pop
sarl
ret
arpl
mov
es
cmp
hlt
fcompl
mov
outsb
rcll
fildll
scas
push
lods
add
arpl
scas
xchg
xchg
ficoms
aad
test
mov
jne
adc
jge
push
jne
cmpsb
hlt
sub
xor
daa
mov
add
lret
cli
mov
je
lods
pop
jne
sbb
rorl
jb
enter
mov
pop
int3
cmpsl
lret
sbb
push
idivb
inc
sbb
and
inc
arpl
mov
cltd
and
cwtl
fisubrl
hlt
into
fucomp
pop
popf
stc
cld
and
js
imul
pop
out
int
sahf
ja
ficompl
pop
test
loopne
mulb
jo
lahf
add
in
xchg
ret
mov
pusha
push
das
mov
pop
out
arpl
jg
out
push
sti
subl
xor
dec
push
test
fdivrs
pop
js
cmp
push
dec
add
fs
movsl
push
inc
add
mov
dec
jns
cmp
push
xchg
pusha
ret
mov
mov
ljmp
popa
or
jle
mov
and
jae
mov
orb
mov
mov
nop
pop
lret
sbb
test
jae
mov
push
clc
pushl
out
popa
add
cmp
js
mov
jl
xchg
inc
and
jl
and
mov
fildll
xor
out
dec
xor
mov
loop
nop
cmpsl
mov
adc
adc
je
and
in
dec
sub
fcompl
add
std
cs
out
inc
xor
and
jecxz
out
mov
mov
lods
jg
in
cmp
sub
fucom
outsl
push
mov
sbb
push
stc
pushf
fiaddl
ficoms
lcall
xor
mov
mov
dec
pop
vpmadcsswd
push
js
ret
xor
or
test
add
clc
jge
pop
xchg
xor
mov
xchg
jne
mov
mov
push
jle
or
fldenv
mov
inc
push
imul
imul
sbb
lret
shll
addr16
lock
and
jge
add
sbb
mov
xchg
pop
mov
sbb
or
xor
sub
fsts
adc
jge
mov
imul
mov
call
mov
sbb
cs
testb
fsubl
test
jge
push
cmpsl
mull
adc
cmpl
inc
stos
outsb
enter
out
xchg
jbe
rclb
jecxz
mov
aam
dec
repz
cmc
cwtl
in
not
es
ja
shrl
pop
mov
into
ret
fwait
rorb
inc
pop
cmc
rcll
mov
mov
sub
sarb
dec
mov
add
jle
push
or
hlt
mov
in
out
out
mov
jo
add
loopne
or
lock
inc
cmp
mov
ret
mov
xchg
int3
add
fistps
out
lods
neg
mov
cmp
scas
xor
lods
stc
xor
sbb
ret
and
jmp
hlt
jle
aas
add
inc
jno
sbb
push
rolb
sti
dec
adc
hlt
mov
pop
and
xor
fcoml
nop
ss
push
aaa
or
and
in
enter
imul
aam
adc
inc
shrl
sti
insl
in
mov
mov
mov
xchg
mov
inc
and
jp
lods
insb
mov
out
dec
or
lcall
cwtl
bnd
clc
test
inc
dec
cmp
pop
inc
sti
fwait
loopne
sbb
daa
inc
shll
inc
sub
dec
int
divb
push
std
lds
push
pop
mov
fisubrl
mov
sub
and
psraw
jae
xchg
jge
aas
int3
push
pop
cmp
scas
xorl
iret
cmp
mov
pop
add
inc
and
fcom
pop
mov
aas
xchg
jno
out
les
dec
in
sbb
jge
xchg
and
mov
sub
lahf
sbb
xchg
fldl
dec
jb
xor
or
ficoml
jle
xor
jne
std
out
mov
and
jge
pop
test
jp
inc
push
sub
popa
lock
jecxz
sbbl
add
daa
dec
lock
jle
es
pusha
loop
popf
add
pop
js
js
inc
mov
pop
neg
aam
test
js
je
push
and
and
test
inc
out
pop
cmpsb
xchg
pop
cmpsb
cs
sbb
mov
cwtl
adc
dec
cmp
aad
sub
mov
sub
xchg
jae
cli
push
out
xchg
dec
rorb
jmp
xor
xlat
cltd
push
inc
dec
mov
cwtl
inc
pusha
lea
mov
pop
sbb
es
jae
jmp
frstor
ret
pop
or
jp
mov
mov
mov
pop
rclb
or
into
fbld
mov
inc
xchg
jge
fldenv
movsb
mov
inc
jl
pop
adcl
xlat
adc
add
pop
and
push
pop
pop
and
push
addr16
fisttpll
mov
sbbb
outsl
fcomip
cs
andl
loope
push
testl
arpl
outsl
inc
inc
pop
addr16
movsb
iret
mov
shrb
push
adc
pop
outsb
inc
jp
out
pop
cmpsb
and
cmc
dec
mov
cwtl
fnsave
sbb
mov
push
aaa
jbe
push
cwtl
jp
pop
lret
add
lds
mov
shlb
mov
mov
cmpsl
out
adc
orl
int3
inc
hlt
js
add
sub
leave
mov
fnstsw
dec
xchg
imul
push
sub
cld
scas
jbe
arpl
cmp
sbb
data16
mov
iret
sub
lahf
push
ret
push
sarb
adc
shlb
idiv
daa
sahf
xor
ficoml
sbb
adc
int
cs
adc
and
lods
xor
jmp
aaa
xchg
cld
jmp
push
adc
popa
ja
icebp
cmc
add
mov
f2xm1
popf
rcll
lds
fists
mov
mov
push
fcoms
jge
lret
mov
shrb
rolb
leave
call
movsl
test
imul
stos
fadd
imul
mov
mov
scas
fildl
lcall
inc
dec
mov
and
cmp
cmp
jp
lds
inc
mov
jle
pop
jp
and
lret
jg
mov
cmp
cld
jae
scas
inc
int
sub
lcall
and
dec
dec
mov
xor
jbe
adc
push
and
cmpsb
jg
sbb
adc
cmpsb
and
stc
mov
mull
out
aaa
daa
outsl
mov
adc
inc
sub
sbb
xor
mov
fcmovnb
icebp
jnp
sahf
in
or
jecxz
or
and
add
iret
lcall
js
and
in
es
ja
bound
mov
mov
xchg
sahf
or
addb
ss
jp
dec
fcmovne
jge
xor
push
popf
dec
xchg
sub
xor
adc
inc
push
ret
sti
push
xchg
filds
hlt
jbe
push
imul
adc
xor
cld
sbb
mov
lock
arpl
fildll
outsb
daa
inc
mov
pop
pop
dec
mov
ja
cmp
mov
rcrl
xor
cmpsb
outsb
mov
icebp
hlt
jp
push
add
outsl
dec
dec
insb
insb
pop
divl
pop
test
cmc
sti
imulb
mov
cmc
pop
mov
sbb
pop
add
test
cltd
xchg
inc
int
lods
mov
fmuls
pop
push
cmp
push
jno
cltd
mov
sbb
dec
xor
in
mov
cmp
jl
std
jo
pop
call
rcrb
and
test
xlat
push
jae
inc
sbb
add
push
pop
push
int3
fsubr
mov
gs
fstpl
jne
mov
mov
fcompl
aas
hlt
fistpl
adc
jne
aam
pop
mov
sbb
mov
sarb
dec
lds
pop
inc
shll
loop
inc
mov
cwtl
call
mov
cmp
daa
inc
dec
repnz
test
dec
mov
mov
jp
pop
dec
sub
pop
scas
push
inc
pop
test
adc
js
inc
mov
popa
sub
jno
jns
mov
push
dec
lcall
lods
daa
call
or
insb
inc
mov
js
out
or
pop
sbb
insb
adc
pop
mov
sbb
in
xchg
sbb
loope
sbb
je
daa
pusha
pop
cmp
dec
cmpsl
ss
push
sub
push
sub
lds
stc
inc
fiadds
leave
xchg
push
cmp
or
aaa
mov
imul
push
pushl
fstps
js
rcrl
clc
sti
leave
dec
jg
das
add
scas
in
xchg
mov
cmpsl
shr
scas
fsubp
incl
jne
jne
fildl
pop
cli
push
out
and
add
lcall
sbb
xor
sub
dec
mov
jmp
dec
aam
mov
jbe
cltd
out
mov
adc
popa
jno
cmp
mov
push
mov
gs
ljmp
lock
jmp
jns
inc
fs
test
mov
mov
jne
loop
mov
fsubr
pop
xlat
lcall
jno
ret
sarl
pop
mov
xor
dec
push
les
push
loop
iret
je
inc
je
sub
sub
outsb
push
rolb
or
mov
sahf
xchg
inc
sub
mov
int3
push
and
enter
popf
xchg
xchg
xor
iret
or
add
pop
or
and
dec
sahf
xchg
out
imul
arpl
sub
mov
push
pop
fwait
dec
rorb
push
scas
into
xor
pop
movsl
cwtl
movsl
mov
out
cmpb
push
int
jns
fsubrs
xchg
and
out
mov
jnp
nop
add
dec
jbe
adcl
lods
xchg
jne
cwtl
xchg
dec
loop
hlt
inc
xchg
pop
aam
and
sub
in
add
xor
rorb
jl
clc
dec
je
mov
mov
mov
repnz
arpl
loopne
loopne
in
adc
mov
test
add
sub
inc
aas
inc
mov
mov
sahf
pop
arpl
push
cmovae
cmpsl
aas
pushf
ljmp
push
lcall
std
mov
daa
xlat
orb
adc
cli
jo
testb
insl
sti
ret
jbe
cmpsb
movsl
stc
pop
mov
mov
mov
shlb
xchg
xor
sbb
xor
in
rclb
mov
and
popa
enter
repz
fucomip
sub
lahf
jmp
push
lret
in
cmp
jmp
fs
jo
sbb
sub
jo
pushf
xchg
mov
xchg
dec
ja
pusha
xchg
dec
push
xor
xchg
xor
icebp
outsb
sub
sarb
out
les
and
dec
call
dec
sbb
xorb
lods
jno
je
hlt
jno
orb
push
dec
pop
pushf
loope
mov
push
xchg
dec
dec
mov
sub
outsb
jno
lods
mov
fisubl
or
mov
push
mov
jno
sub
mov
jnp
mov
test
dec
adc
js
jns
inc
outsl
sbb
ds
pop
lret
xor
ret
xor
shlb
or
add
fcompl
fimuls
push
add
in
ret
fneni(8087
cltd
xor
xchg
in
xchg
rclb
fcomps
jp
fldt
leave
lea
dec
adc
int3
nop
xor
sbb
pop
mov
js
lock
push
xchg
sub
jae
jb
idiv
adc
mov
sahf
xchg
scas
rcr
and
pop
jle
sbb
imul
or
push
in
mov
add
ss
inc
pop
pop
movsl
scas
cmp
push
xchg
mov
fwait
cmpps
adc
stc
inc
mov
mov
xchg
mov
gs
push
dec
imul
andb
test
test
or
test
aam
xor
movsl
mov
add
jne
or
js
push
mov
push
movsb
xor
push
sbb
mov
imul
cli
adc
orl
adc
cli
pop
sub
mov
cmpsb
cmp
mov
rorl
sbb
mov
testb
movsl
and
ds
cmp
andb
cli
jno
and
jmp
mov
or
mov
mov
das
out
aam
inc
and
push
in
adc
loopne
ret
jg
mov
jmp
fisttpl
lret
pop
cmp
sub
sbb
or
jnp
imul
outsl
stos
jg
dec
mov
das
jmp
fisttpl
lret
pop
cmp
sub
sbb
or
jnp
imul
outsl
sub
dec
mov
das
jmp
fisttpl
dec
pop
cmp
sub
sbb
or
jnp
imul
outsl
stos
jg
dec
mov
das
jmp
fisttpl
lret
pop
cmp
sub
iret
or
sub
pusha
add
dec
outsb
js
push
pop
push
push
sub
clc
call
scas
test
test
pop
pop
dec
outsb
js
push
cmp
dec
sahf
fcomp
enter
call
scas
mov
fimuls
js
push
add
sub
fdivs
xchg
fisttps
adc
cmp
sub
or
sub
cmp
xor
mov
jmp
insb
inc
pop
or
adc
in
or
test
enter
pop
adc
shrl
add
stc
push
dec
dec
mov
scas
xchg
pop
jecxz
jmp
fsubs
leave
adc
add
jno
adc
aad
pop
adc
ds
or
xor
insl
add
inc
test
cwtl
mov
gs
xchg
popf
out
imul
adc
std
call
ror
dec
lret
add
xchg
push
out
stos
mov
mov
out
pop
or
scas
push
jge
pop
dec
outsb
js
push
cmp
enter
call
scas
mov
sub
sub
adc
pusha
pop
imul
pop
scas
test
sarl
in
lock
fcmove
stc
int
xor
and
xor
dec
inc
outsl
dec
push
idivb
xchg
mov
fcmovnu
cld
cmp
insl
sbb
sbb
push
or
cmp
sub
fcomp
enter
call
scas
mov
pop
dec
outsb
js
push
cmp
sub
fcomp
enter
call
scas
mov
lcall
in
jno
dec
outsl
pop
int3
enter
mov
aas
sbb
or
negl
ljmp
in
fdivs
fsubs
mov
adc
pop
ret
in
imul
scas
mov
pop
inc
or
fucomip
mov
testl
popa
adc
and
dec
lahf
and
adc
test
test
aas
pop
or
xchg
push
jge
pushf
lahf
adc
sti
and
push
gs
cmp
mov
jbe
sub
inc
inc
in
out
sti
mov
mov
push
in
add
xchg
lods
je
insb
mov
pop
imul
pusha
lret
enter
outsl
and
fmulp
dec
jb
inc
dec
movsb
sub
sbb
popf
dec
sbb
cld
pop
adcl
mov
cld
fnstenv
jae
push
push
aam
adc
fnstenv
push
pushl
pop
mov
jle
push
mov
repnz
cltd
push
test
incb
pop
popa
lods
in
shrb
pop
dec
or
sbb
cli
pop
arpl
pop
lret
repz
add
xlat
lcall
test
jle
stc
aas
jg
xlat
pop
sub
movsl
jp
inc
ret
adc
rorl
adc
and
or
xor
lret
sub
inc
sub
mov
jbe
std
add
in
pop
xchg
out
int
out
mov
sbb
lea
cli
test
dec
xor
fstpl
in
iret
pop
mov
lock
inc
aad
dec
pop
pop
dec
mov
mov
fdivrs
int
add
out
sub
ja
icebp
scas
mov
std
push
stos
jno
jg
mov
adc
mov
out
push
cmp
add
xchg
lea
pop
cmp
scas
cwtl
or
jmp
add
pop
mov
popa
xchg
sbb
xchg
sbb
adc
cwtl
fmull
jb
jno
push
fstpt
xor
sbb
and
scas
and
xor
lcall
cs
push
cld
push
lods
inc
or
push
frstor
stos
xchg
cwtl
pop
outsl
orl
fstpt
in
add
adc
ret
pop
or
pop
lret
pop
scas
pop
xlat
push
xor
adc
fbld
inc
or
jle
rcrb
test
mov
adc
pop
jae
lcall
out
sbb
xor
push
popf
mov
xchg
adc
shll
arpl
call
mov
jmp
jge
stos
push
andl
outsb
cmpsl
mov
or
xlat
gs
mov
sub
testb
data16
stos
sub
popa
cmpsl
nop
ret
scas
in
mov
jbe
sbb
mov
movsb
out
mov
jmp
jecxz
das
mov
int
adc
jb
icebp
movsl
jns
dec
lcall
sbb
sbb
out
and
test
inc
add
or
ja
and
fs
cmc
mov
cs
rclb
add
mov
sbb
mov
cmpb
mov
movsb
xor
cmp
loopne
enter
lahf
in
repz
mov
out
inc
pop
sbb
push
xor
jno
mov
xorl
xchg
mov
lods
or
or
scas
arpl
xchg
push
dec
pusha
jl
enter
fdivr
dec
fldcw
and
das
fiaddl
loop
and
and
movsb
clc
lock
out
and
sti
mov
jns
jne
arpl
pop
inc
xor
push
adc
mov
push
fldcw
mov
jbe
pop
push
sbb
and
bound
mov
jge
jl
sbb
and
mov
mov
or
aas
sti
jmp
enter
mov
popf
xchg
mov
test
sbb
mov
jbe,pn
fwait
pop
cmc
hlt
xchg
jle
xchg
das
icebp
cs
cwtl
daa
sub
and
inc
loope
std
stos
push
push
inc
test
cmp
add
popa
bound
cmp
cs
jo
xor
pop
or
xchg
sti
ret
adc
ficompl
ljmp
ffree
sbb
mov
call
pop
fcmovne
sub
cmp
xor
mov
mov
dec
mov
shlb
and
fucomp
and
into
fwait
inc
cmp
cmc
test
divps
adc
imulb
adc
aad
cmp
imul
mov
xor
pop
rcll
ret
inc
pushf
sub
xor
dec
iret
pop
idivl
loop
inc
das
ret
hlt
stos
stos
adc
das
fisubs
dec
insb
mov
pop
aad
aas
pop
pop
inc
inc
clc
ret
lea
hlt
gs
xor
xchg
lods
test
jae
jns
jle
xor
mov
cmpb
pop
iret
mov
data16
or
gs
aas
cmpsl
jg
lret
andl
bt
pushf
stc
push
dec
cmp
or
push
mov
adc
in
roll
push
jmp
sti
sub
aas
mov
or
mov
or
and
adc
add
stos
cli
jno,pn
inc
push
sarl
dec
jne
mov
icebp
or
in
testb
sti
adc
inc
sar
inc
xor
bound
jb
jb
test
rcl
sbb
in
mov
scas
mov
stos
pop
imul
idivl
pop
or
and
std
mov
mov
and
cld
faddl
fistpl
cmovg
lret
jns
cmpsl
cmp
sub
mov
adc
lds
add
mov
insb
fsubp
xor
repz
fwait
jbe
add
jbe
cs
or
inc
xchg
loope
aad
sbb
or
imul
push
out
add
fldt
xor
ja
push
mov
stc
pop
xor
aam
lret
xor
jo
or
out
nop
mov
out
fsubrs
add
and
mov
popf
pop
scas
jge
ljmp
aad
cmc
sbb
pusha
jg
add
lcall
adc
jne
xchg
in
lods
or
scas
out
mov
sbb
int3
insl
cwtl
adc
shl
iret
mov
ljmp
lock
hlt
pop
or
imul
je
mov
push
pop
dec
mov
sub
jg
dec
push
andb
hlt
mov
jns
mov
fiaddl
xchg
dec
xor
jne
dec
jo
adc
stos
mov
addr16
sti
dec
push
add
jmp
pop
push
mov
jb
into
mov
mov
adc
and
inc
mov
enter
cmp
mov
or
pop
jne
aam
enter
movsb
fisttps
iret
repz
mov
lcall
test
and
imul
into
dec
inc
mov
es
hlt
out
pop
mov
sbb
xor
sub
into
out
push
lds
push
pop
mov
lret
jno
cli
xlat
lods
push
aaa
sbb
inc
cs
adc
mov
pop
sbb
sbb
vcmpss
push
insb
fdivl
in
hlt
mov
leave
add
mov
bound
push
and
pop
mov
mov
loopne
aad
pusha
sti
xor
inc
or
and
nop
sbb
adc
sbb
bound
or
cmpsl
xchg
outsl
hlt
push
inc
xor
xor
xchg
dec
jle
mov
or
mov
or
testl
je
xchg
out
xchg
jmp
sahf
cmp
mov
cld
push
jmp
jmp
dec
iret
or
insb
nop
and
nop
jnp
outsl
scas
aam
inc
pop
jp
or
jp
and
pop
daa
cmpsl
and
or
orb
cmp
jg
mov
sbb
les
imul
push
mov
mov
mov
ds
imul
mov
loopne
sbb
jnp
lahf
jno
mov
mov
lods
orb
add
out
mov
mov
cmp
add
test
mov
into
fcomps
adcb
stos
add
sbb
fisubrl
iret
dec
xchg
jne
daa
aam
add
bound
mov
push
out
les
xchg
stos
pop
jb
push
mov
sub
mov
push
or
js
cmp
mov
cmp
mov
fnsave
fdivrl
dec
and
cmpsl
jbe
aas
movsb
cmp
cltd
je
cmp
into
mov
aas
push
bound
jnp
sub
and
sbb
cmp
adc
ficoml
or
cmpsl
adc
movsl
mov
sbb
dec
sbb
sub
pop
insb
loopne
pop
imul
jge
mov
pop
push
gs
std
mov
cmp
jl
hlt
mov
rdpmc
test
int3
test
mov
test
cmpsb
inc
lods
leave
jne
mov
testb
xchg
out
out
mov
jb
test
pop
lahf
add
cld
arpl
mov
dec
pop
xchg
mov
lret
jo
mov
loope
cmpsb
sub
lret
daa
xchg
cmp
outsl
mov
into
popa
ret
popa
sbb
cmpl
inc
push
xor
subb
cmp
mov
stc
adc
outsl
lahf
push
xchg
jnp
stos
call
loope
pop
sub
test
inc
sarb
mov
fildl
mov
gs
sti
jae
repz
dec
outsb
dec
repnz
cltd
dec
mov
popf
jnp
int3
into
es
lds
cmpsl
call
insb
je
out
dec
push
outsl
inc
hlt
test
and
arpl
arpl
adc
call
cld
or
aad
xchg
sub
jno
push
adc
js
xor
insb
aam
ret
ret
and
test
mov
rcrl
loopnew
xor
xchg
test
out
mov
inc
addb
push
mov
ret
sbb
adc
das
and
and
inc
test
sub
jl
xchg
jo
jg
in
fistpll
fwait
inc
cmp
call
fnstsw
mov
inc
push
cwtl
data16
push
loope
push
dec
aad
repnz
mov
jnp
sbb
popa
es
je
outsl
xchg
dec
sub
mov
rclb
mov
push
scas
inc
push
inc
aad
das
mov
jb
jl
es
add
aad
insb
flds
sbb
push
and
or
dec
pushf
insl
inc
pop
jbe
movl
in
inc
stc
ss
xchg
addr16
pusha
cmp
pushf
add
or
pop
sbb
push
sub
stos
out
call
mov
nop
int3
pop
movsl
mov
push
pop
mov
rcrl
jo
add
inc
std
sub
test
sub
jnp
loop
jbe
addb
pop
mov
pop
cli
arpl
inc
and
mov
iret
call
or
xor
or
xorb
inc
repz
imul
stc
ja
scas
or
jmp
push
xlat
ljmp
mov
inc
out
mov
xor
or
pop
cld
and
pop
add
cmp
adc
push
xchg
mov
mov
push
js
js
pop
fldcw
out
jbe
cmpsb
sbb
in
dec
jmp
adc
aaa
mov
inc
inc
std
repz
cmp
lea
xor
jno
inc
pop
stc
nop
pop
lds
negb
lret
inc
cltd
sbb
sub
out
rcl
lcall
lods
jnp
pop
mov
clc
add
daa
ds
and
ds
stc
icebp
pop
mov
insl
ds
and
insb
xchg
add
sub
test
rorb
mov
int3
cli
xchg
ds
xor
and
mov
popl
pop
out
lds
in
adc
ja
movsl
std
shr
mov
and
ret
mov
jno
lds
xor
popf
sbb
call
jge
cmpsb
pop
lds
inc
cmpsb
negl
pop
js
mov
mov
xchg
outsl
test
sbb
cmp
push
movsb
mov
and
bound
inc
test
addr16
shrl
jl
popf
das
mov
int3
xlat
std
test
and
dec
sbb
dec
add
dec
jmp
cwtl
and
fists
inc
ds
aas
lea
outsb
sbb
jecxz
mov
pop
mov
cvtps2pi
xor
xchg
dec
test
push
push
ljmp
int3
push
sub
xor
addr16
mov
insl
mov
jnp
fldcw
scas
bound
dec
sub
adc
cld
pop
mov
lret
push
outsl
into
addr16
cmpsl
fisubrs
inc
cmc
mov
push
adc
or
in
inc
dec
jmp
jg
mov
rorl
adc
dec
mov
push
imul
xchg
sub
mov
pop
pop
test
add
mov
xor
sub
mov
jge
fisubrl
stos
inc
outsb
fmull
dec
ljmp
xor
xacquire
hlt
int3
aam
jl
nop
or
lcall
imul
pop
cmpsl
aad
subl
lock
ret
pop
les
shlw
mov
xchg
subl
leavew
push
jg
out
fs
or
cld
cltd
aam
mov
mov
adc
mov
mov
cs
out
push
or
jae
jb
mov
fstl
dec
mov
dec
or
mov
mov
mov
adc
push
ljmp
adc
pop
pop
cmp
aas
or
xor
icebp
xor
sub
bound
pusha
and
pusha
push
sbb
dec
adc
and
and
dec
cmp
pop
out
xchg
xlat
sub
or
push
xchg
or
fstpt
pop
gs
lods
jle
gs
jp
std
mov
lds
jecxz
rcll
dec
xlat
and
scas
fldl
pop
pushf
inc
ljmp
cmpsb
sti
sbb
stos
jle
fadds
add
add
push
sbb
ss
lea
into
arpl
lret
add
and
jmp
cmp
and
dec
scas
sub
div
cwtl
jp
add
or
movsbl
call
add
sub
sub
mov
stc
mov
inc
push
cltd
in
movsb
lcall
xchg
add
inc
movsl
jb
cmp
xor
fmull
lods
sub
mov
subl
fistl
ret
xor
jp
fbld
dec
mov
push
lret
repz
in
cmpl
loop
mov
fnsave
inc
mov
sbb
mov
aam
fimuls
push
jns
mov
jecxz
cmp
xor
lods
mov
movsb
lahf
orb
lods
xlat
xchg
lret
inc
lock
popf
in
sbb
push
leave
jecxz
cmp
adc
iret
std
xchg
mov
ficompl
iret
sbb
xor
popa
out
jmp
push
out
divl
aad
cmp
sub
inc
or
fbstp
xchg
sbbl
cmp
dec
or
pop
mov
repz
insb
pop
jbe
cmc
loop
sub
sbb
mov
inc
xchg
loop
xchg
and
dec
cmp
push
nop
sbb
cmp
mov
adc
aam
xor
or
insl
lret
mov
pushf
comiss
nop
pop
sbb
mov
sarb
ljmp
add
outsl
mov
ret
pop
fcoms
or
adc
popa
add
xorb
or
outsb
test
add
push
jnp
movsl
movsl
add
in
dec
mov
negb
mov
es
inc
jmp
shrb
lods
pop
lret
mov
shll
mov
ss
stos
data16
mov
xchg
mov
lea
stc
js
mov
ja
sub
or
dec
inc
stos
lret
ss
fsubp
sbb
xchg
mov
cs
adc
icebp
and
and
sub
lods
xor
push
lret
cld
xchg
push
lock
xor
mov
adc
sahf
xlat
jecxz
imul
jge
jmp
lret
mov
loopne
fsubs
pop
lock
stos
mov
cmp
pop
mov
mov
ret
lcall
jp
cmp
out
aas
shrb
neg
jb
movsb
dec
fbld
rorl
xlat
imul
mov
mov
mov
icebp
imul
popf
clc
enter
ficoms
pop
and
fs
jp
push
test
mov
stc
insb
dec
mov
add
iret
push
subb
xchg
xchg
mov
mov
or
icebp
xchg
shll
frstor
test
mov
add
loopne
add
pop
insl
inc
cmp
and
gs
aam
int
outsb
sti
stc
sbb
ss
mov
gs
mov
mov
out
ret
testb
es
call
int3
push
adc
jns
pop
rolb
mov
ss
cmpsb
push
popf
in
cmc
jge
push
jle
ss
fmuls
ud1
pop
mov
xchg
mov
addr16
aaa
clc
andl
and
test
stos
ficomps
aaa
sub
in
dec
insl
sub
jge
push
or
aaa
jbe
mull
lahf
cmp
sub
dec
ret
repz
out
loopne
jno
mov
mov
loope
lods
pop
cmp
xchg
pop
scas
into
pop
loope
jb
sub
pop
mov
pop
loope
cmpsl
and
mov
or
loope
mov
call
jge
cmpsb
xchg
ret
lds
sub
out
rolb
ss
xchg
cmp
jmp
dec
mov
jo
xchg
add
stos
sbbl
xchg
adc
xor
sarb
mov
add
cwtl
pop
je
xor
xorb
je
jae
addl
cwtl
xchg
jbe
jle
leave
push
mov
jl
cmp
push
xor
dec
dec
inc
inc
idivl
mov
iret
jno
xchg
sahf
mov
fs
xchg
push
lahf
adc
fimuls
add
repnz
ljmp
cwtl
dec
lds
mov
push
pop
lock
dec
fdivl
mov
inc
test
sar
mov
int3
stos
push
insl
and
loope
sbb
cmc
ds
mov
scas
mov
dec
aas
jg
add
push
mov
push
inc
loop
clc
test
rcll
lea
pop
pop
test
pushf
mov
mov
out
ficoms
subl
cs
popa
xor
bound
cltd
push
add
sub
mov
pop
push
cmc
mov
cltd
sub
gs
xorl
into
imul
in
rcl
scas
jne
inc
sbb
nop
dec
pushf
mov
xchg
cmp
jmp
mov
and
out
and
aam
add
lahf
rorb
add
fwait
ja
mov
push
ds
repnz
pop
nop
or
enter
test
pop
pop
es
push
xchg
insl
dec
and
ljmp
in
out
push
sbb
int3
sbbl
cs
scas
or
aam
xchg
cmp
das
cwtl
and
fiadds
hlt
xor
mov
pop
mov
mov
pusha
cs
xor
bswap
ja
mov
xor
mov
sbb
jle
push
lret
jns
mov
push
add
mov
mov
enter
sti
add
lock
mov
sbb
xchg
cmp
fstl
push
sbb
popl
in
loopne
fsub
mov
cs
pop
movsl
lods
in
ss
call
icebp
or
shll
sbb
push
cmp
testl
repz
mov
arpl
or
cmp
dec
cld
into
inc
or
cmp
cwtl
mull
pusha
rolb
xorb
sub
mov
xchg
notl
icebp
xchg
cmpsl
fidivs
fld
bound
cmp
inc
cmp
mov
test
jnp
fcoms
sub
fistpl
iret
jle
inc
fldcw
xacquire
stos
cmp
sub
pop
push
jecxz
imul
pop
sbb
mov
les
or
fsubr
mov
das
adc
and
pop
push
sbb
sbb
sbb
fwait
or
clc
cld
inc
xchg
addr16
dec
push
sahf
repnz
ficoms
jb
cmp
lcall
stos
xor
jo
stc
mov
mov
clc
addb
xor
fistl
inc
repz
lock
jle
je
enter
cs
adc
out
push
out
pop
push
movsl
out
frstor
ja
jae
pop
insb
cmp
js
push
cmp
sub
fcomp
enter
call
scas
mov
pop
dec
outsb
js
push
cmp
sub
fcomp
enter
call
scas
mov
pop
dec
jle
jle
prefetcht2
or
cmp
sub
fcomp
enter
call
stos
mov
jb
out
push
push
cmp
bound
lahf
stc
adc
ja
inc
inc
push
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
dec
adc
ljmp
jp
add
add
add
or
pop
add
add
add
add
sub
add
add
add
lea
sahf
add
add
add
add
add
add
add
add
add
add
jo
or
addr16
add
add
add
cmp
lds
filds
icebp
add
xchg
add
add
add
cwtl
add
jno
popa
add
inc
add
add
add
add
or
add
add
add
pusha
add
add
add
add
add
cmp
cmp
call
add
add
add
add
lret
add
add
or
sub
fiaddl
push
add
test
sub
add
add
dec
add
add
add
add
mov
add
add
add
add
add
add
add
or
sahf
add
add
add
add
add
add
add
add
add
add
or
pusha
add
add
add
add
add
add
add
add
add
inc
add
add
add
fwait
add
add
add
fiaddl
movl
pusha
add
add
xchg
add
add
add
popa
add
add
add
add
add
add
add
add
add
add
pusha
add
les
add
add
add
cmp
cmp
and
out
add
add
add
add
lea
pop
add
add
add
add
ret
add
add
add
add
add
add
add
add
cmp
xchg
add
add
add
jbe
add
lds
stos
add
add
lds
add
filds
mov
stos
add
add
add
in
jae
and
add
add
outsl
add
jns
adc
jle
jbe
outsl
add
add
add
filds
icebp
add
add
iret
add
sbb
push
add
add
add
add
xchg
add
add
add
add
add
fiaddl
sahf
add
add
mov
add
add
or
rolb
icebp
add
add
add
add
cmp
stos
add
push
add
add
add
mov
push
add
add
add
add
stos
add
add
add
add
dec
add
add
push
add
add
add
or
add
ds
add
add
dec
add
aaa
add
add
add
ret
add
fiaddl
outsb
add
add
add
add
fldl
add
add
cmp
jns
sub
test
sub
or
les
pop
add
add
add
add
add
add
in
dec
add
add
cmp
add
add
add
add
outsl
add
test
add
cmp
cmp
addr16
jo
icebp
add
add
add
inc
add
mov
loope
cltd
add
inc
add
add
cmpsb
add
add
or
mov
dec
add
add
lods
add
add
sbb
pop
out
bound
mov
dec
push
or
into
xchg
ret
inc
xor
outsl
repnz
flds
xchg
neg
daa
cwtl
inc
jle
rcrl
fdivrs
or
int3
add
lods
xor
dec
icebp
xchg
jmp
clc
pop
mov
inc
out
xor
inc
test
jp
je
lock
adc
nop
fistpl
mov
inc
stc
push
addr16
cwtl
clc
inc
xlat
or
movsb
fwait
jg
push
lahf
mov
in
pop
aam
jl
jg
lcall
dec
fldl
test
cmp
inc
mov
adc
sbb
inc
sub
rcl
pop
pop
hlt
pop
jge
adc
loopne
aam
pop
lret
bnd
out
fsubl
dec
negl
jnp
cmp
testl
push
imul
push
lret
loope
sub
subl
dec
lds
movsb
mov
pop
loopne
push
and
adc
iret
jo
ljmp
jae
jae
data16
shlb
xor
sub
jge
lock
movsl
xchg
loope
mov
inc
push
push
outsl
sub
pop
sub
insb
inc
xor
sbb
cmp
icebp
jns
in
sbb
jl
dec
mov
mov
aad
mov
mov
jns
inc
xchg
xchg
lcall
inc
std
or
and
sub
movsl
cltd
daa
in
movsb
mov
mov
xor
jb
aaa
in
push
jb
sbb
push
and
pop
jge
into
faddl
int
cmp
enter
cwtl
adc
daa
int3
sti
pop
fisttpl
iret
jb
in
leave
ss
cwtl
ret
add
mov
mov
clc
ss
and
imul
fldl
popf
push
jmp
pop
stos
inc
adc
xor
cwtl
jecxz
andl
xlat
sbb
lock
leave
scas
jno
pusha
jge
pop
and
cmp
adc
push
std
pop
xchg
scas
imull
fiadds
adc
out
jmp
cld
daa
mov
imul
and
addr16
insl
cmpl
pop
jmp
pop
negb
mov
unpckhps
xor
xchg
mov
insl
lret
aad
or
scas
xchg
jbe
mov
xor
lods
sub
mov
aas
cltd
xor
nop
cld
es
stos
mov
mov
push
xlat
xchg
mov
data16
repz
std
mov
adc
pop
add
dec
popf
testl
jge
fs
xor
int3
fcoml
jbe
jbe
lret
into
icebp
icebp
int3
xchg
and
fidivl
dec
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
