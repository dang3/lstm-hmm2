call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
adc
int
fnstsw
cmc
popf
xchg
xchg
popf
add
dec
xor
cmp
sbb
xchg
std
movsb
int
ffree
lods
aad
in
cmc
clc
add
dec
xor
cmp
test
xchg
std
movsl
int
ffree
lods
aad
in
cmc
popf
add
sub
imul
push
xchg
jmp
pop
cmc
push
push
mov
cwtl
test
push
subl
movsb
rorl
fnop
in
sbb
shlb
fidivl
outsl
add
ljmp
cmp
lea
xchg
cmp
shl
jae
push
sbbb
inc
jl
dec
lret
rclb
roll
xchg
call
lds
jge
xchg
roll
movsl
cmp
jg
js
push
divb
mov
push
in
cmc
popf
insl
xchg
pusha
push
push
jle
sub
jge
xchg
jmp
jae
aad
loop
ss
insl
ret
jns
cmp
insl
fs
xchg
std
movsl
int
ffree
lods
aad
in
cmc
popf
add
dec
xor
cmp
icebp
in
roll
ljmp
insl
sbb
push
sub
or
js
adc
mov
in
lea
pop
sub
push
dec
es
xor
lods
mov
movsl
test
cmc
popf
add
dec
xor
cmp
test
xchg
std
movsl
int
ffree
lods
aad
in
cmc
popf
add
dec
xor
cmp
test
nop
aad
mov
fidivrs
xchg
fiaddl
jns
jge
arpl
dec
add
mov
das
xorb
stos
das
jmp
test
sbb
outsb
sbb
add
mov
mov
sarb
mov
pop
shl
inc
stc
pop
push
movsb
pop
popa
cmp
dec
xor
jle
xchg
ja
mov
jge
jne
mov
shll
push
jo
push
xorl
cmp
jae
add
ja
push
jl
pop
inc
aad
jp
sub
add
sahf
mov
xchg
scas
xor
push
add
dec
int
sbbl
mov
mov
test
sub
loope
inc
sub
stos
test
scas
xchg
data16
jbe
fidivs
xor
adc
adc
cmp
loope
jmp
stos
xchg
mov
pop
jl
das
je
call
fistpl
test
int
lds
out
jne
dec
fwait
xchg
push
xchg
call
pop
pushf
aas
incb
aad
or
sbb
sub
xchg
or
push
mov
cmp
and
jo
ljmp
daa
dec
jl
test
pop
sub
sub
pop
inc
and
das
rorb
loopne
dec
inc
icebp
or
sub
inc
pusha
jb
jno
add
out
lret
out
aas
cs
bound
push
dec
jae
scas
pop
xchg
and
scas
cmpsb
ret
inc
mov
jne
jecxz
adc
lret
lcall
bound
or
test
in
push
rcr
in
jecxz
mov
rcll
push
cmp
lcall
mov
mov
adcl
fadd
jo
ds
popf
mov
sub
loope
daa
repz
nop
pop
add
lock
xor
adc
mov
bound
lods
xor
xchg
xchg
aas
xchg
jbe
sar
jo
adcb
ljmp
inc
xor
pop
mov
cmp
mov
scas
in
ffreep
push
xchg
xchg
inc
fidivl
xchg
out
out
inc
repz
mov
nop
push
mov
test
les
std
in
jp
das
xorb
sbb
aad
aas
psubb
lods
mov
xchg
iret
js
xor
not
dec
popf
cmp
mov
enter
sbb
push
je
dec
ds
decl
xor
outsb
sbb
pop
adc
js
inc
cmpl
repnz
pop
out
out
mov
xor
ljmp
mov
inc
sub
sbbb
push
aam
push
mov
addr16
aas
out
mov
aam
ftst
inc
pop
pop
push
xor
loop
jo
pusha
pop
cli
push
xchg
mov
out
repz
xchg
jns
inc
dec
pop
push
cmp
hlt
xchg
xor
enter
ficoml
loopne
out
js
xchg
pop
jge
es
mov
fsub
les
mov
loope
in
ds
movsl
dec
mov
sub
add
scas
cmp
mov
stos
sbb
push
shlb
cmc
sbb
mov
bnd
lods
push
mov
xchg
mov
or
jg
fsubs
loope
inc
mov
push
xchg
xchg
jns
subb
sub
in
adc
mov
mov
pop
adc
xlat
mov
jne
sub
mull
bound
sub
in
inc
pushf
pop
cmpsb
adc
pop
int
ret
add
popf
in
popa
pushl
sahf
mov
scas
push
and
mov
jns
push
dec
xchg
push
add
or
add
mov
pushf
mov
mov
add
or
push
fdivr
dec
jge
dec
cmpsl
mov
insb
adc
pop
test
adc
dec
mov
aaa
loopne
repz
popf
fdivl
and
dec
sbb
in
rorl
pop
mov
mov
sub
lds
sbb
into
pusha
fnstenv
je
test
add
insl
mov
and
inc
shll
out
xor
xabort
pushf
push
cmp
fistpl
add
mov
call
jmp
mov
cmp
icebp
mov
mov
mov
mov
or
mov
push
popf
cs
push
inc
sbb
sbb
mov
push
xchg
cmpsl
cmc
out
test
hlt
arpl
mulb
enter
das
lods
cld
dec
push
dec
mov
xor
mov
fstpt
push
cmpl
icebp
repnz
mov
pop
sarb
lcall
add
insb
mov
cmpsb
mov
shr
push
inc
test
jge
shlb
inc
popa
push
jle
stc
cwtl
stc
jmp
xchg
je
fbstp
es
xor
inc
push
hlt
scas
imul
fsubrl
or
sub
aam
insb
mov
xchg
daa
shl
xor
mov
dec
mov
mov
fs
les
cs
dec
in
in
int
mov
test
lret
in
shrb
jne
cmp
addl
bound
sbb
ja
adc
outsb
adc
and
mov
stos
xlat
jno
jmp
push
test
and
gs
adc
jno
and
push
sub
and
add
mov
jae
mov
movsb
outsb
dec
cmpsb
loopne
mov
mov
jl
cwtl
fmuls
cmc
std
mov
adcb
xchg
inc
int
add
int
out
mov
jns
inc
jo
cwtl
clc
fcmovnu
lods
inc
enter
fidivl
adc
xchg
sahf
movsb
ljmp
sub
mov
fwait
in
xchg
dec
mov
inc
jbe
je
mov
lcall
fwait
xor
pushf
mov
shl
sub
push
fstpt
pop
sbb
mov
xor
mov
jb
lock
push
jp
loop
shlb
shll
and
scas
in
lcall
sbb
das
jmp
xchg
cltd
les
sbbb
pop
add
movsb
dec
shlb
call
ret
fdivs
repnz
stos
xchg
stc
arpl
add
mov
cwtl
lahf
mov
xor
inc
sar
inc
mov
and
lret
fisubrl
loope
inc
imul
mov
mov
mov
daa
jmp
orb
cmpsl
clc
inc
popa
push
add
xchg
je
es
jp
sbb
jmp
xor
dec
sub
cmc
sbb
out
xor
cmp
jmp
inc
cli
inc
sbb
push
xor
jmp
mov
lock
xor
movl
inc
sub
and
pop
stos
cmp
scas
cld
jo
jne
cmpsl
mov
pop
pop
add
xchg
push
or
cs
inc
mov
dec
mov
aam
lret
test
jecxz
push
fdivr
mov
lret
out
sti
out
repz
cmpsl
xorl
in
outsb
aas
and
inc
je
push
loope
in
dec
lahf
sbb
jne
dec
sub
push
mov
jge
xor
inc
in
sub
cld
pusha
loopne
stos
inc
mov
push
dec
fdivrl
data16
mov
testb
sbb
ss
sub
pushf
int3
jmp
fs
mov
and
adc
inc
push
fsubs
test
imul
xchg
jae
jp
cli
in
aam
push
rolb
lea
cmp
xchg
sub
inc
xor
add
pusha
fwait
inc
and
sub
popa
inc
jo
adc
jl
pop
aaa
and
leave
cmp
fistl
jmp
sub
jle
jb
adc
jl
pop
inc
cmp
xchg
int
sub
or
mov
mov
push
jge
insb
shrb
scas
push
mov
rorl
push
std
std
enter
xor
fnstsw
and
mov
dec
outsl
cmp
stos
xor
sbb
push
iret
sub
cli
mov
stos
out
jae
xorb
test
xchg
test
push
jb
push
gs
loop
add
xor
lock
mov
mov
or
sub
pusha
pop
xor
pop
fs
push
sbbb
pop
mov
sbb
sbbb
mov
mov
out
jns
dec
push
sub
in
pop
or
xor
inc
clc
xor
sbb
pop
jo
lds
test
jmp
dec
jb
cld
or
mov
mov
xchg
push
dec
and
add
sub
jnp
cs
dec
imul
sbb
stos
int
and
cld
adc
mov
mov
mov
mov
cltd
lea
insl
fildl
dec
mov
xchg
call
or
dec
aas
inc
dec
xchg
mov
xlat
outsl
sub
insl
imull
cmp
dec
push
jl
into
adc
out
aad
std
scas
mov
arpl
shl
mov
rorl
lcall
bound
in
fiaddl
imul
xchg
add
repnz
push
orl
pusha
inc
jb
cld
push
lcall
aad
lret
pop
shlb
inc
mov
fld
inc
mov
xchg
pop
hlt
adc
in
cmp
movsl
dec
xchg
push
insb
cs
mov
movnti
jmp
out
xchg
scas
loope
stos
mov
repz
cmp
ror
lods
ljmp
sbb
loop
cmp
jae
mov
jecxz
add
push
mov
sbb
ljmp
adc
cmc
inc
shl
fnstenv
add
jl
test
addr16
in
decb
lret
dec
sbb
mov
mov
mull
sbb
xchg
jge
mov
mov
lock
int
cmc
mov
push
ret
sub
or
inc
insb
out
xor
out
ds
scas
and
adc
aaa
sub
incb
pop
or
stos
pop
insl
xchg
jl
ret
lods
outsl
sub
je
lret
adc
ds
lods
push
popa
jp
fs
jp
sbb
in
jae
fdivrs
xor
in
pop
cwtl
test
lcall
inc
and
sti
movsl
add
or
insb
pop
aad
scas
call
push
fldl
xlat
mov
out
mov
mov
push
push
das
inc
mov
aaa
icebp
and
mov
or
out
sub
fimuls
insl
cmp
ss
das
inc
mov
mov
xchg
inc
filds
push
daa
inc
inc
movsb
xchg
push
or
jle
in
outsb
movsb
cmp
add
nop
jle
inc
subl
int
ds
out
xchg
jae
ficomps
sti
sahf
hlt
adc
insl
mov
ja
leave
sub
lret
sub
aaa
push
xchg
stc
xchg
add
rorb
addr16
add
jmp
pop
jno
cmpsl
not
dec
lea
jmp
shll
push
ljmp
pop
and
lock
mov
dec
lds
sub
add
mov
push
test
push
mov
jmp
lods
jg
jecxz
and
in
inc
scas
xchg
cli
popa
mov
xor
push
mov
stos
arpl
aas
daa
cld
inc
mov
pop
aad
or
inc
mov
or
cmp
pop
xlat
aaa
into
inc
in
mov
xor
sbb
idiv
loopne
jmp
xchg
rorl
jg
sub
mov
rcrl
xor
dec
sbb
rorl
sbb
cmc
decb
adc
adc
lea
in
add
push
pushf
sbb
dec
shlb
imul
daa
mov
or
in
fstps
int3
mov
push
testl
xorl
jge
arpl
and
push
inc
mov
mov
pop
movsl
pop
cmp
pop
pop
je
push
pop
jae
cmp
sbb
outsl
clc
js
add
xchg
fisttpll
cmp
xlat
push
sub
imul
lock
xor
cs
gs
loope
mov
daa
js
call
fsubl
ret
lods
xorl
rorl
scas
dec
lcall
cmpsl
shrl
enter
or
nop
les
or
nop
cmpsl
sarb
mov
int3
loope
das
les
pop
in
test
cmp
iret
dec
mov
or
jne
leave
imul
xor
sub
aaa
xchg
out
fcmove
icebp
fdivrl
cs
and
mov
sub
inc
sbb
mov
ret
cmc
jecxz
add
repz
fyl2x
lods
mov
idivb
lcall
adc
add
inc
mov
in
stos
je
fadd
gs
pop
push
push
add
mov
pop
xchg
cld
pop
xlat
sub
jp
dec
insb
sahf
fisttpl
fildl
jmp
in
push
inc
les
jl
lret
aaa
idivl
push
cmp
daa
sub
mov
imul
xchg
cld
into
test
das
mov
xchg
outsb
cli
xor
jl
sbb
imul
jae
cmp
cmpsl
or
pop
inc
pop
clc
or
outsl
into
or
loopne
testb
fisubl
add
jno
sub
mov
bound
jno
in
xchg
dec
inc
mov
xorb
gs
out
pop
mov
nop
cs
sti
dec
movsb
and
sub
mov
jns
sub
xchg
or
xor
out
scas
cmp
add
or
dec
les
lret
or
and
loop
xchg
push
ret
out
or
les
and
or
mov
shrb
sub
movhps
add
out
cmc
cmp
outsb
inc
cli
insb
arpl
imul
jo
pop
mov
arpl
lods
rcll
insl
cmp
sarl
xchg
pop
shl
nop
ret
dec
cmpsl
xchg
pushf
ljmp
hlt
or
dec
inc
mov
sub
and
out
and
mov
cli
loop
mov
cs
cmp
loopne
js
pop
aam
adc
jno
inc
adc
cld
xchg
or
inc
popa
mov
push
dec
mov
cmp
and
cmp
cmpsb
arpl
loopne
insb
ljmp
outsl
pop
les
cwtl
ja
cmp
push
push
push
bound
lret
nop
push
cmp
cmc
and
cmp
scas
add
pop
roll
cltd
jnp
cmpsl
fdivl
loope
std
repz
mov
dec
and
ficompl
arpl
ss
rcll
int
mov
mov
and
cmp
mov
xchg
scas
mov
inc
mov
leave
xchg
mov
lret
dec
xchg
lret
dec
inc
cmp
sub
out
outsb
jecxz
dec
fisubs
jns
xchg
inc
loopne
sub
mov
sbb
adc
dec
jge
inc
sbb
loope
out
int
mov
adc
out
fwait
xchg
pushf
xlat
popf
pop
sub
mov
movsb
dec
mov
mov
js
dec
pop
push
xchg
je
cmp
add
or
mov
fs
sbb
cmpsb
xor
lret
sub
aaa
ficompl
pop
les
mov
loop
xchg
lea
push
sub
xchg
bound
hlt
movsl
cmp
movsl
shlb
in
or
ja
xchg
mov
notl
stc
dec
lret
mov
sbb
shrl
push
or
sub
inc
sbb
in
adc
adc
and
jmp
test
aaa
fucomi
aas
push
add
ret
xor
cmp
orb
pushf
adc
jg
pop
add
xchg
xchg
inc
int3
std
mov
jae
scas
xchg
jns
cltd
cwtl
inc
aaa
enter
pop
js
pop
push
pop
incl
insl
loope
repz
call
dec
and
in
aad
sub
pop
push
xchg
lcall
outsb
mov
mov
jecxz
loop
loop
cmp
arpl
out
inc
xchg
subb
xchg
rcrl
xchg
xchg
xchg
repnz
sub
sahf
hlt
sbb
dec
mov
out
in
sub
cmp
pop
scas
sbb
addr16
xchg
aad
pop
scas
dec
pop
sahf
push
fcoml
cmc
fldt
outsl
sbb
mov
pop
icebp
jmp
cmp
clc
sbb
or
das
sub
mov
xchg
jmp
fcmovb
outsl
loopne
test
dec
mov
imul
cmp
movsl
xor
or
xor
ret
ljmp
loop
push
mov
movsb
inc
stc
ds
test
jns
in
or
jbe
mov
rcrb
jae
mov
mov
adc
les
push
fsubrl
or
in
and
xor
mov
imul
mov
fimuls
push
xchg
test
xor
test
mov
out
insl
jmp
pop
and
insb
dec
push
clc
jns
add
repz
cmp
xchg
das
hlt
push
and
jae
mov
addr16
pop
nop
rcll
mov
jg
int
xorl
jecxz
pop
push
rolb
fsubr
add
sbb
call
cmpsl
cmc
ja
adcl
jmp
xchg
push
out
pushf
jp
sub
lea
movsb
rorb
or
xor
mov
repnz
fnstsw
scas
mov
dec
jb
xor
and
lcall
push
mov
loop
popf
xor
mov
add
orl
jle
cs
xchg
scas
add
push
jns
push
loope
xor
nop
ret
mov
dec
outsl
iret
repz
mov
leave
call
inc
roll
out
adc
jae
add
push
fidivrs
push
jle
mov
pushf
cwtl
mov
insl
dec
cli
mov
pop
int
xchg
mov
scas
ret
or
mov
bound
loopne
das
popf
in
outsl
pop
pop
mov
sti
xchg
mov
pop
mov
ljmp
out
adc
mov
stos
ja
push
add
cmp
and
int
call
pop
stos
adc
jp
jo
mov
leave
jle
mov
sbb
xchg
mov
jmp
shll
subl
pop
jo
jo
xchg
arpl
dec
lds
je
pushf
pop
loope
push
xor
jo
divl
sbb
in
mov
jecxz
or
lock
lret
hlt
sub
adc
adc
stos
inc
hlt
lcall
pop
and
adc
stos
jmp
cmp
inc
cmp
push
mov
ret
push
int
clc
dec
push
addl
in
out
insl
jo
sbb
pusha
xchg
adc
pop
stos
jl
pop
sub
int
jp
test
gs
shlb
mov
xchg
iret
mov
or
xor
addb
sub
rclb
ret
mov
mov
sub
fistpll
mov
lds
aam
int3
xchg
dec
add
and
fs
imul
sub
ds
sub
xchg
insb
insl
push
sbb
paddw
inc
xchg
mov
adc
mov
fdivs
out
and
or
imul
xor
and
sbb
adcl
sub
enter
push
sbb
std
xchg
and
ljmp
cmpsb
test
jne
fimull
aad
xchg
dec
std
jns
sub
jp
jmp
cmpsl
mov
sub
mov
arpl
ljmp
or
iret
rcll
testl
cltd
jmp
nop
insl
nop
xchg
xchg
iret
int3
adc
add
xchg
ds
xchg
test
ror
movsl
aam
movsl
nop
add
js
add
mov
mov
dec
push
and
arpl
cmp
movsb
xor
cmpl
push
xor
xor
es
arpl
add
aam
test
rorl
mov
ljmp
jl
cmp
cltd
add
xor
push
pop
push
jmp
cmc
push
cmp
cmpsl
sbb
int
popa
inc
mov
inc
and
mov
ja
lds
xor
sub
les
mov
dec
xchg
inc
stos
mov
rol
pop
shl
out
into
sbb
aaa
pop
aam
test
jle
mov
hlt
sti
pop
pop
pop
popa
repz
push
pop
pushf
xchg
in
adc
ror
imull
add
imul
nop
push
mov
repnz
mov
pop
mov
push
jb
loope
ja
xchg
cmpsl
std
lea
mov
cmp
into
mov
push
pop
dec
or
rep
mov
jl
dec
add
pop
into
cmp
scas
nop
fidivrl
mov
push
iret
cltd
dec
scas
cmpb
pushf
test
pop
daa
pop
or
mul
je
adc
test
mov
pop
cmp
sarl
call
outsb
mov
push
add
dec
in
push
mov
jl
mov
inc
mov
mov
pusha
push
mov
sbb
jp
push
add
ss
movsb
jns
inc
dec
push
jmp
lock
ljmp
adc
imul
add
mov
lds
cmc
popf
add
dec
xor
cmp
test
xchg
std
movsl
int
ffree
lods
aad
in
cmc
popf
add
dec
xor
cmp
test
xchg
std
movsl
int
ffree
lods
aad
in
cmc
popf
add
dec
xor
cmp
test
xchg
std
movsb
int
ffree
lods
aad
in
cmc
pop
add
dec
xor
ret
mov
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
xchg
add
adc
and
xor
cld
out
lret
je
mov
xchg
jle
outsb
movsb
sbb
push
pop
ds
hlt
add
adc
and
xor
inc
mov
scas
add
mov
push
movsb
outsb
mov
mov
ds
hlt
add
dec
or
mov
dec
xchg
jl
outsb
pop
test
mov
fisttpll
sarl
push
mov
lahf
dec
out
fs
mov
xchg
mov
pop
dec
fnstenv
in
lds
pop
jnp
pop
rolb
sahf
sub
jno
xchg
fwait
sub
xor
lahf
mov
cwtl
fidivrs
pop
outsb
imul
jg
push
xchg
sub
test
dec
loope
subl
jno
fwait
pop
mov
sbb
addr16
inc
jno
mov
fs
cmp
sbb
in
xorl
inc
popa
test
sbb
js
imul
push
les
pop
jno
sti
into
pusha
add
dec
mov
cmp
and
in
mov
jg
outsb
dec
fwait
in
push
xor
out
repnz
adc
add
cmp
lret
fs
insl
lods
test
mov
fcoml
int3
decb
lods
add
mov
push
lock
sti
xor
aas
jmp
xchg
mov
pusha
dec
mov
fisubrs
jge
push
and
sbb
adc
inc
lock
roll
insl
mov
aam
subl
add
adc
inc
scas
jno
ja
push
mov
test
jle
outsb
mov
les
aam
in
hlt
fiadds
adc
and
xor
inc
mov
scas
je
test
jle
outsb
mov
les
aam
in
hlt
fiadds
pop
push
mov
loope
fisubrs
ljmp
mov
popf
pop
push
test
stos
xor
sbb
rcll
clc
rcl
xor
in
dec
andnps
leave
mov
js
push
or
scas
cwtl
test
lahf
jo
iret
jns
mov
jae
in
adc
mov
cmc
mov
lret
xchg
and
daa
data16
mov
pop
push
cmpsb
adc
jns
mov
and
or
out
repnz
adc
add
and
mov
cmp
jo
or
pop
xchg
push
outsl
mov
or
addb
mov
mov
dec
fiaddl
xor
outsl
ss
andb
loope
sbb
add
in
add
movsl
int3
adcl
adc
aam
and
and
cmp
and
fldl
xchg
cmp
movsl
push
mov
in
jb
flds
mov
popf
dec
add
adc
and
inc
gs
pop
jns
shlb
or
arpl
out
push
pop
sub
data16
cmp
inc
movsl
xor
xor
mov
cmc
sbbl
sahf
scas
scas
outsb
adc
cmpsl
pusha
arpl
mov
pop
push
enter
jne
test
cld
imul
sbb
and
pop
mov
lods
aam
negb
add
lea
inc
daa
movsb
jge
adcb
inc
inc
fisttpll
sbb
test
test
fists
loop
dec
mov
mov
je
mov
cmpb
jnp
cmpsl
xchg
stc
cmp
xchg
mov
in
jne
xchg
adc
xor
andb
sbb
loopne
xor
jb
jb
pusha
push
aam
mov
mov
or
inc
xor
push
xor
xchg
mov
cwtl
stos
lahf
xchg
xchg
adc
sub
mov
mov
or
fisubrl
lea
jne
jmp
dec
cmpsl
mov
inc
jnp
lret
lods
aad
sub
shrb
repnz
pop
repnz
out
xor
pop
imul
out
lahf
pusha
xor
inc
xchg
inc
xor
lods
enter
sub
dec
add
push
lods
cmp
call
xor
sub
imul
add
jmp
mov
dec
movsl
repnz
sub
pop
pop
rol
gs
neg
fs
mov
sub
dec
xor
jl
push
inc
sub
adc
loop
lock
js
in
inc
mov
fsts
out
lods
and
pop
repz
xor
rolb
stos
push
dec
xchg
loope
and
push
push
mov
clc
inc
mov
bound
sbb
or
jmp
iret
pushf
inc
mov
xor
mov
clc
mov
jl
or
imul
mov
mov
lods
cmp
pusha
cmpsb
jl
mov
hlt
inc
dec
or
nop
js
insl
outsl
lock
or
jmp
aas
stos
adc
sub
dec
int
rcrl
popf
dec
je
jbe
ss
xchg
pop
stc
outsl
lret
cwtl
shr
ja
test
jne
mov
scas
sub
mov
xor
mov
dec
push
mov
sbb
iret
and
mov
ret
push
or
dec
lcall
popf
pop
in
xor
inc
push
inc
dec
insb
cld
and
mov
pop
bound
out
jg
rcrb
shll
push
pop
push
or
test
ljmp
lods
dec
or
pop
jno
push
sbb
cmp
xchg
pushf
cmc
mov
jmp
sbb
adc
and
add
push
cmpsl
shlb
sbb
mov
inc
inc
push
test
out
xor
sarb
mov
js
mov
jl
out
data16
addr16
pop
and
push
pcmpgtw
and
jmp
addl
jp
test
ror
ja
adc
pop
pop
mov
cmc
ljmp
pop
dec
xor
jo
subl
ds
decl
and
stos
movsb
dec
jecxz
jae
shl
iret
adc
fists
bound
addl
jns
adc
imul
and
pop
inc
inc
dec
lret
arpl
aaa
xchg
shrl
rolb
fisttpll
jno
fdivp
repz
test
mov
in
pop
inc
sub
cli
bound
mov
add
xchg
outsb
mov
out
sar
dec
jne
pop
xchg
cltd
dec
ss
pop
jno
aaa
mov
outsl
xchg
imul
fcomps
ret
jne
xchg
ret
pop
ja
or
xor
jno
mov
test
jg
lods
lcall
out
sub
adc
lcall
jecxz
jno
ljmp
cld
adc
sar
and
sbb
movsb
xchg
xor
jmp
jmp
pop
scas
cmp
loope
push
xchg
xchg
push
inc
add
add
sub
mov
pop
iret
add
fidivrl
in
pushf
fnstenv
xor
into
stos
sbb
mov
push
push
push
mov
push
xor
out
fbstp
add
sub
or
jmp
pop
push
add
or
push
popf
sbb
or
jno
jns
ljmp
shrl
inc
mov
lds
push
sub
mov
arpl
leave
rclb
test
mov
ss
lahf
out
aas
scas
mov
push
ds
icebp
sar
pusha
in
loop
add
sbb
aas
dec
lea
in
loopne
sahf
ret
push
aas
jb
cwtl
inc
inc
icebp
xchg
jnp
test
loopne
jo
pop
movsb
movsl
dec
jns
dec
cmp
popf
adc
adc
aam
scas
dec
push
jl
rcrl
mov
pusha
hlt
ret
repz
and
push
mov
es
and
pop
test
or
and
mov
imul
push
aas
mov
jg
hlt
andl
aas
imul
xchg
data16
fs
adc
mov
cld
jmp
gs
sbb
rorb
or
int
xlat
add
jo
arpl
insb
dec
or
jle
mov
stc
adc
fdivl
gs
push
inc
push
sar
roll
and
sub
xor
sbb
loop
or
mulb
into
ja
add
fistpl
cltd
mov
jbe
sbb
into
mov
in
mov
dec
and
in
hlt
adc
and
jmp
and
fnstsw
popf
pop
cmpb
hlt
xor
lahf
lods
adc
sbb
adc
dec
add
mov
push
cltd
xlat
add
cmpsb
shrl
mov
outsl
lret
hlt
int
and
das
xor
adc
cmpsl
jle
sbb
fs
sbb
imul
inc
sbb
ret
or
fisubrl
pop
mov
or
mull
pusha
jbe
sub
test
dec
stos
dec
sbb
jp
xchg
adc
aam
jp
sub
add
sub
add
pop
enter
sbb
lods
lret
jbe
test
aaa
incl
mov
mov
imul
into
mov
pop
mov
xlat
mov
xchg
ret
fistpll
inc
push
sbb
push
loopne
mov
rorb
pop
jg
or
movl
lret
sub
add
mov
sub
xchg
mov
nop
push
insb
movsl
addb
dec
test
xorl
clc
negl
jmp
lret
gs
test
lret
pop
push
add
push
int
jno
dec
aam
inc
lahf
and
fisubrs
in
jmp
adc
test
subl
lret
jns
lahf
mov
or
cmc
std
lods
push
mov
xchg
dec
into
and
pop
loopne
mov
push
add
int
shll
or
sahf
dec
cmp
add
mov
xor
jle
mov
mov
xchg
jp
popa
jno
lahf
cmp
leave
shrb
cmp
leave
fistps
mov
sub
je
sbb
mov
dec
jnp
fs
fadds
add
ret
leave
jnp
dec
aad
xchg
jp
loop
outsl
test
sbb
mov
sbb
daa
hlt
gs
pusha
icebp
js
in
test
push
jg
xchg
es
shll
mov
jbe
add
insb
mov
push
and
fnstcw
dec
jae
je
mov
sub
inc
je
mov
leave
popf
insl
jns
and
sbb
xor
sub
pop
mov
adcl
pop
sub
addr16
mov
inc
and
mov
pop
movsb
daa
adc
outsb
std
aad
cs
jge
sahf
or
ljmp
mov
inc
rcr
add
mov
shrl
mull
sub
push
pop
pop
inc
pop
mov
mov
ljmp
cwtl
sbb
pop
and
mov
or
mov
popa
fadds
arpl
ret
imul
sub
sub
dec
fisttpl
test
mov
adc
loope
xor
add
outsl
sub
test
in
jmp
aas
jg
cmp
out
addl
or
push
enter
push
mov
adc
mov
sbb
inc
inc
std
xlat
sbb
out
movsl
enter
jnp
or
push
call
mov
gs
scas
cmpsl
pop
xchg
je
jo
stos
ret
xchg
pusha
mov
sub
cli
push
movsl
loopne
or
fsubs
dec
inc
push
inc
inc
pop
push
mov
mov
loop
in
add
loop
repz
push
lea
enter
ret
and
cmpl
lcall
sub
xchg
mov
stc
add
addb
arpl
xor
pop
mov
jl
in
push
mov
cld
stos
mov
pushf
mov
push
push
lahf
lods
sbb
adc
sub
xchg
scas
and
xor
pusha
and
aaa
sahf
ret
sub
hlt
aam
fsubl
pop
lea
cmp
jno
mov
jp
out
push
fld
dec
dec
adc
fbld
jle
enter
xchg
dec
scas
sub
ficomps
aaa
mov
dec
pop
test
out
dec
push
jg
arpl
xor
jae
lea
ljmp
jp
lods
jne
xor
dec
push
xchg
xor
adc
lahf
inc
test
or
rorl
inc
mov
mov
mov
push
push
fcmove
mov
mov
hlt
inc
out
xchg
outsl
push
xor
and
xchg
idivb
mov
xor
inc
arpl
std
iret
movsl
jae
dec
fnstsw
enter
data16
repz
push
and
jge
cmp
add
mov
cmp
jecxz
mov
mov
out
les
aas
mov
add
cmp
pushf
mov
cmpsl
add
stos
mov
jl
js
and
mov
ljmp
rcrb
xchg
mov
popf
or
and
push
decl
or
xor
daa
adcb
mov
cwtl
xor
xor
cmp
push
jp
psubd
jg
es
push
cmc
sbb
lea
mov
inc
jg
adc
fadd
es
rcr
out
cmp
push
mov
das
pop
push
clc
dec
sbb
push
dec
mov
jg
xor
data16
loope
aam
fbld
mov
into
in
loope
add
jge
sbb
pop
xchg
dec
fwait
pusha
and
test
push
lret
test
inc
mov
mov
mov
or
and
dec
mov
jge
das
dec
sbb
xchg
stos
lahf
cltd
pop
insb
jnp
cmp
push
push
mov
nop
dec
test
insl
cmp
or
movb
jo
pop
cwtl
mov
sub
mov
xlat
pop
sbb
jecxz
lods
idivl
dec
pop
mov
mov
xor
fldl
add
sub
cmp
pushf
out
jmp
test
sbb
ret
in
in
or
pop
jle
cld
mov
push
hlt
sti
xor
shll
dec
mov
inc
mov
daa
push
sub
pop
jo
mov
in
icebp
push
push
cmp
inc
push
xor
dec
add
mov
pop
push
push
shrb
fidivs
lret
adc
outsl
iret
mov
sbb
cmpsb
or
int3
xor
jg
jo
add
pop
pushf
lds
jnp
dec
shll
iret
jmp
xchg
adc
sbb
shrb
sbb
mov
cmp
inc
sbb
aam
pop
dec
or
outsl
inc
fistps
cmpsl
adc
xchg
movsl
in
jle
xchg
out
push
add
push
jmp
pop
dec
js
jge
dec
lea
push
iret
scas
cld
xor
inc
mov
fisttpll
mov
test
movsl
jmp
aad
rorl
mov
test
push
and
xor
xor
ret
rcll
pushf
in
jns
xchg
or
sub
inc
mov
fs
add
cmp
xor
mov
das
out
mov
imul
dec
dec
mov
push
xchg
nop
jns
push
ljmp
es
jbe
fisubl
orb
pop
fwait
mov
dec
jp
pop
xchg
mov
jb
into
loope
imul
jb
dec
out
xchg
mov
ss
xchg
lret
aas
bound
leave
jbe
adc
xchg
icebp
rclb
add
push
lds
aam
xor
frstor
inc
sti
dec
in
out
push
arpl
mov
xchg
fsubrp
int3
push
or
xor
rcll
lea
popf
into
test
paddsb
push
cmp
jp
and
addl
add
lahf
jmp
sbb
fisttpll
shrb
ret
lods
jne
lock
and
clc
jp
je
mov
mov
out
out
push
sbb
sbb
loop
lock
loopne
xchg
addb
mov
mov
mov
add
fcmovne
xorb
sub
sub
ss
and
movsb
jo
jl
xorl
and
test
mov
mov
int
jno
lcall
mov
inc
mov
pop
stc
xchg
sbb
inc
lock
adc
imul
xchg
jecxz
push
pop
lock
push
jno
lea
or
pop
stc
xchg
mov
jg
fs
std
ljmp
aam
mov
cmpb
xchg
inc
adc
xchg
dec
cmc
hlt
aam
push
test
dec
ds
sahf
inc
lret
xchg
out
mov
jp
test
js
out
rorl
fs
mov
push
pop
or
and
sub
dec
or
push
cld
insl
jge
lea
pusha
inc
ret
jg
xor
scas
sub
pop
lahf
in
pop
fdiv
je
popa
shrl
int3
mov
sub
fwait
cmpsb
fildll
in
jg
std
in
pop
fxch
cmp
sub
cmpsb
into
aam
mov
loop
mov
stc
jp
test
jge
xchg
lret
rclb
lret
sub
lock
mov
inc
mov
loopne
shr
jns
mov
or
lock
sbbl
jns
stos
sub
inc
rcll
arpl
or
fs
mov
es
out
int3
add
cwtl
imul
cmpsl
icebp
push
or
rcrl
push
les
push
pavgw
aam
shrb
or
fmul
cmova
bound
add
jg
fstps
into
xchg
dec
xchg
loop
repnz
test
addr16
pop
jae
mov
or
in
imul
fcompl
push
js
pushf
cwtl
pop
clc
sub
fldt
mov
movb
jne
gs
xor
pop
jmp
jne
pop
loope
push
push
leave
and
dec
je
movntq
out
xchg
cltd
enter
cmp
adc
fldenv
lret
in
movsl
and
jge
adc
xor
inc
xchg
fcoml
mov
inc
cwtl
aas
or
in
adc
dec
test
and
sbb
xchg
cmp
mov
pop
push
push
imul
jne
or
mov
sbb
cmp
mov
and
pushf
stos
and
xchg
push
js
outsl
mov
pop
inc
ljmp
adc
fwait
sub
popa
arpl
xor
out
hlt
adc
cli
popa
pop
pop
push
jns
or
mov
or
pop
insl
xchg
cmpsb
in
push
fs
dec
iret
int
sahf
pusha
xor
push
hlt
in
mov
ss
xor
daa
mov
arpl
ror
addl
xor
xor
lret
in
lods
push
call
jno
shrb
clc
ficoms
xchg
out
and
aaa
xor
inc
add
cmc
stos
pusha
jne
xchg
test
into
push
cmpl
pop
jp
push
mov
or
rcl
fisubs
fsubl
test
ds
jae
jg
lods
fmuls
mov
icebp
jo
sbb
cmp
loopne
cli
jge
add
mov
ss
inc
and
loopne,pn
inc
pop
call
inc
fimuls
jbe
mov
pop
xchg
loope
sub
push
imul
mov
adc
xchg
syscall
pop
sahf
fidivs
mov
lea
insb
shrb
sbb
push
arpl
pop
xlat
inc
and
sbb
pushl
xor
cld
xor
cs
out
int
mov
pop
jne
xlat
in
shrl
mov
adc
xchg
lods
xor
dec
ret
jno
cmp
dec
mov
and
jne
jle
cmpsl
mov
mov
push
sbb
pop
test
leave
aas
cmpsl
ret
js
sbb
fwait
push
rorl
jmp
call
mov
pusha
pop
adc
rcrl
stos
stos
cmp
dec
in
cmp
sbb
lock
mov
popf
outsl
pop
sbb
pop
lret
adc
push
lret
arpl
mov
add
stc
sbb
in
ffree
inc
cmpsl
enter
xchg
sti
orb
cmc
pop
iret
xor
or
pop
adc
lock
mov
sbb
rorb
notb
les
and
pop
dec
mov
cmp
test
insl
das
push
jb
stos
cmp
pop
inc
mov
cmp
stc
sub
inc
pop
das
in
cli
mov
xor
aas
mov
popa
jno
pop
push
sub
jo
ljmp
push
add
adc
popf
cs
push
cmp
gs
cmpsl
dec
cwtl
mov
push
pushf
bound
jge
xlat
add
cmp
adc
sbb
jmp
sarl
mov
lock
test
lds
movsl
out
jbe
sbb
notb
out
dec
imul
mov
cmc
push
shlb
mov
mov
jle
imulb
pop
xchg
xchg
dec
es
inc
sub
aad
cmp
scas
add
adc
xchg
hlt
mov
call
sar
add
imul
imul
test
fcmovnbe
stc
push
out
sbb
jae
pop
repnz
jle
lret
jno
or
cmpsb
dec
rclb
jmp
or
adc
ret
arpl
mov
les
std
or
mov
test
gs
xchg
inc
aas
stc
mov
pop
and
jge
mov
pusha
jo
jge
les
mov
hlt
popl
push
pop
mov
mov
aad
cmp
jl
xlat
mov
sbb
cmp
movsb
xchg
scas
cmpsb
leave
daa
imull
jp
mov
hlt
or
ja
cs
fnstenv
add
inc
mov
cltd
inc
cli
push
add
jge
fdivp
loopne
dec
ss
xor
sbb
js
sbb
es
xchg
or
fwait
inc
fidivs
dec
inc
xorl
loop
mov
cmp
inc
and
pop
sbb
loop
jno
lods
sbb
aas
mov
std
push
sub
jo
sahf
fmull
lods
aaa
movsb
shll
or
fildll
adc
shrl
pop
fildll
mov
testb
xchg
adc
push
call
in
xchg
mov
inc
xlat
sub
fs
mov
cmp
pop
clc
mov
sbb
mov
stc
sbb
adc
sbb
adc
int3
loope
or
aad
jns
mov
lds
push
mov
cmp
test
imul
and
push
push
sbb
aaa
dec
dec
xor
lret
daa
cmp
jno
or
sbb
mov
mov
dec
sbb
mov
testl
mov
or
bound
cmp
shrb
cmp
mov
jmp
sbb
jne
repnz
inc
mov
scas
je
test
jle
outsb
mov
les
aam
in
hlt
fiadds
adc
and
xor
inc
mov
scas
je
test
jle
outsb
mov
les
aam
in
hlt
fiadds
xor
inc
mov
scas
je
test
ja
push
push
les
aam
loopne
lock
adc
xor
inc
sahf
push
mov
test
ret
imul
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
sub
sbb
pop
or
imul
mov
mov
jmp
sti
add
xor
and
cmp
addr16
imul
stos
push
mov
bound
jb
and
pop
ret
loopne
scas
sbb
iret
lea
adc
inc
xchg
inc
shlb
or
jnp
xchg
scas
jo
in
push
mov
aam
push
and
ja
jl
pop
rorl
xchg
sti
jle
repnz
loopne
ja
adc
sbb
adc
cmpsl
ror
and
aad
jle
jle
or
mov
std
fistpll
out
sti
xor
xor
adc
out
loop
pop
xchg
xchg
jnp
mov
pop
pop
stos
lods
mov
sahf
adc
sti
std
lret
jno
sub
mov
repz
add
push
mov
sti
add
and
fst
adc
fcoms
outsb
pop
cwtl
push
mov
jp
adc
cmpsb
jo
insl
xor
jbe
call
dec
push
and
ds
cli
stc
xor
dec
inc
orb
mov
int3
add
adc
stos
adc
pop
out
push
decb
cltd
jge
jbe
jae
inc
xchg
pop
cmpl
movl
fmull
into
int3
aaa
jmp
add
mov
test
push
dec
cmpl
mov
mov
mov
jmp
sti
add
xor
and
sarb
ret
sbb
imul
mov
mov
jmp
sti
add
xor
and
rcrb
into
movsb
or
jmp
call
jo
adc
cmpsb
jge
or
aas
pop
sbb
pop
fdivrp
je
or
push
lahf
outsl
fwait
out
sub
loope
add
es
sub
adc
inc
xchg
mov
fwait
ss
mov
sub
pop
ret
mov
lock
fdivrs
dec
cmc
sbb
stc
aas
or
mov
flds
inc
push
sub
hlt
adc
int
call
lock
adc
sub
cs
dec
incl
out
xlat
xor
cmpsb
or
leave
mov
xchg
je
inc
lcall
ss
call
in
mov
pop
fwait
inc
lcall
ret
push
push
enter
test
in
mov
ret
push
ffreep
sarl
pushf
pop
test
push
repz
pop
push
cmpsb
orl
sub
add
dec
and
cli
test
inc
shlb
adc
and
jge
cli
ja
out
test
inc
xor
out
xchg
mov
insb
fists
outsl
jnp
mov
into
pop
mov
pop
xor
adc
stos
inc
sub
lcall
stos
fdivrs
cmp
mov
pushf
sub
into
xchg
test
mov
outsb
stos
in
clc
pop
cwtl
ret
dec
aad
cmpl
int
mov
dec
ret
data16
ret
test
mov
call
in
rcrb
push
div
hlt
dec
int
andb
mov
aas
fiadds
xchg
roll
movsl
pop
in
cwtl
mov
or
cmp
xchg
inc
fs
jg
inc
dec
scas
adc
or
cld
jecxz
loop
mov
insb
push
push
push
movsl
dec
das
popf
add
data16
stos
add
jno
mov
repz
incb
cs
loope
sti
push
cmp
and
lahf
xor
adc
push
dec
mov
dec
arpl
lods
push
bound
in
inc
dec
mov
in
fldenv
das
fstpt
xor
lcall
repnz
sbb
mov
sbbl
shll
scas
xchg
mov
sub
jbe
pop
movl
loope
call
jnp
adc
addr16
cmpsb
cmpsb
rclb
sbb
dec
cltd
movq
mov
je
shlb
aaa
cmp
jg
add
sahf
sbb
pop
or
xchg
adc
push
insl
addl
cwtl
into
mov
mov
lods
jge
lods
scas
ret
jl
stos
inc
xlat
mov
dec
mov
adc
or
jge
and
dec
jl
lret
test
lods
mov
xchg
jge
xor
dec
mov
push
sub
mov
sub
insl
les
aaa
repnz
jg
cltd
xchg
sbb
pop
xor
cs
sbb
xchg
cs
add
push
dec
push
inc
cmp
xor
push
test
das
push
scas
insb
dec
enter
imul
test
out
jmp
test
sar
push
pop
push
xor
orl
adc
mov
aaa
sbb
xchg
mov
adc
xchg
loope
imul
push
mov
mov
imul
adc
mov
stos
and
ljmp
ret
bound
call
jge
sub
xchg
mull
mov
test
test
push
ja
xchg
push
and
xchg
repnz
or
insl
stos
mov
dec
mov
add
scas
push
and
cs
mov
push
fistpll
and
push
mov
cmp
shlb
int
xchg
mov
xor
xchg
push
out
sub
dec
cmpsl
hlt
inc
push
or
pop
cmp
movsl
hlt
icebp
sbbb
stos
stc
sti
pop
cld
pusha
rorl
loope
xchg
insl
lret
pusha
jbe
add
xchg
xor
pop
xchg
inc
into
repz
arpl
mov
rolb
jo
sbb
sti
test
push
lahf
addb
jecxz
sahf
leave
insl
push
jmp
push
outsw
cmp
push
das
ret
add
sub
mov
push
xor
jae,pn
mov
xor
sti
adcl
and
lods
adc
nop
notb
popa
imull
jle
test
mov
hlt
mov
out
mov
mov
pop
xchg
jb
icebp
out
jbe
jge
adcb
push
cli
mov
mov
mov
out
mov
fidivs
jae
mov
repnz
push
cmp
sbb
mov
cmp
xor
pop
bound
cmc
testb
push
mov
fdivs
sti
mov
xor
xlat
jnp
test
adc
dec
cld
cwtl
icebp
or
test
sbb
stos
movsb
in
push
mov
push
test
icebp
pop
cmc
xchg
cmpb
dec
and
dec
mov
nop
inc
mov
sub
cmp
adc
adc
jg
cmp
push
push
hlt
add
adc
jmp
push
out
and
pop
dec
dec
dec
cmp
in
aam
push
hlt
lds
or
out
push
in
cwtl
push
push
mov
mov
sbb
aad
mov
cmpsl
movsb
shrb
jmp
mov
mov
cli
jmp
dec
mov
push
dec
fisttpll
lods
xor
int3
pop
inc
in
pop
mov
ret
push
data16
data16
sahf
inc
and
fadd
clc
and
dec
hlt
xchg
or
ds
mov
jno
and
ffree
mov
sahf
stc
xchg
cltd
fcomps
push
pop
in
dec
ja
lret
add
scas
and
xlat
push
fdivrl
rorb
lods
pop
in
or
sti
push
test
and
dec
add
sbb
mov
dec
mov
fs
adc
pop
lea
jle
xchg
stos
inc
pop
js
sub
fwait
js
xor
sbb
jo
jb
xchg
cmc
push
imul
jb
int
mov
mov
icebp
outsl
xor
int
subl
or
xor
mov
sbb
push
push
and
adc
mov
lods
xor
mov
mov
mov
out
cltd
lds
cwtl
out
imulb
fs
std
test
movsl
lcall
ret
mov
test
outsb
imul
jo
cmp
mov
out
xor
xor
mov
out
add
outsl
push
nop
cmpsl
cmpps
mov
and
daa
stos
inc
ret
stc
lret
adc
jb
jns
jbe
mov
daa
cwtl
jno
sbb
mov
scas
mulb
sti
xlat
scas
mov
ljmp
sbb
xchg
js
ret
cmpb
fcomps
cltd
pop
push
popa
xlat
cmp
fmuls
jecxz
lds
pop
aas
int3
imul
scas
out
and
vaddpd
sub
orl
add
jnp
cli
cmc
in
sbb
xor
adc
andl
jne
dec
rdseed
mov
popf
pop
clc
dec
mov
mov
dec
jne
adc
dec
loopne
push
icebp
mov
outsl
popa
cmp
mov
mov
sub
cmp
lds
add
xchg
imul
fucom
out
std
lods
xchg
sub
pop
mov
inc
adc
movsb
mov
xor
mov
jg
shl
stc
fs
xor
or
mov
popa
push
enter
adc
lods
sti
mov
push
sub
pop
push
and
push
sub
mov
stc
mov
outsl
dec
inc
repz
sub
call
sub
dec
insl
inc
pop
xor
inc
sbbb
mov
lcall
cmpsl
mov
cmp
stos
and
frstor
push
lcall
and
mov
popf
shrl
repnz
xchg
mov
push
out
mov
mov
pop
mov
pop
mov
mov
sarb
lods
paddusb
inc
push
shlb
mov
fs
xchg
ficoml
jmp
imul
sbb
cltd
lds
mov
pop
call
adc
cld
pushf
push
das
loope
rclb
mov
sbb
mov
adc
incb
fs
adc
mov
leave
jmp
sub
add
aam
dec
test
mov
pop
jno
xor
jge
adc
dec
popf
cltd
mov
dec
ljmp
lahf
imul
xchg
sbb
jo
xchg
mov
stos
jae
xlat
stos
js
loop
mov
mov
arpl
mov
pop
int
movsb
mov
incl
and
push
in
cmc
imul
mov
aam
xor
sbb
mov
out
scas
dec
stos
leave
sub
push
inc
rorl
into
es
rorb
and
pop
fs
jecxz
jge
lret
adc
mov
add
ret
fdivs
inc
rolb
imul
flds
pop
mov
in
xchg
ret
mov
rclb
push
cs
setl
mov
sti
cmp
cmp
mov
mulb
pop
stos
cmp
sbb
loop
cmp
ljmp
aaa
lret
inc
fwait
xor
int
mov
cmpsb
int
mov
dec
pop
inc
pop
popa
cmp
dec
inc
dec
push
mov
pop
sub
jg
gs
fwait
popl
jns
or
inc
sti
sbb
scas
and
aaa
gs
lods
mov
xor
ret
sub
pop
int3
mov
mov
loope
cmp
lds
mov
sub
ds
into
stc
cmp
inc
mov
cld
or
xchg
and
mov
xchg
fwait
ret
mov
mov
mov
loopne
or
shlb
xchg
or
or
mov
jb
loop
aas
jmp
shlb
mov
stc
shll
jl
cmpsl
mov
mov
pusha
cld
push
pop
fsts
jmp
dec
loopne
getsec
adc
aas
fldcw
push
jmp
add
xchg
fwait
and
or
lcall
xchg
test
sub
jno
mov
scas
push
mov
jge
mov
ret
movsb
add
out
jp
push
xor
jae
scas
jne
mov
lahf
imul
std
fucom
push
xor
mov
aam
add
mov
sub
cwtl
addr16
dec
fistps
jo
mov
xchg
bound
cltd
mov
xchg
cmpsb
push
mov
inc
jg
aaa
ds
mov
das
xor
in
outsl
fwait
xor
cmp
cmpsl
aad
cld
cli
lcall
jle
xor
nop
jg
push
add
jmp
jns
sbb
adc
mov
mov
xor
js
cmpsb
or
icebp
test
add
clc
mov
mov
fmull
ret
or
inc
xchg
jno
js
sahf
xchg
mov
stos
scas
in
mov
addl
mov
aaa
js
inc
mov
pop
xor
addr16
sbb
aam
mov
mov
iret
jp
sbb
adc
sub
cmpsb
inc
aam
inc
mov
mov
mov
repnz
ficompl
xor
mov
ja
out
jmp
outsl
outsb
sbb
loopne
cmp
stos
icebp
add
repz
xchg
mov
cmpsl
jno
roll
push
repz
xor
fidivrl
or
adc
inc
pop
subl
js
cli
and
add
pop
xchg
cltd
into
cmpsb
hlt
lret
pop
mov
shrl
pop
adc
sahf
xor
shlb
inc
in
adc
sub
jl
adc
pushf
xor
mov
std
out
test
cli
lods
xor
pop
lods
into
fwait
addb
fwait
mov
mov
add
push
jns
std
ficomps
subl
push
idivb
mov
xor
insl
fldenv
shlb
cld
pop
push
jecxz
in
lods
inc
les
dec
iret
xlat
int
lods
icebp
xchg
aam
repnz
adc
pop
scas
mov
cmpsl
adc
repz
clc
imul
xchg
mov
xor
fs
adc
xchg
pop
std
ficoms
mov
xorb
outsl
push
pop
xor
or
aad
xchg
test
movsl
dec
sub
repz
adc
fwait
int3
sub
cltd
xor
repz
xchg
repnz
lods
lock
add
loop
inc
jge
es
pop
in
jne
xor
neg
sahf
jl
lock
fistps
mov
fsubs
add
outsl
nop
test
les
dec
roll
fistpll
mov
cmp
add
add
aaa
xor
repz
mov
dec
rclb
sub
out
loope
and
lcall
ljmp
ret
sbb
push
lcall
ret
xchg
xchg
js
jae
lds
rcll
dec
fwait
cmpsb
inc
das
mov
mov
adc
in
pop
xor
rolb
add
push
sub
int3
insb
rcrl
test
rolb
lret
mov
aad
xchg
cmpsl
out
pop
pop
jns
pushf
insb
lods
jl
xor
sub
mov
movsl
xchg
sub
into
jne
aam
adc
fs
into
pop
xor
roll
pop
sub
ljmp
fwait
adc
jp
and
lahf
or
sbb
mov
notl
mov
inc
ret
ja
push
lea
and
jne
jp
loope
test
push
mov
sbb
jb
ret
repnz
add
test
mov
pusha
or
mov
xchg
enter
mov
mov
inc
fdivl
sub
pop
rorl
sbb
xchg
or
add
cli
mov
pop
mov
loop
popa
leave
add
stc
js
jge
outsl
push
cmp
stc
mov
in
mov
push
mov
cli
ret
and
inc
dec
pushf
fcmove
hlt
jne
mov
jne
nop
pop
movsb
inc
faddp
xor
aam
mov
loopne
inc
xchg
jnp
and
loope
ficompl
push
sbb
fisubl
int
or
cmpsl
mull
movsl
outsl
ss
mov
pusha
data16
shlb
call
cmp
sti
adcb
clc
sub
sbb
orl
data16
mov
cmp
and
fstpt
test
pop
fwait
push
push
jle
sbb
push
xchg
jge
out
scas
jge
rclb
test
stos
xchg
insb
mov
insb
jp
es
jle
cli
loope
bound
add
pop
imul
movnti
mov
pop
and
cmpsb
xor
enter
fisttps
imul
loopne
mov
xchg
test
mov
push
mov
mov
mov
or
in
clc
jecxz
add
jg
movsl
push
popf
popf
insb
xchg
push
mov
adc
outsb
xor
mov
mov
sub
sub
mov
out
xchg
pop
cld
cmp
cmpb
loope
imul
cmp
dec
fsubrs
jmp
adc
mov
mov
lret
pop
das
pop
outsl
cmpsb
adc
add
fsubrs
rol
xchg
gs
push
sub
sahf
jnp
adc
mov
lret
jnp
xor
fcomps
arpl
lods
sub
jno
jl
cli
fistpll
cmpsl
lcall
push
push
cs
inc
pop
shlb
adc
mov
inc
dec
and
and
push
lcall
sub
xor
scas
lea
jle
pop
roll
int
test
sbb
arpl
inc
mov
pop
cmp
sub
ss
xor
rcll
pop
stos
scas
addl
mov
push
adc
add
dec
cmp
inc
les
loope
inc
inc
mov
push
fs
jge
xor
mov
dec
dec
movsl
add
mov
and
loopne
aas
xor
nop
adc
add
insb
mov
cmp
rorl
mov
or
push
xchg
jb
jnp
and
push
adc
lret
lock
movsb
xchg
dec
cwtl
pop
cwtl
call
push
cltd
dec
mov
lcall
test
jmp
ljmp
movsb
xchg
repz
dec
mov
test
das
push
lods
cmp
pushl
pextrw
outsb
push
out
inc
movl
pop
fdivl
mov
repz
fidivrs
xor
neg
js
cmp
stos
cmp
gs
or
enter
and
dec
in
xor
incb
fcmove
stc
jnp
fldenv
lods
dec
pop
xor
mov
or
mov
add
daa
or
sbb
scas
lahf
inc
push
mov
jg
or
mov
hlt
imul
pop
jmp
cmp
int
jno
mov
xorb
mov
push
fmull
xor
fs
addl
call
inc
xor
mov
les
push
scas
xchg
roll
out
xor
cmpsb
push
xchg
pop
inc
ret
iret
cmpsb
xchg
int
adc
dec
stc
cli
mov
lahf
inc
test
data16
inc
cli
adc
push
mov
cmpsb
das
mov
push
mov
adc
push
mov
inc
pop
mov
fistpll
xor
xor
stos
jbe
xchg
fstpt
clc
enter
pop
xchg
sbb
add
sbb
sbb
xor
fistpll
pop
xlat
and
or
imul
xchg
cltd
es
mov
mov
clc
push
xchg
stos
int3
lea
inc
pusha
push
xchg
cmp
xchg
sub
or
xor
adc
cld
paddusw
sahf
mul
push
fsubl
sbb
xchg
out
pop
ja
push
sbb
mov
aad
push
xchg
in
sbb
aad
push
sbb
xchg
stos
lret
sbb
lret
loopne
pop
mov
pop
cmpsl
arpl
movsb
and
addl
jns
fs
stc
fucomp
inc
xor
push
or
rcll
mov
and
test
pop
mov
push
aas
int
jns
into
mov
mov
cld
push
or
push
mov
push
in
cmp
incl
xchg
je
push
xorb
ljmp
xchg
dec
dec
push
lret
inc
mov
mov
push
pop
sub
mov
scas
ja
fwait
pop
das
cmp
ljmp
cmpsb
das
push
popl
test
jle
push
pop
push
cs
nop
addb
movsb
sbb
mov
mov
rolb
or
push
inc
mov
adc
xor
out
sbb
inc
jmp
jae
xor
sub
icebp
push
cmp
lods
and
lret
pop
pop
orl
lret
jmp
inc
movl
int3
insb
popf
cmc
xor
cmp
fstl
sbb
data16
jns
sub
xor
jae
lret
add
push
es
jl
add
test
call
add
stos
pusha
sti
fadd
aaa
stos
stos
mov
dec
fsubrp
daa
dec
dec
and
sbb
cld
aas
decb
push
insb
loop
dec
testl
inc
fdivl
in
xor
mov
inc
sarl
sbb
addr16
repz
cltd
jbe
hlt
mov
mov
sahf
jecxz
xchg
mov
stos
out
xor
movsl
cmpsb
push
iret
mov
lret
mov
push
cmp
and
mov
into
fisttpl
cmp
push
mov
sub
cmp
je
cmp
push
daa
stos
sbb
pop
sbb
pop
xchg
test
xchg
je
sbb
pop
add
inc
popa
pop
fidivs
mov
lea
mov
add
jecxz
push
xchg
or
jo
push
add
mov
sbb
fstpl
mov
mov
dec
xchg
mov
jo
gs
popa
data16
jbe
mov
hlt
mov
xor
pop
mov
fdivs
and
or
lahf
into
clc
iret
jnp
jmp
sub
cmp
ret
and
ja
and
inc
aad
add
jbe
push
cmpb
iret
std
adc
cmc
in
jp
xor
mov
mov
cmp
mov
das
movsb
insb
mov
ds
js
decb
cs
add
movsb
sarl
jb
cmp
arpl
scas
mov
enter
pop
outsb
adcl
or
imul
rcr
pusha
hlt
enter
mov
sbb
test
ret
adc
sub
movl
shl
stos
adc
inc
arpl
cltd
repnz
xor
repz
into
xchg
xor
cwtl
js
jbe
mov
pop
push
or
dec
sub
std
sbb
xor
arpl
pop
cmp
loop
xchg
jnp
dec
mov
mov
mov
jmp
sti
add
xor
and
sarb
ret
sbb
imul
mov
mov
jmp
sti
add
xor
and
rorb
mov
sbb
sti
xchg
jnp
dec
mov
mov
jnp
fwait
jmp
jmp
lret
adc
and
shlb
push
repnz
imul
mov
and
adc
xor
and
ret
adc
mov
xlat
jne
test
bound
adc
in
cmc
ret
adc
addb
mov
test
push
movsl
jb
add
adc
and
rclb
addb
mov
sub
pop
mov
xorb
xchg
pop
cmc
mov
andb
mov
mov
mov
mov
add
in
jb
dec
push
outsb
xchg
pop
inc
jg
test
push
stos
test
insl
jl
out
movsb
idivl
std
mov
cmp
mov
movsb
cmp
pop
sub
jp
fmul
addl
cmp
sbb
les
jl
adc
xchg
xchg
jmp
adcb
fimull
out
pop
push
in
scas
jp
and
xor
in
ljmp
cltd
inc
mov
jns
ret
sti
jne
aad
sub
sbb
js
xchg
ljmp
xor
pop
adc
xchg
adc
cmp
rclb
adc
icebp
pop
hlt
pushf
add
repnz
mov
test
bound
adc
and
xor
dec
xchg
pop
out
sub
push
sub
and
add
push
rep
jnp
out
mov
add
xchg
inc
les
mov
daa
std
push
loopne
les
fisubl
inc
mov
stos
dec
mov
mov
push
addb
mov
test
bound
adc
and
xor
ret
adc
addb
mov
test
bound
adc
and
xor
ret
pop
pop
xchg
jb
mov
jmp
sub
lret
lock
jo
mov
xor
push
popa
inc
loope
cmp
add
dec
sub
gs
lods
iret
inc
test
int3
pop
mov
pop
xor
pusha
fsts
mov
push
gs
xor
xor
idiv
imul
dec
adc
push
xchg
mov
cmp
push
mov
xor
in
push
ja
mov
sub
xor
stos
shl
adc
sub
or
add
dec
pop
xchg
or
clc
movsl
mov
shll
pop
mov
sbb
dec
aam
xlat
cmp
cli
and
inc
sbb
jns
pop
insl
insl
or
rcl
add
jge
dec
pop
sbb
icebp
sbb
add
std
hlt
xor
fldl
movsb
mov
add
mov
stos
xchg
loope
out
nop
or
sub
enter
les
adc
fbld
cmc
loope
cmpsb
or
fdivrl
aad
cmpsl
out
pusha
stos
cli
das
inc
aaa
pop
shlb
cwtl
push
sub
xchg
sti
dec
scas
xor
rorb
cmpsb
scas
pop
decb
xchg
mov
lret
pop
sti
lcall
repz
push
push
mov
sahf
mov
pushf
mov
test
lret
jge
xchg
or
sub
lods
leave
jne
ds
ret
loop
pop
sub
stos
xor
fcmovu
sub
icebp
push
xor
jecxz
call
daa
shl
and
inc
adc
pop
sbb
into
movsl
push
xchg
jbe
movsb
pop
js
jecxz
popl
call
jbe
jno
jae
insb
ret
aaa
mov
lret
iret
popf
pop
adc
sub
pop
dec
jnp
nop
inc
insb
pop
pushf
mov
call
and
push
pop
and
loop
loope
leave
enter
add
sbb
sarb
xchg
or
stc
test
lcall
adc
scas
jg
sbb
mov
in
mov
stos
stc
insl
loope
call
adc
or
mov
ss
inc
and
jmp
ds
push
dec
push
mov
in
xchg
aam
add
paddsb
pusha
mov
fdivl
lock
sbb
dec
loope
loope
mov
mov
add
sub
or
or
inc
xor
divl
lds
xor
push
and
lcall
enter
rcll
test
sbb
mov
and
mov
cmp
mov
or
stc
xor
adc
stos
lret
mov
pop
mov
pop
pop
mov
outsl
sar
pop
popf
bound
mov
mov
jp
lock
and
fcoml
std
popa
mov
sub
sbb
xor
push
repz
xchg
xor
or
xchg
xor
mov
loopne
std
mov
sbb
lcall
in
mov
xor
pushf
sub
xchg
test
arpl
lcall
out
cs
and
pushf
bound
add
xchg
ss
shll
jecxz
xor
out
jnp
movw
js
dec
data16
pop
insb
xor
xchg
xor
pop
pop
cmpsl
push
or
rorl
imul
xor
rcll
pop
je
push
add
jb
mov
jae
stc
push
sbb
dec
push
mov
in
dec
sbb
or
dec
outsb
adc
outsb
leave
fstl
mov
movsl
and
dec
imul
mov
sub
nop
int
in
and
sbb
and
jne
aad
aaa
in
orl
or
sarl
inc
cmc
mov
sub
jge
jmp
jg
add
cs
int3
sbb
pop
add
jmp
push
mov
jle
mov
jl
ret
out
sub
inc
icebp
sub
mov
rcl
or
cmp
pop
cmc
out
lds
imul
incb
inc
mov
leave
imul
fstl
lret
aas
cld
iret
pop
pop
pop
jae
dec
pusha
aas
push
push
nop
sub
aas
aas
repz
inc
xchg
jg
pop
push
ss
out
cmp
xor
daa
mov
jbe
cli
mov
cs
rcll
mov
jb
sbb
js
shrl
loope
cltd
inc
or
mov
cmc
in
cltd
hlt
fimuls
xor
cmp
pop
sbb
jge
add
jb
xchg
repz
xchg
mulb
in
cmpb
or
aas
pop
xor
push
push
testl
dec
pop
scas
jp
scas
test
or
arpl
pop
xor
mov
insb
mov
inc
push
mov
cs
std
dec
stos
in
inc
cmp
push
sbb
mov
xor
or
mov
shlb
cwtl
ret
and
jge
and
icebp
shrl
xchg
sahf
sbb
ljmp
ds
in
repz
pop
pusha
into
test
jl
sbb
xchg
and
push
js
xchg
dec
push
dec
and
mov
popa
mov
dec
add
push
mov
cmovae
pop
sahf
or
lea
movsb
dec
push
push
mov
push
aas
sbb
outsb
sbb
les
test
sti
scas
mov
xor
bound
mov
xorb
stc
nop
je
test
or
or
jo
jp
push
xchg
fxch
dec
cli
shll
fmuls
subb
add
int3
lahf
cwtl
jo
lea
xchg
add
push
aam
ds
or
sub
imul
pop
loop
cld
push
mov
cmp
add
adc
je
outsl
inc
jg
daa
or
aas
sahf
out
jle
mov
out
dec
dec
mov
ret
inc
jne
mov
shlb
xor
mov
fdiv
mov
mov
xchg
or
or
outsl
jbe
adc
mov
jp
sub
jbe
clc
cltd
lea
push
fidivrs
pop
xor
cwtl
or
xchg
fcmovne
adc
cmpb
ljmp
repnz
or
xchg
je
cmp
mov
insb
sbb
ret
addr16
xlat
aas
imul
sub
lcall
xor
scas
cmc
lods
adc
inc
sahf
sbb
mov
repnz
mov
mov
sub
sbb
jl
stos
pop
stos
add
mov
xchg
rcrl
mov
pop
pop
xchg
xchg
push
inc
push
cld
mov
test
xor
and
mov
rolb
shll
imul
out
cmc
aaa
push
mov
or
and
loop
sub
cmc
fcoml
aam
es
loop
push
sbb
or
popf
mov
ret
sbb
into
xchg
dec
stos
push
fldcw
test
push
aad
xor
outsl
inc
icebp
xorl
test
mov
out
loope
mov
cmp
push
pop
mov
mov
jb
xor
xor
popf
call
call
push
adc
enter
movsb
jle
es
jns
sbb
popf
mov
lahf
rcr
insl
lcall
and
ret
cmpsb
repz
sbb
stos
sub
rcll
sbb
add
xchg
daa
iret
xchg
mov
dec
mov
vmovq
arpl
popa
inc
and
and
sub
or
pop
imul
addl
stc
mov
test
insb
dec
push
mov
and
push
xor
repnz
shrb
or
inc
sbbb
mov
imul
xor
in
sub
rol
leave
arpl
adc
aaa
xchg
aaa
push
xchg
mov
pop
mov
mov
int3
xor
add
and
mov
sbb
inc
mov
pop
pop
mov
xchg
in
incb
jno
and
arpl
pop
repnz
int3
mov
orb
movsl
push
dec
out
mov
clc
aas
lret
cli
inc
inc
aad
dec
dec
sub
pusha
mov
cmp
sub
adc
inc
pop
roll
or
fdivrl
jle
jne
jnp
push
std
pop
dec
ljmp
adc
negl
ss
fdivp
cmp
lea
es
shrb
pop
xor
xor
dec
xor
push
in
lcall
imul
jmp
mov
fdivrp
fs
insl
arpl
xchg
ror
inc
jne
cmpsl
sbb
int
xor
gs
ret
cs
stos
and
bound
cmp
out
or
cwtl
inc
or
push
xorb
loop
popf
push
scas
inc
xchg
or
sub
and
cmpsb
cld
push
lock
push
into
adc
and
lods
jo
mov
fistpl
scas
rcl
push
mov
pop
mov
inc
ss
loopne
leave
fs
cmp
mov
sahf
cmpsb
mov
mov
lret
dec
cmp
push
cmp
jl
cli
xchg
popa
mov
or
test
clc
enter
scas
insb
pusha
ja
mov
aas
ljmp
lret
sbb
lret
and
adcb
insl
jns
xchg
cli
push
jae
mull
mov
lods
cs
xchg
sub
ss
popl
inc
std
jp
lods
test
mov
dec
mov
aaa
jg
gs
subl
call
pop
inc
mov
bound
scas
orb
dec
cltd
mov
jb
clc
ljmp
stos
enter
out
daa
pop
rcrl
xchg
test
inc
loopne
iret
ret
and
lret
and
jb
push
mov
out
xorb
dec
adc
jbe
and
test
popa
xor
jnp
pop
popf
rol
sbb
and
cld
cmp
cmp
imul
pusha
inc
inc
mov
mov
mov
sbb
outsl
aaa
mov
adc
lahf
dec
inc
sbb
outsb
testl
inc
or
aas
inc
dec
sbb
or
xchg
mov
test
pushf
push
mov
lea
pop
test
leave
jno
mov
enter
jb
or
outsl
flds
fimull
and
idivb
push
sbb
sbbb
mov
cmp
push
out
filds
psrad
lds
les
or
jb
das
and
push
mov
std
in
adc
loopne
cmp
pop
xchg
rorl
push
sub
popl
scas
mov
jmp
in
negl
shlb
and
stos
test
fsts
fists
sahf
int
stos
iret
xchg
fcmovu
fwait
pop
cmp
into
pop
cmp
sbb
mov
or
imul
sbb
push
out
and
add
outsb
add
push
adc
test
aaa
mull
cs
ret
push
lds
in
xchg
lcall
adc
xchg
add
jb
add
xchg
out
pop
cmp
mov
daa
adc
mov
ss
xor
jmp
or
pop
popa
iret
cli
aad
dec
adc
packssdw
sbb
arpl
push
mov
xchg
dec
sti
adc
jmp
lret
lret
aaa
pop
dec
lret
mov
mov
addr16
lds
xchg
ret
mov
mov
mov
pop
repz
ret
jg
cld
bound
sub
pop
xchg
fstps
dec
mov
xorb
sub
lret
mov
and
xchg
inc
push
xor
pop
push
xor
int3
nop
xor
pop
adc
daa
xor
sbb
xchg
or
push
pop
xchg
xor
movsl
outsl
or
imul
jp
mov
sbb
sub
sub
iret
push
jnp
js
mov
cmpsl
icebp
data16
mov
sti
cmp
subb
lahf
scas
xlat
sbb
jge
cmpl
mov
fisubl
sbb
imul
insb
mov
xor
int
movl
scas
sarb
inc
out
cmp
sub
call
or
pusha
cmp
xchg
sbb
sahf
loop
ret
movsb
mov
add
dec
adc
jmp
cmpsb
pop
pop
mov
ret
shrl
mov
jl
aam
inc
stos
add
ljmp
scas
out
sahf
in
mov
xchg
ss
jae
cmc
repz
arpl
shl
aam
inc
data16
mov
sub
call
pushf
adc
add
hlt
ficoms
xor
mov
pusha
ret
pop
pop
popl
lcall
pusha
lret
enter
dec
sub
push
pcmpeqd
and
mov
lahf
popa
mov
repz
ds
emms
sub
pop
mov
insb
fildl
push
gs
outsl
clc
mov
or
aad
xor
lcall
sub
fcmovb
xchg
out
out
cmp
sub
cs
int3
dec
test
mov
xchg
push
push
mov
mov
rcl
rcrl
mov
out
dec
sahf
ljmp
or
xor
addr16
lahf
mov
cmp
pop
xor
mov
mov
pop
pop
mov
push
lea
lret
pop
mov
scas
push
cs
or
push
out
mov
sub
fnsave
leave
mov
out
sbb
and
pusha
pop
jo
pop
gs
inc
scas
lret
mov
cmp
iret
addl
or
stos
arpl
cwtl
scas
and
std
sub
pop
mov
jo
ja
imul
rcrb
push
es
icebp
divl
jg
lcall
rcrl
cld
sbb
and
mov
mov
cli
enter
sbb
or
adc
jns
insb
mov
sbb
jb
push
ret
sub
push
mov
mov
paddq
cmp
inc
in
sub
pop
cwtl
jne
push
mov
shll
and
jp
push
sahf
fwait
and
aam
out
fcompl
imul
jo
lret
mov
inc
cmpsb
sub
push
out
mov
jbe
or
jns
int
sub
mov
fmull
cmpsl
jbe
sub
repnz
int
movsl
push
push
imul
add
lret
dec
lret
loop
adc
fdivs
in
fwait
push
cmp
fsubrl
sub
pop
in
idivb
sbb
enter
lock
push
test
mov
add
mov
arpl
push
mov
and
in
data16
shlb
jmp
out
cmp
fdivr
inc
inc
and
xor
rcrb
and
push
cmp
cmc
mov
push
test
sbb
jb
inc
movsl
test
cmpb
pop
cmp
mov
inc
push
xchg
cmpsl
jae
xchg
or
mov
or
sarb
js
jmp
inc
lock
outsb
pop
mov
repnz
and
in
push
das
cwtl
and
xor
jb
test
or
add
xchg
stos
mov
xchg
pop
dec
sub
out
int3
das
lcall
pop
cmp
xor
rolb
stos
pop
xchg
cmc
rep
fs
pop
mov
jecxz
pop
sarb
aam
mov
inc
xor
stc
xchg
or
inc
xor
sbb
xor
adc
ret
test
sub
fxtract
js
out
cld
cmpsb
add
pushf
or
dec
mov
movsb
pop
fcmovnbe
frstor
cmp
insb
stos
lock
cs
dec
or
xor
enter
jl
pusha
mov
push
sub
adc
call
call
or
mov
lock
mov
test
add
xchg
sbb
inc
and
xchg
cs
cmpsl
cli
ret
xlat
aad
jae
ja
loop
mov
scas
push
and
int
sub
mov
add
addr16
mov
and
push
pop
scas
and
xor
dec
in
lds
lock
jb
push
fs
popf
mov
popf
sti
mov
inc
and
es
add
sub
sub
je
cmp
add
mov
push
xchg
xchg
aam
jnp
aad
shrl
or
bound
pop
popf
push
ljmp
ret
popf
movsl
fnstenv
scas
and
inc
xorl
jb
fidivs
mov
lea
movsl
lahf
adc
je
mov
in
adc
sub
movsl
sub
cmp
or
dec
shlb
dec
icebp
and
insl
xor
test
mov
rcll
test
call
mov
pop
mov
add
loopne
jo
mov
pop
mov
xchg
or
cmp
sub
xchg
sbb
ljmp
push
out
and
xchg
insb
xor
jle
add
sub
pop
outsb
add
in
pop
std
jg
lds
adc
cmpsb
clc
lea
cmpsb
movsb
cmc
lods
cld
mov
inc
idivl
clc
loope
cmc
sub
adc
int
mov
fidivs
jnp
sub
jnp
stos
cli
mov
mov
insl
pushf
mov
pop
repnz
and
xor
xor
push
pop
lds
addr16
sti
cmpsl
and
iret
pop
je
dec
inc
mov
lock
sbb
loopne
sub
add
lahf
dec
lret
ret
push
sbb
repnz
not
sbb
sbb
push
js
roll
dec
push
mov
adc
gs
jg
clc
int3
insb
lret
mov
pusha
inc
xchg
cmpsl
mov
sti
rcl
mov
idiv
enter
push
lcall
push
pop
push
aam
mov
cld
in
push
repz
cltd
adc
mov
jmp
sbb
insw
pop
loop
adc
pop
lock
mov
push
fmul
jo
mov
add
xchg
push
or
jb
push
xor
sbb
xorl
sbb
repz
or
xor
subl
adc
pusha
stos
add
add
insl
mov
mov
push
mov
xchg
bound
pop
mov
jg
daa
lea
aad
in
enter
jmp
repz
xchg
mov
ror
ror
pop
dec
and
test
cli
rolb
inc
pusha
outsl
es
call
iret
andb
loopne
test
movsb
sub
aam
in
inc
cmp
mov
push
idiv
out
mov
sti
pop
les
adc
shll
jo
inc
or
pop
out
xor
aad
fimull
xchg
push
adc
push
int
fisubs
in
rclb
jb
lods
shl
pop
xor
and
adc
cli
push
popa
into
lods
sub
popa
lds
out
pop
add
popa
and
xorl
in
push
cmpsb
cmp
popf
mov
dec
jb
cmpsb
in
in
sub
push
cld
push
outsb
dec
add
mov
aad
push
arpl
arpl
add
mov
add
aad
cld
popf
aad
mov
hlt
aam
movlps
das
inc
mov
jbe
xchg
pop
imul
xlat
adc
sahf
xchg
adc
mov
cmpsb
xchg
std
cmp
sahf
mov
xchg
cmovno
ret
add
lahf
xchg
jns
jbe
sub
mov
and
int
sbb
inc
sub
sahf
loop
bound
push
jae
and
clc
in
nop
mov
loopne
lcall
aad
xor
std
mov
mov
popl
ja
out
jmp
sub
xchg
lods
add
mov
ret
jns
pop
imul
dec
mov
mov
dec
or
fbld
leave
jno
adc
es
fcompl
inc
stc
cs
xchg
sti
push
fcomps
lret
mov
add
sbb
inc
and
jg
cmp
xchg
shlb
arpl
arpl
push
loopne
mov
ror
and
lods
ret
cwtl
sbb
popf
add
jmp
js
mov
cmovle
xchg
fwait
pop
decb
gs
mov
jle
push
out
cmp
push
pushf
pusha
and
nop
xchg
inc
pop
cmp
sbbb
mov
cmp
jo
jns
out
popf
loopne
fucomip
call
sbb
jmp
fcoms
clc
adc
push
cmp
sbb
imulb
cmp
in
mov
lea
data16
sti
push
daa
mov
jg
lret
mov
or
adc
sub
data16
mov
xchg
jae
mov
cltd
and
sbb
sub
push
jecxz
nop
cmp
imul
mov
pop
xchg
mov
outsl
xor
cmp
loopne
inc
xchg
push
ds
push
ret
add
mov
outsl
mov
pusha
test
scas
sub
out
xorl
and
xchg
jmp
jg
dec
gs
add
pop
or
jl
pushf
mov
pushf
push
sbb
jecxz
mov
ret
out
sbb
and
push
cld
aam
aad
add
xchg
push
mov
stc
pop
pop
lret
arpl
or
hlt
inc
mov
inc
inc
inc
fcomps
gs
sub
cltd
popf
je
sub
cmpl
mov
push
push
dec
int3
push
imul
fbld
xchg
push
mov
test
bound
adc
and
xor
ret
adc
addb
mov
test
bound
adc
and
xor
ret
xchg
loop
repnz
mov
add
jb
add
adc
and
xor
ret
adc
addb
mov
test
enter
jne
lcall
xchg
test
cwtl
mov
movsb
icebp
orb
cmp
add
xor
and
push
push
fs
mov
movsb
clc
aam
fdiv
enter
sub
xor
and
push
imul
test
cwtl
mov
movsb
clc
aam
fdiv
enter
or
inc
insl
and
push
sbb
sbb
and
leave
lock
shl
dec
notl
mov
pop
lock
push
adc
jae
push
jecxz
mov
shrd
les
jne
clc
sub
cmp
and
test
mull
push
je
cwtl
inc
add
enter
dec
adc
xchg
gs
cmp
in
push
jecxz
fisttpl
popl
nop
aad
aam
sbb
movsl
adc
lret
sub
push
inc
jmp
sub
pop
pop
aam
cmp
inc
mov
push
and
sub
xor
adc
mov
pop
arpl
jl
fsubs
jmp
adc
pushf
stos
cmp
jnp
test
cwtl
mov
movsb
clc
aam
fdiv
enter
sub
xor
and
push
push
and
stc
lret
push
fdivp
into
loop
mov
dec
xchg
dec
js
insl
imul
cmp
cmp
into
aad
into
sti
mov
repz
mov
ljmp
dec
push
cmp
or
les
sarb
hlt
enter
sub
xor
and
push
push
fs
mov
movsb
clc
aam
fdiv
enter
sub
xor
and
push
push
fs
inc
divl
adc
rorb
or
bound
pop
push
fs
mov
les
mov
mov
push
jge
out
lahf
xor
fldt
out
inc
fnsave
out
stos
jp
ret
push
lahf
pop
sub
cmp
mov
dec
cmp
aam
xchg
call
sub
cmp
xchg
xlat
dec
cmc
cli
ret
push
outsl
leave
call
dec
and
in
pop
xchg
ja
pop
add
mov
iret
fld
addr16
add
fildl
mov
xchg
lahf
test
or
inc
insl
pop
lret
adc
lret
sbb
ret
popa
sbbl
adc
push
shll
test
and
cmp
jno
loopne,pn
push
xchg
rcrb
loop
fsts
push
add
shlb
cmp
test
xchg
mull
dec
pushf
fwait
int
test
arpl
mov
stos
dec
clc
mov
mov
addr16
push
cmp
push
scas
push
pushl
in
cmp
movsb
pop
mov
mov
inc
xchg
jnp
fstpt
pop
jge
movsl
adc
in
mov
mov
add
mov
xlat
int
jnp
mov
in
pop
shl
xor
pusha
dec
sbb
out
inc
xor
mov
cmp
pop
mov
cli
cmpl
pop
jbe
push
dec
xchg
mov
test
sub
cld
sti
or
fidivrs
mov
cmp
js
lahf
lahf
int
outsb
mov
movsl
mov
mov
cmc
jno
push
std
mov
cld
fisubrl
push
mov
jo
mov
idivl
addr16
out
and
rcr
adc
cmc
aaa
in
inc
mov
shrl
sub
pop
ss
insl
stc
imul
js
pushf
jns
iret
repz
add
std
xchg
movsb
inc
aam
idivb
lods
bound
mov
aaa
stos
bound
jp
cmpsb
ljmp
insl
mov
dec
test
leave
mov
sbb
daa
jno
xchg
push
add
imul
je
cltd
push
js
push
and
loope
fistps
xor
nop
cmp
inc
std
jae
mov
jp
pop
cmp
scas
mov
in
xchg
scas
and
andl
dec
xchg
inc
mov
lret
pop
in
xchg
lahf
loop
push
sbb
outsb
iret
xchg
shll
imul
ss
stc
sub
fwait
mov
cmc
notb
sar
shlb
test
mov
mov
add
ja
mov
lahf
in
pushf
push
std
pop
or
lcall
and
mov
loop
addl
push
jge
xchg
lods
lock
aas
mov
sub
adc
push
in
mov
xor
push
sbb
loope
pop
xchg
mov
aad
ret
mov
loop
mov
inc
adc
adc
or
lea
cmp
push
jge
push
sar
arpl
or
fcmove
int3
in
dec
adc
subb
push
cld
nop
mov
push
jne
sbb
pop
jl
int3
jp
jle
scas
mov
loopne
mov
cltd
fisttpll
mov
cmp
popa
stc
sahf
cltd
inc
call
inc
daa
jmp
cmp
lahf
pop
cmp
add
add
inc
xor
sarb
lock
cmpl
cmp
scas
cmp
loopne
rcrw
mov
inc
adc
aas
insb
and
test
xor
push
clc
test
hlt
std
lds
sub
or
sbb
mov
push
cmp
test
mov
cwtl
in
pop
adc
shr
add
lahf
movsb
mov
cs
inc
loope
pop
fcompl
jne
pop
inc
sbb
int3
push
popf
js
pop
sub
or
sarl
mov
lea
xor
nop
out
mov
leave
cs
aaa
xchg
lods
movsl
arpl
stos
fisttps
mov
mov
test
mov
inc
test
sub
aad
inc
in
repnz
hlt
jb
stos
and
ds
push
jp
xor
arpl
xor
ljmp
addb
fs
sub
and
xchg
pushl
mov
mov
xchg
inc
fldl
xchg
jb
jle
dec
ja
sbb
fcoms
lahf
push
mov
push
adc
xchg
loopne
outsl
fisttpl
adcb
test
aas
cmc
icebp
add
lock
bound
movsb
cli
pop
aam
outsb
pop
stos
mov
test
cltd
popf
mov
dec
xrelease
add
cmp
call
xchg
push
jecxz
xor
fstpt
sub
jb
jb
push
sbb
push
lret
lods
in
ljmp
enter
xor
cmp
adc
sbb
or
or
xchg
xchg
jbe
pop
add
mov
in
fcmove
sahf
in
jg
lahf
mov
cmpsl
dec
pushf
push
xchg
cwtl
pop
pop
shl
and
dec
out
sbb
mov
and
push
xchg
popf
cmp
push
or
push
or
add
arpl
and
xor
out
lods
je
mov
sub
popf
cld
outsl
fmull
pop
in
idiv
mov
jo
pusha
cmpsl
mov
dec
test
cmp
repz
aas
les
fwait
stc
loope
cmpsl
xchg
shlb
ficoml
xor
out
incb
xor
lock
ss
sub
inc
adc
cmpsb
jnp
dec
mov
data16
mov
mov
mul
push
dec
sbb
loopne
inc
movsl
pop
and
sbb
das
cmp
lahf
test
cmp
psubsb
outsb
adcl
push
sbb
push
sub
repnz
test
rcll
push
mov
mov
mov
loope
subl
jne
adc
movsl
aaa
mov
push
xchg
int3
loope
mov
stc
pop
movsb
cmpsl
jecxz
icebp
jecxz
lea
mov
dec
insl
and
mov
mov
mov
mov
pop
ficoms
mov
jecxz
push
xor
mov
aaa
sahf
mov
mov
imul
add
ss
das
notb
sub
mov
xlat
and
bound
xlat
jno
int3
adc
xor
mov
adc
sub
mov
shrl
cltd
mov
cmp
popf
jmp
inc
or
rcll
loope
pop
jne
ss
flds
in
pop
imul
pop
inc
aaa
xor
movsb
mov
movsl
xor
sbbl
pop
push
out
sahf
jbe
repz
xchg
cmp
xorl
insl
jae
pop
aaa
bound
dec
push
rcrl
popa
ror
rolb
jne
push
mov
mov
fildl
aad
mov
mov
insb
mov
add
pusha
loopne
cld
stos
clc
sbb
dec
movsb
dec
sub
cmp
and
or
imul
lahf
lods
xchg
xor
or
or
jmp
ret
add
jo
lcall
or
xor
movl
mov
inc
mov
ds
or
mov
sahf
je
jne
jo
cli
ss
xor
add
ds
mov
or
push
je
and
mov
cs
fisubrs
lods
xchg
mov
and
xchg
repnz
cli
and
imul
test
mov
mov
pop
stos
push
xor
lods
lahf
cmp
mov
push
inc
jae
pop
mov
stc
mov
lret
jle
aad
insl
sub
add
pop
push
adc
cmp
adc
daa
fs
jp
mov
mov
sbbb
aam
add
pop
popa
hlt
inc
cmpsb
clc
sbb
or
jg
and
mov
mov
jae
leave
jb
ljmp
gs
push
gs
inc
fldcw
out
leave
dec
xor
dec
lret
int
jne
in
in
jnp
clc
cmp
sbb
dec
fs
das
stc
push
movsb
jnp
cmpsb
cmp
inc
and
fldt
xchg
pusha
int
mov
int
mov
pop
int3
pop
mov
je
loope
imul
out
push
xchg
inc
aaa
ds
fadds
dec
xchg
mov
cli
test
adc
in
aaa
or
pusha
jl
push
add
xchg
add
mov
loope
xor
rorb
fidivl
mov
lock
mov
pop
mov
lret
repz
call
pop
ljmp
mov
inc
fldcw
adc
adcl
loope
add
mov
inc
cmp
out
sub
or
inc
jnp
jg
sub
mov
loopne
mov
hlt
push
pop
nop
inc
out
stos
xchg
hlt
xor
dec
sbb
pusha
adc
inc
lahf
hlt
cmpsl
jle
add
out
call
lret
lahf
xor
daa
fbld
ffree
aad
add
mov
movsl
repz
mov
mov
mov
mov
hlt
in
dec
les
outsl
sub
mov
jae,pt
fisttps
push
fs
test
dec
pop
jg
lods
pop
xor
bound
iret
lea
imul
hlt
mov
call
test
into
mov
flds
sub
mov
cmp
mov
imul
pop
jg
cmp
mov
or
out
sti
dec
daa
outsb
cmp
rorl
jne
and
mov
outsb
and
aam
cmpsl
je
push
jmp
shlb
xchg
repnz
inc
dec
cmp
test
jp
pop
ljmp
bnd
sub
and
fistpl
adc
and
dec
mov
xchg
std
cmp
sbb
sbb
mov
gs
dec
mov
mov
push
outsb
movsb
mov
cmpsl
sbb
out
xchg
arpl
testb
add
sbb
rol
cmpsb
mov
push
or
xchg
jns
popf
or
cmpsb
imul
dec
pop
pop
fcmovbe
out
out
jecxz
pop
outsb
dec
pop
into
iret
mov
xor
and
in
dec
iret
and
leave
adc
mov
lods
fmul
mov
lds
imul
add
pop
sti
add
xchg
add
jg
cs
jbe
out
ljmp
movsb
fisubl
ret
mov
mov
popl
imul
out
in
mov
mov
mov
enter
cltd
cli
cld
cmp
icebp
mov
mov
mov
mov
add
ss
nop
cmp
jp
push
mov
and
jp
sub
insl
pop
movsl
or
fcomps
adc
leave
cli
pop
push
xor
add
xchg
ret
scas
xchg
push
inc
pusha
sbb
dec
stos
xchg
push
xchg
push
testl
inc
das
sti
pusha
lods
and
lret
es
lret
xchg
xchg
push
out
fmull
push
mov
andb
in
lret
xchg
lahf
sti
mov
inc
xchg
fildll
jmp
add
fldenv
add
out
data16
mov
and
subl
dec
mov
pusha
mov
sarl
or
push
xor
lcall
pusha
fistl
outsb
and
mov
shll
pop
sbb
js
in
mov
in
and
jbe
mov
fsubs
lcall
test
push
vsubss
shl
jecxz
jge
imul
outsb
cmpsb
fdivrs
pushf
inc
fcoms
jle
mov
ds
sbb
out
adc
shl
mov
mov
push
xchg
loopne
das
cmp
dec
dec
or
fsubrl
push
je
adc
or
or
push
jo
cmpb
push
add
imul
mov
fstl
and
pop
into
int
shlb
pop
imul
sti
mov
data16
sub
inc
in
xor
push
aaa
outsb
je
out
add
pop
cld
cmc
dec
sbb
sti
lods
adc
cmp
repz
pop
addr16
push
mov
js
inc
mov
fcompl
subl
lret
mov
fmuls
push
ljmp
sub
popl
push
mov
pop
jbe
lods
dec
insl
mov
xchg
rcrb
pop
enter
subb
and
adc
mov
jge
insl
into
cmp
jmp
xor
sbb
popa
shlb
fsubl
mov
xchg
mov
fildll
in
imull
outsl
sbbb
jecxz
imul
test
xor
mov
xchg
mov
and
sub
pop
mov
testb
negb
cmpsl
dec
adc
xchg
pop
jecxz
ljmp
xchg
sub
add
dec
and
in
fs
fs
lahf
add
imul
call
push
mov
inc
lods
lods
iret
add
xlat
mov
pop
sub
xchg
addr16
iret
sub
xor
out
inc
dec
sti
das
cld
add
xor
sub
das
mov
mov
jo
nop
fists
cwtl
addr16
popa
jp
hlt
add
idivb
stos
int
mov
lock
sbb
mov
nop
jnp
dec
mov
inc
ficompl
ficompl
fs
mov
xor
movsb
mov
mov
sti
loope
pop
addr16
cmp
lahf
xchg
rcll
inc
aas
inc
xor
adc
test
mov
ds
add
enter
cmc
jmp
das
jle
xchg
std
repnz
mov
mov
lea
mov
insb
add
rclb
jl
arpl
cwtl
or
pop
data16
std
add
jl
mov
call
mov
shrl
rcrl
sti
mov
mov
push
xor
hlt
test
dec
addr16
sub
adc
nop
add
shlb
iret
nop
imul
ja
lods
dec
dec
xchg
push
jno
jae
mov
mov
shlw
int3
insb
push
adc
das
in
sub
out
fs
xchg
clc
dec
pop
aam
icebp
and
arpl
sub
xchg
dec
xchg
mov
in
mov
aaa
inc
lahf
jb
or
inc
in
inc
jle
push
or
jmp
or
sti
cmp
mov
imull
pop
daa
inc
cmc
outsl
xchg
inc
inc
jo
pushw
mov
insl
pop
popf
xchg
mov
stos
cld
loop
stc
std
adc
in
jb
lods
leave
lahf
in
jl
test
sub
cli
das
out
jne
iret
aam
or
lret
push
push
lods
or
bound
fists
or
mov
rcrl
imul
push
or
es
pop
fisubs
repz
test
mov
comiss
xchg
dec
stos
jne
dec
pop
scas
push
mov
out
xchg
stos
lds
sub
mov
addl
jg
sti
cltd
imul
cmc
imul
ret
adc
cmp
outsb
fwait
push
sahf
xchg
xchg
push
push
xor
fs
sub
test
lret
loop
aad
lahf
popl
cwtl
out
add
adc
adc
inc
inc
inc
sbbb
testb
push
repz
mov
sub
pusha
iret
daa
cld
pop
cmp
mov
call
inc
jl
mov
mov
mov
push
xor
ljmp
jns
ja
lock
in
sbbl
in
push
mov
test
data16
dec
dec
leave
jmp
dec
aam
pop
push
je
sbb
dec
lea
call
scas
push
shlb
push
mov
lods
mov
cli
in
cwtl
in
push
jecxz
outsl
xor
sbb
pop
sub
dec
std
sbb
adc
mov
loopne
jecxz
rol
inc
int3
jmp
stc
ljmp
outsl
daa
add
aas
adc
cli
icebp
mov
mov
jp
xchg
push
data16
push
fdivrl
roll
outsl
cwtl
insb
or
jns
lret
enter
test
out
or
mov
call
sbb
mov
adc
pop
mov
das
inc
mov
dec
add
or
push
add
jecxz
inc
adc
cmpsb
adc
aas
push
daa
shl
lods
cmp
mov
inc
ljmp
in
mov
mov
push
movsb
mov
leave
jmp
arpl
jnp
xchg
lods
and
out
xlat
insl
repz
and
xchg
cmpb
std
std
adc
add
je
cli
or
dec
push
std
lret
rorl
mov
test
cmp
in
and
dec
loop
inc
popf
jg,pt
lahf
jb
mov
pop
mov
je
ja
pop
pop
mov
ficoms
lcall
cltd
popf
out
test
loopne
test
mov
test
cmpsb
into
cmp
jnp
pop
imul
sbb
iret
jmp
fimuls
insl
and
scas
adc
xchg
outsb
fsubr
xchg
pop
out
sbb
test
fmuls
lock
movsb
xchg
sbb
imul
imul
jle
mov
gs
xlat
aam
mov
cmpsb
jb
adc
es
arpl
mov
out
psubb
adc
arpl
or
sti
outsb
xchg
cmc
inc
adc
jns
stos
sbbl
ljmp
adc
loopne
jnp
dec
mov
pop
lret
sahf
adc
sub
jge
shl
pop
xchg
insl
jb
mov
inc
xorb
mov
popf
push
ss
into
outsb
xchg
loop
cmp
push
imul
jg
or
jmp
mov
cli
mov
popf
inc
cmp
or
push
pop
sarb
dec
hlt
ds
icebp
xchg
pop
jno
xchg
xchg
out
dec
and
jl
jno
sbb
sub
enter
pop
xchg
lods
cld
xor
xor
mull
adc
jbe
clc
xorl
cmp
dec
inc
mov
xor
sub
adc
sbb
enter
cmp
lahf
lret
rorb
sub
loop
mov
push
inc
fdivl
flds
insb
in
push
test
cmc
mov
movsl
add
lahf
mov
ss
mov
jo
in
adc
aad
icebp
fbstp
push
push
inc
pop
lods
jge
cmp
xor
outsb
pop
jle
sbb
mov
shr
push
xor
int3
out
adc
mov
das
add
add
push
adc
pop
out
or
adc
scas
ljmp
int3
jae
and
or
push
and
rcrl
js
not
and
sahf
or
adc
inc
add
cmc
mov
mov
or
jl
and
mov
mov
and
popf
out
in
arpl
add
dec
popf
mov
adc
pop
sbb
test
xchg
push
push
jne
addb
roll
ja
scas
cmp
xor
loop
add
je
push
shl
jbe
xlat
jl
out
out
mov
inc
fiaddl
test
mov
stc
sub
xchg
fldt
popf
dec
faddp
pop
ds
xchg
int3
testl
lods
lea
xchg
lock
and
arpl
xchg
int
mov
jge
cmp
mov
aas
mov
fs
cwtl
insb
ret
push
inc
enter
and
iret
stos
inc
cmp
cmp
fisttpll
jg
leave
int
xchg
add
lcall
cltd
ss
je
mov
or
sahf
mov
jge
sbb
lock
daa
lret
loope
sarb
push
daa
lods
push
ret
add
and
sub
arpl
mov
and
xchg
jp
adc
mov
or
popa
in
xor
mov
dec
test
int
push
xchg
sub
cmp
or
ds
pusha
test
lock
inc
mov
js
and
xchg
aad
clc
fldenv
ja
gs
rcrl
loop
and
das
inc
call
sti
mov
xchg
fucomp
push
gs
dec
ljmp
and
or
adc
pop
adc
and
adc
les
sbb
insb
pop
bound
inc
jmp
mov
icebp
fildl
adc
ds
addr16
loop
cmp
test
sbb
inc
sub
leave
mov
ljmp
inc
add
jecxz
adc
data16
inc
add
cmp
xor
out
cmp
push
add
inc
pop
ja
cs
daa
mov
mov
mov
mov
fisubl
loope
mov
pop
and
sbb
stos
xchg
fcmove
inc
sbb
flds
jg
or
cmc
leave
aam
inc
in
int
mov
mov
mov
xchg
cli
xchg
push
adc
fwait
sbb
xchg
mov
pusha
lret
movsl
and
jno
fsubrl
mov
jmp
or
addl
in
nop
xor
push
in
lret
add
pop
lods
xchg
test
lret
sbb
adc
les
mov
test
aam
fdiv
enter
sub
xor
and
push
push
fs
mov
movsb
clc
aam
fdiv
enter
sub
xor
and
push
push
fs
mov
movsl
clc
aam
fdiv
enter
sub
js
push
fs
mov
mov
pop
je
sbb
jmp
scas
mov
or
fsub
mov
push
xor
jae
arpl
fidivrs
jno
pop
jb
inc
sar
ret
xchg
loop
xchg
repnz
shlb
and
arpl
adc
bound
push
and
shll
jecxz
push
sahf
and
shlb
and
arpl
adc
bound
push
and
mov
sbbl
mov
daa
imul
add
push
mov
leave
mov
or
jp
and
xlat
mov
repnz
cmpsl
popf
sbb
stos
das
dec
pushf
xchg
jb
out
pop
fimuls
movb
xchg
insb
repnz
shrb
xchg
add
dec
das
je
push
add
jp
loop
mov
xchg
das
repz
and
ret
out
loop
push
mov
push
sbb
arpl
rcll
arpl
dec
inc
pop
or
bnd
sbb
fcoms
jb
inc
pushf
jmp
cmp
cmp
out
jbe
sahf
xchg
mov
mov
scas
mov
call
stos
mov
mov
lret
xchg
ret
repnz
mov
shlb
xlat
lahf
xor
jae
arpl
adc
bound
push
and
mov
mov
xchg
repnz
shlb
arpl
adc
add
pop
jno
push
adc
push
ror
cmpsb
mov
xchg
mov
xchg
stos
in
ss
es
push
ja
add
push
inc
cs
cmp
mov
xchg
fcomi
shl
xchg
pushf
in
jecxz
test
lods
ss
push
pusha
packuswb
add
push
and
mov
mov
xchg
repnz
shlb
and
arpl
adc
bound
push
and
mov
mov
xchg
repnz
shlb
dec
out
decl
push
add
movsb
pop
repnz
rcr
out
sub
pusha
arpl
xor
sti
in
cmp
cmpsl
mov
iret
sbbl
and
mov
fmull
fwait
adc
mov
cmp
test
incb
adc
pop
jecxz
or
jae
and
cli
in
sbbl
lods
jge
xchg
dec
cmp
and
dec
insl
jmp
out
sub
and
add
dec
pop
out
loope
loop
mov
in
cs
lret
fwait
repnz
jae
jbe
test
fs
push
stc
pop
lds
icebp
xchg
xchg
cmp
xchg
and
ds
inc
pop
mov
and
push
sbbl
mov
rorl
adc
test
jno
xlat
into
pusha
out
cmp
and
out
mov
jmp
cld
dec
ret
xor
shrb
pop
push
leave
std
dec
jno
mov
je
jo
cltd
bound
mov
sub
insb
lods
adc
data16
fcompl
and
jmp
scas
or
mov
mov
jecxz
fcmovu
and
pop
cld
lahf
call
inc
or
cmc
push
daa
scas
lods
mov
leave
jecxz
mov
cwtl
lods
and
out
std
xchg
popf
loop
mov
scas
xchg
dec
xlat
mov
mov
jmp
sub
int3
jb
scas
xor
cmpb
mov
xor
pop
test
cmpl
mov
test
jo
mov
mov
push
inc
fimull
pushf
popf
test
xor
adc
add
cwtl
adc
cli
fmuls
sbb
cmp
xlat
add
xchg
sti
in
test
sub
cmp
dec
ds
push
jbe
inc
orb
mov
pop
cmpsb
cli
repz
lods
int
scas
insl
xchg
fs
fdivp
lds
aas
ret
pop
cmp
xchg
stos
and
push
add
sub
popa
cltd
sbb
pop
fdivl
push
fs
push
mov
in
fcomip
cmp
sbb
adc
push
pop
xchg
shrb
mov
sbb
sbbb
int3
mov
adc
movsl
imul
fdivl
mov
pop
insl
mov
mov
cmp
sbb
fstps
es
loop
int
dec
loopne
icebp
insl
mov
popf
inc
rol
call
jb
inc
addr16
test
xor
pushf
outsl
jl
push
pop
dec
push
mov
xor
xchg
rcrl
imul
mov
loopne
inc
mov
cltd
cmp
sub
lret
movsb
sub
subl
adc
loope
pushf
xor
stc
mov
rorb
bound
jge
lret
imul
bound
fisubrl
cmpsb
cmp
test
repnz
or
xchg
inc
and
push
aas
shrb
sub
adc
adc
or
aaa
adc
hlt
adc
lret
leave
adc
out
mov
or
lcall
add
sub
cmc
aam
inc
pop
lods
sbb
xchg
popa
and
in
pop
sub
and
nop
test
jle
out
jno
pop
pop
jo
xor
inc
inc
dec
mov
push
lret
mull
fidivl
dec
xchg
lea
inc
mov
add
push
cmpsb
stos
xlat
jp
jl
aad
mov
insb
cwtl
imul
mov
push
sbb
cmp
int3
sbb
dec
out
out
inc
xchg
push
inc
in
loopne
pushf
mov
mov
aad
cmp
xchg
and
int3
lcall
out
add
lds
scas
xchg
inc
inc
mov
lret
inc
insl
movsb
in
loope
xor
inc
push
aam
pop
fld
xchg
xchg
cld
jmp
xchg
mov
dec
xor
jge
out
jbe
mov
jne
pop
cmp
test
insb
or
icebp
clc
int3
imul
jecxz
pushf
mov
inc
xchg
push
mov
push
int
xchg
sub
std
mov
dec
adc
dec
sub
daa
jno
fs
push
mov
es
outsb
or
fpatan
nop
test
bound
mov
testl
jge
or
scas
ret
jns
dec
jecxz
fisttpll
inc
scas
pop
xor
cmp
adc
cmp
inc
fwait
sbb
mov
mov
iret
popa
out
idivb
je
inc
xchg
mov
push
mov
fsts
xor
sub
pushl
call
pop
out
das
cmp
iret
mov
dec
sub
insb
push
mov
push
mov
push
inc
outsl
cltd
gs
jne
ret
add
inc
mov
loop
sbb
inc
std
out
ret
push
subl
add
cltd
sbb
push
inc
pop
sub
mov
sbb
or
mov
bnd
jbe
repz
fstl
cmovnp
fcomip
xchg
pop
xlat
adc
dec
cltd
in
xchg
notb
push
inc
cmp
adc
shrl
pop
sarb
stos
stc
std
out
xchg
cwtl
mov
inc
pslld
lret
popf
shl
dec
repnz
jp
mov
stc
dec
dec
outsl
pop
mov
frstor
adc
into
andb
inc
js
mov
fisubl
pushf
xchg
pop
or
clc
inc
data16
lret
adc
call
es
loope
lock
lds
mov
popf
cld
mov
mov
jne
jge
cmc
ret
lret
and
adc
cmp
daa
test
sbb
clc
and
ret
mov
rorb
jmp
add
lock
mov
loopne
jge
dec
mov
movsl
sub
cwtl
fldl
idivl
jecxz
fucomp
mov
jp
push
xor
bound
pop
cwtl
or
mov
aaa
insl
arpl
rcrl
ds
rcll
mov
popa
dec
xor
ficoms
insl
sbb
nopl
push
add
lods
sbb
cmc
push
outsb
mov
xchg
add
push
cld
pusha
xchg
popf
pop
pop
mov
jmp
cmp
sbb
mov
das
mov
bound
jns
in
pushf
test
cmp
pop
jl
pop
pop
xor
cmpsl
fimull
nop
inc
pushf
fiadds
jmp
loop
repz
xor
xchg
mov
insb
mov
ret
mov
lock
pop
mov
push
inc
icebp
insl
sub
daa
dec
stc
pop
loope
jp
pop
scas
les
xor
loopne
cld
cmp
leave
test
ror
mov
rcll
sahf
das
pop
ja
movsb
js
lods
pop
mov
sub
push
push
or
dec
push
mov
dec
stos
in
outsb
ror
jae
jno
sub
push
mov
adc
subl
dec
mov
ficompl
cwtl
cmp
mov
test
sarb
or
test
dec
jge
pop
aas
pushf
insl
fisubl
hlt
sub
or
sarb
flds
adc
adc
sub
cmc
cmp
insl
test
dec
jmp
mov
cs
lods
fldt
fwait
xchg
mov
xor
scas
cs
test
shll
out
jge
cmpsl
adc
xor
dec
push
and
sub
dec
je
ljmp
add
push
sti
inc
pop
jge
mov
cld
mull
mov
cmp
stos
push
cmp
inc
mov
clc
movsb
mov
mov
sub
dec
in
stc
mov
stc
sub
mov
mov
popa
jge
add
test
xchg
cmp
hlt
push
dec
push
xchg
test
les
xor
je
into
popa
sbbl
in
sbb
push
call
mov
enter
mov
mov
adc
dec
jb
xlat
ret
mov
test
adc
mov
add
faddl
adc
test
xor
mov
das
icebp
mov
nop
movsl
stos
notl
mov
sbb
daa
cmp
push
ds
push
pop
scas
fadds
fisubl
cld
lret
ficompl
sbb
push
jecxz
jg
cmpsl
adc
inc
cmc
adc
push
dec
mov
scas
jno,pn
cmp
je
je
int3
stos
lcall
outsb
and
mov
xor
sub
pop
movl
hlt
mov
outsl
push
inc
clc
daa
add
xchg
pop
in
ret
mov
dec
and
pop
xchg
mov
mov
hlt
mov
push
xor
popf
inc
pop
xchg
stos
jmp
xchg
cltd
inc
es
mov
jmp
or
int3
ret
iret
stos
aad
outsl
dec
xor
popf
repnz
divl
pop
inc
push
rolb
cmp
add
sbb
mov
xor
mov
ss
adc
jne
adcb
leave
cmp
cltd
popf
movsl
addr16
mov
out
rcr
test
iret
inc
in
pushf
sbbl
fstpt
std
shlb
cmpl
les
fucom
sub
insb
inc
lds
scas
xor
inc
pop
cmovle
gs
test
fwait
lcall
dec
add
mov
xchg
sbb
jae
sbb
sub
repz
xor
pop
mov
xchg
jmp
xchg
cli
ret
push
mov
bound
pop
xchg
cmp
loope
and
loop
mov
jbe
loope
imul
mov
jne
fstpl
pop
mov
mov
jns
mov
loop
push
les
stc
mov
jecxz
add
or
sahf
mov
in
ja
mov
dec
mov
push
jmp
jge
aam
sub
mov
inc
movsl
fisttpl
sbb
bnd
call
ret
test
in
sub
jns
sbb
mov
cmp
push
xchg
stos
hlt
pop
repz
in
es
fildl
ret
push
sub
outsb
cmp
stos
shrl
mov
dec
and
lahf
inc
es
mov
push
xor
in
leave
cmp
imul
and
rcrb
jmp
ds
xchg
jbe
adc
adc
inc
push
call
push
sbb
daa
mov
loope
mov
xsave
cmpl
repz
cmp
jmp
pop
xchg
aas
cmp
fildll
push
inc
jno
popf
into
jecxz
imul
pop
int3
jle
or
aam
add
mov
sub
and
in
pushf
fprem
pop
push
jae
mov
sub
sub
or
cmp
ss
int
or
xchg
sub
outsl
jbe
push
pop
sti
inc
and
outsl
arpl
lock
jge
fbstp
fcomps
mov
popf
sub
pop
out
out
mov
es
cs
cmc
insb
test
out
push
add
xor
arpl
mov
xor
nop
adc
cli
push
pusha
mov
push
repz
lds
mov
xchg
cmp
pop
pusha
xchg
push
mov
sub
aaa
mov
ss
cmp
loopne
jle
insl
inc
and
push
dec
nop
repz
ret
mov
daa
mov
nop
jnp
xor
add
pop
loop
mov
mov
mov
icebp
lods
in
nop
mov
pop
xor
call
sub
je
std
fistl
clc
sbb
cmp
notb
clc
in
addr16
daa
int
pusha
mov
push
lea
push
sub
addr16
cmp
das
adc
sbb
sub
dec
push
bound
loop
sti
pop
iret
jmp
lret
add
mov
jns
lods
aaa
xchg
jne
pop
sub
adc
sbb
push
in
fisttps
shlb
adc
cltd
jne
nop
push
mov
inc
sub
cmp
shlb
sbb
pop
iret
cmpsb
inc
xchg
js
pusha
push
in
mov
pop
cmpb
pop
inc
pusha
aaa
dec
and
xor
stc
xchg
xchg
and
sub
sub
int
ret
xor
sti
mov
xor
test
popl
cmp
test
push
call
push
aam
jp
je
push
ret
movsb
fxch
pop
leave
sbbl
adc
adc
fldt
pop
mov
mov
push
sub
in
push
cwtl
push
xor
clc
jecxz
push
movsb
sti
bound
dec
inc
out
aam
lods
das
orb
sar
and
fidivrl
jmp
cli
out
push
insb
fimull
repz
add
aas
push
scas
lea
adc
fidivrs
sbb
popa
pop
jp
shr
cmp
or
faddl
fsubl
xor
les
xchg
and
daa
lods
inc
cmpsb
imul
and
dec
test
mov
daa
dec
mov
push
mov
ret
xor
jp
imul
add
or
adc
inc
cwtl
mov
gs
gs
sub
push
jnp
sbb
or
push
mov
mov
adc
push
cmp
aas
push
mov
mov
fldcw
out
add
in
fstl
push
sub
lahf
inc
sti
or
mov
sbb
stc
ret
mov
sbb
jg
fdivrs
xlat
mov
and
jmp
in
pop
push
or
cmp
cmpsl
inc
aas
movsl
push
sub
lcall
pop
and
mov
jp
ss
cli
mov
daa
fcmovnb
sbb
sbb
lret
scas
mov
cwtl
sub
push
xor
pop
add
je
pop
popf
cmc
add
mov
sbb
fabs
mov
jecxz
pop
pop
mov
jne
lret
sbb
lock
pop
shrb
add
addr16
test
aam
jg
and
movsb
data16
adc
imulb
jae
dec
adc
sbbb
xchg
in
leave
cli
js
int3
daa
pop
mov
clc
lods
adc
ror
lods
jge
xor
fimuls
loop
enter
out
movsl
data16
ret
mov
outsb
sbb
fiadds
adc
fisttpll
pop
xchg
test
adc
out
mov
sbb
pop
xchg
roll
cltd
dec
mov
stos
bound
incb
shrb
mov
mov
or
stc
stos
cwtl
and
xchg
movsl
push
iret
daa
stos
stos
ds
inc
push
or
pop
test
xchg
xchg
inc
out
shll
inc
jo
loopne
pop
fisubs
lret
adcl
and
sbb
dec
add
aad
fdiv
sub
adc
sbbl
outsb
dec
divl
pop
test
add
loop
dec
out
rol
hlt
rolb
test
movsb
add
sub
lods
test
lods
outsb
inc
push
cmp
insb
pop
leave
scas
push
shrb
aad
setge
adc
outsb
jp
sbb
dec
lret
pop
push
dec
jne
lock
out
xchg
xchg
dec
push
jo
icebp
xchg
ss
ret
cmp
movsl
mov
addb
push
push
adcl
nop
movsb
push
fisttpll
jge
es
sbb
leave
in
mov
in
push
nop
mov
popf
cmp
nop
test
push
inc
inc
fwait
adc
cmp
jl
orb
push
sub
xlat
clc
leave
leave
jmp
popf
push
cmpsl
adc
xor
testb
fsubrs
lock
lods
sbb
inc
inc
pop
icebp
pop
sbb
jne
shrb
dec
cmp
vmovdqu
aam
nop
fldcw
out
pop
xor
jb
jae
ret
sbb
sub
loop
aad
iret
fisttpl
popf
dec
jecxz
pop
shr
shlb
shrl
sbb
ficomps
adc
push
js
add
movsl
or
mov
mov
add
xor
and
mov
jae
add
and
xchg
push
movsl
in
dec
sbb
aaa
cli
push
cmp
sbb
add
pusha
sub
hlt
push
sub
jl
enter
fwait
dec
jne
pop
shll
in
pusha
ret
ljmp
inc
jns
das
loop
repnz
jno
imul
cltd
fiaddl
loopne
fsubs
mov
cli
subb
and
xchg
mov
inc
pop
adc
lods
inc
jge
cmp
jge
je
xor
jecxz
add
mov
loop
mov
iret
cwtl
call
lods
inc
addl
scas
add
jl
cmp
out
dec
xchg
push
dec
stos
pop
sbb
jecxz
adc
fstl
out
or
xchg
in
and
inc
scas
lahf
jo
aas
push
mov
stos
push
in
insl
pop
adc
push
das
xor
out
mov
aas
or
mov
mov
int3
fildll
outsb
sar
popa
pusha
dec
scas
iret
fstl
mov
xor
mov
xchg
imul
icebp
leavew
ljmp
fstpl
cltd
xor
mov
mov
jge
and
or
add
movsb
add
mov
cs
andl
shlb
jnp
jns
xchg
cltd
icebp
das
bound
push
mov
lea
out
nop
ljmp
mov
sub
ds
push
and
add
jns
sahf
sbb
mov
gs
dec
shl
mov
arpl
pop
xor
jp
or
xchg
xchg
xor
fildl
stos
xor
ds
cmpsl
push
sbb
xchg
xchg
add
lods
push
imul
lods
xchg
cbtw
xchg
js
jge
jb
xchg
or
in
lret
cwtl
jnp
mov
lods
sbb
xchg
dec
xlat
cs
inc
shlb
in
lods
xor
xchg
mov
add
insl
or
jecxz
xor
pushf
inc
dec
push
sbb
jmp
hlt
jg
and
notl
jge
lcall
add
mov
xor
mov
loop
stc
movsl
or
mov
outsl
and
lret
add
fcom
ja
mov
icebp
inc
imul
pusha
roll
mov
xchg
aaa
stos
mov
movsb
and
in
gs
inc
or
movsb
imul
sbb
mov
repnz
sub
cmpsl
cmpsb
and
push
mov
into
dec
adc
movsb
leave
dec
loopne
or
aas
stc
cltd
xchg
sbb
outsl
ret
adc
arpl
jbe
sbb
rolb
push
aam
adc
cmpsl
test
inc
test
xchg
dec
lret
mov
scas
fwait
stc
mov
das
or
or
xor
sbb
repz
push
arpl
rcrb
dec
xlat
xchg
pop
add
inc
stos
aad
std
add
movsl
or
iret
rclb
popf
and
dec
aam
xor
rol
sbb
pushf
lds
mov
add
or
push
dec
xor
out
cltd
inc
lret
push
mov
push
fadd
into
cmp
lret
ds
sbb
mov
orb
inc
mov
fwait
fwait
mov
mov
cmp
dec
pop
fcmovb
mov
mov
sbb
sti
push
lods
dec
clc
je
out
shr
xor
jo
mov
enter
std
icebp
fnstsw
loop
xor
mov
stos
cmp
sub
shlb
xchg
ss
loopne
ficomps
dec
inc
hlt
jb
inc
add
imul
scas
xlat
fimuls
cli
subb
xchg
test
pop
fwait
es
jb
cmc
push
xorb
stc
add
aad
sbb
jo
fsubrs
add
cmpsl
fs
in
repnz
jg
adc
call
ret
ss
and
js
xchg
pop
lds
xor
dec
aas
jo
sti
and
xor
adc
mov
push
jne
iret
mov
push
pop
scas
cmp
loop
mov
adc
pop
movsb
push
leave
mov
push
jbe
mov
test
jp
mov
adc
ret
xchg
jge
leave
daa
mov
ret
jno
lret
andl
nop
xchg
roll
mov
inc
pusha
dec
mov
sub
xor
int3
fisubrs
inc
push
xchg
sub
jbe
stos
mov
mov
loopne
ja
and
lret
jecxz
adc
xor
dec
inc
mov
push
mov
insb
aad
addr16
pop
cltd
movsl
scas
inc
adc
jmp
imul
clc
xor
jg
inc
xor
cmp
sbb
mov
or
or
outsb
mov
fwait
out
rsm
push
lret
gs
in
jnp
loope
lahf
int3
shlb
into
jl
hlt
insl
mov
mov
cmp
repnz
cs
mov
or
in
mov
jno
or
xlat
jnp
fmull
mov
in
sahf
push
gs
repnz
shll
xor
clc
fs
loopne
xchg
sub
stos
sbbl
sbb
hlt
out
pop
or
push
xchg
sarb
out
cld
xor
loope
sahf
mov
push
inc
mov
into
add
ficomps
sub
std
push
mul
xchg
xchg
movsl
jo
cmpl
gs
mov
sarb
fldt
outsb
test
inc
pop
cmp
pusha
call
push
dec
ret
out
mov
jnp
hlt
out
sbb
dec
xor
fwait
push
mov
mov
jle
mov
sbb
stos
add
adc
lcall
arpl
adc
bound
push
and
mov
mov
xchg
repnz
shlb
and
arpl
adc
bound
push
and
mov
mov
xchg
repnz
shlb
and
adc
xchg
jb
bound
push
mov
mov
xchg
repnz
shlb
and
arpl
adc
bound
push
and
mov
or
jecxz
jecxz
repz
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
xchg
int
std
std
in
in
cmpb
sbb
inc
jg
dec
outsl
sbb
sub
int
int
in
in
popf
popf
lea
push
pop
dec
dec
sbb
insl
sbb
cmp
aam
in
cmc
hlt
test
mov
mov
sbb
pop
inc
arpl
inc
sub
mov
andl
jno
mov
push
insb
cmpsb
mov
mov
cmpl
xor
addb
jne
adc
jb
dec
aaa
fs
subb
mov
cmp
int
mov
das
mov
lret
mov
pop
fdivs
call
xchg
ret
ljmp
std
data16
in
push
imul
pop
bnd
les
in
sub
add
jno
in
mov
dec
push
jne
xorb
int
mov
pusha
and
xchg
mov
push
sbb
cmp
std
in
cli
testl
inc
push
push
gs
add
cmp
test
cwtl
cld
mov
stc
lret
loopne
mov
xor
xor
jno
imul
movsl
int
cwtl
out
call
rcr
call
sub
or
js,pn
jle
dec
push
sub
test
pushf
in
cwtl
in
lea
pop
pop
dec
dec
jge
insl
insl
sbb
cmp
int
std
std
in
in
popf
popf
lea
pop
pop
dec
dec
jge
insl
insl
sbb
cmp
push
dec
movsb
faddl
call
jae
ds
popa
mov
adc
push
clc
out
fdivl
lock
sbb
in
lcall
fmul
add
jnp
jecxz
sub
int3
dec
add
shld
ret
out
cli
push
mov
pop
add
repnz
mov
int
bound
push
gs
sub
and
push
lea
std
mov
inc
sbb
inc
cmp
addr16
cmp
lods
xor
fadd
mov
loopw
cmc
pop
es
sbb
dec
push
mov
jge
dec
mov
pop
pop
int3
loop
mov
push
cmp
ljmp
subl
outsb
mov
mov
in
pushl
repz
mov
test
jo
mov
jno
rcrl
push
adc
adc
and
fisttpl
cmp
mov
cli
or
xor
test
inc
mov
cmp
out
jg
xor
or
sub
jae
int
cmp
cmp
mul
dec
push
out
jns
pop
push
add
cmp
out
sbb
mov
mov
adc
aad
cmp
jne
out
es
addl
loope
pop
mov
cmp
xchg
aas
inc
fdivl
insl
fsubrl
push
jle
test
sub
pop
loope
aad
in
and
in
faddl
jge
cmpl
sub
jp
mov
loopne
testb
cmp
sub
scas
invd
lea
popa
loope
int
sbb
push
pushf
jne
lock
push
bound
fidivrs
fmull
ret
add
sbb
jecxz
data16
sarl
cmp
pop
icebp
jmp
out
jns
inc
rcll
int3
mov
std
fadd
push
mov
dec
rcrb
cmp
frstor
jns
out
movsl
js
stos
pop
pop
inc
and
not
loopne
lods
data16
js
add
mov
inc
fnstenv
clc
leave
cmp
xchg
mov
inc
mov
push
sub
pusha
sahf
nop
push
xchg
ljmp
fisubrs
loop
mov
adc
add
inc
adc
les
and
ficoml
jno
inc
mov
es
sub
inc
and
jae
in
stc
and
xor
mov
push
sar
add
pop
lahf
pusha
add
jmp
add
lea
jo
addr16
xor
subb
leave
daa
jl
and
hlt
lret
push
and
adc
xor
inc
ljmp
xchg
cmpsb
in
sbb
mov
mov
xchg
adc
xor
and
hlt
dec
mov
cli
mov
add
sbb
jle
icebp
or
add
mov
outsb
js
mov
lret
pop
xor
push
popa
or
sbb
push
pop
push
add
les
xchg
stos
stos
outsl
jbe
and
or
push
sub
push
popa
outsl
dec
add
or
mov
cmpsl
inc
xor
and
das
mov
xor
adc
lods
add
add
lahf
or
xor
add
inc
xor
lds
push
rcll
roll
or
inc
xchg
lods
pop
inc
adcb
add
repnz
in
cltd
daa
cmpl
enter
push
test
mov
sbbb
push
icebp
pop
test
or
lret
inc
cld
pop
push
fwait
pop
testl
fcoms
fbstp
or
push
imul
bound
sub
out
ret
pushl
pop
sbb
xor
pop
sub
ffreep
aaa
aas
dec
sbb
xchg
hlt
scas
mov
aad
fpatan
jp
dec
cld
push
scas
popf
int3
out
inc
inc
ss
jl
dec
rorb
lods
jle
loope
mov
sti
push
dec
ss
movsb
xor
out
movsl
and
and
jb
mov
add
pusha
cmp
mov
push
pop
sbb
in
ffreep
js
dec
jge
sbb
repz
adc
xchg
and
xchg
mov
out
popa
xchg
cwtl
insl
xor
mov
xchg
mov
pop
sub
fcomps
push
scas
or
jp
sbb
jb
adc
lahf
jmp
xor
icebp
push
dec
xchg
pop
scas
sbb
jno
addr16
fidivl
jp
lret
mov
jb
or
mov
inc
loopne
icebp
push
xor
push
cmp
lods
dec
push
inc
add
or
dec
adc
xor
enter
xchg
inc
call
xchg
hlt
addl
dec
out
inc
push
subl
bound
notl
xor
jne
cli
repz
outsb
push
shll
mov
aad
std
shrb
loop
jmp
lret
mov
in
mov
iret
pop
pop
and
lret
sbb
sub
fdivp
in
xor
and
adc
mov
or
rorb
and
fucomip
dec
ror
pusha
and
jge
xor
orl
add
test
addr16
sti
ret
into
fsubrs
mov
pop
dec
adc
out
add
adcb
and
mov
xor
data16
push
mov
jae
fsubs
jmp
inc
into
iret
in
pop
pop
ret
in
pop
aam
pushf
mov
out
push
pop
mov
inc
add
aaa
mov
imul
mov
jae
push
push
sbb
jb
push
arpl
mov
xor
cli
mov
bound
ret
xor
add
shrb
jecxz
inc
jnp
pop
fsts
and
call
inc
inc
dec
pop
cmpsl
inc
pop
push
pop
xor
pop
pop
nop
mov
cmp
xor
pop
outsb
lret
popa
outsl
inc
loop
call
jecxz
xor
icebp
mov
xor
call
insl
clc
ret
mov
ret
mov
les
out
movb
sbb
inc
out
dec
pop
push
xchg
mov
test
out
test
jle
pop
push
push
adc
outsb
add
push
push
mov
inc
fsubrl
sbb
jne
aam
sbb
rclb
push
sti
pop
lock
sarl
cmp
mov
lea
mov
push
out
lea
popf
jno
popf
and
dec
popa
mov
mov
scas
lcall
and
shr
mov
fmul
loop
outsb
rorb
sbb
test
xchg
push
dec
dec
out
jns
mov
fildl
xchg
addl
sub
out
mov
ljmp
pop
pop
xchg
dec
inc
xor
clc
mov
and
mov
data16
and
mov
scas
filds
jmp
ficompl
addr16
pop
dec
lods
sub
aaa
enter
jo
std
cli
dec
outsl
mov
idivb
testb
cmp
cs
test
jns
sbb
cli
add
push
and
sub
out
les
mov
add
or
jno
mov
xchg
stos
mov
pushf
mov
arpl
pop
adc
and
aaa
cld
and
jp
call
stos
adc
cld
out
repz
inc
adc
pop
and
or
dec
or
xor
xor
mov
enter
mov
mov
push
jmp
add
fdivp
sahf
aad
in
test
subl
or
es
mov
ja
jnp
lea
xchg
aaa
pop
std
shlb
and
push
icebp
dec
daa
adc
or
inc
in
jae
adc
repnz
loop
push
sti
mov
xchg
fyl2xp1
movsb
mov
mov
push
js
push
scas
sub
loope
mov
popa
push
lahf
mov
es
mov
push
fmull
jbe
and
je
or
cmp
add
repz
sbb
push
dec
xor
cs
faddp
iret
cltd
popa
bound
call
or
adc
xorl
lret
sub
ss
jg
sub
loopne
jnp
and
xchg
std
orb
cltd
jbe
push
add
test
hlt
mov
inc
jo
fcomi
mov
ja
pop
adc
and
loopne
cmc
mov
je
sub
jno
push
mov
mov
cmp
inc
addr16
and
rcr
insb
push
dec
mov
mov
das
lock
mov
loop
icebp
int
jp
jecxz
jb
std
xchg
sub
aas
ljmp
mov
inc
mov
jne
aam
adc
jecxz
int3
pop
xchg
and
in
mov
adc
sbb
sub
jns
xchg
dec
inc
cmpsb
dec
xchg
jge
xor
scas
jge
mov
aad
out
in
outsl
fcmovb
dec
flds
popaw
insl
push
pop
ljmp
fchs
outsl
xchg
inc
mov
push
push
lahf
jb
dec
mov
sub
pop
pop
jns
cli
mov
lds
stc
push
lods
test
dec
dec
int3
push
adc
rcr
js
test
lods
stos
insl
ret
cmp
repz
push
test
sub
pop
xlat
cmpsb
int3
mov
nop
xchg
loopne
jae
int3
int
xchg
xchg
xchg
dec
inc
nop
pop
inc
mov
inc
mov
aam
inc
xor
scas
xchg
or
movsl
mov
xchg
loopne
cmc
sbb
les
add
repz
add
jecxz
andl
les
push
andb
ret
push
add
dec
push
inc
es
dec
xorl
test
add
mov
mov
mov
shl
test
arpl
mov
add
movsl
xchg
inc
mov
xchg
fildll
rclb
or
jbe
lcall
adc
mov
rcrb
add
inc
ret
pushf
inc
mov
addl
ljmp
fld
pusha
inc
mov
and
mov
mov
cmp
cmp
xor
lret
pop
rcr
mov
into
fcomps
jo
pop
jmp
mov
xchg
sub
pop
sbb
int3
xchg
outsl
mov
mov
mov
dec
pusha
mov
divb
scas
and
jmp
aam
and
jbe
jb
push
pop
and
mov
out
les
xor
jnp
gs
repz
cmc
cwtl
xor
push
fstpt
mov
adc
add
jecxz
sub
int
or
sbbb
adc
and
les
pop
xlat
push
mov
mov
mov
loope
mov
mov
and
in
lea
mov
pop
and
decb
sub
jle
pop
dec
xchg
dec
in
sbb
xor
int3
call
dec
sti
movsb
or
pusha
call
lods
jl
loope
repz
fistps
insl
movsb
xor
pop
lea
xchg
pushf
jl
adc
inc
jmp
pusha
into
test
mov
lods
shll
lods
pop
ret
dec
jecxz
xchg
lea
adc
and
dec
mov
push
xchg
and
popl
ljmp
gs
cmp
jns
mov
test
gs
push
push
sbb
bound
xor
mov
xchg
jo
fildll
stos
test
xchg
hlt
xlat
mov
and
sahf
cli
xor
rcrb
sbb
or
leave
push
xor
sub
mov
adc
fimull
shrl
jns
test
pushf
fistps
decl
sti
xchg
sbb
shlb
lock
lods
aas
add
enter
jns
add
cmp
js
subb
adc
cld
shl
inc
or
xchg
xor
ficoms
shlb
or
mov
fwait
and
pop
leave
int3
adc
jl
sub
jle
aaa
lret
inc
fmuls
mov
rcll
ret
add
fwait
push
fbstp
aas
xchg
pushf
mov
sub
or
pop
inc
popa
ret
sbb
test
in
mov
fcmovnb
and
dec
jle
call
dec
jnp
and
test
sti
pop
and
test
dec
mov
lcall
pusha
mov
mov
out
or
rcrl
cwtl
mov
ja
mov
jno
inc
mov
cmp
pop
jns
adc
insl
adc
mov
adc
cmp
rcrb
inc
and
push
leave
cmp
mulb
sti
ficoms
mov
mov
push
imul
ret
mov
cli
cmp
pop
ficompl
pop
fdivl
push
test
jb
or
insl
lcall
sbbl
jbe
xor
mov
pusha
pop
pusha
je
inc
xchg
mov
adc
and
push
mov
mov
lea
mov
add
xchg
push
mov
ret
adc
cli
addb
or
loope
fcomp
xor
aam
xchg
cmp
imul
xchg
repz
mov
pop
out
mov
popa
push
sti
xor
fwait
les
arpl
std
lahf
add
lcall
mov
in
outsl
adc
push
add
xchg
mov
stos
jp
jo
pop
sbb
and
movsl
cs
jae
sbb
ret
mov
fcmovnb
sarb
jno
jno
xchg
dec
stc
mov
inc
hlt
push
lret
movsl
shll
cmp
and
rolb
sub
pop
xchg
jnp
clc
push
scas
dec
sub
mov
mov
decl
cmp
pop
push
xchg
jg
insl
hlt
xor
jle
test
add
mov
push
jecxz
mov
or
and
adc
lods
push
sub
sahf
cmpb
jo
push
xchg
push
adc
sahf
in
jg
push
sbb
in
pop
mov
push
sub
push
xor
jp
jp
push
outsb
adc
push
addr16
sbb
ja
adcl
sbb
lret
bound
aam
iret
movl
sub
xchg
test
add
inc
je
dec
add
loope
sub
add
fnsave
dec
xor
repz
arpl
and
jae
cmp
std
pusha
ja
out
ret
incb
cld
jg
repnz
jb
pop
stos
popf
mov
fildll
stos
and
cmp
sahf
inc
ds
dec
inc
jne
fisttpll
enter
test
sub
mov
or
fnstsw
push
divl
mov
sub
cltd
mov
and
sub
xchg
hlt
cs
pop
js
divl
xor
mov
xchg
cmpsl
out
and
ficoml
dec
pop
out
inc
fstl
out
push
dec
xor
fs
xlat
xorl
hlt
pop
dec
sub
jecxz
fstps
stc
pop
test
ds
out
xor
lock
loope
dec
ljmp
inc
mov
loop
clc
aam
mov
stos
xchg
test
push
and
imul
imul
pop
xchg
mov
test
int3
and
dec
cmpsb
mov
insl
adc
ljmp
add
imul
push
pop
adc
inc
dec
fs
sub
shl
xchg
gs
outsl
xchg
shrl
sbb
push
sahf
aas
jb
mov
stos
cmpb
lret
jno
and
fsubs
pop
inc
insl
push
jne
mov
dec
xorl
sahf
jbe
mov
xor
mov
cmp
mov
dec
lahf
mov
xor
pop
stc
push
daa
popf
mov
leave
in
rolb
pop
pop
aas
sbb
popf
and
mov
push
pop
cwtl
inc
lods
mov
jns
adcl
push
jno
shll
pushf
cmpsb
sbb
pushf
mov
xchg
sub
nopl
ds
in
fcmovne
movsb
cmp
hlt
mov
ret
imul
stc
pusha
inc
dec
pop
loop
sub
and
shrb
mov
adc
insb
into
inc
in
and
movsl
sbb
outsb
mov
pop
xchg
jno
sub
in
nop
scas
fs
fisttpll
pop
or
out
in
cmp
sbb
mov
lods
push
ja
jg
pop
lcall
sbb
push
ret
sarl
lcall
cli
dec
sub
popf
movsl
jmp
cltd
fdivl
jecxz
ja
sub
add
shrb
int3
sbb
mov
jne
xor
sub
in
jecxz
in
testl
mov
pusha
pop
out
cli
add
mov
fwait
int3
mov
sbb
test
stos
daa
iret
jl
in
jns
jge
lods
pusha
jo
pop
mov
add
jns
iret
xchg
leave
enter
mov
mov
inc
push
mov
cld
fdivp
jno
push
aaa
mov
add
insb
push
lods
mov
push
xor
into
outsb
es
mov
xchg
inc
mov
or
mov
xchg
inc
pop
xchg
xor
jecxz
in
shlb
fcomps
std
pop
jae
push
mov
mov
int3
popa
xlat
add
scas
cmc
in
mov
push
movsb
repz
inc
stos
aaa
jmp
fsub
dec
es
movb
call
adc
xchg
sub
xor
ret
mov
cmpsl
sbb
and
mov
pop
aaa
arpl
aad
cmpl
pop
jp
js
mov
pop
loop
jns
ja
rcrl
addb
lahf
stos
sahf
add
lods
mov
aas
sub
xchg
sub
or
pop
mov
in
in
mov
aas
cli
loop
scas
popf
mov
mov
mov
loop
adc
and
stos
and
sbb
sahf
sub
fs
pop
arpl
incl
ds
xor
dec
push
movsb
data16
mov
xchg
clc
xchg
outsb
mov
cmp
jae
xor
jmp
fdivs
mov
dec
cltd
pop
lock
jo
ljmp
adc
inc
out
pop
cmc
repz
testl
clc
stc
adc
daa
dec
test
cwtl
fistpl
fisubs
repnz
or
cmc
les
push
in
mov
inc
loopne
in
dec
jecxz
jmp
push
xor
jae
pop
in
imul
sbb
mov
adc
mov
mov
jmp
fmuls
outsb
and
cmp
fwait
negb
repz
jne
insb
dec
sbbl
mov
aad
pop
ret
and
sbb
mov
pop
gs
out
mov
popa
fst
jle
jnp
push
add
fnstsw
mov
test
int
or
xchg
mov
int
bound
xor
int3
xchg
adc
mov
pop
pushf
lods
push
dec
add
inc
xchg
sbb
lret
fdivl
jge
jecxz
push
popf
mov
sbb
xor
push
sti
sbb
pop
cmpsb
add
and
rcl
xchg
cmpsl
mov
in
into
jnp
mov
pop
fstpt
sub
push
imul
dec
leave
in
in
mov
fisubs
xor
or
push
int3
out
popf
xor
out
push
iret
inc
cmp
sti
dec
sarl
mov
mov
popf
out
jo
rcrl
sub
daa
test
sar
scas
sbb
push
sbb
xchg
in
out
testl
fs
cmc
pushf
test
add
jo
in
in
stos
das
dec
insb
mov
mov
cwtl
xchg
pop
push
pop
mov
add
pushf
or
andb
out
aaa
pop
jno
xchg
mov
mov
mov
std
inc
xchg
cld
addr16
fildll
xchg
stos
mov
xor
mov
mov
js
xchg
mov
sbb
clc
insb
jl
js
in
js
das
test
xor
outsl
mov
jb
jae
or
dec
andb
cli
cmovne
nop
push
adc
pop
cmp
outsb
pop
mov
mov
sbbb
popf
pop
sub
inc
sahf
mov
ret
mov
loope
push
pop
cmpsb
mov
adc
cs
out
mov
mov
dec
movsb
jge
into
jg
sbb
mov
adcl
aas
gs
int
sbb
insb
cmpsl
sbb
push
movsb
loopne
into
cmp
mov
shl
inc
nop
cmpsb
push
mov
sbb
inc
cmp
xchg
movb
dec
sub
pop
cmp
jo
dec
fwait
xor
mov
inc
out
mov
add
mov
pop
ljmp
jmp
fstl
mov
mov
and
cmp
xor
adc
in
movsl
fnsave
es
mov
aas
or
fdivr
cmpsb
movsl
mov
pop
cmp
shrb
push
outsl
test
mov
jl
adc
lret
push
sbb
mov
sub
mov
sub
sub
inc
jnp
pop
pop
xor
ljmp
sti
xchg
mov
fwait
dec
ja
inc
arpl
repz
lods
aaa
scas
xchg
ss
sub
cli
or
test
cmc
hlt
mov
arpl
ds
nop
push
inc
lret
add
and
cmp
cs
add
test
fsubs
jge
xchg
cmp
mov
sbb
std
pop
jno
xchg
push
in
cltd
and
adc
in
popf
popf
lea
pop
pop
dec
dec
jge
insl
insl
sbb
cmp
int
std
std
in
in
popf
popf
lea
pop
pop
dec
dec
jge
insl
insl
sbb
cmp
int
std
std
in
in
popf
popf
lea
pop
pop
dec
dec
jns
insl
insb
sbb
cmp
sub
lret
std
in
in
popf
popf
lea
mov
jge
sbb
test
ret
rolb
push
lock
sarl
loopne
hlt
in
cmp
xor
adc
inc
mov
inc
mov
jbe
push
loopne
lock
and
xor
or
adc
inc
mov
pop
push
dec
jbe
sbb
pop
rorb
mov
fbld
cmc
adc
xor
push
cli
xor
xor
in
icebp
rolw
cmc
push
out
push
or
inc
icebp
adc
sub
sti
mov
xchg
mov
lret
cmc
push
jnp
aas
mov
int3
sbb
or
jne
das
cmpsb
lret
dec
sbb
xchg
fnstenv
pusha
lds
or
and
and
add
xchg
mov
inc
mov
push
nop
stc
hlt
pop
rcr
aaa
pop
dec
movsl
xlat
rcl
decl
adc
xchg
std
sub
jbe
dec
jmp
xchg
outsl
stc
rorl
icebp
imul
sub
add
addr16
push
loopne
or
cmc
mov
scas
adc
aad
sarl
jae
pusha
fwait
cmpsb
jp
or
xor
sub
nop
data16
jbe
adc
push
lock
fbld
into
cwtl
incb
out
sub
pop
mov
sub
add
jne
jo
imul
inc
xchg
movsl
xchg
jae
daa
repz
aam
fstpt
sub
aaa
testb
push
cld
push
push
mov
test
inc
out
mov
xchg
std
jo
and
cmp
in
push
cld
dec
lods
push
lock
and
xor
add
adc
inc
mov
inc
mov
jbe
push
loopne
lock
and
xor
add
adc
inc
mov
inc
mov
add
stc
and
repz
out
xchg
dec
or
ret
sbb
mov
jno
adc
mov
sbb
pop
fs
in
jo
push
out
or
mov
je
inc
psubq
jge
icebp
mov
mov
movsb
outsb
add
negb
das
test
std
in
ret
movhps
xor
cs
push
lret
mov
in
dec
sbb
and
ljmp
sar
testl
in
jno
ret
hlt
pop
mov
pop
jp
ret
adc
cmpsb
xchg
mov
adc
nop
lret
jae
int3
push
andl
dec
andb
mov
and
sub
jg
into
jp
push
loop
xor
jae
inc
or
xor
fsubr
xor
icebp
lahf
add
inc
pop
mov
jns,pt
test
fcomp
push
push
fbld
popf
mov
cmpsl
leave
push
mov
sub
pop
jl
fcmovu
aam
xchg
lods
cmp
sub
imul
andl
or
movhps
add
mov
aam
cmp
and
lds
lahf
push
xchg
outsb
scas
sub
cli
inc
xchg
hlt
scas
sub
push
insl
mov
mov
fisubrs
lds
jb
push
add
popa
outsb
add
mov
jne
cmp
das
pop
cmpsb
icebp
dec
or
ja
xor
stc
cmc
ja
in
pop
test
xor
sbb
mov
jle
mov
xchg
or
sub
xor
hlt
and
aam
sbb
inc
jp
push
dec
orl
hlt
or
mov
cmp
cmc
dec
xor
or
fcmovnu
jg
mov
sub
stos
and
movb
cmpb
outsb
mov
sbb
clc
dec
sub
xchg
xchg
sbb
fs
repz
mov
mov
ret
mov
or
push
test
xchg
loope
mov
scas
and
jne
es
ror
call
movsb
push
or
pop
lock
pop
iret
imulb
mov
mov
pushf
xchg
push
int
sub
inc
push
repz
loopne
andl
ss
fildl
dec
xor
push
repnz
ret
sbb
inc
push
dec
mov
sbb
daa
xchg
into
add
ret
enter
in
sub
scas
sub
jb
cwtl
shlb
jge
cld
push
test
fwait
push
std
cwtl
push
sbb
lods
dec
and
scas
cmp
xchg
add
shll
push
and
hlt
gs
lcall
xor
xor
jo
das
inc
mov
sbb
mov
nop
xorb
xor
mov
cltd
fidivrl
movsb
mov
in
inc
hlt
insl
lods
ja
mov
pushl
dec
add
out
mov
pop
jge
inc
stos
inc
adc
outsb
inc
jno
pop
sbb
push
cmpsl
mov
data16
inc
lods
jmp
out
add
in
push
out
pop
cmpsl
andb
pop
mov
xor
loope
jl
xor
pusha
and
movsl
das
mov
xor
add
es
jo
xor
addl
shl
adc
test
shrl
ror
push
aad
xchg
les
or
xchg
and
sub
xchg
mov
fwait
xchg
push
adc
ja
push
insb
pop
add
sbbb
sub
hlt
sbb
mov
jns
xor
arpl
xchg
mov
xchg
and
dec
testb
push
lds
addl
hlt
arpl
scas
inc
cmp
add
dec
lahf
sbbb
cmpsl
dec
xchg
orl
sbb
scas
xor
fs
and
jmp
lcall
jl
jecxz
fsubs
popa
jg
xchg
iret
dec
mov
xchg
dec
shlb
mov
cmp
int
enter
loopne
mov
and
insl
addr16
out
mov
cmp
arpl
jle
and
jnp
add
in
out
leave
enter
ss
dec
das
lods
add
test
mov
faddl
push
or
dec
sahf
adcb
push
pop
jnp
nop
add
je
lods
mov
call
stos
jns
fwait
inc
shlb
cmpsl
fucomip
sbb
jmp
xor
pop
sbb
dec
or
shrl
dec
add
nop
inc
inc
push
xchg
enter
pop
inc
in
sarb
push
out
les
mov
lock
hlt
std
inc
mov
aaa
and
dec
adc
ret
add
mov
mov
inc
xchg
shll
xor
test
test
push
arpl
enter
nop
push
sub
popa
xor
testl
adc
cld
mov
mov
mov
xlat
jbe
sbb
jecxz
ret
lock
in
and
pop
pop
add
cmp
dec
adc
pop
pop
repnz
pop
rolb
sbb
mov
lahf
sub
leave
push
icebp
push
xor
gs
ret
sub
or
cmpsb
adc
popa
call
stc
cmp
std
in
in
movsl
sub
lcall
push
or
inc
sbb
lods
mov
icebp
shr
dec
pop
lahf
rcl
fwait
ret
pop
push
xor
adc
inc
pop
jl
add
fwait
jle
mov
insl
insw
mov
sbb
or
shll
ljmp
data16
fwait
xchg
subl
stos
into
imul
out
rolb
test
je
lret
mov
repnz
sbb
pushf
dec
shlb
mov
push
sbb
xchg
pop
mov
jne
adc
xchg
jle
je
add
sub
sub
add
repz
mov
push
dec
lods
enter
mov
sahf
es
std
jb
cli
lret
jmp
dec
lods
mov
push
outsl
ret
dec
mov
dec
push
mov
ja
cwtl
loopne
xchg
adc
icebp
xchg
inc
ljmp
in
les
pop
popa
imul
pop
dec
push
cmp
push
dec
mov
sub
pop
mov
sub
adc
aad
dec
out
cwtl
fidivl
fwait
adc
pop
iret
push
cmp
aad
pop
test
fnstsw
adc
xor
mov
in
loope
movb
das
add
cmp
mov
pushf
jg
cmp
movsl
or
xchg
jp
or
mov
arpl
dec
out
xor
pop
pop
es
in
fisubs
shll
js
mov
cmp
imul
push
adc
stc
or
pop
sub
mov
jo
mov
mov
jns
dec
insl
in
cmp
stos
jbe
mov
push
or
inc
cmpsl
pusha
out
mov
js
mov
pop
sbb
and
mov
mov
mov
aad
outsb
subb
enter
leave
jno
push
cmp
sti
nop
into
leave
aas
sub
dec
mov
mov
mov
sbbb
rcrl
push
out
in
popl
mov
xchg
sub
jns
decb
pop
lock
gs
xor
and
loopne
xchg
push
cmp
mov
in
or
mov
ror
xchg
sbb
or
dec
in
in
popf
push
add
dec
cs
adc
lods
push
mov
cmpsl
mov
sub
xor
cwtl
mov
pop
xchg
sub
sarb
imul
imul
or
jnp
xchg
das
out
adc
mov
popf
std
outsb
lea
or
push
mov
fcomp
outsl
inc
not
inc
lock
adc
jp
xor
insb
push
sbb
lea
repz
xchg
mov
movsl
sarl
pop
xchg
rolb
es
popa
sub
push
adc
dec
mov
push
call
lret
adc
out
xchg
les
pop
cmp
ss
shll
dec
pop
push
mov
add
sarb
pop
and
shlb
arpl
mov
stos
sbbl
push
or
cmp
sbbl
std
jg
fisubrs
outsb
push
das
and
pop
cmpl
imul
sbb
pop
lahf
push
in
xor
mov
repz
fnstcw
push
pop
loopne
push
fcmovnb
sub
scas
mov
sbb
outsb
fsubs
mov
jg
pushw
and
pop
loope
add
sbb
inc
cltd
mov
mov
xchg
xchg
xor
sahf
push
mov
or
outsl
jecxz
test
orl
std
in
shll
into
je
stc
cmp
dec
sbb
or
dec
dec
mov
inc
sub
repnz
inc
ret
pop
in
add
xchg
sub
mov
std
inc
xchg
addr16
fcomps
testb
add
popf
cmp
ret
int
add
pop
mov
and
je
sbb
cwtl
in
fwait
and
inc
cmp
pop
xor
and
cli
mov
aad
cmp
add
lcall
mov
adc
lahf
mov
mov
lods
mov
push
jnp
cld
or
insl
xchg
or
jne
add
mov
mov
jge
adc
mov
push
jecxz
or
and
gs
idiv
sub
fdivrp
fs
scas
cmp
and
out
cmp
lahf
pop
arpl
sbbb
loope
inc
mov
mov
push
lahf
adc
and
jnp
mov
loope
mov
insb
dec
mov
add
iret
jb
decl
xchg
and
ljmp
out
popa
or
adc
shrl
jno
imul
test
add
pop
lea
out
adc
inc
lods
add
sub
inc
pop
mov
ljmp
movsl
dec
cwtl
xchg
mov
and
cmp
jne
popf
daa
push
or
mov
sub
xchg
lock
subl
bound
adc
gs
sub
mov
scas
and
or
push
push
out
outsb
dec
xchg
push
mov
push
in
loope
in
and
ret
jne
sbb
jo
pop
and
arpl
or
mov
mov
or
addr16
fld
add
pop
mov
fiaddl
push
flds
ss
rorb
test
test
sub
mov
sub
and
push
sbb
movsl
iret
into
sub
jnp
jb
cmp
jg
xchg
mov
mov
push
in
lret
jo
mov
orl
mov
jge
test
jl
popa
daa
mov
mov
lret
enter
arpl
lcall
mov
jecxz
jmp
sbb
and
add
in
add
mov
in
push
pminsw
rcr
popf
push
pushl
pop
and
sub
or
mov
pushf
mov
pop
add
jl
jns
xchg
push
in
shll
outsl
and
adc
ds
in
mov
call
das
iret
cwtl
lret
ljmp
icebp
xor
in
js
ss
iret
sub
xor
inc
int
cmp
push
jg
and
icebp
cmp
or
lods
pop
lods
xor
aad
xchg
dec
ja
jge
bound
xchg
push
loope
and
and
in
adc
pushf
loope
out
mov
pushf
xor
test
mov
push
in
or
ljmp
xchg
pop
loopne
mov
mov
jne
lret
sbbb
mov
pop
and
pop
movsb
or
lods
aas
int3
sub
cwtl
std
lahf
aas
push
test
aas
stos
push
cld
test
pop
clc
into
xlat
lds
data16
xchg
fisubs
jmp
push
lret
call
or
jle
push
js
iret
into
pop
mov
arpl
jl
cwtl
test
loop
ja
int
test
push
mov
push
jne
lahf
lahf
shrl
cmpb
mov
jmp
repz
or
and
push
pop
jecxz
mov
jl
mov
sub
iret
leave
shll
imul
movsb
and
dec
lds
fsubl
cs
int3
jnp
jo
push
mul
dec
dec
jl
and
outsl
int
xchg
mov
in
mov
imulb
std
fistps
repz
sbb
lret
jl
rcrl
rorl
and
dec
add
jle
movsb
stc
lock
sub
adc
cmp
mov
mov
dec
push
xchg
pop
push
push
sub
rolb
das
dec
cltd
ret
sub
mov
pop
xor
mov
sub
cs
shl
and
out
jmp
xchg
lcall
push
lock
ljmp
xor
mov
push
and
je
incl
lock
js
mov
test
mov
pop
bnd
mov
push
je
lahf
sbb
sub
sbb
inc
fsubp
dec
adc
sbb
mov
arpl
rcpps
mov
push
popf
pop
jmp
sbb
xchg
clc
and
pop
or
nop
mov
ljmp
mov
ret
lret
cmp
std
fstl
repnz
sti
adc
jle
test
cmp
mov
rcrb
xor
pop
sub
rcr
repz
les
pop
push
pop
mov
aad
jo
and
mov
gs
pop
sbb
jle
fdivs
outsl
pop
mov
xor
call
push
mov
jmp
int3
jmp
dec
push
mov
int
inc
dec
test
xchg
mov
lea
testl
add
rcll
in
in
stc
jge
inc
push
jbe
popf
outsl
sbb
pop
add
sub
mov
xchg
insl
inc
popa
in
int
add
ljmp
popa
xchg
adc
inc
cld
repz
inc
inc
mov
jp
ret
jg
mov
sub
xchg
add
mov
rcrb
adc
jmp
je
lret
pushf
testl
sub
int
pop
mov
cmp
and
push
std
add
jnp
add
fcompl
xchg
cmpsl
xchg
and
xchg
sub
mov
jb
xchg
rorb
jns
popa
lods
push
mov
sbb
mov
sti
add
xchg
shll
adc
jmp
scas
rcrl
sbb
pop
outsb
ret
inc
inc
in
int3
pusha
sbb
push
jmp
cld
or
sub
sub
notl
cli
adc
rorl
pop
fwait
lock
les
aam
rcll
cmp
or
loop
call
dec
push
cmp
add
mov
mov
andps
inc
popa
jns
aam
xchg
inc
pop
cmp
lahf
hlt
repz
test
fldenv
pop
push
xchg
mov
inc
xchg
jo
push
loopne
fmuls
fnop
punpckhdq
cmpsl
lea
jb
adc
mul
gs
dec
inc
lods
and
lock
pusha
push
test
push
push
adc
cmp
dec
lods
xor
fdivrp
mov
lods
cmp
jp
data16
jbe
push
popa
or
inc
pop
push
pop
push
push
add
jo
cld
or
mov
cwtl
xchg
adc
inc
xchg
xchg
dec
loopne
into
fdivr
sub
jge
scas
push
outsb
fwait
jo
cmp
xor
bound
ret
sub
cmp
cmp
mov
push
cwtl
lcall
push
ja
iret
and
mov
loop
outsb
mov
movsl
sub
dec
lret
sub
cmpsl
xchg
pop
add
mov
in
add
sbb
mov
js
add
jl
mov
fisttpl
leave
ret
jnp
nop
out
incb
mov
mov
fs
sar
sbb
rcr
aas
sbb
pop
mov
mov
jmp
jb
std
mov
inc
push
repnz
cmp
and
pop
jle
rcrb
cmp
in
out
popf
push
and
lock
cltd
popa
xlat
xchg
fwait
dec
xor
pushf
adc
out
add
imul
aaa
add
cmp
mov
jae
push
call
movsl
mov
cmc
dec
sarl
xor
dec
xchg
or
shr
cmpsb
mov
mov
dec
or
add
fwait
sbb
cmp
sahf
jnp
and
insl
or
nop
mov
shrb
leave
ror
push
lcall
xor
daa
shlb
sbb
push
lret
ret
in
push
add
xchg
icebp
icebp
push
fsubrp
push
mov
sbb
outsl
xchg
jbe
test
or
adc
loope
push
jo
push
loop
inc
push
jge
ss
push
cmpsb
pop
stc
or
leave
push
xchg
subl
inc
xchg
push
and
mov
push
sarb
aam
add
nop
jo
or
xchg
sbbb
out
mov
cmpsl
inc
pusha
sub
les
cmp
mov
incb
call
xorps
jmp
in
add
enter
cmp
jae
xchg
in
cmpsb
sar
mov
rcrb
jp
clc
mov
xchg
incb
jmp
imul
cmp
popf
sub
push
jecxz
push
sub
mov
jg
inc
sub
add
cmc
ret
sub
xorl
cmp
mov
dec
scas
mov
jmp
icebp
xorl
outsb
movsb
loop
scas
mov
push
aas
xor
sahf
and
cwtl
rcll
dec
mov
popa
xchg
in
ja
cld
jl
rclb
les
xchg
jg
aas
sub
sbb
jb
mov
mov
mov
in
and
les
xor
cmp
sbb
inc
outsl
cmc
cmp
es
cmp
adc
fidivrs
sti
cmp
mov
xchg
mov
sub
enter
xor
orb
sub
mov
xchg
push
inc
push
lock
adc
adc
add
je
cmpsb
test
mov
and
add
daa
mov
push
xchg
mov
pop
xchg
sbb
pop
push
xorl
and
sub
jbe
aam
das
push
jbe
inc
loope
mov
out
mov
sub
aaa
fnstenv
adc
mov
pop
cmpsb
ret
bswap
xlat
in
mov
xchg
push
mov
mov
mov
jecxz
icebp
xchg
xor
popf
or
jae
loop
sub
sbb
fucomi
xchg
rcr
pop
leave
nop
call
outsl
add
pop
push
test
sub
mov
mov
dec
push
scas
fs
jno
sub
aam
loopne
xor
dec
xchg
dec
lds
push
sbb
mov
or
lods
mov
lahf
mov
xor
das
aam
lods
xchg
pusha
rorl
in
xchg
jae
and
fisttpl
xlat
cmp
data16
nop
fisttpll
test
testb
call
cmpsl
bound
out
mov
popf
push
fs
adc
mov
sbb
lret
dec
dec
sub
gs
dec
fmuls
ret
fdivs
int3
cmp
pop
mov
adc
bound
jne
sahf
hlt
popf
les
iret
orl
push
loop
jp
sub
lret
fwait
pop
lds
inc
mov
jbe
arpl
aam
std
loopne
repz
cs
ret
out
call
xor
mov
fcompl
dec
bound
sti
mov
mov
and
pop
mov
out
sbb
cmp
pushf
jp
aam
stc
inc
pushf
les
jns
xor
jns
cmp
add
or
inc
sub
sbb
mov
cmp
and
lods
adc
xor
dec
sub
push
repz
mov
cmpb
and
xchg
cld
xor
or
out
pop
jb
xchg
adc
cmp
rol
mov
add
dec
popa
repz
inc
lret
ret
lahf
iret
fcompl
mov
fsts
das
pop
cmp
mov
inc
popf
push
insb
arpl
outsb
lds
cwtl
jmp
xor
scas
push
cwtl
xor
rorb
in
das
push
jae
pop
loopne
sbb
inc
movsb
ja
jmp
out
cmp
jne
push
cmp
lods
xchg
testl
add
lods
mul
pusha
pop
lret
imul
insl
pop
hlt
sahf
sbbb
mov
jg
divb
sar
mov
pop
pop
mov
mov
out
aas
imull
mov
mov
decl
aas
and
mov
xor
inc
push
jnp
pop
rolb
cmp
push
pop
insb
outsl
mov
or
sub
mov
dec
cmpsl
fwait
mov
dec
and
add
lods
leave
aad
aad
jno
mov
fdivr
sbb
mov
test
push
loopne
lock
and
xor
add
adc
inc
mov
inc
mov
jbe
push
loopne
lock
and
xor
add
adc
inc
mov
inc
movsb
push
mov
push
loopne
fwait
les
rol
and
xor
add
sbb
dec
mov
inc
inc
push
push
addr16
add
push
lock
inc
mov
cmp
sub
icebp
sbb
or
dec
sub
in
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
xchg
das
inc
mov
cmp
rcrb
add
or
push
add
add
add
and
and
add
add
push
add
add
or
out
add
aad
xor
push
add
add
add
add
add
add
add
add
add
add
add
add
aad
fiaddl
flds
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
mov
ret
add
add
sub
dec
add
add
add
add
daa
add
jecxz
dec
add
pop
add
add
add
add
add
add
add
add
add
or
push
add
xchg
add
add
add
mov
add
add
inc
add
add
or
dec
add
add
add
add
pop
add
pop
add
add
add
add
add
add
test
add
out
out
add
xchg
adc
add
add
add
add
add
add
sub
imul
flds
add
out
add
movsb
add
add
add
addl
xchg
add
add
add
add
add
out
add
add
add
add
add
push
add
add
stos
add
add
add
inc
add
add
add
aas
add
add
add
inc
add
pop
add
add
mov
dec
add
sub
push
add
or
fildl
add
add
movsl
add
add
add
add
jbe
roll
aam
roll
add
inc
add
add
sbb
inc
add
add
add
or
sbb
out
add
add
add
add
pushf
add
add
add
add
add
add
pop
add
add
add
add
add
adc
adc
je
roll
and
or
xlat
add
mov
add
add
add
popf
add
add
add
aas
add
and
add
add
pusha
add
add
add
add
add
cmp
loope
ss
add
add
add
add
sbb
push
add
add
push
add
pop
add
add
add
add
add
adc
flds
add
add
dec
add
add
add
add
add
add
add
add
pop
add
add
mov
movsb
add
add
add
add
movb
add
add
add
add
add
add
loopne
stos
add
add
add
add
add
add
add
test
inc
add
add
add
add
add
add
sub
push
add
aam
add
add
add
add
popf
add
add
add
add
add
add
add
add
add
pop
add
dec
add
test
aaa
add
pop
add
add
add
add
add
add
add
popl
ja
sub
add
pop
add
filds
or
call
add
add
sub
insb
add
add
add
add
add
pop
add
add
add
add
add
out
add
dec
add
test
popf
add
add
and
push
lods
push
mov
add
push
arpl
xor
sub
and
data16
popa
and
and
jns
out
std
loop
pop
xchg
clc
in
iret
add
mov
adc
lea
add
dec
mov
vrcpss
es
sahf
or
sbb
ds
sbb
jae
xor
pop
dec
inc
mov
mov
ss
bound
push
es
jge
push
pop
iret
jp
jbe
jnp
mull
mov
jg
stos
aam
inc
nop
inc
mov
divb
test
stc
dec
das
cmp
into
lock
shl
and
loop
sbb
dec
sbb
push
push
ffreep
int
xchg
xor
pop
cltd
push
test
notl
sahf
loop
js
jo
ja
iret
cwtl
cs
sub
adc
mov
inc
int
shrb
rcll
cmp
mov
fdivr
cld
out
cli
push
movsb
rolb
movsl
cmpl
rorl
test
movsb
xor
int3
add
mov
and
gs
adc
outsl
push
lods
xor
popf
dec
iret
arpl
cltd
sbb
lea
jnp
mov
cmpl
test
fdivrs
inc
mov
jge
push
ja
sub
cltd
push
subl
adc
shr
cmp
out
xchg
negl
pop
mov
jge
cmp
sub
stos
rolb
pop
gs
std
mov
or
dec
aam
mulb
pop
movsb
push
mov
nop
nop
push
sub
jo
dec
dec
add
cmp
dec
adc
mov
jbe
hlt
push
into
fdivrl
add
jmp
mov
lds
jl
jns
jbe
push
mov
xchg
into
cmp
arpl
inc
inc
cmp
outsb
in
int
and
in
sarl
mov
rcl
fldl
sbb
out
jae
daa
ss
int
shll
xchg
movsl
repnz
adc
and
mov
jbe
out
addr16
enter
push
jae
gs
jno
fcmovb
inc
dec
push
mov
mov
ss
mov
sarb
lret
fdivs
dec
mov
mov
mov
aaa
fsubrl
call
mov
push
mov
fcompl
pop
scas
mov
sbb
andl
add
sbb
jno
daa
xchg
enter
sbb
and
lods
cmp
subl
xor
pop
push
push
mov
je
jbe
out
rorb
inc
xchg
adc
mov
js
jle
in
out
cwtl
push
andl
mov
pop
pop
pop
mov
jg
push
jl
sbbl
lret
outsl
lods
inc
dec
pop
xchg
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
