call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
clc
sub
cmp
or
sbb
and
mov
cmp
sub
lret
lahf
sub
cmp
push
push
dec
mov
jnp
imul
cwtl
sub
sbb
or
inc
xor
and
adc
movsl
jae
bound
stos
dec
cltd
xor
cs
push
movsl
pop
mov
push
mov
cmpsw
dec
fldt
jge
mov
mov
testl
sub
xor
pop
mov
add
xchg
sbb
mov
mov
movsl
lea
inc
mov
les
hlt
and
cmp
inc
jb
ljmp
stos
imul
dec
outsb
inc
ror
aaa
lahf
daa
je
lds
cmc
daa
dec
inc
push
push
ds
jp
imul
pop
sub
xor
out
sti
cmc
push
outsb
inc
stos
and
adc
xor
call
and
sub
jecxz
pop
pop
add
jbe
xor
fbld
or
outsl
rcl
jne
gs
js
sbb
or
mov
adc
sbb
sarl
dec
sub
mov
jae
and
sub
or
xchg
sub
jg
push
mov
jnp
cmp
dec
popl
jb
outsb
mov
inc
mov
jns
jne
push
xor
fisubrs
fidivrs
fistps
xor
jb
dec
scas
xchg
sub
pop
call
dec
mov
stos
imul
ljmp
sti
sub
cmp
or
sbb
dec
mov
stos
imul
ljmp
sti
sub
sbb
inc
in
test
inc
adc
cwtl
inc
cmp
iret
cmp
xchg
fldt
fmul
fnstcw
sub
sub
enter
into
loop
lds
mov
pop
push
inc
pop
fildll
lea
fcomi
push
mov
out
movsl
jmp
bound
cmp
fwait
je
push
or
mov
push
adc
call
add
out
inc
fs
ja
loope
lds
stos
jecxz
xchg
push
xor
imul
jle
xor
stc
in
xchg
scas
icebp
rcrl
lds
jnp
and
cs
push
adc
adc
xchg
roll
xor
notl
out
fs
and
sub
pop
sub
imul
or
mov
loope
xchg
xchg
adc
pop
aad
add
mov
inc
or
insl
xor
aas
pand
lods
dec
jecxz
xchg
testb
cmovns
adc
bound
int
mov
mov
test
loope
push
xlat
in
jo
cli
pusha
test
pop
mov
lcall
pusha
mov
in
addr16
lcall
push
and
stos
inc
mov
and
in
lock
lahf
bound
lods
sub
and
xlat
jae
fsubl
out
cmc
dec
pushf
andl
lds
movsl
movsl
add
sbb
or
mov
add
inc
ds
inc
addr16
and
pop
aad
mov
pop
push
sub
addr16
lea
mov
shll
cli
push
jecxz
xor
mov
addr16
ljmp
dec
in
clc
inc
cmp
rcr
xor
mov
cmp
sti
push
adc
pop
out
fimull
sbb
inc
aas
imul
jns
pop
mov
shrb
dec
jp
and
push
mov
push
pop
mov
mov
pop
sbb
stos
mov
ret
inc
aam
fld
inc
cmp
adcl
or
pop
jge
jo
mov
stos
adc
aad
xor
xchg
sbb
aaa
mov
shll
or
dec
out
mov
cmpsl
mov
fdiv
pushf
add
cld
adc
adc
mov
outsl
sub
sbb
fnstsw
dec
test
aaa
mov
insl
push
xor
cli
dec
clc
add
lock
push
out
mov
data16
jo
sahf
cltd
jno
pop
jg
mov
enter
mov
les
mov
inc
loop
mov
sub
loopne
mov
test
or
fcmovne
out
xchg
out
repz
mov
jno
lret
ret
mov
nop
jbe
or
dec
clc
sub
xchg
xchg
pop
testl
add
out
mov
mov
jns
insb
cmp
push
test
shl
mov
push
ret
and
dec
aad
xchg
push
mov
xchg
jae
daa
cmc
push
mov
mov
jp
aad
testl
adc
sub
fadds
xchg
out
or
inc
dec
popf
mov
cwtl
mov
out
insl
stc
mov
sub
add
mov
mov
fiadds
adc
xor
mov
xchg
add
add
insl
mov
in
mov
or
inc
fwait
adc
imul
dec
push
inc
cwtl
fs
out
mov
aas
xor
fsubr
ss
xchg
mov
jo
ficoml
pop
mov
out
ret
add
mov
out
xor
mov
fmuls
add
leave
mov
fadds
insl
out
fcomps
mov
adc
aaa
add
inc
das
jle
sub
sbbb
outsl
pop
into
add
push
xor
repz
mov
call
xchg
roll
xlat
scas
jae
dec
fisttpll
test
mov
push
cmp
pop
sub
sub
xchg
cwtl
cmc
sbb
inc
cli
movsb
test
out
std
mov
add
cld
aaa
push
loop
jno
xchg
push
repz
mov
adc
mov
xchg
dec
sbb
fs
iret
pop
push
inc
aad
inc
lahf
lea
rol
and
imul
fistpll
aaa
dec
pop
cmp
mov
push
out
arpl
movsb
inc
mov
sar
fnstsw
out
out
push
inc
daa
cmpsl
adc
cmp
rorl
add
loope
add
xchg
cli
and
lock
inc
lret
fistps
jl
add
dec
mov
dec
mov
mov
inc
cmp
mov
mov
xor
push
pop
dec
dec
pop
cld
mov
mov
pop
clc
pop
stos
sti
or
and
out
xchg
adc
sub
and
lea
imul
pop
movsb
adc
sub
jmp
push
cmpsl
cmp
je
xor
into
mov
cmp
adc
cmp
leave
aad
imulb
adc
test
adc
test
jno
pop
xor
inc
mov
cmp
jmp
lea
es
mov
mov
sbb
pop
jmp
iret
mov
cltd
int
loopne
decl
stos
push
leave
fs
rcll
and
das
mov
leave
and
out
add
cmc
test
sbb
pop
sarb
sbb
dec
push
cmpsl
pop
adc
stos
js
ficoms
in
mov
in
out
sbb
xor
push
xor
fwait
mov
hlt
xor
mov
jnp
push
call
jle
mov
adc
sub
insb
mov
jmp
ret
flds
cmp
sbb
test
dec
shrl
cmpsb
orl
fs
cld
adc
je
xchg
les
xchg
out
notl
or
cmp
xchg
sub
data16
dec
imul
sub
loop
xchg
pop
mov
push
pop
ret
jne
lods
call
popl
jnp
ret
cmp
sbb
lock
cwtl
and
sub
repz
das
xor
lahf
and
xor
sbb
dec
push
mov
mov
or
sub
mov
mov
dec
fcoms
lds
and
fisubrl
sub
cmc
repz
loopne
lods
jmp
cltd
out
in
pop
test
adc
aas
out
or
cmp
sbb
jle
pause
pusha
add
sub
add
out
xlat
push
mov
or
xchg
cmpsb
adc
cmp
dec
mov
into
xor
or
jnp
stos
test
and
scas
stc
xchg
inc
sbb
pop
rcrb
loop
inc
call
in
imul
cs
push
mov
sub
add
push
outsb
mov
sbb
push
cmp
xor
push
mov
sub
adc
xor
and
ds
in
and
dec
ss
mov
scas
fdivr
sbb
and
andl
sbbb
pop
mov
dec
jae
stos
xchg
adc
test
dec
outsl
mov
xchg
sbb
fildl
inc
adc
mov
sbb
sbb
cmpsl
aam
fs
das
cmpsl
call
xor
lcall
inc
mov
mov
add
iret
xlat
ficoml
mov
dec
out
mov
les
lods
cmp
bound
lods
jne
push
cmpsl
jge
add
rcrl
dec
dec
mov
loop
das
cmp
aam
push
sub
pop
loopne
add
lahf
cmp
test
repnz
sbb
lods
mov
add
jmp
dec
push
jl
adc
pusha
fdivrl
xor
movsl
pop
dec
xor
inc
dec
fs
xchg
add
sub
icebp
sarl
adc
leave
insb
ficoml
pop
jge
pop
ret
push
mov
or
sti
xor
sbb
sub
clc
xchg
xchg
test
xchg
jb
xlat
insl
mov
shrb
dec
ds
xchg
push
cs
sub
fwait
je
insl
adc
add
aam
pop
mov
and
xchg
outsb
int3
cmp
push
mov
stc
fwait
lea
sub
or
sbb
dec
scas
pushf
pop
outsl
jne
dec
es
dec
or
lcall
sub
ja
outsb
inc
cmpsl
lret
sahf
jae
lds
pop
sbb
test
mov
mov
sub
in
adc
aaa
int
sahf
push
ficoml
mov
xorl
mov
adc
mulb
ret
or
sbb
jp
outsb
fs
popf
test
mov
leave
call
mov
or
mov
add
lock
jae
xchg
mov
call
leave
stos
int3
loope
pop
adc
out
pop
dec
js
mov
add
mov
pop
cmp
inc
into
push
or
jbe
fcmove
xlat
int
ret
shl
adc
push
loope
daa
gs
les
ror
or
sbb
roll
pop
push
fbld
cmp
add
mov
in
add
fwait
xor
cmp
jnp
push
mov
popa
mulb
and
push
mov
push
jp
divb
xchg
jbe
test
push
xor
mov
push
imul
aad
out
imul
hlt
jge
add
and
movsb
in
iret
xor
repnz
lock
enter
out
lret
scas
mov
jmp
push
xor
idiv
loope
push
das
mov
xchg
mov
add
das
addl
adc
or
out
fisttpl
repnz
out
push
int3
ror
xor
enter
adc
fbld
icebp
mov
daa
add
imul
and
xchg
into
jle
imul
or
stc
jecxz
loope
xchg
jb
xor
in
movzwl
add
mov
dec
push
insb
pop
cmp
dec
insb
in
in
scas
and
outsb
jne
fs
adc
jmp
sub
pop
jb
call
dec
mov
nop
inc
into
pop
pop
int3
int
xchg
cmp
in
mov
sub
push
jb
mov
mov
mov
jo
jp
xor
xor
int3
and
fsts
push
pop
iret
loopne
dec
sub
inc
inc
jae
icebp
mov
pushf
inc
xor
mov
xchg
push
sub
ret
adc
aam
je
mov
repnz
push
dec
dec
push
mov
sub
push
xchg
or
out
jno
or
shrl
pop
aas
sti
jp
jmp
xlat
scas
xor
popf
icebp
cmp
cmp
jne
sbb
jo
push
adc
scas
jns
fst
lods
xchg
lds
mov
lock
xor
ja
sbb
pop
in
add
rolb
mov
cmp
in
pop
in
ficompl
jnp
shll
stos
mov
xchg
push
jmp
lret
sub
inc
jns
add
mov
pop
dec
in
movq
int3
loopne
sbb
sbb
ss
or
test
or
sti
or
xlat
xchg
push
pop
fcompl
push
jno
lods
and
clc
dec
cli
popa
pusha
mov
notl
sub
push
fisttps
ret
jg
xchg
shll
push
inc
push
pop
lods
mov
gs
cmp
fisttps
jno
into
mov
push
push
outsl
incb
scas
mov
nop
add
ret
pop
imul
and
jle
jl
cltd
lcall
testb
xor
sbb
mov
testl
jbe
and
jbe
push
pop
inc
push
push
loope
pusha
outsl
popa
sub
repnz
xchg
adc
dec
jg
hlt
mov
das
xor
mov
push
das
aas
push
push
push
xorb
into
and
cmpsl
out
shlb
cmp
mov
push
lcall
fadds
push
sbb
ror
cmpsb
es
sub
jl
mov
fisttpl
cld
dec
xchg
mov
hlt
repnz
xor
mov
xchg
dec
aam
fisttps
popa
cmp
mov
inc
adc
in
cmp
xchg
movsl
jmp
and
lret
aad
sub
aam
std
aas
pop
lret
test
rcll
push
inc
adc
pop
and
icebp
popa
and
dec
push
cmc
in
insb
js
hlt
in
mov
xor
push
outsb
xor
out
and
loope
out
addr16
mov
jecxz
jae
xlat
popl
arpl
mov
subl
aad
xlat
pop
in
fs
popa
sbb
cli
std
sub
fildll
add
cmc
inc
in
inc
or
dec
jo
in
lock
cld
outsb
dec
cltd
add
pop
pop
and
stos
icebp
xlat
insb
movsl
or
sbbl
repz
clc
sbb
dec
or
mov
outsb
ss
rclb
fstp
and
js
push
pusha
mov
mov
loope
movl
or
leave
inc
dec
rcll
int
test
mov
scas
adc
dec
pop
pop
in
xlat
stc
std
aas
and
sbb
xchg
je
sbb
cli
enter
add
cmp
filds
mov
jle
addr16
inc
out
fisubrl
paddusw
add
ficoms
popa
mov
and
stos
cmp
dec
fs
adc
xor
lea
xchg
jne
stos
cwtl
or
jbe
test
lahf
sbb
dec
ret
jbe
push
pop
addr16
push
xchg
mov
pop
faddp
jns
sub
daa
subl
mov
insb
rcl
jg
add
and
nop
adc
shrb
fmuls
adc
xchg
fwait
adc
push
int3
int
lret
insl
push
ja
sub
mov
xlat
iret
mov
paddq
jne
cmp
fs
movsb
mov
lea
fsubrl
and
lahf
and
aas
or
push
cmp
mov
mov
add
pop
mov
and
mov
ror
cs
or
ret
fldt
add
imul
scas
sub
jecxz
jg
and
outsl
inc
push
ds
sbb
adc
pop
aam
jg
and
shlb
mov
cltd
loopne
xchg
xchg
sahf
mov
mov
jo
dec
call
cwtl
cmp
inc
push
fld
addb
cmp
fnstenv
fs
lahf
dec
add
pop
sbb
iret
sub
cltd
inc
sbbb
push
push
or
repz
adc
mov
sbb
test
rcll
push
lock
test
mov
mov
lret
or
mov
mov
mov
sbb
xor
dec
in
insb
push
jo
clc
fwait
fs
mov
push
loope
test
mov
jns
orl
loop
loope
xchg
adc
scas
jbe
mov
clc
pop
jge
inc
sbb
push
lcall
jl
pop
dec
fwait
cmp
inc
ljmp
orb
jmp
imul
in
cmc
adc
cmp
insl
mov
sbb
cmp
flds
aam
jl
das
stos
mov
sub
notb
popa
inc
inc
push
or
pop
dec
outsb
lcall
pop
lret
lahf
inc
aas
jg
push
les
adc
xchg
cld
clc
xchg
pushl
cmp
add
sub
fldt
push
ss
jne
mov
enter
sub
jnp
mov
sbb
pop
test
repz
divl
add
out
mov
int
out
inc
pop
cmp
push
std
pop
shlb
dec
xor
popf
cwtl
pop
xor
pop
sbb
sbb
in
mov
push
aad
pop
xchg
push
cs
call
inc
mov
jp
lret
idiv
fwait
mov
mov
xchg
adc
loope
insl
sbb
jmp
jecxz
aad
test
xor
imul
sbbb
sub
xchg
sbb
gs
push
jo
dec
nop
xchg
stos
cmpsl
pop
outsb
fcomps
loope
push
popf
push
addl
add
or
jle
cmp
jl
ret
sub
in
or
push
incl
push
rolb
arpl
hlt
jl
jnp
pop
loopne
lret
pop
out
inc
mov
sub
xor
frstor
sub
or
out
push
outsb
mov
adc
mov
mov
sbb
adc
dec
shll
dec
lods
push
mov
aam
or
inc
cmp
fwait
and
pop
icebp
cmp
and
push
add
icebp
pushf
jp
xor
lea
cmp
sti
movsl
lods
into
fcoms
arpl
push
or
test
xchg
dec
push
push
dec
sbb
incl
ret
mov
rolb
inc
hlt
cli
stos
test
jp
cmp
loopne
popf
pop
and
cmpsl
and
ret
mov
movsl
xchg
push
fstl
pop
sub
pop
std
mov
popf
shrl
push
cmp
mov
and
and
loope
mov
popf
dec
ror
fcomip
push
sahf
and
adc
jge
out
jle
arpl
inc
jo
mov
mov
out
int
cmp
mov
sbb
xor
xlat
jge
repnz
js
repnz
enter
and
pop
fisubl
test
jg
aas
je
mov
loope
sti
enter
fst
into
inc
push
fisubs
mov
lds
fsubl
mov
into
jae
outsl
imul
sub
or
shlb
icebp
stos
xor
xchg
lcall
lret
test
aam
int
std
cmp
cmpsl
shlb
stos
add
sarb
push
stc
popa
adc
js
or
or
int
sti
mov
pop
pop
test
cmp
pop
stc
sbb
jb
scas
or
mov
adc
push
dec
xchg
dec
pop
dec
xchg
push
shl
movsb
xchg
jp
rolb
cmc
ficoml
add
inc
mov
out
xchg
es
cltd
daa
stc
ret
ficoml
sub
int3
movsl
xor
sub
dec
and
sbb
in
ljmp
imul
jno
and
leave
or
incl
in
bound
mov
sbb
aam
ret
pop
popf
mov
lcall
jne
les
aam
loop
lds
lret
sub
mov
mov
adc
inc
cs
sbb
xchg
lret
sti
push
mov
je
jp
popf
push
in
and
enter
push
inc
js
ds
ret
xchg
pop
icebp
push
add
insl
repnz
data16
fisubrs
sbb
jg
fnstcw
sarb
add
out
sub
adc
shl
test
ja
imul
int3
lds
jns
lret
dec
ljmp
ja
dec
stos
lods
jl
inc
or
push
inc
xchg
cmpsl
adc
arpl
push
add
sbb
mov
add
jb,pn
ja
mov
and
pop
add
mov
push
push
mov
orl
mov
pop
aas
jle
lahf
xchg
lret
daa
adc
andl
lcall
dec
test
jge
negb
push
pop
xchg
or
shll
and
dec
jle
nop
aam
mov
inc
aam
jo
fisttpll
dec
push
sbb
lea
pop
push
push
dec
addl
fdivl
stos
adc
mov
mov
insl
cli
ret
mov
push
sahf
ret
jl
cmp
and
jb
aaa
mov
pop
fwait
mov
ret
imul
mov
lahf
jb
push
adc
push
aad
cmpsl
cli
dec
xor
and
dec
push
adc
add
push
inc
pop
sub
es
and
cld
mov
xor
movsl
adc
xor
popf
aad
rcrb
mov
jb
cwtl
add
xchg
cmp
or
cmc
incb
mov
rorl
jnp
xchg
daa
or
mov
and
ret
cmp
inc
lea
inc
xchg
fwait
inc
jecxz
sub
mov
xor
push
icebp
mov
int3
xchg
scas
mov
adc
adc
in
mov
cmp
jmp
mov
fisttpll
xchg
scas
inc
dec
push
jl
xor
int3
jmp
jp
adc
in
notl
sbb
insl
adc
rolb
mov
orl
rorl
xchg
dec
sub
add
mov
add
adc
mov
add
xlat
es
pop
mov
js
test
shlb
jl
pop
pop
cmp
adc
xor
adc
pushf
or
sbb
dec
mov
stos
imul
ljmp
sti
sub
cmp
or
sbb
dec
mov
stos
imul
ljmp
sti
sub
cmp
push
jp
dec
dec
pop
jnp
imul
ljmp
out
cs
orl
mov
lcall
dec
in
dec
bound
movsl
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
cli
in
cmc
add
aad
movsb
adcl
jg
inc
xor
and
xor
adc
mov
mov
nop
aad
movsl
lock
test
lock
jne
inc
rclb
inc
jno
inc
add
test
aad
movsl
jmp
xchg
and
push
insb
and
arpl
shrb
mov
pop
or
xrelease
nop
enter
cld
push
adc
mov
cli
pop
shll
scas
sbbb
or
iret
mov
mov
daa
outsb
lods
mov
mov
leave
pop
push
adc
pop
enter
iret
je
inc
out
stos
lahf
fidivl
fnstenv
mov
add
in
sub
pop
mov
orl
and
add
adc
fnstcw
in
mov
xor
aam
xchg
sub
adc
jbe
and
inc
mov
sbb
and
sti
sbb
gs
jno
xor
stos
mov
add
mov
add
aad
movsl
ljmp
sub
inc
or
and
dec
push
shl
aad
in
hlt
xchg
test
popf
rol
mov
insb
jb
jle
or
adc
and
mov
mov
out
lock
rclb
pop
inc
and
add
pusha
push
inc
leave
movsb
andb
xchg
lock
test
xchg
and
jne
inc
adc
and
push
adc
add
aad
movsl
lock
test
xchg
and
jne
inc
adc
and
push
adc
fldcw
fdivl
jg
mov
jne
imul
daa
sbb
rcrb
std
rolb
jmp
cli
outsb
incl
daa
adc
dec
je
cmpsb
pop
fwait
aad
inc
xchg
test
cmp
and
cltd
sbb
int3
cmpsb
fsubrs
clc
insl
sub
gs
out
or
xor
mov
dec
daa
xchg
neg
add
xchg
mov
xchg
imul
cmp
or
adc
pop
jg
cli
pop
dec
loop
dec
rcll
mov
roll
add
in
push
pop
iret
add
adc
cmpsb
test
fwait
clc
imul
dec
or
cmp
sub
std
out
cmp
mov
in
std
sbb
adc
enter
int3
xor
pop
xor
xor
stos
pop
push
mov
out
dec
jne
add
dec
adc
ret
imul
arpl
imul
mov
loopne
xchg
xchg
negb
fldenv
pop
sub
sub
and
push
imul
dec
inc
or
adc
sub
loop
lea
clc
mov
pop
jo
js
mov
ja
xlat
adc
sbb
js
stos
jns
adc
sub
roll
and
jbe
jnp
rclb
cs
cmp
ficompl
mov
sbb
mov
es
test
or
mov
es
and
sbb
push
shlb
xchg
pusha
jb
fwait
sbb
mov
insl
bound
cmpsb
jmp
or
popa
lret
adc
sub
inc
test
scas
call
sub
xchg
out
or
mov
aad
xchg
dec
jp
sahf
mov
inc
add
in
cmp
lret
mov
sar
mov
sbbb
mulb
jg
push
fmulp
gs
or
sub
xor
adc
shll
mov
push
mov
cs
jo
ficomps
or
adcl
cmp
mov
sub
rolb
jns
fs
jge
test
mov
bound
push
fildl
stc
and
pop
aaa
jecxz
jb
adc
push
in
jmp
in
inc
inc
sbb
pop
subl
ret
mov
adcl
rolb
mov
mov
lea
out
pushf
shlb
outsl
int3
inc
xor
lock
pop
xor
scas
sbb
and
pop
cmp
mov
push
adc
add
lock
inc
leave
daa
push
pop
cmc
fnsave
cmp
roll
or
je
insb
cmp
mov
mov
mov
sub
punpckhdq
jmp
jl
jae
clc
push
dec
or
popf
mov
lret
cltd
pop
fcomps
pop
sub
dec
sub
shr
jp
add
adc
mov
inc
sub
jge
mov
lods
outsb
push
aaa
mov
in
cmp
cltd
rclb
dec
jne
mov
and
hlt
sub
add
sbb
mov
pop
mov
inc
and
in
jmp
sbb
jns
inc
sahf
ljmp
das
and
into
roll
gs
sub
inc
push
xlat
jp
scas
pop
pop
adc
jno
dec
add
jmp
push
fisttpl
jbe
fisttpl
lahf
jp
jecxz
out
xchg
sub
add
clc
sarl
xchg
push
dec
ds
mov
mov
out
test
aaa
mov
andb
sub
push
adc
jne
loop
or
sbb
pushw
dec
lods
js
push
inc
mov
or
pop
pop
jnp
xchg
cmp
mov
inc
adc
push
aas
push
das
or
xchg
mov
movsl
out
movsl
je
scas
pop
inc
scas
ds
pop
and
xchg
insl
xlat
cltd
cwtl
pop
mov
dec
pushf
xchg
ficompl
jbe
shlb
cmp
stos
lods
and
lock
stc
test
sub
pop
ljmp
fidivs
cmpsl
or
inc
inc
xor
into
sub
add
hlt
pusha
xchg
mov
int3
or
mov
das
cli
sub
int3
mov
push
fisttpl
adc
mov
sbb
enter
out
jo
or
mov
sarb
repnz
incl
jecxz
or
imul
push
test
popa
inc
inc
fwait
xchg
ljmp
mov
outsl
jo
sbb
leave
xchg
fadds
sbb
mov
lds
mov
cmp
pop
sahf
flds
add
jge
stos
aam
cwtl
iret
jp
cwtl
jg
pop
ljmp
nop
test
mov
cld
outsb
out
xchg
sub
mov
ja
jmp
cmpsl
daa
inc
jle
subb
jno
lea
xor
mov
int3
push
push
cmpsl
inc
push
jp
cmp
mov
mov
xorb
push
cmc
sar
dec
and
jg
aas
dec
adc
jecxz
loop
fidivl
inc
jle
jbe
xchg
mov
in
mov
adc
ficoml
sub
jns
mov
shll
sbb
sbb
fidivrl
jne
and
add
jb
and
jnp
icebp
adc
fdivs
push
popa
mov
in
int3
xor
cmpsl
inc
ret
sbb
ss
add
imul
xchg
aaa
xor
xor
ret
pop
jecxz
ja
jb
mov
xlat
pop
or
jmp
les
fists
and
pop
repz
popa
add
mov
and
sbb
inc
sbb
movsl
cmp
pushf
cmc
mov
lea
push
scas
jge
xchg
aad
mov
or
loop
dec
pop
and
jnp
jp
lret
lds
into
pop
sti
push
fcoml
adc
pop
mov
adc
call
push
ljmp
xor
mul
inc
mov
mov
xchg
xor
xor
push
xchg
push
xor
mov
iret
fwait
adc
int
pop
aaa
push
in
adcb
sti
cmp
jo
sub
subl
ret
enter
xchg
mov
jle
in
stc
mov
je
xor
bound
imul
test
pop
cld
pop
movsb
dec
dec
test
inc
sbb
xchg
sti
sub
lahf
adc
mov
scas
lock
lret
fists
xchg
or
or
cmp
data16
aaa
sti
fcomps
mov
sub
aam
cmp
add
xor
push
jecxz
pusha
pop
sbb
push
pop
inc
popa
mov
daa
xchg
push
std
imul
jbe
dec
setae
lds
mov
mov
xor
out
ds
sbbb
pop
data16
lea
fbstp
jl
ret
testb
or
mov
loope
js
sub
xchg
test
jnp
imul
cld
sbb
je
ficomps
adc
bound
cmp
sbb
mov
std
add
mov
je
aaa
test
mov
loop
call
mov
andl
fsubrs
jbe
jo
pop
xor
push
or
addr16
inc
inc
add
dec
je
jg
pop
adc
lock
push
out
outsl
or
sub
outsl
adc
addl
test
adc
dec
mov
scas
sbb
push
pop
sbb
int
lock
aad
mov
leave
ljmp
mov
adc
xor
inc
call
mov
jle
stos
test
sub
sbb
js
jne
dec
dec
movsl
cmpsb
repnz
lea
cmc
jg
xor
in
xor
mov
pop
sbb
lods
fisttpl
movsl
cmp
outsb
dec
and
rorb
test
sub
in
mov
repnz
mov
sbb
lds
fmuls
cmp
enter
mov
sbb
pop
push
xor
jp
pop
repz
mov
cmp
insl
in
les
lods
cmp
jbe
jle
fstl
loopne
out
inc
jmp
hlt
add
sbb
jne
loop
adc
in
mov
push
and
pop
xchg
add
push
dec
sahf
push
test
test
addb
mov
xor
int3
sub
dec
bound
push
jl
push
jne
rorl
push
and
js
addr16
outsb
pop
cmpsl
inc
and
adc
jns
mov
loop
mull
xchg
sbb
sub
add
add
dec
sbb
lret
mov
imull
inc
orb
mov
xor
sub
cs
imull
push
add
push
cltd
pop
mov
push
ja
shrl
aaa
data16
rorl
loope
ret
push
or
sar
jno
cmp
add
push
addr16
shrb
dec
daa
insb
jp
into
divb
and
sbb
int
cmp
mov
dec
or
sub
ficoml
movl
das
adc
enter
xchg
hlt
test
cwtl
jbe,pt
sub
int
fsts
cmp
imul
test
nop
adc
jmp
inc
cmpsl
out
pusha
mov
mov
int
inc
pop
dec
mov
outsb
adc
cwtl
aaa
insl
cmpsl
ret
in
dec
push
loopne
ljmp
jo
dec
ds
pop
lock
int3
hlt
out
push
jge
lahf
mov
or
mov
mov
subb
enter
adc
jecxz
and
jmp
nop
sub
sbbl
or
xorl
jo
jmp
jmp
xchg
out
add
dec
push
loop
cmp
test
testb
inc
lret
cmpsb
or
xchg
mov
mov
mov
stc
test
cli
inc
pop
adcl
gs
je
fs
inc
xchg
cmpsb
imul
pop
and
fnstsw
adc
sarb
lret
cmpsb
sbb
xchg
out
push
push
xchg
mov
push
outsl
pop
sub
mov
mov
push
fnstcw
outsl
or
out
aam
bound
call
iret
aam
lahf
mov
xorl
pop
sub
stos
test
mov
lea
popf
aaa
ds
shl
addr16
push
popf
lahf
dec
stos
scas
test
mov
dec
and
cmpsl
mov
dec
jns
push
ljmp
push
jp
lahf
mov
rcr
lock
hlt
sti
dec
pop
rcrb
jne
pop
int3
fstpl
lods
scas
mov
mov
inc
jne
adc
sbb
mov
dec
imull
dec
mov
mov
xlat
test
jo
push
adc
pushf
pusha
lret
jns
pop
outsl
xor
push
and
xchg
movsl
sti
addr16
daa
ljmp
xor
fcomi
mov
add
inc
in
pop
mov
add
mov
inc
idivb
inc
inc
lahf
loopne
in
cli
jo
jp
mov
lahf
shl
es
jecxz
ja
adc
sbb
mov
popa
mov
add
mov
je
add
es
mov
cmpl
jo
movsl
popf
ret
inc
decl
jl
and
lret
lock
or
lods
jecxz
icebp
inc
pop
fadd
stc
inc
repz
into
outsl
je
pushl
ret
and
push
insb
dec
add
mov
mov
andl
inc
sbb
pop
clc
fucom
mov
cmpl
xchg
and
negl
js
sbb
test
insb
stc
sbb
pop
sti
mov
bound
jne
mov
shrb
pcmpeqb
jns
push
jmp
sbb
jmp
je
fisubs
lret
fdivl
inc
mov
out
mov
adc
sbb
pushl
push
xor
xchg
cmp
push
in
and
xor
lret
fucomp
xchg
xor
cmpsl
and
mov
add
jg
and
jp
lea
in
call
mov
scas
fstps
pusha
arpl
inc
cmpsl
das
lods
lret
cltd
xchg
pop
gs
int3
xor
xor
xchg
adc
cli
xor
clc
dec
je
nop
xchg
lret
sub
insl
dec
cmp
aam
pop
pop
xchg
jne
shlb
subb
mov
inc
pop
stc
insl
sahf
adc
test
inc
mov
xchg
xor
loopne
push
or
rcrl
xchg
daa
out
sub
jbe
xor
jle
stos
js
adc
mov
dec
push
je
xor
dec
jbe
jbe
mov
stc
xor
lea
xlat
sbb
dec
cmpsb
call
paddq
xor
sub
jbe
adc
dec
pop
call
dec
ret
leave
and
push
inc
push
pop
add
aam
lret
mov
mov
sbb
clc
dec
sub
cmp
fsub
cmp
data16
sub
nop
ds
insb
push
lods
sub
fimuls
iret
loope
loop
mov
push
dec
push
pushw
mov
shll
jp
jg
jge
pop
xlat
jmp
orl
mov
sub
sub
mov
dec
divl
loop
xor
mov
pop
rcrb
adc
mov
testl
xor
and
adc
xchg
popf
xorl
movsl
rcl
add
cltd
jle
xchg
mov
imul
lahf
jecxz
sub
mov
adc
jne
mov
in
xchg
and
stos
and
test
je
adc
sub
mov
sub
jnp
in
popa
rorb
xor
xchg
repnz
inc
ret
fstpt
xchg
mov
pop
mov
xchg
pop
icebp
xchg
and
fs
jae
jo
add
adc
sub
jge
fists
add
mov
imul
scas
loop
mov
mov
cmp
sub
shl
or
xor
cli
mov
movsb
int3
xchg
cmc
inc
jnp
mov
adc
inc
fcoms
push
idiv
jb
jle
loop
or
jnp
mov
and
jb
cmpb
push
inc
test
sbb
or
jmp
sti
xchg
push
test
cmpsb
sbb
sbb
and
test
fistps
add
push
insl
push
repz
mov
div
fdivs
ss
mov
and
mov
cmpsb
out
inc
es
jo
aaa
jmp
fbld
xchg
enter
and
sbb
push
or
jecxz
pop
push
cltd
mov
adc
movsl
push
fidivrs
inc
xor
push
jge
insb
cmp
out
addl
mov
and
in
sbb
lods
jecxz
shr
cmp
push
inc
cmpsb
nop
dec
enter
test
xor
icebp
jp
outsl
dec
push
jmp
cs
inc
mov
addr16
scas
aad
push
shlb
testb
lea
xor
lds
push
bound
push
lods
lods
adc
fisttpl
jmp
testb
jno
pusha
inc
int
xchg
jmp
faddl
addb
xchg
mov
out
rolb
dec
mov
mov
sbb
dec
out
jb
mov
or
shll
stos
sbb
out
cmp
dec
iret
sahf
push
or
sub
sbb
cmc
stc
xchg
repnz
dec
jecxz
aaa
in
and
js
mov
dec
dec
xor
add
push
inc
gs
fistps
imul
dec
mov
lret
push
pop
adc
lds
xchg
roll
cli
or
decb
pop
xlat
cmp
movsl
sbb
lret
test
cmpb
insb
cltd
test
lods
out
imul
sbb
cmc
inc
pop
push
cmpsl
rsqrtps
mov
frstor
orl
pop
or
push
xlat
push
jp
imul
jb
xchg
add
dec
fnstsw
adc
pop
test
push
sbb
jmp
push
enter
ljmp
xor
push
movsl
imul
xor
test
jbe
mov
std
andl
cwtl
mov
pop
sbb
in
lods
cmpsb
lahf
clc
pop
sbb
test
inc
shl
in
pop
xlat
sahf
xchg
xchg
rcr
aam
sub
mov
cltd
mov
push
fs
fwait
popa
sbb
loope
in
fidivrs
lret
xchg
pop
sub
xlat
mov
adc
jnp
sbb
or
or
and
movsb
cmc
scas
cmp
test
mov
lea
in
mov
ficomps
or
xor
dec
push
jg
in
or
stc
fwait
xchg
les
loop
test
dec
push
xor
push
shll
sbbl
xchg
mov
sub
ret
cltd
add
data16
lock
je
adc
into
lock
adc
out
fdivp
xor
mov
adcb
test
jle
push
les
in
dec
xchg
aad
iret
mov
insl
in
adc
xorb
and
shl
mov
in
add
insb
loope
mov
mov
cld
push
out
jns
outsl
xchg
sbb
mov
mov
mov
in
jmp
sbb
xor
xchg
cwtl
xchg
test
adc
adc
pop
inc
push
fidivrs
adc
outsb
adc
jbe
pop
loopne
lret
stc
mov
iret
pop
scas
inc
mov
pop
mov
sbb
and
mov
mov
push
push
outsl
gs
sbb
sti
and
scas
icebp
lods
xlat
iret
jne
xchg
or
sub
ss
mov
popf
outsl
aaa
cmpsl
bound
fistl
enter
das
sub
add
sub
mov
and
adc
mov
nop
jbe
nop
sbb
mov
and
cwtl
aad
push
adc
int
sbb
mov
pop
mov
fwait
adc
push
inc
pop
pinsrw
mov
jg
lret
data16
push
mov
cli
adc
cmp
mov
cmp
jbe
push
leave
xor
mov
pusha
sbb
fadds
adc
iret
inc
loop
in
inc
pop
jp
and
and
fucomip
xchg
cli
stc
cmpsb
lea
dec
imul
sub
cmp
push
repnz
pop
inc
fimull
dec
lock
dec
sbb
or
lahf
shlb
pop
sbb
fcomps
mov
sub
lods
xchg
or
cmpsl
cltd
inc
sub
jecxz
fdivl
dec
lret
adc
out
mov
out
pop
sbb
and
ja
pushf
jne
mov
test
pop
outsl
scas
in
in
sbb
test
jmp
sbb
lea
cmp
push
add
mov
mov
mov
insb
pop
mov
jnp
pop
pop
mov
cmp
inc
lea
test
xor
adc
jno
push
aam
dec
push
dec
faddp
das
jmp
and
shl
xor
lret
push
cmp
or
addb
leave
and
test
cmp
add
out
iret
outsl
aas
int3
scas
cmp
mov
imul
xchg
pop
xchg
push
das
sub
imul
sbb
ret
int3
icebp
xchg
mov
repz
fsubl
mov
jmp
sti
xchg
bnd
push
sbb
fdivl
incb
ss
push
out
jecxz
aaa
mov
lods
jae
ss
mov
cmp
mov
jno
cmp
push
int3
std
outsl
stos
sub
cld
jo
popf
mov
add
in
mov
popf
aam
in
jg
inc
stc
loop
scas
sub
ja
in
or
or
add
mov
mov
cmp
jg
jbe
push
test
imul
pop
xor
xor
scas
movsl
lret
aas
fdivrl
aad
xorl
adc
fdivs
xchg
push
mov
xor
scas
shrb
insb
fs
mov
mov
cli
xchg
outsl
popa
and
mov
ret
dec
out
sbb
stos
pop
movsl
lcall
repnz
inc
lods
dec
and
mov
inc
mov
fsubrs
or
fstl
dec
mov
mov
aam
out
adc
testb
mov
cmp
inc
push
jle
lret
rolb
and
or
dec
xor
jge
rolb
dec
lods
sub
pushf
xchg
adc
enter
xor
xor
xchg
inc
push
mov
dec
or
xchg
mov
insl
fisttps
paddusb
xchg
outsb
roll
enter
aam
pop
fdivrl
mov
cmpsl
sbb
sbb
std
insb
popf
js
xchg
jae
std
testl
pop
outsl
push
addr16
out
test
imul
dec
outsl
lea
mov
fidivrl
mov
jg
in
jl
loopne
or
test
add
dec
cwtl
ljmp
mov
subl
stos
inc
out
jg
or
lods
loope
dec
call
gs
cmc
and
fsubrs
and
xor
inc
lds
mov
test
xchg
and
jne
inc
adc
and
push
adc
add
aad
movsl
lock
test
xchg
and
jne
inc
adc
and
push
adc
add
aad
movsl
lock
test
xchg
and
jne
inc
adc
and
popa
adc
mov
nop
aad
movsl
lock
test
fbld
fildll
lods
clc
lret
scas
ljmp
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
roll
mov
mov
mov
les
adc
and
xor
inc
add
and
ret
xchg
rep
jecxz
xchg
les
mov
inc
adc
and
xor
sub
push
xor
roll
mov
les
hlt
push
add
aaa
add
push
adc
jo
jo
dec
pop
cmpsl
mull
mov
in
rcrl
sub
out
popa
jns
fs
sahf
add
sub
xlat
cmp
or
push
xor
in
dec
out
jo
jmp
xor
gs
sub
test
mov
int3
push
push
jns
cld
mov
arpl
adc
push
mov
and
rol
in
xor
aad
mov
jmp
mov
add
xor
les
push
cmp
pop
dec
mov
aam
sti
dec
pop
fucomi
xor
adcl
mov
add
sbb
mov
hlt
mov
in
mov
adc
push
inc
sbb
and
inc
push
pop
hlt
and
test
xchg
rep
jecxz
xchg
les
hlt
push
add
adc
and
xor
inc
add
and
mov
movsl
mov
mov
daa
mov
add
inc
xchg
pop
inc
xor
push
cmp
shll
testb
insl
push
ja
push
in
push
pop
xor
mov
ret
fdivl
ljmp
push
add
adc
and
xor
inc
add
and
ret
xchg
rep
jecxz
xchg
les
hlt
push
add
adc
and
xor
inc
add
and
mov
jbe
mov
cmp
imul
in
nop
dec
fs
push
cmp
xchg
xor
pop
add
pop
xchg
push
or
es
ret
sbb
push
clc
shlb
add
filds
jecxz
jo
sub
sbb
jl
movsb
stc
jno
out
jmp
adc
push
jp
out
xor
in
pop
push
add
lea
fists
mov
shlb
mov
rclb
push
pop
js
pop
mov
cld
shrl
mov
xorl
add
js
mov
sarb
fucomi
mov
jno
nop
ficomps
add
rcl
pop
aaa
sbb
in
sbb
mov
iret
add
jbe
mov
arpl
shlb
fdivrl
push
sub
daa
cmp
jne
out
mov
pop
jg
dec
inc
mov
xlat
out
outsb
mov
xchg
mov
xor
jae
push
jnp
or
pop
movaps
sti
push
cmp
and
orl
mov
es
sbb
loop
inc
mul
inc
dec
or
loop
aam
jp
fucomi
mov
les
outsl
sub
test
icebp
cmp
xchg
daa
push
insb
test
or
cmp
adc
xchg
adc
fldcw
out
test
mov
xchg
scas
inc
mov
inc
int3
mov
jns
test
pmulhw
cs
and
push
in
cmpsl
and
sbb
xor
mov
xor
and
and
lret
fisubs
jle
popf
cltd
sbb
fwait
mov
sbb
mov
adc
jns
sub
testb
bound
sbb
inc
jg
mull
sub
repz
xchg
mov
push
ds
mov
insl
mov
xchg
dec
jle
sub
lea
sbb
mov
shlb
cmp
test
rcl
cmp
xchg
pop
inc
fnsave
push
pop
movsl
aad
js
ljmp
das
popa
sahf
test
and
stos
cmpsb
mov
pop
sbb
out
out
xor
cmp
lahf
outsb
add
pop
jmp
sub
and
cld
daa
sbb
ja
cmp
push
sub
jae
mov
inc
inc
jb
out
rorl
inc
enter
inc
jl
push
stc
lds
imul
insb
lods
lock
and
ja
loop
test
sbb
into
fidivl
gs
outsl
sub
pop
lcall
cli
scas
dec
mov
or
dec
rcll
and
cltd
daa
rolb
sbb
das
sub
add
adc
lret
push
lods
hlt
scas
pushf
mov
jb
dec
popf
je
sti
push
mov
push
mov
jecxz
jb
sti
popf
pop
xchg
bound
pushf
inc
dec
inc
ja
sbb
fidivl
adc
test
repnz
fucomp
les
xor
inc
mov
pop
loope
add
inc
fistpl
add
imul
xor
cmp
cmp
loop
push
lahf
mov
xchg
mov
repnz
iret
test
arpl
jp
in
cmpsb
add
addr16
sub
xchg
add
bound
mov
andl
into
xchg
and
outsl
push
add
jge
xor
rcrb
pusha
and
jo
shll
cmpl
dec
cmp
divl
test
mov
lret
sub
xchg
loop
adc
xchg
stos
add
test
imul
stos
cmp
lret
outsl
push
popa
cs
add
ljmp
cmp
nop
jb
sti
out
loop
cmpb
rorl
rorb
bound
sbb
andl
inc
arpl
xchg
lods
xlat
stc
out
out
and
dec
cmp
mov
lea
scas
xchg
inc
xchg
xor
les
sbb
ja
sar
xchg
pop
nop
pop
mov
push
stos
add
out
add
push
mov
sbb
mov
jge
stc
sbb
cld
push
or
popa
clc
push
and
dec
mov
rorb
jp
and
test
sbb
add
pushf
mov
push
inc
js
mov
jno
fwait
pop
pop
daa
mov
mov
and
mov
cli
gs
outsl
rorb
pop
repz
mov
cld
stos
pop
loopne
out
lahf
mov
sbb
pop
lahf
in
sub
dec
enter
mov
in
outsl
xchg
mov
xchg
scas
ja
adc
adc
aad
pop
cwtl
xchg
mov
dec
lea
jno
push
andl
ss
add
pushf
outsl
out
out
sbb
mov
pop
xchg
dec
push
mov
cmp
push
mov
xor
test
and
vpcmov
repz
cs
adc
mov
cli
mov
sbbb
cmp
fistpll
dec
sbb
ss
inc
in
rcr
rol
outsb
leave
jg
repz
in
test
inc
sub
xchg
add
mov
sbb
xor
lcall
test
out
imul
shll
xor
add
fmul
rcrl
and
fiaddl
push
insb
or
scas
sub
lock
decl
and
sbb
les
or
lods
jp
enter
xchg
aam
jb
stos
iret
jle
stos
repz
pusha
pop
dec
mov
cld
adc
ljmp
lret
adc
lahf
adc
or
pop
add
xor
xchg
xchg
or
and
test
fisttpll
mov
inc
mov
sbb
shlb
mov
cmp
push
mov
int
lahf
lea
pop
std
es
cmp
movsl
fmuls
sti
out
jp
xor
jecxz
jo
sbb
xchg
xchg
popl
rcll
scas
adc
xchg
and
scas
adc
inc
js
insb
inc
pop
and
rolb
icebp
iret
pop
adc
popl
sub
test
test
and
sub
orb
enter
dec
adc
inc
bound
ss
jbe
xor
mov
pop
jp
pop
fs
leave
sbb
mov
jbe
xchg
pop
or
jb
in
out
xchg
inc
jecxz
mov
adc
xchg
ret
roll
loopne
inc
jmp
and
jb
shrl
ljmp
sub
or
pop
outsb
lods
hlt
adc
jg
xchg
or
jmp
cltd
adc
xor
dec
testb
test
nop
xor
mov
jp
insl
or
xchg
repnz
inc
fcmovnbe
outsl
in
adc
xchg
xor
addr16
testb
adc
roll
and
jmp
in
addr16
push
pop
ret
xor
scas
mov
sti
mov
test
clc
lock
and
and
jb
iret
pusha
or
faddl
imul
adc
in
hlt
fs
mov
mov
mov
push
test
setnp
fsts
into
xor
orl
std
xchg
xchg
or
es
push
scas
add
bnd
pusha
ds
pop
jle
add
mov
movsl
popa
iret
out
mull
xchg
lock
ja
add
lds
pop
fwait
andl
and
enter
lock
loopne
cmp
or
sub
xor
pop
and
fisttps
in
aas
jnp
cmp
mov
loope
xorb
jecxz
dec
push
ret
mov
mov
aas
call
dec
pop
or
cwtl
mov
jge
cmp
xor
mov
test
jb
mov
xchg
addr16
lcall
push
loop
mov
sub
jno
mov
dec
pop
in
add
bound
xchg
rorl
mov
fnstsw
xor
xor
das
loope
in
dec
push
cltd
pop
out
les
xor
sbb
jge
bnd
push
or
push
xchg
fs
xchg
fadds
fdivrs
cmp
xor
sub
and
sti
xlat
stos
test
sbb
ss
daa
add
xchg
or
xor
sub
mov
lods
sbb
cmp
enter
xchg
mov
sbb
adc
stos
shrl
push
daa
mov
xor
ja
sbb
ja
shrl
fbstp
std
inc
and
into
std
mov
or
ljmp
xchg
cmp
mov
test
shr
xchg
xchg
mov
add
stc
xchg
mov
sbb
test
fwait
jnp
or
int3
xchg
movsl
or
loopne
jb
inc
add
jno
test
mov
mov
mov
out
push
cmp
stc
cmp
repnz
inc
adc
mov
jle
pusha
in
je
inc
push
add
fcoml
data16
into
cld
ja
inc
or
ret
pushf
loopne
out
adc
sahf
jo
jmp
mov
dec
add
xor
outsb
filds
addr16
mov
sbb
inc
xchg
and
xlat
xor
jns
sbb
int3
cmp
pop
push
sbb
mov
jae
loop
sti
mov
icebp
mov
out
jae
jnp
lock
mov
xor
sahf
sti
in
pop
clc
xor
test
cmp
push
repnz
mov
mov
mov
outsl
pop
jg
xchg
ret
xchg
and
dec
in
cmp
pusha
adc
std
gs
loopne
shl
fldcw
and
or
dec
lods
bound
jmp
sbb
inc
xor
dec
mov
push
and
jmp
cmp
in
cmp
dec
jo
jl
insb
xor
rcrl
xchg
dec
stc
daa
xchg
push
xchg
push
push
sbb
sbb
pop
cmpsb
aas
mov
orb
xor
cmp
mov
call
adc
lods
push
jge
push
cmp
mov
or
repz
pop
pusha
mov
pop
out
push
jbe
jno
or
jle
movsl
mov
mov
jg
push
sub
fsubrl
xor
add
adc
mov
add
jg
notb
inc
stos
sub
out
cmp
mov
push
sub
adc
test
stos
push
seto
sbb
or
push
add
iret
aaa
jnp
push
mov
or
notl
sahf
iret
std
insb
ret
aad
test
test
jmp
shlb
cmpsb
and
xchg
adc
mov
andl
scas
push
mov
repnz
in
adc
sbb
sub
add
jne
sbb
lea
jg
lods
aam
pop
out
movsl
or
mov
add
pop
imul
sti
lahf
xor
push
fwait
es
into
aaa
je
fwait
sti
sbb
sub
lret
mov
or
add
jmp
fcoms
push
sub
fwait
sbbl
adc
int3
hlt
dec
push
aam
sbb
adcl
outsb
movsb
xor
xchg
cwtl
rep
and
cmp
fsubr
imul
adc
add
xchg
pop
sahf
jl
cli
ds
mov
js
add
daa
mov
test
mov
ret
in
push
dec
movsb
shrl
cmp
sbb
sbb
int
in
add
mov
xchg
jae
jno
jp
add
and
test
ljmp
sbb
pushf
add
mov
mov
xor
xchg
and
rcr
mov
fcomps
push
mov
ja,pn
mov
lea
mov
sahf
cmp
stc
leave
cmpsb
dec
repnz
mov
fdivrs
pop
and
sub
clc
out
imul
icebp
dec
addr16
and
push
and
jnp
ss
sbb
xor
adc
insb
in
sar
jmp
fcmovne
int
add
dec
xchg
scas
cld
out
cmpsb
jg
test
xlat
std
and
jl
rolb
sti
inc
dec
lret
inc
or
es
mov
ficompl
insb
sbbb
outsl
xchg
loope,pn
or
xchg
ss
sub
test
cwtl
js
pop
mov
test
lods
xchg
mov
fldenv
adc
push
lcall
fidivrl
push
addr16
jge
push
mov
faddl
mov
xlat
sub
inc
pusha
repnz
xchg
xchg
adc
shrl
mov
iret
and
call
fwait
mov
or
push
ljmp
lods
sub
mov
push
dec
repz
mov
dec
mov
ja
cmp
cld
stc
sbb
cmc
xor
inc
pop
subb
ljmp
fistps
jp
xchg
aad
out
icebp
pop
repnz
lods
ret
mov
imul
sub
aad
jnp
data16
shl
push
or
pop
xchg
or
mov
sub
jl
into
loope
cmp
inc
and
stos
cmc
push
add
cmp
lds
loop
dec
sub
mov
repz
std
in
cmp
or
dec
mov
loopne
aad
out
aas
sbb
stos
mov
jge
les
push
js
sub
sub
pop
jecxz
repnz
out
pop
sub
out
cli
mov
aas
jle
add
jmp
mov
mov
mov
pop
push
daa
arpl
pop
xlat
repz
dec
add
pop
fcoms
push
mov
xorb
shrl
push
mov
stos
dec
xchg
xor
xor
sbb
inc
mov
or
or
pusha
in
out
les
fcoms
adc
pop
jl
xchg
inc
cmp
cltd
shr
out
mul
leave
sarb
je
jecxz
arpl
ret
add
xchg
cmp
mov
fnstenv
mov
mov
and
pop
lds
and
arpl
mov
out
mov
jb
or
imul
xor
cld
xchg
movsl
into
popf
cmp
int3
clc
mov
test
out
mov
insl
sbb
cmp
push
dec
jmp
cmp
in
stos
sbb
jb
arpl
or
xchg
pop
das
mov
sub
xor
dec
subl
pushf
out
jmp
std
inc
aad
aaa
cs
pop
jne
or
add
fisttpl
in
test
fimull
stc
and
pop
int3
and
aam
xchg
test
rorb
repnz
ret
les
xchg
ret
adc
push
xchg
subb
ja
mov
jmp
and
adc
fistpl
push
jle
mov
mov
cmpb
or
mov
xchg
mov
test
xor
pushf
in
cmp
lock
test
xchg
fcomi
or
insb
push
dec
iret
jmp
mov
jne
aad
ja
frstor
mov
pop
lcall
jnp
jnp
adc
icebp
mov
in
xchg
es
xor
je
pop
cwtl
div
cmp
repnz
jbe
popf
pop
addr16
fisubl
mov
cmpsl
aad
sbb
aam
cli
ret
or
dec
lahf
mov
jo
js
inc
outsl
pop
cmp
test
dec
imul
sbb
or
lock
jae
jae
mov
add
std
mov
popa
dec
add
jg
aas
les
jge
mov
fadd
idiv
call
loop
sbb
jnp
add
or
jmp
mov
add
xchg
inc
in
test
jno
call
dec
leave
test
fcoms
xor
jp
test
fnstsw
inc
addr16
push
icebp
dec
jecxz
push
fsubrl
cmp
popf
mov
mov
jmp
pop
adc
es
dec
std
ror
jb
pop
cmp
mov
ret
outsl
dec
scas
sub
test
adc
stos
lods
pop
push
sub
push
dec
and
mov
dec
jmp
mov
mov
call
push
enter
or
push
lahf
xor
cmpsb
test
int3
stc
insb
and
cmp
loope
jg
dec
mov
test
hlt
loopne
dec
cmp
mov
cs
jmp
es
mov
popa
lahf
cltd
mov
mull
jnp
inc
dec
adc
cmpsb
test
inc
scas
shlb
fistps
imul
loop
popa
xor
dec
dec
push
sbb
aam
mov
inc
in
scas
xor
add
js
mov
mov
int
fs
cwtl
and
int3
mov
mov
loope
pushf
mov
pop
clc
sub
sub
idivl
push
leave
mov
daa
pop
cld
and
dec
outsl
cmpb
cld
cli
das
mov
into
xchg
mov
push
aaa
jle
add
dec
xchg
imul
js
xor
std
adc
xchg
mov
mov
dec
jl
pop
inc
aaa
cmpsl
add
jb
lods
lds
stos
sbb
lds
xor
adc
sbb
cmp
cld
xor
cmp
rcll
dec
lods
pop
xchg
cld
loop
jle
pop
cld
bound
outsl
mov
fdivrl
push
add
push
xlat
in
fs
aas
fdivl
jo
push
adc
addb
dec
sbb
or
xchg
inc
out
sbb
xor
push
aad
loop
pop
aaa
js
add
jge
les
loop
mov
cmp
mov
rorl
pop
mov
data16
sub
clc
mov
mov
jmp
pop
out
xchg
and
pusha
dec
jp
and
adc
test
jl
fists
jno
icebp
add
adc
push
sbb
imul
fldcw
sti
fwait
mov
add
cmpsl
je
add
jbe
or
or
push
enter
xchg
cmp
arpl
mov
xor
push
dec
cld
rcrl
jbe
xchg
mov
cmc
and
mov
insb
and
insl
in
adc
ds
cmp
mov
bound
pop
jecxz
add
sarb
xchg
lahf
inc
lret
or
fidivs
fdivrs
subb
stos
nop
mov
push
movsl
jno
aad
mov
jnp
std
bound
out
movsb
repz
imul
pushf
or
pop
aas
push
test
push
inc
divb
nop
rorl
ret
repz
push
cmp
xchg
loope
pop
dec
data16
ds
sbb
lret
pusha
or
out
insb
cmp
roll
jbe
add
and
adc
mov
scas
lret
pop
adc
arpl
adc
out
cmpsl
das
jnp
aas
test
push
inc
mov
imul
adc
mov
xor
xchg
mov
test
outsl
in
ret
in
jb
sbb
add
iret
loop
and
jl
and
dec
fnsave
rcr
out
cmp
jae
ret
xchg
stos
out
lcall
je
rcrl
cmp
ret
xor
fcoml
push
lahf
mov
ljmp
cwtl
sub
mov
mov
jo
icebp
ffreep
mov
xchg
sti
ja
imul
sub
fistl
fidivs
ret
cmc
and
add
repnz
data16
out
dec
and
scas
sub
cli
fsts
sbb
aas
rcr
lcall
xlat
xorb
jecxz
outsb
loopne
shl
xchg
fisttps
clc
icebp
mov
mov
scas
and
popf
test
rolb
gs
test
push
aad
sub
push
jmp
in
lods
lahf
push
xor
push
push
ja
pop
jae
cmp
mov
movsl
fsts
adc
mov
repnz
mov
mov
pop
cmp
inc
movsb
js
push
and
sarb
pop
stos
push
mov
popa
cmp
rorl
lahf
orb
movsl
or
add
pop
loop
pop
jle
inc
dec
in
cmp
out
dec
jnp
bnd
mov
pop
mov
xchg
jb
cmpl
xor
lods
cmc
xor
or
push
push
daa
xor
scas
mov
xchg
sarb
mov
pop
add
sub
lcall
repz
ljmp
or
jno
lret
movsl
ficoml
rol
outsb
dec
imul
lret
pushf
mov
sahf
cmp
pop
rcrl
arpl
out
rcrb
scas
cwtl
int3
sarl
hlt
out
adc
jl
fbld
pop
mov
nop
mov
sbb
mov
add
xor
pop
xchg
aad
cmp
push
out
add
sahf
jae
jno
xchg
mov
and
pop
lods
push
aaa
mov
xchg
mov
lds
mov
movsl
jg
sub
mov
pop
dec
loop
mov
jne
cmp
mov
sub
push
sbb
mov
pop
sbb
popa
cs
hlt
pop
into
xchg
mov
stos
or
mov
xchg
int3
movsb
jecxz
xchg
les
hlt
push
add
adc
and
xor
inc
add
and
ret
xchg
rep
jecxz
xchg
les
hlt
push
add
adc
and
xor
inc
add
and
ret
xchg
rep
jecxz
xchg
les
hlt
push
add
adc
and
xor
inc
add
and
ret
xchg
rep
jecxz
xchg
les
hlt
lods
add
mov
fs
mov
aad
lds
fwait
push
cmc
stos
sarb
inc
or
sub
jnp
imul
lds
xchg
fildl
lahf
push
sbb
add
sub
cmp
mov
adc
test
mov
movsl
repz
les
push
fs
pop
jge
data16
dec
imul
aad
test
out
xor
stc
imul
gs
add
push
aaa
mov
imul
loopne
ljmp
out
lcall
lret
mov
push
xchg
das
mov
jnp
dec
push
mov
les
xchg
fistl
adc
in
pop
clc
push
inc
xlat
jmp
insl
mov
xchg
daa
cmp
mov
cs
jmp
dec
mov
sub
push
xchg
sub
ss
add
dec
dec
mov
das
arpl
pop
add
xor
fwait
lds
aas
in
xchg
fildl
imul
int
sub
adc
jnp
add
nop
clc
addb
xchg
in
adc
inc
dec
push
dec
or
xor
aas
jno
jno
fidivs
mov
mov
clc
mov
movsl
xchg
jle
pop
xor
and
push
pop
inc
sbb
int3
pushf
jmp
enter
lret
mov
movsl
jmp
sbb
jne
sub
jnp
imul
lds
xchg
fildl
jmp
sbb
jne
sub
jnp
imul
pusha
pop
dec
sbb
xchg
sub
or
mov
arpl
pop
aaa
sbbl
mov
inc
into
mov
lcall
fnstcw
xchg
jp
push
add
dec
pop
pop
sbb
pop
inc
pop
add
mul
popf
loopne
lods
mov
repz
out
push
sbb
lea
mov
aam
cltd
mov
inc
mov
jo
subb
inc
and
mov
push
mov
mov
ds
inc
loopne
pop
aad
push
ret
mov
jae
popf
std
test
lds
add
pusha
adc
pop
push
insb
hlt
bound
pop
imul
fwait
mov
lods
aaa
add
push
or
cli
push
sbb
rcll
xchg
xchg
cmp
into
add
enter
fmulp
jns
sahf
imul
pop
jo
push
inc
adc
fcomp
cltd
pop
stc
sbb
cmc
adc
inc
daa
or
test
or
sbb
mov
fnstsw
sahf
xchg
adc
cmp
add
pop
cs
mov
and
dec
xchg
dec
stos
xor
idivl
cmp
call
push
cmp
adc
bound
cmpsl
fidivs
adc
push
mulb
mov
cwtl
push
and
hlt
mov
adc
adc
inc
mov
add
adc
mov
xor
ss
adc
test
jp
das
adc
and
cmc
into
mov
pop
outsl
dec
pop
adc
mov
fxch
rcrb
insl
cli
sub
inc
sbb
fdivp
xor
cmc
popa
mov
jecxz
cwtl
ret
out
mov
cmpsl
jge
cltd
pop
jge
jo
xchg
push
int3
out
in
inc
or
xchg
mov
jg
fidivrs
pop
jb
sub
into
std
hlt
mov
mov
dec
and
leave
lods
mov
inc
stc
lahf
push
xchg
bound
sub
add
lods
mov
addr16
jno
sub
sbb
add
mov
jbe
aad
test
pop
xor
test
pop
gs
out
inc
bound
lods
or
dec
aad
jae
xchg
imul
std
xchg
xchg
xor
aaa
jae
cli
ret
mov
aas
and
add
fcomps
mov
pop
push
mov
jge
rolb
mov
jbe
push
cmc
cmp
xchg
in
mov
loopne
divb
or
and
lods
add
mov
cltd
add
xchg
into
push
sub
and
jp
mov
call
daa
fisttpll
sbb
idivb
pop
lods
insl
jbe
int3
and
shr
jmp
lods
loop
xorb
mov
sahf
pop
sbb
ss
adc
outsb
lods
push
std
cwtl
and
out
cmpsb
repz
cmp
aad
jg
dec
inc
rol
addr16
push
mov
divl
xorb
idivl
in
sub
inc
loope
add
sub
mov
sub
aas
jp
cld
push
and
fcomps
mov
push
cmpsb
push
dec
mov
aad
xchg
sbb
cmp
movsb
sar
jp
jmp
lods
mov
mov
add
mov
mov
sahf
jo
adc
cmp
xor
clc
xor
popf
mov
dec
icebp
sub
inc
add
idiv
gs
inc
push
movsb
movsl
and
mov
fcomps
xor
loope
or
xchg
push
icebp
sbb
lahf
sub
xorl
push
mov
fldcw
or
fistps
ret
stos
out
xor
ss
lret
cmpsl
adc
int
adc
sbb
jns
adcb
mov
xchg
out
stc
mov
out
cmp
mov
stos
xchg
mov
and
hlt
and
sbb
jno
jae,pt
in
xor
adc
dec
pop
push
jle
sub
lahf
cmpl
and
mov
in
ror
push
ds
sub
pop
jle
pop
mul
outsl
dec
add
add
inc
pop
sub
gs
je
iret
bound
or
push
push
into
and
or
mov
fdivs
or
lahf
mov
adc
imul
inc
loope
pushf
add
aad
add
jae
ljmp
lods
xchg
pop
lcall
data16
cmp
adc
or
lea
dec
sub
dec
and
into
cmpsl
das
jge
popf
scas
stos
mov
enter
mov
pushf
mov
rcl
fs
mov
jae
std
stc
adc
add
inc
movsb
sub
movsl
xchg
xor
xor
xor
xor
stc
shll
mov
add
sbb
sbb
stos
push
xchg
shrb
sub
push
dec
movsb
pop
adc
lret
inc
inc
add
jb
sub
jbe
lods
in
in
and
arpl
inc
jecxz
fidivrl
push
bound
dec
adc
clc
push
push
cmp
sti
xchg
push
jle
int
rep
popa
cmp
mov
insb
stc
mov
xchg
repnz
notb
lds
cwtl
inc
xchg
jns
and
lea
xor
mov
cwtl
xchg
xor
add
mov
sti
jmp
xor
dec
sub
ret
inc
cmp
xchg
push
mov
scas
aam
fwait
ljmp
mov
xor
inc
sub
pop
rolb
mov
ja
scas
push
push
sahf
jns
inc
les
test
xchg
lods
xlat
imul
les
scas
lds
sbb
xchg
sub
adc
movsb
aaa
je
lahf
daa
into
pop
lret
incb
je
insl
fs
adc
jl
aam
int3
inc
fldenv
cmp
rorb
add
push
cmp
cmp
pop
loopne
sub
aaa
mov
insb
test
int
adc
ficomps
xchg
inc
mov
std
mov
decb
in
out
cmp
cmp
mov
leave
xor
in
pop
mov
xchg
add
clc
insb
test
mov
fldenv
ljmp
xchg
fwait
add
jecxz
lret
dec
sub
sbb
xor
sub
cmpsb
add
adc
repnz
xor
jecxz
fldenv
push
jmp
movsl
mov
psubb
movsl
cmpl
insl
cli
sti
mov
and
arpl
cmp
and
dec
pushl
vmwrite
mov
sub
xchg
dec
jmp
xor
rcrb
and
dec
mov
mov
xchg
negl
push
leave
mov
or
sbb
fs
adc
imul
or
fisttpl
cmpsl
xchg
add
add
push
shll
sub
icebp
sub
or
sahf
pop
dec
adc
or
and
movups
add
cmp
mov
mov
push
adc
mov
xchg
mov
adc
icebp
xchg
jae
push
jno
lods
movsb
adcb
outsb
inc
test
and
gs
cmp
ljmp
sbb
imul
pop
cmpsl
jmp
jecxz
push
cs
jno
int
mov
es
xchg
pushf
mov
lahf
fldl
mulb
scas
cld
sub
add
leave
jle
push
xchg
les
mov
ds
stos
and
and
dec
int3
pushf
add
lods
inc
xor
jl
ret
insl
jae
mov
add
or
enter
testl
jno
cli
pop
sar
dec
lock
icebp
inc
arpl
dec
popf
cmp
xor
push
addb
stos
xor
push
jns
cmpsb
inc
mov
adcl
and
inc
lcall
rcl
mov
sub
nop
and
sar
enter
add
ja
clc
ljmp
mov
jns
fiaddl
cs
outsl
sbb
cmp
or
pusha
loop
lods
jmp
nop
ljmp
mov
lahf
add
jno
cmp
pushw
sub
push
sti
inc
scas
nop
aaa
sub
mov
jb
adc
adc
jbe
mov
dec
fsubl
and
loopne
mov
pop
add
pop
stos
lods
dec
daa
movsl
xchg
and
cmpsb
dec
loopne
insb
adc
in
inc
cwtl
xchg
dec
dec
adc
fwait
pop
stos
pop
cmp
mov
push
pop
jne
lea
lods
mov
sti
popf
and
or
and
add
inc
rorb
mov
push
push
pop
mov
mov
sub
shr
mov
lods
ja
sbb
sbb
lret
or
xor
enter
andl
ret
and
mov
ror
sbb
je
lret
xor
mov
mov
jge
add
leave
xchg
push
fcoml
xor
ret
cwtl
in
xor
jae
ds
and
jno
mull
add
sbb
fmuls
fisttpll
mov
and
xor
orl
cld
mov
movl
test
in
test
mov
cmc
aad
jl
rcll
pop
mov
das
jbe
xchg
ds
cwtl
mov
test
test
dec
xchg
sub
mov
xor
or
dec
cmc
mov
imul
cmp
pop
test
xor
mov
mov
fcoms
pushf
adc
nop
dec
xor
enter
clc
mov
xor
mov
mov
cmpsb
pushf
pushf
cli
ret
fstps
dec
sbb
hlt
pop
sti
mov
push
jmp
mov
fldl
add
loope
jmp
jno
sub
push
lods
xchg
insl
hlt
xchg
xor
pop
mov
xchg
cmp
addb
sub
adc
xchg
sbb
outsl
push
decl
cmp
jmp
xchg
aas
cmpsl
xchg
pop
shll
test
movsb
pop
cmp
and
mov
or
ds
xlat
and
or
shll
pop
jg
daa
out
into
ficomps
lods
push
loop
inc
test
push
mov
sub
push
aas
outsl
ret
jns
fs
jecxz
lcall
stos
dec
in
lea
jl
int3
mov
mov
or
jge
inc
inc
in
imul
insl
xchg
insl
inc
out
dec
sbb
mov
mov
insl
aam
xor
and
inc
fnsave
mov
pushf
cmp
ret
rcl
jg
leave
xor
cwtl
out
and
mov
es
mov
loop
pop
out
daa
daa
cmpl
jecxz
imul
test
dec
pop
push
mov
mov
out
bound
movsb
cld
insb
aaa
es
and
scas
sbb
sbb
mov
xchg
pop
clc
arpl
sbb
sbb
mov
jns
cld
mov
xchg
fldcw
or
in
mov
xor
jle
dec
mov
insl
ror
dec
add
pop
sub
add
into
int
xchg
dec
jae
sub
mov
xlat
addr16
cwtl
sub
pop
and
clc
sub
loop
stos
movsl
repz
insb
sub
std
pop
mov
dec
leave
xor
sub
add
mov
sbb
xchg
mov
xchg
mov
das
mov
js
addl
mov
dec
out
or
loope
jecxz
jp
push
je
and
call
push
push
jg
sarb
sti
xor
mov
mov
shlb
shll
cli
mov
aaa
lret
push
dec
add
mov
or
mov
inc
ljmp
adc
mov
jnp
xchg
push
aas
push
pop
insb
or
adc
cs
pop
xlat
xchg
pop
mov
cwtl
cmc
sahf
and
jp
sbb
push
push
pop
sbb
out
js
sub
shlb
or
push
adc
das
in
inc
cmpsb
mov
xchg
mov
cld
fldl
jbe
sbb
mov
fisttpl
lret
adc
cmp
movsl
and
ret
sahf
add
rcrl
lea
jp
imul
cmp
adc
sbb
lock
fadd
jo
stos
or
mov
aas
cmc
adc
dec
mov
jmp
xlat
mov
lock
adc
int3
adc
push
subl
jmp
inc
or
push
jb
pop
fwait
loop
test
sub
lods
in
add
sub
aam
push
mov
sbb
sbb
add
cmp
bnd
dec
or
leave
repz
call
inc
rclb
mov
xlat
adc
or
frstor
test
ss
add
push
leave
iret
adc
sbb
push
test
jb
pop
loope
mov
loope
dec
jge
lea
xor
scas
or
and
xchg
stos
cwtl
movsb
push
jge
cs
mov
sub
enter
sbb
fidivrl
mov
add
popf
pop
cli
jae
das
movsb
sti
add
cli
mov
pop
jno
cmp
jecxz
out
aad
cltd
or
adc
faddp
xor
daa
push
call
iret
add
mov
push
sarl
fistpll
or
nop
arpl
and
lret
pusha
or
int3
adc
insb
and
sub
mov
mov
xchg
daa
sub
ret
inc
mov
in
das
xchg
sbb
daa
push
sarb
stos
mov
push
pop
js
xchg
adc
xor
mov
sub
mov
sub
and
mov
fwait
pop
mov
sti
insb
cmp
jmp
mov
sbbb
mov
and
loopne
inc
rcl
bound
sahf
subl
scas
or
gs
hlt
std
int
add
jnp
sub
into
les
movsl
cmp
dec
cmp
push
cltd
add
push
mov
int3
add
fcmovnu
mov
stos
aad
in
jno
xchg
jnp
adc
mov
imul
jg
jnp
dec
lahf
adc
xchg
sub
les
jbe
imul
stos
dec
inc
addl
lahf
popf
add
xchg
xchg
call
and
push
pop
push
pop
aad
ret
arpl
call
adc
mov
sbb
sti
dec
std
std
inc
cmp
loope
mov
loop
xor
cmpsl
push
xchg
stos
rorl
jp
dec
insl
ret
insb
push
push
xor
mov
popa
jle
out
mov
sub
ljmp
xor
fsubl
push
popa
push
ss
or
dec
popf
filds
xor
mov
mov
and
lds
xor
cmpsb
out
cmpl
rcrb
cmc
mov
push
mov
inc
adc
mov
lret
or
inc
sbb
adc
jae
adc
testl
lea
adc
cmp
in
mov
aam
push
fnstsw
add
fisubrl
add
in
xchg
mov
in
loop
add
in
lods
sub
mov
test
and
ret
mov
daa
into
std
test
orb
test
imul
aam
lret
jge
xlat
mov
ret
or
mov
testl
test
sub
ret
xlat
les
xor
cmpsb
cmpsb
popf
insb
jecxz
fsubrs
mov
in
pop
faddp
add
pushf
in
xchg
add
push
decl
bound
cmp
gs
mov
inc
loope
mov
adcb
out
mov
inc
push
in
sti
push
ret
dec
andb
and
out
jmp
stc
imul
aas
aas
push
stos
popa
inc
not
sub
xor
test
or
ljmp
data16
outsb
fstps
dec
dec
cltd
adc
test
stos
mov
push
lods
xchg
mov
jp
or
addr16
subl
in
arpl
mov
cmpsb
xchg
loope
or
fimuls
inc
in
jne
nop
inc
inc
cmp
xchg
inc
stos
stos
cli
sbb
mov
and
aam
mov
pushf
push
mov
pop
sbb
popa
pop
xchg
fldt
jge
inc
xchg
mov
and
inc
inc
test
and
lods
dec
push
dec
fdivl
or
xor
cmp
cmp
jmp
mov
sub
lret
mov
xchg
in
bound
push
aam
sbb
fldt
negl
cmp
shlb
push
dec
xor
jb
and
stc
clc
je
in
push
outsb
lahf
insb
lret
jg
loop
push
mov
in
and
xchg
mov
bound
push
outsb
call
loope
mov
sbb
negb
cmp
sbb
mov
and
xor
jmp
mov
rcrb
icebp
aam
push
adc
imul
pop
icebp
xchg
bound
out
mov
or
ss
lock
sub
jmp
sbb
daa
ja
mov
fwait
adc
mov
fs
aas
scas
scas
out
mov
leave
inc
and
int
ljmp
loopne
lods
hlt
jecxz
movsb
into
cs
sbb
mov
jnp
sub
xor
hlt
cmc
movsb
add
xor
and
xchg
or
shlb
adc
mov
sbb
mov
sar
mov
pop
incl
insb
mov
cld
fucomi
xor
mov
dec
xchg
stos
xchg
push
call
sub
nop
ret
inc
shl
shlb
or
mov
mov
insl
jnp
and
sbb
subl
aaa
dec
mov
sti
push
out
cld
fstpt
jl
jle
adc
xchg
mov
sub
daa
push
iret
andb
ficomps
icebp
in
mov
hlt
in
in
adc
add
insl
test
imul
out
lods
push
shr
shlb
or
adc
in
iret
cmp
out
lods
and
sub
mov
add
dec
xchg
pop
dec
mov
add
mov
insb
aad
insb
sub
iret
sub
or
in
push
sub
add
dec
jne
dec
je
or
stos
cmp
and
sahf
or
fwait
ret
jmp
inc
movsl
or
cmp
test
imul
nop
outsb
xchg
int3
xchg
and
int
aam
sbb
sbb
pop
xchg
inc
aam
push
xchg
js
scas
cmpsb
lods
lahf
fnstcw
ficompl
arpl
scas
pushf
add
mov
lods
icebp
push
dec
dec
pop
pop
dec
imul
cmc
xor
push
test
nop
and
dec
lods
push
mov
lret
pop
js
iret
ljmp
pop
cltd
add
repnz
adc
mov
stos
jp
add
xor
sub
cmp
xchg
fisttpl
xchg
sbb
rcll
scas
mov
out
mov
xchg
lock
das
dec
cli
xchg
dec
in
mov
push
or
cwtl
test
aam
ret
mov
das
pop
mov
dec
lock
cmpsb
inc
into
and
push
sub
mov
sub
insl
add
sbb
lret
popa
addr16
in
sbbl
push
push
mov
xor
xchg
stc
js
xchg
lock
push
int
nop
jo
pop
and
fs
sti
fildl
dec
inc
repz
pop
or
xor
sub
push
rol
lods
xor
and
add
and
or
adc
scas
dec
sbb
cmc
push
jae
fisubrl
stc
mov
mov
xchg
jp
iret
adc
push
call
mov
call
pop
movzwl
push
push
roll
daa
iret
push
add
adc
xchg
in
sub
in
dec
mov
scas
daa
loopne
pop
in
jb
dec
mov
add
jb
xchg
mov
cli
jnp
popf
cmpsb
int3
jb
clc
adc
fmull
mov
cmp
fstpl
sar
mov
pop
or
and
xchg
jae
mov
subl
loopne
pop
movsb
push
adc
iret
jne
or
push
idiv
mov
mov
sets
out
sub
outsb
nop
mov
iret
cmpsl
js
inc
daa
mov
dec
adc
dec
inc
movsl
testl
aam
and
jle
fcmovne
adc
lods
int3
bound
and
xor
lds
insb
jnp
rorl
sbb
aas
xlat
jb
xor
shl
pop
pop
push
hlt
test
jnp
fdivrl
push
pop
mov
out
pop
add
mov
lahf
pusha
push
out
xor
lods
add
js
fcomip
ret
xor
pop
fadds
jmp
mov
and
xchg
cltd
or
clc
stc
arpl
or
idivl
out
inc
and
jl
insb
add
jbe
push
cmp
push
xor
daa
mov
or
fsubp
add
push
and
xchg
fdivs
mov
cltd
sub
adc
test
mov
push
stos
scas
mov
fildl
jmp
sbb
jne
sub
jnp
imul
lds
xchg
fildl
jmp
sbb
jne
sub
jnp
imul
ret
in
xchg
fildl
jmp
ret
inc
or
sub
pop
and
mov
mov
test
mov
movsl
jmp
in
mov
test
xchg
hlt
bound
inc
push
push
sahf
dec
adc
data16
in
hlt
repnz
shlb
adcb
inc
push
push
and
xor
add
adc
in
hlt
xchg
movsl
ret
movsb
mov
xchg
xchg
bound
inc
push
push
and
xor
add
adc
in
hlt
repnz
cmpsb
mov
out
frstor
je
or
adc
fsubs
push
gs
cli
lret
xchg
test
and
rorl
stc
repnz
int
add
push
xchg
or
or
pop
xlat
dec
pop
mov
insb
ret
loope
jne
dec
mov
and
popa
in
movsb
or
sbb
rcrl
mov
mov
xor
lea
lds
out
xchg
jge
pop
cltd
orb
int3
and
add
adc
mov
andl
add
pop
pushf
hlt
je
into
and
stos
les
mov
sbb
pop
rcl
mov
jne
xchg
xchg
xchg
cmp
jb
inc
push
push
and
xor
add
adc
in
hlt
repnz
movsb
mov
xchg
sti
adc
sbb
addr16
push
xor
jno
mov
mov
rol
clc
shr
loopne
cmp
jo
inc
sbb
inc
push
push
add
insb
adc
mov
out
ret
pop
and
sub
and
add
adc
in
hlt
repnz
movsb
mov
xchg
xchg
bound
inc
push
push
and
xor
add
adc
in
hlt
repnz
movsb
mov
xchg
xchg
bound
leave
lock
adc
jbe
loopne
repz
pop
movsl
push
jecxz
lcall
lock
cli
dec
stos
add
xchg
pop
sub
cmp
push
mov
cmp
mov
mull
ror
mov
fs
mov
or
mov
and
mov
add
xor
inc
sub
ret
xor
loopne
pop
pop
fldcw
jg
lcall
mov
shll
leave
imul
fcomip
jno
shll
scas
stc
inc
xchg
in
xchg
add
test
mov
in
sub
inc
imul
in
xchg
mov
aad
and
mov
jns
lock
mov
es
repz
xchg
movsb
sbb
push
mov
mov
ds
shlb
in
inc
lods
jecxz
iret
cmp
mov
pop
aaa
pop
lods
lods
inc
xor
movsl
xchg
push
std
mov
or
pop
mov
ss
cmpb
sub
add
out
pusha
inc
push
lret
mov
out
lods
fs
sub
test
add
adc
adc
xchg
sbb
xor
js
jae
in
cmp
dec
jns
mov
sbb
test
repnz
lock
cwtl
outsl
xor
mov
out
outsl
iret
insl
and
sub
adc
pop
out
pop
sub
xchg
dec
mov
stos
push
mov
stos
lret
dec
dec
or
cli
sub
enter
sub
sbb
jne
jl
pop
xor
mov
lods
xchg
inc
cmp
popf
aad
jp
fsubr
out
clc
jbe
sub
nop
mov
into
mov
lds
jne
repnz
lret
sbb
sub
jg
add
sub
cmp
sub
add
sbb
mov
lds
jmp
dec
dec
data16
mov
out
je
inc
orb
lds
out
leave
jg
insb
cmpsb
and
cmpsl
cmp
outsl
and
mov
pusha
fsubrs
pop
divl
mull
test
pushf
mov
into
jl
sbb
jecxz
aam
pop
mov
push
gs
xchg
jle
outsb
push
repnz
jl
sub
mov
pop
cmc
mov
sbbb
repnz
stos
les
push
inc
inc
adc
popl
sbb
push
and
jno
int
fists
js
fdivrs
test
fmull
or
into
loop
roll
fcom
sub
add
int
call
jge
mov
aad
jmp
ds
or
test
dec
in
xchg
into
mov
leave
outsb
or
daa
mov
xor
mov
jbe
mov
les
push
xchg
mov
inc
mov
dec
ss
cld
shll
mov
subb
jecxz
aas
lahf
lods
xorl
loop
inc
test
out
sub
push
push
sti
bound
cmp
or
cli
fisubrl
adc
aaa
pop
xor
aas
outsl
cs
loop
push
jnp
and
jmp
mov
fnstcw
lea
out
cmc
jge
in
fildl
dec
mov
jp
jae
into
cmp
push
pop
push
xor
sub
cmp
jmp
mov
mov
fadds
dec
lds
push
xchg
pop
xor
sbb
aam
pop
pop
pop
cld
xor
or
inc
stos
push
pop
sub
or
pushf
hlt
loop
test
push
test
aas
push
nop
daa
movsb
lahf
test
fdivl
jbe
je
dec
pop
inc
sti
cmp
mov
sub
inc
lret
les
sub
mov
cli
mov
and
dec
test
daa
popa
or
mulb
jno
and
gs
dec
jne
mov
ret
cs
xchg
into
xor
fldenv
imul
pmaxsw
hlt
and
dec
aas
cmp
fdivp
or
orl
enter
je
sbb
sub
int
xor
mov
lret
adc
xchg
testb
fldl
into
fidivrs
push
and
sbb
sub
pop
and
and
hlt
fmuls
dec
mov
lcall
dec
mov
loopne
xor
xchg
pop
jg
into
lahf
or
out
fbld
icebp
push
insl
dec
mov
cmpsl
adc
jecxz
push
mov
add
sbb
push
xrelease
arpl
mov
mov
nop
jp
pop
es
int3
cmpsb
mov
jmp
add
imul
test
lds
mov
in
add
cmp
inc
push
sub
fwait
clc
cmp
mov
and
inc
leave
add
aad
jbe
inc
jns
xor
pop
xchg
mov
sub
lret
popa
sbb
jae
adc
jno
mov
sbb
jns
inc
dec
mov
xor
fldl
mov
mov
mov
xchg
lds
mov
das
cmpsl
mov
mov
cmpsl
sbb
out
pop
push
jae
loop
pop
or
pop
jl
sub
and
and
cmpsb
push
das
gs
fs
movb
in
adc
loopne
pushf
jle
mov
rclb
pop
testb
xor
push
outsl
push
mov
push
lcall
mov
in
pop
mov
adc
inc
inc
lods
nop
lods
testb
ljmp
mov
sub
mov
stos
decl
enter
lret
fldt
inc
dec
mov
fistps
repnz
push
movsb
fwait
pop
lods
push
sub
add
pop
inc
cs
lcall
call
mov
je
cwtl
ds
fidivs
stos
xchg
xchg
push
ret
into
fstl
fidivs
fildl
cmp
aad
loop
nop
loope
cli
mov
or
add
pop
scas
sbb
out
ljmp
xor
ds
pop
push
inc
icebp
mov
in
notb
int
call
adc
pop
scas
pop
dec
jb
insb
or
add
or
push
js
jp
fistpl
sub
dec
mov
dec
sbb
adc
aas
loop
cs
push
popf
add
js
xchg
fidivl
in
mov
add
push
xor
fdivrs
mov
adc
out
mov
ds
mov
xor
in
inc
xchg
cli
push
cmp
bnd
push
mov
jecxz
mov
mov
ret
shlb
jnp
test
push
xor
cmpsl
add
addr16
add
addr16
pop
mov
popf
pop
popa
sub
sbb
xorl
mov
sbb
push
popf
ffreep
push
cli
gs
fsubrp
dec
icebp
enter
push
jo
in
stos
lret
cmp
mov
sahf
xchg
mov
xchg
sarl
sbb
push
fwait
and
lret
sbb
shrb
mov
rcrl
mov
xchg
mov
inc
mov
rcrb
and
or
gs
jo
jmp
mov
cltd
jle
adc
add
pop
dec
jmp
lods
loope
shl
pop
cmp
je
sbb
stos
mov
mov
mov
push
sub
fmuls
repz
pop
or
dec
mov
scas
cwtl
sbbb
subb
sbb
je
pop
cli
mov
aaa
rorb
pop
lods
push
imul
bound
mov
pop
mov
and
jb
and
adc
pop
aad
push
ret
mov
mov
inc
and
movsb
pop
xchg
adc
ret
ds
jno
xchg
sbbl
pop
mov
pop
or
lcall
cmpb
sbb
mov
jns
cmp
lret
iret
loope
bound
mov
iret
dec
mov
in
rcrl
pop
mov
test
out
ret
and
lret
push
sahf
inc
pop
arpl
and
aas
adc
and
push
jle
mov
cmp
inc
inc
idiv
rcll
mov
jg
inc
lret
jmp
push
xchg
pop
mov
addr16
movlps
std
fnstenv
cmp
std
mov
push
ss
rol
adc
das
fwait
cltd
cli
and
jp
xchg
and
add
enter
mov
insb
xchg
iret
loope
mov
and
aaa
and
popf
ja
jp
add
imul
mov
adcb
mov
pop
lcall
je
into
push
popa
push
cmpl
jl
push
jge
push
sub
popf
cmpl
sub
push
test
cmpsb
jp
xchg
push
in
jb
inc
and
and
mov
ljmp
std
dec
cmc
mov
lret
cwtl
daa
pop
and
add
aam
cmovg
mov
arpl
push
jl
pop
add
and
pop
inc
and
out
aam
in
sarb
rcl
cmpb
data16
out
arpl
mov
push
test
and
mov
jmp
stc
xor
into
xor
dec
mov
push
dec
xor
jnp
cmp
jno
sbb
xchg
xor
mov
mov
sub
dec
lret
pop
adc
push
mov
xor
enter
jae
sub
cli
and
maxps
add
xor
sub
cmp
push
fdivrs
sub
add
dec
mov
test
cli
popa
push
mov
in
fcoml
and
imul
sti
xchg
in
jl
cmp
movsl
inc
sar
jl
out
xchg
pop
testb
and
jbe
sti
inc
push
cmp
movsl
jbe
mov
outsl
fiadds
mov
lcall
sub
popl
test
ret
arpl
leave
inc
pop
adcl
fnstsw
and
pop
mov
jge
or
rorb
add
adc
imul
imul
jns
popf
cltd
jno
out
nop
jl
pop
in
adc
aaa
jns
or
push
fbstp
test
popa
mov
xor
cmp
mov
shrl
fwait
cltd
stos
inc
ret
cmpsl
insl
movsb
xor
stos
jb
movsl
jbe
mov
cmpb
push
insb
xchg
push
sbb
push
xchg
adc
mov
mov
mov
cmp
ds
xchg
and
cmp
xor
fimull
popa
les
mov
xor
loop
dec
mov
scas
push
inc
sahf
flds
pop
inc
icebp
shll
mov
fimuls
mov
rorb
xchg
mov
ret
jge
lret
pop
pop
clc
call
and
jge
push
mov
stos
ljmp
in
adc
test
cmp
outsl
xchg
mov
aaa
movsl
cmp
xor
scas
or
movsb
pusha
addr16
out
out
cs
inc
xchg
jp
stc
fdivr
icebp
gs
xchg
sub
cmp
pop
out
addb
in
leave
paddq
jnp
inc
dec
outsb
fwait
push
xchg
adc
pop
push
jle
cmc
adc
push
jne
in
lods
jecxz
cmpb
and
repnz
mov
lods
out
jmp
and
test
jb
fstpt
fidivrl
add
jo
pop
push
xchg
test
mov
pusha
movsb
shll
clc
scas
jno
sub
outsl
test
sti
mov
test
jmp
out
jnp
mov
int
xchg
mov
pop
mov
es
and
jge
push
push
fnsave
test
fs
fimuls
inc
cs
pop
jg
sub
push
push
icebp
jl
iret
loop
cmp
mov
rcrl
or
adc
mov
test
mov
push
lcall
loop
xchg
push
frstor
adc
xchg
mov
mov
clc
sbb
sub
xchg
repnz
xchg
cmp
or
inc
insb
pushf
inc
clc
pop
cmc
cmpsb
cltd
sub
mov
mov
xchg
pusha
add
xor
push
aaa
outsb
mov
dec
push
sbb
cld
sbb
mov
adc
push
xor
lods
pop
mov
adc
push
xchg
lods
call
lahf
xchg
repz
xchg
fimuls
inc
dec
pop
test
jns
xchg
popf
repz
jns
dec
jo
or
mov
leave
sbb
fcmovnu
aas
cld
aam
xor
cld
rcrb
mov
loopne
mov
cld
mov
add
xchg
xchg
xor
push
shrl
imul
mov
or
jnp
dec
data16
inc
inc
std
lods
outsb
adc
push
cmp
mov
lds
push
out
cmpsl
mov
lds
push
inc
aad
lret
or
ljmp
mov
dec
fisubs
adc
pop
out
out
test
mov
xchg
imul
frstor
in
push
or
mov
sbb
inc
jmp
jp
push
mov
xor
inc
pop
cmp
leave
pop
andl
mov
jl
jb
add
jmp
ds
pop
in
or
stc
cmovae
lods
or
mov
loope
mov
and
mov
dec
pop
push
or
xor
lds
jg
dec
aad
mov
cmpsb
or
rcl
mov
mov
out
aam
cmp
in
push
lea
push
shlb
cmp
adc
repz
leave
aam
xchg
aad
inc
lea
push
in
sub
popf
add
pop
dec
mov
int
mov
xchg
adc
inc
lock
xchg
pushf
jecxz,pt
mov
icebp
ret
out
fldcw
dec
inc
negl
push
sbb
add
cmc
icebp
dec
push
jmp
mov
mov
mov
inc
andb
js
shrb
imul
in
nop
fnsave
cmp
cmc
inc
stos
cli
sub
and
sub
dec
setbe
dec
mov
adc
sub
sub
sub
lock
fisubs
out
xchg
gs
jne
push
outsb
mov
cs
ljmp
inc
sbb
aad
aad
imul
push
int
sub
repnz
sbb
pusha
lret
rcl
adc
xchg
push
imul
pop
mov
gs
inc
inc
punpckldq
dec
and
in
xor
lahf
lods
pushf
pop
and
fnstenv
jg
mov
pop
pusha
jg
nop
shll
cmp
jmp
sti
aaa
stos
jno
jge
sarb
inc
push
out
outsb
lds
popf
int3
sbb
push
push
inc
mov
cmp
jmp
add
out
lea
xchg
loop
dec
jno
cmp
xchg
xchg
xor
in
ss
movsb
out
rcrl
inc
adc
test
cltd
clc
lock
out
pop
mov
adc
movsb
adc
aad
lret
jp
ds
push
sbb
dec
test
adc
out
rorb
and
lret
cmp
or
pop
cmp
orb
sub
pop
in
rolb
scas
jo
mov
imulb
mov
mov
mov
fstpl
xchg
pop
mov
push
xor
xor
leave
jge
out
daa
or
rorl
movsl
sub
movsl
loop
std
testl
insl
cmp
lahf
std
pop
cmpsl
cmp
xchg
mov
jp
xchg
cmpsb
rcrl
push
add
cs
dec
test
jne
icebp
in
clc
jo
mov
ds
scas
jge
ret
hlt
icebp
sti
mov
add
mov
mov
jl
cwtl
jnp
dec
ds
mov
inc
mov
fsubrs
push
and
int3
dec
and
mov
repz
jns
sbb
jo
jo
jns
lcall
adc
rorl
and
and
jne
mov
xchg
popa
jb
icebp
mov
jbe
stos
mov
bound
dec
adc
cmpsb
outsb
sbb
and
lock
scas
xchg
stc
xchg
xchg
in
fistpl
js
sub
sub
cwtl
arpl
test
jle
mov
jno
mov
jns
lret
loopne
adc
sub
cld
mov
fisttpll
out
push
pop
adcl
xchg
cltd
testb
or
adc
stos
fwait
jecxz
pop
mov
sbb
mov
test
push
clc
int
lods
jp
dec
inc
imul
pop
cli
jecxz
aam
xchg
add
daa
cmpsb
lea
mov
mov
xchg
popf
popf
mov
add
jno
sahf
pop
sub
fnstenv
mov
sub
jl
lret
xchg
or
sbb
mov
lret
sub
dec
repnz
cmc
xor
xor
outsl
stos
mov
inc
push
inc
cmp
sbb
stos
xor
sti
push
popa
ret
stos
adc
mov
xchg
cmp
add
fsts
xor
cmpsb
dec
out
ret
iret
and
jge
xchg
or
mov
pop
pop
mov
jle
stc
mov
jno
cli
jnp
popw
adc
adc
pushf
int
shlb
lret
dec
fsub
push
mov
cli
mov
clc
fcmovnb
sbb
inc
test
and
pop
lcall
add
pop
xchg
mov
cmp
jecxz
aam
jno
cmp
ror
sbb
dec
stc
in
outsl
sbb
aaa
push
popf
mov
iret
xchg
mov
ret
xor
fs
repnz
stc
fiadds
mov
inc
enter
shlb
jo
nop
pop
jbe
gs
dec
imul
cmpsl
inc
std
add
jne
pop
dec
inc
jae
test
outsl
movsb
push
push
adc
call
nop
lea
jl
movsb
hlt
sbb
pop
jl
enter
cmpb
outsl
push
mov
lret
push
jbe
inc
adc
lcall
pushl
xchg
int3
cmc
movsb
ds
sahf
icebp
sub
mov
popf
pushf
dec
movsl
push
les
aas
enter
and
cmc
lea
mov
ljmp
push
xorl
out
sub
xchg
jb
mov
sbb
mov
mov
adc
pusha
mov
pop
pop
iret
sub
mov
and
loop
lcall
in
mov
loope
jg
xor
int
ljmp
aaa
dec
adc
idiv
and
sub
scas
mov
int3
inc
cs
pop
fcmove
pop
inc
push
add
adc
sbb
and
bound
orb
pop
ficomps
call
lock
imul
xchg
mov
add
inc
es
cmpsb
cld
out
int
fsubl
or
or
mov
subb
xor
jb
lea
jbe
loop
pop
mov
jo
or
mov
icebp
cld
mov
xor
shll
in
fs
sarb
inc
push
mov
scas
std
sbb
push
mov
movb
and
dec
jecxz
cld
dec
adc
xchg
xor
mov
jb
inc
ret
pushf
mov
add
jmp
test
pushf
add
add
mov
fildll
add
cld
jb
xchg
and
or
xchg
ljmp
sbb
ljmp
repz
xor
int
scas
nop
xchg
pushf
aaa
in
mov
repnz
test
cli
pop
test
or
fstps
dec
sbb
call
or
js
loop
bound
fwait
popa
das
push
mov
insl
stc
jb
rorb
cwtl
push
or
sbb
xchg
es
mov
pop
dec
rorl
mov
mov
or
xor
arpl
cli
mov
and
push
dec
jge
rcrl
lods
aad
sub
add
in
and
divl
ret
cmp
push
sbb
aas
mov
insl
fisubl
out
clc
nop
xchg
cld
lcall
cmp
out
aad
int
jle
push
ljmp
out
xor
add
dec
int
mov
add
lahf
cmp
sub
xchg
jae
xor
aam
ud0
divps
xorb
jl
aaa
xlat
scas
dec
adc
sub
xchg
jmp
add
sbb
cmc
or
mov
pop
dec
or
jecxz
fadds
sbb
mov
popa
mov
mov
lahf
inc
lods
es
aam
mov
ss
lcall
dec
lahf
aas
lcall
fldcw
xor
cmp
push
push
iret
js
push
arpl
mov
in
movsl
pop
ret
or
push
popf
add
movsb
movsl
insb
cs
cmp
adc
sub
inc
push
inc
add
std
inc
pop
xchg
ljmp
sub
pop
cld
repnz
inc
pop
lock
inc
lds
cmp
sbb
fwait
and
jne
adc
mov
std
or
add
push
js
sbb
fcoml
js
jg
outsl
lret
or
mov
jl
out
dec
mov
pop
push
sbb
enter
rolb
cmp
sbb
push
push
inc
mov
mov
popf
subb
add
adc
cmpsb
adc
push
call
loop
jb
inc
push
push
and
xor
add
adc
in
hlt
repnz
movsb
mov
xchg
xchg
bound
inc
push
push
and
xor
add
adc
in
hlt
repnz
movsb
mov
xchg
xchg
bound
ret
and
xor
add
adc
in
hlt
repnz
movsb
mov
xchg
xchg
bound
inc
inc
push
push
and
xor
add
adc
in
hlt
pop
outsb
ret
shrl
cmp
jnp
imul
mov
xchg
push
sub
test
dec
fstl
daa
loopne
cld
pop
rclb
shlb
ja
inc
nop
push
nop
cmpsl
pusha
mov
xchg
push
out
divl
movl
aaa
lock
loopne
shlb
adcb
jns
jo
pop
xchg
dec
out
imull
sbb
or
add
imul
fidivs
cmp
xchg
fldt
iret
jl
int3
sahf
das
roll
clc
jnp
xchg
dec
xor
cmp
push
into
cmp
mov
clc
shr
rcrb
sbb
negl
loop
insb
jbe
xor
cld
daa
arpl
pop
jl
push
aaa
mov
mov
jle
nop
cmpsl
xor
pusha
rolb
lock
pop
xlat
out
stos
mov
psubw
jge
cwtl
repz
dec
les
cli
pop
pop
push
xchg
addr16
test
iret
insl
popa
lock
cmp
pop
outsl
dec
nop
inc
inc
sbb
and
cmp
popf
jo
in
aad
shlb
cli
lds
jg
subb
xchg
dec
out
divl
sbb
or
clc
aaa
call
addr16
push
hlt
out
ret
jo
inc
push
out
test
insb
aad
daa
mov
pop
xchg
outsl
mov
and
adc
ret
jo
xor
push
out
mov
mov
cltd
xchg
add
rcrb
fildll
in
and
ret
adc
stos
dec
divl
movl
aaa
lock
rclb
addr16
inc
adcb
pusha
mov
xchg
push
out
divl
movl
aaa
lock
rclb
addr16
inc
adcb
pusha
xchg
negl
popa
mov
push
sub
and
push
jbe
fwait
add
cs
fiaddl
cltd
xchg
lods
pop
jecxz
jl
pop
pusha
xor
xchg
ret
in
cld
and
pop
es
add
dec
pop
loopne
dec
insl
sarb
xor
shlb
rorl
inc
jl
popa
xchg
enter
xchg
ljmp
mov
adc
lock
fdivrl
les
jne
add
fldt
inc
inc
imul
popa
push
push
cmp
dec
pop
xchg
repz
cmp
inc
jmp
call
jp
hlt
loopne
xchg
push
sub
mov
icebp
adc
sbb
lds
sbb
xchg
mov
add
mov
mov
jmp
push
push
fadd
cmc
sub
inc
add
and
and
mov
in
dec
push
pop
imul
daa
add
pop
and
lock
sub
or
shlb
call
push
ja
data16
fists
std
dec
packsswb
std
stos
lea
data16
jl
std
sti
clc
push
outsb
push
mov
inc
jge
fs
add
sub
xchg
in
sbb
out
sub
rcl
lea
ljmp
mov
inc
ss
cli
mov
push
push
aam
jmp
test
popa
lret
push
dec
in
sti
loop
cmpsl
jb
test
test
lods
jge
sarb
push
and
in
jbe
and
xchg
pop
mov
not
ljmp
mov
imul
inc
jge
jnp
sbb
dec
jns
pop
call
push
lret
xchg
or
inc
xor
sar
push
mov
xlat
hlt
lds
sarb
addr16
cmp
imul
out
jae
sbb
scas
inc
mov
lock
xchg
inc
or
jecxz
mov
sti
push
sub
jp
jecxz
std
rcrl
fnstcw
or
sti
push
jae
cmp
repnz
cmp
jg
adc
daa
cli
or
jns
lock
xchg
cld
jge
jb
stos
enter
clc
jmp
dec
repz
push
sbb
insl
push
je
jge
mov
mov
pushf
jge
stc
mov
mov
cmc
jle
add
daa
lds
pushl
sarb
xor
rorl
stos
jne
ja
in
fwait
dec
sti
or
push
test
iret
sti
or
jge
out
dec
jle
pop
jo
adc
mov
pop
add
iret
jg
dec
cmpb
rorl
lea
popa
xchg
add
in
int3
lods
repz
sbbb
and
hlt
mov
mov
mov
mov
jecxz
cmpsl
mov
add
jnp
loopne
add
out
aas
push
in
lods
out
mov
push
dec
das
out
or
mov
mov
xchg
push
mov
cmp
jne
shrl
push
jb
inc
int
sti
mov
test
cld
push
adc
xor
xchg
scas
dec
mov
hlt
jge
fnstcw
in
adc
fadds
inc
or
mov
jp
repz
lret
in
sbb
or
lds
clc
cmp
push
imul
jle
jp
flds
sbb
test
lret
pop
adcl
xchg
jmp
push
sbb
out
stos
cmp
or
and
data16
fs
jnp
and
jno
lock
mov
test
cmpsl
imul
enter
pushf
stos
inc
inc
dec
mov
mov
filds
or
arpl
sbb
xor
cmpsl
push
or
mov
cmc
sarb
sarl
daa
jne
adc
arpl
hlt
in
pop
out
ljmp
sub
clc
mov
rcrl
mov
jbe
jmp
sahf
add
sub
xor
daa
push
cld
xchg
or
cwtl
cltd
stos
cld
mov
aaa
mov
add
in
inc
call
jo
call
pop
out
push
xchg
jp
inc
fs
mov
lar
ficompl
jb
in
xor
xor
adcb
push
lea
lock
mov
add
mov
aad
jae
mov
inc
lcall
fists
pushf
out
mov
in
mov
test
and
push
and
or
int3
jbe
cmp
inc
std
pop
jbe
mov
insl
loopne
sbb
inc
cmp
scas
rolb
enter
xchg
rcll
addl
xchg
mov
mov
push
test
ljmp
aaa
sbb
or
fcmovnb
fwait
mov
pop
dec
mov
sub
or
outsb
pop
xchg
pop
pop
lret
jno
js
pop
outsb
mov
in
or
or
jbe
sbb
mov
out
and
jno
aam
push
insl
mov
int
jl
mov
fcomip
test
es
adc
movsb
sbb
fisubl
mov
xor
movsb
pop
mov
dec
lds
pop
fs
inc
jg
mov
xchg
enter
or
push
stc
or
mov
xchg
mov
mov
xor
in
movsl
xchg
push
jno
popf
jno
xchg
jmp
jnp
hlt
bound
repz
ljmp
fsts
mov
add
outsl
and
gs
sbb
dec
stos
jg
fstpt
pop
cmpsb
aad
fildll
out
cs
das
cld
gs
mov
jmp
pop
sbb
jl
mov
push
pushf
out
or
shrl
mov
jmp
sar
mov
sbb
sub
lds
test
jecxz
sbb
mov
loop
sbb
sub
mov
push
lods
adc
jae
rcll
xor
out
pusha
or
fwait
jns
stos
jmp
add
in
jb
lahf
mov
sahf
mov
and
into
and
fbld
xor
dec
dec
and
sub
mov
jo
sub
jg
loope
push
or
pop
pop
push
in
mov
jmp
mov
fsubl
cmpsl
add
cmp
pushf
popf
dec
in
and
sub
jecxz
das
lods
nop
mov
mov
mov
stc
push
repz
sub
xchg
ret
sub
rorl
pop
ret
sti
xor
mov
aaa
test
jg
sub
inc
popa
jns
pop
sub
inc
imul
push
test
lea
divl
adc
cli
sub
add
mov
mov
add
call
mov
cmp
fnstcw
dec
jbe
adc
scas
pop
sub
je
inc
mov
pop
jmp
lcall
cmpsl
test
out
cmp
into
popf
outsl
fcom
test
movsb
fbld
mov
mov
les
pop
arpl
fldl
dec
xor
add
and
call
fs
pop
fldt
stos
mov
cmp
jp
shll
into
mov
xlat
insl
cmp
out
notl
xchg
jp
shlb
jae
nop
cld
mov
jecxz
add
sub
inc
adc
xchg
int3
mov
cmp
inc
and
fwait
inc
in
int
mov
add
jno
push
xor
fcomip
xchg
scas
mov
sahf
xor
int
les
mov
fs
push
push
jns
mov
mov
jno
lea
mov
in
jns
sub
js
mov
cmc
leave
imul
mov
push
cld
dec
test
xor
rcl
cltd
pop
inc
lret
icebp
jecxz
outsb
rcrl
xor
rorl
xchg
mov
mov
clc
mov
aaa
mov
or
pop
fisubrl
push
in
sub
sahf
dec
or
popf
cmp
mov
add
xor
stos
icebp
fwait
test
fstpt
iret
push
pop
es
inc
lcall
mov
cmp
sub
dec
sbb
imul
pop
adc
sahf
imul
jae
or
shlb
dec
adc
sbb
push
lcall
and
pop
mov
out
cmpsb
fiaddl
loope
je,pt
jno
out
mov
dec
jp
gs
pop
cmp
sbb
and
mov
push
into
jno
dec
push
bound
fistps
mov
mov
mov
or
dec
jmp
bnd
shlb
incl
aam
adc
and
xor
lods
sarb
sahf
xor
cmp
cltd
or
leave
push
dec
fstpl
and
daa
inc
aad
mov
dec
xor
dec
enter
push
and
add
sti
test
mov
mov
andb
fmull
adc
xlat
dec
cmp
add
shll
add
hlt
jle
imul
push
fisttpll
pop
popa
divb
cmpl
sbb
mov
cmp
lret
sub
mov
nop
out
fists
stc
or
jae
and
adc
setbe
jg
cli
adc
adc
push
inc
mov
popf
aam
aad
and
daa
sbb
idivb
or
imul
lret
std
mov
xchg
adc
ss
aam
les
mov
xchg
sub
sbb
enter
in
call
sub
jge
sub
add
test
iret
cld
mov
subl
lcall
adc
out
push
mov
sarl
cs
lea
popa
test
fbld
popa
sub
or
in
lret
arpl
ucomiss
mov
add
cmp
popf
jecxz
std
nop
push
stc
xchg
call
inc
gs
fldt
dec
xor
jns
in
fisttpll
clc
neg
stos
push
addl
dec
popf
mov
mov
orb
addr16
dec
sbb
push
aad
in
cmc
jae
push
mov
leave
mull
std
sbb
inc
xchg
outsb
xchg
test
mov
mov
or
xor
repnz
mov
lods
adc
or
adc
xchg
sbb
insb
mov
into
ja
or
fidivl
xchg
jl
mov
out
fcoms
mov
repz
mov
dec
cmp
xchg
hlt
add
mov
enter
add
adc
imul
mov
mov
jb
les
dec
dec
cmp
jge
push
dec
push
pop
mull
popa
dec
xchg
mov
xor
pop
stc
inc
arpl
loopne
call
jae
test
cwtl
repnz
mov
movsb
xchg
mov
ss
push
mov
inc
je
int3
sbb
inc
hlt
les
pop
leave
pop
cmpsb
hlt
popf
aaa
and
lcall
jns
xchg
stc
jecxz
xchg
push
shlb
daa
das
iret
inc
inc
imul
repz
sub
stos
sti
jp
jp
mov
dec
jmp
sbb
das
sti
jae
mov
dec
in
adc
push
pop
or
js,pn
push
adc
xor
mov
pop
lods
lret
roll
dec
lret
add
or
adc
sub
jl
mov
outsl
or
dec
rcll
shl
lahf
insl
xor
mov
push
inc
mov
leave
aad
or
out
and
add
mov
in
cmc
jecxz
and
lret
mov
jae
movsb
sub
mov
dec
mov
les
imul
inc
mov
push
sbb
jp
test
or
cmpsl
xor
fmuls
fidivrs
inc
ss
inc
sub
xchg
in
add
icebp
push
xchg
mov
jg
int
inc
xchg
ret
mov
xor
int3
hlt
add
cmp
xor
inc
inc
rol
aas
imull
mov
scas
push
mov
movsl
pusha
into
or
stos
mov
lods
jae
or
or
or
scas
dec
mov
movsl
into
mov
cmp
jne
in
fdiv
mov
lock
jns
mov
add
add
add
lcall
inc
xchg
imul
xchg
xor
lret
pop
sbb
out
add
mov
int3
mov
lods
test
lret
mov
inc
lock
dec
xchg
je
fwait
lds
cmp
mov
insb
std
add
inc
push
enter
xchg
and
icebp
cld
fnsave
outsb
adc
sub
sub
sbbb
frstor
dec
pop
inc
outsb
cmpsb
cli
hlt
lock
fs
xchg
adc
cmpb
and
pop
aam
loop
gs
pop
pop
pop
movsb
add
fsub
popf
jge
mov
inc
lods
stos
pop
or
or
sti
dec
rcrl
ret
and
and
and
add
call
xchg
lods
js
jle
and
mov
bound
inc
xor
push
xchg
popf
cmp
jne
jmp
fmull
mov
push
xchg
dec
pop
or
inc
jnp
cmpsl
push
fwait
mov
outsb
push
xor
lock
shl
or
jmp
xor
inc
scas
xchg
dec
test
dec
stos
dec
enter
es
adc
xor
ljmp
mov
test
call
inc
mov
xlat
and
out
or
mov
and
xlat
popa
aas
jg
stos
call
int
inc
rcr
lods
and
adc
mov
lea
out
jne
jmp
dec
mov
or
cmp
mov
xor
mov
cmp
js
dec
mov
shlb
jno
pop
inc
mov
pop
stos
add
je
adc
adc
je
pop
xchg
sbb
mov
js
push
repz
xchg
cmpb
mov
pusha
fs
dec
dec
adc
pop
push
cmp
dec
cmpsb
mov
fs
push
or
pop
or
jb
and
pop
adc
lock
add
and
push
lret
in
xrelease
cmp
fsts
ja
btcl
jb
mov
inc
inc
inc
dec
rol
js
addr16
fdivl
jno
std
or
sub
pop
cmp
push
ljmp
inc
insl
add
jno
pop
movl
mov
or
pop
sub
in
out
xor
sub
jle
fidivrs
outsb
pushf
adc
fs
add
dec
pusha
notl
sub
jmp
inc
mov
sti
xor
sub
inc
pop
mov
cmpl
lods
aad
add
out
in
idivl
movb
mov
popa
ja
scas
sbb
mov
mov
aas
orb
sub
pop
dec
jmp
fdiv
pop
mov
xchg
cmp
ficompl
mov
maskmovq
divl
ja
test
mov
cmp
pop
and
sbb
fwait
aas
sbb
outsb
push
pop
sahf
popa
adc
xor
sahf
in
inc
and
cmpsl
mov
rcrb
or
push
mov
incl
sub
into
sahf
xor
xchg
shrb
rcll
negl
ljmp
pop
and
add
int3
data16
sti
stos
mov
in
jmp
sbb
pop
xlat
lea
xor
imul
inc
pop
ja
insb
jg
fldt
mov
sub
xchg
jbe
dec
mov
xchg
lcall
pop
imulb
enter
cltd
cmp
pop
fcoms
mov
mov
inc
mov
or
jns
iret
xor
jno
xor
mov
xlat
push
cmp
add
fimull
hlt
add
push
jmp
lcall
lds
mov
lcall
mov
mov
jp
loop
mov
popa
or
data16
dec
dec
inc
aaa
inc
shrb
push
imul
add
cmpsl
or
push
jl
xor
data16
cwtl
or
adc
mov
xor
pop
sub
mov
xchg
outsb
pop
sub
imul
jle
sub
sar
sub
or
out
out
test
testl
or
loop
jg
sub
adcl
loopne
sahf
xor
sub
mov
movsl
adc
movsl
test
jmp
mov
leave
loopne
lret
pop
cmc
jns
in
js
cmpsl
rclb
enter
mov
call
inc
das
mov
aas
mov
mov
test
xchg
push
scas
aaa
xchg
out
inc
push
aaa
lods
jo
sbb
push
sub
gs
dec
fcoms
cmpsb
bound
not
pop
clc
sub
push
xor
sbb
dec
in
outsl
inc
push
jecxz
mov
dec
mov
iret
repnz
mov
movsb
stos
pop
and
leave
jns
jo
lock
jl
enter
dec
push
and
daa
sbb
jg
add
jnp
mov
or
mov
cmp
mov
ds
cmp
inc
in
fisubrl
mov
sub
and
cs
xor
add
sub
push
push
repz
int
jae
fidivrl
adc
stc
fmuls
jo
jg
sub
mov
add
fmulp
mov
das
jmp
imul
jp
jle
inc
clc
or
outsl
or
and
mov
sbb
mov
das
test
cli
push
xchg
mov
js
or
push
push
dec
lds
adc
fs
in
pop
fmuls
inc
scas
mov
in
jmp
mov
inc
add
imul
mov
sub
jb
in
pop
fists
out
pop
insb
fadds
xchg
mov
in
inc
inc
mov
sub
or
inc
jp
jp
sarb
xchg
dec
icebp
and
mov
call
or
pop
jmp
or
fwait
jmp
inc
mov
jns
sbb
in
fdivl
inc
mov
push
mov
js
shlb
mov
adc
sbb
mov
pop
jle
mov
or
pop
pop
sub
scas
cmpsb
fldl
int3
inc
ss
xor
add
inc
fdivrs
dec
stc
push
repnz
dec
sbb
shlb
ret
cmp
in
stos
testl
das
imul
mov
cmp
xchg
ss
test
stos
sub
cmp
sarl
cs
loopne
mov
cmp
popa
sbb
loopne
jp
mov
and
mov
mov
ss
bound
push
nop
fwait
jae
cld
pop
fisttps
fdivrs
jmp
roll
lds
push
xor
mov
mov
mov
pusha
in
popa
out
idivl
fsts
bound
push
je
xor
fidivs
xor
divb
loopne
pop
mov
mov
mov
call
inc
jecxz
test
mov
js
incl
call
std
adc
inc
pop
dec
xor
adc
lods
out
sbb
aas
dec
lea
fisubrl
outsl
leave
xor
addr16
pop
or
mov
mov
jne
js
or
mov
push
fs
xchg
add
lcall
add
push
das
adc
push
pop
ja
lock
lock
pop
sbb
out
mov
sub
test
xor
lahf
icebp
iret
in
and
inc
insl
mov
mov
cli
add
imul
xor
pop
out
in
mov
jno
add
mov
dec
lret
xchg
fdivs
imul
fbld
out
push
stos
and
cs
push
xchg
fs
rclb
fsubrl
test
and
add
cmp
dec
test
mov
clc
or
sub
push
push
add
cltd
mov
movsb
std
lds
cs
shr
movsl
fwait
js
mov
stos
bound
xor
test
push
negl
pop
popa
push
pop
sbb
push
fwait
scas
xlat
pop
cld
jb
outsl
repz
fidivrl
out
lods
push
mov
xor
fwait
jmp
imul
xchg
fnstsw
dec
sbb
ds
mov
cmc
sub
pop
mov
push
mov
pusha
jmp
cli
movsl
push
popa
push
and
lods
cmp
int3
xchg
jmp
or
pusha
mov
dec
aam
xor
pop
and
sub
push
mov
lock
inc
mov
loop
test
in
adc
ljmp
pop
fdiv
stc
addr16
fcompl
pusha
adc
test
adc
aam
lahf
insb
pop
adc
push
aad
jg
and
cmp
icebp
leave
out
cmc
pop
ror
sarb
sub
outsl
pusha
cmpsl
jo
scas
xchg
push
out
divl
movl
aaa
lock
rclb
addr16
inc
adcb
pusha
mov
xchg
push
out
divl
movl
aaa
lock
rclb
addr16
inc
adcb
pusha
aaa
jo
inc
xchg
push
addr16
xor
add
daa
loopne
lock
rclb
addr16
inc
adcl
xchg
push
out
divl
movl
aaa
pop
lods
rclb
pop
sub
dec
aaa
jg
outsl
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
pop
sahf
mov
scas
pop
mov
out
les
test
mov
movsb
rcrl
push
hlt
jle
outsb
sbb
add
xor
and
push
fiadds
fs
les
test
lcall
dec
hlt
jle
outsb
into
sahf
test
inc
fimuls
pop
pushf
out
xchg
and
push
rorb
cs
or
sub
sahf
and
jo
push
inc
fistps
add
jo
addr16
mov
pop
adcl
or
lods
push
add
mov
out
mov
dec
das
push
sahf
push
lds
imul
fmull
pop
outsl
aam
jnp
dec
cmp
sub
jge
cmpl
mov
jne
mov
xlat
sbb
push
loope
sbb
add
jb
push
xor
add
push
pop
aam
dec
ret
daa
xchg
les
movsb
jg
ds
sbb
lret
mov
mov
imul
mov
movsb
cs
mov
hlt
outsb
daa
sahf
add
xor
dec
scas
push
fiadds
into
je
fsubr
pushw
push
push
insb
ds
dec
hlt
jle
sub
jb
jo
dec
call
addr16
add
addr16
lds
xor
or
mov
jae
out
stc
cmp
xchg
pop
out
lods
pop
lds
push
mov
add
aaa
cli
inc
lret
adc
fs
xchg
push
test
mov
movsb
cs
les
jle
outsb
adc
add
xor
and
push
fiadds
fs
xchg
push
test
mov
movsb
cs
les
jle
outsb
adc
rcrb
sbb
fcoms
add
xchg
gs
inc
jo
sbb
push
xchg
aam
push
movsb
dec
and
cmp
data16
push
test
pop
xlat
cwtl
xchg
iret
lods
icebp
adc
jns
mov
out
shll
lsl
push
mov
xchg
adc
mov
cmp
fwait
rcrl
rcrl
lret
clc
jmp
sahf
cwtl
out
push
sub
es
jb
sub
mov
mov
xchg
inc
jae
daa
ja
and
sbb
enter
loopne
cmp
out
adc
lds
popa
cmc
xchg
pop
push
or
outsl
push
inc
mov
inc
xor
cmp
cmp
xor
cs
mov
fldl
jo
loopnew
daa
add
je
ja
pop
sbb
ljmp
movsl
mov
ja
inc
sahf
and
stos
pop
repnz
shlb
movsb
jbe
xorb
insl
jp
pop
test
xor
mov
xor
xchg
out
xchg
stos
adc
imul
mov
mov
cwtl
xchg
aaa
dec
jl
and
adcl
adc
insl
imul
xchg
iret
cmp
test
in
mov
leave
dec
testb
js
push
sbb
mov
xchg
push
mov
mov
rcll
mov
jp
mov
sbb
sti
sahf
cld
push
mov
pop
mov
movsl
push
jle
out
out
ja
outsb
aaa
mov
js
loope
xor
push
es
mov
jg
jp
mov
das
cmp
repnz
test
je
testb
adc
cmpsb
cmp
push
or
outsl
stos
outsb
dec
sbb
loope
hlt
push
aam
jge
xchg
add
cmp
js
arpl
shlb
add
rorl
fidivl
decb
jno
cli
inc
and
mov
push
push
or
push
rcrl
cs
mov
ja
inc
inc
sub
and
lret
movsb
lods
sub
bnd
jle
sbb
pusha
call
push
mov
sub
mov
jae
pop
inc
pop
and
jno
inc
jb
push
or
int
jmp
inc
inc
mov
pop
sub
nop
sub
mov
inc
mov
shlb
fcoms
adc
mov
and
lret
and
enter
add
leave
mov
inc
or
adc
pop
mov
dec
insl
pop
dec
sub
mov
inc
cmpsl
shl
mov
pop
cmp
mov
and
clc
ljmp
aaa
push
xor
mov
sbb
pop
adc
rclb
mov
fldl
adc
mov
addr16
test
jle
or
lea
push
scas
push
adc
mov
test
pop
stos
hlt
pop
lods
or
dec
jge
test
mov
inc
xchg
push
repz
inc
dec
and
sub
inc
adc
sbb
pop
push
cmp
add
pushf
call
push
icebp
std
ret
xor
dec
ret
lods
xor
push
push
mov
iret
les
lcall
dec
push
mov
insb
out
dec
push
adcb
add
xorb
or
stc
insl
gs
mov
jp
leave
push
mov
or
and
adc
cltd
push
mov
and
daa
push
aaa
mov
imul
sub
sti
push
stos
xchg
mov
sub
sbb
dec
pop
lret
pop
mov
jne
mov
into
jp
mov
inc
xor
jmp
jp
adcl
dec
mov
scas
jns
jle
mov
fs
push
icebp
repnz
xchg
lcall
add
push
push
or
subb
pop
mov
dec
into
mov
mov
mov
sub
push
sbb
adcl
sub
test
sbb
inc
aaa
jno
adcb
and
mov
repz
fisttpl
mov
xor
mov
jp
adc
fadd
dec
xchg
movsb
aam
push
mov
ret
mov
fsubrs
fcmovne
int
and
mov
andl
fisubs
jno
add
mov
jnp
or
sahf
adc
mov
push
int3
xchg
xlat
call
inc
xlat
cmc
dec
loope
fadd
stc
pushf
xchg
iret
stos
dec
das
pop
sub
enter
test
loope
add
pavgb
cwtl
push
dec
push
lret
pop
sbb
jmp
pop
mov
pop
popa
pop
push
xchg
pushl
mov
dec
shr
in
das
leave
movsl
dec
shll
ja
add
xor
icebp
fldt
test
pusha
xchg
cltd
sub
push
pop
xor
test
pop
ljmp
sti
add
out
xchg
mov
lea
sbb
into
dec
lods
xchg
xchg
aaa
fisttps
add
out
or
adc
pop
hlt
dec
sbb
incl
mov
push
or
insl
or
lock
jge
frstor
scas
mov
sub
data16
push
repnz
sbb
sbb
sub
jo
iret
add
subb
sub
inc
inc
test
xchg
test
push
ss
cld
xor
jge
outsb
shlb
cs
xchg
lret
scas
negb
leave
jns
scas
out
out
or
mov
mov
lods
cmp
pushf
xchg
cmpsl
scas
repnz
adc
fdivrs
jbe
ja
xor
fistps
mov
sub
cld
or
dec
enter
imul
and
in
mov
mov
js
std
xchg
xor
loopne
inc
xchg
aam
xchg
add
mov
xor
cmp
stos
popf
pop
push
out
ja
pop
or
popf
pusha
and
or
push
jp
inc
leave
out
bound
push
lahf
add
scas
das
mov
adc
popf
sbb
lcall
movsl
jne
mov
jb
hlt
push
cmp
in
movsl
les
xchg
cli
pop
cmp
adc
insl
inc
into
sbb
pop
jle
bnd
rorb
adc
add
jb
sti
pushf
lret
fadds
bound
pop
sbbb
lods
pop
pop
paddw
mov
push
leave
or
cmp
mov
lock
push
rclb
insb
lods
push
stc
insb
aaa
jno
cmp
int
mov
jmp
or
cmp
sub
test
inc
push
lods
cmpsb
xchg
push
lea
lahf
stc
nop
leave
jp
mov
bound
push
dec
lock
fcmovnb
fiadds
cmp
mov
pop
stos
stos
mov
stos
das
shrb
out
pop
pushf
hlt
cmp
andl
dec
mov
mov
push
out
sbb
inc
cmp
sub
cmpsl
pop
fs
cltd
cmpb
inc
pop
stc
mov
xchg
loop
xchg
int3
mov
dec
out
test
cs
jg
and
jo
int
push
lea
adc
inc
cmp
push
into
rclb
in
cmp
cmp
pop
in
test
dec
lcall
das
or
imul
cmp
je
jns
outsb
ja
and
mov
addr16
ds
je
mov
pop
stc
pop
paddsw
dec
bnd
idivb
pop
cmp
jecxz
mov
lods
cs
call
add
int3
rcrl
lods
cmp
jecxz
loopne
dec
jecxz
repnz
inc
xchg
sahf
inc
bound
mov
shlb
pop
push
adc
stos
xor
leave
loop
fwait
out
rcl
push
xor
rorl
fldt
push
fisubrs
xchg
sbb
push
insl
push
int
sbbl
mov
xor
icebp
inc
out
inc
hlt
loope
pop
adc
push
cmp
sub
xchg
and
or
xchg
hlt
mov
movsb
rolb
xchg
rcr
repz
out
pop
inc
xchg
shll
fisttpl
mov
xorb
xchg
pop
sbb
ficoml
jecxz
sub
shl
outsl
out
pop
push
mov
icebp
sub
ds
cli
repz
rep
dec
aad
xchg
int3
mov
cmp
std
enter
dec
pop
std
adc
mov
mov
push
xor
lds
divb
popa
stos
push
mov
insb
lcall
mov
cmp
push
test
out
into
adc
sar
xor
dec
or
push
mov
mov
mov
xchg
int
aas
jle
fimull
xor
mov
addb
mov
mov
sub
loope
cwtl
int
iret
xchg
xlat
out
movsb
pushf
push
pop
adc
dec
shlb
mov
lods
ljmp
dec
aas
xor
inc
les
mov
mov
adc
jb
sub
dec
sti
fmull
cld
fimuls
xlat
daa
fstpl
push
sbb
or
and
xchg
sbb
cmp
out
xchg
sub
sbb
push
sub
push
enterw
iret
or
repnz
xchg
push
cwtl
aam
sbb
sub
and
push
push
lahf
imul
push
mov
mov
mov
sub
cmpsb
lds
dec
not
arpl
xor
mov
inc
dec
sbb
adc
loopne
lret
leave
out
int3
lea
mov
ja
bound
mov
loop
push
pop
fcomps
adc
adc
cmp
xor
in
out
sahf
inc
stos
out
mov
sbb
fs
pop
cld
pop
and
inc
dec
adc
jbe
jns
or
cmp
aad
xchg
jg
jl
addr16
insl
aaa
cltd
xchg
mov
cmp
push
subb
or
push
xchg
imul
xchg
inc
adc
stos
adc
add
lods
add
in
dec
int3
push
mov
or
push
shll
in
in
adc
in
testl
cli
jns
jno
imul
iret
lret
or
mov
jmp
sbb
push
sub
loopne
sbb
shl
pop
mov
shl
cs
or
sub
faddp
jnp
fcomp
call
call
icebp
mov
lcall
lcall
dec
xchg
inc
sbb
mov
and
gs
jge
popa
jle
pop
cmp
inc
jmp
jle
lea
xor
mov
xor
loope
lret
ret
fdivr
sub
mov
push
test
jle
mov
mov
dec
push
pushf
js
mov
mov
stos
mov
jne
cld
sub
cmp
inc
mov
in
or
push
pop
sbb
iret
mov
and
adc
subl
xor
int3
gs
pushw
fcmovnb
das
loopne
iret
add
mov
test
jae
fcompl
out
dec
pop
loopne
nop
cmp
js
mov
out
and
push
jl
push
or
scas
or
xchg
jle
dec
sub
imul
out
sub
or
mov
jae
arpl
sbb
fimuls
outsb
xchg
ret
je
shlb
and
fdivs
push
jmp
jbe
hlt
push
out
jecxz
repnz
gs
pop
test
loop
hlt
pop
adc
loopne
in
scas
aas
cmp
negl
imul
pop
push
rcrl
das
push
movsl
stos
sub
adc
ljmp
lods
into
das
mov
and
xrelease
out
or
inc
rcll
jl
push
loop
cmc
leave
mov
sbb
cld
mov
xchg
push
bound
or
xor
jp
or
gs
cmp
cmp
push
xchg
cld
out
stos
insl
dec
inc
pop
leave
jne
fistl
into
dec
sub
and
pop
adc
scas
jmp
jne
mov
cld
lock
outsl
mov
sub
sbb
dec
mov
xor
outsb
xchg
dec
in
sbb
sbb
addr16
xchg
jns
push
ds
mov
and
sub
push
fbld
jmp
mov
add
xor
aaa
cltd
mov
clc
int
dec
xchg
out
pop
mov
jbe
rcr
roll
in
sub
dec
roll
fistl
loop
jb
into
addl
in
cmp
mov
xchg
ss
mov
leave
add
aaa
outsl
and
mov
or
je
inc
push
ret
push
jle
out
sbb
out
lods
cli
hlt
dec
stc
call
ficoml
je
cs
xchg
inc
and
loope
sub
and
cli
xchg
sbb
aad
mov
rcll
cli
out
and
and
sar
inc
decb
pop
inc
inc
jae
mov
rclb
jb
mov
mov
mov
stos
jb
lods
sub
aaa
das
and
in
inc
lds
push
enter
sub
fidivs
lods
push
jecxz
sti
or
sti
fisubs
rorl
lret
dec
loopne
mov
hlt
jae
jns
popa
or
xlat
pop
jl
xchg
insb
movsl
or
fwait
nop
xorb
pop
xchg
and
cmpsl
fsubrl
out
adc
sub
iret
xchg
out
add
ljmp
stos
sub
inc
test
xor
int3
mov
mov
xchg
jnp
dec
les
maskmovq
testl
pop
xor
mov
movsb
sbb
xor
mov
mov
mov
rorl
push
ficomps
and
add
dec
push
mov
jmp
xor
dec
lea
int
sarl
into
cmp
scas
ret
sub
lret
dec
or
jns
xor
inc
bnd
clc
cmp
pop
scas
mov
addr16
and
je
rolb
into
sbb
pop
loop
pusha
or
sbb
call
inc
jbe
cmp
frstpm(287
cs
sbbl
loop
fdivr
push
cmc
sarl
dec
ja
xor
jmp
push
arpl
rcr
push
lret
cmpsl
insb
cmp
roll
sarb
jg
ficoml
shll
jmp
xchg
push
movsb
adc
pop
xor
mov
dec
stos
pop
sbb
or
pop
out
sti
pop
pop
int
mov
add
pop
pop
inc
dec
repnz
int3
cmp
sub
mov
mov
pop
push
add
cwtl
push
sahf
adc
fldt
ret
inc
inc
call
add
lret
ror
lods
sub
cmp
or
cmpsb
std
xor
sub
loop
lods
stc
inc
out
lds
arpl
popf
lcall
cltd
daa
mov
xor
aaa
faddl
jo
or
jns
pop
inc
mov
xchg
cs
add
aas
or
mov
mov
decb
fsubrl
xchg
outsl
dec
lods
mov
jmp
fwait
jo
pop
jne
mov
mov
dec
mov
cmp
nop
add
notl
je
leave
inc
jnp
rorb
cmp
jl
arpl
aad
jle
int3
push
mov
push
shr
xchg
mov
dec
aas
sbb
mov
cmpsl
sub
sub
jg
jl
mov
xor
cmp
cltd
test
jmp
test
sub
and
fwait
sti
ljmp
cli
inc
cmpsb
cmp
in
test
sub
xor
pop
and
cli
pop
adc
push
push
sbbl
test
jne
fisubl
sub
outsb
sub
xchg
in
ja
sub
sbb
sub
inc
insb
leave
jnp
inc
fwait
rcrl
loop
leave
mov
or
jmp
lea
sub
push
div
andl
lock
ljmp
adc
inc
subl
mov
or
pop
adc
scas
mov
sub
daa
sbb
sbb
call
pop
insl
cmc
inc
sbb
jecxz
out
rcr
adc
add
imul
push
fiadds
mov
fmuls
mov
and
adc
aas
sbb
rcr
scas
mov
or
jnp
cmc
adc
adc
pop
data16
shlb
xchg
xchg
sarl
inc
cmpb
pop
push
push
int3
daa
addl
out
flds
xor
mov
push
cmp
hlt
pop
mov
and
mov
out
loopne
js
filds
push
jne
sub
ds
mov
pop
push
and
mov
jp
jmp
add
arpl
mov
je
aas
pop
loope
inc
push
imul
or
jns
mov
loop
cld
dec
das
repz
cmp
mov
cmc
or
inc
sar
or
dec
xor
xchg
in
jno
sub
stos
cmpsl
pop
fcoms
jl
loopne
add
pop
test
jne
push
call
std
add
mov
xchg
push
imul
mov
js
pop
jno
rcrb
adc
mov
dec
cmp
adc
and
dec
mov
add
lcall
inc
mov
cwtl
mov
cmp
pop
lret
mov
lahf
jle
shl
adc
gs
aas
imul
bound
push
inc
lret
push
ret
pop
or
fcmove
mov
mov
sub
inc
ret
add
pop
pushf
jb
bound
imul
out
cli
inc
adc
pop
mov
sbb
inc
lret
stc
xor
xchg
xor
movsb
das
mov
popf
jecxz
cli
add
das
imulb
cmp
push
rcrb
add
scas
sub
ds
xlat
or
test
icebp
xchg
or
loope
xor
jmp
int
dec
mov
insl
dec
outsb
adc
arpl
cmp
cltd
jae
mov
mov
sub
movsb
pop
rorb
fldcw
jae
xchg
push
jbe
mov
jb
int
cmpb
xchg
jne
and
insl
into
xchg
fisubrl
loopne
dec
aam
mov
mov
sub
or
popa
cmpsb
xor
or
jno
cltd
push
test
sbb
iret
or
fs
sbb
sub
jmp
pop
pop
fnop
ljmp
push
sbb
lock
dec
pop
enter
out
sub
dec
push
jnp
sub
loope
sbb
scas
inc
sbb
cmp
daa
mov
fistl
movsb
movb
sbb
js
cmpsb
and
mov
adc
outsb
and
notb
and
adc
mov
lcall
push
ja
sub
inc
repz
cmp
sbb
xorl
dec
push
pop
out
stc
fsubl
sbb
cmpsb
mov
sbb
dec
mov
jns
or
ficompl
clc
je
mov
cmp
cmp
ficoms
cld
pop
mov
clc
sub
fcmove
scas
stos
add
fucomp
test
out
xchg
jae
xor
inc
inc
movsb
jne
xchg
jne
cmp
dec
push
or
scas
xor
lret
xor
sub
js
shrl
xlat
cmc
xchg
mov
or
jbe
sarb
dec
mov
gs
shll
xchg
mov
jo
jge
bound
xor
cmp
mov
adcb
jmp
mov
cmp
cld
jno
int
fcmovu
insl
xchg
mov
popa
sub
daa
sub
push
sub
es
outsl
sub
pop
fsts
enter
jl
dec
loope
sub
and
ret
in
loopne
pop
icebp
das
call
fnstenv
dec
aaa
dec
jb
cmp
scas
loope
xlat
cmp
xchg
mov
std
int3
jmp
and
imul
sti
fcmovu
jg
push
inc
int
adc
in
xor
or
xor
dec
mov
loope
aam
ds
mov
cli
mov
scas
cmp
mov
dec
gs
aad
mov
in
and
and
push
cmpb
lcall
out
mov
and
imulb
lahf
repz
sub
cmp
pop
mov
sbb
jbe
arpl
dec
and
jo
add
mov
sbb
push
xchg
and
out
add
mov
roll
sub
into
rorb
addr16
mov
test
repz
adc
sbb
mov
fistpl
aam
loop
adc
fsin
sbb
jmp
test
sbb
aad
push
xchg
stos
cmp
dec
inc
pop
push
mov
mov
xor
mov
outsb
lock
push
sbb
fcomp
mov
icebp
fdivl
dec
mov
cmp
cmp
decb
stc
mov
inc
fimuls
add
mov
je
ss
out
cmc
push
xlat
xor
fnstenv
xorl
dec
outsb
fnstsw
lcall
aas
inc
pop
aad
movb
mov
mov
inc
into
je
fs
xchg
push
test
mov
movsb
cs
les
jle
outsb
adc
add
xor
and
push
fiadds
fs
xchg
push
test
mov
movsb
cs
les
jle
outsb
adc
pop
mov
and
push
fiadds
je
gs
nop
push
test
mov
pop
fisttpll
jle
outsb
or
sub
push
ficoms
jle
adc
movsb
pop
mov
sbbl
jecxz
xchg
aam
adc
fildl
divl
and
jbe
mov
adc
in
hlt
mov
movsb
repz
test
xchg
in
je
je
inc
sbb
and
add
add
adc
std
adc
int3
cmc
mov
fsts
sbb
jno
and
pop
and
negl
out
cld
mov
inc
push
push
add
mov
or
sub
xor
or
or
out
jl
out
push
loope
pop
fistpll
data16
add
jmp
sbb
or
aaa
lret
addr16
xor
mov
cwtl
xor
mov
jl
fscale
and
enter
adc
in
in
or
out
sarl
xchg
dec
out
mov
ret
jno
stos
add
data16
lods
adc
mov
jns
dec
outsb
xor
pop
shrb
adc
repz
xor
sti
add
or
adc
and
push
pop
mov
pushf
ret
stc
jae
lds
popa
sbb
add
adc
sub
out
xorl
lea
xor
adc
cmp
sub
push
dec
adc
mov
mov
mov
cmpsb
xchg
test
push
aaa
mov
pusha
and
push
or
daa
jns
mov
xchg
in
loopne
out
enter
test
adc
inc
adc
arpl
jo
add
mov
jecxz
rcll
inc
adc
jae
arpl
adc
in
hlt
mov
movsb
repz
test
xchg
ret
xor
adc
jae
arpl
adc
in
fcomi
jnp
cmpsl
insl
enter
xchg
cld
inc
jl
pop
test
dec
xchg
fists
jp
incb
cmpsb
inc
jmp
sbb
les
jo
adc
loopne
fnstsw
mov
push
or
dec
push
cwtl
jno
adc
fildl
xchg
je
stc
mov
mov
les
inc
movsb
sub
cmp
vpmacsdql
repz
sahf
lods
call
dec
sbb
ss
repz
dec
jo
cmp
inc
cmp
fwait
cli
xchg
sahf
mov
adc
lds
add
adc
lods
and
jecxz
adc
mulb
mov
fnstsw
les
in
mov
dec
scas
lret
aad
lahf
jmp
popf
pop
sahf
sub
arpl
insl
push
adc
fistpll
and
inc
mov
and
popf
xchg
les
mov
sbb
mov
adc
mov
incb
push
cmc
jp
dec
add
add
popa
add
add
stos
sbb
xchg
imul
dec
scas
faddl
mov
inc
push
insb
cltd
fs
jp
rcrb
test
gs
adc
mov
pop
xchg
sub
sbb
mov
mov
arpl
mov
data16
push
inc
outsl
sbb
stc
scas
into
pop
out
idivl
sbb
fs
adc
inc
aad
jl
hlt
out
xchg
shlb
push
mov
mulsd
pop
jmp
mov
cs
ret
fldt
mov
push
idivl
mov
sub
mov
clc
movsl
dec
mov
test
cmp
and
mov
or
test
xchg
jno
fldcw
mov
pop
sti
call
ljmp
daa
lahf
dec
div
bound
mov
arpl
lods
ljmp
push
lret
dec
sbb
mov
stos
push
dec
lods
cli
clc
out
scas
loope
addr16
push
mov
xor
and
mov
push
dec
cmp
mov
clc
mov
jmp
mov
test
lods
andb
add
pop
cmp
jno
and
sbb
data16
cmp
imul
fimuls
push
xor
push
sub
test
lock
fcmovb
cmc
jns
pop
xchg
outsb
xchg
cli
loope
out
addl
mov
push
les
cmp
jb
rorb
lea
bound
inc
lea
test
cmp
gs
mov
jbe
sub
loope
push
dec
mov
aad
pop
push
inc
adc
jno
inc
jg
aam
dec
xor
sahf
mov
aaa
mov
mov
and
loop
cwtl
test
popf
and
icebp
mov
and
add
in
rcrb
inc
mov
mov
out
test
xor
xchg
jl
cld
pop
inc
xor
cmpsb
fs
rorl
xor
popf
out
cmpsb
dec
xchg
add
mov
xchg
and
addb
xor
xchg
es
popf
imul
jp
inc
lret
mov
addr16
jle
popf
mov
xchg
xor
inc
mov
std
fists
shlb
popf
xor
and
jne
fidivrs
dec
and
jmp
push
enter
xor
pop
pushf
mov
inc
sub
fwait
pop
icebp
push
sub
aas
sbb
mov
int
cmp
fstpl
insl
mov
mov
test
fwait
adc
es
mov
xchg
jbe
scas
cld
or
add
dec
cmc
mov
dec
repnz
mov
dec
sub
push
and
add
and
cmpsb
fsubs
lcall
mov
jbe
ret
sub
out
dec
jno
adc
pop
pop
inc
imul
push
sbb
inc
jle
loopne
aaa
or
inc
jbe
imul
push
push
clc
xchg
fisttpll
mov
mov
clc
jecxz
add
je
mov
cmp
in
mov
jne
mov
in
int3
mov
mov
jb
dec
in
rcr
sbb
stos
out
mov
rorb
push
mov
cs
xchg
pop
insb
push
bound
xlat
movsb
cmp
inc
jno
dec
call
popf
dec
adc
je
fstpt
pop
ds
stos
inc
ja
pop
mov
test
cmc
rcl
push
je
mov
mov
sti
orl
adc
dec
pop
loope
mov
ss
dec
mov
xchg
cmp
dec
push
mov
adc
jmp
neg
ds
loopne
mov
stc
aaa
andb
mov
mov
jne
sub
mov
mov
into
push
xor
fnstenv
popa
aaa
lahf
shl
jp
shrl
sub
js
jnp
in
outsl
leave
xchg
in
loopne
lds
andb
in
pop
imul
pop
arpl
movsb
leave
and
shll
andl
inc
pop
test
dec
lahf
shlb
mov
pop
inc
sbbl
shrl
repz
fdivl
ret
xchg
or
inc
sub
aaa
outsl
testl
les
bound
shll
cld
hlt
mov
mov
push
cmc
pop
cmp
jmp
mov
mov
icebp
and
adc
pop
cwtl
sbb
jg
ficompl
repz
jns
inc
daa
bound
push
sti
test
test
jg
loop
cmpsl
mov
pop
ds
pop
xchg
lret
pop
test
push
and
add
dec
imul
xchg
cmp
addr16
jge
push
dec
test
adc
pop
push
stc
and
outsb
jle
dec
in
jmp
dec
mov
test
sbb
dec
cmp
sbb
cmpsl
or
mov
loop
movsb
loop
loop
dec
sbb
stos
testl
out
filds
or
cmp
imul
pop
testl
adc
pop
and
xchg
xor
out
inc
add
sahf
in
call
mov
lods
inc
sub
pop
mov
ret
push
leave
mov
or
fiaddl
mov
or
lods
mov
or
sbb
lods
sbb
les
inc
test
push
mov
xor
push
jns
inc
ljmp
jne
dec
outsl
adc
test
jle
js
fdivrp
repnz
cmpsb
cmp
mov
shlb
outsb
cmpsb
call
add
into
fld
mov
add
mov
inc
sub
sub
jnp
aad
jbe
xchg
xchg
xchg
ljmp
push
xor
lea
mov
or
xchg
inc
sti
dec
je
frstor
push
repz
or
sbb
push
jb
or
mov
push
dec
adc
inc
neg
sub
cwtl
mov
ja
sti
lock
cwtl
dec
pop
andb
fstpl
in
mov
mov
cmpsl
ret
dec
xchg
jge
and
jo
outsb
pop
clc
aaa
pxor
xor
data16
insl
inc
stc
sarb
adc
xchg
test
dec
shlb
jb
fwait
xchg
pop
sbb
hlt
mov
mov
outsl
xor
adc
pop
aad
mov
fcoms
inc
cld
ds
scas
fisttpl
mov
sbb
data16
mov
jle
and
xor
in
gs
cmpl
lret
xor
shlb
sub
or
int3
mov
dec
sub
cmp
inc
pop
cltd
mov
inc
xor
jns
fadd
mov
aas
inc
rcr
lods
or
xor
jecxz
fs
scas
cmp
xor
mov
stos
dec
jmp
xor
push
test
dec
bound
push
cld
es
mov
out
in
test
dec
mov
cmp
jo
mov
mov
and
popa
outsb
lods
push
lret
data16
add
leave
test
mov
or
stc
icebp
loope
xor
frstor
mov
bound
orl
jb
push
scas
sub
jno
cmpl
mov
clc
test
lods
xor
nop
or
dec
fs
out
lock
push
lods
and
push
pusha
dec
fcmovbe
xor
jmp
push
xor
xchg
adc
jecxz
aad
icebp
jge
add
or
out
sarl
xlat
insb
push
cmp
push
cld
scas
mov
pop
lret
push
aam
aad
xchg
mov
arpl
enter
lds
subb
inc
or
pop
pop
movsl
sbb
or
push
or
mov
adc
negl
and
jo
mov
icebp
leave
ret
pushf
test
sbb
sub
add
daa
out
and
mov
aaa
ret
sbb
lods
push
cmp
sub
mov
push
test
push
mov
mov
sbb
jae
dec
and
xchg
js
sbb
sub
pop
incl
inc
xchg
out
adc
adc
arpl
pop
cmp
cmp
jg
fsubrl
jo
xchg
out
movsb
lods
adcl
cmp
jb
and
mov
add
inc
push
jns
jne
cmc
ret
into
dec
sub
push
xor
fdivr
bound
mov
mov
pop
push
dec
or
pop
push
neg
push
xchg
rcrl
jp
jp
lret
and
mov
enter
pop
add
push
cmc
aaa
es
sub
mov
pop
xor
sub
ret
fstpt
jnp
lods
jns
outsb
int3
mov
in
int
cs
dec
pop
fldt
leave
dec
xchg
pop
pop
cmp
xlat
or
push
mov
inc
adc
pop
cld
movsb
fisttps
jo
inc
into
call
pop
ret
ljmp
mov
clc
push
hlt
and
and
xor
or
push
rolb
push
mov
arpl
aad
xchg
fisubs
fadd
dec
sub
mov
out
lock
mov
ds
cmp
sbb
in
fisubrl
jbe
jp
inc
xor
xchg
jnp
xchg
roll
adc
ds
loop
sbb
jns
hlt
movsl
pop
lea
testl
xor
std
lods
jge
loope
aam
xchg
cmp
std
pop
repz
in
fadds
mov
and
xchg
test
movsl
sbb
in
sub
daa
jge
fmul
mov
push
mov
fcmovnbe
jp
inc
int
stos
std
cmpsl
adc
or
add
dec
pusha
iret
rorb
mov
sbb
clc
sub
test
incl
cld
mov
jo
mov
sbb
or
stc
shlb
push
jl
fdivs
scas
jne
outsl
cmpsb
cld
js
mov
rcll
jno
inc
ds
cmp
lock
mov
jl
jecxz
aaa
roll
xchg
mov
mov
in
mov
pop
cli
clc
in
mov
out
test
push
mov
outsl
push
mov
dec
xor
or
lods
jp
es
mov
sbbb
jbe
adc
sbb
xor
repz
dec
adc
ja
pop
into
mov
xchg
fbstp
xchg
add
imul
cltd
fcomps
rclb
test
ds
add
mov
push
pop
mov
sbbl
std
movsl
notb
push
xorb
lock
xlat
lahf
das
fsubrl
inc
mov
lock
mov
pop
decl
test
movsl
xor
addr16
daa
sbb
mov
div
cmp
aad
mov
pop
cmc
mov
pop
fstl
inc
cmp
loopne
test
rcrb
mov
sahf
add
inc
lcall
cmovb
sti
loopne
dec
lcall
in
ds
sbb
cld
jl
lods
push
xchg
xchg
mov
das
jo
cld
or
stc
xchg
ret
cwtl
or
pushf
lds
mov
mov
pop
outsb
adc
idivl
ja
das
fsubr
cmp
jno
dec
pop
dec
push
cwtl
aaa
fwait
add
xchg
xchg
das
fnstsw
xchg
jle
sbb
popa
outsl
jo
mov
or
jne
and
imul
cmp
add
stos
push
cli
mov
shl
cld
inc
fsubr
dec
ja
mov
push
and
rol
dec
xchg
lea
clc
xchg
sub
add
add
or
subb
jl
jge
adc
insl
dec
or
cmp
jecxz,pt
xchg
sub
inc
inc
popa
lret
cwtl
pop
sbb
repz
repnz
xchg
mov
push
adc
mov
sub
push
imul
mov
dec
jbe
pop
pop
data16
xchg
lahf
push
insl
mov
rcrb
call
push
and
ja
push
hlt
nop
push
pop
push
cwtl
inc
mov
scas
mov
mov
andl
cmp
flds
xchg
mov
or
adc
stos
int3
pop
popf
test
sub
cmc
mov
sub
jle
fsub
in
lahf
push
aad
js
mov
sbb
jne
mov
push
arpl
sub
sub
ljmp
mov
or
pop
xchg
les
push
sbb
loop
imul
aam
xchg
test
jbe
sbb
into
jge
mov
scas
inc
cwtl
fcmovnb
mov
mov
dec
popa
aas
push
sub
leave
outsl
mov
and
sub
into
lods
rcll
aas
test
pop
and
out
rclb
and
lret
call
or
pop
or
add
push
movsb
lahf
test
fxch
ss
repz
fcomps
test
cmp
push
mov
leave
inc
in
xlat
xchg
adc
pusha
aam
push
adc
lods
dec
push
dec
enter
imul
push
mov
mov
and
insb
cs
ljmp
mov
je
sub
add
notl
and
call
pop
cmp
lods
imul
sbb
sbb
aad
dec
hlt
jne
xor
or
stos
shll
in
pusha
adc
push
sub
mov
mov
push
cltd
in
mov
outsb
cmc
and
stos
pop
xchg
js
mov
dec
jecxz
or
scas
cmp
mov
das
mov
stos
cmp
cli
lret
ret
xchg
inc
scas
imul
negb
mov
sbb
setno
stc
lahf
iret
pop
repnz
mov
nop
loopne
cld
adc
jmp
ja
sbb
lret
xchg
int3
int
jmp
adc
fidivrs
dec
jnp
lcall
ja
jne
scas
cltd
or
ret
sbb
mov
xchg
lods
sbb
fidivrs
xor
movsl
add
out
jo
or
into
or
dec
fidivl
aaa
pop
and
outsb
pushf
xor
xchg
push
stc
test
adc
push
cmp
lcall
scas
or
adc
push
xor
push
enter
push
sti
outsl
mov
xlat
cmpsl
lcall
add
mov
pushf
pop
testb
and
cltd
lods
jg
mov
arpl
mov
mov
pop
sub
adc
enter
mov
lahf
mov
rcll
sub
push
xchg
sahf
test
jo
sub
inc
lock
jns
pop
inc
imulb
sbb
xor
or
and
movsl
sub
mov
in
enter
repnz
stc
jle
in
sub
sbb
out
jecxz
and
out
rcll
cmpsl
push
nop
mov
mov
fyl2x
mov
out
mov
incl
dec
mov
lahf
shrb
imul
loopne
mov
mov
ret
pop
clc
orl
aam
pop
fisttps
dec
sbb
mov
rcll
ljmp
push
outsl
cmp
fcoml
out
cmp
cli
out
cltd
xor
aad
or
push
ja
cmp
div
xchg
inc
scas
mov
pop
insl
dec
and
leave
or
adc
ja
js
fldenv
push
push
lret
hlt
xchg
adc
xchg
xlat
es
sbb
es
adc
xchg
cmp
stc
inc
insb
or
jbe
std
cmp
icebp
mov
scas
addr16
mov
jg
lcall
test
gs
mov
loop
test
loop
lods
fisubl
bswap
lods
lcall
loope
or
ret
sbb
and
and
daa
jne
mov
ds
push
mov
imul
xchg
or
push
movsl
outsb
mov
or
loop
cld
insb
jle
cmp
or
imul
dec
xchg
pop
sub
inc
cmp
jmp
cld
shl
dec
mov
add
shlb
bndldx
adcb
repnz
push
cmp
test
cmp
mov
adc
mov
adc
sti
repz
and
jns
jne
fadd
in
push
mov
or
ja
dec
add
mov
out
mov
xor
xor
inc
adc
pop
push
mov
xchg
cmpsb
pop
hlt
sub
adc
jge
cmpsb
jne
xor
pop
push
outsl
loope
int3
pop
stos
data16
sti
rcrl
cli
add
sahf
dec
mov
stos
insb
repnz
push
sbb
es
adc
inc
pop
add
sub
push
xor
inc
sub
addr16
cmp
fildll
movl
or
and
enter
push
adc
jne
cli
cmp
jae
sub
ljmp
test
enter
add
shlb
hlt
imul
orl
xchg
mov
jo
mov
outsb
fs
jmp
fdivr
cmpsl
imul
insl
pop
inc
popa
inc
call
pop
mov
push
movsl
std
mov
aad
inc
add
shlb
fs
pusha
int3
xchg
and
or
pop
mov
addr16
dec
cmp
cmpsb
mov
lock
dec
rcll
lcall
xchg
mov
stc
fwait
push
rorl
push
inc
imul
into
js
push
lahf
mov
sti
das
jge
ja
sub
movsb
cwtl
int
scas
scas
insl
idivb
xor
and
and
adcl
push
sub
mov
pop
out
sbb
insl
xchg
addb
add
dec
push
fsubrs
sbb
lods
sbbb
cmp
outsb
mov
clc
out
out
xchg
sub
lret
mov
xchg
add
xchg
std
xchg
pop
test
dec
jg
pushf
sahf
ret
xor
add
das
cmpsl
mov
cmp
pop
aaa
cmp
test
or
pop
fnstenv
test
ljmp
mov
ret
sub
rclb
xchg
xchg
idivw
add
gs
cmp
cmp
cmpsb
xor
or
xchg
loopne
out
jmp
test
imul
or
and
sub
stos
jnp
daa
pop
and
stc
test
getsec
leave
popa
xor
mov
add
inc
scas
outsl
lret
sub
sub
call
scas
push
icebp
pop
jg
adc
flds
pop
inc
imul
adc
fwait
pop
outsl
push
add
add
stos
mov
xchg
insl
xchg
mov
mov
mov
sbb
inc
enter
imul
pop
add
add
negb
lds
adc
jbe
insl
push
push
or
int
pop
mov
add
sbb
mov
test
push
aam
daa
scas
pop
xor
mov
dec
fstps
in
cmpsl
mov
mov
mov
clc
loopne
ds
dec
outsl
and
xchg
stos
sbb
fdivs
nop
ds
roll
pop
jecxz
fimuls
jge
xchg
pop
and
sub
dec
and
cmpl
cmp
jle
or
decl
push
dec
cmp
jle
jb
mov
faddl
and
lret
cltd
sub
idiv
test
or
outsl
inc
repz
ret
add
mov
ret
pop
jp
aad
pop
outsb
in
stc
mov
negl
jns
fwait
das
xor
into
push
test
dec
stos
dec
dec
enter
xchg
cltd
xor
jno
movsl
icebp
shll
sub
icebp
or
cwtl
sub
shr
sbb
add
int
lret
xchg
jp
arpl
scas
inc
sahf
mov
xchg
lea
lock
call
add
or
pop
sub
inc
xchg
imul
pop
adc
mov
xor
cld
sti
add
push
push
nop
or
pop
mov
cmp
jmp
test
and
cmp
frstor
loop
repnz
test
mov
cmp
mov
lahf
push
loopne
faddl
enter
mov
stc
das
jge
inc
mov
repz
dec
dec
hlt
mov
and
std
movsl
cwtl
lods
js
pop
rcll
mov
outsb
mov
or
mov
fldl
aam
movsb
repz
test
xchg
ret
xor
adc
jae
arpl
adc
in
hlt
mov
movsb
repz
test
xchg
ret
xor
adc
jae
arpl
adc
in
hlt
lods
les
mov
test
xchg
ret
xor
adc
ja
arpl
push
cmpsl
in
testb
aam
cmpsb
repz
add
adc
fwait
int3
mov
push
or
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
adc
data16
jmp
aad
mov
insl
nop
insl
pop
add
push
or
add
add
pop
add
jae
outsb
add
popa
add
add
or
rolb
sbb
roll
add
or
jae
inc
add
ja
add
add
add
fiadds
addl
scas
add
add
add
call
add
add
mov
inc
add
add
add
mov
iret
add
add
add
mov
add
add
add
and
inc
add
dec
add
data16
icebp
add
js
xor
jnp
cmpsb
add
mov
add
mov
add
mov
add
pop
add
xchg
add
add
add
add
lcall
add
add
inc
add
add
add
insb
add
add
add
dec
add
add
add
add
pop
add
add
add
add
add
add
inc
add
add
add
inc
add
mov
add
sub
add
add
add
add
sbb
sub
add
add
addl
dec
add
jmp
add
add
stc
add
add
add
push
add
xor
add
add
add
arpl
dec
add
add
jae
jecxz
dec
add
cmp
out
and
add
add
add
ret
add
cmp
push
add
add
add
add
dec
add
add
sbb
adc
push
add
add
pop
add
cmp
push
add
add
add
add
add
sub
add
add
add
add
faddl
mov
dec
add
call
add
add
lcall
add
pushf
add
cmp
js
in
add
in
add
gs
add
xchg
add
add
jecxz
dec
add
out
lahf
add
add
add
mov
add
and
rolb
add
or
add
inc
add
push
add
add
add
add
add
add
adc
jle
xor
roll
cwtl
add
add
in
add
mov
add
add
add
add
add
add
add
add
add
movsl
add
add
add
clc
add
pusha
add
add
or
add
sahf
add
jle
xor
adc
in
add
add
add
add
add
add
in
add
popa
add
add
add
and
add
dec
add
add
add
add
add
add
add
dec
add
add
fiadds
jle
sub
leave
add
xchg
add
add
add
add
push
add
sbb
sub
push
lcall
add
scas
add
mov
pop
add
and
and
push
add
add
add
jecxz
data16
imul
dec
add
cmp
add
add
add
add
mov
mov
and
dec
add
add
add
scas
add
mov
roll
int
xor
add
add
add
add
inc
add
add
add
mov
sbbb
jns
xsave
bound
lret
lock
neg
adc
cmc
test
std
lret
push
sub
leave
dec
sub
sub
and
add
sbb
jmp
mov
pop
daa
pop
mov
mov
mull
mov
push
lock
and
or
idiv
sub
adc
inc
push
out
xlat
flds
add
stos
out
push
aam
movsl
mov
pop
push
sbb
mov
addb
in
inc
out
fcmovnb
imul
subb
mov
jno
lock
push
bnd
pop
add
test
sbb
pop
call
sbb
aad
pop
push
jbe
les
leave
out
es
push
jo
in
mov
mov
cmp
jnp
jb
pop
ds
jmp
lret
xchg
dec
cmp
push
ss
scas
cmp
adcl
mov
insb
sbb
lahf
call
shrl
shl
dec
sbb
lret
cmpsl
cmp
sub
ret
jl
fs
xchg
cmpsl
cmc
jl
mov
cmp
xor
shl
loope
xchg
cwtl
sub
out
cmpsb
push
push
loopne
fdivs
sbb
scas
fisttps
adc
out
stos
dec
pop
push
add
or
cmpb
dec
push
mov
jo
pushf
mov
aad
fdivs
dec
push
sbb
ds
push
movsb
hlt
sbbb
testb
pop
and
mov
jge
push
in
test
inc
data16
bound
push
mov
inc
pusha
aam
mov
jp
xorb
ds
fsts
pop
fstp
ret
dec
cmpsb
jno
cli
xor
dec
cmp
mov
insl
add
lock
or
sbb
popf
js
stos
imul
xchg
in
cmpsl
mov
in
stos
lahf
lret
mov
pop
xor
push
std
jl
aaa
cmp
stc
jle
inc
xrelease
inc
lret
inc
cmpsl
out
inc
in
mov
rorb
push
insl
add
lods
sbb
jbe
rol
push
addr16
and
jmp
ds
mov
sub
test
sbb
jmp
bound
fmuls
push
out
fists
scas
xor
cmpsb
add
clc
jg
xchg
testl
icebp
or
xor
mov
clc
fs
or
mov
jnp
call
pop
rolb
inc
jg
pop
xchg
pop
divb
shlb
inc
data16
pop
xor
xchg
testb
and
lcall
xchg
xor
pop
ds
mov
or
sbb
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
