fsubr
loopne
decl
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
fs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
push
push
push
push
call
push
lea
push
push
call
add
leave
ret
loopne
repz
ret
lods
sarl
mov
mov
pop
inc
sub
xor
add
repz
scas
lods
sarl
sub
cwtl
arpl
push
cmp
add
jge
lea
popf
push
lods
or
popf
in
xchg
std
pop
or
ss
dec
or
push
or
sarl
cmpsl
ja
xor
mov
loope
jbe
jbe
les
sub
xchg
pop
mov
inc
push
xor
gs
ja
sbb
scas
sub
pop
outsl
push
add
in
sub
popf
mov
mov
lds
xor
mov
mov
sbb
sub
xor
das
mov
add
jmp
int3
mov
jl
xchg
sbb
jmp
mov
add
adc
dec
push
dec
mov
inc
cmp
or
or
push
cmp
sti
add
outsb
mov
adc
push
jl
cmpsb
je
or
cmpsl
ret
pusha
or
mov
lods
sarl
sub
std
movsl
or
arpl
xor
cmp
in
stos
cld
int3
mov
test
arpl
add
jle
dec
push
cmp
push
jbe
scas
loope
icebp
mov
mov
lret
cwtl
jbe
roll
and
dec
sub
sub
or
int3
lahf
into
mov
pushl
std
arpl
push
cmp
add
jge
repz
ret
lods
sarl
sub
std
arpl
push
cmp
add
jge
lea
add
adc
cmp
in
mov
addb
pop
js
mov
mov
fwait
inc
mov
lea
xchg
mov
mov
pop
adc
fwait
shll
xchg
adc
jge
pop
ds
movsb
cmp
imul
push
xlat
mov
cmpsb
adcb
pop
into
and
insb
subl
cltd
mov
mov
mov
push
fbld
out
ficomps
int3
mov
es
mov
add
mov
xor
ljmp
jne
add
movsb
sbb
push
pusha
test
xchg
fistl
test
xor
push
loope
pop
xor
push
call
sti
pop
addr16
xchg
push
dec
jbe
sbb
fsub
pop
or
cwtl
inc
pop
pop
fisubrs
mov
add
stos
add
push
insl
ret
mov
xchg
pop
sub
mov
aam
jle
jl
imull
je
jbe
test
incl
fs
stos
adc
cmp
lock
jno
insl
hlt
mov
rcll
inc
ja
ljmp
mov
test
scas
jae
fstl
pushf
and
ljmp
pop
jecxz
jp
insb
dec
das
xchg
repnz
ficomps
test
test
call
push
pop
stos
or
mov
pop
jg
enter
and
inc
notl
scas
scas
xor
add
flds
push
jb
push
inc
push
push
jmp
mov
xchg
mov
gs
dec
inc
or
and
dec
xchg
inc
push
jnp
pusha
and
and
jo
scas
push
cmp
bound
inc
xor
jmp
js
inc
repz
mov
insb
inc
je
jns
jo
andb
add
outsl
jge
js
add
push
pusha
je
enter
sbb
dec
stos
ror
mov
mov
push
mov
push
mov
sbb
mul
mov
and
xchg
popf
xlat
addb
cmp
cwtl
xchg
cld
mov
movsb
sbb
add
and
and
xor
cmp
and
and
xor
divl
xchg
idivb
pop
idivb
cmp
add
aas
mov
jne
dec
mov
gs
repnz
inc
jno
orb
xlat
xor
pop
or
pop
shll
xor
aas
sub
iret
das
scas
dec
mov
ret
and
mov
mov
xchg
int
or
mov
mov
mov
jmp
je
jp
rclb
lock
movsb
sub
addb
dec
arpl
adc
or
sarb
test
inc
sbb
xchg
test
test
and
dec
addl
mov
pop
add
pop
test
dec
sbb
push
jbe
xchg
adc
aas
cmp
dec
push
pusha
inc
rolb
stc
jb
daa
psllq
cmp
push
popf
mov
cmp
dec
mov
lods
push
addb
mov
jecxz
out
sub
xchg
adc
pop
cld
pop
inc
adc
push
jl
aaa
mov
push
stos
ss
cld
xchg
inc
stc
fistps
jbe
sbb
clc
inc
jns
incl
mov
scas
flds
sub
pop
and
mov
jno
pusha
icebp
into
sub
mov
adc
fisubrs
mov
cmp
sbb
mov
call
pop
iret
and
add
jg
shlb
loopne
mov
xchg
push
and
shll
pop
cmpsb
jge
cmp
adc
loop
call
xor
dec
cmp
cltd
sbb
fdivrl
clc
or
sub
aad
pop
mov
lds
std
mov
xchg
push
add
add
fbstp
scas
pop
push
decb
cli
popa
sbb
std
das
iret
arpl
sarl
jmp
mov
adcb
and
mov
pop
movsb
dec
jno
cmp
jo
dec
out
rclb
pop
fcoml
lds
pop
adc
test
int
jb
shrb
mov
add
jbe
xchg
cwtl
push
sub
xchg
movb
jae
sahf
jbe
push
sbb
jno
insb
ss
scas
popf
sub
and
daa
jae
or
xor
arpl
xor
roll
das
iret
in
jbe
jnp
cltd
push
int
das
cmpsb
inc
sub
pusha
xchg
jo
nop
mov
sbb
fs
jecxz
adc
ret
push
add
mov
pop
icebp
sbb
pop
push
sahf
sbb
call
inc
icebp
xor
popa
mov
ret
xchg
push
or
cmp
arpl
adc
pop
jb
and
or
mov
subb
push
jbe
jne
xchg
sub
push
dec
fs
repz
jne
jg
push
pop
int
add
sbb
dec
adc
dec
pop
pop
out
mov
mov
fisubs
je
push
andb
adcb
jb
int3
xchg
cmpsl
xchg
rcrl
fsubl
jns
mov
fidivrl
ds
xorl
adc
sub
cmpsb
push
test
jnp
repz
subb
into
rcrl
xor
mov
jne
sbb
push
mov
loopne
adc
ret
lock
shlb
fcmovne
dec
xor
dec
arpl
dec
add
xchg
loope
mov
jb
jp
xor
adc
das
and
pop
sbb
push
and
mov
cmp
lods
jne
jns
mov
inc
and
insl
push
mov
pop
js
sub
dec
loopne
jae
lahf
ja
ja
pop
push
pushf
popf
fs
inc
pop
dec
and
divl
out
and
int
dec
mov
std
xchg
cmp
mov
add
lock
jle
movsb
xor
shl
jo
push
xlat
bound
dec
aas
icebp
xor
leave
and
cmpsb
inc
pop
fs
stos
sub
jp
jns
add
sbb
rcll
adc
in
cmp
mov
pop
pop
mov
mov
insb
scas
add
mov
pop
fcmovne
add
repz
mov
fs
in
es
inc
pushf
push
stc
jecxz
clc
xchg
ja
jmp
loopne
or
cltd
icebp
ret
bound
and
pcmpgtd
xor
mov
add
sub
scas
push
bound
pop
sbb
lahf
imul
mov
movsb
shlb
jecxz
out
stc
jo
std
mov
stc
es
mov
xor
pop
repz
call
les
mov
repz
or
push
inc
scas
orl
jno
sahf
or
mov
mov
xchg
call
fcmovnbe
inc
addb
cs
pop
mov
shlb
add
enter
mov
mov
test
push
pop
pop
jmp
or
lea
fdivs
dec
mov
insl
sti
loope
sub
mov
xorl
ljmp
outsb
das
xlat
mov
leave
mov
sbb
fsubp
mov
cmp
mov
lahf
xor
loop
cmc
subl
flds
xor
lret
push
mov
cmpsl
pop
mov
ljmp
aaa
xchg
inc
gs
mov
sub
int
movsl
add
addr16
xchg
push
xor
stos
sub
sbb
in
fs
cwtl
bnd
mov
mov
and
mov
xor
movsb
in
popf
pop
ja
xor
das
popa
push
in
push
sub
out
push
pop
pop
mov
mov
pop
cmp
mov
jne
pusha
cmp
mov
lcall
in
aaa
gs
stc
cmpb
and
or
movsb
lea
scas
scas
mov
mov
rcr
dec
test
jnp
test
sub
adcb
push
sub
icebp
fists
ja
ret
mov
ja
movsl
cld
inc
xchg
mov
cmpsl
or
stos
ja
fdivrp
xor
jge
lods
push
dec
cli
adc
lods
mov
mov
inc
mov
cs
pop
fldt
jmp
push
sti
dec
and
cmp
pushw
push
int3
aam
in
loope
dec
mov
iret
clc
push
sbb
std
mov
cmp
addr16
adc
cmc
or
test
dec
data16
cmc
adc
jbe
mov
aas
cmp
faddl
add
aad
push
lret
lret
push
xchg
sarb
xrelease
cld
jp
mov
loope
rcrl
mov
cld
imul
mov
mov
and
call
and
je
xchg
ret
push
cmp
dec
xor
fmull
divl
shlb
icebp
or
repz
ss
sbb
or
jno
lret
mov
mov
adc
add
mov
jl
movb
fucom
js
mov
scas
jg
lret
call
repz
loopne
lret
sahf
nop
fnstenv
cli
sub
mov
jbe
sbb
sub
mov
sbbb
inc
mov
inc
and
test
lods
mov
mov
mov
clc
mov
outsl
mov
jb
xchg
add
lret
inc
mov
fldl
xor
flds
shrb
cli
test
mov
scas
mov
test
test
lret
out
into
mov
pop
fists
rcr
dec
mov
jb
dec
inc
aas
test
pushf
fcmovne
stos
mov
scas
mov
lcall
and
fs
std
test
push
scas
jne
mov
push
fbld
mov
mov
xor
insl
xor
sub
or
mov
nop
and
stc
inc
mov
adc
xor
outsl
ficompl
or
cmpsb
pop
mov
add
mov
mov
iret
int
movsl
xor
rcrb
dec
add
movsb
rep
cltd
xor
testl
dec
sbb
mov
mov
fldt
jo
push
ljmp
xlat
jp
vpsubsb
test
inc
js
fisubrl
dec
inc
sub
xlat
inc
jecxz
sbb
jno
mov
pusha
out
jle
ss
stc
rclb
jo
in
mov
push
jle
andl
mov
out
xchg
xor
mov
out
jle
dec
xchg
inc
decb
addl
cmc
sub
pop
jo
jl
push
jnp
add
daa
incl
push
mov
sub
xchg
inc
xchg
lret
hlt
jno
sbb
adc
push
add
andb
or
jae
daa
into
mov
lds
movb
les
arpl
test
fdivl
jbe
lock
or
dec
add
fildl
stos
negb
imul
dec
aas
cmp
and
loopne
cmp
shlb
mov
jns
rolb
and
pop
pushf
mov
not
scas
push
cmp
and
xchg
adc
lock
mov
adc
fdivrp
stc
jmp
adc
xchg
jl
push
push
test
clc
jns
push
pop
mov
cli
popf
in
dec
pop
cmpb
jl
or
jns
test
sub
lahf
pop
mov
add
inc
into
lahf
jmp
adc
xor
pop
sub
repnz
or
std
cmp
iret
sbb
ljmp
cld
xor
push
data16
pop
adcl
xchg
cli
inc
movhps
xlat
fsubl
jbe
mov
sbb
jmp
cmp
lahf
subb
jne
fidivrl
xlat
fcoms
cmp
pop
push
inc
push
lods
cmpsl
adc
and
popf
scas
and
sub
lods
insb
and
andb
adc
in
sbb
mov
cmp
shrl
sbb
adc
loop
pop
jle
xor
sub
mov
arpl
push
daa
cmpsb
andl
rorl
or
cld
push
mov
mov
notb
fdivrs
cmpsl
sti
in
pop
dec
jl
mov
push
xbegin
jge
adc
nop
xchg
push
xchg
or
mov
icebp
mov
sub
imul
mov
or
enter
out
test
or
leave
sti
adc
jb
cmpl
or
das
cmp
pop
je
adcb
dec
inc
pop
fs
jo
cmp
jge
jmp
icebp
sahf
and
aaa
aam
pop
lds
ljmp
aad
pop
pop
add
jge
in
lcall
insl
test
or
mov
and
or
je
test
jmp
pop
loopne
test
lock
movsb
repz
lahf
int
in
cld
mov
mov
pop
mov
mov
sub
aam
arpl
repz
loope
xchg
loop
jbe
dec
push
xor
jno
push
or
in
movsl
jns
ja
mov
sub
lcall
sbb
jmp
dec
mov
out
je
and
sub
sub
xor
push
add
es
inc
and
shll
push
pop
xor
xor
insb
insb
data16
and
sarl
adc
enter
ljmp
dec
and
push
mov
test
pop
xchg
mov
decb
add
outsb
xchg
dec
xchg
xchg
or
xor
dec
adc
sbbl
xchg
test
mov
dec
fildll
insl
cmp
bound
sbb
in
lds
daa
in
push
lret
lret
pusha
hlt
or
insl
sbb
mov
enter
push
pop
mov
in
dec
pusha
adc
or
dec
mov
aaa
insl
add
push
cld
and
mov
cmp
int3
dec
into
lods
repz
adc
fisttps
pushf
ret
daa
sbb
mov
ret
in
add
je
inc
into
test
adc
sbbl
lcall
imul
sbb
arpl
stos
mov
fmuls
imulb
dec
shlb
aad
inc
fimull
test
lea
sbb
mov
inc
mov
into
or
fs
jl
inc
jmp
mov
push
dec
test
and
and
std
scas
in
loope
xor
pop
dec
mov
dec
dec
sarb
xchg
loope,pt
rol
sbb
int3
gs
pushl
pushf
pmaxub
jno
jp
iret
push
cli
int
adc
mov
mov
dec
mov
xchg
cmp
or
into
dec
int3
insl
and
push
aas
rcr
jg
push
js
xchg
cmpsb
aad
fbld
mov
jmp
or
sbb
mov
mov
ljmp
movsb
ficoml
daa
test
ja
pushf
fsubs
cs
rcll
pushf
or
add
bound
loope
ja
xor
jne
xlat
cmc
dec
adc
xor
and
repnz
test
push
dec
mov
pop
jecxz
or
or
mov
movsl
mov
movsb
jns
cltd
jns
popa
or
lahf
les
sar
dec
add
push
xchg
lret
xchg
mov
mov
dec
push
or
push
iret
iret
lods
pop
xor
in
cmp
ficoml
ret
aaa
cmp
adcb
fcoms
enter
push
std
stc
call
push
in
lods
in
pop
adc
icebp
hlt
popf
jnp
jge
cmp
in
adc
xchg
xchg
cmp
or
fimull
mov
dec
sbb
jg
jp
out
and
insl
out
movsl
insl
clc
lock
dec
xchg
jne
lret
xchg
jge
nop
cli
loopne
cmpsb
xor
movsl
push
and
and
jne
aaa
adc
insb
cmpsl
and
cmp
or
sbb
push
mov
outsb
mov
nop
xlat
add
rcrb
pop
and
jmp
mov
loope
cli
stos
cwtl
jle
notb
push
fisubs
mov
stos
fs
popf
lea
lock
aas
sub
into
sbb
repnz
movsb
and
cmp
push
andb
dec
mov
add
int3
push
sbb
clc
jae
inc
and
aas
subb
fsts
dec
xor
xor
jge
sbb
lods
xor
dec
test
sbb
xor
in
xor
imul
test
adc
add
std
sbb
sub
jge
arpl
xor
ss
es
mov
push
mov
jle
ret
mov
iret
xor
xor
mov
dec
add
add
and
test
mov
push
mov
push
sbb
pop
xchg
inc
jmp
sbb
aaa
sahf
and
push
scas
int
push
add
fcompl
xor
faddl
inc
bound
fwait
mov
fimull
lock
rorl
mov
add
sbb
jp
ret
jle
popa
push
mov
movsl
xchg
pop
and
adc
jl
ljmp
in
rclb
jecxz
insb
out
jecxz
scas
lret
dec
lods
sub
dec
es
repnz
jo
add
dec
ljmp
push
adc
testl
ljmp
negl
roll
lahf
sbb
out
adcl
cmp
mov
pop
push
loop
xchg
adcb
push
sbb
mov
cmpsb
je
pushf
jnp
out
jno
aad
adc
pop
cli
adc
outsl
mov
xlat
mov
outsl
mov
dec
push
shlb
jb
and
aas
inc
lods
testb
js
jl
sub
insl
dec
popa
lds
mov
dec
push
pop
insl
and
leave
dec
in
sub
mov
jle
xor
xchg
pop
cwtl
rolb
shll
inc
push
jg
cmpsb
daa
or
cmc
cmp
lahf
mov
push
sub
mov
in
pop
add
sti
dec
outsl
mov
pop
nop
lret
add
mov
aaa
dec
add
cmp
fisubrs
cli
pop
mov
pusha
jmp
lret
lock
jae
jmp
lret
das
or
dec
gs
dec
cmpsl
dec
cmp
fstpl
or
push
xchg
xchg
inc
jae
in
pop
cmp
iret
jge
lock
ret
out
fdivs
popa
cmp
jg
andb
dec
stos
inc
daa
repnz
xor
dec
lods
adc
sbb
mov
lcall
xchg
test
sbb
pop
and
into
aam
mov
mov
mov
dec
ret
sbb
xor
xchg
add
out
les
xchg
clc
cmc
inc
call
add
insl
pushf
js
arpl
mov
xchg
fisttpll
int3
pop
lahf
inc
repnz
mov
mov
cld
jmp
inc
out
pop
mov
in
lods
and
roll
xor
rolb
mov
pop
leave
mov
dec
rcrb
stos
fistps
sbb
cmpsb
or
add
in
icebp
add
xor
sub
pop
mov
fsubl
out
pusha
sbb
aas
mov
pop
pop
ficomps
ljmp
xor
sub
pop
cmp
ds
test
mov
fldt
and
jne
nop
lds
shl
add
mov
test
stc
push
ja
aaa
dec
and
aam
inc
cmp
jae
or
test
and
fidivrs
dec
cmpsb
jp
and
mov
mov
mov
mov
subl
sbb
adc
cmpsl
call
iret
cwtl
frstor
fs
xor
mov
cld
cmp
nop
push
fucomi
gs
add
outsl
sub
insl
dec
icebp
mov
xchg
sbb
mov
push
ret
mov
mov
push
data16
adc
adc
aaa
mov
sbb
icebp
mov
mov
aaa
arpl
push
frstor
adc
xchg
mov
repz
and
icebp
add
sub
lods
and
ss
insl
lock
movsb
movsl
clc
or
adc
lret
pop
addr16
mov
push
cltd
fnsave
into
cmp
add
fdivr
sbb
mov
jnp
or
ss
pop
pop
daa
and
push
lret
sub
fidivs
sub
dec
mov
enter
xchg
cmp
icebp
cmpsl
daa
dec
ds
loopne
sahf
sub
sahf
fcompl
pop
pop
xchg
cwtl
adc
shlb
inc
scas
jge
lahf
dec
add
push
adc
sbb
inc
dec
push
xor
dec
xchg
push
and
leave
jo
inc
fdivrl
mov
push
out
cmp
movsl
ret
mov
in
sub
add
loop
xor
cmp
inc
stc
out
hlt
test
inc
das
hlt
testl
imul
cmpl
jmp
push
mov
inc
std
imul
jl
enter
shrl
xorb
push
push
fistpll
aaa
mov
and
es
pop
movl
xchg
jbe
xor
gs
xchg
sub
popf
test
mov
sub
std
arpl
push
cmp
add
jge
repz
ret
lods
sarl
sub
std
arpl
push
cmp
add
jge
ret
popf
mov
int
fldl
or
push
cmp
add
jge
lea
mov
sub
cmp
jmp
lds
adcb
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
mov
sbb
or
aam
stc
xor
jge
dec
mov
sub
cmp
int3
in
std
sub
sbb
or
jl
jl
pop
popf
cmp
pushf
pop
mov
fcompl
xor
mov
inc
gs
insl
mov
cmp
or
scas
outsb
mov
mov
imul
clc
lods
mov
jle
inc
cwtl
testb
dec
and
cmc
adc
inc
lahf
cmpsb
mov
adcb
mov
test
lods
mov
sub
xor
mov
pop
push
and
outsl
movsl
adc
mulb
push
faddl
test
test
mov
mov
jl
jl
sub
push
pop
arpl
imul
mov
sbb
sbb
push
aad
lods
inc
sub
xor
pop
ret
std
pop
xor
js
and
inc
leave
or
sbb
aam
dec
arpl
test
cmp
lret
std
cmp
add
stc
insb
lea
lahf
mov
inc
xchg
dec
in
hlt
or
cmp
pop
mov
imul
xor
sub
cmp
sbb
cltd
push
out
jns
pop
mov
mov
arpl
jl
and
sub
jle
enter
stc
xor
js
pop
mov
mov
dec
mov
dec
insl
mov
pop
mov
fcompl
sub
sbb
or
jl
insb
lea
insl
mov
pop
mov
fcompl
aas
gs
orb
not
repnz
xchg
stc
push
cs
sbb
or
scas
sbb
outsl
ss
pushf
ret
jae
mov
cmp
imul
ss
jno
push
lods
cmp
fistpl
dec
aaa
pop
pop
xchg
adc
xorb
rcrl
inc
mov
xor
jl
enter
mov
fcomi
lcall
mov
push
into
je
sub
pop
add
imul
ret
xchg
mov
and
mov
or
mov
pop
xchg
xor
in
repz
outsl
cwtl
cmpsl
ret
repnz
inc
std
xchg
mov
mov
mov
or
int3
jle
xchg
enter
roll
leave
out
pop
sbb
jnp
loop
mov
add
or
sarb
into
mov
lock
cmp
push
repnz
dec
adc
test
clc
sbb
dec
fidivrs
mov
cli
dec
mov
dec
mov
mov
mov
mov
or
adc
cmp
loopne
mov
mov
outsb
js
dec
xor
aam
xchg
imul
lods
adc
lods
lds
das
pop
and
in
into
and
push
dec
shlb
aaa
jnp
mov
add
stos
mov
or
fsubrl
movsl
faddl
inc
or
dec
add
outsl
jecxz
sub
cmpsb
into
sub
stc
sahf
xchg
push
test
sbb
sbb
xchg
push
and
cmp
cmpsb
inc
mov
xchg
mov
rcrl
fcoml
outsl
popl
add
dec
lds
pop
cltd
repz
out
loop
jno
pop
jae
insl
shl
mov
push
enter
lahf
ljmp
mov
jecxz
xchg
mov
popa
stc
mov
scas
sub
mov
dec
jnp
data16
ficoml
mov
xor
mov
sbb
addr16
cmp
scas
sub
test
shl
stos
xchg
lods
xchg
mov
addr16
popa
xor
cmp
sbb
loopne
adcb
xor
jbe
aad
sarb
mov
roll
adc
sub
push
pand
add
adc
lods
sahf
jnp
mov
fwait
loop
xchg
lods
adc
std
cmp
xchg
or
sub
mov
fdivrs
mov
dec
xorl
xchg
sbb
jne
popa
inc
out
mov
push
add
pop
jp
lret
inc
sub
jg
xor
lret
lods
cs
aas
andl
sub
imul
shlb
call
sub
cld
std
push
shlb
hlt
sbb
xchg
push
xor
sub
sarb
stos
mov
mov
pushf
iret
cmp
push
nop
mov
xor
fwait
jg
or
fdivrl
movsb
cmc
data16
xor
add
arpl
repz
sub
movsl
imul
negl
shr
push
and
call
repnz
dec
xchg
fmull
out
outsb
jne
fldt
inc
int
mov
movsl
jmp
arpl
push
and
out
das
and
js
add
sub
pop
lahf
es
iret
sub
orb
or
aas
ret
mov
xchg
jmp
sti
in
aad
test
mov
inc
ret
xchg
xchg
test
scas
xor
jno
push
xor
push
lahf
aam
inc
and
loopne
pop
out
mov
outsb
inc
sbb
sbb
shlb
nop
dec
or
push
in
inc
faddl
pop
std
addr16
cmp
lods
pop
mov
lods
ret
outsb
push
loopne
out
sub
mov
repz
stos
fildll
daa
lds
add
and
mov
pop
dec
mov
jg
icebp
lret
insb
outsb
je
push
cmc
dec
imul
push
push
mov
push
scas
cltd
insl
or
jo
ficompl
mov
lret
test
sub
and
mov
das
push
mov
mov
shlb
into
or
add
pop
repnz
dec
mov
outsl
aam
fsubl
sub
ss
jg
mov
xor
das
jns
scas
jae
push
out
mov
mov
pop
inc
in
popa
test
in
fdivl
cmpsb
ja
xor
xchg
frstor
sub
lods
or
xor
dec
sub
sub
lock
adc
out
out
mov
notb
push
ret
xchg
pop
or
ja
and
shl
or
mov
sbb
push
fisubl
mov
cli
jne
dec
push
sbb
mov
dec
sbb
adc
add
lret
cs
jmp
xor
pushf
adc
in
stos
add
jge
decl
sarb
xor
mov
push
push
mov
mov
push
pop
jns
inc
fimuls
call
mov
adc
shlb
fstl
insb
mov
shlb
sbb
sbb
mov
mov
sub
xchg
and
dec
mov
lea
mov
hlt
mov
adc
dec
gs
mov
mov
pop
in
mov
mov
dec
ret
scas
fstl
add
or
pushf
push
mov
mov
jp
pop
lea
loop
adc
jmp
test
adc
mov
pop
notl
lret
les
add
pop
jmp
pushw
lret
shll
cltd
in
jae
movsl
in
ja
mov
fdivrl
inc
or
mov
outsl
mov
add
pop
add
cmp
and
aam
enter
dec
mov
lahf
fcmovu
stos
mov
loopne
fstl
fcmovbe
push
sahf
adc
ja
in
incb
push
dec
shlb
push
pop
leave
into
jb
xchg
mov
xchg
outsb
mov
ja
enter
jecxz
sub
outsl
fmull
mov
mov
sub
dec
or
mov
inc
mov
cmpsb
inc
daa
pop
ljmp
sub
mov
adc
dec
nop
shll
sub
pop
ficoms
xor
jns
pop
add
mov
nopl
pop
jp
sahf
fwait
dec
xchg
ja
pop
pop
sbb
idivb
adcb
js
cli
aas
popf
jmp
hlt
cmpsl
into
fmull
pop
aad
mov
mov
loope
nop
in
je
dec
inc
int3
jno
push
ss
repnz
jle
in
outsb
mov
inc
cld
test
fcomip
and
add
cmp
mov
addb
in
mov
mov
in
repnz
and
push
and
jae
push
dec
xchg
sbb
int3
add
jbe
subb
and
mov
push
out
ret
mov
fdivl
stos
into
jae
dec
aad
cmc
out
in
cs
js
push
xchg
and
loop
push
sbb
int
push
flds
mov
and
fwait
movsl
loop
in
push
inc
mov
sbb
adc
outsb
out
popa
lret
dec
jmp
mov
lods
int
sti
loop
ret
fisttpl
mulb
test
repz
jne
and
mov
jbe
insb
mov
cmp
frstor
dec
movsl
adc
jp
les
sbb
cmp
sbb
lds
mov
rcr
ficoms
xchg
cmp
ja
inc
pop
jmp
fwait
jb
push
test
mov
or
pop
cwtl
xchg
pop
pusha
aas
daa
mov
xor
lahf
push
push
or
ret
mov
lods
xor
repz
cmp
add
sbb
pop
jnp
ds
sahf
insl
push
jne
adc
rorb
push
mov
push
fcompl
push
pop
mov
sbb
in
cli
mov
pop
mov
or
cs
js
hlt
loop
in
jge
dec
aam
rol
inc
sub
adc
repnz
loopne
faddp
push
lea
fldenv
fisubs
lcall
out
filds
jge
jb
cmp
das
xchg
xchg
adc
rcll
sar
in
jle
cs
push
xchg
push
fistl
push
xchg
push
imul
or
mov
mov
loope
stc
sub
xor
movsl
insb
dec
fbstp
ss
pop
ds
xchg
jns
push
lea
push
add
enter
xor
jbe
jecxz
mov
sti
int
test
pop
jbe
je
sub
enter
add
push
mov
push
or
addb
sbb
pop
mov
int3
sti
test
repnz
ficoms
or
mov
imul
mov
adc
sub
cmp
mov
movsb
testl
test
stos
cmp
flds
aaa
lcall
xchg
adc
sub
xchg
clc
push
outsl
sbb
movsb
pop
inc
mov
xchg
aas
cld
xchg
sbb
cmc
push
mov
idivb
std
les
add
pop
loop
xchg
imul
sub
scas
pop
insb
idiv
pop
movsb
mov
cmp
mov
clc
mov
and
add
sub
mov
or
fimull
jl
ja
es
fwait
push
lret
mov
or
addl
hlt
xchg
mov
mov
out
sbb
add
add
in
sub
imul
insl
bound
leave
xor
adc
addb
jmp
je
nopl
mov
mov
fldt
mov
pushf
push
mov
or
xor
dec
test
cs
and
daa
call
mov
sub
mov
pop
xchg
jmp
stos
dec
pop
mov
sbb
jmp
adc
ficoms
addb
mov
lds
lock
pop
aas
imul
ja
pop
jo
pop
sbb
enter
pop
ja
cwtl
xor
xchg
inc
inc
sbb
mov
sbb
jo
in
jnp
repnz
and
imull
push
ja
adc
jp
ss
cmp
repz
add
aam
inc
xlat
imul
cld
repz
test
push
mov
pop
push
xor
mov
cmp
xor
lret
jno
dec
out
ret
xlat
hlt
jnp
out
in
push
aad
imul
lods
push
mov
test
push
pop
mov
loop
arpl
xchg
idivl
jns
add
dec
in
or
dec
mov
test
push
inc
lods
icebp
pop
push
flds
push
jmp
add
pusha
lods
add
sub
lods
or
jbe
or
cmpsl
cmpsl
test
shl
or
jg
pop
push
cmpsl
cmpsl
push
cwtl
lds
cwtl
push
cmp
push
addl
mov
xchg
fwait
loop
dec
adc
add
in
xchg
mov
sbb
loop
sbb
in
cmp
push
cwtl
mov
lock
jmp
insl
fwait
mov
inc
dec
jp
aaa
call
movl
xor
js
and
cli
add
mov
jge
shrb
clc
cmp
ljmp
jecxz
iret
mov
movsb
add
mov
cld
cwtl
sbb
out
inc
pop
stc
jnp
test
scas
push
imul
stc
cmp
out
cmp
imul
mov
lods
inc
or
data16
insl
pushf
pusha
fsubrl
outsb
out
std
scas
mov
inc
test
sbb
shrb
pop
les
daa
ffreep
add
outsl
popa
mov
jp,pn
test
dec
ja
mov
lods
in
xchg
jl
lahf
je
scas
and
pop
fwait
cwtl
out
pop
push
xor
jmp
cmp
fistl
fists
pop
dec
cli
xor
ficompl
push
xor
je
xor
lods
out
sbb
andb
pop
loope
sub
sbb
popf
xchg
test
shlb
or
adcl
pop
jne
movsb
mov
arpl
mov
ljmp
lea
inc
mov
push
mov
icebp
pop
repnz
sbb
add
cmp
fldt
ja
mov
pop
subb
ss
lds
pusha
loope
mov
fsubs
xchg
fidivs
mov
addr16
outsb
xchg
inc
scas
repnz
jae
inc
ss
icebp
or
rcrb
dec
in
pop
test
mov
push
and
arpl
faddp
xorl
mov
into
xor
jb
sub
sub
jp
aas
push
aam
jge
dec
insl
movsb
jbe
pop
mov
jge
rcll
fisubl
repnz
fs
mov
sti
add
mov
pop
and
rcrl
sub
dec
jl
inc
in
lds
adc
stos
sub
insl
push
rclb
aam
out
and
icebp
jg
xor
addl
jne
dec
testb
dec
ret
xchg
adc
sti
shrb
int3
jecxz
into
insl
adc
fwait
leave
aaa
jns
addr16
inc
loope
mov
imul
mov
cltd
popa
push
aas
cmp
jg
les
cmp
cmp
lret
sub
cwtl
stos
push
cmp
out
dec
lahf
rolb
jne
hlt
jp
inc
cmpl
jns
push
iret
xor
cld
negl
mov
sahf
push
mov
rcrl
push
rep
repz
mov
push
jb
inc
xor
ds
iret
mov
dec
mov
insw
clc
push
adc
stc
test
in
mov
call
adc
popl
add
adc
arpl
pop
pop
repnz
fcompl
sbb
cs
lcall
in
dec
cltd
xchg
sbb
push
fs
gs
sub
orb
adc
pop
push
fcompl
pop
testb
lods
les
push
fadds
sbb
xorl
lock
in
call
insl
cld
pop
inc
in
cli
aam
stos
adc
das
and
push
fbld
jle
xchg
clc
les
pop
sbb
push
mov
sub
adc
inc
lahf
mov
xchg
sub
xor
jae
pop
test
cmpsb
hlt
and
mov
enter
jl
dec
xor
dec
mov
xchg
mov
push
jmp
shlb
xor
xlat
fiaddl
addr16
xchg
mov
repnz
fprem1
pop
xor
xchg
mov
add
mov
ljmp
pop
das
dec
sahf
pop
lcall
outsl
out
cmc
mov
roll
ret
xchg
and
adc
jnp
jecxz
xchg
push
push
mov
or
mov
sbb
push
pop
mov
outsl
push
aas
mov
sbb
cltd
test
test
sub
enter
or
mov
in
mov
mov
pop
pusha
dec
sub
insb
insb
cmp
scas
inc
adc
pop
movsl
mov
mov
mov
add
xchg
add
adc
std
scas
mov
add
jno
xchg
dec
nop
xchg
add
xchg
dec
xor
xor
inc
stc
xlat
dec
and
or
pop
push
test
add
enter
pop
jo
and
xor
cmp
les
clc
xchg
jg
dec
repnz
pop
sbbl
sbb
add
cmc
movsb
call
loop
pop
pop
mov
hlt
jae
mov
popf
jp
outsl
movsb
into
xchg
pop
inc
fildll
sbbl
xchg
and
mov
mov
sti
roll
adc
jb,pn
or
mov
mov
add
push
sbb
fcomp
adc
or
rcll
movsb
dec
sti
repz
adc
out
js
adc
repnz
lahf
or
pop
xchg
jae
test
scas
bound
xchg
test
out
sbb
jg
mov
mov
cmp
xchg
mov
pop
in
xchg
mov
sbb
cld
adc
into
mov
aaa
adc
ret
mov
cld
push
jbe
test
ret
andb
jbe
repz
clc
lock
dec
cltd
das
pushf
push
iret
filds
pop
ret
popf
test
inc
push
adc
mov
ss
push
in
push
jns
scas
add
movsb
dec
xor
add
xor
pop
leave
rcll
out
fdivl
xchg
in
push
rcll
imul
lahf
sub
mov
jmp
xchg
push
dec
inc
imul
fadd
push
sub
mov
xor
mov
pop
test
test
dec
pusha
push
in
nop
push
sbb
jbe
popf
mov
push
adc
loop
ja
inc
fmull
inc
mov
push
dec
xchg
cmpsb
sbb
ss
pop
aam
mov
in
push
mov
push
rclb
rolb
imul
mov
jbe
cld
xor
cmp
xchg
mov
repnz
sub
sti
into
inc
fwait
clc
iret
xor
aas
jp
stos
push
je
add
cwtl
js
jnp
bound
test
jns
jmp
add
int3
insl
sub
das
push
xchg
xchg
imul
pop
jle
adc
pushf
xchg
enter
in
mov
mov
add
jne
cltd
pop
test
xor
pop
cld
pop
lcall
pusha
jle
or
mov
mov
xor
inc
pop
fs
ja
leave
out
inc
repnz
cli
sti
and
push
push
jmp
mov
enter
mov
add
or
adc
outsl
cld
cld
add
fwait
xor
fildll
outsb
stc
xchg
aam
push
iret
stos
mov
mov
push
hlt
sub
jmp
mov
or
lea
stos
jmp
cmp
mov
mov
int3
pop
fiadds
mov
xchg
int
dec
or
cmpb
and
and
xchg
icebp
scas
sub
pop
push
pop
add
icebp
addr16
ja
sub
and
shrl
out
repz
jp
mov
mov
add
je,pt
jg
js
mov
add
sbb
and
pop
pusha
cmp
cmp
test
mov
and
sbb
fs
mov
xor
xor
cmp
xchg
in
add
insl
mov
jnp
std
or
sub
pop
mov
mov
insl
sub
in
jl
mov
enter
loope
repnz
pusha
dec
fcmovb
jge
cmpsl
pop
jmp
add
scas
in
dec
or
out
in
jnp
lods
mov
pop
mov
es
addr16
jp
test
sbbb
mov
jns
arpl
dec
std
add
insb
jmp
test
mov
enter
call
shll
mov
mov
adc
lret
std
leave
cwtl
test
xchg
or
int
jecxz
mov
loopne
clc
xlat
pop
ret
inc
push
adc
mov
in
push
mov
outsb
jl
lahf
stos
and
mov
sub
popf
pushf
or
loope
movsb
mov
not
add
enter
push
lds
or
pop
ret
xor
push
xchg
sbb
push
mov
mov
std
pop
jle
cltd
cwtl
jp
mov
loop
imul
lret
gs
pop
cmc
jo
mov
xlat
test
cmp
into
mov
test
or
pop
mov
mov
ljmp
scas
inc
and
in
les
daa
add
add
or
scas
shrl
and
les
das
sub
or
popf
aad
mov
sbb
pop
and
dec
and
fwait
lret
push
ss
dec
dec
inc
push
out
mov
jl
lahf
lea
bound
insl
les
sahf
lea
inc
mov
mov
out
lea
jg
mov
push
stos
fiadds
pop
loop
mov
jno
push
cmp
pop
xor
dec
xchg
xor
lock
inc
test
rorl
adc
pushf
push
and
push
mov
mov
sti
cwtl
mov
mov
mov
mov
cld
dec
and
fwait
xor
mov
clc
je
in
mov
mov
fwait
repz
rcl
lea
mov
pop
or
hlt
rolb
sbb
mov
xor
cmp
popa
add
shll
adc
aam
jmp
jl
mov
bound
jge
mov
jae
xlat
adc
push
jo
mov
and
ret
out
xor
cli
inc
test
stos
std
stc
sbb
dec
stos
call
pop
xchg
jae
aad
jge
jmp
dec
mov
or
add
ljmp
push
jno
sbb
xchg
mov
xorl
and
and
hlt
jp
lret
adc
jle
addr16
gs
push
scas
xchg
mov
repnz
cmp
lret
subb
pop
jo
je
inc
js
ret
into
or
push
jb
xor
leave
loopne
in
aam
push
stos
mov
pop
aam
subb
rorl
popf
dec
insl
mov
pop
mov
fcompl
sub
sbb
or
jl
insb
lea
insl
mov
pop
mov
fcompl
sub
sbb
or
jl
insb
lea
imul
in
or
sub
sub
cmc
or
jl
insb
lea
insl
mov
pop
sti
pop
je
xchg
repnz
in
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
push
std
push
adc
and
mov
xor
adc
adcb
mov
shl
loop
repnz
add
adc
and
xor
push
fisubs
jbe
xchg
mov
lods
shl
mov
push
adc
mov
xor
push
outsb
data16
xchg
icebp
aad
cwtl
shrl
cwtl
repnz
add
jl
push
inc
addr16
jne
fldln2
jle
stos
inc
orl
ds
pop
imul
add
js
mov
scas
insl
and
ret
xor
out
or
add
sbb
adc
sbb
cwtl
stc
xchg
cld
pop
pop
das
fdivrl
data16
rolb
ret
push
xor
cmp
jge
ret
nop
dec
cmp
mov
mov
dec
jno
mov
pop
pop
addr16
jb
shrl
mov
aas
mov
xchg
aam
push
repz
stc
ret
popa
xor
or
and
mov
cmp
pop
pop
rep
cli
ret
xlat
sub
pop
add
loop
cmpsb
cmp
push
push
mov
xchg
push
cmpsb
mov
cli
out
sub
loop
pushf
inc
push
jg
inc
popa
push
sbb
ss
cmp
mov
fcmovu
mov
mov
fs
jbe
push
pop
add
jbe
jecxz
xchg
out
repz
xchg
sbbb
push
jb
dec
jb
push
inc
es
push
bound
xchg
mov
mov
shl
loop
repnz
add
adc
and
xor
push
push
bound
xchg
mov
mov
shl
loop
repnz
add
push
pushf
jno
cmp
cmp
inc
loope
xor
in
dec
mov
outsl
daa
or
adcl
pop
and
jns
dec
or
xlat
pop
jle
sbb
mov
fwait
pop
das
mov
push
idivl
mov
pop
popa
xchg
lods
mov
icebp
jnp
adcb
xchg
imul
xor
cmp
jo
sub
mov
mov
sarb
add
xor
daa
pop
pop
or
xchg
movsb
fs
xchg
cld
dec
iret
out
jae
cmp
ds
shl
mov
push
insl
sbb
das
idivl
fdivr
xor
pushl
sbb
fstpl
jp
test
pop
cmpsb
mov
mov
pushf
and
mov
push
cmp
sub
push
je
int3
cs
xchg
jne
add
fsubr
sti
nop
sbb
and
jg
adc
aam
aad
jmp
inc
xchg
jb
scas
into
jae
paddd
dec
aam
subb
mov
add
lret
dec
aam
loopne
pop
pop
inc
sahf
imul
out
imul
adc
gs
mov
jp
bswap
jno
mulb
ljmp
inc
test
lahf
es
jnp
mov
popa
rorb
lods
fwait
rcrb
and
sub
jb
outsb
stc
test
movsl
decl
xor
jae
out
xor
push
das
jmp
adcl
mov
stos
inc
pop
add
out
clc
int
cs
popf
pop
cmp
mov
dec
inc
out
adc
rcrb
push
mov
pop
or
cmp
mov
and
ss
lahf
cmp
imul
adc
xchg
into
or
je
outsb
popa
and
in
incl
xchg
icebp
and
repz
aad
hlt
stc
in
stos
negl
add
or
enter
out
add
cmp
in
mov
test
loop
sub
mov
fidivrs
leave
arpl
mov
mov
inc
xor
inc
unpcklps
cmp
popf
ss
dec
add
or
out
lds
or
push
xchg
enter
or
adcb
addr16
inc
jmp
mov
aaa
dec
pmulhw
dec
jb
pop
cltd
leave
xor
pop
gs
xor
imul
ja
adc
xorl
jae
jns
sub
push
and
adc
test
mov
or
jbe
lods
lret
add
enter
and
iret
or
mov
xor
pushf
or
pop
sub
sub
adc
mov
pop
cmp
stos
cld
mov
nop
add
addr16
sbb
sbb
fildl
movsb
sbb
sub
cmp
call
adcl
and
notl
mov
pop
jb
mul
and
loope
cmp
icebp
xlat
fwait
pusha
or
or
stos
mov
rolb
push
push
andb
inc
je
adc
push
jb
sub
push
int3
adc
adc
sarb
clc
push
ret
out
push
pop
mov
xor
mov
sub
and
sbb
scas
mov
pop
pop
fimull
cwtl
adc
sub
sbb
xor
repnz
das
jbe
loop
push
in
adc
mov
or
xchg
mov
rcll
leave
ror
mov
xor
cmp
daa
test
adc
rcrb
out
inc
dec
imul
add
sbb
ret
js
fsubs
push
movsb
lret
mov
mov
add
aaa
mov
jecxz
fcoml
adc
or
sub
clc
dec
mov
fidivl
fistps
bound
or
mov
mov
shlb
insl
or
mov
ret
daa
add
xchg
mov
les
mov
jg
sbb
and
nop
add
pop
inc
icebp
ss
cwtl
cmp
xor
ror
gs
add
or
cmp
mov
loopne
adc
lock
push
ret
pop
push
mov
cmpb
xor
and
push
or
jg
fmuls
push
test
test
out
mov
xor
lahf
in
push
xor
daa
add
xchg
test
imul
jae
icebp
xchg
andb
cmp
ficompl
mov
outsb
add
push
cs
or
imul
outsl
pop
cmp
sub
ret
pxor
ret
pop
hlt
jae
es
jno
xchg
ret
jmp
mov
popf
cmp
jns
jp
stos
aas
or
jno
mov
inc
push
cli
mov
lcall
ljmp
push
lods
push
neg
stc
xlat
out
lock
sbb
loop
mov
icebp
clc
pop
sub
adc
mov
add
loope
shrb
pop
fisubrs
push
rclb
repz
int
mov
pop
outsb
push
xlat
cmp
dec
mov
adc
add
aam
sahf
js
lea
movsl
xchg
out
into
fidivs
arpl
out
dec
mov
cli
adc
jns
xor
xor
cld
adc
imul
push
out
dec
in
push
mov
cwtl
cmp
inc
outsl
xchg
jge
inc
dec
push
pop
ss
jecxz
mov
cmp
and
das
out
imul
lret
fistpl
ljmp
mov
scas
int3
lcall
xchg
jae
shl
rorb
mov
cwtl
push
cmp
sub
push
sbb
dec
push
pop
sub
stc
push
lea
ficoms
inc
and
out
mov
call
ret
dec
lahf
not
orl
lock
mov
jp
jns
xchg
pop
fs
out
sti
xor
aad
xchg
inc
cmpsl
mov
cmp
stc
push
cmp
pop
mov
insl
cmp
ret
add
xchg
addr16
mov
arpl
shlb
adc
lahf
loopne
out
mov
adc
fsts
pop
push
daa
ret
inc
imul
and
cmp
shl
fst
inc
imul
adc
enter
lahf
mov
mov
or
stos
and
repz
insb
xor
mov
icebp
fwait
jns
add
sbb
in
pop
mov
jae
xor
sbb
stc
add
stos
aad
push
daa
mov
std
sbb
rcr
and
xchg
mov
in
fcoms
and
in
out
je
sbb
and
cmp
mov
dec
out
leave
cmc
insb
mov
in
cmc
mov
fadds
sub
and
pushf
in
mov
imul
lcall
insl
cmp
add
jmp
repnz
in
or
imul
pop
mov
data16
mov
mov
sbb
fldt
add
aam
pop
mov
int
inc
jmp
int3
add
mov
fwait
or
adc
dec
jae
cwtl
dec
popa
fidivrl
ss
imul
xchg
imul
mov
push
sub
mov
xchg
mov
out
mov
xchg
mov
stos
bnd
mov
ds
sub
rcll
xchg
cmc
les
cmpsl
bound
mov
push
or
mov
cmp
jne
fnstsw
popa
mov
mov
aaa
aad
pop
mov
and
mov
adc
pop
mov
scas
lods
dec
push
mov
fsubrl
mov
fs
mov
cltd
mov
stc
pop
and
rolb
addl
inc
jg
ret
orb
in
pop
push
enter
sub
testl
xchg
cmp
popa
int
scas
xchg
adc
mov
int
pop
sbb
lods
divb
je
pop
das
ret
fmull
pop
sub
jo
xchg
cwtl
test
dec
mov
sarb
mov
pop
pop
mov
outsb
shrl
jbe
add
and
addr16
sarl
fsubrl
push
stc
xor
or
mov
adc
jne
imul
lret
imul
mov
dec
data16
scas
adc
arpl
pop
rorl
or
data16
cli
push
loope
sarl
arpl
xlat
or
addb
cmp
loope
jo
gs
pusha
cltd
add
pop
push
lcall
adc
mov
xor
aas
aaa
aam
aas
or
xorl
adc
push
sbb
mov
jge
mov
imul
cs
ja
sub
push
mov
movsl
jmp
adc
jg
jmp
cmp
mov
mov
test
inc
mov
push
imul
adcb
sub
pushl
enter
adc
testb
inc
sbb
fisttpll
jae
mov
cld
mov
test
push
roll
scas
cmp
sub
fildl
xlat
mov
push
pop
mov
jb
into
inc
sbb
cmpsb
in
pop
cld
popf
or
lcall
adc
xor
popf
add
cwtl
dec
mov
xchg
mov
pop
pushf
mov
pop
jae
xor
xor
pop
leave
pop
fdivrl
flds
mov
mov
stc
into
push
out
sti
mov
cmp
arpl
push
out
pop
in
std
shlb
inc
xchg
clc
out
or
fidivl
inc
pop
popl
movsb
or
push
das
and
sub
cmp
xchg
lea
and
sahf
leave
fsts
repnz
test
dec
push
sub
xor
jg
les
mov
inc
iret
fwait
mov
les
imul
mov
mov
inc
push
sbb
and
pop
out
imul
roll
pop
das
jnp
addb
rcr
fcmovnu
mov
mov
daa
adc
je
jmp
mov
js
imul
xchg
les
ret
mov
sbb
push
mov
leave
les
adc
gs
jge
lods
sbb
scas
or
push
pop
pause
dec
test
xchg
inc
pop
adc
and
pop
jecxz
outsl
push
or
fiadds
mov
xchg
mov
push
jnp
inc
sahf
push
cmp
fwait
xchg
xchg
sbb
shlb
jle
sub
scas
sub
add
sub
mov
les
or
inc
cld
outsb
pop
iret
xor
loop
mov
mov
cli
ret
jge
incb
lods
jp
ret
jnp
leave
pop
cmp
repz
or
inc
popa
sub
mov
pop
and
mov
pop
pop
into
or
xchg
repnz
out
sar
rcrb
jne
jb
aas
jo
inc
jecxz
mov
dec
test
add
and
clc
inc
in
or
cmpsb
push
lock
dec
xchg
sub
test
xor
add
inc
popf
inc
repnz
and
sub
roll
imul
imul
les
xor
repz
or
stos
jbe
pop
dec
add
fmul
js
pop
push
sbb
in
dec
lret
test
je
out
repnz
scas
iret
loopne
xor
adc
lock
and
lods
or
push
xchg
icebp
cmp
movsb
sub
or
or
push
lods
inc
push
jnp
push
mov
xchg
xchg
sub
int3
sub
adc
dec
clc
push
aam
cmovs
daa
rcrb
xor
push
repnz
in
sar
mov
push
clc
add
adc
cmp
jp
cmpl
and
pop
mov
mov
mov
aas
dec
test
mov
cmp
sub
fadd
dec
xor
and
mov
mov
xchg
sti
xchg
adc
sbb
xchg
jecxz
or
pop
mov
or
jecxz
in
and
mov
mov
mov
ret
mov
bound
add
out
cltd
jne
test
push
shlb
movb
push
repz
and
mov
jo
sbb
lods
xor
cmp
cmpsl
dec
mov
negb
cmp
insl
cmp
fstl
xchg
roll
inc
out
mov
mov
and
mov
in
add
into
xchg
std
test
ret
test
outsl
mov
inc
jecxz
sbb
mov
enter
sbb
dec
jle
adc
outsb
in
mov
adc
test
int
ss
clc
cld
inc
cmp
test
jecxz
clc
inc
fwait
ror
sub
cli
pop
push
adc
data16
jl
lret
adc
pop
jge
mov
movsl
xchg
mov
mov
dec
jns
and
pop
in
repnz
pop
fnop
dec
loop
jl
cmc
test
adc
arpl
imul
test
sub
jmp
lods
xorb
xor
cld
movsb
icebp
ljmp
aaa
pop
iret
imulb
pusha
imul
lahf
xor
insl
add
int3
cmpsl
mov
stos
xchg
adc
sbb
push
mov
or
sbb
jnp
les
push
scas
ret
mov
and
sti
xlat
inc
inc
push
jecxz
nop
add
jp
aad
xchg
mov
xor
les
mov
stos
xchg
ja
dec
bound
jl
sub
daa
dec
dec
cmp
inc
fiaddl
xchg
push
jns
out
xor
jmp
cmpsb
les
or
jae
push
jb
imulb
mov
outsb
xorl
xlat
pop
lret
adc
sbb
cmpsl
jae
mov
sub
ljmp
xor
mov
cli
xor
mov
adc
fmull
pop
push
scas
lret
divb
push
mov
or
cltd
insl
jns
outsl
sti
sbb
inc
lea
rcrb
test
push
mov
cmpsl
mov
adc
pushf
cld
dec
mov
dec
sub
jge
test
mov
cmpsl
repnz
divl
cli
int3
sub
and
cmpsb
stc
scas
iret
cwtl
inc
cli
dec
push
sti
sbb
in
jecxz
mov
push
xchg
adc
push
xor
sahf
xchg
test
imul
in
jns
sbb
fcmovnu
or
fisttps
es
les
mov
mov
or
dec
repz
outsl
and
xchg
out
or
xchg
fstpl
shlb
and
and
inc
fldcw
jmp
sbb
pop
jmp
mov
imul
mov
xor
add
and
push
scas
mov
sbb
scas
push
lret
push
mov
imull
dec
mov
cmp
or
or
loopne
mov
mov
loop
out
sbb
rcrb
pushf
xor
xorb
adcb
inc
js
jb
test
mov
xchg
call
mov
clc
mov
dec
mov
jns
push
jb
int3
or
inc
mov
and
std
pop
into
lock
movsl
fs
je
insl
xchg
test
jg
mov
pop
add
int3
out
lret
sbb
outsl
add
insl
and
outsl
ret
push
fwait
adc
jle
xchg
aad
pusha
sbb
rcl
push
cmpsb
mov
or
push
xor
fbstp
pushf
addl
sbbl
pop
clc
sub
icebp
out
ljmp
cmp
pop
les
push
inc
inc
mov
out
or
mov
xchg
mov
fwait
mov
inc
push
adc
movsb
pop
adc
xlat
push
mov
or
outsb
aad
dec
lret
inc
shrb
call
insb
cmp
and
mov
dec
cmc
mov
in
mov
inc
push
ds
and
mov
sbb
leave
cmp
pusha
fisttps
ljmp
adc
incb
jg
fldl
mov
cmc
adc
fcomps
pop
mov
lretw
cmp
add
and
push
out
sti
and
sub
arpl
push
bound
and
mov
fisttpl
pop
std
xor
aas
clc
pusha
xchg
sbb
or
les
sarb
adc
xlat
mov
xchg
sub
out
sub
lock
notb
mull
xchg
fiaddl
mov
lret
cld
lods
fisttpll
jmp
ror
std
out
enter
mov
outsb
adc
shrl
outsl
sahf
in
inc
fiaddl
lods
dec
lock
mov
jp
or
jecxz
jmp
sti
rclb
out
jnp
or
sbb
sbb
stc
cli
repnz
repz
pop
cmp
movsl
fsubrs
add
xchg
stos
and
std
in
nop
in
rcl
jmp
push
jle
mov
mov
pop
jecxz
repz
cmp
or
jle
and
test
add
mov
gs
adc
push
data16
dec
imul
add
repnz
jb
mov
jnp
mov
ss
xor
fcmovne
test
pop
xor
jmp
sub
lods
popl
cwtl
sbb
movsl
cmp
fdivl
mov
add
popa
cmp
push
and
call
dec
out
xlat
pop
xchg
fsubl
lea
adc
push
jmp
ret
je
in
in
dec
aaa
aaa
lret
and
cmc
push
lea
push
add
imul
pop
aam
xor
int3
push
xchg
sbb
pop
sbb
add
mov
loope
and
mov
mov
outsb
mov
inc
lods
push
mov
mov
xlat
sahf
push
and
sub
xlat
cmpsb
pop
jo
jo
pop
mov
sub
sbbb
stos
imul
dec
dec
lret
je
stc
mov
jno,pn
mov
mov
ljmp
mov
or
cmp
push
pop
cs
nop
cli
push
mov
mov
out
movsb
sub
fldt
mov
xor
sti
in
mov
and
adc
mov
jle
psubusb
add
test
fsubrs
push
inc
pop
inc
adc
mov
or
into
nop
xchg
sub
iret
lods
push
xlat
scas
or
daa
call
inc
gs
stos
sbb
enter
lret
or
scas
insl
aas
insl
sbbl
cmp
mov
sub
jne
roll
mov
sub
shrl
dec
mov
dec
mov
jg
inc
lret
in
inc
cltd
mov
fisubl
cmpsl
xchg
mov
in
mov
mov
mov
scas
das
sbb
cld
add
inc
flds
and
jmp
mov
dec
data16
jecxz
sub
add
jg
mov
and
mov
xchg
adc
out
jmp
shrb
ret
pop
mov
adcl
jns
clc
stc
loope
out
cmp
jae
add
mov
fs
test
cmp
insl
pop
data16
or
mov
in
es
loopne
fucom
pushl
enter
mov
dec
popa
xchg
mov
ja
out
push
stc
cmp
pop
adc
jg
out
jb
sbb
cwtl
mov
popf
cmpsb
leave
push
fstl
jp
loop
iret
and
sub
loop
dec
fcomps
dec
notb
pusha
jno
and
pop
in
js
nop
add
loope
sub
mov
jp
ss
sub
arpl
inc
fmull
pusha
adc
pusha
in
add
outsl
mov
or
jecxz
out
cmp
stos
sub
sub
jg
xor
add
mov
clc
arpl
in
mov
fs
ret
jecxz
pusha
out
jg
scas
iret
notb
stos
sub
mov
xchg
cmp
fnstenv
mov
ds
int3
push
pop
test
push
cmp
sbb
mov
pop
cmc
aad
jecxz
lcall
aad
pop
push
out
divl
push
sbb
in
loopne
inc
dec
mov
cmpsl
ret
dec
add
cmp
call
xor
pusha
sub
or
aaa
jle
ss
mov
pop
jo
in
pop
popa
scas
mov
sub
aaa
jb
outsb
pop
aad
fucom
xor
leave
mov
sub
in
xchg
faddl
imul
popa
sub
or
inc
inc
add
fisttps
outsb
push
rolb
in
lret
test
popa
lods
mov
or
aad
cmp
fcomip
ret
add
xor
fs
sbb
sti
cmp
mov
call
xor
push
push
bound
xchg
mov
mov
shl
loop
repnz
add
adc
and
xor
push
push
bound
xchg
mov
mov
shl
loop
repnz
add
pop
es
xor
push
cli
bound
xchg
xchg
cmpsb
mov
shl
ret
push
add
adc
and
xor
push
push
data16
jb
jge
cmp
mov
mov
pop
sub
lock
mov
jo
push
mov
outsl
sarb
or
cmp
push
cmp
mov
pusha
lcall
and
xor
sarb
outsb
loopne
lock
jnp
dec
loop
mov
inc
mov
jo
add
adc
and
xor
push
outsb
lock
lds
cmp
xor
pmuludq
loop
push
repz
cli
and
pop
ret
mov
jne
inc
xchg
inc
test
jb
push
aaa
rorb
addl
jecxz
lds
cmc
loope
jge
cmc
sub
loope
sbb
sbb
sti
rcr
ret
cmp
in
xchg
cmpl
cmp
stos
shrl
adc
add
adc
scas
fcmove
push
sbb
or
inc
mov
or
cmp
shl
out
mov
xor
lds
rclb
cmp
lds
pop
mov
jno
sub
rcl
mov
shl
lock
stos
xchg
push
stos
mov
mov
inc
mov
jo
add
adc
and
xor
shlb
adc
add
jb
bound
fldcw
fists
or
sbb
outsb
mov
pop
movsl
cmp
loope
jecxz
mov
mov
add
push
lahf
xor
mov
outsl
lahf
pavgw
sti
cmp
pop
loopne
or
adc
lret
xor
sarb
or
sbb
push
jp
dec
mov
mov
jo
add
adc
and
xor
sarb
or
sbb
push
jp
dec
mov
jns
rcl
repnz
lods
jne
xor
and
hlt
jns
xor
inc
testl
jl
adc
mov
push
mov
pop
shufps
inc
neg
sub
seto
jno
inc
cmpsb
jo
popf
xchg
xchg
stos
loope
sbb
call
flds
movsb
cmp
pop
dec
into
loopne
jbe
fcmovnu
mov
jle
or
mov
sub
repz
and
mov
js
or
xor
loop
dec
push
sub
test
mov
jae
xchg
jl
inc
dec
push
adc
ja
leave
lahf
dec
sub
in
and
push
mov
inc
jg
add
aad
add
addr16
mov
lahf
mov
cli
sbb
iret
mov
stc
and
shl
rorb
dec
mov
push
adc
in
ja
and
sbb
lods
sub
movsl
push
pop
or
cli
sti
mov
insl
test
popf
push
inc
cmp
mov
cmp
lahf
loope
test
das
sti
in
xor
sub
arpl
pop
popl
dec
mov
sbb
pop
lock
push
dec
stc
mov
popa
ljmp
ljmp
ret
mov
jae
sbb
cmp
pop
and
jle,pt
je
lahf
loop
sbb
inc
lcall
or
jg
jle
call
das
xor
or
jge
int
jl
sbb
mov
sub
out
jl
dec
in
insl
stc
fstps
add
leave
mov
jecxz
cmp
or
cmp
push
test
test
fiadds
pop
rcll
popa
fstpl
or
pop
or
jp
mov
popa
std
push
pop
adc
lods
mov
cmpsb
pop
cmc
loope
xorb
and
and
dec
push
cli
repnz
inc
mov
mov
push
sub
mov
lock
jge
push
and
mov
and
jb
mov
outsb
dec
nop
and
push
call
cmp
mov
data16
orb
hlt
dec
pop
mov
push
push
xor
push
jg
aad
jle
and
add
cwtl
dec
cmp
int
dec
test
or
inc
mov
pop
xchg
repnz
cwtl
pop
adc
ss
loopne
ret
adc
sub
das
pop
and
movsb
loope
mov
mov
aaa
rcll
sub
in
pop
pop
push
sti
and
xchg
mov
push
in
push
push
subl
or
mov
push
mov
xor
adc
add
jo
mov
inc
mov
mov
jl
aad
pusha
fildll
pop
mov
mov
xchg
fsubrl
push
mov
ror
jnp
bound
push
jp
adc
jns
sbb
test
pop
cmpsl
and
iret
inc
xchg
pop
pusha
lret
jecxz
and
fistps
stos
xchg
or
and
pop
insb
mov
cli
pop
leave
jae
sbb
dec
pop
shll
inc
sti
rol
icebp
mov
xor
cmp
fadds
jne
outsb
adc
xchg
mov
rcrb
outsl
and
xor
push
outsb
pop
mov
add
cs
fwait
shr
leave
dec
dec
push
sahf
lret
adc
cmpsl
dec
pop
cmpb
shll
mov
mov
out
adc
sub
xor
loop
js
push
add
pop
fstpl
push
ja
roll
pop
outsl
xchg
scas
ret
mov
mov
aam
cltd
and
aaa
pop
jno
xor
cmp
nop
mov
hlt
jg
aad
lret
cmp
mov
push
add
sbb
loopne
insl
fwait
mov
dec
jmp
pop
outsb
adc
lods
jge
jle
scas
jne
or
icebp
inc
adc
push
leave
sub
frstor
movsb
loop
pushf
daa
mov
jae
out
mov
mov
inc
leave
fwait
mov
rolb
hlt
xchg
or
mov
pop
cmp
or
xor
inc
or
cli
xchg
ljmp
out
pop
sub
adc
cwtl
cmpsl
loopne
sbb
stc
fidivrl
out
cmpsb
test
ss
xor
xchg
mov
xchg
test
jae
xlat
outsl
lahf
push
fstl
jo
lcall
in
push
fimull
lret
dec
in
xchg
and
popl
adc
cmp
dec
push
add
cmc
cld
add
jnp
cmp
sub
jne
insb
mov
imul
xor
mov
pop
add
aas
sti
dec
into
stc
mov
add
imul
insl
lret
cmc
mov
pop
rcll
scas
les
popa
mov
fidivrl
push
loopne
fsubrl
out
and
stos
mov
rol
push
pusha
ja
mov
push
imul
fisubl
add
ja
cmp
mov
jecxz
push
push
mov
xchg
cs
jl
test
cmp
je
popa
shll
fwait
and
in
movsl
and
in
inc
pushl
sbb
js
push
and
pop
push
mov
xchg
xor
lods
mov
scas
xchg
pop
fisubrl
xor
cwtl
fwait
jbe
xor
fisttpll
jp
les
shr
xchg
pop
push
add
lahf
push
xchg
adc
push
push
insb
cmp
mov
fs
les
adcl
or
mov
sub
mov
int3
insb
out
mov
call
jb
mov
push
sbb
jecxz
mov
or
add
ljmp
js
fcompl
out
gs
test
lahf
popa
xchg
test
push
fs
sbb
pop
shrb
movsb
cmp
test
call
js
mov
call
hlt
rcl
sbb
lahf
dec
dec
imul
mov
lahf
mov
fldcw
pop
pop
xchg
inc
out
mov
aam
fisubrl
cmp
or
jmp
or
stos
loope
push
fucomip
lcall
add
sub
ret
push
xchg
jge
xor
ljmp
enter
fdivs
mov
test
into
jge
pusha
cmp
das
adc
xlat
or
xor
imul
fidivrl
push
xor
cmpsb
xchg
flds
lods
and
in
push
loopne
jbe
mov
jb
jle
lock
out
outsl
mov
aaa
ds
out
pushf
pop
dec
ret
push
loopne
xchg
and
rcr
xchg
pop
xor
and
aaa
jnp
stc
js
rcrl
negl
out
out
in
push
mov
lret
rolb
movsl
sub
subl
jb
ret
fwait
addb
sub
dec
dec
test
jb
fs
ja
and
and
push
das
sbb
popa
int
jmp
std
inc
fstl
xor
aad
lock
test
jle
pop
lea
jle
jbe
add
out
inc
cmc
insb
mov
pop
loop
lods
or
push
xor
sbb
dec
push
aad
sbb
cs
loope
xchg
jmp
lcall
ja
inc
mov
dec
adc
in
fsubl
lea
sub
fstpl
pop
or
ficomps
mov
daa
add
pusha
jg
dec
fdivs
icebp
shlb
cli
mov
xchg
add
pop
nop
and
into
push
fistpl
imul
mov
xchg
adc
sar
testl
subb
in
mov
out
imul
inc
jbe
jecxz
out
push
push
dec
gs
pop
mov
movsb
sbb
aaa
addr16
inc
outsb
dec
or
mov
mov
jecxz
leave
push
leave
fidivrs
leave
ret
insl
and
loope
or
pusha
pop
popa
clc
mov
or
rolb
cs
mov
lret
in
fs
jmp
ud1
repz
inc
lock
iret
aaa
xchg
and
jno
js
dec
add
outsl
imull
push
test
shll
xor
xchg
cltd
mov
mov
js
jb
push
daa
out
fidivrl
fstps
inc
out
pop
adcl
mov
shll
pop
loope
and
inc
mov
inc
dec
xor
push
add
cmp
test
jp
push
xchg
xchg
lcall
fsubrl
and
lods
lock
aas
jmp
cwtl
mov
dec
xchg
inc
or
push
cmp
add
mov
lret
ud0
dec
add
es
xor
push
iret
dec
inc
pop
xlat
mov
dec
in
and
cld
and
cli
int3
mov
icebp
jmp
lock
andps
call
jp
push
push
adc
jns
inc
int3
jb
rdtsc
ss
inc
push
jno
cs
and
inc
paddsb
lret
aam
xchg
push
shll
xchg
ret
aaa
jg
pushf
sahf
cmp
mov
mov
push
jmp
cld
cltd
ja
jno
push
loopne
cld
push
fdivrp
push
je
add
jp
sar
push
and
lock
shl
adc
and
cwtl
aad
addr16
jmp
xor
jns
dec
mov
mov
jle
xchg
sahf
test
adc
ss
xor
or
push
lret
pop
imulb
inc
inc
test
adc
cmpsl
dec
test
mov
scas
cmp
cmp
int
push
mov
scas
out
les
push
test
push
jno
ja
scas
lods
icebp
push
dec
cmp
fisubl
mov
jecxz
sub
out
pusha
pop
or
inc
ljmp
lods
cltd
popa
pop
xlat
jle
inc
inc
sbbb
lret
xor
je
fmull
mov
dec
push
dec
in
stos
jo
jne
lods
inc
and
pcmpeqd
mov
fistpll
jecxz
jne
imul
fcomip
popa
stos
and
xchg
dec
and
clc
push
mov
pop
xor
sub
lahf
pop
cmpsl
jb
mov
cmp
inc
out
popa
pop
and
mov
adc
ror
shl
dec
pop
dec
nop
adc
xor
cld
test
clc
xor
cli
pop
sub
push
cmpsl
pop
test
loop
mov
mov
jno
cmp
dec
fstpt
mov
test
div
xor
push
cmp
mov
jns
dec
bound
hlt
insl
aaa
pop
inc
dec
push
outsb
loope
loop
ljmp
mov
mov
and
hlt
or
push
xchg
inc
push
rcll
iret
cmpsl
jg
push
and
push
fs
loope
push
xchg
test
sub
xchg
fimuls
outsl
push
jo
push
cmc
rcll
shl
bound
faddp
push
sbb
out
cwtl
es
push
mov
sbb
mov
lds
int
lea
mov
subb
cmp
les
dec
inc
cmp
das
pusha
pop
ds
mov
stc
add
sbb
ss
pop
test
js
test
out
ret
test
or
lret
xchg
inc
cmpsb
imul
test
dec
jb
daa
int
ret
cmp
xor
stos
out
mov
sbb
cld
adc
decb
rorl
and
adc
popa
jge
mov
loop
push
sti
movsb
mov
bound
je
ror
insb
jbe
insb
test
mov
insl
testb
inc
mov
out
icebp
xor
xor
sbb
push
je
int3
stos
stos
xchg
xchg
loop
repz
cld
subl
xor
add
jns
inc
push
sub
or
cwtd
cmp
lea
push
pop
pop
jecxz
es
into
fwait
dec
push
addr16
fdivl
insl
add
and
outsl
shll
cmp
addr16
shrb
test
fcomip
fdivrs
adc
xor
arpl
mov
out
js
sub
mov
jecxz
push
dec
cltd
sbb
pusha
jns
push
mov
mov
push
xorb
lea
xchg
push
test
jnp
sarb
into
xchg
mov
es
or
scas
ljmp
shrl
stos
inc
pushf
sub
jmp
sbb
pop
mov
mov
cmp
dec
aam
ja
dec
xchg
or
push
fimuls
jne
cmc
adc
fisttps
inc
scas
mov
popa
pop
jmp
xchg
in
and
cmp
mov
mov
inc
or
call
outsl
out
adcb
shlb
xchg
xor
popf
testl
push
fmull
loope
out
sub
icebp
clc
pop
sub
cmpsb
std
jg
pop
adc
repnz
sbb
arpl
loop
aaa
fstpl
dec
rol
out
movsb
mov
xchg
dec
push
jno
and
stos
add
aaa
jnp
sub
das
stos
scas
fidivs
jmp
insb
int3
fiadds
loop
aad
outsb
xor
fistpll
decl
js
movsb
add
sbb
aaa
xor
in
dec
stos
mov
inc
aam
clc
mov
push
je
push
loopne
rorl
sub
aaa
insl
outsl
scas
push
adc
cli
lret
aas
inc
jne
arpl
dec
jp
xchg
add
pop
pop
add
rolb
loop
test
std
and
imul
jle
dec
subb
add
movsl
adc
popf
and
push
mov
ja
das
sbb
dec
xor
clc
xorl
jb
stos
insl
das
test
xlat
fmul
sub
jecxz
dec
pop
pushf
stos
fimull
imul
xchg
dec
dec
lods
or
adc
or
push
fiaddl
xchg
es
stos
or
adc
leave
subb
pop
xchg
or
inc
into
xlat
mov
ljmp
and
aaa
cltd
sbb
push
aad
add
push
or
mov
xchg
cmc
jecxz
dec
cmpsb
and
cmp
mov
cli
lret
rcr
cmp
das
sbb
inc
push
mov
mov
popa
mov
rcr
xchg
enter
add
sbb
pusha
cmp
xchg
loope
jecxz
divl
mov
sbbl
jl
call
inc
sub
cmp
outsl
nop
shll
mov
insl
aas
push
je
scas
mov
cld
xor
sub
xor
outsb
jmp
movsb
loope
enter
jo
movl
sbb
jo
sarl
push
clc
icebp
push
lods
ret
xchg
clc
pop
popa
inc
and
sti
push
mov
bound
out
push
cs
inc
divl
out
push
push
jl
cwtl
push
mov
add
adc
mov
xchg
bound
repnz
xchg
sub
lahf
and
xchg
movsb
pop
fs
and
test
rcl
jnp
jns
mov
rcr
sbb
aam
cmpsb
xor
push
in
or
cmpsb
ss
movsb
mov
js
inc
sub
cmpsb
cmp
pop
cmp
shrl
cli
sarb
cmp
aam
inc
outsb
mov
les
insl
sbb
xor
mov
dec
mov
out
test
xor
inc
leave
pop
cli
dec
shr
cmc
out
sbbb
ljmp
push
xchg
sub
push
inc
cmp
popl
jmp
inc
mov
sbb
gs
jo
cmp
nop
jmp
lods
jns
or
leave
fs
adc
and
cmp
adc
xor
xchg
fcoms
test
pop
mov
inc
add
rclb
shrl
inc
popa
mov
imul
push
sbb
mov
xlat
cmp
scas
movl
pop
std
clc
pop
repnz
dec
repz
mov
mov
mov
testl
rol
xchg
pop
cli
adc
movsl
loop
pop
mov
xchg
sbb
xor
stos
into
and
popa
insb
cmp
xor
add
imul
xchg
mov
inc
cmp
or
test
mov
test
daa
jmp
leave
mov
movsl
sti
dec
mov
mov
sbb
inc
and
or
ret
sti
dec
js
sbb
inc
add
enter
mov
cli
push
frstor
or
xor
popa
or
lods
sub
jl
and
add
ret
out
xchg
repnz
push
mov
or
cmp
inc
fbstp
in
outsl
movsl
and
scas
and
int3
mov
lock
pop
inc
out
test
sub
mov
ljmp
fcmovnu
lahf
push
xor
jo
xor
dec
imul
fwait
xchg
jno
xor
loopne
scas
int
inc
in
sbb
push
jae
pop
xor
inc
and
gs
and
xchg
fimuls
dec
dec
out
push
push
cmc
sbb
bound
nop
invd
push
mov
lods
xlat
lods
dec
and
mov
jle
popf
or
push
mov
mov
xchg
xchg
into
cwtl
pop
mov
xchg
ret
cmpsl
push
jb
cmovns
in
push
scas
js
xor
or
test
cmp
shrl
jl
push
aaa
add
xchg
pushf
fs
inc
sti
inc
and
out
jae
dec
jo
hlt
xchg
inc
mov
mov
inc
in
cmpsl
xchg
sbb
mov
mov
pusha
movb
push
sbbl
addr16
movsl
adc
ret
mov
faddl
test
int
inc
fbstp
xchg
dec
push
and
fs
shl
arpl
pop
cmp
lods
dec
pop
dec
jge
loop
adc
sbb
lcall
push
shrb
mov
ja
scas
shl
rcrl
aas
xchg
or
test
jae
dec
cmp
mov
fdivl
into
inc
push
sub
rorb
xchg
add
addr16
mov
add
imul
fisubrs
mov
popa
sbb
mov
jecxz
std
mov
or
xor
sub
notl
repnz
loop
dec
mov
mov
arpl
je
mov
mov
xlat
xor
mov
divl
cmp
cmpl
das
aam
xchg
push
loope
mov
mov
adc
gs
jmp
xor
sub
fisubrl
imulb
xchg
or
in
mov
inc
adc
push
mov
mov
leave
xor
pop
cmp
and
cld
dec
lods
cmp
jle
out
mov
mov
out
cli
mov
xor
cmp
dec
idiv
shlb
cs
cmc
test
bound
lds
xchg
mov
xchg
inc
mov
mov
adc
and
jo
pop
jle
lods
popf
mov
inc
mov
push
lods
lret
cmp
ljmp
xor
pop
pop
popa
stos
fdivl
cwtl
xchg
arpl
add
mov
enter
mov
repnz
loopne
cltd
popf
ficompl
sbb
repz
movsb
cld
out
mov
mov
lock
lock
dec
jno
or
aas
mov
or
inc
scas
mov
push
cltd
pop
sub
or
adc
jb
mov
addr16
adc
sarb
cmp
pop
mov
mov
mov
ret
xor
inc
loopne
cmp
popf
push
pop
sbb
lret
mov
adc
dec
push
leave
add
pop
test
outsl
outsl
rcll
repz
mov
mov
mov
lock
das
push
cmp
xchg
mov
clc
pop
into
xchg
in
push
pop
cmp
add
cmpsl
jl
js
jle
adc
mov
ja
inc
or
ja
pop
mov
movsl
ja
pop
stos
add
lcall
or
add
push
jns
mov
imul
cmpsl
sub
mov
lods
xor
les
out
movsl
rcrb
mov
inc
mov
xor
cmp
cmp
jnp
jns
loopne
push
fbld
xchg
sahf
pop
lret
mov
js
adc
daa
or
adc
mov
push
shrl
iret
lods
pop
outsb
mov
mov
pop
jns
test
outsl
jbe
or
test
mov
adc
test
inc
push
push
xchg
flds
xor
sub
lret
into
stos
jno
jg
sbb
adc
stos
js
or
sbb
les
push
jg
bound
push
xchg
int3
sub
inc
dec
mov
repnz
test
iret
test
jne
leave
adcb
std
lcall
push
fmuls
inc
les
icebp
ss
add
pop
push
popa
mov
pop
mov
aaa
clc
call
cmp
sub
xchg
sbbl
sbb
int
and
dec
lahf
stos
or
lcall
sbb
gs
xor
or
fimull
add
sbb
pop
movsb
xchg
inc
out
jmp
add
jmp
out
mov
fwait
cld
dec
push
ss
lcall
and
xor
sarb
or
sbb
push
jp
dec
mov
mov
jo
add
adc
and
xor
sarb
or
sbb
push
jp
dec
mov
mov
jo
add
nop
lret
xor
inc
cmp
push
loopne
lock
jle
dec
mov
mov
pusha
lcall
and
aad
lds
loopne
xchg
pop
movsl
dec
iret
aam
out
hlt
jmp
inc
shr
shl
movsb
dec
push
pop
inc
outsl
je
unpcklps
inc
das
xor
and
aam
out
hlt
jmp
xchg
lahf
test
push
pop
inc
outsl
je
fs
adc
add
xor
and
aam
out
hlt
jmp
xchg
lahf
test
push
sbb
add
cmovbe
pop
push
push
and
aam
mov
nop
xchg
or
adc
movsb
mov
inc
cs
nop
adc
je
xor
pop
fdivrl
cmp
xchg
push
test
insb
lahf
jnp
mov
fisubl
je
gs
js
mov
lahf
rcl
call
ret
ljmp
xchg
or
pop
adc
aaa
dec
lret
aas
and
test
push
test
mov
ficoml
mov
push
lods
lret
xor
cmp
and
sbb
xchg
lahf
jnp
dec
cli
repnz
adc
inc
ljmp
inc
jg
je,pt
push
and
cmc
je
dec
pop
insl
xchg
jg
and
stos
scas
push
nop
jo
fs
jmp
lock
mov
out
hlt
jmp
xchg
lahf
test
push
pop
inc
outsl
je
unpcklps
add
xor
bound
mov
mov
lret
sarl
sub
push
jns
jge
mov
inc
stos
xchg
mov
mov
icebp
fisubrl
sub
push
sub
jg
push
jnp
imul
dec
stos
test
mov
adcb
scas
mov
movsb
dec
push
pop
inc
outsl
je
unpcklps
add
xor
and
aam
out
hlt
jmp
xchg
lahf
test
push
pop
inc
outsl
je
unpcklps
add
xor
and
aam
shll
shlb
inc
jecxz
fidivrl
dec
outsb
subb
mov
outsb
push
inc
xor
push
mov
xor
fcoml
sbb
outsl
dec
xchg
xlat
dec
jae
imul
fistl
dec
enter
sbb
jmp
js
loopw
push
leave
dec
jp
add
out
mov
xchg
xlat
cld
nop
lahf
add
lods
push
out
push
ljmp
es
jno
pop
mov
adc
push
pusha
xchg
enter
push
rolb
int3
and
and
cmp
lods
jp
jmp
jmp
es
cld
cmp
setns
mov
scas
sub
mov
lcall
mov
pop
sbb
pop
mov
mov
push
xchg
mov
cmp
mov
xor
or
pop
and
jge
or
shr
shlb
dec
out
adc
cmpsb
movsb
inc
shrb
stos
mov
jmp
mov
mov
rclb
dec
outsl
in
enter
repz
mov
cmp
cmp
loope
imul
jne
add
sub
enter
jne
mov
jmp
in
gs
or
arpl
ret
sarb
mov
jecxz
or
jmp
jnp
sbb
mov
sub
fucomi
mov
in
popa
dec
push
aaa
mov
push
es
jge
jbe
imul
testl
rolb
sbb
lcall
and
pop
setae
sbb
push
xchg
test
and
push
mov
dec
xor
inc
pop
xorb
int
or
cld
push
dec
sbb
aam
jo
clc
fnstsw
mov
and
push
shl
mov
adc
add
jp
hlt
push
xor
out
and
inc
sbb
xchg
jno
aas
add
ss
outsb
outsb
bound
dec
data16
int
pusha
ljmp
add
movsb
ret
test
jle
imul
movsb
inc
inc
orl
sbbl
cmp
dec
sbb
pop
mov
sarb
in
pop
outsl
arpl
pop
inc
pop
adc
mov
cli
push
xor
jecxz
pop
inc
pop
sti
lea
pop
jp
outsl
pop
ljmp
aam
les
jmp
addr16
or
adc
mov
pop
dec
pop
bound
adc
xor
xchg
pusha
pop
sub
rclb
jbe
xor
leave
or
and
das
dec
rcrl
bound
les
rcl
push
mov
or
lods
xor
or
push
test
in
leave
xchg
daa
mov
sbb
mov
push
and
mov
clc
ficompl
aaa
adc
shr
and
mov
sbb
inc
cmp
push
push
sub
jnp
xor
mov
out
fimuls
inc
rcrb
negl
jle
jg
mov
xchg
dec
inc
mov
or
insb
sbb
dec
mov
aas
movsb
cmp
xchg
inc
lock
sahf
sbb
mov
sbb
mov
addr16
ja
lock
fldt
xlat
fisubl
mov
mov
push
cmp
xor
pop
fiaddl
or
push
pop
jno
bound
gs
popf
and
push
cmp
and
hlt
hlt
pushf
dec
cmp
mov
fidivs
call
sbb
mov
push
arpl
xchg
xlat
scas
or
sbb
daa
dec
lds
mov
and
add
jg
mov
jge
sub
shrl
mov
or
jge
pop
icebp
outsl
jl
pop
mov
test
sub
mov
sbb
ljmp
psubd
mov
lret
add
gs
sub
or
shl
test
cmp
bound
xor
jg
inc
mov
mov
jmp
movsl
lods
mov
bt
das
mov
push
adc
dec
push
or
sbb
lret
dec
es
mov
add
mov
push
cmpl
arpl
bound
mov
dec
clc
fiadds
sahf
loope
sti
sarb
out
stos
pcmpeqd
cs
test
rep
cmp
sti
subl
adc
mov
imul
cmpsb
es
jae
jne
mov
cli
cmp
xor
jne
inc
mov
enter
push
test
outsb
ret
into
pop
and
push
lcall
inc
mov
loop
dec
lcall
cmc
xor
je
xchg
loope
mov
push
inc
test
aam
aas
ret
pop
loope
and
mov
xchg
mov
push
lods
insb
hlt
sbb
mov
iret
enter
loopne
stc
in
ljmp
pop
dec
add
sub
movsl
push
data16
fcoml
cld
lods
mov
xchg
popa
jp
ret
sbb
jne
inc
sub
dec
xchg
insb
fucomip
mov
sbb
aam
jb
test
xchg
ljmp
cmc
lods
xor
cmp
fistpll
sub
jae
mov
subb
sub
push
xlat
push
mov
cwtl
or
jmp
fbstp
scas
mov
jno
pop
pop
jp
movb
dec
in
pop
imul
notb
rol
add
inc
push
mov
int3
xor
std
jbe
add
and
lcall
mov
js
clc
mov
lds
sbb
sbb
mov
jbe
pop
adcl
jmp
xchg
jo
daa
xor
je
or
shlb
ja
test
xor
adc
mov
push
sub
movsb
xor
ss
adc
std
cmp
adc
mov
cmpsl
pmulhuw
xor
or
xchg
pop
ficomps
add
es
sub
cltd
push
packuswb
lahf
adc
lods
push
xlat
clc
fsubp
mov
lock
mov
pop
movsb
lar
shlb
call
sti
mov
mov
sub
fnstcw
aam
jns
mov
leave
cld
mov
pop
shrb
pop
jmp
gs
add
and
mov
add
pushf
rolb
pushf
inc
jecxz
cmp
leave
xor
add
clc
mov
ljmp
pop
sub
lahf
xlat
xor
popf
adc
xor
adc
push
pop
pop
jae
data16
pop
ds
mov
push
repnz
test
xlat
fs
iret
ja
fiadds
ret
jge
mov
jmp
jp
sbb
add
push
lret
cmp
sti
stos
pop
or
pop
mov
std
add
push
call
mov
imulb
cli
pushf
adc
std
dec
mov
aad
jo
xchg
sahf
mov
mov
xlat
adc
lea
add
inc
mov
lods
cwtl
push
push
cmpsl
clc
dec
push
mov
xchg
das
pop
pop
adc
shll
pop
cmc
push
push
push
subl
sub
imull
roll
mov
pop
aaa
adc
call
mov
mov
mov
cltd
in
sbb
lcall
jns
sbb
add
adc
into
out
inc
in
lret
test
lahf
mov
push
xlat
cli
nop
data16
bound
in
rcll
bnd
push
movhps
add
cmp
adc
dec
cmc
call
sbb
mov
xchg
fmull
cli
mov
je
cmp
push
incb
iret
sub
call
pop
cmp
add
or
loope
repz
mov
ret
jnp
sub
mov
push
mov
repz
ficompl
cmp
idivl
aad
aam
frstor
in
pop
outsl
aad
pop
xchg
cmc
inc
ficomps
insb
ds
jb
jb
cs
pop
ret
sti
cmp
sbb
cmp
mov
jecxz
shrl
push
adc
jae
dec
pop
lods
addr16
push
jge
fldenv
mov
in
jae
xlat
adc
push
mov
push
lret
xchg
dec
dec
stos
cmpsb
daa
inc
adc
push
ss
lock
fisttpll
xchg
jecxz
mov
test
jnp
shll
jb
push
dec
and
or
int
xor
or
xchg
gs
ret
fnsave
sbb
sub
dec
push
or
fcomip
pop
sub
icebp
push
pop
mov
ljmp
inc
add
cmp
xchg
push
lods
sub
les
repnz
fsts
sarb
jns
dec
mov
test
cmp
push
popf
dec
mov
mov
dec
arpl
cmc
jp
xchg
ror
fwait
movsb
cmp
mov
mov
movsb
mov
jle
and
leave
push
push
not
scas
xchg
dec
addr16
add
jmp
push
mov
jecxz
jb
imul
pop
dec
orb
jnp
les
xchg
repz
xchg
push
adc
incb
andl
mov
push
inc
sahf
jg
pop
jno
inc
pop
iret
push
jne
mov
out
ret
dec
sub
and
stos
daa
mov
insb
pop
ja
jne
mov
xor
inc
mov
xor
mov
cmpsl
pop
pop
mov
sbbb
sub
mov
loop
jne
in
add
out
dec
clc
xor
stos
rorl
lods
leave
pop
jle
dec
jp
push
mov
cmpsb
push
shlb
lahf
cs
test
int3
in
mov
inc
pop
sbb
mov
out
or
jecxz
clc
fsubrs
push
pop
pushf
jne
sbb
sbb
sbb
jecxz
xor
adcb
xor
es
sbb
or
jg
enter
inc
adc
aam
cmp
push
xor
pop
pop
mov
loope
iret
std
loope
mov
mov
pop
mov
pop
test
mov
fwait
and
shrb
jg
and
shll
mov
jne
movsl
mov
or
repnz
fildll
pop
int
dec
xorl
dec
dec
enter
push
arpl
shlb
icebp
ret
in
mov
xchg
insl
xor
xchg
or
sarb
jle
push
mov
mov
or
pop
in
cmp
jmp
js
mov
and
mov
inc
movsb
push
or
xchg
ja
loop
rcll
cli
xor
ret
cld
mov
jp
sarb
mov
nop
xchg
and
xchg
xchg
ret
enter
inc
dec
mov
pop
bsr
push
xchg
cmc
push
andb
xchg
aaa
push
js
dec
mov
pusha
push
sub
pop
cs
pop
push
and
leave
mov
fs
and
push
psraw
sbb
mov
mov
mov
loopne
mov
cli
push
nop
lea
inc
cmp
in
inc
pop
aam
int
cs
outsl
adc
inc
pop
sbb
fsts
or
movsb
jp
loop
filds
sahf
cmpsb
test
rcl
xchg
mov
jae
call
cmp
mov
xchg
andb
mov
xchg
jge
and
jbe
loope
aad
sbb
imul
or
mov
aas
mov
pop
clc
adc
sbb
scas
jnp
and
dec
and
imul
adc
iret
jmp
adc
aad
aas
sbb
lods
dec
add
mov
pop
or
subl
dec
sub
jmp
mov
sbb
mov
in
mov
cmpb
shll
movsb
mov
adc
insl
cltd
mov
aam
pop
sarb
lods
and
mov
inc
dec
test
or
sbb
dec
or
xor
mov
add
push
and
mov
push
mov
sub
test
and
mov
sub
cmp
in
pop
sbb
push
sbb
or
movsb
inc
mov
mov
adc
sbb
imul
jmp
int3
push
dec
int
jp
fdivrl
dec
xchg
mov
jb
pop
inc
sub
hlt
xor
fcomps
or
sbb
xchg
popf
fildll
push
cwtl
mov
mov
insb
test
mov
jmp
cmpsb
add
mov
shlb
fidivl
cmp
in
pop
mov
iret
repz
pop
sbb
cmpsb
lea
out
sub
test
fisttps
dec
cs
xor
jp
xchg
mov
idivl
xor
out
mov
das
les
aad
jl
movsb
iret
test
fwait
pop
pop
or
std
xchg
lods
inc
and
add
cmpsl
push
lahf
or
fadds
jns
mov
fadd
push
movsl
mov
push
lds
scas
jnp
cmp
push
mov
or
mov
sub
nop
jae
leave
stos
bound
outsl
incb
aad
inc
mov
mov
ss
xor
xchg
add
ror
aaa
mov
mov
sbb
les
das
sti
cs
mov
inc
cmp
fstl
int3
sahf
mov
jns,pt
mov
mov
jmp
std
jg
rcl
clc
lods
pop
or
out
jl
or
inc
rcr
lock
sub
inc
in
and
mov
jbe
pop
push
aaa
imul
loop
push
clc
adc
addr16
idivb
xor
sub
popa
mov
sbb
icebp
and
inc
mov
dec
mov
cwtl
les
cmp
outsl
cwtl
mov
push
xor
cmp
nop
push
das
sub
in
xor
adc
ljmp
fstps
add
fildl
rcll
mov
add
adc
mov
jno
mov
std
inc
or
mov
xor
icebp
lea
out
xor
je
push
cmp
xchg
in
and
sar
outsl
sbb
inc
inc
call
jno
orb
add
jne
lods
pop
ds
js
lods
loop
dec
xor
out
adc
sahf
add
js
mov
xor
fcomps
shl
pop
add
lcall
daa
mov
mov
cmp
leave
cmp
cmpsl
sbb
xor
xchg
dec
stos
and
negb
inc
sarl
in
popa
out
lret
sub
test
inc
mov
pop
fxch
mov
sbb
lahf
sub
mov
sub
iret
cltd
and
inc
and
mov
jge
rcll
scas
or
hlt
jo
sub
jg
mov
add
clc
into
pop
mov
xchg
mov
sbb
cmp
cs
fistl
rcll
out
pop
sub
mov
rcrb
cli
jp
imul
jno
test
enter
mov
dec
fwait
ja
fucomip
mov
sbb
mov
pop
pop
xlat
jbe
push
sbb
rorb
push
jno
inc
inc
xlat
mov
cmp
pop
and
mov
aad
cmc
imul
and
leave
add
aad
or
or
rcr
clc
aam
xchg
test
push
jecxz
cmp
cmp
cmp
pop
addr16
mov
xor
mov
enter
cmpsb
stc
sbb
mov
mov
iret
nop
inc
push
jecxz
leave
pop
movsl
mov
outsl
popl
movsb
xor
addr16
lret
push
push
scas
adc
mov
mov
ret
sub
or
pop
movsl
sbb
test
inc
mov
push
out
out
out
mov
xor
mov
mov
mov
inc
pop
push
push
pop
jmp
mov
inc
mov
push
mov
ss
cmpsb
stos
adc
adc
push
pop
sbb
ss
je
jp
or
out
pop
out
or
mov
sbb
test
js
cmp
push
jbe
add
loopne
adc
xchg
jl
jne
clc
fldcw
push
mov
hlt
aas
add
mov
mov
mov
in
inc
push
mov
xorl
push
out
mov
andl
je
push
cli
dec
rcr
push
cmp
popf
pusha
lret
mov
inc
jbe
push
nop
xchg
sub
push
ret
push
sbb
pop
test
sbb
push
arpl
adc
int
sbb
in
dec
add
mov
mov
jbe
push
mov
mov
lods
sbb
sbb
inc
call
hlt
clc
jmp
aas
mov
pusha
dec
stos
mov
stc
xchg
dec
mov
in
cmp
sub
aaa
ret
inc
popa
inc
jne
push
or
dec
dec
imul
xor
adc
in
dec
cmc
pop
andl
mov
into
pop
push
fisubl
inc
loopne
mov
pop
jb
mov
aaa
sub
sbb
roll
stc
frstor
aam
sbb
xor
sti
add
cmp
std
sbb
insb
mov
adc
xchg
pushf
arpl
stos
enter
das
call
mov
insl
cmpl
push
cmp
push
sbb
fistpl
xchg
int3
movsb
push
lods
nop
jge
mov
js
cmp
aas
out
lahf
fcos
scas
iret
test
movsb
mov
shrl
mov
pop
lahf
jle
in
shrl
jnp
xor
pop
imul
sub
pusha
gs
daa
dec
int
or
cmpsb
int3
push
sbb
mov
lcall
jns
xchg
inc
sbb
out
sti
out
or
jecxz
xor
mov
fiadds
cmp
mov
sbb
cmc
cmp
jb
lahf
pop
aad
fsubrl
add
cmp
xchg
into
xchg
scas
push
fcmovnbe
pop
pusha
fisttps
test
xor
push
int
fiadds
jge
pushf
sbb
adc
in
mov
dec
stos
mov
insb
mov
sbb
push
xor
repnz
push
ftst
cs
sbb
std
push
sub
test
int3
push
cltd
xchg
shll
and
test
sti
push
rcl
cwtl
les
add
dec
mov
pop
imul
inc
push
adc
inc
mov
mov
mov
int3
inc
add
cmp
je
mov
gs
mov
push
adc
ja
jmp
mov
xchg
inc
pop
ret
adc
pop
scas
cld
jl
rcr
sub
jbe
mov
clc
pop
sub
shlb
in
cmp
iret
cmc
dec
mov
mov
sub
cmpsl
xor
jle
sarl
xchg
shrb
adc
bound
fs
jbe
push
mov
gs
rcll
sbb
cmp
cmpsb
sbb
mov
inc
iret
inc
call
repz
cmpsb
leave
scas
sti
pop
lods
xor
mov
fcoms
pop
pop
and
and
jle
mov
xchg
push
ja
adc
shlb
hlt
jmp
push
das
iret
dec
arpl
sub
dec
and
xchg
xor
mov
xchg
cltd
fcmovnbe
cmc
in
mov
xchg
gs
int3
inc
dec
rcr
xchg
adc
mov
pop
cmp
mov
xor
add
push
das
shrb
add
mov
push
push
add
ret
sbb
xor
sub
pop
dec
adc
jge
cmp
pop
push
lret
mov
or
or
ret
mov
outsl
test
test
adc
sbb
lds
aad
and
dec
sub
std
hlt
sub
ss
and
dec
fldt
fucom
loope
popa
lock
decb
decb
repz
ss
enter
cmpsl
dec
cltd
cmc
stos
and
sti
lods
lcall
mov
and
les
aas
insl
jl
and
arpl
repnz
dec
add
push
pop
and
data16
mov
insb
outsl
pusha
gs
sbb
lock
xor
push
mov
lret
test
ss
pop
and
inc
push
cmp
orb
int3
lcall
repz
jmp
lods
jbe
push
mov
cmp
out
xor
cmp
sub
inc
pop
adc
xchg
xor
mov
adc
dec
es
test
push
fsubr
in
test
push
push
xlat
add
cmpsl
adc
enter
dec
sub
mov
or
jl
stc
ss
fs
add
loopne
xlat
cmp
test
fdivrs
lds
mov
lret
push
mull
jns
xor
test
inc
push
ss
inc
dec
cltd
out
xchg
in
aaa
or
lea
inc
pushf
or
inc
xchg
leave
mov
sub
mov
jg
addl
bsr
mov
jge
mov
shrl
dec
in
out
adc
ret
mov
xor
inc
cltd
into
insl
icebp
jmp
jo
mov
cwtl
add
lret
sbb
push
add
test
mov
jnp
pop
pop
les
dec
test
mov
add
adc
push
fwait
inc
test
nop
push
aam
xor
add
push
mov
or
or
jge
sub
mov
mov
xchg
cmp
jg
es
out
cmc
jmp
xchg
lahf
test
push
pop
inc
outsl
je
unpcklps
add
xor
and
aam
out
hlt
jmp
xchg
lahf
test
push
pop
inc
outsl
je
unpcklps
add
xor
and
rcrb
outsl
hlt
jmp
sete
movsb
dec
push
pop
inc
outsl
je
unpckhps
add
xor
and
aam
out
hlt
jmp
xchg
lahf
add
xor
pop
dec
stos
pop
out
lds
jg
outsl
sti
pop
lret
dec
lea
xchg
mov
fcmovu
and
xor
pop
insl
ja
inc
pop
push
pop
cmpsl
lods
mov
xchg
idiv
int
frstor
das
aaa
cmp
addr16
jbe
inc
dec
push
pop
cmpsl
mov
mov
out
mul
aad
daa
into
adc
ja
jb
addr16
adc
ds
shrl
push
call
push
pop
sbb
cmpsb
sbb
or
xchg
inc
scas
mov
push
dec
lock
cld
js
push
out
testl
fwait
lods
mov
sbb
adc
adc
fnstsw
in
rcr
stc
mov
and
xor
mov
cwtl
data16
jge
mov
pop
cmpsl
std
nop
mov
int
cmp
xlat
jge
ret
call
cmpb
xor
push
sbb
xlat
add
popf
pop
fsubl
mov
pushf
sbb
mov
mov
push
sbb
test
sub
sbb
cmpl
or
lods
mov
xchg
idiv
aam
les
xor
pop
add
jne
push
dec
push
cmp
enter
mov
pushf
cmpb
mov
inc
push
inc
je
push
jb
add
and
xor
aad
mov
sbbb
mov
push
push
pop
jp
pop
pop
nop
pop
adc
and
fadd
in
bnd
int
frstor
sub
pop
sbb
inc
dec
push
pop
cmpsl
lods
mov
xchg
idiv
int
frstor
sub
pop
sbb
inc
dec
push
pop
cmpsl
lods
cmp
lods
call
cwtl
xchg
jno
xor
cmp
inc
push
jnp
out
pop
in
sbb
adc
sbb
jbe
les
das
adc
add
popa
out
clc
push
add
xchg
mov
pop
inc
mov
into
pop
inc
jnp
movsl
in
into
xchg
xchg
sbb
in
push
xor
lea
arpl
cmpsl
clc
pop
jl
sbb
push
scas
jmp
and
fidivl
lods
xchg
lock
sbbl
add
mov
mov
jno
or
xor
cmp
nop
mov
sbb
xchg
add
add
scas
ret
ja
pop
pushw
in
lret
xor
cli
sbb
cmp
push
pushf
popf
in
popl
or
cmp
mov
pop
and
lret
pop
push
lret
pop
scas
xchg
call
nop
and
xchg
mov
xchg
mov
mov
sbb
lea
clc
filds
popa
adc
xchg
pop
cmpsl
imul
sahf
cli
lahf
sbb
dec
in
mov
jbe
xor
cmp
push
xlat
hlt
in
mov
mov
cmp
or
xchg
jmp
aam
jmp
or
ljmp
mov
sbb
adc
cmp
jmp
jl
lds
fstpt
or
sarw
aam
test
cld
out
inc
inc
pop
push
je
mov
add
fwait
pop
dec
lahf
inc
push
jg
adc
call
pop
inc
lcall
xor
jo
jle
rolb
xor
pusha
daa
movb
jge
dec
movsb
test
push
sahf
sbb
enter
jb
sbb
dec
pusha
xchg
adc
adc
mov
mov
and
jnp
sti
sbb
sub
adc
loope
cmp
aad
ljmp
scas
lods
xchg
xchg
pop
mov
outsl
sbb
sahf
int
lea
jp
dec
and
aad
or
int
mov
pop
inc
push
dec
and
inc
std
pusha
add
sahf
cmc
jb
mov
xor
aam
xor
cmove
lock
cmp
mov
lds
lock
fdivrl
shll
ror
movsl
dec
flds
jne
iret
sbb
mov
cld
shl
add
jp
scas
in
sahf
lret
aad
xor
sub
scas
out
ret
push
or
sub
mov
pop
les
popf
cmp
jp
in
xchg
adc
sub
xor
pop
hlt
mov
lret
aam
or
add
daa
cli
loop
mov
scas
cmpsb
lds
call
jne
jp
punpckldq
xchg
fnstsw
cld
jg
cmp
xor
add
sbb
add
out
fstpl
jl
adc
hlt
cmp
movsb
mov
push
jge
jnp
sarl
out
movsb
pop
stos
mov
in
inc
jns
jge
fldcw
jb
sub
imul
cmp
cmp
lea
addr16
xchg
lock
rep
pop
fbld
jnp
aaa
cmp
sbb
insb
mov
or
mov
jmp
mull
dec
sbb
lock
pop
push
jp
inc
setae
pop
cmp
or
cli
cmc
ljmp
adc
or
stc
ds
adc
mov
sub
ljmp
dec
in
inc
adc
xchg
loope
inc
jno
jo
xchg
sbb
xchg
adc
mov
scas
sub
sub
or
jne
push
sbb
xchg
insl
ds
lcall
push
adc
stos
gs
mov
xchg
push
imul
mov
push
cmpl
add
clc
pop
add
inc
cmpsl
stos
daa
in
loopne
jecxz
xchg
arpl
shrl
lret
cli
push
xchg
lea
xor
inc
enter
xlat
cli
je
dec
imul
adc
cmp
inc
call
sub
add
nop
or
out
push
movsb
adc
stos
insb
xchg
call
sbb
and
jno
lret
jl
dec
cld
xchg
xor
scas
mov
jne
jns
mov
arpl
int
dec
add
cmp
sti
dec
repnz
sbb
cmp
out
ret
mov
and
pop
addl
adc
scas
fsubl
lods
lret
push
in
lahf
negl
lcall
decl
sbb
sbb
xchg
enter
push
add
cld
inc
loopne
jg
test
lret
sbb
add
adc
rclb
psubsb
mov
sbb
test
mov
add
and
lods
es
clc
bound
out
cltd
mov
fldt
cld
mov
ja
xlat
cld
add
push
dec
mov
mov
jb
mov
and
int3
aad
adc
pop
fwait
pop
fisttpll
gs
adc
jb
pop
jbe
xchg
pop
cmc
dec
mov
xor
sbb
lret
lret
fwait
ret
mov
and
adc
xchg
hlt
fcoml
shl
inc
add
inc
ret
imul
jecxz
jge
out
cmp
inc
fmul
jo
adc
daa
xchg
cld
fidivrl
aas
aad
lock
insl
lods
or
fldcw
insl
push
mov
and
jne
xchg
add
jne
aad
out
cwtl
ss
xchg
jl
test
fnstsw
unpcklps
xor
xor
in
mov
out
mov
xchg
sbb
sahf
mov
jmp
out
vminsd
inc
insb
subb
mov
push
pop
mov
pushf
test
dec
lds
mov
sbb
and
jbe
insl
scas
scas
or
xor
imul
insb
sub
out
and
cmp
jmp
test
dec
aam
pop
push
je
les
lret
xchg
shlb
in
sub
add
mov
jp
add
ljmp
add
mov
mov
ja
rcrl
sbb
or
push
sbb
dec
mov
int
cld
sbbb
push
push
cs
xchg
or
pop
mov
mov
add
sbb
sub
mov
sbb
mov
dec
js
dec
xchg
jns
data16
jb
sub
andl
hlt
pop
ljmp
inc
add
ret
mov
fiadds
roll
mov
xchg
inc
dec
xchg
jo
jbe
sub
ss
xorl
in
aaa
mov
push
popa
hlt
cmp
out
push
dec
loope
lods
faddl
arpl
inc
add
xchg
push
mov
jg
movsb
xchg
mov
scas
test
mov
dec
sbb
mov
mov
or
xorb
cmp
test
cmpl
cs
fimuls
cwtl
lods
jmp
mov
decl
push
imul
cmp
mov
dec
cmp
test
jge
mov
idivl
push
cwtl
inc
pop
jp
call
enter
sub
lock
adc
test
mov
mov
std
lcall
pop
lret
add
sar
adc
and
fnstsw
add
sub
and
dec
cwtl
fsts
int3
in
push
into
adc
adc
jo
xor
push
fstpt
rclb
sbb
or
xor
cmpsl
xchg
or
fcomps
movsl
inc
test
mov
push
ljmp
enter
das
jns
pushf
mov
push
rcl
or
sbb
call
pop
pusha
cmc
or
sbb
pop
inc
jbe
rorb
out
mov
test
sub
rcll
push
xchg
add
icebp
es
gs
push
sbb
add
out
mov
das
stos
iret
gs
outsl
cmp
xlat
fiadds
lock
jge
leave
push
adc
imul
mov
jecxz
cwtl
inc
mov
sbb
cltd
imul
xchg
sub
mov
push
push
sti
cmpsl
into
sub
stos
lock
mov
jp
arpl
stos
xor
push
addb
xor
xor
jmp
into
xor
or
push
lahf
ja
inc
mov
inc
cld
push
sbb
mov
jecxz
test
mov
xchg
xchg
aaa
lds
in
sub
loop
jg
shll
or
or
lock
sub
cltd
cmp
mov
shll
sbb
mov
je
inc
mov
lret
ret
bound
mov
or
in
adc
ficomps
cwtl
sub
cltd
adc
push
movsb
xor
dec
pushl
mov
ret
inc
sub
roll
ret
mov
addr16
xchg
mov
add
dec
jl
mov
lret
xchg
movb
jmp
into
and
mov
lods
fiadds
push
decl
push
insl
popa
xorb
sub
insl
or
sbb
gs
xlat
loopne
cmp
imul
mov
lods
aaa
fnstenv
xor
stc
adc
or
pushf
adc
ljmp
test
ret
push
lcall
pop
mov
xor
sub
out
jp
shrb
sti
subl
fstpl
or
jae
repnz
push
xor
andl
mov
out
sub
fldl
js
in
leave
push
mov
sbb
and
ss
jl
fdivr
jnp
xchg
cli
lods
into
sub
jbe
in
ret
jge
xlat
mov
sub
dec
decl
push
and
pop
push
pop
pop
xor
stc
dec
mov
data16
repnz
push
loop
std
inc
and
andl
cmpsl
lcall
push
fisubs
stos
sarb
imull
pop
xor
stc
sub
cs
ds
test
mov
adc
outsb
or
lcall
int3
stc
jge
cmp
testl
and
xor
push
imul
or
repnz
sarl
cmp
nop
dec
fwait
sub
jo
fnstsw
cmpsb
adcl
inc
gs
sub
cmp
iret
mov
enter
daa
js
mov
lea
add
xlat
fisttpl
pop
stos
push
stc
mov
gs
das
lahf
push
rol
ret
add
mov
dec
sub
mov
jge
inc
test
dec
fmulp
loope
fidivrs
adc
mov
mov
dec
jb
das
cli
xchg
jl
dec
push
fldl
xchg
leave
mov
jo
fwait
and
push
in
lds
loope
jno
mov
sbb
push
jp
and
mov
stos
dec
out
sbb
dec
in
cmc
add
stc
sbb
jle
mov
cmp
sub
das
jae
mov
push
jnp
subl
sbb
jbe,pt
push
adc
movsb
shlb
mov
jae
out
sub
stos
push
or
push
add
pop
xchg
or
mov
and
mov
movsb
dec
lods
pop
mov
clc
sbbb
xchg
jne
adc
jmp
sub
mov
rcrl
mov
xchg
adc
ds
cwtl
dec
fs
xchg
aam
or
andb
or
jmp
sbb
decb
mov
mov
mov
sbb
lds
push
or
push
out
imull
mov
sub
mull
cmp
inc
rcll
mov
jg
icebp
xchg
and
dec
pop
jmp
into
cmc
je
sbb
test
lcall
pop
or
ret
dec
push
insl
test
int3
cmp
std
outsb
pop
popf
jl
adc
mov
sub
jmp
pop
and
ljmp
out
pusha
ffreep
mov
stc
aam
sbb
or
cmp
add
inc
pop
mov
xchg
push
pushf
cmp
popl
loop
mov
adc
insb
adc
repnz
and
and
pop
out
mov
pop
dec
sub
je
mov
dec
fstpl
jmp
xorl
pop
inc
sub
sbb
enter
or
in
mov
pop
pop
xchg
adc
cmp
pop
inc
bound
movsl
adc
adc
test
insl
xchg
je
pusha
cmp
orl
scas
mov
xlat
inc
mov
adc
stos
icebp
sahf
aaa
jge
setp
mov
rcr
ret
mov
push
sub
inc
jmp
les
push
xchg
in
imull
xor
push
mov
movsb
int
jl
and
sbb
push
cld
cld
insb
addr16
ret
or
sbb
aaa
adc
lret
sbb
rol
push
inc
xchg
add
mov
stos
movups
stos
add
outsl
push
push
cmpsb
push
sbb
pop
mov
mov
xchg
push
stos
sub
push
mov
jae
add
cwtl
ja
jne
mov
jb
push
insb
push
mov
cmp
jg
test
pop
cmp
fmull
inc
mov
out
stc
jbe
mov
jnp
dec
mov
sbb
mov
jo
aad
jg
popa
or
mov
jno
jmp
cmc
call
or
enter
and
sub
ss
cmp
sbbl
mov
dec
jmp
test
pushf
add
mov
clc
decb
and
and
push
sub
sbb
aam
sbb
and
adc
dec
cmp
mov
pop
xlat
ss
xchg
fidivs
gs
test
enter
or
mov
ds
test
dec
xchg
ljmp
jp
inc
stc
or
and
dec
inc
sti
mov
out
std
pop
cmp
push
jae
xchg
int3
mov
xlat
adc
push
cmp
xorb
stc
lods
dec
pop
push
sub
lock
mov
push
pop
and
js
aad
xor
jb
sbb
cld
bound
sub
movsb
rcr
std
int3
repnz
cwtl
or
mov
push
out
arpl
push
stos
xchg
sub
adc
xor
out
enter
ss
sbb
jb
testl
mov
cmp
repz
and
test
test
loopne
cmp
inc
repz
decb
lcall
lds
leave
daa
jl
gs
ja
pop
adc
add
lret
push
cmp
pop
mov
pop
jmp
in
mov
cld
stos
dec
inc
sbb
mov
mov
insb
dec
das
sub
mov
push
inc
lret
xchg
push
aaa
lock
xchg
loopne
sub
jnp
pop
adc
scas
fs
in
out
xchg
test
mov
mov
popf
in
adc
pop
xchg
pop
in
xchg
jge
das
sub
rclb
xor
popa
inc
and
aad
outsl
inc
pop
lret
and
lret
insb
fmul
xor
xor
add
xchg
push
lea
ret
xchg
lock
jp
in
popa
out
bound
call
call
pop
lcall
dec
out
dec
mov
adc
out
sahf
cmp
adc
cld
jmp
fnstsw
jecxz
data16
outsl
out
or
xchg
and
hlt
mov
out
cld
cmp
mov
mov
mov
mov
mov
mov
jae
cmpsb
jmp
movsl
je
daa
xchg
mov
add
jg
dec
div
adc
sahf
shll
adc
mov
mov
int
dec
sbb
insb
mov
stos
push
push
fistl
gs
mov
cmp
fcoms
sbb
cmp
ljmp
xchg
sti
mov
fmull
push
or
rcll
bound
cld
out
add
dec
pop
add
dec
lds
sbb
iret
xchg
cltd
jp
xchg
ss
bound
add
cmp
inc
mov
sub
jmp
in
dec
dec
pop
ret
mov
xchg
sbbb
xchg
lods
push
ds
mov
insl
mov
pop
imul
mov
test
mov
or
es
sbb
add
fnstcw
fnstenv
push
roll
jb
and
jmp
jne
jo
repnz
mov
mov
jecxz
sub
movsl
pop
fbstp
jp
mov
xchg
iret
inc
push
nop
jle
imul
cmc
adc
and
sbb
roll
stos
scas
stc
lock
xchg
lcall
lret
addr16
pop
int3
ficoms
cmp
fdivs
in
dec
aad
fs
cli
cmp
or
fidivl
sbb
test
hlt
mov
icebp
or
adc
mov
scas
cs
test
push
pop
les
cmp
cmpsb
scas
test
xlat
mov
inc
mov
push
rcll
jne
mov
mov
add
cmp
daa
fs
xor
pusha
cwtl
pushf
stos
jbe
jmp
lock
imul
les
iret
loop
fldl
rclb
mov
pusha
mov
xor
sbb
inc
jns
sbbb
xchg
or
jne
add
xchg
or
adc
sbb
jle
add
jno
or
es
inc
mov
iret
and
sub
mov
xor
movsl
jno
fnsave
mov
repnz
xchg
stos
push
cs
lods
pop
inc
add
test
les
add
xor
lock
std
dec
ud0
xchg
mov
cmp
push
dec
dec
fildl
dec
fistpll
sub
gs
mov
push
fstl
jbe
rorb
and
call
jg
mov
ljmp
addb
cmc
fimuls
dec
shrl
mov
xor
clc
fdivrs
or
leave
ljmp
ljmp
inc
mov
loop
inc
jmp
push
cltd
adc
idivl
mov
dec
je
fs
fsubs
add
lret
mov
int3
das
inc
daa
cli
lea
mov
pushf
loopne
jg
xorl
sti
fisttpl
adc
icebp
jecxz
fisubs
divb
push
in
push
xor
stc
imul
int3
cmc
decb
orb
sbb
test
js
pop
fisubl
inc
mov
jle
xchg
mov
in
test
jmp
test
mov
xchg
out
mov
push
fists
dec
and
leave
fcomps
mov
jno
push
push
pop
inc
mov
mov
mov
shlb
test
cs
cwtl
push
lods
das
or
inc
adc
adc
lahf
mov
lahf
cltd
cmp
jns
mov
xor
dec
fisttps
xchg
repnz
push
jno
push
incb
daa
inc
lds
outsb
popf
pushf
push
and
lock
repz
inc
and
outsb
shl
adc
ds
mov
pop
or
sub
sbb
sub
mov
aam
out
xchg
add
fistps
xor
popf
inc
pop
iret
add
fidivs
dec
and
add
jne
dec
lock
push
adc
adc
xchg
into
or
shlb
add
pop
int3
jmp
push
mov
cli
mov
mov
jns
sti
add
inc
add
jp
or
aaa
and
mov
mov
adc
jg
mov
leave
nop
mov
int3
mov
sub
es
clc
xor
sti
sbb
scas
xor
movsb
mov
inc
movsb
repnz
pop
sub
and
push
shlb
mov
push
and
mov
cmpsl
jl
inc
dec
jns
call
shrb
int3
fildll
daa
std
repz
test
test
sbb
rorb
inc
shll
aad
jno
insl
sub
ja
fstpl
push
adc
xor
and
lds
add
cmp
test
aaa
mov
mov
rol
xor
sbb
inc
push
and
pop
xchg
insb
pxor
dec
and
pop
repnz
repnz
aaa
mov
fldl
rcrb
imul
pop
popa
mov
or
leave
movaps
xor
and
stc
daa
stos
and
push
xchg
stc
dec
call
add
dec
jno
push
aas
sbb
lea
fmull
jns
fwait
dec
aaa
int
pop
mov
in
in
in
ljmp
cmp
adcl
pop
in
jp
popa
jns
shlb
mov
sbb
ljmp
movl
fwait
popf
cwtl
and
add
xchg
in
cld
test
jns
stos
mov
fldl
sub
das
shrb
stc
popa
loop
jae
jle
call
nop
mov
mov
push
mov
addr16
mov
mov
push
int
jl
popf
ja
dec
sti
pop
sub
lcall
jg
lods
shrb
arpl
push
pop
int
pop
and
sub
imul
mov
enter
imul
daa
cmp
push
mov
repnz
es
xor
gs
out
idiv
int
frstor
sub
pop
sbb
inc
dec
push
pop
cmpsl
lods
mov
xchg
idiv
int
frstor
sub
pop
sbb
inc
dec
push
pop
cmpsl
lods
mov
xchg
idiv
int
frstor
sub
push
sbb
insl
ja
inc
dec
push
pop
cmpsl
lods
mov
xchg
idiv
inc
int
fstp
sub
pop
push
in
cmpb
in
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
mov
cltd
ljmp
mov
fwait
mov
sbb
pop
cmp
cmp
jns
jns
mov
cltd
ljmp
fldcw
sbb
push
pop
aaa
dec
dec
push
imul
nop
cli
sub
fisubl
stos
icebp
lcall
jbe
inc
sub
ss
je
jns
mov
mov
lcall
add
xchg
popa
xor
pop
cmp
test
add
das
insb
xchg
insb
orb
sbb
dec
jecxz
sbb
out
mov
int3
or
cmp
pop
sub
out
add
imul
popf
popf
ss
stos
push
lock
je
test
xchg
sbb
stos
mov
pop
aam
adc
pop
inc
ss
and
fbld
sub
pop
sub
jg
addr16
lret
ss
icebp
iret
imulb
cmp
pop
or
or
sbb
inc
cli
sub
fidivrl
stos
jmp
jp
push
pop
and
cmp
jae
jns
in
cld
stos
int3
fcmove
lret
mov
fimuls
add
pop
aas
pop
ds
jns
dec
sbb
inc
out
clc
pop
mov
jmp
xor
or
dec
push
xor
pop
dec
sbb
mov
adcl
push
pop
cmp
cmp
imul
cltd
ljmp
fldcw
or
push
pop
cmp
cmp
imul
mov
push
aaa
lret
into
mov
enter
icebp
lds
and
mov
or
out
push
mov
jns
or
idivb
out
sarl
pop
xchg
sub
add
ret
andb
andb
dec
ret
or
repnz
gs
push
hlt
rorl
les
or
movsl
xchg
loopne
in
andb
ret
add
ja
sbb
imul
insl
popf
xlat
insb
or
dec
rcll
dec
sub
sbb
pop
fmuls
cld
push
sub
jb
in
ja
push
inc
jl
mov
sbb
jge
sbb
repnz
int
pop
or
xorb
cmp
push
jge
orl
adc
fldl
add
sbb
and
xor
mov
sub
pop
add
cmp
pop
jmp
push
cmc
adc
lods
test
leave
pusha
dec
lea
imul
shlb
mov
adc
dec
inc
shrb
bound
inc
inc
stc
popf
add
fsubrl
outsl
or
jbe
movsb
lods
shrl
adc
push
les
arpl
sbb
into
fsubrs
sbb
mov
push
jp
add
adc
movsl
mov
add
pop
fcomps
cmpsb
push
push
subl
aam
out
mov
sub
addb
rclb
ret
addr16
mov
adc
mov
ds
push
test
fcoms
jo
inc
xchg
in
jp
repz
popa
mov
inc
neg
mov
out
clc
sub
add
xchg
xor
mov
sub
test
mov
cwtl
dec
enter
mov
inc
add
jno
aam
stc
out
in
jecxz
inc
xchg
cmpsl
pop
xlat
dec
sti
xchg
adc
popa
lods
xchg
stos
and
sbbb
dec
movsw
imul
popa
outsb
dec
fmulp
sbb
fs
push
iret
jae
div
mov
pop
add
subl
fsub
or
adc
mov
lret
xor
xor
inc
test
jmp
jl
mov
jmp
sbb
daa
jo
jp
lds
adc
stos
xchg
inc
and
and
bound
and
sahf
fwait
test
lds
xor
mov
and
dec
stos
in
mov
and
test
cmc
stos
push
test
xor
inc
roll
cmc
stos
mov
cmovne
or
repnz
ljmp
lea
sub
inc
lds
inc
bound
sti
add
repnz
les
xor
cmp
xchg
lcall
mov
rcrb
push
out
pop
dec
cmp
sbb
xor
lcall
pop
jb
and
jo
cmp
pop
inc
movsl
pushf
into
std
mov
ja
pop
stos
inc
push
cmpsl
xor
inc
and
invd
cmp
std
inc
jecxz
lahf
out
nop
fcmovb
adc
sbb
psllw
icebp
sbb
loop
mov
adc
mov
inc
push
adc
pusha
in
daa
cmp
sbbb
lea
iret
mov
jecxz
pop
repnz
mov
inc
adc
faddl
fimull
divl
adc
popf
mov
dec
or
jge
sbb
add
stc
movsl
adc
adc
test
pop
xlat
fdivrs
and
push
xchg
scas
adc
movsb
pop
out
mov
ret
lahf
lret
mov
cmp
cltd
ds
and
add
jnp
xor
out
insl
fwait
imul
push
outsl
adc
loope
inc
xchg
shr
ja
lods
imul
xor
and
push
jge
push
cmp
fdivrs
xchg
jle
jb
rol
lods
cs
add
pop
mov
loop
push
cmpsl
enter
ffree
nop
sub
dec
push
mov
push
jl
jne
adc
xchg
and
inc
scas
out
rol
mov
mov
jne
xchg
mov
aam
mov
out
test
lcall
dec
lods
out
shlb
fwait
pusha
push
or
add
scas
and
inc
aas
out
test
adc
mov
popf
mov
inc
cmp
mov
mov
pop
popf
pop
push
cld
test
aaa
loop
mov
push
sbb
pop
mov
scas
icebp
mov
pop
into
pop
mov
mov
dec
jae
outsb
mov
sbb
xor
icebp
int3
iret
push
mov
xor
add
out
popa
mov
sbb
ret
inc
push
cs
mov
imul
cmc
ss
inc
sub
pop
push
insb
or
push
inc
sbb
out
mov
add
out
jg
aas
test
mov
xor
mov
imul
hlt
or
lock
subb
jb
add
fists
inc
enter
inc
push
sbb
inc
cmp
rcrb
mov
popf
into
cli
popa
adc
adc
test
das
sahf
aad
ret
movb
pop
fwait
xchg
je
aad
sbb
sub
xlat
pop
aad
or
cmp
mov
js
mov
stos
push
shrl
iret
fwait
int3
cmp
cmp
mov
ljmp
ja
and
scas
cmpsb
iret
xchg
inc
insb
jg
imul
fimull
mov
xchg
mov
mov
jnp
jo
dec
dec
xchg
push
xor
rcrb
pop
jnp
push
xor
pop
dec
or
es
rclb
sbb
test
ss
add
cmp
and
xor
bound
pop
in
lds
rorb
mov
lret
std
lret
int3
scas
jbe
sti
loope
push
jg
inc
sub
sbb
jecxz
mov
pusha
cmp
in
nop
mov
out
es
cli
shrl
lea
mov
ss
xchg
outsb
pusha
cmp
pop
in
call
lods
xchg
mov
vmovhps
loopne
xor
and
jbe
ljmp
mov
xor
pusha
adcl
mov
loop
unpcklps
cmp
js
adc
mov
fcompl
std
pop
into
ss
arpl
sbb
test
outsl
ljmp
mov
push
cmp
jp
inc
xor
aas
pop
ret
pop
in
shll
lahf
fstp
sbb
out
adc
shlb
lahf
movsb
les
xor
jl
cmp
clc
repz
cld
test
dec
or
fsubl
aas
inc
inc
jecxz
sbb
or
scas
sbb
xchg
cltd
into
in
inc
out
and
loopne
add
rolb
or
sbb
push
repz
test
sbb
sbbl
inc
xor
xor
dec
jp
mov
mov
shll
inc
insb
das
mov
scas
inc
test
sti
inc
js
lds
xor
and
mov
arpl
mov
dec
sub
fcmovne
scas
xor
xor
clc
out
mov
int3
add
push
cmp
xor
pop
sbb
movsl
imul
sub
jmp
jmp
pop
cmc
scas
fnstcw
add
testb
cli
sbb
aam
and
or
pop
arpl
mov
sub
hlt
pop
or
xor
or
lahf
mov
fisttps
and
pusha
or
jbe
push
test
push
jno
mov
pop
insl
xchg
mov
shr
es
in
nop
imul
and
cmp
mov
sahf
out
mov
ds
inc
gs
scas
lcall
jbe
repz
inc
pop
lods
out
andl
push
dec
sub
in
jbe
adc
lods
lods
and
mov
outsb
xchg
pop
push
popa
pop
mov
mov
cs
ss
out
jae
xchg
jb
jmp
shrb
fcompl
rcl
pop
test
sub
in
fdivl
xor
call
lods
shrb
aaa
mov
int3
jnp
enter
cs
std
xchg
cmpl
lods
insl
dec
repz
jp
jns
dec
stc
stos
pop
sbb
daa
pop
sub
orb
pop
es
dec
insl
cmp
mov
ds
movsl
adc
jmp
pushf
scas
jnp
mov
fnstcw
jne
mov
dec
mov
mov
testl
cs
or
sub
sarl
out
insl
push
dec
sub
cmp
sub
mulb
sahf
int3
pop
jne
rcrl
pop
add
sub
jge
mov
adc
xor
fimuls
fbstp
scas
lods
imul
pop
xchg
xor
popa
sub
ret
scas
inc
ja
cmp
jno
xor
imul
movsl
or
dec
ja
mov
nopl
bound
stos
fsubs
dec
clc
insb
stc
cltd
adc
stos
adc
cmp
cmp
jno
int
xor
xor
inc
test
fs
mov
fisttpl
push
jae
jp
cmpl
in
and
cmpl
repz
jbe
push
push
in
push
push
inc
aas
dec
push
xor
loop
ljmp
aad
imul
aas
xor
jge
out
jo
mov
push
mov
cld
repz
and
xchg
add
ficoms
pop
pushf
xor
sahf
std
decl
fnstenv
lea
lcall
sub
test
mov
xchg
dec
test
xor
adc
mov
movsl
scas
push
sbb
fidivs
movsl
les
bound
push
pop
fbld
cmp
out
xchg
sub
adc
stc
cmp
daa
xor
shrb
sbbb
sbb
xchg
or
insb
cmp
xchg
lcall
xchg
ror
stos
or
inc
xor
push
hlt
push
lea
xchg
mov
shrb
in
clc
mov
aam
pop
aas
fisttpll
repz
mov
fildl
imul
push
es
adc
adc
pushf
ds
sub
out
and
loop
jmp
mov
add
das
adc
inc
gs
or
sar
out
scas
call
aam
push
pop
fildl
mov
lods
fcoms
lods
cmpsl
xchg
jbe
mov
dec
out
push
jb
jecxz
pop
out
mov
test
rcr
int3
xorl
push
scas
mov
adc
int3
pop
pop
jle
jo
xchg
rolb
or
ss
or
pop
jae
sahf
sub
pop
jecxz
inc
jno
dec
pop
xchg
movsb
pop
imul
jecxz
pop
out
push
push
aas
push
pop
stc
xor
jbe
and
or
add
sub
adc
and
adc
lods
cmp
inc
mov
pusha
aas
jle
dec
rcrl
es
rorb
cmp
movhps
dec
jg
cmp
lcall
ret
aam
push
rcr
inc
and
or
inc
bswap
icebp
xchg
xor
in
das
cmpsl
xchg
jmp
je
jne
mov
sbb
divb
mov
or
mov
mov
addb
xchg
test
out
aaa
lock
xlat
movsl
test
jecxz
mov
es
divps
fnstcw
jge
out
xchg
dec
inc
jno
popf
xchg
xchg
push
popa
aad
xchg
cltd
fs
dec
in
add
or
fisttpll
aad
sub
scas
add
mov
fmuls
es
sub
cltd
mov
jp
rolb
lret
outsb
push
out
add
movsb
xchg
loope
sub
jno
mov
in
and
xorl
mov
aad
test
outsl
cs
jnp
lret
mov
push
repnz
cmpsb
fdivrs
jge
andl
push
sbb
jecxz
nop
push
je
ja
shll
test
loope
lahf
mov
ret
mov
push
int3
add
adcb
scas
pop
or
ds
or
pop
mov
les
xor
out
pushf
jbe
sbb
inc
ret
loopne
jo
cmpl
out
je
sbb
mov
jecxz
aam
ret
xchg
dec
inc
cmpsb
fistps
push
add
aad
sub
mov
mov
in
xchg
pushf
cmp
aaa
dec
jb
push
test
fwait
cmpsb
daa
or
push
add
push
add
mul
push
lods
push
inc
test
pop
lret
fisubrl
jno
arpl
test
inc
sbb
movsl
push
xor
mov
std
jecxz
ljmp
mov
clc
xchg
icebp
pop
dec
fiaddl
inc
adc
loop
and
xchg
jle
mov
inc
and
or
sub
and
mov
loop
jp
add
ret
ficoms
or
lret
pusha
inc
int
cmp
dec
icebp
loope
dec
aas
and
in
adc
xchg
lds
sbb
imul
mov
xchg
mov
test
push
jo
lret
jno
fimull
into
inc
xchg
jge
push
and
cld
insl
das
mov
and
hlt
cmp
dec
outsl
cmp
leave
fmuls
add
sbb
fucompp
adc
mov
push
mov
nop
rol
stc
sub
fmull
pop
jbe
loope
mov
popf
scas
push
xchg
js
loop
jl
sub
cmc
add
jo
adc
stc
add
adc
push
jb
daa
xor
jle
add
jp
and
sbb
fdivrl
fnstsw
fisubrl
movsb
xchg
das
push
test
rorb
pop
sub
call
push
jge
push
adc
dec
lcall
lahf
das
test
imul
ss
dec
cmp
insb
adc
stos
loop
cmpb
cmp
push
faddl
mov
aam
adc
out
insb
pop
jl
lods
sti
mov
cmc
arpl
out
add
dec
sahf
xchg
loopne
ljmp
push
inc
paddsb
inc
add
ret
popa
popf
dec
add
repz
iret
add
mov
dec
shrl
inc
out
mov
pop
lods
test
mov
and
cmp
lret
rol
test
lcall
jbe,pn
js
mov
add
add
lea
sub
xlat
mov
std
push
int3
push
ds
adc
rolb
nop
movsl
push
shrl
jmp
push
mov
xor
inc
cmc
into
scas
mov
arpl
ret
mov
andl
sti
decl
in
inc
ret
xor
sbb
aas
push
jb
inc
mov
inc
push
push
rcll
popl
test
jo
int3
sbb
cmc
pop
mov
pshufw
cmpb
inc
pop
or
mov
cwtd
cmp
inc
pop
mov
in
test
cmpsl
lret
push
jns
xchg
test
test
popf
push
insl
mov
dec
mov
lret
test
sbb
adc
and
xor
lea
mov
or
rorl
cs
dec
fdivp
out
mov
jno
lcall
lea
add
cld
or
push
xchg
sahf
mov
xchg
mov
mov
dec
movsb
push
loopne
mov
push
dec
jbe
in
add
jmp
scas
mov
jecxz
adc
pushl
mov
popa
int3
decl
into
negb
mov
int3
adc
and
mov
out
mov
fiaddl
pop
pop
popa
dec
sar
out
lret
pop
ret
push
cli
dec
pop
xchg
xor
xchg
leave
das
mov
sub
inc
mov
jno
mov
imul
je
ja
loopne
lods
test
pushaw
cmp
out
fiaddl
mov
pop
repnz
xor
shr
mov
loopne
or
xchg
pusha
mov
scas
repz
daa
std
xor
mov
aaa
mov
dec
add
mov
or
je
sub
and
sarl
xchg
sub
insl
loope
pop
add
test
cmp
sar
sbb
sbb
clc
dec
sub
rolb
xchg
popa
iret
arpl
ficomps
imul
mov
push
cli
push
in
lds
adc
cli
ja
mov
stos
cmpsb
fucom
shrb
int
rcl
stos
daa
mov
rolb
xorb
and
bnd
jnp
inc
sahf
push
xor
fiaddl
jmp
xchg
jecxz
imul
xchg
push
bound
dec
enter
stos
push
add
insl
dec
jecxz
out
add
mov
inc
imul
imul
mov
mov
movsb
mov
pop
or
xor
and
xchg
scas
cld
xor
pop
sbb
out
fisttps
mov
test
test
or
mov
sbb
jcxz
mov
clc
push
and
jl
jg
insl
cmp
add
int
sub
mov
mov
mov
lret
addr16
add
push
out
mov
xor
fldl
outsb
test
out
popf
lock
neg
addr16
stos
pop
jle
mov
jo
mov
cli
mov
hlt
lock
pop
mov
pop
pop
stc
enter
jb
add
pusha
cmpb
orb
dec
sbb
cmp
ja
test
jmp
stc
dec
js
stc
and
pop
xchg
rolb
bound
sub
pop
lahf
xchg
pop
popa
repz
shlb
das
js
jo
xor
daa
jnp
xlat
mov
add
xchg
pop
mov
mov
lds
sahf
int
lods
test
in
cmc
dec
inc
cld
jae
ljmp
cmp
shrb
mov
ficompl
cmp
rclb
test
fmulp
jno
xchg
loopne
loope
pop
xor
pusha
cld
cmpl
pop
icebp
fwait
push
lahf
sti
dec
cld
jle
or
sub
dec
in
sbb
and
lcall
push
xchg
add
std
cmp
mov
push
pushf
jmp
sub
or
cmp
loop
out
mov
fs
add
push
xchg
ret
or
cmp
les
xchg
mov
aas
pushf
add
shll
mov
lcall
push
xor
xchg
inc
dec
mov
sub
or
hlt
mov
adc
or
lea
into
jg
xchg
mov
dec
push
push
fidivs
xchg
mov
lahf
int3
and
or
mov
add
idivl
sbb
and
mov
mov
in
aaa
jmp
pop
or
lods
mov
sub
mov
cmpsb
mov
jbe
xchg
js
aas
mov
xchg
xchg
dec
add
cmpsb
aad
sub
xchg
mov
sub
pop
xchg
or
out
fsubl
pushf
rclb
xor
rcrl
scas
push
mov
xchg
pop
pop
imul
cmp
shrb
mov
xchg
pop
pop
popf
iret
cmp
out
andb
lahf
jne
cmc
mov
or
sbb
imul
ret
aad
xor
mov
pop
adc
or
xchg
sbbl
mov
push
lcall
sbb
in
test
mov
ret
dec
lret
push
stos
stc
and
imul
cmpsl
sti
pop
mov
imul
popa
sub
lods
clc
scas
insl
xor
insl
dec
jecxz
in
aas
and
mov
in
lods
pop
dec
jp
pop
clc
repz
rorb
loope
add
mov
push
jg
cli
push
sbbl
insb
add
loope
mov
sub
and
push
xor
xor
mov
xor
lahf
mov
data16
dec
pusha
popa
lock
pop
shlb
jne
push
push
and
push
lods
adc
sbb
rorl
fisubs
lahf
daa
xor
cmp
sub
mov
add
pop
adc
or
add
std
and
xor
cmpsb
sub
or
inc
mov
adc
and
and
mov
jg
adc
cmp
loopne
xchg
leave
mov
cwtl
push
xor
sbb
sbb
leave
lahf
or
add
cmp
int
fdivrl
sbbl
sarl
jne
sub
push
lods
mov
jnp
dec
jns
std
add
or
mov
js
dec
bnd
jo
movb
pop
jb
movsb
mov
cmp
pop
out
or
jecxz
into
in
push
xor
mov
add
sahf
fcomps
xchg
xchg
lock
insb
hlt
jo
mov
and
jp
xchg
adc
pop
je
inc
pop
aas
sahf
jl
imul
lret
fldcw
or
push
pop
cmp
cmp
imul
cltd
ljmp
fldcw
or
push
pop
cmp
cmp
imul
cltd
ljmp
fldcw
or
push
pop
cmp
cmp
imul
fwait
ljmp
fldcw
idivb
rolb
rcl
xchg
in
cmc
bound
test
stc
subb
fsubl
push
or
xor
movsl
add
push
sarl
mov
jb
bound
xor
inc
sub
jbe
dec
adc
push
shlb
ret
call
sbb
sbb
xor
pop
push
or
xor
insl
or
fsub
leave
sahf
jmp
int
xlat
xorb
jnp
sub
xchg
popa
negl
adc
xorb
cmpsl
fwait
outsl
dec
cmpsl
int3
adcl
lods
inc
sbb
notl
pop
out
hlt
or
iret
js
dec
fstl
sbb
cli
and
fucom
mov
xor
or
mov
sbb
sbb
mov
mov
lods
inc
scas
xor
mov
mov
jb
andb
movsb
call
rorb
lds
xchg
adc
dec
sbb
push
pop
jmp
leave
xchg
cmp
pop
add
inc
fsubs
dec
pop
xchg
sub
in
loopw
pop
int
js
xchg
push
push
inc
jmp
daa
out
iret
inc
inc
xor
or
lods
adc
test
int3
ret
fsubs
jp
sbb
push
cmp
xor
adc
pop
xchg
mov
icebp
jge
movsl
aad
out
sbb
js
popf
es
inc
pop
outsb
daa
jg
jbe
lods
fisubs
xlat
mov
lcall
sub
sbb
push
dec
inc
sbb
int3
push
repz
mov
call
push
cmp
xor
dec
adc
push
sarb
mov
call
push
cmp
xor
dec
adc
push
pop
lds
shl
jbe
gs
cmp
test
jne
or
cmpsb
jo
jge
adc
loop
mov
out
mov
dec
xchg
lcall
mov
xor
sbb
sbb
stos
mov
subb
inc
jno,pt
out
cs
mov
xchg
mov
mov
scas
add
add
push
push
mov
call
inc
cld
stc
xchg
mov
jp
sub
mov
je
sbb
mov
icebp
sub
mov
test
mov
lods
mov
add
rcl
push
xchg
inc
sti
ret
or
push
cmp
xchg
stc
pop
in
clc
jmp
xchg
jmp
mov
out
movsb
mov
test
mov
add
add
movsl
scas
jge
push
lcall
jl
jo
fsub
imul
dec
ja
outsb
fcmovnbe
div
inc
inc
rolb
lcall
mov
stos
fucomip
mov
sbb
push
xor
pop
addr16
sub
mov
sbb
xchg
popl
push
jns
sahf
cltd
lds
pop
xor
hlt
dec
jmp
loopne
or
lea
add
adc
mov
sbb
shlb
test
or
dec
int
pop
jne
mov
push
cmp
insb
xchg
andl
lahf
xor
or
cmp
pusha
in
sarb
lock
push
lahf
inc
mov
or
fbstp
stos
mulb
cmp
mov
divb
and
call
addr16
jne
stc
xchg
push
pop
out
push
in
and
std
xchg
mov
stc
jmp
inc
js
enter
or
inc
mov
mov
push
das
imul
out
out
xchg
outsb
lods
xor
mov
sarl
loope
lock
out
lea
hlt
adc
shll
out
pop
and
adc
cld
adc
ljmp
xchg
out
cmp
call
jecxz
outsl
fdivr
push
fwait
jmp
test
shrl
add
cs
fbld
xchg
outsl
sarb
ror
or
sbb
sti
inc
shl
lods
xchg
lds
jne
pop
mov
dec
je
lahf
jmp
sbb
aad
arpl
fs
insl
mov
out
sub
scas
inc
bound
cmc
in
fnstsw
xlat
add
cwtl
fwait
ss
adc
jmp
inc
mov
testl
fs
dec
fwait
jecxz
std
cmp
or
repz
jmp
test
sahf
cmp
int
or
jns
add
add
test
lds
cmc
jbe
dec
sbb
cmc
insl
pop
or
dec
leave
movsl
cli
xor
clc
aaa
dec
std
cmp
sbb
and
inc
icebp
fwait
mov
into
insl
pop
add
xchg
lock
push
and
fs
inc
movsl
inc
lahf
out
and
mov
push
mov
movl
rcrb
shll
or
cld
cli
in
or
cmc
inc
adc
iret
jp
fsubrl
cmove
sahf
xchg
push
gs
lcall
fldenv
imul
jmp
arpl
aaa
mov
sti
mov
adc
mov
pop
push
iret
jbe
ficomps
fwait
jecxz
dec
cmpsl
pop
adc
cmpsb
cmp
mov
add
pop
ret
fdivrl
mov
mov
ret
mov
ja
cmp
mov
jne
mov
aas
decb
iret
inc
mov
fidivs
jge
pop
push
mov
jp
mov
xor
data16
mov
mov
fs
cmp
cmp
test
inc
lea
dec
ret
cmp
clc
ret
sub
jl
je
adc
sti
clc
cmc
pop
jle
and
loop,pn
cwtl
sahf
lea
arpl
adc
sub
jp
pop
stc
xchg
inc
call
dec
into
arpl
or
je
rorb
fwait
mov
popa
dec
and
popf
aas
mov
leave
aam
arpl
or
adc
cmpsb
adc
in
jb,pn
outsl
push
es
movsb
sub
sub
pop
cmpsl
addl
dec
jecxz
cli
add
xchg
dec
jnp
leave
mov
push
pop
sti
sahf
pop
push
sbb
jno
jb
adc
lods
es
cltd
cld
in
scas
pushf
mov
adc
aas
jge
mov
jae
lds
xchg
arpl
sbb
inc
and
lods
push
shlb
sub
xlat
repnz
jmp
mov
pushf
lods
pop
stos
adcb
test
mov
adc
jns
jge
out
inc
sub
mov
mov
inc
xlat
outsb
add
jp
or
cmpsl
mov
lcall
in
cltd
inc
cmp
xlat
cmpsb
mov
ljmp
ret
push
pop
fiadds
cwtl
mov
jmp
pop
jle
sbb
cmpsl
pop
faddl
stc
mov
adc
leave
mov
sbb
sub
into
lret
lods
pop
push
fdivrs
or
negl
incl
mov
mov
sbb
rcll
ds
movl
stos
mov
outsb
in
mov
adc
sbb
adc
outsb
repnz
pop
in
pusha
jg
into
in
fnstsw
xchg
imulb
mov
xor
mov
add
xor
test
cmc
call
hlt
pop
mov
xor
subb
scas
fbld
scas
jnp
pop
mov
cmp
sub
mov
cmp
sub
inc
add
movl
jl
ljmpw
test
and
push
into
dec
jle
ja,pn
mov
into
jno
popf
test
repz
sahf
popf
lea
jmp
rol
add
xchg
rolb
arpl
jmp
add
push
or
in
ja
lds
lahf
add
pop
dec
xlat
clc
hlt
and
int
push
add
adc
mov
and
enter
ficoml
inc
lods
aaa
popf
and
outsb
push
test
test
xchg
jge
iret
add
pop
ret
gs
mov
test
call
push
scas
cmp
je
out
std
loope
mov
leave
and
repz
imul
pop
dec
pop
jne
push
adc
loopne
sbb
xor
mov
cmp
xlat
or
dec
push
or
cmp
sub
dec
insb
imulb
bound
push
pop
cmp
loop
enter
or
and
sahf
into
xlat
add
movb
push
add
xor
inc
aad
lahf
test
std
cmp
mov
mov
sub
cmp
lret
lea
daa
xchg
push
pop
inc
xlat
ficompl
add
dec
lea
and
pop
push
notb
cmp
fnstcw
iret
jmp
int
sub
mov
or
pop
stos
inc
xchg
imul
movsb
lods
and
mov
inc
xchg
inc
and
lret
inc
ss
jg
sub
shlb
insb
daa
sbb
popa
hlt
call
mov
xorb
fadd
cmp
pop
ffreep
pop
test
lahf
lods
jae
les
ds
inc
add
stos
cs
dec
sub
ss
push
sbb
mov
dec
arpl
cltd
dec
insb
xchg
mov
cmp
and
bnd
in
pop
jecxz
fs
or
jmp
leave
or
pusha
jle
in
ja
mov
in
sub
add
adc
mov
aad
xchg
imul
mov
rcl
cmp
sti
jno
and
mov
sub
mov
pushf
add
jmp
pop
inc
sarb
and
dec
push
mov
das
mov
popf
loope
aam
inc
push
ficompl
mov
decb
jnp
mov
pop
icebp
and
lock
js
push
loop
mov
scas
nop
jae
xor
cs
sub
mov
lds
aad
pop
cld
cmp
scas
fdivr
push
mov
repnz
pop
sar
movsl
mov
sbb
lods
lahf
notl
mov
leave
cmp
es
pop
jl
dec
mov
xchg
push
or
dec
in
inc
rorl
rol
les
test
cmc
add
inc
sub
pop
movl
out
ret
dec
fnstenv
test
sbb
xor
cs
into
pop
leave
fcompl
or
scas
mov
xor
lahf
incb
jmp
push
cld
fsubrl
mov
cmp
mov
add
xchg
or
adc
je
les
cmp
mov
lret
sub
cmpl
mov
mov
insl
test
scas
aam
sub
fdivrs
test
mov
mov
push
cs
mov
fstps
lcall
add
and
iret
xchg
jo
or
in
push
mov
push
out
clc
push
in
xchg
cmp
push
and
rcll
hlt
adc
mov
mov
jg
jle
aas
cmp
cmp
mov
xchg
mov
dec
imul
sahf
dec
into
push
xchg
call
lods
push
outsb
jbe
lret
mov
scas
and
push
add
or
sbb
repnz
add
push
xlat
dec
add
stc
mov
dec
mov
or
insb
ds
xor
ja
loope
stos
enter
lods
lds
jg
subl
sarl
imul
or
leave
mov
and
mov
mov
ret
mov
inc
sub
adc
sub
pusha
add
mov
shrb
shlb
std
repz
ja
sarb
in
mov
mov
jge
push
shl
es
mov
aas
xor
loopne
mov
inc
lea
iret
push
cmp
mov
pop
sub
add
je
dec
add
loop
shl
stos
loop
add
pop
nop
testb
adc
rorb
sbb
jl
inc
push
icebp
mov
jns
mov
out
call
pop
lret
test
into
repz
test
jle
clc
stos
push
fmuls
int
inc
pop
sub
in
push
mov
mov
dec
daa
orb
cmp
mov
sahf
aad
faddl
mov
stos
pop
cltd
cmp
cld
mov
sub
ljmp
sbb
sub
mov
test
and
sbb
add
out
add
repnz
mov
mov
jecxz
push
ja
xchg
jmp
jl
ret
sbb
ja
mov
mov
lcall
leave
sbb
movsb
adc
mov
xor
xor
mov
insl
fs
lret
sahf
jbe
out
inc
and
sti
xor
sub
xchg
sub
js
cmpsb
fsub
cmp
pop
fldcw
mov
cmc
in
pop
ret
sub
popf
inc
xchg
push
push
fwait
jp
cwtl
xchg
mov
adc
gs
imul
or
aas
mov
repnz
and
idiv
sub
and
dec
loope
inc
stos
jne
mov
mov
daa
push
and
ret
add
and
jns
push
inc
push
out
negl
push
js
popf
adc
out
sub
push
rol
ljmp
jnp
adc
xor
insb
repz
in
shll
dec
fs
push
fcmovnb
scas
cmp
pop
xchg
lods
mov
dec
mov
mov
out
cmp
inc
xlat
lds
xchg
stos
xchg
in
rorb
add
inc
xchg
xlat
add
rorb
and
jnp
push
push
and
inc
stos
sub
mov
xor
iret
lret
jb
xchg
daa
repz
pop
aad
fdiv
lods
les
test
cltd
cli
adc
sar
sbb
sarl
scas
hlt
pop
xor
mov
test
adcb
add
hlt
push
jae
push
push
inc
push
push
rolb
add
in
jns
inc
mov
aas
cltd
lcall
sarb
popf
xor
cmp
negb
add
sbbb
cmp
scas
repz
lea
scas
subl
pusha
xlat
ss
fisubs
or
mov
rorb
mov
push
pushf
cmp
jmp
or
ljmp
dec
ja
test
aaa
dec
out
lea
sbb
dec
adcl
pop
rol
scas
xchg
imul
pop
fldenv
out
loop
lret
fsubr
jecxz
cmpsb
cld
jecxz
push
pop
into
add
lret
mov
outsb
mov
test
loopne
adc
jb
pop
mov
adc
mov
xchg
fistpl
mov
js
adc
inc
dec
push
mov
rcll
xor
inc
sti
sub
lods
lods
inc
add
insl
lea
insb
pop
sub
inc
sub
mov
inc
mov
je
mov
cwtl
lea
inc
mov
inc
fisubrs
xor
enter
add
lcall
mov
dec
sbb
push
addl
jmp
pusha
in
fsubr
cli
and
mov
scas
pop
sahf
or
sub
jno
push
sub
pop
and
int
iret
mov
movsb
neg
sbb
push
adc
dec
xchg
pop
jne
adc
push
jp
adc
addb
push
xchg
into
fwait
int3
mov
js
add
popa
mov
xchg
inc
sub
push
fiadds
std
arpl
add
xlat
cld
lcall
xor
jg
cmp
jne
aam
mov
outsl
jp
xchg
cmp
stc
pop
lahf
cmpb
ret
fwait
adc
xchg
scas
daa
repnz
add
js
aam
add
xor
pop
pop
jge
cmp
pop
rorl
mov
jmp
xchg
fcomi
sub
punpckhbw
mov
fwait
iret
in
and
mov
mov
fiaddl
lods
in
mov
test
aaa
stos
pop
insb
or
lods
mov
mov
inc
sub
cmp
xor
jmp
and
mov
int
or
pop
fcmovnb
or
mov
xlat
arpl
addr16
adc
outsl
fimull
in
gs
sub
xor
and
mov
xchg
pop
addb
dec
sbb
cs
call
into
xor
mov
cmp
and
dec
xchg
inc
mov
mov
mov
push
xor
lcall
movsl
sbb
lock
nop
scas
mov
scas
jl
das
ficoms
shlb
jno
xchg
jg
mov
mov
mov
fwait
aad
testl
je
lret
mov
pop
sbb
ret
rorb
cmpl
dec
pop
xchg
cwtl
ljmp
xor
imul
scas
ret
and
mov
fdivs
cmp
jecxz
gs
movb
sub
loopne
jae
mov
adc
add
mov
bound
xor
arpl
mov
cmpsb
jnp
jae
jge
add
or
add
mov
testb
mov
pop
cli
lods
mov
sbb
ss
lods
in
mov
xorb
cmc
or
ffree
xchg
notb
mov
sbb
clc
negl
add
adc
hlt
push
mov
ljmp
sbbl
inc
imul
mov
and
subb
out
add
lods
pop
sub
dec
js
and
pusha
or
push
negl
stc
push
mov
sti
stc
or
cmpsl
dec
pusha
xor
mov
xor
rcrl
fbstp
les
mov
and
mov
out
negl
fisubrl
adc
push
adc
push
sub
pop
in
xor
xor
xacquire
sub
xor
nop
xchg
cmpsl
and
jp
loop
divl
je
jo
call
pop
dec
hlt
jo
scas
repz
fadd
xchg
mov
lret
push
test
jo
daa
cwtl
into
or
in
cmpsb
orl
popa
cmp
repz
mov
jecxz
sbb
push
dec
es
add
cwtl
mov
xor
mov
mov
loop
mov
mov
push
and
cmp
or
outsl
cld
clc
xlat
adc
inc
mov
flds
pop
jo
ja
push
adc
sti
adcl
xor
mov
cmp
mov
push
scas
dec
jb
movl
push
in
jno
addr16
xchg
inc
iret
mov
pop
das
push
jl
add
adc
lods
push
jbe
push
or
sbb
lea
fwait
or
push
call
fildl
mov
push
mov
mov
xchg
aad
pop
iret
dec
out
or
jecxz
insl
xor
fsubl
mov
iret
ret
notl
cmp
inc
fldenv
les
dec
mov
icebp
jge
and
mov
pushf
in
js
or
das
mov
lret
cmp
decl
dec
cmp
test
cmp
loope
adc
inc
cmp
xor
in
mov
mul
mov
fdivl
mov
sub
push
xor
xchg
rcr
mov
or
xchg
orb
ds
xor
pop
pop
fwait
xor
lock
add
lret
les
mov
sub
cld
adc
cmp
pop
mov
xor
clc
stc
icebp
cmp
push
lret
xlat
add
rol
std
popa
pop
xchg
stos
loope
sbb
sub
mov
jae
fnstcw
adc
mov
push
adc
sub
jl
outsb
sbb
mov
mov
cwtl
mov
cmp
int
inc
cli
call
into
ss
in
jns
unpckhps
orb
pop
or
icebp
rclb
fs
mov
shll
push
jmp
arpl
xlat
xchg
out
adc
mov
mov
dec
mov
sbb
imul
fsubrl
out
idivb
mov
xchg
jge
pop
gs
int3
scas
pusha
mov
loope
xchg
data16
jge
xor
sbb
testl
adc
and
sbb
test
add
stc
aas
loop
ficoms
mov
jge
fisttpll
or
cmpsl
fisttpl
dec
mov
dec
push
fistl
xor
cmp
or
jbe
xor
test
xor
movsl
ja
mov
cmp
adc
test
mov
repz
push
adc
jg
xchg
fs
xor
mov
push
mov
rdpmc
mov
cmp
es
test
jnp
fstps
in
sub
dec
aaa
jb
fcomi
aaa
and
pop
add
sbbl
push
sub
lods
int3
lret
mov
mov
mov
out
mov
nop
mov
push
xchg
sbb
fdivp
sub
add
sqrtps
push
rcl
jge
lock
gs
lods
test
das
sub
repnz
jmp
pop
sbb
rcrl
cmpsb
mov
not
sub
xchg
lret
push
adc
or
jbe
push
in
add
sub
xorb
adc
pop
rolb
push
addr16
das
sub
addl
mov
xchg
dec
push
cli
jmp
out
stc
add
jns
push
cmc
and
popf
jb
inc
jle
cmp
mov
and
jle
loop
or
pusha
decl
xchg
mov
adc
fistps
cmp
adc
adc
mov
dec
add
into
inc
add
and
xor
ljmp
data16
sbb
jmp
fdiv
fisttpl
repz
or
or
sahf
cmp
pop
sbb
push
sub
cmp
sahf
movsl
pusha
jl
cmpb
lods
jge
xor
jl
insb
out
mov
push
inc
push
or
loope
js
push
push
sbb
aaa
out
les
mov
push
or
sub
dec
ret
sbb
and
sbb
sahf
outsb
adc
xchg
mov
sbb
add
cld
jae
jp
ss
je
push
cld
lds
and
xchg
cmpb
mov
andl
jo
ss
daa
jecxz
add
roll
scas
sub
mov
mov
xor
clc
inc
leave
scas
enter
inc
sub
cmp
push
ss
ret
pushf
test
pop
das
pop
adc
adc
mov
ja
xchg
jle
test
add
sbb
enter
pushf
push
adc
fadds
out
insl
push
in
jnp
bound
pushf
and
dec
xchg
mov
test
jnp
test
and
push
add
and
push
pop
dec
cltd
je
in
repz
cwtl
or
dec
dec
or
cmp
add
fidivs
les
push
sbb
mov
push
mov
sub
das
popf
sti
fisubrl
stc
fisttpll
mov
mov
call
push
cmp
xor
dec
adc
push
sarb
mov
call
push
cmp
xor
dec
adc
push
shlb
mov
call
push
cmp
xor
adc
mov
jl
insb
rcrl
mov
mov
sub
bound
inc
and
adc
stos
lock
nop
xor
fimull
add
add
pop
push
add
add
add
add
add
add
add
add
add
add
sub
addl
lods
add
in
pop
add
mov
add
add
add
add
add
add
add
mov
add
add
inc
add
add
add
add
dec
add
mov
add
add
add
add
add
add
mov
add
add
add
add
aad
dec
add
add
add
add
add
add
pop
add
add
add
add
add
add
mov
add
testl
aaa
add
nop
add
add
aaa
add
add
add
roll
nop
add
add
xchg
inc
add
add
add
add
flds
mov
or
test
push
add
add
add
add
add
add
roll
pop
add
add
add
add
add
add
sub
push
add
xchg
aaa
add
fs
mov
ds
add
add
add
add
pushf
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
pop
add
and
mov
sub
inc
add
add
add
add
add
add
add
xor
iret
add
add
pop
add
roll
inc
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
xchg
pop
add
add
aas
add
lahf
add
add
add
sbb
pop
add
add
add
add
and
add
cmp
sti
add
add
xchg
sti
add
inc
add
add
ret
add
pop
add
imul
flds
jno
addl
and
movsb
add
add
addl
xchg
leave
add
aad
sbb
adc
enter
sbb
add
add
add
arpl
and
add
add
add
fs
leave
add
cltd
add
add
add
pop
add
add
add
push
inc
add
or
mov
add
add
add
add
add
ret
add
add
add
add
roll
push
add
add
add
add
add
xchg
add
add
add
add
add
add
adc
dec
add
add
add
xchg
xchg
add
add
add
add
add
dec
add
cmp
mov
add
cmp
pop
add
add
pop
add
add
add
add
add
pop
add
add
add
add
push
dec
add
imul
or
jmp
or
add
add
add
and
jae
fadds
add
pop
add
add
add
filds
pop
add
add
iret
add
addb
add
xchg
add
add
add
add
add
in
sub
xchg
outsl
lods
xchg
inc
in
in
pop
and
lods
xorb
xor
shrl
inc
and
fisttpll
push
lret
insl
xor
inc
lahf
cmc
mov
cmp
cmc
scas
cli
mov
cmp
push
fstpt
shll
or
fistps
fsubrp
jbe
stc
xlat
in
orb
push
sarl
pop
and
or
mov
ljmp
mov
adc
lock
dec
jge
sahf
movd
pop
pop
dec
lahf
or
pop
pop
xlat
push
cmpb
loope
push
lock
jp
andl
cmp
loopne
fdivl
xchg
and
ret
and
push
std
adc
adc
sbb
and
sbb
movsl
into
lret
mov
pop
xor
and
xorl
data16
test
les
inc
mov
pushf
and
cmp
inc
inc
pusha
clc
clc
rcrl
mov
imul
mov
ljmp
adc
stc
rolb
xchg
xor
mov
and
dec
sub
jmp
data16
xchg
into
gs
mov
or
mov
jbe
stc
sbbb
je
add
int3
fists
int3
jns
aaa
xor
jp
add
jns
nop
insl
jo
sbb
xchg
mov
shrl
daa
sub
test
xor
jnp
cmp
repz
jge
jg
ss
cmp
cltd
mov
in
sub
hlt
inc
cwtl
xchg
das
jne
je
std
adc
cmp
dec
cmpsb
add
cwtl
jo
xor
cmc
push
call
and
iret
cwtl
push
lea
repnz
mov
adc
sar
lods
jge
xchg
mov
lea
cmpsl
fstpl
movsb
mov
push
daa
and
push
iret
out
insb
mov
mov
add
std
inc
mov
movhps
jbe
xchg
dec
mov
das
mov
gs
int
lret
xchg
push
movl
lcall
pop
mov
into
jle
push
jmp
dec
jecxz
xchg
sub
xchg
push
dec
xlat
add
std
push
das
sub
dec
jbe
js
push
xlat
jle
lock
inc
mov
sub
dec
xor
and
cmp
dec
cmovae
dec
mov
insl
bnd
pusha
lahf
inc
imul
jne
or
les
jno
adc
push
sbb
pcmpgtw
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xor
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
dec
clc
add
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
or
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
clc
add
jl
add
nop
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
or
add
sub
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
movsb
stc
add
lods
stc
add
mov
add
mov
stc
add
int3
stc
add
aam
add
out
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
add
add
or
add
sbb
add
sub
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
