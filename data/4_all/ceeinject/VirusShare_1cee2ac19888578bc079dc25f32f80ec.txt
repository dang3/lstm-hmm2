call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
insl
movsb
in
dec
fnstsw
jmp
lea
jg
sub
insl
lret
pop
sti
dec
jmp
fwait
sub
or
pop
in
dec
fdivrl
imul
lea
fldt
cmp
dec
jmp
hlt
sub
stos
std
leave
in
dec
fst
int
mov
aad
xor
insl
test
movsb
sub
cmp
pop
in
and
ss
andb
repz
fsubrs
push
cmp
xor
push
dec
incb
pop
test
mov
mov
jnp
imul
xchg
sar
lcall
js
in
dec
shlb
inc
mov
popf
clc
mov
or
cmpw
mov
std
imul
mov
rorb
pop
into
movsl
pop
fstpl
pop
clc
add
mov
push
aas
movsl
dec
popf
xor
fisttpl
enter
stos
repnz
add
push
push
pop
pop
mov
dec
xlat
sbb
mov
dec
lcall
mov
dec
popa
mov
loope
stos
jge
insl
or
cmp
mov
test
inc
outsl
enter
call
mov
hlt
popa
pushl
jns
mov
sbb
cmp
mov
sub
ficoml
rorb
in
or
jg
or
fldt
pop
sti
dec
jmp
fwait
sub
stos
std
pop
in
dec
fnstsw
imul
lea
jge
insl
lret
pop
sti
dec
jmp
fwait
sub
stos
std
pop
call
inc
into
andb
push
xor
ficomps
jp
add
test
ds
pop
shlb
mov
out
pop
out
cmc
inc
push
mov
mov
and
jne
bound
loop
jbe
cmp
cli
push
je
inc
mov
mov
mov
in
inc
jge
fdiv
jle
sbb
inc
mov
push
inc
push
xchg
mov
sbb
push
insb
ja
push
or
cmpsb
addr16
xlat
notb
or
es
mov
lret
jmp
push
clc
in
arpl
or
std
pop
push
jmp
leave
mov
adc
ds
pop
mov
loop
bnd
dec
insb
stos
push
repnz
test
std
pop
cmpsb
inc
enter
rolb
cmp
xor
pop
paddd
sub
add
mov
sub
and
idivl
popf
inc
push
xor
pop
int
fidivrl
adc
dec
lcall
mov
insl
lahf
std
xor
stos
into
sbb
xchg
sbb
xchg
rorl
test
mov
mov
and
pop
jp
inc
pop
das
inc
dec
sahf
cmpsb
cs
gs
pop
xchg
jge
leave
adc
loopne
ret
push
pusha
mov
jbe
sub
add
test
subb
mov
clc
xchg
mov
mov
mov
inc
jmp
cmpsb
aad
ret
xchg
in
pusha
mov
pop
fmuls
shrl
jmp
in
aaa
or
sub
pop
lds
adc
ds
mov
and
or
inc
mov
jle
jecxz
xchg
jecxz
leave
or
fwait
cmp
xlat
jmp
clc
push
mov
out
std
mov
push
jl
adc
push
insl
xchg
int3
add
dec
in
nop
xchg
les
int3
xchg
inc
inc
and
sbbl
fstl
shrl
outsb
mov
xor
mov
je
fs
hlt
or
inc
jl
hlt
cmp
cmp
stos
subb
xchg
fistpll
imul
out
push
jb
mov
cmc
enter
add
scas
add
xchg
push
test
jle
inc
divb
iret
sbb
xchg
lret
fsubs
mov
add
mov
fs
jae
into
fnstenv
or
fdivr
mov
popa
je
mov
movsb
je
addr16
jno
jecxz
mov
pop
sub
notb
enter
std
adc
inc
jmp
jae
cmpsl
pop
pop
inc
out
pop
minps
mov
or
and
push
mov
xchg
ret
call
xchg
pop
fsts
outsb
xor
adc
inc
mov
fmull
aam
push
mov
aas
jo
in
imul
add
std
sbb
lret
rcll
inc
stos
fildl
cmp
dec
rorl
mov
cmp
mov
lock
fisttpll
or
pop
sub
pop
mov
int3
pop
fst
call
lret
pop
in
adc
and
xor
test
mov
dec
sub
ss
out
mov
jae
and
sarl
push
dec
addr16
sbb
sbb
fst
rcrl
mov
dec
xor
aam
inc
fwait
stos
mov
movsb
sbb
mov
fidivs
out
mov
in
addr16
cwtl
repz
sub
inc
loop
push
push
sbb
pop
cmp
leave
mov
bound
test
dec
icebp
leave
div
mov
sbb
mov
xor
rorb
adc
std
aas
sbb
xchg
jp
addr16
sti
inc
gs
jge
mov
aaa
es
pop
inc
jle
leave
pop
jno
adc
rclb
sub
std
imul
aam
stos
jecxz
xchg
fnstsw
leave
mov
xchg
dec
fiaddl
loope
dec
fsts
xor
push
mov
mov
cmp
fsubl
movsb
sub
dec
lds
ret
xchg
xchg
pop
add
mov
pusha
ja
inc
xchg
jge
cmpsl
sbb
mov
test
xchg
adc
repz
aam
or
sub
adc
mov
mov
fldt
inc
out
push
xor
mulb
sbb
mov
inc
pop
shll
xchg
pop
hlt
lahf
add
sbb
in
sub
push
outsl
shl
pop
loop
jbe
call
shl
je
sar
inc
or
data16
lret
sub
stos
scas
in
stos
sbb
inc
rdpmc
push
dec
sub
push
dec
adc
cmc
out
jo
xor
dec
andb
repnz
out
cmpsb
arpl
cmc
jo
xor
adc
mov
and
sbb
lahf
or
inc
push
jnp
aad
fildll
mov
mov
test
loopne
cwtl
je
mov
mov
dec
scas
xor
mov
dec
sbb
jb
dec
mov
icebp
sahf
jmp
mov
out
mov
pop
data16
fchs
mov
inc
or
push
mov
aaa
cli
test
paddsw
int3
movl
cld
mov
fidivs
mov
push
cmp
into
pop
and
loope
pop
popa
mov
sub
in
push
fldl
cltd
test
int3
pop
mov
jne
fildll
adc
adc
pop
xchg
sbb
lods
sub
dec
push
or
shl
enter
add
pop
lcall
jo
stc
adc
cltd
fsubl
and
dec
jle
pop
pop
pop
push
cwtd
cmp
sub
push
add
ljmp
adc
fstps
addr16
sub
and
ret
inc
lahf
loopne
popf
ret
push
das
cmp
negb
inc
popa
mov
adc
dec
in
xchg
add
nop
mov
flds
ljmp
outsl
pop
rcll
jno
fsubl
loop
xchg
mov
add
adc
popa
nop
rorb
push
hlt
add
scas
out
enter
add
inc
enter
outsb
js
pop
push
into
rorb
xchg
inc
mulb
sbb
es
pop
push
rorb
push
xchg
pop
iret
stos
mov
repnz
push
xchg
loope
jg
scas
sbb
push
push
nop
xchg
mov
ss
dec
xchg
sbbl
mov
sahf
mov
out
and
jmp
mov
hlt
inc
jecxz
inc
iret
movsb
mov
cmp
rorb
xchg
pop
sub
sub
test
mov
xor
add
ficompl
test
cmp
insl
ljmp
inc
xor
imul
fildll
sbb
test
dec
push
ljmp
push
jne
call
xor
jge
cmp
push
repz
mov
sarb
movl
pop
jecxz
mov
dec
pop
enter
aaa
daa
mov
inc
in
push
cwtl
sub
ror
inc
bound
cmp
pop
add
outsl
sbb
pop
cmp
out
push
pushf
mov
xor
scas
mov
nop
loopne
or
or
and
leave
aaa
cmp
inc
dec
inc
sub
mov
jb
int
sbb
inc
xor
pushf
fistpll
cmpsl
cmp
rcl
not
imul
test
xchg
mov
stc
js
dec
mov
mov
clc
inc
dec
dec
mov
leave
les
pop
lret
push
jne
jp
dec
sub
rorl
cmp
inc
fwait
outsb
sbb
inc
xor
or
xchg
add
fdivs
mov
jmp
cmpsl
mov
mov
out
out
aad
or
push
pop
sbb
add
fisttps
sub
pop
xchg
bound
mov
jmp
popa
cwtl
push
in
sub
add
movsb
push
stc
mov
nop
sbbl
xchg
aam
dec
je
inc
scas
sbb
in
push
push
fistps
mov
or
mov
dec
imull
and
stc
inc
subb
cmp
adc
mov
call
shll
cld
cmp
aam
inc
sub
sbb
mov
sub
and
cwtl
xchg
xchg
in
repz
outsb
loope
fxch
mov
xchg
insb
repz
fs
test
inc
cmp
xor
cmp
push
fsubs
mov
lcall
rcll
popf
pop
cmp
fidivs
add
cmp
mov
scas
push
mov
lock
imul
popa
imul
fcoml
mov
es
sbb
and
popf
adc
sub
enter
or
mov
and
push
std
mov
sbb
mov
test
mov
add
cmp
aaa
push
and
xor
xor
sub
mov
test
xchg
push
and
jmp
pop
xor
and
arpl
fwait
push
push
pop
sbb
js
dec
imul
push
stos
pop
and
repnz
cwtl
mov
fimuls
xor
cmpsl
push
adc
sub
add
push
lcall
mov
std
mov
xor
aam
test
mov
or
mov
ret
xchg
mov
pop
or
push
lods
int3
in
notb
sbb
and
cmc
xor
das
les
mov
inc
lods
bswap
add
sub
push
js
inc
fisubl
es
popa
pop
addl
mov
lret
xchg
clc
add
scas
push
rcrb
scas
push
loope
shrl
push
sub
mov
mov
mov
and
repz
out
push
and
cltd
scas
sub
nop
push
or
test
and
pop
negb
bound
add
lret
fiadds
mov
enter
jle
sbb
bound
imul
shlb
fmuls
icebp
icebp
jl
negb
lods
sub
lods
cmc
jae
iret
test
ret
or
sbb
mov
sub
pop
mov
cwtl
imul
xor
ret
mov
xor
cmp
inc
ds
add
xchg
xchg
subb
movsl
cwtl
and
mov
dec
mov
xchg
lds
sarb
dec
xchg
mov
mov
cltd
push
sarb
cmp
ret
pop
addr16
dec
mov
inc
add
adc
outsb
cmp
rorl
daa
and
xchg
jo
cmp
ret
stc
jecxz
stos
fidivrl
sbb
sub
mov
popf
cmp
mov
test
popa
mov
xchg
jmp
in
push
lock
and
loopne
sbb
outsb
jnp
mov
jl
inc
fbld
xchg
jge
lret
push
inc
aaa
xchg
mov
test
or
insl
loop
mov
les
push
je
imul
or
inc
adc
sarl
adc
mov
xor
insl
ja
test
lods
or
inc
push
jmp
and
jg
pop
pop
push
adc
sahf
push
adc
testl
mov
xchg
cmp
cltd
les
lods
loop
fldcw
dec
inc
mov
shl
fmuls
gs
das
cmp
jmp
mov
pop
loope
mov
fs
mov
pop
xor
in
shlb
adc
sbb
outsb
or
aaa
or
add
stos
push
bound
jb
pop
sbb
jl
pop
mov
cmpl
andb
sub
or
xchg
xor
inc
scas
fisubrs
adc
scas
dec
lahf
mov
ja
shlb
dec
or
inc
lret
inc
je
fmull
adc
iret
test
push
es
mov
jge
bound
jno
adc
addr16
mov
dec
mov
ret
xchg
pop
mov
aad
cmp
jno
inc
out
aas
loop
mov
cmp
in
add
sti
lock
daa
xchg
sarb
add
sub
pop
ret
enter
inc
shll
popa
jmp
scas
in
mov
cmp
or
out
xchg
fwait
pop
sub
cmc
push
jne
xchg
mov
mov
dec
xchg
cltd
adc
stc
pop
out
into
jb
xchg
dec
sbb
enter
daa
aam
jl
jne
outsl
xchg
dec
xchg
mov
or
push
test
pop
test
imul
test
mov
icebp
sbb
xor
scas
and
icebp
aas
ret
jne
faddl
or
dec
pop
push
data16
jle
xchg
lds
lods
pop
out
dec
mov
rol
jge
jb
push
fcomps
lods
clc
sbb
and
imulb
pop
pushf
repnz
int
or
push
stos
push
neg
inc
scas
adc
stos
xchg
imul
xor
dec
add
add
push
mov
test
pop
jb
push
mov
mov
cli
rorl
cmp
test
clc
out
jo
pop
mov
testb
cmpsb
gs
pop
and
in
mov
mov
xchg
aaa
aas
or
arpl
cwtl
popa
movsl
cmp
dec
leave
insb
sub
daa
in
mov
outsl
cs
sbb
in
push
sbb
jb
jbe
hlt
cmpsl
rcl
mov
mov
dec
add
out
mov
xchg
add
pop
lods
or
add
mov
cmp
adc
ja
scas
pop
xorl
xchg
or
xchg
push
into
and
jbe
repz
inc
pop
jecxz
mov
stc
sub
xor
lods
cld
mov
icebp
sub
and
dec
jl
add
fmulp
lods
je
xchg
xchg
insb
rcrb
idivb
mov
stc
mov
pop
cld
or
jnp
outsl
push
stos
imul
frstor
test
xchg
xchg
adc
dec
xchg
roll
dec
mov
pop
je
popa
pop
arpl
or
imul
inc
fcmovbe
pop
adc
data16
rolb
lods
iret
pop
scas
outsl
xchg
cmp
xchg
mov
xor
jl
enter
push
mov
ljmp
out
stos
sub
fbstp
aaa
or
xchg
outsb
idivb
mov
fisttpl
adc
popf
rorl
add
cmp
mov
add
insl
fs
xor
out
dec
movsb
and
data16
fwait
in
mov
cmp
xchg
pusha
sbb
into
js
das
shll
cmpsl
xor
lahf
adc
mov
add
inc
insb
fucomp
out
sahf
or
cmp
insb
fistpl
adc
sub
scas
fs
in
out
sbb
and
daa
xchg
mov
or
in
scas
scas
pop
mov
dec
fbstp
lock
and
out
inc
scas
ret
lcall
adc
and
jl
stc
mov
outsl
push
in
fdivrs
dec
mov
pop
pop
sbb
xor
inc
sub
mov
mov
rol
mov
clc
cli
insb
sahf
jp
xchg
js
arpl
or
add
lcall
lcall
push
pop
and
pushf
inc
test
repz
xchg
jb
pusha
ljmp
or
mov
sbb
mov
das
sbb
es
mov
dec
in
or
jle
fwait
jne
xchg
cmpw
and
stos
adc
test
in
repz
jp
dec
jne
hlt
add
jmp
fists
or
sbb
pushf
sub
imul
lods
xor
cmc
mov
hlt
mov
aas
pop
movsb
fistps
popa
push
push
popa
aad
mov
or
inc
mov
sti
pushf
imul
or
mov
out
xor
rcr
shlb
xor
test
push
aam
popa
shll
inc
fmulp
adc
sub
push
jb
adc
les
push
addr16
jo
xchg
ja
test
mov
rolb
mov
je
out
jne
inc
icebp
sbb
sub
pop
das
notl
stc
lahf
mov
or
push
testl
cmpsb
insb
mov
adc
jmp
mov
sarl
dec
or
dec
mov
sub
lcall
pop
shlb
xor
xor
sub
jg
xor
leave
arpl
sub
xchg
movsl
and
cs
adc
stos
icebp
inc
scas
cmp
push
pop
mov
dec
rorl
jbe
and
roll
jge
jae
imul
incb
ljmp
loopne
add
repz
mov
stos
out
aaa
mov
arpl
or
or
aad
inc
outsl
sub
push
jns
aad
shlb
lahf
xorps
or
in
arpl
fs
inc
aad
imul
ret
mov
out
pop
stos
fwait
pop
or
sarb
dec
cld
clc
ror
fwait
insl
push
popf
movsb
aad
push
mov
cmpsl
mov
inc
mov
shr
or
leave
and
xor
pop
fistps
incl
js
pop
icebp
push
push
jp
insl
bound
les
lahf
in
outsb
stos
ret
and
daa
dec
loope
hlt
mov
jmp
sub
sub
ret
in
sub
or
test
in
xchg
push
bound
nop
adc
clc
lahf
jno
fildll
int
adc
mov
addb
jp
xor
mov
sub
mov
shl
sbb
jp
lea
sub
xchg
cwtl
repnz
pop
adc
lret
js
or
or
adc
adc
push
js
lcall
xchg
xchg
mov
cltd
int
jno
stos
ret
pop
inc
sub
cli
xor
pusha
mov
out
loop
and
dec
test
int3
test
bound
adc
fs
pop
outsb
cmp
add
sti
pop
cmp
repz
sub
pop
lcall
sbb
sub
and
insl
sub
add
cs
jg
aas
sti
push
outsb
push
pop
ror
test
and
xor
add
dec
gs
cmp
mov
hlt
xchg
lcall
fisubrs
xorb
aaa
int3
adc
call
fsubrs
xchg
icebp
into
pop
adc
outsl
sub
pop
jmp
insl
gs
dec
imul
jo
mov
imul
mov
pushf
filds
and
jae
pusha
out
xor
pop
add
ss
loopne
xchg
or
ja
fst
push
fildll
out
addl
mov
inc
push
test
xor
cmp
xor
clc
out
jmp
iret
imull
mov
ljmp
mov
mov
or
cld
stc
and
pop
ja
push
push
loope
cmp
xchg
loopne
ret
lods
out
cwtl
lock
add
pop
ret
dec
cmp
xor
out
loop
mov
push
sbb
xchg
sarb
int
sbb
inc
ficompl
push
cli
pop
jmp
sub
shlb
dec
cmc
jnp
test
or
shl
or
pop
shr
xchg
cmp
cmp
pop
enter
incb
sub
cmp
mov
xlat
popa
or
mov
aas
jns
xchg
sub
fs
add
aad
and
dec
sbb
adc
mov
mov
pushf
pop
js
push
rcr
ret
dec
shll
mov
pusha
push
dec
mov
lret
imul
inc
jmp
ljmp
add
es
popf
mov
cmp
mov
pop
ljmp
and
int
pop
sbb
pop
pushf
mov
push
scas
pusha
shl
lods
pop
daa
mov
and
movsb
es
dec
ficoms
fcomps
xchg
outsb
adc
ljmp
jne
xchg
dec
movsb
loopne
mov
imul
push
mov
mov
dec
cltd
popf
inc
pinsrw
idivb
jmp
es
mov
mov
pop
mov
or
cmp
adc
int3
adc
pushf
jle
sub
pop
sbb
lock
in
pop
cmpl
push
rorl
and
ja
or
cmp
xchg
cmp
lea
mov
or
jb
xchg
pop
cmpsl
inc
leave
ja
mov
les
and
sub
push
loopne
xchg
mov
add
adc
push
mov
ljmp
ds
stc
lock
jns
bound
movsb
mov
sahf
jle
xor
jnp
add
xlat
jl
add
mov
mov
aaa
ffree
dec
js
add
xor
out
inc
push
das
filds
sbb
mov
dec
dec
and
and
outsb
lret
xchg
xor
or
mov
xlat
mov
enter
bound
mov
jmp
push
insb
insl
xchg
jmp
cmpsl
mov
enter
lock
divl
mov
mov
out
cmc
lods
jo
inc
out
xchg
cmp
inc
adc
mov
cmp
aas
fs
xchg
fisttps
loopne
mov
sbb
sub
insl
lret
pop
sti
dec
jmp
fwait
sub
stos
std
pop
in
dec
fnstsw
imul
lea
jge
insl
lret
pop
sti
dec
jmp
fwait
sub
stos
std
pop
in
add
add
imul
lea
jge
insl
lret
pop
sti
dec
jmp
fwait
sub
stos
cld
pop
in
dec
fdivrl
push
sbb
sub
insl
popa
idiv
dec
pushf
dec
adc
push
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
loope
icebp
sub
sbb
or
dec
out
ss
dec
popa
push
jo
inc
cwtl
push
mov
stc
xor
add
adc
loope
icebp
sub
sbb
or
pop
xchg
sub
inc
cltd
push
mov
popf
xor
add
adc
loope
icebp
sub
sbb
or
pop
xchg
dec
popa
mov
push
out
mov
jg
mov
dec
mov
xchg
cmp
ret
gs
popf
push
daa
adc
cmp
push
insb
ret
hlt
push
mov
call
pushf
cltd
mov
stc
call
sub
iret
mov
and
ja
pop
dec
aam
push
adc
mov
cmp
xchg
push
in
inc
hlt
push
mov
call
and
push
clc
adc
and
cs
add
aam
mov
mov
jb
into
clc
push
mov
sub
push
add
inc
jecxz
rclb
lods
mov
jmp
xchg
aaa
sub
sbb
or
pop
xchg
dec
popa
mov
push
mov
clc
xor
add
adc
test
mov
sbb
cmp
adc
inc
lret
sub
and
lods
test
movsb
push
mov
sub
add
and
inc
call
and
fs
test
jnp
jge
jo
dec
mov
sbbl
test
cwtl
push
mov
clc
xor
add
adc
loope
icebp
sub
sbb
or
pop
xchg
dec
popa
mov
push
mov
clc
xor
add
adc
loope
aam
pop
ja
iret
pop
lea
lods
push
test
mov
ljmp
shll
mov
lds
lock
scas
xchg
pop
and
fmul
icebp
out
icebp
cmpsl
sbb
cmp
mov
cmpsl
loope,pn
movsb
pop
imul
lods
imul
inc
std
ds
in
add
adc
xor
test
call
xchg
push
into
stc
sbb
sbb
push
das
adc
inc
xchg
push
mov
movsb
imul
lahf
insl
mov
sbb
fidivs
in
cmc
test
movsl
lock
add
xchg
add
scas
sub
adc
fs
inc
cld
and
data16
in
adc
push
fs
inc
dec
sbb
aam
test
inc
fiaddl
cmpsl
cmp
insl
sarl
cmp
pop
lods
insl
loopne
cmpsb
mov
les
cmp
imul
andb
out
pop
mov
iret
test
xor
pop
mov
mov
sbb
xor
mov
imul
jge
sahf
notl
jbe
insl
cmc
jb
inc
dec
jg
lret
aam
or
mov
sub
cmp
scas
loop
jno
shlb
mov
or
icebp
aam
and
int3
ret
lcall
call
xor
mov
fistpll
out
arpl
inc
stos
fnstsw
sahf
jnp
aad
fwait
mov
cmpsl
imul
jno
add
adc
or
out
mov
and
sbb
mov
xlat
cmpsl
imul
loopne
sbb
std
dec
stos
rorb
sbb
fsubrl
jb
dec
xchg
insb
addl
gs
jl
jae
ss
sub
das
pop
inc
loopne
dec
mov
movsl
call
dec
add
aaa
push
movsl
pushw
subl
shrb
inc
jns
inc
lret
xor
ret
dec
imul
pop
xor
xchg
add
inc
inc
or
sub
push
stos
add
sbb
xchg
sbb
insl
fs
jl
fiadds
xchg
repz
in
push
andb
fs
jno
std
cmpsl
sub
cli
adc
xor
cmpsb
xlat
nop
cmpsl
arpl
sbb
jecxz
shl
jmp
cltd
or
lock
outsb
or
cmp
or
jb
movsb
incb
push
push
mov
andb
fmuls
xor
cmp
leave
xchg
stos
add
push
and
xchg
fistl
push
sub
xor
dec
cmp
jle
xchg
or
and
inc
hlt
pop
mov
ss
in
jb
mov
iret
mov
sbb
gs
test
pmaddwd
lods
and
inc
test
sbb
xor
inc
xor
pusha
and
aas
iret
ss
scas
sbb
push
xchg
cld
mov
outsl
push
mov
mov
ret
shlb
sub
mov
rorb
movsb
clc
cmp
shrl
push
subb
inc
setno
inc
inc
cs
je
imul
or
xchg
arpl
fsubrs
adc
aam
xor
repnz
xchg
shlb
xchg
cltd
sbb
add
inc
adc
addr16
dec
mov
adcl
adc
pop
and
mov
mov
push
orl
mov
pop
out
outsb
lret
add
jb
aad
test
dec
or
popf
add
fisubrs
inc
neg
cmp
cmp
clc
orl
je
inc
pop
mov
dec
ret
sarb
push
into
dec
loope
cltd
mov
mov
dec
scas
sbb
rcrb
lods
lcall
fidivs
cmpsb
lret
xchg
or
mov
inc
ljmp
or
test
enter
dec
adc
popa
add
fldcw
or
scas
fcomps
int
add
sub
sub
cmp
sbbb
std
jbe
rcrb
xchg
jno
dec
rclb
pop
ss
loopne
mov
cmc
das
stos
xchg
cmp
out
ja
ds
jo
cmp
xor
lods
push
or
fistpl
and
daa
xchg
cmp
mov
in
into
push
mov
add
jne
shl
jns
push
pop
jne
sbb
lea
lods
jae
decb
lods
sbb
loopne
enter
jecxz
stc
aam
add
iret
inc
jae
outsl
jae
add
shrb
cld
loopne
push
in
dec
fnstcw
mov
flds
jmp
stos
pop
inc
popf
inc
sbb
leave
push
xchg
inc
pop
mov
scas
sub
inc
shll
repnz
pop
fnstcw
cmp
and
dec
in
fdivp
mov
popf
sti
lock
dec
mov
adc
pop
cmp
movsl
lds
mov
mov
add
loopne
xor
sbb
push
leave
lds
cs
and
sbb
fwait
lods
dec
pushf
cltd
push
in
xor
jo
mov
orl
mov
into
jo
orb
jmp
add
ljmp
imul
jg
sahf
je
test
pushf
lock
mov
shll
adc
cmp
fnstcw
xor
adc
ds
movsl
push
mov
loope
pop
jne
enter
fcmovu
inc
fadds
das
insl
ret
mov
jl
jge
or
bound
movsb
lds
cmp
mov
and
cmc
xchg
ret
push
and
mov
xchg
or
jl
movsl
into
mov
mov
cmc
fstpl
jns
mov
pop
dec
out
cmp
add
int3
add
or
or
mov
pusha
nop
ds
ret
pop
xchg
push
mov
jl
cmp
or
ret
dec
mov
cmp
dec
cmp
addr16
insb
enter
sbb
sbb
pop
dec
aam
out
out
jg
xor
sub
cs
insb
mov
inc
bound
pop
mov
out
inc
jmp
xlat
xor
pop
ja
aad
stc
imul
pop
and
rol
pop
pop
inc
std
sbb
repnz
mov
push
mov
out
jp
popw
adc
jecxz
insl
dec
icebp
cmp
cmp
rcl
mov
pop
fmull
hlt
pop
scas
sub
dec
insl
cli
cmp
adc
iret
push
jne
rolb
js
push
lds
lsl
jno
mov
cli
push
repnz
dec
cli
gs
dec
lea
dec
and
movsb
aaa
sbb
pop
adc
cld
sbb
js
and
mov
push
and
imul
sub
add
xchg
cmp
daa
inc
pop
xchg
xor
mov
ret
icebp
and
push
lods
or
imul
mov
and
imul
pop
fnstcw
sbb
jmp
lods
pusha
dec
jg
or
dec
mov
xchg
call
mov
jge
cmc
xchg
sahf
sub
cmpsl
test
addr16
testb
pushl
sub
pushf
sub
jge
lds
cmp
sbb
pushf
add
cltd
cld
insb
inc
jno
jge
push
sub
ret
sub
cmp
cli
cld
int
popa
enter
push
add
cmp
daa
scas
xchg
scas
shll
lock
push
addr16
inc
and
bound
js
dec
mov
cmpsl
sub
jb
pop
lock
fidivs
sub
js
dec
add
movsl
mov
add
addr16
popf
xchg
insl
jnp
jo
jb
cltd
pop
xchg
shlb
sti
jns
jecxz
aaa
bnd
jo
add
dec
cmp
sbb
sub
mov
cmp
mov
add
lcall
mov
in
dec
scas
xchg
sub
cmp
ljmp
cmc
push
cmp
ret
or
and
pop
adc
out
jl
dec
out
sbb
imul
push
xchg
mov
repnz
lcall
lret
cltd
sbb
mov
xchg
push
loopne
jg
xor
daa
loopne
push
testl
xchg
leave
les
sbb
sbb
stos
enter
push
cli
lret
int
jmp
jge
insl
aas
adc
clc
outsl
push
std
bound
ficoml
adc
mov
mov
in
movsl
and
dec
xchg
xchg
cli
loop
addl
jge
mov
jne
and
idiv
xor
out
cmp
and
cwtl
mov
pop
or
and
stos
cwtl
jnp
pop
and
and
cmp
ds
insb
jg
loope
sbb
shlb
dec
add
lods
mov
push
inc
and
jae
sbb
and
push
and
mov
fdivl
jno
into
add
lds
or
inc
mov
test
sbb
fwait
pop
fcmove
cmp
pop
hlt
sbb
ja
cmp
lret
jb
xor
xchg
outsb
sub
aaa
shrl
rol
xchg
imul
int
mov
mov
bound
lcall
pop
or
movswl
lods
enter
imul
push
lret
mov
dec
pop
cld
push
lea
sub
out
mov
sub
cld
outsl
and
rcr
cld
push
cwtl
xchg
scas
ljmp
jle
jae
or
mov
mov
or
mov
dec
mov
int
mov
hlt
shlb
mov
pop
std
jne
adc
xchg
bound
faddl
add
mov
cmp
xor
iret
sub
lret
pop
or
cmp
fwait
ja
pusha
lods
dec
ljmp
and
sbb
fsub
cltd
ret
sub
lds
cmp
popf
pop
mov
arpl
and
je
jns
push
fldcw
pop
jnp
sti
cmp
ja
insb
push
pop
in
mov
lahf
push
std
push
pop
aam
fs
jl
movsl
scas
mov
stc
imul
jo
mov
xchg
fsubl
test
jge
mov
addb
enter
jae
cmp
popf
mov
int
jb
cmpsl
push
dec
test
lock
push
xor
sub
out
adc
pop
fbld
mul
ficompl
pop
sbb
test
adc
test
ret
mov
push
inc
sub
or
mov
mov
fsubrs
xchg
mov
xchg
sbb
mov
inc
dec
add
mov
daa
mov
xchg
bound
mov
mov
enter
xchg
push
popa
xchg
lods
jne
cmpsb
inc
jmp
mov
dec
jbe
fldcw
inc
pop
scas
mov
aaa
xchg
dec
addr16
mov
cmc
hlt
and
into
push
orl
stc
xchg
fstl
mov
cmp
xchg
outsb
lahf
sub
inc
xor
adc
xor
pop
orl
loopne
scas
adc
aad
fldenv
sbb
or
loopne
mov
fiaddl
mov
adc
inc
inc
arpl
imul
mov
out
lret
mov
mov
andb
out
loop
mov
adc
xchg
mov
shlb
adc
imul
je
pop
orb
mov
xchg
std
jge
daa
pushf
mov
sarl
lret
int
xchg
aad
adc
add
and
mov
test
pop
push
ljmp
shlb
fldt
dec
test
arpl
adcl
inc
sbb
sub
push
popf
rclb
popa
inc
mov
dec
jb
add
jns
cs
pushl
mov
arpl
movsb
sbb
dec
xchg
dec
adcl
adc
lea
call
shl
mov
rcr
cwtl
into
fisubrl
es
ds
mov
adc
cmpsb
jp
mov
jle
shrb
incb
clc
push
aad
dec
scas
bound
jae
sbb
scas
fwait
xchg
out
cmpb
cmp
loopne
clc
mov
das
loop
ds
xor
sarl
or
mov
xor
addl
test
push
repnz
nop
and
dec
mov
jbe
popa
xchg
sbb
movsl
and
inc
repnz
ret
notb
incb
stc
sti
imull
pop
pop
aad
mov
sbb
sub
jecxz
andl
xchg
jnp
jl
pop
bound
sti
xchg
adc
mov
in
add
test
inc
fcoml
adc
les
fcompl
cmp
ljmp
mov
rcrb
xor
aas
cwtl
jo
addb
stos
fmull
jnp
cli
add
js
lock
test
cmc
push
out
xor
subb
or
pop
dec
insl
inc
divb
scas
xchg
push
sti
ficompl
in
cmc
mov
dec
mov
inc
insl
cld
hlt
loop
popa
or
xchg
inc
scas
and
and
push
ret
jl
jno
push
mov
mov
xchg
daa
pop
lcall
out
aaa
dec
cmp
mov
aas
repnz
xor
push
xor
shrl
pop
jae
mov
icebp
sbb
ret
cmpb
jecxz
cmc
cmp
dec
jno
sbb
sub
pushf
lea
insb
clc
xor
jge
xchg
movsb
fistpl
sbb
pop
or
lahf
clc
test
int
mov
aam
mov
neg
mov
mov
and
mov
fistpll
mov
dec
sub
in
shlb
clc
inc
lock
and
sub
in
mov
mov
push
jmp
scas
loope
std
sub
and
cltd
out
and
fs
js
sbb
imul
xor
push
addr16
nop
pop
and
cmp
mov
pop
inc
jns
arpl
xor
inc
inc
dec
stos
xchg
inc
rorb
mov
jbe
xor
sbb
add
loopne
mov
sbb
add
test
shr
loop
loop
cmp
out
push
xor
jns
inc
pushl
xor
es
ret
call
jle
loop
xchg
imulb
mov
je
pop
jb
jge
dec
cwtl
push
rcll
xchg
sbb
lea
nop
cmpsl
xchg
xlat
lea
pop
arpl
lea
mov
or
xlat
out
out
inc
dec
imul
scas
inc
clc
xchg
jno
rcl
es
mov
mov
mov
mov
xor
iret
jg
imul
dec
mov
leave
lods
jno
lods
lea
adc
sub
arpl
or
mov
roll
mov
loop
nop
adc
icebp
mov
imul
pop
mov
insb
jge
insb
test
cmp
outsb
push
sub
push
mov
call
pop
enter
inc
in
adc
ret
xor
or
in
imul
jl
sub
mov
mov
mov
pop
cmpsb
mov
les
jmp
ja
movb
mov
fsubs
push
xchg
xchg
mov
xchg
jno
bound
cmp
mov
inc
fs
nop
fcomps
xor
mov
pop
imul
mov
mov
adc
mov
in
push
mov
sahf
pop
jae
pop
clc
scas
dec
push
aaa
js
pushf
or
sub
xorb
xor
fs
mov
movb
iret
xor
adc
mov
cmp
xor
aam
jo
shl
test
jle
cmp
xchg
xlat
cmpsb
inc
repz
jmp
scas
mov
and
push
cs
and
lret
bound
imul
lds
outsl
jo
sub
adc
popa
mov
sub
out
cmp
out
pushl
add
das
popa
pop
loope
je
fincstp
xchg
mov
jecxz
xor
dec
dec
hlt
pop
imul
test
adc
mov
sahf
add
enter
pop
inc
call
mov
cmc
andb
add
dec
sub
pop
int3
mov
fildll
push
dec
loop
mov
dec
dec
test
add
cs
push
cmpsb
adcl
jle
stos
jmp
repnz
adc
lea
lret
xor
mov
ss
fiaddl
gs
lcall
pop
ljmp
jne
addr16
leave
sahf
jl
push
or
gs
mov
mov
or
cld
mov
data16
aad
jmp
popf
cs
mov
mov
scas
push
and
into
cwtl
in
jle
mov
inc
and
dec
scas
jmp
adc
cli
push
pop
inc
lods
pop
push
imul
in
das
sub
pusha
jl
inc
fs
mov
in
xchg
adc
lods
push
call
clc
and
fistpll
cmp
inc
mov
fwait
roll
test
pop
loopne
cs
xchg
loop
inc
in
cli
arpl
inc
aaa
ja
and
test
or
loop
pop
push
cld
cmp
sbb
test
dec
test
repz
jmp
pusha
inc
cs
mov
jp
mov
fdivrs
or
out
mov
jnp
push
and
es
nop
sbb
dec
js
loop
xchg
push
xchg
and
sub
push
lcall
lea
xor
xchg
add
xchg
add
enter
jmp
imul
adc
push
sub
stos
xor
sbb
das
lock
cmp
mov
out
ret
and
daa
lcall
into
cmp
xchg
stc
xchg
dec
mov
loope
enter
les
pop
mov
icebp
inc
loopne
dec
lret
loopne
daa
push
sbb
pop
mov
call
push
cmp
sbb
hlt
out
pop
push
mov
jns
lods
nop
cmp
cs
jecxz
sub
mov
jl
lret
test
lret
lods
cli
ljmp
outsb
add
push
lock
lds
push
inc
inc
jmp
test
adc
cld
pop
adc
std
arpl
xchg
lods
icebp
xchg
lret
out
es
pop
cmp
push
das
arpl
in
sub
and
sbb
mov
cmpsl
pop
fdivrs
xchg
cmp
enter
insb
cmpsb
jns
lret
ret
test
movsb
lds
sub
mov
or
cmpsl
std
mov
outsb
js
cmp
add
push
add
cmp
mov
or
ret
cmp
in
jmp
mov
jge
sbb
jbe
push
sbb
pop
sahf
lahf
mov
xlat
xor
pop
out
add
pop
sub
pop
sbb
cmp
ds
mov
xchg
sub
aad
ret
lods
cmpsb
daa
jo
shlb
xchg
mov
mov
faddp
outsb
rol
add
xchg
sub
dec
jle
daa
ficoml
xor
push
scas
leave
arpl
pop
adc
push
test
push
nop
and
or
lahf
loope
arpl
divb
test
js
ficompl
insb
mov
xchg
xor
sbb
fidivrl
sbb
mov
push
push
call
xor
pavgb
fidivs
subl
aad
add
inc
insb
mov
jp
insb
sub
xor
shll
ja
cs
dec
cmp
enter
sub
cmp
in
ret
or
or
and
fmull
icebp
sbb
inc
cmc
mov
pop
jmp
jne
ret
mov
cmpsb
sub
mov
fs
in
sub
icebp
or
lods
rolb
push
xchg
jb
xchg
cmp
jns
jb
mov
xchg
ret
sbb
jae
cmp
xor
xchg
jg
test
jne
out
loop
scas
sbb
and
out
enter
cmp
movb
enter
push
push
or
jp
leave
push
test
inc
cwtl
in
insb
lods
xchg
lea
lea
pop
xchg
cmp
jns
mov
cltd
bound
dec
push
arpl
jmp
stos
data16
mov
aad
fdivl
mov
mov
and
or
js
mov
cltd
lock
jnp
outsb
xchg
rcrl
lea
lcall
or
test
inc
mov
leave
and
lret
mov
add
add
aaa
push
push
dec
in
mov
xchg
in
adc
xchg
sub
repnz
out
adcb
pop
test
jmp
jmp
js
jno
outsb
inc
xor
add
in
inc
xlat
imul
add
jae
jmp
stos
cmp
push
sbb
mov
and
mov
inc
mov
pop
aam
and
sub
in
dec
int
fldcw
adc
int3
lcall
adc
mov
adc
mov
aas
ret
mov
lahf
jno
popa
mov
or
pop
xchg
dec
popa
mov
push
mov
clc
xor
add
adc
loope
icebp
sub
sbb
or
pop
xchg
dec
popa
mov
push
mov
clc
xor
add
adc
loope
jno
inc
sbb
or
js
push
popa
mov
push
mov
clc
xor
add
adc
loope
icebp
sub
sbb
or
pop
xchg
mov
jno
jmp
push
call
inc
pop
jno
popa
aaa
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
ret
call
mov
cmc
xlat
lret
mov
push
add
adc
sbb
or
clc
shr
loop
repnz
test
cwtl
mov
inc
js
push
add
adc
and
xor
ret
call
cmpb
mov
jno
adc
pop
dec
add
dec
popa
jge
or
mov
lds
fwait
cmp
fs
push
aas
cltd
lock
shrl
sub
aaa
addb
pop
xchg
pop
cmp
fisttps
pushf
pop
lea
clc
adc
cmp
das
mov
and
in
or
mov
testl
ret
jmp
ljmp
fdivs
cmpsb
lea
mov
adc
push
sysexit
jge
mov
pop
addr16
inc
cmp
stc
jnp
lock
insl
fstpl
xor
jge
adc
stos
push
push
mov
jns
pop
sbb
movl
add
shr
loop
repnz
test
cwtl
mov
inc
js
push
add
adc
and
xor
xchg
mov
movsb
sahf
mov
out
std
jmp
xor
add
ss
test
push
inc
lcall
sbb
flds
xor
jb
cmc
push
ja
dec
insl
pop
movsw
test
pushf
movsb
lods
xchg
mov
mov
js
push
add
adc
and
xor
ret
call
cmpb
mov
push
push
add
adc
and
xor
ret
std
jg
lea
push
jge
mov
icebp
popa
subl
jmp
xor
mov
xchg
loop
xor
cmp
pop
and
mov
adc
push
int
push
fs
inc
mov
pop
cmp
xchg
mov
mov
adc
out
outsb
cwtl
mov
push
aam
lods
cmp
je
dec
xor
push
mov
sub
stos
aad
lock
rcll
in
insb
ret
or
insl
shr
dec
or
sub
mov
dec
cs
mov
dec
xor
dec
xchg
mov
pop
lret
xchg
cmp
jns
or
sbb
incl
in
inc
lea
push
jne
jmp
mov
jb
push
das
mov
loop
sarl
lcall
lahf
pusha
mov
scas
movsb
push
push
mov
stc
jnp
scas
sub
add
add
in
insb
xchg
dec
data16
mov
and
stc
mov
repz
outsb
pop
xchg
fucomp
lahf
fs
pop
jnp
leave
mov
cmc
bound
xchg
dec
or
call
jl
lret
sbb
inc
cltd
inc
push
pop
sbb
push
dec
mov
xchg
pop
ficoms
ret
mov
mov
mov
lret
lods
sbb
pop
mov
cmp
pop
movsl
ljmp
and
mov
pop
mov
mov
jmp
mov
jg
daa
mov
loopne
lahf
mov
and
in
add
jle
mov
iret
add
insl
push
out
in
dec
data16
orb
repz
stos
mov
imul
lds
cmpsl
jge
out
clc
fidivl
push
dec
jae
mov
lds
inc
cld
cld
rcrl
in
mov
aad
push
adc
cmpl
cltd
xlat
add
or
push
and
insb
jne
push
mov
repz
push
decb
or
cwtl
mov
xchg
mov
daa
out
add
add
xchg
outsb
jns
gs
lock
test
test
mov
fbstp
fistl
sbb
aaa
rol
cmp
cmp
or
dec
xchg
xchg
mov
imul
std
push
in
jnp
jns
dec
in
arpl
js
or
hlt
mov
out
and
popf
outsb
sbb
push
cmp
mov
or
pop
int
adc
cmpsl
test
push
cli
stc
loop
push
xlat
push
or
dec
mov
leave
inc
pop
lret
lret
cmpsb
dec
push
imul
xor
jne
mov
iret
mov
testb
cs
push
pusha
pop
out
dec
rclb
push
xchg
xchg
push
mov
xor
xchg
ds
mov
inc
mov
jmp
jge
or
dec
mov
jle
sbbb
push
or
pop
dec
loope
sbb
lock
xchg
cmpxchg
imulb
lds
push
mov
xchg
ret
jne
sub
imul
cmp
mov
adc
das
or
lret
sarl
ljmp
loope
adc
or
sbb
mov
dec
push
in
imul
add
pop
mov
sbb
add
push
dec
imul
jmp
pop
xor
scas
leave
lea
cld
inc
shrl
fnstsw
xchg
arpl
lods
pop
jmp
mov
lds
or
mov
push
adc
jp
repnz
nop
dec
arpl
lcall
test
pop
jne
mov
inc
mov
mov
adc
orl
jb
mov
orb
mull
pop
inc
push
fldenv
xor
scas
daa
mov
lods
rolb
shll
sbb
xchg
push
pop
je
fwait
pusha
push
jno
or
jnp
scas
sbbb
ja
pop
repz
cmpsl
ret
mov
lods
outsl
sub
adc
push
pop
movl
ds
test
xchg
lret
fiadds
bound
pop
cmpsb
pusha
les
cmpsl
push
mov
adc
mov
dec
stos
adc
das
in
fisubrl
pop
scas
sbb
or
in
mov
mov
xchg
and
adc
fisubrl
jge
adc
xchg
push
imul
ss
adc
xchg
mov
andps
add
or
lahf
stc
jle
cs
and
xor
lock
cld
repz
sbb
aas
insb
in
insb
xchg
icebp
and
sub
pop
stos
movsb
sub
mov
xchg
notb
dec
lcall
xchg
pusha
xlat
cmp
mov
movlhps
push
lret
bound
aaa
push
cmc
push
xor
pop
add
test
sub
and
pop
out
aaa
inc
fildll
jg
xor
out
xchg
ljmp
xor
aaa
or
push
add
jge
pop
pop
xchg
add
imul
add
adc
push
mov
push
aaa
ret
xchg
insb
sti
insb
push
mov
xchg
loopne
ds
arpl
push
jns
or
rorb
movsb
add
out
filds
jnp
cmpsb
dec
mov
nop
cmp
jb
mov
xchg
sti
mov
push
pop
nop
mov
in
xlat
jbe
pop
mov
insl
addr16
jl
cmp
imul
pop
loopne
cmc
imul
icebp
lock
daa
in
sbb
cs
hlt
pop
sub
in
icebp
lock
cmp
int
xchg
hlt
push
adc
test
pop
cmp
mov
movsb
mov
and
fists
mov
ja
cmpsb
jb
sbb
repz
inc
cmc
lea
cmp
jg
push
adc
xor
mov
jb
pop
mov
lds
jle
out
fwait
dec
inc
xor
sti
fucomip
icebp
lcall
imul
lock
adc
xchg
mov
addl
push
mov
or
sti
test
add
mov
add
and
cli
xor
movsl
or
push
inc
mov
sub
scas
inc
mov
aad
or
aad
in
leave
mov
push
cmpsl
rcrb
imul
jecxz
cmp
outsb
popa
sbb
aad
push
cmp
roll
pop
ret
aam
gs
mov
insl
inc
scas
jae
jg
sub
inc
pop
inc
sub
lahf
lret
jge
cmp
cmpsb
jb
jl
loopne
jmp
mov
in
xchg
ds
and
push
pop
inc
add
and
lods
and
and
clc
sahf
lds
add
iret
push
jp
idivb
adc
popf
cmp
divb
movsl
push
mov
or
cmp
sbb
les
xor
stos
mov
and
into
adc
pop
bnd
and
out
int3
iret
jno
xchg
add
inc
push
and
aaa
ss
fnsave
xor
cmp
xchg
jo
ja
pushf
jecxz
imul
iret
jmp
mov
and
cmc
push
mov
enter
inc
jp
enter
or
add
lahf
ss
pushw
and
stos
test
negb
dec
push
insb
daa
fidivs
arpl
inc
lret
add
fisubrl
out
gs
pushf
xor
push
inc
dec
mov
std
pop
push
pop
test
pushf
push
out
adc
xchg
mov
xchg
lods
or
fwait
std
cs
enter
ret
in
shrb
inc
or
xchg
jg
pop
dec
lock
inc
or
pushf
or
pushf
imull
and
or
shlb
subb
mov
lods
and
sub
push
jmp
sub
jno
pop
pop
mov
jno
pushfw
comiss
icebp
hlt
push
sbb
or
ss
popa
sbb
jl
and
mov
pushl
inc
je
sahf
loope
pop
mov
xorb
insl
jae
cs
dec
sbb
pop
pop
xchg
out
mov
or
js
mov
mov
addb
fcoml
jns
iret
xchg
sbb
sub
fwait
loopne
adc
test
lahf
jmp
insb
or
cmp
outsl
xor
jae
loopne
pop
inc
in
pop
clc
subb
pop
shlb
test
js
sbb
aaa
aaa
jmp
mov
mov
test
lret
jmp
fwait
insl
sbb
mov
mov
cmc
incl
sarl
rcrb
sti
cli
subl
mov
stos
shlb
mov
cwtl
xchg
scas
mov
sub
stos
fnstenv
and
jns
ret
push
or
nop
adc
insb
cmp
add
xor
test
fmuls
bound
mov
jg
sub
add
inc
loop
mov
ja
mov
call
subl
mov
dec
sbb
sub
push
adc
enter
xlat
ret
pushf
inc
adc
jecxz
jno
xor
and
sbb
jne
push
test
nop
filds
std
pop
dec
pop
mov
xlat
shll
push
mov
jns
xor
pusha
aaa
push
arpl
lea
rorb
out
cmpsb
push
cli
call
adc
sahf
mov
outsl
insl
jg
sahf
cmc
loopne
clc
cmpsb
fstps
in
or
pop
adc
inc
ficoml
arpl
into
test
fistps
es
sbb
leave
repnz
xchg
jle
rol
jmp
inc
ret
inc
mov
popa
lods
pop
jb
insb
mov
jbe
and
jo
cmp
js
push
cs
movsl
std
hlt
or
popa
negb
sbb
imul
mov
xchg
repnz
js,pt
sahf
popf
lds
daa
and
ja
jle
cmp
leave
in
mov
mov
add
xchg
popa
mov
cld
ficompl
stc
outsb
inc
adc
push
mov
int3
mov
jge
adc
sbb
xor
pop
icebp
aaa
push
in
and
jbe
sbb
test
icebp
cltd
sahf
jbe
xchg
mov
daa
insb
jo
cltd
std
mov
fimull
and
xchg
jmp
inc
jmp
movsl
mov
and
mov
int3
filds
pop
cmpsl
push
inc
call
xor
xor
pop
out
test
dec
pop
insb
or
or
push
pop
and
jnp
aad
pop
push
inc
stc
lea
mov
movl
lods
lea
iret
arpl
test
popa
inc
cld
xchg
push
pop
xchg
sub
das
stos
mov
cli
neg
jl
es
comiss
ds
push
xchg
push
jle
push
ds
push
sbb
fildll
push
inc
out
mov
popf
test
mov
mov
cli
gs
mov
inc
xchg
idivb
xchg
cwtl
cmpsb
xor
sti
ss
mov
ja
push
push
test
sub
push
repnz
int
pop
fdiv
inc
popf
fisubl
pop
add
pop
lret
dec
mov
dec
cmp
adc
xchg
jb
mov
mulb
or
mov
cmp
insl
imul
in
or
mov
lcall
repz
pushf
sti
dec
pop
cmp
test
adc
fistpl
lods
adc
aas
popa
pop
je
aam
gs
insl
adc
jg
into
mov
and
jl
fnstcw
inc
pop
pop
ljmp
pusha
pop
sub
lret
jnp
ja
cli
pop
inc
mov
lcall
jne
jge
adc
frstor
imul
sti
sahf
ss
jp
jmp
xor
pop
xlat
adc
data16
sub
popa
mov
fistpl
sbb
push
lods
add
push
mov
je
xor
sbb
scas
dec
jmp
fildll
ror
lock
nop
lcall
inc
lret
inc
out
xlat
das
js
cli
jecxz
lods
nop
into
in
adc
or
mov
xor
push
pop
lds
xchg
mov
aad
into
xchg
jge
out
jo
out
cmp
pop
movsl
and
mov
mov
mov
aam
mov
dec
jge
mov
fucomip
cmc
lret
push
jp
or
and
cmp
andb
mov
or
add
cli
pop
xchg
cmp
aad
inc
ficompl
xor
daa
cli
xor
cmp
das
stc
repz
sti
sub
pop
mov
cli
push
inc
or
xor
xchg
fsubl
add
mov
dec
jno
gs
mov
inc
sub
out
jecxz
fst
rorl
movsl
pop
jae
sub
pop
ja
pop
mov
je
in
xchg
pop
movsl
ja
cltd
dec
mov
and
push
jnp
cmp
mov
mulb
mov
xchg
movsb
adc
in
inc
xchg
adc
mov
inc
daa
dec
fwait
adcb
and
jne
push
in
xor
dec
xor
in
adc
sahf
out
arpl
pop
jae
pop
pop
repz
mov
ds
xor
data16
pop
fwait
jmp
movsb
xchg
hlt
icebp
cwtl
adc
ljmp
ret
fwait
out
int
testb
nop
dec
rcrb
adc
loop
cli
mov
enter
inc
int3
lock
fstpt
lcall
sbb
dec
mov
add
mov
rep
enter
notl
mov
dec
fcom
xchg
mov
adc
lsl
sahf
test
pop
fs
mov
pop
mov
iret
cltd
test
sub
jo
cld
jmp
fdivs
pop
inc
ret
xchg
sar
fisubl
mov
dec
cmpsl
aaa
push
movsb
mov
test
out
jb
adc
inc
loope
xchg
into
inc
dec
fwait
adc
mov
pusha
shlb
loop
mov
jae
filds
dec
or
mov
in
imul
movsl
popa
xchg
insl
or
test
lret
jne
mov
xchg
ds
fcompl
lret
xor
sub
cmpsb
inc
fsts
ljmp
push
cmpsl
adcl
xchg
sti
out
ret
jo
not
loop
xor
aas
jle
aas
cmp
out
jo
jo
out
xor
imul
dec
dec
inc
ljmp
sbb
js
add
cmp
add
mov
das
sbb
ja,pn
dec
jmp
mov
ja
pop
mov
xchg
mov
pop
pop
push
and
xchg
pop
mov
jno
cmp
xor
cmpsl
sbb
popf
push
add
adc
mov
cmpsb
jg
pop
inc
mov
mov
mov
and
dec
ret
mov
mov
cmp
fs
je
arpl
jle
aad
sub
mov
cltd
xchg
add
test
adc
sub
fisubs
ret
cmp
fwait
imul
jecxz
pop
jnp
rorl
incb
mov
adc
shrb
scas
aad
dec
pusha
loopne
cmpsl
outsb
leave
xor
push
xorl
insl
cmp
xlat
xor
pop
adc
or
pop
iret
dec
mov
inc
mov
xchg
or
jb
loopne
pop
sbb
sbbl
adc
add
loope
sbb
mov
mov
lods
xchg
xor
subl
dec
imul
mov
ret
lods
scas
jmp
jge
cli
shll
add
jge
fnsave
out
aad
cmpsb
out
sub
test
dec
cmp
mov
or
and
jo
inc
fisubrl
mov
add
mov
stos
sub
jbe
ljmp
jmp
cmp
dec
and
rorl
sahf
dec
inc
idivl
stos
lods
lret
cmc
in
adcl
or
dec
dec
sbb
xchg
ret
or
lea
daa
clc
fcomp
cmp
in
add
jne
aaa
cmp
xor
xor
hlt
xor
and
out
es
lea
jmp
mov
das
movsb
int3
cmp
inc
fisubrs
adc
mov
aas
or
mov
cmpsb
adc
cmpb
dec
mov
insl
stos
sub
mov
shr
inc
pushf
pop
sbb
jno
lahf
and
mov
push
xchg
mov
cld
cmpsb
subb
fdivrs
xchg
daa
insb
mov
je
lea
addr16
xchg
das
icebp
arpl
fists
popf
add
out
hlt
mov
xchg
xor
add
lods
scas
neg
int
sub
xchg
xchg
fisttps
inc
callw
mov
dec
cmp
lret
or
push
cmp
xor
nop
adc
arpl
or
and
test
ffree
test
cltd
xchg
fimull
sub
aam
push
push
lds
in
mov
mov
idiv
repnz
stc
jae
dec
test
fimull
sub
cltd
in
xchg
mov
out
cli
inc
dec
mov
dec
aaa
aas
jbe
add
pop
lds
fs
clc
aas
int3
daa
getsec
dec
xchg
sub
push
cli
outsl
imul
adc
sbbl
push
lock
aas
cmc
or
test
push
rorl
jns
pop
pop
dec
enter
sbb
cmpsl
inc
mov
lret
cs
and
shll
or
pcmpgtw
jmp
mov
repnz
mov
jmp
outsl
fcoms
sub
mov
pop
xor
sub
test
push
adc
lcall
pushf
test
adc
add
push
inc
in
shr
inc
sub
cmp
pusha
pusha
mov
loope
adc
mov
test
mov
pusha
xchg
insb
xor
cmp
stos
cmp
jne
sbb
or
xlat
mov
add
add
out
sbb
stos
mov
xlat
push
jge
js
and
mov
inc
mov
lahf
pop
insb
lea
mov
xchg
pop
in
in
adc
jne
and
repnz
jle
in
sbb
sub
iret
fsubrl
outsl
push
sbb
sub
test
and
stos
std
mov
mov
xchg
xchg
sbb
fs
pop
sti
rclb
fldcw
and
std
outsb
inc
adcl
sub
push
iret
outsb
mov
dec
dec
repz
fsubr
lea
int3
mov
inc
pop
es
jmp
inc
dec
push
xor
in
bound
cmp
out
pop
aam
lods
repnz
xchg
jae
test
xchg
or
pop
xor
je
jns
mov
push
lret
fimull
arpl
mov
addr16
outsb
sbb
pop
fnstsw
or
push
lret
fs
adc
push
rclw
inc
xor
sti
loopne
aaa
jmp
sbb
arpl
mov
loop
das
mov
test
aad
push
mov
xor
sbb
cmpb
sub
adc
xor
rolb
inc
aaa
mov
out
and
pop
mov
sub
cltd
cmp
iret
ret
jp
jne
imul
inc
cs
sub
lds
pop
mov
out
insb
add
pop
mov
faddl
outsb
loope
pop
jge
mov
hlt
jp
out
les
jb
test
xor
mov
int3
mov
fidivl
adc
xchg
test
loope
fistpll
xchg
cmpsb
repz
xor
cmp
push
jns
loopne
cmpsl
or
jp
lahf
pop
jnp
and
jmp
movb
pop
in
repnz
sbb
aaa
and
popf
icebp
adc
insl
pop
mov
or
dec
test
xlat
mov
imul
adc
pop
xacquire
sbb
mov
fisubrl
orps
les
dec
addl
fsubs
mov
lea
lea
leave
das
mov
jno
lock
pushf
lock
mov
jb
push
mov
push
in
add
lds
mov
jecxz
fs
cld
cld
jns
ja
fists
add
xor
in
leave
loop
mov
xchg
fcomps
neg
lcall
jbe
and
jb
mov
aad
jge
aam
mov
dec
or
jo
rcrb
mov
arpl
push
mov
pushf
cltd
faddl
leave
rorl
push
mov
mov
adc
cmc
mov
inc
test
mov
movsb
notl
insb
addr16
and
and
pop
pop
mov
sub
movsl
roll
aad
outsl
fucomip
mov
push
jg
and
adc
xor
out
data16
mov
pop
imul
or
or
xchg
sbb
xchg
dec
pop
xor
mov
mov
repz
push
dec
dec
out
adc
packssdw
add
mov
lds
in
sbb
mov
rcl
adc
outsb
mov
cmp
jo
pop
test
xchg
scas
xchg
sub
mov
add
fstp
repnz
test
cwtl
mov
inc
js
push
add
adc
and
xor
ret
call
cmpb
mov
push
push
add
adc
and
xor
ret
call
cmpb
mov
push
imul
adc
and
xor
ret
call
cmpb
ja
xchg
aas
jne
lcall
jl
sub
pop
cmc
dec
xor
cli
dec
xlat
cmp
jecxz
call
pop
inc
xor
js
push
test
xchg
sub
clc
push
call
add
cwtl
xor
scas
std
ret
pushf
or
cmp
lret
cmp
jp
jns
in
lods
cmp
sub
or
shll
leave
ret
jae
pop
in
lcall
std
addr16
inc
jnp
stos
popf
sub
mov
sub
and
rolb
adc
daa
mov
and
adc
xor
add
shrl
call
stos
clc
pop
fprem
ss
dec
xor
push
jp
xchg
sbb
mov
into
jge
or
mov
cli
lods
adc
hlt
xchg
scas
pop
xchg
push
or
hlt
inc
fistl
cmp
rclb
add
mov
ja
fistl
mov
mov
inc
rolb
and
hlt
int3
dec
in
cmc
dec
xchg
cmp
lcall
insb
hlt
sbb
xorb
xorb
negb
mov
inc
mov
adc
push
in
pop
loope
ds
mov
test
push
jp
jno
cmp
cltd
xor
add
std
push
sti
mov
xor
and
je
sub
clc
push
call
add
cwtl
xor
push
test
xchg
sub
clc
push
call
add
cwtl
xor
ds
and
mull
cmpsl
mov
aaa
fs
xchg
mov
pop
pop
inc
adc
pop
and
mov
cmc
and
jbe
dec
jbe
sub
mov
xchg
lods
gs
leave
dec
out
jo
mov
jg
test
imul
and
aam
jp
cmp
fistpll
adc
sub
popa
fidivs
add
push
mov
fsubl
push
jns
aaa
dec
int3
pop
das
pop
lea
aad
xchg
or
jge
jecxz
shlb
addr16
inc
mov
notl
insl
inc
jno
out
adc
daa
lret
dec
in
pusha
in
es
lea
sti
xchg
jge
push
mov
mov
dec
cmp
adc
xchg
fdivrs
push
into
add
hlt
jle
imul
ret
xlat
lret
outsb
push
popf
das
jg
lcall
push
sub
mov
jbe
add
hlt
sub
mov
in
push
pop
push
sub
sbb
and
or
jno
mov
adc
lds
and
or
jae
fildl
flds
mov
mov
imul
cmp
out
sbb
fcomps
mul
popa
in
push
pop
adc
popa
or
mov
popf
outsb
push
pop
rol
xor
icebp
popa
inc
or
clc
fwait
ja
lcall
in
and
movsl
cmp
or
xchg
dec
push
jle
jns
adc
inc
fdivrl
jns
out
lods
pop
xor
mov
xor
xchg
dec
cld
in
mov
hlt
push
das
adc
addr16
movsb
fwait
aad
out
sbbb
lds
sti
jno
cmp
in
and
lock
cs
rcll
xchg
fadds
mov
xchg
js
xor
stos
dec
inc
insl
cmc
adc
push
or
add
inc
loop
dec
cmpsl
out
hlt
fwait
rcl
rolb
or
or
push
push
and
push
dec
sub
sub
mov
cmp
jp
mov
jmp
loope
cmp
push
shll
cltd
jb
xor
sbb
xor
or
and
pop
or
sub
arpl
js
movsb
sub
pop
stc
and
fwait
mov
shlb
std
in
push
mov
push
daa
xor
out
movsl
or
sub
jo
imul
stos
fisubs
mov
jmp
and
or
insb
pusha
push
insb
adc
cmc
cmp
add
loopne
stos
clc
cld
push
cs
add
mov
mov
push
in
mov
or
or
jb
cmp
xchg
test
and
jle
jl
jb
pop
lahf
test
add
add
mov
or
mov
aam
or
cmp
aas
adc
sbb
imul
dec
mov
push
or
sti
fwait
psllw
and
es
mov
ret
ret
dec
jo
fwait
testb
mov
test
sarl
ret
sub
enter
push
xor
dec
pop
mov
in
mov
sub
in
jl
sub
stos
clc
loop
andl
pop
mov
mov
push
stos
or
sbb
dec
lock
ja
shl
jae
pop
icebp
cmpsl
lcall
sbb
bound
js,pn
iret
push
shl
xorl
lods
out
cwtl
sbb
xor
sti
in
mov
cmp
pop
inc
mov
xor
or
push
lods
mov
hlt
outsl
cmpsl
leave
sub
hlt
inc
push
js
aam
fstl
mov
cltd
dec
push
xchg
data16
cli
in
int
pop
mov
into
fistps
daa
sub
or
and
inc
js
es
mov
or
sbb
lds
mov
jecxz
push
xor
das
in
gs
cmpsl
dec
cmp
mov
mov
int
pushf
push
inc
or
loopne
push
insb
mov
inc
and
mov
adc
jae
cs
pop
mov
pop
sbb
in
sub
mov
add
push
jp
in
int3
daa
in
inc
push
and
data16
inc
pop
cmp
shr
mov
mov
notl
cmpsl
stos
fistpl
andl
call
cmp
xor
dec
mov
cmp
pop
xchg
jo
test
and
je
rcrb
mov
sub
fsubr
add
imul
cmp
fmuls
sub
in
jns
jle
sub
sarb
adc
adc
es
jle
arpl
hlt
stos
in
jns
xor
fcoms
fidivrl
adc
mov
into
add
inc
push
add
xchg
popf
cmpsb
ret
push
ret
ljmp
push
movsl
mov
xchg
insl
mov
rorb
pop
cmp
jnp
lret
cs
cmpsl
daa
mov
pop
movsl
sub
push
lcall
in
iret
pop
cmc
sahf
mov
jbe
sti
cmp
dec
in
adc
leave
jae
mov
sbb
and
dec
lock
jo
xchg
sarb
loopne
lea
sub
push
iret
sbb
mov
loope
xor
insl
jo
into
inc
ret
xchg
xor
xor
adc
call
in
ss
and
sbb
adc
stos
loopne
stc
addr16
sub
std
aaa
jne
leave
aaa
iret
loopne
jo
cmc
mov
fldenv
clc
mov
mov
lock
cmpsw
les
cmp
lret
cmp
aam
clc
mov
frstor
pop
jl
cli
mov
rolb
lahf
push
xor
cs
lret
dec
ljmp
xchg
out
dec
jmp
xchg
push
shlb
sbb
outsb
xchg
cmpsl
cltd
mov
repz
adc
sub
test
inc
insl
loope
test
xor
test
sbb
mov
mov
imul
pop
adc
adc
lcall
xor
into
rcrl
adc
xor
xchg
fsubl
or
mov
sbb
xor
push
pushf
aad
fwait
or
sbbl
cmc
daa
jl
nop
add
loop
jo
shll
jb
mov
lea
adc
in
xchg
xor
cltd
cmc
faddp
sahf
pop
lods
push
cmp
or
sbb
mov
lods
mov
mov
add
in
adc
test
pop
outsl
sbb
pop
jb
sbb
adc
paddq
into
lea
sub
arpl
pop
mov
or
mov
xchg
repz
cmp
xor
call
dec
sbb
sbb
sbb
push
xchg
enter
outsb
pop
sub
cmp
ja
jne
push
sub
rclb
stos
stos
push
adc
sub
popa
loopne
pushf
lret
xor
adc
jbe
mov
pop
repnz
xor
push
xor
fstl
lcall
cli
out
push
cmpl
mov
mov
mov
mov
aas
pop
inc
jne
idivl
mov
or
push
adc
mov
insl
mov
xchg
mov
inc
aad
xor
mov
in
or
inc
cld
add
push
cmp
ljmp
xchg
dec
mov
pop
pop
xchg
int
jno
and
call
xor
xchg
jg
inc
bt
test
leave
movsl
lahf
and
cmp
add
mov
cmp
in
outsb
mov
and
cmp
outsb
push
jl
pop
pmaxsw
push
xor
adc
xchg
xchg
test
imul
clc
dec
add
mov
aad
mov
pop
jno
mov
outsl
repnz
sub
jg
jle
sbb
ljmp
inc
jl
sub
mov
test
cmp
iret
lret
cmp
loope
scas
mov
inc
pop
dec
ret
mov
imul
les
js
lahf
or
cmp
push
jg
sub
jnp
xchg
je
mov
insb
jae
loope
adc
ret
leave
xchg
cwtl
jecxz
ljmp
bound
decl
hlt
and
xor
mov
xor
fistps
xor
mov
cli
ret
mov
push
rclb
test
ljmp
lds
mov
fsubrp
mov
es
and
sbb
adc
int
lods
lds
sub
pop
clc
js
ljmp
pop
dec
lret
pop
jl
fisttps
jecxz
rcpps
sti
inc
pop
dec
jg
add
iret
sub
push
mov
jnp
sbb
inc
cmpb
mov
mov
mov
mov
cmp
out
mov
push
adc
xchg
imul
punpckhdq
push
test
dec
pusha
dec
add
es
push
pop
mov
iret
shlb
pop
xor
mov
sub
imul
cmovnp
daa
lods
and
cltd
sub
mov
leave
jl
jg
mov
cli
xchg
aas
mov
add
popf
add
sahf
popa
sub
push
imul
ss
push
icebp
cmp
lret
pop
mov
inc
ljmp
dec
daa
dec
and
mov
or
push
outsb
dec
or
inc
lock
sub
cwtl
fldenv
pop
adc
push
das
inc
out
sub
xchg
out
push
cli
lcall
adc
lods
addr16
fst
push
mov
lret
xchg
pop
add
dec
fists
sub
repnz
push
xchg
jmp
cmp
pop
jae
jge
leave
cmp
aaa
lret
in
rcll
mov
jle
sbb
hlt
adc
mov
shlb
roll
mov
mov
aad
les
push
xchg
aas
mov
and
in
out
or
add
arpl
mov
and
mov
or
lock
inc
mov
xor
in
mov
into
data16
push
cs
xchg
sub
or
jae
and
mov
das
and
stc
leavew
shll
ret
mov
iret
xchg
lret
lock
es
xor
pop
popa
jmp
inc
fildl
push
jp
fldcw
fimull
mov
jecxz
mov
pop
stc
nop
and
mov
flds
or
add
inc
cmpsb
aas
andb
mov
insb
fisttpl
lret
cmp
or
js
sub
lea
mov
test
loop
es
ds
jg
scas
js
popa
and
mov
xchg
pop
inc
lods
cmp
jge
mov
inc
test
imul
out
adc
iret
jne
jbe
mov
pop
mov
stos
xor
dec
mov
pop
jne
lcall
test
scas
push
icebp
sub
jb
call
xor
inc
dec
int
shrl
jl
push
jbe
rcrl
inc
cmp
das
rolb
dec
enter
pop
dec
aam
and
cli
lret
stos
sub
mov
or
negb
shl
sub
mov
les
sub
sbb
inc
jle,pt
in
loopne
aad
sub
sbb
sub
lds
sub
aad
mov
cltd
pop
ljmp
pop
push
gs
fsubs
mov
out
aad
sbb
add
adc
jb
mov
les
xchg
pop
mov
mov
mov
loop
aam
dec
cwtl
leave
and
xor
jg
or
xchg
inc
sbb
fidivs
xchg
cmc
test
sub
jmp
daa
in
xchg
jnp
adc
test
fsts
or
pop
punpckhdq
or
cmp
icebp
test
outsb
push
cltd
mov
push
push
or
stos
cmp
imull
js
and
rcr
data16
rol
rclb
js
js
add
cwtl
xor
in
pushf
jns
mov
mov
fcmovbe
outsl
fdiv
cmp
push
mov
xor
xchg
shl
gs
arpl
cmp
sahf
mov
xchg
inc
sub
jno
cmpsb
inc
aas
fidivrs
jo
movsb
mov
in
fsubrl
xchg
and
sub
or
lods
add
jp
cmp
fildll
push
insl
inc
decb
mov
cmp
push
jge
mov
mov
iret
xchg
lret
inc
test
nop
lcall
mov
pop
stc
add
dec
mov
insl
jle
rcrb
mov
lock
xchg
mov
sbb
scas
scas
pop
scas
sub
lea
aam
push
push
mov
and
sarl
cwtl
daa
inc
jo
mov
pop
aad
loop
mov
mov
mov
fisubrl
es
mov
mov
cmp
in
cltd
jo
adcb
insl
pop
sbb
lahf
xor
cmp
inc
pop
dec
jmp
in
or
push
test
and
lret
imul
push
rol
arpl
lea
stos
inc
in
pusha
add
addr16
iret
lcall
scas
inc
decl
pop
mov
out
loope
cs
sub
xchg
orl
test
in
push
add
int3
or
and
mov
jge
inc
test
imul
ret
and
or
jb
cmpl
xor
out
and
in
out
test
repz
in
push
sub
push
jae
in
test
push
push
inc
inc
fwait
mov
outsl
inc
jae
pop
mov
sar
jo
in
fwait
adc
jae
cli
xor
inc
xlat
sub
sub
js
stos
sub
or
mov
or
outsl
add
xor
inc
pop
and
cwtl
jae
in
sbb
lcall
insb
fwait
pushf
fldln2
xorl
pop
les
mov
lock
xor
mov
dec
push
loope
or
test
fwait
es
mov
test
and
adc
xor
mov
xchg
add
cmp
dec
ja
out
fwait
push
push
sbb
and
fwait
insb
dec
mov
fs
sbb
pop
sub
test
clc
sbb
pop
test
push
xchg
cmp
mov
pop
pop
mov
xchg
sti
stc
in
sti
mov
sbb
push
std
pop
test
into
mov
lcall
lods
xor
cmp
pop
dec
imul
test
insb
data16
push
and
push
mov
ficomps
lock
mov
xlat
mov
pop
xor
mov
ds
scas
and
fdivs
je
pop
cmp
xchg
cmpsb
shl
dec
ret
xor
jg
out
bnd
je
cld
mov
jno
pop
or
inc
aaa
ret
fcoms
imul
mov
mov
xchg
inc
adc
andl
cli
push
and
sbb
add
ss
sahf
rolb
add
push
leave
add
movsb
or
popf
repnz
and
fsubl
test
ror
mov
imul
test
iret
cmp
push
lret
jp
loope
data16
xor
mov
das
dec
mov
aaa
outsb
ljmp
xchg
lods
pop
jno
xchg
and
xor
xchg
aaa
bound
in
scas
jae
lea
mov
dec
dec
push
mov
mov
xchg
mov
dec
lock
lcall
inc
push
and
lcall
je
in
cli
emms
out
cmp
ret
fwait
pop
or
pop
push
jns
cltd
fstps
mov
out
adc
leave
jo
mov
int
and
jb
int3
aaa
fidivl
mov
insl
mov
push
lret
add
mov
mov
jg
mov
int3
testl
jne
cmp
lods
and
sub
mov
mov
das
or
dec
cmp
test
stc
rol
xlat
inc
dec
mov
mov
movsl
in
jg
fucomp
fwait
inc
addb
cwtl
sub
js
jae
nop
sbb
loop
or
imul
xchg
and
repnz
das
pop
xlat
test
add
scas
xchg
insb
cli
cltd
movsb
adc
lods
loopne
inc
cmc
push
test
shrb
mov
lcall
pop
xor
aad
adc
push
push
loop
inc
std
pop
mov
test
ret
jb
ret
cltd
pop
adc
push
mov
pop
jnp
scas
insl
and
mov
jbe
add
push
dec
vpsrlq
add
sbb
std
out
push
cmp
pushf
fsub
mov
mov
jp
mov
mov
mov
sbb
xor
dec
movsl
stc
sbb
sbb
test
popa
leave
mov
and
inc
arpl
dec
outsl
test
mov
inc
out
mov
mov
lahf
dec
xor
xchg
sub
mov
add
cwtl
jno
or
or
cwtl
rolb
mov
sahf
lret
push
and
sbb
mov
push
sub
cmpsb
outsb
in
xor
jnp
mov
stos
out
push
sub
decb
sub
mov
aaa
ljmp
nop
out
rorb
ds
jl
adc
adc
xchg
daa
cltd
fists
jno
jb
add
inc
push
or
arpl
adcl
mov
adc
fbld
jns
test
mov
adc
adc
sbb
xchg
jb
pop
arpl
xchg
fiaddl
and
adc
scas
dec
xchg
xchg
dec
sar
jp
lods
cli
jmp
mov
pop
cmp
test
adc
fs
scas
shl
outsb
fisubl
sub
fbstp
roll
pop
sbb
ljmp
or
add
mov
scas
mov
xlat
faddl
ret
aaa
leave
pop
push
mov
mov
int3
push
adc
stc
jne
cmp
shr
dec
and
test
xchg
test
xlat
mov
rolb
clc
jge
xor
sbb
jmp
aad
mov
scas
mov
mov
xchg
dec
cs
in
ret
dec
sbb
jmp
or
arpl
repz
mov
dec
outsl
mov
loopne
es
test
movsb
and
sub
inc
adcb
ret
ret
or
ja
xchg
jns
frstor
scas
stc
pop
push
cmpsb
pop
fildl
xchg
jg
enter
mov
aaa
sub
stc
cmp
scas
sbb
add
xor
mov
movsl
repz
arpl
mov
pushf
xor
mov
inc
xchg
jmp
mov
add
xchg
push
jne
push
negb
cmp
dec
movsl
or
outsb
xor
inc
iret
cmp
fsubrl
xchg
or
aaa
inc
cli
enter
aam
movsl
jbe
bnd
mov
lods
das
mov
aad
pop
dec
aaa
addl
arpl
jle
jle
cmpsb
inc
pop
mov
xor
out
sub
push
cmp
mov
jle
enter
xor
push
push
mov
mov
pop
es
fidivrs
mov
pop
adc
daa
push
xchg
outsb
leave
dec
and
fsubrs
and
sub
mov
jbe
xchg
inc
adc
call
dec
mov
fpatan
sahf
rorl
es
dec
stos
jge
mov
lock
sbb
stos
stos
xor
jnp
sti
lahf
jmp
push
ficoml
rcll
push
popf
test
enter
push
mov
mov
out
push
mov
adc
leave
cmpsl
out
in
push
sub
enter
jmp
repnz
jae
xchg
add
push
movsl
jmp
mov
lret
sub
out
inc
jno
sbb
sti
dec
cld
pop
xchg
popf
dec
mov
or
jle
pushf
mov
fstl
mov
xor
adc
push
mov
inc
lret
fmull
sub
jnp
sbb
or
stos
pop
dec
rcr
mov
pop
adc
andb
stos
xor
mov
add
add
mov
mov
fmuls
loopne
and
inc
cmp
and
aam
sbb
movsb
daa
xor
push
repnz
and
sti
mov
jmp
mov
push
add
xchg
and
ficoml
xor
adc
call
clc
icebp
lods
sub
addr16
sub
push
test
xchg
sub
clc
push
call
add
cwtl
xor
push
test
xchg
sub
clc
push
call
add
cwtl
xor
in
cmc
dec
test
xchg
inc
movsl
sbb
or
push
in
fdivs
add
xchg
aaa
insb
lds
or
cwtl
xor
inc
iret
fdivs
jb
popf
rcr
loopne
lock
xchg
repz
jecxz
mov
lock
push
push
inc
sbb
inc
xor
inc
inc
push
xor
jbe
xchg
xchg
ret
cmpsb
jecxz
xchg
movb
pop
add
push
pop
push
mov
xchg
and
lahf
ficoml
mov
lcall
in
sub
push
pop
ss
dec
cmp
dec
jbe
xchg
mov
sub
cmpb
test
mov
pusha
lods
ljmp
lcall
repz
push
dec
jl
inc
insb
push
lcall
ss
ret
push
add
data16
cmp
ret
adc
nop
adc
xchg
mov
and
inc
push
cltd
cwtl
in
add
rcll
mov
xchg
push
pop
mov
sub
jae
aas
leave
xchg
adc
lret
mov
xchg
push
ret
out
sub
mov
mov
data16
mov
cld
or
push
fmull
add
adc
rcrl
ret
xor
cltd
mov
mov
push
imul
das
or
inc
xor
adc
cmpsl
xchg
mov
into
fwait
daa
outsl
inc
outsb
add
pop
jg
addr16
sar
ret
xchg
xchg
loope
out
in
in
and
push
jg
ja
push
push
jne
xor
cmp
and
mov
jecxz
jmp
adc
out
notb
inc
push
jae
arpl
adc
push
xor
jbe
xchg
xchg
repz
jecxz
xchg
movb
push
push
inc
push
jae
arpl
adc
push
xor
jbe
xchg
adc
sti
scas
mov
pop
sti
push
jge
xor
lods
push
cmp
dec
mov
andl
xchg
pop
pop
fdivp
pop
push
cmp
mov
in
adcl
ret
push
lods
pop
imul
or
cmc
cmp
xchg
fisttpll
call
or
popa
lods
fnstsw
and
sub
sub
fistps
xor
test
jbe
mov
or
push
cwtl
mov
testb
mov
and
cltd
mov
xlat
mov
cld
and
mov
iret
push
inc
cwtl
ret
sbb
mov
push
jmp
aad
cmpb
sbb
sarb
insl
cli
ret
sahf
or
fsubrl
les
inc
pop
das
mov
sub
and
mov
cld
clc
xchg
adc
add
mov
push
lret
mov
aam
rolb
cmp
ds
outsb
push
ja
or
xchg
sbb
and
out
push
jmp
and
fmuls
aam
imul
mov
or
lcall
inc
jno
adc
dec
mov
hlt
addr16
push
lret
dec
in
add
pop
jae
lret
shlb
fcmovb
pusha
mov
mov
or
rcr
inc
mov
ret
cld
mov
idiv
repnz
jno
xlat
shll
addr16
mov
sub
test
xor
add
push
sbb
push
mov
and
arpl
or
jle
mov
sub
xor
mov
outsb
arpl
mov
mov
add
xor
xchg
xchg
in
outsb
getsec
mov
push
push
divb
xchg
call
cmp
aam
vdivpd
mov
adc
cld
pop
adc
ljmp
pop
lds
cltd
sbb
pop
xchg
movsb
xchg
sub
pop
fildl
push
adc
jg
mov
loop
xchg
sub
xor
pop
in
lahf
mov
lret
out
je
add
xchg
mov
jbe
add
sub
pop
cmp
lcall
jbe
dec
push
xor
cmp
and
jne
mov
jl
xor
mov
aam
pop
ja
daa
addr16
dec
cmp
jecxz
pop
call
int
fcompl
adc
dec
idivl
mov
cltd
jne
lahf
out
call
jno
leave
jmp
in
ret
cltd
mov
jno
ucomiss
test
and
mov
jo
sbb
cwtl
rclb
je
test
out
repz
lods
test
in
sbb
and
gs
cmpsb
js
cmp
inc
mov
pop
ljmp
push
jp
les
popf
ret
pop
and
inc
fsubl
call
lods
mov
pop
jle
enter
inc
pop
jae
daa
fwait
mov
or
xor
gs
cli
popf
scas
fcomip
sarl
cld
and
jecxz
bnd
out
movsl
ficoms
test
push
jbe
add
cmp
add
dec
ss
mov
and
pop
xor
push
ss
outsb
inc
test
inc
mov
leave
mov
cs
cmp
incb
mov
gs
adc
pop
adc
and
xchg
mov
and
xor
cmp
xor
mov
mov
aas
and
add
test
xchg
xchg
loop
movsb
stos
stc
mov
mov
in
cmp
inc
das
mov
mov
or
xor
sahf
xor
mov
jg
lea
mov
dec
mov
push
outsl
mov
xchg
or
pop
or
mov
cmpsl
push
addr16
xchg
jecxz
jo
test
xlat
mov
lcall
inc
insl
fs
das
les
mov
or
insl
sarl
adc
repnz
movsb
icebp
dec
mov
mov
and
push
mov
lcall
js
fcomps
popl
fidivl
ret
mov
jecxz
ret
xchg
pushf
mov
daa
dec
push
cmp
shlb
sbb
test
mov
notb
ror
popf
fbstp
push
push
mov
cmp
shll
jg
lods
xor
std
mov
cmpsl
aam
lea
fcoml
or
loopne
daa
sub
das
movsb
xor
xchg
mov
and
sbb
mov
or
inc
ja
add
scas
and
shrl
push
dec
xchg
mov
push
aaa
or
and
sub
iret
push
adc
in
sahf
out
sub
dec
and
push
cld
cltd
repnz
sbb
aam
inc
sti
jp
ret
mov
pop
pop
mov
mov
sub
stc
arpl
sti
and
je
xchg
mov
dec
or
mov
mov
pop
cmp
mov
pop
rcrb
out
jns
jg
jo
mov
outsl
xor
hlt
gs
mov
inc
pop
sbb
in
loop
jecxz
mov
mov
jge
insb
adc
mov
lods
aas
pop
push
add
push
lea
outsb
mov
add
movntq
inc
scas
iret
push
lret
cli
das
mov
cmp
std
in
jne
jl
sub
mov
adc
loope
fsubs
sbb
and
mov
call
lahf
es
stos
scas
outsb
int3
and
sti
pop
xor
lret
cld
mov
lds
mov
repnz
mov
jb
xchg
div
in
loop
mov
sub
push
add
das
xlat
dec
ss
mov
xor
adc
mov
mov
cmp
xsaveopt
lahf
outsb
lret
lcall
adc
xchg
push
cmc
ja
inc
cs
sbb
sub
xchg
adc
sbb
sub
jle
sbb
sbb
cmpb
bound
fidivrl
lret
sbb
je
es
mov
lods
inc
push
idivl
adc
pop
push
pop
jge
dec
pop
xor
cld
mov
lds
sbb
std
cmp
ror
imul
fstl
lahf
jmp
sbb
divl
es
adcb
rcl
push
ficoml
xor
pop
or
push
jecxz
mov
sbb
push
mov
xorl
negb
popf
inc
push
ss
jae
addr16
aad
cltd
jle
sbb
dec
cmpsb
push
movsb
lcall
push
mov
adc
or
loop
nop
lret
push
add
jp
sti
sbb
bnd
inc
jns
jle
loopne
leave
test
mov
hlt
sub
insl
ja
mov
sub
xchg
push
sbb
outsl
in
and
push
and
inc
cmp
out
dec
mov
cmp
sub
mov
inc
jle,pn
je
and
adc
shll
in
or
mov
jg
sbb
or
cmpsb
packuswb
and
in
cwtl
or
jg
sbb
mov
inc
mov
dec
cmp
je
psubd
mov
lret
push
icebp
in
or
dec
push
mov
aad
sahf
aaa
xchg
sti
mov
dec
mov
cmp
add
xor
add
test
repnz
adc
mov
mov
cmpsl
ss
shl
es
out
xchg
push
jg
and
mov
inc
insb
jp
pop
push
xor
mov
nop
fnsave
jnp
hlt
mov
xlat
loop
cmpsb
les
jg
adc
mov
mov
push
push
push
xor
xchg
push
scas
inc
test
fisubrs
ds
and
cmp
inc
out
adc
or
mov
sub
stc
stos
add
xor
lahf
xor
jp
inc
int
jp
cmp
mov
pop
pop
add
out
xor
add
sbb
jmp
jl
leave
nop
push
test
lods
inc
int
xlat
jns
cmpsl
fnop
dec
cmpsl
hlt
loop
nop
pop
xchg
cmp
aas
movsb
hlt
popf
cmpsb
lds
outsb
pop
push
push
shll
dec
pop
lods
mov
mov
inc
daa
sbb
clc
insl
movsl
sbb
popf
mov
lea
lea
jmp
notb
mov
iret
cmp
fsubl
xchg
mov
cli
aam
imul
fistpll
push
jb
or
icebp
jp
inc
push
sti
ficoms
or
inc
ljmp
sbb
lods
notl
fstpl
iret
fwait
aam
or
in
sahf
pop
ljmp
xor
add
rcrl
add
cmc
daa
push
mov
adc
add
fildll
arpl
add
out
rcrb
test
mov
sahf
lds
dec
popf
daa
pop
fcmovne
in
js
sbb
xchg
sbb
mov
fimull
cmp
mov
or
int
daa
jb
insl
pinsrw
jle
mov
loopne
ficompl
jmp
jns
leave
push
scas
std
mov
test
hlt
pop
enter
jle
and
sub
test
jb
lods
inc
fadds
cmp
dec
dec
mov
adc
adc
out
je
sbb
jle
test
dec
adc
imull
add
jb
inc
mov
pop
lret
bound
rcrb
push
jmp
pop
adc
test
aam
mov
xor
dec
cmp
cwtl
fstpt
stos
bound
call
call
add
mov
and
and
fistl
dec
adc
lods
lret
jmp
shl
mov
negl
inc
rol
loopne
andl
pop
gs
gs
mov
or
sahf
mov
ss
xchg
xchg
pushf
sbbl
test
pop
inc
sub
inc
std
inc
dec
sub
push
cmc
and
or
push
in
insl
mov
in
test
cmpsl
in
pop
pop
sbb
mov
rcrl
das
cmp
jmp
cmp
out
aad
in
jno
jnp
pop
push
lods
mov
call
dec
add
push
pusha
stc
jne
pushf
jae
mov
mov
and
pop
ja
push
leave
int3
or
into
dec
fists
imul
mov
push
sbb
mov
sarb
jp
mov
xor
xrelease
mov
jl
add
out
pop
adc
test
inc
outsb
in
loopne
pop
mov
es
outsl
push
loope
into
sbb
jo
sub
scas
popf
or
push
jle
fistpll
xchg
add
push
cmc
int
inc
or
jmp
pusha
xchg
cmp
out
js
and
fwait
rcrl
pop
mov
sub
mov
fimuls
push
shlb
inc
std
ja
sbb
pushf
iret
add
iret
das
jl
or
jo
adc
or
fistpl
lret
lahf
mov
xor
push
js
xchg
or
movsl
rol
cmp
sti
das
pop
loop
loopne
out
sahf
cwtl
xor
pandn
and
jle
frstpm(287
xchg
push
leave
mov
jbe
out
inc
push
adc
and
rorb
jmp
push
popf
fsub
xor
xor
mov
push
aad
dec
mov
fdivr
in
sub
pop
pop
mov
mov
add
cld
pop
je
fdivl
fistpl
or
xchg
fidivrl
push
and
cmc
sub
lods
ret
jp
in
mov
mov
stos
jmp
push
loope
sbb
jg
sub
adc
push
jecxz
inc
xor
xchg
add
call
add
mov
int3
rcll
test
mov
adc
inc
loope
popa
fs
mov
out
push
xlat
lret
jmp
mov
scas
pushf
scas
sbb
xor
loope
and
ds
pop
ficompl
imul
lock
jmp
inc
jg
and
push
jbe
dec
testb
mov
lock
jbe
xor
lock
fwait
and
jns
cs
pop
inc
mov
mov
scas
sbb
mov
mov
je
sub
in
scas
cmp
jecxz
movsb
push
inc
sub
lret
sbb
xor
mov
mov
das
mov
pop
imul
andb
stos
add
push
cmp
adc
sub
cltd
je
xor
int3
cmp
mov
and
and
pop
aad
dec
je
xor
stc
adc
or
sub
out
pop
push
imul
xchg
push
movsl
inc
or
movsl
dec
cltd
or
mov
jbe
inc
jb
dec
xchg
inc
repnz
out
sbb
xchg
out
movsb
inc
sbb
int3
and
add
cmpsl
mov
xlat
scas
outsl
add
ljmp
xor
gs
test
in
test
movsb
cmpsl
aad
push
data16
mov
in
push
jo
outsb
or
fbld
mov
cmp
addr16
push
arpl
and
mov
sub
cltd
sbb
push
or
mov
sbb
mov
repz
stos
outsb
pop
cmc
pop
adc
rorb
outsl
dec
test
cwtl
inc
je
popf
int
cmp
insl
add
enter
addr16
enter
mov
cli
adc
out
jns
test
rcrl
xchg
loope
adc
rcrl
mov
fstl
push
dec
sub
xchg
cmp
inc
jno
adc
dec
in
test
adc
and
test
lret
mov
push
test
adc
mov
repz
pushf
mov
push
jno
js
dec
ss
dec
pop
mov
mov
mov
data16
push
stc
lahf
jecxz
es
and
adc
pop
in
pop
mov
ret
xchg
cwtl
jns
das
pop
mov
ret
sub
lret
and
inc
xchg
dec
fistps
ss
gs
out
sbb
test
imul
jge
mov
in
adcl
sub
dec
xchg
sarb
add
in
xor
mov
in
jle
or
mov
jns
push
sbb
push
outsb
cs
notw
and
inc
das
jnp
and
pop
fbstp
push
jne
pushf
in
lret
sbb
in
and
dec
dec
es
fdivrp
and
sbb
xchg
mov
and
push
xchg
inc
clc
bound
jmp
int
mov
add
pop
stc
insl
push
lock
lcall
fstl
push
push
sarl
mov
dec
and
dec
xchg
rcrl
data16
cmp
jl
hlt
cmc
shll
jnp
imul
mov
jo
mov
lret
adcb
dec
hlt
push
cmp
mov
jle
testl
inc
mov
and
test
sub
sarb
out
add
inc
pop
inc
jne
xor
pop
jp
rep
and
add
mov
mov
ss
ret
das
popf
shll
gs
jno
dec
adc
cmp
not
push
push
sbb
das
mov
hlt
fmulp
pop
adc
xchg
es
mov
push
sub
mov
ss
pop
inc
lahf
fwait
mov
fmull
leave
push
pop
daa
inc
or
out
xchg
mov
inc
xlat
mov
insb
ja
lock
lea
divb
xor
pusha
imulb
sub
lods
pop
cmpsb
xchg
int3
cld
push
lds
xchg
rorb
or
and
push
rorl
add
ss
fldt
out
push
ret
std
push
lods
xor
sahf
jbe
xchg
sar
pop
push
and
pop
xor
imul
dec
push
lcall
or
push
ret
mov
sbb
pusha
xorl
repnz
addr16
pop
in
sbb
push
imul
stc
add
pop
inc
add
mov
in
or
sarl
fdivr
imul
sbb
test
sbb
mov
lret
jns
and
jne
xor
inc
inc
pop
mov
outsl
jno
sub
mov
pop
mov
aad
jae
jbe
push
in
or
aas
gs
aas
mov
cmc
sub
mov
and
subb
mov
cwtl
js
or
insb
lret
das
push
shll
push
pop
xchg
stos
dec
mov
lret
mov
push
ficompl
rorl
je
shlb
jge
push
nop
iret
fcomps
jl
aaa
pop
icebp
xlat
leave
xchg
out
add
mov
sbb
fsts
pop
gs
popa
mov
mov
dec
in
loope
dec
cmpsl
cmp
punpcklbw
dec
sub
xchg
xorl
inc
push
push
ja
fmul
aaa
loope
or
cmp
test
sbb
mov
les
mov
sub
lods
jp
cli
dec
jmp
cld
movsl
testl
fwait
rorb
mov
dec
adc
jo
mov
push
push
insb
ret
mov
int
adc
cmpsb
nop
pop
inc
jnp
push
or
rorl
divb
push
scas
xchg
mov
sub
dec
cmp
adc
fwait
movb
test
xchg
stos
pop
loopne
mov
ljmp
add
add
ret
ficomps
lret
lret
test
xchg
or
inc
sub
stos
mov
shr
das
mov
xchg
fcmovb
std
lds
sti
stos
mov
pop
cmp
rorb
and
fdivrp
jg
rorl
in
out
stc
mov
or
ljmp
pop
ret
lock
lds
fsts
stos
dec
into
sti
cmp
cld
int
and
pop
in
fcompl
jo
mov
add
or
into
adc
push
cltd
push
into
fs
push
insl
outsb
xor
xor
js
xchg
or
mov
or
pop
ret
xchg
iret
cltd
cmc
rclb
push
cmc
cmp
dec
adc
dec
xchg
fdivrl
lahf
cmp
adc
movsb
pop
dec
xor
rcrb
test
test
xchg
push
sahf
repz
push
sbb
push
sub
inc
adc
and
xor
test
scas
mov
mov
out
xor
das
pop
cs
mov
inc
mov
xor
xchg
pop
pop
pop
mov
ss
les
mov
mov
xchg
call
and
sbb
dec
inc
xchg
mov
shlb
sub
mov
sti
sti
mov
fsubrs
outsb
test
add
jl
rcrb
jae
xchg
jge
mov
fwait
es
xor
loope
jmp
aam
pxor
adc
or
add
inc
add
rcr
sub
push
mov
lahf
rolb
arpl
pop
rorl
ja
outsl
stos
sbb
shll
dec
out
es
mov
xor
xchg
fstps
push
sbb
cmp
add
mov
sar
cmpsl
ret
rcll
push
mov
pop
test
jg
mov
mov
addr16
jo
cmp
adc
sub
dec
sbb
fldcw
and
or
nop
jge
loope
mov
in
sbb
dec
jb
imul
bound
push
jmp
mov
jo
dec
popf
cmpsb
jecxz
push
pop
jle
ret
test
add
test
leave
push
jge
orb
cwtl
lods
pop
pop
sub
fs
mov
pushl
call
jp
clc
or
xor
lods
push
jmp
rcl
jbe
sub
xchg
jbe
in
mov
cltd
add
push
dec
mov
jp
mov
popa
push
or
dec
push
mov
jae
pop
jnp
popa
int3
int
loop
adc
xchg
or
mov
hlt
jmp
pop
mov
push
mov
rcrb
add
mov
pusha
add
jg
cmp
inc
pushf
xor
popa
dec
lret
or
pop
call
sbb
das
arpl
sbb
std
ljmp
loope
add
popa
xlat
aaa
out
fsubrl
mov
add
pop
adc
jge
hlt
jecxz
hlt
fstl
scas
fists
mov
mov
idiv
fdivrs
jno
clc
push
fistps
sarl
cli
bound
call
pop
mov
xchg
cltd
mov
sti
and
inc
arpl
lds
stc
mov
pop
dec
and
mov
scas
push
push
loope
cli
xor
mull
sbb
shll
inc
test
mov
mov
notl
xor
jae
fmull
popa
push
frstor
xchg
jmp
ret
xor
mov
mov
aaa
sbb
fmul
ret
ret
pop
pop
mov
add
mov
sbb
mov
rclb
dec
xchg
sbb
mov
in
or
mov
lahf
filds
addr16
or
enter
movsl
out
xor
pop
into
mov
sahf
inc
inc
push
pop
jne
sub
cmpsb
call
stos
xor
les
rcrb
mov
or
pop
xchg
dec
repz
ss
test
mov
sbb
xchg
movb
push
push
inc
push
jae
arpl
adc
push
xor
jbe
xchg
xchg
repz
jecxz
xchg
movb
push
push
inc
push
jae
arpl
adc
push
xor
jbe
xchg
xchg
repz
jecxz
xchg
movb
push
push
inc
push
ja
arpl
adc
push
xor
jbe
xchg
xchg
lds
adc
out
imulb
arpl
into
mov
imul
dec
pop
pop
dec
and
cmp
jmp
sti
call
stos
mov
fwait
mov
jnp
dec
pop
pop
dec
sub
cmp
or
sbb
jmp
sti
mov
mov
fwait
mov
jnp
dec
pop
pop
dec
sub
cmp
or
sbb
jmp
sti
call
ret
std
fadd
mov
js
aaa
cmp
sub
imul
lret
add
or
and
add
stos
and
nop
fisttpl
cs
call
add
in
dec
sbb
fstps
push
int
inc
mov
fsts
scas
shll
pop
cmc
in
add
mov
or
pop
add
insl
jp
cmp
cmp
sub
xchg
jae
jmp
jmp
inc
daa
std
cwtl
push
rcl
push
mov
add
and
arpl
or
pop
mov
es
push
imul
xchg
out
inc
xchg
or
mov
movsl
hlt
insl
nop
call
xor
sahf
leave
xchg
lods
mov
mov
pop
pop
dec
sub
cmp
or
sbb
jmp
sti
call
stos
mov
fwait
loope
pop
adc
xor
and
jb
outsb
push
pop
pop
stos
popf
lcall
fcmovne
lcall
sbb
cmp
push
dec
or
or
mov
out
ret
stc
std
fadds
xor
cmp
xor
sub
cmp
or
sbb
jmp
sti
call
stos
mov
fwait
mov
jnp
dec
pop
pop
dec
sub
cmp
or
sbb
jmp
sti
call
stos
mov
fwait
mov
fisubs
lock
mov
add
sbbb
mov
inc
mov
dec
out
add
out
xchg
nop
push
les
and
rcrl
call
inc
ja
les
ret
cmp
jae
mov
in
inc
addr16
or
lret
push
push
add
loop
xchg
jmp
pop
mov
test
rcr
daa
fsts
leave
pop
pop
adc
outsb
adc
pop
stos
cmpsl
daa
shl
jmp
mov
xchg
add
loop
push
push
or
pop
cli
test
addr16
sarb
in
push
mov
dec
ret
jge
lds
test
fcomi
adc
jp
shl
je
cmp
lock
push
scas
xchg
dec
sbb
pop
cmp
sub
push
daa
mov
dec
push
dec
or
stos
push
xlat
test
imul
push
jb
push
fs
add
mov
sub
imulb
leave
xchg
ret
sbb
fidivrl
pop
test
mov
dec
repnz
sub
add
adc
rclb
or
adc
push
nop
add
mov
scas
and
mov
cmp
pop
cli
sub
add
cmp
inc
rcll
mov
pushf
mov
mov
jl
ficompl
jns
mov
add
movsb
daa
mov
jle
mov
ljmp
outsl
inc
push
cltd
mov
add
clc
push
fmuls
out
shrb
mov
sub
ss
ss
out
adc
int3
xor
add
jp
push
test
inc
add
mov
pop
xor
test
mov
add
pushf
add
pop
adc
test
not
xlat
rolb
icebp
inc
cmp
repz
js
jnp
jnp
pop
shl
in
imul
jno
loopne
sti
andb
cmpsl
mov
xchg
pusha
sub
das
xor
sub
cmc
js
loop
dec
mov
add
jp
test
add
fbld
mov
in
inc
inc
dec
mov
push
pop
pop
sbb
cmp
fldl
xchg
push
inc
cli
sbb
xchg
pushf
or
loop
ret
in
bnd
leave
out
pop
sbb
jbe
or
sti
popf
cli
jbe
push
daa
daa
loope
test
mov
inc
cld
js
inc
lea
inc
xchg
sbb
nop
or
xchg
out
add
xor
frstor
mov
pop
iret
pop
xchg
dec
loope
ds
lods
stos
sub
pop
xorl
xchg
leave
sarl
sbb
jae
lea
lret
lcall
aas
xor
js
call
stc
outsb
jmp
mov
aam
adc
or
stc
jg
push
jle
or
inc
mov
pop
aad
filds
dec
pop
mov
inc
rolb
jecxz
jns
cmp
cmpsb
std
std
iret
mov
or
lcallw
push
cs
jns
cmp
icebp
andl
or
jne
rcrl
mov
sahf
orb
pop
push
sub
sbb
jmp
push
or
pop
inc
aas
cltd
dec
add
outsl
int3
pushf
cs
repz
es
push
in
sub
pop
adc
push
out
lahf
popa
pop
inc
out
enter
jo
test
lea
into
arpl
test
ja
cmp
adc
std
aas
push
cmp
mov
cwtl
and
rorl
mov
mov
out
jmp
mov
out
ss
jb
jnp
ror
xchg
adc
stc
mov
setp
inc
push
mov
loopne
add
sbb
ljmp
jge
rclb
insl
mov
loop
shlb
sub
push
xor
mov
lahf
jg
das
aam
mov
push
int
inc
or
pop
cmpsb
out
xor
pop
gs
sbb
adc
xor
and
ja
jne
mov
sbb
ret
dec
aad
or
inc
jge
mov
pushf
orl
inc
add
popf
test
add
aad
add
sbb
out
aad
xchg
or
cmpsb
inc
pop
or
shl
xor
pop
js
push
mov
fisttps
or
out
out
rclb
hlt
inc
in
mov
fld1
push
pusha
in
xchg
sbb
into
lds
lock
jo
xchg
and
insb
mov
jne
sti
aaa
out
adc
and
inc
dec
mov
xchg
jle
jecxz
lea
lahf
sub
dec
ficoms
rclb
jge
out
repz
notl
mov
xchg
dec
add
or
mov
fdivl
fnstcw
pop
aas
jo
loopne
pop
xchg
outsb
inc
and
pop
cmp
ljmp
mov
sub
pop
mov
orb
negb
test
out
add
pop
mov
add
dec
mov
out
cmc
and
xchg
sbb
gs
ljmp
dec
divb
sub
xchg
xchg
dec
xor
ret
sub
cs
outsl
test
sub
lods
or
rorl
mov
stos
out
scas
ds
es
lahf
mov
mov
pop
aas
leave
mov
sub
data16
popl
jne
sub
lds
jno
xlat
sbb
mov
sub
and
movsl
mov
jno
stos
pop
adc
aas
std
shrl
lcall
call
and
ljmp
add
and
aad
repnz
sbb
dec
arpl
adc
ret
in
xchg
fsubs
leave
das
mov
pusha
scas
xchg
aam
leave
sar
out
sbb
dec
mov
sub
mov
push
jbe
imul
jno
arpl
daa
addr16
icebp
inc
mov
mov
fwait
sti
daa
adcl
pop
and
mov
shl
aad
xchg
popf
outsb
fildll
das
loopne
cli
imul
mov
sahf
pop
mov
mov
shr
ljmp
lret
pop
sub
mov
cmp
adc
push
divb
sub
jp
ret
xor
jne
mov
add
jecxz
pop
dec
xor
sbb
jl
pop
add
loop
jae
push
cs
xchg
xorb
clc
jp
sbb
jp
arpl
in
fcomip
call
fidivs
icebp
lret
xchg
mov
mov
in
dec
add
mov
sbb
out
repnz
jg
rorl
icebp
xchg
ljmp
testl
adcb
sbb
inc
jbe
sbb
xor
cmpsb
cmpsb
mov
outsl
ret
out
xchg
lods
out
inc
mov
jno
cmp
mov
dec
setbe
mov
std
cwtl
xchg
xchg
rorl
jae
inc
jae
mov
xor
and
mov
or
and
or
rcll
mov
pusha
push
inc
cmp
fsubr
pop
mov
in
xchg
push
lods
or
xor
sbb
cmc
jmp
and
dec
and
dec
push
out
push
jnp
xchg
add
daa
mov
fwait
adc
mov
aas
lret
sti
xchg
test
mov
jg
ljmp
jg
js
ds
mov
test
adc
in
xchg
fistpll
xor
clc
out
pop
jno
jb
shlb
dec
jge
nop
je
test
pop
scas
jb
lahf
iret
ss
das
inc
adc
push
lock
sbb
mov
mov
pusha
aad
push
xchg
push
xor
test
popf
scas
dec
push
js
lret
mov
faddl
or
jmp
push
out
gs
dec
out
cli
lret
jno
gs
mov
addr16
or
fidivs
xchg
adc
lods
cmp
subb
fildll
inc
adcl
nop
adcl
lock
jne
mov
roll
cmp
mov
pop
lfence
cmp
xchg
pushf
xor
mov
fcmovu
sbb
frstor
xchg
jge
push
imul
data16
xchg
dec
inc
lods
or
pop
sbb
jmp
push
sub
stc
xor
adc
dec
sbb
pop
dec
clc
cmp
sbb
sub
lret
rcr
inc
xchg
and
add
cmc
cmp
xor
retw
or
or
inc
lahf
rcrl
cwtl
cmp
stos
stos
lods
xor
or
ljmp
test
je
add
add
push
insb
roll
aam
in
mov
shrb
test
push
xorl
xchg
mov
inc
push
add
and
cltd
cs
outsl
scas
and
shl
inc
xchg
cld
jecxz
mov
xor
call
mov
and
mov
inc
and
mov
xchg
adc
mov
mov
out
lods
sub
test
inc
into
shrl
sbb
fildll
pop
jo
mov
cmp
push
mov
xor
pusha
pop
pop
xchg
pusha
fbstp
enter
addr16
xor
pop
xchg
fwait
cli
pop
pushf
int
jo
int
xchg
sbbl
push
out
test
cmp
mov
pop
leave
cli
lods
aas
cs
fimuls
nop
sub
orb
jne
ljmp
xchg
inc
test
xor
popa
and
das
cmp
insb
jb
in
push
dec
pop
sbb
cmpsb
mov
out
jl,pn
adc
inc
dec
pop
loopne
mov
aas
mov
jae
int
lods
adc
addr16
dec
shll
jb
jno
nop
outsb
sub
pusha
cmpsb
cmp
jnp
push
ror
ret
pop
inc
scas
push
push
lret
adc
repz
cs
in
nop
xorl
dec
jno
ljmp
das
out
xchg
dec
or
out
fs
rcr
xchg
jno
andl
push
hlt
jp
flds
cmp
xchg
sbb
test
dec
adc
add
push
dec
jmp
xor
push
jo
outsl
sbb
inc
cmpl
aad
jle
lea
inc
dec
xchg
and
out
shrb
cmp
dec
mov
or
push
and
test
stc
clc
mov
cmpsl
mov
nop
adc
shrb
mov
loop
sbb
cmp
inc
int
lahf
movsl
or
int
inc
inc
and
cmp
out
ljmp
pushf
push
jb
nop
cwtl
inc
xchg
aaa
rcrl
pushf
sub
pushf
xchg
pop
aaa
sub
cld
add
outsl
in
enter
inc
fisubl
push
fs
dec
iret
xchg
sub
xchg
and
pop
xor
adc
out
cli
in
jno
fcmovnu
jmp
push
jmp
mov
stos
add
int
cltd
mov
xor
push
inc
mov
cs
push
jbe
loope
sub
test
pop
pop
dec
lea
enter
lret
dec
push
cmp
dec
xchg
ret
in
jmp
in
enter
push
cmp
icebp
pop
test
out
imul
pop
pop
ss
adc
in
push
lods
dec
es
pop
negl
adc
jp
data16
std
xchg
adc
orl
rcll
push
pop
cltd
aam
push
jae
stc
mov
mov
cwtl
add
mov
pop
push
jg
les
sbb
into
mov
aas
cs
sub
mov
iret
mov
std
lret
cltd
out
xchg
out
jmp
or
jmp
shlb
fcoml
pop
es
push
in
mov
dec
and
or
arpl
push
push
jbe
sbb
push
idivl
out
push
inc
cmpsl
xor
cmp
and
pop
xchg
jbe
in
insb
out
aas
add
xor
jb
jne
dec
pop
xchg
mov
push
xor
or
stc
push
push
jnp
xor
cmpl
pop
mov
mov
test
into
xchg
push
data16
sbb
nop
ljmp
fxch
js
aas
push
pop
lock
mov
insl
mov
jle
sub
xchg
outsb
jecxz
loopne
movsb
ljmp
or
pop
leave
loopne
mov
jl
test
inc
pop
or
jno
in
aas
jmp
jl
or
icebp
jp
dec
movsl
jmp
inc
xchg
movsl
aaa
sarb
fwait
popf
jno
imul
or
dec
lods
push
stos
int
rclb
inc
cld
daa
jb
imulb
loope
jno
popf
popa
jl
insl
xor
push
nop
shll
adc
sbb
in
xchg
cwtl
xor
fists
sub
mov
hlt
das
andb
divps
cmc
pop
sub
push
sbb
xchg
mov
push
and
inc
nop
dec
addb
pop
pop
add
outsl
iret
inc
es
imul
jnp
mov
xor
xchg
sbbb
mov
cmp
ret
cmp
lret
aad
mov
mov
and
sbb
push
sbb
pop
pop
popf
jge
push
sti
add
ds
repnz
mov
inc
or
jle
mov
mov
cmp
jns
cwtl
jo
mov
pop
cwtl
imul
xchg
mov
pop
pushf
jecxz
xchg
and
nop
push
ljmp
fisubs
push
stc
xor
jb
cs
andl
aaa
aam
pop
push
icebp
gs
ss
loopne
adc
lret
out
mov
cmpsl
sbb
adc
dec
loopne
adc
push
or
xlat
push
mov
jmp
jns
cmp
jle
leave
add
sub
hlt
out
mov
jp,pt
pusha
xor
or
or
mov
cmp
inc
mov
sbb
outsb
test
inc
push
lret
xorb
mov
sbb
jb
aas
inc
fwait
dec
lahf
push
lahf
enter
out
jns
imul
cld
rcl
in
cmp
add
and
popf
sbb
out
xchg
leave
popf
pop
sub
shlb
inc
out
adc
dec
rcrb
in
icebp
pop
mov
je
cmpsl
xor
xor
or
push
dec
xchg
mov
mov
lahf
shr
xor
push
cmp
mov
and
popa
pop
cmp
cmp
fldcw
push
test
mov
push
out
dec
outsb
inc
dec
sbb
xchg
gs
loopne
inc
pop
mov
je
pusha
adc
sbb
or
jae
imul
xorb
daa
sahf
mov
test
xchg
sub
syscall
sub
mov
bound
sbb
add
aaa
push
xchg
dec
jl
and
hlt
xchg
and
inc
and
pop
xor
xchg
shll
ljmp
sub
or
movl
js
fldenv
dec
in
test
pop
add
pop
pop
cmpsb
call
dec
loope
adc
jb
adc
add
jae
push
cld
pushf
add
loopne
in
inc
add
ret
insb
xchg
mov
mov
out
shrl
jle
repz
xchg
inc
mov
pushf
ret
ret
test
mov
jle
xchg
out
xchg
filds
stc
add
push
or
push
jo
mov
lea
push
dec
xchg
mov
adc
mov
push
js
mov
dec
xor
xchg
stc
lea
xchg
pop
inc
cwtl
push
out
jmp
dec
ret
or
mov
loop
movsb
sub
sub
outsb
divl
idiv
push
mov
push
sub
inc
arpl
mov
jno
xor
xor
scas
sub
icebp
fdivs
adc
sbb
sub
jbe
mov
pop
add
mov
and
mov
inc
out
sbb
sbb
adc
jnp
lock
outsl
sub
stc
cmc
test
bound
clc
das
jg
xorb
sub
shrd
scas
iret
outsl
pop
and
inc
sub
gs
xor
mov
scas
test
adc
inc
sub
and
jnp
mov
lock
jae
addr16
sbbb
pop
adc
mov
mov
ljmp
rcrl
sub
jnp
dec
adc
sbb
pop
mov
pop
mov
sub
sub
bswap
repz
je
popf
inc
mov
fwait
hlt
data16
sub
sarl
dec
pop
imul
cmpsb
sarl
inc
add
jg
mov
daa
enter
repnz
xor
js
movsb
arpl
cmp
dec
jbe
cmp
in
cld
sub
sub
mov
cmp
das
mov
push
aad
or
or
daa
xchg
mov
not
cmp
lret
xchg
xor
daa
fndisi(8087
cld
pop
mov
jae
psubsb
mov
xor
arpl
mov
cld
into
lea
add
push
inc
cld
cld
jb
xor
mov
mov
icebp
clc
mov
nop
shlb
pop
imul
movsb
or
mov
push
mov
mov
dec
out
jb
test
es
loopne
pushf
cmp
or
adc
cmp
sub
pop
sub
jmp
jmp
nopl
das
sbb
repnz
mov
adc
push
addr16
fnsave
add
out
push
std
int
movsl
arpl
mov
cmpsl
movsl
mov
mov
das
xor
xlat
enter
adc
sbb
ss
adc
inc
arpl
test
cmc
pop
and
push
xchg
pop
sti
daa
cwtl
sbb
orl
mov
stc
or
gs
nop
or
push
cmp
mov
int3
gs
push
adc
fbld
or
out
jnp
sub
jge
std
enter
mov
outsb
jmp
aam
repz
dec
add
xchg
mov
pop
pop
xchg
notb
shl
cwtl
pop
cmp
bound
push
mov
ja
sub
cmpb
cmp
sub
adc
cmp
bound
add
push
mov
xchg
cwtl
in
in
mov
hlt
pushf
js
aad
jecxz
jmp
pusha
cmp
jp
insb
mov
mov
push
mov
pop
in
pop
cmp
out
sbbb
popf
mov
lret
lea
jg
out
rcll
stc
call
add
jne
and
sub
ret
shrl
das
dec
push
sbb
popa
scas
enter
es
mov
adc
mov
or
fwait
loopne
stos
jle
rcrl
fs
mov
test
in
xchg
pop
push
out
aas
xor
notl
iret
xchg
or
addr16
sbb
inc
xchg
mov
ljmp
xchg
test
daa
andl
sub
insl
xchg
arpl
aad
movsb
repnz
nop
aam
xchg
jne
in
push
nop
lret
enter
sbb
cmp
mov
mov
sbb
jl
adc
push
lods
jne
out
pop
xchg
fmull
cmp
xor
hlt
ds
sub
pop
sbb
fbld
ret
ficompl
jbe
and
rclb
and
fldt
fwait
push
in
mov
stos
dec
mov
mov
cmp
and
rorb
mov
inc
mov
sbb
push
je
xchg
sbb
sbb
je
sbb
jecxz
push
movsl
sub
inc
mov
outsl
fcomps
add
or
jae
clc
pusha
hlt
iret
and
repz
lahf
mov
decb
mov
pop
or
repnz
or
push
adc
fptan
cmp
orb
hlt
pop
xchg
mov
movb
addr16
push
push
xchg
xor
push
jbe
fsubs
movl
lock
mov
popf
push
out
fsubs
ja
xor
pop
inc
jo
cmc
test
and
push
mov
pop
mov
xchg
mov
cs
lds
inc
xchg
and
out
add
inc
in
cmpsb
jg
lock
or
mov
pop
dec
sub
jno
ja
and
in
decb
push
mov
mov
pop
mov
jns
clc
or
repnz
sbb
lods
cmp
push
jecxz
sub
or
sub
mov
jge
imul
shl
push
and
jnp
mov
imul
dec
pop
cmp
jmp
leave
outsl
adc
lahf
imul
sbb
mov
mov
repnz
das
pop
in
inc
push
mov
jns
scas
mov
out
sub
sbb
cmpsb
stos
popf
push
lods
sbb
xchg
orps
mov
pop
imul
shrl
mov
sbb
out
push
ljmp
inc
pop
sbb
notb
popf
xchg
es
sub
in
add
xor
mov
movsl
shrl
xchg
mov
lcall
cltd
adc
iret
pop
jl
hlt
mov
or
dec
jecxz
cmc
mov
xchg
aam
inc
cmp
imul
dec
mov
sub
lret
add
insb
xor
arpl
rcrl
aas
andps
lds
pop
pop
dec
sub
cmp
or
sbb
jmp
sti
call
stos
mov
fwait
mov
jnp
dec
pop
pop
dec
sub
cmp
or
sbb
jmp
sti
call
stos
mov
fwait
mov
jnp
dec
fcomps
sub
cmp
jmp
sti
call
stos
mov
fwait
mov
jnp
dec
pop
pop
dec
sub
cmp
or
sbb
jmp
sti
inc
popa
fcomp
mov
je
fs
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
es
xor
insb
gs
pop
outsl
gs
sub
xchg
push
int3
test
xchg
in
in
cmc
mov
mov
xor
insb
gs
or
cmp
push
movsl
fdivl
in
movsl
lock
mov
mov
dec
xchg
jl
insb
jnp
adc
sub
fcoml
lea
rorb
add
popa
cmp
or
aas
xchg
mov
aaa
shl
leave
bswap
les
sbb
mov
xor
es
test
xor
jmp
test
std
fistpl
jo
add
adc
mov
data16
mov
mov
or
sbb
loopne
stc
cmp
push
push
shlb
imul
cmc
jb
mov
lods
fisubrl
cmp
xchg
std
test
push
fimuls
add
call
cmp
fldcw
sub
sbb
pusha
imul
pushf
cmpsb
ffreep
mov
arpl
adc
or
cmp
sub
fsubrl
int3
repz
movsl
in
lods
pushf
decl
pop
inc
or
or
xor
js
movsl
out
loopne
lock
xchg
fistps
loop
cmp
ja
je
or
adc
push
add
xchg
out
test
lcall
sbb
fs
inc
or
xor
inc
cmp
sub
fdivl
in
in
cmc
mov
mov
xor
insb
gs
or
cmp
sub
fdivl
in
in
cmc
mov
mov
xchg
and
xchg
aad
stos
push
imull
xor
mov
push
sbb
jae
xor
cltd
or
lock
test
xor
adc
fstpl
sahf
inc
sahf
out
pop
inc
outsb
cmp
into
divb
inc
jp
popf
jo
push
add
lahf
stos
xor
rcrl
and
int
mov
clc
mov
stos
fsubrs
jnp
out
outsb
loope
data16
jle
dec
jg
push
dec
mov
jae
popf
adc
into
out
xchg
mov
test
jle
fsin
mov
outsl
inc
fmull
sahf
and
mov
or
test
adc
xchg
aaa
mov
ds
mov
jle
aaa
dec
cmp
mov
dec
or
push
jl
xchg
push
fptan
idiv
push
mov
lret
xchg
xlat
jnp,pt
adc
xor
js
sub
push
ret
test
enter
cmpsb
pop
insl
stc
mov
mov
ja
fisubrl
repz
adc
in
cltd
jnp
lods
orl
scas
ss
das
dec
aam
call
mov
xchg
int
leave
jbe
lcall
shll
jo
movsb
out
dec
mov
aam
cld
or
pop
loopne
lcall
adc
mov
imul
lods
addr16
push
dec
xor
mov
sbb
adc
int
mov
inc
cld
sbb
lcall
arpl
mov
cmp
in
pop
and
imul
add
push
das
into
fcomps
mov
aad
daa
mov
in
jo
mov
or
adc
cs
sarl
sbb
mov
and
jbe
orb
fsub
das
psubsw
jb
sub
pop
in
js
sbb
roll
push
sbb
add
movsb
pop
or
out
std
mov
xor
loopne
or
jl
mov
mov
rolb
add
mov
test
inc
ret
xchg
inc
mov
jne
fwait
and
ss
in
and
push
fs
push
xor
ret
push
mov
outsb
and
cmp
roll
shl
js
out
push
fldl
es
mov
mov
pop
and
or
js
pop
sub
testl
mov
mov
imul
mov
cmp
jg
sbb
fisttps
leave
inc
xor
stos
sub
push
pusha
aam
sub
xchg
and
iret
push
inc
sti
dec
add
mov
loopne
stos
push
pop
stos
psraw
xlat
stos
jne
fldcw
repz
and
int
cld
ficoml
pop
jo
mov
mov
mov
cld
or
es
ffree
adc
adc
xchg
mov
lods
scas
popa
test
add
lahf
sbb
aas
pushf
sub
imul
and
in
es
andl
xor
lock
dec
mov
ja
popf
pop
xchg
adc
jno
lcall
loope
push
push
nop
and
jl
add
mov
pop
mov
dec
pushf
mov
stos
popf
push
in
aam
popa
mov
pop
xchg
mov
or
pop
outsb
fisubl
cmp
mov
add
ret
cmc
jg
mov
jmp
and
pop
and
pop
xor
push
insl
cs
enter
leave
mov
sti
sub
dec
sahf
popf
fsubrs
cmp
data16
or
push
mov
or
es
mov
popa
int3
leave
subb
cmp
cwtl
or
pop
xor
and
adc
subb
nop
cld
add
adc
inc
icebp
dec
pop
xchg
aaa
arpl
cwtl
adc
pop
jno
push
mov
cmp
inc
pop
decb
icebp
rol
inc
test
leave
js
xor
adc
sub
add
test
stos
aaa
mov
mov
inc
jp
xchg
mov
rolb
mov
mov
aas
sub
insb
xchg
cmc
inc
es
adc
fmull
out
push
dec
sahf
in
ret
inc
leave
lcall
outsb
inc
movsl
clc
clc
xor
mov
add
add
bnd
hlt
ret
outsl
mov
cmp
std
stc
cli
jbe
pop
fidivrl
sahf
nop
or
je
std
dec
ficompl
push
pop
or
into
lock
and
shl
sti
insb
jns
jp
pop
clc
stos
or
ljmp
and
pop
imul
sub
cld
mov
aas
sub
mov
imul
push
popa
mov
push
in
sbb
push
movsb
xchg
ss
aad
mov
push
adc
ret
or
pop
pop
andl
mov
push
cmp
xchg
call
arpl
fisubrs
ja
aas
mov
mov
repnz
fdivl
or
sbb
mov
sub
push
pusha
call
jno
mov
cmp
test
sarb
in
fcoml
aam
sbb
xlat
bound
bnd
push
jmp
push
shll
loop
adc
xchg
fst
addr16
sub
out
std
xchg
mov
or
add
add
pusha
std
push
jge
cmp
push
xchg
sti
js
mov
enter
std
cwtl
inc
and
xchg
inc
sub
fsubl
lret
jecxz
pop
dec
lcall
and
adc
lahf
sbb
sbb
push
lds
mov
push
pushf
mov
icebp
pop
adc
adc
dec
xchg
adc
and
jmp
mov
xchg
rcrl
jno
pop
sub
dec
stc
add
push
clc
cwtl
add
ljmp
push
divl
rcll
mov
psubsw
mov
cmp
pop
sbb
jae
inc
or
inc
xor
das
add
and
dec
fisubrs
lea
jg
dec
fistl
cmpsb
loopne
mov
inc
fisubs
mov
ret
das
jnp
or
mov
push
cmp
and
sbb
lret
jno
xchg
lret
cmp
mov
mov
cmp
adc
mov
adc
inc
xchg
adcl
movsl
fs
mov
add
nop
mov
sub
test
dec
subl
ret
inc
cmpsb
ljmp
int3
xor
arpl
jbe
xor
pushf
repnz
lret
push
mov
jae
pop
cmp
sbb
push
push
dec
popf
pop
or
add
jg
cmp
loopne
or
jl
pop
imul
cmpl
shrl
fists
sahf
dec
dec
popf
sarb
stos
jecxz
sbb
cmc
test
and
mov
repnz
dec
xchg
fisubl
insb
sbbl
jb
cmp
sub
pop
mov
pop
adcl
adc
icebp
in
add
push
dec
adc
in
cld
rorb
dec
pop
cmc
push
pushw
int
scas
xchg
push
sub
std
pop
jb
outsb
lret
adc
sub
sarb
sbbl
cmc
das
ss
mov
pop
dec
insl
push
cld
cltd
xchg
dec
clc
cmp
cmp
daa
test
inc
outsb
stos
loopne
pop
cmp
xor
aad
movsb
xchg
daa
mov
push
xchg
fldt
pop
xor
lea
ds
inc
mov
int
mov
leave
sbb
popf
inc
mov
sbb
in
fs
andl
inc
lret
or
pop
jno
pop
push
or
divb
les
iret
hlt
leave
repz
movsl
cmp
cmp
std
xchg
xchg
sub
aam
lahf
sti
out
mov
and
xor
js
push
cltd
push
xor
andb
add
cs
imul
lods
scas
adc
sub
xchg
jmp
fsubl
ss
popa
int
cld
imul
aad
in
cld
xor
lcall
adc
repnz
mov
inc
js
fists
mov
jmp
lret
adc
insb
out
es
leave
rcr
std
wrmsr
icebp
test
pop
out
jp
mov
outsb
and
addl
cli
popa
pop
ficoml
dec
mov
fs
xchg
je
es
cmpsl
sub
xlat
in
pop
push
or
imul
loopne
fstpt
pop
fstpt
xor
push
ljmp
test
fstl
or
inc
adc
ret
mov
andb
mov
sbb
push
pushf
lret
lods
push
sub
ficoml
push
mov
mov
push
test
sarl
xchg
inc
cmpsb
pop
clc
xchg
movsl
stos
lods
adcb
cmp
iret
xchg
outsl
pushf
lods
repz
or
add
es
js
shlb
or
fdivp
sbb
cmp
and
sub
xor
inc
push
shlb
mov
cmpsb
cmp
jp
out
pop
push
or
fwait
jno
mov
mov
stc
xor
test
shll
cltd
jnp
iret
in
loop
inc
test
adc
lock
jg
int3
stc
addr16
cmpsl
jno
ficompl
data16
stc
push
enter
notl
jbe
jmp
add
jge
int3
scas
mov
repnz
sbb
aad
mov
pop
pop
mov
jle,pn
fimuls
ds
or
mov
ss
pop
xchg
loopne
fcmovu
in
dec
in
insl
xlat
mov
sbb
add
xor
pusha
mov
cwtl
ja
pop
mov
imul
dec
pop
sbb
nop
fstl
mov
int3
jo
sub
fmull
addr16
pop
inc
int
cmp
adc
leave
cltd
test
int3
insb
adc
sbb
dec
inc
sbb
lcall
mov
push
xor
xchg
add
jns
inc
jl
sub
push
fisubl
int
mov
lods
stos
iret
shl
pop
call
xchg
orb
lea
lret
sar
lcall
out
loope
js
sti
xchg
stos
aam
cld
fldt
in
mov
add
xchg
imul
lock
jge
xchg
mov
pop
sub
mov
fcomps
clc
xor
cld
add
pop
sbb
test
cwtl
jo
xchg
orb
cs
pop
cmp
ss
add
div
cld
pcmpgtw
outsb
jle
jmp
loop
pop
out
pushf
dec
clc
idivl
or
aam
pop
je
scas
dec
push
lds
xchg
aam
mov
ds
imul
ret
gs
sbb
mov
or
clc
push
aaa
mov
fdivs
cmpsb
mov
adc
xchg
jg
push
pop
inc
push
cmp
mov
sbb
jmp
mov
xor
stos
inc
loop
sbb
mov
and
outsb
fistpll
and
dec
xor
pusha
lock
sub
movsb
daa
or
test
scas
mov
add
jb
sub
xlat
aad
fmuls
cmp
or
repz
pop
loope
xor
inc
add
lahf
out
rclb
enter
mov
xchg
jp
shrl
or
lock
subl
or
rorb
leave
or
rclb
lcall
xchg
test
sbb
fucomp
imul
xlat
push
jle
loope
push
rorl
and
jns
or
jnp
mov
xchg
fistl
xchg
mov
stc
daa
mov
sbb
gs
cmpsl
xor
loop
mulb
and
iret
xchg
adc
nop
loop
loopne
adc
shrl
ficoms
and
xchg
cld
gs
pop
daa
aam
ret
ds
nop
sahf
pushf
mov
xor
lret
add
aad
mov
mov
lods
mov
and
std
lcall
mov
and
icebp
ja
xlat
lods
pop
push
fsubs
or
clc
ret
xchg
sahf
xor
mov
lods
ret
cmpsl
jp
in
test
push
and
outsb
scas
sahf
movl
cli
jbe
pop
filds
xor
lods
mov
adc
mov
enter
mov
cwtl
in
and
xchg
push
sbb
xor
cltd
mov
lahf
push
fwait
xlat
sub
pop
sbb
mov
in
mov
cli
daa
rcrl
cmpsl
addr16
mov
xor
sbb
xchg
rorb
loope
inc
aas
rorl
aam
mov
mov
mov
fs
emms
push
xlat
test
xor
xchg
lret
jno
loope
or
pop
xchg
jae
loope
xor
into
lret
out
sti
in
push
jae
ss
mov
add
dec
push
push
inc
mov
adc
lret
ljmp
sbb
mov
push
iret
or
addr16
aam
jle
and
xchg
mov
test
mov
jno
cld
jne
sub
je
flds
out
cmc
in
jg
push
fwait
popa
in
mov
pop
add
cmp
jecxz
in
out
sbb
enter
push
pushw
xchg
jb
aam
test
lock
xlat
push
iret
adc
push
and
push
stos
aaa
pop
insb
jo,pn
lret
jnp
repnz
aad
cwtl
int
mov
pop
std
nop
insb
jg
sub
frstor
out
sbb
scas
das
hlt
dec
xchg
fs
fucom
mul
cwtl
js
pop
mov
stos
xor
adc
jae
icebp
jns
roll
mov
idivl
push
mov
call
mov
mov
push
in
lea
loopne
lcall
out
mov
lods
andb
and
sahf
adc
mov
aas
movsl
adc
jb
stc
hlt
ficoms
xchg
add
stc
add
sbb
dec
mov
mov
fimull
mov
cmp
fs
sbb
addr16
ffreep
mov
or
gs
pop
mov
push
push
mov
jp
adc
js
adc
hlt
add
jbe
add
shrl
in
insl
sbb
push
and
mov
pavgw
pop
mov
xchg
cwtl
inc
sbb
pop
mov
lods
ret
add
push
xchg
fwait
repnz
pop
xchg
inc
ret
pop
sub
testb
jns
pop
or
jnp
scas
pop
ficomps
mov
mov
mov
jmp
dec
jne
adc
fisttpll
and
out
js
mov
lea
sub
xor
mov
insb
jecxz
mov
mov
lea
in
push
icebp
cmpsb
and
repnz
jl
imul
sbb
mov
rcr
out
outsb
ret
push
pushw
or
loope
jb
test
sub
inc
pop
lds
cwtl
mov
xchg
popf
dec
arpl
add
lock
ds
ljmp
cltd
mov
cmp
pop
lea
scas
jl
jg
ret
daa
xor
jno
cmp
not
ret
fbstp
aaa
outsb
push
mov
addr16
or
xlat
ljmp
mov
mov
adc
fwait
xlat
adcl
add
xor
movsl
orb
icebp
mov
das
scas
cmc
sbb
stos
xor
dec
pop
adc
in
jle
mov
arpl
cltd
mov
jg
and
fwait
aad
rcrb
push
inc
insl
imul
dec
movsl
bsf
add
rcl
sbb
nop
jnp
sub
in
jle
cs
inc
aas
mov
loope
jmp
or
sub
dec
cmc
rorl
jbe
pop
push
add
xchg
sbb
scas
xchg
insl
enter
scas
inc
stc
mov
test
repz
ljmp
arpl
pop
fstps
icebp
movsl
loop
or
cmpsl
sbb
fsubr
mov
pusha
aas
dec
rcrl
jnp
sbb
scas
add
scas
sbb
iret
or
gs
push
mov
testb
inc
fisttps
push
in
test
pop
aaa
and
sub
js
inc
stos
push
sbb
jmp
fwait
and
lret
daa
ljmp
fisubl
or
or
cmp
push
add
jle
xlat
fdivs
mov
call
aad
xor
fs
adc
pop
repnz
aas
pop
sbb
jecxz
push
xor
stos
in
fcmovnb
ret
repnz
xor
or
adc
lahf
in
popf
cmp
lret
adc
les
sbb
mov
xchg
pop
rol
push
add
lods
cwtl
sub
loop
pop
add
pushf
adc
mov
out
push
insl
test
push
mov
das
int
or
test
bound
or
and
mov
inc
lods
lret
or
outsb
test
jp
fimuls
cmp
bound
mov
ds
outsb
jo
cmp
in
ret
lea
mov
loopne
ja
push
fs
jno
and
repz
xchg
and
jae
or
fsub
inc
and
inc
add
push
int
jb
jp
mov
jnp
pushf
dec
mov
lcall
and
and
xchg
dec
inc
dec
lcall
inc
adc
cmp
inc
jno
scas
pushf
xchg
sbb
js
and
sub
mov
xchg
mov
jno
xchg
mov
push
fwait
mov
jg
hlt
aas
fidivl
adc
enter
cmp
xorl
sub
loop
lcall
pushf
xor
arpl
lea
cmp
daa
scas
and
xchg
inc
or
or
dec
jnp
in
cwtl
xorl
test
mov
cmc
mov
call
jb
jmp
repnz
inc
loop
repnz
mov
xor
inc
out
icebp
inc
cwtl
mov
mov
hlt
ret
test
push
or
mov
xchg
push
add
mov
sub
mov
js
adc
fwait
xchg
ret
add
sbb
sahf
jnp
mov
test
outsl
cli
sbb
sbb
sbb
jmp
cmp
mov
xor
int
pop
cltd
test
in
lea
push
sarb
jg
mov
push
notb
add
js
mov
sbb
adc
lea
add
mov
xor
mov
cli
pop
aam
xchg
cmpsb
sbb
cld
int
stc
in
xchg
add
adc
jae
gs
and
mov
cmpl
fildll
mov
movsb
and
or
pop
fdivp
fdivr
movsb
dec
dec
pushf
fld
rcr
xchg
in
testb
ljmp
pushf
xchg
cmp
dec
mov
movsl
jnp
mov
aas
daa
test
movl
or
loopne
xor
gs
add
ror
aad
daa
fidivrs
ds
or
jmp
shrl
sub
push
shrb
add
cmc
scas
inc
mov
push
int
xor
push
push
pushf
inc
and
lret
sub
ret
mov
in
mov
and
inc
popf
sub
mov
addr16
or
adc
movsl
out
aad
outsl
daa
test
dec
push
addb
cltd
jecxz
loop
dec
jmp
movsl
sbb
inc
and
das
iret
into
loope,pn
dec
fsubs
lock
xor
stos
sbb
addb
push
mov
fwait
push
jbe
and
packuswb
jge
shl
das
add
call
std
push
lret
sbb
mov
aam
jne
pop
dec
pop
inc
xchg
add
push
mov
push
dec
pop
ljmp
cwtl
xchg
pop
outsl
xchg
out
out
insb
out
push
mov
pop
es
xchg
jge
repz
mov
leave
pop
sub
bound
push
daa
jl
sbb
arpl
cmpsl
lds
mov
pusha
shlb
fs
sbb
orl
repnz
lcall
mov
cs
popl
int3
sbb
mov
or
into
adc
int
xchg
jmpw
testl
or
enter
into
jno
test
loop
out
jecxz
imul
bound
mov
js
adc
mov
in
addr16
dec
addr16
or
or
nop
cmc
mov
nop
sbb
ljmp
cmp
iret
inc
mov
dec
xchg
cltd
cmp
out
in
xchg
cmc
subb
sbb
mov
xor
cmp
push
add
mov
loopne
cmp
or
push
adc
pop
pop
testb
cld
push
xchg
and
scas
add
mov
cmp
push
xchg
aas
mov
int
gs
mov
iret
arpl
mov
jnp
pop
xchg
push
mov
insl
cld
lods
jo
js
lods
cmp
pop
adc
sub
jnp
aam
std
imul
mov
orl
sahf
dec
cmc
xlat
xlat
jecxz
test
loop
icebp
cmpsb
xchg
pop
push
dec
dec
xor
adc
xor
sahf
dec
jb
subb
das
mov
cmpsl
add
sbb
jb
ss
inc
pop
and
mov
dec
inc
jl
insb
gs
or
cmp
sub
fdivl
in
in
cmc
mov
mov
xor
insb
gs
or
cmp
sub
fdivl
in
in
cmc
mov
mov
add
insb
cmc
sbb
or
cmp
sub
fdivl
in
in
in
lds
dec
pop
jl
insb
gs
or
cmp
sub
fmull
das
cld
xchg
fwait
xchg
adc
jae
inc
sub
sarl
mov
mov
cld
xchg
mov
je
push
xor
popa
push
add
jb
bound
lcall
icebp
rolb
loop
inc
dec
add
popa
and
jae
adc
bound
dec
fadds
enter
jmp
fidivrs
outsb
jb
sbb
jb
push
gs
lea
xchg
pop
dec
xchg
inc
loope
and
test
lcall
aad
mov
sub
fstps
dec
xchg
mov
leave
mov
popa
rorl
shr
leave
ret
mov
pop
or
in
push
inc
std
push
int
fmull
andl
cli
cs
push
mull
repz
xor
mov
fistpll
popf
and
inc
jg
dec
push
bound
mov
stos
mov
and
mov
jb
mov
andb
or
xor
mov
cli
cmp
sahf
and
aaa
and
mov
clc
into
icebp
rolb
pop
test
inc
nop
dec
ljmp
or
push
xor
shl
testb
loope
adc
cs
push
bound
adc
fs
push
dec
and
mov
mov
aad
subl
inc
xor
add
jae
jno
adc
inc
and
shll
xchg
mov
xchg
repnz
add
popa
and
add
jb
bound
xchg
roll
rolb
loop
adc
push
xor
jno
add
jb
bound
xchg
roll
data16
repz
or
scas
push
fdivs
es
lock
sbb
dec
daa
mov
jg
call
pop
fistpll
cmp
sar
push
mov
adc
or
xor
sub
and
daa
sub
mov
push
and
imul
dec
out
mov
stos
mov
aas
leave
aam
ja
pop
cs
test
scas
pop
cltd
loop
shrb
mov
or
jae
mov
loop
mull
call
or
adc
or
rcrl
dec
and
dec
imul
inc
aam
scas
mov
subps
and
dec
sbb
dec
mov
dec
jo
add
sbb
mov
xlat
adc
mov
out
int3
push
mov
je
insl
and
cmpsl
push
sub
fsubl
or
sub
outsb
addr16
in
push
pop
mov
lods
clc
mov
sahf
pop
sub
ret
ret
push
mov
sahf
pop
dec
pop
scas
xchg
cmp
pop
std
dec
xchg
int
das
in
les
xchg
mov
rclb
lods
loope
add
outsl
inc
jl
loopne
aaa
sub
push
add
jge
push
daa
xchg
jl
xor
inc
lcall
mov
sahf
pop
sbb
dec
xchg
adc
sbb
mov
dec
cmp
scas
xchg
cmpsb
adc
mov
hlt
dec
push
push
imul
xchg
int
aad
sub
mov
daa
stc
aad
cltd
mov
lret
scas
mov
xor
or
mov
and
cmp
cmp
xor
ss
dec
push
js
jge
rclb
jge
data16
add
mov
outsb
cld
xor
call
cwtl
and
test
lahf
xor
jmp
addr16
adc
sub
cwtl
lods
cmp
lcall
dec
pusha
mov
mov
xor
push
mov
cmp
mov
idivl
rorb
out
daa
jne
ja
ljmp
sub
rorb
pop
mov
test
test
int
dec
dec
push
xor
ljmp
xor
sahf
push
stos
cmp
jno
stc
int
jmp
adc
out
or
outsb
shr
dec
sub
mov
pop
pop
adc
lcall
daa
sti
sbb
mov
cltd
push
add
adc
fst
clc
mov
dec
or
and
testl
jge
or
jmp
sbb
out
lock
int
popa
ljmp
or
lods
enter
xor
cmp
int
scas
insl
lea
and
ljmp
iret
mov
push
lret
jo
jno
nop
push
pop
xchg
add
fs
pusha
in
pop
out
aaa
pop
enter
out
outsl
lods
vphaddudq
addl
mov
fs
jno
sub
or
movsl
mov
lods
or
fwait
pop
repnz
mov
inc
add
mov
les
adc
ljmp
mov
shl
cmpb
cli
jge
cmp
or
mov
rorl
int
mov
lods
inc
fwait
mull
mov
mov
imul
popf
and
iret
push
sti
test
stc
adc
mov
sahf
aas
jg
pop
test
test
loope
add
out
jle
push
lcall
sahf
std
jae
das
leave
subl
lahf
xlat
out
fidivrs
sub
jmp
xchg
js
or
dec
cmp
xchg
lea
shrl
outsl
repz
sbb
out
xlat
bound
mov
and
out
enter
jnp
and
shrl
hlt
adc
cwtl
int
push
sahf
aaa
fisubs
cltd
add
decl
gs
lgs
xor
dec
sbb
push
sar
in
add
adc
scas
push
xor
jl
fadds
pop
lods
lock
xlat
outsb
mov
sbb
push
les
lahf
repz
fs
xchg
std
das
aam
shl
add
mov
inc
dec
sbb
lret
inc
xchg
mov
xor
aam
mov
add
add
dec
aad
in
inc
out
xchg
bnd
shll
call
xchg
popa
int3
insl
repz
out
and
xchg
dec
dec
jmp
dec
js
sbb
xchg
scas
mulb
mov
jbe
add
dec
aas
xlat
mov
sbb
cmp
mov
cmp
imul
mov
pop
aam
imul
mov
movsl
call
in
repnz
dec
mov
adc
in
pop
jmp
test
mov
daa
es
inc
mov
adc
out
aaa
inc
outsl
inc
jbe
movsl
imul
dec
cmp
cli
ss
xor
dec
pop
in
rcll
and
into
dec
inc
cmp
jnp
je
cs
mov
pop
cmp
fs
dec
mov
mov
push
mov
jbe
xchg
jp
mov
add
shlb
pop
loope
cmp
dec
int3
add
subl
sbb
dec
push
sahf
in
push
lods
fs
scas
inc
lret
mov
notl
jg
xchg
xor
cmp
and
fisubrs
loop
inc
ss
and
cmpsl
mov
clc
dec
adc
cli
repz
inc
sbb
sti
and
insl
out
mov
dec
add
enter
cmpsb
xchg
lods
and
xchg
or
sbbb
cmp
xchg
popf
xor
andl
hlt
jg
cwtl
std
and
sti
arpl
inc
out
test
mov
push
cmp
cmpsb
cmpsb
sub
push
and
test
ds
fnsave
dec
or
or
xchg
sbb
inc
xchg
pop
enter
adc
mov
test
jg
or
pop
mov
mov
push
iret
sbb
xchg
enter
push
sbb
pop
mov
add
ljmp
mov
test
adc
sbb
add
mov
jno
sbb
xor
lahf
bound
cmp
sub
pop
jp
in
pop
in
iret
or
fidivs
pop
mov
xchg
ja
scas
mov
enter
mov
pop
inc
or
xchg
lods
mov
xchg
adc
dec
jg,pn
mov
daa
cmp
push
nop
int
insb
in
out
jno
add
ficoml
inc
fnstenv
cmpsl
xor
ljmp
iret
sbb
addl
xchg
stos
test
subb
mov
mov
shr
mov
mov
adc
aaa
dec
or
iret
aam
sbb
les
pop
shrb
cmpb
xorl
sub
js
fimuls
or
and
lret
mov
ret
addl
cmp
add
es
jae
add
add
xor
int3
jne
cld
arpl
lret
lret
inc
pop
push
jl
mov
inc
sbb
or
cs
jmp
cmp
inc
jae
push
imulb
cmp
mov
das
arpl
in
jmp
rol
sub
ret
cmpsb
dec
dec
or
aad
xor
xor
es
adc
jbe
loope
add
lcall
movsl
push
mov
add
cmpsb
popf
in
popf
xor
arpl
popa
rol
xchg
out
lea
sbbl
dec
sub
lret
popa
mov
xchg
subl
inc
xchg
gs
outsl
inc
js
push
loope
cmp
rcrl
push
or
mov
mov
scas
sub
or
dec
inc
lods
dec
inc
inc
lock
mov
sub
leave
in
mov
pusha
pop
push
xchg
rorl
mov
dec
mov
inc
lea
push
inc
push
or
es
sbb
push
and
push
imul
cmpsb
jmp
call
add
scas
lret
adcb
mov
sbb
and
loop
mov
cmp
push
outsb
push
pop
popf
outsb
xor
cvtps2pi
jmp
daa
push
ficomps
fcomps
aaa
out
prefetch
or
hlt
movsl
neg
hlt
push
ja
pop
cli
cltd
inc
popa
and
bound
aam
jge
shr
out
mov
xor
decl
cs
or
test
pop
out
add
pop
mov
dec
jp
je
mov
push
add
js
jae
cmp
clc
es
negb
pop
stos
loope
pop
adc
dec
das
xchg
ljmp
mov
ja
xorl
lea
pushf
ja
add
xchg
mov
setp
pop
jne
push
int3
pop
lds
js
fbstp
cwtl
fldlg2
sub
or
xchg
ret
push
incl
fcmovb
inc
mov
shlb
iret
inc
and
push
int3
pop
adc
lds
mov
adc
bound
mov
cmp
xor
rorl
imul
and
xchg
add
ret
out
jp
inc
ds
fiadds
popf
and
mov
gs
cmc
incb
push
fwait
in
nop
pop
adc
inc
cmp
scas
outsl
xor
jmp
and
dec
sbb
push
push
jmp
jl
fsubs
lret
mov
and
int3
jle
xchg
pop
in
adc
in
movsl
pusha
ljmp
jae
pusha
push
push
fistpll
orl
daa
test
nop
les
rorl
popa
pushf
das
stos
mov
outsl
dec
and
rcll
addr16
sub
divb
mov
out
jb
xor
mov
mov
jmp
and
dec
dec
xlat
inc
lods
mov
out
mov
add
shlb
jecxz
lock
xchg
inc
lahf
popa
dec
in
rol
gs
ja
mov
out
popa
xchg
cmpsb
push
xchg
mov
push
aaa
in
jbe
mov
mov
repnz
shlb
in
mov
mov
jne
jge
sbb
lds
dec
int3
into
out
lret
adc
sbb
loope
inc
xor
push
lcall
icebp
mov
out
roll
mov
daa
cmpsl
mov
inc
jb
inc
fwait
rcll
ror
add
xchg
xor
xchg
pushf
lahf
enter
and
xor
in
hlt
push
jmp
xor
rcrl
jb
add
ljmp
xchg
jno
cmp
pop
icebp
cld
push
jne
inc
fcomps
fsubr
sub
or
aas
mov
fldl
xor
adc
dec
lods
lcall
mov
add
sti
mov
xor
xor
lds
cltd
sbb
sub
sti
push
jmp
add
iret
imul
inc
pop
dec
pop
outsb
push
rcl
dec
dec
add
ljmp
gs
enter
push
inc
lea
test
int
sub
push
in
cld
xchg
outsl
xor
sub
repnz
mov
cmp
cmpl
dec
or
ljmp
in
xchg
outsl
pop
and
nop
cmp
ret
gs
dec
aas
call
std
jmp
and
or
hlt
aas
and
inc
shlb
mov
xor
inc
adc
shlb
jae
jo
jl
cmpsb
sbb
mov
inc
out
movsl
imul
jge
in
pop
mov
les
xchg
push
or
fcomps
out
jne
test
and
ljmp
pop
mov
loop
add
insl
sti
push
lret
mov
pop
shl
scas
mov
push
ljmp
dec
sub
mov
mov
fmull
and
jmp
sbb
inc
jns
loopne
das
sub
push
stos
and
out
dec
push
fmul
mov
pushf
jne
loope
pop
mov
dec
pop
sbb
clc
or
repz
cld
xor
ret
shrd
mov
mov
in
or
or
xchg
xchg
stos
push
dec
xchg
jp
mov
jp
dec
mov
mov
es
jecxz
adc
sbb
sarb
in
ds
sub
xchg
aaa
aad
mov
jmp
stos
cli
in
mov
ljmp
and
or
ret
sbb
je
fisubrs
push
mov
popa
jbe
sbb
rcrl
inc
mov
add
sbbb
das
nop
lods
mov
stc
cmp
sub
testl
inc
xchg
mov
push
in
out
cmp
pop
or
icebp
mov
inc
call
lcall
scas
mov
xor
adc
imul
jmp
xchg
sbb
bound
or
test
and
mov
mov
fnstsw
je
mov
sub
push
in
out
sbb
popa
pop
rorb
std
or
push
push
or
push
sbb
into
loop
mov
jl
sub
lea
and
rcr
cmpsl
int
lahf
pop
inc
adc
sub
sub
mov
cmp
icebp
ja
fsubs
xchg
add
cmc
cmp
les
sbb
jnp
jecxz
mov
nop
test
ret
incb
mov
jne
add
jbe
fs
aad
nop
mov
fsts
frstor
in
js
adc
jle
or
xchg
inc
pop
and
out
mov
inc
sbb
sbb
xor
cmp
adc
fnstcw
ret
xchg
push
sub
mov
mov
add
mov
inc
push
adc
mov
arpl
shl
lds
push
push
ret
decb
imul
jae
ljmp
cld
fs
mov
adc
adc
xchg
add
arpl
clc
adc
inc
fcom
es
nop
and
dec
jle
adc
mov
insl
jo
add
loopne
lods
rclb
adc
mov
ja
je
xor
addb
lods
push
ljmp
mov
jmp
mov
add
sub
xchg
ss
hlt
pusha
cmpl
add
inc
mov
mov
test
sub
lock
arpl
enter
lock
jno
dec
xchg
negl
pop
pop
mov
lds
jo
jmp
out
adc
lahf
rcrb
jmp
cld
out
inc
jo
cmp
adc
mov
daa
ret
outsb
scas
cmp
test
pmovmskb
iret
or
repz
cmp
jp
sub
or
mov
jle
cltd
mov
mov
mov
jne
mov
lds
aad
insb
dec
hlt
xchg
imul
stos
adc
mov
movb
mov
ljmp
into
jl
sub
push
int
or
adc
rcrb
lock
push
call
adc
adc
inc
mov
loopne
mulb
iret
fldcw
test
fcompl
movsb
jbe
arpl
sub
mov
std
and
jp
das
rorb
xor
lods
lods
push
inc
mov
ret
xchg
push
xchg
and
mov
mov
xor
stos
mov
out
sub
sbb
push
fs
push
jmp
fcomi
mov
jae
pop
push
xor
sahf
test
insl
ljmp
push
pop
xchg
cmp
icebp
shlb
sbb
xor
sarl
pop
push
mov
loop
xor
mov
add
insl
mov
xor
mov
adc
cmp
mov
jnp
jmp
push
stos
jge
push
dec
in
xor
mov
stc
lds
sbb
xor
je
mov
mov
out
jp
or
ret
test
pop
dec
out
cmp
pop
or
or
mov
outsb
push
std
mov
shr
hlt
adc
cmpsl
cs
mov
add
mov
sarl
inc
pop
adc
lods
fadds
cltd
inc
lcall
cwtl
push
in
sub
push
call
clc
cmp
jecxz
ja
jecxz
xor
mov
popa
mov
frstor
cmp
popa
fdivl
lock
jns
xchg
or
je
dec
xor
cltd
mov
mov
and
adc
jno
int
mov
fsubp
outsb
push
je
dec
xchg
lcall
insl
lahf
xor
stos
stc
mull
jbe
push
xchg
int
icebp
jl
dec
xchg
out
inc
jle,pt
inc
xchg
jl
ret
pop
pop
jecxz
out
test
and
movsl
sbb
arpl
imul
imul
push
icebp
sbb
pop
mov
int
loopne
vpsrlw
pop
dec
jo
cltd
loopne
je
jecxz
cltd
mov
daa
in
imul
jl
xor
rolb
or
xchg
lds
xor
lret
lret
add
movsl
leave
dec
xchg
enter
adc
rolb
push
stos
push
dec
data16
out
jmp
setge
pop
sub
inc
fcompp
mov
scas
ret
dec
cmp
mov
orl
mov
or
jne
add
mov
xchg
add
push
dec
or
xchg
inc
cmpsb
cmc
bound
sbb
cwtl
lds
mov
jb
lods
faddl
or
sbbb
push
jo
mov
mov
mov
pop
pusha
not
icebp
movsb
dec
jns
pop
mov
or
sub
int3
ljmp
inc
call
dec
enter
cmp
xchg
xchg
lds
fcomps
sbb
pop
jnp
push
aam
cmpsb
or
xchg
je
cmp
push
cwtl
lahf
mov
pop
cmpsl
mov
data16
loopne
sub
out
sub
add
data16
sbb
aad
cmpxchg
in
js
stos
xor
xchg
hlt
xor
insb
push
adcb
sub
mov
cmp
mov
push
pop
add
jns
call
sbb
mov
test
in
add
pusha
jmp
mov
sbb
js
sbb
sub
gs
dec
je
decl
dec
dec
xchg
inc
std
decb
negb
clc
sti
sub
loope
stos
adc
std
xchg
push
out
adc
push
jb
mov
cmc
outsl
jmp
mov
sbb
sub
jl
aaa
inc
push
add
xor
roll
or
push
xchg
xchg
mov
sub
push
out
pop
sbb
mov
jnp
cmp
cmp
dec
lods
add
repnz
imul
aad
jae
std
add
inc
daa
mov
lret
hlt
test
sub
subl
mov
mov
sti
leave
and
dec
sbb
cmp
and
adc
stos
push
add
mov
cwtl
jb
cmpsb
pushf
add
sbb
scas
jb
or
jg
push
rclb
cmp
imul
inc
jno
mov
shll
jp
dec
leave
dec
loop
popa
iret
rolb
sbb
dec
cmpsb
and
outsl
jnp
fwait
dec
daa
int3
jp
mov
xchg
mov
sbb
xlat
dec
rcll
mov
dec
sbb
pop
push
sbb
jmp
sub
dec
or
mov
mov
add
push
cmp
sahf
cmp
movsb
std
hlt
adc
jg
test
and
xlat
pop
push
inc
inc
lods
mov
shll
pusha
push
fwait
sbbb
lret
mov
or
xchg
xchg
adc
push
cmpsb
bound
fsubrs
sub
mov
pop
push
imul
jne
sub
dec
jmp
xor
or
and
mov
push
and
xor
mov
mov
inc
dec
cmp
pop
jle
cwtl
pop
mov
and
cmp
paddsw
leave
insl
jno
dec
test
push
mov
repz
add
pop
in
mov
xchg
push
cmove
cmpl
pushf
pop
and
cltd
sbb
lcall
insl
scas
jnp
cmp
xchg
lods
sub
mov
jne
push
push
cmpsl
arpl
pop
inc
jmp
xchg
sub
push
les
xor
repnz
loopne
js
insl
rolb
add
sbbl
das
pusha
scas
inc
inc
fldt
clc
arpl
jmp
jmp
push
popl
mulb
add
fstps
mov
pop
jne
test
js
insl
add
cmp
fwait
inc
jp
jb
mov
fstl
inc
inc
adc
in
inc
addr16
pop
rorb
add
les
push
push
bound
inc
push
fidivs
fwait
adc
mov
test
adc
es
fistps
sub
adc
out
fwait
cld
add
leave
add
jno
or
inc
sarb
ds
sub
cli
outsb
cld
mov
js
insb
out
les
test
clc
mov
cmp
mov
add
pop
mov
lahf
jne
outsl
add
aad
lret
iret
mov
out
pop
repz
div
sub
out
sar
loope
icebp
rolb
loop
adc
push
xor
jno
add
jb
bound
xchg
roll
rolb
loop
adc
push
xor
jno
add
jb
bound
xchg
roll
roll
jecxz
push
inc
add
popa
es
add
jbe
push
xor
cmp
mov
rolb
bound
inc
std
sti
cwtl
popa
and
and
pop
popf
dec
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
xchg
sar
push
jo
xor
mov
ja
add
add
add
add
add
or
test
add
flds
add
inc
add
xor
adc
and
add
add
or
add
inc
add
js
jne
nop
add
leave
add
add
add
add
add
inc
add
add
add
sbb
popl
add
pop
add
add
add
add
add
add
add
add
add
add
add
jno
jl
mov
add
leave
add
add
add
add
add
add
add
add
add
jo
add
add
add
jne
gs
add
add
add
jle
sbb
adc
inc
add
bound
push
add
add
or
pop
add
add
xchg
add
add
add
add
add
pop
add
add
in
add
sub
and
add
add
add
push
add
sbb
push
add
add
add
nop
add
add
add
sub
jno
loop
pop
add
inc
add
add
add
sub
pop
add
add
add
push
add
pop
add
and
bound
imul
adc
push
add
jno
jb
add
jno
add
add
add
add
test
or
pop
add
add
add
popf
add
add
pop
add
xchg
add
add
cltd
add
push
add
pop
add
add
add
add
add
adc
leave
add
add
add
pop
add
add
add
test
adc
adc
push
add
add
add
inc
add
add
add
add
add
add
jle
loope
push
add
add
dec
add
add
add
add
testb
adc
addl
fldl
add
insl
add
insb
add
pop
add
mov
add
jle
pop
add
lret
add
pop
add
add
add
leave
add
loope
add
add
add
mov
add
add
xor
ret
add
add
add
add
add
add
flds
leave
add
add
add
add
add
test
add
add
adc
add
addr16
add
add
add
add
and
dec
add
jno
add
int
roll
add
add
add
add
inc
add
xor
addl
cmp
inc
add
add
add
add
mov
sub
jb
loop
mov
dec
add
add
add
add
add
add
add
mov
add
inc
add
add
add
add
jae
stos
add
add
add
add
add
add
add
add
add
add
add
add
leave
add
add
leave
add
add
add
jl
roll
sub
xchg
jno
loope
roll
or
insb
add
or
sti
add
xchg
testb
leave
add
xchg
add
cmp
movsb
add
add
add
pop
add
xor
leave
add
add
inc
add
add
add
addb
add
add
add
loop
pop
add
pop
add
flds
add
add
mov
add
sub
or
bound
test
jl
stos
add
add
add
add
pop
adc
leave
mov
outsb
xlat
outsb
xchg
dec
add
out
fld
sub
mov
dec
and
repnz
shll
dec
mov
add
sbb
inc
or
adcl
cld
in
ror
rolb
jbe
sbb
lock
pop
push
test
dec
icebp
sarl
sbb
hlt
mov
mov
bound
std
add
and
fdivr
mov
lret
mov
cmpsl
jno
mov
scas
popa
popf
push
sub
es
or
mov
outsb
dec
xchg
ljmp
sahf
jmp
dec
scas
lea
mov
andl
fsubrs
adc
cli
sar
rcrl
cmp
mov
test
sub
jbe
in
mov
and
fs
mov
xchg
testb
call
and
ljmp
mov
lds
mov
lcall
ds
mov
push
inc
clc
ret
aam
mov
repz
adc
out
rorb
xor
insl
push
lea
testl
cmp
jne
movl
in
adc
mov
mov
popa
iret
in
xchg
idivb
mov
mov
sbb
inc
loop
imul
jo
add
sbb
add
and
sbb
mov
scas
lods
push
mov
stos
or
data16
dec
push
sub
jo
inc
add
jl
xor
sbbb
inc
add
js
mov
fildll
stc
cmp
inc
mov
adc
sbb
sub
adc
cmp
sbb
mov
psubd
mov
loope
stos
cmp
lea
mov
jmp
add
mov
gs
pop
loop
incl
pop
and
xchg
inc
je
sbb
mov
sbb
lea
cmpsb
mov
subl
cmp
jecxz
pop
pop
test
xor
mov
inc
movsl
mov
ret
out
repz
sub
out
mov
cmp
or
or
pop
adc
fcomps
je
jmp
xchg
gs
and
ja
mov
sahf
int
movsb
js
adc
xor
adc
mov
enter
fists
insl
xchg
lcall
jbe
xlat
mov
ja
test
xchg
out
sbb
add
repnz
stos
rcr
daa
jl
adc
call
cld
popa
mov
sti
xchg
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
