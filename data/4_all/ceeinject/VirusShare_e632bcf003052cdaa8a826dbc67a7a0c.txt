adc
decl
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
imul
gs
xor
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
push
push
push
push
call
push
lea
push
push
call
add
leave
ret
add
xchg
out
out
testb
rcll
outsb
push
jle
or
push
sti
cs
out
out
testb
mov
push
inc
outsb
jle
push
sub
cs
pop
adc
cmp
subb
or
pop
add
push
inc
jo
push
dec
push
popl
mov
stos
and
pop
test
aad
pop
sbb
ret
adc
ficoms
cmp
mov
xchg
mov
mov
sahf
scas
into
out
mov
out
outsl
ficoml
in
push
inc
mov
mov
cmc
xchg
ljmp
cmpsb
xchg
loop
testb
mov
mov
cltd
xorl
fld
dec
dec
adc
sub
sbb
or
sbb
dec
mov
add
insb
push
add
dec
mov
adc
gs
inc
mov
adc
jle
mov
push
imul
pop
std
dec
fdivp
out
xchg
xchg
testb
push
and
inc
int3
mov
pusha
dec
outsb
cmp
clc
cs
add
test
stos
mov
sti
mov
add
pop
adc
pop
push
jns
into
adcb
xchg
xor
test
pop
and
xor
inc
jge
jnp
pop
inc
jg
mov
mov
xchg
scas
cmpsb
mov
push
outsb
data16
push
push
push
push
cs
out
out
testb
mov
push
outsb
data16
push
push
push
push
cs
sbb
ret
lahf
into
pminub
dec
mull
lods
inc
jle
leave
in
ja
data16
push
xchg
push
ja
popa
setp
insl
insl
test
out
in
cmp
scas
cmc
and
fcompl
push
jecxz
or
sbb
insb
sbb
xor
lock
or
loope
insl
push
sub
stc
fildll
aam
mov
mov
aam
inc
inc
push
mov
jp
xor
mov
and
shlb
jge
mov
loop,pn
imul
xor
rolb
fiadds
in
cmp
mov
cmp
ss
sbb
and
fisttps
shlb
cmp
mov
xorb
bound
lcall
out
negb
and
lods
inc
out
inc
fistpl
dec
cmp
inc
test
jl
mov
in
repnz
jecxz
add
test
out
adc
sti
mov
icebp
mov
insb
imul
add
mov
push
fmull
jae
jno
ljmp
in
xor
jp
adc
inc
xor
dec
cmc
cmpsl
and
scas
repz
add
add
mov
ljmp
adc
ljmp
lret
int
popf
jbe
aas
mov
or
in
pop
jb
ss
xor
inc
inc
add
daa
mov
orl
mov
ud0
je
push
out
mov
lahf
lcall
mov
pop
mov
push
sarb
jecxz
mov
ret
pop
and
test
imul
out
movsb
jnp
cmpb
call
mov
loopne
or
or
test
push
aas
and
shl
push
pop
nop
scas
pusha
xlat
mov
push
idiv
add
adc
popa
sbb
aam
daa
popf
mov
enter
dec
inc
jbe
sub
shlb
int3
jo
mov
mov
inc
repnz
jmp
test
xchg
xor
xor
in
xchg
aas
adc
mov
jge
pop
mov
fcmovu
inc
and
into
sbb
out
pop
pusha
movsl
or
push
lds
fs
pop
mov
sub
sub
push
enter
repnz
andb
cwtl
mov
add
mov
cwtl
dec
rcl
aam
sarb
mov
scas
fimull
cwtl
inc
and
jb
psubb
pop
movsl
mov
js,pn
out
sub
pop
xchg
lock
inc
leave
fs
out
and
idivb
xchg
adc
dec
xorb
testl
adc
arpl
loopne
mov
ret
or
mov
cmp
push
mov
add
pop
adc
add
daa
enter
inc
pop
sbb
jns
inc
pop
or
mov
sbb
or
adc
jmp
aas
in
mov
idivl
cmp
ret
shlb
imul
pop
insb
cwtl
scas
pop
popf
push
icebp
mov
sub
pusha
push
mov
xchg
pop
lret
imul
aaa
fists
jnp
mov
rol
sub
pushl
dec
movb
int
cmp
pop
ja
push
cs
xchg
inc
ss
xchg
jae
icebp
pop
pop
fildl
in
out
push
sub
mov
rcl
dec
xlat
inc
cwtl
frstor
xchg
inc
dec
cmc
push
dec
dec
mov
add
xchg
sbb
aas
xor
stos
cmc
adc
jae
or
jp
and
sbb
push
rcrl
cmp
pushf
arpl
xor
cltd
les
scas
cs
roll
xchg
push
enter
pushf
cmp
sbb
jle
inc
xchg
fwait
aad
cmp
fucomi
sub
mov
add
adcl
pop
test
js
lcall
jae
dec
xchg
mov
cmp
aad
mov
inc
adc
mov
dec
mov
cmp
push
jl
out
lahf
cmp
sub
pop
hlt
adc
daa
movsl
or
stos
data16
fcom
cs
mov
sbb
in
in
mov
push
jbe
pushf
jmp
add
pop
cmp
jnp
or
and
cmp
stos
xchg
stc
inc
jbe
es
rcrb
stos
loope
cmp
or
shll
rcl
rclb
jge
push
lods
cld
jge
pushf
mov
into
ret
in
inc
int
mov
test
sub
loopne
jae
fisubl
cwtl
sbb
daa
pop
or
adc
sub
cmp
out
push
mov
cltd
sbb
mov
mov
in
cmc
in
mov
fwait
and
xchg
xchg
jmp
adc
sbb
lds
lock
jge
jle
sbb
mov
jb
xor
push
pop
mov
mov
add
cli
mov
xor
dec
fwait
das
inc
pop
push
pop
cld
lret
mov
pop
lfs
and
daa
pop
out
lods
inc
and
mov
mov
push
mov
sbb
ljmp
push
inc
vmaxpd
pop
lods
push
and
and
scas
stc
repnz
cmc
fwait
inc
ljmp
scas
and
cmp
divl
jp
jb
fdivr
loop
out
xchg
movsl
lcall
push
jge
push
add
jne
jp
mov
mov
call
mov
add
mov
jge
add
leave
test
std
aad
stos
jne
push
sbb
cmp
fists
mov
dec
push
push
jl
pop
fwait
pop
sub
sub
push
add
xchg
hlt
in
jnp
test
mov
push
and
xor
inc
jo
test
xchg
or
add
push
mov
push
sahf
push
rorb
icebp
jne
pop
mov
jnp
cmp
scas
cmp
mov
mov
fmull
loope
inc
rcrl
cmc
add
out
inc
nop
test
daa
pop
xchg
add
jae
inc
or
sbb
mov
out
add
cmpsb
inc
popf
out
arpl
jb
popf
push
pop
adc
adc
out
mov
push
cwtl
cmp
outsl
stos
xchg
popl
mov
fs
nop
mov
jb
out
push
sbbl
pusha
out
stos
mov
sub
popa
pushf
int3
mov
xor
mov
lret
movsl
jle
ret
sbb
insl
ret
cmp
or
mov
xchg
dec
scas
mov
pop
imul
popa
push
daa
rolb
std
gs
dec
ret
dec
or
mov
inc
pop
cs
scas
fldenv
jbe
sbb
push
icebp
dec
push
jnp
out
enter
data16
aam
pop
int3
jp
popa
push
and
xchg
shll
cmc
pop
lock
mov
jae
add
fnsave
dec
aad
inc
jmp
sti
fidivrl
push
fcmove
fdivl
xor
addl
adc
jb
sbb
imul
push
xchg
add
mov
jmp
adc
jecxz
in
movsl
dec
fistpll
add
sbb
sarl
pop
cmp
adc
pop
icebp
out
sub
xor
sti
jno
or
cmpsb
cmp
mov
movsb
aam
mov
adc
es
mov
xchg
out
hlt
out
aam
cltd
pop
jge
sub
test
cmp
stos
jge
test
test
jecxz
divb
sub
and
xchg
movsl
dec
stos
lods
xchg
jnp
dec
push
ss
dec
cli
or
pop
or
inc
sbb
addr16
mov
gs
pop
dec
add
jno
les
popa
stos
icebp
in
mov
dec
dec
rorb
iret
shlb
mov
dec
in
int
push
sti
inc
xlat
test
cmpsl
mov
fnstcw
jl
call
xchg
push
sti
outsl
lret
cmp
lea
in
testb
xchg
ss
sbb
stos
pop
cmpsl
test
sbb
mov
dec
es
icebp
cmp
mov
std
push
aam
std
lahf
dec
add
dec
or
adc
cmpsl
cmp
pop
or
iret
shr
mov
sub
mov
adc
notl
cmp
sbb
or
sbbb
in
pop
mov
push
mov
inc
mov
sub
or
repz
fnsave
add
pop
push
stos
pop
mov
sti
jb
shlb
in
add
mov
xchg
mov
jnp
xor
or
rep
je
jne
out
movsb
jge
mov
pusha
dec
inc
test
inc
inc
jmp
sbb
fdivrl
mov
jno
jno
dec
inc
mov
shrb
push
sub
cs
data16
iret
iret
lock
mov
in
cwtl
mov
imul
sbb
lcall
insb
pop
xlat
sub
cli
adcb
dec
ja
and
jecxz
pop
ret
mov
cwtl
xchg
in
cmpl
lock
movsb
shlb
push
in
stos
outsl
push
xchg
out
jle
rolb
mov
jo
inc
fs
and
jmp
cli
dec
shll
rorb
decb
adc
sub
jle
cmpsb
mov
dec
out
cmp
jne
int
outsl
lea
push
iret
fisubs
repnz
xor
xchg
cli
pop
inc
push
or
inc
push
xchg
je
adc
push
shlb
mov
cmp
shl
add
and
iret
popf
lds
mov
cmpsb
out
movsb
subb
cmp
push
fdivs
lahf
jl
push
aas
pop
es
add
jl
and
xor
aam
idivl
iret
sub
aad
ror
adc
cmp
loop
push
sbb
cmpb
mov
adc
mov
dec
inc
ret
sahf
addr16
dec
xor
jne
xlat
les
pop
ficoms
dec
cltd
test
push
cmp
rcll
pop
rcl
ret
rol
cmp
lea
rcr
ljmp
imul
mov
std
fisttps
sbb
ret
xor
popa
mov
mov
mov
data16
int3
inc
push
out
enter
or
pop
push
insl
gs
sub
jo
sub
push
and
mov
dec
fwait
dec
sti
mov
call
sahf
xor
jl
ret
lock
clc
push
pop
xor
ret
testl
jae
ret
int3
lds
iret
shlb
jb
jbe
insb
mov
mov
in
pcmpeqd
adc
les
add
in
mov
sarl
cmp
mov
aaa
jne
testb
cmp
jp
cld
lahf
shrl
enter
jp
mov
xor
xor
ret
adc
test
push
cmpsl
xor
adc
mov
mov
push
out
cmp
and
push
or
mov
in
sub
and
pop
mov
loopne
pop
inc
xor
mov
shr
scas
mov
jb
fucomip
dec
cmp
mov
sahf
xchg
dec
mov
std
imul
nop
rcr
cltd
mov
negb
cltd
cs
test
movsl
cmp
inc
call
mov
sub
dec
push
pushf
dec
idivb
int
pop
sbb
pop
mov
fdivs
push
stos
push
mov
and
in
std
sub
dec
and
test
sbb
mov
sbb
pop
and
ficomps
sbb
outsl
sahf
hlt
bnd
pop
in
cmp
mov
jne
xor
pop
mov
testb
or
mov
and
push
xchg
outsl
in
adc
jg
jmp
mov
pop
sub
jnp
gs
mov
push
fisttps
bound
jo
adc
fsubrs
add
push
cld
adc
xchg
mov
loope
mov
lods
shlb
out
in
test
jbe
xchg
xchg
xorb
outsb
fdivr
pop
stos
mov
and
jae
cli
lcall
hlt
mov
inc
and
pop
scas
lea
inc
mov
add
movsb
or
add
jl
cld
enter
fwait
mov
jle
out
sbb
arpl
pop
addl
mov
and
dec
lcall
xor
xchg
mov
ja
inc
hlt
or
fs
jl
or
rclb
jg
aaa
orl
ja
add
sub
pop
mov
aad
cmp
aas
sarb
cmp
test
std
pop
pop
ror
mov
pop
rcrl
test
es
push
cmc
shl
icebp
in
pop
sarl
inc
or
push
dec
cs
pop
ss
and
js
mov
pop
pop
sbb
adc
push
jmp
xchg
ljmp
sub
mov
pop
je
clc
cltd
lret
dec
sub
add
outsl
jbe
mov
lret
jns
movl
ret
popf
pop
call
mov
cmp
sub
mov
mov
into
adc
test
xor
inc
pop
and
sub
dec
sub
push
test
mov
mov
jg
test
pop
loopne
jno
orb
and
in
scas
mov
jmp
dec
fcmovne
and
fdivrs
loope
jb
cmc
xchg
pop
inc
lret
cwtl
jnp
push
lds
pushf
xlat
push
std
movsl
jo
leave
inc
jl
dec
mov
mov
lret
mov
pop
inc
loope
mov
dec
dec
mov
mov
divb
inc
repz
cmp
mov
pop
dec
xchg
and
das
enter
jne
add
sbb
cltd
xor
movsb
sub
loope
mov
loop
and
mov
xchg
insl
mov
sub
sbb
mov
lret
xor
test
add
add
push
cmp
je
orb
outsb
or
mov
mov
lods
add
cltd
push
sub
in
mov
sbb
test
leave
jne
mov
out
faddl
jg
loop
xchg
pop
mov
cli
int3
lods
imul
pop
fs
fstps
lcall
leave
test
xchg
in
jge
mov
push
adc
or
out
data16
inc
repz
jmp
jno
xchg
push
gs
ret
les
push
test
cmpsb
ja
dec
fdivrl
xchg
stc
mov
fstpl
clc
push
orb
adc
outsb
xchg
and
sahf
fildll
mov
mov
js
stos
sub
insb
dec
mov
shrl
scas
add
iret
adc
scas
loopne
jecxz
push
popf
pop
mov
mov
and
dec
adc
mov
out
cwtl
xchg
loopne
jg
scas
jne
sbb
aas
std
mov
repz
mov
test
add
ror
xor
pop
mov
lea
rcl
xchg
sub
jo
dec
lret
leave
dec
ret
xchg
mov
mov
jae
es
xchg
or
gs
xchg
lods
dec
inc
mov
adc
loopne
rorl
fisubs
inc
fsubr
shr
lcall
mov
test
pop
es
cltd
xchg
movb
shlb
sub
test
cmp
gs
lock
mov
mov
inc
popf
aas
mov
neg
fnstenv
movsl
lock
mov
into
icebp
sub
test
fnstsw
fstpt
xor
jo
sbb
cli
sarb
imul
sub
cmove
pop
cmp
mov
mov
xorb
push
les
std
lret
cld
inc
movsb
loop
inc
xorb
push
push
ret
xchg
sahf
lods
mov
pusha
ja
popf
iret
xchg
das
push
mov
lahf
mov
adc
pusha
loope
leave
and
push
mov
mov
pop
sbb
out
jmp
stc
popa
je
mov
dec
push
dec
sbbl
je
inc
addr16
fldpi
stos
cld
cmp
push
data16
leave
inc
lock
ror
divb
fwait
out
inc
stc
jae
mov
mov
fmull
cmp
out
mov
sarl
lcall
jge
pusha
pop
xchg
or
outsb
out
cmc
jo
push
cmp
fistpl
iret
lahf
add
jmp
inc
aad
xor
aaa
add
xchg
cmpl
xlat
leave
inc
ja
out
jno
shrb
jae
cltd
lahf
imul
rorb
sbb
inc
aaa
test
stc
and
xor
dec
sub
sub
cmp
lods
and
jmp
popf
sahf
push
lret
in
std
fistl
dec
filds
mov
and
incl
std
test
inc
mov
imul
xorl
pop
fs
xchg
sub
ret
inc
or
and
xor
pusha
repnz
repnz
pop
imul
mov
mov
popf
or
jne
pop
cmp
cld
xchg
add
inc
pop
fs
cmc
mov
mov
ds
push
sbb
outsb
mov
loope
inc
push
xchg
aas
inc
add
pop
push
and
sub
cmp
mov
or
test
por
aad
xchg
popa
xchg
pop
mov
mov
mov
inc
mov
or
pop
and
lods
movsl
lea
inc
shlb
repnz
mov
inc
aam
rcr
or
mov
daa
inc
sub
push
jb
adc
mov
icebp
adc
push
pusha
stos
das
rorb
clc
mov
fwait
mov
decl
hlt
mov
loopne
mov
dec
cmp
pop
xchg
push
subb
out
add
sub
xchg
in
movsb
ret
mov
out
push
imul
cmp
cmp
sahf
es
jbe
pop
dec
jmp
inc
dec
or
lcall
repnz
stos
in
sti
or
mov
adc
jns
xchg
jb
add
test
and
xchg
enter
sbb
mov
sti
sub
lock
add
loope
push
rcll
lea
cmp
mov
push
or
call
scas
testb
mov
stc
pop
inc
xchg
neg
inc
sub
out
int
out
out
sub
mov
call
in
das
xchg
mov
into
pop
mov
xor
and
out
push
cmpsb
test
jo
mov
inc
popf
in
mov
mulps
rcrl
mov
mov
lret
scas
clc
sbb
push
scas
cld
pop
mov
mov
xchg
pop
add
push
sahf
adc
add
movsb
push
adc
inc
sub
jae
dec
in
pop
mov
xor
jne
push
lcall
adcl
and
add
jge
push
sti
sub
adc
sub
pop
pop
push
mov
or
jle
inc
addr16
mov
xor
add
mov
adc
inc
jo
xor
icebp
pop
jb
and
data16
aas
push
test
add
xchg
inc
fs
hlt
outsl
leave
ret
xorb
loopne
inc
mov
fistps
das
fmuls
in
bnd
push
inc
into
popa
dec
sarb
sub
test
ret
push
lock
mov
fists
dec
or
in
mov
mov
push
inc
cmpsl
pusha
hlt
push
adc
popa
pop
dec
aaa
inc
enter
push
mov
and
lods
lcall
mov
sub
sbbl
mov
dec
inc
jnp
jge
push
jns
mov
adc
fmuls
addb
xchg
xchg
sub
fidivs
test
and
mov
clc
and
xchg
aas
lods
ljmp
push
pop
mov
lea
or
sub
inc
negl
addr16
imul
mov
xchg
xchg
arpl
lret
push
cmpsl
xchg
or
pop
aad
jmp
xor
icebp
loop
jo
and
adc
in
adc
in
sbb
rcrl
or
ja
mov
cmc
add
imul
xor
scas
incl
cli
cli
adc
movsb
shll
xor
jp
jmp
sbb
data16
icebp
sarl
mov
inc
pop
scas
xchg
cmp
fwait
insl
fistpll
loope
es
cmp
push
adc
mov
dec
add
ret
pop
div
outsl
out
xor
dec
es
cltd
sub
pop
mov
sbb
inc
lds
ret
adc
roll
scas
mov
sbb
outsb
mov
sbbl
lock
add
pop
je
mov
scas
xchg
aam
xchg
aad
jne
cmp
fs
das
pop
push
sbb
mov
jecxz
call
or
out
imul
and
or
jns
xchg
mov
sbb
rdpmc
repz
std
adc
sub
mov
lcall
insl
xor
leave
mov
out
pusha
dec
sti
sub
add
orb
clc
hlt
pop
adc
test
repz
movsb
pushf
add
pop
xor
outsl
jbe
xchg
out
lahf
testl
invd
dec
push
jno
xchg
loop
mov
mov
push
outsb
data16
push
push
push
push
cs
out
out
testb
mov
push
outsb
data16
push
push
push
push
cs
ret
repnz
mov
push
addr16
push
add
push
sub
push
rcl
and
xor
mov
xchg
jbe
mov
jle
jns
xchg
outsb
rcrl
dec
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
hlt
mov
popa
aam
les
adc
dec
icebp
pop
loope
je
fs
push
roll
and
adc
add
hlt
jno
popa
aam
les
xor
je
fs
icebp
inc
shll
jno
xchg
add
hlt
push
les
sub
je
movsb
push
pop
lock
iret
pop
push
mov
and
movsb
clc
pop
jg
mov
mov
xchg
mov
insl
inc
fidivrl
pop
and
sahf
mov
jb
xorb
fld
rol
xor
hlt
adc
mov
sbb
dec
and
jmp
je
and
mov
les
mov
adc
je
je
fnstenv
bound
lret
pop
adc
push
jmp
dec
nop
cmpb
scas
fstl
jl
loope
xchg
int
mov
xchg
adc
jle
adcl
sub
mov
push
cmc
lods
les
rorl
loop
aam
outsb
insb
xchg
stos
jno
jbe
inc
les
xor
je
fs
push
enter
test
add
mov
lea
push
mov
dec
icebp
jge
insb
xor
test
scas
push
fmull
push
xchg
push
in
testl
mov
adc
data16
jo
data16
add
popf
xor
xor
pop
movsb
and
fs
roll
mov
mov
hlt
jno
popa
aam
les
xor
je
fs
roll
mov
mov
hlt
jno
out
jo
push
outsb
or
inc
sub
adc
push
int
lret
xchg
mov
mov
imul
dec
sub
pop
add
iret
dec
push
ljmp
mov
pop
gs
not
pop
mov
icebp
mov
dec
jp
icebp
decb
mov
add
mov
fsubrs
imul
mov
mov
mov
pop
les
and
inc
pop
lock
sar
or
in
aam
test
jnp
dec
stos
movb
cmpsb
mov
pop
sbb
ljmp
inc
flds
shll
cmp
mov
dec
push
test
nop
jg
mov
popl
out
ss
repnz
jmp
inc
or
into
or
mov
pop
cmpsl
out
movsb
stos
addr16
mov
jl
jecxz
aaa
sub
mov
xchg
addl
or
jl
clc
sub
repnz
les
outsb
or
xchg
stos
inc
mov
inc
adc
push
and
inc
mov
and
cmp
stos
rcrl
div
in
lcall
mov
sbb
sbb
lods
int3
ljmp
push
push
sub
xor
sbb
mov
push
pop
cltd
jl
adc
sbb
and
and
fdivrs
in
mov
lret
cmp
inc
dec
dec
lcall
lret
push
lods
sub
or
dec
jmp
push
lds
imul
rcr
aas
or
dec
jb
sub
dec
sbb
idivb
inc
pop
inc
add
push
pop
mov
lret
add
inc
call
loope
mov
mov
xor
lahf
sti
movsl
pop
enter
pop
sbb
sub
outsl
es
pop
xor
xchg
mov
call
mov
xchg
js
stos
xchg
test
dec
sbb
or
in
aad
loop
push
jecxz
cmc
divb
pop
fs
imul
lret
push
gs
arpl
push
ficomps
gs
int
adc
lods
add
lret
pop
sub
imul
dec
lock
or
mov
pop
stos
add
ja
in
inc
mov
test
dec
jb
popa
ret
test
rolb
out
flds
cs
jmp
popa
repnz
xchg
lock
aas
int3
dec
insl
movsl
mov
xchg
mov
xchg
loopne
cmc
and
cwtl
push
sbb
push
aas
cld
popa
sbb
mov
jmp
pop
inc
test
add
jp
mov
sub
outsb
insb
jl
mov
or
test
orl
std
and
test
xor
mov
lock
movsb
rcr
sbb
and
in
loope
dec
addr16
mov
std
lret
mov
loop
xor
push
push
cltd
dec
loope
sbb
push
jae
shll
aad
mov
adc
outsl
mov
mov
and
jecxz
cmp
arpl
jmp
add
jmp
arpl
adc
or
pop
mov
mov
xorl
xchg
pop
nop
sbb
test
lea
stos
pop
popa
push
mov
cmpsl
mov
jmp
in
push
cmpsl
popl
inc
add
aad
jp
cli
add
jae
mov
add
lea
stos
adc
gs
push
shrl
cli
fbld
xchg
cmp
xchg
pusha
inc
push
into
lods
shlb
pop
aas
mov
out
jnp
sub
insl
popa
scas
ret
dec
or
and
sti
mov
jmp
test
fcmovu
repz
cmp
jns
xor
push
xrelease
pop
test
sub
sub
and
rcrl
test
ss
rcl
add
into
rcl
mov
loope
and
pop
ds
lret
jp
inc
sbb
mov
in
cltd
cwtl
les
jmp
cwtl
sub
pop
push
popl
addl
daa
mov
xor
inc
push
paddb
testb
cmp
or
adc
sub
mov
mov
pop
lods
or
call
pop
mov
inc
sarl
lods
xor
or
clc
jmp
xor
dec
mov
and
add
add
or
and
adc
add
call
adc
or
dec
mov
cmp
mov
enter
add
and
cmpsb
xchg
push
test
xchg
gs
cmp
dec
and
cmp
cli
in
push
aam
xchg
jae
jle
jbe
hlt
push
inc
aas
adc
les
fmull
stos
cmp
adc
pop
inc
or
cmp
push
jae
cli
add
fnstenv
insl
mov
xor
imul
sub
pop
cmp
fisttps
dec
dec
cs
cs
sti
std
cmp
aaa
bound
xchg
cli
int3
cmp
es
push
std
sbbb
push
pop
xor
pop
test
ljmp
and
xor
mov
das
cmp
mov
cwtl
negl
sbb
jne
mov
hlt
je
pop
icebp
inc
repz
test
scas
inc
jo
mov
out
out
adc
sub
pop
cli
out
rcr
adc
dec
mov
jo
loopne
popa
out
mov
or
add
in
sbb
rolb
imul
negb
mov
aas
push
pushl
adc
mov
cli
push
jp
pop
pop
pop
js
into
mov
scas
je
lods
mov
push
cwtl
bound
mov
in
xor
push
ficomps
pop
mov
jno
repnz
mov
adc
cmp
loopne
cmp
mov
inc
js
cmp
mov
inc
test
cmc
mov
daa
adc
loope
mov
sub
adc
inc
jle
fs
xor
pop
es
adc
jle
xor
adc
popf
sub
outsl
cmp
xchg
nop
jnp
and
adc
insl
leave
insb
ja
mov
mov
test
subl
pop
pop
lds
stos
inc
fcoml
stc
movsl
cltd
data16
lock
es
fneni(8087
jae
fwait
push
sbb
cmp
out
fs
das
sub
sbb
add
test
stos
dec
or
mov
je
loop
cwtl
pop
xchg
inc
mov
mov
pop
out
insb
sarl
cs
gs
jae
adc
add
data16
mov
xor
sub
lahf
out
cld
cmc
jge
arpl
cli
add
or
jo
xchg
add
sbb
cmc
nop
sbb
xchg
jbe
mov
dec
cmc
loope
jne
pop
sbb
sbb
sti
xorb
lods
or
mov
xor
and
fstpl
sti
sub
gs
dec
sbb
adc
js
xchg
and
in
icebp
fidivrs
dec
lret
test
push
push
sub
dec
pop
ds
aas
inc
dec
jmp
lods
pushf
enter
sti
popf
lret
jl
lcall
sbb
pop
pop
imul
jnp
pop
add
subl
jecxz
lds
sbb
push
out
push
jns
inc
out
pop
cmpsb
stc
outsb
imul
ficompl
enter
ret
mov
mov
mov
xorb
push
xor
xor
in
jp
scas
inc
xchg
mov
fisubrs
xor
imul
xor
jno
std
jge
stos
in
rcl
mov
insb
fdivrl
jp
push
out
mov
mov
mov
inc
jbe
les
sti
or
pop
xor
jmp
mov
orb
jmp
add
xchg
add
sbb
clc
mov
cmp
sub
lock
cltd
js
test
jl
jge
iret
mov
jno,pn
xor
cmpsb
xchg
repnz
fbld
aam
push
repz
mov
dec
pop
ret
int3
xchg
pusha
inc
push
inc
pop
repz
sahf
or
outsb
subl
pop
xchg
shld
ficoml
test
xchg
in
jg
mov
mov
sbb
add
inc
push
adc
es
mov
pop
aaa
fsubp
fwait
sahf
mov
fisttpll
fcmovne
mov
or
push
clc
and
fistpl
outsl
pop
lods
dec
cltd
stc
in
mov
xchg
push
scas
add
mov
jle
frstor
repnz
in
adc
push
insb
cld
iret
lock
shrl
mov
add
mov
lret
mov
push
add
jb
xor
pop
jne
xchg
stos
pop
or
mov
movsl
mov
es
push
loop
push
xchg
mov
movsb
jnp
mov
and
dec
and
sbb
nop
adc
movsb
pop
push
cmp
push
int3
mov
inc
push
push
sub
scas
lcall
cmc
lock
jmp
fdivrl
dec
arpl
push
cld
fmull
repnz
push
push
or
stos
sub
ss
or
call
in
mov
divb
cmpsb
push
shll
adc
clc
popa
dec
push
mov
sahf
popa
add
mov
and
cmp
push
icebp
inc
pop
addr16
pop
lds
pop
jmp
xor
andl
ljmpw
aad
js
pop
inc
jge
jp
ret
jno
sub
mov
xchg
cltd
es
lcall
ja
push
dec
outsl
lock
fwait
and
subps
cmpsl
or
jmp
sub
ss
mov
inc
inc
in
lea
or
daa
je
ret
push
fildll
sti
cld
pop
les
ficoml
addr16
jbe
es
sub
stos
mov
mov
or
sbb
rcrb
xor
loopne
out
cmp
fldenv
rolb
in
jno
pop
and
pop
push
roll
icebp
cli
loop
negl
into
adc
cltd
les
test
xor
je
sbb
dec
lcall
jmp
imul
sub
dec
and
stc
shl
and
inc
add
cs
or
lcall
add
and
sbbb
mov
notl
jo
cltd
xor
int
inc
shll
cwtd
inc
nop
adc
shrl
iret
mov
out
mulb
push
inc
ficomps
jmp
push
lcall
scas
fwait
adc
add
ret
sub
ds
push
push
lods
push
fdivl
cmp
bound
adc
pop
repnz
in
and
scas
and
call
cmp
mov
push
pop
mov
xchg
stos
jg
pop
cs
sahf
push
test
jo
jae
repnz
mov
xorb
scas
or
sbb
and
ljmp
mov
mov
pop
imul
and
inc
fsubl
cmpsb
ljmp
push
sub
ficoml
cltd
or
movsl
test
pop
pop
aad
cmp
aad
mov
add
inc
xor
call
mov
das
lret
fcmovu
and
fcmove
xchg
mov
ret
idivb
jo
pushf
jne
ret
daa
dec
shll
ret
jbe
push
push
in
in
out
insl
stos
call
pop
ret
movsl
ror
out
test
add
imull
inc
push
mov
pusha
lahf
pop
xchg
imul
adc
xor
sub
ficomps
int
out
push
or
lahf
jmp
cwtl
xchg
jl
or
es
test
inc
cwtl
push
pop
dec
gs
and
xor
jg
add
mov
adc
xchg
in
nop
cltd
fldt
flds
fidivl
nop
pushf
scas
push
imul
mov
shl
adc
inc
outsb
inc
dec
or
repz
nop
xchg
and
or
jae
mov
inc
daa
ss
test
es
dec
add
pop
or
fsubr
dec
sub
dec
add
jnp
adc
lahf
mov
loope
aaa
roll
std
stos
icebp
push
jnp
mov
popf
mov
xor
sbb
or
cmpsl
xor
incl
push
pop
in
pop
xchg
pop
dec
adc
into
dec
cwtl
jno
sbb
or
inc
jbe
cmc
enter
mov
mov
add
lahf
or
repnz
sbb
jne
push
pop
stos
and
fstpt
out
int3
mov
adc
stc
mov
lods
dec
int3
sbb
iret
mov
and
mov
scas
pusha
mov
mov
in
rcr
mov
add
lcall
out
push
inc
sub
pop
jne
lea
rclb
mov
jmp
int3
shll
mov
pop
sub
cmp
adc
in
jp
mov
addr16
movsl
and
testb
inc
dec
xchg
push
addr16
jl
sub
add
pop
mov
aam
mov
mov
jnp
mov
in
push
cmc
sahf
and
cmp
cwtl
jg
jb
or
rclb
mov
mov
jl
xor
xlat
pop
clc
xor
jno
fsubrs
jae
andb
lods
into
push
mov
adc
xorl
mov
jne
movb
lcall
in
fiadds
pushl
cmpb
adc
push
mov
mov
pop
sub
icebp
daa
add
ja
faddp
dec
cltd
mov
cmp
into
jnp
lahf
in
popf
test
stc
xor
push
xchg
in
dec
arpl
mov
mov
xchg
dec
into
or
adc
mov
fcompl
cmpsl
inc
hlt
xor
pop
sbb
cmovo
pusha
adc
add
cmp
dec
je
xor
push
push
xchg
cld
and
xchg
and
jae
xorb
movsb
outsb
fnstsw
std
cwtl
cmp
iret
lock
shr
mov
adc
outsl
imul
cmpsb
and
xor
jnp
aad
cmp
pop
fdivl
cmc
aad
ret
sti
jmp
clc
add
sti
scas
mov
scas
daa
pop
out
add
popf
in
faddl
adc
mov
adc
mov
xor
push
je
add
cwtl
stos
xchg
inc
or
js
mov
into
mov
mov
fs
add
ja
aaa
lcall
inc
adc
push
push
push
pushf
pop
inc
or
std
movsb
out
test
mov
dec
imul
repz
mov
hlt
sub
div
in
lods
fstps
lods
xchg
push
push
mov
or
add
fadds
pop
popa
in
mov
jl
xchg
imul
loop
aaa
jecxz
invd
mov
cmp
fwait
movsl
ss
mov
pop
push
aaa
pop
xor
push
push
int
out
add
mov
jne
sbb
push
clc
dec
fucompp
js
pop
xlat
inc
fdivrs
or
or
inc
mov
dec
aaa
cmp
jg
je
push
shr
leave
adc
add
data16
push
fcoms
or
mov
push
iret
ljmp
push
in
movsb
sbb
jl
fcmove
pop
cs
stc
sbb
movsb
popf
adc
or
lcall
pop
mov
push
loope
sbb
adc
daa
sub
dec
sbb
test
pop
adc
or
xchg
jecxz
cli
xor
xchg
adc
in
outsl
sbb
pop
push
sbb
outsb
mov
sub
adcl
or
xor
pushf
dec
sti
out
ja
mov
jle
or
mov
sub
rcrb
adc
pop
mov
repnz
mov
popf
mov
out
mov
daa
inc
scas
fldenv
ds
xchg
xchg
in
ja
out
fdivl
pop
pop
insb
adcb
fnstsw
cmp
sbb
mov
stc
and
rol
mov
add
shlb
popf
mov
mov
jb
adc
xor
push
mov
jecxz
and
mov
xor
push
mov
mov
adc
rclb
sti
leave
xor
bound
mov
negb
jae
add
mov
icebp
mov
jbe
pop
rcr
arpl
inc
inc
xchg
jge
mov
arpl
iret
movsl
int
aaa
pusha
mov
das
outsl
sbb
sahf
xlat
sbbl
sbbl
or
adc
push
dec
jecxz
inc
rcrb
xchg
inc
mov
addr16
sbb
dec
call
add
and
inc
inc
shr
mov
cmp
inc
sbb
cmp
dec
aam
fwait
std
test
inc
dec
lcall
mov
repnz
mov
imulb
push
dec
cmp
les
daa
cmc
pop
xchg
and
pop
cmp
divb
and
push
rcrl
icebp
pop
es
cmp
pop
inc
clc
add
mov
loope
mulb
dec
or
icebp
sub
xchg
lock
imul
and
push
sub
and
shll
push
dec
mov
aaa
inc
cli
test
inc
loop
incl
xor
adc
or
lods
leave
push
mov
jae
mov
dec
jo
into
lea
jle
popf
js
fsubrs
test
stos
int
xchg
hlt
inc
xchg
in
pusha
mov
mull
aas
mov
pop
pop
dec
mov
js
push
loopne
xorb
pusha
iret
and
es
movsl
jp
push
push
sub
sbb
cmp
in
jle
mov
xor
sti
ljmp
fwait
sbb
movsl
lock
mov
cmpl
rcrb
das
scas
idivl
jno
ja
adc
jle
jnp
or
inc
std
pusha
jp
imul
sbb
repnz
inc
flds
aad
das
cmp
pop
dec
mov
stos
xchg
repz
inc
mov
push
scas
cmp
popf
loopne
int
or
loopne
xchg
mov
sbb
int
insb
fistpl
sbb
lahf
jge
push
pop
mul
mov
sarb
insl
lret
cmpl
cmp
sahf
push
movsb
ljmp
dec
lret
xor
fwait
inc
fdivs
mov
xchg
jae
sbb
insb
int
jb
enter
mov
scas
imul
fst
int3
push
push
mov
sub
mov
adc
outsl
xor
lods
sbb
push
pop
mov
push
sbb
jmp
and
dec
mov
bound
test
or
adc
or
sub
mov
cltd
je
xchg
inc
icebp
notl
cmpsb
push
push
adc
push
xorb
insl
mov
loop
pop
sbb
push
push
fcomps
repz
repnz
jno
pushf
pushf
dec
jge
pop
cmp
int3
shlb
jnp
xchg
cld
leave
inc
xor
jns
scas
sbb
jge
jae
and
pop
sahf
pop
add
test
xchg
rsm
pop
hlt
mov
mov
fs
insb
adc
int
sbb
xchg
outsb
push
pop
mov
fs
outsl
pusha
cs
push
ljmp
lds
cli
sub
cmp
and
cld
movsl
adc
int3
lods
hlt
movsl
std
pop
jae
inc
lret
dec
jmp
jns
cmovo
or
in
ret
add
fldcw
jnp
xchg
clc
test
dec
insl
mov
and
xor
testl
jecxz
hlt
sahf
pusha
or
cmp
cs
sbb
xchg
jbe
inc
push
icebp
in
cmp
imull
inc
inc
push
cltd
sbbl
mov
dec
cmc
mov
xchg
cld
push
rcrb
adc
ja
stc
mov
loop
stc
or
lods
cs
fnstenv
mov
mov
mov
cmp
lods
or
lea
jmp
jge
push
loopne
pop
or
jne
ja
lods
mov
arpl
and
add
lahf
mov
test
ljmp
repnz
sub
cmp
mov
jns
xor
mov
cmp
out
in
lods
sbb
push
or
dec
lahf
mov
xor
jmp
pop
sub
cltd
adc
and
popf
arpl
push
xchg
andb
xor
js
add
sahf
add
xchg
data16
xor
into
ljmp
mov
clc
or
gs
int
test
insl
mov
sub
dec
push
out
and
fdivp
mov
mov
dec
out
daa
inc
add
jns
mov
push
pop
cmovns
iret
sti
mov
ja
daa
cmpsb
scas
xchg
fwait
pop
std
imul
adc
inc
pop
ljmp
and
add
sub
dec
shll
out
int
adc
inc
xor
leave
push
repz
daa
sub
cmc
or
inc
mov
xchg
fdivs
into
test
neg
mulb
fidivl
out
int
xchg
sbb
inc
out
xchg
idivl
cmp
insb
popa
cmp
adc
inc
xor
leave
or
arpl
insb
dec
and
xchg
test
xor
daa
add
xor
lret
insl
daa
mov
addb
push
add
jmp
shl
cmp
jl
outsl
je
inc
dec
in
push
add
popa
adc
movsb
and
fs
roll
mov
mov
hlt
jno
popa
aam
les
xor
je
fs
roll
mov
mov
hlt
jno
popa
aam
les
xor
je
fs
roll
mov
mov
hlt
jno
popa
aam
les
xor
je
fs
roll
cmp
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
lret
pop
jmp
sti
pop
inc
gs
cwtl
dec
push
jp
or
sbb
sub
cmp
lret
call
sti
fmuls
mov
pop
imul
lret
inc
sbb
sub
sbb
jp
clc
jmp
sti
fimull
mov
mov
sbb
pop
jnp
or
push
pop
jl
sbb
xchg
lea
adc
mov
imul
aam
mov
dec
aas
inc
andl
mov
add
je
fwait
inc
push
enter
dec
fisubrs
xchg
and
jl
mov
fwait
jmp
mov
add
out
andb
in
dec
in
std
imul
aad
or
dec
enter
sub
call
lods
test
shrb
jae
addr16
xchg
fisubrs
xchg
jge
movsb
hlt
sub
test
push
dec
xor
cmp
or
fwait
std
sub
or
pop
pop
jnp
cmp
cmp
sub
dec
out
imul
sbb
stos
adc
xchg
outsb
or
or
dec
sti
rorb
push
mov
mov
or
shrb
cmp
mov
xchg
testb
mov
cmp
or
dec
dec
dec
jge
scas
lods
mov
std
mov
fimuls
cs
jnp
or
je
imul
test
fwait
mov
dec
push
jnp
or
sbb
sub
cmp
lret
call
sti
fmuls
mov
js
dec
jnp
or
sbb
sub
cmp
lret
call
aam
jne
cltd
fwait
inc
dec
sarl
push
push
dec
push
sti
pushf
xor
xor
jecxz
out
sbb
aas
ljmp
dec
jne
or
mov
dec
or
insl
sbb
call
aaa
arpl
les
call
lods
es
jp
xlat
jb
mov
jg
mov
in
dec
pop
dec
xchg
cmp
imul
out
xchg
or
test
sub
push
cmp
clc
insb
mov
mov
push
jnp
ljmp
lock
mov
dec
and
test
popf
jbe
xlat
sbb
jno
sbb
pop
mov
jge
xor
or
test
cli
cld
pusha
pop
in
fdivp
mov
fstps
sub
jns
jecxz
imul
mov
push
lahf
dec
add
xchg
test
insl
jl,pt
out
cltd
pop
mov
pop
mov
dec
dec
sbbb
in
jge
and
pop
jecxz
enter
rcll
xchg
jne
fmuls
icebp
dec
mov
jge
aam
das
scas
cwtl
xchg
push
pop
pop
cli
ss
dec
cmp
fsubp
mov
je
sub
fistpll
scas
in
dec
add
addr16
xchg
popf
cmp
es
adc
dec
jge
xchg
jae
fnsave
push
out
mov
inc
testb
cmp
cmp
jl
enter
jnp
shrb
xor
out
jl
and
push
fwait
jle
cli
mov
mov
aam
push
sbb
xor
jne
pop
add
cmp
lret
sub
fimull
movsb
dec
sub
lahf
pop
lods
mov
sub
dec
loope
out
aam
in
fsubs
imul
push
inc
jg
push
mov
popf
icebp
fwait
jle
or
cmp
into
dec
mov
lret
lds
mov
xor
loopne
out
imul
mov
mov
cld
out
clc
jb
lds
push
les
iret
push
pop
push
lahf
inc
adc
mov
inc
and
out
fnstcw
mov
pusha
mov
adc
or
pop
lcall
xchg
roll
mov
pop
stc
sub
xchg
adc
cmp
out
xlat
int
pop
das
shll
into
or
cmp
pop
or
push
addl
fbstp
mov
ficomps
inc
in
outsl
dec
out
repnz
movsl
push
mov
xor
loopne
adc
lret
gs
aaa
inc
fidivrs
pop
out
push
or
adc
add
lret
shl
mov
and
ret
and
mov
jge
mov
sarl
sbb
sbb
mov
fmuls
fbstp
stos
push
js
sbb
mov
and
lret
pop
and
leave
in
arpl
mov
inc
cmp
shll
xlat
scas
jl
and
jle
loopne
and
test
inc
pop
xchg
dec
icebp
sub
repz
add
mov
sub
aam
add
mov
cmp
loopne
iret
aas
jne
testl
out
xchg
and
mov
mov
push
dec
dec
cs
and
cli
or
in
lock
xchg
stc
mov
test
sub
mov
pextrw
xor
pop
pop
call
ret
jno
stos
sti
sahf
mov
pop
cmpsl
jne
add
push
je
mov
int
mov
mov
push
insb
adc
mov
xchg
dec
sub
adc
nop
xor
lcall
jns
inc
fwait
adc
rcrb
sbb
aas
xchg
testb
jns
cmp
xchg
leave
add
push
mov
inc
adc
gs
fistpl
lea
mov
mov
adc
jp
pop
dec
xor
and
jns
cld
movsl
std
shlb
mov
add
push
in
xchg
mov
pop
popl
and
rcl
cmpsb
xchg
cmp
pop
sbb
loopne
ret
inc
sub
add
addr16
mov
mov
sub
xor
lock
leave
aaa
out
std
scas
sub
xchg
clc
cmp
add
adc
les
xor
test
lcall
ljmp
in
dec
es
xchg
xor
test
xor
pusha
lods
addl
cmpsb
adc
scas
sub
inc
sbb
lods
aas
sbb
sub
mov
sub
in
enter
sub
call
mov
mov
mov
outsb
mov
push
dec
inc
insl
sahf
and
in
mov
or
cwtl
adc
call
sub
dec
mov
ja
sbb
adc
and
jecxz
loope
xor
mov
out
out
lea
mov
sbb
push
scas
mov
popa
adc
inc
xor
dec
loopne
mov
pop
scas
or
std
scas
mov
mov
cmp
movl
sbb
cmp
xor
lock
cmc
push
stos
divb
dec
inc
loope
cmp
xor
cmp
mov
jnp
inc
adc
and
je
jecxz
mov
pop
subl
mov
and
push
xchg
bound
iret
xchg
ss
mov
mov
add
cpuid
fsub
inc
adc
inc
lahf
sub
scas
sbb
xor
sub
bound
addr16
mov
sub
shlb
xchg
mov
sbb
cmpsl
aaa
andb
push
aad
subb
pop
mov
sub
cld
out
subl
aam
inc
je
sub
je
sbb
xor
push
out
jno
movsb
insb
push
iret
xor
fistl
jge
rcll
and
rcrb
and
mov
and
imul
adc
sub
jmp
in
push
ja
pushl
push
std
xchg
int3
mov
mov
pop
cmovbe
mov
mov
out
into
je
sub
and
push
cltd
fdivs
pop
fdivs
mov
xchg
fidivrs
xor
nop
add
insl
push
sbb
pop
lret
xchg
cpuid
mov
jae
mov
xchg
das
cmc
loop
mov
inc
fwait
loop
mov
iret
pop
mov
add
push
gs
clc
xor
jge
lret
mov
in
or
movsb
mov
ret
jl
fs
and
cs
push
inc
cmp
mov
and
jae
cmp
je
jne
out
pop
xchg
std
and
mov
lahf
add
test
repnz
lods
addr16
mov
lcall
mov
loop
sbb
mov
mov
std
sbb
sub
daa
jl
inc
jle
pop
pop
rcrl
cmp
jg
rcrb
insl
int
or
lcall
xor
jno
stos
incb
cs
jl
push
cmpsl
sahf
mov
or
push
xor
loop
inc
std
inc
ds
push
gs
lahf
xor
aaa
or
sub
gs
push
arpl
in
bound
out
or
xor
in
lods
jge
pop
cmpsl
jns
inc
add
mov
sub
and
mov
dec
xlat
add
out
scas
into
stos
dec
xchg
add
lret
repz
fwait
rcll
or
sub
pop
dec
psubb
mov
rclb
scas
sub
cmp
sub
push
push
inc
outsb
pop
cli
cwtl
jb
mov
mov
stos
mov
push
mov
jmp
lods
in
leave
out
iret
fwait
std
or
and
mov
leave
fcoms
mov
mov
cmc
fs
cmp
stos
add
or
pop
sub
add
add
cmc
mov
test
push
aaa
idiv
loopne
mov
fwait
push
imul
iret
out
add
push
lea
out
and
shl
fwait
xchg
xchg
mov
call
sub
fsubs
ret
mov
loopne
mov
iret
in
cld
dec
shrb
int3
add
les
push
ret
jae
imul
aam
inc
loop
int
pop
push
int
sbb
xorl
pop
inc
cmp
arpl
imul
ffreep
mov
mov
mov
aas
sub
cmpsl
or
ficomps
pop
test
and
addr16
imul
daa
pop
test
rorb
sbb
shll
daa
cmp
sti
dec
in
dec
lods
addr16
push
outsb
push
sub
lret
dec
sub
in
sarb
mov
cmp
iret
and
imul
push
mov
les
out
adcl
push
iret
outsl
fs
mov
imul
pop
pop
xchg
push
or
movb
sti
fmuls
cli
aas
push
fstl
ret
sub
repz
add
int
call
jns
push
imulb
imul
call
mov
and
stos
inc
jno
lahf
addr16
call
out
or
mov
jmp
fisubrs
ret
bound
fildl
jge
fiaddl
fs
inc
inc
movsb
mov
xor
adc
sarl
outsb
pusha
sub
push
dec
lds
push
inc
fwait
adc
pop
push
pushf
cli
push
mov
xchg
lret
arpl
and
jb
cmpsb
cmp
fisttpl
imul
lcall
and
stc
push
adc
inc
pop
inc
fsubs
push
cwtl
out
stos
xchg
pop
or
mov
into
aam
xor
cltd
xor
push
fists
dec
imul
popf
adc
in
jge
pop
mov
das
or
xor
pop
cmpsb
push
jo
xor
or
pop
shll
and
in
jbe
in
incl
ja
push
sbb
inc
mov
xor
cmpsb
lods
lea
int
pusha
repz
mov
sub
ss
jg
lods
xor
xor
imul
scas
pop
out
and
mov
cmp
repz
stos
cwtl
leave
jno
popf
imul
mov
sub
pushf
mov
aaa
add
jbe
sarl
fiadds
push
sub
enter
ljmp
mov
jecxz
mov
add
scas
or
daa
call
cmp
filds
jno
push
jl
or
mov
adc
cs
int3
jmp
imul
cmp
je
imul
and
lods
sbb
mov
ret
cld
jecxz
fimuls
fnsave
and
cmc
mov
int
push
push
and
addr16
cmp
inc
call
shlb
pop
inc
sbb
fdivl
pop
mov
mov
dec
adc
sbb
repz
push
movsl
insb
dec
jae
mov
fstpt
push
jae
adc
pop
push
sub
mov
jmp
sahf
mov
sub
adc
pop
cmp
pop
faddl
xchg
adc
push
stos
decl
jne
cmp
push
pop
imul
in
orb
xor
repnz
sbb
adc
out
loop
lods
sti
lcall
push
add
mov
sub
out
out
push
mov
jp
push
ret
in
mov
lret
cmp
outsl
std
push
lds
std
sbb
je
lret
iret
shlb
adc
test
push
out
jnp
outsl
or
dec
iret
inc
popl
xchg
in
pop
sub
dec
stc
repnz
cmp
cmp
lahf
sbb
pop
shl
mov
mov
jne
pop
les
mov
xor
push
jmp
aad
xchg
mov
jne
lods
test
rcll
scas
scas
mov
shlb
std
imull
enter
push
adc
dec
ljmp
mov
adc
and
sbb
xlat
xor
mov
pop
mov
push
mov
sub
push
and
mov
add
push
add
loope
pop
and
or
fcmovnbe
push
push
mov
push
in
test
mov
andb
in
pop
mov
out
cmp
xchg
in
jmp
mov
and
xchg
sub
mov
lcall
repz
aad
pop
int
or
mov
and
in
mov
les
mov
lret
mov
inc
xlat
pop
movsb
pop
scas
or
mov
adc
xor
lock
add
jae
xor
mov
mov
jge
jg
shl
icebp
and
sub
push
and
jnp
and
xor
mov
push
lock
and
scas
das
ret
loop
ljmp
shlb
popf
xchg
orb
lea
push
in
cmpsl
cwtl
cli
sbb
xchg
dec
mov
pop
sub
mov
out
fidivrs
inc
jo
cmp
pop
mov
and
jge
insl
fisubl
or
hlt
or
into
fldcw
xchg
loope
outsb
add
loopne
pushl
jo
xchg
in
imul
or
and
jecxz
mov
jns
cmp
test
inc
int
xchg
or
xchg
cli
or
add
out
cmc
adc
mov
push
and
loop
pop
daa
mov
pop
add
mov
xlat
sarl
cmp
pop
aam
clc
insl
mov
hlt
out
filds
xor
xchg
xchg
cmpsb
out
rcl
push
dec
mov
inc
enter
cli
loopne
and
test
scas
push
lods
es
and
mov
cs
sub
sar
movsl
test
mov
inc
push
clc
cli
aad
mov
jmp
sub
inc
les
add
push
add
inc
in
add
testl
data16
jb
jg
dec
sbb
add
jl
pop
hlt
jnp
loope
sub
push
mov
xlat
add
sbb
fildl
cli
stc
and
cmp
fiaddl
and
mov
mov
test
out
out
addb
movsb
movsb
pushf
adc
pop
push
xchg
cmpl
js
sub
jb
repnz
jbe
xchg
cmpsb
pop
cs
arpl
adc
push
bound
xchg
dec
jecxz
push
cmp
push
cld
add
inc
iret
loope
dec
imul
xor
cmpsl
mov
adc
push
jae
daa
leave
lret
push
add
mov
sub
ds
imul
jl
fimuls
out
inc
stos
jo
xor
add
iret
xchg
jg
inc
pusha
popf
dec
sub
fcoml
pop
jmp
add
and
lret
hlt
or
fldenv
cli
popf
ret
rorb
dec
pop
aaa
sub
and
stc
mov
ret
fwait
outsb
mov
insb
lret
loop
xor
mov
scas
idivb
ret
mov
add
outsb
sbb
xor
loop
push
rclb
mov
jnp
push
lods
pop
test
mov
bound
or
inc
pusha
sahf
xchg
inc
les
xorb
ljmp
add
rcrb
or
xchg
mov
jno
jl
xor
loop
jl
test
bound
jp
fbld
jnp
stos
pop
jge
test
xchg
xchg
in
outsl
icebp
sbb
fcmovu
pop
mov
fwait
and
jle
dec
out
jns
pop
jge
out
lods
cli
cmp
push
sub
outsb
fldcw
and
mov
add
into
push
mov
push
sbb
out
jb
lods
cmpsb
pop
push
repnz
ss
sbbb
xorl
rolb
sub
js
mov
or
pop
xor
jne
clc
outsb
pop
cmp
adc
jnp
sub
jecxz
cmp
xchg
fbld
adc
movsl
push
fwait
jns
rcrb
mov
insl
je
je
mov
and
or
inc
mov
in
insl
and
push
in
add
mov
in
nop
push
test
xchg
cmp
and
xor
movsl
ss
nop
jo
ds
paddusb
jge
faddl
jle
adc
int
inc
mov
adc
in
je
je
call
mov
sbb
leave
outsb
jp
xor
add
test
add
incl
hlt
mov
cmpb
mov
lahf
rol
dec
xchg
jno
cs
and
add
jecxz
std
rorb
sub
adc
loopne
nop
sbb
xchg
mov
stc
jno
xor
jg
aad
andl
add
jmp
cmp
enter
stos
ds
or
mov
outsl
mov
or
out
jle
sbb
je
lahf
ss
sub
mov
and
dec
loop
loop
fcompl
dec
adc
sub
stos
pusha
mov
sbbb
test
mov
pop
add
sub
nop
aam
mov
sahf
ret
das
subb
and
stos
lret
dec
xchg
cmp
pop
out
push
cmp
cmc
mov
leave
fisttpll
add
lds
fnsave
hlt
ljmp
xor
jae
or
mov
xchg
add
fcoms
add
fistl
push
add
inc
and
frstor
out
add
enter
stos
xor
les
lcall
out
jo
std
sub
iret
pop
outsb
mov
pop
push
or
or
mov
pop
xchg
xchg
pop
loopne
popf
icebp
addr16
mov
jbe
xor
sub
xchg
cmpsb
ds
pusha
push
out
sbb
cmp
clc
xchg
mov
mov
jle
sbb
sbb
ds
and
stos
push
test
lods
cmp
inc
adc
push
add
mov
cli
test
push
aad
mov
jns
adc
push
xchg
xchg
lods
sub
lret
fs
daa
ja
imul
jecxz
cwtl
adc
pop
ja
pushf
addr16
jno
mov
es
inc
mov
cmpsl
adcl
add
icebp
push
call
loope
or
cmp
insl
or
lods
daa
mov
mov
cs
inc
dec
sub
pop
adc
jg
cld
int3
int3
inc
jbe
shrl
xlat
in
xor
mov
movsb
out
insl
lret
inc
or
rolb
xchg
push
jl
xchg
fiadds
jns
mov
sets
mov
je
mov
fnstenv
int
xchg
lods
xchg
lcall
xor
mov
mul
cmpsl
in
pop
outsl
imul
les
mov
in
add
outsl
pop
cwtl
or
in
orb
push
jecxz
mov
adc
cwtl
sahf
out
fildl
or
imull
jle
sub
out
clc
repnz
mov
adc
sbb
and
cld
fdivrl
aas
push
mov
sbb
je
cmp
shl
cmp
mov
pop
or
pop
fcoms
fcmovnb
and
and
or
pushl
outsl
pop
mov
loop
andb
cli
push
mov
sbb
jge
jmp
leave
ror
js
sbb
std
xchg
sbb
cmpsl
xchg
fadds
xchg
mov
mov
xchg
push
mov
push
dec
jbe
andb
daa
pop
fistps
bound
mov
sbb
jecxz
dec
jne
sub
out
add
rolb
adc
rdpmc
out
push
add
adc
xchg
out
into
clc
jg
gs
fwait
fs
lahf
out
in
out
cli
test
jnp
mov
pop
mov
out
jae
call
cmp
out
jge
jmp
clc
mov
iret
loopne
pop
xchg
push
jne
lock
cmp
mov
inc
and
sub
jno
adc
scas
pop
mov
pop
nopl
mov
fsubr
out
dec
clc
mov
fbstp
push
lea
mov
mov
pop
adc
xchg
mov
aad
loopne
dec
xlat
mov
insb
out
jp
mov
scas
mov
lea
cltd
loopne
test
test
cmp
lea
out
mov
movsl
clc
sbb
jb
dec
cmc
push
imul
sbb
add
dec
add
lcall
loope
movsl
adc
pop
adc
xor
sbb
adc
mov
mov
fisttpl
pop
pop
popf
cli
out
nop
inc
outsb
cmp
aas
mov
aaa
enter
mov
js
xor
ds
inc
clc
test
adc
pop
mov
sbb
jae
ret
cli
cltd
mov
mov
loop
dec
aas
je
outsb
push
dec
scas
idivl
cmpsb
mov
lcall
es
repz
xlat
adc
mov
fidivs
fs
push
mov
pop
mov
inc
xlat
enter
repnz
rolb
mov
pop
pop
loopne
ret
jge
ljmp
jmp
cli
pop
lock
inc
inc
lahf
cmp
mov
clc
mov
imul
mov
clc
ljmp
mov
dec
push
jnp
or
sbb
sub
cmp
lret
call
sti
fmuls
mov
js
dec
jnp
or
sbb
sub
cmp
lret
call
sti
fmuls
test
adc
mov
js
dec
jnp
or
sbb
sub
cmp
lret
call
sti
or
rol
dec
jnp
jnp
imul
testl
xor
fs
pop
push
sub
fldenv
movsl
fcom
test
mov
jno
add
pop
push
sub
jne
gs
xchg
call
movsl
fcoms
mov
cwtl
lods
push
std
pop
dec
sub
sbb
call
sarb
out
jmp
sbb
xor
or
scas
orl
or
mov
icebp
add
stc
cmp
lock
mov
mov
arpl
mov
cmc
mov
leave
jmp
inc
jne
and
pop
pushf
and
jge
push
dec
ret
mov
movsl
mov
mov
fldenv
leave
sub
leave
rsm
mov
mov
out
pop
test
xor
sub
in
ljmp
aad
mov
out
cmp
aaa
loopne
nop
sti
lds
ljmp
sbb
add
cmpsb
stc
subl
cmc
mov
lea
push
js
dec
and
cmp
ret
sbb
pop
clc
ret
enter
test
mov
jl
ja
inc
dec
pop
pop
cmp
push
add
dec
xchg
xchg
stc
shrb
stos
fstpl
pusha
sbb
cmp
and
xor
xlat
xorl
fisubs
push
cmp
push
push
inc
cmp
sbb
enter
test
mov
adc
dec
and
cmp
sbb
enter
test
mov
adc
movsl
in
lcall
pop
cld
add
mov
cmp
inc
es
mov
lds
mov
push
stos
push
dec
cmpsb
pop
pop
adc
fidivrl
push
ljmp
sarb
adc
int3
mov
fstpt
add
pop
fmul
out
pop
hlt
js
push
push
sub
pop
cmp
xchg
mov
mov
inc
dec
movsb
or
es
mov
jl
jle
into
in
movsl
pusha
movsl
sub
xor
aam
outsb
data16
push
int
mov
testb
outsl
int3
sub
and
mov
mov
add
into
mov
lcall
out
xchg
hlt
out
cwtl
hlt
and
jb
in
push
call
loop
inc
dec
cs
mov
mov
jnp
pop
test
or
sub
and
push
jmp
jae
aas
cld
ficoms
sub
popa
cmc
and
adc
rolb
imul
jmp
xchg
fiaddl
sub
scas
pop
js
add
mov
jmp
aad
aad
push
cld
adc
push
sbbl
mov
fsubp
into
sub
cmp
cltd
cwtl
push
arpl
fimull
movsl
leave
mov
lock
ret
xchg
adcl
andb
sub
cli
imul
sub
es
cld
rclb
imul
daa
cmp
or
cmp
rcrb
push
add
test
rcrl
inc
xorb
je
dec
popf
xchg
scas
addb
call
lret
sub
jg
ja
pop
roll
mov
mov
movsb
push
lahf
jno
or
loop
out
lds
jae
or
add
ret
push
shl
daa
fcmovu
or
and
iret
and
sub
jge
mov
movsb
movsl
sbb
fcom
mov
int
push
mov
jo
pop
in
jns
call
movsl
inc
or
gs
xchg
call
mov
popa
js
adc
dec
inc
scas
cli
mov
addr16
out
xchg
or
mov
sbb
cmp
ret
pusha
lds
in
mov
pop
scas
cmp
mov
das
or
js
hlt
push
data16
xchg
cwtl
and
xchg
jb
xor
cld
gs
in
mov
mov
insb
pop
pop
or
jg
mov
movb
divl
or
es
lods
cmp
lea
sbb
jecxz
cli
cwtl
stc
jg
push
scas
push
pop
add
movsl
fdivrs
cmpsb
int3
sub
cmp
push
scas
inc
int3
repnz
hlt
dec
mov
in
popf
popa
mov
inc
pop
lea
in
idivl
inc
test
push
dec
dec
xor
and
popf
enter
call
call
orl
inc
push
push
pop
rolb
xchg
cmp
rcll
push
mov
dec
rol
sbb
push
cmc
cld
std
sahf
shll
insl
insl
bound
or
stos
dec
cwtl
xchg
xchg
jne
mov
fadd
push
and
xor
fistps
and
mov
add
cmpsl
or
cltd
insl
add
lret
adcb
cli
xor
jnp
inc
aad
dec
lahf
inc
loope
sbb
movsb
pop
addr16
pushf
int
scas
pop
js
sti
adc
cmc
pusha
push
iret
movups
leave
mov
mov
mov
stos
fwait
leave
xchg
loopne
mov
loop
popa
xor
lcall
lret
outsl
lock
add
in
imul
xor
fucomp
mov
cmp
cs
hlt
xor
imul
outsl
inc
aam
enter
inc
popa
out
pusha
popa
test
mov
into
dec
mov
lahf
scas
hlt
or
shlb
loop
or
lahf
fcomps
test
call
cmpsb
dec
aad
adc
sbb
lods
inc
lret
xor
cmc
dec
mov
aam
adc
mov
loope
movsl
or
xchg
les
dec
push
imul
cld
stc
sbbl
lods
inc
ret
test
mov
mov
aas
xor
shrb
pop
inc
pop
ja
test
movsl
pop
roll
cmp
stos
sub
clc
test
out
add
test
stc
out
imul
std
ret
out
daa
adc
inc
pop
fnstsw
in
iret
test
adc
shll
sbb
dec
inc
je
mov
mov
in
mov
imulb
xchg
out
ljmp
iret
sbb
lods
push
fnsave
pop
inc
dec
outsb
clc
stos
mov
movsl
sub
roll
pop
jne
fldcw
add
movsb
xor
pop
inc
xchg
sbb
jg
rorb
add
pop
pop
jbe
add
shl
rcl
aas
stos
mov
mov
cs
or
mov
adc
pop
ss
repnz
cltd
and
lock
arpl
ja
xchg
icebp
adc
adc
jmp
add
mov
adc
negl
cltd
cmp
stos
mov
mov
pop
call
sbbb
push
jnp
fs
enter
adc
pop
jb
ljmp
jg
sar
jbe
sub
roll
jl
mov
movsb
adc
jp
aad
mov
adc
out
pusha
adc
cmp
mov
jmp
mov
test
push
gs
bound
test
aaa
sar
push
adc
inc
imul
loopne
jae
push
sbb
in
jne
sub
loope
rcrb
inc
out
int3
cld
mov
out
cld
xchg
pop
ret
mov
push
and
jns
repz
fbstp
call
dec
mov
je
out
push
es
jp
in
mov
jo
dec
or
sub
jmp
inc
mov
mov
test
pop
xor
mov
inc
inc
sub
inc
or
mov
sbb
add
xor
lcall
ja
push
add
test
pop
in
adc
es
insl
sub
in
sub
push
add
inc
jl
mov
fistpl
repz
ret
ja
sbb
pushf
ficomps
aad
xlat
xlat
out
adc
mov
scas
sbb
imul
sbb
sbb
or
add
sbb
jecxz
shl
addr16
sub
push
adcl
sbb
dec
or
dec
cli
sbb
test
push
push
pop
inc
test
xor
push
sbb
lret
mov
inc
out
mov
add
ret
iret
push
pushl
mov
icebp
adc
jmp
dec
sub
cmp
repnz
xor
mov
lea
test
cmpsl
and
leave
adc
lds
pop
add
fstps
repnz
popf
out
ret
jb
inc
clc
cmpsb
xchg
sbb
pop
add
mov
daa
outsl
adc
dec
xor
xchg
lcall
push
cmp
cmp
jle
repz
mov
dec
ret
xchg
imul
ja
cld
cmp
loopne
sub
inc
movsb
stos
les
fdivr
jl
fimull
jns
loopne
pop
pxor
inc
dec
shlb
std
fwait
adc
lods
jmp
jb
in
or
mov
and
adc
lret
jl
adc
repz
cwtl
test
in
fucomip
sbb
sahf
cmp
fists
outsb
mov
fisubrl
aad
das
adc
adc
mov
mov
sub
rorw
xchg
mov
push
pop
xchg
jno
add
or
dec
xor
ljmp
js
mov
les
mov
adc
lea
aad
in
test
or
push
mov
adc
test
addr16
rcrb
sbb
mov
scas
sub
fmull
jg
lcall
fsubrp
jno
pusha
out
sub
insb
add
fmulp
test
jo
movsb
xlat
mov
sbbb
dec
mov
subb
cltd
iret
repnz
pop
pop
cmpsl
lahf
jl
push
aad
outsb
pop
ss
das
lcall
cltd
mov
mov
cltd
adc
mov
inc
int
insb
adc
cld
jge
pop
pop
mov
repnz
cwtl
loope
push
rorl
cld
push
imulb
adc
insl
mov
cwtl
in
dec
xchg
adc
pop
mov
mov
xlat
lcall
mov
add
mov
and
mov
fidivl
or
jbe
dec
cmpsl
data16
mov
imul
icebp
pop
dec
inc
mov
jnp
xor
add
pop
xor
inc
bound
sub
jmp
push
or
arpl
dec
mov
ret
dec
movsl
jmp
or
movsb
and
testb
cwtl
dec
jb
lahf
insl
mov
push
jg
mov
jbe
push
sbb
mov
movsl
dec
mov
inc
fucomip
lahf
xchg
les
sbb
lahf
or
repz
xorl
jl
push
cmp
inc
inc
mov
shlb
and
pop
sub
andl
test
fsub
mov
mov
add
push
adc
pop
popa
cmp
imull
push
mov
and
clc
mov
mov
cli
jle
cmp
sbb
das
jno
fs
inc
push
mov
mov
mov
test
mov
inc
mov
sub
lcall
or
mov
cmc
popa
pop
ret
aad
jno
inc
dec
or
gs
and
das
sbb
jno
lahf
jb
sarb
and
jl
xor
sub
jle
jecxz
push
mov
scas
cld
cmpsl
cmp
ljmp
lahf
das
lret
bound
dec
insl
fwait
and
outsb
mov
mov
mov
xchg
gs
xchg
lds
push
in
inc
sub
inc
cmova
leave
fsubp
add
cmp
or
inc
inc
loop
mov
lock
insb
enter
pop
mov
cmp
sub
dec
repnz
cmp
mov
push
in
push
pop
mov
mov
mov
fwait
mov
cmpsb
add
push
fsts
insl
clc
sub
out
jb
outsb
in
or
bound
pushf
loope
push
ror
inc
inc
rcll
test
sbb
xor
mov
das
lea
pop
iret
push
arpl
or
arpl
fcomps
js
cmp
fistpl
clc
pusha
cmpsl
mov
addr16
cli
popa
cmp
fildll
mov
inc
rcll
and
or
into
aaa
fs
sbb
adc
repz
jge
pop
mov
loopne
xor
shrl
faddl
lret
jbe
lods
jmp
test
adc
cmp
cmp
into
jg
or
je
pop
pop
cmpsl
rclb
ret
add
sahf
adc
fildl
rcrb
cmp
int3
ss
test
mov
xchg
mov
dec
jns
in
clc
loopne
lds
mov
fwait
push
or
jae
and
imul
scas
inc
mov
stc
mov
xlat
sub
mov
inc
push
pop
aas
and
leave
pop
mov
mov
cmp
fsub
outsb
cltd
and
mov
ljmp
fsubl
ror
adc
jno
pop
mov
das
add
movsl
adc
add
push
push
cltd
sbb
leave
flds
mov
dec
icebp
cmp
push
call
pop
push
pop
cmp
xor
jno
cmp
std
mov
sbb
lret
sub
pop
add
or
xor
jmp
dec
sbb
lock
loopne
jp
gs
ss
and
jl
sbb
or
xchg
mov
pop
adc
xchg
sbb
gs
sbb
jle
xchg
aaa
imul
xor
jmp
jb
cmpb
arpl
loopne
out
lea
fisubs
clc
jp
and
push
sub
inc
sub
insb
shl
subl
xchg
ret
push
xorb
mov
cli
sbb
adcb
popf
sahf
push
stos
and
inc
fnsave
mov
xor
cmp
and
popa
xchg
add
ret
adc
popa
daa
jo
roll
inc
mov
mov
rclb
or
pop
jle
and
mov
xor
mov
sahf
sbb
cmp
push
aaa
or
outsl
or
rorb
inc
stos
sahf
aam
xchg
std
mov
push
cmp
or
mov
inc
fmulp
fs
dec
and
movsb
dec
iret
push
lock
adc
xchg
mov
popf
dec
push
lret
rcr
jns
sub
mov
pop
jbe
jmp
mov
je
sbb
mov
sbb
jle
push
xchg
mov
lods
daa
ret
arpl
mov
and
or
aam
movsb
scas
andb
cli
cmp
shlb
sbb
dec
jg
fisttps
mov
jne
bound
adc
adc
icebp
sbb
ds
adc
lret
sub
sarb
das
or
sbb
sbb
push
roll
xchg
cmp
or
js
in
mov
cmc
bound
fdivl
mov
cmc
les
mov
fstl
inc
cmp
xchg
and
test
cmp
rcrb
addb
int
pop
leave
js
cmpsl
cmc
addb
jl
jo
inc
insl
pop
mov
or
cmpb
add
jne
loopne
fwait
adc
test
fstps
mov
cmpsb
cltd
shrl
sub
jmp
xor
xchg
mov
dec
out
xchg
fs
xor
std
popf
cmp
inc
pop
fwait
push
xorl
lds
push
fisubrs
jecxz
sub
xchg
out
push
sbb
mov
lods
shr
jl
mov
lret
pop
stos
pop
stos
lcall
and
inc
pop
leave
pop
inc
mov
divl
add
mov
inc
push
pop
dec
inc
ja
inc
addr16
xor
out
data16
leave
pop
cmpsl
movb
add
inc
mov
into
pop
xchg
push
xchg
cmp
mov
jb
out
mov
add
orb
shr
push
xchg
push
push
or
dec
jle
leave
dec
xlat
movsw
fmuls
in
imul
add
cmp
cmc
dec
push
insb
sbb
dec
xchg
pusha
xor
jne
xchg
jb
and
leave
adc
popf
inc
fisubs
inc
add
in
lods
inc
imul
cmp
rclb
fildll
mov
jb
mov
push
stos
sbb
fs
pop
mov
inc
int
cmc
call
cld
push
rolb
enter
out
mov
in
cld
data16
xor
or
inc
mov
dec
faddp
dec
movsb
or
and
iret
or
sbb
add
int
mov
ficoms
sub
and
pop
mov
fdivs
jmp
push
pop
jecxz
mov
dec
xor
stos
push
jl
imul
nop
xlat
sbb
mov
and
fidivrl
mov
cmp
sbb
das
sbb
out
cwtl
lcall
in
gs
sub
in
out
mov
push
popa
mov
sub
push
popf
nop
in
fmull
addr16
mov
mov
xor
dec
mov
add
pop
and
adc
jle
sarb
lret
mov
into
mov
jbe
sahf
aad
dec
lock
xchg
in
inc
inc
mov
jge
pushf
mov
popa
cmc
int3
ficompl
jns
ret
xor
stos
push
mov
jmp
fwait
imul
mov
lods
inc
xchg
push
enter
jecxz
cmpsb
pusha
jg
scas
and
inc
cmp
add
mov
repz
inc
mov
xchg
cld
scas
or
lea
stos
hlt
movsb
scas
add
cmp
stc
ljmp
jl
test
inc
inc
cmpsb
test
pop
daa
clc
outsl
or
fs
push
pop
and
pop
xlat
mov
sbb
pushf
xlat
out
iret
addr16
les
lds
movsl
lret
add
mov
pop
jecxz
adc
dec
cmp
cmpsb
pop
lcall
jle
mov
arpl
jp
test
pusha
sbb
pop
mov
push
addb
mov
inc
jns
xor
in
xor
retw
popf
fwait
mov
jno,pt
out
cmp
inc
inc
jmp
inc
out
fwait
pop
and
outsb
inc
add
xchg
xchg
out
fwait
xchg
adc
stos
rcrl
or
mov
push
xchg
xchg
jle
mov
stos
push
pushf
push
cmp
nop
fildl
inc
or
push
in
adc
inc
imul
add
mov
imul
js
push
adc
cmp
jbe
iret
pop
je
faddl
hlt
movlps
mov
add
sub
or
inc
cmp
jb
mov
movl
jl
mov
mov
repnz
and
divb
jno
xchg
out
mov
push
cmp
fcomps
mov
adc
sbb
mov
push
cs
loop
mov
jge
pop
imul
or
or
jmp
insl
push
push
shrl
rol
or
jge
scas
pop
and
aas
or
mov
arpl
dec
and
mov
pop
icebp
or
sbb
mov
sbb
addb
sbb
mov
nop
jge
jnp
movsb
inc
dec
mov
mov
cmp
mov
shl
call
insb
fbld
push
and
mov
stc
out
aam
ret
or
inc
sahf
mov
test
dec
sub
cli
flds
xorl
ja
push
or
sbb
aaa
sub
dec
add
xor
lods
sub
push
dec
push
or
jmp
cmp
or
push
imul
xlat
or
in
jnp
int
push
imul
fisttpll
jecxz
wbinvd
jns
outsb
and
or
movsl
pusha
dec
cmp
negl
xor
dec
mov
inc
jb
inc
push
adcb
xor
lock
xor
mov
lock
pop
ljmp
fs
or
in
aad
xchg
ds
mov
dec
sub
or
test
ret
jge
push
inc
cmp
inc
mov
gs
dec
xor
inc
adcb
mov
test
pop
or
aaa
sbbb
and
mov
mov
lret
push
test
sub
mov
vcvtdq2pd
and
push
popa
adcl
or
xchg
out
xchg
frstor
push
cmp
dec
cmp
push
mov
mov
and
out
dec
out
arpl
or
dec
hlt
mov
ljmp
xchg
negb
movsl
cmp
and
maskmovq
testl
add
scas
sub
and
das
sbb
movsb
stos
xchg
fbld
cmp
cmp
mov
pop
jnp
xor
sub
adc
scas
enter
cmpsl
fstl
hlt
outsl
lret
insb
dec
pop
push
mov
xor
pop
jo
inc
in
scas
lcall
out
fsubrp
shl
fst
mov
push
ljmp
add
std
inc
push
leave
repz
daa
inc
aaa
dec
popa
jbe
mov
and
insb
jle
insl
das
push
pop
mov
fisubl
mov
sbb
dec
mov
xchg
out
shlb
push
pop
aaa
in
sbb
scas
call
test
shrl
ds
js
jge
add
dec
xchg
pop
sub
pop
sub
push
pop
adc
rorl
adc
mov
imul
cwtl
dec
and
test
adc
inc
jecxz
pop
sub
adc
hlt
jle
cli
mov
es
sub
mov
movsb
and
sbb
loop
adc
jnp
shlb
inc
pop
jo
sarb
lods
clc
lcall
mov
jge
outsl
cmp
inc
movsb
icebp
js
enter
jle
mov
add
mov
mov
jno
mov
int
xor
mov
lret
stos
dec
cmp
mov
xchg
inc
incl
jge
push
push
mov
sub
dec
sbb
sub
in
sub
cli
mov
lods
jmp
hlt
jb
jmp
mov
or
inc
sbb
fcomps
hlt
mov
inc
sbb
push
test
pop
mov
sbb
arpl
loope
push
jae
pop
imul
adcl
jmp
ljmp
lods
and
pop
inc
movsw
inc
inc
fisubl
lcall
push
in
mov
dec
xorb
movsl
lock
data16
popf
test
cwtl
inc
shll
fs
outsb
adc
mov
jle
jb
and
cmp
sbb
enter
test
mov
adc
dec
and
cmp
sbb
enter
test
mov
adc
dec
and
cmp
movsl
sbb
enter
test
mov
add
js
dec
add
cmp
in
xchg
call
movsl
scas
mov
ja
test
xchg
sub
jns
dec
xchg
ss
dec
add
adc
mov
push
jmp
test
xchg
sub
js
push
adc
cltd
cmp
fdivs
pushf
cmp
fdivrl
push
sbb
mov
dec
out
mov
and
movsl
dec
ret
insl
xchg
ret
and
xor
cmp
push
lods
ret
insl
ret
dec
jno
popf
mov
cmp
fnsave
test
push
pusha
ret
cmp
fldenv
popf
adc
pusha
mov
push
lret
push
xor
xor
test
inc
pop
test
add
mov
cmp
cmp
push
mov
adc
or
out
lods
jne
aad
sbb
sub
push
add
test
add
mov
mov
mov
sub
jne
loop
dec
add
aaa
xlat
jecxz
sar
sar
cwtl
lods
pop
in
gs
jmp
jne
dec
cmp
sarb
push
sbb
or
mov
dec
call
jmp
pop
rorl
mov
test
cmc
cmp
enter
lret
push
clc
inc
mov
scas
pop
stos
sbb
lret
imul
cmpsb
inc
fnsave
and
popf
jle,pt
mov
stc
jnp
jge
jo
dec
aad
in
cmc
dec
add
cwtl
xor
call
test
xchg
sub
js
push
add
cwtl
xor
call
test
mov
iret
test
wrmsr
lods
and
push
mov
ljmp
sub
inc
movsl
popaw
jae
dec
jecxz
or
outsl
xlat
scas
loopne
stos
or
lods
aad
inc
push
push
mov
in
fdivrs
dec
lcall
std
push
inc
lret
pop
gs
in
je
xlat
cmpsl
aam
or
iret
out
dec
cmp
gs
ficompl
xchg
stos
mov
lock
mov
and
pop
sbb
cmp
dec
fwait
push
and
jns
dec
jns
mov
mov
xchg
lods
xlat
fisttps
mov
iret
xor
xlat
jns
sbb
mov
sarb
fnsave
repnz
ud0
pop
pop
out
lods
cs
cwtl
imulb
cmc
mov
in
cld
sub
pop
icebp
ficomps
mov
mov
and
andl
push
pop
lods
nop
mov
mov
in
push
mov
sbb
into
cltd
jecxz
pop
cmc
adc
mov
sbb
push
pop
ret
stc
xchg
push
push
and
dec
pop
mov
inc
mov
test
movsb
addr16
lds
sbb
fidivs
mov
sub
and
lcall
sbb
sbbb
icebp
mov
xchg
fstps
or
lods
incb
inc
sti
aaa
or
clc
rclb
shll
bound
mov
mov
xor
mov
mov
shlb
adc
cmp
pop
mov
and
cmp
mov
adc
sbb
ret
mov
repz
pop
lds
daa
je
rclb
sub
pop
bnd
xor
push
in
dec
rolb
adc
imul
imul
sar
adcb
lock
cmpsb
xlat
mov
js
dec
dec
cmpsl
xor
mov
iret
out
mov
jl
subb
cmpb
push
dec
dec
and
push
aad
cmpsb
cli
gs
sub
mov
in
js
fisubl
push
repz
add
std
lret
fwait
cmp
adc
mov
jl
and
cltd
stos
stos
aam
cld
xor
call
stos
cmp
clc
cmp
pop
xchg
mov
fcmovne
jae
mov
mov
add
inc
xor
inc
mov
loopne
imul
jno
xchg
and
sbb
enter
es
out
mov
aad
pop
dec
fisubl
mov
cwtl
or
xchg
cs
imulb
call
add
push
in
negb
xor
int
and
dec
in
imul
mov
aam
pushl
pushl
icebp
sbb
fidivrl
movsb
cli
mov
and
mov
std
aas
test
and
das
fwait
nop
jne
push
clc
mov
adc
mov
jmp
dec
call
inc
test
push
loopne
out
and
or
insb
dec
jo
ja
aad
rcll
mov
sbb
sbb
sar
jno
push
je
in
sbb
roll
dec
add
mov
cmp
mov
mull
sub
rorb
pop
adc
inc
jnp
rcll
mov
in
in
jmp
mov
xor
cmp
jns
and
lret
or
sbb
mov
pop
sub
fsubrl
xor
dec
iret
jecxz
or
in
subl
out
jmp
mov
jge
dec
jg
mov
sub
jecxz
movsb
mov
pop
cmp
push
mov
mov
dec
or
popa
cli
dec
insl
aas
psrlw
cmp
jnp
mov
or
outsl
fsubl
scas
sahf
inc
push
in
arpl
les
and
cwtl
fldcw
out
cmpsl
cmpsb
dec
daa
push
out
xor
ret
pop
sub
fsubs
pop
sbb
add
mov
xchg
pop
mov
mov
and
pop
adc
outsl
mov
cmp
adc
jg
dec
pop
mov
push
xor
repz
pop
fimull
jle
inc
movsl
inc
imul
outsl
lock
mov
cmp
cmp
hlt
sbb
je
aaa
jb
mov
mov
inc
lret
sahf
ss
std
stos
xchg
mov
jg
mov
inc
mov
insb
pop
xchg
outsb
adc
cwtl
cltd
push
pop
repz
sub
aaa
push
xor
movsl
or
push
push
pusha
xor
inc
loop
ret
pop
loop
push
test
negl
sbb
imul
inc
cmpsb
add
outsl
mov
cmp
jae
gs
jp
inc
jge
pop
add
js
lret
adc
cmp
imull
in
mov
add
push
out
test
loope
mov
dec
dec
jnp
out
imul
xchg
dec
dec
mov
sub
dec
stos
stc
dec
in
cmp
add
in
cmc
loop
std
or
ds
or
xor
and
jg
sub
mov
mov
bswap
sub
mov
ljmp
inc
lds
xchg
in
int
jne
in
rcrl
adc
xchg
cmc
cmp
jp
mov
sbb
sub
push
cmpl
lret
jo
add
rol
insb
pusha
lods
pop
mov
or
icebp
jmp
pushf
test
and
rcll
int3
push
aad
sub
ficompl
jle
sbb
lahf
lret
ret
xchg
hlt
adc
shlb
ficoms
popa
ficompl
dec
into
test
add
lods
ret
js
inc
scas
adc
jmp
push
jg
fcomps
sub
pop
loopne
fisttpl
frstpm(287
inc
inc
jle
jb
aas
push
int
jecxz
lds
shr
outsl
pop
mov
ficompl
fwait
push
adc
jp
je
inc
xchg
and
adc
in
movsb
and
jnp
ret
lret
add
xchg
xor
jmp
cli
lea
add
rcl
sbb
cmp
pop
or
ds
lods
repnz
add
iret
fisttpl
dec
loopne
cmc
daa
mov
mov
xor
cltd
dec
insl
or
jns
xor
inc
shrb
cmc
dec
inc
or
iret
fidivrs
fsubr
data16
sbb
xor
pop
push
pop
and
rcr
cmpsl
lock
sti
sar
cli
push
loope
rcr
push
cli
outsl
fidivrl
push
ds
or
andl
in
insb
cwtl
mov
jecxz
lcall
dec
scas
add
lods
in
aas
jle
lock
repnz
jle
inc
pop
push
or
xchg
test
fsubs
mov
divl
mov
loop
repnz
xchg
icebp
jecxz
mov
inc
mov
imul
pop
add
clc
sti
jnp
int3
js
daa
nop
ja
pop
xor
pop
push
shll
jo
push
scas
arpl
dec
fcmove
mov
mov
jmp
push
jnp
xor
and
xor
and
movsb
mov
cmp
push
add
repnz
xchg
mov
mov
dec
lods
fcomps
pusha
aaa
inc
adc
pushl
mov
pop
test
xchg
mov
repz
dec
stos
int3
aas
fdivs
mov
idivl
aas
sub
jge
loop
inc
xlat
in
pop
adc
jp
xchg
in
lods
cli
fcmovnu
mov
or
mov
jnp
pop
shll
cmp
mov
ss
int
xor
xor
mov
push
push
ds
xchg
xchg
shrb
addr16
test
js
mov
add
dec
in
inc
mov
jg
or
xchg
lea
sub
loope
add
sub
fstl
jecxz
fdiv
sti
xchg
cmp
inc
xchg
inc
into
xor
add
inc
inc
cmp
jp
pop
adc
ret
and
fidivl
mov
sbb
fs
pop
sti
xorl
cmp
pop
cmp
icebp
movsb
and
icebp
inc
iret
outsl
or
pop
repnz
les
mov
xchg
popa
cmp
sbb
sbb
fsubs
lahf
rcl
sbb
faddl
and
fwait
sbb
pop
pop
test
lock
mov
pushf
int3
cmp
push
in
pop
sbb
cmp
sbb
pop
xchg
shll
add
test
das
sub
add
aam
pushf
outsb
mov
aas
cmp
hlt
bound
aam
int
mov
adc
and
out
cs
mov
jmp
cmc
inc
loopne
mov
ret
call
loop
bound
jle
adc
test
movsl
sub
sbb
add
pop
push
hlt
fsubl
out
adc
push
sub
adc
andb
iret
mov
in
cmpsl
adc
sbb
mov
pop
and
push
arpl
scas
push
cmpsb
push
je
adcb
adc
movsl
sti
inc
dec
sbb
inc
adc
cmc
scas
adcl
shll
andb
aaa
push
mov
mov
mov
inc
sub
mov
and
inc
pop
movq
pop
adc
stos
subb
mov
jo
cmpsl
test
sbb
stc
incb
sahf
jl
insl
dec
pop
mov
dec
pushw
lret
cmp
lds
mov
pushf
mov
loopne
aam
inc
les
cmp
pop
xchg
or
ds
push
outsb
call
dec
xlat
hlt
out
inc
xchg
inc
int
out
sub
or
movsb
jmp
scas
cli
jge
lret
addl
jnp
pop
incl
pop
arpl
and
das
in
dec
testb
and
popa
jp
jle
hlt
pop
add
xor
add
xchg
ja
mov
cltd
fwait
mov
jns
ss
sbb
jle
dec
ja
movsb
outsl
aam
xor
aad
pop
push
fs
in
stc
sub
in
shl
dec
bnd
jnp
mov
sbb
xchg
cltd
xchg
sti
sub
cmp
lock
sub
xor
mov
dec
pop
pcmpeqb
movsl
pop
dec
push
aad
sbb
adc
lods
push
xchg
fisttps
xor
cmp
add
outsb
repz
adc
pop
popf
pop
push
stos
in
loopne
frstor
fucom
jno
dec
push
div
popa
xor
cmc
in
push
repz
push
loope
loopne
les
xor
fisubl
xchg
mov
popa
pusha
inc
repz
mov
jb
and
jmp
push
jecxz
sbb
cmpsb
or
fsts
sbb
int3
pop
arpl
aam
sub
iret
xchg
mov
imul
add
dec
in
fwait
add
mov
inc
adc
jbe
loop
xchg
int
xchg
daa
pop
or
mov
xchg
in
cs
mov
push
enter
xchg
lods
mov
jp
mov
mov
ret
dec
jmp
sub
and
jp
and
inc
pop
jge
arpl
cmp
in
jae
adc
jle
idiv
xchg
or
scas
cmp
inc
mov
into
loope
sub
fsubl
sbb
out
mov
imul
cmp
fst
jne
lods
add
sbb
jge
sbb
cmpl
sarl
shl
xchg
mov
roll
adc
sbb
push
push
int3
pop
and
insl
dec
and
das
push
add
cwtl
shlb
jg
mov
jnp
mov
or
adc
cmpsl
sub
adc
lret
jbe
mov
mov
fmulp
or
push
int
sbb
testl
add
out
das
adc
loopne
add
push
and
pusha
popf
in
xchg
scas
mov
pop
add
ja
je
xor
imul
sub
mov
popa
into
dec
add
mov
iret
test
jb
outsl
mov
hlt
cmpsl
sbbb
push
and
or
pushf
xor
pop
fldenv
cld
not
cltd
mov
icebp
push
int
cltd
sbb
pop
and
imulb
popa
xlat
or
test
pop
pushf
lahf
xchg
scas
dec
or
inc
sti
lods
pusha
adc
push
pop
in
and
in
and
xor
and
shl
es
jg
std
or
sti
mov
popf
cs
jmp
sub
adc
scas
mov
rol
fxam
lcall
aad
icebp
add
push
scas
mov
dec
fs
xchg
shl
mov
rcll
clc
push
imul
ret
jno
push
stos
xor
imul
inc
mov
adc
fildl
roll
shlb
popa
pop
mov
fldt
sbb
mov
or
inc
stos
mov
adc
into
cltd
jmp
push
push
xchg
lods
cld
jg
cld
loop
adc
or
fcoml
adc
jg
push
out
mov
pop
lods
jns
out
inc
out
adc
adc
xchg
inc
inc
mov
adc
jp
jle
jnp
addr16
xorb
mov
pop
jl
xchg
pushf
loope
test
jle
lcall
sbb
xchg
icebp
sbb
scas
pop
jp
stos
sahf
cmp
adc
lds
sbb
add
fprem
pop
popa
stos
clc
scas
repz
imul
cmp
aad
in
jecxz
pop
fldlg2
pushf
and
stc
xchg
stc
dec
aas
je
outsl
cmp
testl
push
scas
sbb
sub
stos
pop
les
popf
outsb
pop
fwait
rorl
xor
rorl
dec
arpl
sbb
add
rep
dec
jno
or
xor
and
clc
xor
cmp
loope
push
and
dec
ret
xchg
repnz
xchg
mov
mov
mov
adc
xor
pop
add
sbb
shlb
jmp
idivl
shl
test
mov
addr16
movsl
sbb
adc
and
sahf
in
inc
lahf
sbb
add
rclb
pop
sti
lods
or
sub
and
pcmpgtb
scas
mov
sbb
les
aad
add
out
out
add
and
aaa
push
scas
or
xchg
stos
in
add
ss
xchg
xchg
stc
int
aad
or
mov
jbe
movsl
repnz
mov
jbe
pop
int
mov
sti
jge
add
xchg
xor
clc
sbb
mov
loope
sub
xor
dec
lds
adc
push
sub
lea
jl
iret
js
xor
jae
jbe
stc
leave
push
xchg
test
xchg
push
ds
jbe
test
test
add
mov
bound
sar
push
and
aam
repnz
add
outsb
mov
jne
and
loop
sub
ss
or
or
bound
inc
adc
out
dec
dec
mov
xchg
out
aad
mov
enter
mov
xchg
out
jns
and
cmp
sarl
dec
adc
in
sbb
or
mov
iret
xlat
in
fsubrp
fcmovu
jl
daa
ficoms
in
pushf
out
ret
test
mov
jp
xchg
jmp
hlt
mov
repz
sub
push
subl
push
or
mov
loope
sbbl
and
gs
lea
addr16
push
sti
pop
addr16
sub
pop
das
sbb
xor
ss
push
xchg
xor
xadd
daa
clc
xchg
and
add
out
xorb
sti
in
add
cmp
pop
sbb
xchg
xchg
clc
ffreep
dec
cmc
push
sub
bound
icebp
xchg
push
dec
stos
or
push
popa
ret
lret
mov
pop
icebp
and
out
adc
lcall
imul
xor
mov
scas
fwait
int
movsb
fwait
js
in
mov
subb
fsubl
push
shr
pop
arpl
cld
cmpsl
jno
cli
lods
xchg
das
or
xchg
sub
cmp
mov
or
test
adc
dec
sub
nop
cmp
cmp
jg
adcb
fwait
sub
stos
nop
pop
jae
aam
leave
pop
xor
inc
mov
sti
in
pop
loopne
xchg
mov
push
ds
shr
into
push
aaa
ds
xor
lds
push
js
js
in
fistps
pop
out
jl
divb
push
or
bound
inc
dec
das
xchg
fisubs
dec
mov
sub
push
dec
sub
movsl
les
sub
xor
push
cmp
out
sbb
sbb
inc
outsb
cs
aaa
or
sbb
movsb
je
shlb
bsr
pop
lods
clc
notl
push
cmp
enter
jno
inc
mov
push
fwait
in
js
cltd
sbb
dec
hlt
pop
jnp
ja
aas
add
fisubrl
movsb
jmp
adcl
lcall
mov
add
in
sarl
add
push
pop
andb
stos
test
jnp
lahf
mov
scas
sub
sbb
call
pop
sbb
pop
push
inc
xchg
inc
dec
ja
dec
xor
scas
or
or
jp
lret
jnp
aas
xchg
mov
sbb
fucomp
mov
pop
loop
jae
dec
imul
daa
lds
ss
hlt
mov
mov
xchg
or
mov
jle
xor
push
mov
not
movsl
fisubrs
popa
ds
sbb
adc
xchg
fisubrl
leave
pop
push
jns
fcomip
lahf
mov
push
repz
xor
adc
inc
cmp
xchg
test
fs
xor
push
adc
xor
dec
jmp
roll
stos
push
dec
push
mov
pop
mov
in
cmpsb
jmp
xor
sbb
mov
loope
adc
icebp
cmp
inc
or
pop
xchg
xchg
xor
loopne
jo
outsl
stc
in
and
add
sub
clc
jmp
ljmp
dec
cmpsb
out
mov
mov
adc
jmp
pop
cld
cltd
int
mov
enter
out
or
xchg
pushf
xchg
add
call
insl
arpl
mov
shr
fisttpll
lds
repnz
xchg
xor
into
sub
pop
fildl
mov
aam
or
stc
push
xor
push
sar
mov
ja
subb
loopne
lds
jg,pt
push
mov
mov
sbb
dec
adc
jg
inc
jae
pop
loope
mov
fs
ja
testl
fucomi
or
in
mov
imul
mov
jno
repz
jno
jl
mov
cmp
sub
jle
pop
jbe
mov
mov
sbb
add
cmp
jo
fisubrs
mov
cmp
xchg
sbb
inc
cld
jae
fwait
jnp
sar
mov
or
push
in
sbb
inc
in
mov
cmp
mov
cmp
push
xchg
movsl
lds
icebp
xchg
cmp
das
cmp
push
mov
inc
scas
pop
aad
inc
xchg
sub
adc
cmp
cmc
sub
jb
ret
add
js
push
jge
ss
lahf
pop
pop
mov
xchg
xor
inc
sub
lods
mov
out
daa
jns
xchg
stc
cmpsl
les
adc
loope
lods
out
outsl
xor
dec
and
std
lcall
cmpsb
lcall
test
fcompl
aas
lcall
push
lock
cmpsb
mov
mov
movsb
and
aaa
inc
inc
loope
repz
pop
movsl
aam
jle
cmp
mov
call
xchg
mov
out
aas
dec
xchg
data16
out
push
ds
mov
xor
adc
call
js
sub
sbb
notb
lock
mov
pusha
cmp
cs
pop
fmuls
test
icebp
lods
mov
minps
xchg
orl
inc
btc
add
mov
inc
xor
sbbb
or
mov
vmovaps
dec
mov
inc
mov
mov
fs
xchg
shll
push
jnp
in
bound
ljmp
push
ficoml
xor
fdiv
mov
and
enter
faddl
push
sbb
cld
lods
push
adc
jo
cwtl
lock
aaa
es
jno
sub
scas
cmpsb
cwtl
cmp
mov
jo
xor
lock
movsb
gs
mov
mov
inc
pop
or
sub
add
rcrb
mov
dec
bound
leave
dec
mov
inc
mov
cmp
test
inc
sbb
sarb
xchg
or
repnz
stos
jp
nop
push
push
mov
mov
add
xorb
xchg
cmp
add
push
mov
in
stos
hlt
cmc
xchg
mov
jno
mulb
pusha
mov
dec
sbb
fwait
in
test
data16
dec
aaa
je
or
fsubrl
and
jne
xchg
mov
sar
mov
fimuls
adc
push
mov
pop
mov
cmpsl
add
aad
xchg
insb
pop
xor
xchg
es
jb
out
cs
push
add
sahf
out
sbb
cltd
in
jns
sub
js
push
add
cwtl
xor
call
test
xchg
sub
js
push
add
cwtl
xor
call
test
xchg
sub
js
push
add
cwtl
xor
call
test
xchg
sub
aad
gs
jne
cli
mov
xor
pop
lcall
mov
mov
cmpsb
pop
push
or
jbe
pop
push
or
mov
mov
test
fcoms
call
es
jbe
pop
push
dec
push
js
push
mov
xchg
roll
sbb
add
adc
push
add
es
cltd
mov
push
xor
lret
insb
adc
icebp
and
jecxz
shll
cwtl
addb
pop
adc
and
sarl
and
ljmp
mov
icebp
add
xchg
sbb
push
ljmp
mov
cmpsl
pop
or
scas
dec
ret
cwtl
inc
pop
cmp
out
xchg
fldl
sub
pusha
sub
mov
jl
stc
cmp
subl
mov
clc
and
sub
push
dec
cli
cmc
leave
nop
stos
js
mov
notl
inc
or
ret
ret
inc
out
testl
add
cwtl
and
pop
mov
mov
xchg
rolb
add
inc
and
inc
push
push
push
js
jno
jmp
in
fstpl
movsl
xchg
clc
test
insb
xor
xor
inc
and
sub
sbb
mov
stos
xchg
lods
fisubs
cmpsb
sbb
or
jge
pop
or
push
push
xchg
fstpl
enter
call
inc
cmp
pop
push
dec
push
js
push
mov
xchg
enter
call
inc
cmp
pop
push
dec
push
js
push
loope
shlb
enter
mov
sbb
out
pop
mov
jne
lds
xchg
mov
mov
js
pop
imul
cmc
cmc
jne
cmp
repnz
rcr
popf
testb
xchg
call
nop
cs
lahf
cmpsb
in
push
jns
insl
add
aam
cmp
mov
aaa
xchg
xchg
arpl
hlt
pop
xchg
xor
aaa
adc
cmp
and
mov
adc
jnp
or
cmc
mov
pop
jle
sub
mov
and
mov
add
lods
jmp
mov
shll
jmp
push
test
pop
push
shll
rcr
cwtl
mov
movsl
outsl
jae
int
fidivrs
out
dec
cli
inc
sbb
sarl
cmpl
pop
std
dec
pop
stc
sbb
dec
rorl
or
pop
data16
hlt
mov
sub
loop
out
bound
mov
push
jecxz
sahf
out
mov
imul
mov
test
ret
arpl
sbb
iret
gs
xchg
xchg
add
sub
lods
std
mov
cltd
fnstcw
jg
repz
out
aam
insb
mov
cwtl
or
xchg
sbb
mov
sbb
add
mov
inc
lahf
sbb
mov
mov
or
fs
jbe,pn
repz
leave
cmp
cmp
insb
frstor
mov
push
jle
sbbl
push
sbb
ljmp
ret
jp
mov
lods
mov
inc
sbb
xchg
mov
std
mov
test
xor
mov
ficoml
xchg
in
es
mov
adc
popf
mov
push
je
addr16
dec
adc
mov
movsl
or
mov
rorl
je
data16
and
or
fld
stos
add
pop
lea
into
jg
test
or
daa
stc
xor
repnz
adc
adc
pop
into
pop
add
testb
test
xchg
lret
in
bound
jo
jmp
cld
pop
mov
inc
xchg
aad
and
and
xor
xchg
add
stos
lcall
daa
or
jmp
mov
pushf
into
mov
mov
dec
dec
inc
mov
fisubs
int3
xchg
pop
mov
ffreep
dec
scas
adc
inc
addr16
dec
mov
push
aas
ljmp
icebp
pop
dec
and
add
mov
divb
xchg
mov
es
mov
mov
adcl
adc
call
clc
nop
mov
jp
jnp
out
cli
mov
inc
mov
push
ds
push
sbb
cmp
sti
aaa
dec
sbb
test
add
push
outsb
inc
pusha
into
addr16
push
call
testl
cmp
addb
xchg
push
cwtl
rolb
notb
mov
popa
pop
sub
lock
mov
dec
add
int
xchg
leave
pop
popf
sbb
popa
or
in
dec
popa
jmp
dec
fistps
pop
sbb
test
lret
adc
stos
std
js
leave
jne
test
andb
jle
push
dec
add
mov
xor
out
pop
aam
jb
ljmp
xor
pop
outsl
pop
in
daa
icebp
icebp
adc
jbe
test
inc
insb
jmp
pop
jb
or
fcoms
cmp
dec
pop
pushf
mov
add
mov
inc
sahf
dec
inc
adc
in
xor
sbb
lea
cmp
mov
pop
test
adc
je
inc
fmul
sub
add
dec
sbb
stos
mov
hlt
data16
mov
pop
add
sub
int
out
xchg
xchg
rclb
mov
mov
mov
fwait
xor
or
je
sahf
lahf
xor
or
mov
outsb
mov
nop
out
xor
cmpsl
out
mov
jns
loope
and
jmp
loopne
and
pop
fwait
mov
push
push
lcall
dec
fnstsw
mov
mov
dec
fs
mov
adc
dec
imulb
aad
out
dec
cmp
mov
in
dec
enter
call
out
scas
hlt
pusha
xchg
jge
and
dec
enter
fiaddl
xor
pop
aam
dec
cmpsb
add
adc
push
adc
adc
pop
xor
push
add
stc
std
xor
out
int
add
scas
inc
inc
imul
cwtl
repz
aam
and
aam
fcoml
pop
fldcw
adc
and
mov
les
test
out
js
stc
xor
push
jecxz
stc
popa
xchg
add
imull
mov
jge
roll
sbb
lods
ret
push
hlt
inc
adc
imul
adc
outsb
push
js
mov
inc
lret
test
xchg
pop
outsl
lret
adc
cwtl
ret
sbb
rclb
aam
xchg
or
mov
xchg
cltd
xchg
out
mov
lock
xchg
xchg
pop
mov
adc
repz
adc
arpl
cmpsl
sbb
mov
sub
fmulp
arpl
stos
call
sbb
sub
cli
ss
test
mov
insl
xor
lods
add
mov
out
jb
sbb
dec
or
or
push
ror
adc
test
push
pop
loope
cwtl
push
repz
sahf
push
mov
in
movsl
in
inc
pop
xor
das
js
shll
js,pn
add
pushf
or
adc
push
mov
push
pop
call
push
mov
mov
add
mov
pop
jnp
or
mov
sbb
push
mov
xchg
sbb
fldcw
add
ja
lret
addr16
jp
nop
xlat
inc
add
out
fimuls
sbb
and
xor
jo
and
out
bound
cmp
lahf
jb
mov
xchg
jo
dec
pop
xor
mov
into
and
sub
popa
ds
adc
addr16
xchg
add
xchg
sbb
sbb
shl
xchg
and
hlt
scas
loop
lods
movsl
cmp
sub
orb
nop
sub
sub
xchg
sbb
sbb
aas
mov
js
cmp
data16
jp
or
dec
loope
repz
cmp
sub
jae
test
fiaddl
loopne
in
int3
lods
cmp
and
sbb
mov
rclb
cmp
mov
jmp
stos
in
ficomps
leave
cmp
inc
xchg
mov
outsb
shlb
pop
mov
mov
xchg
jnp
and
sbbb
mov
aas
sbb
xor
divl
jbe,pn
nop
mov
sub
or
scas
filds
xor
push
mov
clc
sub
or
mov
cmc
push
jp
shll
mov
pushf
int3
cld
jno
cmp
cwtl
adc
in
aam
mov
in
movsl
and
push
and
ftst
aad
lret
mov
test
add
mov
and
ficompl
fstps
xchg
xor
push
jo
bound
sub
push
lods
outsl
inc
stc
lods
aad
scas
daa
xorb
inc
cld
mov
inc
xor
mov
aas
dec
dec
icebp
pop
pop
and
sub
sbb
jno
pop
or
mov
jae
aam
lret
mov
inc
sbb
xchg
xor
mov
idivb
mov
push
sbb
ljmp
mov
arpl
jbe
mov
int
cmpsl
lcall
jbe
cld
jno
or
sbb
xchg
mov
call
orl
ret
daa
xlat
and
push
mov
fs
inc
jecxz
xchg
out
test
xor
sub
pop
pop
es
shr
sarb
dec
sub
lock
loope
ret
sbb
shrl
movsl
cmpsb
and
fcmovne
mov
mov
jp
mov
fnstsw
mov
lock
testb
paddusw
ud1
clc
lret
pop
cmp
loopne
clc
xor
aam
sub
fstpl
xchg
inc
jmp
adc
xchg
iret
outsb
and
inc
in
dec
push
addr16
jle
sarb
sub
sub
sub
repnz
leave
cmp
jg
push
fnstsw
push
pop
cmpsl
adc
sub
shrl
shrl
adc
aam
roll
push
test
pop
xchg
mov
dec
mov
xchg
nop
adc
es
loopne
or
cmp
pop
addb
dec
mov
lock
inc
ljmp
fnstsw
rorb
pop
jne
xchg
std
mov
adc
cmp
sub
or
test
xor
mov
lcall
and
ss
and
fwait
push
in
pop
adcb
dec
ret
mov
push
hlt
stos
jb
rcr
repnz
xor
enter
daa
pop
pusha
push
and
insl
xor
iret
pop
jmp
push
pop
pop
loope
movsb
js
arpl
inc
and
adcb
inc
pushf
fidivs
mov
ss
popf
mov
ljmp
insl
and
in
leave
inc
cmpsb
rcr
shl
test
add
ret
xchg
outsb
or
sub
in
daa
sub
test
in
clc
imul
pop
icebp
enter
jg
scas
mov
inc
pop
push
and
xchg
dec
data16
rolb
pushl
mov
movsl
adc
dec
add
ret
sti
out
dec
movsb
xlat
hlt
inc
xlat
xchg
lea
cld
jmp
shll
pop
in
or
xor
inc
lods
clc
add
popf
sub
dec
mov
ja
daa
js
bound
jmp
dec
and
or
xor
int
std
pusha
test
adc
or
mov
inc
push
sbb
in
mov
mov
idivl
mov
outsl
xor
pop
fsubrl
xor
outsb
call
push
int
jmp
mov
call
jl
gs
jmp
fcoms
adcl
mov
loope
outsl
jbe
and
and
mov
and
xchg
xchg
enter
cld
cmpsl
loope
dec
lcall
lods
jmp
xrelease
arpl
ss
sub
and
jmp
sti
xor
jbe
mov
dec
sub
cli
int3
mov
or
repz
shrl
daa
inc
data16
int3
icebp
cmpl
or
xchg
sub
sbb
jl
sub
cwtl
inc
push
and
mov
xor
mov
push
pop
loop
xchg
adc
ret
jge
mov
push
or
or
imul
test
and
and
mov
jae
cld
jnp
aaa
push
rcl
mov
orl
sub
icebp
rcrl
in
push
pop
divb
sub
inc
jg
imul
fisttpl
iret
rcr
imul
fwait
mov
in
sbb
jle
jae
cmc
mov
xor
sub
dec
icebp
subb
dec
mov
aam
add
icebp
mov
add
ja
mov
rorb
into
dec
push
aaa
movl
xchg
mov
sbb
sub
imulb
cmp
inc
jb
mov
jb
mov
adcl
cmp
jno
dec
sbb
cmpsb
pop
sub
arpl
inc
xor
ret
cmpl
xlat
ror
adc
ds
int
mov
fldenv
orb
ds
adc
movsb
add
mov
in
dec
popf
and
std
sbb
stc
je
decb
clc
push
adc
fisttpl
fidivl
and
pop
push
dec
and
inc
mov
pop
movsb
cmp
scas
push
loope
adcl
push
repz
or
and
xor
test
dec
sub
js
in
out
sti
or
jb
ja
loopne
and
in
or
pop
ja
mov
mov
out
jns
dec
adcb
pushf
movsb
sti
std
stos
xchg
jp
shlb
stc
or
daa
jns
jnp
push
xor
xchg
test
loop
jle
add
xor
rcll
jl
iret
jge
dec
or
mov
orl
sbb
adc
mov
sbb
arpl
add
loopne
movsb
add
xor
test
popa
inc
pushf
mov
xor
outsl
inc
mov
out
aas
enter
loope
ja
xlat
rorb
xchg
fs
sbb
mov
jmp
popa
cmp
outsl
mov
out
mov
insl
or
pop
fsubrs
js
sbb
push
pop
jo
decb
adc
inc
xor
fistl
fsubrs
lret
jg
xchg
push
repnz
and
sti
ret
add
inc
fucomp
pop
lcall
shl
push
xchg
dec
aaa
push
subl
shlb
add
inc
cmc
lods
adc
repz
or
adc
mov
jo
mov
popa
adc
cmp
fs
jb
mov
mov
push
dec
or
loop
xchg
jmp
mov
mov
ja
push
jp
outsl
push
sbb
rorl
xlat
cli
dec
scas
sub
movsb
aas
pop
sbb
push
push
shl
into
bound
push
xchg
jecxz
into
rclb
adc
xchg
loop
and
js
cmp
and
or
sub
sbb
cmp
mov
fstps
les
inc
cmp
les
push
pop
std
scas
jecxz
inc
sbbb
sub
stc
imul
mov
aad
dec
jmp
xchg
sub
push
mov
cmp
cmpb
in
push
sub
outsl
mov
repz
xor
imul
push
sarl
jo
test
inc
add
jbe
adc
lcall
fdiv
xchg
sti
xlat
sbb
mov
mov
fs
xor
jns
out
push
mov
push
inc
push
les
mov
fwait
mov
dec
lds
add
loopne
jle
or
insl
arpl
divb
or
test
pop
sub
sbb
xchg
push
or
or
std
ret
fisubrl
lcall
cmpsl
cmp
sub
push
les
repnz
push
mov
xor
jo
mov
inc
jle
lock
xchg
sbb
data16
adc
dec
pop
dec
loope
dec
rcll
cltd
mov
adc
fisubrs
pop
dec
mov
and
mov
into
inc
xlat
adc
out
or
cs
lods
mov
mov
test
lds
fwait
mov
lods
femms
mov
xor
aam
xchg
mov
jp
fsubs
jno
sub
ds
mov
das
ss
xchg
fisttps
adc
popf
push
ret
test
and
nop
scas
mov
dec
shrl
mov
popa
out
add
mov
add
enter
and
push
int3
push
ret
mov
push
dec
in
int
sti
repz
push
test
testl
sbb
mov
insl
push
pop
lds
mov
push
mov
lret
addr16
stc
sub
or
das
xchg
push
push
xor
xchg
pop
push
mov
pop
rolb
outsl
cld
jb
fldl
hlt
lods
adc
bound
jns
popa
repnz
mov
and
loope
push
aam
scas
insb
les
or
sbb
std
test
mov
inc
mov
pop
scas
xor
roll
mov
sbb
test
loop
fs
adc
cmp
sub
push
or
adc
int3
mov
and
fs
pop
sahf
mov
mov
movsb
add
and
les
cmp
sti
stc
jp
push
adc
push
test
lods
out
jg
test
push
inc
lds
loopne
les
lock
mov
and
prefetch
mov
cs
in
ds
sub
mov
and
or
xchg
ror
icebp
jbe
push
repz
push
jmp
mov
push
adc
or
clc
rcll
call
ret
lock
into
fcomi
divb
rolb
push
cltd
das
jae
repz
cltd
imul
test
je
cld
sub
or
cmp
je
jge
cmp
sbb
fldl
iret
fwait
scas
cltd
les
mov
or
loope
push
push
inc
flds
mov
cmc
or
add
test
mov
repnz
push
call
mov
mov
ljmp
push
inc
scas
mov
les
add
mov
mov
clc
in
in
ja
jb
subl
and
cmpl
or
jecxz
inc
jo
out
cwtl
jo
adc
stos
cmp
xchg
inc
enter
aaa
es
hlt
jmp
in
scas
sbb
mov
lock
mov
lds
push
mov
push
cwtl
imul
ja
mov
test
xor
scas
or
jge
imul
inc
xor
push
mov
dec
mov
notl
push
out
loope
in
mov
inc
js
out
fwait
inc
imul
imul
popf
xchg
ds
insl
or
inc
enter
lret
rolb
push
sbb
cmp
jp
fcoml
mov
dec
and
xlat
ret
xchg
inc
cli
adc
cs
out
movsl
dec
in
mov
cmp
xchg
xlat
pop
into
gs
fistpll
push
inc
out
push
mov
push
sbb
sbb
jp
pop
ds
fstpt
into
je
lock
cs
lds
into
cmp
dec
fwait
xchg
or
and
push
daa
clc
outsl
fs
cwtl
leave
pop
fwait
movsb
add
and
imul
push
dec
lods
mov
ds
mov
sbb
push
mov
mov
sbb
rdpmc
mov
or
add
mulb
dec
outsl
outsb
mov
mov
ret
cwtl
push
push
inc
sub
imull
pop
out
out
push
jno
inc
outsl
jns
repz
jb
mov
lods
xor
sbb
sbb
sbb
mov
xor
mov
pop
and
mov
pop
sbb
mov
push
or
xor
fdivs
aad
inc
mov
hlt
inc
dec
sub
test
xchg
jb
xchg
mov
jns
out
push
incb
and
adc
jge
ds
pop
sbb
sbb
push
push
pop
add
into
sbb
faddl
outsb
inc
cmp
insl
or
inc
xlat
inc
shlb
mov
jmp
xchg
in
and
mov
lods
push
cmp
imul
jl
jne
pushf
rcrl
push
pop
es
mov
mov
pop
in
cli
jb
xchg
mov
fldt
fs
or
mov
imul
mov
add
notb
lea
insl
addr16
sub
test
ss
or
xlat
sub
or
sti
clc
lcall
call
dec
or
xchg
es
dec
inc
test
sub
aaa
mov
fnsave
in
movsb
ss
xlat
add
repz
lea
push
pop
fxch
sub
dec
gs
or
ljmp
hlt
sub
mov
pushf
ss
cmp
repnz
xor
ror
decl
adc
xor
cmp
lret
mov
xchg
adc
sbb
mull
out
inc
popf
and
lea
xor
stos
ficoms
sbb
mov
add
adc
sbb
xchg
testl
inc
jge
xchg
repz
or
in
jbe
fsubrp
add
jo
gs
fsubr
push
push
iret
sbb
test
nop
mov
cmp
push
mov
sub
cmp
xor
pop
enter
dec
ret
sti
shrb
int
or
jno
notb
cmp
add
fnsave
inc
dec
lods
xor
enter
push
cmp
mov
push
lret
les
vpmulhw
sbb
xlat
adc
stos
push
jno
pop
fdivs
arpl
aad
mov
pusha
cmp
or
xor
cmc
sbb
frstor
js
jae
add
jb
jp
push
sub
inc
pop
add
mov
sbb
mov
sti
cmp
jmp
mov
sub
jnp
filds
lods
movsb
or
push
subl
sbb
mov
xor
mov
orb
arpl
es
dec
dec
xor
pop
jnp,pt
sbb
jle
mov
adc
lods
incl
pop
ret
outsb
inc
loopne
pop
decl
xchg
and
ss
add
cltd
xor
mov
mov
push
arpl
popf
cmp
adc
mov
test
fcoms
call
inc
cmp
pop
push
dec
push
js
push
mov
xchg
enter
call
inc
cmp
pop
push
dec
push
js
push
inc
mov
xchg
enter
call
inc
cmp
sub
push
dec
push
js
pop
lods
mov
out
xchg
enter
push
in
xchg
jbe
adc
sahf
sar
leave
xchg
fsts
in
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
mov
test
mov
stos
mov
sub
cmp
outsl
sbb
dec
js
mov
mov
fucomip
iret
clc
aas
or
sbb
sub
cmp
outsb
pop
pop
push
scas
cwtl
lahf
test
mov
fucomip
iret
clc
aas
ss
outsl
pop
push
jg
sbb
sbb
es
mov
in
lahf
int3
out
lock
mov
sbb
adc
dec
adc
dec
in
mov
or
pusha
mov
out
daa
and
daa
lock
cmp
mov
or
test
lds
pop
aam
lahf
cmp
jns
enter
sub
in
fcoml
mov
xchg
leave
adc
xchg
iret
test
cmp
das
sbb
cmpsl
xchg
les
adc
jb
add
iret
daa
and
inc
scas
ds
daa
sbb
sub
mov
or
jo
aam
fstpt
fistpll
imull
out
sub
cmp
jge
js
mov
mov
fucomip
iret
clc
aas
or
sbb
sub
cmp
outsl
pop
pop
push
int3
dec
fldz
leave
lcall
mov
dec
jno
inc
dec
push
stc
and
aas
sbb
cld
test
out
lcall
clc
dec
dec
dec
je
jle
push
mov
or
ss
scas
in
ljmp
call
das
sbb
sub
cmp
outsl
pop
pop
push
scas
cwtl
lahf
test
mov
fucomip
iret
clc
aas
or
sbb
sub
cmp
outsl
pop
pop
push
into
lea
pop
lock
mov
cld
fsubl
jae
jle
pop
or
cltd
pop
or
loopne
or
push
mov
xor
mov
inc
xor
push
in
mov
and
iret
dec
insb
nop
cli
pop
push
std
xchg
sub
sub
jecxz
mov
aad
dec
popa
test
int3
stos
add
test
xchg
loope
jp
movsb
cmp
dec
popa
xor
ret
call
pop
mov
and
imul
loopne
or
lcall
fsubl
pop
ret
popf
push
sbb
jecxz
cmp
call
mov
nop
xor
jbe
dec
xchg
xor
rorb
arpl
push
inc
jno
push
pop
add
add
mov
add
movb
outsb
xchg
dec
test
sub
pop
add
sbb
jl
mov
xor
push
sti
imul
and
inc
test
sub
jp
stos
jbe
add
dec
inc
sub
add
ret
fsubl
repnz
xlat
jno
xchg
mov
jmp
imul
mov
fsubr
cwtl
repz
enter
sbb
mov
pop
stos
mov
push
xchg
sahf
repnz
mov
jb
cmpsb
mov
bnd
lret
xor
mov
add
jmp
enter
add
adc
pop
das
aaa
in
stos
pusha
cmpsb
xor
mov
xor
xor
or
fs
pop
inc
jo
pop
jge
xor
sub
xchg
sbb
ljmp
pushl
mov
stos
xchg
cld
int
test
mov
fstpt
push
jmp
mov
jge
out
out
dec
jb
lds
xchg
and
mov
adcb
and
and
ret
lret
fsub
push
push
int3
mov
cs
fs
in
sbb
jno
adc
dec
xor
mov
fxch
push
mov
loopne
or
pop
jg
and
cmpsb
adc
scas
mov
outsb
test
loopne
sub
cmpsl
adc
jp
xchg
jmp
es
adc
push
hlt
lods
out
and
inc
pop
ret
mulb
xchg
and
pop
int
or
sub
mov
and
and
ret
sub
dec
xor
test
or
and
out
xchg
adc
cmpl
mov
inc
bound
or
dec
ljmp
or
jmp
fstpt
sahf
or
rcll
push
mov
icebp
icebp
jns
push
stos
lahf
das
and
icebp
adc
pop
jp
adc
leave
mov
filds
inc
sbb
imul
das
popfw
das
mov
in
std
test
xor
out
xor
push
int
push
loope
enter
aam
movsl
cmp
fwait
inc
sbb
adc
lahf
add
xor
iret
adc
sahf
insb
dec
xor
and
sti
addr16
pop
add
sbbl
popa
or
xor
in
cmpsl
movsl
sub
or
xchg
jo
iret
pop
rcr
push
sti
xorl
adc
dec
add
mov
bound
inc
or
sub
fisubs
dec
jno
cmc
cmpsl
out
inc
aas
andb
dec
adc
push
cld
gs
push
mov
cmc
push
shll
cs
lahf
push
mov
jbe
push
cmp
hlt
shrl
ret
subl
xchg
iret
rorb
mov
cmpsb
test
std
and
or
aam
push
mov
mov
div
mov
filds
cmp
add
jns
or
push
or
jle
and
xor
xchg
sbb
pop
inc
inc
lahf
test
outsb
and
jg
mov
repnz
das
insl
outsb
jbe
out
divl
test
pop
xchg
push
pusha
xchg
stos
pop
and
ds
in
xor
movsl
xlat
cld
ficoms
insb
inc
ljmp
add
push
push
int3
lock
int3
xchg
xor
and
push
xor
flds
xchg
sbb
inc
out
add
test
and
jo
outsb
ret
push
mov
imul
addr16
outsl
loope
enter
sub
sub
cld
pop
js
scas
xchg
adc
mov
scas
test
movsl
mov
mov
mov
cmp
sbb
xchg
hlt
fsubrp
jmp
dec
xchg
mov
push
lret
or
ret
scas
and
mov
fcomps
stos
es
cmc
xor
inc
leave
in
loopne
jae
add
jae
dec
xorb
dec
sbb
in
inc
dec
leave
aas
mov
push
and
scas
mov
int3
mov
inc
stos
jne
fcomps
sbb
loopne
jp
into
xor
sub
adc
xchg
adc
mov
mov
or
in
popa
cmp
mov
mov
xorl
cmpsb
mov
mov
leave
or
pushf
int3
es
xchg
push
jg
push
or
out
cmc
iret
push
sbb
add
pop
push
in
mov
insb
add
int3
sub
outsb
cmp
jnp
inc
dec
insb
xchg
sbb
sbb
jl
mov
inc
fmuls
jb
adc
dec
inc
movsl
leave
lea
and
add
shll
pop
mov
jnp
mov
xchg
add
xchg
and
mov
fs
and
int3
das
push
jmp
dec
insb
out
mov
fiadds
je
jmp
or
sbb
in
cmp
cmp
pop
in
insl
fadds
jnp
pmulhuw
or
push
std
mov
call
push
xchg
mov
sub
int3
fisttpll
push
ds
es
add
pusha
adc
cltd
push
in
test
and
xlat
mov
inc
call
adc
push
imul
movsb
leave
jae
push
ret
dec
popa
pop
ljmp
out
dec
lret
mov
ror
into
mov
cmc
ret
int
pop
add
inc
ss
divl
cld
mov
in
pop
shlb
mov
pushf
cmp
xor
stc
jno
leave
insb
dec
cmpsb
shrl
push
mov
adc
mov
xchg
jno
cmp
xor
iret
add
ja
add
out
mov
insl
push
mov
push
mov
jbe
out
sbb
adc
sbb
out
ficoms
or
je
push
xchg
jae
cmpsl
adc
pop
adc
pop
outsb
pop
dec
lret
addl
add
cmp
call
mov
test
inc
lret
movsb
pop
lret
arpl
in
shr
fildl
fidivl
addb
xchg
aam
mov
lods
aas
fadd
mov
jae
jbe
loopne
bound
into
pusha
push
addr16
ret
mov
and
cltd
aam
jo
jb
cmp
jb
mul
in
into
add
in
sbb
or
xchg
cld
addr16
fwait
pop
xchg
mov
dec
fldt
mov
sti
pop
testb
clc
add
addl
mov
xorb
adc
xchg
mov
stos
pusha
xchg
cmp
shr
push
hlt
loop
aam
mov
fsubs
ds
ficompl
mov
nop
fmulp
shr
push
mov
or
and
lock
jp
xchg
jp
or
lret
setl
mov
in
cld
mov
mov
mov
repnz
pop
out
mov
fsubrs
popf
roll
push
ss
call
scas
fstpl
enter
inc
add
and
test
das
ret
jge
rol
push
lret
and
jb
inc
push
mov
out
jne
cmpb
les
je
rorl
sub
sbb
mov
sti
call
cmp
lahf
xor
or
dec
icebp
ja
lret
popa
push
pop
add
cmp
xor
push
movb
cmp
lahf
jmp
or
dec
fmuls
lods
lret
repz
mov
ret
sub
cmpsl
daa
mov
fucom
outsl
inc
test
xchg
jecxz
je
test
add
in
xchg
ljmp
ljmp
cmp
add
ret
imul
and
arpl
cmpsl
fs
inc
loope
mov
mov
xchg
add
loop
mov
sbb
mov
outsl
lods
push
xchg
rcl
or
jnp
add
loope
or
adc
sti
aas
movsl
xchg
and
les
push
mov
lea
in
loopne
insl
shll
dec
movsl
icebp
xor
nop
shll
sub
fimull
orb
lock
mov
andl
ljmp
shll
idivl
inc
es
mov
xchg
jle
int3
in
fidivs
loope
or
int
data16
subps
aaa
mov
jnp
stos
fcmovbe
xchg
push
mov
out
and
adcl
mov
add
xor
or
mov
mov
fdivrl
pop
mov
mov
testb
and
lahf
jns
cs
pop
xchg
mov
in
pop
test
into
sub
adc
cmc
push
cmpsb
pop
in
iret
sar
out
cmp
add
in
and
mov
rorb
stc
flds
or
fnsave
scas
insl
ret
lods
pop
subb
add
mov
add
imul
jns
test
addr16
xchg
dec
rorl
cmp
lods
cmpb
aam
sbb
std
mov
mov
aas
enter
pusha
imul
xor
ss
and
scas
or
out
les
outsl
in
daa
pop
or
mov
jnp
sub
inc
xchg
xor
imull
adc
xor
add
push
push
lea
jl
sub
push
cltd
pop
out
pop
push
daa
jbe
or
mov
xor
inc
out
lods
xor
into
jnp
xchg
inc
jg
cmp
cmp
inc
pop
adc
scas
jecxz
push
gs
jo
jecxz
mul
scas
jl
into
dec
stos
inc
je
call
inc
or
adc
test
jecxz
mov
add
lea
adc
mov
mov
dec
xor
push
or
xchg
into
cmc
xor
out
xor
mov
add
adc
or
mov
xchg
movsb
insl
mov
lock
push
add
xchg
std
shl
jge
jle
movsb
adc
frstor
push
push
push
ret
push
pop
pop
mov
arpl
mov
sub
in
in
sbb
adc
leave
ljmp
shlb
in
in
pop
ss
movsl
inc
out
setae
testl
add
xor
je
out
pop
aad
sahf
mov
std
mov
push
pop
je
xor
imul
cmpsb
pop
xor
lods
xor
out
ljmp
mov
js
jo
cmpsb
jno
add
mov
cli
insl
mov
clc
xlat
adc
cmp
jne
test
scas
les
push
xchg
and
rorb
loop
mov
lret
enter
mov
fwait
mov
scas
xchg
lods
in
sbb
fisttps
fcoms
shrb
bound
mov
rcrl
xorl
and
in
mov
into
add
shrl
lock
and
lcall
cmp
and
scas
rcrl
adcl
cwtl
subb
std
jp
in
inc
stc
sti
jg
pop
leave
frstor
pop
shrl
pop
je
xor
push
pop
xchg
test
lea
mov
push
xor
leave
inc
push
fldcw
push
imul
fucom
stos
stos
mov
int3
cli
and
dec
frstor
xor
lods
lret
or
xchg
pop
push
jbe
xchg
out
push
dec
cmc
scas
push
mov
xchg
inc
les
mov
arpl
inc
lahf
sub
pop
fwait
ss
and
negb
aam
cld
and
xor
mov
push
and
ja
daa
mov
adc
push
mov
sbb
xor
data16
scas
mov
out
in
jb
xlat
loopne
incl
mov
pop
add
fstps
ljmp
cmpsb
mov
test
shrl
movsl
mov
cmc
fucomi
xchg
mov
loopne
pushf
clc
mov
add
jns
stos
mov
arpl
xchg
fldenv
int
daa
mov
mov
ret
bound
sub
mov
jne
and
ljmp
mov
adc
cs
icebp
xchg
xor
test
pop
hlt
jb
xor
fcmovnu
sbb
repnz
sbb
subb
jne
dec
in
push
aad
jp
xchg
popf
add
pop
mov
or
dec
sbb
aas
popa
dec
xchg
or
mov
push
sbb
scas
in
adc
fs
add
les
incl
shll
outsb
icebp
mov
jne
je
sub
push
push
std
addl
cld
sub
dec
lock
dec
call
xlat
repnz
jmp
dec
cmpsb
pop
data16
push
bound
xor
xor
sbb
stc
jecxz
andl
xchg
jns
fsubrs
enter
add
imul
mov
sbb
ja
push
or
inc
lods
leave
cmp
jmp
repz
jns
clc
dec
ja
scas
adc
sbb
addr16
push
mov
add
add
and
test
pop
stos
add
je
fwait
roll
shlb
xor
clc
sahf
fcmove
ja
jmp
push
sub
loope
mov
adc
mov
lea
dec
jmp
mov
loopne
and
cmp
int
xchg
mov
popa
adc
mov
lcall
arpl
lock
or
cwtl
sub
rcll
add
sub
and
loopne
movsb
jl
leave
movsl
bound
push
aaa
push
dec
data16
or
hlt
mov
adc
inc
pop
pop
push
mov
fiadds
nop
jge
enter
dec
imul
pop
and
bound
mov
adc
lret
addr16
stc
jge
xor
dec
cmp
jns
or
sub
test
rol
bound
std
adc
dec
xchg
xchg
cmc
ret
shlb
shl
lock
cmp
pop
sub
andl
mov
jle
pop
ja
loopne
out
insl
fisubrl
push
incb
and
add
mov
icebp
sub
sbb
mov
and
shl
rcrb
icebp
out
and
add
xchg
int3
xchg
mov
paddd
xlat
outsl
mov
jmp
and
cmp
loopne
push
push
sarl
cli
lds
arpl
sub
or
adc
sbb
mov
xchg
push
cwtl
es
jp
push
jp
and
push
fwait
inc
inc
cmp
ss
fs
xor
arpl
and
add
and
cs
inc
and
xor
mov
lock
fwait
mov
cmc
push
mov
pop
repz
add
int3
or
mov
enter
and
fcom
mov
jp
inc
test
sub
dec
push
mov
mov
fwait
stc
rclb
jmp
aad
arpl
pusha
xchg
pop
mov
in
popl
xchg
lcall
into
mov
bound
push
sub
push
sarb
sbb
pop
test
jmp
repnz
out
popf
out
cmovo
jle
out
ret
jecxz
dec
test
adc
xchg
mov
loop
pop
repz
icebp
jge
pop
out
lock
ja
js
jmp
sub
ja
jns
jbe
sub
cmp
pop
jmp
adc
or
jmp
pop
jl
call
dec
adc
call
mov
xor
push
lahf
jbe
adc
bound
dec
daa
xor
sbb
hlt
pop
inc
iret
sbb
mov
mov
adc
adc
and
pusha
nop
cltd
push
dec
jge
sbb
pop
sbb
pop
aad
adc
imul
fs
push
loope
add
out
jae
ja
test
jne
and
subb
rdpmc
pop
imul
lock
or
aad
test
xchg
push
outsb
ss
mov
add
jo
mov
inc
jb
mov
mov
sbb
sbb
scas
jne
stos
repnz
sbb
lods
or
cmp
fnstsw
add
inc
add
sarb
jg
add
dec
ret
xor
fildl
push
in
enter
clc
jp
mov
testl
imul
mov
adc
jecxz
add
pop
lret
pop
inc
or
or
xchg
into
testl
test
std
out
push
clc
jge
push
stos
scas
imul
sub
dec
mov
dec
mov
cmp
dec
jmp
or
sar
mov
aam
lock
in
clc
jnp
xchg
imulb
repnz
jno
mov
add
outsb
cmp
repnz
add
fimull
enter
lock
imul
mov
mov
or
dec
pop
fistpl
icebp
and
and
loope
cmpsl
loope
add
sub
pop
cmp
lret
int
jmp
outsl
mov
aaa
mov
jb
fisttps
mov
repnz
push
pop
cs
in
icebp
mov
push
outsb
adc
pop
gs
push
jmp
decl
inc
into
mov
push
add
jns
out
sub
dec
stos
into
pusha
push
ret
inc
pop
dec
lcall
cmp
insb
pop
jge
sub
data16
imul
roll
mov
in
ja
xor
fistps
add
mov
loope
push
in
mov
mov
fsubl
mov
stos
fs
cmp
inc
or
daa
mov
push
daa
jmp
les
or
sti
dec
es
sarl
js
mov
jg
in
pushf
jp
jno
cmp
scas
adc
inc
jp
icebp
lods
pop
fsubr
out
xor
xor
mov
push
fiadds
out
inc
xor
dec
fstps
lock
mov
test
int
mov
fcmove
cmp
insb
mov
or
jne
ja
aad
rorl
cmc
cmp
push
lods
sahf
pop
test
adc
orb
cmp
adcb
inc
icebp
push
iret
je
leave
rcll
pop
stos
mov
mov
cmp
aad
fdiv
aad
adc
outsb
int3
fildll
nop
push
mov
sbb
or
lods
out
fwait
into
mov
int
jno
and
xchg
ljmp
mov
sbb
inc
xlat
outsb
fildll
clc
in
mov
mov
addr16
into
xor
sbb
fcomps
mov
stos
xor
jle
mov
dec
push
pusha
dec
inc
push
cmp
sbb
cs
mov
or
cmp
imul
inc
stc
iret
in
in
cli
pop
lea
add
pop
push
ds
mov
mov
cld
jns
bound
hlt
fcmovne
int
push
decb
clc
shlb
ret
jae
decl
jge
out
lret
mov
scas
call
sub
and
cmp
pop
mov
cmpsl
push
xor
push
inc
nop
cld
mov
iret
lds
mov
inc
xor
sbb
inc
adc
neg
pop
pop
iret
mov
sub
and
inc
sub
xchg
mov
cs
inc
jnp
aas
jnp
jns
in
add
or
xchg
mov
inc
pop
mov
inc
lcall
jno
scas
and
cwtl
repnz
movsl
adc
cs
sub
subb
and
test
push
lret
lods
adc
sbb
int
test
ror
shlb
sub
sahf
jp
imul
out
or
mov
push
std
push
and
cmpl
sbb
pop
stc
lds
add
sub
push
pop
or
or
notl
rol
dec
xchg
js
sbb
repz
mov
popa
hlt
imul
inc
push
sbb
scas
lods
int
movsl
dec
cld
push
jl
jnp
sbb
pop
cmp
jns
dec
mov
mov
xchg
xchg
js
idivl
cmp
dec
adc
mov
and
cli
shrb
subl
dec
cmp
rcrb
adc
xor
xchg
jbe
and
call
mov
xchg
add
jae
cmp
pop
xor
mov
jmp
cmp
jb
push
mov
cmp
out
inc
mov
fiaddl
push
imul
mov
enter
call
das
sbb
sub
cmp
outsl
pop
pop
push
scas
cwtl
lahf
test
mov
fucomip
iret
clc
aas
or
sbb
sub
cmp
outsl
pop
pop
push
scas
cwtl
lahf
test
mov
fucomip
iret
clc
or
sbb
sub
cmp
outsl
pop
pop
push
scas
cwtl
lahf
test
mov
pop
push
shlb
or
out
cmpsl
xchg
mov
xor
orb
xchg
rclb
gs
and
xor
add
adc
arpl
pushf
mov
dec
xchg
pop
loop
repnz
or
push
arpl
adc
fidivs
inc
mov
mov
push
xchg
inc
loop
repnz
adc
push
and
xor
arpl
sbb
cmp
or
sub
cmp
sar
cmp
loope
mov
enter
push
out
adc
insb
aas
div
inc
rorl
pop
std
iret
dec
repz
jecxz
adc
add
lahf
and
jl
fs
lock
lea
add
cmpsl
js
dec
aas
cmpsl
inc
and
cld
push
cmpsb
in
and
or
fldenv
mov
mov
sub
sub
js
cltd
xor
add
xor
push
adcb
mov
dec
adc
xchg
or
cli
dec
ret
je
adc
push
xor
xor
lods
sbb
mov
or
cltd
cmp
in
ja
lahf
and
test
inc
mov
std
jnp
insb
adcb
loop
repnz
or
add
add
adc
bound
popf
insb
testb
sub
cmp
pusha
mov
dec
addl
push
leave
ds
std
add
fidivl
xchg
jb
js
jo,pn
pop
cltd
jp
ja
sub
add
insb
pushf
jl
sub
cmp
or
sbb
in
xor
add
adc
bound
pushf
mov
dec
xchg
pop
loop
repnz
or
sbb
in
xor
add
adc
bound
pushf
mov
lret
rcrb
stc
mov
xor
aam
mov
and
fistps
shrb
shrb
mov
shlb
cmp
pop
mov
sar
addr16
or
stos
dec
mov
or
cwtl
dec
and
stos
adc
nop
sbb
in
aaa
sub
cltd
stos
cmp
add
icebp
aas
mov
popf
in
sbb
aas
push
mov
pop
add
mov
into
das
mov
mov
insb
into
push
push
sbb
in
test
mov
mov
mull
lret
dec
sub
sub
mov
scas
pop
sub
fstl
xchg
xchg
sub
mov
stos
mov
xchg
loop
mov
mov
mov
push
int
loop
or
roll
add
sbb
sub
lds
aam
push
hlt
cmp
cmp
nop
fcoms
insl
adc
int3
nop
push
jg
adc
jmp
lahf
out
scas
xor
insb
test
pop
and
aas
out
imull
fnstenv
jno
aad
or
pop
bound
push
out
inc
stos
leave
mov
imul
and
xor
sbb
cmp
sub
sbb
inc
aad
or
mov
xchg
inc
and
pop
je
jge
inc
mov
jo
dec
sub
and
push
jne
imul
mov
les
jmp
mov
inc
aam
insl
add
mov
popa
mov
adc
addr16
xor
xchg
jle
add
mov
and
decl
jle
les
inc
mov
xor
ficoml
and
jnp
push
mov
push
adc
jecxz
sti
rcr
inc
add
mov
xchg
jmp
imul
jbe
ret
lret
mov
iret
cmc
ja
test
adc
cmc
mov
inc
mov
outsb
add
jl
aam
or
negb
adc
shll
sub
dec
and
mov
push
out
push
mov
icebp
in
xchg
push
push
mov
mov
xchg
cmp
fwait
xchg
push
pop
add
push
ss
lods
xchg
cmp
repz
adc
push
mov
mov
inc
out
mov
aad
nop
pushl
sub
pop
xor
xor
dec
subb
je
inc
mov
cmp
pushf
les
rolb
sbb
aad
xchg
adc
movsb
outsb
cmp
pop
nop
sub
int
inc
daa
or
mov
push
mov
or
popa
mov
cmp
rcr
mov
pop
jne
jno
adc
fadd
add
fisubs
adc
ss
js
jns
pop
movsb
mov
dec
dec
ja
andl
scas
or
add
mov
fildll
test
cs
popf
cmp
jecxz
insb
adc
jo
add
shl
sti
add
fnstenv
pusha
into
cmpl
scas
les
adc
orl
lock
fistpl
in
ret
pop
add
in
xor
arpl
cmp
and
cmp
aaa
jp
push
jle
xchg
mov
jae
popa
cmp
sbbl
clc
bound
sub
out
sub
test
mov
clc
mov
sub
jecxz
jp
xor
dec
ret
je
repnz
xorb
cmp
mov
fisubrs
jne
jo
fucomi
dec
or
ficompl
sub
mov
mov
pop
lock
inc
mov
sub
mov
frstpm(287
sbb
iret
push
xchg
dec
mov
sbb
xor
test
dec
je
mov
lret
inc
mov
mov
popa
fisttps
mov
mov
repnz
inc
into
xchg
xor
cmp
jne
call
mov
inc
jb
mov
sets
mov
faddp
dec
adc
arpl
push
push
loope
ret
push
sbb
mov
shll
nop
jle
imul
jp
and
stos
fistpll
xor
std
outsb
imull
xor
andl
xchg
loop
lds
adc
shr
push
and
andl
ja
stc
mov
xchg
outsb
mov
adcb
out
icebp
cmpsb
cmc
push
adc
popf
mov
in
test
push
test
sbb
pop
and
iret
xor
out
ret
incb
sub
movl
in
mov
stos
lret
test
push
test
xor
clc
jge
add
scas
push
mov
pop
xor
incb
sti
jecxz
adc
dec
add
fstpl
loop
call
adc
out
mov
sub
inc
inc
or
inc
mov
jge
rcrb
lret
nop
hlt
daa
mov
inc
addr16
inc
jnp
je
push
in
jb
mov
mov
leave
pop
inc
cli
stos
sub
mov
push
mov
fcmovnbe
jl
hlt
ret
shl
adc
std
jb
lahf
xor
ret
mov
adc
cmpsb
add
je
les
sbb
cltd
push
fsubs
repz
jns
aaa
mov
cli
jns
pop
push
adc
clc
fisttpl
stc
or
test
movsl
std
mov
cs
xchg
cmpb
mov
push
pop
lahf
shll
fdivl
mov
push
push
ret
xchg
lods
mov
les
dec
push
or
aas
insb
ljmp
fstpl
nop
fstps
sub
out
stos
pop
mov
add
jl
push
cmp
aam
loopne
js
mov
sub
sbbl
insb
aas
xchg
and
fucomip
inc
jl
sbb
out
xor
pop
mov
orb
cmp
or
push
out
andb
cli
xchg
mov
fsubrs
fidivrs
pusha
inc
mov
icebp
js
out
loop
inc
cmp
aad
xor
sub
pop
popf
popf
and
mov
mov
inc
mov
fimuls
enter
add
inc
out
stc
cltd
fstpl
rcrb
or
mov
mov
test
les
pop
scas
cmp
ss
xchg
dec
jo
jb
imul
dec
inc
stos
test
jae
pop
push
push
add
outsl
jno
lods
fisubrl
jns
pop
stos
andl
cmc
pop
icebp
jne
inc
cs
inc
frstor
mov
mov
in
mov
inc
mov
es
scas
ds
movsl
mov
int
xor
lock
shl
jmp
nop
pop
movsb
jecxz
rolb
outsl
push
xlat
insb
fstl
shll
js
xchg
sbb
mov
int3
in
incb
mov
jne
stos
pop
pop
fld1
cld
inc
imul
mov
inc
fisubl
cs
mull
adc
lcall
xchg
sbb
jne
mov
mov
popf
mov
sub
mov
filds
xor
loopne
add
dec
mov
aas
adc
pop
jne
vrsqrtps
les
inc
xchg
push
inc
mov
pop
sub
xor
jp
push
fstpt
or
testb
test
xchg
inc
xor
test
or
fiadds
fisttps
daa
dec
xor
inc
jnp
mov
flds
sub
jae
dec
adc
ficoms
sarb
gs
add
les
scas
xor
jbe
clc
mov
add
sti
lods
rclb
add
icebp
xchg
out
jl
stos
xchg
ret
dec
int3
outsl
jle
sub
out
pop
pop
xor
fisttpl
in
mov
dec
int3
mov
mov
or
adc
xor
int
sar
hlt
mov
shll
xchg
stos
pushf
sub
adc
add
aam
push
outsb
cmp
ret
out
test
mov
xor
or
sbb
ret
scas
in
inc
xchg
xchg
cmpb
adc
aam
jle
mov
pop
fidivs
aad
mov
pop
cmp
js
push
cmp
idivb
cs
jl
pop
ss
insb
push
xchg
hlt
push
xor
aaa
jne
cmpsl
gs
shll
cmc
inc
shrl
leave
push
js
lds
in
sub
add
test
xchg
movsb
fcompl
inc
xchg
cmp
push
aam
and
test
adc
mull
push
xor
sbb
sbb
decl
dec
repz
mov
lock
mov
and
jecxz
mov
out
loop
push
test
xchg
test
sub
fimull
mov
xchg
jo
addr16
js
jge
shl
push
shrl
push
sti
pop
fwait
jno
cs
ffreep
loopne
leave
inc
mov
shll
jbe
out
mov
push
fidivrl
je
jb
jns
ss
jbe
mov
loope
sbb
aaa
sbb
das
sub
mov
stos
jne
xor
cld
adc
lret
mov
jecxz
push
sub
add
sub
xor
mov
mov
cmpb
rclb
or
mov
add
sti
xor
clc
aad
js
stos
mov
pusha
or
loopne
popf
pusha
xchg
add
mov
fsubs
pop
mov
lods
das
test
add
scas
mov
or
outsb
sbb
push
add
ret
jmp
and
insl
shl
add
loopne
xchg
int
fwait
dec
adcb
cmpsl
hlt
inc
adc
daa
cmpsl
stos
fldenv
inc
cwtl
sbb
xor
dec
cld
add
jns
out
push
xchg
xchg
aad
xchg
cmp
test
int3
xchg
add
jno
lods
ficoms
cmp
andl
xchg
push
int3
sub
sti
popa
mov
inc
cmpsb
notl
mov
mov
ret
lea
dec
insb
mov
std
add
cmp
rorb
mov
neg
imul
or
dec
dec
je
push
cli
add
sbbb
shll
ljmp
adc
mov
pop
sbb
ss
cmp
and
mov
sbb
push
sbb
js
inc
sbb
stos
inc
dec
les
xchg
jg
xchg
mulb
jae
vrcpps
inc
cmp
mov
out
push
test
scas
sub
ds
fsub
fs
icebp
rcrl
sub
xchg
xor
out
sub
jp
xchg
repz
outsl
out
mov
sti
push
loope
inc
fadds
leave
mov
cmp
out
xchg
out
pusha
outsb
xchg
mov
rorl
ficoms
pop
inc
and
sub
pop
shrb
sbb
insl
andb
jl
mov
push
out
les
jl
cs
xchg
pop
data16
imul
or
pushf
inc
mov
repnz
out
dec
in
jns
push
stc
dec
shll
nop
pop
inc
jl
dec
and
int3
mov
cmp
fwait
jp
outsl
ja
mov
adc
lea
inc
add
imulb
loop
mov
popf
dec
dec
xchg
arpl
scas
stc
add
movsb
dec
push
jnp
mov
mov
fldenv
jae
push
cmpsl
and
js
sub
out
das
bound
sub
jb
xchg
pop
aam
xchg
lock
adc
arpl
sub
push
cmp
rcl
inc
inc
pop
mov
outsb
adc
lods
cmpsb
cmpsb
or
jmp
push
dec
mov
pop
adc
aad
sahf
push
loope
jo
icebp
lahf
mov
pop
mov
sbb
add
idivb
mov
daa
fwait
xor
test
repz
cmp
and
fisubs
in
std
xchg
xchg
push
js
mov
addr16
test
aaa
iret
xchg
jmp
xchg
ja
cld
mov
xor
adc
mov
sbb
sub
push
cli
lcall
ret
adc
push
test
insb
sub
sub
das
push
lock
jle
fnstcw
scas
popa
mov
into
out
pop
xor
and
jns
into
jb
sarl
add
popa
xchg
es
rclb
mov
jmp
in
ffreep
lock
or
shrb
dec
lcall
nop
or
mov
das
add
fdivr
test
sti
divl
imul
add
pop
mov
push
adc
or
add
or
fidivl
std
inc
or
nop
sub
rcl
imul
ljmp
pop
lods
int
test
xor
out
cmp
push
orl
dec
mov
ds
jg
aaa
stos
mov
aaa
mov
mov
aas
icebp
dec
sbb
dec
dec
mov
lea
push
xchg
mov
adc
ret
or
outsl
push
lea
aam
adc
adc
cmpsb
mov
push
cmp
fsubrp
idivl
sbb
enter
and
cmp
loopne
loope
enter
pusha
inc
loop
adc
aad
sbb
cmpsl
push
int
and
loop
jno
std
adc
lcall
adc
fadds
mov
stc
inc
popf
pusha
push
xchg
bound
cmp
out
dec
and
and
push
jnp
sbb
stc
mov
jae
imul
iret
adc
xchg
sub
and
sub
mov
mov
push
xlat
lcall
idivb
outsb
inc
test
dec
dec
xchg
push
dec
dec
sbb
lcall
js
cmp
cmp
push
mov
lret
in
or
ds
mov
dec
lahf
out
mov
or
sbb
inc
xor
mov
mov
add
xchg
shrb
lret
jge
fcmovnb
in
js
xor
or
inc
mov
inc
sbb
push
daa
mov
shrl
mov
fisttps
mov
pop
imul
iret
sub
dec
lea
outsl
shll
mov
divb
push
mov
cmpb
and
out
push
cmpsl
xchg
fisttps
fstpl
imul
xorb
faddl
fdivr
adc
sub
cmp
or
sahf
dec
cs
ficompl
mov
jae
adc
pop
add
mov
jne
sbb
jle
int
lret
mov
mov
outsl
and
repnz
dec
xchg
push
dec
test
fs
jnp
adcb
or
test
mov
push
test
pop
jmp
push
push
adc
mov
mov
add
stc
lret
mov
and
add
dec
add
push
lods
mov
testl
dec
mov
aam
dec
loopne
xchg
testl
idiv
fists
and
or
clc
jno
cmpl
test
inc
jnp,pt
dec
lret
add
jno
jae
int3
insb
mov
in
bound
sbbb
mov
sub
cmc
cmp
sbb
mov
lods
mov
lods
ret
imul
mov
xchg
inc
addb
icebp
test
mov
xchg
adc
in
cmp
add
stc
ljmp
or
lahf
int
mov
pop
das
filds
mov
popf
sbb
mov
sbbb
mov
bound
sbb
clc
xor
lods
mov
dec
pop
add
pop
out
dec
arpl
and
xchg
pop
jbe
or
push
sbb
sub
xor
dec
insl
cmpsb
shl
xchg
xchg
shrb
mov
nop
sbb
xor
ret
sarl
mov
or
ja
adc
add
mov
aaa
xlat
fxam
test
fistl
mov
mov
jecxz
adc
sub
ss
inc
je
repnz
or
dec
ficomps
ret
ja
dec
scas
fsts
push
out
sbb
mov
jnp
add
xor
inc
jmp
xor
mov
pop
mov
pusha
out
fisubl
orb
jne
jb
test
daa
xor
or
ss
leave
movl
insb
cmc
fisubrl
mov
sub
sbb
mov
sub
fmull
jno
xor
repnz
insb
jg
inc
jae
push
mov
rorl
stc
pop
mov
cld
mov
inc
mov
popa
push
mov
inc
cmp
mov
repz
test
dec
mov
js
gs
insb
leave
scas
jg
es
mov
in
xchg
incl
ret
jns
lods
jb
not
outsb
dec
aas
jge
ret
sbbl
and
sbb
xchg
add
push
daa
push
xchg
and
fistpl
in
jno
repnz
cmp
inc
notl
repnz
loop
cli
jl
cmpsl
mov
ljmp
jle
pop
inc
hlt
mov
mov
adc
scas
cmp
adc
sbb
fwait
rclb
adc
outsb
lods
mov
les
push
dec
jno
andw
ret
sub
sbb
in
aad
jb
push
cmp
or
or
aad
pop
lods
movsb
repz
lea
pop
sub
add
push
and
aam
mov
sahf
push
push
std
mov
shll
fcmovb
daa
out
mov
in
adc
mov
ret
mov
and
icebp
repnz
and
movsl
and
push
shl
loopne
push
xor
xlat
pop
pushf
xrelease
jecxz
outsl
roll
mov
sub
loope
dec
sub
and
jbe
enter
add
push
pop
mov
adc
sbb
sbb
inc
test
lcall
push
stos
jl
shr
js
testb
das
inc
add
mov
mov
dec
push
shll
inc
ja
xor
jns
push
and
mov
vpmacsdd
mov
ljmp
push
cs
iret
fwait
add
sbb
pop
dec
xor
std
lret
inc
xchg
cld
xor
js
cmc
subb
imul
sub
add
std
fdivl
ljmp
cmp
mov
cltd
mov
and
xchg
jg
jns
dec
xor
movb
sub
push
lret
mov
sub
pushf
out
add
leave
lds
xchg
mov
or
sub
adc
bound
xlat
mov
stos
lret
shll
je
inc
push
nop
sub
vpermi2d
add
test
push
jae
aaa
jle
rclb
or
jbe
pop
dec
repnz
jb
inc
aad
pop
mov
pop
int
ret
cltd
mov
push
or
inc
cmc
mov
cmp
jno
stc
xchg
leave
xor
pop
jo
or
xor
inc
pop
or
push
xlat
lret
push
pop
imulb
call
enter
xlat
dec
inc
divl
sbb
out
pop
test
stc
aaa
mov
aaa
ds
test
stos
sbb
test
js
jmp
and
int
gs
jmp
or
pop
and
dec
mov
fwait
xchg
scas
inc
xor
sub
cmp
repz
jns
and
push
test
cmp
ljmp
push
mov
cli
push
jo
arpl
cli
dec
push
mov
lea
xchg
mov
sub
cmpl
lret
shl
mov
jns
imul
int
cs
cwtl
je
or
loope
mov
inc
pushf
cmp
xor
cmc
cmpsl
iret
sahf
popa
jmp
xchg
mov
sub
mov
push
repz
mov
mov
mull
cld
or
jbe
scas
int
mov
lods
mov
movsl
out
loopne
rcrl
bound
xchg
sub
es
inc
fcmovnbe
or
and
lea
and
push
enter
mov
jmp
jae
mov
dec
testb
xchg
dec
repz
ss
xchg
inc
mov
xor
mov
test
jg
push
push
cli
ffreep
xchg
sbbl
mov
cmp
mov
in
push
cli
xlat
mov
clc
and
lods
mov
pop
pop
inc
out
push
addr16
movsl
ret
fstpl
inc
inc
lods
shlb
xchg
ljmp
sbb
jno
fstl
fstl
loop
and
mov
call
xor
pop
daa
dec
jmp
jne
js
push
and
mov
stos
xor
xchg
push
lret
push
clc
popl
loope
mov
shl
std
cmp
cmp
inc
fmulp
js
push
sahf
jo
sub
inc
mov
sbb
dec
popf
pop
mov
ds
mov
nop
subl
orb
test
fnstenv
mov
xor
addr16
sahf
add
push
pop
push
pusha
or
shrb
inc
push
lods
mov
xchg
loope
cmpsb
cmp
mov
push
dec
mov
xchg
sbb
ret
aam
mov
or
push
sub
daa
or
push
inc
shl
and
cmp
call
jae
jmp
bound
fwait
pushf
cmpsl
mov
or
outsb
test
jl
dec
xchg
pop
loop
repnz
or
sbb
in
xor
add
adc
bound
pushf
mov
dec
xchg
pop
loop
repnz
or
sbb
in
xor
add
adc
bound
pushf
mov
dec
xchg
pop
loop
repnz
or
sbb
in
xor
add
adc
bound
cwtl
mov
dec
xchg
pop
loop
repnz
or
fsubl
in
xor
int3
adc
mov
cltd
mov
int3
into
xor
jl
flds
push
or
add
pop
add
or
push
ja
out
add
add
jae
add
mov
add
sub
bound
mov
pop
add
add
xor
mov
add
add
add
add
add
add
push
add
add
xor
add
add
add
cltd
add
add
pop
pop
add
mov
add
add
add
xchg
addb
add
add
add
sub
popl
mov
add
add
mov
sbb
push
add
cmp
add
add
je
mov
insl
add
add
add
fiaddl
add
add
add
adc
jl
pop
add
sub
sub
mov
inc
add
push
add
add
add
add
add
add
add
add
add
add
add
add
and
adc
mov
imul
lock
add
add
dec
add
scas
add
add
add
add
add
add
rolb
mov
xor
loop
sub
aaa
add
add
add
add
add
add
out
add
push
add
jo
inc
add
loop
leave
add
add
push
add
inc
add
cltd
add
add
add
mov
add
add
pusha
add
add
add
inc
add
add
add
add
add
xor
mov
add
add
add
add
data16
popa
add
inc
add
loop
push
add
add
add
add
and
dec
add
add
add
jge
push
add
cmpsb
add
add
add
add
add
add
add
add
add
add
add
iret
add
add
add
push
add
add
add
movsb
add
add
add
add
push
add
add
sub
jge
sti
add
add
dec
add
add
inc
add
add
add
jge
inc
add
add
add
xor
xor
push
add
add
add
loop
insl
add
add
add
adc
push
xchg
add
add
and
jge
mov
add
add
add
add
leave
add
add
add
add
mov
add
add
push
add
add
add
mov
movb
add
add
add
add
adc
push
add
add
add
add
add
add
roll
xor
les
les
pop
add
add
add
add
add
add
add
inc
add
add
add
add
pusha
add
add
add
sbb
add
add
add
add
add
cmpsb
add
add
rolb
add
add
cmp
push
add
add
add
add
inc
add
call
add
add
leave
add
jge
fldl
pop
add
add
cmp
mov
fldl
inc
add
add
jge
push
add
add
dec
add
lods
add
add
add
sub
mov
add
add
add
cmpsb
add
add
add
pop
add
add
add
loope
mov
aas
outsb
jecxz
jno
into
fisttps
mov
outsb
sub
in
rcl
outsb
ljmp
or
mov
cmp
mov
jo
sahf
test
pop
enter
data16
xor
mov
lcall
push
out
arpl
or
and
xlat
and
es
jmp
pop
rorl
out
mov
test
iret
call
push
adc
call
adc
lods
pushf
lret
and
inc
dec
push
push
sub
jp
push
test
xchg
adc
inc
in
inc
hlt
pop
fs
ret
add
and
push
imul
mov
sub
adcb
pushf
mov
mov
test
push
xor
mov
mov
push
sbb
push
sbb
ljmp
push
sti
cmpsl
xor
inc
jge
ljmp
mov
mov
test
cmp
data16
pop
push
adc
gs
mov
or
imul
idiv
pop
hlt
inc
pop
mov
lea
pushl
stc
pop
dec
lock
dec
pop
dec
inc
lods
pop
enter
mov
imul
adc
je
fbld
icebp
or
push
jl
cmp
repnz
nop
insl
mov
mov
icebp
ret
fistl
pop
add
rorb
inc
lods
fs
mov
das
xor
push
lods
nop
insb
pop
mov
ret
jne
xchg
xor
adc
dec
loope
xchg
shll
or
idiv
sbb
xchg
or
pop
add
das
popf
movsb
sub
lret
push
dec
adc
xchg
test
jmp
push
movsl
ja
fldl
inc
scas
popf
sbb
mov
outsb
jl
aaa
aaa
faddl
add
out
jge
aas
lret
movb
xchg
fmuls
hlt
loop
shlb
xchg
lret
mov
jecxz
notl
lock
add
roll
cli
fxch
sub
inc
jnp
jno
add
add
or
xchg
pop
inc
lods
mov
mov
adc
xor
jge
stos
fadds
outsb
mov
cmp
rolb
jge
ja
call
jo
repz
add
movsb
push
out
jl
push
fcmovnb
inc
outsl
jnp
jmp
add
mov
mov
dec
mov
loop
iret
sub
adc
xor
adc
jae
mov
inc
outsb
pop
es
out
cmp
xor
inc
mov
rclb
push
adc
daa
or
lock
pop
in
xor
xor
sbb
fsubrl
push
dec
or
aaa
push
inc
int3
mov
push
into
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xor
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
dec
clc
add
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
or
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
clc
add
jl
add
nop
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
or
add
sub
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
movsb
stc
add
lods
stc
add
mov
add
mov
stc
add
int3
stc
add
aam
add
out
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
add
add
or
add
sbb
add
sub
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
