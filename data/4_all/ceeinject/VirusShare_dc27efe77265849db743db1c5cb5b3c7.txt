lret
call
in
movl
adc
mov
push
stc
push
mov
les
lods
in
pop
fmul
push
pop
ret
int3
add
in
cld
add
dec
inc
mov
mov
inc
cld
push
mov
pop
cld
movl
inc
jmp
cmpsb
push
into
lea
push
jg
out
int3
mov
push
mov
or
hlt
push
xor
dec
mov
addl
pop
push
sub
addr16
jb
in
sub
iret
in
dec
repz
test
ret
and
in
lcall
faddl
fdivs
mov
fadds
nop
out
inc
sub
mov
fdivrp
mov
xor
mov
sbb
loopne
pop
push
movsb
int3
mov
loopne
enter
and
popa
les
xchg
add
rolb
sbb
mov
mov
mov
mov
das
mov
outsl
push
xchg
mov
lret
xorl
in
mov
pop
push
movsb
stc
lods
add
fildll
jb
int
jbe
xchg
movsb
lret
jb
xchg
add
xchg
mov
lcall
jle
mov
pushf
sar
in
mov
jl
jle
cwtl
nop
out
pop
outsl
xchg
movsb
mov
cmp
test
pushf
insl
nop
push
movsb
stc
lret
jno
pop
push
add
mov
and
pop
mov
jae
add
test
push
repz
sbb
add
mov
mov
dec
mov
fwait
inc
js
cmpl
lea
mov
out
jg
pop
andb
lds
jo
and
aas
xchg
xchg
insb
or
push
mov
gs
lods
stos
call
jae
imul
pop
fs
mov
pusha
lcall
jecxz
xchg
pop
out
gs
outsb
pop
push
icebp
stos
push
stc
jae
xchg
pop
stos
push
adc
push
pop
xchg
mov
imul
iret
gs
lcall
sbb
dec
cmpsb
inc
pop
xchg
inc
cmpsl
inc
xchg
and
add
or
test
gs
lcall
test
cmp
push
test
stc
jae
mov
mov
imul
pop
xor
aas
xchg
mov
dec
sub
iret
gs
int3
sbb
in
mov
and
fs
and
stc
jae
scas
and
pop
xchg
add
aas
xchg
and
out
gs
mov
mov
adc
adc
mov
movsb
adc
sarl
xchg
and
mov
iret
gs
lcall
sbb
add
mov
mov
adc
inc
or
inc
or
or
and
mov
stos
ret
pop
sub
adc
add
int
out
mov
je
mov
add
mov
adc
hlt
push
mov
xchg
pop
lods
add
mov
add
mov
filds
clc
cmp
jae
dec
clc
add
nop
clc
jmp
fidivrs
or
xchg
jmp
jmp
fcmovnu
or
push
jmp
or
push
pop
hlt
repz
ljmp
daa
pop
push
pop
push
lods
sahf
jo
push
jecxz
mov
inc
pop
sub
and
subl
pop
cmpl
or
sub
sub
test
addb
pop
negb
cmp
or
push
inc
push
js
push
or
pop
sbb
jo
or
cmp
add
or
mov
enter
fwait
mov
or
or
or
adc
cmp
or
sbb
xchg
jns
xor
cmp
and
mov
loop
out
inc
cmp
or
rcrb
repz
jg
push
ljmp
mov
pop
jmp
push
mov
sub
cmp
or
roll
pop
pop
dec
cmpsl
fildll
cmp
dec
ds
popf
subl
dec
and
xor
dec
jnp
add
xor
push
sub
adc
mov
nop
sahf
adc
or
ret
or
hlt
adc
mov
push
push
loop
cld
add
dec
adc
jecxz
or
adc
aam
cs
mov
cmpsb
or
lock
cmp
add
mov
or
shl
jne
cmp
jae
pop
lock
add
insl
clc
in
jmp
rcr
imul
into
pop
fnstsw
add
pop
sub
mov
imul
push
mov
test
xchg
jmp
fdivr
js
and
scas
clc
mov
rol
je
xor
cmpsb
jne
push
adc
mov
push
lea
sub
sub
fcomps
ret
sbb
push
imul
out
fsts
out
or
stos
xbegin
push
or
cmp
jge
add
xor
jmp
mov
or
dec
adc
sbb
push
xchg
push
fistpll
pop
mov
lods
mov
push
test
mul
bound
xchg
cld
xor
movsb
cmp
cmp
pushf
mov
xchg
dec
sahf
sub
mov
adc
push
daa
orl
movsl
fnsave
test
add
mov
pusha
mov
adc
or
clc
or
push
js
imulb
scas
cmp
loope
test
xlat
aad
jae
or
rcl
setnp
or
inc
in
pop
mov
xor
and
insb
adc
lea
cltd
pop
pop
mov
cmp
cwtl
inc
cltd
cmp
mov
mov
pop
das
mov
jecxz
fwait
push
mov
dec
adc
inc
imul
loop
js
mov
jle
xchg
jl
cmp
shlb
test
std
push
push
mov
xchg
and
popa
mov
push
repnz
std
subb
lock
xor
addr16
sbbb
sub
test
mov
xchg
push
mov
jg
push
lret
mov
lods
mov
mov
add
inc
in
push
cmp
cmp
test
mov
into
cmp
test
hlt
jmp
jmp
jl
neg
dec
lahf
aam
push
sbb
add
jmp
in
mov
into
mov
ret
dec
aam
mov
dec
mov
clc
cli
cmp
into
jmp
cmp
mov
aam
rolb
sahf
fwait
pop
rcl
jnp
movsb
fistpl
and
adc
dec
sub
push
inc
mov
lea
pop
push
movsb
lea
push
rcrb
or
fisttpll
js
jp
rorb
or
inc
add
lcall
push
cld
or
and
cmp
pushf
dec
sub
test
shll
cmp
mov
call
adc
cmp
rcr
mov
lods
adc
ficoms
xchg
jle
xor
nop
inc
mov
xchg
mov
ss
sbbb
or
jmp
mov
adc
andb
or
adc
push
adc
mov
ret
sub
adc
jo
in
rorl
push
andl
pop
out
aad
rol
addr16
daa
adc
stos
aad
dec
mov
mov
jnp
imul
and
inc
adc
je
xor
hlt
mov
add
ret
call
fwait
xchg
fldcw
sub
push
outsl
mov
adc
iret
add
or
pop
repz
rcr
jg
movzwl
cmp
scas
dec
cmp
cmpsb
cmpl
test
mov
sub
shll
movzbl
sahf
lods
shlb
adc
aad
scas
std
hlt
add
sti
jmp
sbb
add
adc
push
cld
push
hlt
jmp
jmp
mov
xchg
inc
mov
scas
addl
xor
jne
xor
stos
call
add
jg
or
mov
pop
mov
loopne
adc
pop
lods
jns
push
out
bound
movsb
inc
push
out
fisttpl
jecxz
shlb
push
pop
sbb
push
sbb
cmp
jb
xlat
push
adc
xor
xor
loope
push
inc
sub
sbb
pop
adc
adc
push
mov
and
mov
call
inc
mov
push
mov
xor
bound
mov
push
mov
cltd
imul
dec
add
mov
push
cld
les
mov
adc
push
adc
push
pop
clc
js
rolb
lahf
call
sbb
xchg
fnstsw
jns
push
inc
push
mov
dec
or
adc
push
data16
fldl
dec
adc
adc
pop
fmull
mov
cwtl
mov
sbb
lea
push
pop
lods
pop
outsb
dec
xor
sbb
rolb
shl
inc
out
or
jae
sub
dec
add
je
dec
push
addl
das
rdtsc
mov
jne
je
push
in
cmp
pushf
lods
cmp
lcall
mov
lods
push
cld
ror
popa
inc
aad
add
pop
int
or
add
or
jl
bound
into
dec
jnp
mov
fcoml
or
pop
or
cmp
arpl
insb
jne
in
ret
lahf
xchg
push
in
outsl
insl
sti
cmp
setl
test
iret
sbb
jg
or
aas
mov
imul
sbb
adc
sarb
arpl
mov
or
dec
hlt
lods
sbb
push
iret
dec
push
push
repz
sbb
mov
or
sub
mov
scas
enter
push
cld
dec
divl
gs
jmp
sub
inc
fiadds
inc
xor
mov
dec
inc
mov
pop
sub
das
mov
popa
enter
cmp
sbb
aas
lret
pop
in
adc
adc
stos
mov
and
dec
mov
jbe
sbb
adc
pop
add
lahf
lcall
push
adc
add
sbb
insl
fcomps
mov
push
mov
in
ret
jl
in
shrb
mov
mov
adc
jb
popa
lahf
sub
sub
imul
add
jl
movsb
adc
xor
ficompl
int3
push
mov
mov
cmp
outsb
and
or
xor
je
add
nop
inc
and
or
insb
pop
cmp
sbb
adc
sbbl
faddp
out
and
stos
sti
lods
inc
push
or
dec
in
sbb
insb
adc
js
out
in
add
ficomps
xchg
add
add
push
jne
jne
cmpsl
sub
jo
lods
mov
ljmp
add
push
or
outsl
mov
adcl
and
loopne
mov
jo
push
cmp
and
sbb
mov
ljmp
sti
xchg
and
lock
arpl
and
es
cmp
cmp
add
pop
inc
and
lea
pop
jb
mov
fcoml
je
or
daa
mov
jecxz
sbb
mov
insl
pop
and
pop
mov
test
dec
mov
adc
sbb
dec
pop
jne
adc
xor
mov
mov
push
push
inc
fcoml
xor
and
cs
push
jne
mov
jns
add
jmp
jmp
mov
inc
cmpsb
jae
jmp
dec
sti
in
dec
addl
pushf
rolb
add
cmp
sbb
sbb
xchg
xor
sbb
adc
push
sarb
mov
sub
das
mov
sub
pushl
mov
xor
js
push
test
ljmp
add
add
enter
mov
movsl
popf
inc
bound
cmp
jne
adc
or
lret
mov
mov
sub
mov
push
test
call
inc
and
add
xor
aas
cmp
or
push
cmp
pop
lock
shrb
popf
movsb
hlt
xor
sub
adcl
ds
push
ds
hlt
inc
dec
adc
xor
fs
mov
sub
enter
leave
outsb
mov
jmp
scas
or
hlt
xor
popa
mov
mov
or
cmp
jmp
sub
lret
in
rcrl
fcmove
xor
jmp
lea
inc
mov
insl
or
xchg
push
call
mov
arpl
lods
and
testl
in
addl
adc
lods
xchg
ja
in
add
cli
fcomp
push
or
jnp
jp
rcr
push
and
jg
dec
nop
push
movsl
mov
xchg
pop
in
enter
or
cmp
cmp
push
shl
call
sbb
adc
rorb
push
push
negb
shrb
fdivl
iret
pop
in
mov
jecxz
push
js
or
outsl
es
mov
das
pushf
xor
push
addl
sub
inc
or
sahf
adc
xchg
add
adc
add
pop
push
push
cwtl
cmp
cltd
popa
and
sti
scas
inc
or
adc
push
add
sub
andb
sbb
xchg
jbe
push
sbb
cmp
jmp
mov
pop
sub
jae
scas
sti
outsb
mov
insl
sub
mov
push
dec
ret
fldt
sub
inc
lock
adc
add
jb
add
int
adc
cs
leave
out
lods
outsl
jae
in
test
sahf
sbb
push
dec
add
in
rcll
sub
inc
test
adcl
popf
movl
dec
add
out
pop
shrl
jmp
js
push
cwtl
adc
mov
mov
jae
in
or
and
pop
sub
xor
sub
mov
dec
add
or
xchg
mov
adc
cmp
jg
lahf
nop
nop
push
mov
imul
lock
mov
daa
mov
sbb
stos
sahf
pop
jmp
outsb
rcrl
scas
mov
scas
fimuls
cmp
ja
out
insl
scas
cmp
push
cmp
movsb
sbb
inc
int3
push
rorl
dec
inc
pop
and
xor
cmp
mov
sbb
sbb
push
and
xchg
cmp
cmp
mov
sbb
mov
inc
pop
sub
cli
or
jg
les
sbb
add
xor
add
sbb
push
js
dec
in
mov
push
mov
mov
jl
stos
pop
xor
inc
pop
cmp
hlt
pop
mov
inc
mov
sub
xor
int
jg
cmp
adc
or
cmp
push
shll
dec
and
and
pop
cmpl
jbe
push
es
mov
leave
hlt
lcall
add
add
mov
clc
pminsw
push
mov
inc
add
sbb
lods
ret
inc
mov
lods
push
call
jno
test
jmp
dec
and
loopne
or
mov
adc
insl
add
mov
or
sbb
mov
or
pusha
xor
jb
xor
mov
cmp
xor
xlat
hlt
mov
push
jb
push
mov
cmp
jp
pop
outsl
sbb
lds
push
xor
fucomip
add
bound
or
ja
pop
sbb
sbbl
jbe
rcrb
fcoms
pop
pop
adc
jne
stos
paddusw
add
js
inc
sbb
xor
insl
add
push
pop
inc
adcb
push
movl
pop
mov
aas
ret
lahf
jmp
xchg
loopne
je
mov
mov
inc
sub
xchg
clc
pusha
sub
xlat
or
xor
js
daa
test
sbb
pop
or
dec
and
dec
pop
mov
mov
out
fs
sbb
outsb
orb
xlat
aam
xor
lahf
dec
shrb
lock
xchg
mov
add
pop
adc
dec
xor
xchg
pop
xor
ret
out
or
int3
add
int3
fistl
xor
fildll
jg
sub
stos
in
hlt
inc
inc
mov
adc
xor
rcl
clc
fisttpl
and
pop
sbb
and
jg
add
pusha
and
mov
orb
pop
xor
xchg
or
inc
push
xor
aas
pop
dec
xor
xchg
lods
jg
cmpsb
mov
sbb
hlt
test
inc
jb
dec
das
popf
hlt
jb
cs
cmp
jecxz
jnp
jo
mov
adc
je
cmp
scas
movsb
adc
aaa
mov
addr16
faddl
fsts
sbb
cmp
pop
jg
inc
jmp
lea
push
adc
pushf
pop
pop
loop
cmpsb
fadds
lock
adc
xor
or
mov
and
fistps
pusha
sub
lods
dec
mov
or
sbb
dec
cmp
adc
enter
cmc
pusha
hlt
xor
dec
dec
dec
sbb
adc
mov
sbb
fadds
xchg
fdivp
push
clc
mov
sbb
mov
imul
cmp
push
rcll
scas
cmc
lock
inc
sahf
inc
in
add
inc
cld
in
clc
aam
lds
push
inc
adc
rolb
cmpsb
jno
mov
pop
cmp
shll
fiadds
sysexit
gs
imul
call
dec
in
jl
add
aam
jno
in
mov
hlt
add
hlt
fstl
popa
and
hlt
pop
push
or
jo
shr
hlt
lock
ds
in
and
pop
sbbl
bound
pop
ret
mov
ja
inc
jmp
hlt
loope
and
push
xor
cmp
jge,pn
sbb
cmp
and
push
mov
sub
mov
cmp
sbb
shrl
mov
add
sar
add
or
ret
ret
rep
mov
test
inc
jnp
cmp
mov
inc
das
push
or
sub
pop
aad
xchg
add
push
lock
sbb
jne
dec
js
rcll
sbb
aad
push
ja
test
xor
dec
pop
aas
ds
cmp
push
pop
xlat
jne
cmp
adc
xchg
push
rep
jno
cmp
mov
pop
mov
dec
or
push
lock
sbb
pop
int
mov
jge
movsl
or
cmp
or
fsts
ret
mov
cmp
sbb
add
push
imul
mov
push
pop
or
sub
stc
pop
pop
or
pop
cmp
scas
sbb
cmp
inc
adc
arpl
lods
and
or
sti
sub
or
cmp
push
sub
aad
add
cmpl
push
fsts
adc
rsm
xor
rclb
in
in
dec
and
and
movsl
add
sbb
adc
jbe
int3
and
mov
jge
cmp
ret
fs
xor
mov
pop
add
dec
imul
lock
pop
push
neg
sbb
mov
mov
sub
mov
push
push
sub
loope
jg
pop
bound
sbb
add
add
lcall
sbb
or
adc
adc
xor
or
dec
push
inc
sub
or
mov
ljmp
lahf
inc
int3
clc
js
mov
aas
mov
rol
sub
adc
add
push
fistps
jne
mov
adc
jmp
sub
mov
add
cli
adcb
rol
add
add
shll
clc
cmp
inc
cmpl
and
adc
jb
ret
xchg
data16
add
test
movsb
shlb
fiaddl
clc
or
lods
mov
orl
xchg
popa
push
cmp
mov
inc
ja
stos
sarb
cli
fidivs
add
aad
imul
cmpsb
imul
and
push
lcall
enter
nop
movsl
jge
clc
adc
xlat
mov
mov
cs
and
jnp
adc
sub
cmp
inc
or
dec
ror
add
adc
aam
movsb
std
mov
mov
cmp
jne
lods
mov
sarb
jmp
in
int3
push
sub
adc
mov
int3
and
leave
dec
pop
pop
aam
adc
mov
sub
test
push
sub
aas
dec
jnp
jp
or
in
cmpsl
mov
add
mov
inc
dec
add
divb
fildl
push
mov
cmp
inc
adc
dec
add
es
adc
in
lds
add
fstl
add
enter
add
adc
sbb
add
adc
fs
push
push
filds
pop
mov
dec
cs
pop
dec
or
xchg
fxch
test
or
or
cmp
dec
or
adc
or
or
or
in
inc
or
or
pop
enter
sbb
xchg
or
cltd
loope
or
mov
dec
push
push
push
cs
fisttps
nop
arpl
dec
pop
or
mov
inc
add
jno
ds
jle
push
das
add
xchg
xchg
fld
add
jg
add
gs
addl
sbb
add
pop
pop
sbb
addl
or
fcmovne
or
sbb
dec
inc
inc
or
or
xor
or
or
int3
mov
xchg
push
pswapd
pushf
push
add
subb
jg
add
jle
popf
add
cmp
test
add
push
enter
push
addl
leave
adc
leave
or
sbb
leave
enter
orl
dec
inc
inc
or
nopl
dec
cmpsb
adc
push
xor
sbb
push
cmp
sbb
xchg
mov
add
add
mov
push
add
add
add
adc
push
fdivl
nop
mov
or
or
ss
mov
or
fs
or
and
or
or
dec
xor
insl
sbb
cmp
pop
adc
imul
sbb
mov
aad
imul
sub
cmp
call
scas
in
mov
sub
add
sbb
sbb
or
pop
or
or
or
jo
movsb
adc
out
push
inc
jae
adc
xor
outsb
push
aaa
mov
sbb
fdivrl
pop
or
jge
dec
das
mov
mov
pushf
fidivrl
push
dec
cmpsb
mov
jg
add
add
prefetch
ret
pop
or
pop
pop
sub
xorl
add
add
sbb
nop
xchg
and
sbb
orl
push
pop
push
dec
adc
sub
pop
sub
or
lods
les
inc
sub
push
and
or
ud2
push
pop
xor
popf
push
inc
sub
mov
mov
orl
dec
push
daa
or
mov
add
lods
imul
add
push
push
sbb
push
dec
sub
cmpsb
mov
push
in
or
or
or
pop
dec
or
add
sub
dec
sub
mov
and
jle
add
pop
mov
sbb
movntps
orl
orl
push
in
pop
pop
add
add
xor
dec
push
sbb
pop
add
sbb
popa
jno
or
sbbl
or
mov
push
push
sbb
inc
subl
add
cmp
dec
jecxz
add
imul
sub
jge
test
leave
pop
sub
call
enter
or
add
or
pop
xlat
inc
adc
sub
lods
mov
sub
adc
or
adc
ret
cmp
rorl
inc
push
pop
adc
jecxz
pop
into
outsb
bound
xor
push
bound
xchg
adc
jbe
in
pop
add
adc
mov
add
add
dec
cs
add
add
adc
mov
push
leave
test
inc
sub
nop
xchg
flds
dec
or
or
xor
cmp
jecxz
sbb
nop
pop
test
cmpsl
dec
sbb
xor
mov
sbb
pop
or
and
std
in
in
data16
or
enter
push
push
xchg
or
cltd
jecxz
pop
das
cmp
mov
lods
adc
add
jmp
add
es
lcall
and
sbb
incb
loope
add
xchg
out
push
popa
clc
push
clc
cld
push
scas
ret
clc
xchg
clc
cld
jns
dec
jae
clc
pop
clc
add
mov
loope
pop
addl
and
xor
daa
add
xchg
xchg
xchg
push
pop
pop
pop
enter
or
xor
or
enter
or
or
in
fs
or
xor
jb
or
xor
or
xor
sbb
push
psubd
push
pop
jl
mov
les
test
jbe
dec
jl
mov
rolb
jno
sub
sub
insb
and
add
pop
enter
inc
add
or
add
loopne
rolb
add
push
xor
jge
cmp
inc
mov
daa
lds
push
add
pop
push
add
cmc
push
rcl
popa
lods
mov
add
mov
jmp
mov
adc
mov
jmp
sarb
push
pushl
icebp
pop
movl
pop
adc
pop
jbe
js
or
or
xchg
hlt
push
shrw
cmpsb
lret
int3
cltd
push
enter
add
jbe
push
xor
notb
fstp
ds
lods
pop
inc
jg
push
and
dec
and
push
lcall
jp
xor
mov
test
jne
cmp
jb
cmpl
pop
idiv
mov
add
xor
flds
sub
mov
add
sub
jne
mov
in
out
in
hlt
or
lret
or
sti
xchg
fsincos
add
stos
mov
dec
ljmp
mul
add
inc
pop
mov
rcll
add
or
mov
das
add
push
add
add
cld
jmp
pop
leave
clc
pop
pop
xchg
push
jno
push
push
fs
cli
mov
xchg
cmp
add
inc
repnz
and
icebp
add
loopne
dec
repnz
cmp
lcall
mov
fs
pop
pop
mov
lcall
and
add
add
adc
and
add
loop
movsl
adc
jg
xor
mov
inc
lock
insl
roll
jbe
jbe
adc
mov
mov
adc
aam
push
pusha
icebp
dec
dec
outsb
and
jne
mov
lock
add
inc
xor
andl
inc
icebp
cmp
mov
mov
fmuls
pop
adc
loopne
sbb
in
call
sbb
and
pop
hlt
add
aaa
ret
roll
clc
cld
push
push
mov
pcmpgtd
test
sahf
enter
or
shl
nop
sbb
mov
add
pushl
inc
aam
pop
xchg
enter
jp
mov
sub
jb
mov
inc
mov
imul
adc
loope
add
dec
lcall
std
data16
movl
aas
lret
jmp
ds
sbb
ret
repnz
testb
js
push
or
add
inc
cwtl
in
mov
sbb
movsb
push
xchg
das
xlat
pop
sbb
cld
inc
or
jl
sbb
imul
cmp
inc
mov
mov
ja
fsubrp
ljmp
mov
dec
or
push
dec
imul
add
cmp
jle
sbbl
jbe
or
ret
cli
and
sub
jge
adc
mov
sbb
cmp
ja
cmp
jbe
in
mov
test
in
push
outsb
fcoms
mov
xlat
cwtl
inc
add
in
ljmp
inc
push
cmpsb
dec
loope
or
xchg
sub
inc
mov
ds
mov
jg
adc
dec
add
mov
xchg
or
cmp
push
pop
shl
je
mov
test
cmp
push
loop
mov
rcrb
sbb
je
loope
out
aam
cmp
into
lock
cmp
in
test
sbb
mov
lea
shlb
data16
add
loopne
mov
add
jo
or
push
pop
mov
loopne
movsl
outsb
adc
rol
clc
pop
mov
add
outsb
dec
or
pop
inc
cltd
add
pop
jp
lcall
adc
xchg
inc
inc
xchg
adc
or
movsl
pop
in
jb
sbb
out
testb
stos
add
jne
orl
loopne
iret
pop
incl
lds
ffreep
scas
xor
pop
push
pop
inc
pop
push
push
pop
clc
add
lock
notl
mov
ret
in
pop
leave
imul
sub
push
les
push
outsl
jl
fcomps
or
and
rcrb
fcmovnb
add
mov
es
cmp
inc
cltd
enter
add
cld
or
sub
lea
push
fnsave
fstl
negl
inc
pop
lret
iret
jne
add
movb
pop
shl
sub
dec
cmpb
xchg
jbe
mov
ret
movb
push
cmc
push
mov
movl
rol
push
adc
mov
je
aaa
dec
test
iret
scas
push
mov
rcll
sbb
add
push
and
jnp
lods
or
xchg
dec
test
push
mov
xor
pop
call
push
movsb
mov
cld
sbb
lock
addb
orl
jb
push
mov
fcomps
pop
cmp
jae
mov
addr16
adc
mov
add
cmp
jb
lock
and
pop
xchg
inc
adc
and
jg
das
sar
push
lea
cmp
ret
sbb
sbb
xlat
fiaddl
nop
cmp
mov
pop
jne
js
push
data16
xor
push
jg
test
xor
push
pop
loop
sbb
andl
or
out
mov
inc
jns
ja
xchg
dec
mov
sti
pop
sbb
xor
ja
shl
push
jp
mov
fldl
push
push
stos
push
pop
add
push
jl
xor
dec
cmp
loopne
repz
jl
push
mov
xor
pop
negb
push
push
push
nop
orb
mov
push
lock
idivb
xor
push
xchg
add
in
divb
sub
dec
pop
jo
cmp
mov
aas
shr
jmp
mov
push
inc
dec
ljmp
jbe
mov
jne
cmpl
xor
cmp
shl
xchg
sarl
sbb
pop
mov
and
adc
fidivs
cmpl
stc
jp
xchg
sub
and
dec
or
inc
in
and
or
inc
mov
push
push
inc
xchg
sbb
jmp
mov
enter
or
push
push
push
lock
fcoml
cmp
jne
pop
mov
xchg
aad
mov
scas
sbb
push
push
stos
dec
pop
inc
sub
je
add
jmp
fs
imul
andb
shlb
loop
out
jg
ret
jg
call
test
jg,pt
push
inc
adc
and
loope
movsl
push
inc
push
pusha
jo
mov
cmp
in
mov
lods
mov
jg
adc
divb
mov
fistl
or
jne
pop
jo
mov
sbb
cli
pop
pop
sbb
fildl
lds
sub
push
mov
bound
add
shr
inc
repz
add
sahf
push
pusha
cmpsl
push
popa
dec
push
xor
pop
loope
inc
or
ret
push
push
mov
jo
and
test
sbb
xchg
and
add
lret
sbb
cltd
in
dec
subb
call
mov
adc
push
or
add
ror
iret
aam
adc
push
add
test
and
push
mov
aaa
loop
je
and
or
test
rolb
mov
fstpt
popaw
inc
inc
add
je
cmp
cmp
arpl
loopne
sub
andl
sahf
rclb
jle
sbb
mov
lahf
dec
mov
fs
mov
jg
pop
jg
mov
jae
mov
mov
clc
test
push
out
cmp
je
push
jle
cmp
jl
mov
pop
jecxz
dec
sub
pop
loopne
jnp
or
rcrl
mov
mov
and
mov
sbb
add
or
popa
mov
and
insb
mov
in
dec
je
rcrl
push
daa
cmp
js
add
mov
cmp
je
push
and
xlat
inc
mov
and
inc
sbb
or
adc
jl
mov
inc
jge
sbb
or
dec
dec
sub
stos
and
mov
xor
cmc
cmp
notb
jae
mov
inc
or
sbb
ror
jb
sbb
addps
mov
movb
inc
or
pusha
dec
test
pop
sub
cmp
rcr
xorl
jne
std
addl
cmp
jle
push
jp
shrl
mov
lea
jmp
push
ret
adcb
int3
add
out
fsubrl
mov
test
jg
lcall
xor
inc
adc
pop
jl
pop
pop
ret
lret
or
movsb
leave
out
mov
mov
xchg
add
adc
dec
cld
vpsubsb
and
push
push
bound
jns
mov
orb
rolb
fdivr
jbe
or
push
push
pop
sarb
mov
mov
mov
push
aaa
loope
shll
cmp
push
daa
sbb
xchg
push
sbb
push
mov
cmp
pusha
push
in
pop
gs
rorl
mov
mov
dec
jp
mov
cmpl
dec
pushf
pop
adc
aad
clc
dec
jo
cmp
jae
movsb
mov
inc
aad
jg
jle
cmp
jg
mov
dec
rcrb
xor
fldenv
pusha
in
aam
sbb
mov
or
jnp
nop
popa
sbb
jmp
sbb
xor
stc
pop
adc
shll
out
rcl
mov
ds
cmpl
adc
lahf
push
push
popf
pop
cmp
int3
push
jne
mov
mov
jns
push
push
cld
enter
mov
mov
out
dec
mov
cmp
adc
mov
adc
or
adc
cmp
xchg
add
cmp
xor
xor
inc
push
test
push
fdivrs
ja
xchg
imul
push
push
and
flds
mov
mov
or
arpl
push
lock
push
addr16
adc
xchg
fisubrl
adc
cltd
jg
insl
jbe
pop
xor
incl
fldl
jl
or
pushf
cmp
add
fisubl
je
xchg
je
mov
rcrl
mov
jmp
outsl
sub
iret
out
shrb
testb
add
add
dec
enter
lods
and
dec
popa
mov
dec
jo
cld
scas
mov
repnz
rcrb
cmp
xchg
adc
out
icebp
lahf
cmp
aad
je
dec
jne
sbb
mov
jno
mov
sbb
mov
jo
xor
cmpsl
xchg
push
addr16
xor
jbe
sub
jne
push
sub
call
in
pushl
daa
push
jnp
jmp
icebp
shrb
cli
inc
cs
sbb
mov
arpl
mov
jo
outsl
cmp
pop
and
push
movsb
daa
stos
add
push
push
loope
inc
sbb
xchg
xchg
lea
test
mov
les
sub
push
pushf
addr16
add
adc
fstpl
and
pop
add
sbb
cld
push
mov
addr16
push
lea
cmp
jl
cmp
jg
bound
pusha
sahf
push
hlt
sbb
mov
mov
cmpb
sub
add
and
ja
xchg
or
jnp
add
adc
sarb
adc
jb
pop
pop
pop
pop
roll
push
negb
mov
push
xor
adcl
push
cmc
and
jl
enter
fstsw
ret
mov
cmc
xor
mov
mov
cmc
das
xor
ret
je
das
or
jo
lret
sbb
adc
rorl
mul
xchg
mov
int3
dec
mov
or
std
hlt
jne
mov
and
or
shll
inc
outsb
fwait
push
aad
mov
mov
adc
mov
arpl
js
mov
pop
scas
cmp
jle
mov
dec
add
xchg
cmp
jo
loope
or
jne
pusha
add
jl
jno
adc
dec
dec
ss
add
cmc
int3
int3
call
jg
add
test
adc
fsubrl
mov
adc
out
xchg
jmp
loopne
cmpl
js
mov
clc
lea
mov
stos
xchg
testl
cmp
adc
pop
mov
dec
sbb
jb
jle
lea
lea
in
and
pushl
pusha
ret
ret
test
jl
add
dec
jg
call
call
pop
mov
fsts
jge
xchg
hlt
or
ret
xor
and
or
or
xchg
in
fs
adc
pusha
inc
pusha
sarl
jb
icebp
lret
jb
or
cmpsl
push
pop
jmp
scas
gs
getsec
pop
pushf
and
jmp
adc
jae
pusha
push
loope
scas
or
arpl
jns
inc
bound
and
dec
call
fadds
mov
fwait
mov
pop
pop
add
es
push
lods
sbb
std
sbb
pop
inc
sbb
mov
ja
andb
stc
jne
pop
or
call
cmc
or
inc
xor
mov
mov
je
out
sbb
cmp
adc
cmp
jb
testb
pop
add
xor
add
cmp
push
push
ret
fiaddl
pop
and
cmp
add
inc
lahf
lds
sbbl
pop
std
cmp
jne
cmpl
sub
pop
adc
daa
clc
pop
adc
mov
push
or
sbb
out
sbb
sub
call
call
and
jecxz
and
mov
jle
aas
jmp
cmp
int3
mov
jo
ret
or
cli
mov
movsl
dec
pushl
mov
insb
test
and
adc
rcrl
js
sarb
mov
std
nop
jbe
push
push
push
lock
orl
xor
aas
push
test
sti
dec
adc
add
pop
and
push
sti
and
push
mov
pusha
fcompl
or
xor
inc
mov
fcmovnb
fstpt
add
movb
add
mov
nop
push
lea
insl
xor
loope
pop
hlt
pop
inc
fldcw
inc
fdivrp
movsb
inc
insb
mov
ja
sahf
mov
insb
cmp
pop
arpl
dec
mov
mov
mov
insb
and
addr16
mov
dec
xchg
rorb
repnz
push
cltd
mov
and
ret
in
je
push
push
ds
push
sti
dec
fs
jg
gs
divl
add
mov
jmp
push
inc
xor
rcl
loopne
sahf
pop
pop
shl
cmp
jp
and
add
repnz
or
xor
hlt
gs
fcoms
in
inc
and
push
cltd
in
push
movsb
sbb
cmp
in
push
inc
inc
dec
xor
inc
pop
cmp
cmc
inc
sbb
test
push
jg
pusha
in
cmp
and
fucomp
sahf
testl
cmp
adc
insb
jle
or
aas
mov
or
popf
jno
mov
jge
adcl
fcmovnb
fprem
shlb
or
aad
ret
cmpsb
or
inc
je
fisubs
push
jo
and
lcall
cmp
dec
dec
popf
sub
test
jge
sub
pop
je
cmp
je
and
fsubr
hlt
cmp
add
cmc
faddl
or
ja
mov
jae
rorl
aam
mov
pop
sub
fs
jl
and
pop
inc
stos
add
pop
call
pop
adc
sbb
pop
push
xlat
cmp
stos
inc
lahf
xor
or
rcl
xchg
sbb
aaa
cmp
pop
mov
mov
inc
js
push
jnp
in
and
cwtl
fs
sahf
pop
pop
jl
push
sbb
adc
xchg
push
mov
lahf
sbbb
out
pop
orb
mov
add
push
rorb
push
or
aam
dec
cltd
mov
std
stos
test
rcrb
mov
pop
es
jmp
stc
add
add
pop
pop
das
push
push
push
xchg
or
dec
cmp
ja
cmp
clc
in
add
inc
push
xlat
push
aad
loopne
xchg
jmp
push
push
pop
or
xor
insb
pop
cmp
or
mov
test
test
cli
fistpl
loopne
adc
daa
movl
test
fcompl
clc
dec
rorb
ret
fists
stc
mov
push
mov
mov
sub
mov
add
or
cmp
shrb
dec
add
aam
or
je
shr
movsb
popf
inc
lds
push
aas
add
test
sti
inc
out
cmp
jne
or
and
shrl
inc
add
sub
add
sarl
push
add
lods
dec
test
mov
xchg
es
movsl
cmp
push
push
bnd
movsb
mov
mov
rorb
dec
add
mov
jbe
mov
jo
adc
sbb
push
pop
cmc
fwait
push
jmp
add
mov
fs
repnz
data16
pop
mov
add
repz
aam
lods
sbbb
pop
mov
jmp
and
add
shll
loopne
mov
inc
test
jne
add
xchg
sti
or
jle
je
lock
xor
ret
sbb
xorl
inc
cld
jb
test
mov
in
out
dec
xchg
push
fmul
lea
lret
sub
ret
adc
pusha
jb
and
cld
push
xor
scas
pusha
mov
mov
add
adc
mov
fwait
es
lea
add
add
lock
jne
out
out
and
mov
xchg
pushf
into
nop
and
sbb
mov
popf
push
sub
xchg
pop
shrb
aaa
std
add
jne
dec
push
add
add
pop
xchg
push
ds
imul
push
or
rorb
scas
testl
dec
ja
pop
adc
loopne
inc
jo
push
jns
movsb
and
or
mov
shll
mov
fisubrl
add
add
shlb
push
insb
test
inc
xchg
call
mov
ss
outsb
inc
loope
mov
push
jne
fsubrl
daa
adc
push
or
ja
fisttps
push
inc
mov
divl
cld
or
cmp
jae
mov
sti
outsl
push
add
jb
into
mov
je
push
pusha
rorl
add
sub
xor
sarb
push
loope
mov
adc
xchg
mov
insb
and
sub
mov
or
and
sarb
inc
add
fldenv
clc
mov
pop
cli
jnp
fmull
fadds
sti
jb
outsl
std
cmp
push
and
cmp
test
jp
add
dec
mov
jo
mov
stos
out
minps
inc
sbb
jge
sbb
jae
insl
pop
test
adc
jmp
inc
cltd
in
gs
loopne
loopne
dec
sub
in
jns
notb
sub
popa
addb
addl
sbb
sbb
cmp
into
dec
js
nop
pop
sub
pop
cwtl
mov
sbb
pop
sbb
and
das
ret
jns
pop
push
test
inc
and
or
jge
mov
sub
inc
mov
push
pop
push
xor
push
mov
mov
push
lcall
dec
cmp
ret
xor
pop
pop
jne
pop
and
fnsave
mov
mov
aad
push
inc
or
dec
loope
jo
je
rolb
iret
xor
mov
dec
or
pop
inc
inc
test
pop
out
add
dec
sbb
cmpsl
push
or
mov
pop
add
pusha
sti
sbbb
fbstp
lea
dec
xchg
add
xor
fdivl
xlat
das
jo
jo
outsb
pusha
mov
jg
lock
fbstp
into
cli
je
leave
addb
push
cmp
and
xlat
jmp
stos
out
sbb
pop
sub
loopne
rclb
cmovae
adcl
and
mov
mov
sahf
xchg
popa
add
or
pop
mov
push
je
enter
dec
or
ficomps
roll
aaa
cmp
mov
lods
pop
fmuls
jnp
cmp
ja
cld
stc
test
addb
das
push
cmpsb
mov
pusha
lock
adc
mov
push
pusha
push
cmp
repz
mov
mov
lock
inc
call
push
jb
mov
imul
mov
push
rcll
or
xor
pop
mov
std
cmp
jbe
add
movsb
les
andb
jp
fidivs
out
push
fwait
pop
dec
ss
addb
sub
inc
in
push
inc
js
aam
popa
sbb
jg
fwait
inc
xor
add
mov
mov
testb
push
xor
sbb
cld
jo,pt
inc
add
xor
and
pop
sub
sub
loop
out
testl
push
push
pop
and
aam
jns
stos
mov
lock
in
and
movsl
pushl
in
xchg
push
fsubl
pusha
ja
sub
push
add
dec
shrl
jge
push
bound
or
dec
je
cmpsl
pop
jg
scas
or
mov
sbb
test
cmp
jge
call
push
or
mov
push
fidivl
push
xchg
js
or
xor
pop
lahf
leave
ret
cmc
lahf
pop
andl
pop
jne
push
jecxz
mov
dec
jae
inc
test
dec
mov
push
cmp
ljmp
mov
out
add
adc
jae
xor
push
lret
fcmovbe
sbb
incl
popl
andl
jo,pt
jl
add
mov
pusha
push
cmp
std
pop
rcl
mov
and
mov
andl
inc
mov
mov
fs
test
cmpl
pop
push
push
mov
xchg
test
xchg
sbb
lret
dec
cmp
sbbl
xchg
cmp
mov
cmp
cmp
test
push
call
mov
xor
pop
rcll
adc
sahf
pop
xor
dec
and
push
clc
cwtl
inc
mov
frstor
push
jbe
cmp
cmp
ja
push
jp,pn
cmp
aam
dec
scas
xor
push
xchg
rorl
iret
sub
push
add
jmp
push
pop
inc
bound
aam
mov
mov
adc
or
test
fdivr
xor
sbb
aam
cmpsl
cmp
jbe
push
ds
pop
lea
jge
push
inc
push
inc
addr16
je
xor
lret
adcl
rorl
xor
cmp
pop
jp
hlt
or
or
push
pop
push
mov
cs
das
jne
inc
mov
mov
cmpl
and
dec
pop
adc
mov
test
mov
dec
jb
in
lods
add
adc
push
inc
push
sub
mov
mov
movl
test
out
je
pop
push
add
adc
repnz
adc
cld
mov
iret
push
adc
incl
aaa
insb
das
call
add
jb
push
lcall
or
adc
je
or
das
adc
inc
or
rol
test
jle
jmp
je
or
je
or
jne
push
add
inc
jmp
inc
imul
je
jae
cmp
push
xor
jmp
repz
jmp
xor
fldl
xor
enter
add
test
fsubp
imul
add
inc
pop
je
pop
es
push
xchg
mov
inc
add
adcb
mov
push
loope
mov
dec
stc
add
push
cld
pop
je
xchg
add
loopne
je
inc
or
je
mov
sbb
cmp
and
or
push
mov
out
mov
inc
add
xor
inc
pop
orl
push
ljmp
pop
push
popa
add
addl
push
mov
jg
shrb
sbb
in
sub
sbb
mov
cmp
jne
mov
loopne
jp
mov
or
into
in
or
jae
xchg
arpl
das
ficompl
out
lea
les
mov
or
out
imull
mov
push
orl
pusha
add
sbb
pushl
nop
fdivs
idivb
fiadds
ja
cmp
je
mov
push
xor
dec
lock
lock
mov
sub
push
sar
inc
push
adc
pop
adc
cmp
je
or
add
pop
sbb
sub
dec
jbe
sarb
js
cmp
out
insb
inc
dec
mov
or
mov
inc
int
mov
ss
sbb
inc
push
pop
push
jmp
adc
mov
loopne
xchg
cmpsl
nop
sbb
jnp
mov
sti
jmp
inc
dec
or
mov
and
xor
dec
inc
lea
add
test
jb
push
push
lret
shrb
call
mov
sbb
ret
mov
outsl
xlat
fidivrs
fnstsw
mov
sub
inc
aas
cmp
add
clc
orb
arpl
sbb
daa
andl
and
scas
xor
orb
add
cmp
or
loopne
jnp
rorb
and
into
sub
shll
sahf
mov
jnp
lds
adc
icebp
add
mov
pop
nop
push
out
or
je
or
ljmp
cmp
pop
mov
sar
shl
add
lock
inc
push
push
mov
push
hlt
lds
pop
clc
add
call
scas
pop
mov
repz
push
orb
inc
sti
add
jmp
mov
push
clc
mov
jmp
lea
xchg
cmc
push
test
jle
pop
inc
mov
in
inc
sbb
mov
jne
sahf
fwait
mov
jne
or
adc
sbb
sub
mov
movl
sbb
sti
add
mov
jmp
jle
pop
push
pusha
mov
jp
sub
or
adc
or
test
dec
sbb
sub
push
adc
daa
std
push
jns
movsb
leave
dec
xchg
shll
fisubrs
or
push
push
and
push
testb
or
shlb
mov
mov
xor
pop
push
cld
xor
mov
push
pop
add
dec
pop
lods
push
out
aaa
jnp
dec
test
xor
and
divl
mov
mulb
loope
test
pop
or
fildl
jle
lock
not
push
lret
pop
pop
cli
shll
sbb
xor
adc
sub
push
adc
push
pop
sub
xor
add
push
jl
xor
inc
lahf
pop
mov
add
mov
lea
sub
sub
call
dec
and
add
bound
ljmp
add
inc
sub
push
mov
mov
rcrb
outsl
mov
divb
cmp
jb
mov
adc
xor
and
push
dec
into
call
push
movsl
outsb
test
test
or
clc
out
ret
jg
sub
movsl
jmp
mov
jb
insb
out
mov
enter
cwtl
cmp
xor
jnp
notl
or
xchg
and
fcmovu
test
pop
pop
mov
mov
or
lods
adc
mov
int3
imul
cmpsb
pushf
sbb
add
mov
mov
or
push
cld
cwtl
repz
imul
aam
jns
decl
inc
in
call
sahf
in
lock
hlt
clc
outsl
icebp
out
clc
cld
cld
lea
clc
iret
imul
sbb
jmp
push
sbb
pop
nop
inc
or
add
inc
inc
fsubs
and
and
fmul
movsb
into
jl
cld
pop
and
xchg
scas
loopne
std
cld
out
mov
lea
adc
xchg
daa
stc
sub
mov
pop
nop
rclb
hlt
push
sbb
mov
int3
rcr
add
out
add
mov
mov
inc
push
fisubl
add
push
fmull
pop
add
loop
jo
jo
jns
jnp
js
orb
out
icebp
mov
aaa
sbb
sbb
jns
out
adc
adc
or
jns
out
or
add
iret
jnp
and
int3
or
push
in
dec
push
xchg
mov
add
outsl
pop
ret
sub
sub
mov
fldt
sbb
sbb
mov
jo
insb
data16
repz
pusha
sub
stc
pushf
popl
mov
cld
mov
inc
or
movl
mov
js
add
rcr
imul
fsubs
dec
or
adc
jecxz
ficoms
cmp
cmpsb
jno
push
xor
shr
aaa
int3
or
xor
inc
push
add
adc
movb
idivb
cmc
movsb
add
ljmp
cmp
lret
xor
sbb
icebp
adc
rorb
and
sar
ficomps
icebp
mov
icebp
xchg
push
mov
and
es
jecxz
clc
pop
mov
add
call
aas
push
clc
stos
and
pop
fimuls
cmp
mov
pop
leave
or
add
adc
lcall
xor
xor
into
rcrl
mov
icebp
inc
cwtl
cwtl
jge
cs
cld
sub
lea
cmp
ds
test
jmp
push
cmp
sti
jne
inc
clc
rorb
jmp
push
xor
cld
pop
jne
pop
lock
dec
cwtl
pop
loope
or
jmp
mov
jmp
jp
and
lea
fimuls
ss
cmp
pop
dec
fwait
enter
or
out
jae
in
add
cmp
mov
xchg
mov
jo
push
sbb
mov
lea
pop
mov
test
push
movsb
jnp
rcrb
call
aaa
cmpl
inc
add
iret
sti
ret
pop
ret
adc
dec
or
aam
movsl
sub
pop
or
jo
xor
test
push
mov
jb
out
fucomp
xor
stos
outsl
cmp
es
and
fbld
pop
cmp
jne
sbb
js
jb
mov
imul
inc
mov
lock
jno
rol
imul
les
int3
imul
loope
mov
and
add
cwtl
sarb
cmp
xchg
jns
aam
jle
jo
push
cmp
mov
or
pop
sub
xchg
mov
inc
add
adc
test
int3
cmpsl
je
push
fs
or
cmp
popa
pop
cld
xor
xor
divl
ds
inc
js
iret
jl
addr16
pop
ret
dec
xchg
xor
gs
insb
clc
daa
call
loop
inc
js
rclb
mov
test
je
insb
data16
jo
jo
movsb
mov
jmp
dec
cmpsl
sub
jecxz
push
insb
leave
nop
xor
nop
in
stc
mov
jmp
xor
movsb
add
fs
or
mov
test
add
sub
test
push
or
mov
xor
xchg
mov
inc
clc
in
add
push
inc
bound
mov
mov
mov
jle
add
add
or
loope
or
ficoms
stos
out
push
push
pop
movsb
mov
mov
mov
inc
dec
mov
xor
ja
add
or
cli
add
push
sbb
push
lea
adc
pop
ljmp
outsl
add
sub
lods
push
movl
push
movb
and
xor
sti
jg
hlt
add
cmp
ja
sub
inc
push
lea
cwtl
sub
js
popf
mov
xchg
data16
loopne
popf
or
out
ficoms
push
push
mov
fidivs
std
push
cmp
out
push
inc
inc
cld
xchg
loopne
add
dec
and
out
incl
mov
and
orb
mov
fucomi
adc
je
and
sbb
pushf
adc
mov
test
mov
pop
mov
out
lea
pop
and
enter
and
outsb
push
cli
sbb
and
cld
jmp
movb
add
dec
inc
cmp
jb
sbb
test
sub
int
sbb
ja
sub
or
cmp
ret
or
push
push
sbb
xor
push
mov
cmpb
pop
insb
push
rcl
bound
xchg
mov
mov
sarl
stos
movb
arpl
jl
insb
mov
or
dec
mov
or
add
orl
xchg
nop
orb
add
lcall
mov
testb
jne
adc
adc
add
add
inc
add
push
xchg
out
hlt
pop
inc
push
inc
mov
rorb
mov
jne
movl
cmp
inc
bound
push
in
jo
jmp
inc
std
jne
shr
add
cmp
sbb
jmp
ja
jbe
cli
rcrb
jns
add
inc
add
popf
test
jge
cmp
data16
lock
push
xchg
sub
xchg
popf
dec
or
jmp
add
lret
js
lcall
mov
pop
inc
ret
out
fdivr
mov
push
cs
jo
or
push
and
push
cmc
pop
out
and
aaa
push
lea
push
std
or
inc
int3
mov
jae
cmp
jbe
jne
jge
movsb
roll
out
mov
test
loopne
mov
movb
inc
pusha
leave
inc
inc
lea
dec
in
leave
xor
lea
push
inc
jmp
xchg
sub
xchg
mov
fs
cmpb
sub
testl
add
clc
jbe
es
jo
jbe
es
sbb
loopne
xorb
jle
xchg
movl
push
mov
adc
mov
lock
mov
mov
mov
shl
gs
les
icebp
mov
lea
xchg
cmc
mov
sbb
mov
and
idivb
loopne
pop
jbe
mov
inc
dec
jne
inc
pusha
jl
dec
scas
stos
mov
pop
nop
add
jne
jnp
jl
aas
jmp
cmp
cmc
mov
adc
aaa
adc
adc
push
lds
loopne
daa
mov
push
mov
pop
push
lods
push
pop
cmp
adc
and
cwtl
js
push
cmpsl
fadds
cltd
add
aad
xor
and
data16
daa
lock
pop
in
xor
pop
adc
adc
pop
cmp
test
cmp
cmp
je
cmpsl
insb
ljmp
loopne
adc
add
cli
jb
or
or
pop
xchg
clc
add
out
test
hlt
or
jmp
xor
mov
sbb
mov
or
jmp
add
shll
cmp
inc
lock
jns
adc
jno
es
or
and
cwtl
and
mov
sbb
out
add
fbld
xchg
lods
pop
push
add
adc
jbe
popa
cmpsl
out
push
dec
or
adc
jg
inc
xor
je
push
push
ficoml
iret
cltd
loop
adc
adc
movsl
ret
dec
xor
or
test
lahf
inc
add
imul
mov
sti
xor
inc
or
adc
xor
arpl
mov
fdivrs
mov
push
push
and
roll
dec
test
or
movsb
ja
adc
ret
out
pop
notb
push
push
test
push
jl
aaa
dec
in
lahf
sub
jo
lock
push
or
jbe
lea
mov
mov
or
dec
push
push
jo
mov
pop
ja
push
insl
push
adc
jmp
insl
inc
sub
loop
mov
mov
cmpl
add
mov
or
add
mov
ds
adc
add
imul
adc
cmp
call
or
adcb
or
sti
pushl
rorb
pop
mov
andl
rorb
in
loop
sbb
fistl
xor
dec
xchg
iret
mulb
fcoml
fcomps
int3
data16
clc
or
test
movsl
xchg
into
lahf
xchg
shrb
xor
hlt
sahf
jbe
dec
add
hlt
fbld
fldlg2
fisubrl
cld
xor
adc
loopne
fsubs
in
pop
nop
cmc
pop
and
lea
or
dec
cmc
xchg
push
and
je
or
frstor
pop
movsb
outsl
add
dec
sbb
pop
icebp
dec
fiadds
sbb
sbb
pop
mov
dec
xchg
aaa
xor
jmp
cmc
push
mov
xchg
imul
xor
mov
mov
out
sbb
push
push
xor
xor
adc
jbe
jecxz
add
xor
cli
adc
bnd
cmp
adc
adc
int3
mov
or
cmp
popl
inc
xchg
out
or
jo
out
into
insl
jo
mov
or
sub
sbb
mov
sbb
adc
repnz
loope
or
cmp
pop
jecxz
mov
mov
pop
iret
filds
xor
out
call
push
push
or
push
push
cli
inc
sub
hlt
mov
xchg
sbb
xchg
icebp
cmp
jae
or
or
jp
mov
icebp
jb
inc
push
mov
ja
arpl
rclb
test
and
pop
rclb
repnz
rcl
inc
and
add
xor
or
insl
sub
add
cld
sbb
dec
push
jmp
add
dec
bound
and
xor
xor
push
cmp
push
jbe
pop
cmpsl
pop
add
ret
mov
jmp
test
loop
lret
xchg
out
jae
mov
pop
test
cld
faddl
inc
mov
add
or
jb
imul
ficompl
and
push
outsb
add
pop
les
sub
movsl
inc
daa
and
neg
out
dec
imul
mov
add
shll
scas
lock
or
jne
stos
sbb
sbb
sbb
adc
lahf
cld
mov
loopne
or
push
pushl
mov
xchg
sbb
jo
scas
adc
les
sub
add
push
je
sub
dec
je
out
mov
sub
sub
mov
mov
ret
out
jno
clc
loope
or
jge
mov
mov
jne
aaa
orb
push
aaa
add
test
or
and
sbb
inc
pusha
jne,pn
xchg
mov
sbb
inc
fs
and
pushf
lock
mov
sbb
loop
push
aas
mov
adc
inc
fsubr
fstp
mov
dec
lahf
movb
add
loopne
jmp
push
js
inc
xchg
mov
adc
ss
pop
daa
push
adc
lds
test
fs
test
pop
sbb
sbb
mov
movsl
roll
pop
add
ljmp
jb
lock
push
dec
decl
inc
cmp
roll
aas
out
and
dec
sbb
cmp
and
xchg
ret
mov
in
dec
enter
adc
or
push
lea
hlt
rorb
sbb
sbb
jb
or
fldl2e
or
and
mov
sub
sarb
int3
lahf
lods
push
movsl
andl
adc
xchg
aam
sar
xchg
xchg
xchg
xrelease
rcpps
mov
cs
iret
xor
shr
not
mov
sub
andl
outsb
nop
cmpl
mov
popa
pop
inc
push
push
xchg
mov
push
clc
ljmp
in
add
add
daa
push
jne
push
xor
lock
adc
cmp
rcr
xor
inc
cli
fldt
push
scas
mov
jo
cmp
in
je
jl
out
ret
out
adc
mov
dec
xchg
pushf
jmp
aaa
sbb
or
sub
lods
push
outsb
sub
jge
and
sbb
add
mov
aam
push
mov
add
orl
lods
dec
xor
sub
call
jbe
je
psrlq
adc
in
cmp
insb
scas
test
mov
and
out
scas
popa
cmp
inc
in
pusha
test
sbb
sub
inc
data16
mov
mov
cmp
mov
jne
lods
call
sub
pusha
add
add
dec
test
sbb
jo
negl
push
bound
fisttps
shl
fstpt
rolb
cmp
jne
xchg
loopne
mov
adc
shrb
sbb
push
or
sti
sbb
insl
sti
pushf
dec
sbb
daa
jmp
imulb
repnz
loope
mov
xor
push
or
dec
dec
jne
xor
leave
sub
fst
or
sub
lock
push
sub
dec
pop
adc
mov
jae
mov
jne
sub
sar
dec
pop
mov
mov
shlb
or
add
leave
aam
jmp
push
cmp
mov
or
add
mov
xchg
mov
or
sar
xchg
js
mov
hlt
mov
test
inc
fistl
ficoms
jbe
mov
xor
and
imul
cmp
dec
dec
test
mov
repz
aam
jmp
loop
sarl
call
and
shr
je
jmp
lea
aam
sti
push
dec
adc
push
and
adc
repz
push
pop
outsl
inc
or
push
inc
jge
jbe
jle
cmp
sarb
iret
outsl
ja
jo
mov
mov
lahf
dec
jne
mov
fdivrp
outsl
in
lret
ffreep
lea
lea
inc
out
inc
inc
out
and
push
rol
add
jmp
in
push
mov
xor
dec
jne
mov
cs
insl
je
push
negl
lds
in
mov
push
cmpl
mov
shr
add
adc
andl
pop
das
push
arpl
imul
enter
or
adc
daa
daa
mov
ss
sub
daa
daa
daa
xor
cmp
add
cmp
inc
and
jb
jb
inc
cmovs
pop
jo
push
pop
add
pushf
pushf
fs
pushf
pushf
je
jl
xchg
imulb
sbb
mov
nop
xchg
dec
es
fs
pushf
mov
movsb
test
xchg
dec
xor
rol
int3
insl
xchg
or
sarb
xor
fsub
xchg
dec
xor
in
in
aam
xor
and
hlt
clc
cmp
and
cld
add
add
add
or
and
dec
fwait
adc
xor
sbb
and
dec
xor
and
xor
leave
and
cmp
sbb
inc
dec
dec
fs
dec
cmpsb
mov
pop
mov
pusha
sbb
lock
aas
in
je
mov
cmp
mov
rorb
or
repnz
jbe
cmp
jbe
aad
sub
or
xor
insl
inc
adc
nop
adc
rorb
sbb
xor
and
and
cmp
cmp
mov
dec
rolb
int
xor
dec
int3
lcall
or
adc
fstl
mov
adc
aaa
cmp
jle
jecxz
lods
pop
sbb
cwtl
jne
int
cmp
test
decl
ret
lahf
aam
add
mov
cmp
jne
push
push
les
or
and
xor
adc
push
cli
pusha
sbb
call
lds
mov
xor
dec
jle
clc
ja
lahf
inc
divl
aas
or
sbb
ja
mov
mov
add
add
cwtl
ja
addr16
xchg
and
or
sbb
jo
add
hlt
je
push
ds
jle
jle
push
fcmovne
loopne
sahf
rclb
cmp
xor
fnstsw
in
dec
adc
dec
lock
jg
shrl
push
outsl
inc
mov
jle
jns
add
pop
ss
ja
jae
cmp
je
movl
jmp
jns
push
rcll
js
push
aas
clc
add
lods
cmp
insl
xchg
mov
lods
and
or
push
in
push
fisubl
mov
lock
stos
push
pop
outsb
adc
pop
lea
jl,pn
xlat
jp
cld
xor
mov
sahf
jae
lods
adc
fcoml
cmpsl
outsl
push
xchg
ja
movsb
jecxz
add
fs
jle
push
or
cltd
in
cltd
and
sbb
mov
jle
cmp
push
jg
xor
push
mov
mov
xchg
push
repz
in
mov
xchg
add
lcall
push
in
add
sbb
pop
in
imul
movsb
sbb
jl
or
push
xchg
or
shlb
fdivp
outsl
sub
icebp
push
inc
push
lock
mull
mov
lsl
jmp
push
pop
push
push
inc
imull
shr
rcr
shr
rcr
or
cmpsb
div
pop
dec
adc
jg
outsb
fwait
inc
mul
pop
jb
cmp
or
cmp
or
cmp
jnp
sbb
push
adc
or
fdivs
lds
fxch
pop
push
inc
or
loop
sub
nop
pop
loopne
hlt
mov
jmp
je
add
xor
push
shrb
shl
mov
xlat
or
push
mov
mov
movsb
pushf
xchg
sarb
orb
repz
rcrl
jg
cmpl
fldt
xchg
push
mov
fadd
inc
dec
push
adc
ret
and
jl
mov
iret
repz
or
push
inc
dec
push
pop
pusha
or
jg
repz
mov
xchg
push
movsb
mov
sub
add
jne
or
adc
std
add
loop
add
sbb
or
add
or
pop
pop
add
sub
and
and
add
enter
inc
xchg
sbb
std
sarb
ret
sub
jmp
lret
imul
or
pop
mov
loope
push
or
test
mov
loope
rcrl
aaa
mov
inc
mov
add
add
lock
stos
fsubrp
movsb
push
rorl
out
cmp
xor
or
add
aam
nop
iret
adc
add
nop
jge
lea
xchg
aas
push
leave
je
push
pop
mov
mov
mov
call
std
or
mov
je
jb
mov
out
push
cmp
ja
add
aas
out
out
adc
cmp
jne
jp
xor
shlw
leave
adc
mov
outsl
push
pusha
push
push
pop
aas
int3
jmp
cmp
mov
outsb
mov
rorb
or
mov
pop
aad
sbb
xor
mov
xor
and
addl
xor
push
add
jne
cmp
adc
adc
pop
insl
push
repnz
insl
mov
incl
jbe
push
dec
test
mov
insl
popa
jo
jae
je
mov
and
and
add
jbe
insb
imul
stos
adc
mov
inc
jb
shl
mov
data16
aam
imul
dec
imul
add
dec
mov
or
lock
inc
inc
bound
mov
int3
into
fsubr
arpl
repnz
test
aad
inc
push
outsb
imul
outsb
and
arpl
ds
mov
inc
cwtl
or
sti
jg
sarb
add
push
add
dec
add
add
add
add
sar
fisttps
insb
jae
jb
rcpps
mov
and
add
cli
push
jb
gs
lock
iret
mov
outsl
add
add
add
add
jne
out
je
inc
and
clc
add
xlat
and
and
or
insl
in
ds
dec
add
inc
cmp
dec
imull
sbb
inc
push
add
ja
pusha
mov
add
add
and
inc
add
push
gs
pop
mov
pop
and
aas
dec
sti
mov
arpl
cmpsl
insl
push
loopne
out
loopne
xchg
jae
popa
or
fnsave
out
into
jns
push
jne
imul
or
jbe
aas
imul
ds
jp
outsl
cs
in
fisttpl
mov
gs
fsubrp
imul
out
outsl
jmp
loopne
rcrb
add
pop
neg
in
lret
stos
insl
sub
push
imul
scas
cmp
jne
rol
mov
sahf
xchg
mov
jb
outsl
sbb
sub
mov
sub
das
sub
or
call
daa
lahf
sbb
xor
push
outsb
inc
imul
jae
push
or
sbb
addl
das
cs
icebp
push
cmp
outsb
bound
sub
push
arpl
mov
xor
je
loope
mov
mov
gs
fcoms
das
jb
ret
inc
sbb
fidivrl
cs
add
xor
in
and
outsl
andl
and
add
add
loope
or
aas
inc
xchg
lahf
aaa
jg
shll
ret
iret
fisttps
dec
fs
xor
imull
xchg
sub
inc
mov
mov
nop
xor
stos
and
jae
mov
inc
stos
pusha
jg
cmp
jbe
ja
outsl
lahf
outsl
aas
add
iret
arpl
cmp
xchg
push
push
sbbl
aaa
insl
jno
lahf
cs
imul
add
imul
shll
mov
stos
xcrypt-ofb
cmpsl
outsb
inc
sub
pop
std
cmp
push
pop
add
loop
lods
and
inc
pop
and
fdivp
insl
pop
je
scas
cmp
mov
jg
cmp
fdivrl
js
jecxz
outsl
pop
loope
and
mov
lods
or
pop
add
out
cmp
push
nop
fiaddl
or
or
fnstcw
cwtl
adc
das
fdivrs
push
imul
repz
repz
sbb
lcall
push
das
imul
aam
and
jns
repz
jns
jns
out
jp
push
cld
nop
pushl
shl
jmp
add
lock
imulb
outsl
bound
add
push
mov
jb
aaa
mov
add
ucomiss
xchg
mov
dec
insl
jl,pt
adc
jnp
imul
or
outsl
ret
inc
and
mov
fwait
cmp
pushf
mov
negl
pushf
cmp
lea
mov
nop
xchg
xchg
cltd
in
xchg
xchg
mov
mov
cmp
add
push
movsl
mov
dec
sahf
mull
add
fs
arpl
and
add
insl
mov
and
push
loop
movsb
inc
inc
jecxz
pop
in
loope
lcall
das
fdivl
push
xchg
inc
ret
dec
je
insb
addr16
jg
pop
movl
push
inc
lods
icebp
push
push
mov
mov
cmp
outsl
popa
and
adcb
pop
inc
das
pop
mov
sub
iret
mov
insl
in
jns
out
out
fisttpl
fisubl
outsb
mov
inc
fwait
rcl
jae
push
stos
ret
sub
cmpl
pop
dec
addr16
push
ds
neg
iret
mov
insb
sbb
push
cli
stos
xchg
dec
cmp
cmp
add
sub
dec
and
jns
add
das
das
cld
dec
imul
dec
push
inc
inc
arpl
bound
sti
mov
mov
dec
arpl
push
dec
loop
push
sbb
inc
jne
jne
je
das
mov
outsb
xchg
inc
jo
imul
bound
push
inc
popa
outsb
adc
into
mov
xchg
jns
jg
addr16
popa
je
jle
out
jne
xor
and
daa
fbstp
fs
sbb
dec
outsl
outsb
and
jae
mov
jbe
pop
cld
es
aas
ds
outsl
insl
jo
gs
dec
bound
jmp
and
jb
sahf
fldl
ret
insb
popa
mov
dec
imul
ficomps
mov
add
inc
gs
inc
jb
rcll
fildl
daa
daa
pop
and
mov
mov
insb
and
data16
je
jb
clc
shrb
push
push
cmp
add
gs
jbe
pusha
out
outsl
xor
or
lods
and
nop
pusha
inc
jbe
push
jbe
mov
jns
cmp
insl
and
gs
fisubrl
dec
pushw
inc
inc
imul
xchg
int3
jp
cmp
push
js
push
and
pop
es
dec
inc
adc
popa
ljmp
mov
push
jae
pop
in
cmp
pusha
mov
call
addr16
mov
das
and
and
mov
or
xchg
inc
push
push
push
push
dec
imull
mov
inc
dec
push
jne
repnz
add
outsb
enter
ret
pusha
cmp
mov
arpl
push
imul
imul
ret
sbb
jae
nop
shll
xor
das
gs
cmpsb
je
pop
sub
stos
outsb
bound
pusha
push
or
stos
pop
xor
outsl
xchg
daa
xchg
mov
data16
repz
pop
pop
cmp
cmp
add
ds
jns
imul
sub
jnp
sahf
jl
push
addr16
jle
sub
int3
xor
jmp
xchg
mov
sarl
add
sub
sub
jnp
jne
sub
mov
into
or
add
jle
xchg
and
ds
sbb
mov
ja
lahf
push
pop
pop
jne
lret
fstpt
shl
push
jb
imul
push
or
pop
shll
pop
fdivs
repnz
je
imul
fs
jo
sub
jno
ljmp
hlt
in
repz
sarl
push
aam
mov
mov
mov
cmpsl
stc
add
cmpb
jo
repz
insb
push
cmp
repz
dec
inc
inc
cmp
cmp
xor
sub
and
adc
stc
xchg
out
or
add
cld
in
jns
cmpsl
clc
hlt
lock
call
in
aam
jns
out
mov
lods
repnz
xor
jecxz
sarb
repz
nop
insb
dec
and
repz
sti
or
fsubp
push
in
fdivrl
mov
xchg
js
iret
mov
loopne
out
cwtl
je
out
repz
and
loopne
loopne
ds
repz
push
lods
push
cwtl
js
inc
gs
outsb
add
or
outsl
ja
je
push
mov
dec
jb
je
push
loopne
outsb
cli
insl
xor
aaa
dec
mov
test
imul
daa
push
loopne
mov
lea
dec
mov
and
add
push
mov
add
sub
dec
add
push
in
push
test
adcl
in
add
and
sbb
add
rolb
xor
loopne
add
add
adc
ret
shrl
adc
jbe
mov
aaa
add
and
ficompl
out
andb
and
pushl
test
mov
nop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
popf
sahf
lahf
mov
movsl
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
rol
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
lcall
cld
std
ljmp
pop
or
or
or
push
movups
adc
adc
push
call
sbb
sbb
sbb
push
pop
and
and
and
es
sub
sub
sub
cs
xor
xor
xor
ljmp
cmp
cmp
bound
push
insb
insl
outsb
outsl
dec
mov
pushl
jb
je
jbe
js
jp
pop
pop
pop
pop
pusha
aas
jnp
jge
or
jle
ljmp
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
sbb
repnz
pop
pop
pop
aas
incl
xor
std
inc
jnp
cmp
mov
mov
pop
adc
iret
lds
cmp
lock
testl
inc
mov
add
rdmsr
outsl
sbb
pop
fisubrl
imul
ja
fidivl
fs
das
pop
fs
jae
lcall
pop
pop
lods
pop
dec
add
ja
in
nop
out
mov
aam
mov
js,pn
add
es
ds
adc
and
mov
inc
and
jnp
out
push
daa
addr16
push
push
daa
aas
add
ret
out
dec
mov
jae
mov
das
add
int
mov
pusha
mov
test
lods
add
cmp
pop
int3
mov
mov
pop
jbe
popf
testl
rolb
das
jo
jmp
xchg
mov
inc
aad
fiadds
or
jo
aaa
enter
cld
insb
lahf
aaa
jg
lret
fstpt
clc
movb
hlt
test
push
out
ja
dec
cs
hlt
inc
js
mov
repz
pop
aam
pop
ds
dec
mov
mov
inc
add
outsl
lea
jb
inc
das
cltd
testb
jb
fadds
push
repnz
and
in
hlt
hlt
hlt
add
pop
xor
insb
dec
aas
mov
daa
sbb
je
inc
ja
add
ja
fldl
icebp
in
loope
jo
mov
shl
push
xor
scas
in
sbb
dec
syscall
jg
pop
adc
add
xchg
inc
movl
jle,pn
ds
dec
in
adc
pop
outsb
test
shlb
mov
dec
icebp
mov
xchg
pop
xor
adc
push
add
imul
cmpsl
in
notl
ficoms
lret
inc
push
adc
inc
cmp
aaa
addr16
lcall
add
adc
movsb
mov
or
test
mov
mov
dec
pushf
push
das
cmp
rcrb
jmp
xlat
cmpsb
call
sti
hlt
mov
icebp
xor
fisubrl
cltd
lret
mov
lret
mov
cmp
les
sbb
mov
notb
push
mov
or
mov
loopne
cld
and
sahf
stos
push
pusha
shrb
flds
aam
outsb
inc
mov
jp
dec
leave
xor
stc
lcall
test
incl
out
inc
mov
add
ljmp
cs
je
add
and
lock
or
jle
into
adc
aad
dec
jns
push
ss
in
subb
mov
jg
scas
movsl
in
popa
std
dec
jl
or
lods
dec
and
out
pushl
and
add
pop
imul
pop
pop
cmp
addb
or
mov
jmp
imul
xchg
cld
sbb
push
pop
dec
test
jo
call
ret
ljmp
incl
add
sbb
lret
rorl
fidivl
mov
popf
test
mov
jmp
scas
and
xchg
notl
xchg
mov
pop
mov
push
jns
stos
idivb
mov
sar
call
jnp
cmpl
xor
loop
mov
aas
dec
bound
dec
mov
push
dec
imul
sti
xchg
push
jne
xchg
jno
mov
aam
or
aaa
xor
je
pushl
out
jcxz
mov
add
sub
cmpsb
jle
lea
decl
lcall
add
inc
xchg
xor
insb
push
into
fstpl
sub
call
iret
in
mov
jmp
jge
outsl
loopne
xor
lcall
xor
hlt
cmp
pop
gs
outsl
jb
add
pop
pop
bound
outsb
addr16
inc
aas
outsl
jne
pop
adc
ljmp
pop
jb
outsb
add
or
imul
dec
push
jbe
call
pop
or
add
sti
and
inc
orb
add
add
imul
into
or
push
pop
add
wbinvd
outsb
fstl
scas
or
mov
adc
adc
and
pop
inc
inc
push
fucomi
jbe
addr16
das
push
xorps
pop
mov
das
insl
push
and
in
sbb
jb
pop
andb
out
xchg
fildl
xchg
fmull
sahf
sub
dec
outsb
pop
pushf
mov
into
aas
xlat
sbb
mov
and
jne
das
aas
aad
mov
pop
lahf
add
add
inc
xlat
repz
imul
inc
iret
repz
inc
cmp
sub
sahf
cmpsl
stc
cmp
cld
hlt
lock
out
in
call
jnp
out
aam
int3
pop
les
mov
mov
sahf
out
test
pusha
lock
out
push
cmp
or
out
roll
adc
repz
fiadds
fmul
iret
repz
mov
nop
jl
insb
cmp
repz
pop
push
dec
inc
repz
repz
sub
sbb
jge
iret
or
fucomp
loopne
pop
aam
jns
push
push
push
mov
jns
subb
and
adc
jns
testl
pop
pop
repnz
xchg
movl
in
or
jbe
push
lds
or
les
or
or
stos
and
adc
pop
pop
add
aas
adc
add
add
movsb
add
pusha
cmpb
sub
cmp
fisttps
mov
cld
inc
jle
adc
xchg
subb
cltd
subl
cmovo
decl
mov
sbb
in
call
idivl
jle
adc
push
ficompl
mov
xor
enter
fcomp
loopne
jb
jle
aas
mov
pop
rol
inc
xor
cmp
cs
fistl
sbb
pop
test
pop
js
mov
jmp
add
test
xor
adc
add
test
push
add
orb
mov
pop
fs
leave
aas
out
and
add
add
add
cmc
and
ljmp
and
push
mov
test
sub
stc
in
lcall
pop
scas
mov
imul
dec
and
fldl
xchg
push
xchg
in
lahf
sar
ljmp
push
push
andl
jne
push
scas
daa
add
cmp
mov
cmpsb
pop
shlb
sbb
jmp
xor
jle
cmp
lcall
jns
std
cmp
movsl
pushf
sahf
push
movsl
add
movl
mov
jp
or
iret
or
pop
dec
add
fwait
cmpsb
hlt
jb
popf
aam
das
jmp
out
pop
fidivl
in
inc
mov
pop
xchg
scas
insl
xchg
inc
nop
dec
sar
out
xchg
out
mov
fchs
mov
and
xchg
aad
pop
ds
push
and
arpl
imul
mov
jp
jle
lcall
mov
sbb
mov
dec
xchg
mov
lcall
testl
js
sbb
sbbb
and
pop
movsl
dec
cmp
mov
jnp
pop
cwtl
push
outsl
or
out
fs
aad
popl
sbb
mov
adc
mov
push
cltd
outsl
cmp
js
out
xor
lea
movsl
xor
lcall
push
xchg
jp
jmp
shrl
sub
cmp
push
icebp
jae
xor
icebp
pop
call
or
lea
lds
dec
mov
push
out
orb
lds
incl
stos
xchg
orb
pop
popa
or
data16
sub
repz
popa
dec
mov
call
lahf
inc
data16
aad
mov
mov
pop
cs
add
test
decl
and
mov
pop
lods
inc
arpl
push
inc
dec
inc
sti
pushl
mov
sub
or
lds
dec
mov
cmc
mov
mov
and
jno
test
call
jge
repnz
sub
xchg
std
sbb
sub
ret
rorb
mov
push
dec
jo
mov
pop
or
pop
popf
mov
adc
daa
int3
fsubrs
imul
aas
push
inc
rclb
roll
jg
cmp
jmp
add
push
pushf
and
ficompl
mov
add
leave
sahf
jecxz
jo
cld
cli
call
push
mov
insl
sub
xor
push
cs
sub
inc
call
inc
scas
xchg
fstpt
or
das
mov
movsb
fldcw
cwtl
mov
mov
jecxz
les
pop
or
js
rol
pop
and
cmp
gs
add
jg
and
inc
dec
cmpsb
rcrl
outsb
ljmp
movsl
hlt
fs
lods
push
stos
pop
sbb
arpl
mov
xchg
cwtl
adc
or
lcall
dec
stos
xor
mov
and
repz
pop
lahf
adc
scas
ret
shll
mov
dec
decl
data16
jae
or
add
sub
xchg
mov
or
dec
leave
icebp
icebp
sub
jmp
call
out
fisubl
in
rcrl
push
ret
add
call
pop
js
mov
mov
incl
sbb
sbb
sahf
outsl
insb
dec
in
add
adc
in
gs
mov
decl
icebp
or
xchg
pop
sti
imul
push
sub
pop
fwait
lds
xchg
les
call
pop
mov
dec
outsb
push
or
jecxz
dec
pop
leave
sub
push
inc
cmc
inc
and
or
pushl
or
xor
cli
mov
filds
ret
ja
xor
subl
inc
sbb
decl
push
sarb
or
daa
cmc
shl
imul
inc
jge
loopne
into
or
xor
adc
mov
insl
or
sub
lcall
test
cmp
scas
fnstsw
pop
dec
sbb
jp
fildll
ds
lcall
stos
loop
sub
aas
sub
es
shll
and
cld
mov
out
popa
mov
iret
jmp
out
or
in
sbb
and
inc
adc
or
adc
mov
and
dec
sub
notl
mov
jge
loopne
or
stos
lock
je
outsl
jns
xor
incl
lahf
xchg
pop
mov
ljmp
insb
jl
pop
adc
sbb
cmpsb
adc
xor
decl
sbb
xor
dec
subl
push
iret
jnp
cmpsl
mov
or
stc
xchg
cmp
mov
mov
and
push
icebp
cmp
xchg
adc
mov
push
mov
push
xchg
lcall
pop
add
jb
lcall
int
and
fstpl
scas
call
sub
mov
push
and
fucomi
cmc
fildl
icebp
mov
sub
outsb
clc
mov
faddl
push
push
iret
jl
je
lahf
or
dec
cmp
mov
loop
push
mov
popa
lcall
fucomi
rcll
add
inc
push
lcall
mov
daa
out
ja
aaa
test
cld
js
jp
out
nop
push
push
fwait
mov
outsb
ret
cld
inc
insb
gs
call
and
lea
xchg
push
jbe
pop
addr16
sti
sub
jno
iret
add
icebp
sub
ret
fstl
xor
push
mov
xchg
ljmp
test
jae
mov
pop
sbb
jmp
scas
push
dec
jns
pop
pushf
popf
dec
dec
cmc
push
pusha
pop
pop
repz
sarb
bnd
inc
inc
fwait
aad
out
mov
shll
sub
inc
fstl
data16
in
inc
iret
xchg
or
push
sbb
jp
cmp
iret
dec
mov
hlt
lods
leave
mov
ljmp
loope
stc
test
aam
ficoml
lock
or
jno
jo
sub
lcall
cmpb
pop
mov
movsl
sti
push
pop
or
mov
jae
jmp
pop
ja
jmp
or
orl
fs
js
mov
imulb
stc
roll
rorl
fdivs
aam
jl
test
mov
es
fdivrp
jne
add
jmp
movsb
mov
mov
mull
and
xlat
loope
stos
mov
pop
test
inc
add
pop
scas
loop
clc
stc
scas
pop
xor
ss
cmpb
lods
stos
cltd
xchg
mov
push
add
pushf
mov
insb
inc
lret
out
pop
pop
jg
pop
xor
inc
in
jae
flds
sub
pop
mov
push
scas
mov
cmpl
push
cmp
sbb
jnp
xorb
das
cmpsl
orb
jne
out
mov
lods
mov
mov
ret
sub
stos
adc
cmp
pop
mov
fldl
subb
repnz
jnp
mov
repz
out
xlat
jge
jp
xchg
out
xor
push
fdivr
dec
inc
daa
repz
mov
add
push
fbstp
mov
mov
xor
ljmp
hlt
ret
cmpsb
lock
aaa
jl
pusha
call
loop
cmpsl
jo
in
mov
and
jmp
mov
sbb
out
aaa
hlt
cmp
rolb
outsb
pop
jno
pop
lcall
mov
push
lcall
mov
mov
mov
mov
loopne
lcall
fwait
pushf
cmp
sahf
mov
fnop
xor
add
xchg
sahf
ljmp
ljmp
enter
dec
leave
sub
mov
ljmp
fmulp
arpl
jnp,pn
jmp
popl
mov
imul
jmp
mov
ret
stos
push
adc
jl
mov
insb
cmp
outsb
setg
mov
cld
pushl
xchg
sub
rcrl
fsqrt
jo
pushf
xchg
jl
sarb
and
sub
mov
js
mov
mov
int
out
ljmp
add
cmp
outsl
jbe
or
mov
push
pop
sub
jno
mov
mov
lea
push
jl
sub
sti
lahf
imul
push
mov
sbbl
lcall
call
pusha
inc
aad
pop
shrb
mov
cs
cltd
popa
jb
inc
push
push
cmp
adc
call
jmp
jp
add
movsl
cmc
mov
mov
cmp
loopne
into
inc
ret
mov
mov
test
call
xchg
fsubp
adc
stos
mov
icebp
incl
out
fistl
sahf
data16
or
inc
mov
js
bound
mov
jg
xchg
in
cld
inc
ljmp
or
mov
decl
ljmp
ja
mov
test
fstpl
mov
int
and
adc
xchg
call
mov
inc
jns
adc
mov
mov
xor
jge
jno
mov
lcall
jo
data16
add
andb
fs
dec
enter
add
test
idiv
pushl
and
xchg
mov
jmp
mov
mov
in
jl
push
sub
cmp
jg
out
push
cli
nop
or
je
mov
out
pop
ret
in
arpl
jmp
or
ret
pop
sub
or
imul
dec
adc
mov
or
sub
mov
add
loop
xchg
call
ret
daa
mov
enter
xchg
sub
xchg
dec
cmp
sub
lcall
sub
mov
mov
js
pop
outsl
or
es
and
test
dec
jb
arpl
mov
add
sahf
mov
fcom
jmp
xor
jg
mov
xor
int3
addr16
outsl
stos
je
fwait
test
push
adc
out
decl
in
pop
push
aad
push
cmpsl
lds
fmull
xor
xchg
push
lods
mov
jecxz
out
clc
call
push
push
cmp
cmpsl
xorb
fstps
call
sbb
fists
addr16
dec
test
adc
pop
iret
push
mov
push
mov
decl
push
incb
push
data16
jg
in
mov
sbb
scas
aad
xorb
jnp
jmp
xchg
and
setge
incb
or
test
cmpsl
popa
jne
adc
add
cli
arpl
add
sub
cs
lahf
pop
ficoml
cmpsl
pop
cmp
sbb
cmp
push
arpl
aas
cs
lret
sti
ret
sbb
mov
or
ds
mov
mov
leave
sbb
mov
andb
int3
xor
sahf
nop
or
jmp
outsl
data16
out
repnz
jg
stc
jb
movsl
sbb
dec
xchg
rcrb
xchg
xchg
or
adc
loope
xchg
fucom
ja
fcoms
cmp
cld
fsubrl
out
xor
mov
push
or
test
movsl
mov
jge
testb
call
rcr
pop
into
out
icebp
punpcklwd
xor
bound
add
dec
mov
fistps
mov
out
and
pop
pushf
lock
jg
xchg
cmp
mov
call
xchg
stos
pop
push
mov
fistpl
in
xchg
decb
mov
bound
call
mov
stos
mov
push
fdivrp
push
cmp
adc
push
cmp
outsl
sbb
jmp
dec
lcall
lcall
imul
dec
in
mov
test
cwtl
xchg
adc
je
popa
cmp
jmp
pop
sbb
xchg
push
js
pop
out
loopne
call
popf
out
dec
nop
sti
movsb
iret
lret
fs
call
jecxz
jecxz
mov
call
in
cltd
int
lcall
insl
cmp
stos
in
orb
sub
jnp
scas
inc
lret
pop
pop
leave
insb
xchg
add
icebp
jmp
pop
loope
test
jne
pop
xchg
dec
sbb
adc
xor
sbb
in
nop
gs
pop
mov
call
rcll
xchg
xlat
xchg
aam
lods
in
mov
int3
add
ss
pop
mov
ja
ljmp
inc
mov
mov
pop
push
mov
push
or
mov
icebp
or
sub
add
xchg
xor
scas
addl
hlt
test
decl
je
ficoms
mov
scas
mov
ds
push
jp
push
pushl
inc
stos
jmp
sbb
out
sub
cltd
adc
sbb
cwtl
sub
bound
jmp
adc
popf
dec
push
mov
cmc
mov
cs
xor
int3
mov
imul
lcall
inc
cmpsl
call
clc
sbb
pop
ljmp
xor
dec
cld
cmpsl
test
inc
adc
push
icebp
shll
or
inc
add
nop
mov
das
dec
push
push
sbb
adc
xchg
jmp
cld
decl
mov
repnz
cmpl
add
out
andl
out
cli
jne
xchg
xor
mov
imul
xchg
fimull
mov
push
aam
rol
sbb
das
adc
mov
das
xorb
aas
xchg
mov
mov
push
jge
popf
pop
push
xchg
cmpsb
pop
push
add
adc
call
cmp
in
scas
xor
into
push
xlat
mov
loope
push
adc
pushl
mov
sub
fstps
in
sahf
inc
push
pop
popf
jl
fsubl
fdivrs
adc
mov
pusha
sbb
aas
cmp
cli
aas
jl
lcall
push
shll
pusha
add
test
xchg
bound
jbe
push
stos
pushl
fistl
mov
xchg
sbb
dec
mov
mov
out
pop
ljmp
and
adc
out
mov
jle
pop
sti
pop
xchg
ljmp
cwtl
inc
data16
bound
outsb
or
or
push
xchg
mov
sbb
out
rcll
stos
iret
xchg
cmp
jno
push
je
pop
and
loopne
insl
shlb
fmuls
lcall
cmp
cs
cld
clc
jns
push
inc
rcl
xor
add
ljmp
rcrb
xlat
loope
aaa
lret
stos
pop
xchg
pusha
stos
ret
fs
fisubrs
test
inc
pushf
pop
pop
fwait
out
insl
sub
aad
adc
pop
mov
jbe
push
call
jmp
ret
dec
scas
jg
xchg
dec
enter
mov
sbb
mov
dec
push
decl
mov
cli
mov
in
pop
push
mov
sbb
cmpsb
mov
push
mov
aam
js
mov
and
push
adc
push
fdivl
loopne
test
inc
mov
testb
jp
lods
call
lcall
je
or
jp
xchg
mov
call
mov
fs
lock
mov
mov
adc
cmp
int3
stos
jle
dec
addb
push
lahf
fsubrl
pop
lock
inc
aad
mov
nop
mov
mov
decl
xchg
xlat
jecxz
dec
adc
in
outsl
aam
rep
xlat
arpl
push
shll
incl
ret
movsl
jb
jecxz
stos
es
push
addr16
push
outsl
fisttpl
dec
out
mov
mov
bound
incl
pop
test
leave
cmpsl
lret
dec
adc
mov
dec
arpl
mov
std
in
insl
stos
in
pop
mov
pop
xchg
pop
ss
push
add
lock
pushl
jmp
mov
inc
mov
fsubl
jb
lods
and
xchg
call
sub
dec
outsl
push
sti
pop
ret
cmc
mov
arpl
pop
xchg
jp
jg
cwtl
pop
scas
jge
daa
cmc
decl
fdivl
xchg
cmovg
jo
jo
fisttpl
daa
and
cli
call
imul
push
jbe
sub
adc
push
adc
aad
jge
mov
iret
dec
pop
jmp
add
sub
push
add
mov
pushl
addr16
jge
loopne
rorb
test
or
lret
jnp
mov
incl
sub
shl
cmpsl
adc
jl
loope
out
ja
and
mov
xor
inc
pop
jl
dec
pushl
loop
into
mov
sub
push
mov
ja
mov
xor
sarb
lcall
sub
test
fdivl
adc
ljmp
pusha
pop
outsb
sub
decl
mov
adc
insl
jl
into
lock
jmp
mov
popf
stc
int3
nop
cmp
mov
insl
out
sbb
gs
out
cmp
pushl
std
mov
or
xlat
clc
shll
push
aam
or
in
fisttpll
subb
lret
bound
rcll
dec
dec
movsl
xchg
inc
sub
cwtl
ljmp
mov
sub
sub
scas
enter
and
lcall
inc
out
mov
mov
mov
adcb
pop
into
mov
add
scas
push
hlt
adc
scas
stos
sbb
fdiv
push
xor
popa
or
dec
jp
jmp
mov
sub
push
xor
xchg
mov
mov
cmp
xor
repnz
mov
sub
roll
rcl
adc
popa
sti
xor
cli
add
sub
mov
mov
mov
scas
push
mov
xchg
loopne
in
pop
rolb
inc
jnp
aad
aaa
std
or
insl
pop
lret
arpl
sub
sub
test
ljmp
lcall
jle
pop
insl
mov
ljmp
xor
dec
mov
jmp
lcall
mov
inc
lcall
aaa
sbb
pop
daa
dec
cld
jmp
je
adc
imul
lret
cmp
cmpsl
push
decl
sar
adc
es
cmp
shlb
xchg
add
popf
jae
hlt
std
rcll
lahf
sub
xchg
in
rcll
ficompl
cmp
mov
inc
sysret
jb
out
push
stos
movb
fwait
push
test
fnstsw
sahf
aad
je
and
lock
mov
cmpsl
cmpsb
popa
adc
sbb
imul
aad
in
decl
aam
inc
cld
lods
sbb
sti
das
inc
xchg
mov
cmp
sub
inc
pop
and
sub
loope
mov
ret
std
jmp
cs
jno
lahf
cmp
stc
add
stc
cmp
sarb
add
incl
popf
jo
push
jl
addr16
or
iret
scas
test
push
loope
cli
mov
adc
cmc
cs
jne
fcomip
call
icebp
sbb
cli
out
insb
cmpl
leave
int
test
mov
fndisi(8087
aas
adc
push
rcr
sti
xchg
ljmp
mulb
and
inc
in
mov
lods
outsl
sti
movb
lods
pop
push
fistl
ljmp
sbb
or
sub
roll
or
nop
nop
ret
aad
cmp
stos
in
dec
mov
jmp
ret
add
aaa
push
mov
inc
push
mov
adc
lcall
ljmp
xchg
or
pop
rclb
sub
call
inc
mov
out
out
or
cwtl
subb
jne
fistps
add
arpl
push
scas
pusha
mov
inc
in
gs
mov
jecxz
stos
pop
inc
xchg
cmpsb
mov
je
mov
incl
sub
dec
lock
add
lea
mov
popf
or
jnp
or
decl
jb
fstpt
lds
add
lahf
test
push
stc
in
sti
dec
incl
sbb
push
jl
sti
mov
xor
xchg
popa
jae
in
mov
jecxz
mov
aas
sti
inc
sbb
fimull
ss
mov
insl
pushf
xor
mov
adc
dec
pushl
stos
sbb
fucomp
test
fwait
xchg
jne
jmp
rcll
into
cmpsb
cmp
decl
mov
lds
jg
je
popf
inc
out
mov
pushf
cmp
cmpsl
lret
insb
mov
fcmovbe
or
push
lahf
xchg
inc
iret
negl
push
fidivrl
fildll
inc
adc
std
clc
sub
xlat
insb
ljmp
mov
fsubl
stos
pushl
leave
or
test
mov
fnstcw
aam
ljmp
pusha
iret
fdivrp
mov
ja
shl
mov
sar
adc
xlat
xchg
loopne
mov
push
push
hlt
pop
inc
add
cmp
mov
fidivs
mov
xchg
cmc
sti
push
fnsave
scas
push
out
cmp
jmp
mov
lret
xor
dec
xchg
mov
icebp
repnz
sub
pop
dec
pop
xchg
les
cmp
jmp
test
mov
insb
scas
jo
jge
lcall
mov
mov
clc
stc
mov
mov
insl
out
cmp
push
daa
idiv
pushl
cld
movsl
adc
lcall
fs
lods
test
jp
inc
fcompl
mov
scas
test
mov
or
in
out
and
adc
adcb
mov
jmp
cmp
pop
inc
cmc
stos
arpl
clc
jg
push
dec
rorb
sbb
shlb
jne
outsb
sbb
aad
mov
addr16
mov
sbb
pop
dec
push
lcall
stos
jge
mov
pop
sar
mov
xor
cmpsl
scas
pop
dec
out
dec
push
pop
xor
movsl
push
mov
add
xchg
dec
mov
cld
push
js
aas
rcrb
xor
and
push
jl
gs
adc
push
pop
lods
cltd
cmpsb
fcoms
xchg
out
adc
jecxz
int
add
xor
lret
mov
jle
and
scas
xchg
push
cmc
incl
jbe
ljmp
das
mov
imul
jns
xlat
es
aas
sbb
aam
or
filds
mov
pusha
pushf
cmpsb
cli
ret
iret
pop
ret
cs
movsl
and
mov
int3
sbb
scas
cwtl
xchg
sub
inc
push
fbld
pop
aas
sbb
mov
test
fcomip
inc
stos
mov
aam
dec
lahf
into
adc
stos
mov
cmp
mov
ljmp
icebp
mov
imull
enter
jmp
push
call
sub
jmp
pop
adc
scas
jns
push
or
cmp
ljmp
dec
sub
jne
sbb
mov
mov
or
push
sbb
lcall
int
jbe
repz
mov
mov
stos
xchg
mov
pop
leave
push
repnz
pop
mov
adc
popf
incl
test
pop
jb
repnz
iret
movsb
decb
xchg
lea
cmp
push
call
pushf
aas
inc
cmpsb
adc
leave
insl
imul
aas
sub
dec
fs
inc
cltd
xor
mov
enter
cmpsb
insb
xchg
and
lock
jns
mov
dec
popa
pop
rclb
inc
movsb
xor
jne
repz
adc
data16
pop
shrb
pop
cmp
dec
movsl
add
cmp
nop
jp
clc
test
mov
and
and
pinsrw
icebp
jmp
into
pop
mov
cmp
dec
scas
lret
mov
stc
xchg
dec
push
decl
stos
movsb
popa
lret
fistpl
inc
mov
xchg
divl
push
stos
xlat
in
mov
lcall
shrb
push
das
and
sub
jecxz
adc
cltd
loop
lods
scas
es
xorl
push
je
pop
cmp
sbb
jmp
inc
sbb
sahf
dec
mov
push
adc
mov
int
push
and
and
hlt
rep
cmp
aad
out
mov
arpl
ficomps
add
mov
jmp
cmp
push
orl
inc
sub
in
int
push
push
sti
pop
push
cltd
nop
xor
inc
in
inc
test
sbb
outsl
jmp
and
inc
xchg
push
daa
decl
imul
adc
push
sub
cld
jns
jle
mov
adc
or
pop
sarl
rcrb
mov
adc
and
jns
pop
es
aas
mov
jns
mov
les
pop
add
subb
in
jmp
shl
cmp
insb
pop
lcall
jmp
jns
adc
shlb
jp
mov
pusha
or
call
fbstp
jbe
out
iret
add
mov
ss
cli
mov
incl
pop
insb
pusha
push
leave
enter
cmp
test
add
sbb
and
inc
rclb
sbb
std
mov
popf
fwait
pop
stos
divb
pop
and
faddp
inc
xchg
incl
das
les
sbbl
sub
or
scas
cmp
shll
imul
call
pusha
add
std
or
stos
xchg
or
lock
mov
aaa
hlt
incl
cld
movsb
add
dec
add
insl
mov
cwtl
push
jnp
incl
ret
lahf
cmpsl
mov
std
jmp
lret
data16
cmp
fcos
pushl
inc
pop
mov
cmp
xchg
or
mov
int3
fst
xor
int
andl
sbb
rsqrtps
cltd
inc
jns
mov
cmpsl
mov
ret
sbb
aas
inc
stos
shll
xor
jmp
out
into
mov
pusha
repnz
dec
sub
lock
out
mov
outsl
clc
sub
sti
ds
popf
fucomip
mov
push
std
or
jp
fsubs
jl
jb
sarl
mov
cli
out
cltd
cmp
stos
out
push
and
or
adc
decl
jmp
inc
out
aas
lock
cmp
pusha
leave
fmul
and
xor
ret
adc
cltd
xor
sub
adc
push
loop
into
repnz
dec
testl
js
cmp
cmovo
aas
fsubp
mov
cmpsl
dec
cwtl
loopne
lds
das
aam
sbb
loopne
loopne
mov
mov
outsb
cwtl
mov
push
ret
pop
mov
sub
adc
sub
dec
movsb
bound
add
lahf
adc
and
leave
ret
iret
aam
mov
mov
icebp
push
jno
sbb
test
add
cmp
xchg
mov
push
adc
scas
aaa
cmp
loop
dec
scas
xlat
pushf
pop
fs
fists
sahf
movsb
call
mov
bnd
out
cmp
xor
dec
ds
sub
or
jmp
popf
xor
sbb
scas
out
outsb
cmpsl
xchg
ffree
repz
shlb
adc
mov
in
mov
xchg
pushl
mov
and
fcoms
mov
les
sub
pop
sbb
cmp
ljmp
rcrb
push
cmp
stos
sbb
mov
outsb
test
lods
incl
adc
in
pop
add
pop
std
jg
inc
clc
int
mov
sub
lea
sub
inc
jg
ljmp
dec
out
imul
fs
std
pop
mov
jne
mov
decl
push
int3
xchg
call
js
jmp
sub
sti
push
jg
das
movsl
imul
fbld
mov
adc
cmpb
pushf
enter
fwait
pop
jno
jp
out
sbb
decl
sub
fsts
cmp
fisubs
jle
test
clc
xor
fnsave
mov
xchg
mov
shrb
xchg
repnz
cmpsb
aaa
xchg
jecxz
jg
xchg
pusha
push
xor
xor
pushl
aaa
dec
aaa
insb
data16
push
insb
add
dec
fcmove
out
mov
js
sub
ds
cmp
and
pushf
or
daa
lret
outsb
sbb
incl
xchg
adc
nop
pusha
cli
popf
hlt
xor
movsb
in
mov
pop
add
insl
scas
add
decl
scas
aaa
or
xor
pusha
andb
les
inc
loope
rolb
inc
and
dec
add
inc
cmpsl
cmc
jmp
jl
shlb
cmpsb
xor
imul
mov
rcll
loopne
and
fbstp
mov
sub
ret
int
orl
inc
adc
push
mov
dec
add
cltd
adc
sbb
call
jmp
mov
push
cmova
or
mov
pop
sbb
popa
fnsave
add
cmp
dec
fcompl
cmp
lcall
sub
mov
mov
mov
aad
fs
mov
fidivrl
lret
jno
jne
adc
mov
dec
mov
cmpl
addl
mull
jmp
adc
decl
js
out
mov
xchg
leave
sub
fadds
sub
ljmp
ret
inc
test
nop
mov
popa
and
insb
ficompl
stos
fsts
jp
and
pop
int
data16
push
test
jg
pop
call
loop
inc
sbb
lcall
stos
mov
push
es
jge
in
inc
pop
or
std
lret
add
outsl
mov
mov
jmp
sub
std
pushf
jg
popf
pop
push
mov
sbb
sub
dec
inc
shrb
pushl
pop
mov
sub
test
and
in
pushf
xor
cmp
cmp
rclb
das
popf
inc
jecxz
and
xchg
aaa
aaa
push
out
fs
mov
push
xlat
sub
stos
jnp
les
daa
fsubs
in
dec
into
cmpsl
push
fidivrs
mov
leave
jbe
push
cmp
mov
xchg
lret
fcoms
pop
sub
sarb
data16
es
jl
push
mov
mov
movsb
gs
sar
int3
out
xlat
stos
in
jno
xchg
sbb
dec
subb
push
pop
dec
shr
das
mov
incl
jg
mov
je
fistpl
push
jle
xor
leave
cmp
fsts
sbb
jno
fdivr
lcall
int
and
sbb
push
sub
adc
sub
mov
std
ss
das
cmp
mov
sbb
push
cmpsl
test
jb
rcl
xorl
div
sbb
inc
and
ret
nop
xchg
fisubrl
push
lcall
jno
xchg
cmp
out
dec
push
add
loop
cmc
and
mov
xor
decl
in
insl
xlat
adc
or
add
xlat
std
mov
add
into
push
cmp
into
shlb
idiv
decl
bound
dec
popa
mov
cli
leave
xchg
enter
sub
cmp
in
cli
movsb
xchg
fildll
ljmp
pop
push
mov
push
cmp
or
pop
push
mov
fdivs
mov
pushl
push
scas
push
fs
jle
ljmp
and
add
int3
adc
dec
mov
outsl
jp
lods
leave
sub
aad
mov
or
dec
movsl
push
push
xchg
jg
xchg
sbb
sub
inc
in
pusha
in
test
mov
dec
and
push
mov
hlt
dec
ret
jmp
lahf
mov
mov
push
inc
dec
jns
test
fcomip
pushl
leave
mov
shll
divps
clc
jp
pop
pusha
xchg
in
cli
lods
mov
loope
test
xchg
push
dec
dec
jecxz
es
xor
or
cwtl
movsb
decl
clc
sub
push
imul
push
inc
out
xor
xchg
sbb
sub
into
mov
decl
jnp
aas
fucomp
jl
and
mov
push
mov
mov
sub
fwait
decl
test
push
int
pop
pop
ss
cmpsl
ret
pop
add
fisubs
lcall
in
stos
lret
aad
xchg
inc
or
cmpsb
rolb
inc
xchg
test
dec
lods
dec
mov
fnstsw
gs
test
xor
mov
test
mov
dec
xor
ds
mov
repz
xchg
mov
mov
push
adc
and
pushf
adc
mov
or
ss
mov
xor
iret
push
call
cs
ja
cmp
arpl
jp
jle
pop
dec
sbb
dec
dec
cmp
or
mov
das
cld
loop
mov
and
scas
loopne
mov
xchg
jmp
leave
push
pop
mov
dec
out
dec
mov
mov
clc
lock
inc
or
mov
fbstp
addr16
incl
mov
fdivrs
adc
icebp
or
inc
pop
cmp
andb
ljmp
pop
rorl
cmpsl
imul
fldt
mov
pop
mov
es
ljmp
mov
fstpt
xchg
dec
lret
dec
ja
cwtl
lret
pushl
xchg
sub
xchg
add
nop
jmp
js
lea
mov
scas
mov
stc
pop
mov
and
dec
inc
arpl
cltd
or
cmp
loope
mov
js
insb
mov
xchg
ljmp
adc
jg
sub
nop
imul
aaa
pop
mov
cltd
cmp
sub
inc
in
test
cmp
pop
jge
shll
fimuls
sahf
or
imulb
lods
cmp
enter
xchg
xchg
xor
or
ret
jp
xchg
arpl
adc
mov
arpl
rcl
mov
shlb
in
cmp
add
stos
cmpsb
incl
push
push
adc
std
jg
in
mov
and
repz
into
xor
mov
pop
push
and
insl
adcb
lret
cli
inc
add
data16
xchg
testl
xor
and
and
xchg
mov
popa
jg
popa
mov
jb
jns
push
insb
cmp
jg
jmp
pop
out
pop
sbb
hlt
inc
pusha
pusha
mov
and
mov
jmp
fdivp
mov
pop
ret
mov
insl
imul
int3
test
dec
cmpl
fsubrs
rcrl
push
sub
pop
pop
sbb
fdivrl
fbstp
mov
mov
xchg
sbb
jns
jg
or
incl
push
push
inc
outsl
rol
push
xor
jbe
push
jecxz
pop
push
and
or
mov
jmp
ficompl
adc
insl
or
cltd
xchg
fwait
in
inc
sti
pop
mov
dec
ja
pop
pop
mov
loopne
fcompl
in
loope
ret
popa
rcll
jmp
mov
test
mov
add
jnp
leave
fadd
dec
cmpsl
fld
inc
loop
jmp
push
mov
xor
cmc
in
repz
icebp
and
mov
hlt
lods
push
sub
inc
in
stc
and
js
or
test
xchg
insb
mov
mov
dec
fs
xor
pushl
stc
xchg
jae
cmp
or
mov
mov
jge
fwait
lock
xor
call
pop
pushl
xchg
add
mov
lret
inc
hlt
sbb
outsb
mov
inc
add
ret
in
gs
cmp
enter
sub
xchg
mov
js
xchg
inc
and
clc
call
insl
cmc
dec
dec
fiaddl
int3
test
mov
stos
popa
jmp
inc
push
inc
cld
mov
imul
pusha
xor
lds
mov
jg
mov
incl
mov
push
jge
lahf
imul
out
arpl
and
mov
sbb
jbe
sbb
jb
inc
and
and
call
inc
cld
pop
fwait
inc
push
inc
push
adc
xor
fst
ja
daa
xor
bound
xor
ljmp
cmp
jmp
dec
xchg
das
mov
ret
test
loopne
xchg
jmp
push
or
push
or
mov
arpl
dec
push
inc
cmp
out
mov
cmp
cmp
gs
in
fcomi
imul
popa
std
and
andl
pushl
fdivrs
mov
dec
scas
scas
sbb
push
sub
enter
jne
lea
dec
mov
out
fcomip
or
push
inc
sub
jb
mov
push
mov
mov
or
incl
nop
push
sub
xor
sbb
call
ret
int3
testb
sub
jp
imul
aam
inc
andb
lcall
xchg
cwtl
ds
mov
add
ret
fs
ret
sti
hlt
ja
mulb
ljmp
lds
add
movsl
test
movsb
pop
pop
push
jo
cmp
popa
dec
push
std
je
push
pop
cmp
or
add
stos
loope
jae
inc
dec
lea
sbb
fs
outsb
jne
enter
incl
or
pop
adc
imul
adcl
push
and
cmp
lret
incl
adc
loop
jle
or
push
dec
push
cmp
or
popa
stos
ljmp
xchg
push
loop
cli
adc
fildl
repnz
into
les
loopne
dec
fidivrl
mov
into
mov
jnp
repnz
lcall
xchg
adc
cmp
cmp
and
cltd
sub
adc
inc
cmp
pop
cmp
and
push
cli
sbb
push
pop
scas
repz
lods
mov
sarb
jmp
mov
movsb
negl
out
int3
cmp
rolb
adc
data16
stos
jp
test
das
outsb
add
clc
pop
lret
push
mov
ficompl
cmc
pop
push
cmpl
call
fdivrl
into
gs
rclb
sbb
sub
adc
incl
inc
inc
je
pop
adc
mov
ret
inc
dec
add
dec
outsl
sub
dec
inc
imul
inc
movb
mov
cmp
dec
xor
pop
sub
popf
sbb
out
mov
pusha
xchg
fistpl
stos
add
fadd
add
rep
int
cwtl
mov
out
cmpsb
adc
ljmp
imul
mov
jne
outsl
cmp
leave
pop
and
mov
cld
pusha
sbb
stos
loop
lret
xor
inc
cmp
cltd
out
xor
mov
gs
and
call
jmp
rcrb
stos
sbb
cmp
push
inc
lods
sti
inc
push
mov
in
mov
ljmp
push
pop
mov
mov
bound
cmpsb
xchg
mov
lods
jle
dec
xchg
pushl
lods
decl
out
loopne
in
lcall
testb
mov
aad
incl
movb
fwait
xchg
xchg
out
cmp
fs
in
xchg
xor
decl
sbb
push
les
call
repz
movsb
sbb
sub
inc
ds
aad
dec
pop
pop
pop
aas
jge
or
xchg
rorl
jo
sar
jg
sub
mov
shll
jl
mov
mov
popf
add
outsb
subb
call
in
fcmovb
test
sub
outsl
mov
lcall
pushf
gs
sub
jno
stos
jg
dec
lahf
movsb
dec
sub
mov
sbb
mov
pop
push
stos
mov
pop
or
lret
mov
scas
jmp
mov
jg
and
and
pop
stc
jnp
mov
incl
in
jp
xor
sbb
mov
pop
pop
enter
push
or
dec
lods
loope
inc
call
and
cmc
mov
ss
idivb
adc
push
add
iret
cli
inc
addl
jns
sbb
mov
pop
ret
jnp
sub
add
inc
js
push
add
pop
sub
jae
or
push
xor
clc
sub
sbb
inc
std
mov
mov
xchg
push
jg
ljmp
inc
xchg
inc
jg,pt
cs
dec
movsb
push
and
mov
xor
decl
rol
ljmp
mov
sub
inc
mov
xchg
and
std
outsl
clc
lcall
xor
mov
lcall
cmp
inc
pushl
ficomps
jo
out
addr16
pop
or
or
and
inc
mov
add
aaa
jmp
shlb
ficoms
rorb
jg
sub
jo
jg
incl
jae
es
sub
test
ds
aam
push
sarl
pop
jmp
stc
in
insb
dec
dec
inc
aam
out
mov
dec
mov
mov
push
fadds
pop
or
enter
outsb
and
sbbb
xchg
in
sbb
xor
ljmp
mov
aad
scas
sub
xlat
jbe
out
mov
pop
inc
popa
push
decl
push
xor
inc
insl
mov
pop
testl
cwtl
xchg
mov
jmp
mov
lods
mov
test
sahf
aas
add
pushl
fidivl
mov
in
in
cwtl
and
movsb
ja
out
arpl
in
or
pop
mov
into
add
sahf
dec
sub
std
in
incl
movsb
lods
out
test
dec
enter
sbb
mov
xchg
xchg
rcr
jle
add
jo
mov
mov
inc
or
jae
stos
fcmovnbe
cmc
daa
nop
or
ret
out
xor
pushl
mov
dec
iret
bound
and
cmc
das
dec
sub
imul
jecxz
sub
int
out
fs
jb
pop
addr16
cs
mov
fstpt
ret
cmp
xor
lcall
push
sti
test
mov
out
lahf
xchg
mov
pop
add
jmp
jne
adc
arpl
xor
decl
shl
in
arpl
ret
sub
test
dec
shrb
rclb
js
popl
outsl
out
ds
cmp
pop
add
pop
in
pushf
mov
inc
push
sbb
shll
jmp
ljmp
push
adc
mov
fdiv
loope
dec
xchg
mov
loopne
cmp
decl
test
fwait
push
lahf
push
repz
sub
xor
repz
mov
adc
pop
mov
out
cli
das
clc
or
xchg
xor
pop
sti
sbb
push
stos
inc
fcomip
add
mov
add
fs
out
ret
cltd
push
js
test
fwait
nop
jae
decl
cmp
aaa
call
pushf
je
cmc
inc
push
mov
imul
faddl
mov
dec
jl
scas
lret
xor
dec
call
and
and
push
loope
iret
pushl
inc
jmp
js
adc
inc
mov
or
loope
aaa
cltd
loopne
lock
adc
lcall
mov
sbb
movsb
das
push
mov
mov
dec
fwait
jnp
aaa
loop
test
inc
inc
pop
pop
popa
pusha
push
loop
ret
push
test
cmp
adc
mov
lcall
push
movsb
in
test
int3
jb
xchg
popf
stc
pop
push
inc
xchg
inc
loopne
jp
mov
lcall
cmc
mov
test
mov
inc
xchg
pop
in
mov
xor
lcall
jl
cmpl
push
inc
loope
mov
push
mov
hlt
sbb
call
pop
rolb
push
ret
push
mov
pop
and
mov
jmp
jne
loop
pop
aam
outsl
enter
or
cmp
nop
sub
out
or
movsl
sub
std
lcall
xlat
data16
dec
addr16
lahf
xor
es
jns
and
scas
mov
cmp
test
nop
push
dec
xor
mov
ret
dec
repnz
std
xor
pop
push
xlat
cmp
cmpsb
mov
inc
lea
scas
imul
jmp
xchg
pop
jns
and
cmpsb
xchg
dec
xchg
sub
or
xchg
xchg
pop
sti
mov
xchg
pop
mov
popa
lret
stos
sub
adc
sbbl
pop
fs
cld
cwtl
fldcw
jae
test
pop
and
clc
cmp
scas
mov
mov
sub
xchg
loopne
mov
mov
scas
jbe
dec
inc
int
rcll
testb
es
call
and
sub
jo
sub
dec
paddb
pushl
dec
test
push
lret
enter
adc
xor
xchg
mov
mov
call
pop
pop
repz
fwait
mov
add
subl
xchg
push
mov
lds
jmp
adc
cmp
or
inc
imul
xor
lcall
jb
sub
cmp
rol
test
mov
jg
push
in
and
call
adc
sub
inc
jecxz
stc
aaa
xchg
cltd
cmp
leave
in
mov
inc
sti
imul
pop
movsb
dec
paddd
in
pop
sub
repnz
hlt
iret
mov
push
daa
mov
fmull
jg
lods
sbb
push
call
idivb
xor
test
push
lock
into
adc
inc
push
inc
xchg
cmp
cld
mov
jmp
push
scas
leave
sub
test
inc
mov
xchg
mov
mov
sar
decl
dec
ror
pushw
shl
sti
cmc
js
scas
fstpl
push
sahf
nop
addr16
fs
outsl
adc
cmp
push
das
sub
pop
stc
in
push
jns
xchg
daa
lcall
lahf
filds
sub
enter
lods
test
clc
les
push
add
aam
mov
mov
pushf
mov
lds
mov
push
sbb
das
cmp
dec
xchg
and
movsb
gs
adc
aad
stos
dec
mov
jb
lcall
push
ret
add
inc
jp
cwtl
mov
in
or
mov
jl
sub
jmp
mov
cmp
cli
and
cli
inc
pop
and
and
je
pop
lds
out
sub
add
loopne
add
xor
mov
incl
pop
leave
movsb
inc
jge
and
ljmp
mov
lret
mov
add
push
or
mov
mov
mov
pop
pushf
xor
pop
mov
in
xchg
sahf
aaa
cmp
ljmp
cmc
sidtl
sub
mov
or
jae
mov
lcall
in
sbb
bound
xchg
mov
int3
mov
mov
outsb
loope
xchg
aas
xor
mov
mov
insl
pop
xchg
in
adc
pushl
std
push
push
sarb
js
clc
jmp
xchg
jge
jg
mov
cwtl
or
sub
outsl
fcomp
xchg
push
popf
or
jp
lcall
add
sbb
cmpsb
xchg
into
dec
mov
scas
mov
jle
scas
push
and
out
sarl
mov
mov
pop
cmp
jmp
lretw
and
clc
cwtl
aaa
or
lock
jle
call
ljmp
imul
sahf
dec
decb
jmp
bound
or
call
test
fwait
mov
xchg
out
les
push
lcall
loope
jns
mov
decl
cmpb
sbb
xlat
addr16
push
or
add
rorl
push
ljmp
mov
jle
lahf
lret
dec
xor
outsb
mov
stos
out
ss
dec
dec
cmp
ja
enter
bound
lret
xor
cld
jmp
mov
xchg
imul
inc
xlat
ljmp
inc
dec
xor
lods
adcb
lahf
subl
ror
mov
mov
mov
sarb
mov
shlb
ja
fdiv
or
call
sub
sub
mov
jg
adc
and
in
adc
inc
leave
pop
mov
sub
and
pop
jb
mov
lea
dec
icebp
test
call
pop
ret
arpl
jecxz
loop
imulb
push
cmc
mov
dec
scas
sarb
call
add
cmp
out
mov
ret
push
test
cld
xchg
pop
xchg
aam
xchg
addr16
inc
std
decl
add
xor
pop
sbb
jbe
lret
xchg
pop
lods
insb
or
in
mov
mov
std
pop
rclb
jmp
sbbb
jmp
mov
push
mov
jo
xor
inc
jb
mov
std
cmpsl
lods
pop
or
ffree
push
lea
popf
or
lret
xor
pushl
add
push
cmp
mov
testl
xchg
ss
mov
push
or
and
out
push
add
movsb
icebp
sub
pushf
dec
mov
lret
jmp
mov
shlb
ss
popa
gs
bound
aas
jmp
cli
mov
xor
and
jg
mov
pop
and
ljmp
xchg
repz
mov
dec
add
mov
rolb
jmp
mov
decl
jl
push
xchg
adc
je
mov
orb
icebp
stos
and
jmp
ss
jo
jns
and
push
loope
pushl
and
xchg
cltd
jnp
or
and
data16
push
xor
ja
mov
and
cmp
and
int3
dec
jno
cwtl
mov
int
addr16
out
fstps
cmpsl
push
ret
out
push
stos
pop
inc
lea
mov
or
lcall
mov
or
shrl
add
mov
std
movsb
shll
ja
cmp
mov
stos
orl
test
clc
clc
outsb
mov
in
jmp
cmp
fcom
aaa
pop
in
adcb
aad
sub
xchg
cmp
pop
cmc
leave
and
test
mov
ljmp
clc
aaa
inc
pop
out
mov
dec
inc
fisubl
push
stos
xchg
call
and
push
jmp
lock
inc
add
pop
loope
fwait
scas
xchg
and
ss
loop
insb
push
ljmp
cmp
mov
das
pop
inc
adc
aam
cs
dec
pop
xlat
outsb
sahf
pop
dec
loop
sti
mov
cli
push
adc
and
outsl
rclb
scas
xor
ds
push
shrb
inc
xchg
pop
mov
mov
inc
lcall
fistps
repnz
popf
push
xor
ss
jge
mov
call
push
loopne
xchg
mov
inc
pop
bound
jbe
lods
push
subb
les
xchg
decl
mov
push
mov
mov
std
xor
xchg
icebp
push
inc
out
push
insl
mov
lods
mov
jmp
and
cmp
pop
xchg
cwtl
add
jns
lea
mov
std
inc
call
cld
call
test
xor
xchg
dec
jge
mov
mov
ss
ret
pop
xchg
decl
pop
xorb
bnd
xorl
cmp
out
mov
sahf
call
push
mov
xor
sub
push
lret
ja
in
dec
push
inc
lods
xchg
mov
das
rol
xchg
rsm
test
cld
pushf
push
addr16
scas
lock
into
cmp
or
call
cmp
dec
leave
inc
adcb
and
or
lret
sbb
jl
ljmp
lret
and
sub
jae
leave
fisttpl
add
xor
inc
xor
stos
lcall
ljmp
int3
push
xchg
pop
into
add
xchg
jnp
or
icebp
jmp
mov
sub
fsubrs
ret
mov
pop
das
xor
jmp
sbb
shrl
mov
add
and
decl
aas
loopne
arpl
xor
fdivrs
sub
in
int
inc
pop
fsubrs
cmp
mov
in
push
xor
aaa
fsubrp
sbb
push
xchg
repnz
lahf
mov
pop
aad
mov
jo
rcrb
aam
pushf
or
les
test
hlt
icebp
cmp
inc
inc
insl
jl
enter
or
add
adc
pop
jae
mov
sarb
sbb
cld
jb
lcall
nop
jbe
test
xor
mov
fld
sti
pop
xchg
rolb
cmp
call
pusha
cmp
sub
add
mov
mov
in
xor
jge
shll
push
lods
clc
repnz
xor
xor
pop
sub
pop
inc
call
jmp
sbb
bound
and
out
imul
and
push
add
jne
and
popa
clc
push
mov
push
fsts
loopne
mov
outsl
xchg
inc
push
orl
jmp
add
ljmp
adc
stc
dec
xor
aaa
data16
inc
cltd
vmovaps
jmp
mov
popa
pop
cmp
mov
test
mov
jnp
call
and
jl
jno
shlb
cmpsl
test
inc
adc
mov
mov
stos
lods
xor
popf
daa
icebp
mov
call
sub
scas
or
icebp
lcall
leave
pop
ret
iret
add
push
mov
outsl
sbb
incl
jecxz
inc
mov
mov
bound
mov
push
pop
aam
repnz
jp
pop
pop
mov
and
mov
ret
xor
mov
outsl
scas
xor
and
sbb
xor
pushl
mov
pop
out
mov
add
xor
push
enter
pushl
cld
mov
or
fs
mov
jl
pop
xchg
and
inc
or
divl
std
pushl
add
in
stc
fisubl
psrlq
mov
lea
sub
bnd
jmp
push
pop
jp
and
inc
cli
sbb
repz
xchg
mov
push
out
cmc
pusha
add
cwtl
add
xchg
dec
leave
inc
sbb
xor
adc
fisttpl
cs
adc
cmp
gs
rcrb
cmp
inc
pop
xchg
cwtl
in
jmp
add
enter
mov
decl
jne
jo
lret
xchg
loope
hlt
xor
lcall
and
sti
push
out
in
in
ja
data16
mov
in
lods
sub
das
clc
ljmp
lea
clc
pop
scas
adcb
call
pushf
call
imul
incl
popa
mov
cltd
dec
dec
sub
imul
or
sub
and
ljmp
lds
xchg
repz
mov
lods
jnp
clc
sub
pop
mov
lcall
or
cmp
push
inc
aas
mov
mov
fldenv
xchg
cmpsb
push
sbb
js
dec
jo
ljmp
xor
xchg
or
punpckhbw
mov
into
push
fisubrl
aad
leave
xchg
add
in
aam
scas
fs
and
or
jg
repnz
fdivr
inc
divb
ljmp
lret
shrb
daa
push
mov
pop
cli
inc
push
adc
ljmp
lcall
add
add
std
sbb
or
sbb
fnstcw
mov
pop
add
push
mov
sar
mov
loop
push
sub
mov
mov
push
in
stc
push
call
xlat
in
or
push
sbb
aaa
pusha
insl
adcb
incb
scas
pusha
in
xor
jg
call
jge
fstps
pmaddwd
pop
or
cmpl
aaa
popf
mov
sub
pushl
ljmp
es
mov
jp
notl
pop
mov
pop
in
decl
into
cmp
jb
hlt
mov
je
jns
sahf
neg
xchg
dec
or
decl
pop
jne
mov
xor
mov
push
frstor
addb
dec
fistps
mov
out
ljmp
push
sti
sbb
push
popa
xchg
dec
arpl
lcall
fcomi
aas
insb
dec
nop
subps
push
mov
cmpsb
adc
test
in
adc
jmp
pcmpeqb
mov
push
into
mov
or
jno
xchg
jg
movl
lock
jnp
setp
in
jg
mov
mov
repz
mov
divb
mov
jmp
or
hlt
aam
jns
ja
sbb
mov
push
fcmovbe
ret
test
call
mov
push
xchg
in
test
sbb
fincstp
aad
mov
pop
or
xchg
add
ljmp
inc
adc
lcall
fs
fcmovnb
out
je
jg
fistpll
jb
sub
or
pushf
aam
clc
lcall
xor
dec
mov
mov
ja
or
adcb
cmp
fs
mov
mov
cmpsb
pop
pop
repz
divl
lock
jo
xchg
or
mov
inc
cwtl
push
arpl
mov
cltd
dec
sub
push
add
mov
call
pop
out
fisubrl
frstor
jl
pop
or
xchg
mov
bound
pop
lock
or
pushl
loop
push
rcrb
test
sub
push
sub
pop
cmp
push
mov
xlat
push
sub
pushl
jl
movsl
jae
jae
inc
data16
jnp
xor
mov
popf
xchg
mov
lds
jmp
or
xor
das
mov
mov
mov
mov
xor
cld
cld
rolb
mov
mov
sub
and
jbe
scas
dec
lret
je
xchg
cmpsb
cld
mov
and
xor
cmp
xor
or
cltd
lds
out
adc
insl
adc
in
ljmp
cli
cwtl
fists
dec
mov
nop
loope
ficoml
pop
or
repnz
mov
or
stos
mov
pushl
negl
test
fildll
xor
insb
cmp
or
jo
xchg
pop
push
xor
inc
push
incl
and
jb
into
sbb
ljmp
sbb
push
mov
add
rcl
mov
push
aam
lahf
jne
and
xor
lcall
inc
setae
mov
outsb
pop
push
movsl
idivl
daa
or
ljmp
insb
adc
cmp
push
fdivrl
mov
aam
loop
mov
dec
dec
push
outsb
mov
mov
mov
cmp
or
xchg
outsl
rcl
cmp
outsl
fcomip
insl
nop
mov
insl
icebp
jmp
and
repz
in
lcall
enter
and
gs
add
addr16
sbb
clc
and
lcall
fnsave
in
xchg
shrb
pop
adc
or
call
icebp
lods
push
xchg
mov
cltd
mov
aad
push
jno
xchg
scas
add
add
dec
lcall
rcll
cs
xlat
shrb
inc
cs
pushl
jno
lods
bound
loopne
sub
cmpsl
add
push
cld
in
cmp
or
mov
out
jno
sbb
and
repz
cld
aas
cmc
mov
jg
inc
rcl
cli
cmp
dec
sbb
jp,pt
ljmp
lcall
mov
in
mov
aaa
ret
ja
push
jg
sbb
and
decl
fldt
mov
jns
ss
xor
dec
sbb
mov
pop
jbe
push
xchg
cmc
adc
jns
stos
adc
cld
sub
addr16
lock
incl
popa
sbb
icebp
aaa
movsl
jge
in
mov
mov
lcall
aaa
sub
scas
sub
push
push
stc
sub
pop
data16
aaa
sbb
dec
pushf
lret
imul
jmp
xchg
jp
mov
jae
lcall
pop
inc
insb
test
dec
xor
mov
call
pop
sbb
adc
pop
add
in
push
mov
push
scas
loopne
push
lods
imul
dec
jg
call
leave
sarb
lahf
sbb
fimuls
fcomp
sbb
sbb
jl
jmp
testb
in
xlat
pop
dec
jmp
dec
andl
int3
cli
test
out
jb
jmp
dec
fucomip
push
pop
dec
test
aaa
inc
mov
mov
push
lods
sbb
cld
jne
ljmp
dec
mov
and
iret
lea
mov
ja
pop
jmp
add
pmullw
mov
imulb
fwait
sahf
lret
test
sub
loopne
and
inc
bound
ret
incl
test
jecxz
cmpsl
ja
mov
dec
xchg
arpl
sbb
ret
fdivp
lods
aad
andb
clc
call
pusha
outsl
cmp
stc
pop
pushf
stos
mov
repnz
inc
mov
int3
push
push
pushl
lods
fidivrs
ret
sub
add
add
jb
ljmp
pop
ljmp
sbb
cmp
clc
je
jbe
leave
stc
mov
inc
frstor
decl
xchg
aas
cltd
jp
add
jne
dec
push
sbb
jno
fists
data16
and
mov
rcr
inc
scas
insl
cmp
xor
fmuls
mov
ljmp
xor
add
mov
add
jl
data16
in
fsubrp
aas
mov
and
push
cmp
pop
pop
lods
call
push
dec
xchg
movsb
cmc
dec
xchg
stc
mov
lds
mov
pop
dec
fmull
inc
call
incl
xchg
sbb
jmp
xchg
ficompl
push
or
icebp
int3
adc
jb
shrl
popl
mov
pop
bound
xlat
decl
dec
cmpsb
jno
and
inc
xchg
cmc
icebp
mov
test
fcomps
lcall
popa
lods
dec
mov
jae
lea
cmpb
dec
jmp
fwait
and
cmpsb
jns
call
aad
sub
pop
jl
xchg
loop
xchg
jg
or
pushf
mov
xchg
adc
and
jmp
std
call
jp
orl
sbb
aaa
cmp
mov
push
inc
stos
adc
pop
mov
jmp
imul
out
jmp
lock
sub
ljmp
inc
in
aam
xchg
bound
sbb
jg
xor
sarb
loop
shll
shr
js
and
xchg
int3
inc
lcall
push
sahf
sti
jle
cmp
std
add
cmp
push
sub
lock
xor
incl
xchg
pushl
test
pushf
push
sbb
xchg
sbb
and
mov
ljmp
cmp
mov
pop
xchg
lret
cs
out
popl
popa
inc
jmp
and
inc
and
sahf
gs
and
cmp
xor
pushl
pop
or
sub
clc
push
aad
jb
mov
popf
out
jns
icebp
lcall
lcall
push
mov
fnstcw
jg
sub
pop
push
je
popf
jmp
pop
aas
call
xor
call
fwait
lcall
pop
fistps
nop
push
add
cmp
mov
decl
add
cmpsb
mov
xchg
add
mov
pop
int
jne
rcrb
jmp
push
add
in
fwait
sbb
paddusw
ljmp
addr16
pushf
xchg
pop
mov
ljmp
lcall
sub
fwait
lods
or
inc
daa
cmp
or
mov
leave
add
sub
lcall
push
pop
xchg
inc
add
cs
shlb
aad
aad
mov
mov
call
divb
loop
rcrl
xchg
push
pop
pushl
and
pushl
in
push
idivb
push
inc
xchg
movsl
mov
mov
jmp
or
sbb
adc
fwait
decb
lock
test
cli
into
jmp
int3
ljmp
jg
enter
push
cmp
push
sbb
push
ds
pop
jmp
pop
dec
jmp
cmp
mov
lds
mov
push
shrb
call
sarl
adc
xor
mov
sbb
jmp
lcall
out
call
lods
mov
outsb
loopne
popa
jmp
jge
int3
push
pop
pop
mov
loope
shrb
mov
xchg
fistps
loop
inc
inc
inc
mov
adc
inc
mov
jne
cltd
filds
repz
gs
lcall
xor
mov
cmp
gs
mov
ret
push
dec
je
xchg
jg
cmp
jle
lods
cwtl
imul
jbe
cltd
stc
push
sbb
jle
jae
cltd
xor
xor
scas
jmp
test
xor
pop
out
dec
loope
cmp
xchg
mov
sbb
jl
adc
mov
cmp
lcall
jl
push
mov
movsb
loopne
dec
or
xchg
lahf
loop
es
add
sar
decl
push
imul
pop
call
es
dec
lcall
decl
cltd
dec
xchg
lcall
ss
adc
popa
xchg
push
aad
sbb
mov
mov
mov
shrl
test
pop
into
sti
sbb
sbb
jmp
in
add
es
jmp
xchg
aas
push
arpl
fs
push
fbld
sar
cmp
adc
cmc
loopne
xor
test
loope
mov
xchg
xchg
xchg
add
incl
adc
out
add
lcall
shrl
mov
dec
lock
sbb
call
mov
enter
mov
sti
jnp
and
mov
add
lahf
or
lcall
sbb
pop
arpl
nop
sub
notb
test
xchg
mov
jecxz
mov
cld
jns
stc
pop
enter
mov
or
cli
dec
or
dec
cmc
pop
les
pushl
lcall
movsl
cld
imul
adc
inc
xchg
nop
dec
or
xchg
jno
loop
decl
sbb
ret
add
mov
fimull
iret
fwait
jmp
daa
pop
pop
andb
xlat
xchg
or
sbb
jb
sahf
xchg
or
adc
ljmp
les
stos
mov
dec
cmp
loope
out
mov
pop
es
rcl
jmp
cmp
xor
dec
ja,pt
sbb
sbbb
outsb
fiaddl
mov
mov
cmpsb
lahf
jb
ret
shlb
clc
mov
jmp
mov
jg
nop
mov
lcall
xlat
arpl
adcb
xor
sti
addr16
push
mov
xchg
adc
std
sub
and
inc
sbb
and
outsb
inc
in
mov
xchg
xor
popa
and
fnstsw
and
xchg
ficoms
jp
daa
push
aaa
jo
push
mov
bound
pushf
xorl
pop
lock
cli
dec
mov
xchg
cli
cmc
leave
call
jnp
shl
cltd
mov
daa
mov
mov
jle
or
hlt
sbb
sub
je
add
jg
mov
js
jae
js
into
pop
inc
stos
imul
call
add
out
xor
xchg
es
pop
sbb
add
lcall
push
mov
jle
mov
xchg
inc
test
lds
sub
mov
xchg
mov
ljmp
mov
cld
sbb
xor
lret
js
arpl
sub
mov
js
xchg
jb
adc
sti
aaa
enter
decb
sbb
incl
xchg
cld
mov
movsb
adcb
jle
rolb
lods
std
lcall
jmp
das
and
and
inc
mov
ficompl
cld
adc
call
sbb
mov
jle
test
lret
and
inc
inc
mov
cli
mov
jg
jmp
cs
jecxz
ret
hlt
in
lds
sbb
push
fwait
cmpsl
cmpsl
dec
jnp
fs
cli
mov
mov
jmp
xor
leave
or
cmp
push
sub
mov
add
int
xor
mov
inc
popa
pop
mov
sbb
sbb
lahf
cs
lcall
mov
mov
xor
xchg
gs
iret
dec
enter
fistl
sub
pop
cmp
jo
sub
movsb
rorl
sbb
jbe
arpl
das
mov
or
out
pop
stos
icebp
inc
push
adc
test
jp
sub
cmpsb
pop
push
xor
lcall
push
in
mov
call
and
xchg
ds
leave
je
repz
stos
and
in
dec
decl
dec
sub
add
add
pop
repnz
cli
pop
mov
jb
fisttpll
gs
jmp
pushf
mov
repnz
rolb
xor
test
dec
mov
jne
pushf
rol
inc
decl
inc
jle
fsts
out
shlb
into
lcall
call
lods
sbb
add
leave
pop
ret
or
adc
movsl
pop
inc
pushf
xchg
lret
sbb
int
inc
xchg
push
ljmp
aaa
or
mov
cmc
jge
leave
pop
test
lcall
xchg
leave
pop
jb
movsb
lahf
xchg
lock
and
mov
data16
jmp
gs
aas
jge
fcmove
lcall
mull
jns
fcompl
mov
rcll
jge
loop
decl
or
inc
push
ljmp
movb
lea
jmp
xor
push
fisubrs
orb
pop
adc
test
test
mov
lret
add
push
outsl
dec
mov
dec
ret
push
lds
pop
out
pop
fsts
mov
ljmp
rorb
jmp
ja
rclb
sub
add
ficompl
lods
fsubs
mov
jns
call
pop
jg
cmp
ds
pop
les
insl
push
sub
stos
or
dec
pop
or
or
ficomps
cmp
push
mov
scas
lods
pop
xor
mov
xor
call
jg
cmpb
out
and
jne
jns
cmp
sub
out
sbb
pop
mov
inc
jmp
adc
jmp
gs
mov
mov
pop
jo
pop
jl,pt
inc
lret
pop
push
ss
cmp
call
push
mov
je
aaa
movsb
gs
or
and
sub
hlt
inc
test
in
jecxz
cmp
incl
mov
xchg
loopne
icebp
mov
outsb
inc
insb
push
in
xchg
sbbb
jp
mov
sub
clc
movsb
xchg
jmp
mul
in
fisttpll
lahf
in
xchg
pop
aam
inc
lcall
jl
ss
pop
xor
pop
fxtract
pop
add
pushf
sub
jmp
sbb
iret
pop
pushl
xchg
sbb
inc
out
movsl
cltd
fwait
xor
pop
rorb
test
std
xchg
movsb
test
xor
jo
cwtl
call
and
jle
jo
add
ss
imul
cwtl
mov
pop
cld
decl
jge
int
stos
stos
das
enter
jae
and
mov
clc
inc
add
incl
xchg
inc
movlps
ss
in
lock
mov
xchg
jg
adc
aas
fwait
adc
incl
roll
sti
ljmp
fildl
push
add
cmc
decl
jmp
mov
rcl
repz
adc
sub
mov
xchg
gs
subl
mov
ljmp
dec
loopne
jl
out
mov
or
loope
fcom
sbb
sub
rorl
add
pop
data16
cmp
cs
in
pcmpeqd
push
dec
xor
jge
sbb
fdivl
sub
inc
pushf
fadds
std
decl
andb
in
les
loope
addr16
test
decl
inc
mov
jb
fisubrl
and
stos
and
jp
sbb
lods
adc
push
std
push
shrl
adc
push
cmp
or
mov
call
fwait
iret
and
cbtw
ret
dec
mov
addr16
fnstcw
cli
cmpsl
mov
fcomp
push
jg
call
pop
xchg
xchg
sbb
rcrb
fdivrs
ds
fsubrs
fistpl
pusha
std
push
insb
gs
pusha
dec
imul
adc
insb
dec
jmp
ljmp
xor
ss
hlt
ret
sub
mov
push
in
or
stc
call
lret
sbb
sbb
or
repz
ljmp
call
adc
sbb
stc
gs
pop
rclb
mov
stos
jbe
bound
decl
lret
xchg
mov
or
pop
jge
adc
lcall
adc
lcall
test
mov
rcll
aad
cltd
push
cmpsb
ud2
decl
lret
into
jecxz
mov
in
inc
mov
out
adc
stc
inc
xor
jecxz
jb
add
sti
lret
or
inc
adc
push
fcoms
imul
jne
es
lahf
arpl
cmp
inc
pop
fucomp
dec
jns
out
fdivrs
jmp
lahf
inc
jmp
loope
ret
je
mov
cmpsl
aaa
cld
decl
jns
pusha
popf
sbb
lcall
sub
ljmp
incl
push
pop
fwait
popa
fisubrl
cld
andl
dec
stos
mov
xlat
xchg
movsl
sub
push
lcall
adc
loope
jmp
aam
mov
sarb
push
mov
sbb
fiaddl
push
add
lods
mov
mov
cmp
inc
cmp
cli
cltd
ljmp
stc
pop
movl
scas
in
fdiv
xchg
imul
cmc
xchg
dec
lods
dec
imul
and
clc
xchg
scas
sbb
push
popa
mov
mov
xchg
ljmp
cli
jb
sbb
fs
dec
enter
ja
shl
or
cli
mov
xor
push
add
dec
icebp
movsb
pop
sbb
jb
aam
mov
xchg
sbb
cwtl
jg
jo
lret
in
dec
and
sbb
js
jns
lret
outsl
dec
out
mov
decl
lock
cli
jns
mov
or
push
testl
fbld
repnz
mov
pop
jne
pop
outsl
add
adc
out
repnz
inc
ret
jmp
iret
in
xor
dec
pop
int3
clc
mov
call
xchg
cli
ja
decl
inc
xor
inc
jnp
cli
daa
lock
sub
ljmp
ljmp
xlat
ret
inc
or
rcrl
in
es
xchg
xchg
pop
out
mov
mov
je
shr
or
mov
rcr
xchg
cmp
adc
je
call
jbe
fwait
arpl
sub
pop
lcall
ljmp
mov
adc
fistps
push
dec
insb
call
dec
out
cmp
popf
sub
jge
pop
lds
clc
push
fcmovnu
xchg
or
mov
xor
movsl
iret
es
incl
aad
sub
mov
cmp
mov
mov
xlat
inc
outsb
pop
adc
dec
sub
lea
in
xchg
mov
adc
hlt
int
mov
cli
add
fdiv
add
lcall
stos
push
out
jle
jb
ja
mov
roll
into
cld
jg
cmp
pusha
sbbb
pop
ljmp
inc
imul
in
cld
lret
sub
add
sti
fneni(8087
xchg
repnz
aad
testl
jb
mov
pop
lret
pop
mov
or
fbld
xchg
adc
addb
ljmp
fldcw
scas
dec
jg
inc
mov
in
cwtl
bound
add
imul
mov
call
call
xor
mov
push
xor
mov
sub
pop
mov
dec
pushf
mull
ljmp
lahf
and
stos
sub
dec
jmp
test
repnz
shll
js
call
pop
cmp
add
xor
pushf
adc
jle
fisubl
adc
arpl
or
jb
int3
and
add
lret
push
arpl
push
popa
mov
push
jmp
mov
inc
cmp
xchg
arpl
loop
outsl
fimuls
leave
in
incl
mov
ds
ja
inc
jl
test
icebp
rorb
stc
out
mov
data16
fdivs
out
pop
mov
or
adc
sarl
les
mov
xor
decl
adc
push
lds
pop
fcom
mov
sti
xchg
out
stos
lahf
notl
and
or
jmp
popf
hlt
mov
cmpsb
xchg
int
fistl
test
jmp
into
inc
test
aaa
and
push
in
lods
sbb
enter
fiadds
add
jmp
clc
xor
add
mov
sub
fcomip
jg
aas
pop
mov
or
and
mov
cwtl
shrb
sahf
jp
ljmp
push
mov
adc
dec
inc
nop
inc
test
stos
add
cld
push
cmc
push
insl
arpl
enter
add
jbe
dec
cmp
push
lret
cmc
shl
push
int3
test
out
clc
scas
adc
mov
sbb
jo
cltd
nop
cwtl
cs
shlb
movsl
push
scas
dec
icebp
outsb
fcomip
xor
cmp
in
jmp
fstpl
in
lcall
imul
sub
push
ljmp
cmp
push
cmp
in
push
dec
inc
and
subb
add
jmp
mov
pop
mov
push
in
pop
lea
cmp
inc
ficoms
rolb
stc
xchg
out
jle
add
jmp
push
int3
xchg
jnp
or
mov
push
xchg
enter
pushl
pop
aad
dec
mov
mov
sub
cltd
push
cmc
fldt
pop
mov
dec
inc
ja
cmp
ljmp
mov
push
and
and
cmpsl
ret
xchg
dec
ret
mov
repnz
sbb
negb
jp
and
clc
lret
subl
inc
xchg
xchg
insl
inc
das
outsb
cmp
sbb
out
sbb
decl
icebp
add
xchg
sbb
or
dec
lret
pop
movsb
lahf
repnz
dec
scas
rcll
dec
incl
push
data16
xchg
cmpsb
jmp
in
lea
or
push
sbb
dec
pushl
or
adc
and
loopne
inc
add
iret
xlat
mov
or
add
xchg
jns
incl
push
xchg
push
jecxz
add
ja
cld
fs
jp
loop
pop
gs
test
insb
orb
cmp
ljmp
pop
jo
cmp
push
mov
scas
cs
mov
movsl
add
jmp
rcrl
jecxz
andb
lock
jns
insb
jb
mov
nop/reserved
push
stos
ret
insb
in
loope
mov
jb,pt
fcomi
adc
data16
inc
aam
call
pop
cmp
repnz
or
loopne
int
dec
xchg
scas
call
inc
lods
push
dec
lret
cmp
mov
movsb
shlb
daa
clc
dec
add
add
inc
cmp
dec
sub
mov
jbe
aad
cmp
mov
sbb
xchg
das
cli
jmp
push
test
inc
or
push
or
popf
push
adc
pushl
xor
adc
adc
xlat
sub
adc
jb
mov
jg
ljmp
jg
or
std
adc
scas
sub
icebp
insl
scas
pushl
and
decl
pop
jae
ja
in
adc
mov
xor
push
add
mov
pop
push
cld
icebp
cs
decl
divl
imul
jp
je
call
cmpsb
push
pop
mov
sub
cmp
ss
push
add
xor
lahf
inc
jbe
mov
sub
sub
ret
outsl
push
inc
add
lcall
pusha
stos
or
test
sti
enter
mov
repnz
push
cmp
incl
enter
xor
push
or
jle
sbb
incl
push
iret
jp
shl
into
gs
push
int3
sbb
outsl
push
stc
sbb
xor
sbb
xor
test
push
push
lcall
jg
mov
jecxz
or
xorl
adc
cmpsl
insl
inc
xor
ljmp
push
std
bound
jno
cmp
xchg
push
pop
ret
adc
adc
pop
mov
out
jmp
test
aam
and
or
rcrl
mov
cld
jmp
mov
ds
jg
xchg
xor
roll
cmp
ficoml
mov
fs
mov
mov
stc
ja
das
clc
incl
mov
out
pushf
xchg
int
pop
call
mov
and
dec
inc
addr16
cmp
add
add
cwtl
sti
push
add
scas
ret
push
je
sarl
add
test
shlb
cmpsb
fcmovb
leave
mov
cmp
jg
mov
sbb
adc
jno
push
pop
loope
jns
and
mov
xchg
sub
mov
negb
or
inc
ret
data16
rclb
jns
outsb
sbb
push
jb
lea
cmp
xor
pop
and
inc
mov
pop
cmp
cmpsb
ret
jo
mov
jge
dec
es
sbb
cmp
sbb
sub
decl
dec
cwtl
pmulhuw
or
scas
scas
sarl
fwait
or
daa
xchg
add
sbb
imul
jg
dec
aaa
mov
jmp
jmp
add
in
imul
jl
dec
pop
adc
cmpsb
xchg
aam
gs
aaa
xchg
sbb
jmp
xor
cmc
mov
pop
push
mov
incl
mov
in
in
cmp
or
or
aam
fcmovb
dec
clc
mov
cmp
push
out
cltd
fnstsw
int
lods
js
and
lcall
out
mov
subb
fmuls
mov
imul
xchg
int3
hlt
outsl
pop
inc
shll
call
pop
dec
idiv
addr16
rcrb
scas
insl
mov
fst
or
idivl
shlb
lcall
pop
js
jo
jno
lds
xchg
adcb
mov
dec
push
jge
mov
decl
lock
xor
nop
lret
cmpsb
adc
aas
addr16
mov
xorl
adc
in
repz
mov
xor
and
leave
xor
mov
pushl
hlt
mov
cmp
mov
jne
fisubrl
jmp
inc
icebp
bound
loope
mov
add
mov
jge
sbb
std
lcall
jb
adc
or
push
inc
sub
dec
sahf
int3
fcomp
xchg
out
gs
bound
lretw
out
jne
and
lock
decl
cltd
jp
xchg
xchg
mov
mov
loopne
and
out
xor
dec
dec
cmp
call
cld
fists
mov
adc
push
mov
push
lds
imul
das
cli
pushl
ja
push
rcll
lods
repz
push
pop
add
cmp
mov
mov
mov
sub
mov
mov
ja
in
pusha
mov
jmp
xchg
mov
fstpt
sbb
icebp
js
mov
cmc
decb
mov
incl
sarl
mov
std
scas
notl
cs
inc
jne
and
mov
pushl
stos
cli
mov
nop
push
push
and
mov
fcmovb
jl
pop
push
add
cltd
bound
sub
cs
inc
adc
leave
fs
ret
int3
mov
adc
inc
test
fldl
rclb
dec
add
pop
fimull
push
in
xor
or
out
add
leave
dec
movsb
lcall
xor
xchg
les
jns
sub
jecxz
rclb
lea
sbb
imul
mov
arpl
sbb
mov
iret
or
dec
test
push
jecxz
in
fstps
popa
lods
or
or
dec
cmp
les
aas
sti
stos
mov
icebp
or
into
inc
pop
jp
push
in
push
or
and
jmp
push
stc
push
mov
fidivs
jno
mov
add
outsl
jecxz
pop
cmp
sar
lcall
pop
jle
loopne
aad
cmp
dec
inc
cmpsb
je
adc
push
adc
clc
std
icebp
lret
shl
aaa
adc
xchg
jb
jo
stos
pop
dec
xor
adc
jmp
test
dec
adc
std
ficoml
cs
jne
mov
lock
ret
daa
mov
ud0
incl
add
dec
adc
sarb
xor
push
sub
sahf
hlt
dec
or
mov
inc
mov
cs
sbb
push
jl
insl
or
stos
jecxz
mov
cwtl
cmp
decl
lods
inc
or
inc
add
xchg
fmull
loopne
inc
dec
outsl
push
dec
mov
lcall
cmp
dec
mov
in
jg
inc
xchg
push
jb
inc
icebp
mov
cmpsl
inc
insb
cltd
push
addr16
nop
rclb
pop
enter
sbb
inc
bound
data16
cmpsb
jge
jmp
test
add
mov
insl
js
movsb
mov
ret
ja
call
into
btc
cmc
das
rclb
mov
adc
cmp
inc
jne
lahf
sub
aas
lcall
and
dec
call
sbb
jb
popf
pop
inc
fmull
daa
mov
out
in
mov
aad
lock
adc
mov
xor
mov
js
or
ret
sar
xchg
mov
inc
gs
dec
xor
pop
test
in
dec
enter
int3
sbbb
and
insl
lahf
adc
ljmp
adc
mov
jnp
sub
pop
add
cs
adc
inc
imul
fwait
cmp
mov
mov
push
mov
mov
sbb
or
add
pop
sub
dec
shll
or
push
and
dec
cwtl
fmuls
mov
jbe
inc
pop
testb
mov
lcall
lds
insl
cwtl
or
mov
cmp
aaa
data16
mov
or
add
and
cmp
hlt
scas
xor
xor
and
cld
sbb
lcall
ret
jns
mov
push
out
lds
pusha
mov
and
add
adc
fcomps
jb
cmpsl
jb
cmpsb
pop
aaa
hlt
shrl
and
cmp
lods
pop
insl
and
pushl
stos
push
xor
mov
pop
test
fidivrs
xor
jmp
jle
push
add
jb
div
pop
or
insb
sub
inc
push
xor
les
or
jg
push
inc
mov
or
jb
les
sub
sbb
inc
jl
decl
jge
sbb
mov
push
rcll
mov
popa
adc
adc
outsb
fdivp
cltd
push
dec
js
pop
jmp
stos
lret
es
stos
stos
aaa
faddl
pop
shlb
bnd
call
xor
or
std
mov
mov
loope
dec
push
mov
dec
mov
ret
aas
adc
pop
and
pop
data16
in
nop
fs
cmp
mov
ljmp
pop
jns
sub
shrl
ss
in
mov
pushl
mov
addr16
stos
rolb
jnp
cmpsb
ret
mov
sahf
xchg
jle
pop
pop
jnp
mov
ja
test
ficompl
xchg
inc
mov
xchg
incl
or
pop
fstpt
in
mov
popa
and
lcall
xchg
cmc
xor
jmp
fmull
push
jns
jl
and
gs
jnp
mov
dec
aad
movsb
scas
out
rcl
cmp
stc
jecxz
jp
test
adc
jecxz
push
inc
ret
addr16
and
inc
jae
pop
adc
fiaddl
fsincos
lret
push
or
mov
inc
decl
call
pop
push
int
std
je
jnp
push
jbe
out
jne
lret
add
sar
ljmp
sbb
or
les
lcall
lret
mov
jg
pop
inc
mov
and
inc
arpl
fstp
mov
aas
xor
js
xor
jns
scas
xor
dec
add
fidivl
pop
jae
das
cmp
pop
inc
test
jecxz
or
xor
imul
icebp
rclb
pop
mov
lret
push
or
mov
out
imul
je
fucomp
bound
sbb
pop
dec
stc
push
into
mov
add
and
pop
lret
pop
dec
cmpsb
ljmp
bound
insl
incl
cld
incl
rolb
mov
add
adc
test
call
adc
xor
mov
xor
lods
mov
pop
sbb
fwait
adc
jmp
jecxz
xor
mov
ds
frstor
loope
outsb
cli
ficomps
int
rcrl
lcall
adc
xor
loop
inc
shlb
jae
int
sbb
adc
test
xchg
xchg
mov
pushl
push
dec
xlat
sub
fcomip
pushl
jmp
add
aaa
adc
outsl
lcall
cld
out
cs
mov
int
lcall
mov
daa
fbstp
test
mov
jecxz
sbb
and
fstps
pop
push
or
sbb
stc
pop
xchg
test
sbb
clc
inc
sahf
jmp
inc
or
incl
xchg
loop
subl
cmp
in
add
jns
shll
sahf
lret
add
sbb
jmp
imulb
mov
mov
cmc
add
movsl
inc
hlt
jae
mov
les
and
push
call
js
imul
pop
or
mov
xchg
push
or
ljmp
dec
push
fisubrl
sub
in
adc
sub
push
xchg
push
fs
cwtl
sub
jl
jbe
movsb
mov
jnp
pop
lock
pop
xor
adc
adc
fnstcw
jbe
adc
icebp
clc
les
add
add
jo
sahf
gs
push
dec
jp
mov
dec
xor
fistpll
insb
jp
clc
push
mov
iret
mov
or
push
addb
aas
movsb
cli
mov
lret
jns
fidivrl
ljmp
lret
jbe
sbb
insb
addr16
dec
fs
incl
rcll
dec
int
cmp
xchg
and
push
les
cpuid
jbe
incl
mov
in
notb
repnz
push
cmpsb
push
inc
leave
sbb
jg
push
cmp
pop
std
ljmp
cmp
call
inc
lds
jno
dec
out
push
xor
xor
mov
and
cmp
and
mov
pop
or
mov
call
pop
into
popf
push
jecxz
xorl
and
mov
pushl
jns
push
loopne
out
mov
aaa
ja
in
cmp
cmp
jnp
cmpsb
push
cmpsb
cld
dec
xchg
test
lods
fs
arpl
add
stos
xor
dec
mov
inc
jo
lcall
incl
in
mov
vorps
sub
jb
sar
sbb
loopne
push
js
jg
ret
arpl
pop
jo
and
jns
inc
add
xchg
cmc
int3
mov
lock
ljmp
stc
les
pop
aad
sbb
lods
pop
hlt
dec
cmpxchg8b
push
lcall
call
test
cs
adc
iret
rorb
in
jge
sub
pushl
aad
shr
imul
pop
push
fidivrs
sar
incl
outsl
jge
jb
jp
mov
sbb
fwait
sub
jg
pop
inc
cmp
movsl
pusha
mov
mov
aam
sbb
jnp
fistpll
mov
data16
push
sahf
fcoms
push
jg
dec
movsb
adc
mov
dec
mov
sbb
pop
stos
ja
les
mov
pop
push
lret
sbb
into
and
push
push
jmp
add
push
in
out
aaa
and
push
sbb
xor
mov
ret
cmp
fiadds
scas
and
xor
inc
enter
push
pusha
cmp
call
test
lea
stc
jge
push
daa
repz
mov
xchg
or
loop
push
incl
sbb
mov
scas
aas
data16
movsl
lds
fs
call
sahf
lods
cs
call
pusha
sbbb
pop
sbb
xor
fistpl
mov
lcall
enter
push
subl
iret
xchg
enter
cld
jns
push
pcmpgtw
pushl
cwtl
or
lahf
sub
sub
xchg
and
adc
clc
jg
out
jg
scas
mov
adc
leave
add
inc
pop
subb
test
cld
cmp
pop
xchg
sub
cmp
aaa
xor
mov
idiv
call
lods
fstpt
cli
jl
cld
call
lahf
adc
hlt
mulb
out
or
cmc
push
in
icebp
mov
cmp
enter
leave
jnp
repnz
or
fbld
and
push
cld
iret
add
jmp
sahf
data16
stos
ret
pop
and
outsl
decl
inc
fdivl
adc
cli
inc
and
xor
push
fimuls
call
xlat
call
lods
xlat
mov
movsl
and
insl
adc
gs
stos
adc
xchg
adc
inc
insl
or
push
dec
push
ret
popa
inc
xchg
xor
jmp
push
arpl
js
mov
or
xor
stos
adc
pop
adc
add
lock
push
scas
fbstp
hlt
outsl
iret
je
or
sbb
mov
push
mov
es
mov
jecxz
mov
scas
rcrl
imul
dec
xor
rol
xor
inc
jne
pop
mov
es
or
lret
inc
movb
sbb
loopne
add
je
push
jmp
adc
outsl
fs
and
lea
fwait
jmp
scas
pop
negl
jecxz
inc
sahf
lds
xchg
shlb
nop
clc
cmpb
jmp
jo
call
mov
mov
imul
pop
sbb
shrl
add
dec
sbb
inc
ja
jo
and
dec
jmp
and
sub
imul
add
cli
add
sbb
cltd
jmp
jge
cmp
pusha
dec
movsb
jmp
lret
pop
mov
sar
jmp
aaa
and
inc
push
adc
bound
and
test
sbb
call
dec
in
mov
cmpsb
pminsw
lods
mov
fcmovb
cli
pop
xor
mov
jl
mov
decl
hlt
loope
cmp
mov
pop
mov
gs
ret
jnp
xchg
in
sahf
xor
cmp
xchg
jmp
popa
es
fidivrs
mov
ret
outsb
sbb
incl
outsb
iret
jmp
inc
clc
cmp
pop
ja
adc
inc
movsl
insb
mov
popa
xchg
sti
decl
sbb
cmc
fdivr
push
adc
mov
dec
movsl
test
imul
popf
push
cmp
pushl
sar
in
adc
pusha
aad
xchg
ss
jle
daa
cmp
mov
cmp
incl
stos
xchg
sbb
xlat
loope
outsb
ret
pop
and
cwtl
push
xchg
add
test
lods
sub
test
push
or
std
mov
jl
out
sub
ljmp
and
ret
xor
mov
je
mov
jb
cwtl
inc
aad
das
cltd
pop
pop
add
fstpt
mov
call
jl
pop
lcall
movsb
push
out
inc
pop
daa
mov
enter
jl
jno
incl
fwait
xor
pushl
and
xchg
subl
pushf
test
mov
pop
or
xor
adcb
pushl
dec
xor
popa
mov
popa
fimull
mov
push
or
pushl
mov
inc
pop
cmp
je
ljmp
jp
jns
addr16
call
inc
cmpl
ljmp
int
xor
outsl
mov
xchg
pop
or
push
fmull
pop
mov
scas
inc
mov
das
das
sbb
dec
sbb
pusha
std
lcall
loope
fldcw
jmp
mov
push
movd
and
jl
lret
test
shl
mov
fisttpll
mov
dec
incl
inc
jmp
loop
pop
out
lea
push
shl
jb
mov
decl
test
roll
sbb
pusha
jge
xchg
ja
push
xchg
cmp
ljmp
imul
dec
add
in
pop
xor
mov
jns
in
das
jle
mov
leave
xor
pop
lcall
dec
add
xchg
das
add
xchg
xchg
push
loop
loop
sub
addr16
jmp
mov
ja
sbb
jmp
ds
jmp
into
push
sbb
fidivrl
inc
jecxz
std
out
popf
popf
leave
jno
dec
int3
faddp
arpl
cmc
push
clc
call
push
imul
loope
xor
and
loope
lock
incl
cmp
mov
popa
ljmp
pop
cmp
cwtl
in
lock
sbb
fisttps
std
jl
pop
inc
xchg
aas
push
int
and
push
out
jmp
mov
insl
push
push
sub
push
pop
loopne
jl
rorb
mov
jno
pushf
cmp
push
addps
cli
in
popa
andl
xchg
pop
xor
or
mov
dec
and
ljmp
mov
cmpsl
mov
loopne
or
imul
lods
cwtl
or
mov
movsl
dec
out
xchg
dec
mov
cmp
or
repz
push
inc
daa
iret
imul
std
or
ret
push
inc
int3
mov
fs
inc
mov
in
adc
icebp
jg
bound
ret
int3
fstpl
fucom
jb
mov
sbb
fists
sbb
lock
test
out
cs
mov
incl
in
xor
sti
add
add
xchg
into
scas
ljmp
jmp
aaa
cltd
xchg
movsl
mov
in
addr16
hlt
ds
sbb
imul
ljmp
inc
add
lods
pop
pop
xchg
mov
or
and
lahf
jnp
clc
out
ss
push
lods
dec
sub
sbb
cld
imul
sbb
divl
push
cmpsb
cmc
stos
loopne
lods
and
jmp
rcr
xor
imul
lahf
add
fnstenv
pop
and
mov
jp
aam
idivb
lds
jg
mov
xchg
mov
fiadds
pushl
fndisi(8087
cld
dec
lcall
push
pop
imul
push
sbb
stos
and
jns
decl
mov
int3
pop
icebp
aam
xor
xchg
push
cmp
pop
imul
bound
xlat
dec
sbb
loope
int
in
adc
inc
dec
pop
outsb
nop
jge
mov
decl
sub
push
dec
push
jmp
lods
ss
nop
nop
add
cmc
incl
xchg
push
mov
or
dec
add
pop
add
or
in
jecxz
lds
jg
fcmovu
scas
neg
loope
incl
jmp
pop
movsb
xchg
dec
aam
push
pop
inc
pushl
decl
or
xor
push
cltd
int3
pop
data16
mov
dec
sbb
call
sub
scas
xor
xor
out
ret
sbb
cmp
outsb
dec
js
ljmp
xchg
addr16
xor
fs
inc
xchg
sbb
loop
imul
adc
cmp
call
stc
call
push
or
pop
test
imul
cld
fidivl
jg
adc
scas
jl
fwait
nop
scas
lret
orl
aaa
lret
popa
lret
mov
jb
pop
cmpsl
jecxz
cmc
pushl
clc
and
pop
add
aas
lods
sub
out
popa
xchg
incl
xor
cmpsl
pushf
stos
imul
dec
stc
fadds
jl
mov
fwait
movsl
dec
mov
jg
sbb
mov
and
repz
cmp
adc
inc
dec
decl
enter
imul
sbb
lahf
pop
decl
mov
cmc
outsl
mov
push
sub
sbb
and
lock
adc
pushw
push
in
imul
decb
or
inc
xor
push
cld
insb
xchg
nop
inc
scas
scas
repz
call
std
loop
stos
jne
xchg
loopne
icebp
mov
and
mulb
roll
out
decl
xor
push
div
out
dec
xchg
xchg
jne
xor
in
movsb
inc
dec
ret
mov
ljmp
pop
and
inc
sub
jbe
push
ficoms
xchg
aaa
mov
incl
jae
ret
pop
je
addr16
mov
inc
fcoms
pushl
into
inc
push
je
scas
adc
loope
mov
shr
inc
mov
pusha
int
ret
ljmp
lock
inc
lods
xchg
into
lahf
sbb
sub
jg
mov
dec
mov
mov
jmp
sub
sbb
subb
inc
dec
ja
call
pop
adc
or
inc
icebp
fisubrs
insb
mov
add
mov
xor
fcomip
arpl
xor
jle
inc
xchg
pop
mov
jg
test
or
xor
sub
fwait
push
sub
insl
and
jmp
test
dec
sub
pushl
or
mov
lahf
aaa
cmc
or
cmp
push
pop
xchg
mov
xor
or
decl
jl
jmp
pop
mov
not
jno
cltd
xor
pushl
cs
push
xor
into
das
add
shl
jl
jl
lds
push
adc
mov
test
cwtl
push
or
sbb
mov
sbb
jmp
sub
dec
add
and
adc
rcrl
dec
mov
lahf
adc
ljmp
xchg
sbbl
dec
idivb
xchg
or
loopne
mov
loop
fs
decl
mov
sarb
xor
cmp
fldcw
jecxz
push
sarb
lcall
out
imul
cltd
rcll
push
in
mov
cld
addb
rorl
inc
mov
lahf
add
ljmp
inc
sbb
and
adc
cmc
mov
mov
xor
cmpsl
rolb
jns
aad
sub
xchg
xchg
add
dec
or
idiv
jg
decl
add
ret
int
pop
sub
mov
addr16
pop
fsubrs
sti
jne
push
sbb
lcall
clc
adc
sub
push
notb
push
sub
fs
add
pushl
int
mov
ss
fists
jnp
das
stos
pop
cmp
push
es
pushl
inc
xchg
xor
pop
sar
gs
test
inc
and
jge
jge
xor
call
xchg
xchg
push
cmp
cmpl
pop
inc
icebp
int3
fcoml
hlt
jmp
pop
add
cmp
lcall
rcrl
leave
lods
dec
cmp
dec
test
adc
adc
sbb
mov
test
dec
decl
cltd
gs
addl
cwtl
cs
outsb
dec
pop
mov
jmp
jbe,pt
mov
push
dec
dec
jo
pushf
pop
sarl
or
inc
sbb
idivb
cmp
push
jge
add
movsl
add
xchg
loope
ret
or
dec
and
jnp
adc
dec
mov
pushl
or
mov
aam
in
mov
pop
sbb
in
scas
jp
or
push
push
sbb
pop
jmp
jmp
loop
pusha
lea
mov
repnz
dec
cmpsb
fdivs
and
or
aaa
or
stos
int
or
mov
sub
ficoms
call
sbb
add
fcoms
cmpsl
push
in
jp
lcall
lea
addr16
js
fnstcw
dec
lea
lock
fildl
mov
push
shlb
pushl
sbb
adc
mov
push
movsl
into
cmp
inc
jg
incl
mov
dec
jg
dec
inc
int
xchg
pop
inc
mov
arpl
cwtl
mov
add
mov
call
cmp
js
or
cmc
cmc
or
xorb
cli
cmp
push
jl
ljmp
fdivs
fcomps
sti
test
incl
lods
dec
jns
xlat
or
mov
ljmp
lcall
mov
imul
or
lcall
les
adc
rorl
in
pushl
dec
loopne
setle
dec
fsubrs
stos
out
push
testb
adc
mov
mov
add
mov
rorb
call
and
cmovae
fbld
fnstenv
sbb
sarb
nop
inc
push
js
sbb
fucom
dec
mov
mov
sub
inc
sbbb
xchg
clc
mov
call
cld
inc
add
in
leave
pop
sub
sbb
lahf
scas
jnp
jo
int
call
repnz
in
pop
xor
sub
and
popf
mov
push
sub
cmc
lcall
add
mov
sti
test
leave
jnp
pop
ljmp
mov
mov
xor
sub
stc
push
jmp
and
or
and
fstpl
and
iret
pop
jecxz
and
dec
push
xchg
xor
decl
sub
lahf
ret
adc
or
pop
sub
push
mov
outsl
jns
fistpll
ss
incl
cld
div
mov
jae
ds
scas
jns
xor
cwtl
xor
out
jle
xchg
jge
cmc
das
clc
pop
jns
add
scas
shrl
scas
fisttps
loope
aad
icebp
fcmovb
sub
mov
rcrb
lcall
adc
mov
dec
movsb
mov
xor
idivb
lods
outsl
in
idiv
add
push
xor
lcall
push
sbb
inc
daa
jg
fs
xlat
push
lds
pop
pop
mov
stos
mov
lcall
xor
lahf
int
aad
mov
ret
sti
repz
bnd
mov
adc
fmul
cmp
subl
fildl
inc
mov
mov
in
dec
fidivrs
loop
mov
andb
mov
loope
sbb
adc
jg
pushl
jl
imulb
or
jne
mov
sbb
iret
jecxz
mov
and
call
imul
xor
mul
cmp
adc
push
and
add
scas
adc
jmp
cmp
out
jl
push
push
neg
xchg
movsl
pop
movsb
rclb
mov
iret
and
cmpsb
jnp
xchg
sbb
ss
test
fmulp
adc
incl
js
pop
js
inc
sub
mov
or
fcoml
sub
jecxz
lods
pop
pushl
icebp
add
lcall
push
adc
lret
sub
out
inc
xor
cmp
xchg
mov
adc
inc
hlt
mov
fcomip
jge
xchg
ret
lea
in
sub
mov
cmc
ljmp
mov
ljmp
idivb
inc
mov
push
scas
lret
add
xor
dec
mov
mov
decb
stos
daa
shrl
mov
push
inc
xchg
or
bound
and
jmp
testb
push
in
lea
jge
mov
sub
mov
loop
call
fucom
movsb
loopne
divl
int
mov
clc
inc
fdiv
negb
decl
xor
pop
lods
cmp
fdivr
cmc
imul
push
pop
cld
adc
cld
push
in
stc
pop
jecxz
sbb
stos
pusha
pop
pushf
ljmp
sahf
mov
adc
repz
cli
fwait
xor
lea
ret
and
and
lods
sub
pop
arpl
aam
jae
idiv
imul
dec
scas
or
pop
xchg
jmp
jge
fucomip
cli
into
stc
fcmove
and
cmpb
mov
cmp
lret
mov
inc
pop
push
push
mov
mov
jle
daa
clc
decl
repz
adc
lods
cmp
dec
pushf
jecxz
jmp
mov
jo
pop
ds
pop
xorb
incl
dec
mov
stc
mov
not
daa
lods
movsl
push
loopne
das
jns
in
aaa
pop
insl
lahf
decl
ficoms
out
cmc
shll
mov
jl
mov
dec
sub
or
mov
ljmp
pushf
idivl
out
sub
inc
pop
xor
roll
sbb
push
dec
add
mov
xor
jnp
lahf
stc
pop
outsb
mov
movsl
stc
neg
pushl
mov
adc
jns
jg
rclb
pop
push
mov
sahf
decl
test
decl
sbb
jne
or
push
inc
fmull
or
dec
js
fnsave
jmp
jmp
add
pop
loopne
hlt
adc
loopne
ljmp
dec
mov
ljmp
mov
sarl
cli
adc
mov
les
pop
icebp
pop
lock
lcall
mov
ja
mov
mov
fsubrl
push
in
mov
mov
shlb
lcall
enter
in
stos
das
cmpsb
cmc
adc
loope
jne
push
scas
sub
pushf
daa
and
rcrb
lcall
dec
movsb
add
mov
pop
cmpsl
mov
jl
mov
leave
and
sub
decl
jg
cmp
test
into
imul
xchg
sbb
inc
cld
test
subl
adcb
cltd
aad
or
inc
sub
sbb
mov
or
or
mov
decb
jge
push
sub
je
jge
inc
int3
enter
mov
dec
xor
loope
ljmp
aam
or
dec
sbb
cmp
sbb
cmp
jae
movsb
push
and
cmp
xor
call
dec
add
cmp
cltd
jns
cwtl
bound
mov
mov
dec
pop
lods
sahf
mov
or
not
insb
push
jecxz
cmp
mov
push
enter
inc
dec
jg
mov
xor
sarl
cli
and
movsb
lds
pop
inc
iret
cmp
mov
iret
in
adc
cmpsl
faddp
xchg
push
mov
fists
repz
ja
call
and
jno
mov
inc
fisttpll
bound
dec
fisubl
mov
or
cmp
call
adc
add
rcrb
adc
fidivs
movsl
sub
inc
js
adc
icebp
jmp
pop
mov
scas
jne
sub
xlat
dec
xor
push
addl
mov
jle
jae
lret
hlt
orb
test
pop
sbb
call
jo
cmc
jmp
loope
pop
ss
xchg
sub
or
push
sbb
or
sarb
fwait
popa
mov
pop
add
fsts
cli
out
jo
idivb
lcall
fidivrs
xor
ljmp
mov
push
mov
or
repz
mov
mov
dec
sub
sar
jmp
push
fwait
loopne
xchg
lods
gs
out
nop
xlat
popf
adc
js
out
call
incl
dec
mov
cmp
cli
filds
stos
int
adc
xchg
sub
into
inc
jp
mov
popf
fiaddl
pop
pop
jne
loope
xchg
pop
je
add
dec
shr
pop
cs
dec
nop
ficoms
test
fsub
sub
pop
inc
pusha
fcomip
mov
sub
dec
pusha
xchg
clc
movsb
movsl
adc
cmp
lcall
repnz
and
decl
mov
cwtl
push
cmp
inc
mov
in
incl
sub
mov
jecxz
fcomip
lods
flds
test
cli
push
testl
pop
jg
lods
or
movsl
in
insl
mov
pop
test
inc
xor
mov
xchg
adc
or
cmp
lds
lds
jne
pop
test
icebp
xor
in
push
push
mov
pop
fwait
out
cli
push
vpsubb
sbb
xor
je
sbbb
sub
clc
incl
outsl
sub
pusha
sub
loopne
sti
jmp
lock
daa
out
lock
ljmp
xchg
cmpl
push
lret
jae
cmp
enter
inc
cmp
jmp
movsl
outsb
loope
arpl
mov
scas
sub
divl
popf
inc
adc
pusha
cmp
decl
decb
sub
push
fbld
add
xor
xor
mov
nop
jae
inc
cltd
push
jns
std
dec
xor
push
xor
push
mov
fcmovne
pop
ljmp
sbb
daa
mov
cmc
fldl
jbe
mov
ret
push
xor
dec
in
ficompl
loope
xchg
xchg
ret
addr16
mov
scas
popa
and
jle
js
sbb
pushl
daa
mov
popa
out
dec
iret
xchg
mov
push
call
inc
dec
xor
sub
fs
sub
mov
add
or
inc
pop
adc
push
xchg
rsqrtps
sbb
add
sub
xchg
mov
xchg
xor
pop
cmp
loopne
out
add
push
jecxz
mov
adc
out
pusha
jg
jmp
and
cmp
mov
add
fdivl
sbb
jb
add
mov
aaa
into
sahf
sub
clc
insb
mov
les
lcall
test
mov
imul
dec
pop
scas
outsb
inc
fdivs
shr
adc
lcall
lods
dec
lret
test
adc
push
in
adc
out
rcrb
push
in
pop
sbb
sahf
test
mov
iret
push
ret
adc
adc
lock
sub
int3
out
ljmp
ja
stos
cmc
stc
sub
mov
fcoml
xchg
xchg
dec
jle
push
mov
mov
xchg
sti
insl
jecxz
dec
insl
xor
arpl
sar
incl
xchg
sbb
test
cld
pop
repnz
fsubrp
cld
in
dec
adc
mov
or
jg
or
fsubl
or
stos
xchg
jle
push
les
fs
mov
cwtl
and
cmp
call
add
cmovnp
mov
stc
arpl
push
jo
rorb
sbb
fcomip
aaa
cld
dec
or
push
mov
test
sbb
dec
inc
lods
jbe
dec
push
lcall
call
xchg
aam
pop
or
int3
inc
subl
jge
lods
jne
jmp
or
sub
into
cmp
fildll
rep
inc
pop
mov
push
mov
decl
mov
and
add
in
xchg
iret
ret
mov
out
sub
mov
add
ss
roll
xor
xchg
fcmovnu
cmpsb
dec
mov
mov
xor
push
add
mov
enter
fcos
jg
mov
aam
cmp
lcall
jmp
jae
mov
sbb
adc
ljmp
mov
sbb
adc
ds
mov
rdtsc
xlat
enter
mov
adcb
pushl
push
mov
mov
roll
xor
fildl
sub
ja
push
push
icebp
ljmp
push
stos
dec
mov
or
pop
fimuls
jnp
add
adc
stos
js
cwtl
and
pushl
mov
ss
xor
dec
cmp
xor
jp
sqrtps
inc
scas
mov
scas
push
cmp
cmp
fstpt
cmp
aad
and
inc
aaa
lds
lea
or
test
lock
pushl
sub
cmp
rcr
idiv
push
push
repz
mov
sahf
outsl
push
enter
decl
mov
cmp
cs
mov
lea
sbb
aam
sub
jge
jg
xor
cmp
push
lahf
xchg
and
adc
loopne
pop
mov
cli
fwait
das
jo
inc
push
or
fdivs
jmp
imul
pop
sub
and
shlb
negb
imul
call
hlt
jg
mov
movsl
or
xor
push
jl
sbb
cmpb
negb
xor
mov
or
jge
testb
mov
pop
idivb
call
xchg
mov
filds
or
movsb
dec
lds
movsb
int3
in
push
pop
adc
aad
cld
in
stos
adc
imul
mov
jge
icebp
decl
push
data16
push
xchg
rcrb
aam
xor
xchg
sub
lcall
push
rcll
push
push
decl
je
hlt
xor
mov
mov
add
jmp
add
cmp
dec
inc
cmc
jb
test
xchg
out
adc
incl
iret
data16
sbb
sub
leave
orl
xor
aam
push
cld
jecxz
push
lret
incl
cwtl
out
inc
pop
mov
pop
jo
xchg
pop
mov
mov
fadd
sbb
stos
mov
jb
pusha
sub
rclb
add
jb
js
and
rol
pushl
inc
pusha
cs
dec
test
push
inc
aad
fisttpl
and
add
mov
test
addl
lods
divl
xor
stc
gs
aaa
rcll
xor
ds
and
xor
in
sub
and
ret
ljmp
ss
pop
test
or
in
cmp
mov
ret
cwtl
sbbl
decl
pushf
push
cmp
sub
inc
mov
jb
push
jg
loopne
push
test
xchg
loope
push
call
ss
out
cmp
jmp
imul
and
pop
cmp
clc
dec
and
or
aaa
lret
cmp
adc
ljmp
hlt
fisubs
cmpsl
cli
mov
mov
call
stos
les
scas
fidivrs
mov
add
mov
addr16
fimull
clc
or
sub
and
sbbl
push
cs
incl
popf
ljmp
lock
lret
scas
sbb
jne
ljmp
jnp
out
cli
sbb
loopne
push
sahf
and
outsb
push
xlat
out
scas
sbb
pop
mov
dec
mov
mov
mov
loopne
pop
mov
mov
imull
dec
mov
xchg
push
in
mov
dec
popa
mov
fsubl
mov
outsb
dec
push
or
decl
loopne
xor
hlt
xor
fisubs
jmp
sub
orb
mov
repz
out
jge
lods
sbb
call
movsb
dec
push
xchg
mov
add
jp
aad
mov
adc
or
xchg
mov
shll
jb
aas
mov
test
aam
js
hlt
decl
lret
pushf
push
mov
push
add
lret
int3
shll
je
pop
xchg
mov
push
mov
lret
rcr
jl
add
movsl
stos
stos
push
fcomp
enter
ljmp
fsts
adc
or
mov
jecxz
insb
push
incl
sub
mov
mov
dec
mov
jo
sub
cmc
call
arpl
sub
inc
adc
push
push
adcb
push
ljmp
mov
and
xlat
clc
test
inc
push
jmp
pop
pop
xchg
dec
cld
jmp
loop
dec
loopne
sub
ror
scas
or
jp
movsb
ret
pusha
inc
push
rolb
adc
aam
rclb
ljmp
imul
push
ja
repz
jne
arpl
imul
pushf
adc
jbe
jns
mov
decl
js
xchg
sub
outsb
stos
adc
enter
cmp
pop
incl
mov
add
xchg
cwtl
mov
lcall
fs
jns
lcall
jp
loop
push
fistpl
cmp
and
push
dec
cmp
adc
inc
aas
pop
loope
stos
jno
lods
inc
stos
push
mov
jnp
pop
pop
imul
mov
stos
mov
mov
bound
test
jge
mov
lea
mov
lcall
jo
shl
ja
shlb
or
dec
sbb
and
icebp
sahf
mov
lock
call
mov
jno
dec
fsts
adc
scas
xchg
mov
pushf
inc
sub
sub
andb
fisttpll
loop
orl
or
daa
test
popa
jp
mov
rcl
mov
stos
mov
enter
andl
out
sub
add
cmp
test
cmc
mov
pop
fbstp
mulb
pushl
dec
dec
inc
lock
mov
fwait
jecxz
imull
jnp
dec
testl
stc
aaa
std
dec
push
insl
and
data16
mov
mov
sbb
mov
decl
loopne
xlat
loop
inc
add
jb
call
ljmp
imul
aam
push
add
inc
fidivrl
inc
mov
mov
fidivrl
rcrb
mov
and
leave
out
fstpl
inc
cmpsb
cld
std
mov
pop
mov
jl
mov
adc
fsub
and
out
cmp
sbb
ret
mov
out
lret
decl
pop
sub
add
jmp
jns
loope
mov
dec
ds
call
push
rorl
add
dec
aad
popa
test
jb
sbb
addr16
inc
in
ljmp
pop
lcall
test
xor
pusha
xor
xor
call
out
fimull
jle
mov
push
push
add
imul
push
and
xor
pop
call
xor
fwait
das
cmp
fidivl
icebp
js
mov
pushl
cld
stos
sub
int3
ficomps
test
lret
or
dec
enter
shll
inc
fcomps
movsl
xor
ficoms
cli
push
out
int3
dec
stos
cmpsb
je
popf
cli
outsl
cmpb
cmc
out
loop
addr16
loope
dec
ss
ljmp
in
loop
ja
or
mov
cmc
movsb
mov
and
decb
pusha
mov
or
rcrl
pop
and
cmp
lods
inc
or
dec
mov
push
sbb
arpl
mov
scas
jb
stos
mov
ja
out
or
and
incl
dec
lods
out
outsl
sub
mov
pop
adc
dec
rcr
sbb
aas
cwtl
lods
popa
jno
mov
xchg
push
mov
imul
inc
dec
imul
push
or
push
pop
mov
sub
cmp
push
mov
iret
pop
jbe
mov
incl
mov
xor
outsl
push
add
lods
hlt
jns
adc
dec
ds
adc
shlb
add
cmp
mov
subl
idivb
sub
lods
jecxz
addb
repnz
pop
jmp
xchg
arpl
cmp
pop
mov
add
sar
inc
sbb
lcall
mov
xchg
xor
pushf
jp
xor
cmp
sub
mov
push
and
inc
add
dec
cmpsl
dec
lcall
xchg
jns
push
jg
lcall
fs
repnz
jle
inc
aam
mov
cwtl
pop
pop
popl
sarl
cli
fildll
insb
lods
shll
xchg
jp
or
inc
jle
clc
imul
jmp
lods
add
inc
or
adc
out
int
lahf
pop
mov
cmp
jle
pusha
xchg
pusha
sub
push
inc
cltd
fs
ljmp
cltd
mov
mov
movsb
pop
scas
push
pop
cld
ljmp
xor
loop
andb
xchg
les
push
test
dec
mov
int3
jae
xchg
lret
pop
inc
mul
dec
pop
arpl
jb
jbe
fisttpll
or
or
loopne
pop
insl
mov
movsb
mov
xor
jae
jmp
aam
adc
jge
xor
pop
hlt
popa
inc
cltd
call
xor
fwait
push
aaa
dec
lea
leave
xor
ds
ud0
mov
icebp
add
repnz
and
outsb
cs
in
leave
xor
fsubr
jecxz
mov
pop
fistpl
out
pop
and
mov
mov
scas
outsl
push
shll
pushf
aad
xchg
xchg
sub
inc
and
or
cmpl
incl
mov
sti
push
push
test
outsl
dec
mov
es
xchg
mov
or
cli
mov
ljmp
daa
xchg
mov
add
stc
xorb
cwtl
add
mov
lods
call
cmpsb
incl
mov
cmp
shll
out
fidivrl
out
inc
dec
fcompl
pop
xchg
mov
enter
std
mov
xor
push
insl
repz
pop
rclb
testb
ljmp
mov
inc
bound
in
mov
dec
and
lcall
jg
cmp
mov
dec
mov
cwtl
or
push
fsubrl
leave
decl
jge
mov
and
jnp
scas
push
es
stc
bound
std
cmp
pop
lods
stos
ffree
dec
xlat
xchg
iret
stc
test
cld
xor
je
xor
xchg
cmp
in
xchg
ds
bound
test
and
inc
adc
or
jg
test
sub
cmp
ljmp
inc
js
stc
dec
xor
lcall
sub
shr
inc
jns
and
ds
cmp
dec
insb
cmp
es
out
push
insb
leave
add
aad
call
sbb
mov
cli
mov
sub
pop
fs
cltd
das
sbb
jg
jno
mov
pop
ret
sub
dec
dec
leave
mov
scas
push
pop
mov
std
cmp
insl
insl
leave
pop
hlt
mov
lret
dec
mov
xchg
out
ljmp
dec
mov
pop
xorb
adc
and
js
jecxz
test
test
test
xchg
cmp
jmp
mov
cwtl
mov
fdivrl
mov
dec
mov
cmpsb
out
clc
push
jb
xchg
nop
aam
out
add
lds
sbb
add
ret
fwait
adc
aam
mov
data16
mov
mov
xor
and
cld
fsubrp
out
sub
lret
imul
jbe
mov
cwtl
stos
pop
mov
decl
pop
cmp
inc
jno
cmp
pop
mov
cmc
cmp
pop
je
popf
jnp
ljmp
pop
fildll
insb
push
in
sub
data16
jge
rorb
lea
add
mov
int3
xchg
rolb
imul
dec
mov
mov
clc
test
mov
push
add
hlt
test
xchg
lret
mov
gs
sbb
bound
adc
mov
jmp
ror
imul
xchg
add
mov
pop
popa
test
mov
cmpsl
xor
pushl
adc
js
repnz
dec
lds
inc
in
inc
movsl
mov
jmp
stos
imul
decl
cmp
cmpsb
adc
imul
jne
jp
mov
movsl
test
jne
nop
decl
inc
inc
push
cmp
mov
popf
adc
sub
xchg
sub
lret
add
clc
fsubrl
push
xchg
dec
sbb
movsb
mov
cld
dec
mov
xor
mov
or
jmp
adc
mov
jmp
jmp
push
loope
mov
xor
jg
push
lds
scas
mov
adc
iret
movsl
jp
cld
sbb
ss
gs
call
cmp
mov
fcompl
jp
pop
sbb
push
fildl
jbe
or
mov
incl
pop
cmp
pusha
scas
mov
lret
outsl
je
call
pusha
add
push
push
inc
loop
popf
lods
lods
jmp
xor
addl
fbld
mov
push
push
jne
cld
lcall
incl
aam
shl
push
mov
cmpb
fsubrl
mov
mov
pop
subb
mov
jp
push
adc
pop
loope
pushf
or
or
cld
fs
mov
and
stos
data16
lret
mov
mov
hlt
mov
mov
inc
les
xchg
add
jo
xor
or
pushl
dec
ds
add
test
sbb
or
lock
inc
clc
push
jp
shr
xor
lods
pop
push
in
out
cmc
ret
stos
stc
push
jnp
push
shll
jmp
fsubp
fiaddl
jno
cmp
pop
mov
out
je
outsl
std
call
decb
inc
mov
rcrl
sub
cmp
mov
adc
lods
daa
movsb
cs
aad
or
je
push
xchg
inc
cld
cmp
jmp
jge
in
sub
and
sbb
mov
test
mov
mov
add
lcall
pop
and
clc
mov
sub
adc
pushl
hlt
adc
popf
cmp
sub
enter
lods
xorl
xor
cld
addr16
add
pusha
call
sbb
sbb
cmp
jbe
mov
popa
push
and
sub
in
sub
xchg
jle
in
sarb
mov
fisttps
mov
and
nop
sub
lock
out
rolb
lcall
loopne
xchg
mov
fisubrs
xor
fadd
cmpsl
ds
rolb
push
and
ljmp
fcoms
push
nop
xchg
les
mov
es
add
mov
push
pop
loopne
hlt
lcall
addr16
push
dec
xchg
jo
mov
mov
int3
sar
pusha
mov
orl
les
jg
mov
mov
jo
mov
dec
xchg
in
adc
je
in
add
lods
test
inc
jecxz
call
shl
clc
data16
in
inc
scas
adc
xchg
jbe
ljmp
mov
or
fimuls
pop
ror
push
out
fcmovbe
cmp
jg
or
pop
sahf
aam
out
out
mov
inc
jbe
fdivrp
xchg
jmp
out
cmpl
ja
insb
jb,pt
pop
aam
scas
pop
cld
out
jae
imul
jmp
scas
lahf
stc
mov
aam
mov
popf
or
inc
inc
mov
mov
int3
neg
xor
cmp
push
pop
stos
inc
inc
ss
mov
mov
pop
addl
and
movsl
cli
roll
push
sub
mov
adc
mov
subb
mov
jae
or
incl
mov
cmpsl
dec
pop
xchg
repnz
xchg
jo
test
inc
push
in
nop
push
jmp
sub
push
je
lock
or
js
rclb
popa
mov
add
ljmp
jae
mov
mov
mov
pop
leave
cli
fnstsw
ljmp
out
xchg
ja
cli
pop
pop
ja
fs
push
popf
pop
sub
out
adc
loopne
xlat
pop
xchg
aad
imul
addb
decl
iret
sahf
fimull
int
mov
mov
xchg
sub
in
cmpsb
fiadds
and
sbb
and
push
es
inc
into
flds
je
or
idivb
js
sbb
inc
out
cmp
jecxz
xchg
inc
sbb
mov
sti
rolb
loopne
adc
push
lea
orb
jmp
lahf
stos
sub
inc
sbb
lret
lcall
sbbl
outsl
sti
fsts
jge
popf
insb
mov
data16
xchg
imul
pushl
push
push
out
das
jns
ljmp
gs
sbbb
add
adc
xchg
lock
lods
push
mov
push
out
mov
idivb
mov
lock
cmp
inc
les
xchg
inc
jmp
cs
and
leave
or
mov
jg
pop
sahf
jg
sbb
and
mov
add
movaps
ja
pop
fbld
xor
leave
xor
or
mov
ljmp
ljmp
enter
push
xorl
sbb
rolb
sbb
lods
and
jg
jnp
sahf
shlb
inc
adc
pop
enter
xchg
insl
xchg
cmp
pushl
fimuls
loope
push
cld
mov
push
pop
and
xchg
mov
lcall
and
xchg
aaa
cmp
pop
es
fisubrl
bound
jecxz
in
cli
decl
cli
inc
adc
in
push
adc
enter
sti
gs
call
in
push
lcall
mov
mov
test
adc
push
add
lcall
dec
lods
sub
fidivrs
xor
xor
xchg
xor
decl
mov
popa
shll
xor
cli
out
mov
stc
adc
lcall
or
mov
xor
sbb
jp
fdivrs
pop
push
loopne
call
aad
add
mov
popa
iret
xor
aad
mov
push
andb
pop
dec
mov
jnp
push
incb
xchg
imul
clc
shrb
cmpsl
stos
fs
icebp
mov
adc
lods
cmpsb
outsb
in
xchg
in
mov
pop
aas
in
ljmp
cmp
sub
mov
test
in
jg
incl
test
cld
xlat
xchg
add
fsubrl
jbe
sarb
mov
jmp
imul
sub
jo
test
mov
int
loop
xchg
cmp
cmp
sub
sbb
push
stos
xor
hlt
mov
add
sarb
ljmp
push
lret
jecxz
cs
adc
mov
mov
jl
mov
mov
jbe
xchg
scas
mov
out
pmovmskb
fadd
in
scas
insb
lahf
sbb
jns
mov
leave
mov
sub
jge
lods
mov
cmp
push
in
fiadds
incl
xchg
xor
aam
imul
cld
ret
shrb
dec
inc
dec
call
cmp
pop
outsb
mov
xor
repz
jns
adc
loope
loope
adc
ljmp
aas
lods
lds
adc
push
xchg
pop
popf
push
lret
lcall
movsb
lea
js
mov
pop
cmp
pop
xchg
push
mov
xor
loopne
add
lcall
xchg
push
fisubrl
into
lret
ret
xchg
inc
or
subl
call
ja
test
or
pop
xor
xlat
rorb
mov
and
push
cmp
test
jmp
xchg
xchg
ljmp
xor
cmpb
add
in
call
decl
out
cld
dec
mov
cmpxchg
imul
lods
mov
lahf
jmp
xor
xchg
std
xor
xchg
add
adc
sub
lret
or
mov
mov
in
in
push
push
aam
cltd
pop
icebp
xchg
subb
pushf
jmp
jp
jmp
inc
push
jp
cli
fcomip
push
rol
sarl
adc
movsb
sbb
cltd
out
push
or
bound
fstps
mov
aaa
cld
outsb
aam
inc
mov
jmp
sahf
mov
cmp
das
icebp
imul
adc
mov
fcmovb
ret
lahf
loope
adcl
or
arpl
cs
mov
mov
movsl
xchg
dec
jno
addr16
mov
or
push
mov
fwait
lcall
inc
fdivrs
iret
gs
sub
mov
inc
test
inc
dec
into
inc
mov
notl
aad
sub
xor
adc
ret
hlt
mov
decl
sbb
out
dec
inc
mov
xchg
pop
lea
sub
and
xchg
add
incl
repnz
jg
pop
in
xor
insl
adc
mov
cs
hlt
out
push
into
rcr
lea
std
ljmp
pop
and
cmc
cmp
out
sub
add
inc
dec
stos
pushl
mov
fdivrl
cmpsb
mov
push
sub
push
xor
mov
decl
cmp
imul
push
sub
inc
mov
and
in
icebp
imul
scas
outsl
inc
or
jmp
add
mov
push
pop
lea
out
fldt
inc
mov
jmp
shlb
clc
lea
jns
add
pop
out
jne
sub
inc
iret
lcall
loop
ror
xor
lcall
ss
or
pop
push
mov
push
xor
push
mov
lods
js
aaa
xlat
inc
idiv
pushl
nop
cmpsl
shll
jo
inc
sbb
push
call
fsubp
mov
pop
imull
out
pop
in
in
sbb
out
mov
adc
add
and
aad
fldcw
pop
outsl
mov
pushf
sbb
out
lock
push
dec
enter
ss
cmpsl
inc
or
decl
sbb
inc
mov
xchg
push
dec
les
shl
imul
call
or
and
jb
mov
jo
shrl
ljmp
or
in
sti
aas
mov
ds
adc
pop
clc
shr
pushl
dec
cmpb
int
cmp
or
cld
arpl
cmc
into
ror
ss
cmp
pop
pop
inc
sub
mov
sahf
mov
and
insb
and
imul
push
pop
stos
gs
lods
shlb
sarl
movsb
in
insl
mov
mov
mov
lods
mov
decl
rcrb
out
pushf
cmp
outsb
xchg
aad
loope
xlat
cmpb
mov
gs
ljmp
lea
jmp
pop
jl
jmp
mov
ljmp
ja
roll
inc
mov
cmpsb
insl
daa
aam
add
imull
mov
call
addl
popf
insb
rclb
mov
lock
rorl
and
aas
jl
lahf
call
xor
xchg
or
mov
jmp
mov
jp
mov
aas
icebp
jg
lcall
push
js
out
mov
daa
sbb
arpl
mov
gs
incl
mov
add
mov
ret
jmp
sub
outsl
dec
scas
sub
movsl
sbb
sar
out
xchg
mov
add
mov
enter
and
cld
ljmp
mov
popl
out
adc
dec
ss
cltd
cmc
test
ja
or
adc
mov
jp
pushf
imul
pop
fcomip
mov
mov
xchg
add
lods
test
or
ljmp
rorb
mov
inc
and
mov
adc
push
movsb
adc
jnp
add
push
jns
xchg
cmp
orb
jmp
ljmp
repnz
loope
jecxz
cli
test
xor
mov
aas
inc
jne
sbb
fisubrs
lret
dec
jno
popa
jns
fbld
outsl
or
mov
fisubs
nop
repz
sbb
adc
mov
inc
jl
push
xorb
fst
add
stos
xchg
shlb
js
js
inc
mov
sub
mov
data16
adc
mov
cld
jge
mov
mov
dec
push
insb
xchg
ret
outsb
bound
hlt
and
jmp
add
insl
xchg
mov
aam
mov
xor
stos
aad
cld
sbb
adc
outsl
cli
jmp
xchg
ja
dec
mov
cmpsl
push
loop
sub
test
addr16
push
incl
xor
xchg
mov
mov
imul
out
test
test
fiaddl
cld
ljmp
imul
push
lcall
sub
idivb
incl
sti
iret
dec
pop
stos
inc
fsubp
cmp
les
sbb
popf
fcos
decl
fidivs
pop
rcl
loope
ljmp
cld
loopne
jmp
mov
sahf
movsb
addb
hlt
sti
pusha
pop
adc
lods
out
loope
cli
mov
movsl
mov
jb
clc
jge
cmc
mov
lea
push
fs
cmp
adc
inc
clc
pop
test
bound
lock
inc
cmp
or
sub
sarb
add
push
mov
lcall
mov
jge
fldenv
mov
sub
mov
mov
add
sbb
inc
dec
fdivr
popa
loope
xchg
and
arpl
fnstenv
xor
push
movsb
cmp
xchg
fidivrs
jno
push
ja
rcll
call
das
jg
out
sbb
adc
cmp
xchg
push
jmp
adc
movl
decl
xchg
insl
inc
dec
sub
in
sub
insl
push
push
daa
fs
fidivs
push
sbb
mov
cmp
mov
jae
xchg
test
xor
pop
pop
decl
pushl
std
pop
mov
das
sub
jbe
and
int3
lock
jmp
stos
add
xor
pop
mov
xchg
xchg
xor
fistpll
adc
jecxz
ret
enter
add
repz
cli
jns
fdivr
lcall
aad
inc
mov
adc
cwtl
adcb
cli
fcmovb
and
xchg
xor
dec
call
sub
test
jb
push
mov
mov
xchg
jp
sahf
jne
sub
test
jmp
dec
movsb
dec
into
xchg
clc
xchg
andl
les
loopne
dec
dec
xlat
dec
movl
outsb
out
xchg
pop
mov
scas
push
and
jmp
js
pushl
pop
mov
icebp
fdivs
cli
fs
pop
ljmp
pop
sbb
or
scas
cvtpi2ps
mov
push
insl
fsubrl
into
mov
xchg
lock
mov
mov
imul
out
lcall
mov
xchg
xchg
adcl
loop
cmp
xor
add
cmpsl
std
loopne
decl
aaa
setle
sub
mov
ds
je
mov
sub
mov
call
pop
jecxz
mov
fisubs
out
mov
adc
dec
pop
and
mov
xor
mov
push
jl
lahf
lods
repnz
or
decl
jecxz
mov
call
xchg
jae
push
outsl
pusha
frstor
add
push
clc
lret
add
push
arpl
insb
in
psubw
lea
jno
ljmp
inc
push
xchg
je
pushl
adc
sbb
lret
mov
loop
jno
jmp
fnstenv
mov
jmp
leave
in
add
test
pusha
fildl
mov
inc
setns
mov
std
sbb
cwtl
push
negl
stc
jp
sbb
mov
testl
cwtl
les
test
test
jmp
enter
add
xchg
xor
sbb
xor
inc
jg
into
xchg
adc
xchg
cld
or
fistpl
inc
xchg
nop
and
hlt
dec
jbe
jmp
lcall
jo
dec
mov
xchg
dec
pop
push
imul
icebp
inc
or
mov
into
adc
xor
mov
in
pop
rorl
lcall
adcb
xchg
sbb
mov
aam
add
push
add
dec
out
sub
mov
xchg
imul
push
lcall
jnp
stos
mov
addb
jle
mov
nop
or
mov
or
fiadds
push
dec
cmc
push
push
sub
call
out
nop
pop
xchg
jmp
sub
jge
lods
call
loopne
inc
mov
sahf
stos
cmovno
sub
cmp
adc
call
xor
arpl
outsb
scas
pop
fdivl
stos
bound
std
sub
sbb
xor
das
sar
ljmp
cmp
sbb
push
insb
push
mov
sub
ljmp
xor
xorl
outsb
push
daa
xor
fmuls
cmpb
pop
jle
jg
decl
mov
mov
or
test
jbe
call
cmp
jmp
in
xchg
cmpsb
xlat
sbb
push
xchg
in
mov
xchg
sbb
lcall
adc
pop
sbb
jp
sub
btc
outsb
sarl
xchg
insb
adc
add
mov
inc
xor
repnz
mov
add
nop
enter
ljmp
mov
cmp
mov
adc
or
fistpll
xlat
outsl
dec
and
add
hlt
dec
popa
sbb
pop
imul
fwait
jmp
cwtl
das
push
xor
gs
jns
arpl
testl
push
dec
xor
jl
or
loope
jl
jns
loopne
pop
adcb
fdivs
mov
adc
mov
das
and
jge
ds
mov
stos
jno
mov
test
push
and
leave
push
aas
sub
mov
and
out
ja
cmp
shl
lret
ret
lods
cs
pushl
mov
dec
fdivrl
xlat
mov
mov
lcall
ds
scas
loope
into
decl
dec
xor
lods
xlat
fsubp
inc
popf
add
mov
xchg
pop
xchg
pop
test
shlb
ljmp
mov
leave
gs
into
xor
fnstsw
xchg
fmull
movsl
xchg
loop
mov
and
loop
bound
push
cld
in
scas
sub
stos
lock
or
fsubl
mov
sbbb
call
sbb
data16
mov
andb
clc
fidivrs
sbb
mov
stos
inc
mov
ja
jae
and
and
lods
je
decl
das
aad
cli
dec
mov
hlt
mov
les
pop
in
arpl
sub
addl
pushl
cmp
fmull
jne
out
lods
test
pop
stos
ss
aaa
add
inc
xor
aaa
push
clc
jge
jg
xor
iret
xchg
xor
mov
movsb
lcall
mov
pop
mov
lcall
ja
sarb
jmp
inc
das
jne
mov
in
lcall
ret
lods
jnp
shll
inc
sahf
xor
int
and
dec
es
inc
daa
inc
outsl
push
cmp
xor
xor
xor
cmp
dec
push
add
jp
lock
xor
cmp
push
mov
sub
cmp
jo
xor
jmp
insl
mov
xchg
jle
jmp
or
ficompl
gs
outsb
pop
push
pushf
lock
test
ljmp
cli
data16
dec
into
adc
movsl
pop
stc
inc
fdivs
lcall
adc
jl
fwait
inc
sbb
flds
adc
outsb
xor
and
imul
push
adc
jmp
adc
push
cld
mov
enter
je
out
push
call
out
fdivl
jns
fiaddl
xor
and
xchg
cwtl
fs
mov
bound
mov
jg
xchg
jnp
cmp
jge
into
adc
sbb
stos
jo
push
mov
inc
xlat
aas
xchg
jecxz
inc
adc
fadd
dec
mov
inc
mov
test
mov
mov
xor
mov
jno
jmp
pop
call
pop
out
push
call
decl
xchg
ljmp
ret
xor
inc
mov
cmc
in
jmp
in
arpl
or
cmp
inc
lcall
dec
aas
dec
mov
decl
sti
and
sub
addb
pop
das
xchg
xchg
push
notb
in
call
adc
nop
mov
or
loop
orb
cmpsl
idivl
cld
inc
xchg
pop
inc
ud0
incl
clc
mov
or
insl
cwtl
lods
cld
lock
inc
pop
fstl
bound
test
fdivrp
jl
xor
xor
stos
or
ja
cmp
stos
int3
pop
cmp
sub
ljmp
xchg
add
lret
push
ss
hlt
jge
and
repnz
jg
fcmovnb
push
dec
dec
iret
mov
xor
mov
xchg
push
mov
fbld
aad
call
fadd
cwtl
fst
jb
pop
lods
pop
jge
dec
xchg
aam
push
add
jg
dec
jne
add
popf
xor
ljmp
pop
bound
mov
std
stc
movsb
rcll
mov
lods
jnp
xor
dec
rcrl
pusha
or
loopne
ljmp
lea
testl
dec
and
test
fwait
mov
mov
inc
rcr
adc
or
sbb
in
jmp
dec
pushf
bound
push
pop
pop
mov
xor
dec
push
mov
imul
jmp
insl
xchg
rcl
ret
push
icebp
test
mov
sub
inc
push
les
fists
jbe
mov
std
emms
jge
pop
add
dec
mov
testb
or
inc
mov
std
out
out
jl
add
ja
insb
ficomps
popf
sbb
jle
mov
pop
loopne
add
lods
pop
sub
mov
orl
loopne
data16
inc
mov
stos
push
mov
xlat
stc
jle
pop
outsb
rolb
inc
push
cmc
mull
call
add
sub
mov
inc
and
shl
or
inc
std
hlt
jne
xchg
icebp
push
das
cmpsb
mov
or
or
jge
lock
pop
cmp
lcall
push
lret
push
mov
ret
bound
push
mov
rclb
das
fbld
ds
jg
std
fdivr
into
rclb
mov
add
inc
adc
pop
incl
mov
test
call
outsb
fsub
mov
sub
mov
mov
clc
xchg
adcl
insl
ror
das
cmp
dec
mov
nop
push
shlb
decl
push
sahf
bnd
sahf
je
inc
add
pusha
cmp
push
lahf
incb
insb
jmp
pushf
xchg
fsubrp
int3
hlt
adc
test
out
or
or
dec
dec
adcb
incl
push
daa
adc
std
into
icebp
mov
lea
mov
jg
push
mov
js
aas
xchg
and
inc
or
nop
jne
cld
movsl
mov
mov
mov
incl
xor
fcmovb
adc
and
sti
hlt
icebp
leave
dec
sub
enter
out
shll
xchg
dec
xor
lods
xchg
jmp
mov
sub
dec
mov
or
dec
push
mov
push
add
dec
inc
mov
sti
das
mov
mov
lock
jns
mov
in
xchg
int
incl
lock
je
inc
je
xlat
ret
xchg
dec
adc
into
std
ljmp
fisubs
fisttps
xor
cltd
repz
fisttpll
jmp
decl
xchg
pop
stc
mov
mov
fwait
aaa
popa
sbb
sub
cmp
lcall
xchg
or
mov
dec
push
pop
mov
push
xchg
repz
add
jno
mov
cld
or
mov
sbb
fwait
pushf
test
out
dec
inc
mov
out
bound
popa
jge
out
clc
adc
and
repz
out
lods
loop
fcompl
pop
sbb
daa
ss
cmp
cmp
aam
add
dec
fimull
inc
pop
or
decl
jbe
daa
inc
shrb
adc
movl
insl
enter
dec
mov
test
pop
sub
add
rolb
dec
fsubl
lahf
mov
cmp
cmp
out
jle
dec
adc
jbe
push
in
in
xlat
add
jecxz
add
decl
popf
jmp
cmp
stc
ss
xchg
push
ja
mov
repz
or
push
cmp
aad
and
loop
mov
sub
jmp
in
add
dec
pop
decl
cmp
fs
mov
jae
or
mov
push
addr16
test
xor
push
and
ljmp
inc
fistl
clc
mov
les
lea
push
inc
jno
mov
mov
call
cld
imul
jo
add
mov
push
aam
ljmp
lods
or
sbb
add
and
and
pushl
lds
inc
ja
stos
pop
xor
xor
inc
fstl
in
sub
mov
shr
jp
push
outsl
mov
mov
dec
xchg
jb
stos
cli
inc
test
xchg
mov
xor
ret
test
dec
xchg
inc
mov
sub
jl
in
or
adc
es
mov
orl
mov
int
clc
loop
je
dec
out
mov
nop
sub
fistl
pusha
rol
jae
leave
xor
sti
test
push
cli
ret
lds
fisubs
lea
jo
add
jl
insl
movl
fldl
mov
cmpsl
xchg
mov
out
movsb
popf
clc
xchg
bound
mov
mov
mov
fcomps
sahf
ret
sub
jmp
pop
push
xor
inc
stc
pop
push
pop
xor
xchg
jecxz
lods
sub
dec
mov
fsubr
mov
jbe
cmp
jnp
or
data16
fwait
lahf
lcall
mov
sbb
jmp
mov
pusha
xor
mov
into
pop
add
jbe
push
movsl
xor
xchg
stos
cmp
into
imul
or
jmp
mov
int3
and
mov
ret
jp
fs
jmp
mov
mov
add
fimuls
stos
and
jmp
cmp
sahf
mov
jnp
sub
fwait
inc
or
rorl
cmp
jo
push
lcall
adc
mov
in
pop
mov
inc
adc
cmp
mov
popf
xchg
jmp
std
ja
mov
cmpsl
stc
and
sub
jg
sar
add
add
lds
and
loopne
cmp
ljmp
stos
leave
mov
ret
clc
mov
imul
enter
mov
ljmp
stc
repnz
lahf
pusha
push
xchg
lret
mov
pop
cmpsl
xor
lahf
in
adc
lahf
push
adc
int3
imul
dec
insb
dec
adc
cs
lret
push
pop
mov
orl
adcl
inc
xor
or
stos
cwtl
cmpsb
mov
incl
add
ds
aad
aas
xor
jl
jg
mov
pushl
jnp
add
out
sbb
fs
push
mov
jnp
nop
or
call
mov
pop
adc
cmp
sub
lcall
aam
out
ja
jmp
pushl
and
std
out
lds
dec
pop
out
mov
movb
jg
decl
cli
test
jae
cmp
pop
xlat
out
pop
or
jg
adc
push
jo
inc
xor
mov
sbb
inc
lret
popf
movsb
sahf
and
repz
jmp
inc
sbb
repnz
xchg
inc
idiv
mov
adc
fucomip
enter
call
cli
pop
pop
mov
sahf
pop
notb
jbe
cmp
pop
cmpsl
inc
test
iret
pop
push
call
lock
xchg
jne
addb
cs
test
pop
xor
decl
bound
mov
mov
subb
pop
js
stos
lods
pop
je
push
int
fcomip
jmp
loop
push
and
nop
dec
and
inc
adc
popf
mov
pop
call
and
and
pop
cmp
xchg
loopne
mov
jmp
scas
pop
cmc
in
add
or
mov
jle
jbe
mov
stc
cmpsb
mull
fldpi
xchg
pop
push
arpl
mov
call
inc
stos
nop
pop
int3
dec
sarb
std
pop
add
add
ss
push
push
jmp
inc
shll
decl
inc
xor
bound
ret
inc
add
aas
repnz
mov
mov
lods
push
out
subb
loopne
push
xor
push
inc
push
or
sbb
ds
in
sar
lcall
pop
jle
addl
subl
cmpsb
adcl
lock
mov
adc
mov
cltd
imul
add
dec
fwait
inc
dec
jb
or
scas
jne
dec
aad
mov
fsubr
or
jns
xor
addr16
xchg
xchg
jp
cltd
fidivs
mov
mov
aam
cmpl
cli
sub
imull
push
or
or
ja
lods
jne
cmp
push
loop
mov
adc
lock
push
pop
lods
sbb
pop
cmp
xor
pop
mov
cmp
mov
mov
xchg
sub
cmp
int3
adc
xor
jo
lret
mov
ljmp
int
mov
jae
inc
mov
imul
pop
sbb
in
pop
scas
inc
xor
sbb
rcll
cmpsl
cli
mov
push
add
aaa
adcl
mov
les
pop
or
into
ror
dec
cmp
push
jge
adc
dec
imul
aad
xchg
iret
aaa
movsb
lods
cltd
cs
aad
out
in
dec
or
jae
xchg
jno
pushl
sub
xchg
pop
jg
adc
shlb
inc
jbe
cld
lcall
add
xorb
icebp
fldcw
and
xchg
mov
push
jbe
cmp
ljmp
negb
cmp
xchg
xchg
sti
imul
ja
scas
cmp
or
pop
arpl
jg
clc
or
xor
mov
ds
mov
pop
push
cli
rolb
pop
loopne
call
mov
int
aam
mov
fisubrs
popa
notl
ljmp
clc
push
jnp
xchg
inc
ds
pop
push
inc
adc
mov
aam
inc
arpl
sahf
add
xor
incl
sbb
hlt
or
ret
test
mov
mov
mov
lcall
mov
or
mov
add
inc
xchg
lret
mov
stc
das
sar
hlt
or
cli
out
in
mov
repnz
test
arpl
or
sub
fstpl
xchg
fistl
sbb
int3
pop
fstps
pop
les
sub
pop
sub
shll
cmp
call
out
mov
cld
decl
xchg
dec
jno
nop
outsb
adc
jnp
outsb
cmpsb
repz
ret
and
push
fcomps
std
pushl
in
out
push
or
jbe
test
scas
jo
loope
cmp
cli
dec
xor
mov
pop
push
dec
mov
add
aas
hlt
push
or
cmpsb
sbb
call
mov
leave
push
cwtl
sbb
lahf
add
mov
mov
sarb
mov
fiaddl
call
sub
dec
inc
inc
sbb
sti
fwait
js
in
fisubl
and
lret
push
sub
mov
mov
call
int3
add
cmp
addb
clc
push
xor
stc
jecxz
mov
and
mov
gs
aam
adc
mov
hlt
push
adc
pop
or
lcall
add
clc
push
mov
scas
repnz
call
imul
jae
lahf
gs
scas
movntps
test
mov
out
xchg
pop
das
clc
insl
xchg
mov
int
out
push
add
xor
sahf
aam
xlat
cwtl
jo
ret
dec
adc
jmp
and
cs
and
inc
imul
sarl
xchg
mov
sti
cs
aas
stos
rcrb
jmp
mov
dec
enter
les
jmp
sbb
sub
and
or
jge
arpl
inc
lods
repnz
dec
es
scas
repz
sbb
cwtl
lret
sbb
adc
pushl
mov
inc
test
push
push
lret
push
mov
lret
push
pop
dec
ljmp
out
or
aaa
fcoml
or
out
mov
mov
hlt
lcall
arpl
sar
sub
mov
mov
dec
lret
stos
ljmp
xor
xchg
cltd
sbb
mov
sub
push
dec
popf
lock
call
pop
add
xor
fsubp
cmp
lods
mov
xor
fsubs
lcall
out
jge
cmpb
dec
add
in
push
add
shll
loop
push
mov
clc
ljmp
lret
call
or
jg
push
inc
daa
loop
test
lods
sti
push
call
shlb
or
adc
bound
insl
push
jle
mov
mov
pushl
sub
adc
pusha
jp
mov
and
pop
jns
insb
mov
jg
ret
push
aad
mov
int
push
cmp
int
psubusw
mov
out
xchg
lcall
dec
js
adc
add
ss
fcmovbe
mov
push
pop
and
jmp
and
decl
ljmp
cwtl
xchg
dec
rcll
gs
je
out
push
fs
xchg
cmc
mov
loopne
ret
decl
lret
push
popa
int
lds
push
int
daa
xchg
jb
or
outsl
out
mov
fcompl
aad
jle
shl
pushf
ret
cmpsb
test
cs
sti
bound
cwtl
aas
decl
mov
sahf
loop
push
xchg
pop
push
sub
pushf
scas
scas
jns
or
jmp
jle
dec
jns
cli
cmpsb
call
xor
dec
xor
dec
iret
mov
or
les
jne
hlt
pushl
std
cmp
jnp
cld
stos
cmpsl
es
shlb
adc
lcall
xchg
mov
lcall
jecxz
hlt
mov
inc
lret
xchg
sbb
inc
inc
mov
dec
dec
mov
incl
or
movsb
dec
adc
xor
mov
or
inc
mov
ljmp
cmp
subb
xor
pop
or
adc
or
in
ds
in
xchg
mov
or
out
mov
decl
mov
ret
out
jns
sub
add
addr16
ljmp
and
out
mov
jno
fsubrs
jb
sbb
jae
ss
sbb
and
andl
cmc
dec
shl
ficomps
in
pop
xchg
pushl
pop
jbe
pop
loopne
adc
aaa
std
jg
rorl
mov
jno
add
shrb
inc
out
iret
leave
lcall
add
out
sti
in
or
xchg
jb,pn
jb
pcmpeqb
mov
sub
movsb
in
pop
sbb
add
insl
pop
cmp
fwait
cli
inc
lds
pushf
hlt
out
outsl
loope
mov
push
test
inc
call
push
jge
adc
sub
inc
js
mov
testl
push
addr16
cmp
fcomip
call
pcmpgtd
mov
pop
stc
xor
dec
stos
fiadds
call
fldl
jb
idivb
jl
cld
push
xchg
cwtl
cmp
popa
add
idiv
call
dec
or
scas
jbe
fldenv
xor
lret
mov
xchg
pushf
ljmp
ljmp
jl
dec
and
mov
lret
insl
mov
jno
sub
insb
cmp
ljmp
jb
dec
inc
ljmp
data16
push
xlat
js
push
pusha
push
test
decl
mov
dec
push
and
dec
mov
mov
sbb
xor
and
dec
jo
dec
fwait
xchg
pop
out
clc
ljmp
insb
dec
addl
repz
ret
insb
out
adc
jmp
jp
ss
popa
out
xchg
insb
stc
push
addr16
test
mov
incl
mov
dec
cwtl
add
add
mov
ja
sub
bound
aaa
pop
adc
loop
jg
decl
pop
mov
mov
pop
and
rcr
or
fs
sub
repnz
ljmp
push
mov
dec
adc
shrl
sbb
test
decl
inc
dec
leave
bound
mov
or
ss
and
loopne
sti
push
sub
mov
add
mov
cs
pop
in
cmp
mov
dec
aam
xchg
jle
mov
mov
xchg
dec
sbb
mov
or
pop
dec
xorb
scas
xchg
jmp
jge
mov
flds
dec
je
pop
ljmp
mov
inc
outsl
pushf
inc
popf
movsl
sub
movsl
into
dec
mov
test
mov
das
pushl
ret
stc
and
cmpsl
shll
push
push
lret
push
mov
sub
test
call
in
dec
xorb
dec
jge
divl
cmp
rcrl
loopne
repnz
lret
test
fdivrs
sar
cmp
ret
mov
sub
bnd
mov
call
aas
dec
jbe
cmp
mov
mov
or
aam
inc
loope
faddl
loopne
cmp
mov
lret
leave
cmpsb
movsl
aas
testb
pop
ja
cmpsb
in
sarl
add
sbb
repz
popf
cmp
xchg
repz
dec
jmp
mov
movsl
imul
pop
push
jle
push
clc
pop
int3
stc
mov
pop
mov
pop
enter
ljmp
or
fs
insb
push
sbb
jb
push
loopne
jno
fcomi
inc
or
pushl
cld
jg
dec
aaa
or
leave
pusha
push
sbb
pop
mov
push
push
xchg
jo
call
jb
mov
ret
loopne
hlt
mov
cmp
push
cmpsb
mov
mov
jns
cwtl
jg
outsl
cli
mov
mov
ret
insb
jp
dec
out
jmp
cmp
mov
das
pop
add
xchg
rorb
pushf
jp
in
or
incl
addr16
mov
jge
pop
cmp
in
xor
jae
aas
mov
jmp
out
sub
into
leave
lods
rcrl
and
or
pushf
imul
out
in
fidivl
mov
ret
loopne
sti
adc
fildl
fnstcw
aad
inc
test
aam
and
es
jnp
clc
jle
mov
call
lcall
loopne
dec
shlb
ljmp
xchg
inc
and
lcall
lea
ja
mov
sbb
mov
and
jae
cld
push
pop
push
pop
in
icebp
fadds
in
fdivs
xchg
adc
data16
ret
in
hlt
jg
cmp
xor
fs
and
or
subb
decl
rcl
xor
pop
pop
mov
and
repnz
push
jg
adc
push
jg
les
push
xlat
pop
arpl
fdivrs
ljmp
int3
push
xchg
xchg
lret
orb
jl
rorb
sub
inc
fmuls
jmp
and
jmp
mov
popf
loop
jns
hlt
inc
sbb
push
mov
std
aas
mov
push
insb
pushf
jmp
ds
stos
or
in
enter
sbb
lret
je
idiv
ljmp
lcall
xchg
pop
jle
fiadds
bnd
hlt
lock
int3
loopne
cmp
jg
pushl
sbbl
stos
and
fdivs
push
enter
scas
cli
mov
sub
andb
push
inc
add
popf
mov
mov
cmp
jmp
xchg
stos
rolb
mov
push
int
mov
imul
xchg
pop
lds
or
incl
jne
iret
popa
push
ds
jle
ror
imulb
xor
inc
mov
or
lcall
pop
stc
push
ss
push
sub
mov
mov
shll
mov
out
call
out
push
jb
fnstenv
lahf
jmp
scas
xchg
jno
test
fdivrl
and
decl
pop
push
jecxz
ret
mov
pop
rolb
jge
nop
mov
jmp
int3
and
push
icebp
cwtl
je
sets
add
adc
test
test
cmp
dec
add
add
imul
or
decl
icebp
call
jp
int3
pop
out
sbbb
mov
fsub
test
inc
in
in
shr
mov
push
cmp
outsl
cli
decl
or
cmp
stos
movsb
inc
pop
in
xchg
fwait
jge
mov
incl
push
mov
and
jo
xchg
test
rorl
mov
repnz
lcall
loop
fiaddl
pop
adc
xchg
xor
mov
cmpsb
or
lods
mov
aam
jmp
fs
cmpsb
sbb
push
out
repz
mov
leave
push
stc
inc
cli
dec
sub
sub
fsub
roll
cltd
lcall
rclb
cmp
mov
sti
cmpsb
push
mov
sarb
fcmovnu
lock
xor
push
fldt
mov
imul
add
dec
dec
fdivr
call
pop
loope
lret
add
mov
or
mov
push
stos
add
das
and
incl
dec
scas
or
loope
movl
jnp
push
xor
arpl
mov
push
mov
test
out
xchg
ljmp
pop
jp
jmp
lods
jle
or
cld
enter
cli
xchg
cltd
push
xor
fsubrs
das
ljmp
ret
outsl
pusha
arpl
dec
in
or
dec
cmp
add
decb
add
jns
mov
incl
jbe
fwait
xchg
sbb
subl
roll
nop
nop
fsubrs
ljmp
mov
xchg
sub
sbb
and
jno
movsl
lods
pop
fdivr
incl
lret
leave
mov
cmp
ss
or
pop
mov
js
call
add
or
push
mov
jo
push
cmp
or
rorb
das
xchg
cmp
sbb
mov
dec
adc
pop
and
mov
add
push
pop
add
jne
icebp
push
add
add
adc
add
in
xor
mov
inc
insl
call
pop
and
adc
test
rcr
push
iret
and
jge
xchg
jae
cli
ljmp
clc
jnp
data16
cld
pop
pop
in
stc
addb
outsb
clc
pop
ret
inc
imul
fcomip
fildll
push
and
push
xchg
sbb
in
jne
pop
fimuls
outsb
outsb
push
test
out
add
hlt
js
mov
mov
int3
loope
aad
lret
idivb
or
rorl
xchg
sub
nop
cmpsb
xor
cld
pusha
loop
pop
movsb
call
sbb
lods
iret
pop
cltd
sarl
sub
fimuls
inc
sbb
call
jg
push
fsubp
scas
andl
add
daa
inc
cltd
shll
fsubrs
mov
fs
mov
xchg
insb
ret
das
int3
movsb
and
lret
stos
mov
movsl
sub
imul
cmp
pushl
decl
lret
fdivrs
cmpsb
cmc
shll
sbb
decl
mov
fcom
cmp
outsl
bound
or
inc
jl
test
fistl
and
aaa
aam
sbb
sarb
lahf
sbb
push
xchg
pop
add
adcl
adc
ret
jmp
inc
fsts
test
xor
movsl
push
mov
rcrl
enter
ljmp
lods
pusha
dec
adc
sahf
loopne
ret
std
jg
sbb
dec
lcall
xchg
push
xor
xchg
mov
ret
or
addb
mov
lods
ljmp
clc
loopne
jle
ss
jns
pop
cmp
mov
fwait
mov
push
fiaddl
aam
pushf
les
cmp
sbb
dec
bound
add
testl
incl
cli
push
push
clc
lret
adc
xchg
or
push
adc
les
xchg
xchg
push
jmp
js
pushf
dec
push
add
jmp
push
outsl
push
mov
movsb
fadds
call
adc
decl
mul
aad
shll
mov
lahf
cltd
data16
fstps
aaa
cmp
std
jmp
js,pt
inc
mov
lret
stos
adc
or
jmp
addr16
mov
in
sub
jp
and
rcrl
out
mov
pop
adc
pusha
dec
cli
jg
push
cmp
lcall
cmp
pop
push
mov
ret
sbb
lock
test
jmp
xchg
pushf
aaa
ss
fnstcw
mov
adc
add
push
lods
push
add
scas
adc
xor
cmpsl
jp
dec
shll
mov
ljmp
mov
outsb
mov
repz
jo
movsl
pop
lret
push
inc
sahf
adc
mov
cld
fs
or
mov
add
pusha
sub
xchg
cwtl
mov
call
sti
stc
xchg
mov
clc
xchg
adc
dec
in
test
xchg
imul
adc
fcomip
scas
movsb
push
xorb
test
icebp
mov
jp
adc
lock
aaa
fistl
or
push
xchg
call
xor
fbld
mov
jae
mov
decl
push
and
sti
std
and
aam
movsb
mov
insl
lret
ss
sub
iret
scas
jmp
pushl
out
sbb
in
xor
dec
ud0
and
or
mov
jl
dec
mov
push
inc
xchg
xor
into
nop
dec
pop
jecxz
scas
cmp
pop
lock
mov
sbb
mov
cld
adcb
and
sbb
push
addl
push
and
orl
divb
mov
push
inc
xchg
mov
mov
jmp
xor
les
jle
rclb
mov
jbe
in
ret
jbe
pop
jo
incl
pop
cli
int3
shll
fcompl
inc
cmp
xchg
mov
into
inc
fstp
jmp
leave
daa
dec
jp
mov
jge
in
add
push
je
in
dec
push
loopne
add
jge
scas
mov
ljmp
pop
xlat
sbbb
mov
pop
mov
ja
test
lret
insb
in
lcall
fsubr
dec
mov
xor
mov
gs
ror
mov
test
lcall
pop
adc
fnstsw
push
sahf
pop
insb
fisubrs
cld
test
sarb
xor
cwtl
fldln2
ljmp
mov
ja
data16
cmp
xchg
or
dec
stc
daa
mov
lea
out
es
daa
sar
gs
mov
pop
dec
inc
xchg
adc
mov
push
incl
repnz
and
int
mov
scas
icebp
sbb
nop
xchg
add
dec
sbb
cmp
cmp
arpl
or
push
repnz
sub
cmp
and
dec
xchg
lret
fucomi
mov
jmp
dec
cmp
mov
adc
jle
lahf
mov
mov
jmp
movsl
mov
popa
cmp
int3
div
out
push
loope
outsl
das
push
mov
movsb
in
dec
push
lcall
xor
ret
ret
and
negb
push
cmp
sbb
loopne
lods
mov
clc
mov
jb
dec
je
notb
rcll
decl
xchg
add
inc
cld
les
and
lret
add
decl
pmaxub
dec
pop
mov
push
xchg
lods
movsb
icebp
mov
fs
ds
push
ds
jnp
pushl
testl
xor
fucomi
xorl
sbb
jbe
dec
insb
pushl
jl
lret
mov
imul
or
aam
sub
jbe
xor
aas
adc
daa
shr
insb
add
rorb
push
repnz
jbe
pop
gs
and
out
ja
sti
call
xchg
dec
notw
pop
mov
push
pop
sub
mov
arpl
repz
mov
lret
jb
jg
xchg
mov
cwtl
and
call
decl
mov
imul
jp
out
ficomps
sbb
fcmovnb
in
inc
rclb
add
jo
push
xor
push
fdivs
fstps
dec
andb
movsl
fadd
jmp
adcl
fcomi
pushl
mov
andl
fwait
ljmp
or
push
cmp
sbb
pop
cmp
and
mov
sub
pop
lock
add
jl
rorb
js
adc
push
xchg
jnp
jo
xchg
nop
test
inc
hlt
mov
movl
xchg
push
mov
cli
lods
ljmp
xor
pop
adc
dec
pop
inc
jb
mov
jns
jl
pop
shr
test
arpl
dec
or
inc
int3
cmpsb
fs
adc
in
push
bound
je
pushl
adc
pop
xchg
mov
rorl
cmp
fcomps
mov
mov
push
cwtl
gs
pop
call
mov
pop
scas
mov
mov
mov
jae
cli
sub
insb
push
push
jg
and
idivb
sbb
pushl
std
lea
and
dec
mov
xor
std
push
sub
pushl
repnz
sub
test
aad
mov
push
cs
sahf
inc
dec
xor
ljmp
roll
mov
pop
test
cmpsl
mov
popa
or
dec
rcll
xorb
mov
jnp
push
movsl
test
int
inc
dec
pushf
xchg
ds
dec
inc
cmp
scas
cmc
fsubl
xchg
jno
jmp
fwait
les
cmp
xchg
lds
lcall
inc
popf
jno
push
mov
ss
ljmp
inc
xor
into
push
mov
aad
decl
mov
leave
push
fidivs
lods
mov
pop
cmp
sarl
adc
xchg
jbe
inc
jb
pushl
sbb
mov
push
push
jns
push
fbstp
dec
in
lret
push
mov
jnp
sub
es
adc
xchg
sahf
or
jg
mov
sti
vsqrtpd
push
push
aam
bound
jnp
mov
mov
test
cld
test
add
xlat
shlb
push
mov
call
xchg
mov
pop
mov
dec
pop
mov
stos
aaa
icebp
push
jle
or
jne
call
mov
mov
xchg
mov
pop
add
xor
xor
repz
mov
push
jmp
mov
mov
dec
cltd
mov
out
cli
mov
ja
add
sub
mov
addl
push
push
and
dec
cmpsl
dec
dec
lea
push
or
push
sub
test
inc
lret
jno
ljmp
mov
inc
pop
shlb
ffreep
mov
mov
push
jmp
fdivrs
and
loopne
xlat
lret
inc
sarb
rol
or
push
adc
pop
jo
xchg
xchg
lock
and
insb
xor
push
jge
sbb
fcmovb
lcall
dec
mov
cwtl
shrl
cmp
mov
mov
cmc
mov
outsb
push
test
enter
sub
push
jmp
fildll
sub
popf
stos
in
lods
jbe
push
mov
cmpsb
cli
or
xchg
push
cmp
sbb
dec
rcr
and
mov
lret
lcall
ret
ss
ja
jnp
lods
inc
and
adc
fiadds
add
inc
xor
test
cmp
or
xor
bnd
test
cwtl
adcb
insb
hlt
jnp
jg
jmp
dec
orl
daa
cmp
hlt
ror
test
loop
sbb
aas
aam
lcall
scas
add
out
jecxz
mov
aad
rorb
loop
jecxz
imul
cmp
mov
mov
jmp
and
pop
and
inc
mov
call
ja
pop
jecxz
push
mov
data16
cli
popa
inc
lea
jp
sbb
jge
loope
outsl
cli
test
rol
pop
arpl
mov
mov
mov
loope
mov
notl
inc
xor
shr
int3
insl
sbb
lret
or
cmpsl
lods
cmp
and
pushl
or
addb
cmp
mov
xlat
icebp
jnp
gs
adc
lret
dec
clc
jno
cmp
dec
inc
inc
jne
pop
xchg
loopne
sbb
fisubs
jl
test
pop
shr
sub
insb
sbb
bound
jb
pop
lods
fmul
testl
rorl
mov
cwtl
xor
in
xor
inc
add
mov
jl
pusha
inc
call
das
or
fdivr
sarl
pop
test
push
call
add
repz
decl
adc
dec
imul
jae
push
cmpsl
push
or
pop
in
jne
and
pop
loope
mov
or
add
frstor
pop
mov
jmp
inc
aaa
cld
fucomip
push
cmp
adcb
enter
sbb
xor
inc
mov
ljmp
fldcw
cmp
pop
mov
xchg
imul
xor
call
fs
fucomip
call
cmp
out
arpl
jne
roll
xchg
test
jmp
fs
mov
insb
mov
jmp
call
bound
ss
outsb
mov
ljmp
jnp
lock
inc
mov
arpl
fldenv
cmp
faddl
ficoml
cmp
mov
je
out
hlt
push
dec
or
mov
jecxz
ljmp
mov
and
mov
sub
loope
test
inc
xor
call
inc
leave
cmc
push
sub
lret
fstpt
dec
sub
push
push
or
cmc
sub
ljmp
sbb
aam
xor
dec
aad
push
mov
imul
dec
popf
mov
or
dec
ja
xor
lods
iret
mov
in
lret
stc
fcoml
orb
icebp
xor
inc
test
outsl
loopne
push
daa
mov
dec
loope
jl
push
call
mov
incb
and
cltd
dec
loop
jnp
cmp
adc
incl
pop
rolb
lds
pop
into
lods
out
aad
xor
arpl
push
out
mov
sbb
ja
and
daa
ja
jns
lods
loop
mov
pushl
jmp
cltd
pop
adc
and
sbb
mov
lock
sbb
xchg
jo
jns
cmp
mov
rcrb
jp
arpl
pop
pop
icebp
dec
scas
adc
pop
dec
sbb
ss
mov
pop
mov
les
inc
lret
mov
ficoms
incl
sarb
decl
mov
pop
push
pop
mov
jmp
bound
add
in
outsb
sbb
and
pop
hlt
decl
shl
cmp
pop
into
icebp
jmp
cs
jecxz
jo
mov
mov
test
push
mov
sub
sbb
dec
sub
adc
cmp
pop
aaa
or
sub
ja
mov
sbb
insb
dec
popf
jg
mov
and
pop
dec
mov
jno
or
jbe
pop
cmp
mov
sbb
inc
inc
mov
sub
push
and
cltd
scas
pop
adc
xor
icebp
and
loope
stos
test
inc
cmp
incl
cmp
mov
pop
xchg
inc
mov
push
ret
cmp
add
jmp
movsl
out
push
cmc
outsb
xor
sti
mov
adcb
jecxz
stos
negl
adc
adc
ljmp
enter
mov
gs
pushf
movb
xchg
xchg
jmp
icebp
loope
xchg
sbb
xchg
and
iret
hlt
inc
pop
mov
ljmp
mov
mov
jnp
sub
sub
loopne
outsl
jno
pop
imul
rorb
es
test
outsl
aas
div
daa
rcl
daa
cmpsb
adc
cmp
fwait
decl
xor
ret
jne
pop
push
dec
gs
pop
push
pop
imul
push
fpatan
out
clc
ljmp
pop
fwait
ja
xchg
xor
push
mov
ljmp
loopne
aad
fldpi
mov
rcll
xor
negb
xchg
imul
ds
dec
cmp
mov
and
icebp
js
xchg
fistpl
nop
xchg
pop
in
movsb
add
mov
mov
lea
in
sub
shrb
notb
jmp
jns
dec
mov
jmp
ljmp
fbld
push
xchg
xor
xor
incl
mov
mov
push
dec
dec
lods
lods
mov
popf
cli
dec
adc
pushl
cmp
inc
mov
test
xchg
js
and
imul
sbb
mov
call
mov
fidivrl
pop
jnp
xchg
js
xchg
push
xchg
aas
mov
arpl
in
in
fbld
jnp
dec
jmp
aad
int3
mov
push
loop
or
cmpsb
lods
pop
pop
lea
lcall
mov
dec
jmp
push
inc
jmp
cmp
xchg
loop
bound
call
dec
movsl
cmp
sbb
or
shlb
in
mov
std
es
popf
stos
loop
cmc
out
int
aaa
adc
addr16
lret
or
call
aad
push
stc
cmc
das
push
lcall
pop
xor
cmp
push
jbe
inc
and
cs
ds
xchg
fsubrs
mov
pop
or
jo
xlat
gs
lods
jmp
pop
cmp
fwait
addl
call
repnz
aad
adc
out
inc
sbb
js
into
xor
in
push
insl
sar
lcall
sub
shr
out
jmp
out
xor
inc
xor
lds
jg
rcrl
daa
push
sbb
push
sbb
mov
pushl
and
pushf
mov
mul
test
inc
loop
les
ljmp
js
mov
in
nop
sub
cmpsl
lds
arpl
xchg
filds
pushl
test
cmpb
adc
subb
je
mov
push
clc
jg
fldt
loop
mov
dec
aam
inc
ja
pop
cmp
jp
cmpl
aaa
jmp
lods
scas
clc
std
call
mov
inc
aad
mov
jecxz
and
dec
lcall
cld
xchg
mov
fs
sub
inc
cmpsl
xor
pop
mov
jbe
into
sub
into
stc
xor
mov
lds
pop
jg
lcall
and
pop
leave
inc
adc
sbb
add
mov
es
icebp
negl
add
adc
mov
jbe
push
ljmp
insl
inc
fwait
pop
scas
sbb
inc
cltd
jecxz
jmp
xchg
mov
jbe
xor
mov
popa
xlat
pop
add
mov
adc
mov
in
incl
fwait
xchg
jns
push
jge
pop
cmpb
sub
mov
adc
inc
jp
call
scas
arpl
roll
lds
or
pop
jp
adc
std
pop
mov
pop
lock
mov
adc
and
sti
cld
test
push
sub
aam
repnz
roll
lock
mov
sbb
lods
loope
mov
sar
stos
push
inc
mov
fsubr
test
pop
cmc
push
je
ficoml
push
mov
sarl
xor
jmp
mov
pop
xor
push
push
mov
bound
push
std
mov
sbb
outsl
in
jmp
xchg
scas
jl
sub
dec
ret
gs
xchg
dec
ljmp
xchg
packuswb
push
or
and
mov
push
push
pusha
out
ja
mov
pushl
dec
add
rclb
sbb
icebp
sub
jle
repnz
ljmp
and
out
ljmp
mov
mov
xlat
sbb
sub
jns
fsubrs
decl
addr16
xchg
mov
pop
call
jmp
in
dec
xchg
xchg
push
mov
mov
sub
ljmp
mov
ret
fwait
add
jno
hlt
xchg
fstps
inc
xchg
cmp
and
ret
decl
mov
jmp
lahf
mov
pop
fisubrs
js
nop
in
icebp
fcomip
imul
push
mov
jle
mov
ds
ljmp
cmp
adc
nop
or
loop
jb
aaa
test
sbb
mull
pop
cwtl
sti
push
xor
imul
addr16
sbb
adc
dec
enter
sbbb
or
pop
mov
cld
fcomip
inc
fnstenv
xor
rcrl
mov
adc
ljmp
adc
push
fldenv
pusha
cmp
xchg
xor
pop
ljmp
add
inc
adc
shrb
js
mov
lret
sbb
mov
sub
push
xor
in
outsb
hlt
mov
and
push
int
mov
mov
loopne
jmp
cli
icebp
mov
xlat
jo
testb
int3
jae
jl
pushf
push
ljmp
pop
outsb
lcall
fstpl
adc
cmpsb
mov
mov
outsl
cli
mov
stos
pop
clc
cmp
ror
pop
jp
pop
dec
inc
outsb
aam
jmp
add
vcvtss2sd
adc
out
mov
scas
mov
cltd
cmp
incl
les
push
loope
cmp
outsb
sbb
and
sub
in
mul
cmp
add
add
aas
jmp
jbe
dec
push
push
mov
push
movsl
mov
and
testb
call
inc
cmc
cwtl
cs
xchg
arpl
push
or
pusha
cmpsl
imul
cmp
call
mov
cmp
mov
cs
in
lret
xchg
fistpl
or
pop
cld
push
mov
int3
orb
icebp
aas
cmp
xor
jne
xchg
jecxz
cli
lods
popa
incl
pop
xchg
test
cld
daa
xchg
push
cld
jb
outsb
outsl
popa
and
add
xchg
ds
jmp
clc
popa
mov
aas
sbb
imul
mov
stos
sbb
or
ljmp
dec
mov
aas
arpl
or
fdivrp
mov
and
cmc
and
pushl
mov
lds
imul
in
push
loope
cmp
movsb
btc
rcr
push
es
idiv
faddl
mov
xchg
dec
cmp
lret
icebp
add
bound
mov
cmp
adc
dec
cmp
divb
scas
out
push
loopne
inc
jmp
add
test
roll
fistpll
jo
test
pusha
std
repz
mov
push
push
imul
xchg
lahf
repz
dec
nop
ljmp
xchg
pusha
cmp
cmc
clc
xchg
out
inc
mov
icebp
ss
popf
sbb
mov
ljmp
nop
sbb
mov
popa
mov
stos
push
movsb
loopne
jne
sbb
cli
and
lock
incl
xchg
andb
in
sub
jle
lock
adc
pushl
adc
sub
leave
rcr
inc
ja
inc
dec
mov
arpl
cld
jno
xor
inc
jmp
add
loopne
pop
dec
pop
out
daa
enter
mov
inc
dec
adc
inc
adc
cwtl
aam
movl
cli
daa
jge
in
push
xchg
rcll
jl
mov
out
test
mov
mov
mov
cmp
dec
test
nop
mov
fnsave
insb
loope
cmp
int
lcall
cmpsl
insl
dec
jns
pop
rcrb
dec
scas
sar
stc
cmp
jbe
cmc
xchg
bound
ret
cmc
call
fsts
mov
outsl
xchg
insl
pop
mov
xor
jg
in
test
pop
fldcw
and
lods
in
fldenv
mov
and
sub
dec
negb
incl
cld
in
lret
push
inc
bound
xchg
jae
mov
xchg
frstor
loopne
adc
push
pushl
loop
shrl
and
fsubrl
mov
popf
add
push
cmp
imul
jmp
repz
in
insb
or
push
scas
lcall
imul
sub
aam
cltd
cld
adc
push
xor
lahf
jle
ljmp
cltd
lock
jmp
push
pop
adc
dec
add
out
mov
xchg
test
inc
test
mov
fs
flds
dec
and
cmp
ljmp
jae
imul
cs
dec
data16
lcall
cmp
shrl
push
pop
es
enter
enter
mov
in
adc
lcall
dec
cld
push
bound
aad
sub
push
push
sbb
out
xchg
jno
arpl
add
push
push
push
or
adc
push
movsb
test
fcomip
or
fidivl
push
fists
xor
loope
push
xchg
fdivl
incl
call
loope
xor
bound
add
loopne
movsb
or
rcl
or
lcall
or
js
rcrl
mov
sar
pop
sub
or
mov
xchg
lcall
ss
fcmovbe
mov
push
rcrl
mov
nop
sub
outsl
clc
incl
adc
sub
xchg
cmpl
adc
and
xchg
nop
hlt
adcb
incl
jnp
jp
mov
cmpsb
jle
lods
fsubl
fistps
pushl
bound
mov
or
call
rcl
ret
ss
lcall
insl
add
sub
mov
std
cwtl
cmpsl
popa
scas
cmp
sti
cmp
pushl
adc
testb
and
or
cmp
mov
jecxz
mov
and
adc
cmp
mov
mov
jg
bnd
sbb
jae
dec
ficomps
ljmp
or
lcall
push
xchg
push
xor
into
sahf
filds
jo
incl
lods
cmp
dec
jnp
mov
addr16
cmp
in
lock
hlt
mov
mov
add
and
cmp
cmp
mov
inc
push
jae
fldl
jle
and
fdivs
test
testb
push
imul
xchg
push
ja
into
inc
addr16
adc
int
add
jl
pop
arpl
mov
movsl
shr
pop
sub
jge
cwtl
mov
insb
sbb
nop
mov
mov
sbb
and
xor
sarl
push
into
sub
iret
out
aad
scas
fsts
es
jne
mov
dec
je
adc
pop
mov
dec
pop
or
inc
push
roll
cmpsb
ljmp
pop
pop
xchg
adc
or
cmp
pavgw
or
fnstcw
stos
in
pushl
aad
lret
xor
popl
hlt
scas
sbb
adcb
cmp
add
cmp
cmp
mov
jbe
sub
jmp
lods
fs
incb
fdivrs
jmp
xchg
mov
jg
sub
fistps
dec
push
fiadds
idiv
jmp
mov
sbb
push
pop
rol
and
add
shlb
jl
sbb
push
cwtl
aas
scas
maskmovq
negl
inc
push
add
pop
mov
incl
clc
loope
push
and
out
fs
sub
sub
mov
lea
aas
aaa
xchg
xor
xchg
cli
sti
outsl
jb
lock
aam
dec
or
and
jno
jp
cmp
lahf
out
test
addr16
inc
sub
popf
sbb
mov
insb
lods
mulb
out
cli
decl
or
push
into
imul
out
dec
xor
cli
decl
or
loop
push
pusha
ret
roll
mov
mov
in
pop
sarb
mov
pushl
jne
mov
xchg
dec
lret
sub
divb
sbb
lock
in
inc
inc
lock
repnz
out
cmpxchg
pop
mov
jg
stos
or
outsb
mov
scas
pop
rolb
stc
les
rorb
mov
and
jmp
xchg
lods
rol
adc
mov
mov
sbb
scas
xchg
adc
cltd
les
lcall
add
jge
addw
shlb
cwtl
fistl
mov
and
icebp
pop
mov
jae
and
mov
sarb
pop
mov
pushf
cmpsl
or
adc
aam
hlt
incl
dec
xchg
stos
cmp
jb
and
mov
jg
imul
mov
xor
lods
push
inc
mov
mov
and
jmp
repz
int3
sbb
xor
insl
addb
xlat
mov
iret
ja
call
cmp
decl
pop
cmp
fwait
mov
scas
mov
sub
cmc
les
incl
mov
sbb
lcall
ret
lcall
sar
das
jmp
fs
mov
mull
.byte
jae
.byte
lret
call
in
movl
adc
mov
push
stc
push
mov
les
lods
in
pop
fmul
push
pop
ret
int3
add
in
cld
add
dec
inc
mov
mov
inc
cld
push
mov
pop
cld
movl
inc
jmp
cmpsb
push
into
lea
push
jg
out
int3
mov
push
mov
or
hlt
push
xor
dec
mov
addl
pop
push
sub
addr16
jb
in
sub
iret
in
dec
repz
test
ret
and
in
lcall
faddl
fdivs
mov
fadds
nop
out
inc
sub
mov
fdivrp
mov
xor
mov
sbb
loopne
pop
push
movsb
int3
mov
loopne
enter
and
popa
les
xchg
add
rolb
sbb
mov
mov
mov
mov
das
mov
outsl
push
xchg
mov
lret
xorl
in
mov
pop
push
movsb
stc
lods
add
fildll
jb
int
jbe
xchg
movsb
lret
jb
xchg
add
xchg
mov
lcall
jle
mov
pushf
sar
in
mov
jl
jle
cwtl
nop
out
pop
outsl
xchg
movsb
mov
cmp
test
pushf
insl
nop
push
movsb
stc
lret
jno
pop
push
add
mov
and
pop
mov
jae
add
test
push
repz
sbb
add
mov
mov
dec
mov
fwait
inc
js
cmpl
lea
mov
out
jg
pop
andb
lds
jo
and
aas
xchg
xchg
insb
or
push
mov
gs
lods
stos
call
jae
imul
pop
fs
mov
pusha
lcall
jecxz
xchg
pop
out
gs
outsb
pop
push
icebp
stos
push
stc
jae
xchg
pop
stos
push
adc
push
pop
xchg
mov
imul
iret
gs
lcall
sbb
dec
cmpsb
inc
pop
xchg
inc
cmpsl
inc
xchg
and
add
or
test
gs
lcall
test
cmp
push
test
stc
jae
mov
mov
imul
pop
xor
aas
xchg
mov
dec
sub
iret
gs
int3
sbb
in
mov
and
fs
and
stc
jae
scas
and
pop
xchg
add
aas
xchg
and
out
gs
mov
mov
adc
adc
mov
movsb
adc
sarl
xchg
and
mov
iret
gs
lcall
sbb
add
mov
mov
adc
inc
or
inc
or
or
and
mov
stos
ret
pop
sub
adc
add
int
out
mov
je
mov
add
mov
adc
hlt
push
mov
xchg
pop
lods
add
mov
add
mov
filds
clc
cmp
jae
dec
clc
add
nop
clc
jmp
fidivrs
or
xchg
jmp
jmp
fcmovnu
or
push
jmp
or
push
pop
hlt
repz
ljmp
daa
pop
push
pop
push
lods
sahf
jo
push
jecxz
mov
inc
pop
sub
and
subl
pop
cmpl
or
sub
sub
test
addb
pop
negb
cmp
or
push
inc
push
js
push
or
pop
sbb
jo
or
cmp
add
or
mov
enter
fwait
mov
or
or
or
adc
cmp
or
sbb
xchg
jns
xor
cmp
and
mov
loop
out
inc
cmp
or
rcrb
repz
jg
push
ljmp
mov
pop
jmp
push
mov
sub
cmp
or
roll
pop
pop
dec
cmpsl
fildll
cmp
dec
ds
popf
subl
dec
and
xor
dec
jnp
add
xor
push
sub
adc
mov
nop
sahf
adc
or
ret
or
hlt
adc
mov
push
push
loop
cld
add
dec
adc
jecxz
or
adc
aam
cs
mov
cmpsb
or
lock
cmp
add
mov
or
shl
jne
cmp
jae
pop
lock
add
insl
clc
in
jmp
rcr
imul
into
pop
fnstsw
add
pop
sub
mov
imul
push
mov
test
xchg
jmp
fdivr
js
and
scas
clc
mov
rol
je
xor
cmpsb
jne
push
adc
mov
push
lea
sub
sub
fcomps
ret
sbb
push
imul
out
fsts
out
or
stos
xbegin
push
or
cmp
jge
add
xor
jmp
mov
or
dec
adc
sbb
push
xchg
push
fistpll
pop
mov
lods
mov
push
test
mul
bound
xchg
cld
xor
movsb
cmp
cmp
pushf
mov
xchg
dec
sahf
sub
mov
adc
push
daa
orl
movsl
fnsave
test
add
mov
pusha
mov
adc
or
clc
or
push
js
imulb
scas
cmp
loope
test
xlat
aad
jae
or
rcl
setnp
or
inc
in
pop
mov
xor
and
insb
adc
lea
cltd
pop
pop
mov
cmp
cwtl
inc
cltd
cmp
mov
mov
pop
das
mov
jecxz
fwait
push
mov
dec
adc
inc
imul
loop
js
mov
jle
xchg
jl
cmp
shlb
test
std
push
push
mov
xchg
and
popa
mov
push
repnz
std
subb
lock
xor
addr16
sbbb
sub
test
mov
xchg
push
mov
jg
push
lret
mov
lods
mov
mov
add
inc
in
push
cmp
cmp
test
mov
into
cmp
test
hlt
jmp
jmp
jl
neg
dec
lahf
aam
push
sbb
add
jmp
in
mov
into
mov
ret
dec
aam
mov
dec
mov
clc
cli
cmp
into
jmp
cmp
mov
aam
rolb
sahf
fwait
pop
rcl
jnp
movsb
fistpl
and
adc
dec
sub
push
inc
mov
lea
pop
push
movsb
lea
push
rcrb
or
fisttpll
js
jp
rorb
or
inc
add
lcall
push
cld
or
and
cmp
pushf
dec
sub
test
shll
cmp
mov
call
adc
cmp
rcr
mov
lods
adc
ficoms
xchg
jle
xor
nop
inc
mov
xchg
mov
ss
sbbb
or
jmp
mov
adc
andb
or
adc
push
adc
mov
ret
sub
adc
jo
in
rorl
push
andl
pop
out
aad
rol
addr16
daa
adc
stos
aad
dec
mov
mov
jnp
imul
and
inc
adc
je
xor
hlt
mov
add
ret
call
fwait
xchg
fldcw
sub
push
outsl
mov
adc
iret
add
or
pop
repz
rcr
jg
movzwl
cmp
scas
dec
cmp
cmpsb
cmpl
test
mov
sub
shll
movzbl
sahf
lods
shlb
adc
aad
scas
std
hlt
add
sti
jmp
sbb
add
adc
push
cld
push
hlt
jmp
jmp
mov
xchg
inc
mov
scas
addl
xor
jne
xor
stos
call
add
jg
or
mov
pop
mov
loopne
adc
pop
lods
jns
push
out
bound
movsb
inc
push
out
fisttpl
jecxz
shlb
push
pop
sbb
push
sbb
cmp
jb
xlat
push
adc
xor
xor
loope
push
inc
sub
sbb
pop
adc
adc
push
mov
and
mov
call
inc
mov
push
mov
xor
bound
mov
push
mov
cltd
imul
dec
add
mov
push
cld
les
mov
adc
push
adc
push
pop
clc
js
rolb
lahf
call
sbb
xchg
fnstsw
jns
push
inc
push
mov
dec
or
adc
push
data16
fldl
dec
adc
adc
pop
fmull
mov
cwtl
mov
sbb
lea
push
pop
lods
pop
outsb
dec
xor
sbb
rolb
shl
inc
out
or
jae
sub
dec
add
je
dec
push
addl
das
rdtsc
mov
jne
je
push
in
cmp
pushf
lods
cmp
lcall
mov
lods
push
cld
ror
popa
inc
aad
add
pop
int
or
add
or
jl
bound
into
dec
jnp
mov
fcoml
or
pop
or
cmp
arpl
insb
jne
in
ret
lahf
xchg
push
in
outsl
insl
sti
cmp
setl
test
iret
sbb
jg
or
aas
mov
imul
sbb
adc
sarb
arpl
mov
or
dec
hlt
lods
sbb
push
iret
dec
push
push
repz
sbb
mov
or
sub
mov
scas
enter
push
cld
dec
divl
gs
jmp
sub
inc
fiadds
inc
xor
mov
dec
inc
mov
pop
sub
das
mov
popa
enter
cmp
sbb
aas
lret
pop
in
adc
adc
stos
mov
and
dec
mov
jbe
sbb
adc
pop
add
lahf
lcall
push
adc
add
sbb
insl
fcomps
mov
push
mov
in
ret
jl
in
shrb
mov
mov
adc
jb
popa
lahf
sub
sub
imul
add
jl
movsb
adc
xor
ficompl
int3
push
mov
mov
cmp
outsb
and
or
xor
je
add
nop
inc
and
or
insb
pop
cmp
sbb
adc
sbbl
faddp
out
and
stos
sti
lods
inc
push
or
dec
in
sbb
insb
adc
js
out
in
add
ficomps
xchg
add
add
push
jne
jne
cmpsl
sub
jo
lods
mov
ljmp
add
push
or
outsl
mov
adcl
and
loopne
mov
jo
push
cmp
and
sbb
mov
ljmp
sti
xchg
and
lock
arpl
and
es
cmp
cmp
add
pop
inc
and
lea
pop
jb
mov
fcoml
je
or
daa
mov
jecxz
sbb
mov
insl
pop
and
pop
mov
test
dec
mov
adc
sbb
dec
pop
jne
adc
xor
mov
mov
push
push
inc
fcoml
xor
and
cs
push
jne
mov
jns
add
jmp
jmp
mov
inc
cmpsb
jae
jmp
dec
sti
in
dec
addl
pushf
rolb
add
cmp
sbb
sbb
xchg
xor
sbb
adc
push
sarb
mov
sub
das
mov
sub
pushl
mov
xor
js
push
test
ljmp
add
add
enter
mov
movsl
popf
inc
bound
cmp
jne
adc
or
lret
mov
mov
sub
mov
push
test
call
inc
and
add
xor
aas
cmp
or
push
cmp
pop
lock
shrb
popf
movsb
hlt
xor
sub
adcl
ds
push
ds
hlt
inc
dec
adc
xor
fs
mov
sub
enter
leave
outsb
mov
jmp
scas
or
hlt
xor
popa
mov
mov
or
cmp
jmp
sub
lret
in
rcrl
fcmove
xor
jmp
lea
inc
mov
insl
or
xchg
push
call
mov
arpl
lods
and
testl
in
addl
adc
lods
xchg
ja
in
add
cli
fcomp
push
or
jnp
jp
rcr
push
and
jg
dec
nop
push
movsl
mov
xchg
pop
in
enter
or
cmp
cmp
push
shl
call
sbb
adc
rorb
push
push
negb
shrb
fdivl
iret
pop
in
mov
jecxz
push
js
or
outsl
es
mov
das
pushf
xor
push
addl
sub
inc
or
sahf
adc
xchg
add
adc
add
pop
push
push
cwtl
cmp
cltd
popa
and
sti
scas
inc
or
adc
push
add
sub
andb
sbb
xchg
jbe
push
sbb
cmp
jmp
mov
pop
sub
jae
scas
sti
outsb
mov
insl
sub
mov
push
dec
ret
fldt
sub
inc
lock
adc
add
jb
add
int
adc
cs
leave
out
lods
outsl
jae
in
test
sahf
sbb
push
dec
add
in
rcll
sub
inc
test
adcl
popf
movl
dec
add
out
pop
shrl
jmp
js
push
cwtl
adc
mov
mov
jae
in
or
and
pop
sub
xor
sub
mov
dec
add
or
xchg
mov
adc
cmp
jg
lahf
nop
nop
push
mov
imul
lock
mov
daa
mov
sbb
stos
sahf
pop
jmp
outsb
rcrl
scas
mov
scas
fimuls
cmp
ja
out
insl
scas
cmp
push
cmp
movsb
sbb
inc
int3
push
rorl
dec
inc
pop
and
xor
cmp
mov
sbb
sbb
push
and
xchg
cmp
cmp
mov
sbb
mov
inc
pop
sub
cli
or
jg
les
sbb
add
xor
add
sbb
push
js
dec
in
mov
push
mov
mov
jl
stos
pop
xor
inc
pop
cmp
hlt
pop
mov
inc
mov
sub
xor
int
jg
cmp
adc
or
cmp
push
shll
dec
and
and
pop
cmpl
jbe
push
es
mov
leave
hlt
lcall
add
add
mov
clc
pminsw
push
mov
inc
add
sbb
lods
ret
inc
mov
lods
push
call
jno
test
jmp
dec
and
loopne
or
mov
adc
insl
add
mov
or
sbb
mov
or
pusha
xor
jb
xor
mov
cmp
xor
xlat
hlt
mov
push
jb
push
mov
cmp
jp
pop
outsl
sbb
lds
push
xor
fucomip
add
bound
or
ja
pop
sbb
sbbl
jbe
rcrb
fcoms
pop
pop
adc
jne
stos
paddusw
add
js
inc
sbb
xor
insl
add
push
pop
inc
adcb
push
movl
pop
mov
aas
ret
lahf
jmp
xchg
loopne
je
mov
mov
inc
sub
xchg
clc
pusha
sub
xlat
or
xor
js
daa
test
sbb
pop
or
dec
and
dec
pop
mov
mov
out
fs
sbb
outsb
orb
xlat
aam
xor
lahf
dec
shrb
lock
xchg
mov
add
pop
adc
dec
xor
xchg
pop
xor
ret
out
or
int3
add
int3
fistl
xor
fildll
jg
sub
stos
in
hlt
inc
inc
mov
adc
xor
rcl
clc
fisttpl
and
pop
sbb
and
jg
add
pusha
and
mov
orb
pop
xor
xchg
or
inc
push
xor
aas
pop
dec
xor
xchg
lods
jg
cmpsb
mov
sbb
hlt
test
inc
jb
dec
das
popf
hlt
jb
cs
cmp
jecxz
jnp
jo
mov
adc
je
cmp
scas
movsb
adc
aaa
mov
addr16
faddl
fsts
sbb
cmp
pop
jg
inc
jmp
lea
push
adc
pushf
pop
pop
loop
cmpsb
fadds
lock
adc
xor
or
mov
and
fistps
pusha
sub
lods
dec
mov
or
sbb
dec
cmp
adc
enter
cmc
pusha
hlt
xor
dec
dec
dec
sbb
adc
mov
sbb
fadds
xchg
fdivp
push
clc
mov
sbb
mov
imul
cmp
push
rcll
scas
cmc
lock
inc
sahf
inc
in
add
inc
cld
in
clc
aam
lds
push
inc
adc
rolb
cmpsb
jno
mov
pop
cmp
shll
fiadds
sysexit
gs
imul
call
dec
in
jl
add
aam
jno
in
mov
hlt
add
hlt
fstl
popa
and
hlt
pop
push
or
jo
shr
hlt
lock
ds
in
and
pop
sbbl
bound
pop
ret
mov
ja
inc
jmp
hlt
loope
and
push
xor
cmp
jge,pn
sbb
cmp
and
push
mov
sub
mov
cmp
sbb
shrl
mov
add
sar
add
or
ret
ret
rep
mov
test
inc
jnp
cmp
mov
inc
das
push
or
sub
pop
aad
xchg
add
push
lock
sbb
jne
dec
js
rcll
sbb
aad
push
ja
test
xor
dec
pop
aas
ds
cmp
push
pop
xlat
jne
cmp
adc
xchg
push
rep
jno
cmp
mov
pop
mov
dec
or
push
lock
sbb
pop
int
mov
jge
movsl
or
cmp
or
fsts
ret
mov
cmp
sbb
add
push
imul
mov
push
pop
or
sub
stc
pop
pop
or
pop
cmp
scas
sbb
cmp
inc
adc
arpl
lods
and
or
sti
sub
or
cmp
push
sub
aad
add
cmpl
push
fsts
adc
rsm
xor
rclb
in
in
dec
and
and
movsl
add
sbb
adc
jbe
int3
and
mov
jge
cmp
ret
fs
xor
mov
pop
add
dec
imul
lock
pop
push
neg
sbb
mov
mov
sub
mov
push
push
sub
loope
jg
pop
bound
sbb
add
add
lcall
sbb
or
adc
adc
xor
or
dec
push
inc
sub
or
mov
ljmp
lahf
inc
int3
clc
js
mov
aas
mov
rol
sub
adc
add
push
fistps
jne
mov
adc
jmp
sub
mov
add
cli
adcb
rol
add
add
shll
clc
cmp
inc
cmpl
and
adc
jb
ret
xchg
data16
add
test
movsb
shlb
fiaddl
clc
or
lods
mov
orl
xchg
popa
push
cmp
mov
inc
ja
stos
sarb
cli
fidivs
add
aad
imul
cmpsb
imul
and
push
lcall
enter
nop
movsl
jge
clc
adc
xlat
mov
mov
cs
and
jnp
adc
sub
cmp
inc
or
dec
ror
add
adc
aam
movsb
std
mov
mov
cmp
jne
lods
mov
sarb
jmp
in
int3
push
sub
adc
mov
int3
and
leave
dec
pop
pop
aam
adc
mov
sub
test
push
sub
aas
dec
jnp
jp
or
in
cmpsl
mov
add
mov
inc
dec
add
divb
fildl
push
mov
cmp
inc
adc
dec
add
es
adc
in
lds
add
fstl
add
enter
add
adc
sbb
add
adc
fs
push
push
filds
pop
mov
dec
cs
pop
dec
or
xchg
fxch
test
or
or
cmp
dec
or
adc
or
or
or
in
inc
or
or
pop
enter
sbb
xchg
or
cltd
loope
or
mov
dec
push
push
push
cs
fisttps
nop
arpl
dec
pop
or
mov
inc
add
jno
ds
jle
push
das
add
xchg
xchg
fld
add
jg
add
gs
addl
sbb
add
pop
pop
sbb
addl
or
fcmovne
or
sbb
dec
inc
inc
or
or
xor
or
or
int3
mov
xchg
push
pswapd
pushf
push
add
subb
jg
add
jle
popf
add
cmp
test
add
push
enter
push
addl
leave
adc
leave
or
sbb
leave
enter
orl
dec
inc
inc
or
nopl
dec
cmpsb
adc
push
xor
sbb
push
cmp
sbb
xchg
mov
add
add
mov
push
add
add
add
adc
push
fdivl
nop
mov
or
or
ss
mov
or
fs
or
and
or
or
dec
xor
insl
sbb
cmp
pop
adc
imul
sbb
mov
aad
imul
sub
cmp
call
scas
in
mov
sub
add
sbb
sbb
or
pop
or
or
or
jo
movsb
adc
out
push
inc
jae
adc
xor
outsb
push
aaa
mov
sbb
fdivrl
pop
or
jge
dec
das
mov
mov
pushf
fidivrl
push
dec
cmpsb
mov
jg
add
add
prefetch
ret
pop
or
pop
pop
sub
xorl
add
add
sbb
nop
xchg
and
sbb
orl
push
pop
push
dec
adc
sub
pop
sub
or
lods
les
inc
sub
push
and
or
ud2
push
pop
xor
popf
push
inc
sub
mov
mov
orl
dec
push
daa
or
mov
add
lods
imul
add
push
push
sbb
push
dec
sub
cmpsb
mov
push
in
or
or
or
pop
dec
or
add
sub
dec
sub
mov
and
jle
add
pop
mov
sbb
movntps
orl
orl
push
in
pop
pop
add
add
xor
dec
push
sbb
pop
add
sbb
popa
jno
or
sbbl
or
mov
push
push
sbb
inc
subl
add
cmp
dec
jecxz
add
imul
sub
jge
test
leave
pop
sub
call
enter
or
add
or
pop
xlat
inc
adc
sub
lods
mov
sub
adc
or
adc
ret
cmp
rorl
inc
push
pop
adc
jecxz
pop
into
outsb
bound
xor
push
bound
xchg
adc
jbe
in
pop
add
adc
mov
add
add
dec
cs
add
add
adc
mov
push
leave
test
inc
sub
nop
xchg
flds
dec
or
or
xor
cmp
jecxz
sbb
nop
pop
test
cmpsl
dec
sbb
xor
mov
sbb
pop
or
and
std
in
in
data16
or
enter
push
push
xchg
or
cltd
jecxz
pop
das
cmp
mov
lods
adc
add
jmp
add
es
lcall
and
sbb
incb
loope
add
xchg
out
push
popa
clc
push
clc
cld
push
scas
ret
clc
xchg
clc
cld
jns
dec
jae
clc
pop
clc
add
mov
loope
pop
addl
and
xor
daa
add
xchg
xchg
xchg
push
pop
pop
pop
enter
or
xor
or
enter
or
or
in
fs
or
xor
jb
or
xor
or
xor
sbb
push
psubd
push
pop
jl
mov
les
test
jbe
dec
jl
mov
rolb
jno
sub
sub
insb
and
add
pop
enter
inc
add
or
add
loopne
rolb
add
push
xor
jge
cmp
inc
mov
daa
lds
push
add
pop
push
add
cmc
push
rcl
popa
lods
mov
add
mov
jmp
mov
adc
mov
jmp
sarb
push
pushl
icebp
pop
movl
pop
adc
pop
jbe
js
or
or
xchg
hlt
push
shrw
cmpsb
lret
int3
cltd
push
enter
add
jbe
push
xor
notb
fstp
ds
lods
pop
inc
jg
push
and
dec
and
push
lcall
jp
xor
mov
test
jne
cmp
jb
cmpl
pop
idiv
mov
add
xor
flds
sub
mov
add
sub
jne
mov
in
out
in
hlt
or
lret
or
sti
xchg
fsincos
add
stos
mov
dec
ljmp
mul
add
inc
pop
mov
rcll
add
or
mov
das
add
push
add
add
cld
jmp
pop
leave
clc
pop
pop
xchg
push
jno
push
push
fs
cli
mov
xchg
cmp
add
inc
repnz
and
icebp
add
loopne
dec
repnz
cmp
lcall
mov
fs
pop
pop
mov
lcall
and
add
add
adc
and
add
loop
movsl
adc
jg
xor
mov
inc
lock
insl
roll
jbe
jbe
adc
mov
mov
adc
aam
push
pusha
icebp
dec
dec
outsb
and
jne
mov
lock
add
inc
xor
andl
inc
icebp
cmp
mov
mov
fmuls
pop
adc
loopne
sbb
in
call
sbb
and
pop
hlt
add
aaa
ret
roll
clc
cld
push
push
mov
pcmpgtd
test
sahf
enter
or
shl
nop
sbb
mov
add
pushl
inc
aam
pop
xchg
enter
jp
mov
sub
jb
mov
inc
mov
imul
adc
loope
add
dec
lcall
std
data16
movl
aas
lret
jmp
ds
sbb
ret
repnz
testb
js
push
or
add
inc
cwtl
in
mov
sbb
movsb
push
xchg
das
xlat
pop
sbb
cld
inc
or
jl
sbb
imul
cmp
inc
mov
mov
ja
fsubrp
ljmp
mov
dec
or
push
dec
imul
add
cmp
jle
sbbl
jbe
or
ret
cli
and
sub
jge
adc
mov
sbb
cmp
ja
cmp
jbe
in
mov
test
in
push
outsb
fcoms
mov
xlat
cwtl
inc
add
in
ljmp
inc
push
cmpsb
dec
loope
or
xchg
sub
inc
mov
ds
mov
jg
adc
dec
add
mov
xchg
or
cmp
push
pop
shl
je
mov
test
cmp
push
loop
mov
rcrb
sbb
je
loope
out
aam
cmp
into
lock
cmp
in
test
sbb
mov
lea
shlb
data16
add
loopne
mov
add
jo
or
push
pop
mov
loopne
movsl
outsb
adc
rol
clc
pop
mov
add
outsb
dec
or
pop
inc
cltd
add
pop
jp
lcall
adc
xchg
inc
inc
xchg
adc
or
movsl
pop
in
jb
sbb
out
testb
stos
add
jne
orl
loopne
iret
pop
incl
lds
ffreep
scas
xor
pop
push
pop
inc
pop
push
push
pop
clc
add
lock
notl
mov
ret
in
pop
leave
imul
sub
push
les
push
outsl
jl
fcomps
or
and
rcrb
fcmovnb
add
mov
es
cmp
inc
cltd
enter
add
cld
or
sub
lea
push
fnsave
fstl
negl
inc
pop
lret
iret
jne
add
movb
pop
shl
sub
dec
cmpb
xchg
jbe
mov
ret
movb
push
cmc
push
mov
movl
rol
push
adc
mov
je
aaa
dec
test
iret
scas
push
mov
rcll
sbb
add
push
and
jnp
lods
or
xchg
dec
test
push
mov
xor
pop
call
push
movsb
mov
cld
sbb
lock
addb
orl
jb
push
mov
fcomps
pop
cmp
jae
mov
addr16
adc
mov
add
cmp
jb
lock
and
pop
xchg
inc
adc
and
jg
das
sar
push
lea
cmp
ret
sbb
sbb
xlat
fiaddl
nop
cmp
mov
pop
jne
js
push
data16
xor
push
jg
test
xor
push
pop
loop
sbb
andl
or
out
mov
inc
jns
ja
xchg
dec
mov
sti
pop
sbb
xor
ja
shl
push
jp
mov
fldl
push
push
stos
push
pop
add
push
jl
xor
dec
cmp
loopne
repz
jl
push
mov
xor
pop
negb
push
push
push
nop
orb
mov
push
lock
idivb
xor
push
xchg
add
in
divb
sub
dec
pop
jo
cmp
mov
aas
shr
jmp
mov
push
inc
dec
ljmp
jbe
mov
jne
cmpl
xor
cmp
shl
xchg
sarl
sbb
pop
mov
and
adc
fidivs
cmpl
stc
jp
xchg
sub
and
dec
or
inc
in
and
or
inc
mov
push
push
inc
xchg
sbb
jmp
mov
enter
or
push
push
push
lock
fcoml
cmp
jne
pop
mov
xchg
aad
mov
scas
sbb
push
push
stos
dec
pop
inc
sub
je
add
jmp
fs
imul
andb
shlb
loop
out
jg
ret
jg
call
test
jg,pt
push
inc
adc
and
loope
movsl
push
inc
push
pusha
jo
mov
cmp
in
mov
lods
mov
jg
adc
divb
mov
fistl
or
jne
pop
jo
mov
sbb
cli
pop
pop
sbb
fildl
lds
sub
push
mov
bound
add
shr
inc
repz
add
sahf
push
pusha
cmpsl
push
popa
dec
push
xor
pop
loope
inc
or
ret
push
push
mov
jo
and
test
sbb
xchg
and
add
lret
sbb
cltd
in
dec
subb
call
mov
adc
push
or
add
ror
iret
aam
adc
push
add
test
and
push
mov
aaa
loop
je
and
or
test
rolb
mov
fstpt
popaw
inc
inc
add
je
cmp
cmp
arpl
loopne
sub
andl
sahf
rclb
jle
sbb
mov
lahf
dec
mov
fs
mov
jg
pop
jg
mov
jae
mov
mov
clc
test
push
out
cmp
je
push
jle
cmp
jl
mov
pop
jecxz
dec
sub
pop
loopne
jnp
or
rcrl
mov
mov
and
mov
sbb
add
or
popa
mov
and
insb
mov
in
dec
je
rcrl
push
daa
cmp
js
add
mov
cmp
je
push
and
xlat
inc
mov
and
inc
sbb
or
adc
jl
mov
inc
jge
sbb
or
dec
dec
sub
stos
and
mov
xor
cmc
cmp
notb
jae
mov
inc
or
sbb
ror
jb
sbb
addps
mov
movb
inc
or
pusha
dec
test
pop
sub
cmp
rcr
xorl
jne
std
addl
cmp
jle
push
jp
shrl
mov
lea
jmp
push
ret
adcb
int3
add
out
fsubrl
mov
test
jg
lcall
xor
inc
adc
pop
jl
pop
pop
ret
lret
or
movsb
leave
out
mov
mov
xchg
add
adc
dec
cld
vpsubsb
and
push
push
bound
jns
mov
orb
rolb
fdivr
jbe
or
push
push
pop
sarb
mov
mov
mov
push
aaa
loope
shll
cmp
push
daa
sbb
xchg
push
sbb
push
mov
cmp
pusha
push
in
pop
gs
rorl
mov
mov
dec
jp
mov
cmpl
dec
pushf
pop
adc
aad
clc
dec
jo
cmp
jae
movsb
mov
inc
aad
jg
jle
cmp
jg
mov
dec
rcrb
xor
fldenv
pusha
in
aam
sbb
mov
or
jnp
nop
popa
sbb
jmp
sbb
xor
stc
pop
adc
shll
out
rcl
mov
ds
cmpl
adc
lahf
push
push
popf
pop
cmp
int3
push
jne
mov
mov
jns
push
push
cld
enter
mov
mov
out
dec
mov
cmp
adc
mov
adc
or
adc
cmp
xchg
add
cmp
xor
xor
inc
push
test
push
fdivrs
ja
xchg
imul
push
push
and
flds
mov
mov
or
arpl
push
lock
push
addr16
adc
xchg
fisubrl
adc
cltd
jg
insl
jbe
pop
xor
incl
fldl
jl
or
pushf
cmp
add
fisubl
je
xchg
je
mov
rcrl
mov
jmp
outsl
sub
iret
out
shrb
testb
add
add
dec
enter
lods
and
dec
popa
mov
dec
jo
cld
scas
mov
repnz
rcrb
cmp
xchg
adc
out
icebp
lahf
cmp
aad
je
dec
jne
sbb
mov
jno
mov
sbb
mov
jo
xor
cmpsl
xchg
push
addr16
xor
jbe
sub
jne
push
sub
call
in
pushl
daa
push
jnp
jmp
icebp
shrb
cli
inc
cs
sbb
mov
arpl
mov
jo
outsl
cmp
pop
and
push
movsb
daa
stos
add
push
push
loope
inc
sbb
xchg
xchg
lea
test
mov
les
sub
push
pushf
addr16
add
adc
fstpl
and
pop
add
sbb
cld
push
mov
addr16
push
lea
cmp
jl
cmp
jg
bound
pusha
sahf
push
hlt
sbb
mov
mov
cmpb
sub
add
and
ja
xchg
or
jnp
add
adc
sarb
adc
jb
pop
pop
pop
pop
roll
push
negb
mov
push
xor
adcl
push
cmc
and
jl
enter
fstsw
ret
mov
cmc
xor
mov
mov
cmc
das
xor
ret
je
das
or
jo
lret
sbb
adc
rorl
mul
xchg
mov
int3
dec
mov
or
std
hlt
jne
mov
and
or
shll
inc
outsb
fwait
push
aad
mov
mov
adc
mov
arpl
js
mov
pop
scas
cmp
jle
mov
dec
add
xchg
cmp
jo
loope
or
jne
pusha
add
jl
jno
adc
dec
dec
ss
add
cmc
int3
int3
call
jg
add
test
adc
fsubrl
mov
adc
out
xchg
jmp
loopne
cmpl
js
mov
clc
lea
mov
stos
xchg
testl
cmp
adc
pop
mov
dec
sbb
jb
jle
lea
lea
in
and
pushl
pusha
ret
ret
test
jl
add
dec
jg
call
call
pop
mov
fsts
jge
xchg
hlt
or
ret
xor
and
or
or
xchg
in
fs
adc
pusha
inc
pusha
sarl
jb
icebp
lret
jb
or
cmpsl
push
pop
jmp
scas
gs
getsec
pop
pushf
and
jmp
adc
jae
pusha
push
loope
scas
or
arpl
jns
inc
bound
and
dec
call
fadds
mov
fwait
mov
pop
pop
add
es
push
lods
sbb
std
sbb
pop
inc
sbb
mov
ja
andb
stc
jne
pop
or
call
cmc
or
inc
xor
mov
mov
je
out
sbb
cmp
adc
cmp
jb
testb
pop
add
xor
add
cmp
push
push
ret
fiaddl
pop
and
cmp
add
inc
lahf
lds
sbbl
pop
std
cmp
jne
cmpl
sub
pop
adc
daa
clc
pop
adc
mov
push
or
sbb
out
sbb
sub
call
call
and
jecxz
and
mov
jle
aas
jmp
cmp
int3
mov
jo
ret
or
cli
mov
movsl
dec
pushl
mov
insb
test
and
adc
rcrl
js
sarb
mov
std
nop
jbe
push
push
push
lock
orl
xor
aas
push
test
sti
dec
adc
add
pop
and
push
sti
and
push
mov
pusha
fcompl
or
xor
inc
mov
fcmovnb
fstpt
add
movb
add
mov
nop
push
lea
insl
xor
loope
pop
hlt
pop
inc
fldcw
inc
fdivrp
movsb
inc
insb
mov
ja
sahf
mov
insb
cmp
pop
arpl
dec
mov
mov
mov
insb
and
addr16
mov
dec
xchg
rorb
repnz
push
cltd
mov
and
ret
in
je
push
push
ds
push
sti
dec
fs
jg
gs
divl
add
mov
jmp
push
inc
xor
rcl
loopne
sahf
pop
pop
shl
cmp
jp
and
add
repnz
or
xor
hlt
gs
fcoms
in
inc
and
push
cltd
in
push
movsb
sbb
cmp
in
push
inc
inc
dec
xor
inc
pop
cmp
cmc
inc
sbb
test
push
jg
pusha
in
cmp
and
fucomp
sahf
testl
cmp
adc
insb
jle
or
aas
mov
or
popf
jno
mov
jge
adcl
fcmovnb
fprem
shlb
or
aad
ret
cmpsb
or
inc
je
fisubs
push
jo
and
lcall
cmp
dec
dec
popf
sub
test
jge
sub
pop
je
cmp
je
and
fsubr
hlt
cmp
add
cmc
faddl
or
ja
mov
jae
rorl
aam
mov
pop
sub
fs
jl
and
pop
inc
stos
add
pop
call
pop
adc
sbb
pop
push
xlat
cmp
stos
inc
lahf
xor
or
rcl
xchg
sbb
aaa
cmp
pop
mov
mov
inc
js
push
jnp
in
and
cwtl
fs
sahf
pop
pop
jl
push
sbb
adc
xchg
push
mov
lahf
sbbb
out
pop
orb
mov
add
push
rorb
push
or
aam
dec
cltd
mov
std
stos
test
rcrb
mov
pop
es
jmp
stc
add
add
pop
pop
das
push
push
push
xchg
or
dec
cmp
ja
cmp
clc
in
add
inc
push
xlat
push
aad
loopne
xchg
jmp
push
push
pop
or
xor
insb
pop
cmp
or
mov
test
test
cli
fistpl
loopne
adc
daa
movl
test
fcompl
clc
dec
rorb
ret
fists
stc
mov
push
mov
mov
sub
mov
add
or
cmp
shrb
dec
add
aam
or
je
shr
movsb
popf
inc
lds
push
aas
add
test
sti
inc
out
cmp
jne
or
and
shrl
inc
add
sub
add
sarl
push
add
lods
dec
test
mov
xchg
es
movsl
cmp
push
push
bnd
movsb
mov
mov
rorb
dec
add
mov
jbe
mov
jo
adc
sbb
push
pop
cmc
fwait
push
jmp
add
mov
fs
repnz
data16
pop
mov
add
repz
aam
lods
sbbb
pop
mov
jmp
and
add
shll
loopne
mov
inc
test
jne
add
xchg
sti
or
jle
je
lock
xor
ret
sbb
xorl
inc
cld
jb
test
mov
in
out
dec
xchg
push
fmul
lea
lret
sub
ret
adc
pusha
jb
and
cld
push
xor
scas
pusha
mov
mov
add
adc
mov
fwait
es
lea
add
add
lock
jne
out
out
and
mov
xchg
pushf
into
nop
and
sbb
mov
popf
push
sub
xchg
pop
shrb
aaa
std
add
jne
dec
push
add
add
pop
xchg
push
ds
imul
push
or
rorb
scas
testl
dec
ja
pop
adc
loopne
inc
jo
push
jns
movsb
and
or
mov
shll
mov
fisubrl
add
add
shlb
push
insb
test
inc
xchg
call
mov
ss
outsb
inc
loope
mov
push
jne
fsubrl
daa
adc
push
or
ja
fisttps
push
inc
mov
divl
cld
or
cmp
jae
mov
sti
outsl
push
add
jb
into
mov
je
push
pusha
rorl
add
sub
xor
sarb
push
loope
mov
adc
xchg
mov
insb
and
sub
mov
or
and
sarb
inc
add
fldenv
clc
mov
pop
cli
jnp
fmull
fadds
sti
jb
outsl
std
cmp
push
and
cmp
test
jp
add
dec
mov
jo
mov
stos
out
minps
inc
sbb
jge
sbb
jae
insl
pop
test
adc
jmp
inc
cltd
in
gs
loopne
loopne
dec
sub
in
jns
notb
sub
popa
addb
addl
sbb
sbb
cmp
into
dec
js
nop
pop
sub
pop
cwtl
mov
sbb
pop
sbb
and
das
ret
jns
pop
push
test
inc
and
or
jge
mov
sub
inc
mov
push
pop
push
xor
push
mov
mov
push
lcall
dec
cmp
ret
xor
pop
pop
jne
pop
and
fnsave
mov
mov
aad
push
inc
or
dec
loope
jo
je
rolb
iret
xor
mov
dec
or
pop
inc
inc
test
pop
out
add
dec
sbb
cmpsl
push
or
mov
pop
add
pusha
sti
sbbb
fbstp
lea
dec
xchg
add
xor
fdivl
xlat
das
jo
jo
outsb
pusha
mov
jg
lock
fbstp
into
cli
je
leave
addb
push
cmp
and
xlat
jmp
stos
out
sbb
pop
sub
loopne
rclb
cmovae
adcl
and
mov
mov
sahf
xchg
popa
add
or
pop
mov
push
je
enter
dec
or
ficomps
roll
aaa
cmp
mov
lods
pop
fmuls
jnp
cmp
ja
cld
stc
test
addb
das
push
cmpsb
mov
pusha
lock
adc
mov
push
pusha
push
cmp
repz
mov
mov
lock
inc
call
push
jb
mov
imul
mov
push
rcll
or
xor
pop
mov
std
cmp
jbe
add
movsb
les
andb
jp
fidivs
out
push
fwait
pop
dec
ss
addb
sub
inc
in
push
inc
js
aam
popa
sbb
jg
fwait
inc
xor
add
mov
mov
testb
push
xor
sbb
cld
jo,pt
inc
add
xor
and
pop
sub
sub
loop
out
testl
push
push
pop
and
aam
jns
stos
mov
lock
in
and
movsl
pushl
in
xchg
push
fsubl
pusha
ja
sub
push
add
dec
shrl
jge
push
bound
or
dec
je
cmpsl
pop
jg
scas
or
mov
sbb
test
cmp
jge
call
push
or
mov
push
fidivl
push
xchg
js
or
xor
pop
lahf
leave
ret
cmc
lahf
pop
andl
pop
jne
push
jecxz
mov
dec
jae
inc
test
dec
mov
push
cmp
ljmp
mov
out
add
adc
jae
xor
push
lret
fcmovbe
sbb
incl
popl
andl
jo,pt
jl
add
mov
pusha
push
cmp
std
pop
rcl
mov
and
mov
andl
inc
mov
mov
fs
test
cmpl
pop
push
push
mov
xchg
test
xchg
sbb
lret
dec
cmp
sbbl
xchg
cmp
mov
cmp
cmp
test
push
call
mov
xor
pop
rcll
adc
sahf
pop
xor
dec
and
push
clc
cwtl
inc
mov
frstor
push
jbe
cmp
cmp
ja
push
jp,pn
cmp
aam
dec
scas
xor
push
xchg
rorl
iret
sub
push
add
jmp
push
pop
inc
bound
aam
mov
mov
adc
or
test
fdivr
xor
sbb
aam
cmpsl
cmp
jbe
push
ds
pop
lea
jge
push
inc
push
inc
addr16
je
xor
lret
adcl
rorl
xor
cmp
pop
jp
hlt
or
or
push
pop
push
mov
cs
das
jne
inc
mov
mov
cmpl
and
dec
pop
adc
mov
test
mov
dec
jb
in
lods
add
adc
push
inc
push
sub
mov
mov
movl
test
out
je
pop
push
add
adc
repnz
adc
cld
mov
iret
push
adc
incl
aaa
insb
das
call
add
jb
push
lcall
or
adc
je
or
das
adc
inc
or
rol
test
jle
jmp
je
or
je
or
jne
push
add
inc
jmp
inc
imul
je
jae
cmp
push
xor
jmp
repz
jmp
xor
fldl
xor
enter
add
test
fsubp
imul
add
inc
pop
je
pop
es
push
xchg
mov
inc
add
adcb
mov
push
loope
mov
dec
stc
add
push
cld
pop
je
xchg
add
loopne
je
inc
or
je
mov
sbb
cmp
and
or
push
mov
out
mov
inc
add
xor
inc
pop
orl
push
ljmp
pop
push
popa
add
addl
push
mov
jg
shrb
sbb
in
sub
sbb
mov
cmp
jne
mov
loopne
jp
mov
or
into
in
or
jae
xchg
arpl
das
ficompl
out
lea
les
mov
or
out
imull
mov
push
orl
pusha
add
sbb
pushl
nop
fdivs
idivb
fiadds
ja
cmp
je
mov
push
xor
dec
lock
lock
mov
sub
push
sar
inc
push
adc
pop
adc
cmp
je
or
add
pop
sbb
sub
dec
jbe
sarb
js
cmp
out
insb
inc
dec
mov
or
mov
inc
int
mov
ss
sbb
inc
push
pop
push
jmp
adc
mov
loopne
xchg
cmpsl
nop
sbb
jnp
mov
sti
jmp
inc
dec
or
mov
and
xor
dec
inc
lea
add
test
jb
push
push
lret
shrb
call
mov
sbb
ret
mov
outsl
xlat
fidivrs
fnstsw
mov
sub
inc
aas
cmp
add
clc
orb
arpl
sbb
daa
andl
and
scas
xor
orb
add
cmp
or
loopne
jnp
rorb
and
into
sub
shll
sahf
mov
jnp
lds
adc
icebp
add
mov
pop
nop
push
out
or
je
or
ljmp
cmp
pop
mov
sar
shl
add
lock
inc
push
push
mov
push
hlt
lds
pop
clc
add
call
scas
pop
mov
repz
push
orb
inc
sti
add
jmp
mov
push
clc
mov
jmp
lea
xchg
cmc
push
test
jle
pop
inc
mov
in
inc
sbb
mov
jne
sahf
fwait
mov
jne
or
adc
sbb
sub
mov
movl
sbb
sti
add
mov
jmp
jle
pop
push
pusha
mov
jp
sub
or
adc
or
test
dec
sbb
sub
push
adc
daa
std
push
jns
movsb
leave
dec
xchg
shll
fisubrs
or
push
push
and
push
testb
or
shlb
mov
mov
xor
pop
push
cld
xor
mov
push
pop
add
dec
pop
lods
push
out
aaa
jnp
dec
test
xor
and
divl
mov
mulb
loope
test
pop
or
fildl
jle
lock
not
push
lret
pop
pop
cli
shll
sbb
xor
adc
sub
push
adc
push
pop
sub
xor
add
push
jl
xor
inc
lahf
pop
mov
add
mov
lea
sub
sub
call
dec
and
add
bound
ljmp
add
inc
sub
push
mov
mov
rcrb
outsl
mov
divb
cmp
jb
mov
adc
xor
and
push
dec
into
call
push
movsl
outsb
test
test
or
clc
out
ret
jg
sub
movsl
jmp
mov
jb
insb
out
mov
enter
cwtl
cmp
xor
jnp
notl
or
xchg
and
fcmovu
test
pop
pop
mov
mov
or
lods
adc
mov
int3
imul
cmpsb
pushf
sbb
add
mov
mov
or
push
cld
cwtl
repz
imul
aam
jns
decl
inc
in
call
sahf
in
lock
hlt
clc
outsl
icebp
out
clc
cld
cld
lea
clc
iret
imul
sbb
jmp
push
sbb
pop
nop
inc
or
add
inc
inc
fsubs
and
and
fmul
movsb
into
jl
cld
pop
and
xchg
scas
loopne
std
cld
out
mov
lea
adc
xchg
daa
stc
sub
mov
pop
nop
rclb
hlt
push
sbb
mov
int3
rcr
add
out
add
mov
mov
inc
push
fisubl
add
push
fmull
pop
add
loop
jo
jo
jns
jnp
js
orb
out
icebp
mov
aaa
sbb
sbb
jns
out
adc
adc
or
jns
out
or
add
iret
jnp
and
int3
or
push
in
dec
push
xchg
mov
add
outsl
pop
ret
sub
sub
mov
fldt
sbb
sbb
mov
jo
insb
data16
repz
pusha
sub
stc
pushf
popl
mov
cld
mov
inc
or
movl
mov
js
add
rcr
imul
fsubs
dec
or
adc
jecxz
ficoms
cmp
cmpsb
jno
push
xor
shr
aaa
int3
or
xor
inc
push
add
adc
movb
idivb
cmc
movsb
add
ljmp
cmp
lret
xor
sbb
icebp
adc
rorb
and
sar
ficomps
icebp
mov
icebp
xchg
push
mov
and
es
jecxz
clc
pop
mov
add
call
aas
push
clc
stos
and
pop
fimuls
cmp
mov
pop
leave
or
add
adc
lcall
xor
xor
into
rcrl
mov
icebp
inc
cwtl
cwtl
jge
cs
cld
sub
lea
cmp
ds
test
jmp
push
cmp
sti
jne
inc
clc
rorb
jmp
push
xor
cld
pop
jne
pop
lock
dec
cwtl
pop
loope
or
jmp
mov
jmp
jp
and
lea
fimuls
ss
cmp
pop
dec
fwait
enter
or
out
jae
in
add
cmp
mov
xchg
mov
jo
push
sbb
mov
lea
pop
mov
test
push
movsb
jnp
rcrb
call
aaa
cmpl
inc
add
iret
sti
ret
pop
ret
adc
dec
or
aam
movsl
sub
pop
or
jo
xor
test
push
mov
jb
out
fucomp
xor
stos
outsl
cmp
es
and
fbld
pop
cmp
jne
sbb
js
jb
mov
imul
inc
mov
lock
jno
rol
imul
les
int3
imul
loope
mov
and
add
cwtl
sarb
cmp
xchg
jns
aam
jle
jo
push
cmp
mov
or
pop
sub
xchg
mov
inc
add
adc
test
int3
cmpsl
je
push
fs
or
cmp
popa
pop
cld
xor
xor
divl
ds
inc
js
iret
jl
addr16
pop
ret
dec
xchg
xor
gs
insb
clc
daa
call
loop
inc
js
rclb
mov
test
je
insb
data16
jo
jo
movsb
mov
jmp
dec
cmpsl
sub
jecxz
push
insb
leave
nop
xor
nop
in
stc
mov
jmp
xor
movsb
add
fs
or
mov
test
add
sub
test
push
or
mov
xor
xchg
mov
inc
clc
in
add
push
inc
bound
mov
mov
mov
jle
add
add
or
loope
or
ficoms
stos
out
push
push
pop
movsb
mov
mov
mov
inc
dec
mov
xor
ja
add
or
cli
add
push
sbb
push
lea
adc
pop
ljmp
outsl
add
sub
lods
push
movl
push
movb
and
xor
sti
jg
hlt
add
cmp
ja
sub
inc
push
lea
cwtl
sub
js
popf
mov
xchg
data16
loopne
popf
or
out
ficoms
push
push
mov
fidivs
std
push
cmp
out
push
inc
inc
cld
xchg
loopne
add
dec
and
out
incl
mov
and
orb
mov
fucomi
adc
je
and
sbb
pushf
adc
mov
test
mov
pop
mov
out
lea
pop
and
enter
and
outsb
push
cli
sbb
and
cld
jmp
movb
add
dec
inc
cmp
jb
sbb
test
sub
int
sbb
ja
sub
or
cmp
ret
or
push
push
sbb
xor
push
mov
cmpb
pop
insb
push
rcl
bound
xchg
mov
mov
sarl
stos
movb
arpl
jl
insb
mov
or
dec
mov
or
add
orl
xchg
nop
orb
add
lcall
mov
testb
jne
adc
adc
add
add
inc
add
push
xchg
out
hlt
pop
inc
push
inc
mov
rorb
mov
jne
movl
cmp
inc
bound
push
in
jo
jmp
inc
std
jne
shr
add
cmp
sbb
jmp
ja
jbe
cli
rcrb
jns
add
inc
add
popf
test
jge
cmp
data16
lock
push
xchg
sub
xchg
popf
dec
or
jmp
add
lret
js
lcall
mov
pop
inc
ret
out
fdivr
mov
push
cs
jo
or
push
and
push
cmc
pop
out
and
aaa
push
lea
push
std
or
inc
int3
mov
jae
cmp
jbe
jne
jge
movsb
roll
out
mov
test
loopne
mov
movb
inc
pusha
leave
inc
inc
lea
dec
in
leave
xor
lea
push
inc
jmp
xchg
sub
xchg
mov
fs
cmpb
sub
testl
add
clc
jbe
es
jo
jbe
es
sbb
loopne
xorb
jle
xchg
movl
push
mov
adc
mov
lock
mov
mov
mov
shl
gs
les
icebp
mov
lea
xchg
cmc
mov
sbb
mov
and
idivb
loopne
pop
jbe
mov
inc
dec
jne
inc
pusha
jl
dec
scas
stos
mov
pop
nop
add
jne
jnp
jl
aas
jmp
cmp
cmc
mov
adc
aaa
adc
adc
push
lds
loopne
daa
mov
push
mov
pop
push
lods
push
pop
cmp
adc
and
cwtl
js
push
cmpsl
fadds
cltd
add
aad
xor
and
data16
daa
lock
pop
in
xor
pop
adc
adc
pop
cmp
test
cmp
cmp
je
cmpsl
insb
ljmp
loopne
adc
add
cli
jb
or
or
pop
xchg
clc
add
out
test
hlt
or
jmp
xor
mov
sbb
mov
or
jmp
add
shll
cmp
inc
lock
jns
adc
jno
es
or
and
cwtl
and
mov
sbb
out
add
fbld
xchg
lods
pop
push
add
adc
jbe
popa
cmpsl
out
push
dec
or
adc
jg
inc
xor
je
push
push
ficoml
iret
cltd
loop
adc
adc
movsl
ret
dec
xor
or
test
lahf
inc
add
imul
mov
sti
xor
inc
or
adc
xor
arpl
mov
fdivrs
mov
push
push
and
roll
dec
test
or
movsb
ja
adc
ret
out
pop
notb
push
push
test
push
jl
aaa
dec
in
lahf
sub
jo
lock
push
or
jbe
lea
mov
mov
or
dec
push
push
jo
mov
pop
ja
push
insl
push
adc
jmp
insl
inc
sub
loop
mov
mov
cmpl
add
mov
or
add
mov
ds
adc
add
imul
adc
cmp
call
or
adcb
or
sti
pushl
rorb
pop
mov
andl
rorb
in
loop
sbb
fistl
xor
dec
xchg
iret
mulb
fcoml
fcomps
int3
data16
clc
or
test
movsl
xchg
into
lahf
xchg
shrb
xor
hlt
sahf
jbe
dec
add
hlt
fbld
fldlg2
fisubrl
cld
xor
adc
loopne
fsubs
in
pop
nop
cmc
pop
and
lea
or
dec
cmc
xchg
push
and
je
or
frstor
pop
movsb
outsl
add
dec
sbb
pop
icebp
dec
fiadds
sbb
sbb
pop
mov
dec
xchg
aaa
xor
jmp
cmc
push
mov
xchg
imul
xor
mov
mov
out
sbb
push
push
xor
xor
adc
jbe
jecxz
add
xor
cli
adc
bnd
cmp
adc
adc
int3
mov
or
cmp
popl
inc
xchg
out
or
jo
out
into
insl
jo
mov
or
sub
sbb
mov
sbb
adc
repnz
loope
or
cmp
pop
jecxz
mov
mov
pop
iret
filds
xor
out
call
push
push
or
push
push
cli
inc
sub
hlt
mov
xchg
sbb
xchg
icebp
cmp
jae
or
or
jp
mov
icebp
jb
inc
push
mov
ja
arpl
rclb
test
and
pop
rclb
repnz
rcl
inc
and
add
xor
or
insl
sub
add
cld
sbb
dec
push
jmp
add
dec
bound
and
xor
xor
push
cmp
push
jbe
pop
cmpsl
pop
add
ret
mov
jmp
test
loop
lret
xchg
out
jae
mov
pop
test
cld
faddl
inc
mov
add
or
jb
imul
ficompl
and
push
outsb
add
pop
les
sub
movsl
inc
daa
and
neg
out
dec
imul
mov
add
shll
scas
lock
or
jne
stos
sbb
sbb
sbb
adc
lahf
cld
mov
loopne
or
push
pushl
mov
xchg
sbb
jo
scas
adc
les
sub
add
push
je
sub
dec
je
out
mov
sub
sub
mov
mov
ret
out
jno
clc
loope
or
jge
mov
mov
jne
aaa
orb
push
aaa
add
test
or
and
sbb
inc
pusha
jne,pn
xchg
mov
sbb
inc
fs
and
pushf
lock
mov
sbb
loop
push
aas
mov
adc
inc
fsubr
fstp
mov
dec
lahf
movb
add
loopne
jmp
push
js
inc
xchg
mov
adc
ss
pop
daa
push
adc
lds
test
fs
test
pop
sbb
sbb
mov
movsl
roll
pop
add
ljmp
jb
lock
push
dec
decl
inc
cmp
roll
aas
out
and
dec
sbb
cmp
and
xchg
ret
mov
in
dec
enter
adc
or
push
lea
hlt
rorb
sbb
sbb
jb
or
fldl2e
or
and
mov
sub
sarb
int3
lahf
lods
push
movsl
andl
adc
xchg
aam
sar
xchg
xchg
xchg
xrelease
rcpps
mov
cs
iret
xor
shr
not
mov
sub
andl
outsb
nop
cmpl
mov
popa
pop
inc
push
push
xchg
mov
push
clc
ljmp
in
add
add
daa
push
jne
push
xor
lock
adc
cmp
rcr
xor
inc
cli
fldt
push
scas
mov
jo
cmp
in
je
jl
out
ret
out
adc
mov
dec
xchg
pushf
jmp
aaa
sbb
or
sub
lods
push
outsb
sub
jge
and
sbb
add
mov
aam
push
mov
add
orl
lods
dec
xor
sub
call
jbe
je
psrlq
adc
in
cmp
insb
scas
test
mov
and
out
scas
popa
cmp
inc
in
pusha
test
sbb
sub
inc
data16
mov
mov
cmp
mov
jne
lods
call
sub
pusha
add
add
dec
test
sbb
jo
negl
push
bound
fisttps
shl
fstpt
rolb
cmp
jne
xchg
loopne
mov
adc
shrb
sbb
push
or
sti
sbb
insl
sti
pushf
dec
sbb
daa
jmp
imulb
repnz
loope
mov
xor
push
or
dec
dec
jne
xor
leave
sub
fst
or
sub
lock
push
sub
dec
pop
adc
mov
jae
mov
jne
sub
sar
dec
pop
mov
mov
shlb
or
add
leave
aam
jmp
push
cmp
mov
or
add
mov
xchg
mov
or
sar
xchg
js
mov
hlt
mov
test
inc
fistl
ficoms
jbe
mov
xor
and
imul
cmp
dec
dec
test
mov
repz
aam
jmp
loop
sarl
call
and
shr
je
jmp
lea
aam
sti
push
dec
adc
push
and
adc
repz
push
pop
outsl
inc
or
push
inc
jge
jbe
jle
cmp
sarb
iret
outsl
ja
jo
mov
mov
lahf
dec
jne
mov
fdivrp
outsl
in
lret
ffreep
lea
lea
inc
out
inc
inc
out
and
push
rol
add
jmp
in
push
mov
xor
dec
jne
mov
cs
insl
je
push
negl
lds
in
mov
push
cmpl
mov
shr
add
adc
andl
pop
das
push
arpl
imul
enter
or
adc
daa
daa
mov
ss
sub
daa
daa
daa
xor
cmp
add
cmp
inc
and
jb
jb
inc
cmovs
pop
jo
push
pop
add
pushf
pushf
fs
pushf
pushf
je
jl
xchg
imulb
sbb
mov
nop
xchg
dec
es
fs
pushf
mov
movsb
test
xchg
dec
xor
rol
int3
insl
xchg
or
sarb
xor
fsub
xchg
dec
xor
in
in
aam
xor
and
hlt
clc
cmp
and
cld
add
add
add
or
and
dec
fwait
adc
xor
sbb
and
dec
xor
and
xor
leave
and
cmp
sbb
inc
dec
dec
fs
dec
cmpsb
mov
pop
mov
pusha
sbb
lock
aas
in
je
mov
cmp
mov
rorb
or
repnz
jbe
cmp
jbe
aad
sub
or
xor
insl
inc
adc
nop
adc
rorb
sbb
xor
and
and
cmp
cmp
mov
dec
rolb
int
xor
dec
int3
lcall
or
adc
fstl
mov
adc
aaa
cmp
jle
jecxz
lods
pop
sbb
cwtl
jne
int
cmp
test
decl
ret
lahf
aam
add
mov
cmp
jne
push
push
les
or
and
xor
adc
push
cli
pusha
sbb
call
lds
mov
xor
dec
jle
clc
ja
lahf
inc
divl
aas
or
sbb
ja
mov
mov
add
add
cwtl
ja
addr16
xchg
and
or
sbb
jo
add
hlt
je
push
ds
jle
jle
push
fcmovne
loopne
sahf
rclb
cmp
xor
fnstsw
in
dec
adc
dec
lock
jg
shrl
push
outsl
inc
mov
jle
jns
add
pop
ss
ja
jae
cmp
je
movl
jmp
jns
push
rcll
js
push
aas
clc
add
lods
cmp
insl
xchg
mov
lods
and
or
push
in
push
fisubl
mov
lock
stos
push
pop
outsb
adc
pop
lea
jl,pn
xlat
jp
cld
xor
mov
sahf
jae
lods
adc
fcoml
cmpsl
outsl
push
xchg
ja
movsb
jecxz
add
fs
jle
push
or
cltd
in
cltd
and
sbb
mov
jle
cmp
push
jg
xor
push
mov
mov
xchg
push
repz
in
mov
xchg
add
lcall
push
in
add
sbb
pop
in
imul
movsb
sbb
jl
or
push
xchg
or
shlb
fdivp
outsl
sub
icebp
push
inc
push
lock
mull
mov
lsl
jmp
push
pop
push
push
inc
imull
shr
rcr
shr
rcr
or
cmpsb
div
pop
dec
adc
jg
outsb
fwait
inc
mul
pop
jb
cmp
or
cmp
or
cmp
jnp
sbb
push
adc
or
fdivs
lds
fxch
pop
push
inc
or
loop
sub
nop
pop
loopne
hlt
mov
jmp
je
add
xor
push
shrb
shl
mov
xlat
or
push
mov
mov
movsb
pushf
xchg
sarb
orb
repz
rcrl
jg
cmpl
fldt
xchg
push
mov
fadd
inc
dec
push
adc
ret
and
jl
mov
iret
repz
or
push
inc
dec
push
pop
pusha
or
jg
repz
mov
xchg
push
movsb
mov
sub
add
jne
or
adc
std
add
loop
add
sbb
or
add
or
pop
pop
add
sub
and
and
add
enter
inc
xchg
sbb
std
sarb
ret
sub
jmp
lret
imul
or
pop
mov
loope
push
or
test
mov
loope
rcrl
aaa
mov
inc
mov
add
add
lock
stos
fsubrp
movsb
push
rorl
out
cmp
xor
or
add
aam
nop
iret
adc
add
nop
jge
lea
xchg
aas
push
leave
je
push
pop
mov
mov
mov
call
std
or
mov
je
jb
mov
out
push
cmp
ja
add
aas
out
out
adc
cmp
jne
jp
xor
shlw
leave
adc
mov
outsl
push
pusha
push
push
pop
aas
int3
jmp
cmp
mov
outsb
mov
rorb
or
mov
pop
aad
sbb
xor
mov
xor
and
addl
xor
push
add
jne
cmp
adc
adc
pop
insl
push
repnz
insl
mov
incl
jbe
push
dec
test
mov
insl
popa
jo
jae
je
mov
and
and
add
jbe
insb
imul
stos
adc
mov
inc
jb
shl
mov
data16
aam
imul
dec
imul
add
dec
mov
or
lock
inc
inc
bound
mov
int3
into
fsubr
arpl
repnz
test
aad
inc
push
outsb
imul
outsb
and
arpl
ds
mov
inc
cwtl
or
sti
jg
sarb
add
push
add
dec
add
add
add
add
sar
fisttps
insb
jae
jb
rcpps
mov
and
add
cli
push
jb
gs
lock
iret
mov
outsl
add
add
add
add
jne
out
je
inc
and
clc
add
xlat
and
and
or
insl
in
ds
dec
add
inc
cmp
dec
imull
sbb
inc
push
add
ja
pusha
mov
add
add
and
inc
add
push
gs
pop
mov
pop
and
aas
dec
sti
mov
arpl
cmpsl
insl
push
loopne
out
loopne
xchg
jae
popa
or
fnsave
out
into
jns
push
jne
imul
or
jbe
aas
imul
ds
jp
outsl
cs
in
fisttpl
mov
gs
fsubrp
imul
out
outsl
jmp
loopne
rcrb
add
pop
neg
in
lret
stos
insl
sub
push
imul
scas
cmp
jne
rol
mov
sahf
xchg
mov
jb
outsl
sbb
sub
mov
sub
das
sub
or
call
daa
lahf
sbb
xor
push
outsb
inc
imul
jae
push
or
sbb
addl
das
cs
icebp
push
cmp
outsb
bound
sub
push
arpl
mov
xor
je
loope
mov
mov
gs
fcoms
das
jb
ret
inc
sbb
fidivrl
cs
add
xor
in
and
outsl
andl
and
add
add
loope
or
aas
inc
xchg
lahf
aaa
jg
shll
ret
iret
fisttps
dec
fs
xor
imull
xchg
sub
inc
mov
mov
nop
xor
stos
and
jae
mov
inc
stos
pusha
jg
cmp
jbe
ja
outsl
lahf
outsl
aas
add
iret
arpl
cmp
xchg
push
push
sbbl
aaa
insl
jno
lahf
cs
imul
add
imul
shll
mov
stos
xcrypt-ofb
cmpsl
outsb
inc
sub
pop
std
cmp
push
pop
add
loop
lods
and
inc
pop
and
fdivp
insl
pop
je
scas
cmp
mov
jg
cmp
fdivrl
js
jecxz
outsl
pop
loope
and
mov
lods
or
pop
add
out
cmp
push
nop
fiaddl
or
or
fnstcw
cwtl
adc
das
fdivrs
push
imul
repz
repz
sbb
lcall
push
das
imul
aam
and
jns
repz
jns
jns
out
jp
push
cld
nop
pushl
shl
jmp
add
lock
imulb
outsl
bound
add
push
mov
jb
aaa
mov
add
ucomiss
xchg
mov
dec
insl
jl,pt
adc
jnp
imul
or
outsl
ret
inc
and
mov
fwait
cmp
pushf
mov
negl
pushf
cmp
lea
mov
nop
xchg
xchg
cltd
in
xchg
xchg
mov
mov
cmp
add
push
movsl
mov
dec
sahf
mull
add
fs
arpl
and
add
insl
mov
and
push
loop
movsb
inc
inc
jecxz
pop
in
loope
lcall
das
fdivl
push
xchg
inc
ret
dec
je
insb
addr16
jg
pop
movl
push
inc
lods
icebp
push
push
mov
mov
cmp
outsl
popa
and
adcb
pop
inc
das
pop
mov
sub
iret
mov
insl
in
jns
out
out
fisttpl
fisubl
outsb
mov
inc
fwait
rcl
jae
push
stos
ret
sub
cmpl
pop
dec
addr16
push
ds
neg
iret
mov
insb
sbb
push
cli
stos
xchg
dec
cmp
cmp
add
sub
dec
and
jns
add
das
das
cld
dec
imul
dec
push
inc
inc
arpl
bound
sti
mov
mov
dec
arpl
push
dec
loop
push
sbb
inc
jne
jne
je
das
mov
outsb
xchg
inc
jo
imul
bound
push
inc
popa
outsb
adc
into
mov
xchg
jns
jg
addr16
popa
je
jle
out
jne
xor
and
daa
fbstp
fs
sbb
dec
outsl
outsb
and
jae
mov
jbe
pop
cld
es
aas
ds
outsl
insl
jo
gs
dec
bound
jmp
and
jb
sahf
fldl
ret
insb
popa
mov
dec
imul
ficomps
mov
add
inc
gs
inc
jb
rcll
fildl
daa
daa
pop
and
mov
mov
insb
and
data16
je
jb
clc
shrb
push
push
cmp
add
gs
jbe
pusha
out
outsl
xor
or
lods
and
nop
pusha
inc
jbe
push
jbe
mov
jns
cmp
insl
and
gs
fisubrl
dec
pushw
inc
inc
imul
xchg
int3
jp
cmp
push
js
push
and
pop
es
dec
inc
adc
popa
ljmp
mov
push
jae
pop
in
cmp
pusha
mov
call
addr16
mov
das
and
and
mov
or
xchg
inc
push
push
push
push
dec
imull
mov
inc
dec
push
jne
repnz
add
outsb
enter
ret
pusha
cmp
mov
arpl
push
imul
imul
ret
sbb
jae
nop
shll
xor
das
gs
cmpsb
je
pop
sub
stos
outsb
bound
pusha
push
or
stos
pop
xor
outsl
xchg
daa
xchg
mov
data16
repz
pop
pop
cmp
cmp
add
ds
jns
imul
sub
jnp
sahf
jl
push
addr16
jle
sub
int3
xor
jmp
xchg
mov
sarl
add
sub
sub
jnp
jne
sub
mov
into
or
add
jle
xchg
and
ds
sbb
mov
ja
lahf
push
pop
pop
jne
lret
fstpt
shl
push
jb
imul
push
or
pop
shll
pop
fdivs
repnz
je
imul
fs
jo
sub
jno
ljmp
hlt
in
repz
sarl
push
aam
mov
mov
mov
cmpsl
stc
add
cmpb
jo
repz
insb
push
cmp
repz
dec
inc
inc
cmp
cmp
xor
sub
and
adc
stc
xchg
out
or
add
cld
in
jns
cmpsl
clc
hlt
lock
call
in
aam
jns
out
mov
lods
repnz
xor
jecxz
sarb
repz
nop
insb
dec
and
repz
sti
or
fsubp
push
in
fdivrl
mov
xchg
js
iret
mov
loopne
out
cwtl
je
out
repz
and
loopne
loopne
ds
repz
push
lods
push
cwtl
js
inc
gs
outsb
add
or
outsl
ja
je
push
mov
dec
jb
je
push
loopne
outsb
cli
insl
xor
aaa
dec
mov
test
imul
daa
push
loopne
mov
lea
dec
mov
and
add
push
mov
add
sub
dec
add
push
in
push
test
adcl
in
add
and
sbb
add
rolb
xor
loopne
add
add
adc
ret
shrl
adc
jbe
mov
aaa
add
and
ficompl
out
andb
and
pushl
test
mov
nop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
popf
sahf
lahf
mov
movsl
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
rol
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
lcall
cld
std
ljmp
pop
or
or
or
push
movups
adc
adc
push
call
sbb
sbb
sbb
push
pop
and
and
and
es
sub
sub
sub
cs
xor
xor
xor
ljmp
cmp
cmp
bound
push
insb
insl
outsb
outsl
dec
mov
pushl
jb
je
jbe
js
jp
pop
pop
pop
pop
pusha
aas
jnp
jge
or
jle
ljmp
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
sbb
repnz
pop
pop
pop
aas
incl
xor
std
inc
jnp
cmp
mov
mov
pop
adc
iret
lds
cmp
lock
testl
inc
mov
add
rdmsr
outsl
sbb
pop
fisubrl
imul
ja
fidivl
fs
das
pop
fs
jae
lcall
pop
pop
lods
pop
dec
add
ja
in
nop
out
mov
aam
mov
js,pn
add
es
ds
adc
and
mov
inc
and
jnp
out
push
daa
addr16
push
push
daa
aas
add
ret
out
dec
mov
jae
mov
das
add
int
mov
pusha
mov
test
lods
add
cmp
pop
int3
mov
mov
pop
jbe
popf
testl
rolb
das
jo
jmp
xchg
mov
inc
aad
fiadds
or
jo
aaa
enter
cld
insb
lahf
aaa
jg
lret
fstpt
clc
movb
hlt
test
push
out
ja
dec
cs
hlt
inc
js
mov
repz
pop
aam
pop
ds
dec
mov
mov
inc
add
outsl
lea
jb
inc
das
cltd
testb
jb
fadds
push
repnz
and
in
hlt
hlt
hlt
add
pop
xor
insb
dec
aas
mov
daa
sbb
je
inc
ja
add
ja
fldl
icebp
in
loope
jo
mov
shl
push
xor
scas
in
sbb
dec
syscall
jg
pop
adc
add
xchg
inc
movl
jle,pn
ds
dec
in
adc
pop
outsb
test
shlb
mov
dec
icebp
mov
xchg
pop
xor
adc
push
add
imul
cmpsl
in
notl
ficoms
lret
inc
push
adc
inc
cmp
aaa
addr16
lcall
add
adc
movsb
mov
or
test
mov
mov
dec
pushf
push
das
cmp
rcrb
jmp
xlat
cmpsb
call
sti
hlt
mov
icebp
xor
fisubrl
cltd
lret
mov
lret
mov
cmp
les
sbb
mov
notb
push
mov
or
mov
loopne
cld
and
sahf
stos
push
pusha
shrb
flds
aam
outsb
inc
mov
jp
dec
leave
xor
stc
lcall
test
incl
out
inc
mov
add
ljmp
cs
je
add
and
lock
or
jle
into
adc
aad
dec
jns
push
ss
in
subb
mov
jg
scas
movsl
in
popa
std
dec
jl
or
lods
dec
and
out
pushl
and
add
pop
imul
pop
pop
cmp
addb
or
mov
jmp
imul
xchg
cld
sbb
push
pop
dec
test
jo
call
ret
ljmp
incl
add
sbb
lret
rorl
fidivl
mov
popf
test
mov
jmp
scas
and
xchg
notl
xchg
mov
pop
mov
push
jns
stos
idivb
mov
sar
call
jnp
cmpl
xor
loop
mov
aas
dec
bound
dec
mov
push
dec
imul
sti
xchg
push
jne
xchg
jno
mov
aam
or
aaa
xor
je
pushl
out
jcxz
mov
add
sub
cmpsb
jle
lea
decl
lcall
add
inc
xchg
xor
insb
push
into
fstpl
sub
call
iret
in
mov
jmp
jge
outsl
loopne
xor
lcall
xor
hlt
cmp
pop
gs
outsl
jb
add
pop
pop
bound
outsb
addr16
inc
aas
outsl
jne
pop
adc
ljmp
pop
jb
outsb
add
or
imul
dec
push
jbe
call
pop
or
add
sti
and
inc
orb
add
add
imul
into
or
push
pop
add
wbinvd
outsb
fstl
scas
or
mov
adc
adc
and
pop
inc
inc
push
fucomi
jbe
addr16
das
push
xorps
pop
mov
das
insl
push
and
in
sbb
jb
pop
andb
out
xchg
fildl
xchg
fmull
sahf
sub
dec
outsb
pop
pushf
mov
into
aas
xlat
sbb
mov
and
jne
das
aas
aad
mov
pop
lahf
add
add
inc
xlat
repz
imul
inc
iret
repz
inc
cmp
sub
sahf
cmpsl
stc
cmp
cld
hlt
lock
out
in
call
jnp
out
aam
int3
pop
les
mov
mov
sahf
out
test
pusha
lock
out
push
cmp
or
out
roll
adc
repz
fiadds
fmul
iret
repz
mov
nop
jl
insb
cmp
repz
pop
push
dec
inc
repz
repz
sub
sbb
jge
iret
or
fucomp
loopne
pop
aam
jns
push
push
push
mov
jns
subb
and
adc
jns
testl
pop
pop
repnz
xchg
movl
in
or
jbe
push
lds
or
les
or
or
stos
and
adc
pop
pop
add
aas
adc
add
add
movsb
add
pusha
cmpb
sub
cmp
fisttps
mov
cld
inc
jle
adc
xchg
subb
cltd
subl
cmovo
decl
mov
sbb
in
call
idivl
jle
adc
push
ficompl
mov
xor
enter
fcomp
loopne
jb
jle
aas
mov
pop
rol
inc
xor
cmp
cs
fistl
sbb
pop
test
pop
js
mov
jmp
add
test
xor
adc
add
test
push
add
orb
mov
pop
fs
leave
aas
out
and
add
add
add
cmc
and
ljmp
and
push
mov
test
sub
stc
in
lcall
pop
scas
mov
imul
dec
and
fldl
xchg
push
xchg
in
lahf
sar
ljmp
push
push
andl
jne
push
scas
daa
add
cmp
mov
cmpsb
pop
shlb
sbb
jmp
xor
jle
cmp
lcall
jns
std
cmp
movsl
pushf
sahf
push
movsl
add
movl
mov
jp
or
iret
or
pop
dec
add
fwait
cmpsb
hlt
jb
popf
aam
das
jmp
out
pop
fidivl
in
inc
mov
pop
xchg
scas
insl
xchg
inc
nop
dec
sar
out
xchg
out
mov
fchs
mov
and
xchg
aad
pop
ds
push
and
arpl
imul
mov
jp
jle
lcall
mov
sbb
mov
dec
xchg
mov
lcall
testl
js
sbb
sbbb
and
pop
movsl
dec
cmp
mov
jnp
pop
cwtl
push
outsl
or
out
fs
aad
popl
sbb
mov
adc
mov
push
cltd
outsl
cmp
js
out
xor
lea
movsl
xor
lcall
push
xchg
jp
jmp
shrl
sub
cmp
push
icebp
jae
xor
icebp
pop
call
or
lea
lds
dec
mov
push
out
orb
lds
incl
stos
xchg
orb
pop
popa
or
data16
sub
repz
popa
dec
mov
call
lahf
inc
data16
aad
mov
mov
pop
cs
add
test
decl
and
mov
pop
lods
inc
arpl
push
inc
dec
inc
sti
pushl
mov
sub
or
lds
dec
mov
cmc
mov
mov
and
jno
test
call
jge
repnz
sub
xchg
std
sbb
sub
ret
rorb
mov
push
dec
jo
mov
pop
or
pop
popf
mov
adc
daa
int3
fsubrs
imul
aas
push
inc
rclb
roll
jg
cmp
jmp
add
push
pushf
and
ficompl
mov
add
leave
sahf
jecxz
jo
cld
cli
call
push
mov
insl
sub
xor
push
cs
sub
inc
call
inc
scas
xchg
fstpt
or
das
mov
movsb
fldcw
cwtl
mov
mov
jecxz
les
pop
or
js
rol
pop
and
cmp
gs
add
jg
and
inc
dec
cmpsb
rcrl
outsb
ljmp
movsl
hlt
fs
lods
push
stos
pop
sbb
arpl
mov
xchg
cwtl
adc
or
lcall
dec
stos
xor
mov
and
repz
pop
lahf
adc
scas
ret
shll
mov
dec
decl
data16
jae
or
add
sub
xchg
mov
or
dec
leave
icebp
icebp
sub
jmp
call
out
fisubl
in
rcrl
push
ret
add
call
pop
js
mov
mov
incl
sbb
sbb
sahf
outsl
insb
dec
in
add
adc
in
gs
mov
decl
icebp
or
xchg
pop
sti
imul
push
sub
pop
fwait
lds
xchg
les
call
pop
mov
dec
outsb
push
or
jecxz
dec
pop
leave
sub
push
inc
cmc
inc
and
or
pushl
or
xor
cli
mov
filds
ret
ja
xor
subl
inc
sbb
decl
push
sarb
or
daa
cmc
shl
imul
inc
jge
loopne
into
or
xor
adc
mov
insl
or
sub
lcall
test
cmp
scas
fnstsw
pop
dec
sbb
jp
fildll
ds
lcall
stos
loop
sub
aas
sub
es
shll
and
cld
mov
out
popa
mov
iret
jmp
out
or
in
sbb
and
inc
adc
or
adc
mov
and
dec
sub
notl
mov
jge
loopne
or
stos
lock
je
outsl
jns
xor
incl
lahf
xchg
pop
mov
ljmp
insb
jl
pop
adc
sbb
cmpsb
adc
xor
decl
sbb
xor
dec
subl
push
iret
jnp
cmpsl
mov
or
stc
xchg
cmp
mov
mov
and
push
icebp
cmp
xchg
adc
mov
push
mov
push
xchg
lcall
pop
add
jb
lcall
int
and
fstpl
scas
call
sub
mov
push
and
fucomi
cmc
fildl
icebp
mov
sub
outsb
clc
mov
faddl
push
push
iret
jl
je
lahf
or
dec
cmp
mov
loop
push
mov
popa
lcall
fucomi
rcll
add
inc
push
lcall
mov
daa
out
ja
aaa
test
cld
js
jp
out
nop
push
push
fwait
mov
outsb
ret
cld
inc
insb
gs
call
and
lea
xchg
push
jbe
pop
addr16
sti
sub
jno
iret
add
icebp
sub
ret
fstl
xor
push
mov
xchg
ljmp
test
jae
mov
pop
sbb
jmp
scas
push
dec
jns
pop
pushf
popf
dec
dec
cmc
push
pusha
pop
pop
repz
sarb
bnd
inc
inc
fwait
aad
out
mov
shll
sub
inc
fstl
data16
in
inc
iret
xchg
or
push
sbb
jp
cmp
iret
dec
mov
hlt
lods
leave
mov
ljmp
loope
stc
test
aam
ficoml
lock
or
jno
jo
sub
lcall
cmpb
pop
mov
movsl
sti
push
pop
or
mov
jae
jmp
pop
ja
jmp
or
orl
fs
js
mov
imulb
stc
roll
rorl
fdivs
aam
jl
test
mov
es
fdivrp
jne
add
jmp
movsb
mov
mov
mull
and
xlat
loope
stos
mov
pop
test
inc
add
pop
scas
loop
clc
stc
scas
pop
xor
ss
cmpb
lods
stos
cltd
xchg
mov
push
add
pushf
mov
insb
inc
lret
out
pop
pop
jg
pop
xor
inc
in
jae
flds
sub
pop
mov
push
scas
mov
cmpl
push
cmp
sbb
jnp
xorb
das
cmpsl
orb
jne
out
mov
lods
mov
mov
ret
sub
stos
adc
cmp
pop
mov
fldl
subb
repnz
jnp
mov
repz
out
xlat
jge
jp
xchg
out
xor
push
fdivr
dec
inc
daa
repz
mov
add
push
fbstp
mov
mov
xor
ljmp
hlt
ret
cmpsb
lock
aaa
jl
pusha
call
loop
cmpsl
jo
in
mov
and
jmp
mov
sbb
out
aaa
hlt
cmp
rolb
outsb
pop
jno
pop
lcall
mov
push
lcall
mov
mov
mov
mov
loopne
lcall
fwait
pushf
cmp
sahf
mov
fnop
xor
add
xchg
sahf
ljmp
ljmp
enter
dec
leave
sub
mov
ljmp
fmulp
arpl
jnp,pn
jmp
popl
mov
imul
jmp
mov
ret
stos
push
adc
jl
mov
insb
cmp
outsb
setg
mov
cld
pushl
xchg
sub
rcrl
fsqrt
jo
pushf
xchg
jl
sarb
and
sub
mov
js
mov
mov
int
out
ljmp
add
cmp
outsl
jbe
or
mov
push
pop
sub
jno
mov
mov
lea
push
jl
sub
sti
lahf
imul
push
mov
sbbl
lcall
call
pusha
inc
aad
pop
shrb
mov
cs
cltd
popa
jb
inc
push
push
cmp
adc
call
jmp
jp
add
movsl
cmc
mov
mov
cmp
loopne
into
inc
ret
mov
mov
test
call
xchg
fsubp
adc
stos
mov
icebp
incl
out
fistl
sahf
data16
or
inc
mov
js
bound
mov
jg
xchg
in
cld
inc
ljmp
or
mov
decl
ljmp
ja
mov
test
fstpl
mov
int
and
adc
xchg
call
mov
inc
jns
adc
mov
mov
xor
jge
jno
mov
lcall
jo
data16
add
andb
fs
dec
enter
add
test
idiv
pushl
and
xchg
mov
jmp
mov
mov
in
jl
push
sub
cmp
jg
out
push
cli
nop
or
je
mov
out
pop
ret
in
arpl
jmp
or
ret
pop
sub
or
imul
dec
adc
mov
or
sub
mov
add
loop
xchg
call
ret
daa
mov
enter
xchg
sub
xchg
dec
cmp
sub
lcall
sub
mov
mov
js
pop
outsl
or
es
and
test
dec
jb
arpl
mov
add
sahf
mov
fcom
jmp
xor
jg
mov
xor
int3
addr16
outsl
stos
je
fwait
test
push
adc
out
decl
in
pop
push
aad
push
cmpsl
lds
fmull
xor
xchg
push
lods
mov
jecxz
out
clc
call
push
push
cmp
cmpsl
xorb
fstps
call
sbb
fists
addr16
dec
test
adc
pop
iret
push
mov
push
mov
decl
push
incb
push
data16
jg
in
mov
sbb
scas
aad
xorb
jnp
jmp
xchg
and
setge
incb
or
test
cmpsl
popa
jne
adc
add
cli
arpl
add
sub
cs
lahf
pop
ficoml
cmpsl
pop
cmp
sbb
cmp
push
arpl
aas
cs
lret
sti
ret
sbb
mov
or
ds
mov
mov
leave
sbb
mov
andb
int3
xor
sahf
nop
or
jmp
outsl
data16
out
repnz
jg
stc
jb
movsl
sbb
dec
xchg
rcrb
xchg
xchg
or
adc
loope
xchg
fucom
ja
fcoms
cmp
cld
fsubrl
out
xor
mov
push
or
test
movsl
mov
jge
testb
call
rcr
pop
into
out
icebp
punpcklwd
xor
bound
add
dec
mov
fistps
mov
out
and
pop
pushf
lock
jg
xchg
cmp
mov
call
xchg
stos
pop
push
mov
fistpl
in
xchg
decb
mov
bound
call
mov
stos
mov
push
fdivrp
push
cmp
adc
push
cmp
outsl
sbb
jmp
dec
lcall
lcall
imul
dec
in
mov
test
cwtl
xchg
adc
je
popa
cmp
jmp
pop
sbb
xchg
push
js
pop
out
loopne
call
popf
out
dec
nop
sti
movsb
iret
lret
fs
call
jecxz
jecxz
mov
call
in
cltd
int
lcall
insl
cmp
stos
in
orb
sub
jnp
scas
inc
lret
pop
pop
leave
insb
xchg
add
icebp
jmp
pop
loope
test
jne
pop
xchg
dec
sbb
adc
xor
sbb
in
nop
gs
pop
mov
call
rcll
xchg
xlat
xchg
aam
lods
in
mov
int3
add
ss
pop
mov
ja
ljmp
inc
mov
mov
pop
push
mov
push
or
mov
icebp
or
sub
add
xchg
xor
scas
addl
hlt
test
decl
je
ficoms
mov
scas
mov
ds
push
jp
push
pushl
inc
stos
jmp
sbb
out
sub
cltd
adc
sbb
cwtl
sub
bound
jmp
adc
popf
dec
push
mov
cmc
mov
cs
xor
int3
mov
imul
lcall
inc
cmpsl
call
clc
sbb
pop
ljmp
xor
dec
cld
cmpsl
test
inc
adc
push
icebp
shll
or
inc
add
nop
mov
das
dec
push
push
sbb
adc
xchg
jmp
cld
decl
mov
repnz
cmpl
add
out
andl
out
cli
jne
xchg
xor
mov
imul
xchg
fimull
mov
push
aam
rol
sbb
das
adc
mov
das
xorb
aas
xchg
mov
mov
push
jge
popf
pop
push
xchg
cmpsb
pop
push
add
adc
call
cmp
in
scas
xor
into
push
xlat
mov
loope
push
adc
pushl
mov
sub
fstps
in
sahf
inc
push
pop
popf
jl
fsubl
fdivrs
adc
mov
pusha
sbb
aas
cmp
cli
aas
jl
lcall
push
shll
pusha
add
test
xchg
bound
jbe
push
stos
pushl
fistl
mov
xchg
sbb
dec
mov
mov
out
pop
ljmp
and
adc
out
mov
jle
pop
sti
pop
xchg
ljmp
cwtl
inc
data16
bound
outsb
or
or
push
xchg
mov
sbb
out
rcll
stos
iret
xchg
cmp
jno
push
je
pop
and
loopne
insl
shlb
fmuls
lcall
cmp
cs
cld
clc
jns
push
inc
rcl
xor
add
ljmp
rcrb
xlat
loope
aaa
lret
stos
pop
xchg
pusha
stos
ret
fs
fisubrs
test
inc
pushf
pop
pop
fwait
out
insl
sub
aad
adc
pop
mov
jbe
push
call
jmp
ret
dec
scas
jg
xchg
dec
enter
mov
sbb
mov
dec
push
decl
mov
cli
mov
in
pop
push
mov
sbb
cmpsb
mov
push
mov
aam
js
mov
and
push
adc
push
fdivl
loopne
test
inc
mov
testb
jp
lods
call
lcall
je
or
jp
xchg
mov
call
mov
fs
lock
mov
mov
adc
cmp
int3
stos
jle
dec
addb
push
lahf
fsubrl
pop
lock
inc
aad
mov
nop
mov
mov
decl
xchg
xlat
jecxz
dec
adc
in
outsl
aam
rep
xlat
arpl
push
shll
incl
ret
movsl
jb
jecxz
stos
es
push
addr16
push
outsl
fisttpl
dec
out
mov
mov
bound
incl
pop
test
leave
cmpsl
lret
dec
adc
mov
dec
arpl
mov
std
in
insl
stos
in
pop
mov
pop
xchg
pop
ss
push
add
lock
pushl
jmp
mov
inc
mov
fsubl
jb
lods
and
xchg
call
sub
dec
outsl
push
sti
pop
ret
cmc
mov
arpl
pop
xchg
jp
jg
cwtl
pop
scas
jge
daa
cmc
decl
fdivl
xchg
cmovg
jo
jo
fisttpl
daa
and
cli
call
imul
push
jbe
sub
adc
push
adc
aad
jge
mov
iret
dec
pop
jmp
add
sub
push
add
mov
pushl
addr16
jge
loopne
rorb
test
or
lret
jnp
mov
incl
sub
shl
cmpsl
adc
jl
loope
out
ja
and
mov
xor
inc
pop
jl
dec
pushl
loop
into
mov
sub
push
mov
ja
mov
xor
sarb
lcall
sub
test
fdivl
adc
ljmp
pusha
pop
outsb
sub
decl
mov
adc
insl
jl
into
lock
jmp
mov
popf
stc
int3
nop
cmp
mov
insl
out
sbb
gs
out
cmp
pushl
std
mov
or
xlat
clc
shll
push
aam
or
in
fisttpll
subb
lret
bound
rcll
dec
dec
movsl
xchg
inc
sub
cwtl
ljmp
mov
sub
sub
scas
enter
and
lcall
inc
out
mov
mov
mov
adcb
pop
into
mov
add
scas
push
hlt
adc
scas
stos
sbb
fdiv
push
xor
popa
or
dec
jp
jmp
mov
sub
push
xor
xchg
mov
mov
cmp
xor
repnz
mov
sub
roll
rcl
adc
popa
sti
xor
cli
add
sub
mov
mov
mov
scas
push
mov
xchg
loopne
in
pop
rolb
inc
jnp
aad
aaa
std
or
insl
pop
lret
arpl
sub
sub
test
ljmp
lcall
jle
pop
insl
mov
ljmp
xor
dec
mov
jmp
lcall
mov
inc
lcall
aaa
sbb
pop
daa
dec
cld
jmp
je
adc
imul
lret
cmp
cmpsl
push
decl
sar
adc
es
cmp
shlb
xchg
add
popf
jae
hlt
std
rcll
lahf
sub
xchg
in
rcll
ficompl
cmp
mov
inc
sysret
jb
out
push
stos
movb
fwait
push
test
fnstsw
sahf
aad
je
and
lock
mov
cmpsl
cmpsb
popa
adc
sbb
imul
aad
in
decl
aam
inc
cld
lods
sbb
sti
das
inc
xchg
mov
cmp
sub
inc
pop
and
sub
loope
mov
ret
std
jmp
cs
jno
lahf
cmp
stc
add
stc
cmp
sarb
add
incl
popf
jo
push
jl
addr16
or
iret
scas
test
push
loope
cli
mov
adc
cmc
cs
jne
fcomip
call
icebp
sbb
cli
out
insb
cmpl
leave
int
test
mov
fndisi(8087
aas
adc
push
rcr
sti
xchg
ljmp
mulb
and
inc
in
mov
lods
outsl
sti
movb
lods
pop
push
fistl
ljmp
sbb
or
sub
roll
or
nop
nop
ret
aad
cmp
stos
in
dec
mov
jmp
ret
add
aaa
push
mov
inc
push
mov
adc
lcall
ljmp
xchg
or
pop
rclb
sub
call
inc
mov
out
out
or
cwtl
subb
jne
fistps
add
arpl
push
scas
pusha
mov
inc
in
gs
mov
jecxz
stos
pop
inc
xchg
cmpsb
mov
je
mov
incl
sub
dec
lock
add
lea
mov
popf
or
jnp
or
decl
jb
fstpt
lds
add
lahf
test
push
stc
in
sti
dec
incl
sbb
push
jl
sti
mov
xor
xchg
popa
jae
in
mov
jecxz
mov
aas
sti
inc
sbb
fimull
ss
mov
insl
pushf
xor
mov
adc
dec
pushl
stos
sbb
fucomp
test
fwait
xchg
jne
jmp
rcll
into
cmpsb
cmp
decl
mov
lds
jg
je
popf
inc
out
mov
pushf
cmp
cmpsl
lret
insb
mov
fcmovbe
or
push
lahf
xchg
inc
iret
negl
push
fidivrl
fildll
inc
adc
std
clc
sub
xlat
insb
ljmp
mov
fsubl
stos
pushl
leave
or
test
mov
fnstcw
aam
ljmp
pusha
iret
fdivrp
mov
ja
shl
mov
sar
adc
xlat
xchg
loopne
mov
push
push
hlt
pop
inc
add
cmp
mov
fidivs
mov
xchg
cmc
sti
push
fnsave
scas
push
out
cmp
jmp
mov
lret
xor
dec
xchg
mov
icebp
repnz
sub
pop
dec
pop
xchg
les
cmp
jmp
test
mov
insb
scas
jo
jge
lcall
mov
mov
clc
stc
mov
mov
insl
out
cmp
push
daa
idiv
pushl
cld
movsl
adc
lcall
fs
lods
test
jp
inc
fcompl
mov
scas
test
mov
or
in
out
and
adc
adcb
mov
jmp
cmp
pop
inc
cmc
stos
arpl
clc
jg
push
dec
rorb
sbb
shlb
jne
outsb
sbb
aad
mov
addr16
mov
sbb
pop
dec
push
lcall
stos
jge
mov
pop
sar
mov
xor
cmpsl
scas
pop
dec
out
dec
push
pop
xor
movsl
push
mov
add
xchg
dec
mov
cld
push
js
aas
rcrb
xor
and
push
jl
gs
adc
push
pop
lods
cltd
cmpsb
fcoms
xchg
out
adc
jecxz
int
add
xor
lret
mov
jle
and
scas
xchg
push
cmc
incl
jbe
ljmp
das
mov
imul
jns
xlat
es
aas
sbb
aam
or
filds
mov
pusha
pushf
cmpsb
cli
ret
iret
pop
ret
cs
movsl
and
mov
int3
sbb
scas
cwtl
xchg
sub
inc
push
fbld
pop
aas
sbb
mov
test
fcomip
inc
stos
mov
aam
dec
lahf
into
adc
stos
mov
cmp
mov
ljmp
icebp
mov
imull
enter
jmp
push
call
sub
jmp
pop
adc
scas
jns
push
or
cmp
ljmp
dec
sub
jne
sbb
mov
mov
or
push
sbb
lcall
int
jbe
repz
mov
mov
stos
xchg
mov
pop
leave
push
repnz
pop
mov
adc
popf
incl
test
pop
jb
repnz
iret
movsb
decb
xchg
lea
cmp
push
call
pushf
aas
inc
cmpsb
adc
leave
insl
imul
aas
sub
dec
fs
inc
cltd
xor
mov
enter
cmpsb
insb
xchg
and
lock
jns
mov
dec
popa
pop
rclb
inc
movsb
xor
jne
repz
adc
data16
pop
shrb
pop
cmp
dec
movsl
add
cmp
nop
jp
clc
test
mov
and
and
pinsrw
icebp
jmp
into
pop
mov
cmp
dec
scas
lret
mov
stc
xchg
dec
push
decl
stos
movsb
popa
lret
fistpl
inc
mov
xchg
divl
push
stos
xlat
in
mov
lcall
shrb
push
das
and
sub
jecxz
adc
cltd
loop
lods
scas
es
xorl
push
je
pop
cmp
sbb
jmp
inc
sbb
sahf
dec
mov
push
adc
mov
int
push
and
and
hlt
rep
cmp
aad
out
mov
arpl
ficomps
add
mov
jmp
cmp
push
orl
inc
sub
in
int
push
push
sti
pop
push
cltd
nop
xor
inc
in
inc
test
sbb
outsl
jmp
and
inc
xchg
push
daa
decl
imul
adc
push
sub
cld
jns
jle
mov
adc
or
pop
sarl
rcrb
mov
adc
and
jns
pop
es
aas
mov
jns
mov
les
pop
add
subb
in
jmp
shl
cmp
insb
pop
lcall
jmp
jns
adc
shlb
jp
mov
pusha
or
call
fbstp
jbe
out
iret
add
mov
ss
cli
mov
incl
pop
insb
pusha
push
leave
enter
cmp
test
add
sbb
and
inc
rclb
sbb
std
mov
popf
fwait
pop
stos
divb
pop
and
faddp
inc
xchg
incl
das
les
sbbl
sub
or
scas
cmp
shll
imul
call
pusha
add
std
or
stos
xchg
or
lock
mov
aaa
hlt
incl
cld
movsb
add
dec
add
insl
mov
cwtl
push
jnp
incl
ret
lahf
cmpsl
mov
std
jmp
lret
data16
cmp
fcos
pushl
inc
pop
mov
cmp
xchg
or
mov
int3
fst
xor
int
andl
sbb
rsqrtps
cltd
inc
jns
mov
cmpsl
mov
ret
sbb
aas
inc
stos
shll
xor
jmp
out
into
mov
pusha
repnz
dec
sub
lock
out
mov
outsl
clc
sub
sti
ds
popf
fucomip
mov
push
std
or
jp
fsubs
jl
jb
sarl
mov
cli
out
cltd
cmp
stos
out
push
and
or
adc
decl
jmp
inc
out
aas
lock
cmp
pusha
leave
fmul
and
xor
ret
adc
cltd
xor
sub
adc
push
loop
into
repnz
dec
testl
js
cmp
cmovo
aas
fsubp
mov
cmpsl
dec
cwtl
loopne
lds
das
aam
sbb
loopne
loopne
mov
mov
outsb
cwtl
mov
push
ret
pop
mov
sub
adc
sub
dec
movsb
bound
add
lahf
adc
and
leave
ret
iret
aam
mov
mov
icebp
push
jno
sbb
test
add
cmp
xchg
mov
push
adc
scas
aaa
cmp
loop
dec
scas
xlat
pushf
pop
fs
fists
sahf
movsb
call
mov
bnd
out
cmp
xor
dec
ds
sub
or
jmp
popf
xor
sbb
scas
out
outsb
cmpsl
xchg
ffree
repz
shlb
adc
mov
in
mov
xchg
pushl
mov
and
fcoms
mov
les
sub
pop
sbb
cmp
ljmp
rcrb
push
cmp
stos
sbb
mov
outsb
test
lods
incl
adc
in
pop
add
pop
std
jg
inc
clc
int
mov
sub
lea
sub
inc
jg
ljmp
dec
out
imul
fs
std
pop
mov
jne
mov
decl
push
int3
xchg
call
js
jmp
sub
sti
push
jg
das
movsl
imul
fbld
mov
adc
cmpb
pushf
enter
fwait
pop
jno
jp
out
sbb
decl
sub
fsts
cmp
fisubs
jle
test
clc
xor
fnsave
mov
xchg
mov
shrb
xchg
repnz
cmpsb
aaa
xchg
jecxz
jg
xchg
pusha
push
xor
xor
pushl
aaa
dec
aaa
insb
data16
push
insb
add
dec
fcmove
out
mov
js
sub
ds
cmp
and
pushf
or
daa
lret
outsb
sbb
incl
xchg
adc
nop
pusha
cli
popf
hlt
xor
movsb
in
mov
pop
add
insl
scas
add
decl
scas
aaa
or
xor
pusha
andb
les
inc
loope
rolb
inc
and
dec
add
inc
cmpsl
cmc
jmp
jl
shlb
cmpsb
xor
imul
mov
rcll
loopne
and
fbstp
mov
sub
ret
int
orl
inc
adc
push
mov
dec
add
cltd
adc
sbb
call
jmp
mov
push
cmova
or
mov
pop
sbb
popa
fnsave
add
cmp
dec
fcompl
cmp
lcall
sub
mov
mov
mov
aad
fs
mov
fidivrl
lret
jno
jne
adc
mov
dec
mov
cmpl
addl
mull
jmp
adc
decl
js
out
mov
xchg
leave
sub
fadds
sub
ljmp
ret
inc
test
nop
mov
popa
and
insb
ficompl
stos
fsts
jp
and
pop
int
data16
push
test
jg
pop
call
loop
inc
sbb
lcall
stos
mov
push
es
jge
in
inc
pop
or
std
lret
add
outsl
mov
mov
jmp
sub
std
pushf
jg
popf
pop
push
mov
sbb
sub
dec
inc
shrb
pushl
pop
mov
sub
test
and
in
pushf
xor
cmp
cmp
rclb
das
popf
inc
jecxz
and
xchg
aaa
aaa
push
out
fs
mov
push
xlat
sub
stos
jnp
les
daa
fsubs
in
dec
into
cmpsl
push
fidivrs
mov
leave
jbe
push
cmp
mov
xchg
lret
fcoms
pop
sub
sarb
data16
es
jl
push
mov
mov
movsb
gs
sar
int3
out
xlat
stos
in
jno
xchg
sbb
dec
subb
push
pop
dec
shr
das
mov
incl
jg
mov
je
fistpl
push
jle
xor
leave
cmp
fsts
sbb
jno
fdivr
lcall
int
and
sbb
push
sub
adc
sub
mov
std
ss
das
cmp
mov
sbb
push
cmpsl
test
jb
rcl
xorl
div
sbb
inc
and
ret
nop
xchg
fisubrl
push
lcall
jno
xchg
cmp
out
dec
push
add
loop
cmc
and
mov
xor
decl
in
insl
xlat
adc
or
add
xlat
std
mov
add
into
push
cmp
into
shlb
idiv
decl
bound
dec
popa
mov
cli
leave
xchg
enter
sub
cmp
in
cli
movsb
xchg
fildll
ljmp
pop
push
mov
push
cmp
or
pop
push
mov
fdivs
mov
pushl
push
scas
push
fs
jle
ljmp
and
add
int3
adc
dec
mov
outsl
jp
lods
leave
sub
aad
mov
or
dec
movsl
push
push
xchg
jg
xchg
sbb
sub
inc
in
pusha
in
test
mov
dec
and
push
mov
hlt
dec
ret
jmp
lahf
mov
mov
push
inc
dec
jns
test
fcomip
pushl
leave
mov
shll
divps
clc
jp
pop
pusha
xchg
in
cli
lods
mov
loope
test
xchg
push
dec
dec
jecxz
es
xor
or
cwtl
movsb
decl
clc
sub
push
imul
push
inc
out
xor
xchg
sbb
sub
into
mov
decl
jnp
aas
fucomp
jl
and
mov
push
mov
mov
sub
fwait
decl
test
push
int
pop
pop
ss
cmpsl
ret
pop
add
fisubs
lcall
in
stos
lret
aad
xchg
inc
or
cmpsb
rolb
inc
xchg
test
dec
lods
dec
mov
fnstsw
gs
test
xor
mov
test
mov
dec
xor
ds
mov
repz
xchg
mov
mov
push
adc
and
pushf
adc
mov
or
ss
mov
xor
iret
push
call
cs
ja
cmp
arpl
jp
jle
pop
dec
sbb
dec
dec
cmp
or
mov
das
cld
loop
mov
and
scas
loopne
mov
xchg
jmp
leave
push
pop
mov
dec
out
dec
mov
mov
clc
lock
inc
or
mov
fbstp
addr16
incl
mov
fdivrs
adc
icebp
or
inc
pop
cmp
andb
ljmp
pop
rorl
cmpsl
imul
fldt
mov
pop
mov
es
ljmp
mov
fstpt
xchg
dec
lret
dec
ja
cwtl
lret
pushl
xchg
sub
xchg
add
nop
jmp
js
lea
mov
scas
mov
stc
pop
mov
and
dec
inc
arpl
cltd
or
cmp
loope
mov
js
insb
mov
xchg
ljmp
adc
jg
sub
nop
imul
aaa
pop
mov
cltd
cmp
sub
inc
in
test
cmp
pop
jge
shll
fimuls
sahf
or
imulb
lods
cmp
enter
xchg
xchg
xor
or
ret
jp
xchg
arpl
adc
mov
arpl
rcl
mov
shlb
in
cmp
add
stos
cmpsb
incl
push
push
adc
std
jg
in
mov
and
repz
into
xor
mov
pop
push
and
insl
adcb
lret
cli
inc
add
data16
xchg
testl
xor
and
and
xchg
mov
popa
jg
popa
mov
jb
jns
push
insb
cmp
jg
jmp
pop
out
pop
sbb
hlt
inc
pusha
pusha
mov
and
mov
jmp
fdivp
mov
pop
ret
mov
insl
imul
int3
test
dec
cmpl
fsubrs
rcrl
push
sub
pop
pop
sbb
fdivrl
fbstp
mov
mov
xchg
sbb
jns
jg
or
incl
push
push
inc
outsl
rol
push
xor
jbe
push
jecxz
pop
push
and
or
mov
jmp
ficompl
adc
insl
or
cltd
xchg
fwait
in
inc
sti
pop
mov
dec
ja
pop
pop
mov
loopne
fcompl
in
loope
ret
popa
rcll
jmp
mov
test
mov
add
jnp
leave
fadd
dec
cmpsl
fld
inc
loop
jmp
push
mov
xor
cmc
in
repz
icebp
and
mov
hlt
lods
push
sub
inc
in
stc
and
js
or
test
xchg
insb
mov
mov
dec
fs
xor
pushl
stc
xchg
jae
cmp
or
mov
mov
jge
fwait
lock
xor
call
pop
pushl
xchg
add
mov
lret
inc
hlt
sbb
outsb
mov
inc
add
ret
in
gs
cmp
enter
sub
xchg
mov
js
xchg
inc
and
clc
call
insl
cmc
dec
dec
fiaddl
int3
test
mov
stos
popa
jmp
inc
push
inc
cld
mov
imul
pusha
xor
lds
mov
jg
mov
incl
mov
push
jge
lahf
imul
out
arpl
and
mov
sbb
jbe
sbb
jb
inc
and
and
call
inc
cld
pop
fwait
inc
push
inc
push
adc
xor
fst
ja
daa
xor
bound
xor
ljmp
cmp
jmp
dec
xchg
das
mov
ret
test
loopne
xchg
jmp
push
or
push
or
mov
arpl
dec
push
inc
cmp
out
mov
cmp
cmp
gs
in
fcomi
imul
popa
std
and
andl
pushl
fdivrs
mov
dec
scas
scas
sbb
push
sub
enter
jne
lea
dec
mov
out
fcomip
or
push
inc
sub
jb
mov
push
mov
mov
or
incl
nop
push
sub
xor
sbb
call
ret
int3
testb
sub
jp
imul
aam
inc
andb
lcall
xchg
cwtl
ds
mov
add
ret
fs
ret
sti
hlt
ja
mulb
ljmp
lds
add
movsl
test
movsb
pop
pop
push
jo
cmp
popa
dec
push
std
je
push
pop
cmp
or
add
stos
loope
jae
inc
dec
lea
sbb
fs
outsb
jne
enter
incl
or
pop
adc
imul
adcl
push
and
cmp
lret
incl
adc
loop
jle
or
push
dec
push
cmp
or
popa
stos
ljmp
xchg
push
loop
cli
adc
fildl
repnz
into
les
loopne
dec
fidivrl
mov
into
mov
jnp
repnz
lcall
xchg
adc
cmp
cmp
and
cltd
sub
adc
inc
cmp
pop
cmp
and
push
cli
sbb
push
pop
scas
repz
lods
mov
sarb
jmp
mov
movsb
negl
out
int3
cmp
rolb
adc
data16
stos
jp
test
das
outsb
add
clc
pop
lret
push
mov
ficompl
cmc
pop
push
cmpl
call
fdivrl
into
gs
rclb
sbb
sub
adc
incl
inc
inc
je
pop
adc
mov
ret
inc
dec
add
dec
outsl
sub
dec
inc
imul
inc
movb
mov
cmp
dec
xor
pop
sub
popf
sbb
out
mov
pusha
xchg
fistpl
stos
add
fadd
add
rep
int
cwtl
mov
out
cmpsb
adc
ljmp
imul
mov
jne
outsl
cmp
leave
pop
and
mov
cld
pusha
sbb
stos
loop
lret
xor
inc
cmp
cltd
out
xor
mov
gs
and
call
jmp
rcrb
stos
sbb
cmp
push
inc
lods
sti
inc
push
mov
in
mov
ljmp
push
pop
mov
mov
bound
cmpsb
xchg
mov
lods
jle
dec
xchg
pushl
lods
decl
out
loopne
in
lcall
testb
mov
aad
incl
movb
fwait
xchg
xchg
out
cmp
fs
in
xchg
xor
decl
sbb
push
les
call
repz
movsb
sbb
sub
inc
ds
aad
dec
pop
pop
pop
aas
jge
or
xchg
rorl
jo
sar
jg
sub
mov
shll
jl
mov
mov
popf
add
outsb
subb
call
in
fcmovb
test
sub
outsl
mov
lcall
pushf
gs
sub
jno
stos
jg
dec
lahf
movsb
dec
sub
mov
sbb
mov
pop
push
stos
mov
pop
or
lret
mov
scas
jmp
mov
jg
and
and
pop
stc
jnp
mov
incl
in
jp
xor
sbb
mov
pop
pop
enter
push
or
dec
lods
loope
inc
call
and
cmc
mov
ss
idivb
adc
push
add
iret
cli
inc
addl
jns
sbb
mov
pop
ret
jnp
sub
add
inc
js
push
add
pop
sub
jae
or
push
xor
clc
sub
sbb
inc
std
mov
mov
xchg
push
jg
ljmp
inc
xchg
inc
jg,pt
cs
dec
movsb
push
and
mov
xor
decl
rol
ljmp
mov
sub
inc
mov
xchg
and
std
outsl
clc
lcall
xor
mov
lcall
cmp
inc
pushl
ficomps
jo
out
addr16
pop
or
or
and
inc
mov
add
aaa
jmp
shlb
ficoms
rorb
jg
sub
jo
jg
incl
jae
es
sub
test
ds
aam
push
sarl
pop
jmp
stc
in
insb
dec
dec
inc
aam
out
mov
dec
mov
mov
push
fadds
pop
or
enter
outsb
and
sbbb
xchg
in
sbb
xor
ljmp
mov
aad
scas
sub
xlat
jbe
out
mov
pop
inc
popa
push
decl
push
xor
inc
insl
mov
pop
testl
cwtl
xchg
mov
jmp
mov
lods
mov
test
sahf
aas
add
pushl
fidivl
mov
in
in
cwtl
and
movsb
ja
out
arpl
in
or
pop
mov
into
add
sahf
dec
sub
std
in
incl
movsb
lods
out
test
dec
enter
sbb
mov
xchg
xchg
rcr
jle
add
jo
mov
mov
inc
or
jae
stos
fcmovnbe
cmc
daa
nop
or
ret
out
xor
pushl
mov
dec
iret
bound
and
cmc
das
dec
sub
imul
jecxz
sub
int
out
fs
jb
pop
addr16
cs
mov
fstpt
ret
cmp
xor
lcall
push
sti
test
mov
out
lahf
xchg
mov
pop
add
jmp
jne
adc
arpl
xor
decl
shl
in
arpl
ret
sub
test
dec
shrb
rclb
js
popl
outsl
out
ds
cmp
pop
add
pop
in
pushf
mov
inc
push
sbb
shll
jmp
ljmp
push
adc
mov
fdiv
loope
dec
xchg
mov
loopne
cmp
decl
test
fwait
push
lahf
push
repz
sub
xor
repz
mov
adc
pop
mov
out
cli
das
clc
or
xchg
xor
pop
sti
sbb
push
stos
inc
fcomip
add
mov
add
fs
out
ret
cltd
push
js
test
fwait
nop
jae
decl
cmp
aaa
call
pushf
je
cmc
inc
push
mov
imul
faddl
mov
dec
jl
scas
lret
xor
dec
call
and
and
push
loope
iret
pushl
inc
jmp
js
adc
inc
mov
or
loope
aaa
cltd
loopne
lock
adc
lcall
mov
sbb
movsb
das
push
mov
mov
dec
fwait
jnp
aaa
loop
test
inc
inc
pop
pop
popa
pusha
push
loop
ret
push
test
cmp
adc
mov
lcall
push
movsb
in
test
int3
jb
xchg
popf
stc
pop
push
inc
xchg
inc
loopne
jp
mov
lcall
cmc
mov
test
mov
inc
xchg
pop
in
mov
xor
lcall
jl
cmpl
push
inc
loope
mov
push
mov
hlt
sbb
call
pop
rolb
push
ret
push
mov
pop
and
mov
jmp
jne
loop
pop
aam
outsl
enter
or
cmp
nop
sub
out
or
movsl
sub
std
lcall
xlat
data16
dec
addr16
lahf
xor
es
jns
and
scas
mov
cmp
test
nop
push
dec
xor
mov
ret
dec
repnz
std
xor
pop
push
xlat
cmp
cmpsb
mov
inc
lea
scas
imul
jmp
xchg
pop
jns
and
cmpsb
xchg
dec
xchg
sub
or
xchg
xchg
pop
sti
mov
xchg
pop
mov
popa
lret
stos
sub
adc
sbbl
pop
fs
cld
cwtl
fldcw
jae
test
pop
and
clc
cmp
scas
mov
mov
sub
xchg
loopne
mov
mov
scas
jbe
dec
inc
int
rcll
testb
es
call
and
sub
jo
sub
dec
paddb
pushl
dec
test
push
lret
enter
adc
xor
xchg
mov
mov
call
pop
pop
repz
fwait
mov
add
subl
xchg
push
mov
lds
jmp
adc
cmp
or
inc
imul
xor
lcall
jb
sub
cmp
rol
test
mov
jg
push
in
and
call
adc
sub
inc
jecxz
stc
aaa
xchg
cltd
cmp
leave
in
mov
inc
sti
imul
pop
movsb
dec
paddd
in
pop
sub
repnz
hlt
iret
mov
push
daa
mov
fmull
jg
lods
sbb
push
call
idivb
xor
test
push
lock
into
adc
inc
push
inc
xchg
cmp
cld
mov
jmp
push
scas
leave
sub
test
inc
mov
xchg
mov
mov
sar
decl
dec
ror
pushw
shl
sti
cmc
js
scas
fstpl
push
sahf
nop
addr16
fs
outsl
adc
cmp
push
das
sub
pop
stc
in
push
jns
xchg
daa
lcall
lahf
filds
sub
enter
lods
test
clc
les
push
add
aam
mov
mov
pushf
mov
lds
mov
push
sbb
das
cmp
dec
xchg
and
movsb
gs
adc
aad
stos
dec
mov
jb
lcall
push
ret
add
inc
jp
cwtl
mov
in
or
mov
jl
sub
jmp
mov
cmp
cli
and
cli
inc
pop
and
and
je
pop
lds
out
sub
add
loopne
add
xor
mov
incl
pop
leave
movsb
inc
jge
and
ljmp
mov
lret
mov
add
push
or
mov
mov
mov
pop
pushf
xor
pop
mov
in
xchg
sahf
aaa
cmp
ljmp
cmc
sidtl
sub
mov
or
jae
mov
lcall
in
sbb
bound
xchg
mov
int3
mov
mov
outsb
loope
xchg
aas
xor
mov
mov
insl
pop
xchg
in
adc
pushl
std
push
push
sarb
js
clc
jmp
xchg
jge
jg
mov
cwtl
or
sub
outsl
fcomp
xchg
push
popf
or
jp
lcall
add
sbb
cmpsb
xchg
into
dec
mov
scas
mov
jle
scas
push
and
out
sarl
mov
mov
pop
cmp
jmp
lretw
and
clc
cwtl
aaa
or
lock
jle
call
ljmp
imul
sahf
dec
decb
jmp
bound
or
call
test
fwait
mov
xchg
out
les
push
lcall
loope
jns
mov
decl
cmpb
sbb
xlat
addr16
push
or
add
rorl
push
ljmp
mov
jle
lahf
lret
dec
xor
outsb
mov
stos
out
ss
dec
dec
cmp
ja
enter
bound
lret
xor
cld
jmp
mov
xchg
imul
inc
xlat
ljmp
inc
dec
xor
lods
adcb
lahf
subl
ror
mov
mov
mov
sarb
mov
shlb
ja
fdiv
or
call
sub
sub
mov
jg
adc
and
in
adc
inc
leave
pop
mov
sub
and
pop
jb
mov
lea
dec
icebp
test
call
pop
ret
arpl
jecxz
loop
imulb
push
cmc
mov
dec
scas
sarb
call
add
cmp
out
mov
ret
push
test
cld
xchg
pop
xchg
aam
xchg
addr16
inc
std
decl
add
xor
pop
sbb
jbe
lret
xchg
pop
lods
insb
or
in
mov
mov
std
pop
rclb
jmp
sbbb
jmp
mov
push
mov
jo
xor
inc
jb
mov
std
cmpsl
lods
pop
or
ffree
push
lea
popf
or
lret
xor
pushl
add
push
cmp
mov
testl
xchg
ss
mov
push
or
and
out
push
add
movsb
icebp
sub
pushf
dec
mov
lret
jmp
mov
shlb
ss
popa
gs
bound
aas
jmp
cli
mov
xor
and
jg
mov
pop
and
ljmp
xchg
repz
mov
dec
add
mov
rolb
jmp
mov
decl
jl
push
xchg
adc
je
mov
orb
icebp
stos
and
jmp
ss
jo
jns
and
push
loope
pushl
and
xchg
cltd
jnp
or
and
data16
push
xor
ja
mov
and
cmp
and
int3
dec
jno
cwtl
mov
int
addr16
out
fstps
cmpsl
push
ret
out
push
stos
pop
inc
lea
mov
or
lcall
mov
or
shrl
add
mov
std
movsb
shll
ja
cmp
mov
stos
orl
test
clc
clc
outsb
mov
in
jmp
cmp
fcom
aaa
pop
in
adcb
aad
sub
xchg
cmp
pop
cmc
leave
and
test
mov
ljmp
clc
aaa
inc
pop
out
mov
dec
inc
fisubl
push
stos
xchg
call
and
push
jmp
lock
inc
add
pop
loope
fwait
scas
xchg
and
ss
loop
insb
push
ljmp
cmp
mov
das
pop
inc
adc
aam
cs
dec
pop
xlat
outsb
sahf
pop
dec
loop
sti
mov
cli
push
adc
and
outsl
rclb
scas
xor
ds
push
shrb
inc
xchg
pop
mov
mov
inc
lcall
fistps
repnz
popf
push
xor
ss
jge
mov
call
push
loopne
xchg
mov
inc
pop
bound
jbe
lods
push
subb
les
xchg
decl
mov
push
mov
mov
std
xor
xchg
icebp
push
inc
out
push
insl
mov
lods
mov
jmp
and
cmp
pop
xchg
cwtl
add
jns
lea
mov
std
inc
call
cld
call
test
xor
xchg
dec
jge
mov
mov
ss
ret
pop
xchg
decl
pop
xorb
bnd
xorl
cmp
out
mov
sahf
call
push
mov
xor
sub
push
lret
ja
in
dec
push
inc
lods
xchg
mov
das
rol
xchg
rsm
test
cld
pushf
push
addr16
scas
lock
into
cmp
or
call
cmp
dec
leave
inc
adcb
and
or
lret
sbb
jl
ljmp
lret
and
sub
jae
leave
fisttpl
add
xor
inc
xor
stos
lcall
ljmp
int3
push
xchg
pop
into
add
xchg
jnp
or
icebp
jmp
mov
sub
fsubrs
ret
mov
pop
das
xor
jmp
sbb
shrl
mov
add
and
decl
aas
loopne
arpl
xor
fdivrs
sub
in
int
inc
pop
fsubrs
cmp
mov
in
push
xor
aaa
fsubrp
sbb
push
xchg
repnz
lahf
mov
pop
aad
mov
jo
rcrb
aam
pushf
or
les
test
hlt
icebp
cmp
inc
inc
insl
jl
enter
or
add
adc
pop
jae
mov
sarb
sbb
cld
jb
lcall
nop
jbe
test
xor
mov
fld
sti
pop
xchg
rolb
cmp
call
pusha
cmp
sub
add
mov
mov
in
xor
jge
shll
push
lods
clc
repnz
xor
xor
pop
sub
pop
inc
call
jmp
sbb
bound
and
out
imul
and
push
add
jne
and
popa
clc
push
mov
push
fsts
loopne
mov
outsl
xchg
inc
push
orl
jmp
add
ljmp
adc
stc
dec
xor
aaa
data16
inc
cltd
vmovaps
jmp
mov
popa
pop
cmp
mov
test
mov
jnp
call
and
jl
jno
shlb
cmpsl
test
inc
adc
mov
mov
stos
lods
xor
popf
daa
icebp
mov
call
sub
scas
or
icebp
lcall
leave
pop
ret
iret
add
push
mov
outsl
sbb
incl
jecxz
inc
mov
mov
bound
mov
push
pop
aam
repnz
jp
pop
pop
mov
and
mov
ret
xor
mov
outsl
scas
xor
and
sbb
xor
pushl
mov
pop
out
mov
add
xor
push
enter
pushl
cld
mov
or
fs
mov
jl
pop
xchg
and
inc
or
divl
std
pushl
add
in
stc
fisubl
psrlq
mov
lea
sub
bnd
jmp
push
pop
jp
and
inc
cli
sbb
repz
xchg
mov
push
out
cmc
pusha
add
cwtl
add
xchg
dec
leave
inc
sbb
xor
adc
fisttpl
cs
adc
cmp
gs
rcrb
cmp
inc
pop
xchg
cwtl
in
jmp
add
enter
mov
decl
jne
jo
lret
xchg
loope
hlt
xor
lcall
and
sti
push
out
in
in
ja
data16
mov
in
lods
sub
das
clc
ljmp
lea
clc
pop
scas
adcb
call
pushf
call
imul
incl
popa
mov
cltd
dec
dec
sub
imul
or
sub
and
ljmp
lds
xchg
repz
mov
lods
jnp
clc
sub
pop
mov
lcall
or
cmp
push
inc
aas
mov
mov
fldenv
xchg
cmpsb
push
sbb
js
dec
jo
ljmp
xor
xchg
or
punpckhbw
mov
into
push
fisubrl
aad
leave
xchg
add
in
aam
scas
fs
and
or
jg
repnz
fdivr
inc
divb
ljmp
lret
shrb
daa
push
mov
pop
cli
inc
push
adc
ljmp
lcall
add
add
std
sbb
or
sbb
fnstcw
mov
pop
add
push
mov
sar
mov
loop
push
sub
mov
mov
push
in
stc
push
call
xlat
in
or
push
sbb
aaa
pusha
insl
adcb
incb
scas
pusha
in
xor
jg
call
jge
fstps
pmaddwd
pop
or
cmpl
aaa
popf
mov
sub
pushl
ljmp
es
mov
jp
notl
pop
mov
pop
in
decl
into
cmp
jb
hlt
mov
je
jns
sahf
neg
xchg
dec
or
decl
pop
jne
mov
xor
mov
push
frstor
addb
dec
fistps
mov
out
ljmp
push
sti
sbb
push
popa
xchg
dec
arpl
lcall
fcomi
aas
insb
dec
nop
subps
push
mov
cmpsb
adc
test
in
adc
jmp
pcmpeqb
mov
push
into
mov
or
jno
xchg
jg
movl
lock
jnp
setp
in
jg
mov
mov
repz
mov
divb
mov
jmp
or
hlt
aam
jns
ja
sbb
mov
push
fcmovbe
ret
test
call
mov
push
xchg
in
test
sbb
fincstp
aad
mov
pop
or
xchg
add
ljmp
inc
adc
lcall
fs
fcmovnb
out
je
jg
fistpll
jb
sub
or
pushf
aam
clc
lcall
xor
dec
mov
mov
ja
or
adcb
cmp
fs
mov
mov
cmpsb
pop
pop
repz
divl
lock
jo
xchg
or
mov
inc
cwtl
push
arpl
mov
cltd
dec
sub
push
add
mov
call
pop
out
fisubrl
frstor
jl
pop
or
xchg
mov
bound
pop
lock
or
pushl
loop
push
rcrb
test
sub
push
sub
pop
cmp
push
mov
xlat
push
sub
pushl
jl
movsl
jae
jae
inc
data16
jnp
xor
mov
popf
xchg
mov
lds
jmp
or
xor
das
mov
mov
mov
mov
xor
cld
cld
rolb
mov
mov
sub
and
jbe
scas
dec
lret
je
xchg
cmpsb
cld
mov
and
xor
cmp
xor
or
cltd
lds
out
adc
insl
adc
in
ljmp
cli
cwtl
fists
dec
mov
nop
loope
ficoml
pop
or
repnz
mov
or
stos
mov
pushl
negl
test
fildll
xor
insb
cmp
or
jo
xchg
pop
push
xor
inc
push
incl
and
jb
into
sbb
ljmp
sbb
push
mov
add
rcl
mov
push
aam
lahf
jne
and
xor
lcall
inc
setae
mov
outsb
pop
push
movsl
idivl
daa
or
ljmp
insb
adc
cmp
push
fdivrl
mov
aam
loop
mov
dec
dec
push
outsb
mov
mov
mov
cmp
or
xchg
outsl
rcl
cmp
outsl
fcomip
insl
nop
mov
insl
icebp
jmp
and
repz
in
lcall
enter
and
gs
add
addr16
sbb
clc
and
lcall
fnsave
in
xchg
shrb
pop
adc
or
call
icebp
lods
push
xchg
mov
cltd
mov
aad
push
jno
xchg
scas
add
add
dec
lcall
rcll
cs
xlat
shrb
inc
cs
pushl
jno
lods
bound
loopne
sub
cmpsl
add
push
cld
in
cmp
or
mov
out
jno
sbb
and
repz
cld
aas
cmc
mov
jg
inc
rcl
cli
cmp
dec
sbb
jp,pt
ljmp
lcall
mov
in
mov
aaa
ret
ja
push
jg
sbb
and
decl
fldt
mov
jns
ss
xor
dec
sbb
mov
pop
jbe
push
xchg
cmc
adc
jns
stos
adc
cld
sub
addr16
lock
incl
popa
sbb
icebp
aaa
movsl
jge
in
mov
mov
lcall
aaa
sub
scas
sub
push
push
stc
sub
pop
data16
aaa
sbb
dec
pushf
lret
imul
jmp
xchg
jp
mov
jae
lcall
pop
inc
insb
test
dec
xor
mov
call
pop
sbb
adc
pop
add
in
push
mov
push
scas
loopne
push
lods
imul
dec
jg
call
leave
sarb
lahf
sbb
fimuls
fcomp
sbb
sbb
jl
jmp
testb
in
xlat
pop
dec
jmp
dec
andl
int3
cli
test
out
jb
jmp
dec
fucomip
push
pop
dec
test
aaa
inc
mov
mov
push
lods
sbb
cld
jne
ljmp
dec
mov
and
iret
lea
mov
ja
pop
jmp
add
pmullw
mov
imulb
fwait
sahf
lret
test
sub
loopne
and
inc
bound
ret
incl
test
jecxz
cmpsl
ja
mov
dec
xchg
arpl
sbb
ret
fdivp
lods
aad
andb
clc
call
pusha
outsl
cmp
stc
pop
pushf
stos
mov
repnz
inc
mov
int3
push
push
pushl
lods
fidivrs
ret
sub
add
add
jb
ljmp
pop
ljmp
sbb
cmp
clc
je
jbe
leave
stc
mov
inc
frstor
decl
xchg
aas
cltd
jp
add
jne
dec
push
sbb
jno
fists
data16
and
mov
rcr
inc
scas
insl
cmp
xor
fmuls
mov
ljmp
xor
add
mov
add
jl
data16
in
fsubrp
aas
mov
and
push
cmp
pop
pop
lods
call
push
dec
xchg
movsb
cmc
dec
xchg
stc
mov
lds
mov
pop
dec
fmull
inc
call
incl
xchg
sbb
jmp
xchg
ficompl
push
or
icebp
int3
adc
jb
shrl
popl
mov
pop
bound
xlat
decl
dec
cmpsb
jno
and
inc
xchg
cmc
icebp
mov
test
fcomps
lcall
popa
lods
dec
mov
jae
lea
cmpb
dec
jmp
fwait
and
cmpsb
jns
call
aad
sub
pop
jl
xchg
loop
xchg
jg
or
pushf
mov
xchg
adc
and
jmp
std
call
jp
orl
sbb
aaa
cmp
mov
push
inc
stos
adc
pop
mov
jmp
imul
out
jmp
lock
sub
ljmp
inc
in
aam
xchg
bound
sbb
jg
xor
sarb
loop
shll
shr
js
and
xchg
int3
inc
lcall
push
sahf
sti
jle
cmp
std
add
cmp
push
sub
lock
xor
incl
xchg
pushl
test
pushf
push
sbb
xchg
sbb
and
mov
ljmp
cmp
mov
pop
xchg
lret
cs
out
popl
popa
inc
jmp
and
inc
and
sahf
gs
and
cmp
xor
pushl
pop
or
sub
clc
push
aad
jb
mov
popf
out
jns
icebp
lcall
lcall
push
mov
fnstcw
jg
sub
pop
push
je
popf
jmp
pop
aas
call
xor
call
fwait
lcall
pop
fistps
nop
push
add
cmp
mov
decl
add
cmpsb
mov
xchg
add
mov
pop
int
jne
rcrb
jmp
push
add
in
fwait
sbb
paddusw
ljmp
addr16
pushf
xchg
pop
mov
ljmp
lcall
sub
fwait
lods
or
inc
daa
cmp
or
mov
leave
add
sub
lcall
push
pop
xchg
inc
add
cs
shlb
aad
aad
mov
mov
call
divb
loop
rcrl
xchg
push
pop
pushl
and
pushl
in
push
idivb
push
inc
xchg
movsl
mov
mov
jmp
or
sbb
adc
fwait
decb
lock
test
cli
into
jmp
int3
ljmp
jg
enter
push
cmp
push
sbb
push
ds
pop
jmp
pop
dec
jmp
cmp
mov
lds
mov
push
shrb
call
sarl
adc
xor
mov
sbb
jmp
lcall
out
call
lods
mov
outsb
loopne
popa
jmp
jge
int3
push
pop
pop
mov
loope
shrb
mov
xchg
fistps
loop
inc
inc
inc
mov
adc
inc
mov
jne
cltd
filds
repz
gs
lcall
xor
mov
cmp
gs
mov
ret
push
dec
je
xchg
jg
cmp
jle
lods
cwtl
imul
jbe
cltd
stc
push
sbb
jle
jae
cltd
xor
xor
scas
jmp
test
xor
pop
out
dec
loope
cmp
xchg
mov
sbb
jl
adc
mov
cmp
lcall
jl
push
mov
movsb
loopne
dec
or
xchg
lahf
loop
es
add
sar
decl
push
imul
pop
call
es
dec
lcall
decl
cltd
dec
xchg
lcall
ss
adc
popa
xchg
push
aad
sbb
mov
mov
mov
shrl
test
pop
into
sti
sbb
sbb
jmp
in
add
es
jmp
xchg
aas
push
arpl
fs
push
fbld
sar
cmp
adc
cmc
loopne
xor
test
loope
mov
xchg
xchg
xchg
add
incl
adc
out
add
lcall
shrl
mov
dec
lock
sbb
call
mov
enter
mov
sti
jnp
and
mov
add
lahf
or
lcall
sbb
pop
arpl
nop
sub
notb
test
xchg
mov
jecxz
mov
cld
jns
stc
pop
enter
mov
or
cli
dec
or
dec
cmc
pop
les
pushl
lcall
movsl
cld
imul
adc
inc
xchg
nop
dec
or
xchg
jno
loop
decl
sbb
ret
add
mov
fimull
iret
fwait
jmp
daa
pop
pop
andb
xlat
xchg
or
sbb
jb
sahf
xchg
or
adc
ljmp
les
stos
mov
dec
cmp
loope
out
mov
pop
es
rcl
jmp
cmp
xor
dec
ja,pt
sbb
sbbb
outsb
fiaddl
mov
mov
cmpsb
lahf
jb
ret
shlb
clc
mov
jmp
mov
jg
nop
mov
lcall
xlat
arpl
adcb
xor
sti
addr16
push
mov
xchg
adc
std
sub
and
inc
sbb
and
outsb
inc
in
mov
xchg
xor
popa
and
fnstsw
and
xchg
ficoms
jp
daa
push
aaa
jo
push
mov
bound
pushf
xorl
pop
lock
cli
dec
mov
xchg
cli
cmc
leave
call
jnp
shl
cltd
mov
daa
mov
mov
jle
or
hlt
sbb
sub
je
add
jg
mov
js
jae
js
into
pop
inc
stos
imul
call
add
out
xor
xchg
es
pop
sbb
add
lcall
push
mov
jle
mov
xchg
inc
test
lds
sub
mov
xchg
mov
ljmp
mov
cld
sbb
xor
lret
js
arpl
sub
mov
js
xchg
jb
adc
sti
aaa
enter
decb
sbb
incl
xchg
cld
mov
movsb
adcb
jle
rolb
lods
std
lcall
jmp
das
and
and
inc
mov
ficompl
cld
adc
call
sbb
mov
jle
test
lret
and
inc
inc
mov
cli
mov
jg
jmp
cs
jecxz
ret
hlt
in
lds
sbb
push
fwait
cmpsl
cmpsl
dec
jnp
fs
cli
mov
mov
jmp
xor
leave
or
cmp
push
sub
mov
add
int
xor
mov
inc
popa
pop
mov
sbb
sbb
lahf
cs
lcall
mov
mov
xor
xchg
gs
iret
dec
enter
fistl
sub
pop
cmp
jo
sub
movsb
rorl
sbb
jbe
arpl
das
mov
or
out
pop
stos
icebp
inc
push
adc
test
jp
sub
cmpsb
pop
push
xor
lcall
push
in
mov
call
and
xchg
ds
leave
je
repz
stos
and
in
dec
decl
dec
sub
add
add
pop
repnz
cli
pop
mov
jb
fisttpll
gs
jmp
pushf
mov
repnz
rolb
xor
test
dec
mov
jne
pushf
rol
inc
decl
inc
jle
fsts
out
shlb
into
lcall
call
lods
sbb
add
leave
pop
ret
or
adc
movsl
pop
inc
pushf
xchg
lret
sbb
int
inc
xchg
push
ljmp
aaa
or
mov
cmc
jge
leave
pop
test
lcall
xchg
leave
pop
jb
movsb
lahf
xchg
lock
and
mov
data16
jmp
gs
aas
jge
fcmove
lcall
mull
jns
fcompl
mov
rcll
jge
loop
decl
or
inc
push
ljmp
movb
lea
jmp
xor
push
fisubrs
orb
pop
adc
test
test
mov
lret
add
push
outsl
dec
mov
dec
ret
push
lds
pop
out
pop
fsts
mov
ljmp
rorb
jmp
ja
rclb
sub
add
ficompl
lods
fsubs
mov
jns
call
pop
jg
cmp
ds
pop
les
insl
push
sub
stos
or
dec
pop
or
or
ficomps
cmp
push
mov
scas
lods
pop
xor
mov
xor
call
jg
cmpb
out
and
jne
jns
cmp
sub
out
sbb
pop
mov
inc
jmp
adc
jmp
gs
mov
mov
pop
jo
pop
jl,pt
inc
lret
pop
push
ss
cmp
call
push
mov
je
aaa
movsb
gs
or
and
sub
hlt
inc
test
in
jecxz
cmp
incl
mov
xchg
loopne
icebp
mov
outsb
inc
insb
push
in
xchg
sbbb
jp
mov
sub
clc
movsb
xchg
jmp
mul
in
fisttpll
lahf
in
xchg
pop
aam
inc
lcall
jl
ss
pop
xor
pop
fxtract
pop
add
pushf
sub
jmp
sbb
iret
pop
pushl
xchg
sbb
inc
out
movsl
cltd
fwait
xor
pop
rorb
test
std
xchg
movsb
test
xor
jo
cwtl
call
and
jle
jo
add
ss
imul
cwtl
mov
pop
cld
decl
jge
int
stos
stos
das
enter
jae
and
mov
clc
inc
add
incl
xchg
inc
movlps
ss
in
lock
mov
xchg
jg
adc
aas
fwait
adc
incl
roll
sti
ljmp
fildl
push
add
cmc
decl
jmp
mov
rcl
repz
adc
sub
mov
xchg
gs
subl
mov
ljmp
dec
loopne
jl
out
mov
or
loope
fcom
sbb
sub
rorl
add
pop
data16
cmp
cs
in
pcmpeqd
push
dec
xor
jge
sbb
fdivl
sub
inc
pushf
fadds
std
decl
andb
in
les
loope
addr16
test
decl
inc
mov
jb
fisubrl
and
stos
and
jp
sbb
lods
adc
push
std
push
shrl
adc
push
cmp
or
mov
call
fwait
iret
and
cbtw
ret
dec
mov
addr16
fnstcw
cli
cmpsl
mov
fcomp
push
jg
call
pop
xchg
xchg
sbb
rcrb
fdivrs
ds
fsubrs
fistpl
pusha
std
push
insb
gs
pusha
dec
imul
adc
insb
dec
jmp
ljmp
xor
ss
hlt
ret
sub
mov
push
in
or
stc
call
lret
sbb
sbb
or
repz
ljmp
call
adc
sbb
stc
gs
pop
rclb
mov
stos
jbe
bound
decl
lret
xchg
mov
or
pop
jge
adc
lcall
adc
lcall
test
mov
rcll
aad
cltd
push
cmpsb
ud2
decl
lret
into
jecxz
mov
in
inc
mov
out
adc
stc
inc
xor
jecxz
jb
add
sti
lret
or
inc
adc
push
fcoms
imul
jne
es
lahf
arpl
cmp
inc
pop
fucomp
dec
jns
out
fdivrs
jmp
lahf
inc
jmp
loope
ret
je
mov
cmpsl
aaa
cld
decl
jns
pusha
popf
sbb
lcall
sub
ljmp
incl
push
pop
fwait
popa
fisubrl
cld
andl
dec
stos
mov
xlat
xchg
movsl
sub
push
lcall
adc
loope
jmp
aam
mov
sarb
push
mov
sbb
fiaddl
push
add
lods
mov
mov
cmp
inc
cmp
cli
cltd
ljmp
stc
pop
movl
scas
in
fdiv
xchg
imul
cmc
xchg
dec
lods
dec
imul
and
clc
xchg
scas
sbb
push
popa
mov
mov
xchg
ljmp
cli
jb
sbb
fs
dec
enter
ja
shl
or
cli
mov
xor
push
add
dec
icebp
movsb
pop
sbb
jb
aam
mov
xchg
sbb
cwtl
jg
jo
lret
in
dec
and
sbb
js
jns
lret
outsl
dec
out
mov
decl
lock
cli
jns
mov
or
push
testl
fbld
repnz
mov
pop
jne
pop
outsl
add
adc
out
repnz
inc
ret
jmp
iret
in
xor
dec
pop
int3
clc
mov
call
xchg
cli
ja
decl
inc
xor
inc
jnp
cli
daa
lock
sub
ljmp
ljmp
xlat
ret
inc
or
rcrl
in
es
xchg
xchg
pop
out
mov
mov
je
shr
or
mov
rcr
xchg
cmp
adc
je
call
jbe
fwait
arpl
sub
pop
lcall
ljmp
mov
adc
fistps
push
dec
insb
call
dec
out
cmp
popf
sub
jge
pop
lds
clc
push
fcmovnu
xchg
or
mov
xor
movsl
iret
es
incl
aad
sub
mov
cmp
mov
mov
xlat
inc
outsb
pop
adc
dec
sub
lea
in
xchg
mov
adc
hlt
int
mov
cli
add
fdiv
add
lcall
stos
push
out
jle
jb
ja
mov
roll
into
cld
jg
cmp
pusha
sbbb
pop
ljmp
inc
imul
in
cld
lret
sub
add
sti
fneni(8087
xchg
repnz
aad
testl
jb
mov
pop
lret
pop
mov
or
fbld
xchg
adc
addb
ljmp
fldcw
scas
dec
jg
inc
mov
in
cwtl
bound
add
imul
mov
call
call
xor
mov
push
xor
mov
sub
pop
mov
dec
pushf
mull
ljmp
lahf
and
stos
sub
dec
jmp
test
repnz
shll
js
call
pop
cmp
add
xor
pushf
adc
jle
fisubl
adc
arpl
or
jb
int3
and
add
lret
push
arpl
push
popa
mov
push
jmp
mov
inc
cmp
xchg
arpl
loop
outsl
fimuls
leave
in
incl
mov
ds
ja
inc
jl
test
icebp
rorb
stc
out
mov
data16
fdivs
out
pop
mov
or
adc
sarl
les
mov
xor
decl
adc
push
lds
pop
fcom
mov
sti
xchg
out
stos
lahf
notl
and
or
jmp
popf
hlt
mov
cmpsb
xchg
int
fistl
test
jmp
into
inc
test
aaa
and
push
in
lods
sbb
enter
fiadds
add
jmp
clc
xor
add
mov
sub
fcomip
jg
aas
pop
mov
or
and
mov
cwtl
shrb
sahf
jp
ljmp
push
mov
adc
dec
inc
nop
inc
test
stos
add
cld
push
cmc
push
insl
arpl
enter
add
jbe
dec
cmp
push
lret
cmc
shl
push
int3
test
out
clc
scas
adc
mov
sbb
jo
cltd
nop
cwtl
cs
shlb
movsl
push
scas
dec
icebp
outsb
fcomip
xor
cmp
in
jmp
fstpl
in
lcall
imul
sub
push
ljmp
cmp
push
cmp
in
push
dec
inc
and
subb
add
jmp
mov
pop
mov
push
in
pop
lea
cmp
inc
ficoms
rolb
stc
xchg
out
jle
add
jmp
push
int3
xchg
jnp
or
mov
push
xchg
enter
pushl
pop
aad
dec
mov
mov
sub
cltd
push
cmc
fldt
pop
mov
dec
inc
ja
cmp
ljmp
mov
push
and
and
cmpsl
ret
xchg
dec
ret
mov
repnz
sbb
negb
jp
and
clc
lret
subl
inc
xchg
xchg
insl
inc
das
outsb
cmp
sbb
out
sbb
decl
icebp
add
xchg
sbb
or
dec
lret
pop
movsb
lahf
repnz
dec
scas
rcll
dec
incl
push
data16
xchg
cmpsb
jmp
in
lea
or
push
sbb
dec
pushl
or
adc
and
loopne
inc
add
iret
xlat
mov
or
add
xchg
jns
incl
push
xchg
push
jecxz
add
ja
cld
fs
jp
loop
pop
gs
test
insb
orb
cmp
ljmp
pop
jo
cmp
push
mov
scas
cs
mov
movsl
add
jmp
rcrl
jecxz
andb
lock
jns
insb
jb
mov
nop/reserved
push
stos
ret
insb
in
loope
mov
jb,pt
fcomi
adc
data16
inc
aam
call
pop
cmp
repnz
or
loopne
int
dec
xchg
scas
call
inc
lods
push
dec
lret
cmp
mov
movsb
shlb
daa
clc
dec
add
add
inc
cmp
dec
sub
mov
jbe
aad
cmp
mov
sbb
xchg
das
cli
jmp
push
test
inc
or
push
or
popf
push
adc
pushl
xor
adc
adc
xlat
sub
adc
jb
mov
jg
ljmp
jg
or
std
adc
scas
sub
icebp
insl
scas
pushl
and
decl
pop
jae
ja
in
adc
mov
xor
push
add
mov
pop
push
cld
icebp
cs
decl
divl
imul
jp
je
call
cmpsb
push
pop
mov
sub
cmp
ss
push
add
xor
lahf
inc
jbe
mov
sub
sub
ret
outsl
push
inc
add
lcall
pusha
stos
or
test
sti
enter
mov
repnz
push
cmp
incl
enter
xor
push
or
jle
sbb
incl
push
iret
jp
shl
into
gs
push
int3
sbb
outsl
push
stc
sbb
xor
sbb
xor
test
push
push
lcall
jg
mov
jecxz
or
xorl
adc
cmpsl
insl
inc
xor
ljmp
push
std
bound
jno
cmp
xchg
push
pop
ret
adc
adc
pop
mov
out
jmp
test
aam
and
or
rcrl
mov
cld
jmp
mov
ds
jg
xchg
xor
roll
cmp
ficoml
mov
fs
mov
mov
stc
ja
das
clc
incl
mov
out
pushf
xchg
int
pop
call
mov
and
dec
inc
addr16
cmp
add
add
cwtl
sti
push
add
scas
ret
push
je
sarl
add
test
shlb
cmpsb
fcmovb
leave
mov
cmp
jg
mov
sbb
adc
jno
push
pop
loope
jns
and
mov
xchg
sub
mov
negb
or
inc
ret
data16
rclb
jns
outsb
sbb
push
jb
lea
cmp
xor
pop
and
inc
mov
pop
cmp
cmpsb
ret
jo
mov
jge
dec
es
sbb
cmp
sbb
sub
decl
dec
cwtl
pmulhuw
or
scas
scas
sarl
fwait
or
daa
xchg
add
sbb
imul
jg
dec
aaa
mov
jmp
jmp
add
in
imul
jl
dec
pop
adc
cmpsb
xchg
aam
gs
aaa
xchg
sbb
jmp
xor
cmc
mov
pop
push
mov
incl
mov
in
in
cmp
or
or
aam
fcmovb
dec
clc
mov
cmp
push
out
cltd
fnstsw
int
lods
js
and
lcall
out
mov
subb
fmuls
mov
imul
xchg
int3
hlt
outsl
pop
inc
shll
call
pop
dec
idiv
addr16
rcrb
scas
insl
mov
fst
or
idivl
shlb
lcall
pop
js
jo
jno
lds
xchg
adcb
mov
dec
push
jge
mov
decl
lock
xor
nop
lret
cmpsb
adc
aas
addr16
mov
xorl
adc
in
repz
mov
xor
and
leave
xor
mov
pushl
hlt
mov
cmp
mov
jne
fisubrl
jmp
inc
icebp
bound
loope
mov
add
mov
jge
sbb
std
lcall
jb
adc
or
push
inc
sub
dec
sahf
int3
fcomp
xchg
out
gs
bound
lretw
out
jne
and
lock
decl
cltd
jp
xchg
xchg
mov
mov
loopne
and
out
xor
dec
dec
cmp
call
cld
fists
mov
adc
push
mov
push
lds
imul
das
cli
pushl
ja
push
rcll
lods
repz
push
pop
add
cmp
mov
mov
mov
sub
mov
mov
ja
in
pusha
mov
jmp
xchg
mov
fstpt
sbb
icebp
js
mov
cmc
decb
mov
incl
sarl
mov
std
scas
notl
cs
inc
jne
and
mov
pushl
stos
cli
mov
nop
push
push
and
mov
fcmovb
jl
pop
push
add
cltd
bound
sub
cs
inc
adc
leave
fs
ret
int3
mov
adc
inc
test
fldl
rclb
dec
add
pop
fimull
push
in
xor
or
out
add
leave
dec
movsb
lcall
xor
xchg
les
jns
sub
jecxz
rclb
lea
sbb
imul
mov
arpl
sbb
mov
iret
or
dec
test
push
jecxz
in
fstps
popa
lods
or
or
dec
cmp
les
aas
sti
stos
mov
icebp
or
into
inc
pop
jp
push
in
push
or
and
jmp
push
stc
push
mov
fidivs
jno
mov
add
outsl
jecxz
pop
cmp
sar
lcall
pop
jle
loopne
aad
cmp
dec
inc
cmpsb
je
adc
push
adc
clc
std
icebp
lret
shl
aaa
adc
xchg
jb
jo
stos
pop
dec
xor
adc
jmp
test
dec
adc
std
ficoml
cs
jne
mov
lock
ret
daa
mov
ud0
incl
add
dec
adc
sarb
xor
push
sub
sahf
hlt
dec
or
mov
inc
mov
cs
sbb
push
jl
insl
or
stos
jecxz
mov
cwtl
cmp
decl
lods
inc
or
inc
add
xchg
fmull
loopne
inc
dec
outsl
push
dec
mov
lcall
cmp
dec
mov
in
jg
inc
xchg
push
jb
inc
icebp
mov
cmpsl
inc
insb
cltd
push
addr16
nop
rclb
pop
enter
sbb
inc
bound
data16
cmpsb
jge
jmp
test
add
mov
insl
js
movsb
mov
ret
ja
call
into
btc
cmc
das
rclb
mov
adc
cmp
inc
jne
lahf
sub
aas
lcall
and
dec
call
sbb
jb
popf
pop
inc
fmull
daa
mov
out
in
mov
aad
lock
adc
mov
xor
mov
js
or
ret
sar
xchg
mov
inc
gs
dec
xor
pop
test
in
dec
enter
int3
sbbb
and
insl
lahf
adc
ljmp
adc
mov
jnp
sub
pop
add
cs
adc
inc
imul
fwait
cmp
mov
mov
push
mov
mov
sbb
or
add
pop
sub
dec
shll
or
push
and
dec
cwtl
fmuls
mov
jbe
inc
pop
testb
mov
lcall
lds
insl
cwtl
or
mov
cmp
aaa
data16
mov
or
add
and
cmp
hlt
scas
xor
xor
and
cld
sbb
lcall
ret
jns
mov
push
out
lds
pusha
mov
and
add
adc
fcomps
jb
cmpsl
jb
cmpsb
pop
aaa
hlt
shrl
and
cmp
lods
pop
insl
and
pushl
stos
push
xor
mov
pop
test
fidivrs
xor
jmp
jle
push
add
jb
div
pop
or
insb
sub
inc
push
xor
les
or
jg
push
inc
mov
or
jb
les
sub
sbb
inc
jl
decl
jge
sbb
mov
push
rcll
mov
popa
adc
adc
outsb
fdivp
cltd
push
dec
js
pop
jmp
stos
lret
es
stos
stos
aaa
faddl
pop
shlb
bnd
call
xor
or
std
mov
mov
loope
dec
push
mov
dec
mov
ret
aas
adc
pop
and
pop
data16
in
nop
fs
cmp
mov
ljmp
pop
jns
sub
shrl
ss
in
mov
pushl
mov
addr16
stos
rolb
jnp
cmpsb
ret
mov
sahf
xchg
jle
pop
pop
jnp
mov
ja
test
ficompl
xchg
inc
mov
xchg
incl
or
pop
fstpt
in
mov
popa
and
lcall
xchg
cmc
xor
jmp
fmull
push
jns
jl
and
gs
jnp
mov
dec
aad
movsb
scas
out
rcl
cmp
stc
jecxz
jp
test
adc
jecxz
push
inc
ret
addr16
and
inc
jae
pop
adc
fiaddl
fsincos
lret
push
or
mov
inc
decl
call
pop
push
int
std
je
jnp
push
jbe
out
jne
lret
add
sar
ljmp
sbb
or
les
lcall
lret
mov
jg
pop
inc
mov
and
inc
arpl
fstp
mov
aas
xor
js
xor
jns
scas
xor
dec
add
fidivl
pop
jae
das
cmp
pop
inc
test
jecxz
or
xor
imul
icebp
rclb
pop
mov
lret
push
or
mov
out
imul
je
fucomp
bound
sbb
pop
dec
stc
push
into
mov
add
and
pop
lret
pop
dec
cmpsb
ljmp
bound
insl
incl
cld
incl
rolb
mov
add
adc
test
call
adc
xor
mov
xor
lods
mov
pop
sbb
fwait
adc
jmp
jecxz
xor
mov
ds
frstor
loope
outsb
cli
ficomps
int
rcrl
lcall
adc
xor
loop
inc
shlb
jae
int
sbb
adc
test
xchg
xchg
mov
pushl
push
dec
xlat
sub
fcomip
pushl
jmp
add
aaa
adc
outsl
lcall
cld
out
cs
mov
int
lcall
mov
daa
fbstp
test
mov
jecxz
sbb
and
fstps
pop
push
or
sbb
stc
pop
xchg
test
sbb
clc
inc
sahf
jmp
inc
or
incl
xchg
loop
subl
cmp
in
add
jns
shll
sahf
lret
add
sbb
jmp
imulb
mov
mov
cmc
add
movsl
inc
hlt
jae
mov
les
and
push
call
js
imul
pop
or
mov
xchg
push
or
ljmp
dec
push
fisubrl
sub
in
adc
sub
push
xchg
push
fs
cwtl
sub
jl
jbe
movsb
mov
jnp
pop
lock
pop
xor
adc
adc
fnstcw
jbe
adc
icebp
clc
les
add
add
jo
sahf
gs
push
dec
jp
mov
dec
xor
fistpll
insb
jp
clc
push
mov
iret
mov
or
push
addb
aas
movsb
cli
mov
lret
jns
fidivrl
ljmp
lret
jbe
sbb
insb
addr16
dec
fs
incl
rcll
dec
int
cmp
xchg
and
push
les
cpuid
jbe
incl
mov
in
notb
repnz
push
cmpsb
push
inc
leave
sbb
jg
push
cmp
pop
std
ljmp
cmp
call
inc
lds
jno
dec
out
push
xor
xor
mov
and
cmp
and
mov
pop
or
mov
call
pop
into
popf
push
jecxz
xorl
and
mov
pushl
jns
push
loopne
out
mov
aaa
ja
in
cmp
cmp
jnp
cmpsb
push
cmpsb
cld
dec
xchg
test
lods
fs
arpl
add
stos
xor
dec
mov
inc
jo
lcall
incl
in
mov
vorps
sub
jb
sar
sbb
loopne
push
js
jg
ret
arpl
pop
jo
and
jns
inc
add
xchg
cmc
int3
mov
lock
ljmp
stc
les
pop
aad
sbb
lods
pop
hlt
dec
cmpxchg8b
push
lcall
call
test
cs
adc
iret
rorb
in
jge
sub
pushl
aad
shr
imul
pop
push
fidivrs
sar
incl
outsl
jge
jb
jp
mov
sbb
fwait
sub
jg
pop
inc
cmp
movsl
pusha
mov
mov
aam
sbb
jnp
fistpll
mov
data16
push
sahf
fcoms
push
jg
dec
movsb
adc
mov
dec
mov
sbb
pop
stos
ja
les
mov
pop
push
lret
sbb
into
and
push
push
jmp
add
push
in
out
aaa
and
push
sbb
xor
mov
ret
cmp
fiadds
scas
and
xor
inc
enter
push
pusha
cmp
call
test
lea
stc
jge
push
daa
repz
mov
xchg
or
loop
push
incl
sbb
mov
scas
aas
data16
movsl
lds
fs
call
sahf
lods
cs
call
pusha
sbbb
pop
sbb
xor
fistpl
mov
lcall
enter
push
subl
iret
xchg
enter
cld
jns
push
pcmpgtw
pushl
cwtl
or
lahf
sub
sub
xchg
and
adc
clc
jg
out
jg
scas
mov
adc
leave
add
inc
pop
subb
test
cld
cmp
pop
xchg
sub
cmp
aaa
xor
mov
idiv
call
lods
fstpt
cli
jl
cld
call
lahf
adc
hlt
mulb
out
or
cmc
push
in
icebp
mov
cmp
enter
leave
jnp
repnz
or
fbld
and
push
cld
iret
add
jmp
sahf
data16
stos
ret
pop
and
outsl
decl
inc
fdivl
adc
cli
inc
and
xor
push
fimuls
call
xlat
call
lods
xlat
mov
movsl
and
insl
adc
gs
stos
adc
xchg
adc
inc
insl
or
push
dec
push
ret
popa
inc
xchg
xor
jmp
push
arpl
js
mov
or
xor
stos
adc
pop
adc
add
lock
push
scas
fbstp
hlt
outsl
iret
je
or
sbb
mov
push
mov
es
mov
jecxz
mov
scas
rcrl
imul
dec
xor
rol
xor
inc
jne
pop
mov
es
or
lret
inc
movb
sbb
loopne
add
je
push
jmp
adc
outsl
fs
and
lea
fwait
jmp
scas
pop
negl
jecxz
inc
sahf
lds
xchg
shlb
nop
clc
cmpb
jmp
jo
call
mov
mov
imul
pop
sbb
shrl
add
dec
sbb
inc
ja
jo
and
dec
jmp
and
sub
imul
add
cli
add
sbb
cltd
jmp
jge
cmp
pusha
dec
movsb
jmp
lret
pop
mov
sar
jmp
aaa
and
inc
push
adc
bound
and
test
sbb
call
dec
in
mov
cmpsb
pminsw
lods
mov
fcmovb
cli
pop
xor
mov
jl
mov
decl
hlt
loope
cmp
mov
pop
mov
gs
ret
jnp
xchg
in
sahf
xor
cmp
xchg
jmp
popa
es
fidivrs
mov
ret
outsb
sbb
incl
outsb
iret
jmp
inc
clc
cmp
pop
ja
adc
inc
movsl
insb
mov
popa
xchg
sti
decl
sbb
cmc
fdivr
push
adc
mov
dec
movsl
test
imul
popf
push
cmp
pushl
sar
in
adc
pusha
aad
xchg
ss
jle
daa
cmp
mov
cmp
incl
stos
xchg
sbb
xlat
loope
outsb
ret
pop
and
cwtl
push
xchg
add
test
lods
sub
test
push
or
std
mov
jl
out
sub
ljmp
and
ret
xor
mov
je
mov
jb
cwtl
inc
aad
das
cltd
pop
pop
add
fstpt
mov
call
jl
pop
lcall
movsb
push
out
inc
pop
daa
mov
enter
jl
jno
incl
fwait
xor
pushl
and
xchg
subl
pushf
test
mov
pop
or
xor
adcb
pushl
dec
xor
popa
mov
popa
fimull
mov
push
or
pushl
mov
inc
pop
cmp
je
ljmp
jp
jns
addr16
call
inc
cmpl
ljmp
int
xor
outsl
mov
xchg
pop
or
push
fmull
pop
mov
scas
inc
mov
das
das
sbb
dec
sbb
pusha
std
lcall
loope
fldcw
jmp
mov
push
movd
and
jl
lret
test
shl
mov
fisttpll
mov
dec
incl
inc
jmp
loop
pop
out
lea
push
shl
jb
mov
decl
test
roll
sbb
pusha
jge
xchg
ja
push
xchg
cmp
ljmp
imul
dec
add
in
pop
xor
mov
jns
in
das
jle
mov
leave
xor
pop
lcall
dec
add
xchg
das
add
xchg
xchg
push
loop
loop
sub
addr16
jmp
mov
ja
sbb
jmp
ds
jmp
into
push
sbb
fidivrl
inc
jecxz
std
out
popf
popf
leave
jno
dec
int3
faddp
arpl
cmc
push
clc
call
push
imul
loope
xor
and
loope
lock
incl
cmp
mov
popa
ljmp
pop
cmp
cwtl
in
lock
sbb
fisttps
std
jl
pop
inc
xchg
aas
push
int
and
push
out
jmp
mov
insl
push
push
sub
push
pop
loopne
jl
rorb
mov
jno
pushf
cmp
push
addps
cli
in
popa
andl
xchg
pop
xor
or
mov
dec
and
ljmp
mov
cmpsl
mov
loopne
or
imul
lods
cwtl
or
mov
movsl
dec
out
xchg
dec
mov
cmp
or
repz
push
inc
daa
iret
imul
std
or
ret
push
inc
int3
mov
fs
inc
mov
in
adc
icebp
jg
bound
ret
int3
fstpl
fucom
jb
mov
sbb
fists
sbb
lock
test
out
cs
mov
incl
in
xor
sti
add
add
xchg
into
scas
ljmp
jmp
aaa
cltd
xchg
movsl
mov
in
addr16
hlt
ds
sbb
imul
ljmp
inc
add
lods
pop
pop
xchg
mov
or
and
lahf
jnp
clc
out
ss
push
lods
dec
sub
sbb
cld
imul
sbb
divl
push
cmpsb
cmc
stos
loopne
lods
and
jmp
rcr
xor
imul
lahf
add
fnstenv
pop
and
mov
jp
aam
idivb
lds
jg
mov
xchg
mov
fiadds
pushl
fndisi(8087
cld
dec
lcall
push
pop
imul
push
sbb
stos
and
jns
decl
mov
int3
pop
icebp
aam
xor
xchg
push
cmp
pop
imul
bound
xlat
dec
sbb
loope
int
in
adc
inc
dec
pop
outsb
nop
jge
mov
decl
sub
push
dec
push
jmp
lods
ss
nop
nop
add
cmc
incl
xchg
push
mov
or
dec
add
pop
add
or
in
jecxz
lds
jg
fcmovu
scas
neg
loope
incl
jmp
pop
movsb
xchg
dec
aam
push
pop
inc
pushl
decl
or
xor
push
cltd
int3
pop
data16
mov
dec
sbb
call
sub
scas
xor
xor
out
ret
sbb
cmp
outsb
dec
js
ljmp
xchg
addr16
xor
fs
inc
xchg
sbb
loop
imul
adc
cmp
call
stc
call
push
or
pop
test
imul
cld
fidivl
jg
adc
scas
jl
fwait
nop
scas
lret
orl
aaa
lret
popa
lret
mov
jb
pop
cmpsl
jecxz
cmc
pushl
clc
and
pop
add
aas
lods
sub
out
popa
xchg
incl
xor
cmpsl
pushf
stos
imul
dec
stc
fadds
jl
mov
fwait
movsl
dec
mov
jg
sbb
mov
and
repz
cmp
adc
inc
dec
decl
enter
imul
sbb
lahf
pop
decl
mov
cmc
outsl
mov
push
sub
sbb
and
lock
adc
pushw
push
in
imul
decb
or
inc
xor
push
cld
insb
xchg
nop
inc
scas
scas
repz
call
std
loop
stos
jne
xchg
loopne
icebp
mov
and
mulb
roll
out
decl
xor
push
div
out
dec
xchg
xchg
jne
xor
in
movsb
inc
dec
ret
mov
ljmp
pop
and
inc
sub
jbe
push
ficoms
xchg
aaa
mov
incl
jae
ret
pop
je
addr16
mov
inc
fcoms
pushl
into
inc
push
je
scas
adc
loope
mov
shr
inc
mov
pusha
int
ret
ljmp
lock
inc
lods
xchg
into
lahf
sbb
sub
jg
mov
dec
mov
mov
jmp
sub
sbb
subb
inc
dec
ja
call
pop
adc
or
inc
icebp
fisubrs
insb
mov
add
mov
xor
fcomip
arpl
xor
jle
inc
xchg
pop
mov
jg
test
or
xor
sub
fwait
push
sub
insl
and
jmp
test
dec
sub
pushl
or
mov
lahf
aaa
cmc
or
cmp
push
pop
xchg
mov
xor
or
decl
jl
jmp
pop
mov
not
jno
cltd
xor
pushl
cs
push
xor
into
das
add
shl
jl
jl
lds
push
adc
mov
test
cwtl
push
or
sbb
mov
sbb
jmp
sub
dec
add
and
adc
rcrl
dec
mov
lahf
adc
ljmp
xchg
sbbl
dec
idivb
xchg
or
loopne
mov
loop
fs
decl
mov
sarb
xor
cmp
fldcw
jecxz
push
sarb
lcall
out
imul
cltd
rcll
push
in
mov
cld
addb
rorl
inc
mov
lahf
add
ljmp
inc
sbb
and
adc
cmc
mov
mov
xor
cmpsl
rolb
jns
aad
sub
xchg
xchg
add
dec
or
idiv
jg
decl
add
ret
int
pop
sub
mov
addr16
pop
fsubrs
sti
jne
push
sbb
lcall
clc
adc
sub
push
notb
push
sub
fs
add
pushl
int
mov
ss
fists
jnp
das
stos
pop
cmp
push
es
pushl
inc
xchg
xor
pop
sar
gs
test
inc
and
jge
jge
xor
call
xchg
xchg
push
cmp
cmpl
pop
inc
icebp
int3
fcoml
hlt
jmp
pop
add
cmp
lcall
rcrl
leave
lods
dec
cmp
dec
test
adc
adc
sbb
mov
test
dec
decl
cltd
gs
addl
cwtl
cs
outsb
dec
pop
mov
jmp
jbe,pt
mov
push
dec
dec
jo
pushf
pop
sarl
or
inc
sbb
idivb
cmp
push
jge
add
movsl
add
xchg
loope
ret
or
dec
and
jnp
adc
dec
mov
pushl
or
mov
aam
in
mov
pop
sbb
in
scas
jp
or
push
push
sbb
pop
jmp
jmp
loop
pusha
lea
mov
repnz
dec
cmpsb
fdivs
and
or
aaa
or
stos
int
or
mov
sub
ficoms
call
sbb
add
fcoms
cmpsl
push
in
jp
lcall
lea
addr16
js
fnstcw
dec
lea
lock
fildl
mov
push
shlb
pushl
sbb
adc
mov
push
movsl
into
cmp
inc
jg
incl
mov
dec
jg
dec
inc
int
xchg
pop
inc
mov
arpl
cwtl
mov
add
mov
call
cmp
js
or
cmc
cmc
or
xorb
cli
cmp
push
jl
ljmp
fdivs
fcomps
sti
test
incl
lods
dec
jns
xlat
or
mov
ljmp
lcall
mov
imul
or
lcall
les
adc
rorl
in
pushl
dec
loopne
setle
dec
fsubrs
stos
out
push
testb
adc
mov
mov
add
mov
rorb
call
and
cmovae
fbld
fnstenv
sbb
sarb
nop
inc
push
js
sbb
fucom
dec
mov
mov
sub
inc
sbbb
xchg
clc
mov
call
cld
inc
add
in
leave
pop
sub
sbb
lahf
scas
jnp
jo
int
call
repnz
in
pop
xor
sub
and
popf
mov
push
sub
cmc
lcall
add
mov
sti
test
leave
jnp
pop
ljmp
mov
mov
xor
sub
stc
push
jmp
and
or
and
fstpl
and
iret
pop
jecxz
and
dec
push
xchg
xor
decl
sub
lahf
ret
adc
or
pop
sub
push
mov
outsl
jns
fistpll
ss
incl
cld
div
mov
jae
ds
scas
jns
xor
cwtl
xor
out
jle
xchg
jge
cmc
das
clc
pop
jns
add
scas
shrl
scas
fisttps
loope
aad
icebp
fcmovb
sub
mov
rcrb
lcall
adc
mov
dec
movsb
mov
xor
idivb
lods
outsl
in
idiv
add
push
xor
lcall
push
sbb
inc
daa
jg
fs
xlat
push
lds
pop
pop
mov
stos
mov
lcall
xor
lahf
int
aad
mov
ret
sti
repz
bnd
mov
adc
fmul
cmp
subl
fildl
inc
mov
mov
in
dec
fidivrs
loop
mov
andb
mov
loope
sbb
adc
jg
pushl
jl
imulb
or
jne
mov
sbb
iret
jecxz
mov
and
call
imul
xor
mul
cmp
adc
push
and
add
scas
adc
jmp
cmp
out
jl
push
push
neg
xchg
movsl
pop
movsb
rclb
mov
iret
and
cmpsb
jnp
xchg
sbb
ss
test
fmulp
adc
incl
js
pop
js
inc
sub
mov
or
fcoml
sub
jecxz
lods
pop
pushl
icebp
add
lcall
push
adc
lret
sub
out
inc
xor
cmp
xchg
mov
adc
inc
hlt
mov
fcomip
jge
xchg
ret
lea
in
sub
mov
cmc
ljmp
mov
ljmp
idivb
inc
mov
push
scas
lret
add
xor
dec
mov
mov
decb
stos
daa
shrl
mov
push
inc
xchg
or
bound
and
jmp
testb
push
in
lea
jge
mov
sub
mov
loop
call
fucom
movsb
loopne
divl
int
mov
clc
inc
fdiv
negb
decl
xor
pop
lods
cmp
fdivr
cmc
imul
push
pop
cld
adc
cld
push
in
stc
pop
jecxz
sbb
stos
pusha
pop
pushf
ljmp
sahf
mov
adc
repz
cli
fwait
xor
lea
ret
and
and
lods
sub
pop
arpl
aam
jae
idiv
imul
dec
scas
or
pop
xchg
jmp
jge
fucomip
cli
into
stc
fcmove
and
cmpb
mov
cmp
lret
mov
inc
pop
push
push
mov
mov
jle
daa
clc
decl
repz
adc
lods
cmp
dec
pushf
jecxz
jmp
mov
jo
pop
ds
pop
xorb
incl
dec
mov
stc
mov
not
daa
lods
movsl
push
loopne
das
jns
in
aaa
pop
insl
lahf
decl
ficoms
out
cmc
shll
mov
jl
mov
dec
sub
or
mov
ljmp
pushf
idivl
out
sub
inc
pop
xor
roll
sbb
push
dec
add
mov
xor
jnp
lahf
stc
pop
outsb
mov
movsl
stc
neg
pushl
mov
adc
jns
jg
rclb
pop
push
mov
sahf
decl
test
decl
sbb
jne
or
push
inc
fmull
or
dec
js
fnsave
jmp
jmp
add
pop
loopne
hlt
adc
loopne
ljmp
dec
mov
ljmp
mov
sarl
cli
adc
mov
les
pop
icebp
pop
lock
lcall
mov
ja
mov
mov
fsubrl
push
in
mov
mov
shlb
lcall
enter
in
stos
das
cmpsb
cmc
adc
loope
jne
push
scas
sub
pushf
daa
and
rcrb
lcall
dec
movsb
add
mov
pop
cmpsl
mov
jl
mov
leave
and
sub
decl
jg
cmp
test
into
imul
xchg
sbb
inc
cld
test
subl
adcb
cltd
aad
or
inc
sub
sbb
mov
or
or
mov
decb
jge
push
sub
je
jge
inc
int3
enter
mov
dec
xor
loope
ljmp
aam
or
dec
sbb
cmp
sbb
cmp
jae
movsb
push
and
cmp
xor
call
dec
add
cmp
cltd
jns
cwtl
bound
mov
mov
dec
pop
lods
sahf
mov
or
not
insb
push
jecxz
cmp
mov
push
enter
inc
dec
jg
mov
xor
sarl
cli
and
movsb
lds
pop
inc
iret
cmp
mov
iret
in
adc
cmpsl
faddp
xchg
push
mov
fists
repz
ja
call
and
jno
mov
inc
fisttpll
bound
dec
fisubl
mov
or
cmp
call
adc
add
rcrb
adc
fidivs
movsl
sub
inc
js
adc
icebp
jmp
pop
mov
scas
jne
sub
xlat
dec
xor
push
addl
mov
jle
jae
lret
hlt
orb
test
pop
sbb
call
jo
cmc
jmp
loope
pop
ss
xchg
sub
or
push
sbb
or
sarb
fwait
popa
mov
pop
add
fsts
cli
out
jo
idivb
lcall
fidivrs
xor
ljmp
mov
push
mov
or
repz
mov
mov
dec
sub
sar
jmp
push
fwait
loopne
xchg
lods
gs
out
nop
xlat
popf
adc
js
out
call
incl
dec
mov
cmp
cli
filds
stos
int
adc
xchg
sub
into
inc
jp
mov
popf
fiaddl
pop
pop
jne
loope
xchg
pop
je
add
dec
shr
pop
cs
dec
nop
ficoms
test
fsub
sub
pop
inc
pusha
fcomip
mov
sub
dec
pusha
xchg
clc
movsb
movsl
adc
cmp
lcall
repnz
and
decl
mov
cwtl
push
cmp
inc
mov
in
incl
sub
mov
jecxz
fcomip
lods
flds
test
cli
push
testl
pop
jg
lods
or
movsl
in
insl
mov
pop
test
inc
xor
mov
xchg
adc
or
cmp
lds
lds
jne
pop
test
icebp
xor
in
push
push
mov
pop
fwait
out
cli
push
vpsubb
sbb
xor
je
sbbb
sub
clc
incl
outsl
sub
pusha
sub
loopne
sti
jmp
lock
daa
out
lock
ljmp
xchg
cmpl
push
lret
jae
cmp
enter
inc
cmp
jmp
movsl
outsb
loope
arpl
mov
scas
sub
divl
popf
inc
adc
pusha
cmp
decl
decb
sub
push
fbld
add
xor
xor
mov
nop
jae
inc
cltd
push
jns
std
dec
xor
push
xor
push
mov
fcmovne
pop
ljmp
sbb
daa
mov
cmc
fldl
jbe
mov
ret
push
xor
dec
in
ficompl
loope
xchg
xchg
ret
addr16
mov
scas
popa
and
jle
js
sbb
pushl
daa
mov
popa
out
dec
iret
xchg
mov
push
call
inc
dec
xor
sub
fs
sub
mov
add
or
inc
pop
adc
push
xchg
rsqrtps
sbb
add
sub
xchg
mov
xchg
xor
pop
cmp
loopne
out
add
push
jecxz
mov
adc
out
pusha
jg
jmp
and
cmp
mov
add
fdivl
sbb
jb
add
mov
aaa
into
sahf
sub
clc
insb
mov
les
lcall
test
mov
imul
dec
pop
scas
outsb
inc
fdivs
shr
adc
lcall
lods
dec
lret
test
adc
push
in
adc
out
rcrb
push
in
pop
sbb
sahf
test
mov
iret
push
ret
adc
adc
lock
sub
int3
out
ljmp
ja
stos
cmc
stc
sub
mov
fcoml
xchg
xchg
dec
jle
push
mov
mov
xchg
sti
insl
jecxz
dec
insl
xor
arpl
sar
incl
xchg
sbb
test
cld
pop
repnz
fsubrp
cld
in
dec
adc
mov
or
jg
or
fsubl
or
stos
xchg
jle
push
les
fs
mov
cwtl
and
cmp
call
add
cmovnp
mov
stc
arpl
push
jo
rorb
sbb
fcomip
aaa
cld
dec
or
push
mov
test
sbb
dec
inc
lods
jbe
dec
push
lcall
call
xchg
aam
pop
or
int3
inc
subl
jge
lods
jne
jmp
or
sub
into
cmp
fildll
rep
inc
pop
mov
push
mov
decl
mov
and
add
in
xchg
iret
ret
mov
out
sub
mov
add
ss
roll
xor
xchg
fcmovnu
cmpsb
dec
mov
mov
xor
push
add
mov
enter
fcos
jg
mov
aam
cmp
lcall
jmp
jae
mov
sbb
adc
ljmp
mov
sbb
adc
ds
mov
rdtsc
xlat
enter
mov
adcb
pushl
push
mov
mov
roll
xor
fildl
sub
ja
push
push
icebp
ljmp
push
stos
dec
mov
or
pop
fimuls
jnp
add
adc
stos
js
cwtl
and
pushl
mov
ss
xor
dec
cmp
xor
jp
sqrtps
inc
scas
mov
scas
push
cmp
cmp
fstpt
cmp
aad
and
inc
aaa
lds
lea
or
test
lock
pushl
sub
cmp
rcr
idiv
push
push
repz
mov
sahf
outsl
push
enter
decl
mov
cmp
cs
mov
lea
sbb
aam
sub
jge
jg
xor
cmp
push
lahf
xchg
and
adc
loopne
pop
mov
cli
fwait
das
jo
inc
push
or
fdivs
jmp
imul
pop
sub
and
shlb
negb
imul
call
hlt
jg
mov
movsl
or
xor
push
jl
sbb
cmpb
negb
xor
mov
or
jge
testb
mov
pop
idivb
call
xchg
mov
filds
or
movsb
dec
lds
movsb
int3
in
push
pop
adc
aad
cld
in
stos
adc
imul
mov
jge
icebp
decl
push
data16
push
xchg
rcrb
aam
xor
xchg
sub
lcall
push
rcll
push
push
decl
je
hlt
xor
mov
mov
add
jmp
add
cmp
dec
inc
cmc
jb
test
xchg
out
adc
incl
iret
data16
sbb
sub
leave
orl
xor
aam
push
cld
jecxz
push
lret
incl
cwtl
out
inc
pop
mov
pop
jo
xchg
pop
mov
mov
fadd
sbb
stos
mov
jb
pusha
sub
rclb
add
jb
js
and
rol
pushl
inc
pusha
cs
dec
test
push
inc
aad
fisttpl
and
add
mov
test
addl
lods
divl
xor
stc
gs
aaa
rcll
xor
ds
and
xor
in
sub
and
ret
ljmp
ss
pop
test
or
in
cmp
mov
ret
cwtl
sbbl
decl
pushf
push
cmp
sub
inc
mov
jb
push
jg
loopne
push
test
xchg
loope
push
call
ss
out
cmp
jmp
imul
and
pop
cmp
clc
dec
and
or
aaa
lret
cmp
adc
ljmp
hlt
fisubs
cmpsl
cli
mov
mov
call
stos
les
scas
fidivrs
mov
add
mov
addr16
fimull
clc
or
sub
and
sbbl
push
cs
incl
popf
ljmp
lock
lret
scas
sbb
jne
ljmp
jnp
out
cli
sbb
loopne
push
sahf
and
outsb
push
xlat
out
scas
sbb
pop
mov
dec
mov
mov
mov
loopne
pop
mov
mov
imull
dec
mov
xchg
push
in
mov
dec
popa
mov
fsubl
mov
outsb
dec
push
or
decl
loopne
xor
hlt
xor
fisubs
jmp
sub
orb
mov
repz
out
jge
lods
sbb
call
movsb
dec
push
xchg
mov
add
jp
aad
mov
adc
or
xchg
mov
shll
jb
aas
mov
test
aam
js
hlt
decl
lret
pushf
push
mov
push
add
lret
int3
shll
je
pop
xchg
mov
push
mov
lret
rcr
jl
add
movsl
stos
stos
push
fcomp
enter
ljmp
fsts
adc
or
mov
jecxz
insb
push
incl
sub
mov
mov
dec
mov
jo
sub
cmc
call
arpl
sub
inc
adc
push
push
adcb
push
ljmp
mov
and
xlat
clc
test
inc
push
jmp
pop
pop
xchg
dec
cld
jmp
loop
dec
loopne
sub
ror
scas
or
jp
movsb
ret
pusha
inc
push
rolb
adc
aam
rclb
ljmp
imul
push
ja
repz
jne
arpl
imul
pushf
adc
jbe
jns
mov
decl
js
xchg
sub
outsb
stos
adc
enter
cmp
pop
incl
mov
add
xchg
cwtl
mov
lcall
fs
jns
lcall
jp
loop
push
fistpl
cmp
and
push
dec
cmp
adc
inc
aas
pop
loope
stos
jno
lods
inc
stos
push
mov
jnp
pop
pop
imul
mov
stos
mov
mov
bound
test
jge
mov
lea
mov
lcall
jo
shl
ja
shlb
or
dec
sbb
and
icebp
sahf
mov
lock
call
mov
jno
dec
fsts
adc
scas
xchg
mov
pushf
inc
sub
sub
andb
fisttpll
loop
orl
or
daa
test
popa
jp
mov
rcl
mov
stos
mov
enter
andl
out
sub
add
cmp
test
cmc
mov
pop
fbstp
mulb
pushl
dec
dec
inc
lock
mov
fwait
jecxz
imull
jnp
dec
testl
stc
aaa
std
dec
push
insl
and
data16
mov
mov
sbb
mov
decl
loopne
xlat
loop
inc
add
jb
call
ljmp
imul
aam
push
add
inc
fidivrl
inc
mov
mov
fidivrl
rcrb
mov
and
leave
out
fstpl
inc
cmpsb
cld
std
mov
pop
mov
jl
mov
adc
fsub
and
out
cmp
sbb
ret
mov
out
lret
decl
pop
sub
add
jmp
jns
loope
mov
dec
ds
call
push
rorl
add
dec
aad
popa
test
jb
sbb
addr16
inc
in
ljmp
pop
lcall
test
xor
pusha
xor
xor
call
out
fimull
jle
mov
push
push
add
imul
push
and
xor
pop
call
xor
fwait
das
cmp
fidivl
icebp
js
mov
pushl
cld
stos
sub
int3
ficomps
test
lret
or
dec
enter
shll
inc
fcomps
movsl
xor
ficoms
cli
push
out
int3
dec
stos
cmpsb
je
popf
cli
outsl
cmpb
cmc
out
loop
addr16
loope
dec
ss
ljmp
in
loop
ja
or
mov
cmc
movsb
mov
and
decb
pusha
mov
or
rcrl
pop
and
cmp
lods
inc
or
dec
mov
push
sbb
arpl
mov
scas
jb
stos
mov
ja
out
or
and
incl
dec
lods
out
outsl
sub
mov
pop
adc
dec
rcr
sbb
aas
cwtl
lods
popa
jno
mov
xchg
push
mov
imul
inc
dec
imul
push
or
push
pop
mov
sub
cmp
push
mov
iret
pop
jbe
mov
incl
mov
xor
outsl
push
add
lods
hlt
jns
adc
dec
ds
adc
shlb
add
cmp
mov
subl
idivb
sub
lods
jecxz
addb
repnz
pop
jmp
xchg
arpl
cmp
pop
mov
add
sar
inc
sbb
lcall
mov
xchg
xor
pushf
jp
xor
cmp
sub
mov
push
and
inc
add
dec
cmpsl
dec
lcall
xchg
jns
push
jg
lcall
fs
repnz
jle
inc
aam
mov
cwtl
pop
pop
popl
sarl
cli
fildll
insb
lods
shll
xchg
jp
or
inc
jle
clc
imul
jmp
lods
add
inc
or
adc
out
int
lahf
pop
mov
cmp
jle
pusha
xchg
pusha
sub
push
inc
cltd
fs
ljmp
cltd
mov
mov
movsb
pop
scas
push
pop
cld
ljmp
xor
loop
andb
xchg
les
push
test
dec
mov
int3
jae
xchg
lret
pop
inc
mul
dec
pop
arpl
jb
jbe
fisttpll
or
or
loopne
pop
insl
mov
movsb
mov
xor
jae
jmp
aam
adc
jge
xor
pop
hlt
popa
inc
cltd
call
xor
fwait
push
aaa
dec
lea
leave
xor
ds
ud0
mov
icebp
add
repnz
and
outsb
cs
in
leave
xor
fsubr
jecxz
mov
pop
fistpl
out
pop
and
mov
mov
scas
outsl
push
shll
pushf
aad
xchg
xchg
sub
inc
and
or
cmpl
incl
mov
sti
push
push
test
outsl
dec
mov
es
xchg
mov
or
cli
mov
ljmp
daa
xchg
mov
add
stc
xorb
cwtl
add
mov
lods
call
cmpsb
incl
mov
cmp
shll
out
fidivrl
out
inc
dec
fcompl
pop
xchg
mov
enter
std
mov
xor
push
insl
repz
pop
rclb
testb
ljmp
mov
inc
bound
in
mov
dec
and
lcall
jg
cmp
mov
dec
mov
cwtl
or
push
fsubrl
leave
decl
jge
mov
and
jnp
scas
push
es
stc
bound
std
cmp
pop
lods
stos
ffree
dec
xlat
xchg
iret
stc
test
cld
xor
je
xor
xchg
cmp
in
xchg
ds
bound
test
and
inc
adc
or
jg
test
sub
cmp
ljmp
inc
js
stc
dec
xor
lcall
sub
shr
inc
jns
and
ds
cmp
dec
insb
cmp
es
out
push
insb
leave
add
aad
call
sbb
mov
cli
mov
sub
pop
fs
cltd
das
sbb
jg
jno
mov
pop
ret
sub
dec
dec
leave
mov
scas
push
pop
mov
std
cmp
insl
insl
leave
pop
hlt
mov
lret
dec
mov
xchg
out
ljmp
dec
mov
pop
xorb
adc
and
js
jecxz
test
test
test
xchg
cmp
jmp
mov
cwtl
mov
fdivrl
mov
dec
mov
cmpsb
out
clc
push
jb
xchg
nop
aam
out
add
lds
sbb
add
ret
fwait
adc
aam
mov
data16
mov
mov
xor
and
cld
fsubrp
out
sub
lret
imul
jbe
mov
cwtl
stos
pop
mov
decl
pop
cmp
inc
jno
cmp
pop
mov
cmc
cmp
pop
je
popf
jnp
ljmp
pop
fildll
insb
push
in
sub
data16
jge
rorb
lea
add
mov
int3
xchg
rolb
imul
dec
mov
mov
clc
test
mov
push
add
hlt
test
xchg
lret
mov
gs
sbb
bound
adc
mov
jmp
ror
imul
xchg
add
mov
pop
popa
test
mov
cmpsl
xor
pushl
adc
js
repnz
dec
lds
inc
in
inc
movsl
mov
jmp
stos
imul
decl
cmp
cmpsb
adc
imul
jne
jp
mov
movsl
test
jne
nop
decl
inc
inc
push
cmp
mov
popf
adc
sub
xchg
sub
lret
add
clc
fsubrl
push
xchg
dec
sbb
movsb
mov
cld
dec
mov
xor
mov
or
jmp
adc
mov
jmp
jmp
push
loope
mov
xor
jg
push
lds
scas
mov
adc
iret
movsl
jp
cld
sbb
ss
gs
call
cmp
mov
fcompl
jp
pop
sbb
push
fildl
jbe
or
mov
incl
pop
cmp
pusha
scas
mov
lret
outsl
je
call
pusha
add
push
push
inc
loop
popf
lods
lods
jmp
xor
addl
fbld
mov
push
push
jne
cld
lcall
incl
aam
shl
push
mov
cmpb
fsubrl
mov
mov
pop
subb
mov
jp
push
adc
pop
loope
pushf
or
or
cld
fs
mov
and
stos
data16
lret
mov
mov
hlt
mov
mov
inc
les
xchg
add
jo
xor
or
pushl
dec
ds
add
test
sbb
or
lock
inc
clc
push
jp
shr
xor
lods
pop
push
in
out
cmc
ret
stos
stc
push
jnp
push
shll
jmp
fsubp
fiaddl
jno
cmp
pop
mov
out
je
outsl
std
call
decb
inc
mov
rcrl
sub
cmp
mov
adc
lods
daa
movsb
cs
aad
or
je
push
xchg
inc
cld
cmp
jmp
jge
in
sub
and
sbb
mov
test
mov
mov
add
lcall
pop
and
clc
mov
sub
adc
pushl
hlt
adc
popf
cmp
sub
enter
lods
xorl
xor
cld
addr16
add
pusha
call
sbb
sbb
cmp
jbe
mov
popa
push
and
sub
in
sub
xchg
jle
in
sarb
mov
fisttps
mov
and
nop
sub
lock
out
rolb
lcall
loopne
xchg
mov
fisubrs
xor
fadd
cmpsl
ds
rolb
push
and
ljmp
fcoms
push
nop
xchg
les
mov
es
add
mov
push
pop
loopne
hlt
lcall
addr16
push
dec
xchg
jo
mov
mov
int3
sar
pusha
mov
orl
les
jg
mov
mov
jo
mov
dec
xchg
in
adc
je
in
add
lods
test
inc
jecxz
call
shl
clc
data16
in
inc
scas
adc
xchg
jbe
ljmp
mov
or
fimuls
pop
ror
push
out
fcmovbe
cmp
jg
or
pop
sahf
aam
out
out
mov
inc
jbe
fdivrp
xchg
jmp
out
cmpl
ja
insb
jb,pt
pop
aam
scas
pop
cld
out
jae
imul
jmp
scas
lahf
stc
mov
aam
mov
popf
or
inc
inc
mov
mov
int3
neg
xor
cmp
push
pop
stos
inc
inc
ss
mov
mov
pop
addl
and
movsl
cli
roll
push
sub
mov
adc
mov
subb
mov
jae
or
incl
mov
cmpsl
dec
pop
xchg
repnz
xchg
jo
test
inc
push
in
nop
push
jmp
sub
push
je
lock
or
js
rclb
popa
mov
add
ljmp
jae
mov
mov
mov
pop
leave
cli
fnstsw
ljmp
out
xchg
ja
cli
pop
pop
ja
fs
push
popf
pop
sub
out
adc
loopne
xlat
pop
xchg
aad
imul
addb
decl
iret
sahf
fimull
int
mov
mov
xchg
sub
in
cmpsb
fiadds
and
sbb
and
push
es
inc
into
flds
je
or
idivb
js
sbb
inc
out
cmp
jecxz
xchg
inc
sbb
mov
sti
rolb
loopne
adc
push
lea
orb
jmp
lahf
stos
sub
inc
sbb
lret
lcall
sbbl
outsl
sti
fsts
jge
popf
insb
mov
data16
xchg
imul
pushl
push
push
out
das
jns
ljmp
gs
sbbb
add
adc
xchg
lock
lods
push
mov
push
out
mov
idivb
mov
lock
cmp
inc
les
xchg
inc
jmp
cs
and
leave
or
mov
jg
pop
sahf
jg
sbb
and
mov
add
movaps
ja
pop
fbld
xor
leave
xor
or
mov
ljmp
ljmp
enter
push
xorl
sbb
rolb
sbb
lods
and
jg
jnp
sahf
shlb
inc
adc
pop
enter
xchg
insl
xchg
cmp
pushl
fimuls
loope
push
cld
mov
push
pop
and
xchg
mov
lcall
and
xchg
aaa
cmp
pop
es
fisubrl
bound
jecxz
in
cli
decl
cli
inc
adc
in
push
adc
enter
sti
gs
call
in
push
lcall
mov
mov
test
adc
push
add
lcall
dec
lods
sub
fidivrs
xor
xor
xchg
xor
decl
mov
popa
shll
xor
cli
out
mov
stc
adc
lcall
or
mov
xor
sbb
jp
fdivrs
pop
push
loopne
call
aad
add
mov
popa
iret
xor
aad
mov
push
andb
pop
dec
mov
jnp
push
incb
xchg
imul
clc
shrb
cmpsl
stos
fs
icebp
mov
adc
lods
cmpsb
outsb
in
xchg
in
mov
pop
aas
in
ljmp
cmp
sub
mov
test
in
jg
incl
test
cld
xlat
xchg
add
fsubrl
jbe
sarb
mov
jmp
imul
sub
jo
test
mov
int
loop
xchg
cmp
cmp
sub
sbb
push
stos
xor
hlt
mov
add
sarb
ljmp
push
lret
jecxz
cs
adc
mov
mov
jl
mov
mov
jbe
xchg
scas
mov
out
pmovmskb
fadd
in
scas
insb
lahf
sbb
jns
mov
leave
mov
sub
jge
lods
mov
cmp
push
in
fiadds
incl
xchg
xor
aam
imul
cld
ret
shrb
dec
inc
dec
call
cmp
pop
outsb
mov
xor
repz
jns
adc
loope
loope
adc
ljmp
aas
lods
lds
adc
push
xchg
pop
popf
push
lret
lcall
movsb
lea
js
mov
pop
cmp
pop
xchg
push
mov
xor
loopne
add
lcall
xchg
push
fisubrl
into
lret
ret
xchg
inc
or
subl
call
ja
test
or
pop
xor
xlat
rorb
mov
and
push
cmp
test
jmp
xchg
xchg
ljmp
xor
cmpb
add
in
call
decl
out
cld
dec
mov
cmpxchg
imul
lods
mov
lahf
jmp
xor
xchg
std
xor
xchg
add
adc
sub
lret
or
mov
mov
in
in
push
push
aam
cltd
pop
icebp
xchg
subb
pushf
jmp
jp
jmp
inc
push
jp
cli
fcomip
push
rol
sarl
adc
movsb
sbb
cltd
out
push
or
bound
fstps
mov
aaa
cld
outsb
aam
inc
mov
jmp
sahf
mov
cmp
das
icebp
imul
adc
mov
fcmovb
ret
lahf
loope
adcl
or
arpl
cs
mov
mov
movsl
xchg
dec
jno
addr16
mov
or
push
mov
fwait
lcall
inc
fdivrs
iret
gs
sub
mov
inc
test
inc
dec
into
inc
mov
notl
aad
sub
xor
adc
ret
hlt
mov
decl
sbb
out
dec
inc
mov
xchg
pop
lea
sub
and
xchg
add
incl
repnz
jg
pop
in
xor
insl
adc
mov
cs
hlt
out
push
into
rcr
lea
std
ljmp
pop
and
cmc
cmp
out
sub
add
inc
dec
stos
pushl
mov
fdivrl
cmpsb
mov
push
sub
push
xor
mov
decl
cmp
imul
push
sub
inc
mov
and
in
icebp
imul
scas
outsl
inc
or
jmp
add
mov
push
pop
lea
out
fldt
inc
mov
jmp
shlb
clc
lea
jns
add
pop
out
jne
sub
inc
iret
lcall
loop
ror
xor
lcall
ss
or
pop
push
mov
push
xor
push
mov
lods
js
aaa
xlat
inc
idiv
pushl
nop
cmpsl
shll
jo
inc
sbb
push
call
fsubp
mov
pop
imull
out
pop
in
in
sbb
out
mov
adc
add
and
aad
fldcw
pop
outsl
mov
pushf
sbb
out
lock
push
dec
enter
ss
cmpsl
inc
or
decl
sbb
inc
mov
xchg
push
dec
les
shl
imul
call
or
and
jb
mov
jo
shrl
ljmp
or
in
sti
aas
mov
ds
adc
pop
clc
shr
pushl
dec
cmpb
int
cmp
or
cld
arpl
cmc
into
ror
ss
cmp
pop
pop
inc
sub
mov
sahf
mov
and
insb
and
imul
push
pop
stos
gs
lods
shlb
sarl
movsb
in
insl
mov
mov
mov
lods
mov
decl
rcrb
out
pushf
cmp
outsb
xchg
aad
loope
xlat
cmpb
mov
gs
ljmp
lea
jmp
pop
jl
jmp
mov
ljmp
ja
roll
inc
mov
cmpsb
insl
daa
aam
add
imull
mov
call
addl
popf
insb
rclb
mov
lock
rorl
and
aas
jl
lahf
call
xor
xchg
or
mov
jmp
mov
jp
mov
aas
icebp
jg
lcall
push
js
out
mov
daa
sbb
arpl
mov
gs
incl
mov
add
mov
ret
jmp
sub
outsl
dec
scas
sub
movsl
sbb
sar
out
xchg
mov
add
mov
enter
and
cld
ljmp
mov
popl
out
adc
dec
ss
cltd
cmc
test
ja
or
adc
mov
jp
pushf
imul
pop
fcomip
mov
mov
xchg
add
lods
test
or
ljmp
rorb
mov
inc
and
mov
adc
push
movsb
adc
jnp
add
push
jns
xchg
cmp
orb
jmp
ljmp
repnz
loope
jecxz
cli
test
xor
mov
aas
inc
jne
sbb
fisubrs
lret
dec
jno
popa
jns
fbld
outsl
or
mov
fisubs
nop
repz
sbb
adc
mov
inc
jl
push
xorb
fst
add
stos
xchg
shlb
js
js
inc
mov
sub
mov
data16
adc
mov
cld
jge
mov
mov
dec
push
insb
xchg
ret
outsb
bound
hlt
and
jmp
add
insl
xchg
mov
aam
mov
xor
stos
aad
cld
sbb
adc
outsl
cli
jmp
xchg
ja
dec
mov
cmpsl
push
loop
sub
test
addr16
push
incl
xor
xchg
mov
mov
imul
out
test
test
fiaddl
cld
ljmp
imul
push
lcall
sub
idivb
incl
sti
iret
dec
pop
stos
inc
fsubp
cmp
les
sbb
popf
fcos
decl
fidivs
pop
rcl
loope
ljmp
cld
loopne
jmp
mov
sahf
movsb
addb
hlt
sti
pusha
pop
adc
lods
out
loope
cli
mov
movsl
mov
jb
clc
jge
cmc
mov
lea
push
fs
cmp
adc
inc
clc
pop
test
bound
lock
inc
cmp
or
sub
sarb
add
push
mov
lcall
mov
jge
fldenv
mov
sub
mov
mov
add
sbb
inc
dec
fdivr
popa
loope
xchg
and
arpl
fnstenv
xor
push
movsb
cmp
xchg
fidivrs
jno
push
ja
rcll
call
das
jg
out
sbb
adc
cmp
xchg
push
jmp
adc
movl
decl
xchg
insl
inc
dec
sub
in
sub
insl
push
push
daa
fs
fidivs
push
sbb
mov
cmp
mov
jae
xchg
test
xor
pop
pop
decl
pushl
std
pop
mov
das
sub
jbe
and
int3
lock
jmp
stos
add
xor
pop
mov
xchg
xchg
xor
fistpll
adc
jecxz
ret
enter
add
repz
cli
jns
fdivr
lcall
aad
inc
mov
adc
cwtl
adcb
cli
fcmovb
and
xchg
xor
dec
call
sub
test
jb
push
mov
mov
xchg
jp
sahf
jne
sub
test
jmp
dec
movsb
dec
into
xchg
clc
xchg
andl
les
loopne
dec
dec
xlat
dec
movl
outsb
out
xchg
pop
mov
scas
push
and
jmp
js
pushl
pop
mov
icebp
fdivs
cli
fs
pop
ljmp
pop
sbb
or
scas
cvtpi2ps
mov
push
insl
fsubrl
into
mov
xchg
lock
mov
mov
imul
out
lcall
mov
xchg
xchg
adcl
loop
cmp
xor
add
cmpsl
std
loopne
decl
aaa
setle
sub
mov
ds
je
mov
sub
mov
call
pop
jecxz
mov
fisubs
out
mov
adc
dec
pop
and
mov
xor
mov
push
jl
lahf
lods
repnz
or
decl
jecxz
mov
call
xchg
jae
push
outsl
pusha
frstor
add
push
clc
lret
add
push
arpl
insb
in
psubw
lea
jno
ljmp
inc
push
xchg
je
pushl
adc
sbb
lret
mov
loop
jno
jmp
fnstenv
mov
jmp
leave
in
add
test
pusha
fildl
mov
inc
setns
mov
std
sbb
cwtl
push
negl
stc
jp
sbb
mov
testl
cwtl
les
test
test
jmp
enter
add
xchg
xor
sbb
xor
inc
jg
into
xchg
adc
xchg
cld
or
fistpl
inc
xchg
nop
and
hlt
dec
jbe
jmp
lcall
jo
dec
mov
xchg
dec
pop
push
imul
icebp
inc
or
mov
into
adc
xor
mov
in
pop
rorl
lcall
adcb
xchg
sbb
mov
aam
add
push
add
dec
out
sub
mov
xchg
imul
push
lcall
jnp
stos
mov
addb
jle
mov
nop
or
mov
or
fiadds
push
dec
cmc
push
push
sub
call
out
nop
pop
xchg
jmp
sub
jge
lods
call
loopne
inc
mov
sahf
stos
cmovno
sub
cmp
adc
call
xor
arpl
outsb
scas
pop
fdivl
stos
bound
std
sub
sbb
xor
das
sar
ljmp
cmp
sbb
push
insb
push
mov
sub
ljmp
xor
xorl
outsb
push
daa
xor
fmuls
cmpb
pop
jle
jg
decl
mov
mov
or
test
jbe
call
cmp
jmp
in
xchg
cmpsb
xlat
sbb
push
xchg
in
mov
xchg
sbb
lcall
adc
pop
sbb
jp
sub
btc
outsb
sarl
xchg
insb
adc
add
mov
inc
xor
repnz
mov
add
nop
enter
ljmp
mov
cmp
mov
adc
or
fistpll
xlat
outsl
dec
and
add
hlt
dec
popa
sbb
pop
imul
fwait
jmp
cwtl
das
push
xor
gs
jns
arpl
testl
push
dec
xor
jl
or
loope
jl
jns
loopne
pop
adcb
fdivs
mov
adc
mov
das
and
jge
ds
mov
stos
jno
mov
test
push
and
leave
push
aas
sub
mov
and
out
ja
cmp
shl
lret
ret
lods
cs
pushl
mov
dec
fdivrl
xlat
mov
mov
lcall
ds
scas
loope
into
decl
dec
xor
lods
xlat
fsubp
inc
popf
add
mov
xchg
pop
xchg
pop
test
shlb
ljmp
mov
leave
gs
into
xor
fnstsw
xchg
fmull
movsl
xchg
loop
mov
and
loop
bound
push
cld
in
scas
sub
stos
lock
or
fsubl
mov
sbbb
call
sbb
data16
mov
andb
clc
fidivrs
sbb
mov
stos
inc
mov
ja
jae
and
and
lods
je
decl
das
aad
cli
dec
mov
hlt
mov
les
pop
in
arpl
sub
addl
pushl
cmp
fmull
jne
out
lods
test
pop
stos
ss
aaa
add
inc
xor
aaa
push
clc
jge
jg
xor
iret
xchg
xor
mov
movsb
lcall
mov
pop
mov
lcall
ja
sarb
jmp
inc
das
jne
mov
in
lcall
ret
lods
jnp
shll
inc
sahf
xor
int
and
dec
es
inc
daa
inc
outsl
push
cmp
xor
xor
xor
cmp
dec
push
add
jp
lock
xor
cmp
push
mov
sub
cmp
jo
xor
jmp
insl
mov
xchg
jle
jmp
or
ficompl
gs
outsb
pop
push
pushf
lock
test
ljmp
cli
data16
dec
into
adc
movsl
pop
stc
inc
fdivs
lcall
adc
jl
fwait
inc
sbb
flds
adc
outsb
xor
and
imul
push
adc
jmp
adc
push
cld
mov
enter
je
out
push
call
out
fdivl
jns
fiaddl
xor
and
xchg
cwtl
fs
mov
bound
mov
jg
xchg
jnp
cmp
jge
into
adc
sbb
stos
jo
push
mov
inc
xlat
aas
xchg
jecxz
inc
adc
fadd
dec
mov
inc
mov
test
mov
mov
xor
mov
jno
jmp
pop
call
pop
out
push
call
decl
xchg
ljmp
ret
xor
inc
mov
cmc
in
jmp
in
arpl
or
cmp
inc
lcall
dec
aas
dec
mov
decl
sti
and
sub
addb
pop
das
xchg
xchg
push
notb
in
call
adc
nop
mov
or
loop
orb
cmpsl
idivl
cld
inc
xchg
pop
inc
ud0
incl
clc
mov
or
insl
cwtl
lods
cld
lock
inc
pop
fstl
bound
test
fdivrp
jl
xor
xor
stos
or
ja
cmp
stos
int3
pop
cmp
sub
ljmp
xchg
add
lret
push
ss
hlt
jge
and
repnz
jg
fcmovnb
push
dec
dec
iret
mov
xor
mov
xchg
push
mov
fbld
aad
call
fadd
cwtl
fst
jb
pop
lods
pop
jge
dec
xchg
aam
push
add
jg
dec
jne
add
popf
xor
ljmp
pop
bound
mov
std
stc
movsb
rcll
mov
lods
jnp
xor
dec
rcrl
pusha
or
loopne
ljmp
lea
testl
dec
and
test
fwait
mov
mov
inc
rcr
adc
or
sbb
in
jmp
dec
pushf
bound
push
pop
pop
mov
xor
dec
push
mov
imul
jmp
insl
xchg
rcl
ret
push
icebp
test
mov
sub
inc
push
les
fists
jbe
mov
std
emms
jge
pop
add
dec
mov
testb
or
inc
mov
std
out
out
jl
add
ja
insb
ficomps
popf
sbb
jle
mov
pop
loopne
add
lods
pop
sub
mov
orl
loopne
data16
inc
mov
stos
push
mov
xlat
stc
jle
pop
outsb
rolb
inc
push
cmc
mull
call
add
sub
mov
inc
and
shl
or
inc
std
hlt
jne
xchg
icebp
push
das
cmpsb
mov
or
or
jge
lock
pop
cmp
lcall
push
lret
push
mov
ret
bound
push
mov
rclb
das
fbld
ds
jg
std
fdivr
into
rclb
mov
add
inc
adc
pop
incl
mov
test
call
outsb
fsub
mov
sub
mov
mov
clc
xchg
adcl
insl
ror
das
cmp
dec
mov
nop
push
shlb
decl
push
sahf
bnd
sahf
je
inc
add
pusha
cmp
push
lahf
incb
insb
jmp
pushf
xchg
fsubrp
int3
hlt
adc
test
out
or
or
dec
dec
adcb
incl
push
daa
adc
std
into
icebp
mov
lea
mov
jg
push
mov
js
aas
xchg
and
inc
or
nop
jne
cld
movsl
mov
mov
mov
incl
xor
fcmovb
adc
and
sti
hlt
icebp
leave
dec
sub
enter
out
shll
xchg
dec
xor
lods
xchg
jmp
mov
sub
dec
mov
or
dec
push
mov
push
add
dec
inc
mov
sti
das
mov
mov
lock
jns
mov
in
xchg
int
incl
lock
je
inc
je
xlat
ret
xchg
dec
adc
into
std
ljmp
fisubs
fisttps
xor
cltd
repz
fisttpll
jmp
decl
xchg
pop
stc
mov
mov
fwait
aaa
popa
sbb
sub
cmp
lcall
xchg
or
mov
dec
push
pop
mov
push
xchg
repz
add
jno
mov
cld
or
mov
sbb
fwait
pushf
test
out
dec
inc
mov
out
bound
popa
jge
out
clc
adc
and
repz
out
lods
loop
fcompl
pop
sbb
daa
ss
cmp
cmp
aam
add
dec
fimull
inc
pop
or
decl
jbe
daa
inc
shrb
adc
movl
insl
enter
dec
mov
test
pop
sub
add
rolb
dec
fsubl
lahf
mov
cmp
cmp
out
jle
dec
adc
jbe
push
in
in
xlat
add
jecxz
add
decl
popf
jmp
cmp
stc
ss
xchg
push
ja
mov
repz
or
push
cmp
aad
and
loop
mov
sub
jmp
in
add
dec
pop
decl
cmp
fs
mov
jae
or
mov
push
addr16
test
xor
push
and
ljmp
inc
fistl
clc
mov
les
lea
push
inc
jno
mov
mov
call
cld
imul
jo
add
mov
push
aam
ljmp
lods
or
sbb
add
and
and
pushl
lds
inc
ja
stos
pop
xor
xor
inc
fstl
in
sub
mov
shr
jp
push
outsl
mov
mov
dec
xchg
jb
stos
cli
inc
test
xchg
mov
xor
ret
test
dec
xchg
inc
mov
sub
jl
in
or
adc
es
mov
orl
mov
int
clc
loop
je
dec
out
mov
nop
sub
fistl
pusha
rol
jae
leave
xor
sti
test
push
cli
ret
lds
fisubs
lea
jo
add
jl
insl
movl
fldl
mov
cmpsl
xchg
mov
out
movsb
popf
clc
xchg
bound
mov
mov
mov
fcomps
sahf
ret
sub
jmp
pop
push
xor
inc
stc
pop
push
pop
xor
xchg
jecxz
lods
sub
dec
mov
fsubr
mov
jbe
cmp
jnp
or
data16
fwait
lahf
lcall
mov
sbb
jmp
mov
pusha
xor
mov
into
pop
add
jbe
push
movsl
xor
xchg
stos
cmp
into
imul
or
jmp
mov
int3
and
mov
ret
jp
fs
jmp
mov
mov
add
fimuls
stos
and
jmp
cmp
sahf
mov
jnp
sub
fwait
inc
or
rorl
cmp
jo
push
lcall
adc
mov
in
pop
mov
inc
adc
cmp
mov
popf
xchg
jmp
std
ja
mov
cmpsl
stc
and
sub
jg
sar
add
add
lds
and
loopne
cmp
ljmp
stos
leave
mov
ret
clc
mov
imul
enter
mov
ljmp
stc
repnz
lahf
pusha
push
xchg
lret
mov
pop
cmpsl
xor
lahf
in
adc
lahf
push
adc
int3
imul
dec
insb
dec
adc
cs
lret
push
pop
mov
orl
adcl
inc
xor
or
stos
cwtl
cmpsb
mov
incl
add
ds
aad
aas
xor
jl
jg
mov
pushl
jnp
add
out
sbb
fs
push
mov
jnp
nop
or
call
mov
pop
adc
cmp
sub
lcall
aam
out
ja
jmp
pushl
and
std
out
lds
dec
pop
out
mov
movb
jg
decl
cli
test
jae
cmp
pop
xlat
out
pop
or
jg
adc
push
jo
inc
xor
mov
sbb
inc
lret
popf
movsb
sahf
and
repz
jmp
inc
sbb
repnz
xchg
inc
idiv
mov
adc
fucomip
enter
call
cli
pop
pop
mov
sahf
pop
notb
jbe
cmp
pop
cmpsl
inc
test
iret
pop
push
call
lock
xchg
jne
addb
cs
test
pop
xor
decl
bound
mov
mov
subb
pop
js
stos
lods
pop
je
push
int
fcomip
jmp
loop
push
and
nop
dec
and
inc
adc
popf
mov
pop
call
and
and
pop
cmp
xchg
loopne
mov
jmp
scas
pop
cmc
in
add
or
mov
jle
jbe
mov
stc
cmpsb
mull
fldpi
xchg
pop
push
arpl
mov
call
inc
stos
nop
pop
int3
dec
sarb
std
pop
add
add
ss
push
push
jmp
inc
shll
decl
inc
xor
bound
ret
inc
add
aas
repnz
mov
mov
lods
push
out
subb
loopne
push
xor
push
inc
push
or
sbb
ds
in
sar
lcall
pop
jle
addl
subl
cmpsb
adcl
lock
mov
adc
mov
cltd
imul
add
dec
fwait
inc
dec
jb
or
scas
jne
dec
aad
mov
fsubr
or
jns
xor
addr16
xchg
xchg
jp
cltd
fidivs
mov
mov
aam
cmpl
cli
sub
imull
push
or
or
ja
lods
jne
cmp
push
loop
mov
adc
lock
push
pop
lods
sbb
pop
cmp
xor
pop
mov
cmp
mov
mov
xchg
sub
cmp
int3
adc
xor
jo
lret
mov
ljmp
int
mov
jae
inc
mov
imul
pop
sbb
in
pop
scas
inc
xor
sbb
rcll
cmpsl
cli
mov
push
add
aaa
adcl
mov
les
pop
or
into
ror
dec
cmp
push
jge
adc
dec
imul
aad
xchg
iret
aaa
movsb
lods
cltd
cs
aad
out
in
dec
or
jae
xchg
jno
pushl
sub
xchg
pop
jg
adc
shlb
inc
jbe
cld
lcall
add
xorb
icebp
fldcw
and
xchg
mov
push
jbe
cmp
ljmp
negb
cmp
xchg
xchg
sti
imul
ja
scas
cmp
or
pop
arpl
jg
clc
or
xor
mov
ds
mov
pop
push
cli
rolb
pop
loopne
call
mov
int
aam
mov
fisubrs
popa
notl
ljmp
clc
push
jnp
xchg
inc
ds
pop
push
inc
adc
mov
aam
inc
arpl
sahf
add
xor
incl
sbb
hlt
or
ret
test
mov
mov
mov
lcall
mov
or
mov
add
inc
xchg
lret
mov
stc
das
sar
hlt
or
cli
out
in
mov
repnz
test
arpl
or
sub
fstpl
xchg
fistl
sbb
int3
pop
fstps
pop
les
sub
pop
sub
shll
cmp
call
out
mov
cld
decl
xchg
dec
jno
nop
outsb
adc
jnp
outsb
cmpsb
repz
ret
and
push
fcomps
std
pushl
in
out
push
or
jbe
test
scas
jo
loope
cmp
cli
dec
xor
mov
pop
push
dec
mov
add
aas
hlt
push
or
cmpsb
sbb
call
mov
leave
push
cwtl
sbb
lahf
add
mov
mov
sarb
mov
fiaddl
call
sub
dec
inc
inc
sbb
sti
fwait
js
in
fisubl
and
lret
push
sub
mov
mov
call
int3
add
cmp
addb
clc
push
xor
stc
jecxz
mov
and
mov
gs
aam
adc
mov
hlt
push
adc
pop
or
lcall
add
clc
push
mov
scas
repnz
call
imul
jae
lahf
gs
scas
movntps
test
mov
out
xchg
pop
das
clc
insl
xchg
mov
int
out
push
add
xor
sahf
aam
xlat
cwtl
jo
ret
dec
adc
jmp
and
cs
and
inc
imul
sarl
xchg
mov
sti
cs
aas
stos
rcrb
jmp
mov
dec
enter
les
jmp
sbb
sub
and
or
jge
arpl
inc
lods
repnz
dec
es
scas
repz
sbb
cwtl
lret
sbb
adc
pushl
mov
inc
test
push
push
lret
push
mov
lret
push
pop
dec
ljmp
out
or
aaa
fcoml
or
out
mov
mov
hlt
lcall
arpl
sar
sub
mov
mov
dec
lret
stos
ljmp
xor
xchg
cltd
sbb
mov
sub
push
dec
popf
lock
call
pop
add
xor
fsubp
cmp
lods
mov
xor
fsubs
lcall
out
jge
cmpb
dec
add
in
push
add
shll
loop
push
mov
clc
ljmp
lret
call
or
jg
push
inc
daa
loop
test
lods
sti
push
call
shlb
or
adc
bound
insl
push
jle
mov
mov
pushl
sub
adc
pusha
jp
mov
and
pop
jns
insb
mov
jg
ret
push
aad
mov
int
push
cmp
int
psubusw
mov
out
xchg
lcall
dec
js
adc
add
ss
fcmovbe
mov
push
pop
and
jmp
and
decl
ljmp
cwtl
xchg
dec
rcll
gs
je
out
push
fs
xchg
cmc
mov
loopne
ret
decl
lret
push
popa
int
lds
push
int
daa
xchg
jb
or
outsl
out
mov
fcompl
aad
jle
shl
pushf
ret
cmpsb
test
cs
sti
bound
cwtl
aas
decl
mov
sahf
loop
push
xchg
pop
push
sub
pushf
scas
scas
jns
or
jmp
jle
dec
jns
cli
cmpsb
call
xor
dec
xor
dec
iret
mov
or
les
jne
hlt
pushl
std
cmp
jnp
cld
stos
cmpsl
es
shlb
adc
lcall
xchg
mov
lcall
jecxz
hlt
mov
inc
lret
xchg
sbb
inc
inc
mov
dec
dec
mov
incl
or
movsb
dec
adc
xor
mov
or
inc
mov
ljmp
cmp
subb
xor
pop
or
adc
or
in
ds
in
xchg
mov
or
out
mov
decl
mov
ret
out
jns
sub
add
addr16
ljmp
and
out
mov
jno
fsubrs
jb
sbb
jae
ss
sbb
and
andl
cmc
dec
shl
ficomps
in
pop
xchg
pushl
pop
jbe
pop
loopne
adc
aaa
std
jg
rorl
mov
jno
add
shrb
inc
out
iret
leave
lcall
add
out
sti
in
or
xchg
jb,pn
jb
pcmpeqb
mov
sub
movsb
in
pop
sbb
add
insl
pop
cmp
fwait
cli
inc
lds
pushf
hlt
out
outsl
loope
mov
push
test
inc
call
push
jge
adc
sub
inc
js
mov
testl
push
addr16
cmp
fcomip
call
pcmpgtd
mov
pop
stc
xor
dec
stos
fiadds
call
fldl
jb
idivb
jl
cld
push
xchg
cwtl
cmp
popa
add
idiv
call
dec
or
scas
jbe
fldenv
xor
lret
mov
xchg
pushf
ljmp
ljmp
jl
dec
and
mov
lret
insl
mov
jno
sub
insb
cmp
ljmp
jb
dec
inc
ljmp
data16
push
xlat
js
push
pusha
push
test
decl
mov
dec
push
and
dec
mov
mov
sbb
xor
and
dec
jo
dec
fwait
xchg
pop
out
clc
ljmp
insb
dec
addl
repz
ret
insb
out
adc
jmp
jp
ss
popa
out
xchg
insb
stc
push
addr16
test
mov
incl
mov
dec
cwtl
add
add
mov
ja
sub
bound
aaa
pop
adc
loop
jg
decl
pop
mov
mov
pop
and
rcr
or
fs
sub
repnz
ljmp
push
mov
dec
adc
shrl
sbb
test
decl
inc
dec
leave
bound
mov
or
ss
and
loopne
sti
push
sub
mov
add
mov
cs
pop
in
cmp
mov
dec
aam
xchg
jle
mov
mov
xchg
dec
sbb
mov
or
pop
dec
xorb
scas
xchg
jmp
jge
mov
flds
dec
je
pop
ljmp
mov
inc
outsl
pushf
inc
popf
movsl
sub
movsl
into
dec
mov
test
mov
das
pushl
ret
stc
and
cmpsl
shll
push
push
lret
push
mov
sub
test
call
in
dec
xorb
dec
jge
divl
cmp
rcrl
loopne
repnz
lret
test
fdivrs
sar
cmp
ret
mov
sub
bnd
mov
call
aas
dec
jbe
cmp
mov
mov
or
aam
inc
loope
faddl
loopne
cmp
mov
lret
leave
cmpsb
movsl
aas
testb
pop
ja
cmpsb
in
sarl
add
sbb
repz
popf
cmp
xchg
repz
dec
jmp
mov
movsl
imul
pop
push
jle
push
clc
pop
int3
stc
mov
pop
mov
pop
enter
ljmp
or
fs
insb
push
sbb
jb
push
loopne
jno
fcomi
inc
or
pushl
cld
jg
dec
aaa
or
leave
pusha
push
sbb
pop
mov
push
push
xchg
jo
call
jb
mov
ret
loopne
hlt
mov
cmp
push
cmpsb
mov
mov
jns
cwtl
jg
outsl
cli
mov
mov
ret
insb
jp
dec
out
jmp
cmp
mov
das
pop
add
xchg
rorb
pushf
jp
in
or
incl
addr16
mov
jge
pop
cmp
in
xor
jae
aas
mov
jmp
out
sub
into
leave
lods
rcrl
and
or
pushf
imul
out
in
fidivl
mov
ret
loopne
sti
adc
fildl
fnstcw
aad
inc
test
aam
and
es
jnp
clc
jle
mov
call
lcall
loopne
dec
shlb
ljmp
xchg
inc
and
lcall
lea
ja
mov
sbb
mov
and
jae
cld
push
pop
push
pop
in
icebp
fadds
in
fdivs
xchg
adc
data16
ret
in
hlt
jg
cmp
xor
fs
and
or
subb
decl
rcl
xor
pop
pop
mov
and
repnz
push
jg
adc
push
jg
les
push
xlat
pop
arpl
fdivrs
ljmp
int3
push
xchg
xchg
lret
orb
jl
rorb
sub
inc
fmuls
jmp
and
jmp
mov
popf
loop
jns
hlt
inc
sbb
push
mov
std
aas
mov
push
insb
pushf
jmp
ds
stos
or
in
enter
sbb
lret
je
idiv
ljmp
lcall
xchg
pop
jle
fiadds
bnd
hlt
lock
int3
loopne
cmp
jg
pushl
sbbl
stos
and
fdivs
push
enter
scas
cli
mov
sub
andb
push
inc
add
popf
mov
mov
cmp
jmp
xchg
stos
rolb
mov
push
int
mov
imul
xchg
pop
lds
or
incl
jne
iret
popa
push
ds
jle
ror
imulb
xor
inc
mov
or
lcall
pop
stc
push
ss
push
sub
mov
mov
shll
mov
out
call
out
push
jb
fnstenv
lahf
jmp
scas
xchg
jno
test
fdivrl
and
decl
pop
push
jecxz
ret
mov
pop
rolb
jge
nop
mov
jmp
int3
and
push
icebp
cwtl
je
sets
add
adc
test
test
cmp
dec
add
add
imul
or
decl
icebp
call
jp
int3
pop
out
sbbb
mov
fsub
test
inc
in
in
shr
mov
push
cmp
outsl
cli
decl
or
cmp
stos
movsb
inc
pop
in
xchg
fwait
jge
mov
incl
push
mov
and
jo
xchg
test
rorl
mov
repnz
lcall
loop
fiaddl
pop
adc
xchg
xor
mov
cmpsb
or
lods
mov
aam
jmp
fs
cmpsb
sbb
push
out
repz
mov
leave
push
stc
inc
cli
dec
sub
sub
fsub
roll
cltd
lcall
rclb
cmp
mov
sti
cmpsb
push
mov
sarb
fcmovnu
lock
xor
push
fldt
mov
imul
add
dec
dec
fdivr
call
pop
loope
lret
add
mov
or
mov
push
stos
add
das
and
incl
dec
scas
or
loope
movl
jnp
push
xor
arpl
mov
push
mov
test
out
xchg
ljmp
pop
jp
jmp
lods
jle
or
cld
enter
cli
xchg
cltd
push
xor
fsubrs
das
ljmp
ret
outsl
pusha
arpl
dec
in
or
dec
cmp
add
decb
add
jns
mov
incl
jbe
fwait
xchg
sbb
subl
roll
nop
nop
fsubrs
ljmp
mov
xchg
sub
sbb
and
jno
movsl
lods
pop
fdivr
incl
lret
leave
mov
cmp
ss
or
pop
mov
js
call
add
or
push
mov
jo
push
cmp
or
rorb
das
xchg
cmp
sbb
mov
dec
adc
pop
and
mov
add
push
pop
add
jne
icebp
push
add
add
adc
add
in
xor
mov
inc
insl
call
pop
and
adc
test
rcr
push
iret
and
jge
xchg
jae
cli
ljmp
clc
jnp
data16
cld
pop
pop
in
stc
addb
outsb
clc
pop
ret
inc
imul
fcomip
fildll
push
and
push
xchg
sbb
in
jne
pop
fimuls
outsb
outsb
push
test
out
add
hlt
js
mov
mov
int3
loope
aad
lret
idivb
or
rorl
xchg
sub
nop
cmpsb
xor
cld
pusha
loop
pop
movsb
call
sbb
lods
iret
pop
cltd
sarl
sub
fimuls
inc
sbb
call
jg
push
fsubp
scas
andl
add
daa
inc
cltd
shll
fsubrs
mov
fs
mov
xchg
insb
ret
das
int3
movsb
and
lret
stos
mov
movsl
sub
imul
cmp
pushl
decl
lret
fdivrs
cmpsb
cmc
shll
sbb
decl
mov
fcom
cmp
outsl
bound
or
inc
jl
test
fistl
and
aaa
aam
sbb
sarb
lahf
sbb
push
xchg
pop
add
adcl
adc
ret
jmp
inc
fsts
test
xor
movsl
push
mov
rcrl
enter
ljmp
lods
pusha
dec
adc
sahf
loopne
ret
std
jg
sbb
dec
lcall
xchg
push
xor
xchg
mov
ret
or
addb
mov
lods
ljmp
clc
loopne
jle
ss
jns
pop
cmp
mov
fwait
mov
push
fiaddl
aam
pushf
les
cmp
sbb
dec
bound
add
testl
incl
cli
push
push
clc
lret
adc
xchg
or
push
adc
les
xchg
xchg
push
jmp
js
pushf
dec
push
add
jmp
push
outsl
push
mov
movsb
fadds
call
adc
decl
mul
aad
shll
mov
lahf
cltd
data16
fstps
aaa
cmp
std
jmp
js,pt
inc
mov
lret
stos
adc
or
jmp
addr16
mov
in
sub
jp
and
rcrl
out
mov
pop
adc
pusha
dec
cli
jg
push
cmp
lcall
cmp
pop
push
mov
ret
sbb
lock
test
jmp
xchg
pushf
aaa
ss
fnstcw
mov
adc
add
push
lods
push
add
scas
adc
xor
cmpsl
jp
dec
shll
mov
ljmp
mov
outsb
mov
repz
jo
movsl
pop
lret
push
inc
sahf
adc
mov
cld
fs
or
mov
add
pusha
sub
xchg
cwtl
mov
call
sti
stc
xchg
mov
clc
xchg
adc
dec
in
test
xchg
imul
adc
fcomip
scas
movsb
push
xorb
test
icebp
mov
jp
adc
lock
aaa
fistl
or
push
xchg
call
xor
fbld
mov
jae
mov
decl
push
and
sti
std
and
aam
movsb
mov
insl
lret
ss
sub
iret
scas
jmp
pushl
out
sbb
in
xor
dec
ud0
and
or
mov
jl
dec
mov
push
inc
xchg
xor
into
nop
dec
pop
jecxz
scas
cmp
pop
lock
mov
sbb
mov
cld
adcb
and
sbb
push
addl
push
and
orl
divb
mov
push
inc
xchg
mov
mov
jmp
xor
les
jle
rclb
mov
jbe
in
ret
jbe
pop
jo
incl
pop
cli
int3
shll
fcompl
inc
cmp
xchg
mov
into
inc
fstp
jmp
leave
daa
dec
jp
mov
jge
in
add
push
je
in
dec
push
loopne
add
jge
scas
mov
ljmp
pop
xlat
sbbb
mov
pop
mov
ja
test
lret
insb
in
lcall
fsubr
dec
mov
xor
mov
gs
ror
mov
test
lcall
pop
adc
fnstsw
push
sahf
pop
insb
fisubrs
cld
test
sarb
xor
cwtl
fldln2
ljmp
mov
ja
data16
cmp
xchg
or
dec
stc
daa
mov
lea
out
es
daa
sar
gs
mov
pop
dec
inc
xchg
adc
mov
push
incl
repnz
and
int
mov
scas
icebp
sbb
nop
xchg
add
dec
sbb
cmp
cmp
arpl
or
push
repnz
sub
cmp
and
dec
xchg
lret
fucomi
mov
jmp
dec
cmp
mov
adc
jle
lahf
mov
mov
jmp
movsl
mov
popa
cmp
int3
div
out
push
loope
outsl
das
push
mov
movsb
in
dec
push
lcall
xor
ret
ret
and
negb
push
cmp
sbb
loopne
lods
mov
clc
mov
jb
dec
je
notb
rcll
decl
xchg
add
inc
cld
les
and
lret
add
decl
pmaxub
dec
pop
mov
push
xchg
lods
movsb
icebp
mov
fs
ds
push
ds
jnp
pushl
testl
xor
fucomi
xorl
sbb
jbe
dec
insb
pushl
jl
lret
mov
imul
or
aam
sub
jbe
xor
aas
adc
daa
shr
insb
add
rorb
push
repnz
jbe
pop
gs
and
out
ja
sti
call
xchg
dec
notw
pop
mov
push
pop
sub
mov
arpl
repz
mov
lret
jb
jg
xchg
mov
cwtl
and
call
decl
mov
imul
jp
out
ficomps
sbb
fcmovnb
in
inc
rclb
add
jo
push
xor
push
fdivs
fstps
dec
andb
movsl
fadd
jmp
adcl
fcomi
pushl
mov
andl
fwait
ljmp
or
push
cmp
sbb
pop
cmp
and
mov
sub
pop
lock
add
jl
rorb
js
adc
push
xchg
jnp
jo
xchg
nop
test
inc
hlt
mov
movl
xchg
push
mov
cli
lods
ljmp
xor
pop
adc
dec
pop
inc
jb
mov
jns
jl
pop
shr
test
arpl
dec
or
inc
int3
cmpsb
fs
adc
in
push
bound
je
pushl
adc
pop
xchg
mov
rorl
cmp
fcomps
mov
mov
push
cwtl
gs
pop
call
mov
pop
scas
mov
mov
mov
jae
cli
sub
insb
push
push
jg
and
idivb
sbb
pushl
std
lea
and
dec
mov
xor
std
push
sub
pushl
repnz
sub
test
aad
mov
push
cs
sahf
inc
dec
xor
ljmp
roll
mov
pop
test
cmpsl
mov
popa
or
dec
rcll
xorb
mov
jnp
push
movsl
test
int
inc
dec
pushf
xchg
ds
dec
inc
cmp
scas
cmc
fsubl
xchg
jno
jmp
fwait
les
cmp
xchg
lds
lcall
inc
popf
jno
push
mov
ss
ljmp
inc
xor
into
push
mov
aad
decl
mov
leave
push
fidivs
lods
mov
pop
cmp
sarl
adc
xchg
jbe
inc
jb
pushl
sbb
mov
push
push
jns
push
fbstp
dec
in
lret
push
mov
jnp
sub
es
adc
xchg
sahf
or
jg
mov
sti
vsqrtpd
push
push
aam
bound
jnp
mov
mov
test
cld
test
add
xlat
shlb
push
mov
call
xchg
mov
pop
mov
dec
pop
mov
stos
aaa
icebp
push
jle
or
jne
call
mov
mov
xchg
mov
pop
add
xor
xor
repz
mov
push
jmp
mov
mov
dec
cltd
mov
out
cli
mov
ja
add
sub
mov
addl
push
push
and
dec
cmpsl
dec
dec
lea
push
or
push
sub
test
inc
lret
jno
ljmp
mov
inc
pop
shlb
ffreep
mov
mov
push
jmp
fdivrs
and
loopne
xlat
lret
inc
sarb
rol
or
push
adc
pop
jo
xchg
xchg
lock
and
insb
xor
push
jge
sbb
fcmovb
lcall
dec
mov
cwtl
shrl
cmp
mov
mov
cmc
mov
outsb
push
test
enter
sub
push
jmp
fildll
sub
popf
stos
in
lods
jbe
push
mov
cmpsb
cli
or
xchg
push
cmp
sbb
dec
rcr
and
mov
lret
lcall
ret
ss
ja
jnp
lods
inc
and
adc
fiadds
add
inc
xor
test
cmp
or
xor
bnd
test
cwtl
adcb
insb
hlt
jnp
jg
jmp
dec
orl
daa
cmp
hlt
ror
test
loop
sbb
aas
aam
lcall
scas
add
out
jecxz
mov
aad
rorb
loop
jecxz
imul
cmp
mov
mov
jmp
and
pop
and
inc
mov
call
ja
pop
jecxz
push
mov
data16
cli
popa
inc
lea
jp
sbb
jge
loope
outsl
cli
test
rol
pop
arpl
mov
mov
mov
loope
mov
notl
inc
xor
shr
int3
insl
sbb
lret
or
cmpsl
lods
cmp
and
pushl
or
addb
cmp
mov
xlat
icebp
jnp
gs
adc
lret
dec
clc
jno
cmp
dec
inc
inc
jne
pop
xchg
loopne
sbb
fisubs
jl
test
pop
shr
sub
insb
sbb
bound
jb
pop
lods
fmul
testl
rorl
mov
cwtl
xor
in
xor
inc
add
mov
jl
pusha
inc
call
das
or
fdivr
sarl
pop
test
push
call
add
repz
decl
adc
dec
imul
jae
push
cmpsl
push
or
pop
in
jne
and
pop
loope
mov
or
add
frstor
pop
mov
jmp
inc
aaa
cld
fucomip
push
cmp
adcb
enter
sbb
xor
inc
mov
ljmp
fldcw
cmp
pop
mov
xchg
imul
xor
call
fs
fucomip
call
cmp
out
arpl
jne
roll
xchg
test
jmp
fs
mov
insb
mov
jmp
call
bound
ss
outsb
mov
ljmp
jnp
lock
inc
mov
arpl
fldenv
cmp
faddl
ficoml
cmp
mov
je
out
hlt
push
dec
or
mov
jecxz
ljmp
mov
and
mov
sub
loope
test
inc
xor
call
inc
leave
cmc
push
sub
lret
fstpt
dec
sub
push
push
or
cmc
sub
ljmp
sbb
aam
xor
dec
aad
push
mov
imul
dec
popf
mov
or
dec
ja
xor
lods
iret
mov
in
lret
stc
fcoml
orb
icebp
xor
inc
test
outsl
loopne
push
daa
mov
dec
loope
jl
push
call
mov
incb
and
cltd
dec
loop
jnp
cmp
adc
incl
pop
rolb
lds
pop
into
lods
out
aad
xor
arpl
push
out
mov
sbb
ja
and
daa
ja
jns
lods
loop
mov
pushl
jmp
cltd
pop
adc
and
sbb
mov
lock
sbb
xchg
jo
jns
cmp
mov
rcrb
jp
arpl
pop
pop
icebp
dec
scas
adc
pop
dec
sbb
ss
mov
pop
mov
les
inc
lret
mov
ficoms
incl
sarb
decl
mov
pop
push
pop
mov
jmp
bound
add
in
outsb
sbb
and
pop
hlt
decl
shl
cmp
pop
into
icebp
jmp
cs
jecxz
jo
mov
mov
test
push
mov
sub
sbb
dec
sub
adc
cmp
pop
aaa
or
sub
ja
mov
sbb
insb
dec
popf
jg
mov
and
pop
dec
mov
jno
or
jbe
pop
cmp
mov
sbb
inc
inc
mov
sub
push
and
cltd
scas
pop
adc
xor
icebp
and
loope
stos
test
inc
cmp
incl
cmp
mov
pop
xchg
inc
mov
push
ret
cmp
add
jmp
movsl
out
push
cmc
outsb
xor
sti
mov
adcb
jecxz
stos
negl
adc
adc
ljmp
enter
mov
gs
pushf
movb
xchg
xchg
jmp
icebp
loope
xchg
sbb
xchg
and
iret
hlt
inc
pop
mov
ljmp
mov
mov
jnp
sub
sub
loopne
outsl
jno
pop
imul
rorb
es
test
outsl
aas
div
daa
rcl
daa
cmpsb
adc
cmp
fwait
decl
xor
ret
jne
pop
push
dec
gs
pop
push
pop
imul
push
fpatan
out
clc
ljmp
pop
fwait
ja
xchg
xor
push
mov
ljmp
loopne
aad
fldpi
mov
rcll
xor
negb
xchg
imul
ds
dec
cmp
mov
and
icebp
js
xchg
fistpl
nop
xchg
pop
in
movsb
add
mov
mov
lea
in
sub
shrb
notb
jmp
jns
dec
mov
jmp
ljmp
fbld
push
xchg
xor
xor
incl
mov
mov
push
dec
dec
lods
lods
mov
popf
cli
dec
adc
pushl
cmp
inc
mov
test
xchg
js
and
imul
sbb
mov
call
mov
fidivrl
pop
jnp
xchg
js
xchg
push
xchg
aas
mov
arpl
in
in
fbld
jnp
dec
jmp
aad
int3
mov
push
loop
or
cmpsb
lods
pop
pop
lea
lcall
mov
dec
jmp
push
inc
jmp
cmp
xchg
loop
bound
call
dec
movsl
cmp
sbb
or
shlb
in
mov
std
es
popf
stos
loop
cmc
out
int
aaa
adc
addr16
lret
or
call
aad
push
stc
cmc
das
push
lcall
pop
xor
cmp
push
jbe
inc
and
cs
ds
xchg
fsubrs
mov
pop
or
jo
xlat
gs
lods
jmp
pop
cmp
fwait
addl
call
repnz
aad
adc
out
inc
sbb
js
into
xor
in
push
insl
sar
lcall
sub
shr
out
jmp
out
xor
inc
xor
lds
jg
rcrl
daa
push
sbb
push
sbb
mov
pushl
and
pushf
mov
mul
test
inc
loop
les
ljmp
js
mov
in
nop
sub
cmpsl
lds
arpl
xchg
filds
pushl
test
cmpb
adc
subb
je
mov
push
clc
jg
fldt
loop
mov
dec
aam
inc
ja
pop
cmp
jp
cmpl
aaa
jmp
lods
scas
clc
std
call
mov
inc
aad
mov
jecxz
and
dec
lcall
cld
xchg
mov
fs
sub
inc
cmpsl
xor
pop
mov
jbe
into
sub
into
stc
xor
mov
lds
pop
jg
lcall
and
pop
leave
inc
adc
sbb
add
mov
es
icebp
negl
add
adc
mov
jbe
push
ljmp
insl
inc
fwait
pop
scas
sbb
inc
cltd
jecxz
jmp
xchg
mov
jbe
xor
mov
popa
xlat
pop
add
mov
adc
mov
in
incl
fwait
xchg
jns
push
jge
pop
cmpb
sub
mov
adc
inc
jp
call
scas
arpl
roll
lds
or
pop
jp
adc
std
pop
mov
pop
lock
mov
adc
and
sti
cld
test
push
sub
aam
repnz
roll
lock
mov
sbb
lods
loope
mov
sar
stos
push
inc
mov
fsubr
test
pop
cmc
push
je
ficoml
push
mov
sarl
xor
jmp
mov
pop
xor
push
push
mov
bound
push
std
mov
sbb
outsl
in
jmp
xchg
scas
jl
sub
dec
ret
gs
xchg
dec
ljmp
xchg
packuswb
push
or
and
mov
push
push
pusha
out
ja
mov
pushl
dec
add
rclb
sbb
icebp
sub
jle
repnz
ljmp
and
out
ljmp
mov
mov
xlat
sbb
sub
jns
fsubrs
decl
addr16
xchg
mov
pop
call
jmp
in
dec
xchg
xchg
push
mov
mov
sub
ljmp
mov
ret
fwait
add
jno
hlt
xchg
fstps
inc
xchg
cmp
and
ret
decl
mov
jmp
lahf
mov
pop
fisubrs
js
nop
in
icebp
fcomip
imul
push
mov
jle
mov
ds
ljmp
cmp
adc
nop
or
loop
jb
aaa
test
sbb
mull
pop
cwtl
sti
push
xor
imul
addr16
sbb
adc
dec
enter
sbbb
or
pop
mov
cld
fcomip
inc
fnstenv
xor
rcrl
mov
adc
ljmp
adc
push
fldenv
pusha
cmp
xchg
xor
pop
ljmp
add
inc
adc
shrb
js
mov
lret
sbb
mov
sub
push
xor
in
outsb
hlt
mov
and
push
int
mov
mov
loopne
jmp
cli
icebp
mov
xlat
jo
testb
int3
jae
jl
pushf
push
ljmp
pop
outsb
lcall
fstpl
adc
cmpsb
mov
mov
outsl
cli
mov
stos
pop
clc
cmp
ror
pop
jp
pop
dec
inc
outsb
aam
jmp
add
vcvtss2sd
adc
out
mov
scas
mov
cltd
cmp
incl
les
push
loope
cmp
outsb
sbb
and
sub
in
mul
cmp
add
add
aas
jmp
jbe
dec
push
push
mov
push
movsl
mov
and
testb
call
inc
cmc
cwtl
cs
xchg
arpl
push
or
pusha
cmpsl
imul
cmp
call
mov
cmp
mov
cs
in
lret
xchg
fistpl
or
pop
cld
push
mov
int3
orb
icebp
aas
cmp
xor
jne
xchg
jecxz
cli
lods
popa
incl
pop
xchg
test
cld
daa
xchg
push
cld
jb
outsb
outsl
popa
and
add
xchg
ds
jmp
clc
popa
mov
aas
sbb
imul
mov
stos
sbb
or
ljmp
dec
mov
aas
arpl
or
fdivrp
mov
and
cmc
and
pushl
mov
lds
imul
in
push
loope
cmp
movsb
btc
rcr
push
es
idiv
faddl
mov
xchg
dec
cmp
lret
icebp
add
bound
mov
cmp
adc
dec
cmp
divb
scas
out
push
loopne
inc
jmp
add
test
roll
fistpll
jo
test
pusha
std
repz
mov
push
push
imul
xchg
lahf
repz
dec
nop
ljmp
xchg
pusha
cmp
cmc
clc
xchg
out
inc
mov
icebp
ss
popf
sbb
mov
ljmp
nop
sbb
mov
popa
mov
stos
push
movsb
loopne
jne
sbb
cli
and
lock
incl
xchg
andb
in
sub
jle
lock
adc
pushl
adc
sub
leave
rcr
inc
ja
inc
dec
mov
arpl
cld
jno
xor
inc
jmp
add
loopne
pop
dec
pop
out
daa
enter
mov
inc
dec
adc
inc
adc
cwtl
aam
movl
cli
daa
jge
in
push
xchg
rcll
jl
mov
out
test
mov
mov
mov
cmp
dec
test
nop
mov
fnsave
insb
loope
cmp
int
lcall
cmpsl
insl
dec
jns
pop
rcrb
dec
scas
sar
stc
cmp
jbe
cmc
xchg
bound
ret
cmc
call
fsts
mov
outsl
xchg
insl
pop
mov
xor
jg
in
test
pop
fldcw
and
lods
in
fldenv
mov
and
sub
dec
negb
incl
cld
in
lret
push
inc
bound
xchg
jae
mov
xchg
frstor
loopne
adc
push
pushl
loop
shrl
and
fsubrl
mov
popf
add
push
cmp
imul
jmp
repz
in
insb
or
push
scas
lcall
imul
sub
aam
cltd
cld
adc
push
xor
lahf
jle
ljmp
cltd
lock
jmp
push
pop
adc
dec
add
out
mov
xchg
test
inc
test
mov
fs
flds
dec
and
cmp
ljmp
jae
imul
cs
dec
data16
lcall
cmp
shrl
push
pop
es
enter
enter
mov
in
adc
lcall
dec
cld
push
bound
aad
sub
push
push
sbb
out
xchg
jno
arpl
add
push
push
push
or
adc
push
movsb
test
fcomip
or
fidivl
push
fists
xor
loope
push
xchg
fdivl
incl
call
loope
xor
bound
add
loopne
movsb
or
rcl
or
lcall
or
js
rcrl
mov
sar
pop
sub
or
mov
xchg
lcall
ss
fcmovbe
mov
push
rcrl
mov
nop
sub
outsl
clc
incl
adc
sub
xchg
cmpl
adc
and
xchg
nop
hlt
adcb
incl
jnp
jp
mov
cmpsb
jle
lods
fsubl
fistps
pushl
bound
mov
or
call
rcl
ret
ss
lcall
insl
add
sub
mov
std
cwtl
cmpsl
popa
scas
cmp
sti
cmp
pushl
adc
testb
and
or
cmp
mov
jecxz
mov
and
adc
cmp
mov
mov
jg
bnd
sbb
jae
dec
ficomps
ljmp
or
lcall
push
xchg
push
xor
into
sahf
filds
jo
incl
lods
cmp
dec
jnp
mov
addr16
cmp
in
lock
hlt
mov
mov
add
and
cmp
cmp
mov
inc
push
jae
fldl
jle
and
fdivs
test
testb
push
imul
xchg
push
ja
into
inc
addr16
adc
int
add
jl
pop
arpl
mov
movsl
shr
pop
sub
jge
cwtl
mov
insb
sbb
nop
mov
mov
sbb
and
xor
sarl
push
into
sub
iret
out
aad
scas
fsts
es
jne
mov
dec
je
adc
pop
mov
dec
pop
or
inc
push
roll
cmpsb
ljmp
pop
pop
xchg
adc
or
cmp
pavgw
or
fnstcw
stos
in
pushl
aad
lret
xor
popl
hlt
scas
sbb
adcb
cmp
add
cmp
cmp
mov
jbe
sub
jmp
lods
fs
incb
fdivrs
jmp
xchg
mov
jg
sub
fistps
dec
push
fiadds
idiv
jmp
mov
sbb
push
pop
rol
and
add
shlb
jl
sbb
push
cwtl
aas
scas
maskmovq
negl
inc
push
add
pop
mov
incl
clc
loope
push
and
out
fs
sub
sub
mov
lea
aas
aaa
xchg
xor
xchg
cli
sti
outsl
jb
lock
aam
dec
or
and
jno
jp
cmp
lahf
out
test
addr16
inc
sub
popf
sbb
mov
insb
lods
mulb
out
cli
decl
or
push
into
imul
out
dec
xor
cli
decl
or
loop
push
pusha
ret
roll
mov
mov
in
pop
sarb
mov
pushl
jne
mov
xchg
dec
lret
sub
divb
sbb
lock
in
inc
inc
lock
repnz
out
cmpxchg
pop
mov
jg
stos
or
outsb
mov
scas
pop
rolb
stc
les
rorb
mov
and
jmp
xchg
lods
rol
adc
mov
mov
sbb
scas
xchg
adc
cltd
les
lcall
add
jge
addw
shlb
cwtl
fistl
mov
and
icebp
pop
mov
jae
and
mov
sarb
pop
mov
pushf
cmpsl
or
adc
aam
hlt
incl
dec
xchg
stos
cmp
jb
and
mov
jg
imul
mov
xor
lods
push
inc
mov
mov
and
jmp
repz
int3
sbb
xor
insl
addb
xlat
mov
iret
ja
call
cmp
decl
pop
cmp
fwait
mov
scas
mov
sub
cmc
les
incl
mov
sbb
lcall
ret
lcall
sar
das
jmp
fs
mov
mull
mov
and
jno
incl
or
sub
mov
adc
ljmp
fisubrs
out
jl
mov
loopne
cmp
push
in
pop
mov
push
push
jo
enter
xchg
mov
call
movhps
out
mov
xor
lock
inc
iret
adc
ljmp
pop
loopne
call
movsb
fmuls
mov
push
push
mov
sub
shrb
std
icebp
xchg
or
push
add
cmp
inc
fcomip
fwait
sbb
adc
cmp
notb
mov
out
mov
scas
ljmp
cmp
testl
sbb
aaa
sarb
lock
mov
insb
decl
lcall
inc
mov
adc
mov
mov
imul
out
ljmp
call
loopne
push
movsl
jle
repnz
push
imul
in
and
or
out
aam
das
shlb
cs
mov
mov
das
xor
ss
dec
pushf
add
cmp
call
xchg
rcll
sub
pop
in
imul
mov
addr16
stos
jns
or
ljmp
movsb
lret
cmp
das
xchg
cmc
sub
pop
test
sub
xchg
xor
push
std
jecxz
adcl
sub
cmp
inc
inc
das
test
gs
inc
jg
lcall
stos
mov
cmp
fcmovb
mov
ss
jnp
in
and
int3
pop
xlat
jne
sub
xlat
rorb
scas
test
lret
int3
adc
jge
push
hlt
cmp
fisttpl
xchg
ret
fldt
inc
daa
push
mov
jne
mov
jae
push
arpl
ficompl
jb
xchg
pop
mov
pop
lcall
ljmp
flds
lret
sbb
leave
orb
stos
in
mov
enter
lcall
std
pop
imul
dec
push
mov
cli
dec
popa
aad
jmp
lods
jp
bound
movsl
lods
fisttpll
dec
jl
es
js
dec
pop
outsb
sub
mov
call
in
not
sbb
add
xor
xchg
sti
fcomps
sar
decl
test
sbb
stos
inc
pop
pcmpeqw
or
inc
enter
incl
xchg
lcall
out
rcrb
inc
sub
push
dec
test
push
pushl
std
jmp
fiadds
bound
xor
jge
sub
sub
ljmp
pop
cwtl
leave
lods
push
lds
mov
xchg
jmp
adc
cmpsl
rolb
shrl
jp
inc
das
sarb
inc
adc
jle
aad
mov
pop
int3
adc
mov
cld
es
push
inc
aas
adc
stc
js
arpl
push
push
enter
push
cmc
push
sub
or
inc
push
xor
jns
test
inc
xorb
inc
loopne
jae
push
mov
push
out
pushf
jo
sub
jg
xlat
pop
add
cmpsl
int3
xor
icebp
add
mov
adcl
jl
es
test
enter
sbb
pop
dec
pop
negl
les
lock
leave
mov
fbstp
pop
rclb
jmp
inc
loop
ret
movsb
scas
or
aaa
add
mov
hlt
add
cli
ja
ret
push
js
notb
aaa
std
das
clc
pop
or
adc
loop
test
sbb
push
ret
cmp
pushl
and
push
inc
ficompl
mov
sub
cltd
push
das
mov
decl
jnp
stos
xchg
adc
mov
aam
push
stos
lahf
xor
mov
lods
insb
and
jbe
repz
cmp
and
lcall
fsts
push
std
test
push
add
mov
xchg
mov
in
es
lret
scas
inc
addl
call
cmpsl
push
outsl
cmp
sub
dec
mov
jne
aam
xor
xor
mov
or
cmp
mov
incl
outsb
xor
jb
adc
gs
sbb
dec
out
pop
out
mov
call
lcall
mov
stos
les
pusha
sbb
xor
sub
xchg
test
mov
movsl
sub
mov
sar
call
sbb
mov
cmp
in
push
icebp
mov
jo
sbb
sub
imul
mov
cmp
or
fidivrl
adc
dec
inc
orb
pop
mov
decl
sub
or
and
lock
jp
mov
movsl
ret
and
cmpsb
decl
stos
andb
mov
xor
xlat
add
outsb
fmuls
jg
call
test
rcr
adc
adcl
xchg
lahf
in
cmpsl
fs
ljmp
jb
mov
adc
mov
sahf
sub
xlat
loop
cmp
icebp
out
xchg
dec
mov
js
sub
xor
mov
scas
mov
in
fidivrs
push
inc
fisubs
mov
call
mov
hlt
sbb
mov
mov
and
pop
cmp
stos
jno
shl
mov
dec
jp
dec
in
dec
cmpl
fs
mov
frndint
pop
push
jbe
mov
mov
xchg
inc
loope
ljmp
jo
mov
sbbb
and
dec
mov
jg
mov
outsl
call
mov
add
fwait
and
mov
out
add
or
jb
jno
out
jmp
sub
and
pop
sbb
sub
mov
sub
icebp
fiaddl
fs
lret
lock
dec
lcall
dec
sbb
mov
jl
mov
mov
push
mov
mov
mov
aas
xchg
nop
push
inc
das
decb
stos
lret
movsb
inc
pop
arpl
or
xchg
clc
aaa
cmc
in
pop
insl
pop
pop
ss
pushl
mov
mov
or
or
mov
cmp
loopne
movsb
mov
jl
mov
jg
decb
dec
mov
fs
or
shll
test
sbb
jmp
adc
in
mov
inc
clc
bnd
jb
pushf
push
mov
rorb
aaa
jl
lcall
mov
in
mov
mov
and
das
add
repz
mov
dec
arpl
jmp
and
fstpt
iret
mov
or
jo
fnstsw
xchg
sbb
mov
push
dec
cli
sub
jbe
or
inc
jne
mov
pop
lcall
das
cli
fisttps
cwtl
pop
add
fs
adc
out
xor
fimull
call
mov
add
sub
lods
sub
sbb
push
ds
xor
loopne
gs
call
and
fidivrl
and
pop
xor
mov
bound
pop
push
rclb
pushl
pop
repnz
aas
pop
outsl
add
adc
iret
adc
fdivrl
decl
xor
pop
and
cmpsl
push
loopne
test
scas
enter
cltd
test
out
push
mov
jmp
cmp
mov
jecxz
mov
ficoms
adc
or
mov
outsb
popa
popf
stc
enter
lcall
addr16
push
dec
sub
in
leave
pop
daa
mov
jmp
pop
mov
decl
sub
daa
mov
iret
dec
iret
shrl
aam
push
loop
sbb
sub
je
lods
out
sbb
decl
int3
xor
dec
cmp
stc
pop
cmp
testl
cmp
incl
icebp
stc
fcoms
dec
insb
xor
mov
sbb
add
mov
fidivs
jecxz
insl
adc
scas
ja
into
jns
popa
out
aam
ljmp
jecxz
jmp
jl
lock
sti
lds
add
sbb
xchg
enter
adc
mov
mov
mov
pop
or
fs
ljmp
push
stc
movsl
xor
gs
sbb
shll
jmp
sbb
mov
jmp
jns
xor
xor
add
repz
xchg
sbb
clc
fsubl
push
dec
sub
mov
xor
jecxz
mov
xchg
cs
adc
jae
mov
fbstp
inc
mov
decl
dec
jmp
loop
jae
xchg
adc
std
jno
pop
xor
fnstsw
ljmp
xchg
ja
dec
sbbb
gs
out
pop
xchg
fidivrl
or
mov
in
and
mov
mov
pop
jnp
bound
test
cli
mov
call
lcall
pop
lret
and
jecxz
scas
xchg
inc
mov
ljmp
cmp
call
pop
mov
shl
add
mov
into
fstps
sub
incl
push
jmp
and
scas
aas
rcll
mov
iret
mov
inc
pushl
dec
cmc
and
cmpsb
lods
rorl
jne
dec
xor
mov
aaa
add
xchg
push
cmp
jle,pt
paddd
outsl
jmp
out
cmp
fwait
movsl
dec
jb
shll
int
stos
mov
popa
mov
pop
std
adc
jle
sti
inc
cmp
sub
inc
mov
inc
mov
and
jp
cli
xchg
inc
mov
mov
mov
xorb
add
std
in
shll
jge
jmp
shrl
test
mov
lds
cmp
jae
cwtl
mov
push
int3
lods
cmp
loope
mov
fisubrs
mov
lds
xchg
mov
adc
lds
and
shlb
mov
sarl
push
mov
dec
add
sub
add
loope
lods
xchg
addr16
push
pop
xchg
adc
dec
pop
xor
mov
cmp
ror
incl
in
aaa
and
das
fildl
sub
arpl
int
call
lcall
pop
xor
inc
or
pop
push
sbb
push
jne
cmp
pushl
sbb
test
adc
push
adc
int
dec
and
jmp
cmp
pop
mov
push
sti
jbe
fdivr
or
jecxz
jns
bound
insl
jmp
push
jnp
stos
sub
cltd
jne
arpl
cs
cmp
add
roll
fucomp
cmpb
adc
popf
dec
dec
mov
jno
sbb
jns
lcall
xchg
hlt
inc
jns
test
pop
addr16
jbe
stos
jns
lods
jo
jecxz
xor
cli
pushf
inc
cld
pushl
push
enter
push
inc
xchg
jbe
pop
or
dec
sbb
decl
adc
push
and
jne
icebp
clc
ficomps
cld
imul
mov
fisttps
fdivl
cmp
jno
add
mov
mov
mov
sbb
push
mov
jmp
sbb
scas
inc
aas
cwtl
push
jnp
mov
gs
mov
jle
push
mov
jmp
pushf
ficomps
jo
add
rcrb
sub
enter
popf
xchg
scas
or
inc
imul
inc
negl
repz
jg
lock
jb
aad
insl
outsb
jle
js
repnz
sti
adc
call
sbb
rolb
sbb
movsw
add
sbb
xor
pop
sub
adc
incl
fidivs
jmp
addl
cmp
into
in
sbb
fisubl
je
pop
xor
mov
push
adc
mov
cmp
jb
clc
and
aam
xchg
call
cmp
sub
xor
xor
pop
sbb
sub
pop
mov
mov
sub
mov
xchg
dec
adc
cs
mov
ljmp
pop
les
fiadds
fdivrl
cwtl
loopne
adc
cli
or
pop
mov
lcall
outsb
cmc
movsb
jmp
jmp
mov
das
imul
mov
jecxz
cmpsl
out
arpl
lret
inc
clc
popa
inc
test
sti
xor
mov
loop
repz
adc
aaa
sbb
ret
jmp
cmp
mov
sub
clc
add
xchg
pop
inc
pushl
dec
and
repz
sti
enter
push
ljmp
xchg
cmp
mov
sub
ret
sbb
popf
xchg
fwait
lods
jp
js
and
pop
call
adc
adc
bound
and
push
sbb
popa
sahf
dec
jo
or
jmp
mov
and
pop
xchg
stc
jl
mov
lods
cmp
fcomip
ljmp
mov
push
pop
test
lods
xor
add
pushl
mov
mov
add
fs
or
xor
dec
mov
sub
orb
adc
ljmp
int
push
dec
xor
adc
ljmp
adc
jmp
sub
mov
mov
mov
sub
imul
jg
mov
xchg
and
or
call
sub
pop
shlb
add
xchg
inc
scas
ficoml
pop
adc
cld
or
out
jp
lods
jecxz
pushl
arpl
push
fisubl
mov
pushl
lods
or
inc
aas
jnp
jmp
scas
sarl
popa
loopne
inc
testl
mov
std
pop
dec
lret
sti
test
orb
testl
adc
dec
add
subb
xchg
sub
clc
int
enter
notb
dec
lcall
cmc
xor
and
sub
in
aad
dec
add
enter
jmp
push
or
lock
mov
jbe
adc
fiadds
mov
into
add
scas
das
popa
mov
call
pop
dec
cmp
pusha
jecxz
cmc
or
aam
mov
dec
ja
fsubrl
jmp
in
int3
repz
shrb
push
std
loop
lcall
call
sub
loopne
not
sub
sti
cmpsl
sub
mov
xchg
xchg
mov
xchg
movsb
adc
jns
mov
pop
aad
push
mov
jae
pop
sub
mov
inc
mov
call
inc
fs
pop
pop
loop
and
sub
jnp
pusha
jae
out
pop
shlb
push
aaa
decl
lcall
xchg
sar
cwtl
push
inc
xor
call
insb
ljmp
pushf
pop
cmp
push
jbe
ljmp
mov
pop
mov
xor
std
pop
cld
jle
push
sbb
push
mov
fists
dec
adc
xchg
pop
or
data16
or
mov
imul
scas
mov
pop
push
std
stc
shl
pop
jbe
cmc
into
or
cltd
clc
fcomip
in
mov
jno
or
shl
jb
and
mov
je
pop
dec
xor
adc
jnp
cmpsl
pop
xchg
xchg
popl
dec
incl
mov
je
pushf
jge
popf
mov
inc
ss
add
les
std
outsl
pop
aad
jb
xchg
xchg
add
or
call
xor
xor
jl
xor
mov
int3
gs
xor
out
out
iret
imul
mov
jo
imul
add
cmpsl
inc
sub
gs
insl
xlat
aam
lea
mov
jnp
push
aas
lret
cld
ljmp
pop
add
pop
in
cmc
enter
repnz
incl
stos
int3
test
or
mov
cmpsl
mov
out
fwait
imul
dec
push
cmp
cmp
iret
pop
and
fstps
movsb
sub
jmp
pusha
mov
rcrb
pop
sub
cmp
and
clc
jge
push
push
jmp
add
sar
adc
mov
add
mov
inc
jecxz
decl
mov
dec
mov
addl
dec
pop
jg
call
sti
dec
je
mov
mov
ret
dec
or
and
push
pop
mov
popa
cld
mov
add
imul
pop
hlt
outsb
fcmovne
loop
lcall
insl
in
ja
mov
insl
sub
sbb
scas
insl
mov
jecxz
inc
cmp
and
shlb
sar
lcall
ss
mov
sub
sub
dec
movsb
rclb
shrb
push
data16
mov
cmpsl
out
and
call
sub
xchg
jnp
pop
imul
push
fcmovb
pop
jg
mov
jmp
mov
out
push
cmp
arpl
mov
sarl
xchg
dec
je
scas
jecxz
lea
push
ret
inc
decl
and
mov
enter
cmp
xchg
clc
test
aad
out
pusha
mov
jb
mov
inc
lahf
repnz
vpaddd
mov
sbb
shll
mov
adc
xor
call
cmp
inc
jmp
sbb
jmp
mov
stos
sarl
out
cmpsl
mov
stc
es
or
test
popf
das
jmp
call
or
cmpb
push
or
insb
out
sbb
jno
pushf
sbb
pop
mov
mov
and
test
out
ret
jecxz
cli
sbb
ret
data16
cmp
mov
std
fiaddl
jno
in
cs
and
outsb
lret
xchg
inc
xchg
lods
aas
xchg
mov
int
sub
push
pop
inc
call
xchg
mov
loop
lea
popa
mov
sub
iret
dec
ret
mov
shrl
std
pushl
es
sti
push
mov
mov
mov
pushl
adc
and
mov
push
xor
or
aaa
jecxz,pn
xor
call
mov
loop
sbb
sbb
and
stos
stos
push
mov
daa
push
jne
decl
lock
cli
pop
push
outsb
and
and
push
adc
mov
jl
int3
cmp
push
ss
clc
jmp
pop
xchg
add
xchg
arpl
stos
test
ret
pop
outsl
rcl
hlt
cmp
xor
addb
in
in
push
aam
push
inc
or
je
sub
psllw
daa
xchg
jle
das
sbbl
mov
mov
pusha
in
pop
xchg
push
and
dec
decl
push
fcoms
jo
repnz
jb
sbb
mov
fisubrl
call
pop
sbb
xor
outsb
div
mov
sbb
int3
jno
in
jo
and
pop
lret
ds
incl
pop
fbld
pop
mov
xchg
and
xor
inc
hlt
and
jp
loope
cmpsl
jnp
js
jae
cmc
adc
sbb
sti
mov
push
jmp
push
es
mov
ret
push
or
rorl
not
pop
idivl
xor
jbe
mov
push
test
xchg
andb
dec
out
pop
jg
ljmp
stos
hlt
scas
jno
lods
sub
ficomps
test
mov
inc
push
inc
clc
adc
jmp
into
jl
cld
imul
test
arpl
incl
xchg
sbb
add
and
stos
stc
push
dec
mov
xor
movsl
ljmp
push
mov
rcll
pop
lods
adc
cltd
xor
fidivl
fcoms
pop
ret
rorb
cs
inc
or
lcall
outsb
ret
add
scas
push
lret
loopne
pop
mov
push
and
stos
jns
pop
xor
sub
sub
aas
repnz
xor
popa
into
iret
into
mov
idivl
mov
ljmp
xor
mov
ror
xchg
mov
pop
and
xchg
xor
adc
jnp
shl
mov
pop
cmp
subl
mov
call
out
imul
cmp
inc
jns
ret
cmp
enter
push
fldlg2
sahf
cmpsb
stos
xchg
add
mov
lcall
insb
mov
and
pop
int
pop
fst
xchg
jae
and
incl
inc
sub
push
mov
inc
mov
sbb
scas
cmp
dec
int3
pop
js
enter
out
clc
pushl
jae
pop
leave
sbb
mov
and
or
jg
jl
cmp
or
add
push
mov
lock
ret
incl
cld
add
fwait
cltd
test
repz
adc
dec
dec
inc
jae
loopne,pn
punpcklwd
incl
scas
push
gs
rcrb
xor
sub
mov
mov
arpl
cmp
mov
das
ljmp
in
in
popf
int3
stos
sbb
leave
mov
scas
and
std
std
xor
xchg
cli
fcoml
mov
sub
aam
mov
push
call
mov
push
fisttpll
cld
pop
test
scas
lcall
and
in
jp
push
mov
das
out
cli
fstps
int
cmpsb
lods
icebp
aaa
rorl
in
aad
push
pop
pop
test
cli
lcall
inc
push
mov
dec
dec
sarb
pop
or
pop
aaa
daa
ss
jp
call
loopne
inc
cmp
iret
icebp
repz
adc
fcomps
jmp
fnstcw
or
in
dec
adc
call
and
sahf
inc
pop
mov
decl
pop
rcrl
xor
inc
stos
push
sub
cmp
push
sub
fsts
push
xor
dec
push
das
mov
arpl
inc
add
xor
push
ja
mov
pop
je
sarl
xor
outsb
sbb
pop
jb
pusha
stos
orl
fxch
scas
ss
jo
scas
jg
arpl
lcall
enter
adc
adc
sbb
sub
jg
ljmp
cmp
mov
lret
ret
outsb
repnz
ds
fadds
out
jp,pt
pop
aaa
shl
je
fcomps
fs
sub
iret
subl
stos
roll
mov
push
dec
mov
push
xchg
inc
cltd
je
mov
mov
push
aam
push
sbb
pop
insb
sub
in
incl
push
or
fwait
inc
or
xor
mov
stos
shll
mov
add
mov
and
cli
rorb
xor
jge
sbb
call
cmc
fdivs
in
in
add
ljmp
outsl
sub
adc
sub
ss
add
add
push
hlt
xor
push
cmpsl
fdivl
mov
aam
cld
aad
stc
pop
cmp
dec
xor
test
mov
insb
cmpsb
adc
dec
dec
sub
jmp
lcall
leave
jno
test
cmp
jo
mov
sub
mov
xchg
jns
cmpsb
xchg
loop
ss
pop
jae
xchg
add
or
inc
lods
sub
movsb
lock
jmp
xor
test
xlat
cmp
dec
mov
adc
push
xchg
es
xorb
dec
pushl
sbb
mov
stos
imul
dec
fsubrl
xor
mov
pop
movsb
sti
addr16
dec
ret
hlt
push
subl
loope
lcall
inc
scas
sbb
incl
ljmp
popa
adc
ss
popa
xor
imul
inc
and
sahf
inc
repz
or
fwait
jnp
nop
mov
icebp
pop
xor
xor
lock
push
das
popa
in
mov
popa
nop
pop
ds
mov
inc
or
xor
mov
inc
out
xor
xor
jmp
pop
inc
push
inc
iret
std
sbb
dec
and
mov
imul
adc
in
jnp
and
or
cwtl
loope
fnop
mov
call
jle
xchg
repz
pop
cltd
mov
mov
jne
addl
push
pop
sti
mov
xchg
cmp
dec
dec
addr16
xchg
lahf
mov
cmp
test
call
into
ljmp
sar
xchg
ja
adc
dec
ss
lret
in
dec
sub
lcall
fdivrl
lea
icebp
mov
imul
cltd
add
jmp
jmp
mov
pop
fwait
popa
fcmovnu
xor
mov
test
lcall
mov
sbb
mov
jne
daa
pop
iret
stos
mov
mov
ljmp
push
mov
cwtl
xor
daa
rcpps
mov
or
stos
std
mov
mov
push
mov
xor
loope
mov
test
stos
fs
and
mov
lret
ud0
decl
imul
scas
sub
mov
jg
mov
inc
idivb
pop
std
push
adc
icebp
inc
imul
and
fiaddl
rcrl
mov
aad
ljmp
pop
pop
mov
cmp
xor
inc
mov
mov
mov
incl
sub
xchg
and
xor
test
dec
add
pop
xchg
mov
xchg
or
jae
mov
push
xchg
pusha
cmp
incl
cld
call
nop
mov
int3
xchg
mov
stos
mov
and
cmp
push
jne
cmp
sti
fistpll
repz
pop
pop
push
push
call
ss
mov
mov
mov
inc
or
inc
repz
jb
mov
jl
mov
lahf
mov
pop
pop
and
jo
or
push
imull
test
test
jno
xchg
push
std
inc
das
sar
lea
mov
dec
cmp
aaa
xor
sub
xchg
push
sbb
pushl
sbb
push
inc
fs
mov
adc
xchg
push
popf
aam
lcall
add
aad
fwait
mov
add
dec
cmpsb
push
push
mov
pusha
out
dec
arpl
push
fsubs
mov
enter
clc
ljmp
aaa
jb
mov
repnz
push
repnz
add
jmp
dec
cli
decl
sub
fldl
xorb
push
and
sbb
std
ljmp
inc
insb
stos
cmp
mov
dec
xor
adc
ljmp
pop
mov
arpl
ss
dec
push
dec
ret
ret
lcall
jmp
and
mov
cltd
pop
shrb
sbb
scas
movsb
enter
in
dec
loop
jmp
jmp
fs
jno
and
inc
xor
mov
icebp
loop
jg
fstps
and
fistps
push
xlat
test
fildl
sub
mov
orl
mov
std
jns
in
test
mov
cmp
lock
ror
sbb
scas
cmc
pop
cmpsl
test
decl
in
or
inc
xchg
dec
pushf
insb
cmp
mov
lea
lds
fs
and
test
or
lcall
lret
jo
and
nop
dec
incl
inc
jo
add
sbb
lahf
movsl
add
mov
and
cmp
roll
ret
out
sbb
xlat
or
into
ljmp
shl
jb
push
cs
pop
call
test
addb
sub
mov
dec
push
push
idivb
lock
xor
push
dec
inc
out
jne
jne
cli
leave
imul
scas
mov
sbb
arpl
fidivrs
data16
mov
daa
bound
mov
xchg
movaps
xor
xchg
icebp
jg
fsubl
loop
xchg
insl
leave
subb
fbld
cmp
and
xchg
fs
outsb
xlat
in
rorl
cmpsb
push
fiaddl
fcomps
adc
sub
mov
cwtl
push
or
cmp
pushf
mov
add
outsb
jle
inc
pop
mov
lret
add
sub
or
fldenv
jecxz
incl
adc
or
stos
gs
std
bound
push
incl
sub
mov
mov
xchg
dec
jp
rclb
fildl
sub
mov
push
add
ljmp
mov
ljmp
sbb
call
std
je
mov
push
push
mov
xor
inc
or
lret
inc
into
pop
dec
inc
sub
mov
add
jecxz
push
lock
pop
loop
ss
lods
pop
test
lea
inc
add
loopne
call
shll
push
and
push
add
push
decl
push
push
mov
mov
arpl
icebp
mov
xor
rcrb
adc
incl
push
cmc
and
movsl
imul
push
mov
call
mov
mov
push
sbb
pop
mov
sarl
cwtl
push
push
cmp
push
xorl
call
mov
rcrb
out
dec
outsb
stos
adc
push
xchg
cs
lcall
inc
aas
sbb
pop
inc
push
xlat
loopne
in
inc
xor
outsb
in
fisubrs
inc
jge
dec
lcall
sbb
cmp
lcall
sbb
adc
and
rol
cmc
loopne
repz
bound
ljmp
jp
test
ss
fcomps
in
xor
cltd
or
cmpb
call
nop
mov
adc
fsubr
or
lret
jmp
xor
jne
pop
cwtl
inc
pop
push
add
aad
call
sarl
lcall
push
and
adcl
mov
mov
lcall
inc
out
cli
jmp
xor
adc
cmpsl
push
inc
loope
fld
jmp
popf
les
ror
pop
or
dec
enter
out
fisubrl
incl
pop
scas
lods
mov
jbe
mov
jno
js
mov
add
adc
xor
aam
je
jge
mov
add
cmpsl
lcall
or
lret
mov
insl
jp
cs
jecxz
std
cmp
and
cmp
adc
sub
aam
adc
add
pop
jo
movsl
pushl
ja
lahf
data16
pop
jbe
jge
and
cld
leave
adcb
cmp
js
aam
jns
ret
call
inc
push
stos
cwtl
test
rcrl
push
aad
inc
lcall
xor
cld
pop
sbb
cmp
xchg
mov
mov
xchg
out
clc
jmp
test
sbb
fsubs
enter
insb
push
xchg
les
das
clc
jmp
loopne
cmp
out
cmp
imul
lods
fstps
call
mov
pop
dec
and
mov
shl
and
cmp
das
es
ud0
lcall
jb
mov
cmpsl
mov
mov
xchg
rorl
jl
scas
daa
cmpsb
out
adc
stc
and
iret
xchg
sarb
imul
inc
outsl
mov
imulb
test
incl
inc
test
ja
movsl
cmp
shll
pop
pop
lock
jg
scas
clc
decl
inc
xchg
adc
loopne
enter
xor
stos
mov
add
push
sti
icebp
xchg
add
loop
pop
add
dec
mov
jmp
mov
cmp
popa
nop
arpl
or
mov
jno
and
inc
into
fcomip
call
inc
or
inc
imul
sbb
test
aad
ret
loope
dec
dec
mov
dec
pop
mov
cli
fdivrs
and
push
xchg
mov
sub
mov
xchg
jae
ljmp
inc
push
sub
scas
subl
inc
fiadds
rolb
pop
mov
mov
aas
movsb
xchg
add
or
int3
mov
xor
jbe
dec
push
and
jmp
push
rorb
push
outsl
jmp
out
sbb
jne
aas
ljmp
repz
push
push
xor
jmp
int3
cmp
mov
cmp
mov
arpl
jmp
mov
push
sub
cmp
cmpsb
sbb
out
call
mov
sahf
shrl
in
pop
cltd
xchg
jge
je
or
jb
lcall
xchg
ds
pop
mov
inc
jbe
push
pop
jg
call
cwtl
imul
add
push
inc
mov
sbb
cltd
adc
jle
mov
imul
mov
aad
les
fcoms
call
lds
jae
dec
or
cmp
jnp
adc
mov
lds
ljmp
cmp
mov
shll
jl
orb
push
out
ljmp
dec
xchg
xlat
dec
mov
mov
jae
div
or
std
mov
or
jp
mov
pop
std
dec
les
int
dec
xchg
insl
std
mov
xor
push
lcall
xor
scas
dec
into
popa
fimuls
rol
or
and
lea
out
push
jbe
mov
fistpll
mov
pop
cmp
notb
jl
std
imul
xchg
cld
pop
das
clc
and
dec
add
stos
or
in
je
jle
mov
or
pop
in
cltd
push
mov
pop
decl
imul
sahf
xor
push
sbb
mov
xor
ljmp
mov
push
pop
push
mov
adc
repnz
xor
jne
sar
pop
orw
or
xchg
out
loope
push
sbb
mov
push
inc
inc
clc
dec
mov
scas
pop
js
aaa
hlt
mov
js
lods
jne
ret
in
adc
call
dec
decl
rclb
rolb
add
bound
jo
or
dec
incl
and
or
mov
push
mov
sbb
inc
in
cmp
fdivr
pop
sub
mov
ljmp
fiaddl
lods
out
clc
mov
mov
mov
fadds
fstpl
sbb
fisttpl
scas
inc
cltd
cmp
mov
fstpt
sbb
addr16
dec
subb
bnd
and
mov
jb
mov
xor
lret
and
add
sub
jmp
ret
xor
dec
sub
loop
aad
iret
cmp
ja
sar
lcall
pop
adc
mov
jne
push
sub
aas
dec
mov
dec
and
ret
xchg
push
jns
cmp
dec
lcall
pushl
mov
aaa
scas
stc
push
movsb
xor
mov
adc
push
inc
stos
ljmp
ljmp
mov
jge
push
or
clc
pop
out
jp
jecxz
sub
cld
xor
call
dec
inc
in
cmp
ret
jo
decl
or
ds
push
loopne
rorl
jecxz
lods
push
ljmp
call
enter
jb
xchg
hlt
mov
pop
inc
jo
mov
lcall
les
mov
pop
aaa
push
cld
xchg
sub
insl
lea
add
fwait
or
call
jnp
xor
push
mov
pop
or
or
ret
mov
push
jmp
mov
or
imul
aam
cmp
fld
incl
add
dec
cmp
push
jmp
pop
add
inc
push
jb
jmp
in
xchg
ss
pushf
loopne
pushf
mov
jecxz
inc
fwait
arpl
jg
fs
cmp
mov
dec
inc
mov
adc
pop
jl
add
jo
lcall
xchg
mov
pop
jno
negb
arpl
add
test
add
out
push
add
in
push
shll
and
mov
push
lret
lods
mov
jmp
fcoms
fs
clc
adc
es
mov
pop
or
mov
cli
das
xchg
adc
insb
enter
cli
cmp
mov
lcall
pop
jp
cmpb
push
call
mov
adc
incl
dec
in
inc
cmp
stos
push
adc
sbb
aam
fsubs
or
mov
push
sbb
cwtl
je
mov
jg
and
mov
xor
or
incl
loop
push
dec
adc
arpl
test
fwait
dec
scas
xchg
cmp
mov
push
lcall
mov
mov
ds
jmp
jmp
dec
xchg
scas
mov
jo
sub
cld
fbld
imul
loope
jmp
push
sub
call
pop
loopne
jmp
ljmp
mov
data16
or
loop
mov
sub
sar
and
idivl
jl
inc
les
cmc
sar
mov
lcall
push
cwtl
sahf
sbb
mov
or
cmpl
jbe
cmp
jg
jge
mov
jo
lar
add
sbb
movsl
dec
inc
repz
incl
sbb
mov
push
and
int
sub
mov
ret
sahf
sbb
js
jmp
popf
add
into
inc
mov
push
sub
sahf
xchg
lds
adc
dec
cmp
inc
or
jb
arpl
dec
cltd
add
pop
pop
out
and
sbb
add
pop
test
call
stos
and
rep
mov
cmp
mov
and
decl
mov
xor
xor
add
les
nop
es
mov
les
and
adc
push
aaa
cmp
fdivrs
cmp
push
sbb
cld
cli
lds
pop
xor
ds
mov
daa
mov
in
outsl
xchg
jns
push
sahf
or
incl
cmp
cmp
lretw
adc
cmpsl
pushf
adc
ljmp
mov
hlt
and
mov
lcall
dec
dec
lods
xorl
idiv
dec
stos
mov
mov
add
or
in
insl
in
cmpsb
popf
out
inc
scas
insl
pop
push
decl
stos
add
dec
push
adc
mov
in
pop
jmp
setno
out
daa
popf
dec
jg
jl
ja
int3
adc
mov
enter
fldt
lret
inc
mov
lcall
ljmp
int
add
jno
cmc
arpl
movsl
ja
adc
mov
test
call
push
cmp
xchg
sub
adc
daa
pop
aad
ljmp
mov
ret
decl
and
mov
dec
repnz
pushf
pushf
dec
jnp
stos
pop
shll
cmc
jg
push
push
xor
inc
dec
adc
jno
test
inc
mov
insb
mov
mov
int3
sahf
mov
dec
pusha
fwait
cmp
mov
push
mov
cmp
jne
inc
pop
fs
mov
push
lods
cmp
mov
xchg
idivb
cli
sahf
mov
test
mov
call
in
inc
cmpsl
hlt
adc
es
jle
mov
stos
mov
scas
test
jp
gs
decl
jle
icebp
popa
ljmp
xchg
call
test
jbe
pushl
and
mov
call
push
mov
test
pop
imul
mov
lcall
mov
cwtl
xchg
dec
mov
mov
inc
cmpsl
imul
sahf
dec
xchg
pushf
pop
sbb
lcall
lret
sbbb
xchg
cmp
imul
dec
add
sbb
and
cs
lcall
mov
add
xchg
in
movl
inc
jbe
imul
push
adc
in
incl
pop
add
cmp
pop
repz
and
push
insl
mov
fucom
in
xor
ljmp
iret
xor
ja
cld
rorb
call
arpl
sti
add
call
cld
inc
and
add
fistpl
push
sub
clc
mov
mov
das
xor
fmull
leave
inc
scas
insb
inc
lahf
imul
mov
inc
loopne
xor
sarl
and
xchg
add
sbb
int3
ret
in
insl
pop
inc
dec
push
mov
lock
aad
or
js
fdivr
call
pop
cmpl
ljmp
mov
call
adc
or
and
xchg
call
xchg
ljmp
adc
xor
sbb
xchg
shlb
ficompl
pop
pushf
scas
mov
loope
pop
xchg
mov
pop
sub
out
add
sbb
fbstp
xchg
fidivl
and
sbb
sub
xchg
insb
mov
outsb
dec
mov
orl
pop
rcrb
incl
cmp
idivl
mov
mov
and
popf
pop
fsts
xchg
shll
incl
testl
push
ret
jns
popa
repz
jbe
bound
xorl
pop
aaa
lea
cltd
cltd
cmp
sahf
test
inc
clc
insb
fs
inc
lods
xchg
arpl
mov
jo
add
mov
mov
sub
call
sbb
and
xor
cmc
dec
dec
jne
xchg
out
mov
and
in
or
xor
lret
adc
mov
ror
fs
ljmp
lock
lahf
cmp
sub
add
lock
ja
cmp
inc
ss
fcomi
xchg
xor
adc
ss
pop
jecxz
cltd
cli
fnsave
lret
mov
push
out
jg
push
leave
cmp
jns
cmp
cli
pop
hlt
push
push
sbb
icebp
pop
ret
lret
mov
dec
jnp
mov
js
arpl
jmp
jecxz
pop
adc
dec
dec
dec
add
jmp
push
xchg
jo
js
mov
adc
outsl
ficoms
in
pop
andl
dec
mov
push
std
pushl
imul
out
shlb
add
addb
mov
mov
fsubrp
outsl
xor
adc
lds
or
mov
ljmp
incl
test
cmpsl
aad
stos
push
pop
mov
sub
mov
pop
cmc
jo
dec
mov
mov
adc
cmp
adc
jg
sub
adc
adc
loop
ret
push
std
incl
dec
inc
sbb
dec
cmp
lret
jae
push
in
decl
xor
loopne
jg
xorb
sbb
popf
pop
jge
xor
stos
incl
xchg
sarb
jae
stos
jne
les
loop
pop
aad
fbld
or
clc
pop
loope
arpl
add
testl
jae
popf
mov
adc
sarl
imul
shrl
mov
lret
push
lcall
add
popf
xchg
dec
cmpb
das
and
daa
pop
ljmp
mov
call
or
xchg
sub
inc
push
xor
sbb
call
das
pop
dec
xor
sub
andl
inc
jae
mov
das
out
shlb
inc
jmp
movsb
sahf
ja
in
jno
mov
inc
scas
jl
sub
cli
ret
jl
mov
loopne
ljmp
xchg
lods
pop
loope
std
cmp
cwtl
jne
or
fcomip
ljmp
cmpsb
push
dec
leave
shll
rcrb
out
into
mov
stos
and
pop
push
mov
ret
inc
cmc
call
leave
mov
xor
incl
sbb
ficoms
adc
addb
pop
fwait
push
popf
rcr
mov
movsb
inc
aad
and
mov
hlt
xchg
ret
lock
aaa
je
les
fwait
xchg
decl
or
clc
stos
xor
and
inc
pushf
push
shl
flds
xchg
outsl
push
mov
dec
pop
mov
inc
xchg
adc
cmp
and
ret
sarb
aas
mov
call
add
and
nop
pusha
insl
push
fistps
in
cwtl
leave
mov
daa
aam
dec
int
sbb
cmpb
or
lods
lahf
mov
decl
outsl
popf
insb
jmp
inc
inc
test
roll
push
sub
int3
fwait
push
jnp
pushf
sarl
scas
cli
call
rcrl
pop
cmpsl
xlat
movsb
pop
das
js
repnz
mov
jae
jae
repnz
mov
jmp
lret
xchg
je
enter
std
push
jnp
lret
pop
dec
jae
imul
xor
jmp
stos
mov
or
inc
into
mov
mov
aas
cs
cmpb
jb
mov
xchg
xchg
out
test
or
mov
mov
cmp
adc
repnz
and
lods
lcall
lret
scas
push
mov
sbb
dec
lea
push
cmp
mov
jmp
addr16
push
fidivl
pop
dec
dec
out
movsl
jp
xchg
mov
lods
cld
mov
sbb
push
xor
aaa
call
arpl
clc
sub
loopne
shr
xchg
lret
ret
pop
sar
push
adcl
aas
decl
shrl
test
aad
cwtl
subb
jmp
lds
ljmp
mov
cli
jg
mov
or
push
addr16
push
sbb
hlt
pop
loopne
dec
xchg
adc
mov
ret
iret
fldcw
mov
mov
mov
pop
pop
or
mov
pop
popa
sub
xor
outsl
loopne
inc
jle
arpl
ja
nop
mov
mov
xor
test
inc
inc
ds
mov
lcall
xchg
pop
test
sbb
sbb
pop
fs
xor
jne
and
sahf
call
add
pop
fldcw
mov
fmuls
arpl
imulb
cmp
loope
xor
jecxz
incl
sbb
or
imul
push
push
cmp
add
add
mov
xor
in
or
ljmp
and
lds
popa
inc
stos
mov
mov
cmc
sahf
popa
sbb
fcoms
imul
mov
inc
enter
lcall
sub
jg
pop
es
test
out
sbb
fmul
sub
in
dec
pop
jg
insb
cmp
inc
aaa
lcall
cld
mov
orw
repz
pushl
ret
adcb
mov
mov
std
dec
ret
outsl
mov
lcall
in
daa
adcl
jnp
pusha
mov
insl
cmp
mov
jmp
test
xchg
arpl
repz
call
vmovaps
test
push
out
mov
dec
cmp
sub
lcall
cmpsb
orb
xchg
fbstp
cmp
decl
rcrl
sbb
mov
or
mov
out
inc
dec
out
jne
pop
sbb
mov
or
and
vmwrite
popa
dec
repnz
pushl
push
repz
lea
es
cmpsb
push
cmp
ja
icebp
dec
mov
jmp
fstpl
push
cmp
sbb
outsl
mov
pop
xor
pushl
mov
inc
xlat
xchg
pop
inc
sub
fcmovnb
sbb
ljmp
scas
or
rorl
dec
cmpl
aam
je
hlt
out
add
pop
les
dec
scas
push
pushl
jno
call
std
and
mov
mov
lret
pushl
fidivrs
sbb
addr16
xchg
jae
mov
fmuls
jbe
sbb
xor
or
loopne
sbb
call
cmp
int3
cmp
jo
xchg
mov
call
mov
lret
push
ljmp
cs
xchg
dec
push
fimuls
inc
hlt
xor
out
fs
decl
jmp
push
inc
cmp
mov
in
dec
lcall
loopne
pop
loope
mov
pop
pushf
xor
stos
push
jge
movsl
sbb
jmp
mov
push
and
jmp
int
lods
sub
add
addr16
cmp
fdivs
decl
imul
jle
mov
int3
pop
or
call
enter
cs
scas
xchg
sub
andl
xlat
call
jecxz
jp
mov
movsb
cmp
lock
pop
loope
inc
mov
rcr
sub
sub
incb
cmp
xchg
dec
aaa
dec
pop
mov
arpl
sbb
jle
and
add
cmpsb
inc
sub
mov
lcall
pop
xor
mov
hlt
repnz
adc
pushf
add
mov
and
jmp
inc
loop
xor
fwait
shll
or
sahf
rol
sub
push
sub
mov
rcl
decl
or
out
insb
mov
js
push
and
dec
xchg
sub
je
jne
lods
sub
mov
iret
enter
inc
jne
push
lods
mov
push
scas
enter
stc
test
ljmp
and
or
loope
xchg
jmp
scas
and
push
xor
ja
out
test
xchg
test
mov
lcall
pop
cmp
lcall
push
push
push
sub
data16
pop
repnz
push
ss
cmp
jp
jb
stos
and
mov
add
lcall
test
xchg
test
loopne
lcall
jo
adc
adc
int
ljmp
mov
push
mov
aas
adc
mov
fscale
mov
cmp
cmpsl
mov
add
div
dec
test
xor
xor
add
lods
ret
lcall
xor
adc
xchg
push
arpl
aad
inc
mov
push
xchg
jecxz
mov
dec
testl
lea
xchg
lea
inc
mov
stos
dec
loope
and
incl
lcall
jmp
jp
mov
out
mov
inc
push
inc
pop
pop
adc
mov
or
jno
push
mov
sahf
stc
jmp
cwtl
mov
ljmp
dec
sub
jp
cmpsl
or
iret
lods
mov
sarl
and
sub
call
subl
or
xor
loope
stc
bound
mov
daa
out
ret
lods
mov
loop
mov
cltd
cmp
outsb
lcall
rclb
ljmp
scas
dec
sub
std
mov
mov
cmp
shll
icebp
idiv
inc
decl
addps
xchg
lcall
sub
dec
data16
push
imul
call
std
mov
push
mov
inc
aam
mov
add
out
fisubrl
cwtl
or
adc
rorb
mov
and
pop
enter
or
add
mov
or
ss
lcall
adc
jno
aaa
jb
xchg
sbb
test
jmp
adc
adc
dec
cmp
in
enter
in
push
mov
ret
in
ja
in
adc
mov
jbe
cld
and
mov
pushl
jg
pushf
or
mov
inc
adc
push
and
push
jae
out
cmp
imul
jmp
rcr
js
aas
dec
stos
mov
movsl
jbe
push
xor
lods
cs
mov
hlt
mov
adc
mov
aaa
daa
adc
in
pop
and
call
loopne
cwtl
shl
shrl
sbb
stos
lds
push
ljmp
out
test
adc
mov
repnz
lea
insl
nop
ror
in
ljmp
cmp
sbb
push
stc
mov
and
pop
int3
packuswb
arpl
mov
mov
dec
and
inc
adc
and
jg
mov
out
inc
mov
push
xchg
test
ret
ret
dec
pushf
mov
jmp
xor
or
cltd
or
sbb
sbb
enter
lahf
sbb
cs
mov
sbb
test
pop
cltd
pop
mov
sbb
inc
repz
mov
xchg
inc
mov
mov
xchg
cmp
lock
sahf
mov
mov
xchg
adc
fs
mov
int3
out
xchg
cltd
push
jnp
loopne
adc
les
jmp
dec
scas
stos
sbb
sub
test
movl
movsb
ret
outsl
jae
inc
loop
jmp
mov
sbb
jecxz
push
mov
shlb
lods
adc
add
add
stc
sbb
sbb
incl
lods
sbb
movsl
inc
mov
inc
aas
out
stos
cld
ljmp
clc
incl
outsl
into
mov
cld
cmp
repz
decb
hlt
cmp
incl
mov
ret
add
andl
cli
jl
repz
ret
incl
call
and
xchg
push
jle
dec
mov
mov
cmp
hlt
xor
imul
inc
mov
daa
dec
mov
or
xlat
inc
adc
jnp
xor
es
ficoml
gs
inc
sbb
clc
pop
sbb
push
pop
out
out
pushl
pushw
ds
mov
scas
inc
lods
push
popa
popf
clc
dec
insl
pushf
mov
xor
movsl
add
call
pop
sti
jo
cmp
inc
aaa
mov
sbb
add
push
aas
popa
jg
mov
push
jae
lock
lods
scas
lcall
cmp
mov
add
sarl
push
out
imul
ljmp
incb
xor
inc
adcb
shr
insb
or
mov
add
xchg
xchg
fwait
jp
or
stos
leave
mov
lods
and
dec
daa
lods
cmp
dec
pop
jecxz
push
push
scas
fwait
adc
dec
push
mov
stc
dec
cmp
sbb
mov
lret
test
cmc
movsb
std
mov
mov
sbb
shrl
cmp
cltd
adc
push
lcall
addb
cwtl
fisttpl
mov
inc
fldcw
add
push
dec
popf
or
lcall
xorb
lock
aaa
movsb
mov
cmp
sbb
mov
dec
cmp
test
dec
decl
mov
std
inc
and
les
subl
lcall
test
mov
lcall
out
cld
int
mov
pop
lret
pop
sbb
mov
dec
adc
push
adc
xchg
inc
arpl
incl
call
call
jmp
pop
jp
int
or
movsb
out
cli
ljmp
in
icebp
je
push
mov
mov
decl
data16
mov
decl
addr16
jge
pop
dec
and
lret
mov
roll
repz
push
add
call
pop
jmp
enter
pop
cmp
ja
test
pushf
cmpsl
movsl
inc
movq
std
ljmp
sbb
adc
outsl
xchg
out
nop
adc
sub
decl
jecxz
or
mov
bound
add
cmp
daa
out
inc
loope
incl
dec
lods
pop
push
mov
in
stos
jo
push
jle
ljmp
sub
add
push
sub
sbb
push
xchg
mov
fstps
mov
mov
nop
or
xor
push
shlb
inc
clc
xchg
lahf
test
push
and
jmp
in
cmp
mov
test
scas
jae
testb
jg
add
pop
sub
inc
add
mov
cli
pop
mov
sti
mull
decl
sub
jns
insb
insl
mov
stos
sub
mov
movb
cmp
and
sarb
jmp
decl
dec
add
in
jnp
inc
jno
movsl
fs
xchg
dec
sarl
pop
xchg
mov
pushl
das
and
stos
aam
sub
in
push
pushf
int3
jns
and
and
dec
lret
incl
push
inc
add
inc
pop
adc
ja
loop
loop
jbe
lods
fwait
out
dec
aam
call
outsb
pushf
popa
mov
jecxz
jl
mov
add
movsl
pop
in
sub
mov
scas
sub
popf
jmp
and
inc
fidivrl
mov
pop
decl
xchg
ret
adc
dec
cmpsl
lds
mull
jns
test
push
xchg
inc
and
jmp
clc
jmp
fisttpl
mov
inc
aam
cmpb
jle
call
lock
sub
jno
push
out
ds
xorb
jne
sbb
xchg
loope
jl
incl
shl
arpl
add
cmp
adc
and
ret
ljmp
or
jae
or
insl
cs
xor
xchg
xchg
sarl
ja
fstpt
ljmp
mov
lret
int
jp
into
mov
xor
jo
enter
testb
fs
fbld
jecxz
mov
adc
jg
popa
stos
repz
mov
decl
into
rcrb
mov
sbb
arpl
call
add
loopne
int3
mov
lcall
lret
mov
leave
lea
stos
fistl
adc
jb
xchg
or
pop
fcoms
call
loopew
cmp
mov
xor
dec
gs
adc
lods
test
jo
mov
mov
ljmp
bound
pop
in
in
pop
les
mov
aaa
mov
lahf
stos
jp
sti
mov
lcall
decl
push
decl
jo
xor
jecxz
xor
ljmp
xchg
int3
inc
xchg
ljmp
lret
mov
sub
xor
mov
leave
repz
shlb
call
aas
jns
jns
jb
nop
pop
cmp
out
mov
movsb
inc
fcmovnbe
call
mov
xor
xor
daa
mov
jbe
jg
outsl
jl
sub
mov
nop
xchg
mov
sub
jno
out
xchg
lahf
mov
cmp
mov
cmpsb
mov
aaa
psrlw
xor
dec
lods
pusha
xchg
ja
sti
adc
sbb
lcall
pop
addr16
loop
scas
jb
hlt
inc
fdiv
push
leave
cli
idivl
fwait
inc
insl
mov
mov
lea
pop
mov
jle
in
xor
js
filds
push
inc
xchg
sarb
stos
dec
cld
mov
std
xchg
xor
rep
dec
insb
or
decl
cmp
mov
push
adc
push
or
mov
dec
test
jmp
fimull
loopne
push
movsb
fildll
sbb
mov
loop
sub
stos
push
mov
jge
fdivr
out
clc
push
xlat
mov
push
insl
xchg
ss
shr
mov
mov
aas
lcall
lcall
lock
cmp
mov
stc
jns
xlat
sbb
decl
pusha
daa
ds
or
in
lret
pop
cmpsb
das
ss
xchg
and
xchg
inc
fs
rorb
pop
sbb
inc
pusha
adcb
and
xor
pop
movsl
incl
cltd
cltd
test
test
xor
pushl
push
mov
dec
cmp
mov
xor
mov
fldt
mov
test
push
lcall
aaa
imulb
inc
add
lods
jecxz
jno
movsb
add
push
insb
adc
out
fmull
data16
sub
call
mov
clc
sahf
add
adc
das
stc
movaps
out
or
mov
mov
mov
sti
ja
inc
xorl
mov
andb
aam
lea
sbb
pop
movsl
sub
sarl
call
scas
lods
shl
mov
cmp
insl
add
cmp
add
xor
aad
cmp
fcos
ljmp
push
clc
add
cmp
and
mov
out
push
cmp
mov
jmp
ds
adc
pop
frstor
xchg
stos
mov
and
outsl
cltd
pop
and
incl
loopne
in
mov
enter
aam
sarb
call
sbb
push
aas
outsb
xchg
call
aam
pop
jb
mov
mov
push
push
adc
jbe
add
incl
jbe
lods
sbb
mov
lock
imul
lahf
dec
scas
in
jb
add
aad
jmp
inc
and
dec
jle
adc
and
leave
pop
xlat
mov
or
idivl
decl
bound
aam
ret
addr16
cwtl
add
adc
insb
lods
lods
add
sti
and
inc
dec
stc
jnp
xchg
stos
outsl
lret
aad
jnp
enter
ss
push
aad
loop
fistl
mov
loop
or
fidivs
or
lret
mov
sub
in
pop
pcmpeqw
mov
decl
pop
adc
sarl
test
jno
bound
sbb
mov
xor
iret
and
cs
or
lods
sbb
or
adc
mov
sub
frstor
fsts
ret
xrstors
jbe
cmc
aam
xlat
out
shrl
xchg
inc
test
jp
xchg
fucomip
jo
ret
mov
out
mov
or
cs
fcmovu
xor
or
out
dec
lcall
js
mov
hlt
mov
mov
or
adc
mov
sub
ljmp
jecxz
xchg
xchg
lcall
bound
ljmp
and
push
fwait
push
test
fistl
mov
or
adc
stos
imul
addr16
call
mov
lods
mov
jb
sub
jne
jp
std
cmp
add
push
call
out
adc
add
jecxz
sbb
sbb
xor
or
cmp
jmp
push
fdivs
cmp
loopne
ljmp
imul
pop
cmp
jmp
fildl
pop
xchg
pop
repnz
mov
mov
cmp
test
cltd
mov
pop
pop
sbb
jae
movsl
pop
insl
nop
adc
push
adc
cltd
dec
scas
sub
adc
roll
adc
inc
pop
in
and
xchg
lcall
push
mov
or
fcoml
int3
sub
mov
jb
sub
dec
ret
dec
jge
jno
fsubrl
rol
mov
leave
out
adc
mov
inc
mov
out
xchg
sti
add
cmpsb
adc
bound
in
call
add
xchg
or
adc
sub
aam
ror
orl
and
dec
orl
les
cmp
push
call
test
push
int
inc
fildl
sub
jl
xchg
popa
in
mov
outsb
insb
jbe
push
incl
mov
dec
inc
dec
int
ror
jge
and
mov
sti
mov
out
cli
stos
dec
imul
push
in
push
sbb
mov
cmp
xchg
mov
cmp
incl
inc
inc
add
cltd
mov
outsl
or
psubq
outsl
cmp
xor
sbb
adc
stos
decb
fldt
int3
sub
jl
xchg
or
mov
jle
cmpsl
adc
clc
adc
out
xchg
sub
stos
fwait
mov
fdivl
std
push
mov
cmpsl
sub
and
mov
incl
xor
lds
call
outsl
push
sub
lret
or
hlt
jbe
sbb
dec
loop
mov
fcomps
sub
cmp
xchg
xchg
fsubrs
xchg
clc
out
aas
imul
or
jo
or
push
or
mov
sbb
out
cs
xlat
mov
cmp
push
xchg
stos
add
test
mov
cmc
inc
sbb
push
pop
jo
loopne
testl
pop
aam
inc
jg
sar
or
add
sahf
cmc
push
js
mov
mov
mov
inc
or
icebp
pop
std
jle
mov
sbb
mov
pop
mov
pop
nop
push
xor
cmp
lea
sar
lcall
add
jno
sub
or
jnp
sub
ljmp
sahf
cmpsb
inc
push
xor
sub
push
loopne
mov
wbinvd
mov
and
xlat
dec
adc
int
jbe
xor
mov
lds
pop
insb
push
gs
xlat
incl
mov
ret
shrb
movb
xchg
inc
pop
and
adc
std
lret
jmp
loop
jecxz
or
or
mov
jecxz
das
fnstenv
hlt
push
inc
aad
xchg
ljmp
or
push
push
or
popa
stc
stos
js
aad
mov
enter
and
lret
pop
int
call
icebp
sbb
inc
xor
pop
jnp
ljmp
mov
dec
sbb
add
jge
xchg
ret
push
out
fwait
sub
xchg
rolb
movb
in
sub
mov
rolb
fwait
je
addr16
add
subb
cld
jmp
inc
mov
cmp
sub
dec
or
cmp
add
std
mov
pushl
mov
test
daa
popf
mov
xchg
xchg
mov
xchg
add
cmp
inc
pop
pop
sbb
decl
inc
pop
sbb
or
dec
call
or
stos
jne
in
mov
fdivp
lods
imul
push
and
dec
loope
out
into
jmp
shlb
sbb
cmpsb
imul
js
in
jbe
jl
inc
mov
inc
jp
pop
xchg
mov
je
jge
test
test
pop
jns
push
call
mov
pop
fsubrl
sbb
jecxz
inc
cwtl
sbb
aad
jg
lods
cmpsb
js
es
mov
decl
lret
pop
test
movsl
xor
gs
mov
testb
push
arpl
push
nop
fimuls
mov
flds
test
or
pop
xchg
lret
ljmp
cmp
jge
push
filds
mov
cmpsb
xlat
lock
ss
mov
pop
sbb
mov
xchg
push
push
push
xor
aas
movsb
mov
ffree
imul
and
jge
mov
lods
pop
nop
fsubr
adc
sub
cmp
inc
testl
cld
adc
sub
jmp
xchg
push
pop
and
dec
add
scas
pop
sbb
adc
fldl
outsb
mov
jbe
dec
call
std
in
fwait
lcall
add
shlb
notl
push
movsb
dec
cmp
inc
mov
dec
pushl
fcomps
add
inc
rclb
mov
ljmp
and
dec
inc
cmp
insl
fcoml
jbe
ljmp
loopne
stc
mov
push
ja
fsubl
pop
test
sub
add
jecxz
lcall
filds
mov
insb
sbb
daa
or
jae
incl
daa
xor
lretw
das
or
stos
push
sahf
pusha
mov
push
aaa
lret
aaa
rclb
jns
pop
cmpsl
push
hlt
mov
jl
into
in
push
mov
xchg
or
mov
push
cmp
mov
add
mov
sub
je
int3
and
call
sti
dec
outsb
negb
in
inc
dec
xchg
pop
pop
inc
leave
test
aas
mov
dec
call
cld
inc
mov
loope
push
aam
mov
cmpsb
ljmp
sub
or
in
ljmp
ret
adc
or
fidivrl
mov
rorb
cmp
inc
mov
dec
pop
mov
inc
pop
adc
mov
jno
movsb
ljmp
mov
in
repz
scas
lcall
or
push
dec
pushf
cmpl
inc
mov
es
les
rcrl
call
adc
or
xor
inc
sbb
loop
out
mov
popa
mov
data16
movsl
push
mov
cmp
mov
hlt
sbb
jl
nopl
inc
gs
jl
or
aad
pushl
out
cmpsl
push
notl
pop
pushl
inc
lock
and
pop
or
cwtl
in
mov
mov
mov
cli
ljmp
xor
pop
shrb
int3
or
ret
sahf
and
sbb
mov
adc
int
xchg
and
xchg
jne
xlat
outsb
xchg
lcall
addb
pop
sbb
dec
jl
xlat
dec
loopne
jae
inc
cmp
mov
xchg
pushl
mov
ja
jl
test
push
xor
out
out
insb
popa
lods
hlt
xchg
ret
cmc
lcall
imul
dec
ljmp
stos
lods
push
dec
movsl
cmp
cmp
jmp
mov
lds
ds
add
fwait
in
subl
dec
out
inc
cmp
fistps
add
movb
mov
cmpsl
sbb
add
call
nop
fistpl
repnz
aad
mov
push
sub
mov
imulb
jnp
cld
xor
push
mulb
sub
push
xor
pop
add
pop
mov
stc
sub
subl
das
inc
inc
mov
jg
or
ja
push
je
andl
cwtl
gs
rol
xchg
mov
push
movsb
add
std
ret
inc
insb
jne
mul
lahf
xchg
aas
lods
add
add
test
lret
pop
inc
lret
mov
jg
movsb
icebp
sbb
fs
mov
in
xchg
incl
stos
sub
or
pop
inc
inc
pop
cmc
test
jmp
outsb
push
ljmp
pop
cld
rcr
lret
dec
push
test
test
ljmp
jbe
cmp
push
hlt
mov
cli
movl
int
jle
je
push
call
pop
test
add
mov
cmp
cmpsl
push
inc
mov
leave
cmp
mov
pusha
in
jne
ret
mov
stc
ret
out
mov
repnz
mov
and
inc
inc
dec
cmp
mov
jmp
lock
jno
cmp
inc
frstor
into
outsl
push
xor
and
lock
cmp
fists
pop
jge
daa
int
jne
and
sahf
pop
ljmp
lock
dec
aam
dec
mov
xchg
pop
adc
ds
mov
fstl
in
push
data16
mov
cmpsb
lock
stc
or
cmp
int3
sbb
decb
lcall
ficomps
mov
or
push
sub
daa
test
pop
fcmovb
jge
ljmp
ret
jg
aas
popf
pop
int
call
pop
push
xor
adcb
jnp
outsl
jmp
pop
or
mov
jb
movsb
cwtl
sbb
outsl
mov
les
fcomip
pushl
adc
sarb
push
fwait
popa
mov
leave
into
stos
sbb
pushl
inc
rclb
push
je
lds
and
xchg
cli
push
push
sar
jmp
inc
mov
je
in
fidivrl
and
iret
xor
jb
mov
cmp
lock
decl
pop
and
scas
addr16
inc
cmp
mov
cmp
jmp
dec
and
pusha
xor
fbstp
cli
xor
rclb
adc
pushl
fisttps
nop
in
sub
push
inc
arpl
cmc
xchg
clc
in
repnz
mov
mov
jg
mov
icebp
jbe
and
ss
cmp
jns
mov
sbb
push
movsl
mov
mov
cmp
sub
and
cmp
scas
ja
jmp
lock
jno
ljmp
decl
lock
xchg
or
mov
xor
xchg
dec
mov
ret
and
shll
rorb
mov
pop
inc
ret
dec
xor
cmc
mov
push
pop
mov
clc
or
insl
or
loop
sub
mov
decl
dec
lret
pop
pcmpeqw
aas
cmpsb
in
sub
pop
xchg
cltd
bound
popf
mov
lret
jns
cmp
mov
addr16
cmp
aaa
mov
sar
lcall
dec
push
jae
fdivr
adc
in
loope
sub
ss
xchg
jle
push
outsb
inc
lcall
in
cmp
lret
sub
mov
sbb
into
repz
xchg
lret
cltd
fcoml
call
les
iret
xchg
pop
and
mov
mov
out
pusha
jl
andl
inc
or
add
or
fs
push
rcrb
call
lods
aam
popf
or
dec
movsb
int
movsb
jns
repnz
stos
push
inc
ljmp
sub
push
cld
incl
push
inc
cltd
pop
sub
mov
push
xor
ds
mov
mov
mov
jbe
pop
xchg
les
push
das
adc
idiv
push
adc
scas
pop
clc
popa
cs
imul
pop
sti
test
stos
jge
inc
insb
aas
mov
stos
xchg
xor
sbb
rcll
or
ljmp
push
cld
shrb
mov
push
adc
jne
sub
fistl
lds
fcmove
xchg
push
cwtl
or
lret
pop
inc
call
ja
lock
xchg
scas
cmpb
aaa
mov
ljmp
hlt
or
push
js
sub
lods
call
decl
cmp
adc
ficompl
cli
fstps
push
shll
loopne
test
clc
add
not
les
adc
mov
push
nop
aad
pop
jmp
das
push
jg
adc
xchg
xchg
push
std
cmp
addr16
jbe
add
sbbb
in
inc
aas
or
jno
mov
lcall
add
lahf
pushf
inc
imul
push
lods
mov
and
test
mov
jmp
pop
mov
bound
push
sbb
jb
loopne
mov
xchg
movsl
or
mov
flds
pop
roll
arpl
fmull
cmp
fisubl
push
inc
in
xor
incl
sar
push
jns
xor
mov
jae
test
pop
jae,pt
cld
mov
fnstenv
inc
jmp
xlat
sub
js
jle
popa
aam
adc
lahf
ljmp
cmpb
lcall
inc
mov
push
and
jle
inc
dec
lods
jge
test
xchg
jg,pt
call
in
in
mov
and
ja
cli
add
mov
jo
xlat
push
enter
data16
pushl
add
xchg
or
shll
mov
pop
push
or
hlt
lahf
out
cli
imulb
pop
inc
lret
mov
sbb
sahf
or
sub
mov
jmp
in
cmp
xor
or
hlt
inc
jle
testl
pushl
push
pop
int
dec
es
imul
pushf
and
pushf
fwait
jmp
cmp
loop
fisubrl
in
add
addr16
loopne
pop
cmpb
xchg
pop
push
js
incl
cld
incl
andb
dec
inc
sub
hlt
push
and
dec
mov
lret
xor
incl
rorb
in
xchg
movb
es
sarb
xchg
outsl
mov
cmpsb
inc
sub
sub
add
lcall
sbb
ds
je
int
sar
mov
incl
pop
mov
mov
sub
fs
or
mov
cmp
mov
js
lods
sub
imul
in
xor
ret
cmp
push
nop
enter
mov
ljmp
push
jmp
mov
xor
cwtl
adc
xlat
push
cmpsb
add
push
pop
loopne
dec
add
jecxz
ds
fildll
out
mov
lcall
iret
pushf
test
push
call
outsl
aas
xchg
cmp
pop
sbb
fwait
stos
mov
lea
testb
and
mov
in
rcrb
addr16
movsl
test
lods
xchg
out
mov
mov
js
or
imul
xor
mov
xchg
shl
incl
stc
mov
jbe
gs
pop
fnstcw
aaa
mov
test
pop
shlb
pusha
sarl
pop
andl
pop
insl
ljmp
fwait
inc
sahf
push
out
pop
scas
or
jp
and
pmaddwd
jecxz
mov
ljmp
jo
cmpsl
pop
or
mov
fisubrs
jp
pop
lock
sbb
test
adc
decl
xor
outsb
andl
call
std
jmp
cmpl
roll
sub
orl
mov
lcall
cmp
push
lret
icebp
pushf
jmp
repnz
dec
push
jae
sub
inc
mov
xor
sub
decl
cmp
dec
cli
imul
pop
add
jno
pusha
aam
xor
insb
cmp
call
adc
inc
jl
cmp
lods
test
out
cmp
out
mov
in
sub
fbstp
decl
jb
push
imul
push
aaa
mov
mov
xor
pop
popa
lds
pushl
lret
movsb
icebp
sti
sub
pop
mov
mov
xchg
sti
mov
dec
mov
iret
int3
mov
add
sbb
hlt
mov
lret
ss
pushf
cld
or
sti
mov
mov
mov
jnp
cld
imul
jp
add
ss
loop
jmp
mov
ret
pop
orl
mov
adc
jl
mov
rcl
or
xchg
add
ljmp
insl
adc
cs
inc
push
adc
cld
xlat
xchg
aad
es
aas
mov
mov
lcall
jo
sbbl
decl
rcrl
insl
int
mov
cli
mov
mov
push
out
lcall
push
xchg
test
inc
and
mov
pop
jmp
sub
or
popf
xchg
jg
lret
dec
sahf
sub
mov
or
sbb
fwait
push
cmc
test
mov
les
test
inc
repz
push
fiaddl
test
mov
decl
in
stc
xchg
scas
or
lret
popa
mov
popa
or
adcl
push
xchg
mov
incl
mov
in
out
int
adc
in
hlt
pop
jp
adc
outsb
jg
dec
mov
cmpsb
sbb
cmpl
aam
pushl
out
test
test
cli
lds
adc
sbb
test
scas
lret
fidivrs
jg
mulb
cmc
fadd
lret
and
imul
mov
fmuls
jbe
mov
decl
adc
imull
loop
lock
lods
jmp
ficoml
dec
mov
jge
in
pop
xor
sti
mov
push
call
ljmp
loop
insb
jmp
lret
inc
lock
test
sti
or
xchg
xor
xchg
js
cmpsb
add
sub
or
push
int3
dec
xor
jns
sbb
push
and
dec
ljmp
mov
jbe
js
movsb
fwait
nop
sbb
movsb
push
mov
inc
mov
jecxz
call
jl
cmc
or
dec
jbe
in
jne
bound
adc
mov
pop
or
lret
mov
jns
push
add
mov
jge
push
adc
je
fnsave
stos
incl
inc
mov
fists
xor
cmp
and
mov
cmp
jmp
lcall
pop
nop
arpl
addl
pop
mov
aaa
jae
jl
pushl
cld
push
pop
enter
xchg
sbb
in
push
jns
enter
sbbl
call
sub
push
mov
cmp
mov
lds
outsb
sub
mov
sub
sub
mov
int3
or
inc
insl
lea
or
mov
jmp
add
test
jmp
aaa
fwait
mov
imul
fbld
inc
ret
push
cmpsb
sub
addr16
mov
sbb
daa
sub
addr16
hlt
jl
stos
pushl
clc
ljmp
lahf
into
inc
js
addr16
inc
xchg
xor
decl
pop
jl
push
pop
and
pop
jle
test
fdiv
gs
lret
lret
mov
cli
decl
push
sbb
les
nop
pop
into
out
xchg
fsts
mov
sub
xchg
iret
push
out
add
out
or
jae
lcall
in
xor
jbe
adc
lods
dec
sbb
call
enter
in
xor
add
outsb
inc
aam
jns
cmp
push
int3
fisttpll
in
dec
cmpsl
jmp
adc
repnz
push
mov
int
testl
int3
mov
dec
dec
or
pushl
xchg
aad
inc
jmp
roll
jp
mov
ljmp
push
js
dec
lcall
cmpsl
pop
add
inc
aad
out
int
std
lahf
mov
shr
lahf
pop
mul
or
lock
fcomip
incl
mov
ljmp
push
pushf
into
je
sub
std
test
lret
pop
sub
popf
adc
rcrb
or
loop
arpl
sti
scas
mov
push
and
fistpl
fstp
sahf
push
stc
sbbl
lock
fucomi
shr
or
fcmovb
mov
sub
inc
test
push
pop
pop
sbb
out
or
rcrl
jg
adc
mov
dec
and
mov
orl
cmp
repz
clc
pushl
jle
cli
push
sarl
imul
pop
clc
push
mov
dec
xor
cmp
shll
jp
scas
push
xchg
mov
xchg
scas
xchg
out
mov
hlt
mov
movsl
movsb
adc
adc
cmpsb
dec
clc
mov
shrb
push
mov
xlat
cwtl
pusha
jp
das
inc
sub
jmp
popa
pop
les
jmp
cwtl
and
sub
in
mov
insb
scas
fistpll
jmp
sbb
xchg
pop
cmp
lret
push
mov
rol
sub
fldt
dec
xchg
pop
sbb
pushl
mov
inc
adc
ret
mov
pusha
test
pop
pop
insl
adc
pushl
cmpsb
mov
popf
sbb
xchg
loopne
or
cmc
cltd
lea
enter
cmp
shlb
push
cld
ljmp
push
test
jle
mov
xchg
sub
mov
xor
jae
xor
cmp
jb
fs
sub
stc
lods
jg
shlb
rcll
sbb
cmpsl
or
jmp
loop
inc
movsb
mov
cli
cmp
xchg
dec
shrl
jg
mov
sub
in
inc
jno
push
data16
sarl
mov
push
hlt
into
sti
ljmp
cmc
xorl
push
ljmp
jg
or
and
sbb
xchg
mov
xchg
ljmp
cmp
or
std
leave
lret
sbb
bound
and
test
movsl
lock
mov
pop
rcrl
inc
sbbb
dec
negb
cmp
sub
in
int
gs
sub
push
adcl
int
fadd
xchg
subl
call
adc
sub
das
flds
dec
xor
lds
enter
mov
es
push
pop
push
fcomip
mov
push
sub
ds
sub
inc
or
sbb
jge
adc
call
aas
in
cmc
mov
fidivrl
push
popf
fs
cmp
iret
fsub
push
xor
das
sub
adc
mov
mov
and
jg
jno
push
lret
add
jae
jg
dec
add
cmp
xchg
loope
jmp
jmp
lods
lods
inc
dec
subl
pop
push
fdivl
lods
ret
xchg
shlb
test
test
mov
std
lcall
loope
ret
mov
xor
or
inc
push
push
cmc
repz
jne
pushl
adc
push
lods
sub
outsb
sti
push
insb
icebp
push
sbb
add
ljmp
mov
fcomip
cs
add
adcb
fnstcw
sub
pushl
mov
add
stos
lds
and
cmpb
shl
jge
xor
xor
pushl
movsb
dec
pop
mov
jmp
or
or
je
out
sbb
or
pop
xchg
sar
incl
or
mov
lret
push
fs
jo
lds
loope
mov
pop
mov
call
shlb
outsl
inc
lock
dec
inc
leave
repnz
sub
lcall
mov
pushl
data16
sti
lcall
arpl
pusha
aam
push
xchg
out
inc
fwait
jmp
aam
inc
dec
push
scas
push
or
sbb
dec
scas
mov
push
jp
xor
rorb
push
es
cmp
aas
mov
jmp
fisubrs
cmpsb
aam
jmp
push
inc
add
mov
fcompl
loopne
dec
mov
sarl
jbe
xchg
and
add
lock
push
xchg
into
cmp
add
xor
dec
pop
mov
call
dec
cmc
decb
and
lods
xchg
push
mov
test
daa
shll
in
int3
dec
aam
call
shrl
fwait
daa
std
pop
add
lods
gs
into
xchg
dec
mov
and
decl
xchg
sbb
sub
sbb
shrl
mov
call
push
push
sbb
cld
sub
daa
sbb
ds
out
je
insb
mov
loopne
rorl
pushl
fisubs
in
adc
xchg
test
int3
xor
jmp
pusha
sub
bound
fisubrs
lcall
dec
push
aaa
call
sub
inc
into
xchg
sbb
push
jmp
loope
insb
mov
jmp
daa
mov
jge
fildll
mov
call
jp
subb
or
sahf
sbb
cmpl
inc
sbb
cli
aas
sarl
cmpsl
mov
jmp
or
ljmp
jle
cmp
pusha
stos
pop
popa
and
cmc
push
ud1
lret
xchg
scas
jnp
jns
dec
idiv
lcall
lock
push
push
pop
cltd
lock
add
gs
pop
movzbl
cld
sahf
jnp
jmp
in
push
lahf
jno
iret
sbb
mov
subl
es
sbb
scas
add
xor
mov
sub
cmp
xchg
and
push
jp
sub
aad
push
add
mov
sbb
cltd
les
inc
mov
mov
mov
call
loop
inc
daa
mov
cmp
jo
jp
mov
test
loop
pop
cs
icebp
incl
popf
jge
adc
popa
sub
xor
push
aam
aaa
enter
fbld
cmp
cwtl
fwait
into
dec
jnp
mov
mov
arpl
or
lcall
inc
lods
inc
test
xor
stos
jecxz
mov
push
mov
mov
ja
jo
js
enter
aas
ret
daa
pushl
std
pop
test
sub
inc
push
adc
ds
addr16
add
ja,pt
inc
pop
movswl
call
pushl
dec
iret
mov
push
push
sbb
stc
push
pop
insl
outsl
lcall
push
mov
in
mov
add
pop
mov
shll
xor
decl
sbbb
dec
outsl
dec
adc
dec
jl
cmp
xor
sarl
incl
push
cld
lret
sbb
and
cmp
cmc
lcall
mov
ja
pusha
push
cmpsl
daa
stos
jae
mov
xchg
test
fcomip
jbe,pt
pusha
ds
ss
mov
outsl
and
ret
adc
call
stos
fucomp
adc
ljmp
pop
outsl
movsl
jnp
or
lock
in
insb
add
jmp
dec
cmp
mov
and
incl
sahf
mov
and
add
mov
mov
into
outsb
mov
call
push
gs
lods
adc
mov
stos
mov
jmp
inc
pop
les
add
xor
mov
loop
lods
popa
stos
adc
fdivrp
call
jmp
xlat
sahf
fdivrs
jmp
ljmp
push
fs
outsb
pop
dec
xchg
and
sub
mov
pop
mov
shlb
ljmp
incl
and
jmp
stc
jmp
insb
pop
fwait
dec
xor
repz
mov
jmp
fs
fwait
sbb
in
pop
adc
rorb
jmp
mov
roll
jmp
cwtl
aad
enter
xor
xchg
int
mov
mov
inc
and
mov
jl
sub
outsl
cld
jno
jae
dec
add
sar
ja
ljmp
mov
mov
jmp
cmp
ljmp
mov
mov
aad
test
or
les
fstpt
jmp
lods
cmp
lret
fwait
mov
in
add
jp
ds
in
lds
mov
aaa
lcall
adc
mov
pop
mov
mov
jb
std
and
xor
test
sbb
xor
mov
decl
add
xchg
stos
xchg
cmp
pop
mov
mov
cmc
sbb
pop
and
cld
sbb
ja
mov
push
imul
add
mov
sti
jno
lcall
dec
insl
xor
daa
xlat
mov
push
xchg
mov
or
popa
sbb
scas
fidivl
imul
out
fs
shll
es
sahf
xchg
imul
jecxz
cltd
lods
ljmp
sub
fistpll
stc
dec
es
stc
xlat
and
ds
popa
movsl
and
imulb
add
pop
decl
or
loop
test
scas
add
add
lods
mov
cmpl
fisttpl
jo
mov
dec
push
test
sbb
push
mov
or
jne
imul
movsb
mov
decl
out
xor
pop
stos
shlb
mov
mov
aas
in
fcmovbe
rcl
ljmp
and
dec
xchg
lret
icebp
lea
fnstenv
imul
mov
lcall
adc
lods
popf
gs
mov
inc
sbb
jnp
insb
cmpsb
shll
fidivrl
std
or
cltd
loope
and
test
mov
daa
push
loop
in
test
xor
mov
sar
das
sar
jg
jne
imul
or
mov
mov
cld
lret
inc
adc
mov
in
inc
imul
jg
dec
insl
adcl
cmp
lock
mov
mov
cld
and
mov
lret
cwtl
ljmp
cmp
sbb
and
lcall
mov
mull
movsl
and
fisubl
dec
enter
and
mov
cmp
and
jno
loopne
lcall
iret
cmp
scas
dec
stos
stos
into
push
adc
scas
adc
mov
mov
jb
pop
cwtl
test
cld
dec
sbb
outsb
inc
or
nop
in
into
push
pop
out
and
mov
mov
or
add
test
inc
imulb
or
xorps
movsl
adc
enter
mov
cmp
jle
outsl
pushf
pusha
xor
adc
dec
je
sbb
push
push
cmpsl
and
incl
mov
sbb
and
loop
ret
jg
ret
dec
sub
and
stos
movsb
push
xor
addr16
mov
pop
push
cld
pop
imul
cli
jns
rcll
outsb
addr16
into
bound
mov
sbb
jne
adc
out
cmp
ljmp
cwtl
xchg
xor
jg
jb
adc
adc
loop
clc
inc
or
nop
jle
ljmp
sbb
mov
int3
pop
daa
mov
shr
testl
dec
jmp
rol
inc
inc
lods
fs
aas
jecxz
shl
pop
leave
pop
into
dec
test
mov
fwait
inc
add
stc
es
call
aaa
adc
ret
lret
stos
lods
mov
frstor
sub
or
and
ret
xchg
packuswb
push
idiv
dec
in
mov
cmp
cwtl
stos
push
push
mov
fists
js
sub
pop
sub
and
push
fidivl
fcmovnbe
mov
lods
inc
and
fimuls
xlat
xor
jp
shll
adc
mov
out
dec
push
add
dec
movsb
lock
and
ss
rcrb
jg
ja
adc
xorb
push
inc
adc
js
cmpsl
sub
mov
jmp
ror
jb
pop
mov
sysexit
cmpsl
fidivrl
mov
fildll
js
add
sbb
sbb
loop
inc
push
bound
mov
sarb
adc
jmp
std
call
xor
or
jbe
pop
lods
xchg
lock
cmp
loop
pushl
xchg
jnp
mov
cwtl
add
mulb
or
jae
pop
adc
lcall
int3
cmp
adc
push
and
xchg
jge
dec
loopne
pop
fmull
sbb
jnp
and
xor
mov
mov
cwtl
lret
sti
sti
adc
imul
push
roll
incl
sub
push
sub
xor
in
xchg
ljmp
add
loop
cs
jno
inc
les
cli
test
cmpsb
hlt
pusha
inc
shrl
subl
cli
jg
stos
push
sahf
xor
mov
aaa
or
pushl
cld
mov
mov
jge
test
lea
adc
das
cli
cld
aas
nop
mov
roll
cli
xchg
inc
or
mov
sub
call
shl
xchg
shrb
pop
add
adc
inc
sub
incl
faddp
fldcw
jle
aad
jb,pt
mov
jae
push
ret
push
incl
js
xchg
or
idivb
stc
pop
pop
aaa
or
daa
or
out
xor
nop
add
ljmp
clc
call
dec
jnp
add
cmp
jne
pop
out
mov
push
xor
loopne
mov
pusha
arpl
sbb
xchg
clc
pop
out
fiaddl
inc
push
cmc
adc
or
push
fldt
lret
mov
incl
cld
incl
icebp
cmp
fcoms
ja
es
mov
lock
cld
and
adc
or
push
xchg
push
sbb
jo
mov
mov
std
pop
and
mov
call
cld
ljmp
mov
jb,pn
test
lods
sbb
lcall
ljmp
mov
xlat
fstps
jno
xchg
lock
adc
lahf
popw
dec
mov
mov
fs
inc
mov
icebp
imul
jp
mov
push
jo
or
popa
xor
pop
cwtl
into
mov
or
sbb
fisttpll
lcall
inc
mov
sbb
xchg
pop
mov
mov
ds
incl
jo
jno
jne
je
popa
or
or
xor
mov
sbb
or
cmp
shrl
xor
add
push
or
popf
xchg
sbb
decl
pop
xchg
fsubp
push
gs
jle
icebp
mov
es
xchg
mov
ja
mov
aad
das
ror
add
xchg
je
fimuls
mov
mov
scas
xchg
outsl
decl
jp
icebp
mov
xchg
xor
xchg
pop
bound
call
mov
sub
jbe
xorl
in
insl
lret
in
mov
lods
pop
dec
out
xor
dec
js
stc
pop
mov
push
add
ljmp
imul
out
mov
sahf
shrb
mov
cmp
add
flds
mov
xor
out
fdivp
nop
ljmp
rolb
mov
stos
pop
ret
adc
stc
stc
inc
xor
add
clc
rcll
cltd
cli
imul
into
inc
jg
loope
cwtl
xlat
pop
sahf
jbe
push
mov
idiv
fcomip
pushl
fwait
push
ja
sbb
mov
mov
xor
into
pop
fwait
sub
das
clc
pop
cmc
gs
fistps
dec
jne
aad
rcl
nop
dec
fdiv
push
lcall
or
in
or
hlt
mov
cmp
roll
push
and
adc
add
es
mov
xor
test
ud0
call
inc
ja
push
xor
add
adc
aas
jo,pt
iret
dec
pop
daa
mov
aam
pop
daa
mov
in
les
sbb
xor
sub
jmp
push
inc
push
mov
push
lahf
mov
call
jb
fsubs
fidivs
leave
js
clc
fsts
jmp
lods
and
push
mov
ljmp
pusha
sarl
call
add
sarl
or
cltd
iret
jg
and
and
fisttpl
push
icebp
sub
inc
cmpsl
outsl
dec
xchg
pop
sbb
mov
ljmp
jle
xchg
bound
addr16
inc
add
jo
rcll
jb
out
add
xchg
xchg
rcr
pusha
jmp
fs
push
ficoms
pop
rcrb
cmp
xchg
scas
out
jmp
es
decl
aad
stos
lock
mov
int
xchg
pop
imul
das
loope
mov
ret
push
iret
mov
ja
jmp
out
mov
les
fs
push
dec
fnstsw
push
lods
fsubrs
insb
mov
push
or
pusha
pop
xchg
add
sbb
andb
dec
inc
push
out
notl
fimull
push
lods
popf
jge
mov
dec
jecxz
cld
xor
push
addr16
call
inc
mov
sub
bnd
jae
pop
dec
andb
std
cwtl
jno
incl
mov
insl
jle
dec
fdivl
mov
imul
test
mov
jne
adc
test
lret
push
xor
ljmp
sub
cmpl
call
mov
lret
sub
adc
shlb
push
int
mov
sub
sbb
test
sub
mov
rcrl
dec
iret
cmp
jmp
stos
or
pushl
add
or
pop
sub
repnz
aad
sar
lcall
jne
es
push
rolb
jbe
lcall
cli
mov
in
jmp
cwtl
jg
loopne
xchg
inc
sbb
test
iret
les
push
sub
pop
repnz
sbb
clc
push
jge
das
push
mov
popa
jns
xor
mov
mov
pop
scas
ljmp
shl
push
sub
fistpl
out
push
int
xchg
mov
adc
jmp
lock
testl
imul
daa
ljmp
pop
mov
fdivrp
incl
sti
nop
push
stc
clc
push
inc
push
cmp
aas
mov
sbb
xor
std
push
jmp
push
in
dec
fnstsw
pop
jns
insb
out
negb
shr
out
pop
or
add
js
mov
nop
pop
cwtl
data16
push
pop
lret
pop
and
push
pushl
push
mull
sahf
ds
stos
xor
sbb
sarl
fsubl
ljmp
push
add
jb
out
in
fmuls
and
sti
jmp
and
push
jmp
inc
jmp
lahf
movsb
lock
loope
mov
and
pop
cltd
lods
insl
in
in
fstl
cli
lahf
mov
int
daa
push
or
dec
sub
mov
decl
clc
cmp
arpl
mov
test
inc
inc
aam
mov
add
loopne
jmp
inc
xchg
sub
pop
sbb
add
cld
push
cmp
mov
sbbb
imul
mov
xchg
hlt
lahf
stos
jmp
cmpb
sbb
rolb
xor
mull
decl
mov
ss
add
sahf
cmp
les
and
fdivr
jp
fcmovbe
loop
out
or
dec
std
lcall
hlt
daa
sbb
pop
pushl
cmp
mov
cmpsb
xchg
pusha
enter
and
ljmp
loope
fwait
and
je
mov
in
mov
call
mov
jno
sub
xlat
stc
push
jns,pt
idivl
mov
jg
adc
out
adc
sub
retw
movsb
dec
jecxz
xlat
push
cmp
cmp
pop
mov
sbbb
dec
popa
popa
xorb
stos
mov
inc
fildl
test
cli
and
out
fcomps
inc
mov
fstps
mov
add
mov
sub
not
aas
scas
adc
test
pop
cmc
mov
incl
dec
into
aad
je
push
js
push
ds
loope
fcompl
loopne
jbe
insb
jmp
push
sbb
mov
and
cmpl
test
pushl
xchg
and
arpl
icebp
push
es
movsl
sbb
push
mov
test
lcall
mov
sub
and
pop
adc
mov
cmp
jmp
dec
outsl
push
push
outsb
lock
loope
or
sbb
call
and
out
clc
clc
mov
loope
pushl
and
sbb
addr16
mov
sub
adc
mov
sub
lcall
or
cmc
insb
sbb
dec
push
fsubrl
xor
rorl
leave
mov
mov
call
mov
fidivl
cmp
cltd
ret
and
loopne
icebp
pop
sbb
or
pop
mov
fistl
mov
jns
aas
add
mov
mov
clc
aas
orl
jbe
call
cmp
fnstenv
xchg
imul
iret
fildll
test
xchg
ret
lcall
add
test
adc
lods
pop
sub
xchg
cltd
lcall
or
incl
or
iret
dec
jl
dec
cmp
jno
add
decl
lock
in
scas
or
fidivs
jne
push
mov
mov
shl
and
push
adc
ret
out
call
dec
repz
call
mov
inc
mov
cmc
rcl
stos
pop
pop
dec
push
mov
decl
pusha
sbb
stos
fimull
int3
jg
jle
inc
data16
pop
lea
daa
icebp
in
cli
jmp
je
popf
dec
inc
mov
push
cmp
xorb
ja
and
ret
incl
add
cmpsl
mov
cmp
call
mov
jg
sub
cld
pop
adc
adc
mov
cld
mov
out
ss
xor
js
gs
imul
pushf
movsb
addr16
mov
pop
jp
jmp
in
out
jmp
push
inc
lcall
mov
cli
adc
jmp
repz
lods
andl
ret
push
lea
ja
adc
das
push
movsb
xlat
xor
or
sub
or
cmp
lcall
adc
ljmp
mov
push
test
sbb
testl
push
inc
cmpsl
pop
inc
xchg
outsb
movsb
ret
lods
mov
mov
adc
shll
out
or
filds
incl
xchg
pop
dec
test
xor
in
xor
pop
call
or
aaa
inc
push
aas
jno
jp
stos
xor
mov
frstor
xor
std
cmpb
stos
fiadds
negl
cmc
cmp
push
mov
xor
jae
jmp
jno
sub
roll
add
sbb
pop
inc
inc
dec
or
mov
outsb
xchg
xchg
xorl
xchg
jp
decl
mov
cmpb
jmp
mov
sub
sbb
cld
inc
or
lcall
bound
repz
sbb
pushl
add
jle
dec
es
mov
xor
pop
leave
ret
xchg
jg
xor
lcall
dec
inc
jge
and
je
fs
mov
pop
js
push
mov
adc
fildl
mov
sbb
mov
adc
add
add
out
imul
dec
fsubs
jmp
popa
movsl
es
out
or
adcl
mov
aad
jo
or
cmp
jecxz
inc
test
and
repnz
sahf
add
inc
or
mov
fstps
jmp
pop
ud0
jmp
les
clc
jb
jns
xchg
sub
mov
icebp
insb
ficoml
jmp
xor
mov
lcall
mov
fmull
faddp
cwtl
sti
mov
addr16
clc
mov
fwait
mov
incl
cld
dec
insl
icebp
xor
push
mov
pop
pop
vpcmpeqd
xor
int
jl
rol
pop
sbb
cmc
sub
jno
int
out
add
pop
or
in
imull
sub
mulb
cmp
es
frstor
mov
testl
xlat
adc
add
sahf
mov
lcall
aam
and
and
push
in
add
mov
lods
push
scas
insb
incl
in
sbb
ficoml
imul
mov
mov
gs
mov
mov
push
in
xchg
mov
cmc
call
adc
lcall
loop
xchg
fs
jl
repz
ret
insb
movsl
decl
into
adc
cs
mov
movsb
lret
push
iret
iret
push
lret
mov
test
cltd
pusha
sbb
rcrb
call
lock
adc
call
das
jl
xor
decl
mov
iret
idivb
xchg
les
push
add
add
popl
or
and
inc
imul
sub
fsubp
cmp
xchg
mov
in
test
xchg
xorps
push
sub
fs
jmp
nop
fs
jle
cs
add
and
or
add
aas
pop
ljmp
ret
outsb
in
jo
nop
imul
incl
pusha
and
popf
sub
pop
adc
mov
xor
xor
adcb
incb
std
decl
pop
rcrb
push
leave
fisubrs
cmp
icebp
in
call
bound
lds
jl
xorb
inc
push
inc
xchg
aaa
sub
mov
ljmp
pusha
add
lods
int
mov
cmpb
scas
aam
nop
incl
out
push
xor
rorb
jecxz
push
jmp
inc
push
enter
push
andb
push
lods
jns
popa
sub
out
mov
incl
ljmp
leave
sbb
mov
scas
add
mov
xor
mov
hlt
mov
decl
je
cli
ja
sub
pop
pop
cs
push
jge
push
cwtl
bound
inc
push
icebp
lcall
je
pusha
repz
or
push
or
pop
lcall
and
rclb
cmp
outsb
dec
sbb
inc
dec
inc
xchg
xlat
loop
sahf
je
add
incl
ljmp
ret
adc
loop
push
stc
lcall
sub
ljmp
adc
sbb
sub
mov
sub
mov
hlt
clc
popf
push
push
cli
ljmp
mov
dec
sahf
sbb
dec
mov
xor
out
or
pushl
imul
lods
dec
xchg
xchg
out
push
lahf
dec
in
shlb
cld
dec
pushl
pop
dec
cmp
inc
mov
inc
cmp
arpl
dec
mov
mov
insb
add
mov
insl
push
shrb
push
xchg
xor
imul
fists
into
push
std
lcall
add
out
sahf
lcall
jl
nop
addl
mov
pushl
inc
dec
or
fld1
into
mov
dec
mov
cmp
xchg
dec
cmp
mov
addl
repz
ja
xchg
xlat
cltd
inc
sub
call
fucomi
xchg
xor
mov
mov
pop
sahf
outsb
jl
popf
pop
fneni(8087
dec
hlt
int3
sub
lcall
push
out
and
xor
leave
jmp
insb
pop
pop
dec
repz
jg
outsl
les
sub
inc
ror
loop
push
lahf
and
clc
inc
mov
inc
sbb
add
fistl
aaa
cmp
clc
mov
jmp
das
movsl
fiaddl
mov
push
or
sub
inc
mov
in
dec
nop
mov
lcall
fldt
inc
or
outsl
mov
push
mov
mov
mov
arpl
fsts
cli
cmp
andb
mov
aas
mov
shl
insl
push
push
test
push
jae
std
ljmp
push
inc
fwait
aaa
gs
shlb
je
xchg
int3
movsl
mov
lock
push
push
cmp
lcall
mov
pop
inc
test
stos
in
pop
mov
xor
das
call
adc
jg
push
stos
push
shrb
shll
mov
out
add
mov
or
add
mov
xor
pop
and
cld
xor
cmp
mov
add
cmp
enter
aas
stc
stos
sub
je
jmp
or
inc
push
jmp
mov
xor
cld
cwtl
shr
call
stos
test
pop
dec
jmp
cmpsl
sbb
fidivl
dec
adc
dec
push
lea
cmp
jno
jnp
push
pop
cmp
mov
into
mov
dec
cltd
js
mov
pushf
daa
pop
add
fs
xchg
ret
jmp
sbb
and
ret
cmc
push
sahf
enter
cmp
scas
add
jg
fidivrl
jl
mov
outsl
xchg
or
mov
pop
cmpsl
sti
mov
inc
decb
lods
in
lcall
or
dec
std
sub
jae
pop
test
lds
fiaddl
call
lcall
gs
xchg
enter
xchg
jge
cmp
xchg
ljmp
in
lcall
gs
clc
xchg
add
aaa
xor
in
prefetcht1
push
jb
addl
sti
push
sub
fadd
lcall
movsb
mov
jb
ret
dec
cmp
fwait
fwait
ret
into
fistpl
das
into
mov
dec
mov
push
push
cld
and
xchg
cltd
hlt
je
push
ljmp
mov
mov
shl
js
fildl
es
mov
int3
cmpsl
xchg
adc
in
sub
notl
xchg
sbb
inc
add
repnz
test
call
ret
lahf
ret
sbb
sub
ds
cli
lea
push
call
mov
or
mov
and
xchg
lds
subl
inc
pushl
push
das
cmp
and
inc
mov
lock
fsubp
sahf
jecxz
adc
cmpsb
jge
lret
mov
negb
add
inc
daa
pop
mov
jp
movsb
call
cltd
jnp
xchg
popa
pop
aam
mov
or
xor
test
xor
inc
and
enter
inc
inc
mov
lahf
test
mov
fbld
lock
out
dec
mov
and
push
pop
fcmovnu
mov
and
cmpsb
adc
lret
call
dec
mov
stos
cltd
xor
jno
push
jns
sub
fmull
push
mov
mov
testb
pop
sub
xlat
jmp
out
ljmp
out
sahf
xchg
aam
dec
mov
arpl
push
icebp
pop
aas
and
jnp
in
pop
jne
ret
incl
mov
aam
ja
or
ljmp
sub
hlt
incl
push
outsl
cs
mov
and
add
xchg
out
xor
in
pop
xlat
ljmp
mov
fidivrl
mov
sub
xchg
cmp
xor
sbb
mov
push
add
cli
popf
out
fadd
add
mov
pop
xor
jg
cmp
or
fisubrl
addb
mov
cld
pushl
cmp
push
and
loopne
jmp
and
push
or
mov
incl
aam
jle
cli
pop
lock
adc
movsb
outsl
mov
inc
repnz
iret
dec
ljmp
inc
and
rolb
je
test
sbb
lcall
out
push
sbb
push
adc
je
test
and
jae
imul
aad
xor
lcall
lds
dec
push
das
sbb
daa
out
pop
outsl
popf
std
imul
push
inc
fxch
push
cld
inc
shll
stos
mov
inc
in
pminsw
dec
ja
mov
lret
adc
or
push
es
cld
inc
jp
cmpsl
mov
xchg
xchg
cwtl
ds
int3
dec
jmp
fildl
les
sbb
inc
mov
in
or
mov
adc
mov
fisubrs
std
stos
xor
imul
xchg
pop
pop
aaa
xchg
cld
jo,pt
and
jg
xor
push
pop
push
cmp
das
outsl
add
adc
sub
cmp
jg
decl
mov
cwtl
adc
pop
and
pop
mov
jge
mov
inc
jo
mov
jge
cwtl
stos
cmp
repz
mov
fsubrp
js
cmp
jae
mov
push
loope
add
xchg
idivl
push
ja
rcrb
dec
out
movsb
jle
add
int
test
xchg
call
inc
in
int3
sarl
mov
inc
movsb
xchg
mov
dec
push
xchg
arpl
arpl
dec
xchg
and
inc
pop
push
cs
push
lea
cmp
adc
mov
je
pop
test
push
adc
imul
add
lock
mov
test
inc
or
jp
sbb
mov
dec
pop
adc
mov
rorb
scas
jnp
stos
jle
adc
fistpl
jp
gs
movb
adc
cli
jne
icebp
inc
xchg
jl
xchg
pushf
mov
cmp
fdivrs
mov
mov
push
pop
and
stos
loope
addr16
pop
pop
inc
mov
add
cmp
rorb
jb
cmpsb
lds
cmp
and
popa
cwtl
fstpl
mov
daa
or
pop
into
shlb
adc
movsl
popa
sahf
mov
aad
sbb
push
pop
cmpsl
in
cltd
xor
jle
cwtl
cmp
mov
push
pushl
jb
pop
push
mov
cwtl
enter
leave
jns
outsb
stos
ja
cmp
jmp
mov
in
mov
push
mov
adc
aad
js
daa
hlt
jg
sbb
add
ljmp
dec
mov
add
aas
inc
out
test
enter
mov
inc
push
gs
push
sbb
lret
push
jl
adc
sbb
out
decl
in
scas
dec
sub
ds
sub
repz
loopne
lret
adc
lods
dec
push
rclb
fcmovne
in
bound
mov
jne
outsb
divb
adc
out
popf
stos
cmpl
call
cmp
xchg
cs
jp
nop
in
decl
outsl
xchg
lret
cmp
stos
call
jecxz
jg
call
sbb
sub
test
fidivrs
orb
pop
jp
add
push
fbld
cmp
inc
cmp
dec
jne
pop
mov
pop
dec
ficoml
inc
inc
inc
mov
insb
mov
lcall
pop
ljmp
sbb
pop
mov
mov
xlat
pop
add
mov
and
cmp
or
pop
lcall
cltd
lock
pop
pop
mov
jae
call
in
outsb
jo
jg
mov
sub
popf
mov
push
scas
mov
xor
outsb
in
cmp
outsl
jmp
insb
fcoms
outsl
ret
push
jns
jae
cltd
call
lret
lcall
mov
movsl
out
sub
jbe
push
lds
clc
fcomps
rolw
xchg
pushl
dec
lret
in
xchg
xlat
mov
int3
nop
icebp
mov
mov
sbb
in
or
ljmp
pop
cmpb
mov
dec
mov
mov
es
jo
pop
sti
ret
adc
jg
jmp
sub
inc
fstl
imulb
jno
in
jmp
rol
outsl
sbb
push
inc
xchg
adc
add
aam
cmp
aas
mov
shlb
pop
xchg
call
cmovp
jecxz
ljmp
mov
pop
sarl
aad
xor
sbb
andb
fdivrl
dec
adc
jecxz
lret
iret
sub
test
inc
jne
incl
or
loop
adc
imul
cltd
mov
cli
or
jmp
mov
es
movsb
mov
dec
arpl
mov
jns
dec
int3
jbe
jne
push
cld
mov
adc
mov
icebp
mov
pop
pop
data16
dec
imulb
add
pop
xchg
stc
imul
mov
jp
call
mov
sub
push
or
dec
cwtl
cli
fsub
jae
call
cld
fistpl
out
mov
xchg
mov
and
shlb
jbe
add
call
and
fsubs
jns
cs
xchg
jb
sub
jmp
dec
lcall
sbb
sahf
sub
push
rol
mov
pop
pushf
cli
scas
shlb
incl
adc
cmc
mov
xor
jno
aaa
or
dec
test
ljmp
mov
fisttpll
dec
rorl
add
pop
call
sbb
fisubrs
popa
mov
push
add
bnd
data16
cli
pushl
sbb
sub
popl
scas
mov
jo
ljmp
jne
jns
mov
repnz
dec
dec
jns
push
aas
insb
push
lock
fdivrl
test
sarl
xchg
adc
fistpll
dec
dec
iret
add
push
push
mov
fidivrl
sub
pop
sub
jg
loop
test
push
mov
jne
push
push
inc
fwait
or
xchg
mov
adc
inc
pop
ss
xchg
jmp
mov
jp
insl
lds
jg
push
or
jg
incl
xor
fstpl
fisubrs
loope
das
fists
push
arpl
mov
or
out
and
aad
sbb
mov
pop
dec
cltd
jg
repnz
push
and
mov
mov
das
movsb
bnd
push
test
adc
decl
jl
inc
ss
xor
shlb
repnz
ret
mov
dec
clc
iret
pusha
jno
decl
adc
mov
mov
sub
lea
add
mov
rorb
ljmp
fnsave
dec
popa
mov
jne
mov
add
lret
inc
enter
xchg
ljmp
popf
std
addr16
inc
jae
sarl
mov
inc
inc
jmp
jbe
sbb
lods
xor
pop
int3
push
pop
sub
scas
push
adc
dec
xchg
mov
adc
xchg
pop
outsb
jg
shlb
cmp
cmpsb
or
jb
sub
push
xchg
shl
fcomps
mov
adc
jbe
pushl
dec
fimull
jmp
sbb
lret
cwtl
mov
jb
sbb
test
decl
push
cld
hlt
das
mov
stos
xor
leave
jmp
adc
xchg
stos
call
push
fldcw
xorl
shlb
and
aas
and
ljmp
out
jle
rclb
add
sub
out
rcrb
data16
lcall
jae
add
nop
ljmp
sti
mov
mov
push
jp
mov
flds
aam
mov
sub
jnp
outsb
into
sbb
pop
into
jno
mov
xor
ljmp
mov
loopne
lcall
jecxz
ret
add
mov
das
pop
leave
test
enter
jmp
pusha
xchg
or
jecxz
imul
loopne
fldt
adc
ljmp
test
mov
insl
cs
sub
dec
out
fsubl
dec
inc
call
push
mov
mov
push
and
loop
das
pop
stc
mov
pop
push
cmpsb
subl
mov
scas
pop
sbb
push
scas
js
mov
shrb
lds
in
imul
add
nop
in
pop
ss
scas
add
decl
xchg
mov
hlt
data16
xor
dec
sub
push
movsl
xchg
pop
adc
push
mov
ja
inc
cmpsl
ljmp
js
movsb
xchg
jnp
or
fsubs
decl
jecxz
jmp
sbb
adc
push
sahf
xchg
push
aam
lock
cmp
fldl2e
incl
sbb
movsl
push
nop
mov
mov
sub
jge
xchg
jno
in
lock
mov
loop
ret
adc
sub
mov
outsl
int3
and
lahf
mulb
push
xor
pop
decl
rorl
shlb
add
push
cmc
add
jp
or
mov
stos
pop
sbb
xor
sbb
stos
fstps
mov
test
sub
lock
outsl
dec
pop
xchg
fs
decl
pop
xor
or
push
int
shrl
xor
dec
xor
xor
lcall
adc
mov
into
outsl
sbb
test
cmpsb
or
fstpl
pop
cmp
lcall
das
add
add
jbe
repz
mov
sub
test
add
sar
xchg
jns
jge
ljmp
test
idivb
mov
xchg
mov
mov
dec
lds
mov
pop
push
jl
mov
mov
sub
stos
dec
adc
push
lods
mov
in
cmp
fsubl
test
xor
repz
cld
mov
mov
push
loopne
pusha
sbb
add
add
add
sub
sub
push
or
xchg
hlt
jo
add
jb
imul
xlat
out
jge
xor
rcl
mov
cmpsb
cmp
push
xor
js
test
jb
test
icebp
test
pop
fcoml
mov
jmp
inc
and
adc
movsb
mov
idivb
sub
inc
add
pushf
mov
dec
push
popa
test
push
pushl
mov
jmp
outsl
sub
jno
mov
mov
fprem1
sub
aaa
cld
jmp
mov
rep
and
mov
push
or
sub
jge
fdivrp
lcall
loop
in
mov
faddl
les
jno
or
mov
test
aad
jbe
mov
xchg
ljmp
jnp
sub
pushf
mov
fcmovnbe
test
clc
cwtl
dec
mov
fistpl
sar
jle
mov
pop
jecxz
sbb
jne
outsl
hlt
cmp
xchg
and
outsb
push
mov
imul
andb
adcl
pop
mov
mov
push
scas
add
mov
loope
mov
jnp
dec
sbb
and
sar
decl
cld
dec
xor
orl
dec
shlb
les
les
mov
inc
cmp
sub
in
and
es
jp
jae
cmp
sti
imul
xchg
sbb
in
pop
pop
or
imul
decl
int
dec
aaa
fidivs
setbe
jmp
jbe
leave
mov
leave
and
scas
int
jg
in
xor
test
inc
fisubl
dec
mov
in
jo
scas
mov
cmp
hlt
aam
jnp
pop
in
popa
fstpt
mov
mov
mov
rorl
sub
sbb
mov
fwait
popa
mov
sbbb
jg
decb
mov
dec
movsb
shrl
or
mov
xlat
dec
inc
in
push
mov
movl
rclb
inc
or
pop
cs
scas
sub
ljmp
and
jb
inc
push
mov
mov
ja
mov
mov
jle
dec
cmpsb
xchg
push
test
ds
lock
pop
cwtl
sub
je
adc
leave
sub
jle
sub
add
inc
outsb
insb
add
pushf
mov
mov
sar
inc
push
decl
push
inc
sbb
test
dec
and
push
push
testb
inc
mov
insl
pusha
push
ljmp
neg
xchg
shll
pop
sbb
out
fs
call
push
call
sti
int3
cltd
cld
fdivrs
sar
popa
test
ret
xchg
add
push
outsl
pop
inc
enter
mov
and
outsl
adc
pop
cmp
pop
icebp
sub
xor
idivb
nop
lahf
or
jne
xor
and
or
add
or
sub
rcrb
lcall
in
pushf
cli
jle
lcall
adc
cs
lahf
out
int
add
addl
dec
xor
push
mov
inc
jae
fidivrs
push
push
lret
nop
dec
shrb
std
cmp
imul
push
jns
cmp
les
push
dec
mov
out
outsb
sub
sub
out
lds
mov
call
mov
in
pop
movsb
jmp
cmp
repz
jnp
stos
add
out
mov
aad
lock
subl
mov
lcall
lret
decl
or
cli
inc
xchg
fcomip
scas
sarl
dec
aad
inc
mov
rcl
decl
pop
das
mov
push
ss
scas
pop
xorb
sub
lods
movsl
scas
clc
add
loop
ds
dec
sbb
pop
dec
dec
mov
clc
call
cld
decl
sub
inc
jp
js
jae
cmpsl
mov
mov
and
test
inc
call
inc
and
test
lahf
int
cmp
lahf
or
insl
fwait
pop
mov
incl
pop
jno
jo
jne
or
mov
pop
xlat
das
xlat
stc
pop
sbb
jg
icebp
jl
cmp
hlt
fst
push
loopne
jo
in
and
push
stc
cmp
xor
call
adc
jle
outsl
lock
adc
loopne
xchg
jmp
call
xorb
mov
xor
lea
popf
sub
jmp
enter
fcomip
add
adc
insb
pusha
data16
test
lcall
sbb
jmp
incl
sub
in
fldt
cmp
pop
incl
je
subb
enter
rol
add
bound
inc
mov
dec
mov
mov
out
cmc
push
xchg
xor
sub
lcall
jg
xchg
cwtl
adc
adc
jmp
lret
jmp
pop
mov
sahf
mov
daa
inc
in
or
fcomip
frstpm(287
dec
sub
inc
aas
scas
dec
add
fdivrl
push
in
subb
jne
or
addb
inc
bnd
mov
outsb
adc
imul
lcall
enter
ds
and
dec
getsec
jns
lcall
mov
data16
movsl
das
cmp
and
test
push
jne
and
es
fiadds
cwtl
push
mov
pop
out
add
cmp
pusha
jl
push
xchg
stos
inc
sub
loop
pop
pop
fisubrl
jecxz
aaa
js
popf
adc
or
mov
adc
sub
test
sbb
cmp
leave
push
push
and
mov
call
xlat
jo
fnstsw
sbb
push
shll
mov
jg
incl
mov
mov
jo
inc
cmp
lret
cli
fmull
jmp
add
add
sbb
push
push
xchg
mov
cli
andb
mov
mov
pusha
std
sub
je
loopne
add
nop
sbb
ljmp
mov
mov
jg
cmp
std
insl
inc
dec
sbb
sbb
and
call
movsb
jecxz
hlt
andb
ds
inc
ficoml
inc
sub
cmp
scas
daa
stos
push
les
pop
xchg
imul
imul
neg
mov
and
or
xor
cltd
test
imul
shlb
cmp
ljmp
push
lock
mov
jle
cmp
inc
shll
mov
dec
xchg
test
dec
sbb
rcr
push
mov
imulb
outsb
mov
fsub
sbb
pop
xchg
mov
mov
add
lahf
movsb
sub
pop
dec
dec
sub
aaa
push
pop
hlt
out
add
pop
cmc
cmp
or
movsb
pop
push
pop
stos
outsb
ret
pop
xlat
mov
incl
sarb
push
loopne
loop
xchg
cli
stos
inc
sub
scas
cmp
pop
int3
inc
call
sti
cmc
pop
or
decl
lods
xchg
push
subb
push
mov
jge
xor
push
mov
nop
repnz
xchg
ljmp
inc
popa
cld
sub
sub
fidivs
jle
jmp
pop
mov
scas
lcall
std
jns
mov
fucomp
lods
sub
mov
mov
adc
and
imul
icebp
fmull
xchg
xchg
lock
sbb
mov
and
mov
divl
fdivrp
in
hlt
lcall
pop
je
jo
and
push
test
fnsave
xchg
dec
fwait
call
call
or
dec
mov
mov
push
sub
sub
push
jmp
pop
xor
ljmp
pop
enter
or
cmp
cmp
sahf
inc
mov
dec
aam
xorl
call
loopne
popf
daa
mov
stos
test
ret
mov
enter
inc
das
ljmp
sbb
in
sbb
adc
rcr
dec
scas
cli
jmp
lret
sbb
insb
fwait
cmp
andb
xchg
sti
mov
dec
xchg
pop
jl
cld
aaa
adc
dec
xor
stos
inc
sbb
adc
shll
and
lret
mov
scas
adc
add
mov
dec
ss
xchg
scas
pop
mov
inc
push
loop
dec
ljmp
sbb
call
and
inc
jne
sbb
imul
ljmp
mov
icebp
das
les
icebp
push
pop
or
pop
jmp
jns
cmpsb
dec
lcall
imul
mov
push
xchg
or
hlt
jmp
icebp
int
nop
sub
jle
mov
or
divb
sub
pushl
imul
sahf
shl
and
aaa
push
lahf
jle
jne
pop
sti
pusha
nop
pop
jo
xchg
mov
idiv
call
and
movsb
nop
sbb
arpl
push
inc
or
xchg
mov
imul
inc
sar
call
dec
jbe
repnz
jmp
inc
push
testl
dec
xchg
rcr
cmp
sti
jmp
add
xchg
popf
lret
aaa
outsl
pop
jecxz
inc
jno
push
call
adc
fidivrl
mov
cmp
aas
push
fimuls
push
loop
cltd
xor
mov
pop
xchg
addr16
jle
les
sub
decl
das
int
adc
testl
ljmp
cmp
sub
add
jne
bound
lods
mov
fprem1
add
clc
mov
add
decl
mov
inc
xor
or
sub
sub
mov
dec
add
xlat
push
dec
enter
mov
ret
mov
push
jo
cmp
jg
push
dec
repz
push
aaa
jecxz
lret
repnz
hlt
cmp
cmp
sbb
enter
and
decl
jbe
pop
imul
lcall
les
test
mov
out
ja
xchg
fdivl
mov
and
int
fwait
int3
ljmp
add
mov
pop
arpl
xlat
scas
mov
out
in
mov
xchg
leave
push
push
or
rcrl
mov
mov
jle
ss
xor
loop
xor
xor
roll
sahf
stc
xchg
movl
add
dec
inc
sub
stc
cmc
movsl
test
popf
adc
jns
pop
and
ja
dec
jns
jl
jae
cmp
icebp
inc
and
frstor
sub
cld
sarb
jns
pusha
cs
jg
incb
inc
insl
clc
or
adc
insl
std
jno
push
out
cmp
jl
xchg
adc
push
and
and
rcrl
sub
sub
push
lods
sti
xchg
and
insl
push
fbld
dec
dec
or
sbb
mov
inc
adc
ja
jmp
pop
les
push
xchg
fldt
or
push
push
dec
mov
loope
push
adc
pushl
xchg
or
imul
inc
scas
add
jg
es
xor
lret
das
divb
or
inc
add
mov
sbb
or
jmp
lahf
sub
xorb
mov
int3
mov
xchg
mov
lret
loop
push
and
ljmp
jecxz
bound
inc
xchg
iret
in
jns
inc
dec
fldl
loope
pusha
arpl
mov
add
aam
push
mov
xor
sub
lret
hlt
mull
aad
push
jnp
sbb
rolb
and
mov
adc
fidivs
jg
inc
cli
lock
or
imul
movsl
aad
dec
lret
cmp
mov
jae
sub
adc
mov
dec
lahf
loope
xor
test
sub
mov
cmpsl
dec
fucomp
cltd
cmpsl
and
cwtl
aam
sahf
and
pushl
push
fidivs
sub
scas
dec
test
addb
xchg
and
into
push
dec
out
iret
cmp
decl
pop
gs
pop
shll
push
lds
cmp
lcall
push
fimull
cmpsb
enter
repnz
xchg
sbb
dec
rcrb
outsl
loop
add
add
ljmp
pop
push
mov
mov
bnd
inc
mov
addr16
mov
iret
inc
sarb
dec
test
icebp
mov
push
xor
and
orl
cmp
decl
adc
jae
int3
loop
pop
pop
add
mov
adc
jp
push
push
pop
push
shrl
cmp
cmp
or
lret
pop
pop
stos
lds
xchg
sbb
fisttpl
lcall
roll
dec
aad
sub
insl
push
dec
sbb
or
inc
mov
sarl
clc
lcall
jne
sub
add
or
nop
fdiv
cltd
fcoms
roll
aad
jmp
int3
mov
mov
and
xor
jae
cwtl
mov
mov
mov
pop
decl
add
pop
lea
testl
lcall
icebp
jecxz
imul
and
jmp
inc
or
cmp
and
addr16
xor
fldcw
call
pop
outsb
jp
scas
jne
xor
out
xchg
mov
lcall
hlt
xor
mov
test
imul
stos
pop
sar
call
inc
out
fidivl
pushf
aas
pusha
cmpsl
jg
idivb
pusha
add
pop
pop
test
pushl
jnp
push
inc
sub
hlt
pop
sbb
outsb
aam
cmp
mov
fmul
lock
jmp
lods
add
call
add
cld
sub
add
sahf
shl
decl
adc
and
or
mov
jle
xchg
aaa
das
aad
ljmp
or
or
jbe
sub
lahf
mov
sahf
aas
jmp
cmc
lcall
test
and
dec
imul
pop
dec
xor
mov
cli
fidivl
adc
rcrl
subl
popf
faddl
ret
sahf
outsb
dec
sub
xchg
push
push
or
orl
out
xchg
push
add
lock
or
jp
pop
push
cmp
cmp
fnsave
or
cmp
and
xchg
ror
sub
es
cmp
jmp
add
sub
push
or
insb
cmpsl
das
and
jg
movsb
mov
aam
jl
add
mov
lret
adc
dec
jno
or
or
mov
jle
xchg
inc
jg
add
xchg
mov
scas
ja
aam
xchg
push
mov
pop
lea
call
cmp
ror
pop
ljmp
cmovge
fimuls
push
jmp
cmpsb
mov
adc
mov
and
popa
stos
adc
jbe
xchg
icebp
das
ds
cld
inc
xor
rcrb
mov
push
stos
mov
ficoml
sub
clc
sarb
mov
mov
popa
lods
mov
cld
sub
jmp
jle
mov
pop
inc
in
fmul
dec
lea
jl
repnz
ret
pop
shll
cmpb
cmp
jo
ret
push
pop
xor
cmp
pop
inc
pop
jns
adc
sar
insl
stc
push
je
xor
ljmp
das
add
les
xor
rcrb
out
cmp
dec
and
sti
clc
aaa
cwtl
push
sbb
call
icebp
enter
in
inc
cmp
fs
xchg
shlb
arpl
adc
xor
mov
mov
aad
mov
xchg
rorb
clc
ljmp
fstpl
or
arpl
call
aas
fldl
jns
adc
mov
call
les
imul
and
mov
xchg
scas
cmpsl
movsl
data16
xchg
insl
call
dec
inc
mov
inc
xchg
adc
clc
jl
decl
jmp
xor
fisttps
dec
ret
pop
jne
mov
je
mov
fcmove
cli
cld
jmp
out
push
dec
mov
dec
xor
xchg
mov
adc
xchg
notl
test
iret
sub
adc
aaa
cld
fisttpl
cmpsl
ljmp
sub
cmp
cs
jae
inc
push
xor
jns
in
push
push
hlt
sub
jge
cmpsb
xor
cmc
cmp
popa
lods
adc
lea
xchg
xchg
ja
pop
dec
dec
pop
cmpsl
mov
and
das
clc
pop
pop
or
test
pop
sub
stc
cs
xchg
cmp
mov
xlat
and
sub
ljmp
sub
and
xchg
loop
leave
shl
jmp
inc
jge
ljmp
jmp
inc
xchg
in
mov
or
cmp
sbb
fidivrl
sub
std
push
out
mov
or
mov
mov
mov
dec
sbb
cmp
lods
shll
cmpsb
pushl
pop
xchg
in
inc
nop
stos
lahf
mov
cmp
inc
mov
int
adc
pop
inc
cmp
in
cmp
adc
mov
aaa
jg
fiaddl
xchg
adc
adc
jae
sbb
push
mov
push
sbb
out
sub
and
flds
and
outsl
dec
cmc
xchg
pop
or
add
dec
call
pushf
faddp
xor
or
std
ss
sbb
sbb
cmpsb
mov
inc
imul
adc
call
andb
mov
ss
shr
lahf
jb
sti
mov
mov
push
sub
insl
fcmovnb
lret
seta
sbb
das
lea
pop
xor
pushl
add
dec
push
xlat
adc
and
mov
in
sbb
lock
imulb
femms
mov
fmuls
xlat
jb
nop
pushl
call
inc
push
jg
bound
rcl
dec
int3
fnstsw
and
stos
pop
xchg
cmc
stos
cmp
les
push
and
out
imul
fildll
dec
jmp
push
xchg
orl
and
pushl
fadd
push
je
ljmp
xchg
sahf
daa
push
inc
or
loope
andl
mov
into
imul
nop
push
adc
dec
cmp
adc
or
sub
lret
mov
enter
paddw
loop
test
sbb
push
scas
cmp
mov
cwtl
mov
mov
inc
mov
add
orb
jmp
add
add
sub
xchg
call
cmpsb
movsb
loope
jecxz
or
call
decl
cwtl
mov
mov
nop
jo
iret
inc
es
lods
xlat
push
cmp
jge
call
repnz
jecxz
outsb
bound
sar
mov
xor
test
mov
dec
jae
xchg
inc
xor
decl
push
xlat
out
icebp
inc
adc
and
sbb
push
xor
stos
inc
cld
call
fdivl
inc
orl
pushf
inc
sbb
decl
in
je
sbb
adc
stc
push
push
cmp
xchg
or
outsl
int
scas
test
cmp
xor
cmp
pop
adc
xchg
or
outsb
pop
xchg
call
insl
inc
push
das
stos
jg
lds
pusha
sub
loope
ret
das
mov
insb
fsubl
xor
push
lcall
inc
pop
mov
jg
loop
jae
xchg
call
jg
fsts
pop
mov
mov
scas
jecxz
cli
pop
sub
or
mov
inc
icebp
aad
clc
decl
mov
inc
sub
leave
dec
add
push
ss
in
xchg
stos
call
sets
and
cmp
mov
inc
push
jmp
xchg
sub
lcall
repnz
call
cmp
sub
inc
adc
sub
dec
xchg
in
adc
add
pop
lcall
ljmp
sub
xchg
aas
insl
test
mov
or
subb
mov
test
mov
enter
es
add
sbb
incl
lcall
fidivrl
xchg
xchg
ds
push
and
lock
jnp
jmp
aad
xlat
ret
add
enter
cmp
cs
mov
test
push
incl
out
xchg
movsl
dec
adc
int3
xchg
mov
sarl
je
mov
aaa
in
and
std
call
insb
aad
mov
dec
sbb
test
dec
movsl
jecxz
data16
pop
push
ficompl
adc
pop
cli
xchg
jmp
cld
fdiv
hlt
scas
inc
test
test
shl
nop
xchg
stc
inc
mov
stc
cmp
mov
push
call
sbb
mov
push
scas
shll
and
incl
rorb
xlat
mov
fcomps
sbb
sete
push
ficomps
cltd
add
mov
lret
inc
cmpl
sub
jbe
sub
test
mov
mov
lock
mov
out
es
outsb
addr16
nop
cmp
push
sbb
cmc
sarb
std
std
out
pop
fiaddl
push
mov
cmp
cmpsl
flds
add
andb
fldcw
decl
js
out
popf
ja
fstps
mov
pop
fists
and
mov
cmc
inc
aaa
decl
mov
adc
rolb
cwtl
adc
lock
sub
mov
and
sti
decl
lock
out
sub
xchg
fsts
mov
jne
fldcw
loop
in
call
mov
int
xor
dec
and
gs
dec
pop
es
ljmp
sub
sub
sbb
mov
cmp
sub
cld
mov
push
jb
xchg
clc
lock
rcrb
cmpsl
push
inc
cmp
adc
mov
adc
cmp
xor
jo
pop
cmp
decl
insb
fists
jo
inc
cmpsb
pop
xchg
jb
repz
cmp
jmp
aaa
mov
jecxz
jle
and
mov
xor
idivb
mov
sahf
fstpl
xchg
or
dec
mov
xchg
cmp
mov
jnp
pop
jge
and
clc
aam
push
push
sbbb
sahf
cmpsb
and
mov
push
call
pop
sarb
aam
adc
repz
sbbb
mov
clc
loopne
xor
incl
cltd
dec
xlat
pop
int
jle
pop
mov
ljmp
mov
test
xchg
call
jle,pt
not
adc
sbb
mov
lcall
adc
cmp
je
test
in
movsl
rorb
je
lcall
imul
jo
xorl
sti
fsubl
sar
mov
aaa
std
ljmp
aaa
xor
insb
movsl
xchg
mov
lret
dec
sub
lcall
mov
sub
inc
cmpsl
movsl
cmpsb
add
lahf
js
lock
rcrb
mov
decl
jo
jp
imull
cmp
sbb
pop
mov
mov
pushl
in
mov
outsb
fldcw
add
push
jle
popf
sbb
xchg
out
sbb
test
jle
decl
xchg
leave
shll
cmpl
mov
stos
out
and
mov
push
clc
xchg
lock
cmp
sbbl
pop
leave
dec
fists
xchg
icebp
add
dec
pop
sbb
cld
scas
adc
in
jge
pop
push
push
roll
test
sub
jg
cmp
mov
pop
shrb
xchg
pxor
decl
outsb
mov
cmp
inc
inc
pushf
pushf
dec
mov
jge
sbb
cli
call
add
aam
cmp
mov
daa
daa
out
andl
out
scas
lods
pushl
jmp
cmpsl
push
enter
mov
sub
adcb
dec
pop
sbb
jno
xchg
popa
sbb
jmp
dec
arpl
addr16
fidivrs
mov
in
sbb
sub
or
fyl2xp1
lcall
push
xlat
xorl
dec
scas
mov
push
jb
pop
les
int3
inc
in
ficompl
inc
or
cmp
add
mov
popf
mov
rclb
cmp
out
and
xchg
int
insl
fidivl
push
xor
dec
xchg
inc
cmp
fs
push
ja
sub
in
orb
dec
movsb
mov
cmp
push
fisubrl
adc
loopne
lcall
ret
test
cmp
push
jp
icebp
dec
pop
xor
mov
mov
scas
fs
je
loopne
or
xlat
xchg
cmp
or
sub
sti
lcall
push
push
xchg
xchg
fstpl
fisttps
dec
leave
xchg
rclb
mov
int
ss
mov
xchg
adc
scas
jle
jmp
ljmp
push
shl
rol
cmp
mov
jne
pushl
ljmp
jmp
imul
cmpsl
loop
pushf
pop
lcall
add
stos
stos
sub
mov
sti
gs
pop
inc
and
or
mov
cmp
fiadds
test
loope
adc
inc
int
decl
sbb
sub
fwait
push
xchg
push
dec
dec
push
or
cmp
decl
mov
je
iret
ret
mov
ja
sub
sahf
pop
or
jns
xchg
and
call
aad
xor
mov
hlt
jne
jl
inc
dec
push
clc
mov
add
mov
pusha
outsb
ljmp
nop
clc
add
sbb
stos
jno
mov
loope
xor
mov
sub
adc
imul
imul
xor
outsl
push
dec
iret
hlt
pushf
add
sbb
movsl
cmp
jmp
mov
in
lret
hlt
add
or
dec
mov
sbb
jb
pop
mov
call
es
dec
xchg
jecxz
out
xor
push
movsb
loope
sbb
lahf
addr16
jle
jbe
jge
lret
xor
sarb
inc
loop
mov
pop
fidivrs
mov
subl
bound
pop
inc
fs
mov
add
lds
movsl
cmc
aaa
and
add
es
ds
movsl
lds
ja
leave
adc
and
lret
xor
xor
sbb
push
fdivr
ljmp
mov
stc
movsl
inc
cmp
inc
mov
mov
and
adc
inc
scas
in
dec
jne
cmp
inc
nop
cli
ds
jb
mov
addr16
ja
out
xor
cs
xchg
decl
mov
faddl
jns
sub
xor
cmc
jo
push
fs
jmp
fidivl
add
or
xor
stos
scas
inc
cmp
pushf
sbbb
add
xchg
xchg
testb
cltd
cmp
incl
jnp
sahf
push
dec
inc
cmp
test
dec
jecxz
xor
cmp
or
dec
mov
shl
cmp
mov
pushf
hlt
insb
loope
jecxz
jns
incb
or
frstor
repnz
aad
cs
icebp
mov
repz
gs
aas
mov
jg
push
pop
lret
subl
pop
decl
dec
adc
scas
pusha
add
cmp
dec
dec
dec
mov
call
addr16
lcall
xchg
std
mov
andnps
pop
subl
and
scas
or
push
aam
imul
test
mov
sbb
or
dec
xlat
aas
test
jno
push
lods
test
mov
mov
add
pop
lods
pop
sbb
in
idiv
and
out
shrb
gs
add
mov
in
and
jg
cmpl
sub
sbb
cmp
out
mov
out
fnstsw
and
and
ljmp
je
mov
push
dec
pusha
mov
mov
loopne
pop
into
xor
mov
mov
or
jl
into
inc
sub
or
or
push
push
mov
sub
enter
xchg
jne
xor
cmpsl
testb
mov
bound
rolb
stos
pop
rol
fimull
fcmovb
or
xchg
adc
call
pop
in
scas
adc
mov
mov
xor
mov
aam
pushl
rorl
adc
jae
rorb
sub
push
and
sub
out
and
cmp
push
sub
add
nop
ja
dec
fmuls
fcomip
pushl
lret
out
mov
movb
xchg
jge
movsl
mov
or
decl
and
push
and
add
sarb
loop
outsb
ret
add
and
lcall
stos
mov
sub
mov
adc
test
add
imul
pop
dec
call
fistps
jnp
jl
jl
test
sub
jno
push
sub
pop
rclb
adc
sbb
in
fwait
cmovs
test
add
div
and
sbb
adc
mov
inc
bound
lcall
push
repnz
bound
inc
jecxz
or
int
mov
pusha
fs
push
lret
xchg
outsl
sbb
pop
hlt
jmp
mov
sti
sub
addr16
inc
outsl
into
ljmp
jmp
pop
adc
mov
movsb
scas
cmp
inc
in
sbb
movsb
cmp
insl
pop
int3
mov
jg
cmpsl
cmpsl
enter
adc
push
gs
or
xchg
xchg
mov
jno
dec
sbb
add
mov
stos
pop
pop
cs
call
lods
inc
adc
sbb
mov
adc
pushl
outsl
adc
pushf
repnz
or
cmc
mov
add
adc
popw
mov
stos
cmp
adc
mov
loopne
test
clc
xor
jle
xchg
dec
rolb
fisttpl
in
pop
jmp
ficoms
mov
fld
call
xchg
mov
mov
loop
in
add
mov
push
mov
call
xchg
js
std
jb
aad
sub
in
pop
xchg
mov
je
scas
jno
cmc
idivb
mov
cmp
sbb
pop
pop
movsb
decb
shll
sub
jmp
xchg
fsubl
add
addb
push
jns
sahf
inc
jno
lods
fdivr
mov
xor
imull
jae
enter
mov
xor
lds
loop
call
mov
push
dec
mov
pop
add
out
aas
dec
and
test
scas
mov
call
inc
pop
mov
fwait
or
lods
adc
ret
cs
cwtl
adc
cmpsb
pushl
inc
inc
hlt
xchg
sbb
into
xor
jge
into
jl
sbb
js
clc
ret
pushl
bnd
pop
lock
leave
shlb
cmpsb
std
sbb
mov
or
aas
cmc
out
lcall
mov
jp
push
outsb
sub
js
mov
stos
inc
into
out
iret
sub
push
push
ja
pop
and
mov
test
xchg
fwait
jg
loopne
inc
xchg
pop
xor
dec
sub
call
jno
mov
sbb
push
or
mov
adc
cmpsb
call
xchg
add
cmp
cmc
and
aad
lret
and
incl
insb
push
sub
mov
inc
ljmp
fcomi
fimull
pop
jmp
push
xchg
test
push
sub
jb
stc
faddl
jmp
jmp
clc
mov
lods
mov
mov
icebp
and
ljmp
int3
or
mov
sub
xchg
clc
mov
mov
xchg
push
sbb
into
stc
aaa
std
ljmp
xor
sbb
inc
xchg
inc
ret
and
push
jmp
pop
sbb
aam
push
int
popf
mov
mov
daa
and
jg
or
or
push
mov
js
jl
div
jl
adc
jg
popa
mov
xchg
xchg
iret
pop
adc
pop
into
outsb
stos
icebp
mov
mov
rolb
or
inc
das
sar
xor
sbb
pop
mov
scas
jb
cld
cmp
inc
leave
ret
jno
jmp
push
dec
outsb
xchg
rol
fadd
mov
sub
call
fwait
and
lods
and
fiadds
test
mov
jb
lcall
xor
pop
aas
xchg
insl
mov
aam
fdivl
inc
lods
sub
lahf
xchg
enter
add
mov
movsb
xor
cmp
mov
pop
cmpb
and
xchg
hlt
cmp
cmp
jmp
mov
or
in
jno
andl
cmc
or
mov
lcall
mov
repnz
nop
cmc
rcrb
fsubrl
push
dec
negb
jmp
call
ja
out
xor
push
pop
fs
or
loope
sar
pop
add
inc
sub
gs
aaa
enter
nop
fisubs
repz
call
push
clc
add
movsb
xlat
cld
aaa
dec
jb
add
gs
xor
call
stc
ret
clc
jno
mov
sbb
mov
out
ljmp
jg
ljmp
xor
data16
mov
outsb
int
jbe
mov
daa
sub
stos
mov
push
pop
call
mov
or
icebp
cs
sbb
push
add
mov
lahf
in
xor
or
pushl
inc
push
mov
loop
loopne
iret
xor
push
adc
decl
xor
cltd
je
pop
andb
sbb
fwait
cwtl
mov
dec
decl
mov
movsb
nop
sbb
pusha
iret
dec
pop
mov
dec
int
into
int3
inc
add
ljmp
fs
push
loopne
fdivrp
sbb
dec
mov
test
out
mov
mov
std
or
jp
rcr
or
pop
sti
jg
pop
and
xlat
out
sbb
sbb
jo
mov
in
xor
adc
xchg
jmp
lock
rorb
add
add
xchg
cmpsb
rcr
mov
incl
mov
sbb
xor
mov
rcr
jmp
mov
inc
out
ja
sbb
decl
inc
add
outsb
xchg
popf
fildl
inc
fdivr
mov
cmp
xchg
cmp
xlat
add
mov
mov
jo
mov
lcall
xchg
daa
sti
ficomps
push
in
call
call
outsb
inc
lret
out
inc
out
and
mov
sbb
das
pop
push
dec
out
mov
out
clc
incl
mov
mov
jl
mov
or
lea
std
push
lock
pop
mov
stos
mov
rcll
jg
pop
fbstp
lret
incl
jmp
sbbl
pop
loopne
mov
mov
mov
mov
mov
aas
inc
xchg
mov
outsb
in
out
adc
cli
lcall
mov
jge
pop
or
cld
xor
orb
jns
add
mov
call
sarb
mov
mov
in
mov
jmp
push
xchg
sub
cwtl
mov
scas
pushf
add
dec
repnz
xchg
out
mov
mov
push
out
es
push
fistl
outsb
rcl
dec
arpl
jne
lret
jns
ret
rolb
pusha
fwait
xlat
mov
pushl
orl
push
call
out
jne
in
gs
sbb
lea
pop
shlb
xorl
imul
fcoms
ljmp
xchg
in
push
cli
pop
and
movsb
test
fsubrs
jbe
in
pop
fcomip
decl
jno
jge
sub
sahf
mov
les
nop
and
jecxz
adc
aad
movsl
pop
dec
imul
bound
adc
in
mov
push
enter
pop
leave
cwtl
jl
out
inc
lea
stos
xchg
ss
addr16
hlt
or
in
ja
cmp
add
aas
pop
aad
ljmp
jo
inc
pop
adc
inc
mov
sub
sbb
lock
and
jg
mov
outsl
cld
pop
mov
xchg
pop
movsl
fs
hlt
xchg
pushf
push
movsb
and
aam
mov
lcall
mov
enter
fldl
cmp
jno
stc
xchg
popf
in
xor
lret
test
mov
ljmp
mov
pop
sbb
adc
wbinvd
or
push
mov
inc
cmp
stc
dec
jge
nop
lahf
cmp
add
fnsave
std
lea
sub
xlat
cmp
lock
inc
pop
in
jle
les
mov
cwtl
push
js
pop
inc
popf
in
push
inc
clc
ljmp
jl
push
xor
push
jo
pop
cs
pusha
scas
pop
or
mov
out
lods
icebp
sub
lods
cmpsl
pop
data16
cltd
ja
bound
jge
nop
xchg
cmp
dec
mov
or
roll
cld
mov
subb
dec
aaa
pop
loop
mov
ljmp
dec
cmp
push
jl
xor
out
fwait
mov
sbb
decl
mov
je
aad
xchg
enter
mov
ljmp
jecxz
adc
push
popa
roll
sbb
sarb
les
add
jp
rcr
daa
sub
pop
push
cmc
js
cwtl
lret
lods
fiadds
rorl
aad
test
lcall
cli
push
fdivl
cli
scas
in
das
fisttps
call
fbld
cmc
adc
cli
mov
cmp
push
push
ljmp
xchg
jb
fucom
inc
in
mov
add
xlat
lcall
ljmp
xor
or
push
iret
movsb
jbe
nop
cmp
dec
clc
out
inc
dec
cli
fwait
adc
stos
mov
cmpsl
pop
ret
sar
ljmp
cmpsb
or
icebp
adc
mov
dec
loope
jnp
lret
cld
movsl
mov
decl
lods
pop
lret
pop
add
jo
ds
or
jmp
call
inc
push
add
in
sub
lcall
das
inc
adcb
jb
incl
lods
cmp
imul
vcvtps2dq
mov
cmc
add
jmp
mov
sbb
les
pop
testb
aad
ds
cltd
cmc
push
ljmp
fisttpl
inc
ljmp
js
mov
clc
ljmp
and
movsl
clc
scas
into
cmp
inc
xor
and
std
fbld
jo
repnz
clc
insl
cmp
or
cld
in
push
movsb
stos
fdivrs
out
cmp
or
cltd
iret
sbb
mov
decl
pop
and
mov
add
repz
jmp
inc
je
xchg
xor
pop
cmc
lcall
jbe
dec
lret
or
xor
and
mov
out
push
hlt
and
aaa
jecxz
imul
or
imul
insb
scas
dec
js
fists
out
fildll
push
mov
ret
mov
test
and
in
dec
cmp
flds
dec
icebp
in
cmp
adc
mov
push
int3
lods
aad
mov
in
js
or
std
xchg
xor
jl
imul
aad
push
cld
push
pop
xchg
bound
pop
ljmp
outsb
fs
cli
mov
and
aam
decl
test
mov
add
cltd
xchg
add
sub
ljmp
mov
or
xor
sbb
int3
ficompl
aad
cmc
lea
pop
mov
jne
xor
mov
mov
int
or
bound
mov
outsl
mov
cltd
add
or
dec
cli
aam
add
xor
nop
dec
push
or
call
in
mov
pusha
ret
lcall
jb
lds
imul
popf
xchg
xchg
jb
mov
mov
jns
mov
repz
repz
jle
pop
fstpl
dec
mov
decl
movsb
or
sub
add
leave
cmp
int3
daa
mov
jns
ret
cmp
mov
mov
dec
mov
sbb
fcoml
enter
js
popf
add
pushl
movsl
mov
iret
popf
mov
in
out
pop
xor
mov
pusha
aaa
decb
ss
sub
jmp
xchg
dec
scas
fwait
pop
adc
lret
icebp
stc
clc
ja
ret
popf
ret
out
mov
add
clc
mov
faddl
andl
sahf
add
shr
mov
pop
ret
aam
xor
ljmp
pop
inc
dec
push
std
iret
out
lods
xchg
inc
repnz
sub
test
rol
int3
jmp
jmp
mov
les
dec
lods
mov
jg
sub
mov
cltd
mov
xlat
les
jae
or
fidivrl
movsl
lods
insl
push
sbbb
ja
cmp
add
xlat
and
and
jb
lcall
aaa
test
adc
pop
cmp
mov
call
xor
cmc
push
mov
rcll
in
rcrl
xorl
and
push
sbb
negb
scas
sbb
mov
test
ljmp
repnz
cmc
call
stos
inc
bound
lret
pop
in
test
mov
or
xor
das
xor
dec
mov
inc
inc
xchg
negb
pop
mov
xchg
ljmp
mov
clc
push
int3
sub
pop
dec
mov
lcall
jg
pop
in
test
int3
rorl
jl
clc
rclb
lds
fcomip
mov
int
mov
jae
adc
jnp
jno
je
lods
loop
xor
mov
jno
jecxz
mov
insl
aaa
fs
aam
test
decl
movsw
mov
fildll
mov
jne
inc
jecxz
cmc
stc
jg
mov
insl
insl
mov
in
shrl
jnp
sub
inc
clc
pop
dec
sbb
neg
xor
cli
add
call
inc
or
stos
popf
xor
mov
dec
arpl
adc
gs
lea
ds
decl
mov
jae
adc
cwtl
mov
pop
push
xchg
pusha
pop
mov
test
jg
xor
jae
add
fildl
mov
mov
push
add
call
lock
rcr
iret
ljmp
test
fidivrl
ljmp
jbe
add
dec
fbstp
jg
push
cmc
dec
xor
pop
sahf
add
xor
cmpsb
incb
mov
leave
adc
jne
cld
aas
lods
lea
mov
call
inc
cmp
cmp
popf
bound
pop
xchg
stc
lcall
jmp
add
fwait
jle
lahf
cmp
shlb
cmc
and
incl
cs
mov
dec
xchg
out
imul
stc
dec
loopne
stos
fs
std
call
mov
sub
or
call
mov
aaa
clc
and
mov
mov
push
outsl
dec
mov
jmp
cmp
inc
push
dec
shlb
out
icebp
jne
mov
mov
stos
sbb
lret
rolb
inc
push
ljmp
push
pop
mov
xchg
sahf
inc
adc
cmc
inc
and
xor
or
inc
jle
cmp
inc
push
mov
or
pop
cmp
popa
das
cmp
xchg
imul
hlt
pop
push
mov
cmp
adc
lcall
js
or
jmp
mov
popf
pushf
inc
adc
stc
cmp
lahf
lods
out
movsl
lcall
jecxz
and
adc
add
sbb
lea
sub
xlat
incl
add
cld
lahf
push
and
or
jl
pop
ljmp
fdiv
outsl
push
rol
mov
movsl
daa
popf
cmpb
adc
and
jmp
jae
fmulp
mov
sub
call
jle
jno
jmp
dec
pushf
mov
pushl
fstpl
push
enter
pushf
ret
inc
sub
lcall
mov
lcall
push
mov
jge
mov
jg
jecxz
loopne
popf
popa
xor
push
insb
sbb
sbbl
adc
loope
call
cltd
mov
aad
call
out
lcall
push
sbb
je
sahf
mov
ret
lods
add
mov
scas
jmp
push
repz
insb
mov
lret
mov
mov
or
xchg
inc
rolb
jg
dec
clc
jle
inc
sahf
mov
in
inc
or
cmp
call
in
sbb
or
or
pop
jnp
jle
mov
jo
enter
call
jns
mov
pop
or
xor
xor
pop
cmc
or
int3
stos
mov
push
cmp
shrb
fisubrl
mov
fwait
pop
addl
add
jnp
xchg
jbe
aad
loope
adc
push
jecxz
push
test
jmp
sub
sub
adc
arpl
cmpsl
adc
sub
pop
out
stos
icebp
pop
cli
inc
mov
adc
leave
dec
jae
mov
stc
out
push
jbe
xor
lcall
dec
jp
cwtl
in
inc
push
icebp
fbld
shll
ret
add
stos
cmp
push
aas
inc
jmp
aam
lcall
dec
dec
jno
fcomps
subl
mov
cmpsb
sub
es
xchg
out
pop
ljmp
mov
out
jge
pop
inc
cmp
out
and
mov
je
pushl
cld
decl
jo
mov
stos
cmc
pop
mov
movsb
mov
xchg
mov
decb
cld
sbb
rcrb
mov
lds
adc
pop
lock
mov
and
adc
sub
test
dec
loop
movsb
inc
cwtl
mov
aaa
mov
pop
inc
cmp
sbb
dec
xchg
jnp
rorb
cmp
push
mov
lds
pop
pop
js
sub
adc
cwtl
idiv
insb
push
je
arpl
fmul
rcl
andb
inc
mov
jb
cmp
cmpsb
pop
mov
jge
mov
call
mov
sbb
jmp
repnz
jne
push
inc
gs
daa
mov
decl
icebp
add
pop
xor
arpl
sbb
filds
jnp
adc
cli
fildll
clc
ja
fcomip
jmp
xchg
cltd
mov
add
xor
pop
sbb
jns
add
xchg
lods
stos
mov
sub
cmp
jp
dec
sbbl
or
stos
and
inc
cltd
jb
in
mov
mov
fisttps
cmc
fldenv
stc
xor
xlat
lods
mov
lcall
push
call
mov
sbb
and
cli
xchg
inc
adc
push
repz
je
insl
pop
mov
and
arpl
stc
test
shll
adcb
out
aad
pop
in
mov
pop
cmp
cmp
lcall
xlat
jnp
aas
and
xchg
or
aaa
jg
pop
xchg
sub
std
push
mov
or
pop
popf
jl
sub
sbb
outsl
mul
outsb
lock
popf
inc
pusha
sub
call
sub
dec
loop
sub
fs
sbb
inc
scas
sbb
mov
fsubrl
out
loope
jmp
and
jnp
outsl
mov
mov
movsb
sarl
push
pushf
out
clc
inc
pop
icebp
sbb
adc
es
or
loope
lea
adc
or
lcall
fdiv
ret
fistl
dec
loope
lcall
jbe
cli
sbb
xor
imul
or
loope
std
and
sub
ret
call
std
and
pop
das
fstl
dec
push
inc
cmp
incb
sub
jl
jno
je
clc
mov
adc
fs
cli
dec
mov
mov
xor
shlb
add
mov
mov
out
jmp
incl
jl
mov
jnp
rorb
sub
pop
sub
ljmp
js
jnp
dec
jo
lock
jmp
pop
xchg
xchg
xor
pop
mov
aas
scas
mov
xor
arpl
and
test
gs
incl
test
cmp
clc
sub
and
or
rorl
ds
pop
aam
add
roll
pop
mov
js
les
incl
or
aam
lcall
insb
rolb
push
mov
cmp
mov
int
xor
lret
lret
ljmp
lcall
test
flds
jo
les
insb
test
push
not
pushf
push
stc
movsl
daa
jmp
iret
xchg
push
adc
aaa
sti
pop
lahf
aad
in
jmp
cwtl
push
pop
shlb
decl
inc
cmp
xchg
pop
and
jmp
repnz
outsb
pop
fisubl
imul
lcall
sub
sbb
les
xor
daa
xorl
dec
cmp
out
lcall
out
outsl
aam
xor
cmpsl
xlat
sbb
cmpsl
ljmp
in
sub
sub
mov
cmpsl
ljmp
jae,pn
dec
dec
fwait
subb
mov
shrl
jbe
pop
jg
sbb
or
sub
lret
in
stos
call
outsb
mov
mov
lcall
mov
lods
push
xchg
adc
dec
and
xor
lock
dec
mov
lret
push
jmp
xchg
mov
dec
xchg
cli
stos
cs
cmpsl
jae
cmpsl
popa
sbb
cmp
mov
lcall
mov
dec
and
sbbl
mov
insl
loope
outsb
mov
sbb
ljmp
lods
dec
fxch
in
mov
inc
test
mov
jbe
outsl
ljmp
dec
sbb
pop
push
adc
mov
jp
push
inc
stos
insb
cmc
push
idivb
aam
dec
sbb
in
mov
pop
cld
lret
lcall
scas
mov
cmp
push
xor
repnz
xchg
stos
pushl
std
pusha
jnp
aas
inc
je
jecxz
iret
xchg
enter
add
cmp
decl
lcall
push
jg
pop
xchg
push
or
test
xchg
push
mov
decl
cmp
add
cs
popf
dec
jmp
testb
xlat
repnz
rep
cmp
sub
aam
jmp
in
jae
into
sbbl
dec
enter
and
xor
lcall
fisttpl
fsts
or
lcall
nop
fbstp
inc
jne
and
push
idivb
lcall
in
fnsave
cltd
cld
scas
hlt
lcall
lea
scas
xor
incl
mov
lahf
test
dec
call
rorl
popf
movsl
fdivrp
out
cmp
movsl
jbe
decl
lock
insl
outsb
push
mov
or
lret
insl
es
stos
jb
xor
lock
lret
cltd
negl
push
fcmovnbe
andb
pop
sbb
xlat
jp
out
xor
lcall
inc
mov
lods
ud1
jmp
sbb
fistpll
cli
mov
add
sbb
hlt
xor
ds
andl
ljmp
add
jle
inc
cmpsb
pop
push
mov
sbb
pusha
dec
in
call
fidivl
ljmp
and
mov
cs
out
add
inc
pop
js
cli
and
out
mov
aas
mov
mov
imul
pop
aas
or
xchg
lret
sub
ss
in
or
call
nop
or
pop
or
js
mov
sub
decl
imul
xor
sbb
into
adc
in
leave
fwait
rcrl
fwait
xor
push
pop
adc
aad
inc
sbb
ljmp
jmp
nop
in
ret
imul
mov
out
mov
call
and
and
jle
cvtps2pd
xchg
or
movsb
dec
in
mov
jmp
cmp
sbb
push
xchg
and
adc
pusha
lret
mov
js
cwtl
loopne
ret
call
std
iret
aad
xchg
mov
leave
insl
jge
xchg
jg
ret
mov
xchg
dec
nop
insb
jnp
lods
rolb
push
jae
push
das
inc
add
dec
lret
or
rcl
sbb
and
lcall
loopne
adc
jecxz
fwait
adc
and
rorl
sub
pushf
sbbl
pushl
push
jl
outsw
loopne
or
sub
or
mov
cmc
sub
jmp
js
fmuls
xchg
gs
repnz
inc
fistpll
jg
jmp
dec
push
clc
rcr
sub
jle
pop
repz
lret
mov
imul
jno
stos
and
pop
mov
mov
cmp
rclb
pop
push
mov
mov
pop
out
ficoms
mov
call
lret
out
mov
and
lock
pop
repz
pop
pop
adcl
pop
stc
testl
add
or
mov
imul
dec
mov
outsl
std
incl
repnz
test
dec
aas
xor
mov
pop
lret
push
movsl
cmp
pushl
daa
fidivl
dec
push
cmpl
add
in
sub
call
adc
fldt
in
xor
arpl
testb
ja
xchg
mov
lcall
sbb
popf
fcoml
push
or
mov
aad
movsb
mov
xor
pop
decl
push
js
push
stos
jmp
insb
adc
adc
rclb
repnz
push
fidivs
xor
out
out
clc
fsubp
sub
add
add
push
push
xchg
mov
pop
lock
call
or
mov
xchg
sub
scas
dec
fisubl
ror
mov
push
pop
roll
push
and
cltd
dec
push
mov
jg
ret
sti
in
scas
loope
jle
je
mov
lods
ja
daa
aas
mov
lcall
inc
add
adc
ljmp
pop
push
push
xor
jne
enter
pushf
or
aad
mov
dec
mov
lret
mov
inc
imul
bound
call
add
jae
fcomps
ja
daa
jmp
ljmp
hlt
mov
orl
xor
jmp
xor
divb
push
test
fstpl
xor
push
shlb
lahf
jg
jae
js
dec
sbb
jp
stc
xor
jae
andb
mov
enter
incl
xor
push
cmp
inc
stos
mov
dec
fdivrs
jo
sbb
je
cmp
decl
push
into
fldl
adc
in
xchg
mov
mov
mov
lods
sub
ja
incl
or
popa
push
ljmp
mov
test
lahf
pop
sub
adc
insb
jno
lahf
xlat
fstpl
loopne
cmp
rorb
scas
repz
sbb
sbb
fcomip
jg
mov
inc
xor
adc
cmp
adc
ds
pop
incl
in
add
and
sbb
cmp
insb
cmpsl
push
cmc
mov
xchg
pop
mov
adc
ljmp
icebp
xchg
ffreep
out
dec
aaa
movsl
scas
je
in
push
cmp
sub
jo,pn
mov
std
es
shrl
mov
jmp
mov
and
pop
sbb
jo
lret
sahf
push
cld
call
loop
clc
cmpsb
push
ret
ja
adc
iret
repnz
test
mov
imul
cmpsb
pop
and
daa
jb
jnp
sti
fs
fcoml
es
call
mov
aas
nop
std
xchg
sub
mov
test
ljmp
mov
aam
mov
pop
mov
decl
mov
scas
nop
ljmp
lds
out
cmovg
aam
jae
insb
ror
jnp
pop
add
or
ljmp
adc
push
fldlg2
inc
pushl
cwtl
mov
jo
je
insb
jmp
test
lcall
mov
cli
call
push
mov
xlat
scas
adc
aaa
mov
sbb
in
inc
jmp
sub
shlb
cmp
mov
int
xor
sub
mov
ljmp
mov
sbb
inc
cmp
imul
incl
nop
test
out
lfs
insl
cs
mov
into
in
lret
pop
cmpsb
ficoms
aad
mov
popf
cmpsl
pop
xchg
pop
out
push
xor
out
in
rcr
sbb
js
ficomps
jg
arpl
mov
cmp
jp
movsb
fs
push
cmp
daa
mov
cmp
add
hlt
in
xchg
sbb
out
stos
and
js
and
adc
es
hlt
add
push
enter
xchg
mov
dec
xlat
push
pop
loop
mov
jecxz
mov
shrb
push
into
ljmp
mov
push
loopne
clc
jge
push
call
sbb
xlat
jns
mov
cs
jg
ljmpw
ljmp
ret
inc
xlat
pop
mov
loope
jp
and
or
bound
mov
sar
testl
jno
cs
xchg
lret
inc
pusha
ja
call
push
scas
dec
jns
sbbl
and
mov
cld
sti
shlb
mov
dec
pop
push
mov
push
or
mov
sbb
and
xchg
inc
adc
push
and
pop
aam
dec
jno
xor
sub
jb
ss
decl
movsl
fs
inc
fmuls
in
sub
out
data16
js
loop
lock
mov
std
fwait
mov
aas
xchg
daa
mov
dec
push
xchg
inc
or
cmp
fs
lcall
fidivs
hlt
push
testl
in
cltd
pushf
cld
push
jno
mov
loopne
sub
pop
fisttps
loopne
mov
mov
decl
jg
push
jns
xor
inc
js
sub
xor
cmpl
sbb
pop
std
decl
xchg
lds
adcl
int
xlat
jo
push
dec
or
pop
pop
pop
decl
pushl
cwtl
xchg
lock
rorl
push
cltd
xor
mov
bndcn
mov
add
cmpsb
xchg
gs
incl
pop
aas
mov
sub
inc
xchg
bound
jg
jcxz
push
lcall
lcall
xor
imul
rcr
xchg
ja
and
sahf
xor
fdivr
push
lret
inc
fsts
in
inc
bound
das
cwtl
ret
sub
mov
jae
rcrl
push
and
fistpl
rclb
push
jae
and
mov
fcoms
xchg
int
test
jno
cmpsl
adc
stc
ljmp
sahf
dec
or
push
rolb
sbb
inc
fisubrl
push
inc
and
out
sbb
or
movsb
jg
decb
pop
cmpsb
in
das
shr
sti
jle
fsin
scas
movsb
idivl
ljmp
clc
jmp
js
inc
fcmovnb
pop
addb
leave
int
jne
mov
lcall
add
push
cld
aaa
outsb
cmc
jbe
cmp
add
popf
inc
jmp
mov
imul
imull
call
pop
and
jl
inc
fcomps
sbb
shl
pop
das
js
push
aam
test
adc
stos
rcll
test
jg
test
mov
cmpsl
iret
xchg
icebp
nop
xchg
shll
addl
test
cltd
mov
dec
std
incl
mov
lods
mov
leave
mov
xchg
rcr
call
je
mov
jg
inc
out
rcll
dec
push
daa
outsl
push
bound
loop
pushl
adc
pop
mov
add
dec
push
imul
fwait
add
out
push
cmpsl
and
push
sub
cld
push
and
mov
xchg
mov
and
pop
lret
mov
cmpsb
loopne
aas
push
ds
sarb
mov
add
aam
jmp
dec
pop
repnz
pop
or
aam
cltd
pop
cltd
mov
lcall
push
pop
bound
into
dec
and
out
call
gs
ja
lcall
push
adc
pop
mov
jle
ret
nop
push
movb
xchg
outsl
aad
mov
cmp
test
mov
add
in
out
jns
in
pop
mov
imull
jnp
sub
mov
fcmovb
ljmp
pop
fwait
push
pusha
insl
bound
mov
fmull
aam
daa
push
cli
xchg
loope
cmp
sti
adc
icebp
add
inc
and
aad
lcall
push
cltd
les
fs
inc
loop
push
adc
jbe
fimull
push
push
fwait
incl
imul
gs
std
fidivrs
repz
push
sub
lret
pop
pop
lods
adc
lret
incl
jb
mov
inc
lods
push
fimull
shrb
lret
into
test
call
iret
in
add
push
xchg
icebp
fistl
outsl
mov
sbb
add
mov
mov
sub
xchg
mov
pushl
test
dec
cmp
mov
sbb
rep
pop
cmp
lcall
push
imul
inc
pop
mov
sbb
cmc
cmpb
pop
jl
ror
aam
decl
push
popa
sarl
cwtl
ror
add
sub
dec
ljmp
pushl
or
dec
or
jg
dec
push
repz
dec
ret
cmp
stc
lock
out
cli
cmpsl
cmp
add
enter
mov
adc
jecxz
loopne
sub
mov
jg
gs
inc
dec
enter
fdivr
fcomip
push
jp
clc
or
and
mov
rolb
push
push
enter
add
jne
mov
mov
cmp
cmp
mov
jle
dec
lods
sbb
mov
sahf
lods
imul
inc
pushl
sbb
sbb
inc
negl
inc
mov
jmp
adc
test
cwtl
js
mov
pushl
push
pop
mov
out
mov
mov
imul
cld
mov
ljmp
hlt
mov
out
mov
outsb
lret
xchg
jl
cmc
in
lds
std
xlat
mov
movsb
cmpsl
fsubl
inc
sbb
add
fmuls
push
mov
incl
aad
ret
cmp
cmpb
mov
fimuls
mov
cmp
mov
jo
stc
ret
sbb
fidivs
insb
push
lds
ljmp
notb
cltd
test
adc
leave
faddl
push
dec
stos
enter
cmp
loopne
xchg
call
pop
sub
or
mov
sbb
push
dec
adc
mov
xlat
js
decl
dec
js
ds
adc
imul
push
pop
jp
or
testl
mov
jnp
mov
notl
mov
ljmp
sahf
test
jmp
cmc
dec
lret
dec
pop
push
push
cltd
pop
ret
inc
pop
fsub
cmpsb
adc
ljmp
call
lds
stos
jecxz
out
and
mov
ljmp
decl
sub
movsb
mov
sbb
or
xchg
xchg
dec
into
and
sti
sbb
fcom
std
mov
inc
daa
xor
mov
mov
xchg
nop
mov
rol
xor
lcall
je
push
negl
scas
jle
jp
pop
dec
jle
add
dec
std
cmp
mov
jg
dec
inc
aad
mov
sub
cmpsl
xchg
pushf
jg
mov
fiaddl
mov
and
bound
lock
adc
scas
clc
jmp
js
nop
dec
xchg
lret
mov
movsb
or
jo
inc
add
xlat
cmp
xor
pop
aas
jne
adc
xchg
mov
dec
mov
lcall
xchg
adc
mov
and
jmp
jbe
sti
js
ljmp
inc
popa
sar
lret
mov
mov
clc
dec
add
imul
outsl
clc
jmp
std
mov
mov
ljmp
sub
adc
lcall
lods
sub
xchg
xor
insl
in
int3
sub
pop
subb
int3
insb
mov
aam
push
in
daa
test
adc
adc
jns
dec
sbb
jge
out
and
call
test
jae
aam
mov
mov
push
lret
stos
pop
hlt
incl
insb
in
lcall
mov
xchg
test
dec
mov
cmp
loopne
lock
daa
ss
pop
add
and
daa
mov
cmp
scas
outsl
clc
call
in
sub
fdivl
loope
popl
inc
sbb
popl
add
pop
call
ja
and
cwtl
aad
ljmp
insb
ret
mov
stos
xor
inc
addb
enter
adc
scas
xchg
out
and
dec
das
clc
jg
pop
jl
shlb
pop
push
int
shlb
addb
ljmp
in
lahf
lock
arpl
xchg
pushf
mov
pop
or
pop
cmp
incl
jmp
cmpl
test
daa
lock
out
cwtl
mov
nop
icebp
out
push
iret
aas
mov
or
or
add
movsl
dec
fwait
call
mov
out
cli
pushl
jle
mov
fisttps
stc
jne
jnp
pop
into
xchg
rcl
jmp
ljmp
mov
mov
inc
mov
push
mov
cmpl
ja
jmp
push
mov
xor
mov
imul
ljmp
sub
sbb
ljmp
and
shl
jbe
mov
adc
push
sti
in
pop
cld
jmp
cmp
int
or
mov
pop
dec
sub
out
jg
addl
mov
mov
and
out
ret
pop
lret
fldcw
test
gs
andl
pop
loopne
out
jo
inc
test
ljmp
and
das
pop
jno
adc
jl
mov
mov
mov
jg
fisubrl
adc
fs
xor
sbb
cwtl
ljmp
call
or
scas
lret
out
adc
repnz
inc
test
in
fisttps
jae
mov
in
lods
rcrb
sbb
addr16
cmc
loopne
dec
lcall
mov
mov
and
pop
hlt
insl
into
and
stos
ss
mov
incl
stos
shll
dec
jo
mov
into
aaa
int
shlb
cmp
push
decl
xchg
ret
ss
mov
add
frstor
add
add
je
sarl
or
and
mov
stos
fimuls
lret
mov
das
repz
or
cmp
push
xchg
arpl
mov
push
and
xor
lock
bound
fildll
mov
and
mov
loop
mov
cld
call
jmp
mov
leave
ljmp
test
mov
ret
ljmp
inc
sub
mov
xchg
loope
adc
sbb
jl
add
mov
sbb
roll
sbb
in
mov
or
sbb
jp
jg
fcomps
mov
inc
cmpsb
mov
add
negb
aaa
std
jge
rolb
dec
mov
sub
jnp
outsl
cli
push
incb
push
sbb
jae
mov
jnp
pop
xchg
mov
loope
out
lods
out
cmp
xchg
decl
mov
scas
add
lea
incl
push
les
sti
adc
fdivrl
sub
incl
mov
push
cmp
add
cmp
push
call
adc
fwait
xchg
add
and
jge
idivb
and
leave
lock
test
add
jmp
sub
and
pop
scas
stos
mov
dec
xlat
fnstsw
dec
shlb
pop
call
cld
pop
cmp
cld
pop
adc
add
call
pushf
cmp
shll
imul
and
dec
dec
adc
sbb
jmp
push
xchg
jmp
frstor
pushl
in
mov
sbb
xor
xor
call
mov
mov
rcrl
movb
in
inc
adc
cmpsb
add
ss
scas
cli
incl
addr16
inc
inc
fwait
inc
enter
lcall
call
lcall
aaa
inc
xchg
mov
lds
cmpsl
gs
dec
out
outsb
jbe
je
jo
out
ljmp
sahf
add
sub
mov
jnp
scas
test
push
and
xchg
out
scas
incl
fmul
rolb
or
mov
repnz
sahf
jmp
fnstsw
mov
xchg
out
mov
xor
xchg
aaa
pushl
clc
lock
cltd
jmp
ljmp
mov
jg
fsub
outsb
push
repz
out
inc
outsl
mov
in
sbb
ret
pusha
daa
mov
out
mov
in
push
sbb
mov
ljmp
loop
call
xor
outsl
out
jg
push
cli
mov
mov
mov
outsb
pusha
and
fisubrl
jmp
popf
test
mov
and
call
cltd
in
lods
pop
cmp
jnp
ss
andl
out
add
mov
shlb
sbb
negl
fs
add
pushl
imull
pop
mov
adc
cmp
or
mov
sbb
call
push
insb
aam
enter
push
cmp
jmp
outsb
imul
pushf
cmp
call
xor
pop
sbb
lock
pop
cmc
mov
imul
push
cltd
mov
mov
dec
scas
adc
fcomip
sahf
mov
aas
dec
lcall
sub
pop
mov
fiaddl
lcall
cmp
mov
bound
jae
daa
mov
lret
jne
cmpsl
and
std
fwait
lea
aas
aam
rep
into
mov
test
jae
rorl
rcr
jae
jb
jbe
incl
outsl
xchg
pop
mov
fimull
mov
out
incl
pop
xchg
cmp
ret
xchg
mov
inc
sbb
or
out
jmp
call
ja
in
and
sbb
push
and
adc
nop
push
in
dec
pop
leave
push
or
aad
ud0
pushl
prefetchw
test
or
jne
jmp
int
lock
jmp
fcomip
in
outsb
or
incl
sbb
mov
and
andb
jo
lcall
mov
cmp
push
cmp
jnp
mov
lret
push
jmp
sbb
outsb
std
jl
push
xchg
cli
and
mov
ja
mov
jmp
adc
and
xchg
in
orb
rcrb
jmp
in
mov
jmp
aad
call
in
xor
xchg
mov
or
xchg
push
jp
sub
insl
out
call
stos
cmp
ja
mov
fisttpll
mov
stos
mov
filds
cmc
dec
ss
ds
and
add
sub
and
dec
jnp
mov
incl
push
ja
jae
dec
mov
gs
xor
stos
push
leave
sub
jmp
mov
lcall
or
xchg
pop
pop
inc
mov
frstor
mov
ljmp
aam
push
rcrb
mov
ja
mov
leave
dec
fcomps
cld
inc
jle
nop
or
lcall
cli
inc
addl
mov
stos
jns
or
insb
iret
mov
cmpl
fildll
repnz
fnstsw
rorl
jg
xlat
decl
mov
rcrb
pop
pop
mov
fs
jmp
jmp
icebp
xchg
cmpsb
cltd
push
jns
xchg
mov
cmp
jbe
fnstcw
or
out
push
push
cld
daa
or
mov
scas
dec
push
add
dec
jno
jmp
ljmp
cli
mov
jmp
mov
push
inc
rolb
sti
movsb
into
mov
dec
sti
mov
pop
enter
loopne
cmp
mov
xchg
imul
addr16
pop
div
jg
leave
addr16
mov
xchg
cmp
pop
jnp
xchg
sti
jae
fdivrp
or
lcall
das
cmp
cmpsb
and
mov
cltd
inc
ficomps
jnp
xchg
mov
dec
pop
shll
pop
std
ljmp
mov
std
out
fistps
push
rcrb
inc
lret
xchg
fimuls
in
adc
fnsave
mov
lea
lods
sub
call
jne
cs
stos
scas
and
lret
cmpsb
call
mov
test
shll
mov
aam
andl
decl
stos
nop
xchg
and
nop
cmp
xchg
sbb
add
dec
adcl
jl
xchg
lock
fistpl
dec
shr
stos
inc
loop
icebp
pop
inc
out
test
xor
cltd
arpl
decl
push
fsubrl
pop
jno
out
cwtl
repnz
mov
and
jbe
ljmp
addps
outsl
fstpl
out
dec
shr
xor
add
inc
sub
cli
in
dec
ret
aam
loopne
cmpsb
mov
fwait
test
int3
inc
or
push
lcall
or
mov
aam
adc
cmp
mov
jge
sub
aam
ror
sbb
jmp
xchg
pop
dec
fistpll
and
add
or
fs
fbld
mov
push
add
std
cmpsb
dec
push
out
cmpsb
in
ljmp
aad
xlat
pop
cli
mov
scas
fadd
out
scas
das
dec
add
sar
decl
cmpsb
ss
mov
fwait
adc
out
popf
mov
pop
mul
sub
das
cmp
cmc
das
out
and
pushf
in
pop
test
lcall
adcb
and
gs
pop
adc
in
jnp
push
outsb
inc
sbb
stc
mov
lock
aas
push
xor
push
cld
adc
call
sub
ror
and
outsb
lea
or
in
sbb
test
lods
adc
lods
test
clc
xor
pop
jbe
idivb
dec
inc
adc
jmp
mov
movsl
fsubr
movl
outsl
sub
or
xchg
cmp
aas
mov
fprem1
or
sahf
ljmp
and
mov
ret
std
movsl
lret
jnp
adc
lahf
pop
shr
jnp
jnp
insl
addr16
out
arpl
jge
mov
xlat
lods
pop
sub
cltd
lea
ja
ja
outsl
cli
jmp
daa
rcl
jnp
in
push
sub
clc
gs
lret
add
cld
fldl
lods
jns
cld
pop
and
es
test
mov
call
fsubrl
pushf
mov
jg
leave
andb
jmp
jae
dec
jne
jle
jnp
js
jg
dec
daa
stos
mov
pop
xchg
test
lds
add
xchg
loopne
shrl
ljmp
jbe
jp
or
cmp
inc
insb
mov
dec
data16
cmp
les
fcomps
mov
jae
xlat
popa
rcr
or
sub
or
cltd
jmp
lcall
cld
mov
test
sub
xchg
push
test
push
and
lahf
adc
in
mov
and
xor
shll
and
in
stos
push
call
movsl
xchg
mov
daa
or
inc
xor
inc
sbb
stc
in
dec
mov
xlat
lret
addr16
mov
decl
xor
loope,pt
xor
mov
mov
loop
mov
pop
ljmp
pop
inc
js
lds
daa
inc
pop
lcall
jecxz
sub
dec
sub
leave
setbe
pop
daa
add
decl
dec
aas
xchg
mov
jmp
mov
push
enter
dec
xchg
orb
outsb
repz
clc
movsb
data16
jmp
mov
push
push
dec
fadds
push
fdivrl
leave
pop
pushl
mov
add
std
test
rcl
sbb
ja
jbe
ja
mov
repz
insl
insb
loopne
call
shl
or
cmpl
lds
mov
int3
iret
pop
add
inc
xchg
dec
decl
pop
mov
or
pop
loopne
pop
add
jo
mov
mov
inc
aaa
xchg
push
scas
xchg
into
insl
pop
mov
jb
aaa
add
xchg
movsb
add
call
cmc
inc
or
xor
inc
push
call
nop
add
sbb
xor
add
inc
movsl
scas
ret
cs
movsb
or
adcl
sti
jg
xchg
jae
sub
notb
cmp
xchg
adc
pop
lock
jmp
mov
mov
cmc
dec
sub
jbe
mov
test
stc
add
jp
pop
adc
lock
lock
pop
bound
fidivrs
add
lcall
adc
dec
xchg
mov
addr16
dec
xchg
pop
dec
sub
mov
ror
jmp
clc
sbb
push
or
add
xor
stos
fs
fildll
xor
sbb
pusha
cmp
rorl
aas
repnz
decb
xlat
mov
push
mov
jmp
incl
jns
ds
sub
and
mov
push
lahf
loope
dec
in
pop
outsb
mov
dec
bound
mov
pusha
repz
cmp
addl
push
pop
popf
pop
scas
inc
jmp
in
loope
and
dec
adc
gs
push
jle
mov
aad
rorb
push
pop
ja
inc
cmp
add
jns
sub
push
es
sbb
ja
pop
cmp
push
outsb
rcll
sbb
adc
add
mov
fs
decl
or
loopne
dec
lahf
ret
pop
lods
push
int3
inc
jmp
inc
dec
push
cmp
out
inc
jmp
push
fimull
test
arpl
and
flds
cwtl
push
incl
sub
leave
xlat
cmpsb
clc
out
mov
mov
adc
dec
jp
pop
mov
sar
ljmp
stos
lods
dec
push
hlt
jmp
cmpsl
mov
cmp
and
push
and
arpl
out
scas
ljmp
mov
test
xchg
clc
sarl
adc
mov
push
lcall
jmp
nop
push
lods
inc
jle
stc
dec
add
iret
sarl
add
fwait
insb
pop
incl
push
cmp
ret
pop
xor
mov
xchg
bound
rorl
jmp
fidivrl
or
mov
push
sub
ss
lcall
leave
subl
pushf
test
push
out
lock
mov
sub
je
std
je
jb
andb
inc
sahf
outsb
inc
clc
fistpll
jo
push
jns
filds
orl
pop
sbb
call
rolb
addr16
insl
and
pop
push
sbb
ljmp
cmc
cwtl
in
mov
dec
sbb
sbb
xchg
mov
and
pop
jmp
cmp
jbe
xchg
ds
pop
jg
cltd
cmp
or
mov
dec
pop
stc
test
in
movb
cmc
sub
pushf
or
repz
push
testb
add
inc
add
inc
and
cmp
and
faddl
jne
inc
xchg
xchg
and
xchg
rolb
mov
xor
sbb
mov
xchg
jne
ret
pop
dec
outsl
mov
mov
inc
movsl
dec
and
popa
mov
xchg
mov
fsubs
jmp
decl
ficoms
lea
add
in
add
mov
fldl2t
call
and
loop
cmp
fdivrs
lret
jno
jge,pn
mov
out
lcall
xchg
outsl
fists
dec
mov
cmpsb
shll
test
sbb
dec
push
mov
adcb
cltd
mov
dec
xchg
sahf
mov
pop
or
mov
je
and
pusha
xor
stc
sahf
xor
jmp
add
push
into
jnp
pop
divb
pop
cltd
pop
adc
add
jmp
dec
push
cli
movsb
pop
je
out
jecxz
jg
lods
cltd
ljmp
pop
pushl
dec
cmpsb
mov
mov
sarl
frstor
aas
mov
mov
add
dec
xchg
mov
jb
mov
push
xor
decl
add
mov
cmpl
sbbl
jg
push
stos
add
mov
jl
cs
add
enter
leave
out
stos
mov
aas
test
dec
xchg
sbb
jl
pop
mov
or
psubsb
stos
jg
cld
popf
or
fstps
push
push
test
push
incl
lcall
dec
jnp
lea
inc
xlat
xor
mov
test
jge
es
cs
inc
mov
jbe
dec
dec
inc
out
movsl
push
lods
enter
xchg
aaa
fdivrl
mov
fildll
cmp
adc
and
xchg
xor
adc
sbb
sub
inc
inc
mov
mov
mov
fistps
std
push
inc
aad
sub
push
mov
subl
fidivrl
fiaddl
xor
or
jno
call
popa
lahf
pushl
mov
jnp
test
dec
xor
fmull
xchg
shll
idivb
stos
mov
cmp
lea
out
cld
jg
stos
mov
in
xor
daa
int
adc
push
jbe
call
xor
das
pop
push
sbb
sbb
scas
test
jmp
clc
sti
fisubs
cmp
jbe
xchg
mov
ret
jb
inc
push
lock
mov
fcos
inc
aas
stos
loop
fs
aad
or
or
pop
adc
xchg
pop
rcll
call
push
add
mov
dec
add
ss
pop
adc
cmp
gs
scas
loope
ljmp
loope
add
lret
sar
lret
sub
fwait
inc
nop
mov
mov
dec
hlt
mov
fiadds
dec
mov
clc
mov
or
mov
push
cmpsl
xchg
in
cmpsl
pushf
jnp
dec
out
clc
jmp
xlat
movb
je
stos
adc
addr16
push
fwait
das
hlt
test
in
decl
add
stos
jne
inc
and
les
aad
cmc
mov
jbe
in
jo
jmp
fcmove
std
sbb
jns
shr
cmc
mov
in
scas
je
adc
lcall
push
movb
push
popa
insb
rol
addl
test
test
hlt
ficomps
push
push
inc
cwtl
je
mov
dec
ljmp
inc
cld
call
mov
cwtl
adc
jg
popf
add
aaa
lods
aad
cmp
cmp
aaa
test
jb
push
imul
call
jo
cltd
jg
or
sti
cmc
push
aas
aas
nop
scas
sbb
adc
inc
push
mov
mov
push
loop
mov
lock
add
ds
xchg
sbbl
test
xchg
pop
lds
xchg
pushl
ljmp
mov
movsb
aam
fmull
push
jle
jecxz
clc
jle
inc
orl
push
ja
xchg
fisttpl
adc
xchg
and
cli
fcomps
ljmp
test
jmp
xchg
mov
fisttpll
loope
lds
adc
gs
daa
mov
pushl
xchg
lea
jl
outsb
xorb
shr
fwait
xor
scas
cmpsl
stc
sub
jmp
pop
adc
rcr
enter
jnp
mul
sub
test
mov
adcl
ljmp
inc
mov
out
test
jae
mov
sub
add
hlt
cmpsb
out
xor
gs
or
clc
decl
int3
sub
jae
popa
pusha
mov
inc
loope
jmp
xor
pop
or
scas
and
popa
shl
xor
or
add
lcall
push
jp
sarb
xor
or
incl
xchg
fisttpl
sub
loop
mov
lods
lret
add
or
nop
pop
ljmp
leave
sub
cmp
xlat
sbb
inc
aam
add
fcmovbe
cmp
mov
pop
mov
ja
scas
insb
cmpsb
sbb
icebp
pop
jb
ljmp
add
imul
mov
xchg
imul
xor
hlt
cmp
pop
cmp
aaa
xor
xor
pop
sub
jmp
in
lcall
insb
movsb
xchg
xchg
cmp
ljmp
mov
and
adc
ror
jae
jle
addr16
je
outsb
sub
adc
jb
and
ljmp
adc
arpl
sbb
movsb
push
in
dec
cmp
mov
lds
jg
pushl
pop
pop
cmpsb
mov
mov
lahf
lcall
dec
lcall
or
movsl
loopne
cmp
das
fcompl
fisubrs
mull
dec
inc
jecxz
xor
xor
loope
xchg
ds
jno
inc
out
cmp
scas
pop
and
call
xchg
and
dec
adc
cmp
push
lret
sub
xchg
cltd
inc
cmp
imul
jno
call
sub
icebp
leave
imul
and
adc
call
inc
movsb
dec
repz
add
flds
mov
sbb
lods
sbb
bound
cwtl
mov
lcall
dec
xchg
mov
fnstsw
or
and
inc
inc
loopne
jnp
pusha
inc
and
lea
xor
sub
sbb
aas
mov
or
lock
inc
in
flds
push
std
jmp
enter
into
dec
ja
lods
out
mov
lcall
lret
nop
push
and
loop
push
xchg
lret
insb
cltd
test
and
pushl
cwtl
mov
outsb
jge
xchg
xchg
lret
dec
popf
inc
sar
mov
xor
mov
jmp
std
fildll
push
daa
xor
inc
dec
mov
add
lods
dec
fdivrp
fucompp
push
jne
adc
scas
add
jecxz
outsb
and
inc
lods
push
aam
outsb
mov
leave
pop
xor
mov
cmp
xchg
cmp
pop
cmp
fsubrl
xchg
pop
mov
incl
adcl
cmp
shrb
imull
cltd
ljmp
cmp
incl
push
mov
xchg
xor
or
adc
push
push
call
xchg
jnp
mov
jmp
jnp
into
pop
dec
call
jbe
push
imul
out
adc
fidivl
dec
pop
pop
test
aam
xchg
mov
dec
jne
sahf
xchg
es
xor
push
or
cli
pop
insl
das
test
clc
inc
fidivrl
std
push
push
cmp
mov
xor
notl
insl
ljmp
lahf
xchg
jge
idivl
inc
adc
stos
cmp
mov
adc
imul
dec
push
mov
imul
push
fsubrs
ljmp
push
adc
out
clc
repz
fcompl
leave
mov
lret
push
xor
jmp
aaa
jns
sub
leave
push
outsl
movsb
cs
xor
pop
clc
jnp
dec
add
inc
mov
bound
or
jmp
xchg
das
xor
loopne
add
push
sbb
push
shlb
lcall
mov
pop
aam
stc
popf
jno
or
xchg
xchg
test
add
cli
dec
ljmp
stc
aad
sbb
lret
mov
int3
repz
lcall
pop
cli
fcompl
scas
frstpm(287
cmp
loope
adc
inc
pop
cs
repz
inc
sub
and
call
dec
loop
clc
or
shlb
and
lret
sbb
or
int
call
pushf
and
or
jmp
add
or
sub
mov
push
cmp
mov
jbe
and
mov
add
and
push
ljmp
mov
or
into
movsb
cmpsl
popa
shr
in
pop
stos
orb
addl
cmpsb
xchg
pushl
std
fists
fimull
test
cmp
push
or
inc
out
loope
mov
call
outsl
sbb
movsl
jne
push
test
sbb
imul
test
int3
ret
mov
mov
incl
lods
mov
mov
aas
inc
jae
or
inc
imul
mov
adc
xor
cwtl
mov
jmp
xchg
sub
ljmp
and
xchg
xchg
pop
push
dec
xorl
mov
push
jne
sbbl
xchg
jp
mov
cmpsl
mov
add
lods
repz
call
or
push
pop
decl
cs
jno
jno
sahf
rcll
lret
mov
in
pop
inc
mov
mov
lcall
je
push
cltd
and
rolb
stc
les
push
scas
movsb
scas
out
add
dec
dec
sub
and
sahf
in
rcll
decl
sbb
push
mov
mov
cmp
cmp
or
dec
xlat
incl
ljmp
shr
mov
mov
je
pop
ret
sub
decl
fwait
addl
lds
imul
popf
mov
mov
fcomps
pop
out
cli
jge
dec
mov
adc
shll
xor
pop
lods
aaa
repz
sahf
aaa
jg
loopne
aad
lahf
nop
fs
sbb
dec
inc
mov
sbb
cli
pushl
push
mov
adcl
or
idivl
mov
jmp
lcall
sarb
sahf
dec
adc
fidivrs
std
ja
outsl
push
test
add
popa
jns
incl
pop
out
cmpl
mov
push
loop
outsl
aad
stc
leave
pop
out
cmpsb
xor
lods
lock
mov
in
cmc
push
stos
je
outsl
and
mov
daa
loope
fldt
dec
incl
mov
mov
insb
push
push
mov
cmp
xchg
dec
cmp
rorl
pop
movsb
cld
add
clc
fwait
sahf
cmp
ljmp
pop
jo
add
jecxz
adc
pop
or
stos
mov
mov
repz
mov
jb
and
rclb
pop
cwtl
imull
bound
std
incl
pop
mov
mov
add
arpl
jne
stos
in
lret
inc
xchg
push
fwait
mov
das
cmp
lock
dec
push
jno
cli
jge
xor
sbb
cmp
push
pop
push
test
popf
outsl
mov
fdivrp
fsubr
pusha
push
mov
dec
cmp
cwtl
xchg
sub
mov
fwait
pushf
ret
scas
add
push
mov
pushl
ret
add
andb
xchg
adc
movsl
ret
mov
mov
mov
xor
sbb
outsb
test
imul
sbbb
test
or
jmp
call
sbb
ljmp
mov
pop
loope
push
inc
cwtl
mov
rorl
stos
or
movsl
pop
or
hlt
mov
adc
inc
out
mov
xchg
jmp
std
sbb
mov
mov
push
inc
test
and
mov
sbb
sub
call
lods
repnz
push
andb
add
hlt
jl
rcrl
in
movsl
sbb
incl
cmc
sbb
or
jp
jmp
lcall
outsl
mov
out
push
dec
sbb
mov
pop
jnp
aas
roll
dec
int
xchg
incl
sub
xchg
jg
test
adc
push
hlt
add
dec
aaa
xor
outsl
lret
aad
call
mov
push
mov
add
push
mov
adc
repz
xchg
lret
dec
push
pop
sbb
in
je
xchg
mov
jb
popa
cmc
jmp
xchg
cltd
mov
sub
mov
push
test
jmp
testl
or
mov
stos
jae
xchg
inc
mov
sar
ljmp
push
ja
nop
jge
rolb
xchg
push
insl
test
rcrb
lret
orl
das
jl
push
shlb
movsl
fistl
mov
pop
outsb
inc
vfrczss
mov
push
icebp
ss
xor
xor
add
mov
jmp
mov
cld
pop
test
test
xchg
xchg
es
add
and
mov
enter
call
lock
cmp
shrl
add
mov
adc
push
add
jmp
jmp
push
push
daa
add
cmpsl
mov
shll
inc
lea
and
adc
dec
nop
fldl
or
insb
xor
test
jge
inc
cltd
in
jg
mov
xchg
daa
insb
mov
divl
push
jecxz
inc
mov
jne
inc
popa
inc
lock
call
pushl
mov
test
out
add
dec
jns
inc
dec
jp
cwtl
xor
decl
jmp
mov
sub
mov
mov
xchg
out
jne
or
ljmp
sbb
jne
push
mov
lock
ja
xchg
sbb
mov
dec
fwait
std
incl
testl
ljmp
cmp
clc
loop
call
lods
lcall
out
sub
push
pop
fadd
and
pop
repz
into
cs
pop
out
clc
call
xchg
js
addr16
or
iret
dec
pushf
pop
je
flds
out
out
jo
incl
xlat
stc
cmpsl
fs
js
push
bound
in
std
and
mov
aaa
imul
add
push
outsb
mul
xor
adc
mov
div
pop
std
and
adc
repnz
mov
jmp
hlt
rcrl
cmc
mov
xchg
and
and
ds
jg
or
ret
outsl
pop
push
aad
pop
add
test
inc
fisttps
call
std
adc
push
inc
notb
gs
dec
mov
sbb
imulb
pop
popf
add
sarb
popf
popf
out
sti
mov
xlat
sbb
adc
jbe
stc
sbb
out
cmp
fcoml
or
adc
jl
les
lret
cmp
cli
xlat
push
cmc
cmp
nop
fsubrl
inc
sti
xor
ljmp
iret
push
mov
push
xor
jae
add
jl
mov
call
clc
out
loope
call
mov
aam
or
rclb
mov
cmc
mov
in
mov
pop
push
pop
or
pop
or
gs
mov
inc
stc
cltd
insl
ljmp
cmpsb
fwait
sub
jno
mov
mov
mov
les
ljmp
mov
popa
pop
add
rolb
pop
pop
mov
lods
push
lock
cli
mov
sti
push
jg
hlt
mov
mov
cmpsb
jno
mov
sti
jmp
push
mov
je
mov
mov
loopne
in
sub
push
sahf
insb
decl
xor
lea
int
adc
cmp
in
movsb
pop
test
xor
or
jmp
pushf
inc
sbb
sub
or
dec
cmp
cltd
ret
or
xor
test
cwtl
or
decl
sub
xchg
cld
xchg
imul
inc
test
call
jb
push
imul
adc
push
loopne
mov
lea
iret
jmp
jmp
leave
dec
pop
or
aas
or
jecxz
in
int3
lods
sub
decl
cmp
pop
xrelease
movb
test
aaa
sysret
out
sub
push
mov
pushf
dec
xor
pop
insl
xor
push
movsb
add
and
test
cmp
dec
jbe
out
push
sahf
or
es
fldl
jns
jo
sti
or
add
incl
lcall
pushf
mov
fs
ja
and
pushl
fptan
xchg
out
add
xlat
xchg
int3
addl
std
dec
mov
jmp
add
outsl
adc
into
jb
inc
dec
dec
add
fdivrs
pushl
add
sub
push
fadd
mov
mov
mov
pop
dec
mov
or
xchg
rcrl
jmp
mov
xor
rol
cmp
push
cwtl
scas
mov
aam
xchg
sbb
decl
cmp
and
jbe
sub
mov
pop
loope
popa
into
pop
pushf
jge
and
adc
xor
decl
pop
add
cltd
ss
lods
fcoms
pop
xorb
mov
int
jmp
and
ret
fs
movsl
dec
and
mov
add
or
fdivrp
pushl
inc
mov
dec
imul
jmp
std
mov
add
cmp
cmp
pop
gs
outsb
cmp
or
insb
mov
jae
fstpl
dec
daa
out
addb
add
ret
test
das
mov
cmp
cmp
jns
dec
sbb
cmp
adc
decl
ret
daa
ss
xchg
lret
icebp
cmp
sahf
stos
mov
mov
call
aaa
jne
sbb
dec
sub
lcall
xchg
movb
cmp
xchg
ljmp
push
out
push
icebp
aas
sub
pop
add
sbb
insb
sbb
sub
jmp
sub
sub
or
xchg
pop
xchg
inc
cwtl
adc
les
sub
add
call
push
cli
sbb
outsl
lcall
in
out
mov
jmp
cmpsb
sub
push
notb
mov
mov
in
cs
fcmovb
int
aas
mov
push
mov
jns
mov
jnp
inc
ds
mov
scas
xchg
inc
mov
push
cmp
sub
and
shrl
fs
les
incl
cmpsl
sbb
sub
cmpsl
dec
rclb
repnz
ljmp
in
dec
push
adc
push
and
std
and
adc
out
test
fs
dec
out
call
jb
inc
inc
or
dec
ffree
fwait
orl
xorb
jmp
mov
pcmpgtd
push
pop
bound
jmp
outsl
mov
addr16
sbb
pop
xchg
mov
jg
ret
ljmp
decl
aam
jle
shrb
mov
subb
mov
lahf
fisttpll
jge
subb
mov
pushl
pop
sub
or
inc
adc
test
or
adc
stos
push
dec
cmpsb
ljmp
add
cltd
mov
dec
dec
mov
rcr
or
mov
incl
inc
arpl
cwtl
pop
jbe
lods
dec
xor
movsl
mov
je
pop
mov
enter
ljmp
lcall
mov
add
cmp
mov
ret
popa
jae
xchg
pop
fstp
push
inc
cmpsl
push
mov
pop
xor
sarb
les
mov
cmp
inc
adc
decl
and
sbb
loop
test
add
inc
sbb
push
jo
call
pop
xchg
pop
pop
in
mov
call
mov
pop
iret
daa
test
dec
sbb
add
scas
loop
imul
sbb
jle
mov
mov
mov
sub
les
arpl
sbb
mov
mov
enter
je
stos
movsl
leave
cmp
fcoml
and
xchg
sub
insb
inc
outsb
xchg
cmpsb
jo
lcall
cmpsl
das
mov
pop
movq
fcomip
lcall
enter
mov
adc
pop
jl
sbb
orl
lcall
ret
xchg
cmpsl
lcall
adc
jo
mov
jl
inc
decl
icebp
cmp
mov
mov
dec
ficoms
dec
xchg
or
cld
inc
in
icebp
push
xor
push
mov
sub
mov
adc
fidivrl
scas
ret
fistps
push
ljmp
dec
jo
xlat
jle
pop
testb
adc
add
inc
and
or
imul
scas
and
mov
adc
sub
add
ret
inc
xor
ljmp
adc
fistpl
mov
push
bound
jecxz
ret
decl
xchg
mov
dec
add
mov
inc
jg
imul
sub
or
std
sbb
xchg
xor
cmc
stos
aas
jmp
pushf
repnz
cmpsl
sbb
inc
jecxz
outsl
jl
xor
and
or
insl
mov
add
incl
xchg
ja
inc
ss
popf
dec
lea
repz
adc
push
xchg
aaa
cmp
xchg
test
cs
loopne
jo
jo
in
fisttpll
mov
cmpsb
js
jno
loope
xchg
bound
in
fistpll
cs
xor
push
push
sarl
mov
sbb
jmp
data16
pushl
cld
insl
xchg
sahf
js
lahf
sbbb
mov
aas
and
add
pop
cmc
jmp
add
cli
es
xor
outsb
push
xor
fdivr
ja
pushl
int3
cmp
inc
xor
lret
cmpsb
movzbl
sarl
mov
test
mov
jmp
out
mov
ss
and
stc
mov
iret
bound
in
mov
inc
jmp
jmp
sbb
icebp
push
lea
mov
aad
popa
mov
lcall
testl
pusha
int
ss
mov
pop
into
xchg
and
push
loopne
cmpsb
jo
test
or
les
and
test
and
dec
inc
mov
fwait
adc
mov
pop
mov
add
inc
ret
sub
icebp
outsb
cli
pop
mov
and
cli
pop
xlat
push
dec
call
dec
shlb
ja
xor
mov
dec
out
decl
testb
add
mov
insb
mov
repz
mov
cmpsl
lahf
cmp
incl
mov
cmp
xor
dec
mov
les
test
and
es
and
icebp
sar
jg
dec
sbb
push
lods
push
in
xor
cmc
aad
mov
jae
les
jle
decl
or
add
xor
bound
xchg
lret
mov
fdivr
test
sub
aaa
std
rcl
jl
lods
fadds
mov
repz
leave
pop
arpl
out
inc
add
jge
push
adc
lret
aaa
cmp
mov
stc
xchg
stc
cwtl
mov
xchg
cmp
sub
out
fdivs
cmp
incb
shlb
or
stos
fs
ljmp
mov
pop
pop
out
sahf
xor
stc
stc
fistps
shl
lahf
cmp
shr
call
add
stc
inc
cltd
sub
sbb
mov
mov
mov
mov
out
xor
ret
fsubrl
adc
roll
mov
pop
mov
push
movsb
cmpsl
jecxz
xor
sti
mov
es
incl
nop
jbe
pop
xchg
daa
inc
jne
in
lcall
and
lret
lods
mov
dec
pop
lods
insb
gs
loop
loopne
les
xor
jecxz
sbb
mov
add
pop
sbb
sbb
sahf
inc
pushl
cmp
ret
movsb
fdivrl
pop
add
addr16
fbld
adc
jno
mov
ljmp
pop
scas
cmp
xorl
fisttpl
movb
in
or
test
xchg
fcomps
mov
push
mov
lret
lea
fcoms
popf
pop
xor
fstpl
jl
mov
xor
mov
pop
test
mov
push
mov
mov
incl
call
idivl
mov
pop
mov
cltd
bnd
inc
fs
push
jno
mov
jg
bound
cmp
dec
aad
mov
stos
push
xchg
cmc
cltd
cmp
lcall
inc
and
inc
les
sub
jl
inc
lock
incl
notl
lret
xchg
ds
pop
in
mov
mov
mov
jg
xchg
scas
xor
adc
sbb
ss
dec
sub
shll
out
xchg
bound
sbb
push
lcall
mov
pushf
xor
call
das
mov
xchg
pop
inc
fwait
inc
dec
fidivl
pop
jl
add
adc
mov
decl
and
stos
xchg
inc
subl
xchg
subl
decl
push
inc
ret
mov
sbb
mov
sahf
add
movsl
test
sti
lds
data16
xlat
sbb
ljmp
test
in
pusha
fsubrs
add
add
sti
sarb
xor
lret
lea
bound
test
test
je
mov
int3
sti
xor
rclb
imul
pushl
mov
sbb
fisubl
das
and
cmp
inc
mov
cmc
ljmp
xor
pop
addl
aam
push
pop
add
dec
pop
push
or
mov
dec
xlat
daa
movsl
push
cs
mov
fdivr
decl
mov
cmp
andb
ss
xchg
sub
decl
in
xchg
test
loop
jb
mov
cs
mov
jg
jmp
call
scas
adc
jns
and
jmp
mov
cmpsb
xor
bound
das
mov
mov
xor
xchg
test
decb
or
jb
in
loop
imul
incl
xor
add
pop
mov
mov
sti
mov
outsl
sbb
sub
jmp
fidivs
mov
aam
aaa
xchg
xor
jnp
cmp
leave
pop
mov
incl
or
pop
inc
fcompl
hlt
lret
imul
mov
es
add
pushl
dec
lahf
movsb
fists
stc
xchg
lea
mov
add
test
in
xchg
cmp
mov
mov
cmp
in
and
ljmp
sbb
mov
popa
push
xchg
shrb
ja
mov
cld
xor
int
pop
cmc
decl
jge
sbb
cwtl
adc
dec
dec
cmp
cmpsl
mov
cltd
pop
adc
xor
movsb
lret
cmpsb
mov
imul
cmc
clc
popa
pushl
kmovw
in
dec
add
dec
gs
shr
jmp
sarb
hlt
add
sti
mov
pop
sbb
je
outsb
out
add
pushl
int3
mov
in
cmp
das
enter
ret
jge
pop
lods
xor
aad
pop
ret
jmp
mov
stos
std
stos
lock
jge
or
fstpt
or
xchg
popf
jae
inc
pop
ljmp
orl
xchg
adc
mov
aam
fwait
mov
scas
dec
mov
dec
add
int3
or
fs
mov
jge
lcall
jno
mov
sub
push
cmc
inc
jmp
xor
fimull
decl
ljmp
outsl
dec
xor
mov
int
cmp
inc
push
clc
movsl
pushf
pop
test
scas
clc
sbb
push
cmp
iret
cltd
into
js
fdivl
pop
jns
nop
jg
jg
roll
fisttpl
mov
enter
ljmp
add
dec
jmp
popf
cmpsb
cmpsb
call
jbe
hlt
repnz
inc
push
pop
jmp
divl
ret
adc
ret
cmp
adc
test
movsl
aad
or
push
ljmp
scas
sti
rcl
mov
mov
ss
ret
insl
xchg
inc
cmp
out
rorl
decl
mov
mov
and
adc
sub
jg
pop
mov
lret
rcrl
outsl
pop
xlat
test
jg
inc
mov
pusha
rcrb
ss
out
frstor
scas
push
xchg
fwait
stos
sarb
dec
push
lods
imul
jo
ljmp
xchg
ja
out
xchg
sub
add
scas
mov
mov
jmp
ret
xchg
das
mov
das
sub
fisttps
nop
inc
repz
rclb
je
adc
jo
push
mov
std
inc
addr16
cwtl
mov
cmp
mov
mov
nop
push
or
into
dec
in
add
pusha
add
lcall
test
lea
cwtl
addr16
adc
xchg
pushf
hlt
fcmovb
xchg
adc
xchg
ljmp
lods
xor
clc
dec
xchg
arpl
push
mov
or
out
in
xchg
lahf
insl
iret
popa
mov
cld
lcall
push
not
je
or
xor
mov
clc
aaa
and
pop
jbe
ror
inc
dec
xor
popa
add
loop
lea
fcmovb
loop
add
jno
lcall
xor
xchg
push
jmp
lcall
pushf
mov
cli
movsb
mov
and
and
nop
fwait
fiaddl
dec
xorl
pop
mov
incl
and
xor
lcall
decl
mov
jae
mov
scas
cmpsl
push
xchg
xchg
in
adc
mov
jmp
iret
jno
xor
cmc
data16
icebp
inc
xchg
push
add
pop
jmp
adc
fnsave
push
into
pop
jo
mov
test
hlt
jg
aad
sti
cs
pop
sbb
ljmp
xor
cmpb
mov
loop
cmc
bound
mov
xchg
mov
sbbb
mov
lret
mov
dec
ljmp
adc
mov
icebp
mov
jmp
out
push
cmpsl
sub
add
lcall
jge
paddw
or
icebp
or
ds
cmp
mov
icebp
mov
sbb
sahf
pop
sbb
push
fwait
push
shll
nop
inc
orl
lcall
pop
inc
push
xchg
out
push
xor
push
scas
push
lcall
cmc
xchg
push
mov
dec
fildll
add
push
inc
enter
outsb
pop
scas
iret
or
jmp
mov
iret
mov
sub
scas
mull
push
or
or
movsl
push
outsl
inc
mov
incl
cld
out
mov
imul
sbb
lds
or
jmp
sub
mov
rolb
push
mov
cmp
sub
inc
pop
bnd
sbb
aad
imul
dec
pop
pusha
loop
dec
pushf
and
sbb
xor
jno
data16
sarb
incl
sub
imul
ljmp
and
mov
jp
decl
jo
insl
das
mov
into
lods
push
nopl
std
jmp
loope
xlat
pop
jg
subl
jmp
sbb
scas
pop
mov
repz
mov
fildll
dec
mov
inc
leave
mov
dec
cmc
fs
fadds
scas
add
pop
cmp
fcmovb
popf
push
loopne
adc
adc
and
gs
sub
ss
filds
fcomip
jmp
mov
xor
xorb
inc
shlb
push
testb
movsl
call
cmp
push
lock
mov
jmp
les
mov
pop
or
test
sbbb
test
fwait
incb
lods
in
mov
in
push
lret
fiadds
jg,pt
or
cmpsb
xchg
inc
inc
dec
sub
fs
ss
pushf
lods
xchg
in
sub
cmp
or
sub
lcall
ficoms
insb
mov
popf
mov
mov
popa
mov
sar
fisttps
cld
lahf
push
or
in
or
decb
in
mov
stc
cmpsl
pop
rolb
addl
mov
insl
outsb
ss
fisubl
jl
cmpsl
call
dec
dec
rcrl
push
inc
icebp
pop
fisubrl
adc
pop
int3
gs
incl
and
mov
cmp
andl
or
mov
das
ds
and
pop
cmp
scas
arpl
test
mov
stc
mov
pop
dec
pop
jge
xchg
mov
insl
icebp
outsl
and
decl
out
outsb
xchg
lock
cs
dec
bound
decl
stos
lret
ljmp
imul
popa
lret
loope
lods
dec
dec
fidivrs
pop
jnp
cmp
and
inc
insl
pushf
mov
sbb
jmp
cmpsb
je
push
jle
cmpb
jmp
xchg
shrl
dec
or
ret
mov
in
push
mov
lcall
aaa
dec
inc
xchg
xor
sti
in
gs
pop
xor
jae
hlt
mov
decl
push
stos
out
and
adc
sbb
push
mov
inc
dec
add
jecxz
ljmp
popa
and
xor
mov
fistps
mov
incl
out
sbb
dec
xor
aad
dec
daa
in
dec
add
stos
xchg
call
mov
pop
and
iret
fisubs
incl
mov
jnp
sub
icebp
jcxz
adc
movsl
or
rcr
adc
and
cmc
pushl
xlat
imul
jmp
lret
jecxz
cmp
cmp
sbb
mov
das
loope
outsb
mov
or
adc
jae
push
ror
lcall
jmp
jg
flds
into
sbb
fcmovnb
pop
dec
aam
xchg
mov
cmp
adc
add
and
icebp
fwait
aas
jmp
call
les
incl
orb
adcl
enter
mov
pop
repz
push
scas
xchg
cmpsb
xor
decl
or
subl
dec
sub
mov
push
shlb
movsb
mov
rolb
ljmp
jnp
inc
inc
mov
int
cltd
mov
ljmp
jbe
lcall
jl
es
jg
adc
mul
and
rcr
push
push
out
inc
lods
pop
decl
pop
push
pop
cwtl
jle
out
and
adc
ljmp
rol
int
lock
idivb
mov
loop
xlat
xchg
and
inc
or
stos
push
decl
add
test
repnz
and
cmpsl
inc
ljmp
mov
or
sbb
rcr
jle
das
cwtl
dec
and
faddp
xchg
pushl
cmp
es
rcr
pop
mov
cmp
scas
je
pop
pop
jnp
jne
sub
outsb
jb
cmp
inc
sub
jle
lods
rol
and
add
inc
mov
fcmove
das
addl
adc
cltd
test
cmp
int
jg
enter
call
or
inc
and
adc
mov
ja
pop
xchg
mov
xchg
push
repz
mov
cmp
inc
adc
test
jg
push
je
repz
insl
push
or
and
decl
add
inc
fcomp
cmpsb
rcr
inc
loopne
inc
dec
imul
cmpsl
aaa
icebp
push
mov
mov
sbb
xlat
or
xchg
jecxz
pop
or
aam
xchg
es
sar
dec
in
gs
adcb
pop
or
sbb
rclb
push
pop
mov
lods
scas
xchg
mov
cmc
nop
or
mov
jbe
rorb
xchg
rorb
and
jl
mov
sbb
and
test
faddl
jge
inc
mov
std
sub
push
in
push
das
popa
sbb
or
jmp
sbb
mov
lods
lret
xor
pop
ljmp
rorb
pop
das
push
xor
mov
sbb
out
lret
cli
es
pushl
mov
push
sub
gs
enter
xor
and
enter
xchg
imul
pushl
scas
push
jecxz
mov
xor
in
int3
clc
mov
repnz
mov
lcall
loope
xchg
pushf
mov
jbe
dec
push
pop
aas
mov
mov
xchg
mov
jae
jge
ljmp
pmaxsw
sbb
dec
xlat
or
mov
dec
mov
jl
adc
mov
inc
mov
les
mov
in
sbb
shll
push
mov
jg
imul
cmp
jg
dec
negl
xchg
xor
lret
pop
xchg
mov
inc
frstor
aaa
jo
jb
cmp
inc
push
fstl
add
mov
mov
mov
subl
leave
lock
aaa
add
push
jo
mov
lahf
cmpsb
imull
sbb
sub
xchg
push
aam
incl
mov
pop
negl
out
ljmp
xor
aam
arpl
ret
pushl
mov
mov
add
push
push
outsb
xor
and
outsb
mov
loop
jg
cmp
adc
mov
movsl
clc
fidivrs
push
sub
inc
cmp
sub
sub
xchg
sub
lods
jecxz
sbb
dec
mov
pop
fstps
mov
mov
gs
xlat
xor
push
mov
out
gs
out
mov
xchg
cmp
dec
lods
sub
insl
jmp
je
fs
push
and
xor
dec
and
aam
adc
filds
cmp
imul
pop
add
mov
decl
lock
push
loop
inc
cmp
cld
daa
inc
subb
ja
fmuls
and
jmp
xor
dec
lock
mov
xor
aas
sarl
dec
mov
iret
jb
sub
lret
outsl
cli
decl
sbb
imulb
xor
jle
mov
push
inc
nop
xlat
gs
pushl
mov
ljmp
adc
inc
adc
int
ret
lahf
loop
imul
sub
lret
mov
and
lock
das
pop
mov
xor
lods
fucomi
clc
incl
jo
xorb
sti
insl
mov
push
xchg
xchg
cltd
es
mov
dec
arpl
decl
sbb
fdivrl
sbb
ja
sub
pop
stos
xchg
xor
jbe
and
call
into
aad
icebp
cmpb
inc
fidivrs
push
subb
adc
push
clc
inc
mov
and
xchg
push
mov
inc
sbb
iret
lock
push
test
lcall
jns
mov
lret
jp
fwait
es
icebp
dec
xacquire
mov
cmp
sti
mov
clc
ljmp
or
in
xchg
popa
int3
cmp
cmp
ljmp
jbe
or
dec
iret
or
xor
cs
or
xchg
mov
or
add
xor
decl
outsl
out
xchg
int
fldcw
mul
push
sub
lcall
jmp
subb
orb
lcall
imull
mov
adc
incl
jae
fcoml
call
dec
scas
sbb
mov
add
inc
mov
lods
int
xor
mov
leave
and
cld
scas
sbb
lock
mov
mov
sub
or
cmp
rcrl
lret
fildll
out
dec
cmp
fcomps
or
leave
add
ds
push
pop
mov
lret
cmp
ljmp
ja
dec
jno
push
aaa
pop
mov
out
fucomip
push
xchg
dec
pop
ficoms
mov
mov
inc
inc
cmp
push
adc
jl
mov
ljmp
test
das
sarl
cmc
aam
xor
mov
push
mov
pop
std
pushl
fisttpll
aam
and
adc
inc
rcrl
jp
or
push
xchg
pop
call
cld
pop
inc
cmpsb
push
mov
rorl
pushl
inc
sub
cmp
and
pop
mov
clc
add
pop
cld
cmpsb
cmp
movsb
lcall
xor
push
dec
dec
pusha
jge
mov
mov
enter
loop
incl
xchg
sbb
dec
test
les
in
repz
inc
aas
push
prefetch
ljmp
or
js
or
int
sub
dec
call
mov
mov
xchg
sti
pop
pop
ljmp
mov
ret
decl
ret
mov
ljmp
lret
push
outsb
shll
cmp
mov
cld
dec
adc
dec
push
dec
pop
inc
divl
push
xchg
rcl
addr16
dec
or
jae
mov
iret
sub
outsl
push
mov
hlt
sub
and
je
mov
mov
out
pop
push
sbb
call
addb
mov
jp
inc
cltd
fstpt
push
dec
test
lea
jg
decl
cli
pop
sbb
clc
movsb
adc
xchg
das
pop
inc
out
data16
jle
xchg
decl
cli
jle
dec
mov
aam
push
fcmovnbe
dec
aas
outsl
popf
fstps
jne
movb
cld
into
sti
mov
sub
js
adc
push
ret
adc
or
jns
outsb
push
mulb
inc
cld
sbb
rcrb
dec
and
lock
repnz
mov
ret
push
mov
lcall
jmp
jb
mov
stc
mov
fildll
lcall
mov
rcll
fdecstp
xlat
mov
inc
aad
js
pop
loopne
ljmp
ret
add
ror
xchg
sahf
xor
sub
lret
rcrb
stc
pop
in
lock
pushl
je
mov
and
or
shlb
mov
xchg
fidivs
pop
daa
inc
scas
stos
jmp
clc
pushf
les
mov
mov
sub
outsl
cs
decl
cmpsb
add
jbe
cmpsl
mov
push
lret
fwait
les
or
cmp
mov
aas
arpl
dec
adc
add
mov
nop
jb
fstl
push
xchg
incl
and
daa
js
mov
adc
dec
or
stos
sub
mov
or
je
lcall
jnp
dec
dec
push
addb
imul
mov
aam
call
jmp
sahf
vunpckhps
gs
fcompl
xlat
dec
push
shrb
in
add
dec
lcall
sti
and
jne
push
mov
xchg
push
cmp
je
and
mov
out
loop
mov
xchg
negb
mov
or
push
in
jl
cmpsl
shlb
jp
ret
mov
inc
lods
add
dec
stos
mov
fmull
inc
sub
xor
xor
pop
sbb
cmp
dec
push
loop
sbb
or
fldln2
loopne
ds
hlt
adc
das
out
fisubrl
mov
push
and
inc
sbb
pop
cmp
xchg
cmp
incl
xchg
outsb
popf
mov
jbe
popa
mov
pop
jl
pushf
mov
pop
stos
push
or
jo
into
push
test
and
push
jnp
jb
push
lahf
es
decl
xchg
sbb
in
out
pusha
inc
mov
daa
divb
push
and
out
outsb
pushl
ljmp
arpl
inc
out
adc
xor
or
push
cmp
jno
lret
jbe
daa
adc
lahf
add
jns
jo
movsl
je
jle
out
mov
mov
push
xchg
or
in
das
mov
or
xor
jmp
mov
pushf
nop
rclb
jnp
leave
int3
cld
adc
cmpb
xchg
cmp
call
scas
adc
std
in
add
or
cmp
xchg
jmp
pop
decl
test
pop
mov
xchg
pop
enter
in
dec
enter
fcomps
subl
ljmp
scas
pop
xchg
lcall
lcall
scas
daa
push
dec
mov
daa
dec
jg
push
jne
adc
xor
ljmp
mov
outsl
pop
cmp
repz
mov
incl
mov
lds
sbb
aad
pop
pop
pusha
in
inc
jnp
xchg
insl
jge
aas
xor
add
pushl
shr
test
mov
cmp
ror
mov
inc
mov
hlt
push
clc
mov
shll
and
push
mov
popa
mov
xchg
dec
mov
mov
inc
data16
fstpt
cmp
dec
mov
ljmp
enter
in
std
out
mov
fstpt
adc
movl
jns
add
and
push
sbb
mov
pop
push
jae
ljmp
cmpsb
inc
iret
xor
adc
mov
inc
dec
lcall
cltd
sbb
add
imul
stos
cltd
jnp
das
pop
shlb
lret
insb
mov
fbld
mov
in
jp
xchg
cmc
pop
dec
adc
adc
clc
xchg
bound
loopne
mov
mov
stos
mov
sbb
pop
divps
and
mov
std
mov
nop
ljmp
jne
inc
lret
mov
imul
mov
push
dec
imul
ffree
cld
ljmp
out
mov
adc
inc
ds
or
or
ljmp
dec
cmp
outsb
jmp
mov
adc
inc
fdivs
daa
mov
rep
and
dec
jmp
add
sbb
xor
iret
xchg
pushl
je
adc
dec
cmp
and
clc
dec
pop
pop
jb
incl
cmpsl
scas
or
jge
and
inc
fistl
sbb
mov
lret
notb
pop
stos
sub
mov
and
inc
fisubs
adc
lds
lods
dec
iret
mov
dec
inc
out
inc
lock
scas
ds
es
inc
pop
mov
push
mov
or
mov
repz
mov
pop
bound
pavgb
inc
fstpl
imul
test
cmp
mov
jb
daa
ficomps
pop
push
mov
push
add
in
xchg
sbbl
cmp
popa
outsl
mov
dec
int3
int3
jno
dec
stos
push
mov
ljmp
xchg
sbb
negl
push
cmp
lods
jb
sbb
negl
lret
in
pop
rcrb
lcall
mov
iret
pushf
xlat
add
jl
dec
fnstenv
mov
xor
ljmp
icebp
sbb
mov
adc
xchg
gs
dec
daa
pop
push
ljmp
outsb
rcrl
mov
sahf
and
xchg
mov
int3
loope
into
cld
ljmp
sbb
xor
out
jne
popa
shrl
sbb
sbb
enter
scas
cli
pushl
aam
gs
adc
cmp
in
add
fs
sub
or
lcall
out
cli
jmp
repnz
inc
testl
popf
mov
fstl
jno
into
repnz
call
dec
imul
imul
ficomps
add
sahf
mov
loopne
jl
mov
mov
out
push
ficompl
pop
inc
or
cmp
mov
iret
aad
mov
pushl
push
cmc
cmpsl
cmp
rcl
lret
fisubl
push
aas
outsb
jbe
xchg
rcl
push
push
cltd
xor
cmp
dec
lahf
sub
aaa
scas
add
sub
jmp
std
decl
cmp
mov
lret
jp
sbb
mov
inc
jmp
push
into
inc
dec
loop
call
test
jmp
testl
mov
cwtl
and
fcos
lcall
iret
fidivl
add
add
xchg
mov
or
push
push
leave
mov
jl
mov
fldt
mov
jmp
inc
orb
or
nop
mov
xchg
jne
imul
mov
pop
xor
call
inc
stos
and
pop
xor
add
and
mov
cwtl
and
pusha
cmp
pushl
mov
jg
push
icebp
sub
mov
lcall
cmp
mov
cwtl
rcll
inc
push
fidivs
lret
test
mov
mov
je
insb
dec
adc
sub
call
or
pushl
inc
push
std
aad
xchg
xor
test
xchg
mov
vmwrite
std
jg
call
or
fcos
int
xchg
pop
sarl
ret
lods
ljmp
inc
mov
lcall
sub
sbb
out
mov
mov
cmpsl
mov
es
shrb
cmp
aas
sti
sbb
in
add
mov
repz
dec
cmpsb
idiv
mov
cmp
push
into
xor
mov
sub
mov
xchg
repz
in
dec
test
adc
inc
int
decl
jne
mov
lret
insl
shr
sub
mov
mov
push
cmp
sahf
inc
pop
in
in
mov
push
int
mov
decl
fsubr
ds
lcall
xchg
adc
pushf
mov
hlt
test
sub
jnp
and
jl
jno
mov
lods
rorl
dec
or
fistpl
mov
lcall
xchg
iret
cltd
ljmp
mov
mov
fwait
inc
test
decl
sbb
sub
popf
pop
mov
dec
add
lods
jns
int3
cs
sbb
dec
cltd
ret
cli
cmp
fwait
jno
jle
cli
ret
dec
inc
inc
mov
scas
mov
mov
test
mov
cmc
or
jg
in
push
adc
arpl
out
mov
test
out
sub
sub
sbb
cmc
lahf
push
outsb
pop
and
aad
xor
or
jge
rol
cmc
inc
cmp
xchg
dec
es
js
pop
cmp
mov
test
push
stos
jbe
ljmp
ds
xlat
jg
xor
in
loope
cmp
je
out
sar
call
push
bound
push
fdivs
add
xchg
leave
shlb
xchg
pop
xor
lock
ljmp
nop
pcmpgtd
pop
jns
mov
fcompl
shlb
add
mov
ljmp
sub
fsubrp
clc
cs
sahf
out
lahf
xor
stos
stc
mov
lahf
outsl
mov
or
movsb
in
xor
cltd
sbb
push
fwait
mov
ljmp
test
mov
cmp
cmp
fldenv
and
ljmp
mov
vmovd
inc
add
cmpsl
imul
es
adc
mov
movsl
xlat
sub
push
fst
or
mov
mov
xor
fstpt
push
cmp
inc
sarb
inc
mov
xchg
sub
mov
rclb
sbb
in
dec
xor
dec
sti
sbb
pushl
pop
or
sbb
adc
push
jne
dec
adc
dec
imull
inc
jge
push
dec
call
movsb
cmp
mov
inc
push
dec
sub
test
pop
addr16
cmp
push
roll
call
arpl
rcll
sahf
test
call
cmp
sub
and
sub
inc
sar
and
jns
lods
mov
leave
stos
jnp
inc
jle
insb
mov
ds
pop
jo
in
loopne
xor
push
rcll
mov
in
mov
call
je
dec
lret
or
hlt
xchg
loope
arpl
mov
ljmp
in
cwtl
mov
or
mov
pop
enter
sub
loopne
or
shl
std
pushf
push
sub
sub
mov
or
movsl
lret
shl
sbb
aas
mov
ficoms
sub
loop
sbb
icebp
lock
imul
mov
es
push
roll
mulb
xor
loope
and
mov
ds
imul
sbb
pop
arpl
ljmp
sbb
mov
lret
xor
add
cmp
cld
inc
push
xchg
mov
std
dec
aam
leave
clc
loopne
pop
lcall
jb
push
adc
mov
je
lret
cmpsl
push
push
xor
stos
arpl
lcall
or
arpl
sub
jp
shll
inc
ret
mov
add
das
add
call
vmulsd
pop
jmp
jle
lcall
sbb
mov
insb
mov
scas
mov
std
cwtl
jge
mov
xchg
mov
pushl
add
mov
fdivl
fs
push
or
push
mov
xchg
mov
push
fwait
rolb
pop
addr16
push
imul
dec
mov
mov
cmp
call
mov
xor
lcall
pop
mov
lret
jb
rorb
jbe
call
mov
enter
lret
mov
stos
test
fs
into
push
pop
sbb
and
scas
mov
icebp
unpckhps
lcall
popa
addb
bound
or
cmp
adc
sub
lcall
sahf
pop
jbe
adc
sbb
push
push
aaa
pop
sbb
bnd
mov
test
add
xor
push
pushl
add
test
aad
or
sidtl
mov
leave
dec
repnz
in
pop
ljmp
rep
and
or
add
aas
std
push
fwait
xor
adc
hlt
add
xchg
mov
sub
add
aam
repnz
rcrb
jae
scas
out
rep
fildl
or
push
popa
jg
call
jg
and
pop
cmp
sub
mov
and
jecxz
sub
pushl
lret
outsl
push
imul
out
out
mov
mov
iret
dec
fmuls
cwtl
popf
dec
stos
jp
decl
popf
or
test
pop
mov
aad
adc
aaa
dec
mov
rolb
jmp
dec
mov
int3
adc
or
jp
jp
mov
push
movsb
je
pop
and
call
sub
xchg
rorb
sbb
pushf
cmpsl
sbb
lret
pop
sahf
jns
ss
int
jmp
add
cwtl
cld
cmp
push
les
sub
sbb
cltd
mov
fisubs
rclb
out
aam
std
shlb
jmp
or
lock
subb
orl
sbb
push
sub
jae
lret
mov
push
cmp
and
addr16
pushl
call
jmp
int
cmp
push
jbe
std
push
call
rcrb
dec
xchg
xchg
fldcw
mov
fdivs
scas
and
dec
pushl
adcb
or
mov
mov
cs
mov
add
test
lret
push
cmp
xchg
test
sub
js
fbstp
test
push
push
lds
fldl
fmuls
js
jo
stos
in
sbb
jmp
mov
adc
or
in
ret
sub
gs
dec
cltd
adcb
cmpsb
cld
add
incl
add
inc
les
cli
adc
adc
shll
jg
aas
enter
xchg
unpckhps
jp
pusha
dec
addr16
adc
adc
fbld
xor
fldenv
add
incl
rclb
add
jge
lret
push
mov
pushf
jmp
push
mov
daa
xchg
ret
bound
jns
mov
jge
push
adc
jg
stos
jb
pop
scas
sub
mov
jmp
lret
jae
sbb
lcall
mov
arpl
push
loop
sub
scas
pmullw
pop
ret
cmp
xchg
mov
movsb
push
std
jmp
push
add
xchg
clc
sub
dec
push
adc
or
loop
loopne
ljmp
pop
icebp
and
mov
movsb
lods
int
cwtl
repz
call
push
stos
lods
xchg
scas
add
fisubrl
les
in
push
js
scas
sub
pop
pop
incl
and
out
sarl
jmp
repnz
add
test
lcall
jb
add
adc
mov
add
testb
jg
mov
mov
lea
mov
aam
inc
push
cs
add
rorb
rcrl
les
push
cld
inc
mov
pop
test
jnp
add
sbb
repnz
mov
mov
mov
push
enter
mov
movaps
sbb
dec
lret
int
scas
out
pusha
les
lods
arpl
scas
dec
or
sar
ljmp
scas
push
out
sub
imul
sahf
outsb
jo
mov
ds
sahf
sub
jmp
arpl
insb
in
fcoml
add
pop
mov
dec
int3
mov
hlt
dec
clc
stos
aad
add
fs
jecxz
incl
sarl
push
lcall
push
jno
inc
add
ljmp
mov
or
add
clc
mov
loop
adc
jmp
in
fldl
popf
lods
test
pop
out
test
xor
or
inc
mov
scas
mov
cmpsb
pop
sub
cmpsb
ja
int3
jo
mov
jmp
dec
pop
adc
xchg
rclb
lcall
push
call
js
or
aaa
cli
es
jg
mov
loop
fwait
call
mov
and
jg
sbb
jle
xchg
sti
dec
cmp
or
repz
inc
and
dec
jg
incl
xchg
adc
lods
dec
in
popf
jg
inc
loopne
sarl
and
cmp
stos
mov
sub
mov
rcl
popa
aam
fdivrl
mov
frstor
lret
mov
jg
rcl
clc
xchg
int
repnz
jl
push
lcall
rorb
push
jno
jmp
in
aaa
inc
push
lret
pop
mul
js
pop
loope
clc
xor
mov
lahf
sbb
push
cmpsl
ljmp
xor
dec
pusha
out
jns
or
cmp
xchg
mov
push
xchg
jne
dec
cli
push
call
jmp
stos
mov
bound
hlt
xor
pop
dec
xchg
adc
mov
decl
push
lcall
imul
scas
add
xor
shlb
jne
mov
cli
pushl
loopne
mov
cmp
fdivl
add
call
call
subb
push
xor
ljmp
lcall
ret
and
scas
sbb
decl
jnp
jb
mov
cmc
mov
mov
jns
int3
xor
jno
cmp
das
and
movsb
notl
sub
shll
loope
fcomps
jnp
incl
sbbb
fsub
stos
data16
push
loope
adc
es
ljmp
mov
pop
mov
mov
fcomi
mov
or
out
mov
sar
fists
in
jne
daa
mov
adc
inc
aaa
jae
in
dec
cmpsb
jnp
faddl
sti
fnstcw
pop
les
je
sbb
es
push
scas
std
mov
push
scas
idivl
and
cld
sub
dec
cmpsl
dec
leave
jne
xchg
jne
xchg
int3
ficompl
cmp
popa
fstpt
shl
jo
push
dec
mov
mov
stos
xchg
je
mov
imul
xchg
test
addb
call
jge
fcomip
das
rorb
add
popf
test
sub
decl
and
es
lea
mov
or
mov
pop
sub
mov
out
cli
rcrl
dec
stos
outsb
adc
fsubs
fucomi
add
mov
js
movsb
addr16
push
movsb
mov
inc
pusha
sub
adc
sbb
sub
ds
ljmp
cs
push
sub
rclb
sub
mov
jecxz
idiv
or
cs
cmc
push
out
decl
ret
stc
gs
xor
loop
lods
shl
mov
loope
call
mov
mov
les
lods
mov
mov
ljmp
daa
xchg
int3
xor
inc
mov
dec
ret
adc
dec
subb
arpl
inc
lcall
or
dec
add
jns
xor
jge
mov
push
push
int
call
jb
or
inc
scas
mov
out
fs
cmc
sub
imul
in
mov
mov
and
cs
pop
mov
or
mov
fnsave
and
jecxz
xor
dec
cmp
out
mov
add
pop
dec
add
sub
loope
mov
jg
aas
pop
stc
sub
pop
cvtdq2ps
test
cmp
push
mov
fnstsw
std
sub
jmp
dec
cmp
cmp
cmp
sub
ret
push
and
mov
or
ret
pushl
cld
sarb
lea
and
cmp
and
dec
add
jg
es
mov
jle
mov
enter
cmp
fwait
dec
lcall
add
push
ljmp
pop
movsb
div
call
pop
mov
add
mov
xchg
cmp
out
and
dec
xor
jg
mov
gs
gs
fdivrp
pop
jmp
mov
movb
rcl
pop
cli
jno
or
test
push
leave
inc
test
decl
add
mov
test
inc
mov
mov
pop
lea
jl
and
test
inc
adc
nop
jbe
arpl
adc
mov
push
shr
xor
and
iret
mov
incl
inc
arpl
cmpsb
shl
pop
gs
stos
lods
fidivl
ret
cld
dec
sbb
daa
les
imul
xchg
lahf
test
push
xor
call
jbe
fistps
out
sti
leave
or
cmpsl
sbb
push
rorl
repnz
xor
inc
clc
in
mov
fcmovb
cmc
xchg
mov
xchg
lcall
popa
rorb
js
pop
xchg
incl
jge
lcall
xor
mov
pop
xchg
pop
data16
jp
and
shrb
std
ja
scas
cli
mov
scas
mov
and
imul
add
shlb
inc
int
pop
mov
xor
sar
shll
inc
jae
cmp
xchg
pop
lahf
push
icebp
adc
incl
xchg
mov
cmp
les
pop
xor
add
sub
mov
add
incl
rcl
push
lahf
sub
mov
cmp
imul
popf
xchg
aas
stc
cmp
fsubrs
cmp
push
pusha
pop
push
push
fisttps
cli
lock
mov
movsl
add
je
dec
cli
xchg
movsb
push
jle
pop
inc
pop
rorb
mov
repnz
cld
cmp
mov
push
mov
pushl
loop
xchg
adc
cmp
loop
xor
fcmovnbe
push
leave
out
and
ficoms
fldl
es
dec
add
popf
mov
pop
xchg
mov
pushl
jmp
sbb
in
std
add
cs
enter
rolb
ja
xlat
inc
shl
sti
push
or
cmp
fists
in
xchg
xchg
stc
inc
push
insl
or
lcall
movsl
pop
or
incl
and
inc
in
test
ffree
push
in
aaa
inc
filds
jg
mov
inc
leave
jno
push
sti
outsb
xor
insb
movsl
shlb
cmpsb
jno
or
mov
adc
gs
sub
dec
or
call
xchg
ds
inc
adc
rorb
jmp
addb
mov
bound
jnp
cmp
dec
pop
insl
pop
loope
js
insl
pop
pop
insl
sbb
jle
adc
pop
je
les
pushl
cmp
movsb
sbbl
xor
imul
and
test
jp
lea
ljmp
xchg
sub
out
lea
sti
das
sub
shlb
je
inc
pop
ja
leave
xor
lods
insl
cld
out
cli
addr16
sub
jg
mov
ljmp
add
test
sub
or
adc
icebp
mov
jmp
lret
add
sub
jo
std
cmp
pusha
add
or
add
xchg
fildll
mov
mov
ds
cli
jmp
jecxz
popa
fcomp
fdivl
jne
add
push
dec
jmp
dec
jnp
shrl
les
pop
clc
orb
bound
outsb
mov
negl
popa
sbb
xchg
out
shlb
cmp
lcall
iret
jl
fsub
aaa
cli
xchg
rcll
fildl
mov
and
push
push
ljmp
sbbl
xchg
xchg
push
xchg
xchg
shlb
mull
push
incl
adc
cmp
xor
xchg
mov
inc
ret
dec
mov
lret
xchg
fwait
lods
ja
loopne
sub
add
pushl
movsb
push
adc
sub
sbb
insl
cmp
mov
in
fbld
pushl
andb
inc
sbb
adc
mov
and
std
jmp
popa
mov
addr16
pop
inc
mov
rol
adc
mov
js
aad
call
adc
int3
xchg
cli
mov
pop
jbe
into
lea
sbb
aaa
mov
leave
lcall
mov
mov
and
jmp
lods
fldl
sub
outsl
cli
call
add
insb
push
xor
loopne,pn
test
into
inc
dec
jg
and
pop
sti
cli
mov
stos
arpl
jmp
sub
xchg
sub
push
pop
test
dec
pop
xor
jecxz
pop
adcl
jns
ljmp
and
stos
inc
lods
inc
insb
and
mov
lock
cmp
push
gs
in
jmp
jmp
add
jo
push
lods
fldl
push
pop
mov
or
jmp
stc
pop
jnp
jmp
xchg
or
mov
into
jns
insl
rcpps
lcall
lcall
adc
ja
in
pop
fcoml
push
inc
pushf
sub
decl
fiaddl
dec
pop
aas
rcrl
sbb
ret
fsts
inc
outsb
test
call
pop
mov
fwait
or
mov
cmp
cmp
shl
push
and
jmp
jmp
inc
push
mov
pop
insl
inc
jl
jns
insl
out
mov
jg
test
ljmp
out
dec
and
cmpsb
xor
pop
addr16
imul
mov
repnz
sbb
push
or
loopne
mov
pop
cmpsl
into
push
jno
pop
enter
inc
fbld
or
xor
pushl
shlb
ret
pop
push
and
aaa
xchg
adc
incl
imul
xlat
cmpsl
cwtl
icebp
insb
pcmpgtw
add
in
push
sub
mov
jmp
xor
and
xchg
mov
cmp
mov
call
xacquire
mov
xchg
cmp
mov
sub
fwait
lea
dec
in
pop
outsl
sbb
gs
mov
call
mov
xchg
xchg
jns
hlt
lahf
clc
and
jl
insl
flds
js
lcall
jae
call
push
jns
ds
out
cmp
dec
xchg
jns
cli
fwait
movsl
dec
inc
test
call
incb
pop
mov
adc
popf
jle
in
das
stos
je,pn
pop
stos
dec
mov
enter
adc
fcmovb
jno
xchg
pusha
mov
mov
lcall
jg
loop
or
xor
mov
imul
mov
jae
aam
push
sbb
xor
xor
cltd
mov
adc
and
decl
push
rcl
int3
cmovbe
or
or
in
add
jnp
decl
pop
shll
js
shlb
adc
mov
stc
gs
dec
rcrl
jg
jmp
jle
pop
mov
push
push
jb
jp
mov
lock
sbb
dec
aam
jmp
jbe
jae
repnz
xchg
xchg
adc
mov
mov
outsl
js
in
ss
cmpsl
arpl
jo
inc
inc
xchg
fimull
outsb
in
dec
sbb
les
add
aaa
dec
popf
test
pop
push
mov
div
push
scas
in
loopne
scas
incl
sub
jb
adc
or
and
insl
mov
mov
mov
test
dec
xchg
decl
jae
mov
inc
fmull
and
push
inc
movsl
pushf
bnd
adc
out
ret
out
call
cld
jns
ret
mov
cmpsl
dec
push
pop
insl
add
es
cwtl
push
stc
std
or
ljmp
iret
and
sahf
push
iret
mov
inc
jge
cmp
in
cltd
addr16
ds
call
leave
add
jbe
fs
or
push
xor
clc
insl
int
add
in
dec
xchg
das
push
lock
xor
sub
mov
decl
adc
ret
js
push
cmp
xor
ds
mov
adc
stos
inc
call
cs
imul
mov
insl
jg
in
cs
cmp
cs
int
pop
xchg
add
pop
sbb
jne
mov
call
xor
gs
mov
in
sub
mov
or
imul
jp
inc
push
jno
jp
pushf
push
enter
xorl
loop
push
js
pushl
data16
mov
icebp
xor
pop
add
dec
xchg
add
jno
inc
jmp
fsubrl
in
int3
sub
dec
ljmp
inc
inc
sarl
andnps
faddl
gs
call
jmp
jns
xchg
cmpsl
xchg
push
cmp
jb
adc
outsb
mov
iret
outsl
mov
rorl
pop
stc
jne
filds
mov
in
xlat
or
lret
sbb
mov
ret
dec
jp
push
gs
enter
out
ljmp
rorb
imul
mov
or
outsb
shlb
lds
mov
mov
mov
lea
mov
pop
hlt
adcl
cmp
mov
addl
imul
loopne
scas
add
lret
xor
sub
loope
cmp
jg
sahf
testl
das
pop
sbb
sahf
test
cmp
insl
cld
popf
popa
aam
out
loop
adc
dec
movsl
mov
jl
dec
pop
lcall
hlt
out
xor
icebp
mov
sub
jmp
dec
or
mov
call
pop
mov
and
xchg
sub
mov
mov
les
leave
jo
call
andb
repz
fsubrl
in
cmpsl
rorb
cmp
jle
mov
mov
das
or
add
roll
sub
push
fld1
or
mov
lret
sahf
out
lcall
addr16
repnz
mov
addl
test
or
dec
adc
mov
call
ja
int3
sahf
push
aas
dec
pop
push
ljmp
mov
fsub
sub
decl
mov
mov
les
mov
sub
mov
jbe
push
mov
out
pop
cmp
mov
test
lcall
cmp
gs
pop
xor
push
in
aas
ljmp
sti
icebp
addr16
pushl
nop
test
xor
push
cmc
xchg
stc
mov
das
int3
mov
cld
mov
mov
repz
call
and
pushf
adc
or
scas
aam
jmp
adc
adc
in
inc
inc
sub
fcom
je
lds
mov
mov
iret
mov
adc
push
mov
lcall
subl
das
ds
aad
sahf
in
ficoml
data16
enter
inc
cld
rorb
lods
rclb
hlt
xchg
adc
inc
push
pop
in
cmp
jns
push
inc
jmp
dec
mov
sub
pop
cmp
mov
xchg
test
mov
xor
imul
pop
cmp
fyl2xp1
mov
call
movsl
hlt
jle
scas
push
scas
jg
test
or
movsl
sahf
in
test
ss
pop
add
adc
pop
xchg
xor
cli
lahf
je
iret
pop
imul
push
sbb
clc
mov
scas
cmpsl
in
mov
fcmovnu
sub
push
or
popa
push
rcl
xchg
in
aaa
inc
xchg
add
ljmp
in
mov
inc
testb
scas
sbb
mov
shr
lock
sahf
pop
jl
jns
pop
hlt
call
out
inc
cmpl
pusha
ficompl
ds
lods
pop
mov
or
sub
gs
lret
out
mov
out
xlat
call
hlt
in
in
push
add
and
push
ljmp
inc
or
adc
test
popf
inc
out
sbb
jecxz
add
popf
data16
lcall
add
iret
fldenv
push
pop
mov
dec
inc
incl
jle
out
ljmp
call
call
adc
pop
mov
incb
sbb
les
jbe
sti
dec
repnz
shl
xor
adc
jp
inc
ret
cmp
test
jg
push
pop
add
stos
cmpl
sbb
inc
push
lods
push
mov
adc
dec
aad
mov
les
aad
jbe
push
imul
or
add
sarb
push
lcall
xlat
les
or
push
iret
int
jo
je
lcall
add
incl
sbb
lea
pop
test
inc
enter
sub
jle
push
xchg
mov
nop
mov
push
and
mov
ss
xchg
movsb
call
loope
or
nop
ja
jnp
xchg
loope
shll
pusha
xor
adc
addr16
leave
rclb
inc
mov
call
jo
add
mov
std
loopne
fcomip
sbb
jg
ja
dec
sbbl
push
filds
shlb
jg
jge
xchg
hlt
das
mov
int3
or
cmpb
mov
cli
push
aaa
je
imul
xchg
popf
fisubl
cmpsl
and
dec
add
test
pop
mov
leave
xor
lret
jo
ret
mov
mov
cmp
jno
fisttpl
out
fadds
subps
or
dec
dec
data16
loopne
adc
call
std
jge
cltd
cmpsl
stos
xchg
jl
fnstenv
or
inc
mov
xchg
fxch
in
jecxz
ljmp
pop
cmp
cli
shlb
rcrl
or
mov
mov
mov
pushl
push
out
js
inc
das
lahf
mov
inc
popf
xchg
cltd
cmc
scas
rcl
xor
stos
decl
xchg
repz
sarb
arpl
in
call
fistpl
rol
popa
mov
push
in
in
sbb
jnp
add
rclb
out
shlb
clc
test
decl
repz
into
push
rclb
xchg
or
iret
push
jbe
cs
movsb
add
pop
jecxz
call
sub
scas
loope
jmp
dec
adc
pop
pop
ljmp
aas
sub
pop
or
cmp
clc
cmpsl
add
inc
mulb
decl
movsb
push
popf
xchg
or
nop
sub
lock
int
aad
cmp
and
loope
out
ja
lcall
outsb
shll
pop
cwtl
mov
and
xor
dec
test
decl
push
inc
out
cltd
push
iret
aam
push
pop
pop
xchg
std
and
and
mov
loopne
call
into
inc
mov
and
mov
mov
push
pushl
in
sbb
push
int
push
pop
repz
dec
jnp
jmp
sbb
sub
in
jmp
xor
mulb
mov
cmp
nop
fidivrl
and
jp
push
and
movsl
mov
push
call
push
mov
repz
js
es
test
ud0
or
mov
test
dec
sub
mov
incl
or
add
jl
jne
sub
dec
pusha
cmp
lods
push
or
sub
pop
mov
decl
lret
or
stc
jb
arpl
mov
lcall
ret
cmpsb
in
cmpsb
and
enter
cld
sub
lods
push
xor
call
or
testl
fmul
dec
xor
icebp
pop
mov
mov
mov
jg
lock
sbb
sarb
xchg
pop
jmp
add
mov
iret
clc
insb
cmp
outsl
mov
cmp
inc
imul
sbb
cs
adc
lcall
sub
in
or
push
cmp
push
js
xchg
mov
call
sbb
mov
ljmp
scas
pop
inc
fcoml
xor
rcrb
test
and
xor
ljmp
test
inc
js
xor
loop
fwait
pop
jno
in
loop
les
mov
add
decl
sbb
dec
sub
mov
push
int3
repz
dec
push
outsb
js
mov
jecxz
push
sti
movsb
cmp
cmp
add
jle
inc
lea
ret
mov
mov
add
or
rolb
lods
push
repnz
jbe
sub
xchg
and
push
adc
sub
scas
pop
push
jecxz
lods
mov
es
call
out
and
popf
push
rcll
sarl
push
mov
in
incl
pop
and
jo
mov
loopne
xor
cmp
push
gs
clc
mov
mov
or
ja
sbb
popf
jmp
add
or
loopne
movl
imull
lcall
jmp
sub
mov
and
mov
push
xchg
cmc
or
push
popa
cltd
adc
lds
add
cli
aas
mov
cmpsb
in
ljmp
incl
es
hlt
mov
je
call
lods
xor
mov
or
ljmp
cmp
mov
mov
mov
sahf
in
dec
mov
cmp
xor
push
sub
jbe
out
adc
hlt
cmp
outsl
cli
test
sub
js
in
ljmp
cmpsb
mov
subl
ret
test
ljmp
cmp
icebp
jge
inc
int
ss
pusha
pushf
scas
js
push
jg
stos
leave
and
inc
push
add
mull
mov
in
and
xlat
pusha
inc
lods
int
add
mov
mov
incl
fidivrl
adc
mov
push
mov
sub
mov
or
out
js
sub
and
push
push
pushf
pop
or
cli
movsb
mov
daa
fwait
gs
ljmp
into
xchg
ljmp
push
adc
cli
mov
mov
pushl
call
mov
jg
pop
lock
testb
sub
push
subb
pop
int3
test
out
jbe
pushl
xor
pusha
xor
sub
rcl
stos
mov
in
test
fisubrs
ljmp
addr16
sbb
incl
sub
cmp
call
jae
adc
mov
cmp
js
mov
mov
lcall
aad
cmpsb
cltd
mov
jae
je
out
pusha
test
repz
jg
mov
mov
inc
jmp
dec
or
lahf
inc
or
stc
insl
or
incl
xchg
mov
xchg
fs
popf
test
mov
int
mov
call
lahf
sarb
pop
pop
push
outsb
arpl
jnp
das
in
push
or
call
pop
jg
cmpsl
push
push
data16
in
cmpsl
lods
aas
mov
out
cs
scas
or
jp
out
lcall
out
sub
fiadds
and
iret
inc
dec
fmul
push
idivb
rcrl
leave
or
mov
incl
stc
rcll
cmpsl
movsb
pop
mov
add
popa
cld
popl
std
movsl
push
inc
rorb
jl,pt
incl
push
xchg
js
outsb
lds
fldenv
mov
push
int
addr16
and
dec
or
rcr
dec
mov
adc
and
stos
pop
sbb
pusha
jnp
xor
xor
dec
add
or
aad
jo
cmp
andl
dec
xorl
stc
inc
hlt
mov
ja
bound
push
scas
jecxz
fdivs
mov
lock
xor
or
sbb
addb
loop
jg
dec
in
mov
sbb
dec
inc
pop
shrb
je
sbb
ljmp
cltd
mov
incb
dec
jl
es
xchg
pop
out
pop
enter
jg
push
lcall
stos
sub
clc
loop
or
rcrl
andl
cs
call
pop
outsb
jp
mov
int3
ss
dec
fisttpl
rclb
inc
and
je
jmp
lods
dec
cmp
inc
cmpsb
mov
xchg
fmuls
nop
mov
stc
sbb
jo
je
mov
jle
je
mov
xlat
fmull
cld
iret
mov
pop
pop
fstp
aas
jo
call
adc
das
cli
les
mov
loop
fnclex
fsubrp
jno
push
pop
lock
sahf
hlt
call
out
sub
testb
xor
cltd
cmp
mov
mov
pushl
cmpsl
xor
lret
xchg
out
xor
sbb
popa
push
sbb
roll
aaa
push
mov
shl
mul
mov
aad
dec
xor
out
sub
loope
xchg
mov
dec
jnp
xor
sahf
or
call
aad
xchg
lret
or
das
shr
jbe
call
cmpsl
out
jle
xchg
jmp
cld
dec
push
in
loop
cltd
jge
adc
jne
mov
lock
mov
jp
outsl
loopne
mov
std
imul
inc
sub
push
std
mov
fisubrs
xchg
jnp
xor
imul
popf
idiv
push
lcall
inc
xchg
loop
or
aam
and
or
mov
pop
mov
lcall
stos
mov
add
xor
push
ljmp
cli
add
sub
mov
xor
addr16
cli
jbe
mov
inc
mov
fwait
cmc
sbb
mov
cld
inc
pop
add
call
sahf
and
push
stos
add
adc
jbe
std
hlt
fistpl
mov
jmp
push
cld
inc
inc
adc
leave
std
pop
mov
adc
cmpb
js
xchg
adc
xor
cli
rorl
sbb
mov
sub
scas
test
decl
dec
in
nop
pushf
sbb
pop
lods
dec
fs
fs
lock
add
mov
decl
jp
xchg
mov
inc
cmp
sbb
and
push
cltd
shr
sub
pop
or
loopne
js
and
push
jp
mov
call
xchg
jbe
test
ret
rorl
jno
shl
cld
xchg
inc
push
add
incl
ret
fistpll
loope
lods
xorb
aas
jb
dec
inc
test
or
scas
ja
ja
clc
shll
into
sub
shll
add
call
push
pop
test
jecxz
dec
mov
popf
inc
pop
push
aas
loope
cmp
ds
inc
xor
gs
mov
sbb
pop
pop
xor
push
mov
pop
scas
js
pop
hlt
adc
mov
cli
sti
mov
xor
pusha
mov
push
add
clc
je
je
mov
test
sub
inc
push
xchg
pop
xor
mov
repnz
cld
pop
mov
scas
or
das
or
mov
js
sub
loopne
dec
orb
test
adc
scas
loop
aad
popf
popf
cmp
addb
imul
push
cmp
sbb
mov
sahf
and
int
dec
xor
mov
pop
iret
xor
outsb
jnp
jmp
push
in
push
arpl
into
dec
pop
mov
dec
mov
mov
ljmp
out
rcrl
xor
dec
mov
pusha
stos
pop
repz
mov
sahf
ljmp
lods
stc
scas
sub
sub
jmp
imul
and
hlt
fwait
jnp
das
mov
loop
pop
scas
lahf
cli
andl
std
mov
idiv
push
loop
mov
outsb
pushf
loopne
pop
shrb
xlat
mov
clc
inc
call
mov
decl
out
icebp
adc
das
in
into
cli
js
lcall
sbb
or
push
lcall
ret
xor
imul
xchg
in
ds
ret
hlt
mov
adc
push
cmpsl
fwait
cltd
jnp
adc
call
pop
fiaddl
add
or
dec
les
call
jle
ret
cmpsl
add
jl
adc
mov
mov
lcall
lcall
sub
jmp
jnp
xchg
jno
in
mov
push
jo
lahf
es
incl
insl
push
pop
out
add
jl
arpl
mov
xchg
mov
daa
push
data16
lcall
push
cltd
add
xchg
pop
inc
hlt
push
fstpl
or
cmc
btc
push
cmc
decl
aad
loopne
jecxz
test
hlt
repnz
divl
mov
fildll
cli
ja
cltd
js
pop
dec
addb
fsts
mov
push
loope
movsb
je,pn
jo
xchg
jle
xchg
outsb
ljmp
xchg
iret
lds
fisubrl
sbb
jmp
mov
xchg
mov
js
pushf
imul
lods
cmp
fmuls
shll
int
je
mov
jmp
jmp
add
cmpb
ds
jp
mov
out
out
repz
repz
and
jmp
imul
repz
inc
repnz
push
inc
leave
sahf
out
loope
mov
lods
dec
jae
incl
pop
mov
jno
mov
rolb
mov
and
dec
xor
pop
call
mov
gs
push
call
add
mov
dec
adc
adc
jb
ljmp
dec
mov
test
or
xchg
push
or
lahf
cmp
idiv
jmp
sub
pushf
inc
fcoml
les
out
or
adc
shll
sub
lods
xor
mov
mov
imul
lcall
cmpsb
sub
pusha
mov
jg
mov
pop
in
xor
mov
arpl
mov
test
mov
xchg
std
lock
add
leave
inc
rcll
inc
and
in
sub
jp
cltd
cli
add
push
insb
lods
push
dec
push
mov
loope
sysexit
je,pt
mov
cld
idivl
push
movsl
ficoml
rcl
lret
mov
ds
pop
jg
fcmovu
out
shrl
pop
imulb
mov
jg
xchg
mov
cltd
push
pop
xor
or
push
std
mov
pop
call
dec
rorb
inc
js
jae
xor
mov
stos
test
and
decl
imul
adc
cmp
in
mov
daa
sbb
adc
into
mov
sbbl
inc
push
pop
mov
add
fadds
sti
xchg
mov
icebp
add
repz
ljmp
inc
fs
and
decl
movsl
test
jp
in
push
and
mov
ljmp
fcoms
mov
das
xchg
pop
mov
add
addb
mov
mov
and
rorb
test
xor
ja
outsb
fwait
jge
sbb
cmp
jge
xchg
enter
lret
push
lods
arpl
fsubl
stos
iret
in
mov
add
push
dec
sahf
fsubrl
nop
jns
outsl
mov
mov
pop
mov
insb
lods
clc
dec
xchg
inc
and
inc
in
sbb
insl
lods
test
decl
jl
adcb
int3
popa
adc
inc
lahf
jmp
popa
clc
pop
int3
neg
push
mov
fists
jmp
sbb
test
nop
ja
pop
jmp
push
dec
mov
adc
out
into
adc
decl
cmp
and
test
loope
lods
adc
fisttpll
aad
push
outsl
cmp
decl
dec
and
jb
push
xchg
pop
cmp
sbb
js
or
int3
decl
lea
push
mov
insl
popf
push
xor
lods
scas
push
scas
jg
cmc
cmp
adc
and
ds
jbe
jmp
cmc
jae
mov
jg
aaa
dec
aad
aas
in
adc
outsl
fs
movsb
adc
mov
out
jmp
into
imul
push
xchg
flds
mov
mov
data16
mov
fbstp
mov
xor
adc
lcall
test
sbb
cld
xor
dec
adc
in
rorl
add
mov
pop
cwtl
clc
mov
sub
cmc
cs
incl
jne
pop
mov
lcall
xchg
mov
mov
inc
pusha
mov
ljmp
push
aas
add
dec
loop
pop
fsubrl
dec
cmpsl
cmp
out
ss
xor
out
aad
and
or
jg
push
sub
popf
shlb
imul
mov
in
adc
xchg
rorl
mulb
daa
cmp
sti
flds
fadd
cld
jo
sub
inc
lea
ficompl
outsl
mov
lea
push
fwait
lahf
mov
imul
into
aad
fimuls
pushf
pop
ljmp
pop
jle
cmp
xor
loop
inc
xor
push
adc
cmp
lcall
mov
cmpsl
mov
xchg
movsl
lods
dec
out
xor
fists
add
scas
sar
pop
loopne
inc
loopne
pusha
fiadds
mov
addb
dec
inc
sbbb
test
jle
jae
pop
mov
ficomps
das
push
cmp
fsubp
imul
mov
xor
push
mov
pop
mov
mov
xchg
xor
or
add
pop
sbb
scas
sar
repz
ret
arpl
jbe
fdivr
decl
ss
jecxz
adc
out
jmp
outsb
inc
jg
adc
cmp
test
fdivrl
shrl
pop
mov
and
jl
cwtl
mov
lds
pop
xor
scas
mov
insl
jmp
inc
cmp
rclb
movsl
int3
adc
inc
shlb
mov
sub
mov
pop
fnstenv
adc
mov
sub
loop
decl
mov
sub
jno
int
testb
sub
mov
aas
cltd
outsb
mov
bound
inc
mov
or
mov
lret
push
fnsave
sub
enter
dec
fs
add
ja
shl
xchg
setle
loop
jg
aam
cmpsb
mov
pop
aas
sub
mov
push
daa
ret
ret
mov
pop
inc
arpl
mov
popf
cwtl
add
push
out
test
sbb
jnp
shlb
xlat
adc
lcall
pop
testb
stos
pop
cwtl
into
or
insb
ljmp
fs
jae
push
in
and
lock
call
enter
sub
jge
pop
decl
inc
pop
mov
jbe
jp
ds
nop
les
insl
sti
pop
pop
dec
mov
lcall
adc
fs
icebp
push
imul
push
ret
cs
cmp
adc
mov
cmpl
sbb
inc
inc
and
enter
lods
push
adc
mov
call
daa
push
inc
mov
push
mov
mov
dec
xor
js
mov
or
popf
xchg
ret
lret
sbb
pop
cmpsl
sbb
and
repnz
clc
jle
decl
repnz
jl
mov
mov
mov
maxps
movsl
sbb
add
adc
mov
lock
loop
idiv
pushl
sub
xor
xlat
mov
xchg
push
test
inc
shrb
cmc
mov
lds
push
add
jle
incl
mov
mov
cmp
xor
or
lret
mov
push
mov
lcall
subl
aam
ret
ds
hlt
mov
loop
mov
das
clc
test
testb
stos
in
adc
repnz
int
repnz
aas
xchg
sub
mov
mov
fdiv
imul
jo
and
mov
ljmp
insb
xchg
cld
and
jmp
sbb
or
mov
and
sub
movsb
pop
outsb
mov
jmp
fnstsw
mov
leave
mov
jp
mov
jno
cmpsb
and
mov
aas
mov
push
in
ss
dec
stos
lcall
dec
aam
bound
or
fcomip
lcall
loopne
adc
fstps
xor
ljmp
hlt
or
mov
mov
decl
mov
lds
pop
cwtl
adc
pop
repnz
xchg
popf
jae
les
cld
mull
fnstsw
mov
lcall
nop
sub
lahf
mov
int
xchg
ret
dec
push
les
pushaw
cmp
xor
jno
mov
dec
dec
mov
mov
lcall
push
outsb
in
pop
sbb
cmp
cld
in
jmp
scas
xchg
lock
call
pop
addr16
push
pushf
bound
adc
leave
dec
rcrb
sbbb
lods
dec
shrb
stos
xchg
sub
test
cwtl
test
sub
jo
xchg
fcomip
mov
aad
mov
mov
mov
decl
hlt
js
xchg
fstpl
xchg
xchg
inc
push
xor
ljmp
push
loop
mov
fbld
aad
in
lods
cmc
xchg
repnz
fistl
add
test
pusha
retw
in
pushf
jge
or
or
je
arpl
lcall
jp
adc
jmp
cpuid
add
or
fidivl
dec
hlt
cmpl
lcall
addr16
cwtl
sbb
inc
in
adc
mov
dec
or
dec
jg
adc
fwait
lret
outsl
scas
and
jmp
fadd
sti
xchg
jnp
lds
jg
pushf
mov
pop
mov
mov
or
inc
inc
xlat
sbb
int
mov
incl
mov
mov
loopne
test
aas
movsb
mov
dec
mov
incl
mov
mov
pop
sbb
arpl
mov
clc
jne
jmp
sbb
clc
repz
mov
das
outsl
stos
test
insb
and
leave
fs
adc
in
out
add
cmp
pushl
insl
add
gs
jg
dec
inc
cltd
cmp
out
cmp
push
pop
repnz
add
ljmp
sbb
insb
movsb
shrl
inc
pop
ljmp
jae
subb
pop
cli
xor
cmp
leave
adc
pop
mov
addb
movsl
mov
shlb
enter
ljmp
int
mov
sbb
lods
push
and
or
pop
daa
xchg
pop
jns
mov
in
pushl
orl
or
fldl
std
test
sti
push
xchg
lahf
test
popa
incl
mov
adc
and
jl
mov
add
sub
insb
or
jbe
movsl
inc
xor
cwtl
pop
scas
cli
call
enter
arpl
dec
mov
sbb
hlt
lock
decb
cli
push
in
adc
mov
imul
cmp
clts
rcrl
jg
add
push
fcoml
mov
jb
sbb
call
jne
jg
stos
adc
mov
sbbl
mov
sub
decl
cwtl
insl
sub
and
add
icebp
test
add
xchg
cmp
add
xorl
mov
xchg
sub
lcall
add
movsl
ret
inc
movsb
mov
repz
inc
clc
lds
bound
xchg
lods
in
mov
incl
mov
insl
loope
jne
lods
mov
jo
pop
xchg
adc
ja
out
fmul
cli
pushl
jl
pop
or
jne
add
adc
aaa
or
sub
mov
loop
lcall
dec
pop
and
dec
or
outsl
adc
aaa
test
fnstcw
call
and
push
mov
loope
into
jp
push
mov
in
movsb
ja
aas
inc
xor
decl
in
xor
push
adc
call
lock
push
mov
outsb
aam
ret
and
scas
mov
std
pushl
loope
sahf
aaa
stos
and
xchg
inc
adc
sub
pop
inc
int3
cmpsb
setl
pop
cmp
bound
movsl
aad
jmp
lcall
outsb
roll
movsb
cmp
inc
push
pop
mov
lds
in
cmp
ljmp
push
insb
roll
test
jno
pop
xchg
cltd
scas
test
cmp
cmp
lcall
test
incb
push
pop
mov
xor
dec
popa
xchg
dec
fisttps
mov
sbb
push
push
adc
push
mov
imul
ljmp
clc
cmp
rcrb
fdivrs
pop
test
push
pop
clc
aam
fwait
subb
or
iret
mov
decl
sub
jmp
movsl
js
leave
jbe
or
outsl
incl
push
aaa
jnp
jnp
hlt
imul
imul
lahf
decl
sub
std
popf
mov
ficoms
lcall
insl
sub
jmp
mov
fcmovb
bound
pop
int3
mov
call
call
jg
mov
cmp
stos
mov
sub
call
xlat
mov
lahf
out
sub
rclb
lahf
adc
mov
xor
cmp
jmp
ds
ss
jo
mov
fstpl
call
ds
inc
mov
insl
int
movsl
sub
and
cwtl
addr16
sti
ljmp
js,pn
fcmovb
push
and
and
or
jno
pop
or
orl
aaa
std
incl
jae
adc
sub
adc
scas
cmp
not
pop
jl
dec
cmpsb
fnstsw
xchg
insl
cmp
fidivl
cmpsb
push
xor
add
adc
adc
mov
mov
add
xor
push
fs
xor
jecxz
mov
pop
cs
jmp
outsb
cmc
jnp
fisubl
mov
jne
dec
insl
jp
xchg
xor
aam
fnsave
mov
out
lcall
pop
outsb
imul
ficoml
pop
rorb
xchg
xor
fninit
mov
js
mov
repz
gs
push
or
xchg
mov
mov
jg
sti
sbb
ficompl
cmc
push
inc
fsubl
jmp
push
mov
rep
sbb
lods
and
push
loop
sbb
nop
cli
loop
cmpsb
mov
mov
call
xchg
lds
adc
ljmp
popa
popf
sub
cmp
fwait
jmp
fdivl
shlb
lcall
xchg
fcomps
cmp
into
jmp
incl
push
std
xor
call
adc
in
lret
stos
lahf
mov
mov
lahf
stc
jb
icebp
pop
lock
mov
aad
notb
cmp
mov
movsl
mov
inc
scas
fs
sub
push
lcall
aad
inc
insl
xor
push
and
pop
cmp
in
dec
fnstcw
test
adc
mov
sbb
decl
iret
jno
fildl
xchg
mov
dec
lret
jp
xor
ud0
das
cli
mov
lea
fwait
jle
mov
lods
imul
in
jnp
pop
mov
sbb
shrl
hlt
hlt
into
imul
pop
pusha
js
ja
push
loopne
jmp
push
xor
test
sbb
xchg
scas
out
jge
push
cmp
push
ljmp
imull
xchg
push
dec
cmp
xor
imul
incl
int3
fdivr
ja
ret
and
jle
mov
mov
adc
inc
mov
push
cld
scas
mov
clc
pushl
mov
clc
cmc
xchg
sbb
push
sub
int
inc
je
xor
ljmp
je
sub
repnz
add
xor
adc
incl
fadds
pop
shrl
outsb
sub
pop
repnz
inc
jo
out
jnp
pop
sahf
pop
call
pop
cmp
xor
sahf
cmp
mov
push
insb
mov
je
pushf
pop
pusha
or
fwait
rcrl
shrb
xlat
and
mov
and
lock
lcall
cmp
xlat
shlb
ret
dec
cld
decl
repz
shl
add
pop
pop
decl
mov
incl
dec
pusha
jnp
lret
mov
sahf
push
fdivs
mov
mov
dec
lcall
enter
stos
push
sbb
cld
jecxz
test
adcl
mov
decl
repz
pushf
pop
jge
notl
rcr
test
push
jp
mov
fwait
adc
mov
arpl
incl
test
mov
adc
jnp
loope
and
adcl
jae
mov
incl
imull
call
addb
lret
adc
rcll
std
divb
cmp
enter
push
stc
cmp
lock
sbb
inc
hlt
xchg
sahf
jp
push
pop
pop
pop
icebp
lcall
scas
inc
adc
push
or
idiv
or
dec
or
or
fildll
ljmp
dec
test
xchg
sti
leave
mov
filds
lret
test
lahf
jg
inc
mov
incl
fists
sub
or
and
or
lods
jecxz
sub
sahf
bound
daa
jns
xorb
or
sbb
mov
cmp
or
loopne
and
fiaddl
loope
mov
adc
sti
jns
mov
cwtl
scas
sti
cld
push
ss
inc
or
js
push
mov
push
adcb
pop
lret
xor
dec
cmp
mov
rcrb
pop
add
dec
xchg
jo
out
call
cmp
mov
stos
cmp
fsts
jae
jp
pushf
dec
jbe
mov
in
fwait
inc
hlt
sub
test
test
dec
imul
insb
xor
pusha
jmp
pop
stos
pop
fwait
incb
test
pop
mov
jmp
ljmp
and
adc
sub
ss
jae
stos
xchg
ret
lods
jg
call
or
lock
add
ror
inc
bnd
sub
and
mov
or
xchg
outsb
pop
fldl
push
sub
loop
adc
stc
popl
test
mov
mov
je
les
mov
mov
movsl
mov
fbld
loope
push
pop
pop
addb
xchg
addr16
fmulp
dec
int
cmp
jmp
xchg
xchg
inc
sub
test
cmp
push
adc
add
add
inc
lahf
js
jle
pop
fldt
jb
jae
sbb
cmpl
add
jno
adc
not
lahf
xchg
ljmp
pop
mov
add
lock
addr16
jbe
mov
es
out
std
pop
sbb
lcall
insb
mov
and
loop
clc
lods
push
iret
lret
ljmp
xchg
mov
cwtl
sbb
loopne
jge
inc
pusha
jg
inc
fidivrs
cmc
scas
xlat
cvtpi2ps
movb
mov
jg
lcall
fmull
cmp
mov
adc
xchg
jg
cmpb
pop
cmp
test
xchg
xor
rorl
popl
jo
push
add
inc
int3
push
or
ljmp
sbb
and
fwait
ret
push
ljmp
call
in
xchg
mov
scas
jge
dec
fwait
mov
push
dec
pop
ljmp
pop
dec
call
lcall
push
adc
and
mov
notb
push
xor
std
sbb
loop
xchg
incb
loope
idivl
pop
loopne
scas
aaa
cmpsl
xor
popf
popa
mov
xchg
daa
lods
pushl
push
lods
andl
jns
les
mov
inc
loope
mov
call
mov
je
dec
leave
outsl
mov
lcall
test
hlt
adcl
decl
adc
lcall
popa
stc
fdivp
mov
aas
add
lahf
ja
mov
incl
cmc
inc
and
push
inc
sub
mov
push
roll
inc
lock
mov
call
xor
push
cmp
negl
add
or
cmp
ljmp
inc
jne
imulb
es
test
xchg
push
or
xchg
ficoml
cld
adc
pop
push
xchg
mov
leave
scas
ficoms
cmp
lea
scas
test
subb
lret
gs
xchg
mov
sbb
jg
dec
jno
bndstx
loope
test
jmp
or
call
cld
xchg
or
fiaddl
insb
sub
add
clc
ljmp
mov
push
xchg
aaa
movsb
jno
int3
rcrb
ljmp
inc
mov
adc
jae
or
pop
mov
pop
jno
popa
adc
cmpsb
fs
pushf
scas
js
int
adc
lcall
lods
mov
pushf
inc
ljmp
fcmove
jmp
or
lock
lret
mov
jnp
adc
adc
mov
jne
pop
int
jmp
pop
xor
out
xchg
push
imul
cld
adc
aad
push
subb
and
jle
pop
inc
dec
lahf
and
std
loop
ss
xor
push
mov
insl
cmp
sbb
icebp
push
fmull
sahf
pop
movsl
pop
adc
xor
lock
call
mov
test
xor
sub
or
push
sti
and
cld
call
xchg
mov
lahf
xchg
and
xchg
scas
sti
mov
push
mov
ljmp
cmp
mov
jg
pop
xchg
mov
lea
mov
sub
mov
insb
enter
sub
lods
lcall
fidivs
cmp
jmp
rorl
mov
jp
cmpsb
push
pop
dec
xchg
sti
or
sub
lcall
aas
mov
lret
test
mov
mov
lret
fdivrp
cmp
sbb
sbb
scas
push
dec
arpl
push
jge
add
out
ror
fstl
idiv
call
adc
ja
sub
or
or
js
addr16
inc
sub
or
push
icebp
loop
sahf
call
sbb
mov
cmpl
pop
out
sahf
je
sub
movsb
jmp
ds
lods
and
push
lret
push
pop
dec
mov
sub
es
rolb
repz
sbb
lahf
pop
dec
std
decl
int
fwait
sbb
cmp
dec
jmp
stc
in
cmp
decl
lea
mov
jne
or
jecxz
push
cltd
sub
out
arpl
popa
in
xor
lcall
pop
lcall
xchg
test
pop
test
fidivl
orb
adc
mov
push
mov
ss
adc
test
sbb
jne
xchg
arpl
fimull
xchg
mov
ja
mov
fmuls
push
stc
sub
mov
cmp
mov
test
imul
lret
mov
roll
notb
ljmp
ror
jl
push
ds
mov
sbb
dec
std
shlb
imul
stc
idiv
fcomip
in
daa
push
jl
out
mov
mov
add
push
inc
jl
scas
inc
repnz
ljmp
enter
xor
mov
jle
das
ds
movsb
leave
push
mov
mov
push
inc
adc
incl
insl
xchg
rclb
aas
in
pop
inc
cmc
je
cmc
call
cmp
loopne
test
sti
dec
cmp
ds
repz
lcall
dec
mov
decb
adc
push
dec
push
dec
mov
ret
xchg
ljmp
jecxz
push
in
xchg
pop
into
mov
mov
push
in
decl
cmp
in
mov
pusha
leave
push
push
fldenv
mov
jmp
adc
jns
enter
enter
pop
mov
mov
scas
cli
jmp
mov
lcall
mov
test
jg
and
mov
mov
test
push
scas
mov
repz
push
xor
jle
jmp
lcall
mov
fistps
cmp
ljmp
push
xor
pusha
rcrb
jne
subl
fadds
inc
repnz
aaa
out
add
cld
mov
cltd
add
xchg
jle
sub
dec
sar
mov
jp
dec
mov
pop
sub
mov
or
pop
mov
movl
je
lret
sbb
test
lcall
shll
notl
xchg
xor
xlat
mov
jne
and
add
jns
xchg
pop
cvtps2pi
jmp
xchg
cwtl
pusha
adc
in
push
clc
push
cmpb
call
pushf
out
xor
popf
into
lods
push
mov
movsl
leave
pushl
jbe
out
pop
aad
in
sti
in
push
sub
jecxz
cmpsb
imul
decl
xchg
mov
popf
adc
push
xlat
cmpsl
insl
pop
pcmpgtw
je
filds
sub
mov
lock
iret
push
sub
mov
adc
inc
cmp
addr16
decl
and
aaa
lock
inc
ljmp
mov
scas
das
inc
int3
mov
xchg
in
movsl
cli
add
test
dec
sub
js
and
xchg
and
mov
icebp
out
mov
pusha
ss
xor
xorl
mov
sub
lods
push
ret
add
cld
or
push
in
xchg
mov
nop
jg
call
pop
xchg
jae
push
mov
or
adc
cmpsb
popa
das
or
call
cld
jmp
push
jno
or
int3
mov
and
lahf
fwait
cmpsl
stos
push
sub
test
test
pushl
pop
or
mov
add
out
mov
dec
clc
mov
mov
loopne
inc
popf
and
push
mov
in
scas
clc
pushl
xchg
mov
pop
jae
xor
idivl
xchg
loope
call
add
pushf
aam
push
inc
push
daa
cmp
mov
xlat
icebp
or
dec
repnz
mov
call
lcall
in
mov
adc
add
insb
pop
gs
jo
add
cld
adc
pop
call
sbb
repnz
stos
and
sahf
bswap
lcall
lcall
xor
lds
push
lret
loope
out
fstl
dec
pushf
cmp
add
push
jnp
mov
pop
jl
aas
ret
outsb
xchg
test
push
incl
movsl
insl
leave
mov
add
pop
cltd
mov
cmp
loop
ljmp
mov
int3
test
lret
fistps
mov
movsb
fbstp
test
lods
lret
sbb
push
les
ljmp
insb
fld
cld
push
push
mov
fnstcw
sub
ljmp
int
pop
int3
mov
push
sub
cmpsl
shrb
scas
outsb
stos
mov
aad
jae
insb
popa
or
out
pop
stc
xchg
pushf
rcr
test
mov
cmp
xor
jbe
clc
pop
mov
aad
lahf
mov
movsl
sub
or
mov
and
fs
lea
cmp
int
dec
fisttps
aaa
adc
mov
sub
es
hlt
daa
jb
adc
clc
decl
xchg
pop
add
mov
pop
orb
fldenv
xchg
mov
mov
mov
incl
pop
stos
enter
arpl
imul
ds
jg
pop
mov
adc
lret
data16
xchg
data16
sbb
out
decl
pop
les
inc
lea
adc
lock
cmp
jecxz
in
xchg
adc
jl
out
mov
and
pop
and
push
ljmp
adc
push
ljmp
fdivrp
push
or
jle
outsb
int3
or
sbb
cld
ljmp
sbb
enter
and
in
fisttps
mov
mov
dec
adc
xchg
test
xchg
jne
mov
jmp
fldt
aam
shlb
dec
jmp
or
repnz
jmp
or
dec
stos
jmp
aas
lret
ret
sub
mov
push
cmp
xchg
pop
add
movsl
sbb
jecxz
pop
sub
decl
enter
jge
dec
lods
pop
imul
jno
lcall
dec
decl
push
mov
arpl
cs
into
or
call
dec
cmc
mov
mov
inc
std
cltd
sbb
ljmp
cmp
jmp
jns
sbbb
ret
in
cwtl
cs
dec
cmp
push
mov
xchg
mov
repz
int3
es
lock
out
sbb
cmpsb
call
fldt
sbb
lcall
out
sbb
adc
xchg
pop
pop
test
xchg
or
stc
dec
push
cmp
stos
mov
decl
lahf
xchg
cmp
ficompl
add
leave
mov
orb
pop
and
decl
cli
pop
mov
sub
lret
out
adc
cmp
mov
inc
and
mov
jl
push
cmp
pusha
push
xchg
push
push
fisubs
push
test
jmp
inc
iret
push
add
ja
mov
in
pushf
and
mov
xor
outsl
lret
mov
in
xchg
or
fwait
and
loope
pop
jmp
fnsave
cmpb
js
loope
mov
xchg
or
xor
fistl
scas
dec
or
sub
call
pop
cmc
dec
shll
dec
call
cld
in
mov
dec
loop
or
inc
xchg
fcomps
and
ljmp
mov
into
xchg
pop
test
push
push
and
cmpsb
push
mov
sub
movl
or
inc
rol
xor
sti
sub
les
and
jg
shl
xchg
push
adc
stc
dec
or
ljmp
je
and
cmpsb
mov
in
outsl
add
ljmp
fs
inc
scas
pop
cmp
into
mov
lods
aas
adc
stc
jb
call
adc
add
in
in
shr
adc
adc
jmp
mov
dec
pop
cmpsb
mov
shrl
aam
lea
and
pop
and
mov
push
inc
test
cmp
in
insl
and
leave
jl
dec
insl
jl
mov
out
and
data16
xchg
mov
and
call
or
add
mov
ljmp
jle
inc
cmp
mov
repnz
add
lret
pop
sbb
inc
push
dec
mov
outsb
fst
das
jbe
xchg
xor
xchg
in
clc
stc
call
pop
lcall
test
xor
decb
cmp
roll
arpl
movsl
sbb
mov
decl
mov
jo
mov
add
loopne
dec
push
daa
inc
imul
incl
roll
inc
push
aas
mov
push
lods
outsb
mov
cs
xor
shrl
std
pushl
jae
fstpl
rcrb
jns
mov
decl
sub
add
out
testl
std
inc
dec
mov
std
push
mov
xchg
jg
sar
or
cltd
dec
stc
enter
mov
lret
and
push
add
lcall
lret
dec
sti
xchg
jecxz
adcl
lahf
add
cmp
ja
xchg
jmp
out
add
popa
mov
ljmp
nop
movl
sbb
cmc
inc
mov
fcmove
push
rcll
test
mov
dec
mov
lcall
fcoms
js
or
dec
and
sbb
cmp
shlb
call
ds
and
pusha
in
add
mov
adc
mov
clc
pushl
fnsave
cltd
andl
jo
int3
add
incl
fisubl
pop
mov
mov
fimull
xchg
mov
mov
xor
jne
pusha
cld
decl
sub
mov
jns
das
mov
push
inc
xor
jg
dec
inc
jle
sub
cmpsl
insl
mov
sbb
cwtl
adc
and
test
lret
ljmp
dec
out
adc
pop
jmp
sbb
les
mov
sbb
call
movsl
lahf
xchg
popa
mov
scas
stc
xor
jg
out
inc
cli
pop
loop
scas
sbb
fimull
and
scas
xchg
lea
in
call
int
lock
push
push
das
mov
loope
js
push
push
mov
push
ljmp
in
cmp
or
mov
loopne
mov
sahf
rclb
mov
test
test
decb
jmp
or
lock
out
xor
pop
orb
scas
cs
aam
decl
pop
sub
int3
push
repnz
sub
notl
jno
xlat
movsl
mov
fwait
rolb
jmp
sbb
adc
out
ficoml
out
mov
pop
and
push
sbb
ljmp
cli
mov
mov
xor
popf
inc
cmp
push
es
push
jae
ret
mov
decl
jmp
jge
sysenter
aad
push
jns
icebp
add
rol
sub
sub
incl
fistpl
cmp
sbb
or
imul
push
fs
xor
mov
mov
lcall
movsb
scas
inc
pop
or
imul
inc
push
bsf
repnz
lcall
mov
int
sub
lcall
xlat
xchg
call
fucomp
push
lcall
stos
dec
orb
test
clc
in
mov
popa
dec
cmpsb
mov
mov
out
test
je
and
in
xchg
adc
or
xorb
jbe
incl
lahf
mov
jmp
jge
outsl
xor
mov
test
das
pop
fwait
mov
aad
lcall
stos
std
sub
adcl
pop
adc
decl
neg
add
lea
mov
rclb
pop
clc
in
xor
fstpl
cld
jne
int
frstor
xor
push
push
mov
sub
cld
ljmp
maskmovq
xchg
mov
xchg
push
jmp
aam
mov
das
sar
dec
sbb
lcall
mov
addr16
sahf
les
or
lcall
jnp
adc
enter
jo
push
sub
pop
test
mov
test
test
ljmp
leave
in
fcoml
test
loopne
jg
jnp
mull
jle
clc
ljmp
ss
mull
jae
in
and
xchg
test
shll
xor
lock
ljmp
xchg
insb
pop
or
clc
dec
inc
movsb
fistps
pop
push
sub
lds
out
es
lods
je
and
add
push
mov
xchg
jle
inc
adc
xchg
mov
mulb
out
std
insl
lcall
call
or
dec
popa
jno
sahf
cmpsb
out
call
sbb
loope
push
adc
xchg
cmpl
movsl
dec
aaa
mov
mov
cmpsl
mov
test
inc
adc
in
push
cmp
lods
push
ja
mov
lcall
push
mov
aad
pop
int
jb
xor
push
mov
mov
jmp
inc
dec
add
pop
or
xchg
mov
and
fistpll
mov
rol
cmp
fildll
inc
test
cmc
jp
ljmp
loopne
dec
pop
fucomi
jmp
xchg
add
dec
pushl
mov
je
cmpsb
ret
enter
lds
lods
add
ljmp
mov
fstps
je
adc
repz
mov
shlb
rorb
leave
popa
in
fcos
mov
js
shll
fucom
add
ret
mov
out
sub
daa
sub
mov
pop
mov
dec
pop
push
xchg
fs
pop
nop
adc
pop
int3
lock
inc
xor
mov
je
iret
jecxz
out
stos
bound
xchg
xor
sarb
jp
lret
je
insb
push
in
jmp
adc
push
pushf
add
cs
imul
xchg
adc
pop
imul
dec
sti
fwait
psllq
loope
jge
push
out
or
lcall
loope
sbb
fists
mov
in
adc
sti
nop
out
and
aam
call
push
and
scas
jne
orl
pop
bound
cmc
and
fwait
mov
mov
or
xchg
jb
and
mov
inc
lock
mov
xchg
push
pop
cld
fisttps
leave
pop
js
add
dec
push
push
pop
cmp
jle
addb
pop
ss
push
notb
lea
fdivrs
push
icebp
lcall
stc
loopne
dec
mov
dec
jns
xchg
sbb
pusha
add
push
incl
testl
cmp
fldcw
aaa
jge
jnp
adc
mov
sbbb
subl
mov
mov
and
gs
mov
mov
nop
loope
loope
nop
fdivr
out
repnz
sbb
sbb
aas
dec
xor
and
imul
mov
xchg
push
cli
fidivs
dec
sarb
out
movb
pop
push
mov
or
sbb
jno
aam
mov
sbb
dec
sar
out
lock
jmp
lret
out
scas
or
out
xchg
bound
inc
pop
and
pusha
push
ljmp
sbb
mov
add
dec
jle
lcall
mov
push
jno
cmp
pop
or
pop
inc
cmp
adc
mov
std
cmp
daa
in
ljmp
lret
ja
sbb
fcoms
mov
cli
add
iret
mov
sbb
sbb
cld
popa
daa
icebp
jmp
jnp
xor
dec
xchg
shrl
add
outsb
mov
stos
movsb
ds
lcall
daa
movsl
fdivrp
call
cld
push
cli
enter
jmp
aaa
ret
sahf
ljmp
fwait
outsb
nopl
add
mov
mov
idiv
pop
adc
fldl
jmp
sarb
cwtl
xchg
and
mov
push
fyl2x
push
ret
jne
inc
sarl
sub
ljmp
sbb
out
mov
arpl
pushf
divb
push
adc
xorl
sub
shr
sbb
incl
push
dec
fwait
push
mov
sub
mov
cmp
sub
cmpb
stos
loopne
fwait
dec
mov
cmc
xchg
mov
mov
inc
sti
test
out
enter
nop
dec
sar
pop
push
lods
and
dec
pop
mov
out
mov
mull
lahf
cltd
divl
xor
ljmp
addr16
pop
call
adc
ds
sub
xchg
cmp
outsb
mov
out
es
dec
in
movsb
dec
in
dec
inc
fwait
inc
xor
cmpsl
push
idivb
or
test
cmp
fcoms
cli
cmp
and
sub
jecxz
adc
ss
jg
in
fdivl
outsl
pusha
push
rcl
and
add
push
adc
jbe
movsb
ret
aas
mov
lods
sub
or
pop
test
js
xchg
jae
adc
ss
decl
xchg
mov
clc
dec
sub
sbb
or
mov
lods
enter
icebp
movsb
xchg
ljmp
lret
shrb
adc
jbe
pushf
xchg
or
cmp
sti
or
idiv
ljmp
lcall
lcall
xor
fcompl
cld
inc
cmpsb
cmp
adc
dec
test
gs
bound
mov
enter
pushl
mov
cmpl
push
or
push
or
js
add
lret
outsl
cli
es
fadd
adc
dec
jmp
mov
cwtl
test
in
daa
mov
call
js
mov
xor
xchg
or
mov
jae
es
dec
dec
out
ficoms
jmp
aam
mov
pop
cwtl
lock
pop
rolb
push
aas
lds
sbb
pusha
icebp
mov
pop
add
out
repz
cwtl
cmpsl
xchg
aam
mov
lcall
js
fdivr
adc
lahf
push
or
xor
mov
pushl
pop
mov
lods
fidivs
inc
jp
and
push
hlt
cmp
stc
dec
xlat
xchg
in
stc
pop
repnz
jmp
cltd
std
or
movsb
sbb
push
fimuls
leave
jbe
pop
xor
add
loope
mov
jle
jg
push
subl
fwait
into
mov
and
pop
pop
inc
aad
cmp
push
jg
lcall
shrl
pop
mov
mov
dec
mov
or
clc
call
xchg
xchg
dec
xchg
mov
inc
stos
mov
lahf
ljmp
push
mov
pop
aas
std
in
jno
or
jl
pop
dec
ret
fdivs
rolb
jmp
jne
lcall
popa
mov
cmc
dec
push
mov
jnp
adc
in
insb
stos
and
and
jmp
mov
ja
jle
fs
pop
dec
call
std
add
sbb
leave
push
xor
in
mov
mov
aad
xabort
daa
loope
cmp
pushl
adc
mov
mov
and
mov
inc
push
popf
dec
loope
mov
clc
or
xor
jmp
notb
ret
fisubs
push
gs
cltd
fcompl
jb
decl
jbe
int
rorl
addl
int
or
cmp
add
incl
xchg
smsw
movsb
js
mov
out
testb
int
push
mov
sti
mov
call
xor
icebp
in
xor
cmp
jo
out
dec
int
fs
incl
fcom
xchg
cwtl
cmp
push
mov
xchg
inc
mov
sbb
inc
or
fildll
jecxz
jl
xor
jns
jnp
and
mov
lcall
loope
xlat
or
xor
insl
ret
push
stos
andl
and
jo
adc
xor
push
aad
xor
iret
xlat
inc
sbb
test
cmp
fstpl
test
gs
lret
loopne
int
lahf
xor
stc
sahf
pusha
jb
lcall
sbb
sti
lea
add
in
pop
std
pusha
in
loop
daa
pushf
lea
incl
jmp
int3
jo
dec
and
xchg
cmpb
cmp
fdivrs
pop
stos
mov
ficomps
gs
cmp
es
dec
scas
fbstp
cmp
and
xchg
mov
dec
movsb
lret
inc
mov
push
mov
sbb
pushl
fdivrp
dec
push
ficomps
sarb
scas
dec
mov
in
lahf
jp
xorl
stos
nop
clc
call
mov
jb
xlat
and
pcmpgtb
add
cmp
es
or
call
leave
sbb
int
add
out
scas
stos
repnz
mov
push
dec
dec
mov
add
pop
les
lods
push
enter
js
sbb
inc
push
repz
mov
insb
push
sbb
fcmovu
mov
clc
fs
add
popf
pop
jne
mov
call
clc
mov
fs
aad
pop
pop
sub
in
sar
and
test
dec
loope
sbb
add
sub
ljmp
and
addl
adc
push
and
cltd
ljmp
fsubs
and
and
imul
aas
das
fwait
push
pop
add
cmp
ljmp
push
inc
ficoml
or
cmp
ds
mov
mov
les
inc
lea
jbe
add
incl
fdivs
cmpsb
xchg
mov
jecxz
lea
lret
mov
je
adc
jg
jno
int
xor
loop
mov
pop
loopne
jno
addb
mov
iret
fwait
jb
div
repnz
mov
shlb
sbb
mov
mov
dec
adc
loop
add
lcall
cmp
jle
inc
xor
mov
sbb
push
push
into
xor
push
call
mov
outsb
pop
data16
imull
divb
clc
bound
inc
lahf
sbb
xchg
cmp
test
test
icebp
dec
test
outsl
mov
out
rol
movsl
cli
fbld
int3
loope
hlt
hlt
fidivl
inc
mov
dec
or
cmpsl
mov
push
sub
das
mov
popf
cli
fsub
iret
pop
sub
scas
dec
add
ljmp
mov
jge
sbb
movsb
adc
cld
sti
outsl
repz
jmp
pop
push
jns
in
xor
in
mov
inc
fucomi
adc
sub
inc
jno
add
mov
rorb
mov
mov
inc
xchg
or
int
push
mov
loop
cmp
cmpsb
jl
clc
lret
in
out
fisubl
jge
cld
popf
fisttpl
lret
push
in
or
incl
cltd
or
xchg
out
add
jno
sti
fcmovnu
sub
inc
mov
outsl
ljmp
mov
mov
xor
iret
rcrb
jle
adc
cmp
lcall
mov
in
dec
arpl
mul
pop
and
int
scas
push
lods
cltd
push
loope
cmpsl
sahf
or
decl
mov
fsubrl
aaa
clc
rclb
adc
imul
pop
lret
repnz
pushl
lock
clc
jb
mov
add
lret
push
inc
rcll
sub
sbb
cmp
jb
push
sub
mov
in
rdtsc
sbb
mov
xlat
shr
aaa
std
dec
imul
int3
cmp
aas
enter
add
mov
dec
inc
sbb
push
jmp
repnz
mov
iret
iret
mov
jne
xor
pusha
movsl
dec
jecxz
mov
sbb
ror
sub
ret
add
inc
push
xchg
jg
lcall
pop
les
or
int
nop
jo
leave
mov
ljmp
jmp
jnp
movsb
movsl
xchg
lret
nop
fs
jge
or
out
scas
scas
xchg
inc
ja
adc
mov
decl
out
sbb
and
fldcw
in
pusha
imul
incl
aaa
mov
lahf
cs
mov
int3
jb
movsl
pop
add
sub
incl
enter
sub
fsubl
test
icebp
add
inc
pushl
inc
mov
imul
push
sarl
daa
dec
arpl
push
xlat
loop
pushf
rcrl
jmp
or
inc
jno
jne
enter
mov
jns
insl
sbb
xor
pop
lcall
pop
fwait
xchg
pop
xor
jb
pushf
sub
and
xchg
fistpl
ljmp
int
fs
mov
dec
or
loope
ljmp
push
push
sar
pop
jno
fsubs
fs
mov
jmp
lret
xlat
xchg
mov
test
psrad
pop
imul
rcll
rcrb
arpl
js
dec
or
cwtl
ljmp
into
or
leave
push
sbb
adc
dec
ret
push
scas
fwait
add
test
or
outsl
mov
mov
dec
rclb
test
incl
cs
and
je
lds
mov
call
sub
call
pop
sahf
sbb
adc
hlt
mov
jae
pminub
fsubrl
addr16
jno
mov
pop
aad
mov
fiaddl
xor
jl
xor
jne
sbb
sub
incl
je
out
loop
mov
pop
or
repz
fcomps
push
pop
fstl
hlt
outsl
decl
cmp
fnstenv
addr16
push
xchg
test
jbe
or
jl
mov
jecxz
add
pop
out
jecxz
jae
fildll
gs
int
xor
aaa
push
ret
xchg
pop
insb
int
mov
ljmpw
lahf
lock
or
es
je
cmp
push
sub
popa
mov
sub
std
decl
or
mov
orb
test
push
loopne
dec
hlt
adc
mov
stos
lcall
add
lahf
call
ss
mov
sbb
pushf
jne
rorl
xor
inc
add
ljmp
push
stos
arpl
ja
mov
scas
fcmovnu
xchg
xchg
lods
push
add
and
jmp
dec
cwtl
jge
jecxz
lock
xchg
lcall
daa
rclb
mov
ret
ret
cmp
xlat
pop
mov
nop
sbb
push
lahf
mov
arpl
pushl
sbb
cmp
mov
iret
jnp
outsb
adc
ror
dec
shl
hlt
aas
jb
add
cmc
std
lahf
stc
jl
bound
mov
sbbb
mov
dec
sbb
bound
cmpb
in
in
shrb
mov
inc
gs
cs
jg
sub
jmp
pop
inc
sub
insb
hlt
sbb
cmpsl
decl
push
lcall
sahf
mov
dec
jnp
sbb
stos
out
jne
mov
incl
in
ret
je
xor
mov
adc
fwait
ret
fucompp
leave
aam
clc
push
inc
mov
decl
pusha
inc
mov
int3
mov
in
ss
lea
ss
ljmp
mov
ss
jmp
push
mov
roll
xor
xlat
sub
ja
fwait
stc
add
decl
and
jg
sbb
jl
fsts
out
clc
mov
in
arpl
sahf
mov
cmp
cmpsb
mov
in
lcall
cwtl
jl
das
inc
xchg
jns
adc
mov
lret
inc
jmp
ds
repnz
pop
repnz
arpl
lret
in
lret
inc
cmpsl
sbb
fbstp
lcall
and
or
mov
lcall
xchg
or
test
lods
add
xchg
mov
aaa
insb
pop
into
pop
hlt
jbe
mov
lcall
ja
paddusw
outsl
sbb
xchg
xor
outsb
mov
sbb
scas
fisubl
xor
stos
loope
mov
sbb
stos
insl
xchg
addr16
rcr
pop
shlb
mov
push
xor
fisubrs
cwtl
fnstenv
shr
adc
ret
imul
xchg
jmp
jno
ljmp
add
mov
fdivs
mov
scas
push
push
xchg
adc
cwtl
sar
mov
adc
fisttpll
loope
cmc
xor
mov
sbb
das
addb
inc
xor
mov
pop
stc
incl
lcall
jmp
push
pop
rolb
ja
xlat
or
jmp
mov
cld
pop
fwait
mov
das
arpl
test
incb
and
or
add
pushl
rcrb
jg
rolb
aam
stos
jne
jns
and
std
call
mov
dec
cmp
int3
cmp
sbb
pop
pop
mov
iret
in
leave
sbb
ljmp
inc
xchg
pop
adc
cld
jl
xchg
clc
fisubs
pop
pop
xchg
and
sub
push
aad
lods
sbb
lds
cli
or
in
xlat
push
pop
fs
dec
shrl
mov
or
gs
mov
push
aad
cmp
pop
int3
mov
fildl
pop
cld
lcall
aas
repnz
inc
adc
sub
inc
int
xor
cmp
loope
jmp
aas
push
jl
dec
mov
sub
je
imul
mov
or
loop
push
mov
jns
or
mov
cmp
sub
pop
pop
ljmp
xchg
or
jle
icebp
fistpl
push
scas
shl
cmp
jmp
mov
lds
mov
sahf
lahf
jnp
push
arpl
pushf
push
mov
ljmp
nop
fldenv
addr16
pushf
and
lock
push
mov
daa
and
ss
jne
ljmp
rolb
scas
cmp
and
insb
mov
mov
mov
dec
dec
sub
test
jns
pop
call
lcall
test
orb
mov
in
aas
lret
jecxz
xor
ljmp
cmp
and
jo,pt
movsb
in
push
sbb
enter
jecxz
cwtl
je
and
aas
cmp
or
dec
mov
push
sub
gs
cmp
test
cmpsl
sub
push
jp
decl
mov
scas
shlb
jp
add
sbb
aas
sbb
pop
push
adc
jmp
mov
lahf
cwtl
lahf
xor
mov
inc
pop
xor
mov
mov
xchg
pop
and
pop
sbb
bound
call
fimull
bnd
iret
jecxz
adc
add
fs
call
sbb
dec
add
shrb
out
ret
enter
and
mov
fcomip
call
mov
int3
mov
xchg
push
into
xor
popf
stos
push
pushl
aaa
or
and
mov
jg
xchg
push
or
lods
cmc
testl
mov
fldcw
mov
xchg
ret
or
das
insb
and
and
out
xor
cmpsl
lret
adc
push
sub
std
incl
cld
outsl
inc
fcmovnu
pop
sbb
dec
out
xchg
fdivs
cld
outsl
cmp
fisubrl
call
in
sahf
cmp
negl
sbb
mov
decl
or
sti
les
dec
jne
pop
scas
negb
mov
repz
int
nop
mov
cmp
adc
and
hlt
jmp
jmp
xor
mov
push
lods
fistpl
outsl
add
daa
push
subl
les
pop
sub
in
jo
lcall
pushl
popw
inc
xor
testb
pop
rcll
cmp
fmull
sub
lcall
mov
out
mov
orl
icebp
addb
outsb
inc
fidivl
mov
pop
repz
mov
in
ljmp
sub
loop
mov
aam
lds
adc
push
or
inc
call
xchg
jne
push
mov
mov
jnp
into
push
inc
or
cld
sahf
xchg
popa
jp
push
cmp
mov
cmp
mov
ljmp
lcall
stc
xchg
mov
fisubl
mov
sub
sub
cmp
xchg
cs
jg
iret
ret
push
mov
ficomps
ss
jp
pop
xchg
jb
jbe
cld
push
dec
inc
pushl
vpmulhw
pop
pop
and
inc
aam
insl
dec
cmp
lds
out
xchg
or
clc
das
sar
aaa
fildl
int
xchg
xorb
inc
push
jne
in
or
fcompl
jle
inc
mov
mov
add
fcompl
push
je
bound
les
call
enter
pop
push
and
sub
out
jb
pushl
pop
push
xor
jb
or
adc
push
lret
arpl
jmp
add
incl
sbb
xor
daa
xchg
jne
shlb
mov
cmpl
xchg
mov
cmp
sbb
jl
lock
adc
in
jmp
xor
std
outsb
xchg
mov
or
fneni(8087
xchg
xchg
pop
jae
sub
add
mov
pop
pop
dec
test
pop
push
or
pusha
cli
xor
out
es
push
xchg
out
scas
push
jg
idivl
dec
ret
mov
lcall
test
xchg
nop
lret
cmp
inc
test
jmp
jp
sbb
xchg
movsb
loop
gs
incl
sbb
cltd
ret
daa
fs
pop
push
sarb
adc
cmp
push
andl
sbb
bound
dec
icebp
repz
push
cmp
out
in
mov
jb
orb
incl
sbb
lret
jne
roll
out
orl
call
es
sbb
stc
fisubrs
xchg
mov
fwait
pop
shrb
loope
dec
aaa
inc
add
int3
lahf
into
mov
ljmp
sbb
dec
dec
ret
push
mov
push
dec
xchg
stos
xchg
lea
cmpsl
mov
std
and
psubusb
movsl
push
or
sub
fdivr
call
insb
ss
sbb
mov
pop
push
xchg
cwtl
flds
jg
mov
or
xchg
mov
add
inc
popa
out
clc
incl
imul
mov
mov
add
lods
iret
jmp
adc
shll
fs
and
dec
or
sti
outsb
loope
and
xchg
mov
aam
arpl
les
xchg
mov
mov
fdivp
cmpsl
dec
dec
fstpl
adcb
outsb
or
sbb
leave
fdivr
stc
adc
test
rol
pop
mov
ss
cs
sti
mov
add
pushl
and
mov
stos
xchg
std
aaa
bound
ljmp
ds
pop
outsl
jnp
out
jl
incl
aaa
in
push
xchg
jns
stc
xor
cltd
mov
lods
or
adc
inc
sub
inc
cli
sahf
leave
xchg
inc
mov
call
faddl
sbb
fildll
int3
cs
jne
cmp
cmp
pop
ljmp
cmp
roll
xchg
sub
mov
imul
sbb
cmp
inc
inc
fldt
jge
rclb
dec
add
outsl
inc
fists
sarb
push
adc
mov
pop
nop
stos
sub
mov
jl
push
js
push
repnz
xchg
xchg
add
sahf
repnz
mov
mov
pop
inc
call
adc
xchg
cli
sbb
std
ljmp
mov
mov
inc
sub
inc
filds
rclb
clc
incl
mov
jle
cmp
cmp
leave
pop
mov
lret
in
push
mov
pop
scas
rcrb
add
movsb
fdivs
pop
adc
mov
add
add
lret
lods
mov
es
xchg
rorb
call
mov
lock
and
pop
ret
rcrl
iret
push
fnstsw
out
shrl
mov
dec
leave
dec
and
cltd
je
jmp
mov
inc
jecxz
cmp
pop
fdivl
xchg
test
popa
adc
mov
in
cmpsb
sub
sub
ljmp
sbbb
mov
and
add
xor
pushl
pop
ds
mov
dec
or
mov
pop
xchg
arpl
mov
out
adc
adc
sub
in
jl
lods
mov
lcall
inc
jnp
mov
adc
sub
out
lahf
pop
jo
test
mov
call
cmp
insb
or
movsb
lret
out
mov
pop
xchg
cmp
dec
xor
mov
push
lods
sbb
lcall
xchg
rcll
jle
pushf
daa
xor
enter
in
dec
testb
mov
mov
mov
lcall
fcomi
push
or
dec
shll
push
cmp
mov
jmp
daa
cmp
mov
rorb
dec
adc
clc
add
es
or
mov
sub
call
pop
push
stc
mov
inc
jns
sub
js
mov
out
cli
call
test
pushf
cli
fsubrl
aam
xor
adc
fs
xchg
mov
adc
jno
sti
cmp
loopne
movsl
lcall
in
sub
sar
jg
push
sub
fdivp
jge
mov
push
jae
xchg
lret
iret
outsb
or
cltd
loopne
and
push
fistl
lods
and
lcall
lds
out
hlt
or
adc
rcll
fdivr
add
cli
mov
inc
movd
cmpsb
cli
inc
ret
mov
mov
int
mov
out
mov
lods
sbbl
jmp
cmp
scas
addr16
das
and
xlat
add
int3
pop
cltd
pushf
or
leave
out
call
cs
dec
dec
and
xchg
push
repz
sahf
pop
add
idiv
jmp
rorb
jmp
js
lcall
int
filds
lock
es
bound
je
jge
pop
call
fadd
jae
test
leave
std
xchg
push
adc
push
in
stos
cld
fnstsw
cmp
jmp
or
gs
push
sub
jb
ret
jmp
ljmp
out
ja
int
push
insl
xchg
gs
mov
data16
fildl
mov
aaa
cld
pushl
adc
mov
mov
sub
hlt
and
jmp
fisubl
iret
sti
cli
aam
mov
xchg
jg
sti
in
jp
leave
out
incl
sar
sub
nop
clc
mov
sti
mov
outsb
pop
cli
cld
jge
int3
adc
and
pushl
je
mov
cmp
mov
pop
jno
test
into
jns
pop
test
and
push
and
filds
leave
sub
mov
add
cmp
pushl
pop
fidivrl
cld
xorb
pop
pop
or
das
test
outsl
cmp
jl
je
adc
pushl
pop
mov
scas
lret
into
and
icebp
cmpsl
test
imul
inc
lret
shlb
jns
lahf
andb
loope
iret
xchg
or
data16
sub
mov
adc
fisttps
or
int
sub
dec
test
mov
in
fimull
daa
push
mov
scas
or
and
jnp
nop
into
mov
mov
xchg
lahf
int
popa
mov
xor
pop
rcrl
cltd
xchg
sub
cmp
cmp
lcall
loop
cmp
scas
into
rcrl
dec
in
sti
je
push
cld
xchg
fists
bnd
xor
cltd
jl
icebp
rorl
insl
pop
add
test
ljmp
mov
lods
inc
xorl
mov
movsb
xchg
fs
xorl
adc
xchg
ja
and
and
jmp
xchg
pop
pop
xchg
mov
push
xchg
jne
fistpl
push
jle
add
and
jno
sub
jg
pop
cmpsb
clc
mov
iret
push
int
jae
mov
out
lcall
add
inc
adc
inc
pop
mulps
inc
fldt
or
mov
and
shr
push
dec
imul
inc
daa
add
lcall
pop
xchg
adc
mov
mov
ljmp
cmp
pop
insl
jns
je
scas
addl
xchg
fnsave
shlb
fists
stc
clc
es
mov
fsubp
sahf
pusha
cltd
in
outsl
ljmp
insl
bound
test
ja
dec
cmp
and
mov
jmp
xor
cmp
sub
mov
push
or
mov
jo
lods
stos
or
sbb
mov
xchg
mov
mov
stos
jb
push
jle
cmpsb
mov
and
scas
nop
xchg
sbb
rorb
sub
xor
ret
lahf
incl
sub
pusha
data16
add
mov
push
jge
mov
push
aad
dec
lahf
push
loope
call
incl
cmp
fucom
mov
cmp
popa
sahf
stc
inc
mov
xchg
pop
nop
insb
sbbl
scas
call
and
out
mov
imul
es
hlt
jns
mov
push
out
xor
popa
mov
ljmp
loope
movhlps
or
ret
cmp
jle
out
mov
cmp
adc
sbb
jns
iret
repnz
decb
xorl
jns
out
inc
or
mov
pusha
lock
jmp
nop
je
jecxz
and
shl
push
js
fisubrl
mov
and
outsl
cli
fistps
mov
call
mov
push
or
mov
mov
inc
add
jl
jecxz
cmp
daa
cmp
in
sub
fldln2
stos
mov
loope
jmp
dec
test
fwait
jecxz
ror
jg
stos
orb
add
jne
and
xchg
mov
subb
bound
lret
outsb
mov
jns
aam
fwait
add
xchg
nop
mov
mov
sahf
icebp
inc
mov
pushl
cmpsb
icebp
cwtl
shrl
popa
add
sub
daa
repz
mov
or
pop
movb
inc
cli
int
daa
sbb
push
fistl
and
incl
leave
gs
daa
out
mov
cs
adc
xor
popa
cmpsl
inc
int3
ud0
mov
and
lcall
pop
sub
add
xor
leave
lahf
mov
inc
sbb
mov
adc
ret
mov
fsub
in
incl
sbb
push
jae
test
dec
and
sbb
in
ds
js
ljmp
mov
push
cmp
dec
inc
das
or
loopne
push
test
repnz
xchg
repnz
flds
mov
or
inc
push
pop
xchg
jb
cmp
inc
int3
mov
icebp
jmp
add
xchg
sbb
mov
pop
push
xor
ljmp
add
inc
jg
sbbl
pop
shlb
scas
lahf
stos
push
gs
inc
arpl
xor
fwait
or
sub
add
and
adc
xchg
fistpll
inc
test
jle
sbb
sbb
div
ja
cli
xchg
jbe
stc
test
stos
xor
lock
mov
fistpll
xchg
cld
xlat
js
hlt
dec
cli
push
sbb
or
and
lcall
in
add
hlt
jp
mov
ljmp
xor
ret
push
fstp
pop
decb
popf
lret
add
lock
jne
js
das
pop
je
cmpsb
adc
out
mov
xchg
sub
mov
cmp
pushf
clc
ret
sbb
subl
add
mov
mov
fidivrs
mov
push
jmp
loop
mov
ljmp
push
adc
jge
cld
in
jne
add
push
cmp
sti
adc
data16
sub
sbb
call
push
out
mov
ljmp
iret
add
mov
mov
jmp
dec
test
rcl
lock
dec
jmp
lahf
mov
stos
inc
nop
in
lret
sbb
and
xor
mov
lock
daa
fsubrl
mov
cmc
dec
test
sbb
shlb
cld
and
or
out
and
lcall
arpl
imul
mov
mov
sbb
and
push
xchg
lahf
mov
jb
sub
cld
incl
icebp
push
lods
jo
pushf
xorb
int
icebp
shlb
cmp
ja
pop
add
pop
adc
mov
orb
xor
arpl
out
push
mov
fcoml
lret
sahf
push
pop
or
push
sbb
or
pop
scas
xor
jne
dec
pop
mov
mov
in
js,pn
and
loope
aad
fmuls
mov
cmp
ljmp
cli
sti
pop
mov
stc
js
fdiv
stc
scas
push
jg
movsb
ficomps
add
inc
mov
inc
test
hlt
lret
mov
stos
xor
leave
sub
and
cmc
adc
stc
ja
or
sbbb
mov
cltd
dec
lock
mov
call
outsb
mov
faddl
es
inc
mov
xchg
in
inc
xlat
aam
xchg
sbb
nop
sbb
cli
mov
xor
cli
or
stos
pusha
push
mov
in
sbb
adc
cltd
xlat
jmp
sbb
inc
dec
jge
add
sahf
int3
rcrb
jns
mov
xor
and
call
mov
push
jge
iret
cmp
mov
mov
sub
es
mov
push
push
lock
ljmp
mov
sbb
shll
and
inc
clc
xlat
adc
incl
fsubr
pop
test
mov
ljmp
add
lock
ret
out
pop
shr
xor
adc
push
mov
cmp
push
adc
cmp
cmc
gs
bound
push
dec
push
cmp
loope
sub
jno
pop
or
dec
aad
jmp
sbb
fmul
mov
and
rorl
cmpsb
lock
add
arpl
cmp
push
int
das
clc
dec
push
or
mov
sub
ds
pop
out
lcall
push
sub
outsb
test
push
mov
loopne
push
dec
xlat
sbb
call
add
jecxz
lds
int3
inc
mov
inc
cmpsl
cwtl
iret
mov
addr16
stc
pop
jmp
jno
mov
shld
push
sbb
inc
sbb
jb
hlt
sbb
dec
cmp
incl
mov
adc
or
mov
jmp
movsl
push
jge
jo
frstor
mov
frstor
inc
and
ljmp
fdivp
cli
dec
or
push
push
fbld
in
negb
int
test
mov
fucomip
pop
sarb
and
sbb
bound
repz
outsb
jmp
pushl
mov
jb
loope
mov
cltd
lods
aam
xchg
xor
cwtl
push
sti
push
lret
inc
jmp
idivl
jge
inc
int
pop
and
pop
insb
mov
jmp
push
mov
pop
sbbb
call
lret
push
dec
loope
loope
adc
insb
mov
pop
inc
sbb
decl
aaa
and
or
into
out
push
push
dec
add
scas
lsl
daa
stos
aam
loopne
or
jmp
or
push
bound
mov
andb
mov
vpsubb
repz
fiadds
daa
into
push
or
push
movsb
lcall
mov
lret
xor
dec
inc
pop
and
popl
ljmp
loopne
dec
fnstenv
sbb
incl
sbb
shlb
repz
sub
add
dec
adc
in
int
jp
out
stc
call
xchg
push
mov
adc
fdivp
mov
test
xchg
sub
gs
jne
add
push
or
decl
rcrl
lds
aad
rcrl
inc
pushf
add
sarb
or
jmp
pop
lea
mov
or
daa
or
lock
pop
iret
rcrl
incl
fdivr
pop
rclb
scas
roll
data16
add
scas
data16
mov
add
jnp
jl
dec
xchg
xchg
idivb
aaa
mov
push
add
call
push
jmp
je
into
cmp
lcall
lock
dec
push
push
sarb
add
add
adc
mov
jnp
orl
jg,pt
adc
or
pushf
dec
in
pop
andb
inc
fsubs
xchg
push
aam
mov
fmulp
xor
and
xor
pop
jae
pop
inc
push
mov
ds
negl
out
mov
xchg
loopne
leave
repnz
mov
idiv
mov
cmc
stc
xor
push
leave
adc
cmp
sbb
loopne
push
in
mov
aad
cmp
inc
stos
and
dec
loop
lcall
dec
fldenv
xor
ja
inc
fs
jg
push
cli
gs
ljmp
mov
mov
inc
fists
nop
test
mov
dec
and
push
pop
mov
and
lcall
and
jecxz
jbe
xor
mov
popa
aam
inc
lcall
pop
inc
adc
mov
scas
popfw
push
aam
push
rclb
mov
and
ret
call
sub
pop
jno
push
addr16
add
lods
fstpt
mov
ljmp
push
cwtl
xchg
push
mov
in
pushf
hlt
cmp
outsb
lcall
pop
outsb
icebp
mov
jmp
or
jbe
hlt
xchg
mov
add
test
jle
mov
ljmp
lcall
fs
mov
adc
addl
cmc
adc
loopne
icebp
jg
fisubrs
inc
add
push
fiadds
sbb
adc
add
enter
inc
mov
sbb
pop
das
js
in
sub
or
adc
sub
adc
dec
push
int
sub
call
cld
loopne
aaa
fsubs
sbb
xor
or
aam
push
jg
and
adc
inc
xor
xor
call
dec
les
or
add
test
xor
into
jne
or
sub
mov
push
ds
push
stos
add
jmp
xor
sbbl
push
sub
mov
das
cli
mov
mov
mov
int3
sbb
sbb
mov
hlt
mov
movsl
rcrl
movsb
jp
popa
rcrl
fsubrl
in
cmpsl
inc
push
sbb
inc
add
inc
cwtl
cli
cmc
push
mov
clc
sbb
pop
sub
mov
in
call
dec
imul
xlat
cmp
jae
cld
scas
pop
icebp
fldz
adc
and
scas
xchg
repnz
ret
inc
lock
int3
xchg
xchg
lock
fdivr
jg
decl
outsb
roll
xor
adc
jbe
lret
mov
in
dec
ljmp
clc
jmp
or
cld
add
sbb
loope
xchg
test
aas
adcb
decl
frstor
sub
pop
hlt
mov
sbbl
mov
scas
add
jo
andl
jl
adc
pop
fildll
add
cmp
out
pop
ss
sarl
lcall
or
call
imul
and
sub
cmp
test
jle
inc
ret
cmp
leave
or
sbb
dec
xchg
rcrl
fs
icebp
mov
movsb
sub
daa
jmp
loop
mov
scas
push
pushf
ljmp
xchg
or
dec
xlat
les
mov
cmp
mov
or
or
cltd
aad
outsb
mov
daa
lret
and
lcall
dec
jl
sbb
cmc
jo
sub
mov
or
int
add
mov
or
mov
cmp
pop
mov
xor
xchg
test
pop
movsl
mov
ja
ljmp
jmp
and
fwait
gs
inc
pusha
push
xor
mov
push
xchg
inc
pop
inc
loop
iret
inc
movsb
fsubr
sub
mov
mov
cmp
push
ljmp
adc
jno
fistl
in
pop
imul
shrb
fsubrs
cmp
les
pop
sub
sub
arpl
addr16
jns
lcall
or
inc
fiaddl
notl
js
or
hlt
outsl
xor
push
xorb
stos
pop
pop
inc
add
das
cli
push
fldl
lret
adc
insb
xchg
repz
jge
sarb
mov
es
add
jns
and
imul
push
insb
pushl
mov
into
mov
inc
jne
xchg
mov
iret
mov
je
call
cmp
sbb
push
mov
mov
sahf
cmp
mov
xor
loop
adc
decl
xchg
xor
xor
fists
fcmovnb
mov
out
or
les
sbb
push
insb
icebp
pop
adc
ffreep
popa
xchg
add
inc
out
rclb
dec
jbe
lret
xor
verr
ljmp
add
hlt
test
or
addr16
and
fildll
aam
fidivrl
mov
jg
or
sub
xchg
aas
jle
ret
out
out
out
clc
incl
test
out
adc
cmp
inc
mov
div
jl
outsl
add
test
loop
push
and
mov
icebp
lcall
mov
aad
outsb
jecxz
xchg
scas
std
mov
scas
stos
add
loopne
hlt
pushf
into
enter
adc
adc
jle
icebp
popf
imull
int3
jb
lds
cmp
test
sbb
mov
push
call
icebp
mov
inc
mov
mov
cmc
fldt
clc
jmp
fdivrp
lret
lret
push
shrb
add
lods
cmp
mov
ljmp
stc
push
xlat
mov
shrb
daa
xchg
in
fdivrp
not
lods
incb
repz
xor
or
in
inc
xor
mov
clc
subb
imul
xchg
fdivp
idivb
movsl
shll
sbb
xor
out
fimull
cwtl
pop
loope
leave
mov
mov
mov
pop
das
fcomps
ja
cmp
jnp
incl
pop
dec
and
fs
push
sub
test
out
cs
jmp
and
push
pushl
sar
mov
mov
mov
das
sar
mov
mov
mov
aaa
ss
xchg
mov
or
xchg
test
pushf
mov
pop
adc
cvttps2pi
jg
inc
ret
adc
iret
negb
push
js
jle
adc
push
hlt
add
add
gs
cltd
adc
or
jmp
mov
sbb
fsubrl
and
and
adc
cli
call
cmp
mov
pop
call
sahf
sub
pushf
loopne
test
jmp
stos
sarb
push
ret
xor
push
out
enter
test
mov
pop
jg
stos
adc
xor
fsubrl
repnz
sub
xor
inc
inc
pusha
aaa
or
add
pop
mov
jmp
inc
cmp
es
pushf
xor
jge
cltd
jge
sti
test
scas
data16
mov
or
in
cmpsb
out
arpl
mov
mov
push
fidivrl
popf
inc
fisubs
sub
sub
notb
fs
pop
add
pop
inc
and
xor
loop
rcrl
inc
mov
hlt
fcmovb
xchg
into
xorb
fwait
mov
aad
jmp
test
lret
out
adc
je
fwait
xor
cmp
adc
stos
iret
out
fdivrs
addr16
jmp
add
cltd
push
aaa
or
iret
aam
cmp
cltd
fimull
adc
aas
idivb
lret
ljmp
inc
push
push
rcrb
add
cmp
sub
cld
xchg
ret
xchg
adc
xchg
jne
dec
fs
inc
or
decl
pop
nop
or
cmp
jae
sbb
lods
shl
out
and
out
xchg
data16
jle
lahf
ds
add
ds
inc
lods
mov
cmp
inc
pop
mov
cmp
rcrl
call
std
cmc
add
test
inc
int
adc
loop
das
cli
lds
incl
cld
je
test
mov
cld
mov
cmp
movsl
add
cwtl
sub
sarb
push
out
test
mov
jmp
jbe
push
jecxz
or
dec
mov
inc
push
add
mov
sbb
sti
ret
jecxz
xor
push
inc
daa
repz
mov
and
stos
into
test
inc
iret
jae
outsb
push
mov
sti
inc
jecxz
dec
repz
jle
lcall
std
scas
push
dec
int
adc
dec
mov
mov
xor
dec
add
popf
jnp
mov
lahf
sahf
push
adc
adc
mov
test
ljmp
push
xor
dec
mov
loopne
pop
mov
cmp
in
jae
xor
stc
or
mov
mov
jle
fsubrp
outsb
out
shll
mov
jp
sub
mov
add
cmc
mov
in
repz
stos
xor
sub
pop
imul
cmp
test
and
xor
fimuls
cmp
dec
adc
sbb
xor
aaa
xor
mov
test
test
idivb
or
icebp
ret
add
incl
sub
loopne
inc
daa
cltd
test
jbe
cmp
test
push
xor
dec
ret
mov
xlat
in
scas
pop
inc
dec
adc
cltd
sbb
aam
in
mov
push
mov
das
xor
gs
cmp
popf
ljmp
push
movsb
add
out
in
xchg
jecxz
sub
arpl
test
mov
lret
scas
or
sub
cld
jne
cli
jle
ds
stc
scas
or
add
adc
xor
push
push
das
jns
adc
push
add
push
cmp
out
cmpb
adc
rcrl
ljmp
cmp
loope
xor
outsl
sbb
aas
leave
in
pop
push
push
add
push
loopne
jne
pushl
fisttpl
cmpsb
subl
mov
ds
lcall
lret
divb
mov
pushl
je
sub
int
enter
fwait
lods
lods
fistpll
adc
data16
or
lods
xor
out
pop
mov
addr16
cmc
xchg
fnsave
popa
std
call
jmp
or
sbb
popa
pop
or
loopne
ds
out
orl
jg
or
mov
cmp
xchg
add
adc
jbe
jmp
ficoms
cmp
push
xor
ljmp
or
repnz
add
mov
popa
mov
inc
out
sub
aas
cmp
daa
adc
jl
imul
jl
pop
in
push
test
sbb
jmp
push
xchg
sub
or
xchg
mov
fildll
pop
lods
cmpsl
aad
jge
sub
jle
jmp
imul
shrb
cwtl
out
cmc
bound
adc
add
sbb
mov
cmpsb
xor
sbb
and
gs
mov
clc
incl
mov
cmpsl
push
scas
xchg
inc
mov
iret
jmp
xor
lods
stc
push
loope
sarb
pop
pop
pusha
repnz
loope
dec
les
decl
and
inc
inc
enter
add
fdivl
popa
mov
mov
dec
call
pop
mov
xor
pop
inc
nop
adc
or
adc
shrl
ret
sub
and
adc
sbb
adc
sbb
mov
out
sub
cmp
decl
fildl
fisubl
xor
lods
pop
cmp
push
xchg
xor
xor
aaa
cld
mov
aas
adc
aad
call
nop
fcoml
ja
call
sub
out
leave
aas
xchg
fiadds
dec
push
flds
out
jge
adcb
test
lret
mov
cmp
push
jl
cmpsl
pop
cli
iret
mov
mov
lods
push
jg
inc
fimuls
enter
shl
mov
out
mov
lcall
sti
mov
cmp
push
xor
sub
sub
out
inc
pop
lcall
popf
adc
pop
push
ret
mov
and
adc
add
call
jns
and
dec
cmpl
push
cmpsb
scas
sar
lcall
loopne
hlt
mov
roll
test
stos
cwtl
decl
ret
enter
mov
lods
xor
cmpsl
inc
pop
ret
mov
dec
lcall
je
push
leave
add
dec
inc
loop
cmp
out
fsubl
sub
jmp
jno
gs
addr16
das
pxor
addl
add
imul
sbb
cld
jmp
or
stc
push
cmp
mov
aad
sbb
fcomps
stc
cmp
mov
add
call
jae
push
or
dec
dec
pushf
test
jo
decl
insl
inc
add
mov
sub
mov
inc
cmp
xchg
sbb
xchg
in
dec
adc
ljmp
dec
in
push
int
push
ja
pop
cmc
lcall
pop
cmc
fdivs
lds
cmc
sub
pop
dec
xorb
mov
or
or
or
sahf
in
scas
cmp
pusha
mov
or
lock
or
lret
mov
sbb
decl
fildll
xor
dec
push
mov
mov
lahf
fwait
int3
imul
test
mov
ss
jmp
scas
out
and
dec
gs
aad
pop
lret
ud1
pop
xor
cli
jge
ja
jnp
or
xchg
and
pop
das
sbb
loope
in
data16
ds
mov
test
incl
sbb
push
push
mov
inc
clc
es
fimuls
adc
dec
and
test
xor
incl
call
mov
std
push
xchg
sub
mov
mov
sub
imul
dec
add
das
outsb
pop
push
dec
push
addb
jns
bound
xor
imul
je
mov
mov
push
xor
shr
and
aam
adc
sbb
jb
jnp
mov
movsl
insl
daa
je
decl
imul
shrl
xchg
aaa
mov
fdivs
and
enter
mov
jmp
sub
add
call
jge
adc
stos
and
pop
xchg
cmpsl
or
cmp
mov
fbld
mov
psrld
call
jb
mov
repnz
add
lcall
sbb
dec
and
rolb
cmp
pop
ret
in
clc
cmp
jae
out
sbb
xlat
sar
ljmp
push
test
pop
xchg
pushf
ja
pop
fstps
inc
add
jg
pop
enter
imul
mov
lcall
sub
stos
sub
aaa
lret
mov
leave
xor
shlb
mov
sub
mov
push
or
sbb
fdivrs
mov
xor
test
jmp
imul
lods
pop
rclb
lds
ss
jbe
cmp
jmp
adc
sbb
es
dec
sbb
adc
arpl
push
jnp
mov
inc
int3
shll
xor
mov
push
hlt
fldcw
mov
inc
mov
jnp
movsb
mov
shl
in
aaa
mov
repz
shlb
adcl
decl
mov
mov
aas
dec
xor
movsb
sbb
ds
js
outsb
sub
pop
sub
jne
inc
add
mov
stos
or
gs
stos
cwtl
and
or
lods
imul
jge
pushf
fdivr
jg
int3
aad
dec
or
out
pusha
push
addb
test
andb
icebp
mov
add
addr16
icebp
ja
mov
mov
outsl
inc
gs
std
in
jecxz
incl
in
sbb
add
fistl
outsl
js
pop
inc
push
decl
jg
lods
cmpsb
pop
jp
jg
sub
or
mov
adc
xor
loopnew
imul
aad
pop
dec
pop
jg
ss
lds
out
jg
int
out
push
sub
dec
mov
lret
in
lahf
pushf
add
mov
nop
mov
jle
xlat
xor
jbe
popa
xor
dec
push
rcr
fisubl
or
push
data16
in
stos
pop
pop
jl
mov
pop
dec
jne
jge
decl
ret
mov
out
mov
xor
jmp
xchg
dec
rol
push
ljmp
mov
jns
lcall
outsb
jbe
dec
pop
lods
or
cmp
push
jg
push
pop
and
subl
mov
mov
shlb
pop
loope
xor
std
dec
loope
call
pusha
adc
fs
adc
push
push
mov
inc
fdivrl
addr16
imul
out
mov
adc
lea
xor
and
decb
or
push
test
jge
or
aam
dec
cmp
mov
add
ret
mov
xorb
mov
stos
rcrl
sbb
imul
push
incl
pushl
lods
mov
and
mov
mov
inc
jmp
lcall
dec
dec
and
add
mov
cmpsb
sub
jne
dec
inc
push
jge
fstpl
cmp
ja
pop
jmp
xor
ret
gs
or
les
shl
out
mov
sub
movsb
push
jno
mov
fadds
add
jle
pusha
inc
inc
mov
insl
adc
xchg
stc
and
lcall
xchg
dec
xor
push
add
mov
lods
cltd
arpl
mov
mov
decl
mov
aaa
leave
push
dec
cmp
inc
cmp
call
ficoml
ljmp
xchg
add
fwait
xbegin
lcall
jo
xchg
in
xchg
shrb
shl
push
stc
xchg
aam
dec
dec
inc
jnp
pop
cmp
xchg
cmp
ret
sbb
repnz
adc
stos
jmp
add
inc
jbe
add
stos
aad
push
mov
sub
call
cmp
xor
mov
scas
ja
lods
test
xor
jbe
adc
dec
adc
mov
incl
fdivrl
xlat
popf
push
xchg
sbb
dec
jo
outsl
pop
test
pop
add
add
push
es
repz
call
xor
push
jnp
and
adc
mov
or
incl
push
jmp
daa
xchg
adc
push
lahf
mov
out
enter
pushl
incl
pop
jae
imul
outsb
imul
add
pop
leave
sar
jg
incl
pop
or
pop
push
mov
sub
pop
je
mov
fimuls
mov
subl
in
lods
mov
jle
decl
add
enter
clc
bound
push
jle
mov
je
mulb
repz
sub
lock
incl
sub
mov
push
into
jb
gs
xchg
andl
ljmp
bound
das
mov
jns
into
jnp
jge
out
and
jp
cmpsb
fildl
push
jne
pop
aad
je
hlt
jno
pop
stos
stc
and
jl
pop
ja
mov
decl
mov
jnp
ds
outsl
dec
push
je
adcb
jg
mov
pop
xor
push
push
lcall
adc
call
sbb
popl
stos
movsl
push
ret
xchg
pushl
inc
lcall
insb
and
xor
push
jle
sbb
or
outsl
or
mov
push
sub
aaa
push
jno
mov
andb
lcall
mov
negl
and
fcmove
push
orl
int
shll
cmp
jnp
frstor
stos
shr
mov
pop
dec
pop
push
xchg
and
inc
pop
loopne
incl
fadd
dec
enter
push
out
xchg
dec
or
fsubs
andb
mov
push
xor
push
sti
adc
out
ljmp
shll
rep
mov
aad
dec
xchg
xorb
jns
add
decl
cwtl
sub
jecxz
loop
loope
adc
xchg
scas
icebp
add
aad
in
mov
push
pop
test
data16
stc
pop
mov
and
cmp
jae
mov
out
mov
pushl
push
cwtl
jge
repnz
lahf
test
bound
call
idiv
cmp
hlt
dec
in
push
daa
in
sbbl
add
cmp
lret
or
mov
cmp
popf
jbe
jb
sub
xor
into
insl
fcoml
inc
lods
xor
jl
adc
daa
mov
jg
mov
adc
xchg
insb
cmpsb
je
pop
mov
je
ljmp
clc
incl
pop
cli
xchg
insb
push
insb
int
mov
test
add
je
inc
adc
insl
jl
pop
movsl
add
stc
data16
or
lcall
push
add
xor
fcmovb
outsl
insb
inc
lds
out
std
call
sbb
mov
ss
in
push
adc
fwait
lods
ljmp
cmp
xor
lret
out
pop
ss
jbe
clc
jmp
ds
xchg
adc
pushf
gs
cld
push
or
xchg
cwtl
cs
icebp
xor
leave
mov
push
rsqrtps
add
mov
sub
jmp
test
jo
loopne
jg
add
cs
xor
loopne
call
hlt
les
pushf
cmpsb
xchg
insl
insb
in
in
mov
cmp
mov
inc
push
aam
iret
xor
sbb
dec
or
in
fbstp
in
cmp
pop
cmp
cmpb
movsb
std
or
mov
mov
repz
cld
rorb
mov
int
cmp
sub
jmp
incl
mov
js,pt
fdiv
shl
jl
mov
dec
lock
sbb
ja
ljmp
cli
push
es
mov
inc
fwait
stos
fidivrs
insb
cltd
std
notb
into
or
mov
cmp
lods
inc
pop
cltd
imul
xchg
push
xchg
les
daa
fmuls
repnz
in
cmpb
inc
gs
lahf
into
add
add
pop
imul
pop
popf
stos
mov
inc
mov
xor
incb
adc
jecxz
or
call
push
shrb
test
jbe
ret
sbb
push
mov
jp
fadds
call
incl
inc
cmp
ret
fsub
mov
xchg
loopne
jmp
das
movsb
icebp
imul
xlat
insb
push
mov
jb
test
andl
fmul
nop
inc
add
sub
imull
mov
cltd
lret
dec
xchg
mov
xlat
orl
pop
xor
adc
push
scas
mov
adc
sbb
push
nop
loop
xchg
stc
ljmp
or
cmc
dec
and
mov
lods
loop
popf
jae
mov
pop
mov
inc
fdivs
or
insb
stos
adc
lret
sbb
xchg
cmp
xorl
clc
inc
jl
mov
mov
int
dec
xchg
ffree
jnp
mov
add
sbb
cwtl
fucomip
les
adc
jne
or
jg
clc
cltd
add
xchg
bound
add
lds
mov
xchg
fmull
aaa
roll
bound
cmp
xchg
pop
loope
sbb
incb
in
sbb
pusha
xchg
ja
cmc
lcall
filds
cmpsb
add
sub
js
adc
jmp
scas
pop
jnp
aas
push
cs
loope
xor
jbe
add
jbe
sahf
decl
fildl
cmpsb
aaa
jg
test
jbe
xchg
clc
jg
fchs
out
cmpsl
mov
sub
es
jge
lcall
adc
xor
push
ljmp
dec
adc
and
out
cwtl
pop
stc
jle
pop
mov
iret
mov
cmp
pop
out
jo
sub
lret
push
xchg
sbb
pushl
pop
jo
lods
pusha
movsb
push
lods
ret
cwtl
into
mov
xor
dec
xor
decl
shlb
or
dec
movsl
repnz
fwait
loop
mov
cmp
dec
add
push
ret
test
pop
xchg
mov
cmp
cli
xor
incl
icebp
mov
sbbb
jmp
push
push
pop
adc
shll
std
push
daa
or
push
call
sub
pop
mov
mov
mov
imul
in
mov
in
cmp
fsubr
dec
icebp
dec
stos
out
in
cmp
insb
fisttpl
xor
and
pushl
mov
cmp
jo
inc
out
push
or
test
test
inc
xor
jo
mov
divl
decl
pop
mov
mov
je
mov
or
out
movsb
ja
cmpsl
pushl
dec
das
mov
dec
not
inc
lret
jns
daa
daa
subb
aad
jae
pop
mov
dec
std
and
js
lods
outsb
andb
jge
sbb
mov
mov
pop
push
sti
mov
insl
jecxz
dec
sbb
push
sarb
mov
sub
test
into
adc
push
inc
incl
rcl
mov
mov
pop
mov
subb
cmp
cmp
or
jmp
lea
xor
mov
fdivrp
cmp
pop
pop
outsl
or
sub
ret
popa
js
inc
mov
cmp
jmp
fcoms
cld
decl
or
out
sub
adc
jae
fisubrs
sub
bound
incl
xor
cmpsl
nop
divb
call
dec
sbb
mov
lcall
rcrl
cwtl
xchg
ss
test
sub
lcall
cmp
insl
push
xorps
cltd
in
inc
jno
test
insb
and
repnz
mov
mov
inc
cli
fdivrp
pop
cmc
aaa
movsb
push
hlt
xchg
jno
je
mul
or
lcall
push
dec
in
or
sub
inc
cld
jne
cli
stos
fcmovnbe
testb
call
add
xchg
xor
cmpl
adc
mov
add
dec
dec
outsl
xchg
pushf
js
mov
ret
ljmp
call
mov
adc
jmp
jl
inc
insw
lock
shll
ja
jmp
mov
hlt
shrl
test
push
incl
adc
mov
add
pop
and
mov
out
mov
sbb
push
mov
push
mov
jnp
call
fdivr
cld
inc
rcrl
dec
mov
mov
or
hlt
shlb
call
imul
dec
lods
into
jg
mov
cmp
fwait
jbe
gs
dec
std
call
pop
fsubl
out
jne
dec
and
mov
lock
xor
shrb
and
add
pushf
inc
hlt
bound
rcrl
mov
pop
shl
sahf
loopne
addb
pop
gs
add
imul
lods
or
mov
mov
jmp
fldenv
imul
mov
mov
shll
es
jmp
xor
bound
dec
pop
call
out
dec
inc
pop
or
push
add
jp
movsl
sbb
jae
outsl
aaa
sbb
ljmp
std
lods
dec
jne
pop
das
lds
movsb
pop
shll
ret
pop
addr16
sbb
sti
jne
mov
cmc
push
jne
mov
xor
incl
sbb
aaa
adc
or
loope
pop
fimuls
arpl
push
cmp
fcoms
fidivrs
dec
aaa
inc
push
popa
jge
jecxz
dec
push
sub
and
dec
negb
inc
and
fcoml
lcall
cli
int
add
or
jl
fidivrs
sar
sub
push
mov
push
add
out
loopne
mov
or
loopne
das
mov
sbb
pop
ret
or
cmpsb
cmp
xor
lcall
aad
imul
and
mov
push
jg
push
xchg
test
mov
sbb
sahf
cltd
xchg
lret
enter
dec
push
in
mov
jp
lea
pop
dec
mov
dec
aaa
and
xor
mov
int3
or
add
fidivl
sbb
or
mov
mov
call
dec
xlat
mov
xchg
aad
pop
xor
dec
mov
test
lock
push
loope
in
call
and
cmp
dec
cmpl
mov
out
mov
jmp
sbb
popa
inc
inc
mov
pop
rcll
inc
std
jnp
stos
jmp
jp
es
xor
add
lcall
xchg
xchg
out
ja
nop
pop
push
fiaddl
mov
leave
and
jno
jb
scas
push
out
push
xchg
xor
loope
scas
cli
pushl
lods
mov
sbb
int
rcrl
pusha
xor
adc
jmp
xchg
sub
add
inc
pop
jge
or
loop
jb
jge
fwait
mov
aaa
adc
jno
gs
out
jmp
in
sarl
add
sbb
scas
or
xchg
popf
out
inc
jne
xor
test
ljmp
pop
dec
insb
insb
mov
or
lahf
out
daa
push
stos
cltd
push
icebp
mov
add
xchg
jg
js
in
mov
or
mov
popf
adc
xor
jmp
mov
jnp
push
mov
std
outsb
push
es
push
xor
jle
dec
adc
cli
fisubrl
cmp
add
enter
pushf
add
cmpsb
lea
insl
or
cmp
fstl
mov
mov
daa
popf
push
sbb
outsl
shll
xor
mov
fldcw
push
hlt
addl
sbb
jns
mov
xchg
decl
pop
hlt
jl
negl
scas
push
jns
xchg
add
pop
dec
repnz
decl
mov
filds
mov
sbb
pop
mov
clc
es
xchg
stos
orl
mov
push
mov
mov
out
dec
movsl
mov
ds
and
jae
lcall
lds
pop
push
dec
dec
pop
push
pushf
mov
push
push
cmp
scas
sub
jge
mov
cwtl
push
mov
scas
jmp
fnstenv
mov
and
mov
cmp
sahf
pop
loope
fists
rcll
fwait
push
ret
cli
pusha
xor
push
ds
adc
pop
add
popa
sbb
ss
sbb
std
ret
pop
fdivrp
inc
cmp
repz
pop
leave
xor
sbb
loope
and
inc
xchg
and
ljmp
inc
jbe
jo
mov
push
adc
ret
jg
push
dec
adc
stc
mov
mov
decl
add
sbb
idivl
int3
jp
popf
and
mov
std
inc
mov
pop
nopl
push
lret
inc
movsb
aaa
imul
testb
sar
decl
iret
mov
rcrl
mov
xchg
adc
push
pop
fsubr
adc
inc
rcrb
ljmp
sarb
test
xor
or
lret
xlat
mov
ljmp
sub
jne
mov
jg
sub
je
cmp
or
cltd
lcall
cli
orb
subl
xor
rclb
sar
imul
call
sbb
mov
daa
sti
loope
repz
and
sub
or
imul
fwait
push
ja
gs
pop
sbb
out
gs
in
mov
push
in
mov
out
push
mov
dec
repz
aam
xor
sarb
jae
dec
aas
xchg
scas
push
mov
xchg
in
pop
xchg
xchg
call
or
lret
idivb
mov
push
or
loop
add
sahf
mov
cld
cmp
push
aas
call
int3
jb
movsb
jmp
into
pop
xchg
push
mov
inc
lea
decl
xchg
ficoms
and
jne
repz
dec
mov
jmp
xchg
ds
incl
dec
cmp
lret
jnp
arpl
pop
jecxz
add
arpl
inc
mov
ljmp
xor
out
leave
jae
and
inc
mov
inc
xchg
cmpsl
out
jb
ror
mov
clc
jmp
push
ret
pop
and
cmpsb
dec
mov
mov
ljmp
mov
cmp
shll
fiadds
scas
out
sub
jg
jmp
inc
lret
lret
mov
sub
js
sub
jmp
xchg
cmpsb
insl
cmp
pusha
stc
add
fisttps
out
in
jb
or
pushf
pop
jg
sub
jno
xchg
sbb
test
loope
jns
in
icebp
fimull
xchg
or
int
pop
mov
je
push
push
adc
mov
int3
and
out
pop
or
test
push
sbb
in
dec
lret
cmp
call
ds
popa
mov
jg
out
aam
xchg
nop
inc
imul
sub
or
mov
mov
repz
lcall
dec
cmp
sbb
lock
mov
bound
mov
push
lock
fwait
sbb
sbb
jg
inc
jne
sbb
int3
lods
push
sbb
cmp
andl
das
or
in
dec
cli
decl
subl
inc
addl
and
sub
mov
pop
cmp
sub
sub
inc
jbe
notrack
loopne
push
xchg
pop
push
push
popa
pop
jb
movsl
mulb
add
popf
pop
mov
jmp
jmp
sub
adc
or
incl
sbb
in
pusha
pop
jge
xchg
out
xchg
das
shlb
jno
test
call
cmp
sub
ret
rolb
loop
xchg
lret
fcmovbe
or
cmc
mov
ds
and
daa
pop
cmp
out
nop
or
call
sub
mov
stc
xchg
and
sar
stos
mov
xchg
adc
and
je
dec
push
ret
dec
lahf
mov
inc
andb
cmp
outsl
stos
orl
rcrl
nop
decl
inc
mov
mov
jmp
out
mov
fstl
dec
aad
sub
mov
jbe
and
ljmp
mov
mov
xchg
sti
lret
bound
ljmp
jmp
test
arpl
cli
lahf
cmc
lret
pop
xor
and
in
mov
pop
scas
inc
movsb
push
add
lret
stc
push
xor
jle
das
push
inc
cmp
push
xor
test
pop
and
insb
hlt
outsb
rolb
lcall
sbb
xchg
jmp
adc
push
out
xchg
arpl
das
xor
fsubrp
ds
jecxz
in
ljmp
cmp
les
mov
mov
dec
das
sbb
cld
daa
mov
lods
fcompl
testb
mov
mov
incb
adc
inc
fs
mov
pusha
mov
pushl
inc
push
jo
incl
mov
stos
in
mov
cld
xor
jae
scas
jp
or
in
pushl
fnsave
call
push
in
xacquire
fs
and
inc
mov
cmp
adc
into
xchg
sbb
sbb
push
ss
mov
bound
scas
rorb
adc
jns
jb
adc
or
sub
jmp
lret
bound
out
out
sbb
pop
imul
push
testb
decl
mov
shll
push
push
dec
dec
jb
in
mov
addr16
dec
lret
decl
int3
fists
mov
inc
xor
iret
int3
and
sbbl
mov
stc
lock
push
jo
mov
xor
pop
nop
aas
fwait
aam
cmc
shl
push
mov
fcomip
ljmp
popf
out
push
jbe
popf
inc
sub
fsubp
dec
ljmp
push
clc
pushl
jl
pop
and
stos
in
jl
jo
lcall
pop
aaa
js
incl
data16
pop
mov
adc
bound
or
lret
call
xchg
jg
jns
jmp
adc
movsb
call
add
push
leave
out
les
xchg
les
ret
adc
cmp
cmp
aad
sub
dec
push
push
cmp
xchg
xchg
ljmp
nop
aad
push
test
fdivr
ljmp
out
fcoml
mov
daa
imul
lcall
mov
or
cmpsb
mov
rol
jmp
or
jb
sysret
mov
ds
lcall
sbb
sub
insb
pop
mov
lock
dec
lcall
push
cmp
es
xchg
cs
pop
or
std
jg
mov
add
cmp
push
push
movsb
push
sub
adc
sub
decl
hlt
mov
inc
jae
dec
popa
jno
pop
mov
dec
and
xchg
or
lcall
jns
shrb
pop
stc
enter
add
insl
lds
jg,pt
lahf
popa
mov
fists
dec
or
mov
sub
push
fists
cs
fists
sahf
jmp
pop
push
es
mov
sbb
subb
inc
test
dec
jge
daa
mov
pop
imul
inc
push
mov
dec
cmp
add
push
lahf
mov
sti
mov
ds
dec
xchg
xchg
cmp
mov
ret
jmp
insl
std
aam
je
iret
dec
daa
sbb
stos
gs
imul
loope
inc
mov
push
xchg
test
jge
test
repz
mov
mov
ljmp
in
mov
jp
int
push
fcomps
mov
fidivrs
inc
out
dec
lcall
push
lcall
out
loope
mov
sub
mov
cmpsl
dec
xor
mov
lcall
inc
push
call
rclb
mov
cmp
daa
fistps
shlb
xchg
pop
lcall
int3
nop
jnp
pop
dec
and
nop
sti
pop
test
mov
or
data16
push
cmpsb
call
pop
xor
sbb
push
push
pop
scas
lcall
test
sarl
call
iret
lock
sti
and
data16
int3
loopne
int
jne
inc
xchg
bound
sub
xchg
cmpsb
lret
ffree
adc
ss
lcall
rcll
jl
and
jb
push
in
add
pushf
idivl
es
sub
out
ljmp
test
std
xchg
cmp
inc
or
call
in
adc
sub
xor
pop
jg
inc
sub
stc
lds
addb
mov
mov
lret
repnz
cltd
decl
xor
push
inc
adc
hlt
repnz
pop
xchg
cld
fbld
push
mov
jno
test
lds
outsl
xor
jno
fdivp
out
testl
mov
aaa
unpckhps
xchg
jp
pop
les
aas
and
test
vzeroupper
fimuls
add
jmp
push
ret
pop
out
lods
ret
or
testl
mov
rcll
cmp
xor
sub
jg
jmp
inc
ret
or
shlb
sub
push
lods
pop
je
aad
push
xor
fsubs
sub
dec
in
ljmp
or
in
aaa
loopne
mov
call
decl
and
call
xorb
loopne
cwtl
call
push
fildll
addr16
adc
cmp
inc
movsl
cltd
shr
mov
mov
std
in
scas
iret
xchg
xlat
sti
mov
mov
jge
scas
cmp
xchg
int3
adc
cltd
pop
test
outsb
outsb
test
jns
nop
jb
mov
fisttpl
shll
push
sahf
inc
add
call
mov
mov
adc
dec
and
popa
cmp
clc
or
cmc
jae
dec
xor
add
mov
popa
fidivrl
mov
mov
leave
sub
xorb
ljmp
stos
mov
cli
das
cmp
mov
cwtl
pop
or
dec
push
rclb
fcmovbe
push
out
shl
push
xlat
sub
cmp
hlt
cmpsb
sbb
dec
aas
jb
and
lock
xchg
scas
dec
push
subb
repnz
les
adc
icebp
ljmp
mov
es
mov
cmp
mov
cmpsb
in
sti
jb
fldt
mov
push
cmpsl
insl
sbb
jbe
js
pusha
mov
cmp
inc
fcoms
lcall
jl
imul
mov
insl
pop
sub
shr
mov
xor
xor
push
fisubrl
decl
mov
pop
cltd
nop
nop
xchg
mov
adc
jae
cmc
pushl
sub
mulb
aam
das
rcll
adc
cmpsb
mov
cmp
inc
xor
pop
dec
movsb
cmc
ljmp
cmc
in
adc
cs
push
pop
xchg
adc
push
cmovno
repnz
mov
cmp
pushl
inc
mov
orb
aaa
xchg
in
mov
push
ljmp
cmp
mov
jecxz
inc
or
cmpl
sbb
xor
cmc
ror
ljmp
test
mov
pusha
lret
pop
cmpsb
gs
call
and
std
and
loop
clc
mov
pop
clc
xchg
fisttpl
mov
add
adc
jg
ljmp
xor
outsl
movsb
test
arpl
or
mov
mov
jl
mov
ljmp
imul
mov
or
or
call
loopne
push
icebp
repz
idivl
push
in
bswap
in
arpl
push
dec
daa
pop
call
ljmp
and
imull
mov
mov
fistpl
inc
sub
leave
decl
clc
cwtl
mov
jle
xorl
and
lret
add
incl
aad
xorl
xor
hlt
push
xor
or
inc
test
bound
jg
test
insl
jp
fildll
enter
out
xchg
sub
incl
add
mov
dec
mov
iret
stc
inc
push
lds
ljmp
inc
mov
sub
and
add
fwait
test
incl
loop
repnz
add
push
in
dec
fnstcw
jbe
push
in
sbb
pop
adc
ja
stos
fistpll
push
add
imul
xchg
push
and
adc
mov
mov
nop
subl
lcall
and
push
popf
out
incl
pop
ljmp
les
mov
xchg
leave
jp
xchg
pushl
stos
scas
lods
cmpsl
and
dec
pop
xor
sbb
ror
ret
jno
xor
sbb
cmp
pop
shl
sub
xor
repz
sahf
hlt
mov
in
or
leave
sets
mov
fmulp
jne
lcall
negl
pop
pop
mov
mov
pushf
movl
mov
or
incl
insb
int3
mov
xchg
and
ret
xchg
int
ds
mov
mov
ror
push
pushf
shll
cmp
test
mov
inc
adc
mov
xor
incl
pop
mov
shll
test
cmp
push
pop
es
scas
andl
incl
xchg
pushl
divb
mov
dec
imul
add
dec
dec
adc
jmp
das
outsb
movsl
and
int
pushf
or
dec
jo
dec
pop
and
push
cmp
sub
push
fiadds
sbb
xchg
rolb
pop
cli
fcomip
call
pop
lcall
leave
outsl
mov
dec
lret
pop
stos
mov
out
push
adc
pop
stos
ds
popf
pop
fsubs
stc
rclb
pushf
and
call
dec
repz
into
add
cmp
pop
adc
stc
addr16
sbb
sti
mov
push
cwtl
mov
sub
sbb
imul
fdivs
outsb
push
incl
and
cwtl
pop
dec
in
cmpsb
in
and
in
hlt
daa
aam
outsb
gs
xchg
icebp
jge
or
push
mov
inc
push
inc
xchg
add
rol
call
jnp
dec
int
jp
fucomi
jl
addl
xchg
xchg
push
fldcw
and
out
add
mov
in
aaa
lahf
pop
push
dec
pushl
mov
fbstp
jle
dec
xchg
jmp
imul
or
sub
and
das
in
lcall
call
pop
out
sbb
ret
movsb
push
inc
adc
push
xchg
sbb
mov
dec
push
insb
ss
out
cmp
roll
dec
bound
jp
aam
sti
les
cmp
push
fcompl
mov
jno
repz
rol
dec
sub
mov
xchg
push
adc
jge
pushl
decl
push
test
xor
mov
rolb
icebp
inc
add
call
xchg
mov
insl
rcll
and
outsb
push
movsl
cmpsl
xchg
push
call
gs
std
jmp
xor
inc
mov
cwtl
repnz
mov
jb
and
scas
mov
sbb
cmpsl
js
dec
jge
mov
mov
js
rcrl
push
sub
mov
pop
push
stc
cmp
movsb
adc
out
dec
cmp
les
es
mov
addr16
ljmp
mov
pop
xor
scas
xlat
incl
mov
or
push
loopne
test
lods
mov
push
repnz
lahf
dec
jns
cmpsl
not
dec
cmc
outsl
ja
mov
cmc
cmpl
test
sahf
aam
add
test
adc
push
das
dec
jnp
or
call
adc
in
std
iret
mov
or
cmp
jbe
stos
push
mov
pop
cmc
pop
mov
clc
lcall
mov
inc
ret
xor
pop
pop
add
adc
dec
call
loope
test
lock
dec
or
push
cld
jmp
nop
dec
lea
movsl
pop
incl
fdivr
mov
popf
pop
mov
sbb
pop
sub
push
add
inc
adc
push
add
jg
mov
inc
cli
stos
mov
call
lcall
outsl
inc
mov
jge
sbb
jle
jmp
cwtl
in
dec
ret
pop
int
dec
xchg
fcomip
cs
inc
loop
mov
mov
push
ret
push
out
mov
in
jb
repz
jae
adc
xlat
mov
cltd
add
sbb
dec
icebp
jo
pop
xchg
cld
cltd
call
orb
out
jbe
js
push
xchg
cwtl
jg
mov
pop
movsl
call
dec
cmpsb
pop
decb
aam
xchg
fisttpll
jg
push
add
bswap
sub
jg
nop
inc
sub
lcall
cltd
sbb
out
adc
push
xchg
mov
lods
sub
js
pop
and
dec
paddb
call
push
push
jecxz
test
shl
insl
in
icebp
lods
pop
es
scas
mov
mov
into
lcall
fwait
xchg
repz
jl
xchg
cwtl
sarb
jp
insb
dec
mov
clc
fcomip
incl
xchg
mov
lcall
test
shl
sbb
xor
or
jg
jg
cmp
imul
mulb
push
popa
pushf
push
mov
push
mov
add
icebp
push
adc
dec
or
mov
ret
pushl
inc
repz
mov
sbb
mov
or
stc
dec
mov
dec
test
inc
or
fstps
mov
inc
clc
call
mov
or
add
adc
fidivrl
mov
ja
fwait
mov
ja
mul
jmp
ljmp
mov
aad
xor
cmp
push
pop
hlt
pop
mov
popa
dec
call
push
sahf
stos
iret
iret
sti
mov
push
and
aaa
pop
and
jl
jge
inc
mov
stc
jp
insb
add
sbb
dec
add
jno
incl
lods
mov
idivl
notl
jl
and
inc
add
in
sbb
popf
jbe
dec
icebp
fs
inc
jae
in
out
test
cmpsb
rcrl
jl
imul
sub
push
and
decl
es
cmp
sub
inc
inc
test
sbb
scas
das
ja
push
mov
stos
aas
mull
mov
movsl
repz
adc
xor
dec
gs
les
xlat
mov
lcall
ret
test
push
push
and
jg
pop
loop
in
pop
pop
mov
lret
movsb
push
mov
jno
pop
ffreep
push
fldenv
push
mov
call
or
or
mov
xor
sbb
enter
decl
pop
nop
and
sbb
jge
mov
lea
lea
lret
jmp
pop
sub
jecxz
mov
inc
inc
out
loope
lds
push
mov
add
mov
filds
xchg
ret
pop
cmpsb
test
dec
ljmp
leave
sbb
xlat
add
fsubs
stos
pop
xchg
addr16
push
xchg
cmpsb
jne
sub
cltd
xor
ljmp
xchg
pop
xchg
fistpl
xchg
mov
stc
and
xor
ja
outsl
xlat
in
cmpl
mov
lret
push
outsl
nop
cmc
add
lds
incl
sub
and
test
lahf
leave
cld
stc
xchg
frstor
pop
std
lcall
rclb
pop
mov
imul
dec
dec
loope
add
or
fildll
inc
es
lcall
jmp
jge
pusha
ficoms
mov
sti
arpl
loopne
push
out
lods
mov
cltd
xor
mov
xchg
mov
mov
jmp
sti
out
adc
ret
out
fldt
jo
xchg
sbb
mov
in
insl
fcmovne
inc
decl
push
clc
mov
pop
into
inc
or
cltd
dec
pop
inc
xchg
mov
jmp
les
dec
fs
pop
jae
cld
pop
dec
in
mov
mov
cmp
xchg
sub
jp
add
cmp
mov
insb
xor
mov
lcall
in
divb
and
lock
jne
shlb
xor
cmp
xchg
clc
decl
cmpsb
mov
mov
jge
daa
jg
outsl
es
dec
test
sbb
xor
in
call
decb
cmp
sbb
andb
sub
stos
mov
cmp
negb
jmp
jecxz
dec
in
rorb
cs
or
cli
in
imul
ret
pop
push
aaa
enter
jns
dec
pop
ss
aaa
fld
mov
cmpb
and
pop
jno
cmpsb
mov
ret
sub
add
mov
xchg
data16
sar
inc
mov
or
ljmp
icebp
push
jne
insb
pusha
in
lret
mov
push
call
cli
xchg
mov
or
inc
ret
lcall
js
fadds
add
sahf
ljmp
jmp
xor
sub
lcall
gs
dec
xor
decl
push
sbb
mov
pop
cld
ja
xchg
lcall
add
scas
sbb
dec
out
xchg
popf
cld
nop
and
inc
push
fistpl
mov
clc
adcl
lods
bound
jae
mov
add
pop
mov
dec
arpl
out
mov
mov
adc
daa
scas
pop
xchg
ffreep
adc
mov
test
clc
cld
int
xor
pushw
shr
and
sbb
sub
data16
jg
pushl
loop
push
stos
or
xlat
lock
mov
pushl
cld
cmp
jb
in
loop
cmp
push
or
xchg
pop
inc
mov
cwtl
jl
pushl
test
xchg
add
movsl
inc
inc
push
call
sub
dec
cli
xor
adc
ljmp
sub
mov
addl
out
sub
sub
push
push
adc
jp
aad
iret
nop
ja
test
in
adc
cltd
jp
cmp
or
lret
add
hlt
jmp
jo
fisttpll
push
jg
add
mov
cli
les
push
jmp
ljmp
daa
dec
ret
mov
or
and
pop
xor
xchg
mov
les
fucomp
jge
decl
rolb
sbb
adc
jmp
lods
neg
mov
cltd
imul
and
pushl
daa
ljmp
lock
add
push
orl
push
mov
out
popf
fcos
incl
cld
add
ficomps
pop
lret
aaa
bound
fisubl
dec
mov
dec
or
and
sub
cmp
pushf
dec
and
adc
repnz
add
jne
ljmp
push
nop
pop
jo
or
into
lds
inc
les
push
add
lods
sarb
jle
cmp
stc
sar
pushl
cld
lahf
and
jo
fwait
cmpsb
xchg
fnstcw
xchg
mov
sub
scas
ret
mov
mov
iret
mov
call
mov
addr16
stc
sahf
dec
sbb
push
call
fisttpl
cld
xchg
mov
lock
push
dec
ljmp
sbb
fdivs
outsl
std
stos
mov
xor
mov
sbb
int
adc
decl
or
cmp
into
adc
shlb
lret
rcl
imul
lods
mov
jmp
lret
mov
jmp
call
xchg
iret
repnz
and
push
mov
loope
pop
stos
in
jns
mov
pop
cmc
fildll
andb
dec
fcoms
pop
insb
fs
xchg
add
xlat
je
loopne
shrl
lahf
cmp
push
inc
and
jg
jmp
or
rorb
insl
add
push
sub
int3
dec
and
ss
in
cmp
push
js
ret
sbb
int3
add
push
dec
adc
xchg
inc
cmp
mov
insb
mov
mov
xor
fldt
cmp
xor
sbbl
xchg
ja
xlat
pop
jne
push
push
in
pushl
stos
das
jl
lods
push
sub
dec
push
mov
andl
cmpsl
int3
filds
or
add
fwait
jmp
pop
or
pop
cmpl
hlt
fimull
inc
push
movsb
cmp
decl
mov
mov
hlt
add
outsl
add
dec
xchg
add
hlt
push
inc
incl
shrb
pop
lahf
or
fldt
cmpl
lcall
popf
push
aaa
sub
jge
xchg
test
fld1
cmc
test
fldz
stos
repz
mov
jmp
ret
and
xor
rcl
movsb
pushf
bound
inc
data16
mov
mov
pushl
and
adc
mov
jbe
xchg
fsubl
shlb
fdivl
add
call
test
nop
jp
movsl
cmc
ljmp
xor
sub
notl
push
call
jecxz
pop
pop
add
fisttps
sbb
pop
dec
inc
sub
inc
lds
sbb
sbb
mov
lods
jmp
pushf
mov
sbb
cld
ja
movb
mov
xchg
roll
mov
and
jmp
fs
cmp
nop
bound
xor
rolb
xchg
or
call
and
dec
cmp
insl
xlat
mov
xor
cmp
push
out
leave
jno
xor
pop
mov
es
lcall
data16
mov
sub
pop
out
test
das
gs
fwait
insl
and
in
dec
mov
cmp
rolb
out
loop
sahf
mov
xchg
and
jb
add
movsb
xor
sub
pop
push
jge
pop
fs
jg
cltd
gs
pop
and
pop
or
and
test
xor
push
dec
mov
push
inc
rclb
out
sarb
jp
cmp
or
les
orb
mov
jg
adc
imul
sbb
and
push
cmpsb
mov
push
idivl
call
inc
push
push
sbb
jae
sar
push
mov
pop
aam
lahf
mov
push
mov
push
mov
rorb
test
testb
cmp
mov
adc
int3
aad
insb
mov
std
jmp
inc
movsb
lods
pop
mov
in
fisubl
fwait
pop
xor
lock
bound
mov
lods
lcall
ss
inc
outsl
xlat
aas
mov
testl
and
aaa
mov
inc
cli
push
mov
jnp
push
ret
mov
ljmp
int
pop
lcall
repz
mov
ret
add
call
cmp
dec
int3
sub
jg
or
jbe
add
test
icebp
xchg
sub
jl
ss
enter
lcall
push
mov
jo
xchg
lods
or
ret
jnp
call
adc
test
fsubrl
xchg
cli
xlat
cmpsb
dec
data16
jge
cmp
cwtd
or
je
std
scas
incl
mov
push
jg
xor
jl
jl
inc
stc
sub
sbb
adc
mov
mov
into
xchg
and
shll
pop
jge
xchg
xchg
dec
pop
cmp
add
cwtl
fs
adc
bound
or
scas
lahf
jmp
shrb
lahf
pop
push
out
in
and
in
sub
cmp
lret
and
xchg
or
fisttps
les
sbb
addb
icebp
add
xchg
push
dec
and
sarl
or
mov
mov
out
push
xchg
enter
cmp
add
enter
mov
sbb
or
aas
xchg
loop
mov
jle
and
dec
das
mov
add
mov
popa
xor
out
add
cmc
mov
mov
ret
lods
pop
loope
js
push
jno
sub
loope
in
insb
jmp
jmp
shl
jp
mov
or
jae
jmp
pop
fs
mov
lret
pushl
aas
leave
jae
cmpsb
ja
mov
clc
insb
pushf
push
cmpsb
pusha
push
jp
lret
decl
xor
adc
jns
jno,pn
rcr
or
push
and
popa
daa
xchg
xchg
call
cld
lcall
jno
rorl
aam
mov
sbb
popa
pop
jnp
and
pop
ljmp
adc
insl
fwait
jge
loope
dec
jecxz
addl
lods
roll
ljmp
mov
outsl
clc
ja
jne
xchg
aam
enter
push
repz
adc
adc
ljmp
scas
stos
js
out
mov
mov
ja
and
adc
and
xchg
push
add
ljmp
mov
test
pop
test
mov
inc
jb
jle
lods
push
sbb
mov
cs
das
sbb
mov
sub
xor
mov
in
pushl
jnp
mov
out
dec
dec
pop
jp
insb
mov
and
xchg
mov
or
sbb
jo
out
test
jo
into
scas
call
and
mov
test
fs
pop
insl
sbb
xor
incl
inc
cwtl
aaa
sbb
out
sarl
test
adc
pushl
rcrb
cmp
call
and
cmc
negl
hlt
mov
lds
mov
xchg
mov
sarl
push
incl
mov
icebp
or
sub
adc
repnz
test
push
loopne
jmp
add
std
pop
into
inc
push
ja
mov
inc
dec
or
pop
in
fsincos
mov
leave
fucomip
stos
sub
pushf
inc
mov
or
cmpsl
inc
or
adc
sub
sarb
push
fld
scas
lea
cld
ljmp
jno
insb
dec
sub
push
sbbl
shrl
sar
dec
push
nop
mov
leave
inc
jno
xor
divl
fcoml
adc
mov
xchg
mov
loop
mov
imul
adc
inc
in
sbb
lret
pop
lods
ret
js
xor
lret
cmp
sbb
mov
shl
andb
call
jbe
rorl
repnz
and
mov
push
jne
loop
sub
pop
icebp
sub
sbb
jmp
add
pop
sub
inc
add
mov
dec
stc
xchg
xchg
pusha
fst
rolb
pusha
popf
int3
push
lahf
inc
icebp
ljmp
enter
xor
push
pop
movsl
push
clc
mov
stc
xchg
jmp
repz
lcall
das
xor
mov
ljmp
xchg
mov
jecxz
jb
mov
pop
out
mov
dec
mov
add
pushf
repz
inc
movsb
mov
decl
add
in
dec
dec
adc
cltd
insb
adc
pop
push
aam
cmp
jg
xor
jp,pt
inc
sub
in
iret
adcb
mov
xchg
gs
outsl
xor
mov
loopne
sbb
push
pushl
mov
dec
es
xchg
dec
add
mov
rcrb
jp
add
cmp
roll
and
mov
inc
lret
cmp
je
addr16
pop
cmp
mov
fists
mov
fbld
rclb
in
cmpsb
or
mov
data16
ljmp
sbb
es
ljmp
hlt
adc
cld
adcb
sub
xor
aam
lock
cmp
xor
fcoms
lock
lcall
aam
in
sub
inc
jmp
inc
push
sti
fucom
and
idivl
idivb
xor
sbb
ds
pop
loop
lcall
inc
test
ficoml
or
scas
out
fiaddl
cmpsl
mov
in
loope
decl
cltd
popa
insl
stos
jle
mov
or
pop
xor
xor
sbb
cmpsl
mov
hlt
inc
movsb
stos
xchg
or
push
and
mov
into
xor
outsl
inc
add
inc
sub
arpl
pop
or
cmc
jp
fists
cmp
push
stos
inc
scas
sti
sbb
roll
or
add
adc
sub
cs
mov
jle
pop
jp
xchg
dec
sahf
jmp
jmp
xor
mov
pop
pushl
pop
movsl
fsubl
aas
in
add
fiaddl
punpcklwd
push
push
dec
out
adc
jle
cmpsb
call
aad
jns
rorl
inc
push
lds
movb
xchg
inc
sahf
xchg
ja
and
mov
push
mov
add
icebp
gs
movsl
in
adc
jmp
cmpl
xchg
fidivrl
cmpb
rcl
ud0
mov
and
and
popf
pop
cmp
jns
movsl
pushf
lcall
inc
pop
sub
push
aam
idivl
sub
bound
cmp
clc
mov
pop
lds
dec
js
mov
dec
in
dec
lods
outsl
mov
inc
add
popa
dec
jb
and
mov
lcall
pushl
mov
lods
push
add
jmp
xchg
cli
adc
jmp
bound
loopne
ljmp
xchg
push
or
pop
cmc
mov
lret
aas
ja
in
xchg
ds
mov
dec
cmp
push
outsl
pusha
or
inc
mov
xchg
std
jg
push
outsl
lahf
jge
pushl
cmpsl
mov
lock
in
and
sub
xchg
call
dec
pop
xchg
sub
pop
mov
and
mov
xlat
mov
aam
cli
das
jns
inc
inc
clc
jg
mov
push
jmp
int
loope
fldl
xchg
pop
xor
arpl
adc
std
inc
sarl
mov
mov
cmp
into
aam
jmp
stos
cmp
adc
xor
jl
jb
fdiv
nop
movsl
and
std
jbe
dec
outsl
pop
and
jmp
adc
xlat
inc
fsubrl
ss
xor
mov
pop
pop
inc
dec
imul
or
ljmp
push
sub
pop
mov
and
es
inc
outsl
scas
dec
ljmp
sar
ljmp
inc
fcmovnb
scas
shll
and
jle
fwait
mov
or
hlt
or
and
les
pop
dec
test
add
test
das
clc
jmp
mov
int
adc
fildl
adc
inc
mov
stc
mov
lcall
sbb
push
pop
stos
adc
mov
sub
test
or
cmp
lret
incb
ljmp
or
dec
lcallw
jmp
jns
cmpsb
push
adc
es
mov
pop
shlb
add
icebp
call
inc
jno
mov
push
iret
movsb
xchg
xlat
roll
fs
mov
dec
arpl
lock
and
push
cmp
lds
jnp
pop
outsb
cmp
std
xchg
mov
jmp
mov
pop
or
mov
rcrb
sbb
in
ds
cmp
cmc
mov
std
pushl
mov
or
xchg
fcoms
cmpsb
push
mov
dec
cmpsb
cld
sbb
enter
aad
pop
pop
or
loopne
loopne
adc
jle
cs
arpl
inc
xchg
rorb
cs
inc
filds
loope
insl
push
xor
ljmp
gs
shll
xchg
push
icebp
mov
or
call
or
and
das
cmpsl
int
fdivs
js
clc
cmp
xchg
xchg
xchg
inc
add
loop
mov
xchg
or
outsb
ljmp
fs
sub
push
sub
and
pop
hlt
jecxz
mov
bound
xor
cmp
rorl
cmc
mov
ret
add
jg
hlt
adc
jg
int
ret
rsm
jp
loop
or
cmp
shl
jno
and
test
cmp
stc
add
adc
cli
push
sub
sbbb
fstps
std
inc
and
xchg
dec
lahf
test
push
mov
adc
mov
cltd
xor
xchg
pop
inc
insl
inc
cld
add
push
cmc
inc
sahf
xor
clc
and
mov
loope
ret
pop
movsl
aam
imul
lcall
je
mov
addb
mov
adc
pop
fstcw
rcrb
decl
sub
xor
push
mov
fcomps
push
dec
sub
pop
cmp
mov
dec
js
adc
sub
inc
out
xchg
sbb
out
out
fiadds
push
cld
mov
dec
lea
aas
mov
aaa
cmp
adc
scas
out
pop
mov
in
push
xor
repz
pushl
xor
nop
sub
and
rorl
jmp
ss
lcall
and
decl
jnp
mov
fsub
sub
lods
jg
mov
movsl
jae
xchg
insl
xchg
adc
pushf
mov
jmp
pop
inc
in
jo
imul
or
jecxz
mov
mov
pushl
jbe
jns
cmp
enter
cld
loopne
pop
leave
mov
jp
scas
nop
sbb
test
pushl
mov
inc
aad
inc
or
popf
lock
lods
test
lcall
fadds
cwtl
shrl
or
ss
fstps
add
cwtl
add
mov
xchg
cmpsb
enter
mov
std
scas
push
enter
adc
negl
repz
pop
hlt
call
mov
rorb
dec
rcrb
jl
aas
mov
sub
jmp
subb
push
aad
xchg
test
stos
cwtl
xlat
adc
inc
stos
mov
ljmp
inc
loop
and
test
xor
xor
pusha
sub
jb
fisttps
dec
adc
mov
xchg
aas
shrl
push
adc
subl
mov
inc
xchg
dec
movsb
das
xor
js
mov
into
pop
inc
int3
nop
push
ficoml
inc
aas
and
xchg
lock
sub
movsl
inc
dec
push
jo
or
stos
bound
mov
adc
aas
pop
push
push
fwait
push
push
mov
test
movsl
decl
inc
xor
xor
andl
inc
aas
daa
dec
inc
loope
mov
ljmp
sub
xor
lock
xchg
lret
pop
inc
cmpsl
sbbb
push
jmp
or
xor
jmp
xchg
lds
in
cmp
pop
sub
fstl
decl
mov
jmp
sub
shlb
jae
insl
cld
into
pop
es
call
and
test
cwtl
dec
jge
arpl
dec
xor
ljmp
pop
dec
stos
das
repz
fiadds
add
jno
lock
mov
pop
inc
xor
inc
xchg
xor
call
mov
and
xlat
hlt
rcrl
mov
add
inc
push
mov
ljmp
sub
xchg
xor
inc
loop
fstps
sbb
push
gs
daa
ret
add
negb
cmc
daa
cmpsb
push
sahf
mov
outsl
sub
ds
jmp
and
xchg
jg
mov
or
sti
xchg
push
je
jae
inc
scas
mov
sbb
sar
fbstp
movsb
out
cltd
cltd
jne
int3
dec
sub
mov
sbb
cmp
call
jo
jmp
in
mov
push
fldl
mov
inc
jmp
cmpsl
sti
mov
fcoml
fs
loopne
xchg
jbe
jmp
push
int
icebp
jmp
outsl
sarl
je
push
jne
icebp
ljmp
pop
out
pop
jae
ljmp
clc
decl
repz
ret
andl
dec
fmuls
ja
pop
mov
jmp
pop
or
jbe
popa
popa
mov
inc
divb
xor
sbb
fdivr
inc
out
sub
mov
cmp
xor
stos
mov
or
mov
pop
lahf
shrb
adc
mov
enter
test
cmpsb
or
sbbl
scas
fcoml
das
sbb
mov
lcall
shll
xchg
mov
jl
outsb
adc
je
out
lret
incl
mov
aad
push
jns
lret
fs
dec
adc
xchg
in
lcall
push
jl
xchg
cmp
mov
inc
shlb
pop
push
lret
and
ljmp
jo
enter
outsb
or
pop
dec
nop
jge
jnp
inc
mov
adc
test
mov
mov
jns
iret
add
jge
jmp
and
mov
pop
movsb
add
rcrl
stc
dec
int
fucomi
mov
and
adc
cmp
xchg
fstl
loope
push
das
push
es
sbb
adc
sbb
mov
cmp
stos
cltd
loopne
rcr
xor
mov
or
lcall
pop
mov
lret
mov
inc
int3
inc
inc
push
movsb
jne
int
push
std
adc
xchg
rolb
jp
dec
ljmp
dec
sbb
sbb
mov
and
bound
lods
xchg
mov
decl
iret
test
mov
adc
inc
mov
lds
pop
sbb
or
clc
call
dec
fcmovnu
cltd
mov
cltd
push
or
cmp
sahf
bound
pop
das
dec
sbb
and
dec
dec
ljmp
fucompp
in
sub
jg
cmc
jo
pop
rorb
push
cmp
and
movsl
cmp
push
adc
xchg
sub
fldenv
outsb
stos
push
ds
inc
adc
jmp
xchg
sbbl
pushl
push
stos
jo
push
out
xor
movd
ret
sbb
dec
push
xor
iret
cli
nop
sub
idiv
jmp
jnp
push
sub
cmpsl
xor
imul
addr16
push
cmp
lock
inc
cld
loop
cmp
mov
adc
lcall
scas
jb
jl
je
nop
ja
jae
cmp
in
incb
add
pop
jae
jo
lcall
add
icebp
or
out
mov
call
fcoms
xchg
adc
sub
add
ss
xchg
xchg
xchg
ljmp
rcl
int3
aad
jge
mov
cmpsl
jle
cmp
inc
ret
shlb
and
nop
jnp
sub
sbb
bound
xchg
push
xor
mov
mov
add
xchg
fsubl
stos
cmp
test
in
sbb
mov
dec
mov
and
sub
add
xlat
jne
mov
in
sub
mov
insl
in
pushl
sub
repnz
dec
mov
leave
cs
push
into
stos
xorl
xchg
lcall
mov
call
lcall
push
pop
test
pop
rcll
push
sbb
out
clc
jmp
fsubrl
aaa
push
jb
scas
pusha
dec
arpl
cmp
fwait
mov
dec
mov
xor
mov
loop
clc
ss
mov
jecxz
pop
dec
gs
clc
fbld
test
xor
aam
or
mov
push
adc
lahf
push
cltd
movsl
cmp
js
ss
adc
rcrb
dec
cmp
leave
dec
push
cmpsl
inc
daa
leave
mov
sbb
jmp
mov
fwait
sbb
in
ja
testl
or
ss
dec
in
pushl
xor
repnz
test
jmp
lea
test
mov
ljmp
cld
ret
cmp
sti
or
test
mov
push
divb
loope
in
mov
jp
sub
xor
push
or
call
xor
xor
mov
mov
mov
jbe
cmc
rcrl
pop
mov
nop
jmp
fsts
lcall
jge
add
xchg
mov
fcmovnb
mov
ss
mov
popf
push
push
popa
cwtl
aas
jbe
cwtl
or
mov
clc
push
mov
sub
inc
js
ficompl
jge
pop
adc
push
push
fildll
add
orl
int3
mov
scas
mov
ret
pop
adc
inc
jae
inc
ja
aas
sub
pop
ds
dec
rcrl
ljmp
or
push
sbb
mov
dec
cmpsb
int3
pop
dec
pop
fwait
test
ljmp
lcall
jecxz
mov
pop
add
sbb
mov
push
sti
inc
movsl
ss
test
out
clc
jmp
jp
ljmp
sbb
sub
fcompl
fildl
incl
lcall
adc
cltd
ret
fwait
mov
inc
into
lds
fcoml
sbb
enter
mov
icebp
xor
pushl
fnstcw
ds
inc
ljmp
pop
out
sbb
aaa
std
mov
mov
mov
mov
scas
out
xor
mov
jmp
rorl
out
adc
lret
mov
push
and
sbb
push
xchg
pop
cmp
xchg
mov
nop
sub
imul
enter
mov
and
fildll
mov
mov
add
xor
push
or
mov
iret
and
test
adc
call
sbb
add
iret
ret
dec
out
ret
arpl
mov
lret
out
push
fs
inc
std
pop
and
inc
cmp
jle
setnp
xor
stos
fdivs
imul
xor
daa
jnp
shlb
push
lret
js
sarl
push
insb
pop
jecxz
xchg
sti
cltd
push
decl
test
jle
jle
push
push
imul
push
insl
fwait
enter
adc
decl
lahf
add
cmp
rorb
xlat
lret
pop
mov
ja
outsb
leave
push
jnp
lret
and
orb
enter
add
dec
push
dec
jge
lds
add
push
cwtl
loope
sub
int
loopne
xor
stos
add
jbe
call
rcll
icebp
lcall
aas
push
dec
std
cmpsl
push
daa
xchg
add
xchg
fstl
fwait
lahf
cmpsl
dec
adc
iret
decl
ljmp
out
pop
mov
sub
lahf
jmp
cli
std
aas
mov
add
mov
call
gs
mov
cmp
mov
pop
cmpsb
jmp
jl
fimuls
jecxz
cltd
bound
mov
pushl
sti
ds
sbb
arpl
push
xchg
mov
cmp
test
dec
inc
pop
jmp
mov
and
mov
ja
push
jne
pop
mov
into
xor
call
fimull
stc
adc
addl
pop
in
cmpsb
xchg
push
shll
decl
jg
ficoms
cmp
jg
sti
je
xchg
xlat
test
hlt
xor
mov
sar
jmp
js
std
jle
adc
sub
rclb
xchg
dec
cmp
inc
mov
adc
arpl
decl
flds
lock
sub
add
add
mov
pop
imulb
addr16
sub
call
rcr
bound
cmc
cs
mov
cs
in
dec
push
clc
pop
incl
loope
xor
insb
pushw
mov
mov
xor
pop
shll
xchg
lods
jecxz
adcl
jb
xor
fsubl
mov
cmp
sbb
cmpsb
std
sbb
mov
ja
out
dec
adc
je
pop
popa
std
shll
jmp
cmp
mov
int3
mov
movsb
xchg
popf
dec
mov
inc
sbb
insb
mov
inc
gs
mov
fdivl
rcrl
pop
jnp
iret
mov
inc
mov
ljmp
push
inc
std
sahf
lret
mov
pop
adc
mov
sbb
in
xchg
xchg
add
leave
fsqrt
jae
pushl
jge
and
test
sub
pushf
jo
in
cmp
cltd
sub
jmp
rorb
push
add
mov
cld
inc
jg
xchg
push
imul
sbb
leave
pop
insl
mov
jmp
mov
xor
inc
inc
xchg
insl
cmp
adcl
lock
ljmp
fiadds
pop
mov
mov
sub
and
inc
jmp
incl
xlat
rclb
lret
jecxz
mov
and
decl
cwtl
insb
sub
hlt
ret
pop
subb
sub
ljmp
in
xchg
inc
mov
cmpsl
leave
sbb
sub
aad
mov
mov
cmp
out
test
addr16
cmp
shl
jle
scas
mov
sub
shlb
jmp
enter
jecxz
dec
es
sbb
mov
pushl
das
rorl
stc
pop
xchg
cwtl
movsb
adc
cwtl
inc
sub
add
insb
mov
mov
cmp
or
mov
and
popf
mov
fwait
les
sub
push
nop
inc
outsb
fwait
add
dec
pop
jg
call
decb
dec
sbb
notb
jae
popf
inc
or
cli
movsl
lcall
aad
out
dec
stos
outsb
jbe
mov
cmp
mov
sub
push
aad
fsubr
inc
sbb
jmp
testb
lock
pop
pop
xor
ret
movsb
sub
push
pop
je
cmp
out
jg
sbb
aad
xchg
imul
mov
cmp
pushl
push
enter
pusha
mov
add
push
xlat
add
mov
mov
leave
dec
es
ljmp
ss
mov
stos
cmp
dec
sbb
pop
ja
and
lds
inc
cltd
ljmp
pop
xchg
and
scas
cld
cli
add
inc
cmp
test
sub
subb
cmp
mov
std
gs
movsb
adc
es
out
sub
mov
rorb
mov
lcall
or
insb
subb
fsub
cmp
cmovne
lock
es
scas
pop
stos
pushl
std
pop
xchg
or
jbe
cld
mov
push
out
insb
inc
pop
adc
xchg
rolb
xor
dec
lea
mov
cwtl
aad
fistpl
dec
outsl
add
push
cmp
test
or
xchg
or
push
cltd
movsl
and
add
xchg
or
fucom
mov
cltd
fcomip
push
pusha
or
mov
add
cltd
in
arpl
shrl
pop
push
fcomip
jg
push
jge
sub
jae
cltd
inc
pop
xor
jbe
jb
call
cmpsb
pushl
push
mov
out
rcrb
in
fnstenv
incl
sub
mov
lods
ret
bound
ret
jns
add
jl
leave
ljmp
outsl
stos
pop
dec
lods
add
xlat
sub
mov
dec
test
test
loope
fiaddl
mov
decl
adc
fsubl
mov
movsl
jb
cmpsl
xchg
xchg
xor
and
ljmp
and
loop
sub
xchg
adc
cmpsb
push
pop
test
popf
notl
ljmp
inc
enter
sbb
cmp
std
cmp
push
jbe
inc
dec
sti
dec
dec
imulb
out
adc
push
sti
iret
clc
test
int3
in
ret
roll
xchg
jae
dec
xor
sub
push
sub
jnp
jns
dec
lcall
and
cmpsl
mov
or
inc
inc
mov
sub
inc
js
ljmp
int
push
mov
inc
test
mov
fisubrl
roll
xor
pop
out
mov
inc
mov
in
push
sbb
popa
sbb
lret
int3
ss
in
int
jl
sbb
jmp
fwait
lcall
jns
nop
jg
dec
or
add
decl
mov
out
loop
fwait
movsl
adc
mov
repz
je
pushf
mov
decl
stos
mov
ficoms
mov
mov
lea
push
lods
pusha
je
ljmp
jecxz
orb
mov
pop
lcall
cld
stos
movsb
or
dec
sar
cmp
xchg
flds
mov
pop
pop
lds
sbb
push
add
gs
push
push
rorl
cmc
fnstsw
add
jecxz
sub
idiv
incl
stos
stc
mov
aam
jo
xlat
jmp
cld
cld
inc
ja
clc
push
dec
mov
pushl
add
jg
cmc
test
jo
scas
cmpsl
in
movsb
mov
stos
push
adcb
push
dec
loopne
xchg
decb
pop
jg
arpl
mov
pusha
inc
or
fldpi
call
push
cltd
lret
mov
fadds
enter
ljmp
jle
hlt
lahf
mov
pop
jae
bound
jp
repnz
ret
xor
mov
insb
andl
mov
rol
cld
popa
cwtl
jae
loop
jg
icebp
insl
arpl
push
imul
arpl
into
xchg
push
lret
decl
inc
loope
sbbb
in
pop
sbb
into
in
push
adc
enter
add
ljmp
lret
mull
js
or
mov
ja
mov
ljmp
xchg
rclb
loope
das
adc
add
add
push
xor
xor
mov
mov
push
mov
mov
stc
fdivrl
jmp
data16
jmp
jle
jg
das
sbb
popa
sbb
rcll
mov
mov
lods
mov
lcall
ss
pop
rclb
push
pop
divl
xor
xchg
mov
ljmp
push
loopne
xchg
or
jle
pop
mov
xchg
pop
int
mov
pushl
repz
push
or
cli
orb
mov
xor
incb
incl
cld
inc
push
and
rcll
mov
leave
scas
sbb
adc
imul
mov
lea
aas
xor
xor
test
out
add
inc
xchg
mov
mov
add
push
push
cmp
or
loop
xchg
lods
add
xchg
ds
jg
inc
cld
cmp
cld
mov
cmp
sbb
cli
jmp
xchg
mov
add
insl
or
mov
daa
movsl
cmp
sbb
cmc
in
jmp
aad
mov
and
bound
adc
call
push
mov
sbb
push
cmp
inc
dec
jae
dec
aaa
mov
mull
lods
lret
dec
or
incl
push
outsb
adc
xlat
jb
add
ja
in
fwait
loop
sahf
jg
and
xchg
hlt
xchg
dec
mov
stos
int
push
idivb
xor
lods
xchg
push
ja
std
lods
mov
cmpsl
inc
jmp
sbb
mov
and
lods
arpl
dec
dec
mov
cltd
fnstsw
push
add
loope
sbb
add
mov
pop
push
mov
aam
loopne
aad
pop
add
into
out
enter
mov
fcmovnbe
scas
dec
bound
mov
out
inc
ljmp
in
jmp
xchg
xchg
out
jmp
jmp
mov
in
incb
pop
sub
jae
in
outsl
mov
push
cmp
incl
vmread
mov
adc
dec
mov
repz
ja
lock
aaa
cld
lcall
mov
sub
stos
pop
out
mov
mov
xor
jmp
cmpsb
clc
mov
das
loope
cmp
ret
pop
int3
pop
stc
or
push
cmpl
inc
or
call
jl
cmp
pop
lods
fisubrs
jge
dec
adc
adc
dec
mov
addr16
dec
out
and
adc
dec
push
pop
and
push
sbb
ljmp
aaa
sub
sub
mov
enter
loopne
arpl
sti
gs
fdiv
push
push
decl
and
xor
and
clc
pop
into
pop
popf
les
ja
mov
fcomip
mov
dec
rcrl
outsb
movsl
insl
mov
and
cmp
lcall
or
ljmp
addr16
mov
ss
ds
pushl
sbb
sub
or
mov
cld
arpl
mov
mov
dec
pop
and
adc
add
mov
pop
cltd
test
lcall
and
lods
js
jecxz
je
mov
cmp
cmpsb
hlt
mov
out
or
or
fwait
into
mov
jge
inc
sbb
negl
mov
cld
lock
cwtl
mov
xchg
pop
pop
adc
inc
loope
call
ret
call
sbb
test
pop
popf
lea
dec
test
int
lret
cwtl
adcl
jg
or
and
xor
cmp
pop
mov
push
ljmp
cli
pushl
outsb
xor
call
cltd
fildl
gs
les
cmpsl
xchg
imul
dec
xor
fucomi
cmp
gs
mov
xor
mov
or
add
ljmp
into
outsb
ljmp
push
mov
xor
lods
pushf
pop
data16
lcall
sarb
sbbb
xor
cmp
sbb
dec
xchg
les
cli
incl
mov
cmp
arpl
add
data16
add
or
fwait
inc
loop
cs
jnp
movsb
push
cwtl
xchg
adc
ljmp
cmpsb
and
xor
outsb
mov
movsb
xor
push
je
fdivrs
addr16
fs
ds
cmp
movsl
pop
rorb
fs
cmp
nop
add
cmc
mov
pushf
mov
adc
gs
ret
adc
and
in
testl
add
pushl
jle
cmc
movsb
por
out
ja
push
test
decl
jl
dec
shll
js
mov
in
lret
adc
popa
mov
addr16
mov
inc
pop
in
mov
ljmp
jg
jmp
jno
imul
xor
in
mov
pop
jno
ret
decl
movsl
fsubrs
shll
icebp
daa
int3
mov
xor
test
in
xchg
mov
decl
ret
dec
cltd
cmovl
add
mov
cmpsl
loope
jns
add
lcall
decl
xchg
or
and
gs
dec
mov
xchg
arpl
lret
out
push
cmp
ja
ds
or
pop
inc
fsubs
sub
mov
fildl
leave
das
sar
adc
jp
pushw
push
std
push
mov
pop
clc
push
testb
jmp
cmp
sbb
cli
rcrb
in
mov
out
pop
cmp
pop
sahf
jmp
jg
pushl
jl
pop
mov
fisubl
sar
sahf
loopne
mov
loop
out
xlat
mov
insb
sub
push
fisubl
adcb
xor
push
sbb
lret
dec
xorl
pushf
cmp
sbb
pushl
jb
cltd
data16
mov
mov
cmc
dec
loope
jno
xorl
jp
dec
sbb
dec
cmp
dec
push
or
ret
inc
ljmp
sahf
adc
call
int3
sbb
dec
push
rcll
mov
xchg
xchg
lea
pushl
lock
notl
in
lret
sbb
xchg
and
lss
ljmp
xchg
ss
out
sbbb
data16
flds
xor
jbe
mov
sahf
lods
mov
lds
insb
push
cmp
fs
xchg
clc
call
mov
adcb
js
or
pop
pop
push
aaa
sbb
mov
int3
mov
fs
fwait
lods
mov
inc
jb
int3
pop
or
popa
sub
inc
dec
hlt
xor
dec
bound
int3
cmp
cmp
dec
and
add
dec
push
jmp
icebp
mov
adc
xlat
fcomip
pushl
faddl
pop
push
lea
mov
scas
imul
jbe
ljmp
lds
inc
push
cmpsl
xchg
ret
jb
push
adc
repnz
aad
outsb
sub
sbb
mov
mov
sar
xchg
and
cmpl
test
lcall
pop
sub
pop
popa
and
sbb
ja
add
dec
lret
mov
push
lock
xor
mov
decl
cs
xor
fistpll
ret
add
jb
and
or
lcall
cmpsb
rcr
imul
imul
adc
ss
data16
adc
ljmp
mov
cmpsb
cmp
adc
xabort
outsb
or
jge
stos
pusha
loopne
xor
mov
jl
sti
decl
aam
fnstsw
shrb
mov
in
mov
push
sub
lcall
cli
rcrl
test
mov
pop
pop
xchg
mov
pop
pusha
fs
movsb
mov
ret
jmp
pop
mov
xor
mov
jl
pop
ja
push
mov
insl
mov
jo
cld
push
sub
out
movsb
push
lcall
sub
dec
and
es
in
icebp
cmp
push
and
decl
mov
roll
dec
xchg
dec
cmp
imul
mov
push
js
addl
repnz
mov
mov
jo
push
and
aam
outsb
sub
int
or
add
cltd
lods
jmp
mov
gs
mov
addr16
jae
icebp
lcall
inc
xor
mov
jne
pop
cmp
icebp
clc
das
xor
in
popf
pop
pop
cli
mov
mov
es
push
and
push
out
mov
add
jo
jg
fcomps
push
jno
jge
pop
icebp
rorl
pop
mov
adc
xchg
addl
inc
loop
lcall
xor
sub
aad
imul
push
mov
xchg
push
mov
sbb
add
movsb
and
aam
mov
cmp
ret
push
dec
lret
or
fistpl
and
jle
lds
test
jo
jmp
outsb
mov
ret
outsb
push
out
popa
jno
je
out
shll
testl
or
and
lret
mov
mov
mov
stos
ljmp
inc
push
pop
sbb
push
xchg
ljmp
add
adc
add
push
xchg
out
arpl
xor
ljmp
jnp
sub
bnd
cmp
call
cmp
cltd
mov
push
pop
call
out
pop
ds
mov
mov
stos
cmpsl
jl
cmp
outsl
rcr
stos
movsl
inc
push
decl
bound
xchg
dec
popa
or
pushf
std
es
mov
rol
xchg
leave
test
sbb
ret
mov
js
push
add
incl
scas
and
jecxz
mov
inc
pushf
mov
mov
jecxz
jmp
or
les
xchg
in
dec
int3
enter
adc
call
imul
push
dec
out
push
adc
jmp
sbb
lea
jnp
mov
fwait
dec
sbb
jo
js
lds
pop
mov
xchg
incl
call
std
mov
inc
shll
pop
jmp
cmp
enter
data16
ljmp
lret
das
cs
and
lret
sbb
and
incl
jns
jbe
sub
sub
ljmp
test
sub
or
mov
decl
cwtl
jnp
roll
leave
lods
test
hlt
out
pop
cmpsl
cwtl
mov
mov
cmp
lods
xor
inc
pop
int3
xchg
gs
pop
pushf
mov
cmpsl
repnz
dec
sub
push
or
ljmp
pop
mov
call
cwtl
enter
shlb
test
pop
cmp
out
test
cmp
addr16
shrl
dec
cmpsb
pop
out
sub
ljmp
clc
sbb
cmpsb
cmp
shrb
xchg
jge
jle
fwait
lret
data16
or
pop
pop
inc
pextrw
cmpsb
inc
addr16
test
cmp
ljmp
mov
fs
scas
mov
lea
mov
sub
leave
jl
mov
test
cmp
dec
adc
test
notb
xchg
cmpsb
enter
test
xor
jnp
adc
test
rcr
mov
aam
aaa
cs
aam
and
dec
add
and
push
mov
incl
das
repnz
pop
add
push
scas
call
push
sub
dec
bnd
icebp
out
clc
jmp
leave
mov
inc
jl
jp
xchg
insb
push
dec
sub
mov
fildll
incl
pop
icebp
sub
mov
mov
cmpsb
and
xchg
xor
loop
jp
leave
fxch
jg
cmp
cmpl
push
gs
outsb
adc
fadds
xchg
aaa
loop
js
and
into
scas
inc
or
pop
mov
pusha
out
mov
nop
lcall
imul
add
outsb
mov
fbld
mov
test
mov
pop
and
mov
dec
movsb
test
call
jle
sub
push
sub
repz
mov
test
sub
sub
push
jnp
xchg
outsl
ret
mov
mov
lcall
pop
fisubs
adcb
jns
gs
jbe
mov
ret
push
outsb
and
jbe
jecxz
xchg
inc
inc
pop
jge
adc
pop
imul
mov
in
call
loop
dec
adcb
test
jns
jp
out
jmp
jo
into
mov
jb
loope
nop
js
lcall
cmpsb
fsubrp
andb
loopne
xorl
mov
jno
lds
or
aam
sbb
in
inc
out
fdivrs
ss
push
xchg
mov
std
sbb
or
sbb
jg
add
inc
scas
ja
clc
mov
call
test
push
pop
dec
mov
xchg
loope
incb
push
mov
sub
inc
dec
into
sti
pop
loop
mov
dec
push
mov
pop
stc
or
or
jl
addb
roll
pop
daa
inc
push
testb
pushl
add
movsb
into
daa
mov
fwait
test
and
jg
sbb
aas
add
jae
pop
xchg
mov
mov
addr16
fisttps
popa
outsb
ja
cmp
mov
jle
ret
jno
shlb
cld
call
xor
popl
push
aaa
sbb
mov
int
push
sbb
dec
dec
clc
out
shr
fs
out
fldenv
sub
incl
sbb
push
push
inc
or
iret
dec
dec
xchg
loopne
icebp
push
jl
cmc
fs
insl
or
hlt
decl
rcrb
lock
sub
cltd
cmp
lret
cmp
repz
incl
sbb
push
ja
jae
mov
mov
pop
ret
mov
mov
push
jp
int3
jmp
pop
inc
inc
adc
clc
aam
mov
jl
int3
fmuls
jae
xor
jne
sub
sbb
pop
addr16
fmull
lods
jns
out
cmp
incl
add
cmc
push
cli
icebp
add
pop
mov
ret
call
and
adc
out
mov
cli
mov
sub
and
loop
aaa
cld
jg
out
push
mov
loope
push
repz
test
sbbb
sti
and
pushl
mov
in
mov
ja
adc
inc
lea
cmp
lods
sbb
jl
out
movsl
cmp
mov
ljmp
push
push
push
icebp
inc
rcl
mov
dec
add
scas
pop
pop
xchg
hlt
sub
call
push
arpl
pop
push
push
xlat
ss
sub
scas
cmp
andb
sbb
jg
lcall
cmp
repz
jae
stos
sbb
mov
pop
or
fstpt
jmp
mov
ret
xchg
out
mov
mov
xchg
push
ljmp
mov
dec
pop
adc
pop
sti
and
push
ret
xchg
jp
push
pop
in
push
sub
loopne
pop
jo
jl
jns
push
jae
and
incl
cmp
ret
and
in
mov
sbb
mov
pop
pop
ljmp
icebp
in
movsl
add
not
pop
cmp
int
call
out
jp
mov
or
adc
ljmp
imul
cmp
cmp
mov
jb
stc
mov
jg
sti
ja
sub
xor
jmp
pop
xchg
dec
jp
lret
lahf
cmp
decl
cmp
notl
leave
jmp
dec
mov
hlt
add
cs
test
jmp
call
fmul
xor
mov
in
mov
push
in
add
jecxz
xchg
test
xchg
inc
outsl
jmp
cmp
jecxz
dec
incl
cmp
icebp
mov
pop
lret
scas
inc
xor
dec
sarl
mov
call
scas
in
and
mov
cmp
ficomps
push
sti
xchg
xchg
xchg
cmc
xchg
test
jo
scas
adc
repz
clc
or
jg
decl
xchg
cmp
mov
xor
and
call
dec
fwait
jne
mov
inc
fs
rcrl
cmp
cmpsb
lods
les
out
stos
lcall
push
sub
cltd
test
add
cmp
adc
std
mov
jl
xchg
jne
xchg
es
sub
adc
sahf
or
das
clc
ja
imul
ja
mov
xchg
jae
sbb
jno
mov
or
cltd
jo
loope
sub
in
fidivs
sub
cmpsl
into
lods
data16
cmp
aas
aaa
sub
dec
movsb
dec
xor
flds
sarl
movsl
inc
xor
ljmp
lods
add
or
mov
pop
fbld
mov
js,pt
fcomip
fstpl
pushf
loop
pop
in
dec
jnp
xchg
sbb
mov
outsl
pop
lock
cmp
shl
add
sbb
enter
mov
xchg
cmp
out
lock
scas
popf
jecxz
cmp
dec
hlt
dec
shrb
add
mov
xchg
lcall
fcomps
mov
inc
test
jmp
or
sbb
jg
or
mov
or
cld
xor
mov
ss
mov
es
push
xchg
stos
aas
jp
xchg
inc
jnp
mov
pushl
sbb
ffree
pushf
imul
int3
jle
std
pushl
jbe
fcompl
lods
lock
adc
xor
push
xor
lahf
xchg
push
ljmp
and
mov
leave
mov
loop
int
adc
repz
jg
jge
push
popa
push
push
jg
xor
cs
pushf
lahf
jbe
jge
mov
in
pop
cld
decl
add
out
aaa
imul
popf
test
jg
pusha
in
filds
jge
add
pop
ficoml
ss
cmp
stos
ds
mov
icebp
pop
pop
and
dec
push
mov
lods
dec
in
scas
clc
das
dec
movsb
ja
lret
cli
jmp
test
push
xchg
int3
adc
leave
push
and
fnsave
push
ja
test
neg
fbld
fcomps
std
xchg
mov
mov
sbbb
lds
cwtl
ljmp
dec
mov
cmpb
daa
mov
mov
cmovge
imulb
ljmp
jmp
cmc
cwtl
popa
aam
ret
fisubs
mov
dec
clc
mov
fs
jne
pop
xor
push
xchg
scas
lret
sbb
pop
cmpsl
bound
jle
sub
jb
aam
dec
outsb
mov
xchg
mov
fcomps
mov
dec
aad
aam
fildll
jbe
mov
adc
jne
xchg
out
mov
jmp
sbb
mov
lret
in
xor
cmp
jo
xchg
movsb
add
sti
dec
aad
adc
stos
loopne
std
add
out
int
cli
stc
push
push
xor
mov
incl
in
xchg
push
daa
push
rcrl
aad
pop
dec
mov
mov
enter
adc
addr16
add
add
mov
mov
int3
inc
incl
stc
loope,pn
cmpsb
std
adc
cs
mov
xchg
inc
mov
mov
call
nop
dec
xor
pop
push
imul
popa
fs
jb
inc
aad
jmp
or
push
push
mov
cli
adc
and
ror
mov
sbb
jmp
leave
cli
leave
das
sub
jmp
jo
rcrl
sub
jns
aam
imul
sbb
sub
cmp
nop
mov
scas
in
lahf
push
lods
mov
dec
loop
mov
andl
inc
lcall
sub
icebp
mov
adc
iret
pop
sbb
lea
jmp
xchg
fwait
test
jbe
shrb
inc
cmp
shrb
faddl
movsl
sbb
xlat
xor
nop
sahf
fptan
ss
call
mov
add
xchg
rorl
inc
cmp
rcr
sub
shr
outsl
mov
jmp
test
cmp
jbe
push
outsl
clc
add
and
aas
sbb
pushf
sar
out
cli
ficompl
jno
pushf
push
test
outsb
sarb
and
sti
jns
cmpsl
cld
stc
imul
das
add
pop
movsl
jl
add
fcomps
and
notb
adc
decl
xchg
data16
and
push
and
mov
mov
jo
in
add
and
ficoms
pop
sbb
cmp
sqrtps
incl
xor
lcall
dec
repz
inc
shll
or
sar
ljmp
cmp
sub
adc
popa
div
rcll
ds
in
jbe
pusha
das
mov
jne
mov
mov
pop
jnp
out
popa
popa
aam
xor
dec
mov
xor
bound
add
nop
movsl
mov
push
bound
pop
mov
push
call
inc
pop
fstl
je
mov
pop
push
pop
mov
add
jmp
jle
mov
and
jo
pop
mov
or
ds
push
lock
decl
sbb
jnp
xlat
fcmovbe
into
cwtl
fcompl
jp
andb
xor
sbb
jmp
sahf
ljmp
mov
decl
mov
sahf
pop
jns
xchg
push
scas
test
popf
fpatan
sub
les
es
ljmp
int
pop
push
push
aad
cmp
stos
in
pop
fcomps
in
stc
icebp
push
adcb
inc
add
pushf
lret
mov
out
mov
mov
insb
add
ficompl
mov
or
mov
mov
push
and
scas
aad
xchg
lock
nop
pop
push
push
icebp
mov
inc
jne
addl
sbb
dec
fbld
pop
mov
shl
dec
mov
hlt
mov
adc
lcall
decl
xor
stc
movb
imul
insl
and
and
pushl
pop
lods
pop
cmp
sbb
inc
lods
pop
push
and
ret
sub
lock
sahf
inc
push
or
jb
lcall
in
addl
incl
sbb
ljmp
movsb
into
jae
pop
mov
in
scas
popa
jne
sti
gs
push
fld
imul
xorb
call
or
jmp
jo
sbb
push
movsb
dec
push
jecxz
adc
movsb
push
addr16
data16
sbb
sarb
inc
dec
add
idivb
call
xchg
and
lods
ja
daa
ror
lock
orb
xchg
call
movsb
in
xor
push
lea
inc
out
inc
fistpl
add
add
push
pop
and
push
pop
cs
sarl
cmc
dec
mov
push
decl
ja
roll
push
xchg
mov
ljmp
push
dec
js
ljmp
add
mov
sbb
sub
inc
adc
call
xor
jns
xchg
ljmp
mov
fstl
cltd
sbb
mov
rolb
iret
imul
call
gs
pop
and
sbb
mov
mov
aad
sbb
andb
ljmp
daa
sbb
fs
into
imul
cli
ljmp
and
fcmovu
inc
pop
xlat
adc
jbe
mov
pop
pop
mov
inc
jmp
mov
xchg
ljmp
clc
cmp
ljmp
cwtl
add
sub
jg
inc
popf
pop
inc
inc
sbb
loop
loop
cmpsb
js
call
std
jmp
icebp
sub
mov
pop
jg
pushl
add
jns
inc
sbb
add
add
fcoms
or
outsl
fistpl
cmp
test
sbb
fisttps
incl
movsl
dec
lcall
jmp
hlt
test
insl
mov
clc
iret
xchg
outsb
sahf
cmp
and
jg
fildll
mov
cmp
incl
fwait
enter
push
ss
jno
repz
aaa
out
lds
adc
add
call
xorl
loopne
ret
dec
decl
push
mov
jo
push
inc
hlt
jbe
lds
inc
je
jne
xor
jle
push
loope
test
cld
dec
push
hlt
aaa
ds
jns
shl
mov
mov
jnp
jecxz
orl
repz
mov
jmp
rcr
push
out
mov
ret
or
pop
xor
repz
lcall
adc
data16
add
adc
incl
int3
dec
mov
loopne
push
stc
jle
sbb
sbb
inc
pop
dec
lret
cmp
out
mov
lds
add
sbb
movsb
icebp
jo
xor
push
test
or
fidivl
adc
xchg
outsl
loope
cmc
cs
lret
cmc
dec
out
call
enter
dec
hlt
daa
xchg
stos
mov
push
hlt
jmp
add
xor
mul
dec
mov
add
icebp
or
and
fcmovnbe
arpl
and
pop
sub
ret
sbb
mov
incl
ret
inc
mov
dec
jge
fdivrs
add
dec
xor
dec
jbe
adc
rcrb
and
lock
ljmp
cli
mov
mov
sub
jnp
and
jmp
push
pop
inc
hlt
xor
jge
cmpsb
inc
bound
cmpsl
push
incl
scas
sub
aas
out
sti
xchg
fldl
jg
mov
in
das
inc
xor
ljmp
inc
fdivrp
test
xor
or
repz
xor
dec
push
adc
test
jns
fwait
cli
in
adc
cmp
loop
and
lods
xor
mov
movsl
sub
imulb
push
aam
pop
or
or
dec
les
push
pop
push
jbe
mov
aad
cli
and
clc
or
shll
mov
das
jle
jno
dec
aas
incl
cld
pushl
fldcw
popf
fwait
xlat
mov
iret
and
btr
xchg
sub
pop
dec
lods
push
xor
xchg
mov
loop
mov
mov
call
loopne
push
push
sti
inc
lods
jecxz
push
call
mov
add
push
xchg
nop
in
and
push
mov
repz
dec
xlat
dec
jl
dec
js
xchg
and
aam
mov
jno
loope
ja
mov
clc
sbb
push
ljmp
cmp
cmp
and
arpl
dec
jg
jecxz
jae
sub
add
ljmp
jge
popa
and
sbbb
test
xlat
and
jo
jg
dec
nop
cmp
lcall
mov
fiadds
pop
mov
jmp
ffree
rorl
push
add
lods
das
outsl
xor
jo
pop
pop
jbe
das
and
in
adc
fisttps
out
lock
jmp
mov
jecxz
dec
push
lock
insb
or
sarb
popf
push
call
mov
je
testb
add
xchg
hlt
lret
out
popa
enter
faddl
and
pushl
fs
push
aam
mov
sub
fistl
fcmovb
dec
out
sbb
lcall
xor
xchg
xchg
shlb
imul
hlt
insl
movsb
ret
cmp
pop
cwtl
mov
sub
inc
stos
mov
pushl
mov
nop
adc
rcrb
cmp
in
bound
out
cli
jmp
or
aas
sub
jl
fmul
shll
sbb
add
ja
cld
fs
movsl
add
jl
sbb
pop
pop
mov
pushf
filds
fs
imul
adc
push
jmp
or
push
jg
jmp
mov
and
mov
jmp
clc
mov
icebp
mov
lcall
stos
adc
dec
int3
stos
aas
std
sarb
mov
iret
adc
and
ljmp
pop
std
push
mov
inc
dec
icebp
mov
es
add
cmp
movsl
scas
dec
fsqrt
push
mov
call
jns
dec
pop
loop
mov
or
adc
mov
mov
cmp
incl
fs
or
sahf
jnp
shrl
mov
sti
insb
mov
xor
jmp
int3
popf
xchg
dec
inc
add
cmp
insb
sahf
insl
xchg
ljmp
into
sub
push
mov
mov
xor
xchg
xor
call
fistps
std
scas
cmp
or
mov
flds
loop
imul
arpl
jl
enter
xor
or
in
movl
testl
adc
out
int
arpl
mov
jge
pop
adc
data16
and
xchg
sbb
push
mull
aas
pop
xor
xchg
mov
jecxz
call
mov
shll
lods
xor
push
add
mov
jg
sub
js
outsb
decl
insl
sbb
and
pop
test
lahf
repz
movsb
cmp
lahf
dec
inc
hlt
jnp
push
hlt
pushl
xchg
call
cmp
ss
imul
mov
mov
push
cmp
jl
cmp
jbe
push
pop
xchg
lcall
fisubl
out
mov
stos
stc
sbb
mov
push
adc
mov
pushf
jl
je
jnp
lds
stos
dec
in
lock
ret
into
data16
jmp
pop
imul
and
stos
in
sub
pop
pop
repz
mov
pop
push
cmc
add
lock
sarb
push
jg
mov
pop
push
fdivr
pop
es
and
ljmp
inc
adc
bound
sbb
pop
jg
mov
sbb
incl
inc
or
addl
fsubrp
imul
jg
out
pop
adc
jg
and
call
pushf
out
cmp
and
lcall
sub
or
icebp
inc
imul
inc
ss
lret
jbe
mov
mov
xor
outsl
xor
mov
or
call
jns
mov
gs
mov
and
lcall
mov
lods
addr16
lock
dec
in
dec
lcall
push
std
rolb
pop
ds
jno
inc
test
cmc
fsubl
jmp
add
adc
inc
add
fisubrl
icebp
jmp
movsl
mov
frstpm(287
pop
decb
xor
sahf
pop
jle
iret
jno
cmp
xchg
popf
call
cld
sbb
xor
daa
inc
call
and
outsb
jmp
pushl
push
scas
out
xorb
cmpsl
lret
nop
fdiv
out
dec
push
movsb
loop
mov
or
add
fs
ljmp
inc
xor
pop
xlat
or
push
jle
sub
into
lcall
lods
arpl
mov
adc
cmp
mov
test
dec
dec
pop
jb
push
cwtl
in
push
sbb
lcall
ljmp
or
inc
and
pop
push
xchg
lret
js
data16
andb
rcrb
pop
mov
orb
mov
pop
dec
sahf
xor
into
xor
ret
jge
push
sub
fsubrs
orl
inc
pop
or
cmp
and
mov
scas
jp
pusha
sbb
or
add
jge
xchg
lea
sar
incl
mov
or
inc
cld
xor
mov
cmpsl
xor
cli
ljmp
cmp
and
lds
mov
pop
ss
xchg
enter
pop
inc
jb
jmp
cmp
fucomi
mov
sahf
mov
cmpsb
or
push
ljmp
xchg
cwtl
cmc
jle
sahf
xchg
mov
jb
filds
or
mov
mov
fisubrl
add
decl
and
roll
push
jmp
imul
push
pusha
push
jle
cld
addr16
ljmp
and
js
arpl
les
sub
adc
call
mov
mov
rcrb
cmp
push
dec
repnz
clc
cld
mov
dec
mov
push
adc
dec
out
ljmp
gs
inc
lock
repz
jp
sub
sbb
push
cli
inc
mov
sti
lods
hlt
jecxz
and
mov
adc
push
push
push
push
movsb
cmp
aaa
push
mov
add
fmull
mov
mov
pop
jge
mov
js
in
dec
mov
faddl
fmuls
jmp
cld
inc
test
scas
mov
fimull
das
idivl
jnp
sbb
andb
std
jmp
push
nop
fs
mov
adc
stos
push
lret
mov
lret
push
xor
decl
xor
bound
in
rcrl
lds
data16
xor
test
mov
sbb
lcall
add
fdivrl
bound
cmp
imul
orb
out
shll
push
xor
jecxz
subl
mov
mov
adc
mov
les
add
int
adcl
push
jg
mov
mov
add
or
sub
sbb
lds
or
mov
xor
cmpsl
mov
ljmp
in
and
or
les
hlt
gs
mov
in
xor
sbb
push
xor
mov
cld
out
pop
sub
insb
fwait
mov
jecxz
xchg
mov
cmp
pushl
call
clc
push
cmp
es
and
mov
fnstsw
mov
jg
lds
call
sti
or
stos
or
loop
pop
inc
jne
mov
push
sub
pop
and
dec
data16
cmp
inc
repnz
decl
add
cld
cmpb
adc
addr16
data16
imul
jmp
ss
ljmp
mov
lcall
push
dec
pushf
dec
fs
loop
gs
push
fsubs
hlt
scas
mov
jo
movsb
incl
int
push
xchg
xchg
in
xchg
sahf
in
jp
aaa
and
mov
es
jmp
jecxz
jno
nop
nop
dec
cmp
rcrb
jnp
pop
cmc
jecxz
out
xlat
pop
test
inc
popa
faddl
ds
dec
sbb
and
mov
clc
call
add
jb
ljmp
stos
sbb
mov
add
ljmp
dec
cmc
icebp
ret
cwtl
cli
and
mov
jo
mov
lods
dec
decl
ljmp
insl
mov
adc
out
push
int3
or
push
cmp
out
jmp
fisttps
scas
pushl
sbb
roll
out
or
sbb
bound
std
sti
sbb
mov
or
jg
cmp
loope
pop
xor
adc
ret
in
jnp
mov
daa
push
mov
iret
pop
std
js
mov
jmp
pop
lcall
xchg
push
shlb
decl
mov
jg
dec
fstpl
push
dec
addr16
hlt
adc
jns,pn
sub
jmp
mov
push
sbb
dec
xchg
imul
sub
rcll
jmp
xchg
ss
lea
rorl
adc
xor
inc
cmpsb
sub
sbb
pop
rol
call
repz
and
test
inc
cltd
jmp
sbb
imul
lock
pop
jp
scas
aad
inc
push
push
and
xlat
push
dec
xchg
pop
mov
push
icebp
pushl
loope
mov
jl
imulb
mov
dec
inc
xchg
in
sbb
and
sahf
lcall
push
inc
pop
and
xchg
adc
aaa
xor
xchg
xlat
push
cmpsb
jae
cmc
mov
push
xchg
mov
add
icebp
std
icebp
dec
lret
jno
xor
gs
pop
imul
es
cmc
int
das
call
xchg
cmp
inc
mov
incl
test
mov
xchg
into
test
aas
add
movsl
inc
cli
orb
mov
and
incl
fs
add
ljmp
fiadds
loopne
mov
stos
pop
fcomps
push
stos
sbb
inc
test
mov
push
call
popf
dec
push
out
out
jp
inc
xchg
pushl
adc
inc
adc
popa
clc
lock
dec
and
push
repnz
loopne
nop
or
cmp
mov
outsl
clc
call
stos
das
sub
dec
leave
xor
fidivl
sub
js
in
adc
clc
pushl
dec
or
push
xor
jb
lret
pusha
mov
and
cmp
inc
jne
pusha
pop
and
jp
or
fwait
notb
sub
jmp
inc
in
rcl
jne
hlt
mov
inc
mov
fs
fdivrp
inc
es
and
xchg
movsl
decl
cwtl
or
fists
pop
hlt
mov
dec
mov
pushf
xchg
hlt
out
call
fmuls
daa
jo
hlt
call
popf
pop
dec
pop
push
push
sbb
inc
xchg
int3
test
inc
pop
insl
inc
mov
mov
mov
mov
out
ds
js
icebp
sahf
aas
pop
pop
push
mov
testl
cmpsl
sub
mov
int3
bnd
inc
pushl
cmp
testl
cmp
arpl
mov
inc
iret
xor
ljmp
out
xchg
mov
mov
pop
mov
inc
sub
sub
stos
or
int
adc
call
mov
mov
cmp
sub
inc
mov
push
add
sti
in
int
jnp
adc
popf
mov
cmpsl
nop
xorb
stos
inc
xor
inc
lds
push
push
mov
aaa
shlb
sbbl
dec
fldcw
mov
and
test
fsub
and
dec
mov
xchg
clc
stos
ljmp
pop
dec
inc
fnstcw
and
or
jae
leave
mov
push
jne
iret
loope
decl
jbe
inc
or
adcl
xchg
lahf
call
std
xor
cltd
pop
adc
inc
pop
adc
cltd
push
pop
jns
lcall
test
enter
jmp
push
xor
cmp
xchg
cmp
cmp
ljmp
jb
add
sub
shr
or
xor
pop
out
xchg
movl
push
cmp
and
mov
ljmp
and
loopne
fstp
inc
stc
xchg
sahf
mov
xlat
push
std
jmp
cmc
adc
adc
mov
lcall
push
jo
rcl
push
mov
jg
decl
adc
cmp
orl
xchg
jb
cld
jg
jae
add
inc
ljmp
dec
fsubrp
and
mov
fs
cld
xor
ds
and
std
decl
inc
movsl
fdivrp
push
insb
xchg
xor
stos
jno
adc
adc
push
outsl
cmc
sti
sub
lcall
dec
cli
pop
cmp
idivb
clc
mov
scas
rcl
stos
sbb
inc
or
adc
lods
ljmp
lods
sub
rcl
stos
out
movsb
enter
ljmp
adc
lret
loop
shl
add
pop
je
pop
inc
vcvttps2dq
fidivl
jmp
lds
sbb
and
les
cmp
mov
int3
shl
push
fdivrs
in
push
pop
rcl
test
pop
popf
fldcw
lret
js
clc
or
xor
dec
loope
pop
xchg
shlb
xor
dec
mov
cltd
fdivrs
adc
jbe
int
sbbl
fwait
sub
cs
xor
xchg
and
aam
aas
sbb
add
incl
mov
aaa
push
jae
cmp
xchg
pop
pop
enter
out
enter
mov
mov
mov
fwait
test
add
mov
push
cwtl
sbb
into
xchg
xor
shll
pushf
ja
and
call
jmp
or
mov
jg
imul
mov
mov
movsl
mov
mov
repz
out
in
adc
and
mov
lcall
aad
js
cmp
std
adc
inc
leave
sub
or
aaa
xor
jae
in
ds
ljmp
scas
enter
ret
or
daa
pop
popa
sbb
pop
repnz
dec
addr16
adc
sub
jbe
out
mov
adc
lods
cmpb
cmc
sub
jne
inc
jnp
icebp
adc
ffreep
stc
inc
lcall
jno
cmp
xchg
mov
mov
xchg
mov
int
xor
outsb
fisubs
lcall
sbb
int
cmp
dec
insl
addl
out
mov
lcall
adc
jp
push
bound
mov
pusha
ja
mov
mov
sahf
push
cs
jl
call
mov
cmp
pop
mov
push
fisubrl
mov
movsb
pushl
cld
or
sbb
roll
mov
mov
int3
orb
push
dec
ret
or
mov
mov
ret
push
inc
hlt
cmp
xchg
add
lret
jo
sub
fnstsw
mov
jecxz
int
ljmp
or
jg
and
rclb
push
ret
cs
daa
shrl
mov
call
cmp
or
and
mov
sub
mov
lcall
mov
xchg
pop
jns
mov
std
jmp
int3
std
stc
mov
pextrw
cmpl
push
mov
add
popa
mov
sbb
pop
movsb
test
ror
jg
cmpsb
in
fldt
xchg
xchg
incl
loope
push
push
xor
add
decb
push
cmp
pop
cli
ljmp
inc
stc
jg
push
mov
mov
push
dec
shl
and
mov
push
incl
mov
jle
aas
mov
dec
test
and
sub
sub
clc
sub
decl
mov
sbb
scas
sbb
or
xchg
sub
ljmp
out
inc
dec
insl
ljmpw
imul
cmp
movsb
mov
mov
insl
pop
adc
pop
in
fwait
jmp
into
stc
std
pushf
inc
ljmp
je
sbb
fwait
negl
iret
insb
sbb
leave
aam
push
push
fldl
sub
sub
aad
dec
addl
daa
push
scas
into
je
jp
in
in
sbb
in
lret
jl
js
jp
push
std
aaa
insb
loopne
int
push
mov
js
push
into
stos
pop
xchg
cli
cmp
js
push
daa
enter
mov
jl
or
popf
push
dec
pop
xor
cmp
lcall
fistps
fimuls
pop
out
push
mov
mov
test
incl
jge
aad
lcall
pop
sbb
and
aad
loop
insl
push
inc
mov
or
cmpl
in
xor
ljmp
jle
sub
mov
roll
test
xor
lods
ljmp
jg
scas
mov
mov
dec
inc
lock
jns
cmp
push
or
push
dec
call
ret
loope
sar
xor
mov
out
jle
ds
jno
inc
mov
sahf
sub
in
incl
lods
lods
in
mov
and
fcoml
cmpsl
popf
mov
mov
inc
mov
ja
add
push
fistl
pop
cmc
pushl
das
sub
sbb
pop
push
sarl
sbb
rorl
jmp
pushf
jmp
dec
push
test
fs
into
callw
adc
mov
sbb
cmp
jp
dec
icebp
inc
jg
jle
scas
dec
daa
push
mov
jb
mov
inc
or
cmpsl
pop
dec
out
sbb
sub
cld
filds
mov
mov
mov
imull
jnp
js
mov
scas
pop
test
hlt
fwait
aam
mov
pushl
dec
jo
popf
out
loopne
push
mov
cmpsl
pop
adc
or
jge
imul
jnp
inc
out
sti
sub
imul
pop
sub
xchg
inc
mov
mov
xchg
out
xchg
call
stc
cmpsb
mov
pop
outsl
hlt
jle
and
ret
shll
sahf
loopne
jl
xchg
incl
cmp
jg
in
and
mov
in
pop
push
cmp
cmp
cld
cld
xchg
cmp
lcall
inc
leave
movsb
mov
mov
mov
mov
insb
aaa
dec
cli
outsl
lcall
aas
dec
cs
insl
adc
lcall
xlat
and
mov
rcll
jae
aaa
ret
addr16
inc
rclb
adc
lock
jbe
cmp
jle
and
shlb
dec
push
add
mov
mov
loop
xchg
mov
push
dec
ss
inc
add
loope
or
loope
push
dec
inc
fisubrl
movb
lret
cmp
sub
mov
xor
mov
call
or
pop
jne
pop
lcall
add
xchg
lds
cmp
jecxz
jg
inc
xorl
aaa
mov
inc
insb
push
subb
add
inc
push
sub
inc
jp
es
mov
in
loopne
mov
stc
test
je
fildl
pop
adc
mov
pop
dec
jns
pop
xor
push
data16
dec
clc
xlat
push
push
jmp
pop
scas
jae
rcl
pop
jp
shll
sub
ret
int3
cmp
push
and
movl
adc
add
lcall
sti
adc
call
sbbb
int
pusha
sub
imul
mov
pushl
sbb
xchg
inc
shll
nop
lods
xchg
mov
in
nop
or
xorb
je
lret
ret
mov
jno
lahf
cmp
adc
mov
jb
xchg
sarl
sbb
in
inc
push
lods
pop
jne
popf
movsb
lock
fistl
in
loopne
in
lret
incl
sub
cltd
test
inc
cmpsl
fmuls
fwait
lea
dec
mov
xchg
in
pop
inc
movb
adc
incl
or
lods
aaa
aad
mov
in
mov
cmc
lcall
daa
jb
mov
inc
dec
inc
stc
ds
pop
push
sub
adc
xchg
jae
pop
xchg
shlb
add
iret
add
fdivr
test
push
dec
ret
push
fimull
pop
in
hlt
lea
rolb
divb
jmp
push
xchg
shll
out
test
fdivrs
lock
loop
add
inc
decl
lea
int
cmp
fdivr
pushf
pop
mov
div
cmp
fldl
aas
bound
push
jle
push
inc
ret
clc
call
jp
iret
mov
cmp
dec
ljmp
pop
jecxz
and
push
push
sub
xor
es
mov
ljmp
mov
xchg
adc
insb
inc
inc
mov
cmp
ljmp
scas
cmp
mov
cld
jno
cltd
xor
mov
enter
shll
pushl
cltd
enter
or
enter
mov
cmc
jl
adc
inc
mov
cld
loope
outsb
xchg
shll
mov
std
cli
sbb
js
fs
sub
mov
inc
lahf
jbe
loopne
ljmp
add
jl
loopne
aaa
dec
mov
add
jne
jge
jbe
push
cmpsl
mov
outsb
and
sub
pusha
rorb
jg
mov
xchg
testb
shlb
sub
mov
dec
lds
bound
jne
add
lcall
xchg
stos
mov
mov
test
mov
sar
pop
lahf
mov
test
mov
hlt
frstor
imull
xchg
adc
fwait
cmc
in
adc
aad
das
clc
fisttpl
add
xchg
mov
and
xor
outsl
adc
dec
add
ljmp
mov
negb
pop
popf
call
mov
push
icebp
arpl
add
ljmp
inc
jg
in
loopne
lods
pusha
arpl
sbb
movsl
outsb
ss
enter
std
mov
rol
imul
and
jb
sbb
pushl
fidivs
xchg
sub
or
leave
shlb
cmp
cmpsl
mov
pushl
sub
mov
cmpsb
sbb
cmp
xor
mov
xchg
xchg
fildl
sub
mov
cli
inc
and
mov
pusha
sbb
mov
incl
fwait
jae
sbb
adc
sahf
mov
popa
and
and
decl
fdivs
ja
jg
sub
fmulp
add
jne
dec
pop
mov
incl
fcoms
add
xchg
rclb
int3
pusha
xor
pop
insb
push
out
push
mov
pop
bound
dec
mov
mov
out
push
jg
lahf
jl
xchg
mov
pop
outsb
sbb
sub
mov
mov
ret
jo
sbb
push
sub
call
loopne
cmp
cs
bound
push
jb
cmpsb
pushl
je
inc
sbb
pop
in
hlt
rcrb
wrmsr
sub
call
shlb
mov
or
fwait
sbb
inc
cmpsl
cmp
pushl
fcmovnu
scas
xlat
mov
lcall
jl
aas
sar
cltd
lahf
sbb
cmpb
ret
mov
push
ljmp
or
movsl
insl
cmp
push
dec
jl
enter
sbb
xlat
fisubrs
scas
hlt
ret
jecxz
sbb
leave
sahf
xor
sub
mul
jbe
iret
sbb
and
pop
or
or
mov
decl
addr16
pop
or
pop
cmpsb
fwait
dec
notl
imul
sub
sarb
lcall
adc
lret
adc
jl
cmp
cli
xchg
lcall
cli
pop
sarl
mov
dec
mov
xchg
dec
mov
mov
ljmp
push
mov
mov
mov
push
lcall
ljmp
lods
jo
incl
stos
push
jne
jg
bound
pop
or
int
jge
ljmp
into
cmpl
add
enter
xor
fidivs
and
mov
mov
inc
test
sub
push
loop
jmp
cmp
hlt
jnp
pop
push
adc
sbb
push
pop
popa
inc
leave
call
dec
add
dec
fs
popf
jae
jno
mov
push
shl
shlb
push
enter
sbb
test
mov
xchg
aad
outsb
stc
subl
jnp
dec
in
mov
xor
cmp
mov
mov
add
xchg
ret
pusha
ss
xor
and
cli
leave
xchg
mov
js
idiv
pop
cld
push
jnp
and
xor
test
adc
testl
das
mov
ja
jb
insl
stc
sbbl
dec
cmc
fildl
pop
pop
add
testb
push
cld
jg
ljmp
jle
xor
xor
adc
cs
mov
leave
sbb
sbb
lcall
cld
test
jmp
loope
scas
push
andl
cmp
mov
dec
dec
jmp
jnp
pushf
add
bound
ja
fdiv
push
jnp
mov
sbb
fisttps
mov
push
jne
hlt
pop
lret
cmp
clc
movsb
and
inc
call
out
mov
ret
push
imul
fdivrl
or
cs
int
cli
test
jle
xor
lcall
xlat
push
xor
stos
and
mov
adc
cmp
in
push
sub
pop
fistl
mov
sbb
pop
mov
push
mov
imul
mov
adc
pop
daa
pop
and
add
jmp
jb
aas
cmp
inc
push
fists
pushf
add
mov
testl
mov
fs
push
clc
pop
push
clc
test
mov
inc
incl
arpl
push
cmp
xlat
xchg
loopne
stos
xor
jno
xor
cld
fsubl
pop
cmc
jg
sbb
movsb
ret
shll
push
outsb
xchg
pop
xchg
les
ja
push
test
aaa
mov
sarb
add
push
push
and
xchg
ja
ljmp
inc
xor
inc
lret
shl
cmc
rclb
inc
push
cmpsb
pop
pop
adc
addr16
lcall
jo
adc
and
clc
cmp
insl
add
or
imul
jbe
and
outsb
insl
dec
fsubr
aaa
sub
hlt
adc
mov
test
insl
xchg
in
pusha
rolb
mov
movsl
ret
mov
sub
or
sub
dec
add
jg
fildl
rol
mov
sbb
sbb
inc
dec
cltd
xor
pushl
cmp
inc
mov
cmp
adc
lahf
xor
repnz
gs
lcall
in
fs
je
lea
cmp
dec
aaa
sti
xchg
and
int
lret
jb
incl
xchg
mov
mov
cli
nop
mov
call
in
dec
ficoml
jmp
leave
test
sub
leave
and
shll
fildll
out
dec
repz
xor
repnz
hlt
aam
out
xor
fwait
pushl
xchg
and
and
xchg
ja
dec
cmp
inc
jo
mov
mov
or
pop
or
lcall
fld
daa
mov
mov
adcb
out
jne
dec
sbb
pop
icebp
sub
cmpsb
call
out
sbb
test
imull
xor
mov
rcl
stos
pop
mov
mov
outsb
rclb
shlb
inc
xor
incl
int3
push
sbb
out
test
mov
push
xchg
push
aad
call
adc
cmp
lods
dec
xor
push
mov
ljmp
ret
pop
fwait
pop
ret
lcall
push
out
add
mov
and
test
mov
push
decl
and
pop
pop
jecxz
movsb
loop
test
adc
cmp
or
cmp
bound
cmp
mov
push
adc
ret
pushf
lea
mov
mov
pop
mov
mov
dec
cmp
or
jg
lods
push
hlt
repnz
test
mov
sbbb
push
adc
xchg
mov
insl
adc
sbb
js
push
mov
into
ds
xor
stos
lods
packuswb
cmpsl
mov
cld
jl
push
les
xor
mov
incl
dec
loope
sbb
sub
push
inc
js
mov
and
push
incl
or
sub
dec
lret
inc
mov
push
dec
add
fnstsw
push
enter
add
or
mov
cmp
jp
scas
jmp
enter
sbbb
fsubp
es
and
incb
mov
push
loop
scas
out
cmp
add
push
ja
cltd
sbb
cli
mov
loopne
cmpsl
in
or
fbld
cmc
add
inc
dec
leave
sub
mov
dec
inc
ljmp
sar
add
inc
pop
sti
push
mov
jmp
jns
sahf
negb
inc
ljmp
call
cmp
push
outsl
pop
mov
addl
xor
and
sahf
push
jo
add
and
dec
pop
xor
mov
fs
adc
in
dec
scas
decl
test
and
xchg
xor
inc
push
xor
das
dec
in
mov
lds
ret
andb
and
xchg
lock
mov
inc
mov
cmp
mov
fimuls
sbb
or
push
pop
cwtl
test
cli
sub
sub
mov
dec
dec
and
mull
adc
popa
xor
inc
pop
in
outsb
mov
push
push
sbb
aad
cli
icebp
pop
mov
fldt
mov
pop
rcrl
call
jb
imul
mov
sub
fistpll
ja
mov
jnp
cmp
dec
adc
pop
xor
mov
in
inc
rorb
incl
jae
push
mov
ja,pt
push
movsb
pop
add
jne
dec
add
and
imul
inc
inc
dec
push
test
jecxz
imul
inc
ret
lcall
fldenv
lds
sub
pop
fbld
out
cmpsl
push
cmp
repnz
pop
or
movsl
shrb
mov
add
mov
dec
test
popf
pop
xchg
aaa
pop
mov
xor
loopne
inc
pop
enter
lret
xchg
popa
mov
fisubs
mov
sub
lcall
add
and
push
add
ja
fiaddl
cmpsl
sahf
push
sbbb
lock
mov
adc
sub
jnp
mov
jl
test
out
incl
pop
mov
in
pop
jle
imul
sbb
dec
insl
ror
int
in
cmp
pushf
xor
incl
rol
or
and
inc
pop
add
and
lahf
movsl
sbb
push
cmp
ljmp
jmp
ret
call
mov
stc
xchg
add
nop
fisubrs
adc
repnz
incl
pop
cli
int
inc
fidivrl
lahf
jns
rol
decl
fcomps
jno
fimuls
cmp
pop
int3
mov
ss
push
jg
inc
jb
movsb
loopne
inc
adc
cmp
cli
call
in
xor
loope
fnstsw
push
clc
mov
mov
mov
sub
pop
jl
fstps
les
fdivrs
cmpsl
push
or
lds
cld
dec
arpl
jmp
fcoml
cld
je
mov
jae
mov
pushl
fdivrs
ss
mov
xchg
pop
subb
fadd
and
adc
pushl
cli
mull
jbe
pop
pop
leave
xchg
jae
push
outsb
adc
mov
loope
or
jg
pushl
sbb
aam
outsl
sub
pushf
jle
jmp
jno
dec
cltd
or
cld
lods
popf
mov
sbb
dec
fldcw
stos
xor
or
out
jae
addb
imul
outsb
push
lret
push
gs
pop
fiaddl
fnstcw
inc
popa
clc
mov
xor
cwtl
mov
test
push
or
pop
shrl
cwtl
xlat
sub
inc
mov
pusha
les
jp
bound
imul
xchg
das
andb
mov
pop
mov
lods
aad
sbb
movsl
test
jns
mov
arpl
jne
push
sbb
inc
dec
xchg
stos
test
pop
dec
add
lods
lcall
xchg
mov
mov
ss
jg
cwtl
lock
dec
inc
insb
push
sub
xchg
pop
mov
mov
inc
xchg
fldenv
into
cmp
or
pop
cli
mov
adc
jl
adc
inc
mov
outsb
loope
std
lret
push
daa
fwait
cmp
mov
jecxz
aad
ss
xchg
or
mov
sarl
pop
push
sbb
push
jp
mov
movsl
pushl
ljmp
lret
xor
jle
mov
push
push
std
jo
dec
jmp
sub
arpl
repz
dec
cmp
xchg
enter
xchg
xor
lea
fisubs
insl
dec
sub
jmp
mov
cmc
ret
cltd
lock
xchg
cmp
nop
sub
js
mov
dec
movsb
dec
gs
outsb
jno
mov
sub
push
incl
ds
movsl
jle
adc
xchg
leave
mov
sbb
loopne
push
cmp
shlb
call
inc
xchg
cmp
lcall
js
ret
es
pop
in
call
clc
fists
cmp
inc
outsl
jns
mov
ret
ficompl
out
incl
fwait
pop
call
sub
loopne
mov
incl
sbb
in
jo
mov
xchg
enter
inc
mov
push
gs
mov
push
lods
jl
das
cli
jmp
sub
mov
or
sbb
or
push
stos
xor
mov
push
mov
adc
mov
call
cwtl
pop
and
inc
add
repnz
sbb
out
sarl
cmp
mov
call
fdivr
or
ret
cmp
pop
mov
cmpsb
push
inc
or
pop
and
and
push
pop
push
int
push
sbb
push
jmp
out
sarl
bound
xchg
xchg
sbb
insb
pop
pop
inc
dec
movsl
jge
or
pop
popa
jg
xchg
lds
xchg
cwtl
subl
mov
push
jnp
jg
pushl
lods
inc
inc
addr16
push
xchg
jb
dec
lods
pop
add
jae
and
call
hlt
lcall
push
movb
push
xor
cmp
xlat
call
out
cmp
adc
xchg
adc
je
adc
sub
jo
in
fistpl
in
incl
cmp
fcoml
hlt
notb
pop
lea
lret
outsl
rcrb
mov
push
pushf
decl
loope
call
iret
roll
clc
mov
inc
jnp
lcall
adc
jns
dec
jp
push
into
sub
push
mov
das
decl
and
jecxz
repnz
push
push
shlb
pop
cld
insl
or
cmp
lcall
aas
jo
stc
jmp
aad
loopne
push
mov
aaa
in
repnz
out
inc
dec
nop
das
pop
dec
add
inc
sub
cmpsl
inc
clc
fnstenv
into
sbb
mov
sub
lret
call
sbb
cmp
and
mov
push
cmpsb
jmp
in
in
inc
xlat
mov
jnp
out
mov
xchg
push
jo
jl
pop
gs
xor
xor
sbb
sar
jmp
leave
push
sub
addr16
repz
xchg
mov
int
jae
push
pop
jmp
mov
in
mov
xchg
jge
jp
cmpl
xchg
dec
mov
aas
add
sub
mov
cmp
xchg
fucomi
push
and
out
or
cmc
add
cmp
ss
sbb
cmpl
ret
popa
shll
mov
push
dec
fiadds
xorl
sbb
inc
lods
fstl
push
sub
js
data16
sub
sub
inc
xchg
testb
pop
adc
aad
jne
call
mov
ds
add
daa
and
test
inc
sub
int3
mov
sbb
ljmp
in
fisttpll
sbb
test
es
out
test
add
call
jbe
shlb
push
dec
test
jp
add
rcrb
jp
dec
aas
aam
mov
scas
lock
jge
cmpsl
dec
dec
lcall
int3
loopne
xchg
sub
out
dec
sub
ret
imull
jge
sbb
icebp
cmpsl
jae
sti
inc
and
sbb
popa
pop
pop
adc
js
shrl
push
dec
adc
xorl
cmpsb
mov
sarb
cmp
sbb
sub
push
jb
cmp
jg
cmc
mov
stos
ljmp
repz
inc
add
jb
mov
stos
dec
adc
pop
cld
xchg
xchg
sbb
decl
jecxz
out
or
arpl
js
shll
mov
in
repnz
pop
rorb
fcomip
cmp
mov
mov
test
orl
and
dec
lcall
lret
pop
aas
fisubl
push
or
adc
js
fisttps
shll
push
sub
enter
lret
push
imull
popa
pop
adc
movd
iret
decl
or
pop
and
insl
rcrl
dec
call
testl
mov
out
clc
lcall
leave
cltd
rcrb
push
sub
mov
pop
int3
js
pop
nop
incl
js
dec
bound
shlb
test
nop
movsl
pand
imul
and
fstpt
fldcw
popa
pop
repnz
add
dec
shr
das
jbe
push
pop
aam
push
insb
cmpsl
dec
cmp
ficoml
decl
lock
adc
xchg
cmc
imul
mov
in
outsb
mov
lcall
iret
test
push
imul
jb
cmpsb
rclb
xor
lcall
push
ret
xchg
pushl
fadds
lcall
or
lock
push
call
pop
cld
lods
dec
jg
sbb
hlt
lods
shlb
xor
jno
cld
cld
mov
xchg
lcall
pusha
neg
mov
xor
loopne
outsl
outsl
in
enter
call
mov
push
xchg
xor
push
dec
sahf
pop
inc
dec
imul
or
inc
mov
or
mov
jb
adc
pushl
cld
cmpsl
fcomps
enter
push
stos
ljmp
ss
je
pop
fcomip
cli
mov
xchg
lds
int
cwtl
test
test
mov
jnp
mov
ljmp
sub
mov
adc
add
out
inc
pop
popf
jle
xchg
dec
stc
aad
shll
call
std
fiadds
xor
cmp
loope
cmp
ja
push
mov
add
mov
jne
pop
xor
test
ds
lock
sub
jnp
push
adc
inc
mov
pop
dec
xlat
sti
mov
out
lea
ret
jbe
adc
pop
mov
adc
decl
jmp
push
push
insl
or
fwait
in
rcrb
jl
rorl
adc
call
cmp
or
jb
dec
mov
jmp
add
push
stos
jb
mov
incl
sbb
mov
clc
add
pop
in
dec
movl
push
mov
sub
mov
mov
data16
cmp
iret
jb
jbe
rep
jnp
aas
mov
add
xchg
fsubrl
push
pop
mov
ret
lret
loopne
outsb
mov
sub
jo
addr16
mov
fwait
movsb
jg
mov
xchg
inc
aas
sbb
xchg
jb
fwait
xor
loope
outsl
adc
add
push
in
adc
pushf
xchg
loope
or
jecxz
in
decl
and
idivl
cmp
sub
bound
out
mov
or
jp
mov
sarl
ds
lcall
lock
or
add
sub
pop
cli
pop
cmc
mov
adc
ret
fcmovb
test
mov
inc
call
pop
xor
into
les
fwait
inc
dec
mov
imul
jns
inc
aaa
adc
mov
ljmp
cwtl
mov
aaa
pop
iret
jp
and
iret
incl
lcall
xchg
imul
ds
mov
fnstsw
mov
js
aas
or
sub
dec
arpl
and
adc
mull
xlat
les
pushf
ret
adc
and
jg
lods
ljmp
and
fcompl
add
lcall
and
dec
gs
mov
call
jmp
jae
lret
adc
incl
mov
or
jo
outsb
cmp
cwtl
popa
cmp
xor
mov
addl
and
xlat
xor
mov
mov
and
add
xor
lcall
loopne
imul
ljmp
pop
jns
xor
arpl
jp
mov
jns
enter
dec
add
out
xor
fdivp
mov
lret
pop
cmp
fstl
dec
fnsave
mov
jne
mov
rcl
ss
decl
shrb
test
adc
out
negl
and
mov
dec
pop
jo
jmp
ljmp
iret
dec
cltd
mov
loopne
call
cmpsb
das
pop
push
and
dec
push
lahf
pushl
bts
pop
xchg
iret
or
sbb
mov
das
stc
sbb
xor
dec
mov
bound
add
mov
enter
popl
cltd
pop
add
mov
ljmp
rcll
mov
fs
mov
xor
ljmp
push
mov
jmp
lock
or
mov
sub
jae
ss
dec
rclb
add
push
decb
adc
aaa
cmp
cltd
sar
test
sub
les
fwait
mov
jmp
push
and
mov
ret
sbb
aad
fs
pushl
sub
and
jns
push
push
or
loopne
push
lcall
push
cmp
ds
xchg
call
inc
out
cmp
and
lret
lods
jl
pop
xor
test
adc
dec
pop
sub
mov
jns
pop
xchg
xchg
dec
pop
out
and
sub
aam
inc
pop
sub
js
pop
push
adc
test
lds
pop
fsubrs
movsb
fcomip
lcall
gs
mov
sub
test
aam
add
lret
cmp
stc
out
in
mov
loopne
fwait
lahf
and
fldt
adc
scas
clc
cmp
xor
rol
mov
movb
sbb
jbe
sahf
test
pop
data16
jnp
or
sbb
fcomps
fdivr
mov
imul
lahf
jmp
add
aad
movsb
jge
mov
scas
cmpsb
cmp
jmp
repnz
xchg
xorl
sub
mov
jns
cltd
pop
lret
in
pop
jmp
iret
test
sub
jae
pop
icebp
cmp
cwtl
in
sub
pushl
std
call
inc
popf
and
inc
daa
mov
cmpsl
loopne
jp
in
cmp
jg
clc
test
js
mov
or
dec
scas
inc
ss
loop
sbb
gs
add
xor
fisubrl
mov
dec
fwait
test
rol
fwait
stc
inc
rcr
mov
gs
pushl
test
xchg
pop
pop
das
and
int3
cmc
or
lea
cmp
jb
mov
mov
incl
imul
andb
rcrb
out
pop
daa
pop
inc
cmpsb
scas
cmp
and
xchg
xchg
fdivrs
inc
mulb
pop
fistpll
aaa
add
xchg
leave
and
insl
dec
mov
mov
xor
inc
insb
and
sar
decl
add
mov
sbb
pop
jmp
scas
clc
decl
adc
mov
adc
pop
lret
jbe
fcmovb
mov
dec
inc
mov
incl
push
inc
add
cmpsl
sbb
dec
add
sbb
mov
insl
jns
adc
push
stos
mov
fiaddl
out
add
xchg
arpl
shrb
mov
mov
fs
test
test
cmpsb
push
cld
lcall
rcrl
test
ret
out
mov
iret
jmp
test
daa
mov
xor
into
push
jle
sbb
push
loop
ljmp
scas
lock
outsl
cs
or
mov
jo
mov
push
call
pop
cld
mov
push
fbstp
xchg
loope
sub
aad
pop
jg
decl
jnp
or
sub
addb
rclb
mov
ljmp
call
mov
pop
xchg
and
pop
inc
xchg
inc
and
fadds
dec
ret
std
push
dec
mov
dec
out
dec
sahf
xchg
lcall
jg
push
dec
in
imull
mov
push
sub
xchg
sbb
mov
arpl
cld
rcll
pop
lea
mov
push
movsb
adc
test
test
lcall
push
push
into
jo
cmp
mov
cmp
lods
aaa
push
out
lcall
pushl
imul
xor
pusha
sbb
in
addl
mov
add
lods
into
lcall
push
push
and
ja
fs
ljmp
add
add
mov
jp
out
sbb
mov
dec
jge
rcll
pushl
add
cld
sbb
insb
outsl
lcall
test
adc
dec
popa
clc
pop
lahf
out
aad
push
aaa
clc
sti
daa
cmp
adc
add
in
sbb
dec
mov
repz
cmp
fldl
insl
jnp
ss
cmpl
and
xor
loope
cmpsl
dec
aam
mov
stos
bound
jbe
cld
jg
lods
fiaddl
pusha
cmc
push
sti
rcrl
mov
pushl
add
movsb
js
mov
sbb
aad
scas
dec
clc
or
jbe
and
stos
aaa
popa
xchg
mov
pushl
mov
adc
and
dec
addb
leave
pop
stos
push
mov
sti
mov
fnstsw
out
pop
sub
xchg
mov
xor
lahf
enter
mov
pop
dec
pop
in
jno
cltd
mov
pop
cld
lcall
dec
xchg
dec
push
inc
sub
das
ret
sti
pusha
cmp
sbb
add
decl
inc
jecxz
es
adc
insl
mov
aam
incl
inc
pop
adc
adc
outsb
cmp
and
xchg
mov
rcr
sub
and
dec
int
fdivs
mov
push
xor
jnp
int
les
and
insl
or
jmp
jne
xchg
inc
mov
or
leave
int
pushl
xor
inc
mov
in
inc
adc
notb
repz
sbb
dec
cld
pop
lock
jecxz
movsb
daa
inc
insb
jg
insb
dec
sub
movb
xor
cmp
lea
test
cltd
inc
fs
pop
std
push
std
into
adc
in
lea
jnp
lret
mov
adc
fsubrl
dec
xchg
pop
loope
std
cmp
stos
xor
leave
sub
mov
pop
pop
mov
cmp
fcmovbe
jl
in
and
call
imul
cld
xchg
pop
mov
mov
es
pop
outsb
or
jb
shl
ljmp
decb
jp
inc
jbe
mov
in
loopne
lods
cmp
and
dec
mov
test
out
ss
mov
xchg
add
mov
push
pusha
mov
sbb
sub
pop
loopne
pop
daa
or
pushl
mov
lds
adc
stc
add
dec
ret
pop
pop
fcomps
aam
xchg
or
pushl
js
fsts
ret
and
leave
dec
test
sub
pop
inc
dec
out
in
jne
out
jp
pushl
into
prefetch
das
or
mov
ss
xor
subl
aaa
data16
decl
lahf
jae
pop
fiaddl
mov
sbb
cmp
jle
xchg
adc
jmp
jl
aam
mov
in
pop
in
jae
dec
ja
lahf
imulb
cld
imul
jecxz
scas
and
lea
outsb
fnstenv
sbb
mov
add
seta
or
pop
es
in
push
loopne
fcmovnbe
push
test
mov
sbb
pop
orb
js
fiadds
mov
jmp
sub
cmp
cltd
sub
or
fistpl
jg
outsb
mov
jecxz
xchg
clc
les
mov
or
push
inc
and
fwait
fwait
mov
mov
pushf
data16
and
out
mov
push
push
cld
ljmp
cmpsl
idivb
shlb
sub
sbb
inc
pop
lcall
sti
jne
inc
mov
idiv
call
mov
decb
sahf
rorb
ja
sbb
cmpsb
psrlq
stos
out
stos
repz
in
jp
call
inc
inc
push
jmp
int3
or
pop
inc
dec
xor
ret
inc
incb
std
pushl
icebp
and
cs
push
cmpsl
push
lods
lock
fidivrs
stos
inc
pop
test
and
ljmp
out
adc
sti
xchg
pushf
dec
pop
adc
cmp
push
xor
repnz
hlt
lcall
ss
insb
and
repnz
ss
lcall
dec
testl
cmp
out
xor
sbb
jmp
mov
push
sub
gs
std
adc
fcomip
mov
push
lods
jns
dec
cmc
push
lret
push
sbb
sahf
sahf
psllw
jg
out
popf
xor
xor
dec
dec
lds
xor
lds
adc
xor
loopne
push
mov
stc
inc
incl
pop
push
fmulp
adc
repnz
xor
idivl
les
fistpl
enter
pop
test
aas
dec
and
ljmp
repz
push
or
sti
mov
sub
adc
repz
int
decl
arpl
pop
incb
mov
add
gs
jmp
adcb
cwtl
imul
sub
jle
loope
mov
lss
stos
cmp
decl
ljmp
in
call
jns
mov
sub
xor
insb
pushf
shlb
pushl
dec
mov
dec
lret
sbb
clc
mov
pop
cltd
les
push
and
ljmp
jge
fisttpll
test
test
mul
adc
lret
push
movsl
fidivrl
sahf
cmc
inc
dec
sub
or
repz
jle
and
sbb
mov
push
gs
sbb
push
pop
dec
out
inc
mov
sub
out
and
cli
jne
jecxz
int
push
sbb
iret
ljmp
push
fwait
repnz
call
dec
jge
or
mov
idivl
cld
add
lret
jns
imul
xor
inc
movsl
ljmp
movsl
adc
adc
scas
fimuls
and
lret
aaa
sub
repz
xchg
mov
xchg
ja
mov
push
ret
incl
fistps
sbb
mov
jae
push
add
scas
inc
or
push
aas
xchg
add
sbb
ljmp
sbb
in
push
out
flds
out
xchg
xor
icebp
imul
decl
or
sub
shl
dec
pop
cmpsl
ja
add
xchg
mov
pop
pop
fcoms
mov
lret
idivl
mov
xor
cmpsl
hlt
ficompl
mov
lcall
pop
sub
push
cmc
sub
int3
cmc
sbb
mov
mov
pop
movsb
idivb
decl
jo
sbb
hlt
std
ja
add
push
add
or
jb
push
fsubrl
les
pushl
bound
jl
sti
mov
cmpb
sahf
xor
and
outsb
lock
das
sbb
call
stc
mov
xchg
lods
cltd
and
shrl
out
push
fisttps
pop
sarl
cli
pop
dec
in
nop
hlt
push
and
fsts
mov
inc
es
lret
roll
and
mov
imul
decl
adc
cld
test
fcoml
in
lret
cmp
test
decl
outsl
jg
jno
and
mov
call
xor
aam
mov
incl
push
sahf
movsb
jl
arpl
cmp
std
pop
sbbb
xor
xor
ljmp
icebp
inc
nop
gs
movsw
pop
adc
fs
test
and
aaa
decl
cmp
inc
idivl
dec
nop
lods
jecxz
xchg
ss
sbb
or
inc
jne
bound
outsb
je
cmp
in
adc
jg
lea
pop
nop
repnz
ljmp
push
popf
push
mov
std
mov
cmp
mov
ret
testl
ds
clc
ljmp
mov
test
call
or
leave
and
and
xor
cmp
dec
movsb
mov
test
sbb
mov
popa
bound
add
mov
stos
test
pmaxub
fsubl
mov
cmp
mov
pop
call
pop
sti
sbb
lret
xor
cmp
mov
imul
imul
call
push
pop
int
cmp
jb
jne
stos
in
jo
sbb
push
xor
mov
mov
jle
push
mov
movsb
adc
adc
pop
push
jg
jae
test
out
dec
daa
xor
fcoml
ds
sbb
icebp
or
cs
shlb
pop
idiv
ljmp
mov
mov
sbb
pop
xor
js
sbb
in
std
loope
cld
jmp
into
add
andb
dec
test
jne
mov
push
shrb
xchg
pop
cmp
out
dec
test
sub
lcall
lods
pop
push
fidivrs
pop
push
or
xchg
in
jb
inc
and
pushl
cmpsl
scas
jecxz
mov
out
xchg
push
in
cltd
test
cmpsl
decl
jg
ja
mov
lods
lods
jo
fldenv
in
xchg
scas
push
cmp
decl
insl
pop
mov
test
add
mov
test
fstps
xor
push
in
fmuls
incl
jne
xlat
leave
loop
outsb
stos
aaa
sub
xchg
shrl
enter
xchg
test
decl
shlb
xchg
test
fcomip
jg
xchg
sbb
jmp
jne
push
packuswb
cmp
sub
sub
sahf
enter
add
jmp
jmp
jbe
sub
test
adc
loop
push
cmp
jecxz
mov
add
jo
sbb
cmp
loopne
inc
clc
mov
and
mov
aad
in
inc
loope
add
mov
jg
xor
call
popf
sbbl
ret
and
sub
orl
repz
sub
pop
mov
into
fucomp
insb
fs
incl
outsl
xchg
mov
jno
sbb
pop
pop
lods
xor
sbb
inc
xchg
out
and
sub
iret
aas
push
cmpsl
dec
xchg
lret
inc
pop
out
adc
push
div
adc
lcall
and
push
mov
dec
lock
sbb
dec
mov
inc
mov
out
jl
enter
pushl
xchg
mov
int
mov
mov
fcoml
push
adc
cmp
inc
ja
push
jno
test
ljmp
lea
mov
and
push
outsb
shl
pop
push
lcall
out
pop
push
mov
jbe
mov
fidivrs
adc
inc
or
call
std
ja
repnz
stos
dec
push
test
icebp
jl
loope
rcrb
rcrb
pushl
in
or
in
adc
or
push
insb
inc
or
in
or
sub
dec
mul
ja
sarb
fsubp
xor
adc
mov
adc
ds
adcb
push
jb
mov
adc
fbstp
ficompl
ja
lods
pop
lds
mov
inc
or
bound
lcall
cmp
push
mov
cltd
rcl
je
xchg
loop
push
inc
cwtl
lea
lahf
push
ficoml
lock
adc
cltd
fists
inc
dec
loopne
or
decl
push
sbb
jle
cltd
dec
rorb
lcall
test
icebp
jmp
sbb
adc
addb
loopne
push
movsb
fwait
add
dec
lock
mov
es
inc
test
fistpl
cltd
dec
mov
insl
add
dec
mov
adc
push
pop
call
test
ss
sahf
mov
shll
aas
push
fcoms
fs
dec
dec
mov
call
xor
fs
sub
lods
adc
jb
mov
cld
aas
mov
incl
and
mov
stc
jle
add
jmp
and
sbb
jmp
jl
add
cwtl
inc
test
push
xchg
imul
lahf
test
loope
incl
jb
dec
in
lods
xor
push
cld
mov
stos
js,pn
outsb
enter
pop
jns
push
rcrl
outsb
sbb
out
mov
lods
adc
decl
push
icebp
xchg
push
pusha
adc
lret
mov
pop
cltd
scas
mov
jl
aam
xlat
xchg
pushl
pushf
cwtl
fdivl
mov
shrb
jmp
cmp
dec
mov
lcall
mov
lret
mov
imul
pop
xchg
aaa
movsb
or
pushl
add
or
jo
fstl
ja
movsb
dec
or
aaa
shlb
inc
stos
dec
sti
push
ftst
cld
xchg
movsb
or
mov
repnz
sbb
pop
mov
jne
sbb
lcall
decl
xchg
add
pushl
mov
test
popf
iret
ss
fildll
std
and
or
lret
popa
inc
fsubs
xchg
mov
inc
out
cltd
lods
dec
js
mov
lcall
pop
daa
shr
pushl
jle
sub
fst
in
insl
pop
out
sub
or
xchg
pop
and
iret
mov
jbe
nop
test
cmp
addr16
and
mov
pushl
pop
pusha
mov
popf
ret
in
ficoml
or
jecxz
push
sub
pop
mov
cmp
mov
jge
adc
and
adc
movsl
dec
jne
cwtl
jmp
rclb
push
jmp
ja
movsl
hlt
mov
mov
xchg
cli
mov
pop
dec
das
popf
hlt
loope
cmpl
sub
dec
enter
xor
outsl
lcall
lock
push
dec
out
mov
pop
jg
inc
jo
out
push
pop
aad
test
outsb
jp
xchg
movsl
mov
or
push
push
dec
cmpl
mov
jmp
subb
incl
inc
daa
dec
lahf
xchg
adc
xchg
xchg
push
mov
inc
in
ljmp
push
pop
xchg
xlat
aad
push
ss
pusha
mov
pop
push
mov
sar
push
loopne
pop
inc
mov
popf
push
mov
cltd
imull
or
jmp
xchg
das
inc
inc
cld
mov
cmp
push
inc
fbld
jb
addb
xchg
or
add
stos
pushl
stc
add
fistps
in
out
aam
fldt
mov
inc
mov
sub
cmp
jns
or
movsb
jg
inc
sbb
cmp
in
insl
jo
xchg
decl
jae
jmp
out
addr16
xor
out
sub
mov
dec
out
jno
dec
shl
rorl
xor
loop
xchg
into
push
mov
adc
iret
sub
sbb
dec
imul
pushl
dec
lods
add
aas
mov
push
insb
shrb
xchg
add
adc
dec
jmp
gs
push
jo
push
out
data16
mov
sub
jl
cmp
push
dec
ja
mov
int3
fdivrp
fildll
mov
pop
bound
iret
or
cmp
dec
dec
inc
or
loopne
mov
rcl
jp
pop
andb
mov
mov
fidivrs
decl
dec
je
pop
xlat
jb
out
inc
es
push
ret
cmp
and
inc
lock
pop
cmc
jmp
mov
push
call
add
lds
xlat
lret
adc
dec
divl
dec
or
cli
sbb
test
iret
fnstsw
cld
jae
push
and
das
sub
decl
mov
loop
and
push
pop
and
inc
les
lods
jno
add
lods
or
gs
cmp
jp
xchg
adc
xor
outsl
add
xchg
mov
mov
icebp
jnp
inc
cmpsb
cld
or
mov
mov
sub
jae
sbb
and
xchg
xor
jno
shrb
fstpt
xchg
sub
jg
lods
in
je
sub
jp
mov
mov
xchg
xchg
xor
sbb
jp
leave
jne
adc
mov
dec
lret
pop
inc
xchg
addr16
cmp
das
sbbb
push
dec
mov
mov
inc
jmp
mov
dec
nopl
adc
mov
cmp
rdtsc
jo
push
ret
pop
cmp
cld
call
add
and
pop
push
ljmp
xlat
or
xchg
lods
pop
into
ret
popf
cmpsb
cs
jg
lret
mov
xor
dec
or
ret
mov
mov
mov
test
mov
inc
jbe
leave
jg
mov
std
sbb
mov
sub
dec
xor
outsl
jl
pop
inc
adc
pop
cli
dec
dec
xor
adc
cmpsl
sarb
jle
lds
add
movsb
push
dec
movsb
jp
pop
jecxz
les
pushl
mov
pop
mov
adc
imul
clc
adc
dec
dec
or
inc
fmuls
ret
push
addr16
ja
lea
loop
jmp
lods
xchg
mov
popa
in
mov
xor
nop
lldt
pop
mov
push
mov
inc
jo
dec
lock
fs
sub
xchg
mov
dec
jle
mov
push
testl
int
scas
sbb
call
pop
or
das
sar
jmp
pop
std
or
fsubs
push
mov
out
push
jns
lds
incl
jmp
add
inc
mov
daa
je
xlat
rcl
int
sbb
and
dec
mov
ds
or
iret
std
lock
ljmp
lods
decb
push
or
aaa
lock
mov
mov
je
rol
enter
mov
push
test
cmp
xlat
stos
xor
jg
mov
ljmp
jg
sarl
jmp
mov
shll
dec
fstpt
sbb
jg
lcall
cmp
inc
sahf
mov
ret
mov
fs
jns
xchg
cmp
lcall
mov
pop
daa
in
and
xlat
sub
mov
xchg
jle
and
std
call
mov
mov
inc
inc
jmp
cli
ficompl
test
test
mov
outsb
jnp
dec
push
incl
mov
push
pop
mov
jo
jmp
lret
and
pop
sub
test
jo
cltd
dec
inc
movsl
sti
jb
and
lds
mov
das
inc
mov
aad
js
and
jae
pushl
cltd
inc
push
gs
mov
add
pop
pop
insl
sbb
pop
push
scas
in
incl
mov
addr16
pop
jp
sbb
inc
pop
sbb
fmul
out
sahf
inc
mov
out
mov
pop
or
xor
cli
mov
mov
add
dec
pop
stos
repnz
add
and
fnstenv
clc
cwtl
inc
lods
pop
mov
jg
mov
ja
push
adc
gs
clc
adcb
jns
rclb
xor
adc
test
sub
sbb
mov
dec
dec
test
jecxz
sub
in
cmp
or
fildl
mov
mov
outsl
shlb
call
pop
sti
sub
rcl
jl
add
push
loop
call
shr
cmp
jl
call
sub
jl
pop
mov
sub
pop
add
fcmovnu
add
jg
loopne
mov
jae
mov
jg
test
cwtl
ja
push
cmp
loop
data16
shll
inc
jo
lret
ljmp
jmp
test
jne
arpl
ja
test
xor
into
adc
ret
mov
jge
pushl
std
xchg
or
sar
sbb
and
and
xchg
pop
imul
and
push
stos
pop
inc
push
pop
push
out
es
and
int
scas
js
push
or
push
mov
test
or
adc
shll
mov
fcomps
inc
jb
imul
int
jns
mov
aad
sahf
mov
or
mov
in
sti
sbb
jnp
jge
out
jl
cmc
pop
fmuls
daa
incl
jmp
jmp
in
mov
hlt
in
push
mov
jne
push
nop
imul
cmpb
mov
das
incl
dec
push
shrl
sub
call
xchg
in
mov
adc
push
cmp
cli
add
jo
mov
into
cmp
out
inc
frstor
jge
repz
incl
out
sbb
in
fwait
lds
and
jne
or
aad
mov
es
sub
jmp
hlt
push
icebp
jno
push
arpl
mov
or
sub
push
inc
je
cmp
inc
xor
pop
sahf
rcl
pop
jge
adc
pushl
movsl
xchg
dec
push
gs
mov
outsb
mov
cltd
inc
cli
push
shl
sbb
in
mov
add
push
divl
enter
adc
add
jle
aaa
loop
int3
jmp
int3
xor
push
cmp
mov
cmp
pop
jmp
cmp
mov
inc
mov
lcall
add
sbb
dec
scas
mov
cltd
roll
lock
push
mov
lcall
or
out
and
cmp
pop
cmp
call
mov
xchg
add
shrb
push
lcall
mov
add
mov
mov
and
jl
movsl
cli
inc
ja
js
or
nop
ss
and
in
lahf
fucomi
enter
popf
jne
stc
loopne
lcall
iret
and
cltd
pop
add
sbb
sub
cs
into
inc
xchg
sub
ret
mov
lahf
sahf
imul
mov
test
inc
cmpsb
in
sti
je
iret
popf
pop
sub
cmp
loope
add
sahf
fsts
cmp
xor
mov
std
call
lods
int3
push
adc
cmp
mov
push
lcall
repz
sbb
cmp
inc
inc
xchg
andb
jle
insb
and
mov
jns
pop
loop
mov
in
ficomps
aad
call
xchg
pop
sbb
push
jnp
loope
ljmp
mov
sub
pop
gs
jnp
inc
or
pop
push
sub
adc
cmp
or
adc
sahf
jecxz
int3
jne
es
jae
dec
ja
incl
fstpl
movsl
scas
sbb
sub
je,pt
or
decl
xchg
mov
pop
inc
push
pop
iret
fsubrl
or
lods
cmp
jl
pop
sbb
cltd
mov
add
out
mov
in
xchg
aam
mov
mov
jbe
aaa
pop
or
push
hlt
mov
pop
inc
lods
jp
fisubl
popa
outsl
or
call
mov
in
pop
lret
jne
ror
add
das
push
icebp
jbe
dec
sti
lds
push
sbb
mov
lock
out
jo
push
scas
mov
int
loopne
push
jmp
popa
sub
push
add
or
mov
repz
in
scas
dec
or
push
lcall
push
cmp
fdivr
mov
adc
cmc
shrl
out
mov
adc
in
movsl
add
mov
in
js
out
sub
inc
out
adc
push
mov
jmp
imul
jg
cwtl
and
mov
pop
mov
or
push
loop
push
mov
repz
stos
bnd
cmpl
push
imul
jnp
xor
sub
push
repz
fcompl
stos
jmp
mov
sbb
jno
adc
and
cmp
mov
sub
cs
mov
mov
addr16
sbb
js
fs
xchg
adc
add
insl
imul
and
mov
dec
xchg
xor
hlt
jae
push
mov
xchg
pop
jl
or
jl
repnz
pop
pop
movsb
and
or
aaa
iret
jns
mov
std
xchg
mov
push
ret
push
and
in
xor
xor
lock
cmp
mov
jbe
xchg
test
mov
jp
mov
sbb
lcall
aas
pop
div
cmp
cmc
jg
stos
cmp
ljmp
clc
gs
mov
andb
fwait
push
mov
mulb
dec
movsl
stos
call
loopne
cwtl
cmp
push
test
lods
std
jmp
dec
sbb
push
or
cld
aaa
pop
sar
lret
pop
push
nop
push
loopne
ja
mov
xchg
ret
mov
into
out
outsl
gs
shll
scas
jmp
or
outsb
cld
fs
xor
ja
popl
loope
ja
push
loope,pn
incl
inc
fs
out
loopne
aam
sub
inc
arpl
pop
lret
mov
dec
in
mov
out
mov
daa
pop
icebp
je
clc
fldcw
js
mov
cmp
push
mov
adc
cli
movsl
repnz
les
mov
or
mov
push
fsubs
addb
add
mov
inc
mov
mov
adc
dec
mull
outsl
sahf
xchg
and
and
pop
fcomip
jmp
inc
cmp
cltd
add
lcall
test
call
inc
or
mov
clc
sbb
lret
dec
into
psrld
cmpsl
mov
pushl
fdivs
lcall
cld
hlt
push
mov
and
push
fs
pushl
mov
lret
push
faddl
cwtl
xor
lea
stos
sti
inc
adc
adc
jle
hlt
addl
xor
imul
push
rolb
mov
pusha
icebp
aas
dec
imul
mov
lods
movsl
sahf
stos
test
rclb
sti
jno
pop
loopne
cs
outsl
lss
xorb
shll
sti
loop
ds
jg
xchg
mov
repnz
add
rcrb
and
shrl
clc
lcall
add
cmp
rcll
popf
nop
push
outsl
mov
repz
insb
aas
jbe
and
mov
inc
mov
lock
or
fwait
jmp
pop
adcb
lcall
xor
jae
cmp
cltd
or
pop
icebp
push
aas
aad
xor
pushf
mov
call
scas
sub
jne
lods
push
cmpsl
or
ds
imull
rcrl
sahf
and
outsb
repnz
ja
popf
inc
call
es
fimull
out
js
pop
xchg
nop
inc
xor
js
arpl
xchg
out
cli
push
mov
into
aad
sbb
ljmp
mov
dec
fsubr
mov
sub
imul
aam
das
nop
je
jno
inc
xchg
mov
inc
pop
lcall
pop
sbb
xchg
lea
jg
icebp
dec
jle
enter
iret
sti
push
cmp
and
das
shlb
adc
dec
sarb
sar
ljmp
clc
lds
jge
mov
mov
mov
mov
les
decl
out
mov
movsb
nop
xchg
add
les
sub
stos
and
lea
xor
cmp
mov
ja
stc
cmp
imul
push
imul
jecxz
pop
bound
clc
push
std
dec
and
jecxz
mov
shll
or
ret
lret
pop
cmp
xor
jp
mov
inc
jo
ror
adcl
rclb
ljmp
clc
and
or
jnp
dec
sub
incl
sub
mov
das
mov
fistps
or
aaa
loope
incl
jo
icebp
pop
vmovapd
pop
dec
pop
pusha
out
popf
pop
sbb
jae
mov
fstpl
push
push
jbe
pusha
adc
mov
jle
or
jno
movsb
cs
dec
je
pop
cmpsb
ficomps
ja
insl
pushf
cld
call
outsb
loopne
pushl
xchg
xchg
ljmp
repnz
aaa
in
dec
jg
cmp
test
arpl
xchg
lds
decl
mov
xor
mov
pusha
leave
fwait
nop
mov
fmul
out
jb
imul
ljmp
jo
lods
imul
xchg
cltd
sbb
or
mov
pop
icebp
jae
cs
jmp
sub
cmc
pushl
inc
xlat
pop
push
inc
mov
mov
aaa
mov
js
and
jmp
in
lcall
pop
cli
cmpl
fcmove
mov
sub
push
jo
test
aaa
mov
cli
cmp
sub
out
cmpsl
inc
jg
subb
fiadds
stc
lret
lods
test
leave
mov
or
pushl
clc
cs
xchg
lcall
lcall
sar
incl
xor
mov
pop
mov
xor
scas
xchg
out
jg
ja
ret
sbb
sbb
jmp
fildll
xor
pushl
lea
scas
pop
jmp
and
inc
xor
sub
insb
out
call
sbb
call
xcrypt-ofb
cmpsl
imul
lea
mov
sbb
repnz
loopne
enter
xor
movsl
fucomi
data16
lcall
sub
xchg
sub
popa
rorb
fwait
xchg
ret
or
outsb
mov
jle
xchg
aam
fnsave
adc
aam
lret
jns
adc
popa
pushl
sbb
aad
xor
pop
cltd
mov
stc
scas
xchg
and
pop
mov
and
std
jmp
jns
xorl
les
or
mov
push
fmuls
scas
mov
decl
pop
push
mov
and
pop
out
mov
sbb
mov
xor
sahf
adc
pushl
ret
stos
sti
verr
sbb
pop
imul
scas
dec
add
mov
decl
xchg
sbb
xchg
rorl
jmp
mov
push
jb
outsl
incl
xchg
stos
mov
xor
mov
adc
adcl
jle
dec
mov
dec
testb
adc
push
ror
lea
test
lods
mov
jp
cmp
ljmp
test
xchg
sbb
mov
add
lret
adc
push
test
sbb
incl
pop
pop
mul
dec
dec
xor
pcmpgtb
inc
nop
popa
inc
out
ss
xchg
xor
inc
jecxz
push
or
fbstp
push
xor
sbb
aaa
jns
scas
and
jno
pop
xchg
push
jp
call
std
sub
adc
ret
outsb
loope
test
testl
push
fsubs
push
aad
push
and
sub
jg
fwait
sarl
lahf
lcall
repz
xchg
mov
sbb
push
mov
xchg
mov
sub
lcall
repnz
inc
sbb
sbb
sahf
jl
sahf
pop
loop
int
aam
divl
les
lods
or
lcall
in
movsl
imul
aaa
dec
fistpll
stos
mov
test
in
adc
xor
fbld
inc
mov
sub
pushf
push
inc
or
and
mov
pop
lock
popa
xor
mov
or
mov
mov
out
push
dec
cmp
add
inc
dec
int3
arpl
ljmp
xor
mov
insb
jl
xchg
fcomps
sbb
mov
cmpb
outsl
leave
aad
dec
outsb
cli
decl
mov
loopne
ret
sarb
mov
in
stos
pop
out
add
sub
rcrb
pop
std
call
in
jge
test
fstl
add
incl
orb
mov
or
loopne
adc
fsubrp
adc
insb
push
aaa
aam
std
dec
sub
dec
sbb
mov
ljmp
inc
push
outsl
cmp
jecxz
pop
lret
rcl
add
mov
jmp
jg
popf
xor
arpl
and
js
mov
adc
add
aam
jnp
incl
push
shlb
jno
sbb
fistpll
mov
cmp
cmp
sbb
dec
dec
stc
dec
loop
inc
mov
out
pop
mov
aas
test
aaa
int
mov
sub
jo
dec
js
lfs
loopne
adc
jno
mov
cmc
call
scas
daa
jnp
scas
dec
scas
test
add
leave
mov
sahf
arpl
mov
lcall
pusha
adc
test
add
mov
mov
pop
jno
cltd
ret
lock
into
stc
lods
jecxz
cld
pop
xor
sbb
pop
imul
in
je
mov
inc
popf
push
ljmp
mov
scas
adc
mov
sub
testl
mov
inc
mov
dec
sbb
mov
sub
mov
sbb
cmp
fs
fcmovnb
xchg
xchg
out
mov
or
or
jg
pop
out
pop
push
and
cltd
inc
hlt
mov
or
pop
or
lret
jge
dec
into
push
outsb
cmp
pop
ret
out
push
add
outsl
cmpsb
add
addr16
jb
ljmp
mov
jmp
and
cltd
or
pushf
inc
dec
test
mov
call
jmp
push
mov
push
push
sub
and
sti
arpl
dec
adc
xchg
lcall
cld
sbb
fcmovnu
xchg
push
add
add
mov
jmp
sub
clc
mov
mov
les
aaa
mov
mov
lcall
pop
cmpb
push
cwtl
nop
mov
loope
adc
xor
in
aam
xchg
xor
add
lret
cmp
pop
cmp
inc
xchg
sbb
jmp
loope
in
jg
xchg
cmpsb
lea
fisubl
lods
insb
sbb
push
jl
fnsave
js
pop
ljmp
pop
ja
mov
repnz
dec
aad
or
inc
sub
fwait
pop
mov
sbb
shll
call
pop
xor
mov
xchg
ffreep
imul
sub
pushl
flds
fnstsw
dec
nop
sarb
scas
pop
scas
mov
mov
mov
stos
jg
or
aas
out
xchg
pushf
and
and
sbb
pop
cmp
call
and
cld
or
out
scas
push
push
xchg
adc
sbb
sub
or
cli
xchg
push
int3
pop
dec
mov
cmp
pop
andb
gs
scas
mov
das
sar
movsl
mov
movsl
xor
fs
lock
decb
dec
dec
call
dec
pusha
inc
push
lahf
sbb
sub
or
and
sbb
jb
popl
mov
repnz
ljmp
jl
outsb
int
jb
or
sbb
or
fs
insb
jp
adc
push
lea
rcll
jge
jg
cmp
aaa
cmp
clc
decl
popf
xor
ror
xchg
jb
inc
sub
push
cld
bnd
test
je
ljmp
out
aad
mov
ret
push
loop
push
test
adc
dec
push
shlb
js
lds
scas
pop
insl
add
fwait
ds
popf
cmp
jg
sbb
xor
decl
ja
push
xchg
mov
shll
popf
sbb
es
insb
and
mov
mov
xor
divb
lret
xchg
cs
in
add
sbb
shlb
sbb
ss
mov
lods
loopne
loopne
or
dec
leave
das
and
lods
xchg
push
xchg
jmp
mov
mov
add
mov
mov
pop
clc
decl
bnd
in
cmp
pop
push
jne
cmp
call
nop
rorb
xchg
and
lea
xchg
ret
repz
mov
push
cwtl
mov
aaa
dec
xlat
xchg
xchg
sbb
divb
push
shll
mov
decl
jnp
scas
insb
rcrl
jae
loop
xorl
jns
sbb
dec
lret
cmp
jmp
add
mov
std
cs
hlt
jle
jbe
aam
push
and
cld
or
lcall
cmp
adc
or
ja
jb
hlt
push
lea
mov
scas
clc
inc
add
shll
test
hlt
xchg
dec
cmp
jno
rol
incl
jmp
in
or
insb
mov
sbb
orl
jbe
leave
pop
cs
and
sbb
lahf
dec
out
mov
push
sbb
pop
mov
jmp
lcall
mov
jecxz
lret
pop
loop
push
ss
mul
push
leave
jle
incl
outsb
adcb
xchg
jne
repz
mov
cmp
jae
jb
ljmp
lret
js
cmp
mov
mov
pop
mov
mov
mov
jae
and
or
ljmp
lret
jno
adc
sbb
jg
dec
jae
lret
enter
stc
jne
dec
int3
mov
outsl
mov
push
cld
push
sbb
nop
dec
inc
loopne
mov
push
push
sbb
loop
pushf
or
call
aas
pop
xchg
xchg
xor
sbbl
mov
stc
add
sbb
aaa
dec
jne
pop
stc
call
xlat
lret
xchg
outsb
icebp
lahf
clc
incl
fcoml
mov
test
incl
adc
daa
pop
cwtl
les
imul
or
mov
ljmp
push
testl
iret
inc
jae
push
ficompl
inc
or
mov
incl
push
add
imul
xor
mov
jmp
pop
cmc
cmc
fld
push
mov
adc
pop
pop
lea
dec
rclb
mov
frstor
pop
push
gs
sub
fidivrs
orb
loop
jb
cmp
jecxz
pushl
es
lods
popf
pop
adc
sbb
or
je
out
loop
pushl
pop
js
pop
fisubl
dec
cld
jge
pop
lods
into
xor
arpl
sub
enter
sub
and
aas
in
inc
add
xor
lret
fstpl
and
cmpsl
xor
cld
rcrb
outsb
push
pop
fdivr
mov
jle,pt
push
repz
sbb
sbb
jle
mov
add
ljmp
test
into
ss
dec
add
cmp
rclb
jns
xorb
daa
int3
mov
mov
test
mov
push
xor
inc
and
sar
call
sub
shrl
sub
mov
ljmp
push
imul
and
mov
cmc
dec
pop
dec
out
and
sbb
aaa
push
add
or
inc
xchg
push
cmp
fs
call
lods
in
mov
ss
inc
test
xor
or
aad
dec
icebp
int3
in
add
shl
js
push
decl
nop
cmp
add
inc
dec
popf
and
mov
xchg
sub
inc
jnp,pt
add
jmp
inc
rclb
bound
les
adc
jg
inc
jnp
push
repz
arpl
je
cmp
repnz
dec
std
pushf
push
or
pushl
pop
gs
pop
ja
or
fwait
inc
enter
cmp
cmp
loopne
inc
insl
push
mov
sub
jbe
cmp
scas
and
into
adc
lods
aam
push
pop
inc
adc
pop
fwait
jg
or
adc
cmp
jb
sub
and
mov
xchg
sub
dec
adc
jno
stc
daa
inc
dec
scas
pop
in
pop
sub
mov
xchg
jno
test
test
sti
out
sti
push
jmp
into
hlt
dec
fdivp
jmp
mov
mov
ja
xchg
xchg
stos
test
and
ja
test
aad
fwait
out
adc
jae
pop
push
into
ljmp
jno
je
push
pushl
jb
data16
int3
and
lock
shlb
lret
push
fisttps
cmp
mov
mov
inc
shlb
dec
push
mov
in
popa
and
in
sbb
push
imul
jp
repz
lods
push
mov
adc
mov
out
adc
jl
xor
ss
ljmp
cs
push
cmp
cmc
incl
andb
sti
pop
dec
ds
xor
xor
popf
and
hlt
lcall
inc
sbb
jl
jmp
repnz
pop
xor
lcall
xor
adc
mov
stos
jmp
dec
xchg
cmp
in
lock
xor
ja
ret
jl
xor
xor
rolb
add
mov
cli
fdivrs
loope
mov
adc
iret
mov
add
cmp
cltd
stc
incl
js
cmpl
inc
push
inc
pop
and
dec
mov
xchg
inc
lahf
out
and
call
stc
mov
xor
rorl
sahf
icebp
inc
xor
xchg
jns
ljmp
sbb
or
out
add
cmpl
and
push
mov
inc
push
xchg
ljmp
shrb
jecxz
inc
dec
popf
jbe
pop
dec
xchg
mov
push
iret
in
into
enter
aas
aas
or
push
out
clc
fstpl
enter
ds
add
add
sub
inc
jge
lea
fs
das
adc
filds
xor
das
outsl
adc
rorl
pushl
les
dec
sub
incb
out
ss
push
fdivrs
and
push
stos
popa
add
sbbl
mov
xchg
rcrl
out
xchg
or
imul
addl
push
in
into
xor
fldenv
outsb
pushf
ja
ljmp
mov
sbb
iret
nop
fstpt
adc
arpl
or
call
jbe
pop
mov
xlat
fsubs
movsb
add
arpl
das
push
or
inc
sub
fs
xchg
mov
std
pop
sti
enter
call
pop
mov
popa
dec
gs
sbb
jnp
pusha
pop
lcall
mov
xor
or
sub
icebp
adc
xlat
shll
sub
out
clc
ja
fsubrs
pop
shl
pop
mov
js
ljmp
stc
or
pop
mov
pop
sbb
jne
xchg
test
push
or
inc
call
jae
stos
inc
jne
fs
test
stc
xor
shlb
push
dec
push
or
decl
xchg
sub
movsb
daa
mov
xchg
in
sbb
push
lret
aas
movsb
ret
sub
adc
jl
stos
jbe
jp
jecxz
xor
gs
fsubrs
inc
mov
test
mov
fldt
cmp
das
clc
decl
xchg
cmpsb
jae
mov
movsl
iret
roll
xchg
faddp
mov
lret
xchg
mov
mov
data16
sti
repnz
out
lods
push
mov
xchg
loopne
push
jmp
cli
jb
inc
lods
xchg
sbb
xchg
sarb
push
xchg
imul
add
stos
inc
dec
ds
lcall
pop
push
clc
mov
mov
movq
int3
push
pop
nop
pusha
jns
cmp
insl
adc
jo
arpl
jbe
sti
rol
stos
or
jmp
mov
scas
add
fmull
pop
xor
in
pop
adc
jne
dec
push
clc
inc
and
mov
mov
pop
lcall
rcr
mov
dec
imul
mov
les
decl
push
ret
or
cwtl
push
pop
xlat
mov
aad
lock
jno
cmc
inc
leave
shll
incl
xor
xor
cmp
rcrb
inc
cmp
ret
repz
and
sar
mov
loop
xor
pop
dec
flds
cltd
push
pop
cld
stos
mov
loop
bndldx
jns
push
pop
mov
ss
imul
scas
sub
adc
movsb
and
jmp
fisttpl
xchg
mov
sub
pop
std
stos
in
or
ds
pushl
jo
add
dec
or
or
repnz
call
mov
nop
push
cwtl
jmp
xor
lea
cli
aam
sbb
adc
into
xchg
lret
sbb
or
lds
addr16
int3
mov
je
iret
mov
stos
jg
xchg
bound
hlt
dec
dec
mov
mov
jne
wrmsr
adc
dec
ret
sub
mov
leave
jne
std
xchg
push
ljmp
pop
mov
inc
xchg
lds
or
frstor
popl
sub
out
je
cli
jg
loopne
outsb
adc
mov
outsb
pop
mov
outsl
cli
cld
leavew
subl
mov
cmc
adcl
fldz
xchg
inc
inc
cmp
jne
mov
or
mov
sahf
mov
inc
fcompl
lods
cmp
or
loope
xchg
mov
xlat
dec
pop
dec
les
or
mov
lret
shr
dec
nop
aam
rolb
cmp
pop
aaa
or
pop
aaa
int
sub
lcall
stos
pushf
fcompl
movsl
dec
jle
mov
dec
pop
dec
test
pop
push
dec
rcrl
out
std
pop
js
xchg
loop
stos
loop
aaa
insl
shr
xchg
test
rcll
ficompl
pop
rcll
cmp
lcall
lods
arpl
add
adc
lcall
fistps
ss
adc
or
inc
sub
push
and
out
mov
dec
mov
mov
pop
incl
dec
pop
dec
cmp
insl
out
pop
cld
sub
pop
sub
push
ja
pop
loope
cmpsl
test
jmp
fwait
dec
mov
and
imul
ds
pop
in
jg
sarb
dec
xor
inc
movsl
dec
push
and
pop
and
mov
clc
ljmp
dec
cmp
jbe
dec
shr
je
addr16
sub
sbb
dec
clc
pop
call
push
rcrl
pop
or
popfw
jo
lcall
call
and
stos
xchg
xchg
jb
sub
cmpsb
jmp
jno
adc
and
inc
incl
dec
cli
mov
jnp
jmp
jo
in
dec
sbb
aaa
jmp
popa
testb
and
jmp
les
cmp
cli
dec
cwtl
mov
jno
arpl
aas
inc
sar
pushl
mov
into
stos
stos
jb
jle
popf
inc
inc
push
push
lods
flds
and
push
fstl
inc
xor
aam
sub
sub
adcl
dec
adc
cmpsl
imul
cmc
inc
cmpl
or
movsb
popf
jmp
leave
scas
or
sbb
call
xorl
ror
jle
push
jne
lods
in
cmp
and
sub
cltd
add
xor
pop
jns
xchg
xchg
sub
sbb
mov
jmp
or
lds
bound
ljmp
fisubrl
jp
mov
call
mov
incl
mov
lcall
inc
adc
movsl
pop
mov
idiv
out
jge
adc
push
jns
in
sbb
outsb
cltd
stos
pop
push
or
xor
jo
adc
push
frstor
mov
lods
cmp
push
jnp
push
clc
mov
push
mov
rcrb
mov
nop
push
pop
or
add
mov
and
dec
cwtl
dec
adc
js
jns
cmpsl
arpl
pushl
add
shr
scas
push
ds
sbb
jle
repz
jl
aaa
jns
fidivs
and
sbb
push
pop
and
push
add
jl
icebp
mov
push
std
ljmp
push
in
imul
adc
out
dec
or
popf
pushl
inc
lea
ss
cld
pushl
mov
imul
xchg
xchg
test
mov
cltd
sbb
xchg
loopne
add
cmp
xchg
sub
mov
fsubl
je
aaa
pop
test
lcall
stos
cmpsb
nop
push
lahf
adc
cmp
rolb
pop
adc
xor
push
and
incl
xchg
push
add
adc
cmc
aaa
enter
dec
push
out
and
outsb
decl
lock
and
pushf
dec
fsubs
sbb
out
or
pushl
call
scas
and
sbb
pop
cmpb
sub
add
dec
inc
shll
xchg
mov
mov
mov
cmp
pusha
push
fcos
incl
dec
inc
addr16
push
mov
cld
outsb
lcall
xlat
adc
inc
mul
incl
cld
push
inc
xchg
cmpl
and
cmp
sbb
test
imul
insb
popa
sti
mov
imulb
jg
int3
adc
mov
call
into
ret
jl
push
add
std
ljmp
xchg
inc
les
addr16
inc
subl
pop
lea
dec
and
mov
jp
jnp
inc
testb
aas
adc
ret
pop
rcll
jmp
stc
fs
gs
add
ret
mov
rorb
lcall
and
clc
js
and
mov
xchg
repz
mov
and
addb
inc
fisubl
xor
mov
xchg
daa
addb
inc
or
push
dec
fwait
push
testb
pop
lods
jle
inc
lcall
out
rcll
push
mov
jb
cmpl
jg
les
push
add
cld
inc
scas
mov
sub
and
lahf
aad
lods
clc
xsave
sbb
incl
fiaddl
xor
leave
fwait
mov
mov
xchg
jp
pop
jo
lcall
xor
cmp
fsub
adc
adc
mov
lods
pop
pop
iret
cli
jns
xchg
aad
ds
pushl
loope
mov
xor
imul
popa
push
jns
cmc
clc
fcomps
out
ds
decl
std
xchg
jns
in
xchg
xor
fisttpll
pop
movsl
pop
adc
test
mov
decl
lret
mov
fwait
cmp
push
mov
or
popf
inc
test
ljmp
notl
push
xor
push
sarb
mul
cmp
lcall
test
cmp
xlat
mov
repnz
mov
ljmp
dec
add
pop
test
sbb
fcomip
fcoml
insb
pushf
cld
int
and
lods
mov
push
stos
repz
mov
add
jmp
mov
mov
jno
xchg
loopne
mov
test
shll
pop
pop
movsb
loop
push
jno
sub
or
dec
incb
push
call
cmpsb
lock
cmp
push
xlat
shll
mov
out
push
test
push
jg
sahf
repnz
in
xchg
lcall
add
pop
cmp
xor
sahf
or
test
mov
clc
js
mov
mov
mov
mov
fdivrl
rcrl
inc
or
push
jg
jmp
hlt
mov
int
or
dec
aad
jns
add
decl
or
loopne
inc
arpl
sub
dec
stos
std
ja
mov
in
xchg
ss
cmp
lcall
jmp
dec
cmpb
mov
popa
xchg
pop
pop
cmpsb
xor
inc
xor
std
pushl
inc
outsl
js
dec
gs
sub
xchg
sbb
popf
push
sbb
test
cld
jmp
je
push
insb
imul
mov
gs
push
mov
pop
test
stc
loop
sub
lods
jae
lds
jg
sbb
outsl
adc
or
out
in
call
pusha
mov
stc
jge
scas
jb
je
mov
xchg
sbb
mov
dec
xchg
ljmp
push
push
int3
movsl
mov
mov
adc
stc
mov
adc
mov
pushl
dec
int
int
cmp
ret
mov
cld
xchg
mov
adc
xor
mov
enter
jg
or
dec
fldl
lret
test
ss
add
inc
jo
add
test
int
mov
jno
pop
sbb
loope
fnstsw
les
das
cli
ljmp
loop
ret
shrl
ret
setnp
mov
gs
or
shrb
cli
mov
stos
loopne
mov
pop
xchg
pop
ds
mov
andb
inc
add
jg
idivb
lods
pop
imul
jg
cmove
outsb
jecxz
cmp
pop
or
inc
jmp
jbe
movsb
jae
xorb
and
lcall
sub
scas
inc
std
cmp
pop
imul
lcall
out
pop
mov
sub
and
push
or
push
scas
stc
jnp
fisubrl
imul
rol
or
pusha
jns
adc
test
call
loop
adc
out
hlt
cltd
push
rcr
mov
enter
movsl
repz
out
pop
mov
push
cmpsl
jbe
dec
add
lods
lahf
iret
or
pop
in
and
or
push
mov
push
fbstp
shll
mov
sbb
inc
push
and
cmp
pop
scas
loop
cwtl
xor
mov
adc
clc
repz
ljmp
aad
mov
or
out
xor
dec
jb
mov
out
repz
pop
mov
fsubl
cltd
mov
jne
dec
pushl
dec
ficomps
dec
cs
add
lahf
or
or
adc
mov
sub
mov
ljmp
in
movsl
mov
and
lock
mov
rolb
cmc
sub
pusha
mov
mov
leave
mov
push
stos
or
les
adc
inc
sbb
mov
cmp
ds
push
push
les
cwtl
aad
xchg
inc
aas
xchg
in
add
push
rorl
jmp
je
mov
mov
cmp
push
dec
mov
ja
mov
push
jecxz
lods
jg
loop
xor
adc
popf
ss
cmp
xor
push
mov
rcl
xchg
jp
dec
loop
fmull
aaa
nop
pop
movsb
mov
ljmp
outsb
push
mov
out
outsl
shll
repnz
out
mov
dec
pop
lock
clc
mov
ret
mov
jno
divl
out
sbb
xlat
mov
adc
in
pop
lock
stos
lcall
orl
sbb
stc
push
cmpl
pushl
and
fisttpll
jmp
push
add
jne
mov
sbb
cmc
jecxz
and
mov
add
imulb
add
or
mov
aam
dec
or
pushl
dec
push
imul
jbe
sub
sahf
xchg
add
cmp
rol
insl
sti
push
jge
mov
sub
cmpsb
xchg
jg
sub
fdivrl
repz
aad
stc
push
add
mov
incl
and
nop
xchg
cs
ret
mov
lods
adc
call
jmp
xor
lcall
mov
jmp
sub
je
ljmp
mov
incl
cltd
push
sub
xor
push
scas
imul
xchg
fidivl
sub
out
cli
push
cld
pop
cmp
cmp
outsl
lcall
pop
sub
ds
sbb
cmp
loope
mov
iret
fwait
mov
mov
sti
insl
mov
push
sbb
scas
mov
mov
lods
ffree
sarl
fwait
pxor
mov
popf
sub
std
addr16
inc
pop
jmp
cltd
pop
and
roll
sub
push
jmp
push
add
xlat
repnz
jmp
sub
outsb
addr16
aaa
mov
sub
test
mov
in
and
mov
ljmp
rorb
jp
fs
clc
sub
in
pusha
and
cmpsl
mov
fbld
mov
push
add
jbe
ljmp
pop
xchg
notl
cmpsb
sbb
imul
ret
jns
inc
popf
aam
cmpsb
mov
cli
mov
inc
or
mov
jnp
xchg
dec
pop
fmull
xchg
adc
fldl
fcomps
rorl
sub
push
dec
ja
mull
lock
nop
in
jnp
fcomip
cltd
fdivl
std
push
mov
call
inc
rorb
cmp
mov
push
dec
test
in
scas
cli
mov
inc
pop
or
jp
mov
mov
push
inc
mov
xchg
cmp
ds
cmpsb
and
scas
inc
aad
pop
sti
add
ret
mov
test
movsl
stos
xchg
push
jg
iret
xor
mov
ret
call
cld
in
sub
adc
mov
sub
jmp
jg
mov
inc
sbb
jg
ficomps
ljmp
cmc
mov
jb
jg
adc
fmul
mov
pop
pusha
je
scas
jmp
mov
das
lahf
sbb
jnp
arpl
imul
lcall
imul
incb
rol
sti
je
movsb
adc
mov
inc
and
js
lcall
jmp
inc
arpl
test
inc
or
cld
rclb
out
xor
insb
pop
into
decl
std
push
inc
test
push
cmc
dec
cmp
hlt
jle
and
jne
icebp
push
scas
shll
xchg
pushf
in
lcall
decb
mov
pusha
enter
xchg
cli
outsb
push
sbb
fcompp
inc
hlt
mov
loopne
dec
outsb
imul
add
or
dec
jmp
cmpsb
sbb
or
inc
or
adc
mov
test
adc
jmp
or
movsb
xchg
cmp
sar
jg
out
divl
mov
cmp
loop
pop
lds
stc
push
cwtl
xor
or
ljmp
xchg
test
jg
test
and
call
scas
mov
jb
inc
mov
mov
dec
int3
mov
scas
or
mov
decl
mov
jmp
mov
repz
cld
dec
mov
out
cld
das
movsb
push
jnp
int3
test
ljmp
push
in
jmp
inc
pop
push
and
dec
rorb
lock
and
xchg
cmpsl
sbb
inc
jg
jmp
sti
movsl
pop
in
cwtl
push
fs
dec
and
push
stos
push
loopne
arpl
or
push
add
push
mov
add
cltd
jge
cltd
inc
jno
cmp
mov
mov
outsl
enter
fiadds
pop
insb
xchg
popf
push
push
xchg
cmc
or
inc
shl
pop
dec
add
inc
mov
shlb
sbb
jmp
pop
mov
push
adc
outsl
pop
xor
and
inc
xor
and
jg
and
mov
mov
int
fiaddl
test
jecxz
xchg
jns
ljmp
call
mov
pop
add
inc
inc
aam
adc
dec
aaa
dec
or
sub
pushl
imul
and
out
inc
pop
pop
jo
aam
cmp
mov
xchg
fwait
les
in
mov
dec
xchg
jmp
lcall
mov
push
jmp
push
outsb
and
jbe
push
or
outsb
mov
lds
xchg
popf
jmp
lods
sbb
cmp
jno
lods
fisubrs
adc
ja
inc
push
ffree
push
loopne
rorb
in
push
les
xchg
mov
filds
int3
push
rorl
xor
int3
ljmp
stos
dec
leave
sub
adc
xlat
add
std
inc
adc
inc
dec
arpl
repz
aad
push
jae
dec
fs
and
inc
cmp
in
mov
cltd
outsl
sub
pop
and
cmpsb
sub
decl
adc
jne
push
mov
inc
xor
jbe
push
inc
inc
lcall
mov
mov
pop
push
sahf
sub
sbb
fcoms
scas
push
imul
pushl
push
out
dec
adc
pop
xor
fisubl
leave
xchg
pop
jg
mov
push
insl
cmp
pavgb
pop
xchg
xor
sub
mov
inc
pop
xchg
mov
jle
mov
das
mov
push
je
fidivrl
xchg
sbb
fwait
inc
adc
or
iret
stos
mov
pop
mov
stos
and
push
cmp
dec
sub
fstpl
ja
addr16
ret
mov
push
lret
nop
sub
pop
out
mov
push
mov
and
scas
loope
cmp
test
jmp
imul
cli
out
in
scas
leave
pop
add
and
jmp
xchg
sbbb
xchg
icebp
ss
inc
jg
add
fsubrl
pop
in
adc
xor
lret
mov
push
cmp
dec
aaa
aas
sbb
xchg
jge
xchg
mov
cmc
sub
mov
shrl
lcall
insb
inc
jmp
pusha
iret
rorb
fisttpll
mov
mov
cmp
inc
pop
int3
xchg
repnz
movsb
pop
insl
cld
fwait
test
mov
sbb
lods
cmp
lcall
and
aaa
pusha
int
sbb
sub
lcall
cmp
pop
xchg
ljmp
scas
pusha
loopne
push
inc
pusha
mov
test
imul
lods
pop
pop
cmp
mov
fcoml
fwait
cld
push
mov
imul
pop
ret
inc
adc
incl
jmp
xchg
mov
push
adc
cmpsl
fcmovne
push
mov
mov
aas
aas
cmp
or
adc
call
ds
add
shlb
mov
lret
sbb
sbb
push
sti
incl
push
ja
lds
pop
jecxz
pop
bound
adc
jle
or
pop
loopne
xor
js
jnp
and
lret
pop
test
cltd
ss
add
lcall
test
fsubr
sub
and
inc
sub
decl
out
cmp
pop
xor
shrb
mov
jns
dec
xchg
call
repz
push
sbb
adc
or
rcrl
pop
adc
fsub
fiadds
lcall
ja
test
cld
dec
clc
inc
les
out
sbb
push
ljmp
or
ds
repz
paddw
aas
jnp
jge
outsl
cli
ljmp
push
or
stc
xchg
inc
mov
jecxz
ret
jg
push
and
push
test
dec
ljmp
out
jecxz
xchg
ficoms
push
lcall
bound
mov
insb
std
mov
test
dec
add
cld
icebp
daa
adc
jg
lock
push
inc
pusha
pinsrw
pop
xor
adc
cs
decl
mov
in
lods
inc
clc
out
sub
pop
cmp
sar
incl
out
fdivr
mov
rolb
fcoms
mov
xchg
ljmp
test
js
or
dec
or
mov
in
call
out
xor
out
dec
mov
mov
sub
out
test
xor
ljmp
ds
jle
adc
movsl
int3
daa
push
xchg
in
push
mov
data16
leave
fcomip
call
cmpsl
lret
scas
jge
scas
test
xchg
jmp
and
dec
jg
mov
cmp
aaa
mov
aas
out
enter
or
decl
outsl
outsb
js
sbb
cmc
mov
pop
js
andb
leave
sub
mov
inc
lock
mov
test
lock
popaw
lock
xchg
enter
adc
icebp
xchg
sub
pop
adc
arpl
aas
popa
mov
clc
ljmp
or
fadd
in
fiaddl
ret
mov
and
popf
fimuls
mov
push
fnstenv
mov
xor
dec
mov
and
jecxz
enter
and
incl
sbb
jecxz
movsb
sahf
data16
mov
sub
cli
jmp
sbb
and
cld
push
mov
pop
shll
aad
jmp
jmp
xchg
int
pop
xor
pop
push
pop
or
test
dec
das
pop
arpl
add
ror
stos
daa
aaa
jne
jecxz
sbbl
xor
call
ds
outsb
jl
cltd
adc
mov
xor
mov
das
inc
mov
xchg
push
rolb
jecxz
dec
mov
les
lcall
lret
push
ljmp
xchg
add
sub
dec
imul
mov
xorl
pop
insb
mov
dec
mov
mov
inc
jo
mov
mov
inc
jmp
pop
jg
bswap
lock
pop
and
subl
push
js
jmp
cld
stos
out
and
cs
test
and
dec
mov
mov
shl
adc
push
mov
mov
addr16
mov
cmp
incl
cmp
jge
mov
adc
rcr
sub
jne
sub
sar
cli
mov
jno
pop
stos
mov
fs
mov
adc
xchg
fsubl
inc
jmp
call
or
jmp
add
iret
lea
ret
push
add
test
jmp
rorl
xchg
xchg
dec
lcall
sub
pop
lock
in
lods
ret
mov
ljmp
adc
lret
ljmp
mov
cmp
out
fsubs
aas
hlt
jg
push
xor
push
jo
dec
xchg
cmp
dec
es
pusha
lcall
jmp
pop
xchg
shrl
sbb
pop
pop
mov
ficomps
mov
int3
out
mov
fs
lcall
cmp
mov
push
scas
repnz
mov
loopne
mov
xchg
scas
inc
pushl
call
and
mov
jbe
aaa
sbb
rcr
incl
push
stos
aad
pop
sahf
xor
scas
nop
lds
jl
dec
cmpsb
mov
jb
push
cmp
jnp
jp
movl
lcall
lea
jb
cmp
and
mov
incl
imul
dec
icebp
test
xchg
xchg
pop
pop
mov
lcall
sbb
dec
mov
or
mov
add
incl
jp
lods
jbe
xor
ljmp
std
ds
inc
xor
lahf
xor
stos
shll
test
mov
add
icebp
mov
pushl
sbbb
push
andb
mov
add
popf
stc
jl
or
call
imul
aad
in
sar
repz
pop
loop
cwtl
cwtl
mov
inc
jb
pushl
lock
das
cmpsl
add
loop
pop
add
out
data16
xchg
mov
adc
or
xchg
pop
jnp
inc
pop
cmp
incl
cmc
pop
inc
inc
fiadds
inc
mov
rcrl
clc
loop
iret
dec
rcrb
iret
sbb
sbb
stos
push
ljmp
mov
pusha
xor
pop
sbb
leave
into
ds
jmp
je
rcll
out
push
inc
adc
dec
and
daa
jns
test
outsb
and
pop
inc
adc
inc
cltd
lods
ret
lret
dec
pop
sbb
rolb
lds
aas
and
test
call
jle
arpl
in
cld
pop
pop
xor
push
sbb
clc
incl
ficoml
test
push
jmp
cmpsb
adc
andb
clc
mov
sub
lea
incl
es
ja
or
lcall
addb
xchg
lahf
daa
cld
push
loopne
inc
xor
incl
andl
aam
dec
sbb
xchg
imul
adc
iret
shlb
pushl
push
mov
or
lret
and
ljmp
imul
pushl
cld
out
cmp
cmp
cmp
mov
out
push
shlb
jp
ljmp
sub
jnp
and
lea
mov
add
or
cld
call
mov
sub
cmp
int3
popa
xor
ffree
iret
dec
or
inc
xor
popa
lret
fwait
cli
sbb
in
dec
in
lcall
mov
rclb
mov
rcrl
cwtl
dec
push
mov
push
test
incl
das
push
jp
in
adc
xchg
sbb
lods
subl
mov
adc
ret
incl
jle
test
ror
incl
ret
repz
jbe
into
xchg
sbb
outsl
mov
jge
cltd
repnz
decl
scas
std
mov
ret
pop
aad
pop
incb
pop
pushf
int3
pop
mov
jg
decl
push
fcmovbe
pusha
xchg
jne
add
push
push
pop
in
mov
ljmp
out
mov
mov
enter
loopne
sahf
inc
jbe
or
cld
pop
incl
push
fidivrl
sub
xlat
or
ss
push
scas
sti
xor
fnstcw
pop
mov
ljmp
loop
rcl
loop
das
mov
jg
inc
dec
mov
out
jb
sar
popa
mov
jmp
test
jp
out
movsb
jg
js
mov
shrl
popf
mov
mov
pusha
jno
in
mov
jl
dec
jbe
cmpsb
inc
inc
or
pop
push
movsl
repnz
aaa
stc
or
data16
repnz
cmp
out
cli
decl
subb
gs
aaa
dec
mov
cld
xchg
arpl
daa
jmp
cld
ljmp
inc
adc
arpl
ret
loopne
andb
mov
xor
iret
cwtl
imul
cmpsl
inc
mov
outsb
daa
or
xor
jo
insb
aad
sub
cmpsl
and
aaa
adc
dec
cld
jmp
sbb
jp
ds
adcl
xchg
jo
clc
sub
jge
xchg
jl
js
fcompl
jg
pop
jns
jns
push
push
adc
inc
rorb
jmp
repnz
sbb
lock
fdivrl
push
idivl
mov
adc
sbb
lcall
sbb
sub
rcrb
repnz
push
mov
mov
test
lcall
repz
sbb
les
adcl
mov
shl
mov
cmp
outsb
pushl
dec
jg
push
xor
mov
push
int
xchg
cld
push
jecxz
xchg
fldcw
std
dec
cs
mov
lcall
add
sbb
pop
jecxz
rorb
hlt
cmp
adc
sub
lock
jl
lcall
insb
movsl
pusha
push
clc
cli
or
and
mov
ds
xor
loopne
testb
xchg
dec
pusha
popa
fidivrl
cld
gs
loop
lea
xchg
decl
cmpl
inc
mov
sub
jns
ljmp
xlat
pop
dec
or
xchg
jbe
jl
sbb
sub
xchg
fnstenv
push
push
pop
outsl
cmpsb
call
or
fucomi
fdecstp
stos
jmp
loopne
mov
adc
xchg
dec
adc
mov
and
adc
test
adc
scas
pmulhuw
lea
fsubs
mov
adc
mov
or
pop
mov
popa
adc
or
xchg
and
call
mov
add
pop
es
ja
insb
sub
test
mov
lcall
rorb
xlat
dec
shlb
lds
repnz
lea
cmp
jmp
xor
xchg
out
out
call
mov
jns
add
lcall
sbb
jecxz
push
int3
mov
xchg
pop
jbe
insl
jno
xor
add
fbld
add
or
jp
sbb
cmp
in
test
mov
insl
test
lcall
mov
xor
lods
dec
mov
mov
jnp
pushf
mov
jecxz
jnp
adc
incl
push
push
xlat
imul
push
dec
hlt
cmp
test
movsl
dec
sub
inc
loopne
mov
cmpsl
pop
or
sarb
fs
mov
cli
sub
mov
andb
inc
fildl
in
lods
inc
mov
pushf
fimuls
or
test
pop
add
ja
push
stos
or
ljmp
and
lock
arpl
js
daa
inc
push
dec
sbb
daa
das
lcall
test
mov
ljmp
mov
pop
loop
fbstp
inc
pop
and
pushl
faddl
jmp
andb
jo
cli
adc
mov
fsubrl
pop
decl
mov
mov
popa
movl
ja
xchg
imul
iret
jno
push
decl
movsl
icebp
push
cmovne
sarb
mov
xor
mov
sbb
ljmp
movsl
hlt
in
movsl
mov
push
cmp
scas
jmp
jecxz
xchg
dec
pusha
jbe
xor
jecxz
into
dec
push
mov
mov
and
cli
ljmp
test
stos
gs
push
sub
and
jo
stos
sub
push
std
outsl
je
mov
inc
ret
popf
or
cwtl
xchg
enter
sub
sti
filds
aas
out
mov
fists
push
lock
push
lcall
push
fdivs
addb
ret
pop
push
jle
mov
lods
pusha
icebp
movsl
scas
pushl
out
or
nop
push
and
shl
sbb
lcall
dec
shrb
add
mov
xchg
mov
mov
in
in
mov
repz
dec
jg
add
adc
add
pop
mov
xorb
shrb
mov
subb
je
int
out
pop
sbb
je
sahf
pop
sub
or
mov
jl
sti
dec
sub
popf
fwait
dec
sub
jo
mov
mov
aad
cmpsb
lcall
or
stos
rol
inc
ja
mov
push
inc
jb
xchg
addr16
cmp
or
fldt
jns,pt
cli
call
xor
sub
pusha
dec
mov
xchg
or
dec
aad
filds
fisubrs
lcall
dec
adc
mov
push
fs
aam
push
outsl
xor
call
loopne
sar
mov
sbb
cli
rclb
and
loope
jg
mov
mov
rolb
lea
cmc
repz
incl
ja
cs
jg
inc
popf
popa
cmp
pop
int3
pmullw
inc
cmp
outsb
pop
sbb
cltd
clc
adc
pop
cltd
outsb
cmp
divl
or
mov
out
sbb
mov
int3
pop
cmpsb
outsl
stos
push
dec
pop
xor
aaa
scas
xchg
mov
push
cmp
push
xchg
xchg
push
dec
xchg
fnstsw
adc
fs
dec
cwtl
dec
pop
pop
sahf
add
push
xchg
enter
sub
mov
mov
cmp
sahf
int
stos
in
mov
mov
iret
mov
sbb
mov
jns
cli
adc
or
push
mov
clc
jmp
movsb
outsl
pop
popf
mov
fwait
ret
push
cld
pop
loopne
mov
adc
leave
out
lods
rcll
adc
ss
aas
test
out
aam
push
pop
jno
lcall
mov
inc
andb
mov
fistpl
test
xchg
js
popa
std
cmp
leave
stos
mov
repz
sub
jecxz
sub
loopne
mov
mov
addl
dec
mov
mov
lcall
pusha
pop
dec
sub
sbb
out
lds
outsl
xor
pushl
cmc
das
xchg
jae
lea
cmp
xor
or
mov
or
call
mov
fldenv
into
gs
or
lret
and
xor
xchg
in
in
and
inc
shlb
push
push
ja
cmp
xor
lea
repnz
fwait
outsl
pusha
xor
or
pop
jmp
mov
xor
mov
aaa
and
jno
cmp
mov
fdivrs
lock
jle
jg
outsb
push
in
shll
pusha
cltd
lock
outsb
jne
int
jno
add
lcall
adc
repnz
jmp
jb
push
nop
inc
fwait
push
jmp
or
mov
or
lock
lock
push
test
icebp
lcall
mov
dec
in
lods
and
inc
sub
leave
dec
in
mov
fistps
test
inc
push
inc
in
sbb
sysenter
adc
push
sub
repz
jne
add
pushf
shlb
insl
cmp
pushf
jge
dec
mov
fwait
xchg
mov
jg
fsubs
in
push
mov
fldcw
scas
and
inc
dec
cmpsl
ds
push
shll
jmp
scas
aam
add
loope
inc
sub
jmp
fs
xchg
jl
sbb
cmp
or
sbb
enter
push
push
inc
mov
sub
sahf
shrb
pop
mov
jmp
push
jbe
lahf
cmp
sbb
and
or
fdivr
jp
leave
dec
push
pop
jg
ljmp
movsb
push
pusha
jbe
xlat
add
fnstenv
filds
pushl
std
cmp
and
push
outsl
cmpl
aas
das
mov
sti
mov
mov
xchg
dec
icebp
shll
xchg
mov
scas
fiaddl
mov
pushl
in
add
inc
insb
lea
mov
mov
sub
fs
jbe
fisubs
decl
enter
mov
dec
mov
jle
pushf
jo
xchg
or
cli
jae
xor
test
sbb
and
or
sbb
ret
pop
loopne
xlat
hlt
and
stos
mov
jl
jmp
pusha
add
gs
sbb
pusha
pushf
out
adc
xchg
pop
pop
mov
jg
mov
pop
and
pop
insl
push
dec
out
in
out
jl
ficomps
xor
sub
mov
data16
out
sbbl
jmp
push
mov
in
xchg
in
in
fwait
mov
ljmp
mov
xchg
sub
jle
mov
push
mov
jmp
mov
ret
popf
pop
xor
mov
inc
dec
push
popl
mov
or
xchg
aaa
rol
sbb
dec
ja
cmc
jecxz
gs
xor
push
push
sub
push
push
aam
dec
inc
xchg
mov
jae
mov
hlt
xchg
and
adc
mov
xor
inc
dec
sbb
sub
adc
inc
loope
sub
fstpt
xchg
xchg
mov
inc
mov
mov
int3
in
mov
jecxz
out
mov
sub
fsubl
cmp
dec
or
mov
ficoms
sbb
adc
decl
scas
mov
mov
fldenv
sbb
xchg
add
xchg
push
incl
xchg
movl
xchg
div
sub
aas
pop
cmp
rcll
mov
cs
call
es
jo
stc
ret
sub
out
xchg
int3
roll
xchg
imul
ret
jmp
ljmp
sbbb
aas
xor
orb
ljmp
mov
cmp
call
movsl
clc
int3
inc
into
call
imul
xchg
jmp
lock
call
mov
xor
add
es
popf
fwait
scas
cmp
ljmp
cli
push
cli
ret
imul
lcall
and
rcrb
in
push
inc
inc
lds
xchg
adc
icebp
jg
icebp
or
push
dec
mov
mov
call
lcall
or
inc
mov
cmpsl
adc
mov
call
fsubrl
sub
cmp
push
push
js
mov
xor
neg
lcall
jge
cwtl
movb
mov
icebp
sub
mov
lods
jns
sbbl
test
xchg
jp
cmpsb
or
out
cwtl
stc
mov
scas
test
pop
inc
and
fcomps
sbb
sbb
add
mov
inc
mov
cld
fcoms
push
adc
icebp
pop
and
lods
in
iret
xchg
xor
pop
cmc
mov
clc
loop
js
cmpsb
pop
xchg
mov
es
call
dec
mov
sar
xchg
mov
js
daa
xor
dec
and
pop
in
ljmp
movsb
ja
out
pop
push
outsb
xor
shrl
out
push
pop
mov
fsubl
adc
jp
stos
ret
or
adc
or
sbb
push
pop
or
out
test
push
sub
sbb
cmp
in
inc
scas
mov
dec
add
sarl
mov
or
jo
stc
in
loopne
and
mov
out
hlt
dec
dec
in
dec
xchg
cmp
pushl
je
pop
xchg
ss
outsl
lods
es
sub
lcall
pop
lcall
jp
adc
add
push
mov
fwait
and
daa
cmp
pop
out
sub
mov
incl
hlt
jecxz
scas
pop
outsb
xchg
insb
xchg
test
jmp
xchg
inc
push
cwtl
xchg
gs
incl
scas
jle
pop
dec
sbb
mov
pop
subl
mov
ss
cli
mov
xor
pop
sub
scas
mov
imul
fildll
incl
xor
mov
xchg
aaa
mov
lret
lods
out
xor
ja
mov
das
js
fbld
movsb
or
mov
cmp
jb
clc
jne
stc
ffreep
incl
repz
mov
in
out
lods
add
jmp
outsl
dec
adc
dec
std
cmpl
xlat
push
int3
mov
pusha
adc
lcall
and
insb
lret
mov
cltd
or
pand
xchg
adc
xchg
decl
leave
lds
mov
lret
fidivrs
and
popa
add
inc
cmpsb
cmc
lret
call
adc
add
call
cmp
bound
push
ja
incl
nop
lock
push
or
or
decl
mov
fisubl
mov
test
lahf
cmpsl
cmp
mov
sub
dec
repnz
or
repz
jb
arpl
mov
push
daa
incl
push
push
mov
and
mov
sub
fldenv
cwtl
push
sub
dec
out
fnsave
mov
sbb
push
in
scas
xchg
or
push
xchg
cwtl
add
xchg
dec
pushf
leave
movsb
incl
test
pusha
or
lods
hlt
test
mov
fwait
aas
adc
fiaddl
jmp
decl
out
xchg
inc
in
or
mov
and
cmp
or
mov
call
fwait
outsb
mov
idivb
sub
pop
ja
jge
mov
xchg
lds
mov
jb
cmp
decl
icebp
xchg
lds
stos
nop
jo
call
sarl
leave
les
ljmp
loopne
mov
leave
dec
fbld
add
adc
mov
call
or
add
js
lret
hlt
call
mov
decl
call
fildll
sbb
mov
adc
lds
jbe
and
adc
aaa
and
dec
addr16
cmp
insb
add
incl
push
push
mov
stos
imul
mov
ljmp
ljmp
arpl
mov
pop
mov
dec
cmp
ret
call
fwait
incl
test
jmp
lds
mov
push
mov
repz
decl
mov
mov
cmc
and
stos
dec
xchg
push
push
inc
pop
in
sbb
jmp
testl
lret
mov
jns
xchg
int
xchg
dec
dec
insb
aaa
push
mov
ljmp
lret
stos
mov
cmp
xlat
scas
hlt
je
loope
and
decl
sar
jb
xlat
adc
call
lret
ljmp
loope,pn
sbb
into
cmp
enter
jg
cwtl
lods
das
std
imul
fmuls
dec
test
cmpsb
adc
outsl
mov
adc
out
adc
ljmp
lret
loop
mov
jmp
aaa
int3
xor
gs
jno
dec
rorb
push
mov
sub
popf
js
popa
pushf
pop
ds
sub
and
dec
scas
mov
jge
or
das
inc
nop
dec
ret
bound
icebp
shrl
pop
nop
mov
out
dec
ljmp
insl
stc
orb
inc
mov
adc
into
test
xor
mov
aam
cs
add
call
je
std
pop
pushf
mov
dec
outsl
lret
mov
cmp
dec
inc
or
loop
mov
push
inc
inc
adc
rcrb
test
or
decl
das
jns
push
and
fs
mov
fnsave
call
add
lea
mov
add
fidivs
pushl
mov
fs
push
pop
aaa
fwait
imul
mov
mov
movsb
dec
scas
repnz
dec
int
mov
out
jno
inc
cmpb
mov
ret
jmp
or
aam
aaa
fcmovnbe
ljmp
push
fldl
ds
iret
lea
cmp
jp
lcall
outsl
mov
iret
ss
mov
xor
jp
mov
sbb
imul
decl
adc
xlat
mov
outsb
call
or
mov
lcall
adc
xor
jp
cmp
mov
jle
jb
pop
cs
sbb
scas
adc
test
jmp
int
xchg
jecxz
fwait
movsb
pop
lock
mov
arpl
xchg
lcall
ljmpw
es
jo
push
xor
mov
jno
std
roll
mov
in
out
cmp
inc
cmp
imul
sbb
mov
mov
cwtl
sbb
std
incl
pop
cli
jnp
push
mov
int
pop
cmpsl
push
add
mov
cltd
dec
cmp
mov
mov
and
in
pushf
dec
sti
pushl
std
ja
dec
sahf
movb
and
repnz
movsl
jecxz
xchg
test
mov
pop
pushl
cld
sti
rcll
dec
mov
xchg
into
sub
and
sub
ljmp
cmpsb
push
mov
fisubrl
les
push
inc
repz
rolb
aad
das
push
ret
movsl
jp
test
sar
std
mov
fidivrs
fsubp
push
out
sbb
or
movsl
sub
gs
push
std
std
insb
lea
jbe
fcmovnu
je
sbb
push
xor
push
add
mov
jg
push
in
sbb
mov
out
dec
pop
jb,pt
cmp
push
and
jmp
cmpsl
mov
aaa
pop
or
repz
bound
add
ljmp
push
in
out
ret
jns
push
sar
mov
inc
bts
call
fdivr
stos
mov
lcall
fsubr
into
decb
push
dec
mov
push
rcll
cld
push
cld
and
mov
sbb
cld
cmp
lcall
in
imul
add
mov
and
divb
jmp
fdivrl
les
push
loop
dec
lahf
inc
sbb
loop
cltd
mov
cs
js
mov
adc
lods
push
jl
repnz
ljmp
lret
rorl
into
int
dec
adc
mov
pusha
mov
cmp
jmp
call
push
inc
jo
xor
mov
test
mov
dec
inc
enter
jmp
and
pop
mov
in
inc
insl
scas
idivb
daa
xchg
xor
lock
or
mov
icebp
add
xchg
sbb
push
fdivrl
pop
mov
cmpsl
aas
push
mov
adc
fcompl
xchg
pop
je
lods
push
adc
je
adc
mov
mov
daa
shrb
in
pop
xor
or
into
inc
add
int3
pop
mov
mov
mov
jo
mov
pop
pop
rolb
movsb
rclb
mov
mov
icebp
pop
fsubr
xor
mov
nop
std
pop
mov
jmp
jo
out
nop
sahf
fcmovnbe
mov
pushf
imul
or
aaa
sti
and
imul
xchg
icebp
sbb
adc
pushl
dec
mov
les
jne
mov
fmuls
adc
xchg
xchg
mov
dec
repz
decl
push
pop
inc
filds
mov
mov
ret
add
and
push
jge
dec
sbb
push
data16
pushl
fimull
adc
das
fs
clc
rclb
test
popf
push
ja
pushf
ljmp
outsl
decl
mov
fadds
and
std
cmpsb
out
scas
push
mov
ficoml
ljmp
adc
mov
stc
dec
mov
fcom
mov
filds
in
and
mov
nop
push
dec
cli
jo
jbe
mov
inc
mov
pop
adc
pop
sbb
sbb
xchg
dec
pop
in
and
shrl
mov
std
fucomip
loope
ficoms
idivb
notl
fistpll
push
jae
cltd
mov
jg
and
or
inc
in
imul
jmp
nop
vfmsubpd
flds
aad
mov
sub
sbb
fildll
dec
lret
ret
cmp
dec
xchg
cmp
jmp
push
dec
sub
pop
jae
ds
inc
jae
repnz
ret
mov
push
addb
lcall
lcall
movsb
sbb
mov
daa
cltd
xchg
das
sbb
loope
fidivrs
fsubr
cmpsb
ret
call
cmp
shrl
cli
pop
add
mov
aam
jne
in
dec
flds
ljmp
or
cmp
notl
out
add
inc
subb
faddp
std
scas
xchg
push
push
add
or
decl
ss
lret
push
fs
rcll
cmp
jmp
adc
ljmp
push
ret
fucomi
imul
enter
sub
lret
sar
je
add
incl
rcrl
popf
mov
add
push
jg
mov
loop
and
repnz
jge
stos
popa
rol
out
cmp
add
pusha
out
lret
push
cmpsb
mov
jl
pop
xchg
pop
dec
inc
adc
fistpll
cmpsb
cmp
inc
cmpsb
push
push
sub
xor
shl
stos
add
sub
or
push
scas
lcall
popf
pop
stos
xchg
push
push
mov
cmp
cmp
rolb
stc
mov
xchg
test
mov
xchg
or
insb
push
dec
adc
jmp
aas
cli
ljmp
lods
daa
fiaddl
popf
insb
icebp
cwtl
inc
jg
stos
or
mov
fwait
adc
mov
out
mov
sbb
dec
cwtl
cwtl
cmp
cmpsb
sbb
jge
add
mov
cmc
pushf
cs
addr16
incl
cmp
cmp
ss
xchg
std
mov
std
std
push
cld
adc
and
sbbb
push
and
pushl
push
popa
ret
sub
adc
jnp
mov
pop
jo
pushf
cld
mov
xor
ljmp
enter
clc
pop
andb
dec
sbb
mov
fidivrl
icebp
adc
mov
inc
out
out
lock
jg
sbb
aam
sub
ds
gs
dec
mov
int3
and
or
ret
push
add
or
fdivl
jg
fmul
cmpsb
xchg
add
mov
hlt
push
imul
ljmp
decb
out
test
inc
inc
push
dec
pop
cli
push
aas
sub
sbb
icebp
xor
dec
clc
fcomip
jo
insb
adc
mov
repz
jle
mov
out
out
push
stos
pop
out
call
jne
or
adc
pop
hlt
ljmp
outsb
imull
mov
pop
js
jp
ja
mov
cmpsb
jp
dec
jecxz
push
data16
ljmp
in
mov
sti
xchg
stos
cmp
divl
pop
and
cmp
mov
inc
insb
and
fmull
mov
shrd
push
lock
dec
jmp
lds
into
aaa
fcos
pop
push
cmpb
lock
in
in
jbe
rclb
jg
mov
out
icebp
test
mov
pushf
je
mov
js
jne
rclb
cld
pop
mov
add
cmp
scas
lock
cmp
pop
xchg
lcall
mov
xor
cmp
lds
adc
lcall
xchg
add
inc
push
mov
ja
insl
subb
in
xor
out
jg
inc
jmp
arpl
push
lds
pop
mov
and
test
jmp
adc
or
lods
les
popa
enter
call
jb
cld
cmpsb
or
jp
or
xchg
cltd
xchg
and
jecxz
int3
loope
pushl
cwtl
stos
inc
ja
push
xchg
or
mov
insb
mov
cltd
fcmove
jecxz
mov
inc
and
popa
inc
mov
ret
push
lcall
je
jnp
cmpsb
cmpb
int3
les
out
jnp
iret
mov
aas
mov
mov
xor
loop
fcomip
lret
lds
and
out
pop
pop
aaa
add
test
lock
jge
fs
fwait
adc
fsubs
lcall
mov
xchg
clc
mov
ds
sub
sub
sbb
pop
sbb
add
inc
mov
ret
das
shll
insb
lret
inc
inc
dec
fwait
int3
mov
daa
mov
sbb
mov
test
fnstenv
call
clc
sbb
les
orl
adc
jb
subb
pop
jo
es
dec
adc
push
fistl
xchg
xchg
or
push
lods
lods
pop
mov
mov
pop
mov
or
cmp
jb
inc
pop
mov
stos
mov
insl
and
scas
cld
and
fdiv
mov
mov
mov
sbb
mov
push
sub
inc
mul
jb
das
add
ljmp
rorl
fcoms
sbb
int3
mov
mul
cwtl
std
jmp
adc
xchg
pusha
outsl
inc
cwtl
in
inc
arpl
sub
push
shr
pop
sub
and
cld
jmp
cmc
mov
adc
cmp
jmp
in
test
xchg
or
aad
jp
js
adc
sub
addr16
mov
loop
cltd
dec
cmp
dec
fistpl
daa
add
out
xchg
push
ficompl
out
pop
mov
mov
imul
call
lcall
adc
sbb
xor
mov
or
add
jecxz
imul
fldenv
pop
push
aaa
sarl
fs
jl
mov
pop
or
cmc
dec
sbb
mov
pop
mov
jmp
bound
xor
jge
aas
ss
pop
cld
xlat
pop
fisubl
lcall
mov
jae
or
lret
test
and
insl
push
cli
sahf
inc
subl
je
jb
lcall
pop
sub
adc
pop
nop
pop
fidivl
scas
push
mov
add
inc
inc
push
cmp
das
push
lock
dec
dec
js
mov
adc
pop
push
hlt
mov
push
xor
xchg
ds
lret
rep
mov
sbb
jg
stos
push
inc
inc
jp
hlt
ja
inc
fidivl
stc
and
push
addr16
addr16
dec
adc
mov
cs
mov
jp
dec
sbb
adc
sub
orl
push
insl
sar
jmp
clc
shl
adc
lods
xchg
lods
adc
cmpsb
xchg
clc
mov
add
popa
or
shrl
lea
pushf
call
cmp
xchg
push
cmp
add
push
cmpsb
mov
test
incl
mov
je
ss
fmul
mov
sub
sarl
stos
mov
test
cmpsb
pop
fcompl
call
shlb
and
pusha
sbb
cmp
pop
lcall
jmp
xchg
dec
test
cltd
push
mov
test
mov
mull
incl
lahf
push
push
xchg
inc
sahf
push
inc
imul
aad
dec
jae
inc
xchg
cli
mov
sub
nop
out
mov
cmp
and
mov
stos
sub
xor
add
xchg
mov
leave
push
int3
cwtl
jmp
bound
dec
ret
or
out
mov
xor
mov
je
insb
cmp
cmpsl
mov
lods
pop
and
and
decl
jo
xchg
pop
adc
jge
aaa
push
mov
ret
bound
inc
leave
fadds
dec
pop
mov
test
test
inc
mov
jg
and
xorl
add
xchg
or
addr16
push
add
jnp
icebp
insl
xor
icebp
mov
cmc
fidivrs
jbe
bound
decl
jb
jmp
adc
mov
sbbb
pop
sti
push
add
in
imul
lcall
std
pop
bound
xor
xchg
mov
mov
sahf
or
jg
loopne
pop
out
int3
mov
ret
push
cs
jge
lods
bound
fidivrs
loopne
pushl
and
push
push
pop
sub
ret
bound
ret
nop
mov
int
jmp
scas
push
gs
cld
or
sbb
out
daa
dec
cmp
pusha
repz
mov
call
xchg
sub
cmp
int3
lret
ja
fldt
and
cmpsl
pop
sub
mov
call
ds
push
push
sahf
push
sub
or
mov
mov
les
mov
out
out
rol
or
jmp
and
arpl
cmp
push
dec
test
mulb
xlat
pop
cld
je
jecxz
sbb
xorb
das
std
and
call
std
pushl
cmpsb
xchg
scas
push
jmp
pop
mov
loope
pop
mov
and
aas
jge
repz
xchg
sbb
mov
ficompl
xchg
cmp
icebp
dec
nop
inc
shll
xor
ljmp
fdiv
pop
xlat
push
ret
lret
dec
pop
mov
call
repnz
jb
mov
js
sbb
dec
mov
add
lcall
cmp
imul
fsubl
ret
xchg
shlb
add
cltd
mov
push
cld
ljmp
cld
xchg
push
popa
sahf
mov
cli
or
jp
jbe
and
or
cmp
push
leave
popa
jmp
mov
clc
imul
xchg
call
call
push
push
mov
jne
adc
insb
sahf
lahf
add
ja
cmp
inc
pushf
sbb
test
loope
jmp
fisttpl
aad
pop
movsb
add
mov
mov
ljmp
lock
jecxz
std
push
dec
xor
imul
out
ja
adc
ljmp
push
adc
aas
xchg
and
lods
scas
gs
jle
outsl
rorb
call
pop
cli
int3
mov
push
inc
mov
cmc
add
bnd
add
cmp
test
push
clc
xchg
jmp
fdivrl
pop
adc
pop
adc
rolb
xchg
aam
and
test
pushl
adc
das
test
out
jnp
lahf
push
cwtl
cwtl
lret
mov
sahf
dec
outsb
sbb
xor
stos
jl
cmpsl
mov
add
jp
rorl
mov
subl
mov
insl
or
decl
in
das
int3
icebp
cmp
popf
jbe
jo
xchg
sub
xlat
lret
rcll
aas
jns
ja
outsl
dec
lcall
push
stos
xchg
fcoms
pop
cmpsb
fcompl
jle
mov
loopne
sub
enter
sbb
mov
cli
and
popa
stos
xchg
call
push
mov
or
dec
movb
test
jg
add
imul
loope
jns
jle
gs
inc
out
add
jmp
ljmp
inc
push
inc
mov
insl
test
pusha
cmp
stos
gs
movsl
push
mov
xor
push
push
push
ljmp
insb
xor
mov
push
jl
dec
mov
andl
jge
pop
push
cltd
out
dec
push
incl
and
dec
mov
mov
push
lock
and
xchg
mov
jmp
lea
mov
cmp
pop
rolb
rclb
clc
inc
adc
test
pop
movsb
fldcw
jge
cmp
ljmp
out
out
push
xchg
mov
out
mov
mov
pop
outsb
jb
divl
mov
mov
shl
adc
push
cltd
imul
inc
push
sub
sub
xchg
ss
lods
cmp
int
jnp
movsb
jmp
das
or
negb
lock
cld
and
mov
xor
push
sub
dec
pop
dec
cmp
adc
push
pop
jl
test
fistps
arpl
mov
pop
loopne
stc
lcall
ljmp
mov
popl
popa
fwait
jecxz
push
arpl
subl
out
popa
call
mov
gs
mov
pusha
and
ja
xchg
ds
cmp
clc
mov
mov
push
jge
mov
js
lcall
int3
jbe
inc
decl
popf
cmp
repz
cmpsb
jle
pushf
cmpsl
inc
inc
fidivrs
lret
mov
sbb
xor
aas
dec
lret
data16
pushl
daa
es
add
jnp
bound
push
adc
inc
mov
and
or
ljmp
out
test
cmpsl
jmp
mov
dec
mov
call
sub
std
cmc
jl
sbb
pop
and
xor
clc
inc
add
xchg
push
xlat
mov
lcall
fisubs
pop
es
xor
fnstenv
mov
js
mov
jle
cmp
ljmp
sbb
pop
inc
mov
dec
inc
fdivp
adc
and
shrb
bound
ljmp
pushl
xchg
push
aas
dec
and
dec
adc
insl
dec
push
push
outsb
adc
rcr
xacquire
enter
dec
jmp
pop
mov
decl
outsl
ljmp
lret
jp
pop
mov
and
and
push
clc
jg
and
jmp
mov
push
push
pop
cmp
incl
loop
sbb
and
mov
cmpsb
insl
test
jmp
adc
jb
xor
inc
xor
cmp
sub
pusha
out
arpl
test
loope
insl
or
mov
shrb
push
ret
lcall
mov
decb
lods
outsb
push
popl
loopne
loope
cmp
sbb
loopne,pt
xor
ljmp
xchg
pop
fs
hlt
push
inc
mov
cmpsb
xchg
fcompl
ljmp
add
or
nop
dec
lret
outsl
push
inc
pop
aad
pop
rcr
decb
imul
pushl
sbb
xor
push
cmp
dec
shl
and
inc
mov
leave
leave
or
jno
mov
std
jo
iret
in
xchg
js
lahf
mov
jne
mov
in
mov
add
jmp
es
enter
ljmp
les
jmp
adc
and
rclb
and
pusha
mov
sar
incl
das
fisubrl
shll
lret
xchg
mov
lds
ljmp
jg
cmpsb
je
pop
and
mov
repnz
dec
sub
cwtl
lahf
arpl
jecxz
lret
incl
dec
sbb
jge
jge
dec
mov
xchg
dec
incl
leave
or
add
push
sbb
or
ret
sub
and
push
scas
ljmp
push
imul
mov
mov
push
lret
aaa
std
gs
jge
dec
mov
jp
cs
mov
push
jno
mov
aad
shrl
loopne
cld
inc
add
lret
and
lcall
movsb
lock
add
pusha
shrb
push
jne
pusha
in
fcoms
pop
lcall
pop
push
loopne
xchg
negl
inc
mov
xchg
mov
xor
mov
jg
and
scas
pushf
cli
xor
sub
xchg
nop
pop
negb
pop
cmc
jb
jo
fsubl
cltd
xchg
pop
cmp
arpl
lcall
sub
pop
mov
in
xchg
fs
call
xorb
iret
xor
mov
mov
enter
pop
sahf
xchg
cmpsb
movsl
out
cld
lret
clc
sahf
push
mov
insl
sub
xchg
sub
cltd
pop
shlb
and
push
jle
int
pop
dec
call
mov
sbb
sub
jg
call
loopne
and
popf
fimuls
xor
imul
push
leave
pop
inc
fildll
jne
mov
nop
cmp
pushl
call
push
xchg
iret
lods
xor
sub
jo
cmp
clc
test
dec
test
jno
loop
test
adc
dec
dec
inc
stos
in
lds
ljmp
adc
cmpsb
sub
mov
loop
leave
push
jl
sbb
dec
mov
clc
pop
jmp
das
rcr
jl
jmp
push
dec
cmp
stos
or
sub
bound
cmp
bound
sahf
ljmp
stc
cltd
ret
ja
clc
xor
jle
adc
addr16
lret
ljmp
lcall
push
mull
push
out
push
or
xchg
add
mov
les
xor
sbb
jmp
add
subl
dec
add
jge
push
push
jmp
popf
and
addr16
lcall
mov
mov
outsl
test
fisubrl
cld
lods
pop
xchg
mov
or
sbb
decl
daa
pop
orb
mov
fbstp
push
or
dec
adc
mov
pop
test
int
idivb
jns
jle
push
ljmp
das
pop
xchg
and
and
fcmovu
loopne
xchg
out
adc
mov
push
es
mov
mov
mov
ljmp
aaa
xor
es
push
popa
imul
inc
stos
lods
enter
or
in
cli
inc
loopne
data16
icebp
dec
fstpl
mov
imul
out
sar
fstpt
in
aaa
pop
ret
xchg
les
out
pop
punpckhwd
cmpsl
daa
loopne
loope
adc
lcall
push
adc
jl
jns
orl
clc
in
imul
in
dec
aaa
push
movsb
push
pop
push
mov
sbb
incl
inc
int
in
mov
ficoml
adcl
jle
addr16
mov
sbbl
cmp
lods
scas
push
lret
std
push
daa
stos
stos
jl
push
add
sub
mov
mov
dec
std
inc
xor
push
inc
hlt
ret
cli
pop
jb
mov
jg
shlb
test
es
out
movsb
movb
sbb
mull
xchg
sbb
incl
jmp
cmp
inc
inc
sub
adc
out
pushf
daa
cmc
in
push
xchg
jmp
pop
push
add
inc
lods
fnstenv
out
or
xchg
lcall
jnp
test
dec
pushf
pop
inc
or
xchg
inc
dec
rcrl
xchg
mov
inc
call
pop
cs
xchg
data16
into
fcoml
xchg
rorl
pushf
or
sbb
adc
jo
fisttpl
fisttpl
nop
xchg
inc
xchg
int3
fistps
aad
lock
fnstsw
lret
stos
jg
call
jg
jmp
xor
mov
or
or
push
fldcw
cld
xchg
cltd
mov
dec
dec
fwait
stos
sbb
pop
call
push
sbb
push
add
push
sub
rolb
iret
sahf
and
decl
movsb
sub
loop
inc
lret
fistl
add
aas
loop
enter
mov
or
ljmp
clc
inc
lea
push
loop
data16
insb
mov
test
pop
iret
xor
and
decl
or
adcl
ljmp
out
ja
mov
hlt
sub
mov
imul
cmp
push
fcomip
fnsave
repnz
es
adc
xor
or
sub
xchg
cli
push
addr16
pop
pop
cmp
add
outsl
pop
fwait
cmp
lods
icebp
repz
call
stos
sub
movsb
and
pop
enter
adc
bswap
rol
lcall
sub
mov
cmp
jl
mov
call
loop
jae
iret
pop
cmp
ret
jo
xchg
movsl
push
and
in
ror
lods
cmc
movsb
xchg
and
incb
int3
rcrb
or
push
popa
add
adc
mov
jg
rorl
add
pushf
negl
add
jp
ljmp
add
jg
popl
call
adc
cmpsb
and
cmp
mov
fisttps
add
in
cld
call
jo
in
jp
addl
ja
into
imul
inc
sub
xchg
aad
cmp
test
lods
jmp
push
jg
lock
xchg
xlat
mov
dec
push
and
jecxz
lock
mov
mov
cwtl
scas
decl
bound
xchg
aam
inc
lahf
imul
xchg
and
jp
push
pusha
pop
mov
jl
repz
mov
mov
push
in
roll
loope
lock
incl
inc
lcall
cmp
shrl
addr16
ss
lcall
and
pop
outsl
add
mov
fwait
xchg
cmpl
lods
cmp
cld
mov
pop
into
mov
out
dec
ret
inc
out
movsl
cmpb
aaa
jbe
cmp
jg
fcomip
mov
aad
jno
fcmovbe
test
in
in
sbb
or
sub
aad
dec
dec
adcb
inc
cmp
jmp
hlt
xor
jg
pop
popa
mov
lds
or
jg
inc
xor
add
xchg
xchg
pop
test
push
iret
arpl
outsl
out
mov
pop
pop
bound
xchg
push
xchg
mov
dec
inc
jnp
xlat
xor
jmp
push
das
lds
pop
pop
negl
or
jmp
xor
gs
pop
jne
test
lods
ret
inc
mov
lret
mov
pop
adc
lcall
aad
lret
sbb
adc
sti
lea
subl
mov
daa
cmp
lods
push
sahf
jmp
xchg
add
out
mov
pushl
pop
repz
fs
lea
pop
rclb
jnp
mov
mov
gs
jb
mov
incl
out
cmpl
xchg
out
push
or
loope
ljmp
leave
pop
rclb
popf
es
push
fwait
aad
jmp
add
cli
or
aas
push
jmp
pop
cmpsl
dec
push
mov
insl
or
lret
jo
mov
aaa
cld
fisttps
and
xor
mov
jecxz
xlat
push
jmp
in
pop
xchg
je
scas
lods
push
negb
lcall
and
jg
pop
and
add
or
cltd
sbb
mov
pop
subl
decl
mov
push
mov
lcall
imul
adc
mov
icebp
incl
jno
cmp
inc
and
push
or
push
cld
in
in
outsl
cli
int
sbb
sbb
in
push
out
inc
lret
jl
incl
jge
sbb
xchg
popf
in
pop
gs
mov
push
testl
push
shr
push
pushf
cmpsl
pop
xor
ja
xchg
inc
cmp
decl
hlt
xchg
jge
jp
inc
or
push
imull
sbb
mov
pushl
jmp
nop
in
mov
jnp
dec
clc
mov
mov
lods
add
xchg
outsb
dec
inc
faddl
out
call
pop
sub
es
push
dec
mov
mov
call
pop
mov
gs
inc
sub
loope
sbbb
cmp
clc
jecxz
ljmp
and
mov
pushl
sbb
fisubl
sub
add
xchg
das
rclb
in
dec
jns
mov
lcall
sbb
loope
pop
sarl
outsb
adc
mov
mov
out
push
incl
cmp
fwait
lcall
lret
mov
loop
and
and
incl
addr16
mov
fisttpll
lcall
jg
mov
cwtl
stc
stos
imul
pop
hlt
iret
adc
push
mov
into
push
stos
mov
pushf
cld
inc
arpl
xchg
jmp
fcompl
add
rclb
incl
mov
push
or
adc
mov
cld
jbe
test
ja
add
sti
inc
shl
aad
inc
sbb
arpl
mov
xchg
jb
xchg
lcall
lods
cmp
scas
sbb
and
xor
sbb
call
rcll
adc
fldcw
testb
add
mov
sar
call
lock
push
push
in
pop
xor
mov
fistps
outsl
jb
push
mov
or
mov
sub
xor
fbstp
pushl
pop
mov
dec
popf
sub
sahf
in
outsl
int3
sbb
mov
adc
jb
adc
jmp
adc
roll
dec
pop
mov
dec
and
cmp
clc
addr16
lock
mov
mov
std
les
ljmp
jge
icebp
icebp
xchg
mov
ror
jmp
test
xor
addb
inc
mov
pop
and
sub
lcall
popa
sub
inc
nop
xor
loope
lcall
repz
iret
mov
jl
loope
fwait
mov
cs
push
ret
or
les
ss
inc
add
fldl
push
inc
push
fisubl
inc
test
aad
or
sub
ljmp
jg
jmp
jmp
cmp
imul
push
push
std
add
lcall
push
divb
lea
rol
int
xchg
packuswb
sub
fwait
outsl
dec
insb
sub
mov
jg
inc
xlat
bound
mov
mov
pop
lahf
jle
pop
cmpsl
es
ja
push
jmp
pop
lcall
cmp
inc
leave
mov
pop
adc
in
jmp
jmp
xchg
roll
and
lcall
mov
or
repnz
lcall
xor
out
bnd
push
lahf
mov
ljmp
xchg
aam
fs
icebp
inc
daa
adc
inc
xchg
jmp
int3
decl
scas
sbb
cltd
jge
or
pop
or
push
jb
adc
mov
cli
lcall
pusha
jne
dec
add
lcall
incl
fisttps
adc
jne
inc
jo
pushf
inc
cmp
into
loopne
out
in
push
popa
push
pop
add
test
js
js
divl
push
test
xorl
das
shrb
inc
xchg
std
fsub
pop
jl
js
xchg
mov
lcall
aam
xchg
aaa
ret
cmp
xchg
shll
adc
dec
jecxz
rcll
mov
je
ret
push
jl
bound
mov
leave
mov
or
xchg
push
jle
push
movsb
pop
lods
cmp
sbb
in
and
xor
lahf
stos
shlb
cmpsb
fstpl
mov
cmp
sar
incl
xor
jb
cmp
jecxz
inc
jp
ds
lea
outsb
arpl
clc
stos
add
mov
decl
mov
out
mov
cmp
and
pushl
sti
clc
shl
push
mov
mov
ljmp
mov
jno
cmpsl
incl
sbb
xchg
sahf
push
or
sub
dec
out
jo
jg
ljmp
inc
pop
mov
cmpsb
cli
and
inc
cs
jg
sbb
stos
jle
sbb
mov
dec
jmp
das
push
mov
popa
pusha
scas
push
icebp
mov
call
loopne
rcll
and
pop
in
cld
lea
adc
xor
push
daa
sbb
inc
pop
cld
call
mov
pushf
jnp
pop
xchg
and
push
mov
bound
mov
in
jg
sbb
sahf
push
fdivr
mov
fsts
je
jne
cwtl
lcall
add
lahf
push
sub
daa
stc
cli
pushf
mov
mov
lcall
push
cmpb
ss
or
add
push
mov
mov
xor
mov
cwtl
pop
pop
imul
in
mov
sar
lock
test
pop
sub
ret
cmp
pushf
jmp
popa
int
xlat
pop
dec
jmp
pop
xchg
cwtl
daa
sti
inc
cmp
bound
mov
push
dec
in
lcall
inc
add
insb
loop
fsubrs
xor
mov
dec
inc
push
fiadds
add
jmp
div
nop
cld
push
scas
mov
data16
rcl
ljmp
sbb
aaa
pop
cld
int
movsb
and
gs
xor
aaa
ret
stos
jne
ljmp
xor
inc
shlb
imul
sbb
loop
incl
inc
in
sbb
stc
mov
pop
cltd
cmp
cmp
incl
cmp
lea
int3
lahf
sbb
dec
daa
mov
mov
mov
push
fwait
push
pop
inc
stos
pop
mov
add
fisttpll
mov
testb
repnz
ss
arpl
fwait
sub
fcmovnbe
lods
enter
xchg
or
jg
inc
inc
pop
cwtl
cmp
push
addr16
xor
xor
pop
testb
mov
ret
int
mov
jl
mov
test
clc
jg
push
adc
ljmp
rcll
movsl
mov
mov
les
push
adc
and
movsb
cmp
call
inc
sub
inc
inc
sbb
cld
fwait
pop
int3
loope
fs
dec
mov
pushl
nop
mov
pushl
mov
lahf
mov
stos
mov
ljmp
rcrb
or
pop
add
ret
xor
incl
mov
rolb
push
pop
imul
incl
loopne
pop
sub
add
ljmp
mov
and
lahf
in
icebp
jge
lock
decl
cmp
sarb
xor
popf
sbb
rorb
add
ret
jmp
leave
dec
cltd
xor
idivb
and
test
lcall
push
pop
stos
mov
add
ds
push
loopne
adc
jmp
test
adc
nopl
or
cmp
jg
xor
cwtl
xchg
jne
sub
aaa
subl
test
cltd
inc
mov
je
clc
lret
sbb
cmp
mov
hlt
cmp
mov
mov
pop
push
adc
cmp
mov
inc
adc
sbb
fcom
fidivrs
inc
insb
test
out
ljmp
mov
js
push
outsb
sub
sub
mov
xchg
dec
outsb
pop
stos
call
inc
inc
out
push
add
orl
pop
lock
xor
cli
jg
xor
cli
inc
dec
xor
mov
imul
inc
mov
xchg
jmp
fstl
adc
dec
mov
in
cmc
iret
scas
clc
sbb
shrl
sbb
ss
push
mov
decl
ficomps
repz
mov
popf
xor
add
xchg
pop
ljmp
xchg
pop
pushf
pop
mov
sbb
pop
adc
loop
lods
incl
inc
insl
xor
dec
lock
jae
add
and
adc
and
dec
aas
ja
cmp
call
repz
jg
insb
dec
adc
repnz
mov
outsb
sbb
mov
fbstp
jecxz
call
mov
pop
push
push
in
jno
orl
ljmp
fwait
lods
aam
mov
dec
fcomp
ret
mov
iret
int
cmpsb
adcl
add
clc
imul
dec
jg
add
out
xor
inc
cmp
popf
mov
xchg
test
aam
ja
mov
stc
in
scas
lret
sub
mov
jns
fwait
stos
call
mov
iret
cmp
mov
stos
dec
xchg
xchg
pop
test
dec
loop
pushl
outsb
popa
mov
popf
and
out
mov
adc
out
add
jmp
loopne
xor
fnclex
rcr
pop
dec
subb
xchg
fildl
decb
lahf
push
fildl
sahf
pop
outsl
out
dec
xor
xchg
sbbl
aad
incb
mov
ja
incl
pop
xchg
fwait
shrb
xchg
aas
pop
iret
sbb
sbb
jmp
mov
pop
xor
sbb
add
out
xor
push
rcll
jae
xlat
iret
hlt
mov
stc
repnz
call
dec
rclb
pop
xchg
mov
jg
outsl
jl
sti
mov
pusha
mov
ss
lcall
jne
daa
inc
add
xchg
out
dec
push
mov
iret
mov
inc
cmp
out
ljmp
lret
daa
jmp
pushl
int
cmp
xchg
test
jp
loop
mov
push
sub
push
imull
test
xor
xchg
outsl
xlat
push
cmc
cmpsb
js
pop
mov
hlt
call
dec
push
insb
icebp
mov
inc
inc
mov
jmp
pop
sub
icebp
aas
xor
lcall
movsl
pushf
jl
push
push
es
cs
test
sti
jo
adc
inc
push
adc
lcall
push
adc
mov
outsl
jns
mov
test
xor
mov
jmp
jecxz
arpl
xchg
mov
and
push
inc
jno
sbb
decl
dec
sbb
dec
jp
ds
call
mov
push
int3
fs
out
xchg
iret
roll
jecxz
jge
jecxz
fwait
ja
jge
dec
lods
xchg
ror
sbbb
popf
clc
or
sbb
out
add
idivl
jg
shrb
cmpsb
out
pusha
into
clc
xor
fisubl
pop
add
xor
cmp
dec
mov
lret
mov
inc
or
jnp
dec
std
or
lcall
iret
incl
cmpsb
call
loopne
jbe
cmp
jb
lea
cmpsb
incl
adc
pop
jmp
or
jnp
and
push
icebp
mov
frstpm(287
mov
xor
push
xchg
cmc
pop
inc
pop
cmp
jne
orl
add
mov
push
mov
dec
and
rorl
mov
negb
scas
out
pop
addr16
sbb
or
vmread
fildl
movsb
mov
inc
addb
sbb
and
or
or
decl
movsl
mov
cltd
push
ss
inc
ds
es
cltd
adc
add
idivb
shrl
jb
jo
arpl
imul
decl
scas
xor
sbb
jg
push
mov
jmp
xchg
das
mov
cmpsl
adc
sbb
call
xorb
cmp
sti
sti
push
icebp
jo
popa
pop
adc
xchg
mov
sub
lcall
ljmp
ljmp
cs
cmp
cld
repz
arpl
imul
insb
dec
call
decl
sbb
sbb
pushf
aad
pop
sub
aaa
in
push
mov
adc
dec
mov
jns
fbld
xchg
adc
sub
add
loop
add
pop
repnz
inc
or
out
aas
cmp
push
incl
scas
loop
inc
es
jb
inc
dec
insb
ret
sbb
fcmovb
ret
cmp
es
ss
gs
or
dec
push
xchg
and
roll
mov
xchg
sub
or
jg
sahf
test
out
mov
subl
stos
mov
imul
jb,pt
andl
cmpsl
cli
or
out
ret
outsb
mov
and
mov
add
ljmp
loopne
mov
loop
mov
sub
aas
std
push
lock
scas
jge
xor
push
call
cmp
std
das
lods
jns
mov
out
mov
xor
call
stos
sub
jle
pop
mov
push
sbb
jg
clc
mov
mov
mov
dec
dec
call
rolb
test
sarb
rcrb
push
cld
inc
cs
cld
xor
daa
mov
cmp
xchg
adc
push
pop
clc
mov
repnz
add
or
ljmp
call
shlb
jg
sub
add
push
mov
cmp
or
loope
mov
std
lret
movsb
out
insl
pop
mov
pop
and
mov
movsb
pushf
mov
xor
and
sub
je
and
lds
call
pop
or
cmp
pop
add
out
jmp
cwtl
dec
cmp
jl
push
das
inc
addb
into
andb
ljmp
jmp
push
shlb
sub
push
xor
inc
xchg
jg
pop
cmp
repz
pop
push
rolb
sub
incl
xchg
call
cli
lods
cmpl
out
push
cmp
fmull
in
in
cmp
imul
push
andb
ss
push
cmp
decl
inc
ret
lret
xchg
xchg
add
jecxz
gs
inc
lods
inc
pop
mov
xchg
imul
sub
sti
out
test
gs
insb
and
stos
fisttpl
sbb
mov
loopne
jmp
or
pop
les
mov
sub
fstps
xchg
pop
subb
mov
ljmp
xchg
pop
sbb
cmp
outsb
lods
clc
or
dec
xchg
incl
push
mov
imul
sbb
add
jnp
aam
lock
pop
repz
aas
xchg
push
add
dec
jmp
mov
jge
and
mov
sti
shll
js
sahf
loop
sahf
clc
loopne
outsl
loop
jle
cmp
mov
lcall
scas
fsubrl
pop
or
ds
jb
cmc
add
ljmp
testb
xor
mov
mov
push
inc
jmp
and
mov
cmp
repnz
es
clc
call
jns
js
pop
xchg
jle
adc
inc
jo
cmp
fwait
les
cmp
or
inc
stc
mov
nop
dec
add
push
lcall
fwait
sbb
test
and
xor
pusha
mov
hlt
or
fdivl
mov
cld
call
repz
inc
pop
movsb
mov
mov
fs
test
mov
call
or
adc
mov
push
add
sub
idivb
call
add
inc
in
bound
and
adc
mov
mov
jecxz
adcb
insl
xchg
sbb
call
mov
push
cs
adc
mov
andb
lahf
adc
push
dec
jno
pop
lcall
cld
cmpsb
mov
clc
or
pop
pop
push
fildll
push
push
mov
mov
dec
in
mov
lods
arpl
jmp
test
jb
inc
mov
xor
jb
addr16
popa
push
or
rclb
dec
mov
push
sbb
ja
stc
xor
aas
cmp
pop
dec
mov
ljmp
lahf
cmpsb
xlat
jo
xchg
pop
ja
sub
movsl
icebp
les
jnp
movsb
jg
mov
cmc
and
adc
insl
int3
sbb
inc
call
fcomps
movsb
stc
in
stc
mov
sahf
je
dec
roll
cmp
add
add
call
ds
js
or
fwait
dec
xchg
mov
sub
imul
fcoml
js
adc
inc
lahf
xor
mov
jg
adc
inc
cmpsl
xorb
sub
mov
xor
and
call
sub
lahf
rolb
dec
mov
pop
ds
dec
cs
jge
jle
cs
scas
mov
pop
aas
repz
or
test
mov
fldenv
call
fxch
push
sbb
in
rcl
repnz
mov
ljmp
cmpsl
andl
lods
test
inc
lret
outsl
test
lcall
mov
inc
mov
fisttpll
jp
mov
rorl
arpl
outsb
js
sbb
fldt
lock
xchg
repnz
cmpsl
xchg
dec
sbb
jl
mov
aas
xchg
loop
mov
loopne
ljmp
movl
or
scas
mov
sub
jae
out
mov
movsl
sbb
pop
xor
sub
mov
out
push
pop
cmp
ljmp
mov
sbb
xchg
aas
pop
fstpt
out
lock
lds
dec
mov
addr16
sarl
cmpsb
popf
ja
mov
mov
cli
imul
jl
incl
adc
gs
in
adc
ja
pop
cs
mov
push
aam
sbb
cmp
cltd
pushl
inc
outsl
stc
dec
out
cmpsb
or
out
pushf
sub
sub
mov
daa
jns
mov
and
and
and
cmpsb
push
xchg
add
dec
or
jg
gs
lcall
es
xchg
ss
aas
bnd
pshuflw
lods
jne
cmp
adc
or
xor
enter
mov
or
dec
je
cwtl
pop
gs
cmp
fcomip
add
cs
outsb
sti
sub
in
cmp
jg
sbb
jge
bound
or
or
out
inc
mov
or
inc
ret
xchg
clc
outsb
loopne
loopne
jg
dec
std
jecxz
fidivrl
add
out
jge
lahf
add
ljmp
adc
rcr
push
inc
inc
div
adc
nop
cmp
repz
add
fwait
xor
enter
mov
movsl
clc
decl
jae
mov
ret
cmp
in
xlat
lcall
push
sahf
fldcw
push
jbe
movsb
and
outsb
mov
jg
out
test
cmp
xchg
bound
test
lret
cld
das
cmpsb
into
mov
scas
aas
xchg
inc
dec
push
int
lcall
fsts
mov
lcall
add
sbb
sbb
dec
lods
pop
xchg
je
lock
jg
call
andl
mov
push
lcall
sub
lret
adc
out
lea
stos
mov
test
movsl
les
jg
pushf
dec
sbb
ret
mov
xchg
lret
push
in
mov
adc
lcall
fadds
mov
push
or
dec
push
xor
pop
xchg
das
lea
lcall
jno
cmp
mov
mov
jns
xchg
aas
int
or
outsl
mov
cmp
test
shr
into
jnp
pop
jmp
fimull
sti
movsb
aas
or
sbb
mov
and
add
sbb
scas
cs
xchg
sbb
subb
mov
orl
mov
mov
fsubs
inc
sub
add
mov
push
notl
jle
ljmp
fdivs
popa
sbb
loop
subb
in
ret
inc
mov
or
or
popa
jmp
imul
lds
idivb
sub
jo
int3
jmp
sbb
incl
add
inc
mov
xchg
pop
imul
sbb
je
sbb
cmpsl
mov
insl
adc
ds
inc
jmp
mov
ficoml
out
sbb
fisubrl
into
data16
and
out
cld
mov
repz
shll
int3
and
xchg
sub
jg
imul
push
pusha
jns
cmp
and
mov
jmp
jae
push
adcl
call
pop
pop
add
xchg
pusha
outsl
sarb
lcall
push
addr16
sub
mov
jne
subb
aas
rol
out
ljmp
sub
out
fiaddl
stos
dec
dec
cmc
fdiv
cmpsb
push
out
dec
or
cmp
outsl
push
dec
outsb
cmp
icebp
popf
xchg
mov
pop
daa
mov
mov
pop
sub
cs
sahf
cmp
xor
inc
inc
cmpsl
repz
fildl
js
or
mov
hlt
inc
imul
aad
lock
fldl
mov
inc
push
jge
fwait
jmp
aaa
dec
shrl
les
jge
xor
jg
test
fs
adc
das
aam
jle
sub
and
sqrtps
push
popl
xchg
dec
aas
mov
cmp
sti
mov
test
mov
js
jp
mov
cmp
push
jae
addl
repnz
lcall
mov
add
mov
pop
dec
xor
pop
lahf
xor
inc
add
push
icebp
push
imul
or
xchg
or
mov
inc
pop
int
mov
push
dec
and
scas
mov
flds
iret
push
mov
xlat
push
push
int
jo
inc
popa
cmp
imul
loopne
push
sbb
sysenter
sub
mov
ljmp
repnz
iret
xchg
inc
nop
lcall
mov
pop
adc
aaa
shrb
lock
loopne
lods
push
jb
lret
fcmovb
sarl
cli
pop
aaa
clc
or
std
hlt
inc
cmc
mov
xor
out
cmp
incl
cmp
icebp
nop
lods
scas
push
jb
sub
ret
ficompl
mov
out
js
cmc
pop
je
inc
out
cmp
and
insl
roll
lock
sub
cld
pushl
cmpsb
mov
fidivrs
js
roll
push
movsl
repz
xchg
dec
leave
mov
sar
lcall
lcall
cmc
in
lret
andb
adc
out
mov
addr16
jmp
scas
pop
xchg
sbb
scas
pusha
xchg
jae
mov
jg
les
mov
mov
sbb
lock
xor
into
ljmp
mov
pop
shrb
cmc
fimull
jmp
adc
add
dec
inc
inc
dec
rcll
repz
lds
sbb
sarl
mov
out
and
sbb
into
imul
mov
jmp
mov
sbb
mov
int
or
and
cs
lods
pop
inc
mov
jae
or
insl
loop
rcr
mov
mov
sub
rcr
cmc
mov
sti
add
repnz
add
bound
repz
lcall
loope
cs
adc
and
inc
jl
dec
jge
push
pushf
push
pushf
inc
cmp
cmp
jo
or
jmp
push
sarl
sarb
push
decl
add
dec
sbb
fsubrp
mov
fistps
orl
fldcw
jge
outsb
clc
in
mov
leave
and
pushl
pop
inc
mov
psubb
xchg
xchg
jnp
repz
and
add
daa
sbb
push
cld
xchg
push
sbb
fimuls
cmc
incl
push
lds
shrb
dec
fidivrs
or
cmpsb
call
xor
mov
push
inc
hlt
movsb
jmp
inc
jns
mov
pop
orl
call
push
out
sub
loope
cmp
cwtl
outsb
outsl
fbstp
fcomps
jae
mov
insl
test
cmc
push
sub
sub
mov
jmp
jg
and
pop
inc
test
cmp
xchg
push
loopne
mov
jg
add
in
adc
or
mov
repnz
arpl
push
add
jg
and
ss
out
insb
mov
sbb
xchg
sbb
aas
loope
or
push
sbb
call
in
xlat
xor
icebp
decl
push
jp
inc
aaa
adc
es
lods
lods
pop
or
and
das
inc
enter
rcll
dec
xchg
cmpsl
or
mov
fbstp
in
test
gs
jmp
pop
popf
push
cmpsb
cmpsb
add
cmpb
pop
lcall
mov
cmp
cld
hlt
int
aad
jne
mov
cld
fdivl
mov
imull
jnp
cs
shlb
pop
push
push
and
call
into
aad
push
xor
mov
je
loopne
xchg
inc
outsl
mov
adc
add
test
movsb
adc
out
mov
or
sbb
pop
and
mov
into
lahf
scas
je
push
addl
ljmp
aad
push
iret
adc
test
das
adcb
loope
test
or
hlt
decl
pop
push
repnz
inc
jbe
leave
mov
jmp
mov
cmp
cmp
in
outsl
sbb
cmpb
shrl
popf
xchg
mov
xchg
dec
popa
dec
and
sub
push
xchg
xchg
mov
movsl
stc
rclb
cld
push
js
xchg
jnp
cmp
out
out
cmpl
rolb
pop
lea
hlt
les
xor
jb
outsl
jb
xchg
cltd
iret
data16
mov
decl
scas
mov
lret
jb
movsb
imul
jle
icebp
push
xor
in
ja
fcoms
je
dec
out
mov
pop
dec
pop
xlat
sbb
in
jb
mov
dec
xchg
sub
stos
stc
pop
push
fildll
xorb
mov
repnz
adc
lret
push
imulb
xchg
jbe
xor
and
or
cltd
xor
call
adc
lret
xchg
mov
test
js
push
lret
nop
icebp
int
xlat
fwait
sbbl
cld
and
jne
inc
mov
sub
ja
inc
lds
int3
ljmp
ljmp
push
fsts
scas
dec
push
xchg
xor
push
cs
push
lret
mov
push
cwtl
xchg
pushl
shlb
push
inc
test
psadbw
jg
lods
jnp
adc
int
or
mov
lea
jmp
je
adc
add
cmp
pop
sbbl
sti
mov
ljmp
adc
and
stos
push
out
fs
xor
push
lods
mov
out
sub
leave
push
cmp
jne
pop
jecxz
dec
push
cmpsl
outsb
movsl
xchg
and
push
sub
or
cwtl
adc
and
pop
imul
push
jecxz
fsubl
pop
repnz
jp
and
adc
in
mov
inc
push
cmp
cmc
pushl
push
imul
push
and
or
push
mov
add
fildll
jmp
aaa
mov
repnz
fisttps
popf
fmuls
jg
test
inc
mov
cmp
jmp
mov
sub
xchg
popa
std
lret
push
jbe
cmp
lret
inc
aad
sbbb
inc
mov
xor
mov
test
mov
lcall
ja
inc
icebp
xor
mov
mov
stc
and
sbb
xchg
mov
addr16
and
rorl
xchg
inc
inc
rcll
std
decl
sbbl
xor
add
push
aam
pxor
inc
xchg
punpckhdq
sbb
adc
stos
inc
repnz
jae
dec
popf
cld
adc
mov
dec
sbb
loopne
stos
adc
es
outsl
mov
xchg
adc
call
fs
std
mov
dec
pushf
das
adc
and
jg
lods
ljmp
push
lahf
fisttpll
nop
pop
or
enter
lods
push
sar
lcall
imul
cmp
xchg
add
mov
popa
mov
movsb
call
push
jns
in
inc
shlb
and
mov
jo
pusha
and
ds
mov
dec
push
lret
cli
mov
pop
dec
pop
std
out
ror
stos
push
and
mov
popa
sbb
lcall
jmp
ljmp
jns
fisttps
and
mov
and
pusha
pop
cmpsb
jp
iret
add
aas
dec
dec
scas
add
pop
pushf
jb
add
push
inc
fstpt
lcall
incl
add
popf
stos
cs
jmp
xchg
jg
ss
filds
test
inc
inc
jp
or
add
testb
jmp
push
imul
adc
js
pop
and
test
mov
aas
add
cmp
cli
pushl
xchg
ss
sub
jp
dec
aaa
std
pop
cmpb
in
cld
jnp
mov
pop
mov
mov
popa
xor
enter
mov
mov
pushl
fstl
sbb
and
out
xlat
sub
jmp
mov
mov
mov
loopne
push
mov
pop
jmp
enter
mov
xchg
fsubrs
push
push
add
ljmp
inc
je
mov
jae
cmp
xor
outsl
clc
fidivrs
test
adc
sarl
lcall
xor
mov
push
push
jle
hlt
outsb
add
xchg
ret
xor
or
jmp
sbb
leave
int
push
xlat
icebp
and
sbb
inc
mov
adc
std
decl
hlt
repz
mov
mov
outsb
jmp
rol
bound
mov
fcmovu
xchg
sbb
loope
repnz
jp
fldt
pop
adc
jmp
clc
or
mov
stos
test
mov
cmp
xchg
jae
lahf
sbb
xor
cmp
js
push
imul
dec
adc
mov
lods
jmp
push
mov
inc
js
test
movsl
cmpsb
xchg
jno
movsl
jns
jne
bound
xchg
push
xchg
dec
repz
fistpll
jbe
mov
call
std
jecxz
xor
pop
dec
scas
movsb
cltd
hlt
lds
sbb
enter
repz
sbb
sub
repnz
es
movsb
sub
arpl
inc
mov
adc
outsb
lods
cmpb
mov
std
decl
dec
mov
xor
imul
add
fcmovu
nop
jmp
xchg
loopne
and
pop
add
push
push
aam
sbb
insl
mov
inc
shlb
lret
add
cli
decl
mov
and
enter
ds
adc
shrl
popa
pop
fwait
pushl
in
cli
pop
leave
lock
pop
xchg
push
outsb
jne
jae
ret
outsl
xor
std
rcr
in
pusha
mov
jg
lea
push
in
dec
iret
dec
sar
adc
inc
call
xor
arpl
cmp
and
add
lcall
mov
out
and
pop
xor
sub
js
scas
xchg
sub
je
ret
pop
sarb
jmp
push
jp
mov
push
rorl
out
mov
sub
scas
cli
or
ja
jmp
mov
and
mov
repnz
xor
cmp
jae
xchg
mov
xchg
mov
push
fsubrl
faddl
cs
and
clc
incl
mov
sbb
jo
inc
mov
adc
add
ljmp
loopne
push
or
js
sbb
adc
jbe
pusha
mov
loop
incl
jmp
fdivl
sbb
inc
addr16
or
mov
cmp
insb
cmp
fcomip
fmull
add
push
int3
cli
imul
add
mov
mov
mov
decl
adc
sbb
mov
movsb
dec
sbb
adc
jno
push
enter
pop
imul
fnstcw
mov
into
add
ret
call
sti
sub
inc
mov
xchg
outsl
dec
bound
add
test
das
clc
or
pop
movsb
sub
js
arpl
clc
call
push
out
cmc
xor
ljmp
push
cli
mov
dec
lock
mov
mov
popf
adc
mov
inc
sub
loope
add
call
fwait
out
out
dec
scas
in
out
ljmp
decl
test
xor
push
xchg
jns
loopne
rorb
jb
add
xor
into
pop
out
ret
call
and
mov
inc
repz
pusha
hlt
xchg
test
lods
inc
bound
sahf
sub
rcl
jmp
out
lds
adc
mov
push
sub
sbb
fdiv
pop
xor
dec
ss
call
or
add
push
sbb
mov
cmpsl
fidivrl
out
cmpsb
push
adc
mov
call
das
and
sbb
fs
inc
adc
imul
and
add
mov
mov
les
ret
or
xor
cli
push
push
pushl
xchg
and
mov
mov
das
rcrb
rcrb
stos
mov
out
cmp
in
bound
nop
and
push
les
mull
movsb
pop
jge
insl
cltd
cmc
push
push
ret
cmp
ss
stos
push
fwait
adc
mov
xchg
mov
and
jp
pushf
es
ljmp
push
insl
addr16
out
and
sti
das
pushf
or
xchg
lds
dec
lock
mov
mov
lcall
cs
in
pop
jb
clc
in
push
lcall
jg
sbbl
mov
ret
add
idivb
jge
stc
gs
jae
pushl
pop
xchg
or
sbb
jle
mov
imul
inc
sub
decl
add
data16
xchg
and
pop
fcos
add
sbb
lcall
push
icebp
fmulp
je
jecxz
sub
loope
xor
in
outsb
call
sbb
ljmp
repz
hlt
aaa
push
xor
insl
int3
arpl
lds
mov
mov
mov
in
or
mov
shl
insb
std
inc
mov
dec
cmp
pop
icebp
incl
pop
push
cmpsl
sbb
insl
sbb
jge
cmp
in
pop
jle
mov
fisttps
mov
nop
adc
test
leave
push
test
dec
jmp
inc
sar
xchg
jl
std
xchg
shr
cmp
movsb
adc
call
ret
in
and
mov
xorb
xchg
and
das
push
jns
pusha
xchg
fwait
push
cmp
daa
pop
imul
dec
fs
mov
decl
cmpsl
xchg
je
xchg
cltd
jle
dec
lcall
fimuls
dec
out
hlt
inc
in
into
stos
das
push
mov
out
jmp
aaa
clc
inc
or
xchg
in
jne
push
sub
xchg
inc
push
faddl
mov
test
add
insl
pop
mov
push
test
not
mov
pop
jg
jmp
adc
xchg
nop
add
sbb
sahf
clc
shlb
mov
inc
cwtl
lahf
ljmp
and
movsl
lret
fnstenv
in
mov
call
sub
push
into
shrl
sbb
dec
es
lcall
dec
jle
adc
pusha
repnz
mov
mov
adc
fst
adc
jbe
sahf
stos
in
jecxz
mov
ja
and
lcall
mov
sti
pop
fcomip
fdivs
sbb
and
hlt
push
scas
call
pop
decl
scas
call
mov
inc
shll
xor
xor
dec
inc
jmp
or
cwtl
pop
ljmp
test
cmp
and
fimull
jle
xor
jl
mov
pop
loop
call
inc
jno
add
xchg
mov
xor
jg
xchg
push
inc
incl
adc
push
mov
sti
loopne
pop
pushf
cli
mov
xchg
fisttps
add
ds
jb
cs
movsb
das
cmp
mov
or
incl
cld
aaa
mov
ret
fbstp
ljmp
sub
incl
push
inc
cmp
repnz
pop
stos
subps
test
xchg
xchg
daa
imul
pop
cmpsb
ljmp
mov
add
fidivs
lcall
xor
pop
xorl
mov
add
call
mov
add
addr16
fistl
and
cmp
insb
jl
pop
test
mov
mov
push
mov
push
or
mov
pop
popf
jmp
in
pop
subb
cmp
call
mov
adc
mov
imul
call
iret
out
jae
or
repz
pop
sbb
orl
cwtl
inc
xor
mov
fs
jmp
xchg
cmp
pushf
push
sub
lcall
or
std
aam
divb
movsl
jg
mov
mov
hlt
sbb
aaa
cmpl
decl
lock
and
push
jnp
mov
enter
ret
xchg
adc
pushl
push
gs
int3
jp
push
push
xor
pop
push
into
unpckhps
popa
jge
mov
mov
jle
inc
push
push
mov
sti
imul
sub
dec
rclb
or
jmp
lret
and
stos
nop
mov
lcall
lods
ds
in
mov
jb
mov
xchg
lock
test
push
mov
and
adc
mov
xor
sti
sub
jbe
mov
lcall
ficomps
lcall
cmp
xchg
hlt
cli
lcall
cwtl
and
aas
xchg
pop
and
add
push
inc
fdivrp
rcll
jecxz
jo
adc
stc
mov
pop
subb
sbb
pop
data16
sbb
jno
jmp
cli
ljmp
sub
add
push
cmp
ret
mov
andl
mov
sti
leave
daa
mov
push
pop
push
adc
push
cmpsb
fstl
stc
sbb
imul
pop
loop
les
jge
add
jo
mov
shll
aas
stos
sub
cmp
test
pop
push
mov
dec
jno,pn
js
rolb
sub
testb
lcall
test
adc
scas
fcompl
loop
pop
rcl
jg
jmp
or
lret
scas
jg
or
sbb
pop
xchg
sar
jmp
xchg
insb
push
hlt
jne
mov
sbb
dec
popf
stos
cmpsb
out
or
icebp
jl
jnp
dec
pop
push
pop
das
ljmp
leave
xor
pop
icebp
ljmp
or
inc
movsb
mov
icebp
jle
dec
call
pushl
pop
mov
mov
dec
and
jmp
nop
aas
and
mov
mov
decl
lods
jl
mov
arpl
lret
in
lcall
int
mov
inc
ror
push
add
std
and
adc
sti
sbb
out
sub
adc
movsl
cmp
push
lret
repnz
sub
lcall
dec
push
or
cmp
inc
stos
sbb
cmp
jae
js
mov
cld
and
cmp
outsl
aas
adc
push
pushl
mov
imulb
lds
icebp
mov
mov
push
enter
mov
xlat
pop
or
call
popa
negb
insb
insb
dec
call
push
mov
cmp
xor
rorl
rcll
fisttps
aas
mov
push
call
call
jno
mov
mov
sbb
adc
lahf
mov
mov
es
pop
mov
xchg
subb
mov
cltd
je
jg
dec
data16
push
fsubr
insl
daa
or
pop
or
push
mov
loope
jmp
cld
or
pop
or
in
rcrb
nop
pop
xchg
jg
push
lods
or
adc
clc
adc
add
rolb
cmp
jb
icebp
cwtl
imul
call
xchg
adc
cmc
test
cmp
adc
xor
pop
sbb
sar
call
aas
lds
jno
fcmovu
xor
push
add
and
pop
xchg
inc
push
decl
aaa
hlt
jno
push
aad
notl
pop
jae
jg
add
dec
xor
icebp
lds
inc
and
mov
ljmp
jns
sub
int3
add
out
stos
stc
cmpsl
fs
fildll
idivl
test
lcall
aam
mov
xor
inc
imul
int
ljmp
mov
testb
dec
lock
mov
aaa
icebp
pop
insl
imul
cmp
mov
out
jne
jae
xorb
pop
push
inc
push
mov
test
out
movsb
inc
cs
inc
lret
dec
lcall
add
xchg
cmpsb
fsubr
mov
jmp
decl
insb
xchg
fwait
jecxz
jle
add
incl
push
out
xor
test
mov
cmp
inc
stc
jmp
fisttpll
fcoms
sti
mov
dec
pop
inc
outsl
xchg
jg
mov
sar
dec
dec
push
jo
rolb
push
test
push
ror
cltd
sbb
push
cmp
int
mov
jle
js
cmpsl
cmp
incl
shrb
pop
and
mov
sbb
in
mov
or
pop
cltd
incl
mov
cwtl
pop
xor
jp
arpl
mov
rclb
sbb
pop
mov
call
xor
xchg
repz
xchg
adc
mov
sbb
loope
dec
sarl
inc
or
sub
mov
xchg
jl
mov
fs
add
cmp
call
mov
adc
cmp
lea
ret
push
or
or
dec
push
dec
and
push
lea
imull
ficomps
or
pop
pop
rcl
sbb
in
push
loop
mov
adc
xor
orb
push
shl
inc
add
decl
das
xor
movsb
jnp
push
cld
lcall
adc
cld
pop
cmc
decl
insb
lds
movsb
lahf
jbe
push
pushf
mov
jge
dec
sub
in
mov
out
ds
sti
out
mov
addr16
ficoms
cmp
pop
adcl
cld
and
movb
ja
push
xchg
icebp
jg
mov
lcall
int3
outsb
gs
ret
xor
dec
inc
sub
dec
wbinvd
insb
cmp
jge
push
push
cmp
push
rcrb
jg
sti
in
or
dec
pushf
lea
pop
daa
repz
pop
cld
pushl
adc
daa
lahf
inc
adc
insb
xchg
es
jnp
mov
ljmp
loope
pop
loope
out
jns
sub
push
movsl
fs
pop
mov
inc
add
mov
mov
js
cmpsb
sbb
adc
adc
adc
sub
sar
cld
inc
inc
or
sbb
cld
popl
cmp
insb
orb
cwtl
fld1
xlat
cmp
cwtl
mov
jg
or
sahf
cmp
call
xor
sbb
inc
imull
lret
fs
imul
pop
jmp
es
adc
inc
jg
mov
sub
mov
cli
ret
adc
mov
inc
xor
stc
sbb
pop
sbb
and
inc
sub
cmp
arpl
std
sbb
adc
pop
stos
fbstp
popf
data16
cmp
jmp
lahf
xor
xchg
in
movsb
dec
movsl
jmp
and
push
scas
inc
std
jg
xchg
cs
and
xor
aad
mov
push
mov
out
imul
out
fadds
popl
xchg
mov
jmp
fsubrs
mov
rorb
in
lcall
stos
loop
xorb
cmp
xchg
add
and
sub
mov
stc
or
out
jbe
xchg
sub
out
xchg
loopne
fsub
les
je
ret
jno
inc
sar
decl
xchg
add
jg
mov
jge
stos
fiadds
xor
mov
pop
cli
sbbl
pushl
and
xor
aas
dec
pop
sub
lret
insl
and
inc
mov
add
int3
fcmovne
out
xchg
or
sbb
fmuls
cmp
orb
out
cmpsb
push
sub
xchg
or
fadds
mov
inc
xchg
iret
lahf
repnz
arpl
dec
sbb
push
push
xorb
mov
test
mov
lcall
xor
mov
loopne
sti
push
mov
xchg
data16
test
and
inc
cld
jmp
lods
mov
call
sub
add
add
xchg
xchg
movsl
sbb
inc
in
add
cld
inc
xor
mov
loopne
xchg
inc
and
push
adc
pop
lock
clc
stc
xor
sbb
cmp
mov
int
jbe
jle
cli
ljmp
cmp
ja
jmp
sbb
jle
subl
xchg
pop
out
dec
xor
inc
js
js
pop
movsl
ret
jp
out
lret
mov
mov
dec
jb
stc
iret
ret
sbb
jl
adc
fistps
jb
add
repnz
pushl
mov
cmpsl
repz
outsl
push
and
and
sbb
xchg
cmpsl
sti
mov
xchg
loopne
fs
sarb
adc
rcr
icebp
flds
scas
add
stos
mov
mov
push
call
jne
ljmp
sbb
nop
pop
mov
imul
mov
jg
jmp
int3
pop
iret
out
divb
arpl
mov
stc
mov
pop
and
push
fs
ljmp
sub
jp
mov
lcall
imul
mov
pop
push
or
jb
test
sahf
bnd
fcoms
lcall
shll
into
xor
pop
push
mov
or
jecxz
sub
insb
mov
fwait
sbb
or
sarb
addr16
add
es
pop
cmc
aaa
and
sahf
lcall
xchg
adc
icebp
jp
xlat
push
pop
mov
and
push
std
fisttpl
mov
cmp
xor
mov
add
jo
mov
incl
xchg
add
inc
lods
cmp
scas
mov
call
outsb
fistps
subl
scas
adc
pushl
sub
hlt
or
in
dec
faddp
and
sub
aad
aad
shl
sub
adc
clc
movsl
push
fs
mov
mov
jnp
stos
repz
pop
pop
pusha
or
dec
or
sub
xor
call
movsl
adc
xchg
dec
outsl
xor
push
xchg
cs
lcall
inc
sbb
push
cmp
fdivp
in
fldl2t
hlt
fwait
mov
cmc
ss
adc
push
std
mov
xor
imul
es
fdivs
js
mov
call
cli
movsb
sbb
cmp
loopne
or
mov
lahf
jnp
adc
mov
fdivrl
mov
repnz
pushl
push
pop
xchg
fsubrp
cmp
insl
mov
fcomp
rcll
push
cmpsl
shrl
jg
pop
lret
mov
mov
test
mov
jns
scas
es
call
nop
sbb
ja
xchg
cld
call
sbb
aad
or
dec
imul
adc
xor
dec
or
lret
pusha
popa
jmp
int3
mov
dec
pop
ret
or
add
popl
dec
mov
jo
outsl
cli
lcall
mov
clc
or
add
int
scas
imull
mov
dec
jmp
out
pushf
or
out
call
leave
add
push
xor
mov
or
movsl
pop
test
in
mov
nop
add
jae
std
das
add
mov
notl
xor
cwtl
arpl
popf
push
jecxz
mov
rcll
mov
mov
fsubr
rcll
jne
dec
cmp
popf
ret
mov
jno
push
int3
test
cmc
int
push
lods
push
cwtl
jmp
cmp
into
xchg
push
jge
cmpsb
adc
mov
imul
adc
ss
and
jnp
shll
dec
cmp
sahf
and
jmp
lock
cltd
push
daa
mov
mov
cmp
popa
mov
dec
cmpb
in
jae
jg
hlt
decl
xchg
hlt
es
fbstp
mov
mov
sbb
adc
incl
cld
mulb
pop
pop
add
out
pop
jae
adc
imul
rol
dec
adc
rolb
cwtl
test
and
inc
clc
ja
inc
aam
in
or
roll
jg
out
pushf
ljmp
shl
repnz
fcoms
shlb
inc
pop
bound
sbb
into
call
in
sub
inc
xchg
dec
ret
scas
mov
repz
cld
aaa
enter
push
pop
aad
int3
sbb
mov
inc
int3
inc
clc
sahf
or
xor
sub
mov
into
fldl
lock
imul
mov
xchg
xlat
ljmp
mov
movsl
repz
pop
mov
rcl
out
nop
lahf
stos
mov
shrb
mov
outsb
mov
xchg
jg
or
adc
cmp
nop
pop
xor
incb
popa
dec
lock
mov
imul
aaa
inc
or
mov
jg
add
xor
cmp
add
in
sbb
push
add
pushl
lods
push
aam
pushf
sub
mov
cmc
je
fdivp
sbb
mov
lds
inc
dec
dec
pushf
sub
aaa
xor
push
cmp
xor
cmp
cli
add
scas
cmpsl
shlb
mov
and
and
in
orl
pop
fcomps
out
mov
mov
dec
loope
ljmp
shll
jle
fst
sub
mov
sub
mov
mov
cli
cmp
mov
cmc
in
add
fsubs
decl
inc
dec
shrb
nop
mov
clc
test
fs
pushf
lods
jmp
xchg
call
lahf
mov
adc
push
dec
and
jnp
mov
jb
push
insb
scas
lds
jno
xor
scas
cld
fwait
mov
cltd
inc
xor
je,pn
sub
sar
call
dec
mov
jbe
dec
xor
fxam
jmp
inc
out
ficoml
cmpsb
sbb
test
mov
cltd
jg
outsb
jo
xchg
lds
dec
or
or
mov
nop
push
test
mov
rcrb
cmp
sbb
fistpll
ret
movsl
mov
fcoml
mov
aas
in
ja
pop
inc
test
xchg
jmp
inc
in
fsubrl
and
lahf
imul
adc
stos
fs
int
pop
mov
lcall
in
aam
pushf
mov
cmpb
call
fs
fs
cmp
pop
dec
daa
aaa
dec
xchg
mov
sti
adc
dec
ja
push
jle
stc
scas
mov
jo
mov
incl
rcrb
rorb
or
or
fsubrs
add
test
pushl
test
sbb
call
repz
ret
mov
scas
clc
jmp
ret
icebp
mov
dec
ds
pusha
bound
adc
add
jp
incl
and
fidivl
cmc
fiadds
xor
lahf
dec
stos
mov
sbb
or
das
and
hlt
test
or
lcall
or
sub
pushf
lcall
adc
pusha
lret
ss
mov
aaa
sti
lcall
xor
pushl
lretw
sub
xlat
xlat
sub
sarb
dec
xor
enter
push
mov
xor
fimull
jne
cmpsl
dec
and
pop
movl
add
cwtl
fwait
xchg
add
call
push
outsb
ljmp
mov
inc
mov
push
jg
xchg
sbb
xor
push
mov
jns,pt
jp
outsl
xor
lea
xchg
inc
stos
scas
mov
dec
loope
mov
call
mov
push
xchg
push
mov
jmp
data16
ja
mov
lret
inc
and
ljmp
add
incl
les
ret
jecxz
push
adc
jmp
subl
mov
xchg
sahf
imul
fisttps
test
stos
pop
jge
fldl
pop
pop
sbbb
pop
or
sahf
fidivl
xor
in
xor
and
adc
aas
push
in
ljmp
out
notl
insl
pusha
or
cs
and
repz
pop
ljmp
and
cmpsb
test
jbe
jle
decl
xchg
xor
jle
mov
inc
js
cs
incl
add
xchg
arpl
jmp
mov
ret
daa
es
incl
fs
jne
test
int
mov
dec
or
jns
mov
push
jb
jns
push
sbb
jmp
or
xchg
fldcw
clc
jg
pusha
or
and
testb
cltd
nop
into
fnsave
incl
adc
mov
repz
mov
adc
sbb
jle
jae
ljmp
sbb
push
xchg
pop
cmpsl
sub
and
cmpsb
inc
push
in
adc
xchg
pop
mov
imul
dec
or
pop
add
jmp
jb
in
pop
dec
mov
or
or
mov
add
push
mov
lret
popf
push
adcl
imul
mov
xchg
lcall
adc
and
pop
mov
jae
pop
inc
jmp
mov
inc
mov
add
std
fs
inc
inc
push
xlat
fwait
lahf
pop
insb
sub
jnp
xchg
xor
dec
aad
pop
xchg
push
sub
int3
in
jo
outsb
xchg
mov
xchg
sbb
push
or
push
mov
dec
call
mov
mov
jae
data16
cld
jle
adc
popf
int
in
popf
loop
xchg
push
pop
clc
lcall
jbe
or
sbb
jmp
xchg
fcompl
paddq
lea
std
fidivs
mov
call
cld
inc
cld
stos
lock
sbb
xor
dec
je
test
imul
cmc
stc
fmull
scas
movsb
sub
sbb
test
mov
in
push
testl
mov
mov
insl
pop
mov
jge
imul
jb
push
clc
inc
rclb
pusha
iret
inc
adc
out
js
sub
inc
fwait
or
inc
ret
bswap
lret
pushl
test
xor
xchg
repz
icebp
int
fisttps
dec
sub
in
into
or
or
push
mov
jb
pusha
mov
pop
adc
xchg
pop
inc
addr16
mov
cmp
out
test
xchg
mov
loopne
fs
pushf
ljmp
xor
xchg
outsl
out
dec
jp
movsb
xchg
or
stos
xor
xchg
ljmp
lret
call
and
jns
sti
das
push
cmp
hlt
lret
push
movsb
cmp
xor
data16
mov
divl
push
inc
push
pop
fsubp
cmc
sub
ljmp
test
xchg
sahf
mov
fmuls
inc
aaa
out
std
mov
cmp
fisubrl
bound
daa
xchg
pop
mov
into
sub
xor
test
mov
sbb
mov
test
movsl
shrl
into
pop
add
mov
ljmp
mov
push
test
sbb
rorl
mov
or
inc
cmp
pusha
mov
rol
inc
mov
cmp
decl
rcpps
xchg
dec
in
sbb
int
shll
mov
pop
scas
xchg
inc
fdivrs
call
shlb
mov
pushl
xor
push
mov
ret
xor
lods
sub
or
pop
xor
mov
test
pushf
sahf
lods
mov
pusha
call
test
xor
clc
leave
outsl
call
xor
ja
lcall
mov
mov
mov
sub
rorl
cmp
jne
xor
and
cmc
rcrb
repz
lcall
shll
add
sbb
andl
mov
mov
sub
ds
push
jae
sbb
mov
sar
cli
push
mov
mov
or
outsl
xchg
decl
stc
lret
jnp
pushl
pop
push
dec
jnp
negb
mul
mov
mov
push
or
inc
sub
call
pusha
cmp
call
cld
jp
push
mov
notl
cmp
ljmp
pushf
inc
mov
lock
daa
cltd
idivl
loope
lock
mov
cli
ljmp
and
lret
push
push
loope
lcall
jmp
test
jg
mov
addl
ljmp
sub
cmp
sahf
cmp
dec
mov
inc
out
mov
pushf
popf
mov
inc
sar
call
push
jmp
cmp
xchg
nop
xchg
xlat
movsl
pusha
jge
sbb
int3
cmp
sub
bound
call
rcll
aas
clc
shll
jg
mov
ret
call
adc
and
jmp
loopne
sti
adc
mov
fidivl
aad
fwait
nop
loopne
jmp
mov
lret
idivb
pop
push
ficomps
ds
lock
xchg
dec
stmxcsr
shll
out
outsl
cmp
jg
push
push
rorb
lods
lea
int3
movsl
lods
loope
pop
inc
fdivp
cmp
mov
scas
dec
mov
dec
out
jp
jb
push
inc
mov
xchg
mov
outsl
pop
adc
pushl
and
pop
out
dec
adc
sbb
enter
hlt
stc
and
adc
push
cltd
and
pushl
push
push
dec
pop
push
dec
or
ljmp
cli
mov
cwtl
sbbl
call
repnz
jb
sub
mov
scas
or
orl
sub
mov
into
sti
sbb
insb
ficoms
pop
ds
js
push
loopne
and
icebp
adc
and
decl
jns
mov
jne
mov
push
les
loop
mov
loope
call
ret
ss
add
out
and
out
push
fdiv
incl
cld
mov
adc
pusha
xchg
movsl
insb
mov
fstps
frstor
sub
sbbl
jns
cmp
sbb
idivb
dec
jmp
push
ljmp
add
sub
mov
pop
sub
and
lcall
js
add
test
lcall
es
arpl
arpl
push
dec
jg
or
jno
or
fst
cs
mov
adc
ljmp
adcb
jg
mov
sbb
imul
mov
cmp
lcall
movsb
sub
pop
clc
mov
mov
sbb
lds
adc
pop
pop
clc
decl
xchg
inc
xchg
jnp
dec
pop
cld
pop
mov
out
cmpsb
fwait
mov
inc
loop
sub
mov
jmp
negb
jno
mov
mov
xor
sub
mov
lcall
mov
stc
inc
mov
fsubrp
aad
js
mov
mov
dec
jo
mov
lret
mov
pop
cld
hlt
call
aad
pushl
stos
and
je
roll
movsb
mov
cmpsl
pop
out
cmp
call
xchg
out
into
xchg
imul
push
jb
cmp
ds
outsl
push
xchg
and
jecxz
sub
inc
sbb
lods
dec
push
fistps
push
xor
push
stos
negl
fistl
sub
mov
jo
inc
lret
adc
jle
add
jecxz,pt
push
push
ret
arpl
popa
ja
js
pop
sbb
sarl
push
js
imul
movsl
pop
sbb
inc
int3
jb
mov
inc
adc
rcrb
scas
lock
jae
jmp
mov
mov
xchg
lock
std
jle
das
imul
and
into
inc
lret
nop
fbstp
sub
inc
sub
jg
hlt
mov
hlt
negl
lock
or
push
lret
mov
in
fadd
iret
ljmp
imul
int
and
mov
sub
add
mov
loop
pop
and
pop
inc
dec
xchg
call
xor
or
mov
xchg
adc
iret
dec
ljmp
je
stos
popf
mov
pop
cmp
call
imul
sarl
jbe
out
mov
sbb
inc
or
mov
or
xchg
push
push
out
pop
cld
js
movsb
lcall
pop
rcrl
movsl
xor
xchg
movsb
dec
jns
testl
test
mov
hlt
icebp
cmp
nop
shr
sahf
leave
push
sub
sti
ljmp
loopne
inc
mov
jle
and
pop
add
adc
and
nop
negb
mov
xchg
cs
loopne
stos
rolb
add
jmp
xchg
or
int3
jl
push
aaa
popa
loop
fsqrt
jno
mulb
sbb
sbb
adc
in
jns
sbb
pusha
enter
adc
test
add
pushl
rolb
inc
negb
xchg
into
mov
or
sbb
call
adc
nop
push
pop
jecxz
fsubp
fwait
aaa
mov
inc
neg
ljmp
dec
dec
pop
xchg
inc
arpl
fdivrs
sbb
mov
jmp
cmp
push
add
or
push
inc
and
mov
mov
sub
cmp
stos
out
and
fbld
xor
lock
lcall
xchg
cmp
jno
rol
inc
test
xchg
lret
addl
mov
faddl
xor
dec
lds
xchg
call
sbbl
les
es
loop
sbb
fcmovne
sub
les
fbld
in
test
nop
or
leave
sbb
popa
in
decl
sbb
or
test
adc
push
lods
mov
push
lcall
mov
mov
popf
repnz
pop
arpl
outsb
loope
adc
sub
out
in
push
aaa
cld
ja
push
jae
je
loop
stc
or
jg
xchg
jae
sahf
pop
xorl
push
add
cmp
mov
ljmp
testb
loopne
jle
add
adc
inc
jno
dec
inc
mov
call
lods
sbb
xchg
mov
lret
push
incl
rcrl
movsl
shll
div
decl
pop
clc
shrl
stos
imul
and
lods
in
addr16
fists
pop
sub
int3
rclb
adc
popf
xchg
iret
arpl
pop
movsb
cmp
in
imul
inc
fdivl
jae
mov
or
insb
adc
adc
testb
xchg
jno
mov
cli
jmp
int3
lahf
fsubrl
lds
pusha
xchg
or
cmp
iret
jge
or
jo
push
hlt
das
and
aas
jb
sti
iret
xorl
ret
out
jb
mov
inc
repnz
leave
sub
decl
inc
nop
scas
cmp
pushl
stos
dec
mov
sub
dec
dec
enter
out
leave
pop
in
call
aam
sar
and
xor
scas
cmp
mov
cs
push
add
add
rcl
inc
sbb
cmpsb
popa
rcll
sub
adc
dec
dec
fsub
movsl
mov
xor
sti
add
xor
xor
push
push
in
rclb
ret
mov
add
call
mov
cmpsb
push
rclb
pop
inc
loope
mov
jge
mov
add
loope
test
loop
dec
push
pusha
fadds
mov
jmp
aas
movsb
arpl
xor
add
pop
loopne
adc
movsb
iret
and
std
sub
mov
mov
jmp
ljmp
out
fdivrl
out
and
xchg
pop
ret
adc
out
cmc
aad
adc
fimuls
mov
test
xchg
test
fadd
adc
push
jg
ljmp
lea
cmpsb
mov
jo
repz
stos
ret
jmp
cmp
adc
push
adc
pop
in
sar
mov
clc
sub
mov
call
pusha
mov
jb
lsl
das
push
testl
push
xchg
add
ret
mov
xor
pushf
mov
imul
inc
jecxz
dec
jae
mov
xor
pop
xchg
pushf
loop
jne
call
in
jb
xor
jno
out
out
das
dec
in
ret
aam
and
xor
push
cld
aaa
std
decl
inc
loopne
sub
xchg
je
rcrl
dec
out
or
jmp
repz
test
ljmp
stos
xor
add
lret
sbb
js
stos
dec
pushl
sarl
or
outsb
or
rolb
jmp
sub
inc
sbb
loope
lret
adcb
sbb
pop
mov
cmp
push
movsb
stos
pop
test
fsubl
fcoml
jg
sub
mov
sahf
aam
fimull
push
pop
movsb
jp
insb
cs
xchg
add
xchg
and
data16
pop
cli
test
lcall
push
mov
repnz
fwait
sub
ret
imul
push
inc
aad
repnz
mov
in
push
mov
ss
out
rcll
jle
lcall
jne
fwait
stc
jne
mov
enter
popa
jmp
loopne
push
insl
sub
sar
lcall
jecxz
sarl
cltd
push
fstl
push
js
cmp
mov
out
addl
or
jno
test
jp
jmp
fs
roll
sar
pop
rcll
cmp
mov
ficoml
mov
leave
xchg
pop
mull
jns
push
lods
push
mov
or
jg
in
sbb
ds
lret
add
sbb
adc
sbb
test
lods
ret
bound
dec
inc
lods
mov
and
out
repz
push
pop
nop
adc
nop
ss
pop
xchg
mov
jo
iret
aaa
push
xor
push
and
ja
xchg
pushl
std
clc
cmpsl
rolb
mov
ljmp
iret
mov
jmp
mov
mov
add
movups
mov
lock
cmp
decl
inc
hlt
inc
dec
dec
dec
lock
out
ljmp
or
cmp
lcall
fwait
push
out
cli
mov
bound
movsl
out
jp
into
into
push
sbb
or
jmp
jp
xchg
stos
jmp
movsl
ljmp
jmp
call
mov
rcr
js
mov
pop
mov
fcomi
or
xor
or
jnp
push
stos
push
sarl
or
dec
jmp
js
repnz
roll
sub
add
jmp
xchg
mov
hlt
inc
call
shr
xchg
pusha
mov
xor
and
outsl
clc
pushl
adc
add
jae
xchg
push
inc
mov
or
sub
es
std
mov
push
outsb
popf
mov
dec
dec
jle
pop
dec
pop
mov
or
mov
sar
out
xchg
and
dec
xor
js
insb
cmp
ret
mov
divl
mov
xor
mov
mov
js
jg
jp
aaa
movsb
sub
test
ret
hlt
aaa
es
dec
sub
pop
jne
les
xor
mov
decl
in
les
dec
fstpt
adc
call
call
in
cmp
and
adc
mov
stc
mov
imul
sub
lahf
loopne
arpl
mov
inc
push
test
test
push
icebp
daa
xlat
das
mov
lea
and
aad
mov
cmp
fidivl
mov
pop
dec
pop
mov
pushf
sub
les
shl
sarl
jmp
movsl
mov
fadd
push
cltd
fs
out
inc
outsb
jb
and
xor
incl
fbstp
sub
cmpsl
cmp
test
into
lret
je
add
movq
or
dec
out
dec
sti
int3
inc
or
dec
mov
add
movb
inc
xchg
push
into
ret
outsb
sbb
stos
mov
mov
push
enter
loop
into
push
rcl
movsb
imull
scas
and
pop
loop
push
sarb
insl
fdivl
inc
xchg
xor
mov
push
faddp
incl
cmp
fs
or
aaa
cld
jg
dec
lcall
stos
mov
lock
subl
and
mov
jne
dec
or
mov
sub
push
ficomps
loopne
xchg
adc
sub
out
mov
mov
adc
es
enter
cmp
pop
cmpsl
push
pop
roll
pop
sub
xchg
mov
jmp
sbb
mov
data16
pop
xor
mov
sbb
out
jg
ja
imul
enter
rcrb
sub
mov
mov
incl
jns
mov
icebp
fisttpll
push
sbb
xchg
push
mov
mov
callw
add
mov
sbb
add
and
fs
decl
les
loop
decb
stc
orl
pop
jns
imul
imul
push
test
popa
in
in
popa
sbb
test
les
adc
cmp
xchg
pop
xchg
addr16
add
test
not
movswl
cli
dec
stos
sub
scas
addb
outsb
dec
daa
mov
mov
push
dec
push
out
mov
jae
les
xor
adc
cmp
mov
mov
jo
sub
mov
pushl
inc
mulb
mov
std
jmp
and
out
in
push
jmp
int
addr16
jns
fistpll
xorb
push
xlat
adc
xchg
mull
mov
mov
ja
inc
sub
add
neg
cmpsb
cmpsb
mov
jns
repnz
mov
cmpsb
loop
mov
jmp
or
push
xchg
int3
push
not
ljmp
adc
mov
lods
pop
lock
ljmp
mov
stos
xor
aam
or
gs
lds
into
incl
xor
xchg
xor
mov
mov
xchg
bound
push
out
fcomps
insb
adc
pop
jecxz
in
test
push
cmp
stos
ficomps
stos
and
mov
add
fcomip
ljmp
cmp
xor
and
out
xor
ja
pop
cmp
mov
sbb
incb
ss
xchg
inc
out
push
ljmp
rcl
jbe
and
dec
push
jecxz
sub
adc
shl
jecxz
push
aad
adc
loopne
and
incl
jb
bound
ja
int3
mov
sar
das
xor
add
das
lds
cmpsl
or
push
call
lock
dec
fildl
popa
mov
clc
cmpsb
incl
cld
nop
fistps
mov
xchg
dec
push
orb
push
cmpsb
test
pushl
push
stos
mov
jae
popa
test
sub
lcall
lods
lahf
aas
xchg
lret
int
jmp
enterw
jbe
repz
call
loopne
andl
dec
lods
jg
lret
adc
loop
frstor
lcall
jecxz
rolb
mov
jo
incl
push
addr16
push
out
aaa
xchg
xlat
sub
fcomip
xchg
cmc
xchg
divb
jg
out
mov
and
push
sti
mov
in
dec
sub
fstpt
jae
pop
in
les
mov
out
ljmp
pop
incl
adc
mov
repz
jnp
sub
pushl
dec
movsb
add
push
in
lret
in
jmp
stos
out
daa
or
insl
cld
mov
adc
cmpsb
and
stos
jg
add
mov
jae
aad
cmp
shl
orb
fstl
leave
call
pusha
shrl
add
sub
loope
test
loop
pushl
cld
loope
push
sti
xor
sahf
fsts
jp
dec
bound
mov
rclb
pushl
hlt
lcall
or
sbbb
adc
imull
or
mov
shll
xchg
incl
dec
aad
mov
adc
dec
test
sub
lcall
ljmp
out
mov
loop
orb
xchg
add
or
incl
xorl
inc
jmp
sub
cmp
decl
xor
and
test
int
jg
jb
or
add
and
subb
cld
call
out
push
enter
mov
es
shll
ds
mov
add
ds
imul
inc
call
inc
inc
hlt
lcall
inc
movsb
adc
cmp
jmp
mov
mov
adc
lcall
push
or
cmpsl
inc
xchg
push
lods
mov
test
loopne
jle
pop
adcl
fcomip
mov
mov
pop
pushf
les
mov
pop
repnz
xchg
out
ljmp
jae
test
lea
bound
loop
call
push
fidivrl
call
adc
shlb
xchg
push
gs
jae
push
sbb
dec
in
pop
cmp
dec
ret
decl
mov
or
imul
fnstcw
fldt
pushl
xchg
cwtl
inc
das
mov
ds
xchg
loope
mov
in
mov
cwtl
jg
out
mov
adc
jl,pn
fcomps
popf
mov
clc
ljmp
adc
in
int
xchg
lock
mov
or
jg
mov
mov
cmp
ljmp
ljmp
icebp
repnz
mov
outsl
jecxz
idivb
loopne
ds
fs
mov
call
mov
mov
test
test
mov
mov
ja
in
inc
dec
or
and
rcrb
mov
dec
xchg
out
adc
lds
popa
in
cltd
insl
nop
add
testb
scas
dec
mov
add
ja
fcomip
mov
loopne
mov
push
sbb
cld
xor
jecxz
adc
add
jecxz
push
mov
jecxz
sub
rcll
leave
sub
xchg
pushl
xchg
je
mov
push
hlt
lret
ret
xchg
pop
mov
clc
pushl
push
push
mov
mov
sahf
enter
aaa
xor
clc
sbb
fisttps
das
mov
sbb
sahf
xorb
push
sbb
mov
test
int
mov
cmc
sarb
mov
lods
test
ljmp
dec
aas
out
movsb
mov
into
jbe
gs
add
xor
lcall
xor
dec
jp
jno
mov
subl
mov
push
out
mov
sbb
sbb
mul
outsl
stos
adc
lock
or
rcl
push
xor
jmp
jo
jmp
aam
cmp
xchg
inc
mulb
jl
xor
negl
mov
sub
cltd
jle
lock
xor
push
xchg
pop
cs
testb
push
repz
dec
mov
sub
push
pop
xor
pop
adc
ljmp
imul
push
sub
xor
adc
int
xor
mov
lcall
mov
test
and
lock
cmp
adc
popa
clc
incl
shrb
sbb
stos
imul
adc
push
aam
ljmp
xchg
in
aaa
jnp
jns
sarb
cmc
inc
push
or
pop
lock
insb
sbb
push
xchg
xchg
pop
mov
outsb
sub
adc
lcall
sub
push
out
sbb
cmp
jae
lods
lahf
pushl
dec
dec
jmp
cmp
popa
xchg
jo
iret
repz
cmp
scas
lret
pop
cmp
adc
fwait
pushf
dec
fwait
cld
mov
jbe
xchg
test
adc
mov
cld
add
dec
fwait
out
pop
push
negb
test
mov
arpl
jae
fs
xor
dec
xchg
outsb
aam
mov
sub
pop
call
adc
dec
fwait
in
test
jmp
push
into
pop
push
xor
es
mov
leave
xor
and
cmc
sar
pushl
dec
lret
lea
cmp
int3
push
js
nop
add
test
jle
mov
out
call
and
ficoml
mov
jp
mov
mov
sbb
mov
push
sbb
scas
cmc
lods
dec
pop
adcl
or
mov
pop
rol
mov
xchg
les
inc
mov
mov
jecxz
test
jmp
mov
mov
mov
mov
nop
test
dec
lcall
lock
adc
rclb
jno
popf
mov
gs
cltd
inc
adc
and
in
jg
push
adcl
fwait
xor
ud2
cmp
jl
inc
adc
or
popf
push
pop
fstpl
ljmp
jbe
lahf
add
mov
adc
daa
out
fisttps
addr16
decl
fs
adc
mov
pop
dec
mov
movsb
pop
mov
mov
push
repz
adc
repnz
push
inc
lods
push
rcrl
std
enter
lcall
repnz
lret
lock
sbb
inc
pop
outsb
test
xchg
leave
ret
mov
aam
mov
xor
incl
pushf
pop
mov
pop
cmp
dec
xor
in
mov
loope
call
popa
es
shr
cld
push
push
push
pop
mov
cli
jecxz
cmp
lcall
cmpsb
push
push
test
pop
jg
lcall
adc
pop
cmp
loopne
aad
cmp
repnz
outsb
into
mov
aaa
adc
dec
out
in
cld
js
les
clc
ljmp
inc
pop
push
sbb
movsl
or
repnz
mov
adc
int
mov
push
out
idiv
icebp
cmpsb
lods
lods
je
adc
mov
in
pop
daa
pop
andb
mov
lods
jle
mov
cmc
cmpsl
cmp
jp
mov
ret
inc
shll
lret
mov
into
data16
das
jae
fwait
sarb
sub
pop
and
pop
jg
movsb
decl
sti
jne
loope
push
adc
fistpll
lcall
ret
jp
cmp
stos
outsl
shrl
fstpl
fmul
ljmp
jg
jb
jle
imul
and
cmp
mov
and
xchg
shlb
pushl
mov
insl
subb
es
lahf
push
dec
addl
in
aam
sub
sub
ljmp
lock
mov
sbb
loop
sbb
lret
sbb
clc
ficomps
cmpsb
das
inc
mov
rol
lods
adc
mulb
push
mov
cld
adc
in
xlat
in
bound
mov
data16
sub
inc
inc
lcall
jg
pusha
fsub
rorl
into
les
cmpsl
xchg
or
jb
call
enter
outsb
lea
loopne
shl
xor
ja
sbb
xchg
mov
lods
mov
mov
fdivrs
pop
sub
cli
clc
dec
lret
in
jne
or
mov
push
xor
ss
mov
enter
pushf
mov
cltd
arpl
dec
scas
int
call
and
or
sbb
addl
outsb
push
dec
jbe
inc
cmp
pop
icebp
adc
inc
jl
stos
ret
lcall
loope
clc
mov
push
ret
aad
fbld
push
cli
adc
in
and
in
pushl
sbb
loope
mov
pop
dec
inc
cmp
mov
sbb
scas
mov
iret
push
cmpsb
add
decl
js
test
daa
push
sub
lods
pop
mov
aad
hlt
or
pushf
call
decl
add
mov
pusha
sbb
movsb
les
aaa
std
call
fldcw
lods
and
ljmp
add
xor
jg
in
lret
push
mov
sub
rorl
jl
gs
imul
lahf
fwait
inc
decb
inc
and
and
mov
pop
push
decl
xor
jecxz
stos
out
mov
in
rorl
arpl
ljmp
jb
in
or
mov
xchg
call
push
pop
adc
cmc
out
and
xchg
mov
incl
add
test
mov
lret
outsl
dec
movsl
pushf
xlat
imul
mov
cld
mov
xchg
mov
outsl
pop
sub
lods
push
dec
outsb
or
cli
cmp
jmp
pop
pop
ret
cmp
jne
cmp
dec
lea
inc
jae,pn
mov
sub
pushl
push
xchg
or
cmp
fwait
divl
and
push
mov
out
inc
jg
pusha
push
aam
pushl
data16
aam
lret
call
test
fwait
mov
cltd
nop
dec
rcl
lahf
sbb
in
dec
dec
rcrl
call
insb
cmpl
sbb
inc
cli
leave
push
xchg
mov
inc
adc
sub
ljmp
sbb
stos
push
lret
pop
sub
sbb
push
pop
int3
add
shlb
int3
lods
add
outsl
mov
call
pop
in
rcll
add
mov
subb
aas
hlt
rcl
or
cwtl
std
or
lea
sbb
insb
or
adc
push
sbb
jmp
loopne
cmp
cmp
push
mov
fstpt
push
cmpsl
shrl
push
jb
leave
xor
mov
decl
sub
pop
pop
call
push
lcall
and
jno
push
ret
loope
hlt
ds
insb
ds
je
adc
stos
out
push
arpl
cmp
int
or
and
xor
jl
sub
sub
sub
negb
fisttps
mov
xor
cmp
sbb
pop
cmp
incl
mov
iret
or
test
cs
stos
sbb
ss
jg
sub
pop
cmpsl
mov
dec
xor
sbb
ljmp
inc
hlt
inc
or
outsl
cmp
mov
sub
fcmovb
ds
ljmp
aad
mov
data16
lret
sub
hlt
cltd
dec
enter
jmp
stos
fyl2xp1
outsb
mov
xchg
outsl
pop
push
stos
adc
cmp
jno
cmpsb
jmp
xchg
inc
mov
xchg
leave
aad
inc
pop
sbb
subl
iret
arpl
pop
pusha
cmc
addr16
sub
pop
in
lret
adc
jg
pop
cld
or
fistpll
push
mov
in
push
orl
or
scas
add
pop
push
repnz
imul
dec
mov
lds
jmp
xlat
cmp
int
out
outsl
mov
insb
jae
and
jp,pt
or
lods
mov
push
bound
out
sbb
push
mov
ds
push
addl
rorb
xchg
push
add
fimull
loopne
pushl
push
inc
mov
mov
mov
lcall
ret
movsb
inc
add
aaa
push
sub
xlat
loopne
jge
clc
pop
cs
jg
jle
cmp
xor
dec
pop
jbe
lret
add
ret
aad
js
lock
in
out
popf
sbb
mov
iret
filds
and
or
in
or
fimuls
std
scas
fstpt
dec
xor
mov
jg
jno
data16
adc
sysenter
xchg
adc
inc
mov
out
fcmovne
adc
push
push
add
pushl
dec
sub
out
je
nop
inc
ret
dec
fistps
adc
fwait
or
out
xchg
ljmp
pop
in
js
adc
xor
iret
sub
int3
dec
fidivl
jmp
mov
sbb
pop
sbb
mov
cmp
jp
loope
xorl
mov
xchg
fdivs
push
dec
cwtl
mov
mov
stc
fs
call
dec
sub
in
sti
iret
or
push
bound
or
jg
jmp
leave
insl
sahf
addr16
aad
sub
push
mov
stos
mov
mov
call
sbb
dec
lret
cmpsl
mov
and
and
lock
xor
fildll
incb
cld
call
add
cmpsb
inc
jno
push
cmp
jns
mov
aaa
jo
mov
rcrb
mov
mov
out
mov
in
out
inc
fistps
pop
mov
jns
mov
jge
xlat
decl
sbb
sbb
shl
sbb
jns
test
into
in
cmp
sarl
mov
hlt
adc
push
in
add
mov
jg
shll
pushl
jbe
and
repnz
mov
pop
jae
mov
mov
xlat
decl
aam
in
inc
jp
sub
cmpsl
int3
popa
mov
lods
sub
cli
js
cmpb
or
cmp
cltd
sbb
loop
adc
mov
cld
out
sbb
dec
mov
mov
cmp
dec
xor
pop
mov
test
jns
jg
sub
inc
cld
and
mov
ret
pop
sub
xchg
int
adc
and
pop
jnp
adc
or
pop
jmp
pop
and
pop
inc
dec
mov
ss
loope
mov
call
push
sub
das
inc
dec
std
cmp
insb
inc
lds
movsb
xchg
mov
sbb
sbb
cmp
cld
fcoml
icebp
and
ljmp
movsb
fiadds
call
dec
cmp
int3
sub
clc
pushl
inc
mov
xchg
scas
cmp
mov
ljmp
inc
mov
lahf
jbe
mov
out
xchg
mov
push
inc
movsb
cmp
mov
lcall
cmpsb
cmp
mov
orl
cmpsl
test
ljmp
movsl
sbb
nop
out
jg
or
xlat
pop
mov
push
ljmp
xlat
popa
inc
mov
ljmp
std
leave
push
push
js
push
mov
insb
fdivr
or
leave
ljmp
xlat
xchg
pop
push
push
push
jg
rolb
fs
xchg
stc
fwait
mov
jbe
mov
ret
repz
dec
lods
cmp
incl
pop
dec
pop
push
adc
sub
mov
pusha
nop
pop
idiv
aam
pusha
xor
lcall
js
add
inc
je
cmp
push
cli
pop
and
pop
adc
cli
ljmp
lret
loope
bound
jno
insl
jl
xchg
xor
cmp
lcall
mov
stos
push
mov
pushl
outsb
in
dec
inc
xor
sub
je
stos
addr16
jnp
pop
jb
rorb
mov
adc
ljmp
or
xchg
and
int3
fsubrs
mov
dec
cmp
in
decl
insb
xchg
ss
in
cmc
pop
xchg
jl
jge
gs
insl
ss
mov
jmp
insl
jns
cmp
mov
and
or
movsl
push
lcall
pushf
and
das
repz
or
cmp
jb
ja
movsl
es
mov
stos
jmp
jle
frstor
imul
sbb
scas
sub
lret
pop
in
arpl
std
jg
lcall
insb
cmp
fstpl
test
mov
fstpt
sbb
and
adc
out
icebp
fstpl
and
int
test
mov
ret
jo
cmp
mov
ljmp
fsubrs
fcompl
add
push
clc
outsl
sbb
sbb
ret
jg
mov
mov
mov
sbb
aas
cli
movsl
jle
popf
inc
pop
xor
inc
push
notl
jmp
adc
orb
js
loop
fs
pop
dec
push
push
jo
lock
cmp
dec
idivl
jno
jb
or
mov
adc
pop
popf
xchg
inc
add
cmc
ljmp
pop
test
push
pushf
and
clc
sub
incl
xchg
push
inc
xchg
in
push
dec
loopne
ficoms
mov
pop
jae
add
dec
popa
push
loopne
push
inc
aam
mov
lcall
cwtl
push
jp
sub
mov
add
and
sub
xor
lods
cmp
xor
mov
mov
mov
shrl
add
sar
fucomip
xor
adc
lods
in
ljmp
es
test
inc
jnp
mull
pop
ljmp
adc
imull
in
decl
movsb
inc
out
loop
adc
xor
cmp
add
loopne
frstor
je
pushf
jmp
fisubrs
xchg
push
xor
jo
add
test
call
push
mov
cli
imull
jnp
sbb
add
pop
mull
push
mov
xor
xchg
or
enter
dec
sub
loopne
push
lret
xchg
mov
hlt
xchg
icebp
sbb
test
mov
mov
int3
and
test
adc
stc
mov
pop
call
std
inc
movb
push
je
outsb
cmp
mov
inc
push
jp
cmpsl
mov
adc
imul
add
xor
loope
in
xorl
das
imul
pop
xchg
mov
call
std
pop
adc
rorl
or
jb
cmp
xor
imul
adc
mov
add
jmp
sbb
ja
out
dec
push
xchg
rcr
in
and
cmc
mov
addr16
ret
pop
mov
std
sub
test
mov
pop
jnp
stos
sub
lock
enter
xor
pop
add
jg
and
ds
mov
notl
inc
out
fistpl
mov
mov
imul
push
inc
pop
adc
outsb
ja
test
mov
ds
js
cmp
scas
fbld
adc
in
lret
jb
xchg
pusha
mov
mov
icebp
sarb
int
in
pop
stc
adc
cmpsl
push
aad
xchg
adc
and
pop
lcall
insb
jmp
gs
arpl
repz
incb
adc
cmp
decl
es
int3
addb
push
xchg
ror
sar
cmp
test
lods
sub
incl
cmovae
mov
adc
filds
and
jno
jns
xchg
add
dec
jmp
jle
push
xchg
loop
inc
inc
push
in
jb
push
test
loopne
dec
lcall
mov
fnstcw
loop
ret
fildl
add
jae
in
in
and
ret
decl
scas
pop
out
je
xor
jecxz
iret
movsl
jnp
xor
sub
loopne
jae
dec
lcall
sbb
adc
dec
mov
cmp
xchg
sahf
and
dec
xchg
adc
cmp
mov
xlat
sti
out
ja
scas
stc
inc
sub
out
popf
xor
mov
cltd
shrl
out
arpl
aam
leave
pop
xchg
scas
clc
incl
les
adc
push
adc
inc
scas
mov
xrstor
mov
and
mov
cwtl
ret
loope
lods
mov
loope
mov
dec
mov
lds
xchg
jge
pop
scas
movsb
xchg
shlb
push
cmp
sbb
iret
ljmp
xor
cmp
inc
sbbl
jae
nop
jbe
sub
rsm
movsl
insl
jbe
int
addr16
mov
mov
repz
mov
fisttpll
dec
pop
sti
nop
sub
pop
xor
cltd
pop
mov
iret
iret
arpl
pop
cmpsl
dec
jmp
cli
repnz
fidivl
clc
filds
jbe
test
cli
adc
mov
rcrb
pop
pushl
mov
jg
pop
inc
add
push
movsl
cmp
xor
outsl
inc
pushf
sar
xchg
cmp
pop
jg
push
cmp
pop
xchg
push
cmpsb
jg
mov
mov
xchg
pop
pop
add
outsl
test
test
or
scas
fcomip
add
cmpsb
rorb
shlb
push
mov
push
add
xlat
push
sti
insb
mov
lret
repnz
pop
inc
cmp
mov
xchg
pop
jl
dec
sti
dec
adc
mov
daa
jnp
and
sti
xchg
or
lds
mov
mov
jmp
jns
addr16
push
and
cmpb
incl
movsb
or
xchg
loopne
mov
mov
and
std
aam
div
sahf
xor
data16
or
loopne
leave
enter
push
cld
mov
popa
int
cs
inc
mov
push
dec
aaa
es
sub
lds
mov
sbb
lcall
mov
jmp
popa
lcall
mov
push
cld
or
lea
xchg
movsb
rcll
jge
fmull
cmc
call
or
ss
movsb
shrl
mov
push
mov
dec
pop
sub
incl
mov
jae
fwait
scas
call
jae
call
pop
rcrb
scas
and
insl
repz
incl
std
xchg
xchg
mov
xchg
mov
or
jle
inc
dec
popf
sahf
jo
mov
popf
jns
rolb
decl
push
test
lret
rcrb
mov
pop
ret
pushw
imul
cmp
push
mov
jg
rcll
nop
adc
aaa
inc
aas
popl
push
scas
pop
out
pop
bound
mov
pop
rorl
cmp
xchg
jae
mov
sub
ror
inc
or
mov
push
push
repnz
mov
jl
adc
add
xchg
jae
inc
lds
in
out
xchg
loope
mov
fisttpl
test
jo
push
out
pop
cmc
pushl
mov
pop
push
lds
or
cld
lcall
cmp
or
and
jge
or
aas
mov
pushl
mov
push
rcr
xchg
xor
sbbb
sbb
into
push
cli
into
aam
fisubs
dec
decl
test
mov
pop
pop
roll
jo
mov
jne
pusha
sub
or
xor
or
adc
lcall
sub
jns
arpl
hlt
cs
loope
adc
ljmp
xlat
adc
adc
xlat
arpl
sarl
mov
test
lcall
fldt
mov
andb
aaa
cvttps2pi
mov
outsb
xor
incl
mov
pushf
sub
inc
mov
cmpsl
pusha
add
and
mov
xchg
inc
sbb
loopne
add
or
mov
mov
xchg
pop
test
and
ret
push
stos
mov
sub
idiv
out
clc
sbb
js
rcrb
mov
or
outsb
fdivrs
lock
ud0
mov
and
repnz
dec
aad
ror
push
inc
xlat
jecxz
pop
ret
decl
dec
add
cmpsb
ja
jno
pop
fsubp
fnstenv
gs
out
xchg
pop
fcoml
pop
cmpsb
sbb
insl
fists
mov
xor
sbb
sbb
ljmp
add
add
jnp
aas
or
jbe
mov
push
mov
cmpsl
insb
or
fsubs
pop
daa
fsubr
out
adc
scas
fldz
pop
out
add
mov
dec
aam
movsl
adc
mov
cld
cmpsl
add
dec
insl
fcoms
mov
xorb
in
pop
mov
inc
cld
mov
dec
cwtl
push
repz
pop
or
cmp
scas
and
xor
cmp
pop
ljmp
aam
out
loop
dec
lcall
add
jno
sti
jnp
push
repz
mov
pop
and
mov
mov
inc
cmpsb
xor
inc
out
xor
sub
fbstp
dec
daa
ljmp
insl
fcompl
shrl
mov
mov
adc
jle
repz
das
nop
dec
jb
ljmp
out
testb
pop
jae
data16
mov
int
aam
add
mov
pop
incl
sbb
xor
sbbl
inc
stc
xlat
loope
xchg
xchg
mov
mov
dec
test
jnp
iret
mov
add
movsb
jmp
jns
jge
cwtl
test
js
dec
test
fbstp
stos
decl
mov
rcrl
dec
jl
jo
push
or
in
pusha
and
stos
cmp
push
in
and
xor
clc
mov
in
jns
stos
fs
xor
mov
dec
sahf
and
or
ljmp
push
xchg
iret
fistl
mov
add
mov
add
shlb
fildll
push
std
cmp
push
sub
xchg
sbb
jb
jg
add
sbb
push
aad
pop
sbb
jmp
or
cld
push
add
pop
in
dec
das
ljmp
pushl
cmpb
mov
adc
faddl
cmp
cmp
jmp
jmp
addr16
idivl
jmp
pop
sub
mov
mov
push
dec
adc
mov
cmpsb
mov
push
xchg
adc
push
ficompl
or
mov
lcall
and
xchg
jp
sbb
jnp
clc
pop
add
mov
cwtl
popf
repnz
enter
jmp
pop
xor
movsb
pop
repnz
ficoml
scas
mov
add
add
fildll
pushl
loopne
in
cmp
mov
subb
es
pop
dec
mov
pushf
loopne
mov
repnz
push
aam
insl
xlat
xor
ljmp
jnp
loop
movl
shrb
lret
hlt
imul
movb
std
testl
mov
out
sbb
pop
jo
cmp
pusha
push
push
fisubs
cld
and
xchg
ret
stc
stos
addl
repnz
push
jno
mov
pop
fmull
scas
or
ret
xchg
mov
repz
mov
out
mov
push
mov
cs
sar
lcall
mov
mov
xchg
mov
mov
pop
imul
imul
call
loopne
xchg
sbb
clc
lods
mov
aad
adc
sti
shl
enter
pop
or
push
cmp
xchg
imul
sub
or
lret
in
addb
add
into
pop
dec
mov
mov
into
gs
loope
sahf
decl
push
jmp
add
cmp
inc
lret
movsb
cltd
mov
rol
std
xchg
cmc
cmp
mov
xlat
adc
add
in
fsts
sbb
in
inc
mov
cld
push
jns
lds
pusha
lock
sub
mov
jg
rol
out
jg
push
rcll
jno
add
mov
pop
push
data16
and
adc
cld
imul
mov
aas
jg
adc
test
cmpsl
xchg
xor
shll
pmulhw
clc
inc
notb
jae
es
push
lcall
mov
fs
mov
add
call
mov
test
test
cld
bound
adc
mov
cmp
outsl
ret
jmp
int3
cmpsb
mov
mov
cld
pushl
std
outsb
outsl
movsb
mov
int3
addr16
ss
sbb
cmp
jecxz
mov
or
jp
fs
or
cltd
cld
pop
push
test
and
add
mov
lods
test
in
cmp
add
xor
pop
ljmp
sub
jge
mov
dec
std
dec
mov
add
mov
sub
inc
and
jg
lods
mov
out
mov
jl
xchg
xor
daa
bnd
mov
into
sbb
popa
subb
xorl
mov
adc
out
sbb
dec
js
push
enter
mov
fwait
pop
ljmp
mov
pop
in
jp
xchg
int3
in
cmp
push
mov
and
mov
out
popf
jne
xor
push
lods
aad
ret
push
gs
sub
cs
push
sbb
add
xor
mov
jg
pop
cmp
movsb
es
pop
lods
lods
jmp
inc
aaa
roll
clc
aad
ret
cwtl
jg
jmp
sub
loop
pop
ret
cld
cmpsb
xchg
daa
xchg
mov
std
incl
rclb
inc
nop
or
push
cli
leave
cs
stc
lock
cmp
xor
int
sub
mov
imul
test
mov
ljmp
mov
dec
cli
sub
dec
in
in
cmp
lahf
add
mov
into
jle
mov
mov
into
in
pop
js
adc
jne
sub
pop
loopne
jne
jl
data16
loop
out
test
sub
lcall
aas
or
dec
cmp
xchg
xchg
xor
mov
enter
std
arpl
incb
lcall
cmc
pop
pop
ljmp
mov
sub
cmpsb
filds
mov
out
sbb
aam
stc
fildll
loopne
jp
push
xchg
js
std
jmp
int
pop
fcomip
adc
cs
push
lahf
ds
fldcw
and
sbb
pushl
cmp
inc
jle
shrb
xchg
mov
sbbl
add
insl
mov
add
adc
cld
mov
and
or
pop
cmpsb
je
sbb
decl
inc
daa
fsub
in
push
xor
idivl
push
icebp
push
sub
incl
push
test
inc
xchg
mov
pop
fbstp
test
outsl
xor
pop
sub
dec
inc
into
arpl
mov
or
and
in
cmp
pop
jg
add
pop
add
push
pop
xchg
in
inc
in
dec
aam
or
test
loope
push
push
nop
sub
mov
cld
into
xor
outsb
jns
cmp
into
sbb
inc
mov
xchg
decl
mov
mov
cmpsb
cld
aaa
or
in
in
arpl
rol
imul
pushl
cmp
and
cmp
mov
adcl
das
jmp
rcrb
mov
ret
clc
pop
xor
daa
xor
mov
adc
fadd
jp
mov
jge
adc
dec
cwtl
dec
push
adc
xchg
xor
out
lea
cmpsl
mov
shl
xchg
cli
jl
lcall
enter
mov
lcall
xchg
add
push
scas
pusha
dec
pop
fidivrl
or
jg
lods
cmpsl
sub
pop
dec
and
sbb
cmp
pop
loopne
adc
arpl
push
xchg
sub
inc
repnz
lret
fld
sub
loopne
mov
xor
int3
dec
notb
dec
lock
cmp
cmp
fiadds
add
adc
fcmove
xor
movsl
push
inc
adc
dec
inc
add
incl
ss
push
cwtl
sub
cmp
cltd
xchg
adc
adcb
loopne
sbb
xchg
out
clc
xor
sbb
jp
test
mov
int
or
sub
mov
xchg
fists
incl
sub
leave
fiaddl
sbb
int
incb
out
fcmovb
inc
xchg
imul
inc
es
sub
iret
insb
mov
ljmp
mov
rorb
cmc
push
cmp
cs
aam
sbb
push
push
pop
mov
sbb
mov
cmpsb
jmp
adc
and
sar
sbb
add
dec
pop
xchg
popf
inc
xor
jmp
cmpsl
adc
pop
push
lret
jnp
jecxz
and
cli
fisubrl
into
idivb
mov
push
jmp
fisubrs
push
insl
adc
sub
jnp
mov
idivb
adc
mov
test
shr
jl
push
jae
xor
pop
sub
xor
pop
addr16
sbb
dec
sbb
stos
and
stc
mov
loope
addr16
int3
mov
xor
stos
in
or
and
sub
cmp
sub
cs
jmp
lret
cmp
pop
fwait
out
sahf
mov
into
add
dec
lcall
test
pop
cmpsb
sbbb
and
rcl
cli
inc
sar
lcall
dec
lret
in
andl
lods
push
in
repnz
sub
and
das
and
ror
out
add
cmp
mov
and
or
xchg
outsb
int3
sub
gs
insb
cwtl
movups
mov
pop
sar
idiv
lcall
pop
mov
leave
std
mov
sti
cmp
push
pop
mov
pop
in
in
bound
jmp
cli
fs
xchg
adc
in
mov
mov
mov
mov
add
lds
cwtl
jge
add
mov
lods
int
test
lret
xchg
push
dec
ljmp
icebp
clc
scas
pop
inc
loopne
push
ret
and
push
inc
sub
popa
xchg
sub
dec
sbb
int3
shrl
loopne
fisttps
jnp
test
inc
mov
adc
hlt
jnp
inc
loope
dec
add
das
mov
push
mov
sbbb
xlat
cmp
jecxz
dec
or
jmp
lods
insb
dec
sub
test
mov
sbb
xchg
adc
mov
or
lahf
popa
fistl
call
push
add
out
xor
out
mov
pop
xchg
pop
inc
rcrl
pop
sub
mov
inc
pop
data16
stc
push
cmp
enter
mov
push
or
je
movsl
inc
mov
and
cmc
mov
pop
pop
dec
add
sbb
pop
and
mov
dec
enter
inc
mov
adc
and
cli
cmp
test
pop
and
mov
lods
fmulp
or
test
adc
xchg
call
xor
lcall
cmp
call
sub
push
mov
push
xchg
lock
aaa
mov
and
incl
popa
shr
ss
sbb
cmpsb
imul
jae
dec
sub
mov
ljmp
daa
jb
std
mov
add
ljmp
arpl
and
mov
or
js
ficompl
mov
mov
add
aaa
mov
or
fcomp
sbb
fisubl
mov
lods
call
cli
mov
push
push
and
call
adc
mov
into
pop
or
in
insl
sub
enter
mov
stos
dec
xchg
xor
popf
inc
ljmp
push
ret
in
push
jno
jae
dec
xchg
push
pop
jmp
push
into
mov
pop
sub
push
push
cmpl
sub
fsubp
incl
pop
in
push
inc
cs
lret
addr16
enter
icebp
push
push
outsl
and
cwtl
mov
subb
insl
cmpsl
incl
into
movsl
dec
dec
cld
mov
cmp
movsb
out
nop
jmp
dec
shl
dec
mov
in
mov
std
push
std
call
into
jp
scas
add
dec
test
stos
pushl
lcall
std
ja
bound
decb
mov
xchg
adc
jecxz
stos
adc
pushw
shlb
out
out
cld
jg
sbb
fists
test
mov
inc
loope
mov
pop
hlt
push
std
ss
les
xor
or
lret
xlat
imul
mov
inc
mov
jle
mov
shll
mov
add
mov
jmp
mov
add
ror
ds
sub
pop
bound
mov
add
mov
popf
das
adc
cmp
mov
jne
imul
pop
cmp
dec
pop
inc
scas
jg
scas
inc
out
call
pop
mov
adcb
inc
push
mov
ljmp
std
idivl
mov
add
sbb
push
testb
sbb
mov
enter
mov
dec
jmp
fadd
add
idivl
lea
ss
cmp
cmp
andl
pop
cmp
cmpsl
stos
mov
push
jnp
data16
out
aaa
sar
cmp
rol
es
lea
imul
push
adc
shrb
jg
lret
outsb
xchg
out
outsb
xor
adc
jno
clc
movsl
mov
adc
mov
test
lcall
out
sbb
cld
fildll
ljmp
cltd
stos
fbstp
cli
mov
and
in
dec
cmp
and
dec
xchg
ljmp
sbb
jne
movl
xor
fistps
stc
and
dec
addl
cmc
aaa
fcompl
mov
lods
or
aam
bswap
mov
sbb
icebp
nop
ljmp
pop
adc
cmp
pop
shl
mull
sub
in
sbb
push
sarb
pop
mov
pusha
mov
cld
fildll
ss
xchg
jnp
mov
gs
dec
mov
dec
hlt
sbb
stos
outsb
int
rolb
lret
mov
add
push
outsl
mov
dec
jmp
mov
test
decl
jle
stos
mov
pop
jnp
jns
adc
decl
fisubs
cltd
lcall
xchg
sbb
ss
lret
add
insb
dec
adc
fsts
jb
mov
in
les
std
jg
insb
stc
fcmovnu
movl
mov
pop
xchg
lahf
jmp
fstps
incl
je
stos
outsl
or
cmpsl
repz
ds
mov
mov
mov
fsubp
cmp
in
sarb
add
test
dec
cld
repnz
sub
mov
ret
jo
push
sahf
out
mov
cmp
sub
incl
loopne
shlb
cmp
clc
mov
xor
adc
xor
push
rorl
lds
mov
cld
cmp
xchg
push
cmp
cmc
jl
fcomps
stc
shll
mov
mov
pushl
shll
push
fs
call
and
bound
ljmp
clc
mov
loopne
iret
add
adc
call
daa
movsl
mov
cmp
std
fisttpll
add
sub
mov
xor
dec
adc
sub
in
mov
cmpsb
jl
mov
jb
cmp
pushf
je
push
daa
cmpsl
push
xchg
sub
push
pop
pop
mov
les
mov
incl
stos
push
adc
jp
dec
xlat
stc
pop
gs
iret
fdivrs
xor
cwtl
outsl
mov
js
sub
in
jmp
loopne
pop
cli
fs
fildll
jl
xor
sti
lret
pop
add
pushl
pusha
xchg
pop
pushf
rcl
and
jl
pop
hlt
sub
sbb
fnstsw
das
cmc
mov
fcomps
es
scas
or
cwtl
mov
loop
les
in
sarl
add
movl
inc
int3
mov
mov
cmpsb
out
das
out
mov
ja
lea
idiv
push
out
adc
lahf
lds
mov
xor
pop
testb
mov
push
dec
push
or
sbb
int
lcall
and
arpl
pop
ljmp
jmp
xchg
pushl
inc
ficomps
inc
int
fsubr
jp
pop
sbbb
sbb
insl
lret
dec
fwait
sub
decl
cwtl
sub
cmp
mov
data16
mov
nop
lods
jp
mov
test
jmp
aaa
idiv
pop
fstpl
lret
cmc
out
scas
cmp
inc
pop
ljmp
dec
cmp
jb
in
je
mov
mov
sub
sti
mov
mov
fcoml
lea
pushf
repz
outsl
sbb
pop
aad
divl
cmpb
cmpsb
gs
mov
mov
int
xchg
add
mov
test
fbld
cmp
test
dec
dec
fisttpll
sbb
xchg
notl
sbb
fucom
mov
ret
fwait
insl
lahf
xchg
arpl
or
mov
push
cmp
adc
js
push
pushf
shll
lds
cmp
rcrl
sub
je
inc
ljmp
adc
fists
cmp
jnp
cmp
call
repz
fimull
loopne
sub
imul
notb
cs
insb
jns
adc
jmp
pusha
mov
push
mov
and
mov
js
es
sub
loop
lods
pop
mov
push
cld
cmp
in
nop
add
fadd
mov
xlat
lds
mov
movsl
out
or
mov
xchg
sbb
in
dec
mov
mov
mov
pusha
ljmp
subb
mov
inc
lret
jb
icebp
pop
mov
mov
jge
test
insb
aad
pop
and
jno
addr16
fsts
inc
sti
mov
cld
in
ja
xor
ret
inc
loope
sarl
jl
jle
rcl
ds
aaa
inc
les
xor
mov
xorb
popa
repz
dec
addr16
lcall
sbb
xorb
push
lret
xchg
loop
imul
pushl
mov
hlt
mov
dec
loope
xor
mov
inc
xchg
sub
jg
js
adc
ret
cmpl
test
jne
cmp
jae
and
js
xor
pop
js
xor
mov
loopne
push
mov
mov
rcrb
inc
inc
lods
sbb
mov
mov
sbb
push
fistpl
and
decl
mov
stc
or
loope
lret
call
mov
iret
enter
int3
sarb
popf
sub
imul
sub
into
movsl
cli
jle
loop
and
mov
js
or
adc
jp
xor
mov
ljmp
rorb
pusha
fwait
clc
bound
fdivrl
int
mov
nop
mov
lahf
sar
fs
jecxz
fs
cmp
add
dec
pop
fisubrl
xor
out
aaa
out
add
lea
lock
ljmp
inc
in
xor
push
mov
pushl
cmp
mov
and
gs
add
in
jge
pop
cmp
sub
cmc
loope
pop
pushl
fdivl
std
sarb
sub
shrl
mov
sarb
aas
xchg
inc
cmpl
adc
mov
call
mov
jb
jmp
movsb
aaa
xor
xchg
mov
inc
xor
sarl
xor
mov
mov
or
inc
push
jl
loope
sbb
imulb
lahf
test
lcall
pop
dec
sub
das
sub
test
out
mov
aaa
rclb
clc
lcall
mov
push
imul
fwait
dec
jecxz
out
dec
push
xchg
or
sbb
ljmp
fcomp
sbb
testb
mov
push
fnstsw
push
insb
test
ret
jg
decl
and
test
ds
pop
fwait
cs
fsubs
idiv
push
xchg
loope
std
jg
cmp
dec
adc
dec
lods
loop
ljmp
out
arpl
sub
loopne
shlb
push
inc
inc
fdivs
outsl
cmp
dec
pop
mov
and
dec
fcomip
mov
pop
je
pxor
xchg
inc
shrl
lcall
mov
cld
scas
shr
into
sbb
and
bound
mov
cmp
inc
sti
mov
add
call
add
ret
test
je
mov
mov
je
jg
dec
lahf
adc
imul
inc
dec
or
in
lcall
sar
jle
mov
std
jns
daa
out
or
mov
mov
ljmp
or
push
mov
clc
subl
mov
add
int
inc
xchg
mov
decl
push
mov
loop
and
jp
cltd
insb
repz
and
add
mov
jl
lcall
clc
loope
ljmp
sahf
xor
pop
add
sbb
jl
dec
mov
call
inc
adc
mov
dec
xchg
lods
push
ljmp
std
fistpll
ret
out
mov
popl
es
cmp
scas
js
es
cmpsl
in
test
fiadds
outsl
sbb
pop
cmpsl
mov
pop
test
int
mov
out
push
xchg
add
or
ljmp
lahf
aaa
xchg
sbb
cmp
xor
mov
lret
sbb
call
popf
cmpsb
and
inc
and
adc
insl
pop
std
rcrl
sbb
dec
or
lret
pushl
push
jmp
sub
pop
pop
mov
adc
movsb
sti
pop
call
mov
ljmp
mov
jle
ss
mov
cmp
rorl
and
sbb
hlt
xchg
cmpsb
mov
sbb
push
jmp
shl
mov
fwait
test
dec
lret
push
repnz
lret
roll
in
call
sar
das
adc
fiadds
xchg
aad
rclb
test
incl
into
cmpl
es
add
xchg
ret
das
push
pop
lret
int3
push
add
mov
lea
fld
add
mov
add
mov
add
pop
hlt
stc
push
cmpsb
pop
push
and
out
in
aad
fsub
adc
sub
aas
sbb
incl
xchg
mov
xchg
aad
stos
and
pop
sbbl
jg
nop
cli
mov
push
inc
fsubl
mov
lcall
xlat
sub
iret
mov
testl
inc
enter
orl
ljmp
repz
mov
mov
fsubrl
push
stos
xchg
fsts
push
adc
and
cs
mov
in
cmp
mov
add
jae
pop
daa
pop
leave
bound
aaa
mov
incl
pop
mov
mov
lea
jecxz
sbb
cmpsl
lods
leave
mov
or
outsl
clc
call
mov
mov
inc
jle
sub
mov
mov
jo
and
iret
mov
fnstenv
out
mov
popa
stos
or
add
out
or
stos
out
jle
mov
fadd
gs
sbbb
gs
in
xchg
xchg
add
pushf
mov
inc
cmp
ss
cmp
imulb
pop
jle
in
sti
lcall
mov
push
mov
bound
cmp
cmc
xchg
mov
lea
push
adc
pop
imul
mov
ja
mov
jne
xor
pop
into
aad
xchg
pop
mov
insl
or
mov
decl
fisubs
fs
push
push
sub
xchg
push
outsl
mov
aaa
pushf
cmpsl
sbb
and
loopne
lret
int3
mov
lcall
call
push
popa
iret
mov
das
int
leave
insb
or
cltd
sub
dec
cmc
leave
or
mov
jno
jmp
mov
loop
aad
xchg
lods
in
mov
xor
jg
mov
and
pop
xchg
jg
into
stos
pop
and
fwait
mov
cmpsl
sub
jmp
leave
inc
pop
push
mov
incb
inc
mov
hlt
xchg
sub
das
dec
inc
mov
les
xor
inc
push
in
insl
inc
xor
cwtl
jmp
inc
aaa
loop
jmp
mov
add
std
outsb
cltd
xor
mov
pop
adc
mov
imul
inc
xchg
mov
fwait
pop
test
inc
rcll
testl
cmp
and
rcll
mov
jo
inc
rep
cmpsl
cmpsb
xchg
lahf
xchg
sar
xchg
lds
andb
xorl
mov
and
pushl
push
imul
dec
dec
ljmp
loopne
jg
out
mov
dec
xchg
lods
mov
lock
cmp
sbb
lcall
imul
jae
sub
test
cwtl
in
subb
loop
movsl
das
iret
lock
mov
in
ds
jbe
incl
mov
or
shll
rorb
sbb
pushf
sbb
cmc
lcall
mov
mov
popa
jg
add
push
mov
cmc
inc
mov
jae
mov
movb
data16
or
lcall
lods
sti
movsl
test
mov
mov
jae
dec
push
fistpl
mov
das
nop
cmp
dec
rcrb
pop
mov
movsl
ss
or
lcall
mov
inc
lcall
cmc
jl
jmp
jl
mov
mov
lahf
shrb
stc
test
aam
incl
shlb
push
sub
imul
nop
lret
cwtl
cli
pop
mov
movsb
and
inc
dec
sub
nop
lcall
enter
xchg
jnp
or
xchg
and
pop
negb
pushf
adc
movsb
push
inc
xor
cld
es
clc
decl
cmpsb
adc
jb
pop
dec
mov
add
xor
mov
jge
adc
icebp
inc
mov
cmp
in
mov
sub
imull
add
ljmp
add
sahf
and
int3
rcll
pop
xchg
inc
stc
imul
inc
mov
lods
test
cld
out
mov
fidivs
and
inc
fstpt
decl
scas
mov
mov
lds
je
inc
lcall
mov
ficompl
xor
dec
scas
xor
cmp
mov
add
cs
dec
stc
jbe
test
cmpsb
dec
ds
pop
les
mov
and
dec
push
or
xchg
fs
aas
aas
sahf
lds
sbbb
and
in
xchg
fimuls
cld
imul
sbb
inc
inc
in
sub
mov
mov
adc
decl
aaa
jg
aad
cmp
inc
jl
mov
or
movsl
push
fisttps
jae
sbb
cmp
fimull
rcll
pop
sub
sti
dec
outsl
mov
dec
mov
push
lods
push
mov
xchg
xor
dec
mov
sub
inc
rclb
fmull
adc
dec
add
and
jg
aad
adc
test
jge
in
stos
mov
and
sbb
pop
mov
dec
imul
dec
repz
decl
movsl
out
out
mov
loopne
inc
mov
mov
xchg
js
call
nop
stc
xchg
imul
das
and
movl
pop
and
arpl
stc
inc
mov
jl
or
or
sti
mov
dec
cltd
xor
insb
test
neg
pusha
enter
je
out
inc
ljmp
idivb
mov
adc
les
out
negl
and
inc
in
add
mov
dec
and
mov
imul
mov
pop
leave
cli
cmp
stc
mov
inc
mov
xchg
sub
cmp
loop
xchg
subl
cli
lock
addr16
mov
fwait
les
stc
mov
and
shr
pop
pop
adc
les
pop
movsl
rcrb
dec
push
mov
gs
mov
icebp
sub
mov
int
add
mov
and
sub
aam
mov
fsub
rcll
push
inc
mov
adc
fimull
dec
pop
push
adc
mov
call
cmp
rcrl
repz
sarl
rcrb
clc
call
test
add
jnp
pop
cmp
jo
sbb
data16
lods
inc
std
cmp
es
mov
add
mov
fcoml
call
das
mov
popf
pop
idiv
leave
lods
mov
xor
ficoms
dec
jmp
les
imul
mov
adc
mov
leave
incl
outsl
push
jl
inc
lods
test
inc
mov
loopne
cmc
mov
loope
xchg
fwait
ret
cli
lcall
les
cmp
sbb
mov
mov
mov
ficompl
lret
mov
mov
bound
aam
cltd
and
call
lcall
and
imul
mov
lahf
fistl
ret
cmpsb
data16
cmp
fnstcw
mov
inc
xchg
dec
imul
sub
adc
ficoml
clc
call
jge
xchg
pop
and
jp
gs
xlat
pop
test
ljmp
loopne
pusha
cmp
mov
pop
and
icebp
decl
inc
loopne
clc
fwait
xchg
js
sub
pop
scas
ss
mov
jno
xor
mov
jae
xchg
xchg
and
push
in
mov
cmpb
icebp
cld
decl
xor
pop
leave
dec
rcr
arpl
fmuls
mov
scas
xchg
negl
pushl
inc
inc
adc
push
dec
cmp
push
cmp
mov
pusha
inc
lods
mov
mov
mov
filds
add
mov
fisubrs
sahf
into
std
pusha
mov
add
in
add
mov
sub
mov
or
enter
addl
mov
mov
jns
lcall
sub
pop
fwait
xchg
mov
mov
add
inc
add
xlat
insb
mov
subb
mov
push
xchg
pushl
fidivl
push
cwtl
call
push
loopne
aaa
in
adc
mov
orb
clc
pop
std
push
movsb
xchg
wrmsr
and
pop
inc
jp
faddl
lock
xor
jmp
and
loop
pop
lea
call
lods
mov
jle
cwtl
dec
inc
mov
ljmp
mov
lret
xor
xor
ret
call
es
or
ja
ret
sub
sub
repnz
in
xchg
enter
std
dec
xor
and
outsl
sarl
cmp
push
out
cli
jg
pop
rcrb
cld
xlat
push
push
cld
arpl
pusha
fstpl
mov
orl
loope
mov
cmp
incl
add
xor
add
fildll
xchg
dec
es
mov
jo
cmpsb
imul
in
mov
push
sub
lret
jne
cmp
out
pop
lock
jp
popf
das
adc
mov
pop
test
hlt
frstor
jg
cmp
jns
adc
pop
inc
hlt
test
pop
loop
sti
cld
jg
cmp
stc
mov
xor
aad
arpl
pusha
iret
xchg
lds
jae
jg
or
xchg
dec
pop
and
jns
loop
stos
movsb
and
test
test
int3
cmp
xchg
or
add
xor
popf
cmp
mov
mov
mov
mov
adc
sbb
pop
mov
mov
mov
jmp
popf
pand
xchg
test
repz
mov
scas
push
rorl
and
cld
add
sbb
jg
hlt
test
shll
adc
inc
dec
movsb
xchg
lea
int3
pop
fwait
jmp
pushf
js
leave
push
xor
push
scas
movsb
ds
and
sub
jg
loopne
and
mov
mov
push
clc
xorl
sbb
std
dec
xchg
lcall
push
ret
push
cwtl
lret
jbe
test
je
lods
aas
sar
push
int3
sub
adc
gs
lods
mov
mov
ds
adcl
mov
adc
jae
out
adc
jg
sbb
fistl
sub
inc
repnz
mov
rcrl
cwtl
inc
fsubr
ret
pop
sub
mov
mov
das
xor
cmpsb
adcl
or
dec
flds
incl
ret
jo
shlb
mov
pcmpeqw
repnz
or
enter
jmp
cmc
jb
pop
gs
aas
xchg
icebp
scas
mov
popf
imul
leave
ja
jae
dec
inc
orl
jmp
xchg
sub
jae
jecxz
std
push
xchg
mov
pushf
es
call
jns
sub
shll
sbb
ljmp
ljmp
mov
mov
cmpsb
outsb
mov
jne
call
mov
pop
mov
insb
ficompl
lods
xchg
movb
adc
mov
ljmp
out
mov
dec
xchg
das
mov
pop
mov
xor
int
outsl
test
js
mov
mov
lret
pusha
jmp
mov
rorb
xchg
cmp
sbb
push
lcall
push
aad
stos
out
in
das
inc
adc
test
fwait
lahf
imul
jns
sub
mov
fcmovbe
push
fadd
incl
sarl
lock
mov
shr
decb
stc
and
jae
fildl
and
add
xor
add
pop
xchg
decl
or
lcall
xor
aaa
pop
andps
jge
out
daa
mov
out
enter
negb
push
sbb
adc
mov
mov
sar
mov
test
cmpsb
lea
jge
loop
iret
sahf
inc
sub
mov
fs
mov
shll
and
cmpl
andl
decl
xor
daa
pusha
dec
cld
cmp
fstpl
pop
adc
sub
xchg
or
ficomps
inc
mov
cmpsl
lods
insb
push
cwtl
lahf
ret
push
mov
faddp
ja
fnsave
movsb
mov
jmp
outsb
add
lock
mov
pop
fwait
push
decb
in
sti
and
fwait
movsl
decl
mov
sbb
xor
sbb
cmp
xchg
pusha
push
cmpl
cld
fcmovnbe
mov
cmp
cmc
xor
pop
ret
pushf
cmp
popa
insb
in
in
pop
xlat
mov
in
pop
push
pop
test
ljmp
dec
sub
add
addb
jb
insb
movsl
gs
jbe
fs
ljmp
bnd
movsb
jne
out
les
lods
lret
or
xor
ljmp
scas
rcrb
jbe
cmp
out
mov
leave
in
mov
sar
cmp
mov
pusha
cmp
jmp
std
xor
push
cmp
pop
add
pop
aam
pop
cmp
test
mov
data16
movsb
mov
push
mov
add
pusha
jb
int3
jmp
ret
cmp
add
inc
mov
aas
repz
mov
jecxz
hlt
dec
mov
fcoms
call
jo
cmp
add
mov
stc
jmp
cmp
or
out
xchg
push
mov
pop
frstor
sub
xchg
loop
fcomip
jg
cmpb
ja
pop
sbb
or
add
decl
add
jl
nop
insb
rcpps
pop
dec
and
xchg
sub
pop
jmp
int3
iret
mov
xor
jle
and
xchg
push
insb
add
sub
insb
push
mov
decl
pop
cmp
lock
mov
fistl
xchg
cmp
jl
adc
call
xchg
fists
dec
jecxz
fsubrl
fiaddl
sub
push
cmpsb
cmp
sar
jg
push
clc
mov
jecxz
mov
dec
enter
cmp
les
dec
add
jne
adc
jns
jecxz
adc
sub
neg
fbstp
lret
cmpsl
sub
sbb
jmp
push
fs
jl
dec
pop
jo
or
enter
cld
mov
mov
rcrl
std
stc
mov
fiaddl
xchg
xchg
rol
lock
or
lods
das
loopne
ss
jmp
xchg
in
sti
dec
xor
xchg
push
dec
lods
stos
and
pop
xor
add
js
pushf
xchg
xor
dec
repz
dec
movsb
cmpsb
sub
roll
mov
and
ljmp
flds
insl
pusha
call
mov
aam
mov
mov
pop
pop
hlt
jmp
fisubrl
add
out
dec
addr16
mov
ljmp
lret
testb
xchg
sbb
mov
jle
and
dec
xchg
pop
xchg
in
hlt
sbb
dec
rcr
dec
lret
cmp
dec
push
hlt
xchg
inc
mov
lcall
mov
xor
jg
xor
cmc
fwait
xor
rol
out
jmp
jp
out
cld
je
test
xchg
sub
jne
call
int
stc
mov
jb
ret
xchg
push
mov
inc
std
jb
fidivs
call
sbb
pushl
js
ds
aam
adc
dec
and
lret
mov
cltd
jecxz
rcrb
in
cmc
das
je
es
and
call
dec
nop
sub
xchg
sbb
and
mov
cld
pop
fnstsw
es
mov
clc
ljmp
and
imul
push
push
sbb
sub
call
dec
jecxz
stos
sbb
sbb
and
mov
dec
pop
addr16
inc
sbb
push
loopne
fcomip
fneni(8087
mov
dec
cmp
pop
data16
imul
sub
pop
jle
clc
add
test
xchg
pop
pop
cwtl
decl
mov
pop
pop
xchg
mov
mov
das
and
clc
pop
test
jb
out
jb
ret
dec
cmp
xchg
dec
push
xchg
or
xchg
pop
mov
xchg
decl
mov
shlb
sub
bound
aaa
sarb
std
mov
int
hlt
ljmp
fidivl
and
adc
cmp
outsl
push
sbb
fsubl
pop
dec
mov
push
sahf
setae
ljmp
fidivs
aaa
gs
xchg
mov
je
pop
pop
cmp
aaa
es
mov
cld
jno
mov
je
in
and
lret
int3
pop
std
call
lahf
lea
sub
test
fsubrl
lret
data16
in
and
cmp
sub
adc
insl
fistpl
icebp
mov
jl
lcall
data16
imul
jecxz
ret
mov
mov
je
xchg
mov
lcall
scas
cs
mov
sub
mov
fsubl
or
ljmp
mov
and
push
cmp
mov
adc
jo
mov
xlat
incl
enter
push
xchg
xlat
stos
shll
iret
cmc
or
inc
test
or
les
scas
xchg
scas
or
ljmp
shlb
jbe
cwtl
insl
movsl
or
adc
pop
jae
std
movsl
call
daa
dec
in
add
mov
in
lods
xchg
lds
mov
push
mov
in
ljmp
call
add
lds
je
out
dec
jbe
ljmp
dec
nop
popa
and
mov
incl
xor
jb
jecxz
lea
or
loope
xchg
scas
clc
ljmp
data16
nop
push
adc
in
sbb
add
mov
dec
aas
sar
mov
pop
xchg
leave
notl
xor
cmp
ss
cmp
cmp
pushl
mov
pop
jnp
andl
scas
jmp
xor
push
jg
sbb
sbb
pushf
mov
rcrb
sub
bswap
sub
aaa
sbb
push
outsb
pop
stos
out
sti
push
jbe
negb
out
call
ret
mov
xchg
push
fdivrp
inc
sti
xchg
scas
cwtl
lock
push
lret
mov
push
movaps
dec
shrb
test
fwait
and
xchg
ja
ret
out
movsl
pop
ja
xchg
in
or
mov
cmp
pop
loope
lcall
cmp
cmp
pop
shll
rcrl
or
jmp
or
leave
jae
pop
add
ficomps
sti
cmp
xchg
aad
inc
mov
test
sbb
xchg
mov
xchg
fisttpll
lds
js
xchg
js
enter
mov
xchg
push
jmp
inc
mov
xor
jno
movsb
imul
mov
ljmp
xchg
mov
ljmp
jmp
iret
in
mov
xchg
jmp
adc
int3
push
jne
or
push
nop
lock
std
cwtl
imul
sbb
pop
mov
xchg
mov
ljmp
mov
xor
push
cmp
sbb
aaa
pop
sub
inc
ror
call
faddl
sbb
push
push
ficomps
or
inc
jle
test
jl
inc
sub
mov
sarl
fwait
mov
test
loope
and
in
jns
or
mov
scas
jg
aad
addr16
ljmp
adcl
mov
fwait
in
mov
out
stc
fdiv
popf
sbb
jno
stos
movsl
out
push
mov
sti
mov
mov
xchg
call
jmp
out
lods
popa
sub
addr16
xchg
sarb
and
icebp
lcall
xchg
pop
and
ja
or
jns
pop
mov
mov
fs
test
pop
push
inc
adc
daa
cmp
inc
mov
sahf
addb
jne
xlat
push
aaa
insb
std
fisttps
aaa
je
cli
mov
cmp
lret
fstpl
icebp
aas
mov
jnp
rorb
mov
mov
lret
test
jecxz
add
mov
xor
jmp
push
inc
roll
adc
mov
mov
outsb
iret
inc
cmp
pusha
repz
ljmp
fcomp
lock
inc
lock
clc
cmp
mov
xchg
push
mov
insb
or
push
sti
pushl
and
push
mov
sub
sti
pop
ds
nop
mov
mov
insb
xchg
and
shll
and
cld
imul
movl
mov
test
test
ss
incl
outsb
pop
pop
and
mov
or
xor
decl
fistpll
and
jecxz
pop
aaa
aam
cwtl
mov
push
add
ljmp
mov
sahf
stos
mov
ret
mov
std
cmp
test
mov
roll
addb
mov
xor
clc
mov
mov
cli
add
push
clc
notb
lods
xor
sub
and
call
jl
and
aad
lahf
cmp
adc
outsl
aaa
or
pusha
mov
jp
xor
int3
jg
lcall
fdiv
jbe
in
icebp
jne
cmc
mov
fs
incl
testl
lock
xorl
xor
incb
je
and
mov
cld
push
es
or
movsb
inc
clc
mov
ror
out
or
inc
cmp
sarl
das
test
and
cmp
or
push
xchg
or
and
lods
sub
xlat
adc
call
xchg
inc
nop
lret
push
sbb
icebp
and
hlt
ljmp
mov
adcl
sub
sti
sbb
js
aam
cmp
clc
lcall
mov
frstor
ret
mov
sub
decl
inc
mov
mov
push
dec
mov
cmpsl
cld
pop
outsb
push
in
icebp
push
add
cmpsb
jg
xchg
sbb
mov
es
into
cltd
scas
movsb
icebp
ljmp
int
leave
push
fstpt
push
cmc
mov
rcll
jmp
incl
dec
xor
out
movsb
int
jae
incl
mov
pop
mov
sti
jge
clc
mov
jle
lahf
jle
cmpsl
roll
mov
cmp
push
je
pop
adc
or
hlt
xchg
and
fdivs
out
or
lahf
pop
jns
mov
xchg
fldenv
push
jbe
pushl
lahf
sahf
aas
pop
jno
jecxz
mov
lahf
rclb
cltd
mov
pop
xor
loop
dec
and
pushl
cld
xchg
into
fidivs
pop
shlb
flds
pop
ja
and
jg
cltd
sbb
loop
test
cmp
mov
push
sti
sub
pushl
lods
les
arpl
xchg
inc
repz
bound
mov
sbb
ja
pop
adc
mov
std
sbb
fdivr
jmp
orb
and
jnp
movsb
lods
sbb
mov
jg
sub
sbb
rolb
inc
lods
jo
push
ljmp
or
stc
outsl
repnz
and
lahf
imul
jp
pop
sbb
incl
subl
cli
jge
adc
decl
sub
aas
sti
or
aaa
enter
jge
pop
inc
movsl
js
pop
test
mov
incl
sbb
daa
inc
scas
jo
dec
fisubs
lock
sub
adc
mov
mov
push
clc
sub
out
jb
call
int3
sbbl
adc
roll
add
mov
push
push
mov
ret
or
call
add
mov
xchg
xor
imul
into
sbb
jecxz
popf
mov
pop
jle
in
ljmp
movsl
popa
icebp
shl
int
test
in
cmp
xchg
in
aaa
add
push
aaa
fcomps
ja
mov
jae
push
pop
aaa
push
mov
mov
out
into
jge
xor
fldl
hlt
fcomip
incl
dec
pop
dec
pop
imul
sahf
jmp
incl
push
jno
ljmp
test
mov
xchg
or
mov
jg
decl
xor
and
push
inc
lahf
out
jge
push
inc
add
ljmp
and
xor
cmp
andb
jl
insb
fbld
sub
adc
xchg
lds
pop
cld
popa
pushl
out
test
outsl
data16
dec
xor
je
xor
ret
xorl
xchg
mov
xchg
inc
cmpsb
jbe
dec
outsb
sbb
sub
jno
and
and
ljmp
or
es
xor
jmp
cld
ljmp
dec
adc
sbb
out
jne
and
jb
sar
call
add
xor
mov
jno
xor
les
shll
pop
push
and
push
cmp
xchg
cmpsb
insb
pop
fldenv
int
push
nop
incl
ljmp
add
mov
pop
mov
rol
int3
and
imul
fxch
jne
inc
and
aad
xor
add
pop
std
push
repnz
jmp
cmpsb
add
dec
loop
daa
call
push
mov
jg
movl
mov
xchg
ficoml
into
or
xchg
out
es
out
sbb
mov
fdivl
xor
gs
repnz
jmp
sub
push
dec
lret
insl
mov
cmp
ljmp
out
adcl
test
adc
fisubrs
adc
pop
and
dec
sbb
push
out
incl
push
dec
pop
mov
ret
inc
insl
adc
push
push
jp
stc
lcall
nop
in
and
repz
ja
add
call
je
int3
jne
inc
xchg
jmp
mov
test
test
push
mov
inc
fwait
ljmp
mov
das
insl
ror
add
inc
ret
jns
out
mov
nop
mov
cli
je
fldl
incl
sub
xchg
mov
sub
add
sti
aam
out
and
mov
jo
insb
inc
ret
xchg
mov
push
inc
mov
stos
mov
pusha
and
fdivrs
loopne
div
add
xchg
mov
and
mov
std
dec
mov
adc
dec
loopne
cmp
je
lret
xchg
xor
mov
ljmp
rcl
fs
clc
adc
xor
jno
mov
sbb
mov
sbbb
push
inc
xchg
push
call
sahf
ja
aas
add
adc
aaa
push
xchg
jnp
or
pop
push
jae
inc
jae
divb
insb
decl
iret
inc
sub
vcvtsi2sd
adc
jae
iret
adc
fsts
xor
lcall
cmc
or
pop
aas
sarb
jno
jae
and
imul
das
scas
sub
aas
mov
mov
jle
jmp
fisubs
cli
mov
pusha
sub
lea
es
mov
mov
add
and
ds
aad
lret
mov
ljmp
jb
scas
or
fsts
je
jle
fcmovnb
lods
dec
jae
adc
or
push
xchg
outsb
mov
stos
mov
mov
cmc
ja
in
pushl
fildl
and
out
idiv
sub
stos
dec
dec
dec
xchg
or
scas
adc
les
inc
gs
jmp
mul
push
or
push
inc
jl
into
loope
mov
or
mov
stos
dec
mov
jg
mov
dec
lret
push
pop
ljmp
repnz
inc
aam
fisttps
arpl
jmp
push
jbe
aaa
cmpsl
push
mov
insl
push
mov
adc
cmp
stos
mov
xor
and
frstor
hlt
jo
xor
cld
sbb
lods
and
sahf
pop
cmp
arpl
insb
lcall
dec
fidivrl
dec
dec
cs
dec
fldenv
push
push
aam
cmp
xchg
ret
xchg
jno
decl
dec
adc
mov
movsl
mulb
xor
int
imul
insl
xor
adc
fsub
shll
push
xchg
mov
out
out
mov
push
mov
stos
cmp
shll
lcall
cltd
ror
push
test
jg
addl
cmpb
fcomip
jmp
xchg
mov
int
shll
mov
adc
out
mov
or
addb
fst
sti
xchg
incl
mov
or
shl
xchg
rorl
leave
jmp
divl
jle
inc
das
push
mov
cmp
decl
jmp
sub
fwait
call
pop
icebp
xor
gs
cmp
mov
adc
mov
jle
lock
or
cld
dec
sub
gs
shrb
mov
jg
fcmovbe
jno
shrl
out
jo
lcall
mov
out
xchg
in
imul
adc
mov
shll
fwait
loopne
aaa
dec
pop
ja
or
push
fwait
mov
mov
inc
xchg
call
adc
ret
mov
ficomps
inc
pop
mov
or
outsb
add
sbb
inc
xchg
mov
and
sub
in
clc
jg
mov
repz
xchg
ljmp
add
add
fcomip
fistps
icebp
xchg
xor
cmp
push
dec
cmp
out
xor
mov
lret
repnz
cmp
push
or
out
cmc
notl
cmp
cmpsb
andb
ret
test
ljmp
in
fnsave
out
pop
add
ret
sbb
enter
push
pusha
push
jg
mov
adc
pushl
cld
or
inc
jmp
ret
stos
call
incl
mov
mov
push
jae
sahf
js
ljmp
sub
fistl
add
adc
cmp
in
decl
push
fs
xor
in
and
pushf
imul
lahf
shrb
push
inc
cmp
decl
sti
xchg
loop
scas
lcall
or
or
sub
pop
xor
lcall
insb
lock
aaa
push
xchg
insl
out
xor
or
pop
mov
and
sub
ja
ret
cwtl
imul
sarb
mov
mov
mov
insl
jae
xchg
mov
into
mov
outsb
cmc
mov
sub
mov
loope
xchg
jne
cwtl
aam
fst
dec
in
mov
add
pop
xor
popa
out
adc
aam
cmpsb
lods
fwait
sti
cmpsb
pop
lahf
fbld
mov
nop
xchg
adc
imulb
or
clc
pop
in
out
out
jno
scas
xchg
enter
aaa
add
push
lcall
lret
push
gs
sti
push
mov
lcall
or
xchg
out
lret
mov
mov
pushl
xor
jp
xor
bound
cmp
inc
movsb
insl
hlt
outsl
push
cs
out
mov
ljmp
inc
dec
adc
cwtl
dec
or
jg
inc
cld
add
xor
sub
test
dec
mov
lret
jle
and
inc
sarl
push
xor
ficoml
cli
jle
push
pop
ret
push
pushf
or
inc
adc
sub
pushf
rolb
aad
icebp
xchg
bound
mov
movsl
rcrl
or
dec
jle
pop
sub
cmp
in
scas
pop
cmp
jno
dec
mov
push
or
fcoms
or
cmp
add
clc
jp
jp
movsb
test
ljmp
icebp
and
mov
lahf
push
push
lcall
or
mov
pop
and
mov
testb
sarb
call
aas
inc
xor
pop
ja
fwait
es
adc
repnz
insl
iret
icebp
lret
mov
xchg
mov
call
ret
fidivs
inc
xchg
push
dec
mov
mov
sbb
xorb
ljmp
push
data16
xchg
insl
ret
scas
mov
idiv
ds
test
mov
push
hlt
cli
mov
aaa
imul
lret
dec
jmp
cmp
push
arpl
call
fs
ja
push
int3
push
arpl
ljmp
cltd
iret
sub
incl
xchg
insb
fbstp
xlat
pushf
mov
add
xchg
and
adc
xor
jmp
cmp
jecxz
jmp
in
and
aam
jp
les
dec
pop
mov
call
rcrb
in
push
jmp
nop
sbb
dec
loopne
mov
jg
inc
clc
fstl
loope
icebp
je
cmp
shrl
leave
xor
jae
fcomip
call
cmp
dec
mov
imul
push
cmp
add
ss
fisttps
decl
sbb
pop
add
nop
stos
out
addb
loope
call
jmp
pop
imul
movb
pop
push
je
cmp
decl
push
sub
orb
out
push
or
jnp
push
gs
fwait
jo
dec
jae
mov
enter
sahf
cmp
mov
mov
arpl
fstpt
sbb
lea
jbe
dec
xchg
cmp
aam
lock
fwait
sbb
outsb
shrl
cli
jmp
xor
xor
push
xor
cmc
mov
mov
and
popf
mov
stc
sub
repnz
cs
orb
and
inc
and
mov
test
pop
xchg
cmp
jg
or
or
inc
shrl
lcall
sub
pop
push
sti
in
outsb
popf
inc
dec
jb
jbe
ret
movsl
jae
lcall
lahf
test
xchg
xchg
inc
subb
es
bound
push
scas
xor
sar
and
pusha
lret
lds
mov
mov
imul
sahf
ret
push
inc
cli
xor
and
decl
xor
xchg
ds
add
xchg
lock
repz
inc
iret
dec
dec
add
call
stc
lods
fsts
pop
aas
lret
push
out
dec
dec
aaa
pop
xorb
jg
push
lods
mov
sbb
and
mov
in
loop
xor
pushl
or
pusha
and
sti
dec
adc
cmpsl
cmp
popf
ja
pop
and
fs
sub
pushl
inc
mov
dec
jbe
in
dec
das
sbb
test
push
xor
and
aad
sub
inc
xchg
add
ja
stos
jle
mov
addb
ljmp
cld
mov
push
adc
pop
adc
leave
jnp
mov
hlt
into
mov
decl
dec
xor
scas
dec
adc
arpl
and
cmp
ljmp
or
lret
lea
fldz
fld
pop
pop
shr
in
lahf
loop
add
or
inc
jge
and
sub
cli
scas
pop
xchg
lods
or
xor
jb
sahf
push
scas
sarb
inc
jnp
mov
cwtl
dec
scas
xchg
into
or
daa
pop
fldenv
test
fdivl
pop
cld
jae
ljmp
std
lret
mov
imul
lea
fmul
mov
fisttpl
mov
inc
lock
incl
lods
push
cmp
mov
cmp
loop
and
mov
mov
xchg
clc
movsb
add
mov
adc
jns
push
cmp
pop
movsb
jg
adc
rorb
inc
dec
pop
inc
out
mov
fmuls
call
inc
mov
cmp
or
test
cmp
inc
push
lock
jl
lods
dec
aam
insb
mov
push
popa
ret
dec
xchg
call
cmpsb
xchg
gs
mov
addr16
inc
jmp
dec
xchg
pop
jnp
cmp
add
fucomip
and
dec
repz
push
mov
test
pop
out
mov
mov
xor
test
int3
popa
pushl
cmp
mov
sub
fists
sbbb
adc
mov
or
outsb
leave
pushf
jp
out
xchg
inc
aam
push
mov
push
outsb
mov
in
dec
stc
mov
and
aaa
push
sub
push
mov
xor
sbb
jns
les
add
inc
rcrb
decl
adc
xchg
rcrl
dec
scas
xchg
cmp
sbb
cmpsl
push
push
mov
lret
js
jmp
aaa
jae
out
dec
decl
and
daa
adc
sub
ret
jne
pop
jecxz
test
ljmp
sub
jg
and
mov
and
ret
in
clc
aas
movb
mov
hlt
cmpsb
mov
loop
lahf
in
mov
scas
lahf
and
push
mov
sbb
mul
push
hlt
ljmp
jb
mov
sti
pop
sub
loop
insb
in
cmp
push
bound
repz
bound
xor
mov
repz
pop
mov
sbb
adcb
jmp
jl
divb
test
xor
push
push
inc
aas
fucom
cmp
mov
jmp
xchg
xchg
xor
sub
nop
enter
mov
add
shrl
push
mov
shrl
or
xchg
shl
imul
lock
outsl
push
rolb
nop
hlt
jbe
dec
das
add
cli
ljmp
outsl
movsl
cmp
adc
inc
mov
xor
adc
scas
outsb
dec
nop
shr
lcall
mov
cmc
dec
cli
scas
lret
notb
push
sub
mov
popf
or
push
test
push
mul
fcomps
fiaddl
mov
push
out
mov
lods
dec
js
out
fsubs
rep
xor
push
sbb
and
mov
xchg
pushf
and
stos
fcomip
cli
cwtl
out
in
enter
pop
or
cmp
pop
int
xchg
clc
cli
movb
add
inc
sti
stos
mov
jb
addl
addr16
pop
incl
xchg
cltd
mov
jnp
arpl
pop
push
fiadds
mov
cs
pusha
mov
mov
call
pminsw
scas
sbb
pop
pop
mov
cmpsl
ret
cltd
and
pop
xlat
jg
jg
ja
xor
inc
dec
push
lret
pop
mov
pushf
jg
push
push
inc
mov
fsubr
jmp
fadds
xor
sbb
sub
imul
call
mov
adc
and
aad
decl
hlt
out
int3
xchg
cmp
mov
push
mov
adc
popa
cmpsb
push
and
dec
adc
ja
shl
push
std
xchg
jl
mov
scas
lret
shlw
dec
popa
nop
mov
jbe
xchg
mov
xchg
mov
push
fdivrl
push
lds
add
or
imul
hlt
stos
mov
dec
or
ss
dec
add
or
fstps
cwtl
and
inc
xchg
hlt
decl
insb
popf
cwtl
outsb
orl
dec
call
scas
aam
outsb
add
fcoml
adcb
arpl
add
outsb
mov
loop
pop
pop
mov
xor
pop
sub
pushl
pop
movsb
in
aaa
and
mov
add
add
sub
inc
enter
jmp
incl
stc
loopew
ljmp
sub
mov
dec
xchg
sbb
outsl
mov
lahf
leave
xchg
mov
xor
es
lret
dec
pop
xor
jmp
dec
negb
xor
fsubs
push
xor
push
bound
inc
push
xor
shll
jg
mov
inc
stc
loope
sbb
add
aad
mov
jmp
pop
es
pop
and
push
or
mov
pop
add
sbb
ss
mov
pop
cli
mov
xor
inc
xor
fstp
lcall
add
loope
push
insl
cld
call
lods
pop
ss
inc
icebp
pop
mov
xchg
int3
mov
and
lcall
ret
cwtl
jle
push
xchg
sbb
stos
test
clc
call
pushf
hlt
mov
sbb
dec
xor
mov
test
outsl
jo
or
mov
cmpsl
pop
mov
adc
and
jns
into
mov
add
decl
fidivrl
orl
in
pushf
mov
rcl
push
test
sbb
xor
enter
sahf
fsts
add
xor
xlat
xchg
xchg
sub
sbbb
push
ljmp
iret
sub
xchg
add
dec
mov
pop
insb
dec
sbb
movsb
pushl
int3
jl
into
lret
shll
or
inc
dec
les
dec
push
sub
xchg
fidivl
out
ja
fwait
jp
cmc
aas
cmpsl
popa
fcomps
jnp
js
cmpsb
in
pop
ficoms
inc
aam
sub
pushf
mov
ljmp
ret
int3
in
dec
mov
mov
ret
xchg
inc
push
push
push
out
jecxz
and
pop
fnstcw
cmc
jecxz
and
mov
aad
out
mov
adc
jae
ret
mov
push
mov
jg
sub
cltd
sbb
xchg
dec
out
insb
inc
inc
imul
clc
idivb
jmp
pop
jns
inc
mov
call
hlt
xchg
jmp
ljmp
arpl
mov
call
xchg
arpl
ljmp
mov
adc
cmc
negb
mov
stos
out
test
push
mov
push
lahf
dec
decl
jg
out
xor
psubsw
dec
push
fs
adc
mov
lcall
push
ds
or
xorb
sbb
leave
insb
scas
lea
clc
jg
mov
add
imul
push
cmp
add
ljmp
fwait
roll
xor
imul
shll
ret
sub
mov
jmp
outsb
aam
xor
int3
enter
dec
icebp
push
or
mov
punpcklbw
decl
adc
add
movsl
dec
sbb
in
jge
stc
jbe
ja
scas
int
lret
call
jmp
lds
js
cmp
incb
jmp
dec
push
xchg
das
or
aam
inc
aam
mov
insl
add
popf
mov
decl
xchg
stos
sbb
testl
jno
std
add
or
lea
in
loopne
dec
add
fnclex
and
cmp
pop
jb
push
ljmp
pop
cli
pop
mov
outsl
mov
and
fisttps
push
out
call
gs
out
out
xor
sub
out
mov
js
sbb
and
pop
lods
incl
cmp
push
test
fst
cmpsb
ja
call
cwtl
test
jp
xchg
push
lahf
lcall
xchg
xlat
and
push
cld
rcrl
sbb
jp
jne
xchg
inc
or
enter
inc
stos
outsb
jmp
pushl
shll
cmp
js
sbb
push
mov
jnp
es
out
cmpsl
jmp
cld
dec
pop
ret
js
pop
rcr
ja
les
ds
insb
ds
fcoml
xchg
div
sub
jbe
adc
fldcw
mov
add
inc
fiaddl
adcl
jbe
jnp
mov
jge
data16
cmp
out
les
mov
pop
adc
call
in
cli
in
inc
adc
ficomps
hlt
push
in
dec
inc
rorb
mov
sub
add
fmull
cmc
cltd
mov
lret
scas
pop
adc
fsts
pop
jle
push
pusha
cmp
jg
adc
das
cmp
orb
iret
je
push
xor
pop
dec
and
incl
cmp
cmp
adc
or
mov
stos
pop
cmc
push
stc
xchg
lds
cwtl
xchg
mov
pop
daa
dec
repz
je
sbb
add
push
test
call
dec
mov
push
xchg
rcr
call
fwait
lret
jl
jne
push
cmpsb
fiadds
jecxz
sbb
dec
cli
incl
pop
and
popf
loopne
inc
sub
ljmp
or
dec
lds
loop
mov
or
push
rcrb
loope
jns
cmpl
stos
fwait
mov
cltd
js
fistpll
mov
mov
fisubs
adc
pop
lahf
or
incl
push
int
sub
pop
in
jns
xchg
sahf
into
push
add
ljmp
into
lcall
add
mov
pop
adc
push
outsb
or
inc
cmp
out
data16
inc
push
fildll
jb
mov
inc
or
popf
out
dec
scas
test
rclb
bound
aad
xchg
jmp
cmpsl
pop
jne
ret
pop
stos
decb
arpl
cmp
pop
fdivl
orb
jnp
scas
loopne
mov
xlat
xchg
adc
and
jmp
cs
clc
idiv
repz
pusha
in
push
mov
sbb
and
ret
sbb
outsb
jbe
hlt
negb
add
sbb
mov
jbe
dec
sub
dec
rclb
add
mov
jge
filds
or
in
xchg
pop
adc
pop
sub
ret
push
xchg
imul
call
lock
add
bound
mov
xor
cmp
and
mov
cmp
mov
lock
push
lods
mov
sti
notl
insl
sar
push
outsl
sub
ja
insl
mov
pop
and
sub
inc
mov
dec
dec
mov
push
lods
jmp
jge
mov
push
js
stc
xor
jmp
jmp
xchg
pop
repz
shr
movsl
pop
jg
in
jb
push
cmp
mov
pushf
fisubrs
dec
mov
mov
imul
fcomip
cltd
rolb
pop
test
xor
cwtl
movsl
shll
add
or
cmpl
xchg
pop
mov
xchg
repnz
add
mov
decl
and
mov
outsb
lcall
sub
mov
mov
lcall
rorb
sbb
repnz
test
push
cmp
lods
mov
fldenv
aaa
std
call
test
dec
add
xor
clc
pushf
push
push
add
mov
cli
mov
call
int3
repz
dec
ss
xor
or
cli
fiadds
mov
adc
insb
push
rolb
in
sub
lahf
loopne
add
inc
hlt
jnp
loope
and
enter
sti
lods
cmp
call
rcl
into
lods
fbstp
xor
xor
sti
pop
and
push
pushl
push
pop
in
flds
jmp
sub
jle
mov
jp
out
lahf
sbb
jge
js
mov
jbe
inc
pop
push
mov
es
int3
jo
pop
shlb
lahf
rorl
cwtl
rclb
movsl
adc
cli
push
xchg
test
mov
insl
lods
sarl
push
push
ljmp
clc
jbe
mov
xchg
test
mov
mov
lcall
xchg
mov
xorl
call
pop
cs
adc
out
jle
rcrl
pop
pushl
std
lcall
bound
push
push
leave
inc
mov
lret
aas
outsb
dec
mov
sarl
pushl
mov
inc
inc
inc
bound
push
mov
inc
sbb
testb
inc
jmp
jmp
test
faddl
jo
movsl
xlat
stos
xor
decl
in
and
push
aad
push
les
cmc
aad
fisttps
and
mov
xor
xor
dec
lret
lods
bound
out
sbbl
out
hlt
sbb
sub
int3
imul
or
out
aad
addl
xlat
fwait
stc
xorb
repz
imul
adc
dec
incl
ljmp
mov
adc
or
fldenv
decl
pop
ljmp
fidivl
in
sahf
je
imulb
daa
leave
cmp
cmp
cmp
jns
xchg
arpl
or
xchg
bound
jle
out
push
stc
outsb
clc
in
xchg
andps
popf
push
fs
jne
mov
push
lea
ljmp
sar
sub
inc
pop
pop
inc
es
imul
push
xorps
lcall
xchg
aam
call
or
test
dec
jmp
test
sub
lcall
adc
pop
mov
add
fld
inc
inc
aaa
stc
in
or
mov
mov
push
lret
jle
xlat
jmp
lcall
pop
outsl
aaa
mov
ss
testl
aaa
inc
ljmp
lcall
jge
enter
add
mov
ret
inc
xchg
insl
add
imul
push
std
push
je
int3
mov
in
push
xchg
lods
or
pop
test
adc
insl
out
adc
add
mov
sbb
jmp
sub
andl
push
sbb
sub
push
jp
jno
popf
xor
hlt
test
cmpb
mov
add
adc
aaa
adc
rol
aam
sub
cli
inc
xchg
xor
das
stc
std
sbb
idiv
mov
sar
push
push
push
xchg
mov
lea
inc
push
pop
cli
ljmp
sar
pop
cli
sbb
xchg
and
aam
pop
sti
jno
pop
mov
cmc
push
mov
call
xchg
lods
and
loope
push
inc
and
mov
in
push
ds
out
call
push
push
inc
adc
sbb
push
xchg
xchg
stos
rcrl
pop
roll
loop
data16
lcall
xor
cmp
cs
int
clc
or
lahf
mov
xchg
pop
repz
adc
hlt
jg
lods
es
adc
ja
xor
mov
ljmp
mov
cmc
pop
out
mov
adc
aam
call
sbbl
xor
xchg
lcall
mov
jge
mov
les
in
jne
ja
mov
add
cmp
testl
in
adc
jns
and
xchg
dec
jmp
int
inc
cmp
into
loop
je
jle
ljmp
xor
out
push
sub
sub
dec
mov
adc
lcall
jnp
mov
xlat
mov
cmpsl
popa
movsl
mov
adc
adc
ds
pop
sarb
enter
cmp
mov
ljmp
call
jp
adc
gs
daa
int3
inc
sbb
aam
std
pop
dec
add
xor
das
rcr
nop
inc
jle
push
lahf
fildll
in
pop
mov
jmp
cmp
xor
sub
in
cmpsl
xor
incl
cld
inc
xor
imul
xchg
and
lcall
sub
pop
xor
sahf
xor
sub
lret
jp
push
ss
fcoml
jl
les
adc
lods
jl
mov
fbld
xchg
dec
lret
push
push
sti
shlb
aad
test
mov
pop
mov
imul
negb
incl
cltd
ficoms
aas
pop
sub
ret
call
cmpsl
xchg
gs
rorl
in
insb
pop
scas
lcall
stos
iret
subb
sti
mov
adc
pop
pop
cmp
cmp
aaa
std
dec
mov
mov
mov
jbe
cli
push
sahf
mov
fsubrs
pop
fcoms
shll
push
cwtl
mov
lcall
mov
cmp
jge
js,pt
sbb
addr16
jl
aam
rorl
add
mov
pop
xchg
sbb
aas
pushaw
scas
mov
xchg
pop
xor
sbb
pop
push
xor
popf
sub
or
adc
setne
mov
jmp
dec
bound
push
jae
in
pushf
mov
int3
jmp
mov
ret
ja
mov
fbld
rol
mov
divl
pop
lahf
push
mov
push
incl
cltd
std
pushf
xchg
mov
jo
sub
lret
dec
lret
out
ret
xorl
stos
mov
push
inc
dec
loope
loopne
jmp
push
sar
mov
stos
fdivrl
shl
into
jae
or
or
push
pop
repz
push
stos
adc
inc
scas
frstor
es
lret
lods
fisubrl
fidivrs
popf
sbb
add
stos
data16
adc
dec
cmpsb
out
loop
pushl
leave
pop
mov
mov
nop
mov
sub
or
ljmp
add
fsubrs
cwtl
lret
icebp
xor
cs
sbb
call
sub
sbb
push
dec
addr16
shrb
out
fidivrs
or
repnz
add
cmp
pop
cltd
push
push
push
mov
cmpsl
jbe
pop
mov
call
dec
jmp
sub
jl
add
cmpsl
xchg
adc
dec
outsb
adc
inc
xchg
mov
or
test
in
aad
dec
cli
ljmp
not
pextrw
xchg
adc
adc
aad
sar
inc
jmp
dec
mov
or
insl
push
dec
sar
js
sti
push
dec
neg
jbe
dec
lock
scas
or
je
fcomps
push
popf
je
stc
sbb
add
mov
jg
aas
xchg
add
mov
fiadds
mov
or
call
cmp
cld
adc
jns
mov
or
push
lret
outsb
mov
mov
mov
push
mov
imulb
cld
loope
xchg
std
add
scas
xor
cwtl
fdivl
push
pop
cli
aas
int
inc
sub
push
lea
in
je
and
push
popa
xchg
jle
push
inc
mov
bound
push
xor
xor
jb
int3
cmpsb
xchg
nop
cmpsb
cmp
jmp
dec
dec
stos
xor
xchg
dec
xor
mov
add
gs
dec
sbb
inc
stos
or
ljmp
ret
jmp
jmp
jno
scas
push
loopne
scas
cmp
mov
call
mov
cmp
rcrb
lods
cmp
push
xchg
or
dec
dec
inc
push
clc
incl
mov
cmp
mov
mov
andb
pusha
arpl
repnz
lods
out
dec
outsl
adc
push
cld
sbb
cmpsb
xorl
repz
xor
cmp
cmp
mov
mov
inc
jnp
fcoms
mov
in
adc
aad
mov
outsb
in
cli
test
incl
cld
imul
mov
inc
xor
mov
pop
negl
call
mov
cs
mov
in
out
outsl
clc
mov
push
and
push
adc
repnz
ss
mov
ljmp
fnsave
mov
dec
jle
and
xchg
rol
pop
xor
adc
ss
cli
cmp
fadds
pop
inc
push
ret
mov
jno
fnstcw
xchg
aaa
or
jo,pt
negl
mov
aaa
jbe
xchg
fiaddl
cmc
ret
ljmp
push
fldt
pop
inc
addr16
nop
scas
cmp
adc
outsl
fsubs
jno
mov
popa
mov
lcall
adc
add
out
imul
mov
psubw
add
inc
cmc
inc
dec
inc
jne
decl
shll
out
adc
mov
sar
and
iret
test
sahf
incb
add
xor
mov
lcall
lds
cmp
inc
std
push
sbb
fcompl
adc
daa
cli
ja
add
negb
pushl
cwtl
test
adc
aam
mov
inc
shrb
ret
shlb
mov
or
push
xchg
outsl
repnz
leave
cli
sub
lods
lcall
ljmp
cwtl
and
decb
out
ljmp
decl
cmp
fs
mov
enter
ror
mov
hlt
lea
incl
hlt
mov
out
popf
movsb
add
inc
or
fmul
cmp
push
mov
dec
jns
hlt
inc
jbe
adcl
sarb
idivb
in
loopne
mov
aad
jecxz
std
outsl
ja
fnsave
inc
mov
call
icebp
jg
and
push
xor
xchg
scas
xor
dec
ja
fbld
mov
sbb
xor
pushf
push
int
pop
inc
lea
incl
xchg
adc
mov
jmp
pop
inc
lahf
jg
inc
lret
stos
cs
mov
loopne
fbstp
loope
repz
xor
ret
inc
pop
mov
adc
and
jnp
jg
inc
lea
fiadds
in
mov
andl
push
aam
push
lock
jmp
xor
mov
dec
pop
imul
insb
loopne
js
add
cmpsb
pop
cmpl
mov
std
les
push
data16
imul
push
orb
jae
daa
gs
sbb
fidivrl
cmp
ja
sub
out
xor
xchg
call
adc
xchg
js
test
adc
xchg
stos
lahf
mov
insb
es
mov
pushw
addr16
jno
flds
mov
shrl
mov
popa
xchg
hlt
pop
hlt
ret
or
sub
fistps
call
adc
or
movsw
sahf
das
leave
pop
outsb
mov
xchg
jo
outsl
lods
jg
mov
jns
pop
shll
sti
add
fstpt
jmp
cld
mov
inc
fistl
push
stos
daa
dec
jl
xchg
jmp
int
adc
gs
mov
inc
aam
stc
xchg
idiv
incl
adc
divb
imul
es
jecxz
add
xchg
data16
cmp
imul
inc
bound
mov
and
dec
fs
call
scas
andb
inc
cmp
stc
shl
push
lcall
pop
movsb
sub
dec
dec
fcmovnbe
fisttpll
or
aaa
pop
mov
and
lods
push
mov
subb
ja
jge
inc
movsb
add
fs
mov
aam
ljmp
fimull
loop
arpl
aad
and
push
ljmp
je
lcall
call
push
inc
pop
loope
xor
pop
in
mov
push
jo
or
mov
dec
xchg
dec
sbb
pop
jmp
mov
inc
jp
int3
enter
cmp
and
pop
or
arpl
xorl
int
outsb
add
int
lahf
imul
sub
lcall
add
stos
test
jmp
frstor
push
mov
ja
mov
pushf
fs
push
pushf
push
fsubrl
push
pop
push
in
mov
lods
insb
imul
jo
or
sbb
les
icebp
cmp
mov
jmp
cmp
in
sub
mov
sahf
sarb
adc
push
outsl
inc
mov
ret
pop
outsb
jnp
in
mov
mov
subl
jg
or
aas
ret
imulb
mov
cmp
out
into
and
insl
lock
setne
lcall
adc
fldl
hlt
pushl
sub
test
jmp
test
jecxz
test
fs
cmp
ljmp
jmp
hlt
push
push
jmp
or
adc
arpl
cld
cmp
dec
out
call
xchg
icebp
and
and
adc
sti
clc
out
loop
lds
xchg
xor
gs
ljmp
lods
push
call
enter
jmp
add
xchg
adc
ja
sti
fsts
cli
lcall
cmp
xchg
cmc
push
or
cmp
mov
call
loopne
subb
pop
gs
sub
loope
inc
jecxz
js
test
push
xchg
mov
pusha
stc
adc
fisttpl
push
pushl
pop
std
mov
mov
ljmp
or
mov
pop
pop
cwtl
add
data16
xchg
dec
inc
dec
lea
jecxz
ds
mov
dec
lcall
add
sbb
rcrb
neg
mov
int
ja
cmp
divl
shlb
ljmp
xchg
and
add
and
cmpsb
mov
pop
int
decl
or
adc
lahf
xor
das
outsb
in
xlat
and
sahf
imul
adc
call
jns
into
sbb
in
aam
adc
sub
rolb
pusha
cs
loopne
in
sub
ljmp
mov
jmp
rcr
or
notb
sbb
dec
and
pushl
iret
fcoms
fidivrs
hlt
cwtl
pusha
sbb
xchg
sub
push
out
cmp
mov
or
and
test
incl
mov
push
pop
lods
stos
arpl
leave
lahf
pushl
add
ds
inc
push
cmpsl
pop
xchg
mov
add
pop
inc
sub
aam
outsl
dec
decl
cmpl
sub
sub
cmp
xor
pusha
popf
fstl
loopne
push
dec
icebp
inc
push
adc
mov
dec
loope
int
inc
mov
sub
sbb
pushl
push
cmc
scas
inc
push
push
std
mov
xor
ljmp
mov
mov
xor
movsb
pop
adc
mov
mov
xchg
inc
dec
mov
test
xor
add
xor
push
inc
cwtl
sub
fcomip
ljmp
jb
fbstp
jmp
lea
icebp
out
loopne
xchg
jb
jg
gs
icebp
jge
shlb
ret
pop
xlat
out
and
outsl
mov
pusha
sbb
popa
rolb
call
push
test
inc
pop
loopne
outsb
movsb
lods
iret
fwait
mov
pop
xor
xor
inc
stc
cmovle
incl
jno
mov
ljmp
pop
mov
mov
sbb
cmpsb
and
xor
mov
das
es
adc
sub
cmp
arpl
fmull
outsb
scas
jge
and
nop
dec
stos
lea
sub
sysret
sbb
fnstcw
inc
subl
ficomps
test
mov
jns
or
cld
es
push
mov
inc
in
xchg
xlat
xchg
ljmp
outsb
sbb
lret
push
jae
pop
js
sbb
adc
lahf
int
lcall
lcall
sub
imul
pop
int3
loopne
push
sti
inc
pop
call
daa
cmp
jecxz
cmc
mov
jae
aaa
push
pop
stc
mov
inc
addb
sbb
sub
cmp
loop
pop
hlt
decl
mov
cltd
les
mull
inc
imul
mov
decl
lret
mov
lea
jns
rcrb
cli
ljmp
fadds
mov
dec
loopne
xchg
xchg
orl
call
xor
cmp
ret
pop
scas
mov
inc
lcall
lcall
or
jns
and
xor
or
push
lcall
lds
mov
arpl
out
mov
push
stos
push
aam
sub
mov
ja
adcb
bound
fisttps
jmp
inc
movsb
or
or
jle
or
jmp
dec
cmp
mov
shr
ljmp
fchs
mov
sub
outsb
sub
test
jns
lods
cmc
addl
shlb
sub
inc
fistpll
jmp
clc
lods
xchg
add
and
add
pop
and
cmp
mov
rcl
cld
jg
xor
pop
fwait
push
repnz
in
lock
leave
out
call
and
pop
loopne
pop
cmp
scas
mov
int3
mov
inc
aam
jb
aaa
xor
dec
mov
or
mov
test
incl
shll
pusha
jmp
in
xchg
add
dec
rorl
or
add
inc
ds
mov
adc
mov
fstpt
mov
pusha
push
xchg
fcos
decl
push
xor
push
dec
lds
pop
add
jmp
shrl
aaa
test
adc
ss
pop
inc
mov
xor
nop
negb
test
clc
pushl
pop
cmp
js
pop
xchg
add
push
inc
and
jb
mov
push
sar
incl
mov
jmp
out
icebp
addr16
fistpl
mov
pop
movsl
cli
cmpsb
push
incl
cld
pop
xchg
iret
out
loop
bound
out
stos
add
loopne,pn
pop
clc
lret
rorl
sahf
shrl
fistpl
out
dec
sbb
nop
mov
fisttps
push
adc
inc
lea
insl
dec
ss
cmpsb
fcompl
jne
or
lcall
dec
mov
or
xor
inc
mov
repz
cmc
fwait
lods
filds
loopne
adc
xor
clc
mov
push
xchg
shr
pushf
adc
xor
clc
int3
iret
sub
mov
dec
jmp
int3
mov
inc
pop
lret
mov
imul
jns
cmc
lcall
test
mov
dec
mov
out
ds
xchg
jle
fcomip
inc
mov
test
sub
or
jae
sbb
inc
jb
push
lds
sahf
adc
inc
mulb
addr16
scas
mov
adc
test
inc
lcall
in
mov
jnp
ret
pop
push
daa
mov
cli
or
inc
sbb
decl
jne
fs
iret
push
imul
mov
jo
and
inc
and
jbe
push
mov
sbb
xor
ds
mov
push
jmp
sub
mov
pop
jbe
cmpsl
ljmp
cmp
mov
arpl
push
movsb
dec
in
cli
repz
aad
pop
pop
sub
jle
in
icebp
sub
icebp
push
nop
jle
adcl
repz
stc
cmp
popf
xor
out
fildll
adc
call
jg
xchg
xor
dec
jp
adc
push
push
icebp
mov
scas
loopne
insb
popf
fiadds
aaa
sub
pushl
adc
scas
mov
test
push
out
mov
jg
sbb
mov
sub
adc
aas
insb
rep
daa
ret
pop
jae
rolb
shr
je
hlt
ljmp
popf
enter
inc
and
xor
shl
adc
loop
and
clc
jmp
inc
pop
lock
cli
mov
movsl
or
xor
pop
push
sub
scas
mov
sti
cmc
ljmp
cwtl
fisubrl
inc
mov
mov
jg
cmp
push
call
xchg
fcomps
inc
pop
call
cmpsb
sbb
adcl
call
push
lock
mov
mov
push
pushl
mov
dec
and
cmp
aad
pop
jb
popa
sub
fs
mov
xorb
out
mov
adc
imul
push
fldl
dec
push
ljmp
add
mov
gs
and
dec
inc
or
pop
faddl
int
pop
cmp
scas
sbbb
add
mov
cmpsl
xchg
push
push
pop
adc
fsubrl
dec
daa
dec
add
mov
das
adc
es
jmp
add
in
cs
inc
xchg
inc
notl
jp
in
mov
inc
cs
push
or
fistps
cwtl
mov
movsl
adc
xor
aaa
xlat
adc
mov
xchg
xchg
fcomip
jecxz
es
mov
iret
xchg
sub
cmpsb
xor
mov
xchg
fneni(8087
jbe
test
in
int
in
outsl
jge
xchg
fwait
adc
xchg
xchg
lret
test
std
sub
and
decl
jae
loopne
add
lea
cmp
xchg
jle
jae
or
jge
sub
or
fbstp
rcl
pushl
lock
fidivrl
pusha
stos
xchg
jl
jae
add
pop
mov
pushl
push
ficompl
aaa
inc
mov
scas
idivl
iret
lea
pusha
jae
insl
cmc
lods
jb
fcompl
jo
fildll
lret
scas
lock
orb
push
dec
inc
push
adc
mov
jp
out
mov
add
ja
ljmp
sbb
jb
add
inc
pop
cmpl
xchg
in
daa
push
ljmp
pop
enter
and
xor
push
push
stc
xchg
jmp
sub
dec
push
cwtl
jp
imul
outsb
movsl
jl
xchg
fidivrs
aam
scas
loop
in
xchg
cs
insb
add
jnp
cltd
int3
sub
jnp
lds
addb
inc
sbb
mov
ljmp
mov
add
jnp
gs
and
in
test
or
mov
out
pop
hlt
lcall
xlat
subb
jle
lods
sbb
pop
ljmp
mov
sti
adc
push
jb
ret
lods
lret
sub
xor
arpl
call
cwtl
lock
mov
int
dec
mov
sbb
mov
call
sti
jg
inc
sarb
jmp
mov
add
arpl
enter
cmp
mov
dec
xlat
dec
pop
mov
jecxz
mov
pop
ja
cmpsl
xchg
aam
cmp
adcb
sub
leave
add
xchg
sbb
fbstp
mov
int3
lcall
mov
or
pop
xor
mov
or
jne
outsb
dec
loopne
popf
pop
lahf
cmpsl
mov
push
ljmp
add
sbb
jp
fwait
push
adc
lret
dec
filds
cmp
in
outsb
fiaddl
xchg
incb
stos
pop
xchg
mov
negl
cmp
imul
cwtl
daa
mov
xchg
gs
add
ja
addr16
scas
inc
popa
dec
test
push
adcb
insb
scas
fbld
ljmp
cmc
daa
fisubrl
loope
jl
jbe
dec
or
dec
ror
cwtl
repz
clc
repnz
mov
sbb
or
or
mov
pop
mov
ljmp
sbb
repz
jecxz
xor
jle
stos
mov
decl
dec
call
jb
add
fistl
push
push
rorb
out
clc
or
jge
fidivrs
adc
aam
insl
jae
inc
cmp
jmp
mov
in
subb
sti
int3
lea
mov
mov
clc
jmp
lret
in
mov
and
les
cmp
rcrl
mov
mov
sti
or
cs
xor
or
movsb
lret
retw
incl
xchg
push
mov
fwait
lret
sub
insl
dec
out
or
mov
dec
and
dec
test
mov
sub
jg
inc
sbb
fst
xchg
mov
aam
das
int
stos
dec
xchg
out
ret
popf
out
mov
imul
adc
cmp
ds
mov
pop
mov
dec
inc
scas
imul
cmp
cmp
mov
stos
xchg
in
test
xchg
cmpsb
test
dec
inc
gs
add
jno
icebp
jmp
pushf
imul
test
push
sahf
mov
adc
jb
paddw
fsubl
mov
pop
dec
sub
inc
repz
mov
push
ljmp
push
lock
mov
mov
fs
clc
js
dec
jae
dec
mov
cld
push
sbb
fcompl
pop
loope
mov
sarb
sub
rclb
mov
ja
add
mov
incl
int3
int
inc
dec
cmpl
lcall
repnz
cmp
push
pop
or
leave
push
sub
popa
daa
cmp
fnstenv
cmp
sbb
mov
jecxz
pop
rcll
xor
sub
rclb
and
push
and
mov
fldcw
cmpb
lods
outsb
cli
sub
leave
mov
fnstenv
push
pop
lahf
jae
std
fiadds
aaa
xchg
pop
sbb
cmp
dec
loop
or
mov
xchg
clc
or
mov
pop
mov
xor
sbb
and
sti
push
xchg
pop
inc
into
adc
cmc
and
dec
sbb
or
clc
imul
pop
pop
movsl
insl
decl
sub
inc
mov
pop
daa
lea
pop
inc
imul
adc
lcall
xor
xor
jns
ret
or
outsl
movsb
push
rol
and
add
cld
push
xorl
pop
adc
and
mov
sbb
jge
or
and
decl
aaa
shlb
cmp
push
push
call
add
jo
mov
mov
data16
push
sbb
loope
pop
jle
mov
sbb
sbbl
or
int
stos
and
ja
adc
sti
cmp
out
clc
loope
pusha
pop
stos
mov
push
outsb
enter
sub
xor
pushf
mov
cmp
sbb
add
adc
sti
xor
lret
test
mov
andb
lods
mov
cmp
fsubp
pusha
xchg
mov
or
mov
mov
es
jge
insl
jmp
jg
cld
call
xlat
fiaddl
inc
xchg
addl
xor
jno
shl
dec
rcrl
xchg
pop
cmp
lcall
cs
fsubrl
stc
sahf
sbb
push
clc
enter
shl
addl
lahf
pop
mov
loopne
dec
mov
mov
imul
inc
mov
jmp
test
fcompl
sub
sahf
cli
sub
sub
adc
ret
dec
in
sbb
xchg
pushl
movsl
or
cs
mov
mov
add
mov
push
icebp
int3
sbb
jmp
je
cmp
adc
cmp
adc
mov
push
popf
lea
jmp
or
cmpsb
mov
scas
clc
stc
fst
jno
pop
lcall
out
les
xchg
rorl
fstpt
lret
cmp
incl
mov
jne
fwait
lea
in
and
mov
xor
xchg
cli
js
push
pop
or
sub
xor
in
test
incl
icebp
dec
or
sub
adc
lret
xchg
mov
pushl
xchg
sub
int
lret
outsl
push
adc
xchg
fiadds
cs
cmp
or
add
pop
and
or
cmp
sub
add
and
pushl
in
std
xchg
dec
push
int
or
sub
stos
pushf
sub
xor
pop
insb
adc
out
mov
inc
hlt
hlt
loopne
lcall
ud2
jecxz
les
cld
repz
cli
and
movl
xchg
cmp
mov
and
aad
mulb
add
cmp
loope
incl
push
sub
mov
xor
add
ret
mov
inc
mov
add
pop
add
sub
jbe
adc
lea
sub
iret
mov
decl
xchg
out
push
ficompl
gs
movsl
dec
cmp
ret
fbld
arpl
and
mov
adc
lcall
xchg
or
insl
pop
jns
movsl
iret
or
push
dec
push
cmp
adc
jp
lock
incl
or
or
aas
cltd
mov
jp
cmc
add
incl
mov
enter
dec
xor
xchg
adc
jecxz
sub
sbb
mov
js
xchg
and
fbstp
pop
push
ret
clc
mov
mov
push
cmp
leave
inc
je
fsubrl
cltd
shlb
outsl
loop
add
mov
incl
and
push
jnp
cmc
aas
xor
or
sub
mov
mov
mov
fistpll
jmp
dec
movsl
xchg
test
pop
sti
lods
insl
mov
add
insl
mov
dec
pop
lcall
cmp
insb
jl
cmp
subb
dec
sub
mov
adc
fwait
clc
call
sbb
adc
popa
sub
incl
jnp
ret
pusha
adcb
xor
nop
xchg
les
sub
dec
leave
mov
xchg
fsubrl
test
addr16
in
mov
mov
xchg
mov
incl
pop
insl
aam
adc
mov
pusha
pop
lods
ret
mov
and
bound
add
cmpsb
cmp
add
mov
xchg
sahf
push
pop
mov
push
out
xchg
lods
mov
cmpsl
insb
xchg
lahf
ljmp
pop
clc
les
mov
into
faddp
add
insl
scas
jg
loope
shlb
xor
jle
xor
xchg
daa
jmp
outsl
lcall
andb
cmp
adc
aas
fwait
cmpsb
mov
imul
jne
dec
sub
insb
push
mov
cltd
xchg
sub
and
dec
mov
mov
or
scas
adc
inc
sbb
mov
pop
ja
filds
lods
jb
psubusw
ficomps
into
in
clc
jne
stos
imul
fdivs
sub
out
cli
mov
mov
xor
push
adc
call
dec
pushf
shl
xor
dec
nop
mov
sub
lock
sub
fsubrp
movsl
cmp
jg
subl
cs
jecxz
push
into
std
hlt
xor
js
aad
cld
adc
adc
push
jmp
cmp
and
mov
je
outsl
into
push
xchg
cmc
jne
repnz
loop
rcr
and
pop
sub
or
mov
aas
dec
mov
mov
jp
xor
js
cmp
mov
xchg
stc
shlb
fbld
mov
or
jle
pop
sub
fcos
out
push
jnp
pop
iret
push
adc
scas
fwait
xlat
sti
pop
ljmp
mov
enter
shll
sbb
cmp
flds
lock
into
sub
push
cmc
in
pop
test
jae
pop
jle
pop
cmpsb
lcall
adc
pop
js
imul
aad
push
sbb
cmp
jle
test
ljmp
jns
aad
pop
sbb
sbb
jg
sbb
loop
int
jge
xor
pop
or
aad
mov
mov
out
mov
jns
mov
mov
jl
mov
inc
in
je
and
decl
fildll
mov
xor
pop
cltd
dec
xor
jb
xor
mov
mov
jmp
push
insb
lcall
bound
mov
adc
dec
cs
std
inc
mov
incl
outsb
jnp
int3
hlt
in
xorb
in
sub
mov
pop
cmpsb
inc
mov
jl
xor
pop
sub
inc
icebp
fcomps
or
mov
xchg
call
lcall
aaa
cmp
push
push
das
stc
add
lret
orb
ja
pushl
jle
mov
jle
jbe
xor
cs
cmp
and
jge
mov
xchg
test
adc
fcomps
push
dec
push
je
ds
call
adc
rclb
inc
dec
mov
pop
mov
dec
adc
sti
push
icebp
js
sti
jmp
mov
mov
subl
test
jge
fsubp
ficoms
jmp
pushl
mov
push
jb
dec
cmp
pop
test
iret
lock
xchg
lret
gs
incl
rcrl
dec
cmp
outsb
loop
ss
decl
jnp
push
xchg
lods
xchg
mov
lcall
mov
shrl
stos
inc
jp
sub
jb
mov
sar
out
pop
stos
out
mov
xchg
fnstcw
jp
aaa
shr
std
fwait
jg
mov
lret
push
pop
mov
mov
add
nop
fsubrl
xchg
mov
xchg
pop
fstp
sahf
sahf
imul
push
dec
loopne
jmp
adcl
or
out
cli
pop
je
negb
dec
lods
nop
jl
bnd
mov
test
xchg
fnstsw
shlb
xchg
lods
dec
stos
mov
into
xor
incl
push
push
xor
fidivrs
dec
add
cmp
scas
mov
loopne
decl
or
shl
push
mov
adcl
hlt
orl
mov
mov
sbb
or
in
pusha
iret
insb
test
jbe
cmpsb
fcomps
xorl
xor
and
and
inc
int3
test
pop
jns
loopne
jg
movsl
enter
push
out
push
xchg
push
fcomps
insb
hlt
push
stc
add
fcomp
outsb
pop
cld
daa
int3
fbstp
jecxz
out
xor
xor
repz
je
xor
enter
jmp
dec
rclb
ljmp
adc
stos
pusha
xchg
dec
sub
cs
enter
pushl
ja
stos
jmp
imul
cmp
xor
add
cld
mov
or
jecxz
mov
sbb
inc
cmp
mov
ficoml
mov
aam
pop
cs
call
sar
das
push
lock
push
mov
lret
mov
ljmp
cld
mov
mov
movsb
shrb
stos
lea
rcrb
mov
filds
or
ja
jecxz
stos
add
test
in
out
mov
dec
or
add
jge
add
sbb
jmp
jb
shlb
sub
jne
insb
mov
call
iret
arpl
push
addb
sbb
in
ss
jb
push
add
std
add
jg
lret
jmp
inc
sub
scas
cmpsl
mov
adc
in
inc
popf
dec
jg
incl
fld
gs
push
insl
popf
dec
sbb
aad
arpl
dec
xchg
aam
ret
lahf
mov
out
out
orb
fcomip
mov
xchg
adc
mov
and
leave
pop
xor
lahf
push
int3
xchg
call
pop
mov
xchg
and
sahf
push
pop
and
sbb
icebp
mov
dec
adc
xor
xchg
fcoml
mov
xchg
push
pop
lret
in
call
sbb
call
mov
mov
int3
imul
mov
fimuls
jnp
aam
jge
mov
inc
roll
cmp
je
mov
jb
or
pop
dec
pushf
outsb
dec
icebp
mov
sub
ljmp
sbb
jge
jl
mov
imul
fisttpl
loopne
jmp
mov
out
dec
pop
xchg
bound
out
pop
iret
push
fucomp
and
call
mov
jae
pusha
sbb
push
sbb
cmp
mov
cwtl
dec
das
mov
call
add
jne
push
jle
xor
lahf
and
push
popf
push
add
ja
decl
add
mov
mov
sbb
mov
repz
mov
xchg
jmp
jp
cmc
jae
sti
xchg
push
fildll
ljmp
sbb
dec
cmpsl
insl
orl
cmp
mov
lcall
or
shlb
fcmovb
fs
ret
mov
cmc
inc
cmp
sarb
fcmovbe
fsubp
pop
incl
xlat
dec
push
ljmp
rorl
jmp
int
pop
pop
sub
ret
mov
stos
testb
sbb
popa
into
inc
inc
leave
pop
imul
decl
lock
add
test
xchg
fnstcw
dec
push
mov
mov
inc
add
das
cli
fdivr
arpl
push
subl
mov
lahf
pop
call
aam
out
jo
cltd
jne
sbb
lret
jbe
adc
jb
mov
xor
in
cld
shrb
fcom
rolb
dec
in
fisubs
scas
sarl
aad
addr16
pop
inc
nop
mov
xchg
xchg
pop
test
inc
adc
cmpsb
outsl
pushl
call
jmp
jbe
and
mov
shll
loopne
pushl
lahf
mov
jge
std
jne
out
push
ljmp
ljmp
add
in
inc
jecxz
call
mov
inc
cmp
je
mov
jecxz
adc
aaa
shl
roll
pop
push
cmp
dec
dec
add
inc
mov
xor
push
ja
sar
lea
movsb
pusha
xchg
sahf
ficoml
fs
in
mov
mov
push
adc
ficoms
adc
dec
mov
cwtl
and
ja
shlb
out
out
sbb
jecxz
mov
decl
test
cmp
sbb
ljmp
mov
ret
mov
mov
addb
add
outsl
decl
mov
ja
cmp
pop
mov
aas
adc
ljmp
pop
push
outsb
lock
test
pop
cmp
push
movl
movsl
sbb
and
xor
notl
dec
push
mov
popa
call
xchg
call
cmp
lcall
push
sbb
mov
out
js
lahf
idivb
lds
cld
call
adc
gs
or
jp
dec
int3
mov
mov
push
cmpl
xchg
mov
mov
ljmp
cmpsb
mov
lret
jb
lock
ret
out
jno
stos
fwait
mov
cli
mov
roll
cld
lcall
pusha
fwait
pop
jp
das
push
xchg
mov
cmp
or
popa
ja
xchg
stc
cmp
popa
test
cld
push
arpl
push
xchg
sbbb
nop
mov
xor
sub
xor
fadds
inc
pop
push
xchg
jp
imul
cld
je
mov
stc
fisubl
xchg
out
aaa
iret
orl
pop
in
jno
and
mov
icebp
jmp
mov
adc
cmc
andb
scas
add
push
cmp
lret
out
ds
jle
mov
shlb
fdivr
ljmp
rorb
jmp
and
cmp
aaa
call
adc
enter
mov
jb,pn
nop
int3
lret
xchg
iret
rcrb
in
push
inc
mov
lods
stos
or
je
cmp
xchg
lret
sti
fbld
adc
cmp
es
std
stos
in
lcall
rcll
inc
push
push
mov
pop
mov
pop
push
mov
aam
incl
or
outsl
push
xor
mov
xor
in
xchg
sbb
pop
fidivs
outsl
xor
push
in
dec
scas
inc
clc
pop
mov
stc
jne
mov
pusha
mov
push
dec
jo
mov
sbb
movsl
mov
das
and
andl
in
xchg
xor
cmp
daa
sub
rcrl
xchg
mov
pop
movsl
shrl
in
and
sbb
sub
in
decl
decb
fcom
aaa
cmpl
sub
push
lea
mov
lret
or
addr16
ret
pop
lods
and
xor
xchg
dec
sub
pop
incl
movsl
jns
test
push
xchg
jo
adc
xchg
aam
push
push
pop
or
lcall
adc
in
stc
push
insl
sahf
sbb
cmpsb
rorb
ljmp
fcomi
xlat
pusha
je
jb
das
mov
lea
mov
mov
test
jp
ljmp
insb
dec
and
pop
test
xchg
dec
mov
ja
sahf
xchg
adc
loop
inc
ss
jmp
mov
xlat
fadd
pop
iret
fdivs
int
or
outsl
or
sub
xor
pop
push
mov
cmp
fs
bound
xchg
adc
mov
dec
adc
stos
jge
add
sub
ljmp
gs
xor
sarb
pop
xchg
adc
repnz
push
pop
mov
hlt
lcall
and
sub
icebp
push
shr
lcall
jb
jae
fnstsw
out
icebp
in
les
call
js
outsl
daa
inc
cld
ljmp
jle
push
inc
pop
cmpsl
dec
xchg
or
clc
jg
mov
mov
fimuls
inc
jg
push
mov
pusha
cmp
incl
sbb
pop
repz
sbb
movsb
lret
mov
xor
ljmp
insl
jl
arpl
mov
sbb
sub
in
dec
mov
and
xor
clc
jl
mov
xchg
fldenv
sbb
cmpsl
pop
movsl
inc
hlt
fdivr
movsb
lcall
jg
or
movsl
mov
push
sar
lret
lods
jge
pop
dec
or
adc
add
xor
jmp
or
jmp
js
sub
fwait
test
jb
adc
out
jns
sub
push
and
jb
sub
add
sti
sbb
iret
mov
jae
push
mov
icebp
mov
ljmp
imul
adc
lock
dec
lea
loope
pop
out
xlat
mov
and
jg
sub
ds
jbe
xor
jg
ds
cmp
in
push
push
xor
cs
les
fs
cltd
jmp
jo
pop
addr16
pop
cltd
in
insl
sbb
sbb
pop
mov
mov
jns
sbb
in
scas
out
ficomps
notl
xchg
arpl
or
stos
cmp
jae
adc
jmp
adc
rcrl
xchg
and
mov
roll
mov
out
ljmp
xchg
test
jae
add
mov
cli
lcall
mov
pop
ja
jnp
push
sbb
and
ret
push
mov
insl
or
das
repnz
jl
js
sarb
lods
ljmp
aam
aaa
or
js
scas
clc
scas
incb
jo
lods
xor
sar
sub
inc
aam
stos
jg
or
mov
xor
sub
scas
js
lcall
std
pop
rcrl
cmp
sbbl
adc
ficoml
adc
mov
sbb
mov
pop
cmp
pusha
sti
and
test
add
sub
fstpl
lcall
add
adc
jnp
push
cmc
stos
add
andl
pop
ljmp
fsubrs
fs
clc
test
dec
mov
jne
mov
jns
cmp
call
repz
xor
in
mov
data16
fs
out
dec
xchg
nop
pop
lahf
shll
push
or
decl
jge
pop
sbb
mov
cli
es
shr
adc
in
stos
popf
pushl
inc
outsb
and
mov
in
mov
sub
mov
stc
adc
cmpsl
sub
mov
sarl
mov
call
or
das
aad
flds
clc
call
dec
sbb
mov
popa
hlt
push
fcomip
mov
xor
cmp
push
adc
jno
add
mov
scas
cmp
ljmp
cmpsl
jnp
inc
push
dec
popf
add
inc
nop
adc
inc
imul
inc
sahf
mov
addb
pushl
mov
pop
incl
cmpsl
push
xchg
aas
fmuls
jnp
clc
jg
clc
add
push
add
inc
sarb
in
xchg
daa
pop
ljmp
jne
xchg
mov
loopne
out
pusha
sbb
pushf
sub
mov
imul
sbb
xchg
cmp
stc
pop
jo
stos
sbb
or
stc
xor
sbb
xchg
and
mov
jmp
call
dec
and
jmp
rcrb
sub
push
sub
repnz
mov
sub
and
mov
mov
pushl
xchg
fcompl
aad
out
pop
and
call
addb
decb
add
inc
mov
pop
mov
inc
pop
cmp
sub
xchg
insb
cmp
into
mov
adc
loop
movsb
xchg
mov
sbb
jmp
dec
ja
jg
repz
add
pop
dec
sti
mov
orb
movsb
adc
rclb
jge
in
rorb
ja
into
dec
add
add
imulb
sahf
in
lock
stc
push
xchg
lahf
adc
lods
sub
inc
rolb
loop
sbb
out
cltd
loope
xor
iret
les
fstpl
stc
sub
adc
into
cmp
pushf
and
mov
push
pushf
inc
xchg
in
mov
push
inc
inc
pop
mov
inc
cli
lret
cld
jg
out
shl
xor
sub
rorb
es
out
lret
and
jg
or
gs
mov
fstpl
sbb
ja
pushl
add
pop
mov
cld
mov
fs
push
cli
sti
sub
xchg
adc
mov
mov
std
sbb
pop
sbb
out
jb
or
pop
cmp
idiv
sbb
roll
mov
cld
int3
stos
or
inc
scas
mov
mov
iret
and
dec
les
mov
sub
jg
pop
pop
imulb
jp
inc
es
imul
test
loope
mov
nop
jg
mov
push
daa
cmp
das
jmp
sbb
rorb
xor
out
les
lcall
mov
in
or
add
outsl
ljmp
sbb
mov
mov
into
lret
mov
dec
roll
sbb
aaa
mov
adc
dec
inc
test
clc
iret
cmc
inc
xchg
sub
stc
flds
js
fdiv
sarb
lret
pop
add
add
dec
pop
dec
jg
jg
lcall
mov
mov
sahf
cwtl
ss
cltd
test
sbb
inc
lock
scas
jo
jle
bound
jbe
popf
pushw
pop
push
xchg
call
adc
aad
push
leave
pop
cmp
jg
and
pop
outsw
adc
dec
mov
mov
jae
cmp
sbb
add
cmpsl
or
mov
and
xchg
test
hlt
mov
and
adc
loop
jle
sahf
sarb
iret
inc
testl
iret
insb
mov
cmp
lods
adc
inc
sub
lret
jnp
ffree
in
inc
jge
pusha
call
call
adc
sub
dec
dec
adc
sub
scas
leave
cmp
lahf
xlat
push
sub
jle
pushl
add
lods
cmp
xchg
lods
test
pop
out
xor
fbld
push
mov
stos
push
mov
adc
jbe
fistps
and
fimuls
pusha
xor
incl
cltd
lds
pop
push
ret
pop
ret
out
addr16
inc
xchg
fucomi
push
mov
fstpl
mov
paddb
repnz
sub
mov
and
xchg
lcall
incl
pop
test
xchg
lea
call
mov
mov
cmp
out
push
clc
mov
cmpsb
inc
lods
int
hlt
inc
mov
add
decl
dec
pop
scas
leave
aas
xchg
movsl
lods
mov
mov
mov
out
jle
sub
mov
out
dec
pop
pop
mov
pushl
fcmovnb
loop
cmp
lds
mov
imul
mov
push
jb
call
sbb
fidivs
loopne
data16
sub
inc
xor
pop
cmc
mov
fistps
inc
mov
push
mov
jle
adc
call
add
xchg
sbb
sbb
push
pop
or
xlat
scas
cli
push
clc
mov
cmp
sub
call
rorl
jns
and
push
inc
push
scas
mov
fs
or
ljmp
insb
in
pusha
daa
or
insl
sbb
mov
fsubp
xchg
sub
dec
gs
decl
sti
mov
in
lret
cmpsb
dec
in
jl
cld
sub
outsl
shlb
xor
imul
bound
iret
push
and
push
jmp
xchg
test
out
imul
pushl
cmc
jle
orb
fistl
movsl
pushf
adc
lret
adc
leave
sar
filds
rorl
xorb
jne
std
fs
cmp
das
pop
test
mov
push
jge
stc
add
pop
leave
adc
repnz
out
and
lea
inc
loopne
xchg
jge
xor
icebp
ja
pushl
fsubrs
cmc
lcall
out
mov
into
jo
clc
push
idiv
pop
cmp
dec
jb
iret
sub
lahf
pushf
cmp
ljmp
push
test
add
mov
leave
dec
fs
decb
mov
xchg
repz
push
push
gs
pop
fstpl
push
nop
xchg
data16
cmp
lret
iret
push
jb
sub
push
in
pushl
jecxz
repnz
fistl
inc
ret
inc
mov
dec
mov
clc
scas
iret
aad
xchg
mov
push
cli
lret
xor
lea
hlt
jecxz
leave
ficomps
push
loope
nop
and
int3
js
sbb
adc
sbb
clc
push
push
sahf
jg
cmpsb
add
dec
movsl
rcr
das
xchg
mov
pop
mov
xchg
jne
mov
outsb
adc
mov
fists
dec
cwtl
stos
ljmp
jne
pop
pop
loop
and
scas
cwtl
push
ret
cmpsl
push
loop
call
or
sbb
lods
mov
xchg
in
outsl
jmp
jo
fcomip
mov
pushl
sbb
pop
outsl
outsb
fbstp
adc
xchg
xchg
mov
sbb
xor
sti
sub
call
inc
jns
into
cmp
dec
fildl
cs
pop
sarb
xor
fwait
ret
aam
fdivr
ljmp
push
jp
test
stos
shll
mov
sbb
int3
shrl
push
out
cmp
loop
push
std
incl
test
outsl
cmp
lock
arpl
pop
insb
cltd
fsincos
test
jg
xchg
negl
neg
shrl
leave
clts
cmp
insl
sbb
mov
dec
push
push
mov
aaa
ja
leave
xor
scas
loopne
imul
pop
pusha
popf
in
mov
mov
mov
imul
movsl
sub
in
lret
dec
cld
mov
dec
sub
jnp
xchg
mov
pushf
fcmovbe
push
pusha
lds
cmpsl
lea
xor
and
fwait
add
pushl
lret
testl
leave
cmc
push
sbb
pop
mov
fdivrs
in
cmp
jg
cwtl
arpl
lds
enter
dec
jo
movsb
cwtl
xor
push
and
es
sub
fucomi
xor
out
jb
sbbl
imul
pop
mov
mov
lcall
jb
cwtl
push
inc
sbb
mov
jge
dec
test
test
xor
js
nop
mulb
lret
je
nop
push
sbb
add
fstpt
sub
stos
decl
fmuls
loopew
cmpsb
dec
xor
xlat
jns
movsb
xchg
dec
cmpl
or
mov
inc
call
pushl
adc
cmpsb
pop
add
push
push
adc
dec
cmp
pop
nop
jae
loopne
xlat
outsb
enter
int3
mov
push
mov
loopne
rclb
pop
out
hlt
rorb
test
sub
and
loop
jle
add
out
and
cwtl
in
pop
mov
clc
fildll
jne
incl
xchg
lods
fstpt
push
popa
shlb
cwtl
cmp
mov
enter
sub
pushl
sub
dec
rcrl
push
hlt
gs
repz
ljmp
js
test
lret
stc
cld
cwtl
cli
movsl
std
pop
xor
sub
adc
mov
aaa
cld
ljmp
cmp
xchg
adcb
push
jl
ret
stos
mov
ret
mov
mov
rolb
sbb
xchg
push
jg
lcall
push
dec
inc
outsl
addr16
jb
sbb
cmp
mov
jmp
xchg
mov
stc
mov
or
mov
push
repz
pop
pop
ret
mov
mov
push
sbb
arpl
loop
sbb
cmpsb
les
ljmp
test
mov
mov
dec
lahf
xor
gs
xchg
aam
data16
pushl
xchg
aas
adc
jl
jo
sbb
decl
out
sbb
push
mov
seto
lcall
xor
add
and
push
aam
xchg
xchg
adc
pusha
add
ja
mov
shl
push
loope
pop
shl
pop
pop
mov
add
xchg
ror
lcall
mov
xor
pop
adc
pop
push
or
xor
sbb
jmp
inc
daa
clc
jb
xor
ret
lcall
xchg
adc
out
in
stos
or
push
and
sbb
cmpsb
inc
ljmp
sarl
xor
jge
sub
imul
xor
push
mov
add
or
lahf
subb
mov
add
sbb
mov
jb
insb
jae
neg
aaa
cmp
clc
out
scas
and
lcall
incb
lret
imulb
popl
xchg
sbb
scas
mov
add
dec
call
std
lcall
add
mov
lea
mov
das
and
ljmp
scas
popa
ret
push
dec
mov
das
push
add
adc
mov
jp
adc
pop
hlt
jmp
push
pop
ds
int3
sub
stc
sbb
push
xor
imul
mov
xchg
jg
and
iret
in
and
js
jmp
pop
ds
incl
mov
lock
mov
pop
and
adc
test
inc
push
aam
rcr
data16
decl
test
adc
clc
jo
imul
lds
lcall
xor
pop
notl
stos
or
xor
and
out
cmp
jmp
in
cwtl
adc
dec
scas
ljmp
push
cs
lods
mov
cmc
loopne
pop
lods
sbb
outsl
pop
call
nop
mov
scas
push
or
push
shll
inc
dec
scas
fistps
or
insb
jmp
pop
mov
test
fisttpll
ret
mov
aad
push
jmp
fstpt
dec
outsl
inc
jg
lcall
inc
push
push
repnz
mov
into
sub
incl
mov
incl
xchg
dec
inc
inc
xor
lds
fisttpl
mov
call
lret
mov
mov
xlat
or
push
pop
ftst
xlat
loop
mov
dec
lcall
adc
rcrb
mov
js
pop
jecxz
jecxz
sub
frndint
out
cmpsl
xchg
xchg
jmp
push
mov
inc
pop
lock
or
imul
outsb
adcl
call
stos
pop
pop
sbb
rclb
push
mov
mov
jno
mov
dec
test
lods
pop
add
in
xor
mov
xchg
pop
dec
cmpsb
shrb
add
push
mov
loopne
or
sub
pop
sub
push
sti
scas
jg
cld
call
or
fmuls
cmp
ss
test
mov
sub
mov
repnz
pop
pop
mov
sahf
xchg
xlat
jle
mov
popa
mov
std
mov
lock
add
jmp
adc
sub
out
scas
push
cmp
dec
mov
clc
jmp
xor
push
mov
cmpsl
aad
scas
fidivl
idivb
add
std
lods
inc
gs
ret
cmpsb
pop
inc
aad
int3
jnp
cmp
hlt
push
incl
fwait
sub
pushl
fcmovnb
cmp
sarb
jge
lock
jg
clc
insb
sbb
inc
push
lret
jne
adc
mov
out
xchg
stos
dec
loop
inc
fcmovnu
jecxz
mov
push
call
jmp
popf
aas
adc
clc
xchg
test
or
sbb
inc
mov
jo
jg
jg
jb
mov
push
pop
cs
pop
nop
rorb
dec
jp
jge
sub
dec
outsl
xchg
movsb
test
pop
inc
call
lcall
sub
loop
sbb
jb
loopne
mov
dec
add
idiv
mov
jns
mov
popa
into
addr16
arpl
movsl
and
incl
iret
cwtl
sub
sub
pop
ror
cmp
mov
jmp
mov
rcrl
dec
test
decl
xlat
aad
add
inc
xchg
mov
jae
ficompl
and
push
sub
pop
cld
mov
xchg
or
in
push
in
jmp
push
dec
sub
mov
cmc
pop
lahf
out
jo
fwait
adc
clc
jecxz
rcrb
lock
jmp
neg
cwtl
inc
bound
and
lcall
arpl
stos
dec
or
pop
decl
pushf
mov
mov
cmp
imul
nop
out
pop
stos
loop
nop
ror
jle
xchg
pop
sub
pop
hlt
mov
cmova
loop
jns
push
cmp
xchg
out
sbb
in
or
call
fsubl
push
xor
fs
dec
jle
cmp
pushl
ret
adc
push
push
cmpb
pop
mov
call
movsl
jb
je
and
cmpsb
push
dec
jns
lods
int
mov
imul
cmp
jne
adc
ljmp
sub
adc
mov
loopne
push
test
jmp
jno
add
pop
or
in
in
push
nop
lret
dec
inc
jo
outsb
xchg
sub
ljmp
or
jmp
or
jmp
popa
push
cmpsl
mov
sub
push
sub
imul
mov
lock
lahf
cwtl
push
in
add
aam
in
lea
bound
fs
cmpsb
sub
sbbb
mov
les
cli
push
mov
fs
mov
push
sbb
mov
call
fwait
lcall
dec
popa
sbb
out
movsb
push
and
iret
popf
and
sbb
cli
jmp
dec
and
lret
call
sbb
rcpps
loopne
pop
cmp
ljmp
jb
and
pusha
cmp
sbb
xchg
ficompl
and
adc
push
call
and
jnp
xchg
leave
and
xorl
mov
inc
pop
push
push
and
jg
js
test
imulb
nop
leave
cmp
cmp
lret
dec
pushl
cli
loop
mov
xchg
inc
stc
jbe
adc
dec
stos
xchg
xchg
mov
nop
sbb
mov
jmp
inc
fcomip
xchg
call
insl
lcall
add
int
rdpmc
ljmp
jle
lret
jbe
pop
scas
fiaddl
adc
sbb
push
cs
sbb
xor
movsb
nop
sub
out
sbb
ljmp
mov
fsubs
cmpsb
lret
cmpl
xchg
cwtl
xlat
fiaddl
adcl
push
fcoml
mov
sbb
or
fistl
lcall
decl
je
sahf
push
adc
add
and
lock
push
xlat
sti
xchg
decl
sti
sub
jae
mov
stos
mov
xchg
ljmp
int3
mov
testb
jg
cmpb
add
mov
xor
fbld
or
push
xor
mov
decl
push
lahf
rclb
fcom
push
xchg
sbb
or
jae
fwait
push
loope
push
mov
call
idiv
decl
adc
jnp
andb
and
push
push
jecxz
mov
jp
adc
adc
dec
shlb
adc
sub
aad
adc
dec
hlt
fsubs
cli
pushl
lcall
dec
mov
cli
mov
roll
hlt
pop
add
lcall
sbb
mov
js
imulb
stos
loop
lcall
in
sub
popf
les
fnstsw
decl
push
imull
lods
rorl
rcrb
xchg
xchg
neg
ret
pop
push
lcall
adcl
xor
aam
xor
pop
rcrb
inc
push
cmp
jg
sbb
mov
dec
sbb
xchg
in
sarl
in
inc
rcrb
mov
iret
decl
xchg
popf
xor
or
xchg
call
das
mov
scas
stos
lock
lods
int
ja
push
lret
xor
mov
fsubrs
fwait
push
jg
adc
push
std
jmp
mov
js
insl
outsl
mov
pop
cwtl
mov
cmove
lcall
mov
lods
adc
inc
ja
or
daa
pop
lea
repz
daa
push
sbb
xor
push
aad
or
decl
ljmp
sbb
das
xor
or
inc
aad
inc
add
roll
push
or
push
inc
push
add
movsb
and
and
add
into
sbb
stc
roll
out
aad
ja
fsubr
jl
incl
sahf
or
xchg
xorb
fbstp
icebp
jbe
sti
imul
add
es
pop
addr16
inc
fstpl
dec
xchg
pop
cltd
test
lcall
call
arpl
xor
repz
mov
jg
adc
sbb
fbstp
ret
xor
sahf
fwait
dec
in
sbb
mov
xor
xor
dec
iret
or
das
pushf
inc
cli
js
jmp
push
adc
xlat
xor
push
push
lods
sub
pop
dec
ds
int3
push
dec
out
cmp
push
rclb
decl
mov
dec
icebp
inc
dec
sub
dec
add
insl
mov
adc
fs
jmp
sub
int3
push
pushl
loopne
dec
xor
or
stc
mov
dec
test
incl
andl
mov
adc
sub
pop
jle
push
lcall
or
xchg
push
outsb
mov
dec
int
lcall
cmp
and
mov
std
jno
in
popa
daa
cltd
cltd
jmp
aas
push
mov
rclb
lock
or
movsl
jp
xchg
xor
lret
push
pushf
or
sub
add
xchg
cmp
mov
cmp
adc
aaa
sub
cld
jmp
dec
ss
jmp
loopne
adc
xlat
and
sub
jno
ljmp
cmp
adc
iret
imulb
in
rcr
push
push
mov
rclb
fldl
and
ljmp
sbb
add
pusha
xor
xlat
cld
outsb
jo
lcall
imull
fcompl
loop
out
gs
xchg
xor
scas
call
xchg
leave
icebp
movsb
dec
mov
int3
mov
dec
or
inc
nop
inc
and
lea
call
push
inc
roll
pop
inc
ljmp
scas
aaa
xor
mov
btr
ljmp
clc
sbb
mull
nop
and
int3
xor
mov
pushf
iret
daa
xor
popf
daa
mov
popf
inc
xor
pop
loope
push
dec
cmp
aam
out
je
outsb
jecxz
dec
shr
gs
cltd
and
xchg
mov
push
test
add
mov
imul
shrd
clc
mov
imul
adc
inc
push
mov
sarb
push
incl
jbe,pn
addps
mov
ljmp
stos
sbb
into
lcall
cmp
sub
sub
gs
xor
das
fistps
or
fwait
add
inc
xlat
dec
mov
push
inc
push
dec
cli
dec
dec
test
mov
cmpsb
sbb
and
mov
jmp
jmp
fwait
sbb
jl
fcomp
aad
mov
into
stc
xlat
mov
lods
jno
jle
and
mov
jle
adc
cld
add
inc
inc
cmp
test
addl
subb
cmpb
or
outsb
jmp
mov
int
push
mov
add
mov
pop
icebp
decl
pop
lods
imul
cmp
repz
fnstsw
push
push
cmpsb
call
lock
ljmp
and
loopne
jge
lds
out
gs
cmp
les
or
test
popa
fistl
push
pop
fistl
cmp
fs
ljmp
cmp
mov
lds
or
pop
out
push
les
leave
cmpsl
repz
or
add
adc
lcall
dec
cmp
xor
mov
dec
into
gs
lret
negb
adc
repnz
cli
fdivp
ljmp
push
mov
mov
sub
xchg
pop
test
movsb
pop
sub
add
mov
xchg
insl
jmp
mov
pushl
andb
test
lods
imul
fcmovb
sbb
xchg
in
lods
mov
mov
xor
andl
dec
stos
sar
adc
out
pop
shr
pusha
adc
aaa
std
mov
data16
aaa
or
andl
mov
cs
movsl
fdivr
lcall
jle
clc
lock
sbb
mov
sbb
cltd
iret
mov
dec
sahf
icebp
cs
push
lods
mov
ret
and
xchg
dec
xchg
push
mov
incl
pop
mov
fcmove
inc
jp
mov
dec
bound
jb
xchg
adc
or
jl
xchg
adc
pop
in
nop
inc
int
clc
cld
mov
incl
sbb
cmp
mov
xchg
push
sub
ljmp
adc
or
imul
jo
in
inc
loopne
cmpsl
adc
mov
mov
xchg
adc
xor
stc
mov
mov
ret
das
ret
jmp
pop
inc
push
arpl
lcall
mov
test
inc
xchg
and
aam
lods
jg
cltd
pop
mov
addl
call
pushf
mov
mov
xorb
incl
mov
add
js
dec
sarl
imul
push
fadd
pop
loopne
clc
inc
or
add
mov
adc
mov
mov
cld
call
add
lcall
and
push
fsubrl
out
stos
sub
std
popa
push
call
xor
and
dec
inc
xor
in
ljmp
cwtl
lds
scas
fistps
mov
jbe
in
jl
outsb
pop
adc
incl
daa
push
push
stos
std
pop
loopne
rol
dec
aaa
add
scas
mov
xchg
movsb
push
dec
fcmovu
push
out
pop
insb
adc
sub
push
test
and
insb
insb
jns
and
std
dec
mov
jo
pop
adc
adc
std
cmp
call
mov
dec
mov
xor
push
les
pop
imul
cmp
ljmp
adc
or
stos
out
push
inc
sahf
jbe
cmp
fcoml
xchg
mov
jnp
fcoms
mov
repnz
movsb
or
push
mov
cmp
dec
aad
cmc
pop
and
xor
out
call
mov
mov
pop
mov
sub
sbbb
inc
shl
ds
jg
jmp
ljmp
mov
test
xor
int
addr16
incl
add
push
jle
inc
inc
inc
pop
jmp
in
je
inc
and
xchg
xchg
ds
clc
dec
push
rorl
mov
in
jle
adc
dec
movsb
fisubrs
incl
sub
mov
clc
popa
mov
pop
dec
mov
call
xchg
push
repnz
enter
add
insl
xor
nop
icebp
sbb
cmp
in
imul
decl
xchg
and
sub
fistl
out
std
jne
and
sbb
push
cmp
mov
incl
mov
test
cmp
mov
addr16
mov
into
ret
mov
leave
rolb
sub
sub
outsl
mov
testb
and
fmul
incl
ret
sub
push
ss
dec
sbb
movmskps
mov
nop
clc
pop
push
mov
mov
xchg
mov
cmp
jmp
xchg
hlt
jg
pushl
sub
sbb
fstps
mov
jb
in
cmp
inc
add
mov
dec
inc
mov
pop
dec
inc
xor
jo
stos
mov
jp
imul
lcall
test
jg
aas
lods
fwait
push
ds
nop
pop
shll
lcall
cltd
pop
xor
lock
xchg
je
push
add
push
adc
int3
mov
xchg
or
orb
push
pop
rdmsr
inc
or
inc
ror
decl
pop
pushl
and
jo
popa
repnz
idiv
xor
lods
jns
call
add
data16
fidivrl
and
icebp
xor
rcrl
push
mov
into
lret
sbb
js
stos
xor
pop
mov
mov
add
cld
repz
je
xchg
dec
jmp
out
scas
sbb
mov
push
push
lahf
les
lods
in
mov
cmc
decl
out
mov
dec
movsl
xor
or
jmp
lcall
inc
aaa
mov
push
push
in
inc
xchg
add
lret
jbe
loope
outsl
dec
fisubl
jmp
mov
sbb
mov
push
enter
jg
and
mov
ja
test
sub
inc
into
or
add
sub
push
cmpsl
cltd
nop
clc
dec
cwtd
ds
mov
pushf
and
add
jg
lcall
cs
jl
cli
mov
bound
scas
repnz
les
mov
and
imul
call
repnz
inc
shl
inc
les
lcall
xor
fdivrl
das
fcoms
xchg
fcmovnbe
insl
and
outsb
add
add
decl
ja
jae
decl
inc
icebp
dec
repz
jg
push
leave
sbb
cld
into
and
lea
cmp
mov
fwait
sar
dec
incl
jmp
out
orl
dec
movsb
inc
xor
adc
scas
call
xchg
add
bound
jle
hlt
mov
inc
add
out
test
insl
mov
cmp
cltd
push
sub
f2xm1
pushf
sub
adc
fmuls
cmpl
fdivrs
clc
fldl
dec
jl
fs
dec
push
shlb
ljmp
sarl
std
filds
push
nop
ss
lret
fists
aad
leave
out
cmp
call
test
xor
inc
out
mov
dec
mov
insl
mov
lcall
push
inc
roll
xor
add
lcall
and
mov
cmc
aas
push
push
iret
xchg
pop
lcall
sbb
xchg
mov
out
shlb
jnp
int3
leave
out
ljmp
into
lret
inc
sub
jp
ret
mov
ljmp
xlat
imulb
bnd
fisttpl
inc
test
loope
cmpsl
call
cld
xchg
pushl
test
das
testl
ljmp
je
cmp
fwait
mov
dec
pop
mov
lcall
ljmp
lcall
test
xor
xor
xchg
imull
push
les
je
xchg
hlt
xor
jmp
insl
data16
ljmp
push
in
xorb
jno
test
sbb
std
popf
add
ja
push
ret
ficomps
adc
gs
out
aaa
mov
movsb
sbb
pop
push
mov
and
sub
rolb
jg
inc
or
jg
jg
ret
sbb
jbe
jo
jmp
test
incl
xchg
push
sub
pop
cmp
test
jle
sbb
adc
out
cli
scas
lods
shrb
aam
xchg
popf
test
incl
inc
or
daa
push
dec
push
dec
test
push
and
mov
notl
mov
and
pop
imul
add
adc
dec
inc
cld
lds
mov
icebp
inc
xor
stc
and
and
incl
iret
addr16
cmp
aad
in
pop
jmp
shrb
lock
fists
push
std
jno
cmp
data16
xchg
add
scas
ficompl
sbb
pushl
xor
imul
cmp
lock
lods
mov
pop
mov
xor
out
pushl
pushf
test
adc
pop
mov
stos
jns
fdivrs
out
out
sub
int3
movsl
push
push
jmp
mov
jg
fistpl
jne
shl
xchg
pop
and
cli
xor
out
lods
pop
xchg
sahf
xor
mov
jl
out
clc
ljmp
lock
pop
inc
das
mov
std
and
push
push
pop
push
cs
mov
jo
inc
lret
sbb
adc
adc
dec
shlb
mov
fisubs
clc
jnp
in
adc
out
loopne
sub
sbb
rcll
daa
and
ret
data16
iret
mov
mov
shr
push
xchg
add
jmp
jecxz
flds
adc
cmpsl
pushf
lahf
scas
pop
sub
fisttpll
xchg
fsubs
dec
mov
mov
aam
std
cmp
lods
sbb
rorb
cmpsl
jp
and
add
jns
adc
push
mov
dec
jae
fists
outsb
cmp
incl
cltd
sarl
fdivl
cltd
xchg
jg
insb
js
inc
cltd
mov
mov
fdivrl
in
incl
dec
cli
popa
clc
lds
call
sti
jg
call
mov
fdivs
push
cmpsl
xchg
shlb
pop
loope
jle
ds
iret
and
inc
xchg
pop
rolb
mov
test
mov
and
push
xchg
bound
mov
pop
out
dec
adc
subl
popf
mov
push
mov
loope
mov
cld
mov
adc
je
mov
fildll
add
add
jmp
jle
xchg
enter
cld
mov
std
clc
push
int
fsubs
repz
sti
sbbb
es
outsb
aaa
test
push
pop
xor
lret
dec
mov
mov
lods
dec
adc
lahf
push
mov
aas
push
mov
shl
xchg
lcall
mov
mov
pusha
sub
xchg
hlt
out
or
mov
lret
repnz
jmp
test
add
xchg
fstl
outsb
dec
add
test
jge
insl
iret
xchg
cmp
mov
decl
pusha
fsubrl
adc
shll
push
lock
cmp
std
int
cmp
js
call
xchg
fimull
fdivrp
scas
clc
mov
jb
rcrl
mov
int
inc
mov
sub
sub
sar
mov
stos
int3
push
adc
nop
and
push
fisttpl
adc
addr16
js
jg
mulb
cmpsb
sbb
shll
mov
or
push
pop
dec
negl
cmp
jae
sub
push
jl
scas
mov
cmp
fs
lods
push
flds
dec
adc
ljmp
rolb
lods
sub
sub
adc
mov
cmpsl
sar
daa
push
mov
ljmp
loop
rolb
loope
mov
pusha
je
mov
jno
cld
decl
jge
push
cmp
xor
cmp
fs
mov
loopne
pop
jg
mov
ja
andl
int
insb
xlat
frstor
cld
xor
pop
fidivl
mov
mov
fcom
mov
or
scas
jmp
fadd
push
xchg
and
sbb
outsb
rclb
mov
sub
jg
and
xchg
xor
inc
std
ljmp
mov
lods
cmp
cmp
hlt
or
mov
loopne
lcall
sbb
sbb
mov
in
jmp
xchg
and
mov
int
rcl
xor
cmp
mov
pop
jo
call
movsl
into
or
lods
mov
sbb
lcall
sub
inc
cld
push
cwtl
mov
ljmp
cli
addl
popa
or
push
pop
lret
lds
jg
mov
jo
vcomisd
ljmp
cwtl
mov
sbb
push
or
cmpsb
jp
pop
ljmp
mov
test
jne
outsb
dec
fcoms
pushl
mov
stc
pop
jbe
call
adc
pushf
mov
sarb
mov
add
iret
popa
popa
adc
jno
inc
jecxz
mov
mov
sub
imulb
out
jns
push
adc
subb
mov
cmpsb
call
out
fidivs
mov
jmp
lds
outsb
xchg
mov
insb
add
ss
xor
jmp
ljmp
dec
push
in
add
mov
nop
jne
aas
daa
insb
sub
int3
in
int3
into
lds
cld
jmp
xchg
lahf
in
lret
data16
cmp
sub
lds
jge
es
decl
pop
call
fistl
sub
das
sbb
clc
or
push
push
sbb
cmpsl
add
scas
jg
clc
ljmp
sub
dec
fcompl
scas
and
loope
mov
xor
pop
ret
xor
add
jle
jbe
sbb
ljmp
dec
push
lock
mov
addb
dec
push
lea
pop
mov
es
paddd
jnp
mov
test
sbb
mov
mov
ret
into
push
das
inc
repz
add
mov
aad
cmp
add
fwait
pop
sbb
sub
adc
jmp
into
bound
std
stos
pop
and
loope
rorb
and
inc
loop
sarb
nop
incl
add
dec
push
lea
jne
cmp
call
iret
daa
mov
and
mulb
push
cmp
push
dec
sub
jge
jno
into
cs
jmp
xor
test
imul
pop
push
jmp
push
inc
sub
push
inc
lea
jg
push
insl
inc
daa
fwait
popa
jecxz
xchg
test
cltd
mov
pop
jl
std
sbb
lock
cmp
jmp
clc
xchg
ljmp
adc
xchg
add
imul
cmp
stos
sti
sbb
pushl
pop
mov
pop
and
lock
add
test
push
lret
cld
mov
sub
sub
rorb
fldl2e
repz
aaa
inc
jo
mov
popf
clc
xchg
or
jl
dec
ss
pushf
add
xchg
icebp
pop
cld
fildll
mov
call
pushf
lea
mov
lcall
cmp
nop
sbb
scas
mov
ficomps
jg
push
subb
push
dec
stos
mov
data16
sub
inc
loop
add
mov
jg
mov
movsb
dec
mov
xor
or
icebp
sub
arpl
ljmp
pop
sarl
and
cwtl
add
dec
push
add
call
fwait
adc
in
pop
in
aas
aam
fsubrp
jmp
xlat
aad
rcrl
ret
sub
sub
pusha
cld
call
adc
inc
add
idivl
stos
dec
xchg
jns
jg
sbb
push
in
push
nop
icebp
icebp
ss
fwait
arpl
mov
lret
xchg
xor
stos
int3
scas
shll
cmp
stc
sti
jmp
inc
jge
daa
cmpsb
xor
add
mov
hlt
jmp
insl
sub
pop
fcompl
arpl
repnz
js
pop
push
inc
shrl
mov
lcall
pop
xchg
push
sbb
jns
mov
or
xchg
jmp
call
mov
sbb
mov
xor
int
sub
sahf
fisubrl
nop
mov
mov
andb
and
mulb
dec
or
jo
xchg
jecxz
inc
cmp
outsb
sub
popf
jp
repnz
jae
sahf
mov
nop
xchg
jg
jmp
mov
pop
add
lcall
out
das
push
gs
js
adc
xchg
xor
sub
es
jg
out
sahf
addl
push
pushf
ficoms
add
sbb
pop
sub
or
jb
sti
dec
xor
clc
flds
sti
sub
xorb
jnp
pop
cmp
jp
aaa
sbbl
das
fdivrp
test
cmpsl
push
jo
mov
ficompl
add
nop
mov
out
loope
sbb
incl
decl
dec
mul
fcmove
sub
mov
mov
dec
lret
ljmp
insl
mov
xor
push
sub
adc
pusha
add
and
mov
dec
divl
push
cmpsb
add
call
xchg
sub
frstor
mov
inc
mov
and
and
cld
cmp
cmp
pusha
enter
add
add
xchg
mov
xchg
clc
sbb
inc
jnp
lcall
add
in
daa
pop
xchg
mov
mov
xchg
push
inc
xchg
xor
inc
gs
and
inc
push
fdivs
aaa
sub
mov
inc
test
push
ljmp
sbb
add
add
xor
cmp
and
xchg
scas
push
xchg
clc
and
and
pushl
mov
lods
adc
fbld
or
mov
jg
je
mov
scas
mov
les
add
jo
lock
mov
lahf
and
jl
xor
or
jae
lcall
cmp
sub
mov
fld1
xchg
nop
xchg
in
mov
mov
clc
shr
jp
shlb
into
rcrl
cltd
and
xchg
or
or
xor
pop
mov
and
fsubs
sbb
push
addb
or
pop
clc
pop
adc
les
jo
push
movsb
and
sub
push
icebp
scas
cli
jmp
cmp
mov
imul
js
sub
nop
punpckhwd
fwait
nop
push
ljmp
call
repz
out
shrl
adc
test
and
mov
ret
sbb
sub
push
jno
jmp
jge
sub
outsb
or
cmc
loopne
jae
es
xchg
or
scas
ret
dec
jmp
fisttps
xchg
pop
stos
mov
sarb
mov
movsl
pop
jl
sub
data16
adc
add
mov
and
out
je
adc
imul
clc
sbb
jne
mov
incl
push
xchg
adc
ljmp
ds
or
sub
push
jp
jnp
mov
shrl
or
and
incl
mov
or
xchg
insb
jns
pusha
sahf
push
push
adc
dec
mov
mov
decl
and
cmp
push
aas
out
lret
push
xor
lahf
xor
orl
cmp
fldenv
inc
push
mov
call
pushl
jl
push
xchg
xor
cmp
rclb
imul
fcomip
xchg
push
fcmovnb
adc
jns
cltd
mov
not
mov
rcll
cmp
ret
data16
dec
adc
xor
mov
ret
ss
inc
jecxz
pop
incl
lcall
cmp
xor
push
dec
fimuls
sarl
imul
mov
adc
insl
shrb
xor
jno
scas
orl
lods
mov
call
ret
in
fisttpll
cmpsb
hlt
bswap
or
js
fdivl
insl
mov
dec
faddl
mov
add
aam
mov
aas
pushf
fisttpll
movsb
leave
cmp
lcall
xchg
jne
fcoms
sub
lret
jb
push
mov
fsubs
stos
imul
mov
fs
decl
arpl
jae
out
insl
dec
dec
ret
ljmp
daa
das
stc
sahf
jl
mov
pop
movsl
push
std
dec
cs
sbb
jmp
sub
rorl
mov
lock
pusha
leave
lret
pop
lcall
je
push
shll
cmc
lods
push
dec
xor
iret
jbe
mov
fldcw
jmp
and
mov
cmp
fcmovnb
bndstx
pushf
ljmp
mov
decl
hlt
sbb
jo
push
pop
sahf
push
lds
inc
loope
dec
pop
add
sub
and
pushl
push
cmp
aam
xchg
decb
pop
cli
arpl
out
xor
adc
cwtl
sbb
cmc
xor
jae
cmpsb
cmp
mov
hlt
cvtdq2ps
add
std
lcall
lret
jl
mov
or
bound
inc
mov
adc
inc
call
lea
inc
lcall
popa
je
lret
mov
push
test
push
pop
dec
mov
lret
into
push
inc
mov
icebp
int
fimuls
xchg
push
xchg
sub
ljmp
inc
and
sbb
incl
je
mov
or
arpl
out
cwtl
pop
push
mov
xchg
push
jl
ficoml
incl
clc
dec
shll
das
lret
cmc
dec
adc
lock
popf
test
shrb
sbb
mulb
push
push
and
or
test
gs
cmp
inc
stc
ds
sbb
jmp
shrb
and
pop
and
and
mov
movsb
fcomi
and
inc
decl
pop
je
jns
dec
pop
jo
arpl
fsubl
mov
stos
movsl
xor
lcall
pop
or
call
or
or
inc
movsl
gs
sbb
jecxz
add
and
jne,pt
call
add
les
cltd
and
jge
add
and
addr16
jl
nop
in
movsl
aaa
adc
icebp
jmp
mov
rcll
call
ds
add
xchg
add
out
dec
lahf
lahf
inc
testl
movsl
lods
pop
inc
mov
stos
mov
inc
loope
and
add
out
addr16
mov
fucomp
clc
xchg
and
add
mov
int
icebp
jg
fadd
push
mov
pop
xchg
cmpsl
or
dec
shl
das
xchg
mov
cmp
rclb
rorl
jno
popa
decl
inc
mov
mov
fdivl
adc
mov
xlat
pop
push
inc
jns
and
and
mov
idiv
decl
into
jne
cmpsl
inc
lea
sub
enter
mov
int3
pusha
repnz
cmp
jmp
add
fsubs
cltd
addr16
jae
adc
test
dec
jmp
push
push
nop
inc
mov
xor
push
push
decl
sti
aaa
mov
mov
rorl
loope
cld
mov
notl
mov
dec
repz
mov
mov
repz
mov
shlb
out
out
addr16
push
pop
dec
cmpsb
popa
mov
in
push
ja
cli
and
pop
popa
adc
lods
jbe
lds
push
mov
dec
test
mov
iret
mov
lret
sar
jmp
bnd
xchg
mov
xchg
into
inc
xchg
or
mov
ljmp
sbb
add
or
lahf
repz
and
cld
sbb
pop
and
pop
outsl
arpl
xor
incl
lret
lods
push
adc
rcl
int
sbbl
push
imulb
push
sbb
push
or
dec
mov
sub
or
mov
ret
add
lock
pop
lea
incl
xchg
xchg
das
xor
mov
inc
scas
sbb
ret
sbbl
pop
in
call
daa
push
add
jmp
mov
cmpsb
imul
fists
xchg
jmp
push
mov
push
pop
push
mov
imul
sub
aam
shlb
out
decl
loopw
daa
rcr
mov
fisubl
mov
test
loop
call
jg
push
fisttps
lods
orb
mov
fisubl
dec
iret
decl
and
xchg
mov
imulb
xchg
push
mov
push
push
xlat
inc
mov
cmp
aam
cmp
mov
pushl
lods
dec
into
addr16
pop
stos
negl
outsl
push
adc
mov
out
push
sbb
sti
cs
mov
inc
lock
fiaddl
push
xor
inc
dec
add
or
or
mov
lahf
pop
addr16
into
mov
sub
call
mov
mov
js
xor
adc
ljmp
cli
xchg
js
sub
mov
add
xchg
adc
sub
in
ljmp
aam
jecxz
testb
cmpsl
push
rorb
dec
adc
or
cmp
mov
sub
shl
push
push
mov
jno
fsub
sub
mov
lcall
cld
pusha
lea
jns
inc
and
inc
sar
ljmp
add
sub
jns
dec
mov
ss
ss
xlat
mov
add
xor
pushl
pushf
fistpll
push
aad
lret
cmpsb
jecxz
iret
cmp
sti
int
pop
xchg
jg
push
mov
xchg
in
push
push
loopne
ret
mov
sbb
cmp
push
jecxz
mov
pushl
mov
fwait
aad
lcall
addr16
mov
mov
push
jns
xchg
out
ljmp
pop
pop
adc
mov
mov
mov
sti
adc
sub
shlb
push
inc
jb
mov
aaa
mov
pop
push
loop
lea
jnp
and
adc
hlt
xchg
dec
fiadds
or
rorl
mov
cmp
fldt
mov
jne
rcrl
xchg
cld
xor
pop
pop
or
out
sbb
call
nop
mov
jg
jmp
incl
divb
mov
lods
andl
clc
inc
inc
pushf
test
push
and
daa
sub
inc
mov
pop
dec
xchg
and
je
xchg
add
movsl
aaa
cmpsl
popf
cwtl
fidivl
dec
xchg
or
mov
xor
daa
xlat
je
jl
js
xchg
cli
nop
out
das
xchg
js
push
movsl
mov
loop
int
xor
push
adc
iret
sub
push
cmp
mov
jnp
dec
cmp
mov
ret
hlt
out
lcall
jp
xchg
or
lods
xor
sbb
imul
ljmp
jae
fmull
sbb
inc
push
cli
inc
push
fadd
pop
ljmp
cmp
mov
add
ja
mov
fcmovnbe
ficoms
sti
pop
hlt
inc
mov
repnz
mov
insl
out
sbb
sahf
aaa
mov
stc
outsl
ss
cmpsb
push
inc
call
fidivl
dec
jo
jg
and
mov
mov
xchg
sti
enter
and
ret
cmp
pushl
adc
and
outsl
pop
xchg
iret
inc
push
cmp
add
mov
cmp
adc
mov
inc
cmp
adc
hlt
iret
mov
in
xor
lret
fcomip
decl
mov
je
mov
push
jne
dec
jbe
pushl
jg
xchg
cmc
dec
dec
int3
sub
cli
dec
adc
ret
out
es
xorl
mov
xor
jb
lea
lcall
ds
in
setl
stos
stc
push
movsb
inc
test
fmull
mov
fidivl
icebp
gs
inc
push
or
jnp
xlat
xchg
xor
rcrb
xorl
stos
and
jbe
jg
in
stc
mov
js
or
data16
cmpsb
adc
int
icebp
lcall
scas
out
aas
daa
push
jl
jle
jmp
xchg
cmp
jmp
cmpl
out
hlt
call
popf
fldl
push
mov
and
test
push
int3
mov
aaa
std
or
mov
pop
enter
jbe
ljmp
test
or
ljmp
xor
xchg
cmpsl
add
adc
icebp
sub
dec
mov
fimuls
mov
out
fcomip
imul
sub
sub
mov
std
xchg
outsb
push
das
jle
fwait
incl
stos
xchg
lods
arpl
cmp
and
push
jp
fs
inc
lea
ret
pop
xlat
dec
ljmp
mov
jne
mov
jb
std
and
insb
ss
inc
aam
lds
adc
dec
loope
push
fs
aas
movsb
jno
or
push
test
stc
es
jge
cmp
fsubr
out
push
das
pushf
stos
sbb
xchg
sub
xchg
decl
into
push
in
cs
and
jno
enter
ljmp
push
scas
roll
fwait
pop
sbb
mov
push
inc
sub
and
out
adc
pop
jmp
pop
push
mov
xchg
add
mov
cld
fsincos
sahf
inc
cmp
leave
testb
and
push
xlat
ret
jg
test
jns
pop
fsubl
les
les
or
sahf
xchg
ds
sbb
in
dec
dec
decl
push
ljmp
push
dec
fistpl
pop
cld
fbld
test
xor
xor
icebp
mov
inc
xchg
xor
sarl
dec
test
pop
push
in
in
pcmpeqw
xor
imul
std
aad
pop
inc
add
push
pop
add
scas
xor
xor
rolb
mov
mov
stc
jp
jmp
mov
fdivrp
jmp
pop
push
fmul
add
inc
add
and
call
fbld
jecxz
test
mov
fmull
call
or
jle
shr
stos
cld
mov
pop
mov
decl
aad
fsubl
dec
aam
movsb
or
mov
mov
dec
test
ljmp
scas
inc
movups
jne
dec
testb
push
push
shlb
and
movb
cmp
cmc
jg
xchg
dec
nop
ljmp
push
inc
lods
and
jle
in
fists
or
negb
ljmp
in
dec
adc
or
fstl
ret
inc
scas
js
into
mov
enter
aas
sub
lea
mov
pop
mov
jl
xor
scas
jbe
mov
ss
jmp
jmp
inc
and
cmp
fwait
sub
or
jle
int
fsubr
push
out
xchg
cmc
pop
push
add
insl
dec
cmp
mov
push
lea
lcall
sahf
mov
jbe
fmull
ss
pushl
cld
mov
jle
mov
mov
xor
dec
xor
dec
cmp
int
rcll
clc
inc
push
cmpsl
pop
cs
and
test
decl
mov
cmp
fstp
xor
test
sbb
out
add
xchg
out
or
mov
jl
bound
or
test
dec
mov
scas
fwait
pop
orl
dec
and
je
aad
mov
dec
ret
fidivs
cmpsb
push
ret
xor
es
dec
add
test
jg
cs
cli
lcall
in
sbb
nop
cmc
in
ss
add
mov
lcall
aad
lret
sbb
call
mov
mov
popa
mov
cmpsb
incl
push
mov
nop
push
push
cld
test
pop
inc
aam
das
adc
mov
xlat
popl
cmp
aaa
repz
mov
mov
jns
int3
test
mov
roll
aam
sbb
call
cli
pusha
jnp
rcll
fxch
mov
dec
aad
pop
cmp
mov
dec
les
insb
mov
lods
in
mov
push
fdivrl
jno
out
insl
inc
loop
fcomip
call
ror
jecxz
popa
push
sub
call
add
jg
ljmp
stc
aaa
sub
sti
jnp
das
out
sub
sub
stos
push
js
fbstp
xchg
stos
or
dec
call
lahf
sti
mov
loope
jbe
cmp
push
inc
inc
iret
mov
out
inc
push
bound
out
decl
popf
notb
inc
jmp
rorl
mov
test
pop
es
lds
mov
aam
mov
scas
popf
cmp
lcall
jnp
mov
scas
outsl
xchg
iret
dec
test
jmp
divb
jp
pushl
inc
xchg
mov
bound
stos
lea
dec
sub
call
mov
push
sahf
ffreep
lods
push
outsl
lahf
ljmp
outsb
and
pop
sub
cmp
xchg
aas
es
xchg
je
push
fcmovne
jne
into
mov
xchg
sub
or
decl
add
adc
jl
movsb
pop
push
imul
int3
jmp
scas
rcrb
loopne
or
pop
mov
enter
lret
pop
das
jbe
mov
inc
jle
lds
loope
divb
mov
fsubl
cmc
cmp
and
test
insl
sub
daa
mov
decl
pop
out
lods
je
pop
int
add
or
jge
cmp
mov
incb
out
xchg
outsb
xor
imul
test
pushf
lods
fsubrs
sbb
gs
loope
popf
xchg
xor
std
sti
adc
and
call
enter
hlt
jnp
mov
mov
rcrb
mov
and
mov
imul
pushf
lcall
or
cmpsb
rcrb
aam
es
push
fucomip
notb
push
cmp
push
jg
lock
in
outsl
push
pop
std
xchg
loopne
fnstenv
xor
jo
adc
sub
xor
decl
lock
mov
mov
ss
das
out
ljmp
ljmp
shlb
aam
and
mov
adc
and
inc
and
test
fildll
xchg
cmpsl
jo
ljmp
clc
jle
sti
sbb
shl
in
mov
dec
xchg
sarb
aam
arpl
dec
shr
es
sub
pop
push
in
adc
mov
loop
jecxz
mov
data16
inc
fadd
out
idiv
pushl
in
dec
xchg
xchg
nop
js
sarl
mov
std
xchg
jge
adc
jne
daa
jbe
mov
mov
sub
jbe
mov
xchg
inc
adc
stos
jmp
dec
mov
ss
push
psraw
mov
into
fstpt
xchg
loope
mov
ljmp
movsl
push
popa
adc
test
sti
jae
mov
add
movsl
adc
inc
xor
cmp
loope
hlt
fwait
daa
ret
sti
gs
ror
aad
hlt
add
or
adc
push
in
and
aaa
sbb
hlt
cmp
push
xor
cli
jmp
int
dec
xchg
pop
addr16
hlt
out
jp
in
dec
sbbb
push
js
inc
pusha
inc
xchg
cmc
movsb
fidivrl
mov
adc
cs
dec
sbb
jmp
icebp
push
cmp
loopne
gs
inc
mov
sub
pop
clc
outsb
add
cwtl
jnp
mov
sub
ljmp
shrb
sbb
sarb
push
jae
mov
jmp
xchg
aaa
ret
mov
mov
in
adc
jo
repnz
je
jmp
add
and
or
mov
sub
clc
xchg
test
fidivrl
xchg
mov
icebp
lcall
sub
dec
mov
dec
cld
sub
push
add
xchg
movsl
sbb
sub
fcmove
jno
out
lret
gs
pop
outsl
cli
sbb
bound
xchg
mov
xor
push
add
fcomip
mov
das
in
lret
jb
scas
push
jns
dec
int3
push
dec
sbb
jecxz
fildll
lcall
test
ret
push
lock
jg
out
cmc
or
push
inc
subl
sub
lcall
outsl
cmpsl
outsb
cmp
in
outsb
fnstsw
loopne
aam
jmp
push
mov
sbb
call
cwtl
mov
xor
cwtl
pop
repz
idivl
ficoms
lock
lcall
iret
adc
cmpsl
or
leave
mov
test
aam
sbb
inc
or
push
fs
ljmp
sub
clc
mov
push
fistpll
push
add
lods
xchg
mov
incl
mov
add
popf
das
stos
loope
frstor
aad
ljmp
sbb
loopne
add
loopne
xor
or
movsb
jmp
scas
cli
inc
movsl
fmuls
in
daa
sbb
pop
jo
sbb
xor
mov
bound
decl
pushf
sbb
pop
push
push
push
mov
call
jmp
cmp
icebp
dec
add
inc
jecxz
xor
inc
jecxz
cmpsb
ljmp
test
jge
mov
ficompl
rorl
push
cltd
ljmp
cltd
mov
shrl
cmp
sub
xchg
ss
movsb
addr16
jae
jmp
call
or
fisubs
sbb
jg
out
cli
nop
inc
pop
mov
inc
mov
rorb
movsb
imul
jmp
dec
stos
aam
push
pop
jmp
push
adc
xor
xchg
xchg
jne
data16
imul
pushl
incl
adc
push
pushf
ss
andb
jns
cmp
insb
aaa
rcl
mov
jmp
jbe
and
nop
cmpsl
cmp
or
mov
add
and
mov
fwait
add
imulb
in
inc
jno
outsb
dec
cwtl
cli
dec
filds
and
in
fcoms
fs
inc
fsubs
xchg
clc
fsubrs
cld
cli
sbb
std
in
lock
rcr
loop
sbb
decb
push
aaa
add
decl
cmc
jle
fs
lock
jb
psrlq
fnstsw
push
dec
cmp
mov
inc
and
pop
iret
mov
pop
pop
pop
mov
add
or
lcall
out
imul
negl
or
ror
jmp
je
sbbb
xor
cli
decl
enter
imul
push
xchg
imul
in
addr16
pushl
std
dec
es
jle
mov
adcl
mov
and
jne
fidivl
xor
pushl
or
adc
push
aad
cmp
jb
ss
sahf
or
incl
pop
jne,pt
pop
cmp
and
fdivl
test
icebp
pushf
or
popf
jns
arpl
mov
test
cmp
stos
xchg
sbb
pop
pop
dec
push
push
adc
enter
xchg
push
cmc
pop
mov
cmp
mov
pop
inc
insl
and
pop
jle
incl
cmp
mov
cmp
xchg
in
push
dec
gs
ljmp
scas
jge
movq
push
movsb
mov
adc
lcall
mov
and
arpl
xor
or
mov
xchg
or
mov
xor
xchg
test
push
std
out
inc
movsb
in
and
and
push
jnp
popf
out
pop
dec
xlat
cmp
test
aas
mov
lock
bound
es
mov
jg
or
add
inc
enter
jno
xor
ficompl
inc
pop
push
adc
jg
pop
outsb
movsb
add
loop
movsl
mov
lcall
negb
imul
in
ja
scas
inc
je
adcl
add
pop
add
xchg
daa
jne
ljmp
lcall
adc
xchg
andl
mov
jmp
cmpsb
cmp
aam
xchg
mov
dec
jmp
jmp
mov
cmpb
fwait
jbe
mov
pop
cmp
mov
popf
aas
add
adc
sub
shrb
adc
mov
cmpsb
jnp
fs
call
outsl
push
clc
jbe
mov
pop
or
loope
mov
xor
push
jns
mov
inc
into
push
inc
call
sub
enter
pop
push
dec
jmp
sub
inc
pushf
mov
mov
pop
mov
leave
sar
push
in
mov
adc
lahf
and
ja
xchg
mov
push
decl
jns
mov
jnp
out
add
pop
inc
dec
sbb
popa
in
mov
aam
sbb
incl
in
aam
bound
sbb
popa
inc
add
loope
std
dec
lcall
cmpsb
addr16
xor
inc
pushf
jg
lret
or
adc
cli
dec
cmp
pusha
cs
aad
sbb
add
xlat
ret
lcall
outsb
jae
aad
mov
cwtl
test
adc
jl
out
adc
cmc
mov
or
jnp
inc
sub
cli
push
jbe
add
lock
and
add
adc
sahf
test
sbb
fs
mov
das
out
cmc
rorb
push
enter
add
or
decl
mov
mulb
rorl
out
lock
ficoml
lcall
xchg
add
lret
push
sti
pop
decl
push
sti
in
pushf
add
ljmp
push
fisubrl
and
add
push
pop
mov
jne
in
outsb
aas
xchg
adc
je
int3
dec
xchg
ljmp
movsb
daa
cmp
cmp
es
jnp
jmp
jno
mov
push
adc
cwtl
xchg
int3
jno
pop
loopne
sbb
divb
mov
jg
clc
inc
enter
pop
aas
mov
orb
push
sub
daa
and
adc
mov
or
jg
cmc
push
and
gs
dec
push
sahf
movsl
fcoms
mov
push
jg
inc
lods
sub
sub
outsb
cli
out
in
in
scas
test
in
js
std
mov
jnp
cmpsl
mov
mov
lcall
test
test
jmp
mov
aaa
xor
loopne
call
js
jg
jmp
mov
dec
pop
aas
sti
dec
popf
sbb
insl
shll
xchg
push
std
ljmp
mov
int
xor
pop
std
outsb
inc
add
ss
je
sbb
inc
cli
call
jp
cld
xor
lods
jne
fnstenv
mov
and
push
push
cmp
push
sbb
addr16
and
jmp
insb
pop
stos
mov
xor
and
in
shrl
mov
inc
popa
loopne
incb
jb
or
rsm
ljmp
inc
adc
fisttps
imul
jo
faddl
xchg
xchg
inc
push
inc
jle
decl
popa
int3
xchg
and
mov
mov
jmp
popf
jg
loop
or
pop
dec
mov
add
lods
arpl
jno
push
sub
decl
nop
outsb
test
in
push
xor
mov
mov
xchg
jb
je
testl
dec
mov
xchg
push
cmc
sbb
leave
icebp
stc
sbb
lret
push
push
ljmp
xor
adc
sub
inc
jbe
push
add
push
movsl
cli
call
adcl
popf
scas
popf
test
in
mov
fnstcw
mov
jae
rcll
ljmp
fdivrs
lret
inc
mov
das
movsb
sbb
scas
lea
mov
mov
loope
xor
push
sbb
in
mov
add
aaa
stc
adc
jmp
cli
stos
outsb
fnsave
rolb
inc
fstl
movsl
mov
movsb
cmc
andl
imul
ror
es
push
lahf
jne
jmp
je
das
push
in
inc
inc
in
lcall
jge
test
and
es
mov
lock
push
setno
push
incl
out
inc
mov
out
pop
cli
mov
and
hlt
push
sbb
jle
fwait
es
fisttpl
fistpl
lahf
andl
jnp
adc
cmp
cltd
lahf
outsb
mov
add
pop
mov
xchg
add
int3
ret
test
push
sub
mov
fwait
sbb
pushl
shl
in
out
andl
scas
adc
or
mov
fisttps
dec
lret
ret
xchg
push
aas
aas
lds
cwtl
push
popa
dec
ljmp
mov
leave
pop
xor
dec
fisubs
cmpsb
add
stos
insl
outsl
push
insb
cltd
enter
and
cmp
ja
stc
icebp
and
int
enter
jo
cmp
out
dec
cmc
js
add
pushl
sbb
data16
ret
cmp
imul
mov
imul
idivb
jg
adc
into
ljmp
incl
xchg
lods
cli
xchg
sti
xor
add
ds
push
jno
jbe
mov
nop
filds
ret
shll
sbb
imul
fisttps
inc
mov
lcall
ficompl
leave
push
add
notb
into
outsl
clc
fidivl
xor
or
pushl
mulb
cmc
cmp
sub
stc
dec
push
xor
xor
jmp
mov
inc
in
or
ficoml
sub
fisubrs
mov
adc
lcall
fs
dec
mov
lret
repnz
lcall
incl
jb
loop
icebp
mov
xchg
sahf
xor
cmp
int3
mov
jo
in
pop
insb
adc
insl
mov
out
repz
aad
cltd
inc
sar
xchg
pop
in
cwtl
and
jmp
add
mov
test
psrld
imul
ficompl
lods
inc
movsl
or
cld
dec
rol
or
leave
loopne
xchg
pop
mov
and
xchg
mov
mov
sub
shll
decl
outsb
bound
sub
mov
adc
xchg
repz
ljmp
aad
loope
and
in
jmp
jns
rcrl
nop
in
push
imul
cwtl
sbb
outsl
outsl
mov
adc
pushf
mov
in
stos
add
mulb
clc
xchg
xchg
es
xor
jmp
sub
cmp
sbb
jmp
repz
xor
lds
ret
push
or
jmp
dec
dec
fildll
js
mov
fbld
roll
sbb
pop
sti
int3
lcall
jne
dec
outsl
cmpsl
hlt
jg
push
sbb
ljmp
lods
mov
or
data16
fdiv
test
jb
cmp
mov
xchg
xchg
movsb
clc
incl
push
out
divb
sub
mov
sbb
sahf
inc
add
loope
ds
sub
xchg
and
jg
sub
mov
cltd
arpl
in
mov
sbb
mov
cmp
insl
cld
mov
mov
pop
in
ret
mov
std
dec
shr
cmp
ret
and
arpl
ljmp
js
mov
je
adc
dec
add
idivl
jecxz
dec
or
inc
xchg
cld
mov
mov
push
dec
jmp
and
ljmp
scas
push
sahf
and
push
sahf
imul
cmpsl
ss
out
mov
das
rorb
mov
out
test
adc
fcmovb
adc
enter
lods
pop
jno
lods
pop
push
sub
cld
or
push
pop
mov
fsub
xlat
xor
mov
movntps
js
and
push
sbb
cwtl
addr16
ret
clc
pop
jle
push
pop
sahf
jp
push
ficoml
out
imul
dec
jmp
mov
ljmp
sbbb
xchg
or
loopne
jno
loopne
decl
jmp
cmp
arpl
popf
mov
movsb
incb
push
adc
adc
pop
int
pop
scas
call
inc
mov
and
and
xchg
mov
stc
jne
in
add
push
icebp
push
or
mov
and
lcall
fsubl
mov
in
mov
pop
jae
std
ja
mov
mov
lcall
ret
dec
xor
stos
xchg
in
push
push
cmp
clc
jae
stos
out
decl
inc
and
pop
addb
insb
lea
xchg
std
mov
sub
insb
jecxz
test
lcall
push
mov
push
and
mov
mov
jbe
sti
lret
mov
mov
in
sub
cmp
inc
push
rolb
jo
icebp
ljmp
lret
mov
inc
xchg
xor
mov
fdivrs
aam
push
repnz
stc
cmp
mov
dec
popa
mov
jns
es
and
int3
push
ljmp
sub
and
mov
or
outsb
popf
pop
pop
cltd
gs
or
xchg
adc
gs
xchg
std
jg
mov
inc
icebp
ljmp
cwtl
jg
mov
imul
inc
fs
push
je,pt
dec
jae
jbe
push
lret
mov
cwtl
inc
push
xchg
call
sub
pop
xor
add
or
idivb
mov
mov
test
mov
orl
popf
movsb
hlt
movsb
pop
cmp
xchg
adc
into
pusha
pop
or
jmp
stc
mov
out
or
mov
mul
stos
mov
and
call
push
mov
orb
mov
cmpsl
push
dec
mov
iret
fiadds
lods
insl
fisttpl
icebp
or
ljmp
sub
cmc
xor
sahf
negb
push
or
mov
xchg
cmp
les
mov
repnz
pop
call
mov
fsubs
jge
mov
js
mov
mov
mov
push
add
dec
add
loope
rorb
inc
fcomps
ljmp
sti
decl
jecxz
mov
scas
push
jb
pop
sbb
pop
dec
xor
jmp
decl
inc
mov
das
stos
jns
shrl
mov
mov
jmp
iret
mov
fdivr
incl
mov
rcrl
add
inc
shr
nop
in
sub
sti
ss
jo
cli
or
out
cmp
lcall
jb
pushf
mov
mov
ljmp
js
std
cwtl
dec
loopne
push
push
mov
push
mov
movsb
das
into
sub
lods
mov
or
inc
push
lods
fwait
jecxz
or
inc
loopne
call
pop
sub
frstor
call
or
daa
sahf
lods
in
out
mov
xor
cli
mov
cmc
scas
test
call
pop
into
lahf
je
fldcw
mov
xchg
cli
pushl
sbb
lret
xchg
mov
or
jmp
int3
movsb
nop
bound
xlat
fldl
ds
jnp
fdivl
jne
sbb
xchg
stc
add
fcomip
arpl
mov
fdivl
sahf
test
sub
dec
xchg
arpl
fnstenv
incl
scas
out
sbb
adc
jns
jae
leave
mov
mov
loopne
jbe
call
cmp
nop
daa
lock
cmp
mov
jbe
lock
lcall
mov
xor
into
fildl
cmp
ficoml
push
cwtl
cwtl
outsb
push
sub
push
cli
jmp
pop
daa
adc
imul
cwtl
rcrb
xchg
sub
int
pop
rol
shrb
or
xchg
ljmp
imul
jle
dec
xchg
push
movsl
push
push
in
mov
mov
shlb
dec
int
xorb
pushf
sti
fcomps
scas
lcall
decl
jne
jecxz
nop
test
arpl
cmp
xchg
enter
fs
cs
mov
cwtl
adc
push
ljmp
jp
or
inc
sub
push
aam
andl
daa
lods
cmp
leave
cmp
lods
outsl
aas
fdivr
jg
orb
cli
mov
leave
icebp
cs
pop
cmp
fwait
les
cmp
jl
or
outsl
adc
orl
xor
inc
ss
cmp
inc
lret
cmp
xchg
or
lcall
xor
mov
jno
push
xchg
or
mov
mov
jb
sarb
lret
lods
xchg
mov
jge
clc
jmp
push
adc
shlb
mov
cmp
decl
push
jbe
dec
repz
jbe
fists
cmp
bnd
clc
jmp
mov
stos
sub
pop
test
mov
pop
ja
sarb
mov
sbb
sbb
adc
xchg
xchg
outsb
aaa
cmc
ss
lock
lcall
xchg
mov
xor
test
clc
mov
sub
enter
or
popa
out
dec
scas
sub
jg
aas
xchg
cmp
push
dec
add
mov
and
jg
cmp
dec
filds
lahf
mov
cmp
cmpsl
movsb
fistl
mov
imul
sbb
shlb
test
fisttpll
mov
cmp
mov
jmp
inc
fwait
xchg
inc
test
push
pop
fnstcw
dec
inc
cmp
mov
rcll
xchg
xchg
pop
call
sub
lahf
aam
adc
or
jg
dec
xchg
test
stos
daa
push
xor
loopne
mov
cmp
shrl
ds
pop
rol
jg
mov
jo,pt
lods
lret
test
xchg
sbb
frstor
call
rcr
shr
lahf
add
adc
movsl
mov
jnp
int3
cmp
adc
pop
jo
ja
cmpsl
add
xchg
xor
push
xlat
cmc
mov
mov
xor
push
push
sbb
hlt
iret
lahf
aas
or
inc
mov
incb
mov
mov
movsb
and
pushl
sbb
jns
xchg
pop
push
xchg
or
cwtl
cmp
jmp
inc
jbe
ljmp
pop
push
push
xchg
jmp
pop
push
dec
and
insb
xor
xchg
add
lock
jecxz
xchg
movsl
push
lcall
sub
push
cltd
sbb
jns
pushf
push
sub
shl
sub
inc
lock
mov
or
push
cmp
aas
jne
dec
push
or
xor
call
push
xchg
out
lret
cmp
dec
or
notl
dec
ja
sub
scas
add
push
jb
faddl
rorb
add
and
jb
jb
sbb
inc
aas
lret
addl
jp
insb
aam
jmp
push
cmp
mov
jne
mov
or
clc
fnsave
std
fistps
ja
dec
xchg
mov
sahf
add
or
pushf
cmpb
ljmp
mov
and
cmp
imul
dec
pop
mov
imul
jo
pop
and
add
add
mov
pop
and
pop
dec
push
decl
out
sbb
jno
and
adc
inc
mov
jp
incl
mov
adc
adc
insl
mov
push
add
imul
dec
jl
xchg
aam
xchg
mov
add
or
fisttpll
clc
mov
adc
sbb
mov
push
ret
ljmp
and
insb
adc
cmp
inc
inc
in
add
push
in
push
popf
dec
push
dec
pop
stos
sub
lcall
xchg
add
mov
fs
dec
bound
push
adc
loope
popa
dec
pop
sub
add
adc
js
stos
sub
pushl
inc
adc
add
cmp
add
jno
ret
in
hlt
lds
aas
je
imulb
lock
movsb
xchg
test
xchg
int
sbb
call
and
pop
pop
movsb
sahf
cmp
jb
lds
jno
cltd
loope
push
movsl
inc
mov
les
xchg
ds
pop
cwtl
fstl
shlb
push
mov
dec
xor
imul
js
test
das
cli
sbb
sahf
cwtl
fisubrs
xchg
or
fwait
cli
out
sahf
jmp
fs
mov
mov
add
add
lea
int3
incl
jb
lahf
out
mov
and
fsubs
or
call
cltd
xor
frstor
cmp
loopne
loope
incl
les
sbb
cmc
fimull
cltd
mov
sarl
pushl
insl
inc
push
pop
and
notl
es
jge
jl
xor
and
pop
push
xchg
fs
hlt
je
mov
cs
mov
and
jbe
fcomp
sti
movsl
ljmp
hlt
lahf
xchg
and
sbb
push
mov
jle
mov
call
bnd
popa
mov
loopne
test
xchg
xorl
mov
cmp
scas
icebp
or
lcall
ja
mov
ret
jle
int3
xlat
aam
stc
pop
repz
mov
clc
fnstcw
jp
pop
add
jge
std
popf
cli
add
je
cltd
or
inc
inc
cld
ljmp
jae
faddl
in
inc
outsl
arpl
xchg
mov
or
xchg
hlt
lods
ret
decl
jne
lods
mov
jae
lods
xor
jmp
jg
mov
mov
sbb
or
ljmp
pop
aad
cmp
jno
loope
pop
aad
icebp
jmp
inc
jmp
cmp
in
mov
fs
loopne
imul
mov
sub
mul
fstl
loope
mov
sbb
int3
mov
jmp
popf
mov
push
lret
push
cmp
xor
and
sbb
and
mov
cmp
push
cmp
push
and
loop
add
imul
jb
gs
call
add
div
addb
add
and
cli
nop
pop
pushf
xor
divl
push
shr
aad
and
lcall
stos
lahf
fldcw
test
rclb
test
mov
imul
aas
sbb
fildll
js
dec
and
jp
into
jno
cs
jne
inc
cld
call
stos
push
push
dec
pop
xchg
dec
jb
inc
add
in
mov
push
push
cs
in
rol
push
scas
daa
leave
or
fdivrl
ds
lcall
or
mov
pop
dec
cmc
dec
sbb
clc
fbld
xchg
mul
mov
push
cli
sub
leave
leave
icebp
push
pop
test
test
mov
pop
dec
dec
out
ljmp
sbb
lahf
cwtl
sarl
xchg
jno
add
scas
inc
inc
add
cld
sbb
mov
hlt
shr
inc
xchg
push
lcall
or
inc
push
bound
les
jb
arpl
sub
mov
sub
lcall
xor
push
stos
or
mov
je
mov
sub
jg
xchg
sbb
aam
xlat
cld
int3
test
shrl
shl
mov
mov
jg
push
xor
sub
icebp
pop
inc
movsl
mov
js
cmp
ss
xchg
jnp
cmpsl
mov
test
into
and
cmp
lods
cmc
pushl
fildl
ret
adc
ljmp
add
mov
cld
es
push
push
add
xorb
pop
lock
mov
sbbb
daa
js
movsl
imul
adc
enter
inc
cmpsb
and
in
sbb
dec
mov
jmp
loope
decl
lock
jno
insl
ds
in
mov
adc
jge
xchg
add
inc
xor
or
xchg
fimuls
jg
xchg
add
decl
roll
push
aas
stc
mov
jge
cltd
cmc
mov
out
cli
mov
bound
or
mov
jmp
mov
cmc
xor
icebp
mov
rol
inc
and
xor
mov
cmpsl
cmc
shll
movsl
pop
inc
test
mov
sub
lcall
test
mov
fcmovnb
dec
loope
dec
push
fnstenv
cmpsb
lcall
push
sbb
fs
sbb
jle
movsl
out
test
and
aad
push
iret
jno
pushl
popa
push
or
mov
dec
mov
insb
xchg
test
sbb
test
rclb
pushl
scas
add
rcrl
fstpt
data16
mov
fs
push
dec
in
add
ljmp
in
imul
adc
xor
aaa
pop
aaa
imul
jo
xchg
cmpsb
push
dec
lret
daa
out
stos
outsb
imul
xchg
xchg
stos
push
lcall
xchg
adc
repz
and
pop
mov
sarb
dec
cmp
fcoml
pop
iret
aam
cmpsb
mov
loop
sbb
fs
jp
jg
shll
fs
pusha
gs
addr16
ja
mov
fistpll
adc
sahf
adc
sbb
or
xchg
aam
shr
sub
cmp
push
cmp
adc
cltd
lret
or
sbb
enter
mov
test
loope
xor
fdivrp
lcall
loope
jo
loopne
stos
lret
mov
jns
mov
pop
mov
pop
mov
push
addr16
sbb
and
stos
int3
ja
das
push
stc
xchg
popa
cwtl
aam
xchg
pop
sbb
insb
daa
adc
icebp
or
sub
in
out
add
dec
orb
ljmp
in
xchg
cwtl
je
sbb
mov
pop
ljmp
jae
outsl
ficomps
jns
mov
cmp
xchg
insl
jl
inc
cmp
lcall
enter
pop
sbb
and
mov
call
cmp
pushl
mov
les
sub
inc
aaa
lods
adc
incl
push
dec
mov
push
mov
sti
jae
popl
scas
or
incl
sbb
cmp
sub
adc
sbb
jge
xchg
ljmp
jno
push
pop
fmull
int
pop
pop
jecxz
push
mov
xor
mov
jnp
lods
mov
out
adc
iret
add
scas
clc
decl
imul
pop
adc
jecxz
jge
inc
popf
cmp
fldl2t
inc
lret
and
add
jo
xor
test
adc
sub
into
xlat
jno
dec
adc
es
inc
push
mov
lcall
cli
xchg
jae
insb
repnz
pop
aas
adcb
in
flds
jg
out
and
and
jmp
outsl
loop
test
or
dec
fiadds
pop
jl
add
std
call
enter
sbb
cmp
rcl
mov
pushf
cld
shrl
je
jg
sub
push
out
scas
jns
mov
in
mov
in
ljmp
fdivs
jnp
sbb
out
in
cmp
or
and
cltd
mov
ljmp
mov
scas
and
test
inc
push
lds
xchg
out
sbbl
inc
push
popa
xchg
sbb
inc
pop
lods
cwtl
pop
sbb
dec
pop
push
cmp
push
mov
cli
jmp
mov
pushf
icebp
inc
add
adc
inc
pop
mov
adc
call
jbe
fwait
mov
fwait
lods
roll
push
cmpsl
cmp
andl
jb
mov
clc
sub
xchg
bound
filds
pop
fldenv
inc
cmp
xchg
sbb
bswap
in
jne
pushl
xchg
arpl
fwait
pop
or
inc
mov
mov
add
mov
out
out
jmp
pop
in
mov
les
cmp
je
decl
xor
outsl
cmp
mov
incl
mov
imul
sti
pop
pusha
fadds
adc
scas
scas
or
inc
jnp
sar
mov
jge
and
push
lds
cmp
sub
ret
inc
sub
dec
sbb
sub
es
jge
add
jmp
pop
add
jecxz
xchg
adc
cmc
imul
mov
lods
sahf
sbb
pop
jmp
push
cld
mov
sub
mov
jg
arpl
jb
xchg
lds
mov
dec
popf
mov
jmp
xor
scas
pushf
in
retw
jl
stos
pop
dec
dec
jg
inc
add
int
and
push
jg
jg
jo
int3
rorb
dec
popa
repnz
pop
jecxz
add
pushl
icebp
cltd
xchg
pop
sub
add
aam
decl
jo
test
in
or
xchg
pop
in
sar
repnz
xor
adc
inc
mov
mov
and
add
gs
sahf
aaa
ljmp
or
incl
rolb
xor
lods
sbb
push
inc
mov
pop
pushf
arpl
call
loopne
jmp
call
xor
movsl
jns
leave
lds
sub
stos
call
cmpsb
jb
jb
and
push
dec
jo
dec
popf
sbbb
mov
lea
cs
decl
pop
inc
inc
push
xchg
imul
arpl
adc
push
sti
sbb
incb
je
mov
jg
scas
sti
aam
roll
int
idivl
in
mov
std
jmp
lcall
xchg
jbe
sti
cmpsl
adc
fldt
out
lods
sbb
mov
or
inc
sub
jnp
sub
test
push
fadds
pop
ret
rcl
inc
ljmp
daa
add
aam
das
cli
incl
je
jbe
fsubs
and
aas
das
gs
scas
movsb
fs
imul
jmp
inc
mov
mov
cmp
or
adc
mov
jb
xor
in
scas
call
std
mov
mov
inc
jl
aas
lahf
fcoms
adc
lcall
cltd
jmp
cwtl
adc
jne
inc
stos
adc
adc
push
and
adc
pop
mov
pusha
jle
dec
push
mov
sti
lcall
call
sbb
pop
loopne
push
in
mov
ret
mov
pop
je
mov
adc
dec
ljmp
clc
dec
xchg
shll
dec
jl
stos
xchg
dec
dec
inc
scas
insb
fstp
mov
adc
fstl
cmp
mov
icebp
ja
faddl
mov
mov
push
notl
icebp
mov
lods
es
mov
scas
push
out
test
mov
sarb
lret
xor
je
cwtl
fldt
cmpsb
xor
les
mov
jb
adc
ss
push
jno
out
fmulp
dec
rol
add
addl
and
pop
loope
in
es
call
pop
xchg
xchg
mov
lcall
pushl
movsb
int
sbb
jle
cmp
pop
inc
stc
lret
mov
test
adc
jecxz
movsl
shll
inc
ror
mov
test
xchg
in
shr
dec
ja
jg
decl
and
iret
jno
cmpsl
clc
cmp
xor
lret
in
jmp
in
jmp
mov
and
sub
jae
in
cld
test
test
outsl
sbb
cmpsb
hlt
stos
cli
lock
adc
ds
jae
aas
aas
icebp
pop
fcmovb
daa
fdivl
jbe
push
scas
stos
pop
jp
test
push
adc
push
pushl
cld
cld
loopne
mov
or
push
loopne
or
sbb
adc
aas
xor
jmp
dec
cmp
mov
popf
iret
movb
pop
lret
jmp
add
int3
push
roll
cmp
push
pop
or
dec
hlt
jnp
ret
xorl
jecxz
sbb
add
jbe
js
lds
aad
out
nop
ja
lret
daa
push
jl
pop
jb
pushf
jbe
ja
pushl
mov
or
shlb
or
adc
das
push
addr16
mov
pop
push
insb
jecxz
lret
ficompl
call
sbb
jle
fisttpl
cmp
in
jb
xor
jp
ds
mov
ljmp
int3
insb
in
nop
out
or
in
lock
insl
addl
fs
xchg
add
in
cmpsb
stos
mov
lcall
loop
push
xchg
lods
sarb
pop
sti
push
movsl
inc
mov
mov
mov
mov
cmpsl
add
pop
mov
adc
aad
aas
sub
jmp
incl
add
popf
xor
mov
push
or
jno
mov
jo
adc
push
dec
lock
lcall
add
push
rorb
gs
xchg
dec
xchg
lock
and
sub
pop
dec
and
call
lcall
clc
movsl
rcrb
test
adcb
leave
inc
dec
jb
mov
fwait
mov
mov
cmp
dec
add
jne
sbb
push
mov
ljmp
sbb
dec
pushw
push
popl
test
loope
or
sub
and
cli
lcall
pop
and
xchg
aaa
add
mov
xchg
or
push
fs
dec
shlb
sbb
pushl
pop
rcrb
xchg
scas
mov
inc
sub
ss
xchg
cmp
jg
add
inc
dec
xchg
mov
dec
dec
clc
push
pop
sbb
sarl
pop
fwait
mov
push
jmp
and
enter
sub
les
je
xchg
push
pop
mov
mov
call
out
idivl
lret
jbe
add
std
stos
dec
es
cwtl
sub
jg
test
decl
outsb
xchg
mov
jo
lahf
lcall
push
xchg
je
mov
xchg
sub
outsb
pop
add
xorl
mov
mov
pop
dec
scas
push
xchg
xlat
aaa
cmp
inc
rclb
repnz
pop
and
push
cmpb
xchg
add
incl
in
lds
in
adc
icebp
sub
dec
mov
cli
mov
add
scas
mov
push
pusha
repnz
decl
frstor
push
pushf
sahf
popf
hlt
in
lods
push
pop
cmp
mov
xor
xchg
mov
decl
dec
aaa
sub
sbb
cmc
adc
sbb
cmpsb
mov
jmp
test
in
ret
jnp
dec
sbb
mov
aam
mov
decl
out
repnz
sub
mov
push
ja
hlt
cltd
cs
inc
stc
adc
push
es
sub
dec
popf
sub
sbb
and
sbb
scas
xchg
sbb
dec
ja
lods
or
int3
imul
test
mov
cmp
xor
ret
popf
test
xchg
fs
enter
clc
pushl
rolb
fcompl
orb
fmull
fcomip
pusha
in
insb
adcl
shl
sub
decl
mov
inc
push
fildl
jo
adc
inc
add
dec
sub
inc
imul
fists
lock
mov
out
test
shr
mov
daa
cmc
mov
inc
out
xchg
sbb
ret
pusha
cld
decl
and
mov
arpl
mov
adc
sbb
jns
pusha
jle
inc
xchg
fcmovne
ret
cmp
ljmp
mov
jae
mov
jns
je
xchg
in
mov
je
pop
outsb
add
pushl
fldcw
adcb
enter
add
pop
xchg
xor
jmp
ljmp
jmp
int3
mov
ljmp
rcl
scas
mov
adc
mov
push
jbe
cmp
fisubrs
add
mov
mov
repz
and
loope
addr16
sar
ljmp
stos
imul
mov
sub
cmp
jg
add
pop
mov
sar
pop
or
mov
rcll
pop
cmp
dec
jg
jb
cwtl
mov
icebp
int
popa
xor
into
leave
mov
mov
call
sub
adc
and
repnz
cmp
lcall
cli
ds
xor
out
cwtl
mov
dec
leave
cltd
inc
add
addr16
jmp
add
sub
icebp
dec
xor
outsb
faddl
out
stos
daa
xor
lea
ss
leave
mov
insb
sub
xchg
pop
push
cwtl
pop
lds
ss
jmp
add
sbb
pushl
das
adc
loopne
cwtl
fsubrl
pop
outsl
pusha
xchg
nop
ljmp
sbb
scas
pop
or
adc
inc
sti
mov
nop
shrl
arpl
sub
xchg
mov
inc
and
xor
aaa
push
stos
sbb
mov
xchg
sbb
xchg
lds
push
ljmp
adc
bound
mov
aad
xor
mov
std
in
loop
fildl
lock
xor
clc
decl
or
and
xor
sarb
mov
fbld
mov
xor
sub
in
xchg
outsl
clc
call
push
and
ljmp
pop
outsb
xor
ljmp
cmc
decl
mov
mov
lods
mov
popa
mov
loop
pop
dec
cltd
dec
je
stos
pop
jo
dec
sbb
pop
std
jecxz
jns
xor
push
sbbb
decl
hlt
rcr
or
add
loope
fdivs
fcomip
mov
pop
cli
lahf
push
adc
push
int3
push
nop
xor
or
lcall
fildl
fsubrp
daa
insl
sub
mov
inc
push
das
or
mov
push
sti
and
push
sar
jg
aas
into
add
push
dec
pop
aaa
xor
pushf
adc
mov
notl
sub
lcall
cmpsl
pop
in
iret
inc
cmpsl
fisubl
xor
addb
xchg
popf
jno
test
adc
add
push
and
test
push
inc
xchg
push
ljmp
and
hlt
ret
or
cltd
jle
inc
dec
jnp
mov
scas
mov
pop
jl
shl
incl
sahf
lods
ret
scas
dec
adc
xchg
pop
test
in
mov
daa
push
pusha
xor
incl
cli
leave
jecxz
jno
xchg
jge
dec
dec
jmp
mov
test
mov
pop
repz
sbb
fisubl
pop
lods
ljmp
adc
xchg
jmp
cmp
aas
cmpsl
je
pop
or
jg
jmp
gs
iret
stos
iret
addr16
ds
js
in
icebp
cltd
cmc
cmp
call
arpl
in
sbb
mov
sub
push
jb
outsl
or
jnp
and
mov
incl
sarl
in
xor
out
in
mov
cmp
cmpb
mov
jmp
scas
pushf
popa
or
lea
mov
inc
in
fidivrs
sbb
mov
mov
cwtl
xlat
icebp
cld
and
adc
pop
mov
jo
out
decl
aam
adc
pop
jae
add
mov
inc
flds
mov
nop
frstor
jb
xchg
cltd
in
xorb
xlat
and
dec
pop
loopne
pop
or
cmp
das
imul
jmp
push
add
rcr
aad
inc
int3
jg
jae
sti
test
sbb
inc
inc
mov
sahf
add
cld
jmp
pop
mov
mov
sbb
bound
jl
sub
and
xchg
jbe
data16
stc
test
repz
and
in
mov
gs
xchg
jecxz
arpl
enter
out
ss
xlat
xchg
push
lcall
push
fildll
icebp
pop
jecxz
sub
mov
roll
dec
xchg
jle
lds
xor
aas
test
rclb
rorl
mov
daa
adc
sahf
inc
jl
dec
jl
shrb
jle
pop
or
ja
and
std
fld
filds
lahf
push
mov
xchg
jmp
cwtl
inc
pop
pop
rol
push
mov
das
sbb
ljmp
outsl
adc
sbb
testl
out
sarb
jo
arpl
or
int
sbb
dec
push
push
loop
xchg
jecxz
cmp
pop
ds
int3
push
repnz
xorl
dec
adc
ljmp
xchg
xchg
movsl
popf
sahf
rcll
addr16
rep
ret
sti
pushl
aaa
or
sbb
ja
add
add
insb
sbb
call
jge
std
loope
mov
xor
dec
out
mov
cli
adc
incl
push
jnp
push
lds
sub
adc
pop
xor
test
decl
ja
mov
jmp
icebp
cmp
adc
dec
xor
mov
outsl
outsb
aaa
push
ds
pop
ficompl
das
pop
push
cwtl
mov
lret
xor
cwtl
in
mov
pop
pop
nop
push
inc
cmp
in
jl
lods
mov
rcr
pop
mov
repnz
lcall
jmp
cs
ljmp
jnp
mov
mov
icebp
jecxz
mov
lcall
lcall
xor
rcll
add
andb
mov
cwtl
fistps
stos
push
sbb
nop
xchg
mov
sbb
data16
imul
cli
mov
jmp
fstl
arpl
jmp
pop
pop
test
ror
fstpl
popf
lock
call
mov
out
mov
jle
and
lret
dec
xor
xor
call
shr
lds
insb
xchg
jnp
cltd
dec
sahf
into
push
daa
mov
pop
loop
scas
cli
outsl
mov
cmpsl
mov
aaa
mov
jmp
jmp
sbb
outsl
arpl
sub
mov
scas
add
lcall
rorb
daa
jnp
stos
sar
jnp
xchg
aam
stc
or
cmpl
mov
jp
jecxz
loop
lret
fidivrl
jg
pop
push
push
dec
lods
movsb
andl
bound
dec
arpl
push
mov
add
or
pop
sub
test
test
adc
lcall
insb
jecxz
mov
jmp
cmp
push
push
push
dec
lahf
push
or
jno
and
ljmp
adc
clc
xchg
fildll
xchg
sub
xchg
cmp
mov
ror
fiadds
ret
clc
jmp
mov
dec
rorl
pop
inc
imul
xchg
lock
pop
mov
xor
xchg
js
lods
sti
mov
mov
ss
scas
stos
outsb
pushl
iret
movsl
or
xchg
stos
lret
pop
cmp
fsubs
mov
outsl
cmc
jbe
adc
push
cmp
jecxz
int
fs
sub
gs
inc
add
out
xor
decl
movl
jl
cmp
lcall
inc
push
jo
popl
mov
cltd
repnz
add
lcall
movsb
icebp
repnz
ret
xchg
js
out
add
decl
mov
ret
icebp
push
and
dec
xorl
cmc
imul
stc
xor
push
lret
test
out
jmp
in
push
dec
xchg
scas
push
aam
mov
incl
cmc
mov
mov
sub
inc
cwtl
adc
pop
subl
jmp
int3
sar
jmp
enter
cmpsb
movsl
cwtl
pop
push
pusha
iret
sahf
xchg
into
ljmp
pop
add
push
xchg
adc
ja
inc
lea
adc
push
push
popa
test
pop
std
fcmovnbe
movsb
scas
cmp
std
jp
popa
push
testl
adc
push
into
jns
dec
inc
inc
hlt
outsl
sub
hlt
cmp
ljmp
stc
jmp
fbstp
xchg
nop
subl
pop
pop
xchg
shll
pop
cmc
cld
aaa
test
pop
push
cmp
pop
push
popf
sub
xor
movsl
and
int
outsb
sub
jmp
sbb
mov
cmovns
dec
xchg
out
and
mov
cwtl
cld
nop
mov
lock
inc
cmp
mov
sub
clc
push
inc
cmp
push
push
jbe
dec
inc
or
jp
hlt
aam
xchg
xor
fsubrl
jge
jmp
sbb
add
sbb
lcall
lret
inc
sub
mov
pop
cmp
xor
in
call
sub
mov
enter
jge
fcmovnb
cwtl
and
lcall
push
and
and
or
jmp
push
pushf
inc
xor
ret
sbb
sbb
cmc
lcall
sbb
xchg
dec
sub
jo
das
and
fwait
push
clc
pop
cmc
int
adc
loopne
leave
dec
out
pop
mov
bound
shr
insl
xchg
sbb
sti
bound
sub
fucomip
lods
iret
fdivr
ljmp
test
pop
outsl
mov
sub
lret
mov
mov
add
jmp
jnp
loope
dec
jle
cltd
and
mov
aaa
leave
or
push
das
xchg
jns
ds
iret
clc
sub
or
out
push
mov
jge
push
push
xor
xchg
or
rcr
pop
imul
push
je
fsubrl
mov
adc
mov
mov
sbb
es
mov
xchg
sub
mov
sbb
call
jne
sbb
je
mov
in
fbld
ret
mov
jg
cwtl
pop
push
pushl
push
rorl
rolb
aaa
addr16
adc
mov
add
ss
std
jmp
and
add
fidivrl
mov
repnz
cmp
jle
and
xchg
mov
xchg
cmpsl
pop
add
into
aam
jbe
loope
call
movsl
xor
push
push
lret
jns
mov
stc
pop
and
jns
jmp
or
dec
jns
repnz
das
outsl
data16
std
xchg
pop
cmc
ljmp
xchg
jnp
push
mov
add
daa
xchg
cmp
sub
addr16
clc
decl
mov
fiadds
gs
cmpsb
add
int3
mov
ljmp
sahf
mov
push
les
sub
pushl
or
mov
imul
jo
imul
loop
push
jae
dec
pop
cmc
fstpt
or
add
xchg
fistl
mov
and
call
ret
and
lods
dec
xlat
mov
cmp
pushf
sub
mov
sbbl
jp
cltd
cli
jmp
daa
mov
popa
lcall
and
incl
loopne
mov
jnp
push
fnstcw
mov
mov
inc
mov
repz
add
incl
pushf
xorb
into
dec
in
aas
ja
movsb
shrb
iret
push
mov
or
leave
dec
pop
fs
sub
jb
xorb
aam
lret
inc
xlat
ret
push
fs
push
test
fnop
sub
inc
cmp
lods
out
cmpsl
pop
std
mov
dec
jbe
into
dec
pop
push
dec
cmp
sbb
pushl
inc
sub
sub
push
mov
jae
pop
dec
pop
xor
adc
jp
fmuls
out
clc
fstps
xchg
sub
test
jl
xchg
aam
fbld
hlt
popa
leave
jbe
sub
push
dec
cmp
ja
cmp
jge
call
mov
or
leave
ss
inc
mov
push
cli
int3
gs
or
or
mov
mov
aas
movsl
movsl
or
out
in
push
lds
scas
fistps
cmp
dec
js
xchg
pop
mov
popa
call
jg
inc
jno
test
cmp
mov
ret
loop,pt
sbb
xchg
inc
cmpsl
or
jg
cmp
pop
scas
roll
adc
xchg
cmp
xor
incl
mov
lret
mov
mov
mov
xor
and
and
ljmp
jle
mov
repnz
imul
mov
push
sub
les
popa
and
dec
pop
cmp
or
scas
cmp
lret
jae
push
sti
cmc
cld
mov
mov
pop
cmpsb
bound
mov
shl
sbb
pop
sub
fisttpll
stos
pop
xchg
pop
fs
cs
call
fwait
aam
test
cltd
or
stos
dec
rorb
les
test
call
loopne
xchg
or
pop
int
jbe
adc
or
lcall
test
daa
lret
repnz
push
dec
jecxz
call
dec
js
fistpll
ret
bound
out
in
rcl
or
inc
inc
lret
movsl
jnp
sbb
push
ret
fdivrl
jle
les
pushl
inc
jbe
lods
mov
sbb
jge
xchg
addl
jg
addb
mov
adc
adc
mov
jo
aas
in
pop
lods
pop
bound
inc
addb
cmovns
sar
sahf
mov
mov
mov
decb
in
inc
shrl
lret
in
mov
lcall
mov
mov
ljmp
cmp
cmp
inc
pop
popa
stos
adc
or
mov
lcall
jmp
push
push
push
mov
shll
cli
xor
incl
inc
ret
cld
mov
aad
psraw
aaa
push
jg
subb
mov
mov
pushl
mov
dec
push
inc
fidivs
xor
mov
std
jnp
pusha
mov
sub
add
loop
push
dec
cltd
js
nop
scas
cmp
jmp
aaa
mov
push
push
inc
scas
sub
movsl
mov
ret
rcrl
incl
je
push
inc
popf
cmp
mov
sub
mov
jne
rclb
add
bound
mov
ljmp
sub
cmc
scas
int
sbb
jg
bound
sbb
or
lcall
jmp
fmuls
into
ja
stos
inc
or
cmp
rcrl
mov
push
and
addr16
and
xlat
adc
iret
sub
test
stc
test
movq
push
sahf
pop
ljmp
dec
hlt
add
les
test
fcmovnbe
xchg
shlb
fsubp
orb
or
sbb
testl
cld
call
cs
addr16
les
pusha
dec
add
inc
xchg
mov
mov
jle
push
test
cmpsl
cmp
dec
or
insl
adc
shlb
test
mov
cmc
loop
std
call
mov
inc
sub
inc
sbb
or
int
mov
push
xor
inc
notl
adc
mov
pop
mov
sbb
ljmp
cwtl
pop
xchg
and
decl
fpatan
mov
sbbb
sbb
or
fnstenv
inc
cli
xchg
cs
mov
sub
push
sbb
mov
lods
mov
jp
lods
cs
in
popf
jns
jno
sub
mov
adc
sub
fdivl
nop
inc
int3
pop
mov
push
sub
jg
cld
test
cld
sub
cltd
gs
and
dec
pop
and
cmp
fdivs
push
jle
sbb
jmp
mov
and
popf
je
pop
pop
or
mov
andl
cwtl
xchg
push
push
fisttpl
aaa
fstpt
and
xor
sahf
repz
dec
xor
mul
sub
xor
js
testb
arpl
sar
inc
xchg
jns
cmc
out
cs
sbb
leave
insb
aas
ret
fisubs
mov
push
jb
push
cli
fsubp
and
push
push
sbb
repz
or
jmp
xchg
in
loopne
jle
stc
xchg
xchg
mov
mov
incl
jb
sub
cwtl
in
imul
imul
lahf
dec
sub
jle
pop
cwtl
or
shlb
div
mov
cmc
fisubs
cli
test
xchg
lcall
shlb
ja
sar
mov
outsb
fwait
push
mov
and
pop
mov
iret
adc
jmp
inc
push
insb
cwtl
or
push
pop
subb
ljmp
clc
sub
gs
xchg
and
out
mov
shll
jmp
cld
outsb
xlat
test
push
popa
xor
push
push
jmp
repz
mov
and
cli
pop
mov
inc
in
enter
dec
mov
xchg
cmpsl
pop
aaa
or
cmp
pop
stos
dec
ljmp
lret
mov
decl
fbstp
pop
addr16
xlat
add
mov
loop
mov
mov
arpl
incl
cmp
dec
adc
testl
std
cmp
rcr
les
sarl
outsl
mov
jae
jg
push
push
icebp
xor
outsb
pop
adc
pushl
push
sbb
dec
dec
push
sub
ss
and
incl
cmp
pop
gs
jb
add
data16
cmpsl
cmc
add
push
lret
inc
dec
imul
enter
lret
loop
stos
sbb
test
jg
lods
lahf
stos
ja
lcall
mov
js
inc
sahf
push
cmp
sub
mov
je
dec
and
cmc
ja
mov
jp
push
mov
mov
and
movsl
addb
cmpsb
fcoml
and
faddl
lcall
push
jno
cmpsb
mov
xchg
fistpll
lcall
repnz
mov
lahf
mov
adc
xchg
test
mov
popf
dec
daa
adc
dec
test
jg
push
pushf
int3
sub
sbb
test
ds
fcomp
call
icebp
inc
loope
les
push
xor
push
mov
push
mov
neg
decl
je
cmp
and
dec
scas
in
inc
adc
loop
ljmp
jns
out
imul
cmp
xchg
mov
and
xchg
mov
adc
mov
pop
xchg
es
xor
jmp
dec
mov
mov
repnz
cld
cmp
sbbl
mov
sbb
adc
sbb
mov
pusha
mov
sbb
shll
push
add
push
jnp
xchg
sar
push
and
int
mov
hlt
nop
shlb
es
and
push
pop
dec
adc
int
cli
add
ljmp
scas
mov
clc
push
adc
es
sub
ljmp
ljmp
addr16
push
out
xchg
mov
mov
lea
dec
data16
mov
call
lods
pop
or
aam
jno
jle
jg
cmp
sti
push
fwait
adc
xchg
fs
or
mov
or
in
dec
rcrl
push
data16
pop
push
push
pop
mov
or
fucom
pop
sbb
mov
push
int3
mov
enter
push
sbb
jb,pn
jns
out
clc
call
rclb
adc
dec
cmp
loop
push
jns
xor
xor
std
iret
adc
ljmp
mov
insl
mov
pushf
push
ljmp
cmp
and
jg
iret
or
nop
dec
call
xchg
cwtl
nop
mov
xchg
add
cmp
arpl
jl
ljmp
lahf
hlt
jle
sarl
inc
xor
pop
inc
divb
or
dec
sub
decl
cmc
or
jb
pop
jns
jo
sbb
fnsave
lahf
mov
mov
jmp
mov
incl
outsb
cmp
lret
push
in
pop
orb
add
lock
dec
sbb
call
sub
cmc
mov
mov
and
repnz
sbb
fildll
mov
iret
pop
xor
cwtl
mov
dec
mov
lods
jmp
addr16
mov
cmp
cmp
call
xor
je
movsb
jnp
pop
inc
outsl
cmpsl
mov
xlat
sar
adc
pop
push
mov
lahf
jb
out
or
jmp
cwtl
push
cmp
push
adc
divb
mov
hlt
cmp
xchg
dec
pop
call
dec
stc
pop
daa
push
mov
dec
repnz
notb
dec
or
pop
loopne
pop
xchg
stos
push
vmwrite
inc
push
push
aaa
rcl
into
cmp
dec
adc
pop
fidivrs
mov
cmp
arpl
pop
lock
mov
cmp
sbb
fisttps
and
cmp
ret
mov
or
mov
out
push
ss
cmp
in
inc
xchg
je
and
jmp
ficoml
pop
pop
add
pop
cld
dec
ljmp
jo
sahf
pop
mov
shll
in
int
lret
ljmp
xor
cmp
scas
or
jl
les
mov
jle
pop
jg
or
xchg
jns
add
xchg
mov
adc
in
lods
and
jge
lcall
cmp
loopne
inc
les
ljmp
daa
mov
pop
inc
push
dec
imul
decl
pop
test
fisubrs
fisubl
add
xchg
rolb
add
sub
jmp
push
add
jns
xchg
push
popa
out
mov
xor
loope
popf
icebp
inc
xor
dec
sub
pop
jmp
aas
ret
aam
pop
lock
adc
lahf
cld
jne
lods
rol
popf
cs
decl
and
mov
bound
inc
pushf
pop
subl
inc
jle
gs
dec
and
and
outsl
mov
in
or
push
fdivrl
and
ds
cmp
dec
sbbl
jge
ja
jne
mov
or
mov
cli
sub
jns
pop
scas
xchg
in
fisubs
outsb
movsb
and
call
adc
jae
mov
mov
pushf
in
sub
movsb
mov
aad
repnz
fldenv
lea
or
cmp
sub
and
xchg
andb
xor
mov
sti
mov
aad
movsl
mov
cmpl
cltd
sbb
jecxz
and
push
ss
inc
cltd
insl
mov
sub
push
fisubrl
mov
fildl
cmp
ljmp
push
outsl
or
insl
in
sbb
enter
fstpl
mov
push
cmc
sub
or
test
jmp
and
adc
dec
arpl
mov
stos
dec
inc
and
dec
fstps
and
pop
push
outsl
mov
jecxz
push
pop
mov
idiv
pushl
adc
lret
mov
sti
jg
aad
inc
mov
push
cmp
lds
shll
scas
cmpsb
ss
inc
insb
es
ja
pop
data16
mov
incl
jns
ljmp
push
and
fmull
xor
jne
push
mov
inc
aad
outsl
dec
aad
dec
fcoml
inc
mov
dec
mov
cld
jg
orl
mov
into
jg
sbb
sub
sbb
cmpsb
dec
xor
stc
adc
jle
fidivrl
or
jmp
ljmp
shl
add
cmp
adc
mov
xor
call
repz
lods
and
das
leave
loope
pop
jmp
aam
into
push
cmpl
mov
dec
out
les
cmp
shlb
jns
jg
shrb
leave
xor
in
add
dec
adc
cltd
iret
dec
fidivrs
sub
mov
popf
loope
sub
ljmp
cmp
fildll
mov
cmp
repz
js
scas
push
or
mov
jecxz
pusha
popf
lcall
adc
leave
enter
mov
add
xor
mov
movsb
mov
sbb
inc
jmp
fldlg2
ret
or
xor
mov
jmp
out
in
jg
ljmp
xor
add
mov
xchg
push
cli
pop
mov
shlb
stos
jmp
add
mov
test
fidivrs
addr16
and
cli
mov
sbb
decl
adc
into
push
out
aam
xchg
push
call
xor
out
push
daa
jnp
mov
jae
test
scas
inc
push
es
pop
push
fsts
sarb
jmp
in
cmp
sub
xor
repz
imul
or
insl
cmp
sbb
fidivrl
incl
sbb
jp
call
scas
in
push
jle
mov
incl
enter
ljmp
add
sbb
xchg
inc
rcrw
adc
jp
cmc
pop
xorb
xor
inc
sbb
pushf
test
push
lahf
adc
sbb
cld
xchg
mov
add
negl
iret
mov
push
out
and
hlt
aas
fisttps
test
imul
add
sub
lds
inc
cmc
ss
fwait
mov
call
pusha
imul
scas
rcl
cli
mov
jbe
xor
xor
incl
stos
sbb
adc
and
lcall
dec
int
jno
sti
inc
jns
mov
dec
lcall
nop
mov
xchg
sub
leave
dec
popa
add
push
arpl
jb
dec
into
call
aas
sbb
test
in
jmp
stos
mov
in
or
fcomps
out
lea
pop
inc
bound
in
pushf
cmp
and
inc
sar
int3
pop
sarl
scas
shrl
repnz
insb
lcall
jmp
adc
mov
inc
pusha
nop
jecxz
pusha
push
mov
pushl
ror
xchg
das
imul
dec
xchg
cmpsb
mov
jns
arpl
jg
pushl
jle
jl
mov
mov
shlb
xchg
adc
and
cmpsb
jne
repz
movswl
call
and
jbe
loope
scas
repnz
mov
add
incl
loopne
lods
inc
cmp
out
out
and
aad
cli
jg
pop
loop
sbb
leave
subb
mov
aam
xchg
xchg
push
or
mov
outsl
add
fists
movsl
mov
mov
loop
pusha
dec
inc
ds
fsubl
decl
gs
jae
jbe
pushf
cmpsb
cmp
mov
std
fucomp
push
inc
cmp
cmpb
cmc
xlat
pusha
adc
fisttps
fdivrl
sub
inc
aad
add
call
and
stc
and
in
sub
rcrl
xchg
out
imul
repnz
xchg
jg
jno
cmp
pusha
movsl
or
pop
push
ret
mov
clc
dec
mov
cld
cmpb
mov
pop
push
adc
cltd
bnd
data16
fdiv
nop
pop
lea
jl
out
cmpsb
adc
cmp
and
mov
cmp
mov
xchg
jmp
mov
cmp
loope
mov
fwait
pop
mov
push
dec
jge,pt
dec
and
rcr
sahf
mov
dec
lds
cltd
jmp
xor
roll
push
aaa
jns
add
in
jno
insb
fsts
xchg
call
ret
add
out
rclb
pusha
lret
es
and
mov
dec
ret
popf
test
jg
loop
lcall
stos
mov
xchg
scas
in
popa
gs
aam
mov
test
in
call
std
dec
jg
xchg
push
pop
cli
jle
push
mov
int3
pop
repz
je
jmp
shll
jnp
pop
inc
repz
cld
xchg
cmp
aas
pop
xchg
iret
test
inc
and
mov
cmpsb
dec
mov
jae
inc
sub
sub
push
dec
cmp
mov
popf
leave
hlt
push
sar
out
sbb
inc
inc
push
push
shr
stos
nop
mov
dec
mov
and
decl
ja
inc
sub
pop
mov
andl
pop
add
jg
enter
movsl
mov
insb
fists
push
lods
xor
xor
je
xor
insb
push
lock
inc
lock
fwait
push
loope
push
aas
push
sub
mov
sbb
fists
movsb
pop
pop
push
sahf
mov
inc
icebp
in
inc
insl
adc
jns
hlt
and
mov
dec
cmp
push
data16
call
and
push
addr16
inc
nop
notl
ljmp
jle
or
aas
test
into
das
in
mov
mov
out
mov
int
add
lea
cmp
jno
idivl
clc
out
jbe
das
fucomi
ljmp
xchg
or
mov
lock
call
imul
ds
jb
push
and
mov
mov
enter
rorb
push
stc
loope
decl
xchg
in
loope
insl
repz
dec
dec
popf
add
push
pop
sahf
pop
lcall
call
ds
dec
lods
mov
lods
jmp
insb
xchg
shll
lret
or
les
test
sbb
pushl
xor
ja
lret
xchg
sub
xchg
mov
mov
adcb
in
shrb
clc
incl
add
pop
mov
lahf
jp
scas
mov
pushl
sbb
pop
sub
adc
dec
lret
jae
nop
fs
aam
xor
cmp
push
je
ja
scas
cwtd
int
cmp
cmp
out
push
cwtl
dec
and
jnp
pop
jle
lcall
je
movsb
andb
addr16
adc
std
call
inc
ret
push
mov
xchg
jg
lds
out
out
cltd
mov
rclb
and
mov
mov
or
xchg
in
addb
push
int
icebp
inc
inc
das
ret
inc
aam
and
sbb
bnd
cltd
pop
add
add
adc
or
decl
insl
adc
sub
mov
ret
idivl
int
sar
out
push
sbb
jle
loopne
movsb
pop
dec
xchg
add
incl
xchg
jg
rcrl
mov
jl
cld
jle
ret
push
dec
pusha
mov
ja
ss
ficoml
sub
lods
mov
mov
lcall
movsb
push
arpl
insl
push
xchg
sarl
mov
inc
das
lret
sub
xlat
fsubr
stc
test
lcall
jl
loope
scas
lahf
bound
ds
mov
dec
xlat
and
in
ja
xor
push
xor
add
call
mov
and
arpl
jbe
xor
pop
adc
loope
mov
xchg
call
stos
jecxz
sbb
jb
mov
das
cmp
mov
icebp
adc
sarl
in
adc
xchg
mov
mov
inc
dec
sub
in
rcrb
add
add
adc
rolb
sti
mov
loopne
lds
out
mov
xlat
lahf
cs
lahf
push
and
mov
xor
stos
lock
insb
lahf
xchg
inc
push
aaa
or
add
jmp
fcomps
enter
add
jnp
xchg
outsb
adc
popl
decl
sub
aas
adc
and
or
les
test
inc
ljmp
lea
sbb
and
fld
xchg
jno
pushf
addr16
inc
xchg
icebp
jg
inc
orb
lcall
pop
popa
mov
fucomip
in
push
sbb
and
adc
push
mov
fbld
out
ret
addl
addl
xchg
mov
mulb
inc
jmp
or
pop
lock
incl
xchg
push
ret
sbb
scas
xchg
mov
sti
iret
insb
addb
int3
pusha
loop
fsubr
in
sub
mov
pop
xor
negb
lods
xchg
cltd
push
mov
cmp
inc
arpl
sbb
mov
lret
xor
jnp
xchg
sarl
cmp
inc
or
cmp
mov
mov
divb
sub
fcmovnu
xor
jmp
js
push
pop
xor
xor
mov
sub
jae
add
adcl
mov
outsl
daa
inc
imul
in
push
mov
xor
sar
inc
aas
stos
scas
jb
dec
or
xor
inc
xchg
fs
out
loopne
mov
jns
jae
decl
dec
inc
or
daa
mov
lret
jp
push
test
fdivrl
mov
lcall
rdpmc
mov
fisubl
push
data16
mov
mov
ret
rol
mov
adc
or
sbb
das
test
leave
pop
add
mov
incl
add
mov
cli
dec
hlt
add
inc
pop
and
jge
test
sar
cmp
sbbl
cmp
jb
or
pusha
jnp
mov
xchg
jg
add
js
jg
add
lods
jmp
push
sub
sub
add
xchg
aad
xchg
inc
jae
inc
stos
out
fiadds
sahf
xor
cmpb
call
inc
shl
or
xor
ret
add
jmp
sub
aam
rcl
mov
loopne
adc
push
leave
adc
jl
push
push
addl
insl
leave
jecxz
sub
mov
lea
call
inc
mov
into
jae
cmpb
lods
mov
mov
cmp
sub
inc
inc
sbb
clc
lcall
jns
pop
out
sub
sbb
push
add
notl
ds
movb
dec
outsb
mov
lods
iret
rclb
push
fiaddl
stos
cmc
pop
inc
push
pop
mov
xor
clc
test
mov
jg
pusha
enter
jp
push
inc
add
xor
ret
ljmp
jl
xlat
sbb
xchg
insb
xchg
scas
insl
loop
lods
mov
hlt
mov
scas
pop
mov
xchg
aam
lcall
in
nop
aam
lahf
lcall
aam
sbb
mov
daa
movsl
fwait
decl
cmpsl
movb
test
decl
lock
push
in
subb
int3
push
jno
cmc
outsl
mov
dec
or
scas
xchg
xlat
arpl
dec
push
pop
mov
mov
divb
jo
ja
inc
cwtl
jne
icebp
scas
out
pusha
movb
sub
lret
mov
aad
mov
jge
xchg
mov
stos
rcl
or
mov
repnz
or
inc
rcrb
incl
inc
mov
int3
testb
inc
sar
inc
lahf
pop
push
fsubrl
in
out
jmp
lcall
stos
inc
mov
xchg
xor
es
jg
imul
in
movsb
lcall
test
pop
cld
sar
decl
dec
cmp
sar
subb
sahf
inc
lea
inc
lcall
and
fists
mov
pop
cli
out
stos
jno
cli
pop
sub
cmp
in
call
pop
inc
outsl
jns
testb
mov
adcb
mov
rolb
mov
js
and
lret
test
std
mov
aam
pop
outsl
fstps
cmp
bound
dec
sbb
push
mov
loopne
orl
dec
inc
cmp
cmp
jp
ljmp
add
xchg
insb
hlt
mov
sbb
sbb
in
lcall
mov
mov
and
in
cltd
mov
ret
push
adc
hlt
inc
out
sub
fidivrs
pusha
hlt
or
sub
clc
push
mov
icebp
decl
sub
mov
notb
into
nop
loopw
push
sti
stc
in
icebp
call
stc
xchg
sbb
xor
push
jbe
fstl
sub
fdivr
call
add
push
mov
inc
dec
ja
cmc
fs
pop
jmp
gs
bnd
jo
addr16
cmc
sbb
push
xchg
cmp
popa
jecxz
pop
jle
xor
sbb
pop
int3
cmp
mov
add
mov
jno
mov
sub
stos
fildll
shrb
cmp
adc
lret
bound
les
adcl
cmp
decl
mov
jbe
push
aaa
repz
into
data16
pop
jns
xchg
js
and
cmp
ficoml
fxch
stos
xor
cs
adc
lds
call
cld
xchg
cld
or
test
loopne
jae
roll
out
rolb
add
popa
lods
mov
dec
in
enter
iret
jmp
out
or
idivb
mov
lock
fmuls
insl
adc
push
shl
lods
rcrb
mov
adc
fisubrl
fiaddl
dec
imull
lahf
add
lcall
scas
or
push
and
push
and
inc
xchg
jl
mov
in
cld
jmp
subb
stos
test
push
ret
jge
sub
xchg
aam
jg
in
push
inc
sbb
andb
inc
xchg
addr16
sbb
insl
mov
push
adc
clc
or
or
mov
sub
es
push
std
mov
ffree
cmpsb
mov
xchg
test
out
insl
loop
call
fs
xchg
icebp
dec
gs
push
xchg
mov
pop
enter
ljmp
dec
or
and
rcrl
mov
pop
mov
push
pop
out
xchg
push
xchg
mov
imul
out
push
lcall
std
cmc
push
push
cmpsb
xor
aaa
divl
je
in
mov
ljmp
movsb
push
cmpsb
ret
jmp
adcb
add
in
jg
and
adc
ss
sub
pop
ss
pusha
clc
mov
jmp
ds
or
out
clc
test
push
shlb
in
sbb
jle
jecxz
sbb
and
mov
mov
test
dec
popa
scas
pop
pop
or
stc
cmp
incl
andl
mov
cmp
mov
pop
jno
test
push
test
mov
pop
icebp
sub
mov
je
lea
enter
insl
mov
mov
jb
out
pushf
sub
rcll
int3
push
movl
sub
lcall
aaa
mov
ljmp
xchg
pop
enter
lea
mov
call
outsl
mov
dec
and
and
push
add
test
inc
mov
fsubl
es
sbb
mov
xor
mov
jg
sub
jbe
mov
mov
fcompl
sbb
in
fcmovnb
jnp
roll
test
add
ljmp
fwait
or
aas
inc
pop
push
nop
push
std
lea
lods
out
imul
pop
call
push
stc
adcl
cltd
jbe
push
sub
int
xor
push
jl,pn
jb
stos
add
test
incl
fucompp
into
cs
mov
sti
cli
adc
dec
mov
test
call
cltd
rol
pop
dec
subb
mov
xor
out
movsl
movsb
test
sub
xor
fnstcw
add
cmp
mov
ljmp
push
arpl
stc
stc
mov
je
jp
loop
in
rcrl
sub
lcall
pop
inc
aad
fwait
iret
mov
fdivl
rorb
inc
jmp
stos
scas
and
leave
enter
cld
cmp
out
roll
outsb
mov
outsl
clc
xor
incl
cmpsl
mov
add
movsl
mov
lcall
or
sti
shrl
hlt
cmp
lcall
push
sbb
push
mov
xchg
xchg
out
mov
aaa
insb
mov
incb
aad
fnstsw
mov
pusha
and
xor
pushf
push
ret
ss
jbe
bnd
jne
sbb
call
sbb
adc
rcrb
pop
xor
dec
fs
mov
ret
sub
imul
pushl
push
jns
inc
sub
pop
mov
lock
popf
dec
leave
ja
push
in
scas
sub
jmp
and
jp
jb
xor
je
int3
addr16
aaa
mov
dec
mov
jg
cld
jecxz
inc
add
in
into
xor
shlb
push
scas
push
lar
daa
inc
pusha
nop
jo
nop
or
push
mov
cli
outsl
mov
mov
adc
shlb
rorl
out
xchg
xchg
jle
jo
into
push
adc
push
xchg
rorb
js
adc
push
fisttpll
jecxz
xchg
ret
pushl
sahf
outsl
test
dec
sub
mov
jmp
loop
pusha
adc
cmp
mov
xchg
outsb
mov
pop
mov
ficoml
sti
push
xchg
xor
jae
jg
call
mov
fneni(8087
call
and
xchg
shl
inc
cmovp
push
pop
addr16
xchg
lahf
std
lcall
fadds
arpl
mov
js
clc
push
sar
push
insb
jbe
jns
inc
mov
xor
out
call
fldl
jae
stos
sbb
jg
add
shll
int
add
pop
jmp
sub
aas
cld
mov
push
lods
mov
xchg
mov
testb
push
bound
jno
jp
ljmp
mov
inc
negb
or
pop
loopne
mull
inc
xor
jp
jecxz
mov
adc
jns
mov
aam
mov
jg
insl
cld
loopne
xorb
mov
jnp
fwait
pop
gs
push
nop
cli
mov
xchg
cltd
dec
sahf
ja
jg
pop
add
mov
jnp
jnp
arpl
fdiv
cld
lret
call
and
popa
or
mov
int3
dec
test
jbe
arpl
cmpsb
repz
pop
hlt
incl
mov
lea
cmp
inc
ret
mov
lahf
mov
push
pop
div
call
cmp
mov
cmp
or
inc
push
in
jecxz
pop
jp
mov
cmpl
pop
jmp
jg
cmp
inc
mov
inc
sbb
add
jnp
popa
or
fstps
jmp
jne
mov
adc
rorl
mov
pop
push
xchg
jmp
inc
decl
xchg
lcall
xchg
ret
stos
loope
test
mov
std
push
push
fwait
in
cltd
jns
lods
add
pop
insl
and
test
and
loope
cli
add
mov
cmp
mov
ljmp
jmp
pop
data16
mov
hlt
and
icebp
cmp
xor
push
sub
pop
adc
jb
cld
mov
pop
cld
jg
mov
dec
jp
lret
sub
fidivrs
lods
ficoml
int3
add
jg
sarb
leave
test
dec
push
sub
xchg
inc
xor
mov
clc
or
fdivrs
add
jae
inc
inc
insl
mov
sbb
subb
incl
andl
cmp
lods
and
loop
mov
jns
frstor
mov
mov
pushl
fnstsw
js
test
xor
jmp
pop
pop
test
imul
push
test
xor
dec
push
xchg
push
ss
ljmp
pop
add
rcrb
dec
sub
pop
fxam
cmp
lds
push
fisubl
or
imul
add
pop
data16
adcl
push
jbe
cli
inc
sbb
sub
xor
push
cs
pushl
jecxz
lods
stc
fisubs
dec
fldenv
mov
xchg
adcl
in
pop
jno
cmc
popf
add
leave
push
xor
adc
pop
out
add
add
jp
and
lcall
adc
cmp
and
test
scas
subb
sarl
dec
popf
jecxz
pop
inc
or
ljmp
fsubs
pop
inc
xchg
lock
jl
xchg
leave
pop
int
mov
lcall
rcl
lods
pop
pop
mov
adc
daa
in
dec
jbe
sbb
fildl
adc
pushl
movsb
cltd
adc
sar
jg
aad
int
sbb
xor
push
adc
push
jg
cmc
fiadds
mov
push
push
jle
fidivl
xor
xor
jmp
pop
test
xchg
mov
sub
cld
jbe
roll
bound
imul
call
and
stos
in
push
loopne
repnz
xchg
loopne
call
call
ret
jge
adc
test
in
mov
lret
out
sub
and
sbb
fsubr
add
xor
ljmp
mov
aaa
or
leave
mov
cmp
pop
int3
incb
or
sbb
stos
mov
fnsave
popw
loope
dec
loope
pop
ficoml
dec
jae
jnp
and
inc
rolb
enter
call
lea
lea
sbb
jmp
or
mov
pop
push
jno
pushf
mov
filds
outsl
and
mov
js
mov
shrb
sub
call
pop
fcmovu
pop
es
adc
lods
popf
outsb
in
test
ds
mov
add
inc
push
mov
inc
dec
fidivrl
mov
pushl
cld
out
repz
dec
bound
pop
fs
mov
jg
popa
dec
jne
out
xlat
sub
jmp
adc
cmc
popa
cmp
mov
dec
ret
adc
icebp
mov
cs
adc
lcall
xor
add
cmc
push
ds
lahf
mov
jg
inc
adc
out
fwait
mov
cmp
and
dec
js
pop
xlat
dec
fstpt
andb
call
dec
xor
add
mov
or
jecxz
pop
std
adc
int3
fsubr
rcr
cltd
jae
jge
ficoml
nop
rcrb
inc
aas
jb
mov
dec
sub
mov
adc
sti
movsb
ljmp
dec
pop
in
pusha
fistl
lret
mov
idivl
incl
add
js
xor
mov
mov
xor
xchg
mov
call
pop
je
fs
out
mov
sbb
test
xor
in
insb
lcall
call
xor
repnz
mov
ret
jg
hlt
addr16
je
jbe
or
call
mov
data16
and
adc
ret
sub
aam
shrl
fdivrs
jle
leave
std
ljmp
std
aad
out
mov
mov
out
jl
out
stos
or
es
sub
inc
mov
subl
jg
mov
xor
mov
inc
test
sbb
and
sar
lcall
push
aas
mov
adc
push
or
add
cs
repnz
pushl
pushf
out
in
xchg
inc
addl
sahf
adc
daa
loop
adc
test
incl
stos
aas
and
cmp
stc
jae
pop
pusha
and
cld
loopne
dec
test
dec
pushl
imul
xchg
insl
enter
jno
mov
scas
push
mov
jg
add
es
shrb
sub
fistpll
jmp
sbb
daa
int3
out
pop
jnp
pusha
insl
shl
push
lret
push
and
popf
mov
xchg
jl
leave
xchg
int
push
sbb
mov
leave
scas
flds
incl
fs
cs
mov
sbb
les
call
add
mov
inc
mov
mov
loope
outsl
imul
pop
rcrb
jg
add
clc
lret
xchg
push
mov
call
test
aam
ret
ds
mov
lahf
push
cmp
leave
loopne
inc
ret
int3
and
inc
in
pop
push
xchg
scas
xchg
loop
or
pop
mov
mov
call
pop
cli
lock
outsb
data16
sbbl
and
call
aas
ds
sub
ds
mov
xchg
inc
add
decl
ffreep
xor
mov
jbe
data16
stos
and
add
enter
xchg
incl
add
pop
movsb
mov
lods
loope
jno
scas
mov
mov
lcall
call
notl
shlb
xor
cs
dec
cmc
jp
aad
ja
les
fists
mov
sbb
in
pop
add
ret
into
ja
test
xchg
inc
and
les
pop
mov
cmp
add
inc
fmul
sub
pop
icebp
lret
es
inc
stos
into
inc
repnz
jge
lods
leave
push
push
rorb
pop
fdivs
aam
imul
jo,pn
dec
incl
stos
xor
mov
incl
cmpsl
sub
movsb
ja
decl
inc
movsb
mov
xchg
or
add
lods
hlt
push
inc
scas
jp
pop
sub
cli
or
xor
jb
jg
dec
pop
scas
mov
inc
pop
inc
inc
fisubrl
call
dec
push
in
or
mov
push
xor
sar
movsl
cmpsl
ret
add
push
test
dec
imul
push
fs
jmp
mov
cld
sbb
fnsave
xor
pop
xchg
iret
lahf
hlt
arpl
inc
xchg
jmp
or
lcall
xor
lfs
clc
movsb
mov
xchg
insl
adc
jnp
dec
aam
mov
mov
enter
neg
dec
aad
jbe
mov
lret
dec
mov
mov
and
test
ficomps
push
push
flds
ljmp
rcrl
jns
add
or
into
jae
add
stos
fs
mov
add
mov
fsubs
mov
lret
cmc
scas
mov
repnz
push
arpl
mov
clc
decl
dec
paddb
xchg
mov
and
sbb
call
sti
out
jns
mov
and
popf
icebp
pop
mov
mov
inc
xchg
test
cmp
pushf
les
pop
aas
test
test
and
dec
xor
add
sbb
cmpb
push
and
out
cmpl
mov
push
mov
lods
lods
test
lods
jge
jmp
adc
jmp
and
pop
data16
xchg
ljmp
dec
cmpb
bswap
jnp
aas
mov
mov
pushf
popf
mov
sarl
rolb
push
and
push
call
ret
inc
jo
int3
pop
cwtl
mov
jmp
jg
jl
dec
rolb
pushl
xchg
sbb
aas
addb
cmc
mov
mov
lcall
fidivrl
jg
inc
sahf
jmp
je
push
mov
in
ret
adc
hlt
mov
mov
repz
jg
mov
fsubr
or
aas
aam
aas
clc
mov
nop
movsl
fdivl
testl
jae
pop
imul
inc
out
fisubs
mov
lcall
inc
int3
dec
xchg
in
data16
pushf
sub
loopne
xor
add
aaa
sub
imul
clc
pushf
and
shl
sub
mov
cmc
dec
shr
and
data16
test
jg
lret
dec
mov
mov
mov
lea
adc
sbb
pop
mov
insb
std
aaa
jp
adc
gs
cmp
mov
loop
mov
dec
mov
decl
adc
jnp
pop
add
push
outsb
fiadds
xchg
je
or
adc
pushl
push
jno
lods
mov
sbb
and
cmpl
mov
push
in
xchg
in
sub
sarb
inc
outsb
mov
cmp
test
je
pushf
divl
add
cmp
fldt
fisttps
lods
lcall
push
mov
ljmp
sbb
ds
fsqrt
filds
cld
sbb
cli
aas
or
sbb
sub
into
mov
adc
fstpl
call
stc
cld
cmp
sub
in
stc
mov
loop
xchg
jo
mov
cmpsl
lahf
scas
jp
sub
pusha
and
decl
ja
cmpsb
icebp
or
or
pop
rcl
clc
push
test
lcall
xor
mov
cltd
aam
jae
outsl
stos
push
and
xchg
fcmovne
sbb
mov
add
mov
pop
roll
pusha
and
or
call
call
lret
mov
out
and
leave
mov
adc
rcrb
sar
pushl
mov
lret
add
ds
jecxz
ljmp
xchg
and
fiadds
sub
lds
mov
sbb
shrb
sub
mov
push
xchg
xchg
pushl
or
les
mov
sub
adc
popa
pusha
or
ljmp
push
inc
fcompl
daa
outsb
enter
js
addr16
push
outsl
ret
add
ljmp
adc
mov
iret
jae
sbb
inc
gs
aam
add
test
cmp
es
aam
cltd
sub
sub
adc
cmpsb
jmp
clc
inc
cli
gs
cwtl
cmp
mov
push
enter
int
ljmp
xchg
test
hlt
pop
sbbb
xor
sar
lcall
push
pop
push
sbb
aaa
xor
ja
xor
xor
or
sub
sbb
inc
sbb
cli
aas
xchg
jp
vpackssdw
hlt
sub
push
je
or
out
jmp
shrb
lret
stos
aaa
sar
aaa
cld
ljmp
sub
aad
scas
imul
mov
outsb
andb
adc
out
out
and
mov
jmp
pop
gs
insl
or
lds
mov
and
loope
xchg
mov
or
push
stc
int3
pop
mov
ret
push
aas
fisttpll
idivl
mov
xchg
cmp
aas
fs
aas
mov
loop
outsl
hlt
jg
mov
imul
pop
pop
js,pn
pop
movl
pushw
xor
push
les
into
in
call
das
leave
push
daa
clc
and
bound
mov
mov
xor
clc
mov
xchg
xchg
fxch
jmp
andl
int3
adc
js
and
jnp
ret
mov
lods
jmp
inc
or
je
aad
pop
arpl
dec
mov
add
xchg
and
cld
movl
cmpsb
pushf
cmp
das
out
cmc
aam
and
call
mov
xlat
xchg
addb
mov
mov
pop
data16
xor
xchg
outsl
lret
test
add
adc
frstor
fdivs
xchg
lcall
adc
or
sahf
je
xchg
das
pop
fcoms
jg
call
cmp
pushl
mov
mov
mov
aad
jnp
int3
jmp
push
mov
js
sub
mov
push
and
xchg
adc
fimull
loope
or
jae
dec
mov
jae
sbb
push
cwtl
cld
dec
mov
cmpsl
sbb
push
sub
rorb
test
sti
lock
mov
add
addb
fcmovne
je
aam
call
out
jmp
xor
jge
and
repz
push
or
jmp
decl
dec
sub
nop
shll
xor
xlat
pop
gs
adc
inc
sar
pusha
jno
jnp
insb
clc
sub
insl
mov
incl
adc
lock
inc
push
loopne
in
adc
aas
ja
imul
sbb
xlat
or
mov
dec
bound
mov
shll
pop
jg
jge
xor
mov
data16
jmp
fsubrl
and
xchg
imul
ljmp
cmp
clc
mov
not
dec
mov
cmp
int
lahf
je
popa
decl
push
mov
sbbb
fimull
insb
cwtl
notl
pushf
mov
xchg
pop
rcrl
lea
add
ljmp
adc
sbbl
ljmp
mov
insb
cmpsl
cs
fwait
call
pop
cld
pop
xorb
dec
add
xchg
incl
mov
lods
cmpsl
das
jae
push
jo
fwait
xchg
rcrl
mov
pop
fwait
xchg
push
lock
pushf
es
lsl
ja
fs
insl
and
inc
icebp
adc
push
pop
mov
stos
out
rol
cwtl
pop
add
les
sar
xchg
stos
fwait
cmpsl
add
out
dec
mov
out
aaa
jo
movsb
popa
mov
nop
std
push
push
mov
loop
xlat
fidivrl
mov
mov
hlt
inc
push
and
ljmp
mov
or
and
scas
adc
iret
sub
push
push
mov
xchg
dec
inc
test
cli
incl
and
mov
add
std
call
popa
cli
mov
xchg
andw
cmp
cmp
fdivrp
pop
and
mov
jns
sbb
ljmp
cli
out
mov
cltd
or
xor
repz
push
push
and
aam
movsl
js
sbb
icebp
jmp
lret
clc
pop
sbb
sbb
mov
push
push
ljmp
or
pop
je
lods
push
add
xor
mov
xchg
scas
inc
sub
dec
adc
call
aad
faddl
leave
frstor
xlat
mov
loopne
lcall
jo
xchg
jp
push
sub
stos
call
xor
jno
mov
call
icebp
fdiv
clc
push
mov
inc
test
dec
jno
not
pop
pop
xchg
into
popa
jge
adc
std
call
in
ja
jg
push
mov
xorb
mov
push
jl
cmc
dec
inc
sahf
cltd
mov
and
sbb
imul
push
test
inc
sahf
and
cmc
jg
aam
scas
sub
push
fdivr
lcall
sub
sbb
lahf
xchg
outsb
ficompl
ret
mov
sub
inc
incl
and
xor
and
aas
into
cld
fisttps
jle
push
inc
mov
int
ds
xchg
insb
push
ret
jg
inc
xor
xchg
femms
movsb
pop
xchg
lods
repz
adc
fisttps
jb
xchg
lret
loopne
std
fwait
jbe
or
push
xchg
popf
out
shll
inc
and
jmp
dec
movsl
dec
testb
cld
mov
loope
xor
mov
stos
xchg
cmpsb
push
lahf
mov
daa
lahf
pop
adc
or
jno
inc
lock
jge
cmp
addb
mov
shrl
add
mov
js
scas
std
call
and
adc
aam
imul
shll
mov
sub
and
decl
push
pop
jae
cld
and
inc
aam
sub
or
pop
test
jg
cmp
addr16
ret
mov
mov
aam
jg
imul
insb
jg
cmc
lret
pushl
mov
insl
push
insb
jno
and
inc
cmp
dec
push
mov
jmp
std
add
push
or
sub
dec
or
dec
ljmp
decl
repz
add
testb
enter
sub
decl
add
push
loope
jge
lea
outsb
push
lahf
mov
cs
sbb
mov
enter
add
test
push
int3
mov
mov
pop
ficoml
inc
pop
push
mov
call
cmpsb
lcall
jo
xor
repnz
scas
lods
out
aam
or
mov
mov
in
lods
loop
pop
stos
add
mov
std
call
add
mov
into
mov
cmp
mov
sub
jg
cwtl
xor
ds
stc
xor
and
call
sub
dec
cmp
imul
mov
rolw
sti
lock
pop
add
fbstp
or
data16
fwait
aas
decw
push
push
cli
insl
sub
adc
adc
dec
or
cmpl
or
inc
call
scas
and
sbb
in
rclb
sub
out
mov
aas
lret
rclb
dec
pop
das
lret
jae
xor
adc
stc
outsb
jne
ljmp
stc
cmpsl
test
fistpl
sub
jne
pop
stc
pop
mov
lret
inc
cmp
mov
sbb
inc
fs
cwtl
sub
jl
mov
pop
call
xlat
xor
lods
mov
cmp
pop
lret
cli
adc
xlat
sub
repz
iret
icebp
mov
inc
mov
leave
jle
sbb
mov
mov
sub
push
xor
jbe
sbb
jmp
dec
fnstcw
push
stos
xor
sahf
mov
xor
stc
push
test
adc
mov
decl
dec
xlat
movsl
jb
cmp
jo
inc
and
xor
decl
repz
aaa
sbb
les
mov
adc
test
xor
add
ljmp
push
mov
pop
jno
arpl
and
mov
xchg
cmp
pop
popf
cs
sbb
test
adc
adc
data16
roll
xchg
cmp
out
addr16
mov
xchg
mov
mov
nop
jg
call
xchg
push
aam
fldenv
fstp
push
dec
adc
sbb
in
pop
lahf
fs
decl
fucomi
jbe
jp
lds
fistl
add
sbb
ficomps
movsb
push
std
xor
jp
lcall
sub
test
decl
adc
sub
subl
fmull
daa
lret
jno
inc
xchg
int
jg
jle
jl
mov
dec
sub
fwait
dec
push
scas
push
ja
in
cs
mov
xor
mov
mov
dec
dec
mov
cmpb
cltd
and
push
jb
mov
outsb
xor
decl
and
cmp
sub
addr16
lret
out
adc
loop
push
and
scas
cltd
loop
dec
xchg
adc
mov
test
mov
sbb
xchg
mov
pop
mov
ja
dec
rcl
dec
jb
and
and
inc
xchg
loop
addr16
clc
ljmp
sti
out
icebp
daa
push
loopne
scas
and
dec
ljmp
pop
pop
mov
ret
hlt
add
and
das
cli
jmp
add
cli
push
add
fsubr
xchg
cmpsb
test
push
pop
xor
popa
jle
xchg
mov
scas
pop
sub
mov
loopne
stos
jg
hlt
aaa
push
xchg
xchg
stos
sub
aas
std
cmp
scas
sub
sar
out
jcxz
movsl
sti
loop
and
inc
leave
outsl
mov
xchg
pop
pushl
push
js
out
js
xchg
push
pop
cs
push
stos
jle
ljmp
inc
out
ret
loope
repnz
pop
negb
mov
addb
ret
mov
or
xchg
sub
jmp
xor
into
push
cmp
or
in
fistpl
push
movsb
repz
imul
divb
std
pop
sub
test
dec
sbb
ljmp
test
push
dec
cmc
add
ljmp
mov
shlb
insb
jmp
addr16
jb
mov
push
icebp
call
fisubrl
fnsave
or
mov
decl
mov
mov
aam
sub
insb
fisubrs
fists
std
mov
movl
into
push
mov
xchg
out
jns
dec
shlb
sub
mov
bound
loope
inc
lcall
pop
inc
dec
pop
push
sti
flds
cmp
inc
xor
out
push
stc
loope
cli
sbb
dec
lods
je
mov
call
cwtl
adc
cmp
mov
sbb
adc
addr16
test
push
das
test
loope
xor
scas
in
repnz
push
cmp
xchg
bound
or
cmc
pop
insl
xchg
or
dec
push
sbb
xchg
scas
stos
pop
call
xor
mov
std
imul
jbe
pop
or
xor
sahf
mov
cmc
push
cld
mov
nop
adc
sub
sbb
cmc
incl
or
sub
decb
jno
mov
pusha
mov
and
cmp
xchg
mov
jmp
div
jl
mov
out
and
paddw
bound
adc
mov
aad
cmp
dec
mov
outsl
mov
cwtl
mov
clc
inc
xor
sub
call
into
loope
mov
hlt
decl
inc
cmp
sub
lds
and
fcoms
push
out
adc
call
setbe
shll
lods
push
mov
mov
push
mov
push
or
enter
and
pop
movsb
aaa
dec
stos
jg
pushl
ret
sub
test
pop
cpuid
cmp
fnstenv
sti
imul
lds
cli
lock
rep
xchg
xor
add
pusha
add
mov
or
loopne
into
jg
call
js
pop
out
int
push
mov
inc
mov
mov
sar
push
mov
pop
out
inc
add
stos
fistpll
pop
or
decl
lock
mov
mov
sar
in
adc
lcall
mov
rorb
test
inc
sub
mov
ss
add
sbb
cmp
mov
ljmp
xlat
jbe
jne
xchg
sbb
cmp
lahf
mov
xor
pop
fs
lcall
sub
dec
gs
inc
push
pop
jmp
les
mov
push
fs
movsl
incl
aad
push
jbe
sbb
and
or
pushl
popf
lea
repnz
lea
mov
stos
lcall
dec
bound
xor
lea
clc
cmp
mov
dec
or
add
int
les
xchg
sbb
das
sub
or
incl
movsb
inc
jle
cmp
cmc
iret
adc
cmp
jbe
enter
mov
pop
je
cmp
inc
push
mov
adc
mov
inc
xor
mov
cmp
repz
call
ss
orl
mov
movsb
scas
mov
pop
fidivs
ret
jmp
pop
orb
add
cmp
scas
in
pop
sub
push
adc
shlb
lock
jecxz
cmp
dec
jno
push
or
jbe
cmp
lcall
popf
lods
orl
into
mov
lea
and
mov
add
xor
fcoms
xor
push
test
xchg
test
or
pop
mov
jne
add
mov
cmp
cld
jg
and
or
hlt
and
jle
jg
inc
outsb
cld
jp
test
jb
pop
jecxz
xchg
sbb
jne
add
mov
adc
inc
mov
scas
and
adc
push
testb
cltd
repz
loop
decl
sub
mov
out
or
jmp
or
lcall
pop
xlat
mov
xchg
mov
jl
jnp
cwtl
divl
mov
and
sbb
dec
subb
jecxz
clc
adc
mov
mov
pop
into
ror
mov
xchg
cmpsb
test
ljmp
icebp
lods
xor
sub
pushl
jne
mov
sub
pop
aam
inc
mov
mov
push
scas
mov
ret
loopne
mov
and
cs
mov
sub
fisttpll
pop
nop
in
out
inc
loopne
ret
inc
dec
lret
xor
xchg
xorl
jbe
aam
popa
lods
dec
or
jle
xorb
lock
jl
mov
cld
in
push
fildll
adc
xlat
repz
push
pop
loop
lock
mov
out
ja
push
ficompl
in
ficompl
and
cmp
incl
inc
scas
ret
popa
aad
push
rcr
lret
mov
cmpsl
adc
rorl
sbb
lcall
adc
inc
fistpl
xor
bswap
outsl
pop
addr16
xchg
xchg
ds
push
mov
adc
cmc
sub
out
lcall
mov
out
aad
jbe
scas
notl
lret
mov
jl
pop
test
clc
call
aaa
dec
repz
inc
cmp
mov
sub
test
cmp
ljmp
stc
sahf
stc
cmp
lods
mov
add
xchg
sbb
dec
out
pop
or
in
pop
jle
or
cmc
lcall
mov
es
mov
xchg
jge
xor
aam
fwait
or
xchg
lcall
roll
inc
cmp
fwait
push
adc
out
flds
push
es
clc
call
cmp
icebp
push
lret
orb
test
add
or
add
loope
push
jmp
aam
pushf
sahf
and
stos
sbb
pop
hlt
decl
jl
inc
adc
subb
cmp
hlt
push
xchg
or
pushf
outsb
cmp
call
pushf
imul
sub
sub
mov
ds
inc
sbb
test
cli
mul
into
daa
incl
lock
cmp
lcall
rcll
in
fdivrp
xchg
pop
xchg
incl
jge
or
jl
jo
adc
scas
dec
out
mov
mov
pop
call
sti
outsl
subb
scas
or
je
fs
lahf
mov
loop,pt
test
shll
dec
das
imul
xor
sahf
mov
ljmp
fstps
out
ss
aas
jmp
jb
fwait
lcall
jbe
int
push
cmc
movsl
and
mov
stc
cmpsb
in
cmpsb
shll
outsb
test
ret
mov
stc
aad
aas
or
aaa
pop
mov
ljmp
inc
pop
orb
mov
push
xor
push
lcall
lret
sub
call
cmp
and
mov
data16
inc
outsb
je
xchg
imul
popa
jl
adc
fstpl
mov
fstpt
mov
add
or
sub
cmpsl
test
sbb
leave
mov
sbb
jo
push
xchg
xchg
outsb
imul
or
ret
cmpsb
ret
pop
roll
adc
dec
dec
lds
push
icebp
and
jmp
lret
jle
es
jnp
pop
jmp
mov
and
or
decl
jns
daa
shl
jmp
fstpt
cltd
push
aam
test
adc
inc
mov
pop
popfw
rcrb
push
pop
fiaddl
xchg
add
lcall
orb
jne
sbb
movd
mov
das
mov
push
ret
or
add
cmp
cmp
cltd
and
loope
out
inc
mov
xchg
or
shlb
xor
jmp
fptan
mov
pop
and
shlb
push
mov
jl
mov
and
sub
clc
mov
mov
in
xchg
push
sub
xor
inc
es
ljmp
xchg
sub
fdivrl
cli
aad
lods
ret
xchg
sub
aaa
mov
xchg
leave
mov
sub
inc
cltd
shll
mov
mov
push
cmp
jmp
push
outsl
filds
sbb
faddp
dec
sahf
jns
call
ret
idiv
inc
fnstsw
adc
ffreep
pop
mov
insb
adc
mov
lahf
and
fs
sub
incl
nop
lret
fwait
xor
inc
mov
enter
mov
bound
test
int3
pop
xchg
mov
inc
lcall
xchg
fildl
hlt
inc
leave
and
outsb
hlt
leave
xchg
lcall
lock
std
pushl
push
dec
push
hlt
flds
fsubs
xor
stc
jg
add
sbb
mov
imul
std
ljmp
dec
jge
add
rcrb
out
lods
stos
dec
push
mov
pushl
pop
push
mov
fcmovnbe
cs
adc
in
pop
sbb
adc
push
add
lds
incl
dec
repz
jg
in
fwait
repnz
sahf
mov
data16
adc
insl
mov
pushl
push
adc
jge
out
push
ja
and
pop
lret
pop
cmp
enter
js
std
ljmp
std
decl
shrb
push
push
pop
jg
ljmp
cmp
mov
imul
icebp
xor
shrb
repz
incl
jo
pushf
jne
aas
aam
sbb
pop
push
xlat
inc
mov
adcb
push
xchg
add
ljmp
mov
and
xchg
xor
cmpsb
lcall
mov
mov
adc
xor
jno
sbb
inc
lcall
xor
xchg
jae
fdivrs
pop
mov
ja
xchg
bnd
ds
add
jmp
jne
push
lock
inc
aam
dec
mov
int
stos
push
mov
in
loopne
dec
inc
iret
push
push
test
sub
mov
cmc
inc
inc
enter
or
popa
mov
in
jmp
fsubs
xchg
push
loopne
stos
insb
jecxz
sub
dec
mov
xchg
mov
jo
decl
xor
cmp
push
dec
pop
std
xor
or
and
gs
imul
nop
daa
sub
call
lea
mov
sub
adc
ljmp
lock
in
push
popa
lods
mov
hlt
mov
test
push
addr16
ljmp
scas
xor
popa
dec
jge
sbb
push
adc
mov
fsubl
or
mov
pop
cli
push
jne
loope
in
das
aas
call
loopne
jmp
das
stc
cmp
pop
jl
xor
inc
aad
sbb
inc
mov
jbe
lcall
ljmp
inc
test
rolb
jge
xchg
or
inc
dec
inc
fwait
call
push
in
xchg
push
mov
jecxz
xor
mov
sbb
fsubrp
scas
sbb
loope
sub
popa
int
in
or
mov
je
loopne
andl
mov
xchg
inc
dec
outsl
cli
jo
mov
mov
or
aaa
data16
fildll
push
cmp
sti
fmull
xchg
cmp
jae
sarl
repz
incl
cmp
inc
pop
nop
adc
lods
in
daa
subl
inc
test
test
lahf
lcall
sahf
add
fcoml
mov
mov
mov
mov
pop
and
test
mov
adc
xchg
popf
and
sbbl
fs
or
mull
xor
cli
add
out
sbb
xchg
fisubl
ljmp
pop
out
lods
mov
mov
push
ret
aaa
imul
cmc
cmc
decl
les
nop
jo
out
test
rolw
stos
push
pushl
call
cmp
cltd
dec
push
enter
fs
or
mov
jmp
addr16
int
cmc
cmp
xor
sub
lock
pushl
push
xlat
or
push
mov
jae
outsb
call
test
lcall
pop
lahf
dec
test
dec
mov
sar
jne
ljmp
subb
pop
mov
cwtl
sub
loope
xor
push
int
or
pop
sar
jmp
adc
out
mov
mov
hlt
fistpll
lcall
fnstsw
xchg
stos
inc
mov
aam
rol
subb
push
sbb
decl
mov
scas
shl
call
adc
idiv
std
fisttps
sbb
and
outsb
in
cmp
cmp
xor
sub
mov
adc
ds
mov
pop
dec
test
cld
rolb
mov
nop
ret
fildll
outsl
hlt
fs
shrl
in
pushl
ljmp
mov
mov
testl
mov
xchg
xlat
lcall
pushl
pop
clc
or
pop
in
mov
push
xor
aad
add
add
in
mov
fcmovnu
negl
and
mov
into
xchg
inc
leave
test
jno
fiadds
addl
decl
sbb
pop
in
lods
aam
sub
sbb
sub
shll
dec
lret
dec
gs
push
dec
push
mov
sbb
jne
fdivrl
addb
xor
cmc
add
pushl
xchg
xor
neg
inc
jp
mov
clc
add
cmp
cmp
jg
inc
mov
repz
adc
addb
andl
pop
insb
adc
aaa
dec
add
fcompl
or
pusha
decl
cli
mov
rorb
pop
call
cld
cs
cld
jmp
sub
and
mov
push
insb
and
dec
adc
movsb
mov
pushf
xor
xchg
loopne
fisubs
and
rclb
in
fwait
inc
call
jg
movsl
pop
loop
cltd
mov
dec
add
repnz
imul
mov
pop
leave
out
and
push
jb
add
push
stos
cld
loop
cmp
mov
ljmp
data16
pop
gs
fists
cli
mulb
mov
call
scas
mov
sub
std
and
mov
ss
xchg
or
decl
sub
test
orb
subb
aam
lret
cmp
imul
mov
mov
nop
jmp
les
xchg
je
mov
mov
jmp
lcall
aaa
adc
into
or
mov
dec
add
xchg
inc
fwait
xchg
out
push
fisubrs
pop
push
in
cld
ljmp
pop
or
mov
adc
out
pop
loope
aam
das
call
xor
lcall
fldt
xchg
bound
ror
xchg
jb
out
pop
pusha
decl
fdivs
call
mov
fcoms
loope
adc
push
pop
lock
decl
adc
aad
mov
inc
jbe
mov
loopne
cli
incl
mov
test
sbb
inc
sub
cmpsb
sub
mov
das
xchg
mov
jle
in
addr16
dec
sub
lds
ja
dec
dec
in
push
pop
repnz
je
ljmp
sub
cwtl
test
sub
out
jbe
cli
cmp
decl
mov
outsb
inc
test
stos
mov
dec
ja
mov
bound
decl
cld
jle
pop
pop
jb
or
sub
decl
rcrb
push
sbb
or
pusha
xor
sti
and
dec
leave
pop
cmp
mov
jmp
add
stc
or
lret
lahf
xchg
dec
es
xchg
adc
cmp
push
cld
flds
sub
hlt
inc
jne
dec
jl
push
inc
imul
push
xor
adc
xor
int3
sbbl
call
mov
add
daa
fisttps
mov
lods
insb
xchg
fdivrp
out
jge
jo
mov
dec
notb
xchg
dec
lret
fdivrl
mov
cmpb
lcall
insl
adc
dec
adc
test
rorb
setns
inc
mov
repz
push
lret
mov
push
push
out
lahf
rolb
orl
inc
sbbb
push
lds
pop
popl
call
mov
test
vmptrld
pusha
mov
jb
nop
ja
repz
add
cmp
call
stos
cmp
addl
mov
inc
in
ljmp
add
jp
sbb
clc
aaa
mov
call
fidivl
test
jmp
insl
adc
in
jp
mov
rorl
xlat
pop
bound
sbb
imulb
in
rep
test
pop
add
pop
inc
sbb
mov
jecxz
lcall
stc
inc
adc
adc
enter
push
outsl
xchg
test
adc
ja
pushl
mov
test
mov
push
addr16
pop
xchg
fcomi
test
lock
jg
push
dec
mov
inc
or
inc
jbe
adc
sub
imul
push
mov
movsl
pop
push
or
insl
jp
int3
dec
sub
xchg
subl
xor
push
push
icebp
incl
lods
lea
push
push
mull
pop
icebp
or
push
movsl
dec
rorl
mov
jp
movsl
inc
jle
sbb
popf
in
push
xchg
rcrl
push
jg
outsl
cli
dec
mov
mov
decb
jns
xor
sti
pop
fbstp
repnz
ljmp
add
inc
nop
lock
incl
push
inc
and
into
add
cmpsb
mov
push
pusha
loopne
cmp
inc
popl
push
shlb
std
jmp
push
xor
or
cmpsl
sub
int
inc
or
pop
cmp
roll
mov
xor
rorb
push
stos
push
fdivrs
aad
push
andl
fcomip
stc
addr16
mov
sbb
xchg
push
pusha
icebp
mov
rcr
lds
scas
ljmp
test
dec
jbe
and
sahf
add
repz
push
lock
fcmovb
int3
push
mov
push
es
add
push
adc
leave
fdiv
push
fdivl
aas
xlat
dec
inc
jo
aaa
outsb
bnd
jecxz
dec
xor
out
or
rcr
aaa
jle
push
mov
iret
sbbl
push
pop
sbb
sbb
lods
cmpsb
pop
and
andb
bound
orl
scas
clc
decl
jno
mov
pusha
int
arpl
jb
stos
pop
in
hlt
in
loop
pop
sub
lods
adc
cli
push
sbb
mov
aaa
pop
ljmp
imul
clc
inc
or
out
les
inc
add
sub
push
ds
lds
aaa
insb
pop
lds
add
pop
jne
hlt
out
mov
or
mov
dec
jg
sub
and
in
xchg
push
sub
decl
lock
in
push
ss
and
mov
lods
sub
jg
cmp
js
insl
insb
dec
push
cmpsl
movsb
lret
and
sar
mov
pushf
cmp
fdivr
sti
insb
fdivrs
ds
das
dec
and
lret
flds
aad
inc
sub
shlb
fwait
enter
cli
push
push
mov
xchg
pushw
nop
lcall
jmp
ljmp
icebp
cltd
jbe
jne
sar
push
jnp
call
mov
cmp
int
push
or
shlb
push
or
ljmp
jmp
repnz
cmpsb
loopne
les
or
lcall
fnsave
inc
es
inc
jns
pop
mov
aaa
gs
daa
inc
sub
les
mov
or
aad
call
ss
outsl
mov
daa
movsb
mov
mov
xlat
mov
lret
pushl
lcall
push
mov
jecxz
adc
mov
ja
call
dec
cli
cmp
jbe
in
jmp
mov
incl
es
in
bndldx
shll
sbb
pop
xchg
xor
push
imul
jb
lock
pop
push
leave
sahf
sahf
pop
sub
dec
add
js
icebp
mov
mov
std
mov
scas
fiaddl
mov
adc
xor
out
jno
push
outsl
pop
add
mov
and
lcall
xor
inc
dec
dec
push
leave
add
mull
shlb
sub
aas
mov
cmp
cli
jg
decl
adc
push
jle
and
sbb
mov
jns
addr16
clc
or
add
out
daa
mov
addb
fildl
jmp
mov
push
push
mov
dec
out
out
or
inc
sbb
pop
inc
shlb
pop
pop
push
xor
xor
mov
decl
or
inc
cmp
mov
add
ds
push
or
fwait
incl
xor
clc
sti
data16
pop
and
das
lock
out
inc
outsb
popa
ljmp
insl
pop
sbb
push
imul
jae
xor
jecxz
cmpsb
mov
cs
inc
and
leave
push
mul
sub
test
push
dec
int
int3
ret
inc
sti
mov
push
xor
jne
and
pop
pop
fwait
ljmp
out
sub
push
inc
out
xor
sbb
mov
jg
jge
lods
mov
test
mov
cld
cli
sbb
aaa
je
add
int3
sub
incl
sbb
das
xchg
pop
xchg
repnz
fstpt
mov
mov
add
lcall
cli
push
adc
negb
fldl
jg
repnz
sub
mov
scas
pop
pushf
xor
movsb
aaa
sahf
push
cltd
push
mov
sbb
sar
call
mov
sbb
push
test
je
dec
mov
outsb
mov
pop
dec
fidivrs
hlt
cmp
push
popf
inc
into
lcall
mov
push
repnz
and
or
loop
hlt
xchg
popf
into
cmpsl
dec
mov
repnz
das
fiadds
cmp
push
cld
cmp
cli
sti
xchg
rcll
les
ljmp
pop
cmp
add
dec
jnp
xchg
cmpsl
mov
xchg
test
jg
dec
mov
das
xlat
les
sbb
jns
mov
jne
aaa
push
in
bound
cltd
leave
repnz
movsb
adc
pop
test
push
addb
lock
call
cmp
dec
ficoms
icebp
add
mov
sbb
push
inc
add
mov
fdivrs
cmc
lcall
les
or
or
mov
jge
popf
mov
xchg
add
sar
pop
jns
dec
jno
jg
in
call
or
out
adc
imul
in
mov
pop
pop
sub
cmp
push
sbb
fbld
mov
ss
mov
shl
or
add
mov
es
iret
or
cmp
outsl
mov
xor
push
cli
das
mov
cmp
gs
jns
scas
lcall
fidivs
push
and
addr16
jnp
aad
ficomps
leave
pushf
mov
dec
in
sbb
push
inc
in
call
xchg
pop
clc
sub
jmp
add
ret
rorb
adc
scas
jmp
fildl
fsubrs
adc
jp
adc
mov
mov
fildl
xor
inc
add
pushl
lds
dec
loope
stos
mov
jne
sub
dec
adc
mov
xlat
lcall
xchg
mov
aas
push
mov
xchg
push
mov
ljmp
xchg
arpl
mov
mov
in
test
add
jae
lcall
mov
sarl
loope
mov
jbe
jne
mov
jecxz
xchg
jmp
adc
xchg
cmp
pop
fstps
adc
jbe
loope
xchg
push
adc
ret
mov
outsl
cli
dec
je
cli
jno
movsl
mov
xchg
sub
in
loope
enter
add
decl
jecxz
jnp
jle
clc
cmp
fistpll
mov
ds
cmp
xchg
leave
xchg
push
push
sbb
mov
jb
ds
push
cmp
xchg
or
fxch
aam
inc
fsubrs
jg
rcl
imul
push
inc
sbb
add
sub
jb
int
decl
sub
sbb
imul
sbb
fcomip
ljmp
mov
mov
test
cs
fxch
push
inc
jno
or
add
or
pop
sbb
cwtl
mov
mov
add
lcall
fcoml
testb
jnp
mov
dec
adc
imul
in
lcall
testb
es
inc
aad
xor
js
scas
out
cmpsb
aas
call
scas
jne
xchg
jmp
sub
cli
jne
mov
push
mov
iret
xor
add
jl
adc
jmp
into
jmp
fdiv
or
fnstcw
leave
mov
ficomps
iret
ljmp
clc
imul
loopne
addr16
jno
mov
popa
pop
ficoml
jmp
jns
shll
popa
adc
decl
fisubrl
fs
fcompl
mov
adc
stc
xor
decl
nop
dec
js
mov
sahf
cmc
clc
mov
sub
lret
leave
mov
ljmp
subl
popf
sub
lds
sub
xor
mov
ja
lock
jmp
sarl
mov
lret
int
lcall
fnsave
or
or
pop
pop
jno
aas
aaa
cmc
lods
ds
or
and
imul
or
js
mov
xchg
fimuls
test
stc
call
dec
imul
xchg
outsb
inc
jle
jmp
cmp
je
hlt
inc
lds
negl
jp
stos
xor
push
andb
adc
pop
cmp
fbld
outsl
xchg
or
jae
in
mov
notb
repz
lods
ja
loope
cmp
inc
call
icebp
mov
lcall
push
jg
in
movsb
add
nop
xor
pushf
add
test
push
mov
sti
push
sar
pop
sub
cs
adc
imul
and
jecxz
inc
outsl
clc
leave
cli
call
dec
jge
cwtl
outsl
stos
inc
out
jb
test
pop
jns
fisttpl
lcall
fstpl
test
jns
xor
decl
lahf
or
cmpsl
loopne
lock
jmp
ljmp
cmp
xchg
jecxz
or
dec
jmp
xor
cmp
mov
cwtl
push
sbb
dec
inc
repnz
std
add
cmp
mov
into
scas
dec
sbb
cs
sub
or
lods
xchg
sub
fcoml
call
in
push
xchg
sub
stos
jns
fnstsw
xorb
dec
and
ljmp
pusha
out
lods
dec
sbb
pusha
or
add
mov
push
popa
mov
mov
jmp
shl
mov
mov
mov
push
dec
mov
scas
sbb
push
sarl
or
push
add
inc
sub
std
mov
or
dec
push
incl
xor
jb
out
dec
xor
bound
pop
dec
jo
ret
pop
mov
cmp
jg
mov
sub
and
adc
shrb
or
mov
inc
adc
mov
add
hlt
push
imul
push
mov
cmp
mov
add
or
mov
sar
mov
lcall
or
xchg
jbe
icebp
push
aad
push
xor
inc
shlb
sbb
fs
ljmp
dec
ljmp
xor
stos
jmp
cmovp
dec
push
popf
cmc
mov
incl
xchg
sub
sub
insb
lods
jno
add
mov
test
sbb
sub
jg
mov
loopne
cmp
push
dec
pop
sub
xor
mov
dec
into
std
cmp
pusha
mov
xchg
lret
psubusw
jmp
inc
xor
lock
decl
ds
aaa
stc
inc
push
sbb
or
data16
pop
mov
add
adc
adc
es
cmp
fadd
add
aam
dec
fs
jmp
cwtl
and
and
ljmp
or
mov
xor
push
or
leave
jp
lock
fcmovnbe
call
addr16
xchg
xor
jle
and
rorb
lcall
stc
and
stos
mov
popa
mov
or
mov
sub
jne
out
inc
ror
mov
std
mov
and
pop
jl
je
xchg
xor
pop
mov
cli
mov
inc
mov
stos
lods
shll
inc
inc
and
jl
ljmp
sbb
cwtl
dec
dec
mov
inc
mov
insl
or
fdivl
pop
mov
stos
inc
cld
call
push
loope
shrl
es
shlb
out
or
xchg
xchg
xor
jg
shrb
xchg
ftst
or
int
sub
incl
aam
push
mov
repnz
xor
ret
inc
inc
jb
xchg
insb
add
mov
clc
xchg
leave
sub
fwait
es
xchg
movsl
aaa
jno
adc
lret
dec
test
ret
push
dec
decl
lea
leave
icebp
xor
mov
cwtl
pusha
lds
pop
jmp
and
xchg
insl
adc
call
mov
mov
imul
jg
mov
call
mov
in
das
aas
sbb
mov
lods
incl
mov
fldt
int3
sbb
lahf
jg
dec
xor
jne
das
out
repz
dec
les
shlb
mov
insl
stos
xor
push
push
jge
je
shl
scas
xchg
movsb
xor
ljmp
sar
in
sbb
fadd
dec
mov
sub
cmp
and
std
ljmp
or
divb
jnp
pop
push
mov
call
mov
jge
cmp
mov
pop
cwtl
sub
mov
pop
push
cwtl
dec
sbb
jmp
push
inc
add
fadds
arpl
push
push
sbb
push
inc
push
push
icebp
dec
cld
insb
adc
incl
sub
icebp
loope
lods
pop
mov
stos
sti
push
jmp
sub
cmp
xchg
pop
cmp
loope
dec
xchg
push
pusha
icebp
sub
stos
test
test
mov
scas
cmp
fsts
insl
adc
jb
mov
push
out
lea
test
nop
pushl
pop
ja
stos
scas
mov
push
in
push
xchg
stos
jae
cmp
scas
fisttps
imul
dec
and
sbbl
dec
test
pop
fimuls
and
and
xor
roll
inc
sbbb
cmp
lcall
cltd
dec
jmp
pop
fwait
in
mov
and
jmp
adc
loopne
jg
push
ljmp
cli
ss
cmp
adc
in
aam
out
cmp
push
push
add
sbb
lcall
xchg
pop
sti
xchg
ja
divl
jnp
add
cmpsb
imul
test
ljmp
mov
lock
outsb
fmull
pop
push
mov
sub
sete
jg
mov
cmp
out
mov
cmpsl
pop
lcall
and
popa
jbe
pop
enter
jg
call
push
push
fwait
out
call
jg
lea
mov
movsb
ljmp
dec
and
call
lock
jge
inc
fs
mov
outsb
int3
inc
or
ljmp
neg
pop
leave
cmc
pop
adc
in
repz
mov
and
push
sbb
xchg
inc
add
stc
inc
in
nop
cmpsl
dec
xor
pop
xor
lods
push
mov
fistpll
stc
jp
mov
jecxz
pop
outsb
test
push
inc
xor
xchg
or
clc
pop
and
shll
ja
call
jo
ret
in
ret
adc
mov
lcall
lcall
fsubr
rcll
jecxz
cmpb
jg
out
cli
inc
mov
jecxz
add
sub
mov
aas
dec
ja
pushl
fcomps
stos
aad
sbb
scas
jbe
shlb
pop
inc
into
stos
test
jecxz
fmuls
sbb
pop
jns
sbb
jae
jmp
mov
adc
mov
dec
inc
scas
pushf
inc
push
xor
lock
bnd
pusha
push
stos
incl
xor
adc
idivb
inc
aam
jmp
push
mov
cmpsl
arpl
cli
xor
mov
inc
jecxz
ljmp
or
mov
add
jmp
cmpsl
jecxz
and
nop
mov
push
das
test
pop
stc
mov
test
pop
sbb
call
ret
outsl
sarb
in
in
lahf
es
and
pop
cmpsb
stos
cmp
mov
dec
mov
jge
jo
and
imul
jle
mov
mov
jle
pushl
out
ds
popa
ljmp
insb
mov
int3
mov
mov
out
cli
rolb
pop
rcr
push
dec
out
sub
andb
or
xor
pushl
es
sbb
push
push
in
je
test
cli
lods
arpl
adc
sbb
fistpll
jmp
add
and
jp
cmp
dec
imul
ss
pop
mov
fwait
das
jns
jp
ljmp
data16
jp
xor
and
dec
cmp
rol
inc
inc
in
xor
lea
cmp
xor
inc
xlat
mov
mov
mov
or
incl
fs
xor
pushf
nop
std
stos
sbb
sub
push
xchg
pop
mov
out
movss
aaa
fadd
mov
pop
shrb
dec
sti
jbe
fwait
mov
jnp
lea
loop
in
cmp
rorb
sbb
sbb
lahf
mov
rolb
dec
in
test
xlat
test
jecxz
insl
xor
xorl
cmc
jno
inc
mov
xchg
aam
js
mov
push
or
or
inc
in
stc
or
jb
arpl
shrb
sbb
pop
sub
mov
test
in
xor
sbb
int3
inc
ret
js
sub
loopne
call
lcall
incb
pop
push
or
mov
mov
jno
or
loop
xchg
jg
mov
fwait
push
cmc
ja
dec
mov
incl
enter
cs
dec
xchg
repz
out
or
test
and
shlb
mov
cld
jmp
rolb
sbb
lods
xlat
inc
push
push
pop
adc
jg
mov
mov
pop
fisttpll
xchg
dec
xor
movsb
in
adc
in
jl
shlb
stos
jmp
ss
sub
sub
in
aad
add
cli
pop
push
popl
fwait
mov
lcall
xlat
aad
data16
cmp
aaa
pop
aas
and
jmp
lret
cld
lods
xor
inc
fsubs
cmp
push
dec
or
push
aad
js
cmpsl
mov
stos
jmp
mov
cmp
cmp
sbb
insb
cmp
and
pop
mov
jmp
jle
fidivrs
out
cmp
ljmp
cmp
scas
cmp
test
cmp
data16
mov
sbb
test
mov
fisttps
mov
dec
pop
xor
pop
cmp
decl
xorb
dec
scas
xor
sbb
jae
out
jg
xor
das
xchg
ljmp
add
mov
push
push
add
add
adc
pusha
and
scas
mov
stc
xorl
call
inc
ret
push
fld
add
pop
outsl
add
aas
xchg
pusha
sub
push
out
outsl
cli
decl
in
pop
imulb
push
imul
jbe
push
cld
jno
call
cmp
popa
xor
sbb
inc
out
push
jnp
or
pushf
incl
jmp
and
sbb
iret
imul
subb
fmull
cld
pop
xchg
xchg
adc
aad
repz
ret
aam
fcomip
inc
in
dec
test
pop
das
lea
mov
jo
pop
lcall
ret
pop
fnstenv
iret
test
aaa
dec
xchg
inc
push
ljmp
pusha
mov
sbb
ret
xchg
arpl
lds
scas
std
aad
call
xchg
xchg
xchg
ds
push
cld
xor
insl
clc
adc
pop
insb
mov
cmpsl
shlb
mov
push
and
and
les
dec
ljmp
jmp
mov
aam
fs
rorl
sbb
adc
push
outsb
inc
mov
lds
mov
adc
lea
call
ss
shr
out
sarb
xchg
xlat
xchg
adcb
xchg
cmc
push
adc
outsb
movsb
cmp
ljmp
xor
leave
movsl
sbb
loopne
cmpsl
js
insl
mov
ljmp
out
fmul
test
repz
mov
in
jne
push
inc
fs
pushf
ret
add
mov
mov
aam
nop
dec
dec
std
push
xchg
sbb
scas
mov
push
mov
ret
inc
or
inc
xchg
hlt
push
push
ja
mov
push
das
add
fldenv
fsts
jl
decb
xor
push
ror
test
xor
push
inc
addr16
test
push
ds
mov
aas
fildll
pushl
and
mov
ljmp
out
jl
cmp
or
insl
lods
push
fisubrs
push
push
nop
jnp
sbb
movsl
incl
fstps
and
xor
pop
inc
incb
push
adc
ljmp
dec
push
mov
jb
inc
push
jb
in
mov
lock
ljmp
movsb
mov
mov
add
push
jl
add
scas
outsl
call
decl
mov
fs
ret
clc
int
test
cwtl
add
mov
lret
push
add
ror
mov
inc
xor
fs
add
and
xchg
jg
decl
sub
dec
xlat
enter
fcompl
shlb
mov
and
mov
ds
inc
cltd
in
xchg
test
jns
out
xlat
ljmp
hlt
bound
mov
sub
pop
cmp
aad
xchg
and
jg
xchg
fistpl
leave
sbb
mov
mov
cmc
pop
sbb
jno
dec
mov
jmp
mov
mov
in
int3
insl
push
and
add
nop
lea
mov
negl
loope
les
outsl
lods
mov
jecxz
jl
push
dec
or
std
fsubr
mov
and
iret
mov
add
leave
add
arpl
pop
and
popa
jp
lea
jne
int
scas
cmp
xor
stos
and
mov
ljmp
jmp
jg
jno
jl
cmpsl
add
testb
and
mov
sar
pushl
bound
pop
push
ret
adc
sub
xchg
fwait
cmp
adc
jae
mov
pushl
mov
dec
lret
adc
aam
mov
scas
xchg
daa
mov
add
dec
es
push
pop
pop
add
cmp
or
ljmp
lods
jo
xor
loopne
aad
and
addr16
sbb
mov
insl
icebp
mov
jmp
or
jl
pop
jle
mov
test
jmp
mov
gs
pop
dec
push
xchg
clc
mov
in
inc
mov
sahf
loop
js
mov
add
nop
and
add
inc
nop
insl
xchg
mov
dec
in
cmp
xor
sbb
inc
mov
rol
rcrl
cmpsl
aaa
cmp
lods
cmp
cld
pop
push
fmul
fsubp
stos
fbstp
add
ds
mov
push
repz
mov
pushf
cmpb
jl
dec
mov
push
push
jl
pop
and
je
lret
push
insl
xchg
ss
sahf
inc
cwtl
stc
jbe
and
push
add
adc
jo
lcall
dec
jmp
push
push
addl
ljmp
lods
test
neg
int3
aad
mov
xchg
fs
lcall
dec
add
sahf
sti
mov
fdivrs
jl
mov
push
lea
mov
sti
lcall
sub
addr16
inc
lods
rsqrtps
ret
cmp
mov
mov
lods
repz
adc
sahf
cmp
xchg
dec
push
clc
sbb
lds
xor
xor
or
jmp
or
loope
sarb
cmp
ljmp
mov
divb
mov
sub
sub
les
pop
adc
hlt
mov
dec
mull
std
test
mov
cmp
aas
jge
pop
jbe
or
lcall
mov
loopne
ds
jg
push
jl
push
jecxz
and
test
aam
xchg
shll
mov
sub
cltd
out
cli
mov
cltd
or
fdivr
cmp
loopne
sub
jne
xchg
and
jp
out
ss
lods
and
pop
cld
cli
pop
fs
cmp
test
xchg
xor
decl
ret
pop
pop
sarb
rcll
xor
dec
test
rdtsc
jp
ja
aad
sar
jmp
cmp
pop
shl
roll
call
or
notl
jmp
push
ret
add
testl
cmc
fadds
mov
je
lcall
add
cmpsb
nop
mov
fimull
mov
pop
in
int3
jg
mov
mov
push
mov
mov
out
sti
inc
ja
push
or
lcall
aaa
mov
outsb
sbb
enter
out
mov
lcall
decb
add
or
xchg
bound
dec
bound
psrld
add
add
lds
jmp
neg
cld
pop
mov
rcrb
call
loopne
stc
shlb
and
sbb
js
xchg
popf
mov
inc
enter
mov
xchg
gs
cltd
test
repnz
lretw
jo
jg
incl
mov
xor
cmpb
sbb
test
inc
lcall
adc
sub
mov
aas
push
pop
or
iret
dec
call
icebp
mov
aam
push
inc
xchg
imul
mov
cmp
daa
jmp
clc
xor
fbld
cli
xor
test
insb
push
dec
lods
add
mov
mov
dec
bound
inc
inc
inc
pop
xchg
cmp
xchg
ss
pop
fcomps
outsb
fadds
and
xchg
loopne
push
jp
add
xchg
in
lahf
sub
test
mov
mov
shll
cwtl
push
sub
outsl
push
into
cmp
dec
je
test
xor
into
outsl
xor
jg
bnd
dec
push
test
dec
loop
adc
imul
test
and
ss
lcall
mov
jle
popf
mov
mov
add
dec
jmp
je
jmp
nop
mov
push
pop
cmp
jmp
fucomi
sbb
cld
gs
lods
mov
shlb
clc
outsl
mov
jp
cmp
dec
imul
decl
push
pop
fidivrl
fs
mov
pop
das
or
aas
jbe
xor
and
test
cmp
pop
rsm
into
movsl
aas
and
mov
outsl
fwait
vmaxsd
jmp
pop
insb
stos
xor
lock
push
xchg
lcall
push
pop
lret
pop
cmpsb
mov
or
xchg
popf
insb
cmp
and
xchg
test
mov
loopne
lcall
sbb
ja
shrd
mov
mov
cli
test
sbb
xchg
call
xchg
pop
xchg
ds
lret
xchg
lods
inc
push
jl
lcall
in
jg
jo
mov
jns
and
int3
je
faddp
cmp
stos
mov
inc
sbb
out
les
pushl
ficoms
or
imul
sbb
pop
out
cmp
lea
scas
mov
add
call
data16
lds
dec
mov
mov
testb
das
add
xchg
ljmp
sahf
mov
leave
sbb
and
shrb
jecxz
in
push
pop
sar
lcall
and
bound
mov
lret
jno
out
clc
sub
push
add
mov
loope
jmp
inc
aam
fcom
jle
sub
sub
jge
mov
inc
xchg
add
cmc
repz
mov
jg
push
inc
pop
lret
add
jle
mov
add
fldcw
mov
imul
push
jmp
push
mov
js
adc
xor
testl
inc
call
call
ds
cli
xchg
add
adc
mov
dec
dec
shll
pop
mov
das
pop
or
inc
mov
enter
lods
jbe
insl
push
cmp
jmp
inc
xchg
xlat
and
clc
sub
push
or
jle
pusha
and
scas
testl
loopne
fwait
add
scas
bnd
xchg
mov
lods
cmp
pop
aaa
cltd
adcb
add
push
dec
pop
pop
cmc
pop
ljmp
int
dec
test
mov
lcall
push
mov
jmp
dec
mov
sbb
lea
call
fstpt
out
push
arpl
fstl
mov
pop
pop
enter
push
mov
and
roll
jg
test
negb
fistps
pusha
mov
push
fwait
rcrl
ja
mov
cs
outsb
fisubrs
leave
jecxz
in
scas
adc
ljmp
add
xlat
sarl
and
lret
lcall
repz
decb
and
sarb
out
fiadds
lcall
arpl
incl
les
xchg
mov
dec
or
jge
push
mov
mov
pop
shlb
in
testl
mov
sahf
imul
ljmp
add
arpl
xchg
push
fsubrs
or
pushl
push
jns,pn
mov
cmc
xor
push
icebp
xor
iret
dec
mov
inc
lods
fcmovnb
push
add
jmp
mov
inc
scas
aaa
mov
adc
loop
dec
hlt
cmp
pop
xorb
incl
std
gs
out
sbb
add
or
push
movsl
inc
mov
jb
or
add
inc
sbb
mov
mov
push
adc
cmp
cmp
lret
call
sahf
sar
aaa
or
in
sbb
xlat
lea
bound
es
cli
lcall
mov
mov
xor
sbb
into
psubusw
sub
jge
rclb
push
inc
mov
ficoml
add
gs
call
mov
dec
dec
mov
cwtl
gs
mov
cmc
and
push
frstor
push
sbb
jbe
xchg
ret
mov
inc
js
sbb
jnp
sbb
insb
int
loopne
pop
das
push
les
dec
cmpsb
flds
add
jnp
and
call
loopne
sbbl
and
fldl
loop
xchg
dec
scas
call
jo
decl
icebp
bound
cmpsl
add
sub
mov
xchg
ss
cmp
incl
jnp
jns
mov
mov
in
aad
mov
push
pushl
inc
outsb
andb
dec
cltd
dec
arpl
test
dec
insl
and
ljmp
aam
jecxz
aam
mov
clc
ret
push
scas
lea
mov
call
dec
mov
decl
cld
sti
loope,pn
lcall
inc
fdiv
mov
int3
pop
xchg
shrl
pop
jmp
dec
mov
mov
push
lds
or
movsb
cld
push
sbb
xchg
insb
out
jne
jg
call
inc
and
pop
lock
outsb
and
imul
inc
xchg
mov
movsb
enter
das
fidivrs
mov
or
fnstenv
jge
sbb
lcall
mov
add
je
inc
jne
jg
mov
or
sub
mov
sbb
call
add
pusha
call
pop
mov
iret
es
dec
stos
sbb
jg
xchg
ss
and
rol
in
jl
xor
jle
loope
mov
inc
xor
mov
mov
aam
xchg
pop
fstps
and
mov
inc
mov
repnz
popf
push
pop
pop
inc
out
jle
shrb
ds
and
pushl
ss
fstps
dec
pushf
push
lret
dec
sbb
call
ja
scas
cmp
push
cmp
arpl
push
rcrl
sar
push
mov
jmp
jnp
jbe
mov
fstpt
inc
mov
call
jo
push
into
dec
faddl
dec
sahf
or
int3
jnp
lods
addb
sbb
imul
test
mov
bnd
inc
or
xchg
mov
fdivr
int3
lahf
xchg
inc
mov
sub
mov
sub
cmp
or
filds
pop
cld
jmp
jmp
sub
notl
mov
or
jg
pop
push
adc
aas
push
dec
adc
adc
inc
add
enter
adcl
push
popa
imul
insb
gs
fistpll
outsl
popa
fs
imul
and
fs
pop
or
add
or
push
inc
and
testb
jnp
out
and
jne
xor
pop
push
je
push
outsb
ja
add
jae
inc
add
add
fs
fucomi
gs
outsl
cmp
sbb
gs
outsl
sarb
in
insl
insl
popa
jb
and
dec
gs
jo
gs
pop
and
je
lods
insl
pop
ja
jo
push
and
repz
inc
pop
loopne
push
jb,pn
push
push
xor
and
fwait
and
cwtl
and
pop
lahf
adc
shrl
sbb
dec
cmp
movsb
mov
pop
imul
arpl
sub
orb
push
fcoms
cwtl
xchg
insl
push
inc
gs
inc
subb
or
or
imul
rol
scas
push
mov
insb
test
jb
sbb
and
or
test
popa
out
daa
inc
mov
inc
outsb
jbe
xorb
outsl
adc
imul
in
pusha
mov
inc
jns
stos
pop
inc
icebp
pop
inc
orl
in
sbb
adc
inc
arpl
inc
dec
push
jo
dec
pushf
adc
mov
int3
xor
sub
pop
push
movsb
call
push
push
das
xlat
out
enter
test
pop
jl
lods
mov
jnp
push
dec
cli
push
lock
adc
push
and
popa
fucomp
dec
push
jo
mulb
addr16
xor
das
sub
in
xor
push
jg
inc
push
cmovg
cmp
add
inc
xor
rol
push
gs
push
lds
out
push
sbb
ss
sbb
inc
mov
inc
lcall
stos
inc
mov
add
dec
add
imul
add
add
add
sbb
xchg
sub
icebp
outsl
xor
sbb
add
or
paddsw
insb
fnstenv
xor
cmp
mov
pop
insb
imull
cli
dec
decb
and
add
add
or
cmpsb
sbb
add
pop
hlt
sub
cld
adc
je
mov
ficomps
outsl
add
repnz
fnstcw
push
popa
cmpsb
lock
dec
mov
out
inc
cs
and
push
add
cld
mov
shrb
jae
arpl
out
lock
lahf
rcrb
faddp
cwtl
enter
sahf
adc
int
movsb
push
inc
xchg
mov
and
and
xchg
test
add
add
add
add
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
dec
add
add
add
lock
add
