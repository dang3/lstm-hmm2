call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
mov
sbb
or
jge
dec
mov
add
pop
pushf
push
in
sbb
or
out
cmp
sub
sbb
or
jl
insb
cwtl
pop
mov
jb
push
mov
cltd
sub
sbb
or
loope
icebp
sub
sbb
or
jl
insb
sbbb
mov
cmp
pop
mov
popa
mov
xchg
dec
cmpsb
imul
aas
nop
push
xchg
movsb
dec
jne
cltd
adc
pop
or
cmp
cmp
jbe
cmpl
inc
mov
xchg
push
cmpsl
arpl
test
jg
hlt
test
xchg
into
or
divb
test
jp
xchg
lods
or
insl
shlb
mov
cmp
or
popf
jge
insb
jo
mov
pop
adc
mov
test
pop
roll
imull
mov
xchg
mov
xchg
scas
sub
xchg
mov
sub
gs
add
xor
out
mov
test
jmp
cmp
cmp
sub
sbb
or
jl
insb
cwtl
pop
xchg
dec
popa
mov
push
mov
cld
xor
sbb
adc
mov
cmp
sbb
int3
push
cld
push
mov
scas
insl
test
mov
aas
sub
or
bound
push
ficomps
pop
jp
mov
fidivrl
jns
je
dec
test
cwtl
pop
mov
push
mov
cld
sub
sbb
or
clc
cmp
sub
sbb
or
jl
insb
cwtl
pop
mov
push
mov
cld
sub
sbb
or
clc
cmp
add
jae
lret
xchg
mov
push
lods
sbb
test
movsl
dec
fldt
fwait
inc
and
inc
sahf
sub
mov
insl
lret
or
mov
lret
jne
dec
enter
and
test
mov
push
jno
outsl
rcll
repz
adc
push
dec
ret
out
dec
comiss
xchg
lea
mov
fiadds
dec
sub
sbb
mov
sbb
inc
push
pushf
xchg
cmp
sahf
add
fiaddl
mov
cmp
and
cmp
sarl
and
into
sub
js
inc
fadds
xlat
push
es
int
je
jno
movsl
dec
sub
rolb
cli
inc
insb
pushl
movsb
dec
int
mov
loope
enter
push
sti
arpl
popf
fwait
push
sub
pop
adc
wrmsr
push
imul
pop
inc
fwait
int
mov
lds
stos
cmp
movsl
clc
inc
insl
adc
sarl
enter
cmp
pop
adc
lds
sbb
and
dec
fdiv
fwait
sahf
push
repnz
add
mov
in
mov
mov
fildll
outsb
add
mov
je
mov
test
loopne
in
dec
push
or
fmul
fsubrp
mov
mov
lret
mov
pushf
adc
sbb
sub
out
fidivrl
into
test
dec
push
and
mov
mov
mov
mov
cs
sbb
adc
adc
dec
mov
sub
xchg
jb
hlt
cmp
push
sti
mov
mov
dec
fwait
fwait
sahf
push
push
fadd
cmpsb
xor
daa
jbe
ja
dec
mov
jae
cmp
jg
mov
xchg
cs
inc
lds
sahf
or
insl
sahf
push
push
mov
mov
or
xchg
mov
imul
mov
jne
jecxz
sbb
gs
mov
sbb
out
ss
subb
and
jmp
jle
sub
jecxz
les
push
mov
mov
nop
jno
orl
add
outsl
repnz
push
loop
enter
mov
outsb
jmp
test
cmp
clc
mov
mov
xchg
dec
mov
and
push
inc
pop
sbb
push
fidivrs
jg
arpl
jbe
and
fcoms
xchg
decl
fdivrs
test
mov
pop
push
imul
jmp
and
call
daa
les
sarb
mov
sub
xchg
pop
mov
jecxz
adc
mov
push
jne
test
sbb
or
and
cmpsl
ss
mov
xchg
push
mov
repnz
mov
cmp
jo
loop
out
mov
iret
int3
mov
or
imul
mov
sbb
mov
movsl
adc
fistpll
ficoml
inc
int
push
pop
push
cmc
leave
enter
sbb
add
int3
or
loope
and
mov
fidivl
jns
add
jns
mov
sub
push
mov
pop
loope
out
mov
cmp
dec
jl
pop
mov
ret
into
clc
jg
in
pop
xchg
jecxz
roll
sub
and
mov
je
and
pop
mov
call
sub
jmp
mov
mov
out
add
dec
pop
scas
sub
fstps
mov
stos
mov
nop
das
jbe
mov
mov
imul
cmp
mov
into
push
xchg
pop
jns
scas
call
out
push
and
push
inc
pop
cmp
mov
xchg
cmp
pushl
jae
adc
mov
pop
rcr
add
outsl
test
sub
push
mov
mov
cs
lcall
dec
push
rcll
dec
and
sbb
je
cs
add
das
mov
xchg
push
mov
mov
daa
mov
test
push
cmc
mov
insb
pop
xorb
push
sub
dec
sarl
movsb
add
or
jno
pcmpgtw
mov
gs
pop
jb
push
cmp
pop
cltd
jne
add
xchg
aam
xchg
lds
mov
popf
mov
cwtl
ret
nop
lods
dec
pop
inc
arpl
jnp
push
or
pop
jns
push
xor
sbb
xor
test
cmc
lea
push
test
fldt
sbb
enter
push
mov
dec
inc
jae
jns
mov
shrb
pop
mov
arpl
cmpsl
mov
add
out
adc
jbe
rcl
or
cmpsl
out
outsb
das
add
mov
mov
xor
sub
arpl
outsl
cmpsb
add
cmp
inc
mov
xchg
nop
xchg
sub
test
mov
cmp
movsb
inc
cwtl
fdivl
outsb
movsb
fucomip
aam
in
mov
int3
lret
je
call
inc
mulb
jns
mov
ds
mov
cld
rolb
negl
or
or
xchg
xchg
xlat
rcll
out
fsubs
in
mov
rorb
es
dec
mov
insb
in
dec
push
inc
and
icebp
jl
pop
cmp
out
add
push
adc
inc
fs
shl
pop
imul
xchg
sbb
cltd
je
pop
pop
cmpsb
and
call
subl
dec
fisubrl
test
test
and
lds
push
iret
jnp
jp,pn
cmp
adc
xchg
fstpt
in
ljmp
add
ret
outsl
loope
mov
aad
aaa
movsb
pop
data16
push
jnp
data16
sub
cmp
sub
mov
mov
inc
outsb
and
cmpsb
lods
lret
push
scas
stc
pop
pop
and
mov
dec
das
xchg
lret
cmc
add
or
xchg
imul
mov
test
les
jl
scas
aam
les
add
xor
sti
stos
ljmp
dec
push
popf
fistpl
iret
std
leave
adc
out
lods
loop
xor
scas
mov
lret
and
test
mov
mov
loop
enter
rcl
ja
xor
xor
lea
cmp
sub
and
fisttpll
out
fsubs
xchg
sahf
add
pop
sbb
sbb
cwtl
jge
adc
cli
ret
and
mov
into
cmp
mov
cmc
xchg
sahf
sahf
push
ds
push
xchg
jo
cmp
mov
xor
aad
mov
inc
popa
fldenv
int3
push
mov
jge
jmp
ljmp
adc
lret
jl
lock
hlt
lret
arpl
dec
sub
in
cmp
cmp
out
mov
xchg
and
les
push
in
adc
dec
sbb
cmc
outsl
xor
add
cmp
jns
aam
cmp
cmc
mov
fcoml
mov
or
jno
jp
xchg
andb
div
loop
fists
push
cmpsb
movlps
sarl
add
sub
xchg
mov
popf
pop
mov
hlt
mov
mov
sbb
mov
stos
sbb
adc
add
dec
sub
mov
xchg
or
arpl
cs
jge
je
enter
sahf
arpl
insw
dec
pop
das
sbb
inc
loop
icebp
sbb
xchg
clc
shr
out
jnp
or
jge
adc
push
es
insb
inc
stos
mov
push
or
xor
lret
lret
lods
test
lcall
and
xchg
adc
pop
jp
mov
mov
pop
movsl
int3
aas
mov
test
in
lock
mov
cmp
pop
pop
inc
xchg
lcall
jg
jmp
mov
push
popf
dec
lcall
mov
lods
ret
clc
inc
adc
fcoms
dec
daa
sub
mov
shll
dec
shrb
jne
add
hlt
fldenv
fs
mov
ss
push
movsb
cs
ja,pt
xchg
fld
not
dec
loopne
xchg
mov
fstpt
pushl
nop
inc
sbb
inc
and
mov
jbe
hlt
dec
mov
insl
cwtl
daa
and
or
cmpsb
fldl
arpl
movsl
filds
loopne
lds
mov
dec
or
stos
xor
ds
jmp
jno
mov
out
mov
pop
or
mov
xchg
jo
test
jbe
pop
jnp
cmp
imul
sbb
cli
pushf
sbb
loope
pop
mov
mov
jbe
test
jg
js
aaa
fdiv
sub
push
or
js,pn
ret
mov
adc
sub
xchg
outsb
int3
rolb
test
mov
bound
lds
mov
adcl
data16
movsl
pop
hlt
xor
fistps
aad
popf
mov
xchg
rolb
push
mov
sbb
pop
ja
mov
fcoml
leave
inc
jle
nop
mov
xor
test
movsl
mov
xchg
or
lock
cmp
dec
dec
inc
add
iret
cs
shl
cmpb
rcrl
pusha
imul
mov
sub
dec
pushf
movsl
adc
dec
daa
pop
dec
insb
jb
gs
mov
push
call
mov
mov
pushf
pusha
cmp
adc
push
or
rorb
pop
scas
adc
fsubp
ja
cmp
out
jmp
aas
in
xor
mov
addr16
lods
cmp
add
xchg
jno
inc
cwtl
push
cmp
daa
sub
jb
inc
xor
cmp
in
inc
sti
cmp
dec
test
cwtl
in
pop
cmp
pop
decb
pop
pop
xor
insl
xlat
aas
pop
mov
pop
repz
das
sub
fcompl
pop
adc
inc
in
fcomp
jle
ss
cs
lock
jp
mulb
adc
fistpl
mov
xchg
rcl
test
lods
mov
out
arpl
cmpsl
xlat
dec
mov
std
test
jge
mov
je
add
lock
aad
test
test
sub
lcall
incb
push
sbb
xor
or
dec
movsb
pusha
popa
int3
fdivrs
and
stos
xchg
in
jns
cld
xchg
jge
insl
fiadds
sub
adc
add
push
push
cmp
mov
pusha
xchg
insl
pop
sbb
push
sub
icebp
xchg
xchg
cmpsl
popf
and
sbb
push
sbb
out
lret
pop
cmp
cmp
mov
inc
dec
cs
mov
cmp
shrb
dec
mov
add
daa
pop
sbb
jecxz
cmp
mov
fcoms
and
test
mov
or
cwtl
inc
in
push
bound
mov
push
xchg
popa
xchg
hlt
sbb
call
push
push
jl
cltd
mov
push
in
std
jecxz
out
stos
adc
mov
test
pusha
sbb
mov
push
mov
inc
rclb
loop
decl
jns
xchg
jnp
rcrl
pop
pop
inc
sarl
pop
or
adc
inc
add
mov
fxch
test
push
sub
add
ret
inc
lahf
ljmp
loope
add
ret
pop
rolb
xchg
sbb
mov
mov
push
push
fwait
cs
mov
adc
xor
fisubl
jl
xchg
fldl2e
jb
arpl
or
add
xor
lret
mov
aaa
mov
and
jo
mov
popf
ja
call
dec
pop
add
jl
xchg
push
jmp
cld
mov
xchg
jnp
and
sub
cli
shr
pushf
orl
or
sub
push
cld
js
sbb
add
xchg
adc
fstl
inc
popf
mov
sbb
and
cmpsl
outsl
in
sbb
mov
lret
xlat
out
mov
les
xchg
stc
xor
ds
jp
outsb
adc
fwait
rorl
inc
add
mov
xchg
add
fists
xor
mov
jge
ja
hlt
or
xor
jp
stos
sub
cmpsb
mov
movsb
fmulp
xchg
stos
cli
sbb
mov
mov
cltd
das
sti
mov
mov
lock
adcl
or
fcomip
inc
test
iret
or
dec
pushl
xchg
ja
mov
jmp
bound
cmp
and
mov
jnp
outsb
js
jne
and
xchg
pop
jecxz
adc
xor
ljmp
lods
cmp
sub
movsl
inc
adc
push
dec
pop
shrl
jbe
je
push
ja
inc
mov
mov
mov
xlat
test
out
xchg
test
movsb
dec
jge
call
pusha
jno
push
push
lock
mov
fidivrs
nop
inc
fdivs
das
xor
mov
jmp
cltd
cwtl
js
xor
push
mov
out
sbb
jp
adc
mov
pop
nop
jnp
push
cwtl
mov
out
ja
pop
in
jl
push
push
les
pop
stc
movsl
imul
mov
sub
js
jg
ja
cmp
mov
js
push
sti
jnp
adc
pop
inc
adc
add
and
add
jno
push
cltd
dec
stos
leave
mov
mov
stos
hlt
cmpl
out
xchg
fsubl
pop
push
shrl
mov
in
cmpb
cltd
cwtl
test
pop
mov
and
mov
ret
in
popa
jb
jge
push
jns
jbe
insb
mov
xchg
into
and
aaa
pushf
mov
push
pop
push
dec
int
push
stos
adc
add
mov
rcll
in
cwtl
mov
mov
mov
jmp
sub
dec
or
push
std
shlb
xchg
mov
mov
ret
test
sub
insl
xchg
sbb
imul
xor
xchg
loopne
and
jne
xchg
test
cld
pop
inc
adc
addl
xchg
cmpsl
popa
jns
daa
sub
arpl
pop
inc
jp
mov
cmp
mov
sbb
or
fcoml
jle
addr16
insl
cwtl
fwait
jp
mov
lock
popa
and
test
sbb
mov
loope
xchg
and
ds
mov
lds
jge
or
adc
push
out
dec
or
push
mov
dec
andl
sbb
prefetch
std
in
arpl
xchg
mov
sbb
cltd
out
mov
adc
mov
leave
cld
faddl
lock
cmp
push
mov
imul
push
adc
xor
and
outsb
sbb
mov
add
mov
fwait
imul
xchg
dec
jbe
add
cmpl
or
push
loope
cmp
push
imul
adc
mov
jnp
notl
add
mov
repnz
or
lret
pop
enter
jbe
icebp
mov
mov
popa
std
xchg
xor
loopne
cmp
bound
rcl
imull
cmpsl
fldenv
sahf
or
push
or
mov
adc
cmpsb
mov
ja
jle
mov
push
pop
pop
xor
jmp
lret
notl
jae
cmpsb
in
cld
cmp
hlt
sub
mov
mov
decl
das
ret
in
jecxz
in
mov
mov
pop
aas
sub
ljmp
dec
mov
mov
mov
popf
mov
jge
mov
or
jnp
rcr
xchg
fldcw
je
inc
dec
pop
mov
sti
in
inc
inc
test
loopne
pop
cwtl
decb
lret
mov
imul
mov
ret
dec
pop
cmp
or
xor
lds
notb
mov
jmp
or
or
xchg
inc
cmpsb
neg
sbb
mov
mov
sbb
das
xor
sub
push
dec
sbb
ja
xchg
sub
cmp
shlb
adc
addr16
pusha
std
orb
fsubl
out
insl
aaa
rcrl
jl
out
xchg
jnp
fldl
push
mov
lods
daa
stos
sarl
mov
in
movsb
adc
jl
out
pusha
inc
out
mov
loop
cmpb
mov
cld
out
fbld
je
js
or
lret
lock
push
stc
fimuls
push
dec
pop
mov
leave
and
leave
adc
subl
shr
aam
or
inc
mov
sti
rcrb
sub
popf
cld
loope
cmp
and
add
inc
dec
cmpsb
repz
mov
or
out
ret
sub
cmpsl
fcomps
inc
sub
jns
jno
mov
loopne
dec
cmp
and
push
mov
outsb
shll
stos
pop
xor
rorl
push
cmc
xchg
in
mov
sbb
push
enter
dec
ja
pop
ror
pop
dec
icebp
aaa
or
icebp
out
adc
in
aad
loope
in
pop
adc
jnp
test
lret
sbb
sar
and
mov
mov
sub
fsubl
dec
stos
jns
icebp
sbb
int3
inc
fwait
mov
divl
sub
rcll
movsb
fwait
cmc
jns
sahf
aas
jge
lahf
inc
nop
xor
mov
cltd
les
adc
jge
sub
fsubrl
test
cli
imul
add
sbb
jmp
test
mov
sub
ss
lds
push
push
add
js
sbb
das
pop
add
pop
push
mov
sub
cmp
bound
lahf
inc
jnp
xlat
sub
addr16
leave
jmp
jl
inc
fcmovnbe
movsb
sbb
test
sbb
dec
fldl
jo
fildll
push
int
fistpl
std
bound
decl
mov
xor
pop
aaa
int3
rcrb
shll
scas
adcl
push
jp
aad
hlt
or
jne
mov
mov
sbb
pop
add
repz
arpl
dec
in
les
fdivr
outsl
or
add
add
add
notl
adc
cmpsb
mov
aad
xchg
mov
sbb
and
dec
jmp
icebp
fists
sbb
ret
sbb
fisubrl
adc
pop
xchg
push
jmp
stos
jnp
sub
mov
sahf
aad
add
dec
jp
pop
insb
mov
popl
sub
or
hlt
test
out
rorb
sahf
insb
sbb
xor
inc
into
dec
sbb
and
xor
sbb
and
mov
cli
test
sub
flds
jb
jle
mov
mov
pop
xlat
jge
ss
cli
dec
fs
xchg
sti
mov
xchg
pushf
cltd
movsl
cmp
pop
xchg
inc
inc
cmp
dec
jmp
scas
int
sub
jo
movsl
jp
daa
rorb
push
jmp
mov
idivl
push
sti
pop
mov
push
test
mov
xorl
cltd
or
shll
int
sub
inc
pop
dec
pop
jmp
cwtl
shrb
fdivl
in
cmp
scas
xchg
test
inc
adc
pop
mov
xchg
imul
cmp
lea
inc
arpl
les
incl
mov
scas
lret
push
sub
pop
sbb
fcomi
push
sub
cmpsb
repnz
adc
sahf
cmpsl
push
scas
adc
jecxz
jle
lret
add
leave
mov
mov
add
in
xchg
inc
shlb
push
ljmp
xor
xor
ret
out
xchg
add
mov
pop
mov
sbb
popf
xor
fs
pop
and
pushf
std
mov
test
and
sub
ljmp
pop
and
fs
mov
ljmp
or
std
jno
or
movsl
fidivs
addb
push
inc
mov
cmp
lea
push
or
xchg
scas
inc
fsubl
xchg
pop
or
pop
lgs
iret
aad
shrl
bswap
fisubl
dec
sub
orb
or
nop
addb
ret
loopne
lock
lods
mov
sub
sbb
dec
rclb
call
push
push
lea
dec
out
adc
insb
std
int
inc
in
cmp
mov
push
test
xchg
lahf
and
and
add
jnp
iret
cmp
sahf
jp
push
fcomps
jb
out
xor
loop
out
push
les
lret
inc
xor
cmpsl
mov
imul
dec
mov
inc
pushf
dec
in
and
and
bound
jle
mov
rcrb
inc
je
lret
fdivl
pushf
adc
lea
mov
sub
cmc
xor
jg
push
push
mov
mov
push
xchg
pop
pop
pop
hlt
jp
sub
rolb
add
or
sub
movsl
sbb
cs
pusha
mov
mov
add
cmpsb
or
fildll
sbb
or
jl
insb
cwtl
pop
mov
push
mov
cld
sub
sbb
or
clc
cmp
sub
sbb
or
jl
insb
cwtl
pop
mov
push
mov
cld
sub
sbb
or
clc
cmp
sub
sbb
or
jl
insb
cwtl
pop
mov
push
mov
cld
sub
sbb
cmp
int3
cmp
sub
sbb
or
jl
insb
sbb
xchg
sti
dec
je
adc
and
xor
in
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
pushf
mov
adc
mov
jmp
sbb
sub
dec
jl
insb
imul
stos
int3
lret
cld
sti
in
jmp
sbb
cmp
sub
pushf
cmp
jnp
imul
mov
ret
cld
jecxz
icebp
sbb
das
xor
sub
pop
sbb
and
ret
fwait
call
and
gs
jge
ret
xorb
or
xchg
aam
pop
lret
push
push
and
xor
loope
mov
ret
sub
sub
jnp
es
test
in
iret
push
lea
pop
sbb
pop
lret
cmp
in
scas
or
xor
test
lret
mov
sti
sti
jns
in
adc
dec
mov
ret
aam
or
push
pop
add
insb
push
inc
push
dec
test
int3
aaa
jg
test
or
xor
xchg
popa
xchg
jae
jg
daa
pusha
push
loope
sub
in
dec
sbb
pop
ret
cs
or
sarl
test
jnp
fwait
mov
fcmovne
lret
cld
loop
repnz
or
cmp
sub
pop
inc
dec
pop
jl
insb
paddusw
clc
mov
mov
mov
xchg
imul
ss
sbb
jnp
push
stc
jecxz
mov
lret
shrb
lahf
mov
push
dec
sub
pop
sub
and
pop
sbb
stc
fimull
nop
mov
lret
cld
sti
in
jmp
sbb
cmp
sub
pop
pop
dec
dec
jl
insb
imul
stos
int3
lret
cld
sti
in
jmp
sbb
cmp
sub
pop
pop
dec
dec
jl
insb
imul
mov
pop
inc
sbb
imul
daa
fsubs
cmp
jp
jne
cmp
mov
bound
push
or
xor
aad
push
pushf
or
test
adc
in
es
les
pop
pop
pop
imul
andb
lret
hlt
inc
adc
dec
lret
dec
rorb
icebp
dec
xchg
push
fisttps
nop
sub
add
push
scas
scas
xchg
nop
cld
inc
xor
adc
sub
sub
shll
pop
fistpll
pop
and
scas
jmp
push
sbb
rcr
jno
inc
mov
add
pusha
push
or
mov
cmpl
sub
cli
mov
mov
clc
pop
and
fisttps
mov
cwtl
pop
mov
add
inc
negl
push
cmp
adc
ljmp
into
pushf
test
paddusb
iret
cwtl
or
scas
xchg
in
sub
pushf
ds
add
test
fstpl
and
pop
lock
pop
rorl
cmp
repnz
pop
jbe
xchg
inc
repnz
testl
fadd
mov
push
or
sar
adc
shlb
xchg
jae
jbe
and
dec
lock
lods
test
inc
loopne
hlt
mov
cmpsb
push
xorl
aad
fadds
ret
cmp
stos
pop
fcoml
xchg
fwait
xchg
in
loopne
push
cwtl
push
cmp
jecxz
leave
leave
int
xchg
outsb
in
mov
scas
lds
inc
sub
aaa
add
cmp
movsl
sub
std
jbe
lds
outsl
push
jns
add
fcomps
mov
mulb
mov
out
xchg
ret
mov
testl
sbb
and
ret
sbbb
in
test
pop
lret
stos
stos
mov
mov
pop
dec
test
je
sbb
mov
imul
insl
test
adc
lret
push
cmpsb
and
sbb
nop
mov
jae
iret
mov
lret
arpl
cmp
sub
sub
lea
mov
pop
std
pop
jb
es
test
xlat
add
jno
insl
call
leave
cmp
jp
sbb
or
arpl
shlb
push
mov
or
lds
and
test
addb
jge
popf
movsb
subb
inc
or
mov
pushf
jae
jb
inc
call
push
insb
adc
aaa
mov
jmp
stos
pop
lods
add
mov
outsl
dec
mov
push
adc
or
mov
dec
and
out
sub
test
aaa
das
xchg
mov
mov
adc
popl
jl
imul
and
in
push
mov
dec
shlb
push
adc
leave
lods
and
mov
cmpsb
es
push
rcr
push
outsb
pop
movsl
fmull
sbb
dec
daa
jno
cmpsl
cmp
iret
das
aad
mov
cmpsb
sbb
xor
mov
mov
push
or
xchg
sub
ret
xchg
cli
sub
inc
scas
fwait
push
daa
pusha
pop
add
xorb
rclb
or
cld
sub
xor
testl
imul
es
popf
das
mov
push
adc
mov
adc
movsb
mov
cmp
fbld
mov
mov
lock
js
cmp
addr16
mov
inc
dec
adc
push
and
cmp
mov
lcall
loope
test
push
jo
xchg
xchg
mov
test
push
inc
sahf
int
sbb
push
add
scas
mov
popf
push
dec
mov
lods
push
loopne
xchg
dec
inc
push
xchg
rol
mov
xchg
cmp
jne
mov
cmp
cmp
pop
jp
std
fmuls
fstpl
das
repnz
cmp
push
jns
adc
aaa
and
jne
jmp
xchg
fs
mov
inc
xchg
jmp
mov
mov
popa
repz
rcll
mov
divl
mov
repnz
sub
lea
clc
je
fisttps
pop
dec
pop
push
into
cwtl
push
shrb
xorb
mov
jmp
arpl
icebp
xor
or
jg
jae
mov
and
sbb
inc
sbb
or
loop
movsl
mov
add
test
add
sbb
iret
rclb
mov
pop
pop
or
xor
aad
insb
es
mov
inc
in
cmp
out
nop
lret
fbld
add
orl
jne
and
sbb
mov
into
into
adc
jmp
inc
outsl
and
inc
arpl
int3
dec
cmp
inc
dec
sahf
sub
xor
jno
push
mov
and
fnstenv
fildll
dec
ficomps
scas
addr16
sbb
fmull
test
stos
mov
sub
xchg
aas
dec
pop
insl
sub
push
add
into
push
adc
repz
jns
pop
fists
pop
test
push
popa
mov
jo
xchg
pop
dec
mov
cwtl
pop
sub
push
cltd
jbe
or
jmp
sbb
lock
outsb
test
mov
subb
fstl
mov
enter
lods
mov
pop
mov
xchg
mov
loopne
pop
inc
inc
xor
aaa
fidivs
mov
paddw
pop
sub
out
shlb
fidivrs
and
not
add
fstpl
pop
mov
call
cmp
or
outsl
daa
lret
aaa
or
loope
insl
out
xor
dec
adc
xchg
int3
fisttps
cmp
xor
mov
out
and
jmp
jbe
cwtl
inc
mov
push
cli
lods
pop
mov
mov
ljmp
xchg
movsw
lcall
aad
jle
icebp
sbbl
pop
cltd
test
xor
lcall
push
jge
ror
outsl
or
add
call
jnp
in
data16
jmp
jg
dec
movsl
lods
inc
mov
cmc
rcrl
mov
lahf
add
dec
lds
mov
testb
mov
xor
xchg
outsb
repz
push
clc
mov
es
nop
mov
fistpll
add
push
sbb
mov
and
adc
repz
xchg
push
dec
mov
lret
jne
je
mov
mov
scas
sbb
int3
out
or
ss
push
jbe
mov
dec
inc
fsubr
lcall
scas
jmp
sbb
sbb
inc
scas
or
jp
pop
and
aad
int3
test
add
aas
mov
dec
leave
dec
jmp
test
mov
scas
test
push
cmp
mov
in
insb
aad
dec
and
in
dec
sub
pop
les
xchg
daa
rcr
mov
xor
mov
js
pusha
sub
jbe
lods
xchg
js
cld
inc
mov
inc
add
push
out
int
mul
iret
sub
jl
inc
and
aaa
xchg
js
je
cli
jg
int
adcl
pop
cli
into
int
xor
xchg
out
dec
in
je
test
popa
mull
ret
xchg
or
jbe
xlat
lcall
pop
test
dec
lahf
sti
cmp
mov
cltd
jl
pusha
lods
dec
stc
sub
pop
stos
dec
xor
jecxz
pop
daa
mov
pusha
push
test
xchg
jns
insl
bts
add
pop
sub
int
clc
sbb
fimuls
sub
out
repz
into
cmp
cmp
add
xor
push
cmp
jo
stos
lods
icebp
cmpsl
mov
or
pop
pop
add
fcomps
cmp
int
adc
adc
fmull
pusha
stos
adc
mov
and
mov
adc
shl
sarb
lahf
mov
loopne
test
mov
push
xor
push
data16
inc
mov
scas
mov
fldt
mov
sbb
dec
jecxz
test
inc
lret
inc
jmp
cmp
test
jnp
loopne
mov
mov
js
cmp
xor
jnp
jecxz
mov
adc
gs
mov
sub
in
in
pop
fimuls
into
push
stc
insl
or
sbb
es
mov
xchg
pop
fildl
stc
mov
mov
into
pop
lds
addl
mov
stos
gs
mov
ss
mov
pop
hlt
ss
and
and
add
gs
cmp
mov
jecxz
dec
pop
dec
loop
push
add
gs
mov
and
lahf
mov
inc
scas
cmp
repnz
mov
loopne
cmp
adc
roll
xor
shrb
adc
jb
jnp
out
jnp
fsubl
pop
jbe
repnz
mov
lds
rcl
jg
lods
pop
pop
arpl
xchg
popf
xchg
inc
scas
repz
scas
lcall
subb
ror
add
arpl
or
arpl
sub
sub
xchg
xchg
in
cmp
lds
fbld
icebp
jnp
xchg
dec
xor
cltd
sub
sbb
add
cs
scas
mov
int3
fcoml
test
cmp
pop
call
imul
fwait
sbb
mulb
shlb
mov
pop
mov
test
lahf
add
lahf
imul
popl
xor
jge
sub
lock
pushf
or
pop
sub
gs
and
sbb
inc
jl
out
xor
int3
push
add
movsl
fwait
cmpsl
mov
movsb
es
push
jb
in
out
sub
mov
lods
insb
imul
adc
out
jmp
and
xchg
icebp
icebp
out
test
popl
in
lea
fdivp
bound
adc
xchg
fbstp
stos
inc
cmp
cs
inc
push
aad
xlat
jnp
xor
push
push
gs
or
nop
inc
dec
pop
pop
xlat
and
pop
sub
clc
xchg
shll
scas
or
or
cmp
push
sar
adc
fs
roll
jge
xor
push
cmpsb
xor
add
pop
jne
push
lret
hlt
sub
adc
inc
mov
mov
push
jo
push
xor
ss
cmp
roll
and
fnsave
setne
add
fwait
mov
bound
rorl
lds
jle
adc
notb
xor
push
push
add
into
dec
mov
pop
dec
ljmp
mov
les
fstl
ret
xchg
mov
cmp
push
mov
sbb
int
jno
int
bound
jg
je
std
xor
je
mov
push
cld
in
xchg
sub
xor
std
leave
fdivrp
sbb
pushf
mov
sbb
sbb
inc
push
mov
fadd
or
xchg
jle
lahf
aaa
mov
sahf
cmp
fldcw
loopne
lahf
mov
dec
sub
xchg
jb
cmpsb
test
sub
dec
lcall
out
ficompl
mov
leave
pop
mov
dec
xchg
xchg
dec
ret
add
ret
dec
fdivrp
adcl
jno
lods
sbb
sbb
cmp
mov
adc
popf
shll
imul
cmc
out
aas
xorl
xchg
push
mov
mov
inc
mov
mov
add
jnp
ret
shll
lret
sub
jecxz
mov
stos
notb
dec
push
aaa
test
push
mov
mov
ds
daa
ret
jno
dec
pusha
cli
mov
jmp
or
mov
or
push
fsincos
outsb
push
push
movsl
mov
shrb
cmp
jns
push
data16
out
add
pop
je
or
push
fisubs
ret
sub
scas
das
mov
jo
jns
pop
mov
aam
xchg
popf
add
jl
aaa
movb
xor
inc
jg
mov
adc
repnz
cs
or
adc
out
or
lea
cs
cmp
cltd
mov
ljmp
xor
fbstp
stos
test
fcompp
ficompl
arpl
jns
ja
fistl
cld
xor
fwait
ja
lret
mov
or
mov
lret
lret
decb
or
mov
jp
xor
lret
xchg
jb
idiv
inc
cmp
dec
aad
lcall
pop
aaa
jl
push
sub
lock
inc
xor
push
addr16
shll
and
dec
xchg
mov
ljmp
fbld
jg
mov
fnstenv
popf
xchg
inc
inc
mov
les
inc
mov
jno
clc
dec
sahf
pop
notb
push
sahf
andl
lret
stc
inc
jmp
mov
out
je
cltd
stc
cmpsl
xchg
jl
fcmovu
lock
cld
and
and
mov
xor
stos
mov
call
xor
xchg
mov
add
jo
push
das
pop
push
mov
in
sub
scas
cmpl
mov
les
pop
lret
pop
fistps
outsl
mov
or
jle
fwait
aad
sbbl
sbb
rorl
shll
mov
cwtl
scas
movsl
stos
cmp
pop
push
mov
mov
leave
ljmp
into
fwait
fwait
hlt
dec
jae
push
mov
dec
call
xor
dec
mov
jo
xchg
mov
insb
cs
imul
pop
dec
xor
loop
data16
jge
pop
aaa
fstl
into
int3
adc
insl
imul
or
out
jp
inc
data16
and
nop
or
in
das
stos
xor
add
xchg
push
sbb
inc
sbb
call
je
fistpll
les
or
mov
mov
or
sbb
test
cmp
or
arpl
xor
pop
jae
push
xchg
fmuls
and
cs
mov
lea
xor
ss
push
in
push
dec
cmp
inc
xor
out
sar
inc
int
mov
nop
das
sahf
mov
ret
inc
mov
inc
jno
iret
push
call
xchg
xor
into
jge
cmp
stos
jp
inc
cld
adc
xchg
rcl
inc
jecxz
sub
ds
mov
push
mov
or
inc
jno
xor
enter
inc
fmuls
pusha
xor
inc
fwait
imul
xchg
sub
dec
push
aas
aaa
or
mov
aaa
inc
jecxz
add
iret
movlps
add
xchg
movsl
jp
notb
stos
adc
xchg
scas
adc
data16
mov
adc
cs
out
rorb
sub
pop
sub
jns
notb
in
call
cmp
test
xchg
in
popf
mov
cmp
scas
xchg
fistl
pop
or
and
outsl
fildll
jb
fsubr
xchg
leave
xor
add
ljmp
or
call
out
iret
ret
xchg
and
add
xor
mov
pushf
rcll
clc
aam
mov
sub
lock
sti
push
sbb
mov
repnz
add
inc
scas
add
cmpsb
dec
insl
add
adc
mov
sbb
cs
sub
jne
mov
divb
or
mov
or
lahf
fbstp
mov
mov
pushf
dec
add
insl
stos
pop
enter
addr16
xor
test
xchg
clc
fcmovb
jecxz
jmp
mov
cmp
and
cmp
hlt
mov
pop
jp
int
test
mov
adc
dec
mov
sub
or
sahf
add
pop
adc
push
cmp
inc
lahf
mov
iret
add
xor
repz
sub
adc
and
mov
inc
adc
xor
and
test
dec
daa
sbb
and
lods
push
xor
sarb
cmp
mov
mov
push
xchg
jmp
xchg
test
push
int3
out
push
ljmp
int3
clc
arpl
cs
and
jbe
or
push
fbld
ret
jae
inc
sub
imul
xor
je
idivl
mov
fsub
repz
sbb
rcll
inc
dec
sub
outsb
cmp
sbb
jmp
lret
push
ds
pop
mov
ljmp
dec
pop
ret
xchg
and
rclb
jnp
inc
imul
jno
mov
mov
adc
testl
and
inc
add
into
mov
push
pop
push
or
enter
cli
pop
mov
fidivrl
and
pop
jmp
ss
cmp
stos
or
sbb
xor
aad
leave
jae
adc
xor
jge
dec
jo
inc
sti
jl
icebp
lret
inc
stos
cmc
and
add
ret
mov
insl
stc
stos
dec
lock
sub
and
ds
push
xchg
daa
test
incb
add
test
and
decb
rorl
xor
mov
or
mov
pusha
mov
dec
sub
xor
jp
xchg
mov
out
cmp
dec
in
pop
inc
nop
fidivrl
test
bsf
add
ficoml
fdiv
and
jno
cmc
mov
cs
stos
xor
loopne
ret
movsl
cmpsb
les
push
sti
pop
pop
and
inc
ds
subb
pop
insb
ret
mov
mov
sub
mov
jecxz
push
fadds
orb
mov
arpl
lods
mov
mov
inc
lea
pusha
inc
shll
mov
inc
out
lea
dec
lahf
les
lods
iret
scas
or
je
rcll
or
mov
scas
pop
xchg
ret
movl
or
lret
pusha
test
leave
in
fs
out
ret
dec
mov
push
mov
inc
outsl
add
movsb
enter
push
add
sbb
push
out
pop
xchg
daa
sub
stc
enter
xor
cmc
fsubrs
xchg
insb
pushf
stos
leave
xchg
jae
lods
lret
daa
dec
and
mov
jo
inc
sub
add
data16
test
sbb
cmp
test
pop
jl
shlb
dec
mov
jge
test
scas
cwtl
sub
mov
rolb
jecxz
mov
sar
je
je
cs
xor
jg
stos
test
adcb
fwait
xchg
add
push
jp
cmp
in
movsl
outsl
and
and
mov
dec
test
pop
mov
adc
mov
clc
in
mov
jp
pusha
add
adc
cmpsb
inc
sub
ret
pop
pop
or
jge
and
push
jb
mov
xor
mov
repnz
outsl
xor
or
jecxz
movsl
dec
aaa
mov
or
xor
ds
add
and
addr16
mov
mov
or
pop
cmp
mov
ret
or
addr16
insl
into
fmuls
push
pushf
mov
sbb
xor
js
cld
mov
push
push
mov
daa
outsb
cmpsb
mov
mov
nop
sti
cli
lods
inc
pushf
ja
mov
insl
ljmp
cmp
popa
pop
in
lods
test
stos
pop
cs
addl
jno
cwtl
adc
adc
sub
scas
sti
aad
xor
inc
adc
pop
xchg
in
jbe
out
mov
repnz
adc
inc
outsb
mov
inc
fcmovb
js
jmp
loope
cmp
mov
jp
and
add
mov
not
or
inc
lret
in
pop
and
outsl
mov
int3
xor
add
sub
pop
lcall
scas
and
mov
mov
pop
inc
lahf
lea
scas
xchg
clc
push
sbb
cmp
fs
add
ret
aas
mov
mov
adc
mov
enter
dec
repz
xchg
mov
sbb
or
cwtl
fs
inc
nop
mov
pusha
inc
insb
and
cld
lahf
arpl
out
outsl
rclb
icebp
arpl
stos
daa
outsb
daa
sbb
dec
jno
cmp
clc
call
mov
cmc
cmp
ds
shll
mov
call
inc
mov
movsl
push
adc
je
xchg
xor
mov
pusha
cltd
dec
lea
negl
inc
pop
pop
repz
mov
adc
rorb
add
sbb
jmp
xlat
xchg
das
call
insb
dec
fcomp
int
cmp
incl
icebp
fstpl
jae
pop
adc
outsb
std
ljmp
add
popl
cmp
imul
int
ds
bound
mov
adc
jge
ljmp
sub
adc
in
in
jle
push
data16
jbe
add
outsl
adc
xor
js
scas
jae
pop
gs
andl
dec
jmp
sub
out
mov
xor
jecxz
les
scas
and
push
ret
pop
out
insl
andnps
inc
bswap
mov
cwtl
add
fwait
pop
ret
idivl
lret
out
inc
insb
repnz
mov
int3
mov
mov
fcmovne
lret
cld
sti
in
jmp
sbb
cmp
sub
pop
pop
dec
dec
jl
insb
imul
stos
int3
lret
cld
sti
in
jmp
sbb
cmp
sub
pop
pop
dec
dec
jl
insb
imul
stos
pop
fcmovne
lret
cld
sti
insb
jmp
sbb
cmp
sub
pop
pop
dec
dec
jl
insb
imul
stos
int3
lret
cld
sti
in
jmp
sbb
xchg
cmp
sub
cmp
or
sbb
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
ret
jae
arpl
push
lock
orb
add
mov
pusha
jo
add
and
mov
inc
xorb
xor
call
add
jo
inc
rcll
and
and
dec
sub
sub
cmp
repz
or
xlat
je
insb
in
scas
aas
pushf
adc
ss
and
sti
nop
loop
lock
in
pop
sub
aas
xlat
std
rolb
sub
xor
sub
sub
pusha
pop
jne
scas
inc
adc
sub
or
sbb
call
dec
std
and
jnp
out
xchg
or
mov
sbbl
push
jecxz
mov
push
sbb
xchg
or
sbb
mov
adc
nop
xor
mov
inc
adc
in
mov
adc
and
aas
neg
pushf
shrb
sub
cmp
psrlq
sub
mov
sarb
mov
loope
push
leave
jg
jns
pop
adc
mov
sub
cmp
fwait
inc
inc
and
xchg
dec
lock
fs
and
repz
lret
dec
stos
sbb
test
mov
out
xor
inc
aam
mov
inc
pushf
add
add
jle
dec
cld
push
out
lea
mov
xchg
and
insl
push
addr16
daa
xchg
xchg
or
jns
jg
dec
hlt
jno
lods
jae
arpl
add
add
push
jecxz
shll
add
xor
loopne
lock
xorb
and
repz
jecxz
shll
add
xor
and
xor
mov
adc
push
pop
add
pop
xchg
popf
inc
hlt
pusha
stc
ficoms
scas
call
add
mov
cmpsl
inc
in
add
std
push
lock
das
pop
sti
jg
xchg
out
xchg
fldenv
inc
int3
sub
cli
mov
adc
add
mov
sahf
jmp
mov
or
xor
mov
test
in
dec
int
mov
lock
pop
movsl
testl
jae
andl
sub
add
daa
or
xchg
icebp
push
mov
add
xchg
sbb
lret
xchg
dec
lds
and
popa
lret
bound
sti
fdiv
fdivl
jge
jle
lock
push
pop
clc
mov
dec
jle
xor
dec
leave
pop
dec
sub
arpl
jnp
pop
pop
and
cmc
xor
mov
add
aad
and
push
dec
and
mov
stos
movsb
sub
pop
std
sbb
rclb
scas
call
neg
insb
jmp
insl
or
data16
sbb
push
xchg
pop
mulb
cwtl
xor
mov
sub
inc
cmpl
or
xchg
xchg
jbe
cmp
push
pop
push
aad
mov
popa
mov
aad
mov
stos
out
jle
arpl
test
in
cmp
ljmp
shlb
std
and
mov
ss
add
xlat
mov
push
rcll
psubsb
jl
ret
testb
outsl
icebp
es
test
xor
mov
mov
dec
rolb
xor
leave
jb
xchg
ljmp
jle
xor
mov
aaa
lret
mov
mov
enter
leave
sti
sbb
inc
fnstsw
ljmp
mov
jl
out
pop
xor
xor
cmp
add
sarb
pop
scas
sub
enter
call
mov
dec
mov
mov
jno
xchg
rcrb
or
push
test
cmp
insb
and
mov
call
sub
mov
call
sbb
stos
test
add
insb
int
mov
int3
mov
mov
and
aas
jl
movsb
loope
mov
pop
cld
js
aaa
mov
jecxz
inc
mov
jae
loope
pop
mov
loop
sbbb
push
test
and
add
dec
das
fisubs
xchg
sbb
xor
and
inc
loope
mov
mov
out
jae
mov
lock
movsl
into
call
inc
lods
loope
pushf
cmp
fidivs
xor
fistps
imul
mov
jecxz
xlat
inc
mov
daa
adc
in
and
loope
aaa
ret
mov
arpl
addl
arpl
ficoms
dec
ja
jbe
in
and
out
aaa
mov
xor
xchg
sub
inc
mov
sbb
push
cltd
and
pop
cwtl
cmp
lret
sub
pop
mov
aaa
clc
jnp
pop
popf
out
enter
sbb
and
cmc
push
inc
add
mov
mov
shll
out
push
or
das
push
fs
adc
lods
mov
pop
cmp
roll
push
cli
leave
fisubrl
adc
test
pusha
enter
mov
out
loop
fs
xchg
icebp
inc
roll
dec
sub
andl
sarl
dec
fucom
mov
pusha
popf
mov
lds
mov
adc
jae
hlt
repnz
fs
xor
pop
push
rcrl
and
cwtl
aad
andb
sub
out
out
xchg
fwait
jl
xchg
cmp
fsubrs
push
subl
outsl
jns
shl
test
lods
push
mov
sysenter
or
dec
aaa
sbb
jl
mov
shlb
inc
ljmp
jg
inc
test
nop
dec
push
enter
clc
mov
or
subb
bound
pop
imull
testl
mov
insb
hlt
dec
leave
je
cmpsb
xorb
fstpt
jle
mov
mov
scas
fmuls
sbb
mov
mov
xor
aam
cli
push
fisttpl
jo
rol
adcl
stos
mov
fldt
lahf
push
xor
mov
scas
pop
cmp
scas
adc
aam
adc
xchg
sub
push
add
rorl
ds
adc
insb
mov
dec
cmpl
fsts
mov
inc
sar
and
pop
jb
rorl
dec
inc
sbb
cs
mov
es
sub
jno
cs
sbb
mov
xchg
arpl
lods
sbb
lret
lea
push
in
pusha
add
ljmp
lea
repz
insb
xchg
jecxz
add
leave
sub
jge
pop
cmpsl
push
imulb
and
les
roll
add
fcmovnu
dec
cmp
lods
lds
push
push
je
mov
cmp
adcl
outsl
scas
popa
or
or
insb
dec
ds
mov
test
push
mov
mov
std
cli
sbb
adc
sahf
lcall
mov
movb
mov
mov
inc
pop
lods
inc
in
push
cmp
cwtl
xchg
js
xor
mov
aad
scas
mov
movsb
cli
inc
mov
bound
mov
pusha
stos
pop
mov
rol
dec
add
movsb
mov
fidivrl
imul
jno
ja
push
testb
insb
jp
nop
enter
push
ljmp
or
bound
lea
add
iret
adc
test
andl
jecxz
adc
mov
sub
jge
bound
int3
or
pop
rol
shlb
lea
xor
ss
xor
push
mov
lods
aas
pop
pushf
cltd
lods
aam
loop
push
sbb
scas
adc
test
adc
arpl
data16
aam
hlt
shlb
mov
inc
jo
adc
jbe
out
inc
mov
lcall
jne
jo
pop
mov
add
jle
add
nop
inc
jmp
ficoml
cwtl
fwait
std
test
shll
pop
push
sti
es
adc
rcr
and
inc
sub
ljmp
cltd
xchg
sahf
mov
idivb
mov
sti
inc
fisttps
inc
mov
std
adc
jg
mov
add
mov
ss
jge
add
sbb
mov
xchg
mov
sub
push
shll
jns
stc
and
loop
sub
mov
and
gs
fcoml
mov
or
mov
pop
cli
lahf
cld
or
pop
andl
push
cmc
pop
mov
movsb
xchg
inc
pop
push
xor
dec
sub
dec
dec
jno
sub
push
mov
insl
dec
scas
add
xchg
xorb
push
call
lret
mov
sahf
sbb
push
pop
sbb
inc
outsb
adcb
cli
data16
jno
lock
iret
sub
add
pop
divb
or
out
pop
pop
dec
faddp
jbe
push
mov
movsb
jb
fwait
orl
lods
movsl
dec
shll
out
pop
pop
int3
dec
sub
jecxz
xchg
dec
cli
sbb
xchg
mov
pop
out
iret
cltd
xlat
pop
and
mov
jns
xor
fadd
cmp
add
or
jle
out
inc
ljmp
in
mov
jecxz
add
popa
out
inc
fstl
xchg
sti
pusha
movsl
popf
outsl
in
lock
xchg
jg
jecxz
mov
push
sub
imul
mov
stos
or
in
push
push
es
test
mov
mov
repz
out
aad
and
sarl
mov
pop
stc
add
shlb
pop
je
cvttps2pi
sar
xchg
aaa
pop
mov
in
shll
cli
add
dec
mov
add
dec
or
sbb
lret
pop
xchg
push
jbe
int3
insw
mov
add
jg
jle
mov
or
stos
xor
pusha
sbb
mov
leave
popf
jg
call
outsb
push
push
in
sbb
pop
bt
enter
dec
jge
int
jo
lret
insb
pop
sub
leave
pop
jg
mov
movsl
ds
lcall
scas
jo
mov
test
mov
adc
sbb
pminub
pop
out
jae
cwtl
jbe
and
jae
outsb
dec
call
scas
fucomi
push
lds
daa
xadd
pop
aad
loopne
sahf
and
nop
insl
or
sub
lea
mov
int3
mov
outsl
rclb
in
inc
add
je
mov
dec
push
or
cmp
cltd
out
aaa
popf
pop
out
xchg
cmp
bound
sarl
insb
cmp
sub
or
mov
aas
dec
push
out
shll
dec
iret
gs
or
test
push
sub
dec
xor
and
cmp
call
mov
and
xchg
pop
jle
icebp
add
pop
lods
jl
mov
pushf
dec
test
push
and
mov
clc
shrb
mov
jo
push
in
fldenv
xlat
inc
repz
movsb
leave
jb
push
jnp
das
inc
test
push
mov
dec
cltd
inc
scas
mov
add
or
adc
push
xchg
push
sbb
lock
sub
xor
adc
loope
gs
and
cltd
inc
fildl
push
fcoml
fisubs
imul
loopne
mov
lods
push
push
ficomps
sub
das
popf
roll
loopne
lods
push
jnp
aas
adc
and
jmp
int
xor
dec
test
js
jl
incl
stc
xor
shlb
mov
ret
repnz
pshufw
fs
aad
push
fadds
jp
inc
lret
out
push
mov
inc
ds
or
and
aam
inc
bound
jb
sbb
jl
and
ret
sbb
rcrb
mov
stos
jb
je
sbb
in
xorl
bnd
je
addb
or
push
mov
sbbb
and
enter
lods
stos
dec
jle
leave
notb
in
inc
lret
mov
lods
test
iret
ss
mov
inc
aaa
pop
imul
out
jge
iret
pop
pop
pop
jb
push
cmp
jo
dec
xor
mov
fs
or
push
scas
adc
and
shll
out
push
sahf
roll
push
add
mov
jbe
jp
enter
aas
xchg
iret
mov
dec
cmp
jno
mov
pop
or
shrl
push
out
and
sahf
sbb
and
adc
orl
int3
sub
out
jecxz
or
ret
inc
mov
pop
adc
mov
hlt
cwtl
out
and
pop
ret
adc
je
lahf
ss
add
sub
cmc
out
adc
fs
pop
jge
jns
out
or
add
cmp
adc
movl
jae
ss
mov
in
push
mov
jbe
xlat
xchg
dec
push
cmpl
sbb
clc
scas
mov
push
and
adc
sub
jle
insb
test
lea
push
andl
sub
push
mov
pop
popa
mov
push
xor
cmp
lods
sbb
inc
outsl
nop
jns
inc
dec
fistl
dec
sbb
fstps
mov
test
cld
or
xchg
fcmovnu
xor
enter
gs
jns
push
mov
xchg
enter
xor
insl
call
fwait
lods
stos
enter
das
in
bound
pop
test
into
cli
std
mov
jnp
pop
push
das
dec
and
mov
jbe
sbb
cmc
das
mov
adcl
test
mov
test
mov
imul
mov
cld
dec
xchg
add
pop
or
jl
arpl
stc
jl
mov
test
mov
lahf
es
and
jle
mov
in
dec
popf
push
cli
out
out
mov
jl
and
dec
mov
pop
push
repz
xor
sbb
sub
scas
dec
frstor
xchg
in
call
pop
mov
enter
popw
call
push
icebp
je
xor
xlat
jle
loop
mov
mov
push
in
andl
bound
cmp
pop
adc
adc
addr16
cmp
cmp
scas
pop
nop
sti
psubusw
sbb
push
pop
cmpsl
cld
jg
inc
push
lea
push
adc
leave
bound
ja
inc
sbb
push
cmpsl
and
cwtl
jb
mov
das
inc
xor
xor
clc
int
jae
xchg
jo
adc
loopne
stos
pop
imul
dec
btc
iret
jns
mov
jp
xchg
pop
adc
pop
add
sub
repz
jne
and
mov
or
sbb
push
lods
dec
cmpsl
lock
adc
shl
pusha
jge
aam
xchg
push
mov
neg
daa
sub
popf
pusha
icebp
cli
movsb
pop
shll
arpl
jmp
or
mov
adc
sti
mov
jbe
mov
pushf
imul
xor
push
mov
sub
push
aaa
scas
or
mov
mull
lock
xor
and
xchg
pop
fs
xchg
mov
pop
jmp
bound
repnz
mov
sbb
sub
in
add
test
in
jb
stos
mov
dec
negb
int
mov
push
pop
in
enter
sti
pop
mov
mov
imul
out
shll
ljmp
push
xlat
fisttpl
rcrb
adc
leave
push
or
gs
add
imul
mul
lods
and
and
dec
add
cmp
mov
movsl
jo
adc
mov
aam
or
mov
ud1
iret
or
add
lock
push
sbb
rorl
mov
inc
cmp
leave
ret
jge
xchg
cmp
fs
rclb
cmp
data16
cmp
mov
mov
sub
pop
cmpsb
xchg
iret
js
push
xor
cmp
mov
mov
push
mov
push
sbb
xor
sar
pop
idivb
lods
ja,pt
add
push
outsl
aas
push
idivb
rclb
xor
sbb
xor
int
push
push
shlb
jnp
pop
or
std
insb
xor
loop
sbb
dec
pop
push
stos
dec
adc
repz
iret
mov
lods
les
jg
add
in
mull
and
data16
mov
mov
mov
mov
mov
xchg
out
or
enter
push
sbb
xchg
fists
je
sub
sub
push
jnp
adc
dec
loope
adc
cmc
mov
in
xor
rolb
fucomp
call
and
test
push
sub
mov
daa
dec
icebp
mov
mov
mov
iret
ja
scas
test
lcall
sbb
pop
or
mov
cmp
jno
pop
rolb
and
gs
sbb
cltd
mov
ret
xchg
pop
inc
popf
iret
and
inc
leave
inc
mov
sbb
repnz
or
inc
in
dec
lret
mov
mov
lds
mov
cmp
mov
cltd
push
out
mov
mov
and
ss
xchg
jae
jmp
leave
rcr
in
inc
mov
inc
inc
test
clc
fstl
movsl
and
sub
or
or
rorb
arpl
imul
out
mov
xor
xchg
push
jne
jle
lods
pusha
ljmp
andb
lods
insb
mov
jmp
imul
and
sbb
int
rcrl
or
or
jmp
or
cld
cmp
push
and
xchg
jle
mov
mov
pop
push
dec
fldl
fdivrl
movsl
pop
jns
push
push
and
int
imul
dec
das
bswap
adc
xor
mull
push
adc
jno
repnz
jnp
decl
xchg
mov
jbe
repz
sahf
fildll
mov
into
dec
fcmovb
shll
mov
inc
dec
or
movsl
jle
mov
inc
xchg
adc
xchg
imul
mov
mov
testb
xchg
sbbl
aad
jle
cmpsb
and
pushf
ds
sub
and
clc
cwtl
fnstenv
lahf
ret
pop
das
arpl
into
movsb
rcrb
aas
test
outsb
pop
jb
fmuls
cmp
ljmp
jmp
mov
frstor
push
xor
jb
cld
mov
sbb
adc
sub
and
xchg
mov
mov
nop
mov
xor
and
inc
es
into
in
scas
scas
jl
or
clc
mov
or
pop
test
aas
or
shlb
nop
repz
fwait
mov
outsl
pop
fs
push
mov
fisttps
repz
das
sub
repz
out
mov
push
add
jne
lods
add
lcall
push
call
jmp
in
andb
or
cmp
decb
mov
jle
imul
fildll
pop
test
push
call
gs
mov
xchg
es
shr
lods
fistpll
sub
dec
pop
jne
sub
push
data16
insb
test
jo
inc
pop
jg
or
push
xchg
mov
icebp
sahf
mov
xor
inc
xorl
gs
outsl
inc
sub
stc
cltd
daa
sub
and
dec
popa
in
cmpsl
andnps
mov
aam
jno
mov
lock
xor
adc
fldt
ret
js
mov
add
std
ret
lret
dec
imul
gs
dec
bndldx
sub
fstsw
fiadds
sub
mov
sub
fsubrl
xchg
test
mov
inc
test
adc
ljmp
jo
xchg
jmp
arpl
jg
mov
push
lds
out
test
sbb
push
and
push
sub
mov
stos
fyl2x
or
xchg
pop
jo
mov
lods
dec
jne
mov
or
add
push
clflush
test
movsb
pop
int3
push
jbe
fnstenv
or
inc
arpl
jae
add
xchg
addr16
fdivrs
adc
outsb
push
and
push
xchg
adc
mov
jo
fwait
push
add
std
push
test
int3
sbb
into
shrb
push
inc
push
hlt
arpl
xchg
iret
outsl
xchg
inc
add
jno
xor
dec
add
out
add
sbb
dec
scas
lret
push
pop
dec
movsb
cwtl
loope
imul
xchg
add
pop
sub
and
mov
or
js
mov
stc
and
mov
movsb
fnstcw
outsb
cmp
mov
push
jae
out
ret
inc
push
dec
dec
fisttpll
cltd
xchg
in
repz
lret
add
push
sbb
and
cwtl
mov
pusha
lods
xor
sbb
sbb
stc
es
fsubr
push
dec
aaa
les
imul
xchg
dec
fsubs
inc
or
pop
loopne
cli
push
mov
call
imul
fld
sub
lods
cmpsl
out
arpl
push
lcall
push
sbb
les
imul
xor
gs
push
jg
lea
mov
push
dec
add
and
and
mov
test
jno
dec
xchg
cmp
cmpsb
int
inc
xchg
out
mov
push
test
mov
adc
mov
pop
outsb
push
or
cltd
clc
adc
outsl
imul
sub
add
fiadds
not
enter
dec
xchg
inc
inc
jl
mov
lea
jnp
jl
cmp
sbb
in
cmp
push
pop
xorl
out
arpl
push
icebp
pushf
add
bound
jle
push
fildll
btr
xchg
scas
and
mov
iret
mov
mov
inc
push
outsb
sbb
pop
aad
cmp
adc
inc
out
push
xlat
add
jle
icebp
cs
mov
lea
jae
imull
addr16
pop
scas
cmp
ljmp
add
cmp
jno
and
jmp
xor
jno
imul
cmc
es
inc
add
cli
and
sbb
lcall
jmp
pop
cld
cli
pop
outsb
insl
push
das
jp
xchg
outsl
popl
adc
bound
jae
shl
fstps
je
pusha
mov
push
push
push
cld
lret
mov
aaa
sub
dec
arpl
ja
jbe
test
fildll
mov
xlat
mov
lods
or
or
pop
insl
lods
sti
test
adcl
pop
call
jmp
mov
pop
cld
mov
mov
mov
add
fcmovu
ret
xorl
adc
push
sbbl
jp
xor
xor
xchg
out
and
pop
arpl
xor
add
push
jecxz
shll
add
xor
loopne
lock
xorb
and
repz
jecxz
shll
add
xor
adcb
adc
nop
and
repz
jecxz
shll
add
fadds
mov
xor
ret
inc
repz
dec
lret
mov
cmp
cld
lahf
popa
jno
inc
scas
push
imul
lea
loop
push
loope
icebp
aas
shrl
pop
mov
outsl
xchg
lahf
popa
jno
inc
scas
push
fbld
iret
xor
add
adc
loope
xchg
aas
shll
pop
mov
outsl
xchg
xchg
jno
inc
mov
and
xor
add
adc
dec
sub
pusha
movsl
push
rcrl
and
and
cmp
mov
out
sarb
fldt
adc
mov
ja
push
dec
cmp
aaa
jo
daa
adc
jp
jp
lcall
pop
paddq
jg
nop
shlb
arpl
cmp
je
das
std
dec
sbb
push
pop
add
jno
jle
sbb
lea
xor
mov
out
xchg
cmp
popf
or
rolb
hlt
jle
sbb
addl
scas
and
xlat
and
adc
xchg
pop
sbb
fists
cmpsl
mov
dec
cmpb
ja
outsl
mov
daa
push
test
push
int
or
out
loopne
xor
sarl
sbb
nop
push
popa
xchg
jno
inc
scas
push
enter
incl
notb
push
loope
icebp
daa
shll
inc
mov
outsl
clc
repz
ljmp
dec
test
inc
pop
test
dec
test
sub
or
popa
out
jae
inc
fbld
mov
iret
push
pushl
adc
test
mov
and
or
or
cli
sub
and
sub
xor
and
xor
add
adc
loope
icebp
aas
shrl
pop
mov
outsl
xchg
lahf
popa
jno
inc
scas
push
fbld
iret
xor
add
adc
loope
icebp
aas
shrl
pop
mov
outsl
xchg
lahf
popa
mov
push
mov
lods
std
jg
xlat
add
rcrl
adc
push
sbb
aad
fwait
test
sub
aad
sarb
repz
int
dec
xor
mov
imul
aaa
and
inc
lods
push
push
stc
xchg
xorl
inc
movsb
add
sbb
ficoml
jge
leave
adc
pop
xchg
pop
xor
lds
fld
add
fiadds
in
pop
push
icebp
aas
mov
sub
xor
icebp
jns
add
cmp
pop
push
lods
xor
outsl
arpl
popf
shrl
rolb
and
out
add
dec
inc
filds
or
jl
cmp
rcrb
ljmp
xchg
inc
popf
jb
jp
mov
jmp
adc
fwait
dec
jmp
pop
push
insb
sub
pop
adc
sti
mov
inc
push
test
xchg
rol
rcll
sbb
ret
sub
leave
inc
sbbl
daa
out
aaa
push
jno
inc
push
mov
push
push
aas
sbbl
cmp
es
sbb
aam
bound
outsl
mov
inc
mov
addl
addr16
int3
daa
mov
js
mov
mov
les
and
loope
mov
xchg
dec
mov
xor
sub
es
fsubp
adc
cli
adc
sub
pop
and
mov
lcall
xchg
cmpsl
dec
pop
ss
je
cltd
inc
sti
xchg
adc
jmp
fcoml
ror
inc
movsbl
push
lea
les
push
int
orb
fs
lods
cmp
mov
pop
js
mov
das
add
in
orl
je
imul
mov
mov
and
adc
fsts
xor
adc
jne
rcrb
call
sbb
inc
cmpsl
repnz
push
and
andb
ret
fcmovnbe
push
fildll
xor
adc
lcall
cmpsb
push
lcall
mov
mov
mov
push
inc
aas
xor
xchg
adc
cmp
shrl
imul
pop
out
xor
loope
loopne
in
stos
imul
inc
pushl
leave
adc
fsub
aaa
adcb
filds
mov
ret
mov
sbb
push
add
sti
add
jl
clc
cld
mov
jge
mov
sub
adc
out
in
cmp
adc
xchg
hlt
js
inc
outsb
jns
aam
jle
add
div
cli
fs
push
rolb
add
pushf
mov
fsub
sbb
loopne
test
add
invd
add
sub
sub
mov
push
lahf
rol
mov
pop
jp
dec
stc
in
jnp,pn
and
popa
clc
and
lods
out
lock
pop
inc
cmpl
xchg
sbb
ss
out
add
cmc
mov
gs
data16
add
movzwl
stos
lods
int3
imul
shlb
sti
fidivl
loope
daa
outsl
and
shll
or
cli
test
or
mov
shrl
out
pop
inc
sub
in
adc
push
mov
fcmovb
dec
mov
das
pop
sub
arpl
icebp
rclb
repz
mov
mov
gs
scas
sub
ror
outsb
cwtl
inc
sbb
out
cmc
mov
jle
insl
clc
dec
sub
mov
push
mov
popf
dec
subl
imul
push
xor
fxtract
int
inc
test
jae
cltd
insb
sub
cs
imul
pop
sbb
fidivl
scas
sbb
pop
jl
call
xor
das
clc
mov
aam
pop
mov
sbb
xor
and
mov
cwtl
cld
stc
cmp
adc
dec
stos
sub
mov
xchg
and
jge
outsl
std
and
int3
out
mov
mov
cmp
sbb
out
pop
mov
leave
int
mov
mov
pop
lock
out
cmp
outsb
lret
loopne
jp
decb
outsb
mov
loop
lret
jl
imul
pop
sbb
daa
aad
mov
or
sbb
js
hlt
lods
stc
lret
popf
pop
lock
sub
cld
outsb
mov
std
cli
and
js
outsb
out
xor
loope
out
xor
xchg
in
std
adc
popa
les
sbb
loope
sarb
push
xor
mov
cmp
ljmp
mov
test
cmc
cmp
push
les
adc
idivl
sub
push
jns
icebp
mov
add
xor
dec
cmp
inc
pop
lds
sarl
dec
mov
loope
fsin
cmp
sub
ja
int3
leave
outsl
pop
aad
pop
xchg
stos
rolb
sub
bound
cmp
add
stos
xchg
mov
inc
insb
push
adc
adc
mov
repz
inc
test
pop
cmp
or
std
cs
and
std
std
xor
mov
addr16
fst
adc
pop
repz
jge
mov
fcoml
mov
cmpsl
inc
inc
inc
jg
mov
rcll
ffree
xchg
pop
push
mov
test
add
xor
divb
push
and
jne
dec
and
mov
and
int
loope
es
cltd
sti
sbb
push
mov
fisubrs
outsl
dec
or
lea
mov
cld
push
sub
and
test
sbb
pop
lret
sub
push
lods
loop
mov
inc
fmuls
out
imul
mov
jae
std
pop
leave
xor
inc
mov
movsl
xchg
mov
push
add
repnz
es
mov
sbb
insb
push
xor
mov
adc
pop
xor
adc
movsb
mov
fsubr
inc
mov
ret
xchg
mov
sbb
cld
fsubrs
jb
push
out
add
adc
out
mov
cs
popf
adc
sub
dec
shlb
inc
mov
into
ffree
shr
mov
jmp
xchg
and
xor
add
or
mov
sbb
cmc
repnz
or
je
and
das
sbb
mov
fwait
test
daa
orl
mov
cmp
arpl
mov
pusha
rorb
mov
and
pop
faddp
jg
jo
jb
push
inc
je
fs
jecxz
dec
aad
es
jmp
adc
xor
in
sub
cmp
dec
imul
dec
mov
cmp
and
dec
mov
arpl
cmpsl
test
shll
ss
cwtl
add
inc
pushf
stos
test
add
dec
outsl
sbb
into
out
pop
and
add
inc
das
sahf
shl
add
arpl
dec
insb
push
shl
adc
subl
iret
lds
loopne
mov
fnsave
cmp
daa
out
pusha
xchg
jne
movsl
pop
cmp
lcall
push
inc
inc
dec
and
test
xchg
mov
inc
xor
add
es
jmp
and
pop
sub
push
dec
std
shl
mov
repz
mov
lock
cwtl
xchg
les
adc
mov
cmp
xor
mov
and
sbb
inc
mov
mov
gs
lret
fsubrl
dec
cmc
data16
push
jp
fisubs
pop
lods
cmp
jne
xor
dec
dec
push
test
and
inc
and
aam
mov
add
push
ja
lds
jge
inc
clc
push
hlt
cmp
add
fimuls
xor
ds
push
dec
xchg
das
popa
jl
ficoml
mov
pushf
aas
sbb
in
repnz
push
sarl
dec
out
add
js
je
pop
jbe
lret
dec
loop
pop
add
push
bound
cwtl
jmp
stc
lea
fistpl
test
outsb
in
divb
push
pop
es
leave
das
dec
cmp
sub
push
pop
aad
lret
ja
daa
ljmp
fildll
inc
sub
outsl
xor
jne
or
mov
sarb
jmp
or
stos
inc
xchg
mov
aas
and
push
int
jae
cmp
mov
cwtl
push
or
outsb
push
mov
sti
xchg
pop
dec
movsl
add
pop
ss
cmc
xor
pop
cwtl
cmp
mov
ja
daa
inc
mov
ret
mov
hlt
push
mov
orb
sub
cmp
cld
lods
out
cmc
and
clc
or
and
mov
adc
adcl
dec
pop
rorb
xor
outsl
mov
loope
sub
scas
adc
pop
cmp
xor
xchg
fdiv
dec
cmpsl
ss
divb
js
xlat
data16
outsl
mov
cmp
or
jns
push
shlb
cld
int
sub
movsb
test
push
adc
addb
cmp
test
or
out
mov
lret
push
in
jl
fsubl
cmp
fsubrl
xchg
pop
lods
mov
mov
mov
lds
or
add
int3
mov
push
in
call
push
inc
adc
test
xor
pop
mov
xor
insl
jbe
or
hlt
push
sbbb
jl
jno
xchg
sbb
xchg
repz
cmp
pop
xor
pushf
dec
pushf
cmp
inc
lret
rcrl
mov
dec
push
mov
xor
push
ficoml
or
notb
xor
shrb
enter
rorl
repnz
lods
mov
sub
das
dec
and
call
test
sbb
jecxz
mov
cltd
mov
mov
andb
mov
inc
nop
sub
and
das
jmp
testb
adc
shl
decb
shll
mov
and
mov
cmp
negl
mov
imulb
repz
add
js
sub
lods
out
in
mov
stos
mov
cmp
std
fdivrs
nop
in
jmp
push
xor
push
and
jne
jno
jp
sbb
mov
mov
cmovle
xchg
sub
or
xorl
cmp
outsl
mov
mov
jb
mov
push
rclb
inc
adc
xchg
pop
gs
lcall
fmull
adc
push
mov
fists
or
int3
sub
push
aad
in
adc
adc
inc
js
sub
ja
mov
ret
mov
jbe
cmc
outsl
roll
xchg
mov
and
mov
scas
lcall
das
lret
fmuls
xlat
jnp
out
mov
mov
insl
cmp
lods
insl
add
mov
inc
cwtl
adc
mov
iret
rcrl
lds
ffree
dec
xor
lret
hlt
push
fs
rol
iret
out
repnz
add
pushf
push
push
mov
xlat
mov
sahf
inc
mov
lock
call
fcmovnb
lods
xchg
notb
cmp
repz
mov
cmp
mov
mov
jbe
push
stos
lods
jns
sub
push
xor
push
insb
iret
outsl
insb
and
lock
jbe
push
adc
out
mov
push
push
in
popa
mov
mov
popa
lods
cwtl
pop
xor
fcmovnbe
or
int3
popa
bnd
test
adc
inc
mul
movsb
cmpsl
adc
xchg
sbb
pop
pop
shrl
xchg
dec
pop
lcall
pop
loope
lock
outsb
push
cmc
shlb
add
pusha
xchg
jns
mov
xchg
dec
cltd
dec
mov
mov
mov
je
lods
mov
lea
or
adc
bound
and
jbe
xchg
inc
cmpsl
mov
inc
fchs
scas
and
adc
pop
cmp
andps
pop
push
jecxz
jge
inc
testb
andl
xorb
rolb
push
call
pop
cwtl
mov
adc
mov
icebp
adc
ret
lods
pop
pushw
mov
push
ss
out
clc
mov
pop
sbb
xchg
out
push
scas
sbb
call
add
dec
je
cli
repz
out
or
mov
movsl
mov
and
mov
call
mov
push
inc
sbb
push
ljmp
sub
fwait
out
push
idivl
push
fcoml
inc
je
xor
adc
jns
push
push
add
mov
lea
push
lea
mov
lret
add
pand
cmp
push
mov
jecxz
pop
lods
lods
pusha
adc
div
mul
adc
pop
mov
cmc
mov
scas
add
pop
dec
push
bound
mov
xchg
sarl
mov
out
mov
je
inc
lahf
mov
popf
out
cmc
jmp
bound
aam
mov
je
xor
mov
push
add
fistl
add
mov
push
lds
jb
push
test
pop
sub
ss
out
xchg
inc
sub
or
xor
out
mov
sbb
xchg
or
loope
aaa
push
adc
rcll
mov
cwtl
push
cli
aaa
inc
mov
sbb
test
xor
adc
es
mov
dec
adc
and
aam
xchg
lods
push
xacquire
pop
test
adc
out
add
cmpsb
inc
mov
ret
jg
int3
xchg
pop
mov
stc
dec
xor
cmp
pop
loopne
add
jmp
movsb
movsl
icebp
sub
mov
sbb
aam
test
aas
mov
ror
outsl
xor
hlt
dec
cmp
xchg
divb
stos
push
and
push
push
aad
mov
inc
adc
not
fld
dec
int
jno
lcall
iret
outsl
sti
outsb
ja
subl
adc
addl
push
in
test
push
and
cmp
fstp
aaa
movsb
pop
sub
add
xchg
stos
adc
cli
fcoml
popf
sub
sub
sysret
adc
das
movsb
sbb
cltd
add
xor
mov
dec
lret
fildl
test
pop
xor
sbb
dec
adc
xchg
cmpsb
gs
mov
jb
sbb
add
nop
and
adc
xchg
cmpsl
ror
test
mov
xchg
bound
jge
test
mov
push
xor
mov
dec
clc
xchg
xor
lret
dec
cmp
mov
lock
sbb
cmp
jb
push
xchg
jmp
mov
leave
xchg
mov
clc
fldcw
dec
adc
sbb
xor
insl
ss
rcrb
pop
push
sbb
mov
scas
inc
xlat
js
pop
std
add
xchg
mov
loop
push
cmp
ret
xchg
sbb
mov
es
imul
pop
pop
sub
xchg
push
int3
shll
shl
mov
pop
lret
fisubl
paddb
or
mov
call
ret
cmp
int
pop
andl
mov
rol
stos
sar
gs
inc
and
sbb
xor
and
mov
pop
fs
cmp
add
jl
mov
shl
arpl
stos
in
fimuls
cmp
orb
or
mov
add
sbb
imul
push
shll
mov
or
in
je
mov
dec
inc
xchg
fstl
loop
ds
push
popf
lds
sub
mov
mov
imul
sbb
aas
jnp
and
sub
push
stos
imulb
sub
mov
push
jo
and
or
or
inc
orb
sbb
sti
es
mov
mov
xchg
lods
movsl
sbb
jmp
mov
push
inc
lret
sysexit
dec
xchg
cmp
outsl
xor
sub
subb
stos
xor
sbb
cmpsb
push
inc
std
sbbb
push
mov
pop
in
cmp
cmpsb
aad
cmp
mov
mov
fs
inc
sbb
outsb
sbb
xor
jbe
icebp
push
mov
test
fnstcw
int3
jp
in
shl
mov
push
outsl
lea
or
cmp
mov
loope
jle
adc
addr16
fldt
xchg
out
aaa
and
je
adc
lods
xor
inc
mov
loope
daa
rcl
mov
jae
push
xor
adc
push
jmp
xor
cmpb
mov
xchg
push
mov
cmp
xor
xor
stos
rclb
add
and
xor
out
xlat
mov
xor
jmp
mov
imul
xor
pop
out
imul
inc
ret
mov
mov
stos
imul
bound
mov
mov
lock
jmp
cmp
sbb
mov
lret
addl
xlat
lods
aad
mov
outsb
push
lods
mov
mov
pop
xor
or
jns
cwtl
mov
inc
addr16
scas
stc
shrl
pop
lods
xor
and
jle
dec
outsb
lock
push
mov
call
ss
jne
jbe
pop
jg
lock
addr16
push
outsl
lret
ret
dec
and
jb
insb
sbb
inc
sbb
scas
jg
sbb
pop
lods
popa
test
movl
push
lea
repz
and
scas
test
cmp
cwtl
jo
cmpl
stos
push
jl
arpl
outsl
imulw
movsb
push
cmp
adc
push
pusha
mov
jne
sbb
xor
iret
out
mov
push
push
int
xchg
scas
mov
jle
mov
push
push
sub
sub
test
xchg
test
enter
stc
mov
std
iret
jae
cs
add
insl
popa
gs
mov
push
imul
stc
push
push
inc
jbe
nop
dec
popf
push
jne
add
inc
jp
or
and
fdivr
lods
mov
mov
cld
int
shll
lods
out
pop
adc
inc
push
lods
push
or
into
pushaw
and
sbb
das
mov
shll
mov
dec
loop
fcomps
adc
stc
xchg
int
mov
cmp
push
add
lds
cmpsl
pop
imul
hlt
lock
or
in
clc
jg
pop
cmp
xor
jne
xchg
jo
cltd
outsl
pop
lcall
add
pop
mov
addr16
aam
ret
mov
sarb
xchg
xor
pop
cmp
out
inc
test
pop
cli
mov
shrb
fdiv
mov
mov
jg
and
lock
out
in
lret
movsb
sbb
sub
imul
addr16
xor
xchg
dec
outsl
fs
nop
mov
or
sub
rclb
das
mov
mov
into
mov
cltd
fiaddl
aaa
jmp
cld
xlat
jge
dec
in
mov
idivb
das
sub
xchg
push
adc
or
cmp
inc
arpl
or
mov
push
lahf
sub
test
call
call
out
push
and
dec
mov
mov
cmp
stc
test
into
mov
stos
lahf
bound
neg
sbb
scas
push
adc
faddl
test
cs
pop
int
nop
inc
cli
push
dec
sub
loopne
jmp
jnp
loop
jb
shlb
xchg
xor
imul
popa
xchg
stos
and
ds
jmp
cld
scas
imul
scas
in
cmpsb
out
pop
inc
pop
sarb
sub
mov
mov
sub
repnz
sub
jb
pop
imul
pop
xor
cltd
jmp
loopne
add
pushf
loop
stos
pushf
out
movsb
cmp
dec
mov
insb
stc
fnstsw
cli
xchg
mov
xlat
add
pop
insb
bound
xchg
arpl
dec
push
cmc
push
or
stc
dec
leave
fnsave
std
hlt
xor
rcrl
cmp
int3
cli
or
push
jbe
xor
inc
sarl
pusha
cmpl
gs
fsubrs
push
into
loop
jl
adc
aaa
test
xchg
xchg
and
cmp
pop
push
and
and
shrl
jbe
jns
cwtl
push
mov
mov
jle
xchg
pop
inc
xchg
xchg
icebp
adc
lods
fmuls
add
mov
aad
imul
popa
xor
je
ret
iret
ja
stc
push
notb
dec
int
dec
push
mov
mov
out
jb
xor
dec
mov
cmpl
xor
inc
mov
lock
xor
test
sbb
xchg
int
aas
std
cmp
xor
mov
ret
int3
cmp
pop
in
and
in
aas
mov
cli
mov
pop
jmp
adc
mov
test
stos
mov
daa
jge
pop
and
lcall
pop
jg
pushf
scas
repz
jmp
dec
fcompl
dec
faddl
call
lret
int3
jne
xchg
sub
sahf
xchg
out
jno
inc
scas
push
fbld
iret
xor
add
adc
loope
icebp
aas
shrl
pop
mov
outsl
xchg
lahf
popa
jno
inc
scas
push
fbld
iret
xor
add
adc
loope
icebp
aas
shrl
pop
mov
outsl
xchg
lahf
popa
icebp
mov
and
mov
add
adc
popa
psllw
shrl
pop
mov
insl
xchg
lahf
popa
lea
inc
scas
push
frstor
iret
xor
outsl
adc
loope
pop
xchg
shrl
sub
dec
cmpb
fsts
jmp
movsl
int3
rcrb
vmwrite
and
push
or
fsts
movsb
cltd
aam
les
adc
add
cmp
and
jp
inc
cmp
fnstenv
leave
inc
stc
cs
mov
adc
daa
or
push
jno
push
ja
inc
add
out
rcr
mov
fwait
lahf
xchg
sti
mov
cmp
xchg
mov
dec
mov
imul
or
fs
mov
or
sbb
lret
in
je
inc
sbb
cmp
xlat
sub
cld
inc
fnsave
in
popa
push
cmp
mov
xchg
cmpb
xchg
enter
push
hlt
inc
xor
imul
dec
and
cmp
mov
pop
and
add
xor
mov
imul
or
daa
cmp
es
mov
fwait
dec
aaa
inc
test
in
inc
and
sub
and
cwtl
inc
push
xchg
leave
movsb
stc
shr
cltd
aam
les
adc
lods
jns
imul
cmp
lahf
xchg
mov
enter
test
sbb
je
xchg
add
sub
jge
fcmovbe
mov
enter
xchg
mov
jne
jno
data16
jl
pop
inc
dec
adc
pop
mov
lods
fs
fsubr
enter
les
adc
add
xor
and
push
or
sub
leave
test
mov
movsb
cltd
aam
les
adc
add
xor
and
push
or
sub
insb
rolb
int
inc
mov
int
pop
mov
xor
jle
movsl
cmp
clc
sub
loope
dec
sahf
pop
dec
jne
pop
sahf
mov
call
nop
jb
sahf
loope
and
sbbl
lcall
bound
mov
add
repz
addb
or
icebp
xchg
dec
add
icebp
fsubp
sarl
lahf
imulb
adcb
int
mov
mov
outsl
or
int3
inc
cmp
adc
les
mov
mov
add
pop
push
push
inc
xor
adc
cmc
mov
pushl
xor
or
icebp
dec
call
pushf
js
pusha
sti
inc
jl
sub
inc
in
mov
xor
lahf
xchg
int3
test
mov
outsb
ljmp
mov
push
insb
inc
insb
sbb
popa
inc
xchg
pand
add
inc
push
adc
sbb
fcom
ds
filds
fwait
loop
dec
enter
lds
mov
cmp
mul
in
repnz
icebp
adc
or
sbb
jl
inc
add
jnp
loop
in
jne
cwtl
xchg
xlat
or
fstpl
nop
into
and
xchg
fidivs
pop
push
test
loopne
cmp
nop
mov
icebp
cld
cld
inc
xchg
mov
and
popf
mov
sti
mov
push
push
inc
decl
pop
push
lock
mov
fwait
leave
mov
mov
imul
leave
popf
mov
jbe
xchg
outsb
movups
loopne
hlt
add
push
or
mov
out
xchg
movsb
jne
nop
mov
dec
xchg
fldl
inc
inc
outsl
sar
dec
int3
popf
mov
cmpsl
jp
inc
push
negl
or
cmp
xor
fsubl
je
pop
add
jmp
inc
clc
ffreep
mov
sbb
mov
mov
jmp
jns
or
outsb
cs
jmp
fistps
fdivrs
pop
cli
xor
in
sbb
rcrl
xchg
dec
sub
scas
lahf
sbb
daa
mov
xlat
jne
sbb
cmpsl
mov
leave
imul
xchg
adc
aas
ds
dec
pushf
mov
les
push
xchg
or
roll
movl
call
pop
rorl
mov
add
mov
add
jae
and
and
ja
push
in
xchg
and
out
sbb
stos
mov
fstl
lods
inc
leave
les
lock
lahf
in
push
jp
sub
jae
testb
push
movsl
cld
pop
int3
stc
test
movsb
fistl
cmp
repz
dec
adc
outsb
sarw
mov
call
fs
mov
xchg
dec
push
movsl
jecxz
push
jbe
pop
jp
push
in
test
clc
cmp
xchg
into
pushf
mov
test
sbb
cmpsl
mov
jb
and
jg
cmp
push
sbb
out
xchg
mov
dec
out
inc
into
lds
or
cld
cltd
loop
cmp
and
dec
insb
sbb
lret
mov
in
mov
test
das
mov
pop
inc
loop
and
adc
out
inc
push
xor
loopne
gs
sub
xlat
divl
inc
pop
icebp
mov
push
mov
pop
mov
pop
call
out
add
push
or
adc
lret
sbb
icebp
pop
fidivrs
jo
das
js
out
xlat
dec
stos
adc
ret
scas
mov
lods
faddp
insb
xchg
int
add
repz
mov
rcrl
add
push
aam
sub
out
insb
xchg
xchg
mov
cmp
or
xchg
or
lret
jnp
mov
nop
or
test
push
and
jno
push
add
lret
jge
mov
add
loop
or
xor
xor
mov
adc
pop
cmp
je
or
or
or
in
rcl
repnz
pop
stos
cmpl
jge
pop
sub
std
jnp
xchg
jb
scas
jmp
fistl
pop
inc
or
lcall
dec
fadds
dec
jg
sti
inc
repz
mov
push
sub
rcrl
fnsave
mov
push
lcall
mov
hlt
xchg
sar
pushf
aaa
mov
push
dec
xor
icebp
mov
pushl
xchg
cmp
std
stos
and
push
xchg
call
cmp
and
add
iret
fsubrl
mov
cmp
int3
mov
adc
inc
pop
sub
add
mov
js
lods
cmpsb
pop
loop
jmp
movsb
push
arpl
cltd
lcall
lea
cwtl
fs
js
and
or
enter
jp
push
in
adc
jbe
imul
jno
add
dec
push
cmp
inc
cmpsb
jnp
jmp
sub
arpl
pushf
sub
sub
iret
fwait
and
lds
push
sub
pop
mov
mov
and
cli
jg
cwtl
pusha
lret
aas
mov
je
pop
mov
xor
lcall
cmpsl
lcall
int3
pushl
cld
shrb
or
cmp
cmp
cwtl
addr16
sbb
add
std
sbb
out
push
mov
pusha
sbb
and
ja
push
into
push
imul
test
int
mov
hlt
mov
push
in
iret
call
idivb
scas
test
int
cli
cmp
in
inc
popa
dec
add
pop
call
pop
sti
adc
mov
mov
in
mov
jle
inc
loop
inc
jecxz
ljmp
adc
add
mov
push
ret
mov
repnz
enter
or
fiadds
mov
inc
lds
fwait
out
mov
xor
mov
push
shll
roll
fldcw
mov
test
mov
insb
cwtl
cli
lret
mov
lds
push
add
xor
insl
ss
push
imul
push
aaa
jge
dec
data16
cmp
mov
adc
std
cmc
dec
dec
lock
push
jno
push
das
mov
pop
push
mov
xchg
or
mov
lret
rorl
xor
or
outsl
mov
or
orb
pop
jge
test
test
cmp
sbb
mov
mov
loop
adc
mov
repnz
fistpll
xchg
jg
mov
sub
loopne
xor
ror
repz
sbb
fldenv
clc
or
jge
inc
in
inc
cmc
es
mov
lahf
jnp
fs
insl
cld
flds
mov
test
xchg
inc
adc
cmp
xor
push
mov
popa
fwait
cmp
int
lcall
add
lea
in
hlt
jmp
jne
cld
sub
mov
and
inc
xor
push
arpl
fs
jle
or
push
mov
mov
mov
movsl
push
lret
fdivl
push
adc
adcb
stos
xchg
sub
ficoml
mov
js
jecxz
push
dec
jp
cmpsb
movsl
test
pop
pop
xchg
or
mov
push
xor
or
inc
nop
sti
cld
cmp
xchg
cmc
add
mov
rcrl
adc
fcomps
mov
or
xchg
dec
pop
adc
movsl
dec
pop
push
push
mov
hlt
inc
or
das
and
gs
mov
cmp
outsl
or
cmp
pop
push
int
mov
sub
mov
fsub
movsl
insb
mov
sub
test
sahf
pop
popa
int3
pushl
cmovno
lea
fcoml
or
cmc
pop
stos
mov
arpl
xchg
test
pushf
push
pop
xor
pop
out
dec
pop
scas
mov
shlb
xor
push
out
sbb
xor
adc
bound
es
jae
mov
cmp
dec
push
inc
push
cs
movsb
mov
mov
xchg
fdivs
out
in
rcl
push
jne
in
jno
jmp
icebp
add
inc
xor
cmp
shlb
jnp
stos
jns
and
dec
dec
stos
hlt
adc
jns
rcrl
push
mov
arpl
gs
jb
mov
insb
dec
xchg
jno
push
dec
das
fwait
push
push
jns
add
call
test
and
lahf
xor
sbb
inc
popa
bound
mov
scas
or
push
cmpsl
daa
out
push
pop
mov
adc
lods
popa
out
xorl
lods
xor
mov
sbb
mov
or
stos
sub
mov
push
cld
inc
dec
mov
pop
aam
push
xchg
pop
adc
pop
out
in
mov
imul
clc
cmp
push
push
dec
pop
dec
rcrl
fstpl
in
cmp
inc
and
aas
adc
lret
mov
mov
popa
jle
enter
in
pop
sahf
mov
sti
mov
inc
adc
mov
or
les
cld
aaa
pop
ret
in
mov
push
repnz
outsl
adc
out
jns
gs
les
stos
push
cmp
xor
ss
lret
xchg
lret
cmc
xor
ret
inc
xchg
sti
insl
rcrl
cmp
inc
pop
cwtl
jnp
lock
cmpsb
loope
out
outsl
sub
jl
inc
push
ret
inc
mov
mov
xchg
loope
test
dec
inc
and
fsubrs
jns
sbb
sti
inc
xchg
rol
pop
mov
pop
cmc
cmp
mov
int3
sti
dec
movsl
xor
leave
add
call
push
cmp
test
jmp
sbb
sbb
jo
pop
adc
xor
shll
add
fiadds
xchg
mov
adc
and
adc
or
jb
cmpsb
les
nop
xor
aaa
je
inc
and
lock
loopne
outsl
pop
xchg
push
shlb
cwtl
sub
orl
mov
ret
jg
dec
pop
adc
mov
lea
ja
mov
push
pop
movsb
xchg
aaa
jno
and
add
xor
add
push
sub
fs
pop
stos
push
test
mov
pusha
imul
push
mov
push
or
fists
adc
add
or
mov
in
addr16
aas
ljmp
push
adc
xchg
and
fmull
out
sbb
add
sub
jl
and
loope
adc
mov
fcomps
fiadds
imul
lods
mov
xor
pusha
repz
and
dec
dec
xchg
ret
outsb
mov
hlt
jge
rorb
dec
mov
jmp
cmpsb
pop
pop
arpl
mov
cmc
shr
and
popa
out
push
mov
pop
xor
lds
mov
ja
xor
xor
mov
ljmp
jg
jno
lds
sub
pop
enter
dec
push
adcb
repnz
push
ret
fsub
in
cld
pop
or
sbb
daa
add
or
lret
movsb
push
xchg
fwait
add
lret
xchg
sub
mov
fidivrs
dec
fcomip
shl
ss
fstps
mov
out
dec
sub
pop
sbb
and
inc
insb
xlat
icebp
daa
lahf
gs
das
mov
sahf
out
push
addr16
clc
jmp
pusha
sub
popa
popa
mov
fdivrs
aaa
lahf
ret
mov
mov
inc
cmp
dec
cwtl
icebp
int3
js
lret
mov
aaa
jae
repnz
pop
testb
js
scas
sub
insb
lock
movsl
cmp
mov
adc
and
add
add
push
xchg
dec
ljmp
add
fisttps
xchg
xchg
cmp
dec
inc
inc
mov
jnp
xchg
adc
inc
ror
test
adc
xchg
mov
mov
jl
dec
cmpsb
loop
xchg
mov
adc
xor
in
std
pop
popl
in
xor
sbb
fidivrl
out
mov
lods
insb
xor
xchg
lcall
inc
bound
mov
cwtl
repnz
sbb
cmpsb
repz
fnstenv
int
je
sub
int
aaa
insl
aam
mov
mov
mov
add
popa
add
sbb
arpl
test
fldenv
popa
sarl
or
pop
jo
stos
sub
inc
push
jecxz
arpl
sbb
call
xor
in
mov
lret
into
ss
jmp
push
jbe
jmp
pop
cmpsl
jae
push
rolb
xchg
mov
pop
adcb
mov
inc
inc
dec
aad
xlat
mov
mov
or
sub
push
in
movsb
aam
cmp
mov
outsl
mov
push
fisubrl
or
loope
xchg
or
repz
mov
fs
movmskps
mov
insb
mov
push
fisttps
dec
cmp
xor
fbld
inc
or
mov
fs
inc
lods
inc
push
adc
or
out
mov
insl
dec
jp
mov
sarl
pop
bound
inc
das
or
stos
add
sbb
iret
mov
roll
movsl
push
pusha
inc
mov
rorb
fisttpll
iret
loop
mov
fisttpl
lods
fdivl
inc
addr16
mov
stos
pop
gs
shrl
out
addb
jno
adc
adc
test
mov
movhlps
xchg
and
mov
mov
inc
test
shl
aad
xor
mov
cmp
repz
repz
push
add
mov
aad
test
out
sbb
test
or
fstpt
lret
in
jo
imul
xchg
out
xchg
inc
hlt
leave
push
cli
dec
fldcw
or
dec
dec
ss
test
in
pop
ficoms
mov
push
ds
sbbb
js
mov
inc
push
fisubrl
add
xchg
popf
lret
mov
mov
xchg
pop
ljmp
movsl
call
mov
dec
dec
roll
ja
push
mov
xor
popa
out
pop
sahf
xor
xchg
cmpsl
inc
test
aas
push
out
adc
data16
aad
sbb
rolb
loope
jo
add
xchg
mov
gs
repz
sbb
rcl
das
daa
out
jb
imul
push
adc
sbb
cmp
adc
sbb
jbe
sbb
rclb
call
out
jne
idivb
bound
repz
lret
jp
pop
lock
mov
adc
fs
out
adc
in
dec
mov
jmp
cld
xor
or
test
jae
cld
xchg
dec
mov
lret
popf
scas
xchg
xchg
lea
jo
xor
insl
sbb
dec
pop
clc
and
imul
and
sbb
mov
dec
inc
adc
lock
push
mov
xchg
aaa
fcmovb
imul
push
xlat
insb
addl
aaa
push
jns
lds
push
jns
jmp
adc
mov
pop
cli
scas
jg
cmp
ja
mov
filds
mov
and
cmpsb
inc
mov
mov
imul
andl
out
cwtl
fisttps
lret
inc
xor
imul
je
mov
int
fcomps
push
xor
adc
testb
push
inc
outsl
pusha
cmc
mov
and
pushf
mov
call
aam
ret
and
imul
iret
nop
xor
daa
out
xchg
add
add
jno
sbb
fs
jbe
jno
sbb
popa
mov
pop
in
outsb
sub
filds
add
outsb
sarl
inc
sbb
inc
aad
fists
sbb
push
or
pop
icebp
xchg
sub
mov
andl
int3
rcll
rorb
cmpsl
bound
xor
add
adc
jns
jb
lret
out
jnp
xchg
mov
mov
mov
mov
sub
cmp
out
sar
inc
dec
aaa
insb
sti
mov
aaa
inc
test
inc
mov
inc
ds
and
fs
cmc
ret
mov
adc
pop
fbstp
mov
jb
addb
lret
jb
mov
insb
pop
lret
mov
mov
mov
pop
adcl
inc
or
push
push
out
dec
in
or
or
cmc
fisttps
imul
jno
fiaddl
add
in
fs
cmpsl
not
xchg
jle
cltd
pop
clc
lret
dec
dec
sbb
dec
mov
xchg
mov
bound
and
imul
dec
loop
or
jno
push
data16
inc
xchg
inc
xchg
mov
add
dec
clc
scas
mov
xchg
pop
outsl
add
mov
jae
jmp
xor
adc
sub
sub
lea
ret
lret
dec
adc
pop
mov
mov
jb
mov
out
sub
mov
xor
add
jecxz
inc
sub
mov
shl
ret
mov
jnp
aad
sbb
inc
stos
mov
mov
dec
add
loope
jle
add
aaa
sbb
dec
loope
cmpsl
pop
add
xchg
fildl
loopne
cmpl
aam
add
pop
mov
out
jl
loope
sbb
mov
inc
mov
fdivl
imul
xchg
pop
popa
and
shl
clc
mov
inc
es
daa
les
cmp
sahf
xor
cli
xor
push
gs
pop
or
xor
or
push
pop
inc
fisubrl
pop
push
mov
mov
or
mov
push
add
cmpsl
out
loop
mov
pop
imul
in
in
adc
sbb
pop
xor
out
mov
sub
push
addl
cmp
ret
push
test
loopne
lcall
nop
sbb
sbb
adcl
fisttpl
push
inc
sub
je
pop
add
stos
movlps
mov
jmp
jge
sti
sti
sub
stc
mov
and
jb
xchg
aas
popa
popa
jnp
lds
pop
lds
sbb
dec
xor
cwtl
and
pop
and
rolb
out
pop
cmp
mov
mov
cmpsb
out
sub
fbld
jo
pusha
mov
xchg
popf
dec
xchg
dec
lods
seta
bound
ret
inc
mov
mov
scas
add
les
mov
shll
cwtl
pop
movsl
idivb
outsb
mov
mov
dec
test
imul
lret
gs
push
into
pop
addr16
mov
enter
jle
outsb
cmpsb
lea
mov
pop
aas
push
push
sbb
mov
mov
je
in
and
sub
icebp
jmp
cmp
jp
sbb
pop
lcall
and
ljmp
and
int
in
sbb
pushf
mov
adc
push
mov
jecxz
mov
inc
and
shlb
cld
and
ret
inc
push
dec
imul
mov
in
jp
out
cwtl
lahf
cli
lret
or
xchg
cmp
test
das
int
mov
repnz
in
sbb
add
ds
imul
aaa
dec
repz
jecxz
add
push
mov
out
stc
ljmp
or
pusha
sti
mov
mov
lret
lret
add
test
out
add
xor
jmp
jae
jne
sarb
aaa
push
pop
addl
push
dec
jle
or
pop
addb
mov
mov
xor
test
adc
jl
xchg
mov
movntps
sahf
adc
or
les
jp
dec
mov
sti
adc
adc
mov
xor
cmp
lods
sub
jnp
shr
cltd
lds
push
xchg
push
adc
mov
scas
push
xchg
dec
lcall
les
fbstp
sub
sahf
cmp
test
aaa
xchg
scas
mov
insl
cs
js
mov
bound
add
jle
mov
std
jae
cmp
adc
mov
dec
push
xchg
pop
or
int
sti
daa
fdivs
sub
cmp
mov
jne
pop
mov
mov
pop
sub
jecxz
enter
inc
pop
push
dec
jns
dec
xchg
xchg
jg
hlt
push
jmp
push
mov
leave
mov
clc
mov
ficomps
dec
cmp
cmp
sahf
std
jge
mov
mov
fucomi
je
add
lods
mov
mov
shrl
add
imul
cmpsb
cli
sub
xor
out
das
dec
aas
ljmp
pop
mov
and
mov
pop
je
shl
fdivrp
jl
and
mov
test
mov
movsb
cltd
aam
les
adc
add
xor
and
push
or
sub
leave
test
mov
movsb
cltd
aam
les
adc
add
xor
and
push
or
sub
leave
mov
lods
jmp
scas
mov
adc
imul
fnstenv
pusha
stc
push
jmp
les
jmp
scas
shll
push
outsb
sub
cmp
or
sbb
mov
mov
cmpl
xor
dec
push
sbb
insb
jae
orl
ret
int3
rcr
jecxz
repz
add
sbb
sub
cmp
dec
push
pop
arpl
orl
ret
int3
rcr
jecxz
repz
add
adc
pop
push
cmp
push
cmp
inc
or
repz
push
dec
or
sbb
adcb
dec
sub
bound
dec
movl
mov
fsubl
imul
in
jl
sub
cmp
imul
cltd
xchg
dec
lods
pop
rcl
fwait
pop
push
push
int3
inc
loop
sub
cld
std
dec
xchg
outsl
loopne
ss
jae
popf
subl
int3
add
aad
and
fcmovnb
mov
xchg
jns
jle
insb
pusha
lock
inc
sub
jecxz
rep
imul
jae
xor
adc
sub
or
leave
and
sbb
sbb
xor
or
aaa
mov
test
jns
jl
mov
mov
jecxz
repz
add
sbb
sub
cmp
dec
push
pop
arpl
mul
xlat
dec
iret
ljmp
movsb
mov
jne
inc
push
push
aaa
and
and
fmul
rcl
xlat
lods
sti
jmp
test
mov
push
dec
jle
pop
jp
push
or
and
xor
insb
adc
fdivrl
enter
fsub
in
repz
add
sbb
sub
cmp
dec
push
pop
arpl
orl
ret
int3
rcr
jecxz
repz
add
sbb
sub
cmp
dec
push
pop
arpl
orl
mov
fmul
xchg
mov
dec
fsubs
bound
jge
xlat
mov
mov
jecxz
loop
stos
and
sbb
push
jae
push
jle
out
mov
mov
loopne
data16
pushf
repz
mov
fmull
das
das
xchg
or
dec
aas
fstl
pop
mov
lret
jmp
sbb
xlat
cmovg
mov
xchg
xor
mov
add
imul
roll
stos
repnz
out
and
mov
stos
push
scas
mov
cld
add
xor
pop
xchg
mov
cmpl
fldt
sbb
into
popl
js
and
or
adc
or
xchg
js
mov
pusha
xlat
pop
incb
xor
mov
mov
push
notb
mov
stos
cmp
jmp
push
ret
mov
add
mov
cmp
es
add
xlat
push
jae
xor
jno
adc
sahf
sub
ja
popf
push
pusha
int
int
adc
xchg
std
pop
mov
jb
jb
nop
lods
sbb
adc
cmpsl
ret
lret
mov
sbb
xchg
aas
xor
cmp
jp
mov
mov
inc
pop
adc
xor
mov
nop
xchg
sti
add
insl
es
clc
jnp
add
dec
and
adc
sarb
jge
inc
mov
mov
ret
loope
sub
ret
xchg
mov
ss
dec
pop
rcll
adc
int
jge
xor
xchg
adc
xor
mov
sub
sbb
adc
decl
sbb
out
and
in
xchg
cmp
add
mov
leave
mov
push
lds
cld
mov
in
sub
jge
decl
sbb
push
mov
rolb
in
push
pop
decb
into
fcompl
std
or
fidivs
and
cmpsb
mov
adc
jne
ret
adc
and
movsl
xchg
sub
js
leave
mov
js
pushf
xchg
inc
repnz
mov
push
mov
xchg
scas
mov
sub
rcrl
jns
adc
xchg
es
pop
xor
adc
pop
or
adc
lahf
add
rclb
pop
adc
jmp
ljmp
adc
ljmp
in
sub
and
pop
jns
das
and
cwtl
and
and
fadd
push
inc
lock
sbb
and
pop
push
outsl
testl
mov
adc
sarl
jnp
mov
popa
movntps
xchg
push
add
inc
mull
or
mov
xorb
movsl
mov
mov
mov
mov
test
pop
aam
imul
cmpsb
mov
pushf
push
scas
faddl
mov
stos
adc
aad
and
pushl
daa
add
dec
je
add
stc
inc
in
inc
push
ret
nop
movsb
pop
lds
insb
xchg
cmp
fs
jl
sub
push
ss
cld
outsl
scas
arpl
cli
mov
stos
push
adc
sahf
shll
mov
dec
pop
add
test
jmp
adc
popf
icebp
fmuls
mov
push
push
jnp
arpl
jns
mov
dec
js
dec
gs
clc
insb
dec
push
hlt
sbbl
call
lret
add
sti
and
andl
xchg
sbb
mov
insb
dec
sarb
mov
int
mov
iret
nop
data16
mov
jne
das
std
xchg
out
mov
mov
gs
jno
popa
jnp
lock
mov
loop
mov
mov
push
mov
jnp
pop
pop
mov
js
notl
jmp
add
sub
rcrl
shll
mov
dec
sarl
ja
or
xchg
test
add
lea
inc
xor
inc
push
das
jg
jg
mov
or
sub
add
pop
es
scas
jnp
mov
cmp
mov
jmp
stos
shrl
movl
mov
jb
movsl
add
inc
jb
shlb
shll
int3
stos
dec
test
adc
push
call
cmpsl
cmp
add
xchg
fcompl
out
cwtl
sbb
xlat
inc
mov
cmp
imul
shll
jle
testb
mov
jne
out
subl
shrb
jecxz
outsb
loope
pop
sbb
shl
mov
inc
pop
not
sbb
lret
push
rcr
in
jo
addl
loopne
mov
xor
dec
mov
icebp
out
xchg
push
addb
in
lods
rcrb
adc
mov
into
xchg
ret
test
sti
mov
jmp
les
popf
loop
push
jg
lods
xchg
jnp
xchg
scas
out
rorl
imul
xorb
or
and
sub
jp
movsl
ss
bound
nop
add
stos
cmpsl
ja
imul
sti
pop
sub
popa
xor
nop
scas
mov
cs
sub
into
mov
mov
sub
fs
test
int3
fimuls
mov
cli
mov
dec
or
mov
lods
das
sbb
push
lret
add
loopne
test
sub
aad
xor
aaa
lcall
xor
fldenv
jp
jnp
sbb
mov
adc
xchg
loope
fs
inc
aam
rcll
dec
loope
imul
mulb
in
sub
and
push
sub
cmpsl
pusha
dec
mov
clc
ljmp
dec
mov
mov
mov
and
enter
push
je
ja
testb
lret
pop
or
fildll
and
push
inc
aad
rcrb
sub
jne
dec
sbb
push
imul
jmpw
lods
in
loope
rol
adc
mov
push
xchg
addr16
pop
or
cmp
pop
les
daa
adc
popa
mov
shl
push
jle
push
orl
mov
xor
sahf
loopne
mov
sub
inc
pusha
push
dec
adc
and
into
test
pusha
mov
sbb
pop
mov
hlt
jae
sbb
or
lret
cmp
dec
xlat
xor
insl
adc
popa
ret
scas
popa
pop
loope
inc
pop
enter
mov
test
cwtl
and
aas
jecxz
out
push
fwait
es
popf
decl
mov
sub
icebp
shll
xchg
dec
xchg
inc
lahf
pushf
inc
out
andb
cmpl
and
sbb
in
scas
adc
add
dec
cmp
ficoms
pop
adc
xchg
dec
jno
outsb
pop
outsl
andb
mulb
out
repz
and
shlb
outsb
pop
jle
fstl
xchg
sbb
mov
mov
mov
aam
cmp
push
xchg
sbb
inc
mov
mov
mov
test
and
cli
jns
add
xchg
inc
pop
imul
push
adc
lods
ret
sub
sbb
stc
jmp
mov
scas
dec
jle
dec
repnz
in
data16
pop
inc
sti
xor
shll
popf
adc
mov
das
or
fwait
ds
mov
ret
pop
fsubrl
std
fucomip
sbb
out
es
jo
pusha
lods
in
fs
push
sbb
rcr
leave
jns
aas
aaa
or
xchg
in
into
xchg
inc
cltd
lods
push
pop
clc
dec
aaa
push
arpl
in
mov
addl
pop
dec
sbb
cltd
add
and
stos
cmp
mov
jl
loopne
dec
xchg
repnz
xor
xchg
fcompl
sub
std
loop
mov
ds
mov
fcoml
lods
out
pop
cwtl
stos
movsl
lcall
pop
mov
or
out
cltd
and
mov
push
dec
clc
in
sbb
sti
xchg
inc
flds
xor
orl
in
pop
pop
jp
daa
fstpl
in
inc
mov
aaa
and
jae
loope
lcall
gs
fsub
add
sub
fsts
sub
loopne
addps
jnp
les
dec
or
push
inc
sbb
jg
xlat
and
cmpsl
sbb
out
fmulp
push
into
call
lret
call
inc
jmp
jg
pop
imul
shll
adc
pop
in
rcr
jle
pop
pusha
test
xor
sbb
cltd
mov
push
test
notb
mov
sub
inc
mov
dec
test
push
dec
sbb
in
cmpsb
fwait
orl
add
lcall
imul
stc
and
cmp
or
in
fcomps
mov
mov
loopne
jge
pop
std
cmpsl
mov
cmp
insb
lcall
sub
int
and
mov
sub
xor
out
sub
data16
xchg
pop
cmp
mov
in
std
cmpsl
fwait
sbb
shrl
add
fchs
xor
push
sbb
xor
cmp
stos
ret
inc
inc
fucomi
sub
xor
dec
fst
or
scas
add
and
testb
adc
cmpsl
bound
sbb
es
cwtl
pop
dec
mov
inc
scas
rclb
fidivrl
je
dec
or
and
xor
add
arpl
push
shrb
test
decb
add
out
xor
xor
movsl
leave
mov
loope
std
push
add
bswap
jecxz
shrl
pop
ss
out
insl
ret
sbb
or
fidivrl
jns
jbe
data16
and
scas
add
fdivl
cmp
push
pop
jp
jle
push
cmp
sbb
jbe
pop
fdivs
test
push
mov
in
mov
aam
xchg
xlat
lcall
mov
mov
pusha
inc
aas
lods
adc
mov
nop
mov
mov
mov
dec
jb
push
lock
int3
mov
sub
mov
gs
add
sub
push
sti
lods
jmp
pushf
adc
add
insl
cmpsl
mov
cmpsb
xchg
dec
sub
std
pop
ds
popf
sbb
ret
mov
push
xchg
pop
nop
ja
xor
nop
mov
mov
das
adcl
test
xchg
subl
inc
test
mov
sbb
sahf
ret
jl
clc
fisubrl
pop
fidivrs
std
dec
daa
filds
pop
xorl
cltd
mov
jne
mov
cmp
es
inc
rcr
out
stos
fidivrs
sbb
adc
sbb
ja
dec
mov
mov
cmp
jp
add
and
push
and
inc
sbb
aad
and
inc
pop
test
test
test
pop
in
cltd
jmp
pop
fdivp
stc
fwait
hlt
lds
cwtl
inc
cmpsl
jle
push
pcmpgtb
fcompl
xor
pop
imul
mov
xor
sub
adc
or
ljmp
dec
mov
test
xchg
mov
aas
shlb
sub
fisubrs
bound
cmp
repz
test
jp
mov
push
in
add
pop
cmp
mov
adc
lcall
dec
jnp
in
stos
fldcw
dec
mov
xchg
and
adc
sbb
arpl
pop
adc
jg
out
rorl
pusha
jno
add
ljmp
push
out
lea
insl
mov
orl
ret
or
pop
insb
push
je
dec
xor
and
mov
fisttpl
inc
xlat
add
fsts
lods
cmp
ret
cmpsl
test
pop
loopne
xchg
add
push
jp
dec
jecxz
xchg
dec
jle
mov
daa
sbb
or
and
test
subl
enter
push
mov
sub
je
mov
xchg
ss
mov
adc
cltd
cmp
pop
mov
aas
aaa
pusha
sub
fldenv
mov
int
jns
mov
xchg
ljmp
cltd
popf
mov
lods
scas
jno
sti
dec
dec
mov
jecxz
sbb
xor
lret
out
rcrb
scas
out
mov
dec
or
mov
or
or
sub
xchg
mov
dec
cmpsl
xor
pop
test
fists
shlb
adc
ds
stos
out
adc
mov
push
mov
push
lock
jb
dec
in
cmp
add
mov
add
xor
cmp
mov
xchg
jmp
incb
mov
dec
outsl
inc
int3
xchg
mov
ljmp
push
pop
xchg
pop
inc
jge
adc
push
push
stos
mov
cmp
mov
mov
daa
mov
mov
stos
aaa
loopne
xchg
movsl
push
cli
sbb
imul
popf
mov
inc
sti
in
jmp
out
test
xor
int3
add
out
outsb
cwtl
stc
mov
sbb
mov
loope
insl
pop
lds
or
mov
mov
mov
sbb
mov
inc
ja
push
or
es
fcmovu
and
mov
mov
push
rcr
sbb
inc
push
loop
pop
sbb
mov
imull
pop
aas
ficompl
mov
jno
into
xlat
ficompl
hlt
hlt
test
jp
outsb
or
cltd
add
iret
sahf
xchg
fidivs
sub
or
out
aad
jo
mov
jp
push
push
outsl
push
mov
movsl
out
lcall
addr16
jo
xor
xchg
or
cltd
push
adc
dec
push
loopne
adc
mov
jge
scas
mov
dec
icebp
lea
lahf
pop
andb
imul
fidivrl
mov
or
dec
dec
dec
jbe
fimuls
in
leave
aas
cltd
movsl
add
mov
in
dec
mov
jl
mov
sub
in
and
sub
jmp
idivl
in
cld
cmc
xchg
mov
sbb
xchg
xchg
push
addr16
imul
sbb
cmp
sub
aas
xlat
stos
push
adc
add
fucomi
mov
dec
pop
push
mov
sbb
xchg
ja
push
mov
out
sbb
push
inc
jge
call
push
gs
popf
mov
fimuls
fldenv
gs
jnp
xor
mov
out
or
push
mov
mov
cld
sub
gs
scas
lahf
push
jo
xorb
push
fnstcw
loop
jmp
or
jge
jo
cmpsb
hlt
push
cmpsb
in
xchg
xchg
pop
movsb
test
fldcw
dec
sti
fstl
add
jmp
stc
insl
sub
ret
and
jle
inc
fldcw
pop
lret
mov
insb
sub
add
mov
add
in
mov
sahf
mov
arpl
dec
out
in
cld
inc
js
jb
cmc
sbb
ss
in
or
mov
jae
lahf
loope
cmpl
jge
mov
sub
add
add
adc
cmp
push
jle
in
jne
aas
shl
aas
sahf
adc
xchg
adc
xchg
and
sbb
or
pop
int
into
sub
mov
dec
lret
sti
stos
enter
or
sbb
inc
test
lret
or
insb
ja
cld
stc
xchg
push
outsl
or
add
cmp
dec
addr16
adc
inc
orb
lea
cmp
dec
mov
in
add
sti
stos
add
push
mov
sub
push
movsl
mov
testl
imul
add
mov
and
jae
push
mov
and
scas
push
frstor
push
repnz
lock
jg
cmpsb
jecxz
aad
popf
adc
lock
lret
fbstp
mov
xlat
add
loop
lods
dec
insl
daa
xchg
pushl
cwtl
pop
sub
dec
xchg
mov
aaa
xor
and
push
push
es
mov
aad
add
push
shll
jno
xchg
jmp
sub
add
pusha
popa
cmc
addb
and
cmp
outsb
jecxz
sub
push
jnp
jb
mov
xchg
icebp
xorl
jp
dec
hlt
pop
ret
mov
inc
push
js
mov
insb
scas
xor
xchg
xor
cs
jmp
scas
cmp
add
dec
adc
scas
or
add
test
adc
fdivr
sbb
pop
fmuls
xor
ret
fdivs
scas
jecxz
push
jbe
cmp
inc
inc
test
out
scas
add
jns
sarb
leave
fwait
adc
adc
sub
mov
sbb
jb
icebp
push
xchg
adc
inc
mov
xchg
cltd
and
popl
mov
pusha
xor
outsb
adc
fmuls
insl
rolb
pushf
cltd
popf
mov
mov
ljmp
push
sub
addl
sbb
test
sub
lods
ucomiss
mov
jle
or
popa
or
mov
mov
jg
cmp
inc
fsubl
fsubrl
mov
mov
pop
nop
test
nop
rclb
aad
push
cmp
ljmp
cmp
jle
mov
pop
nop
cli
cwtl
enter
mov
lret
jge
rcll
mov
push
and
shrb
insl
dec
cli
cmpb
orl
xorl
xlat
jg
out
shrb
leave
adcl
test
xchg
fstpt
call
cmp
cmpsl
sub
jmp
out
dec
rcrl
subl
pop
mov
jae
and
lds
add
adc
stos
mov
nop
mov
push
cmp
mov
adc
mov
mov
insb
cmp
inc
into
dec
ret
cmpl
arpl
das
push
ret
xor
sti
cli
xor
aam
scas
lock
movsl
push
hlt
add
mov
les
xchg
mov
movsl
movsl
leave
rol
cmpsl
sub
inc
loope
subl
loop
sbb
xor
xchg
rol
andl
fscale
fidivrs
adc
dec
sbb
xchg
cmp
lock
loopne
inc
and
and
mov
sbb
into
jo
pusha
ret
pop
sub
xchg
jle
in
sub
push
pop
add
aaa
ljmp
jmp
aam
repnz
dec
std
fistps
outsl
mov
ja
rclb
push
mov
jmp
lods
push
mov
dec
lods
jno
cmp
xlat
popf
xor
mov
inc
push
ret
or
and
mov
and
mov
sbb
sbb
nopl
jbe
roll
es
fldenv
cmp
add
cmp
cmp
push
and
adc
pop
dec
dec
mov
pop
mov
fcomps
mull
cmpsb
and
arpl
push
mov
ja
xchg
dec
and
mov
dec
bound
in
and
jmp
xchg
scas
or
push
cmc
test
rclb
aaa
xchg
adc
jne
insl
in
pop
and
clc
repz
in
repnz
test
mov
inc
icebp
repnz
or
mov
out
inc
insl
notl
iret
aam
mull
sub
push
in
or
jmp
ficompl
push
xchg
lret
je
fidivs
into
daa
sub
mov
jl
xchg
jae
mov
cmc
out
cs
push
sti
inc
imul
inc
xor
or
imul
xor
inc
rcr
cmp
adc
jg
lahf
cmc
adc
popf
adc
mov
lcall
rorb
aam
lahf
xchg
shlw
push
or
loope
ret
or
fstl
inc
mov
mov
leave
xor
mov
push
jecxz
jbe
sub
sbb
xchg
jb
scas
in
cmp
xchg
les
loopne
xchg
jns
ret
sahf
xchg
add
xor
jge
jp
mov
jae
push
daa
shrl
sbb
sbb
add
cli
and
jg
mov
out
insb
lods
ds
dec
xchg
popa
movsb
xchg
lods
and
jo
scas
inc
incl
and
movsb
mov
cmp
iret
lods
fistl
or
dec
or
hlt
inc
push
pop
sahf
push
lret
repz
or
scas
or
les
fldl
pop
jb
out
in
xor
mov
out
mov
fs
jb
xchg
mov
push
inc
xor
popa
neg
xor
fidivrs
push
push
push
add
push
push
das
inc
jno
xchg
call
mov
mov
stos
add
stos
out
out
lahf
in
ss
sub
fdivrs
dec
jg
mov
inc
sub
mov
and
test
pop
mov
xor
repz
arpl
pusha
aaa
scas
out
jg
pop
inc
mov
insb
adc
adc
pop
scas
xor
int
pop
adc
test
addr16
shlb
sbb
daa
sbb
inc
stc
dec
lea
pop
insb
dec
arpl
add
mov
pushf
stos
lods
mov
ret
int3
rcr
jecxz
repz
add
sbb
sub
cmp
dec
push
pop
arpl
orl
ret
int3
rcr
jecxz
repz
add
sbb
sub
cmp
dec
push
pop
arpl
orl
mov
jecxz
repz
add
sbb
inc
dec
push
pop
arpl
orb
ret
int3
rcrl
repz
repz
xor
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
xchg
xchg
cmpsl
movsb
mov
into
or
hlt
add
adc
xor
inc
push
push
addr16
xchg
mov
xlat
pop
out
testl
inc
sub
addr16
je
push
xchg
xchg
cmpsl
or
mov
clc
xlat
call
pop
push
jnp
inc
inc
adc
repz
cli
cmpsl
rcr
loope
repz
jl
iret
pop
cmp
sub
mov
xor
imul
test
dec
or
vmovaps
movsb
pop
mov
and
and
inc
push
xchg
xor
stc
js
std
xchg
int
lcall
test
mov
test
fcoml
ja
xchg
fs
or
les
mov
idiv
lcall
inc
push
stos
lahf
mov
daa
aam
adc
dec
xor
loopne
xchg
sbb
jl
push
push
pop
add
jecxz
xor
pop
xlat
push
cwtl
jne
mov
mov
mov
sbbl
out
inc
add
jl
fistpl
mov
fs
inc
test
mov
out
divl
pop
shlb
xor
jl
push
ja
loop
hlt
xchg
loope
icebp
lcall
jae
ja
jb
push
push
jb
shrl
and
and
jecxz
mov
mov
inc
pop
inc
aaa
push
mov
xor
push
add
xchg
shl
hlt
rcl
andb
hlt
pop
add
adc
and
xor
inc
push
push
addr16
xchg
mov
xlat
aam
in
hlt
pop
add
adc
and
xor
inc
push
push
addr16
xchg
cwtl
pop
pop
and
mov
sbb
sahf
outsb
es
pop
lock
jnp
xor
outsb
int
in
rorl
jo
jg
mov
sbb
cmpsl
mov
add
sub
aaa
bound
data16
cmp
mov
mov
int
dec
and
mov
adc
test
xlat
jg
repnz
sub
aad
sub
sbb
addr16
push
js
orl
xchg
jmp
jo
adc
decb
cmp
arpl
cmp
cmc
xor
pop
cmp
fs
clc
push
test
add
test
pop
aaa
dec
mov
cmp
arpl
mov
adcb
int
lea
dec
jge
leave
mov
cld
or
rorb
loop
mov
push
xchg
loop
dec
imul
xchg
stc
push
es
sub
push
cmc
push
or
jnp
xlat
xchg
hlt
popa
dec
mov
xor
or
in
jecxz
sahf
fwait
loope
imul
push
outsl
or
out
jmp
mov
out
lahf
ffreep
stos
cld
test
sub
pop
fnstenv
bound
mov
call
mov
sub
ss
cs
or
lods
scas
adc
fadds
shrl
bound
popf
rcl
mov
shlb
loopne
sbb
mov
pop
adc
ljmp
mov
xchg
mov
jmp
popa
fsubp
mov
jo
add
jo
jge
push
jecxz
in
push
push
jne
push
mov
out
mov
mov
aad
sub
adc
cmp
jg
mov
std
adc
adc
in
lea
cs
icebp
popa
cmp
and
sbb
adc
lock
icebp
dec
jecxz
xlat
cmpsl
adc
popa
and
cmpsl
sub
cli
icebp
or
mov
addl
and
and
das
lret
pop
xchg
out
dec
idivb
jle
pop
mov
cmp
sarl
sbb
lcall
cwtl
adc
or
xchg
call
fldl
xchg
repz
test
das
rolb
into
test
call
je
add
adc
nop
test
int
pop
cmp
sahf
mov
jg
in
inc
fs
cmp
mov
sub
enter
push
jns
cltd
dec
call
dec
add
subb
sbb
push
je
mov
jge
cmpsl
test
inc
outsb
movsb
leave
arpl
mov
inc
lds
inc
jae
pop
popf
lret
sbb
ds
pop
mov
movsb
jmp
pop
lods
xor
pop
lahf
repz
inc
pop
rcr
jno
rorl
cmp
cmpsb
std
mov
int3
xchg
mov
data16
inc
push
xor
data16
or
inc
lret
subl
lds
pop
fisttps
sub
nop
cmp
mov
int3
aam
mov
sub
inc
push
aaa
fmull
and
cli
gs
xchg
comiss
outsl
lods
gs
int
flds
aad
imul
insb
rcr
cmp
inc
jmp
addb
inc
cltd
adc
stos
rolb
or
add
jmp
xchg
jg
or
notb
negb
mov
loopne
sub
aaa
stos
aad
faddl
mov
mov
sub
mov
in
scas
out
in
daa
mov
arpl
xor
dec
and
cmp
mov
mov
xor
jno
ja
aaa
enter
sbb
outsb
outsl
shrd
add
aaa
sub
jecxz
js
stos
pusha
subl
fmuls
xchg
push
outsb
cmp
fiadds
call
pop
call
mov
jbe
hlt
mov
dec
push
fucom
lock
sbb
mov
aam
in
jmp
nop
push
pop
pop
or
mov
les
xor
add
in
cmc
decl
js
cli
mov
fcomps
pop
mov
sub
les
pop
cld
mov
sbb
stos
adc
mull
add
add
dec
mov
pushf
clc
ja
add
cmpsb
callw
divl
call
or
xchg
fbld
jo
mov
mov
cmp
inc
sbb
push
pop
pop
sub
mov
popaw
cmp
sbb
mov
jbe
sbb
or
sub
pop
fdivrs
lcall
orl
add
mov
mov
sub
sbb
adc
push
mov
or
div
and
lahf
cmp
and
fisubrl
fs
out
pop
and
xchg
pushf
mov
mov
xchg
ljmp
notl
xchg
adc
fists
jl
add
fs
out
daa
stos
sub
lods
mov
fld
loop
in
leave
adc
sbb
out
mov
jnp
push
test
dec
cwtl
xchg
ljmp
add
push
stc
out
mov
pop
sbb
and
out
sbb
xchg
mov
fldl2e
hlt
dec
push
mov
jno
add
fiadds
fists
mov
push
aam
sbb
mov
push
stc
aad
mov
sub
add
mov
mov
popf
enter
sbb
mov
int3
aad
jb
lret
pop
adc
out
sbb
pop
dec
scas
dec
arpl
lds
and
cmp
mov
je
test
aas
push
test
das
lds
lcall
xor
lods
aad
loopne
mov
jo
sub
pop
lret
cltd
out
pop
cmp
push
jle
in
insb
rcr
cltd
jne
xor
push
mov
xor
inc
sbb
push
shrl
insl
xchg
cmc
pop
inc
testl
sub
stos
lret
in
int3
iret
lods
int
mov
shll
sbb
jmp
inc
pop
jmp
push
or
or
add
scas
inc
push
jecxz
je
cmp
call
add
inc
jecxz
inc
xor
inc
adcb
lret
pop
fdivs
in
and
test
popf
and
push
jp
xchg
jb
mov
xor
enter
inc
rol
xor
adc
rcrl
int
push
fwait
dec
and
jnp
xchg
sub
fwait
pop
add
repz
mov
mov
sarl
push
sbb
fldt
jmp
scas
adc
mov
data16
inc
jo
dec
insl
imul
das
leave
ror
mov
pop
cli
adc
dec
mov
ds
cmp
cmpsb
outsb
js
sub
pusha
mov
test
fstpt
mov
dec
lahf
push
je
jmp
popa
xchg
xchg
sbb
and
mov
mov
mov
fs
pushf
iret
sub
push
loopne
xchg
mov
adc
jmp
cmc
fsubr
pop
data16
sbb
push
cmpsb
mov
test
mov
fcomps
out
or
sbb
pop
mov
xor
pop
dec
push
mov
gs
push
sbb
dec
xchg
and
loopne
jo
cmp
sti
std
int
xchg
xor
jnp
cmp
mov
dec
push
addb
jmp
pushf
mov
jns
push
add
sbb
sbbb
mov
outsl
jmp
aas
aas
stc
mov
in
adc
and
sbb
dec
push
rcll
out
mov
mov
cmpsb
xchg
faddl
sub
and
mov
stos
sbb
enter
dec
ljmp
mov
push
mov
jno
add
sbb
push
enter
xor
std
inc
inc
mov
aaa
inc
ja
cltd
imul
test
and
xchg
cmp
xor
and
insl
popf
mov
lcall
jnp
and
aaa
sti
lcall
jle
jbe
xorb
pop
andl
icebp
xor
push
jnp
iret
fldcw
sbb
xchg
dec
clc
repz
pop
jge
fadds
or
lock
or
sbb
test
pop
in
dec
adcb
xchg
aas
pop
jb
jle
movsl
jl,pn
test
or
lods
cmpsl
xor
dec
aad
addl
push
scas
cltd
xor
xlat
outsb
loope
sbb
das
xchg
nop
cmp
bound
mov
fmull
sbbb
adc
xor
iret
sub
aad
cld
mov
pop
bound
and
or
mov
cs
hlt
pop
pop
cwtl
mov
mov
jb
nop
adc
xchg
adc
popf
gs
fistl
dec
popf
pop
movsb
loopne
push
jecxz
fisubl
fmull
xor
sub
fwait
insl
xchg
lcall
in
gs
in
mov
clc
arpl
in
add
dec
lret
loopne
mov
lea
sub
or
pusha
ja
mull
and
and
test
dec
js
dec
icebp
mov
cmp
cmpl
jmp
cmc
stos
stos
adc
xchg
gs
push
mov
imul
lods
loop
int
pop
fstpl
fs
or
in
cmpsb
mov
xchg
test
jae
adc
mov
or
mov
add
stos
mov
lret
inc
fs
jne
aaa
rolb
lds
sbb
cmp
mov
sub
movl
add
inc
aas
shrb
aam
stos
cwtl
fisubs
shlb
mov
nop
mov
or
nop
adc
inc
xchg
shlb
rcrl
mov
sbb
mov
sub
sti
ss
xchg
and
inc
pop
sti
mov
or
adc
add
imul
mov
out
xor
adc
inc
rclb
sbb
sahf
int
push
addr16
sbb
daa
xchg
push
mov
or
sbb
fxch
cld
sbb
fidivs
sub
imul
ror
pusha
cwtl
add
cmp
push
cmp
daa
stos
jl
lret
adc
lret
or
xchg
scas
out
ljmp
daa
xor
jno
icebp
dec
or
add
inc
leave
mov
fmulp
sub
int3
test
movb
mov
add
sbb
into
ljmp
stos
push
mov
rolb
adc
imul
mov
loope
popa
fimuls
lahf
mov
mov
les
fisubl
cmp
dec
adc
ss
dec
dec
push
je
push
mov
cmp
xchg
or
leave
mov
xlat
leave
and
adc
rolb
lock
outsb
pop
add
int
std
shll
cmp
sbb
dec
popf
inc
cmp
xor
push
sti
into
shlb
push
jbe
jl
add
cmp
xchg
cmp
sbb
inc
aas
div
repz
mov
lods
stc
mov
pop
add
mov
divl
push
mov
mov
xchg
icebp
insb
mov
and
bound
or
inc
xlat
daa
jns
mov
lds
mov
mov
mov
adc
inc
mov
mov
dec
push
jmp
push
adc
mov
sbb
int3
mov
push
adc
ffree
and
fcmovu
push
xor
cmp
ret
aad
daa
stos
loopne
cmpsb
jae
ret
call
stos
es
nop
jp
sbb
outsb
adc
xlat
sbbl
int3
hlt
int3
dec
frstor
in
sub
xchg
lods
lret
out
push
adcl
jp
sub
lea
inc
dec
pop
jp
or
jne
push
mov
dec
cltd
xlat
or
pop
divl
out
inc
ficompl
and
lock
dec
sahf
loope
ror
push
mov
insl
push
test
xor
in
xchg
push
mov
pop
mov
test
cwtl
insb
mov
adc
call
sub
dec
test
orl
popf
roll
push
jg
mov
sbb
mov
movsb
sbb
dec
popa
outsb
add
les
cmc
or
xlat
fucomip
in
mov
lret
jbe
es
sarl
popf
test
aam
pop
inc
pop
mov
pop
das
dec
sub
hlt
inc
insb
sahf
lods
into
fbstp
jb
stos
int
daa
test
mov
sub
popa
test
mov
and
js
fsubs
ds
notb
outsl
ret
mov
ja
outsl
leave
insl
testb
dec
lods
loopne
in
jmp
aaa
pusha
pusha
inc
xor
testl
scas
int
adcl
mov
cmp
gs
movsb
mov
jae
xchg
mov
fwait
push
lods
or
inc
push
in
fucomp
mov
iret
cs
test
mov
xor
jne
mov
jbe
cmpsb
shrl
repz
cmp
mov
xorl
inc
jb
or
push
jle
lret
or
push
inc
mov
insl
mov
push
xchg
ficomps
andl
mov
hlt
lods
pop
rcrl
mov
sub
xchg
out
sbb
dec
pusha
xor
cmp
cs
stos
fisubrs
mov
push
aam
into
iret
add
mov
lcall
das
lcall
or
push
jge
test
inc
out
cmp
xor
fdivs
inc
cltd
mov
sbb
aaa
lock
nop
mov
or
mov
outsb
jnp
add
stc
popf
lret
mov
sbb
fidivs
jnp
sub
or
push
sub
mov
orb
ficomps
inc
jne
and
imul
pop
mov
jbe
jnp
cmp
mov
mov
push
cli
jle
test
jb
fwait
mov
out
outsb
mov
fmull
inc
fadd
push
or
and
test
sets
in
les
enter
sbb
push
mov
xor
lret
scas
pop
outsl
jbe
jmp
sub
jp
shrb
cld
sbb
into
add
call
inc
xchg
cmpsl
xchg
pop
loopne
scas
iret
ret
mov
outsb
cmp
jb
mov
outsb
cmp
test
in
mov
jmp
or
mov
testb
and
sbb
xchg
mov
xchg
sarl
cltd
and
mov
stos
cmpsl
pusha
or
popf
outsl
in
in
enter
mov
or
or
sub
lcall
cmpsb
and
filds
mov
sbb
adcl
testb
fldenv
inc
das
dec
or
and
jb
shlb
fs
jno
jae
lret
fidivrs
cmp
pop
dec
push
and
mov
mov
jbe
sbb
repz
nop
lods
in
pop
jg
adc
mov
push
push
gs
mov
sub
cs
push
adc
add
out
pop
inc
jne
jecxz
sub
clc
jmp
push
or
test
mov
mov
ror
add
cmp
ds
inc
xor
sbb
push
jp
andb
or
mov
cli
cli
pushf
leave
jecxz
movb
das
push
sub
xor
dec
insl
data16
or
dec
add
js
mov
sub
adc
mov
push
push
enter
test
call
and
ds
cld
lcall
sub
pushf
aas
push
enter
or
fs
ja
or
pop
lds
stc
rorl
fbld
sbb
adc
lcall
gs
mov
aam
xchg
or
inc
cmp
inc
mov
push
and
mov
repz
jns
pushl
or
dec
test
mov
dec
jbe
xchg
or
out
in
mov
rclb
cmpsb
outsl
add
andl
dec
inc
xor
ss
roll
push
sbb
push
add
dec
clc
aaa
and
pop
xchg
sub
cmc
js
cwtl
sub
cld
test
and
nop
dec
mov
jmp
int
add
std
gs
jnp
mov
xchg
fsubs
out
jecxz
push
lea
popa
sub
jnp
js
push
push
dec
jne
inc
mov
sub
dec
aas
sub
pop
cmp
add
icebp
add
imulb
aas
push
xlat
incl
sbb
lret
pop
decb
adc
dec
xchg
pop
pop
cmpsl
icebp
jl
je
dec
mov
xchg
clc
mulb
add
daa
mov
insb
test
and
out
push
mov
ja
cmpsb
aad
out
int
add
and
stc
mov
les
aas
mov
out
mov
stos
xchg
into
aad
pop
dec
pop
mov
rorb
jno
cmpsb
pop
cmpsb
add
mov
sbb
mov
repnz
pushl
mov
outsb
jg
inc
mov
xchg
shl
sbb
inc
sub
adc
push
cwtl
or
jmp
scas
jmp
js
popa
cmp
in
and
xorb
cmp
xchg
leave
sub
repz
mov
ljmp
arpl
lcall
xlat
xor
ror
ss
imul
aam
pop
cs
mov
loope
cmc
imul
dec
es
out
ficoms
jbe
sbb
sbb
xchg
or
sbb
dec
jo
and
cmp
lds
aam
lods
adc
pop
or
cli
repnz
cli
cmpsb
pop
jbe
adc
sub
mov
jbe
loope
loope
call
mov
add
push
imul
inc
imul
fcoms
jb
sbb
sbb
js
mov
insl
frstor
jmp
or
insl
lcall
xchg
das
icebp
or
jg
insl
aad
sarb
push
fistpl
push
movsl
or
jmp
les
sub
xchg
jle
aad
jo
or
jno
push
outsl
incb
insb
sti
add
adc
cmp
out
adc
cmp
addr16
cmp
xor
mov
ror
jp
mov
cmp
es
repnz
mov
cwtl
sub
xor
cmc
ja
adc
outsl
xchg
xchg
xor
pushf
jno
add
xchg
cwtl
sbb
mov
push
test
sub
cltd
jno
sub
iret
dec
fcmove
cwtl
insl
out
sub
js
and
and
dec
mov
bound
nop
out
outsl
sub
xor
les
idivl
sub
inc
xorl
sbb
push
jae
push
sub
jp
rcll
xchg
push
stc
div
daa
dec
popa
sub
cwtl
mov
jg
push
mov
fmull
sub
out
js
mov
es
int3
xorl
adc
jl
fstpl
imul
lds
or
shl
push
clc
incl
cmp
sub
pop
cmp
sbb
cwtl
jnp
arpl
ja
rclb
fcmovnb
push
mov
js
push
push
jb
out
xchg
repz
mov
pop
xchg
int
out
or
fisttpl
mov
in
pop
xor
and
jle
jae
lods
cmp
pop
outsl
dec
sub
icebp
hlt
jl
gs
aam
sbb
das
fs
add
mov
mov
pop
test
in
push
mov
mov
mov
xchg
in
jnp
fwait
rclb
loopne
icebp
aad
in
mov
cmp
bound
loop
adc
inc
lock
xor
mov
adc
jae
out
repnz
dec
imul
mov
sub
push
mov
jb
jne
jl
roll
cli
cli
inc
push
cmpsb
subl
ds
leave
das
test
or
jp
dec
jecxz
push
xchg
add
cmp
fmull
je
dec
popa
jno
mull
addr16
int3
movsb
mov
inc
js
notl
ljmp
stos
dec
dec
sub
push
mov
mov
pop
movl
cmpl
andl
aad
jl
repz
pop
sub
scas
jecxz
push
xor
dec
int
push
lock
je
pop
mov
pop
clc
mov
imul
push
adc
daa
mov
cmp
jno
fisubs
pop
adcb
cwtl
cmp
adc
adc
mov
ret
cmc
dec
sahf
cmc
hlt
int
clc
or
jne
loope
push
repnz
and
test
push
inc
nop
xorb
pop
test
cmc
lods
dec
jb
movsb
xchg
pop
mov
cmpsb
dec
es
xor
mov
push
ss
sbb
int3
dec
pop
jb
adc
out
sub
jmp
pop
dec
push
aam
jg
dec
lret
lcall
loop
push
out
and
sub
cltd
xor
cwtl
enter
xlat
aam
in
hlt
pop
add
adc
and
xor
inc
push
push
addr16
xchg
mov
xlat
aam
in
hlt
pop
add
adc
and
xor
inc
push
push
addr16
xchg
mov
jl
in
hlt
push
fcoml
adc
and
xor
inc
push
push
inc
ja
xchg
mov
xlat
aam
fs
clc
sti
call
inc
xor
fildll
in
add
adc
sets
mov
mov
xchg
add
jno
inc
jecxz
repz
and
push
shll
jno
xor
popa
scas
adc
repz
xor
pop
and
icebp
inc
mov
jae
sbbl
shll
inc
xchg
sub
and
xchg
pop
lds
xor
mov
clc
adc
out
push
lret
mov
push
out
mov
inc
push
ljmp
insb
mov
xlat
in
loopne
shl
mov
orl
shll
aad
push
cli
out
jecxz
cld
shll
inc
leave
aaa
cld
or
fs
push
push
rorb
lea
bound
out
push
in
ret
jae
push
jmp
dec
inc
jle
push
mov
test
cltd
push
loope
popa
pop
adc
adc
and
and
mov
jle
xor
insb
inc
or
fsts
adc
add
inc
out
add
xor
inc
mov
shll
roll
btr
ret
outsl
roll
xor
push
lds
pushl
test
shlb
jo
push
jo
or
push
mov
movb
mov
nop
pop
lods
or
ljmp
adc
xor
adc
push
rclb
insl
icebp
push
shll
and
adc
inc
jecxz
repz
and
push
shll
and
adc
inc
jecxz
repz
into
into
icebp
lods
aaa
sahf
mov
bound
or
jecxz
cmc
sbb
loop
push
jmp
mov
dec
mov
in
fstl
sbb
test
aaa
or
sub
xchg
and
mov
cmp
cltd
aad
aad
jae
cmp
xor
cltd
je
jae
jne
pop
gs
ret
inc
loope
cmp
push
popa
shufps
add
movsb
mov
stc
mov
das
dec
and
js
xor
pop
pop
jmp
mov
xor
push
in
sahf
js
add
push
push
cmp
xor
rcll
movsb
mov
cmp
into
sbb
jb
inc
jae
test
fidivrs
dec
push
pop
ret
push
xchg
cmpsl
cmp
test
add
insb
cmp
lods
sahf
bnd
push
mov
cmp
jl
mov
sub
test
dec
stc
popa
mov
add
inc
cmp
iret
mov
xchg
test
ss
or
cld
add
pop
repnz
in
pop
pop
adc
rolb
mov
into
ret
sbb
cmpsb
iret
cli
mov
fsubrs
jge
push
cmp
test
cli
mov
or
shrl
sub
outsb
adc
xor
cmp
mov
xor
fwait
mov
lahf
or
rcll
push
ds
std
cmp
stc
imul
sub
clc
xor
pop
xchg
jns
jge
sub
sbb
js
cmp
bound
adc
push
lahf
jbe
inc
rcr
mov
push
adc
mov
shl
outsl
and
mov
rol
cli
cmp
or
adc
cmp
shll
jl
mov
fdivl
jge
scas
pushf
ficomps
sti
aad
cltd
jne,pt
push
mov
sti
fcmovnb
push
cmp
insl
xlat
fs
pop
cmpb
dec
sub
add
in
fprem1
pop
test
dec
adc
cmpsb
lret
mov
lds
and
sbb
sti
mov
add
mov
imul
outsl
mov
mov
sbb
jmp
push
and
add
es
xor
mov
and
sbb
imul
loopne
jo
push
push
nop
dec
call
xchg
clc
pop
cmp
push
xor
mov
aaa
xchg
fcomps
cwtl
test
les
movsb
out
ret
jb
jp
subb
or
ret
mov
add
cmp
imul
sbb
jl
sub
and
imul
sar
mov
in
clc
mov
cwtl
dec
ja
mov
je
stos
icebp
pop
cmpsl
dec
repz
cmc
mov
rcrl
shll
mov
push
ljmp
pop
daa
push
xlat
dec
rcll
cmp
sbb
push
xor
inc
idivb
jno
add
xchg
fbld
dec
sub
bnd
ljmp
repnz
or
lahf
fimull
mov
push
mov
xlat
or
mov
imul
mov
mov
lock
mov
in
xchg
daa
insb
adc
movsl
test
pop
xor
stos
mov
mov
push
jg
out
pushl
inc
xor
mov
cmp
cmp
adc
lcall
xchg
shlb
mov
loop
cmp
stos
mov
xchg
push
cmp
clc
mov
incl
dec
stos
into
pop
lds
popf
jge
jno
xor
movsb
lcall
mov
or
aas
aas
push
ljmp
repnz
pop
sbb
push
sbbl
mov
push
iret
out
shrb
cmp
adc
cld
jg
sbb
jecxz
dec
loop
aaa
fisttps
jbe
push
cmp
dec
dec
inc
push
mov
jnp
add
inc
add
and
or
jge
mov
xchg
push
xchg
cld
xchg
in
or
sub
int3
fadds
hlt
cmp
aam
nop
clc
add
mov
sub
jns
or
inc
imul
std
xor
xor
sub
mov
cmp
arpl
push
push
sbb
dec
pop
mov
xchg
or
and
or
aas
imul
xor
shll
add
mov
or
mulb
scas
std
mov
in
scas
cmp
inc
mov
dec
in
ret
jno
xchg
push
and
mov
sub
sub
dec
mov
into
out
ljmp
ret
out
sbb
push
fstpl
add
add
pusha
out
pop
fistpl
into
mov
je
out
mov
test
lods
push
xor
insl
jmp
pusha
pop
out
int
bswap
imul
pop
cmp
rcrl
outsb
pop
pusha
xchg
and
adc
out
xchg
lret
pop
ret
subl
mov
idiv
loope
rol
js
push
jl
cmpsb
and
in
jne
js
leave
rcl
jmp
jmp
aaa
mov
push
shll
mov
mov
in
pop
mov
xor
aaa
andl
arpl
xlat
or
daa
stos
popa
stos
cmp
add
lss
push
in
nop
insb
notb
mov
int3
lea
enter
mov
push
ds
cmpsb
jmp
dec
fstps
cs
and
jp
in
add
cltd
int3
fbld
mov
mov
dec
cmpsl
mov
sbb
mov
push
dec
inc
add
add
imul
xchg
pop
jae
test
ss
loope
jb
outsb
jno
stos
insb
loope
out
out
loope
dec
dec
insl
sub
mov
cmp
fcmovb
sub
outsl
adc
loopne
dec
jge
frstor
mov
js
fs
out
lods
adc
sbb
sbb
outsb
std
lods
inc
xor
jle
dec
mov
adc
lret
or
dec
xor
data16
imul
xlat
lea
mov
inc
push
pushf
mov
ret
lcall
loope
ljmp
aaa
mov
xchg
xchg
into
mov
loopne
pop
in
fadds
into
enter
sub
insb
pushf
imull
shrl
fstp
int
or
sub
push
cmp
adc
cmp
push
and
pop
stos
and
lret
repz
popl
cmc
inc
pop
ret
or
lds
sbb
faddl
cmp
gs
jae
movsl
scas
leave
hlt
jno
jae
and
mov
xor
jl
pop
ss
iret
mov
and
dec
pop
aad
mov
test
xor
mov
test
daa
push
jp
jns
out
pop
mov
or
jle
pop
das
rcll
fmuls
rclb
call
pop
fnstenv
mov
das
faddl
fidivl
sub
es
xchg
xor
arpl
inc
and
inc
das
and
popf
mov
push
xchg
scas
scas
adc
pop
mov
movl
or
lods
push
push
xchg
or
jg
je
adc
adc
adc
enter
push
cmp
stc
popa
test
ljmp
xchg
pusha
jmp
sub
add
shl
lret
inc
dec
sub
jmp
add
frstor
gs
cmpb
mov
and
jne
sbb
mov
push
xchg
push
adc
pop
push
push
mov
jg
add
data16
push
fldenv
shll
cmovl
jbe
ffreep
ljmp
xchg
mov
pop
jl
dec
push
or
and
dec
insb
into
lret
jns
leave
pop
mov
mov
pop
je
lahf
push
and
jae
jle
xchg
ds
rep
pushf
rcrl
push
mov
and
mov
leave
test
push
ja
repnz
in
xchg
enter
in
mov
aad
hlt
or
rorl
andb
cli
xchg
jmp
pop
fistpll
push
in
fcoms
inc
jle
in
jecxz
bound
or
lods
pop
mov
mov
adc
jno
inc
mov
bound
ss
push
adc
leave
fistps
jecxz
mov
outsb
inc
adc
inc
sub
and
je
lods
out
bound
dec
pop
inc
into
cmp
xor
push
mov
mov
push
mov
test
sbb
lods
or
lret
sahf
icebp
aaa
push
inc
jp
mov
pop
mov
andl
xchg
lock
jle
scas
cmp
push
sub
mov
xchg
loopne
mov
movsl
dec
and
jnp
pop
jne
pop
mov
adc
push
sbb
lret
inc
loope
fcmovne
lds
rcrl
lods
loope
in
dec
scas
or
adc
fs
and
push
pop
sbb
insb
mov
idivl
cmpsb
xor
or
mov
mov
imul
cmp
gs
xchg
and
add
jmp
fsubl
je
inc
adc
mov
add
jecxz
icebp
cmp
aas
xchg
lcall
xchg
mov
add
out
inc
xor
ret
movsl
add
mov
xchg
nop
imul
push
fsubr
xchg
data16
sub
and
cwtl
or
lret
inc
pop
icebp
lds
adc
sub
cmpsb
es
jo
inc
out
cmp
lcall
xchg
cmpsl
xor
xchg
cmpb
sbb
icebp
xor
cwtl
push
je
rorl
inc
cld
mov
cmpl
rdmsr
dec
loope
sub
enter
ret
xchg
mov
lods
pop
sti
mov
push
negb
insl
cltd
adc
in
cwtl
mov
clc
inc
jns
adcl
mov
sbb
loope
test
sbb
and
adc
cmp
test
inc
aas
mov
ss
xor
mov
andl
sbb
jle
push
icebp
out
cmp
mov
cwtl
gs
movsl
mov
xchg
mov
or
inc
add
cmp
es
mov
lods
enter
pop
ljmp
pop
in
pop
out
lahf
dec
iret
cmpb
lret
out
fsubs
hlt
or
test
mov
scas
dec
cwtl
sub
cltd
popa
jle
fisubs
loop
fldenv
sub
jle
adc
mov
ds
xor
sbb
add
rcrb
pop
les
ss
mov
cltd
mov
inc
sub
cmc
scas
shrl
and
out
mov
loop
imul
xchg
push
inc
inc
out
lods
push
cmpsb
movsl
mov
mov
sbb
les
vcvtdq2pd
fucomi
jmp
loop
roll
inc
push
sub
dec
hlt
nop
lahf
adc
rolb
clc
ret
inc
xor
xor
insb
adc
icebp
sbb
fisubrs
jbe
fwait
xchg
push
dec
test
aad
mov
xchg
rol
or
cld
inc
popa
stos
into
iret
std
jecxz
fdivr
leave
or
clc
push
push
pop
push
sbb
sarb
arpl
add
jecxz
mov
sbb
jne
pop
test
jp
rorl
xchg
sbbb
xor
decb
and
mov
jmp
and
or
or
out
mov
xchg
or
clc
add
das
push
and
cmp
dec
aaa
testb
xor
push
fstpt
iret
popf
xor
daa
dec
movl
xchg
sbb
add
js
push
jns
xor
xor
aam
repnz
xchg
enter
rcrb
imul
lea
pop
xor
lea
int
cmp
inc
mov
cmp
mov
aam
xchg
popa
push
mov
cwtl
pop
dec
dec
movsb
cwtl
cwtl
pop
dec
jno
rcr
jo
mov
nop
lods
cltd
in
ret
in
dec
jne
push
icebp
imul
loopne
in
js
dec
sti
je
sti
mov
cmpsb
in
icebp
inc
mov
or
js
and
loope
xor
fists
loope
mov
dec
in
test
scas
push
xlat
je
cmp
test
pop
or
sub
shl
imul
mov
leave
out
movsl
pop
je
xor
xor
sub
pop
mov
out
inc
pop
subb
mov
mov
fmuls
pusha
shrl
jne
scas
loopne
icebp
add
cmp
adc
jge
std
test
jbe
inc
das
add
lret
add
sti
mov
sti
hlt
call
jmp
ret
pop
push
mov
out
sbb
add
addl
shlb
mov
xchg
mov
inc
dec
fnstsw
cli
loopne
add
adc
addl
push
popl
push
jmp
sub
xor
lcall
movsb
inc
gs
adc
testl
add
xor
sahf
mov
js
stc
push
fldcw
sub
xor
mov
ret
test
mov
cmp
scas
ret
pop
rcrb
jmp
jge
in
xor
sti
push
jns
or
push
inc
cmp
aas
xchg
sub
jns
xlat
icebp
imul
adc
mov
fisttps
sub
push
xchg
loope
or
jge
fidivs
scas
mov
fwait
sbbl
test
fdivl
push
push
add
cmp
pop
lcall
pop
sub
dec
loopne
cmc
pop
das
aam
push
sub
mov
mov
dec
or
or
in
out
xor
test
cs
adc
std
push
cld
adc
lcall
mov
ds
aas
or
mov
out
mov
popa
mov
push
xchg
loop
loope
push
popf
push
jge
lock
and
js
rclb
test
mov
add
jno
das
sbb
mov
incb
in
xchg
or
push
mov
jecxz
adc
int
xlat
gs
xchg
or
add
sbb
push
icebp
andb
push
loope
inc
mov
jnp
jp
fstpl
jp
sub
jmp
mov
ja
push
jns
std
push
clc
jg
pop
cmpsb
inc
je
push
sub
xor
sub
mov
pop
repnz
and
daa
data16
cmc
in
ficompl
dec
jne
addr16
arpl
sbb
add
pusha
rcll
dec
dec
mov
jnp
adc
ljmp
pop
and
mov
add
inc
test
mov
fsubr
add
push
addl
xchg
stos
push
repnz
imul
jne
mov
sbb
adc
mov
mov
push
inc
outsb
inc
mov
pop
retw
cmp
add
addr16
or
push
in
jb
in
pop
mov
and
mov
push
aaa
xchg
dec
mov
repz
idivb
add
inc
or
inc
mov
in
stc
push
je
out
les
sub
outsl
cld
jg
ret
lock
into
add
inc
nop
push
adc
cwtl
xor
lods
sub
hlt
mov
adc
fidivs
pop
sub
inc
jmp
jae
test
pop
inc
xor
xchg
mov
adc
rolb
adc
es
cmp
sub
outsb
inc
mov
cmpsl
jmp
addb
mov
inc
jmp
imulb
shrl
and
enter
ja
xchg
inc
push
sbb
pop
push
adc
ds
add
daa
mov
arpl
or
mov
out
call
insb
adc
aas
mov
sub
dec
push
mov
cwtl
mov
daa
xor
xchg
dec
into
sbb
jnp
mov
mov
cmp
jno
faddl
int
mov
int
aam
adc
mov
shrb
fdivl
in
jmp
xorl
dec
repnz
aaa
sbb
leave
mov
fidivl
pop
lods
cmc
jns
jo
cmc
sahf
mov
lret
divl
ret
fxch
flds
pop
scas
pop
cmp
cld
pop
data16
adc
mov
inc
insl
daa
sub
mov
pop
cmp
sbb
xchg
clc
testl
dec
jns
dec
cmp
sbb
shll
xchg
jne
jb
mov
push
mov
cmp
push
mov
lods
mov
sbb
das
inc
jl
movsb
sahf
add
cwtl
loope
xchg
mov
jecxz
leave
enter
pop
lock
outsl
aaa
ja
in
jb
sbb
mov
test
arpl
mov
shlb
inc
cmp
mov
jae
sbb
push
lods
pusha
rolb
call
aas
jbe
sbb
pop
adc
dec
mov
test
mov
enter
out
push
jbe
jl
lahf
push
imul
setno
push
pop
jg
jmp
enter
ret
push
out
mov
stos
stc
xchg
iret
cmp
jne
sub
mov
push
rolb
dec
sar
inc
mov
inc
add
inc
nop
dec
popf
inc
and
fbstp
aas
divl
loopne
rclb
mov
and
repnz
sub
jle
cwtl
in
jle
pop
or
and
inc
mulb
and
inc
lods
ret
mov
xchg
mov
fs
cmp
pop
pop
xchg
int
mov
sahf
in
push
push
or
push
fmull
fcoml
add
fs
push
pop
divl
movsb
test
orl
jbe
jns
cmp
daa
mov
xor
fucomi
imul
jb
or
popl
es
es
cmpsb
or
test
es
mov
mov
or
xchg
fwait
pop
imul
es
test
jne
lret
mov
jp
mov
in
cwtl
mov
push
cmp
cmp
pushf
mov
call
nop
push
daa
aaa
xorb
loope
sti
xchg
mov
mov
gs
or
call
jbe
jo
fucomip
fisubrl
loope
dec
pop
xchg
adc
pop
cmp
test
in
aas
xor
xor
adc
aam
pop
push
repz
add
and
cmp
xor
and
insb
inc
int3
xchg
test
repnz
lock
cmpsl
cmpsb
jmp
je
add
adc
adc
bound
pop
lret
mov
test
call
mov
scas
scas
mov
xchg
sub
lds
push
push
pop
push
mov
jno
add
xchg
cltd
xchg
dec
inc
mov
jmp
clc
cs
daa
push
or
cmp
fistps
test
test
xchg
ret
cwtl
test
outsl
cli
jle
pop
dec
aam
xor
mov
lds
add
sub
xor
and
sub
negb
icebp
aad
xor
mov
sti
insb
dec
mov
dec
pop
arpl
imulb
jl
fsubrp
mov
push
push
lods
mov
mov
or
fildl
sub
pop
ljmp
and
testl
dec
sahf
lods
inc
inc
ret
std
and
cltd
sbb
mov
out
mov
loop
in
stc
inc
xchg
pop
jb
les
andb
scas
push
js
cmp
sti
xlat
fxtract
mov
xor
add
cmp
jge
cmp
push
and
scas
nop
push
fwait
test
sahf
push
repz
pop
gs
fidivs
push
cmp
ret
data16
test
cmp
lea
pop
xchg
mov
jle
ss
mov
dec
ljmp
mov
push
mov
sub
lea
cli
dec
ss
sbb
lcall
movsl
jns
lea
in
push
cmpsb
fsin
sahf
test
negl
icebp
sbb
cld
jecxz
pop
movsb
dec
xor
xchg
mov
int
es
clc
pop
mov
lret
add
or
sbb
cmp
fimuls
mov
inc
movsb
fs
fistl
xlat
mov
cmp
rcrb
ljmp
mov
mov
xor
out
pusha
mov
test
add
cmpsl
sarb
cmp
ret
std
pop
dec
inc
jno
orb
nop
adc
sub
je
jp
lock
bound
dec
adc
ret
xchg
adc
adc
aad
push
sub
ficoms
inc
jl
cmpsl
pop
mov
xchg
mov
inc
cs
inc
lret
pop
sbb
xor
pop
test
test
fcmovne
cmpsl
insl
mov
and
and
es
cmpsl
add
sbb
call
in
mov
adc
and
push
shll
and
adc
inc
jecxz
repz
and
push
shll
and
adc
inc
jecxz
repz
and
push
shll
and
mov
push
repz
and
push
shll
and
adc
push
dec
stc
sub
sbb
or
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
mov
lcall
mov
push
add
add
add
add
add
js
push
add
sub
or
pop
add
add
add
lea
add
mov
xor
sbb
pop
add
add
add
mov
add
adc
jle
test
and
or
mov
sub
loope
sbb
js
mov
fldl
aam
jno
insb
add
and
adc
sbb
add
inc
add
add
add
test
inc
add
add
mov
add
add
add
add
xchg
add
add
fiaddl
or
push
add
add
add
add
mov
add
add
add
and
push
add
add
aad
lret
add
pop
add
inc
add
or
add
rolb
push
add
add
adc
adc
mov
adc
jle
push
add
add
add
add
add
add
roll
add
lret
add
xchg
add
add
add
add
add
add
add
xor
fldl
dec
add
inc
add
add
add
add
mov
cmpsb
add
add
add
add
roll
sub
add
add
and
add
mov
add
add
add
add
add
adc
add
adc
filds
dec
add
js
pop
add
add
int
cmp
arpl
dec
add
test
and
add
add
adc
mov
add
add
add
add
mov
add
cmp
push
add
fldl
adc
or
add
push
add
add
add
add
add
add
push
add
test
add
add
add
add
add
add
sbb
jno
test
add
add
add
push
add
cmp
jnp
push
stc
add
add
iret
add
add
mov
das
add
push
add
mov
add
add
add
mov
mov
pop
add
push
add
mov
add
int
pop
add
add
add
cmpsb
add
add
add
jne
roll
push
add
mov
or
inc
add
pop
add
add
add
sub
push
add
add
and
pop
add
add
sbb
add
add
add
add
add
add
add
add
add
push
add
or
dec
add
or
or
ret
add
fadds
and
dec
add
add
add
add
add
dec
add
add
add
add
movsl
add
add
add
add
pop
add
adc
dec
add
add
add
nop
add
add
add
add
aad
xor
adc
add
ltr
add
mov
add
cmp
icebp
add
js
and
pop
add
mov
sbb
sub
lods
add
add
add
add
pop
add
add
mov
sub
add
add
add
adc
add
lds
inc
add
das
add
add
jae
pop
sub
or
cwtl
and
mov
int3
popa
mov
mov
sub
ret
push
les
push
lret
cmp
mov
lock
popa
push
xchg
fsub
pusha
mov
dec
jp
lcall
or
icebp
data16
int3
cmpl
aam
test
ficomps
mov
xor
scas
and
dec
sbb
mov
sbb
mov
test
mov
mov
add
mov
dec
jo
aam
mov
xor
push
shll
sbb
out
imul
or
test
sub
jge
call
dec
lods
ret
clc
cmp
shll
lret
cmp
or
aad
dec
mov
iret
push
mov
repnz
and
fldl
sub
cld
push
xchg
ja
stos
xor
and
sub
clc
xchg
xchg
and
inc
add
xor
sub
mov
pop
leave
mov
lret
pop
loop
popa
lcall
xor
mov
in
roll
scas
mov
pop
fsubrs
daa
fisubs
push
test
inc
scas
cmp
dec
aam
push
enter
dec
sub
mov
adc
test
jecxz
xor
fcmovbe
clc
adc
mov
jmp
ja
pop
xlat
ds
cmp
mov
xchg
out
mov
mov
push
xchg
ss
lahf
rcr
inc
or
inc
in
inc
fstpt
rorb
pop
data16
push
cld
xchg
push
xor
push
outsl
je
popa
aas
pop
in
mov
xchg
and
xor
movsb
out
mov
insl
push
xor
lea
mov
cmp
and
sar
in
rcll
mov
push
push
push
mov
out
ss
hlt
jo
mov
ret
inc
ljmp
jnp
dec
jae
shrl
sbb
mov
push
lret
pop
movsb
add
roll
push
jb
aas
cmpsl
mov
fwait
mov
mov
jmp
int3
inc
in
test
add
in
and
fistl
or
pushf
fsubl
xor
mov
subl
fdivl
jmp
jl
sbb
pushf
sbb
in
ljmp
or
sbb
hlt
adc
jbe
mov
jo
xchg
mov
rcrb
out
jb
aad
or
js
push
test
insb
shl
iret
sub
jg
gs
rcrb
pop
sbb
push
inc
je
jecxz
push
dec
dec
shll
push
xor
sub
inc
or
xor
cmp
xorl
jns
inc
popa
jg
sbb
ret
scas
mov
cmp
in
insl
add
sub
add
pop
push
psrad
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
