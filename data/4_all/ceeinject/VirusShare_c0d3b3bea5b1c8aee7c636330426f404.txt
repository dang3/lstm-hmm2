call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
loop
repnz
ret
mov
out
mov
cwtl
shlb
jae
inc
push
push
and
mov
loop
repnz
ret
mov
mov
and
fsubs
jb
inc
cs
ss
xor
data16
and
push
ret
shlb
xchg
les
push
xor
and
jl
mov
cmc
mov
das
mov
aaa
add
xchg
frstor
ja
push
cltd
push
cmp
sahf
shrb
pop
jl
outsl
or
fldcw
or
lahf
cmp
jmp
das
or
int3
lods
bound
es
inc
daa
xchg
enter
stos
addr16
mov
xchg
xchg
test
shlb
pop
es
jnp
xor
mov
push
jb
sbbl
sub
xlat
add
xlat
or
das
jno
int
push
xor
or
pushaw
mov
setbe
inc
mov
cs
sbb
or
mov
rcl
mov
mov
and
bound
jb
inc
and
or
jp
mov
mov
lret
mov
xchg
nop
mov
inc
pop
inc
subl
and
xor
popa
adc
rclb
mov
pop
lds
and
je
push
and
pop
push
outsb
add
xchg
bnd
lret
out
mov
mulb
jb
inc
es
and
push
add
jbe
xchg
xchg
ret
mov
mov
and
mulb
jb
inc
es
and
push
add
jbe
xchg
rcrb
pop
pop
mov
gs
adc
mov
mov
sarb
sbb
adc
inc
loope
dec
shrl
sbb
and
inc
shl
rcl
repnz
dec
ffreep
fildl
add
lock
mov
mov
les
es
shl
jecxz
adc
mov
pop
xor
aam
cmpsb
jno
xor
daa
cmp
cmp
cmp
cltd
insl
daa
pop
lret
add
ret
jae
std
es
loopne
pusha
xor
add
inc
dec
xchg
pop
jge
popf
dec
jnp
pop
ljmp
icebp
and
cs
cmp
cmp
push
leave
stc
movsb
loop
xchg
or
and
jmp
stc
rol
sub
lea
fistpll
lret
jle
fucomp
dec
sbb
sbb
je
jle
add
lret
dec
adc
clc
sarl
sbb
outsb
mov
cmp
inc
dec
dec
xchg
xchg
bound
fistps
and
std
jnp
or
add
add
imul
xchg
es
xor
xor
hlt
xchg
and
shl
mov
stos
sub
outsl
jno
loopne
test
cld
jae
jp
mov
mov
cmp
inc
aas
push
and
andb
int3
or
mov
jecxz
fisubrs
sbb
adc
inc
sub
adc
or
imul
sub
or
ss
loop
pop
jne
daa
jmp
jo
cmp
rclb
push
insl
lret
inc
fs
dec
jne
imul
dec
mov
adc
insl
cmp
inc
ljmp
inc
push
add
sbb
popa
aam
test
jo
lcall
adc
cld
mov
xlat
mov
lret
rorl
int3
xchg
bound
out
insb
gs
adc
jnp
inc
xor
xchg
mov
rcll
shl
and
sahf
dec
mov
test
popf
jl
fsubrl
fwait
lret
jge
inc
lods
inc
out
or
subb
out
dec
popf
rolb
hlt
fdivs
out
add
push
nop
sbbl
sub
andb
sub
push
mov
leave
mov
js
stos
pop
in
xor
fwait
adc
icebp
js
push
les
sarl
das
xchg
push
or
pop
test
xlat
mov
or
dec
sub
aas
fiadds
push
aas
sub
into
stos
cmove
add
es
xor
mov
dec
lea
jbe
stos
jecxz
mov
xchg
iret
subb
stos
cmp
mov
mov
pop
xor
into
js
add
sub
push
clc
scas
cld
insb
cmp
js
test
push
shrl
into
rcrl
fwait
xchg
push
mov
or
pop
movsb
mov
jnp
in
push
pop
push
int
push
mov
xlat
stos
dec
cmp
xor
mov
out
shrb
and
ss
xor
mov
ds
aaa
daa
mov
cmp
mov
js
mov
inc
mov
xchg
push
aas
and
xchg
xor
adc
push
fbld
in
xchg
mov
cmp
sbb
sub
mov
mov
push
sbb
addr16
sub
aas
fnstcw
mov
aad
xchg
mov
lds
add
hlt
movsl
cmp
pop
push
jle
dec
inc
push
and
xor
jmp
insb
sub
adc
pop
shlb
push
or
and
add
jno
outsb
cmp
mov
push
push
in
popf
add
in
pop
push
add
xchg
xchg
lcall
sub
fwait
mov
or
std
or
jo
cmp
fistps
js
adc
outsl
pop
ret
xor
jecxz
out
stos
and
jbe
neg
scas
movsl
mov
fucomp
xchg
fiadds
xchg
or
pop
shrl
or
loop
or
pop
push
or
insl
repnz
or
fcoml
mov
lock
in
sti
loop
testb
popf
jg
xor
mov
insb
in
add
xor
lds
inc
inc
mov
cld
sti
mov
mov
push
inc
test
lahf
mov
dec
insb
dec
jno,pn
sbbb
add
sub
push
fs
sbb
popf
sbb
outsb
sbb
and
mov
mov
pop
add
xlat
jmp
mov
out
rcll
inc
mov
es
stos
lahf
inc
and
mov
fidivrl
or
loopne
dec
clc
testl
sbb
rolb
cmpl
cmpsb
add
mov
jmp
xchg
pop
out
xchg
pop
mov
cmp
das
adc
pop
push
add
es
and
sar
sub
mov
or
out
pop
or
lsl
add
popa
xlat
repnz
cmp
inc
fcmovne
jg
in
insl
lods
pusha
pop
dec
call
fwait
scas
inc
cs
adc
lret
stos
cmp
adc
out
andb
pop
xchg
and
pushf
mov
leave
mov
cmp
and
movsb
add
mov
inc
jae
loope
mov
sahf
adc
ljmp
mov
cld
jge
or
stc
add
mov
sti
inc
and
je
les
mov
mov
test
outsb
repnz
mov
adcl
ret
popa
inc
jecxz
xlat
movsl
push
imul
fnstcw
pop
addr16
lock
pop
sbb
lahf
jmp
xor
xor
pushf
xchg
loopne
cmc
lods
jo
sbb
pushf
or
pop
out
adc
cmp
dec
and
dec
adc
dec
cwtl
and
jmp
add
imulb
or
cld
mov
movsb
stc
test
push
mulb
pushf
dec
mov
cmpsb
fnstenv
ficomps
popf
adc
les
xor
shl
aaa
or
gs
jge
in
adc
subl
inc
or
inc
cmpsl
pop
sub
int
mov
testb
mov
lds
orb
xor
push
cli
cwtl
test
dec
add
push
divb
mov
cli
mov
jg
adc
ja
call
pop
fadd
pop
mov
sbb
cmp
cmp
cld
das
call
xor
fs
pusha
dec
or
xchg
fwait
dec
aam
mov
movsb
push
mov
xchg
xchg
xlat
mov
cld
mov
inc
pop
and
fcomip
xchg
or
in
in
in
jbe
popa
ud0
jg
mov
pop
and
inc
sbb
cmp
pop
cwtl
mov
adc
mov
pop
stc
pop
push
dec
dec
loop
ljmp
add
xor
mov
xchg
outsl
push
jmp
fists
or
cld
lcall
gs
sub
inc
and
pop
enter
jae
push
idivl
adc
lret
aad
mov
mov
cwtl
repz
push
jp
lock
xor
int
xorps
ljmp
push
push
jle
jb
imul
icebp
fsubs
fistpll
and
fcoms
mov
mov
ret
adc
js
adc
mov
adc
pop
xor
inc
xor
int
scas
cmp
xor
push
dec
push
sbb
and
ljmp
fstl
mov
in
sub
movsb
cltd
lret
dec
aaa
and
cltd
mov
jecxz,pt
push
sub
pushf
aaa
js
inc
mov
stc
loope
cmpleps
sahf
adc
scas
xor
pop
xor
push
jae
push
mov
push
mov
lret
imul
into
repz
jb
mov
ljmp
mov
mov
and
push
mov
addb
mulb
pop
test
dec
sahf
lds
jo
rorb
cmp
jmp
mov
cmp
xchg
fisttpl
push
jmp
pop
enter
mov
cmp
roll
lcall
jo
imul
inc
xor
lcall
fcomip
imull
pop
sbb
stos
stos
mov
bound
scas
sbb
insb
repnz
mov
push
inc
pushf
xchg
clc
push
scas
pop
xor
dec
incl
jle
or
jecxz
sarb
dec
pop
push
jo
cmp
mov
xor
jmp
pop
scas
sahf
fsubr
push
in
aad
sbb
pop
enter
cmp
int
test
std
out
inc
lret
fcmove
push
push
ljmp
pushl
repz
mov
testl
lods
cmc
incl
mov
arpl
mov
or
cltd
rcrl
mov
xchg
add
pop
push
mov
adc
mov
ret
sbb
bound
subb
xchg
icebp
in
pop
test
pop
cmp
xchg
fcmovb
add
cmc
mov
decl
mov
or
stos
inc
jmp
push
shll
mov
lea
xchg
mov
fsubrl
pop
es
xchg
push
add
std
jl
fwait
imul
jmp
lds
and
or
inc
dec
mov
jno
jmp
and
xchg
add
lahf
clc
add
jnp
stos
ja
bound
shrb
popa
jg
jae
mov
fnstcw
xlat
std
xchg
sbb
mov
jae
mov
xor
mov
xchg
nop
jo
mov
aaa
mov
subb
mov
xchg
std
insl
pop
inc
sbb
mov
ljmp
mov
sbb
ret
sbb
xor
push
out
dec
int3
shll
or
mov
push
outsb
push
sahf
inc
push
popa
or
mov
ffree
sbb
ss
xor
imul
aaa
bound
xor
mov
inc
testb
push
outsb
flds
scas
dec
mov
repz
mov
call
imul
scas
sbb
mov
cmc
mov
ljmp
cmp
outsl
test
cwtl
jg
cli
xor
mov
jae
xchg
dec
mov
mov
push
jo
out
cmp
inc
mov
out
cwtl
ds
pop
test
sbb
mov
pop
je
inc
push
push
shll
add
test
lods
mov
shlb
fs
movsl
pop
inc
inc
iret
ss
daa
leave
and
and
sub
jl
mov
xchg
jae
adc
push
fidivl
dec
mov
and
sarb
leave
push
lock
xchg
or
popf
gs
sbb
xchg
clc
dec
iret
inc
push
dec
jo
adc
pushf
and
scas
into
mov
mov
mov
pop
or
push
pop
mov
notl
outsb
aad
xchg
pop
lds
inc
dec
lock
stos
enter
xlat
test
loop
jne
popf
test
lods
inc
hlt
cmp
ds
fsts
mov
xchg
movsl
push
inc
or
loopne
daa
adc
dec
mov
ja
mov
or
cmpsb
jns
dec
int3
clc
push
push
sbb
jae
sbb
nop
fdivrs
clc
divl
xor
xchg
jns
sbb
push
testl
mov
dec
xor
stos
pop
mov
jnp
pop
push
dec
clc
inc
inc
gs
inc
push
dec
inc
jno
test
frstor
popa
cmp
arpl
inc
ss
jecxz
jg
mov
push
or
adc
mov
add
sbb
in
jg
fwait
call
scas
pusha
cmp
aad
in
mov
pop
movsb
mov
or
cmp
sarb
xor
addr16
pop
xor
jbe
scas
repz
jo
jge
mov
add
loope
pop
inc
popa
mov
pop
sar
adc
xchg
sarb
xor
pop
ds
dec
cltd
ret
or
lcall
cli
aaa
movsb
push
xchg
lahf
jp
bound
mov
jmp
clts
insl
movsl
popa
push
jecxz
rcr
pop
push
insb
jg
xchg
ljmp
and
adc
icebp
push
lahf
into
data16
push
jg
loopne
clc
arpl
jno
pop
rorl
xchg
mov
jge
jecxz
stos
mov
cli
sub
shrl
jbe
lods
popf
sub
or
inc
xor
cmp
jns
idivl
or
je
xchg
push
inc
push
scas
inc
cwtl
add
mov
fistpll
rorl
xchg
ror
jle
mov
jnp
ljmp
adc
call
mov
or
sbb
cmp
push
sbb
fs
and
rorl
sbb
addr16
subl
nop
out
insb
push
out
idivb
mov
and
nop
sbb
setns
test
lock
sub
add
mov
repnz
adc
in
xor
add
outsl
lahf
and
and
push
add
lds
notb
push
test
mov
fstps
pop
xor
jecxz
sub
mov
push
cltd
mov
and
jbe
clc
xlat
ja
sub
mov
scas
pop
ss
cltd
push
mov
test
aad
divl
lret
mov
in
pop
movsl
aaa
out
mov
aas
push
cmpsb
xor
xchg
stos
or
mov
or
leave
xor
sub
push
inc
mov
fucom
adc
jmp
ljmp
test
cmp
pushf
lret
xchg
dec
push
jo
jo
xchg
mov
ljmp
cli
and
dec
xchg
pop
add
fstpl
aas
pop
loope
in
push
mov
mov
ror
scas
repz
call
dec
sub
and
nop
sahf
ret
or
stos
das
les
mov
or
xor
int3
mov
outsb
pushf
vcmpps
jp
in
incb
out
sub
arpl
mov
mov
movsl
in
jne
out
stos
fists
xchg
and
cmc
mov
mov
push
pop
jmp
mov
sti
xchg
fsubr
clc
je
mov
sbb
stos
mov
fs
xor
imul
rclb
mov
loopne
sub
stos
rclb
push
cmp
or
sub
lret
in
emms
mov
dec
fwait
mov
mov
cmp
movsb
sub
lcall
out
inc
aaa
in
xorl
pop
adc
mov
cmpsb
hlt
sub
into
mov
adc
or
sbb
mov
cmp
or
repz
dec
cmp
iret
dec
xor
xchg
cld
mov
mov
divb
sbb
add
xchg
sub
jo
dec
out
enter
popf
jne
and
xchg
xor
clc
adc
loop
outsb
add
and
cltd
fsub
pop
in
mov
xor
pop
lahf
insb
cld
cld
cld
mov
mov
outsb
loop
addl
mov
int3
cld
dec
pusha
insb
jmp
lcall
fdivr
sbb
sub
ja
out
mov
aas
jne
sub
jp
icebp
cmp
in
das
sbb
ds
les
add
loop
cmp
cmpl
dec
xchg
mov
ret
push
and
mov
jb
lret
orl
jne
leave
and
jne
pop
scas
int
mov
inc
lods
dec
push
push
aad
add
mull
push
int3
push
fisubs
add
xchg
hlt
aaa
dec
push
inc
xlat
arpl
aad
lds
xchg
inc
add
pop
mov
js
add
cmp
cmp
test
js
hlt
inc
sbb
pop
aaa
nop
adc
jns
jle
xchg
mov
outsl
shlb
ljmp
cmpsl
stos
fisttpl
inc
xchg
mov
or
popf
rcl
adc
hlt
push
push
and
mov
xchg
sub
leave
stos
pop
stos
push
jns
roll
sbb
and
subb
cltd
push
jl
pop
jae
jmp
sbb
scas
jle
rorb
add
mov
roll
test
cmp
aad
in
xor
and
ret
mov
out
dec
mov
shr
cmc
out
fwait
addr16
adc
push
stos
push
ljmp
add
jge
dec
pop
add
sbb
loopne
leave
arpl
xchg
das
adc
popf
sahf
dec
cld
dec
jg
xchg
divb
inc
xchg
mov
or
pop
jg
outsl
jns
add
pop
shr
shrb
lds
movsl
or
jp
adc
enter
in
xor
enter
mov
das
jno
lret
sahf
add
sbb
sbb
shll
xor
popf
ds
add
loop
rorl
movsl
out
stos
jbe
arpl
mov
popf
outsl
js
xchg
lea
out
cld
sbb
jecxz
mov
cmp
jbe
stos
adc
adc
into
jecxz
roll
insb
fstps
adc
push
fsubl
xor
mov
jb
test
aam
add
jb
dec
shl
fadds
push
pop
adc
fwait
mov
mov
ja
movsb
pop
cltd
jne
dec
xor
pop
jae
leave
cmpsb
inc
cmp
mov
int
es
add
int3
sub
push
add
imul
push
fwait
mov
call
data16
xor
out
mov
repz
stc
scas
pop
movsb
es
mov
ja
fdivrs
cmp
dec
das
push
call
loop
je
mov
data16
insb
add
cli
cli
xor
mov
mov
aas
xor
push
xchg
outsl
dec
int3
mov
inc
stos
sub
cmp
inc
mov
out
popf
sahf
bound
mov
mov
and
mov
jmp
dec
or
daa
lods
mov
mov
inc
jb
xor
dec
xor
cmp
aaa
push
mov
xlat
mov
xchg
sarl
in
fucom
push
jmp
jae
cli
jno
fisttps
movsb
notb
dec
jns
out
hlt
cltd
iret
nop
lock
mov
push
mov
ljmp
or
mov
and
xchg
shll
and
lods
fildll
sbb
clc
mov
idivb
sbb
ret
sbb
and
jmp
and
adc
or
stos
pushf
mov
test
add
out
int
jae
push
pop
outsl
xor
or
sub
hlt
sub
fistl
or
xchg
out
scas
jecxz
cmpb
cmp
fmull
std
lods
xchg
movsl
fs
lret
rcll
pxor
inc
xchg
cmp
push
push
pusha
sbb
inc
xor
adc
pop
std
sbb
mov
mov
cmp
es
movsl
data16
lret
mov
dec
js
loop
lock
movsl
arpl
cli
inc
adc
xor
loop
and
xor
and
arpl
pop
or
leave
lcall
lock
push
out
push
and
inc
xlat
pop
ss
lods
sbb
push
inc
jo
mov
out
data16
mov
inc
outsb
cltd
or
aas
nop
or
cmp
insb
int3
arpl
jb
loope
pop
mov
jg
cs
cmp
arpl
test
fbstp
cmp
add
stos
int
into
lods
pop
xchg
and
lods
lret
add
xor
fwait
jnp
push
add
hlt
in
pop
ret
loope
dec
lds
sbb
jl
fwait
pop
pminsw
faddp
push
jne
or
mov
and
pushf
js
inc
push
test
out
pop
int3
xor
scas
sub
sub
xchg
cmp
ficomps
js
js
cmp
add
pop
fidivrs
cmpsl
xchg
push
jbe
aaa
dec
mov
test
and
push
ficomps
xchg
cmp
mov
insl
lods
sti
push
and
add
stos
push
movb
jno
lods
lods
push
addl
dec
push
cmp
mov
mov
stos
test
or
mov
mov
cmp
js
std
std
pushf
mov
add
test
and
lret
nop
pusha
add
cmp
test
je
popa
xchg
jg
sub
cmpsb
xchg
iret
in
test
stos
test
clc
cwtl
sub
mov
in
ljmp
xorl
std
cmp
xor
in
mov
pop
xor
lods
lcall
dec
ss
adc
stos
mov
out
jp
loopne
and
cwtl
push
lds
aad
out
mov
push
cmp
jecxz
roll
cli
push
aaa
sbb
xlat
adc
sbb
pop
subb
ret
push
aaa
mov
sbb
or
jnp
and
xor
mov
inc
push
test
sbb
enter
rolb
int
mov
pop
adc
lcall
lods
xchg
or
jae
jbe
repnz
sbb
or
sbb
pop
stos
or
sbb
fucom
into
lret
mov
dec
icebp
jge
push
imul
rol
mull
and
bnd
pusha
push
repz
lea
pop
xchg
ret
mov
mov
and
mulb
jb
inc
es
and
push
add
jbe
xchg
xchg
ret
mov
mov
and
mulb
jb
inc
es
and
push
add
jbe
xorb
mov
mov
and
mulb
jb
inc
es
aas
and
push
add
xchg
loop
bnd
inc
shl
mov
xchg
ss
stc
jb
call
ds
jb,pn
bound
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
mov
cmp
sub
adc
insb
cmp
mov
outsb
int3
pop
cld
dec
in
mov
cmp
sub
pop
out
dec
fidivrs
ds
mov
mov
outsl
int3
pop
cld
dec
in
mov
cmp
sub
pop
out
dec
fidivrs
ds
or
int
mov
lahf
lret
inc
sahf
push
out
icebp
jl
dec
xor
jg
stc
adc
or
repz
in
mov
or
popa
pusha
jae
pop
out
leave
and
sub
jae
test
outsb
add
inc
sbb
add
push
sub
xchg
cmp
in
cld
jg
in
fnstsw
push
mov
adc
jnp
call
dec
xchg
into
xchg
into
arpl
dec
fsubrl
cmpsb
test
in
push
jae
add
into
lds
push
inc
dec
aas
arpl
rclb
out
int3
mov
cltd
push
andl
fisubrs
jns
imul
inc
fs
cltd
cld
dec
stc
jge
scas
or
cmp
sub
pop
out
dec
fidivrs
ds
mov
mov
outsb
int3
pop
cld
dec
test
sbb
dec
fdivrs
sub
cmp
cmp
dec
lea
dec
fdivr
lahf
das
test
enter
std
pop
iret
sub
xor
or
cmc
arpl
push
leave
mov
and
fstps
inc
fmuls
dec
mov
jl
insb
ds
mov
mov
outsb
int3
pop
cld
dec
in
mov
cmp
sub
pop
out
dec
fidivrs
ds
mov
mov
outsb
int3
pop
cld
dec
in
mov
shl
out
sub
mov
push
lea
pop
and
arpl
push
add
bound
dec
inc
sbb
out
push
into
jle
cwtl
mov
test
scas
xor
lods
movl
aaa
xchg
out
sub
movsb
repz
lock
lock
je
cs
test
cmp
mov
mov
add
lea
ljmp
cmp
or
jns
mov
mov
jae
mov
imul
jae
clc
and
push
jg
cmp
lock
jae
sub
add
in
add
std
inc
push
pop
push
outsl
incb
stos
dec
xor
and
jae
std
cltd
cmp
test
lock
mov
xchg
aam
fmul
jbe
mov
stc
xor
mov
mov
pop
into
sbbb
xchg
test
loopne
sub
stc
popa
or
mov
pop
mov
fstps
dec
mov
dec
or
in
fsubrs
js
into
shrl
shlb
lods
cmpsb
inc
jb
jg
mov
clc
push
dec
mov
je
xchg
lock
add
mov
aaa
and
dec
orl
xchg
dec
lods
inc
repnz
pop
xor
mov
mov
je
ja
mov
cmp
and
xchg
lret
cmp
xchg
and
ret
fwait
cltd
stos
sbb
jne
pop
cmc
sbb
xchg
or
mov
mov
or
or
inc
add
cmp
fwait
xchg
xchg
scas
divl
sahf
pop
in
mov
jo
cmp
jg
jns
mov
pop
roll
inc
stos
notb
in
and
push
shl
lcall
mov
rcll
popa
mov
sub
or
fsubp
adc
mov
loope
mov
lret
movsb
mov
xor
popa
dec
loop
xor
insl
int
and
mov
pop
inc
push
outsb
fs
xchg
dec
push
jae
in
or
jns
inc
dec
add
jns
fsubl
pop
pop
cmp
mov
repz
inc
leave
fs
or
movsb
or
xchg
mov
pop
scas
test
std
nop
out
insl
push
cli
mov
mov
xlat
mov
adc
xchg
ljmp
mov
repz
jp
or
or
leave
dec
pop
xchg
xchg
jg
mov
movsb
stos
push
and
xor
lea
ds
shl
mov
adc
test
ljmp
jne
maxsd
ret
iret
movsb
or
into
ficoms
fldenv
jmp
pop
or
dec
rol
adc
div
dec
loopne
imul
and
mov
push
sbb
push
sahf
in
lods
mov
adc
sub
push
or
push
aaa
ret
jno
dec
push
pop
xor
ret
sti
push
stc
andb
add
popa
inc
and
sub
in
hlt
lds
jg
aad
jno
ret
cmpsl
data16
jecxz
jmp
mov
rorl
test
mov
or
push
pop
sahf
sub
lret
lret
lock
dec
mov
mov
pop
xor
mov
cmp
push
sbb
in
jg
mov
or
fistpll
cmpsb
or
cmp
jg
and
ljmp
xlat
pop
ret
xor
sbb
iret
inc
gs
ror
imul
sub
rcrb
shll
inc
add
sar
rcrl
lds
lahf
addl
vpmuludq
mov
mov
daa
and
jecxz
sbb
lret
fdivrs
test
lock
and
js
das
out
adc
mov
mov
mov
dec
mulb
xchg
xor
cmpsb
inc
mov
scas
cld
roll
enter
ds
push
call
fisttps
jp
int3
push
adcl
out
inc
aad
out
xchg
cmpsb
pushl
ret
xchg
in
scas
mov
addl
pop
dec
mov
mov
sbb
addl
sub
loope
jae
shrb
mov
and
clc
out
out
shlb
ds
into
test
push
stos
aam
stc
xchg
sub
xor
xor
or
pop
hlt
push
and
hlt
test
lcall
mov
and
or
imul
test
out
aad
and
xor
or
in
cmp
adc
push
idiv
inc
sub
jb
fldt
fnstenv
mov
insl
imul
add
cmpsb
add
sbb
fisttpl
cmc
enter
data16
or
sub
mov
icebp
dec
stc
call
or
add
scas
sub
das
mov
es
fmull
shl
pop
hlt
negb
push
lahf
sub
sub
test
ljmp
aad
jp
xchg
or
data16
out
add
lret
cmpl
jae
push
out
aaa
leave
aaa
cmp
mov
movsb
pusha
pop
xor
lea
ds
mov
rcll
mov
lods
outsb
or
push
push
sbb
cmpsb
cltd
inc
imulb
loopne
and
push
inc
mov
adc
or
sbb
shlb
pop
or
inc
cmp
shll
and
xchg
das
push
js
testl
ja
pusha
jnp
stos
sub
int
push
xchg
sbb
push
ret
cmp
xchg
outsb
iret
and
sub
mov
mov
xor
pop
sub
cmpb
jne
fistpl
pop
pop
jg
lods
add
aaa
cmpl
pop
mov
pop
movsb
loope
sbb
ljmp
push
movsb
movsl
mov
icebp
jne
rcrb
mov
adc
lahf
insb
repnz
scas
dec
jle
add
fdivrs
scas
mov
push
enter
addl
jge
mov
jl
sub
inc
jecxz
ljmp
xor
pop
dec
cmp
xor
jle
in
leave
lret
stos
add
jg
fs
orb
jecxz
repz
and
test
inc
mov
push
xor
mov
lock
xor
pop
roll
loop
pop
sahf
lods
into
fimull
jae
shll
cmp
cmpsb
call
mov
mov
scas
sbb
mov
adc
jle
push
fnstsw
mov
dec
sub
lds
fldcw
int3
cmp
mov
jle
loope
xchg
xlat
hlt
or
mov
fstpt
adc
ljmp
pop
jp
mov
mov
cmp
movsl
repnz
dec
in
or
sbb
out
inc
or
sub
cmpsl
sub
sbb
int
mov
dec
cmp
scas
mov
out
in
xor
test
repz
fistpll
mov
loopne
push
add
in
ja
fisubs
enter
adc
lret
push
xor
jp
leave
pop
inc
iret
cld
lcall
mov
adc
add
movnti
pop
scas
inc
push
xchg
test
or
popa
mov
xor
inc
test
shlb
pop
lds
sub
pusha
test
sbb
mov
mov
pop
dec
pop
fs
repz
ds
enter
fbld
sbb
mov
sub
sub
aam
inc
outsl
pop
push
adc
push
push
cmp
adcl
cmp
out
lock
pusha
or
sbb
cmp
push
sub
dec
xor
cmpsb
testl
mov
adc
outsb
dec
lahf
sub
dec
cmpsl
pop
jnp
mov
popa
xorb
divl
mov
add
pop
push
pop
jle
xor
inc
cmp
xchg
jecxz
mov
in
xor
xchg
outsb
js
es
mov
or
in
arpl
dec
imul
and
pop
jbe
dec
je
rcr
int3
jns
push
mov
sbb
inc
rcrl
loopne
imul
negb
adc
scas
cmc
test
lods
jae
repz
addr16
aaa
arpl
sub
push
jbe
leave
xchg
loop
adc
arpl
mov
je
mov
xor
js
push
jecxz
les
adc
pop
xchg
push
leave
inc
xor
rorl
in
cmp
mov
ret
ss
add
xor
lret
test
pop
and
cmp
enter
xchg
les
cmpsl
mov
xchg
mov
inc
jge
push
and
xor
in
hlt
inc
loop
sub
jmp
and
jb
jnp
adc
ret
iret
add
jns
imul
stos
sti
xchg
repnz
sub
inc
xchg
icebp
xor
scas
mov
and
insb
scas
movsb
aaa
call
outsb
dec
or
ret
cmp
lret
pop
outsb
inc
cmc
mov
add
jnp
cmp
pop
cltd
into
dec
daa
shrl
cli
out
gs
xchg
jge
mov
je
mov
xor
jno
inc
cmc
int3
je
repnz
mov
or
je
jb
fs
adc
lret
xchg
jp
mov
pop
leave
out
jmp
jno
adc
sub
insb
inc
jne
push
add
jne
ds
rorb
xor
jecxz
xchg
pop
stos
sbb
or
jl
xchg
outsb
xor
and
xchg
insb
adc
xchg
and
sti
stc
adc
mov
xchg
fdivl
push
push
bound
mov
pop
sti
and
push
dec
mov
cmp
arpl
cmpsl
das
stc
mov
mov
mov
lcall
lahf
jle
xorb
push
inc
dec
sub
adc
or
shrb
repz
mov
int3
cwtl
mov
inc
mov
mov
pop
pusha
stc
lret
outsl
jne
ds
repnz
int3
stc
ljmp
ja
ja
mov
push
arpl
insl
pop
add
adc
fwait
clc
lcall
lea
scas
cmpsb
jbe,pt
add
push
js
push
push
xor
adc
imul
xchg
push
mov
stos
inc
inc
dec
cmp
mov
js
dec
mov
mov
leave
xlat
addr16
je
int3
sti
or
cmpsl
mov
nop
repnz
fcomip
pop
sbb
add
mov
sti
jnp
jo
loope
mov
orb
std
and
iret
push
imul
loopne
push
aam
mov
adc
mov
inc
lea
stos
pop
dec
arpl
pop
aas
int
cmp
mov
lods
cmp
popa
lcall
pop
stc
movsl
pop
mov
xor
xlat
shlb
cli
or
ret
mov
aam
mul
fnstenv
or
in
aaa
push
pop
cmp
mov
insl
jnp
aaa
or
xchg
inc
sbb
rcrl
dec
xor
test
or
pusha
inc
push
or
fs
lods
xchg
mov
sbb
mov
mov
mov
adc
cmp
jg
mov
pop
cmpsl
lea
sbb
add
dec
jp
iret
movsb
cmpsl
outsb
mov
push
and
pusha
cmp
fsubr
push
add
and
aaa
push
pop
fmull
popa
call
iret
add
lea
call
sub
mov
fsubrs
into
dec
mov
lahf
jno
mov
add
mov
or
cmp
fisubl
dec
pop
gs
pop
fwait
jg
call
inc
pop
push
das
pop
xor
cmp
shll
insl
and
inc
xchg
out
cld
dec
xor
stc
adc
adc
add
pusha
push
push
inc
sbb
jae
sub
push
push
in
jp
and
sahf
pusha
inc
push
out
mov
xor
cmp
pop
incb
push
stos
mov
arpl
pop
stos
les
mov
xor
mov
lcall
jle
adc
addb
cmp
inc
pushf
cmp
pop
and
inc
cmp
jne
in
and
icebp
pop
mov
scas
dec
or
mov
mov
mov
loopne
outsl
arpl
icebp
add
xchg
and
out
cmpsl
lea
cmc
mov
cwtl
icebp
push
rcrl
inc
in
mov
iret
mov
adc
dec
int
pusha
pop
sub
hlt
std
repnz
xchg
movsl
repz
push
fcoms
adc
adc
xchg
addr16
mov
adc
pop
divl
je
sbb
repnz
jmp
daa
cli
jae
jl
sub
jns
je
lds
mov
in
into
push
dec
ljmp
and
inc
test
fldl
push
cmp
frstor
dec
aad
sbb
jo
push
pop
xlat
ret
fstpt
cltd
xchg
ficoml
add
sbb
sbb
insb
pop
jne
mov
mov
sbb
nop
push
sbb
pop
je
add
repnz
mov
fmuls
ret
inc
or
push
xor
cs
cmpsl
mov
adc
sbb
mov
fsts
out
sbb
sub
push
dec
cmp
or
push
push
fisubs
ja
mov
imulb
jne
push
mov
xchg
sub
daa
ret
mov
mov
mov
loope
rcrl
fsubrs
std
mov
lahf
xchg
inc
inc
std
das
adcl
loopne
js
xor
lcall
sarb
push
mov
subb
push
enter
pop
sub
xchg
add
filds
add
sub
aas
lcall
mov
xor
xchg
sbb
mov
rcrl
push
shlb
insl
push
rolb
loope
incb
insb
sub
sbb
ss
popa
push
xchg
pop
fistpll
mov
in
mov
xor
in
jne
dec
mov
or
sbb
sti
xor
sbb
or
push
jno
rorb
aad
ja
xchg
add
imul
xchg
repz
icebp
in
adc
or
adc
jmp
das
addr16
decl
in
lret
mov
cmp
lret
lds
pop
movsb
fsubl
lahf
mov
pop
jge
ja
notb
fst
inc
shrl
out
popf
cmp
jl
mov
xchg
dec
jg
imul
lods
mov
sub
push
mov
in
jp
jge
cmp
call
push
lods
jns
daa
cwtl
push
f2xm1
ss
xchg
aaa
jnp
lods
push
sbb
cltd
lock
popf
adc
push
xor
mov
lea
pop
jmp
dec
and
cs
aad
call
cmp
cmp
inc
test
push
jg
aaa
aam
inc
nop
fbstp
ss
sub
in
ficoml
add
cmp
mov
lret
jae
mov
mov
pop
mov
xchg
sahf
mov
add
sub
adc
sbb
pop
inc
xor
push
lahf
pop
mov
xchg
imul
push
fadds
test
mov
aam
inc
ficompl
test
jmp
popf
inc
insb
mov
pop
push
jb
and
and
aad
mov
and
and
jle
gs
mov
xchg
or
insl
add
in
or
lock
add
push
mov
lods
xchg
ror
mov
sub
push
lcall
xchg
or
xor
sbb
cli
imul
and
ret
or
nop
outsb
mov
sbb
pop
push
out
pusha
out
les
ja
jl
movsl
shrl
scas
xchg
roll
cmp
inc
cld
pop
lock
repnz
push
call
cltd
lods
aam
adc
xchg
mov
mov
jo
push
aas
xlat
add
lahf
shll
lret
in
pop
add
insl
rcll
lea
fistl
jb
mov
lods
insb
leave
mov
mov
stc
or
ljmp
sub
pop
mov
sub
inc
xchg
test
sub
mov
push
std
in
inc
add
insl
mov
loope
jo
mov
mov
sbb
scas
nop
push
mov
jmp
xchg
jo
lahf
or
pop
pop
sub
jp
idiv
cmp
pop
mov
fsubr
jb
inc
or
imul
sti
cltd
loop
inc
dec
pop
add
add
cwtl
adc
rorl
cmp
push
iret
mov
mov
hlt
push
push
inc
int3
repz
sbb
xor
lea
enter
arpl
jo
or
mov
add
adc
fmulp
and
outsb
frstor
mov
jle
sub
idivb
cmc
lret
cwtl
adc
mov
insb
mov
pop
mov
push
pusha
push
inc
sahf
pop
popa
das
jp
inc
adc
push
lods
std
repnz
xlat
imul
jp
push
push
icebp
mov
es
rcrl
push
push
inc
mov
xchg
in
sub
mov
push
xchg
dec
rclb
loopne
outsl
loope
out
daa
and
sub
ja
lfence
pop
push
test
mov
int3
xchg
test
lret
xor
adc
aas
stc
xchg
jge
das
sarb
es
test
fiadds
imul
loopne
mov
jbe
sbb
cld
xchg
ret
mov
sub
movsb
and
movsb
mov
std
push
imul
rcrb
fs
jecxz
fucomp
cwtl
add
inc
orb
add
sub
aam
adc
and
inc
fdivr
iret
push
mov
out
sbb
icebp
dec
fisubrs
mov
lods
and
or
js
hlt
cmp
pusha
xor
cltd
xchg
mov
jl
xchg
imul
ds
or
je
add
dec
mov
nop
mov
shr
mov
or
iret
ss
push
xor
mov
sahf
cwtl
int3
lcall
pop
sbb
cwtl
mov
scas
jns
adc
notb
pop
cmp
pop
loopne
xor
jo
push
sub
rcl
or
jne
xlat
dec
push
dec
push
stc
sbb
aam
mov
inc
and
cmp
in
sbb
cltd
mov
shll
sub
movsb
lock
stc
sub
and
sbbl
cs
xor
lcall
sahf
mov
test
testb
mov
daa
std
xchg
das
add
cmp
ror
hlt
movsb
insl
insl
inc
mov
xor
inc
sub
jno
loopne
push
pop
sbbl
add
cs
ja
and
daa
cld
cmpsl
shl
cli
incb
jl
in
xchg
pop
out
mov
mov
call
decl
mov
xor
xor
dec
xor
cmp
push
fmulp
mov
pop
push
mov
outsl
jbe
bound
mov
int3
mov
mov
or
pop
cmpsl
push
sahf
xchg
push
in
xchg
or
popl
lcallw
out
mov
out
mov
jl
lret
ret
sub
jnp
push
adc
pop
fldl
lea
mov
inc
cli
inc
inc
or
pop
dec
adcl
mov
ljmp
pop
lds
xor
push
mov
sub
lods
pop
pop
xchg
jg
xchg
insb
xchg
stos
xchg
fwait
push
rolb
cmp
outsb
lds
rcrb
out
xchg
lods
cmp
jg
es
add
icebp
test
or
test
cmp
out
lret
push
xchg
outsl
adc
in
sub
dec
xor
or
and
mov
xor
lret
incl
rcrb
arpl
movsb
test
sbbb
jecxz
mov
icebp
push
rorl
and
ret
movsb
jns
in
cmp
test
sahf
fnstcw
fdivrs
mov
mov
nop
std
popa
dec
les
addr16
push
je
xchg
mov
jb
test
push
ds
rorb
cmp
and
je
lock
inc
pop
leave
sbb
dec
repnz
push
addb
out
inc
test
pop
into
xor
add
xor
sub
rcll
iret
or
subl
mov
push
addr16
aam
jne
jmp
and
std
dec
dec
push
clc
mov
or
loope
adc
adc
in
je
in
sbb
mov
ucomiss
and
std
in
sub
int3
mov
fcmovnu
mov
inc
stc
xor
testb
call
je
aam
incl
iret
xor
pop
push
fwait
push
xor
aad
inc
pushf
push
xchg
sbbl
mov
aas
jns
testl
jbe
adc
mov
push
pop
insb
mov
pop
and
adc
divl
loope
xchg
insl
ja
in
xor
push
pop
sub
repz
xorb
js
mov
test
pop
aaa
pop
sbb
inc
cli
or
ds
outsl
xchg
mov
mov
mov
pop
out
dec
fidivrs
ds
mov
mov
outsb
int3
pop
cld
dec
in
mov
cmp
sub
pop
out
dec
fidivrs
ds
mov
mov
outsb
int3
pop
cld
dec
in
mov
cmp
sub
pop
out
dec
fidivrs
aas
pushf
mov
mov
outsb
int3
pop
cld
dec
in
mov
cmp
sub
pop
out
dec
pop
jl
insb
rcrl
or
cmpsb
add
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
mov
push
lods
fcompl
sub
loope
sub
insb
sub
sbb
or
jl
jmp
hlt
mov
int3
mov
mov
sub
insb
dec
jb
dec
or
jl
insb
sbb
or
es
or
fdivl
xchg
add
js
or
cmp
imul
dec
mov
repz
sets
vpcmov
dec
mov
mov
cmp
sub
cli
inc
jae
jg
adc
aam
shll
or
sbb
fsubrl
loopne
jno
cmp
cmp
xchg
shll
jge
lods
out
mov
xchg
das
mov
std
push
in
popf
push
mov
imul
mov
mov
cs
or
adc
sbb
inc
std
das
stc
fmul
les
sarb
jecxz
int3
iret
insb
sub
dec
mov
in
push
and
imul
test
xchg
sub
or
or
pop
dec
sbb
iret
mov
mov
in
pushf
fdivl
mov
sub
sbb
or
jl
insb
sbb
push
lods
cwtl
cmc
mov
in
xchg
in
pushf
sbb
je
dec
push
sbb
dec
or
fwait
pushf
pop
aad
int
lock
dec
inc
inc
sub
arpl
dec
pop
imul
lods
hlt
jmp
pushf
fmull
pop
sbb
or
jl
insb
sbb
or
cld
mov
int3
mov
mov
jl
insb
sub
sbb
or
jl
insb
sbb
or
cld
mov
xchg
lret
lock
push
cld
mov
fnsave
test
imul
and
lahf
shr
jmp
sbb
int3
or
jg
iret
jecxz
fimull
mov
mov
stos
stos
test
or
pushf
cld
das
out
pop
dec
xchg
xor
fwait
add
push
pop
rcrl
mov
inc
repz
mov
test
lret
fs
dec
add
jo
pop
les
aaa
push
pop
pop
movsb
sbb
mov
ds
insb
leave
inc
add
xorl
es
call
push
or
lods
push
mov
pop
fildl
pop
pop
xor
sbb
mov
xchg
andl
sti
sub
movsl
mov
mov
out
cltd
scas
icebp
in
xchg
inc
pop
es
cmpsl
test
pop
adc
mov
cld
mov
cmp
in
das
push
popf
in
xchg
mov
pusha
out
shrb
jns
and
mov
xchg
dec
inc
mov
inc
pop
mov
fwait
mov
sub
jg
scas
vunpckhps
cmpsb
std
cmpb
xor
popa
in
inc
fwait
push
mov
mov
in
ret
data16
test
push
roll
sub
dec
in
xchg
lds
xor
xchg
inc
decl
fistpl
sahf
cmp
ljmp
cs
in
cmp
mov
adc
inc
outsl
fcmovnu
int
or
adc
loope
sahf
int3
call
jb
jecxz
sbbb
das
roll
out
jae
xor
clc
xor
js
jno
pop
icebp
jge
test
into
enter
mov
int
lret
xchg
lcall
bnd
aaa
mov
or
push
or
repz
jp
and
xchg
dec
sub
int3
or
or
jle
pop
aam
xchg
inc
xchg
dec
xchg
jp
pop
or
lock
and
les
mov
fstpt
mov
std
setge
jo
mov
repnz
cmp
sub
lds
adc
push
movsb
das
and
pop
mov
stc
daa
sub
adc
and
and
jns
xchg
and
shlb
mov
dec
cmc
jge
jmp
xchg
mov
pushf
sahf
dec
jno
cmp
das
xchg
dec
mov
nop
pop
and
xchg
ret
adc
jecxz
add
movsb
jbe
clc
popf
dec
jno
pop
pop
inc
inc
stos
ljmp
push
subl
xchg
test
adc
les
dec
inc
sti
icebp
insb
lret
daa
movsl
mov
js
sbb
and
fisubrs
lret
repz
call
mov
dec
adc
xchg
jecxz
test
stos
aas
test
loopne
fs
faddp
and
or
cmp
and
add
and
out
into
inc
shlb
push
and
or
mov
or
rolb
inc
mov
adc
imul
movsb
mov
mov
and
cmpsb
jo
jmp
test
sub
mov
or
mov
pop
push
sbb
fisubs
lods
inc
and
lahf
mov
jecxz
fsubr
dec
out
repnz
rcl
out
stos
frstor
or
imul
push
stc
imul
fstpt
mov
outsl
addr16
aad
xchg
mov
jae,pt
adc
add
sub
divl
rcll
xchg
mov
push
mov
mov
push
movsb
popf
push
mov
or
ret
out
jmp
or
into
adc
movsl
add
pop
fnsave
fnstcw
sahf
pop
add
mov
aaa
mov
icebp
mov
mov
jl
cmpsl
repz
pop
push
icebp
jge
xchg
push
pusha
fnsave
je,pt
sub
out
mov
fwait
xor
mov
jno
jne
lods
fdivrs
xchg
sahf
lds
push
pop
dec
arpl
pop
pop
xchg
lret
rclb
mov
shrl
notl
push
and
xor
cmp
adc
mov
cs
mov
mov
movb
cmpsb
mov
mov
or
mov
and
adc
fs
fistps
xor
push
jns
shlb
mov
inc
lds
cmp
test
dec
fisubs
jmp
jb
add
sti
mov
xchg
pop
cmp
mov
sub
sarl
pop
lods
imul
lock
add
rolb
jecxz
sub
mov
hlt
push
icebp
aad
mov
dec
cmpl
pop
mov
mov
dec
lret
jbe
push
xor
scas
sbb
mov
subl
sub
push
push
lret
mov
xor
dec
add
push
out
xor
pop
bound
xor
gs
pushf
iret
repz
faddl
cld
stos
push
inc
or
push
cmpsb
jmp
test
lods
movb
jb
and
lds
mov
or
xchg
mov
dec
mov
insl
pop
test
pop
jge
test
test
loope
fdivl
dec
push
xor
sarb
rcrl
rclb
adc
ret
push
je
xor
test
out
jae
inc
repz
pushf
mov
icebp
sub
mov
dec
push
pusha
scas
dec
test
jge
pop
fstl
push
jae
int3
add
jl
mov
xchg
mov
dec
test
mov
xchg
push
sub
test
cltd
mov
clc
mov
inc
cs
xor
jp
or
lret
adc
fcmovbe
push
xor
fadds
fldl
pushf
inc
mov
or
xchg
xchg
add
mov
js
and
sbb
cmp
stos
xchg
sbb
or
lcall
nop
ja
adc
xor
pop
lahf
push
pop
mov
sbb
sbb
pop
jo
jl
rorb
stos
int3
mov
and
adc
jg
pop
les
mulb
add
mov
xor
mov
repz
js
xor
les
data16
in
pop
icebp
ret
in
push
stos
int3
or
daa
or
fsubl
xor
mov
cmc
sub
movsl
gs
ret
out
mov
aad
cmp
repnz
sbb
lahf
mov
popa
jecxz
jecxz
fcoms
leave
scas
jns
in
outsb
fimull
and
mov
pop
xchg
jne
ret
into
push
jmp
push
pop
mov
push
dec
cltd
shlb
and
add
je
in
flds
pop
adc
mov
and
push
addr16
inc
shll
sti
mov
cmp
adc
inc
push
or
aas
stos
push
icebp
jecxz
testb
dec
cmpsl
xchg
jne
outsl
adc
mov
lock
inc
mov
scas
xchg
call
mov
xchg
loop
insb
lock
insl
es
jae
mov
in
and
loope
sbb
push
mov
push
sbb
scas
push
fists
jb
pushf
or
loopne
out
dec
fs
or
jb
aam
sbb
push
fdivrp
pop
insb
filds
jne
aas
jl
mov
repz
mov
insb
cmp
pop
repnz
fsubrl
shrb
and
cmp
inc
clc
iret
js
push
mov
pop
jb
adc
cwtl
pop
sub
xor
icebp
cmp
mov
mov
mov
mov
sti
sub
mov
sti
inc
cmp
loop
push
xchg
mov
xchg
jmp
xchg
sub
lahf
imul
mov
clc
or
mov
cltd
pop
mov
mov
lods
nop
push
or
jb
mov
cwtl
sub
jp
pop
dec
push
dec
push
sbb
ja
sub
ds
rcrb
and
or
adc
cmpsl
scas
push
lods
pop
repnz
fildl
addr16
cmc
pushf
add
cmp
sbb
gs
xchg
ja
push
sarb
imul
xchg
inc
cmp
arpl
fidivrl
mov
mov
mov
push
jns
jnp
jg
loop
ja
and
cmp
sub
stos
aam
loope
test
repnz
mov
adcb
int
push
in
das
push
mov
xor
cmp
xchg
xor
or
ret
call
cmpb
in
pop
jno
cld
xchg
aad
int
inc
inc
mov
push
dec
sub
sarl
pop
xchg
es
cli
push
jmp
add
daa
dec
mov
lcall
lcall
jecxz
xor
icebp
sbb
pop
addr16
notb
mov
mov
cmp
fucomip
fdivs
flds
jno
je
jbe
ret
mov
xchg
cmp
movsl
jne
ds
enter
xor
inc
add
xor
shrl
jo
movsb
and
pop
ficoms
mov
xchg
xor
jae
xorl
iret
test
stos
iret
inc
daa
inc
sbb
aaa
and
js
scas
mov
sarb
outsb
out
aam
ljmp
fwait
adc
jb
jecxz
inc
test
pop
loope
inc
daa
arpl
adc
stc
jo
jmp
dec
pop
push
dec
repz
push
leave
rclb
iret
inc
inc
pop
mov
xor
ljmp
mov
popf
mov
dec
cmpsb
fimull
lds
jb
in
test
ljmp
jl
mov
push
push
xchg
pop
adc
inc
cmp
add
ret
sbb
xor
jecxz
cmp
and
ret
mov
rcl
shrl
mov
mov
sub
push
and
fwait
pusha
mov
daa
jp
mov
enter
add
xchg
addr16
ds
add
stc
les
cli
stos
add
gs
repnz
shlb
mov
or
or
jne
mov
testb
fistpl
mov
sbb
push
jmp
ds
cwtl
or
cmpsl
push
cmpsl
fwait
inc
aam
rolb
shlb
lea
add
mov
loopne
push
cld
int
lret
inc
sbb
lock
lret
mov
scas
aaa
xchg
mov
push
push
roll
xor
in
jnp
xchg
rcrb
pop
mov
sti
lea
pop
jne
movsl
xchg
loope
jnp
std
lock
in
push
jp
lods
xchg
ret
cld
jb
ss
std
and
or
mov
iret
ret
and
dec
hlt
sti
pop
sbb
subb
out
ret
mov
mov
lods
sarb
fcomp
push
lock
dec
test
or
cmp
mov
pop
ss
jbe
sub
out
int
in
out
into
loopne
mov
das
dec
jbe
fdivr
mov
pushf
aas
cltd
aas
push
jecxz
iret
inc
ljmp
sub
xor
outsl
cli
out
test
push
lahf
jo
jbe
cmp
and
jo
outsl
in
cmpsl
aas
cmpsl
push
mov
xchg
das
jno
pop
negl
sbb
andb
mov
jg
dec
addl
adc
dec
sbb
or
loope
inc
dec
or
inc
push
daa
inc
push
loope
pop
out
push
or
mov
rcrb
mov
pop
cmp
ds
and
xor
sub
imul
xchg
mov
dec
sub
adc
sahf
ret
mov
inc
cmp
mov
into
mov
das
int
es
mov
lock
test
jp
movsl
pop
mov
gs
pusha
mov
xor
push
inc
insb
add
mov
jae
jne
in
jne
xor
loope
loopne
in
repnz
enter
insl
mov
bound
add
xchg
jl
sbb
repz
in
fsubr
roll
loopne
xchg
pop
orb
sub
nop
test
jo,pt
xor
loope
nop
lods
xchg
xor
into
lock
dec
fwait
mov
loope
xor
inc
orb
scas
out
sub
fwait
xchg
inc
lret
adc
loope
and
out
sbb
mov
ss
movsl
xor
push
ficoms
add
loopne
int3
cmp
icebp
test
hlt
xor
and
xor
and
iret
in
xchg
icebp
cmc
ret
out
mov
mov
mov
dec
mov
xor
sub
lret
add
lds
mov
inc
fcmovnb
mov
mulb
cltd
rcll
daa
push
movsb
jp
mov
xor
and
mov
xchg
ret
adc
inc
mov
xchg
loopne
pop
sub
mov
divb
jecxz
add
je
xchg
cmp
xor
mov
imul
in
and
repnz
cmp
aaa
clc
lcall
jmp
jns
and
bound
xchg
pop
ljmp
fmulp
je
mov
dec
ret
inc
jne
fcom
mov
jle
shll
idivl
xor
es
rorl
sub
sub
dec
fdivrl
xorb
or
push
aas
inc
pop
sbb
mov
sahf
fcmove
loop
dec
pop
sbb
out
jns
sbb
in
stc
test
int
pop
mov
int3
xor
push
push
cmpsb
aam
mov
ss
mov
pusha
je
fsubl
and
clc
xchg
in
xchg
fiadds
and
stc
rorl
dec
clc
mov
loopne
or
jb
pop
xchg
jmp
or
fimull
xor
jne
xchg
rcrl
icebp
sbb
in
into
push
aad
cltd
sbb
xchg
das
pop
rorl
sbb
popl
push
cltd
loop
clc
pop
notl
inc
push
or
aaa
or
mov
and
bound
pusha
push
lret
push
jbe
add
pop
into
push
sbb
imul
not
mov
xor
mov
mov
sbb
ss
mov
push
mov
test
sub
scas
andl
call
pop
mov
xchg
lods
js
cmp
pop
push
cld
shll
lcall
aam
pop
stos
sub
push
push
jns
ds
cmp
xchg
or
dec
out
xor
jnp
xchg
xor
cli
imul
mov
mov
add
cs
jbe
jge
repnz
jle
xchg
pop
add
ret
inc
daa
or
arpl
testl
add
dec
push
les
jns
mov
lods
sbb
dec
rorl
jp
jmp
xor
pop
jle
cmp
mov
add
movsb
and
int
inc
push
cmp
add
insl
fimuls
push
inc
mov
pop
rcl
sbb
mov
pop
into
cmpsb
int3
push
scas
ja
movsl
inc
sti
je
addr16
loop
sbb
arpl
cmp
outsl
mov
andb
mov
into
pop
jmp
adc
inc
int3
push
push
insb
arpl
push
mov
xor
sub
pusha
fisubrl
sbb
and
cmp
imull
popa
pop
int3
lds
jp
mov
pushf
stos
adc
and
or
lds
and
pop
dec
push
stos
push
xor
mov
sbb
stc
test
scas
roll
in
push
imul
stos
ret
jmp
movsl
sar
jno
push
cmp
bound
mov
cmp
add
popf
mov
int3
jl
jmp
add
aaa
cld
mov
sub
gs
in
xchg
call
add
movsl
in
adc
lea
mov
lret
add
jo
sbb
scas
stos
jb
adc
pop
mov
pop
push
int3
fldt
enter
stc
inc
mov
shrb
clc
xchg
lods
pop
aam
ljmp
sub
or
test
cmp
push
cmp
mov
sbb
add
mov
and
out
hlt
cld
test
or
push
inc
cmp
stos
push
sub
stos
cmp
push
adc
and
les
adc
movsl
lock
push
mov
mov
and
adc
sbb
into
es
mov
cs
aas
push
fs
fadds
cs
xor
lods
pop
sub
fs
push
adcb
or
xor
mov
outsb
or
add
call
mov
dec
cmp
cli
push
fsub
push
negb
mov
lahf
fs
mov
mov
jo
xchg
scas
sti
xor
movsl
clc
repz
xor
bound
inc
adc
out
leave
test
push
jp
or
jo
sub
sbb
call
lds
inc
out
xor
xor
subb
aam
mov
add
icebp
adc
incb
subb
mov
jne
fists
jle
inc
cmc
addr16
jl
rcll
rorb
dec
cmp
or
xchg
xor
push
aam
dec
adc
lcall
sub
cld
out
xchg
xor
sub
xchg
jg
mov
out
xchg
enter
dec
fisttpl
jl
movhps
imul
mov
lahf
dec
fdivrp
cmp
outsb
adc
xchg
cmp
lret
out
ror
sbb
inc
lock
pop
pushf
cmp
icebp
adc
cli
sbb
pop
int3
das
scas
push
adc
xchg
popf
iret
inc
jl
sub
and
loope
test
fcoml
inc
xchg
mov
mulb
cltd
aaa
sub
mov
pop
ja
mov
movsl
imul
jne
data16
push
push
inc
add
dec
jmp
insb
mov
jns
and
cld
jns
jl
shr
jl
sahf
lods
hlt
out
inc
xchg
xchg
mov
sub
jae
rsqrtps
js
push
xchg
adc
jbe
pop
xchg
jnp
lock
aas
or
mov
mov
test
jb
mov
push
stos
cwtl
cmpsl
sub
and
lea
lds
cltd
shlb
out
and
pop
mov
outsb
aas
cmp
cmpsl
xor
or
mov
or
fldpi
cmp
sbb
mov
dec
sahf
enter
cmpb
mov
enter
cli
push
inc
mov
cmc
pop
add
cmp
loopne
mov
aaa
xchg
jecxz
or
and
xor
loop
pop
je
sbbl
adc
aas
dec
jl
aaa
cs
fistpll
mov
and
je
sahf
out
inc
and
jmp
mov
xor
pop
push
test
add
add
fldcw
ja
popa
inc
push
outsb
aaa
ss
push
clc
fcoms
popa
test
ret
cmp
leave
inc
push
sets
fcmovb
test
sarb
sbb
dec
sahf
in
imul
mov
cmp
out
mov
jp
fwait
fisubs
or
jo
outsl
dec
icebp
daa
jo
cmpsb
les
rclb
inc
or
loopne
mov
cmpsb
stc
push
pop
fstl
xchg
cmp
pop
pop
insl
add
mov
xchg
inc
test
cmova
sub
daa
aaa
in
jecxz
movsb
scas
jbe
ret
mov
push
mov
or
push
cmp
and
xor
out
xor
data16
or
test
dec
add
or
pop
cmp
cmc
call
mov
ret
add
cs
test
daa
shll
out
cli
push
xor
int3
cld
inc
mov
push
jno
call
sub
mov
mov
arpl
inc
lret
sti
dec
jb
into
cmp
and
pop
and
pop
mov
pop
ja
lahf
adc
sti
push
push
pop
or
add
subb
in
pop
pop
xlat
loop
pop
xchg
addb
or
jnp
js
std
push
adc
cmc
or
out
jo
int3
dec
fsubr
daa
in
jmp
jle
push
or
mov
lcall
add
sbb
ss
and
mov
into
repz
xchg
jnp
add
fnsave
sub
pop
dec
lock
fs
dec
insl
cmc
sbb
add
add
lock
push
mov
or
push
jg
and
mov
rcrb
inc
jmp
les
and
xor
and
push
sub
andb
data16
mov
dec
cli
push
xchg
pop
and
push
mov
hlt
sti
je
pop
ret
jnp
pop
ret
repz
sbb
jne
cmp
inc
push
roll
enter
dec
push
mov
xchg
les
out
into
pop
fidivrl
xchg
cli
out
xchg
and
pop
dec
jb
sbb
int
mov
sub
lcall
xchg
and
clc
aas
jb
faddl
out
stc
adc
push
lcall
jnp
popa
call
movsl
rcl
aad
in
mov
jle
inc
int3
adc
add
adc
imul
lods
mov
push
cld
jp
pop
xchg
pushf
shrl
mov
pop
push
cmp
cmp
outsl
or
adc
jnp
mov
test
int
adc
push
fildl
inc
jp
xchg
ret
push
mov
sub
data16
mov
push
push
mov
in
push
aam
call
add
setl
mov
mov
jl
insb
sub
sbb
or
jl
insb
sbb
or
cld
mov
int3
mov
mov
jl
insb
sub
sbb
or
jl
insb
sbb
or
cld
mov
int3
mov
fmull
sub
sbb
or
jl
insb
sbb
in
shrb
mov
int3
jl
xchg
xchg
sbb
jnp
hlt
movsb
xchg
jecxz
repz
ret
dec
sbb
push
or
sbb
dec
out
mov
fimuls
sahf
fstpl
sub
jge,pn
loope
pop
push
cmp
mov
rorb
mov
addr16
aaa
inc
es
push
mov
push
mull
into
xchg
ret
scas
stos
roll
cmp
sub
dec
ds
inc
fsts
inc
pop
xchg
cmpsb
add
xchg
out
mov
cmp
inc
loop
add
ds
mov
xlat
std
xor
and
mov
popa
inc
xchg
cmp
sub
cs
mov
adc
scas
fldl
mov
outsb
cmp
sarl
add
gs
std
sti
test
jno
cld
mov
sahf
ds
mov
sub
out
dec
out
out
cmp
push
scas
mov
xor
or
aaa
sarl
cmp
std
sbb
jae
mov
mov
mov
sahf
dec
cmpsl
cmp
pop
pop
cmp
insl
push
xchg
int
cmp
imul
mov
xchg
fstpl
sub
pop
or
inc
xor
sub
sti
xchg
call
scas
xchg
fistpl
add
insb
and
inc
adc
pop
push
xor
lods
fcomps
ljmp
cli
cmpsb
or
push
dec
outsb
sbb
insl
push
pop
push
dec
out
mov
fimuls
mov
sahf
int
cmp
pop
or
push
pop
push
dec
out
mov
fimuls
mov
sahf
int
cmp
sub
dec
or
fildl
iret
jge
lds
sti
ret
daa
push
lahf
ljmp
in
xorb
inc
pop
xchg
leave
scas
stos
ds
inc
and
dec
jle
adc
iret
adc
fs
mov
xor
hlt
es
in
jge
xor
scas
mov
or
arpl
ret
mov
or
jno
mov
jg
shl
and
out
pop
outsb
jmp
xchg
mov
pushf
push
rcrb
sbb
push
jg
push
das
mov
mov
mov
pop
pop
and
mov
mov
cmp
mov
popa
sahf
mov
and
lods
fsubrl
std
popf
dec
fstpt
data16
iret
dec
mov
dec
sub
sbb
push
jnp
sub
sbb
pop
cld
fcomp
inc
and
das
mov
enter
stc
testl
mov
fistps
mov
nop
insb
out
sti
jl
loop
repz
pop
es
lahf
int
mov
popf
dec
sti
jmp
in
cli
push
push
sub
lahf
mulb
sarl
shlb
sbb
ja
mov
or
xor
pop
xlat
jo
scas
jge
push
push
mov
leave
fwait
adc
pop
imul
ffree
mov
sbb
int
jo
fidivs
shlb
cmc
aas
imul
rorb
and
jecxz
or
imul
push
es
loope
call
mov
imul
jae
adc
ret
rol
mov
in
fdivl
xchg
push
repz
hlt
lahf
test
fdivl
lcall
pusha
arpl
ficoml
inc
into
jb
leave
lds
jecxz
fstpt
pop
jle
lock
call
cli
cmp
ds
sbb
jmp
lcall
push
fidivs
xor
and
dec
loop
inc
rorl
ds
test
dec
xchg
aam
inc
movl
cmp
arpl
jg
adc
cmovo
pop
test
xchg
outsl
pop
rorl
xchg
stos
ljmp
dec
daa
cli
cltd
xor
mov
iret
pop
fistl
mov
pop
repz
addr16
pmaddwd
int3
bound
cmp
aad
in
lods
and
inc
sbb
adc
aas
dec
adc
push
jecxz
scas
cmpb
flds
rorb
in
xor
dec
loope
jae
test
jmp
mov
mov
mov
add
cmp
add
jg
jno
loope
ret
not
mov
mov
sub
mov
jmp
movsb
shll
inc
popl
adc
movsb
fwait
dec
adc
pop
cli
out
lods
sbb
rcr
rolb
push
and
stos
or
iret
sahf
sarl
scas
and
xor
mov
cmp
dec
mov
pusha
addr16
mov
mov
pusha
xor
imul
mov
push
and
jl
les
cmp
test
pop
jnp
jp
repz
dec
shrl
shll
push
mov
ret
cwtl
xchg
out
aad
or
or
mov
mov
push
mov
or
stos
les
mov
mov
adc
pusha
hlt
nopl
popl
aam
rcrb
sub
daa
mov
push
jmp
mov
arpl
pushaw
xor
dec
add
shlb
popa
jns
call
cwtl
ffreep
jns
and
push
mov
jbe
xor
sbb
insb
js
dec
outsb
pop
cwtl
mov
ja
jmp
and
movsl
and
call
mov
sub
and
jmp
and
mull
inc
test
icebp
leave
testl
inc
mov
jmp
jne
hlt
sbb
loop
jl
mov
or
inc
sti
mov
sub
bound
iret
mov
and
and
daa
fisubl
add
and
or
pop
jne
sub
int
adc
cmp
jmp
mov
std
mov
mov
mull
pop
mov
imul
stos
mov
loop
clc
insl
xor
xor
inc
arpl
fdivl
pop
repz
aam
inc
imul
aaa
out
inc
mov
fsub
cmp
lea
xlat
insb
int3
xor
shlb
mov
outsb
push
movsb
inc
jp
pushf
jnp
jae
and
scas
add
jle
inc
fst
movl
sub
shl
ret
loop
leave
scas
xor
xchg
pop
inc
and
fcomps
push
sti
mov
xchg
hlt
insb
mov
scas
stos
add
ret
stc
pop
inc
ljmp
cli
adc
movsl
dec
iret
shl
sbb
inc
cmpsb
pop
dec
jecxz
mov
and
mov
ja
mov
sbb
or
xor
imul
dec
inc
adc
or
or
sub
xchg
iret
mov
and
rorb
mov
jns
jecxz
cmpsb
adc
sahf
push
ret
das
and
popf
or
out
dec
fmull
xorl
mov
insl
jne
addr16
mov
jbe
in
push
cmp
cmp
out
jg
test
loopew
test
push
test
dec
jae
mov
cmp
data16
leave
add
push
mov
imull
jmp
mov
nop
jle
mov
mov
gs
sbb
movsl
jne
xchg
mov
push
add
and
fimuls
add
dec
loop
dec
mov
mov
hlt
push
fldenv
lcall
pop
jp
int3
lret
arpl
rolb
mov
lods
pop
cli
dec
xlat
push
push
daa
mov
sbb
ds
repnz
push
movsb
mov
outsl
lcall
push
or
std
or
cmp
data16
dec
subl
push
mov
and
mov
add
adc
daa
mov
lods
push
ret
or
iret
clc
and
cmp
rorb
lock
dec
movsb
fidivl
dec
adc
mov
into
lcall
push
repz
pop
scas
in
adc
xchg
enter
xlat
fistpll
jb
pop
adc
inc
shlb
adc
or
xchg
sub
into
and
jo
sbb
mov
cmp
or
movsl
movsl
das
popf
jl
push
insl
ror
dec
push
cmp
stos
push
sahf
in
dec
jae
push
lret
add
insl
in
push
pop
out
and
mov
data16
push
test
cmp
mov
push
jne
add
adc
and
lods
cwtl
pop
es
imul
ret
out
jle
xor
hlt
enter
mov
or
ljmp
xchg
mov
cld
stos
lahf
inc
xlat
imul
push
jb
call
fildll
mov
push
rcll
out
lahf
out
jge
stos
lock
dec
lcall
push
mov
push
cmp
aaa
mov
cwtl
bound
lods
je
mov
addr16
mov
stos
and
in
inc
push
in
sbb
out
and
fdivrl
push
xchg
xor
rcll
push
sbb
xchg
mov
lock
mov
movsl
dec
sar
test
adc
ret
sahf
push
xchg
xchg
addr16
xchg
inc
push
out
fistps
mov
sub
test
xchg
or
or
stc
call
mov
xchg
movsl
sub
push
mov
lahf
loopne
addr16
scas
ret
mov
cmp
lret
outsb
jg
dec
mov
addr16
enter
inc
stc
test
bound
mov
ss
popf
iret
lds
cmc
call
int3
cmpl
mov
lret
int3
stc
jnp
add
out
lret
movsb
pop
sarb
sub
int
movsb
or
push
jne
sti
jne
xchg
dec
leave
es
lcall
stos
cld
lcall
testl
aam
cmpsb
xchg
mov
sti
and
add
jae
pop
dec
xchg
imul
stos
out
dec
push
rolb
sub
nop
xchg
insb
cmp
fcomps
jge
lret
testb
sti
jl
push
fistpll
into
xchg
xor
dec
or
jp
cmp
xchg
xor
les
cwtl
sbb
loopne
or
sahf
outsb
ljmp
add
mov
xchg
sub
and
int
push
test
dec
popa
mov
arpl
insl
mov
fsub
lret
sbb
mov
dec
adc
mov
xchg
cwtl
jg
imul
mov
notl
or
ja
out
into
jne
rorl
mov
mov
js
inc
or
test
inc
pop
pushf
or
lock
xchg
adc
add
mov
lcall
dec
pusha
sbb
xor
lahf
mov
sbb
add
sbb
pop
mov
sbb
mov
pop
addr16
xchg
insb
cli
xor
cmp
frstor
add
out
or
or
aad
xor
shr
shl
cmp
push
jg
mov
aam
fdivrl
cmp
cmp
adc
cmpsl
rorb
js
inc
sbb
aad
adc
inc
fcom
mov
repz
aad
push
ret
mov
into
lret
sub
jns
mov
jp
xor
or
outsb
adc
push
test
out
sub
or
mov
add
xor
jl
mov
scas
adc
mov
push
aaa
mov
mov
icebp
daa
or
popa
xlat
mov
inc
gs
or
aas
push
jge
into
jg
addl
cmp
xor
push
js
sbb
sbb
pusha
mov
cmp
and
jne
jbe
mov
jbe
pop
repz
sbb
xchg
sbb
mov
cmpsb
mov
arpl
fstps
stc
sbb
inc
into
sbb
daa
cs
sub
mov
jp
add
jnp
lods
mov
mov
push
jns
rcrl
loop
inc
dec
xchg
lahf
xchg
cmc
ss
mov
sbb
xor
inc
mov
sbb
jle
subl
push
addr16
insb
into
and
sbb
mov
testb
mov
outsb
out
int
popf
rcll
test
mov
mov
fld
ljmp
pop
jne
xchg
add
test
pop
cmp
sti
pop
sub
push
fcomps
cwtl
cwtl
ret
jbe
shrl
pop
adc
arpl
sub
and
cwtl
mov
mov
mov
shl
cmc
pop
ret
shrb
sti
mov
rorb
mov
ljmp
pop
inc
movsl
scas
dec
xchg
jb
outsb
scas
rcll
in
scas
in
push
rclb
mov
mov
dec
mov
push
enter
enter
mov
push
sub
rcr
mov
add
repz
nop
sti
out
and
mov
cmp
inc
cs
sahf
clc
call
sbb
mov
or
cmp
mov
xchg
sbb
imul
stos
pushl
out
mov
aaa
mulb
pop
jl
push
sbb
xchg
sbb
add
or
dec
push
jg
adcb
and
fst
adc
call
xchg
imul
push
push
sub
movsb
pop
mov
test
mov
jmp
pop
sarl
les
lret
xchg
pop
jmp
stos
mov
fimull
add
insl
mov
cltd
jge
push
imull
push
pop
push
fidivrs
and
jmp
sbb
sbb
je
sbb
ss
aam
xlat
dec
xchg
and
xchg
fiaddl
repnz
mov
mov
enter
adc
in
xor
or
ljmp
lock
stos
pushl
lcall
ret
mov
test
cmc
shlb
ss
dec
jo
arpl
add
dec
sbb
fimull
mov
jne
loop
test
mov
repz
inc
fcompp
sub
sbb
push
out
pop
mov
insl
push
in
cli
subl
out
push
iret
shr
lret
xor
xchg
adcb
sarb
sub
mov
cmp
pop
inc
mov
xlat
push
push
mov
jge
sub
adc
pop
jg
andb
or
cmp
push
loop
mov
andl
jg
pusha
dec
bound
cmp
ss
push
cmp
sbb
mov
in
adc
jl
jno
jl
loop
pushl
xor
xlat
filds
add
or
gs
mov
adc
sbb
lods
inc
insb
jne
jbe
setae
loopne
jb
sbb
xchg
clc
mov
sbb
xor
les
test
bound
iret
mov
in
fidivrl
aaa
sub
xchg
pop
out
stos
adc
jns
mov
nop
out
mov
adc
outsl
repz
repz
mov
xor
negb
fwait
cs
mov
insl
mov
in
mov
movsb
mov
imul
mov
adcl
push
lcall
mov
push
push
imul
cmp
pop
push
cli
int3
jle
stos
aaa
inc
xor
mov
push
sub
cmp
gs
in
sti
rolb
xchg
adc
arpl
mov
dec
addl
dec
xadd
xchg
js
xor
xor
cmp
shll
dec
xchg
sub
add
fisubs
pop
shll
ret
inc
ret
stos
repnz
push
and
loope
movsb
and
pop
loope
ljmp
cli
sbb
push
add
push
inc
push
ficomps
push
mov
int
add
mov
lahf
adc
add
and
in
xor
sbb
out
call
and
mov
shll
mov
cmp
es
sub
jmp
fsubl
je
idivl
xchg
cmp
test
lock
cwtl
pop
push
popa
cmc
xor
adc
push
fnstcw
leave
fwait
into
test
gs
add
lea
push
movsb
pop
fistpll
aas
mov
ret
outsb
mov
mov
das
das
cmpsb
lahf
jg
xor
lahf
int3
decl
jmp
inc
mov
icebp
dec
insb
push
divb
fnsave
es
xchg
or
in
adc
mov
movsl
nop
xor
xor
bound
stos
inc
mov
or
sbb
subl
lret
scas
pusha
lret
adc
add
xchg
xor
xlat
aad
in
out
pop
movsl
fcmovne
add
sbb
lahf
mov
leave
mov
fnsave
fisubrl
push
int
push
or
pop
pop
pusha
les
jne
push
adc
arpl
mov
test
mov
dec
mov
stos
pop
jo
outsb
push
mov
fisubs
je
add
mov
pop
add
inc
movsb
or
out
lcall
repnz
and
push
push
stos
mov
mov
jle
sbb
imul
lahf
out
outsl
push
adc
jb
loopne
loope
mov
out
jae
dec
jge
mov
loop
stos
fwait
jge
xchg
xchg
dec
push
insb
cld
push
call
dec
push
push
aaa
mov
mov
cli
aas
cmp
addl
sub
dec
es
aas
stos
adc
push
jne
adc
cltd
push
mov
and
jg
adc
sbb
mov
shll
push
mov
cltd
and
ss
xor
xor
add
sub
rclb
jmp
push
lods
adc
out
int
push
enter
mov
push
xchg
fsubrl
repz
inc
jo
pop
cmp
loop
jge
xchg
xchg
mov
sbb
test
push
mov
int
jmp
mov
orl
cmp
movsl
adc
mov
rcrl
xchg
out
insl
test
ja
dec
sbb
xchg
pop
or
iret
xchg
lock
in
jno
mov
or
jno
test
sub
mulb
lods
mov
xor
and
into
add
xchg
fadds
inc
cld
xor
push
xchg
pop
push
mov
sub
rorl
lds
pop
mov
gs
cli
lahf
jl
out
ljmp
and
and
jp
xchg
subl
xor
cmpsb
je
mov
cmp
dec
cmp
mov
sbb
adcb
fstpl
cmp
scas
popf
jae
mov
popf
shlb
loop
and
cltd
dec
repnz
or
jmp
clc
daa
orl
xorl
xor
jle
in
dec
shlb
ss
and
push
in
fsubl
adc
and
cmp
or
push
dec
clc
lods
mov
lret
ret
or
dec
mov
test
and
daa
and
nop
rclb
dec
cld
insl
lock
jle
lret
loopne
adc
pop
sub
mov
push
push
add
sar
cmp
test
inc
scas
xor
popf
shrl
cmp
jne
bts
repz
lea
push
idivb
inc
les
clc
cmpsl
daa
lods
test
test
imul
ret
fs
lcall
mov
mov
popa
ret
mov
dec
loop
jge
pop
xchg
pop
sbb
cli
pushl
mov
cli
push
jecxz
jnp
sub
js
hlt
pop
or
popf
dec
xchg
stc
pop
mov
pop
dec
add
dec
inc
es
scas
adc
mov
into
mov
push
jbe
aam
dec
jne
sbb
pop
es
inc
and
lods
sub
sbbb
mov
stc
movsl
xchg
int3
es
mov
mov
jp
mov
xchg
ror
mov
out
cmp
jl
xor
dec
ret
xor
fbstp
push
sub
mov
in
cltd
xchg
ljmp
pop
mov
push
mov
jnp
xor
scas
jno
pop
jb
jne
sti
cmp
out
mov
xor
movsl
dec
xor
in
loope
insb
int
or
stc
push
or
sbb
scas
xlat
and
jmp
movsb
pop
ds
push
loopne
psubb
cmp
sbb
jne
test
mov
rcl
inc
xchg
push
lea
or
jl
mov
call
sub
xchg
xchg
lods
mov
lret
xchg
int
lock
out
stos
sbb
xchg
cmpsl
sbb
mov
cltd
adc
sbb
movzbl
pop
sub
in
lods
mov
out
push
dec
jo
push
pushf
pop
xlat
fidivrs
aaa
in
cli
leave
sbb
jo
adc
xchg
bound
daa
xor
icebp
mov
mov
call
xchg
jle
xor
cmp
inc
les
xor
cmp
negb
inc
movsl
aas
inc
pop
insl
mov
xchg
jge
cmp
imul
fisttpl
mov
jne
sbb
pop
dec
leave
and
sub
jb
xchg
arpl
ret
push
adc
xchg
movsl
int3
fldl
decl
xor
or
xor
cmpsb
add
inc
test
xorb
ljmp
cs
cwtl
daa
mov
repnz
scas
mov
add
out
std
cmp
loop
cmpsl
sub
test
sbb
cmp
inc
out
xor
pop
jmp
outsl
sub
add
push
or
fisubs
daa
sbb
adc
jmp
aas
cli
rolb
pop
jb
stos
hlt
rcll
pop
and
lahf
insb
ss
mov
mov
rclb
notb
sub
fisubrl
stos
cmp
or
lods
jp
pop
leave
in
jo
pop
popf
inc
mov
sub
lods
cld
cmp
jp
jmp
and
adc
xchg
pop
js
dec
and
mov
inc
je
sub
dec
je
jno
jl
sti
in
lods
cmpsl
jns
jnp
inc
push
enter
mov
pop
test
rcl
cld
push
ds
out
dec
mov
pop
jecxz
and
sarl
inc
sub
pop
out
dec
adc
jge
sub
or
lds
shlb
or
cmpsl
shll
nop
xchg
dec
push
add
or
adc
adc
rcll
jbe
mov
dec
mov
lea
jmp
insb
mov
les
fwait
cmpsl
dec
jl
testb
lret
loop
fwait
lcall
mov
test
dec
jnp
push
lea
rorb
movsl
insl
and
cs
bound
pop
jne
sbb
in
mov
dec
mov
or
push
pop
push
dec
out
mov
fimuls
mov
sahf
int
cmp
pop
or
push
pop
push
dec
out
mov
fimuls
mov
sahf
int
cmp
pop
or
push
pop
push
dec
out
gs
lods
into
popf
fimuls
mov
pushf
int
cmp
pop
or
jge
insl
mov
sahf
dec
adc
pop
fs
fdivrp
fnstenv
adc
popa
xor
out
divb
hlt
mov
inc
jnp
dec
data16
sub
jnp
or
sbb
cld
sti
sti
out
imulb
cmpsb
fwait
mov
inc
jnp
das
cwtd
jbe
push
cmp
or
sbb
repnz
loop
shl
ret
divb
cmpsb
mov
daa
push
das
jbe
push
jbe
js
jb
fwait
sti
mov
mov
movsl
bound
pop
addl
data16
pop
add
into
add
jbe
lret
test
imul
test
mov
push
ja
insb
popf
out
xchg
lret
sti
add
sarl
aaa
imul
jle
mov
cmp
xlat
sub
push
loop
xchg
out
jne
inc
dec
cwtl
pop
mov
fdiv
pop
or
sub
xchg
fwait
pop
mov
arpl
test
lcall
xchg
jecxz
or
cs
push
adcl
xor
xchg
mov
pop
jbe
stc
sub
jmp
sbb
sub
sti
lret
out
idivb
cmpsb
xorb
inc
jbe
push
and
or
add
stos
sahf
add
iret
jmp
test
sub
cmp
xor
outsl
outsb
movsb
jle
jmp
sti
pushf
scas
out
mov
out
fidivs
push
xor
sbb
dec
jns
push
sbb
xchg
leave
mov
shr
mov
mov
inc
jnp
dec
pop
jbe
push
cmp
or
sbb
jmp
sti
lret
out
imulb
cmpsb
fwait
mov
inc
jnp
dec
pop
jbe
push
cmp
or
sbb
jmp
cmp
xchg
adc
daa
test
xorb
enter
xchg
mov
insb
xor
xlat
mov
xlat
sbb
aaa
popa
sub
push
in
movsb
push
fdivs
pop
add
or
in
dec
clc
push
ret
ror
fidivs
movsb
sub
mov
cmp
inc
fwait
lods
push
mov
cwtl
push
and
xor
dec
out
hlt
ret
orl
data16
movsb
fildl
sbb
dec
mov
leave
dec
push
hlt
daa
cmp
shrb
out
or
pop
sub
lcall
xor
jbe
and
out
scas
xor
and
pushf
in
add
je
movsb
loopne
cmp
in
aam
cmp
ja
mov
dec
inc
inc
mov
imul
cmp
add
jle
cli
stos
mov
int3
es
aam
pop
pop
scas
jae
jp
inc
pop
sub
xchg
gs
cmp
stos
sub
lret
fs
popf
jb
cmp
push
mov
sbb
jne
mov
jge
out
in
lcall
cmp
in
mov
ljmp
mov
insb
mov
mov
mov
mov
add
dec
aaa
pop
test
cmp
lds
outsl
xchg
arpl
xlat
lret
js
jmp
les
repnz
jbe
cmp
adc
les
xchg
mov
test
insb
jo
pop
mov
sub
clc
add
push
push
outsl
jbe
mov
repnz
and
or
dec
out
dec
scas
int3
add
mov
or
xchg
adc
aad
inc
adc
daa
icebp
push
mov
jb
dec
cltd
arpl
mov
or
scas
aaa
js
mov
in
pop
shll
jae
pop
push
pop
fmul
inc
sub
shll
inc
mov
jo
decl
xchg
and
sti
cs
fcoms
pop
jmp
cmpsb
shrb
out
popf
and
mov
pop
sub
das
arpl
mov
lds
mov
dec
test
outsb
add
xlat
xchg
shr
sbb
inc
mov
and
cmpsl
mov
arpl
fcomi
adc
lret
sbb
pop
sub
jno
push
hlt
jae
or
sbb
xor
aas
divl
sub
sahf
gs
int
sub
enter
mov
sti
xor
mov
sub
adc
inc
jp
and
and
dec
mov
sahf
int3
test
adc
loope
jge
xor
and
sarl
xchg
mov
aaa
iret
jae
and
inc
pop
cmp
lods
sub
add
xchg
mov
fs
push
pop
sub
xor
mov
xchg
jmp
clc
lret
push
and
sub
or
inc
pop
std
in
sbb
inc
xchg
daa
mov
mov
stos
lods
mov
stos
shl
je
cld
into
sbbb
daa
pop
test
pop
xchg
hlt
mov
sbb
dec
push
xor
push
push
cmpsl
adc
lds
adc
jns
out
repnz
adc
shll
mov
cmp
gs
imul
popf
daa
outsb
cmp
cwtl
popl
dec
mov
sbb
cmc
test
ret
cmp
mov
loope
jnp
sub
ljmp
mov
jnp
dec
mov
fld
and
add
iret
loope
add
dec
sub
xchg
pop
in
je
mov
jns
repz
or
xor
test
push
sub
ss
mov
ret
leave
lahf
pusha
pop
push
pushf
ret
push
cmc
or
fwait
in
pop
jnp
or
lods
pushw
pop
imul
out
fmull
outsl
mov
dec
mov
jb
ret
xor
fmuls
mov
fs
jp
mov
fidivrl
pop
xchg
aad
clc
adc
lock
xlat
mov
and
jne
mov
test
imul
sub
push
push
popf
mov
js
pop
xlat
sti
jb
decb
jge
es
mov
sbb
sbb
outsb
ss
lds
icebp
cmp
inc
in
call
sub
and
lods
je
jp
js
sbb
repz
fsubl
xchg
cmp
mov
stos
bound
sub
or
das
xchg
inc
mov
pusha
cmp
fucomip
xchg
mov
mov
sub
pushl
and
push
lret
sbb
cmp
sub
nop
xchg
ret
fnstsw
loop
jne
int3
mov
test
push
stos
aaa
fsubl
loop
ja
pop
and
and
jbe
mov
fs
adc
xor
pop
stc
in
cmc
int
scas
cwtl
inc
inc
inc
jbe
test
xor
pop
int
jbe
mov
test
insl
test
adc
mov
clc
inc
pop
cli
test
je
mov
daa
pop
enter
xorl
pop
pop
xchg
fists
pushf
push
mov
adc
rorb
and
jp
xor
cs
test
imul
mov
out
bound
sub
dec
inc
test
iret
nop
rcrb
xlat
push
out
and
call
outsb
xor
lret
jmp
loop
sub
mov
les
out
lds
loope
out
mov
ret
cmc
jecxz
or
mov
lods
dec
mov
jl
inc
mov
mov
cmp
test
out
in
aam
xchg
stos
xchg
inc
jg
mov
cli
es
cmp
and
mov
jmp
adc
cmc
adc
and
dec
iret
daa
outsl
roll
mov
out
jge
jecxz
jp
jae
adc
imul
inc
std
lcall
sub
movsb
mov
movsb
push
xchg
sbb
adc
jae
divl
in
cmc
lahf
lds
imul
outsb
jp
jl
stc
aaa
mov
xor
mov
ret
and
pushf
mov
xchg
insl
insb
test
xlat
xchg
adc
out
jle
adc
or
imul
mov
mov
add
sub
xor
xor
xchg
inc
fmuls
sbb
jno
mov
setle
test
pop
imul
mov
out
inc
and
ds
jl
push
rol
repnz
test
daa
mov
or
dec
mov
mov
pop
clc
shll
fld
mov
adc
add
aam
lds
jne
pushf
in
popf
lods
jg
jb
popf
mov
stc
iret
daa
leave
sbb
in
loope
ja
mov
or
jmp
mov
ret
ror
mov
iret
arpl
mov
roll
cmp
mov
loope
out
mov
xchg
mov
icebp
loopne
xchg
xor
ret
mov
dec
jnp
adc
add
xchg
sahf
outsb
fcoml
sbb
fsubrl
repz
shll
adc
xchg
rclb
mov
daa
ljmp
add
mov
lea
into
call
imul
mov
cltd
cmc
cmpsb
std
jg
sub
mov
ss
xor
push
inc
js
mov
or
fs
std
sysret
hlt
mov
es
in
enter
dec
out
dec
lods
xchg
xor
sub
shrb
xor
cs
inc
icebp
xor
pop
mov
int3
and
mov
sar
cwtl
and
jmp
or
das
loop
and
inc
add
cmc
mov
push
mov
push
and
in
xor
jge
lods
dec
repnz
outsl
aam
ficomps
sub
fisubs
push
pop
jnp
adc
cmp
sti
pop
ds
push
mov
mov
or
mov
repz
inc
cmp
or
aam
adc
mov
pusha
fs
int3
dec
mov
dec
lods
ret
out
je
mov
mov
jo
clc
mov
push
out
fwait
test
shlb
rcll
push
int
or
fscale
cmp
ret
stos
negl
data16
outsl
test
pop
push
sbb
js
aad
xabort
sbb
dec
pop
mov
xor
xchg
sub
sbb
jmp
pop
hlt
jge
mov
fnstenv
add
adc
fisubl
and
mov
inc
pop
and
mov
pop
push
push
shrb
stc
or
mov
adc
jecxz
mov
repz
cmp
into
mov
sti
ljmp
cli
dec
cmp
mov
mov
dec
clc
jo
jne
push
xor
mov
jns
dec
aam
pop
pop
fs
ret
gs
aad
jg
roll
test
lahf
mov
into
pop
cmpsb
dec
in
sbb
cld
ret
shr
xchg
insb
sub
jecxz
cmp
icebp
js,pt
jl
mov
subl
jae
mov
ret
push
and
pop
xor
inc
aaa
imul
into
pop
fsubr
jae,pn
cli
pop
addl
ds
ficoms
pop
out
adc
clc
xchg
rclb
mov
jae
lahf
mov
pop
jae
xchg
mov
dec
clc
fstpl
pop
sbb
mov
dec
inc
jns
mov
mov
int3
nop
int3
lock
add
aad
clc
pop
lretw
dec
mov
icebp
rcll
scas
xchg
outsb
push
push
ljmp
adcl
cmp
test
insb
inc
push
fwait
mov
cmp
or
mov
outsb
adc
dec
pop
inc
xchg
push
cmp
aad
jne
aam
push
out
cltd
push
clc
fstpt
aam
mov
inc
fists
jle
and
dec
int
jbe
clc
in
mov
insb
xacquire
rcrb
andl
lock
ret
in
and
mov
jae
in
test
cwtl
mov
jno
dec
lret
int3
and
sbb
lret
mov
call
movsb
sub
push
loop
xor
sbb
push
mov
clc
movl
cmpsl
add
or
icebp
mov
mov
testl
push
or
push
mov
add
addr16
rorb
push
jmp
mov
pusha
lds
add
mov
and
jmp
push
je
subl
jg
push
jno
cwtl
mov
xchg
out
inc
cmpsl
pop
inc
aas
jne
sub
jp
sti
jmp
xor
mov
sub
cmp
clc
fimull
cmp
pop
push
cltd
xor
ja
sbb
shr
inc
inc
adc
ror
jmp
rorl
mov
jo
lret
push
test
fistpll
pop
and
push
out
insb
xchg
repz
test
push
and
xchg
cmp
in
in
sub
xchg
imul
add
mov
out
ljmp
sti
jmp
lcall
sub
adc
sub
push
aaa
setl
sbb
mov
pop
outsl
sub
jbe
mov
int3
or
lock
sbb
nop
mov
push
aam
xchg
dec
sti
or
or
sbb
or
cmpsb
or
aam
imul
jne
stos
and
test
sub
std
lahf
dec
cmpsl
mov
cmp
pop
out
xchg
dec
imul
mov
cmpsb
rcll
fucom
jbe
jge
out
inc
pop
pusha
loopne
decl
call
int3
sahf
mov
pushf
push
cmpsb
adc
xlat
or
inc
pop
ret
dec
mov
push
and
jecxz
test
bound
jb
mov
add
out
add
sub
mov
jne
iret
ret
inc
xchg
stos
cwtl
out
ret
es
cs
cld
inc
cli
in
mov
popf
rcll
cwtl
xor
sub
icebp
adc
std
jg
jge
adc
mov
mov
ss
nop
sti
ljmp
mov
cmp
pushf
rorb
bound
mov
or
pushf
sbb
icebp
pop
stos
mov
push
sbb
sbb
fstps
adcl
movsl
call
or
adc
push
pop
and
inc
scas
jbe
scas
mov
xchg
xchg
sub
div
sahf
add
ljmp
jns
or
ds
movsb
xchg
cmp
imul
pop
xchg
fbstp
mov
dec
les
fnstsw
insl
popa
mov
and
sub
mov
ret
xor
mov
ljmp
fistpl
mov
adc
ja
into
mov
push
js
dec
lret
loope
divb
enter
neg
je
dec
mov
nop
out
sub
inc
push
mov
lret
fwait
push
xchg
lods
std
arpl
cs
xor
sbb
adcb
popf
lea
and
andb
pop
js,pt
cmp
mov
rcrb
in
outsb
mov
lret
sub
mov
mov
cmp
int
jg
int3
adc
js
aad
cltd
mov
sub
inc
repz
push
xor
xor
push
jmp
jle
xchg
dec
jno
subl
mov
mov
mov
jno
stos
inc
lret
adc
jne
out
push
pop
mov
std
sarl
inc
pusha
pop
mov
mov
cs
loopne
mov
pop
test
mov
lods
and
pop
aaa
orb
mov
mov
xor
ljmp
or
repnz
dec
ret
jae
cmp
sub
js
dec
ss
jp
fmul
and
xor
int
into
xchg
and
cmp
mov
adc
fdivrs
das
cmp
sbb
xor
jmp
dec
pop
sti
movsb
addr16
jle
mov
lods
jb
out
pop
mov
push
xor
push
inc
push
xor
fldl
inc
mov
add
rcrb
mov
lods
jnp
ret
jmp
test
gs
jge
push
test
lock
fldl
std
add
call
in
adc
ljmp
fsubrs
mov
call
jmp
xchg
pop
aas
inc
aas
or
xchg
setns
cmp
cli
mov
adc
inc
cmc
ljmp
cld
pop
aaa
insl
ljmp
out
cmp
cmc
inc
imul
jno
out
lret
shlb
pop
cwtl
stos
sti
daa
mov
pop
pusha
sub
leave
cmpsb
sub
xor
outsl
lahf
nop
push
pushf
test
in
pop
outsb
test
cs
movsb
gs
leave
loopne
adc
pop
es
lods
xchg
pushf
add
out
mov
lods
push
popa
jne
cld
push
nop
add
dec
out
outsb
fwait
mov
jge
cmp
xchg
push
dec
call
scas
aaa
cmp
mov
cli
out
cvtps2pd
mov
vcvtpd2psx
sarl
negl
cmp
out
mov
push
push
cli
ljmp
xlat
lds
mov
sbb
outsl
mov
icebp
int3
fdivl
outsb
in
dec
or
or
inc
xchg
out
lcall
icebp
push
mov
sbb
pop
aas
pop
ss
fsubr
lock
mov
add
rorb
mov
mov
ljmp
pusha
out
cmpsl
out
lods
or
fwait
aam
js
jmp
xchg
repz
sub
and
pop
jnp
movsb
gs
scas
sub
add
popa
fcom
sbb
out
mov
repz
aad
js
dec
mov
sub
cmp
ljmp
pop
clc
and
lea
dec
sbb
ss
sbb
lea
sub
test
jl
mov
mov
clc
mov
cmp
sbb
xlat
dec
inc
cltd
xchg
jmp
pop
jnp
cmpsb
pop
jns
enter
dec
mov
jae
mov
add
xchg
pop
dec
sbb
sbb
xchg
iret
push
test
inc
lock
or
inc
scas
cld
enter
jecxz
enter
xchg
fwait
popa
jbe
xor
inc
jle
jo
mov
sub
xorl
push
xchg
xchg
xchg
jnp
movsb
outsl
out
or
aaa
jae
mov
ss
mov
in
insb
xchg
std
dec
inc
fidivs
xchg
inc
inc
movsl
mov
jo
and
hlt
push
js
dec
add
cmp
imul
add
push
cmp
fs
mov
mov
pop
jns
addr16
sti
test
push
div
push
pop
lret
popa
jmp
movsb
pop
aaa
xlat
out
lods
mov
cmpsl
jno
sub
out
scas
push
jnp
ljmp
loop
out
inc
dec
sbb
xchg
je
fst
jbe
adc
pop
jb
fisubrl
into
xlat
and
add
in
sub
enter
push
push
xor
outsb
mov
int3
dec
pop
loopne
mov
sbb
into
sti
in
and
mov
push
daa
sbb
mov
stc
sbb
fildl
mov
and
mov
je
sub
icebp
clc
pushf
stos
xor
pop
hlt
pop
movsb
push
push
std
add
data16
repz
std
dec
push
insl
add
jecxz
arpl
setno
stos
rcr
push
and
or
mov
in
dec
push
push
pop
aam
xchg
jecxz
and
out
dec
sub
lret
repnz
out
dec
add
cmpsl
data16
repz
xor
push
loopne
repnz
imul
popa
das
enter
cld
xor
les
es
out
shrl
mov
and
outsl
nop
test
cwtl
dec
xchg
mov
decl
xchg
sub
push
data16
ja
add
stos
repnz
xor
call
adc
pop
jmp
movsl
out
dec
xchg
add
test
mov
sti
imul
jb
add
pop
and
sbbl
cmp
mov
fs
mov
xor
mov
cmp
rclb
dec
cmp
xchg
and
mov
mov
push
jo
jbe
and
imul
mov
mov
sarl
movsl
adc
pop
add
addb
adc
cwtl
jno
pop
int3
or
adc
pop
xor
xchg
flds
add
aam
or
sub
enter
adc
pushf
pop
adc
int
add
or
pusha
lods
mov
xchg
push
xor
jns
ror
sub
pop
xor
xchg
inc
popf
in
add
inc
xlat
daa
jg
cmp
rolb
imul
pop
mov
dec
push
lods
mov
mov
andl
add
lret
jae
leave
cmp
lcall
les
iret
adc
mov
int3
outsl
loop
jns
testb
jge
sti
adc
ljmp
pop
lock
mov
popa
mov
jne
cmp
push
dec
cmp
mov
sub
data16
sbb
inc
pop
sbb
sub
and
sub
lcall
movsb
mov
jbe
int
imul
mov
repz
push
sub
cwtl
jg
aaa
dec
dec
cmc
and
cmpsb
out
popa
int3
xlat
adc
shrl
push
mov
orb
inc
xchg
addr16
jp
pop
cmpsl
out
inc
mov
scas
fldenv
sub
addr16
gs
cmp
push
in
mov
scas
int
das
push
andb
addb
std
movsl
bound
fdiv
and
rcrb
aaa
pop
sbb
outsb
test
pop
inc
adc
arpl
cwtl
popf
call
pop
dec
or
ret
or
jo
push
stos
aaa
pushf
xchg
test
ja
cmp
inc
pop
add
mov
or
add
sbb
mov
or
and
push
add
test
fdivs
out
or
fiaddl
cltd
pop
cli
jo
push
sbb
aam
test
les
xor
into
or
cli
add
inc
aaa
mov
sbb
xchg
mov
insl
repnz
in
inc
push
scas
rolb
fnstenv
fbstp
lahf
fsubrs
aam
aaa
shlb
lea
stos
dec
pushf
adc
and
test
mov
ja
adc
sub
gs
test
pop
mov
jle
inc
lock
xor
cmp
and
lods
jno
clc
jge
in
mov
mov
fs
cli
mov
inc
jecxz
sahf
pop
inc
icebp
mov
idiv
arpl
add
pop
mov
jno
sub
in
aam
pusha
fucomi
xor
loope
adcl
inc
addb
push
jl
or
mov
pop
jns
sahf
lret
fyl2xp1
and
loop
mov
cmp
fwait
push
in
jp
cmp
out
add
adcl
popa
sbb
je
daa
push
popa
pop
std
test
mov
inc
or
out
xlat
mov
sbb
adc
fs
push
leave
dec
pop
mov
pop
jle
icebp
mov
mov
dec
dec
outsl
in
jnp
pop
jns
fcomi
stos
xchg
mov
inc
jnp
dec
pop
jbe
push
cmp
or
sbb
jmp
sti
lret
out
imulb
cmpsb
fwait
mov
inc
jnp
dec
pop
jbe
push
cmp
or
sbb
jmp
sti
lret
out
imull
cmpsl
fwait
mov
inc
jnp
dec
pop
jbe
pop
aas
push
or
sub
ffreep
iret
std
out
repnz
xchg
dec
xchg
mov
pop
add
jmp
cmp
fwait
stos
push
fcmovu
jmp
xchg
mov
add
cmp
sub
jp
pop
imul
fwait
mov
stos
jmp
sti
lret
lret
sti
fisttpl
push
sbb
imul
dec
dec
jnp
imul
fwait
stos
jmp
sti
lret
lret
sti
fucomi
sub
cmp
push
jle
or
xor
fcmovnbe
mov
into
pusha
popa
clc
call
testl
out
ds
shrb
rcr
es
popa
pop
or
hlt
push
les
adc
mov
dec
test
insb
out
xchg
jno
inc
and
or
in
aad
mov
cmpsl
insb
push
mov
std
jmp
xlat
lret
sub
fisttpl
cmp
std
hlt
or
repz
mov
stos
pop
push
push
imul
je
inc
mov
lret
stos
fucomi
inc
in
push
pop
les
sub
or
pop
into
adc
add
xor
jno
aam
in
movd
aam
dec
jnp
dec
jnp
xchg
hlt
fwait
mov
stos
jmp
sti
lret
lret
sti
fucomi
sub
cmp
or
sbb
imul
dec
jnp
sub
out
aad
test
sahf
mov
inc
imul
pop
das
aaa
or
or
push
hlt
idiv
out
repz
mov
mov
jns
pop
jle
and
or
sbb
inc
aas
fstp
xchg
fsubr
fidivrs
lret
lret
sti
fucomi
sub
cmp
or
sbb
imul
dec
jnp
imul
fwait
stos
jmp
sti
lret
lret
sti
fucomi
sub
cmp
or
sbb
imul
dec
jnp
imul
leave
insb
cwtl
cs
mov
or
mov
cld
push
sub
push
sar
mov
stc
sbb
scas
adc
fnstcw
ja
push
and
pop
das
loopne
pop
in
dec
popa
or
pop
bound
adc
icebp
dec
bound
inc
xlat
adc
sbb
xchg
ljmp
sub
loop
jg
cmp
mov
inc
mov
xchg
and
mov
jge
pop
mov
and
jecxz
cli
nop
insl
aam
sbbb
cmp
mov
or
das
rcrb
cs
adc
roll
hlt
imulb
fmull
pop
sub
jle
clc
dec
fsub
clc
adc
mov
and
push
pop
jp
or
dec
fidivl
popa
loop
xchg
jnp
push
xor
lods
mov
xor
jmp
decb
xchg
lods
push
xlat
pop
fs
jae
in
filds
into
push
mov
sub
out
ret
adc
and
lods
pop
iret
enter
sub
push
inc
ficompl
adc
aaa
loope
push
mov
cmc
jb
movsb
stos
jne
inc
inc
aas
dec
jne
and
and
ret
sub
pop
xchg
pushf
jge
rcr
or
or
push
fdecstp
scas
jle
leave
movsl
push
pop
sub
into
lcall
adc
inc
movsb
js
mov
jae
pop
decl
inc
call
mov
outsb
add
cmp
orl
xchg
sbb
enter
fsubs
in
inc
push
out
mov
loope
aam
mov
popf
pop
ror
mov
pop
ja
xchg
aam
cltd
and
in
inc
loopne
and
mov
sbb
stos
rcrb
sbb
adc
pop
fwait
out
frndint
mov
push
jbe
and
mov
fildll
xchg
call
xchg
pop
mov
std
pop
pop
leave
fbld
mov
push
inc
pop
int
cmp
fldenv
or
mov
scas
rcl
in
je
push
inc
mov
push
cmp
nop
insl
xchg
pop
enter
cmpsb
fidivrl
mov
and
rolb
xchg
pusha
pop
or
pop
arpl
adc
inc
jb
push
jl
sub
fs
jl
cmp
dec
push
push
push
cmp
pop
out
cmpsl
insb
inc
mov
fwait
out
or
inc
mov
clc
enter
add
inc
mulb
ljmp
jns
mov
in
sahf
push
push
push
pusha
cld
and
inc
aad
push
movsl
arpl
jmp
sbb
xchg
inc
xor
mov
fcomip
and
rcl
or
pop
roll
pop
ret
mov
jg
cmpb
push
sbbb
jp
inc
jge
aas
popf
sub
mov
lock
les
fs
sub
push
inc
mov
cmp
aaa
or
push
dec
std
outsb
mov
bnd
ss
iret
mov
cs
adc
or
mov
and
leave
mov
jle
push
adc
or
andl
sbb
add
ds
out
iret
add
into
jge
icebp
stos
adc
push
in
mov
xlat
cs
aas
pop
xchg
insb
mov
fldl
imul
nop
lea
sub
lea
cmp
lock
loope
lods
mov
or
and
inc
and
js
jmp
pop
pop
shlb
push
jnp
xchg
or
icebp
gs
sub
popf
jmp
dec
je
xchg
lods
push
xor
mov
popf
sbb
hlt
leave
mov
pop
hlt
sub
inc
and
jbe
adc
mov
insb
pop
mov
mul
pmovmskb
arpl
out
or
add
mov
mov
xor
int3
sahf
loope
mov
xchg
xor
and
repz
dec
xor
aas
cs
sub
dec
push
std
cmp
std
pop
lret
insb
nop
imul
imul
inc
fldenv
xchg
sbb
mov
and
mov
jne
frstor
mov
push
cmp
mov
jl
pop
mov
jle
mov
loop
popf
cmpsl
aad
xchg
cwtl
xchg
dec
outsl
in
mov
or
in
mov
pop
xor
addr16
adc
fld1
or
imul
aam
fmuls
repnz
pop
out
lods
in
lods
or
lahf
jo
rorl
dec
pop
adc
xchg
sub
mov
sbb
fcmovne
decl
xchg
lods
dec
push
cltd
or
fidivl
rorl
loopne
mov
jns
push
or
sub
enter
in
flds
jmp
mov
mov
mov
out
xchg
jmp
mov
push
outsl
addl
lret
push
stc
test
pop
cmp
mov
mov
icebp
inc
lods
cmp
dec
pushw
std
lcall
push
cli
pop
xchg
push
fs
jo
xlat
jo
leave
inc
divl
push
xor
cmpsl
jp
xor
jecxz
and
std
rolb
jp
xor
adc
leave
daa
imul
repz
push
in
scas
stos
pushf
mov
adc
pop
aaa
cmpsb
pop
xchg
ljmp
xchg
ljmp
inc
repnz
sub
jecxz
pop
xchg
inc
dec
push
mov
xchg
fs
outsl
arpl
mov
cmp
or
xor
insb
loopne
push
ficoms
cmp
fidivrl
push
arpl
scas
loope
fwait
or
outsl
sbb
mov
or
cs
fildll
fstpl
jno
lods
cmp
loop
pop
mov
xchg
leave
jle
daa
movsb
pop
pop
sub
push
cmp
je
orb
xlat
adc
or
loope
leave
sbb
inc
in
mov
pop
stos
test
push
push
stos
mov
outsl
ljmp
jo
scas
dec
inc
lods
xchg
fdivr
xchg
mov
and
loop
int3
cmp
ret
les
test
push
cmp
sahf
cli
paddusb
push
mov
or
cmpsl
lret
ds
ret
cmpsl
imul
je
inc
cs
cmp
roll
movsl
scas
cmc
aas
cs
adc
pop
mov
push
movsl
rcrl
jp
andb
cmpsl
sti
push
fstl
fstl
in
mov
mov
notl
pushf
inc
int3
sbb
arpl
mov
pop
push
out
push
cmc
or
or
lods
jno
addb
or
je
mov
mov
stos
inc
mov
sub
mov
add
cs
loope
loop
pop
jmp
pop
fimuls
lea
push
adc
mov
imull
dec
cmpsl
cltd
jne
inc
aas
or
inc
jnp
inc
push
xor
xchg
inc
mov
scas
pop
fld
jmp
rorb
mov
push
adc
outsb
les
cmp
inc
loope
inc
fstpl
push
lods
pop
movsl
aad
adc
xor
jge
mov
in
dec
jg
jae
loop
data16
out
xor
mov
negl
adc
hlt
pushw
push
inc
inc
add
jno
dec
faddl
icebp
test
mov
and
test
or
inc
lock
test
sbb
pop
mov
sti
shrl
pop
cmpl
es
in
and
jbe
push
aaa
fsubrl
sbb
movsb
mov
je
xlat
in
mov
popa
ja
pop
xchg
sbb
xlat
in
lods
xor
xchg
push
sbb
popf
pop
in
lds
cmpsb
cld
testb
sub
or
fistl
clc
dec
dec
dec
mov
fimuls
xlat
mov
fs
pushl
leave
pusha
dec
test
sahf
jg
test
jecxz
clc
pop
inc
inc
test
mov
inc
dec
jnp
pop
sub
cmc
push
call
xchg
or
cwtl
lods
xchg
inc
inc
shrl
orb
je
pop
outsl
mov
mov
sarl
push
or
je
test
dec
adc
stos
add
jmp
lcall
leave
mov
sbb
mov
xchg
dec
push
in
call
jmp
mov
push
jae
xlat
adc
sub
push
mov
mov
sub
fucomip
loop
stos
fs
nop
and
inc
into
jbe
call
out
data16
mov
in
add
pop
add
je
out
and
sbb
or
xlat
add
js
xchg
popa
jnp
dec
and
pop
pop
or
push
scas
movsl
dec
mov
mov
out
popf
sub
mov
lcall
inc
mov
lock
mov
lcall
pop
dec
fwait
pop
cmpb
mov
movsl
into
inc
push
pop
jge
jecxz
aaa
in
xchg
inc
cmp
mov
div
test
mov
xchg
mov
jbe
push
cmp
jl
add
cmp
int3
xchg
pop
xor
cmpsl
addr16
in
gs
cmpsb
adc
cmp
les
fdivrs
push
xchg
leave
mov
hlt
dec
jnp
stc
lock
cmpb
jle
xor
ss
add
mov
nop
xor
leave
add
and
test
mov
stc
enter
mov
and
aas
cmp
sbb
test
inc
enter
test
into
fcom
into
arpl
cld
ret
jp
and
push
pop
and
adc
es
testb
mov
xor
mov
aam
rorl
fidivs
and
pop
xchg
jne
rcr
les
cmc
pop
lods
addl
icebp
xlat
mov
add
push
push
inc
inc
in
sbb
setp
outsl
or
or
in
push
cmpsl
lods
cmp
enter
jo
dec
or
push
push
push
xchg
add
xchg
repz
js
cmpl
add
popa
pop
jnp
xor
sbb
mov
je
xor
jae
sbb
sbb
mov
xor
xchg
fnstenv
and
ljmp
ret
cmp
inc
ds
jns
ret
cld
jl
cwtl
fistps
out
mov
mov
shlb
in
dec
jb
dec
lahf
xchg
imul
or
daa
cmp
mov
cmc
scas
jmp
add
hlt
repnz
cmp
aam
add
inc
inc
outsl
je
dec
lock
jnp
push
lret
jecxz
stos
rcll
sbb
pop
lcall
insl
orl
xchg
in
cmp
jnp
xchg
fdivl
arpl
jns
pop
fcoml
inc
ror
hlt
jns
xor
pop
and
cltd
xorl
and
adc
jns
fldl
add
xchg
test
sub
loopne
cmp
fstps
mov
aaa
lods
adc
add
push
mov
out
mov
je
mov
lcall
loope
nop
test
pop
shll
enter
out
inc
sub
push
popf
mov
gs
aad
sbb
sbb
in
repz
and
xlat
push
aam
orl
into
jo
and
mov
xchg
pop
sub
pop
and
pop
fstl
pop
mov
pusha
loop
jmp
enter
outsb
outsb
lea
sbb
pop
lea
dec
pop
xchg
popa
insb
sti
into
pop
sbb
push
add
add
mov
mov
jo
sub
xchg
dec
push
je
mov
and
pop
jp
hlt
pop
lds
pop
mov
mov
je
ret
pop
in
inc
dec
cmp
lcall
cwtl
fisubl
push
stc
icebp
cmpsb
mov
sbb
ljmp
adc
xlat
sbb
in
sbb
arpl
sbb
inc
push
add
mov
dec
loopne
adcb
lods
dec
cmp
dec
inc
jb
mov
pushf
shll
add
negb
mov
das
rcll
jecxz
cmpsb
xchg
scas
cmp
outsb
popa
or
out
in
push
insl
ljmp
adc
sub
fimull
xchg
mov
in
sbb
mov
jns
sbb
das
shl
test
or
lods
jmp
dec
jbe
pop
mov
dec
or
mov
js
add
int3
jp
or
dec
rorl
mov
lods
mov
push
out
in
loope
sbb
jmp
push
pushf
push
aas
sbb
sbbl
aad
es
mov
adcb
in
stos
adc
ror
cmp
mov
clts
inc
out
fstpl
xor
jmp
pop
adc
inc
adc
clc
test
cmp
repnz
test
or
mov
pop
inc
push
cwtl
mov
mov
jo
cmp
and
loop
inc
lds
mov
and
xor
fadds
mov
test
test
add
fidivs
add
aaa
inc
int3
xchg
xchg
cmpsb
divl
cwtl
mov
divl
loop
imul
jae
call
dec
dec
lods
pop
jb
cmp
jmp
jnp
xchg
sub
xchg
ss
cwtl
daa
adc
jnp
jmp
cmp
and
scas
push
lods
insb
test
fsub
fsubrs
sub
lret
and
outsb
movsb
and
jns
pop
ss
outsb
sti
lock
sbb
loopne
inc
lcall
aam
and
jo
add
jno
pushl
lcall
ss
adc
enter
cltd
lret
sbb
mov
insl
xchg
push
outsl
inc
aam
add
hlt
push
adc
stos
sbb
rorb
jg
xlat
outsb
testb
push
sahf
xchg
cs
ss
orl
add
xchg
xor
ret
mov
pop
loopne
lds
inc
loopne
push
leave
mov
pop
sahf
sbb
das
dec
jecxz
inc
scas
aam
sti
push
outsl
mov
push
pop
xchg
add
aad
lock
testl
lds
mov
dec
mov
ja
jge
ret
jae
stc
or
ja
pop
outsl
fwait
rorb
and
fimuls
sub
push
lcall
out
add
xorb
ljmp
in
insb
xchg
push
std
mov
xlat
sbb
rorb
inc
in
push
pop
xchg
lock
jns
mov
mov
aad
add
dec
push
outsl
dec
cli
push
add
lea
add
out
cmp
pop
neg
sbb
jecxz
add
lahf
xchg
incb
movsl
roll
xchg
stos
push
insb
das
sbb
nop
cld
std
mov
sub
push
sub
movsb
mov
stc
push
cs
dec
or
sbb
mov
lea
xorb
ss
ret
call
ret
add
inc
pop
je
call
aad
popf
stos
inc
lods
jbe
cmp
mov
repnz
push
rcl
outsb
dec
pop
pop
popa
aaa
inc
sbbb
sbb
das
popf
cmpsb
inc
test
cmp
or
dec
jb
andl
pop
adc
push
inc
cld
pop
mov
xor
xchg
sbb
in
sub
and
xor
cltd
stos
sub
and
ss
jp
fidivs
and
xchg
sbb
jl
lods
into
mov
push
pop
cmc
fs
in
or
or
out
lret
or
out
xor
dec
popf
push
outsb
xchg
dec
test
or
dec
fcomps
sub
xchg
test
stc
or
popf
leave
push
fwait
push
ret
fstpt
iret
scas
and
xor
jecxz
add
xchg
out
dec
cmp
aas
out
pop
aad
dec
andb
icebp
pop
cli
sub
insl
sarb
inc
js
lods
or
dec
sbb
pop
aaa
or
and
cmp
sub
jnp
mov
pop
incl
repz
clc
fldenv
andl
pop
data16
daa
out
jp
imul
dec
mov
push
stc
mov
jae
notl
mov
push
xor
jmp
stos
cmp
lock
adc
mov
lcall
jno
aaa
inc
into
outsl
stc
sahf
ja
shlb
dec
inc
aaa
sbb
jo
int3
pop
mov
sbb
xor
jnp
iret
mov
ret
mov
fisubrl
inc
out
lods
es
cli
push
cli
adc
xchg
adc
push
push
push
and
aad
lcall
jnp
sbb
or
hlt
test
mov
mov
cmp
roll
sti
cmp
adc
pop
shll
pop
clc
pop
addr16
mov
cmp
adc
in
ja
cld
scas
xor
sub
cmp
xor
sbb
roll
jecxz
sbb
and
adc
pop
sub
cmp
fnstsw
mov
mov
jno
imul
popf
jecxz
sbb
adc
mov
add
shr
push
jle
stc
out
popa
pop
mov
xchg
cmc
insl
ret
mov
js
into
stos
xchg
push
jbe
xor
das
dec
mov
sti
sub
out
repz
test
lock
lods
aad
pop
mov
daa
gs
add
shlb
dec
adc
xor
jae
aaa
cmpsb
inc
in
aam
mov
or
dec
xor
push
push
xchg
into
cmpsl
jns
push
xchg
mov
mov
out
cmp
mov
popf
jb
add
sub
cmpsb
dec
lods
sbb
xor
imul
jmp
pop
loop
mov
mov
pusha
js
mov
jg
add
xor
lods
mov
jns
inc
cmp
adc
in
adc
xchg
nop
adcl
out
mov
popf
xchg
cmp
inc
cmc
negb
shll
cmpsb
data16
hlt
and
lret
xchg
sbb
loopne
jbe
jae
scas
push
test
pop
std
sub
ss
sbb
jecxz
sbb
mov
mov
pop
mov
dec
aas
fs
ja
sbb
adc
or
xor
int3
mov
iret
sbb
pop
xrelease
out
push
loopne
out
fwait
sbb
pushf
aaa
xchg
bnd
jns
rorb
mov
sub
jb
arpl
mov
push
xchg
subl
jle
push
notb
jle
cmp
out
mov
push
adc
mov
decb
jmp
shll
mov
outsl
cwtl
out
fnstsw
mov
lret
jo
inc
sbb
jp
test
daa
shr
ret
repnz
mov
test
mov
cmp
call
loop
mov
jb,pt
inc
outsl
inc
cli
sbbl
dec
sbb
mov
mov
lcall
push
movsl
shl
cmpsl
and
imul
xchg
stc
addr16
mov
dec
xchg
ret
fdivp
adc
lea
dec
sahf
add
mov
jae
ret
jae
and
pop
lock
std
lock
or
sub
ror
cmp
push
and
jge
out
sahf
out
cltd
outsb
push
push
std
jmp
in
dec
movsb
repz
jg
push
and
rclb
jp
sub
jbe
bound
jo
dec
out
add
mov
scas
inc
cmp
shr
je
call
cmp
xchg
xor
mov
cmp
leave
jmp
inc
je
pop
adc
mov
xor
pop
pusha
les
in
mov
cld
add
int3
dec
xchg
mov
sbb
or
jmp
lret
dec
ljmp
cmp
mov
jp
je,pn
pop
dec
repz
ret
in
xchg
dec
neg
xor
loop
cwtl
ljmp
sub
mov
jle
push
test
mov
jae
dec
shlb
ficoml
cltd
xchg
scas
sbb
pop
dec
mov
mov
fstl
fildll
daa
or
adc
sbb
cmp
rolb
mov
test
cmpsb
jge
in
mov
mov
in
or
xor
mov
fwait
jmp
ret
mov
addr16
xchg
lcall
cmpsl
in
pop
mov
repz
mov
cmp
daa
leave
popf
enter
jno
repz
sub
hlt
rorl
fists
movsl
rolb
cmp
test
pop
and
xchg
sbb
jp
dec
inc
add
sub
mov
xlat
xchg
outsb
xchg
dec
out
xchg
add
rorl
inc
xorb
mov
sub
cmp
xor
lahf
fmuls
out
mov
mov
cmpsl
inc
mov
inc
adc
sbb
adc
insl
jle
mov
push
push
std
jno
in
sbb
adc
mov
clc
popf
push
adc
push
popf
aam
cltd
pop
out
das
dec
and
lcall
negb
inc
loopne
xchg
mov
xorl
subb
call
mov
cmp
pop
inc
mov
mov
sti
lret
lret
sti
fucomi
sub
cmp
or
sbb
imul
dec
jnp
imul
fwait
stos
jmp
sti
lret
lret
sti
fucomi
sub
cmp
or
sbb
imul
dec
jnp
imul
fwait
stos
jmp
sti
lret
lret
sti
fucomi
sub
cmp
or
sbb
imul
dec
jnp
imul
fwait
stos
jmp
sti
lret
lret
sti
fldt
sub
cmp
sbb
repz
test
in
mov
add
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
das
pop
cmp
or
sbb
insb
mov
insb
jb
loopne
pop
je
pop
pushf
pop
in
sub
cmp
sbb
sbb
cmp
pusha
enter
test
mov
lods
push
js
push
cld
call
xchg
icebp
into
clc
sahf
rol
shll
mov
enter
in
stc
pop
xchg
push
cwtl
pop
sbbb
call
jne
push
push
ja
jmp
repz
test
hlt
fadds
mov
mov
inc
and
inc
roll
adc
enter
pusha
pop
adc
and
pop
jns
jns
or
cld
outsl
je
in
mov
cmp
sbb
mov
lock
mov
pop
lods
cmp
adc
int
fdivl
shlb
sbb
cmpl
fcom
cltd
mov
aas
js
or
cld
mov
or
out
out
sbb
xchg
xchg
pop
mov
imul
popa
jnp
dec
int3
neg
or
push
or
sbb
mov
cli
subl
lods
inc
movsb
xor
das
decb
fdivrl
dec
clc
js
flds
adc
cmp
pop
cmc
lods
add
add
sbb
xchg
imul
pop
clc
jle
jge
add
in
or
lret
adc
sbb
xchg
push
movsl
fs
jge
test
dec
lods
aas
les
mov
push
pushf
pop
in
sub
cmp
or
sbb
cmp
or
sbb
insb
test
mov
lods
push
pushf
pop
in
sub
cmp
or
sbb
lcall
xchg
xchg
frstor
xor
jo
decb
out
ret
jno
sbb
adc
and
sub
cmpsb
jle
addl
dec
test
scas
push
cmp
pusha
adc
pop
mov
test
cmpsl
rorl
lcall
mov
adc
push
lret
sub
add
push
inc
cwtl
aaa
stos
bound
stos
aas
sahf
xchg
out
mov
xor
in
es
or
insl
repnz
mov
jnp
test
pop
xchg
jg
sbb
aaa
mov
and
push
add
inc
inc
jo
fmull
cmc
mov
dec
mov
subl
adc
mov
ljmp
sub
in
daa
ja
lret
pusha
rcr
push
sbb
cmp
repz
and
in
xor
adc
daa
and
cmp
pusha
dec
es
sub
cmpsl
jecxz
or
mov
and
adc
dec
mov
mov
arpl
jp
mov
lods
subl
hlt
cmpsb
sbb
mov
cmp
jae
fcmove
xor
call
enter
insl
cmpsl
adc
shll
pop
rolb
movsb
jns
sub
push
aam
in
sub
and
pusha
or
adc
outsl
sahf
roll
push
test
jg
adc
xchg
popl
lahf
xchg
imul
lahf
in
arpl
lods
xchg
mov
sub
push
inc
in
xor
aas
push
jle
lahf
mov
outsl
inc
lret
cwtl
dec
in
dec
and
xchg
jno
mov
into
cmc
mov
inc
adcb
cmc
pusha
pushl
push
mov
data16
cmp
mov
add
rcrl
sub
pop
inc
and
ret
mov
rclb
test
inc
xchg
mov
decl
mov
ljmp
daa
test
mov
xchg
push
xchg
cmp
xchg
push
mov
insl
stc
repz
sbb
lahf
and
scas
fmull
aaa
mov
addb
jbe
jnp
fisubs
xorl
inc
js
mov
or
rcr
pop
jge
rol
and
cs
mov
cs
ja
inc
hlt
test
adc
in
out
je
jae
fcompl
jbe
icebp
dec
lret
outsl
ret
cmpsl
xchg
daa
test
mov
pop
cmp
test
jae
adc
and
cli
or
pusha
bnd
ss
sbb
int
pop
imul
jb
sarb
xlat
sahf
mov
pop
and
mov
push
jecxz
and
jno
into
inc
fldcw
ss
aad
fnstcw
cmp
and
mov
dec
fstpt
push
xchg
mov
sbb
push
and
sub
enter
mov
sahf
jns
xor
jnp
mov
mov
xchg
pushf
movsb
fstpt
dec
jnp
mov
ds
cmp
hlt
testl
popf
sti
out
je
enter
fdivr
outsl
fstpl
or
or
xor
xor
cmpsl
cltd
pop
adc
sbbl
addr16
lods
in
mov
or
push
lahf
aas
lret
out
add
cmc
lods
jne
inc
and
sub
xchg
ret
dec
out
jecxz
xchg
push
enter
sti
cs
movsb
mov
cs
mov
ljmp
pop
pop
mov
sbb
scas
pop
cld
aas
std
xor
rcl
cmp
adc
push
je
push
mov
das
push
mov
sub
mov
rorl
pop
aad
into
add
pop
dec
inc
xchg
arpl
mov
mov
pop
sarl
sub
add
pop
jnp
movsl
jne
jmp
xchg
pop
add
lret
ds
mov
sub
push
outsb
sbb
mov
push
xor
or
add
fdivl
adc
or
ret
dec
hlt
pop
mov
xchg
lock
push
lds
push
clc
aas
push
inc
int
and
das
fisttps
add
ret
mov
addr16
dec
std
repz
js
test
jle
push
push
fwait
outsb
adc
sub
mov
rorl
jp
add
in
popa
jmp
or
jp
fmull
mov
lret
loopne
aam
shrl
daa
push
xor
in
rcrl
pop
jecxz
inc
call
lea
outsl
push
adc
pusha
movsl
dec
jecxz
rcrl
jo
in
imul
mov
pop
fimull
cmp
out
cmp
pop
xchg
xlat
pushf
fdivrs
jns
jp
pop
daa
popa
push
adc
jp
mov
dec
int3
aam
mov
jg
ret
mov
sub
mov
xchg
idivl
movb
xchg
dec
or
pop
stc
je
loopne
cmp
fsub
inc
addr16
dec
jne
adc
and
cmp
push
mov
push
iret
pop
jns
inc
sbb
cmp
push
and
lods
sub
ds
inc
sbb
push
or
jno
cli
addr16
shrb
pop
loopne
mov
mov
lock
jbe
jg
adcl
sti
mov
call
sbb
pop
mov
repz
jg
or
ficoms
adc
mov
add
push
das
push
cli
push
call
lahf
push
dec
add
aad
lods
or
or
lret
fcmovnu
cmp
mov
and
cs
mov
and
jl
rdtsc
jle
xchg
dec
pop
addr16
mov
sub
out
andb
push
cmp
mov
lcall
sahf
xchg
outsl
add
adc
sarl
gs
outsb
and
pop
sub
or
dec
cmp
mov
faddl
fistl
cs
dec
movsl
and
inc
sbb
stos
mov
in
je
pop
pusha
and
jae
adc
aad
jbe,pn
cmp
sub
addr16
lcall
cli
mov
in
insb
jg
xor
testl
jns
pop
push
inc
sub
add
imul
inc
cmpl
call
ret
lahf
aad
lods
pop
or
cmp
addr16
lock
nop
idivl
cs
jecxz
cmpsl
repz
adcb
out
sub
les
out
mull
clc
lret
jl
fdiv
shl
test
sub
push
scas
cmp
popf
lahf
sbb
fcompp
xchg
pop
pop
leave
hlt
xor
sbb
sub
lahf
inc
and
and
pop
xor
mov
xchg
outsb
fnstcw
rcll
adc
add
pop
testl
arpl
ja
cmp
cltd
cltd
inc
push
les
mov
jae
nop
cltd
mov
xchg
clc
out
inc
sub
addr16
sbb
mov
and
sbb
mov
xchg
das
jno
lock
pop
int3
sub
mov
das
out
ljmp
test
gs
stos
imul
outsl
hlt
jns
dec
fldl
stos
mov
out
mov
inc
jg
cmc
xor
dec
cmpsb
negb
xchg
jge
loopne
int
mov
sbb
sbb
dec
sti
mov
inc
inc
pop
mov
or
add
xor
cmp
mov
xchg
sub
dec
xchg
cmp
mov
and
lods
push
sub
ja
add
add
sbb
dec
mov
rcll
pop
enter
mov
xor
xor
in
stos
bound
pop
orb
subl
ljmp
add
sub
dec
fbstp
aad
int3
add
jnp
cmp
mov
pop
loope
pcmpeqd
and
pop
jge
pop
xor
and
or
loope
jb
mov
ret
xor
xlat
xor
dec
in
andb
dec
in
xor
into
rol
imul
adc
test
lcall
dec
sbb
mov
notl
leave
shr
data16
xchg
mov
sub
fcoml
add
push
dec
dec
insb
flds
jle
xlat
adc
dec
in
in
pusha
insb
pop
push
inc
inc
mov
mov
lods
or
xchg
rorl
dec
jecxz
das
icebp
decb
out
ret
lcall
or
sbb
pop
jae
mov
test
outsl
fimull
fs
aas
fisubrl
push
jge
cmp
and
cwtl
inc
int
fdiv
fidivrs
mov
push
aas
dec
push
dec
push
outsl
cmpsb
cmpsb
push
adc
pop
add
pop
or
div
xor
push
addr16
out
pop
add
cmc
mov
mov
adc
fdivl
out
xchg
lret
fcoms
mov
sbb
add
nop
je
mov
adcl
imulb
jmp
sub
mov
xchg
xor
outsb
jne
test
lret
lods
mov
out
or
cwtl
outsl
jns
xchg
sub
lods
jo
incl
fdivp
lock
out
sbb
aam
orb
sub
xchg
imull
test
fldl
dec
or
ja
sahf
fs
add
cs
fidivs
mov
mov
into
rcrl
imul
xchg
loope
add
aas
pop
and
xchg
or
in
loopne
out
shrb
subb
mov
inc
inc
or
xchg
mov
fldl
mov
fmull
repz
and
lret
or
add
or
inc
mov
ss
vfmadd132pd
lock
sbb
mov
mov
push
outsl
enter
or
xchg
fldenv
mov
add
icebp
adc
les
mov
cmp
mov
dec
cmp
ljmp
lahf
fwait
hlt
ss
ds
stc
dec
stos
mov
jg
enter
inc
and
nop
pop
hlt
inc
jo
cmc
notb
clc
cmpsl
fisttpll
jg
mov
je
mov
in
fsub
in
sbb
aaa
cld
mov
jno
pop
stc
insb
add
cli
icebp
mov
fidivs
push
push
sub
sbbl
stc
xchg
mov
iret
outsl
cli
xchg
dec
pusha
int
push
orb
jl
push
sub
cmp
sbb
in
nop
inc
mov
push
and
ljmp
std
mov
sbb
mov
fnstsw
iret
into
sub
out
add
lret
ljmp
push
push
xchg
adc
mov
xchg
cmc
sahf
add
mov
dec
loop
or
pop
adc
cmp
sarl
inc
mov
and
adc
lcall
cmp
jl
cltd
jne
lret
inc
ud0
out
sti
sti
pop
inc
out
std
daa
adc
or
mov
aad
in
xor
je
les
mov
int
fistps
cmpsb
xchg
pop
xchg
cli
pushf
ret
cmp
sbb
out
sub
loope
dec
fcoml
cwtl
mov
sub
bound
je
outsb
cwtl
pop
mov
std
inc
lcall
and
push
push
clc
pushf
push
push
and
jmp
nop
mov
sub
sti
inc
pop
lahf
pop
dec
dec
adc
jge
push
cmpsl
shll
ret
cmp
sbb
mov
in
pop
ficomps
test
test
xchg
or
xchg
and
ss
aaa
and
jg
rorb
sub
mov
ror
jb
jno
dec
sub
and
popa
mov
push
or
int3
lret
mov
sub
inc
push
and
push
cs
insw
shlb
cmpsl
sub
mov
xchg
into
mov
add
xchg
xchg
aam
mov
testb
add
scas
jns
add
mov
push
mov
mov
ljmp
sbb
mov
pop
in
orb
aad
clc
icebp
out
cmp
loope
js
jmp
jb
mov
mov
loop
sbb
fdivrl
dec
stc
outsl
push
jno
mov
or
adc
mov
sbb
lods
ret
push
paddusw
cmpsb
fs
xchg
pushf
dec
mov
add
mov
rclb
mov
pop
jmp
idiv
jae
test
test
mov
and
cmc
test
lods
lret
mov
adc
call
inc
mov
cmpsb
cmp
cmpsb
mov
pop
ljmp
xlat
jae
mov
inc
mov
mov
cmp
or
clc
lahf
push
mov
shrb
mov
mov
aas
out
or
jp
sub
pop
dec
popa
and
loop
pop
sti
jmp
mov
test
rcrl
push
adc
adc
adc
and
and
mov
dec
push
aad
jl
fcoml
js
sti
add
pop
pxor
popf
test
gs
repz
sbb
sub
mov
imulb
jno
lods
faddl
xor
or
in
mov
or
outsl
cmp
leave
adc
xor
sbb
pop
inc
int3
addr16
sub
adc
xor
mov
xchg
ja
sub
shlb
jmp
js
loopne
jecxz
shl
cmpsl
adc
lcall
inc
pusha
lahf
outsl
push
jns
int3
or
push
pop
xchg
mov
lcall
sub
and
dec
add
mov
inc
sahf
rorl
adcl
add
js
add
inc
aam
dec
dec
jg
adc
iret
cmp
jnp
mov
rolb
push
mov
add
ret
lcall
lods
cs
push
xor
mov
xchg
negb
mov
cs
push
jo
cmp
xor
in
adc
adc
xchg
mov
fcomi
push
jg
loope
fistps
icebp
pop
adc
scas
xchg
and
je
fmul
out
int3
adc
scas
leave
cmp
ljmp
sub
shrl
mov
das
pop
and
ljmp
js
jo
cld
rcl
ret
mov
xor
or
fidivl
mov
imul
add
rorb
in
xor
int3
xchg
orl
leave
mov
adc
push
cmp
jmp
inc
test
push
lret
adc
cmp
add
xchg
loopne
xchg
or
insl
std
push
and
sahf
sub
inc
outsl
sahf
inc
xchg
push
jecxz
inc
fwait
rcrb
aas
push
jmp
cmp
add
adc
scas
pop
addr16
xchg
cmc
jns
test
pop
fcomps
insl
lret
outsl
inc
xor
pushf
mov
movsb
insl
dec
or
jl
sti
stos
addr16
loopne
jns
jge
cmp
idivb
mov
fiadds
jne
notl
loope
iret
cmp
pop
adc
jle
add
push
arpl
repnz
and
adc
mulb
sti
mov
add
shll
xchg
lret
cmp
insb
jns
cmp
loope
sub
push
and
imul
gs
scas
shlb
lods
mov
or
shr
sbb
roll
cmc
sti
lock
xchg
cmp
aad
inc
and
cmovae
mov
std
mov
cmp
setl
sar
cltd
aam
inc
inc
rcll
adc
jecxz
hlt
cmp
hlt
fildl
test
jno
insl
cmp
inc
sub
xor
add
push
pusha
out
sbb
sub
std
mov
fwait
sbb
mov
pop
push
xchg
jecxz
pop
cli
jle
lods
jbe
mov
movsb
or
stos
stc
outsb
nop
sbb
dec
jle
jne
inc
cld
pop
fdivs
stos
and
adc
shl
and
fldl
xor
nop
inc
sbb
fidivrs
jmp
sti
mov
jns
pushf
hlt
mov
jb
jmp
mov
xchg
adc
xchg
pusha
jb
cmp
imul
cmp
xor
in
inc
ret
inc
in
sub
dec
addr16
push
mov
ret
out
mov
inc
aad
mov
inc
pusha
out
enter
sahf
sbb
mov
fisttpll
xor
mov
inc
jmp
test
xchg
and
mov
push
adcl
or
sub
je
shrl
xchg
and
or
inc
outsl
or
sti
lock
or
aad
sbb
int3
xorb
das
mov
popa
inc
cmpl
sahf
testb
pop
inc
cmp
mull
xchg
xchg
pop
dec
nop
sar
aaa
xchg
adc
jmpw
subb
call
leave
mov
sahf
in
cmpl
or
add
xor
fistl
add
adc
inc
mov
outsb
lock
sbb
dec
adc
inc
cmp
cmp
mov
dec
pop
pop
movsl
xchg
call
xor
fiadds
inc
jbe
mov
mov
and
pop
pushf
inc
iret
mov
ret
sub
cmp
pop
cltd
xchg
mov
xor
push
pop
je
inc
xchg
pop
cmp
sbb
jns
daa
jmp
movsl
mov
int
cltd
sahf
inc
sub
jbe
xchg
insl
mov
rcrl
aas
sbb
std
mov
in
lods
jb
call
shlb
sarl
jo
test
in
inc
mov
mov
cmpsb
jb
sbbl
lret
mov
mov
push
imul
je
imull
insb
mov
mov
aas
xchg
mov
rclb
push
test
ljmp
addr16
jo
add
jge
out
jmp
xor
xor
or
ds
add
xchg
clc
cld
push
movsl
ja
arpl
and
cltd
iret
das
mov
inc
mov
xchg
xchg
sbb
add
pop
xchg
pop
cmp
mov
flds
pushf
add
mov
jbe
inc
data16
pop
imul
or
pop
repz
cmp
xchg
push
mov
jmp
xor
cmp
ret
sbb
fmuls
mov
inc
jmp
sbb
shrb
mov
and
fidivrl
mov
outsl
mov
mov
pop
lock
jae
sbb
icebp
add
fisubs
das
out
jecxz
push
scas
pop
das
push
sbb
adc
xchg
outsl
into
sbb
mov
mov
cmp
cli
push
out
xor
xor
lods
dec
jle
movsb
ret
sbb
push
push
shlb
dec
and
mov
xor
ret
adc
aam
push
faddl
or
movsl
adc
imul
rclb
sbb
lret
adc
rcrb
sub
or
dec
sub
and
int3
mov
out
stc
daa
or
push
xchg
xor
inc
movsb
stos
js
imul
cmp
and
cltd
data16
cmp
cmp
and
sub
ret
push
bnd
or
cs
pop
add
or
inc
in
sub
fmul
into
stos
cs
xchg
mov
pop
sub
push
sub
or
test
jne
xor
in
dec
or
push
jae
pop
les
dec
iret
cmpsb
adc
xchg
inc
pop
gs
or
jmp
jle
jge
ss
out
in
xor
aas
pushf
dec
xor
adcl
mov
repnz
mov
cmpsl
stos
and
test
popf
dec
out
sub
rolb
mov
repz
and
xor
hlt
outsl
sub
rorl
lods
pop
mov
xor
xchg
inc
dec
addl
mov
and
loope
add
pop
mov
push
xchg
xor
xchg
enter
mov
or
xchg
rclb
das
sub
inc
jne
cmp
je
sub
inc
frstor
push
movsb
mov
xlat
mov
cmp
jmp
sub
mov
f2xm1
nop
lock
dec
out
cmc
js
pop
ret
orb
movsb
lods
iret
and
bound
cmp
xlat
aam
popl
mov
sarl
pop
stos
mov
add
psrld
ret
mov
pop
stos
shlb
std
inc
mov
scas
xchg
mov
fbstp
lahf
or
pop
adc
adc
sbb
add
push
pop
loope
jge
stc
jno
push
imul
lcall
daa
push
mov
push
cmp
hlt
xor
pop
xor
add
sbb
in
in
aad
ret
in
adc
mov
mov
test
cmpsl
add
push
out
mov
add
jle
insl
adc
fisubl
sbb
test
push
mov
sbb
test
mov
in
push
jp
jmp
sbb
inc
cwtl
sbb
inc
cwtl
pop
lret
xchg
ret
outsl
mov
xor
clc
dec
daa
sbb
insb
test
mov
lods
push
pushf
pop
in
sub
cmp
or
sbb
cmp
or
sbb
insb
test
mov
lods
push
pushf
pop
in
sub
cmp
or
sbb
or
insb
enter
test
mov
lods
push
pushf
pop
in
sub
cmp
or
cmp
pusha
clc
push
enter
test
mov
lods
push
pushf
das
fwait
mov
and
adc
add
xor
and
pop
shlb
adc
xchg
popf
cmpl
call
jecxz
adc
add
xor
and
push
push
arpl
movsb
cmpl
lcall
adc
add
xor
and
push
jno
pusha
jae
arpl
test
fwait
shl
in
mov
mov
add
insl
push
jg
mov
cwtl
mov
jb
cmc
jnp
lock
pop
adc
jae
aaa
mov
mov
add
mov
xchg
cmpsl
gs
lods
inc
fsubs
addr16
cmpsb
repnz
push
sti
cmp
push
push
jnp
add
dec
loop
addr16
dec
inc
xchg
enter
jbe
movl
push
push
xchg
dec
xchg
inc
ja,pt
adc
repz
loope
in
lods
ja
pop
negl
insb
call
inc
bound
adcl
jo
and
shr
fwait
negb
xlat
cmp
ret
xchg
stos
loop
fisttpll
jmp
addr16
rol
repz
dec
aas
add
xor
and
push
push
arpl
test
mov
shl
ret
loopne
shl
fsts
push
push
insl
inc
jge
push
sbb
and
cmp
rorb
cli
mov
mov
adc
push
arpl
ja
push
arpl
faddl
lcall
jecxz
jp
cmp
and
pop
inc
js
dec
arpl
test
mov
shr
ret
clc
repz
sub
cmp
or
sbb
inc
js
dec
arpl
test
mov
shr
ret
clc
repz
sub
sbb
xchg
xor
inc
and
jb
xor
sbb
lret
sbb
inc
pop
js
adc
and
sbb
bound
xor
dec
aas
sub
cmpsl
pop
cmp
nop
ds
sub
pop
push
js
dec
sbb
in
clc
popa
scas
sub
scas
mov
insl
notl
cmp
cmp
stc
shll
daa
mov
scas
imul
aaa
das
out
inc
adc
xlat
insb
xlat
cmp
enter
shll
or
stc
imul
sahf
pop
dec
or
sbb
popf
mov
or
out
push
or
xchg
das
jmp
fstps
add
popf
out
sub
and
dec
mov
add
adc
cli
xchg
jmp
and
add
lock
mov
jg
ficompl
cmp
add
hlt
pop
cltd
les
mov
data16
lea
mov
stos
cli
mov
or
repnz
outsb
cs
int3
mov
push
adc
sbb
bound
sub
mov
push
push
sarb
jg
cld
pushf
inc
pop
imul
pop
push
mov
jbe
loope
cmp
mov
mov
and
and
jo
fwait
scas
in
out
vmovntpd
push
fistl
test
sbb
xor
sbb
mov
pop
or
push
sbb
scas
lock
sub
call
sbb
xor
bound
aas
pop
push
pop
sub
cmp
push
loope
xor
clc
add
cwtl
cs
arpl
mov
scas
xor
imul
add
out
leave
pop
test
pop
cmp
stos
inc
fbld
out
jno
dec
mov
nop
mov
lret
jle
mov
stos
cmpsb
or
mov
jg
sbb
test
push
jne
addr16
cmp
scas
call
pusha
ljmp
pop
cli
jbe
pop
orl
pop
insl
cmp
test
clc
jo
ljmp
stos
mov
inc
mov
add
rcll
mov
stc
adcl
repnz
out
in
stos
leave
ss
in
mov
leave
out
mov
in
jg
shll
insl
mov
xchg
jb
jns
aad
fmull
enter
stos
mov
and
fs
push
out
or
lcall
mov
cmc
xchg
call
movsb
xchg
lret
shll
dec
or
cmp
pop
jns
cmpsl
and
push
or
out
pop
pop
mov
addr16
lds
dec
mov
fcmovnu
aaa
mov
shl
std
push
loope
sbb
rorb
jo
mov
repnz
scas
cmc
fiadds
into
push
mov
cs
add
push
xchg
or
cltd
push
xchg
adc
arpl
add
mov
push
and
stos
mov
xor
loopne
and
adc
jl
inc
sbb
sub
sub
inc
lods
scas
xchg
inc
lcall
mov
sbb
jae
ret
xchg
xchg
fs
not
jae
das
flds
jecxz
mov
dec
jp
sbb
xchg
xor
dec
push
in
movsl
fwait
push
lret
cmp
jmp
add
inc
mov
jp
mov
lret
mov
call
xchg
cmp
or
push
int3
jae
das
push
mov
aas
or
xchg
ror
int3
int3
xlat
adc
dec
xlat
xchg
push
jne
loope
pop
outsl
inc
sarb
adc
jbe
int
adc
mov
leave
push
fcmovnb
mov
mov
popa
sub
orb
ja
mov
mov
fimull
sahf
xor
js
test
rorl
adc
subb
es
ja
jge
dec
ds
adcb
xchg
sbb
inc
in
pusha
xlat
ja
mov
adc
test
cmpsb
inc
test
jbe
sub
hlt
mov
sub
or
and
mov
dec
cmp
and
fdivs
out
out
add
imulb
push
popf
inc
mov
push
xor
push
inc
popa
cmp
wbinvd
mov
sahf
add
daa
xor
in
and
sbb
insl
adc
ret
push
jge
inc
aad
jnp
gs
jno
fldt
or
decb
fisttpll
pop
dec
push
dec
out
call
in
fistps
rcrb
data16
clc
inc
sti
mov
and
pop
in
sub
mov
add
cwtl
in
dec
sbbl
inc
sahf
inc
sbb
mov
mov
cmp
jnp
jbe
rol
xor
adc
pop
jbe
repz
sbb
or
pop
out
push
rep
add
pop
xor
shrl
lods
into
sub
fucomp
lea
sbb
mov
mov
mov
cmp
es
outsb
out
pop
cmp
cmpsb
add
dec
out
sub
mov
pop
add
cmp
push
shlb
add
sbb
inc
jne
pop
movsb
pop
adc
add
xchg
mov
test
xchg
sahf
call
test
pop
and
ret
outsb
aaa
leave
cmc
sahf
popa
in
xor
jne
aam
or
sti
arpl
rcrl
mov
mov
inc
cmp
das
adc
nop
lds
dec
push
scas
test
inc
cmp
test
dec
mov
dec
rol
ret
mov
loop
or
test
mov
inc
pop
cmp
sarb
ret
push
mov
sub
xchg
in
or
mov
mov
cmp
pop
mov
xchg
ja
test
cmpsb
loopne
pop
push
push
push
inc
push
sub
fisubrl
jp
jae
or
pop
or
out
mov
sbb
lock
pop
mov
ret
icebp
lret
mov
insl
stos
push
shlb
call
ss
js
pop
out
xor
ljmp
xor
and
xchg
test
add
lea
or
mov
imulb
lret
jns
push
mov
xchg
fimuls
mov
cli
mov
pop
pop
lods
jg
mov
mov
cmp
movsb
mov
adc
push
int3
adc
out
adc
sbb
push
mov
out
cmpb
mov
adc
lret
mov
cmc
push
cld
emms
incb
arpl
adc
xchg
or
sub
lods
lds
push
stc
inc
je
imul
cmp
mov
imul
sbb
loop
mov
pusha
jns
add
push
and
leave
mov
sub
dec
scas
insb
dec
xchg
jns
dec
mov
gs
jns
sahf
mov
push
dec
outsl
pop
fcomps
cs
add
gs
enter
adcb
push
xchg
xchg
push
xorb
imul
js
lds
mov
lcall
cltd
sub
xor
or
lods
mov
or
or
addl
jnp
xchg
sub
xor
push
ja
cmc
jle
clc
push
add
lret
dec
and
jbe
mov
and
ret
fwait
jnp
cmp
adc
out
call
imul
jmp
push
ficompl
jp
sub
or
loope
in
lock
mov
into
enter
sbb
jecxz
scas
add
mov
inc
jbe
inc
cmp
push
adc
lods
dec
push
adc
mov
inc
xchg
shlb
mov
xor
mov
adc
and
lods
sbb
and
push
mov
testb
push
fistl
sub
inc
or
push
sbb
aas
push
xor
ret
sti
out
das
jb
lret
je
or
mov
sbb
or
xor
icebp
adc
shll
in
pop
pop
mov
push
pop
inc
inc
mov
int3
mov
sbb
sahf
out
jecxz
xchg
shll
call
inc
push
sbb
xor
dec
push
insl
mov
outsl
dec
adc
cmpsb
lods
out
push
lods
xchg
fisubrl
lods
jge
out
mov
negl
out
rorb
jp
push
cmp
and
xchg
xorb
int3
out
xor
inc
jns
mov
cmp
sbb
roll
popa
sbb
and
pop
jbe
dec
cmp
jp
lds
movsl
sbb
push
xor
sbb
mov
out
inc
sbb
aad
mov
xor
inc
adc
stos
add
xor
mov
jns
xchg
dec
jle
sbb
and
test
pop
leave
cmpsb
fwait
dec
mov
mov
sbb
push
dec
lahf
cmp
orl
popa
jg
mov
test
fcmovb
adc
mov
mov
mov
scas
movsb
sbb
mov
jno
jge,pn
out
push
jecxz
xor
repz
out
xor
and
push
lods
sub
bound
adc
jmp
repnz
bound
aas
xchg
mov
popa
jb
jo
stos
rcll
and
shll
dec
jnp
leave
pop
call
push
ja
rorl
shr
or
push
lods
mov
fucomi
mov
add
cmc
ljmp
fists
faddl
negb
pop
cld
xor
imul
cmpsb
incb
rcll
jnp
mov
lret
test
lods
rcr
mov
out
mov
push
mov
shrl
addr16
arpl
mov
dec
add
mov
loopne
mov
pop
fldt
xchg
dec
ds
push
cs
enter
int3
dec
xchg
add
int
push
xor
mov
outsb
test
or
mov
movsl
cmp
push
xor
jmp
pop
les
pop
pop
lret
in
dec
std
lods
xchg
mov
sub
mov
repz
test
and
sbb
imul
inc
sub
add
movsb
and
xchg
fsubp
lcall
cmpsl
mov
ja
inc
mov
lcall
lahf
and
stc
std
lds
jb
and
mov
pop
popa
mov
aam
movsl
push
pop
jns
jno
fldt
lret
into
jne
jl
ss
pop
into
test
add
sbbl
jmp
sub
mov
std
pop
fwait
mov
mov
lock
push
sub
clc
mov
xchg
xor
push
add
pop
mov
mov
lock
mov
adcl
sti
sub
sahf
ja
fstpl
les
xorl
and
inc
dec
xchg
jg
sub
jle
add
or
push
rolb
cmc
push
add
jmp
mov
roll
mov
out
mov
push
nop
sbb
gs
fisttpl
xchg
inc
popa
ss
add
pop
int3
shll
fmul
nop
inc
jge
push
aad
push
add
lcall
and
imul
fsubl
sub
imul
pop
das
in
xchg
dec
or
pop
mov
test
sahf
insb
outsl
fsubs
outsb
xlat
fcompl
pushl
push
idivb
insb
popf
push
es
push
dec
push
xchg
add
js
inc
inc
mov
lahf
mov
imul
fisubrs
pop
test
jle
pusha
sbb
sbb
adc
inc
xchg
subl
nop
cmp
ret
add
xchg
push
test
jbe
sub
xchg
out
xor
or
mov
aas
xor
jne
push
xor
pop
test
movsl
jecxz
stc
hlt
xchg
mov
pop
ret
rcl
sarb
stos
dec
mov
fsubl
fldl
ret
jge
gs
fdivrl
pusha
in
xor
and
leave
and
lret
loope
jg
adc
nop
repnz
sbb
push
xchg
in
push
hlt
xor
cld
xorb
repnz
imul
sbb
cmpsl
inc
lcall
lahf
inc
out
cmp
cmp
fwait
push
rcrb
cmp
loop
andl
ss
pop
std
insl
mov
idiv
xchg
enter
cmpsl
out
sbb
ja
popf
lods
fnstcw
xchg
push
mov
addr16
mull
sub
xchg
jne
dec
mov
wrmsr
or
int3
dec
sbb
mov
xchg
repnz
push
movsb
sbb
pusha
mov
cmp
lods
fistl
pushf
mov
gs
fcomp
pop
shlb
lea
clc
aad
stos
push
push
ja
stos
adc
jbe
test
fisttps
sbb
pop
divl
inc
add
cmp
stos
jo
push
mov
inc
xor
rcrl
push
shll
mov
sbb
sbb
jmp
sub
adc
jl
repz
loop
outsl
add
in
jecxz
stos
aas
inc
or
xor
imul
push
xchg
sub
lea
sub
or
outsb
sub
mov
mov
popf
xor
mov
fs
lret
std
lahf
cwtl
sub
rcr
dec
dec
sti
lock
mov
cld
fdivrl
ja
pop
cmp
xor
jb
enter
addl
and
and
dec
pushf
xchg
mov
cltd
daa
mov
es
movsl
out
imul
out
test
sti
test
fcmovnbe
lock
push
fadd
xchg
xchg
outsl
xlat
outsb
std
dec
inc
and
ss
js
mov
call
insl
aaa
lcall
pop
jg
stos
in
lock
mov
inc
pusha
imul
je
add
leave
neg
mov
aaa
xchg
sbb
jns
sahf
insb
pop
xchg
cmpsb
mull
movsb
fdivs
cmp
push
lret
imul
lea
inc
adc
mov
repnz
mov
repnz
cli
lock
and
or
cmp
xor
xchg
sbb
inc
inc
mov
xchg
aam
clc
decb
jmp
jl
imul
xor
cmc
mov
push
or
cmp
mov
cli
fcomps
inc
push
cmp
xchg
jge
jno
test
addb
add
dec
pop
lods
add
fwait
cmp
test
lods
jge
in
cli
jmp
mov
out
or
sarl
cmpsl
stos
add
rorl
je
pop
div
push
sahf
sbb
insl
sti
call
xor
scas
jmp
cli
jl
iret
cmc
dec
mov
ds
stc
inc
add
int
sbb
adc
lods
inc
dec
mov
cmpl
sub
xchg
adc
lods
arpl
sbb
mov
mov
mov
clc
mov
jo
sbb
fimull
mov
in
mov
add
add
cmp
sub
les
les
jg
mov
outsb
sbb
dec
in
xor
xchg
mov
sti
outsl
mov
push
sar
pop
divl
in
and
pop
jne
add
push
add
aad
fdivs
xchg
enter
clc
jl
cmp
jecxz
ret
pop
roll
push
pextrw
mov
inc
sti
xor
mov
mov
jbe
nop
mov
cmp
jle
or
je
insl
bound
hlt
retw
icebp
mov
and
jecxz
fnstcw
ficoml
mov
cmp
jbe
pop
outsb
jo
retw
les
movsb
cmp
xchg
inc
and
cmp
adc
dec
popa
add
pusha
lods
in
cld
or
in
dec
lahf
xor
fdivr
pop
gs
and
aaa
insb
inc
lds
lret
jp
cld
cvttps2pi
jns
sbb
xor
mov
jmp
mov
push
jno
push
jne
scas
xor
mov
scas
mov
test
adc
popa
add
pop
mov
icebp
pusha
shlb
xor
mull
movsb
sahf
lods
mov
je
sbb
ror
push
sbb
and
adc
add
sub
push
cmp
in
jmp
dec
inc
aaa
dec
inc
mov
mov
sbb
mov
push
xor
leave
push
test
or
sarl
sbb
adc
sub
scas
sub
sub
mov
push
inc
mov
call
xor
cmc
aam
xor
push
or
pop
int3
inc
aas
and
and
pop
cmpsb
lods
enter
idivl
adc
sub
dec
adc
push
push
aaa
mov
repnz
ficoms
jge
adc
inc
mov
mov
jnp
loopne
stos
mov
roll
mov
test
les
test
aaa
es
out
call
xor
pusha
daa
lcall
fsts
cmp
adc
mov
push
pop
xor
inc
lret
xor
push
nop
mov
dec
adc
push
add
daa
icebp
push
jmpw
sub
fs
popl
jp
popa
push
dec
cmpsl
ficoml
insl
dec
clc
push
lret
jmp
mov
jl
int
sub
lret
pusha
pop
dec
and
jno
dec
cmp
mov
into
sti
add
enter
clc
fcmovu
push
inc
out
mov
sbb
ficoml
push
mov
ret
sbb
dec
adc
mov
xor
mov
inc
push
outsb
pop
push
leave
lods
in
dec
inc
into
mov
loopne
out
xchg
mov
loop
je
pop
add
cmp
inc
shll
das
mov
imul
fwait
iret
cmp
outsb
cli
test
test
out
call
dec
rorl
stos
pop
add
xor
or
shl
or
nop
stos
sub
xor
dec
mov
inc
in
int
cmpb
and
mov
dec
cmp
sub
xchg
add
add
push
stc
jbe
lods
test
adc
xchg
inc
jg
mov
jne
int
xchg
shrb
out
bound
clc
test
push
adcl
lods
sarl
jns
test
lahf
adc
pop
push
push
les
out
pop
fstps
pop
dec
jb
mov
add
jp
sti
in
movsb
daa
mov
and
fiaddl
and
mov
repnz
xor
add
sbb
and
and
fsubl
fwait
jle
cwtl
mov
inc
les
rcll
adc
lret
stc
cmp
cltd
pop
cmp
jl
fistpll
fistl
xorb
adc
sub
int3
push
lcall
and
xchg
xchg
jno
out
gs
sbb
and
icebp
or
cmpsl
fisubrs
mov
pop
sub
xchg
fcmovnb
inc
dec
xchg
lock
movsl
jmp
pop
aas
cmp
lret
pusha
test
and
mov
push
insl
insl
cli
scas
xor
cmpsb
les
ljmp
pop
scas
mov
or
dec
add
lds
jb,pn
sahf
hlt
sbb
lret
stos
fisubrs
or
insl
jb
push
push
bound
adc
int3
insl
fstl
xchg
mov
shrl
fisubl
xchg
inc
int3
pop
std
pusha
inc
js
sbbl
or
jnp
stos
or
pop
dec
xor
call
sbb
cmp
dec
in
scas
push
gs
es
dec
subb
mov
jb
xchg
movsb
cwtl
out
mov
push
lods
adc
xchg
hlt
ss
push
mov
call
add
cmp
pop
inc
fstpl
cmp
sub
mov
add
mov
sub
mov
lret
cmp
or
cmp
nop
jnp
pop
xor
push
push
mov
cmp
hlt
je
out
jno
sub
cmp
in
lods
jl
cmp
pop
bound
aas
jg
js
inc
out
popa
pop
loop
inc
mov
push
call
dec
js
insl
popa
and
insl
fcomps
xchg
jmp
aaa
pop
sahf
mov
popf
jnp
adc
stc
stos
loopne
movsl
imul
es
stos
xchg
or
jle
and
addb
sub
mov
scas
shrb
xchg
cmpsl
push
arpl
out
ljmp
cs
push
jnp
jle
inc
int
add
xchg
enter
adc
add
cmc
das
idivl
or
push
or
sbb
push
push
mov
test
lea
cmp
inc
sahf
js
sbb
js
mov
popf
mov
fidivrl
mov
dec
ret
loope
sub
pop
mov
not
imul
xlat
int3
add
sbb
sarb
add
aaa
scas
sarl
lock
mov
rorb
and
hlt
addr16
outsl
rorl
pop
cmpsb
stc
fxam
movsl
mov
sbb
adc
rep
lock
adc
out
cmp
mov
pop
pop
and
sbb
and
push
push
arpl
test
mov
shr
ret
clc
repz
sub
cmp
or
sbb
inc
js
dec
arpl
test
mov
shr
ret
clc
repz
sub
cmp
or
sbb
inc
js
dec
arpl
test
mov
shr
ret
clc
repz
jecxz
adc
cmp
or
sbb
inc
js
dec
arpl
sbb
dec
xchg
sbb
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
cld
ljmp
mov
xchg
pop
xor
enter
push
or
add
add
or
add
add
add
xchg
add
add
add
add
pop
add
mov
mov
cmp
and
add
int3
add
add
add
add
add
add
push
add
add
jl
mov
adc
and
mov
cmp
jae
push
add
add
add
mov
add
inc
add
add
add
mov
insb
add
add
adc
add
add
add
add
add
xchg
add
add
add
add
aad
push
add
add
add
add
jl
int3
add
add
add
add
add
add
add
mov
inc
add
add
dec
add
add
add
stos
add
add
sbb
flds
mov
add
add
jns
add
add
add
or
filds
int
or
xchg
add
add
adc
mov
jns
mov
add
add
add
add
mov
add
add
aaa
add
add
jb
roll
cltd
add
dec
add
add
add
add
add
add
add
add
cwtl
add
add
add
add
mov
add
pusha
add
add
addb
add
jae
cltd
add
add
add
add
stos
add
sbb
dec
add
fiadds
movsb
add
add
and
int3
add
add
add
add
add
mov
add
adc
add
xor
add
add
add
mov
jae
bound
sahf
add
add
add
aaa
add
sbb
loope
xlat
add
or
add
stc
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
lldt
sub
filds
xor
xchg
add
add
add
add
add
lcall
add
add
dec
add
add
incb
sbb
and
cld
add
add
add
add
add
cmp
add
add
add
insl
add
add
add
arpl
mov
add
insb
add
add
cmp
add
add
add
add
add
add
dec
add
add
jmp
add
mov
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
repnz
add
add
add
add
add
add
add
pop
add
add
add
add
and
cmpsl
add
add
imul
add
hlt
add
cmp
int
addb
add
add
pop
add
add
add
add
add
lods
add
add
add
or
xchg
or
xchg
dec
fwait
lcall
mov
dec
mov
lret
mov
int3
stos
pop
scas
jno
faddp
mov
leave
push
push
cmp
mov
loope
mov
mov
jnp
dec
add
xchg
adc
cwtl
and
pop
mov
mov
jb
movsl
ja
xor
lahf
mov
insb
push
into
rcrl
les
arpl
rcll
xor
push
cltd
mov
xchg
aas
adc
arpl
popa
dec
rcrb
js
dec
outsl
add
and
sub
adc
lods
jae
insb
and
out
sbb
stos
adc
ds
sarl
mov
ds
jo
ret
cwtl
and
cld
inc
ret
push
xor
xor
ss
sbb
dec
sbb
popf
xchg
aad
in
xorb
nop
dec
bound
aam
xchg
xchg
mov
mov
test
sbb
mov
mov
aaa
pop
lret
or
sahf
lods
ljmp
pop
mov
data16
movsl
icebp
daa
nop
ss
xchg
lods
mov
mov
lds
aad
test
dec
push
fimuls
mov
jo
test
adcl
test
dec
ret
lret
and
cmp
roll
xor
enter
sbb
call
adc
or
dec
dec
cli
sahf
dec
mov
leave
ret
xor
xor
int
xchg
mov
and
jnp
clc
cmp
mov
stos
imul
std
dec
test
sub
or
mov
in
mov
fs
add
cmp
add
xlat
pop
out
xor
les
ja
jecxz
xlat
and
ds
pusha
out
sbb
loop
inc
fwait
jecxz
pop
xchg
push
jecxz
std
add
adc
hlt
out
jmp
mov
sahf
ret
inc
mov
dec
movsb
mov
push
popf
imul
xor
fisubrl
es
inc
test
pop
imul
xchg
ljmp
movsb
push
jg
push
cmp
xor
fimull
add
mov
xchg
mov
xor
shll
into
sub
pop
fwait
push
mov
fcomps
xchg
jmp
lret
xchg
movsl
sbb
testb
outsb
pusha
ret
aad
or
outsl
ds
add
inc
sbb
sub
push
pop
dec
sbb
push
mov
lods
mov
outsb
push
mov
cwtl
or
jle
sub
add
inc
aas
cld
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
